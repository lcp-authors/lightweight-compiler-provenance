
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libman-2.9.0.so_clang_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

000000000000a888 <.init>:
    a888:	stp	x29, x30, [sp, #-16]!
    a88c:	mov	x29, sp
    a890:	bl	b950 <__fxstatat@plt+0x10>
    a894:	ldp	x29, x30, [sp], #16
    a898:	ret

Disassembly of section .plt:

000000000000a8a0 <__gmon_start__@plt-0x20>:
    a8a0:	stp	x16, x30, [sp, #-16]!
    a8a4:	adrp	x16, 5f000 <vasnprintf@@Base+0x1ce4c>
    a8a8:	ldr	x17, [x16, #4088]
    a8ac:	add	x16, x16, #0xff8
    a8b0:	br	x17
    a8b4:	nop
    a8b8:	nop
    a8bc:	nop

000000000000a8c0 <__gmon_start__@plt>:
    a8c0:	adrp	x16, 60000 <__gmon_start__>
    a8c4:	ldr	x17, [x16]
    a8c8:	add	x16, x16, #0x0
    a8cc:	br	x17

000000000000a8d0 <__cxa_finalize@plt>:
    a8d0:	adrp	x16, 60000 <__gmon_start__>
    a8d4:	ldr	x17, [x16, #8]
    a8d8:	add	x16, x16, #0x8
    a8dc:	br	x17

000000000000a8e0 <strlen@plt>:
    a8e0:	adrp	x16, 60000 <__gmon_start__>
    a8e4:	ldr	x17, [x16, #16]
    a8e8:	add	x16, x16, #0x10
    a8ec:	br	x17

000000000000a8f0 <xrealloc@plt>:
    a8f0:	adrp	x16, 60000 <__gmon_start__>
    a8f4:	ldr	x17, [x16, #24]
    a8f8:	add	x16, x16, #0x18
    a8fc:	br	x17

000000000000a900 <strcpy@plt>:
    a900:	adrp	x16, 60000 <__gmon_start__>
    a904:	ldr	x17, [x16, #32]
    a908:	add	x16, x16, #0x20
    a90c:	br	x17

000000000000a910 <__assert_fail@plt>:
    a910:	adrp	x16, 60000 <__gmon_start__>
    a914:	ldr	x17, [x16, #40]
    a918:	add	x16, x16, #0x28
    a91c:	br	x17

000000000000a920 <do_cleanups_sigsafe@plt>:
    a920:	adrp	x16, 60000 <__gmon_start__>
    a924:	ldr	x17, [x16, #48]
    a928:	add	x16, x16, #0x30
    a92c:	br	x17

000000000000a930 <free@plt>:
    a930:	adrp	x16, 60000 <__gmon_start__>
    a934:	ldr	x17, [x16, #56]
    a938:	add	x16, x16, #0x38
    a93c:	br	x17

000000000000a940 <xnrealloc@plt>:
    a940:	adrp	x16, 60000 <__gmon_start__>
    a944:	ldr	x17, [x16, #64]
    a948:	add	x16, x16, #0x40
    a94c:	br	x17

000000000000a950 <xnmalloc@plt>:
    a950:	adrp	x16, 60000 <__gmon_start__>
    a954:	ldr	x17, [x16, #72]
    a958:	add	x16, x16, #0x48
    a95c:	br	x17

000000000000a960 <sigaction@plt>:
    a960:	adrp	x16, 60000 <__gmon_start__>
    a964:	ldr	x17, [x16, #80]
    a968:	add	x16, x16, #0x50
    a96c:	br	x17

000000000000a970 <memset@plt>:
    a970:	adrp	x16, 60000 <__gmon_start__>
    a974:	ldr	x17, [x16, #88]
    a978:	add	x16, x16, #0x58
    a97c:	br	x17

000000000000a980 <sigemptyset@plt>:
    a980:	adrp	x16, 60000 <__gmon_start__>
    a984:	ldr	x17, [x16, #96]
    a988:	add	x16, x16, #0x60
    a98c:	br	x17

000000000000a990 <_exit@plt>:
    a990:	adrp	x16, 60000 <__gmon_start__>
    a994:	ldr	x17, [x16, #104]
    a998:	add	x16, x16, #0x68
    a99c:	br	x17

000000000000a9a0 <sigaddset@plt>:
    a9a0:	adrp	x16, 60000 <__gmon_start__>
    a9a4:	ldr	x17, [x16, #112]
    a9a8:	add	x16, x16, #0x70
    a9ac:	br	x17

000000000000a9b0 <sigprocmask@plt>:
    a9b0:	adrp	x16, 60000 <__gmon_start__>
    a9b4:	ldr	x17, [x16, #120]
    a9b8:	add	x16, x16, #0x78
    a9bc:	br	x17

000000000000a9c0 <getpid@plt>:
    a9c0:	adrp	x16, 60000 <__gmon_start__>
    a9c4:	ldr	x17, [x16, #128]
    a9c8:	add	x16, x16, #0x80
    a9cc:	br	x17

000000000000a9d0 <kill@plt>:
    a9d0:	adrp	x16, 60000 <__gmon_start__>
    a9d4:	ldr	x17, [x16, #136]
    a9d8:	add	x16, x16, #0x88
    a9dc:	br	x17

000000000000a9e0 <abort@plt>:
    a9e0:	adrp	x16, 60000 <__gmon_start__>
    a9e4:	ldr	x17, [x16, #144]
    a9e8:	add	x16, x16, #0x90
    a9ec:	br	x17

000000000000a9f0 <getenv@plt>:
    a9f0:	adrp	x16, 60000 <__gmon_start__>
    a9f4:	ldr	x17, [x16, #152]
    a9f8:	add	x16, x16, #0x98
    a9fc:	br	x17

000000000000aa00 <strcmp@plt>:
    aa00:	adrp	x16, 60000 <__gmon_start__>
    aa04:	ldr	x17, [x16, #160]
    aa08:	add	x16, x16, #0xa0
    aa0c:	br	x17

000000000000aa10 <vfprintf@plt>:
    aa10:	adrp	x16, 60000 <__gmon_start__>
    aa14:	ldr	x17, [x16, #168]
    aa18:	add	x16, x16, #0xa8
    aa1c:	br	x17

000000000000aa20 <__errno_location@plt>:
    aa20:	adrp	x16, 60000 <__gmon_start__>
    aa24:	ldr	x17, [x16, #176]
    aa28:	add	x16, x16, #0xb0
    aa2c:	br	x17

000000000000aa30 <strerror@plt>:
    aa30:	adrp	x16, 60000 <__gmon_start__>
    aa34:	ldr	x17, [x16, #184]
    aa38:	add	x16, x16, #0xb8
    aa3c:	br	x17

000000000000aa40 <debug@plt>:
    aa40:	adrp	x16, 60000 <__gmon_start__>
    aa44:	ldr	x17, [x16, #192]
    aa48:	add	x16, x16, #0xc0
    aa4c:	br	x17

000000000000aa50 <pathsearch_executable@plt>:
    aa50:	adrp	x16, 60000 <__gmon_start__>
    aa54:	ldr	x17, [x16, #200]
    aa58:	add	x16, x16, #0xc8
    aa5c:	br	x17

000000000000aa60 <setlocale@plt>:
    aa60:	adrp	x16, 60000 <__gmon_start__>
    aa64:	ldr	x17, [x16, #208]
    aa68:	add	x16, x16, #0xd0
    aa6c:	br	x17

000000000000aa70 <xstrdup@plt>:
    aa70:	adrp	x16, 60000 <__gmon_start__>
    aa74:	ldr	x17, [x16, #216]
    aa78:	add	x16, x16, #0xd8
    aa7c:	br	x17

000000000000aa80 <strchr@plt>:
    aa80:	adrp	x16, 60000 <__gmon_start__>
    aa84:	ldr	x17, [x16, #224]
    aa88:	add	x16, x16, #0xe0
    aa8c:	br	x17

000000000000aa90 <strcspn@plt>:
    aa90:	adrp	x16, 60000 <__gmon_start__>
    aa94:	ldr	x17, [x16, #232]
    aa98:	add	x16, x16, #0xe8
    aa9c:	br	x17

000000000000aaa0 <xstrndup@plt>:
    aaa0:	adrp	x16, 60000 <__gmon_start__>
    aaa4:	ldr	x17, [x16, #240]
    aaa8:	add	x16, x16, #0xf0
    aaac:	br	x17

000000000000aab0 <get_canonical_charset_name@plt>:
    aab0:	adrp	x16, 60000 <__gmon_start__>
    aab4:	ldr	x17, [x16, #248]
    aab8:	add	x16, x16, #0xf8
    aabc:	br	x17

000000000000aac0 <strncmp@plt>:
    aac0:	adrp	x16, 60000 <__gmon_start__>
    aac4:	ldr	x17, [x16, #256]
    aac8:	add	x16, x16, #0x100
    aacc:	br	x17

000000000000aad0 <toupper@plt>:
    aad0:	adrp	x16, 60000 <__gmon_start__>
    aad4:	ldr	x17, [x16, #264]
    aad8:	add	x16, x16, #0x108
    aadc:	br	x17

000000000000aae0 <locale_charset@plt>:
    aae0:	adrp	x16, 60000 <__gmon_start__>
    aae4:	ldr	x17, [x16, #272]
    aae8:	add	x16, x16, #0x110
    aaec:	br	x17

000000000000aaf0 <get_locale_charset@plt>:
    aaf0:	adrp	x16, 60000 <__gmon_start__>
    aaf4:	ldr	x17, [x16, #280]
    aaf8:	add	x16, x16, #0x118
    aafc:	br	x17

000000000000ab00 <fopen@plt>:
    ab00:	adrp	x16, 60000 <__gmon_start__>
    ab04:	ldr	x17, [x16, #288]
    ab08:	add	x16, x16, #0x120
    ab0c:	br	x17

000000000000ab10 <getline@plt>:
    ab10:	adrp	x16, 60000 <__gmon_start__>
    ab14:	ldr	x17, [x16, #296]
    ab18:	add	x16, x16, #0x128
    ab1c:	br	x17

000000000000ab20 <fclose@plt>:
    ab20:	adrp	x16, 60000 <__gmon_start__>
    ab24:	ldr	x17, [x16, #304]
    ab28:	add	x16, x16, #0x130
    ab2c:	br	x17

000000000000ab30 <get_groff_preconv@plt>:
    ab30:	adrp	x16, 60000 <__gmon_start__>
    ab34:	ldr	x17, [x16, #312]
    ab38:	add	x16, x16, #0x138
    ab3c:	br	x17

000000000000ab40 <get_roff_encoding@plt>:
    ab40:	adrp	x16, 60000 <__gmon_start__>
    ab44:	ldr	x17, [x16, #320]
    ab48:	add	x16, x16, #0x140
    ab4c:	br	x17

000000000000ab50 <pipeline_peekline@plt>:
    ab50:	adrp	x16, 60000 <__gmon_start__>
    ab54:	ldr	x17, [x16, #328]
    ab58:	add	x16, x16, #0x148
    ab5c:	br	x17

000000000000ab60 <memmem@plt>:
    ab60:	adrp	x16, 60000 <__gmon_start__>
    ab64:	ldr	x17, [x16, #336]
    ab68:	add	x16, x16, #0x150
    ab6c:	br	x17

000000000000ab70 <strspn@plt>:
    ab70:	adrp	x16, 60000 <__gmon_start__>
    ab74:	ldr	x17, [x16, #344]
    ab78:	add	x16, x16, #0x158
    ab7c:	br	x17

000000000000ab80 <memchr@plt>:
    ab80:	adrp	x16, 60000 <__gmon_start__>
    ab84:	ldr	x17, [x16, #352]
    ab88:	add	x16, x16, #0x160
    ab8c:	br	x17

000000000000ab90 <strcasecmp@plt>:
    ab90:	adrp	x16, 60000 <__gmon_start__>
    ab94:	ldr	x17, [x16, #360]
    ab98:	add	x16, x16, #0x168
    ab9c:	br	x17

000000000000aba0 <xasprintf@plt>:
    aba0:	adrp	x16, 60000 <__gmon_start__>
    aba4:	ldr	x17, [x16, #368]
    aba8:	add	x16, x16, #0x170
    abac:	br	x17

000000000000abb0 <hash_pjw_bare@plt>:
    abb0:	adrp	x16, 60000 <__gmon_start__>
    abb4:	ldr	x17, [x16, #376]
    abb8:	add	x16, x16, #0x178
    abbc:	br	x17

000000000000abc0 <gl_list_create_empty@plt>:
    abc0:	adrp	x16, 60000 <__gmon_start__>
    abc4:	ldr	x17, [x16, #384]
    abc8:	add	x16, x16, #0x180
    abcc:	br	x17

000000000000abd0 <gl_map_create_empty@plt>:
    abd0:	adrp	x16, 60000 <__gmon_start__>
    abd4:	ldr	x17, [x16, #392]
    abd8:	add	x16, x16, #0x188
    abdc:	br	x17

000000000000abe0 <gl_set_create_empty@plt>:
    abe0:	adrp	x16, 60000 <__gmon_start__>
    abe4:	ldr	x17, [x16, #400]
    abe8:	add	x16, x16, #0x190
    abec:	br	x17

000000000000abf0 <atoi@plt>:
    abf0:	adrp	x16, 60000 <__gmon_start__>
    abf4:	ldr	x17, [x16, #408]
    abf8:	add	x16, x16, #0x198
    abfc:	br	x17

000000000000ac00 <open@plt>:
    ac00:	adrp	x16, 60000 <__gmon_start__>
    ac04:	ldr	x17, [x16, #416]
    ac08:	add	x16, x16, #0x1a0
    ac0c:	br	x17

000000000000ac10 <isatty@plt>:
    ac10:	adrp	x16, 60000 <__gmon_start__>
    ac14:	ldr	x17, [x16, #424]
    ac18:	add	x16, x16, #0x1a8
    ac1c:	br	x17

000000000000ac20 <rpl_ioctl@plt>:
    ac20:	adrp	x16, 60000 <__gmon_start__>
    ac24:	ldr	x17, [x16, #432]
    ac28:	add	x16, x16, #0x1b0
    ac2c:	br	x17

000000000000ac30 <close@plt>:
    ac30:	adrp	x16, 60000 <__gmon_start__>
    ac34:	ldr	x17, [x16, #440]
    ac38:	add	x16, x16, #0x1b8
    ac3c:	br	x17

000000000000ac40 <perror@plt>:
    ac40:	adrp	x16, 60000 <__gmon_start__>
    ac44:	ldr	x17, [x16, #448]
    ac48:	add	x16, x16, #0x1c0
    ac4c:	br	x17

000000000000ac50 <fstatfs@plt>:
    ac50:	adrp	x16, 60000 <__gmon_start__>
    ac54:	ldr	x17, [x16, #456]
    ac58:	add	x16, x16, #0x1c8
    ac5c:	br	x17

000000000000ac60 <new_string_list@plt>:
    ac60:	adrp	x16, 60000 <__gmon_start__>
    ac64:	ldr	x17, [x16, #464]
    ac68:	add	x16, x16, #0x1d0
    ac6c:	br	x17

000000000000ac70 <gl_list_iterator@plt>:
    ac70:	adrp	x16, 60000 <__gmon_start__>
    ac74:	ldr	x17, [x16, #472]
    ac78:	add	x16, x16, #0x1d8
    ac7c:	br	x17

000000000000ac80 <gl_list_iterator_next@plt>:
    ac80:	adrp	x16, 60000 <__gmon_start__>
    ac84:	ldr	x17, [x16, #480]
    ac88:	add	x16, x16, #0x1e0
    ac8c:	br	x17

000000000000ac90 <openat@plt>:
    ac90:	adrp	x16, 60000 <__gmon_start__>
    ac94:	ldr	x17, [x16, #488]
    ac98:	add	x16, x16, #0x1e8
    ac9c:	br	x17

000000000000aca0 <xmalloc@plt>:
    aca0:	adrp	x16, 60000 <__gmon_start__>
    aca4:	ldr	x17, [x16, #496]
    aca8:	add	x16, x16, #0x1f0
    acac:	br	x17

000000000000acb0 <gl_map_put@plt>:
    acb0:	adrp	x16, 60000 <__gmon_start__>
    acb4:	ldr	x17, [x16, #504]
    acb8:	add	x16, x16, #0x1f8
    acbc:	br	x17

000000000000acc0 <gl_sortedlist_add@plt>:
    acc0:	adrp	x16, 60000 <__gmon_start__>
    acc4:	ldr	x17, [x16, #512]
    acc8:	add	x16, x16, #0x200
    accc:	br	x17

000000000000acd0 <gl_list_iterator_free@plt>:
    acd0:	adrp	x16, 60000 <__gmon_start__>
    acd4:	ldr	x17, [x16, #520]
    acd8:	add	x16, x16, #0x208
    acdc:	br	x17

000000000000ace0 <gl_map_free@plt>:
    ace0:	adrp	x16, 60000 <__gmon_start__>
    ace4:	ldr	x17, [x16, #528]
    ace8:	add	x16, x16, #0x210
    acec:	br	x17

000000000000acf0 <gl_list_free@plt>:
    acf0:	adrp	x16, 60000 <__gmon_start__>
    acf4:	ldr	x17, [x16, #536]
    acf8:	add	x16, x16, #0x218
    acfc:	br	x17

000000000000ad00 <gl_map_get@plt>:
    ad00:	adrp	x16, 60000 <__gmon_start__>
    ad04:	ldr	x17, [x16, #544]
    ad08:	add	x16, x16, #0x220
    ad0c:	br	x17

000000000000ad10 <strsep@plt>:
    ad10:	adrp	x16, 60000 <__gmon_start__>
    ad14:	ldr	x17, [x16, #552]
    ad18:	add	x16, x16, #0x228
    ad1c:	br	x17

000000000000ad20 <xgetcwd@plt>:
    ad20:	adrp	x16, 60000 <__gmon_start__>
    ad24:	ldr	x17, [x16, #560]
    ad28:	add	x16, x16, #0x230
    ad2c:	br	x17

000000000000ad30 <xzalloc@plt>:
    ad30:	adrp	x16, 60000 <__gmon_start__>
    ad34:	ldr	x17, [x16, #568]
    ad38:	add	x16, x16, #0x238
    ad3c:	br	x17

000000000000ad40 <getuid@plt>:
    ad40:	adrp	x16, 60000 <__gmon_start__>
    ad44:	ldr	x17, [x16, #576]
    ad48:	add	x16, x16, #0x240
    ad4c:	br	x17

000000000000ad50 <geteuid@plt>:
    ad50:	adrp	x16, 60000 <__gmon_start__>
    ad54:	ldr	x17, [x16, #584]
    ad58:	add	x16, x16, #0x248
    ad5c:	br	x17

000000000000ad60 <getgid@plt>:
    ad60:	adrp	x16, 60000 <__gmon_start__>
    ad64:	ldr	x17, [x16, #592]
    ad68:	add	x16, x16, #0x250
    ad6c:	br	x17

000000000000ad70 <getegid@plt>:
    ad70:	adrp	x16, 60000 <__gmon_start__>
    ad74:	ldr	x17, [x16, #600]
    ad78:	add	x16, x16, #0x258
    ad7c:	br	x17

000000000000ad80 <drop_effective_privs@plt>:
    ad80:	adrp	x16, 60000 <__gmon_start__>
    ad84:	ldr	x17, [x16, #608]
    ad88:	add	x16, x16, #0x260
    ad8c:	br	x17

000000000000ad90 <idpriv_temp_drop@plt>:
    ad90:	adrp	x16, 60000 <__gmon_start__>
    ad94:	ldr	x17, [x16, #616]
    ad98:	add	x16, x16, #0x268
    ad9c:	br	x17

000000000000ada0 <getpwnam@plt>:
    ada0:	adrp	x16, 60000 <__gmon_start__>
    ada4:	ldr	x17, [x16, #624]
    ada8:	add	x16, x16, #0x270
    adac:	br	x17

000000000000adb0 <gettext@plt>:
    adb0:	adrp	x16, 60000 <__gmon_start__>
    adb4:	ldr	x17, [x16, #632]
    adb8:	add	x16, x16, #0x278
    adbc:	br	x17

000000000000adc0 <error@plt>:
    adc0:	adrp	x16, 60000 <__gmon_start__>
    adc4:	ldr	x17, [x16, #640]
    adc8:	add	x16, x16, #0x280
    adcc:	br	x17

000000000000add0 <idpriv_temp_restore@plt>:
    add0:	adrp	x16, 60000 <__gmon_start__>
    add4:	ldr	x17, [x16, #648]
    add8:	add	x16, x16, #0x288
    addc:	br	x17

000000000000ade0 <idpriv_drop@plt>:
    ade0:	adrp	x16, 60000 <__gmon_start__>
    ade4:	ldr	x17, [x16, #656]
    ade8:	add	x16, x16, #0x290
    adec:	br	x17

000000000000adf0 <mkdtemp@plt>:
    adf0:	adrp	x16, 60000 <__gmon_start__>
    adf4:	ldr	x17, [x16, #664]
    adf8:	add	x16, x16, #0x298
    adfc:	br	x17

000000000000ae00 <access@plt>:
    ae00:	adrp	x16, 60000 <__gmon_start__>
    ae04:	ldr	x17, [x16, #672]
    ae08:	add	x16, x16, #0x2a0
    ae0c:	br	x17

000000000000ae10 <get_stat_mtime@plt>:
    ae10:	adrp	x16, 60000 <__gmon_start__>
    ae14:	ldr	x17, [x16, #680]
    ae18:	add	x16, x16, #0x2a8
    ae1c:	br	x17

000000000000ae20 <timespec_cmp@plt>:
    ae20:	adrp	x16, 60000 <__gmon_start__>
    ae24:	ldr	x17, [x16, #688]
    ae28:	add	x16, x16, #0x2b0
    ae2c:	br	x17

000000000000ae30 <opendir@plt>:
    ae30:	adrp	x16, 60000 <__gmon_start__>
    ae34:	ldr	x17, [x16, #696]
    ae38:	add	x16, x16, #0x2b8
    ae3c:	br	x17

000000000000ae40 <readdir@plt>:
    ae40:	adrp	x16, 60000 <__gmon_start__>
    ae44:	ldr	x17, [x16, #704]
    ae48:	add	x16, x16, #0x2c0
    ae4c:	br	x17

000000000000ae50 <closedir@plt>:
    ae50:	adrp	x16, 60000 <__gmon_start__>
    ae54:	ldr	x17, [x16, #712]
    ae58:	add	x16, x16, #0x2c8
    ae5c:	br	x17

000000000000ae60 <remove_directory@plt>:
    ae60:	adrp	x16, 60000 <__gmon_start__>
    ae64:	ldr	x17, [x16, #720]
    ae68:	add	x16, x16, #0x2d0
    ae6c:	br	x17

000000000000ae70 <unlink@plt>:
    ae70:	adrp	x16, 60000 <__gmon_start__>
    ae74:	ldr	x17, [x16, #728]
    ae78:	add	x16, x16, #0x2d8
    ae7c:	br	x17

000000000000ae80 <rmdir@plt>:
    ae80:	adrp	x16, 60000 <__gmon_start__>
    ae84:	ldr	x17, [x16, #736]
    ae88:	add	x16, x16, #0x2e0
    ae8c:	br	x17

000000000000ae90 <strstr@plt>:
    ae90:	adrp	x16, 60000 <__gmon_start__>
    ae94:	ldr	x17, [x16, #744]
    ae98:	add	x16, x16, #0x2e8
    ae9c:	br	x17

000000000000aea0 <setenv@plt>:
    aea0:	adrp	x16, 60000 <__gmon_start__>
    aea4:	ldr	x17, [x16, #752]
    aea8:	add	x16, x16, #0x2f0
    aeac:	br	x17

000000000000aeb0 <bindtextdomain@plt>:
    aeb0:	adrp	x16, 60000 <__gmon_start__>
    aeb4:	ldr	x17, [x16, #760]
    aeb8:	add	x16, x16, #0x2f8
    aebc:	br	x17

000000000000aec0 <textdomain@plt>:
    aec0:	adrp	x16, 60000 <__gmon_start__>
    aec4:	ldr	x17, [x16, #768]
    aec8:	add	x16, x16, #0x300
    aecc:	br	x17

000000000000aed0 <__ctype_b_loc@plt>:
    aed0:	adrp	x16, 60000 <__gmon_start__>
    aed4:	ldr	x17, [x16, #776]
    aed8:	add	x16, x16, #0x308
    aedc:	br	x17

000000000000aee0 <fnmatch@plt>:
    aee0:	adrp	x16, 60000 <__gmon_start__>
    aee4:	ldr	x17, [x16, #784]
    aee8:	add	x16, x16, #0x310
    aeec:	br	x17

000000000000aef0 <rpl_regcomp@plt>:
    aef0:	adrp	x16, 60000 <__gmon_start__>
    aef4:	ldr	x17, [x16, #792]
    aef8:	add	x16, x16, #0x318
    aefc:	br	x17

000000000000af00 <rpl_regerror@plt>:
    af00:	adrp	x16, 60000 <__gmon_start__>
    af04:	ldr	x17, [x16, #800]
    af08:	add	x16, x16, #0x320
    af0c:	br	x17

000000000000af10 <malloc@plt>:
    af10:	adrp	x16, 60000 <__gmon_start__>
    af14:	ldr	x17, [x16, #808]
    af18:	add	x16, x16, #0x328
    af1c:	br	x17

000000000000af20 <readlink@plt>:
    af20:	adrp	x16, 60000 <__gmon_start__>
    af24:	ldr	x17, [x16, #816]
    af28:	add	x16, x16, #0x330
    af2c:	br	x17

000000000000af30 <memcpy@plt>:
    af30:	adrp	x16, 60000 <__gmon_start__>
    af34:	ldr	x17, [x16, #824]
    af38:	add	x16, x16, #0x338
    af3c:	br	x17

000000000000af40 <realloc@plt>:
    af40:	adrp	x16, 60000 <__gmon_start__>
    af44:	ldr	x17, [x16, #832]
    af48:	add	x16, x16, #0x340
    af4c:	br	x17

000000000000af50 <_argp_fmtstream_update@plt>:
    af50:	adrp	x16, 60000 <__gmon_start__>
    af54:	ldr	x17, [x16, #840]
    af58:	add	x16, x16, #0x348
    af5c:	br	x17

000000000000af60 <fwrite_unlocked@plt>:
    af60:	adrp	x16, 60000 <__gmon_start__>
    af64:	ldr	x17, [x16, #848]
    af68:	add	x16, x16, #0x350
    af6c:	br	x17

000000000000af70 <memmove@plt>:
    af70:	adrp	x16, 60000 <__gmon_start__>
    af74:	ldr	x17, [x16, #856]
    af78:	add	x16, x16, #0x358
    af7c:	br	x17

000000000000af80 <putc_unlocked@plt>:
    af80:	adrp	x16, 60000 <__gmon_start__>
    af84:	ldr	x17, [x16, #864]
    af88:	add	x16, x16, #0x360
    af8c:	br	x17

000000000000af90 <_argp_fmtstream_ensure@plt>:
    af90:	adrp	x16, 60000 <__gmon_start__>
    af94:	ldr	x17, [x16, #872]
    af98:	add	x16, x16, #0x368
    af9c:	br	x17

000000000000afa0 <vsnprintf@plt>:
    afa0:	adrp	x16, 60000 <__gmon_start__>
    afa4:	ldr	x17, [x16, #880]
    afa8:	add	x16, x16, #0x370
    afac:	br	x17

000000000000afb0 <argp_fmtstream_write@plt>:
    afb0:	adrp	x16, 60000 <__gmon_start__>
    afb4:	ldr	x17, [x16, #888]
    afb8:	add	x16, x16, #0x378
    afbc:	br	x17

000000000000afc0 <flockfile@plt>:
    afc0:	adrp	x16, 60000 <__gmon_start__>
    afc4:	ldr	x17, [x16, #896]
    afc8:	add	x16, x16, #0x380
    afcc:	br	x17

000000000000afd0 <argp_make_fmtstream@plt>:
    afd0:	adrp	x16, 60000 <__gmon_start__>
    afd4:	ldr	x17, [x16, #904]
    afd8:	add	x16, x16, #0x388
    afdc:	br	x17

000000000000afe0 <funlockfile@plt>:
    afe0:	adrp	x16, 60000 <__gmon_start__>
    afe4:	ldr	x17, [x16, #912]
    afe8:	add	x16, x16, #0x390
    afec:	br	x17

000000000000aff0 <argp_fmtstream_set_wmargin@plt>:
    aff0:	adrp	x16, 60000 <__gmon_start__>
    aff4:	ldr	x17, [x16, #920]
    aff8:	add	x16, x16, #0x398
    affc:	br	x17

000000000000b000 <dgettext@plt>:
    b000:	adrp	x16, 60000 <__gmon_start__>
    b004:	ldr	x17, [x16, #928]
    b008:	add	x16, x16, #0x3a0
    b00c:	br	x17

000000000000b010 <argp_fmtstream_printf@plt>:
    b010:	adrp	x16, 60000 <__gmon_start__>
    b014:	ldr	x17, [x16, #936]
    b018:	add	x16, x16, #0x3a8
    b01c:	br	x17

000000000000b020 <argp_fmtstream_set_lmargin@plt>:
    b020:	adrp	x16, 60000 <__gmon_start__>
    b024:	ldr	x17, [x16, #944]
    b028:	add	x16, x16, #0x3b0
    b02c:	br	x17

000000000000b030 <argp_fmtstream_puts@plt>:
    b030:	adrp	x16, 60000 <__gmon_start__>
    b034:	ldr	x17, [x16, #952]
    b038:	add	x16, x16, #0x3b8
    b03c:	br	x17

000000000000b040 <argp_fmtstream_putc@plt>:
    b040:	adrp	x16, 60000 <__gmon_start__>
    b044:	ldr	x17, [x16, #960]
    b048:	add	x16, x16, #0x3c0
    b04c:	br	x17

000000000000b050 <argp_fmtstream_free@plt>:
    b050:	adrp	x16, 60000 <__gmon_start__>
    b054:	ldr	x17, [x16, #968]
    b058:	add	x16, x16, #0x3c8
    b05c:	br	x17

000000000000b060 <exit@plt>:
    b060:	adrp	x16, 60000 <__gmon_start__>
    b064:	ldr	x17, [x16, #976]
    b068:	add	x16, x16, #0x3d0
    b06c:	br	x17

000000000000b070 <fputs_unlocked@plt>:
    b070:	adrp	x16, 60000 <__gmon_start__>
    b074:	ldr	x17, [x16, #984]
    b078:	add	x16, x16, #0x3d8
    b07c:	br	x17

000000000000b080 <argp_state_help@plt>:
    b080:	adrp	x16, 60000 <__gmon_start__>
    b084:	ldr	x17, [x16, #992]
    b088:	add	x16, x16, #0x3e0
    b08c:	br	x17

000000000000b090 <strerror_r@plt>:
    b090:	adrp	x16, 60000 <__gmon_start__>
    b094:	ldr	x17, [x16, #1000]
    b098:	add	x16, x16, #0x3e8
    b09c:	br	x17

000000000000b0a0 <argp_failure@plt>:
    b0a0:	adrp	x16, 60000 <__gmon_start__>
    b0a4:	ldr	x17, [x16, #1008]
    b0a8:	add	x16, x16, #0x3f0
    b0ac:	br	x17

000000000000b0b0 <qsort@plt>:
    b0b0:	adrp	x16, 60000 <__gmon_start__>
    b0b4:	ldr	x17, [x16, #1016]
    b0b8:	add	x16, x16, #0x3f8
    b0bc:	br	x17

000000000000b0c0 <strchrnul@plt>:
    b0c0:	adrp	x16, 60000 <__gmon_start__>
    b0c4:	ldr	x17, [x16, #1024]
    b0c8:	add	x16, x16, #0x400
    b0cc:	br	x17

000000000000b0d0 <strndup@plt>:
    b0d0:	adrp	x16, 60000 <__gmon_start__>
    b0d4:	ldr	x17, [x16, #1032]
    b0d8:	add	x16, x16, #0x408
    b0dc:	br	x17

000000000000b0e0 <_argp_input@plt>:
    b0e0:	adrp	x16, 60000 <__gmon_start__>
    b0e4:	ldr	x17, [x16, #1040]
    b0e8:	add	x16, x16, #0x410
    b0ec:	br	x17

000000000000b0f0 <argp_fmtstream_point@plt>:
    b0f0:	adrp	x16, 60000 <__gmon_start__>
    b0f4:	ldr	x17, [x16, #1048]
    b0f8:	add	x16, x16, #0x418
    b0fc:	br	x17

000000000000b100 <_option_is_end@plt>:
    b100:	adrp	x16, 60000 <__gmon_start__>
    b104:	ldr	x17, [x16, #1056]
    b108:	add	x16, x16, #0x420
    b10c:	br	x17

000000000000b110 <_option_is_short@plt>:
    b110:	adrp	x16, 60000 <__gmon_start__>
    b114:	ldr	x17, [x16, #1064]
    b118:	add	x16, x16, #0x428
    b11c:	br	x17

000000000000b120 <__ctype_tolower_loc@plt>:
    b120:	adrp	x16, 60000 <__gmon_start__>
    b124:	ldr	x17, [x16, #1072]
    b128:	add	x16, x16, #0x430
    b12c:	br	x17

000000000000b130 <last_component@plt>:
    b130:	adrp	x16, 60000 <__gmon_start__>
    b134:	ldr	x17, [x16, #1080]
    b138:	add	x16, x16, #0x438
    b13c:	br	x17

000000000000b140 <_getopt_long_only_r@plt>:
    b140:	adrp	x16, 60000 <__gmon_start__>
    b144:	ldr	x17, [x16, #1088]
    b148:	add	x16, x16, #0x440
    b14c:	br	x17

000000000000b150 <_getopt_long_r@plt>:
    b150:	adrp	x16, 60000 <__gmon_start__>
    b154:	ldr	x17, [x16, #1096]
    b158:	add	x16, x16, #0x448
    b15c:	br	x17

000000000000b160 <fprintf@plt>:
    b160:	adrp	x16, 60000 <__gmon_start__>
    b164:	ldr	x17, [x16, #1104]
    b168:	add	x16, x16, #0x450
    b16c:	br	x17

000000000000b170 <sleep@plt>:
    b170:	adrp	x16, 60000 <__gmon_start__>
    b174:	ldr	x17, [x16, #1112]
    b178:	add	x16, x16, #0x458
    b17c:	br	x17

000000000000b180 <argp_error@plt>:
    b180:	adrp	x16, 60000 <__gmon_start__>
    b184:	ldr	x17, [x16, #1120]
    b188:	add	x16, x16, #0x460
    b18c:	br	x17

000000000000b190 <xsum@plt>:
    b190:	adrp	x16, 60000 <__gmon_start__>
    b194:	ldr	x17, [x16, #1128]
    b198:	add	x16, x16, #0x468
    b19c:	br	x17

000000000000b1a0 <areadlink_with_size@plt>:
    b1a0:	adrp	x16, 60000 <__gmon_start__>
    b1a4:	ldr	x17, [x16, #1136]
    b1a8:	add	x16, x16, #0x470
    b1ac:	br	x17

000000000000b1b0 <hash_free@plt>:
    b1b0:	adrp	x16, 60000 <__gmon_start__>
    b1b4:	ldr	x17, [x16, #1144]
    b1b8:	add	x16, x16, #0x478
    b1bc:	br	x17

000000000000b1c0 <hash_initialize@plt>:
    b1c0:	adrp	x16, 60000 <__gmon_start__>
    b1c4:	ldr	x17, [x16, #1152]
    b1c8:	add	x16, x16, #0x480
    b1cc:	br	x17

000000000000b1d0 <xalloc_die@plt>:
    b1d0:	adrp	x16, 60000 <__gmon_start__>
    b1d4:	ldr	x17, [x16, #1160]
    b1d8:	add	x16, x16, #0x488
    b1dc:	br	x17

000000000000b1e0 <seen_file@plt>:
    b1e0:	adrp	x16, 60000 <__gmon_start__>
    b1e4:	ldr	x17, [x16, #1168]
    b1e8:	add	x16, x16, #0x490
    b1ec:	br	x17

000000000000b1f0 <record_file@plt>:
    b1f0:	adrp	x16, 60000 <__gmon_start__>
    b1f4:	ldr	x17, [x16, #1176]
    b1f8:	add	x16, x16, #0x498
    b1fc:	br	x17

000000000000b200 <rpl_fcntl@plt>:
    b200:	adrp	x16, 60000 <__gmon_start__>
    b204:	ldr	x17, [x16, #1184]
    b208:	add	x16, x16, #0x4a0
    b20c:	br	x17

000000000000b210 <mdir_name@plt>:
    b210:	adrp	x16, 60000 <__gmon_start__>
    b214:	ldr	x17, [x16, #1192]
    b218:	add	x16, x16, #0x4a8
    b21c:	br	x17

000000000000b220 <base_len@plt>:
    b220:	adrp	x16, 60000 <__gmon_start__>
    b224:	ldr	x17, [x16, #1200]
    b228:	add	x16, x16, #0x4b0
    b22c:	br	x17

000000000000b230 <dir_len@plt>:
    b230:	adrp	x16, 60000 <__gmon_start__>
    b234:	ldr	x17, [x16, #1208]
    b238:	add	x16, x16, #0x4b8
    b23c:	br	x17

000000000000b240 <dup_safer_flag@plt>:
    b240:	adrp	x16, 60000 <__gmon_start__>
    b244:	ldr	x17, [x16, #1216]
    b248:	add	x16, x16, #0x4c0
    b24c:	br	x17

000000000000b250 <hash_insert@plt>:
    b250:	adrp	x16, 60000 <__gmon_start__>
    b254:	ldr	x17, [x16, #1224]
    b258:	add	x16, x16, #0x4c8
    b25c:	br	x17

000000000000b260 <triple_free@plt>:
    b260:	adrp	x16, 60000 <__gmon_start__>
    b264:	ldr	x17, [x16, #1232]
    b268:	add	x16, x16, #0x4d0
    b26c:	br	x17

000000000000b270 <hash_lookup@plt>:
    b270:	adrp	x16, 60000 <__gmon_start__>
    b274:	ldr	x17, [x16, #1240]
    b278:	add	x16, x16, #0x4d8
    b27c:	br	x17

000000000000b280 <clock_gettime@plt>:
    b280:	adrp	x16, 60000 <__gmon_start__>
    b284:	ldr	x17, [x16, #1248]
    b288:	add	x16, x16, #0x4e0
    b28c:	br	x17

000000000000b290 <gettime@plt>:
    b290:	adrp	x16, 60000 <__gmon_start__>
    b294:	ldr	x17, [x16, #1256]
    b298:	add	x16, x16, #0x4e8
    b29c:	br	x17

000000000000b2a0 <hash_get_n_entries@plt>:
    b2a0:	adrp	x16, 60000 <__gmon_start__>
    b2a4:	ldr	x17, [x16, #1264]
    b2a8:	add	x16, x16, #0x4f0
    b2ac:	br	x17

000000000000b2b0 <hash_get_n_buckets@plt>:
    b2b0:	adrp	x16, 60000 <__gmon_start__>
    b2b4:	ldr	x17, [x16, #1272]
    b2b8:	add	x16, x16, #0x4f8
    b2bc:	br	x17

000000000000b2c0 <hash_get_n_buckets_used@plt>:
    b2c0:	adrp	x16, 60000 <__gmon_start__>
    b2c4:	ldr	x17, [x16, #1280]
    b2c8:	add	x16, x16, #0x500
    b2cc:	br	x17

000000000000b2d0 <hash_get_max_bucket_length@plt>:
    b2d0:	adrp	x16, 60000 <__gmon_start__>
    b2d4:	ldr	x17, [x16, #1288]
    b2d8:	add	x16, x16, #0x508
    b2dc:	br	x17

000000000000b2e0 <calloc@plt>:
    b2e0:	adrp	x16, 60000 <__gmon_start__>
    b2e4:	ldr	x17, [x16, #1296]
    b2e8:	add	x16, x16, #0x510
    b2ec:	br	x17

000000000000b2f0 <rotr_sz@plt>:
    b2f0:	adrp	x16, 60000 <__gmon_start__>
    b2f4:	ldr	x17, [x16, #1304]
    b2f8:	add	x16, x16, #0x518
    b2fc:	br	x17

000000000000b300 <hash_rehash@plt>:
    b300:	adrp	x16, 60000 <__gmon_start__>
    b304:	ldr	x17, [x16, #1312]
    b308:	add	x16, x16, #0x520
    b30c:	br	x17

000000000000b310 <hash_insert_if_absent@plt>:
    b310:	adrp	x16, 60000 <__gmon_start__>
    b314:	ldr	x17, [x16, #1320]
    b318:	add	x16, x16, #0x528
    b31c:	br	x17

000000000000b320 <hash_pjw@plt>:
    b320:	adrp	x16, 60000 <__gmon_start__>
    b324:	ldr	x17, [x16, #1328]
    b328:	add	x16, x16, #0x530
    b32c:	br	x17

000000000000b330 <same_name@plt>:
    b330:	adrp	x16, 60000 <__gmon_start__>
    b334:	ldr	x17, [x16, #1336]
    b338:	add	x16, x16, #0x538
    b33c:	br	x17

000000000000b340 <setresgid@plt>:
    b340:	adrp	x16, 60000 <__gmon_start__>
    b344:	ldr	x17, [x16, #1344]
    b348:	add	x16, x16, #0x540
    b34c:	br	x17

000000000000b350 <setresuid@plt>:
    b350:	adrp	x16, 60000 <__gmon_start__>
    b354:	ldr	x17, [x16, #1352]
    b358:	add	x16, x16, #0x548
    b35c:	br	x17

000000000000b360 <getresuid@plt>:
    b360:	adrp	x16, 60000 <__gmon_start__>
    b364:	ldr	x17, [x16, #1360]
    b368:	add	x16, x16, #0x550
    b36c:	br	x17

000000000000b370 <getresgid@plt>:
    b370:	adrp	x16, 60000 <__gmon_start__>
    b374:	ldr	x17, [x16, #1368]
    b378:	add	x16, x16, #0x558
    b37c:	br	x17

000000000000b380 <nl_langinfo@plt>:
    b380:	adrp	x16, 60000 <__gmon_start__>
    b384:	ldr	x17, [x16, #1376]
    b388:	add	x16, x16, #0x560
    b38c:	br	x17

000000000000b390 <pthread_rwlockattr_init@plt>:
    b390:	adrp	x16, 60000 <__gmon_start__>
    b394:	ldr	x17, [x16, #1384]
    b398:	add	x16, x16, #0x568
    b39c:	br	x17

000000000000b3a0 <pthread_rwlockattr_setkind_np@plt>:
    b3a0:	adrp	x16, 60000 <__gmon_start__>
    b3a4:	ldr	x17, [x16, #1392]
    b3a8:	add	x16, x16, #0x570
    b3ac:	br	x17

000000000000b3b0 <pthread_rwlock_init@plt>:
    b3b0:	adrp	x16, 60000 <__gmon_start__>
    b3b4:	ldr	x17, [x16, #1400]
    b3b8:	add	x16, x16, #0x578
    b3bc:	br	x17

000000000000b3c0 <pthread_rwlockattr_destroy@plt>:
    b3c0:	adrp	x16, 60000 <__gmon_start__>
    b3c4:	ldr	x17, [x16, #1408]
    b3c8:	add	x16, x16, #0x580
    b3cc:	br	x17

000000000000b3d0 <pthread_mutexattr_init@plt>:
    b3d0:	adrp	x16, 60000 <__gmon_start__>
    b3d4:	ldr	x17, [x16, #1416]
    b3d8:	add	x16, x16, #0x588
    b3dc:	br	x17

000000000000b3e0 <pthread_mutexattr_settype@plt>:
    b3e0:	adrp	x16, 60000 <__gmon_start__>
    b3e4:	ldr	x17, [x16, #1424]
    b3e8:	add	x16, x16, #0x590
    b3ec:	br	x17

000000000000b3f0 <pthread_mutexattr_destroy@plt>:
    b3f0:	adrp	x16, 60000 <__gmon_start__>
    b3f4:	ldr	x17, [x16, #1432]
    b3f8:	add	x16, x16, #0x598
    b3fc:	br	x17

000000000000b400 <pthread_mutex_init@plt>:
    b400:	adrp	x16, 60000 <__gmon_start__>
    b404:	ldr	x17, [x16, #1440]
    b408:	add	x16, x16, #0x5a0
    b40c:	br	x17

000000000000b410 <gl_map_search@plt>:
    b410:	adrp	x16, 60000 <__gmon_start__>
    b414:	ldr	x17, [x16, #1448]
    b418:	add	x16, x16, #0x5a8
    b41c:	br	x17

000000000000b420 <gl_map_nx_getput@plt>:
    b420:	adrp	x16, 60000 <__gmon_start__>
    b424:	ldr	x17, [x16, #1456]
    b428:	add	x16, x16, #0x5b0
    b42c:	br	x17

000000000000b430 <gl_map_getremove@plt>:
    b430:	adrp	x16, 60000 <__gmon_start__>
    b434:	ldr	x17, [x16, #1464]
    b438:	add	x16, x16, #0x5b8
    b43c:	br	x17

000000000000b440 <fcntl@plt>:
    b440:	adrp	x16, 60000 <__gmon_start__>
    b444:	ldr	x17, [x16, #1472]
    b448:	add	x16, x16, #0x5c0
    b44c:	br	x17

000000000000b450 <fputs@plt>:
    b450:	adrp	x16, 60000 <__gmon_start__>
    b454:	ldr	x17, [x16, #1480]
    b458:	add	x16, x16, #0x5c8
    b45c:	br	x17

000000000000b460 <strrchr@plt>:
    b460:	adrp	x16, 60000 <__gmon_start__>
    b464:	ldr	x17, [x16, #1488]
    b468:	add	x16, x16, #0x5d0
    b46c:	br	x17

000000000000b470 <renameat2@plt>:
    b470:	adrp	x16, 60000 <__gmon_start__>
    b474:	ldr	x17, [x16, #1496]
    b478:	add	x16, x16, #0x5d8
    b47c:	br	x17

000000000000b480 <lstatat@plt>:
    b480:	adrp	x16, 60000 <__gmon_start__>
    b484:	ldr	x17, [x16, #1504]
    b488:	add	x16, x16, #0x5e0
    b48c:	br	x17

000000000000b490 <renameat@plt>:
    b490:	adrp	x16, 60000 <__gmon_start__>
    b494:	ldr	x17, [x16, #1512]
    b498:	add	x16, x16, #0x5e8
    b49c:	br	x17

000000000000b4a0 <same_nameat@plt>:
    b4a0:	adrp	x16, 60000 <__gmon_start__>
    b4a4:	ldr	x17, [x16, #1520]
    b4a8:	add	x16, x16, #0x5f0
    b4ac:	br	x17

000000000000b4b0 <memcmp@plt>:
    b4b0:	adrp	x16, 60000 <__gmon_start__>
    b4b4:	ldr	x17, [x16, #1528]
    b4b8:	add	x16, x16, #0x5f8
    b4bc:	br	x17

000000000000b4c0 <dir_name@plt>:
    b4c0:	adrp	x16, 60000 <__gmon_start__>
    b4c4:	ldr	x17, [x16, #1536]
    b4c8:	add	x16, x16, #0x600
    b4cc:	br	x17

000000000000b4d0 <fd_safer_flag@plt>:
    b4d0:	adrp	x16, 60000 <__gmon_start__>
    b4d4:	ldr	x17, [x16, #1544]
    b4d8:	add	x16, x16, #0x608
    b4dc:	br	x17

000000000000b4e0 <getcwd@plt>:
    b4e0:	adrp	x16, 60000 <__gmon_start__>
    b4e4:	ldr	x17, [x16, #1552]
    b4e8:	add	x16, x16, #0x610
    b4ec:	br	x17

000000000000b4f0 <fchdir@plt>:
    b4f0:	adrp	x16, 60000 <__gmon_start__>
    b4f4:	ldr	x17, [x16, #1560]
    b4f8:	add	x16, x16, #0x618
    b4fc:	br	x17

000000000000b500 <chdir_long@plt>:
    b500:	adrp	x16, 60000 <__gmon_start__>
    b504:	ldr	x17, [x16, #1568]
    b508:	add	x16, x16, #0x620
    b50c:	br	x17

000000000000b510 <gettimeofday@plt>:
    b510:	adrp	x16, 60000 <__gmon_start__>
    b514:	ldr	x17, [x16, #1576]
    b518:	add	x16, x16, #0x628
    b51c:	br	x17

000000000000b520 <try_tempname@plt>:
    b520:	adrp	x16, 60000 <__gmon_start__>
    b524:	ldr	x17, [x16, #1584]
    b528:	add	x16, x16, #0x630
    b52c:	br	x17

000000000000b530 <mkdir@plt>:
    b530:	adrp	x16, 60000 <__gmon_start__>
    b534:	ldr	x17, [x16, #1592]
    b538:	add	x16, x16, #0x638
    b53c:	br	x17

000000000000b540 <dup_safer@plt>:
    b540:	adrp	x16, 60000 <__gmon_start__>
    b544:	ldr	x17, [x16, #1600]
    b548:	add	x16, x16, #0x640
    b54c:	br	x17

000000000000b550 <pipe@plt>:
    b550:	adrp	x16, 60000 <__gmon_start__>
    b554:	ldr	x17, [x16, #1608]
    b558:	add	x16, x16, #0x648
    b55c:	br	x17

000000000000b560 <fd_safer@plt>:
    b560:	adrp	x16, 60000 <__gmon_start__>
    b564:	ldr	x17, [x16, #1616]
    b568:	add	x16, x16, #0x650
    b56c:	br	x17

000000000000b570 <get_stat_atime@plt>:
    b570:	adrp	x16, 60000 <__gmon_start__>
    b574:	ldr	x17, [x16, #1624]
    b578:	add	x16, x16, #0x658
    b57c:	br	x17

000000000000b580 <utimensat@plt>:
    b580:	adrp	x16, 60000 <__gmon_start__>
    b584:	ldr	x17, [x16, #1632]
    b588:	add	x16, x16, #0x660
    b58c:	br	x17

000000000000b590 <futimens@plt>:
    b590:	adrp	x16, 60000 <__gmon_start__>
    b594:	ldr	x17, [x16, #1640]
    b598:	add	x16, x16, #0x668
    b59c:	br	x17

000000000000b5a0 <futimesat@plt>:
    b5a0:	adrp	x16, 60000 <__gmon_start__>
    b5a4:	ldr	x17, [x16, #1648]
    b5a8:	add	x16, x16, #0x670
    b5ac:	br	x17

000000000000b5b0 <get_stat_atime_ns@plt>:
    b5b0:	adrp	x16, 60000 <__gmon_start__>
    b5b4:	ldr	x17, [x16, #1656]
    b5b8:	add	x16, x16, #0x678
    b5bc:	br	x17

000000000000b5c0 <get_stat_mtime_ns@plt>:
    b5c0:	adrp	x16, 60000 <__gmon_start__>
    b5c4:	ldr	x17, [x16, #1664]
    b5c8:	add	x16, x16, #0x680
    b5cc:	br	x17

000000000000b5d0 <utimes@plt>:
    b5d0:	adrp	x16, 60000 <__gmon_start__>
    b5d4:	ldr	x17, [x16, #1672]
    b5d8:	add	x16, x16, #0x688
    b5dc:	br	x17

000000000000b5e0 <fdutimens@plt>:
    b5e0:	adrp	x16, 60000 <__gmon_start__>
    b5e4:	ldr	x17, [x16, #1680]
    b5e8:	add	x16, x16, #0x690
    b5ec:	br	x17

000000000000b5f0 <x2nrealloc@plt>:
    b5f0:	adrp	x16, 60000 <__gmon_start__>
    b5f4:	ldr	x17, [x16, #1688]
    b5f8:	add	x16, x16, #0x698
    b5fc:	br	x17

000000000000b600 <xmemdup@plt>:
    b600:	adrp	x16, 60000 <__gmon_start__>
    b604:	ldr	x17, [x16, #1696]
    b608:	add	x16, x16, #0x6a0
    b60c:	br	x17

000000000000b610 <gl_list_nx_create_empty@plt>:
    b610:	adrp	x16, 60000 <__gmon_start__>
    b614:	ldr	x17, [x16, #1704]
    b618:	add	x16, x16, #0x6a8
    b61c:	br	x17

000000000000b620 <gl_list_nx_create@plt>:
    b620:	adrp	x16, 60000 <__gmon_start__>
    b624:	ldr	x17, [x16, #1712]
    b628:	add	x16, x16, #0x6b0
    b62c:	br	x17

000000000000b630 <gl_list_node_nx_set_value@plt>:
    b630:	adrp	x16, 60000 <__gmon_start__>
    b634:	ldr	x17, [x16, #1720]
    b638:	add	x16, x16, #0x6b8
    b63c:	br	x17

000000000000b640 <gl_list_nx_set_at@plt>:
    b640:	adrp	x16, 60000 <__gmon_start__>
    b644:	ldr	x17, [x16, #1728]
    b648:	add	x16, x16, #0x6c0
    b64c:	br	x17

000000000000b650 <gl_list_nx_add_first@plt>:
    b650:	adrp	x16, 60000 <__gmon_start__>
    b654:	ldr	x17, [x16, #1736]
    b658:	add	x16, x16, #0x6c8
    b65c:	br	x17

000000000000b660 <gl_list_nx_add_last@plt>:
    b660:	adrp	x16, 60000 <__gmon_start__>
    b664:	ldr	x17, [x16, #1744]
    b668:	add	x16, x16, #0x6d0
    b66c:	br	x17

000000000000b670 <gl_list_nx_add_before@plt>:
    b670:	adrp	x16, 60000 <__gmon_start__>
    b674:	ldr	x17, [x16, #1752]
    b678:	add	x16, x16, #0x6d8
    b67c:	br	x17

000000000000b680 <gl_list_nx_add_after@plt>:
    b680:	adrp	x16, 60000 <__gmon_start__>
    b684:	ldr	x17, [x16, #1760]
    b688:	add	x16, x16, #0x6e0
    b68c:	br	x17

000000000000b690 <gl_list_nx_add_at@plt>:
    b690:	adrp	x16, 60000 <__gmon_start__>
    b694:	ldr	x17, [x16, #1768]
    b698:	add	x16, x16, #0x6e8
    b69c:	br	x17

000000000000b6a0 <gl_sortedlist_nx_add@plt>:
    b6a0:	adrp	x16, 60000 <__gmon_start__>
    b6a4:	ldr	x17, [x16, #1776]
    b6a8:	add	x16, x16, #0x6f0
    b6ac:	br	x17

000000000000b6b0 <gl_map_nx_create_empty@plt>:
    b6b0:	adrp	x16, 60000 <__gmon_start__>
    b6b4:	ldr	x17, [x16, #1784]
    b6b8:	add	x16, x16, #0x6f8
    b6bc:	br	x17

000000000000b6c0 <gl_map_nx_put@plt>:
    b6c0:	adrp	x16, 60000 <__gmon_start__>
    b6c4:	ldr	x17, [x16, #1792]
    b6c8:	add	x16, x16, #0x700
    b6cc:	br	x17

000000000000b6d0 <gl_set_nx_create_empty@plt>:
    b6d0:	adrp	x16, 60000 <__gmon_start__>
    b6d4:	ldr	x17, [x16, #1800]
    b6d8:	add	x16, x16, #0x708
    b6dc:	br	x17

000000000000b6e0 <gl_set_nx_add@plt>:
    b6e0:	adrp	x16, 60000 <__gmon_start__>
    b6e4:	ldr	x17, [x16, #1808]
    b6e8:	add	x16, x16, #0x710
    b6ec:	br	x17

000000000000b6f0 <stdopen@plt>:
    b6f0:	adrp	x16, 60000 <__gmon_start__>
    b6f4:	ldr	x17, [x16, #1816]
    b6f8:	add	x16, x16, #0x718
    b6fc:	br	x17

000000000000b700 <vasprintf@plt>:
    b700:	adrp	x16, 60000 <__gmon_start__>
    b704:	ldr	x17, [x16, #1824]
    b708:	add	x16, x16, #0x720
    b70c:	br	x17

000000000000b710 <xvasprintf@plt>:
    b710:	adrp	x16, 60000 <__gmon_start__>
    b714:	ldr	x17, [x16, #1832]
    b718:	add	x16, x16, #0x728
    b71c:	br	x17

000000000000b720 <vasnprintf@plt>:
    b720:	adrp	x16, 60000 <__gmon_start__>
    b724:	ldr	x17, [x16, #1840]
    b728:	add	x16, x16, #0x730
    b72c:	br	x17

000000000000b730 <chdir@plt>:
    b730:	adrp	x16, 60000 <__gmon_start__>
    b734:	ldr	x17, [x16, #1848]
    b738:	add	x16, x16, #0x738
    b73c:	br	x17

000000000000b740 <memrchr@plt>:
    b740:	adrp	x16, 60000 <__gmon_start__>
    b744:	ldr	x17, [x16, #1856]
    b748:	add	x16, x16, #0x740
    b74c:	br	x17

000000000000b750 <_getopt_internal_r@plt>:
    b750:	adrp	x16, 60000 <__gmon_start__>
    b754:	ldr	x17, [x16, #1864]
    b758:	add	x16, x16, #0x748
    b75c:	br	x17

000000000000b760 <rpl_getopt_internal@plt>:
    b760:	adrp	x16, 60000 <__gmon_start__>
    b764:	ldr	x17, [x16, #1872]
    b768:	add	x16, x16, #0x750
    b76c:	br	x17

000000000000b770 <ioctl@plt>:
    b770:	adrp	x16, 60000 <__gmon_start__>
    b774:	ldr	x17, [x16, #1880]
    b778:	add	x16, x16, #0x758
    b77c:	br	x17

000000000000b780 <mbrtowc@plt>:
    b780:	adrp	x16, 60000 <__gmon_start__>
    b784:	ldr	x17, [x16, #1888]
    b788:	add	x16, x16, #0x760
    b78c:	br	x17

000000000000b790 <hard_locale@plt>:
    b790:	adrp	x16, 60000 <__gmon_start__>
    b794:	ldr	x17, [x16, #1896]
    b798:	add	x16, x16, #0x768
    b79c:	br	x17

000000000000b7a0 <nanosleep@plt>:
    b7a0:	adrp	x16, 60000 <__gmon_start__>
    b7a4:	ldr	x17, [x16, #1904]
    b7a8:	add	x16, x16, #0x770
    b7ac:	br	x17

000000000000b7b0 <sprintf@plt>:
    b7b0:	adrp	x16, 60000 <__gmon_start__>
    b7b4:	ldr	x17, [x16, #1912]
    b7b8:	add	x16, x16, #0x778
    b7bc:	br	x17

000000000000b7c0 <pthread_mutex_destroy@plt>:
    b7c0:	adrp	x16, 60000 <__gmon_start__>
    b7c4:	ldr	x17, [x16, #1920]
    b7c8:	add	x16, x16, #0x780
    b7cc:	br	x17

000000000000b7d0 <tolower@plt>:
    b7d0:	adrp	x16, 60000 <__gmon_start__>
    b7d4:	ldr	x17, [x16, #1928]
    b7d8:	add	x16, x16, #0x788
    b7dc:	br	x17

000000000000b7e0 <rpl_mbrtowc@plt>:
    b7e0:	adrp	x16, 60000 <__gmon_start__>
    b7e4:	ldr	x17, [x16, #1936]
    b7e8:	add	x16, x16, #0x790
    b7ec:	br	x17

000000000000b7f0 <towlower@plt>:
    b7f0:	adrp	x16, 60000 <__gmon_start__>
    b7f4:	ldr	x17, [x16, #1944]
    b7f8:	add	x16, x16, #0x798
    b7fc:	br	x17

000000000000b800 <wcrtomb@plt>:
    b800:	adrp	x16, 60000 <__gmon_start__>
    b804:	ldr	x17, [x16, #1952]
    b808:	add	x16, x16, #0x7a0
    b80c:	br	x17

000000000000b810 <rpl_re_compile_fastmap@plt>:
    b810:	adrp	x16, 60000 <__gmon_start__>
    b814:	ldr	x17, [x16, #1960]
    b818:	add	x16, x16, #0x7a8
    b81c:	br	x17

000000000000b820 <pthread_mutex_lock@plt>:
    b820:	adrp	x16, 60000 <__gmon_start__>
    b824:	ldr	x17, [x16, #1968]
    b828:	add	x16, x16, #0x7b0
    b82c:	br	x17

000000000000b830 <pthread_mutex_unlock@plt>:
    b830:	adrp	x16, 60000 <__gmon_start__>
    b834:	ldr	x17, [x16, #1976]
    b838:	add	x16, x16, #0x7b8
    b83c:	br	x17

000000000000b840 <__ctype_get_mb_cur_max@plt>:
    b840:	adrp	x16, 60000 <__gmon_start__>
    b844:	ldr	x17, [x16, #1984]
    b848:	add	x16, x16, #0x7c0
    b84c:	br	x17

000000000000b850 <btowc@plt>:
    b850:	adrp	x16, 60000 <__gmon_start__>
    b854:	ldr	x17, [x16, #1992]
    b858:	add	x16, x16, #0x7c8
    b85c:	br	x17

000000000000b860 <mbsinit@plt>:
    b860:	adrp	x16, 60000 <__gmon_start__>
    b864:	ldr	x17, [x16, #2000]
    b868:	add	x16, x16, #0x7d0
    b86c:	br	x17

000000000000b870 <towupper@plt>:
    b870:	adrp	x16, 60000 <__gmon_start__>
    b874:	ldr	x17, [x16, #2008]
    b878:	add	x16, x16, #0x7d8
    b87c:	br	x17

000000000000b880 <iswalnum@plt>:
    b880:	adrp	x16, 60000 <__gmon_start__>
    b884:	ldr	x17, [x16, #2016]
    b888:	add	x16, x16, #0x7e0
    b88c:	br	x17

000000000000b890 <wctype@plt>:
    b890:	adrp	x16, 60000 <__gmon_start__>
    b894:	ldr	x17, [x16, #2024]
    b898:	add	x16, x16, #0x7e8
    b89c:	br	x17

000000000000b8a0 <iswctype@plt>:
    b8a0:	adrp	x16, 60000 <__gmon_start__>
    b8a4:	ldr	x17, [x16, #2032]
    b8a8:	add	x16, x16, #0x7f0
    b8ac:	br	x17

000000000000b8b0 <printf_parse@plt>:
    b8b0:	adrp	x16, 60000 <__gmon_start__>
    b8b4:	ldr	x17, [x16, #2040]
    b8b8:	add	x16, x16, #0x7f8
    b8bc:	br	x17

000000000000b8c0 <printf_fetchargs@plt>:
    b8c0:	adrp	x16, 60000 <__gmon_start__>
    b8c4:	ldr	x17, [x16, #2048]
    b8c8:	add	x16, x16, #0x800
    b8cc:	br	x17

000000000000b8d0 <xsum4@plt>:
    b8d0:	adrp	x16, 60000 <__gmon_start__>
    b8d4:	ldr	x17, [x16, #2056]
    b8d8:	add	x16, x16, #0x808
    b8dc:	br	x17

000000000000b8e0 <snprintf@plt>:
    b8e0:	adrp	x16, 60000 <__gmon_start__>
    b8e4:	ldr	x17, [x16, #2064]
    b8e8:	add	x16, x16, #0x810
    b8ec:	br	x17

000000000000b8f0 <xmax@plt>:
    b8f0:	adrp	x16, 60000 <__gmon_start__>
    b8f4:	ldr	x17, [x16, #2072]
    b8f8:	add	x16, x16, #0x818
    b8fc:	br	x17

000000000000b900 <__cxa_atexit@plt>:
    b900:	adrp	x16, 60000 <__gmon_start__>
    b904:	ldr	x17, [x16, #2080]
    b908:	add	x16, x16, #0x820
    b90c:	br	x17

000000000000b910 <__xstat@plt>:
    b910:	adrp	x16, 60000 <__gmon_start__>
    b914:	ldr	x17, [x16, #2088]
    b918:	add	x16, x16, #0x828
    b91c:	br	x17

000000000000b920 <__fxstat@plt>:
    b920:	adrp	x16, 60000 <__gmon_start__>
    b924:	ldr	x17, [x16, #2096]
    b928:	add	x16, x16, #0x830
    b92c:	br	x17

000000000000b930 <__lxstat@plt>:
    b930:	adrp	x16, 60000 <__gmon_start__>
    b934:	ldr	x17, [x16, #2104]
    b938:	add	x16, x16, #0x838
    b93c:	br	x17

000000000000b940 <__fxstatat@plt>:
    b940:	adrp	x16, 60000 <__gmon_start__>
    b944:	ldr	x17, [x16, #2112]
    b948:	add	x16, x16, #0x840
    b94c:	br	x17

Disassembly of section .text:

000000000000b950 <appendstr@@Base-0xd4>:
    b950:	adrp	x0, 5f000 <vasnprintf@@Base+0x1ce4c>
    b954:	ldr	x0, [x0, #3760]
    b958:	cbz	x0, b960 <__fxstatat@plt+0x20>
    b95c:	b	a8c0 <__gmon_start__@plt>
    b960:	ret
    b964:	udf	#0
    b968:	adrp	x0, 61000 <gl_rbtree_list_implementation@@Base+0x1468>
    b96c:	add	x0, x0, #0x3a8
    b970:	adrp	x1, 61000 <gl_rbtree_list_implementation@@Base+0x1468>
    b974:	add	x1, x1, #0x3a8
    b978:	cmp	x1, x0
    b97c:	b.eq	b994 <__fxstatat@plt+0x54>  // b.none
    b980:	adrp	x1, 5f000 <vasnprintf@@Base+0x1ce4c>
    b984:	ldr	x1, [x1, #3768]
    b988:	cbz	x1, b994 <__fxstatat@plt+0x54>
    b98c:	mov	x16, x1
    b990:	br	x16
    b994:	ret
    b998:	adrp	x0, 61000 <gl_rbtree_list_implementation@@Base+0x1468>
    b99c:	add	x0, x0, #0x3a8
    b9a0:	adrp	x1, 61000 <gl_rbtree_list_implementation@@Base+0x1468>
    b9a4:	add	x1, x1, #0x3a8
    b9a8:	sub	x1, x1, x0
    b9ac:	lsr	x2, x1, #63
    b9b0:	add	x1, x2, x1, asr #3
    b9b4:	cmp	xzr, x1, asr #1
    b9b8:	asr	x1, x1, #1
    b9bc:	b.eq	b9d4 <__fxstatat@plt+0x94>  // b.none
    b9c0:	adrp	x2, 5f000 <vasnprintf@@Base+0x1ce4c>
    b9c4:	ldr	x2, [x2, #3776]
    b9c8:	cbz	x2, b9d4 <__fxstatat@plt+0x94>
    b9cc:	mov	x16, x2
    b9d0:	br	x16
    b9d4:	ret
    b9d8:	stp	x29, x30, [sp, #-32]!
    b9dc:	mov	x29, sp
    b9e0:	str	x19, [sp, #16]
    b9e4:	adrp	x19, 61000 <gl_rbtree_list_implementation@@Base+0x1468>
    b9e8:	ldrb	w0, [x19, #936]
    b9ec:	cbnz	w0, ba14 <__fxstatat@plt+0xd4>
    b9f0:	adrp	x0, 5f000 <vasnprintf@@Base+0x1ce4c>
    b9f4:	ldr	x0, [x0, #3784]
    b9f8:	cbz	x0, ba08 <__fxstatat@plt+0xc8>
    b9fc:	adrp	x0, 60000 <__gmon_start__>
    ba00:	ldr	x0, [x0, #2120]
    ba04:	bl	a8d0 <__cxa_finalize@plt>
    ba08:	bl	b968 <__fxstatat@plt+0x28>
    ba0c:	mov	w0, #0x1                   	// #1
    ba10:	strb	w0, [x19, #936]
    ba14:	ldr	x19, [sp, #16]
    ba18:	ldp	x29, x30, [sp], #32
    ba1c:	ret
    ba20:	b	b998 <__fxstatat@plt+0x58>

000000000000ba24 <appendstr@@Base>:
    ba24:	sub	sp, sp, #0x160
    ba28:	stp	x29, x30, [sp, #320]
    ba2c:	str	x28, [sp, #336]
    ba30:	add	x29, sp, #0x140
    ba34:	str	q7, [sp, #176]
    ba38:	str	q6, [sp, #160]
    ba3c:	str	q5, [sp, #144]
    ba40:	str	q4, [sp, #128]
    ba44:	str	q3, [sp, #112]
    ba48:	str	q2, [sp, #96]
    ba4c:	str	q1, [sp, #80]
    ba50:	str	q0, [sp, #64]
    ba54:	stur	x7, [x29, #-80]
    ba58:	stur	x6, [x29, #-88]
    ba5c:	stur	x5, [x29, #-96]
    ba60:	stur	x4, [x29, #-104]
    ba64:	stur	x3, [x29, #-112]
    ba68:	stur	x2, [x29, #-120]
    ba6c:	stur	x1, [x29, #-128]
    ba70:	stur	x0, [x29, #-8]
    ba74:	ldur	x8, [x29, #-8]
    ba78:	cbz	x8, ba90 <appendstr@@Base+0x6c>
    ba7c:	b	ba80 <appendstr@@Base+0x5c>
    ba80:	ldur	x0, [x29, #-8]
    ba84:	bl	a8e0 <strlen@plt>
    ba88:	str	x0, [sp, #56]
    ba8c:	b	ba9c <appendstr@@Base+0x78>
    ba90:	mov	x0, xzr
    ba94:	str	x0, [sp, #56]
    ba98:	b	ba9c <appendstr@@Base+0x78>
    ba9c:	ldr	x8, [sp, #56]
    baa0:	stur	x8, [x29, #-48]
    baa4:	mov	w9, #0xffffff80            	// #-128
    baa8:	stur	w9, [x29, #-12]
    baac:	mov	w9, #0xffffffc8            	// #-56
    bab0:	stur	w9, [x29, #-16]
    bab4:	add	x8, sp, #0x40
    bab8:	add	x8, x8, #0x80
    babc:	stur	x8, [x29, #-24]
    bac0:	sub	x8, x29, #0x80
    bac4:	add	x8, x8, #0x38
    bac8:	stur	x8, [x29, #-32]
    bacc:	add	x8, x29, #0x20
    bad0:	stur	x8, [x29, #-40]
    bad4:	ldur	x8, [x29, #-48]
    bad8:	add	x8, x8, #0x1
    badc:	stur	x8, [x29, #-56]
    bae0:	b	bae4 <appendstr@@Base+0xc0>
    bae4:	sub	x8, x29, #0x28
    bae8:	add	x8, x8, #0x18
    baec:	ldur	w9, [x29, #-16]
    baf0:	mov	w10, w9
    baf4:	str	x8, [sp, #48]
    baf8:	str	w10, [sp, #44]
    bafc:	tbz	w9, #31, bb34 <appendstr@@Base+0x110>
    bb00:	b	bb04 <appendstr@@Base+0xe0>
    bb04:	ldr	w8, [sp, #44]
    bb08:	add	w9, w8, #0x8
    bb0c:	ldr	x10, [sp, #48]
    bb10:	str	w9, [x10]
    bb14:	subs	w9, w9, #0x0
    bb18:	b.gt	bb34 <appendstr@@Base+0x110>
    bb1c:	b	bb20 <appendstr@@Base+0xfc>
    bb20:	ldur	x8, [x29, #-32]
    bb24:	ldr	w9, [sp, #44]
    bb28:	add	x8, x8, w9, sxtw
    bb2c:	str	x8, [sp, #32]
    bb30:	b	bb48 <appendstr@@Base+0x124>
    bb34:	ldur	x8, [x29, #-40]
    bb38:	add	x9, x8, #0x8
    bb3c:	stur	x9, [x29, #-40]
    bb40:	str	x8, [sp, #32]
    bb44:	b	bb48 <appendstr@@Base+0x124>
    bb48:	ldr	x8, [sp, #32]
    bb4c:	ldr	x8, [x8]
    bb50:	stur	x8, [x29, #-64]
    bb54:	cbz	x8, bb74 <appendstr@@Base+0x150>
    bb58:	b	bb5c <appendstr@@Base+0x138>
    bb5c:	ldur	x0, [x29, #-64]
    bb60:	bl	a8e0 <strlen@plt>
    bb64:	ldur	x8, [x29, #-56]
    bb68:	add	x8, x8, x0
    bb6c:	stur	x8, [x29, #-56]
    bb70:	b	bae4 <appendstr@@Base+0xc0>
    bb74:	ldur	x0, [x29, #-8]
    bb78:	ldur	x1, [x29, #-56]
    bb7c:	bl	a8f0 <xrealloc@plt>
    bb80:	stur	x0, [x29, #-8]
    bb84:	ldur	x8, [x29, #-8]
    bb88:	ldur	x9, [x29, #-48]
    bb8c:	add	x8, x8, x9
    bb90:	stur	x8, [x29, #-72]
    bb94:	mov	w10, #0xffffff80            	// #-128
    bb98:	stur	w10, [x29, #-12]
    bb9c:	mov	w10, #0xffffffc8            	// #-56
    bba0:	stur	w10, [x29, #-16]
    bba4:	add	x8, sp, #0x40
    bba8:	add	x8, x8, #0x80
    bbac:	stur	x8, [x29, #-24]
    bbb0:	sub	x8, x29, #0x80
    bbb4:	add	x8, x8, #0x38
    bbb8:	stur	x8, [x29, #-32]
    bbbc:	add	x8, x29, #0x20
    bbc0:	stur	x8, [x29, #-40]
    bbc4:	b	bbc8 <appendstr@@Base+0x1a4>
    bbc8:	sub	x8, x29, #0x28
    bbcc:	add	x8, x8, #0x18
    bbd0:	ldur	w9, [x29, #-16]
    bbd4:	mov	w10, w9
    bbd8:	str	x8, [sp, #24]
    bbdc:	str	w10, [sp, #20]
    bbe0:	tbz	w9, #31, bc18 <appendstr@@Base+0x1f4>
    bbe4:	b	bbe8 <appendstr@@Base+0x1c4>
    bbe8:	ldr	w8, [sp, #20]
    bbec:	add	w9, w8, #0x8
    bbf0:	ldr	x10, [sp, #24]
    bbf4:	str	w9, [x10]
    bbf8:	subs	w9, w9, #0x0
    bbfc:	b.gt	bc18 <appendstr@@Base+0x1f4>
    bc00:	b	bc04 <appendstr@@Base+0x1e0>
    bc04:	ldur	x8, [x29, #-32]
    bc08:	ldr	w9, [sp, #20]
    bc0c:	add	x8, x8, w9, sxtw
    bc10:	str	x8, [sp, #8]
    bc14:	b	bc2c <appendstr@@Base+0x208>
    bc18:	ldur	x8, [x29, #-40]
    bc1c:	add	x9, x8, #0x8
    bc20:	stur	x9, [x29, #-40]
    bc24:	str	x8, [sp, #8]
    bc28:	b	bc2c <appendstr@@Base+0x208>
    bc2c:	ldr	x8, [sp, #8]
    bc30:	ldr	x8, [x8]
    bc34:	stur	x8, [x29, #-64]
    bc38:	cbz	x8, bc6c <appendstr@@Base+0x248>
    bc3c:	b	bc40 <appendstr@@Base+0x21c>
    bc40:	ldur	x0, [x29, #-72]
    bc44:	ldur	x1, [x29, #-64]
    bc48:	bl	a900 <strcpy@plt>
    bc4c:	ldur	x8, [x29, #-64]
    bc50:	str	x0, [sp]
    bc54:	mov	x0, x8
    bc58:	bl	a8e0 <strlen@plt>
    bc5c:	ldur	x8, [x29, #-72]
    bc60:	add	x8, x8, x0
    bc64:	stur	x8, [x29, #-72]
    bc68:	b	bbc8 <appendstr@@Base+0x1a4>
    bc6c:	ldur	x0, [x29, #-8]
    bc70:	ldr	x28, [sp, #336]
    bc74:	ldp	x29, x30, [sp, #320]
    bc78:	add	sp, sp, #0x160
    bc7c:	ret

000000000000bc80 <do_cleanups_sigsafe@@Base>:
    bc80:	sub	sp, sp, #0x20
    bc84:	stp	x29, x30, [sp, #16]
    bc88:	add	x29, sp, #0x10
    bc8c:	adrp	x8, 61000 <gl_rbtree_list_implementation@@Base+0x1468>
    bc90:	add	x8, x8, #0x3b0
    bc94:	adrp	x9, 61000 <gl_rbtree_list_implementation@@Base+0x1468>
    bc98:	add	x9, x9, #0x3b4
    bc9c:	adrp	x10, 61000 <gl_rbtree_list_implementation@@Base+0x1468>
    bca0:	add	x10, x10, #0x3b8
    bca4:	stur	w0, [x29, #-4]
    bca8:	ldr	w11, [x8]
    bcac:	ldr	w12, [x9]
    bcb0:	cmp	w11, w12
    bcb4:	str	x10, [sp]
    bcb8:	b.hi	bcc0 <do_cleanups_sigsafe@@Base+0x40>  // b.pmore
    bcbc:	b	bce0 <do_cleanups_sigsafe@@Base+0x60>
    bcc0:	adrp	x0, 44000 <vasnprintf@@Base+0x1e4c>
    bcc4:	add	x0, x0, #0x418
    bcc8:	adrp	x1, 44000 <vasnprintf@@Base+0x1e4c>
    bccc:	add	x1, x1, #0x426
    bcd0:	mov	w2, #0xa9                  	// #169
    bcd4:	adrp	x3, 44000 <vasnprintf@@Base+0x1e4c>
    bcd8:	add	x3, x3, #0x430
    bcdc:	bl	a910 <__assert_fail@plt>
    bce0:	adrp	x8, 61000 <gl_rbtree_list_implementation@@Base+0x1468>
    bce4:	add	x8, x8, #0x3b0
    bce8:	ldr	w9, [x8]
    bcec:	str	w9, [sp, #8]
    bcf0:	ldr	w8, [sp, #8]
    bcf4:	cmp	w8, #0x0
    bcf8:	cset	w8, ls  // ls = plast
    bcfc:	tbnz	w8, #0, bd90 <do_cleanups_sigsafe@@Base+0x110>
    bd00:	ldur	w8, [x29, #-4]
    bd04:	cbz	w8, bd34 <do_cleanups_sigsafe@@Base+0xb4>
    bd08:	ldr	x8, [sp]
    bd0c:	ldr	x9, [x8]
    bd10:	ldr	w10, [sp, #8]
    bd14:	subs	w10, w10, #0x1
    bd18:	mov	w11, w10
    bd1c:	ubfx	x11, x11, #0, #32
    bd20:	mov	x12, #0x18                  	// #24
    bd24:	mul	x11, x12, x11
    bd28:	add	x9, x9, x11
    bd2c:	ldr	w10, [x9, #16]
    bd30:	cbz	w10, bd80 <do_cleanups_sigsafe@@Base+0x100>
    bd34:	ldr	x8, [sp]
    bd38:	ldr	x9, [x8]
    bd3c:	ldr	w10, [sp, #8]
    bd40:	subs	w10, w10, #0x1
    bd44:	mov	w11, w10
    bd48:	ubfx	x11, x11, #0, #32
    bd4c:	mov	x12, #0x18                  	// #24
    bd50:	mul	x11, x12, x11
    bd54:	add	x9, x9, x11
    bd58:	ldr	x9, [x9]
    bd5c:	ldr	x11, [x8]
    bd60:	ldr	w10, [sp, #8]
    bd64:	subs	w10, w10, #0x1
    bd68:	mov	w13, w10
    bd6c:	ubfx	x13, x13, #0, #32
    bd70:	mul	x12, x12, x13
    bd74:	add	x11, x11, x12
    bd78:	ldr	x0, [x11, #8]
    bd7c:	blr	x9
    bd80:	ldr	w8, [sp, #8]
    bd84:	subs	w8, w8, #0x1
    bd88:	str	w8, [sp, #8]
    bd8c:	b	bcf0 <do_cleanups_sigsafe@@Base+0x70>
    bd90:	ldp	x29, x30, [sp, #16]
    bd94:	add	sp, sp, #0x20
    bd98:	ret

000000000000bd9c <do_cleanups@@Base>:
    bd9c:	sub	sp, sp, #0x30
    bda0:	stp	x29, x30, [sp, #32]
    bda4:	add	x29, sp, #0x20
    bda8:	mov	w8, wzr
    bdac:	adrp	x9, 61000 <gl_rbtree_list_implementation@@Base+0x1468>
    bdb0:	add	x9, x9, #0x3b0
    bdb4:	adrp	x10, 61000 <gl_rbtree_list_implementation@@Base+0x1468>
    bdb8:	add	x10, x10, #0x3b4
    bdbc:	adrp	x11, 61000 <gl_rbtree_list_implementation@@Base+0x1468>
    bdc0:	add	x11, x11, #0x3b8
    bdc4:	mov	x12, xzr
    bdc8:	mov	w0, w8
    bdcc:	stur	x9, [x29, #-8]
    bdd0:	str	x10, [sp, #16]
    bdd4:	str	x11, [sp, #8]
    bdd8:	str	x12, [sp]
    bddc:	bl	a920 <do_cleanups_sigsafe@plt>
    bde0:	ldur	x9, [x29, #-8]
    bde4:	str	wzr, [x9]
    bde8:	ldr	x10, [sp, #16]
    bdec:	str	wzr, [x10]
    bdf0:	ldr	x11, [sp, #8]
    bdf4:	ldr	x0, [x11]
    bdf8:	bl	a930 <free@plt>
    bdfc:	ldr	x9, [sp]
    be00:	ldr	x10, [sp, #8]
    be04:	str	x9, [x10]
    be08:	ldp	x29, x30, [sp, #32]
    be0c:	add	sp, sp, #0x30
    be10:	ret

000000000000be14 <push_cleanup@@Base>:
    be14:	sub	sp, sp, #0x50
    be18:	stp	x29, x30, [sp, #64]
    be1c:	add	x29, sp, #0x40
    be20:	adrp	x8, 61000 <gl_rbtree_list_implementation@@Base+0x1468>
    be24:	add	x8, x8, #0x3b0
    be28:	adrp	x9, 61000 <gl_rbtree_list_implementation@@Base+0x1468>
    be2c:	add	x9, x9, #0x3b4
    be30:	adrp	x10, 61000 <gl_rbtree_list_implementation@@Base+0x1468>
    be34:	add	x10, x10, #0x3b8
    be38:	stur	x0, [x29, #-16]
    be3c:	stur	x1, [x29, #-24]
    be40:	stur	w2, [x29, #-28]
    be44:	ldr	w11, [x8]
    be48:	ldr	w12, [x9]
    be4c:	cmp	w11, w12
    be50:	str	x8, [sp, #16]
    be54:	str	x9, [sp, #8]
    be58:	str	x10, [sp]
    be5c:	b.hi	be64 <push_cleanup@@Base+0x50>  // b.pmore
    be60:	b	be84 <push_cleanup@@Base+0x70>
    be64:	adrp	x0, 44000 <vasnprintf@@Base+0x1e4c>
    be68:	add	x0, x0, #0x418
    be6c:	adrp	x1, 44000 <vasnprintf@@Base+0x1e4c>
    be70:	add	x1, x1, #0x426
    be74:	mov	w2, #0xc8                  	// #200
    be78:	adrp	x3, 44000 <vasnprintf@@Base+0x1e4c>
    be7c:	add	x3, x3, #0x44e
    be80:	bl	a910 <__assert_fail@plt>
    be84:	adrp	x8, 61000 <gl_rbtree_list_implementation@@Base+0x1468>
    be88:	add	x8, x8, #0x3c0
    be8c:	ldr	w9, [x8]
    be90:	cbnz	w9, bec0 <push_cleanup@@Base+0xac>
    be94:	adrp	x0, 5f000 <vasnprintf@@Base+0x1ce4c>
    be98:	ldr	x0, [x0, #3792]
    be9c:	bl	443a8 <vasnprintf@@Base+0x21f4>
    bea0:	cbz	w0, beb0 <push_cleanup@@Base+0x9c>
    bea4:	mov	w8, #0xffffffff            	// #-1
    bea8:	stur	w8, [x29, #-4]
    beac:	b	c010 <push_cleanup@@Base+0x1fc>
    beb0:	mov	w8, #0x1                   	// #1
    beb4:	adrp	x9, 61000 <gl_rbtree_list_implementation@@Base+0x1468>
    beb8:	add	x9, x9, #0x3c0
    bebc:	str	w8, [x9]
    bec0:	ldr	x8, [sp, #16]
    bec4:	ldr	w9, [x8]
    bec8:	ldr	x10, [sp, #8]
    becc:	ldr	w11, [x10]
    bed0:	cmp	w9, w11
    bed4:	b.ne	bf60 <push_cleanup@@Base+0x14c>  // b.any
    bed8:	ldr	x8, [sp]
    bedc:	ldr	x9, [x8]
    bee0:	cbz	x9, bf10 <push_cleanup@@Base+0xfc>
    bee4:	ldr	x8, [sp]
    bee8:	ldr	x0, [x8]
    beec:	ldr	x9, [sp, #8]
    bef0:	ldr	w10, [x9]
    bef4:	add	w10, w10, #0x1
    bef8:	mov	w11, w10
    befc:	ubfx	x1, x11, #0, #32
    bf00:	mov	x2, #0x18                  	// #24
    bf04:	bl	a940 <xnrealloc@plt>
    bf08:	str	x0, [sp, #24]
    bf0c:	b	bf30 <push_cleanup@@Base+0x11c>
    bf10:	ldr	x8, [sp, #8]
    bf14:	ldr	w9, [x8]
    bf18:	add	w9, w9, #0x1
    bf1c:	mov	w10, w9
    bf20:	ubfx	x0, x10, #0, #32
    bf24:	mov	x1, #0x18                  	// #24
    bf28:	bl	a950 <xnmalloc@plt>
    bf2c:	str	x0, [sp, #24]
    bf30:	ldr	x8, [sp, #24]
    bf34:	cbnz	x8, bf44 <push_cleanup@@Base+0x130>
    bf38:	mov	w8, #0xffffffff            	// #-1
    bf3c:	stur	w8, [x29, #-4]
    bf40:	b	c010 <push_cleanup@@Base+0x1fc>
    bf44:	ldr	x8, [sp, #24]
    bf48:	ldr	x9, [sp]
    bf4c:	str	x8, [x9]
    bf50:	ldr	x8, [sp, #8]
    bf54:	ldr	w10, [x8]
    bf58:	add	w10, w10, #0x1
    bf5c:	str	w10, [x8]
    bf60:	ldr	x8, [sp, #16]
    bf64:	ldr	w9, [x8]
    bf68:	ldr	x10, [sp, #8]
    bf6c:	ldr	w11, [x10]
    bf70:	cmp	w9, w11
    bf74:	b.cs	bf7c <push_cleanup@@Base+0x168>  // b.hs, b.nlast
    bf78:	b	bf9c <push_cleanup@@Base+0x188>
    bf7c:	adrp	x0, 44000 <vasnprintf@@Base+0x1e4c>
    bf80:	add	x0, x0, #0x479
    bf84:	adrp	x1, 44000 <vasnprintf@@Base+0x1e4c>
    bf88:	add	x1, x1, #0x426
    bf8c:	mov	w2, #0xe0                  	// #224
    bf90:	adrp	x3, 44000 <vasnprintf@@Base+0x1e4c>
    bf94:	add	x3, x3, #0x44e
    bf98:	bl	a910 <__assert_fail@plt>
    bf9c:	ldur	x8, [x29, #-16]
    bfa0:	ldr	x9, [sp]
    bfa4:	ldr	x10, [x9]
    bfa8:	ldr	x11, [sp, #16]
    bfac:	ldr	w12, [x11]
    bfb0:	mov	w13, w12
    bfb4:	mov	x14, #0x18                  	// #24
    bfb8:	mul	x13, x14, x13
    bfbc:	add	x10, x10, x13
    bfc0:	str	x8, [x10]
    bfc4:	ldur	x8, [x29, #-24]
    bfc8:	ldr	x10, [x9]
    bfcc:	ldr	w12, [x11]
    bfd0:	mov	w13, w12
    bfd4:	mul	x13, x14, x13
    bfd8:	add	x10, x10, x13
    bfdc:	str	x8, [x10, #8]
    bfe0:	ldur	w12, [x29, #-28]
    bfe4:	ldr	x8, [x9]
    bfe8:	ldr	w15, [x11]
    bfec:	mov	w10, w15
    bff0:	mul	x10, x14, x10
    bff4:	add	x8, x8, x10
    bff8:	str	w12, [x8, #16]
    bffc:	ldr	w12, [x11]
    c000:	add	w12, w12, #0x1
    c004:	str	w12, [x11]
    c008:	bl	c020 <push_cleanup@@Base+0x20c>
    c00c:	stur	wzr, [x29, #-4]
    c010:	ldur	w0, [x29, #-4]
    c014:	ldp	x29, x30, [sp, #64]
    c018:	add	sp, sp, #0x50
    c01c:	ret
    c020:	sub	sp, sp, #0x20
    c024:	stp	x29, x30, [sp, #16]
    c028:	add	x29, sp, #0x10
    c02c:	mov	w0, #0x1                   	// #1
    c030:	adrp	x1, 61000 <gl_rbtree_list_implementation@@Base+0x1468>
    c034:	add	x1, x1, #0x3c8
    c038:	bl	c2dc <pop_all_cleanups@@Base+0x20>
    c03c:	cbnz	w0, c068 <push_cleanup@@Base+0x254>
    c040:	mov	w0, #0x2                   	// #2
    c044:	adrp	x1, 61000 <gl_rbtree_list_implementation@@Base+0x1468>
    c048:	add	x1, x1, #0x460
    c04c:	bl	c2dc <pop_all_cleanups@@Base+0x20>
    c050:	cbnz	w0, c068 <push_cleanup@@Base+0x254>
    c054:	mov	w0, #0xf                   	// #15
    c058:	adrp	x1, 61000 <gl_rbtree_list_implementation@@Base+0x1468>
    c05c:	add	x1, x1, #0x4f8
    c060:	bl	c2dc <pop_all_cleanups@@Base+0x20>
    c064:	cbz	w0, c074 <push_cleanup@@Base+0x260>
    c068:	mov	w8, #0xffffffff            	// #-1
    c06c:	stur	w8, [x29, #-4]
    c070:	b	c078 <push_cleanup@@Base+0x264>
    c074:	stur	wzr, [x29, #-4]
    c078:	ldur	w0, [x29, #-4]
    c07c:	ldp	x29, x30, [sp, #16]
    c080:	add	sp, sp, #0x20
    c084:	ret

000000000000c088 <pop_cleanup@@Base>:
    c088:	sub	sp, sp, #0x40
    c08c:	stp	x29, x30, [sp, #48]
    c090:	add	x29, sp, #0x30
    c094:	adrp	x8, 61000 <gl_rbtree_list_implementation@@Base+0x1468>
    c098:	add	x8, x8, #0x3b0
    c09c:	adrp	x9, 61000 <gl_rbtree_list_implementation@@Base+0x1468>
    c0a0:	add	x9, x9, #0x3b8
    c0a4:	stur	x0, [x29, #-8]
    c0a8:	stur	x1, [x29, #-16]
    c0ac:	ldr	w10, [x8]
    c0b0:	cmp	w10, #0x0
    c0b4:	cset	w10, ls  // ls = plast
    c0b8:	str	x8, [sp, #16]
    c0bc:	str	x9, [sp, #8]
    c0c0:	tbnz	w10, #0, c0c8 <pop_cleanup@@Base+0x40>
    c0c4:	b	c0e8 <pop_cleanup@@Base+0x60>
    c0c8:	adrp	x0, 44000 <vasnprintf@@Base+0x1e4c>
    c0cc:	add	x0, x0, #0x486
    c0d0:	adrp	x1, 44000 <vasnprintf@@Base+0x1e4c>
    c0d4:	add	x1, x1, #0x426
    c0d8:	mov	w2, #0xf5                  	// #245
    c0dc:	adrp	x3, 44000 <vasnprintf@@Base+0x1e4c>
    c0e0:	add	x3, x3, #0x48e
    c0e4:	bl	a910 <__assert_fail@plt>
    c0e8:	ldr	x8, [sp, #16]
    c0ec:	ldr	w9, [x8]
    c0f0:	stur	w9, [x29, #-20]
    c0f4:	ldur	w8, [x29, #-20]
    c0f8:	cmp	w8, #0x0
    c0fc:	cset	w8, ls  // ls = plast
    c100:	tbnz	w8, #0, c204 <pop_cleanup@@Base+0x17c>
    c104:	ldr	x8, [sp, #8]
    c108:	ldr	x9, [x8]
    c10c:	ldur	w10, [x29, #-20]
    c110:	subs	w10, w10, #0x1
    c114:	mov	w11, w10
    c118:	ubfx	x11, x11, #0, #32
    c11c:	mov	x12, #0x18                  	// #24
    c120:	mul	x11, x12, x11
    c124:	add	x9, x9, x11
    c128:	ldr	x9, [x9]
    c12c:	ldur	x11, [x29, #-8]
    c130:	cmp	x9, x11
    c134:	b.ne	c1f4 <pop_cleanup@@Base+0x16c>  // b.any
    c138:	ldr	x8, [sp, #8]
    c13c:	ldr	x9, [x8]
    c140:	ldur	w10, [x29, #-20]
    c144:	subs	w10, w10, #0x1
    c148:	mov	w11, w10
    c14c:	ubfx	x11, x11, #0, #32
    c150:	mov	x12, #0x18                  	// #24
    c154:	mul	x11, x12, x11
    c158:	add	x9, x9, x11
    c15c:	ldr	x9, [x9, #8]
    c160:	ldur	x11, [x29, #-16]
    c164:	cmp	x9, x11
    c168:	b.ne	c1f4 <pop_cleanup@@Base+0x16c>  // b.any
    c16c:	ldur	w8, [x29, #-20]
    c170:	str	w8, [sp, #24]
    c174:	ldr	w8, [sp, #24]
    c178:	ldr	x9, [sp, #16]
    c17c:	ldr	w10, [x9]
    c180:	cmp	w8, w10
    c184:	b.cs	c1e0 <pop_cleanup@@Base+0x158>  // b.hs, b.nlast
    c188:	ldr	x8, [sp, #8]
    c18c:	ldr	x9, [x8]
    c190:	ldr	w10, [sp, #24]
    c194:	subs	w10, w10, #0x1
    c198:	mov	w11, w10
    c19c:	ubfx	x11, x11, #0, #32
    c1a0:	mov	x12, #0x18                  	// #24
    c1a4:	mul	x11, x12, x11
    c1a8:	add	x9, x9, x11
    c1ac:	ldr	x11, [x8]
    c1b0:	ldr	w10, [sp, #24]
    c1b4:	mov	w13, w10
    c1b8:	mul	x12, x12, x13
    c1bc:	add	x11, x11, x12
    c1c0:	ldr	q0, [x11]
    c1c4:	str	q0, [x9]
    c1c8:	ldr	x11, [x11, #16]
    c1cc:	str	x11, [x9, #16]
    c1d0:	ldr	w8, [sp, #24]
    c1d4:	add	w8, w8, #0x1
    c1d8:	str	w8, [sp, #24]
    c1dc:	b	c174 <pop_cleanup@@Base+0xec>
    c1e0:	ldr	x8, [sp, #16]
    c1e4:	ldr	w9, [x8]
    c1e8:	subs	w9, w9, #0x1
    c1ec:	str	w9, [x8]
    c1f0:	b	c204 <pop_cleanup@@Base+0x17c>
    c1f4:	ldur	w8, [x29, #-20]
    c1f8:	subs	w8, w8, #0x1
    c1fc:	stur	w8, [x29, #-20]
    c200:	b	c0f4 <pop_cleanup@@Base+0x6c>
    c204:	ldr	x8, [sp, #16]
    c208:	ldr	w9, [x8]
    c20c:	cbnz	w9, c214 <pop_cleanup@@Base+0x18c>
    c210:	bl	c220 <pop_cleanup@@Base+0x198>
    c214:	ldp	x29, x30, [sp, #48]
    c218:	add	sp, sp, #0x40
    c21c:	ret
    c220:	sub	sp, sp, #0x40
    c224:	stp	x29, x30, [sp, #48]
    c228:	add	x29, sp, #0x30
    c22c:	mov	w0, #0x1                   	// #1
    c230:	adrp	x1, 61000 <gl_rbtree_list_implementation@@Base+0x1468>
    c234:	add	x1, x1, #0x3c8
    c238:	mov	w8, #0x2                   	// #2
    c23c:	adrp	x9, 61000 <gl_rbtree_list_implementation@@Base+0x1468>
    c240:	add	x9, x9, #0x460
    c244:	mov	w10, #0xf                   	// #15
    c248:	adrp	x11, 61000 <gl_rbtree_list_implementation@@Base+0x1468>
    c24c:	add	x11, x11, #0x4f8
    c250:	stur	w8, [x29, #-8]
    c254:	stur	x9, [x29, #-16]
    c258:	stur	w10, [x29, #-20]
    c25c:	str	x11, [sp, #16]
    c260:	bl	c468 <pop_all_cleanups@@Base+0x1ac>
    c264:	ldur	w8, [x29, #-8]
    c268:	str	w0, [sp, #12]
    c26c:	mov	w0, w8
    c270:	ldur	x1, [x29, #-16]
    c274:	bl	c468 <pop_all_cleanups@@Base+0x1ac>
    c278:	ldr	w8, [sp, #12]
    c27c:	orr	w10, w8, w0
    c280:	ldur	w0, [x29, #-20]
    c284:	ldr	x1, [sp, #16]
    c288:	str	w10, [sp, #8]
    c28c:	bl	c468 <pop_all_cleanups@@Base+0x1ac>
    c290:	ldr	w8, [sp, #8]
    c294:	orr	w10, w8, w0
    c298:	cbz	w10, c2a8 <pop_cleanup@@Base+0x220>
    c29c:	mov	w8, #0xffffffff            	// #-1
    c2a0:	stur	w8, [x29, #-4]
    c2a4:	b	c2ac <pop_cleanup@@Base+0x224>
    c2a8:	stur	wzr, [x29, #-4]
    c2ac:	ldur	w0, [x29, #-4]
    c2b0:	ldp	x29, x30, [sp, #48]
    c2b4:	add	sp, sp, #0x40
    c2b8:	ret

000000000000c2bc <pop_all_cleanups@@Base>:
    c2bc:	stp	x29, x30, [sp, #-16]!
    c2c0:	mov	x29, sp
    c2c4:	adrp	x8, 61000 <gl_rbtree_list_implementation@@Base+0x1468>
    c2c8:	add	x8, x8, #0x3b0
    c2cc:	str	wzr, [x8]
    c2d0:	bl	c220 <pop_cleanup@@Base+0x198>
    c2d4:	ldp	x29, x30, [sp], #16
    c2d8:	ret
    c2dc:	sub	sp, sp, #0xc0
    c2e0:	stp	x29, x30, [sp, #176]
    c2e4:	add	x29, sp, #0xb0
    c2e8:	mov	x8, xzr
    c2ec:	stur	w0, [x29, #-8]
    c2f0:	stur	x1, [x29, #-16]
    c2f4:	ldur	w0, [x29, #-8]
    c2f8:	ldur	x2, [x29, #-16]
    c2fc:	mov	x1, x8
    c300:	bl	a960 <sigaction@plt>
    c304:	cbz	w0, c314 <pop_all_cleanups@@Base+0x58>
    c308:	mov	w8, #0xffffffff            	// #-1
    c30c:	stur	w8, [x29, #-4]
    c310:	b	c378 <pop_all_cleanups@@Base+0xbc>
    c314:	ldur	x8, [x29, #-16]
    c318:	ldr	x8, [x8]
    c31c:	cbnz	x8, c374 <pop_all_cleanups@@Base+0xb8>
    c320:	add	x8, sp, #0x8
    c324:	mov	x0, x8
    c328:	mov	w9, wzr
    c32c:	mov	w1, w9
    c330:	mov	x2, #0x98                  	// #152
    c334:	str	x8, [sp]
    c338:	bl	a970 <memset@plt>
    c33c:	adrp	x8, c000 <push_cleanup@@Base+0x1ec>
    c340:	add	x8, x8, #0x388
    c344:	str	x8, [sp, #8]
    c348:	ldr	x8, [sp]
    c34c:	add	x0, x8, #0x8
    c350:	bl	a980 <sigemptyset@plt>
    c354:	str	wzr, [sp, #144]
    c358:	ldur	w9, [x29, #-8]
    c35c:	ldur	x2, [x29, #-16]
    c360:	mov	w0, w9
    c364:	ldr	x1, [sp]
    c368:	bl	a960 <sigaction@plt>
    c36c:	stur	w0, [x29, #-4]
    c370:	b	c378 <pop_all_cleanups@@Base+0xbc>
    c374:	stur	wzr, [x29, #-4]
    c378:	ldur	w0, [x29, #-4]
    c37c:	ldp	x29, x30, [sp, #176]
    c380:	add	sp, sp, #0xc0
    c384:	ret
    c388:	sub	sp, sp, #0x170
    c38c:	stp	x29, x30, [sp, #336]
    c390:	str	x28, [sp, #352]
    c394:	add	x29, sp, #0x150
    c398:	mov	w8, #0x1                   	// #1
    c39c:	mov	x2, #0x98                  	// #152
    c3a0:	mov	x9, xzr
    c3a4:	mov	w10, wzr
    c3a8:	mov	x1, x9
    c3ac:	sub	x11, x29, #0xa0
    c3b0:	stur	w0, [x29, #-4]
    c3b4:	mov	w0, w8
    c3b8:	str	x2, [sp, #40]
    c3bc:	str	x9, [sp, #32]
    c3c0:	str	w10, [sp, #28]
    c3c4:	str	x1, [sp, #16]
    c3c8:	str	x11, [sp, #8]
    c3cc:	bl	a920 <do_cleanups_sigsafe@plt>
    c3d0:	ldr	x0, [sp, #8]
    c3d4:	ldr	w8, [sp, #28]
    c3d8:	mov	w1, w8
    c3dc:	ldr	x2, [sp, #40]
    c3e0:	bl	a970 <memset@plt>
    c3e4:	ldr	x9, [sp, #32]
    c3e8:	stur	x9, [x29, #-160]
    c3ec:	ldr	x11, [sp, #8]
    c3f0:	add	x0, x11, #0x8
    c3f4:	bl	a980 <sigemptyset@plt>
    c3f8:	stur	wzr, [x29, #-24]
    c3fc:	ldur	w8, [x29, #-4]
    c400:	mov	w0, w8
    c404:	ldr	x1, [sp, #8]
    c408:	ldr	x2, [sp, #16]
    c40c:	bl	a960 <sigaction@plt>
    c410:	cbz	w0, c41c <pop_all_cleanups@@Base+0x160>
    c414:	mov	w0, #0x2                   	// #2
    c418:	bl	a990 <_exit@plt>
    c41c:	add	x0, sp, #0x30
    c420:	bl	a980 <sigemptyset@plt>
    c424:	cbnz	w0, c450 <pop_all_cleanups@@Base+0x194>
    c428:	ldur	w1, [x29, #-4]
    c42c:	add	x0, sp, #0x30
    c430:	bl	a9a0 <sigaddset@plt>
    c434:	cbnz	w0, c450 <pop_all_cleanups@@Base+0x194>
    c438:	mov	w0, #0x1                   	// #1
    c43c:	add	x1, sp, #0x30
    c440:	mov	x8, xzr
    c444:	mov	x2, x8
    c448:	bl	a9b0 <sigprocmask@plt>
    c44c:	cbz	w0, c458 <pop_all_cleanups@@Base+0x19c>
    c450:	mov	w0, #0x2                   	// #2
    c454:	bl	a990 <_exit@plt>
    c458:	bl	a9c0 <getpid@plt>
    c45c:	ldur	w1, [x29, #-4]
    c460:	bl	a9d0 <kill@plt>
    c464:	bl	a9e0 <abort@plt>
    c468:	sub	sp, sp, #0xc0
    c46c:	stp	x29, x30, [sp, #176]
    c470:	add	x29, sp, #0xb0
    c474:	mov	x8, xzr
    c478:	add	x2, sp, #0x8
    c47c:	stur	w0, [x29, #-8]
    c480:	stur	x1, [x29, #-16]
    c484:	ldur	w0, [x29, #-8]
    c488:	mov	x1, x8
    c48c:	bl	a960 <sigaction@plt>
    c490:	cbz	w0, c4a0 <pop_all_cleanups@@Base+0x1e4>
    c494:	mov	w8, #0xffffffff            	// #-1
    c498:	stur	w8, [x29, #-4]
    c49c:	b	c4d4 <pop_all_cleanups@@Base+0x218>
    c4a0:	ldr	x8, [sp, #8]
    c4a4:	adrp	x9, c000 <push_cleanup@@Base+0x1ec>
    c4a8:	add	x9, x9, #0x388
    c4ac:	cmp	x8, x9
    c4b0:	b.ne	c4d0 <pop_all_cleanups@@Base+0x214>  // b.any
    c4b4:	ldur	w0, [x29, #-8]
    c4b8:	ldur	x1, [x29, #-16]
    c4bc:	mov	x8, xzr
    c4c0:	mov	x2, x8
    c4c4:	bl	a960 <sigaction@plt>
    c4c8:	stur	w0, [x29, #-4]
    c4cc:	b	c4d4 <pop_all_cleanups@@Base+0x218>
    c4d0:	stur	wzr, [x29, #-4]
    c4d4:	ldur	w0, [x29, #-4]
    c4d8:	ldp	x29, x30, [sp, #176]
    c4dc:	add	sp, sp, #0xc0
    c4e0:	ret

000000000000c4e4 <init_debug@@Base>:
    c4e4:	sub	sp, sp, #0x20
    c4e8:	stp	x29, x30, [sp, #16]
    c4ec:	add	x29, sp, #0x10
    c4f0:	adrp	x0, 44000 <vasnprintf@@Base+0x1e4c>
    c4f4:	add	x0, x0, #0x4b4
    c4f8:	bl	a9f0 <getenv@plt>
    c4fc:	str	x0, [sp, #8]
    c500:	ldr	x8, [sp, #8]
    c504:	cbz	x8, c52c <init_debug@@Base+0x48>
    c508:	ldr	x0, [sp, #8]
    c50c:	adrp	x1, 44000 <vasnprintf@@Base+0x1e4c>
    c510:	add	x1, x1, #0x4be
    c514:	bl	aa00 <strcmp@plt>
    c518:	cbnz	w0, c52c <init_debug@@Base+0x48>
    c51c:	adrp	x8, 5f000 <vasnprintf@@Base+0x1ce4c>
    c520:	ldr	x8, [x8, #3800]
    c524:	mov	w9, #0x1                   	// #1
    c528:	strb	w9, [x8]
    c52c:	ldp	x29, x30, [sp, #16]
    c530:	add	sp, sp, #0x20
    c534:	ret

000000000000c538 <debug@@Base>:
    c538:	sub	sp, sp, #0x140
    c53c:	stp	x29, x30, [sp, #288]
    c540:	str	x28, [sp, #304]
    c544:	add	x29, sp, #0x120
    c548:	sub	x8, x29, #0x28
    c54c:	str	q7, [sp, #128]
    c550:	str	q6, [sp, #112]
    c554:	str	q5, [sp, #96]
    c558:	str	q4, [sp, #80]
    c55c:	str	q3, [sp, #64]
    c560:	str	q2, [sp, #48]
    c564:	str	q1, [sp, #32]
    c568:	str	q0, [sp, #16]
    c56c:	stur	x7, [x29, #-88]
    c570:	stur	x6, [x29, #-96]
    c574:	stur	x5, [x29, #-104]
    c578:	stur	x4, [x29, #-112]
    c57c:	stur	x3, [x29, #-120]
    c580:	stur	x2, [x29, #-128]
    c584:	stur	x1, [x29, #-136]
    c588:	stur	x0, [x29, #-8]
    c58c:	adrp	x9, 5f000 <vasnprintf@@Base+0x1ce4c>
    c590:	ldr	x9, [x9, #3800]
    c594:	ldrb	w10, [x9]
    c598:	str	x8, [sp, #8]
    c59c:	tbz	w10, #0, c5f8 <debug@@Base+0xc0>
    c5a0:	b	c5a4 <debug@@Base+0x6c>
    c5a4:	mov	w8, #0xffffff80            	// #-128
    c5a8:	stur	w8, [x29, #-12]
    c5ac:	mov	w8, #0xffffffc8            	// #-56
    c5b0:	stur	w8, [x29, #-16]
    c5b4:	add	x9, x29, #0x20
    c5b8:	stur	x9, [x29, #-40]
    c5bc:	add	x9, sp, #0x10
    c5c0:	add	x9, x9, #0x80
    c5c4:	stur	x9, [x29, #-24]
    c5c8:	sub	x9, x29, #0x88
    c5cc:	add	x9, x9, #0x38
    c5d0:	stur	x9, [x29, #-32]
    c5d4:	ldur	x0, [x29, #-8]
    c5d8:	ldr	x9, [sp, #8]
    c5dc:	ldr	q0, [x9]
    c5e0:	ldr	q1, [x9, #16]
    c5e4:	stur	q1, [x29, #-64]
    c5e8:	stur	q0, [x29, #-80]
    c5ec:	sub	x1, x29, #0x50
    c5f0:	bl	c608 <debug@@Base+0xd0>
    c5f4:	b	c5f8 <debug@@Base+0xc0>
    c5f8:	ldr	x28, [sp, #304]
    c5fc:	ldp	x29, x30, [sp, #288]
    c600:	add	sp, sp, #0x140
    c604:	ret
    c608:	sub	sp, sp, #0x50
    c60c:	stp	x29, x30, [sp, #64]
    c610:	add	x29, sp, #0x40
    c614:	adrp	x8, 5f000 <vasnprintf@@Base+0x1ce4c>
    c618:	ldr	x8, [x8, #3800]
    c61c:	stur	x0, [x29, #-8]
    c620:	ldrb	w9, [x8]
    c624:	str	x1, [sp, #8]
    c628:	tbnz	w9, #0, c630 <debug@@Base+0xf8>
    c62c:	b	c65c <debug@@Base+0x124>
    c630:	adrp	x8, 5f000 <vasnprintf@@Base+0x1ce4c>
    c634:	ldr	x8, [x8, #3808]
    c638:	ldr	x0, [x8]
    c63c:	ldur	x1, [x29, #-8]
    c640:	ldr	x8, [sp, #8]
    c644:	ldr	q0, [x8]
    c648:	add	x2, sp, #0x10
    c64c:	str	q0, [sp, #16]
    c650:	ldr	q0, [x8, #16]
    c654:	str	q0, [sp, #32]
    c658:	bl	aa10 <vfprintf@plt>
    c65c:	ldp	x29, x30, [sp, #64]
    c660:	add	sp, sp, #0x50
    c664:	ret

000000000000c668 <debug_error@@Base>:
    c668:	sub	sp, sp, #0x140
    c66c:	stp	x29, x30, [sp, #288]
    c670:	str	x28, [sp, #304]
    c674:	add	x29, sp, #0x120
    c678:	sub	x8, x29, #0x28
    c67c:	str	q7, [sp, #128]
    c680:	str	q6, [sp, #112]
    c684:	str	q5, [sp, #96]
    c688:	str	q4, [sp, #80]
    c68c:	str	q3, [sp, #64]
    c690:	str	q2, [sp, #48]
    c694:	str	q1, [sp, #32]
    c698:	str	q0, [sp, #16]
    c69c:	stur	x7, [x29, #-88]
    c6a0:	stur	x6, [x29, #-96]
    c6a4:	stur	x5, [x29, #-104]
    c6a8:	stur	x4, [x29, #-112]
    c6ac:	stur	x3, [x29, #-120]
    c6b0:	stur	x2, [x29, #-128]
    c6b4:	stur	x1, [x29, #-136]
    c6b8:	stur	x0, [x29, #-8]
    c6bc:	adrp	x9, 5f000 <vasnprintf@@Base+0x1ce4c>
    c6c0:	ldr	x9, [x9, #3800]
    c6c4:	ldrb	w10, [x9]
    c6c8:	str	x8, [sp, #8]
    c6cc:	tbz	w10, #0, c74c <debug_error@@Base+0xe4>
    c6d0:	b	c6d4 <debug_error@@Base+0x6c>
    c6d4:	mov	w8, #0xffffff80            	// #-128
    c6d8:	stur	w8, [x29, #-12]
    c6dc:	mov	w8, #0xffffffc8            	// #-56
    c6e0:	stur	w8, [x29, #-16]
    c6e4:	add	x9, x29, #0x20
    c6e8:	stur	x9, [x29, #-40]
    c6ec:	add	x9, sp, #0x10
    c6f0:	add	x9, x9, #0x80
    c6f4:	stur	x9, [x29, #-24]
    c6f8:	sub	x9, x29, #0x88
    c6fc:	add	x9, x9, #0x38
    c700:	stur	x9, [x29, #-32]
    c704:	ldur	x0, [x29, #-8]
    c708:	ldr	x9, [sp, #8]
    c70c:	ldr	q0, [x9]
    c710:	ldr	q1, [x9, #16]
    c714:	stur	q1, [x29, #-64]
    c718:	stur	q0, [x29, #-80]
    c71c:	sub	x1, x29, #0x50
    c720:	bl	c608 <debug@@Base+0xd0>
    c724:	bl	aa20 <__errno_location@plt>
    c728:	ldr	w0, [x0]
    c72c:	bl	aa30 <strerror@plt>
    c730:	adrp	x9, 44000 <vasnprintf@@Base+0x1e4c>
    c734:	add	x9, x9, #0x4c0
    c738:	str	x0, [sp]
    c73c:	mov	x0, x9
    c740:	ldr	x1, [sp]
    c744:	bl	aa40 <debug@plt>
    c748:	b	c74c <debug_error@@Base+0xe4>
    c74c:	ldr	x28, [sp, #304]
    c750:	ldp	x29, x30, [sp, #288]
    c754:	add	sp, sp, #0x140
    c758:	ret

000000000000c75c <get_groff_preconv@@Base>:
    c75c:	sub	sp, sp, #0x20
    c760:	stp	x29, x30, [sp, #16]
    c764:	add	x29, sp, #0x10
    c768:	adrp	x8, 5f000 <vasnprintf@@Base+0x1ce4c>
    c76c:	ldr	x8, [x8, #3816]
    c770:	ldr	x9, [x8]
    c774:	str	x8, [sp]
    c778:	cbz	x9, c7a8 <get_groff_preconv@@Base+0x4c>
    c77c:	ldr	x8, [sp]
    c780:	ldr	x9, [x8]
    c784:	ldrb	w10, [x9]
    c788:	cbz	w10, c79c <get_groff_preconv@@Base+0x40>
    c78c:	ldr	x8, [sp]
    c790:	ldr	x9, [x8]
    c794:	str	x9, [sp, #8]
    c798:	b	c830 <get_groff_preconv@@Base+0xd4>
    c79c:	mov	x8, xzr
    c7a0:	str	x8, [sp, #8]
    c7a4:	b	c830 <get_groff_preconv@@Base+0xd4>
    c7a8:	adrp	x0, 44000 <vasnprintf@@Base+0x1e4c>
    c7ac:	add	x0, x0, #0x4c6
    c7b0:	bl	aa50 <pathsearch_executable@plt>
    c7b4:	tbnz	w0, #0, c7bc <get_groff_preconv@@Base+0x60>
    c7b8:	b	c7d0 <get_groff_preconv@@Base+0x74>
    c7bc:	adrp	x8, 44000 <vasnprintf@@Base+0x1e4c>
    c7c0:	add	x8, x8, #0x4c6
    c7c4:	ldr	x9, [sp]
    c7c8:	str	x8, [x9]
    c7cc:	b	c808 <get_groff_preconv@@Base+0xac>
    c7d0:	adrp	x0, 44000 <vasnprintf@@Base+0x1e4c>
    c7d4:	add	x0, x0, #0x4cf
    c7d8:	bl	aa50 <pathsearch_executable@plt>
    c7dc:	tbnz	w0, #0, c7e4 <get_groff_preconv@@Base+0x88>
    c7e0:	b	c7f8 <get_groff_preconv@@Base+0x9c>
    c7e4:	adrp	x8, 44000 <vasnprintf@@Base+0x1e4c>
    c7e8:	add	x8, x8, #0x4cf
    c7ec:	ldr	x9, [sp]
    c7f0:	str	x8, [x9]
    c7f4:	b	c808 <get_groff_preconv@@Base+0xac>
    c7f8:	adrp	x8, 44000 <vasnprintf@@Base+0x1e4c>
    c7fc:	add	x8, x8, #0x4d7
    c800:	ldr	x9, [sp]
    c804:	str	x8, [x9]
    c808:	ldr	x8, [sp]
    c80c:	ldr	x9, [x8]
    c810:	ldrb	w10, [x9]
    c814:	cbz	w10, c828 <get_groff_preconv@@Base+0xcc>
    c818:	ldr	x8, [sp]
    c81c:	ldr	x9, [x8]
    c820:	str	x9, [sp, #8]
    c824:	b	c830 <get_groff_preconv@@Base+0xd4>
    c828:	mov	x8, xzr
    c82c:	str	x8, [sp, #8]
    c830:	ldr	x0, [sp, #8]
    c834:	ldp	x29, x30, [sp, #16]
    c838:	add	sp, sp, #0x20
    c83c:	ret

000000000000c840 <get_page_encoding@@Base>:
    c840:	sub	sp, sp, #0x70
    c844:	stp	x29, x30, [sp, #96]
    c848:	add	x29, sp, #0x60
    c84c:	stur	x0, [x29, #-16]
    c850:	ldur	x8, [x29, #-16]
    c854:	cbz	x8, c864 <get_page_encoding@@Base+0x24>
    c858:	ldur	x8, [x29, #-16]
    c85c:	ldrb	w9, [x8]
    c860:	cbnz	w9, c894 <get_page_encoding@@Base+0x54>
    c864:	mov	w0, #0x5                   	// #5
    c868:	mov	x8, xzr
    c86c:	mov	x1, x8
    c870:	bl	aa60 <setlocale@plt>
    c874:	stur	x0, [x29, #-16]
    c878:	ldur	x8, [x29, #-16]
    c87c:	cbnz	x8, c894 <get_page_encoding@@Base+0x54>
    c880:	adrp	x0, 45000 <vasnprintf@@Base+0x2e4c>
    c884:	add	x0, x0, #0x8c0
    c888:	bl	aa70 <xstrdup@plt>
    c88c:	stur	x0, [x29, #-8]
    c890:	b	c998 <get_page_encoding@@Base+0x158>
    c894:	ldur	x0, [x29, #-16]
    c898:	mov	w1, #0x2e                  	// #46
    c89c:	bl	aa80 <strchr@plt>
    c8a0:	stur	x0, [x29, #-32]
    c8a4:	ldur	x8, [x29, #-32]
    c8a8:	cbz	x8, c90c <get_page_encoding@@Base+0xcc>
    c8ac:	ldur	x8, [x29, #-32]
    c8b0:	add	x0, x8, #0x1
    c8b4:	ldur	x8, [x29, #-32]
    c8b8:	add	x8, x8, #0x1
    c8bc:	str	x0, [sp, #40]
    c8c0:	mov	x0, x8
    c8c4:	adrp	x1, 44000 <vasnprintf@@Base+0x1e4c>
    c8c8:	add	x1, x1, #0x4d8
    c8cc:	bl	aa90 <strcspn@plt>
    c8d0:	ldr	x8, [sp, #40]
    c8d4:	str	x0, [sp, #32]
    c8d8:	mov	x0, x8
    c8dc:	ldr	x1, [sp, #32]
    c8e0:	bl	aaa0 <xstrndup@plt>
    c8e4:	stur	x0, [x29, #-40]
    c8e8:	ldur	x0, [x29, #-40]
    c8ec:	bl	aab0 <get_canonical_charset_name@plt>
    c8f0:	bl	aa70 <xstrdup@plt>
    c8f4:	str	x0, [sp, #48]
    c8f8:	ldur	x0, [x29, #-40]
    c8fc:	bl	a930 <free@plt>
    c900:	ldr	x8, [sp, #48]
    c904:	stur	x8, [x29, #-8]
    c908:	b	c998 <get_page_encoding@@Base+0x158>
    c90c:	adrp	x8, 60000 <__gmon_start__>
    c910:	add	x8, x8, #0x850
    c914:	stur	x8, [x29, #-24]
    c918:	ldur	x8, [x29, #-24]
    c91c:	ldr	x8, [x8]
    c920:	cbz	x8, c988 <get_page_encoding@@Base+0x148>
    c924:	ldur	x8, [x29, #-24]
    c928:	ldr	x0, [x8]
    c92c:	ldur	x1, [x29, #-16]
    c930:	ldur	x8, [x29, #-24]
    c934:	ldr	x8, [x8]
    c938:	str	x0, [sp, #24]
    c93c:	mov	x0, x8
    c940:	str	x1, [sp, #16]
    c944:	bl	a8e0 <strlen@plt>
    c948:	ldr	x8, [sp, #24]
    c94c:	str	x0, [sp, #8]
    c950:	mov	x0, x8
    c954:	ldr	x1, [sp, #16]
    c958:	ldr	x2, [sp, #8]
    c95c:	bl	aac0 <strncmp@plt>
    c960:	cbnz	w0, c978 <get_page_encoding@@Base+0x138>
    c964:	ldur	x8, [x29, #-24]
    c968:	ldr	x0, [x8, #8]
    c96c:	bl	aa70 <xstrdup@plt>
    c970:	stur	x0, [x29, #-8]
    c974:	b	c998 <get_page_encoding@@Base+0x158>
    c978:	ldur	x8, [x29, #-24]
    c97c:	add	x8, x8, #0x10
    c980:	stur	x8, [x29, #-24]
    c984:	b	c918 <get_page_encoding@@Base+0xd8>
    c988:	adrp	x0, 45000 <vasnprintf@@Base+0x2e4c>
    c98c:	add	x0, x0, #0x8c0
    c990:	bl	aa70 <xstrdup@plt>
    c994:	stur	x0, [x29, #-8]
    c998:	ldur	x0, [x29, #-8]
    c99c:	ldp	x29, x30, [sp, #96]
    c9a0:	add	sp, sp, #0x70
    c9a4:	ret

000000000000c9a8 <get_canonical_charset_name@@Base>:
    c9a8:	sub	sp, sp, #0x40
    c9ac:	stp	x29, x30, [sp, #48]
    c9b0:	add	x29, sp, #0x30
    c9b4:	stur	x0, [x29, #-16]
    c9b8:	ldur	x0, [x29, #-16]
    c9bc:	bl	aa70 <xstrdup@plt>
    c9c0:	str	x0, [sp, #16]
    c9c4:	ldr	x8, [sp, #16]
    c9c8:	str	x8, [sp, #8]
    c9cc:	ldr	x8, [sp, #8]
    c9d0:	ldrb	w9, [x8]
    c9d4:	cbz	w9, c9fc <get_canonical_charset_name@@Base+0x54>
    c9d8:	ldr	x8, [sp, #8]
    c9dc:	ldrb	w0, [x8]
    c9e0:	bl	aad0 <toupper@plt>
    c9e4:	ldr	x8, [sp, #8]
    c9e8:	strb	w0, [x8]
    c9ec:	ldr	x8, [sp, #8]
    c9f0:	add	x8, x8, #0x1
    c9f4:	str	x8, [sp, #8]
    c9f8:	b	c9cc <get_canonical_charset_name@@Base+0x24>
    c9fc:	adrp	x8, 60000 <__gmon_start__>
    ca00:	add	x8, x8, #0xb30
    ca04:	str	x8, [sp, #24]
    ca08:	ldr	x8, [sp, #24]
    ca0c:	ldr	x8, [x8]
    ca10:	cbz	x8, ca50 <get_canonical_charset_name@@Base+0xa8>
    ca14:	ldr	x8, [sp, #24]
    ca18:	ldr	x0, [x8]
    ca1c:	ldr	x1, [sp, #16]
    ca20:	bl	aa00 <strcmp@plt>
    ca24:	cbnz	w0, ca40 <get_canonical_charset_name@@Base+0x98>
    ca28:	ldr	x0, [sp, #16]
    ca2c:	bl	a930 <free@plt>
    ca30:	ldr	x8, [sp, #24]
    ca34:	ldr	x8, [x8, #8]
    ca38:	stur	x8, [x29, #-8]
    ca3c:	b	ca60 <get_canonical_charset_name@@Base+0xb8>
    ca40:	ldr	x8, [sp, #24]
    ca44:	add	x8, x8, #0x10
    ca48:	str	x8, [sp, #24]
    ca4c:	b	ca08 <get_canonical_charset_name@@Base+0x60>
    ca50:	ldr	x0, [sp, #16]
    ca54:	bl	a930 <free@plt>
    ca58:	ldur	x8, [x29, #-16]
    ca5c:	stur	x8, [x29, #-8]
    ca60:	ldur	x0, [x29, #-8]
    ca64:	ldp	x29, x30, [sp, #48]
    ca68:	add	sp, sp, #0x40
    ca6c:	ret

000000000000ca70 <get_source_encoding@@Base>:
    ca70:	sub	sp, sp, #0x40
    ca74:	stp	x29, x30, [sp, #48]
    ca78:	add	x29, sp, #0x30
    ca7c:	stur	x0, [x29, #-16]
    ca80:	ldur	x8, [x29, #-16]
    ca84:	cbz	x8, ca94 <get_source_encoding@@Base+0x24>
    ca88:	ldur	x8, [x29, #-16]
    ca8c:	ldrb	w9, [x8]
    ca90:	cbnz	w9, cac0 <get_source_encoding@@Base+0x50>
    ca94:	mov	w0, #0x5                   	// #5
    ca98:	mov	x8, xzr
    ca9c:	mov	x1, x8
    caa0:	bl	aa60 <setlocale@plt>
    caa4:	stur	x0, [x29, #-16]
    caa8:	ldur	x8, [x29, #-16]
    caac:	cbnz	x8, cac0 <get_source_encoding@@Base+0x50>
    cab0:	adrp	x8, 45000 <vasnprintf@@Base+0x2e4c>
    cab4:	add	x8, x8, #0x8c0
    cab8:	stur	x8, [x29, #-8]
    cabc:	b	cb44 <get_source_encoding@@Base+0xd4>
    cac0:	adrp	x8, 60000 <__gmon_start__>
    cac4:	add	x8, x8, #0x850
    cac8:	str	x8, [sp, #24]
    cacc:	ldr	x8, [sp, #24]
    cad0:	ldr	x8, [x8]
    cad4:	cbz	x8, cb38 <get_source_encoding@@Base+0xc8>
    cad8:	ldr	x8, [sp, #24]
    cadc:	ldr	x0, [x8]
    cae0:	ldur	x1, [x29, #-16]
    cae4:	ldr	x8, [sp, #24]
    cae8:	ldr	x8, [x8]
    caec:	str	x0, [sp, #16]
    caf0:	mov	x0, x8
    caf4:	str	x1, [sp, #8]
    caf8:	bl	a8e0 <strlen@plt>
    cafc:	ldr	x8, [sp, #16]
    cb00:	str	x0, [sp]
    cb04:	mov	x0, x8
    cb08:	ldr	x1, [sp, #8]
    cb0c:	ldr	x2, [sp]
    cb10:	bl	aac0 <strncmp@plt>
    cb14:	cbnz	w0, cb28 <get_source_encoding@@Base+0xb8>
    cb18:	ldr	x8, [sp, #24]
    cb1c:	ldr	x8, [x8, #8]
    cb20:	stur	x8, [x29, #-8]
    cb24:	b	cb44 <get_source_encoding@@Base+0xd4>
    cb28:	ldr	x8, [sp, #24]
    cb2c:	add	x8, x8, #0x10
    cb30:	str	x8, [sp, #24]
    cb34:	b	cacc <get_source_encoding@@Base+0x5c>
    cb38:	adrp	x8, 45000 <vasnprintf@@Base+0x2e4c>
    cb3c:	add	x8, x8, #0x8c0
    cb40:	stur	x8, [x29, #-8]
    cb44:	ldur	x0, [x29, #-8]
    cb48:	ldp	x29, x30, [sp, #48]
    cb4c:	add	sp, sp, #0x40
    cb50:	ret

000000000000cb54 <get_locale_charset@@Base>:
    cb54:	sub	sp, sp, #0x30
    cb58:	stp	x29, x30, [sp, #32]
    cb5c:	add	x29, sp, #0x20
    cb60:	mov	w8, wzr
    cb64:	mov	x9, xzr
    cb68:	mov	w0, w8
    cb6c:	mov	x1, x9
    cb70:	bl	aa60 <setlocale@plt>
    cb74:	str	x0, [sp, #8]
    cb78:	ldr	x9, [sp, #8]
    cb7c:	cbz	x9, cb8c <get_locale_charset@@Base+0x38>
    cb80:	ldr	x0, [sp, #8]
    cb84:	bl	aa70 <xstrdup@plt>
    cb88:	str	x0, [sp, #8]
    cb8c:	mov	w8, wzr
    cb90:	mov	w0, w8
    cb94:	adrp	x1, 44000 <vasnprintf@@Base+0x1e4c>
    cb98:	add	x1, x1, #0x4d7
    cb9c:	str	w8, [sp, #4]
    cba0:	bl	aa60 <setlocale@plt>
    cba4:	bl	aae0 <locale_charset@plt>
    cba8:	str	x0, [sp, #16]
    cbac:	ldr	x1, [sp, #8]
    cbb0:	ldr	w0, [sp, #4]
    cbb4:	bl	aa60 <setlocale@plt>
    cbb8:	ldr	x9, [sp, #8]
    cbbc:	mov	x0, x9
    cbc0:	bl	a930 <free@plt>
    cbc4:	ldr	x9, [sp, #16]
    cbc8:	cbz	x9, cbe8 <get_locale_charset@@Base+0x94>
    cbcc:	ldr	x8, [sp, #16]
    cbd0:	ldrb	w9, [x8]
    cbd4:	cbz	w9, cbe8 <get_locale_charset@@Base+0x94>
    cbd8:	ldr	x0, [sp, #16]
    cbdc:	bl	aab0 <get_canonical_charset_name@plt>
    cbe0:	stur	x0, [x29, #-8]
    cbe4:	b	cbf0 <get_locale_charset@@Base+0x9c>
    cbe8:	mov	x8, xzr
    cbec:	stur	x8, [x29, #-8]
    cbf0:	ldur	x0, [x29, #-8]
    cbf4:	ldp	x29, x30, [sp, #32]
    cbf8:	add	sp, sp, #0x30
    cbfc:	ret

000000000000cc00 <find_charset_locale@@Base>:
    cc00:	sub	sp, sp, #0xd0
    cc04:	stp	x29, x30, [sp, #192]
    cc08:	add	x29, sp, #0xc0
    cc0c:	adrp	x8, 44000 <vasnprintf@@Base+0x1e4c>
    cc10:	add	x8, x8, #0x4db
    cc14:	mov	x9, xzr
    cc18:	sub	x10, x29, #0x40
    cc1c:	stur	x0, [x29, #-16]
    cc20:	ldur	x0, [x29, #-16]
    cc24:	str	x8, [sp, #64]
    cc28:	str	x9, [sp, #56]
    cc2c:	str	x10, [sp, #48]
    cc30:	bl	aab0 <get_canonical_charset_name@plt>
    cc34:	stur	x0, [x29, #-24]
    cc38:	ldr	x8, [sp, #64]
    cc3c:	ldr	q0, [x8]
    cc40:	stur	q0, [x29, #-64]
    cc44:	ldur	q0, [x8, #10]
    cc48:	ldr	x9, [sp, #48]
    cc4c:	stur	q0, [x9, #10]
    cc50:	ldr	x10, [sp, #56]
    cc54:	stur	x10, [x29, #-72]
    cc58:	stur	x10, [x29, #-80]
    cc5c:	stur	xzr, [x29, #-88]
    cc60:	str	x10, [sp, #96]
    cc64:	ldur	x0, [x29, #-16]
    cc68:	str	x0, [sp, #40]
    cc6c:	bl	aaf0 <get_locale_charset@plt>
    cc70:	ldr	x8, [sp, #40]
    cc74:	str	x0, [sp, #32]
    cc78:	mov	x0, x8
    cc7c:	ldr	x1, [sp, #32]
    cc80:	bl	aa00 <strcmp@plt>
    cc84:	cbnz	w0, cc94 <find_charset_locale@@Base+0x94>
    cc88:	mov	x8, xzr
    cc8c:	stur	x8, [x29, #-8]
    cc90:	b	ceb4 <find_charset_locale@@Base+0x2b4>
    cc94:	mov	w8, wzr
    cc98:	mov	w0, w8
    cc9c:	mov	x9, xzr
    cca0:	mov	x1, x9
    cca4:	bl	aa60 <setlocale@plt>
    cca8:	stur	x0, [x29, #-32]
    ccac:	ldur	x9, [x29, #-32]
    ccb0:	cbz	x9, ccc0 <find_charset_locale@@Base+0xc0>
    ccb4:	ldur	x0, [x29, #-32]
    ccb8:	bl	aa70 <xstrdup@plt>
    ccbc:	stur	x0, [x29, #-32]
    ccc0:	sub	x0, x29, #0x40
    ccc4:	adrp	x1, 44000 <vasnprintf@@Base+0x1e4c>
    ccc8:	add	x1, x1, #0x4f5
    cccc:	bl	ab00 <fopen@plt>
    ccd0:	stur	x0, [x29, #-72]
    ccd4:	ldur	x8, [x29, #-72]
    ccd8:	mov	w9, #0x0                   	// #0
    ccdc:	str	w9, [sp, #28]
    cce0:	cbz	x8, cd00 <find_charset_locale@@Base+0x100>
    cce4:	ldur	x2, [x29, #-72]
    cce8:	sub	x0, x29, #0x50
    ccec:	sub	x1, x29, #0x58
    ccf0:	bl	ab10 <getline@plt>
    ccf4:	cmp	x0, #0x0
    ccf8:	cset	w8, ge  // ge = tcont
    ccfc:	str	w8, [sp, #28]
    cd00:	ldr	w8, [sp, #28]
    cd04:	tbnz	w8, #0, cd0c <find_charset_locale@@Base+0x10c>
    cd08:	b	cde8 <find_charset_locale@@Base+0x1e8>
    cd0c:	ldur	x0, [x29, #-80]
    cd10:	mov	w1, #0x20                  	// #32
    cd14:	bl	aa80 <strchr@plt>
    cd18:	str	x0, [sp, #88]
    cd1c:	ldr	x8, [sp, #88]
    cd20:	cbz	x8, cdd4 <find_charset_locale@@Base+0x1d4>
    cd24:	ldr	x8, [sp, #88]
    cd28:	add	x0, x8, #0x1
    cd2c:	bl	aa70 <xstrdup@plt>
    cd30:	str	x0, [sp, #80]
    cd34:	ldr	x0, [sp, #80]
    cd38:	mov	w1, #0xa                   	// #10
    cd3c:	bl	aa80 <strchr@plt>
    cd40:	str	x0, [sp, #72]
    cd44:	ldr	x8, [sp, #72]
    cd48:	cbz	x8, cd58 <find_charset_locale@@Base+0x158>
    cd4c:	ldr	x8, [sp, #72]
    cd50:	mov	w9, #0x0                   	// #0
    cd54:	strb	w9, [x8]
    cd58:	ldur	x0, [x29, #-24]
    cd5c:	ldr	x8, [sp, #80]
    cd60:	str	x0, [sp, #16]
    cd64:	mov	x0, x8
    cd68:	bl	aab0 <get_canonical_charset_name@plt>
    cd6c:	ldr	x8, [sp, #16]
    cd70:	str	x0, [sp, #8]
    cd74:	mov	x0, x8
    cd78:	ldr	x1, [sp, #8]
    cd7c:	bl	aa00 <strcmp@plt>
    cd80:	cbnz	w0, cdcc <find_charset_locale@@Base+0x1cc>
    cd84:	ldur	x0, [x29, #-80]
    cd88:	ldr	x8, [sp, #88]
    cd8c:	ldur	x9, [x29, #-80]
    cd90:	subs	x1, x8, x9
    cd94:	bl	aaa0 <xstrndup@plt>
    cd98:	str	x0, [sp, #96]
    cd9c:	ldr	x1, [sp, #96]
    cda0:	mov	w10, wzr
    cda4:	mov	w0, w10
    cda8:	bl	aa60 <setlocale@plt>
    cdac:	cbz	x0, cdbc <find_charset_locale@@Base+0x1bc>
    cdb0:	ldr	x0, [sp, #80]
    cdb4:	bl	a930 <free@plt>
    cdb8:	b	ce78 <find_charset_locale@@Base+0x278>
    cdbc:	ldr	x0, [sp, #96]
    cdc0:	bl	a930 <free@plt>
    cdc4:	mov	x8, xzr
    cdc8:	str	x8, [sp, #96]
    cdcc:	ldr	x0, [sp, #80]
    cdd0:	bl	a930 <free@plt>
    cdd4:	ldur	x0, [x29, #-80]
    cdd8:	bl	a930 <free@plt>
    cddc:	mov	x8, xzr
    cde0:	stur	x8, [x29, #-80]
    cde4:	b	ccd4 <find_charset_locale@@Base+0xd4>
    cde8:	ldur	x0, [x29, #-24]
    cdec:	bl	a8e0 <strlen@plt>
    cdf0:	cmp	x0, #0x5
    cdf4:	b.cc	ce78 <find_charset_locale@@Base+0x278>  // b.lo, b.ul, b.last
    cdf8:	ldur	x0, [x29, #-24]
    cdfc:	adrp	x1, 44000 <vasnprintf@@Base+0x1e4c>
    ce00:	add	x1, x1, #0x4f7
    ce04:	mov	x2, #0x5                   	// #5
    ce08:	bl	aac0 <strncmp@plt>
    ce0c:	cbnz	w0, ce78 <find_charset_locale@@Base+0x278>
    ce10:	adrp	x0, 44000 <vasnprintf@@Base+0x1e4c>
    ce14:	add	x0, x0, #0x4fd
    ce18:	bl	aa70 <xstrdup@plt>
    ce1c:	str	x0, [sp, #96]
    ce20:	ldr	x1, [sp, #96]
    ce24:	mov	w8, wzr
    ce28:	mov	w0, w8
    ce2c:	bl	aa60 <setlocale@plt>
    ce30:	cbz	x0, ce38 <find_charset_locale@@Base+0x238>
    ce34:	b	ce78 <find_charset_locale@@Base+0x278>
    ce38:	ldr	x0, [sp, #96]
    ce3c:	bl	a930 <free@plt>
    ce40:	adrp	x0, 44000 <vasnprintf@@Base+0x1e4c>
    ce44:	add	x0, x0, #0x505
    ce48:	bl	aa70 <xstrdup@plt>
    ce4c:	str	x0, [sp, #96]
    ce50:	ldr	x1, [sp, #96]
    ce54:	mov	w8, wzr
    ce58:	mov	w0, w8
    ce5c:	bl	aa60 <setlocale@plt>
    ce60:	cbz	x0, ce68 <find_charset_locale@@Base+0x268>
    ce64:	b	ce78 <find_charset_locale@@Base+0x278>
    ce68:	ldr	x0, [sp, #96]
    ce6c:	bl	a930 <free@plt>
    ce70:	mov	x8, xzr
    ce74:	str	x8, [sp, #96]
    ce78:	ldur	x0, [x29, #-80]
    ce7c:	bl	a930 <free@plt>
    ce80:	ldur	x1, [x29, #-32]
    ce84:	mov	w8, wzr
    ce88:	mov	w0, w8
    ce8c:	bl	aa60 <setlocale@plt>
    ce90:	ldur	x9, [x29, #-32]
    ce94:	mov	x0, x9
    ce98:	bl	a930 <free@plt>
    ce9c:	ldur	x9, [x29, #-72]
    cea0:	cbz	x9, ceac <find_charset_locale@@Base+0x2ac>
    cea4:	ldur	x0, [x29, #-72]
    cea8:	bl	ab20 <fclose@plt>
    ceac:	ldr	x8, [sp, #96]
    ceb0:	stur	x8, [x29, #-8]
    ceb4:	ldur	x0, [x29, #-8]
    ceb8:	ldp	x29, x30, [sp, #192]
    cebc:	add	sp, sp, #0xd0
    cec0:	ret

000000000000cec4 <get_default_device@@Base>:
    cec4:	sub	sp, sp, #0x40
    cec8:	stp	x29, x30, [sp, #48]
    cecc:	add	x29, sp, #0x30
    ced0:	stur	x0, [x29, #-16]
    ced4:	str	x1, [sp, #24]
    ced8:	bl	ab30 <get_groff_preconv@plt>
    cedc:	cbz	x0, cf1c <get_default_device@@Base+0x58>
    cee0:	ldur	x8, [x29, #-16]
    cee4:	cbz	x8, cf0c <get_default_device@@Base+0x48>
    cee8:	ldur	x0, [x29, #-16]
    ceec:	adrp	x1, 44000 <vasnprintf@@Base+0x1e4c>
    cef0:	add	x1, x1, #0x511
    cef4:	bl	aa00 <strcmp@plt>
    cef8:	cbnz	w0, cf0c <get_default_device@@Base+0x48>
    cefc:	adrp	x8, 44000 <vasnprintf@@Base+0x1e4c>
    cf00:	add	x8, x8, #0x520
    cf04:	stur	x8, [x29, #-8]
    cf08:	b	cfbc <get_default_device@@Base+0xf8>
    cf0c:	adrp	x8, 44000 <vasnprintf@@Base+0x1e4c>
    cf10:	add	x8, x8, #0x526
    cf14:	stur	x8, [x29, #-8]
    cf18:	b	cfbc <get_default_device@@Base+0xf8>
    cf1c:	ldur	x8, [x29, #-16]
    cf20:	cbnz	x8, cf38 <get_default_device@@Base+0x74>
    cf24:	adrp	x8, 60000 <__gmon_start__>
    cf28:	add	x8, x8, #0xdf0
    cf2c:	ldr	x8, [x8]
    cf30:	stur	x8, [x29, #-8]
    cf34:	b	cfbc <get_default_device@@Base+0xf8>
    cf38:	adrp	x8, 60000 <__gmon_start__>
    cf3c:	add	x8, x8, #0xdf8
    cf40:	str	x8, [sp, #16]
    cf44:	ldr	x8, [sp, #16]
    cf48:	ldr	x8, [x8]
    cf4c:	cbz	x8, cfac <get_default_device@@Base+0xe8>
    cf50:	ldr	x8, [sp, #16]
    cf54:	ldr	x0, [x8]
    cf58:	ldur	x1, [x29, #-16]
    cf5c:	bl	aa00 <strcmp@plt>
    cf60:	cbnz	w0, cf9c <get_default_device@@Base+0xd8>
    cf64:	ldr	x8, [sp, #16]
    cf68:	ldr	x0, [x8, #8]
    cf6c:	ldr	x1, [sp, #24]
    cf70:	bl	ab40 <get_roff_encoding@plt>
    cf74:	str	x0, [sp, #8]
    cf78:	ldr	x0, [sp, #24]
    cf7c:	ldr	x1, [sp, #8]
    cf80:	bl	d17c <get_roff_encoding@@Base+0x1b0>
    cf84:	tbnz	w0, #0, cf8c <get_default_device@@Base+0xc8>
    cf88:	b	cf9c <get_default_device@@Base+0xd8>
    cf8c:	ldr	x8, [sp, #16]
    cf90:	ldr	x8, [x8, #8]
    cf94:	stur	x8, [x29, #-8]
    cf98:	b	cfbc <get_default_device@@Base+0xf8>
    cf9c:	ldr	x8, [sp, #16]
    cfa0:	add	x8, x8, #0x10
    cfa4:	str	x8, [sp, #16]
    cfa8:	b	cf44 <get_default_device@@Base+0x80>
    cfac:	adrp	x8, 60000 <__gmon_start__>
    cfb0:	add	x8, x8, #0xdf0
    cfb4:	ldr	x8, [x8]
    cfb8:	stur	x8, [x29, #-8]
    cfbc:	ldur	x0, [x29, #-8]
    cfc0:	ldp	x29, x30, [sp, #48]
    cfc4:	add	sp, sp, #0x40
    cfc8:	ret

000000000000cfcc <get_roff_encoding@@Base>:
    cfcc:	sub	sp, sp, #0x50
    cfd0:	stp	x29, x30, [sp, #64]
    cfd4:	add	x29, sp, #0x40
    cfd8:	mov	w8, #0x0                   	// #0
    cfdc:	mov	x9, xzr
    cfe0:	stur	x0, [x29, #-8]
    cfe4:	stur	x1, [x29, #-16]
    cfe8:	sturb	w8, [x29, #-25]
    cfec:	str	x9, [sp, #24]
    cff0:	ldur	x9, [x29, #-8]
    cff4:	cbz	x9, d04c <get_roff_encoding@@Base+0x80>
    cff8:	adrp	x8, 60000 <__gmon_start__>
    cffc:	add	x8, x8, #0xe98
    d000:	stur	x8, [x29, #-24]
    d004:	ldur	x8, [x29, #-24]
    d008:	ldr	x8, [x8]
    d00c:	cbz	x8, d04c <get_roff_encoding@@Base+0x80>
    d010:	ldur	x8, [x29, #-24]
    d014:	ldr	x0, [x8]
    d018:	ldur	x1, [x29, #-8]
    d01c:	bl	aa00 <strcmp@plt>
    d020:	cbnz	w0, d03c <get_roff_encoding@@Base+0x70>
    d024:	mov	w8, #0x1                   	// #1
    d028:	sturb	w8, [x29, #-25]
    d02c:	ldur	x9, [x29, #-24]
    d030:	ldr	x9, [x9, #8]
    d034:	str	x9, [sp, #24]
    d038:	b	d04c <get_roff_encoding@@Base+0x80>
    d03c:	ldur	x8, [x29, #-24]
    d040:	add	x8, x8, #0x18
    d044:	stur	x8, [x29, #-24]
    d048:	b	d004 <get_roff_encoding@@Base+0x38>
    d04c:	ldurb	w8, [x29, #-25]
    d050:	tbnz	w8, #0, d060 <get_roff_encoding@@Base+0x94>
    d054:	adrp	x8, 45000 <vasnprintf@@Base+0x2e4c>
    d058:	add	x8, x8, #0x8cb
    d05c:	str	x8, [sp, #24]
    d060:	ldur	x8, [x29, #-8]
    d064:	cbz	x8, d14c <get_roff_encoding@@Base+0x180>
    d068:	ldur	x0, [x29, #-8]
    d06c:	adrp	x1, 44000 <vasnprintf@@Base+0x1e4c>
    d070:	add	x1, x1, #0x526
    d074:	bl	aa00 <strcmp@plt>
    d078:	cbnz	w0, d14c <get_roff_encoding@@Base+0x180>
    d07c:	bl	ab30 <get_groff_preconv@plt>
    d080:	cbnz	x0, d14c <get_roff_encoding@@Base+0x180>
    d084:	bl	aaf0 <get_locale_charset@plt>
    d088:	adrp	x1, 44000 <vasnprintf@@Base+0x1e4c>
    d08c:	add	x1, x1, #0x4f7
    d090:	bl	aa00 <strcmp@plt>
    d094:	cbnz	w0, d14c <get_roff_encoding@@Base+0x180>
    d098:	mov	w8, wzr
    d09c:	mov	w0, w8
    d0a0:	mov	x9, xzr
    d0a4:	mov	x1, x9
    d0a8:	bl	aa60 <setlocale@plt>
    d0ac:	str	x0, [sp, #16]
    d0b0:	ldr	x0, [sp, #16]
    d0b4:	adrp	x1, 44000 <vasnprintf@@Base+0x1e4c>
    d0b8:	add	x1, x1, #0x52b
    d0bc:	mov	x2, #0x5                   	// #5
    d0c0:	bl	aac0 <strncmp@plt>
    d0c4:	cbz	w0, d140 <get_roff_encoding@@Base+0x174>
    d0c8:	ldr	x0, [sp, #16]
    d0cc:	adrp	x1, 44000 <vasnprintf@@Base+0x1e4c>
    d0d0:	add	x1, x1, #0x531
    d0d4:	mov	x2, #0x5                   	// #5
    d0d8:	bl	aac0 <strncmp@plt>
    d0dc:	cbz	w0, d140 <get_roff_encoding@@Base+0x174>
    d0e0:	ldr	x0, [sp, #16]
    d0e4:	adrp	x1, 44000 <vasnprintf@@Base+0x1e4c>
    d0e8:	add	x1, x1, #0x537
    d0ec:	mov	x2, #0x5                   	// #5
    d0f0:	bl	aac0 <strncmp@plt>
    d0f4:	cbz	w0, d140 <get_roff_encoding@@Base+0x174>
    d0f8:	ldr	x0, [sp, #16]
    d0fc:	adrp	x1, 44000 <vasnprintf@@Base+0x1e4c>
    d100:	add	x1, x1, #0x53d
    d104:	mov	x2, #0x5                   	// #5
    d108:	bl	aac0 <strncmp@plt>
    d10c:	cbz	w0, d140 <get_roff_encoding@@Base+0x174>
    d110:	ldr	x0, [sp, #16]
    d114:	adrp	x1, 44000 <vasnprintf@@Base+0x1e4c>
    d118:	add	x1, x1, #0x543
    d11c:	mov	x2, #0x5                   	// #5
    d120:	bl	aac0 <strncmp@plt>
    d124:	cbz	w0, d140 <get_roff_encoding@@Base+0x174>
    d128:	ldr	x0, [sp, #16]
    d12c:	adrp	x1, 44000 <vasnprintf@@Base+0x1e4c>
    d130:	add	x1, x1, #0x549
    d134:	mov	x2, #0x5                   	// #5
    d138:	bl	aac0 <strncmp@plt>
    d13c:	cbnz	w0, d14c <get_roff_encoding@@Base+0x180>
    d140:	adrp	x8, 44000 <vasnprintf@@Base+0x1e4c>
    d144:	add	x8, x8, #0x4f7
    d148:	str	x8, [sp, #24]
    d14c:	ldr	x8, [sp, #24]
    d150:	cbz	x8, d160 <get_roff_encoding@@Base+0x194>
    d154:	ldr	x8, [sp, #24]
    d158:	str	x8, [sp, #8]
    d15c:	b	d168 <get_roff_encoding@@Base+0x19c>
    d160:	ldur	x8, [x29, #-16]
    d164:	str	x8, [sp, #8]
    d168:	ldr	x8, [sp, #8]
    d16c:	mov	x0, x8
    d170:	ldp	x29, x30, [sp, #64]
    d174:	add	sp, sp, #0x50
    d178:	ret
    d17c:	sub	sp, sp, #0x30
    d180:	stp	x29, x30, [sp, #32]
    d184:	add	x29, sp, #0x20
    d188:	str	x0, [sp, #16]
    d18c:	str	x1, [sp, #8]
    d190:	ldr	x0, [sp, #16]
    d194:	ldr	x1, [sp, #8]
    d198:	bl	aa00 <strcmp@plt>
    d19c:	cbnz	w0, d1b0 <get_roff_encoding@@Base+0x1e4>
    d1a0:	mov	w8, #0x1                   	// #1
    d1a4:	and	w8, w8, #0x1
    d1a8:	sturb	w8, [x29, #-1]
    d1ac:	b	d2d8 <get_roff_encoding@@Base+0x30c>
    d1b0:	ldr	x0, [sp, #16]
    d1b4:	adrp	x1, 44000 <vasnprintf@@Base+0x1e4c>
    d1b8:	add	x1, x1, #0x511
    d1bc:	bl	aa00 <strcmp@plt>
    d1c0:	cbnz	w0, d1d4 <get_roff_encoding@@Base+0x208>
    d1c4:	mov	w8, #0x1                   	// #1
    d1c8:	and	w8, w8, #0x1
    d1cc:	sturb	w8, [x29, #-1]
    d1d0:	b	d2d8 <get_roff_encoding@@Base+0x30c>
    d1d4:	ldr	x0, [sp, #16]
    d1d8:	adrp	x1, 44000 <vasnprintf@@Base+0x1e4c>
    d1dc:	add	x1, x1, #0x4f7
    d1e0:	bl	aa00 <strcmp@plt>
    d1e4:	cbnz	w0, d1f8 <get_roff_encoding@@Base+0x22c>
    d1e8:	mov	w8, #0x1                   	// #1
    d1ec:	and	w8, w8, #0x1
    d1f0:	sturb	w8, [x29, #-1]
    d1f4:	b	d2d8 <get_roff_encoding@@Base+0x30c>
    d1f8:	ldr	x0, [sp, #8]
    d1fc:	adrp	x1, 44000 <vasnprintf@@Base+0x1e4c>
    d200:	add	x1, x1, #0x511
    d204:	bl	aa00 <strcmp@plt>
    d208:	cbnz	w0, d21c <get_roff_encoding@@Base+0x250>
    d20c:	mov	w8, #0x1                   	// #1
    d210:	and	w8, w8, #0x1
    d214:	sturb	w8, [x29, #-1]
    d218:	b	d2d8 <get_roff_encoding@@Base+0x30c>
    d21c:	ldr	x0, [sp, #16]
    d220:	adrp	x1, 44000 <vasnprintf@@Base+0x1e4c>
    d224:	add	x1, x1, #0x73d
    d228:	bl	aa00 <strcmp@plt>
    d22c:	cbz	w0, d2a8 <get_roff_encoding@@Base+0x2dc>
    d230:	ldr	x0, [sp, #16]
    d234:	adrp	x1, 44000 <vasnprintf@@Base+0x1e4c>
    d238:	add	x1, x1, #0x733
    d23c:	bl	aa00 <strcmp@plt>
    d240:	cbz	w0, d2a8 <get_roff_encoding@@Base+0x2dc>
    d244:	ldr	x0, [sp, #16]
    d248:	adrp	x1, 44000 <vasnprintf@@Base+0x1e4c>
    d24c:	add	x1, x1, #0x6b6
    d250:	bl	aa00 <strcmp@plt>
    d254:	cbz	w0, d2a8 <get_roff_encoding@@Base+0x2dc>
    d258:	ldr	x0, [sp, #16]
    d25c:	adrp	x1, 44000 <vasnprintf@@Base+0x1e4c>
    d260:	add	x1, x1, #0x827
    d264:	bl	aa00 <strcmp@plt>
    d268:	cbz	w0, d2a8 <get_roff_encoding@@Base+0x2dc>
    d26c:	ldr	x0, [sp, #16]
    d270:	adrp	x1, 44000 <vasnprintf@@Base+0x1e4c>
    d274:	add	x1, x1, #0x72f
    d278:	bl	aa00 <strcmp@plt>
    d27c:	cbz	w0, d2a8 <get_roff_encoding@@Base+0x2dc>
    d280:	ldr	x0, [sp, #16]
    d284:	adrp	x1, 44000 <vasnprintf@@Base+0x1e4c>
    d288:	add	x1, x1, #0x6c0
    d28c:	bl	aa00 <strcmp@plt>
    d290:	cbz	w0, d2a8 <get_roff_encoding@@Base+0x2dc>
    d294:	ldr	x0, [sp, #16]
    d298:	adrp	x1, 44000 <vasnprintf@@Base+0x1e4c>
    d29c:	add	x1, x1, #0x840
    d2a0:	bl	aa00 <strcmp@plt>
    d2a4:	cbnz	w0, d2cc <get_roff_encoding@@Base+0x300>
    d2a8:	ldr	x0, [sp, #8]
    d2ac:	adrp	x1, 44000 <vasnprintf@@Base+0x1e4c>
    d2b0:	add	x1, x1, #0x4f7
    d2b4:	bl	aa00 <strcmp@plt>
    d2b8:	cbnz	w0, d2cc <get_roff_encoding@@Base+0x300>
    d2bc:	mov	w8, #0x1                   	// #1
    d2c0:	and	w8, w8, #0x1
    d2c4:	sturb	w8, [x29, #-1]
    d2c8:	b	d2d8 <get_roff_encoding@@Base+0x30c>
    d2cc:	mov	w8, wzr
    d2d0:	and	w8, w8, #0x1
    d2d4:	sturb	w8, [x29, #-1]
    d2d8:	ldurb	w8, [x29, #-1]
    d2dc:	and	w0, w8, #0x1
    d2e0:	ldp	x29, x30, [sp, #32]
    d2e4:	add	sp, sp, #0x30
    d2e8:	ret

000000000000d2ec <is_roff_device@@Base>:
    d2ec:	sub	sp, sp, #0x30
    d2f0:	stp	x29, x30, [sp, #32]
    d2f4:	add	x29, sp, #0x20
    d2f8:	adrp	x8, 60000 <__gmon_start__>
    d2fc:	add	x8, x8, #0xe98
    d300:	str	x0, [sp, #16]
    d304:	str	x8, [sp, #8]
    d308:	ldr	x8, [sp, #8]
    d30c:	ldr	x8, [x8]
    d310:	cbz	x8, d348 <is_roff_device@@Base+0x5c>
    d314:	ldr	x8, [sp, #8]
    d318:	ldr	x0, [x8]
    d31c:	ldr	x1, [sp, #16]
    d320:	bl	aa00 <strcmp@plt>
    d324:	cbnz	w0, d338 <is_roff_device@@Base+0x4c>
    d328:	mov	w8, #0x1                   	// #1
    d32c:	and	w8, w8, #0x1
    d330:	sturb	w8, [x29, #-1]
    d334:	b	d354 <is_roff_device@@Base+0x68>
    d338:	ldr	x8, [sp, #8]
    d33c:	add	x8, x8, #0x18
    d340:	str	x8, [sp, #8]
    d344:	b	d308 <is_roff_device@@Base+0x1c>
    d348:	mov	w8, wzr
    d34c:	and	w8, w8, #0x1
    d350:	sturb	w8, [x29, #-1]
    d354:	ldurb	w8, [x29, #-1]
    d358:	and	w0, w8, #0x1
    d35c:	ldp	x29, x30, [sp, #32]
    d360:	add	sp, sp, #0x30
    d364:	ret

000000000000d368 <get_output_encoding@@Base>:
    d368:	sub	sp, sp, #0x30
    d36c:	stp	x29, x30, [sp, #32]
    d370:	add	x29, sp, #0x20
    d374:	adrp	x8, 60000 <__gmon_start__>
    d378:	add	x8, x8, #0xe98
    d37c:	str	x0, [sp, #16]
    d380:	str	x8, [sp, #8]
    d384:	ldr	x8, [sp, #8]
    d388:	ldr	x8, [x8]
    d38c:	cbz	x8, d3c4 <get_output_encoding@@Base+0x5c>
    d390:	ldr	x8, [sp, #8]
    d394:	ldr	x0, [x8]
    d398:	ldr	x1, [sp, #16]
    d39c:	bl	aa00 <strcmp@plt>
    d3a0:	cbnz	w0, d3b4 <get_output_encoding@@Base+0x4c>
    d3a4:	ldr	x8, [sp, #8]
    d3a8:	ldr	x8, [x8, #16]
    d3ac:	stur	x8, [x29, #-8]
    d3b0:	b	d3cc <get_output_encoding@@Base+0x64>
    d3b4:	ldr	x8, [sp, #8]
    d3b8:	add	x8, x8, #0x18
    d3bc:	str	x8, [sp, #8]
    d3c0:	b	d384 <get_output_encoding@@Base+0x1c>
    d3c4:	mov	x8, xzr
    d3c8:	stur	x8, [x29, #-8]
    d3cc:	ldur	x0, [x29, #-8]
    d3d0:	ldp	x29, x30, [sp, #32]
    d3d4:	add	sp, sp, #0x30
    d3d8:	ret

000000000000d3dc <get_less_charset@@Base>:
    d3dc:	sub	sp, sp, #0x30
    d3e0:	stp	x29, x30, [sp, #32]
    d3e4:	add	x29, sp, #0x20
    d3e8:	str	x0, [sp, #16]
    d3ec:	ldr	x8, [sp, #16]
    d3f0:	cbz	x8, d440 <get_less_charset@@Base+0x64>
    d3f4:	adrp	x8, 61000 <gl_rbtree_list_implementation@@Base+0x1468>
    d3f8:	add	x8, x8, #0x0
    d3fc:	str	x8, [sp, #8]
    d400:	ldr	x8, [sp, #8]
    d404:	ldr	x8, [x8]
    d408:	cbz	x8, d440 <get_less_charset@@Base+0x64>
    d40c:	ldr	x8, [sp, #8]
    d410:	ldr	x0, [x8]
    d414:	ldr	x1, [sp, #16]
    d418:	bl	aa00 <strcmp@plt>
    d41c:	cbnz	w0, d430 <get_less_charset@@Base+0x54>
    d420:	ldr	x8, [sp, #8]
    d424:	ldr	x8, [x8, #8]
    d428:	stur	x8, [x29, #-8]
    d42c:	b	d44c <get_less_charset@@Base+0x70>
    d430:	ldr	x8, [sp, #8]
    d434:	add	x8, x8, #0x18
    d438:	str	x8, [sp, #8]
    d43c:	b	d400 <get_less_charset@@Base+0x24>
    d440:	adrp	x8, 45000 <vasnprintf@@Base+0x2e4c>
    d444:	add	x8, x8, #0x8d6
    d448:	stur	x8, [x29, #-8]
    d44c:	ldur	x0, [x29, #-8]
    d450:	ldp	x29, x30, [sp, #32]
    d454:	add	sp, sp, #0x30
    d458:	ret

000000000000d45c <get_jless_charset@@Base>:
    d45c:	sub	sp, sp, #0x30
    d460:	stp	x29, x30, [sp, #32]
    d464:	add	x29, sp, #0x20
    d468:	str	x0, [sp, #16]
    d46c:	ldr	x8, [sp, #16]
    d470:	cbz	x8, d4c0 <get_jless_charset@@Base+0x64>
    d474:	adrp	x8, 61000 <gl_rbtree_list_implementation@@Base+0x1468>
    d478:	add	x8, x8, #0x0
    d47c:	str	x8, [sp, #8]
    d480:	ldr	x8, [sp, #8]
    d484:	ldr	x8, [x8]
    d488:	cbz	x8, d4c0 <get_jless_charset@@Base+0x64>
    d48c:	ldr	x8, [sp, #8]
    d490:	ldr	x0, [x8]
    d494:	ldr	x1, [sp, #16]
    d498:	bl	aa00 <strcmp@plt>
    d49c:	cbnz	w0, d4b0 <get_jless_charset@@Base+0x54>
    d4a0:	ldr	x8, [sp, #8]
    d4a4:	ldr	x8, [x8, #16]
    d4a8:	stur	x8, [x29, #-8]
    d4ac:	b	d4c8 <get_jless_charset@@Base+0x6c>
    d4b0:	ldr	x8, [sp, #8]
    d4b4:	add	x8, x8, #0x18
    d4b8:	str	x8, [sp, #8]
    d4bc:	b	d480 <get_jless_charset@@Base+0x24>
    d4c0:	mov	x8, xzr
    d4c4:	stur	x8, [x29, #-8]
    d4c8:	ldur	x0, [x29, #-8]
    d4cc:	ldp	x29, x30, [sp, #32]
    d4d0:	add	sp, sp, #0x30
    d4d4:	ret

000000000000d4d8 <check_preprocessor_encoding@@Base>:
    d4d8:	sub	sp, sp, #0x80
    d4dc:	stp	x29, x30, [sp, #112]
    d4e0:	add	x29, sp, #0x70
    d4e4:	mov	x8, xzr
    d4e8:	stur	x0, [x29, #-8]
    d4ec:	stur	x1, [x29, #-16]
    d4f0:	stur	x2, [x29, #-24]
    d4f4:	stur	x8, [x29, #-32]
    d4f8:	ldur	x0, [x29, #-8]
    d4fc:	str	x8, [sp, #16]
    d500:	bl	ab50 <pipeline_peekline@plt>
    d504:	stur	x0, [x29, #-40]
    d508:	ldr	x8, [sp, #16]
    d50c:	stur	x8, [x29, #-48]
    d510:	str	xzr, [sp, #40]
    d514:	ldur	x9, [x29, #-40]
    d518:	cbz	x9, d5bc <check_preprocessor_encoding@@Base+0xe4>
    d51c:	ldur	x0, [x29, #-40]
    d520:	adrp	x1, 44000 <vasnprintf@@Base+0x1e4c>
    d524:	add	x1, x1, #0x54f
    d528:	mov	x2, #0x4                   	// #4
    d52c:	bl	aac0 <strncmp@plt>
    d530:	cbz	w0, d54c <check_preprocessor_encoding@@Base+0x74>
    d534:	ldur	x0, [x29, #-40]
    d538:	adrp	x1, 44000 <vasnprintf@@Base+0x1e4c>
    d53c:	add	x1, x1, #0x554
    d540:	mov	x2, #0x4                   	// #4
    d544:	bl	aac0 <strncmp@plt>
    d548:	cbnz	w0, d5bc <check_preprocessor_encoding@@Base+0xe4>
    d54c:	ldur	x0, [x29, #-40]
    d550:	mov	w1, #0xa                   	// #10
    d554:	bl	aa80 <strchr@plt>
    d558:	str	x0, [sp, #32]
    d55c:	ldur	x8, [x29, #-40]
    d560:	add	x8, x8, #0x4
    d564:	stur	x8, [x29, #-48]
    d568:	ldr	x8, [sp, #32]
    d56c:	cbz	x8, d57c <check_preprocessor_encoding@@Base+0xa4>
    d570:	ldr	x8, [sp, #32]
    d574:	str	x8, [sp, #8]
    d578:	b	d590 <check_preprocessor_encoding@@Base+0xb8>
    d57c:	ldur	x0, [x29, #-48]
    d580:	mov	w8, wzr
    d584:	mov	w1, w8
    d588:	bl	aa80 <strchr@plt>
    d58c:	str	x0, [sp, #8]
    d590:	ldr	x8, [sp, #8]
    d594:	str	x8, [sp, #56]
    d598:	ldur	x0, [x29, #-48]
    d59c:	ldr	x8, [sp, #56]
    d5a0:	ldur	x9, [x29, #-48]
    d5a4:	subs	x1, x8, x9
    d5a8:	adrp	x2, 44000 <vasnprintf@@Base+0x1e4c>
    d5ac:	add	x2, x2, #0x559
    d5b0:	mov	x3, #0x3                   	// #3
    d5b4:	bl	ab60 <memmem@plt>
    d5b8:	str	x0, [sp, #48]
    d5bc:	ldur	x8, [x29, #-48]
    d5c0:	cbz	x8, d704 <check_preprocessor_encoding@@Base+0x22c>
    d5c4:	ldr	x8, [sp, #48]
    d5c8:	cbz	x8, d704 <check_preprocessor_encoding@@Base+0x22c>
    d5cc:	ldr	x8, [sp, #48]
    d5d0:	add	x8, x8, #0x3
    d5d4:	str	x8, [sp, #48]
    d5d8:	ldr	x8, [sp, #48]
    d5dc:	mov	w9, #0x0                   	// #0
    d5e0:	str	w9, [sp, #4]
    d5e4:	cbz	x8, d614 <check_preprocessor_encoding@@Base+0x13c>
    d5e8:	ldr	x8, [sp, #48]
    d5ec:	ldr	x9, [sp, #56]
    d5f0:	mov	w10, #0x0                   	// #0
    d5f4:	cmp	x8, x9
    d5f8:	str	w10, [sp, #4]
    d5fc:	b.cs	d614 <check_preprocessor_encoding@@Base+0x13c>  // b.hs, b.nlast
    d600:	ldr	x8, [sp, #48]
    d604:	ldrb	w9, [x8]
    d608:	cmp	w9, #0x0
    d60c:	cset	w9, ne  // ne = any
    d610:	str	w9, [sp, #4]
    d614:	ldr	w8, [sp, #4]
    d618:	tbnz	w8, #0, d620 <check_preprocessor_encoding@@Base+0x148>
    d61c:	b	d704 <check_preprocessor_encoding@@Base+0x22c>
    d620:	ldr	x8, [sp, #48]
    d624:	ldrb	w9, [x8]
    d628:	cmp	w9, #0x20
    d62c:	b.ne	d640 <check_preprocessor_encoding@@Base+0x168>  // b.any
    d630:	ldr	x8, [sp, #48]
    d634:	add	x8, x8, #0x1
    d638:	str	x8, [sp, #48]
    d63c:	b	d620 <check_preprocessor_encoding@@Base+0x148>
    d640:	ldr	x0, [sp, #48]
    d644:	adrp	x1, 44000 <vasnprintf@@Base+0x1e4c>
    d648:	add	x1, x1, #0x55d
    d64c:	mov	x2, #0x7                   	// #7
    d650:	bl	aac0 <strncmp@plt>
    d654:	cbnz	w0, d6d0 <check_preprocessor_encoding@@Base+0x1f8>
    d658:	ldr	x8, [sp, #48]
    d65c:	add	x8, x8, #0x7
    d660:	str	x8, [sp, #48]
    d664:	ldr	x8, [sp, #48]
    d668:	ldrb	w9, [x8]
    d66c:	cmp	w9, #0x20
    d670:	b.ne	d684 <check_preprocessor_encoding@@Base+0x1ac>  // b.any
    d674:	ldr	x8, [sp, #48]
    d678:	add	x8, x8, #0x1
    d67c:	str	x8, [sp, #48]
    d680:	b	d664 <check_preprocessor_encoding@@Base+0x18c>
    d684:	adrp	x8, 44000 <vasnprintf@@Base+0x1e4c>
    d688:	add	x8, x8, #0x565
    d68c:	str	x8, [sp, #24]
    d690:	ldr	x0, [sp, #48]
    d694:	ldr	x1, [sp, #24]
    d698:	bl	ab70 <strspn@plt>
    d69c:	str	x0, [sp, #40]
    d6a0:	ldr	x0, [sp, #48]
    d6a4:	ldr	x1, [sp, #40]
    d6a8:	bl	aaa0 <xstrndup@plt>
    d6ac:	stur	x0, [x29, #-32]
    d6b0:	ldur	x0, [x29, #-32]
    d6b4:	bl	d7e4 <check_preprocessor_encoding@@Base+0x30c>
    d6b8:	stur	x0, [x29, #-32]
    d6bc:	ldur	x1, [x29, #-32]
    d6c0:	adrp	x0, 44000 <vasnprintf@@Base+0x1e4c>
    d6c4:	add	x0, x0, #0x5ab
    d6c8:	bl	aa40 <debug@plt>
    d6cc:	b	d704 <check_preprocessor_encoding@@Base+0x22c>
    d6d0:	ldr	x0, [sp, #48]
    d6d4:	ldr	x8, [sp, #56]
    d6d8:	ldr	x9, [sp, #48]
    d6dc:	subs	x2, x8, x9
    d6e0:	mov	w1, #0x3b                  	// #59
    d6e4:	bl	ab80 <memchr@plt>
    d6e8:	str	x0, [sp, #48]
    d6ec:	ldr	x8, [sp, #48]
    d6f0:	cbz	x8, d700 <check_preprocessor_encoding@@Base+0x228>
    d6f4:	ldr	x8, [sp, #48]
    d6f8:	add	x8, x8, #0x1
    d6fc:	str	x8, [sp, #48]
    d700:	b	d5d8 <check_preprocessor_encoding@@Base+0x100>
    d704:	ldur	x8, [x29, #-16]
    d708:	cbz	x8, d7d4 <check_preprocessor_encoding@@Base+0x2fc>
    d70c:	ldur	x8, [x29, #-24]
    d710:	cbz	x8, d7d4 <check_preprocessor_encoding@@Base+0x2fc>
    d714:	ldur	x8, [x29, #-32]
    d718:	cbz	x8, d7d4 <check_preprocessor_encoding@@Base+0x2fc>
    d71c:	ldur	x0, [x29, #-32]
    d720:	ldur	x1, [x29, #-16]
    d724:	bl	ab90 <strcasecmp@plt>
    d728:	cbz	w0, d7d4 <check_preprocessor_encoding@@Base+0x2fc>
    d72c:	ldr	x8, [sp, #56]
    d730:	cbz	x8, d738 <check_preprocessor_encoding@@Base+0x260>
    d734:	b	d758 <check_preprocessor_encoding@@Base+0x280>
    d738:	adrp	x0, 44000 <vasnprintf@@Base+0x1e4c>
    d73c:	add	x0, x0, #0x5c6
    d740:	adrp	x1, 44000 <vasnprintf@@Base+0x1e4c>
    d744:	add	x1, x1, #0x5d4
    d748:	mov	w2, #0x39a                 	// #922
    d74c:	adrp	x3, 44000 <vasnprintf@@Base+0x1e4c>
    d750:	add	x3, x3, #0x5e0
    d754:	bl	a910 <__assert_fail@plt>
    d758:	ldr	x8, [sp, #48]
    d75c:	cbz	x8, d764 <check_preprocessor_encoding@@Base+0x28c>
    d760:	b	d784 <check_preprocessor_encoding@@Base+0x2ac>
    d764:	adrp	x0, 44000 <vasnprintf@@Base+0x1e4c>
    d768:	add	x0, x0, #0x625
    d76c:	adrp	x1, 44000 <vasnprintf@@Base+0x1e4c>
    d770:	add	x1, x1, #0x5d4
    d774:	mov	w2, #0x39b                 	// #923
    d778:	adrp	x3, 44000 <vasnprintf@@Base+0x1e4c>
    d77c:	add	x3, x3, #0x5e0
    d780:	bl	a910 <__assert_fail@plt>
    d784:	ldr	x8, [sp, #48]
    d788:	ldur	x9, [x29, #-40]
    d78c:	subs	x8, x8, x9
    d790:	ldur	x2, [x29, #-40]
    d794:	ldur	x3, [x29, #-16]
    d798:	ldr	x9, [sp, #56]
    d79c:	ldr	x10, [sp, #48]
    d7a0:	ldr	x11, [sp, #40]
    d7a4:	add	x10, x10, x11
    d7a8:	subs	x9, x9, x10
    d7ac:	ldr	x10, [sp, #48]
    d7b0:	ldr	x11, [sp, #40]
    d7b4:	add	x5, x10, x11
    d7b8:	adrp	x0, 44000 <vasnprintf@@Base+0x1e4c>
    d7bc:	add	x0, x0, #0x62f
    d7c0:	mov	w1, w8
    d7c4:	mov	w4, w9
    d7c8:	bl	aba0 <xasprintf@plt>
    d7cc:	ldur	x10, [x29, #-24]
    d7d0:	str	x0, [x10]
    d7d4:	ldur	x0, [x29, #-32]
    d7d8:	ldp	x29, x30, [sp, #112]
    d7dc:	add	sp, sp, #0x80
    d7e0:	ret
    d7e4:	sub	sp, sp, #0x30
    d7e8:	stp	x29, x30, [sp, #32]
    d7ec:	add	x29, sp, #0x20
    d7f0:	str	x0, [sp, #16]
    d7f4:	ldr	x0, [sp, #16]
    d7f8:	bl	a8e0 <strlen@plt>
    d7fc:	str	x0, [sp, #8]
    d800:	ldr	x8, [sp, #8]
    d804:	cmp	x8, #0x4
    d808:	b.ls	d848 <check_preprocessor_encoding@@Base+0x370>  // b.plast
    d80c:	ldr	x8, [sp, #16]
    d810:	ldr	x9, [sp, #8]
    d814:	add	x8, x8, x9
    d818:	mov	x9, #0xfffffffffffffffc    	// #-4
    d81c:	add	x0, x8, x9
    d820:	adrp	x1, 44000 <vasnprintf@@Base+0x1e4c>
    d824:	add	x1, x1, #0x975
    d828:	bl	ab90 <strcasecmp@plt>
    d82c:	cbnz	w0, d848 <check_preprocessor_encoding@@Base+0x370>
    d830:	ldr	x8, [sp, #16]
    d834:	ldr	x9, [sp, #8]
    d838:	subs	x9, x9, #0x4
    d83c:	add	x8, x8, x9
    d840:	mov	w10, #0x0                   	// #0
    d844:	strb	w10, [x8]
    d848:	ldr	x8, [sp, #8]
    d84c:	cmp	x8, #0x4
    d850:	b.ls	d890 <check_preprocessor_encoding@@Base+0x3b8>  // b.plast
    d854:	ldr	x8, [sp, #16]
    d858:	ldr	x9, [sp, #8]
    d85c:	add	x8, x8, x9
    d860:	mov	x9, #0xfffffffffffffffc    	// #-4
    d864:	add	x0, x8, x9
    d868:	adrp	x1, 44000 <vasnprintf@@Base+0x1e4c>
    d86c:	add	x1, x1, #0x97a
    d870:	bl	ab90 <strcasecmp@plt>
    d874:	cbnz	w0, d890 <check_preprocessor_encoding@@Base+0x3b8>
    d878:	ldr	x8, [sp, #16]
    d87c:	ldr	x9, [sp, #8]
    d880:	subs	x9, x9, #0x4
    d884:	add	x8, x8, x9
    d888:	mov	w10, #0x0                   	// #0
    d88c:	strb	w10, [x8]
    d890:	ldr	x8, [sp, #8]
    d894:	cmp	x8, #0x5
    d898:	b.ls	d8d8 <check_preprocessor_encoding@@Base+0x400>  // b.plast
    d89c:	ldr	x8, [sp, #16]
    d8a0:	ldr	x9, [sp, #8]
    d8a4:	add	x8, x8, x9
    d8a8:	mov	x9, #0xfffffffffffffffb    	// #-5
    d8ac:	add	x0, x8, x9
    d8b0:	adrp	x1, 44000 <vasnprintf@@Base+0x1e4c>
    d8b4:	add	x1, x1, #0x97f
    d8b8:	bl	ab90 <strcasecmp@plt>
    d8bc:	cbnz	w0, d8d8 <check_preprocessor_encoding@@Base+0x400>
    d8c0:	ldr	x8, [sp, #16]
    d8c4:	ldr	x9, [sp, #8]
    d8c8:	subs	x9, x9, #0x5
    d8cc:	add	x8, x8, x9
    d8d0:	mov	w10, #0x0                   	// #0
    d8d4:	strb	w10, [x8]
    d8d8:	adrp	x8, 61000 <gl_rbtree_list_implementation@@Base+0x1468>
    d8dc:	add	x8, x8, #0xc0
    d8e0:	str	x8, [sp]
    d8e4:	ldr	x8, [sp]
    d8e8:	ldr	x8, [x8]
    d8ec:	cbz	x8, d930 <check_preprocessor_encoding@@Base+0x458>
    d8f0:	ldr	x8, [sp]
    d8f4:	ldr	x0, [x8]
    d8f8:	ldr	x1, [sp, #16]
    d8fc:	bl	ab90 <strcasecmp@plt>
    d900:	cbnz	w0, d920 <check_preprocessor_encoding@@Base+0x448>
    d904:	ldr	x0, [sp, #16]
    d908:	bl	a930 <free@plt>
    d90c:	ldr	x8, [sp]
    d910:	ldr	x0, [x8, #8]
    d914:	bl	aa70 <xstrdup@plt>
    d918:	stur	x0, [x29, #-8]
    d91c:	b	d938 <check_preprocessor_encoding@@Base+0x460>
    d920:	ldr	x8, [sp]
    d924:	add	x8, x8, #0x10
    d928:	str	x8, [sp]
    d92c:	b	d8e4 <check_preprocessor_encoding@@Base+0x40c>
    d930:	ldr	x8, [sp, #16]
    d934:	stur	x8, [x29, #-8]
    d938:	ldur	x0, [x29, #-8]
    d93c:	ldp	x29, x30, [sp, #32]
    d940:	add	sp, sp, #0x30
    d944:	ret

000000000000d948 <string_equals@@Base>:
    d948:	sub	sp, sp, #0x20
    d94c:	stp	x29, x30, [sp, #16]
    d950:	add	x29, sp, #0x10
    d954:	str	x0, [sp, #8]
    d958:	str	x1, [sp]
    d95c:	ldr	x0, [sp, #8]
    d960:	ldr	x1, [sp]
    d964:	bl	aa00 <strcmp@plt>
    d968:	cmp	w0, #0x0
    d96c:	cset	w8, eq  // eq = none
    d970:	and	w0, w8, #0x1
    d974:	ldp	x29, x30, [sp, #16]
    d978:	add	sp, sp, #0x20
    d97c:	ret

000000000000d980 <string_hash@@Base>:
    d980:	sub	sp, sp, #0x30
    d984:	stp	x29, x30, [sp, #32]
    d988:	add	x29, sp, #0x20
    d98c:	stur	x0, [x29, #-8]
    d990:	ldur	x0, [x29, #-8]
    d994:	ldur	x8, [x29, #-8]
    d998:	str	x0, [sp, #16]
    d99c:	mov	x0, x8
    d9a0:	bl	a8e0 <strlen@plt>
    d9a4:	ldr	x8, [sp, #16]
    d9a8:	str	x0, [sp, #8]
    d9ac:	mov	x0, x8
    d9b0:	ldr	x1, [sp, #8]
    d9b4:	bl	abb0 <hash_pjw_bare@plt>
    d9b8:	ldp	x29, x30, [sp, #32]
    d9bc:	add	sp, sp, #0x30
    d9c0:	ret

000000000000d9c4 <plain_free@@Base>:
    d9c4:	sub	sp, sp, #0x20
    d9c8:	stp	x29, x30, [sp, #16]
    d9cc:	add	x29, sp, #0x10
    d9d0:	str	x0, [sp, #8]
    d9d4:	ldr	x0, [sp, #8]
    d9d8:	bl	a930 <free@plt>
    d9dc:	ldp	x29, x30, [sp, #16]
    d9e0:	add	sp, sp, #0x20
    d9e4:	ret

000000000000d9e8 <new_string_list@@Base>:
    d9e8:	sub	sp, sp, #0x20
    d9ec:	stp	x29, x30, [sp, #16]
    d9f0:	add	x29, sp, #0x10
    d9f4:	adrp	x8, 5f000 <vasnprintf@@Base+0x1ce4c>
    d9f8:	ldr	x8, [x8, #3824]
    d9fc:	adrp	x2, 5f000 <vasnprintf@@Base+0x1ce4c>
    da00:	ldr	x2, [x2, #3832]
    da04:	adrp	x3, 5f000 <vasnprintf@@Base+0x1ce4c>
    da08:	ldr	x3, [x3, #3840]
    da0c:	str	x0, [sp, #8]
    da10:	mov	w9, #0x1                   	// #1
    da14:	and	w9, w1, w9
    da18:	strb	w9, [sp, #7]
    da1c:	ldr	x0, [sp, #8]
    da20:	ldrb	w9, [sp, #7]
    da24:	mov	x1, x8
    da28:	and	w4, w9, #0x1
    da2c:	bl	abc0 <gl_list_create_empty@plt>
    da30:	ldp	x29, x30, [sp, #16]
    da34:	add	sp, sp, #0x20
    da38:	ret

000000000000da3c <new_string_map@@Base>:
    da3c:	sub	sp, sp, #0x20
    da40:	stp	x29, x30, [sp, #16]
    da44:	add	x29, sp, #0x10
    da48:	adrp	x8, 5f000 <vasnprintf@@Base+0x1ce4c>
    da4c:	ldr	x8, [x8, #3824]
    da50:	adrp	x2, 5f000 <vasnprintf@@Base+0x1ce4c>
    da54:	ldr	x2, [x2, #3832]
    da58:	adrp	x3, 5f000 <vasnprintf@@Base+0x1ce4c>
    da5c:	ldr	x3, [x3, #3840]
    da60:	str	x0, [sp, #8]
    da64:	str	x1, [sp]
    da68:	ldr	x0, [sp, #8]
    da6c:	ldr	x4, [sp]
    da70:	mov	x1, x8
    da74:	bl	abd0 <gl_map_create_empty@plt>
    da78:	ldp	x29, x30, [sp, #16]
    da7c:	add	sp, sp, #0x20
    da80:	ret

000000000000da84 <new_string_set@@Base>:
    da84:	sub	sp, sp, #0x20
    da88:	stp	x29, x30, [sp, #16]
    da8c:	add	x29, sp, #0x10
    da90:	adrp	x1, 5f000 <vasnprintf@@Base+0x1ce4c>
    da94:	ldr	x1, [x1, #3824]
    da98:	adrp	x2, 5f000 <vasnprintf@@Base+0x1ce4c>
    da9c:	ldr	x2, [x2, #3832]
    daa0:	adrp	x3, 5f000 <vasnprintf@@Base+0x1ce4c>
    daa4:	ldr	x3, [x3, #3840]
    daa8:	str	x0, [sp, #8]
    daac:	ldr	x0, [sp, #8]
    dab0:	bl	abe0 <gl_set_create_empty@plt>
    dab4:	ldp	x29, x30, [sp, #16]
    dab8:	add	sp, sp, #0x20
    dabc:	ret

000000000000dac0 <get_line_length@@Base>:
    dac0:	sub	sp, sp, #0x40
    dac4:	stp	x29, x30, [sp, #48]
    dac8:	add	x29, sp, #0x30
    dacc:	mov	w8, #0xffffffff            	// #-1
    dad0:	adrp	x9, 61000 <gl_rbtree_list_implementation@@Base+0x1468>
    dad4:	add	x9, x9, #0x360
    dad8:	str	w8, [sp, #20]
    dadc:	ldr	w10, [x9]
    dae0:	cmp	w10, w8
    dae4:	str	x9, [sp]
    dae8:	b.eq	dafc <get_line_length@@Base+0x3c>  // b.none
    daec:	ldr	x8, [sp]
    daf0:	ldr	w9, [x8]
    daf4:	stur	w9, [x29, #-4]
    daf8:	b	dc7c <get_line_length@@Base+0x1bc>
    dafc:	mov	w8, #0x50                  	// #80
    db00:	ldr	x9, [sp]
    db04:	str	w8, [x9]
    db08:	adrp	x0, 44000 <vasnprintf@@Base+0x1e4c>
    db0c:	add	x0, x0, #0xbdb
    db10:	bl	a9f0 <getenv@plt>
    db14:	stur	x0, [x29, #-16]
    db18:	ldur	x9, [x29, #-16]
    db1c:	cbz	x9, db50 <get_line_length@@Base+0x90>
    db20:	ldur	x0, [x29, #-16]
    db24:	bl	abf0 <atoi@plt>
    db28:	stur	w0, [x29, #-20]
    db2c:	ldur	w8, [x29, #-20]
    db30:	cmp	w8, #0x0
    db34:	cset	w8, le
    db38:	tbnz	w8, #0, db50 <get_line_length@@Base+0x90>
    db3c:	ldur	w8, [x29, #-20]
    db40:	ldr	x9, [sp]
    db44:	str	w8, [x9]
    db48:	stur	w8, [x29, #-4]
    db4c:	b	dc7c <get_line_length@@Base+0x1bc>
    db50:	adrp	x0, 44000 <vasnprintf@@Base+0x1e4c>
    db54:	add	x0, x0, #0xbe4
    db58:	bl	a9f0 <getenv@plt>
    db5c:	stur	x0, [x29, #-16]
    db60:	ldur	x8, [x29, #-16]
    db64:	cbz	x8, db98 <get_line_length@@Base+0xd8>
    db68:	ldur	x0, [x29, #-16]
    db6c:	bl	abf0 <atoi@plt>
    db70:	stur	w0, [x29, #-20]
    db74:	ldur	w8, [x29, #-20]
    db78:	cmp	w8, #0x0
    db7c:	cset	w8, le
    db80:	tbnz	w8, #0, db98 <get_line_length@@Base+0xd8>
    db84:	ldur	w8, [x29, #-20]
    db88:	ldr	x9, [sp]
    db8c:	str	w8, [x9]
    db90:	stur	w8, [x29, #-4]
    db94:	b	dc7c <get_line_length@@Base+0x1bc>
    db98:	adrp	x0, 44000 <vasnprintf@@Base+0x1e4c>
    db9c:	add	x0, x0, #0xbec
    dba0:	mov	w8, wzr
    dba4:	mov	w1, w8
    dba8:	bl	ac00 <open@plt>
    dbac:	str	w0, [sp, #24]
    dbb0:	ldr	w8, [sp, #24]
    dbb4:	cmp	w8, #0x0
    dbb8:	cset	w8, lt  // lt = tstop
    dbbc:	tbnz	w8, #0, dbcc <get_line_length@@Base+0x10c>
    dbc0:	ldr	w8, [sp, #24]
    dbc4:	str	w8, [sp, #20]
    dbc8:	b	dbf8 <get_line_length@@Base+0x138>
    dbcc:	mov	w0, #0x1                   	// #1
    dbd0:	bl	ac10 <isatty@plt>
    dbd4:	cbz	w0, dbe4 <get_line_length@@Base+0x124>
    dbd8:	mov	w8, #0x1                   	// #1
    dbdc:	str	w8, [sp, #20]
    dbe0:	b	dbf8 <get_line_length@@Base+0x138>
    dbe4:	mov	w8, wzr
    dbe8:	mov	w0, w8
    dbec:	bl	ac10 <isatty@plt>
    dbf0:	cbz	w0, dbf8 <get_line_length@@Base+0x138>
    dbf4:	str	wzr, [sp, #20]
    dbf8:	ldr	w8, [sp, #20]
    dbfc:	cmp	w8, #0x0
    dc00:	cset	w8, lt  // lt = tstop
    dc04:	tbnz	w8, #0, dc6c <get_line_length@@Base+0x1ac>
    dc08:	ldr	w0, [sp, #20]
    dc0c:	mov	w1, #0x5413                	// #21523
    dc10:	add	x2, sp, #0x8
    dc14:	bl	ac20 <rpl_ioctl@plt>
    dc18:	str	w0, [sp, #16]
    dc1c:	ldr	w8, [sp, #24]
    dc20:	cmp	w8, #0x0
    dc24:	cset	w8, lt  // lt = tstop
    dc28:	tbnz	w8, #0, dc34 <get_line_length@@Base+0x174>
    dc2c:	ldr	w0, [sp, #24]
    dc30:	bl	ac30 <close@plt>
    dc34:	ldr	w8, [sp, #16]
    dc38:	cbz	w8, dc4c <get_line_length@@Base+0x18c>
    dc3c:	adrp	x0, 44000 <vasnprintf@@Base+0x1e4c>
    dc40:	add	x0, x0, #0xbf5
    dc44:	bl	ac40 <perror@plt>
    dc48:	b	dc6c <get_line_length@@Base+0x1ac>
    dc4c:	add	x8, sp, #0x8
    dc50:	ldrh	w9, [x8, #2]
    dc54:	cbz	w9, dc6c <get_line_length@@Base+0x1ac>
    dc58:	ldrh	w8, [sp, #10]
    dc5c:	ldr	x9, [sp]
    dc60:	str	w8, [x9]
    dc64:	stur	w8, [x29, #-4]
    dc68:	b	dc7c <get_line_length@@Base+0x1bc>
    dc6c:	mov	w8, #0x50                  	// #80
    dc70:	ldr	x9, [sp]
    dc74:	str	w8, [x9]
    dc78:	stur	w8, [x29, #-4]
    dc7c:	ldur	w0, [x29, #-4]
    dc80:	ldp	x29, x30, [sp, #48]
    dc84:	add	sp, sp, #0x40
    dc88:	ret

000000000000dc8c <order_files@@Base>:
    dc8c:	sub	sp, sp, #0x190
    dc90:	stp	x29, x30, [sp, #368]
    dc94:	str	x28, [sp, #384]
    dc98:	add	x29, sp, #0x170
    dc9c:	mov	w8, #0x4000                	// #16384
    dca0:	adrp	x9, 5f000 <vasnprintf@@Base+0x1ce4c>
    dca4:	ldr	x9, [x9, #3848]
    dca8:	stur	x0, [x29, #-8]
    dcac:	stur	x1, [x29, #-16]
    dcb0:	ldur	x10, [x29, #-16]
    dcb4:	ldr	x10, [x10]
    dcb8:	stur	x10, [x29, #-24]
    dcbc:	stur	w8, [x29, #-36]
    dcc0:	ldur	w8, [x29, #-36]
    dcc4:	orr	w8, w8, #0x200000
    dcc8:	stur	w8, [x29, #-36]
    dccc:	ldur	x0, [x29, #-8]
    dcd0:	ldur	w1, [x29, #-36]
    dcd4:	str	x9, [sp, #24]
    dcd8:	bl	ac00 <open@plt>
    dcdc:	stur	w0, [x29, #-40]
    dce0:	ldur	w8, [x29, #-40]
    dce4:	cmp	w8, #0x0
    dce8:	cset	w8, ge  // ge = tcont
    dcec:	tbnz	w8, #0, dcf4 <order_files@@Base+0x68>
    dcf0:	b	deac <order_files@@Base+0x220>
    dcf4:	ldur	w0, [x29, #-40]
    dcf8:	sub	x1, x29, #0xa0
    dcfc:	bl	ac50 <fstatfs@plt>
    dd00:	cmp	w0, #0x0
    dd04:	cset	w8, ge  // ge = tcont
    dd08:	tbnz	w8, #0, dd18 <order_files@@Base+0x8c>
    dd0c:	ldur	w0, [x29, #-40]
    dd10:	bl	ac30 <close@plt>
    dd14:	b	deac <order_files@@Base+0x220>
    dd18:	adrp	x0, 5f000 <vasnprintf@@Base+0x1ce4c>
    dd1c:	ldr	x0, [x0, #3856]
    dd20:	adrp	x1, 5f000 <vasnprintf@@Base+0x1ce4c>
    dd24:	ldr	x1, [x1, #3824]
    dd28:	adrp	x2, 5f000 <vasnprintf@@Base+0x1ce4c>
    dd2c:	ldr	x2, [x2, #3832]
    dd30:	mov	x8, xzr
    dd34:	mov	x3, x8
    dd38:	adrp	x4, 5f000 <vasnprintf@@Base+0x1ce4c>
    dd3c:	ldr	x4, [x4, #3840]
    dd40:	bl	abd0 <gl_map_create_empty@plt>
    dd44:	ldr	x8, [sp, #24]
    dd48:	str	x0, [x8]
    dd4c:	adrp	x0, 5f000 <vasnprintf@@Base+0x1ce4c>
    dd50:	ldr	x0, [x0, #3864]
    dd54:	mov	w9, wzr
    dd58:	and	w1, w9, #0x1
    dd5c:	bl	ac60 <new_string_list@plt>
    dd60:	stur	x0, [x29, #-32]
    dd64:	ldur	x0, [x29, #-24]
    dd68:	add	x8, sp, #0x90
    dd6c:	bl	ac70 <gl_list_iterator@plt>
    dd70:	add	x0, sp, #0x90
    dd74:	sub	x1, x29, #0xa8
    dd78:	add	x2, sp, #0x88
    dd7c:	bl	ac80 <gl_list_iterator_next@plt>
    dd80:	tbnz	w0, #0, dd88 <order_files@@Base+0xfc>
    dd84:	b	de6c <order_files@@Base+0x1e0>
    dd88:	ldur	w0, [x29, #-40]
    dd8c:	ldur	x1, [x29, #-168]
    dd90:	mov	w8, wzr
    dd94:	mov	w2, w8
    dd98:	bl	ac90 <openat@plt>
    dd9c:	str	w0, [sp, #44]
    dda0:	ldr	w8, [sp, #44]
    dda4:	cmp	w8, #0x0
    dda8:	cset	w8, ge  // ge = tcont
    ddac:	tbnz	w8, #0, ddb4 <order_files@@Base+0x128>
    ddb0:	b	dd70 <order_files@@Base+0xe4>
    ddb4:	add	x8, sp, #0x30
    ddb8:	mov	x0, x8
    ddbc:	mov	w9, wzr
    ddc0:	mov	w1, w9
    ddc4:	mov	x2, #0x58                  	// #88
    ddc8:	str	x8, [sp, #16]
    ddcc:	bl	a970 <memset@plt>
    ddd0:	str	xzr, [sp, #48]
    ddd4:	ldur	x8, [x29, #-152]
    ddd8:	str	x8, [sp, #56]
    dddc:	str	wzr, [sp, #64]
    dde0:	mov	w9, #0x1                   	// #1
    dde4:	str	w9, [sp, #72]
    dde8:	ldr	w0, [sp, #44]
    ddec:	ldr	x8, [sp, #16]
    ddf0:	mov	w1, #0x660b                	// #26123
    ddf4:	movk	w1, #0xc020, lsl #16
    ddf8:	mov	x2, x8
    ddfc:	bl	ac20 <rpl_ioctl@plt>
    de00:	cbnz	w0, de30 <order_files@@Base+0x1a4>
    de04:	mov	x0, #0x8                   	// #8
    de08:	bl	aca0 <xmalloc@plt>
    de0c:	str	x0, [sp, #32]
    de10:	ldr	x8, [sp, #88]
    de14:	ldr	x9, [sp, #32]
    de18:	str	x8, [x9]
    de1c:	ldr	x8, [sp, #24]
    de20:	ldr	x0, [x8]
    de24:	ldur	x1, [x29, #-168]
    de28:	ldr	x2, [sp, #32]
    de2c:	bl	acb0 <gl_map_put@plt>
    de30:	ldr	w0, [sp, #44]
    de34:	bl	ac30 <close@plt>
    de38:	ldur	x8, [x29, #-32]
    de3c:	ldur	x9, [x29, #-168]
    de40:	mov	x0, x9
    de44:	str	x8, [sp, #8]
    de48:	bl	aa70 <xstrdup@plt>
    de4c:	ldr	x8, [sp, #8]
    de50:	str	x0, [sp]
    de54:	mov	x0, x8
    de58:	adrp	x1, d000 <get_roff_encoding@@Base+0x34>
    de5c:	add	x1, x1, #0xebc
    de60:	ldr	x2, [sp]
    de64:	bl	acc0 <gl_sortedlist_add@plt>
    de68:	b	dd70 <order_files@@Base+0xe4>
    de6c:	add	x0, sp, #0x90
    de70:	bl	acd0 <gl_list_iterator_free@plt>
    de74:	ldr	x8, [sp, #24]
    de78:	ldr	x0, [x8]
    de7c:	bl	ace0 <gl_map_free@plt>
    de80:	mov	x8, xzr
    de84:	ldr	x9, [sp, #24]
    de88:	str	x8, [x9]
    de8c:	ldur	w0, [x29, #-40]
    de90:	bl	ac30 <close@plt>
    de94:	ldur	x8, [x29, #-24]
    de98:	mov	x0, x8
    de9c:	bl	acf0 <gl_list_free@plt>
    dea0:	ldur	x8, [x29, #-32]
    dea4:	ldur	x9, [x29, #-16]
    dea8:	str	x8, [x9]
    deac:	ldr	x28, [sp, #384]
    deb0:	ldp	x29, x30, [sp, #368]
    deb4:	add	sp, sp, #0x190
    deb8:	ret
    debc:	sub	sp, sp, #0x70
    dec0:	stp	x29, x30, [sp, #96]
    dec4:	add	x29, sp, #0x60
    dec8:	adrp	x8, 5f000 <vasnprintf@@Base+0x1ce4c>
    decc:	ldr	x8, [x8, #3848]
    ded0:	stur	x0, [x29, #-16]
    ded4:	stur	x1, [x29, #-24]
    ded8:	ldur	x9, [x29, #-16]
    dedc:	stur	x9, [x29, #-32]
    dee0:	ldur	x9, [x29, #-24]
    dee4:	stur	x9, [x29, #-40]
    dee8:	ldr	x0, [x8]
    deec:	ldur	x1, [x29, #-32]
    def0:	str	x8, [sp, #16]
    def4:	bl	ad00 <gl_map_get@plt>
    def8:	str	x0, [sp, #48]
    defc:	ldr	x8, [sp, #16]
    df00:	ldr	x0, [x8]
    df04:	ldur	x1, [x29, #-40]
    df08:	bl	ad00 <gl_map_get@plt>
    df0c:	str	x0, [sp, #40]
    df10:	ldr	x8, [sp, #48]
    df14:	cbz	x8, df28 <order_files@@Base+0x29c>
    df18:	ldr	x8, [sp, #48]
    df1c:	ldr	x8, [x8]
    df20:	str	x8, [sp, #8]
    df24:	b	df30 <order_files@@Base+0x2a4>
    df28:	mov	x8, #0xffffffffffffffff    	// #-1
    df2c:	str	x8, [sp, #8]
    df30:	ldr	x8, [sp, #8]
    df34:	str	x8, [sp, #32]
    df38:	ldr	x8, [sp, #40]
    df3c:	cbz	x8, df50 <order_files@@Base+0x2c4>
    df40:	ldr	x8, [sp, #40]
    df44:	ldr	x8, [x8]
    df48:	str	x8, [sp]
    df4c:	b	df58 <order_files@@Base+0x2cc>
    df50:	mov	x8, #0xffffffffffffffff    	// #-1
    df54:	str	x8, [sp]
    df58:	ldr	x8, [sp]
    df5c:	str	x8, [sp, #24]
    df60:	ldr	x8, [sp, #32]
    df64:	ldr	x9, [sp, #24]
    df68:	cmp	x8, x9
    df6c:	b.cs	df7c <order_files@@Base+0x2f0>  // b.hs, b.nlast
    df70:	mov	w8, #0xffffffff            	// #-1
    df74:	stur	w8, [x29, #-4]
    df78:	b	df9c <order_files@@Base+0x310>
    df7c:	ldr	x8, [sp, #32]
    df80:	ldr	x9, [sp, #24]
    df84:	cmp	x8, x9
    df88:	b.ls	df98 <order_files@@Base+0x30c>  // b.plast
    df8c:	mov	w8, #0x1                   	// #1
    df90:	stur	w8, [x29, #-4]
    df94:	b	df9c <order_files@@Base+0x310>
    df98:	stur	wzr, [x29, #-4]
    df9c:	ldur	w0, [x29, #-4]
    dfa0:	ldp	x29, x30, [sp, #96]
    dfa4:	add	sp, sp, #0x70
    dfa8:	ret

000000000000dfac <pathsearch_executable@@Base>:
    dfac:	sub	sp, sp, #0x20
    dfb0:	stp	x29, x30, [sp, #16]
    dfb4:	add	x29, sp, #0x10
    dfb8:	mov	w1, #0x49                  	// #73
    dfbc:	str	x0, [sp, #8]
    dfc0:	ldr	x0, [sp, #8]
    dfc4:	bl	dfd8 <pathsearch_executable@@Base+0x2c>
    dfc8:	and	w0, w0, #0x1
    dfcc:	ldp	x29, x30, [sp, #16]
    dfd0:	add	sp, sp, #0x20
    dfd4:	ret
    dfd8:	sub	sp, sp, #0xe0
    dfdc:	stp	x29, x30, [sp, #208]
    dfe0:	add	x29, sp, #0xd0
    dfe4:	mov	x8, xzr
    dfe8:	adrp	x9, 44000 <vasnprintf@@Base+0x1e4c>
    dfec:	add	x9, x9, #0xc07
    dff0:	mov	w10, #0x0                   	// #0
    dff4:	stur	x0, [x29, #-16]
    dff8:	stur	w1, [x29, #-20]
    dffc:	stur	x8, [x29, #-32]
    e000:	mov	x0, x9
    e004:	str	w10, [sp, #4]
    e008:	bl	a9f0 <getenv@plt>
    e00c:	stur	x0, [x29, #-40]
    e010:	ldr	w10, [sp, #4]
    e014:	strb	w10, [sp, #23]
    e018:	ldur	x8, [x29, #-40]
    e01c:	cbnz	x8, e030 <pathsearch_executable@@Base+0x84>
    e020:	mov	w8, wzr
    e024:	and	w8, w8, #0x1
    e028:	sturb	w8, [x29, #-1]
    e02c:	b	e1a0 <pathsearch_executable@@Base+0x1f4>
    e030:	ldur	x0, [x29, #-16]
    e034:	mov	w1, #0x2f                  	// #47
    e038:	bl	aa80 <strchr@plt>
    e03c:	cbz	x0, e0a8 <pathsearch_executable@@Base+0xfc>
    e040:	ldur	x0, [x29, #-16]
    e044:	add	x1, sp, #0x18
    e048:	bl	443b8 <vasnprintf@@Base+0x2204>
    e04c:	mov	w8, #0xffffffff            	// #-1
    e050:	cmp	w0, w8
    e054:	b.ne	e068 <pathsearch_executable@@Base+0xbc>  // b.any
    e058:	mov	w8, wzr
    e05c:	and	w8, w8, #0x1
    e060:	sturb	w8, [x29, #-1]
    e064:	b	e1a0 <pathsearch_executable@@Base+0x1f4>
    e068:	ldr	w8, [sp, #40]
    e06c:	and	w8, w8, #0xf000
    e070:	cmp	w8, #0x8, lsl #12
    e074:	b.ne	e098 <pathsearch_executable@@Base+0xec>  // b.any
    e078:	ldr	w8, [sp, #40]
    e07c:	ldur	w9, [x29, #-20]
    e080:	and	w8, w8, w9
    e084:	cbz	w8, e098 <pathsearch_executable@@Base+0xec>
    e088:	mov	w8, #0x1                   	// #1
    e08c:	and	w8, w8, #0x1
    e090:	sturb	w8, [x29, #-1]
    e094:	b	e1a0 <pathsearch_executable@@Base+0x1f4>
    e098:	mov	w8, wzr
    e09c:	and	w8, w8, #0x1
    e0a0:	sturb	w8, [x29, #-1]
    e0a4:	b	e1a0 <pathsearch_executable@@Base+0x1f4>
    e0a8:	ldur	x0, [x29, #-40]
    e0ac:	bl	aa70 <xstrdup@plt>
    e0b0:	stur	x0, [x29, #-40]
    e0b4:	sub	x8, x29, #0x30
    e0b8:	stur	x0, [x29, #-48]
    e0bc:	mov	x0, x8
    e0c0:	adrp	x1, 44000 <vasnprintf@@Base+0x1e4c>
    e0c4:	add	x1, x1, #0xc0c
    e0c8:	bl	ad10 <strsep@plt>
    e0cc:	stur	x0, [x29, #-56]
    e0d0:	ldur	x8, [x29, #-56]
    e0d4:	cbz	x8, e184 <pathsearch_executable@@Base+0x1d8>
    e0d8:	ldur	x8, [x29, #-56]
    e0dc:	ldrb	w9, [x8]
    e0e0:	cbnz	w9, e0fc <pathsearch_executable@@Base+0x150>
    e0e4:	ldur	x8, [x29, #-32]
    e0e8:	cbnz	x8, e0f4 <pathsearch_executable@@Base+0x148>
    e0ec:	bl	ad20 <xgetcwd@plt>
    e0f0:	stur	x0, [x29, #-32]
    e0f4:	ldur	x8, [x29, #-32]
    e0f8:	stur	x8, [x29, #-56]
    e0fc:	ldur	x1, [x29, #-56]
    e100:	ldur	x2, [x29, #-16]
    e104:	adrp	x0, 44000 <vasnprintf@@Base+0x1e4c>
    e108:	add	x0, x0, #0xc0e
    e10c:	bl	aba0 <xasprintf@plt>
    e110:	str	x0, [sp, #8]
    e114:	ldr	x0, [sp, #8]
    e118:	add	x1, sp, #0x18
    e11c:	bl	443b8 <vasnprintf@@Base+0x2204>
    e120:	mov	w8, #0xffffffff            	// #-1
    e124:	cmp	w0, w8
    e128:	b.ne	e138 <pathsearch_executable@@Base+0x18c>  // b.any
    e12c:	ldr	x0, [sp, #8]
    e130:	bl	a930 <free@plt>
    e134:	b	e16c <pathsearch_executable@@Base+0x1c0>
    e138:	ldr	x0, [sp, #8]
    e13c:	bl	a930 <free@plt>
    e140:	ldr	w8, [sp, #40]
    e144:	and	w8, w8, #0xf000
    e148:	cmp	w8, #0x8, lsl #12
    e14c:	b.ne	e16c <pathsearch_executable@@Base+0x1c0>  // b.any
    e150:	ldr	w8, [sp, #40]
    e154:	ldur	w9, [x29, #-20]
    e158:	and	w8, w8, w9
    e15c:	cbz	w8, e16c <pathsearch_executable@@Base+0x1c0>
    e160:	mov	w8, #0x1                   	// #1
    e164:	strb	w8, [sp, #23]
    e168:	b	e184 <pathsearch_executable@@Base+0x1d8>
    e16c:	sub	x0, x29, #0x30
    e170:	adrp	x1, 44000 <vasnprintf@@Base+0x1e4c>
    e174:	add	x1, x1, #0xc0c
    e178:	bl	ad10 <strsep@plt>
    e17c:	stur	x0, [x29, #-56]
    e180:	b	e0d0 <pathsearch_executable@@Base+0x124>
    e184:	ldur	x0, [x29, #-40]
    e188:	bl	a930 <free@plt>
    e18c:	ldur	x0, [x29, #-32]
    e190:	bl	a930 <free@plt>
    e194:	ldrb	w8, [sp, #23]
    e198:	and	w8, w8, #0x1
    e19c:	sturb	w8, [x29, #-1]
    e1a0:	ldurb	w8, [x29, #-1]
    e1a4:	and	w0, w8, #0x1
    e1a8:	ldp	x29, x30, [sp, #208]
    e1ac:	add	sp, sp, #0xe0
    e1b0:	ret

000000000000e1b4 <directory_on_path@@Base>:
    e1b4:	sub	sp, sp, #0x50
    e1b8:	stp	x29, x30, [sp, #64]
    e1bc:	add	x29, sp, #0x40
    e1c0:	mov	x8, xzr
    e1c4:	adrp	x9, 44000 <vasnprintf@@Base+0x1e4c>
    e1c8:	add	x9, x9, #0xc07
    e1cc:	mov	w10, #0x0                   	// #0
    e1d0:	stur	x0, [x29, #-16]
    e1d4:	stur	x8, [x29, #-24]
    e1d8:	mov	x0, x9
    e1dc:	str	w10, [sp, #8]
    e1e0:	bl	a9f0 <getenv@plt>
    e1e4:	str	x0, [sp, #32]
    e1e8:	ldr	w10, [sp, #8]
    e1ec:	strb	w10, [sp, #15]
    e1f0:	ldr	x8, [sp, #32]
    e1f4:	cbnz	x8, e208 <directory_on_path@@Base+0x54>
    e1f8:	mov	w8, wzr
    e1fc:	and	w8, w8, #0x1
    e200:	sturb	w8, [x29, #-1]
    e204:	b	e2ac <directory_on_path@@Base+0xf8>
    e208:	ldr	x0, [sp, #32]
    e20c:	bl	aa70 <xstrdup@plt>
    e210:	str	x0, [sp, #32]
    e214:	add	x8, sp, #0x18
    e218:	str	x0, [sp, #24]
    e21c:	mov	x0, x8
    e220:	adrp	x1, 44000 <vasnprintf@@Base+0x1e4c>
    e224:	add	x1, x1, #0xc0c
    e228:	bl	ad10 <strsep@plt>
    e22c:	str	x0, [sp, #16]
    e230:	ldr	x8, [sp, #16]
    e234:	cbz	x8, e290 <directory_on_path@@Base+0xdc>
    e238:	ldr	x8, [sp, #16]
    e23c:	ldrb	w9, [x8]
    e240:	cbnz	w9, e25c <directory_on_path@@Base+0xa8>
    e244:	ldur	x8, [x29, #-24]
    e248:	cbnz	x8, e254 <directory_on_path@@Base+0xa0>
    e24c:	bl	ad20 <xgetcwd@plt>
    e250:	stur	x0, [x29, #-24]
    e254:	ldur	x8, [x29, #-24]
    e258:	str	x8, [sp, #16]
    e25c:	ldr	x0, [sp, #16]
    e260:	ldur	x1, [x29, #-16]
    e264:	bl	aa00 <strcmp@plt>
    e268:	cbnz	w0, e278 <directory_on_path@@Base+0xc4>
    e26c:	mov	w8, #0x1                   	// #1
    e270:	strb	w8, [sp, #15]
    e274:	b	e290 <directory_on_path@@Base+0xdc>
    e278:	add	x0, sp, #0x18
    e27c:	adrp	x1, 44000 <vasnprintf@@Base+0x1e4c>
    e280:	add	x1, x1, #0xc0c
    e284:	bl	ad10 <strsep@plt>
    e288:	str	x0, [sp, #16]
    e28c:	b	e230 <directory_on_path@@Base+0x7c>
    e290:	ldr	x0, [sp, #32]
    e294:	bl	a930 <free@plt>
    e298:	ldur	x0, [x29, #-24]
    e29c:	bl	a930 <free@plt>
    e2a0:	ldrb	w8, [sp, #15]
    e2a4:	and	w8, w8, #0x1
    e2a8:	sturb	w8, [x29, #-1]
    e2ac:	ldurb	w8, [x29, #-1]
    e2b0:	and	w0, w8, #0x1
    e2b4:	ldp	x29, x30, [sp, #64]
    e2b8:	add	sp, sp, #0x50
    e2bc:	ret

000000000000e2c0 <sandbox_init@@Base>:
    e2c0:	sub	sp, sp, #0x20
    e2c4:	stp	x29, x30, [sp, #16]
    e2c8:	add	x29, sp, #0x10
    e2cc:	mov	x0, #0x1                   	// #1
    e2d0:	mov	w8, #0x0                   	// #0
    e2d4:	str	w8, [sp, #4]
    e2d8:	bl	ad30 <xzalloc@plt>
    e2dc:	str	x0, [sp, #8]
    e2e0:	ldr	x9, [sp, #8]
    e2e4:	ldr	w8, [sp, #4]
    e2e8:	strb	w8, [x9]
    e2ec:	ldr	x0, [sp, #8]
    e2f0:	ldp	x29, x30, [sp, #16]
    e2f4:	add	sp, sp, #0x20
    e2f8:	ret

000000000000e2fc <sandbox_load@@Base>:
    e2fc:	sub	sp, sp, #0x20
    e300:	stp	x29, x30, [sp, #16]
    e304:	add	x29, sp, #0x10
    e308:	mov	w8, wzr
    e30c:	str	x0, [sp, #8]
    e310:	ldr	x9, [sp, #8]
    e314:	str	x9, [sp]
    e318:	ldr	x0, [sp]
    e31c:	mov	w1, w8
    e320:	bl	e330 <sandbox_load@@Base+0x34>
    e324:	ldp	x29, x30, [sp, #16]
    e328:	add	sp, sp, #0x20
    e32c:	ret
    e330:	sub	sp, sp, #0x10
    e334:	str	x0, [sp, #8]
    e338:	str	w1, [sp, #4]
    e33c:	add	sp, sp, #0x10
    e340:	ret

000000000000e344 <sandbox_load_permissive@@Base>:
    e344:	sub	sp, sp, #0x20
    e348:	stp	x29, x30, [sp, #16]
    e34c:	add	x29, sp, #0x10
    e350:	mov	w1, #0x1                   	// #1
    e354:	str	x0, [sp, #8]
    e358:	ldr	x8, [sp, #8]
    e35c:	str	x8, [sp]
    e360:	ldr	x0, [sp]
    e364:	bl	e330 <sandbox_load@@Base+0x34>
    e368:	ldp	x29, x30, [sp, #16]
    e36c:	add	sp, sp, #0x20
    e370:	ret

000000000000e374 <sandbox_free@@Base>:
    e374:	sub	sp, sp, #0x20
    e378:	stp	x29, x30, [sp, #16]
    e37c:	add	x29, sp, #0x10
    e380:	str	x0, [sp, #8]
    e384:	ldr	x8, [sp, #8]
    e388:	str	x8, [sp]
    e38c:	ldr	x0, [sp]
    e390:	bl	a930 <free@plt>
    e394:	ldp	x29, x30, [sp, #16]
    e398:	add	sp, sp, #0x20
    e39c:	ret

000000000000e3a0 <init_security@@Base>:
    e3a0:	sub	sp, sp, #0x60
    e3a4:	stp	x29, x30, [sp, #80]
    e3a8:	add	x29, sp, #0x50
    e3ac:	adrp	x8, 5f000 <vasnprintf@@Base+0x1ce4c>
    e3b0:	ldr	x8, [x8, #3872]
    e3b4:	adrp	x9, 5f000 <vasnprintf@@Base+0x1ce4c>
    e3b8:	ldr	x9, [x9, #3880]
    e3bc:	adrp	x10, 5f000 <vasnprintf@@Base+0x1ce4c>
    e3c0:	ldr	x10, [x10, #3888]
    e3c4:	adrp	x0, 44000 <vasnprintf@@Base+0x1e4c>
    e3c8:	add	x0, x0, #0xc14
    e3cc:	adrp	x11, 5f000 <vasnprintf@@Base+0x1ce4c>
    e3d0:	ldr	x11, [x11, #3896]
    e3d4:	adrp	x12, 5f000 <vasnprintf@@Base+0x1ce4c>
    e3d8:	ldr	x12, [x12, #3904]
    e3dc:	adrp	x13, 5f000 <vasnprintf@@Base+0x1ce4c>
    e3e0:	ldr	x13, [x13, #3912]
    e3e4:	adrp	x14, 44000 <vasnprintf@@Base+0x1e4c>
    e3e8:	add	x14, x14, #0xc26
    e3ec:	adrp	x15, 61000 <gl_rbtree_list_implementation@@Base+0x1468>
    e3f0:	add	x15, x15, #0x5c0
    e3f4:	stur	x8, [x29, #-8]
    e3f8:	stur	x9, [x29, #-16]
    e3fc:	stur	x10, [x29, #-24]
    e400:	stur	x0, [x29, #-32]
    e404:	str	x11, [sp, #40]
    e408:	str	x12, [sp, #32]
    e40c:	str	x13, [sp, #24]
    e410:	str	x14, [sp, #16]
    e414:	str	x15, [sp, #8]
    e418:	bl	ad40 <getuid@plt>
    e41c:	ldur	x8, [x29, #-8]
    e420:	str	w0, [x8]
    e424:	bl	ad50 <geteuid@plt>
    e428:	ldur	x8, [x29, #-16]
    e42c:	str	w0, [x8]
    e430:	ldur	x9, [x29, #-24]
    e434:	str	w0, [x9]
    e438:	ldur	x10, [x29, #-8]
    e43c:	ldr	w1, [x10]
    e440:	ldr	w2, [x8]
    e444:	ldur	x0, [x29, #-32]
    e448:	bl	aa40 <debug@plt>
    e44c:	bl	ad60 <getgid@plt>
    e450:	ldr	x8, [sp, #40]
    e454:	str	w0, [x8]
    e458:	bl	ad70 <getegid@plt>
    e45c:	ldr	x8, [sp, #32]
    e460:	str	w0, [x8]
    e464:	ldr	x9, [sp, #24]
    e468:	str	w0, [x9]
    e46c:	ldr	x10, [sp, #40]
    e470:	ldr	w1, [x10]
    e474:	ldr	w2, [x8]
    e478:	ldr	x0, [sp, #16]
    e47c:	bl	aa40 <debug@plt>
    e480:	ldr	x8, [sp, #8]
    e484:	str	wzr, [x8]
    e488:	bl	ad80 <drop_effective_privs@plt>
    e48c:	ldp	x29, x30, [sp, #80]
    e490:	add	sp, sp, #0x60
    e494:	ret

000000000000e498 <drop_effective_privs@@Base>:
    e498:	sub	sp, sp, #0x20
    e49c:	stp	x29, x30, [sp, #16]
    e4a0:	add	x29, sp, #0x10
    e4a4:	adrp	x8, 5f000 <vasnprintf@@Base+0x1ce4c>
    e4a8:	ldr	x8, [x8, #3888]
    e4ac:	adrp	x9, 5f000 <vasnprintf@@Base+0x1ce4c>
    e4b0:	ldr	x9, [x9, #3872]
    e4b4:	adrp	x10, 61000 <gl_rbtree_list_implementation@@Base+0x1468>
    e4b8:	add	x10, x10, #0x5c0
    e4bc:	ldr	w11, [x8]
    e4c0:	ldr	w12, [x9]
    e4c4:	cmp	w11, w12
    e4c8:	str	x10, [sp, #8]
    e4cc:	b.eq	e518 <drop_effective_privs@@Base+0x80>  // b.none
    e4d0:	adrp	x0, 44000 <vasnprintf@@Base+0x1e4c>
    e4d4:	add	x0, x0, #0xc9c
    e4d8:	bl	aa40 <debug@plt>
    e4dc:	bl	ad90 <idpriv_temp_drop@plt>
    e4e0:	cbz	w0, e4e8 <drop_effective_privs@@Base+0x50>
    e4e4:	bl	e634 <get_man_owner@@Base+0xc8>
    e4e8:	adrp	x8, 5f000 <vasnprintf@@Base+0x1ce4c>
    e4ec:	ldr	x8, [x8, #3872]
    e4f0:	ldr	w9, [x8]
    e4f4:	adrp	x8, 5f000 <vasnprintf@@Base+0x1ce4c>
    e4f8:	ldr	x8, [x8, #3888]
    e4fc:	str	w9, [x8]
    e500:	adrp	x8, 5f000 <vasnprintf@@Base+0x1ce4c>
    e504:	ldr	x8, [x8, #3896]
    e508:	ldr	w9, [x8]
    e50c:	adrp	x8, 5f000 <vasnprintf@@Base+0x1ce4c>
    e510:	ldr	x8, [x8, #3912]
    e514:	str	w9, [x8]
    e518:	ldr	x8, [sp, #8]
    e51c:	ldr	w9, [x8]
    e520:	add	w9, w9, #0x1
    e524:	str	w9, [x8]
    e528:	ldr	w1, [x8]
    e52c:	adrp	x0, 44000 <vasnprintf@@Base+0x1e4c>
    e530:	add	x0, x0, #0xcb4
    e534:	bl	aa40 <debug@plt>
    e538:	ldp	x29, x30, [sp, #16]
    e53c:	add	sp, sp, #0x20
    e540:	ret

000000000000e544 <running_setuid@@Base>:
    e544:	adrp	x8, 5f000 <vasnprintf@@Base+0x1ce4c>
    e548:	ldr	x8, [x8, #3872]
    e54c:	adrp	x9, 5f000 <vasnprintf@@Base+0x1ce4c>
    e550:	ldr	x9, [x9, #3880]
    e554:	ldr	w10, [x8]
    e558:	ldr	w11, [x9]
    e55c:	cmp	w10, w11
    e560:	cset	w10, ne  // ne = any
    e564:	and	w0, w10, #0x1
    e568:	ret

000000000000e56c <get_man_owner@@Base>:
    e56c:	sub	sp, sp, #0x30
    e570:	stp	x29, x30, [sp, #32]
    e574:	add	x29, sp, #0x20
    e578:	adrp	x8, 61000 <gl_rbtree_list_implementation@@Base+0x1468>
    e57c:	add	x8, x8, #0x5c8
    e580:	ldr	x9, [x8]
    e584:	str	x8, [sp, #16]
    e588:	cbz	x9, e59c <get_man_owner@@Base+0x30>
    e58c:	ldr	x8, [sp, #16]
    e590:	ldr	x9, [x8]
    e594:	stur	x9, [x29, #-8]
    e598:	b	e624 <get_man_owner@@Base+0xb8>
    e59c:	adrp	x0, 44000 <vasnprintf@@Base+0x1e4c>
    e5a0:	add	x0, x0, #0xc38
    e5a4:	bl	ada0 <getpwnam@plt>
    e5a8:	ldr	x8, [sp, #16]
    e5ac:	str	x0, [x8]
    e5b0:	ldr	x9, [x8]
    e5b4:	cbnz	x9, e5e8 <get_man_owner@@Base+0x7c>
    e5b8:	adrp	x0, 44000 <vasnprintf@@Base+0x1e4c>
    e5bc:	add	x0, x0, #0xc3c
    e5c0:	bl	adb0 <gettext@plt>
    e5c4:	mov	w8, #0x1                   	// #1
    e5c8:	str	x0, [sp, #8]
    e5cc:	mov	w0, w8
    e5d0:	mov	w8, wzr
    e5d4:	mov	w1, w8
    e5d8:	ldr	x2, [sp, #8]
    e5dc:	adrp	x3, 44000 <vasnprintf@@Base+0x1e4c>
    e5e0:	add	x3, x3, #0xc38
    e5e4:	bl	adc0 <error@plt>
    e5e8:	ldr	x8, [sp, #16]
    e5ec:	ldr	x9, [x8]
    e5f0:	cbz	x9, e5f8 <get_man_owner@@Base+0x8c>
    e5f4:	b	e618 <get_man_owner@@Base+0xac>
    e5f8:	adrp	x0, 44000 <vasnprintf@@Base+0x1e4c>
    e5fc:	add	x0, x0, #0xc64
    e600:	adrp	x1, 44000 <vasnprintf@@Base+0x1e4c>
    e604:	add	x1, x1, #0xc6e
    e608:	mov	w2, #0x78                  	// #120
    e60c:	adrp	x3, 44000 <vasnprintf@@Base+0x1e4c>
    e610:	add	x3, x3, #0xc79
    e614:	bl	a910 <__assert_fail@plt>
    e618:	ldr	x8, [sp, #16]
    e61c:	ldr	x9, [x8]
    e620:	stur	x9, [x29, #-8]
    e624:	ldur	x0, [x29, #-8]
    e628:	ldp	x29, x30, [sp, #32]
    e62c:	add	sp, sp, #0x30
    e630:	ret
    e634:	sub	sp, sp, #0x30
    e638:	stp	x29, x30, [sp, #32]
    e63c:	add	x29, sp, #0x20
    e640:	adrp	x0, 44000 <vasnprintf@@Base+0x1e4c>
    e644:	add	x0, x0, #0xcfe
    e648:	mov	w8, #0x2                   	// #2
    e64c:	stur	x0, [x29, #-8]
    e650:	stur	w8, [x29, #-12]
    e654:	bl	aa20 <__errno_location@plt>
    e658:	ldr	w1, [x0]
    e65c:	ldur	x0, [x29, #-8]
    e660:	str	w1, [sp, #16]
    e664:	bl	adb0 <gettext@plt>
    e668:	ldur	w8, [x29, #-12]
    e66c:	str	x0, [sp, #8]
    e670:	mov	w0, w8
    e674:	ldr	w1, [sp, #16]
    e678:	ldr	x2, [sp, #8]
    e67c:	bl	adc0 <error@plt>
    e680:	ldp	x29, x30, [sp, #32]
    e684:	add	sp, sp, #0x30
    e688:	ret

000000000000e68c <regain_effective_privs@@Base>:
    e68c:	sub	sp, sp, #0x20
    e690:	stp	x29, x30, [sp, #16]
    e694:	add	x29, sp, #0x10
    e698:	adrp	x8, 61000 <gl_rbtree_list_implementation@@Base+0x1468>
    e69c:	add	x8, x8, #0x5c0
    e6a0:	ldr	w9, [x8]
    e6a4:	str	x8, [sp, #8]
    e6a8:	cbz	w9, e6dc <regain_effective_privs@@Base+0x50>
    e6ac:	ldr	x8, [sp, #8]
    e6b0:	ldr	w9, [x8]
    e6b4:	subs	w9, w9, #0x1
    e6b8:	str	w9, [x8]
    e6bc:	ldr	w1, [x8]
    e6c0:	adrp	x0, 44000 <vasnprintf@@Base+0x1e4c>
    e6c4:	add	x0, x0, #0xccc
    e6c8:	bl	aa40 <debug@plt>
    e6cc:	ldr	x8, [sp, #8]
    e6d0:	ldr	w9, [x8]
    e6d4:	cbz	w9, e6dc <regain_effective_privs@@Base+0x50>
    e6d8:	b	e744 <regain_effective_privs@@Base+0xb8>
    e6dc:	adrp	x8, 5f000 <vasnprintf@@Base+0x1ce4c>
    e6e0:	ldr	x8, [x8, #3888]
    e6e4:	ldr	w9, [x8]
    e6e8:	adrp	x8, 5f000 <vasnprintf@@Base+0x1ce4c>
    e6ec:	ldr	x8, [x8, #3880]
    e6f0:	ldr	w10, [x8]
    e6f4:	cmp	w9, w10
    e6f8:	b.eq	e744 <regain_effective_privs@@Base+0xb8>  // b.none
    e6fc:	adrp	x0, 44000 <vasnprintf@@Base+0x1e4c>
    e700:	add	x0, x0, #0xce4
    e704:	bl	aa40 <debug@plt>
    e708:	bl	add0 <idpriv_temp_restore@plt>
    e70c:	cbz	w0, e714 <regain_effective_privs@@Base+0x88>
    e710:	bl	e634 <get_man_owner@@Base+0xc8>
    e714:	adrp	x8, 5f000 <vasnprintf@@Base+0x1ce4c>
    e718:	ldr	x8, [x8, #3880]
    e71c:	ldr	w9, [x8]
    e720:	adrp	x8, 5f000 <vasnprintf@@Base+0x1ce4c>
    e724:	ldr	x8, [x8, #3888]
    e728:	str	w9, [x8]
    e72c:	adrp	x8, 5f000 <vasnprintf@@Base+0x1ce4c>
    e730:	ldr	x8, [x8, #3904]
    e734:	ldr	w9, [x8]
    e738:	adrp	x8, 5f000 <vasnprintf@@Base+0x1ce4c>
    e73c:	ldr	x8, [x8, #3912]
    e740:	str	w9, [x8]
    e744:	ldp	x29, x30, [sp, #16]
    e748:	add	sp, sp, #0x20
    e74c:	ret

000000000000e750 <drop_privs@@Base>:
    e750:	sub	sp, sp, #0x20
    e754:	stp	x29, x30, [sp, #16]
    e758:	add	x29, sp, #0x10
    e75c:	str	x0, [sp, #8]
    e760:	bl	ade0 <idpriv_drop@plt>
    e764:	cbz	w0, e76c <drop_privs@@Base+0x1c>
    e768:	bl	e634 <get_man_owner@@Base+0xc8>
    e76c:	ldp	x29, x30, [sp, #16]
    e770:	add	sp, sp, #0x20
    e774:	ret

000000000000e778 <create_tempdir@@Base>:
    e778:	sub	sp, sp, #0x30
    e77c:	stp	x29, x30, [sp, #32]
    e780:	add	x29, sp, #0x20
    e784:	str	x0, [sp, #16]
    e788:	bl	e7ec <create_tempdir@@Base+0x74>
    e78c:	str	x0, [sp, #8]
    e790:	ldr	x8, [sp, #8]
    e794:	cbnz	x8, e7a4 <create_tempdir@@Base+0x2c>
    e798:	mov	x8, xzr
    e79c:	stur	x8, [x29, #-8]
    e7a0:	b	e7dc <create_tempdir@@Base+0x64>
    e7a4:	ldr	x1, [sp, #8]
    e7a8:	ldr	x2, [sp, #16]
    e7ac:	adrp	x0, 44000 <vasnprintf@@Base+0x1e4c>
    e7b0:	add	x0, x0, #0xd16
    e7b4:	bl	aba0 <xasprintf@plt>
    e7b8:	str	x0, [sp]
    e7bc:	ldr	x0, [sp]
    e7c0:	bl	adf0 <mkdtemp@plt>
    e7c4:	cbnz	x0, e7d4 <create_tempdir@@Base+0x5c>
    e7c8:	mov	x8, xzr
    e7cc:	stur	x8, [x29, #-8]
    e7d0:	b	e7dc <create_tempdir@@Base+0x64>
    e7d4:	ldr	x8, [sp]
    e7d8:	stur	x8, [x29, #-8]
    e7dc:	ldur	x0, [x29, #-8]
    e7e0:	ldp	x29, x30, [sp, #32]
    e7e4:	add	sp, sp, #0x30
    e7e8:	ret
    e7ec:	sub	sp, sp, #0x20
    e7f0:	stp	x29, x30, [sp, #16]
    e7f4:	add	x29, sp, #0x10
    e7f8:	mov	x8, xzr
    e7fc:	str	x8, [sp, #8]
    e800:	bl	ad40 <getuid@plt>
    e804:	str	w0, [sp, #4]
    e808:	bl	ad50 <geteuid@plt>
    e80c:	ldr	w9, [sp, #4]
    e810:	cmp	w9, w0
    e814:	b.ne	e898 <create_tempdir@@Base+0x120>  // b.any
    e818:	bl	ad60 <getgid@plt>
    e81c:	str	w0, [sp]
    e820:	bl	ad70 <getegid@plt>
    e824:	ldr	w8, [sp]
    e828:	cmp	w8, w0
    e82c:	b.ne	e898 <create_tempdir@@Base+0x120>  // b.any
    e830:	adrp	x0, 44000 <vasnprintf@@Base+0x1e4c>
    e834:	add	x0, x0, #0xd22
    e838:	bl	a9f0 <getenv@plt>
    e83c:	str	x0, [sp, #8]
    e840:	ldr	x8, [sp, #8]
    e844:	cbz	x8, e858 <create_tempdir@@Base+0xe0>
    e848:	ldr	x0, [sp, #8]
    e84c:	mov	w1, #0x2                   	// #2
    e850:	bl	ae00 <access@plt>
    e854:	cbz	w0, e860 <create_tempdir@@Base+0xe8>
    e858:	mov	x8, xzr
    e85c:	str	x8, [sp, #8]
    e860:	ldr	x8, [sp, #8]
    e864:	cbnz	x8, e898 <create_tempdir@@Base+0x120>
    e868:	adrp	x0, 44000 <vasnprintf@@Base+0x1e4c>
    e86c:	add	x0, x0, #0xd29
    e870:	bl	a9f0 <getenv@plt>
    e874:	str	x0, [sp, #8]
    e878:	ldr	x8, [sp, #8]
    e87c:	cbz	x8, e890 <create_tempdir@@Base+0x118>
    e880:	ldr	x0, [sp, #8]
    e884:	mov	w1, #0x2                   	// #2
    e888:	bl	ae00 <access@plt>
    e88c:	cbz	w0, e898 <create_tempdir@@Base+0x120>
    e890:	mov	x8, xzr
    e894:	str	x8, [sp, #8]
    e898:	ldr	x8, [sp, #8]
    e89c:	cbnz	x8, e8cc <create_tempdir@@Base+0x154>
    e8a0:	adrp	x8, 44000 <vasnprintf@@Base+0x1e4c>
    e8a4:	add	x8, x8, #0xd2d
    e8a8:	str	x8, [sp, #8]
    e8ac:	ldr	x8, [sp, #8]
    e8b0:	cbz	x8, e8c4 <create_tempdir@@Base+0x14c>
    e8b4:	ldr	x0, [sp, #8]
    e8b8:	mov	w1, #0x2                   	// #2
    e8bc:	bl	ae00 <access@plt>
    e8c0:	cbz	w0, e8cc <create_tempdir@@Base+0x154>
    e8c4:	mov	x8, xzr
    e8c8:	str	x8, [sp, #8]
    e8cc:	ldr	x8, [sp, #8]
    e8d0:	cbnz	x8, e8f8 <create_tempdir@@Base+0x180>
    e8d4:	adrp	x8, 44000 <vasnprintf@@Base+0x1e4c>
    e8d8:	add	x8, x8, #0xd2d
    e8dc:	str	x8, [sp, #8]
    e8e0:	ldr	x0, [sp, #8]
    e8e4:	mov	w1, #0x2                   	// #2
    e8e8:	bl	ae00 <access@plt>
    e8ec:	cbz	w0, e8f8 <create_tempdir@@Base+0x180>
    e8f0:	mov	x8, xzr
    e8f4:	str	x8, [sp, #8]
    e8f8:	ldr	x0, [sp, #8]
    e8fc:	ldp	x29, x30, [sp, #16]
    e900:	add	sp, sp, #0x20
    e904:	ret

000000000000e908 <is_changed@@Base>:
    e908:	sub	sp, sp, #0x180
    e90c:	stp	x29, x30, [sp, #352]
    e910:	str	x28, [sp, #368]
    e914:	add	x29, sp, #0x160
    e918:	adrp	x8, 44000 <vasnprintf@@Base+0x1e4c>
    e91c:	add	x8, x8, #0xd32
    e920:	sub	x9, x29, #0x98
    e924:	stur	x0, [x29, #-16]
    e928:	stur	x1, [x29, #-24]
    e92c:	str	wzr, [sp, #60]
    e930:	ldur	x1, [x29, #-16]
    e934:	ldur	x2, [x29, #-24]
    e938:	mov	x0, x8
    e93c:	str	x9, [sp, #16]
    e940:	bl	aa40 <debug@plt>
    e944:	ldur	x0, [x29, #-16]
    e948:	ldr	x1, [sp, #16]
    e94c:	bl	443b8 <vasnprintf@@Base+0x2204>
    e950:	str	w0, [sp, #68]
    e954:	ldr	w10, [sp, #68]
    e958:	cbz	w10, e964 <is_changed@@Base+0x5c>
    e95c:	mov	w8, #0x1                   	// #1
    e960:	str	w8, [sp, #60]
    e964:	ldur	x0, [x29, #-24]
    e968:	add	x1, sp, #0x48
    e96c:	bl	443b8 <vasnprintf@@Base+0x2204>
    e970:	str	w0, [sp, #64]
    e974:	ldr	w8, [sp, #64]
    e978:	cbz	w8, e988 <is_changed@@Base+0x80>
    e97c:	ldr	w8, [sp, #60]
    e980:	orr	w8, w8, #0x2
    e984:	str	w8, [sp, #60]
    e988:	ldr	w8, [sp, #60]
    e98c:	cbz	w8, e9c0 <is_changed@@Base+0xb8>
    e990:	ldr	w8, [sp, #60]
    e994:	mov	w9, wzr
    e998:	subs	w1, w9, w8
    e99c:	adrp	x0, 44000 <vasnprintf@@Base+0x1e4c>
    e9a0:	add	x0, x0, #0xd49
    e9a4:	str	w9, [sp, #12]
    e9a8:	bl	aa40 <debug@plt>
    e9ac:	ldr	w8, [sp, #60]
    e9b0:	ldr	w9, [sp, #12]
    e9b4:	subs	w8, w9, w8
    e9b8:	stur	w8, [x29, #-4]
    e9bc:	b	ea4c <is_changed@@Base+0x144>
    e9c0:	ldur	x8, [x29, #-104]
    e9c4:	cbnz	x8, e9d4 <is_changed@@Base+0xcc>
    e9c8:	ldr	w8, [sp, #60]
    e9cc:	orr	w8, w8, #0x2
    e9d0:	str	w8, [sp, #60]
    e9d4:	ldr	x8, [sp, #120]
    e9d8:	cbnz	x8, e9e8 <is_changed@@Base+0xe0>
    e9dc:	ldr	w8, [sp, #60]
    e9e0:	orr	w8, w8, #0x4
    e9e4:	str	w8, [sp, #60]
    e9e8:	sub	x0, x29, #0x98
    e9ec:	bl	ae10 <get_stat_mtime@plt>
    e9f0:	str	x0, [sp, #40]
    e9f4:	str	x1, [sp, #48]
    e9f8:	add	x0, sp, #0x48
    e9fc:	bl	ae10 <get_stat_mtime@plt>
    ea00:	str	x0, [sp, #24]
    ea04:	str	x1, [sp, #32]
    ea08:	ldr	x0, [sp, #40]
    ea0c:	ldr	x1, [sp, #48]
    ea10:	ldr	x2, [sp, #24]
    ea14:	ldr	x3, [sp, #32]
    ea18:	bl	ae20 <timespec_cmp@plt>
    ea1c:	cmp	w0, #0x0
    ea20:	cset	w8, ne  // ne = any
    ea24:	and	w8, w8, #0x1
    ea28:	ldr	w9, [sp, #60]
    ea2c:	orr	w8, w9, w8
    ea30:	str	w8, [sp, #60]
    ea34:	ldr	w1, [sp, #60]
    ea38:	adrp	x0, 44000 <vasnprintf@@Base+0x1e4c>
    ea3c:	add	x0, x0, #0xd49
    ea40:	bl	aa40 <debug@plt>
    ea44:	ldr	w8, [sp, #60]
    ea48:	stur	w8, [x29, #-4]
    ea4c:	ldur	w0, [x29, #-4]
    ea50:	ldr	x28, [sp, #368]
    ea54:	ldp	x29, x30, [sp, #352]
    ea58:	add	sp, sp, #0x180
    ea5c:	ret

000000000000ea60 <is_directory@@Base>:
    ea60:	sub	sp, sp, #0xb0
    ea64:	stp	x29, x30, [sp, #160]
    ea68:	add	x29, sp, #0xa0
    ea6c:	sub	x8, x29, #0x10
    ea70:	add	x1, sp, #0x10
    ea74:	str	x0, [x8]
    ea78:	ldr	x0, [x8]
    ea7c:	bl	443b8 <vasnprintf@@Base+0x2204>
    ea80:	str	w0, [sp, #12]
    ea84:	ldr	w9, [sp, #12]
    ea88:	cbz	w9, ea98 <is_directory@@Base+0x38>
    ea8c:	ldr	w8, [sp, #12]
    ea90:	stur	w8, [x29, #-4]
    ea94:	b	eaac <is_directory@@Base+0x4c>
    ea98:	ldr	w8, [sp, #32]
    ea9c:	tst	w8, #0x4000
    eaa0:	cset	w8, ne  // ne = any
    eaa4:	and	w8, w8, #0x1
    eaa8:	stur	w8, [x29, #-4]
    eaac:	ldur	w0, [x29, #-4]
    eab0:	ldp	x29, x30, [sp, #160]
    eab4:	add	sp, sp, #0xb0
    eab8:	ret

000000000000eabc <escape_shell@@Base>:
    eabc:	sub	sp, sp, #0x40
    eac0:	stp	x29, x30, [sp, #48]
    eac4:	add	x29, sp, #0x30
    eac8:	stur	x0, [x29, #-16]
    eacc:	ldur	x8, [x29, #-16]
    ead0:	cbnz	x8, eae0 <escape_shell@@Base+0x24>
    ead4:	mov	x8, xzr
    ead8:	stur	x8, [x29, #-8]
    eadc:	b	ebf8 <escape_shell@@Base+0x13c>
    eae0:	ldur	x0, [x29, #-16]
    eae4:	bl	a8e0 <strlen@plt>
    eae8:	mov	x8, #0x2                   	// #2
    eaec:	mul	x8, x0, x8
    eaf0:	add	x0, x8, #0x1
    eaf4:	bl	aca0 <xmalloc@plt>
    eaf8:	str	x0, [sp, #24]
    eafc:	str	x0, [sp, #16]
    eb00:	ldur	x8, [x29, #-16]
    eb04:	str	x8, [sp, #8]
    eb08:	ldr	x8, [sp, #8]
    eb0c:	ldrb	w9, [x8]
    eb10:	cbz	w9, ebe4 <escape_shell@@Base+0x128>
    eb14:	ldr	x8, [sp, #8]
    eb18:	ldrb	w9, [x8]
    eb1c:	cmp	w9, #0x30
    eb20:	b.lt	eb34 <escape_shell@@Base+0x78>  // b.tstop
    eb24:	ldr	x8, [sp, #8]
    eb28:	ldrb	w9, [x8]
    eb2c:	cmp	w9, #0x39
    eb30:	b.le	eb8c <escape_shell@@Base+0xd0>
    eb34:	ldr	x8, [sp, #8]
    eb38:	ldrb	w9, [x8]
    eb3c:	cmp	w9, #0x41
    eb40:	b.lt	eb54 <escape_shell@@Base+0x98>  // b.tstop
    eb44:	ldr	x8, [sp, #8]
    eb48:	ldrb	w9, [x8]
    eb4c:	cmp	w9, #0x5a
    eb50:	b.le	eb8c <escape_shell@@Base+0xd0>
    eb54:	ldr	x8, [sp, #8]
    eb58:	ldrb	w9, [x8]
    eb5c:	cmp	w9, #0x61
    eb60:	b.lt	eb74 <escape_shell@@Base+0xb8>  // b.tstop
    eb64:	ldr	x8, [sp, #8]
    eb68:	ldrb	w9, [x8]
    eb6c:	cmp	w9, #0x7a
    eb70:	b.le	eb8c <escape_shell@@Base+0xd0>
    eb74:	ldr	x8, [sp, #8]
    eb78:	ldrb	w1, [x8]
    eb7c:	adrp	x0, 44000 <vasnprintf@@Base+0x1e4c>
    eb80:	add	x0, x0, #0xd50
    eb84:	bl	aa80 <strchr@plt>
    eb88:	cbz	x0, eba8 <escape_shell@@Base+0xec>
    eb8c:	ldr	x8, [sp, #8]
    eb90:	ldrb	w9, [x8]
    eb94:	ldr	x8, [sp, #16]
    eb98:	add	x10, x8, #0x1
    eb9c:	str	x10, [sp, #16]
    eba0:	strb	w9, [x8]
    eba4:	b	ebd4 <escape_shell@@Base+0x118>
    eba8:	ldr	x8, [sp, #16]
    ebac:	add	x9, x8, #0x1
    ebb0:	str	x9, [sp, #16]
    ebb4:	mov	w10, #0x5c                  	// #92
    ebb8:	strb	w10, [x8]
    ebbc:	ldr	x8, [sp, #8]
    ebc0:	ldrb	w10, [x8]
    ebc4:	ldr	x8, [sp, #16]
    ebc8:	add	x9, x8, #0x1
    ebcc:	str	x9, [sp, #16]
    ebd0:	strb	w10, [x8]
    ebd4:	ldr	x8, [sp, #8]
    ebd8:	add	x8, x8, #0x1
    ebdc:	str	x8, [sp, #8]
    ebe0:	b	eb08 <escape_shell@@Base+0x4c>
    ebe4:	ldr	x8, [sp, #16]
    ebe8:	mov	w9, #0x0                   	// #0
    ebec:	strb	w9, [x8]
    ebf0:	ldr	x8, [sp, #24]
    ebf4:	stur	x8, [x29, #-8]
    ebf8:	ldur	x0, [x29, #-8]
    ebfc:	ldp	x29, x30, [sp, #48]
    ec00:	add	sp, sp, #0x40
    ec04:	ret

000000000000ec08 <remove_directory@@Base>:
    ec08:	sub	sp, sp, #0xc0
    ec0c:	stp	x29, x30, [sp, #176]
    ec10:	add	x29, sp, #0xb0
    ec14:	stur	x0, [x29, #-16]
    ec18:	stur	w1, [x29, #-20]
    ec1c:	ldur	x0, [x29, #-16]
    ec20:	bl	ae30 <opendir@plt>
    ec24:	stur	x0, [x29, #-32]
    ec28:	ldur	x8, [x29, #-32]
    ec2c:	cbnz	x8, ec3c <remove_directory@@Base+0x34>
    ec30:	mov	w8, #0xffffffff            	// #-1
    ec34:	stur	w8, [x29, #-4]
    ec38:	b	ed9c <remove_directory@@Base+0x194>
    ec3c:	ldur	x0, [x29, #-32]
    ec40:	bl	ae40 <readdir@plt>
    ec44:	stur	x0, [x29, #-40]
    ec48:	cbz	x0, ed6c <remove_directory@@Base+0x164>
    ec4c:	ldur	x8, [x29, #-40]
    ec50:	add	x0, x8, #0x13
    ec54:	adrp	x1, 44000 <vasnprintf@@Base+0x1e4c>
    ec58:	add	x1, x1, #0xd58
    ec5c:	bl	aa00 <strcmp@plt>
    ec60:	cbz	w0, ec7c <remove_directory@@Base+0x74>
    ec64:	ldur	x8, [x29, #-40]
    ec68:	add	x0, x8, #0x13
    ec6c:	adrp	x1, 44000 <vasnprintf@@Base+0x1e4c>
    ec70:	add	x1, x1, #0xd5a
    ec74:	bl	aa00 <strcmp@plt>
    ec78:	cbnz	w0, ec80 <remove_directory@@Base+0x78>
    ec7c:	b	ec3c <remove_directory@@Base+0x34>
    ec80:	ldur	x1, [x29, #-16]
    ec84:	ldur	x8, [x29, #-40]
    ec88:	add	x2, x8, #0x13
    ec8c:	adrp	x0, 44000 <vasnprintf@@Base+0x1e4c>
    ec90:	add	x0, x0, #0xc0e
    ec94:	bl	aba0 <xasprintf@plt>
    ec98:	str	x0, [sp]
    ec9c:	ldr	x0, [sp]
    eca0:	add	x1, sp, #0x8
    eca4:	bl	443b8 <vasnprintf@@Base+0x2204>
    eca8:	mov	w9, #0xffffffff            	// #-1
    ecac:	cmp	w0, w9
    ecb0:	b.ne	ecd0 <remove_directory@@Base+0xc8>  // b.any
    ecb4:	ldr	x0, [sp]
    ecb8:	bl	a930 <free@plt>
    ecbc:	ldur	x0, [x29, #-32]
    ecc0:	bl	ae50 <closedir@plt>
    ecc4:	mov	w8, #0xffffffff            	// #-1
    ecc8:	stur	w8, [x29, #-4]
    eccc:	b	ed9c <remove_directory@@Base+0x194>
    ecd0:	ldur	w8, [x29, #-20]
    ecd4:	cbz	w8, ed20 <remove_directory@@Base+0x118>
    ecd8:	ldr	w8, [sp, #24]
    ecdc:	and	w8, w8, #0xf000
    ece0:	cmp	w8, #0x4, lsl #12
    ece4:	b.ne	ed20 <remove_directory@@Base+0x118>  // b.any
    ece8:	ldr	x0, [sp]
    ecec:	ldur	w1, [x29, #-20]
    ecf0:	bl	ae60 <remove_directory@plt>
    ecf4:	mov	w8, #0xffffffff            	// #-1
    ecf8:	cmp	w0, w8
    ecfc:	b.ne	ed1c <remove_directory@@Base+0x114>  // b.any
    ed00:	ldr	x0, [sp]
    ed04:	bl	a930 <free@plt>
    ed08:	ldur	x0, [x29, #-32]
    ed0c:	bl	ae50 <closedir@plt>
    ed10:	mov	w8, #0xffffffff            	// #-1
    ed14:	stur	w8, [x29, #-4]
    ed18:	b	ed9c <remove_directory@@Base+0x194>
    ed1c:	b	ed60 <remove_directory@@Base+0x158>
    ed20:	ldr	w8, [sp, #24]
    ed24:	and	w8, w8, #0xf000
    ed28:	cmp	w8, #0x8, lsl #12
    ed2c:	b.ne	ed60 <remove_directory@@Base+0x158>  // b.any
    ed30:	ldr	x0, [sp]
    ed34:	bl	ae70 <unlink@plt>
    ed38:	mov	w8, #0xffffffff            	// #-1
    ed3c:	cmp	w0, w8
    ed40:	b.ne	ed60 <remove_directory@@Base+0x158>  // b.any
    ed44:	ldr	x0, [sp]
    ed48:	bl	a930 <free@plt>
    ed4c:	ldur	x0, [x29, #-32]
    ed50:	bl	ae50 <closedir@plt>
    ed54:	mov	w8, #0xffffffff            	// #-1
    ed58:	stur	w8, [x29, #-4]
    ed5c:	b	ed9c <remove_directory@@Base+0x194>
    ed60:	ldr	x0, [sp]
    ed64:	bl	a930 <free@plt>
    ed68:	b	ec3c <remove_directory@@Base+0x34>
    ed6c:	ldur	x0, [x29, #-32]
    ed70:	bl	ae50 <closedir@plt>
    ed74:	ldur	x8, [x29, #-16]
    ed78:	mov	x0, x8
    ed7c:	bl	ae80 <rmdir@plt>
    ed80:	mov	w9, #0xffffffff            	// #-1
    ed84:	cmp	w0, w9
    ed88:	b.ne	ed98 <remove_directory@@Base+0x190>  // b.any
    ed8c:	mov	w8, #0xffffffff            	// #-1
    ed90:	stur	w8, [x29, #-4]
    ed94:	b	ed9c <remove_directory@@Base+0x194>
    ed98:	stur	wzr, [x29, #-4]
    ed9c:	ldur	w0, [x29, #-4]
    eda0:	ldp	x29, x30, [sp, #176]
    eda4:	add	sp, sp, #0xc0
    eda8:	ret

000000000000edac <trim_spaces@@Base>:
    edac:	sub	sp, sp, #0x20
    edb0:	stp	x29, x30, [sp, #16]
    edb4:	add	x29, sp, #0x10
    edb8:	str	x0, [sp, #8]
    edbc:	ldr	x8, [sp, #8]
    edc0:	ldrb	w9, [x8]
    edc4:	cmp	w9, #0x20
    edc8:	b.ne	eddc <trim_spaces@@Base+0x30>  // b.any
    edcc:	ldr	x8, [sp, #8]
    edd0:	add	x8, x8, #0x1
    edd4:	str	x8, [sp, #8]
    edd8:	b	edbc <trim_spaces@@Base+0x10>
    eddc:	ldr	x0, [sp, #8]
    ede0:	bl	a8e0 <strlen@plt>
    ede4:	str	w0, [sp, #4]
    ede8:	ldr	w8, [sp, #4]
    edec:	mov	w9, #0x0                   	// #0
    edf0:	str	w9, [sp]
    edf4:	cbz	w8, ee14 <trim_spaces@@Base+0x68>
    edf8:	ldr	x8, [sp, #8]
    edfc:	ldr	w9, [sp, #4]
    ee00:	subs	w9, w9, #0x1
    ee04:	ldrb	w9, [x8, w9, sxtw]
    ee08:	cmp	w9, #0x20
    ee0c:	cset	w9, eq  // eq = none
    ee10:	str	w9, [sp]
    ee14:	ldr	w8, [sp]
    ee18:	tbnz	w8, #0, ee20 <trim_spaces@@Base+0x74>
    ee1c:	b	ee30 <trim_spaces@@Base+0x84>
    ee20:	ldr	w8, [sp, #4]
    ee24:	subs	w8, w8, #0x1
    ee28:	str	w8, [sp, #4]
    ee2c:	b	ede8 <trim_spaces@@Base+0x3c>
    ee30:	ldr	x0, [sp, #8]
    ee34:	ldrsw	x1, [sp, #4]
    ee38:	bl	aaa0 <xstrndup@plt>
    ee3c:	ldp	x29, x30, [sp, #16]
    ee40:	add	sp, sp, #0x20
    ee44:	ret

000000000000ee48 <lang_dir@@Base>:
    ee48:	sub	sp, sp, #0x40
    ee4c:	stp	x29, x30, [sp, #48]
    ee50:	add	x29, sp, #0x30
    ee54:	adrp	x8, 44000 <vasnprintf@@Base+0x1e4c>
    ee58:	add	x8, x8, #0x4d7
    ee5c:	stur	x0, [x29, #-16]
    ee60:	mov	x0, x8
    ee64:	bl	aa70 <xstrdup@plt>
    ee68:	str	x0, [sp, #24]
    ee6c:	ldur	x8, [x29, #-16]
    ee70:	cbnz	x8, ee80 <lang_dir@@Base+0x38>
    ee74:	ldr	x8, [sp, #24]
    ee78:	stur	x8, [x29, #-8]
    ee7c:	b	efe4 <lang_dir@@Base+0x19c>
    ee80:	ldur	x0, [x29, #-16]
    ee84:	adrp	x1, 44000 <vasnprintf@@Base+0x1e4c>
    ee88:	add	x1, x1, #0xd5d
    ee8c:	mov	x2, #0x4                   	// #4
    ee90:	bl	aac0 <strncmp@plt>
    ee94:	cbnz	w0, eea4 <lang_dir@@Base+0x5c>
    ee98:	ldur	x8, [x29, #-16]
    ee9c:	str	x8, [sp, #16]
    eea0:	b	eecc <lang_dir@@Base+0x84>
    eea4:	ldur	x0, [x29, #-16]
    eea8:	adrp	x1, 44000 <vasnprintf@@Base+0x1e4c>
    eeac:	add	x1, x1, #0xd62
    eeb0:	bl	ae90 <strstr@plt>
    eeb4:	str	x0, [sp, #16]
    eeb8:	ldr	x8, [sp, #16]
    eebc:	cbz	x8, eecc <lang_dir@@Base+0x84>
    eec0:	ldr	x8, [sp, #16]
    eec4:	add	x8, x8, #0x1
    eec8:	str	x8, [sp, #16]
    eecc:	ldr	x8, [sp, #16]
    eed0:	cbnz	x8, eee0 <lang_dir@@Base+0x98>
    eed4:	ldr	x8, [sp, #24]
    eed8:	stur	x8, [x29, #-8]
    eedc:	b	efe4 <lang_dir@@Base+0x19c>
    eee0:	ldr	x8, [sp, #16]
    eee4:	add	x0, x8, #0x2
    eee8:	adrp	x1, 44000 <vasnprintf@@Base+0x1e4c>
    eeec:	add	x1, x1, #0xd68
    eef0:	bl	ae90 <strstr@plt>
    eef4:	str	x0, [sp, #8]
    eef8:	ldr	x8, [sp, #8]
    eefc:	cbnz	x8, ef0c <lang_dir@@Base+0xc4>
    ef00:	ldr	x8, [sp, #24]
    ef04:	stur	x8, [x29, #-8]
    ef08:	b	efe4 <lang_dir@@Base+0x19c>
    ef0c:	ldr	x8, [sp, #8]
    ef10:	ldrb	w9, [x8, #5]
    ef14:	cmp	w9, #0x2f
    ef18:	b.eq	ef28 <lang_dir@@Base+0xe0>  // b.none
    ef1c:	ldr	x8, [sp, #24]
    ef20:	stur	x8, [x29, #-8]
    ef24:	b	efe4 <lang_dir@@Base+0x19c>
    ef28:	ldr	x8, [sp, #8]
    ef2c:	ldrb	w1, [x8, #4]
    ef30:	adrp	x0, 44000 <vasnprintf@@Base+0x1e4c>
    ef34:	add	x0, x0, #0xd6d
    ef38:	bl	aa80 <strchr@plt>
    ef3c:	cbnz	x0, ef4c <lang_dir@@Base+0x104>
    ef40:	ldr	x8, [sp, #24]
    ef44:	stur	x8, [x29, #-8]
    ef48:	b	efe4 <lang_dir@@Base+0x19c>
    ef4c:	ldr	x8, [sp, #8]
    ef50:	ldr	x9, [sp, #16]
    ef54:	add	x9, x9, #0x3
    ef58:	cmp	x8, x9
    ef5c:	b.ne	ef7c <lang_dir@@Base+0x134>  // b.any
    ef60:	ldr	x0, [sp, #24]
    ef64:	bl	a930 <free@plt>
    ef68:	adrp	x0, 44000 <vasnprintf@@Base+0x1e4c>
    ef6c:	add	x0, x0, #0x63b
    ef70:	bl	aa70 <xstrdup@plt>
    ef74:	stur	x0, [x29, #-8]
    ef78:	b	efe4 <lang_dir@@Base+0x19c>
    ef7c:	ldr	x8, [sp, #16]
    ef80:	add	x8, x8, #0x4
    ef84:	str	x8, [sp, #16]
    ef88:	ldr	x0, [sp, #16]
    ef8c:	mov	w1, #0x2f                  	// #47
    ef90:	bl	aa80 <strchr@plt>
    ef94:	str	x0, [sp, #8]
    ef98:	ldr	x8, [sp, #8]
    ef9c:	cbnz	x8, efac <lang_dir@@Base+0x164>
    efa0:	ldr	x8, [sp, #24]
    efa4:	stur	x8, [x29, #-8]
    efa8:	b	efe4 <lang_dir@@Base+0x19c>
    efac:	ldr	x0, [sp, #24]
    efb0:	bl	a930 <free@plt>
    efb4:	ldr	x0, [sp, #16]
    efb8:	ldr	x8, [sp, #8]
    efbc:	ldr	x9, [sp, #16]
    efc0:	subs	x1, x8, x9
    efc4:	bl	aaa0 <xstrndup@plt>
    efc8:	str	x0, [sp, #24]
    efcc:	ldr	x1, [sp, #24]
    efd0:	adrp	x0, 44000 <vasnprintf@@Base+0x1e4c>
    efd4:	add	x0, x0, #0xd7a
    efd8:	bl	aa40 <debug@plt>
    efdc:	ldr	x8, [sp, #24]
    efe0:	stur	x8, [x29, #-8]
    efe4:	ldur	x0, [x29, #-8]
    efe8:	ldp	x29, x30, [sp, #48]
    efec:	add	sp, sp, #0x40
    eff0:	ret

000000000000eff4 <init_locale@@Base>:
    eff4:	sub	sp, sp, #0x30
    eff8:	stp	x29, x30, [sp, #32]
    effc:	add	x29, sp, #0x20
    f000:	mov	w0, #0x6                   	// #6
    f004:	adrp	x1, 44000 <vasnprintf@@Base+0x1e4c>
    f008:	add	x1, x1, #0x4d7
    f00c:	bl	aa60 <setlocale@plt>
    f010:	stur	x0, [x29, #-8]
    f014:	ldur	x8, [x29, #-8]
    f018:	cbnz	x8, f054 <init_locale@@Base+0x60>
    f01c:	adrp	x0, 44000 <vasnprintf@@Base+0x1e4c>
    f020:	add	x0, x0, #0xd95
    f024:	bl	a9f0 <getenv@plt>
    f028:	cbnz	x0, f054 <init_locale@@Base+0x60>
    f02c:	adrp	x0, 44000 <vasnprintf@@Base+0x1e4c>
    f030:	add	x0, x0, #0xdab
    f034:	bl	a9f0 <getenv@plt>
    f038:	cbnz	x0, f054 <init_locale@@Base+0x60>
    f03c:	mov	w8, wzr
    f040:	mov	w0, w8
    f044:	mov	w1, w8
    f048:	adrp	x2, 44000 <vasnprintf@@Base+0x1e4c>
    f04c:	add	x2, x2, #0xdc0
    f050:	bl	adc0 <error@plt>
    f054:	adrp	x0, 44000 <vasnprintf@@Base+0x1e4c>
    f058:	add	x0, x0, #0xd95
    f05c:	adrp	x1, 44000 <vasnprintf@@Base+0x1e4c>
    f060:	add	x1, x1, #0x4be
    f064:	mov	w2, #0x1                   	// #1
    f068:	bl	aea0 <setenv@plt>
    f06c:	adrp	x8, 44000 <vasnprintf@@Base+0x1e4c>
    f070:	add	x8, x8, #0xdfc
    f074:	mov	x0, x8
    f078:	adrp	x9, 44000 <vasnprintf@@Base+0x1e4c>
    f07c:	add	x9, x9, #0xe03
    f080:	mov	x1, x9
    f084:	str	x8, [sp, #16]
    f088:	str	x9, [sp, #8]
    f08c:	bl	aeb0 <bindtextdomain@plt>
    f090:	adrp	x8, 44000 <vasnprintf@@Base+0x1e4c>
    f094:	add	x8, x8, #0xe15
    f098:	mov	x0, x8
    f09c:	ldr	x1, [sp, #8]
    f0a0:	bl	aeb0 <bindtextdomain@plt>
    f0a4:	ldr	x8, [sp, #16]
    f0a8:	mov	x0, x8
    f0ac:	bl	aec0 <textdomain@plt>
    f0b0:	ldp	x29, x30, [sp, #32]
    f0b4:	add	sp, sp, #0x30
    f0b8:	ret

000000000000f0bc <word_fnmatch@@Base>:
    f0bc:	sub	sp, sp, #0x40
    f0c0:	stp	x29, x30, [sp, #48]
    f0c4:	add	x29, sp, #0x30
    f0c8:	stur	x0, [x29, #-16]
    f0cc:	str	x1, [sp, #24]
    f0d0:	ldr	x0, [sp, #24]
    f0d4:	bl	aa70 <xstrdup@plt>
    f0d8:	str	x0, [sp, #16]
    f0dc:	ldr	x8, [sp, #16]
    f0e0:	str	x8, [sp, #8]
    f0e4:	ldr	x8, [sp, #16]
    f0e8:	str	x8, [sp]
    f0ec:	ldr	x8, [sp]
    f0f0:	ldrb	w9, [x8]
    f0f4:	cbz	w9, f1a0 <word_fnmatch@@Base+0xe4>
    f0f8:	bl	aed0 <__ctype_b_loc@plt>
    f0fc:	ldr	x8, [x0]
    f100:	ldr	x9, [sp]
    f104:	ldrb	w10, [x9]
    f108:	ldrh	w10, [x8, w10, sxtw #1]
    f10c:	and	w10, w10, #0x400
    f110:	cbnz	w10, f124 <word_fnmatch@@Base+0x68>
    f114:	ldr	x8, [sp]
    f118:	ldrb	w9, [x8]
    f11c:	cmp	w9, #0x5f
    f120:	b.ne	f128 <word_fnmatch@@Base+0x6c>  // b.any
    f124:	b	f190 <word_fnmatch@@Base+0xd4>
    f128:	ldr	x8, [sp]
    f12c:	ldr	x9, [sp, #8]
    f130:	add	x9, x9, #0x1
    f134:	cmp	x8, x9
    f138:	b.hi	f14c <word_fnmatch@@Base+0x90>  // b.pmore
    f13c:	ldr	x8, [sp, #8]
    f140:	add	x8, x8, #0x1
    f144:	str	x8, [sp, #8]
    f148:	b	f190 <word_fnmatch@@Base+0xd4>
    f14c:	ldr	x8, [sp]
    f150:	mov	w9, #0x0                   	// #0
    f154:	strb	w9, [x8]
    f158:	ldur	x0, [x29, #-16]
    f15c:	ldr	x1, [sp, #8]
    f160:	mov	w2, #0x10                  	// #16
    f164:	bl	aee0 <fnmatch@plt>
    f168:	cbnz	w0, f184 <word_fnmatch@@Base+0xc8>
    f16c:	ldr	x0, [sp, #16]
    f170:	bl	a930 <free@plt>
    f174:	mov	w8, #0x1                   	// #1
    f178:	and	w8, w8, #0x1
    f17c:	sturb	w8, [x29, #-1]
    f180:	b	f1b4 <word_fnmatch@@Base+0xf8>
    f184:	ldr	x8, [sp]
    f188:	add	x8, x8, #0x1
    f18c:	str	x8, [sp, #8]
    f190:	ldr	x8, [sp]
    f194:	add	x8, x8, #0x1
    f198:	str	x8, [sp]
    f19c:	b	f0ec <word_fnmatch@@Base+0x30>
    f1a0:	ldr	x0, [sp, #16]
    f1a4:	bl	a930 <free@plt>
    f1a8:	mov	w8, wzr
    f1ac:	and	w8, w8, #0x1
    f1b0:	sturb	w8, [x29, #-1]
    f1b4:	ldurb	w8, [x29, #-1]
    f1b8:	and	w0, w8, #0x1
    f1bc:	ldp	x29, x30, [sp, #48]
    f1c0:	add	sp, sp, #0x40
    f1c4:	ret

000000000000f1c8 <xregcomp@@Base>:
    f1c8:	sub	sp, sp, #0x40
    f1cc:	stp	x29, x30, [sp, #48]
    f1d0:	add	x29, sp, #0x30
    f1d4:	stur	x0, [x29, #-8]
    f1d8:	stur	x1, [x29, #-16]
    f1dc:	stur	w2, [x29, #-20]
    f1e0:	ldur	x0, [x29, #-8]
    f1e4:	ldur	x1, [x29, #-16]
    f1e8:	ldur	w2, [x29, #-20]
    f1ec:	bl	aef0 <rpl_regcomp@plt>
    f1f0:	str	w0, [sp, #24]
    f1f4:	ldr	w8, [sp, #24]
    f1f8:	cbz	w8, f26c <xregcomp@@Base+0xa4>
    f1fc:	ldr	w0, [sp, #24]
    f200:	ldur	x1, [x29, #-8]
    f204:	mov	x8, xzr
    f208:	mov	x2, x8
    f20c:	mov	x3, x8
    f210:	bl	af00 <rpl_regerror@plt>
    f214:	str	x0, [sp, #16]
    f218:	ldr	x0, [sp, #16]
    f21c:	bl	aca0 <xmalloc@plt>
    f220:	str	x0, [sp, #8]
    f224:	ldr	w0, [sp, #24]
    f228:	ldur	x1, [x29, #-8]
    f22c:	ldr	x2, [sp, #8]
    f230:	ldr	x3, [sp, #16]
    f234:	bl	af00 <rpl_regerror@plt>
    f238:	adrp	x8, 44000 <vasnprintf@@Base+0x1e4c>
    f23c:	add	x8, x8, #0xe23
    f240:	mov	x0, x8
    f244:	bl	adb0 <gettext@plt>
    f248:	ldur	x3, [x29, #-16]
    f24c:	ldr	x4, [sp, #8]
    f250:	mov	w9, #0x2                   	// #2
    f254:	str	x0, [sp]
    f258:	mov	w0, w9
    f25c:	mov	w9, wzr
    f260:	mov	w1, w9
    f264:	ldr	x2, [sp]
    f268:	bl	adc0 <error@plt>
    f26c:	ldp	x29, x30, [sp, #48]
    f270:	add	sp, sp, #0x40
    f274:	ret

000000000000f278 <areadlink_with_size@@Base>:
    f278:	sub	sp, sp, #0x130
    f27c:	stp	x29, x30, [sp, #272]
    f280:	str	x28, [sp, #288]
    f284:	add	x29, sp, #0x110
    f288:	mov	x8, #0x400                 	// #1024
    f28c:	mov	x9, #0x2000                	// #8192
    f290:	stur	x0, [x29, #-16]
    f294:	stur	x1, [x29, #-24]
    f298:	stur	x8, [x29, #-32]
    f29c:	stur	x9, [x29, #-40]
    f2a0:	ldur	x8, [x29, #-32]
    f2a4:	ldur	x9, [x29, #-40]
    f2a8:	cmp	x8, x9
    f2ac:	b.cs	f2c0 <areadlink_with_size@@Base+0x48>  // b.hs, b.nlast
    f2b0:	ldur	x8, [x29, #-32]
    f2b4:	add	x8, x8, #0x1
    f2b8:	str	x8, [sp, #32]
    f2bc:	b	f2c8 <areadlink_with_size@@Base+0x50>
    f2c0:	ldur	x8, [x29, #-40]
    f2c4:	str	x8, [sp, #32]
    f2c8:	ldr	x8, [sp, #32]
    f2cc:	stur	x8, [x29, #-48]
    f2d0:	ldur	x8, [x29, #-24]
    f2d4:	cbnz	x8, f2e4 <areadlink_with_size@@Base+0x6c>
    f2d8:	mov	x8, #0x80                  	// #128
    f2dc:	str	x8, [sp, #24]
    f2e0:	b	f314 <areadlink_with_size@@Base+0x9c>
    f2e4:	ldur	x8, [x29, #-24]
    f2e8:	ldur	x9, [x29, #-48]
    f2ec:	cmp	x8, x9
    f2f0:	b.cs	f304 <areadlink_with_size@@Base+0x8c>  // b.hs, b.nlast
    f2f4:	ldur	x8, [x29, #-24]
    f2f8:	add	x8, x8, #0x1
    f2fc:	str	x8, [sp, #16]
    f300:	b	f30c <areadlink_with_size@@Base+0x94>
    f304:	ldur	x8, [x29, #-48]
    f308:	str	x8, [sp, #16]
    f30c:	ldr	x8, [sp, #16]
    f310:	str	x8, [sp, #24]
    f314:	ldr	x8, [sp, #24]
    f318:	stur	x8, [x29, #-56]
    f31c:	add	x8, sp, #0x48
    f320:	str	x8, [sp, #64]
    f324:	mov	x8, xzr
    f328:	str	x8, [sp, #56]
    f32c:	ldur	x8, [x29, #-24]
    f330:	cbnz	x8, f340 <areadlink_with_size@@Base+0xc8>
    f334:	ldur	x8, [x29, #-56]
    f338:	cmp	x8, #0x80
    f33c:	b.eq	f364 <areadlink_with_size@@Base+0xec>  // b.none
    f340:	ldur	x0, [x29, #-56]
    f344:	bl	af10 <malloc@plt>
    f348:	str	x0, [sp, #56]
    f34c:	str	x0, [sp, #64]
    f350:	ldr	x8, [sp, #56]
    f354:	cbnz	x8, f364 <areadlink_with_size@@Base+0xec>
    f358:	mov	x8, xzr
    f35c:	stur	x8, [x29, #-8]
    f360:	b	f4ec <areadlink_with_size@@Base+0x274>
    f364:	ldur	x0, [x29, #-16]
    f368:	ldr	x1, [sp, #64]
    f36c:	ldur	x2, [x29, #-56]
    f370:	bl	af20 <readlink@plt>
    f374:	stur	x0, [x29, #-64]
    f378:	ldur	x8, [x29, #-64]
    f37c:	stur	x8, [x29, #-72]
    f380:	ldur	x8, [x29, #-64]
    f384:	cmp	x8, #0x0
    f388:	cset	w9, ge  // ge = tcont
    f38c:	tbnz	w9, #0, f3d4 <areadlink_with_size@@Base+0x15c>
    f390:	bl	aa20 <__errno_location@plt>
    f394:	ldr	w8, [x0]
    f398:	cmp	w8, #0x22
    f39c:	b.eq	f3d4 <areadlink_with_size@@Base+0x15c>  // b.none
    f3a0:	bl	aa20 <__errno_location@plt>
    f3a4:	ldr	w8, [x0]
    f3a8:	str	w8, [sp, #52]
    f3ac:	ldr	x0, [sp, #56]
    f3b0:	bl	a930 <free@plt>
    f3b4:	ldr	w8, [sp, #52]
    f3b8:	str	w8, [sp, #12]
    f3bc:	bl	aa20 <__errno_location@plt>
    f3c0:	ldr	w8, [sp, #12]
    f3c4:	str	w8, [x0]
    f3c8:	mov	x9, xzr
    f3cc:	stur	x9, [x29, #-8]
    f3d0:	b	f4ec <areadlink_with_size@@Base+0x274>
    f3d4:	ldur	x8, [x29, #-72]
    f3d8:	ldur	x9, [x29, #-56]
    f3dc:	cmp	x8, x9
    f3e0:	b.cs	f488 <areadlink_with_size@@Base+0x210>  // b.hs, b.nlast
    f3e4:	ldr	x8, [sp, #64]
    f3e8:	ldur	x9, [x29, #-72]
    f3ec:	add	x8, x8, x9
    f3f0:	mov	w10, #0x0                   	// #0
    f3f4:	strb	w10, [x8]
    f3f8:	ldr	x8, [sp, #56]
    f3fc:	cbnz	x8, f444 <areadlink_with_size@@Base+0x1cc>
    f400:	ldur	x8, [x29, #-72]
    f404:	add	x0, x8, #0x1
    f408:	bl	af10 <malloc@plt>
    f40c:	str	x0, [sp, #56]
    f410:	ldr	x8, [sp, #56]
    f414:	cbz	x8, f440 <areadlink_with_size@@Base+0x1c8>
    f418:	ldr	x8, [sp, #56]
    f41c:	ldr	x1, [sp, #64]
    f420:	ldur	x9, [x29, #-72]
    f424:	add	x2, x9, #0x1
    f428:	mov	x0, x8
    f42c:	str	x8, [sp]
    f430:	bl	af30 <memcpy@plt>
    f434:	ldr	x8, [sp]
    f438:	stur	x8, [x29, #-8]
    f43c:	b	f4ec <areadlink_with_size@@Base+0x274>
    f440:	b	f47c <areadlink_with_size@@Base+0x204>
    f444:	ldur	x8, [x29, #-72]
    f448:	add	x8, x8, #0x1
    f44c:	ldur	x9, [x29, #-56]
    f450:	cmp	x8, x9
    f454:	b.cs	f47c <areadlink_with_size@@Base+0x204>  // b.hs, b.nlast
    f458:	ldr	x0, [sp, #56]
    f45c:	ldur	x8, [x29, #-72]
    f460:	add	x1, x8, #0x1
    f464:	bl	af40 <realloc@plt>
    f468:	str	x0, [sp, #40]
    f46c:	ldr	x8, [sp, #40]
    f470:	cbz	x8, f47c <areadlink_with_size@@Base+0x204>
    f474:	ldr	x8, [sp, #40]
    f478:	str	x8, [sp, #56]
    f47c:	ldr	x8, [sp, #56]
    f480:	stur	x8, [x29, #-8]
    f484:	b	f4ec <areadlink_with_size@@Base+0x274>
    f488:	ldr	x0, [sp, #56]
    f48c:	bl	a930 <free@plt>
    f490:	ldur	x8, [x29, #-56]
    f494:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
    f498:	cmp	x8, x9
    f49c:	b.hi	f4b4 <areadlink_with_size@@Base+0x23c>  // b.pmore
    f4a0:	ldur	x8, [x29, #-56]
    f4a4:	mov	x9, #0x2                   	// #2
    f4a8:	mul	x8, x8, x9
    f4ac:	stur	x8, [x29, #-56]
    f4b0:	b	f4e8 <areadlink_with_size@@Base+0x270>
    f4b4:	ldur	x8, [x29, #-56]
    f4b8:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
    f4bc:	cmp	x8, x9
    f4c0:	b.cs	f4d0 <areadlink_with_size@@Base+0x258>  // b.hs, b.nlast
    f4c4:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
    f4c8:	stur	x8, [x29, #-56]
    f4cc:	b	f4e8 <areadlink_with_size@@Base+0x270>
    f4d0:	bl	aa20 <__errno_location@plt>
    f4d4:	mov	w8, #0xc                   	// #12
    f4d8:	str	w8, [x0]
    f4dc:	mov	x9, xzr
    f4e0:	stur	x9, [x29, #-8]
    f4e4:	b	f4ec <areadlink_with_size@@Base+0x274>
    f4e8:	b	f31c <areadlink_with_size@@Base+0xa4>
    f4ec:	ldur	x0, [x29, #-8]
    f4f0:	ldr	x28, [sp, #288]
    f4f4:	ldp	x29, x30, [sp, #272]
    f4f8:	add	sp, sp, #0x130
    f4fc:	ret

000000000000f500 <argp_make_fmtstream@@Base>:
    f500:	sub	sp, sp, #0x40
    f504:	stp	x29, x30, [sp, #48]
    f508:	add	x29, sp, #0x30
    f50c:	mov	x8, #0x48                  	// #72
    f510:	stur	x0, [x29, #-8]
    f514:	stur	x1, [x29, #-16]
    f518:	str	x2, [sp, #24]
    f51c:	str	x3, [sp, #16]
    f520:	mov	x0, x8
    f524:	bl	af10 <malloc@plt>
    f528:	str	x0, [sp, #8]
    f52c:	ldr	x8, [sp, #8]
    f530:	cbz	x8, f5c8 <argp_make_fmtstream@@Base+0xc8>
    f534:	ldur	x8, [x29, #-8]
    f538:	ldr	x9, [sp, #8]
    f53c:	str	x8, [x9]
    f540:	ldur	x8, [x29, #-16]
    f544:	ldr	x9, [sp, #8]
    f548:	str	x8, [x9, #8]
    f54c:	ldr	x8, [sp, #24]
    f550:	ldr	x9, [sp, #8]
    f554:	str	x8, [x9, #16]
    f558:	ldr	x8, [sp, #16]
    f55c:	ldr	x9, [sp, #8]
    f560:	str	x8, [x9, #24]
    f564:	ldr	x8, [sp, #8]
    f568:	str	xzr, [x8, #40]
    f56c:	ldr	x8, [sp, #8]
    f570:	str	xzr, [x8, #32]
    f574:	mov	x0, #0xc8                  	// #200
    f578:	bl	af10 <malloc@plt>
    f57c:	ldr	x8, [sp, #8]
    f580:	str	x0, [x8, #48]
    f584:	ldr	x8, [sp, #8]
    f588:	ldr	x8, [x8, #48]
    f58c:	cbnz	x8, f5a4 <argp_make_fmtstream@@Base+0xa4>
    f590:	ldr	x0, [sp, #8]
    f594:	bl	a930 <free@plt>
    f598:	mov	x8, xzr
    f59c:	str	x8, [sp, #8]
    f5a0:	b	f5c8 <argp_make_fmtstream@@Base+0xc8>
    f5a4:	ldr	x8, [sp, #8]
    f5a8:	ldr	x8, [x8, #48]
    f5ac:	ldr	x9, [sp, #8]
    f5b0:	str	x8, [x9, #56]
    f5b4:	ldr	x8, [sp, #8]
    f5b8:	ldr	x8, [x8, #48]
    f5bc:	add	x8, x8, #0xc8
    f5c0:	ldr	x9, [sp, #8]
    f5c4:	str	x8, [x9, #64]
    f5c8:	ldr	x0, [sp, #8]
    f5cc:	ldp	x29, x30, [sp, #48]
    f5d0:	add	sp, sp, #0x40
    f5d4:	ret

000000000000f5d8 <argp_fmtstream_free@@Base>:
    f5d8:	sub	sp, sp, #0x20
    f5dc:	stp	x29, x30, [sp, #16]
    f5e0:	add	x29, sp, #0x10
    f5e4:	str	x0, [sp, #8]
    f5e8:	ldr	x0, [sp, #8]
    f5ec:	bl	af50 <_argp_fmtstream_update@plt>
    f5f0:	ldr	x8, [sp, #8]
    f5f4:	ldr	x8, [x8, #56]
    f5f8:	ldr	x9, [sp, #8]
    f5fc:	ldr	x9, [x9, #48]
    f600:	cmp	x8, x9
    f604:	b.ls	f634 <argp_fmtstream_free@@Base+0x5c>  // b.plast
    f608:	ldr	x8, [sp, #8]
    f60c:	ldr	x0, [x8, #48]
    f610:	ldr	x8, [sp, #8]
    f614:	ldr	x8, [x8, #56]
    f618:	ldr	x9, [sp, #8]
    f61c:	ldr	x9, [x9, #48]
    f620:	subs	x2, x8, x9
    f624:	ldr	x8, [sp, #8]
    f628:	ldr	x3, [x8]
    f62c:	mov	x1, #0x1                   	// #1
    f630:	bl	af60 <fwrite_unlocked@plt>
    f634:	ldr	x8, [sp, #8]
    f638:	ldr	x0, [x8, #48]
    f63c:	bl	a930 <free@plt>
    f640:	ldr	x0, [sp, #8]
    f644:	bl	a930 <free@plt>
    f648:	ldp	x29, x30, [sp, #16]
    f64c:	add	sp, sp, #0x20
    f650:	ret

000000000000f654 <_argp_fmtstream_update@@Base>:
    f654:	sub	sp, sp, #0x80
    f658:	stp	x29, x30, [sp, #112]
    f65c:	add	x29, sp, #0x70
    f660:	stur	x0, [x29, #-8]
    f664:	ldur	x8, [x29, #-8]
    f668:	ldr	x8, [x8, #48]
    f66c:	ldur	x9, [x29, #-8]
    f670:	ldr	x9, [x9, #32]
    f674:	add	x8, x8, x9
    f678:	stur	x8, [x29, #-16]
    f67c:	ldur	x8, [x29, #-16]
    f680:	ldur	x9, [x29, #-8]
    f684:	ldr	x9, [x9, #56]
    f688:	cmp	x8, x9
    f68c:	b.cs	fe44 <_argp_fmtstream_update@@Base+0x7f0>  // b.hs, b.nlast
    f690:	ldur	x8, [x29, #-8]
    f694:	ldr	x8, [x8, #40]
    f698:	cbnz	x8, f770 <_argp_fmtstream_update@@Base+0x11c>
    f69c:	ldur	x8, [x29, #-8]
    f6a0:	ldr	x8, [x8, #8]
    f6a4:	cbz	x8, f770 <_argp_fmtstream_update@@Base+0x11c>
    f6a8:	ldur	x8, [x29, #-8]
    f6ac:	ldr	x8, [x8, #8]
    f6b0:	stur	x8, [x29, #-48]
    f6b4:	ldur	x8, [x29, #-8]
    f6b8:	ldr	x8, [x8, #56]
    f6bc:	ldur	x9, [x29, #-48]
    f6c0:	add	x8, x8, x9
    f6c4:	ldur	x9, [x29, #-8]
    f6c8:	ldr	x9, [x9, #64]
    f6cc:	cmp	x8, x9
    f6d0:	b.cs	f730 <_argp_fmtstream_update@@Base+0xdc>  // b.hs, b.nlast
    f6d4:	ldur	x8, [x29, #-16]
    f6d8:	ldur	x9, [x29, #-48]
    f6dc:	add	x0, x8, x9
    f6e0:	ldur	x1, [x29, #-16]
    f6e4:	ldur	x8, [x29, #-8]
    f6e8:	ldr	x8, [x8, #56]
    f6ec:	ldur	x9, [x29, #-16]
    f6f0:	subs	x2, x8, x9
    f6f4:	bl	af70 <memmove@plt>
    f6f8:	ldur	x8, [x29, #-48]
    f6fc:	ldur	x9, [x29, #-8]
    f700:	ldr	x10, [x9, #56]
    f704:	add	x8, x10, x8
    f708:	str	x8, [x9, #56]
    f70c:	ldur	x0, [x29, #-16]
    f710:	ldur	x2, [x29, #-48]
    f714:	mov	w1, #0x20                  	// #32
    f718:	bl	a970 <memset@plt>
    f71c:	ldur	x8, [x29, #-48]
    f720:	ldur	x9, [x29, #-16]
    f724:	add	x8, x9, x8
    f728:	stur	x8, [x29, #-16]
    f72c:	b	f764 <_argp_fmtstream_update@@Base+0x110>
    f730:	str	xzr, [sp, #56]
    f734:	ldr	x8, [sp, #56]
    f738:	ldur	x9, [x29, #-48]
    f73c:	cmp	x8, x9
    f740:	b.cs	f764 <_argp_fmtstream_update@@Base+0x110>  // b.hs, b.nlast
    f744:	ldur	x8, [x29, #-8]
    f748:	ldr	x1, [x8]
    f74c:	mov	w0, #0x20                  	// #32
    f750:	bl	af80 <putc_unlocked@plt>
    f754:	ldr	x8, [sp, #56]
    f758:	add	x8, x8, #0x1
    f75c:	str	x8, [sp, #56]
    f760:	b	f734 <_argp_fmtstream_update@@Base+0xe0>
    f764:	ldur	x8, [x29, #-48]
    f768:	ldur	x9, [x29, #-8]
    f76c:	str	x8, [x9, #40]
    f770:	ldur	x8, [x29, #-8]
    f774:	ldr	x8, [x8, #56]
    f778:	ldur	x9, [x29, #-16]
    f77c:	subs	x8, x8, x9
    f780:	stur	x8, [x29, #-32]
    f784:	ldur	x0, [x29, #-16]
    f788:	ldur	x2, [x29, #-32]
    f78c:	mov	w1, #0xa                   	// #10
    f790:	bl	ab80 <memchr@plt>
    f794:	stur	x0, [x29, #-24]
    f798:	ldur	x8, [x29, #-8]
    f79c:	ldr	x8, [x8, #40]
    f7a0:	cmp	x8, #0x0
    f7a4:	cset	w10, ge  // ge = tcont
    f7a8:	tbnz	w10, #0, f7b4 <_argp_fmtstream_update@@Base+0x160>
    f7ac:	ldur	x8, [x29, #-8]
    f7b0:	str	xzr, [x8, #40]
    f7b4:	ldur	x8, [x29, #-24]
    f7b8:	cbnz	x8, f804 <_argp_fmtstream_update@@Base+0x1b0>
    f7bc:	ldur	x8, [x29, #-8]
    f7c0:	ldr	x8, [x8, #40]
    f7c4:	ldur	x9, [x29, #-32]
    f7c8:	add	x8, x8, x9
    f7cc:	ldur	x9, [x29, #-8]
    f7d0:	ldr	x9, [x9, #16]
    f7d4:	cmp	x8, x9
    f7d8:	b.cs	f7f4 <_argp_fmtstream_update@@Base+0x1a0>  // b.hs, b.nlast
    f7dc:	ldur	x8, [x29, #-32]
    f7e0:	ldur	x9, [x29, #-8]
    f7e4:	ldr	x10, [x9, #40]
    f7e8:	add	x8, x10, x8
    f7ec:	str	x8, [x9, #40]
    f7f0:	b	fe44 <_argp_fmtstream_update@@Base+0x7f0>
    f7f4:	ldur	x8, [x29, #-8]
    f7f8:	ldr	x8, [x8, #56]
    f7fc:	stur	x8, [x29, #-24]
    f800:	b	f844 <_argp_fmtstream_update@@Base+0x1f0>
    f804:	ldur	x8, [x29, #-8]
    f808:	ldr	x8, [x8, #40]
    f80c:	ldur	x9, [x29, #-24]
    f810:	ldur	x10, [x29, #-16]
    f814:	subs	x9, x9, x10
    f818:	add	x8, x8, x9
    f81c:	ldur	x9, [x29, #-8]
    f820:	ldr	x9, [x9, #16]
    f824:	cmp	x8, x9
    f828:	b.ge	f844 <_argp_fmtstream_update@@Base+0x1f0>  // b.tcont
    f82c:	ldur	x8, [x29, #-8]
    f830:	str	xzr, [x8, #40]
    f834:	ldur	x8, [x29, #-24]
    f838:	add	x8, x8, #0x1
    f83c:	stur	x8, [x29, #-16]
    f840:	b	f67c <_argp_fmtstream_update@@Base+0x28>
    f844:	ldur	x8, [x29, #-8]
    f848:	ldr	x8, [x8, #16]
    f84c:	subs	x8, x8, #0x1
    f850:	stur	x8, [x29, #-40]
    f854:	ldur	x8, [x29, #-8]
    f858:	ldr	x8, [x8, #24]
    f85c:	cmp	x8, #0x0
    f860:	cset	w9, ge  // ge = tcont
    f864:	tbnz	w9, #0, f948 <_argp_fmtstream_update@@Base+0x2f4>
    f868:	ldur	x8, [x29, #-24]
    f86c:	ldur	x9, [x29, #-8]
    f870:	ldr	x9, [x9, #56]
    f874:	cmp	x8, x9
    f878:	b.cs	f904 <_argp_fmtstream_update@@Base+0x2b0>  // b.hs, b.nlast
    f87c:	ldur	x8, [x29, #-16]
    f880:	ldur	x9, [x29, #-40]
    f884:	ldur	x10, [x29, #-8]
    f888:	ldr	x10, [x10, #40]
    f88c:	subs	x9, x9, x10
    f890:	add	x0, x8, x9
    f894:	ldur	x1, [x29, #-24]
    f898:	ldur	x8, [x29, #-8]
    f89c:	ldr	x8, [x8, #56]
    f8a0:	ldur	x9, [x29, #-24]
    f8a4:	subs	x2, x8, x9
    f8a8:	bl	af70 <memmove@plt>
    f8ac:	ldur	x8, [x29, #-16]
    f8b0:	ldur	x9, [x29, #-40]
    f8b4:	ldur	x10, [x29, #-8]
    f8b8:	ldr	x10, [x10, #40]
    f8bc:	subs	x9, x9, x10
    f8c0:	add	x8, x8, x9
    f8c4:	ldur	x9, [x29, #-24]
    f8c8:	subs	x8, x8, x9
    f8cc:	ldur	x9, [x29, #-8]
    f8d0:	ldr	x10, [x9, #56]
    f8d4:	mov	x11, xzr
    f8d8:	subs	x8, x11, x8
    f8dc:	add	x8, x10, x8
    f8e0:	str	x8, [x9, #56]
    f8e4:	ldur	x8, [x29, #-8]
    f8e8:	str	xzr, [x8, #40]
    f8ec:	ldur	x8, [x29, #-40]
    f8f0:	add	x8, x8, #0x1
    f8f4:	ldur	x9, [x29, #-16]
    f8f8:	add	x8, x9, x8
    f8fc:	stur	x8, [x29, #-16]
    f900:	b	f944 <_argp_fmtstream_update@@Base+0x2f0>
    f904:	ldur	x8, [x29, #-32]
    f908:	ldur	x9, [x29, #-8]
    f90c:	ldr	x10, [x9, #40]
    f910:	add	x8, x10, x8
    f914:	str	x8, [x9, #40]
    f918:	ldur	x8, [x29, #-8]
    f91c:	ldr	x8, [x8, #40]
    f920:	ldur	x9, [x29, #-40]
    f924:	subs	x8, x8, x9
    f928:	ldur	x9, [x29, #-8]
    f92c:	ldr	x10, [x9, #56]
    f930:	mov	x11, xzr
    f934:	subs	x8, x11, x8
    f938:	add	x8, x10, x8
    f93c:	str	x8, [x9, #56]
    f940:	b	fe44 <_argp_fmtstream_update@@Base+0x7f0>
    f944:	b	fe40 <_argp_fmtstream_update@@Base+0x7ec>
    f948:	ldur	x8, [x29, #-16]
    f94c:	ldur	x9, [x29, #-40]
    f950:	add	x9, x9, #0x1
    f954:	ldur	x10, [x29, #-8]
    f958:	ldr	x10, [x10, #40]
    f95c:	subs	x9, x9, x10
    f960:	add	x8, x8, x9
    f964:	str	x8, [sp, #48]
    f968:	ldr	x8, [sp, #48]
    f96c:	ldur	x9, [x29, #-16]
    f970:	mov	w10, #0x0                   	// #0
    f974:	cmp	x8, x9
    f978:	str	w10, [sp, #20]
    f97c:	b.cc	f9a4 <_argp_fmtstream_update@@Base+0x350>  // b.lo, b.ul, b.last
    f980:	bl	aed0 <__ctype_b_loc@plt>
    f984:	ldr	x8, [x0]
    f988:	ldr	x9, [sp, #48]
    f98c:	ldrb	w10, [x9]
    f990:	ldrh	w10, [x8, w10, sxtw #1]
    f994:	tst	w10, #0x1
    f998:	cset	w10, ne  // ne = any
    f99c:	eor	w10, w10, #0x1
    f9a0:	str	w10, [sp, #20]
    f9a4:	ldr	w8, [sp, #20]
    f9a8:	tbnz	w8, #0, f9b0 <_argp_fmtstream_update@@Base+0x35c>
    f9ac:	b	f9c4 <_argp_fmtstream_update@@Base+0x370>
    f9b0:	ldr	x8, [sp, #48]
    f9b4:	mov	x9, #0xffffffffffffffff    	// #-1
    f9b8:	add	x8, x8, x9
    f9bc:	str	x8, [sp, #48]
    f9c0:	b	f968 <_argp_fmtstream_update@@Base+0x314>
    f9c4:	ldr	x8, [sp, #48]
    f9c8:	add	x8, x8, #0x1
    f9cc:	str	x8, [sp, #40]
    f9d0:	ldr	x8, [sp, #40]
    f9d4:	ldur	x9, [x29, #-16]
    f9d8:	cmp	x8, x9
    f9dc:	b.ls	fa50 <_argp_fmtstream_update@@Base+0x3fc>  // b.plast
    f9e0:	ldr	x8, [sp, #48]
    f9e4:	ldur	x9, [x29, #-16]
    f9e8:	cmp	x8, x9
    f9ec:	b.cc	fa40 <_argp_fmtstream_update@@Base+0x3ec>  // b.lo, b.ul, b.last
    f9f0:	ldr	x8, [sp, #48]
    f9f4:	mov	x9, #0xffffffffffffffff    	// #-1
    f9f8:	add	x8, x8, x9
    f9fc:	str	x8, [sp, #48]
    fa00:	ldr	x8, [sp, #48]
    fa04:	ldur	x9, [x29, #-16]
    fa08:	mov	w10, #0x0                   	// #0
    fa0c:	cmp	x8, x9
    fa10:	str	w10, [sp, #16]
    fa14:	b.cc	fa38 <_argp_fmtstream_update@@Base+0x3e4>  // b.lo, b.ul, b.last
    fa18:	bl	aed0 <__ctype_b_loc@plt>
    fa1c:	ldr	x8, [x0]
    fa20:	ldr	x9, [sp, #48]
    fa24:	ldrb	w10, [x9]
    fa28:	ldrh	w10, [x8, w10, sxtw #1]
    fa2c:	tst	w10, #0x1
    fa30:	cset	w10, ne  // ne = any
    fa34:	str	w10, [sp, #16]
    fa38:	ldr	w8, [sp, #16]
    fa3c:	tbnz	w8, #0, f9f0 <_argp_fmtstream_update@@Base+0x39c>
    fa40:	ldr	x8, [sp, #48]
    fa44:	add	x8, x8, #0x1
    fa48:	stur	x8, [x29, #-24]
    fa4c:	b	fb30 <_argp_fmtstream_update@@Base+0x4dc>
    fa50:	ldur	x8, [x29, #-16]
    fa54:	ldur	x9, [x29, #-40]
    fa58:	add	x9, x9, #0x1
    fa5c:	ldur	x10, [x29, #-8]
    fa60:	ldr	x10, [x10, #40]
    fa64:	subs	x9, x9, x10
    fa68:	add	x8, x8, x9
    fa6c:	str	x8, [sp, #48]
    fa70:	ldr	x8, [sp, #48]
    fa74:	ldur	x9, [x29, #-24]
    fa78:	cmp	x8, x9
    fa7c:	b.cs	fad0 <_argp_fmtstream_update@@Base+0x47c>  // b.hs, b.nlast
    fa80:	ldr	x8, [sp, #48]
    fa84:	add	x8, x8, #0x1
    fa88:	str	x8, [sp, #48]
    fa8c:	ldr	x8, [sp, #48]
    fa90:	ldur	x9, [x29, #-24]
    fa94:	mov	w10, #0x0                   	// #0
    fa98:	cmp	x8, x9
    fa9c:	str	w10, [sp, #12]
    faa0:	b.cs	fac8 <_argp_fmtstream_update@@Base+0x474>  // b.hs, b.nlast
    faa4:	bl	aed0 <__ctype_b_loc@plt>
    faa8:	ldr	x8, [x0]
    faac:	ldr	x9, [sp, #48]
    fab0:	ldrb	w10, [x9]
    fab4:	ldrh	w10, [x8, w10, sxtw #1]
    fab8:	tst	w10, #0x1
    fabc:	cset	w10, ne  // ne = any
    fac0:	eor	w10, w10, #0x1
    fac4:	str	w10, [sp, #12]
    fac8:	ldr	w8, [sp, #12]
    facc:	tbnz	w8, #0, fa80 <_argp_fmtstream_update@@Base+0x42c>
    fad0:	ldr	x8, [sp, #48]
    fad4:	ldur	x9, [x29, #-24]
    fad8:	cmp	x8, x9
    fadc:	b.ne	faf8 <_argp_fmtstream_update@@Base+0x4a4>  // b.any
    fae0:	ldur	x8, [x29, #-8]
    fae4:	str	xzr, [x8, #40]
    fae8:	ldur	x8, [x29, #-24]
    faec:	add	x8, x8, #0x1
    faf0:	stur	x8, [x29, #-16]
    faf4:	b	f67c <_argp_fmtstream_update@@Base+0x28>
    faf8:	ldr	x8, [sp, #48]
    fafc:	stur	x8, [x29, #-24]
    fb00:	ldr	x8, [sp, #48]
    fb04:	add	x8, x8, #0x1
    fb08:	str	x8, [sp, #48]
    fb0c:	bl	aed0 <__ctype_b_loc@plt>
    fb10:	ldr	x8, [x0]
    fb14:	ldr	x9, [sp, #48]
    fb18:	ldrb	w10, [x9]
    fb1c:	ldrh	w10, [x8, w10, sxtw #1]
    fb20:	and	w10, w10, #0x1
    fb24:	cbnz	w10, fb00 <_argp_fmtstream_update@@Base+0x4ac>
    fb28:	ldr	x8, [sp, #48]
    fb2c:	str	x8, [sp, #40]
    fb30:	ldr	x8, [sp, #40]
    fb34:	ldur	x9, [x29, #-16]
    fb38:	ldur	x10, [x29, #-32]
    fb3c:	add	x9, x9, x10
    fb40:	add	x9, x9, #0x1
    fb44:	cmp	x8, x9
    fb48:	b.ne	fb74 <_argp_fmtstream_update@@Base+0x520>  // b.any
    fb4c:	ldur	x8, [x29, #-8]
    fb50:	ldr	x8, [x8, #64]
    fb54:	ldur	x9, [x29, #-24]
    fb58:	subs	x8, x8, x9
    fb5c:	ldur	x9, [x29, #-8]
    fb60:	ldr	x9, [x9, #24]
    fb64:	add	x9, x9, #0x1
    fb68:	cmp	x8, x9
    fb6c:	b.lt	fb94 <_argp_fmtstream_update@@Base+0x540>  // b.tstop
    fb70:	b	fcc8 <_argp_fmtstream_update@@Base+0x674>
    fb74:	ldr	x8, [sp, #40]
    fb78:	ldur	x9, [x29, #-24]
    fb7c:	add	x9, x9, #0x1
    fb80:	subs	x8, x8, x9
    fb84:	ldur	x9, [x29, #-8]
    fb88:	ldr	x9, [x9, #24]
    fb8c:	cmp	x8, x9
    fb90:	b.ge	fcc8 <_argp_fmtstream_update@@Base+0x674>  // b.tcont
    fb94:	ldur	x8, [x29, #-8]
    fb98:	ldr	x8, [x8, #56]
    fb9c:	ldr	x9, [sp, #40]
    fba0:	cmp	x8, x9
    fba4:	b.ls	fcc8 <_argp_fmtstream_update@@Base+0x674>  // b.plast
    fba8:	ldur	x8, [x29, #-8]
    fbac:	ldr	x8, [x8, #64]
    fbb0:	ldur	x9, [x29, #-8]
    fbb4:	ldr	x9, [x9, #56]
    fbb8:	subs	x8, x8, x9
    fbbc:	ldur	x9, [x29, #-8]
    fbc0:	ldr	x9, [x9, #24]
    fbc4:	add	x9, x9, #0x1
    fbc8:	cmp	x8, x9
    fbcc:	b.le	fc4c <_argp_fmtstream_update@@Base+0x5f8>
    fbd0:	ldur	x8, [x29, #-8]
    fbd4:	ldr	x8, [x8, #56]
    fbd8:	ldr	x9, [sp, #40]
    fbdc:	subs	x8, x8, x9
    fbe0:	str	x8, [sp, #24]
    fbe4:	ldur	x8, [x29, #-24]
    fbe8:	add	x8, x8, #0x1
    fbec:	ldur	x9, [x29, #-8]
    fbf0:	ldr	x9, [x9, #24]
    fbf4:	add	x0, x8, x9
    fbf8:	ldr	x1, [sp, #40]
    fbfc:	ldr	x2, [sp, #24]
    fc00:	bl	af70 <memmove@plt>
    fc04:	ldur	x8, [x29, #-24]
    fc08:	add	x8, x8, #0x1
    fc0c:	ldur	x9, [x29, #-8]
    fc10:	ldr	x9, [x9, #24]
    fc14:	add	x8, x8, x9
    fc18:	str	x8, [sp, #40]
    fc1c:	ldr	x8, [sp, #40]
    fc20:	ldr	x9, [sp, #24]
    fc24:	add	x8, x8, x9
    fc28:	ldur	x9, [x29, #-16]
    fc2c:	subs	x8, x8, x9
    fc30:	stur	x8, [x29, #-32]
    fc34:	ldur	x8, [x29, #-24]
    fc38:	add	x9, x8, #0x1
    fc3c:	stur	x9, [x29, #-24]
    fc40:	mov	w10, #0xa                   	// #10
    fc44:	strb	w10, [x8]
    fc48:	b	fcc4 <_argp_fmtstream_update@@Base+0x670>
    fc4c:	ldur	x8, [x29, #-24]
    fc50:	ldur	x9, [x29, #-8]
    fc54:	ldr	x9, [x9, #48]
    fc58:	cmp	x8, x9
    fc5c:	b.ls	fc88 <_argp_fmtstream_update@@Base+0x634>  // b.plast
    fc60:	ldur	x8, [x29, #-8]
    fc64:	ldr	x0, [x8, #48]
    fc68:	ldur	x8, [x29, #-24]
    fc6c:	ldur	x9, [x29, #-8]
    fc70:	ldr	x9, [x9, #48]
    fc74:	subs	x2, x8, x9
    fc78:	ldur	x8, [x29, #-8]
    fc7c:	ldr	x3, [x8]
    fc80:	mov	x1, #0x1                   	// #1
    fc84:	bl	af60 <fwrite_unlocked@plt>
    fc88:	ldur	x8, [x29, #-8]
    fc8c:	ldr	x1, [x8]
    fc90:	mov	w0, #0xa                   	// #10
    fc94:	bl	af80 <putc_unlocked@plt>
    fc98:	ldur	x8, [x29, #-16]
    fc9c:	ldur	x9, [x29, #-8]
    fca0:	ldr	x9, [x9, #48]
    fca4:	subs	x8, x8, x9
    fca8:	ldur	x9, [x29, #-32]
    fcac:	add	x8, x9, x8
    fcb0:	stur	x8, [x29, #-32]
    fcb4:	ldur	x8, [x29, #-8]
    fcb8:	ldr	x8, [x8, #48]
    fcbc:	stur	x8, [x29, #-16]
    fcc0:	stur	x8, [x29, #-24]
    fcc4:	b	fcdc <_argp_fmtstream_update@@Base+0x688>
    fcc8:	ldur	x8, [x29, #-24]
    fccc:	add	x9, x8, #0x1
    fcd0:	stur	x9, [x29, #-24]
    fcd4:	mov	w10, #0xa                   	// #10
    fcd8:	strb	w10, [x8]
    fcdc:	ldr	x8, [sp, #40]
    fce0:	ldur	x9, [x29, #-24]
    fce4:	subs	x8, x8, x9
    fce8:	ldur	x9, [x29, #-8]
    fcec:	ldr	x9, [x9, #24]
    fcf0:	cmp	x8, x9
    fcf4:	b.ge	fd34 <_argp_fmtstream_update@@Base+0x6e0>  // b.tcont
    fcf8:	ldr	x8, [sp, #40]
    fcfc:	ldur	x9, [x29, #-16]
    fd00:	ldur	x10, [x29, #-32]
    fd04:	add	x9, x9, x10
    fd08:	add	x9, x9, #0x1
    fd0c:	cmp	x8, x9
    fd10:	b.ne	fd74 <_argp_fmtstream_update@@Base+0x720>  // b.any
    fd14:	ldur	x8, [x29, #-8]
    fd18:	ldr	x8, [x8, #64]
    fd1c:	ldr	x9, [sp, #40]
    fd20:	subs	x8, x8, x9
    fd24:	ldur	x9, [x29, #-8]
    fd28:	ldr	x9, [x9, #24]
    fd2c:	cmp	x8, x9
    fd30:	b.lt	fd74 <_argp_fmtstream_update@@Base+0x720>  // b.tstop
    fd34:	str	wzr, [sp, #36]
    fd38:	ldrsw	x8, [sp, #36]
    fd3c:	ldur	x9, [x29, #-8]
    fd40:	ldr	x9, [x9, #24]
    fd44:	cmp	x8, x9
    fd48:	b.ge	fd70 <_argp_fmtstream_update@@Base+0x71c>  // b.tcont
    fd4c:	ldur	x8, [x29, #-24]
    fd50:	add	x9, x8, #0x1
    fd54:	stur	x9, [x29, #-24]
    fd58:	mov	w10, #0x20                  	// #32
    fd5c:	strb	w10, [x8]
    fd60:	ldr	w8, [sp, #36]
    fd64:	add	w8, w8, #0x1
    fd68:	str	w8, [sp, #36]
    fd6c:	b	fd38 <_argp_fmtstream_update@@Base+0x6e4>
    fd70:	b	fdac <_argp_fmtstream_update@@Base+0x758>
    fd74:	str	wzr, [sp, #36]
    fd78:	ldrsw	x8, [sp, #36]
    fd7c:	ldur	x9, [x29, #-8]
    fd80:	ldr	x9, [x9, #24]
    fd84:	cmp	x8, x9
    fd88:	b.ge	fdac <_argp_fmtstream_update@@Base+0x758>  // b.tcont
    fd8c:	ldur	x8, [x29, #-8]
    fd90:	ldr	x1, [x8]
    fd94:	mov	w0, #0x20                  	// #32
    fd98:	bl	af80 <putc_unlocked@plt>
    fd9c:	ldr	w8, [sp, #36]
    fda0:	add	w8, w8, #0x1
    fda4:	str	w8, [sp, #36]
    fda8:	b	fd78 <_argp_fmtstream_update@@Base+0x724>
    fdac:	ldur	x8, [x29, #-24]
    fdb0:	ldr	x9, [sp, #40]
    fdb4:	cmp	x8, x9
    fdb8:	b.cs	fddc <_argp_fmtstream_update@@Base+0x788>  // b.hs, b.nlast
    fdbc:	ldur	x0, [x29, #-24]
    fdc0:	ldr	x1, [sp, #40]
    fdc4:	ldur	x8, [x29, #-16]
    fdc8:	ldur	x9, [x29, #-32]
    fdcc:	add	x8, x8, x9
    fdd0:	ldr	x9, [sp, #40]
    fdd4:	subs	x2, x8, x9
    fdd8:	bl	af70 <memmove@plt>
    fddc:	ldr	x8, [sp, #40]
    fde0:	ldur	x9, [x29, #-16]
    fde4:	subs	x8, x8, x9
    fde8:	ldur	x9, [x29, #-32]
    fdec:	subs	x8, x9, x8
    fdf0:	stur	x8, [x29, #-32]
    fdf4:	ldur	x8, [x29, #-24]
    fdf8:	stur	x8, [x29, #-16]
    fdfc:	ldur	x8, [x29, #-24]
    fe00:	ldur	x9, [x29, #-32]
    fe04:	add	x8, x8, x9
    fe08:	ldur	x9, [x29, #-8]
    fe0c:	str	x8, [x9, #56]
    fe10:	ldur	x8, [x29, #-8]
    fe14:	ldr	x8, [x8, #24]
    fe18:	cbz	x8, fe2c <_argp_fmtstream_update@@Base+0x7d8>
    fe1c:	ldur	x8, [x29, #-8]
    fe20:	ldr	x8, [x8, #24]
    fe24:	str	x8, [sp]
    fe28:	b	fe34 <_argp_fmtstream_update@@Base+0x7e0>
    fe2c:	mov	x8, #0xffffffffffffffff    	// #-1
    fe30:	str	x8, [sp]
    fe34:	ldr	x8, [sp]
    fe38:	ldur	x9, [x29, #-8]
    fe3c:	str	x8, [x9, #40]
    fe40:	b	f67c <_argp_fmtstream_update@@Base+0x28>
    fe44:	ldur	x8, [x29, #-8]
    fe48:	ldr	x8, [x8, #56]
    fe4c:	ldur	x9, [x29, #-8]
    fe50:	ldr	x9, [x9, #48]
    fe54:	subs	x8, x8, x9
    fe58:	ldur	x9, [x29, #-8]
    fe5c:	str	x8, [x9, #32]
    fe60:	ldp	x29, x30, [sp, #112]
    fe64:	add	sp, sp, #0x80
    fe68:	ret

000000000000fe6c <_argp_fmtstream_ensure@@Base>:
    fe6c:	sub	sp, sp, #0x50
    fe70:	stp	x29, x30, [sp, #64]
    fe74:	add	x29, sp, #0x40
    fe78:	stur	x0, [x29, #-16]
    fe7c:	stur	x1, [x29, #-24]
    fe80:	ldur	x8, [x29, #-16]
    fe84:	ldr	x8, [x8, #64]
    fe88:	ldur	x9, [x29, #-16]
    fe8c:	ldr	x9, [x9, #56]
    fe90:	subs	x8, x8, x9
    fe94:	ldur	x9, [x29, #-24]
    fe98:	cmp	x8, x9
    fe9c:	b.cs	10030 <_argp_fmtstream_ensure@@Base+0x1c4>  // b.hs, b.nlast
    fea0:	ldur	x0, [x29, #-16]
    fea4:	bl	af50 <_argp_fmtstream_update@plt>
    fea8:	ldur	x8, [x29, #-16]
    feac:	ldr	x0, [x8, #48]
    feb0:	ldur	x8, [x29, #-16]
    feb4:	ldr	x8, [x8, #56]
    feb8:	ldur	x9, [x29, #-16]
    febc:	ldr	x9, [x9, #48]
    fec0:	subs	x2, x8, x9
    fec4:	ldur	x8, [x29, #-16]
    fec8:	ldr	x3, [x8]
    fecc:	mov	x1, #0x1                   	// #1
    fed0:	bl	af60 <fwrite_unlocked@plt>
    fed4:	str	x0, [sp, #32]
    fed8:	ldr	x8, [sp, #32]
    fedc:	ldur	x9, [x29, #-16]
    fee0:	ldr	x9, [x9, #56]
    fee4:	ldur	x10, [x29, #-16]
    fee8:	ldr	x10, [x10, #48]
    feec:	subs	x9, x9, x10
    fef0:	cmp	x8, x9
    fef4:	b.ne	ff14 <_argp_fmtstream_ensure@@Base+0xa8>  // b.any
    fef8:	ldur	x8, [x29, #-16]
    fefc:	ldr	x8, [x8, #48]
    ff00:	ldur	x9, [x29, #-16]
    ff04:	str	x8, [x9, #56]
    ff08:	ldur	x8, [x29, #-16]
    ff0c:	str	xzr, [x8, #32]
    ff10:	b	ff7c <_argp_fmtstream_ensure@@Base+0x110>
    ff14:	ldr	x8, [sp, #32]
    ff18:	ldur	x9, [x29, #-16]
    ff1c:	ldr	x10, [x9, #56]
    ff20:	mov	x11, xzr
    ff24:	subs	x8, x11, x8
    ff28:	add	x8, x10, x8
    ff2c:	str	x8, [x9, #56]
    ff30:	ldr	x8, [sp, #32]
    ff34:	ldur	x9, [x29, #-16]
    ff38:	ldr	x10, [x9, #32]
    ff3c:	subs	x8, x10, x8
    ff40:	str	x8, [x9, #32]
    ff44:	ldur	x8, [x29, #-16]
    ff48:	ldr	x0, [x8, #48]
    ff4c:	ldur	x8, [x29, #-16]
    ff50:	ldr	x8, [x8, #48]
    ff54:	ldr	x9, [sp, #32]
    ff58:	add	x1, x8, x9
    ff5c:	ldur	x8, [x29, #-16]
    ff60:	ldr	x8, [x8, #56]
    ff64:	ldur	x9, [x29, #-16]
    ff68:	ldr	x9, [x9, #48]
    ff6c:	subs	x2, x8, x9
    ff70:	bl	af70 <memmove@plt>
    ff74:	stur	wzr, [x29, #-4]
    ff78:	b	10038 <_argp_fmtstream_ensure@@Base+0x1cc>
    ff7c:	ldur	x8, [x29, #-16]
    ff80:	ldr	x8, [x8, #64]
    ff84:	ldur	x9, [x29, #-16]
    ff88:	ldr	x9, [x9, #48]
    ff8c:	subs	x8, x8, x9
    ff90:	ldur	x9, [x29, #-24]
    ff94:	cmp	x8, x9
    ff98:	b.cs	10030 <_argp_fmtstream_ensure@@Base+0x1c4>  // b.hs, b.nlast
    ff9c:	ldur	x8, [x29, #-16]
    ffa0:	ldr	x8, [x8, #64]
    ffa4:	ldur	x9, [x29, #-16]
    ffa8:	ldr	x9, [x9, #48]
    ffac:	subs	x8, x8, x9
    ffb0:	str	x8, [sp, #24]
    ffb4:	ldr	x8, [sp, #24]
    ffb8:	ldur	x9, [x29, #-24]
    ffbc:	add	x8, x8, x9
    ffc0:	str	x8, [sp, #16]
    ffc4:	ldr	x8, [sp, #16]
    ffc8:	ldr	x9, [sp, #24]
    ffcc:	cmp	x8, x9
    ffd0:	b.cc	ffec <_argp_fmtstream_ensure@@Base+0x180>  // b.lo, b.ul, b.last
    ffd4:	ldur	x8, [x29, #-16]
    ffd8:	ldr	x0, [x8, #48]
    ffdc:	ldr	x1, [sp, #16]
    ffe0:	bl	af40 <realloc@plt>
    ffe4:	str	x0, [sp, #8]
    ffe8:	cbnz	x0, 10000 <_argp_fmtstream_ensure@@Base+0x194>
    ffec:	bl	aa20 <__errno_location@plt>
    fff0:	mov	w8, #0xc                   	// #12
    fff4:	str	w8, [x0]
    fff8:	stur	wzr, [x29, #-4]
    fffc:	b	10038 <_argp_fmtstream_ensure@@Base+0x1cc>
   10000:	ldr	x8, [sp, #8]
   10004:	ldur	x9, [x29, #-16]
   10008:	str	x8, [x9, #48]
   1000c:	ldr	x8, [sp, #8]
   10010:	ldr	x9, [sp, #16]
   10014:	add	x8, x8, x9
   10018:	ldur	x9, [x29, #-16]
   1001c:	str	x8, [x9, #64]
   10020:	ldur	x8, [x29, #-16]
   10024:	ldr	x8, [x8, #48]
   10028:	ldur	x9, [x29, #-16]
   1002c:	str	x8, [x9, #56]
   10030:	mov	w8, #0x1                   	// #1
   10034:	stur	w8, [x29, #-4]
   10038:	ldur	w0, [x29, #-4]
   1003c:	ldp	x29, x30, [sp, #64]
   10040:	add	sp, sp, #0x50
   10044:	ret

0000000000010048 <argp_fmtstream_printf@@Base>:
   10048:	sub	sp, sp, #0x140
   1004c:	stp	x29, x30, [sp, #288]
   10050:	str	x28, [sp, #304]
   10054:	add	x29, sp, #0x120
   10058:	str	q7, [sp, #112]
   1005c:	str	q6, [sp, #96]
   10060:	str	q5, [sp, #80]
   10064:	str	q4, [sp, #64]
   10068:	str	q3, [sp, #48]
   1006c:	str	q2, [sp, #32]
   10070:	str	q1, [sp, #16]
   10074:	str	q0, [sp]
   10078:	str	x7, [sp, #168]
   1007c:	str	x6, [sp, #160]
   10080:	str	x5, [sp, #152]
   10084:	str	x4, [sp, #144]
   10088:	str	x3, [sp, #136]
   1008c:	str	x2, [sp, #128]
   10090:	stur	x0, [x29, #-16]
   10094:	stur	x1, [x29, #-24]
   10098:	mov	w8, #0x96                  	// #150
   1009c:	mov	w9, w8
   100a0:	stur	x9, [x29, #-48]
   100a4:	b	100a8 <argp_fmtstream_printf@@Base+0x60>
   100a8:	ldur	x0, [x29, #-16]
   100ac:	ldur	x1, [x29, #-48]
   100b0:	bl	af90 <_argp_fmtstream_ensure@plt>
   100b4:	cbnz	w0, 100c8 <argp_fmtstream_printf@@Base+0x80>
   100b8:	b	100bc <argp_fmtstream_printf@@Base+0x74>
   100bc:	mov	x8, #0xffffffffffffffff    	// #-1
   100c0:	stur	x8, [x29, #-8]
   100c4:	b	1019c <argp_fmtstream_printf@@Base+0x154>
   100c8:	mov	w8, #0xffffff80            	// #-128
   100cc:	stur	w8, [x29, #-52]
   100d0:	mov	w8, #0xffffffd0            	// #-48
   100d4:	stur	w8, [x29, #-56]
   100d8:	add	x9, x29, #0x20
   100dc:	stur	x9, [x29, #-80]
   100e0:	mov	x9, sp
   100e4:	add	x9, x9, #0x80
   100e8:	stur	x9, [x29, #-64]
   100ec:	add	x9, sp, #0x80
   100f0:	add	x9, x9, #0x30
   100f4:	stur	x9, [x29, #-72]
   100f8:	ldur	x9, [x29, #-16]
   100fc:	ldr	x10, [x9, #64]
   10100:	ldr	x9, [x9, #56]
   10104:	subs	x9, x10, x9
   10108:	stur	x9, [x29, #-40]
   1010c:	ldur	x9, [x29, #-16]
   10110:	ldr	x0, [x9, #56]
   10114:	ldur	x1, [x29, #-40]
   10118:	ldur	x2, [x29, #-24]
   1011c:	ldur	q0, [x29, #-80]
   10120:	ldur	q1, [x29, #-64]
   10124:	stur	q1, [x29, #-96]
   10128:	stur	q0, [x29, #-112]
   1012c:	sub	x3, x29, #0x70
   10130:	bl	afa0 <vsnprintf@plt>
   10134:	stur	w0, [x29, #-28]
   10138:	ldursw	x9, [x29, #-28]
   1013c:	ldur	x10, [x29, #-40]
   10140:	subs	x9, x9, x10
   10144:	b.cc	10164 <argp_fmtstream_printf@@Base+0x11c>  // b.lo, b.ul, b.last
   10148:	b	1014c <argp_fmtstream_printf@@Base+0x104>
   1014c:	ldur	w8, [x29, #-28]
   10150:	add	w8, w8, #0x1
   10154:	mov	w0, w8
   10158:	sxtw	x9, w0
   1015c:	stur	x9, [x29, #-48]
   10160:	b	10164 <argp_fmtstream_printf@@Base+0x11c>
   10164:	b	10168 <argp_fmtstream_printf@@Base+0x120>
   10168:	ldursw	x8, [x29, #-28]
   1016c:	ldur	x9, [x29, #-40]
   10170:	subs	x8, x8, x9
   10174:	b.cs	100a8 <argp_fmtstream_printf@@Base+0x60>  // b.hs, b.nlast
   10178:	b	1017c <argp_fmtstream_printf@@Base+0x134>
   1017c:	ldursw	x8, [x29, #-28]
   10180:	ldur	x9, [x29, #-16]
   10184:	ldr	x10, [x9, #56]
   10188:	add	x8, x10, x8
   1018c:	str	x8, [x9, #56]
   10190:	ldursw	x8, [x29, #-28]
   10194:	stur	x8, [x29, #-8]
   10198:	b	1019c <argp_fmtstream_printf@@Base+0x154>
   1019c:	ldur	x0, [x29, #-8]
   101a0:	ldr	x28, [sp, #304]
   101a4:	ldp	x29, x30, [sp, #288]
   101a8:	add	sp, sp, #0x140
   101ac:	ret

00000000000101b0 <argp_fmtstream_write@@Base>:
   101b0:	sub	sp, sp, #0x30
   101b4:	stp	x29, x30, [sp, #32]
   101b8:	add	x29, sp, #0x20
   101bc:	str	x0, [sp, #16]
   101c0:	str	x1, [sp, #8]
   101c4:	str	x2, [sp]
   101c8:	ldr	x8, [sp, #16]
   101cc:	ldr	x8, [x8, #56]
   101d0:	ldr	x9, [sp]
   101d4:	add	x8, x8, x9
   101d8:	ldr	x9, [sp, #16]
   101dc:	ldr	x9, [x9, #64]
   101e0:	cmp	x8, x9
   101e4:	b.ls	101f8 <argp_fmtstream_write@@Base+0x48>  // b.plast
   101e8:	ldr	x0, [sp, #16]
   101ec:	ldr	x1, [sp]
   101f0:	bl	af90 <_argp_fmtstream_ensure@plt>
   101f4:	cbz	w0, 1022c <argp_fmtstream_write@@Base+0x7c>
   101f8:	ldr	x8, [sp, #16]
   101fc:	ldr	x0, [x8, #56]
   10200:	ldr	x1, [sp, #8]
   10204:	ldr	x2, [sp]
   10208:	bl	af30 <memcpy@plt>
   1020c:	ldr	x8, [sp]
   10210:	ldr	x9, [sp, #16]
   10214:	ldr	x10, [x9, #56]
   10218:	add	x8, x10, x8
   1021c:	str	x8, [x9, #56]
   10220:	ldr	x8, [sp]
   10224:	stur	x8, [x29, #-8]
   10228:	b	10230 <argp_fmtstream_write@@Base+0x80>
   1022c:	stur	xzr, [x29, #-8]
   10230:	ldur	x0, [x29, #-8]
   10234:	ldp	x29, x30, [sp, #32]
   10238:	add	sp, sp, #0x30
   1023c:	ret

0000000000010240 <argp_fmtstream_puts@@Base>:
   10240:	sub	sp, sp, #0x40
   10244:	stp	x29, x30, [sp, #48]
   10248:	add	x29, sp, #0x30
   1024c:	stur	x0, [x29, #-16]
   10250:	str	x1, [sp, #24]
   10254:	ldr	x0, [sp, #24]
   10258:	bl	a8e0 <strlen@plt>
   1025c:	str	x0, [sp, #16]
   10260:	ldr	x8, [sp, #16]
   10264:	cbz	x8, 1029c <argp_fmtstream_puts@@Base+0x5c>
   10268:	ldur	x0, [x29, #-16]
   1026c:	ldr	x1, [sp, #24]
   10270:	ldr	x2, [sp, #16]
   10274:	bl	afb0 <argp_fmtstream_write@plt>
   10278:	str	x0, [sp, #8]
   1027c:	ldr	x8, [sp, #8]
   10280:	ldr	x9, [sp, #16]
   10284:	mov	w10, #0xffffffff            	// #-1
   10288:	mov	w11, wzr
   1028c:	cmp	x8, x9
   10290:	csel	w10, w11, w10, eq  // eq = none
   10294:	stur	w10, [x29, #-4]
   10298:	b	102a0 <argp_fmtstream_puts@@Base+0x60>
   1029c:	stur	wzr, [x29, #-4]
   102a0:	ldur	w0, [x29, #-4]
   102a4:	ldp	x29, x30, [sp, #48]
   102a8:	add	sp, sp, #0x40
   102ac:	ret

00000000000102b0 <argp_fmtstream_putc@@Base>:
   102b0:	sub	sp, sp, #0x30
   102b4:	stp	x29, x30, [sp, #32]
   102b8:	add	x29, sp, #0x20
   102bc:	str	x0, [sp, #16]
   102c0:	str	w1, [sp, #12]
   102c4:	ldr	x8, [sp, #16]
   102c8:	ldr	x8, [x8, #56]
   102cc:	ldr	x9, [sp, #16]
   102d0:	ldr	x9, [x9, #64]
   102d4:	cmp	x8, x9
   102d8:	b.cc	102ec <argp_fmtstream_putc@@Base+0x3c>  // b.lo, b.ul, b.last
   102dc:	ldr	x0, [sp, #16]
   102e0:	mov	x1, #0x1                   	// #1
   102e4:	bl	af90 <_argp_fmtstream_ensure@plt>
   102e8:	cbz	w0, 10310 <argp_fmtstream_putc@@Base+0x60>
   102ec:	ldr	w8, [sp, #12]
   102f0:	ldr	x9, [sp, #16]
   102f4:	ldr	x10, [x9, #56]
   102f8:	add	x11, x10, #0x1
   102fc:	str	x11, [x9, #56]
   10300:	strb	w8, [x10]
   10304:	and	w8, w8, #0xff
   10308:	stur	w8, [x29, #-4]
   1030c:	b	10318 <argp_fmtstream_putc@@Base+0x68>
   10310:	mov	w8, #0xffffffff            	// #-1
   10314:	stur	w8, [x29, #-4]
   10318:	ldur	w0, [x29, #-4]
   1031c:	ldp	x29, x30, [sp, #32]
   10320:	add	sp, sp, #0x30
   10324:	ret

0000000000010328 <argp_fmtstream_set_lmargin@@Base>:
   10328:	sub	sp, sp, #0x30
   1032c:	stp	x29, x30, [sp, #32]
   10330:	add	x29, sp, #0x20
   10334:	stur	x0, [x29, #-8]
   10338:	str	x1, [sp, #16]
   1033c:	ldur	x8, [x29, #-8]
   10340:	ldr	x8, [x8, #56]
   10344:	ldur	x9, [x29, #-8]
   10348:	ldr	x9, [x9, #48]
   1034c:	subs	x8, x8, x9
   10350:	ldur	x9, [x29, #-8]
   10354:	ldr	x9, [x9, #32]
   10358:	cmp	x8, x9
   1035c:	b.ls	10368 <argp_fmtstream_set_lmargin@@Base+0x40>  // b.plast
   10360:	ldur	x0, [x29, #-8]
   10364:	bl	af50 <_argp_fmtstream_update@plt>
   10368:	ldur	x8, [x29, #-8]
   1036c:	ldr	x8, [x8, #8]
   10370:	str	x8, [sp, #8]
   10374:	ldr	x8, [sp, #16]
   10378:	ldur	x9, [x29, #-8]
   1037c:	str	x8, [x9, #8]
   10380:	ldr	x0, [sp, #8]
   10384:	ldp	x29, x30, [sp, #32]
   10388:	add	sp, sp, #0x30
   1038c:	ret

0000000000010390 <argp_fmtstream_set_rmargin@@Base>:
   10390:	sub	sp, sp, #0x30
   10394:	stp	x29, x30, [sp, #32]
   10398:	add	x29, sp, #0x20
   1039c:	stur	x0, [x29, #-8]
   103a0:	str	x1, [sp, #16]
   103a4:	ldur	x8, [x29, #-8]
   103a8:	ldr	x8, [x8, #56]
   103ac:	ldur	x9, [x29, #-8]
   103b0:	ldr	x9, [x9, #48]
   103b4:	subs	x8, x8, x9
   103b8:	ldur	x9, [x29, #-8]
   103bc:	ldr	x9, [x9, #32]
   103c0:	cmp	x8, x9
   103c4:	b.ls	103d0 <argp_fmtstream_set_rmargin@@Base+0x40>  // b.plast
   103c8:	ldur	x0, [x29, #-8]
   103cc:	bl	af50 <_argp_fmtstream_update@plt>
   103d0:	ldur	x8, [x29, #-8]
   103d4:	ldr	x8, [x8, #16]
   103d8:	str	x8, [sp, #8]
   103dc:	ldr	x8, [sp, #16]
   103e0:	ldur	x9, [x29, #-8]
   103e4:	str	x8, [x9, #16]
   103e8:	ldr	x0, [sp, #8]
   103ec:	ldp	x29, x30, [sp, #32]
   103f0:	add	sp, sp, #0x30
   103f4:	ret

00000000000103f8 <argp_fmtstream_set_wmargin@@Base>:
   103f8:	sub	sp, sp, #0x30
   103fc:	stp	x29, x30, [sp, #32]
   10400:	add	x29, sp, #0x20
   10404:	stur	x0, [x29, #-8]
   10408:	str	x1, [sp, #16]
   1040c:	ldur	x8, [x29, #-8]
   10410:	ldr	x8, [x8, #56]
   10414:	ldur	x9, [x29, #-8]
   10418:	ldr	x9, [x9, #48]
   1041c:	subs	x8, x8, x9
   10420:	ldur	x9, [x29, #-8]
   10424:	ldr	x9, [x9, #32]
   10428:	cmp	x8, x9
   1042c:	b.ls	10438 <argp_fmtstream_set_wmargin@@Base+0x40>  // b.plast
   10430:	ldur	x0, [x29, #-8]
   10434:	bl	af50 <_argp_fmtstream_update@plt>
   10438:	ldur	x8, [x29, #-8]
   1043c:	ldr	x8, [x8, #24]
   10440:	str	x8, [sp, #8]
   10444:	ldr	x8, [sp, #16]
   10448:	ldur	x9, [x29, #-8]
   1044c:	str	x8, [x9, #24]
   10450:	ldr	x0, [sp, #8]
   10454:	ldp	x29, x30, [sp, #32]
   10458:	add	sp, sp, #0x30
   1045c:	ret

0000000000010460 <argp_fmtstream_point@@Base>:
   10460:	sub	sp, sp, #0x20
   10464:	stp	x29, x30, [sp, #16]
   10468:	add	x29, sp, #0x10
   1046c:	str	x0, [sp, #8]
   10470:	ldr	x8, [sp, #8]
   10474:	ldr	x8, [x8, #56]
   10478:	ldr	x9, [sp, #8]
   1047c:	ldr	x9, [x9, #48]
   10480:	subs	x8, x8, x9
   10484:	ldr	x9, [sp, #8]
   10488:	ldr	x9, [x9, #32]
   1048c:	cmp	x8, x9
   10490:	b.ls	1049c <argp_fmtstream_point@@Base+0x3c>  // b.plast
   10494:	ldr	x0, [sp, #8]
   10498:	bl	af50 <_argp_fmtstream_update@plt>
   1049c:	ldr	x8, [sp, #8]
   104a0:	ldr	x8, [x8, #40]
   104a4:	cmp	x8, #0x0
   104a8:	cset	w9, lt  // lt = tstop
   104ac:	tbnz	w9, #0, 104c0 <argp_fmtstream_point@@Base+0x60>
   104b0:	ldr	x8, [sp, #8]
   104b4:	ldr	x8, [x8, #40]
   104b8:	str	x8, [sp]
   104bc:	b	104c8 <argp_fmtstream_point@@Base+0x68>
   104c0:	mov	x8, xzr
   104c4:	str	x8, [sp]
   104c8:	ldr	x8, [sp]
   104cc:	mov	x0, x8
   104d0:	ldp	x29, x30, [sp, #16]
   104d4:	add	sp, sp, #0x20
   104d8:	ret

00000000000104dc <argp_help@@Base>:
   104dc:	sub	sp, sp, #0x30
   104e0:	stp	x29, x30, [sp, #32]
   104e4:	add	x29, sp, #0x20
   104e8:	mov	x8, xzr
   104ec:	stur	x0, [x29, #-8]
   104f0:	str	x1, [sp, #16]
   104f4:	str	w2, [sp, #12]
   104f8:	str	x3, [sp]
   104fc:	ldur	x0, [x29, #-8]
   10500:	ldr	x2, [sp, #16]
   10504:	ldr	w3, [sp, #12]
   10508:	ldr	x4, [sp]
   1050c:	mov	x1, x8
   10510:	bl	10520 <argp_help@@Base+0x44>
   10514:	ldp	x29, x30, [sp, #32]
   10518:	add	sp, sp, #0x30
   1051c:	ret
   10520:	stp	x29, x30, [sp, #-16]!
   10524:	mov	x29, sp
   10528:	sub	sp, sp, #0xe0
   1052c:	mov	x8, xzr
   10530:	adrp	x9, 61000 <gl_rbtree_list_implementation@@Base+0x1468>
   10534:	add	x9, x9, #0x368
   10538:	adrp	x10, 44000 <vasnprintf@@Base+0x1e4c>
   1053c:	add	x10, x10, #0xe15
   10540:	stur	x0, [x29, #-8]
   10544:	stur	x1, [x29, #-16]
   10548:	stur	x2, [x29, #-24]
   1054c:	stur	w3, [x29, #-28]
   10550:	stur	x4, [x29, #-40]
   10554:	stur	wzr, [x29, #-44]
   10558:	stur	x8, [x29, #-56]
   1055c:	ldur	x8, [x29, #-24]
   10560:	stur	x9, [x29, #-112]
   10564:	stur	x10, [x29, #-120]
   10568:	cbnz	x8, 10570 <argp_help@@Base+0x94>
   1056c:	b	10994 <argp_help@@Base+0x4b8>
   10570:	ldur	x0, [x29, #-24]
   10574:	bl	afc0 <flockfile@plt>
   10578:	ldur	x8, [x29, #-112]
   1057c:	ldr	w9, [x8, #36]
   10580:	cbnz	w9, 1058c <argp_help@@Base+0xb0>
   10584:	ldur	x0, [x29, #-16]
   10588:	bl	10f24 <argp_failure@@Base+0x280>
   1058c:	ldur	x0, [x29, #-24]
   10590:	ldur	x8, [x29, #-112]
   10594:	ldrsw	x2, [x8, #32]
   10598:	mov	x9, xzr
   1059c:	mov	x1, x9
   105a0:	mov	x3, x9
   105a4:	bl	afd0 <argp_make_fmtstream@plt>
   105a8:	stur	x0, [x29, #-64]
   105ac:	ldur	x8, [x29, #-64]
   105b0:	cbnz	x8, 105c0 <argp_help@@Base+0xe4>
   105b4:	ldur	x0, [x29, #-24]
   105b8:	bl	afe0 <funlockfile@plt>
   105bc:	b	10994 <argp_help@@Base+0x4b8>
   105c0:	ldur	w8, [x29, #-28]
   105c4:	mov	w9, #0xb                   	// #11
   105c8:	and	w8, w8, w9
   105cc:	cbz	w8, 1061c <argp_help@@Base+0x140>
   105d0:	ldur	x0, [x29, #-8]
   105d4:	mov	x8, xzr
   105d8:	mov	x1, x8
   105dc:	bl	113e0 <argp_failure@@Base+0x73c>
   105e0:	stur	x0, [x29, #-56]
   105e4:	ldur	x0, [x29, #-56]
   105e8:	adrp	x1, 44000 <vasnprintf@@Base+0x1e4c>
   105ec:	add	x1, x1, #0xe4e
   105f0:	mov	w9, #0xffffffff            	// #-1
   105f4:	mov	w2, w9
   105f8:	stur	w9, [x29, #-124]
   105fc:	bl	114e0 <argp_failure@@Base+0x83c>
   10600:	ldur	x0, [x29, #-56]
   10604:	adrp	x1, 44000 <vasnprintf@@Base+0x1e4c>
   10608:	add	x1, x1, #0xe53
   1060c:	ldur	w2, [x29, #-124]
   10610:	bl	114e0 <argp_failure@@Base+0x83c>
   10614:	ldur	x0, [x29, #-56]
   10618:	bl	11528 <argp_failure@@Base+0x884>
   1061c:	ldur	w8, [x29, #-28]
   10620:	and	w8, w8, #0x3
   10624:	cbz	w8, 107f8 <argp_help@@Base+0x31c>
   10628:	mov	w8, #0x1                   	// #1
   1062c:	stur	w8, [x29, #-68]
   10630:	ldur	x0, [x29, #-8]
   10634:	bl	115c8 <argp_failure@@Base+0x924>
   10638:	stur	x0, [x29, #-80]
   1063c:	ldur	x9, [x29, #-80]
   10640:	mov	x10, #0x1                   	// #1
   10644:	mul	x9, x9, x10
   10648:	add	x9, x9, #0xf
   1064c:	and	x9, x9, #0xfffffffffffffff0
   10650:	mov	x10, sp
   10654:	subs	x9, x10, x9
   10658:	mov	sp, x9
   1065c:	stur	x9, [x29, #-88]
   10660:	ldur	x0, [x29, #-88]
   10664:	ldur	x2, [x29, #-80]
   10668:	mov	w8, wzr
   1066c:	mov	w1, w8
   10670:	bl	a970 <memset@plt>
   10674:	ldur	x0, [x29, #-64]
   10678:	ldur	x8, [x29, #-112]
   1067c:	ldrsw	x1, [x8, #28]
   10680:	bl	aff0 <argp_fmtstream_set_wmargin@plt>
   10684:	stur	w0, [x29, #-96]
   10688:	ldur	x8, [x29, #-88]
   1068c:	stur	x8, [x29, #-104]
   10690:	ldur	w9, [x29, #-68]
   10694:	cbz	w9, 106d8 <argp_help@@Base+0x1fc>
   10698:	ldur	x0, [x29, #-64]
   1069c:	ldur	x8, [x29, #-120]
   106a0:	stur	x0, [x29, #-136]
   106a4:	mov	x0, x8
   106a8:	adrp	x1, 44000 <vasnprintf@@Base+0x1e4c>
   106ac:	add	x1, x1, #0xe61
   106b0:	bl	b000 <dgettext@plt>
   106b4:	ldur	x3, [x29, #-40]
   106b8:	ldur	x8, [x29, #-136]
   106bc:	stur	x0, [x29, #-144]
   106c0:	mov	x0, x8
   106c4:	adrp	x1, 44000 <vasnprintf@@Base+0x1e4c>
   106c8:	add	x1, x1, #0xe5b
   106cc:	ldur	x2, [x29, #-144]
   106d0:	bl	b010 <argp_fmtstream_printf@plt>
   106d4:	b	10714 <argp_help@@Base+0x238>
   106d8:	ldur	x0, [x29, #-64]
   106dc:	ldur	x8, [x29, #-120]
   106e0:	stur	x0, [x29, #-152]
   106e4:	mov	x0, x8
   106e8:	adrp	x1, 44000 <vasnprintf@@Base+0x1e4c>
   106ec:	add	x1, x1, #0xe68
   106f0:	bl	b000 <dgettext@plt>
   106f4:	ldur	x3, [x29, #-40]
   106f8:	ldur	x8, [x29, #-152]
   106fc:	stur	x0, [x29, #-160]
   10700:	mov	x0, x8
   10704:	adrp	x1, 44000 <vasnprintf@@Base+0x1e4c>
   10708:	add	x1, x1, #0xe5b
   1070c:	ldur	x2, [x29, #-160]
   10710:	bl	b010 <argp_fmtstream_printf@plt>
   10714:	ldur	x0, [x29, #-64]
   10718:	ldur	x8, [x29, #-112]
   1071c:	ldrsw	x1, [x8, #28]
   10720:	bl	b020 <argp_fmtstream_set_lmargin@plt>
   10724:	stur	w0, [x29, #-92]
   10728:	ldur	w9, [x29, #-28]
   1072c:	and	w9, w9, #0x2
   10730:	cbz	w9, 1077c <argp_help@@Base+0x2a0>
   10734:	ldur	x8, [x29, #-56]
   10738:	ldr	w9, [x8, #8]
   1073c:	cmp	w9, #0x0
   10740:	cset	w9, ls  // ls = plast
   10744:	tbnz	w9, #0, 10778 <argp_help@@Base+0x29c>
   10748:	ldur	x0, [x29, #-64]
   1074c:	ldur	x8, [x29, #-120]
   10750:	stur	x0, [x29, #-168]
   10754:	mov	x0, x8
   10758:	adrp	x1, 44000 <vasnprintf@@Base+0x1e4c>
   1075c:	add	x1, x1, #0xe6f
   10760:	bl	b000 <dgettext@plt>
   10764:	ldur	x8, [x29, #-168]
   10768:	stur	x0, [x29, #-176]
   1076c:	mov	x0, x8
   10770:	ldur	x1, [x29, #-176]
   10774:	bl	b030 <argp_fmtstream_puts@plt>
   10778:	b	10794 <argp_help@@Base+0x2b8>
   1077c:	ldur	x0, [x29, #-56]
   10780:	ldur	x1, [x29, #-64]
   10784:	bl	1165c <argp_failure@@Base+0x9b8>
   10788:	ldur	w8, [x29, #-28]
   1078c:	orr	w8, w8, #0x2
   10790:	stur	w8, [x29, #-28]
   10794:	ldur	x0, [x29, #-8]
   10798:	ldur	x1, [x29, #-16]
   1079c:	ldur	x4, [x29, #-64]
   107a0:	sub	x2, x29, #0x68
   107a4:	mov	w8, #0x1                   	// #1
   107a8:	mov	w3, w8
   107ac:	stur	w8, [x29, #-180]
   107b0:	bl	11900 <argp_failure@@Base+0xc5c>
   107b4:	stur	w0, [x29, #-72]
   107b8:	ldur	x0, [x29, #-64]
   107bc:	ldursw	x1, [x29, #-96]
   107c0:	bl	aff0 <argp_fmtstream_set_wmargin@plt>
   107c4:	ldur	x9, [x29, #-64]
   107c8:	ldursw	x1, [x29, #-92]
   107cc:	mov	x0, x9
   107d0:	bl	b020 <argp_fmtstream_set_lmargin@plt>
   107d4:	ldur	x9, [x29, #-64]
   107d8:	mov	x0, x9
   107dc:	mov	w1, #0xa                   	// #10
   107e0:	bl	b040 <argp_fmtstream_putc@plt>
   107e4:	ldur	w8, [x29, #-180]
   107e8:	stur	w8, [x29, #-44]
   107ec:	stur	wzr, [x29, #-68]
   107f0:	ldur	w8, [x29, #-72]
   107f4:	cbnz	w8, 10674 <argp_help@@Base+0x198>
   107f8:	ldur	w8, [x29, #-28]
   107fc:	and	w8, w8, #0x10
   10800:	cbz	w8, 10830 <argp_help@@Base+0x354>
   10804:	ldur	x0, [x29, #-8]
   10808:	ldur	x1, [x29, #-16]
   1080c:	ldur	x5, [x29, #-64]
   10810:	mov	w8, wzr
   10814:	mov	w2, w8
   10818:	mov	w3, w8
   1081c:	mov	w4, #0x1                   	// #1
   10820:	bl	11b34 <argp_failure@@Base+0xe90>
   10824:	ldur	w8, [x29, #-44]
   10828:	orr	w8, w8, w0
   1082c:	stur	w8, [x29, #-44]
   10830:	ldur	w8, [x29, #-28]
   10834:	and	w8, w8, #0x4
   10838:	cbz	w8, 1087c <argp_help@@Base+0x3a0>
   1083c:	ldur	x0, [x29, #-64]
   10840:	ldur	x8, [x29, #-120]
   10844:	stur	x0, [x29, #-192]
   10848:	mov	x0, x8
   1084c:	adrp	x1, 44000 <vasnprintf@@Base+0x1e4c>
   10850:	add	x1, x1, #0xe7c
   10854:	bl	b000 <dgettext@plt>
   10858:	ldur	x2, [x29, #-40]
   1085c:	ldur	x3, [x29, #-40]
   10860:	ldur	x8, [x29, #-192]
   10864:	stur	x0, [x29, #-200]
   10868:	mov	x0, x8
   1086c:	ldur	x1, [x29, #-200]
   10870:	bl	b010 <argp_fmtstream_printf@plt>
   10874:	mov	w9, #0x1                   	// #1
   10878:	stur	w9, [x29, #-44]
   1087c:	ldur	w8, [x29, #-28]
   10880:	and	w8, w8, #0x8
   10884:	cbz	w8, 108c8 <argp_help@@Base+0x3ec>
   10888:	ldur	x8, [x29, #-56]
   1088c:	ldr	w9, [x8, #8]
   10890:	cmp	w9, #0x0
   10894:	cset	w9, ls  // ls = plast
   10898:	tbnz	w9, #0, 108c8 <argp_help@@Base+0x3ec>
   1089c:	ldur	w8, [x29, #-44]
   108a0:	cbz	w8, 108b0 <argp_help@@Base+0x3d4>
   108a4:	ldur	x0, [x29, #-64]
   108a8:	mov	w1, #0xa                   	// #10
   108ac:	bl	b040 <argp_fmtstream_putc@plt>
   108b0:	ldur	x0, [x29, #-56]
   108b4:	ldur	x1, [x29, #-16]
   108b8:	ldur	x2, [x29, #-64]
   108bc:	bl	11ef8 <argp_failure@@Base+0x1254>
   108c0:	mov	w8, #0x1                   	// #1
   108c4:	stur	w8, [x29, #-44]
   108c8:	ldur	w8, [x29, #-28]
   108cc:	and	w8, w8, #0x20
   108d0:	cbz	w8, 10900 <argp_help@@Base+0x424>
   108d4:	ldur	x0, [x29, #-8]
   108d8:	ldur	x1, [x29, #-16]
   108dc:	ldur	w3, [x29, #-44]
   108e0:	ldur	x5, [x29, #-64]
   108e4:	mov	w2, #0x1                   	// #1
   108e8:	mov	w8, wzr
   108ec:	mov	w4, w8
   108f0:	bl	11b34 <argp_failure@@Base+0xe90>
   108f4:	ldur	w8, [x29, #-44]
   108f8:	orr	w8, w8, w0
   108fc:	stur	w8, [x29, #-44]
   10900:	ldur	w8, [x29, #-28]
   10904:	and	w8, w8, #0x40
   10908:	cbz	w8, 10974 <argp_help@@Base+0x498>
   1090c:	adrp	x8, 5f000 <vasnprintf@@Base+0x1ce4c>
   10910:	ldr	x8, [x8, #3920]
   10914:	ldr	x8, [x8]
   10918:	cbz	x8, 10974 <argp_help@@Base+0x498>
   1091c:	ldur	w8, [x29, #-44]
   10920:	cbz	w8, 10930 <argp_help@@Base+0x454>
   10924:	ldur	x0, [x29, #-64]
   10928:	mov	w1, #0xa                   	// #10
   1092c:	bl	b040 <argp_fmtstream_putc@plt>
   10930:	ldur	x0, [x29, #-64]
   10934:	ldur	x8, [x29, #-120]
   10938:	stur	x0, [x29, #-208]
   1093c:	mov	x0, x8
   10940:	adrp	x1, 44000 <vasnprintf@@Base+0x1e4c>
   10944:	add	x1, x1, #0xeb3
   10948:	bl	b000 <dgettext@plt>
   1094c:	adrp	x8, 5f000 <vasnprintf@@Base+0x1ce4c>
   10950:	ldr	x8, [x8, #3920]
   10954:	ldr	x2, [x8]
   10958:	ldur	x8, [x29, #-208]
   1095c:	stur	x0, [x29, #-216]
   10960:	mov	x0, x8
   10964:	ldur	x1, [x29, #-216]
   10968:	bl	b010 <argp_fmtstream_printf@plt>
   1096c:	mov	w9, #0x1                   	// #1
   10970:	stur	w9, [x29, #-44]
   10974:	ldur	x0, [x29, #-24]
   10978:	bl	afe0 <funlockfile@plt>
   1097c:	ldur	x8, [x29, #-56]
   10980:	cbz	x8, 1098c <argp_help@@Base+0x4b0>
   10984:	ldur	x0, [x29, #-56]
   10988:	bl	12074 <argp_failure@@Base+0x13d0>
   1098c:	ldur	x0, [x29, #-64]
   10990:	bl	b050 <argp_fmtstream_free@plt>
   10994:	mov	sp, x29
   10998:	ldp	x29, x30, [sp], #16
   1099c:	ret

00000000000109a0 <argp_state_help@@Base>:
   109a0:	sub	sp, sp, #0x60
   109a4:	stp	x29, x30, [sp, #80]
   109a8:	add	x29, sp, #0x50
   109ac:	stur	x0, [x29, #-8]
   109b0:	stur	x1, [x29, #-16]
   109b4:	stur	w2, [x29, #-20]
   109b8:	ldur	x8, [x29, #-8]
   109bc:	cbz	x8, 109d0 <argp_state_help@@Base+0x30>
   109c0:	ldur	x8, [x29, #-8]
   109c4:	ldr	w9, [x8, #28]
   109c8:	and	w9, w9, #0x2
   109cc:	cbnz	w9, 10acc <argp_state_help@@Base+0x12c>
   109d0:	ldur	x8, [x29, #-16]
   109d4:	cbz	x8, 10acc <argp_state_help@@Base+0x12c>
   109d8:	ldur	x8, [x29, #-8]
   109dc:	cbz	x8, 109fc <argp_state_help@@Base+0x5c>
   109e0:	ldur	x8, [x29, #-8]
   109e4:	ldr	w9, [x8, #28]
   109e8:	and	w9, w9, #0x40
   109ec:	cbz	w9, 109fc <argp_state_help@@Base+0x5c>
   109f0:	ldur	w8, [x29, #-20]
   109f4:	orr	w8, w8, #0x80
   109f8:	stur	w8, [x29, #-20]
   109fc:	ldur	x8, [x29, #-8]
   10a00:	cbz	x8, 10a14 <argp_state_help@@Base+0x74>
   10a04:	ldur	x8, [x29, #-8]
   10a08:	ldr	x8, [x8]
   10a0c:	stur	x8, [x29, #-32]
   10a10:	b	10a1c <argp_state_help@@Base+0x7c>
   10a14:	mov	x8, xzr
   10a18:	stur	x8, [x29, #-32]
   10a1c:	ldur	x8, [x29, #-32]
   10a20:	ldur	x1, [x29, #-8]
   10a24:	ldur	x2, [x29, #-16]
   10a28:	ldur	w3, [x29, #-20]
   10a2c:	ldur	x9, [x29, #-8]
   10a30:	str	x8, [sp, #40]
   10a34:	str	x1, [sp, #32]
   10a38:	str	x2, [sp, #24]
   10a3c:	str	w3, [sp, #20]
   10a40:	cbz	x9, 10a54 <argp_state_help@@Base+0xb4>
   10a44:	ldur	x8, [x29, #-8]
   10a48:	ldr	x8, [x8, #64]
   10a4c:	str	x8, [sp, #8]
   10a50:	b	10a64 <argp_state_help@@Base+0xc4>
   10a54:	adrp	x8, 5f000 <vasnprintf@@Base+0x1ce4c>
   10a58:	ldr	x8, [x8, #3928]
   10a5c:	ldr	x8, [x8]
   10a60:	str	x8, [sp, #8]
   10a64:	ldr	x8, [sp, #8]
   10a68:	ldr	x0, [sp, #40]
   10a6c:	ldr	x1, [sp, #32]
   10a70:	ldr	x2, [sp, #24]
   10a74:	ldr	w3, [sp, #20]
   10a78:	mov	x4, x8
   10a7c:	bl	10520 <argp_help@@Base+0x44>
   10a80:	ldur	x8, [x29, #-8]
   10a84:	cbz	x8, 10a98 <argp_state_help@@Base+0xf8>
   10a88:	ldur	x8, [x29, #-8]
   10a8c:	ldr	w9, [x8, #28]
   10a90:	and	w9, w9, #0x20
   10a94:	cbnz	w9, 10acc <argp_state_help@@Base+0x12c>
   10a98:	ldur	w8, [x29, #-20]
   10a9c:	and	w8, w8, #0x100
   10aa0:	cbz	w8, 10ab4 <argp_state_help@@Base+0x114>
   10aa4:	adrp	x8, 5f000 <vasnprintf@@Base+0x1ce4c>
   10aa8:	ldr	x8, [x8, #3936]
   10aac:	ldr	w0, [x8]
   10ab0:	bl	b060 <exit@plt>
   10ab4:	ldur	w8, [x29, #-20]
   10ab8:	and	w8, w8, #0x200
   10abc:	cbz	w8, 10acc <argp_state_help@@Base+0x12c>
   10ac0:	mov	w8, wzr
   10ac4:	mov	w0, w8
   10ac8:	bl	b060 <exit@plt>
   10acc:	ldp	x29, x30, [sp, #80]
   10ad0:	add	sp, sp, #0x60
   10ad4:	ret

0000000000010ad8 <argp_error@@Base>:
   10ad8:	sub	sp, sp, #0x160
   10adc:	stp	x29, x30, [sp, #320]
   10ae0:	str	x28, [sp, #336]
   10ae4:	add	x29, sp, #0x140
   10ae8:	sub	x8, x29, #0x38
   10aec:	str	q7, [sp, #160]
   10af0:	str	q6, [sp, #144]
   10af4:	str	q5, [sp, #128]
   10af8:	str	q4, [sp, #112]
   10afc:	str	q3, [sp, #96]
   10b00:	str	q2, [sp, #80]
   10b04:	str	q1, [sp, #64]
   10b08:	str	q0, [sp, #48]
   10b0c:	stur	x7, [x29, #-104]
   10b10:	stur	x6, [x29, #-112]
   10b14:	stur	x5, [x29, #-120]
   10b18:	stur	x4, [x29, #-128]
   10b1c:	stur	x3, [x29, #-136]
   10b20:	stur	x2, [x29, #-144]
   10b24:	stur	x0, [x29, #-8]
   10b28:	stur	x1, [x29, #-16]
   10b2c:	ldur	x9, [x29, #-8]
   10b30:	str	x8, [sp, #40]
   10b34:	cbz	x9, 10b4c <argp_error@@Base+0x74>
   10b38:	b	10b3c <argp_error@@Base+0x64>
   10b3c:	ldur	x8, [x29, #-8]
   10b40:	ldrb	w9, [x8, #28]
   10b44:	tbnz	w9, #1, 10c94 <argp_error@@Base+0x1bc>
   10b48:	b	10b4c <argp_error@@Base+0x74>
   10b4c:	ldur	x8, [x29, #-8]
   10b50:	cbz	x8, 10b68 <argp_error@@Base+0x90>
   10b54:	b	10b58 <argp_error@@Base+0x80>
   10b58:	ldur	x8, [x29, #-8]
   10b5c:	ldr	x8, [x8, #72]
   10b60:	str	x8, [sp, #32]
   10b64:	b	10b7c <argp_error@@Base+0xa4>
   10b68:	adrp	x8, 5f000 <vasnprintf@@Base+0x1ce4c>
   10b6c:	ldr	x8, [x8, #3808]
   10b70:	ldr	x8, [x8]
   10b74:	str	x8, [sp, #32]
   10b78:	b	10b7c <argp_error@@Base+0xa4>
   10b7c:	ldr	x8, [sp, #32]
   10b80:	stur	x8, [x29, #-24]
   10b84:	ldur	x8, [x29, #-24]
   10b88:	cbz	x8, 10c90 <argp_error@@Base+0x1b8>
   10b8c:	b	10b90 <argp_error@@Base+0xb8>
   10b90:	ldur	x0, [x29, #-24]
   10b94:	bl	afc0 <flockfile@plt>
   10b98:	mov	w8, #0xffffff80            	// #-128
   10b9c:	stur	w8, [x29, #-28]
   10ba0:	mov	w8, #0xffffffd0            	// #-48
   10ba4:	stur	w8, [x29, #-32]
   10ba8:	add	x9, sp, #0x30
   10bac:	add	x9, x9, #0x80
   10bb0:	stur	x9, [x29, #-40]
   10bb4:	sub	x9, x29, #0x90
   10bb8:	add	x9, x9, #0x30
   10bbc:	stur	x9, [x29, #-48]
   10bc0:	add	x9, x29, #0x20
   10bc4:	stur	x9, [x29, #-56]
   10bc8:	ldur	x9, [x29, #-8]
   10bcc:	cbz	x9, 10be4 <argp_error@@Base+0x10c>
   10bd0:	b	10bd4 <argp_error@@Base+0xfc>
   10bd4:	ldur	x8, [x29, #-8]
   10bd8:	ldr	x8, [x8, #64]
   10bdc:	str	x8, [sp, #24]
   10be0:	b	10bf8 <argp_error@@Base+0x120>
   10be4:	adrp	x8, 5f000 <vasnprintf@@Base+0x1ce4c>
   10be8:	ldr	x8, [x8, #3928]
   10bec:	ldr	x8, [x8]
   10bf0:	str	x8, [sp, #24]
   10bf4:	b	10bf8 <argp_error@@Base+0x120>
   10bf8:	ldr	x0, [sp, #24]
   10bfc:	ldur	x1, [x29, #-24]
   10c00:	bl	b070 <fputs_unlocked@plt>
   10c04:	ldur	x1, [x29, #-24]
   10c08:	mov	w8, #0x3a                  	// #58
   10c0c:	str	w0, [sp, #20]
   10c10:	mov	w0, w8
   10c14:	bl	af80 <putc_unlocked@plt>
   10c18:	ldur	x1, [x29, #-24]
   10c1c:	mov	w8, #0x20                  	// #32
   10c20:	str	w0, [sp, #16]
   10c24:	mov	w0, w8
   10c28:	bl	af80 <putc_unlocked@plt>
   10c2c:	ldur	x9, [x29, #-24]
   10c30:	ldur	x1, [x29, #-16]
   10c34:	ldr	x10, [sp, #40]
   10c38:	ldr	q0, [x10]
   10c3c:	ldr	q1, [x10, #16]
   10c40:	stur	q1, [x29, #-80]
   10c44:	stur	q0, [x29, #-96]
   10c48:	sub	x2, x29, #0x60
   10c4c:	str	w0, [sp, #12]
   10c50:	mov	x0, x9
   10c54:	bl	aa10 <vfprintf@plt>
   10c58:	ldur	x1, [x29, #-24]
   10c5c:	mov	w8, #0xa                   	// #10
   10c60:	str	w0, [sp, #8]
   10c64:	mov	w0, w8
   10c68:	bl	af80 <putc_unlocked@plt>
   10c6c:	ldur	x9, [x29, #-8]
   10c70:	ldur	x1, [x29, #-24]
   10c74:	mov	w2, #0x104                 	// #260
   10c78:	str	w0, [sp, #4]
   10c7c:	mov	x0, x9
   10c80:	bl	b080 <argp_state_help@plt>
   10c84:	ldur	x0, [x29, #-24]
   10c88:	bl	afe0 <funlockfile@plt>
   10c8c:	b	10c90 <argp_error@@Base+0x1b8>
   10c90:	b	10c94 <argp_error@@Base+0x1bc>
   10c94:	ldr	x28, [sp, #336]
   10c98:	ldp	x29, x30, [sp, #320]
   10c9c:	add	sp, sp, #0x160
   10ca0:	ret

0000000000010ca4 <argp_failure@@Base>:
   10ca4:	stp	x29, x30, [sp, #-32]!
   10ca8:	str	x28, [sp, #16]
   10cac:	mov	x29, sp
   10cb0:	sub	sp, sp, #0x200
   10cb4:	str	q7, [sp, #160]
   10cb8:	str	q6, [sp, #144]
   10cbc:	str	q5, [sp, #128]
   10cc0:	str	q4, [sp, #112]
   10cc4:	str	q3, [sp, #96]
   10cc8:	str	q2, [sp, #80]
   10ccc:	str	q1, [sp, #64]
   10cd0:	str	q0, [sp, #48]
   10cd4:	str	x7, [sp, #200]
   10cd8:	str	x6, [sp, #192]
   10cdc:	str	x5, [sp, #184]
   10ce0:	str	x4, [sp, #176]
   10ce4:	stur	x0, [x29, #-8]
   10ce8:	stur	w1, [x29, #-12]
   10cec:	stur	w2, [x29, #-16]
   10cf0:	stur	x3, [x29, #-24]
   10cf4:	ldur	x8, [x29, #-8]
   10cf8:	cbz	x8, 10d10 <argp_failure@@Base+0x6c>
   10cfc:	b	10d00 <argp_failure@@Base+0x5c>
   10d00:	ldur	x8, [x29, #-8]
   10d04:	ldrb	w9, [x8, #28]
   10d08:	tbnz	w9, #1, 10f14 <argp_failure@@Base+0x270>
   10d0c:	b	10d10 <argp_failure@@Base+0x6c>
   10d10:	ldur	x8, [x29, #-8]
   10d14:	cbz	x8, 10d2c <argp_failure@@Base+0x88>
   10d18:	b	10d1c <argp_failure@@Base+0x78>
   10d1c:	ldur	x8, [x29, #-8]
   10d20:	ldr	x8, [x8, #72]
   10d24:	str	x8, [sp, #40]
   10d28:	b	10d40 <argp_failure@@Base+0x9c>
   10d2c:	adrp	x8, 5f000 <vasnprintf@@Base+0x1ce4c>
   10d30:	ldr	x8, [x8, #3808]
   10d34:	ldr	x8, [x8]
   10d38:	str	x8, [sp, #40]
   10d3c:	b	10d40 <argp_failure@@Base+0x9c>
   10d40:	ldr	x8, [sp, #40]
   10d44:	stur	x8, [x29, #-32]
   10d48:	ldur	x8, [x29, #-32]
   10d4c:	cbz	x8, 10f10 <argp_failure@@Base+0x26c>
   10d50:	b	10d54 <argp_failure@@Base+0xb0>
   10d54:	ldur	x0, [x29, #-32]
   10d58:	bl	afc0 <flockfile@plt>
   10d5c:	ldur	x8, [x29, #-8]
   10d60:	cbz	x8, 10d78 <argp_failure@@Base+0xd4>
   10d64:	b	10d68 <argp_failure@@Base+0xc4>
   10d68:	ldur	x8, [x29, #-8]
   10d6c:	ldr	x8, [x8, #64]
   10d70:	str	x8, [sp, #32]
   10d74:	b	10d8c <argp_failure@@Base+0xe8>
   10d78:	adrp	x8, 5f000 <vasnprintf@@Base+0x1ce4c>
   10d7c:	ldr	x8, [x8, #3928]
   10d80:	ldr	x8, [x8]
   10d84:	str	x8, [sp, #32]
   10d88:	b	10d8c <argp_failure@@Base+0xe8>
   10d8c:	ldr	x0, [sp, #32]
   10d90:	ldur	x1, [x29, #-32]
   10d94:	bl	b070 <fputs_unlocked@plt>
   10d98:	ldur	x8, [x29, #-24]
   10d9c:	cbz	x8, 10e20 <argp_failure@@Base+0x17c>
   10da0:	b	10da4 <argp_failure@@Base+0x100>
   10da4:	mov	w8, #0xffffff80            	// #-128
   10da8:	stur	w8, [x29, #-36]
   10dac:	mov	w8, #0xffffffe0            	// #-32
   10db0:	stur	w8, [x29, #-40]
   10db4:	add	x9, x29, #0x20
   10db8:	stur	x9, [x29, #-64]
   10dbc:	add	x9, sp, #0x30
   10dc0:	add	x9, x9, #0x80
   10dc4:	stur	x9, [x29, #-48]
   10dc8:	add	x9, sp, #0xb0
   10dcc:	add	x9, x9, #0x20
   10dd0:	stur	x9, [x29, #-56]
   10dd4:	ldur	x1, [x29, #-32]
   10dd8:	mov	w0, #0x3a                  	// #58
   10ddc:	bl	af80 <putc_unlocked@plt>
   10de0:	ldur	x1, [x29, #-32]
   10de4:	mov	w8, #0x20                  	// #32
   10de8:	str	w0, [sp, #28]
   10dec:	mov	w0, w8
   10df0:	bl	af80 <putc_unlocked@plt>
   10df4:	ldur	x9, [x29, #-32]
   10df8:	ldur	x1, [x29, #-24]
   10dfc:	ldur	q0, [x29, #-64]
   10e00:	ldur	q1, [x29, #-48]
   10e04:	stur	q1, [x29, #-80]
   10e08:	stur	q0, [x29, #-96]
   10e0c:	sub	x2, x29, #0x60
   10e10:	str	w0, [sp, #24]
   10e14:	mov	x0, x9
   10e18:	bl	aa10 <vfprintf@plt>
   10e1c:	b	10e20 <argp_failure@@Base+0x17c>
   10e20:	ldur	w8, [x29, #-16]
   10e24:	cbz	w8, 10ec0 <argp_failure@@Base+0x21c>
   10e28:	b	10e2c <argp_failure@@Base+0x188>
   10e2c:	mov	x8, xzr
   10e30:	str	x8, [sp, #208]
   10e34:	ldur	x1, [x29, #-32]
   10e38:	mov	w0, #0x3a                  	// #58
   10e3c:	bl	af80 <putc_unlocked@plt>
   10e40:	ldur	x1, [x29, #-32]
   10e44:	mov	w9, #0x20                  	// #32
   10e48:	str	w0, [sp, #20]
   10e4c:	mov	w0, w9
   10e50:	bl	af80 <putc_unlocked@plt>
   10e54:	ldur	w9, [x29, #-16]
   10e58:	mov	w10, #0xc8                  	// #200
   10e5c:	mov	w2, w10
   10e60:	add	x1, sp, #0xd8
   10e64:	str	w0, [sp, #16]
   10e68:	mov	w0, w9
   10e6c:	bl	b090 <strerror_r@plt>
   10e70:	str	x0, [sp, #208]
   10e74:	ldr	x8, [sp, #208]
   10e78:	cbnz	x8, 10eb0 <argp_failure@@Base+0x20c>
   10e7c:	b	10e80 <argp_failure@@Base+0x1dc>
   10e80:	ldur	w0, [x29, #-16]
   10e84:	bl	aa30 <strerror@plt>
   10e88:	str	x0, [sp, #208]
   10e8c:	cbnz	x0, 10eb0 <argp_failure@@Base+0x20c>
   10e90:	b	10e94 <argp_failure@@Base+0x1f0>
   10e94:	adrp	x0, 44000 <vasnprintf@@Base+0x1e4c>
   10e98:	add	x0, x0, #0xe15
   10e9c:	adrp	x1, 44000 <vasnprintf@@Base+0x1e4c>
   10ea0:	add	x1, x1, #0xe39
   10ea4:	bl	b000 <dgettext@plt>
   10ea8:	str	x0, [sp, #208]
   10eac:	b	10eb0 <argp_failure@@Base+0x20c>
   10eb0:	ldr	x0, [sp, #208]
   10eb4:	ldur	x1, [x29, #-32]
   10eb8:	bl	b070 <fputs_unlocked@plt>
   10ebc:	b	10ec0 <argp_failure@@Base+0x21c>
   10ec0:	ldur	x1, [x29, #-32]
   10ec4:	mov	w0, #0xa                   	// #10
   10ec8:	bl	af80 <putc_unlocked@plt>
   10ecc:	ldur	x8, [x29, #-32]
   10ed0:	str	w0, [sp, #12]
   10ed4:	mov	x0, x8
   10ed8:	bl	afe0 <funlockfile@plt>
   10edc:	ldur	w9, [x29, #-12]
   10ee0:	cbz	w9, 10f0c <argp_failure@@Base+0x268>
   10ee4:	b	10ee8 <argp_failure@@Base+0x244>
   10ee8:	ldur	x8, [x29, #-8]
   10eec:	cbz	x8, 10f04 <argp_failure@@Base+0x260>
   10ef0:	b	10ef4 <argp_failure@@Base+0x250>
   10ef4:	ldur	x8, [x29, #-8]
   10ef8:	ldrb	w9, [x8, #28]
   10efc:	tbnz	w9, #5, 10f0c <argp_failure@@Base+0x268>
   10f00:	b	10f04 <argp_failure@@Base+0x260>
   10f04:	ldur	w0, [x29, #-12]
   10f08:	bl	b060 <exit@plt>
   10f0c:	b	10f10 <argp_failure@@Base+0x26c>
   10f10:	b	10f14 <argp_failure@@Base+0x270>
   10f14:	add	sp, sp, #0x200
   10f18:	ldr	x28, [sp, #16]
   10f1c:	ldp	x29, x30, [sp], #32
   10f20:	ret
   10f24:	sub	sp, sp, #0xd0
   10f28:	stp	x29, x30, [sp, #192]
   10f2c:	add	x29, sp, #0xc0
   10f30:	adrp	x8, 44000 <vasnprintf@@Base+0x1e4c>
   10f34:	add	x8, x8, #0xec7
   10f38:	adrp	x1, 61000 <gl_rbtree_list_implementation@@Base+0x1468>
   10f3c:	add	x1, x1, #0x368
   10f40:	mov	x2, #0x28                  	// #40
   10f44:	adrp	x9, 44000 <vasnprintf@@Base+0x1e4c>
   10f48:	add	x9, x9, #0xe15
   10f4c:	adrp	x10, 45000 <vasnprintf@@Base+0x2e4c>
   10f50:	add	x10, x10, #0x8de
   10f54:	add	x10, x10, #0x90
   10f58:	sub	x11, x29, #0x38
   10f5c:	stur	x0, [x29, #-8]
   10f60:	mov	x0, x8
   10f64:	str	x1, [sp, #96]
   10f68:	str	x2, [sp, #88]
   10f6c:	str	x9, [sp, #80]
   10f70:	str	x10, [sp, #72]
   10f74:	str	x11, [sp, #64]
   10f78:	bl	a9f0 <getenv@plt>
   10f7c:	stur	x0, [x29, #-16]
   10f80:	ldr	x0, [sp, #64]
   10f84:	ldr	x1, [sp, #96]
   10f88:	ldr	x2, [sp, #88]
   10f8c:	bl	af30 <memcpy@plt>
   10f90:	ldur	x8, [x29, #-16]
   10f94:	cbz	x8, 113d4 <argp_failure@@Base+0x730>
   10f98:	ldur	x8, [x29, #-16]
   10f9c:	ldrb	w9, [x8]
   10fa0:	cbz	w9, 113c8 <argp_failure@@Base+0x724>
   10fa4:	bl	aed0 <__ctype_b_loc@plt>
   10fa8:	ldr	x8, [x0]
   10fac:	ldur	x9, [x29, #-16]
   10fb0:	ldrb	w10, [x9]
   10fb4:	ldrh	w10, [x8, w10, sxtw #1]
   10fb8:	and	w10, w10, #0x2000
   10fbc:	cbz	w10, 10fd0 <argp_failure@@Base+0x32c>
   10fc0:	ldur	x8, [x29, #-16]
   10fc4:	add	x8, x8, #0x1
   10fc8:	stur	x8, [x29, #-16]
   10fcc:	b	10fa4 <argp_failure@@Base+0x300>
   10fd0:	bl	aed0 <__ctype_b_loc@plt>
   10fd4:	ldr	x8, [x0]
   10fd8:	ldur	x9, [x29, #-16]
   10fdc:	ldrb	w10, [x9]
   10fe0:	ldrh	w10, [x8, w10, sxtw #1]
   10fe4:	and	w10, w10, #0x400
   10fe8:	cbz	w10, 11364 <argp_failure@@Base+0x6c0>
   10fec:	stur	wzr, [x29, #-76]
   10ff0:	stur	wzr, [x29, #-80]
   10ff4:	ldur	x8, [x29, #-16]
   10ff8:	stur	x8, [x29, #-88]
   10ffc:	bl	aed0 <__ctype_b_loc@plt>
   11000:	ldr	x8, [x0]
   11004:	ldur	x9, [x29, #-88]
   11008:	ldrb	w10, [x9]
   1100c:	ldrh	w10, [x8, w10, sxtw #1]
   11010:	and	w10, w10, #0x8
   11014:	mov	w11, #0x1                   	// #1
   11018:	str	w11, [sp, #60]
   1101c:	cbnz	w10, 1104c <argp_failure@@Base+0x3a8>
   11020:	ldur	x8, [x29, #-88]
   11024:	ldrb	w9, [x8]
   11028:	mov	w10, #0x1                   	// #1
   1102c:	cmp	w9, #0x2d
   11030:	str	w10, [sp, #60]
   11034:	b.eq	1104c <argp_failure@@Base+0x3a8>  // b.none
   11038:	ldur	x8, [x29, #-88]
   1103c:	ldrb	w9, [x8]
   11040:	cmp	w9, #0x5f
   11044:	cset	w9, eq  // eq = none
   11048:	str	w9, [sp, #60]
   1104c:	ldr	w8, [sp, #60]
   11050:	tbnz	w8, #0, 11058 <argp_failure@@Base+0x3b4>
   11054:	b	11068 <argp_failure@@Base+0x3c4>
   11058:	ldur	x8, [x29, #-88]
   1105c:	add	x8, x8, #0x1
   11060:	stur	x8, [x29, #-88]
   11064:	b	10ffc <argp_failure@@Base+0x358>
   11068:	ldur	x8, [x29, #-88]
   1106c:	ldur	x9, [x29, #-16]
   11070:	subs	x8, x8, x9
   11074:	stur	x8, [x29, #-64]
   11078:	bl	aed0 <__ctype_b_loc@plt>
   1107c:	ldr	x8, [x0]
   11080:	ldur	x9, [x29, #-88]
   11084:	ldrb	w10, [x9]
   11088:	ldrh	w10, [x8, w10, sxtw #1]
   1108c:	and	w10, w10, #0x2000
   11090:	cbz	w10, 110a4 <argp_failure@@Base+0x400>
   11094:	ldur	x8, [x29, #-88]
   11098:	add	x8, x8, #0x1
   1109c:	stur	x8, [x29, #-88]
   110a0:	b	11078 <argp_failure@@Base+0x3d4>
   110a4:	ldur	x8, [x29, #-88]
   110a8:	ldrb	w9, [x8]
   110ac:	cbz	w9, 110c0 <argp_failure@@Base+0x41c>
   110b0:	ldur	x8, [x29, #-88]
   110b4:	ldrb	w9, [x8]
   110b8:	cmp	w9, #0x2c
   110bc:	b.ne	110cc <argp_failure@@Base+0x428>  // b.any
   110c0:	mov	w8, #0x1                   	// #1
   110c4:	stur	w8, [x29, #-76]
   110c8:	b	11114 <argp_failure@@Base+0x470>
   110cc:	ldur	x8, [x29, #-88]
   110d0:	ldrb	w9, [x8]
   110d4:	cmp	w9, #0x3d
   110d8:	b.ne	11114 <argp_failure@@Base+0x470>  // b.any
   110dc:	ldur	x8, [x29, #-88]
   110e0:	add	x8, x8, #0x1
   110e4:	stur	x8, [x29, #-88]
   110e8:	bl	aed0 <__ctype_b_loc@plt>
   110ec:	ldr	x8, [x0]
   110f0:	ldur	x9, [x29, #-88]
   110f4:	ldrb	w10, [x9]
   110f8:	ldrh	w10, [x8, w10, sxtw #1]
   110fc:	and	w10, w10, #0x2000
   11100:	cbz	w10, 11114 <argp_failure@@Base+0x470>
   11104:	ldur	x8, [x29, #-88]
   11108:	add	x8, x8, #0x1
   1110c:	stur	x8, [x29, #-88]
   11110:	b	110e8 <argp_failure@@Base+0x444>
   11114:	ldur	w8, [x29, #-76]
   11118:	cbz	w8, 11178 <argp_failure@@Base+0x4d4>
   1111c:	ldur	x8, [x29, #-16]
   11120:	ldrb	w9, [x8]
   11124:	cmp	w9, #0x6e
   11128:	b.ne	1116c <argp_failure@@Base+0x4c8>  // b.any
   1112c:	ldur	x8, [x29, #-16]
   11130:	ldrb	w9, [x8, #1]
   11134:	cmp	w9, #0x6f
   11138:	b.ne	1116c <argp_failure@@Base+0x4c8>  // b.any
   1113c:	ldur	x8, [x29, #-16]
   11140:	ldrb	w9, [x8, #2]
   11144:	cmp	w9, #0x2d
   11148:	b.ne	1116c <argp_failure@@Base+0x4c8>  // b.any
   1114c:	stur	wzr, [x29, #-80]
   11150:	ldur	x8, [x29, #-16]
   11154:	add	x8, x8, #0x3
   11158:	stur	x8, [x29, #-16]
   1115c:	ldur	x8, [x29, #-64]
   11160:	subs	x8, x8, #0x3
   11164:	stur	x8, [x29, #-64]
   11168:	b	11174 <argp_failure@@Base+0x4d0>
   1116c:	mov	w8, #0x1                   	// #1
   11170:	stur	w8, [x29, #-80]
   11174:	b	111f8 <argp_failure@@Base+0x554>
   11178:	bl	aed0 <__ctype_b_loc@plt>
   1117c:	ldr	x8, [x0]
   11180:	ldur	x9, [x29, #-88]
   11184:	ldrb	w10, [x9]
   11188:	ldrh	w10, [x8, w10, sxtw #1]
   1118c:	and	w10, w10, #0x800
   11190:	cbz	w10, 111f8 <argp_failure@@Base+0x554>
   11194:	ldur	x0, [x29, #-88]
   11198:	bl	abf0 <atoi@plt>
   1119c:	stur	w0, [x29, #-80]
   111a0:	bl	aed0 <__ctype_b_loc@plt>
   111a4:	ldr	x8, [x0]
   111a8:	ldur	x9, [x29, #-88]
   111ac:	ldrb	w10, [x9]
   111b0:	ldrh	w10, [x8, w10, sxtw #1]
   111b4:	and	w10, w10, #0x800
   111b8:	cbz	w10, 111cc <argp_failure@@Base+0x528>
   111bc:	ldur	x8, [x29, #-88]
   111c0:	add	x8, x8, #0x1
   111c4:	stur	x8, [x29, #-88]
   111c8:	b	111a0 <argp_failure@@Base+0x4fc>
   111cc:	bl	aed0 <__ctype_b_loc@plt>
   111d0:	ldr	x8, [x0]
   111d4:	ldur	x9, [x29, #-88]
   111d8:	ldrb	w10, [x9]
   111dc:	ldrh	w10, [x8, w10, sxtw #1]
   111e0:	and	w10, w10, #0x2000
   111e4:	cbz	w10, 111f8 <argp_failure@@Base+0x554>
   111e8:	ldur	x8, [x29, #-88]
   111ec:	add	x8, x8, #0x1
   111f0:	stur	x8, [x29, #-88]
   111f4:	b	111cc <argp_failure@@Base+0x528>
   111f8:	adrp	x8, 45000 <vasnprintf@@Base+0x2e4c>
   111fc:	add	x8, x8, #0x8de
   11200:	stur	x8, [x29, #-72]
   11204:	ldur	x8, [x29, #-72]
   11208:	ldr	x9, [sp, #72]
   1120c:	cmp	x8, x9
   11210:	b.cs	112d4 <argp_failure@@Base+0x630>  // b.hs, b.nlast
   11214:	ldur	x0, [x29, #-72]
   11218:	bl	a8e0 <strlen@plt>
   1121c:	ldur	x8, [x29, #-64]
   11220:	cmp	x0, x8
   11224:	b.ne	112c4 <argp_failure@@Base+0x620>  // b.any
   11228:	ldur	x0, [x29, #-16]
   1122c:	ldur	x1, [x29, #-72]
   11230:	ldur	x2, [x29, #-64]
   11234:	bl	aac0 <strncmp@plt>
   11238:	cbnz	w0, 112c4 <argp_failure@@Base+0x620>
   1123c:	ldur	w8, [x29, #-76]
   11240:	cbz	w8, 112ac <argp_failure@@Base+0x608>
   11244:	ldur	x8, [x29, #-72]
   11248:	ldrb	w9, [x8, #14]
   1124c:	tbnz	w9, #0, 112ac <argp_failure@@Base+0x608>
   11250:	ldur	x0, [x29, #-8]
   11254:	ldur	x8, [x29, #-8]
   11258:	mov	x9, xzr
   1125c:	cmp	x8, #0x0
   11260:	ldr	x8, [sp, #80]
   11264:	csel	x9, x9, x8, eq  // eq = none
   11268:	str	x0, [sp, #48]
   1126c:	mov	x0, x9
   11270:	adrp	x1, 44000 <vasnprintf@@Base+0x1e4c>
   11274:	add	x1, x1, #0xed5
   11278:	bl	b000 <dgettext@plt>
   1127c:	ldur	x8, [x29, #-64]
   11280:	ldur	x5, [x29, #-16]
   11284:	ldr	x9, [sp, #48]
   11288:	str	x0, [sp, #40]
   1128c:	mov	x0, x9
   11290:	mov	w10, wzr
   11294:	mov	w1, w10
   11298:	mov	w2, w10
   1129c:	ldr	x3, [sp, #40]
   112a0:	mov	w4, w8
   112a4:	bl	b0a0 <argp_failure@plt>
   112a8:	b	112c0 <argp_failure@@Base+0x61c>
   112ac:	ldur	w8, [x29, #-80]
   112b0:	ldur	x9, [x29, #-72]
   112b4:	ldrb	w10, [x9, #15]
   112b8:	sub	x9, x29, #0x38
   112bc:	str	w8, [x9, w10, sxtw]
   112c0:	b	112d4 <argp_failure@@Base+0x630>
   112c4:	ldur	x8, [x29, #-72]
   112c8:	add	x8, x8, #0x10
   112cc:	stur	x8, [x29, #-72]
   112d0:	b	11204 <argp_failure@@Base+0x560>
   112d4:	ldur	x8, [x29, #-72]
   112d8:	ldr	x9, [sp, #72]
   112dc:	cmp	x8, x9
   112e0:	b.ne	1133c <argp_failure@@Base+0x698>  // b.any
   112e4:	ldur	x0, [x29, #-8]
   112e8:	ldur	x8, [x29, #-8]
   112ec:	mov	x9, xzr
   112f0:	cmp	x8, #0x0
   112f4:	ldr	x8, [sp, #80]
   112f8:	csel	x9, x9, x8, eq  // eq = none
   112fc:	str	x0, [sp, #32]
   11300:	mov	x0, x9
   11304:	adrp	x1, 44000 <vasnprintf@@Base+0x1e4c>
   11308:	add	x1, x1, #0xf04
   1130c:	bl	b000 <dgettext@plt>
   11310:	ldur	x8, [x29, #-64]
   11314:	ldur	x5, [x29, #-16]
   11318:	ldr	x9, [sp, #32]
   1131c:	str	x0, [sp, #24]
   11320:	mov	x0, x9
   11324:	mov	w10, wzr
   11328:	mov	w1, w10
   1132c:	mov	w2, w10
   11330:	ldr	x3, [sp, #24]
   11334:	mov	w4, w8
   11338:	bl	b0a0 <argp_failure@plt>
   1133c:	ldur	x8, [x29, #-88]
   11340:	stur	x8, [x29, #-16]
   11344:	ldur	x8, [x29, #-16]
   11348:	ldrb	w9, [x8]
   1134c:	cmp	w9, #0x2c
   11350:	b.ne	11360 <argp_failure@@Base+0x6bc>  // b.any
   11354:	ldur	x8, [x29, #-16]
   11358:	add	x8, x8, #0x1
   1135c:	stur	x8, [x29, #-16]
   11360:	b	113c4 <argp_failure@@Base+0x720>
   11364:	ldur	x8, [x29, #-16]
   11368:	ldrb	w9, [x8]
   1136c:	cbz	w9, 113c4 <argp_failure@@Base+0x720>
   11370:	ldur	x0, [x29, #-8]
   11374:	ldur	x8, [x29, #-8]
   11378:	mov	x9, xzr
   1137c:	cmp	x8, #0x0
   11380:	ldr	x8, [sp, #80]
   11384:	csel	x9, x9, x8, eq  // eq = none
   11388:	str	x0, [sp, #16]
   1138c:	mov	x0, x9
   11390:	adrp	x1, 44000 <vasnprintf@@Base+0x1e4c>
   11394:	add	x1, x1, #0xf2a
   11398:	bl	b000 <dgettext@plt>
   1139c:	ldur	x4, [x29, #-16]
   113a0:	ldr	x8, [sp, #16]
   113a4:	str	x0, [sp, #8]
   113a8:	mov	x0, x8
   113ac:	mov	w10, wzr
   113b0:	mov	w1, w10
   113b4:	mov	w2, w10
   113b8:	ldr	x3, [sp, #8]
   113bc:	bl	b0a0 <argp_failure@plt>
   113c0:	b	113c8 <argp_failure@@Base+0x724>
   113c4:	b	10f98 <argp_failure@@Base+0x2f4>
   113c8:	ldur	x0, [x29, #-8]
   113cc:	sub	x1, x29, #0x38
   113d0:	bl	120f8 <argp_failure@@Base+0x1454>
   113d4:	ldp	x29, x30, [sp, #192]
   113d8:	add	sp, sp, #0xd0
   113dc:	ret
   113e0:	sub	sp, sp, #0x50
   113e4:	stp	x29, x30, [sp, #64]
   113e8:	add	x29, sp, #0x40
   113ec:	stur	x0, [x29, #-8]
   113f0:	stur	x1, [x29, #-16]
   113f4:	ldur	x8, [x29, #-8]
   113f8:	ldr	x8, [x8, #32]
   113fc:	stur	x8, [x29, #-24]
   11400:	ldur	x0, [x29, #-8]
   11404:	ldur	x1, [x29, #-16]
   11408:	bl	1220c <argp_failure@@Base+0x1568>
   1140c:	str	x0, [sp, #32]
   11410:	ldur	x8, [x29, #-24]
   11414:	cbz	x8, 114d0 <argp_failure@@Base+0x82c>
   11418:	ldur	x8, [x29, #-24]
   1141c:	ldr	x8, [x8]
   11420:	cbz	x8, 114d0 <argp_failure@@Base+0x82c>
   11424:	ldur	x8, [x29, #-24]
   11428:	ldr	w9, [x8, #24]
   1142c:	cbnz	w9, 1143c <argp_failure@@Base+0x798>
   11430:	ldur	x8, [x29, #-24]
   11434:	ldr	x8, [x8, #16]
   11438:	cbz	x8, 11480 <argp_failure@@Base+0x7dc>
   1143c:	ldr	x0, [sp, #32]
   11440:	ldur	x8, [x29, #-24]
   11444:	ldr	w1, [x8, #24]
   11448:	ldur	x8, [x29, #-24]
   1144c:	ldr	x2, [x8, #16]
   11450:	ldur	x8, [x29, #-24]
   11454:	ldur	x9, [x29, #-8]
   11458:	ldr	x9, [x9, #32]
   1145c:	subs	x8, x8, x9
   11460:	mov	x9, #0x20                  	// #32
   11464:	sdiv	x8, x8, x9
   11468:	ldur	x4, [x29, #-16]
   1146c:	ldur	x5, [x29, #-8]
   11470:	mov	w3, w8
   11474:	bl	12538 <argp_failure@@Base+0x1894>
   11478:	str	x0, [sp, #16]
   1147c:	b	11488 <argp_failure@@Base+0x7e4>
   11480:	ldur	x8, [x29, #-16]
   11484:	str	x8, [sp, #16]
   11488:	ldr	x8, [sp, #16]
   1148c:	str	x8, [sp, #24]
   11490:	ldr	x0, [sp, #32]
   11494:	ldur	x8, [x29, #-24]
   11498:	ldr	x8, [x8]
   1149c:	ldr	x1, [sp, #24]
   114a0:	str	x0, [sp, #8]
   114a4:	mov	x0, x8
   114a8:	bl	113e0 <argp_failure@@Base+0x73c>
   114ac:	ldr	x8, [sp, #8]
   114b0:	str	x0, [sp]
   114b4:	mov	x0, x8
   114b8:	ldr	x1, [sp]
   114bc:	bl	1260c <argp_failure@@Base+0x1968>
   114c0:	ldur	x8, [x29, #-24]
   114c4:	add	x8, x8, #0x20
   114c8:	stur	x8, [x29, #-24]
   114cc:	b	11418 <argp_failure@@Base+0x774>
   114d0:	ldr	x0, [sp, #32]
   114d4:	ldp	x29, x30, [sp, #64]
   114d8:	add	sp, sp, #0x50
   114dc:	ret
   114e0:	sub	sp, sp, #0x30
   114e4:	stp	x29, x30, [sp, #32]
   114e8:	add	x29, sp, #0x20
   114ec:	stur	x0, [x29, #-8]
   114f0:	str	x1, [sp, #16]
   114f4:	str	w2, [sp, #12]
   114f8:	ldur	x0, [x29, #-8]
   114fc:	ldr	x1, [sp, #16]
   11500:	bl	12a10 <argp_failure@@Base+0x1d6c>
   11504:	str	x0, [sp]
   11508:	ldr	x8, [sp]
   1150c:	cbz	x8, 1151c <argp_failure@@Base+0x878>
   11510:	ldr	w8, [sp, #12]
   11514:	ldr	x9, [sp]
   11518:	str	w8, [x9, #24]
   1151c:	ldp	x29, x30, [sp, #32]
   11520:	add	sp, sp, #0x30
   11524:	ret
   11528:	sub	sp, sp, #0x30
   1152c:	stp	x29, x30, [sp, #32]
   11530:	add	x29, sp, #0x20
   11534:	stur	x0, [x29, #-8]
   11538:	ldur	x8, [x29, #-8]
   1153c:	ldr	w9, [x8, #8]
   11540:	cmp	w9, #0x0
   11544:	cset	w9, ls  // ls = plast
   11548:	tbnz	w9, #0, 115bc <argp_failure@@Base+0x918>
   1154c:	stur	wzr, [x29, #-12]
   11550:	ldur	x8, [x29, #-8]
   11554:	ldr	x8, [x8]
   11558:	str	x8, [sp, #8]
   1155c:	ldur	w8, [x29, #-12]
   11560:	ldur	x9, [x29, #-8]
   11564:	ldr	w10, [x9, #8]
   11568:	cmp	w8, w10
   1156c:	b.cs	11598 <argp_failure@@Base+0x8f4>  // b.hs, b.nlast
   11570:	ldur	w8, [x29, #-12]
   11574:	ldr	x9, [sp, #8]
   11578:	str	w8, [x9, #48]
   1157c:	ldur	w8, [x29, #-12]
   11580:	add	w8, w8, #0x1
   11584:	stur	w8, [x29, #-12]
   11588:	ldr	x9, [sp, #8]
   1158c:	add	x9, x9, #0x38
   11590:	str	x9, [sp, #8]
   11594:	b	1155c <argp_failure@@Base+0x8b8>
   11598:	ldur	x8, [x29, #-8]
   1159c:	ldr	x0, [x8]
   115a0:	ldur	x8, [x29, #-8]
   115a4:	ldr	w9, [x8, #8]
   115a8:	mov	w1, w9
   115ac:	mov	x2, #0x38                  	// #56
   115b0:	adrp	x3, 12000 <argp_failure@@Base+0x135c>
   115b4:	add	x3, x3, #0xaf8
   115b8:	bl	b0b0 <qsort@plt>
   115bc:	ldp	x29, x30, [sp, #32]
   115c0:	add	sp, sp, #0x30
   115c4:	ret
   115c8:	sub	sp, sp, #0x30
   115cc:	stp	x29, x30, [sp, #32]
   115d0:	add	x29, sp, #0x20
   115d4:	stur	x0, [x29, #-8]
   115d8:	str	xzr, [sp, #16]
   115dc:	ldur	x8, [x29, #-8]
   115e0:	ldr	x8, [x8, #32]
   115e4:	str	x8, [sp, #8]
   115e8:	ldur	x8, [x29, #-8]
   115ec:	ldr	x8, [x8, #16]
   115f0:	cbz	x8, 11614 <argp_failure@@Base+0x970>
   115f4:	ldur	x8, [x29, #-8]
   115f8:	ldr	x0, [x8, #16]
   115fc:	mov	w1, #0xa                   	// #10
   11600:	bl	aa80 <strchr@plt>
   11604:	cbz	x0, 11614 <argp_failure@@Base+0x970>
   11608:	ldr	x8, [sp, #16]
   1160c:	add	x8, x8, #0x1
   11610:	str	x8, [sp, #16]
   11614:	ldr	x8, [sp, #8]
   11618:	cbz	x8, 1164c <argp_failure@@Base+0x9a8>
   1161c:	ldr	x8, [sp, #8]
   11620:	ldr	x8, [x8]
   11624:	cbz	x8, 1164c <argp_failure@@Base+0x9a8>
   11628:	ldr	x8, [sp, #8]
   1162c:	add	x9, x8, #0x20
   11630:	str	x9, [sp, #8]
   11634:	ldr	x0, [x8]
   11638:	bl	115c8 <argp_failure@@Base+0x924>
   1163c:	ldr	x8, [sp, #16]
   11640:	add	x8, x8, x0
   11644:	str	x8, [sp, #16]
   11648:	b	1161c <argp_failure@@Base+0x978>
   1164c:	ldr	x0, [sp, #16]
   11650:	ldp	x29, x30, [sp, #32]
   11654:	add	sp, sp, #0x30
   11658:	ret
   1165c:	stp	x29, x30, [sp, #-16]!
   11660:	mov	x29, sp
   11664:	sub	sp, sp, #0x70
   11668:	stur	x0, [x29, #-64]
   1166c:	stur	x1, [x29, #-72]
   11670:	ldur	x8, [x29, #-64]
   11674:	ldr	w9, [x8, #8]
   11678:	cmp	w9, #0x0
   1167c:	cset	w9, ls  // ls = plast
   11680:	tbnz	w9, #0, 118f4 <argp_failure@@Base+0xc50>
   11684:	ldur	x8, [x29, #-64]
   11688:	ldr	x0, [x8, #16]
   1168c:	bl	a8e0 <strlen@plt>
   11690:	mov	x8, #0x1                   	// #1
   11694:	add	x9, x0, #0x1
   11698:	mul	x8, x9, x8
   1169c:	add	x8, x8, #0xf
   116a0:	and	x8, x8, #0xfffffffffffffff0
   116a4:	mov	x9, sp
   116a8:	subs	x8, x9, x8
   116ac:	mov	sp, x8
   116b0:	stur	x8, [x29, #-96]
   116b4:	ldur	x8, [x29, #-96]
   116b8:	stur	x8, [x29, #-104]
   116bc:	ldur	x8, [x29, #-64]
   116c0:	ldr	x8, [x8]
   116c4:	stur	x8, [x29, #-88]
   116c8:	ldur	x8, [x29, #-64]
   116cc:	ldr	w10, [x8, #8]
   116d0:	stur	w10, [x29, #-76]
   116d4:	ldur	w8, [x29, #-76]
   116d8:	cmp	w8, #0x0
   116dc:	cset	w8, ls  // ls = plast
   116e0:	tbnz	w8, #0, 11720 <argp_failure@@Base+0xa7c>
   116e4:	ldur	x0, [x29, #-88]
   116e8:	ldur	x8, [x29, #-88]
   116ec:	ldr	x8, [x8, #40]
   116f0:	ldr	x2, [x8, #48]
   116f4:	adrp	x1, 13000 <argp_failure@@Base+0x235c>
   116f8:	add	x1, x1, #0x2e4
   116fc:	sub	x3, x29, #0x68
   11700:	bl	1316c <argp_failure@@Base+0x24c8>
   11704:	ldur	x8, [x29, #-88]
   11708:	add	x8, x8, #0x38
   1170c:	stur	x8, [x29, #-88]
   11710:	ldur	w9, [x29, #-76]
   11714:	subs	w9, w9, #0x1
   11718:	stur	w9, [x29, #-76]
   1171c:	b	116d4 <argp_failure@@Base+0xa30>
   11720:	ldur	x8, [x29, #-104]
   11724:	ldur	x9, [x29, #-96]
   11728:	cmp	x8, x9
   1172c:	b.ls	11758 <argp_failure@@Base+0xab4>  // b.plast
   11730:	ldur	x8, [x29, #-104]
   11734:	add	x9, x8, #0x1
   11738:	stur	x9, [x29, #-104]
   1173c:	mov	w10, #0x0                   	// #0
   11740:	strb	w10, [x8]
   11744:	ldur	x0, [x29, #-72]
   11748:	ldur	x2, [x29, #-96]
   1174c:	adrp	x1, 45000 <vasnprintf@@Base+0x2e4c>
   11750:	add	x1, x1, #0x4b
   11754:	bl	b010 <argp_fmtstream_printf@plt>
   11758:	ldur	x8, [x29, #-64]
   1175c:	ldr	x8, [x8]
   11760:	stur	x8, [x29, #-88]
   11764:	ldur	x8, [x29, #-64]
   11768:	ldr	w9, [x8, #8]
   1176c:	stur	w9, [x29, #-76]
   11770:	ldur	w8, [x29, #-76]
   11774:	cmp	w8, #0x0
   11778:	cset	w8, ls  // ls = plast
   1177c:	tbnz	w8, #0, 117bc <argp_failure@@Base+0xb18>
   11780:	ldur	x0, [x29, #-88]
   11784:	ldur	x8, [x29, #-88]
   11788:	ldr	x8, [x8, #40]
   1178c:	ldr	x2, [x8, #48]
   11790:	ldur	x3, [x29, #-72]
   11794:	adrp	x1, 13000 <argp_failure@@Base+0x235c>
   11798:	add	x1, x1, #0x360
   1179c:	bl	1316c <argp_failure@@Base+0x24c8>
   117a0:	ldur	x8, [x29, #-88]
   117a4:	add	x8, x8, #0x38
   117a8:	stur	x8, [x29, #-88]
   117ac:	ldur	w9, [x29, #-76]
   117b0:	subs	w9, w9, #0x1
   117b4:	stur	w9, [x29, #-76]
   117b8:	b	11770 <argp_failure@@Base+0xacc>
   117bc:	ldur	x8, [x29, #-64]
   117c0:	ldr	x8, [x8]
   117c4:	stur	x8, [x29, #-88]
   117c8:	ldur	x8, [x29, #-64]
   117cc:	ldr	w9, [x8, #8]
   117d0:	stur	w9, [x29, #-76]
   117d4:	ldur	w8, [x29, #-76]
   117d8:	cmp	w8, #0x0
   117dc:	cset	w8, ls  // ls = plast
   117e0:	tbnz	w8, #0, 118f4 <argp_failure@@Base+0xc50>
   117e4:	ldur	x8, [x29, #-88]
   117e8:	ldur	x9, [x29, #-88]
   117ec:	ldr	x9, [x9, #40]
   117f0:	ldr	x9, [x9, #48]
   117f4:	ldur	x10, [x29, #-72]
   117f8:	stur	x8, [x29, #-8]
   117fc:	adrp	x8, 13000 <argp_failure@@Base+0x235c>
   11800:	add	x8, x8, #0x45c
   11804:	stur	x8, [x29, #-16]
   11808:	stur	x9, [x29, #-24]
   1180c:	stur	x10, [x29, #-32]
   11810:	stur	wzr, [x29, #-40]
   11814:	ldur	x8, [x29, #-8]
   11818:	ldr	x8, [x8]
   1181c:	stur	x8, [x29, #-56]
   11820:	ldur	x8, [x29, #-56]
   11824:	stur	x8, [x29, #-48]
   11828:	ldur	x8, [x29, #-8]
   1182c:	ldr	w11, [x8, #8]
   11830:	stur	w11, [x29, #-36]
   11834:	ldur	w8, [x29, #-36]
   11838:	cmp	w8, #0x0
   1183c:	cset	w8, ls  // ls = plast
   11840:	mov	w9, #0x0                   	// #0
   11844:	stur	w9, [x29, #-108]
   11848:	tbnz	w8, #0, 11860 <argp_failure@@Base+0xbbc>
   1184c:	ldur	w8, [x29, #-40]
   11850:	cmp	w8, #0x0
   11854:	cset	w8, ne  // ne = any
   11858:	eor	w8, w8, #0x1
   1185c:	stur	w8, [x29, #-108]
   11860:	ldur	w8, [x29, #-108]
   11864:	tbnz	w8, #0, 1186c <argp_failure@@Base+0xbc8>
   11868:	b	118d8 <argp_failure@@Base+0xc34>
   1186c:	ldur	x8, [x29, #-48]
   11870:	ldr	x8, [x8]
   11874:	cbz	x8, 118bc <argp_failure@@Base+0xc18>
   11878:	ldur	x8, [x29, #-48]
   1187c:	ldr	w9, [x8, #24]
   11880:	and	w9, w9, #0x4
   11884:	cbnz	w9, 11890 <argp_failure@@Base+0xbec>
   11888:	ldur	x8, [x29, #-48]
   1188c:	stur	x8, [x29, #-56]
   11890:	ldur	x8, [x29, #-48]
   11894:	ldr	w9, [x8, #24]
   11898:	and	w9, w9, #0x2
   1189c:	cbnz	w9, 118bc <argp_failure@@Base+0xc18>
   118a0:	ldur	x8, [x29, #-16]
   118a4:	ldur	x0, [x29, #-48]
   118a8:	ldur	x1, [x29, #-56]
   118ac:	ldur	x2, [x29, #-24]
   118b0:	ldur	x3, [x29, #-32]
   118b4:	blr	x8
   118b8:	stur	w0, [x29, #-40]
   118bc:	ldur	x8, [x29, #-48]
   118c0:	add	x8, x8, #0x30
   118c4:	stur	x8, [x29, #-48]
   118c8:	ldur	w9, [x29, #-36]
   118cc:	subs	w9, w9, #0x1
   118d0:	stur	w9, [x29, #-36]
   118d4:	b	11834 <argp_failure@@Base+0xb90>
   118d8:	ldur	x8, [x29, #-88]
   118dc:	add	x8, x8, #0x38
   118e0:	stur	x8, [x29, #-88]
   118e4:	ldur	w9, [x29, #-76]
   118e8:	subs	w9, w9, #0x1
   118ec:	stur	w9, [x29, #-76]
   118f0:	b	117d4 <argp_failure@@Base+0xb30>
   118f4:	mov	sp, x29
   118f8:	ldp	x29, x30, [sp], #16
   118fc:	ret
   11900:	sub	sp, sp, #0x80
   11904:	stp	x29, x30, [sp, #112]
   11908:	add	x29, sp, #0x70
   1190c:	stur	x0, [x29, #-8]
   11910:	stur	x1, [x29, #-16]
   11914:	stur	x2, [x29, #-24]
   11918:	stur	w3, [x29, #-28]
   1191c:	stur	x4, [x29, #-40]
   11920:	ldur	x8, [x29, #-24]
   11924:	ldr	x8, [x8]
   11928:	stur	x8, [x29, #-48]
   1192c:	stur	wzr, [x29, #-52]
   11930:	ldur	x8, [x29, #-8]
   11934:	ldr	x8, [x8, #32]
   11938:	str	x8, [sp, #48]
   1193c:	ldur	x8, [x29, #-8]
   11940:	ldr	x8, [x8, #16]
   11944:	cbz	x8, 11964 <argp_failure@@Base+0xcc0>
   11948:	ldur	x8, [x29, #-8]
   1194c:	ldr	x0, [x8, #48]
   11950:	ldur	x8, [x29, #-8]
   11954:	ldr	x1, [x8, #16]
   11958:	bl	b000 <dgettext@plt>
   1195c:	str	x0, [sp]
   11960:	b	1196c <argp_failure@@Base+0xcc8>
   11964:	mov	x8, xzr
   11968:	str	x8, [sp]
   1196c:	ldr	x8, [sp]
   11970:	str	x8, [sp, #40]
   11974:	ldr	x0, [sp, #40]
   11978:	ldur	x2, [x29, #-8]
   1197c:	ldur	x3, [x29, #-16]
   11980:	mov	w1, #0x6                   	// #6
   11984:	movk	w1, #0x200, lsl #16
   11988:	bl	135b0 <argp_failure@@Base+0x290c>
   1198c:	str	x0, [sp, #32]
   11990:	mov	x8, xzr
   11994:	str	x8, [sp, #24]
   11998:	ldr	x8, [sp, #32]
   1199c:	cbz	x8, 11a50 <argp_failure@@Base+0xdac>
   119a0:	ldr	x8, [sp, #32]
   119a4:	str	x8, [sp, #16]
   119a8:	ldr	x0, [sp, #16]
   119ac:	mov	w1, #0xa                   	// #10
   119b0:	bl	b0c0 <strchrnul@plt>
   119b4:	str	x0, [sp, #24]
   119b8:	ldr	x8, [sp, #24]
   119bc:	ldrb	w9, [x8]
   119c0:	cbz	w9, 11a20 <argp_failure@@Base+0xd7c>
   119c4:	mov	w8, #0x1                   	// #1
   119c8:	stur	w8, [x29, #-52]
   119cc:	str	wzr, [sp, #12]
   119d0:	ldr	w8, [sp, #12]
   119d4:	ldur	x9, [x29, #-48]
   119d8:	ldrb	w10, [x9]
   119dc:	cmp	w8, w10
   119e0:	b.ge	11a10 <argp_failure@@Base+0xd6c>  // b.tcont
   119e4:	ldr	x8, [sp, #24]
   119e8:	add	x8, x8, #0x1
   119ec:	str	x8, [sp, #16]
   119f0:	ldr	x0, [sp, #16]
   119f4:	mov	w1, #0xa                   	// #10
   119f8:	bl	b0c0 <strchrnul@plt>
   119fc:	str	x0, [sp, #24]
   11a00:	ldr	w8, [sp, #12]
   11a04:	add	w8, w8, #0x1
   11a08:	str	w8, [sp, #12]
   11a0c:	b	119d0 <argp_failure@@Base+0xd2c>
   11a10:	ldur	x8, [x29, #-24]
   11a14:	ldr	x9, [x8]
   11a18:	add	x9, x9, #0x1
   11a1c:	str	x9, [x8]
   11a20:	ldur	x0, [x29, #-40]
   11a24:	ldr	x8, [sp, #24]
   11a28:	add	x8, x8, #0x1
   11a2c:	ldr	x9, [sp, #16]
   11a30:	subs	x1, x8, x9
   11a34:	bl	13554 <argp_failure@@Base+0x28b0>
   11a38:	ldur	x0, [x29, #-40]
   11a3c:	ldr	x1, [sp, #16]
   11a40:	ldr	x8, [sp, #24]
   11a44:	ldr	x9, [sp, #16]
   11a48:	subs	x2, x8, x9
   11a4c:	bl	afb0 <argp_fmtstream_write@plt>
   11a50:	ldr	x8, [sp, #32]
   11a54:	cbz	x8, 11a70 <argp_failure@@Base+0xdcc>
   11a58:	ldr	x8, [sp, #32]
   11a5c:	ldr	x9, [sp, #40]
   11a60:	cmp	x8, x9
   11a64:	b.eq	11a70 <argp_failure@@Base+0xdcc>  // b.none
   11a68:	ldr	x0, [sp, #32]
   11a6c:	bl	a930 <free@plt>
   11a70:	ldr	x8, [sp, #48]
   11a74:	cbz	x8, 11ac0 <argp_failure@@Base+0xe1c>
   11a78:	ldr	x8, [sp, #48]
   11a7c:	ldr	x8, [x8]
   11a80:	cbz	x8, 11ac0 <argp_failure@@Base+0xe1c>
   11a84:	ldr	x8, [sp, #48]
   11a88:	add	x9, x8, #0x20
   11a8c:	str	x9, [sp, #48]
   11a90:	ldr	x0, [x8]
   11a94:	ldur	x1, [x29, #-16]
   11a98:	ldur	x2, [x29, #-24]
   11a9c:	ldur	w3, [x29, #-28]
   11aa0:	ldur	x4, [x29, #-40]
   11aa4:	bl	11900 <argp_failure@@Base+0xc5c>
   11aa8:	cmp	w0, #0x0
   11aac:	cset	w10, ne  // ne = any
   11ab0:	eor	w10, w10, #0x1
   11ab4:	and	w10, w10, #0x1
   11ab8:	stur	w10, [x29, #-28]
   11abc:	b	11a78 <argp_failure@@Base+0xdd4>
   11ac0:	ldur	w8, [x29, #-28]
   11ac4:	cbz	w8, 11b14 <argp_failure@@Base+0xe70>
   11ac8:	ldur	w8, [x29, #-52]
   11acc:	cbz	w8, 11b14 <argp_failure@@Base+0xe70>
   11ad0:	ldr	x8, [sp, #24]
   11ad4:	ldrb	w9, [x8]
   11ad8:	cbz	w9, 11af4 <argp_failure@@Base+0xe50>
   11adc:	ldur	x8, [x29, #-48]
   11ae0:	ldrb	w9, [x8]
   11ae4:	add	w9, w9, #0x1
   11ae8:	strb	w9, [x8]
   11aec:	stur	wzr, [x29, #-28]
   11af0:	b	11b14 <argp_failure@@Base+0xe70>
   11af4:	ldur	x8, [x29, #-48]
   11af8:	ldrb	w9, [x8]
   11afc:	cmp	w9, #0x0
   11b00:	cset	w9, le
   11b04:	tbnz	w9, #0, 11b14 <argp_failure@@Base+0xe70>
   11b08:	ldur	x8, [x29, #-48]
   11b0c:	mov	w9, #0x0                   	// #0
   11b10:	strb	w9, [x8]
   11b14:	ldur	w8, [x29, #-28]
   11b18:	cmp	w8, #0x0
   11b1c:	cset	w8, ne  // ne = any
   11b20:	eor	w8, w8, #0x1
   11b24:	and	w0, w8, #0x1
   11b28:	ldp	x29, x30, [sp, #112]
   11b2c:	add	sp, sp, #0x80
   11b30:	ret
   11b34:	sub	sp, sp, #0xc0
   11b38:	stp	x29, x30, [sp, #176]
   11b3c:	add	x29, sp, #0xb0
   11b40:	mov	x8, xzr
   11b44:	stur	x0, [x29, #-8]
   11b48:	stur	x1, [x29, #-16]
   11b4c:	stur	w2, [x29, #-20]
   11b50:	stur	w3, [x29, #-24]
   11b54:	stur	w4, [x29, #-28]
   11b58:	stur	x5, [x29, #-40]
   11b5c:	stur	x8, [x29, #-64]
   11b60:	stur	wzr, [x29, #-68]
   11b64:	stur	xzr, [x29, #-80]
   11b68:	ldur	x8, [x29, #-8]
   11b6c:	ldr	x8, [x8, #24]
   11b70:	cbz	x8, 11b90 <argp_failure@@Base+0xeec>
   11b74:	ldur	x8, [x29, #-8]
   11b78:	ldr	x0, [x8, #48]
   11b7c:	ldur	x8, [x29, #-8]
   11b80:	ldr	x1, [x8, #24]
   11b84:	bl	b000 <dgettext@plt>
   11b88:	str	x0, [sp, #64]
   11b8c:	b	11b98 <argp_failure@@Base+0xef4>
   11b90:	mov	x8, xzr
   11b94:	str	x8, [sp, #64]
   11b98:	ldr	x8, [sp, #64]
   11b9c:	str	x8, [sp, #88]
   11ba0:	ldur	x8, [x29, #-8]
   11ba4:	ldr	x8, [x8, #32]
   11ba8:	str	x8, [sp, #80]
   11bac:	ldr	x8, [sp, #88]
   11bb0:	cbz	x8, 11c40 <argp_failure@@Base+0xf9c>
   11bb4:	ldr	x0, [sp, #88]
   11bb8:	mov	w1, #0xb                   	// #11
   11bbc:	bl	aa80 <strchr@plt>
   11bc0:	str	x0, [sp, #72]
   11bc4:	ldur	w8, [x29, #-20]
   11bc8:	cbz	w8, 11bf8 <argp_failure@@Base+0xf54>
   11bcc:	ldr	x8, [sp, #72]
   11bd0:	cbz	x8, 11be4 <argp_failure@@Base+0xf40>
   11bd4:	ldr	x8, [sp, #72]
   11bd8:	add	x8, x8, #0x1
   11bdc:	str	x8, [sp, #56]
   11be0:	b	11bec <argp_failure@@Base+0xf48>
   11be4:	mov	x8, xzr
   11be8:	str	x8, [sp, #56]
   11bec:	ldr	x8, [sp, #56]
   11bf0:	str	x8, [sp, #48]
   11bf4:	b	11c00 <argp_failure@@Base+0xf5c>
   11bf8:	ldr	x8, [sp, #88]
   11bfc:	str	x8, [sp, #48]
   11c00:	ldr	x8, [sp, #48]
   11c04:	stur	x8, [x29, #-56]
   11c08:	ldur	w9, [x29, #-20]
   11c0c:	cbnz	w9, 11c2c <argp_failure@@Base+0xf88>
   11c10:	ldr	x8, [sp, #72]
   11c14:	cbz	x8, 11c2c <argp_failure@@Base+0xf88>
   11c18:	ldr	x8, [sp, #72]
   11c1c:	ldr	x9, [sp, #88]
   11c20:	subs	x8, x8, x9
   11c24:	str	x8, [sp, #40]
   11c28:	b	11c34 <argp_failure@@Base+0xf90>
   11c2c:	mov	x8, xzr
   11c30:	str	x8, [sp, #40]
   11c34:	ldr	x8, [sp, #40]
   11c38:	stur	x8, [x29, #-80]
   11c3c:	b	11c48 <argp_failure@@Base+0xfa4>
   11c40:	mov	x8, xzr
   11c44:	stur	x8, [x29, #-56]
   11c48:	ldur	x8, [x29, #-8]
   11c4c:	ldr	x8, [x8, #40]
   11c50:	cbz	x8, 11cb4 <argp_failure@@Base+0x1010>
   11c54:	ldur	x8, [x29, #-80]
   11c58:	cbz	x8, 11c6c <argp_failure@@Base+0xfc8>
   11c5c:	ldur	x0, [x29, #-56]
   11c60:	ldur	x1, [x29, #-80]
   11c64:	bl	b0d0 <strndup@plt>
   11c68:	stur	x0, [x29, #-56]
   11c6c:	ldur	x0, [x29, #-8]
   11c70:	ldur	x1, [x29, #-16]
   11c74:	bl	b0e0 <_argp_input@plt>
   11c78:	stur	x0, [x29, #-64]
   11c7c:	ldur	x8, [x29, #-8]
   11c80:	ldr	x8, [x8, #40]
   11c84:	ldur	w9, [x29, #-20]
   11c88:	mov	w10, #0x1                   	// #1
   11c8c:	movk	w10, #0x200, lsl #16
   11c90:	mov	w11, #0x2                   	// #2
   11c94:	movk	w11, #0x200, lsl #16
   11c98:	cmp	w9, #0x0
   11c9c:	csel	w0, w11, w10, ne  // ne = any
   11ca0:	ldur	x1, [x29, #-56]
   11ca4:	ldur	x2, [x29, #-64]
   11ca8:	blr	x8
   11cac:	stur	x0, [x29, #-48]
   11cb0:	b	11cbc <argp_failure@@Base+0x1018>
   11cb4:	ldur	x8, [x29, #-56]
   11cb8:	stur	x8, [x29, #-48]
   11cbc:	ldur	x8, [x29, #-48]
   11cc0:	cbz	x8, 11d3c <argp_failure@@Base+0x1098>
   11cc4:	ldur	w8, [x29, #-24]
   11cc8:	cbz	w8, 11cd8 <argp_failure@@Base+0x1034>
   11ccc:	ldur	x0, [x29, #-40]
   11cd0:	mov	w1, #0xa                   	// #10
   11cd4:	bl	b040 <argp_fmtstream_putc@plt>
   11cd8:	ldur	x8, [x29, #-48]
   11cdc:	ldur	x9, [x29, #-56]
   11ce0:	cmp	x8, x9
   11ce4:	b.ne	11d04 <argp_failure@@Base+0x1060>  // b.any
   11ce8:	ldur	x8, [x29, #-80]
   11cec:	cbz	x8, 11d04 <argp_failure@@Base+0x1060>
   11cf0:	ldur	x0, [x29, #-40]
   11cf4:	ldur	x1, [x29, #-56]
   11cf8:	ldur	x2, [x29, #-80]
   11cfc:	bl	afb0 <argp_fmtstream_write@plt>
   11d00:	b	11d10 <argp_failure@@Base+0x106c>
   11d04:	ldur	x0, [x29, #-40]
   11d08:	ldur	x1, [x29, #-48]
   11d0c:	bl	b030 <argp_fmtstream_puts@plt>
   11d10:	ldur	x0, [x29, #-40]
   11d14:	bl	b0f0 <argp_fmtstream_point@plt>
   11d18:	ldur	x8, [x29, #-40]
   11d1c:	ldr	x8, [x8, #8]
   11d20:	cmp	x0, x8
   11d24:	b.ls	11d34 <argp_failure@@Base+0x1090>  // b.plast
   11d28:	ldur	x0, [x29, #-40]
   11d2c:	mov	w1, #0xa                   	// #10
   11d30:	bl	b040 <argp_fmtstream_putc@plt>
   11d34:	mov	w8, #0x1                   	// #1
   11d38:	stur	w8, [x29, #-68]
   11d3c:	ldur	x8, [x29, #-48]
   11d40:	cbz	x8, 11d5c <argp_failure@@Base+0x10b8>
   11d44:	ldur	x8, [x29, #-48]
   11d48:	ldur	x9, [x29, #-56]
   11d4c:	cmp	x8, x9
   11d50:	b.eq	11d5c <argp_failure@@Base+0x10b8>  // b.none
   11d54:	ldur	x0, [x29, #-48]
   11d58:	bl	a930 <free@plt>
   11d5c:	ldur	x8, [x29, #-56]
   11d60:	cbz	x8, 11d80 <argp_failure@@Base+0x10dc>
   11d64:	ldur	x8, [x29, #-80]
   11d68:	cbz	x8, 11d80 <argp_failure@@Base+0x10dc>
   11d6c:	ldur	x8, [x29, #-8]
   11d70:	ldr	x8, [x8, #40]
   11d74:	cbz	x8, 11d80 <argp_failure@@Base+0x10dc>
   11d78:	ldur	x0, [x29, #-56]
   11d7c:	bl	a930 <free@plt>
   11d80:	ldur	w8, [x29, #-20]
   11d84:	cbz	w8, 11e20 <argp_failure@@Base+0x117c>
   11d88:	ldur	x8, [x29, #-8]
   11d8c:	ldr	x8, [x8, #40]
   11d90:	cbz	x8, 11e20 <argp_failure@@Base+0x117c>
   11d94:	ldur	x8, [x29, #-8]
   11d98:	ldr	x8, [x8, #40]
   11d9c:	ldur	x2, [x29, #-64]
   11da0:	mov	w0, #0x4                   	// #4
   11da4:	movk	w0, #0x200, lsl #16
   11da8:	mov	x9, xzr
   11dac:	mov	x1, x9
   11db0:	blr	x8
   11db4:	stur	x0, [x29, #-48]
   11db8:	ldur	x8, [x29, #-48]
   11dbc:	cbz	x8, 11e20 <argp_failure@@Base+0x117c>
   11dc0:	ldur	w8, [x29, #-68]
   11dc4:	cbnz	w8, 11dd0 <argp_failure@@Base+0x112c>
   11dc8:	ldur	w8, [x29, #-24]
   11dcc:	cbz	w8, 11ddc <argp_failure@@Base+0x1138>
   11dd0:	ldur	x0, [x29, #-40]
   11dd4:	mov	w1, #0xa                   	// #10
   11dd8:	bl	b040 <argp_fmtstream_putc@plt>
   11ddc:	ldur	x0, [x29, #-40]
   11de0:	ldur	x1, [x29, #-48]
   11de4:	bl	b030 <argp_fmtstream_puts@plt>
   11de8:	ldur	x8, [x29, #-48]
   11dec:	mov	x0, x8
   11df0:	bl	a930 <free@plt>
   11df4:	ldur	x0, [x29, #-40]
   11df8:	bl	b0f0 <argp_fmtstream_point@plt>
   11dfc:	ldur	x8, [x29, #-40]
   11e00:	ldr	x8, [x8, #8]
   11e04:	cmp	x0, x8
   11e08:	b.ls	11e18 <argp_failure@@Base+0x1174>  // b.plast
   11e0c:	ldur	x0, [x29, #-40]
   11e10:	mov	w1, #0xa                   	// #10
   11e14:	bl	b040 <argp_fmtstream_putc@plt>
   11e18:	mov	w8, #0x1                   	// #1
   11e1c:	stur	w8, [x29, #-68]
   11e20:	ldr	x8, [sp, #80]
   11e24:	cbz	x8, 11ee8 <argp_failure@@Base+0x1244>
   11e28:	ldr	x8, [sp, #80]
   11e2c:	ldr	x8, [x8]
   11e30:	mov	w9, #0x0                   	// #0
   11e34:	str	w9, [sp, #36]
   11e38:	cbz	x8, 11e68 <argp_failure@@Base+0x11c4>
   11e3c:	ldur	w8, [x29, #-28]
   11e40:	mov	w9, #0x0                   	// #0
   11e44:	str	w9, [sp, #32]
   11e48:	cbz	w8, 11e5c <argp_failure@@Base+0x11b8>
   11e4c:	ldur	w8, [x29, #-68]
   11e50:	cmp	w8, #0x0
   11e54:	cset	w8, ne  // ne = any
   11e58:	str	w8, [sp, #32]
   11e5c:	ldr	w8, [sp, #32]
   11e60:	eor	w8, w8, #0x1
   11e64:	str	w8, [sp, #36]
   11e68:	ldr	w8, [sp, #36]
   11e6c:	tbnz	w8, #0, 11e74 <argp_failure@@Base+0x11d0>
   11e70:	b	11ee8 <argp_failure@@Base+0x1244>
   11e74:	ldr	x8, [sp, #80]
   11e78:	add	x9, x8, #0x20
   11e7c:	str	x9, [sp, #80]
   11e80:	ldr	x0, [x8]
   11e84:	ldur	x1, [x29, #-16]
   11e88:	ldur	w2, [x29, #-20]
   11e8c:	ldur	w10, [x29, #-68]
   11e90:	mov	w11, #0x1                   	// #1
   11e94:	str	x0, [sp, #24]
   11e98:	str	x1, [sp, #16]
   11e9c:	str	w2, [sp, #12]
   11ea0:	str	w11, [sp, #8]
   11ea4:	cbnz	w10, 11eb8 <argp_failure@@Base+0x1214>
   11ea8:	ldur	w8, [x29, #-24]
   11eac:	cmp	w8, #0x0
   11eb0:	cset	w8, ne  // ne = any
   11eb4:	str	w8, [sp, #8]
   11eb8:	ldr	w8, [sp, #8]
   11ebc:	and	w3, w8, #0x1
   11ec0:	ldur	w4, [x29, #-28]
   11ec4:	ldur	x5, [x29, #-40]
   11ec8:	ldr	x0, [sp, #24]
   11ecc:	ldr	x1, [sp, #16]
   11ed0:	ldr	w2, [sp, #12]
   11ed4:	bl	11b34 <argp_failure@@Base+0xe90>
   11ed8:	ldur	w8, [x29, #-68]
   11edc:	orr	w8, w8, w0
   11ee0:	stur	w8, [x29, #-68]
   11ee4:	b	11e28 <argp_failure@@Base+0x1184>
   11ee8:	ldur	w0, [x29, #-68]
   11eec:	ldp	x29, x30, [sp, #176]
   11ef0:	add	sp, sp, #0xc0
   11ef4:	ret
   11ef8:	sub	sp, sp, #0x80
   11efc:	stp	x29, x30, [sp, #112]
   11f00:	add	x29, sp, #0x70
   11f04:	adrp	x8, 61000 <gl_rbtree_list_implementation@@Base+0x1468>
   11f08:	add	x8, x8, #0x368
   11f0c:	stur	x0, [x29, #-8]
   11f10:	stur	x1, [x29, #-16]
   11f14:	stur	x2, [x29, #-24]
   11f18:	str	xzr, [sp, #56]
   11f1c:	str	xzr, [sp, #64]
   11f20:	ldur	x9, [x29, #-8]
   11f24:	ldr	x9, [x9]
   11f28:	stur	x9, [x29, #-40]
   11f2c:	ldur	x9, [x29, #-8]
   11f30:	ldr	w10, [x9, #8]
   11f34:	stur	w10, [x29, #-28]
   11f38:	str	x8, [sp, #32]
   11f3c:	ldur	w8, [x29, #-28]
   11f40:	cmp	w8, #0x0
   11f44:	cset	w8, ls  // ls = plast
   11f48:	tbnz	w8, #0, 11f7c <argp_failure@@Base+0x12d8>
   11f4c:	ldur	x0, [x29, #-40]
   11f50:	ldur	x1, [x29, #-16]
   11f54:	ldur	x2, [x29, #-24]
   11f58:	add	x3, sp, #0x38
   11f5c:	bl	13628 <argp_failure@@Base+0x2984>
   11f60:	ldur	x8, [x29, #-40]
   11f64:	add	x8, x8, #0x38
   11f68:	stur	x8, [x29, #-40]
   11f6c:	ldur	w9, [x29, #-28]
   11f70:	subs	w9, w9, #0x1
   11f74:	stur	w9, [x29, #-28]
   11f78:	b	11f3c <argp_failure@@Base+0x1298>
   11f7c:	ldr	w8, [sp, #68]
   11f80:	cbz	w8, 12068 <argp_failure@@Base+0x13c4>
   11f84:	ldr	x8, [sp, #32]
   11f88:	ldr	w9, [x8, #4]
   11f8c:	cbz	w9, 12068 <argp_failure@@Base+0x13c4>
   11f90:	ldur	x8, [x29, #-16]
   11f94:	mov	x9, xzr
   11f98:	adrp	x10, 44000 <vasnprintf@@Base+0x1e4c>
   11f9c:	add	x10, x10, #0xe15
   11fa0:	cmp	x8, #0x0
   11fa4:	csel	x0, x9, x10, eq  // eq = none
   11fa8:	adrp	x1, 45000 <vasnprintf@@Base+0x2e4c>
   11fac:	add	x1, x1, #0x86
   11fb0:	bl	b000 <dgettext@plt>
   11fb4:	str	x0, [sp, #48]
   11fb8:	ldr	x0, [sp, #48]
   11fbc:	ldur	x8, [x29, #-16]
   11fc0:	str	x0, [sp, #24]
   11fc4:	cbz	x8, 11fd8 <argp_failure@@Base+0x1334>
   11fc8:	ldur	x8, [x29, #-16]
   11fcc:	ldr	x8, [x8]
   11fd0:	str	x8, [sp, #16]
   11fd4:	b	11fe0 <argp_failure@@Base+0x133c>
   11fd8:	mov	x8, xzr
   11fdc:	str	x8, [sp, #16]
   11fe0:	ldr	x8, [sp, #16]
   11fe4:	ldur	x3, [x29, #-16]
   11fe8:	ldr	x0, [sp, #24]
   11fec:	mov	w1, #0x5                   	// #5
   11ff0:	movk	w1, #0x200, lsl #16
   11ff4:	mov	x2, x8
   11ff8:	bl	135b0 <argp_failure@@Base+0x290c>
   11ffc:	str	x0, [sp, #40]
   12000:	ldr	x8, [sp, #40]
   12004:	cbz	x8, 12048 <argp_failure@@Base+0x13a4>
   12008:	ldr	x8, [sp, #40]
   1200c:	ldrb	w9, [x8]
   12010:	cbz	w9, 12048 <argp_failure@@Base+0x13a4>
   12014:	ldur	x0, [x29, #-24]
   12018:	mov	w8, #0xa                   	// #10
   1201c:	mov	w1, w8
   12020:	str	w8, [sp, #12]
   12024:	bl	b040 <argp_fmtstream_putc@plt>
   12028:	ldur	x9, [x29, #-24]
   1202c:	ldr	x1, [sp, #40]
   12030:	mov	x0, x9
   12034:	bl	b030 <argp_fmtstream_puts@plt>
   12038:	ldur	x9, [x29, #-24]
   1203c:	mov	x0, x9
   12040:	ldr	w1, [sp, #12]
   12044:	bl	b040 <argp_fmtstream_putc@plt>
   12048:	ldr	x8, [sp, #40]
   1204c:	cbz	x8, 12068 <argp_failure@@Base+0x13c4>
   12050:	ldr	x8, [sp, #40]
   12054:	ldr	x9, [sp, #48]
   12058:	cmp	x8, x9
   1205c:	b.eq	12068 <argp_failure@@Base+0x13c4>  // b.none
   12060:	ldr	x0, [sp, #40]
   12064:	bl	a930 <free@plt>
   12068:	ldp	x29, x30, [sp, #112]
   1206c:	add	sp, sp, #0x80
   12070:	ret
   12074:	sub	sp, sp, #0x30
   12078:	stp	x29, x30, [sp, #32]
   1207c:	add	x29, sp, #0x20
   12080:	stur	x0, [x29, #-8]
   12084:	ldur	x8, [x29, #-8]
   12088:	ldr	x8, [x8, #24]
   1208c:	str	x8, [sp, #16]
   12090:	ldr	x8, [sp, #16]
   12094:	cbz	x8, 120b8 <argp_failure@@Base+0x1414>
   12098:	ldr	x8, [sp, #16]
   1209c:	ldr	x8, [x8, #40]
   120a0:	str	x8, [sp, #8]
   120a4:	ldr	x0, [sp, #16]
   120a8:	bl	a930 <free@plt>
   120ac:	ldr	x8, [sp, #8]
   120b0:	str	x8, [sp, #16]
   120b4:	b	12090 <argp_failure@@Base+0x13ec>
   120b8:	ldur	x8, [x29, #-8]
   120bc:	ldr	w9, [x8, #8]
   120c0:	cmp	w9, #0x0
   120c4:	cset	w9, ls  // ls = plast
   120c8:	tbnz	w9, #0, 120e4 <argp_failure@@Base+0x1440>
   120cc:	ldur	x8, [x29, #-8]
   120d0:	ldr	x0, [x8]
   120d4:	bl	a930 <free@plt>
   120d8:	ldur	x8, [x29, #-8]
   120dc:	ldr	x0, [x8, #16]
   120e0:	bl	a930 <free@plt>
   120e4:	ldur	x0, [x29, #-8]
   120e8:	bl	a930 <free@plt>
   120ec:	ldp	x29, x30, [sp, #32]
   120f0:	add	sp, sp, #0x30
   120f4:	ret
   120f8:	sub	sp, sp, #0x50
   120fc:	stp	x29, x30, [sp, #64]
   12100:	add	x29, sp, #0x40
   12104:	adrp	x8, 45000 <vasnprintf@@Base+0x2e4c>
   12108:	add	x8, x8, #0x8de
   1210c:	add	x9, x8, #0x90
   12110:	adrp	x10, 61000 <gl_rbtree_list_implementation@@Base+0x1468>
   12114:	add	x10, x10, #0x368
   12118:	stur	x0, [x29, #-8]
   1211c:	stur	x1, [x29, #-16]
   12120:	stur	x8, [x29, #-24]
   12124:	str	x9, [sp, #32]
   12128:	str	x10, [sp, #24]
   1212c:	ldur	x8, [x29, #-24]
   12130:	ldr	x9, [sp, #32]
   12134:	cmp	x8, x9
   12138:	b.cs	121e0 <argp_failure@@Base+0x153c>  // b.hs, b.nlast
   1213c:	ldur	x8, [x29, #-24]
   12140:	ldrb	w9, [x8, #14]
   12144:	tbnz	w9, #0, 1215c <argp_failure@@Base+0x14b8>
   12148:	ldur	x8, [x29, #-24]
   1214c:	ldrb	w9, [x8, #15]
   12150:	mov	w8, w9
   12154:	cmp	x8, #0x20
   12158:	b.ne	12160 <argp_failure@@Base+0x14bc>  // b.any
   1215c:	b	121d0 <argp_failure@@Base+0x152c>
   12160:	ldur	x8, [x29, #-16]
   12164:	ldur	x9, [x29, #-24]
   12168:	ldrb	w10, [x9, #15]
   1216c:	ldr	w10, [x8, w10, sxtw]
   12170:	ldur	x8, [x29, #-16]
   12174:	ldr	w11, [x8, #32]
   12178:	cmp	w10, w11
   1217c:	b.lt	121d0 <argp_failure@@Base+0x152c>  // b.tstop
   12180:	ldur	x0, [x29, #-8]
   12184:	adrp	x8, 44000 <vasnprintf@@Base+0x1e4c>
   12188:	add	x8, x8, #0xe15
   1218c:	str	x0, [sp, #16]
   12190:	mov	x0, x8
   12194:	adrp	x1, 44000 <vasnprintf@@Base+0x1e4c>
   12198:	add	x1, x1, #0xf47
   1219c:	bl	b000 <dgettext@plt>
   121a0:	ldur	x5, [x29, #-24]
   121a4:	ldr	x8, [sp, #16]
   121a8:	str	x0, [sp, #8]
   121ac:	mov	x0, x8
   121b0:	mov	w9, wzr
   121b4:	mov	w1, w9
   121b8:	mov	w2, w9
   121bc:	ldr	x3, [sp, #8]
   121c0:	adrp	x4, 44000 <vasnprintf@@Base+0x1e4c>
   121c4:	add	x4, x4, #0xf7b
   121c8:	bl	b0a0 <argp_failure@plt>
   121cc:	b	12200 <argp_failure@@Base+0x155c>
   121d0:	ldur	x8, [x29, #-24]
   121d4:	add	x8, x8, #0x10
   121d8:	stur	x8, [x29, #-24]
   121dc:	b	1212c <argp_failure@@Base+0x1488>
   121e0:	ldur	x1, [x29, #-16]
   121e4:	adrp	x0, 61000 <gl_rbtree_list_implementation@@Base+0x1468>
   121e8:	add	x0, x0, #0x368
   121ec:	mov	x2, #0x28                  	// #40
   121f0:	bl	af30 <memcpy@plt>
   121f4:	mov	w8, #0x1                   	// #1
   121f8:	ldr	x9, [sp, #24]
   121fc:	str	w8, [x9, #36]
   12200:	ldp	x29, x30, [sp, #64]
   12204:	add	sp, sp, #0x50
   12208:	ret
   1220c:	sub	sp, sp, #0x80
   12210:	stp	x29, x30, [sp, #112]
   12214:	add	x29, sp, #0x70
   12218:	mov	x8, #0x20                  	// #32
   1221c:	adrp	x9, 44000 <vasnprintf@@Base+0x1e4c>
   12220:	add	x9, x9, #0xf87
   12224:	adrp	x10, 44000 <vasnprintf@@Base+0x1e4c>
   12228:	add	x10, x10, #0xf93
   1222c:	stur	x0, [x29, #-8]
   12230:	stur	x1, [x29, #-16]
   12234:	ldur	x11, [x29, #-8]
   12238:	ldr	x11, [x11]
   1223c:	stur	x11, [x29, #-40]
   12240:	stur	wzr, [x29, #-52]
   12244:	mov	x0, x8
   12248:	str	x9, [sp, #32]
   1224c:	str	x10, [sp, #24]
   12250:	bl	af10 <malloc@plt>
   12254:	str	x0, [sp, #48]
   12258:	ldr	x8, [sp, #48]
   1225c:	cbz	x8, 12264 <argp_failure@@Base+0x15c0>
   12260:	b	1227c <argp_failure@@Base+0x15d8>
   12264:	adrp	x0, 44000 <vasnprintf@@Base+0x1e4c>
   12268:	add	x0, x0, #0xf83
   1226c:	ldr	x1, [sp, #32]
   12270:	mov	w2, #0x1c3                 	// #451
   12274:	ldr	x3, [sp, #24]
   12278:	bl	a910 <__assert_fail@plt>
   1227c:	ldr	x8, [sp, #48]
   12280:	str	wzr, [x8, #8]
   12284:	ldr	x8, [sp, #48]
   12288:	mov	x9, xzr
   1228c:	str	x9, [x8, #24]
   12290:	ldur	x8, [x29, #-40]
   12294:	cbz	x8, 12528 <argp_failure@@Base+0x1884>
   12298:	str	wzr, [sp, #44]
   1229c:	ldur	x8, [x29, #-40]
   122a0:	ldr	w9, [x8, #24]
   122a4:	and	w9, w9, #0x4
   122a8:	cbnz	w9, 122b0 <argp_failure@@Base+0x160c>
   122ac:	b	122c8 <argp_failure@@Base+0x1624>
   122b0:	adrp	x0, 44000 <vasnprintf@@Base+0x1e4c>
   122b4:	add	x0, x0, #0xfd3
   122b8:	ldr	x1, [sp, #32]
   122bc:	mov	w2, #0x1cd                 	// #461
   122c0:	ldr	x3, [sp, #24]
   122c4:	bl	a910 <__assert_fail@plt>
   122c8:	ldur	x8, [x29, #-40]
   122cc:	stur	x8, [x29, #-32]
   122d0:	ldur	x0, [x29, #-32]
   122d4:	bl	b100 <_option_is_end@plt>
   122d8:	cmp	w0, #0x0
   122dc:	cset	w8, ne  // ne = any
   122e0:	eor	w8, w8, #0x1
   122e4:	tbnz	w8, #0, 122ec <argp_failure@@Base+0x1648>
   122e8:	b	12334 <argp_failure@@Base+0x1690>
   122ec:	ldur	x8, [x29, #-32]
   122f0:	ldr	w9, [x8, #24]
   122f4:	and	w9, w9, #0x4
   122f8:	cbnz	w9, 1230c <argp_failure@@Base+0x1668>
   122fc:	ldr	x8, [sp, #48]
   12300:	ldr	w9, [x8, #8]
   12304:	add	w9, w9, #0x1
   12308:	str	w9, [x8, #8]
   1230c:	ldur	x0, [x29, #-32]
   12310:	bl	b110 <_option_is_short@plt>
   12314:	cbz	w0, 12324 <argp_failure@@Base+0x1680>
   12318:	ldur	w8, [x29, #-52]
   1231c:	add	w8, w8, #0x1
   12320:	stur	w8, [x29, #-52]
   12324:	ldur	x8, [x29, #-32]
   12328:	add	x8, x8, #0x30
   1232c:	stur	x8, [x29, #-32]
   12330:	b	122d0 <argp_failure@@Base+0x162c>
   12334:	ldr	x8, [sp, #48]
   12338:	ldr	w9, [x8, #8]
   1233c:	mov	w8, w9
   12340:	mov	x10, #0x38                  	// #56
   12344:	mul	x0, x10, x8
   12348:	bl	af10 <malloc@plt>
   1234c:	ldr	x8, [sp, #48]
   12350:	str	x0, [x8]
   12354:	ldur	w9, [x29, #-52]
   12358:	add	w9, w9, #0x1
   1235c:	mov	w8, w9
   12360:	ubfx	x0, x8, #0, #32
   12364:	bl	af10 <malloc@plt>
   12368:	ldr	x8, [sp, #48]
   1236c:	str	x0, [x8, #16]
   12370:	ldr	x8, [sp, #48]
   12374:	ldr	x8, [x8]
   12378:	cbz	x8, 1238c <argp_failure@@Base+0x16e8>
   1237c:	ldr	x8, [sp, #48]
   12380:	ldr	x8, [x8, #16]
   12384:	cbz	x8, 1238c <argp_failure@@Base+0x16e8>
   12388:	b	123a4 <argp_failure@@Base+0x1700>
   1238c:	adrp	x0, 44000 <vasnprintf@@Base+0x1e4c>
   12390:	add	x0, x0, #0xfe3
   12394:	ldr	x1, [sp, #32]
   12398:	mov	w2, #0x1db                 	// #475
   1239c:	ldr	x3, [sp, #24]
   123a0:	bl	a910 <__assert_fail@plt>
   123a4:	ldr	x8, [sp, #48]
   123a8:	ldr	x8, [x8, #16]
   123ac:	stur	x8, [x29, #-24]
   123b0:	ldur	x8, [x29, #-40]
   123b4:	stur	x8, [x29, #-32]
   123b8:	ldr	x8, [sp, #48]
   123bc:	ldr	x8, [x8]
   123c0:	stur	x8, [x29, #-48]
   123c4:	ldur	x0, [x29, #-32]
   123c8:	bl	b100 <_option_is_end@plt>
   123cc:	cmp	w0, #0x0
   123d0:	cset	w8, ne  // ne = any
   123d4:	eor	w8, w8, #0x1
   123d8:	tbnz	w8, #0, 123e0 <argp_failure@@Base+0x173c>
   123dc:	b	1251c <argp_failure@@Base+0x1878>
   123e0:	ldur	x8, [x29, #-32]
   123e4:	ldur	x9, [x29, #-48]
   123e8:	str	x8, [x9]
   123ec:	ldur	x8, [x29, #-48]
   123f0:	str	wzr, [x8, #8]
   123f4:	ldur	x8, [x29, #-24]
   123f8:	ldur	x9, [x29, #-48]
   123fc:	str	x8, [x9, #16]
   12400:	ldur	x8, [x29, #-32]
   12404:	ldr	w10, [x8, #40]
   12408:	cbz	w10, 1241c <argp_failure@@Base+0x1778>
   1240c:	ldur	x8, [x29, #-32]
   12410:	ldr	w9, [x8, #40]
   12414:	str	w9, [sp, #20]
   12418:	b	12454 <argp_failure@@Base+0x17b0>
   1241c:	ldur	x8, [x29, #-32]
   12420:	ldr	x8, [x8]
   12424:	cbnz	x8, 12444 <argp_failure@@Base+0x17a0>
   12428:	ldur	x8, [x29, #-32]
   1242c:	ldr	w9, [x8, #8]
   12430:	cbnz	w9, 12444 <argp_failure@@Base+0x17a0>
   12434:	ldr	w8, [sp, #44]
   12438:	add	w8, w8, #0x1
   1243c:	str	w8, [sp, #16]
   12440:	b	1244c <argp_failure@@Base+0x17a8>
   12444:	ldr	w8, [sp, #44]
   12448:	str	w8, [sp, #16]
   1244c:	ldr	w8, [sp, #16]
   12450:	str	w8, [sp, #20]
   12454:	ldr	w8, [sp, #20]
   12458:	str	w8, [sp, #44]
   1245c:	ldur	x9, [x29, #-48]
   12460:	str	w8, [x9, #24]
   12464:	ldur	x9, [x29, #-16]
   12468:	ldur	x10, [x29, #-48]
   1246c:	str	x9, [x10, #32]
   12470:	ldur	x9, [x29, #-8]
   12474:	ldur	x10, [x29, #-48]
   12478:	str	x9, [x10, #40]
   1247c:	ldur	x8, [x29, #-48]
   12480:	ldr	w9, [x8, #8]
   12484:	add	w9, w9, #0x1
   12488:	str	w9, [x8, #8]
   1248c:	ldur	x0, [x29, #-32]
   12490:	bl	b110 <_option_is_short@plt>
   12494:	cbz	w0, 124d0 <argp_failure@@Base+0x182c>
   12498:	ldur	x8, [x29, #-32]
   1249c:	ldr	w9, [x8, #8]
   124a0:	ldr	x8, [sp, #48]
   124a4:	ldr	x1, [x8, #16]
   124a8:	ldur	x2, [x29, #-24]
   124ac:	mov	w0, w9
   124b0:	bl	129b0 <argp_failure@@Base+0x1d0c>
   124b4:	cbnz	w0, 124d0 <argp_failure@@Base+0x182c>
   124b8:	ldur	x8, [x29, #-32]
   124bc:	ldr	w9, [x8, #8]
   124c0:	ldur	x8, [x29, #-24]
   124c4:	add	x10, x8, #0x1
   124c8:	stur	x10, [x29, #-24]
   124cc:	strb	w9, [x8]
   124d0:	ldur	x8, [x29, #-32]
   124d4:	add	x8, x8, #0x30
   124d8:	stur	x8, [x29, #-32]
   124dc:	ldur	x0, [x29, #-32]
   124e0:	bl	b100 <_option_is_end@plt>
   124e4:	mov	w8, #0x0                   	// #0
   124e8:	str	w8, [sp, #12]
   124ec:	cbnz	w0, 12504 <argp_failure@@Base+0x1860>
   124f0:	ldur	x8, [x29, #-32]
   124f4:	ldr	w9, [x8, #24]
   124f8:	tst	w9, #0x4
   124fc:	cset	w9, ne  // ne = any
   12500:	str	w9, [sp, #12]
   12504:	ldr	w8, [sp, #12]
   12508:	tbnz	w8, #0, 1247c <argp_failure@@Base+0x17d8>
   1250c:	ldur	x8, [x29, #-48]
   12510:	add	x8, x8, #0x38
   12514:	stur	x8, [x29, #-48]
   12518:	b	123c4 <argp_failure@@Base+0x1720>
   1251c:	ldur	x8, [x29, #-24]
   12520:	mov	w9, #0x0                   	// #0
   12524:	strb	w9, [x8]
   12528:	ldr	x0, [sp, #48]
   1252c:	ldp	x29, x30, [sp, #112]
   12530:	add	sp, sp, #0x80
   12534:	ret
   12538:	sub	sp, sp, #0x50
   1253c:	stp	x29, x30, [sp, #64]
   12540:	add	x29, sp, #0x40
   12544:	mov	x8, #0x30                  	// #48
   12548:	stur	x0, [x29, #-8]
   1254c:	stur	w1, [x29, #-12]
   12550:	stur	x2, [x29, #-24]
   12554:	stur	w3, [x29, #-28]
   12558:	str	x4, [sp, #24]
   1255c:	str	x5, [sp, #16]
   12560:	mov	x0, x8
   12564:	bl	af10 <malloc@plt>
   12568:	str	x0, [sp, #8]
   1256c:	ldr	x8, [sp, #8]
   12570:	cbz	x8, 125fc <argp_failure@@Base+0x1958>
   12574:	ldur	w8, [x29, #-12]
   12578:	ldr	x9, [sp, #8]
   1257c:	str	w8, [x9, #12]
   12580:	ldur	x9, [x29, #-24]
   12584:	ldr	x10, [sp, #8]
   12588:	str	x9, [x10]
   1258c:	ldur	w8, [x29, #-28]
   12590:	ldr	x9, [sp, #8]
   12594:	str	w8, [x9, #8]
   12598:	ldr	x9, [sp, #24]
   1259c:	ldr	x10, [sp, #8]
   125a0:	str	x9, [x10, #16]
   125a4:	ldr	x9, [sp, #16]
   125a8:	ldr	x10, [sp, #8]
   125ac:	str	x9, [x10, #24]
   125b0:	ldr	x9, [sp, #24]
   125b4:	cbz	x9, 125cc <argp_failure@@Base+0x1928>
   125b8:	ldr	x8, [sp, #24]
   125bc:	ldr	w9, [x8, #32]
   125c0:	add	w9, w9, #0x1
   125c4:	str	w9, [sp, #4]
   125c8:	b	125d4 <argp_failure@@Base+0x1930>
   125cc:	mov	w8, wzr
   125d0:	str	w8, [sp, #4]
   125d4:	ldr	w8, [sp, #4]
   125d8:	ldr	x9, [sp, #8]
   125dc:	str	w8, [x9, #32]
   125e0:	ldur	x9, [x29, #-8]
   125e4:	ldr	x9, [x9, #24]
   125e8:	ldr	x10, [sp, #8]
   125ec:	str	x9, [x10, #40]
   125f0:	ldr	x9, [sp, #8]
   125f4:	ldur	x10, [x29, #-8]
   125f8:	str	x9, [x10, #24]
   125fc:	ldr	x0, [sp, #8]
   12600:	ldp	x29, x30, [sp, #64]
   12604:	add	sp, sp, #0x50
   12608:	ret
   1260c:	sub	sp, sp, #0xa0
   12610:	stp	x29, x30, [sp, #144]
   12614:	add	x29, sp, #0x90
   12618:	stur	x0, [x29, #-8]
   1261c:	stur	x1, [x29, #-16]
   12620:	ldur	x8, [x29, #-8]
   12624:	add	x8, x8, #0x18
   12628:	stur	x8, [x29, #-24]
   1262c:	ldur	x8, [x29, #-24]
   12630:	ldr	x8, [x8]
   12634:	cbz	x8, 1264c <argp_failure@@Base+0x19a8>
   12638:	ldur	x8, [x29, #-24]
   1263c:	ldr	x8, [x8]
   12640:	add	x8, x8, #0x28
   12644:	stur	x8, [x29, #-24]
   12648:	b	1262c <argp_failure@@Base+0x1988>
   1264c:	ldur	x8, [x29, #-16]
   12650:	ldr	x8, [x8, #24]
   12654:	ldur	x9, [x29, #-24]
   12658:	str	x8, [x9]
   1265c:	ldur	x8, [x29, #-16]
   12660:	mov	x9, xzr
   12664:	str	x9, [x8, #24]
   12668:	ldur	x8, [x29, #-16]
   1266c:	ldr	w10, [x8, #8]
   12670:	cmp	w10, #0x0
   12674:	cset	w10, ls  // ls = plast
   12678:	tbnz	w10, #0, 1299c <argp_failure@@Base+0x1cf8>
   1267c:	ldur	x8, [x29, #-8]
   12680:	ldr	w9, [x8, #8]
   12684:	cbnz	w9, 126c4 <argp_failure@@Base+0x1a20>
   12688:	ldur	x8, [x29, #-16]
   1268c:	ldr	w9, [x8, #8]
   12690:	ldur	x8, [x29, #-8]
   12694:	str	w9, [x8, #8]
   12698:	ldur	x8, [x29, #-16]
   1269c:	ldr	x8, [x8]
   126a0:	ldur	x10, [x29, #-8]
   126a4:	str	x8, [x10]
   126a8:	ldur	x8, [x29, #-16]
   126ac:	ldr	x8, [x8, #16]
   126b0:	ldur	x10, [x29, #-8]
   126b4:	str	x8, [x10, #16]
   126b8:	ldur	x8, [x29, #-16]
   126bc:	str	wzr, [x8, #8]
   126c0:	b	1299c <argp_failure@@Base+0x1cf8>
   126c4:	ldur	x8, [x29, #-8]
   126c8:	ldr	w9, [x8, #8]
   126cc:	ldur	x8, [x29, #-16]
   126d0:	ldr	w10, [x8, #8]
   126d4:	add	w9, w9, w10
   126d8:	stur	w9, [x29, #-60]
   126dc:	ldur	w9, [x29, #-60]
   126e0:	mov	w8, w9
   126e4:	mov	x11, #0x38                  	// #56
   126e8:	mul	x0, x8, x11
   126ec:	bl	af10 <malloc@plt>
   126f0:	str	x0, [sp, #72]
   126f4:	ldur	x8, [x29, #-8]
   126f8:	ldr	x0, [x8, #16]
   126fc:	bl	a8e0 <strlen@plt>
   12700:	str	w0, [sp, #68]
   12704:	ldr	w9, [sp, #68]
   12708:	mov	w8, w9
   1270c:	ldur	x11, [x29, #-16]
   12710:	ldr	x0, [x11, #16]
   12714:	str	x8, [sp, #24]
   12718:	bl	a8e0 <strlen@plt>
   1271c:	ldr	x8, [sp, #24]
   12720:	add	x11, x8, x0
   12724:	add	x0, x11, #0x1
   12728:	bl	af10 <malloc@plt>
   1272c:	str	x0, [sp, #56]
   12730:	ldr	x8, [sp, #72]
   12734:	cbz	x8, 12744 <argp_failure@@Base+0x1aa0>
   12738:	ldr	x8, [sp, #56]
   1273c:	cbz	x8, 12744 <argp_failure@@Base+0x1aa0>
   12740:	b	12764 <argp_failure@@Base+0x1ac0>
   12744:	adrp	x0, 45000 <vasnprintf@@Base+0x2e4c>
   12748:	add	x0, x0, #0x6
   1274c:	adrp	x1, 44000 <vasnprintf@@Base+0x1e4c>
   12750:	add	x1, x1, #0xf87
   12754:	mov	w2, #0x370                 	// #880
   12758:	adrp	x3, 45000 <vasnprintf@@Base+0x2e4c>
   1275c:	add	x3, x3, #0x1f
   12760:	bl	a910 <__assert_fail@plt>
   12764:	ldr	x8, [sp, #72]
   12768:	ldur	x9, [x29, #-8]
   1276c:	ldr	x1, [x9]
   12770:	ldur	x9, [x29, #-8]
   12774:	ldr	w10, [x9, #8]
   12778:	mov	w9, w10
   1277c:	mov	x11, #0x38                  	// #56
   12780:	mul	x9, x9, x11
   12784:	mov	x0, x8
   12788:	mov	x2, x9
   1278c:	str	x8, [sp, #16]
   12790:	str	x11, [sp, #8]
   12794:	str	x9, [sp]
   12798:	bl	af30 <memcpy@plt>
   1279c:	ldr	x8, [sp, #16]
   127a0:	ldr	x9, [sp]
   127a4:	add	x0, x8, x9
   127a8:	ldur	x11, [x29, #-16]
   127ac:	ldr	x1, [x11]
   127b0:	ldur	x11, [x29, #-16]
   127b4:	ldr	w10, [x11, #8]
   127b8:	mov	w11, w10
   127bc:	ldr	x12, [sp, #8]
   127c0:	mul	x2, x11, x12
   127c4:	bl	af30 <memcpy@plt>
   127c8:	ldr	x0, [sp, #56]
   127cc:	ldur	x8, [x29, #-8]
   127d0:	ldr	x1, [x8, #16]
   127d4:	ldr	w10, [sp, #68]
   127d8:	mov	w2, w10
   127dc:	bl	af30 <memcpy@plt>
   127e0:	ldr	x8, [sp, #72]
   127e4:	stur	x8, [x29, #-56]
   127e8:	ldur	x8, [x29, #-8]
   127ec:	ldr	w10, [x8, #8]
   127f0:	stur	w10, [x29, #-28]
   127f4:	ldur	w8, [x29, #-28]
   127f8:	cmp	w8, #0x0
   127fc:	cset	w8, ls  // ls = plast
   12800:	tbnz	w8, #0, 12844 <argp_failure@@Base+0x1ba0>
   12804:	ldr	x8, [sp, #56]
   12808:	ldur	x9, [x29, #-56]
   1280c:	ldr	x9, [x9, #16]
   12810:	ldur	x10, [x29, #-8]
   12814:	ldr	x10, [x10, #16]
   12818:	subs	x9, x9, x10
   1281c:	add	x8, x8, x9
   12820:	ldur	x9, [x29, #-56]
   12824:	str	x8, [x9, #16]
   12828:	ldur	x8, [x29, #-56]
   1282c:	add	x8, x8, #0x38
   12830:	stur	x8, [x29, #-56]
   12834:	ldur	w9, [x29, #-28]
   12838:	subs	w9, w9, #0x1
   1283c:	stur	w9, [x29, #-28]
   12840:	b	127f4 <argp_failure@@Base+0x1b50>
   12844:	ldr	x8, [sp, #56]
   12848:	ldr	w9, [sp, #68]
   1284c:	mov	w10, w9
   12850:	add	x8, x8, x10
   12854:	stur	x8, [x29, #-40]
   12858:	ldur	x8, [x29, #-16]
   1285c:	ldr	x8, [x8, #16]
   12860:	stur	x8, [x29, #-48]
   12864:	ldur	x8, [x29, #-16]
   12868:	ldr	w9, [x8, #8]
   1286c:	stur	w9, [x29, #-28]
   12870:	ldur	w8, [x29, #-28]
   12874:	cmp	w8, #0x0
   12878:	cset	w8, ls  // ls = plast
   1287c:	tbnz	w8, #0, 12954 <argp_failure@@Base+0x1cb0>
   12880:	ldur	x8, [x29, #-40]
   12884:	ldur	x9, [x29, #-56]
   12888:	str	x8, [x9, #16]
   1288c:	ldur	x8, [x29, #-56]
   12890:	ldr	w10, [x8, #8]
   12894:	str	w10, [sp, #52]
   12898:	ldur	x8, [x29, #-56]
   1289c:	ldr	x8, [x8]
   128a0:	str	x8, [sp, #40]
   128a4:	ldr	w8, [sp, #52]
   128a8:	cbz	w8, 12938 <argp_failure@@Base+0x1c94>
   128ac:	ldur	x8, [x29, #-48]
   128b0:	ldrb	w9, [x8]
   128b4:	str	w9, [sp, #36]
   128b8:	ldr	x0, [sp, #40]
   128bc:	bl	b110 <_option_is_short@plt>
   128c0:	cbz	w0, 1291c <argp_failure@@Base+0x1c78>
   128c4:	ldr	w8, [sp, #36]
   128c8:	ldr	x9, [sp, #40]
   128cc:	ldr	w10, [x9, #8]
   128d0:	cmp	w8, w10
   128d4:	b.ne	1291c <argp_failure@@Base+0x1c78>  // b.any
   128d8:	ldr	w8, [sp, #36]
   128dc:	ldr	x1, [sp, #56]
   128e0:	ldr	x9, [sp, #56]
   128e4:	ldr	w10, [sp, #68]
   128e8:	mov	w11, w10
   128ec:	add	x2, x9, x11
   128f0:	mov	w0, w8
   128f4:	bl	129b0 <argp_failure@@Base+0x1d0c>
   128f8:	cbnz	w0, 12910 <argp_failure@@Base+0x1c6c>
   128fc:	ldr	w8, [sp, #36]
   12900:	ldur	x9, [x29, #-40]
   12904:	add	x10, x9, #0x1
   12908:	stur	x10, [x29, #-40]
   1290c:	strb	w8, [x9]
   12910:	ldur	x8, [x29, #-48]
   12914:	add	x8, x8, #0x1
   12918:	stur	x8, [x29, #-48]
   1291c:	ldr	x8, [sp, #40]
   12920:	add	x8, x8, #0x30
   12924:	str	x8, [sp, #40]
   12928:	ldr	w9, [sp, #52]
   1292c:	subs	w9, w9, #0x1
   12930:	str	w9, [sp, #52]
   12934:	b	128a4 <argp_failure@@Base+0x1c00>
   12938:	ldur	x8, [x29, #-56]
   1293c:	add	x8, x8, #0x38
   12940:	stur	x8, [x29, #-56]
   12944:	ldur	w9, [x29, #-28]
   12948:	subs	w9, w9, #0x1
   1294c:	stur	w9, [x29, #-28]
   12950:	b	12870 <argp_failure@@Base+0x1bcc>
   12954:	ldur	x8, [x29, #-40]
   12958:	mov	w9, #0x0                   	// #0
   1295c:	strb	w9, [x8]
   12960:	ldur	x8, [x29, #-8]
   12964:	ldr	x0, [x8]
   12968:	bl	a930 <free@plt>
   1296c:	ldur	x8, [x29, #-8]
   12970:	ldr	x0, [x8, #16]
   12974:	bl	a930 <free@plt>
   12978:	ldr	x8, [sp, #72]
   1297c:	ldur	x10, [x29, #-8]
   12980:	str	x8, [x10]
   12984:	ldur	w9, [x29, #-60]
   12988:	ldur	x8, [x29, #-8]
   1298c:	str	w9, [x8, #8]
   12990:	ldr	x8, [sp, #56]
   12994:	ldur	x10, [x29, #-8]
   12998:	str	x8, [x10, #16]
   1299c:	ldur	x0, [x29, #-16]
   129a0:	bl	12074 <argp_failure@@Base+0x13d0>
   129a4:	ldp	x29, x30, [sp, #144]
   129a8:	add	sp, sp, #0xa0
   129ac:	ret
   129b0:	sub	sp, sp, #0x20
   129b4:	strb	w0, [sp, #27]
   129b8:	str	x1, [sp, #16]
   129bc:	str	x2, [sp, #8]
   129c0:	ldr	x8, [sp, #16]
   129c4:	ldr	x9, [sp, #8]
   129c8:	cmp	x8, x9
   129cc:	b.cs	12a00 <argp_failure@@Base+0x1d5c>  // b.hs, b.nlast
   129d0:	ldr	x8, [sp, #16]
   129d4:	ldrb	w9, [x8]
   129d8:	ldrb	w10, [sp, #27]
   129dc:	cmp	w9, w10
   129e0:	b.ne	129f0 <argp_failure@@Base+0x1d4c>  // b.any
   129e4:	mov	w8, #0x1                   	// #1
   129e8:	str	w8, [sp, #28]
   129ec:	b	12a04 <argp_failure@@Base+0x1d60>
   129f0:	ldr	x8, [sp, #16]
   129f4:	add	x8, x8, #0x1
   129f8:	str	x8, [sp, #16]
   129fc:	b	129c0 <argp_failure@@Base+0x1d1c>
   12a00:	str	wzr, [sp, #28]
   12a04:	ldr	w0, [sp, #28]
   12a08:	add	sp, sp, #0x20
   12a0c:	ret
   12a10:	sub	sp, sp, #0x50
   12a14:	stp	x29, x30, [sp, #64]
   12a18:	add	x29, sp, #0x40
   12a1c:	stur	x0, [x29, #-16]
   12a20:	stur	x1, [x29, #-24]
   12a24:	ldur	x8, [x29, #-16]
   12a28:	ldr	x8, [x8]
   12a2c:	str	x8, [sp, #32]
   12a30:	ldur	x8, [x29, #-16]
   12a34:	ldr	w9, [x8, #8]
   12a38:	str	w9, [sp, #28]
   12a3c:	ldr	w8, [sp, #28]
   12a40:	subs	w9, w8, #0x1
   12a44:	str	w9, [sp, #28]
   12a48:	cmp	w8, #0x0
   12a4c:	cset	w8, ls  // ls = plast
   12a50:	tbnz	w8, #0, 12ae0 <argp_failure@@Base+0x1e3c>
   12a54:	ldr	x8, [sp, #32]
   12a58:	ldr	x8, [x8]
   12a5c:	str	x8, [sp, #16]
   12a60:	ldr	x8, [sp, #32]
   12a64:	ldr	w9, [x8, #8]
   12a68:	str	w9, [sp, #12]
   12a6c:	ldr	w8, [sp, #12]
   12a70:	subs	w9, w8, #0x1
   12a74:	str	w9, [sp, #12]
   12a78:	cmp	w8, #0x0
   12a7c:	cset	w8, ls  // ls = plast
   12a80:	tbnz	w8, #0, 12ad0 <argp_failure@@Base+0x1e2c>
   12a84:	ldr	x8, [sp, #16]
   12a88:	ldr	x8, [x8]
   12a8c:	cbz	x8, 12ac0 <argp_failure@@Base+0x1e1c>
   12a90:	ldr	x8, [sp, #16]
   12a94:	ldr	w9, [x8, #24]
   12a98:	and	w9, w9, #0x2
   12a9c:	cbnz	w9, 12ac0 <argp_failure@@Base+0x1e1c>
   12aa0:	ldr	x8, [sp, #16]
   12aa4:	ldr	x0, [x8]
   12aa8:	ldur	x1, [x29, #-24]
   12aac:	bl	aa00 <strcmp@plt>
   12ab0:	cbnz	w0, 12ac0 <argp_failure@@Base+0x1e1c>
   12ab4:	ldr	x8, [sp, #32]
   12ab8:	stur	x8, [x29, #-8]
   12abc:	b	12ae8 <argp_failure@@Base+0x1e44>
   12ac0:	ldr	x8, [sp, #16]
   12ac4:	add	x8, x8, #0x30
   12ac8:	str	x8, [sp, #16]
   12acc:	b	12a6c <argp_failure@@Base+0x1dc8>
   12ad0:	ldr	x8, [sp, #32]
   12ad4:	add	x8, x8, #0x38
   12ad8:	str	x8, [sp, #32]
   12adc:	b	12a3c <argp_failure@@Base+0x1d98>
   12ae0:	mov	x8, xzr
   12ae4:	stur	x8, [x29, #-8]
   12ae8:	ldur	x0, [x29, #-8]
   12aec:	ldp	x29, x30, [sp, #64]
   12af0:	add	sp, sp, #0x50
   12af4:	ret
   12af8:	sub	sp, sp, #0x20
   12afc:	stp	x29, x30, [sp, #16]
   12b00:	add	x29, sp, #0x10
   12b04:	str	x0, [sp, #8]
   12b08:	str	x1, [sp]
   12b0c:	ldr	x0, [sp, #8]
   12b10:	ldr	x1, [sp]
   12b14:	bl	12b24 <argp_failure@@Base+0x1e80>
   12b18:	ldp	x29, x30, [sp, #16]
   12b1c:	add	sp, sp, #0x20
   12b20:	ret
   12b24:	sub	sp, sp, #0x80
   12b28:	stp	x29, x30, [sp, #112]
   12b2c:	add	x29, sp, #0x70
   12b30:	stur	x0, [x29, #-16]
   12b34:	stur	x1, [x29, #-24]
   12b38:	ldur	x8, [x29, #-16]
   12b3c:	ldr	w9, [x8, #24]
   12b40:	stur	w9, [x29, #-28]
   12b44:	ldur	x8, [x29, #-24]
   12b48:	ldr	w9, [x8, #24]
   12b4c:	stur	w9, [x29, #-32]
   12b50:	ldur	x8, [x29, #-16]
   12b54:	ldr	x8, [x8, #32]
   12b58:	ldur	x10, [x29, #-24]
   12b5c:	ldr	x10, [x10, #32]
   12b60:	cmp	x8, x10
   12b64:	b.eq	12bf0 <argp_failure@@Base+0x1f4c>  // b.none
   12b68:	ldur	x8, [x29, #-16]
   12b6c:	ldr	x8, [x8, #32]
   12b70:	cbnz	x8, 12ba4 <argp_failure@@Base+0x1f00>
   12b74:	ldur	w0, [x29, #-28]
   12b78:	ldur	x8, [x29, #-24]
   12b7c:	ldr	x8, [x8, #32]
   12b80:	str	w0, [sp, #36]
   12b84:	mov	x0, x8
   12b88:	bl	12ed4 <argp_failure@@Base+0x2230>
   12b8c:	ldr	w1, [x0, #12]
   12b90:	ldr	w0, [sp, #36]
   12b94:	mov	w2, #0xffffffff            	// #-1
   12b98:	bl	12e38 <argp_failure@@Base+0x2194>
   12b9c:	stur	w0, [x29, #-4]
   12ba0:	b	12e28 <argp_failure@@Base+0x2184>
   12ba4:	ldur	x8, [x29, #-24]
   12ba8:	ldr	x8, [x8, #32]
   12bac:	cbnz	x8, 12bd4 <argp_failure@@Base+0x1f30>
   12bb0:	ldur	x8, [x29, #-16]
   12bb4:	ldr	x0, [x8, #32]
   12bb8:	bl	12ed4 <argp_failure@@Base+0x2230>
   12bbc:	ldr	w0, [x0, #12]
   12bc0:	ldur	w1, [x29, #-32]
   12bc4:	mov	w2, #0x1                   	// #1
   12bc8:	bl	12e38 <argp_failure@@Base+0x2194>
   12bcc:	stur	w0, [x29, #-4]
   12bd0:	b	12e28 <argp_failure@@Base+0x2184>
   12bd4:	ldur	x8, [x29, #-16]
   12bd8:	ldr	x0, [x8, #32]
   12bdc:	ldur	x8, [x29, #-24]
   12be0:	ldr	x1, [x8, #32]
   12be4:	bl	12f04 <argp_failure@@Base+0x2260>
   12be8:	stur	w0, [x29, #-4]
   12bec:	b	12e28 <argp_failure@@Base+0x2184>
   12bf0:	ldur	w8, [x29, #-28]
   12bf4:	ldur	w9, [x29, #-32]
   12bf8:	cmp	w8, w9
   12bfc:	b.ne	12e10 <argp_failure@@Base+0x216c>  // b.any
   12c00:	ldur	x0, [x29, #-16]
   12c04:	bl	12fd0 <argp_failure@@Base+0x232c>
   12c08:	and	w8, w0, #0xff
   12c0c:	stur	w8, [x29, #-36]
   12c10:	ldur	x0, [x29, #-24]
   12c14:	bl	12fd0 <argp_failure@@Base+0x232c>
   12c18:	and	w8, w0, #0xff
   12c1c:	stur	w8, [x29, #-40]
   12c20:	ldur	x9, [x29, #-16]
   12c24:	ldr	x9, [x9]
   12c28:	ldr	w8, [x9, #24]
   12c2c:	and	w8, w8, #0x8
   12c30:	stur	w8, [x29, #-44]
   12c34:	ldur	x9, [x29, #-24]
   12c38:	ldr	x9, [x9]
   12c3c:	ldr	w8, [x9, #24]
   12c40:	and	w8, w8, #0x8
   12c44:	stur	w8, [x29, #-48]
   12c48:	ldur	x0, [x29, #-16]
   12c4c:	bl	13010 <argp_failure@@Base+0x236c>
   12c50:	str	x0, [sp, #56]
   12c54:	ldur	x0, [x29, #-24]
   12c58:	bl	13010 <argp_failure@@Base+0x236c>
   12c5c:	str	x0, [sp, #48]
   12c60:	ldur	w8, [x29, #-44]
   12c64:	cbz	w8, 12c98 <argp_failure@@Base+0x1ff4>
   12c68:	ldr	x8, [sp, #56]
   12c6c:	mov	w9, #0x0                   	// #0
   12c70:	str	w9, [sp, #32]
   12c74:	cbz	x8, 12c8c <argp_failure@@Base+0x1fe8>
   12c78:	add	x0, sp, #0x38
   12c7c:	bl	1309c <argp_failure@@Base+0x23f8>
   12c80:	cmp	w0, #0x0
   12c84:	cset	w8, ne  // ne = any
   12c88:	str	w8, [sp, #32]
   12c8c:	ldr	w8, [sp, #32]
   12c90:	and	w8, w8, #0x1
   12c94:	stur	w8, [x29, #-44]
   12c98:	ldur	w8, [x29, #-48]
   12c9c:	cbz	w8, 12cd0 <argp_failure@@Base+0x202c>
   12ca0:	ldr	x8, [sp, #48]
   12ca4:	mov	w9, #0x0                   	// #0
   12ca8:	str	w9, [sp, #28]
   12cac:	cbz	x8, 12cc4 <argp_failure@@Base+0x2020>
   12cb0:	add	x0, sp, #0x30
   12cb4:	bl	1309c <argp_failure@@Base+0x23f8>
   12cb8:	cmp	w0, #0x0
   12cbc:	cset	w8, ne  // ne = any
   12cc0:	str	w8, [sp, #28]
   12cc4:	ldr	w8, [sp, #28]
   12cc8:	and	w8, w8, #0x1
   12ccc:	stur	w8, [x29, #-48]
   12cd0:	ldur	w8, [x29, #-44]
   12cd4:	ldur	w9, [x29, #-48]
   12cd8:	cmp	w8, w9
   12cdc:	b.eq	12cf4 <argp_failure@@Base+0x2050>  // b.none
   12ce0:	ldur	w8, [x29, #-44]
   12ce4:	ldur	w9, [x29, #-48]
   12ce8:	subs	w8, w8, w9
   12cec:	stur	w8, [x29, #-4]
   12cf0:	b	12e28 <argp_failure@@Base+0x2184>
   12cf4:	ldur	w8, [x29, #-36]
   12cf8:	cbnz	w8, 12d28 <argp_failure@@Base+0x2084>
   12cfc:	ldur	w8, [x29, #-40]
   12d00:	cbnz	w8, 12d28 <argp_failure@@Base+0x2084>
   12d04:	ldr	x8, [sp, #56]
   12d08:	cbz	x8, 12d28 <argp_failure@@Base+0x2084>
   12d0c:	ldr	x8, [sp, #48]
   12d10:	cbz	x8, 12d28 <argp_failure@@Base+0x2084>
   12d14:	ldr	x0, [sp, #56]
   12d18:	ldr	x1, [sp, #48]
   12d1c:	bl	ab90 <strcasecmp@plt>
   12d20:	stur	w0, [x29, #-4]
   12d24:	b	12e28 <argp_failure@@Base+0x2184>
   12d28:	ldur	w8, [x29, #-36]
   12d2c:	cbz	w8, 12d3c <argp_failure@@Base+0x2098>
   12d30:	ldur	w8, [x29, #-36]
   12d34:	str	w8, [sp, #24]
   12d38:	b	12d64 <argp_failure@@Base+0x20c0>
   12d3c:	ldr	x8, [sp, #56]
   12d40:	cbz	x8, 12d54 <argp_failure@@Base+0x20b0>
   12d44:	ldr	x8, [sp, #56]
   12d48:	ldrb	w9, [x8]
   12d4c:	str	w9, [sp, #20]
   12d50:	b	12d5c <argp_failure@@Base+0x20b8>
   12d54:	mov	w8, wzr
   12d58:	str	w8, [sp, #20]
   12d5c:	ldr	w8, [sp, #20]
   12d60:	str	w8, [sp, #24]
   12d64:	ldr	w8, [sp, #24]
   12d68:	strb	w8, [sp, #47]
   12d6c:	ldur	w8, [x29, #-40]
   12d70:	cbz	w8, 12d80 <argp_failure@@Base+0x20dc>
   12d74:	ldur	w8, [x29, #-40]
   12d78:	str	w8, [sp, #16]
   12d7c:	b	12da8 <argp_failure@@Base+0x2104>
   12d80:	ldr	x8, [sp, #48]
   12d84:	cbz	x8, 12d98 <argp_failure@@Base+0x20f4>
   12d88:	ldr	x8, [sp, #48]
   12d8c:	ldrb	w9, [x8]
   12d90:	str	w9, [sp, #12]
   12d94:	b	12da0 <argp_failure@@Base+0x20fc>
   12d98:	mov	w8, wzr
   12d9c:	str	w8, [sp, #12]
   12da0:	ldr	w8, [sp, #12]
   12da4:	str	w8, [sp, #16]
   12da8:	ldr	w8, [sp, #16]
   12dac:	strb	w8, [sp, #46]
   12db0:	bl	b120 <__ctype_tolower_loc@plt>
   12db4:	ldr	x9, [x0]
   12db8:	ldrb	w8, [sp, #47]
   12dbc:	ldr	w8, [x9, w8, sxtw #2]
   12dc0:	str	w8, [sp, #8]
   12dc4:	bl	b120 <__ctype_tolower_loc@plt>
   12dc8:	ldr	x9, [x0]
   12dcc:	ldrb	w8, [sp, #46]
   12dd0:	ldr	w8, [x9, w8, sxtw #2]
   12dd4:	ldr	w10, [sp, #8]
   12dd8:	subs	w8, w10, w8
   12ddc:	str	w8, [sp, #40]
   12de0:	ldr	w8, [sp, #40]
   12de4:	cbz	w8, 12df4 <argp_failure@@Base+0x2150>
   12de8:	ldr	w8, [sp, #40]
   12dec:	str	w8, [sp, #4]
   12df0:	b	12e04 <argp_failure@@Base+0x2160>
   12df4:	ldrb	w8, [sp, #46]
   12df8:	ldrb	w9, [sp, #47]
   12dfc:	subs	w8, w8, w9
   12e00:	str	w8, [sp, #4]
   12e04:	ldr	w8, [sp, #4]
   12e08:	stur	w8, [x29, #-4]
   12e0c:	b	12e28 <argp_failure@@Base+0x2184>
   12e10:	ldur	w0, [x29, #-28]
   12e14:	ldur	w1, [x29, #-32]
   12e18:	mov	w8, wzr
   12e1c:	mov	w2, w8
   12e20:	bl	12e38 <argp_failure@@Base+0x2194>
   12e24:	stur	w0, [x29, #-4]
   12e28:	ldur	w0, [x29, #-4]
   12e2c:	ldp	x29, x30, [sp, #112]
   12e30:	add	sp, sp, #0x80
   12e34:	ret
   12e38:	sub	sp, sp, #0x10
   12e3c:	str	w0, [sp, #8]
   12e40:	str	w1, [sp, #4]
   12e44:	str	w2, [sp]
   12e48:	ldr	w8, [sp, #8]
   12e4c:	ldr	w9, [sp, #4]
   12e50:	cmp	w8, w9
   12e54:	b.ne	12e64 <argp_failure@@Base+0x21c0>  // b.any
   12e58:	ldr	w8, [sp]
   12e5c:	str	w8, [sp, #12]
   12e60:	b	12ec8 <argp_failure@@Base+0x2224>
   12e64:	ldr	w8, [sp, #8]
   12e68:	cmp	w8, #0x0
   12e6c:	cset	w8, ge  // ge = tcont
   12e70:	tbnz	w8, #0, 12e84 <argp_failure@@Base+0x21e0>
   12e74:	ldr	w8, [sp, #4]
   12e78:	cmp	w8, #0x0
   12e7c:	cset	w8, lt  // lt = tstop
   12e80:	tbnz	w8, #0, 12ea4 <argp_failure@@Base+0x2200>
   12e84:	ldr	w8, [sp, #8]
   12e88:	cmp	w8, #0x0
   12e8c:	cset	w8, lt  // lt = tstop
   12e90:	tbnz	w8, #0, 12eb8 <argp_failure@@Base+0x2214>
   12e94:	ldr	w8, [sp, #4]
   12e98:	cmp	w8, #0x0
   12e9c:	cset	w8, lt  // lt = tstop
   12ea0:	tbnz	w8, #0, 12eb8 <argp_failure@@Base+0x2214>
   12ea4:	ldr	w8, [sp, #8]
   12ea8:	ldr	w9, [sp, #4]
   12eac:	subs	w8, w8, w9
   12eb0:	str	w8, [sp, #12]
   12eb4:	b	12ec8 <argp_failure@@Base+0x2224>
   12eb8:	ldr	w8, [sp, #4]
   12ebc:	ldr	w9, [sp, #8]
   12ec0:	subs	w8, w8, w9
   12ec4:	str	w8, [sp, #12]
   12ec8:	ldr	w0, [sp, #12]
   12ecc:	add	sp, sp, #0x10
   12ed0:	ret
   12ed4:	sub	sp, sp, #0x10
   12ed8:	str	x0, [sp, #8]
   12edc:	ldr	x8, [sp, #8]
   12ee0:	ldr	x8, [x8, #16]
   12ee4:	cbz	x8, 12ef8 <argp_failure@@Base+0x2254>
   12ee8:	ldr	x8, [sp, #8]
   12eec:	ldr	x8, [x8, #16]
   12ef0:	str	x8, [sp, #8]
   12ef4:	b	12edc <argp_failure@@Base+0x2238>
   12ef8:	ldr	x0, [sp, #8]
   12efc:	add	sp, sp, #0x10
   12f00:	ret
   12f04:	sub	sp, sp, #0x20
   12f08:	stp	x29, x30, [sp, #16]
   12f0c:	add	x29, sp, #0x10
   12f10:	str	x0, [sp, #8]
   12f14:	str	x1, [sp]
   12f18:	ldr	x8, [sp, #8]
   12f1c:	ldr	w9, [x8, #32]
   12f20:	ldr	x8, [sp]
   12f24:	ldr	w10, [x8, #32]
   12f28:	cmp	w9, w10
   12f2c:	b.le	12f40 <argp_failure@@Base+0x229c>
   12f30:	ldr	x8, [sp, #8]
   12f34:	ldr	x8, [x8, #16]
   12f38:	str	x8, [sp, #8]
   12f3c:	b	12f18 <argp_failure@@Base+0x2274>
   12f40:	ldr	x8, [sp]
   12f44:	ldr	w9, [x8, #32]
   12f48:	ldr	x8, [sp, #8]
   12f4c:	ldr	w10, [x8, #32]
   12f50:	cmp	w9, w10
   12f54:	b.le	12f68 <argp_failure@@Base+0x22c4>
   12f58:	ldr	x8, [sp]
   12f5c:	ldr	x8, [x8, #16]
   12f60:	str	x8, [sp]
   12f64:	b	12f40 <argp_failure@@Base+0x229c>
   12f68:	ldr	x8, [sp, #8]
   12f6c:	ldr	x8, [x8, #16]
   12f70:	ldr	x9, [sp]
   12f74:	ldr	x9, [x9, #16]
   12f78:	cmp	x8, x9
   12f7c:	b.eq	12f9c <argp_failure@@Base+0x22f8>  // b.none
   12f80:	ldr	x8, [sp, #8]
   12f84:	ldr	x8, [x8, #16]
   12f88:	str	x8, [sp, #8]
   12f8c:	ldr	x8, [sp]
   12f90:	ldr	x8, [x8, #16]
   12f94:	str	x8, [sp]
   12f98:	b	12f68 <argp_failure@@Base+0x22c4>
   12f9c:	ldr	x8, [sp, #8]
   12fa0:	ldr	w0, [x8, #12]
   12fa4:	ldr	x8, [sp]
   12fa8:	ldr	w1, [x8, #12]
   12fac:	ldr	x8, [sp]
   12fb0:	ldr	w9, [x8, #8]
   12fb4:	ldr	x8, [sp, #8]
   12fb8:	ldr	w10, [x8, #8]
   12fbc:	subs	w2, w9, w10
   12fc0:	bl	12e38 <argp_failure@@Base+0x2194>
   12fc4:	ldp	x29, x30, [sp, #16]
   12fc8:	add	sp, sp, #0x20
   12fcc:	ret
   12fd0:	sub	sp, sp, #0x20
   12fd4:	stp	x29, x30, [sp, #16]
   12fd8:	add	x29, sp, #0x10
   12fdc:	adrp	x1, 13000 <argp_failure@@Base+0x235c>
   12fe0:	add	x1, x1, #0x290
   12fe4:	mov	x8, xzr
   12fe8:	str	x0, [sp, #8]
   12fec:	ldr	x0, [sp, #8]
   12ff0:	ldr	x9, [sp, #8]
   12ff4:	ldr	x9, [x9, #40]
   12ff8:	ldr	x2, [x9, #48]
   12ffc:	mov	x3, x8
   13000:	bl	1316c <argp_failure@@Base+0x24c8>
   13004:	ldp	x29, x30, [sp, #16]
   13008:	add	sp, sp, #0x20
   1300c:	ret
   13010:	sub	sp, sp, #0x20
   13014:	str	x0, [sp, #16]
   13018:	ldr	x8, [sp, #16]
   1301c:	ldr	x8, [x8]
   13020:	str	x8, [sp, #8]
   13024:	ldr	x8, [sp, #16]
   13028:	ldr	w9, [x8, #8]
   1302c:	str	w9, [sp, #4]
   13030:	ldr	w8, [sp, #4]
   13034:	cmp	w8, #0x0
   13038:	cset	w8, ls  // ls = plast
   1303c:	tbnz	w8, #0, 13088 <argp_failure@@Base+0x23e4>
   13040:	ldr	x8, [sp, #8]
   13044:	ldr	x8, [x8]
   13048:	cbz	x8, 1306c <argp_failure@@Base+0x23c8>
   1304c:	ldr	x8, [sp, #8]
   13050:	ldr	w9, [x8, #24]
   13054:	and	w9, w9, #0x2
   13058:	cbnz	w9, 1306c <argp_failure@@Base+0x23c8>
   1305c:	ldr	x8, [sp, #8]
   13060:	ldr	x8, [x8]
   13064:	str	x8, [sp, #24]
   13068:	b	13090 <argp_failure@@Base+0x23ec>
   1306c:	ldr	x8, [sp, #8]
   13070:	add	x8, x8, #0x30
   13074:	str	x8, [sp, #8]
   13078:	ldr	w9, [sp, #4]
   1307c:	subs	w9, w9, #0x1
   13080:	str	w9, [sp, #4]
   13084:	b	13030 <argp_failure@@Base+0x238c>
   13088:	mov	x8, xzr
   1308c:	str	x8, [sp, #24]
   13090:	ldr	x0, [sp, #24]
   13094:	add	sp, sp, #0x20
   13098:	ret
   1309c:	sub	sp, sp, #0x20
   130a0:	stp	x29, x30, [sp, #16]
   130a4:	add	x29, sp, #0x10
   130a8:	str	x0, [sp, #8]
   130ac:	bl	aed0 <__ctype_b_loc@plt>
   130b0:	ldr	x8, [x0]
   130b4:	ldr	x9, [sp, #8]
   130b8:	ldr	x9, [x9]
   130bc:	ldrb	w10, [x9]
   130c0:	ldrh	w10, [x8, w10, sxtw #1]
   130c4:	and	w10, w10, #0x2000
   130c8:	cbz	w10, 130e0 <argp_failure@@Base+0x243c>
   130cc:	ldr	x8, [sp, #8]
   130d0:	ldr	x9, [x8]
   130d4:	add	x9, x9, #0x1
   130d8:	str	x9, [x8]
   130dc:	b	130ac <argp_failure@@Base+0x2408>
   130e0:	ldr	x8, [sp, #8]
   130e4:	ldr	x8, [x8]
   130e8:	ldrb	w9, [x8]
   130ec:	cmp	w9, #0x2d
   130f0:	cset	w9, ne  // ne = any
   130f4:	and	w9, w9, #0x1
   130f8:	str	w9, [sp, #4]
   130fc:	ldr	x8, [sp, #8]
   13100:	ldr	x8, [x8]
   13104:	ldrb	w9, [x8]
   13108:	mov	w10, #0x0                   	// #0
   1310c:	str	w10, [sp]
   13110:	cbz	w9, 1313c <argp_failure@@Base+0x2498>
   13114:	bl	aed0 <__ctype_b_loc@plt>
   13118:	ldr	x8, [x0]
   1311c:	ldr	x9, [sp, #8]
   13120:	ldr	x9, [x9]
   13124:	ldrb	w10, [x9]
   13128:	ldrh	w10, [x8, w10, sxtw #1]
   1312c:	tst	w10, #0x8
   13130:	cset	w10, ne  // ne = any
   13134:	eor	w10, w10, #0x1
   13138:	str	w10, [sp]
   1313c:	ldr	w8, [sp]
   13140:	tbnz	w8, #0, 13148 <argp_failure@@Base+0x24a4>
   13144:	b	1315c <argp_failure@@Base+0x24b8>
   13148:	ldr	x8, [sp, #8]
   1314c:	ldr	x9, [x8]
   13150:	add	x9, x9, #0x1
   13154:	str	x9, [x8]
   13158:	b	130fc <argp_failure@@Base+0x2458>
   1315c:	ldr	w0, [sp, #4]
   13160:	ldp	x29, x30, [sp, #16]
   13164:	add	sp, sp, #0x20
   13168:	ret
   1316c:	sub	sp, sp, #0x60
   13170:	stp	x29, x30, [sp, #80]
   13174:	add	x29, sp, #0x50
   13178:	stur	x0, [x29, #-8]
   1317c:	stur	x1, [x29, #-16]
   13180:	stur	x2, [x29, #-24]
   13184:	stur	x3, [x29, #-32]
   13188:	str	wzr, [sp, #40]
   1318c:	ldur	x8, [x29, #-8]
   13190:	ldr	x8, [x8]
   13194:	str	x8, [sp, #24]
   13198:	ldur	x8, [x29, #-8]
   1319c:	ldr	x8, [x8, #16]
   131a0:	str	x8, [sp, #16]
   131a4:	ldr	x8, [sp, #24]
   131a8:	str	x8, [sp, #32]
   131ac:	ldur	x8, [x29, #-8]
   131b0:	ldr	w9, [x8, #8]
   131b4:	stur	w9, [x29, #-36]
   131b8:	ldur	w8, [x29, #-36]
   131bc:	cmp	w8, #0x0
   131c0:	cset	w8, ls  // ls = plast
   131c4:	mov	w9, #0x0                   	// #0
   131c8:	str	w9, [sp, #12]
   131cc:	tbnz	w8, #0, 131e4 <argp_failure@@Base+0x2540>
   131d0:	ldr	w8, [sp, #40]
   131d4:	cmp	w8, #0x0
   131d8:	cset	w8, ne  // ne = any
   131dc:	eor	w8, w8, #0x1
   131e0:	str	w8, [sp, #12]
   131e4:	ldr	w8, [sp, #12]
   131e8:	tbnz	w8, #0, 131f0 <argp_failure@@Base+0x254c>
   131ec:	b	13280 <argp_failure@@Base+0x25dc>
   131f0:	ldr	x0, [sp, #32]
   131f4:	bl	b110 <_option_is_short@plt>
   131f8:	cbz	w0, 13264 <argp_failure@@Base+0x25c0>
   131fc:	ldr	x8, [sp, #16]
   13200:	ldrb	w9, [x8]
   13204:	ldr	x8, [sp, #32]
   13208:	ldr	w10, [x8, #8]
   1320c:	cmp	w9, w10
   13210:	b.ne	13264 <argp_failure@@Base+0x25c0>  // b.any
   13214:	ldr	x8, [sp, #32]
   13218:	ldr	w9, [x8, #24]
   1321c:	and	w9, w9, #0x4
   13220:	cbnz	w9, 1322c <argp_failure@@Base+0x2588>
   13224:	ldr	x8, [sp, #32]
   13228:	str	x8, [sp, #24]
   1322c:	ldr	x8, [sp, #32]
   13230:	ldr	w9, [x8, #24]
   13234:	and	w9, w9, #0x2
   13238:	cbnz	w9, 13258 <argp_failure@@Base+0x25b4>
   1323c:	ldur	x8, [x29, #-16]
   13240:	ldr	x0, [sp, #32]
   13244:	ldr	x1, [sp, #24]
   13248:	ldur	x2, [x29, #-24]
   1324c:	ldur	x3, [x29, #-32]
   13250:	blr	x8
   13254:	str	w0, [sp, #40]
   13258:	ldr	x8, [sp, #16]
   1325c:	add	x8, x8, #0x1
   13260:	str	x8, [sp, #16]
   13264:	ldr	x8, [sp, #32]
   13268:	add	x8, x8, #0x30
   1326c:	str	x8, [sp, #32]
   13270:	ldur	w9, [x29, #-36]
   13274:	subs	w9, w9, #0x1
   13278:	stur	w9, [x29, #-36]
   1327c:	b	131b8 <argp_failure@@Base+0x2514>
   13280:	ldr	w0, [sp, #40]
   13284:	ldp	x29, x30, [sp, #80]
   13288:	add	sp, sp, #0x60
   1328c:	ret
   13290:	sub	sp, sp, #0x40
   13294:	stp	x29, x30, [sp, #48]
   13298:	add	x29, sp, #0x30
   1329c:	stur	x0, [x29, #-8]
   132a0:	stur	x1, [x29, #-16]
   132a4:	str	x2, [sp, #24]
   132a8:	str	x3, [sp, #16]
   132ac:	ldur	x0, [x29, #-8]
   132b0:	bl	b110 <_option_is_short@plt>
   132b4:	cbz	w0, 132c8 <argp_failure@@Base+0x2624>
   132b8:	ldur	x8, [x29, #-8]
   132bc:	ldr	w9, [x8, #8]
   132c0:	str	w9, [sp, #12]
   132c4:	b	132d0 <argp_failure@@Base+0x262c>
   132c8:	mov	w8, wzr
   132cc:	str	w8, [sp, #12]
   132d0:	ldr	w8, [sp, #12]
   132d4:	mov	w0, w8
   132d8:	ldp	x29, x30, [sp, #48]
   132dc:	add	sp, sp, #0x40
   132e0:	ret
   132e4:	sub	sp, sp, #0x30
   132e8:	str	x0, [sp, #40]
   132ec:	str	x1, [sp, #32]
   132f0:	str	x2, [sp, #24]
   132f4:	str	x3, [sp, #16]
   132f8:	ldr	x8, [sp, #16]
   132fc:	str	x8, [sp, #8]
   13300:	ldr	x8, [sp, #40]
   13304:	ldr	x8, [x8, #16]
   13308:	cbnz	x8, 13350 <argp_failure@@Base+0x26ac>
   1330c:	ldr	x8, [sp, #32]
   13310:	ldr	x8, [x8, #16]
   13314:	cbnz	x8, 13350 <argp_failure@@Base+0x26ac>
   13318:	ldr	x8, [sp, #40]
   1331c:	ldr	w9, [x8, #24]
   13320:	ldr	x8, [sp, #32]
   13324:	ldr	w10, [x8, #24]
   13328:	orr	w9, w9, w10
   1332c:	and	w9, w9, #0x10
   13330:	cbnz	w9, 13350 <argp_failure@@Base+0x26ac>
   13334:	ldr	x8, [sp, #40]
   13338:	ldr	w9, [x8, #8]
   1333c:	ldr	x8, [sp, #8]
   13340:	ldr	x10, [x8]
   13344:	add	x11, x10, #0x1
   13348:	str	x11, [x8]
   1334c:	strb	w9, [x10]
   13350:	mov	w8, wzr
   13354:	mov	w0, w8
   13358:	add	sp, sp, #0x30
   1335c:	ret
   13360:	sub	sp, sp, #0x50
   13364:	stp	x29, x30, [sp, #64]
   13368:	add	x29, sp, #0x40
   1336c:	stur	x0, [x29, #-8]
   13370:	stur	x1, [x29, #-16]
   13374:	stur	x2, [x29, #-24]
   13378:	str	x3, [sp, #32]
   1337c:	ldr	x8, [sp, #32]
   13380:	str	x8, [sp, #24]
   13384:	ldur	x8, [x29, #-8]
   13388:	ldr	x8, [x8, #16]
   1338c:	str	x8, [sp, #16]
   13390:	ldur	x8, [x29, #-8]
   13394:	ldr	w9, [x8, #24]
   13398:	ldur	x8, [x29, #-16]
   1339c:	ldr	w10, [x8, #24]
   133a0:	orr	w9, w9, w10
   133a4:	str	w9, [sp, #12]
   133a8:	ldr	x8, [sp, #16]
   133ac:	cbnz	x8, 133bc <argp_failure@@Base+0x2718>
   133b0:	ldur	x8, [x29, #-16]
   133b4:	ldr	x8, [x8, #16]
   133b8:	str	x8, [sp, #16]
   133bc:	ldr	x8, [sp, #16]
   133c0:	cbz	x8, 13448 <argp_failure@@Base+0x27a4>
   133c4:	ldr	w8, [sp, #12]
   133c8:	and	w8, w8, #0x10
   133cc:	cbnz	w8, 13448 <argp_failure@@Base+0x27a4>
   133d0:	ldur	x0, [x29, #-24]
   133d4:	ldr	x1, [sp, #16]
   133d8:	bl	b000 <dgettext@plt>
   133dc:	str	x0, [sp, #16]
   133e0:	ldr	w8, [sp, #12]
   133e4:	and	w8, w8, #0x1
   133e8:	cbz	w8, 1340c <argp_failure@@Base+0x2768>
   133ec:	ldr	x0, [sp, #24]
   133f0:	ldur	x8, [x29, #-8]
   133f4:	ldr	w2, [x8, #8]
   133f8:	ldr	x3, [sp, #16]
   133fc:	adrp	x1, 45000 <vasnprintf@@Base+0x2e4c>
   13400:	add	x1, x1, #0x52
   13404:	bl	b010 <argp_fmtstream_printf@plt>
   13408:	b	13448 <argp_failure@@Base+0x27a4>
   1340c:	ldr	x0, [sp, #24]
   13410:	ldr	x8, [sp, #16]
   13414:	str	x0, [sp]
   13418:	mov	x0, x8
   1341c:	bl	a8e0 <strlen@plt>
   13420:	add	x1, x0, #0x6
   13424:	ldr	x0, [sp]
   13428:	bl	13554 <argp_failure@@Base+0x28b0>
   1342c:	ldr	x0, [sp, #24]
   13430:	ldur	x8, [x29, #-8]
   13434:	ldr	w2, [x8, #8]
   13438:	ldr	x3, [sp, #16]
   1343c:	adrp	x1, 45000 <vasnprintf@@Base+0x2e4c>
   13440:	add	x1, x1, #0x5d
   13444:	bl	b010 <argp_fmtstream_printf@plt>
   13448:	mov	w8, wzr
   1344c:	mov	w0, w8
   13450:	ldp	x29, x30, [sp, #64]
   13454:	add	sp, sp, #0x50
   13458:	ret
   1345c:	sub	sp, sp, #0x50
   13460:	stp	x29, x30, [sp, #64]
   13464:	add	x29, sp, #0x40
   13468:	stur	x0, [x29, #-8]
   1346c:	stur	x1, [x29, #-16]
   13470:	stur	x2, [x29, #-24]
   13474:	str	x3, [sp, #32]
   13478:	ldr	x8, [sp, #32]
   1347c:	str	x8, [sp, #24]
   13480:	ldur	x8, [x29, #-8]
   13484:	ldr	x8, [x8, #16]
   13488:	str	x8, [sp, #16]
   1348c:	ldur	x8, [x29, #-8]
   13490:	ldr	w9, [x8, #24]
   13494:	ldur	x8, [x29, #-16]
   13498:	ldr	w10, [x8, #24]
   1349c:	orr	w9, w9, w10
   134a0:	str	w9, [sp, #12]
   134a4:	ldr	x8, [sp, #16]
   134a8:	cbnz	x8, 134b8 <argp_failure@@Base+0x2814>
   134ac:	ldur	x8, [x29, #-16]
   134b0:	ldr	x8, [x8, #16]
   134b4:	str	x8, [sp, #16]
   134b8:	ldr	w8, [sp, #12]
   134bc:	and	w8, w8, #0x10
   134c0:	cbnz	w8, 13540 <argp_failure@@Base+0x289c>
   134c4:	ldr	x8, [sp, #16]
   134c8:	cbz	x8, 13528 <argp_failure@@Base+0x2884>
   134cc:	ldur	x0, [x29, #-24]
   134d0:	ldr	x1, [sp, #16]
   134d4:	bl	b000 <dgettext@plt>
   134d8:	str	x0, [sp, #16]
   134dc:	ldr	w8, [sp, #12]
   134e0:	and	w8, w8, #0x1
   134e4:	cbz	w8, 13508 <argp_failure@@Base+0x2864>
   134e8:	ldr	x0, [sp, #24]
   134ec:	ldur	x8, [x29, #-8]
   134f0:	ldr	x2, [x8]
   134f4:	ldr	x3, [sp, #16]
   134f8:	adrp	x1, 45000 <vasnprintf@@Base+0x2e4c>
   134fc:	add	x1, x1, #0x66
   13500:	bl	b010 <argp_fmtstream_printf@plt>
   13504:	b	13524 <argp_failure@@Base+0x2880>
   13508:	ldr	x0, [sp, #24]
   1350c:	ldur	x8, [x29, #-8]
   13510:	ldr	x2, [x8]
   13514:	ldr	x3, [sp, #16]
   13518:	adrp	x1, 45000 <vasnprintf@@Base+0x2e4c>
   1351c:	add	x1, x1, #0x73
   13520:	bl	b010 <argp_fmtstream_printf@plt>
   13524:	b	13540 <argp_failure@@Base+0x289c>
   13528:	ldr	x0, [sp, #24]
   1352c:	ldur	x8, [x29, #-8]
   13530:	ldr	x2, [x8]
   13534:	adrp	x1, 45000 <vasnprintf@@Base+0x2e4c>
   13538:	add	x1, x1, #0x7e
   1353c:	bl	b010 <argp_fmtstream_printf@plt>
   13540:	mov	w8, wzr
   13544:	mov	w0, w8
   13548:	ldp	x29, x30, [sp, #64]
   1354c:	add	sp, sp, #0x50
   13550:	ret
   13554:	sub	sp, sp, #0x20
   13558:	stp	x29, x30, [sp, #16]
   1355c:	add	x29, sp, #0x10
   13560:	str	x0, [sp, #8]
   13564:	str	x1, [sp]
   13568:	ldr	x0, [sp, #8]
   1356c:	bl	b0f0 <argp_fmtstream_point@plt>
   13570:	ldr	x8, [sp]
   13574:	add	x8, x0, x8
   13578:	ldr	x9, [sp, #8]
   1357c:	ldr	x9, [x9, #16]
   13580:	cmp	x8, x9
   13584:	b.cc	13598 <argp_failure@@Base+0x28f4>  // b.lo, b.ul, b.last
   13588:	ldr	x0, [sp, #8]
   1358c:	mov	w1, #0xa                   	// #10
   13590:	bl	b040 <argp_fmtstream_putc@plt>
   13594:	b	135a4 <argp_failure@@Base+0x2900>
   13598:	ldr	x0, [sp, #8]
   1359c:	mov	w1, #0x20                  	// #32
   135a0:	bl	b040 <argp_fmtstream_putc@plt>
   135a4:	ldp	x29, x30, [sp, #16]
   135a8:	add	sp, sp, #0x20
   135ac:	ret
   135b0:	sub	sp, sp, #0x40
   135b4:	stp	x29, x30, [sp, #48]
   135b8:	add	x29, sp, #0x30
   135bc:	stur	x0, [x29, #-16]
   135c0:	stur	w1, [x29, #-20]
   135c4:	str	x2, [sp, #16]
   135c8:	str	x3, [sp, #8]
   135cc:	ldr	x8, [sp, #16]
   135d0:	cbz	x8, 13610 <argp_failure@@Base+0x296c>
   135d4:	ldr	x8, [sp, #16]
   135d8:	ldr	x8, [x8, #40]
   135dc:	cbz	x8, 13610 <argp_failure@@Base+0x296c>
   135e0:	ldr	x0, [sp, #16]
   135e4:	ldr	x1, [sp, #8]
   135e8:	bl	b0e0 <_argp_input@plt>
   135ec:	str	x0, [sp]
   135f0:	ldr	x8, [sp, #16]
   135f4:	ldr	x8, [x8, #40]
   135f8:	ldur	w0, [x29, #-20]
   135fc:	ldur	x1, [x29, #-16]
   13600:	ldr	x2, [sp]
   13604:	blr	x8
   13608:	stur	x0, [x29, #-8]
   1360c:	b	13618 <argp_failure@@Base+0x2974>
   13610:	ldur	x8, [x29, #-16]
   13614:	stur	x8, [x29, #-8]
   13618:	ldur	x0, [x29, #-8]
   1361c:	ldp	x29, x30, [sp, #48]
   13620:	add	sp, sp, #0x40
   13624:	ret
   13628:	sub	sp, sp, #0x120
   1362c:	stp	x29, x30, [sp, #256]
   13630:	str	x28, [sp, #272]
   13634:	add	x29, sp, #0x100
   13638:	sub	x8, x29, #0x8
   1363c:	mov	x9, xzr
   13640:	mov	w10, #0x1                   	// #1
   13644:	adrp	x11, 61000 <gl_rbtree_list_implementation@@Base+0x1468>
   13648:	add	x11, x11, #0x368
   1364c:	sub	x12, x29, #0x78
   13650:	str	x0, [x8]
   13654:	stur	x1, [x29, #-16]
   13658:	stur	x2, [x29, #-24]
   1365c:	stur	x3, [x29, #-32]
   13660:	ldr	x13, [x8]
   13664:	ldr	x13, [x13]
   13668:	stur	x13, [x29, #-48]
   1366c:	ldr	x13, [x8]
   13670:	ldr	x13, [x13, #16]
   13674:	stur	x13, [x29, #-64]
   13678:	stur	wzr, [x29, #-68]
   1367c:	ldur	x0, [x29, #-24]
   13680:	mov	x1, x9
   13684:	str	x8, [sp, #104]
   13688:	str	w10, [sp, #100]
   1368c:	str	x11, [sp, #88]
   13690:	str	x12, [sp, #80]
   13694:	bl	b020 <argp_fmtstream_set_lmargin@plt>
   13698:	stur	w0, [x29, #-72]
   1369c:	ldur	x8, [x29, #-24]
   136a0:	ldr	x8, [x8, #24]
   136a4:	stur	w8, [x29, #-76]
   136a8:	ldr	x9, [sp, #104]
   136ac:	ldr	x11, [x9]
   136b0:	stur	x11, [x29, #-120]
   136b4:	ldur	x11, [x29, #-24]
   136b8:	ldr	x12, [sp, #80]
   136bc:	str	x11, [x12, #8]
   136c0:	ldur	x11, [x29, #-32]
   136c4:	str	x11, [x12, #16]
   136c8:	ldr	w8, [sp, #100]
   136cc:	stur	w8, [x29, #-96]
   136d0:	ldur	x11, [x29, #-16]
   136d4:	str	x11, [x12, #32]
   136d8:	ldur	x11, [x29, #-48]
   136dc:	ldr	w10, [x11, #24]
   136e0:	and	w10, w10, #0x8
   136e4:	cbnz	w10, 13754 <argp_failure@@Base+0x2ab0>
   136e8:	ldur	x8, [x29, #-48]
   136ec:	stur	x8, [x29, #-56]
   136f0:	ldr	x8, [sp, #104]
   136f4:	ldr	x9, [x8]
   136f8:	ldr	w10, [x9, #8]
   136fc:	stur	w10, [x29, #-36]
   13700:	ldur	w8, [x29, #-36]
   13704:	cmp	w8, #0x0
   13708:	cset	w8, ls  // ls = plast
   1370c:	tbnz	w8, #0, 13754 <argp_failure@@Base+0x2ab0>
   13710:	ldur	x8, [x29, #-56]
   13714:	ldr	x8, [x8]
   13718:	cbz	x8, 13738 <argp_failure@@Base+0x2a94>
   1371c:	ldur	x8, [x29, #-56]
   13720:	ldr	w9, [x8, #24]
   13724:	and	w9, w9, #0x2
   13728:	cbnz	w9, 13738 <argp_failure@@Base+0x2a94>
   1372c:	mov	w8, #0x1                   	// #1
   13730:	stur	w8, [x29, #-68]
   13734:	b	13754 <argp_failure@@Base+0x2ab0>
   13738:	ldur	x8, [x29, #-56]
   1373c:	add	x8, x8, #0x30
   13740:	stur	x8, [x29, #-56]
   13744:	ldur	w9, [x29, #-36]
   13748:	subs	w9, w9, #0x1
   1374c:	stur	w9, [x29, #-36]
   13750:	b	13700 <argp_failure@@Base+0x2a5c>
   13754:	ldur	x0, [x29, #-24]
   13758:	ldr	x8, [sp, #88]
   1375c:	ldrsw	x1, [x8, #8]
   13760:	bl	aff0 <argp_fmtstream_set_wmargin@plt>
   13764:	ldur	x8, [x29, #-48]
   13768:	stur	x8, [x29, #-56]
   1376c:	ldr	x8, [sp, #104]
   13770:	ldr	x9, [x8]
   13774:	ldr	w10, [x9, #8]
   13778:	stur	w10, [x29, #-36]
   1377c:	ldur	w8, [x29, #-36]
   13780:	cmp	w8, #0x0
   13784:	cset	w8, ls  // ls = plast
   13788:	tbnz	w8, #0, 1389c <argp_failure@@Base+0x2bf8>
   1378c:	ldur	x0, [x29, #-56]
   13790:	bl	b110 <_option_is_short@plt>
   13794:	cbz	w0, 13880 <argp_failure@@Base+0x2bdc>
   13798:	ldur	x8, [x29, #-56]
   1379c:	ldr	w9, [x8, #8]
   137a0:	ldur	x8, [x29, #-64]
   137a4:	ldrb	w10, [x8]
   137a8:	cmp	w9, w10
   137ac:	b.ne	13880 <argp_failure@@Base+0x2bdc>  // b.any
   137b0:	ldur	x8, [x29, #-56]
   137b4:	ldr	w9, [x8, #24]
   137b8:	and	w9, w9, #0x2
   137bc:	cbnz	w9, 13874 <argp_failure@@Base+0x2bd0>
   137c0:	ldr	x8, [sp, #88]
   137c4:	ldr	w0, [x8, #8]
   137c8:	sub	x1, x29, #0x78
   137cc:	bl	13c7c <argp_failure@@Base+0x2fd8>
   137d0:	ldur	x0, [x29, #-24]
   137d4:	mov	w1, #0x2d                  	// #45
   137d8:	bl	b040 <argp_fmtstream_putc@plt>
   137dc:	ldur	x8, [x29, #-24]
   137e0:	ldur	x9, [x29, #-64]
   137e4:	ldrb	w1, [x9]
   137e8:	mov	x0, x8
   137ec:	bl	b040 <argp_fmtstream_putc@plt>
   137f0:	ldur	w10, [x29, #-68]
   137f4:	cbz	w10, 13804 <argp_failure@@Base+0x2b60>
   137f8:	ldr	x8, [sp, #88]
   137fc:	ldr	w9, [x8]
   13800:	cbz	w9, 1385c <argp_failure@@Base+0x2bb8>
   13804:	ldur	x0, [x29, #-48]
   13808:	ldur	x8, [x29, #-16]
   1380c:	str	x0, [sp, #72]
   13810:	cbnz	x8, 13820 <argp_failure@@Base+0x2b7c>
   13814:	mov	x8, xzr
   13818:	str	x8, [sp, #64]
   1381c:	b	13834 <argp_failure@@Base+0x2b90>
   13820:	ldr	x8, [sp, #104]
   13824:	ldr	x9, [x8]
   13828:	ldr	x9, [x9, #40]
   1382c:	ldr	x9, [x9, #48]
   13830:	str	x9, [sp, #64]
   13834:	ldr	x8, [sp, #64]
   13838:	ldur	x4, [x29, #-24]
   1383c:	ldr	x0, [sp, #72]
   13840:	adrp	x1, 45000 <vasnprintf@@Base+0x2e4c>
   13844:	add	x1, x1, #0xfa
   13848:	adrp	x2, 45000 <vasnprintf@@Base+0x2e4c>
   1384c:	add	x2, x2, #0xfe
   13850:	mov	x3, x8
   13854:	bl	13dc8 <argp_failure@@Base+0x3124>
   13858:	b	13874 <argp_failure@@Base+0x2bd0>
   1385c:	ldur	x8, [x29, #-48]
   13860:	ldr	x8, [x8, #16]
   13864:	cbz	x8, 13874 <argp_failure@@Base+0x2bd0>
   13868:	ldur	x8, [x29, #-32]
   1386c:	mov	w9, #0x1                   	// #1
   13870:	str	w9, [x8, #12]
   13874:	ldur	x8, [x29, #-64]
   13878:	add	x8, x8, #0x1
   1387c:	stur	x8, [x29, #-64]
   13880:	ldur	x8, [x29, #-56]
   13884:	add	x8, x8, #0x30
   13888:	stur	x8, [x29, #-56]
   1388c:	ldur	w9, [x29, #-36]
   13890:	subs	w9, w9, #0x1
   13894:	stur	w9, [x29, #-36]
   13898:	b	1377c <argp_failure@@Base+0x2ad8>
   1389c:	ldur	x8, [x29, #-48]
   138a0:	ldr	w9, [x8, #24]
   138a4:	and	w9, w9, #0x8
   138a8:	cbz	w9, 13988 <argp_failure@@Base+0x2ce4>
   138ac:	ldur	x0, [x29, #-24]
   138b0:	ldr	x8, [sp, #88]
   138b4:	ldrsw	x1, [x8, #16]
   138b8:	bl	aff0 <argp_fmtstream_set_wmargin@plt>
   138bc:	ldur	x8, [x29, #-48]
   138c0:	stur	x8, [x29, #-56]
   138c4:	ldr	x8, [sp, #104]
   138c8:	ldr	x9, [x8]
   138cc:	ldr	w10, [x9, #8]
   138d0:	stur	w10, [x29, #-36]
   138d4:	ldur	w8, [x29, #-36]
   138d8:	cmp	w8, #0x0
   138dc:	cset	w8, ls  // ls = plast
   138e0:	tbnz	w8, #0, 13984 <argp_failure@@Base+0x2ce0>
   138e4:	ldur	x8, [x29, #-56]
   138e8:	ldr	x8, [x8]
   138ec:	cbz	x8, 13968 <argp_failure@@Base+0x2cc4>
   138f0:	ldur	x8, [x29, #-56]
   138f4:	ldr	w9, [x8, #24]
   138f8:	and	w9, w9, #0x2
   138fc:	cbnz	w9, 13968 <argp_failure@@Base+0x2cc4>
   13900:	ldr	x8, [sp, #88]
   13904:	ldr	w0, [x8, #16]
   13908:	sub	x1, x29, #0x78
   1390c:	bl	13c7c <argp_failure@@Base+0x2fd8>
   13910:	ldur	x0, [x29, #-24]
   13914:	ldur	x8, [x29, #-16]
   13918:	str	x0, [sp, #56]
   1391c:	cbnz	x8, 1392c <argp_failure@@Base+0x2c88>
   13920:	mov	x8, xzr
   13924:	str	x8, [sp, #48]
   13928:	b	13940 <argp_failure@@Base+0x2c9c>
   1392c:	ldr	x8, [sp, #104]
   13930:	ldr	x9, [x8]
   13934:	ldr	x9, [x9, #40]
   13938:	ldr	x9, [x9, #48]
   1393c:	str	x9, [sp, #48]
   13940:	ldr	x8, [sp, #48]
   13944:	ldur	x9, [x29, #-56]
   13948:	ldr	x1, [x9]
   1394c:	mov	x0, x8
   13950:	bl	b000 <dgettext@plt>
   13954:	ldr	x8, [sp, #56]
   13958:	str	x0, [sp, #40]
   1395c:	mov	x0, x8
   13960:	ldr	x1, [sp, #40]
   13964:	bl	b030 <argp_fmtstream_puts@plt>
   13968:	ldur	x8, [x29, #-56]
   1396c:	add	x8, x8, #0x30
   13970:	stur	x8, [x29, #-56]
   13974:	ldur	w9, [x29, #-36]
   13978:	subs	w9, w9, #0x1
   1397c:	stur	w9, [x29, #-36]
   13980:	b	138d4 <argp_failure@@Base+0x2c30>
   13984:	b	13a74 <argp_failure@@Base+0x2dd0>
   13988:	ldur	x0, [x29, #-24]
   1398c:	ldr	x8, [sp, #88]
   13990:	ldrsw	x1, [x8, #12]
   13994:	bl	aff0 <argp_fmtstream_set_wmargin@plt>
   13998:	ldur	x8, [x29, #-48]
   1399c:	stur	x8, [x29, #-56]
   139a0:	ldr	x8, [sp, #104]
   139a4:	ldr	x9, [x8]
   139a8:	ldr	w10, [x9, #8]
   139ac:	stur	w10, [x29, #-36]
   139b0:	ldur	w8, [x29, #-36]
   139b4:	cmp	w8, #0x0
   139b8:	cset	w8, ls  // ls = plast
   139bc:	tbnz	w8, #0, 13a74 <argp_failure@@Base+0x2dd0>
   139c0:	ldur	x8, [x29, #-56]
   139c4:	ldr	x8, [x8]
   139c8:	cbz	x8, 13a58 <argp_failure@@Base+0x2db4>
   139cc:	ldur	x8, [x29, #-56]
   139d0:	ldr	w9, [x8, #24]
   139d4:	and	w9, w9, #0x2
   139d8:	cbnz	w9, 13a58 <argp_failure@@Base+0x2db4>
   139dc:	ldr	x8, [sp, #88]
   139e0:	ldr	w0, [x8, #12]
   139e4:	sub	x1, x29, #0x78
   139e8:	bl	13c7c <argp_failure@@Base+0x2fd8>
   139ec:	ldur	x0, [x29, #-24]
   139f0:	ldur	x8, [x29, #-56]
   139f4:	ldr	x2, [x8]
   139f8:	adrp	x1, 45000 <vasnprintf@@Base+0x2e4c>
   139fc:	add	x1, x1, #0x103
   13a00:	bl	b010 <argp_fmtstream_printf@plt>
   13a04:	ldur	x8, [x29, #-48]
   13a08:	ldur	x9, [x29, #-16]
   13a0c:	str	x8, [sp, #32]
   13a10:	cbnz	x9, 13a20 <argp_failure@@Base+0x2d7c>
   13a14:	mov	x8, xzr
   13a18:	str	x8, [sp, #24]
   13a1c:	b	13a34 <argp_failure@@Base+0x2d90>
   13a20:	ldr	x8, [sp, #104]
   13a24:	ldr	x9, [x8]
   13a28:	ldr	x9, [x9, #40]
   13a2c:	ldr	x9, [x9, #48]
   13a30:	str	x9, [sp, #24]
   13a34:	ldr	x8, [sp, #24]
   13a38:	ldur	x4, [x29, #-24]
   13a3c:	ldr	x0, [sp, #32]
   13a40:	adrp	x1, 45000 <vasnprintf@@Base+0x2e4c>
   13a44:	add	x1, x1, #0x108
   13a48:	adrp	x2, 45000 <vasnprintf@@Base+0x2e4c>
   13a4c:	add	x2, x2, #0x10c
   13a50:	mov	x3, x8
   13a54:	bl	13dc8 <argp_failure@@Base+0x3124>
   13a58:	ldur	x8, [x29, #-56]
   13a5c:	add	x8, x8, #0x30
   13a60:	stur	x8, [x29, #-56]
   13a64:	ldur	w9, [x29, #-36]
   13a68:	subs	w9, w9, #0x1
   13a6c:	stur	w9, [x29, #-36]
   13a70:	b	139b0 <argp_failure@@Base+0x2d0c>
   13a74:	ldur	x0, [x29, #-24]
   13a78:	mov	x8, xzr
   13a7c:	mov	x1, x8
   13a80:	bl	b020 <argp_fmtstream_set_lmargin@plt>
   13a84:	ldur	w9, [x29, #-96]
   13a88:	cbz	w9, 13acc <argp_failure@@Base+0x2e28>
   13a8c:	ldur	x0, [x29, #-48]
   13a90:	bl	b110 <_option_is_short@plt>
   13a94:	cbnz	w0, 13ac4 <argp_failure@@Base+0x2e20>
   13a98:	ldur	x8, [x29, #-48]
   13a9c:	ldr	x8, [x8]
   13aa0:	cbnz	x8, 13ac4 <argp_failure@@Base+0x2e20>
   13aa4:	ldur	x8, [x29, #-48]
   13aa8:	ldr	x0, [x8, #32]
   13aac:	ldr	x8, [sp, #104]
   13ab0:	ldr	x9, [x8]
   13ab4:	ldr	x1, [x9, #40]
   13ab8:	sub	x2, x29, #0x78
   13abc:	bl	13e94 <argp_failure@@Base+0x31f0>
   13ac0:	b	13ac8 <argp_failure@@Base+0x2e24>
   13ac4:	b	13c50 <argp_failure@@Base+0x2fac>
   13ac8:	b	13c40 <argp_failure@@Base+0x2f9c>
   13acc:	ldur	x8, [x29, #-48]
   13ad0:	ldr	x8, [x8, #32]
   13ad4:	cbz	x8, 13b1c <argp_failure@@Base+0x2e78>
   13ad8:	ldur	x8, [x29, #-16]
   13adc:	cbnz	x8, 13aec <argp_failure@@Base+0x2e48>
   13ae0:	mov	x8, xzr
   13ae4:	str	x8, [sp, #16]
   13ae8:	b	13b00 <argp_failure@@Base+0x2e5c>
   13aec:	ldr	x8, [sp, #104]
   13af0:	ldr	x9, [x8]
   13af4:	ldr	x9, [x9, #40]
   13af8:	ldr	x9, [x9, #48]
   13afc:	str	x9, [sp, #16]
   13b00:	ldr	x8, [sp, #16]
   13b04:	ldur	x9, [x29, #-48]
   13b08:	ldr	x1, [x9, #32]
   13b0c:	mov	x0, x8
   13b10:	bl	b000 <dgettext@plt>
   13b14:	str	x0, [sp, #8]
   13b18:	b	13b24 <argp_failure@@Base+0x2e80>
   13b1c:	mov	x8, xzr
   13b20:	str	x8, [sp, #8]
   13b24:	ldr	x8, [sp, #8]
   13b28:	str	x8, [sp, #128]
   13b2c:	ldr	x0, [sp, #128]
   13b30:	ldur	x8, [x29, #-48]
   13b34:	ldr	w1, [x8, #8]
   13b38:	ldr	x8, [sp, #104]
   13b3c:	ldr	x9, [x8]
   13b40:	ldr	x2, [x9, #40]
   13b44:	ldur	x3, [x29, #-16]
   13b48:	bl	135b0 <argp_failure@@Base+0x290c>
   13b4c:	str	x0, [sp, #120]
   13b50:	ldr	x8, [sp, #120]
   13b54:	cbz	x8, 13c00 <argp_failure@@Base+0x2f5c>
   13b58:	ldr	x8, [sp, #120]
   13b5c:	ldrb	w9, [x8]
   13b60:	cbz	w9, 13c00 <argp_failure@@Base+0x2f5c>
   13b64:	ldur	x0, [x29, #-24]
   13b68:	bl	b0f0 <argp_fmtstream_point@plt>
   13b6c:	str	w0, [sp, #116]
   13b70:	ldur	x0, [x29, #-24]
   13b74:	ldr	x8, [sp, #88]
   13b78:	ldrsw	x1, [x8, #20]
   13b7c:	bl	b020 <argp_fmtstream_set_lmargin@plt>
   13b80:	ldur	x8, [x29, #-24]
   13b84:	ldr	x9, [sp, #88]
   13b88:	ldrsw	x1, [x9, #20]
   13b8c:	mov	x0, x8
   13b90:	bl	aff0 <argp_fmtstream_set_wmargin@plt>
   13b94:	ldr	w10, [sp, #116]
   13b98:	ldr	x8, [sp, #88]
   13b9c:	ldr	w11, [x8, #20]
   13ba0:	add	w11, w11, #0x3
   13ba4:	cmp	w10, w11
   13ba8:	b.ls	13bbc <argp_failure@@Base+0x2f18>  // b.plast
   13bac:	ldur	x0, [x29, #-24]
   13bb0:	mov	w1, #0xa                   	// #10
   13bb4:	bl	b040 <argp_fmtstream_putc@plt>
   13bb8:	b	13bf4 <argp_failure@@Base+0x2f50>
   13bbc:	ldr	w8, [sp, #116]
   13bc0:	ldr	x9, [sp, #88]
   13bc4:	ldr	w10, [x9, #20]
   13bc8:	cmp	w8, w10
   13bcc:	b.cc	13be4 <argp_failure@@Base+0x2f40>  // b.lo, b.ul, b.last
   13bd0:	ldur	x0, [x29, #-24]
   13bd4:	adrp	x1, 45000 <vasnprintf@@Base+0x2e4c>
   13bd8:	add	x1, x1, #0x112
   13bdc:	bl	b030 <argp_fmtstream_puts@plt>
   13be0:	b	13bf4 <argp_failure@@Base+0x2f50>
   13be4:	ldur	x0, [x29, #-24]
   13be8:	ldr	x8, [sp, #88]
   13bec:	ldr	w1, [x8, #20]
   13bf0:	bl	13ff0 <argp_failure@@Base+0x334c>
   13bf4:	ldur	x0, [x29, #-24]
   13bf8:	ldr	x1, [sp, #120]
   13bfc:	bl	b030 <argp_fmtstream_puts@plt>
   13c00:	ldr	x8, [sp, #120]
   13c04:	cbz	x8, 13c20 <argp_failure@@Base+0x2f7c>
   13c08:	ldr	x8, [sp, #120]
   13c0c:	ldr	x9, [sp, #128]
   13c10:	cmp	x8, x9
   13c14:	b.eq	13c20 <argp_failure@@Base+0x2f7c>  // b.none
   13c18:	ldr	x0, [sp, #120]
   13c1c:	bl	a930 <free@plt>
   13c20:	ldur	x0, [x29, #-24]
   13c24:	mov	x8, xzr
   13c28:	mov	x1, x8
   13c2c:	bl	b020 <argp_fmtstream_set_lmargin@plt>
   13c30:	ldur	x8, [x29, #-24]
   13c34:	mov	x0, x8
   13c38:	mov	w1, #0xa                   	// #10
   13c3c:	bl	b040 <argp_fmtstream_putc@plt>
   13c40:	ldr	x8, [sp, #104]
   13c44:	ldr	x9, [x8]
   13c48:	ldur	x10, [x29, #-32]
   13c4c:	str	x9, [x10]
   13c50:	ldur	x0, [x29, #-24]
   13c54:	ldursw	x1, [x29, #-72]
   13c58:	bl	b020 <argp_fmtstream_set_lmargin@plt>
   13c5c:	ldur	x8, [x29, #-24]
   13c60:	ldursw	x1, [x29, #-76]
   13c64:	mov	x0, x8
   13c68:	bl	aff0 <argp_fmtstream_set_wmargin@plt>
   13c6c:	ldr	x28, [sp, #272]
   13c70:	ldp	x29, x30, [sp, #256]
   13c74:	add	sp, sp, #0x120
   13c78:	ret
   13c7c:	sub	sp, sp, #0x40
   13c80:	stp	x29, x30, [sp, #48]
   13c84:	add	x29, sp, #0x30
   13c88:	stur	w0, [x29, #-4]
   13c8c:	stur	x1, [x29, #-16]
   13c90:	ldur	x8, [x29, #-16]
   13c94:	ldr	w9, [x8, #24]
   13c98:	cbz	w9, 13d98 <argp_failure@@Base+0x30f4>
   13c9c:	ldur	x8, [x29, #-16]
   13ca0:	ldr	x8, [x8, #16]
   13ca4:	ldr	x8, [x8]
   13ca8:	str	x8, [sp, #24]
   13cac:	ldur	x8, [x29, #-16]
   13cb0:	ldr	x8, [x8]
   13cb4:	ldr	x8, [x8, #32]
   13cb8:	str	x8, [sp, #16]
   13cbc:	ldur	x8, [x29, #-16]
   13cc0:	ldr	x8, [x8, #16]
   13cc4:	ldr	w9, [x8, #8]
   13cc8:	cbz	w9, 13d00 <argp_failure@@Base+0x305c>
   13ccc:	ldr	x8, [sp, #24]
   13cd0:	cbz	x8, 13d00 <argp_failure@@Base+0x305c>
   13cd4:	ldur	x8, [x29, #-16]
   13cd8:	ldr	x8, [x8]
   13cdc:	ldr	w9, [x8, #24]
   13ce0:	ldr	x8, [sp, #24]
   13ce4:	ldr	w10, [x8, #24]
   13ce8:	cmp	w9, w10
   13cec:	b.eq	13d00 <argp_failure@@Base+0x305c>  // b.none
   13cf0:	ldur	x8, [x29, #-16]
   13cf4:	ldr	x0, [x8, #8]
   13cf8:	mov	w1, #0xa                   	// #10
   13cfc:	bl	b040 <argp_fmtstream_putc@plt>
   13d00:	ldr	x8, [sp, #16]
   13d04:	cbz	x8, 13d8c <argp_failure@@Base+0x30e8>
   13d08:	ldr	x8, [sp, #16]
   13d0c:	ldr	x8, [x8]
   13d10:	cbz	x8, 13d8c <argp_failure@@Base+0x30e8>
   13d14:	ldr	x8, [sp, #16]
   13d18:	ldr	x8, [x8]
   13d1c:	ldrb	w9, [x8]
   13d20:	cbz	w9, 13d8c <argp_failure@@Base+0x30e8>
   13d24:	ldr	x8, [sp, #24]
   13d28:	cbz	x8, 13d54 <argp_failure@@Base+0x30b0>
   13d2c:	ldr	x8, [sp, #24]
   13d30:	ldr	x8, [x8, #32]
   13d34:	ldr	x9, [sp, #16]
   13d38:	cmp	x8, x9
   13d3c:	b.eq	13d8c <argp_failure@@Base+0x30e8>  // b.none
   13d40:	ldr	x8, [sp, #24]
   13d44:	ldr	x0, [x8, #32]
   13d48:	ldr	x1, [sp, #16]
   13d4c:	bl	14058 <argp_failure@@Base+0x33b4>
   13d50:	cbnz	w0, 13d8c <argp_failure@@Base+0x30e8>
   13d54:	ldur	x8, [x29, #-16]
   13d58:	ldr	x8, [x8, #8]
   13d5c:	ldr	x8, [x8, #24]
   13d60:	str	w8, [sp, #12]
   13d64:	ldr	x9, [sp, #16]
   13d68:	ldr	x0, [x9]
   13d6c:	ldr	x9, [sp, #16]
   13d70:	ldr	x1, [x9, #24]
   13d74:	ldur	x2, [x29, #-16]
   13d78:	bl	13e94 <argp_failure@@Base+0x31f0>
   13d7c:	ldur	x9, [x29, #-16]
   13d80:	ldr	x0, [x9, #8]
   13d84:	ldrsw	x1, [sp, #12]
   13d88:	bl	aff0 <argp_fmtstream_set_wmargin@plt>
   13d8c:	ldur	x8, [x29, #-16]
   13d90:	str	wzr, [x8, #24]
   13d94:	b	13dac <argp_failure@@Base+0x3108>
   13d98:	ldur	x8, [x29, #-16]
   13d9c:	ldr	x0, [x8, #8]
   13da0:	adrp	x1, 45000 <vasnprintf@@Base+0x2e4c>
   13da4:	add	x1, x1, #0x116
   13da8:	bl	b030 <argp_fmtstream_puts@plt>
   13dac:	ldur	x8, [x29, #-16]
   13db0:	ldr	x0, [x8, #8]
   13db4:	ldur	w1, [x29, #-4]
   13db8:	bl	13ff0 <argp_failure@@Base+0x334c>
   13dbc:	ldp	x29, x30, [sp, #48]
   13dc0:	add	sp, sp, #0x40
   13dc4:	ret
   13dc8:	sub	sp, sp, #0x70
   13dcc:	stp	x29, x30, [sp, #96]
   13dd0:	add	x29, sp, #0x60
   13dd4:	stur	x0, [x29, #-8]
   13dd8:	stur	x1, [x29, #-16]
   13ddc:	stur	x2, [x29, #-24]
   13de0:	stur	x3, [x29, #-32]
   13de4:	stur	x4, [x29, #-40]
   13de8:	ldur	x8, [x29, #-8]
   13dec:	ldr	x8, [x8, #16]
   13df0:	cbz	x8, 13e88 <argp_failure@@Base+0x31e4>
   13df4:	ldur	x8, [x29, #-8]
   13df8:	ldr	w9, [x8, #24]
   13dfc:	and	w9, w9, #0x1
   13e00:	cbz	w9, 13e48 <argp_failure@@Base+0x31a4>
   13e04:	ldur	x0, [x29, #-40]
   13e08:	ldur	x1, [x29, #-24]
   13e0c:	ldur	x8, [x29, #-32]
   13e10:	ldur	x9, [x29, #-8]
   13e14:	ldr	x9, [x9, #16]
   13e18:	str	x0, [sp, #48]
   13e1c:	mov	x0, x8
   13e20:	str	x1, [sp, #40]
   13e24:	mov	x1, x9
   13e28:	bl	b000 <dgettext@plt>
   13e2c:	ldr	x8, [sp, #48]
   13e30:	str	x0, [sp, #32]
   13e34:	mov	x0, x8
   13e38:	ldr	x1, [sp, #40]
   13e3c:	ldr	x2, [sp, #32]
   13e40:	bl	b010 <argp_fmtstream_printf@plt>
   13e44:	b	13e88 <argp_failure@@Base+0x31e4>
   13e48:	ldur	x0, [x29, #-40]
   13e4c:	ldur	x1, [x29, #-16]
   13e50:	ldur	x8, [x29, #-32]
   13e54:	ldur	x9, [x29, #-8]
   13e58:	ldr	x9, [x9, #16]
   13e5c:	str	x0, [sp, #24]
   13e60:	mov	x0, x8
   13e64:	str	x1, [sp, #16]
   13e68:	mov	x1, x9
   13e6c:	bl	b000 <dgettext@plt>
   13e70:	ldr	x8, [sp, #24]
   13e74:	str	x0, [sp, #8]
   13e78:	mov	x0, x8
   13e7c:	ldr	x1, [sp, #16]
   13e80:	ldr	x2, [sp, #8]
   13e84:	bl	b010 <argp_fmtstream_printf@plt>
   13e88:	ldp	x29, x30, [sp, #96]
   13e8c:	add	sp, sp, #0x70
   13e90:	ret
   13e94:	sub	sp, sp, #0x50
   13e98:	stp	x29, x30, [sp, #64]
   13e9c:	add	x29, sp, #0x40
   13ea0:	adrp	x8, 61000 <gl_rbtree_list_implementation@@Base+0x1468>
   13ea4:	add	x8, x8, #0x368
   13ea8:	stur	x0, [x29, #-8]
   13eac:	stur	x1, [x29, #-16]
   13eb0:	stur	x2, [x29, #-24]
   13eb4:	ldur	x9, [x29, #-8]
   13eb8:	str	x8, [sp, #16]
   13ebc:	cbz	x9, 13ed8 <argp_failure@@Base+0x3234>
   13ec0:	ldur	x8, [x29, #-16]
   13ec4:	ldr	x0, [x8, #48]
   13ec8:	ldur	x1, [x29, #-8]
   13ecc:	bl	b000 <dgettext@plt>
   13ed0:	str	x0, [sp, #8]
   13ed4:	b	13ee0 <argp_failure@@Base+0x323c>
   13ed8:	mov	x8, xzr
   13edc:	str	x8, [sp, #8]
   13ee0:	ldr	x8, [sp, #8]
   13ee4:	str	x8, [sp, #32]
   13ee8:	ldr	x0, [sp, #32]
   13eec:	ldur	x2, [x29, #-16]
   13ef0:	ldur	x8, [x29, #-24]
   13ef4:	ldr	x3, [x8, #32]
   13ef8:	mov	w1, #0x3                   	// #3
   13efc:	movk	w1, #0x200, lsl #16
   13f00:	bl	135b0 <argp_failure@@Base+0x290c>
   13f04:	str	x0, [sp, #24]
   13f08:	ldr	x8, [sp, #24]
   13f0c:	cbz	x8, 13fcc <argp_failure@@Base+0x3328>
   13f10:	ldr	x8, [sp, #24]
   13f14:	ldrb	w9, [x8]
   13f18:	cbz	w9, 13fbc <argp_failure@@Base+0x3318>
   13f1c:	ldur	x8, [x29, #-24]
   13f20:	ldr	x8, [x8, #16]
   13f24:	ldr	x8, [x8]
   13f28:	cbz	x8, 13f3c <argp_failure@@Base+0x3298>
   13f2c:	ldur	x8, [x29, #-24]
   13f30:	ldr	x0, [x8, #8]
   13f34:	mov	w1, #0xa                   	// #10
   13f38:	bl	b040 <argp_fmtstream_putc@plt>
   13f3c:	ldur	x8, [x29, #-24]
   13f40:	ldr	x0, [x8, #8]
   13f44:	ldr	x8, [sp, #16]
   13f48:	ldr	w1, [x8, #24]
   13f4c:	bl	13ff0 <argp_failure@@Base+0x334c>
   13f50:	ldur	x8, [x29, #-24]
   13f54:	ldr	x0, [x8, #8]
   13f58:	ldr	x8, [sp, #16]
   13f5c:	ldrsw	x1, [x8, #24]
   13f60:	bl	b020 <argp_fmtstream_set_lmargin@plt>
   13f64:	ldur	x8, [x29, #-24]
   13f68:	ldr	x8, [x8, #8]
   13f6c:	ldr	x9, [sp, #16]
   13f70:	ldrsw	x1, [x9, #24]
   13f74:	mov	x0, x8
   13f78:	bl	aff0 <argp_fmtstream_set_wmargin@plt>
   13f7c:	ldur	x8, [x29, #-24]
   13f80:	ldr	x8, [x8, #8]
   13f84:	ldr	x1, [sp, #24]
   13f88:	mov	x0, x8
   13f8c:	bl	b030 <argp_fmtstream_puts@plt>
   13f90:	ldur	x8, [x29, #-24]
   13f94:	ldr	x8, [x8, #8]
   13f98:	mov	x0, x8
   13f9c:	mov	x8, xzr
   13fa0:	mov	x1, x8
   13fa4:	bl	b020 <argp_fmtstream_set_lmargin@plt>
   13fa8:	ldur	x8, [x29, #-24]
   13fac:	ldr	x8, [x8, #8]
   13fb0:	mov	x0, x8
   13fb4:	mov	w1, #0xa                   	// #10
   13fb8:	bl	b040 <argp_fmtstream_putc@plt>
   13fbc:	ldur	x8, [x29, #-24]
   13fc0:	ldr	x8, [x8, #16]
   13fc4:	mov	w9, #0x1                   	// #1
   13fc8:	str	w9, [x8, #8]
   13fcc:	ldr	x8, [sp, #24]
   13fd0:	ldr	x9, [sp, #32]
   13fd4:	cmp	x8, x9
   13fd8:	b.eq	13fe4 <argp_failure@@Base+0x3340>  // b.none
   13fdc:	ldr	x0, [sp, #24]
   13fe0:	bl	a930 <free@plt>
   13fe4:	ldp	x29, x30, [sp, #64]
   13fe8:	add	sp, sp, #0x50
   13fec:	ret
   13ff0:	sub	sp, sp, #0x30
   13ff4:	stp	x29, x30, [sp, #32]
   13ff8:	add	x29, sp, #0x20
   13ffc:	stur	x0, [x29, #-8]
   14000:	stur	w1, [x29, #-12]
   14004:	ldur	w8, [x29, #-12]
   14008:	mov	w9, w8
   1400c:	ldur	x0, [x29, #-8]
   14010:	str	x9, [sp, #8]
   14014:	bl	b0f0 <argp_fmtstream_point@plt>
   14018:	ldr	x9, [sp, #8]
   1401c:	subs	x10, x9, x0
   14020:	str	w10, [sp, #16]
   14024:	ldr	w8, [sp, #16]
   14028:	subs	w9, w8, #0x1
   1402c:	str	w9, [sp, #16]
   14030:	cmp	w8, #0x0
   14034:	cset	w8, le
   14038:	tbnz	w8, #0, 1404c <argp_failure@@Base+0x33a8>
   1403c:	ldur	x0, [x29, #-8]
   14040:	mov	w1, #0x20                  	// #32
   14044:	bl	b040 <argp_fmtstream_putc@plt>
   14048:	b	14024 <argp_failure@@Base+0x3380>
   1404c:	ldp	x29, x30, [sp, #32]
   14050:	add	sp, sp, #0x30
   14054:	ret
   14058:	sub	sp, sp, #0x20
   1405c:	str	x0, [sp, #24]
   14060:	str	x1, [sp, #16]
   14064:	ldr	x8, [sp, #24]
   14068:	mov	w9, #0x0                   	// #0
   1406c:	str	w9, [sp, #12]
   14070:	cbz	x8, 14088 <argp_failure@@Base+0x33e4>
   14074:	ldr	x8, [sp, #24]
   14078:	ldr	x9, [sp, #16]
   1407c:	cmp	x8, x9
   14080:	cset	w10, ne  // ne = any
   14084:	str	w10, [sp, #12]
   14088:	ldr	w8, [sp, #12]
   1408c:	tbnz	w8, #0, 14094 <argp_failure@@Base+0x33f0>
   14090:	b	140a4 <argp_failure@@Base+0x3400>
   14094:	ldr	x8, [sp, #24]
   14098:	ldr	x8, [x8, #16]
   1409c:	str	x8, [sp, #24]
   140a0:	b	14064 <argp_failure@@Base+0x33c0>
   140a4:	ldr	x8, [sp, #24]
   140a8:	ldr	x9, [sp, #16]
   140ac:	cmp	x8, x9
   140b0:	cset	w10, eq  // eq = none
   140b4:	and	w0, w10, #0x1
   140b8:	add	sp, sp, #0x20
   140bc:	ret

00000000000140c0 <argp_parse@@Base>:
   140c0:	stp	x29, x30, [sp, #-32]!
   140c4:	stp	x28, x19, [sp, #16]
   140c8:	mov	x29, sp
   140cc:	sub	sp, sp, #0x130
   140d0:	mov	x19, sp
   140d4:	stur	x0, [x29, #-8]
   140d8:	stur	w1, [x29, #-12]
   140dc:	stur	x2, [x29, #-24]
   140e0:	stur	w3, [x29, #-28]
   140e4:	stur	x4, [x29, #-40]
   140e8:	stur	x5, [x29, #-48]
   140ec:	str	wzr, [x19, #28]
   140f0:	ldur	w8, [x29, #-28]
   140f4:	and	w8, w8, #0x1
   140f8:	cbnz	w8, 14148 <argp_parse@@Base+0x88>
   140fc:	adrp	x8, 5f000 <vasnprintf@@Base+0x1ce4c>
   14100:	ldr	x8, [x8, #3944]
   14104:	ldr	x8, [x8]
   14108:	cbnz	x8, 14120 <argp_parse@@Base+0x60>
   1410c:	ldur	x8, [x29, #-24]
   14110:	ldr	x8, [x8]
   14114:	adrp	x9, 5f000 <vasnprintf@@Base+0x1ce4c>
   14118:	ldr	x9, [x9, #3944]
   1411c:	str	x8, [x9]
   14120:	adrp	x8, 5f000 <vasnprintf@@Base+0x1ce4c>
   14124:	ldr	x8, [x8, #3928]
   14128:	ldr	x8, [x8]
   1412c:	cbnz	x8, 14148 <argp_parse@@Base+0x88>
   14130:	ldur	x8, [x29, #-24]
   14134:	ldr	x0, [x8]
   14138:	bl	b130 <last_component@plt>
   1413c:	adrp	x8, 5f000 <vasnprintf@@Base+0x1ce4c>
   14140:	ldr	x8, [x8, #3928]
   14144:	str	x0, [x8]
   14148:	ldur	w8, [x29, #-28]
   1414c:	and	w8, w8, #0x10
   14150:	cbnz	w8, 1422c <argp_parse@@Base+0x16c>
   14154:	mov	x8, sp
   14158:	subs	x8, x8, #0x80
   1415c:	mov	sp, x8
   14160:	str	x8, [x19, #16]
   14164:	mov	x8, sp
   14168:	subs	x8, x8, #0x40
   1416c:	mov	sp, x8
   14170:	str	x8, [x19, #8]
   14174:	ldr	x0, [x19, #8]
   14178:	mov	w9, wzr
   1417c:	mov	w1, w9
   14180:	mov	x2, #0x38                  	// #56
   14184:	str	w9, [x19, #4]
   14188:	bl	a970 <memset@plt>
   1418c:	ldr	x8, [x19, #16]
   14190:	ldr	x10, [x19, #8]
   14194:	str	x8, [x10, #32]
   14198:	ldr	x0, [x19, #16]
   1419c:	ldr	w9, [x19, #4]
   141a0:	mov	w1, w9
   141a4:	mov	x2, #0x80                  	// #128
   141a8:	bl	a970 <memset@plt>
   141ac:	ldur	x8, [x29, #-8]
   141b0:	cbz	x8, 141c8 <argp_parse@@Base+0x108>
   141b4:	ldur	x8, [x29, #-8]
   141b8:	ldr	x9, [x19, #16]
   141bc:	add	x10, x9, #0x20
   141c0:	str	x10, [x19, #16]
   141c4:	str	x8, [x9]
   141c8:	ldr	x8, [x19, #16]
   141cc:	add	x9, x8, #0x20
   141d0:	str	x9, [x19, #16]
   141d4:	adrp	x9, 5f000 <vasnprintf@@Base+0x1ce4c>
   141d8:	add	x9, x9, #0x768
   141dc:	str	x9, [x8]
   141e0:	adrp	x8, 5f000 <vasnprintf@@Base+0x1ce4c>
   141e4:	ldr	x8, [x8, #3952]
   141e8:	ldr	x8, [x8]
   141ec:	cbnz	x8, 14200 <argp_parse@@Base+0x140>
   141f0:	adrp	x8, 5f000 <vasnprintf@@Base+0x1ce4c>
   141f4:	ldr	x8, [x8, #3960]
   141f8:	ldr	x8, [x8]
   141fc:	cbz	x8, 14218 <argp_parse@@Base+0x158>
   14200:	ldr	x8, [x19, #16]
   14204:	add	x9, x8, #0x20
   14208:	str	x9, [x19, #16]
   1420c:	adrp	x9, 5f000 <vasnprintf@@Base+0x1ce4c>
   14210:	add	x9, x9, #0x7a0
   14214:	str	x9, [x8]
   14218:	ldr	x8, [x19, #16]
   1421c:	mov	x9, xzr
   14220:	str	x9, [x8]
   14224:	ldr	x8, [x19, #8]
   14228:	stur	x8, [x29, #-8]
   1422c:	ldur	x1, [x29, #-8]
   14230:	ldur	w2, [x29, #-12]
   14234:	ldur	x3, [x29, #-24]
   14238:	ldur	w4, [x29, #-28]
   1423c:	ldur	x5, [x29, #-48]
   14240:	add	x0, x19, #0x20
   14244:	bl	142ac <argp_parse@@Base+0x1ec>
   14248:	stur	w0, [x29, #-52]
   1424c:	ldur	w8, [x29, #-52]
   14250:	cbnz	w8, 14298 <argp_parse@@Base+0x1d8>
   14254:	ldur	w8, [x29, #-52]
   14258:	cmp	w8, #0x0
   1425c:	cset	w8, ne  // ne = any
   14260:	eor	w8, w8, #0x1
   14264:	tbnz	w8, #0, 1426c <argp_parse@@Base+0x1ac>
   14268:	b	14280 <argp_parse@@Base+0x1c0>
   1426c:	add	x0, x19, #0x20
   14270:	add	x1, x19, #0x1c
   14274:	bl	14748 <argp_parse@@Base+0x688>
   14278:	stur	w0, [x29, #-52]
   1427c:	b	14254 <argp_parse@@Base+0x194>
   14280:	ldur	w1, [x29, #-52]
   14284:	ldr	w2, [x19, #28]
   14288:	ldur	x3, [x29, #-40]
   1428c:	add	x0, x19, #0x20
   14290:	bl	14a30 <argp_parse@@Base+0x970>
   14294:	stur	w0, [x29, #-52]
   14298:	ldur	w0, [x29, #-52]
   1429c:	mov	sp, x29
   142a0:	ldp	x28, x19, [sp, #16]
   142a4:	ldp	x29, x30, [sp], #32
   142a8:	ret
   142ac:	sub	sp, sp, #0x120
   142b0:	stp	x29, x30, [sp, #256]
   142b4:	str	x28, [sp, #272]
   142b8:	add	x29, sp, #0x100
   142bc:	mov	w8, wzr
   142c0:	mov	x9, #0x38                  	// #56
   142c4:	mov	w10, #0x1                   	// #1
   142c8:	add	x11, sp, #0x60
   142cc:	stur	x0, [x29, #-16]
   142d0:	stur	x1, [x29, #-24]
   142d4:	stur	w2, [x29, #-28]
   142d8:	stur	x3, [x29, #-40]
   142dc:	stur	w4, [x29, #-44]
   142e0:	stur	x5, [x29, #-56]
   142e4:	stur	wzr, [x29, #-60]
   142e8:	mov	x0, x11
   142ec:	mov	w2, w8
   142f0:	mov	w1, w2
   142f4:	mov	x2, x9
   142f8:	str	w8, [sp, #20]
   142fc:	str	w10, [sp, #16]
   14300:	bl	a970 <memset@plt>
   14304:	ldr	w8, [sp, #16]
   14308:	str	w8, [sp, #96]
   1430c:	str	w8, [sp, #100]
   14310:	ldur	w10, [x29, #-44]
   14314:	tst	w10, #0x4
   14318:	ldr	w10, [sp, #20]
   1431c:	csel	w12, w10, w8, ne  // ne = any
   14320:	mov	w0, w12
   14324:	sxtw	x9, w0
   14328:	stur	x9, [x29, #-104]
   1432c:	stur	xzr, [x29, #-96]
   14330:	stur	xzr, [x29, #-88]
   14334:	stur	xzr, [x29, #-80]
   14338:	ldur	x9, [x29, #-24]
   1433c:	cbz	x9, 1434c <argp_parse@@Base+0x28c>
   14340:	ldur	x0, [x29, #-24]
   14344:	sub	x1, x29, #0x68
   14348:	bl	15140 <_argp_input@@Base+0x320>
   1434c:	ldur	x8, [x29, #-88]
   14350:	add	x8, x8, #0x1
   14354:	mov	x9, #0x48                  	// #72
   14358:	mul	x8, x8, x9
   1435c:	str	x8, [sp, #80]
   14360:	ldur	x8, [x29, #-80]
   14364:	mov	x9, #0x8                   	// #8
   14368:	mul	x8, x8, x9
   1436c:	str	x8, [sp, #64]
   14370:	ldur	x8, [x29, #-96]
   14374:	add	x8, x8, #0x1
   14378:	mov	x10, #0x20                  	// #32
   1437c:	mul	x8, x8, x10
   14380:	str	x8, [sp, #48]
   14384:	ldur	x8, [x29, #-104]
   14388:	add	x8, x8, #0x1
   1438c:	str	x8, [sp, #32]
   14390:	ldr	x8, [sp, #80]
   14394:	str	x8, [sp, #72]
   14398:	ldr	x8, [sp, #72]
   1439c:	ldr	x10, [sp, #64]
   143a0:	add	x8, x8, x10
   143a4:	add	x8, x8, #0x8
   143a8:	subs	x8, x8, #0x1
   143ac:	udiv	x8, x8, x9
   143b0:	mul	x8, x8, x9
   143b4:	str	x8, [sp, #56]
   143b8:	ldr	x8, [sp, #56]
   143bc:	ldr	x9, [sp, #48]
   143c0:	add	x8, x8, x9
   143c4:	str	x8, [sp, #40]
   143c8:	ldr	x8, [sp, #40]
   143cc:	ldr	x9, [sp, #32]
   143d0:	add	x8, x8, x9
   143d4:	str	x8, [sp, #24]
   143d8:	ldr	x0, [sp, #24]
   143dc:	bl	af10 <malloc@plt>
   143e0:	ldur	x8, [x29, #-16]
   143e4:	str	x0, [x8, #208]
   143e8:	ldur	x8, [x29, #-16]
   143ec:	ldr	x8, [x8, #208]
   143f0:	cbnz	x8, 14400 <argp_parse@@Base+0x340>
   143f4:	mov	w8, #0xc                   	// #12
   143f8:	stur	w8, [x29, #-4]
   143fc:	b	14734 <argp_parse@@Base+0x674>
   14400:	ldur	x8, [x29, #-16]
   14404:	ldr	x8, [x8, #208]
   14408:	str	x8, [sp, #88]
   1440c:	ldur	x8, [x29, #-16]
   14410:	ldr	x8, [x8, #208]
   14414:	ldur	x9, [x29, #-16]
   14418:	str	x8, [x9, #80]
   1441c:	ldr	x8, [sp, #88]
   14420:	ldr	x9, [sp, #72]
   14424:	add	x8, x8, x9
   14428:	ldur	x9, [x29, #-16]
   1442c:	str	x8, [x9, #96]
   14430:	ldr	x8, [sp, #88]
   14434:	ldr	x9, [sp, #56]
   14438:	add	x8, x8, x9
   1443c:	ldur	x9, [x29, #-16]
   14440:	str	x8, [x9, #16]
   14444:	ldr	x8, [sp, #88]
   14448:	ldr	x9, [sp, #40]
   1444c:	add	x8, x8, x9
   14450:	ldur	x9, [x29, #-16]
   14454:	str	x8, [x9, #8]
   14458:	ldur	x8, [x29, #-16]
   1445c:	add	x0, x8, #0x18
   14460:	add	x1, sp, #0x60
   14464:	mov	x2, #0x38                  	// #56
   14468:	bl	af30 <memcpy@plt>
   1446c:	ldur	x8, [x29, #-16]
   14470:	ldr	x0, [x8, #96]
   14474:	ldr	x2, [sp, #64]
   14478:	mov	w10, wzr
   1447c:	mov	w1, w10
   14480:	str	w10, [sp, #12]
   14484:	bl	a970 <memset@plt>
   14488:	ldur	x0, [x29, #-16]
   1448c:	ldur	x1, [x29, #-24]
   14490:	ldur	w2, [x29, #-44]
   14494:	bl	15250 <_argp_input@@Base+0x430>
   14498:	ldur	x8, [x29, #-16]
   1449c:	add	x0, x8, #0x70
   144a0:	ldr	w10, [sp, #12]
   144a4:	mov	w1, w10
   144a8:	mov	x2, #0x60                  	// #96
   144ac:	bl	a970 <memset@plt>
   144b0:	ldur	x8, [x29, #-16]
   144b4:	ldr	x8, [x8]
   144b8:	ldur	x9, [x29, #-16]
   144bc:	str	x8, [x9, #112]
   144c0:	ldur	w10, [x29, #-28]
   144c4:	ldur	x8, [x29, #-16]
   144c8:	str	w10, [x8, #120]
   144cc:	ldur	x8, [x29, #-40]
   144d0:	ldur	x9, [x29, #-16]
   144d4:	str	x8, [x9, #128]
   144d8:	ldur	w10, [x29, #-44]
   144dc:	ldur	x8, [x29, #-16]
   144e0:	str	w10, [x8, #140]
   144e4:	adrp	x8, 5f000 <vasnprintf@@Base+0x1ce4c>
   144e8:	ldr	x8, [x8, #3808]
   144ec:	ldr	x8, [x8]
   144f0:	ldur	x9, [x29, #-16]
   144f4:	str	x8, [x9, #184]
   144f8:	adrp	x8, 5f000 <vasnprintf@@Base+0x1ce4c>
   144fc:	ldr	x8, [x8, #3968]
   14500:	ldr	x8, [x8]
   14504:	ldur	x9, [x29, #-16]
   14508:	str	x8, [x9, #192]
   1450c:	ldur	x8, [x29, #-16]
   14510:	str	wzr, [x8, #136]
   14514:	ldur	x8, [x29, #-16]
   14518:	ldur	x9, [x29, #-16]
   1451c:	str	x8, [x9, #200]
   14520:	ldur	x8, [x29, #-16]
   14524:	mov	w10, #0x1                   	// #1
   14528:	str	w10, [x8, #104]
   1452c:	ldur	x8, [x29, #-16]
   14530:	ldr	x8, [x8, #80]
   14534:	ldur	x9, [x29, #-16]
   14538:	ldr	x9, [x9, #88]
   1453c:	cmp	x8, x9
   14540:	b.cs	14554 <argp_parse@@Base+0x494>  // b.hs, b.nlast
   14544:	ldur	x8, [x29, #-56]
   14548:	ldur	x9, [x29, #-16]
   1454c:	ldr	x9, [x9, #80]
   14550:	str	x8, [x9, #48]
   14554:	ldur	x8, [x29, #-16]
   14558:	ldr	x8, [x8, #80]
   1455c:	stur	x8, [x29, #-72]
   14560:	ldur	x8, [x29, #-72]
   14564:	ldur	x9, [x29, #-16]
   14568:	ldr	x9, [x9, #88]
   1456c:	mov	w10, #0x0                   	// #0
   14570:	cmp	x8, x9
   14574:	str	w10, [sp, #8]
   14578:	b.cs	145a4 <argp_parse@@Base+0x4e4>  // b.hs, b.nlast
   1457c:	ldur	w8, [x29, #-60]
   14580:	mov	w9, #0x1                   	// #1
   14584:	str	w9, [sp, #4]
   14588:	cbz	w8, 1459c <argp_parse@@Base+0x4dc>
   1458c:	ldur	w8, [x29, #-60]
   14590:	cmp	w8, #0x7
   14594:	cset	w8, eq  // eq = none
   14598:	str	w8, [sp, #4]
   1459c:	ldr	w8, [sp, #4]
   145a0:	str	w8, [sp, #8]
   145a4:	ldr	w8, [sp, #8]
   145a8:	tbnz	w8, #0, 145b0 <argp_parse@@Base+0x4f0>
   145ac:	b	14664 <argp_parse@@Base+0x5a4>
   145b0:	ldur	x8, [x29, #-72]
   145b4:	ldr	x8, [x8, #32]
   145b8:	cbz	x8, 145ec <argp_parse@@Base+0x52c>
   145bc:	ldur	x8, [x29, #-72]
   145c0:	ldr	x8, [x8, #32]
   145c4:	ldr	x8, [x8, #56]
   145c8:	ldur	x9, [x29, #-72]
   145cc:	ldr	w10, [x9, #40]
   145d0:	mov	w9, w10
   145d4:	mov	x11, #0x8                   	// #8
   145d8:	mul	x9, x11, x9
   145dc:	add	x8, x8, x9
   145e0:	ldr	x8, [x8]
   145e4:	ldur	x9, [x29, #-72]
   145e8:	str	x8, [x9, #48]
   145ec:	ldur	x8, [x29, #-72]
   145f0:	ldr	x8, [x8]
   145f4:	cbnz	x8, 14630 <argp_parse@@Base+0x570>
   145f8:	ldur	x8, [x29, #-72]
   145fc:	ldr	x8, [x8, #8]
   14600:	ldr	x8, [x8, #32]
   14604:	cbz	x8, 14630 <argp_parse@@Base+0x570>
   14608:	ldur	x8, [x29, #-72]
   1460c:	ldr	x8, [x8, #8]
   14610:	ldr	x8, [x8, #32]
   14614:	ldr	x8, [x8]
   14618:	cbz	x8, 14630 <argp_parse@@Base+0x570>
   1461c:	ldur	x8, [x29, #-72]
   14620:	ldr	x8, [x8, #48]
   14624:	ldur	x9, [x29, #-72]
   14628:	ldr	x9, [x9, #56]
   1462c:	str	x8, [x9]
   14630:	ldur	x0, [x29, #-72]
   14634:	ldur	x8, [x29, #-16]
   14638:	add	x1, x8, #0x70
   1463c:	mov	w2, #0x3                   	// #3
   14640:	movk	w2, #0x100, lsl #16
   14644:	mov	x8, xzr
   14648:	mov	x3, x8
   1464c:	bl	15360 <_argp_input@@Base+0x540>
   14650:	stur	w0, [x29, #-60]
   14654:	ldur	x8, [x29, #-72]
   14658:	add	x8, x8, #0x48
   1465c:	stur	x8, [x29, #-72]
   14660:	b	14560 <argp_parse@@Base+0x4a0>
   14664:	ldur	w8, [x29, #-60]
   14668:	cmp	w8, #0x7
   1466c:	b.ne	14674 <argp_parse@@Base+0x5b4>  // b.any
   14670:	stur	wzr, [x29, #-60]
   14674:	ldur	w8, [x29, #-60]
   14678:	cbz	w8, 14688 <argp_parse@@Base+0x5c8>
   1467c:	ldur	w8, [x29, #-60]
   14680:	stur	w8, [x29, #-4]
   14684:	b	14734 <argp_parse@@Base+0x674>
   14688:	ldur	x8, [x29, #-16]
   1468c:	ldr	w9, [x8, #140]
   14690:	and	w9, w9, #0x2
   14694:	cbz	w9, 146d8 <argp_parse@@Base+0x618>
   14698:	ldur	x8, [x29, #-16]
   1469c:	str	wzr, [x8, #28]
   146a0:	ldur	x8, [x29, #-16]
   146a4:	ldr	w9, [x8, #140]
   146a8:	and	w9, w9, #0x1
   146ac:	cbz	w9, 146d4 <argp_parse@@Base+0x614>
   146b0:	ldur	x8, [x29, #-16]
   146b4:	ldr	x9, [x8, #128]
   146b8:	mov	x10, #0xfffffffffffffff8    	// #-8
   146bc:	add	x9, x9, x10
   146c0:	str	x9, [x8, #128]
   146c4:	ldur	x8, [x29, #-16]
   146c8:	ldr	w11, [x8, #120]
   146cc:	add	w11, w11, #0x1
   146d0:	str	w11, [x8, #120]
   146d4:	b	146e4 <argp_parse@@Base+0x624>
   146d8:	ldur	x8, [x29, #-16]
   146dc:	mov	w9, #0x1                   	// #1
   146e0:	str	w9, [x8, #28]
   146e4:	ldur	x8, [x29, #-16]
   146e8:	ldr	x8, [x8, #128]
   146ec:	ldur	x9, [x29, #-40]
   146f0:	cmp	x8, x9
   146f4:	b.ne	1471c <argp_parse@@Base+0x65c>  // b.any
   146f8:	ldur	x8, [x29, #-40]
   146fc:	ldr	x8, [x8]
   14700:	cbz	x8, 1471c <argp_parse@@Base+0x65c>
   14704:	ldur	x8, [x29, #-40]
   14708:	ldr	x0, [x8]
   1470c:	bl	b130 <last_component@plt>
   14710:	ldur	x8, [x29, #-16]
   14714:	str	x0, [x8, #176]
   14718:	b	14730 <argp_parse@@Base+0x670>
   1471c:	adrp	x8, 5f000 <vasnprintf@@Base+0x1ce4c>
   14720:	ldr	x8, [x8, #3928]
   14724:	ldr	x8, [x8]
   14728:	ldur	x9, [x29, #-16]
   1472c:	str	x8, [x9, #176]
   14730:	stur	wzr, [x29, #-4]
   14734:	ldur	w0, [x29, #-4]
   14738:	ldr	x28, [sp, #272]
   1473c:	ldp	x29, x30, [sp, #256]
   14740:	add	sp, sp, #0x120
   14744:	ret
   14748:	sub	sp, sp, #0x40
   1474c:	stp	x29, x30, [sp, #48]
   14750:	add	x29, sp, #0x30
   14754:	stur	x0, [x29, #-16]
   14758:	str	x1, [sp, #24]
   1475c:	str	wzr, [sp, #16]
   14760:	ldur	x8, [x29, #-16]
   14764:	ldr	w9, [x8, #148]
   14768:	cbz	w9, 1478c <argp_parse@@Base+0x6cc>
   1476c:	ldur	x8, [x29, #-16]
   14770:	ldr	w9, [x8, #136]
   14774:	ldur	x8, [x29, #-16]
   14778:	ldr	w10, [x8, #148]
   1477c:	cmp	w9, w10
   14780:	b.ge	1478c <argp_parse@@Base+0x6cc>  // b.tcont
   14784:	ldur	x8, [x29, #-16]
   14788:	str	wzr, [x8, #148]
   1478c:	ldur	x8, [x29, #-16]
   14790:	ldr	w9, [x8, #104]
   14794:	cbz	w9, 14904 <argp_parse@@Base+0x844>
   14798:	ldur	x8, [x29, #-16]
   1479c:	ldr	w9, [x8, #148]
   147a0:	cbnz	w9, 14904 <argp_parse@@Base+0x844>
   147a4:	ldur	x8, [x29, #-16]
   147a8:	ldr	w9, [x8, #136]
   147ac:	ldur	x8, [x29, #-16]
   147b0:	str	w9, [x8, #24]
   147b4:	ldur	x8, [x29, #-16]
   147b8:	mov	w9, #0xffffffff            	// #-1
   147bc:	str	w9, [x8, #32]
   147c0:	ldur	x8, [x29, #-16]
   147c4:	ldr	w9, [x8, #140]
   147c8:	and	w9, w9, #0x40
   147cc:	cbz	w9, 1480c <argp_parse@@Base+0x74c>
   147d0:	ldur	x8, [x29, #-16]
   147d4:	ldr	w0, [x8, #120]
   147d8:	ldur	x8, [x29, #-16]
   147dc:	ldr	x1, [x8, #128]
   147e0:	ldur	x8, [x29, #-16]
   147e4:	ldr	x2, [x8, #8]
   147e8:	ldur	x8, [x29, #-16]
   147ec:	ldr	x3, [x8, #16]
   147f0:	ldur	x8, [x29, #-16]
   147f4:	add	x5, x8, #0x18
   147f8:	mov	x8, xzr
   147fc:	mov	x4, x8
   14800:	bl	b140 <_getopt_long_only_r@plt>
   14804:	str	w0, [sp, #20]
   14808:	b	14844 <argp_parse@@Base+0x784>
   1480c:	ldur	x8, [x29, #-16]
   14810:	ldr	w0, [x8, #120]
   14814:	ldur	x8, [x29, #-16]
   14818:	ldr	x1, [x8, #128]
   1481c:	ldur	x8, [x29, #-16]
   14820:	ldr	x2, [x8, #8]
   14824:	ldur	x8, [x29, #-16]
   14828:	ldr	x3, [x8, #16]
   1482c:	ldur	x8, [x29, #-16]
   14830:	add	x5, x8, #0x18
   14834:	mov	x8, xzr
   14838:	mov	x4, x8
   1483c:	bl	b150 <_getopt_long_r@plt>
   14840:	str	w0, [sp, #20]
   14844:	ldur	x8, [x29, #-16]
   14848:	ldr	w9, [x8, #24]
   1484c:	ldur	x8, [x29, #-16]
   14850:	str	w9, [x8, #136]
   14854:	ldr	w9, [sp, #20]
   14858:	mov	w10, #0xffffffff            	// #-1
   1485c:	cmp	w9, w10
   14860:	b.ne	148cc <argp_parse@@Base+0x80c>  // b.any
   14864:	ldur	x8, [x29, #-16]
   14868:	str	wzr, [x8, #104]
   1486c:	ldur	x8, [x29, #-16]
   14870:	ldr	w9, [x8, #136]
   14874:	cmp	w9, #0x1
   14878:	b.le	148c8 <argp_parse@@Base+0x808>
   1487c:	ldur	x8, [x29, #-16]
   14880:	ldr	x8, [x8, #128]
   14884:	ldur	x9, [x29, #-16]
   14888:	ldr	w10, [x9, #136]
   1488c:	subs	w10, w10, #0x1
   14890:	mov	w0, w10
   14894:	sxtw	x9, w0
   14898:	mov	x11, #0x8                   	// #8
   1489c:	mul	x9, x11, x9
   148a0:	add	x8, x8, x9
   148a4:	ldr	x0, [x8]
   148a8:	adrp	x1, 45000 <vasnprintf@@Base+0x2e4c>
   148ac:	add	x1, x1, #0x1e9
   148b0:	bl	aa00 <strcmp@plt>
   148b4:	cbnz	w0, 148c8 <argp_parse@@Base+0x808>
   148b8:	ldur	x8, [x29, #-16]
   148bc:	ldr	w9, [x8, #136]
   148c0:	ldur	x8, [x29, #-16]
   148c4:	str	w9, [x8, #148]
   148c8:	b	14900 <argp_parse@@Base+0x840>
   148cc:	ldr	w8, [sp, #20]
   148d0:	cmp	w8, #0x3f
   148d4:	b.ne	14900 <argp_parse@@Base+0x840>  // b.any
   148d8:	ldur	x8, [x29, #-16]
   148dc:	ldr	w9, [x8, #32]
   148e0:	mov	w10, #0xffffffff            	// #-1
   148e4:	cmp	w9, w10
   148e8:	b.eq	14900 <argp_parse@@Base+0x840>  // b.none
   148ec:	ldr	x8, [sp, #24]
   148f0:	str	wzr, [x8]
   148f4:	mov	w9, #0x7                   	// #7
   148f8:	stur	w9, [x29, #-4]
   148fc:	b	14a20 <argp_parse@@Base+0x960>
   14900:	b	1490c <argp_parse@@Base+0x84c>
   14904:	mov	w8, #0xffffffff            	// #-1
   14908:	str	w8, [sp, #20]
   1490c:	ldr	w8, [sp, #20]
   14910:	mov	w9, #0xffffffff            	// #-1
   14914:	cmp	w8, w9
   14918:	b.ne	14998 <argp_parse@@Base+0x8d8>  // b.any
   1491c:	ldur	x8, [x29, #-16]
   14920:	ldr	w9, [x8, #136]
   14924:	ldur	x8, [x29, #-16]
   14928:	ldr	w10, [x8, #120]
   1492c:	cmp	w9, w10
   14930:	b.ge	14944 <argp_parse@@Base+0x884>  // b.tcont
   14934:	ldur	x8, [x29, #-16]
   14938:	ldr	w9, [x8, #140]
   1493c:	and	w9, w9, #0x4
   14940:	cbz	w9, 1495c <argp_parse@@Base+0x89c>
   14944:	ldr	x8, [sp, #24]
   14948:	mov	w9, #0x1                   	// #1
   1494c:	str	w9, [x8]
   14950:	mov	w9, #0x7                   	// #7
   14954:	stur	w9, [x29, #-4]
   14958:	b	14a20 <argp_parse@@Base+0x960>
   1495c:	mov	w8, #0x1                   	// #1
   14960:	str	w8, [sp, #20]
   14964:	ldur	x9, [x29, #-16]
   14968:	ldr	x9, [x9, #128]
   1496c:	ldur	x10, [x29, #-16]
   14970:	ldrsw	x11, [x10, #136]
   14974:	mov	w8, w11
   14978:	add	w8, w8, #0x1
   1497c:	str	w8, [x10, #136]
   14980:	mov	x10, #0x8                   	// #8
   14984:	mul	x10, x10, x11
   14988:	add	x9, x9, x10
   1498c:	ldr	x9, [x9]
   14990:	ldur	x10, [x29, #-16]
   14994:	str	x9, [x10, #40]
   14998:	ldr	w8, [sp, #20]
   1499c:	cmp	w8, #0x1
   149a0:	b.ne	149bc <argp_parse@@Base+0x8fc>  // b.any
   149a4:	ldur	x0, [x29, #-16]
   149a8:	ldur	x8, [x29, #-16]
   149ac:	ldr	x1, [x8, #40]
   149b0:	bl	1585c <_argp_input@@Base+0xa3c>
   149b4:	str	w0, [sp, #16]
   149b8:	b	149d4 <argp_parse@@Base+0x914>
   149bc:	ldur	x0, [x29, #-16]
   149c0:	ldr	w1, [sp, #20]
   149c4:	ldur	x8, [x29, #-16]
   149c8:	ldr	x2, [x8, #40]
   149cc:	bl	159e8 <_argp_input@@Base+0xbc8>
   149d0:	str	w0, [sp, #16]
   149d4:	ldr	w8, [sp, #16]
   149d8:	cmp	w8, #0x7
   149dc:	b.ne	14a18 <argp_parse@@Base+0x958>  // b.any
   149e0:	ldr	w8, [sp, #20]
   149e4:	mov	w9, #0xffffffff            	// #-1
   149e8:	mov	w10, #0x1                   	// #1
   149ec:	cmp	w8, w9
   149f0:	str	w10, [sp, #12]
   149f4:	b.eq	14a08 <argp_parse@@Base+0x948>  // b.none
   149f8:	ldr	w8, [sp, #20]
   149fc:	cmp	w8, #0x1
   14a00:	cset	w8, eq  // eq = none
   14a04:	str	w8, [sp, #12]
   14a08:	ldr	w8, [sp, #12]
   14a0c:	and	w8, w8, #0x1
   14a10:	ldr	x9, [sp, #24]
   14a14:	str	w8, [x9]
   14a18:	ldr	w8, [sp, #16]
   14a1c:	stur	w8, [x29, #-4]
   14a20:	ldur	w0, [x29, #-4]
   14a24:	ldp	x29, x30, [sp, #48]
   14a28:	add	sp, sp, #0x40
   14a2c:	ret
   14a30:	sub	sp, sp, #0x60
   14a34:	stp	x29, x30, [sp, #80]
   14a38:	add	x29, sp, #0x50
   14a3c:	stur	x0, [x29, #-8]
   14a40:	stur	w1, [x29, #-12]
   14a44:	stur	w2, [x29, #-16]
   14a48:	stur	x3, [x29, #-24]
   14a4c:	ldur	w8, [x29, #-12]
   14a50:	cmp	w8, #0x7
   14a54:	b.ne	14a64 <argp_parse@@Base+0x9a4>  // b.any
   14a58:	ldur	w8, [x29, #-16]
   14a5c:	cbz	w8, 14a64 <argp_parse@@Base+0x9a4>
   14a60:	stur	wzr, [x29, #-12]
   14a64:	ldur	w8, [x29, #-12]
   14a68:	cbnz	w8, 14c68 <argp_parse@@Base+0xba8>
   14a6c:	ldur	x8, [x29, #-8]
   14a70:	ldr	w9, [x8, #136]
   14a74:	ldur	x8, [x29, #-8]
   14a78:	ldr	w10, [x8, #120]
   14a7c:	cmp	w9, w10
   14a80:	b.ne	14be8 <argp_parse@@Base+0xb28>  // b.any
   14a84:	ldur	x8, [x29, #-8]
   14a88:	ldr	x8, [x8, #80]
   14a8c:	stur	x8, [x29, #-32]
   14a90:	ldur	x8, [x29, #-32]
   14a94:	ldur	x9, [x29, #-8]
   14a98:	ldr	x9, [x9, #88]
   14a9c:	mov	w10, #0x0                   	// #0
   14aa0:	cmp	x8, x9
   14aa4:	stur	w10, [x29, #-36]
   14aa8:	b.cs	14ad4 <argp_parse@@Base+0xa14>  // b.hs, b.nlast
   14aac:	ldur	w8, [x29, #-12]
   14ab0:	mov	w9, #0x1                   	// #1
   14ab4:	str	w9, [sp, #40]
   14ab8:	cbz	w8, 14acc <argp_parse@@Base+0xa0c>
   14abc:	ldur	w8, [x29, #-12]
   14ac0:	cmp	w8, #0x7
   14ac4:	cset	w8, eq  // eq = none
   14ac8:	str	w8, [sp, #40]
   14acc:	ldr	w8, [sp, #40]
   14ad0:	stur	w8, [x29, #-36]
   14ad4:	ldur	w8, [x29, #-36]
   14ad8:	tbnz	w8, #0, 14ae0 <argp_parse@@Base+0xa20>
   14adc:	b	14b20 <argp_parse@@Base+0xa60>
   14ae0:	ldur	x8, [x29, #-32]
   14ae4:	ldr	w9, [x8, #24]
   14ae8:	cbnz	w9, 14b10 <argp_parse@@Base+0xa50>
   14aec:	ldur	x0, [x29, #-32]
   14af0:	ldur	x8, [x29, #-8]
   14af4:	add	x1, x8, #0x70
   14af8:	mov	w2, #0x2                   	// #2
   14afc:	movk	w2, #0x100, lsl #16
   14b00:	mov	x8, xzr
   14b04:	mov	x3, x8
   14b08:	bl	15360 <_argp_input@@Base+0x540>
   14b0c:	stur	w0, [x29, #-12]
   14b10:	ldur	x8, [x29, #-32]
   14b14:	add	x8, x8, #0x48
   14b18:	stur	x8, [x29, #-32]
   14b1c:	b	14a90 <argp_parse@@Base+0x9d0>
   14b20:	ldur	x8, [x29, #-8]
   14b24:	ldr	x8, [x8, #88]
   14b28:	mov	x9, #0xffffffffffffffb8    	// #-72
   14b2c:	add	x8, x8, x9
   14b30:	stur	x8, [x29, #-32]
   14b34:	ldur	x8, [x29, #-32]
   14b38:	ldur	x9, [x29, #-8]
   14b3c:	ldr	x9, [x9, #80]
   14b40:	mov	w10, #0x0                   	// #0
   14b44:	cmp	x8, x9
   14b48:	str	w10, [sp, #36]
   14b4c:	b.cc	14b78 <argp_parse@@Base+0xab8>  // b.lo, b.ul, b.last
   14b50:	ldur	w8, [x29, #-12]
   14b54:	mov	w9, #0x1                   	// #1
   14b58:	str	w9, [sp, #32]
   14b5c:	cbz	w8, 14b70 <argp_parse@@Base+0xab0>
   14b60:	ldur	w8, [x29, #-12]
   14b64:	cmp	w8, #0x7
   14b68:	cset	w8, eq  // eq = none
   14b6c:	str	w8, [sp, #32]
   14b70:	ldr	w8, [sp, #32]
   14b74:	str	w8, [sp, #36]
   14b78:	ldr	w8, [sp, #36]
   14b7c:	tbnz	w8, #0, 14b84 <argp_parse@@Base+0xac4>
   14b80:	b	14bbc <argp_parse@@Base+0xafc>
   14b84:	ldur	x0, [x29, #-32]
   14b88:	ldur	x8, [x29, #-8]
   14b8c:	add	x1, x8, #0x70
   14b90:	mov	w2, #0x1                   	// #1
   14b94:	movk	w2, #0x100, lsl #16
   14b98:	mov	x8, xzr
   14b9c:	mov	x3, x8
   14ba0:	bl	15360 <_argp_input@@Base+0x540>
   14ba4:	stur	w0, [x29, #-12]
   14ba8:	ldur	x8, [x29, #-32]
   14bac:	mov	x9, #0xffffffffffffffb8    	// #-72
   14bb0:	add	x8, x8, x9
   14bb4:	stur	x8, [x29, #-32]
   14bb8:	b	14b34 <argp_parse@@Base+0xa74>
   14bbc:	ldur	w8, [x29, #-12]
   14bc0:	cmp	w8, #0x7
   14bc4:	b.ne	14bcc <argp_parse@@Base+0xb0c>  // b.any
   14bc8:	stur	wzr, [x29, #-12]
   14bcc:	ldur	x8, [x29, #-24]
   14bd0:	cbz	x8, 14be4 <argp_parse@@Base+0xb24>
   14bd4:	ldur	x8, [x29, #-8]
   14bd8:	ldr	w9, [x8, #136]
   14bdc:	ldur	x8, [x29, #-24]
   14be0:	str	w9, [x8]
   14be4:	b	14c68 <argp_parse@@Base+0xba8>
   14be8:	ldur	x8, [x29, #-24]
   14bec:	cbz	x8, 14c04 <argp_parse@@Base+0xb44>
   14bf0:	ldur	x8, [x29, #-8]
   14bf4:	ldr	w9, [x8, #136]
   14bf8:	ldur	x8, [x29, #-24]
   14bfc:	str	w9, [x8]
   14c00:	b	14c68 <argp_parse@@Base+0xba8>
   14c04:	ldur	x8, [x29, #-8]
   14c08:	ldr	w9, [x8, #140]
   14c0c:	and	w9, w9, #0x2
   14c10:	cbnz	w9, 14c60 <argp_parse@@Base+0xba0>
   14c14:	ldur	x8, [x29, #-8]
   14c18:	ldr	x8, [x8, #184]
   14c1c:	cbz	x8, 14c60 <argp_parse@@Base+0xba0>
   14c20:	ldur	x8, [x29, #-8]
   14c24:	ldr	x0, [x8, #184]
   14c28:	adrp	x8, 44000 <vasnprintf@@Base+0x1e4c>
   14c2c:	add	x8, x8, #0xe15
   14c30:	str	x0, [sp, #24]
   14c34:	mov	x0, x8
   14c38:	adrp	x1, 45000 <vasnprintf@@Base+0x2e4c>
   14c3c:	add	x1, x1, #0x201
   14c40:	bl	b000 <dgettext@plt>
   14c44:	ldur	x8, [x29, #-8]
   14c48:	ldr	x2, [x8, #176]
   14c4c:	ldr	x8, [sp, #24]
   14c50:	str	x0, [sp, #16]
   14c54:	mov	x0, x8
   14c58:	ldr	x1, [sp, #16]
   14c5c:	bl	b160 <fprintf@plt>
   14c60:	mov	w8, #0x7                   	// #7
   14c64:	stur	w8, [x29, #-12]
   14c68:	ldur	w8, [x29, #-12]
   14c6c:	cbz	w8, 14ce8 <argp_parse@@Base+0xc28>
   14c70:	ldur	w8, [x29, #-12]
   14c74:	cmp	w8, #0x7
   14c78:	b.ne	14c94 <argp_parse@@Base+0xbd4>  // b.any
   14c7c:	ldur	x8, [x29, #-8]
   14c80:	add	x0, x8, #0x70
   14c84:	ldur	x8, [x29, #-8]
   14c88:	ldr	x1, [x8, #184]
   14c8c:	mov	w2, #0x104                 	// #260
   14c90:	bl	b080 <argp_state_help@plt>
   14c94:	ldur	x8, [x29, #-8]
   14c98:	ldr	x8, [x8, #80]
   14c9c:	stur	x8, [x29, #-32]
   14ca0:	ldur	x8, [x29, #-32]
   14ca4:	ldur	x9, [x29, #-8]
   14ca8:	ldr	x9, [x9, #88]
   14cac:	cmp	x8, x9
   14cb0:	b.cs	14ce4 <argp_parse@@Base+0xc24>  // b.hs, b.nlast
   14cb4:	ldur	x0, [x29, #-32]
   14cb8:	ldur	x8, [x29, #-8]
   14cbc:	add	x1, x8, #0x70
   14cc0:	mov	w2, #0x5                   	// #5
   14cc4:	movk	w2, #0x100, lsl #16
   14cc8:	mov	x8, xzr
   14ccc:	mov	x3, x8
   14cd0:	bl	15360 <_argp_input@@Base+0x540>
   14cd4:	ldur	x8, [x29, #-32]
   14cd8:	add	x8, x8, #0x48
   14cdc:	stur	x8, [x29, #-32]
   14ce0:	b	14ca0 <argp_parse@@Base+0xbe0>
   14ce4:	b	14d94 <argp_parse@@Base+0xcd4>
   14ce8:	ldur	x8, [x29, #-8]
   14cec:	ldr	x8, [x8, #88]
   14cf0:	mov	x9, #0xffffffffffffffb8    	// #-72
   14cf4:	add	x8, x8, x9
   14cf8:	stur	x8, [x29, #-32]
   14cfc:	ldur	x8, [x29, #-32]
   14d00:	ldur	x9, [x29, #-8]
   14d04:	ldr	x9, [x9, #80]
   14d08:	mov	w10, #0x0                   	// #0
   14d0c:	cmp	x8, x9
   14d10:	str	w10, [sp, #12]
   14d14:	b.cc	14d40 <argp_parse@@Base+0xc80>  // b.lo, b.ul, b.last
   14d18:	ldur	w8, [x29, #-12]
   14d1c:	mov	w9, #0x1                   	// #1
   14d20:	str	w9, [sp, #8]
   14d24:	cbz	w8, 14d38 <argp_parse@@Base+0xc78>
   14d28:	ldur	w8, [x29, #-12]
   14d2c:	cmp	w8, #0x7
   14d30:	cset	w8, eq  // eq = none
   14d34:	str	w8, [sp, #8]
   14d38:	ldr	w8, [sp, #8]
   14d3c:	str	w8, [sp, #12]
   14d40:	ldr	w8, [sp, #12]
   14d44:	tbnz	w8, #0, 14d4c <argp_parse@@Base+0xc8c>
   14d48:	b	14d84 <argp_parse@@Base+0xcc4>
   14d4c:	ldur	x0, [x29, #-32]
   14d50:	ldur	x8, [x29, #-8]
   14d54:	add	x1, x8, #0x70
   14d58:	mov	w2, #0x4                   	// #4
   14d5c:	movk	w2, #0x100, lsl #16
   14d60:	mov	x8, xzr
   14d64:	mov	x3, x8
   14d68:	bl	15360 <_argp_input@@Base+0x540>
   14d6c:	stur	w0, [x29, #-12]
   14d70:	ldur	x8, [x29, #-32]
   14d74:	mov	x9, #0xffffffffffffffb8    	// #-72
   14d78:	add	x8, x8, x9
   14d7c:	stur	x8, [x29, #-32]
   14d80:	b	14cfc <argp_parse@@Base+0xc3c>
   14d84:	ldur	w8, [x29, #-12]
   14d88:	cmp	w8, #0x7
   14d8c:	b.ne	14d94 <argp_parse@@Base+0xcd4>  // b.any
   14d90:	stur	wzr, [x29, #-12]
   14d94:	ldur	x8, [x29, #-8]
   14d98:	ldr	x8, [x8, #88]
   14d9c:	mov	x9, #0xffffffffffffffb8    	// #-72
   14da0:	add	x8, x8, x9
   14da4:	stur	x8, [x29, #-32]
   14da8:	ldur	x8, [x29, #-32]
   14dac:	ldur	x9, [x29, #-8]
   14db0:	ldr	x9, [x9, #80]
   14db4:	cmp	x8, x9
   14db8:	b.cc	14df0 <argp_parse@@Base+0xd30>  // b.lo, b.ul, b.last
   14dbc:	ldur	x0, [x29, #-32]
   14dc0:	ldur	x8, [x29, #-8]
   14dc4:	add	x1, x8, #0x70
   14dc8:	mov	w2, #0x7                   	// #7
   14dcc:	movk	w2, #0x100, lsl #16
   14dd0:	mov	x8, xzr
   14dd4:	mov	x3, x8
   14dd8:	bl	15360 <_argp_input@@Base+0x540>
   14ddc:	ldur	x8, [x29, #-32]
   14de0:	mov	x9, #0xffffffffffffffb8    	// #-72
   14de4:	add	x8, x8, x9
   14de8:	stur	x8, [x29, #-32]
   14dec:	b	14da8 <argp_parse@@Base+0xce8>
   14df0:	ldur	w8, [x29, #-12]
   14df4:	cmp	w8, #0x7
   14df8:	b.ne	14e04 <argp_parse@@Base+0xd44>  // b.any
   14dfc:	mov	w8, #0x16                  	// #22
   14e00:	stur	w8, [x29, #-12]
   14e04:	ldur	x8, [x29, #-8]
   14e08:	ldr	x0, [x8, #208]
   14e0c:	bl	a930 <free@plt>
   14e10:	ldur	w0, [x29, #-12]
   14e14:	ldp	x29, x30, [sp, #80]
   14e18:	add	sp, sp, #0x60
   14e1c:	ret

0000000000014e20 <_argp_input@@Base>:
   14e20:	sub	sp, sp, #0x30
   14e24:	str	x0, [sp, #32]
   14e28:	str	x1, [sp, #24]
   14e2c:	ldr	x8, [sp, #24]
   14e30:	cbz	x8, 14e94 <_argp_input@@Base+0x74>
   14e34:	ldr	x8, [sp, #24]
   14e38:	ldr	x8, [x8, #88]
   14e3c:	str	x8, [sp, #8]
   14e40:	ldr	x8, [sp, #8]
   14e44:	ldr	x8, [x8, #80]
   14e48:	str	x8, [sp, #16]
   14e4c:	ldr	x8, [sp, #16]
   14e50:	ldr	x9, [sp, #8]
   14e54:	ldr	x9, [x9, #88]
   14e58:	cmp	x8, x9
   14e5c:	b.cs	14e94 <_argp_input@@Base+0x74>  // b.hs, b.nlast
   14e60:	ldr	x8, [sp, #16]
   14e64:	ldr	x8, [x8, #8]
   14e68:	ldr	x9, [sp, #32]
   14e6c:	cmp	x8, x9
   14e70:	b.ne	14e84 <_argp_input@@Base+0x64>  // b.any
   14e74:	ldr	x8, [sp, #16]
   14e78:	ldr	x8, [x8, #48]
   14e7c:	str	x8, [sp, #40]
   14e80:	b	14e9c <_argp_input@@Base+0x7c>
   14e84:	ldr	x8, [sp, #16]
   14e88:	add	x8, x8, #0x48
   14e8c:	str	x8, [sp, #16]
   14e90:	b	14e4c <_argp_input@@Base+0x2c>
   14e94:	mov	x8, xzr
   14e98:	str	x8, [sp, #40]
   14e9c:	ldr	x0, [sp, #40]
   14ea0:	add	sp, sp, #0x30
   14ea4:	ret
   14ea8:	sub	sp, sp, #0x40
   14eac:	stp	x29, x30, [sp, #48]
   14eb0:	add	x29, sp, #0x30
   14eb4:	mov	w8, #0xfffffffc            	// #-4
   14eb8:	adrp	x9, 61000 <gl_rbtree_list_implementation@@Base+0x1468>
   14ebc:	add	x9, x9, #0x5d0
   14ec0:	stur	w0, [x29, #-8]
   14ec4:	stur	x1, [x29, #-16]
   14ec8:	str	x2, [sp, #24]
   14ecc:	ldur	w10, [x29, #-8]
   14ed0:	cmp	w10, w8
   14ed4:	str	x9, [sp, #16]
   14ed8:	str	w10, [sp, #12]
   14edc:	b.eq	14fb0 <_argp_input@@Base+0x190>  // b.none
   14ee0:	b	14ee4 <_argp_input@@Base+0xc4>
   14ee4:	mov	w8, #0xfffffffd            	// #-3
   14ee8:	ldr	w9, [sp, #12]
   14eec:	cmp	w9, w8
   14ef0:	b.eq	14f3c <_argp_input@@Base+0x11c>  // b.none
   14ef4:	b	14ef8 <_argp_input@@Base+0xd8>
   14ef8:	mov	w8, #0xfffffffe            	// #-2
   14efc:	ldr	w9, [sp, #12]
   14f00:	cmp	w9, w8
   14f04:	b.eq	14f54 <_argp_input@@Base+0x134>  // b.none
   14f08:	b	14f0c <_argp_input@@Base+0xec>
   14f0c:	ldr	w8, [sp, #12]
   14f10:	cmp	w8, #0x3f
   14f14:	cset	w9, eq  // eq = none
   14f18:	eor	w9, w9, #0x1
   14f1c:	tbnz	w9, #0, 15010 <_argp_input@@Base+0x1f0>
   14f20:	b	14f24 <_argp_input@@Base+0x104>
   14f24:	ldr	x0, [sp, #24]
   14f28:	ldr	x8, [sp, #24]
   14f2c:	ldr	x1, [x8, #80]
   14f30:	mov	w2, #0x27a                 	// #634
   14f34:	bl	b080 <argp_state_help@plt>
   14f38:	b	1501c <_argp_input@@Base+0x1fc>
   14f3c:	ldr	x0, [sp, #24]
   14f40:	ldr	x8, [sp, #24]
   14f44:	ldr	x1, [x8, #80]
   14f48:	mov	w2, #0x201                 	// #513
   14f4c:	bl	b080 <argp_state_help@plt>
   14f50:	b	1501c <_argp_input@@Base+0x1fc>
   14f54:	ldur	x8, [x29, #-16]
   14f58:	adrp	x9, 5f000 <vasnprintf@@Base+0x1ce4c>
   14f5c:	ldr	x9, [x9, #3944]
   14f60:	str	x8, [x9]
   14f64:	ldur	x0, [x29, #-16]
   14f68:	bl	b130 <last_component@plt>
   14f6c:	ldr	x8, [sp, #24]
   14f70:	str	x0, [x8, #64]
   14f74:	ldr	x8, [sp, #24]
   14f78:	ldr	x8, [x8, #64]
   14f7c:	adrp	x9, 5f000 <vasnprintf@@Base+0x1ce4c>
   14f80:	ldr	x9, [x9, #3928]
   14f84:	str	x8, [x9]
   14f88:	ldr	x8, [sp, #24]
   14f8c:	ldr	w10, [x8, #28]
   14f90:	and	w10, w10, #0x3
   14f94:	cmp	w10, #0x1
   14f98:	b.ne	14fac <_argp_input@@Base+0x18c>  // b.any
   14f9c:	ldur	x8, [x29, #-16]
   14fa0:	ldr	x9, [sp, #24]
   14fa4:	ldr	x9, [x9, #16]
   14fa8:	str	x8, [x9]
   14fac:	b	1501c <_argp_input@@Base+0x1fc>
   14fb0:	ldur	x8, [x29, #-16]
   14fb4:	cbz	x8, 14fc4 <_argp_input@@Base+0x1a4>
   14fb8:	ldur	x8, [x29, #-16]
   14fbc:	str	x8, [sp]
   14fc0:	b	14fd0 <_argp_input@@Base+0x1b0>
   14fc4:	adrp	x8, 45000 <vasnprintf@@Base+0x2e4c>
   14fc8:	add	x8, x8, #0x1a4
   14fcc:	str	x8, [sp]
   14fd0:	ldr	x8, [sp]
   14fd4:	mov	x0, x8
   14fd8:	bl	abf0 <atoi@plt>
   14fdc:	ldr	x8, [sp, #16]
   14fe0:	str	w0, [x8]
   14fe4:	ldr	x8, [sp, #16]
   14fe8:	ldr	w9, [x8]
   14fec:	subs	w10, w9, #0x1
   14ff0:	str	w10, [x8]
   14ff4:	cmp	w9, #0x0
   14ff8:	cset	w9, le
   14ffc:	tbnz	w9, #0, 1500c <_argp_input@@Base+0x1ec>
   15000:	mov	w0, #0x1                   	// #1
   15004:	bl	b170 <sleep@plt>
   15008:	b	14fe4 <_argp_input@@Base+0x1c4>
   1500c:	b	1501c <_argp_input@@Base+0x1fc>
   15010:	mov	w8, #0x7                   	// #7
   15014:	stur	w8, [x29, #-4]
   15018:	b	15020 <_argp_input@@Base+0x200>
   1501c:	stur	wzr, [x29, #-4]
   15020:	ldur	w0, [x29, #-4]
   15024:	ldp	x29, x30, [sp, #48]
   15028:	add	sp, sp, #0x40
   1502c:	ret
   15030:	sub	sp, sp, #0x40
   15034:	stp	x29, x30, [sp, #48]
   15038:	add	x29, sp, #0x30
   1503c:	stur	w0, [x29, #-8]
   15040:	stur	x1, [x29, #-16]
   15044:	str	x2, [sp, #24]
   15048:	ldur	w8, [x29, #-8]
   1504c:	cmp	w8, #0x56
   15050:	cset	w8, eq  // eq = none
   15054:	eor	w8, w8, #0x1
   15058:	tbnz	w8, #0, 15120 <_argp_input@@Base+0x300>
   1505c:	b	15060 <_argp_input@@Base+0x240>
   15060:	adrp	x8, 5f000 <vasnprintf@@Base+0x1ce4c>
   15064:	ldr	x8, [x8, #3960]
   15068:	ldr	x8, [x8]
   1506c:	cbz	x8, 15090 <_argp_input@@Base+0x270>
   15070:	adrp	x8, 5f000 <vasnprintf@@Base+0x1ce4c>
   15074:	ldr	x8, [x8, #3960]
   15078:	ldr	x8, [x8]
   1507c:	ldr	x9, [sp, #24]
   15080:	ldr	x0, [x9, #80]
   15084:	ldr	x1, [sp, #24]
   15088:	blr	x8
   1508c:	b	15100 <_argp_input@@Base+0x2e0>
   15090:	adrp	x8, 5f000 <vasnprintf@@Base+0x1ce4c>
   15094:	ldr	x8, [x8, #3952]
   15098:	ldr	x8, [x8]
   1509c:	cbz	x8, 150c4 <_argp_input@@Base+0x2a4>
   150a0:	ldr	x8, [sp, #24]
   150a4:	ldr	x0, [x8, #80]
   150a8:	adrp	x8, 5f000 <vasnprintf@@Base+0x1ce4c>
   150ac:	ldr	x8, [x8, #3952]
   150b0:	ldr	x2, [x8]
   150b4:	adrp	x1, 45000 <vasnprintf@@Base+0x2e4c>
   150b8:	add	x1, x1, #0x1bf
   150bc:	bl	b160 <fprintf@plt>
   150c0:	b	15100 <_argp_input@@Base+0x2e0>
   150c4:	ldr	x0, [sp, #24]
   150c8:	adrp	x8, 44000 <vasnprintf@@Base+0x1e4c>
   150cc:	add	x8, x8, #0xe15
   150d0:	str	x0, [sp, #16]
   150d4:	mov	x0, x8
   150d8:	adrp	x1, 45000 <vasnprintf@@Base+0x2e4c>
   150dc:	add	x1, x1, #0x1c6
   150e0:	bl	b000 <dgettext@plt>
   150e4:	ldr	x8, [sp, #16]
   150e8:	str	x0, [sp, #8]
   150ec:	mov	x0, x8
   150f0:	adrp	x1, 45000 <vasnprintf@@Base+0x2e4c>
   150f4:	add	x1, x1, #0x1c3
   150f8:	ldr	x2, [sp, #8]
   150fc:	bl	b180 <argp_error@plt>
   15100:	ldr	x8, [sp, #24]
   15104:	ldr	w9, [x8, #28]
   15108:	and	w9, w9, #0x20
   1510c:	cbnz	w9, 1511c <_argp_input@@Base+0x2fc>
   15110:	mov	w8, wzr
   15114:	mov	w0, w8
   15118:	bl	b060 <exit@plt>
   1511c:	b	1512c <_argp_input@@Base+0x30c>
   15120:	mov	w8, #0x7                   	// #7
   15124:	stur	w8, [x29, #-4]
   15128:	b	15130 <_argp_input@@Base+0x310>
   1512c:	stur	wzr, [x29, #-4]
   15130:	ldur	w0, [x29, #-4]
   15134:	ldp	x29, x30, [sp, #48]
   15138:	add	sp, sp, #0x40
   1513c:	ret
   15140:	sub	sp, sp, #0x40
   15144:	stp	x29, x30, [sp, #48]
   15148:	add	x29, sp, #0x30
   1514c:	stur	x0, [x29, #-8]
   15150:	stur	x1, [x29, #-16]
   15154:	ldur	x8, [x29, #-8]
   15158:	ldr	x8, [x8, #32]
   1515c:	str	x8, [sp, #24]
   15160:	ldur	x8, [x29, #-8]
   15164:	ldr	x8, [x8]
   15168:	str	x8, [sp, #16]
   1516c:	ldr	x8, [sp, #16]
   15170:	cbnz	x8, 15180 <_argp_input@@Base+0x360>
   15174:	ldur	x8, [x29, #-8]
   15178:	ldr	x8, [x8, #8]
   1517c:	cbz	x8, 15204 <_argp_input@@Base+0x3e4>
   15180:	ldur	x8, [x29, #-16]
   15184:	ldr	x9, [x8, #16]
   15188:	add	x9, x9, #0x1
   1518c:	str	x9, [x8, #16]
   15190:	ldr	x8, [sp, #16]
   15194:	cbz	x8, 15204 <_argp_input@@Base+0x3e4>
   15198:	str	wzr, [sp, #12]
   1519c:	ldr	x8, [sp, #16]
   151a0:	add	x9, x8, #0x30
   151a4:	str	x9, [sp, #16]
   151a8:	mov	x0, x8
   151ac:	bl	b100 <_option_is_end@plt>
   151b0:	cmp	w0, #0x0
   151b4:	cset	w10, ne  // ne = any
   151b8:	eor	w10, w10, #0x1
   151bc:	tbnz	w10, #0, 151c4 <_argp_input@@Base+0x3a4>
   151c0:	b	151d4 <_argp_input@@Base+0x3b4>
   151c4:	ldr	w8, [sp, #12]
   151c8:	add	w8, w8, #0x1
   151cc:	str	w8, [sp, #12]
   151d0:	b	1519c <_argp_input@@Base+0x37c>
   151d4:	ldr	w8, [sp, #12]
   151d8:	mov	w9, #0x3                   	// #3
   151dc:	mul	w8, w8, w9
   151e0:	ldur	x10, [x29, #-16]
   151e4:	ldr	x11, [x10]
   151e8:	add	x11, x11, w8, sxtw
   151ec:	str	x11, [x10]
   151f0:	ldrsw	x10, [sp, #12]
   151f4:	ldur	x11, [x29, #-16]
   151f8:	ldr	x12, [x11, #8]
   151fc:	add	x10, x12, x10
   15200:	str	x10, [x11, #8]
   15204:	ldr	x8, [sp, #24]
   15208:	cbz	x8, 15244 <_argp_input@@Base+0x424>
   1520c:	ldr	x8, [sp, #24]
   15210:	ldr	x8, [x8]
   15214:	cbz	x8, 15244 <_argp_input@@Base+0x424>
   15218:	ldr	x8, [sp, #24]
   1521c:	add	x9, x8, #0x20
   15220:	str	x9, [sp, #24]
   15224:	ldr	x0, [x8]
   15228:	ldur	x1, [x29, #-16]
   1522c:	bl	15140 <_argp_input@@Base+0x320>
   15230:	ldur	x8, [x29, #-16]
   15234:	ldr	x9, [x8, #24]
   15238:	add	x9, x9, #0x1
   1523c:	str	x9, [x8, #24]
   15240:	b	1520c <_argp_input@@Base+0x3ec>
   15244:	ldp	x29, x30, [sp, #48]
   15248:	add	sp, sp, #0x40
   1524c:	ret
   15250:	sub	sp, sp, #0x50
   15254:	stp	x29, x30, [sp, #64]
   15258:	add	x29, sp, #0x40
   1525c:	add	x8, sp, #0x8
   15260:	stur	x0, [x29, #-8]
   15264:	stur	x1, [x29, #-16]
   15268:	stur	w2, [x29, #-20]
   1526c:	ldur	x9, [x29, #-8]
   15270:	str	x9, [sp, #8]
   15274:	ldur	x9, [x29, #-8]
   15278:	ldr	x9, [x9, #8]
   1527c:	str	x9, [x8, #8]
   15280:	ldur	x9, [x29, #-8]
   15284:	ldr	x9, [x9, #16]
   15288:	str	x9, [x8, #16]
   1528c:	ldur	x9, [x29, #-8]
   15290:	ldr	x9, [x9, #96]
   15294:	str	x9, [x8, #24]
   15298:	ldur	w10, [x29, #-20]
   1529c:	and	w10, w10, #0x8
   152a0:	cbz	w10, 152c0 <_argp_input@@Base+0x4a0>
   152a4:	add	x8, sp, #0x8
   152a8:	ldr	x9, [x8, #8]
   152ac:	add	x10, x9, #0x1
   152b0:	str	x10, [x8, #8]
   152b4:	mov	w11, #0x2d                  	// #45
   152b8:	strb	w11, [x9]
   152bc:	b	152e4 <_argp_input@@Base+0x4c4>
   152c0:	ldur	w8, [x29, #-20]
   152c4:	and	w8, w8, #0x4
   152c8:	cbz	w8, 152e4 <_argp_input@@Base+0x4c4>
   152cc:	add	x8, sp, #0x8
   152d0:	ldr	x9, [x8, #8]
   152d4:	add	x10, x9, #0x1
   152d8:	str	x10, [x8, #8]
   152dc:	mov	w11, #0x2b                  	// #43
   152e0:	strb	w11, [x9]
   152e4:	add	x8, sp, #0x8
   152e8:	ldr	x9, [x8, #8]
   152ec:	mov	w10, #0x0                   	// #0
   152f0:	strb	w10, [x9]
   152f4:	ldr	x8, [x8, #16]
   152f8:	mov	x9, xzr
   152fc:	str	x9, [x8]
   15300:	ldur	x8, [x29, #-16]
   15304:	ldur	x9, [x29, #-8]
   15308:	str	x8, [x9]
   1530c:	ldur	x8, [x29, #-16]
   15310:	cbz	x8, 15344 <_argp_input@@Base+0x524>
   15314:	ldur	x0, [x29, #-16]
   15318:	ldur	x8, [x29, #-8]
   1531c:	ldr	x3, [x8, #80]
   15320:	mov	x8, xzr
   15324:	mov	x1, x8
   15328:	mov	w9, wzr
   1532c:	mov	w2, w9
   15330:	add	x4, sp, #0x8
   15334:	bl	15418 <_argp_input@@Base+0x5f8>
   15338:	ldur	x8, [x29, #-8]
   1533c:	str	x0, [x8, #88]
   15340:	b	15354 <_argp_input@@Base+0x534>
   15344:	ldur	x8, [x29, #-8]
   15348:	ldr	x8, [x8, #80]
   1534c:	ldur	x9, [x29, #-8]
   15350:	str	x8, [x9, #88]
   15354:	ldp	x29, x30, [sp, #64]
   15358:	add	sp, sp, #0x50
   1535c:	ret
   15360:	sub	sp, sp, #0x40
   15364:	stp	x29, x30, [sp, #48]
   15368:	add	x29, sp, #0x30
   1536c:	stur	x0, [x29, #-16]
   15370:	str	x1, [sp, #24]
   15374:	str	w2, [sp, #20]
   15378:	str	x3, [sp, #8]
   1537c:	ldur	x8, [x29, #-16]
   15380:	ldr	x8, [x8]
   15384:	cbz	x8, 15400 <_argp_input@@Base+0x5e0>
   15388:	ldur	x8, [x29, #-16]
   1538c:	ldr	x8, [x8, #64]
   15390:	ldr	x9, [sp, #24]
   15394:	str	x8, [x9, #56]
   15398:	ldur	x8, [x29, #-16]
   1539c:	ldr	x8, [x8, #48]
   153a0:	ldr	x9, [sp, #24]
   153a4:	str	x8, [x9, #40]
   153a8:	ldur	x8, [x29, #-16]
   153ac:	ldr	x8, [x8, #56]
   153b0:	ldr	x9, [sp, #24]
   153b4:	str	x8, [x9, #48]
   153b8:	ldur	x8, [x29, #-16]
   153bc:	ldr	w10, [x8, #24]
   153c0:	ldr	x8, [sp, #24]
   153c4:	str	w10, [x8, #32]
   153c8:	ldur	x8, [x29, #-16]
   153cc:	ldr	x8, [x8]
   153d0:	ldr	w0, [sp, #20]
   153d4:	ldr	x1, [sp, #8]
   153d8:	ldr	x2, [sp, #24]
   153dc:	blr	x8
   153e0:	str	w0, [sp, #4]
   153e4:	ldr	x8, [sp, #24]
   153e8:	ldr	x8, [x8, #56]
   153ec:	ldur	x9, [x29, #-16]
   153f0:	str	x8, [x9, #64]
   153f4:	ldr	w10, [sp, #4]
   153f8:	stur	w10, [x29, #-4]
   153fc:	b	15408 <_argp_input@@Base+0x5e8>
   15400:	mov	w8, #0x7                   	// #7
   15404:	stur	w8, [x29, #-4]
   15408:	ldur	w0, [x29, #-4]
   1540c:	ldp	x29, x30, [sp, #48]
   15410:	add	sp, sp, #0x40
   15414:	ret
   15418:	sub	sp, sp, #0x60
   1541c:	stp	x29, x30, [sp, #80]
   15420:	add	x29, sp, #0x50
   15424:	stur	x0, [x29, #-8]
   15428:	stur	x1, [x29, #-16]
   1542c:	stur	w2, [x29, #-20]
   15430:	stur	x3, [x29, #-32]
   15434:	str	x4, [sp, #40]
   15438:	ldur	x8, [x29, #-8]
   1543c:	ldr	x8, [x8]
   15440:	str	x8, [sp, #32]
   15444:	ldur	x8, [x29, #-8]
   15448:	ldr	x8, [x8, #32]
   1544c:	str	x8, [sp, #24]
   15450:	ldr	x8, [sp, #32]
   15454:	cbnz	x8, 15464 <_argp_input@@Base+0x644>
   15458:	ldur	x8, [x29, #-8]
   1545c:	ldr	x8, [x8, #8]
   15460:	cbz	x8, 15748 <_argp_input@@Base+0x928>
   15464:	ldr	x8, [sp, #32]
   15468:	cbz	x8, 15660 <_argp_input@@Base+0x840>
   1546c:	ldr	x8, [sp, #32]
   15470:	str	x8, [sp, #16]
   15474:	ldr	x0, [sp, #16]
   15478:	bl	b100 <_option_is_end@plt>
   1547c:	cmp	w0, #0x0
   15480:	cset	w8, ne  // ne = any
   15484:	eor	w8, w8, #0x1
   15488:	tbnz	w8, #0, 15490 <_argp_input@@Base+0x670>
   1548c:	b	15660 <_argp_input@@Base+0x840>
   15490:	ldr	x8, [sp, #16]
   15494:	ldr	w9, [x8, #24]
   15498:	and	w9, w9, #0x4
   1549c:	cbnz	w9, 154a8 <_argp_input@@Base+0x688>
   154a0:	ldr	x8, [sp, #16]
   154a4:	str	x8, [sp, #32]
   154a8:	ldr	x8, [sp, #32]
   154ac:	ldr	w9, [x8, #24]
   154b0:	and	w9, w9, #0x8
   154b4:	cbnz	w9, 15650 <_argp_input@@Base+0x830>
   154b8:	ldr	x0, [sp, #16]
   154bc:	bl	b110 <_option_is_short@plt>
   154c0:	cbz	w0, 1553c <_argp_input@@Base+0x71c>
   154c4:	ldr	x8, [sp, #16]
   154c8:	ldr	w9, [x8, #8]
   154cc:	ldr	x8, [sp, #40]
   154d0:	ldr	x10, [x8, #8]
   154d4:	add	x11, x10, #0x1
   154d8:	str	x11, [x8, #8]
   154dc:	strb	w9, [x10]
   154e0:	ldr	x8, [sp, #32]
   154e4:	ldr	x8, [x8, #16]
   154e8:	cbz	x8, 1552c <_argp_input@@Base+0x70c>
   154ec:	ldr	x8, [sp, #40]
   154f0:	ldr	x9, [x8, #8]
   154f4:	add	x10, x9, #0x1
   154f8:	str	x10, [x8, #8]
   154fc:	mov	w11, #0x3a                  	// #58
   15500:	strb	w11, [x9]
   15504:	ldr	x8, [sp, #32]
   15508:	ldr	w11, [x8, #24]
   1550c:	and	w11, w11, #0x1
   15510:	cbz	w11, 1552c <_argp_input@@Base+0x70c>
   15514:	ldr	x8, [sp, #40]
   15518:	ldr	x9, [x8, #8]
   1551c:	add	x10, x9, #0x1
   15520:	str	x10, [x8, #8]
   15524:	mov	w11, #0x3a                  	// #58
   15528:	strb	w11, [x9]
   1552c:	ldr	x8, [sp, #40]
   15530:	ldr	x8, [x8, #8]
   15534:	mov	w9, #0x0                   	// #0
   15538:	strb	w9, [x8]
   1553c:	ldr	x8, [sp, #16]
   15540:	ldr	x8, [x8]
   15544:	cbz	x8, 15650 <_argp_input@@Base+0x830>
   15548:	ldr	x8, [sp, #40]
   1554c:	ldr	x8, [x8]
   15550:	ldr	x0, [x8, #16]
   15554:	ldr	x8, [sp, #16]
   15558:	ldr	x1, [x8]
   1555c:	bl	157b0 <_argp_input@@Base+0x990>
   15560:	cmp	w0, #0x0
   15564:	cset	w9, ge  // ge = tcont
   15568:	tbnz	w9, #0, 15650 <_argp_input@@Base+0x830>
   1556c:	ldr	x8, [sp, #16]
   15570:	ldr	x8, [x8]
   15574:	ldr	x9, [sp, #40]
   15578:	ldr	x9, [x9, #16]
   1557c:	str	x8, [x9]
   15580:	ldr	x8, [sp, #32]
   15584:	ldr	x8, [x8, #16]
   15588:	cbz	x8, 155ac <_argp_input@@Base+0x78c>
   1558c:	ldr	x8, [sp, #32]
   15590:	ldr	w9, [x8, #24]
   15594:	mov	w10, #0x1                   	// #1
   15598:	mov	w11, #0x2                   	// #2
   1559c:	tst	w9, #0x1
   155a0:	csel	w9, w11, w10, ne  // ne = any
   155a4:	str	w9, [sp, #4]
   155a8:	b	155b4 <_argp_input@@Base+0x794>
   155ac:	mov	w8, wzr
   155b0:	str	w8, [sp, #4]
   155b4:	ldr	w8, [sp, #4]
   155b8:	ldr	x9, [sp, #40]
   155bc:	ldr	x9, [x9, #16]
   155c0:	str	w8, [x9, #8]
   155c4:	ldr	x9, [sp, #40]
   155c8:	ldr	x9, [x9, #16]
   155cc:	mov	x10, xzr
   155d0:	str	x10, [x9, #16]
   155d4:	ldr	x9, [sp, #16]
   155d8:	ldr	w8, [x9, #8]
   155dc:	cbz	w8, 155f0 <_argp_input@@Base+0x7d0>
   155e0:	ldr	x8, [sp, #16]
   155e4:	ldr	w9, [x8, #8]
   155e8:	str	w9, [sp]
   155ec:	b	155fc <_argp_input@@Base+0x7dc>
   155f0:	ldr	x8, [sp, #32]
   155f4:	ldr	w9, [x8, #8]
   155f8:	str	w9, [sp]
   155fc:	ldr	w8, [sp]
   15600:	and	w8, w8, #0xffffff
   15604:	ldur	x9, [x29, #-32]
   15608:	ldr	x10, [sp, #40]
   1560c:	ldr	x10, [x10]
   15610:	ldr	x10, [x10, #80]
   15614:	subs	x9, x9, x10
   15618:	mov	x10, #0x48                  	// #72
   1561c:	sdiv	x9, x9, x10
   15620:	add	x9, x9, #0x1
   15624:	lsl	x9, x9, #24
   15628:	add	x9, x9, w8, sxtw
   1562c:	ldr	x10, [sp, #40]
   15630:	ldr	x10, [x10, #16]
   15634:	str	w9, [x10, #24]
   15638:	ldr	x10, [sp, #40]
   1563c:	ldr	x11, [x10, #16]
   15640:	add	x12, x11, #0x20
   15644:	str	x12, [x10, #16]
   15648:	mov	x10, xzr
   1564c:	str	x10, [x11, #32]
   15650:	ldr	x8, [sp, #16]
   15654:	add	x8, x8, #0x30
   15658:	str	x8, [sp, #16]
   1565c:	b	15474 <_argp_input@@Base+0x654>
   15660:	ldur	x8, [x29, #-8]
   15664:	ldr	x8, [x8, #8]
   15668:	ldur	x9, [x29, #-32]
   1566c:	str	x8, [x9]
   15670:	ldur	x8, [x29, #-8]
   15674:	ldur	x9, [x29, #-32]
   15678:	str	x8, [x9, #8]
   1567c:	ldr	x8, [sp, #40]
   15680:	ldr	x8, [x8, #8]
   15684:	ldur	x9, [x29, #-32]
   15688:	str	x8, [x9, #16]
   1568c:	ldur	x8, [x29, #-32]
   15690:	str	wzr, [x8, #24]
   15694:	ldur	x8, [x29, #-16]
   15698:	ldur	x9, [x29, #-32]
   1569c:	str	x8, [x9, #32]
   156a0:	ldur	w10, [x29, #-20]
   156a4:	ldur	x8, [x29, #-32]
   156a8:	str	w10, [x8, #40]
   156ac:	ldur	x8, [x29, #-32]
   156b0:	mov	x9, xzr
   156b4:	str	x9, [x8, #48]
   156b8:	ldur	x8, [x29, #-32]
   156bc:	str	x9, [x8, #64]
   156c0:	ldur	x8, [x29, #-32]
   156c4:	str	x9, [x8, #56]
   156c8:	ldr	x8, [sp, #24]
   156cc:	cbz	x8, 15734 <_argp_input@@Base+0x914>
   156d0:	str	wzr, [sp, #12]
   156d4:	ldr	x8, [sp, #24]
   156d8:	ldr	w9, [sp, #12]
   156dc:	mov	w10, w9
   156e0:	mov	x11, #0x20                  	// #32
   156e4:	mul	x10, x11, x10
   156e8:	add	x8, x8, x10
   156ec:	ldr	x8, [x8]
   156f0:	cbz	x8, 15704 <_argp_input@@Base+0x8e4>
   156f4:	ldr	w8, [sp, #12]
   156f8:	add	w8, w8, #0x1
   156fc:	str	w8, [sp, #12]
   15700:	b	156d4 <_argp_input@@Base+0x8b4>
   15704:	ldr	x8, [sp, #40]
   15708:	ldr	x8, [x8, #24]
   1570c:	ldur	x9, [x29, #-32]
   15710:	str	x8, [x9, #56]
   15714:	ldr	w10, [sp, #12]
   15718:	mov	w8, w10
   1571c:	ldr	x9, [sp, #40]
   15720:	ldr	x11, [x9, #24]
   15724:	mov	x12, #0x8                   	// #8
   15728:	mul	x8, x12, x8
   1572c:	add	x8, x11, x8
   15730:	str	x8, [x9, #24]
   15734:	ldur	x8, [x29, #-32]
   15738:	add	x9, x8, #0x48
   1573c:	stur	x9, [x29, #-32]
   15740:	stur	x8, [x29, #-16]
   15744:	b	15750 <_argp_input@@Base+0x930>
   15748:	mov	x8, xzr
   1574c:	stur	x8, [x29, #-16]
   15750:	ldr	x8, [sp, #24]
   15754:	cbz	x8, 157a0 <_argp_input@@Base+0x980>
   15758:	str	wzr, [sp, #8]
   1575c:	ldr	x8, [sp, #24]
   15760:	ldr	x8, [x8]
   15764:	cbz	x8, 157a0 <_argp_input@@Base+0x980>
   15768:	ldr	x8, [sp, #24]
   1576c:	add	x9, x8, #0x20
   15770:	str	x9, [sp, #24]
   15774:	ldr	x0, [x8]
   15778:	ldur	x1, [x29, #-16]
   1577c:	ldr	w10, [sp, #8]
   15780:	add	w11, w10, #0x1
   15784:	str	w11, [sp, #8]
   15788:	ldur	x3, [x29, #-32]
   1578c:	ldr	x4, [sp, #40]
   15790:	mov	w2, w10
   15794:	bl	15418 <_argp_input@@Base+0x5f8>
   15798:	stur	x0, [x29, #-32]
   1579c:	b	1575c <_argp_input@@Base+0x93c>
   157a0:	ldur	x0, [x29, #-32]
   157a4:	ldp	x29, x30, [sp, #80]
   157a8:	add	sp, sp, #0x60
   157ac:	ret
   157b0:	sub	sp, sp, #0x30
   157b4:	stp	x29, x30, [sp, #32]
   157b8:	add	x29, sp, #0x20
   157bc:	str	x0, [sp, #16]
   157c0:	str	x1, [sp, #8]
   157c4:	ldr	x8, [sp, #16]
   157c8:	str	x8, [sp]
   157cc:	ldr	x8, [sp]
   157d0:	ldr	x8, [x8]
   157d4:	cbz	x8, 15820 <_argp_input@@Base+0xa00>
   157d8:	ldr	x8, [sp, #8]
   157dc:	cbz	x8, 15810 <_argp_input@@Base+0x9f0>
   157e0:	ldr	x8, [sp]
   157e4:	ldr	x0, [x8]
   157e8:	ldr	x1, [sp, #8]
   157ec:	bl	aa00 <strcmp@plt>
   157f0:	cbnz	w0, 15810 <_argp_input@@Base+0x9f0>
   157f4:	ldr	x8, [sp]
   157f8:	ldr	x9, [sp, #16]
   157fc:	subs	x8, x8, x9
   15800:	mov	x9, #0x20                  	// #32
   15804:	sdiv	x8, x8, x9
   15808:	stur	w8, [x29, #-4]
   1580c:	b	1584c <_argp_input@@Base+0xa2c>
   15810:	ldr	x8, [sp]
   15814:	add	x8, x8, #0x20
   15818:	str	x8, [sp]
   1581c:	b	157cc <_argp_input@@Base+0x9ac>
   15820:	ldr	x8, [sp, #8]
   15824:	cbnz	x8, 15844 <_argp_input@@Base+0xa24>
   15828:	ldr	x8, [sp]
   1582c:	ldr	x9, [sp, #16]
   15830:	subs	x8, x8, x9
   15834:	mov	x9, #0x20                  	// #32
   15838:	sdiv	x8, x8, x9
   1583c:	stur	w8, [x29, #-4]
   15840:	b	1584c <_argp_input@@Base+0xa2c>
   15844:	mov	w8, #0xffffffff            	// #-1
   15848:	stur	w8, [x29, #-4]
   1584c:	ldur	w0, [x29, #-4]
   15850:	ldp	x29, x30, [sp, #32]
   15854:	add	sp, sp, #0x30
   15858:	ret
   1585c:	sub	sp, sp, #0x40
   15860:	stp	x29, x30, [sp, #48]
   15864:	add	x29, sp, #0x30
   15868:	mov	w8, #0x7                   	// #7
   1586c:	stur	x0, [x29, #-8]
   15870:	stur	x1, [x29, #-16]
   15874:	ldur	x9, [x29, #-8]
   15878:	ldr	w10, [x9, #136]
   1587c:	subs	w10, w10, #0x1
   15880:	str	w10, [x9, #136]
   15884:	stur	w10, [x29, #-20]
   15888:	str	w8, [sp, #24]
   1588c:	str	wzr, [sp, #12]
   15890:	ldur	x9, [x29, #-8]
   15894:	ldr	x9, [x9, #80]
   15898:	str	x9, [sp, #16]
   1589c:	ldr	x8, [sp, #16]
   158a0:	ldur	x9, [x29, #-8]
   158a4:	ldr	x9, [x9, #88]
   158a8:	mov	w10, #0x0                   	// #0
   158ac:	cmp	x8, x9
   158b0:	str	w10, [sp, #8]
   158b4:	b.cs	158c8 <_argp_input@@Base+0xaa8>  // b.hs, b.nlast
   158b8:	ldr	w8, [sp, #24]
   158bc:	cmp	w8, #0x7
   158c0:	cset	w8, eq  // eq = none
   158c4:	str	w8, [sp, #8]
   158c8:	ldr	w8, [sp, #8]
   158cc:	tbnz	w8, #0, 158d4 <_argp_input@@Base+0xab4>
   158d0:	b	1595c <_argp_input@@Base+0xb3c>
   158d4:	ldur	x8, [x29, #-8]
   158d8:	ldr	w9, [x8, #136]
   158dc:	add	w9, w9, #0x1
   158e0:	str	w9, [x8, #136]
   158e4:	str	wzr, [sp, #12]
   158e8:	ldr	x0, [sp, #16]
   158ec:	ldur	x8, [x29, #-8]
   158f0:	add	x1, x8, #0x70
   158f4:	ldr	w2, [sp, #12]
   158f8:	ldur	x3, [x29, #-16]
   158fc:	bl	15360 <_argp_input@@Base+0x540>
   15900:	str	w0, [sp, #24]
   15904:	ldr	w9, [sp, #24]
   15908:	cmp	w9, #0x7
   1590c:	b.ne	1594c <_argp_input@@Base+0xb2c>  // b.any
   15910:	ldur	x8, [x29, #-8]
   15914:	ldr	w9, [x8, #136]
   15918:	subs	w9, w9, #0x1
   1591c:	str	w9, [x8, #136]
   15920:	mov	w9, #0x6                   	// #6
   15924:	movk	w9, #0x100, lsl #16
   15928:	str	w9, [sp, #12]
   1592c:	ldr	x0, [sp, #16]
   15930:	ldur	x8, [x29, #-8]
   15934:	add	x1, x8, #0x70
   15938:	ldr	w2, [sp, #12]
   1593c:	mov	x8, xzr
   15940:	mov	x3, x8
   15944:	bl	15360 <_argp_input@@Base+0x540>
   15948:	str	w0, [sp, #24]
   1594c:	ldr	x8, [sp, #16]
   15950:	add	x8, x8, #0x48
   15954:	str	x8, [sp, #16]
   15958:	b	1589c <_argp_input@@Base+0xa7c>
   1595c:	ldr	w8, [sp, #24]
   15960:	cbnz	w8, 159d8 <_argp_input@@Base+0xbb8>
   15964:	ldr	w8, [sp, #12]
   15968:	mov	w9, #0x6                   	// #6
   1596c:	movk	w9, #0x100, lsl #16
   15970:	cmp	w8, w9
   15974:	b.ne	15988 <_argp_input@@Base+0xb68>  // b.any
   15978:	ldur	x8, [x29, #-8]
   1597c:	ldr	w9, [x8, #120]
   15980:	ldur	x8, [x29, #-8]
   15984:	str	w9, [x8, #136]
   15988:	ldur	x8, [x29, #-8]
   1598c:	ldr	w9, [x8, #136]
   15990:	ldur	w10, [x29, #-20]
   15994:	cmp	w9, w10
   15998:	b.le	159cc <_argp_input@@Base+0xbac>
   1599c:	ldur	x8, [x29, #-8]
   159a0:	ldr	w9, [x8, #136]
   159a4:	ldur	w10, [x29, #-20]
   159a8:	subs	w9, w9, w10
   159ac:	ldr	x8, [sp, #16]
   159b0:	mov	x11, #0xffffffffffffffb8    	// #-72
   159b4:	add	x11, x8, x11
   159b8:	str	x11, [sp, #16]
   159bc:	ldur	w10, [x8, #-48]
   159c0:	add	w9, w10, w9
   159c4:	stur	w9, [x8, #-48]
   159c8:	b	159d8 <_argp_input@@Base+0xbb8>
   159cc:	ldur	x8, [x29, #-8]
   159d0:	mov	w9, #0x1                   	// #1
   159d4:	str	w9, [x8, #104]
   159d8:	ldr	w0, [sp, #24]
   159dc:	ldp	x29, x30, [sp, #48]
   159e0:	add	sp, sp, #0x40
   159e4:	ret
   159e8:	sub	sp, sp, #0x90
   159ec:	stp	x29, x30, [sp, #128]
   159f0:	add	x29, sp, #0x80
   159f4:	mov	w8, #0x7                   	// #7
   159f8:	stur	x0, [x29, #-8]
   159fc:	stur	w1, [x29, #-12]
   15a00:	stur	x2, [x29, #-24]
   15a04:	ldur	w9, [x29, #-12]
   15a08:	asr	w9, w9, #24
   15a0c:	stur	w9, [x29, #-28]
   15a10:	stur	w8, [x29, #-32]
   15a14:	ldur	w8, [x29, #-28]
   15a18:	cbnz	w8, 15aa4 <_argp_input@@Base+0xc84>
   15a1c:	ldur	x8, [x29, #-8]
   15a20:	ldr	x0, [x8, #8]
   15a24:	ldur	w1, [x29, #-12]
   15a28:	bl	aa80 <strchr@plt>
   15a2c:	stur	x0, [x29, #-48]
   15a30:	ldur	x8, [x29, #-48]
   15a34:	cbz	x8, 15aa0 <_argp_input@@Base+0xc80>
   15a38:	ldur	x8, [x29, #-8]
   15a3c:	ldr	x8, [x8, #80]
   15a40:	stur	x8, [x29, #-40]
   15a44:	ldur	x8, [x29, #-40]
   15a48:	ldur	x9, [x29, #-8]
   15a4c:	ldr	x9, [x9, #88]
   15a50:	cmp	x8, x9
   15a54:	b.cs	15aa0 <_argp_input@@Base+0xc80>  // b.hs, b.nlast
   15a58:	ldur	x8, [x29, #-40]
   15a5c:	ldr	x8, [x8, #16]
   15a60:	ldur	x9, [x29, #-48]
   15a64:	cmp	x8, x9
   15a68:	b.ls	15a90 <_argp_input@@Base+0xc70>  // b.plast
   15a6c:	ldur	x0, [x29, #-40]
   15a70:	ldur	x8, [x29, #-8]
   15a74:	add	x1, x8, #0x70
   15a78:	ldur	w2, [x29, #-12]
   15a7c:	ldur	x8, [x29, #-8]
   15a80:	ldr	x3, [x8, #40]
   15a84:	bl	15360 <_argp_input@@Base+0x540>
   15a88:	stur	w0, [x29, #-32]
   15a8c:	b	15aa0 <_argp_input@@Base+0xc80>
   15a90:	ldur	x8, [x29, #-40]
   15a94:	add	x8, x8, #0x48
   15a98:	stur	x8, [x29, #-40]
   15a9c:	b	15a44 <_argp_input@@Base+0xc24>
   15aa0:	b	15b08 <_argp_input@@Base+0xce8>
   15aa4:	ldur	w8, [x29, #-12]
   15aa8:	mov	w9, wzr
   15aac:	mov	w10, #0xff000000            	// #-16777216
   15ab0:	tst	w8, #0x800000
   15ab4:	csel	w8, w10, w9, ne  // ne = any
   15ab8:	ldur	w9, [x29, #-12]
   15abc:	and	w9, w9, #0xffffff
   15ac0:	orr	w8, w8, w9
   15ac4:	stur	w8, [x29, #-52]
   15ac8:	ldur	x11, [x29, #-8]
   15acc:	ldr	x11, [x11, #80]
   15ad0:	ldur	w8, [x29, #-28]
   15ad4:	subs	w8, w8, #0x1
   15ad8:	mov	w0, w8
   15adc:	sxtw	x12, w0
   15ae0:	mov	x13, #0x48                  	// #72
   15ae4:	mul	x12, x13, x12
   15ae8:	add	x0, x11, x12
   15aec:	ldur	x11, [x29, #-8]
   15af0:	add	x1, x11, #0x70
   15af4:	ldur	w2, [x29, #-52]
   15af8:	ldur	x11, [x29, #-8]
   15afc:	ldr	x3, [x11, #40]
   15b00:	bl	15360 <_argp_input@@Base+0x540>
   15b04:	stur	w0, [x29, #-32]
   15b08:	ldur	w8, [x29, #-32]
   15b0c:	cmp	w8, #0x7
   15b10:	b.ne	15c34 <_argp_input@@Base+0xe14>  // b.any
   15b14:	ldur	w8, [x29, #-28]
   15b18:	cbnz	w8, 15b6c <_argp_input@@Base+0xd4c>
   15b1c:	ldur	x8, [x29, #-8]
   15b20:	add	x0, x8, #0x70
   15b24:	ldur	w2, [x29, #-12]
   15b28:	adrp	x8, 44000 <vasnprintf@@Base+0x1e4c>
   15b2c:	add	x8, x8, #0xe15
   15b30:	str	x0, [sp, #56]
   15b34:	mov	x0, x8
   15b38:	adrp	x1, 45000 <vasnprintf@@Base+0x2e4c>
   15b3c:	add	x1, x1, #0x96e
   15b40:	str	w2, [sp, #52]
   15b44:	bl	b000 <dgettext@plt>
   15b48:	ldr	x8, [sp, #56]
   15b4c:	str	x0, [sp, #40]
   15b50:	mov	x0, x8
   15b54:	adrp	x1, 45000 <vasnprintf@@Base+0x2e4c>
   15b58:	add	x1, x1, #0x1ec
   15b5c:	ldr	w2, [sp, #52]
   15b60:	ldr	x3, [sp, #40]
   15b64:	bl	b180 <argp_error@plt>
   15b68:	b	15c34 <_argp_input@@Base+0xe14>
   15b6c:	ldur	x8, [x29, #-8]
   15b70:	ldr	x8, [x8, #16]
   15b74:	str	x8, [sp, #64]
   15b78:	ldr	x8, [sp, #64]
   15b7c:	ldr	w9, [x8, #24]
   15b80:	ldur	w10, [x29, #-12]
   15b84:	mov	w11, #0x0                   	// #0
   15b88:	cmp	w9, w10
   15b8c:	str	w11, [sp, #36]
   15b90:	b.eq	15ba8 <_argp_input@@Base+0xd88>  // b.none
   15b94:	ldr	x8, [sp, #64]
   15b98:	ldr	x8, [x8]
   15b9c:	cmp	x8, #0x0
   15ba0:	cset	w9, ne  // ne = any
   15ba4:	str	w9, [sp, #36]
   15ba8:	ldr	w8, [sp, #36]
   15bac:	tbnz	w8, #0, 15bb4 <_argp_input@@Base+0xd94>
   15bb0:	b	15bc4 <_argp_input@@Base+0xda4>
   15bb4:	ldr	x8, [sp, #64]
   15bb8:	add	x8, x8, #0x20
   15bbc:	str	x8, [sp, #64]
   15bc0:	b	15b78 <_argp_input@@Base+0xd58>
   15bc4:	ldur	x8, [x29, #-8]
   15bc8:	add	x0, x8, #0x70
   15bcc:	ldr	x8, [sp, #64]
   15bd0:	ldr	x8, [x8]
   15bd4:	str	x0, [sp, #24]
   15bd8:	cbz	x8, 15bec <_argp_input@@Base+0xdcc>
   15bdc:	ldr	x8, [sp, #64]
   15be0:	ldr	x8, [x8]
   15be4:	str	x8, [sp, #16]
   15be8:	b	15bf8 <_argp_input@@Base+0xdd8>
   15bec:	adrp	x8, 45000 <vasnprintf@@Base+0x2e4c>
   15bf0:	add	x8, x8, #0x1fd
   15bf4:	str	x8, [sp, #16]
   15bf8:	ldr	x8, [sp, #16]
   15bfc:	adrp	x0, 44000 <vasnprintf@@Base+0x1e4c>
   15c00:	add	x0, x0, #0xe15
   15c04:	adrp	x1, 45000 <vasnprintf@@Base+0x2e4c>
   15c08:	add	x1, x1, #0x96e
   15c0c:	str	x8, [sp, #8]
   15c10:	bl	b000 <dgettext@plt>
   15c14:	ldr	x8, [sp, #24]
   15c18:	str	x0, [sp]
   15c1c:	mov	x0, x8
   15c20:	adrp	x1, 45000 <vasnprintf@@Base+0x2e4c>
   15c24:	add	x1, x1, #0x1f4
   15c28:	ldr	x2, [sp, #8]
   15c2c:	ldr	x3, [sp]
   15c30:	bl	b180 <argp_error@plt>
   15c34:	ldur	w0, [x29, #-32]
   15c38:	ldp	x29, x30, [sp, #128]
   15c3c:	add	sp, sp, #0x90
   15c40:	ret

0000000000015c44 <argp_usage@@Base>:
   15c44:	sub	sp, sp, #0x20
   15c48:	stp	x29, x30, [sp, #16]
   15c4c:	add	x29, sp, #0x10
   15c50:	adrp	x8, 5f000 <vasnprintf@@Base+0x1ce4c>
   15c54:	ldr	x8, [x8, #3808]
   15c58:	mov	w2, #0x106                 	// #262
   15c5c:	str	x0, [sp, #8]
   15c60:	ldr	x0, [sp, #8]
   15c64:	ldr	x1, [x8]
   15c68:	bl	b080 <argp_state_help@plt>
   15c6c:	ldp	x29, x30, [sp, #16]
   15c70:	add	sp, sp, #0x20
   15c74:	ret

0000000000015c78 <_option_is_short@@Base>:
   15c78:	sub	sp, sp, #0x30
   15c7c:	stp	x29, x30, [sp, #32]
   15c80:	add	x29, sp, #0x20
   15c84:	str	x0, [sp, #16]
   15c88:	ldr	x8, [sp, #16]
   15c8c:	ldr	w9, [x8, #24]
   15c90:	and	w9, w9, #0x8
   15c94:	cbz	w9, 15ca0 <_option_is_short@@Base+0x28>
   15c98:	stur	wzr, [x29, #-4]
   15c9c:	b	15d00 <_option_is_short@@Base+0x88>
   15ca0:	ldr	x8, [sp, #16]
   15ca4:	ldr	w9, [x8, #8]
   15ca8:	str	w9, [sp, #12]
   15cac:	ldr	w9, [sp, #12]
   15cb0:	cmp	w9, #0x0
   15cb4:	cset	w9, le
   15cb8:	mov	w10, #0x0                   	// #0
   15cbc:	str	w10, [sp, #8]
   15cc0:	tbnz	w9, #0, 15cf4 <_option_is_short@@Base+0x7c>
   15cc4:	ldr	w8, [sp, #12]
   15cc8:	mov	w9, #0x0                   	// #0
   15ccc:	cmp	w8, #0xff
   15cd0:	str	w9, [sp, #8]
   15cd4:	b.gt	15cf4 <_option_is_short@@Base+0x7c>
   15cd8:	bl	aed0 <__ctype_b_loc@plt>
   15cdc:	ldr	x8, [x0]
   15ce0:	ldrsw	x9, [sp, #12]
   15ce4:	ldrh	w10, [x8, x9, lsl #1]
   15ce8:	tst	w10, #0x4000
   15cec:	cset	w10, ne  // ne = any
   15cf0:	str	w10, [sp, #8]
   15cf4:	ldr	w8, [sp, #8]
   15cf8:	and	w8, w8, #0x1
   15cfc:	stur	w8, [x29, #-4]
   15d00:	ldur	w0, [x29, #-4]
   15d04:	ldp	x29, x30, [sp, #32]
   15d08:	add	sp, sp, #0x30
   15d0c:	ret

0000000000015d10 <_option_is_end@@Base>:
   15d10:	sub	sp, sp, #0x10
   15d14:	str	x0, [sp, #8]
   15d18:	ldr	x8, [sp, #8]
   15d1c:	ldr	w9, [x8, #8]
   15d20:	mov	w10, #0x0                   	// #0
   15d24:	str	w10, [sp, #4]
   15d28:	cbnz	w9, 15d6c <_option_is_end@@Base+0x5c>
   15d2c:	ldr	x8, [sp, #8]
   15d30:	ldr	x8, [x8]
   15d34:	mov	w9, #0x0                   	// #0
   15d38:	str	w9, [sp, #4]
   15d3c:	cbnz	x8, 15d6c <_option_is_end@@Base+0x5c>
   15d40:	ldr	x8, [sp, #8]
   15d44:	ldr	x8, [x8, #32]
   15d48:	mov	w9, #0x0                   	// #0
   15d4c:	str	w9, [sp, #4]
   15d50:	cbnz	x8, 15d6c <_option_is_end@@Base+0x5c>
   15d54:	ldr	x8, [sp, #8]
   15d58:	ldr	w9, [x8, #40]
   15d5c:	cmp	w9, #0x0
   15d60:	cset	w9, ne  // ne = any
   15d64:	eor	w9, w9, #0x1
   15d68:	str	w9, [sp, #4]
   15d6c:	ldr	w8, [sp, #4]
   15d70:	and	w0, w8, #0x1
   15d74:	add	sp, sp, #0x10
   15d78:	ret
   15d7c:	sub	sp, sp, #0x50
   15d80:	stp	x29, x30, [sp, #64]
   15d84:	add	x29, sp, #0x40
   15d88:	mov	x8, #0x40                  	// #64
   15d8c:	stur	x0, [x29, #-16]
   15d90:	stur	x1, [x29, #-24]
   15d94:	str	x2, [sp, #32]
   15d98:	str	x3, [sp, #24]
   15d9c:	and	w9, w4, #0x1
   15da0:	strb	w9, [sp, #23]
   15da4:	mov	x0, x8
   15da8:	bl	af10 <malloc@plt>
   15dac:	str	x0, [sp, #8]
   15db0:	ldr	x8, [sp, #8]
   15db4:	cbnz	x8, 15dc4 <_option_is_end@@Base+0xb4>
   15db8:	mov	x8, xzr
   15dbc:	stur	x8, [x29, #-8]
   15dc0:	b	15e28 <_option_is_end@@Base+0x118>
   15dc4:	ldur	x8, [x29, #-16]
   15dc8:	ldr	x9, [sp, #8]
   15dcc:	str	x8, [x9]
   15dd0:	ldur	x8, [x29, #-24]
   15dd4:	ldr	x9, [sp, #8]
   15dd8:	str	x8, [x9, #8]
   15ddc:	ldr	x8, [sp, #32]
   15de0:	ldr	x9, [sp, #8]
   15de4:	str	x8, [x9, #16]
   15de8:	ldr	x8, [sp, #24]
   15dec:	ldr	x9, [sp, #8]
   15df0:	str	x8, [x9, #24]
   15df4:	ldrb	w10, [sp, #23]
   15df8:	ldr	x8, [sp, #8]
   15dfc:	and	w10, w10, #0x1
   15e00:	strb	w10, [x8, #32]
   15e04:	ldr	x8, [sp, #8]
   15e08:	mov	x9, xzr
   15e0c:	str	x9, [x8, #40]
   15e10:	ldr	x8, [sp, #8]
   15e14:	str	xzr, [x8, #48]
   15e18:	ldr	x8, [sp, #8]
   15e1c:	str	xzr, [x8, #56]
   15e20:	ldr	x8, [sp, #8]
   15e24:	stur	x8, [x29, #-8]
   15e28:	ldur	x0, [x29, #-8]
   15e2c:	ldp	x29, x30, [sp, #64]
   15e30:	add	sp, sp, #0x50
   15e34:	ret
   15e38:	sub	sp, sp, #0x60
   15e3c:	stp	x29, x30, [sp, #80]
   15e40:	add	x29, sp, #0x50
   15e44:	mov	x8, #0x40                  	// #64
   15e48:	stur	x0, [x29, #-16]
   15e4c:	stur	x1, [x29, #-24]
   15e50:	stur	x2, [x29, #-32]
   15e54:	str	x3, [sp, #40]
   15e58:	and	w9, w4, #0x1
   15e5c:	strb	w9, [sp, #39]
   15e60:	str	x5, [sp, #24]
   15e64:	str	x6, [sp, #16]
   15e68:	mov	x0, x8
   15e6c:	bl	af10 <malloc@plt>
   15e70:	str	x0, [sp, #8]
   15e74:	ldr	x8, [sp, #8]
   15e78:	cbnz	x8, 15e88 <_option_is_end@@Base+0x178>
   15e7c:	mov	x8, xzr
   15e80:	stur	x8, [x29, #-8]
   15e84:	b	15fa0 <_option_is_end@@Base+0x290>
   15e88:	ldur	x8, [x29, #-16]
   15e8c:	ldr	x9, [sp, #8]
   15e90:	str	x8, [x9]
   15e94:	ldur	x8, [x29, #-24]
   15e98:	ldr	x9, [sp, #8]
   15e9c:	str	x8, [x9, #8]
   15ea0:	ldur	x8, [x29, #-32]
   15ea4:	ldr	x9, [sp, #8]
   15ea8:	str	x8, [x9, #16]
   15eac:	ldr	x8, [sp, #40]
   15eb0:	ldr	x9, [sp, #8]
   15eb4:	str	x8, [x9, #24]
   15eb8:	ldrb	w10, [sp, #39]
   15ebc:	ldr	x8, [sp, #8]
   15ec0:	and	w10, w10, #0x1
   15ec4:	strb	w10, [x8, #32]
   15ec8:	ldr	x8, [sp, #24]
   15ecc:	cmp	x8, #0x0
   15ed0:	cset	w10, ls  // ls = plast
   15ed4:	tbnz	w10, #0, 15f60 <_option_is_end@@Base+0x250>
   15ed8:	ldr	x8, [sp, #24]
   15edc:	mov	x9, #0x1fffffffffffffff    	// #2305843009213693951
   15ee0:	cmp	x8, x9
   15ee4:	b.hi	15efc <_option_is_end@@Base+0x1ec>  // b.pmore
   15ee8:	ldr	x8, [sp, #24]
   15eec:	mov	x9, #0x8                   	// #8
   15ef0:	mul	x8, x8, x9
   15ef4:	str	x8, [sp]
   15ef8:	b	15f04 <_option_is_end@@Base+0x1f4>
   15efc:	mov	x8, #0xffffffffffffffff    	// #-1
   15f00:	str	x8, [sp]
   15f04:	ldr	x8, [sp]
   15f08:	mov	x9, #0xffffffffffffffff    	// #-1
   15f0c:	cmp	x8, x9
   15f10:	b.ne	15f18 <_option_is_end@@Base+0x208>  // b.any
   15f14:	b	15f90 <_option_is_end@@Base+0x280>
   15f18:	ldr	x8, [sp, #24]
   15f1c:	mov	x9, #0x8                   	// #8
   15f20:	mul	x0, x8, x9
   15f24:	bl	af10 <malloc@plt>
   15f28:	ldr	x8, [sp, #8]
   15f2c:	str	x0, [x8, #40]
   15f30:	ldr	x8, [sp, #8]
   15f34:	ldr	x8, [x8, #40]
   15f38:	cbnz	x8, 15f40 <_option_is_end@@Base+0x230>
   15f3c:	b	15f90 <_option_is_end@@Base+0x280>
   15f40:	ldr	x8, [sp, #8]
   15f44:	ldr	x0, [x8, #40]
   15f48:	ldr	x1, [sp, #16]
   15f4c:	ldr	x8, [sp, #24]
   15f50:	mov	x9, #0x8                   	// #8
   15f54:	mul	x2, x8, x9
   15f58:	bl	af30 <memcpy@plt>
   15f5c:	b	15f6c <_option_is_end@@Base+0x25c>
   15f60:	ldr	x8, [sp, #8]
   15f64:	mov	x9, xzr
   15f68:	str	x9, [x8, #40]
   15f6c:	ldr	x8, [sp, #24]
   15f70:	ldr	x9, [sp, #8]
   15f74:	str	x8, [x9, #48]
   15f78:	ldr	x8, [sp, #24]
   15f7c:	ldr	x9, [sp, #8]
   15f80:	str	x8, [x9, #56]
   15f84:	ldr	x8, [sp, #8]
   15f88:	stur	x8, [x29, #-8]
   15f8c:	b	15fa0 <_option_is_end@@Base+0x290>
   15f90:	ldr	x0, [sp, #8]
   15f94:	bl	a930 <free@plt>
   15f98:	mov	x8, xzr
   15f9c:	stur	x8, [x29, #-8]
   15fa0:	ldur	x0, [x29, #-8]
   15fa4:	ldp	x29, x30, [sp, #80]
   15fa8:	add	sp, sp, #0x60
   15fac:	ret
   15fb0:	sub	sp, sp, #0x10
   15fb4:	str	x0, [sp, #8]
   15fb8:	ldr	x8, [sp, #8]
   15fbc:	ldr	x0, [x8, #48]
   15fc0:	add	sp, sp, #0x10
   15fc4:	ret
   15fc8:	sub	sp, sp, #0x30
   15fcc:	stp	x29, x30, [sp, #32]
   15fd0:	add	x29, sp, #0x20
   15fd4:	stur	x0, [x29, #-8]
   15fd8:	str	x1, [sp, #16]
   15fdc:	ldr	x8, [sp, #16]
   15fe0:	subs	x8, x8, #0x1
   15fe4:	str	x8, [sp, #8]
   15fe8:	ldr	x8, [sp, #8]
   15fec:	ldur	x9, [x29, #-8]
   15ff0:	ldr	x9, [x9, #48]
   15ff4:	cmp	x8, x9
   15ff8:	b.cc	16000 <_option_is_end@@Base+0x2f0>  // b.lo, b.ul, b.last
   15ffc:	bl	a9e0 <abort@plt>
   16000:	ldur	x8, [x29, #-8]
   16004:	ldr	x8, [x8, #40]
   16008:	ldr	x9, [sp, #8]
   1600c:	mov	x10, #0x8                   	// #8
   16010:	mul	x9, x10, x9
   16014:	add	x8, x8, x9
   16018:	ldr	x0, [x8]
   1601c:	ldp	x29, x30, [sp, #32]
   16020:	add	sp, sp, #0x30
   16024:	ret
   16028:	sub	sp, sp, #0x30
   1602c:	stp	x29, x30, [sp, #32]
   16030:	add	x29, sp, #0x20
   16034:	stur	x0, [x29, #-8]
   16038:	str	x1, [sp, #16]
   1603c:	str	x2, [sp, #8]
   16040:	ldr	x8, [sp, #16]
   16044:	subs	x8, x8, #0x1
   16048:	str	x8, [sp]
   1604c:	ldr	x8, [sp]
   16050:	ldur	x9, [x29, #-8]
   16054:	ldr	x9, [x9, #48]
   16058:	cmp	x8, x9
   1605c:	b.cc	16064 <_option_is_end@@Base+0x354>  // b.lo, b.ul, b.last
   16060:	bl	a9e0 <abort@plt>
   16064:	ldr	x8, [sp, #8]
   16068:	ldur	x9, [x29, #-8]
   1606c:	ldr	x9, [x9, #40]
   16070:	ldr	x10, [sp]
   16074:	mov	x11, #0x8                   	// #8
   16078:	mul	x10, x11, x10
   1607c:	add	x9, x9, x10
   16080:	str	x8, [x9]
   16084:	mov	w12, wzr
   16088:	mov	w0, w12
   1608c:	ldp	x29, x30, [sp, #32]
   16090:	add	sp, sp, #0x30
   16094:	ret
   16098:	sub	sp, sp, #0x30
   1609c:	stp	x29, x30, [sp, #32]
   160a0:	add	x29, sp, #0x20
   160a4:	str	x0, [sp, #16]
   160a8:	str	x1, [sp, #8]
   160ac:	ldr	x8, [sp, #8]
   160b0:	subs	x8, x8, #0x1
   160b4:	str	x8, [sp]
   160b8:	ldr	x8, [sp]
   160bc:	ldr	x9, [sp, #16]
   160c0:	ldr	x9, [x9, #48]
   160c4:	cmp	x8, x9
   160c8:	b.cc	160d0 <_option_is_end@@Base+0x3c0>  // b.lo, b.ul, b.last
   160cc:	bl	a9e0 <abort@plt>
   160d0:	ldr	x8, [sp]
   160d4:	add	x8, x8, #0x1
   160d8:	str	x8, [sp]
   160dc:	ldr	x8, [sp]
   160e0:	ldr	x9, [sp, #16]
   160e4:	ldr	x9, [x9, #48]
   160e8:	cmp	x8, x9
   160ec:	b.cs	16100 <_option_is_end@@Base+0x3f0>  // b.hs, b.nlast
   160f0:	ldr	x8, [sp]
   160f4:	add	x8, x8, #0x1
   160f8:	stur	x8, [x29, #-8]
   160fc:	b	16108 <_option_is_end@@Base+0x3f8>
   16100:	mov	x8, xzr
   16104:	stur	x8, [x29, #-8]
   16108:	ldur	x0, [x29, #-8]
   1610c:	ldp	x29, x30, [sp, #32]
   16110:	add	sp, sp, #0x30
   16114:	ret
   16118:	sub	sp, sp, #0x30
   1611c:	stp	x29, x30, [sp, #32]
   16120:	add	x29, sp, #0x20
   16124:	str	x0, [sp, #16]
   16128:	str	x1, [sp, #8]
   1612c:	ldr	x8, [sp, #8]
   16130:	subs	x8, x8, #0x1
   16134:	str	x8, [sp]
   16138:	ldr	x8, [sp]
   1613c:	ldr	x9, [sp, #16]
   16140:	ldr	x9, [x9, #48]
   16144:	cmp	x8, x9
   16148:	b.cc	16150 <_option_is_end@@Base+0x440>  // b.lo, b.ul, b.last
   1614c:	bl	a9e0 <abort@plt>
   16150:	ldr	x8, [sp]
   16154:	cmp	x8, #0x0
   16158:	cset	w9, ls  // ls = plast
   1615c:	tbnz	w9, #0, 16174 <_option_is_end@@Base+0x464>
   16160:	ldr	x8, [sp]
   16164:	subs	x8, x8, #0x1
   16168:	add	x8, x8, #0x1
   1616c:	stur	x8, [x29, #-8]
   16170:	b	1617c <_option_is_end@@Base+0x46c>
   16174:	mov	x8, xzr
   16178:	stur	x8, [x29, #-8]
   1617c:	ldur	x0, [x29, #-8]
   16180:	ldp	x29, x30, [sp, #32]
   16184:	add	sp, sp, #0x30
   16188:	ret
   1618c:	sub	sp, sp, #0x30
   16190:	stp	x29, x30, [sp, #32]
   16194:	add	x29, sp, #0x20
   16198:	stur	x0, [x29, #-8]
   1619c:	str	x1, [sp, #16]
   161a0:	ldur	x8, [x29, #-8]
   161a4:	ldr	x8, [x8, #48]
   161a8:	str	x8, [sp, #8]
   161ac:	ldr	x8, [sp, #16]
   161b0:	ldr	x9, [sp, #8]
   161b4:	cmp	x8, x9
   161b8:	b.cc	161c0 <_option_is_end@@Base+0x4b0>  // b.lo, b.ul, b.last
   161bc:	bl	a9e0 <abort@plt>
   161c0:	ldur	x8, [x29, #-8]
   161c4:	ldr	x8, [x8, #40]
   161c8:	ldr	x9, [sp, #16]
   161cc:	mov	x10, #0x8                   	// #8
   161d0:	mul	x9, x10, x9
   161d4:	add	x8, x8, x9
   161d8:	ldr	x0, [x8]
   161dc:	ldp	x29, x30, [sp, #32]
   161e0:	add	sp, sp, #0x30
   161e4:	ret
   161e8:	sub	sp, sp, #0x30
   161ec:	stp	x29, x30, [sp, #32]
   161f0:	add	x29, sp, #0x20
   161f4:	stur	x0, [x29, #-8]
   161f8:	str	x1, [sp, #16]
   161fc:	str	x2, [sp, #8]
   16200:	ldur	x8, [x29, #-8]
   16204:	ldr	x8, [x8, #48]
   16208:	str	x8, [sp]
   1620c:	ldr	x8, [sp, #16]
   16210:	ldr	x9, [sp]
   16214:	cmp	x8, x9
   16218:	b.cc	16220 <_option_is_end@@Base+0x510>  // b.lo, b.ul, b.last
   1621c:	bl	a9e0 <abort@plt>
   16220:	ldr	x8, [sp, #8]
   16224:	ldur	x9, [x29, #-8]
   16228:	ldr	x9, [x9, #40]
   1622c:	ldr	x10, [sp, #16]
   16230:	mov	x11, #0x8                   	// #8
   16234:	mul	x10, x11, x10
   16238:	add	x9, x9, x10
   1623c:	str	x8, [x9]
   16240:	ldr	x8, [sp, #16]
   16244:	add	x8, x8, #0x1
   16248:	mov	x0, x8
   1624c:	ldp	x29, x30, [sp, #32]
   16250:	add	sp, sp, #0x30
   16254:	ret
   16258:	sub	sp, sp, #0x40
   1625c:	stp	x29, x30, [sp, #48]
   16260:	add	x29, sp, #0x30
   16264:	stur	x0, [x29, #-8]
   16268:	stur	x1, [x29, #-16]
   1626c:	str	x2, [sp, #24]
   16270:	str	x3, [sp, #16]
   16274:	ldur	x0, [x29, #-8]
   16278:	ldur	x1, [x29, #-16]
   1627c:	ldr	x2, [sp, #24]
   16280:	ldr	x3, [sp, #16]
   16284:	bl	162a4 <_option_is_end@@Base+0x594>
   16288:	str	x0, [sp, #8]
   1628c:	ldr	x8, [sp, #8]
   16290:	add	x8, x8, #0x1
   16294:	mov	x0, x8
   16298:	ldp	x29, x30, [sp, #48]
   1629c:	add	sp, sp, #0x40
   162a0:	ret
   162a4:	sub	sp, sp, #0x60
   162a8:	stp	x29, x30, [sp, #80]
   162ac:	add	x29, sp, #0x50
   162b0:	stur	x0, [x29, #-16]
   162b4:	stur	x1, [x29, #-24]
   162b8:	stur	x2, [x29, #-32]
   162bc:	str	x3, [sp, #40]
   162c0:	ldur	x8, [x29, #-16]
   162c4:	ldr	x8, [x8, #48]
   162c8:	str	x8, [sp, #32]
   162cc:	ldur	x8, [x29, #-24]
   162d0:	ldur	x9, [x29, #-32]
   162d4:	cmp	x8, x9
   162d8:	b.hi	162ec <_option_is_end@@Base+0x5dc>  // b.pmore
   162dc:	ldur	x8, [x29, #-32]
   162e0:	ldr	x9, [sp, #32]
   162e4:	cmp	x8, x9
   162e8:	b.ls	162f0 <_option_is_end@@Base+0x5e0>  // b.plast
   162ec:	bl	a9e0 <abort@plt>
   162f0:	ldur	x8, [x29, #-24]
   162f4:	ldur	x9, [x29, #-32]
   162f8:	cmp	x8, x9
   162fc:	b.cs	163e0 <_option_is_end@@Base+0x6d0>  // b.hs, b.nlast
   16300:	ldur	x8, [x29, #-16]
   16304:	ldr	x8, [x8, #8]
   16308:	str	x8, [sp, #24]
   1630c:	ldr	x8, [sp, #24]
   16310:	cbz	x8, 16380 <_option_is_end@@Base+0x670>
   16314:	ldur	x8, [x29, #-24]
   16318:	str	x8, [sp, #16]
   1631c:	ldr	x8, [sp, #24]
   16320:	ldr	x0, [sp, #40]
   16324:	ldur	x9, [x29, #-16]
   16328:	ldr	x9, [x9, #40]
   1632c:	ldr	x10, [sp, #16]
   16330:	mov	x11, #0x8                   	// #8
   16334:	mul	x10, x11, x10
   16338:	add	x9, x9, x10
   1633c:	ldr	x1, [x9]
   16340:	blr	x8
   16344:	tbnz	w0, #0, 1634c <_option_is_end@@Base+0x63c>
   16348:	b	16358 <_option_is_end@@Base+0x648>
   1634c:	ldr	x8, [sp, #16]
   16350:	stur	x8, [x29, #-8]
   16354:	b	163e8 <_option_is_end@@Base+0x6d8>
   16358:	ldr	x8, [sp, #16]
   1635c:	add	x8, x8, #0x1
   16360:	str	x8, [sp, #16]
   16364:	ldr	x8, [sp, #16]
   16368:	ldur	x9, [x29, #-32]
   1636c:	cmp	x8, x9
   16370:	b.ne	16378 <_option_is_end@@Base+0x668>  // b.any
   16374:	b	1637c <_option_is_end@@Base+0x66c>
   16378:	b	1631c <_option_is_end@@Base+0x60c>
   1637c:	b	163e0 <_option_is_end@@Base+0x6d0>
   16380:	ldur	x8, [x29, #-24]
   16384:	str	x8, [sp, #8]
   16388:	ldr	x8, [sp, #40]
   1638c:	ldur	x9, [x29, #-16]
   16390:	ldr	x9, [x9, #40]
   16394:	ldr	x10, [sp, #8]
   16398:	mov	x11, #0x8                   	// #8
   1639c:	mul	x10, x11, x10
   163a0:	add	x9, x9, x10
   163a4:	ldr	x9, [x9]
   163a8:	cmp	x8, x9
   163ac:	b.ne	163bc <_option_is_end@@Base+0x6ac>  // b.any
   163b0:	ldr	x8, [sp, #8]
   163b4:	stur	x8, [x29, #-8]
   163b8:	b	163e8 <_option_is_end@@Base+0x6d8>
   163bc:	ldr	x8, [sp, #8]
   163c0:	add	x8, x8, #0x1
   163c4:	str	x8, [sp, #8]
   163c8:	ldr	x8, [sp, #8]
   163cc:	ldur	x9, [x29, #-32]
   163d0:	cmp	x8, x9
   163d4:	b.ne	163dc <_option_is_end@@Base+0x6cc>  // b.any
   163d8:	b	163e0 <_option_is_end@@Base+0x6d0>
   163dc:	b	16388 <_option_is_end@@Base+0x678>
   163e0:	mov	x8, #0xffffffffffffffff    	// #-1
   163e4:	stur	x8, [x29, #-8]
   163e8:	ldur	x0, [x29, #-8]
   163ec:	ldp	x29, x30, [sp, #80]
   163f0:	add	sp, sp, #0x60
   163f4:	ret
   163f8:	sub	sp, sp, #0x40
   163fc:	stp	x29, x30, [sp, #48]
   16400:	add	x29, sp, #0x30
   16404:	stur	x0, [x29, #-16]
   16408:	str	x1, [sp, #24]
   1640c:	ldur	x8, [x29, #-16]
   16410:	ldr	x8, [x8, #48]
   16414:	str	x8, [sp, #16]
   16418:	ldr	x8, [sp, #16]
   1641c:	ldur	x9, [x29, #-16]
   16420:	ldr	x9, [x9, #56]
   16424:	cmp	x8, x9
   16428:	b.ne	1644c <_option_is_end@@Base+0x73c>  // b.any
   1642c:	ldur	x0, [x29, #-16]
   16430:	bl	17294 <_option_is_end@@Base+0x1584>
   16434:	cmp	w0, #0x0
   16438:	cset	w8, ge  // ge = tcont
   1643c:	tbnz	w8, #0, 1644c <_option_is_end@@Base+0x73c>
   16440:	mov	x8, xzr
   16444:	stur	x8, [x29, #-8]
   16448:	b	164d4 <_option_is_end@@Base+0x7c4>
   1644c:	ldur	x8, [x29, #-16]
   16450:	ldr	x8, [x8, #40]
   16454:	str	x8, [sp, #8]
   16458:	ldr	x8, [sp, #16]
   1645c:	str	x8, [sp]
   16460:	ldr	x8, [sp]
   16464:	cmp	x8, #0x0
   16468:	cset	w9, ls  // ls = plast
   1646c:	tbnz	w9, #0, 164b0 <_option_is_end@@Base+0x7a0>
   16470:	ldr	x8, [sp, #8]
   16474:	ldr	x9, [sp]
   16478:	subs	x9, x9, #0x1
   1647c:	mov	x10, #0x8                   	// #8
   16480:	mul	x9, x10, x9
   16484:	add	x8, x8, x9
   16488:	ldr	x8, [x8]
   1648c:	ldr	x9, [sp, #8]
   16490:	ldr	x11, [sp]
   16494:	mul	x10, x10, x11
   16498:	add	x9, x9, x10
   1649c:	str	x8, [x9]
   164a0:	ldr	x8, [sp]
   164a4:	subs	x8, x8, #0x1
   164a8:	str	x8, [sp]
   164ac:	b	16460 <_option_is_end@@Base+0x750>
   164b0:	ldr	x8, [sp, #24]
   164b4:	ldr	x9, [sp, #8]
   164b8:	str	x8, [x9]
   164bc:	ldr	x8, [sp, #16]
   164c0:	mov	x9, #0x1                   	// #1
   164c4:	add	x8, x8, #0x1
   164c8:	ldur	x10, [x29, #-16]
   164cc:	str	x8, [x10, #48]
   164d0:	stur	x9, [x29, #-8]
   164d4:	ldur	x0, [x29, #-8]
   164d8:	ldp	x29, x30, [sp, #48]
   164dc:	add	sp, sp, #0x40
   164e0:	ret
   164e4:	sub	sp, sp, #0x30
   164e8:	stp	x29, x30, [sp, #32]
   164ec:	add	x29, sp, #0x20
   164f0:	str	x0, [sp, #16]
   164f4:	str	x1, [sp, #8]
   164f8:	ldr	x8, [sp, #16]
   164fc:	ldr	x8, [x8, #48]
   16500:	str	x8, [sp]
   16504:	ldr	x8, [sp]
   16508:	ldr	x9, [sp, #16]
   1650c:	ldr	x9, [x9, #56]
   16510:	cmp	x8, x9
   16514:	b.ne	16538 <_option_is_end@@Base+0x828>  // b.any
   16518:	ldr	x0, [sp, #16]
   1651c:	bl	17294 <_option_is_end@@Base+0x1584>
   16520:	cmp	w0, #0x0
   16524:	cset	w8, ge  // ge = tcont
   16528:	tbnz	w8, #0, 16538 <_option_is_end@@Base+0x828>
   1652c:	mov	x8, xzr
   16530:	stur	x8, [x29, #-8]
   16534:	b	16574 <_option_is_end@@Base+0x864>
   16538:	ldr	x8, [sp, #8]
   1653c:	ldr	x9, [sp, #16]
   16540:	ldr	x9, [x9, #40]
   16544:	ldr	x10, [sp]
   16548:	mov	x11, #0x8                   	// #8
   1654c:	mul	x10, x11, x10
   16550:	add	x9, x9, x10
   16554:	str	x8, [x9]
   16558:	ldr	x8, [sp]
   1655c:	add	x8, x8, #0x1
   16560:	ldr	x9, [sp, #16]
   16564:	str	x8, [x9, #48]
   16568:	ldr	x8, [sp]
   1656c:	add	x8, x8, #0x1
   16570:	stur	x8, [x29, #-8]
   16574:	ldur	x0, [x29, #-8]
   16578:	ldp	x29, x30, [sp, #32]
   1657c:	add	sp, sp, #0x30
   16580:	ret
   16584:	sub	sp, sp, #0x60
   16588:	stp	x29, x30, [sp, #80]
   1658c:	add	x29, sp, #0x50
   16590:	stur	x0, [x29, #-16]
   16594:	stur	x1, [x29, #-24]
   16598:	stur	x2, [x29, #-32]
   1659c:	ldur	x8, [x29, #-16]
   165a0:	ldr	x8, [x8, #48]
   165a4:	str	x8, [sp, #40]
   165a8:	ldur	x8, [x29, #-24]
   165ac:	subs	x8, x8, #0x1
   165b0:	str	x8, [sp, #32]
   165b4:	ldr	x8, [sp, #32]
   165b8:	ldr	x9, [sp, #40]
   165bc:	cmp	x8, x9
   165c0:	b.cc	165c8 <_option_is_end@@Base+0x8b8>  // b.lo, b.ul, b.last
   165c4:	bl	a9e0 <abort@plt>
   165c8:	ldr	x8, [sp, #32]
   165cc:	str	x8, [sp, #24]
   165d0:	ldr	x8, [sp, #40]
   165d4:	ldur	x9, [x29, #-16]
   165d8:	ldr	x9, [x9, #56]
   165dc:	cmp	x8, x9
   165e0:	b.ne	16604 <_option_is_end@@Base+0x8f4>  // b.any
   165e4:	ldur	x0, [x29, #-16]
   165e8:	bl	17294 <_option_is_end@@Base+0x1584>
   165ec:	cmp	w0, #0x0
   165f0:	cset	w8, ge  // ge = tcont
   165f4:	tbnz	w8, #0, 16604 <_option_is_end@@Base+0x8f4>
   165f8:	mov	x8, xzr
   165fc:	stur	x8, [x29, #-8]
   16600:	b	166a0 <_option_is_end@@Base+0x990>
   16604:	ldur	x8, [x29, #-16]
   16608:	ldr	x8, [x8, #40]
   1660c:	str	x8, [sp, #16]
   16610:	ldr	x8, [sp, #40]
   16614:	str	x8, [sp, #8]
   16618:	ldr	x8, [sp, #8]
   1661c:	ldr	x9, [sp, #24]
   16620:	cmp	x8, x9
   16624:	b.ls	16668 <_option_is_end@@Base+0x958>  // b.plast
   16628:	ldr	x8, [sp, #16]
   1662c:	ldr	x9, [sp, #8]
   16630:	subs	x9, x9, #0x1
   16634:	mov	x10, #0x8                   	// #8
   16638:	mul	x9, x10, x9
   1663c:	add	x8, x8, x9
   16640:	ldr	x8, [x8]
   16644:	ldr	x9, [sp, #16]
   16648:	ldr	x11, [sp, #8]
   1664c:	mul	x10, x10, x11
   16650:	add	x9, x9, x10
   16654:	str	x8, [x9]
   16658:	ldr	x8, [sp, #8]
   1665c:	subs	x8, x8, #0x1
   16660:	str	x8, [sp, #8]
   16664:	b	16618 <_option_is_end@@Base+0x908>
   16668:	ldur	x8, [x29, #-32]
   1666c:	ldr	x9, [sp, #16]
   16670:	ldr	x10, [sp, #24]
   16674:	mov	x11, #0x8                   	// #8
   16678:	mul	x10, x11, x10
   1667c:	add	x9, x9, x10
   16680:	str	x8, [x9]
   16684:	ldr	x8, [sp, #40]
   16688:	add	x8, x8, #0x1
   1668c:	ldur	x9, [x29, #-16]
   16690:	str	x8, [x9, #48]
   16694:	ldr	x8, [sp, #24]
   16698:	add	x8, x8, #0x1
   1669c:	stur	x8, [x29, #-8]
   166a0:	ldur	x0, [x29, #-8]
   166a4:	ldp	x29, x30, [sp, #80]
   166a8:	add	sp, sp, #0x60
   166ac:	ret
   166b0:	sub	sp, sp, #0x60
   166b4:	stp	x29, x30, [sp, #80]
   166b8:	add	x29, sp, #0x50
   166bc:	stur	x0, [x29, #-16]
   166c0:	stur	x1, [x29, #-24]
   166c4:	stur	x2, [x29, #-32]
   166c8:	ldur	x8, [x29, #-16]
   166cc:	ldr	x8, [x8, #48]
   166d0:	str	x8, [sp, #40]
   166d4:	ldur	x8, [x29, #-24]
   166d8:	subs	x8, x8, #0x1
   166dc:	str	x8, [sp, #32]
   166e0:	ldr	x8, [sp, #32]
   166e4:	ldr	x9, [sp, #40]
   166e8:	cmp	x8, x9
   166ec:	b.cc	166f4 <_option_is_end@@Base+0x9e4>  // b.lo, b.ul, b.last
   166f0:	bl	a9e0 <abort@plt>
   166f4:	ldr	x8, [sp, #32]
   166f8:	add	x8, x8, #0x1
   166fc:	str	x8, [sp, #24]
   16700:	ldr	x8, [sp, #40]
   16704:	ldur	x9, [x29, #-16]
   16708:	ldr	x9, [x9, #56]
   1670c:	cmp	x8, x9
   16710:	b.ne	16734 <_option_is_end@@Base+0xa24>  // b.any
   16714:	ldur	x0, [x29, #-16]
   16718:	bl	17294 <_option_is_end@@Base+0x1584>
   1671c:	cmp	w0, #0x0
   16720:	cset	w8, ge  // ge = tcont
   16724:	tbnz	w8, #0, 16734 <_option_is_end@@Base+0xa24>
   16728:	mov	x8, xzr
   1672c:	stur	x8, [x29, #-8]
   16730:	b	167d0 <_option_is_end@@Base+0xac0>
   16734:	ldur	x8, [x29, #-16]
   16738:	ldr	x8, [x8, #40]
   1673c:	str	x8, [sp, #16]
   16740:	ldr	x8, [sp, #40]
   16744:	str	x8, [sp, #8]
   16748:	ldr	x8, [sp, #8]
   1674c:	ldr	x9, [sp, #24]
   16750:	cmp	x8, x9
   16754:	b.ls	16798 <_option_is_end@@Base+0xa88>  // b.plast
   16758:	ldr	x8, [sp, #16]
   1675c:	ldr	x9, [sp, #8]
   16760:	subs	x9, x9, #0x1
   16764:	mov	x10, #0x8                   	// #8
   16768:	mul	x9, x10, x9
   1676c:	add	x8, x8, x9
   16770:	ldr	x8, [x8]
   16774:	ldr	x9, [sp, #16]
   16778:	ldr	x11, [sp, #8]
   1677c:	mul	x10, x10, x11
   16780:	add	x9, x9, x10
   16784:	str	x8, [x9]
   16788:	ldr	x8, [sp, #8]
   1678c:	subs	x8, x8, #0x1
   16790:	str	x8, [sp, #8]
   16794:	b	16748 <_option_is_end@@Base+0xa38>
   16798:	ldur	x8, [x29, #-32]
   1679c:	ldr	x9, [sp, #16]
   167a0:	ldr	x10, [sp, #24]
   167a4:	mov	x11, #0x8                   	// #8
   167a8:	mul	x10, x11, x10
   167ac:	add	x9, x9, x10
   167b0:	str	x8, [x9]
   167b4:	ldr	x8, [sp, #40]
   167b8:	add	x8, x8, #0x1
   167bc:	ldur	x9, [x29, #-16]
   167c0:	str	x8, [x9, #48]
   167c4:	ldr	x8, [sp, #24]
   167c8:	add	x8, x8, #0x1
   167cc:	stur	x8, [x29, #-8]
   167d0:	ldur	x0, [x29, #-8]
   167d4:	ldp	x29, x30, [sp, #80]
   167d8:	add	sp, sp, #0x60
   167dc:	ret
   167e0:	sub	sp, sp, #0x50
   167e4:	stp	x29, x30, [sp, #64]
   167e8:	add	x29, sp, #0x40
   167ec:	stur	x0, [x29, #-16]
   167f0:	stur	x1, [x29, #-24]
   167f4:	str	x2, [sp, #32]
   167f8:	ldur	x8, [x29, #-16]
   167fc:	ldr	x8, [x8, #48]
   16800:	str	x8, [sp, #24]
   16804:	ldur	x8, [x29, #-24]
   16808:	ldr	x9, [sp, #24]
   1680c:	cmp	x8, x9
   16810:	b.ls	16818 <_option_is_end@@Base+0xb08>  // b.plast
   16814:	bl	a9e0 <abort@plt>
   16818:	ldr	x8, [sp, #24]
   1681c:	ldur	x9, [x29, #-16]
   16820:	ldr	x9, [x9, #56]
   16824:	cmp	x8, x9
   16828:	b.ne	1684c <_option_is_end@@Base+0xb3c>  // b.any
   1682c:	ldur	x0, [x29, #-16]
   16830:	bl	17294 <_option_is_end@@Base+0x1584>
   16834:	cmp	w0, #0x0
   16838:	cset	w8, ge  // ge = tcont
   1683c:	tbnz	w8, #0, 1684c <_option_is_end@@Base+0xb3c>
   16840:	mov	x8, xzr
   16844:	stur	x8, [x29, #-8]
   16848:	b	168e8 <_option_is_end@@Base+0xbd8>
   1684c:	ldur	x8, [x29, #-16]
   16850:	ldr	x8, [x8, #40]
   16854:	str	x8, [sp, #16]
   16858:	ldr	x8, [sp, #24]
   1685c:	str	x8, [sp, #8]
   16860:	ldr	x8, [sp, #8]
   16864:	ldur	x9, [x29, #-24]
   16868:	cmp	x8, x9
   1686c:	b.ls	168b0 <_option_is_end@@Base+0xba0>  // b.plast
   16870:	ldr	x8, [sp, #16]
   16874:	ldr	x9, [sp, #8]
   16878:	subs	x9, x9, #0x1
   1687c:	mov	x10, #0x8                   	// #8
   16880:	mul	x9, x10, x9
   16884:	add	x8, x8, x9
   16888:	ldr	x8, [x8]
   1688c:	ldr	x9, [sp, #16]
   16890:	ldr	x11, [sp, #8]
   16894:	mul	x10, x10, x11
   16898:	add	x9, x9, x10
   1689c:	str	x8, [x9]
   168a0:	ldr	x8, [sp, #8]
   168a4:	subs	x8, x8, #0x1
   168a8:	str	x8, [sp, #8]
   168ac:	b	16860 <_option_is_end@@Base+0xb50>
   168b0:	ldr	x8, [sp, #32]
   168b4:	ldr	x9, [sp, #16]
   168b8:	ldur	x10, [x29, #-24]
   168bc:	mov	x11, #0x8                   	// #8
   168c0:	mul	x10, x11, x10
   168c4:	add	x9, x9, x10
   168c8:	str	x8, [x9]
   168cc:	ldr	x8, [sp, #24]
   168d0:	add	x8, x8, #0x1
   168d4:	ldur	x9, [x29, #-16]
   168d8:	str	x8, [x9, #48]
   168dc:	ldur	x8, [x29, #-24]
   168e0:	add	x8, x8, #0x1
   168e4:	stur	x8, [x29, #-8]
   168e8:	ldur	x0, [x29, #-8]
   168ec:	ldp	x29, x30, [sp, #64]
   168f0:	add	sp, sp, #0x50
   168f4:	ret
   168f8:	sub	sp, sp, #0x50
   168fc:	stp	x29, x30, [sp, #64]
   16900:	add	x29, sp, #0x40
   16904:	stur	x0, [x29, #-8]
   16908:	stur	x1, [x29, #-16]
   1690c:	ldur	x8, [x29, #-8]
   16910:	ldr	x8, [x8, #48]
   16914:	stur	x8, [x29, #-24]
   16918:	ldur	x8, [x29, #-16]
   1691c:	subs	x8, x8, #0x1
   16920:	str	x8, [sp, #32]
   16924:	ldr	x8, [sp, #32]
   16928:	ldur	x9, [x29, #-24]
   1692c:	cmp	x8, x9
   16930:	b.cc	16938 <_option_is_end@@Base+0xc28>  // b.lo, b.ul, b.last
   16934:	bl	a9e0 <abort@plt>
   16938:	ldr	x8, [sp, #32]
   1693c:	str	x8, [sp, #24]
   16940:	ldur	x8, [x29, #-8]
   16944:	ldr	x8, [x8, #40]
   16948:	str	x8, [sp, #16]
   1694c:	ldur	x8, [x29, #-8]
   16950:	ldr	x8, [x8, #24]
   16954:	cbz	x8, 1697c <_option_is_end@@Base+0xc6c>
   16958:	ldur	x8, [x29, #-8]
   1695c:	ldr	x8, [x8, #24]
   16960:	ldr	x9, [sp, #16]
   16964:	ldr	x10, [sp, #24]
   16968:	mov	x11, #0x8                   	// #8
   1696c:	mul	x10, x11, x10
   16970:	add	x9, x9, x10
   16974:	ldr	x0, [x9]
   16978:	blr	x8
   1697c:	ldr	x8, [sp, #24]
   16980:	add	x8, x8, #0x1
   16984:	str	x8, [sp, #8]
   16988:	ldr	x8, [sp, #8]
   1698c:	ldur	x9, [x29, #-24]
   16990:	cmp	x8, x9
   16994:	b.cs	169d8 <_option_is_end@@Base+0xcc8>  // b.hs, b.nlast
   16998:	ldr	x8, [sp, #16]
   1699c:	ldr	x9, [sp, #8]
   169a0:	mov	x10, #0x8                   	// #8
   169a4:	mul	x9, x10, x9
   169a8:	add	x8, x8, x9
   169ac:	ldr	x8, [x8]
   169b0:	ldr	x9, [sp, #16]
   169b4:	ldr	x11, [sp, #8]
   169b8:	subs	x11, x11, #0x1
   169bc:	mul	x10, x10, x11
   169c0:	add	x9, x9, x10
   169c4:	str	x8, [x9]
   169c8:	ldr	x8, [sp, #8]
   169cc:	add	x8, x8, #0x1
   169d0:	str	x8, [sp, #8]
   169d4:	b	16988 <_option_is_end@@Base+0xc78>
   169d8:	ldur	x8, [x29, #-24]
   169dc:	subs	x8, x8, #0x1
   169e0:	ldur	x9, [x29, #-8]
   169e4:	str	x8, [x9, #48]
   169e8:	mov	w10, #0x1                   	// #1
   169ec:	and	w0, w10, #0x1
   169f0:	ldp	x29, x30, [sp, #64]
   169f4:	add	sp, sp, #0x50
   169f8:	ret
   169fc:	sub	sp, sp, #0x40
   16a00:	stp	x29, x30, [sp, #48]
   16a04:	add	x29, sp, #0x30
   16a08:	stur	x0, [x29, #-8]
   16a0c:	stur	x1, [x29, #-16]
   16a10:	ldur	x8, [x29, #-8]
   16a14:	ldr	x8, [x8, #48]
   16a18:	str	x8, [sp, #24]
   16a1c:	ldur	x8, [x29, #-16]
   16a20:	ldr	x9, [sp, #24]
   16a24:	cmp	x8, x9
   16a28:	b.cc	16a30 <_option_is_end@@Base+0xd20>  // b.lo, b.ul, b.last
   16a2c:	bl	a9e0 <abort@plt>
   16a30:	ldur	x8, [x29, #-8]
   16a34:	ldr	x8, [x8, #40]
   16a38:	str	x8, [sp, #16]
   16a3c:	ldur	x8, [x29, #-8]
   16a40:	ldr	x8, [x8, #24]
   16a44:	cbz	x8, 16a6c <_option_is_end@@Base+0xd5c>
   16a48:	ldur	x8, [x29, #-8]
   16a4c:	ldr	x8, [x8, #24]
   16a50:	ldr	x9, [sp, #16]
   16a54:	ldur	x10, [x29, #-16]
   16a58:	mov	x11, #0x8                   	// #8
   16a5c:	mul	x10, x11, x10
   16a60:	add	x9, x9, x10
   16a64:	ldr	x0, [x9]
   16a68:	blr	x8
   16a6c:	ldur	x8, [x29, #-16]
   16a70:	add	x8, x8, #0x1
   16a74:	str	x8, [sp, #8]
   16a78:	ldr	x8, [sp, #8]
   16a7c:	ldr	x9, [sp, #24]
   16a80:	cmp	x8, x9
   16a84:	b.cs	16ac8 <_option_is_end@@Base+0xdb8>  // b.hs, b.nlast
   16a88:	ldr	x8, [sp, #16]
   16a8c:	ldr	x9, [sp, #8]
   16a90:	mov	x10, #0x8                   	// #8
   16a94:	mul	x9, x10, x9
   16a98:	add	x8, x8, x9
   16a9c:	ldr	x8, [x8]
   16aa0:	ldr	x9, [sp, #16]
   16aa4:	ldr	x11, [sp, #8]
   16aa8:	subs	x11, x11, #0x1
   16aac:	mul	x10, x10, x11
   16ab0:	add	x9, x9, x10
   16ab4:	str	x8, [x9]
   16ab8:	ldr	x8, [sp, #8]
   16abc:	add	x8, x8, #0x1
   16ac0:	str	x8, [sp, #8]
   16ac4:	b	16a78 <_option_is_end@@Base+0xd68>
   16ac8:	ldr	x8, [sp, #24]
   16acc:	subs	x8, x8, #0x1
   16ad0:	ldur	x9, [x29, #-8]
   16ad4:	str	x8, [x9, #48]
   16ad8:	mov	w10, #0x1                   	// #1
   16adc:	and	w0, w10, #0x1
   16ae0:	ldp	x29, x30, [sp, #48]
   16ae4:	add	sp, sp, #0x40
   16ae8:	ret
   16aec:	sub	sp, sp, #0x40
   16af0:	stp	x29, x30, [sp, #48]
   16af4:	add	x29, sp, #0x30
   16af8:	mov	x8, xzr
   16afc:	mov	x9, #0xffffffffffffffff    	// #-1
   16b00:	stur	x0, [x29, #-16]
   16b04:	str	x1, [sp, #24]
   16b08:	ldur	x0, [x29, #-16]
   16b0c:	ldur	x10, [x29, #-16]
   16b10:	ldr	x2, [x10, #48]
   16b14:	ldr	x3, [sp, #24]
   16b18:	mov	x1, x8
   16b1c:	str	x9, [sp, #8]
   16b20:	bl	162a4 <_option_is_end@@Base+0x594>
   16b24:	str	x0, [sp, #16]
   16b28:	ldr	x8, [sp, #16]
   16b2c:	ldr	x9, [sp, #8]
   16b30:	cmp	x8, x9
   16b34:	b.ne	16b48 <_option_is_end@@Base+0xe38>  // b.any
   16b38:	mov	w8, wzr
   16b3c:	and	w8, w8, #0x1
   16b40:	sturb	w8, [x29, #-1]
   16b44:	b	16b5c <_option_is_end@@Base+0xe4c>
   16b48:	ldur	x0, [x29, #-16]
   16b4c:	ldr	x1, [sp, #16]
   16b50:	bl	169fc <_option_is_end@@Base+0xcec>
   16b54:	and	w8, w0, #0x1
   16b58:	sturb	w8, [x29, #-1]
   16b5c:	ldurb	w8, [x29, #-1]
   16b60:	and	w0, w8, #0x1
   16b64:	ldp	x29, x30, [sp, #48]
   16b68:	add	sp, sp, #0x40
   16b6c:	ret
   16b70:	sub	sp, sp, #0x30
   16b74:	stp	x29, x30, [sp, #32]
   16b78:	add	x29, sp, #0x20
   16b7c:	stur	x0, [x29, #-8]
   16b80:	ldur	x8, [x29, #-8]
   16b84:	ldr	x8, [x8, #40]
   16b88:	cbz	x8, 16c08 <_option_is_end@@Base+0xef8>
   16b8c:	ldur	x8, [x29, #-8]
   16b90:	ldr	x8, [x8, #24]
   16b94:	cbz	x8, 16bfc <_option_is_end@@Base+0xeec>
   16b98:	ldur	x8, [x29, #-8]
   16b9c:	ldr	x8, [x8, #48]
   16ba0:	str	x8, [sp, #16]
   16ba4:	ldr	x8, [sp, #16]
   16ba8:	cmp	x8, #0x0
   16bac:	cset	w9, ls  // ls = plast
   16bb0:	tbnz	w9, #0, 16bfc <_option_is_end@@Base+0xeec>
   16bb4:	ldur	x8, [x29, #-8]
   16bb8:	ldr	x8, [x8, #24]
   16bbc:	str	x8, [sp, #8]
   16bc0:	ldur	x8, [x29, #-8]
   16bc4:	ldr	x8, [x8, #40]
   16bc8:	str	x8, [sp]
   16bcc:	ldr	x8, [sp, #8]
   16bd0:	ldr	x9, [sp]
   16bd4:	add	x10, x9, #0x8
   16bd8:	str	x10, [sp]
   16bdc:	ldr	x0, [x9]
   16be0:	blr	x8
   16be4:	ldr	x8, [sp, #16]
   16be8:	subs	x8, x8, #0x1
   16bec:	str	x8, [sp, #16]
   16bf0:	cmp	x8, #0x0
   16bf4:	cset	w9, hi  // hi = pmore
   16bf8:	tbnz	w9, #0, 16bcc <_option_is_end@@Base+0xebc>
   16bfc:	ldur	x8, [x29, #-8]
   16c00:	ldr	x0, [x8, #40]
   16c04:	bl	a930 <free@plt>
   16c08:	ldur	x0, [x29, #-8]
   16c0c:	bl	a930 <free@plt>
   16c10:	ldp	x29, x30, [sp, #32]
   16c14:	add	sp, sp, #0x30
   16c18:	ret
   16c1c:	sub	sp, sp, #0x10
   16c20:	str	x0, [sp, #8]
   16c24:	ldr	x9, [sp, #8]
   16c28:	ldr	x9, [x9]
   16c2c:	str	x9, [x8]
   16c30:	ldr	x9, [sp, #8]
   16c34:	mov	x10, #0x8                   	// #8
   16c38:	str	x9, [x8, #8]
   16c3c:	ldr	x9, [sp, #8]
   16c40:	ldr	x9, [x9, #48]
   16c44:	str	x9, [x8, #16]
   16c48:	ldr	x9, [sp, #8]
   16c4c:	ldr	x9, [x9, #40]
   16c50:	str	x9, [x8, #24]
   16c54:	ldr	x9, [sp, #8]
   16c58:	ldr	x9, [x9, #40]
   16c5c:	ldr	x11, [sp, #8]
   16c60:	ldr	x11, [x11, #48]
   16c64:	mul	x10, x10, x11
   16c68:	add	x9, x9, x10
   16c6c:	str	x9, [x8, #32]
   16c70:	add	sp, sp, #0x10
   16c74:	ret
   16c78:	sub	sp, sp, #0x30
   16c7c:	stp	x29, x30, [sp, #32]
   16c80:	add	x29, sp, #0x20
   16c84:	stur	x0, [x29, #-8]
   16c88:	str	x1, [sp, #16]
   16c8c:	str	x2, [sp, #8]
   16c90:	ldr	x9, [sp, #16]
   16c94:	ldr	x10, [sp, #8]
   16c98:	cmp	x9, x10
   16c9c:	str	x8, [sp]
   16ca0:	b.hi	16cb8 <_option_is_end@@Base+0xfa8>  // b.pmore
   16ca4:	ldr	x8, [sp, #8]
   16ca8:	ldur	x9, [x29, #-8]
   16cac:	ldr	x9, [x9, #48]
   16cb0:	cmp	x8, x9
   16cb4:	b.ls	16cbc <_option_is_end@@Base+0xfac>  // b.plast
   16cb8:	bl	a9e0 <abort@plt>
   16cbc:	ldur	x8, [x29, #-8]
   16cc0:	ldr	x8, [x8]
   16cc4:	ldr	x9, [sp]
   16cc8:	str	x8, [x9]
   16ccc:	ldur	x8, [x29, #-8]
   16cd0:	mov	x10, #0x8                   	// #8
   16cd4:	str	x8, [x9, #8]
   16cd8:	ldur	x8, [x29, #-8]
   16cdc:	ldr	x8, [x8, #48]
   16ce0:	str	x8, [x9, #16]
   16ce4:	ldur	x8, [x29, #-8]
   16ce8:	ldr	x8, [x8, #40]
   16cec:	ldr	x11, [sp, #16]
   16cf0:	mul	x11, x10, x11
   16cf4:	add	x8, x8, x11
   16cf8:	str	x8, [x9, #24]
   16cfc:	ldur	x8, [x29, #-8]
   16d00:	ldr	x8, [x8, #40]
   16d04:	ldr	x11, [sp, #8]
   16d08:	mul	x10, x10, x11
   16d0c:	add	x8, x8, x10
   16d10:	str	x8, [x9, #32]
   16d14:	ldp	x29, x30, [sp, #32]
   16d18:	add	sp, sp, #0x30
   16d1c:	ret
   16d20:	sub	sp, sp, #0x40
   16d24:	stp	x29, x30, [sp, #48]
   16d28:	add	x29, sp, #0x30
   16d2c:	stur	x0, [x29, #-16]
   16d30:	str	x1, [sp, #24]
   16d34:	str	x2, [sp, #16]
   16d38:	ldur	x8, [x29, #-16]
   16d3c:	ldr	x8, [x8, #8]
   16d40:	str	x8, [sp, #8]
   16d44:	ldur	x8, [x29, #-16]
   16d48:	ldr	x8, [x8, #16]
   16d4c:	ldr	x9, [sp, #8]
   16d50:	ldr	x9, [x9, #48]
   16d54:	cmp	x8, x9
   16d58:	b.eq	16db8 <_option_is_end@@Base+0x10a8>  // b.none
   16d5c:	ldur	x8, [x29, #-16]
   16d60:	ldr	x8, [x8, #16]
   16d64:	ldr	x9, [sp, #8]
   16d68:	ldr	x9, [x9, #48]
   16d6c:	add	x9, x9, #0x1
   16d70:	cmp	x8, x9
   16d74:	b.eq	16d7c <_option_is_end@@Base+0x106c>  // b.none
   16d78:	bl	a9e0 <abort@plt>
   16d7c:	ldur	x8, [x29, #-16]
   16d80:	ldr	x9, [x8, #16]
   16d84:	subs	x9, x9, #0x1
   16d88:	str	x9, [x8, #16]
   16d8c:	ldur	x8, [x29, #-16]
   16d90:	ldr	x8, [x8, #24]
   16d94:	mov	x9, #0xfffffffffffffff8    	// #-8
   16d98:	add	x8, x8, x9
   16d9c:	ldur	x10, [x29, #-16]
   16da0:	str	x8, [x10, #24]
   16da4:	ldur	x8, [x29, #-16]
   16da8:	ldr	x8, [x8, #32]
   16dac:	add	x8, x8, x9
   16db0:	ldur	x9, [x29, #-16]
   16db4:	str	x8, [x9, #32]
   16db8:	ldur	x8, [x29, #-16]
   16dbc:	ldr	x8, [x8, #24]
   16dc0:	ldur	x9, [x29, #-16]
   16dc4:	ldr	x9, [x9, #32]
   16dc8:	cmp	x8, x9
   16dcc:	b.cs	16e38 <_option_is_end@@Base+0x1128>  // b.hs, b.nlast
   16dd0:	ldur	x8, [x29, #-16]
   16dd4:	ldr	x8, [x8, #24]
   16dd8:	str	x8, [sp]
   16ddc:	ldr	x8, [sp]
   16de0:	ldr	x8, [x8]
   16de4:	ldr	x9, [sp, #24]
   16de8:	str	x8, [x9]
   16dec:	ldr	x8, [sp, #16]
   16df0:	cbz	x8, 16e18 <_option_is_end@@Base+0x1108>
   16df4:	ldr	x8, [sp]
   16df8:	ldr	x9, [sp, #8]
   16dfc:	ldr	x9, [x9, #40]
   16e00:	subs	x8, x8, x9
   16e04:	mov	x9, #0x8                   	// #8
   16e08:	sdiv	x8, x8, x9
   16e0c:	add	x8, x8, #0x1
   16e10:	ldr	x9, [sp, #16]
   16e14:	str	x8, [x9]
   16e18:	ldr	x8, [sp]
   16e1c:	add	x8, x8, #0x8
   16e20:	ldur	x9, [x29, #-16]
   16e24:	str	x8, [x9, #24]
   16e28:	mov	w10, #0x1                   	// #1
   16e2c:	and	w10, w10, #0x1
   16e30:	sturb	w10, [x29, #-1]
   16e34:	b	16e44 <_option_is_end@@Base+0x1134>
   16e38:	mov	w8, wzr
   16e3c:	and	w8, w8, #0x1
   16e40:	sturb	w8, [x29, #-1]
   16e44:	ldurb	w8, [x29, #-1]
   16e48:	and	w0, w8, #0x1
   16e4c:	ldp	x29, x30, [sp, #48]
   16e50:	add	sp, sp, #0x40
   16e54:	ret
   16e58:	sub	sp, sp, #0x10
   16e5c:	str	x0, [sp, #8]
   16e60:	add	sp, sp, #0x10
   16e64:	ret
   16e68:	sub	sp, sp, #0x30
   16e6c:	stp	x29, x30, [sp, #32]
   16e70:	add	x29, sp, #0x20
   16e74:	mov	x8, xzr
   16e78:	stur	x0, [x29, #-8]
   16e7c:	str	x1, [sp, #16]
   16e80:	str	x2, [sp, #8]
   16e84:	ldur	x0, [x29, #-8]
   16e88:	ldr	x1, [sp, #16]
   16e8c:	ldur	x9, [x29, #-8]
   16e90:	ldr	x3, [x9, #48]
   16e94:	ldr	x4, [sp, #8]
   16e98:	mov	x2, x8
   16e9c:	bl	16f54 <_option_is_end@@Base+0x1244>
   16ea0:	str	x0, [sp]
   16ea4:	ldr	x8, [sp]
   16ea8:	add	x8, x8, #0x1
   16eac:	mov	x0, x8
   16eb0:	ldp	x29, x30, [sp, #32]
   16eb4:	add	sp, sp, #0x30
   16eb8:	ret
   16ebc:	sub	sp, sp, #0x40
   16ec0:	stp	x29, x30, [sp, #48]
   16ec4:	add	x29, sp, #0x30
   16ec8:	stur	x0, [x29, #-8]
   16ecc:	stur	x1, [x29, #-16]
   16ed0:	str	x2, [sp, #24]
   16ed4:	str	x3, [sp, #16]
   16ed8:	str	x4, [sp, #8]
   16edc:	ldur	x0, [x29, #-8]
   16ee0:	ldur	x1, [x29, #-16]
   16ee4:	ldr	x2, [sp, #24]
   16ee8:	ldr	x3, [sp, #16]
   16eec:	ldr	x4, [sp, #8]
   16ef0:	bl	16f54 <_option_is_end@@Base+0x1244>
   16ef4:	str	x0, [sp]
   16ef8:	ldr	x8, [sp]
   16efc:	add	x8, x8, #0x1
   16f00:	mov	x0, x8
   16f04:	ldp	x29, x30, [sp, #48]
   16f08:	add	sp, sp, #0x40
   16f0c:	ret
   16f10:	sub	sp, sp, #0x30
   16f14:	stp	x29, x30, [sp, #32]
   16f18:	add	x29, sp, #0x20
   16f1c:	mov	x8, xzr
   16f20:	stur	x0, [x29, #-8]
   16f24:	str	x1, [sp, #16]
   16f28:	str	x2, [sp, #8]
   16f2c:	ldur	x0, [x29, #-8]
   16f30:	ldr	x1, [sp, #16]
   16f34:	ldur	x9, [x29, #-8]
   16f38:	ldr	x3, [x9, #48]
   16f3c:	ldr	x4, [sp, #8]
   16f40:	mov	x2, x8
   16f44:	bl	16f54 <_option_is_end@@Base+0x1244>
   16f48:	ldp	x29, x30, [sp, #32]
   16f4c:	add	sp, sp, #0x30
   16f50:	ret
   16f54:	sub	sp, sp, #0x60
   16f58:	stp	x29, x30, [sp, #80]
   16f5c:	add	x29, sp, #0x50
   16f60:	stur	x0, [x29, #-16]
   16f64:	stur	x1, [x29, #-24]
   16f68:	stur	x2, [x29, #-32]
   16f6c:	str	x3, [sp, #40]
   16f70:	str	x4, [sp, #32]
   16f74:	ldur	x8, [x29, #-32]
   16f78:	ldr	x9, [sp, #40]
   16f7c:	cmp	x8, x9
   16f80:	b.hi	16f98 <_option_is_end@@Base+0x1288>  // b.pmore
   16f84:	ldr	x8, [sp, #40]
   16f88:	ldur	x9, [x29, #-16]
   16f8c:	ldr	x9, [x9, #48]
   16f90:	cmp	x8, x9
   16f94:	b.ls	16f9c <_option_is_end@@Base+0x128c>  // b.plast
   16f98:	bl	a9e0 <abort@plt>
   16f9c:	ldur	x8, [x29, #-32]
   16fa0:	ldr	x9, [sp, #40]
   16fa4:	cmp	x8, x9
   16fa8:	b.cs	1710c <_option_is_end@@Base+0x13fc>  // b.hs, b.nlast
   16fac:	ldur	x8, [x29, #-32]
   16fb0:	ldr	x9, [sp, #40]
   16fb4:	ldur	x10, [x29, #-32]
   16fb8:	subs	x9, x9, x10
   16fbc:	mov	x10, #0x2                   	// #2
   16fc0:	udiv	x9, x9, x10
   16fc4:	add	x8, x8, x9
   16fc8:	str	x8, [sp, #24]
   16fcc:	ldur	x8, [x29, #-24]
   16fd0:	ldur	x9, [x29, #-16]
   16fd4:	ldr	x9, [x9, #40]
   16fd8:	ldr	x10, [sp, #24]
   16fdc:	mov	x11, #0x8                   	// #8
   16fe0:	mul	x10, x11, x10
   16fe4:	add	x9, x9, x10
   16fe8:	ldr	x0, [x9]
   16fec:	ldr	x1, [sp, #32]
   16ff0:	blr	x8
   16ff4:	str	w0, [sp, #20]
   16ff8:	ldr	w12, [sp, #20]
   16ffc:	cmp	w12, #0x0
   17000:	cset	w12, ge  // ge = tcont
   17004:	tbnz	w12, #0, 17018 <_option_is_end@@Base+0x1308>
   17008:	ldr	x8, [sp, #24]
   1700c:	add	x8, x8, #0x1
   17010:	stur	x8, [x29, #-32]
   17014:	b	170fc <_option_is_end@@Base+0x13ec>
   17018:	ldr	w8, [sp, #20]
   1701c:	cmp	w8, #0x0
   17020:	cset	w8, le
   17024:	tbnz	w8, #0, 17034 <_option_is_end@@Base+0x1324>
   17028:	ldr	x8, [sp, #24]
   1702c:	str	x8, [sp, #40]
   17030:	b	170fc <_option_is_end@@Base+0x13ec>
   17034:	ldr	x8, [sp, #24]
   17038:	str	x8, [sp, #40]
   1703c:	ldur	x8, [x29, #-32]
   17040:	ldr	x9, [sp, #40]
   17044:	cmp	x8, x9
   17048:	b.cs	170f0 <_option_is_end@@Base+0x13e0>  // b.hs, b.nlast
   1704c:	ldur	x8, [x29, #-32]
   17050:	ldr	x9, [sp, #40]
   17054:	ldur	x10, [x29, #-32]
   17058:	subs	x9, x9, x10
   1705c:	mov	x10, #0x2                   	// #2
   17060:	udiv	x9, x9, x10
   17064:	add	x8, x8, x9
   17068:	str	x8, [sp, #8]
   1706c:	ldur	x8, [x29, #-24]
   17070:	ldur	x9, [x29, #-16]
   17074:	ldr	x9, [x9, #40]
   17078:	ldr	x10, [sp, #8]
   1707c:	mov	x11, #0x8                   	// #8
   17080:	mul	x10, x11, x10
   17084:	add	x9, x9, x10
   17088:	ldr	x0, [x9]
   1708c:	ldr	x1, [sp, #32]
   17090:	blr	x8
   17094:	str	w0, [sp, #4]
   17098:	ldr	w12, [sp, #4]
   1709c:	cmp	w12, #0x0
   170a0:	cset	w12, ge  // ge = tcont
   170a4:	tbnz	w12, #0, 170b8 <_option_is_end@@Base+0x13a8>
   170a8:	ldr	x8, [sp, #8]
   170ac:	add	x8, x8, #0x1
   170b0:	stur	x8, [x29, #-32]
   170b4:	b	170ec <_option_is_end@@Base+0x13dc>
   170b8:	ldr	w8, [sp, #4]
   170bc:	cmp	w8, #0x0
   170c0:	cset	w8, le
   170c4:	tbnz	w8, #0, 170cc <_option_is_end@@Base+0x13bc>
   170c8:	bl	a9e0 <abort@plt>
   170cc:	ldr	x8, [sp, #8]
   170d0:	ldur	x9, [x29, #-32]
   170d4:	cmp	x8, x9
   170d8:	b.ne	170e0 <_option_is_end@@Base+0x13d0>  // b.any
   170dc:	b	170f0 <_option_is_end@@Base+0x13e0>
   170e0:	ldr	x8, [sp, #8]
   170e4:	subs	x8, x8, #0x1
   170e8:	str	x8, [sp, #40]
   170ec:	b	1703c <_option_is_end@@Base+0x132c>
   170f0:	ldur	x8, [x29, #-32]
   170f4:	stur	x8, [x29, #-8]
   170f8:	b	17114 <_option_is_end@@Base+0x1404>
   170fc:	ldur	x8, [x29, #-32]
   17100:	ldr	x9, [sp, #40]
   17104:	cmp	x8, x9
   17108:	b.cc	16fac <_option_is_end@@Base+0x129c>  // b.lo, b.ul, b.last
   1710c:	mov	x8, #0xffffffffffffffff    	// #-1
   17110:	stur	x8, [x29, #-8]
   17114:	ldur	x0, [x29, #-8]
   17118:	ldp	x29, x30, [sp, #80]
   1711c:	add	sp, sp, #0x60
   17120:	ret
   17124:	sub	sp, sp, #0x50
   17128:	stp	x29, x30, [sp, #64]
   1712c:	add	x29, sp, #0x40
   17130:	stur	x0, [x29, #-8]
   17134:	stur	x1, [x29, #-16]
   17138:	stur	x2, [x29, #-24]
   1713c:	ldur	x8, [x29, #-8]
   17140:	ldr	x8, [x8, #48]
   17144:	str	x8, [sp, #32]
   17148:	str	xzr, [sp, #24]
   1714c:	ldr	x8, [sp, #32]
   17150:	str	x8, [sp, #16]
   17154:	ldr	x8, [sp, #24]
   17158:	ldr	x9, [sp, #16]
   1715c:	cmp	x8, x9
   17160:	b.cs	171fc <_option_is_end@@Base+0x14ec>  // b.hs, b.nlast
   17164:	ldr	x8, [sp, #24]
   17168:	ldr	x9, [sp, #16]
   1716c:	ldr	x10, [sp, #24]
   17170:	subs	x9, x9, x10
   17174:	mov	x10, #0x2                   	// #2
   17178:	udiv	x9, x9, x10
   1717c:	add	x8, x8, x9
   17180:	str	x8, [sp, #8]
   17184:	ldur	x8, [x29, #-16]
   17188:	ldur	x9, [x29, #-8]
   1718c:	ldr	x9, [x9, #40]
   17190:	ldr	x10, [sp, #8]
   17194:	mov	x11, #0x8                   	// #8
   17198:	mul	x10, x11, x10
   1719c:	add	x9, x9, x10
   171a0:	ldr	x0, [x9]
   171a4:	ldur	x1, [x29, #-24]
   171a8:	blr	x8
   171ac:	str	w0, [sp, #4]
   171b0:	ldr	w12, [sp, #4]
   171b4:	cmp	w12, #0x0
   171b8:	cset	w12, ge  // ge = tcont
   171bc:	tbnz	w12, #0, 171d0 <_option_is_end@@Base+0x14c0>
   171c0:	ldr	x8, [sp, #8]
   171c4:	add	x8, x8, #0x1
   171c8:	str	x8, [sp, #24]
   171cc:	b	171f8 <_option_is_end@@Base+0x14e8>
   171d0:	ldr	w8, [sp, #4]
   171d4:	cmp	w8, #0x0
   171d8:	cset	w8, le
   171dc:	tbnz	w8, #0, 171ec <_option_is_end@@Base+0x14dc>
   171e0:	ldr	x8, [sp, #8]
   171e4:	str	x8, [sp, #16]
   171e8:	b	171f8 <_option_is_end@@Base+0x14e8>
   171ec:	ldr	x8, [sp, #8]
   171f0:	str	x8, [sp, #24]
   171f4:	b	171fc <_option_is_end@@Base+0x14ec>
   171f8:	b	17154 <_option_is_end@@Base+0x1444>
   171fc:	ldur	x0, [x29, #-8]
   17200:	ldr	x1, [sp, #24]
   17204:	ldur	x2, [x29, #-24]
   17208:	bl	167e0 <_option_is_end@@Base+0xad0>
   1720c:	ldp	x29, x30, [sp, #64]
   17210:	add	sp, sp, #0x50
   17214:	ret
   17218:	sub	sp, sp, #0x40
   1721c:	stp	x29, x30, [sp, #48]
   17220:	add	x29, sp, #0x30
   17224:	mov	x8, #0xffffffffffffffff    	// #-1
   17228:	stur	x0, [x29, #-16]
   1722c:	str	x1, [sp, #24]
   17230:	str	x2, [sp, #16]
   17234:	ldur	x0, [x29, #-16]
   17238:	ldr	x1, [sp, #24]
   1723c:	ldr	x2, [sp, #16]
   17240:	str	x8, [sp]
   17244:	bl	16f10 <_option_is_end@@Base+0x1200>
   17248:	str	x0, [sp, #8]
   1724c:	ldr	x8, [sp, #8]
   17250:	ldr	x9, [sp]
   17254:	cmp	x8, x9
   17258:	b.ne	1726c <_option_is_end@@Base+0x155c>  // b.any
   1725c:	mov	w8, wzr
   17260:	and	w8, w8, #0x1
   17264:	sturb	w8, [x29, #-1]
   17268:	b	17280 <_option_is_end@@Base+0x1570>
   1726c:	ldur	x0, [x29, #-16]
   17270:	ldr	x1, [sp, #8]
   17274:	bl	169fc <_option_is_end@@Base+0xcec>
   17278:	and	w8, w0, #0x1
   1727c:	sturb	w8, [x29, #-1]
   17280:	ldurb	w8, [x29, #-1]
   17284:	and	w0, w8, #0x1
   17288:	ldp	x29, x30, [sp, #48]
   1728c:	add	sp, sp, #0x40
   17290:	ret
   17294:	sub	sp, sp, #0x50
   17298:	stp	x29, x30, [sp, #64]
   1729c:	add	x29, sp, #0x40
   172a0:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
   172a4:	stur	x0, [x29, #-16]
   172a8:	ldur	x9, [x29, #-16]
   172ac:	ldr	x9, [x9, #56]
   172b0:	cmp	x9, x8
   172b4:	b.hi	172d0 <_option_is_end@@Base+0x15c0>  // b.pmore
   172b8:	ldur	x8, [x29, #-16]
   172bc:	ldr	x8, [x8, #56]
   172c0:	mov	x9, #0x2                   	// #2
   172c4:	mul	x8, x8, x9
   172c8:	str	x8, [sp, #16]
   172cc:	b	172d8 <_option_is_end@@Base+0x15c8>
   172d0:	mov	x8, #0xffffffffffffffff    	// #-1
   172d4:	str	x8, [sp, #16]
   172d8:	ldr	x8, [sp, #16]
   172dc:	stur	x8, [x29, #-24]
   172e0:	ldur	x0, [x29, #-24]
   172e4:	mov	x1, #0x1                   	// #1
   172e8:	bl	b190 <xsum@plt>
   172ec:	stur	x0, [x29, #-24]
   172f0:	ldur	x8, [x29, #-24]
   172f4:	mov	x9, #0x1fffffffffffffff    	// #2305843009213693951
   172f8:	cmp	x8, x9
   172fc:	b.hi	17314 <_option_is_end@@Base+0x1604>  // b.pmore
   17300:	ldur	x8, [x29, #-24]
   17304:	mov	x9, #0x8                   	// #8
   17308:	mul	x8, x8, x9
   1730c:	str	x8, [sp, #8]
   17310:	b	1731c <_option_is_end@@Base+0x160c>
   17314:	mov	x8, #0xffffffffffffffff    	// #-1
   17318:	str	x8, [sp, #8]
   1731c:	ldr	x8, [sp, #8]
   17320:	str	x8, [sp, #32]
   17324:	ldr	x8, [sp, #32]
   17328:	mov	x9, #0xffffffffffffffff    	// #-1
   1732c:	cmp	x8, x9
   17330:	b.ne	17340 <_option_is_end@@Base+0x1630>  // b.any
   17334:	mov	w8, #0xffffffff            	// #-1
   17338:	stur	w8, [x29, #-4]
   1733c:	b	17384 <_option_is_end@@Base+0x1674>
   17340:	ldur	x8, [x29, #-16]
   17344:	ldr	x0, [x8, #40]
   17348:	ldr	x1, [sp, #32]
   1734c:	bl	af40 <realloc@plt>
   17350:	str	x0, [sp, #24]
   17354:	ldr	x8, [sp, #24]
   17358:	cbnz	x8, 17368 <_option_is_end@@Base+0x1658>
   1735c:	mov	w8, #0xffffffff            	// #-1
   17360:	stur	w8, [x29, #-4]
   17364:	b	17384 <_option_is_end@@Base+0x1674>
   17368:	ldr	x8, [sp, #24]
   1736c:	ldur	x9, [x29, #-16]
   17370:	str	x8, [x9, #40]
   17374:	ldur	x8, [x29, #-24]
   17378:	ldur	x9, [x29, #-16]
   1737c:	str	x8, [x9, #56]
   17380:	stur	wzr, [x29, #-4]
   17384:	ldur	w0, [x29, #-4]
   17388:	ldp	x29, x30, [sp, #64]
   1738c:	add	sp, sp, #0x50
   17390:	ret

0000000000017394 <rotl64@@Base>:
   17394:	sub	sp, sp, #0x10
   17398:	mov	w8, #0x40                  	// #64
   1739c:	str	x0, [sp, #8]
   173a0:	str	w1, [sp, #4]
   173a4:	ldr	x9, [sp, #8]
   173a8:	ldr	w10, [sp, #4]
   173ac:	mov	w11, w10
   173b0:	lsl	x9, x9, x11
   173b4:	ldr	x11, [sp, #8]
   173b8:	ldr	w10, [sp, #4]
   173bc:	subs	w8, w8, w10
   173c0:	mov	w12, w8
   173c4:	lsr	x11, x11, x12
   173c8:	orr	x0, x9, x11
   173cc:	add	sp, sp, #0x10
   173d0:	ret

00000000000173d4 <rotr64@@Base>:
   173d4:	sub	sp, sp, #0x10
   173d8:	mov	w8, #0x40                  	// #64
   173dc:	str	x0, [sp, #8]
   173e0:	str	w1, [sp, #4]
   173e4:	ldr	x9, [sp, #8]
   173e8:	ldr	w10, [sp, #4]
   173ec:	mov	w11, w10
   173f0:	lsr	x9, x9, x11
   173f4:	ldr	x11, [sp, #8]
   173f8:	ldr	w10, [sp, #4]
   173fc:	subs	w8, w8, w10
   17400:	mov	w12, w8
   17404:	lsl	x11, x11, x12
   17408:	orr	x0, x9, x11
   1740c:	add	sp, sp, #0x10
   17410:	ret

0000000000017414 <rotl32@@Base>:
   17414:	sub	sp, sp, #0x10
   17418:	mov	w8, #0x20                  	// #32
   1741c:	str	w0, [sp, #12]
   17420:	str	w1, [sp, #8]
   17424:	ldr	w9, [sp, #12]
   17428:	ldr	w10, [sp, #8]
   1742c:	lsl	w9, w9, w10
   17430:	ldr	w10, [sp, #12]
   17434:	ldr	w11, [sp, #8]
   17438:	subs	w8, w8, w11
   1743c:	lsr	w8, w10, w8
   17440:	orr	w0, w9, w8
   17444:	add	sp, sp, #0x10
   17448:	ret

000000000001744c <rotr32@@Base>:
   1744c:	sub	sp, sp, #0x10
   17450:	mov	w8, #0x20                  	// #32
   17454:	str	w0, [sp, #12]
   17458:	str	w1, [sp, #8]
   1745c:	ldr	w9, [sp, #12]
   17460:	ldr	w10, [sp, #8]
   17464:	lsr	w9, w9, w10
   17468:	ldr	w10, [sp, #12]
   1746c:	ldr	w11, [sp, #8]
   17470:	subs	w8, w8, w11
   17474:	lsl	w8, w10, w8
   17478:	orr	w0, w9, w8
   1747c:	add	sp, sp, #0x10
   17480:	ret

0000000000017484 <rotl_sz@@Base>:
   17484:	sub	sp, sp, #0x10
   17488:	mov	x8, #0x40                  	// #64
   1748c:	str	x0, [sp, #8]
   17490:	str	w1, [sp, #4]
   17494:	ldr	x9, [sp, #8]
   17498:	ldr	w10, [sp, #4]
   1749c:	mov	w11, w10
   174a0:	lsl	x9, x9, x11
   174a4:	ldr	x11, [sp, #8]
   174a8:	ldrsw	x12, [sp, #4]
   174ac:	subs	x8, x8, x12
   174b0:	lsr	x8, x11, x8
   174b4:	orr	x0, x9, x8
   174b8:	add	sp, sp, #0x10
   174bc:	ret

00000000000174c0 <rotr_sz@@Base>:
   174c0:	sub	sp, sp, #0x10
   174c4:	mov	x8, #0x40                  	// #64
   174c8:	str	x0, [sp, #8]
   174cc:	str	w1, [sp, #4]
   174d0:	ldr	x9, [sp, #8]
   174d4:	ldr	w10, [sp, #4]
   174d8:	mov	w11, w10
   174dc:	lsr	x9, x9, x11
   174e0:	ldr	x11, [sp, #8]
   174e4:	ldrsw	x12, [sp, #4]
   174e8:	subs	x8, x8, x12
   174ec:	lsl	x8, x11, x8
   174f0:	orr	x0, x9, x8
   174f4:	add	sp, sp, #0x10
   174f8:	ret

00000000000174fc <rotl16@@Base>:
   174fc:	sub	sp, sp, #0x10
   17500:	mov	w8, #0x10                  	// #16
   17504:	strh	w0, [sp, #14]
   17508:	str	w1, [sp, #8]
   1750c:	ldrh	w9, [sp, #14]
   17510:	ldr	w10, [sp, #8]
   17514:	lsl	w9, w9, w10
   17518:	ldrh	w10, [sp, #14]
   1751c:	ldr	w11, [sp, #8]
   17520:	subs	w8, w8, w11
   17524:	lsr	w8, w10, w8
   17528:	orr	w8, w9, w8
   1752c:	and	w8, w8, #0xffff
   17530:	mov	w0, w8
   17534:	add	sp, sp, #0x10
   17538:	ret

000000000001753c <rotr16@@Base>:
   1753c:	sub	sp, sp, #0x10
   17540:	mov	w8, #0x10                  	// #16
   17544:	strh	w0, [sp, #14]
   17548:	str	w1, [sp, #8]
   1754c:	ldrh	w9, [sp, #14]
   17550:	ldr	w10, [sp, #8]
   17554:	lsr	w9, w9, w10
   17558:	ldrh	w10, [sp, #14]
   1755c:	ldr	w11, [sp, #8]
   17560:	subs	w8, w8, w11
   17564:	lsl	w8, w10, w8
   17568:	orr	w8, w9, w8
   1756c:	and	w8, w8, #0xffff
   17570:	mov	w0, w8
   17574:	add	sp, sp, #0x10
   17578:	ret

000000000001757c <rotl8@@Base>:
   1757c:	sub	sp, sp, #0x10
   17580:	mov	w8, #0x8                   	// #8
   17584:	strb	w0, [sp, #15]
   17588:	str	w1, [sp, #8]
   1758c:	ldrb	w9, [sp, #15]
   17590:	ldr	w10, [sp, #8]
   17594:	lsl	w9, w9, w10
   17598:	ldrb	w10, [sp, #15]
   1759c:	ldr	w11, [sp, #8]
   175a0:	subs	w8, w8, w11
   175a4:	lsr	w8, w10, w8
   175a8:	orr	w8, w9, w8
   175ac:	and	w8, w8, #0xff
   175b0:	mov	w0, w8
   175b4:	add	sp, sp, #0x10
   175b8:	ret

00000000000175bc <rotr8@@Base>:
   175bc:	sub	sp, sp, #0x10
   175c0:	mov	w8, #0x8                   	// #8
   175c4:	strb	w0, [sp, #15]
   175c8:	str	w1, [sp, #8]
   175cc:	ldrb	w9, [sp, #15]
   175d0:	ldr	w10, [sp, #8]
   175d4:	lsr	w9, w9, w10
   175d8:	ldrb	w10, [sp, #15]
   175dc:	ldr	w11, [sp, #8]
   175e0:	subs	w8, w8, w11
   175e4:	lsl	w8, w10, w8
   175e8:	orr	w8, w9, w8
   175ec:	and	w8, w8, #0xff
   175f0:	mov	w0, w8
   175f4:	add	sp, sp, #0x10
   175f8:	ret

00000000000175fc <canonicalize_filename_mode@@Base>:
   175fc:	sub	sp, sp, #0x180
   17600:	stp	x29, x30, [sp, #352]
   17604:	str	x28, [sp, #368]
   17608:	add	x29, sp, #0x160
   1760c:	mov	x8, xzr
   17610:	mov	w9, #0x1                   	// #1
   17614:	stur	x0, [x29, #-16]
   17618:	stur	w1, [x29, #-20]
   1761c:	stur	x8, [x29, #-48]
   17620:	stur	xzr, [x29, #-80]
   17624:	stur	x8, [x29, #-88]
   17628:	ldur	w10, [x29, #-20]
   1762c:	and	w10, w10, #0xfffffffc
   17630:	stur	w10, [x29, #-96]
   17634:	ldur	w10, [x29, #-96]
   17638:	tst	w10, #0x4
   1763c:	cset	w10, ne  // ne = any
   17640:	and	w9, w10, w9
   17644:	sturb	w9, [x29, #-97]
   17648:	ldur	w9, [x29, #-20]
   1764c:	and	w9, w9, #0x3
   17650:	stur	w9, [x29, #-20]
   17654:	ldur	w9, [x29, #-20]
   17658:	ldur	w10, [x29, #-20]
   1765c:	subs	w10, w10, #0x1
   17660:	and	w9, w9, w10
   17664:	cbz	w9, 17680 <canonicalize_filename_mode@@Base+0x84>
   17668:	bl	aa20 <__errno_location@plt>
   1766c:	mov	w8, #0x16                  	// #22
   17670:	str	w8, [x0]
   17674:	mov	x9, xzr
   17678:	stur	x9, [x29, #-8]
   1767c:	b	17ea0 <canonicalize_filename_mode@@Base+0x8a4>
   17680:	ldur	x8, [x29, #-16]
   17684:	cbnz	x8, 176a0 <canonicalize_filename_mode@@Base+0xa4>
   17688:	bl	aa20 <__errno_location@plt>
   1768c:	mov	w8, #0x16                  	// #22
   17690:	str	w8, [x0]
   17694:	mov	x9, xzr
   17698:	stur	x9, [x29, #-8]
   1769c:	b	17ea0 <canonicalize_filename_mode@@Base+0x8a4>
   176a0:	ldur	x8, [x29, #-16]
   176a4:	ldrb	w9, [x8]
   176a8:	cbnz	w9, 176c4 <canonicalize_filename_mode@@Base+0xc8>
   176ac:	bl	aa20 <__errno_location@plt>
   176b0:	mov	w8, #0x2                   	// #2
   176b4:	str	w8, [x0]
   176b8:	mov	x9, xzr
   176bc:	stur	x9, [x29, #-8]
   176c0:	b	17ea0 <canonicalize_filename_mode@@Base+0x8a4>
   176c4:	stur	xzr, [x29, #-112]
   176c8:	ldur	x8, [x29, #-16]
   176cc:	ldrb	w9, [x8]
   176d0:	cmp	w9, #0x2f
   176d4:	b.eq	17774 <canonicalize_filename_mode@@Base+0x178>  // b.none
   176d8:	bl	ad20 <xgetcwd@plt>
   176dc:	stur	x0, [x29, #-32]
   176e0:	ldur	x8, [x29, #-32]
   176e4:	cbnz	x8, 176f4 <canonicalize_filename_mode@@Base+0xf8>
   176e8:	mov	x8, xzr
   176ec:	stur	x8, [x29, #-8]
   176f0:	b	17ea0 <canonicalize_filename_mode@@Base+0x8a4>
   176f4:	ldur	x0, [x29, #-32]
   176f8:	mov	w8, wzr
   176fc:	mov	w1, w8
   17700:	bl	aa80 <strchr@plt>
   17704:	stur	x0, [x29, #-40]
   17708:	ldur	x9, [x29, #-40]
   1770c:	ldur	x10, [x29, #-32]
   17710:	subs	x9, x9, x10
   17714:	cmp	x9, #0x1, lsl #12
   17718:	b.ge	1775c <canonicalize_filename_mode@@Base+0x160>  // b.tcont
   1771c:	ldur	x0, [x29, #-32]
   17720:	mov	x1, #0x1000                	// #4096
   17724:	bl	a8f0 <xrealloc@plt>
   17728:	stur	x0, [x29, #-120]
   1772c:	ldur	x8, [x29, #-120]
   17730:	ldur	x9, [x29, #-40]
   17734:	ldur	x10, [x29, #-32]
   17738:	subs	x9, x9, x10
   1773c:	add	x8, x8, x9
   17740:	stur	x8, [x29, #-40]
   17744:	ldur	x8, [x29, #-120]
   17748:	stur	x8, [x29, #-32]
   1774c:	ldur	x8, [x29, #-32]
   17750:	add	x8, x8, #0x1, lsl #12
   17754:	stur	x8, [x29, #-72]
   17758:	b	17764 <canonicalize_filename_mode@@Base+0x168>
   1775c:	ldur	x8, [x29, #-40]
   17760:	stur	x8, [x29, #-72]
   17764:	ldur	x8, [x29, #-16]
   17768:	stur	x8, [x29, #-56]
   1776c:	stur	xzr, [x29, #-112]
   17770:	b	177e0 <canonicalize_filename_mode@@Base+0x1e4>
   17774:	mov	x0, #0x1000                	// #4096
   17778:	bl	aca0 <xmalloc@plt>
   1777c:	stur	x0, [x29, #-32]
   17780:	ldur	x8, [x29, #-32]
   17784:	add	x8, x8, #0x1, lsl #12
   17788:	stur	x8, [x29, #-72]
   1778c:	ldur	x8, [x29, #-32]
   17790:	stur	x8, [x29, #-40]
   17794:	ldur	x8, [x29, #-112]
   17798:	cbz	x8, 177bc <canonicalize_filename_mode@@Base+0x1c0>
   1779c:	ldur	x0, [x29, #-32]
   177a0:	ldur	x1, [x29, #-16]
   177a4:	ldur	x2, [x29, #-112]
   177a8:	bl	af30 <memcpy@plt>
   177ac:	ldur	x8, [x29, #-112]
   177b0:	ldur	x9, [x29, #-40]
   177b4:	add	x8, x9, x8
   177b8:	stur	x8, [x29, #-40]
   177bc:	ldur	x8, [x29, #-40]
   177c0:	add	x9, x8, #0x1
   177c4:	stur	x9, [x29, #-40]
   177c8:	mov	w10, #0x2f                  	// #47
   177cc:	strb	w10, [x8]
   177d0:	ldur	x8, [x29, #-16]
   177d4:	ldur	x9, [x29, #-112]
   177d8:	add	x8, x8, x9
   177dc:	stur	x8, [x29, #-56]
   177e0:	ldur	x8, [x29, #-56]
   177e4:	ldrb	w9, [x8]
   177e8:	cbz	w9, 17dc8 <canonicalize_filename_mode@@Base+0x7cc>
   177ec:	ldur	x8, [x29, #-56]
   177f0:	ldrb	w9, [x8]
   177f4:	cmp	w9, #0x2f
   177f8:	b.ne	1780c <canonicalize_filename_mode@@Base+0x210>  // b.any
   177fc:	ldur	x8, [x29, #-56]
   17800:	add	x8, x8, #0x1
   17804:	stur	x8, [x29, #-56]
   17808:	b	177ec <canonicalize_filename_mode@@Base+0x1f0>
   1780c:	ldur	x8, [x29, #-56]
   17810:	stur	x8, [x29, #-64]
   17814:	ldur	x8, [x29, #-64]
   17818:	ldrb	w9, [x8]
   1781c:	mov	w10, #0x0                   	// #0
   17820:	str	w10, [sp, #52]
   17824:	cbz	w9, 17840 <canonicalize_filename_mode@@Base+0x244>
   17828:	ldur	x8, [x29, #-64]
   1782c:	ldrb	w9, [x8]
   17830:	cmp	w9, #0x2f
   17834:	cset	w9, eq  // eq = none
   17838:	eor	w9, w9, #0x1
   1783c:	str	w9, [sp, #52]
   17840:	ldr	w8, [sp, #52]
   17844:	tbnz	w8, #0, 1784c <canonicalize_filename_mode@@Base+0x250>
   17848:	b	1785c <canonicalize_filename_mode@@Base+0x260>
   1784c:	ldur	x8, [x29, #-64]
   17850:	add	x8, x8, #0x1
   17854:	stur	x8, [x29, #-64]
   17858:	b	17814 <canonicalize_filename_mode@@Base+0x218>
   1785c:	ldur	x8, [x29, #-64]
   17860:	ldur	x9, [x29, #-56]
   17864:	subs	x8, x8, x9
   17868:	cbnz	x8, 17870 <canonicalize_filename_mode@@Base+0x274>
   1786c:	b	17dc8 <canonicalize_filename_mode@@Base+0x7cc>
   17870:	ldur	x8, [x29, #-64]
   17874:	ldur	x9, [x29, #-56]
   17878:	subs	x8, x8, x9
   1787c:	cmp	x8, #0x1
   17880:	b.ne	17898 <canonicalize_filename_mode@@Base+0x29c>  // b.any
   17884:	ldur	x8, [x29, #-56]
   17888:	ldrb	w9, [x8]
   1788c:	cmp	w9, #0x2e
   17890:	b.ne	17898 <canonicalize_filename_mode@@Base+0x29c>  // b.any
   17894:	b	17dbc <canonicalize_filename_mode@@Base+0x7c0>
   17898:	ldur	x8, [x29, #-64]
   1789c:	ldur	x9, [x29, #-56]
   178a0:	subs	x8, x8, x9
   178a4:	cmp	x8, #0x2
   178a8:	b.ne	1794c <canonicalize_filename_mode@@Base+0x350>  // b.any
   178ac:	ldur	x8, [x29, #-56]
   178b0:	ldrb	w9, [x8]
   178b4:	cmp	w9, #0x2e
   178b8:	b.ne	1794c <canonicalize_filename_mode@@Base+0x350>  // b.any
   178bc:	ldur	x8, [x29, #-56]
   178c0:	ldrb	w9, [x8, #1]
   178c4:	cmp	w9, #0x2e
   178c8:	b.ne	1794c <canonicalize_filename_mode@@Base+0x350>  // b.any
   178cc:	ldur	x8, [x29, #-40]
   178d0:	ldur	x9, [x29, #-32]
   178d4:	ldur	x10, [x29, #-112]
   178d8:	add	x9, x9, x10
   178dc:	add	x9, x9, #0x1
   178e0:	cmp	x8, x9
   178e4:	b.ls	17948 <canonicalize_filename_mode@@Base+0x34c>  // b.plast
   178e8:	ldur	x8, [x29, #-40]
   178ec:	mov	x9, #0xffffffffffffffff    	// #-1
   178f0:	add	x8, x8, x9
   178f4:	stur	x8, [x29, #-40]
   178f8:	ldur	x8, [x29, #-40]
   178fc:	ldur	x9, [x29, #-32]
   17900:	mov	w10, #0x0                   	// #0
   17904:	cmp	x8, x9
   17908:	str	w10, [sp, #48]
   1790c:	b.ls	17928 <canonicalize_filename_mode@@Base+0x32c>  // b.plast
   17910:	ldur	x8, [x29, #-40]
   17914:	ldurb	w9, [x8, #-1]
   17918:	cmp	w9, #0x2f
   1791c:	cset	w9, eq  // eq = none
   17920:	eor	w9, w9, #0x1
   17924:	str	w9, [sp, #48]
   17928:	ldr	w8, [sp, #48]
   1792c:	tbnz	w8, #0, 17934 <canonicalize_filename_mode@@Base+0x338>
   17930:	b	17948 <canonicalize_filename_mode@@Base+0x34c>
   17934:	ldur	x8, [x29, #-40]
   17938:	mov	x9, #0xffffffffffffffff    	// #-1
   1793c:	add	x8, x8, x9
   17940:	stur	x8, [x29, #-40]
   17944:	b	178f8 <canonicalize_filename_mode@@Base+0x2fc>
   17948:	b	17dbc <canonicalize_filename_mode@@Base+0x7c0>
   1794c:	ldur	x8, [x29, #-40]
   17950:	ldurb	w9, [x8, #-1]
   17954:	cmp	w9, #0x2f
   17958:	b.eq	17970 <canonicalize_filename_mode@@Base+0x374>  // b.none
   1795c:	ldur	x8, [x29, #-40]
   17960:	add	x9, x8, #0x1
   17964:	stur	x9, [x29, #-40]
   17968:	mov	w10, #0x2f                  	// #47
   1796c:	strb	w10, [x8]
   17970:	ldur	x8, [x29, #-40]
   17974:	ldur	x9, [x29, #-64]
   17978:	ldur	x10, [x29, #-56]
   1797c:	subs	x9, x9, x10
   17980:	add	x8, x8, x9
   17984:	ldur	x9, [x29, #-72]
   17988:	cmp	x8, x9
   1798c:	b.cc	17a24 <canonicalize_filename_mode@@Base+0x428>  // b.lo, b.ul, b.last
   17990:	ldur	x8, [x29, #-40]
   17994:	ldur	x9, [x29, #-32]
   17998:	subs	x8, x8, x9
   1799c:	str	x8, [sp, #96]
   179a0:	ldur	x8, [x29, #-72]
   179a4:	ldur	x9, [x29, #-32]
   179a8:	subs	x8, x8, x9
   179ac:	str	x8, [sp, #88]
   179b0:	ldur	x8, [x29, #-64]
   179b4:	ldur	x9, [x29, #-56]
   179b8:	subs	x8, x8, x9
   179bc:	add	x8, x8, #0x1
   179c0:	cmp	x8, #0x1, lsl #12
   179c4:	b.le	179e8 <canonicalize_filename_mode@@Base+0x3ec>
   179c8:	ldur	x8, [x29, #-64]
   179cc:	ldur	x9, [x29, #-56]
   179d0:	subs	x8, x8, x9
   179d4:	add	x8, x8, #0x1
   179d8:	ldr	x9, [sp, #88]
   179dc:	add	x8, x9, x8
   179e0:	str	x8, [sp, #88]
   179e4:	b	179f4 <canonicalize_filename_mode@@Base+0x3f8>
   179e8:	ldr	x8, [sp, #88]
   179ec:	add	x8, x8, #0x1, lsl #12
   179f0:	str	x8, [sp, #88]
   179f4:	ldur	x0, [x29, #-32]
   179f8:	ldr	x1, [sp, #88]
   179fc:	bl	a8f0 <xrealloc@plt>
   17a00:	stur	x0, [x29, #-32]
   17a04:	ldur	x8, [x29, #-32]
   17a08:	ldr	x9, [sp, #88]
   17a0c:	add	x8, x8, x9
   17a10:	stur	x8, [x29, #-72]
   17a14:	ldur	x8, [x29, #-32]
   17a18:	ldr	x9, [sp, #96]
   17a1c:	add	x8, x8, x9
   17a20:	stur	x8, [x29, #-40]
   17a24:	ldur	x8, [x29, #-40]
   17a28:	ldur	x1, [x29, #-56]
   17a2c:	ldur	x9, [x29, #-64]
   17a30:	ldur	x10, [x29, #-56]
   17a34:	subs	x2, x9, x10
   17a38:	mov	x0, x8
   17a3c:	str	x8, [sp, #40]
   17a40:	bl	af30 <memcpy@plt>
   17a44:	ldr	x8, [sp, #40]
   17a48:	stur	x8, [x29, #-40]
   17a4c:	ldur	x9, [x29, #-64]
   17a50:	ldur	x10, [x29, #-56]
   17a54:	subs	x9, x9, x10
   17a58:	ldur	x10, [x29, #-40]
   17a5c:	add	x9, x10, x9
   17a60:	stur	x9, [x29, #-40]
   17a64:	ldur	x9, [x29, #-40]
   17a68:	mov	w11, #0x0                   	// #0
   17a6c:	strb	w11, [x9]
   17a70:	ldurb	w11, [x29, #-97]
   17a74:	tbnz	w11, #0, 17a7c <canonicalize_filename_mode@@Base+0x480>
   17a78:	b	17a90 <canonicalize_filename_mode@@Base+0x494>
   17a7c:	ldur	w8, [x29, #-20]
   17a80:	cmp	w8, #0x2
   17a84:	b.ne	17a90 <canonicalize_filename_mode@@Base+0x494>  // b.any
   17a88:	str	wzr, [sp, #120]
   17a8c:	b	17b28 <canonicalize_filename_mode@@Base+0x52c>
   17a90:	ldurb	w8, [x29, #-97]
   17a94:	tbnz	w8, #0, 17a9c <canonicalize_filename_mode@@Base+0x4a0>
   17a98:	b	17ab0 <canonicalize_filename_mode@@Base+0x4b4>
   17a9c:	ldur	x0, [x29, #-32]
   17aa0:	add	x1, sp, #0x68
   17aa4:	bl	443b8 <vasnprintf@@Base+0x2204>
   17aa8:	str	w0, [sp, #36]
   17aac:	b	17ac0 <canonicalize_filename_mode@@Base+0x4c4>
   17ab0:	ldur	x0, [x29, #-32]
   17ab4:	add	x1, sp, #0x68
   17ab8:	bl	443d8 <vasnprintf@@Base+0x2224>
   17abc:	str	w0, [sp, #36]
   17ac0:	ldr	w8, [sp, #36]
   17ac4:	cbz	w8, 17b28 <canonicalize_filename_mode@@Base+0x52c>
   17ac8:	bl	aa20 <__errno_location@plt>
   17acc:	ldr	w8, [x0]
   17ad0:	stur	w8, [x29, #-92]
   17ad4:	ldur	w8, [x29, #-20]
   17ad8:	cbnz	w8, 17ae0 <canonicalize_filename_mode@@Base+0x4e4>
   17adc:	b	17e64 <canonicalize_filename_mode@@Base+0x868>
   17ae0:	ldur	w8, [x29, #-20]
   17ae4:	cmp	w8, #0x1
   17ae8:	b.ne	17b24 <canonicalize_filename_mode@@Base+0x528>  // b.any
   17aec:	ldur	x8, [x29, #-64]
   17af0:	ldur	x0, [x29, #-64]
   17af4:	adrp	x1, 45000 <vasnprintf@@Base+0x2e4c>
   17af8:	add	x1, x1, #0x219
   17afc:	str	x8, [sp, #24]
   17b00:	bl	ab70 <strspn@plt>
   17b04:	ldr	x8, [sp, #24]
   17b08:	ldrb	w9, [x8, x0]
   17b0c:	cbnz	w9, 17b1c <canonicalize_filename_mode@@Base+0x520>
   17b10:	ldur	w8, [x29, #-92]
   17b14:	cmp	w8, #0x2
   17b18:	b.eq	17b20 <canonicalize_filename_mode@@Base+0x524>  // b.none
   17b1c:	b	17e64 <canonicalize_filename_mode@@Base+0x868>
   17b20:	b	17dbc <canonicalize_filename_mode@@Base+0x7c0>
   17b24:	str	wzr, [sp, #120]
   17b28:	ldr	w8, [sp, #120]
   17b2c:	and	w8, w8, #0xf000
   17b30:	cmp	w8, #0xa, lsl #12
   17b34:	b.ne	17d88 <canonicalize_filename_mode@@Base+0x78c>  // b.any
   17b38:	ldur	x1, [x29, #-16]
   17b3c:	sub	x0, x29, #0x58
   17b40:	add	x2, sp, #0x68
   17b44:	bl	17eb4 <canonicalize_filename_mode@@Base+0x8b8>
   17b48:	tbnz	w0, #0, 17b50 <canonicalize_filename_mode@@Base+0x554>
   17b4c:	b	17b6c <canonicalize_filename_mode@@Base+0x570>
   17b50:	ldur	w8, [x29, #-20]
   17b54:	cmp	w8, #0x2
   17b58:	b.ne	17b60 <canonicalize_filename_mode@@Base+0x564>  // b.any
   17b5c:	b	17dbc <canonicalize_filename_mode@@Base+0x7c0>
   17b60:	mov	w8, #0x28                  	// #40
   17b64:	stur	w8, [x29, #-92]
   17b68:	b	17e64 <canonicalize_filename_mode@@Base+0x868>
   17b6c:	ldur	x0, [x29, #-32]
   17b70:	ldr	x1, [sp, #152]
   17b74:	bl	b1a0 <areadlink_with_size@plt>
   17b78:	str	x0, [sp, #80]
   17b7c:	ldr	x8, [sp, #80]
   17b80:	cbnz	x8, 17bb4 <canonicalize_filename_mode@@Base+0x5b8>
   17b84:	ldur	w8, [x29, #-20]
   17b88:	cmp	w8, #0x2
   17b8c:	b.ne	17ba4 <canonicalize_filename_mode@@Base+0x5a8>  // b.any
   17b90:	bl	aa20 <__errno_location@plt>
   17b94:	ldr	w8, [x0]
   17b98:	cmp	w8, #0xc
   17b9c:	b.eq	17ba4 <canonicalize_filename_mode@@Base+0x5a8>  // b.none
   17ba0:	b	17dbc <canonicalize_filename_mode@@Base+0x7c0>
   17ba4:	bl	aa20 <__errno_location@plt>
   17ba8:	ldr	w8, [x0]
   17bac:	stur	w8, [x29, #-92]
   17bb0:	b	17e64 <canonicalize_filename_mode@@Base+0x868>
   17bb4:	ldr	x0, [sp, #80]
   17bb8:	bl	a8e0 <strlen@plt>
   17bbc:	str	x0, [sp, #72]
   17bc0:	ldur	x0, [x29, #-64]
   17bc4:	bl	a8e0 <strlen@plt>
   17bc8:	str	x0, [sp, #64]
   17bcc:	ldur	x8, [x29, #-80]
   17bd0:	cbnz	x8, 17c24 <canonicalize_filename_mode@@Base+0x628>
   17bd4:	ldr	x8, [sp, #72]
   17bd8:	ldr	x9, [sp, #64]
   17bdc:	add	x8, x8, x9
   17be0:	add	x8, x8, #0x1
   17be4:	cmp	x8, #0x1, lsl #12
   17be8:	b.ls	17c04 <canonicalize_filename_mode@@Base+0x608>  // b.plast
   17bec:	ldr	x8, [sp, #72]
   17bf0:	ldr	x9, [sp, #64]
   17bf4:	add	x8, x8, x9
   17bf8:	add	x8, x8, #0x1
   17bfc:	str	x8, [sp, #16]
   17c00:	b	17c0c <canonicalize_filename_mode@@Base+0x610>
   17c04:	mov	x8, #0x1000                	// #4096
   17c08:	str	x8, [sp, #16]
   17c0c:	ldr	x8, [sp, #16]
   17c10:	stur	x8, [x29, #-80]
   17c14:	ldur	x0, [x29, #-80]
   17c18:	bl	aca0 <xmalloc@plt>
   17c1c:	stur	x0, [x29, #-48]
   17c20:	b	17c64 <canonicalize_filename_mode@@Base+0x668>
   17c24:	ldr	x8, [sp, #72]
   17c28:	ldr	x9, [sp, #64]
   17c2c:	add	x8, x8, x9
   17c30:	add	x8, x8, #0x1
   17c34:	ldur	x9, [x29, #-80]
   17c38:	cmp	x8, x9
   17c3c:	b.ls	17c64 <canonicalize_filename_mode@@Base+0x668>  // b.plast
   17c40:	ldr	x8, [sp, #72]
   17c44:	ldr	x9, [sp, #64]
   17c48:	add	x8, x8, x9
   17c4c:	add	x8, x8, #0x1
   17c50:	stur	x8, [x29, #-80]
   17c54:	ldur	x0, [x29, #-48]
   17c58:	ldur	x1, [x29, #-80]
   17c5c:	bl	a8f0 <xrealloc@plt>
   17c60:	stur	x0, [x29, #-48]
   17c64:	ldur	x8, [x29, #-48]
   17c68:	ldr	x9, [sp, #72]
   17c6c:	add	x0, x8, x9
   17c70:	ldur	x1, [x29, #-64]
   17c74:	ldr	x8, [sp, #64]
   17c78:	add	x2, x8, #0x1
   17c7c:	bl	af70 <memmove@plt>
   17c80:	ldur	x8, [x29, #-48]
   17c84:	ldr	x1, [sp, #80]
   17c88:	ldr	x2, [sp, #72]
   17c8c:	mov	x0, x8
   17c90:	str	x8, [sp, #8]
   17c94:	bl	af30 <memcpy@plt>
   17c98:	ldr	x8, [sp, #8]
   17c9c:	stur	x8, [x29, #-64]
   17ca0:	stur	x8, [x29, #-16]
   17ca4:	ldr	x9, [sp, #80]
   17ca8:	ldrb	w10, [x9]
   17cac:	cmp	w10, #0x2f
   17cb0:	b.ne	17d00 <canonicalize_filename_mode@@Base+0x704>  // b.any
   17cb4:	str	xzr, [sp, #56]
   17cb8:	ldr	x8, [sp, #56]
   17cbc:	cbz	x8, 17cd0 <canonicalize_filename_mode@@Base+0x6d4>
   17cc0:	ldur	x0, [x29, #-32]
   17cc4:	ldr	x1, [sp, #80]
   17cc8:	ldr	x2, [sp, #56]
   17ccc:	bl	af30 <memcpy@plt>
   17cd0:	ldur	x8, [x29, #-32]
   17cd4:	ldr	x9, [sp, #56]
   17cd8:	add	x8, x8, x9
   17cdc:	stur	x8, [x29, #-40]
   17ce0:	ldur	x8, [x29, #-40]
   17ce4:	add	x9, x8, #0x1
   17ce8:	stur	x9, [x29, #-40]
   17cec:	mov	w10, #0x2f                  	// #47
   17cf0:	strb	w10, [x8]
   17cf4:	ldr	x8, [sp, #56]
   17cf8:	stur	x8, [x29, #-112]
   17cfc:	b	17d7c <canonicalize_filename_mode@@Base+0x780>
   17d00:	ldur	x8, [x29, #-40]
   17d04:	ldur	x9, [x29, #-32]
   17d08:	ldur	x10, [x29, #-112]
   17d0c:	add	x9, x9, x10
   17d10:	add	x9, x9, #0x1
   17d14:	cmp	x8, x9
   17d18:	b.ls	17d7c <canonicalize_filename_mode@@Base+0x780>  // b.plast
   17d1c:	ldur	x8, [x29, #-40]
   17d20:	mov	x9, #0xffffffffffffffff    	// #-1
   17d24:	add	x8, x8, x9
   17d28:	stur	x8, [x29, #-40]
   17d2c:	ldur	x8, [x29, #-40]
   17d30:	ldur	x9, [x29, #-32]
   17d34:	mov	w10, #0x0                   	// #0
   17d38:	cmp	x8, x9
   17d3c:	str	w10, [sp, #4]
   17d40:	b.ls	17d5c <canonicalize_filename_mode@@Base+0x760>  // b.plast
   17d44:	ldur	x8, [x29, #-40]
   17d48:	ldurb	w9, [x8, #-1]
   17d4c:	cmp	w9, #0x2f
   17d50:	cset	w9, eq  // eq = none
   17d54:	eor	w9, w9, #0x1
   17d58:	str	w9, [sp, #4]
   17d5c:	ldr	w8, [sp, #4]
   17d60:	tbnz	w8, #0, 17d68 <canonicalize_filename_mode@@Base+0x76c>
   17d64:	b	17d7c <canonicalize_filename_mode@@Base+0x780>
   17d68:	ldur	x8, [x29, #-40]
   17d6c:	mov	x9, #0xffffffffffffffff    	// #-1
   17d70:	add	x8, x8, x9
   17d74:	stur	x8, [x29, #-40]
   17d78:	b	17d2c <canonicalize_filename_mode@@Base+0x730>
   17d7c:	ldr	x0, [sp, #80]
   17d80:	bl	a930 <free@plt>
   17d84:	b	17dbc <canonicalize_filename_mode@@Base+0x7c0>
   17d88:	ldr	w8, [sp, #120]
   17d8c:	and	w8, w8, #0xf000
   17d90:	cmp	w8, #0x4, lsl #12
   17d94:	b.eq	17dbc <canonicalize_filename_mode@@Base+0x7c0>  // b.none
   17d98:	ldur	x8, [x29, #-64]
   17d9c:	ldrb	w9, [x8]
   17da0:	cbz	w9, 17dbc <canonicalize_filename_mode@@Base+0x7c0>
   17da4:	ldur	w8, [x29, #-20]
   17da8:	cmp	w8, #0x2
   17dac:	b.eq	17dbc <canonicalize_filename_mode@@Base+0x7c0>  // b.none
   17db0:	mov	w8, #0x14                  	// #20
   17db4:	stur	w8, [x29, #-92]
   17db8:	b	17e64 <canonicalize_filename_mode@@Base+0x868>
   17dbc:	ldur	x8, [x29, #-64]
   17dc0:	stur	x8, [x29, #-56]
   17dc4:	b	177e0 <canonicalize_filename_mode@@Base+0x1e4>
   17dc8:	ldur	x8, [x29, #-40]
   17dcc:	ldur	x9, [x29, #-32]
   17dd0:	ldur	x10, [x29, #-112]
   17dd4:	add	x9, x9, x10
   17dd8:	add	x9, x9, #0x1
   17ddc:	cmp	x8, x9
   17de0:	b.ls	17e04 <canonicalize_filename_mode@@Base+0x808>  // b.plast
   17de4:	ldur	x8, [x29, #-40]
   17de8:	ldurb	w9, [x8, #-1]
   17dec:	cmp	w9, #0x2f
   17df0:	b.ne	17e04 <canonicalize_filename_mode@@Base+0x808>  // b.any
   17df4:	ldur	x8, [x29, #-40]
   17df8:	mov	x9, #0xffffffffffffffff    	// #-1
   17dfc:	add	x8, x8, x9
   17e00:	stur	x8, [x29, #-40]
   17e04:	ldur	x8, [x29, #-40]
   17e08:	mov	w9, #0x0                   	// #0
   17e0c:	strb	w9, [x8]
   17e10:	ldur	x8, [x29, #-72]
   17e14:	ldur	x10, [x29, #-40]
   17e18:	add	x10, x10, #0x1
   17e1c:	cmp	x8, x10
   17e20:	b.eq	17e40 <canonicalize_filename_mode@@Base+0x844>  // b.none
   17e24:	ldur	x0, [x29, #-32]
   17e28:	ldur	x8, [x29, #-40]
   17e2c:	ldur	x9, [x29, #-32]
   17e30:	subs	x8, x8, x9
   17e34:	add	x1, x8, #0x1
   17e38:	bl	a8f0 <xrealloc@plt>
   17e3c:	stur	x0, [x29, #-32]
   17e40:	ldur	x0, [x29, #-48]
   17e44:	bl	a930 <free@plt>
   17e48:	ldur	x8, [x29, #-88]
   17e4c:	cbz	x8, 17e58 <canonicalize_filename_mode@@Base+0x85c>
   17e50:	ldur	x0, [x29, #-88]
   17e54:	bl	b1b0 <hash_free@plt>
   17e58:	ldur	x8, [x29, #-32]
   17e5c:	stur	x8, [x29, #-8]
   17e60:	b	17ea0 <canonicalize_filename_mode@@Base+0x8a4>
   17e64:	ldur	x0, [x29, #-48]
   17e68:	bl	a930 <free@plt>
   17e6c:	ldur	x0, [x29, #-32]
   17e70:	bl	a930 <free@plt>
   17e74:	ldur	x8, [x29, #-88]
   17e78:	cbz	x8, 17e84 <canonicalize_filename_mode@@Base+0x888>
   17e7c:	ldur	x0, [x29, #-88]
   17e80:	bl	b1b0 <hash_free@plt>
   17e84:	ldur	w8, [x29, #-92]
   17e88:	str	w8, [sp]
   17e8c:	bl	aa20 <__errno_location@plt>
   17e90:	ldr	w8, [sp]
   17e94:	str	w8, [x0]
   17e98:	mov	x9, xzr
   17e9c:	stur	x9, [x29, #-8]
   17ea0:	ldur	x0, [x29, #-8]
   17ea4:	ldr	x28, [sp, #368]
   17ea8:	ldp	x29, x30, [sp, #352]
   17eac:	add	sp, sp, #0x180
   17eb0:	ret
   17eb4:	sub	sp, sp, #0x40
   17eb8:	stp	x29, x30, [sp, #48]
   17ebc:	add	x29, sp, #0x30
   17ec0:	stur	x0, [x29, #-16]
   17ec4:	str	x1, [sp, #24]
   17ec8:	str	x2, [sp, #16]
   17ecc:	ldur	x8, [x29, #-16]
   17ed0:	ldr	x8, [x8]
   17ed4:	cbnz	x8, 17f20 <canonicalize_filename_mode@@Base+0x924>
   17ed8:	mov	x8, #0x7                   	// #7
   17edc:	str	x8, [sp, #8]
   17ee0:	ldr	x0, [sp, #8]
   17ee4:	mov	x8, xzr
   17ee8:	mov	x1, x8
   17eec:	adrp	x2, 5f000 <vasnprintf@@Base+0x1ce4c>
   17ef0:	ldr	x2, [x2, #3976]
   17ef4:	adrp	x3, 5f000 <vasnprintf@@Base+0x1ce4c>
   17ef8:	ldr	x3, [x3, #3984]
   17efc:	adrp	x4, 5f000 <vasnprintf@@Base+0x1ce4c>
   17f00:	ldr	x4, [x4, #3992]
   17f04:	bl	b1c0 <hash_initialize@plt>
   17f08:	ldur	x8, [x29, #-16]
   17f0c:	str	x0, [x8]
   17f10:	ldur	x8, [x29, #-16]
   17f14:	ldr	x8, [x8]
   17f18:	cbnz	x8, 17f20 <canonicalize_filename_mode@@Base+0x924>
   17f1c:	bl	b1d0 <xalloc_die@plt>
   17f20:	ldur	x8, [x29, #-16]
   17f24:	ldr	x0, [x8]
   17f28:	ldr	x1, [sp, #24]
   17f2c:	ldr	x2, [sp, #16]
   17f30:	bl	b1e0 <seen_file@plt>
   17f34:	tbnz	w0, #0, 17f3c <canonicalize_filename_mode@@Base+0x940>
   17f38:	b	17f4c <canonicalize_filename_mode@@Base+0x950>
   17f3c:	mov	w8, #0x1                   	// #1
   17f40:	and	w8, w8, #0x1
   17f44:	sturb	w8, [x29, #-1]
   17f48:	b	17f6c <canonicalize_filename_mode@@Base+0x970>
   17f4c:	ldur	x8, [x29, #-16]
   17f50:	ldr	x0, [x8]
   17f54:	ldr	x1, [sp, #24]
   17f58:	ldr	x2, [sp, #16]
   17f5c:	bl	b1f0 <record_file@plt>
   17f60:	mov	w9, wzr
   17f64:	and	w9, w9, #0x1
   17f68:	sturb	w9, [x29, #-1]
   17f6c:	ldurb	w8, [x29, #-1]
   17f70:	and	w0, w8, #0x1
   17f74:	ldp	x29, x30, [sp, #48]
   17f78:	add	sp, sp, #0x40
   17f7c:	ret

0000000000017f80 <set_cloexec_flag@@Base>:
   17f80:	sub	sp, sp, #0x30
   17f84:	stp	x29, x30, [sp, #32]
   17f88:	add	x29, sp, #0x20
   17f8c:	mov	w8, #0x1                   	// #1
   17f90:	mov	w9, wzr
   17f94:	stur	w0, [x29, #-8]
   17f98:	and	w10, w1, w8
   17f9c:	sturb	w10, [x29, #-9]
   17fa0:	ldur	w0, [x29, #-8]
   17fa4:	mov	w1, w8
   17fa8:	mov	w2, w9
   17fac:	str	w9, [sp, #8]
   17fb0:	bl	b200 <rpl_fcntl@plt>
   17fb4:	str	w0, [sp, #16]
   17fb8:	ldr	w8, [sp, #16]
   17fbc:	ldr	w9, [sp, #8]
   17fc0:	cmp	w9, w8
   17fc4:	cset	w8, gt
   17fc8:	tbnz	w8, #0, 18030 <set_cloexec_flag@@Base+0xb0>
   17fcc:	ldurb	w8, [x29, #-9]
   17fd0:	tbnz	w8, #0, 17fd8 <set_cloexec_flag@@Base+0x58>
   17fd4:	b	17fe8 <set_cloexec_flag@@Base+0x68>
   17fd8:	ldr	w8, [sp, #16]
   17fdc:	orr	w8, w8, #0x1
   17fe0:	str	w8, [sp, #4]
   17fe4:	b	17ff4 <set_cloexec_flag@@Base+0x74>
   17fe8:	ldr	w8, [sp, #16]
   17fec:	and	w8, w8, #0xfffffffe
   17ff0:	str	w8, [sp, #4]
   17ff4:	ldr	w8, [sp, #4]
   17ff8:	str	w8, [sp, #12]
   17ffc:	ldr	w8, [sp, #16]
   18000:	ldr	w9, [sp, #12]
   18004:	cmp	w8, w9
   18008:	b.eq	18028 <set_cloexec_flag@@Base+0xa8>  // b.none
   1800c:	ldur	w0, [x29, #-8]
   18010:	ldr	w2, [sp, #12]
   18014:	mov	w1, #0x2                   	// #2
   18018:	bl	b200 <rpl_fcntl@plt>
   1801c:	mov	w8, #0xffffffff            	// #-1
   18020:	cmp	w0, w8
   18024:	b.eq	18030 <set_cloexec_flag@@Base+0xb0>  // b.none
   18028:	stur	wzr, [x29, #-4]
   1802c:	b	18038 <set_cloexec_flag@@Base+0xb8>
   18030:	mov	w8, #0xffffffff            	// #-1
   18034:	stur	w8, [x29, #-4]
   18038:	ldur	w0, [x29, #-4]
   1803c:	ldp	x29, x30, [sp, #32]
   18040:	add	sp, sp, #0x30
   18044:	ret

0000000000018048 <dup_cloexec@@Base>:
   18048:	sub	sp, sp, #0x20
   1804c:	stp	x29, x30, [sp, #16]
   18050:	add	x29, sp, #0x10
   18054:	mov	w1, #0x406                 	// #1030
   18058:	mov	w8, wzr
   1805c:	stur	w0, [x29, #-4]
   18060:	ldur	w0, [x29, #-4]
   18064:	mov	w2, w8
   18068:	bl	b200 <rpl_fcntl@plt>
   1806c:	ldp	x29, x30, [sp, #16]
   18070:	add	sp, sp, #0x20
   18074:	ret

0000000000018078 <dir_name@@Base>:
   18078:	sub	sp, sp, #0x20
   1807c:	stp	x29, x30, [sp, #16]
   18080:	add	x29, sp, #0x10
   18084:	str	x0, [sp, #8]
   18088:	ldr	x0, [sp, #8]
   1808c:	bl	b210 <mdir_name@plt>
   18090:	str	x0, [sp]
   18094:	ldr	x8, [sp]
   18098:	cbnz	x8, 180a0 <dir_name@@Base+0x28>
   1809c:	bl	b1d0 <xalloc_die@plt>
   180a0:	ldr	x0, [sp]
   180a4:	ldp	x29, x30, [sp, #16]
   180a8:	add	sp, sp, #0x20
   180ac:	ret

00000000000180b0 <base_name@@Base>:
   180b0:	sub	sp, sp, #0x40
   180b4:	stp	x29, x30, [sp, #48]
   180b8:	add	x29, sp, #0x30
   180bc:	stur	x0, [x29, #-16]
   180c0:	ldur	x0, [x29, #-16]
   180c4:	bl	b130 <last_component@plt>
   180c8:	str	x0, [sp, #24]
   180cc:	ldr	x8, [sp, #24]
   180d0:	ldrb	w9, [x8]
   180d4:	cbnz	w9, 18108 <base_name@@Base+0x58>
   180d8:	ldur	x0, [x29, #-16]
   180dc:	ldur	x8, [x29, #-16]
   180e0:	str	x0, [sp, #8]
   180e4:	mov	x0, x8
   180e8:	bl	b220 <base_len@plt>
   180ec:	ldr	x8, [sp, #8]
   180f0:	str	x0, [sp]
   180f4:	mov	x0, x8
   180f8:	ldr	x1, [sp]
   180fc:	bl	aaa0 <xstrndup@plt>
   18100:	stur	x0, [x29, #-8]
   18104:	b	18144 <base_name@@Base+0x94>
   18108:	ldr	x0, [sp, #24]
   1810c:	bl	b220 <base_len@plt>
   18110:	str	x0, [sp, #16]
   18114:	ldr	x8, [sp, #24]
   18118:	ldr	x9, [sp, #16]
   1811c:	ldrb	w10, [x8, x9]
   18120:	cmp	w10, #0x2f
   18124:	b.ne	18134 <base_name@@Base+0x84>  // b.any
   18128:	ldr	x8, [sp, #16]
   1812c:	add	x8, x8, #0x1
   18130:	str	x8, [sp, #16]
   18134:	ldr	x0, [sp, #24]
   18138:	ldr	x1, [sp, #16]
   1813c:	bl	aaa0 <xstrndup@plt>
   18140:	stur	x0, [x29, #-8]
   18144:	ldur	x0, [x29, #-8]
   18148:	ldp	x29, x30, [sp, #48]
   1814c:	add	sp, sp, #0x40
   18150:	ret

0000000000018154 <dir_len@@Base>:
   18154:	sub	sp, sp, #0x30
   18158:	stp	x29, x30, [sp, #32]
   1815c:	add	x29, sp, #0x20
   18160:	stur	x0, [x29, #-8]
   18164:	str	xzr, [sp, #16]
   18168:	ldr	x8, [sp, #16]
   1816c:	cbz	x8, 1817c <dir_len@@Base+0x28>
   18170:	mov	w8, wzr
   18174:	str	w8, [sp, #4]
   18178:	b	18198 <dir_len@@Base+0x44>
   1817c:	ldur	x8, [x29, #-8]
   18180:	ldrb	w9, [x8]
   18184:	mov	w10, wzr
   18188:	mov	w11, #0x1                   	// #1
   1818c:	cmp	w9, #0x2f
   18190:	csel	w9, w11, w10, eq  // eq = none
   18194:	str	w9, [sp, #4]
   18198:	ldr	w8, [sp, #4]
   1819c:	ldr	x9, [sp, #16]
   181a0:	add	x9, x9, w8, sxtw
   181a4:	str	x9, [sp, #16]
   181a8:	ldur	x0, [x29, #-8]
   181ac:	bl	b130 <last_component@plt>
   181b0:	ldur	x9, [x29, #-8]
   181b4:	subs	x9, x0, x9
   181b8:	str	x9, [sp, #8]
   181bc:	ldr	x8, [sp, #16]
   181c0:	ldr	x9, [sp, #8]
   181c4:	cmp	x8, x9
   181c8:	b.cs	181f8 <dir_len@@Base+0xa4>  // b.hs, b.nlast
   181cc:	ldur	x8, [x29, #-8]
   181d0:	ldr	x9, [sp, #8]
   181d4:	subs	x9, x9, #0x1
   181d8:	ldrb	w10, [x8, x9]
   181dc:	cmp	w10, #0x2f
   181e0:	b.eq	181e8 <dir_len@@Base+0x94>  // b.none
   181e4:	b	181f8 <dir_len@@Base+0xa4>
   181e8:	ldr	x8, [sp, #8]
   181ec:	subs	x8, x8, #0x1
   181f0:	str	x8, [sp, #8]
   181f4:	b	181bc <dir_len@@Base+0x68>
   181f8:	ldr	x0, [sp, #8]
   181fc:	ldp	x29, x30, [sp, #32]
   18200:	add	sp, sp, #0x30
   18204:	ret

0000000000018208 <mdir_name@@Base>:
   18208:	sub	sp, sp, #0x40
   1820c:	stp	x29, x30, [sp, #48]
   18210:	add	x29, sp, #0x30
   18214:	stur	x0, [x29, #-16]
   18218:	ldur	x0, [x29, #-16]
   1821c:	bl	b230 <dir_len@plt>
   18220:	str	x0, [sp, #24]
   18224:	ldr	x8, [sp, #24]
   18228:	mov	w9, #0x1                   	// #1
   1822c:	str	w9, [sp, #4]
   18230:	cbz	x8, 1823c <mdir_name@@Base+0x34>
   18234:	mov	w8, #0x0                   	// #0
   18238:	str	w8, [sp, #4]
   1823c:	ldr	w8, [sp, #4]
   18240:	and	w8, w8, #0x1
   18244:	strb	w8, [sp, #23]
   18248:	ldr	x9, [sp, #24]
   1824c:	ldrb	w8, [sp, #23]
   18250:	mov	w0, w8
   18254:	and	x10, x0, #0x1
   18258:	add	x9, x9, x10
   1825c:	add	x0, x9, #0x1
   18260:	bl	af10 <malloc@plt>
   18264:	str	x0, [sp, #8]
   18268:	ldr	x9, [sp, #8]
   1826c:	cbnz	x9, 1827c <mdir_name@@Base+0x74>
   18270:	mov	x8, xzr
   18274:	stur	x8, [x29, #-8]
   18278:	b	182d0 <mdir_name@@Base+0xc8>
   1827c:	ldr	x0, [sp, #8]
   18280:	ldur	x1, [x29, #-16]
   18284:	ldr	x2, [sp, #24]
   18288:	bl	af30 <memcpy@plt>
   1828c:	ldrb	w8, [sp, #23]
   18290:	tbnz	w8, #0, 18298 <mdir_name@@Base+0x90>
   18294:	b	182b4 <mdir_name@@Base+0xac>
   18298:	ldr	x8, [sp, #8]
   1829c:	ldr	x9, [sp, #24]
   182a0:	add	x10, x9, #0x1
   182a4:	str	x10, [sp, #24]
   182a8:	add	x8, x8, x9
   182ac:	mov	w11, #0x2e                  	// #46
   182b0:	strb	w11, [x8]
   182b4:	ldr	x8, [sp, #8]
   182b8:	ldr	x9, [sp, #24]
   182bc:	add	x8, x8, x9
   182c0:	mov	w10, #0x0                   	// #0
   182c4:	strb	w10, [x8]
   182c8:	ldr	x8, [sp, #8]
   182cc:	stur	x8, [x29, #-8]
   182d0:	ldur	x0, [x29, #-8]
   182d4:	ldp	x29, x30, [sp, #48]
   182d8:	add	sp, sp, #0x40
   182dc:	ret

00000000000182e0 <last_component@@Base>:
   182e0:	sub	sp, sp, #0x20
   182e4:	mov	w8, #0x0                   	// #0
   182e8:	str	x0, [sp, #24]
   182ec:	ldr	x9, [sp, #24]
   182f0:	str	x9, [sp, #16]
   182f4:	strb	w8, [sp, #7]
   182f8:	ldr	x8, [sp, #16]
   182fc:	ldrb	w9, [x8]
   18300:	cmp	w9, #0x2f
   18304:	b.ne	18318 <last_component@@Base+0x38>  // b.any
   18308:	ldr	x8, [sp, #16]
   1830c:	add	x8, x8, #0x1
   18310:	str	x8, [sp, #16]
   18314:	b	182f8 <last_component@@Base+0x18>
   18318:	ldr	x8, [sp, #16]
   1831c:	str	x8, [sp, #8]
   18320:	ldr	x8, [sp, #8]
   18324:	ldrb	w9, [x8]
   18328:	cbz	w9, 18374 <last_component@@Base+0x94>
   1832c:	ldr	x8, [sp, #8]
   18330:	ldrb	w9, [x8]
   18334:	cmp	w9, #0x2f
   18338:	b.ne	18348 <last_component@@Base+0x68>  // b.any
   1833c:	mov	w8, #0x1                   	// #1
   18340:	strb	w8, [sp, #7]
   18344:	b	18364 <last_component@@Base+0x84>
   18348:	ldrb	w8, [sp, #7]
   1834c:	tbnz	w8, #0, 18354 <last_component@@Base+0x74>
   18350:	b	18364 <last_component@@Base+0x84>
   18354:	ldr	x8, [sp, #8]
   18358:	str	x8, [sp, #16]
   1835c:	mov	w9, #0x0                   	// #0
   18360:	strb	w9, [sp, #7]
   18364:	ldr	x8, [sp, #8]
   18368:	add	x8, x8, #0x1
   1836c:	str	x8, [sp, #8]
   18370:	b	18320 <last_component@@Base+0x40>
   18374:	ldr	x0, [sp, #16]
   18378:	add	sp, sp, #0x20
   1837c:	ret

0000000000018380 <base_len@@Base>:
   18380:	sub	sp, sp, #0x30
   18384:	stp	x29, x30, [sp, #32]
   18388:	add	x29, sp, #0x20
   1838c:	stur	x0, [x29, #-8]
   18390:	str	xzr, [sp, #8]
   18394:	ldur	x0, [x29, #-8]
   18398:	bl	a8e0 <strlen@plt>
   1839c:	str	x0, [sp, #16]
   183a0:	ldr	x8, [sp, #16]
   183a4:	mov	x9, #0x1                   	// #1
   183a8:	mov	w10, #0x0                   	// #0
   183ac:	cmp	x9, x8
   183b0:	str	w10, [sp, #4]
   183b4:	b.cs	183d4 <base_len@@Base+0x54>  // b.hs, b.nlast
   183b8:	ldur	x8, [x29, #-8]
   183bc:	ldr	x9, [sp, #16]
   183c0:	subs	x9, x9, #0x1
   183c4:	ldrb	w10, [x8, x9]
   183c8:	cmp	w10, #0x2f
   183cc:	cset	w10, eq  // eq = none
   183d0:	str	w10, [sp, #4]
   183d4:	ldr	w8, [sp, #4]
   183d8:	tbnz	w8, #0, 183e0 <base_len@@Base+0x60>
   183dc:	b	183f0 <base_len@@Base+0x70>
   183e0:	ldr	x8, [sp, #16]
   183e4:	subs	x8, x8, #0x1
   183e8:	str	x8, [sp, #16]
   183ec:	b	183a0 <base_len@@Base+0x20>
   183f0:	ldr	x0, [sp, #16]
   183f4:	ldp	x29, x30, [sp, #32]
   183f8:	add	sp, sp, #0x30
   183fc:	ret

0000000000018400 <strip_trailing_slashes@@Base>:
   18400:	sub	sp, sp, #0x40
   18404:	stp	x29, x30, [sp, #48]
   18408:	add	x29, sp, #0x30
   1840c:	stur	x0, [x29, #-8]
   18410:	ldur	x0, [x29, #-8]
   18414:	bl	b130 <last_component@plt>
   18418:	stur	x0, [x29, #-16]
   1841c:	ldur	x8, [x29, #-16]
   18420:	ldrb	w9, [x8]
   18424:	cbnz	w9, 18430 <strip_trailing_slashes@@Base+0x30>
   18428:	ldur	x8, [x29, #-8]
   1842c:	stur	x8, [x29, #-16]
   18430:	ldur	x8, [x29, #-16]
   18434:	ldur	x0, [x29, #-16]
   18438:	str	x8, [sp, #8]
   1843c:	bl	b220 <base_len@plt>
   18440:	ldr	x8, [sp, #8]
   18444:	add	x9, x8, x0
   18448:	str	x9, [sp, #24]
   1844c:	ldr	x9, [sp, #24]
   18450:	ldrb	w10, [x9]
   18454:	cmp	w10, #0x0
   18458:	cset	w10, ne  // ne = any
   1845c:	mov	w11, #0x1                   	// #1
   18460:	and	w10, w10, w11
   18464:	strb	w10, [sp, #23]
   18468:	ldr	x9, [sp, #24]
   1846c:	mov	w10, #0x0                   	// #0
   18470:	strb	w10, [x9]
   18474:	ldrb	w10, [sp, #23]
   18478:	and	w0, w10, #0x1
   1847c:	ldp	x29, x30, [sp, #48]
   18480:	add	sp, sp, #0x40
   18484:	ret

0000000000018488 <fd_safer_flag@@Base>:
   18488:	sub	sp, sp, #0x30
   1848c:	stp	x29, x30, [sp, #32]
   18490:	add	x29, sp, #0x20
   18494:	mov	w8, wzr
   18498:	stur	w0, [x29, #-4]
   1849c:	stur	w1, [x29, #-8]
   184a0:	ldur	w9, [x29, #-4]
   184a4:	cmp	w8, w9
   184a8:	cset	w8, gt
   184ac:	tbnz	w8, #0, 184fc <fd_safer_flag@@Base+0x74>
   184b0:	ldur	w8, [x29, #-4]
   184b4:	cmp	w8, #0x2
   184b8:	b.gt	184fc <fd_safer_flag@@Base+0x74>
   184bc:	ldur	w0, [x29, #-4]
   184c0:	ldur	w1, [x29, #-8]
   184c4:	bl	b240 <dup_safer_flag@plt>
   184c8:	stur	w0, [x29, #-12]
   184cc:	bl	aa20 <__errno_location@plt>
   184d0:	ldr	w8, [x0]
   184d4:	str	w8, [sp, #16]
   184d8:	ldur	w0, [x29, #-4]
   184dc:	bl	ac30 <close@plt>
   184e0:	ldr	w8, [sp, #16]
   184e4:	str	w8, [sp, #12]
   184e8:	bl	aa20 <__errno_location@plt>
   184ec:	ldr	w8, [sp, #12]
   184f0:	str	w8, [x0]
   184f4:	ldur	w9, [x29, #-12]
   184f8:	stur	w9, [x29, #-4]
   184fc:	ldur	w0, [x29, #-4]
   18500:	ldp	x29, x30, [sp, #32]
   18504:	add	sp, sp, #0x30
   18508:	ret

000000000001850c <dup_safer_flag@@Base>:
   1850c:	sub	sp, sp, #0x20
   18510:	stp	x29, x30, [sp, #16]
   18514:	add	x29, sp, #0x10
   18518:	mov	w8, wzr
   1851c:	mov	w9, #0x406                 	// #1030
   18520:	mov	w2, #0x3                   	// #3
   18524:	stur	w0, [x29, #-4]
   18528:	str	w1, [sp, #8]
   1852c:	ldur	w0, [x29, #-4]
   18530:	ldr	w10, [sp, #8]
   18534:	tst	w10, #0x80000
   18538:	csel	w1, w9, w8, ne  // ne = any
   1853c:	bl	b200 <rpl_fcntl@plt>
   18540:	ldp	x29, x30, [sp, #16]
   18544:	add	sp, sp, #0x20
   18548:	ret

000000000001854c <record_file@@Base>:
   1854c:	sub	sp, sp, #0x40
   18550:	stp	x29, x30, [sp, #48]
   18554:	add	x29, sp, #0x30
   18558:	stur	x0, [x29, #-8]
   1855c:	stur	x1, [x29, #-16]
   18560:	str	x2, [sp, #24]
   18564:	ldur	x8, [x29, #-8]
   18568:	cbnz	x8, 18570 <record_file@@Base+0x24>
   1856c:	b	185e0 <record_file@@Base+0x94>
   18570:	mov	x0, #0x18                  	// #24
   18574:	bl	aca0 <xmalloc@plt>
   18578:	str	x0, [sp, #16]
   1857c:	ldur	x0, [x29, #-16]
   18580:	bl	aa70 <xstrdup@plt>
   18584:	ldr	x8, [sp, #16]
   18588:	str	x0, [x8]
   1858c:	ldr	x8, [sp, #24]
   18590:	ldr	x8, [x8, #8]
   18594:	ldr	x9, [sp, #16]
   18598:	str	x8, [x9, #8]
   1859c:	ldr	x8, [sp, #24]
   185a0:	ldr	x8, [x8]
   185a4:	ldr	x9, [sp, #16]
   185a8:	str	x8, [x9, #16]
   185ac:	ldur	x0, [x29, #-8]
   185b0:	ldr	x1, [sp, #16]
   185b4:	bl	b250 <hash_insert@plt>
   185b8:	str	x0, [sp, #8]
   185bc:	ldr	x8, [sp, #8]
   185c0:	cbnz	x8, 185c8 <record_file@@Base+0x7c>
   185c4:	bl	b1d0 <xalloc_die@plt>
   185c8:	ldr	x8, [sp, #8]
   185cc:	ldr	x9, [sp, #16]
   185d0:	cmp	x8, x9
   185d4:	b.eq	185e0 <record_file@@Base+0x94>  // b.none
   185d8:	ldr	x0, [sp, #16]
   185dc:	bl	b260 <triple_free@plt>
   185e0:	ldp	x29, x30, [sp, #48]
   185e4:	add	sp, sp, #0x40
   185e8:	ret

00000000000185ec <seen_file@@Base>:
   185ec:	sub	sp, sp, #0x50
   185f0:	stp	x29, x30, [sp, #64]
   185f4:	add	x29, sp, #0x40
   185f8:	stur	x0, [x29, #-16]
   185fc:	stur	x1, [x29, #-24]
   18600:	str	x2, [sp, #32]
   18604:	ldur	x8, [x29, #-16]
   18608:	cbnz	x8, 1861c <seen_file@@Base+0x30>
   1860c:	mov	w8, wzr
   18610:	and	w8, w8, #0x1
   18614:	sturb	w8, [x29, #-1]
   18618:	b	18664 <seen_file@@Base+0x78>
   1861c:	ldur	x8, [x29, #-24]
   18620:	add	x1, sp, #0x8
   18624:	str	x8, [sp, #8]
   18628:	ldr	x8, [sp, #32]
   1862c:	ldr	x8, [x8, #8]
   18630:	str	x8, [sp, #16]
   18634:	ldr	x8, [sp, #32]
   18638:	ldr	x8, [x8]
   1863c:	str	x8, [sp, #24]
   18640:	ldur	x0, [x29, #-16]
   18644:	bl	b270 <hash_lookup@plt>
   18648:	cmp	x0, #0x0
   1864c:	cset	w9, ne  // ne = any
   18650:	mov	w10, #0x1                   	// #1
   18654:	eor	w9, w9, #0x1
   18658:	eor	w9, w9, w10
   1865c:	and	w9, w9, w10
   18660:	sturb	w9, [x29, #-1]
   18664:	ldurb	w8, [x29, #-1]
   18668:	and	w0, w8, #0x1
   1866c:	ldp	x29, x30, [sp, #64]
   18670:	add	sp, sp, #0x50
   18674:	ret

0000000000018678 <mfile_name_concat@@Base>:
   18678:	sub	sp, sp, #0x90
   1867c:	stp	x29, x30, [sp, #128]
   18680:	add	x29, sp, #0x80
   18684:	mov	w8, #0x0                   	// #0
   18688:	stur	x0, [x29, #-16]
   1868c:	stur	x1, [x29, #-24]
   18690:	stur	x2, [x29, #-32]
   18694:	ldur	x0, [x29, #-16]
   18698:	str	w8, [sp, #36]
   1869c:	bl	b130 <last_component@plt>
   186a0:	stur	x0, [x29, #-40]
   186a4:	ldur	x0, [x29, #-40]
   186a8:	bl	b220 <base_len@plt>
   186ac:	stur	x0, [x29, #-48]
   186b0:	ldur	x9, [x29, #-40]
   186b4:	ldur	x10, [x29, #-16]
   186b8:	subs	x9, x9, x10
   186bc:	ldur	x10, [x29, #-48]
   186c0:	add	x9, x9, x10
   186c4:	stur	x9, [x29, #-56]
   186c8:	ldur	x0, [x29, #-24]
   186cc:	bl	a8e0 <strlen@plt>
   186d0:	str	x0, [sp, #64]
   186d4:	ldr	w8, [sp, #36]
   186d8:	strb	w8, [sp, #63]
   186dc:	ldur	x9, [x29, #-48]
   186e0:	cbz	x9, 18718 <mfile_name_concat@@Base+0xa0>
   186e4:	ldur	x8, [x29, #-16]
   186e8:	ldur	x9, [x29, #-56]
   186ec:	subs	x9, x9, #0x1
   186f0:	ldrb	w10, [x8, x9]
   186f4:	cmp	w10, #0x2f
   186f8:	b.eq	18714 <mfile_name_concat@@Base+0x9c>  // b.none
   186fc:	ldur	x8, [x29, #-24]
   18700:	ldrb	w9, [x8]
   18704:	cmp	w9, #0x2f
   18708:	b.eq	18714 <mfile_name_concat@@Base+0x9c>  // b.none
   1870c:	mov	w8, #0x2f                  	// #47
   18710:	strb	w8, [sp, #63]
   18714:	b	18730 <mfile_name_concat@@Base+0xb8>
   18718:	ldur	x8, [x29, #-24]
   1871c:	ldrb	w9, [x8]
   18720:	cmp	w9, #0x2f
   18724:	b.ne	18730 <mfile_name_concat@@Base+0xb8>  // b.any
   18728:	mov	w8, #0x2e                  	// #46
   1872c:	strb	w8, [sp, #63]
   18730:	ldur	x8, [x29, #-56]
   18734:	ldrb	w9, [sp, #63]
   18738:	cmp	w9, #0x0
   1873c:	cset	w9, ne  // ne = any
   18740:	and	w9, w9, #0x1
   18744:	add	x8, x8, w9, sxtw
   18748:	ldr	x10, [sp, #64]
   1874c:	add	x8, x8, x10
   18750:	add	x0, x8, #0x1
   18754:	bl	af10 <malloc@plt>
   18758:	str	x0, [sp, #48]
   1875c:	ldr	x8, [sp, #48]
   18760:	cbnz	x8, 18770 <mfile_name_concat@@Base+0xf8>
   18764:	mov	x8, xzr
   18768:	stur	x8, [x29, #-8]
   1876c:	b	18828 <mfile_name_concat@@Base+0x1b0>
   18770:	ldr	x8, [sp, #48]
   18774:	ldur	x1, [x29, #-16]
   18778:	ldur	x9, [x29, #-56]
   1877c:	mov	x0, x8
   18780:	mov	x2, x9
   18784:	str	x8, [sp, #24]
   18788:	str	x9, [sp, #16]
   1878c:	bl	af30 <memcpy@plt>
   18790:	ldr	x8, [sp, #24]
   18794:	ldr	x9, [sp, #16]
   18798:	add	x10, x8, x9
   1879c:	str	x10, [sp, #40]
   187a0:	ldrb	w11, [sp, #63]
   187a4:	ldr	x10, [sp, #40]
   187a8:	strb	w11, [x10]
   187ac:	ldrb	w11, [sp, #63]
   187b0:	cmp	w11, #0x0
   187b4:	cset	w11, ne  // ne = any
   187b8:	and	w11, w11, #0x1
   187bc:	ldr	x10, [sp, #40]
   187c0:	mov	w0, w11
   187c4:	sxtw	x12, w0
   187c8:	add	x10, x10, x12
   187cc:	str	x10, [sp, #40]
   187d0:	ldur	x10, [x29, #-32]
   187d4:	cbz	x10, 187e4 <mfile_name_concat@@Base+0x16c>
   187d8:	ldr	x8, [sp, #40]
   187dc:	ldur	x9, [x29, #-32]
   187e0:	str	x8, [x9]
   187e4:	ldr	x8, [sp, #40]
   187e8:	ldur	x1, [x29, #-24]
   187ec:	ldr	x9, [sp, #64]
   187f0:	mov	x0, x8
   187f4:	mov	x2, x9
   187f8:	str	x8, [sp, #8]
   187fc:	str	x9, [sp]
   18800:	bl	af30 <memcpy@plt>
   18804:	ldr	x8, [sp, #8]
   18808:	ldr	x9, [sp]
   1880c:	add	x10, x8, x9
   18810:	str	x10, [sp, #40]
   18814:	ldr	x10, [sp, #40]
   18818:	mov	w11, #0x0                   	// #0
   1881c:	strb	w11, [x10]
   18820:	ldr	x10, [sp, #48]
   18824:	stur	x10, [x29, #-8]
   18828:	ldur	x0, [x29, #-8]
   1882c:	ldp	x29, x30, [sp, #128]
   18830:	add	sp, sp, #0x90
   18834:	ret

0000000000018838 <getprogname@@Base>:
   18838:	adrp	x8, 5f000 <vasnprintf@@Base+0x1ce4c>
   1883c:	ldr	x8, [x8, #3928]
   18840:	ldr	x0, [x8]
   18844:	ret

0000000000018848 <gettime@@Base>:
   18848:	sub	sp, sp, #0x20
   1884c:	stp	x29, x30, [sp, #16]
   18850:	add	x29, sp, #0x10
   18854:	mov	w8, wzr
   18858:	str	x0, [sp, #8]
   1885c:	ldr	x1, [sp, #8]
   18860:	mov	w0, w8
   18864:	bl	b280 <clock_gettime@plt>
   18868:	ldp	x29, x30, [sp, #16]
   1886c:	add	sp, sp, #0x20
   18870:	ret

0000000000018874 <current_timespec@@Base>:
   18874:	sub	sp, sp, #0x20
   18878:	stp	x29, x30, [sp, #16]
   1887c:	add	x29, sp, #0x10
   18880:	mov	x0, sp
   18884:	bl	b290 <gettime@plt>
   18888:	ldr	x0, [sp]
   1888c:	ldr	x1, [sp, #8]
   18890:	ldp	x29, x30, [sp, #16]
   18894:	add	sp, sp, #0x20
   18898:	ret

000000000001889c <hard_locale@@Base>:
   1889c:	sub	sp, sp, #0x20
   188a0:	stp	x29, x30, [sp, #16]
   188a4:	add	x29, sp, #0x10
   188a8:	mov	w8, #0x1                   	// #1
   188ac:	mov	x9, xzr
   188b0:	stur	w0, [x29, #-4]
   188b4:	sturb	w8, [x29, #-5]
   188b8:	ldur	w0, [x29, #-4]
   188bc:	mov	x1, x9
   188c0:	bl	aa60 <setlocale@plt>
   188c4:	str	x0, [sp]
   188c8:	ldr	x9, [sp]
   188cc:	cbz	x9, 18900 <hard_locale@@Base+0x64>
   188d0:	ldr	x0, [sp]
   188d4:	adrp	x1, 44000 <vasnprintf@@Base+0x1e4c>
   188d8:	add	x1, x1, #0x63b
   188dc:	bl	aa00 <strcmp@plt>
   188e0:	cbz	w0, 188f8 <hard_locale@@Base+0x5c>
   188e4:	ldr	x0, [sp]
   188e8:	adrp	x1, 44000 <vasnprintf@@Base+0x1e4c>
   188ec:	add	x1, x1, #0x648
   188f0:	bl	aa00 <strcmp@plt>
   188f4:	cbnz	w0, 18900 <hard_locale@@Base+0x64>
   188f8:	mov	w8, #0x0                   	// #0
   188fc:	sturb	w8, [x29, #-5]
   18900:	ldurb	w8, [x29, #-5]
   18904:	and	w0, w8, #0x1
   18908:	ldp	x29, x30, [sp, #16]
   1890c:	add	sp, sp, #0x20
   18910:	ret

0000000000018914 <hash_get_n_buckets@@Base>:
   18914:	sub	sp, sp, #0x10
   18918:	str	x0, [sp, #8]
   1891c:	ldr	x8, [sp, #8]
   18920:	ldr	x0, [x8, #16]
   18924:	add	sp, sp, #0x10
   18928:	ret

000000000001892c <hash_get_n_buckets_used@@Base>:
   1892c:	sub	sp, sp, #0x10
   18930:	str	x0, [sp, #8]
   18934:	ldr	x8, [sp, #8]
   18938:	ldr	x0, [x8, #24]
   1893c:	add	sp, sp, #0x10
   18940:	ret

0000000000018944 <hash_get_n_entries@@Base>:
   18944:	sub	sp, sp, #0x10
   18948:	str	x0, [sp, #8]
   1894c:	ldr	x8, [sp, #8]
   18950:	ldr	x0, [x8, #32]
   18954:	add	sp, sp, #0x10
   18958:	ret

000000000001895c <hash_get_max_bucket_length@@Base>:
   1895c:	sub	sp, sp, #0x30
   18960:	str	x0, [sp, #40]
   18964:	str	xzr, [sp, #24]
   18968:	ldr	x8, [sp, #40]
   1896c:	ldr	x8, [x8]
   18970:	str	x8, [sp, #32]
   18974:	ldr	x8, [sp, #32]
   18978:	ldr	x9, [sp, #40]
   1897c:	ldr	x9, [x9, #8]
   18980:	cmp	x8, x9
   18984:	b.cs	189f0 <hash_get_max_bucket_length@@Base+0x94>  // b.hs, b.nlast
   18988:	ldr	x8, [sp, #32]
   1898c:	ldr	x8, [x8]
   18990:	cbz	x8, 189e0 <hash_get_max_bucket_length@@Base+0x84>
   18994:	ldr	x8, [sp, #32]
   18998:	str	x8, [sp, #16]
   1899c:	mov	x8, #0x1                   	// #1
   189a0:	str	x8, [sp, #8]
   189a4:	ldr	x8, [sp, #16]
   189a8:	ldr	x8, [x8, #8]
   189ac:	str	x8, [sp, #16]
   189b0:	ldr	x8, [sp, #16]
   189b4:	cbz	x8, 189c8 <hash_get_max_bucket_length@@Base+0x6c>
   189b8:	ldr	x8, [sp, #8]
   189bc:	add	x8, x8, #0x1
   189c0:	str	x8, [sp, #8]
   189c4:	b	189a4 <hash_get_max_bucket_length@@Base+0x48>
   189c8:	ldr	x8, [sp, #8]
   189cc:	ldr	x9, [sp, #24]
   189d0:	cmp	x8, x9
   189d4:	b.ls	189e0 <hash_get_max_bucket_length@@Base+0x84>  // b.plast
   189d8:	ldr	x8, [sp, #8]
   189dc:	str	x8, [sp, #24]
   189e0:	ldr	x8, [sp, #32]
   189e4:	add	x8, x8, #0x10
   189e8:	str	x8, [sp, #32]
   189ec:	b	18974 <hash_get_max_bucket_length@@Base+0x18>
   189f0:	ldr	x0, [sp, #24]
   189f4:	add	sp, sp, #0x30
   189f8:	ret

00000000000189fc <hash_table_ok@@Base>:
   189fc:	sub	sp, sp, #0x30
   18a00:	str	x0, [sp, #32]
   18a04:	str	xzr, [sp, #16]
   18a08:	str	xzr, [sp, #8]
   18a0c:	ldr	x8, [sp, #32]
   18a10:	ldr	x8, [x8]
   18a14:	str	x8, [sp, #24]
   18a18:	ldr	x8, [sp, #24]
   18a1c:	ldr	x9, [sp, #32]
   18a20:	ldr	x9, [x9, #8]
   18a24:	cmp	x8, x9
   18a28:	b.cs	18a8c <hash_table_ok@@Base+0x90>  // b.hs, b.nlast
   18a2c:	ldr	x8, [sp, #24]
   18a30:	ldr	x8, [x8]
   18a34:	cbz	x8, 18a7c <hash_table_ok@@Base+0x80>
   18a38:	ldr	x8, [sp, #24]
   18a3c:	str	x8, [sp]
   18a40:	ldr	x8, [sp, #16]
   18a44:	add	x8, x8, #0x1
   18a48:	str	x8, [sp, #16]
   18a4c:	ldr	x8, [sp, #8]
   18a50:	add	x8, x8, #0x1
   18a54:	str	x8, [sp, #8]
   18a58:	ldr	x8, [sp]
   18a5c:	ldr	x8, [x8, #8]
   18a60:	str	x8, [sp]
   18a64:	ldr	x8, [sp]
   18a68:	cbz	x8, 18a7c <hash_table_ok@@Base+0x80>
   18a6c:	ldr	x8, [sp, #8]
   18a70:	add	x8, x8, #0x1
   18a74:	str	x8, [sp, #8]
   18a78:	b	18a58 <hash_table_ok@@Base+0x5c>
   18a7c:	ldr	x8, [sp, #24]
   18a80:	add	x8, x8, #0x10
   18a84:	str	x8, [sp, #24]
   18a88:	b	18a18 <hash_table_ok@@Base+0x1c>
   18a8c:	ldr	x8, [sp, #16]
   18a90:	ldr	x9, [sp, #32]
   18a94:	ldr	x9, [x9, #24]
   18a98:	cmp	x8, x9
   18a9c:	b.ne	18ac4 <hash_table_ok@@Base+0xc8>  // b.any
   18aa0:	ldr	x8, [sp, #8]
   18aa4:	ldr	x9, [sp, #32]
   18aa8:	ldr	x9, [x9, #32]
   18aac:	cmp	x8, x9
   18ab0:	b.ne	18ac4 <hash_table_ok@@Base+0xc8>  // b.any
   18ab4:	mov	w8, #0x1                   	// #1
   18ab8:	and	w8, w8, #0x1
   18abc:	strb	w8, [sp, #47]
   18ac0:	b	18ad0 <hash_table_ok@@Base+0xd4>
   18ac4:	mov	w8, wzr
   18ac8:	and	w8, w8, #0x1
   18acc:	strb	w8, [sp, #47]
   18ad0:	ldrb	w8, [sp, #47]
   18ad4:	and	w0, w8, #0x1
   18ad8:	add	sp, sp, #0x30
   18adc:	ret

0000000000018ae0 <hash_print_statistics@@Base>:
   18ae0:	sub	sp, sp, #0x70
   18ae4:	stp	x29, x30, [sp, #96]
   18ae8:	add	x29, sp, #0x60
   18aec:	adrp	x8, 45000 <vasnprintf@@Base+0x2e4c>
   18af0:	add	x8, x8, #0x21b
   18af4:	adrp	x9, 45000 <vasnprintf@@Base+0x2e4c>
   18af8:	add	x9, x9, #0x233
   18afc:	mov	x10, #0x4059000000000000    	// #4636737291354636288
   18b00:	fmov	d0, x10
   18b04:	adrp	x10, 45000 <vasnprintf@@Base+0x2e4c>
   18b08:	add	x10, x10, #0x24b
   18b0c:	adrp	x11, 45000 <vasnprintf@@Base+0x2e4c>
   18b10:	add	x11, x11, #0x26c
   18b14:	stur	x0, [x29, #-8]
   18b18:	stur	x1, [x29, #-16]
   18b1c:	ldur	x0, [x29, #-8]
   18b20:	str	x8, [sp, #40]
   18b24:	str	x9, [sp, #32]
   18b28:	str	d0, [sp, #24]
   18b2c:	str	x10, [sp, #16]
   18b30:	str	x11, [sp, #8]
   18b34:	bl	b2a0 <hash_get_n_entries@plt>
   18b38:	stur	x0, [x29, #-24]
   18b3c:	ldur	x0, [x29, #-8]
   18b40:	bl	b2b0 <hash_get_n_buckets@plt>
   18b44:	stur	x0, [x29, #-32]
   18b48:	ldur	x0, [x29, #-8]
   18b4c:	bl	b2c0 <hash_get_n_buckets_used@plt>
   18b50:	stur	x0, [x29, #-40]
   18b54:	ldur	x0, [x29, #-8]
   18b58:	bl	b2d0 <hash_get_max_bucket_length@plt>
   18b5c:	str	x0, [sp, #48]
   18b60:	ldur	x0, [x29, #-16]
   18b64:	ldur	x2, [x29, #-24]
   18b68:	ldr	x1, [sp, #40]
   18b6c:	bl	b160 <fprintf@plt>
   18b70:	ldur	x8, [x29, #-16]
   18b74:	ldur	x2, [x29, #-32]
   18b78:	mov	x0, x8
   18b7c:	ldr	x1, [sp, #32]
   18b80:	bl	b160 <fprintf@plt>
   18b84:	ldur	x8, [x29, #-16]
   18b88:	ldur	x2, [x29, #-40]
   18b8c:	ldur	x9, [x29, #-40]
   18b90:	ucvtf	d0, x9
   18b94:	ldr	d1, [sp, #24]
   18b98:	fmul	d0, d1, d0
   18b9c:	ldur	x9, [x29, #-32]
   18ba0:	ucvtf	d2, x9
   18ba4:	fdiv	d0, d0, d2
   18ba8:	mov	x0, x8
   18bac:	ldr	x1, [sp, #16]
   18bb0:	bl	b160 <fprintf@plt>
   18bb4:	ldur	x8, [x29, #-16]
   18bb8:	ldr	x2, [sp, #48]
   18bbc:	mov	x0, x8
   18bc0:	ldr	x1, [sp, #8]
   18bc4:	bl	b160 <fprintf@plt>
   18bc8:	ldp	x29, x30, [sp, #96]
   18bcc:	add	sp, sp, #0x70
   18bd0:	ret

0000000000018bd4 <hash_lookup@@Base>:
   18bd4:	sub	sp, sp, #0x40
   18bd8:	stp	x29, x30, [sp, #48]
   18bdc:	add	x29, sp, #0x30
   18be0:	stur	x0, [x29, #-16]
   18be4:	str	x1, [sp, #24]
   18be8:	ldur	x0, [x29, #-16]
   18bec:	ldr	x1, [sp, #24]
   18bf0:	bl	18c8c <hash_lookup@@Base+0xb8>
   18bf4:	str	x0, [sp, #16]
   18bf8:	ldr	x8, [sp, #16]
   18bfc:	ldr	x8, [x8]
   18c00:	cbnz	x8, 18c10 <hash_lookup@@Base+0x3c>
   18c04:	mov	x8, xzr
   18c08:	stur	x8, [x29, #-8]
   18c0c:	b	18c7c <hash_lookup@@Base+0xa8>
   18c10:	ldr	x8, [sp, #16]
   18c14:	str	x8, [sp, #8]
   18c18:	ldr	x8, [sp, #8]
   18c1c:	cbz	x8, 18c74 <hash_lookup@@Base+0xa0>
   18c20:	ldr	x8, [sp, #24]
   18c24:	ldr	x9, [sp, #8]
   18c28:	ldr	x9, [x9]
   18c2c:	cmp	x8, x9
   18c30:	b.eq	18c54 <hash_lookup@@Base+0x80>  // b.none
   18c34:	ldur	x8, [x29, #-16]
   18c38:	ldr	x8, [x8, #56]
   18c3c:	ldr	x0, [sp, #24]
   18c40:	ldr	x9, [sp, #8]
   18c44:	ldr	x1, [x9]
   18c48:	blr	x8
   18c4c:	tbnz	w0, #0, 18c54 <hash_lookup@@Base+0x80>
   18c50:	b	18c64 <hash_lookup@@Base+0x90>
   18c54:	ldr	x8, [sp, #8]
   18c58:	ldr	x8, [x8]
   18c5c:	stur	x8, [x29, #-8]
   18c60:	b	18c7c <hash_lookup@@Base+0xa8>
   18c64:	ldr	x8, [sp, #8]
   18c68:	ldr	x8, [x8, #8]
   18c6c:	str	x8, [sp, #8]
   18c70:	b	18c18 <hash_lookup@@Base+0x44>
   18c74:	mov	x8, xzr
   18c78:	stur	x8, [x29, #-8]
   18c7c:	ldur	x0, [x29, #-8]
   18c80:	ldp	x29, x30, [sp, #48]
   18c84:	add	sp, sp, #0x40
   18c88:	ret
   18c8c:	sub	sp, sp, #0x30
   18c90:	stp	x29, x30, [sp, #32]
   18c94:	add	x29, sp, #0x20
   18c98:	stur	x0, [x29, #-8]
   18c9c:	str	x1, [sp, #16]
   18ca0:	ldur	x8, [x29, #-8]
   18ca4:	ldr	x8, [x8, #48]
   18ca8:	ldr	x0, [sp, #16]
   18cac:	ldur	x9, [x29, #-8]
   18cb0:	ldr	x1, [x9, #16]
   18cb4:	blr	x8
   18cb8:	str	x0, [sp, #8]
   18cbc:	ldr	x8, [sp, #8]
   18cc0:	ldur	x9, [x29, #-8]
   18cc4:	ldr	x9, [x9, #16]
   18cc8:	cmp	x8, x9
   18ccc:	b.cc	18cd4 <hash_lookup@@Base+0x100>  // b.lo, b.ul, b.last
   18cd0:	bl	a9e0 <abort@plt>
   18cd4:	ldur	x8, [x29, #-8]
   18cd8:	ldr	x8, [x8]
   18cdc:	ldr	x9, [sp, #8]
   18ce0:	mov	x10, #0x10                  	// #16
   18ce4:	mul	x9, x10, x9
   18ce8:	add	x0, x8, x9
   18cec:	ldp	x29, x30, [sp, #32]
   18cf0:	add	sp, sp, #0x30
   18cf4:	ret

0000000000018cf8 <hash_get_first@@Base>:
   18cf8:	sub	sp, sp, #0x30
   18cfc:	stp	x29, x30, [sp, #32]
   18d00:	add	x29, sp, #0x20
   18d04:	str	x0, [sp, #16]
   18d08:	ldr	x8, [sp, #16]
   18d0c:	ldr	x8, [x8, #32]
   18d10:	cbnz	x8, 18d20 <hash_get_first@@Base+0x28>
   18d14:	mov	x8, xzr
   18d18:	stur	x8, [x29, #-8]
   18d1c:	b	18d70 <hash_get_first@@Base+0x78>
   18d20:	ldr	x8, [sp, #16]
   18d24:	ldr	x8, [x8]
   18d28:	str	x8, [sp, #8]
   18d2c:	ldr	x8, [sp, #8]
   18d30:	ldr	x9, [sp, #16]
   18d34:	ldr	x9, [x9, #8]
   18d38:	cmp	x8, x9
   18d3c:	b.cc	18d44 <hash_get_first@@Base+0x4c>  // b.lo, b.ul, b.last
   18d40:	bl	a9e0 <abort@plt>
   18d44:	ldr	x8, [sp, #8]
   18d48:	ldr	x8, [x8]
   18d4c:	cbz	x8, 18d60 <hash_get_first@@Base+0x68>
   18d50:	ldr	x8, [sp, #8]
   18d54:	ldr	x8, [x8]
   18d58:	stur	x8, [x29, #-8]
   18d5c:	b	18d70 <hash_get_first@@Base+0x78>
   18d60:	ldr	x8, [sp, #8]
   18d64:	add	x8, x8, #0x10
   18d68:	str	x8, [sp, #8]
   18d6c:	b	18d2c <hash_get_first@@Base+0x34>
   18d70:	ldur	x0, [x29, #-8]
   18d74:	ldp	x29, x30, [sp, #32]
   18d78:	add	sp, sp, #0x30
   18d7c:	ret

0000000000018d80 <hash_get_next@@Base>:
   18d80:	sub	sp, sp, #0x40
   18d84:	stp	x29, x30, [sp, #48]
   18d88:	add	x29, sp, #0x30
   18d8c:	stur	x0, [x29, #-16]
   18d90:	str	x1, [sp, #24]
   18d94:	ldur	x0, [x29, #-16]
   18d98:	ldr	x1, [sp, #24]
   18d9c:	bl	18c8c <hash_lookup@@Base+0xb8>
   18da0:	str	x0, [sp, #16]
   18da4:	ldr	x8, [sp, #16]
   18da8:	str	x8, [sp, #8]
   18dac:	ldr	x8, [sp, #8]
   18db0:	ldr	x8, [x8]
   18db4:	ldr	x9, [sp, #24]
   18db8:	cmp	x8, x9
   18dbc:	b.ne	18de0 <hash_get_next@@Base+0x60>  // b.any
   18dc0:	ldr	x8, [sp, #8]
   18dc4:	ldr	x8, [x8, #8]
   18dc8:	cbz	x8, 18de0 <hash_get_next@@Base+0x60>
   18dcc:	ldr	x8, [sp, #8]
   18dd0:	ldr	x8, [x8, #8]
   18dd4:	ldr	x8, [x8]
   18dd8:	stur	x8, [x29, #-8]
   18ddc:	b	18e38 <hash_get_next@@Base+0xb8>
   18de0:	ldr	x8, [sp, #8]
   18de4:	ldr	x8, [x8, #8]
   18de8:	str	x8, [sp, #8]
   18dec:	ldr	x8, [sp, #8]
   18df0:	cbnz	x8, 18dac <hash_get_next@@Base+0x2c>
   18df4:	ldr	x8, [sp, #16]
   18df8:	add	x8, x8, #0x10
   18dfc:	str	x8, [sp, #16]
   18e00:	ldur	x9, [x29, #-16]
   18e04:	ldr	x9, [x9, #8]
   18e08:	cmp	x8, x9
   18e0c:	b.cs	18e30 <hash_get_next@@Base+0xb0>  // b.hs, b.nlast
   18e10:	ldr	x8, [sp, #16]
   18e14:	ldr	x8, [x8]
   18e18:	cbz	x8, 18e2c <hash_get_next@@Base+0xac>
   18e1c:	ldr	x8, [sp, #16]
   18e20:	ldr	x8, [x8]
   18e24:	stur	x8, [x29, #-8]
   18e28:	b	18e38 <hash_get_next@@Base+0xb8>
   18e2c:	b	18df4 <hash_get_next@@Base+0x74>
   18e30:	mov	x8, xzr
   18e34:	stur	x8, [x29, #-8]
   18e38:	ldur	x0, [x29, #-8]
   18e3c:	ldp	x29, x30, [sp, #48]
   18e40:	add	sp, sp, #0x40
   18e44:	ret

0000000000018e48 <hash_get_entries@@Base>:
   18e48:	sub	sp, sp, #0x40
   18e4c:	str	x0, [sp, #48]
   18e50:	str	x1, [sp, #40]
   18e54:	str	x2, [sp, #32]
   18e58:	str	xzr, [sp, #24]
   18e5c:	ldr	x8, [sp, #48]
   18e60:	ldr	x8, [x8]
   18e64:	str	x8, [sp, #16]
   18e68:	ldr	x8, [sp, #16]
   18e6c:	ldr	x9, [sp, #48]
   18e70:	ldr	x9, [x9, #8]
   18e74:	cmp	x8, x9
   18e78:	b.cs	18efc <hash_get_entries@@Base+0xb4>  // b.hs, b.nlast
   18e7c:	ldr	x8, [sp, #16]
   18e80:	ldr	x8, [x8]
   18e84:	cbz	x8, 18eec <hash_get_entries@@Base+0xa4>
   18e88:	ldr	x8, [sp, #16]
   18e8c:	str	x8, [sp, #8]
   18e90:	ldr	x8, [sp, #8]
   18e94:	cbz	x8, 18eec <hash_get_entries@@Base+0xa4>
   18e98:	ldr	x8, [sp, #24]
   18e9c:	ldr	x9, [sp, #32]
   18ea0:	cmp	x8, x9
   18ea4:	b.cc	18eb4 <hash_get_entries@@Base+0x6c>  // b.lo, b.ul, b.last
   18ea8:	ldr	x8, [sp, #24]
   18eac:	str	x8, [sp, #56]
   18eb0:	b	18f04 <hash_get_entries@@Base+0xbc>
   18eb4:	ldr	x8, [sp, #8]
   18eb8:	ldr	x8, [x8]
   18ebc:	ldr	x9, [sp, #40]
   18ec0:	ldr	x10, [sp, #24]
   18ec4:	add	x11, x10, #0x1
   18ec8:	str	x11, [sp, #24]
   18ecc:	mov	x11, #0x8                   	// #8
   18ed0:	mul	x10, x11, x10
   18ed4:	add	x9, x9, x10
   18ed8:	str	x8, [x9]
   18edc:	ldr	x8, [sp, #8]
   18ee0:	ldr	x8, [x8, #8]
   18ee4:	str	x8, [sp, #8]
   18ee8:	b	18e90 <hash_get_entries@@Base+0x48>
   18eec:	ldr	x8, [sp, #16]
   18ef0:	add	x8, x8, #0x10
   18ef4:	str	x8, [sp, #16]
   18ef8:	b	18e68 <hash_get_entries@@Base+0x20>
   18efc:	ldr	x8, [sp, #24]
   18f00:	str	x8, [sp, #56]
   18f04:	ldr	x0, [sp, #56]
   18f08:	add	sp, sp, #0x40
   18f0c:	ret

0000000000018f10 <hash_do_for_each@@Base>:
   18f10:	sub	sp, sp, #0x50
   18f14:	stp	x29, x30, [sp, #64]
   18f18:	add	x29, sp, #0x40
   18f1c:	stur	x0, [x29, #-16]
   18f20:	stur	x1, [x29, #-24]
   18f24:	str	x2, [sp, #32]
   18f28:	str	xzr, [sp, #24]
   18f2c:	ldur	x8, [x29, #-16]
   18f30:	ldr	x8, [x8]
   18f34:	str	x8, [sp, #16]
   18f38:	ldr	x8, [sp, #16]
   18f3c:	ldur	x9, [x29, #-16]
   18f40:	ldr	x9, [x9, #8]
   18f44:	cmp	x8, x9
   18f48:	b.cs	18fb8 <hash_do_for_each@@Base+0xa8>  // b.hs, b.nlast
   18f4c:	ldr	x8, [sp, #16]
   18f50:	ldr	x8, [x8]
   18f54:	cbz	x8, 18fa8 <hash_do_for_each@@Base+0x98>
   18f58:	ldr	x8, [sp, #16]
   18f5c:	str	x8, [sp, #8]
   18f60:	ldr	x8, [sp, #8]
   18f64:	cbz	x8, 18fa8 <hash_do_for_each@@Base+0x98>
   18f68:	ldur	x8, [x29, #-24]
   18f6c:	ldr	x9, [sp, #8]
   18f70:	ldr	x0, [x9]
   18f74:	ldr	x1, [sp, #32]
   18f78:	blr	x8
   18f7c:	tbnz	w0, #0, 18f8c <hash_do_for_each@@Base+0x7c>
   18f80:	ldr	x8, [sp, #24]
   18f84:	stur	x8, [x29, #-8]
   18f88:	b	18fc0 <hash_do_for_each@@Base+0xb0>
   18f8c:	ldr	x8, [sp, #24]
   18f90:	add	x8, x8, #0x1
   18f94:	str	x8, [sp, #24]
   18f98:	ldr	x8, [sp, #8]
   18f9c:	ldr	x8, [x8, #8]
   18fa0:	str	x8, [sp, #8]
   18fa4:	b	18f60 <hash_do_for_each@@Base+0x50>
   18fa8:	ldr	x8, [sp, #16]
   18fac:	add	x8, x8, #0x10
   18fb0:	str	x8, [sp, #16]
   18fb4:	b	18f38 <hash_do_for_each@@Base+0x28>
   18fb8:	ldr	x8, [sp, #24]
   18fbc:	stur	x8, [x29, #-8]
   18fc0:	ldur	x0, [x29, #-8]
   18fc4:	ldp	x29, x30, [sp, #64]
   18fc8:	add	sp, sp, #0x50
   18fcc:	ret

0000000000018fd0 <hash_string@@Base>:
   18fd0:	sub	sp, sp, #0x20
   18fd4:	str	x0, [sp, #24]
   18fd8:	str	x1, [sp, #16]
   18fdc:	str	xzr, [sp, #8]
   18fe0:	ldr	x8, [sp, #24]
   18fe4:	ldrb	w9, [x8]
   18fe8:	strb	w9, [sp, #7]
   18fec:	cbz	w9, 1902c <hash_string@@Base+0x5c>
   18ff0:	ldr	x8, [sp, #8]
   18ff4:	mov	x9, #0x1f                  	// #31
   18ff8:	mul	x8, x8, x9
   18ffc:	ldrb	w10, [sp, #7]
   19000:	mov	w9, w10
   19004:	add	x8, x8, x9
   19008:	ldr	x9, [sp, #16]
   1900c:	udiv	x11, x8, x9
   19010:	mul	x9, x11, x9
   19014:	subs	x8, x8, x9
   19018:	str	x8, [sp, #8]
   1901c:	ldr	x8, [sp, #24]
   19020:	add	x8, x8, #0x1
   19024:	str	x8, [sp, #24]
   19028:	b	18fe0 <hash_string@@Base+0x10>
   1902c:	ldr	x0, [sp, #8]
   19030:	add	sp, sp, #0x20
   19034:	ret

0000000000019038 <hash_reset_tuning@@Base>:
   19038:	sub	sp, sp, #0x10
   1903c:	adrp	x8, 45000 <vasnprintf@@Base+0x2e4c>
   19040:	add	x8, x8, #0x9a4
   19044:	str	x0, [sp, #8]
   19048:	ldr	x9, [sp, #8]
   1904c:	ldr	q0, [x8]
   19050:	str	q0, [x9]
   19054:	ldr	w10, [x8, #16]
   19058:	str	w10, [x9, #16]
   1905c:	add	sp, sp, #0x10
   19060:	ret

0000000000019064 <hash_initialize@@Base>:
   19064:	sub	sp, sp, #0x50
   19068:	stp	x29, x30, [sp, #64]
   1906c:	add	x29, sp, #0x40
   19070:	stur	x0, [x29, #-16]
   19074:	stur	x1, [x29, #-24]
   19078:	str	x2, [sp, #32]
   1907c:	str	x3, [sp, #24]
   19080:	str	x4, [sp, #16]
   19084:	ldr	x8, [sp, #32]
   19088:	cbnz	x8, 19098 <hash_initialize@@Base+0x34>
   1908c:	adrp	x8, 19000 <hash_string@@Base+0x30>
   19090:	add	x8, x8, #0x1d8
   19094:	str	x8, [sp, #32]
   19098:	ldr	x8, [sp, #24]
   1909c:	cbnz	x8, 190ac <hash_initialize@@Base+0x48>
   190a0:	adrp	x8, 19000 <hash_string@@Base+0x30>
   190a4:	add	x8, x8, #0x220
   190a8:	str	x8, [sp, #24]
   190ac:	mov	x0, #0x50                  	// #80
   190b0:	bl	af10 <malloc@plt>
   190b4:	str	x0, [sp, #8]
   190b8:	ldr	x8, [sp, #8]
   190bc:	cbnz	x8, 190cc <hash_initialize@@Base+0x68>
   190c0:	mov	x8, xzr
   190c4:	stur	x8, [x29, #-8]
   190c8:	b	191c8 <hash_initialize@@Base+0x164>
   190cc:	ldur	x8, [x29, #-24]
   190d0:	cbnz	x8, 190e0 <hash_initialize@@Base+0x7c>
   190d4:	adrp	x8, 45000 <vasnprintf@@Base+0x2e4c>
   190d8:	add	x8, x8, #0x9a4
   190dc:	stur	x8, [x29, #-24]
   190e0:	ldur	x8, [x29, #-24]
   190e4:	ldr	x9, [sp, #8]
   190e8:	str	x8, [x9, #40]
   190ec:	ldr	x0, [sp, #8]
   190f0:	bl	19248 <hash_initialize@@Base+0x1e4>
   190f4:	tbnz	w0, #0, 190fc <hash_initialize@@Base+0x98>
   190f8:	b	191b8 <hash_initialize@@Base+0x154>
   190fc:	ldur	x0, [x29, #-16]
   19100:	ldur	x1, [x29, #-24]
   19104:	bl	193b8 <hash_initialize@@Base+0x354>
   19108:	ldr	x8, [sp, #8]
   1910c:	str	x0, [x8, #16]
   19110:	ldr	x8, [sp, #8]
   19114:	ldr	x8, [x8, #16]
   19118:	cbnz	x8, 19120 <hash_initialize@@Base+0xbc>
   1911c:	b	191b8 <hash_initialize@@Base+0x154>
   19120:	ldr	x8, [sp, #8]
   19124:	ldr	x0, [x8, #16]
   19128:	mov	x1, #0x10                  	// #16
   1912c:	bl	b2e0 <calloc@plt>
   19130:	ldr	x8, [sp, #8]
   19134:	str	x0, [x8]
   19138:	ldr	x8, [sp, #8]
   1913c:	ldr	x8, [x8]
   19140:	cbnz	x8, 19148 <hash_initialize@@Base+0xe4>
   19144:	b	191b8 <hash_initialize@@Base+0x154>
   19148:	ldr	x8, [sp, #8]
   1914c:	ldr	x8, [x8]
   19150:	ldr	x9, [sp, #8]
   19154:	mov	x10, #0x10                  	// #16
   19158:	ldr	x9, [x9, #16]
   1915c:	mul	x9, x10, x9
   19160:	add	x8, x8, x9
   19164:	ldr	x9, [sp, #8]
   19168:	str	x8, [x9, #8]
   1916c:	ldr	x8, [sp, #8]
   19170:	mov	x9, xzr
   19174:	str	xzr, [x8, #24]
   19178:	ldr	x8, [sp, #8]
   1917c:	str	xzr, [x8, #32]
   19180:	ldr	x8, [sp, #32]
   19184:	ldr	x10, [sp, #8]
   19188:	str	x8, [x10, #48]
   1918c:	ldr	x8, [sp, #24]
   19190:	ldr	x10, [sp, #8]
   19194:	str	x8, [x10, #56]
   19198:	ldr	x8, [sp, #16]
   1919c:	ldr	x10, [sp, #8]
   191a0:	str	x8, [x10, #64]
   191a4:	ldr	x8, [sp, #8]
   191a8:	str	x9, [x8, #72]
   191ac:	ldr	x8, [sp, #8]
   191b0:	stur	x8, [x29, #-8]
   191b4:	b	191c8 <hash_initialize@@Base+0x164>
   191b8:	ldr	x0, [sp, #8]
   191bc:	bl	a930 <free@plt>
   191c0:	mov	x8, xzr
   191c4:	stur	x8, [x29, #-8]
   191c8:	ldur	x0, [x29, #-8]
   191cc:	ldp	x29, x30, [sp, #64]
   191d0:	add	sp, sp, #0x50
   191d4:	ret
   191d8:	sub	sp, sp, #0x30
   191dc:	stp	x29, x30, [sp, #32]
   191e0:	add	x29, sp, #0x20
   191e4:	mov	w8, #0x3                   	// #3
   191e8:	stur	x0, [x29, #-8]
   191ec:	str	x1, [sp, #16]
   191f0:	ldur	x0, [x29, #-8]
   191f4:	mov	w1, w8
   191f8:	bl	b2f0 <rotr_sz@plt>
   191fc:	str	x0, [sp, #8]
   19200:	ldr	x9, [sp, #8]
   19204:	ldr	x10, [sp, #16]
   19208:	udiv	x11, x9, x10
   1920c:	mul	x10, x11, x10
   19210:	subs	x0, x9, x10
   19214:	ldp	x29, x30, [sp, #32]
   19218:	add	sp, sp, #0x30
   1921c:	ret
   19220:	sub	sp, sp, #0x10
   19224:	str	x0, [sp, #8]
   19228:	str	x1, [sp]
   1922c:	ldr	x8, [sp, #8]
   19230:	ldr	x9, [sp]
   19234:	cmp	x8, x9
   19238:	cset	w10, eq  // eq = none
   1923c:	and	w0, w10, #0x1
   19240:	add	sp, sp, #0x10
   19244:	ret
   19248:	sub	sp, sp, #0x20
   1924c:	adrp	x8, 45000 <vasnprintf@@Base+0x2e4c>
   19250:	add	x8, x8, #0x9a4
   19254:	str	x0, [sp, #16]
   19258:	ldr	x9, [sp, #16]
   1925c:	ldr	x9, [x9, #40]
   19260:	str	x9, [sp, #8]
   19264:	ldr	x9, [sp, #8]
   19268:	cmp	x9, x8
   1926c:	b.ne	19280 <hash_initialize@@Base+0x21c>  // b.any
   19270:	mov	w8, #0x1                   	// #1
   19274:	and	w8, w8, #0x1
   19278:	strb	w8, [sp, #31]
   1927c:	b	193a8 <hash_initialize@@Base+0x344>
   19280:	mov	w8, #0xcccd                	// #52429
   19284:	movk	w8, #0x3dcc, lsl #16
   19288:	fmov	s0, w8
   1928c:	str	s0, [sp, #4]
   19290:	ldr	s0, [sp, #4]
   19294:	ldr	x9, [sp, #8]
   19298:	ldr	s1, [x9, #8]
   1929c:	fcmp	s0, s1
   192a0:	cset	w8, mi  // mi = first
   192a4:	tbnz	w8, #0, 192ac <hash_initialize@@Base+0x248>
   192a8:	b	1938c <hash_initialize@@Base+0x328>
   192ac:	ldr	x8, [sp, #8]
   192b0:	ldr	s0, [x8, #8]
   192b4:	ldr	s1, [sp, #4]
   192b8:	fmov	s2, #1.000000000000000000e+00
   192bc:	fsub	s1, s2, s1
   192c0:	fcmp	s0, s1
   192c4:	cset	w9, mi  // mi = first
   192c8:	tbnz	w9, #0, 192d0 <hash_initialize@@Base+0x26c>
   192cc:	b	1938c <hash_initialize@@Base+0x328>
   192d0:	ldr	s0, [sp, #4]
   192d4:	fmov	s1, #1.000000000000000000e+00
   192d8:	fadd	s0, s1, s0
   192dc:	ldr	x8, [sp, #8]
   192e0:	ldr	s1, [x8, #12]
   192e4:	fcmp	s0, s1
   192e8:	cset	w9, mi  // mi = first
   192ec:	tbnz	w9, #0, 192f4 <hash_initialize@@Base+0x290>
   192f0:	b	1938c <hash_initialize@@Base+0x328>
   192f4:	ldr	x8, [sp, #8]
   192f8:	ldr	s0, [x8]
   192fc:	fmov	s1, wzr
   19300:	fcmp	s1, s0
   19304:	cset	w9, ls  // ls = plast
   19308:	tbnz	w9, #0, 19310 <hash_initialize@@Base+0x2ac>
   1930c:	b	1938c <hash_initialize@@Base+0x328>
   19310:	ldr	x8, [sp, #8]
   19314:	ldr	s0, [x8]
   19318:	ldr	s1, [sp, #4]
   1931c:	fadd	s0, s0, s1
   19320:	ldr	x8, [sp, #8]
   19324:	ldr	s1, [x8, #4]
   19328:	fcmp	s0, s1
   1932c:	cset	w9, mi  // mi = first
   19330:	tbnz	w9, #0, 19338 <hash_initialize@@Base+0x2d4>
   19334:	b	1938c <hash_initialize@@Base+0x328>
   19338:	ldr	x8, [sp, #8]
   1933c:	ldr	s0, [x8, #4]
   19340:	fmov	s1, #1.000000000000000000e+00
   19344:	fcmp	s0, s1
   19348:	cset	w9, ls  // ls = plast
   1934c:	tbnz	w9, #0, 19354 <hash_initialize@@Base+0x2f0>
   19350:	b	1938c <hash_initialize@@Base+0x328>
   19354:	ldr	x8, [sp, #8]
   19358:	ldr	s0, [x8]
   1935c:	ldr	s1, [sp, #4]
   19360:	fadd	s0, s0, s1
   19364:	ldr	x8, [sp, #8]
   19368:	ldr	s1, [x8, #8]
   1936c:	fcmp	s0, s1
   19370:	cset	w9, mi  // mi = first
   19374:	tbnz	w9, #0, 1937c <hash_initialize@@Base+0x318>
   19378:	b	1938c <hash_initialize@@Base+0x328>
   1937c:	mov	w8, #0x1                   	// #1
   19380:	and	w8, w8, #0x1
   19384:	strb	w8, [sp, #31]
   19388:	b	193a8 <hash_initialize@@Base+0x344>
   1938c:	ldr	x8, [sp, #16]
   19390:	adrp	x9, 45000 <vasnprintf@@Base+0x2e4c>
   19394:	add	x9, x9, #0x9a4
   19398:	str	x9, [x8, #40]
   1939c:	mov	w10, wzr
   193a0:	and	w10, w10, #0x1
   193a4:	strb	w10, [sp, #31]
   193a8:	ldrb	w8, [sp, #31]
   193ac:	and	w0, w8, #0x1
   193b0:	add	sp, sp, #0x20
   193b4:	ret
   193b8:	sub	sp, sp, #0x30
   193bc:	stp	x29, x30, [sp, #32]
   193c0:	add	x29, sp, #0x20
   193c4:	str	x0, [sp, #16]
   193c8:	str	x1, [sp, #8]
   193cc:	ldr	x8, [sp, #8]
   193d0:	ldrb	w9, [x8, #16]
   193d4:	tbnz	w9, #0, 19420 <hash_initialize@@Base+0x3bc>
   193d8:	ldr	x8, [sp, #16]
   193dc:	ucvtf	s0, x8
   193e0:	ldr	x8, [sp, #8]
   193e4:	ldr	s1, [x8, #8]
   193e8:	fdiv	s0, s0, s1
   193ec:	str	s0, [sp, #4]
   193f0:	ldr	s0, [sp, #4]
   193f4:	mov	w9, #0x5f800000            	// #1602224128
   193f8:	fmov	s1, w9
   193fc:	fcmp	s1, s0
   19400:	cset	w9, ls  // ls = plast
   19404:	tbnz	w9, #0, 1940c <hash_initialize@@Base+0x3a8>
   19408:	b	19414 <hash_initialize@@Base+0x3b0>
   1940c:	stur	xzr, [x29, #-8]
   19410:	b	1944c <hash_initialize@@Base+0x3e8>
   19414:	ldr	s0, [sp, #4]
   19418:	fcvtzu	x8, s0
   1941c:	str	x8, [sp, #16]
   19420:	ldr	x0, [sp, #16]
   19424:	bl	1a174 <hash_delete@@Base+0x1c0>
   19428:	str	x0, [sp, #16]
   1942c:	ldr	x8, [sp, #16]
   19430:	mov	x9, #0xfffffffffffffff     	// #1152921504606846975
   19434:	cmp	x9, x8
   19438:	b.cs	19444 <hash_initialize@@Base+0x3e0>  // b.hs, b.nlast
   1943c:	stur	xzr, [x29, #-8]
   19440:	b	1944c <hash_initialize@@Base+0x3e8>
   19444:	ldr	x8, [sp, #16]
   19448:	stur	x8, [x29, #-8]
   1944c:	ldur	x0, [x29, #-8]
   19450:	ldp	x29, x30, [sp, #32]
   19454:	add	sp, sp, #0x30
   19458:	ret

000000000001945c <hash_clear@@Base>:
   1945c:	sub	sp, sp, #0x30
   19460:	stp	x29, x30, [sp, #32]
   19464:	add	x29, sp, #0x20
   19468:	stur	x0, [x29, #-8]
   1946c:	ldur	x8, [x29, #-8]
   19470:	ldr	x8, [x8]
   19474:	str	x8, [sp, #16]
   19478:	ldr	x8, [sp, #16]
   1947c:	ldur	x9, [x29, #-8]
   19480:	ldr	x9, [x9, #8]
   19484:	cmp	x8, x9
   19488:	b.cs	19550 <hash_clear@@Base+0xf4>  // b.hs, b.nlast
   1948c:	ldr	x8, [sp, #16]
   19490:	ldr	x8, [x8]
   19494:	cbz	x8, 19540 <hash_clear@@Base+0xe4>
   19498:	ldr	x8, [sp, #16]
   1949c:	ldr	x8, [x8, #8]
   194a0:	str	x8, [sp, #8]
   194a4:	ldr	x8, [sp, #8]
   194a8:	cbz	x8, 1950c <hash_clear@@Base+0xb0>
   194ac:	ldur	x8, [x29, #-8]
   194b0:	ldr	x8, [x8, #64]
   194b4:	cbz	x8, 194cc <hash_clear@@Base+0x70>
   194b8:	ldur	x8, [x29, #-8]
   194bc:	ldr	x8, [x8, #64]
   194c0:	ldr	x9, [sp, #8]
   194c4:	ldr	x0, [x9]
   194c8:	blr	x8
   194cc:	ldr	x8, [sp, #8]
   194d0:	mov	x9, xzr
   194d4:	str	x9, [x8]
   194d8:	ldr	x8, [sp, #8]
   194dc:	ldr	x8, [x8, #8]
   194e0:	str	x8, [sp]
   194e4:	ldur	x8, [x29, #-8]
   194e8:	ldr	x8, [x8, #72]
   194ec:	ldr	x9, [sp, #8]
   194f0:	str	x8, [x9, #8]
   194f4:	ldr	x8, [sp, #8]
   194f8:	ldur	x9, [x29, #-8]
   194fc:	str	x8, [x9, #72]
   19500:	ldr	x8, [sp]
   19504:	str	x8, [sp, #8]
   19508:	b	194a4 <hash_clear@@Base+0x48>
   1950c:	ldur	x8, [x29, #-8]
   19510:	ldr	x8, [x8, #64]
   19514:	cbz	x8, 1952c <hash_clear@@Base+0xd0>
   19518:	ldur	x8, [x29, #-8]
   1951c:	ldr	x8, [x8, #64]
   19520:	ldr	x9, [sp, #16]
   19524:	ldr	x0, [x9]
   19528:	blr	x8
   1952c:	ldr	x8, [sp, #16]
   19530:	mov	x9, xzr
   19534:	str	x9, [x8]
   19538:	ldr	x8, [sp, #16]
   1953c:	str	x9, [x8, #8]
   19540:	ldr	x8, [sp, #16]
   19544:	add	x8, x8, #0x10
   19548:	str	x8, [sp, #16]
   1954c:	b	19478 <hash_clear@@Base+0x1c>
   19550:	ldur	x8, [x29, #-8]
   19554:	str	xzr, [x8, #24]
   19558:	ldur	x8, [x29, #-8]
   1955c:	str	xzr, [x8, #32]
   19560:	ldp	x29, x30, [sp, #32]
   19564:	add	sp, sp, #0x30
   19568:	ret

000000000001956c <hash_free@@Base>:
   1956c:	sub	sp, sp, #0x30
   19570:	stp	x29, x30, [sp, #32]
   19574:	add	x29, sp, #0x20
   19578:	stur	x0, [x29, #-8]
   1957c:	ldur	x8, [x29, #-8]
   19580:	ldr	x8, [x8, #64]
   19584:	cbz	x8, 19604 <hash_free@@Base+0x98>
   19588:	ldur	x8, [x29, #-8]
   1958c:	ldr	x8, [x8, #32]
   19590:	cbz	x8, 19604 <hash_free@@Base+0x98>
   19594:	ldur	x8, [x29, #-8]
   19598:	ldr	x8, [x8]
   1959c:	str	x8, [sp, #16]
   195a0:	ldr	x8, [sp, #16]
   195a4:	ldur	x9, [x29, #-8]
   195a8:	ldr	x9, [x9, #8]
   195ac:	cmp	x8, x9
   195b0:	b.cs	19604 <hash_free@@Base+0x98>  // b.hs, b.nlast
   195b4:	ldr	x8, [sp, #16]
   195b8:	ldr	x8, [x8]
   195bc:	cbz	x8, 195f4 <hash_free@@Base+0x88>
   195c0:	ldr	x8, [sp, #16]
   195c4:	str	x8, [sp, #8]
   195c8:	ldr	x8, [sp, #8]
   195cc:	cbz	x8, 195f4 <hash_free@@Base+0x88>
   195d0:	ldur	x8, [x29, #-8]
   195d4:	ldr	x8, [x8, #64]
   195d8:	ldr	x9, [sp, #8]
   195dc:	ldr	x0, [x9]
   195e0:	blr	x8
   195e4:	ldr	x8, [sp, #8]
   195e8:	ldr	x8, [x8, #8]
   195ec:	str	x8, [sp, #8]
   195f0:	b	195c8 <hash_free@@Base+0x5c>
   195f4:	ldr	x8, [sp, #16]
   195f8:	add	x8, x8, #0x10
   195fc:	str	x8, [sp, #16]
   19600:	b	195a0 <hash_free@@Base+0x34>
   19604:	ldur	x8, [x29, #-8]
   19608:	ldr	x8, [x8]
   1960c:	str	x8, [sp, #16]
   19610:	ldr	x8, [sp, #16]
   19614:	ldur	x9, [x29, #-8]
   19618:	ldr	x9, [x9, #8]
   1961c:	cmp	x8, x9
   19620:	b.cs	19668 <hash_free@@Base+0xfc>  // b.hs, b.nlast
   19624:	ldr	x8, [sp, #16]
   19628:	ldr	x8, [x8, #8]
   1962c:	str	x8, [sp, #8]
   19630:	ldr	x8, [sp, #8]
   19634:	cbz	x8, 19658 <hash_free@@Base+0xec>
   19638:	ldr	x8, [sp, #8]
   1963c:	ldr	x8, [x8, #8]
   19640:	str	x8, [sp]
   19644:	ldr	x0, [sp, #8]
   19648:	bl	a930 <free@plt>
   1964c:	ldr	x8, [sp]
   19650:	str	x8, [sp, #8]
   19654:	b	19630 <hash_free@@Base+0xc4>
   19658:	ldr	x8, [sp, #16]
   1965c:	add	x8, x8, #0x10
   19660:	str	x8, [sp, #16]
   19664:	b	19610 <hash_free@@Base+0xa4>
   19668:	ldur	x8, [x29, #-8]
   1966c:	ldr	x8, [x8, #72]
   19670:	str	x8, [sp, #8]
   19674:	ldr	x8, [sp, #8]
   19678:	cbz	x8, 1969c <hash_free@@Base+0x130>
   1967c:	ldr	x8, [sp, #8]
   19680:	ldr	x8, [x8, #8]
   19684:	str	x8, [sp]
   19688:	ldr	x0, [sp, #8]
   1968c:	bl	a930 <free@plt>
   19690:	ldr	x8, [sp]
   19694:	str	x8, [sp, #8]
   19698:	b	19674 <hash_free@@Base+0x108>
   1969c:	ldur	x8, [x29, #-8]
   196a0:	ldr	x0, [x8]
   196a4:	bl	a930 <free@plt>
   196a8:	ldur	x0, [x29, #-8]
   196ac:	bl	a930 <free@plt>
   196b0:	ldp	x29, x30, [sp, #32]
   196b4:	add	sp, sp, #0x30
   196b8:	ret

00000000000196bc <hash_rehash@@Base>:
   196bc:	sub	sp, sp, #0x90
   196c0:	stp	x29, x30, [sp, #128]
   196c4:	add	x29, sp, #0x80
   196c8:	stur	x0, [x29, #-16]
   196cc:	stur	x1, [x29, #-24]
   196d0:	ldur	x0, [x29, #-24]
   196d4:	ldur	x8, [x29, #-16]
   196d8:	ldr	x1, [x8, #40]
   196dc:	bl	193b8 <hash_initialize@@Base+0x354>
   196e0:	str	x0, [sp, #8]
   196e4:	ldr	x8, [sp, #8]
   196e8:	cbnz	x8, 196fc <hash_rehash@@Base+0x40>
   196ec:	mov	w8, wzr
   196f0:	and	w8, w8, #0x1
   196f4:	sturb	w8, [x29, #-1]
   196f8:	b	198cc <hash_rehash@@Base+0x210>
   196fc:	ldr	x8, [sp, #8]
   19700:	ldur	x9, [x29, #-16]
   19704:	ldr	x9, [x9, #16]
   19708:	cmp	x8, x9
   1970c:	b.ne	19720 <hash_rehash@@Base+0x64>  // b.any
   19710:	mov	w8, #0x1                   	// #1
   19714:	and	w8, w8, #0x1
   19718:	sturb	w8, [x29, #-1]
   1971c:	b	198cc <hash_rehash@@Base+0x210>
   19720:	add	x8, sp, #0x18
   19724:	str	x8, [sp, #16]
   19728:	ldr	x0, [sp, #8]
   1972c:	mov	x1, #0x10                  	// #16
   19730:	bl	b2e0 <calloc@plt>
   19734:	ldr	x8, [sp, #16]
   19738:	str	x0, [x8]
   1973c:	ldr	x8, [sp, #16]
   19740:	ldr	x8, [x8]
   19744:	cbnz	x8, 19758 <hash_rehash@@Base+0x9c>
   19748:	mov	w8, wzr
   1974c:	and	w8, w8, #0x1
   19750:	sturb	w8, [x29, #-1]
   19754:	b	198cc <hash_rehash@@Base+0x210>
   19758:	ldr	x8, [sp, #8]
   1975c:	ldr	x9, [sp, #16]
   19760:	mov	x10, #0x10                  	// #16
   19764:	str	x8, [x9, #16]
   19768:	ldr	x8, [sp, #16]
   1976c:	ldr	x8, [x8]
   19770:	ldr	x9, [sp, #8]
   19774:	mul	x9, x10, x9
   19778:	add	x8, x8, x9
   1977c:	ldr	x9, [sp, #16]
   19780:	str	x8, [x9, #8]
   19784:	ldr	x8, [sp, #16]
   19788:	str	xzr, [x8, #24]
   1978c:	ldr	x8, [sp, #16]
   19790:	str	xzr, [x8, #32]
   19794:	ldur	x8, [x29, #-16]
   19798:	ldr	x8, [x8, #40]
   1979c:	ldr	x9, [sp, #16]
   197a0:	str	x8, [x9, #40]
   197a4:	ldur	x8, [x29, #-16]
   197a8:	ldr	x8, [x8, #48]
   197ac:	ldr	x9, [sp, #16]
   197b0:	str	x8, [x9, #48]
   197b4:	ldur	x8, [x29, #-16]
   197b8:	ldr	x8, [x8, #56]
   197bc:	ldr	x9, [sp, #16]
   197c0:	str	x8, [x9, #56]
   197c4:	ldur	x8, [x29, #-16]
   197c8:	ldr	x8, [x8, #64]
   197cc:	ldr	x9, [sp, #16]
   197d0:	str	x8, [x9, #64]
   197d4:	ldur	x8, [x29, #-16]
   197d8:	ldr	x8, [x8, #72]
   197dc:	ldr	x9, [sp, #16]
   197e0:	str	x8, [x9, #72]
   197e4:	ldr	x0, [sp, #16]
   197e8:	ldur	x1, [x29, #-16]
   197ec:	mov	w11, wzr
   197f0:	and	w2, w11, #0x1
   197f4:	bl	198e0 <hash_rehash@@Base+0x224>
   197f8:	tbnz	w0, #0, 19800 <hash_rehash@@Base+0x144>
   197fc:	b	1986c <hash_rehash@@Base+0x1b0>
   19800:	ldur	x8, [x29, #-16]
   19804:	ldr	x0, [x8]
   19808:	bl	a930 <free@plt>
   1980c:	ldr	x8, [sp, #16]
   19810:	ldr	x8, [x8]
   19814:	ldur	x9, [x29, #-16]
   19818:	str	x8, [x9]
   1981c:	ldr	x8, [sp, #16]
   19820:	ldr	x8, [x8, #8]
   19824:	ldur	x9, [x29, #-16]
   19828:	str	x8, [x9, #8]
   1982c:	ldr	x8, [sp, #16]
   19830:	ldr	x8, [x8, #16]
   19834:	ldur	x9, [x29, #-16]
   19838:	str	x8, [x9, #16]
   1983c:	ldr	x8, [sp, #16]
   19840:	ldr	x8, [x8, #24]
   19844:	ldur	x9, [x29, #-16]
   19848:	str	x8, [x9, #24]
   1984c:	ldr	x8, [sp, #16]
   19850:	ldr	x8, [x8, #72]
   19854:	ldur	x9, [x29, #-16]
   19858:	str	x8, [x9, #72]
   1985c:	mov	w10, #0x1                   	// #1
   19860:	and	w10, w10, #0x1
   19864:	sturb	w10, [x29, #-1]
   19868:	b	198cc <hash_rehash@@Base+0x210>
   1986c:	ldr	x8, [sp, #16]
   19870:	ldr	x8, [x8, #72]
   19874:	ldur	x9, [x29, #-16]
   19878:	str	x8, [x9, #72]
   1987c:	ldur	x0, [x29, #-16]
   19880:	ldr	x1, [sp, #16]
   19884:	mov	w10, #0x1                   	// #1
   19888:	and	w2, w10, #0x1
   1988c:	bl	198e0 <hash_rehash@@Base+0x224>
   19890:	tbnz	w0, #0, 19898 <hash_rehash@@Base+0x1dc>
   19894:	b	198b0 <hash_rehash@@Base+0x1f4>
   19898:	ldur	x0, [x29, #-16]
   1989c:	ldr	x1, [sp, #16]
   198a0:	mov	w8, wzr
   198a4:	and	w2, w8, #0x1
   198a8:	bl	198e0 <hash_rehash@@Base+0x224>
   198ac:	tbnz	w0, #0, 198b4 <hash_rehash@@Base+0x1f8>
   198b0:	bl	a9e0 <abort@plt>
   198b4:	ldr	x8, [sp, #16]
   198b8:	ldr	x0, [x8]
   198bc:	bl	a930 <free@plt>
   198c0:	mov	w9, wzr
   198c4:	and	w9, w9, #0x1
   198c8:	sturb	w9, [x29, #-1]
   198cc:	ldurb	w8, [x29, #-1]
   198d0:	and	w0, w8, #0x1
   198d4:	ldp	x29, x30, [sp, #128]
   198d8:	add	sp, sp, #0x90
   198dc:	ret
   198e0:	sub	sp, sp, #0x60
   198e4:	stp	x29, x30, [sp, #80]
   198e8:	add	x29, sp, #0x50
   198ec:	stur	x0, [x29, #-16]
   198f0:	stur	x1, [x29, #-24]
   198f4:	and	w8, w2, #0x1
   198f8:	sturb	w8, [x29, #-25]
   198fc:	ldur	x9, [x29, #-24]
   19900:	ldr	x9, [x9]
   19904:	str	x9, [sp, #40]
   19908:	ldr	x8, [sp, #40]
   1990c:	ldur	x9, [x29, #-24]
   19910:	ldr	x9, [x9, #8]
   19914:	cmp	x8, x9
   19918:	b.cs	19aa0 <hash_rehash@@Base+0x3e4>  // b.hs, b.nlast
   1991c:	ldr	x8, [sp, #40]
   19920:	ldr	x8, [x8]
   19924:	cbz	x8, 19a90 <hash_rehash@@Base+0x3d4>
   19928:	ldr	x8, [sp, #40]
   1992c:	ldr	x8, [x8, #8]
   19930:	str	x8, [sp, #32]
   19934:	ldr	x8, [sp, #32]
   19938:	cbz	x8, 199c4 <hash_rehash@@Base+0x308>
   1993c:	ldr	x8, [sp, #32]
   19940:	ldr	x8, [x8]
   19944:	str	x8, [sp, #16]
   19948:	ldur	x0, [x29, #-16]
   1994c:	ldr	x1, [sp, #16]
   19950:	bl	18c8c <hash_lookup@@Base+0xb8>
   19954:	str	x0, [sp, #8]
   19958:	ldr	x8, [sp, #32]
   1995c:	ldr	x8, [x8, #8]
   19960:	str	x8, [sp, #24]
   19964:	ldr	x8, [sp, #8]
   19968:	ldr	x8, [x8]
   1996c:	cbz	x8, 19990 <hash_rehash@@Base+0x2d4>
   19970:	ldr	x8, [sp, #8]
   19974:	ldr	x8, [x8, #8]
   19978:	ldr	x9, [sp, #32]
   1997c:	str	x8, [x9, #8]
   19980:	ldr	x8, [sp, #32]
   19984:	ldr	x9, [sp, #8]
   19988:	str	x8, [x9, #8]
   1998c:	b	199b8 <hash_rehash@@Base+0x2fc>
   19990:	ldr	x8, [sp, #16]
   19994:	ldr	x9, [sp, #8]
   19998:	str	x8, [x9]
   1999c:	ldur	x8, [x29, #-16]
   199a0:	ldr	x9, [x8, #24]
   199a4:	add	x9, x9, #0x1
   199a8:	str	x9, [x8, #24]
   199ac:	ldur	x0, [x29, #-16]
   199b0:	ldr	x1, [sp, #32]
   199b4:	bl	1a2c8 <hash_delete@@Base+0x314>
   199b8:	ldr	x8, [sp, #24]
   199bc:	str	x8, [sp, #32]
   199c0:	b	19934 <hash_rehash@@Base+0x278>
   199c4:	ldr	x8, [sp, #40]
   199c8:	ldr	x8, [x8]
   199cc:	str	x8, [sp, #16]
   199d0:	ldr	x8, [sp, #40]
   199d4:	mov	x9, xzr
   199d8:	str	x9, [x8, #8]
   199dc:	ldurb	w10, [x29, #-25]
   199e0:	tbnz	w10, #0, 199e8 <hash_rehash@@Base+0x32c>
   199e4:	b	199ec <hash_rehash@@Base+0x330>
   199e8:	b	19a90 <hash_rehash@@Base+0x3d4>
   199ec:	ldur	x0, [x29, #-16]
   199f0:	ldr	x1, [sp, #16]
   199f4:	bl	18c8c <hash_lookup@@Base+0xb8>
   199f8:	str	x0, [sp, #8]
   199fc:	ldr	x8, [sp, #8]
   19a00:	ldr	x8, [x8]
   19a04:	cbz	x8, 19a58 <hash_rehash@@Base+0x39c>
   19a08:	ldur	x0, [x29, #-16]
   19a0c:	bl	19ed8 <hash_insert_if_absent@@Base+0x418>
   19a10:	str	x0, [sp]
   19a14:	ldr	x8, [sp]
   19a18:	cbnz	x8, 19a2c <hash_rehash@@Base+0x370>
   19a1c:	mov	w8, wzr
   19a20:	and	w8, w8, #0x1
   19a24:	sturb	w8, [x29, #-1]
   19a28:	b	19aac <hash_rehash@@Base+0x3f0>
   19a2c:	ldr	x8, [sp, #16]
   19a30:	ldr	x9, [sp]
   19a34:	str	x8, [x9]
   19a38:	ldr	x8, [sp, #8]
   19a3c:	ldr	x8, [x8, #8]
   19a40:	ldr	x9, [sp]
   19a44:	str	x8, [x9, #8]
   19a48:	ldr	x8, [sp]
   19a4c:	ldr	x9, [sp, #8]
   19a50:	str	x8, [x9, #8]
   19a54:	b	19a74 <hash_rehash@@Base+0x3b8>
   19a58:	ldr	x8, [sp, #16]
   19a5c:	ldr	x9, [sp, #8]
   19a60:	str	x8, [x9]
   19a64:	ldur	x8, [x29, #-16]
   19a68:	ldr	x9, [x8, #24]
   19a6c:	add	x9, x9, #0x1
   19a70:	str	x9, [x8, #24]
   19a74:	ldr	x8, [sp, #40]
   19a78:	mov	x9, xzr
   19a7c:	str	x9, [x8]
   19a80:	ldur	x8, [x29, #-24]
   19a84:	ldr	x9, [x8, #24]
   19a88:	subs	x9, x9, #0x1
   19a8c:	str	x9, [x8, #24]
   19a90:	ldr	x8, [sp, #40]
   19a94:	add	x8, x8, #0x10
   19a98:	str	x8, [sp, #40]
   19a9c:	b	19908 <hash_rehash@@Base+0x24c>
   19aa0:	mov	w8, #0x1                   	// #1
   19aa4:	and	w8, w8, #0x1
   19aa8:	sturb	w8, [x29, #-1]
   19aac:	ldurb	w8, [x29, #-1]
   19ab0:	and	w0, w8, #0x1
   19ab4:	ldp	x29, x30, [sp, #80]
   19ab8:	add	sp, sp, #0x60
   19abc:	ret

0000000000019ac0 <hash_insert_if_absent@@Base>:
   19ac0:	sub	sp, sp, #0x60
   19ac4:	stp	x29, x30, [sp, #80]
   19ac8:	add	x29, sp, #0x50
   19acc:	stur	x0, [x29, #-16]
   19ad0:	stur	x1, [x29, #-24]
   19ad4:	stur	x2, [x29, #-32]
   19ad8:	ldur	x8, [x29, #-24]
   19adc:	cbnz	x8, 19ae4 <hash_insert_if_absent@@Base+0x24>
   19ae0:	bl	a9e0 <abort@plt>
   19ae4:	ldur	x0, [x29, #-16]
   19ae8:	ldur	x1, [x29, #-24]
   19aec:	add	x2, sp, #0x20
   19af0:	mov	w8, wzr
   19af4:	and	w3, w8, #0x1
   19af8:	bl	19d20 <hash_insert_if_absent@@Base+0x260>
   19afc:	str	x0, [sp, #40]
   19b00:	cbz	x0, 19b20 <hash_insert_if_absent@@Base+0x60>
   19b04:	ldur	x8, [x29, #-32]
   19b08:	cbz	x8, 19b18 <hash_insert_if_absent@@Base+0x58>
   19b0c:	ldr	x8, [sp, #40]
   19b10:	ldur	x9, [x29, #-32]
   19b14:	str	x8, [x9]
   19b18:	stur	wzr, [x29, #-4]
   19b1c:	b	19d10 <hash_insert_if_absent@@Base+0x250>
   19b20:	ldur	x8, [x29, #-16]
   19b24:	ldr	x8, [x8, #24]
   19b28:	ucvtf	s0, x8
   19b2c:	ldur	x8, [x29, #-16]
   19b30:	ldr	x8, [x8, #40]
   19b34:	ldr	s1, [x8, #8]
   19b38:	ldur	x8, [x29, #-16]
   19b3c:	ldr	x8, [x8, #16]
   19b40:	ucvtf	s2, x8
   19b44:	fmul	s1, s1, s2
   19b48:	fcmp	s0, s1
   19b4c:	cset	w9, gt
   19b50:	tbnz	w9, #0, 19b58 <hash_insert_if_absent@@Base+0x98>
   19b54:	b	19c6c <hash_insert_if_absent@@Base+0x1ac>
   19b58:	ldur	x0, [x29, #-16]
   19b5c:	bl	19248 <hash_initialize@@Base+0x1e4>
   19b60:	ldur	x8, [x29, #-16]
   19b64:	ldr	x8, [x8, #24]
   19b68:	ucvtf	s0, x8
   19b6c:	ldur	x8, [x29, #-16]
   19b70:	ldr	x8, [x8, #40]
   19b74:	ldr	s1, [x8, #8]
   19b78:	ldur	x8, [x29, #-16]
   19b7c:	ldr	x8, [x8, #16]
   19b80:	ucvtf	s2, x8
   19b84:	fmul	s1, s1, s2
   19b88:	fcmp	s0, s1
   19b8c:	cset	w9, gt
   19b90:	tbnz	w9, #0, 19b98 <hash_insert_if_absent@@Base+0xd8>
   19b94:	b	19c6c <hash_insert_if_absent@@Base+0x1ac>
   19b98:	ldur	x8, [x29, #-16]
   19b9c:	ldr	x8, [x8, #40]
   19ba0:	str	x8, [sp, #24]
   19ba4:	ldr	x8, [sp, #24]
   19ba8:	ldrb	w9, [x8, #16]
   19bac:	tbnz	w9, #0, 19bb4 <hash_insert_if_absent@@Base+0xf4>
   19bb0:	b	19bd4 <hash_insert_if_absent@@Base+0x114>
   19bb4:	ldur	x8, [x29, #-16]
   19bb8:	ldr	x8, [x8, #16]
   19bbc:	ucvtf	s0, x8
   19bc0:	ldr	x8, [sp, #24]
   19bc4:	ldr	s1, [x8, #12]
   19bc8:	fmul	s0, s0, s1
   19bcc:	str	s0, [sp, #4]
   19bd0:	b	19bfc <hash_insert_if_absent@@Base+0x13c>
   19bd4:	ldur	x8, [x29, #-16]
   19bd8:	ldr	x8, [x8, #16]
   19bdc:	ucvtf	s0, x8
   19be0:	ldr	x8, [sp, #24]
   19be4:	ldr	s1, [x8, #12]
   19be8:	fmul	s0, s0, s1
   19bec:	ldr	x8, [sp, #24]
   19bf0:	ldr	s1, [x8, #8]
   19bf4:	fmul	s0, s0, s1
   19bf8:	str	s0, [sp, #4]
   19bfc:	ldr	s0, [sp, #4]
   19c00:	str	s0, [sp, #20]
   19c04:	ldr	s0, [sp, #20]
   19c08:	mov	w8, #0x5f800000            	// #1602224128
   19c0c:	fmov	s1, w8
   19c10:	fcmp	s1, s0
   19c14:	cset	w8, ls  // ls = plast
   19c18:	tbnz	w8, #0, 19c20 <hash_insert_if_absent@@Base+0x160>
   19c1c:	b	19c2c <hash_insert_if_absent@@Base+0x16c>
   19c20:	mov	w8, #0xffffffff            	// #-1
   19c24:	stur	w8, [x29, #-4]
   19c28:	b	19d10 <hash_insert_if_absent@@Base+0x250>
   19c2c:	ldur	x0, [x29, #-16]
   19c30:	ldr	s0, [sp, #20]
   19c34:	fcvtzu	x1, s0
   19c38:	bl	b300 <hash_rehash@plt>
   19c3c:	tbnz	w0, #0, 19c4c <hash_insert_if_absent@@Base+0x18c>
   19c40:	mov	w8, #0xffffffff            	// #-1
   19c44:	stur	w8, [x29, #-4]
   19c48:	b	19d10 <hash_insert_if_absent@@Base+0x250>
   19c4c:	ldur	x0, [x29, #-16]
   19c50:	ldur	x1, [x29, #-24]
   19c54:	add	x2, sp, #0x20
   19c58:	mov	w8, wzr
   19c5c:	and	w3, w8, #0x1
   19c60:	bl	19d20 <hash_insert_if_absent@@Base+0x260>
   19c64:	cbz	x0, 19c6c <hash_insert_if_absent@@Base+0x1ac>
   19c68:	bl	a9e0 <abort@plt>
   19c6c:	ldr	x8, [sp, #32]
   19c70:	ldr	x8, [x8]
   19c74:	cbz	x8, 19cdc <hash_insert_if_absent@@Base+0x21c>
   19c78:	ldur	x0, [x29, #-16]
   19c7c:	bl	19ed8 <hash_insert_if_absent@@Base+0x418>
   19c80:	str	x0, [sp, #8]
   19c84:	ldr	x8, [sp, #8]
   19c88:	cbnz	x8, 19c98 <hash_insert_if_absent@@Base+0x1d8>
   19c8c:	mov	w8, #0xffffffff            	// #-1
   19c90:	stur	w8, [x29, #-4]
   19c94:	b	19d10 <hash_insert_if_absent@@Base+0x250>
   19c98:	ldur	x8, [x29, #-24]
   19c9c:	ldr	x9, [sp, #8]
   19ca0:	str	x8, [x9]
   19ca4:	ldr	x8, [sp, #32]
   19ca8:	ldr	x8, [x8, #8]
   19cac:	ldr	x9, [sp, #8]
   19cb0:	str	x8, [x9, #8]
   19cb4:	ldr	x8, [sp, #8]
   19cb8:	ldr	x9, [sp, #32]
   19cbc:	str	x8, [x9, #8]
   19cc0:	ldur	x8, [x29, #-16]
   19cc4:	ldr	x9, [x8, #32]
   19cc8:	add	x9, x9, #0x1
   19ccc:	str	x9, [x8, #32]
   19cd0:	mov	w10, #0x1                   	// #1
   19cd4:	stur	w10, [x29, #-4]
   19cd8:	b	19d10 <hash_insert_if_absent@@Base+0x250>
   19cdc:	ldur	x8, [x29, #-24]
   19ce0:	ldr	x9, [sp, #32]
   19ce4:	str	x8, [x9]
   19ce8:	ldur	x8, [x29, #-16]
   19cec:	ldr	x9, [x8, #32]
   19cf0:	add	x9, x9, #0x1
   19cf4:	str	x9, [x8, #32]
   19cf8:	ldur	x8, [x29, #-16]
   19cfc:	ldr	x9, [x8, #24]
   19d00:	add	x9, x9, #0x1
   19d04:	str	x9, [x8, #24]
   19d08:	mov	w10, #0x1                   	// #1
   19d0c:	stur	w10, [x29, #-4]
   19d10:	ldur	w0, [x29, #-4]
   19d14:	ldp	x29, x30, [sp, #80]
   19d18:	add	sp, sp, #0x60
   19d1c:	ret
   19d20:	sub	sp, sp, #0x70
   19d24:	stp	x29, x30, [sp, #96]
   19d28:	add	x29, sp, #0x60
   19d2c:	stur	x0, [x29, #-16]
   19d30:	stur	x1, [x29, #-24]
   19d34:	stur	x2, [x29, #-32]
   19d38:	and	w8, w3, #0x1
   19d3c:	sturb	w8, [x29, #-33]
   19d40:	ldur	x0, [x29, #-16]
   19d44:	ldur	x1, [x29, #-24]
   19d48:	bl	18c8c <hash_lookup@@Base+0xb8>
   19d4c:	str	x0, [sp, #48]
   19d50:	ldr	x9, [sp, #48]
   19d54:	ldur	x10, [x29, #-32]
   19d58:	str	x9, [x10]
   19d5c:	ldr	x9, [sp, #48]
   19d60:	ldr	x9, [x9]
   19d64:	cbnz	x9, 19d74 <hash_insert_if_absent@@Base+0x2b4>
   19d68:	mov	x8, xzr
   19d6c:	stur	x8, [x29, #-8]
   19d70:	b	19ec8 <hash_insert_if_absent@@Base+0x408>
   19d74:	ldur	x8, [x29, #-24]
   19d78:	ldr	x9, [sp, #48]
   19d7c:	ldr	x9, [x9]
   19d80:	cmp	x8, x9
   19d84:	b.eq	19da8 <hash_insert_if_absent@@Base+0x2e8>  // b.none
   19d88:	ldur	x8, [x29, #-16]
   19d8c:	ldr	x8, [x8, #56]
   19d90:	ldur	x0, [x29, #-24]
   19d94:	ldr	x9, [sp, #48]
   19d98:	ldr	x1, [x9]
   19d9c:	blr	x8
   19da0:	tbnz	w0, #0, 19da8 <hash_insert_if_absent@@Base+0x2e8>
   19da4:	b	19e10 <hash_insert_if_absent@@Base+0x350>
   19da8:	ldr	x8, [sp, #48]
   19dac:	ldr	x8, [x8]
   19db0:	str	x8, [sp, #32]
   19db4:	ldurb	w9, [x29, #-33]
   19db8:	tbnz	w9, #0, 19dc0 <hash_insert_if_absent@@Base+0x300>
   19dbc:	b	19e04 <hash_insert_if_absent@@Base+0x344>
   19dc0:	ldr	x8, [sp, #48]
   19dc4:	ldr	x8, [x8, #8]
   19dc8:	cbz	x8, 19df8 <hash_insert_if_absent@@Base+0x338>
   19dcc:	ldr	x8, [sp, #48]
   19dd0:	ldr	x8, [x8, #8]
   19dd4:	str	x8, [sp, #24]
   19dd8:	ldr	x8, [sp, #48]
   19ddc:	ldr	x9, [sp, #24]
   19de0:	ldr	q0, [x9]
   19de4:	str	q0, [x8]
   19de8:	ldur	x0, [x29, #-16]
   19dec:	ldr	x1, [sp, #24]
   19df0:	bl	1a2c8 <hash_delete@@Base+0x314>
   19df4:	b	19e04 <hash_insert_if_absent@@Base+0x344>
   19df8:	ldr	x8, [sp, #48]
   19dfc:	mov	x9, xzr
   19e00:	str	x9, [x8]
   19e04:	ldr	x8, [sp, #32]
   19e08:	stur	x8, [x29, #-8]
   19e0c:	b	19ec8 <hash_insert_if_absent@@Base+0x408>
   19e10:	ldr	x8, [sp, #48]
   19e14:	str	x8, [sp, #40]
   19e18:	ldr	x8, [sp, #40]
   19e1c:	ldr	x8, [x8, #8]
   19e20:	cbz	x8, 19ec0 <hash_insert_if_absent@@Base+0x400>
   19e24:	ldur	x8, [x29, #-24]
   19e28:	ldr	x9, [sp, #40]
   19e2c:	ldr	x9, [x9, #8]
   19e30:	ldr	x9, [x9]
   19e34:	cmp	x8, x9
   19e38:	b.eq	19e60 <hash_insert_if_absent@@Base+0x3a0>  // b.none
   19e3c:	ldur	x8, [x29, #-16]
   19e40:	ldr	x8, [x8, #56]
   19e44:	ldur	x0, [x29, #-24]
   19e48:	ldr	x9, [sp, #40]
   19e4c:	ldr	x9, [x9, #8]
   19e50:	ldr	x1, [x9]
   19e54:	blr	x8
   19e58:	tbnz	w0, #0, 19e60 <hash_insert_if_absent@@Base+0x3a0>
   19e5c:	b	19eb0 <hash_insert_if_absent@@Base+0x3f0>
   19e60:	ldr	x8, [sp, #40]
   19e64:	ldr	x8, [x8, #8]
   19e68:	ldr	x8, [x8]
   19e6c:	str	x8, [sp, #16]
   19e70:	ldurb	w9, [x29, #-33]
   19e74:	tbnz	w9, #0, 19e7c <hash_insert_if_absent@@Base+0x3bc>
   19e78:	b	19ea4 <hash_insert_if_absent@@Base+0x3e4>
   19e7c:	ldr	x8, [sp, #40]
   19e80:	ldr	x8, [x8, #8]
   19e84:	str	x8, [sp, #8]
   19e88:	ldr	x8, [sp, #8]
   19e8c:	ldr	x8, [x8, #8]
   19e90:	ldr	x9, [sp, #40]
   19e94:	str	x8, [x9, #8]
   19e98:	ldur	x0, [x29, #-16]
   19e9c:	ldr	x1, [sp, #8]
   19ea0:	bl	1a2c8 <hash_delete@@Base+0x314>
   19ea4:	ldr	x8, [sp, #16]
   19ea8:	stur	x8, [x29, #-8]
   19eac:	b	19ec8 <hash_insert_if_absent@@Base+0x408>
   19eb0:	ldr	x8, [sp, #40]
   19eb4:	ldr	x8, [x8, #8]
   19eb8:	str	x8, [sp, #40]
   19ebc:	b	19e18 <hash_insert_if_absent@@Base+0x358>
   19ec0:	mov	x8, xzr
   19ec4:	stur	x8, [x29, #-8]
   19ec8:	ldur	x0, [x29, #-8]
   19ecc:	ldp	x29, x30, [sp, #96]
   19ed0:	add	sp, sp, #0x70
   19ed4:	ret
   19ed8:	sub	sp, sp, #0x20
   19edc:	stp	x29, x30, [sp, #16]
   19ee0:	add	x29, sp, #0x10
   19ee4:	str	x0, [sp, #8]
   19ee8:	ldr	x8, [sp, #8]
   19eec:	ldr	x8, [x8, #72]
   19ef0:	cbz	x8, 19f14 <hash_insert_if_absent@@Base+0x454>
   19ef4:	ldr	x8, [sp, #8]
   19ef8:	ldr	x8, [x8, #72]
   19efc:	str	x8, [sp]
   19f00:	ldr	x8, [sp]
   19f04:	ldr	x8, [x8, #8]
   19f08:	ldr	x9, [sp, #8]
   19f0c:	str	x8, [x9, #72]
   19f10:	b	19f20 <hash_insert_if_absent@@Base+0x460>
   19f14:	mov	x0, #0x10                  	// #16
   19f18:	bl	af10 <malloc@plt>
   19f1c:	str	x0, [sp]
   19f20:	ldr	x0, [sp]
   19f24:	ldp	x29, x30, [sp, #16]
   19f28:	add	sp, sp, #0x20
   19f2c:	ret

0000000000019f30 <hash_insert@@Base>:
   19f30:	sub	sp, sp, #0x40
   19f34:	stp	x29, x30, [sp, #48]
   19f38:	add	x29, sp, #0x30
   19f3c:	mov	w8, #0xffffffff            	// #-1
   19f40:	add	x2, sp, #0x18
   19f44:	stur	x0, [x29, #-8]
   19f48:	stur	x1, [x29, #-16]
   19f4c:	ldur	x0, [x29, #-8]
   19f50:	ldur	x1, [x29, #-16]
   19f54:	str	w8, [sp, #16]
   19f58:	bl	b310 <hash_insert_if_absent@plt>
   19f5c:	str	w0, [sp, #20]
   19f60:	ldr	w8, [sp, #20]
   19f64:	ldr	w9, [sp, #16]
   19f68:	cmp	w8, w9
   19f6c:	b.ne	19f7c <hash_insert@@Base+0x4c>  // b.any
   19f70:	mov	x8, xzr
   19f74:	str	x8, [sp, #8]
   19f78:	b	19fa0 <hash_insert@@Base+0x70>
   19f7c:	ldr	w8, [sp, #20]
   19f80:	cbnz	w8, 19f90 <hash_insert@@Base+0x60>
   19f84:	ldr	x8, [sp, #24]
   19f88:	str	x8, [sp]
   19f8c:	b	19f98 <hash_insert@@Base+0x68>
   19f90:	ldur	x8, [x29, #-16]
   19f94:	str	x8, [sp]
   19f98:	ldr	x8, [sp]
   19f9c:	str	x8, [sp, #8]
   19fa0:	ldr	x8, [sp, #8]
   19fa4:	mov	x0, x8
   19fa8:	ldp	x29, x30, [sp, #48]
   19fac:	add	sp, sp, #0x40
   19fb0:	ret

0000000000019fb4 <hash_delete@@Base>:
   19fb4:	sub	sp, sp, #0x60
   19fb8:	stp	x29, x30, [sp, #80]
   19fbc:	add	x29, sp, #0x50
   19fc0:	add	x2, sp, #0x28
   19fc4:	stur	x0, [x29, #-16]
   19fc8:	stur	x1, [x29, #-24]
   19fcc:	ldur	x0, [x29, #-16]
   19fd0:	ldur	x1, [x29, #-24]
   19fd4:	mov	w8, #0x1                   	// #1
   19fd8:	and	w3, w8, #0x1
   19fdc:	bl	19d20 <hash_insert_if_absent@@Base+0x260>
   19fe0:	stur	x0, [x29, #-32]
   19fe4:	ldur	x9, [x29, #-32]
   19fe8:	cbnz	x9, 19ff8 <hash_delete@@Base+0x44>
   19fec:	mov	x8, xzr
   19ff0:	stur	x8, [x29, #-8]
   19ff4:	b	1a164 <hash_delete@@Base+0x1b0>
   19ff8:	ldur	x8, [x29, #-16]
   19ffc:	ldr	x9, [x8, #32]
   1a000:	subs	x9, x9, #0x1
   1a004:	str	x9, [x8, #32]
   1a008:	ldr	x8, [sp, #40]
   1a00c:	ldr	x8, [x8]
   1a010:	cbnz	x8, 1a15c <hash_delete@@Base+0x1a8>
   1a014:	ldur	x8, [x29, #-16]
   1a018:	ldr	x9, [x8, #24]
   1a01c:	subs	x9, x9, #0x1
   1a020:	str	x9, [x8, #24]
   1a024:	ldur	x8, [x29, #-16]
   1a028:	ldr	x8, [x8, #24]
   1a02c:	ucvtf	s0, x8
   1a030:	ldur	x8, [x29, #-16]
   1a034:	ldr	x8, [x8, #40]
   1a038:	ldr	s1, [x8]
   1a03c:	ldur	x8, [x29, #-16]
   1a040:	ldr	x8, [x8, #16]
   1a044:	ucvtf	s2, x8
   1a048:	fmul	s1, s1, s2
   1a04c:	fcmp	s0, s1
   1a050:	cset	w10, mi  // mi = first
   1a054:	tbnz	w10, #0, 1a05c <hash_delete@@Base+0xa8>
   1a058:	b	1a15c <hash_delete@@Base+0x1a8>
   1a05c:	ldur	x0, [x29, #-16]
   1a060:	bl	19248 <hash_initialize@@Base+0x1e4>
   1a064:	ldur	x8, [x29, #-16]
   1a068:	ldr	x8, [x8, #24]
   1a06c:	ucvtf	s0, x8
   1a070:	ldur	x8, [x29, #-16]
   1a074:	ldr	x8, [x8, #40]
   1a078:	ldr	s1, [x8]
   1a07c:	ldur	x8, [x29, #-16]
   1a080:	ldr	x8, [x8, #16]
   1a084:	ucvtf	s2, x8
   1a088:	fmul	s1, s1, s2
   1a08c:	fcmp	s0, s1
   1a090:	cset	w9, mi  // mi = first
   1a094:	tbnz	w9, #0, 1a09c <hash_delete@@Base+0xe8>
   1a098:	b	1a15c <hash_delete@@Base+0x1a8>
   1a09c:	ldur	x8, [x29, #-16]
   1a0a0:	ldr	x8, [x8, #40]
   1a0a4:	str	x8, [sp, #32]
   1a0a8:	ldr	x8, [sp, #32]
   1a0ac:	ldrb	w9, [x8, #16]
   1a0b0:	tbnz	w9, #0, 1a0b8 <hash_delete@@Base+0x104>
   1a0b4:	b	1a0d8 <hash_delete@@Base+0x124>
   1a0b8:	ldur	x8, [x29, #-16]
   1a0bc:	ldr	x8, [x8, #16]
   1a0c0:	ucvtf	s0, x8
   1a0c4:	ldr	x8, [sp, #32]
   1a0c8:	ldr	s1, [x8, #4]
   1a0cc:	fmul	s0, s0, s1
   1a0d0:	str	s0, [sp, #4]
   1a0d4:	b	1a100 <hash_delete@@Base+0x14c>
   1a0d8:	ldur	x8, [x29, #-16]
   1a0dc:	ldr	x8, [x8, #16]
   1a0e0:	ucvtf	s0, x8
   1a0e4:	ldr	x8, [sp, #32]
   1a0e8:	ldr	s1, [x8, #4]
   1a0ec:	fmul	s0, s0, s1
   1a0f0:	ldr	x8, [sp, #32]
   1a0f4:	ldr	s1, [x8, #8]
   1a0f8:	fmul	s0, s0, s1
   1a0fc:	str	s0, [sp, #4]
   1a100:	ldr	s0, [sp, #4]
   1a104:	fcvtzu	x8, s0
   1a108:	str	x8, [sp, #24]
   1a10c:	ldur	x0, [x29, #-16]
   1a110:	ldr	x1, [sp, #24]
   1a114:	bl	b300 <hash_rehash@plt>
   1a118:	tbnz	w0, #0, 1a15c <hash_delete@@Base+0x1a8>
   1a11c:	ldur	x8, [x29, #-16]
   1a120:	ldr	x8, [x8, #72]
   1a124:	str	x8, [sp, #16]
   1a128:	ldr	x8, [sp, #16]
   1a12c:	cbz	x8, 1a150 <hash_delete@@Base+0x19c>
   1a130:	ldr	x8, [sp, #16]
   1a134:	ldr	x8, [x8, #8]
   1a138:	str	x8, [sp, #8]
   1a13c:	ldr	x0, [sp, #16]
   1a140:	bl	a930 <free@plt>
   1a144:	ldr	x8, [sp, #8]
   1a148:	str	x8, [sp, #16]
   1a14c:	b	1a128 <hash_delete@@Base+0x174>
   1a150:	ldur	x8, [x29, #-16]
   1a154:	mov	x9, xzr
   1a158:	str	x9, [x8, #72]
   1a15c:	ldur	x8, [x29, #-32]
   1a160:	stur	x8, [x29, #-8]
   1a164:	ldur	x0, [x29, #-8]
   1a168:	ldp	x29, x30, [sp, #80]
   1a16c:	add	sp, sp, #0x60
   1a170:	ret
   1a174:	sub	sp, sp, #0x20
   1a178:	stp	x29, x30, [sp, #16]
   1a17c:	add	x29, sp, #0x10
   1a180:	str	x0, [sp, #8]
   1a184:	ldr	x8, [sp, #8]
   1a188:	cmp	x8, #0xa
   1a18c:	b.cs	1a198 <hash_delete@@Base+0x1e4>  // b.hs, b.nlast
   1a190:	mov	x8, #0xa                   	// #10
   1a194:	str	x8, [sp, #8]
   1a198:	ldr	x8, [sp, #8]
   1a19c:	orr	x8, x8, #0x1
   1a1a0:	str	x8, [sp, #8]
   1a1a4:	ldr	x8, [sp, #8]
   1a1a8:	mov	x9, #0xffffffffffffffff    	// #-1
   1a1ac:	mov	w10, #0x0                   	// #0
   1a1b0:	cmp	x9, x8
   1a1b4:	str	w10, [sp, #4]
   1a1b8:	b.eq	1a1cc <hash_delete@@Base+0x218>  // b.none
   1a1bc:	ldr	x0, [sp, #8]
   1a1c0:	bl	1a1f8 <hash_delete@@Base+0x244>
   1a1c4:	eor	w8, w0, #0x1
   1a1c8:	str	w8, [sp, #4]
   1a1cc:	ldr	w8, [sp, #4]
   1a1d0:	tbnz	w8, #0, 1a1d8 <hash_delete@@Base+0x224>
   1a1d4:	b	1a1e8 <hash_delete@@Base+0x234>
   1a1d8:	ldr	x8, [sp, #8]
   1a1dc:	add	x8, x8, #0x2
   1a1e0:	str	x8, [sp, #8]
   1a1e4:	b	1a1a4 <hash_delete@@Base+0x1f0>
   1a1e8:	ldr	x0, [sp, #8]
   1a1ec:	ldp	x29, x30, [sp, #16]
   1a1f0:	add	sp, sp, #0x20
   1a1f4:	ret
   1a1f8:	sub	sp, sp, #0x20
   1a1fc:	mov	x8, #0x3                   	// #3
   1a200:	str	x0, [sp, #24]
   1a204:	str	x8, [sp, #16]
   1a208:	ldr	x8, [sp, #16]
   1a20c:	ldr	x9, [sp, #16]
   1a210:	mul	x8, x8, x9
   1a214:	str	x8, [sp, #8]
   1a218:	ldr	x8, [sp, #8]
   1a21c:	ldr	x9, [sp, #24]
   1a220:	mov	w10, #0x0                   	// #0
   1a224:	cmp	x8, x9
   1a228:	str	w10, [sp, #4]
   1a22c:	b.cs	1a250 <hash_delete@@Base+0x29c>  // b.hs, b.nlast
   1a230:	ldr	x8, [sp, #24]
   1a234:	ldr	x9, [sp, #16]
   1a238:	udiv	x10, x8, x9
   1a23c:	mul	x9, x10, x9
   1a240:	subs	x8, x8, x9
   1a244:	cmp	x8, #0x0
   1a248:	cset	w11, ne  // ne = any
   1a24c:	str	w11, [sp, #4]
   1a250:	ldr	w8, [sp, #4]
   1a254:	tbnz	w8, #0, 1a25c <hash_delete@@Base+0x2a8>
   1a258:	b	1a290 <hash_delete@@Base+0x2dc>
   1a25c:	ldr	x8, [sp, #16]
   1a260:	add	x8, x8, #0x1
   1a264:	str	x8, [sp, #16]
   1a268:	ldr	x8, [sp, #16]
   1a26c:	mov	x9, #0x4                   	// #4
   1a270:	mul	x8, x9, x8
   1a274:	ldr	x9, [sp, #8]
   1a278:	add	x8, x9, x8
   1a27c:	str	x8, [sp, #8]
   1a280:	ldr	x8, [sp, #16]
   1a284:	add	x8, x8, #0x1
   1a288:	str	x8, [sp, #16]
   1a28c:	b	1a218 <hash_delete@@Base+0x264>
   1a290:	ldr	x8, [sp, #24]
   1a294:	ldr	x9, [sp, #16]
   1a298:	udiv	x10, x8, x9
   1a29c:	mul	x9, x10, x9
   1a2a0:	subs	x8, x8, x9
   1a2a4:	mov	w11, wzr
   1a2a8:	mov	w12, #0x1                   	// #1
   1a2ac:	cmp	x8, #0x0
   1a2b0:	csel	w11, w12, w11, ne  // ne = any
   1a2b4:	cmp	w11, #0x0
   1a2b8:	cset	w11, ne  // ne = any
   1a2bc:	and	w0, w11, #0x1
   1a2c0:	add	sp, sp, #0x20
   1a2c4:	ret
   1a2c8:	sub	sp, sp, #0x10
   1a2cc:	mov	x8, xzr
   1a2d0:	str	x0, [sp, #8]
   1a2d4:	str	x1, [sp]
   1a2d8:	ldr	x9, [sp]
   1a2dc:	str	x8, [x9]
   1a2e0:	ldr	x8, [sp, #8]
   1a2e4:	ldr	x8, [x8, #72]
   1a2e8:	ldr	x9, [sp]
   1a2ec:	str	x8, [x9, #8]
   1a2f0:	ldr	x8, [sp]
   1a2f4:	ldr	x9, [sp, #8]
   1a2f8:	str	x8, [x9, #72]
   1a2fc:	add	sp, sp, #0x10
   1a300:	ret
   1a304:	sub	sp, sp, #0x50
   1a308:	stp	x29, x30, [sp, #64]
   1a30c:	add	x29, sp, #0x40
   1a310:	mov	x8, #0x40                  	// #64
   1a314:	stur	x0, [x29, #-16]
   1a318:	stur	x1, [x29, #-24]
   1a31c:	str	x2, [sp, #32]
   1a320:	str	x3, [sp, #24]
   1a324:	str	x4, [sp, #16]
   1a328:	mov	x0, x8
   1a32c:	bl	af10 <malloc@plt>
   1a330:	str	x0, [sp, #8]
   1a334:	ldr	x8, [sp, #8]
   1a338:	cbnz	x8, 1a348 <hash_delete@@Base+0x394>
   1a33c:	mov	x8, xzr
   1a340:	stur	x8, [x29, #-8]
   1a344:	b	1a3dc <hash_delete@@Base+0x428>
   1a348:	ldur	x8, [x29, #-16]
   1a34c:	ldr	x9, [sp, #8]
   1a350:	str	x8, [x9]
   1a354:	ldur	x8, [x29, #-24]
   1a358:	ldr	x9, [sp, #8]
   1a35c:	str	x8, [x9, #8]
   1a360:	ldr	x8, [sp, #24]
   1a364:	ldr	x9, [sp, #8]
   1a368:	str	x8, [x9, #16]
   1a36c:	ldr	x8, [sp, #16]
   1a370:	ldr	x9, [sp, #8]
   1a374:	str	x8, [x9, #24]
   1a378:	ldr	x8, [sp, #32]
   1a37c:	ldr	x9, [sp, #8]
   1a380:	str	x8, [x9, #32]
   1a384:	ldr	x8, [sp, #8]
   1a388:	mov	x9, #0xb                   	// #11
   1a38c:	str	x9, [x8, #48]
   1a390:	ldr	x8, [sp, #8]
   1a394:	ldr	x0, [x8, #48]
   1a398:	mov	x1, #0x8                   	// #8
   1a39c:	bl	b2e0 <calloc@plt>
   1a3a0:	ldr	x8, [sp, #8]
   1a3a4:	str	x0, [x8, #40]
   1a3a8:	ldr	x8, [sp, #8]
   1a3ac:	ldr	x8, [x8, #40]
   1a3b0:	cbnz	x8, 1a3b8 <hash_delete@@Base+0x404>
   1a3b4:	b	1a3cc <hash_delete@@Base+0x418>
   1a3b8:	ldr	x8, [sp, #8]
   1a3bc:	str	xzr, [x8, #56]
   1a3c0:	ldr	x8, [sp, #8]
   1a3c4:	stur	x8, [x29, #-8]
   1a3c8:	b	1a3dc <hash_delete@@Base+0x428>
   1a3cc:	ldr	x0, [sp, #8]
   1a3d0:	bl	a930 <free@plt>
   1a3d4:	mov	x8, xzr
   1a3d8:	stur	x8, [x29, #-8]
   1a3dc:	ldur	x0, [x29, #-8]
   1a3e0:	ldp	x29, x30, [sp, #64]
   1a3e4:	add	sp, sp, #0x50
   1a3e8:	ret
   1a3ec:	sub	sp, sp, #0x10
   1a3f0:	str	x0, [sp, #8]
   1a3f4:	ldr	x8, [sp, #8]
   1a3f8:	ldr	x0, [x8, #56]
   1a3fc:	add	sp, sp, #0x10
   1a400:	ret
   1a404:	sub	sp, sp, #0x60
   1a408:	stp	x29, x30, [sp, #80]
   1a40c:	add	x29, sp, #0x50
   1a410:	stur	x0, [x29, #-16]
   1a414:	stur	x1, [x29, #-24]
   1a418:	stur	x2, [x29, #-32]
   1a41c:	ldur	x8, [x29, #-16]
   1a420:	ldr	x8, [x8, #32]
   1a424:	cbz	x8, 1a440 <hash_delete@@Base+0x48c>
   1a428:	ldur	x8, [x29, #-16]
   1a42c:	ldr	x8, [x8, #32]
   1a430:	ldur	x0, [x29, #-24]
   1a434:	blr	x8
   1a438:	str	x0, [sp, #8]
   1a43c:	b	1a448 <hash_delete@@Base+0x494>
   1a440:	ldur	x8, [x29, #-24]
   1a444:	str	x8, [sp, #8]
   1a448:	ldr	x8, [sp, #8]
   1a44c:	str	x8, [sp, #40]
   1a450:	ldr	x8, [sp, #40]
   1a454:	ldur	x9, [x29, #-16]
   1a458:	ldr	x9, [x9, #48]
   1a45c:	udiv	x10, x8, x9
   1a460:	mul	x9, x10, x9
   1a464:	subs	x8, x8, x9
   1a468:	str	x8, [sp, #32]
   1a46c:	ldur	x8, [x29, #-16]
   1a470:	mov	x9, #0x8                   	// #8
   1a474:	ldr	x8, [x8, #8]
   1a478:	str	x8, [sp, #24]
   1a47c:	ldur	x8, [x29, #-16]
   1a480:	ldr	x8, [x8, #40]
   1a484:	ldr	x10, [sp, #32]
   1a488:	mul	x9, x9, x10
   1a48c:	add	x8, x8, x9
   1a490:	ldr	x8, [x8]
   1a494:	str	x8, [sp, #16]
   1a498:	ldr	x8, [sp, #16]
   1a49c:	cbz	x8, 1a51c <hash_delete@@Base+0x568>
   1a4a0:	ldr	x8, [sp, #16]
   1a4a4:	ldr	x8, [x8, #8]
   1a4a8:	ldr	x9, [sp, #40]
   1a4ac:	cmp	x8, x9
   1a4b0:	b.ne	1a50c <hash_delete@@Base+0x558>  // b.any
   1a4b4:	ldr	x8, [sp, #24]
   1a4b8:	cbz	x8, 1a4d8 <hash_delete@@Base+0x524>
   1a4bc:	ldr	x8, [sp, #24]
   1a4c0:	ldur	x0, [x29, #-24]
   1a4c4:	ldr	x9, [sp, #16]
   1a4c8:	ldr	x1, [x9, #16]
   1a4cc:	blr	x8
   1a4d0:	tbnz	w0, #0, 1a4ec <hash_delete@@Base+0x538>
   1a4d4:	b	1a50c <hash_delete@@Base+0x558>
   1a4d8:	ldur	x8, [x29, #-24]
   1a4dc:	ldr	x9, [sp, #16]
   1a4e0:	ldr	x9, [x9, #16]
   1a4e4:	cmp	x8, x9
   1a4e8:	b.ne	1a50c <hash_delete@@Base+0x558>  // b.any
   1a4ec:	ldr	x8, [sp, #16]
   1a4f0:	ldr	x8, [x8, #24]
   1a4f4:	ldur	x9, [x29, #-32]
   1a4f8:	str	x8, [x9]
   1a4fc:	mov	w10, #0x1                   	// #1
   1a500:	and	w10, w10, #0x1
   1a504:	sturb	w10, [x29, #-1]
   1a508:	b	1a528 <hash_delete@@Base+0x574>
   1a50c:	ldr	x8, [sp, #16]
   1a510:	ldr	x8, [x8]
   1a514:	str	x8, [sp, #16]
   1a518:	b	1a498 <hash_delete@@Base+0x4e4>
   1a51c:	mov	w8, wzr
   1a520:	and	w8, w8, #0x1
   1a524:	sturb	w8, [x29, #-1]
   1a528:	ldurb	w8, [x29, #-1]
   1a52c:	and	w0, w8, #0x1
   1a530:	ldp	x29, x30, [sp, #80]
   1a534:	add	sp, sp, #0x60
   1a538:	ret
   1a53c:	sub	sp, sp, #0x70
   1a540:	stp	x29, x30, [sp, #96]
   1a544:	add	x29, sp, #0x60
   1a548:	stur	x0, [x29, #-16]
   1a54c:	stur	x1, [x29, #-24]
   1a550:	stur	x2, [x29, #-32]
   1a554:	stur	x3, [x29, #-40]
   1a558:	ldur	x8, [x29, #-16]
   1a55c:	ldr	x8, [x8, #32]
   1a560:	cbz	x8, 1a57c <hash_delete@@Base+0x5c8>
   1a564:	ldur	x8, [x29, #-16]
   1a568:	ldr	x8, [x8, #32]
   1a56c:	ldur	x0, [x29, #-24]
   1a570:	blr	x8
   1a574:	str	x0, [sp, #8]
   1a578:	b	1a584 <hash_delete@@Base+0x5d0>
   1a57c:	ldur	x8, [x29, #-24]
   1a580:	str	x8, [sp, #8]
   1a584:	ldr	x8, [sp, #8]
   1a588:	str	x8, [sp, #48]
   1a58c:	ldr	x8, [sp, #48]
   1a590:	ldur	x9, [x29, #-16]
   1a594:	ldr	x9, [x9, #48]
   1a598:	udiv	x10, x8, x9
   1a59c:	mul	x9, x10, x9
   1a5a0:	subs	x8, x8, x9
   1a5a4:	str	x8, [sp, #40]
   1a5a8:	ldur	x8, [x29, #-16]
   1a5ac:	mov	x9, #0x8                   	// #8
   1a5b0:	ldr	x8, [x8, #8]
   1a5b4:	str	x8, [sp, #32]
   1a5b8:	ldur	x8, [x29, #-16]
   1a5bc:	ldr	x8, [x8, #40]
   1a5c0:	ldr	x10, [sp, #40]
   1a5c4:	mul	x9, x9, x10
   1a5c8:	add	x8, x8, x9
   1a5cc:	ldr	x8, [x8]
   1a5d0:	str	x8, [sp, #24]
   1a5d4:	ldr	x8, [sp, #24]
   1a5d8:	cbz	x8, 1a65c <hash_delete@@Base+0x6a8>
   1a5dc:	ldr	x8, [sp, #24]
   1a5e0:	ldr	x8, [x8, #8]
   1a5e4:	ldr	x9, [sp, #48]
   1a5e8:	cmp	x8, x9
   1a5ec:	b.ne	1a64c <hash_delete@@Base+0x698>  // b.any
   1a5f0:	ldr	x8, [sp, #32]
   1a5f4:	cbz	x8, 1a614 <hash_delete@@Base+0x660>
   1a5f8:	ldr	x8, [sp, #32]
   1a5fc:	ldur	x0, [x29, #-24]
   1a600:	ldr	x9, [sp, #24]
   1a604:	ldr	x1, [x9, #16]
   1a608:	blr	x8
   1a60c:	tbnz	w0, #0, 1a628 <hash_delete@@Base+0x674>
   1a610:	b	1a64c <hash_delete@@Base+0x698>
   1a614:	ldur	x8, [x29, #-24]
   1a618:	ldr	x9, [sp, #24]
   1a61c:	ldr	x9, [x9, #16]
   1a620:	cmp	x8, x9
   1a624:	b.ne	1a64c <hash_delete@@Base+0x698>  // b.any
   1a628:	ldr	x8, [sp, #24]
   1a62c:	ldr	x8, [x8, #24]
   1a630:	ldur	x9, [x29, #-40]
   1a634:	str	x8, [x9]
   1a638:	ldur	x8, [x29, #-32]
   1a63c:	ldr	x9, [sp, #24]
   1a640:	str	x8, [x9, #24]
   1a644:	stur	wzr, [x29, #-4]
   1a648:	b	1a700 <hash_delete@@Base+0x74c>
   1a64c:	ldr	x8, [sp, #24]
   1a650:	ldr	x8, [x8]
   1a654:	str	x8, [sp, #24]
   1a658:	b	1a5d4 <hash_delete@@Base+0x620>
   1a65c:	mov	x0, #0x20                  	// #32
   1a660:	bl	af10 <malloc@plt>
   1a664:	str	x0, [sp, #16]
   1a668:	ldr	x8, [sp, #16]
   1a66c:	cbnz	x8, 1a67c <hash_delete@@Base+0x6c8>
   1a670:	mov	w8, #0xffffffff            	// #-1
   1a674:	stur	w8, [x29, #-4]
   1a678:	b	1a700 <hash_delete@@Base+0x74c>
   1a67c:	ldur	x8, [x29, #-24]
   1a680:	ldr	x9, [sp, #16]
   1a684:	str	x8, [x9, #16]
   1a688:	ldur	x8, [x29, #-32]
   1a68c:	ldr	x9, [sp, #16]
   1a690:	str	x8, [x9, #24]
   1a694:	ldr	x8, [sp, #48]
   1a698:	ldr	x9, [sp, #16]
   1a69c:	mov	x10, #0x8                   	// #8
   1a6a0:	str	x8, [x9, #8]
   1a6a4:	ldur	x8, [x29, #-16]
   1a6a8:	ldr	x8, [x8, #40]
   1a6ac:	ldr	x9, [sp, #40]
   1a6b0:	mul	x9, x10, x9
   1a6b4:	add	x8, x8, x9
   1a6b8:	ldr	x8, [x8]
   1a6bc:	ldr	x9, [sp, #16]
   1a6c0:	str	x8, [x9]
   1a6c4:	ldr	x8, [sp, #16]
   1a6c8:	ldur	x9, [x29, #-16]
   1a6cc:	ldr	x9, [x9, #40]
   1a6d0:	ldr	x11, [sp, #40]
   1a6d4:	mul	x10, x10, x11
   1a6d8:	add	x9, x9, x10
   1a6dc:	str	x8, [x9]
   1a6e0:	ldur	x8, [x29, #-16]
   1a6e4:	ldr	x9, [x8, #56]
   1a6e8:	add	x9, x9, #0x1
   1a6ec:	str	x9, [x8, #56]
   1a6f0:	ldur	x0, [x29, #-16]
   1a6f4:	bl	1ab3c <hash_delete@@Base+0xb88>
   1a6f8:	mov	w12, #0x1                   	// #1
   1a6fc:	stur	w12, [x29, #-4]
   1a700:	ldur	w0, [x29, #-4]
   1a704:	ldp	x29, x30, [sp, #96]
   1a708:	add	sp, sp, #0x70
   1a70c:	ret
   1a710:	sub	sp, sp, #0x60
   1a714:	stp	x29, x30, [sp, #80]
   1a718:	add	x29, sp, #0x50
   1a71c:	stur	x0, [x29, #-16]
   1a720:	stur	x1, [x29, #-24]
   1a724:	stur	x2, [x29, #-32]
   1a728:	ldur	x8, [x29, #-16]
   1a72c:	ldr	x8, [x8, #32]
   1a730:	cbz	x8, 1a74c <hash_delete@@Base+0x798>
   1a734:	ldur	x8, [x29, #-16]
   1a738:	ldr	x8, [x8, #32]
   1a73c:	ldur	x0, [x29, #-24]
   1a740:	blr	x8
   1a744:	str	x0, [sp]
   1a748:	b	1a754 <hash_delete@@Base+0x7a0>
   1a74c:	ldur	x8, [x29, #-24]
   1a750:	str	x8, [sp]
   1a754:	ldr	x8, [sp]
   1a758:	str	x8, [sp, #40]
   1a75c:	ldr	x8, [sp, #40]
   1a760:	ldur	x9, [x29, #-16]
   1a764:	ldr	x9, [x9, #48]
   1a768:	udiv	x10, x8, x9
   1a76c:	mul	x9, x10, x9
   1a770:	subs	x8, x8, x9
   1a774:	str	x8, [sp, #32]
   1a778:	ldur	x8, [x29, #-16]
   1a77c:	mov	x9, #0x8                   	// #8
   1a780:	ldr	x8, [x8, #8]
   1a784:	str	x8, [sp, #24]
   1a788:	ldur	x8, [x29, #-16]
   1a78c:	ldr	x8, [x8, #40]
   1a790:	ldr	x10, [sp, #32]
   1a794:	mul	x9, x9, x10
   1a798:	add	x8, x8, x9
   1a79c:	str	x8, [sp, #16]
   1a7a0:	ldr	x8, [sp, #16]
   1a7a4:	ldr	x8, [x8]
   1a7a8:	cbz	x8, 1a87c <hash_delete@@Base+0x8c8>
   1a7ac:	ldr	x8, [sp, #16]
   1a7b0:	ldr	x8, [x8]
   1a7b4:	str	x8, [sp, #8]
   1a7b8:	ldr	x8, [sp, #8]
   1a7bc:	ldr	x8, [x8, #8]
   1a7c0:	ldr	x9, [sp, #40]
   1a7c4:	cmp	x8, x9
   1a7c8:	b.ne	1a86c <hash_delete@@Base+0x8b8>  // b.any
   1a7cc:	ldr	x8, [sp, #24]
   1a7d0:	cbz	x8, 1a7f0 <hash_delete@@Base+0x83c>
   1a7d4:	ldr	x8, [sp, #24]
   1a7d8:	ldur	x0, [x29, #-24]
   1a7dc:	ldr	x9, [sp, #8]
   1a7e0:	ldr	x1, [x9, #16]
   1a7e4:	blr	x8
   1a7e8:	tbnz	w0, #0, 1a804 <hash_delete@@Base+0x850>
   1a7ec:	b	1a86c <hash_delete@@Base+0x8b8>
   1a7f0:	ldur	x8, [x29, #-24]
   1a7f4:	ldr	x9, [sp, #8]
   1a7f8:	ldr	x9, [x9, #16]
   1a7fc:	cmp	x8, x9
   1a800:	b.ne	1a86c <hash_delete@@Base+0x8b8>  // b.any
   1a804:	ldr	x8, [sp, #8]
   1a808:	ldr	x8, [x8, #24]
   1a80c:	ldur	x9, [x29, #-32]
   1a810:	str	x8, [x9]
   1a814:	ldr	x8, [sp, #8]
   1a818:	ldr	x8, [x8]
   1a81c:	ldr	x9, [sp, #16]
   1a820:	str	x8, [x9]
   1a824:	ldur	x8, [x29, #-16]
   1a828:	ldr	x9, [x8, #56]
   1a82c:	subs	x9, x9, #0x1
   1a830:	str	x9, [x8, #56]
   1a834:	ldur	x8, [x29, #-16]
   1a838:	ldr	x8, [x8, #16]
   1a83c:	cbz	x8, 1a854 <hash_delete@@Base+0x8a0>
   1a840:	ldur	x8, [x29, #-16]
   1a844:	ldr	x8, [x8, #16]
   1a848:	ldr	x9, [sp, #8]
   1a84c:	ldr	x0, [x9, #16]
   1a850:	blr	x8
   1a854:	ldr	x0, [sp, #8]
   1a858:	bl	a930 <free@plt>
   1a85c:	mov	w8, #0x1                   	// #1
   1a860:	and	w8, w8, #0x1
   1a864:	sturb	w8, [x29, #-1]
   1a868:	b	1a888 <hash_delete@@Base+0x8d4>
   1a86c:	ldr	x8, [sp, #16]
   1a870:	ldr	x8, [x8]
   1a874:	str	x8, [sp, #16]
   1a878:	b	1a7a0 <hash_delete@@Base+0x7ec>
   1a87c:	mov	w8, wzr
   1a880:	and	w8, w8, #0x1
   1a884:	sturb	w8, [x29, #-1]
   1a888:	ldurb	w8, [x29, #-1]
   1a88c:	and	w0, w8, #0x1
   1a890:	ldp	x29, x30, [sp, #80]
   1a894:	add	sp, sp, #0x60
   1a898:	ret
   1a89c:	sub	sp, sp, #0x50
   1a8a0:	stp	x29, x30, [sp, #64]
   1a8a4:	add	x29, sp, #0x40
   1a8a8:	stur	x0, [x29, #-8]
   1a8ac:	ldur	x8, [x29, #-8]
   1a8b0:	ldr	x8, [x8, #56]
   1a8b4:	cmp	x8, #0x0
   1a8b8:	cset	w9, ls  // ls = plast
   1a8bc:	tbnz	w9, #0, 1a980 <hash_delete@@Base+0x9cc>
   1a8c0:	ldur	x8, [x29, #-8]
   1a8c4:	ldr	x8, [x8, #16]
   1a8c8:	stur	x8, [x29, #-16]
   1a8cc:	ldur	x8, [x29, #-8]
   1a8d0:	ldr	x8, [x8, #24]
   1a8d4:	stur	x8, [x29, #-24]
   1a8d8:	ldur	x8, [x29, #-8]
   1a8dc:	ldr	x8, [x8, #40]
   1a8e0:	str	x8, [sp, #32]
   1a8e4:	ldur	x8, [x29, #-8]
   1a8e8:	ldr	x8, [x8, #48]
   1a8ec:	str	x8, [sp, #24]
   1a8f0:	ldr	x8, [sp, #24]
   1a8f4:	cmp	x8, #0x0
   1a8f8:	cset	w9, ls  // ls = plast
   1a8fc:	tbnz	w9, #0, 1a980 <hash_delete@@Base+0x9cc>
   1a900:	ldr	x8, [sp, #32]
   1a904:	ldr	x9, [sp, #24]
   1a908:	subs	x9, x9, #0x1
   1a90c:	str	x9, [sp, #24]
   1a910:	mov	x10, #0x8                   	// #8
   1a914:	mul	x9, x10, x9
   1a918:	add	x8, x8, x9
   1a91c:	ldr	x8, [x8]
   1a920:	str	x8, [sp, #16]
   1a924:	ldr	x8, [sp, #16]
   1a928:	cbz	x8, 1a97c <hash_delete@@Base+0x9c8>
   1a92c:	ldr	x8, [sp, #16]
   1a930:	ldr	x8, [x8]
   1a934:	str	x8, [sp, #8]
   1a938:	ldur	x8, [x29, #-24]
   1a93c:	cbz	x8, 1a950 <hash_delete@@Base+0x99c>
   1a940:	ldur	x8, [x29, #-24]
   1a944:	ldr	x9, [sp, #16]
   1a948:	ldr	x0, [x9, #24]
   1a94c:	blr	x8
   1a950:	ldur	x8, [x29, #-16]
   1a954:	cbz	x8, 1a968 <hash_delete@@Base+0x9b4>
   1a958:	ldur	x8, [x29, #-16]
   1a95c:	ldr	x9, [sp, #16]
   1a960:	ldr	x0, [x9, #16]
   1a964:	blr	x8
   1a968:	ldr	x0, [sp, #16]
   1a96c:	bl	a930 <free@plt>
   1a970:	ldr	x8, [sp, #8]
   1a974:	str	x8, [sp, #16]
   1a978:	b	1a924 <hash_delete@@Base+0x970>
   1a97c:	b	1a8f0 <hash_delete@@Base+0x93c>
   1a980:	ldur	x8, [x29, #-8]
   1a984:	ldr	x0, [x8, #40]
   1a988:	bl	a930 <free@plt>
   1a98c:	ldur	x0, [x29, #-8]
   1a990:	bl	a930 <free@plt>
   1a994:	ldp	x29, x30, [sp, #64]
   1a998:	add	sp, sp, #0x50
   1a99c:	ret
   1a9a0:	sub	sp, sp, #0x10
   1a9a4:	mov	x9, xzr
   1a9a8:	str	x0, [sp, #8]
   1a9ac:	ldr	x10, [sp, #8]
   1a9b0:	ldr	x10, [x10]
   1a9b4:	str	x10, [x8]
   1a9b8:	ldr	x10, [sp, #8]
   1a9bc:	str	x10, [x8, #8]
   1a9c0:	str	x9, [x8, #24]
   1a9c4:	str	xzr, [x8, #40]
   1a9c8:	ldr	x9, [sp, #8]
   1a9cc:	ldr	x9, [x9, #48]
   1a9d0:	str	x9, [x8, #48]
   1a9d4:	add	sp, sp, #0x10
   1a9d8:	ret
   1a9dc:	sub	sp, sp, #0x50
   1a9e0:	str	x0, [sp, #64]
   1a9e4:	str	x1, [sp, #56]
   1a9e8:	str	x2, [sp, #48]
   1a9ec:	ldr	x8, [sp, #64]
   1a9f0:	ldr	x8, [x8, #24]
   1a9f4:	cbz	x8, 1aa44 <hash_delete@@Base+0xa90>
   1a9f8:	ldr	x8, [sp, #64]
   1a9fc:	ldr	x8, [x8, #24]
   1aa00:	str	x8, [sp, #40]
   1aa04:	ldr	x8, [sp, #40]
   1aa08:	ldr	x8, [x8, #16]
   1aa0c:	ldr	x9, [sp, #56]
   1aa10:	str	x8, [x9]
   1aa14:	ldr	x8, [sp, #40]
   1aa18:	ldr	x8, [x8, #24]
   1aa1c:	ldr	x9, [sp, #48]
   1aa20:	str	x8, [x9]
   1aa24:	ldr	x8, [sp, #40]
   1aa28:	ldr	x8, [x8]
   1aa2c:	ldr	x9, [sp, #64]
   1aa30:	str	x8, [x9, #24]
   1aa34:	mov	w10, #0x1                   	// #1
   1aa38:	and	w10, w10, #0x1
   1aa3c:	strb	w10, [sp, #79]
   1aa40:	b	1ab1c <hash_delete@@Base+0xb68>
   1aa44:	ldr	x8, [sp, #64]
   1aa48:	ldr	x8, [x8, #48]
   1aa4c:	str	x8, [sp, #32]
   1aa50:	ldr	x8, [sp, #64]
   1aa54:	ldr	x8, [x8, #40]
   1aa58:	str	x8, [sp, #24]
   1aa5c:	ldr	x8, [sp, #24]
   1aa60:	ldr	x9, [sp, #32]
   1aa64:	cmp	x8, x9
   1aa68:	b.cs	1ab04 <hash_delete@@Base+0xb50>  // b.hs, b.nlast
   1aa6c:	ldr	x8, [sp, #64]
   1aa70:	ldr	x8, [x8, #8]
   1aa74:	ldr	x8, [x8, #40]
   1aa78:	str	x8, [sp, #16]
   1aa7c:	ldr	x8, [sp, #16]
   1aa80:	ldr	x9, [sp, #24]
   1aa84:	add	x10, x9, #0x1
   1aa88:	str	x10, [sp, #24]
   1aa8c:	mov	x10, #0x8                   	// #8
   1aa90:	mul	x9, x10, x9
   1aa94:	add	x8, x8, x9
   1aa98:	ldr	x8, [x8]
   1aa9c:	str	x8, [sp, #8]
   1aaa0:	ldr	x8, [sp, #8]
   1aaa4:	cbz	x8, 1aaf4 <hash_delete@@Base+0xb40>
   1aaa8:	ldr	x8, [sp, #8]
   1aaac:	ldr	x8, [x8, #16]
   1aab0:	ldr	x9, [sp, #56]
   1aab4:	str	x8, [x9]
   1aab8:	ldr	x8, [sp, #8]
   1aabc:	ldr	x8, [x8, #24]
   1aac0:	ldr	x9, [sp, #48]
   1aac4:	str	x8, [x9]
   1aac8:	ldr	x8, [sp, #8]
   1aacc:	ldr	x8, [x8]
   1aad0:	ldr	x9, [sp, #64]
   1aad4:	str	x8, [x9, #24]
   1aad8:	ldr	x8, [sp, #24]
   1aadc:	ldr	x9, [sp, #64]
   1aae0:	str	x8, [x9, #40]
   1aae4:	mov	w10, #0x1                   	// #1
   1aae8:	and	w10, w10, #0x1
   1aaec:	strb	w10, [sp, #79]
   1aaf0:	b	1ab1c <hash_delete@@Base+0xb68>
   1aaf4:	ldr	x8, [sp, #24]
   1aaf8:	ldr	x9, [sp, #32]
   1aafc:	cmp	x8, x9
   1ab00:	b.cc	1aa7c <hash_delete@@Base+0xac8>  // b.lo, b.ul, b.last
   1ab04:	ldr	x8, [sp, #32]
   1ab08:	ldr	x9, [sp, #64]
   1ab0c:	str	x8, [x9, #40]
   1ab10:	mov	w10, wzr
   1ab14:	and	w10, w10, #0x1
   1ab18:	strb	w10, [sp, #79]
   1ab1c:	ldrb	w8, [sp, #79]
   1ab20:	and	w0, w8, #0x1
   1ab24:	add	sp, sp, #0x50
   1ab28:	ret
   1ab2c:	sub	sp, sp, #0x10
   1ab30:	str	x0, [sp, #8]
   1ab34:	add	sp, sp, #0x10
   1ab38:	ret
   1ab3c:	sub	sp, sp, #0x30
   1ab40:	stp	x29, x30, [sp, #32]
   1ab44:	add	x29, sp, #0x20
   1ab48:	mov	x8, #0x2                   	// #2
   1ab4c:	stur	x0, [x29, #-8]
   1ab50:	ldur	x9, [x29, #-8]
   1ab54:	ldr	x9, [x9, #56]
   1ab58:	str	x9, [sp, #16]
   1ab5c:	ldr	x0, [sp, #16]
   1ab60:	ldr	x9, [sp, #16]
   1ab64:	udiv	x1, x9, x8
   1ab68:	bl	b190 <xsum@plt>
   1ab6c:	str	x0, [sp, #8]
   1ab70:	ldr	x8, [sp, #8]
   1ab74:	ldur	x9, [x29, #-8]
   1ab78:	ldr	x9, [x9, #48]
   1ab7c:	cmp	x8, x9
   1ab80:	b.ls	1ab90 <hash_delete@@Base+0xbdc>  // b.plast
   1ab84:	ldur	x0, [x29, #-8]
   1ab88:	ldr	x1, [sp, #8]
   1ab8c:	bl	1ab9c <hash_delete@@Base+0xbe8>
   1ab90:	ldp	x29, x30, [sp, #32]
   1ab94:	add	sp, sp, #0x30
   1ab98:	ret
   1ab9c:	sub	sp, sp, #0x60
   1aba0:	stp	x29, x30, [sp, #80]
   1aba4:	add	x29, sp, #0x50
   1aba8:	stur	x0, [x29, #-8]
   1abac:	stur	x1, [x29, #-16]
   1abb0:	ldur	x0, [x29, #-16]
   1abb4:	bl	1ad20 <hash_delete@@Base+0xd6c>
   1abb8:	stur	x0, [x29, #-24]
   1abbc:	ldur	x8, [x29, #-24]
   1abc0:	ldur	x9, [x29, #-8]
   1abc4:	ldr	x9, [x9, #48]
   1abc8:	cmp	x8, x9
   1abcc:	b.ls	1ad10 <hash_delete@@Base+0xd5c>  // b.plast
   1abd0:	ldur	x8, [x29, #-8]
   1abd4:	ldr	x8, [x8, #40]
   1abd8:	stur	x8, [x29, #-32]
   1abdc:	ldur	x8, [x29, #-24]
   1abe0:	mov	x9, #0x1fffffffffffffff    	// #2305843009213693951
   1abe4:	cmp	x8, x9
   1abe8:	b.hi	1ac00 <hash_delete@@Base+0xc4c>  // b.pmore
   1abec:	ldur	x8, [x29, #-24]
   1abf0:	mov	x9, #0x8                   	// #8
   1abf4:	mul	x8, x8, x9
   1abf8:	str	x8, [sp]
   1abfc:	b	1ac08 <hash_delete@@Base+0xc54>
   1ac00:	mov	x8, #0xffffffffffffffff    	// #-1
   1ac04:	str	x8, [sp]
   1ac08:	ldr	x8, [sp]
   1ac0c:	mov	x9, #0xffffffffffffffff    	// #-1
   1ac10:	cmp	x8, x9
   1ac14:	b.ne	1ac1c <hash_delete@@Base+0xc68>  // b.any
   1ac18:	b	1ad14 <hash_delete@@Base+0xd60>
   1ac1c:	ldur	x0, [x29, #-24]
   1ac20:	mov	x1, #0x8                   	// #8
   1ac24:	bl	b2e0 <calloc@plt>
   1ac28:	str	x0, [sp, #40]
   1ac2c:	ldr	x8, [sp, #40]
   1ac30:	cbnz	x8, 1ac38 <hash_delete@@Base+0xc84>
   1ac34:	b	1ad14 <hash_delete@@Base+0xd60>
   1ac38:	ldur	x8, [x29, #-8]
   1ac3c:	ldr	x8, [x8, #48]
   1ac40:	str	x8, [sp, #32]
   1ac44:	ldr	x8, [sp, #32]
   1ac48:	cmp	x8, #0x0
   1ac4c:	cset	w9, ls  // ls = plast
   1ac50:	tbnz	w9, #0, 1acf0 <hash_delete@@Base+0xd3c>
   1ac54:	ldur	x8, [x29, #-32]
   1ac58:	ldr	x9, [sp, #32]
   1ac5c:	subs	x9, x9, #0x1
   1ac60:	str	x9, [sp, #32]
   1ac64:	mov	x10, #0x8                   	// #8
   1ac68:	mul	x9, x10, x9
   1ac6c:	add	x8, x8, x9
   1ac70:	ldr	x8, [x8]
   1ac74:	str	x8, [sp, #24]
   1ac78:	ldr	x8, [sp, #24]
   1ac7c:	cbz	x8, 1acec <hash_delete@@Base+0xd38>
   1ac80:	ldr	x8, [sp, #24]
   1ac84:	ldr	x8, [x8]
   1ac88:	str	x8, [sp, #16]
   1ac8c:	ldr	x8, [sp, #24]
   1ac90:	mov	x9, #0x8                   	// #8
   1ac94:	ldr	x8, [x8, #8]
   1ac98:	ldur	x10, [x29, #-24]
   1ac9c:	udiv	x11, x8, x10
   1aca0:	mul	x10, x11, x10
   1aca4:	subs	x8, x8, x10
   1aca8:	str	x8, [sp, #8]
   1acac:	ldr	x8, [sp, #40]
   1acb0:	ldr	x10, [sp, #8]
   1acb4:	mul	x10, x9, x10
   1acb8:	add	x8, x8, x10
   1acbc:	ldr	x8, [x8]
   1acc0:	ldr	x10, [sp, #24]
   1acc4:	str	x8, [x10]
   1acc8:	ldr	x8, [sp, #24]
   1accc:	ldr	x10, [sp, #40]
   1acd0:	ldr	x11, [sp, #8]
   1acd4:	mul	x9, x9, x11
   1acd8:	add	x9, x10, x9
   1acdc:	str	x8, [x9]
   1ace0:	ldr	x8, [sp, #16]
   1ace4:	str	x8, [sp, #24]
   1ace8:	b	1ac78 <hash_delete@@Base+0xcc4>
   1acec:	b	1ac44 <hash_delete@@Base+0xc90>
   1acf0:	ldr	x8, [sp, #40]
   1acf4:	ldur	x9, [x29, #-8]
   1acf8:	str	x8, [x9, #40]
   1acfc:	ldur	x8, [x29, #-24]
   1ad00:	ldur	x9, [x29, #-8]
   1ad04:	str	x8, [x9, #48]
   1ad08:	ldur	x0, [x29, #-32]
   1ad0c:	bl	a930 <free@plt>
   1ad10:	b	1ad14 <hash_delete@@Base+0xd60>
   1ad14:	ldp	x29, x30, [sp, #80]
   1ad18:	add	sp, sp, #0x60
   1ad1c:	ret
   1ad20:	sub	sp, sp, #0x20
   1ad24:	str	x0, [sp, #16]
   1ad28:	str	xzr, [sp, #8]
   1ad2c:	ldr	x8, [sp, #8]
   1ad30:	cmp	x8, #0xe8
   1ad34:	b.cs	1ad7c <hash_delete@@Base+0xdc8>  // b.hs, b.nlast
   1ad38:	ldr	x8, [sp, #8]
   1ad3c:	adrp	x9, 45000 <vasnprintf@@Base+0x2e4c>
   1ad40:	add	x9, x9, #0x9b8
   1ad44:	ldr	x8, [x9, x8, lsl #3]
   1ad48:	ldr	x9, [sp, #16]
   1ad4c:	cmp	x8, x9
   1ad50:	b.cc	1ad6c <hash_delete@@Base+0xdb8>  // b.lo, b.ul, b.last
   1ad54:	ldr	x8, [sp, #8]
   1ad58:	adrp	x9, 45000 <vasnprintf@@Base+0x2e4c>
   1ad5c:	add	x9, x9, #0x9b8
   1ad60:	ldr	x8, [x9, x8, lsl #3]
   1ad64:	str	x8, [sp, #24]
   1ad68:	b	1ad84 <hash_delete@@Base+0xdd0>
   1ad6c:	ldr	x8, [sp, #8]
   1ad70:	add	x8, x8, #0x1
   1ad74:	str	x8, [sp, #8]
   1ad78:	b	1ad2c <hash_delete@@Base+0xd78>
   1ad7c:	mov	x8, #0xffffffffffffffff    	// #-1
   1ad80:	str	x8, [sp, #24]
   1ad84:	ldr	x0, [sp, #24]
   1ad88:	add	sp, sp, #0x20
   1ad8c:	ret

000000000001ad90 <hash_pjw@@Base>:
   1ad90:	sub	sp, sp, #0x20
   1ad94:	str	x0, [sp, #24]
   1ad98:	str	x1, [sp, #16]
   1ad9c:	str	xzr, [sp]
   1ada0:	ldr	x8, [sp, #24]
   1ada4:	str	x8, [sp, #8]
   1ada8:	ldr	x8, [sp, #8]
   1adac:	ldrb	w9, [x8]
   1adb0:	cbz	w9, 1ade8 <hash_pjw@@Base+0x58>
   1adb4:	ldr	x8, [sp, #8]
   1adb8:	ldrb	w9, [x8]
   1adbc:	mov	w8, w9
   1adc0:	ldr	x10, [sp]
   1adc4:	ldr	x11, [sp]
   1adc8:	lsr	x11, x11, #55
   1adcc:	orr	x10, x11, x10, lsl #9
   1add0:	add	x8, x8, x10
   1add4:	str	x8, [sp]
   1add8:	ldr	x8, [sp, #8]
   1addc:	add	x8, x8, #0x1
   1ade0:	str	x8, [sp, #8]
   1ade4:	b	1ada8 <hash_pjw@@Base+0x18>
   1ade8:	ldr	x8, [sp]
   1adec:	ldr	x9, [sp, #16]
   1adf0:	udiv	x10, x8, x9
   1adf4:	mul	x9, x10, x9
   1adf8:	subs	x0, x8, x9
   1adfc:	add	sp, sp, #0x20
   1ae00:	ret

000000000001ae04 <hash_pjw_bare@@Base>:
   1ae04:	sub	sp, sp, #0x30
   1ae08:	str	x0, [sp, #40]
   1ae0c:	str	x1, [sp, #32]
   1ae10:	ldr	x8, [sp, #40]
   1ae14:	str	x8, [sp, #24]
   1ae18:	str	xzr, [sp, #16]
   1ae1c:	str	wzr, [sp, #12]
   1ae20:	ldr	w8, [sp, #12]
   1ae24:	mov	w9, w8
   1ae28:	ldr	x10, [sp, #32]
   1ae2c:	cmp	x9, x10
   1ae30:	b.cs	1ae70 <hash_pjw_bare@@Base+0x6c>  // b.hs, b.nlast
   1ae34:	ldr	x8, [sp, #24]
   1ae38:	ldr	w9, [sp, #12]
   1ae3c:	mov	w10, w9
   1ae40:	ldrb	w9, [x8, x10]
   1ae44:	mov	w8, w9
   1ae48:	ldr	x10, [sp, #16]
   1ae4c:	ldr	x11, [sp, #16]
   1ae50:	lsr	x11, x11, #55
   1ae54:	orr	x10, x11, x10, lsl #9
   1ae58:	add	x8, x8, x10
   1ae5c:	str	x8, [sp, #16]
   1ae60:	ldr	w8, [sp, #12]
   1ae64:	add	w8, w8, #0x1
   1ae68:	str	w8, [sp, #12]
   1ae6c:	b	1ae20 <hash_pjw_bare@@Base+0x1c>
   1ae70:	ldr	x0, [sp, #16]
   1ae74:	add	sp, sp, #0x30
   1ae78:	ret
   1ae7c:	sub	sp, sp, #0x40
   1ae80:	stp	x29, x30, [sp, #48]
   1ae84:	add	x29, sp, #0x30
   1ae88:	mov	x8, #0x38                  	// #56
   1ae8c:	stur	x0, [x29, #-16]
   1ae90:	str	x1, [sp, #24]
   1ae94:	str	x2, [sp, #16]
   1ae98:	str	x3, [sp, #8]
   1ae9c:	mov	x0, x8
   1aea0:	bl	af10 <malloc@plt>
   1aea4:	str	x0, [sp]
   1aea8:	ldr	x8, [sp]
   1aeac:	cbnz	x8, 1aebc <hash_pjw_bare@@Base+0xb8>
   1aeb0:	mov	x8, xzr
   1aeb4:	stur	x8, [x29, #-8]
   1aeb8:	b	1af44 <hash_pjw_bare@@Base+0x140>
   1aebc:	ldur	x8, [x29, #-16]
   1aec0:	ldr	x9, [sp]
   1aec4:	str	x8, [x9]
   1aec8:	ldr	x8, [sp, #24]
   1aecc:	ldr	x9, [sp]
   1aed0:	str	x8, [x9, #8]
   1aed4:	ldr	x8, [sp, #8]
   1aed8:	ldr	x9, [sp]
   1aedc:	str	x8, [x9, #16]
   1aee0:	ldr	x8, [sp, #16]
   1aee4:	ldr	x9, [sp]
   1aee8:	str	x8, [x9, #24]
   1aeec:	ldr	x8, [sp]
   1aef0:	mov	x9, #0xb                   	// #11
   1aef4:	str	x9, [x8, #40]
   1aef8:	ldr	x8, [sp]
   1aefc:	ldr	x0, [x8, #40]
   1af00:	mov	x1, #0x8                   	// #8
   1af04:	bl	b2e0 <calloc@plt>
   1af08:	ldr	x8, [sp]
   1af0c:	str	x0, [x8, #32]
   1af10:	ldr	x8, [sp]
   1af14:	ldr	x8, [x8, #32]
   1af18:	cbnz	x8, 1af20 <hash_pjw_bare@@Base+0x11c>
   1af1c:	b	1af34 <hash_pjw_bare@@Base+0x130>
   1af20:	ldr	x8, [sp]
   1af24:	str	xzr, [x8, #48]
   1af28:	ldr	x8, [sp]
   1af2c:	stur	x8, [x29, #-8]
   1af30:	b	1af44 <hash_pjw_bare@@Base+0x140>
   1af34:	ldr	x0, [sp]
   1af38:	bl	a930 <free@plt>
   1af3c:	mov	x8, xzr
   1af40:	stur	x8, [x29, #-8]
   1af44:	ldur	x0, [x29, #-8]
   1af48:	ldp	x29, x30, [sp, #48]
   1af4c:	add	sp, sp, #0x40
   1af50:	ret
   1af54:	sub	sp, sp, #0x10
   1af58:	str	x0, [sp, #8]
   1af5c:	ldr	x8, [sp, #8]
   1af60:	ldr	x0, [x8, #48]
   1af64:	add	sp, sp, #0x10
   1af68:	ret
   1af6c:	sub	sp, sp, #0x50
   1af70:	stp	x29, x30, [sp, #64]
   1af74:	add	x29, sp, #0x40
   1af78:	stur	x0, [x29, #-16]
   1af7c:	stur	x1, [x29, #-24]
   1af80:	ldur	x8, [x29, #-16]
   1af84:	ldr	x8, [x8, #24]
   1af88:	cbz	x8, 1afa4 <hash_pjw_bare@@Base+0x1a0>
   1af8c:	ldur	x8, [x29, #-16]
   1af90:	ldr	x8, [x8, #24]
   1af94:	ldur	x0, [x29, #-24]
   1af98:	blr	x8
   1af9c:	str	x0, [sp]
   1afa0:	b	1afac <hash_pjw_bare@@Base+0x1a8>
   1afa4:	ldur	x8, [x29, #-24]
   1afa8:	str	x8, [sp]
   1afac:	ldr	x8, [sp]
   1afb0:	str	x8, [sp, #32]
   1afb4:	ldr	x8, [sp, #32]
   1afb8:	ldur	x9, [x29, #-16]
   1afbc:	ldr	x9, [x9, #40]
   1afc0:	udiv	x10, x8, x9
   1afc4:	mul	x9, x10, x9
   1afc8:	subs	x8, x8, x9
   1afcc:	str	x8, [sp, #24]
   1afd0:	ldur	x8, [x29, #-16]
   1afd4:	mov	x9, #0x8                   	// #8
   1afd8:	ldr	x8, [x8, #8]
   1afdc:	str	x8, [sp, #16]
   1afe0:	ldur	x8, [x29, #-16]
   1afe4:	ldr	x8, [x8, #32]
   1afe8:	ldr	x10, [sp, #24]
   1afec:	mul	x9, x9, x10
   1aff0:	add	x8, x8, x9
   1aff4:	ldr	x8, [x8]
   1aff8:	str	x8, [sp, #8]
   1affc:	ldr	x8, [sp, #8]
   1b000:	cbz	x8, 1b070 <hash_pjw_bare@@Base+0x26c>
   1b004:	ldr	x8, [sp, #8]
   1b008:	ldr	x8, [x8, #8]
   1b00c:	ldr	x9, [sp, #32]
   1b010:	cmp	x8, x9
   1b014:	b.ne	1b060 <hash_pjw_bare@@Base+0x25c>  // b.any
   1b018:	ldr	x8, [sp, #16]
   1b01c:	cbz	x8, 1b03c <hash_pjw_bare@@Base+0x238>
   1b020:	ldr	x8, [sp, #16]
   1b024:	ldur	x0, [x29, #-24]
   1b028:	ldr	x9, [sp, #8]
   1b02c:	ldr	x1, [x9, #16]
   1b030:	blr	x8
   1b034:	tbnz	w0, #0, 1b050 <hash_pjw_bare@@Base+0x24c>
   1b038:	b	1b060 <hash_pjw_bare@@Base+0x25c>
   1b03c:	ldur	x8, [x29, #-24]
   1b040:	ldr	x9, [sp, #8]
   1b044:	ldr	x9, [x9, #16]
   1b048:	cmp	x8, x9
   1b04c:	b.ne	1b060 <hash_pjw_bare@@Base+0x25c>  // b.any
   1b050:	mov	w8, #0x1                   	// #1
   1b054:	and	w8, w8, #0x1
   1b058:	sturb	w8, [x29, #-1]
   1b05c:	b	1b07c <hash_pjw_bare@@Base+0x278>
   1b060:	ldr	x8, [sp, #8]
   1b064:	ldr	x8, [x8]
   1b068:	str	x8, [sp, #8]
   1b06c:	b	1affc <hash_pjw_bare@@Base+0x1f8>
   1b070:	mov	w8, wzr
   1b074:	and	w8, w8, #0x1
   1b078:	sturb	w8, [x29, #-1]
   1b07c:	ldurb	w8, [x29, #-1]
   1b080:	and	w0, w8, #0x1
   1b084:	ldp	x29, x30, [sp, #64]
   1b088:	add	sp, sp, #0x50
   1b08c:	ret
   1b090:	sub	sp, sp, #0x60
   1b094:	stp	x29, x30, [sp, #80]
   1b098:	add	x29, sp, #0x50
   1b09c:	stur	x0, [x29, #-16]
   1b0a0:	stur	x1, [x29, #-24]
   1b0a4:	ldur	x8, [x29, #-16]
   1b0a8:	ldr	x8, [x8, #24]
   1b0ac:	cbz	x8, 1b0c8 <hash_pjw_bare@@Base+0x2c4>
   1b0b0:	ldur	x8, [x29, #-16]
   1b0b4:	ldr	x8, [x8, #24]
   1b0b8:	ldur	x0, [x29, #-24]
   1b0bc:	blr	x8
   1b0c0:	str	x0, [sp, #8]
   1b0c4:	b	1b0d0 <hash_pjw_bare@@Base+0x2cc>
   1b0c8:	ldur	x8, [x29, #-24]
   1b0cc:	str	x8, [sp, #8]
   1b0d0:	ldr	x8, [sp, #8]
   1b0d4:	stur	x8, [x29, #-32]
   1b0d8:	ldur	x8, [x29, #-32]
   1b0dc:	ldur	x9, [x29, #-16]
   1b0e0:	ldr	x9, [x9, #40]
   1b0e4:	udiv	x10, x8, x9
   1b0e8:	mul	x9, x10, x9
   1b0ec:	subs	x8, x8, x9
   1b0f0:	str	x8, [sp, #40]
   1b0f4:	ldur	x8, [x29, #-16]
   1b0f8:	mov	x9, #0x8                   	// #8
   1b0fc:	ldr	x8, [x8, #8]
   1b100:	str	x8, [sp, #32]
   1b104:	ldur	x8, [x29, #-16]
   1b108:	ldr	x8, [x8, #32]
   1b10c:	ldr	x10, [sp, #40]
   1b110:	mul	x9, x9, x10
   1b114:	add	x8, x8, x9
   1b118:	ldr	x8, [x8]
   1b11c:	str	x8, [sp, #24]
   1b120:	ldr	x8, [sp, #24]
   1b124:	cbz	x8, 1b18c <hash_pjw_bare@@Base+0x388>
   1b128:	ldr	x8, [sp, #24]
   1b12c:	ldr	x8, [x8, #8]
   1b130:	ldur	x9, [x29, #-32]
   1b134:	cmp	x8, x9
   1b138:	b.ne	1b17c <hash_pjw_bare@@Base+0x378>  // b.any
   1b13c:	ldr	x8, [sp, #32]
   1b140:	cbz	x8, 1b160 <hash_pjw_bare@@Base+0x35c>
   1b144:	ldr	x8, [sp, #32]
   1b148:	ldur	x0, [x29, #-24]
   1b14c:	ldr	x9, [sp, #24]
   1b150:	ldr	x1, [x9, #16]
   1b154:	blr	x8
   1b158:	tbnz	w0, #0, 1b174 <hash_pjw_bare@@Base+0x370>
   1b15c:	b	1b17c <hash_pjw_bare@@Base+0x378>
   1b160:	ldur	x8, [x29, #-24]
   1b164:	ldr	x9, [sp, #24]
   1b168:	ldr	x9, [x9, #16]
   1b16c:	cmp	x8, x9
   1b170:	b.ne	1b17c <hash_pjw_bare@@Base+0x378>  // b.any
   1b174:	stur	wzr, [x29, #-4]
   1b178:	b	1b224 <hash_pjw_bare@@Base+0x420>
   1b17c:	ldr	x8, [sp, #24]
   1b180:	ldr	x8, [x8]
   1b184:	str	x8, [sp, #24]
   1b188:	b	1b120 <hash_pjw_bare@@Base+0x31c>
   1b18c:	mov	x0, #0x18                  	// #24
   1b190:	bl	af10 <malloc@plt>
   1b194:	str	x0, [sp, #16]
   1b198:	ldr	x8, [sp, #16]
   1b19c:	cbnz	x8, 1b1ac <hash_pjw_bare@@Base+0x3a8>
   1b1a0:	mov	w8, #0xffffffff            	// #-1
   1b1a4:	stur	w8, [x29, #-4]
   1b1a8:	b	1b224 <hash_pjw_bare@@Base+0x420>
   1b1ac:	ldur	x8, [x29, #-24]
   1b1b0:	ldr	x9, [sp, #16]
   1b1b4:	str	x8, [x9, #16]
   1b1b8:	ldur	x8, [x29, #-32]
   1b1bc:	ldr	x9, [sp, #16]
   1b1c0:	mov	x10, #0x8                   	// #8
   1b1c4:	str	x8, [x9, #8]
   1b1c8:	ldur	x8, [x29, #-16]
   1b1cc:	ldr	x8, [x8, #32]
   1b1d0:	ldr	x9, [sp, #40]
   1b1d4:	mul	x9, x10, x9
   1b1d8:	add	x8, x8, x9
   1b1dc:	ldr	x8, [x8]
   1b1e0:	ldr	x9, [sp, #16]
   1b1e4:	str	x8, [x9]
   1b1e8:	ldr	x8, [sp, #16]
   1b1ec:	ldur	x9, [x29, #-16]
   1b1f0:	ldr	x9, [x9, #32]
   1b1f4:	ldr	x11, [sp, #40]
   1b1f8:	mul	x10, x10, x11
   1b1fc:	add	x9, x9, x10
   1b200:	str	x8, [x9]
   1b204:	ldur	x8, [x29, #-16]
   1b208:	ldr	x9, [x8, #48]
   1b20c:	add	x9, x9, #0x1
   1b210:	str	x9, [x8, #48]
   1b214:	ldur	x0, [x29, #-16]
   1b218:	bl	1b604 <hash_pjw_bare@@Base+0x800>
   1b21c:	mov	w12, #0x1                   	// #1
   1b220:	stur	w12, [x29, #-4]
   1b224:	ldur	w0, [x29, #-4]
   1b228:	ldp	x29, x30, [sp, #80]
   1b22c:	add	sp, sp, #0x60
   1b230:	ret
   1b234:	sub	sp, sp, #0x60
   1b238:	stp	x29, x30, [sp, #80]
   1b23c:	add	x29, sp, #0x50
   1b240:	stur	x0, [x29, #-16]
   1b244:	stur	x1, [x29, #-24]
   1b248:	ldur	x8, [x29, #-16]
   1b24c:	ldr	x8, [x8, #24]
   1b250:	cbz	x8, 1b26c <hash_pjw_bare@@Base+0x468>
   1b254:	ldur	x8, [x29, #-16]
   1b258:	ldr	x8, [x8, #24]
   1b25c:	ldur	x0, [x29, #-24]
   1b260:	blr	x8
   1b264:	str	x0, [sp, #8]
   1b268:	b	1b274 <hash_pjw_bare@@Base+0x470>
   1b26c:	ldur	x8, [x29, #-24]
   1b270:	str	x8, [sp, #8]
   1b274:	ldr	x8, [sp, #8]
   1b278:	stur	x8, [x29, #-32]
   1b27c:	ldur	x8, [x29, #-32]
   1b280:	ldur	x9, [x29, #-16]
   1b284:	ldr	x9, [x9, #40]
   1b288:	udiv	x10, x8, x9
   1b28c:	mul	x9, x10, x9
   1b290:	subs	x8, x8, x9
   1b294:	str	x8, [sp, #40]
   1b298:	ldur	x8, [x29, #-16]
   1b29c:	mov	x9, #0x8                   	// #8
   1b2a0:	ldr	x8, [x8, #8]
   1b2a4:	str	x8, [sp, #32]
   1b2a8:	ldur	x8, [x29, #-16]
   1b2ac:	ldr	x8, [x8, #32]
   1b2b0:	ldr	x10, [sp, #40]
   1b2b4:	mul	x9, x9, x10
   1b2b8:	add	x8, x8, x9
   1b2bc:	str	x8, [sp, #24]
   1b2c0:	ldr	x8, [sp, #24]
   1b2c4:	ldr	x8, [x8]
   1b2c8:	cbz	x8, 1b38c <hash_pjw_bare@@Base+0x588>
   1b2cc:	ldr	x8, [sp, #24]
   1b2d0:	ldr	x8, [x8]
   1b2d4:	str	x8, [sp, #16]
   1b2d8:	ldr	x8, [sp, #16]
   1b2dc:	ldr	x8, [x8, #8]
   1b2e0:	ldur	x9, [x29, #-32]
   1b2e4:	cmp	x8, x9
   1b2e8:	b.ne	1b37c <hash_pjw_bare@@Base+0x578>  // b.any
   1b2ec:	ldr	x8, [sp, #32]
   1b2f0:	cbz	x8, 1b310 <hash_pjw_bare@@Base+0x50c>
   1b2f4:	ldr	x8, [sp, #32]
   1b2f8:	ldur	x0, [x29, #-24]
   1b2fc:	ldr	x9, [sp, #16]
   1b300:	ldr	x1, [x9, #16]
   1b304:	blr	x8
   1b308:	tbnz	w0, #0, 1b324 <hash_pjw_bare@@Base+0x520>
   1b30c:	b	1b37c <hash_pjw_bare@@Base+0x578>
   1b310:	ldur	x8, [x29, #-24]
   1b314:	ldr	x9, [sp, #16]
   1b318:	ldr	x9, [x9, #16]
   1b31c:	cmp	x8, x9
   1b320:	b.ne	1b37c <hash_pjw_bare@@Base+0x578>  // b.any
   1b324:	ldr	x8, [sp, #16]
   1b328:	ldr	x8, [x8]
   1b32c:	ldr	x9, [sp, #24]
   1b330:	str	x8, [x9]
   1b334:	ldur	x8, [x29, #-16]
   1b338:	ldr	x9, [x8, #48]
   1b33c:	subs	x9, x9, #0x1
   1b340:	str	x9, [x8, #48]
   1b344:	ldur	x8, [x29, #-16]
   1b348:	ldr	x8, [x8, #16]
   1b34c:	cbz	x8, 1b364 <hash_pjw_bare@@Base+0x560>
   1b350:	ldur	x8, [x29, #-16]
   1b354:	ldr	x8, [x8, #16]
   1b358:	ldr	x9, [sp, #16]
   1b35c:	ldr	x0, [x9, #16]
   1b360:	blr	x8
   1b364:	ldr	x0, [sp, #16]
   1b368:	bl	a930 <free@plt>
   1b36c:	mov	w8, #0x1                   	// #1
   1b370:	and	w8, w8, #0x1
   1b374:	sturb	w8, [x29, #-1]
   1b378:	b	1b398 <hash_pjw_bare@@Base+0x594>
   1b37c:	ldr	x8, [sp, #24]
   1b380:	ldr	x8, [x8]
   1b384:	str	x8, [sp, #24]
   1b388:	b	1b2c0 <hash_pjw_bare@@Base+0x4bc>
   1b38c:	mov	w8, wzr
   1b390:	and	w8, w8, #0x1
   1b394:	sturb	w8, [x29, #-1]
   1b398:	ldurb	w8, [x29, #-1]
   1b39c:	and	w0, w8, #0x1
   1b3a0:	ldp	x29, x30, [sp, #80]
   1b3a4:	add	sp, sp, #0x60
   1b3a8:	ret
   1b3ac:	sub	sp, sp, #0x40
   1b3b0:	stp	x29, x30, [sp, #48]
   1b3b4:	add	x29, sp, #0x30
   1b3b8:	stur	x0, [x29, #-8]
   1b3bc:	ldur	x8, [x29, #-8]
   1b3c0:	ldr	x8, [x8, #48]
   1b3c4:	cmp	x8, #0x0
   1b3c8:	cset	w9, ls  // ls = plast
   1b3cc:	tbnz	w9, #0, 1b46c <hash_pjw_bare@@Base+0x668>
   1b3d0:	ldur	x8, [x29, #-8]
   1b3d4:	ldr	x8, [x8, #16]
   1b3d8:	stur	x8, [x29, #-16]
   1b3dc:	ldur	x8, [x29, #-8]
   1b3e0:	ldr	x8, [x8, #32]
   1b3e4:	str	x8, [sp, #24]
   1b3e8:	ldur	x8, [x29, #-8]
   1b3ec:	ldr	x8, [x8, #40]
   1b3f0:	str	x8, [sp, #16]
   1b3f4:	ldr	x8, [sp, #16]
   1b3f8:	cmp	x8, #0x0
   1b3fc:	cset	w9, ls  // ls = plast
   1b400:	tbnz	w9, #0, 1b46c <hash_pjw_bare@@Base+0x668>
   1b404:	ldr	x8, [sp, #24]
   1b408:	ldr	x9, [sp, #16]
   1b40c:	subs	x9, x9, #0x1
   1b410:	str	x9, [sp, #16]
   1b414:	mov	x10, #0x8                   	// #8
   1b418:	mul	x9, x10, x9
   1b41c:	add	x8, x8, x9
   1b420:	ldr	x8, [x8]
   1b424:	str	x8, [sp, #8]
   1b428:	ldr	x8, [sp, #8]
   1b42c:	cbz	x8, 1b468 <hash_pjw_bare@@Base+0x664>
   1b430:	ldr	x8, [sp, #8]
   1b434:	ldr	x8, [x8]
   1b438:	str	x8, [sp]
   1b43c:	ldur	x8, [x29, #-16]
   1b440:	cbz	x8, 1b454 <hash_pjw_bare@@Base+0x650>
   1b444:	ldur	x8, [x29, #-16]
   1b448:	ldr	x9, [sp, #8]
   1b44c:	ldr	x0, [x9, #16]
   1b450:	blr	x8
   1b454:	ldr	x0, [sp, #8]
   1b458:	bl	a930 <free@plt>
   1b45c:	ldr	x8, [sp]
   1b460:	str	x8, [sp, #8]
   1b464:	b	1b428 <hash_pjw_bare@@Base+0x624>
   1b468:	b	1b3f4 <hash_pjw_bare@@Base+0x5f0>
   1b46c:	ldur	x8, [x29, #-8]
   1b470:	ldr	x0, [x8, #32]
   1b474:	bl	a930 <free@plt>
   1b478:	ldur	x0, [x29, #-8]
   1b47c:	bl	a930 <free@plt>
   1b480:	ldp	x29, x30, [sp, #48]
   1b484:	add	sp, sp, #0x40
   1b488:	ret
   1b48c:	sub	sp, sp, #0x10
   1b490:	mov	x9, xzr
   1b494:	str	x0, [sp, #8]
   1b498:	ldr	x10, [sp, #8]
   1b49c:	ldr	x10, [x10]
   1b4a0:	str	x10, [x8]
   1b4a4:	ldr	x10, [sp, #8]
   1b4a8:	str	x10, [x8, #8]
   1b4ac:	str	x9, [x8, #24]
   1b4b0:	str	xzr, [x8, #40]
   1b4b4:	ldr	x9, [sp, #8]
   1b4b8:	ldr	x9, [x9, #40]
   1b4bc:	str	x9, [x8, #48]
   1b4c0:	add	sp, sp, #0x10
   1b4c4:	ret
   1b4c8:	sub	sp, sp, #0x40
   1b4cc:	str	x0, [sp, #48]
   1b4d0:	str	x1, [sp, #40]
   1b4d4:	ldr	x8, [sp, #48]
   1b4d8:	ldr	x8, [x8, #24]
   1b4dc:	cbz	x8, 1b51c <hash_pjw_bare@@Base+0x718>
   1b4e0:	ldr	x8, [sp, #48]
   1b4e4:	ldr	x8, [x8, #24]
   1b4e8:	str	x8, [sp, #32]
   1b4ec:	ldr	x8, [sp, #32]
   1b4f0:	ldr	x8, [x8, #16]
   1b4f4:	ldr	x9, [sp, #40]
   1b4f8:	str	x8, [x9]
   1b4fc:	ldr	x8, [sp, #32]
   1b500:	ldr	x8, [x8]
   1b504:	ldr	x9, [sp, #48]
   1b508:	str	x8, [x9, #24]
   1b50c:	mov	w10, #0x1                   	// #1
   1b510:	and	w10, w10, #0x1
   1b514:	strb	w10, [sp, #63]
   1b518:	b	1b5e4 <hash_pjw_bare@@Base+0x7e0>
   1b51c:	ldr	x8, [sp, #48]
   1b520:	ldr	x8, [x8, #48]
   1b524:	str	x8, [sp, #24]
   1b528:	ldr	x8, [sp, #48]
   1b52c:	ldr	x8, [x8, #40]
   1b530:	str	x8, [sp, #16]
   1b534:	ldr	x8, [sp, #16]
   1b538:	ldr	x9, [sp, #24]
   1b53c:	cmp	x8, x9
   1b540:	b.cs	1b5cc <hash_pjw_bare@@Base+0x7c8>  // b.hs, b.nlast
   1b544:	ldr	x8, [sp, #48]
   1b548:	ldr	x8, [x8, #8]
   1b54c:	ldr	x8, [x8, #32]
   1b550:	str	x8, [sp, #8]
   1b554:	ldr	x8, [sp, #8]
   1b558:	ldr	x9, [sp, #16]
   1b55c:	add	x10, x9, #0x1
   1b560:	str	x10, [sp, #16]
   1b564:	mov	x10, #0x8                   	// #8
   1b568:	mul	x9, x10, x9
   1b56c:	add	x8, x8, x9
   1b570:	ldr	x8, [x8]
   1b574:	str	x8, [sp]
   1b578:	ldr	x8, [sp]
   1b57c:	cbz	x8, 1b5bc <hash_pjw_bare@@Base+0x7b8>
   1b580:	ldr	x8, [sp]
   1b584:	ldr	x8, [x8, #16]
   1b588:	ldr	x9, [sp, #40]
   1b58c:	str	x8, [x9]
   1b590:	ldr	x8, [sp]
   1b594:	ldr	x8, [x8]
   1b598:	ldr	x9, [sp, #48]
   1b59c:	str	x8, [x9, #24]
   1b5a0:	ldr	x8, [sp, #16]
   1b5a4:	ldr	x9, [sp, #48]
   1b5a8:	str	x8, [x9, #40]
   1b5ac:	mov	w10, #0x1                   	// #1
   1b5b0:	and	w10, w10, #0x1
   1b5b4:	strb	w10, [sp, #63]
   1b5b8:	b	1b5e4 <hash_pjw_bare@@Base+0x7e0>
   1b5bc:	ldr	x8, [sp, #16]
   1b5c0:	ldr	x9, [sp, #24]
   1b5c4:	cmp	x8, x9
   1b5c8:	b.cc	1b554 <hash_pjw_bare@@Base+0x750>  // b.lo, b.ul, b.last
   1b5cc:	ldr	x8, [sp, #24]
   1b5d0:	ldr	x9, [sp, #48]
   1b5d4:	str	x8, [x9, #40]
   1b5d8:	mov	w10, wzr
   1b5dc:	and	w10, w10, #0x1
   1b5e0:	strb	w10, [sp, #63]
   1b5e4:	ldrb	w8, [sp, #63]
   1b5e8:	and	w0, w8, #0x1
   1b5ec:	add	sp, sp, #0x40
   1b5f0:	ret
   1b5f4:	sub	sp, sp, #0x10
   1b5f8:	str	x0, [sp, #8]
   1b5fc:	add	sp, sp, #0x10
   1b600:	ret
   1b604:	sub	sp, sp, #0x30
   1b608:	stp	x29, x30, [sp, #32]
   1b60c:	add	x29, sp, #0x20
   1b610:	mov	x8, #0x2                   	// #2
   1b614:	stur	x0, [x29, #-8]
   1b618:	ldur	x9, [x29, #-8]
   1b61c:	ldr	x9, [x9, #48]
   1b620:	str	x9, [sp, #16]
   1b624:	ldr	x0, [sp, #16]
   1b628:	ldr	x9, [sp, #16]
   1b62c:	udiv	x1, x9, x8
   1b630:	bl	b190 <xsum@plt>
   1b634:	str	x0, [sp, #8]
   1b638:	ldr	x8, [sp, #8]
   1b63c:	ldur	x9, [x29, #-8]
   1b640:	ldr	x9, [x9, #40]
   1b644:	cmp	x8, x9
   1b648:	b.ls	1b658 <hash_pjw_bare@@Base+0x854>  // b.plast
   1b64c:	ldur	x0, [x29, #-8]
   1b650:	ldr	x1, [sp, #8]
   1b654:	bl	1b664 <hash_pjw_bare@@Base+0x860>
   1b658:	ldp	x29, x30, [sp, #32]
   1b65c:	add	sp, sp, #0x30
   1b660:	ret
   1b664:	sub	sp, sp, #0x60
   1b668:	stp	x29, x30, [sp, #80]
   1b66c:	add	x29, sp, #0x50
   1b670:	stur	x0, [x29, #-8]
   1b674:	stur	x1, [x29, #-16]
   1b678:	ldur	x0, [x29, #-16]
   1b67c:	bl	1b7e8 <hash_pjw_bare@@Base+0x9e4>
   1b680:	stur	x0, [x29, #-24]
   1b684:	ldur	x8, [x29, #-24]
   1b688:	ldur	x9, [x29, #-8]
   1b68c:	ldr	x9, [x9, #40]
   1b690:	cmp	x8, x9
   1b694:	b.ls	1b7d8 <hash_pjw_bare@@Base+0x9d4>  // b.plast
   1b698:	ldur	x8, [x29, #-8]
   1b69c:	ldr	x8, [x8, #32]
   1b6a0:	stur	x8, [x29, #-32]
   1b6a4:	ldur	x8, [x29, #-24]
   1b6a8:	mov	x9, #0x1fffffffffffffff    	// #2305843009213693951
   1b6ac:	cmp	x8, x9
   1b6b0:	b.hi	1b6c8 <hash_pjw_bare@@Base+0x8c4>  // b.pmore
   1b6b4:	ldur	x8, [x29, #-24]
   1b6b8:	mov	x9, #0x8                   	// #8
   1b6bc:	mul	x8, x8, x9
   1b6c0:	str	x8, [sp]
   1b6c4:	b	1b6d0 <hash_pjw_bare@@Base+0x8cc>
   1b6c8:	mov	x8, #0xffffffffffffffff    	// #-1
   1b6cc:	str	x8, [sp]
   1b6d0:	ldr	x8, [sp]
   1b6d4:	mov	x9, #0xffffffffffffffff    	// #-1
   1b6d8:	cmp	x8, x9
   1b6dc:	b.ne	1b6e4 <hash_pjw_bare@@Base+0x8e0>  // b.any
   1b6e0:	b	1b7dc <hash_pjw_bare@@Base+0x9d8>
   1b6e4:	ldur	x0, [x29, #-24]
   1b6e8:	mov	x1, #0x8                   	// #8
   1b6ec:	bl	b2e0 <calloc@plt>
   1b6f0:	str	x0, [sp, #40]
   1b6f4:	ldr	x8, [sp, #40]
   1b6f8:	cbnz	x8, 1b700 <hash_pjw_bare@@Base+0x8fc>
   1b6fc:	b	1b7dc <hash_pjw_bare@@Base+0x9d8>
   1b700:	ldur	x8, [x29, #-8]
   1b704:	ldr	x8, [x8, #40]
   1b708:	str	x8, [sp, #32]
   1b70c:	ldr	x8, [sp, #32]
   1b710:	cmp	x8, #0x0
   1b714:	cset	w9, ls  // ls = plast
   1b718:	tbnz	w9, #0, 1b7b8 <hash_pjw_bare@@Base+0x9b4>
   1b71c:	ldur	x8, [x29, #-32]
   1b720:	ldr	x9, [sp, #32]
   1b724:	subs	x9, x9, #0x1
   1b728:	str	x9, [sp, #32]
   1b72c:	mov	x10, #0x8                   	// #8
   1b730:	mul	x9, x10, x9
   1b734:	add	x8, x8, x9
   1b738:	ldr	x8, [x8]
   1b73c:	str	x8, [sp, #24]
   1b740:	ldr	x8, [sp, #24]
   1b744:	cbz	x8, 1b7b4 <hash_pjw_bare@@Base+0x9b0>
   1b748:	ldr	x8, [sp, #24]
   1b74c:	ldr	x8, [x8]
   1b750:	str	x8, [sp, #16]
   1b754:	ldr	x8, [sp, #24]
   1b758:	mov	x9, #0x8                   	// #8
   1b75c:	ldr	x8, [x8, #8]
   1b760:	ldur	x10, [x29, #-24]
   1b764:	udiv	x11, x8, x10
   1b768:	mul	x10, x11, x10
   1b76c:	subs	x8, x8, x10
   1b770:	str	x8, [sp, #8]
   1b774:	ldr	x8, [sp, #40]
   1b778:	ldr	x10, [sp, #8]
   1b77c:	mul	x10, x9, x10
   1b780:	add	x8, x8, x10
   1b784:	ldr	x8, [x8]
   1b788:	ldr	x10, [sp, #24]
   1b78c:	str	x8, [x10]
   1b790:	ldr	x8, [sp, #24]
   1b794:	ldr	x10, [sp, #40]
   1b798:	ldr	x11, [sp, #8]
   1b79c:	mul	x9, x9, x11
   1b7a0:	add	x9, x10, x9
   1b7a4:	str	x8, [x9]
   1b7a8:	ldr	x8, [sp, #16]
   1b7ac:	str	x8, [sp, #24]
   1b7b0:	b	1b740 <hash_pjw_bare@@Base+0x93c>
   1b7b4:	b	1b70c <hash_pjw_bare@@Base+0x908>
   1b7b8:	ldr	x8, [sp, #40]
   1b7bc:	ldur	x9, [x29, #-8]
   1b7c0:	str	x8, [x9, #32]
   1b7c4:	ldur	x8, [x29, #-24]
   1b7c8:	ldur	x9, [x29, #-8]
   1b7cc:	str	x8, [x9, #40]
   1b7d0:	ldur	x0, [x29, #-32]
   1b7d4:	bl	a930 <free@plt>
   1b7d8:	b	1b7dc <hash_pjw_bare@@Base+0x9d8>
   1b7dc:	ldp	x29, x30, [sp, #80]
   1b7e0:	add	sp, sp, #0x60
   1b7e4:	ret
   1b7e8:	sub	sp, sp, #0x20
   1b7ec:	str	x0, [sp, #16]
   1b7f0:	str	xzr, [sp, #8]
   1b7f4:	ldr	x8, [sp, #8]
   1b7f8:	cmp	x8, #0xe8
   1b7fc:	b.cs	1b844 <hash_pjw_bare@@Base+0xa40>  // b.hs, b.nlast
   1b800:	ldr	x8, [sp, #8]
   1b804:	adrp	x9, 46000 <vasnprintf@@Base+0x3e4c>
   1b808:	add	x9, x9, #0xf8
   1b80c:	ldr	x8, [x9, x8, lsl #3]
   1b810:	ldr	x9, [sp, #16]
   1b814:	cmp	x8, x9
   1b818:	b.cc	1b834 <hash_pjw_bare@@Base+0xa30>  // b.lo, b.ul, b.last
   1b81c:	ldr	x8, [sp, #8]
   1b820:	adrp	x9, 46000 <vasnprintf@@Base+0x3e4c>
   1b824:	add	x9, x9, #0xf8
   1b828:	ldr	x8, [x9, x8, lsl #3]
   1b82c:	str	x8, [sp, #24]
   1b830:	b	1b84c <hash_pjw_bare@@Base+0xa48>
   1b834:	ldr	x8, [sp, #8]
   1b838:	add	x8, x8, #0x1
   1b83c:	str	x8, [sp, #8]
   1b840:	b	1b7f4 <hash_pjw_bare@@Base+0x9f0>
   1b844:	mov	x8, #0xffffffffffffffff    	// #-1
   1b848:	str	x8, [sp, #24]
   1b84c:	ldr	x0, [sp, #24]
   1b850:	add	sp, sp, #0x20
   1b854:	ret

000000000001b858 <triple_hash@@Base>:
   1b858:	sub	sp, sp, #0x30
   1b85c:	stp	x29, x30, [sp, #32]
   1b860:	add	x29, sp, #0x20
   1b864:	stur	x0, [x29, #-8]
   1b868:	str	x1, [sp, #16]
   1b86c:	ldur	x8, [x29, #-8]
   1b870:	str	x8, [sp, #8]
   1b874:	ldr	x8, [sp, #8]
   1b878:	ldr	x0, [x8]
   1b87c:	ldr	x1, [sp, #16]
   1b880:	bl	b320 <hash_pjw@plt>
   1b884:	str	x0, [sp]
   1b888:	ldr	x8, [sp]
   1b88c:	ldr	x9, [sp, #8]
   1b890:	ldr	x9, [x9, #8]
   1b894:	eor	x8, x8, x9
   1b898:	ldr	x9, [sp, #16]
   1b89c:	udiv	x10, x8, x9
   1b8a0:	mul	x9, x10, x9
   1b8a4:	subs	x0, x8, x9
   1b8a8:	ldp	x29, x30, [sp, #32]
   1b8ac:	add	sp, sp, #0x30
   1b8b0:	ret

000000000001b8b4 <triple_hash_no_name@@Base>:
   1b8b4:	sub	sp, sp, #0x20
   1b8b8:	str	x0, [sp, #24]
   1b8bc:	str	x1, [sp, #16]
   1b8c0:	ldr	x8, [sp, #24]
   1b8c4:	str	x8, [sp, #8]
   1b8c8:	ldr	x8, [sp, #8]
   1b8cc:	ldr	x8, [x8, #8]
   1b8d0:	ldr	x9, [sp, #16]
   1b8d4:	udiv	x10, x8, x9
   1b8d8:	mul	x9, x10, x9
   1b8dc:	subs	x0, x8, x9
   1b8e0:	add	sp, sp, #0x20
   1b8e4:	ret

000000000001b8e8 <triple_compare@@Base>:
   1b8e8:	sub	sp, sp, #0x40
   1b8ec:	stp	x29, x30, [sp, #48]
   1b8f0:	add	x29, sp, #0x30
   1b8f4:	stur	x0, [x29, #-8]
   1b8f8:	stur	x1, [x29, #-16]
   1b8fc:	ldur	x8, [x29, #-8]
   1b900:	str	x8, [sp, #24]
   1b904:	ldur	x8, [x29, #-16]
   1b908:	str	x8, [sp, #16]
   1b90c:	ldr	x8, [sp, #24]
   1b910:	ldr	x8, [x8, #8]
   1b914:	ldr	x9, [sp, #16]
   1b918:	ldr	x9, [x9, #8]
   1b91c:	mov	w10, #0x0                   	// #0
   1b920:	cmp	x8, x9
   1b924:	str	w10, [sp, #12]
   1b928:	b.ne	1b964 <triple_compare@@Base+0x7c>  // b.any
   1b92c:	ldr	x8, [sp, #24]
   1b930:	ldr	x8, [x8, #16]
   1b934:	ldr	x9, [sp, #16]
   1b938:	ldr	x9, [x9, #16]
   1b93c:	mov	w10, #0x0                   	// #0
   1b940:	cmp	x8, x9
   1b944:	str	w10, [sp, #12]
   1b948:	b.ne	1b964 <triple_compare@@Base+0x7c>  // b.any
   1b94c:	ldr	x8, [sp, #24]
   1b950:	ldr	x0, [x8]
   1b954:	ldr	x8, [sp, #16]
   1b958:	ldr	x1, [x8]
   1b95c:	bl	b330 <same_name@plt>
   1b960:	str	w0, [sp, #12]
   1b964:	ldr	w8, [sp, #12]
   1b968:	mov	w9, wzr
   1b96c:	mov	w10, #0x1                   	// #1
   1b970:	tst	w8, #0x1
   1b974:	csel	w8, w10, w9, ne  // ne = any
   1b978:	cmp	w8, #0x0
   1b97c:	cset	w8, ne  // ne = any
   1b980:	and	w0, w8, #0x1
   1b984:	ldp	x29, x30, [sp, #48]
   1b988:	add	sp, sp, #0x40
   1b98c:	ret

000000000001b990 <triple_compare_ino_str@@Base>:
   1b990:	sub	sp, sp, #0x40
   1b994:	stp	x29, x30, [sp, #48]
   1b998:	add	x29, sp, #0x30
   1b99c:	stur	x0, [x29, #-8]
   1b9a0:	stur	x1, [x29, #-16]
   1b9a4:	ldur	x8, [x29, #-8]
   1b9a8:	str	x8, [sp, #24]
   1b9ac:	ldur	x8, [x29, #-16]
   1b9b0:	str	x8, [sp, #16]
   1b9b4:	ldr	x8, [sp, #24]
   1b9b8:	ldr	x8, [x8, #8]
   1b9bc:	ldr	x9, [sp, #16]
   1b9c0:	ldr	x9, [x9, #8]
   1b9c4:	mov	w10, #0x0                   	// #0
   1b9c8:	cmp	x8, x9
   1b9cc:	str	w10, [sp, #12]
   1b9d0:	b.ne	1ba14 <triple_compare_ino_str@@Base+0x84>  // b.any
   1b9d4:	ldr	x8, [sp, #24]
   1b9d8:	ldr	x8, [x8, #16]
   1b9dc:	ldr	x9, [sp, #16]
   1b9e0:	ldr	x9, [x9, #16]
   1b9e4:	mov	w10, #0x0                   	// #0
   1b9e8:	cmp	x8, x9
   1b9ec:	str	w10, [sp, #12]
   1b9f0:	b.ne	1ba14 <triple_compare_ino_str@@Base+0x84>  // b.any
   1b9f4:	ldr	x8, [sp, #24]
   1b9f8:	ldr	x0, [x8]
   1b9fc:	ldr	x8, [sp, #16]
   1ba00:	ldr	x1, [x8]
   1ba04:	bl	aa00 <strcmp@plt>
   1ba08:	cmp	w0, #0x0
   1ba0c:	cset	w9, eq  // eq = none
   1ba10:	str	w9, [sp, #12]
   1ba14:	ldr	w8, [sp, #12]
   1ba18:	mov	w9, #0x1                   	// #1
   1ba1c:	mov	w10, wzr
   1ba20:	tst	w8, #0x1
   1ba24:	csel	w8, w9, w10, ne  // ne = any
   1ba28:	cmp	w8, #0x0
   1ba2c:	cset	w8, ne  // ne = any
   1ba30:	and	w0, w8, #0x1
   1ba34:	ldp	x29, x30, [sp, #48]
   1ba38:	add	sp, sp, #0x40
   1ba3c:	ret

000000000001ba40 <triple_free@@Base>:
   1ba40:	sub	sp, sp, #0x20
   1ba44:	stp	x29, x30, [sp, #16]
   1ba48:	add	x29, sp, #0x10
   1ba4c:	str	x0, [sp, #8]
   1ba50:	ldr	x8, [sp, #8]
   1ba54:	str	x8, [sp]
   1ba58:	ldr	x8, [sp]
   1ba5c:	ldr	x0, [x8]
   1ba60:	bl	a930 <free@plt>
   1ba64:	ldr	x0, [sp]
   1ba68:	bl	a930 <free@plt>
   1ba6c:	ldp	x29, x30, [sp, #16]
   1ba70:	add	sp, sp, #0x20
   1ba74:	ret

000000000001ba78 <idpriv_drop@@Base>:
   1ba78:	sub	sp, sp, #0x40
   1ba7c:	stp	x29, x30, [sp, #48]
   1ba80:	add	x29, sp, #0x30
   1ba84:	bl	ad40 <getuid@plt>
   1ba88:	stur	w0, [x29, #-8]
   1ba8c:	bl	ad60 <getgid@plt>
   1ba90:	stur	w0, [x29, #-12]
   1ba94:	ldur	w0, [x29, #-12]
   1ba98:	ldur	w1, [x29, #-12]
   1ba9c:	ldur	w2, [x29, #-12]
   1baa0:	bl	b340 <setresgid@plt>
   1baa4:	cmp	w0, #0x0
   1baa8:	cset	w8, ge  // ge = tcont
   1baac:	tbnz	w8, #0, 1babc <idpriv_drop@@Base+0x44>
   1bab0:	mov	w8, #0xffffffff            	// #-1
   1bab4:	stur	w8, [x29, #-4]
   1bab8:	b	1bb88 <idpriv_drop@@Base+0x110>
   1babc:	ldur	w0, [x29, #-8]
   1bac0:	ldur	w1, [x29, #-8]
   1bac4:	ldur	w2, [x29, #-8]
   1bac8:	bl	b350 <setresuid@plt>
   1bacc:	cmp	w0, #0x0
   1bad0:	cset	w8, ge  // ge = tcont
   1bad4:	tbnz	w8, #0, 1bae4 <idpriv_drop@@Base+0x6c>
   1bad8:	mov	w8, #0xffffffff            	// #-1
   1badc:	stur	w8, [x29, #-4]
   1bae0:	b	1bb88 <idpriv_drop@@Base+0x110>
   1bae4:	sub	x0, x29, #0x10
   1bae8:	sub	x1, x29, #0x14
   1baec:	add	x2, sp, #0x18
   1baf0:	bl	b360 <getresuid@plt>
   1baf4:	cmp	w0, #0x0
   1baf8:	cset	w8, lt  // lt = tstop
   1bafc:	tbnz	w8, #0, 1bb30 <idpriv_drop@@Base+0xb8>
   1bb00:	ldur	w8, [x29, #-16]
   1bb04:	ldur	w9, [x29, #-8]
   1bb08:	cmp	w8, w9
   1bb0c:	b.ne	1bb30 <idpriv_drop@@Base+0xb8>  // b.any
   1bb10:	ldur	w8, [x29, #-20]
   1bb14:	ldur	w9, [x29, #-8]
   1bb18:	cmp	w8, w9
   1bb1c:	b.ne	1bb30 <idpriv_drop@@Base+0xb8>  // b.any
   1bb20:	ldr	w8, [sp, #24]
   1bb24:	ldur	w9, [x29, #-8]
   1bb28:	cmp	w8, w9
   1bb2c:	b.eq	1bb34 <idpriv_drop@@Base+0xbc>  // b.none
   1bb30:	bl	a9e0 <abort@plt>
   1bb34:	add	x0, sp, #0x14
   1bb38:	add	x1, sp, #0x10
   1bb3c:	add	x2, sp, #0xc
   1bb40:	bl	b370 <getresgid@plt>
   1bb44:	cmp	w0, #0x0
   1bb48:	cset	w8, lt  // lt = tstop
   1bb4c:	tbnz	w8, #0, 1bb80 <idpriv_drop@@Base+0x108>
   1bb50:	ldr	w8, [sp, #20]
   1bb54:	ldur	w9, [x29, #-12]
   1bb58:	cmp	w8, w9
   1bb5c:	b.ne	1bb80 <idpriv_drop@@Base+0x108>  // b.any
   1bb60:	ldr	w8, [sp, #16]
   1bb64:	ldur	w9, [x29, #-12]
   1bb68:	cmp	w8, w9
   1bb6c:	b.ne	1bb80 <idpriv_drop@@Base+0x108>  // b.any
   1bb70:	ldr	w8, [sp, #12]
   1bb74:	ldur	w9, [x29, #-12]
   1bb78:	cmp	w8, w9
   1bb7c:	b.eq	1bb84 <idpriv_drop@@Base+0x10c>  // b.none
   1bb80:	bl	a9e0 <abort@plt>
   1bb84:	stur	wzr, [x29, #-4]
   1bb88:	ldur	w0, [x29, #-4]
   1bb8c:	ldp	x29, x30, [sp, #48]
   1bb90:	add	sp, sp, #0x40
   1bb94:	ret

000000000001bb98 <idpriv_temp_drop@@Base>:
   1bb98:	sub	sp, sp, #0x50
   1bb9c:	stp	x29, x30, [sp, #64]
   1bba0:	add	x29, sp, #0x40
   1bba4:	adrp	x8, 61000 <gl_rbtree_list_implementation@@Base+0x1468>
   1bba8:	add	x8, x8, #0x394
   1bbac:	mov	w9, #0xffffffff            	// #-1
   1bbb0:	adrp	x10, 61000 <gl_rbtree_list_implementation@@Base+0x1468>
   1bbb4:	add	x10, x10, #0x398
   1bbb8:	str	x8, [sp, #16]
   1bbbc:	str	w9, [sp, #12]
   1bbc0:	str	x10, [sp]
   1bbc4:	bl	ad40 <getuid@plt>
   1bbc8:	stur	w0, [x29, #-8]
   1bbcc:	bl	ad60 <getgid@plt>
   1bbd0:	stur	w0, [x29, #-12]
   1bbd4:	ldr	x8, [sp, #16]
   1bbd8:	ldr	w9, [x8]
   1bbdc:	ldr	w11, [sp, #12]
   1bbe0:	cmp	w9, w11
   1bbe4:	b.ne	1bbf4 <idpriv_temp_drop@@Base+0x5c>  // b.any
   1bbe8:	bl	ad50 <geteuid@plt>
   1bbec:	ldr	x8, [sp, #16]
   1bbf0:	str	w0, [x8]
   1bbf4:	ldr	x8, [sp]
   1bbf8:	ldr	w9, [x8]
   1bbfc:	mov	w10, #0xffffffff            	// #-1
   1bc00:	cmp	w9, w10
   1bc04:	b.ne	1bc14 <idpriv_temp_drop@@Base+0x7c>  // b.any
   1bc08:	bl	ad70 <getegid@plt>
   1bc0c:	ldr	x8, [sp]
   1bc10:	str	w0, [x8]
   1bc14:	ldur	w1, [x29, #-12]
   1bc18:	ldr	x8, [sp]
   1bc1c:	ldr	w2, [x8]
   1bc20:	mov	w0, #0xffffffff            	// #-1
   1bc24:	bl	b340 <setresgid@plt>
   1bc28:	cmp	w0, #0x0
   1bc2c:	cset	w9, ge  // ge = tcont
   1bc30:	tbnz	w9, #0, 1bc40 <idpriv_temp_drop@@Base+0xa8>
   1bc34:	mov	w8, #0xffffffff            	// #-1
   1bc38:	stur	w8, [x29, #-4]
   1bc3c:	b	1bd18 <idpriv_temp_drop@@Base+0x180>
   1bc40:	ldur	w1, [x29, #-8]
   1bc44:	ldr	x8, [sp, #16]
   1bc48:	ldr	w2, [x8]
   1bc4c:	mov	w0, #0xffffffff            	// #-1
   1bc50:	bl	b350 <setresuid@plt>
   1bc54:	cmp	w0, #0x0
   1bc58:	cset	w9, ge  // ge = tcont
   1bc5c:	tbnz	w9, #0, 1bc6c <idpriv_temp_drop@@Base+0xd4>
   1bc60:	mov	w8, #0xffffffff            	// #-1
   1bc64:	stur	w8, [x29, #-4]
   1bc68:	b	1bd18 <idpriv_temp_drop@@Base+0x180>
   1bc6c:	sub	x0, x29, #0x10
   1bc70:	sub	x1, x29, #0x14
   1bc74:	sub	x2, x29, #0x18
   1bc78:	bl	b360 <getresuid@plt>
   1bc7c:	cmp	w0, #0x0
   1bc80:	cset	w8, lt  // lt = tstop
   1bc84:	tbnz	w8, #0, 1bcbc <idpriv_temp_drop@@Base+0x124>
   1bc88:	ldur	w8, [x29, #-16]
   1bc8c:	ldur	w9, [x29, #-8]
   1bc90:	cmp	w8, w9
   1bc94:	b.ne	1bcbc <idpriv_temp_drop@@Base+0x124>  // b.any
   1bc98:	ldur	w8, [x29, #-20]
   1bc9c:	ldur	w9, [x29, #-8]
   1bca0:	cmp	w8, w9
   1bca4:	b.ne	1bcbc <idpriv_temp_drop@@Base+0x124>  // b.any
   1bca8:	ldur	w8, [x29, #-24]
   1bcac:	ldr	x9, [sp, #16]
   1bcb0:	ldr	w10, [x9]
   1bcb4:	cmp	w8, w10
   1bcb8:	b.eq	1bcc0 <idpriv_temp_drop@@Base+0x128>  // b.none
   1bcbc:	bl	a9e0 <abort@plt>
   1bcc0:	sub	x0, x29, #0x1c
   1bcc4:	add	x1, sp, #0x20
   1bcc8:	add	x2, sp, #0x1c
   1bccc:	bl	b370 <getresgid@plt>
   1bcd0:	cmp	w0, #0x0
   1bcd4:	cset	w8, lt  // lt = tstop
   1bcd8:	tbnz	w8, #0, 1bd10 <idpriv_temp_drop@@Base+0x178>
   1bcdc:	ldur	w8, [x29, #-28]
   1bce0:	ldur	w9, [x29, #-12]
   1bce4:	cmp	w8, w9
   1bce8:	b.ne	1bd10 <idpriv_temp_drop@@Base+0x178>  // b.any
   1bcec:	ldr	w8, [sp, #32]
   1bcf0:	ldur	w9, [x29, #-12]
   1bcf4:	cmp	w8, w9
   1bcf8:	b.ne	1bd10 <idpriv_temp_drop@@Base+0x178>  // b.any
   1bcfc:	ldr	w8, [sp, #28]
   1bd00:	ldr	x9, [sp]
   1bd04:	ldr	w10, [x9]
   1bd08:	cmp	w8, w10
   1bd0c:	b.eq	1bd14 <idpriv_temp_drop@@Base+0x17c>  // b.none
   1bd10:	bl	a9e0 <abort@plt>
   1bd14:	stur	wzr, [x29, #-4]
   1bd18:	ldur	w0, [x29, #-4]
   1bd1c:	ldp	x29, x30, [sp, #64]
   1bd20:	add	sp, sp, #0x50
   1bd24:	ret

000000000001bd28 <idpriv_temp_restore@@Base>:
   1bd28:	sub	sp, sp, #0x50
   1bd2c:	stp	x29, x30, [sp, #64]
   1bd30:	add	x29, sp, #0x40
   1bd34:	adrp	x8, 61000 <gl_rbtree_list_implementation@@Base+0x1468>
   1bd38:	add	x8, x8, #0x394
   1bd3c:	mov	w9, #0xffffffff            	// #-1
   1bd40:	adrp	x10, 61000 <gl_rbtree_list_implementation@@Base+0x1468>
   1bd44:	add	x10, x10, #0x398
   1bd48:	str	x8, [sp, #16]
   1bd4c:	str	w9, [sp, #12]
   1bd50:	str	x10, [sp]
   1bd54:	bl	ad40 <getuid@plt>
   1bd58:	stur	w0, [x29, #-8]
   1bd5c:	bl	ad60 <getgid@plt>
   1bd60:	stur	w0, [x29, #-12]
   1bd64:	ldr	x8, [sp, #16]
   1bd68:	ldr	w9, [x8]
   1bd6c:	ldr	w11, [sp, #12]
   1bd70:	cmp	w9, w11
   1bd74:	b.eq	1bd8c <idpriv_temp_restore@@Base+0x64>  // b.none
   1bd78:	ldr	x8, [sp]
   1bd7c:	ldr	w9, [x8]
   1bd80:	mov	w10, #0xffffffff            	// #-1
   1bd84:	cmp	w9, w10
   1bd88:	b.ne	1bd90 <idpriv_temp_restore@@Base+0x68>  // b.any
   1bd8c:	bl	a9e0 <abort@plt>
   1bd90:	ldr	x8, [sp, #16]
   1bd94:	ldr	w1, [x8]
   1bd98:	mov	w9, #0xffffffff            	// #-1
   1bd9c:	mov	w0, w9
   1bda0:	mov	w2, w9
   1bda4:	bl	b350 <setresuid@plt>
   1bda8:	cmp	w0, #0x0
   1bdac:	cset	w9, ge  // ge = tcont
   1bdb0:	tbnz	w9, #0, 1bdc0 <idpriv_temp_restore@@Base+0x98>
   1bdb4:	mov	w8, #0xffffffff            	// #-1
   1bdb8:	stur	w8, [x29, #-4]
   1bdbc:	b	1bea4 <idpriv_temp_restore@@Base+0x17c>
   1bdc0:	ldr	x8, [sp]
   1bdc4:	ldr	w1, [x8]
   1bdc8:	mov	w9, #0xffffffff            	// #-1
   1bdcc:	mov	w0, w9
   1bdd0:	mov	w2, w9
   1bdd4:	bl	b340 <setresgid@plt>
   1bdd8:	cmp	w0, #0x0
   1bddc:	cset	w9, ge  // ge = tcont
   1bde0:	tbnz	w9, #0, 1bdf0 <idpriv_temp_restore@@Base+0xc8>
   1bde4:	mov	w8, #0xffffffff            	// #-1
   1bde8:	stur	w8, [x29, #-4]
   1bdec:	b	1bea4 <idpriv_temp_restore@@Base+0x17c>
   1bdf0:	sub	x0, x29, #0x10
   1bdf4:	sub	x1, x29, #0x14
   1bdf8:	sub	x2, x29, #0x18
   1bdfc:	bl	b360 <getresuid@plt>
   1be00:	cmp	w0, #0x0
   1be04:	cset	w8, lt  // lt = tstop
   1be08:	tbnz	w8, #0, 1be44 <idpriv_temp_restore@@Base+0x11c>
   1be0c:	ldur	w8, [x29, #-16]
   1be10:	ldur	w9, [x29, #-8]
   1be14:	cmp	w8, w9
   1be18:	b.ne	1be44 <idpriv_temp_restore@@Base+0x11c>  // b.any
   1be1c:	ldur	w8, [x29, #-20]
   1be20:	ldr	x9, [sp, #16]
   1be24:	ldr	w10, [x9]
   1be28:	cmp	w8, w10
   1be2c:	b.ne	1be44 <idpriv_temp_restore@@Base+0x11c>  // b.any
   1be30:	ldur	w8, [x29, #-24]
   1be34:	ldr	x9, [sp, #16]
   1be38:	ldr	w10, [x9]
   1be3c:	cmp	w8, w10
   1be40:	b.eq	1be48 <idpriv_temp_restore@@Base+0x120>  // b.none
   1be44:	bl	a9e0 <abort@plt>
   1be48:	sub	x0, x29, #0x1c
   1be4c:	add	x1, sp, #0x20
   1be50:	add	x2, sp, #0x1c
   1be54:	bl	b370 <getresgid@plt>
   1be58:	cmp	w0, #0x0
   1be5c:	cset	w8, lt  // lt = tstop
   1be60:	tbnz	w8, #0, 1be9c <idpriv_temp_restore@@Base+0x174>
   1be64:	ldur	w8, [x29, #-28]
   1be68:	ldur	w9, [x29, #-12]
   1be6c:	cmp	w8, w9
   1be70:	b.ne	1be9c <idpriv_temp_restore@@Base+0x174>  // b.any
   1be74:	ldr	w8, [sp, #32]
   1be78:	ldr	x9, [sp]
   1be7c:	ldr	w10, [x9]
   1be80:	cmp	w8, w10
   1be84:	b.ne	1be9c <idpriv_temp_restore@@Base+0x174>  // b.any
   1be88:	ldr	w8, [sp, #28]
   1be8c:	ldr	x9, [sp]
   1be90:	ldr	w10, [x9]
   1be94:	cmp	w8, w10
   1be98:	b.eq	1bea0 <idpriv_temp_restore@@Base+0x178>  // b.none
   1be9c:	bl	a9e0 <abort@plt>
   1bea0:	stur	wzr, [x29, #-4]
   1bea4:	ldur	w0, [x29, #-4]
   1bea8:	ldp	x29, x30, [sp, #64]
   1beac:	add	sp, sp, #0x50
   1beb0:	ret
   1beb4:	sub	sp, sp, #0x50
   1beb8:	stp	x29, x30, [sp, #64]
   1bebc:	add	x29, sp, #0x40
   1bec0:	mov	x8, #0x68                  	// #104
   1bec4:	stur	x0, [x29, #-16]
   1bec8:	stur	x1, [x29, #-24]
   1becc:	str	x2, [sp, #32]
   1bed0:	str	x3, [sp, #24]
   1bed4:	and	w9, w4, #0x1
   1bed8:	strb	w9, [sp, #23]
   1bedc:	mov	x0, x8
   1bee0:	bl	af10 <malloc@plt>
   1bee4:	str	x0, [sp, #8]
   1bee8:	ldr	x8, [sp, #8]
   1beec:	cbnz	x8, 1befc <idpriv_temp_restore@@Base+0x1d4>
   1bef0:	mov	x8, xzr
   1bef4:	stur	x8, [x29, #-8]
   1bef8:	b	1bfb4 <idpriv_temp_restore@@Base+0x28c>
   1befc:	ldur	x8, [x29, #-16]
   1bf00:	ldr	x9, [sp, #8]
   1bf04:	str	x8, [x9]
   1bf08:	ldur	x8, [x29, #-24]
   1bf0c:	ldr	x9, [sp, #8]
   1bf10:	str	x8, [x9, #8]
   1bf14:	ldr	x8, [sp, #32]
   1bf18:	ldr	x9, [sp, #8]
   1bf1c:	str	x8, [x9, #16]
   1bf20:	ldr	x8, [sp, #24]
   1bf24:	ldr	x9, [sp, #8]
   1bf28:	str	x8, [x9, #24]
   1bf2c:	ldrb	w10, [sp, #23]
   1bf30:	ldr	x8, [sp, #8]
   1bf34:	and	w10, w10, #0x1
   1bf38:	strb	w10, [x8, #32]
   1bf3c:	ldr	x8, [sp, #8]
   1bf40:	mov	x9, #0xb                   	// #11
   1bf44:	str	x9, [x8, #48]
   1bf48:	ldr	x8, [sp, #8]
   1bf4c:	ldr	x0, [x8, #48]
   1bf50:	mov	x1, #0x8                   	// #8
   1bf54:	bl	b2e0 <calloc@plt>
   1bf58:	ldr	x8, [sp, #8]
   1bf5c:	str	x0, [x8, #40]
   1bf60:	ldr	x8, [sp, #8]
   1bf64:	ldr	x8, [x8, #40]
   1bf68:	cbnz	x8, 1bf70 <idpriv_temp_restore@@Base+0x248>
   1bf6c:	b	1bfa4 <idpriv_temp_restore@@Base+0x27c>
   1bf70:	ldr	x8, [sp, #8]
   1bf74:	add	x8, x8, #0x38
   1bf78:	ldr	x9, [sp, #8]
   1bf7c:	str	x8, [x9, #72]
   1bf80:	ldr	x8, [sp, #8]
   1bf84:	add	x8, x8, #0x38
   1bf88:	ldr	x9, [sp, #8]
   1bf8c:	str	x8, [x9, #80]
   1bf90:	ldr	x8, [sp, #8]
   1bf94:	str	xzr, [x8, #96]
   1bf98:	ldr	x8, [sp, #8]
   1bf9c:	stur	x8, [x29, #-8]
   1bfa0:	b	1bfb4 <idpriv_temp_restore@@Base+0x28c>
   1bfa4:	ldr	x0, [sp, #8]
   1bfa8:	bl	a930 <free@plt>
   1bfac:	mov	x8, xzr
   1bfb0:	stur	x8, [x29, #-8]
   1bfb4:	ldur	x0, [x29, #-8]
   1bfb8:	ldp	x29, x30, [sp, #64]
   1bfbc:	add	sp, sp, #0x50
   1bfc0:	ret
   1bfc4:	sub	sp, sp, #0xa0
   1bfc8:	stp	x29, x30, [sp, #144]
   1bfcc:	add	x29, sp, #0x90
   1bfd0:	mov	x8, #0x68                  	// #104
   1bfd4:	mov	w9, #0x0                   	// #0
   1bfd8:	stur	x0, [x29, #-16]
   1bfdc:	stur	x1, [x29, #-24]
   1bfe0:	stur	x2, [x29, #-32]
   1bfe4:	stur	x3, [x29, #-40]
   1bfe8:	and	w10, w4, #0x1
   1bfec:	sturb	w10, [x29, #-41]
   1bff0:	stur	x5, [x29, #-56]
   1bff4:	stur	x6, [x29, #-64]
   1bff8:	mov	x0, x8
   1bffc:	str	w9, [sp, #28]
   1c000:	bl	af10 <malloc@plt>
   1c004:	str	x0, [sp, #72]
   1c008:	ldr	x8, [sp, #72]
   1c00c:	cbnz	x8, 1c01c <idpriv_temp_restore@@Base+0x2f4>
   1c010:	mov	x8, xzr
   1c014:	stur	x8, [x29, #-8]
   1c018:	b	1c278 <idpriv_temp_restore@@Base+0x550>
   1c01c:	ldur	x8, [x29, #-16]
   1c020:	ldr	x9, [sp, #72]
   1c024:	str	x8, [x9]
   1c028:	ldur	x8, [x29, #-24]
   1c02c:	ldr	x9, [sp, #72]
   1c030:	str	x8, [x9, #8]
   1c034:	ldur	x8, [x29, #-32]
   1c038:	ldr	x9, [sp, #72]
   1c03c:	str	x8, [x9, #16]
   1c040:	ldur	x8, [x29, #-40]
   1c044:	ldr	x9, [sp, #72]
   1c048:	str	x8, [x9, #24]
   1c04c:	ldurb	w10, [x29, #-41]
   1c050:	ldr	x8, [sp, #72]
   1c054:	and	w10, w10, #0x1
   1c058:	strb	w10, [x8, #32]
   1c05c:	ldur	x0, [x29, #-56]
   1c060:	ldur	x8, [x29, #-56]
   1c064:	mov	x9, #0x2                   	// #2
   1c068:	udiv	x1, x8, x9
   1c06c:	bl	b190 <xsum@plt>
   1c070:	str	x0, [sp, #56]
   1c074:	ldr	x8, [sp, #56]
   1c078:	cmp	x8, #0xa
   1c07c:	b.cs	1c088 <idpriv_temp_restore@@Base+0x360>  // b.hs, b.nlast
   1c080:	mov	x8, #0xa                   	// #10
   1c084:	str	x8, [sp, #56]
   1c088:	ldr	x0, [sp, #56]
   1c08c:	bl	1e2b0 <idpriv_temp_restore@@Base+0x2588>
   1c090:	ldr	x8, [sp, #72]
   1c094:	str	x0, [x8, #48]
   1c098:	ldr	x8, [sp, #72]
   1c09c:	ldr	x8, [x8, #48]
   1c0a0:	mov	x9, #0x1fffffffffffffff    	// #2305843009213693951
   1c0a4:	cmp	x8, x9
   1c0a8:	b.hi	1c0c4 <idpriv_temp_restore@@Base+0x39c>  // b.pmore
   1c0ac:	ldr	x8, [sp, #72]
   1c0b0:	ldr	x8, [x8, #48]
   1c0b4:	mov	x9, #0x8                   	// #8
   1c0b8:	mul	x8, x8, x9
   1c0bc:	str	x8, [sp, #16]
   1c0c0:	b	1c0cc <idpriv_temp_restore@@Base+0x3a4>
   1c0c4:	mov	x8, #0xffffffffffffffff    	// #-1
   1c0c8:	str	x8, [sp, #16]
   1c0cc:	ldr	x8, [sp, #16]
   1c0d0:	mov	x9, #0xffffffffffffffff    	// #-1
   1c0d4:	cmp	x8, x9
   1c0d8:	b.ne	1c0e0 <idpriv_temp_restore@@Base+0x3b8>  // b.any
   1c0dc:	b	1c268 <idpriv_temp_restore@@Base+0x540>
   1c0e0:	ldr	x8, [sp, #72]
   1c0e4:	ldr	x0, [x8, #48]
   1c0e8:	mov	x1, #0x8                   	// #8
   1c0ec:	bl	b2e0 <calloc@plt>
   1c0f0:	ldr	x8, [sp, #72]
   1c0f4:	str	x0, [x8, #40]
   1c0f8:	ldr	x8, [sp, #72]
   1c0fc:	ldr	x8, [x8, #40]
   1c100:	cbnz	x8, 1c108 <idpriv_temp_restore@@Base+0x3e0>
   1c104:	b	1c268 <idpriv_temp_restore@@Base+0x540>
   1c108:	ldur	x8, [x29, #-56]
   1c10c:	ldr	x9, [sp, #72]
   1c110:	str	x8, [x9, #96]
   1c114:	ldr	x8, [sp, #72]
   1c118:	add	x8, x8, #0x38
   1c11c:	str	x8, [sp, #64]
   1c120:	ldur	x8, [x29, #-56]
   1c124:	cmp	x8, #0x0
   1c128:	cset	w9, ls  // ls = plast
   1c12c:	tbnz	w9, #0, 1c1f8 <idpriv_temp_restore@@Base+0x4d0>
   1c130:	mov	x0, #0x28                  	// #40
   1c134:	bl	af10 <malloc@plt>
   1c138:	str	x0, [sp, #48]
   1c13c:	ldr	x8, [sp, #48]
   1c140:	cbnz	x8, 1c148 <idpriv_temp_restore@@Base+0x420>
   1c144:	b	1c220 <idpriv_temp_restore@@Base+0x4f8>
   1c148:	ldur	x8, [x29, #-64]
   1c14c:	ldr	x8, [x8]
   1c150:	ldr	x9, [sp, #48]
   1c154:	str	x8, [x9, #32]
   1c158:	ldr	x8, [sp, #72]
   1c15c:	ldr	x8, [x8, #16]
   1c160:	cbz	x8, 1c180 <idpriv_temp_restore@@Base+0x458>
   1c164:	ldr	x8, [sp, #72]
   1c168:	ldr	x8, [x8, #16]
   1c16c:	ldr	x9, [sp, #48]
   1c170:	ldr	x0, [x9, #32]
   1c174:	blr	x8
   1c178:	str	x0, [sp, #8]
   1c17c:	b	1c18c <idpriv_temp_restore@@Base+0x464>
   1c180:	ldr	x8, [sp, #48]
   1c184:	ldr	x8, [x8, #32]
   1c188:	str	x8, [sp, #8]
   1c18c:	ldr	x8, [sp, #8]
   1c190:	ldr	x9, [sp, #48]
   1c194:	str	x8, [x9, #8]
   1c198:	ldr	x0, [sp, #72]
   1c19c:	ldr	x1, [sp, #48]
   1c1a0:	bl	1e320 <idpriv_temp_restore@@Base+0x25f8>
   1c1a4:	ldr	w10, [sp, #28]
   1c1a8:	tbnz	w10, #0, 1c1b0 <idpriv_temp_restore@@Base+0x488>
   1c1ac:	b	1c1bc <idpriv_temp_restore@@Base+0x494>
   1c1b0:	ldr	x0, [sp, #48]
   1c1b4:	bl	a930 <free@plt>
   1c1b8:	b	1c220 <idpriv_temp_restore@@Base+0x4f8>
   1c1bc:	ldr	x8, [sp, #64]
   1c1c0:	ldr	x9, [sp, #48]
   1c1c4:	str	x8, [x9, #24]
   1c1c8:	ldr	x8, [sp, #48]
   1c1cc:	ldr	x9, [sp, #64]
   1c1d0:	str	x8, [x9, #16]
   1c1d4:	ldr	x8, [sp, #48]
   1c1d8:	str	x8, [sp, #64]
   1c1dc:	ldur	x8, [x29, #-64]
   1c1e0:	add	x8, x8, #0x8
   1c1e4:	stur	x8, [x29, #-64]
   1c1e8:	ldur	x8, [x29, #-56]
   1c1ec:	subs	x8, x8, #0x1
   1c1f0:	stur	x8, [x29, #-56]
   1c1f4:	b	1c120 <idpriv_temp_restore@@Base+0x3f8>
   1c1f8:	ldr	x8, [sp, #72]
   1c1fc:	add	x8, x8, #0x38
   1c200:	ldr	x9, [sp, #64]
   1c204:	str	x8, [x9, #16]
   1c208:	ldr	x8, [sp, #64]
   1c20c:	ldr	x9, [sp, #72]
   1c210:	str	x8, [x9, #80]
   1c214:	ldr	x8, [sp, #72]
   1c218:	stur	x8, [x29, #-8]
   1c21c:	b	1c278 <idpriv_temp_restore@@Base+0x550>
   1c220:	ldr	x8, [sp, #64]
   1c224:	str	x8, [sp, #40]
   1c228:	ldr	x8, [sp, #40]
   1c22c:	ldr	x9, [sp, #72]
   1c230:	add	x9, x9, #0x38
   1c234:	cmp	x8, x9
   1c238:	b.eq	1c25c <idpriv_temp_restore@@Base+0x534>  // b.none
   1c23c:	ldr	x8, [sp, #40]
   1c240:	ldr	x8, [x8, #24]
   1c244:	str	x8, [sp, #32]
   1c248:	ldr	x0, [sp, #40]
   1c24c:	bl	a930 <free@plt>
   1c250:	ldr	x8, [sp, #32]
   1c254:	str	x8, [sp, #40]
   1c258:	b	1c228 <idpriv_temp_restore@@Base+0x500>
   1c25c:	ldr	x8, [sp, #72]
   1c260:	ldr	x0, [x8, #40]
   1c264:	bl	a930 <free@plt>
   1c268:	ldr	x0, [sp, #72]
   1c26c:	bl	a930 <free@plt>
   1c270:	mov	x8, xzr
   1c274:	stur	x8, [x29, #-8]
   1c278:	ldur	x0, [x29, #-8]
   1c27c:	ldp	x29, x30, [sp, #144]
   1c280:	add	sp, sp, #0xa0
   1c284:	ret
   1c288:	sub	sp, sp, #0x10
   1c28c:	str	x0, [sp, #8]
   1c290:	ldr	x8, [sp, #8]
   1c294:	ldr	x0, [x8, #96]
   1c298:	add	sp, sp, #0x10
   1c29c:	ret
   1c2a0:	sub	sp, sp, #0x10
   1c2a4:	str	x0, [sp, #8]
   1c2a8:	str	x1, [sp]
   1c2ac:	ldr	x8, [sp]
   1c2b0:	ldr	x0, [x8, #32]
   1c2b4:	add	sp, sp, #0x10
   1c2b8:	ret
   1c2bc:	sub	sp, sp, #0x60
   1c2c0:	stp	x29, x30, [sp, #80]
   1c2c4:	add	x29, sp, #0x50
   1c2c8:	mov	w8, #0x0                   	// #0
   1c2cc:	stur	x0, [x29, #-16]
   1c2d0:	stur	x1, [x29, #-24]
   1c2d4:	stur	x2, [x29, #-32]
   1c2d8:	ldur	x9, [x29, #-32]
   1c2dc:	ldur	x10, [x29, #-24]
   1c2e0:	ldr	x10, [x10, #32]
   1c2e4:	cmp	x9, x10
   1c2e8:	str	w8, [sp, #20]
   1c2ec:	b.eq	1c3d8 <idpriv_temp_restore@@Base+0x6b0>  // b.none
   1c2f0:	ldur	x8, [x29, #-16]
   1c2f4:	ldr	x8, [x8, #16]
   1c2f8:	cbz	x8, 1c314 <idpriv_temp_restore@@Base+0x5ec>
   1c2fc:	ldur	x8, [x29, #-16]
   1c300:	ldr	x8, [x8, #16]
   1c304:	ldur	x0, [x29, #-32]
   1c308:	blr	x8
   1c30c:	str	x0, [sp, #8]
   1c310:	b	1c31c <idpriv_temp_restore@@Base+0x5f4>
   1c314:	ldur	x8, [x29, #-32]
   1c318:	str	x8, [sp, #8]
   1c31c:	ldr	x8, [sp, #8]
   1c320:	str	x8, [sp, #40]
   1c324:	ldr	x8, [sp, #40]
   1c328:	ldur	x9, [x29, #-24]
   1c32c:	ldr	x9, [x9, #8]
   1c330:	cmp	x8, x9
   1c334:	b.eq	1c3cc <idpriv_temp_restore@@Base+0x6a4>  // b.none
   1c338:	ldur	x0, [x29, #-16]
   1c33c:	ldur	x1, [x29, #-24]
   1c340:	bl	1e394 <idpriv_temp_restore@@Base+0x266c>
   1c344:	ldur	x8, [x29, #-32]
   1c348:	ldur	x9, [x29, #-24]
   1c34c:	str	x8, [x9, #32]
   1c350:	ldr	x8, [sp, #40]
   1c354:	ldur	x9, [x29, #-24]
   1c358:	str	x8, [x9, #8]
   1c35c:	ldur	x0, [x29, #-16]
   1c360:	ldur	x1, [x29, #-24]
   1c364:	bl	1e320 <idpriv_temp_restore@@Base+0x25f8>
   1c368:	ldr	w10, [sp, #20]
   1c36c:	tbnz	w10, #0, 1c374 <idpriv_temp_restore@@Base+0x64c>
   1c370:	b	1c3c8 <idpriv_temp_restore@@Base+0x6a0>
   1c374:	ldur	x8, [x29, #-24]
   1c378:	ldr	x8, [x8, #24]
   1c37c:	str	x8, [sp, #32]
   1c380:	ldur	x8, [x29, #-24]
   1c384:	ldr	x8, [x8, #16]
   1c388:	str	x8, [sp, #24]
   1c38c:	ldr	x8, [sp, #24]
   1c390:	ldr	x9, [sp, #32]
   1c394:	str	x8, [x9, #16]
   1c398:	ldr	x8, [sp, #32]
   1c39c:	ldr	x9, [sp, #24]
   1c3a0:	str	x8, [x9, #24]
   1c3a4:	ldur	x8, [x29, #-16]
   1c3a8:	ldr	x9, [x8, #96]
   1c3ac:	subs	x9, x9, #0x1
   1c3b0:	str	x9, [x8, #96]
   1c3b4:	ldur	x0, [x29, #-24]
   1c3b8:	bl	a930 <free@plt>
   1c3bc:	mov	w10, #0xffffffff            	// #-1
   1c3c0:	stur	w10, [x29, #-4]
   1c3c4:	b	1c3dc <idpriv_temp_restore@@Base+0x6b4>
   1c3c8:	b	1c3d8 <idpriv_temp_restore@@Base+0x6b0>
   1c3cc:	ldur	x8, [x29, #-32]
   1c3d0:	ldur	x9, [x29, #-24]
   1c3d4:	str	x8, [x9, #32]
   1c3d8:	stur	wzr, [x29, #-4]
   1c3dc:	ldur	w0, [x29, #-4]
   1c3e0:	ldp	x29, x30, [sp, #80]
   1c3e4:	add	sp, sp, #0x60
   1c3e8:	ret
   1c3ec:	sub	sp, sp, #0x20
   1c3f0:	str	x0, [sp, #24]
   1c3f4:	str	x1, [sp, #16]
   1c3f8:	ldr	x8, [sp, #16]
   1c3fc:	ldr	x8, [x8, #16]
   1c400:	ldr	x9, [sp, #24]
   1c404:	add	x9, x9, #0x38
   1c408:	cmp	x8, x9
   1c40c:	b.eq	1c420 <idpriv_temp_restore@@Base+0x6f8>  // b.none
   1c410:	ldr	x8, [sp, #16]
   1c414:	ldr	x8, [x8, #16]
   1c418:	str	x8, [sp, #8]
   1c41c:	b	1c428 <idpriv_temp_restore@@Base+0x700>
   1c420:	mov	x8, xzr
   1c424:	str	x8, [sp, #8]
   1c428:	ldr	x8, [sp, #8]
   1c42c:	mov	x0, x8
   1c430:	add	sp, sp, #0x20
   1c434:	ret
   1c438:	sub	sp, sp, #0x20
   1c43c:	str	x0, [sp, #24]
   1c440:	str	x1, [sp, #16]
   1c444:	ldr	x8, [sp, #16]
   1c448:	ldr	x8, [x8, #24]
   1c44c:	ldr	x9, [sp, #24]
   1c450:	add	x9, x9, #0x38
   1c454:	cmp	x8, x9
   1c458:	b.eq	1c46c <idpriv_temp_restore@@Base+0x744>  // b.none
   1c45c:	ldr	x8, [sp, #16]
   1c460:	ldr	x8, [x8, #24]
   1c464:	str	x8, [sp, #8]
   1c468:	b	1c474 <idpriv_temp_restore@@Base+0x74c>
   1c46c:	mov	x8, xzr
   1c470:	str	x8, [sp, #8]
   1c474:	ldr	x8, [sp, #8]
   1c478:	mov	x0, x8
   1c47c:	add	sp, sp, #0x20
   1c480:	ret
   1c484:	sub	sp, sp, #0x30
   1c488:	stp	x29, x30, [sp, #32]
   1c48c:	add	x29, sp, #0x20
   1c490:	stur	x0, [x29, #-8]
   1c494:	str	x1, [sp, #16]
   1c498:	ldur	x8, [x29, #-8]
   1c49c:	ldr	x8, [x8, #96]
   1c4a0:	str	x8, [sp, #8]
   1c4a4:	ldr	x8, [sp, #16]
   1c4a8:	ldr	x9, [sp, #8]
   1c4ac:	cmp	x8, x9
   1c4b0:	b.cc	1c4b8 <idpriv_temp_restore@@Base+0x790>  // b.lo, b.ul, b.last
   1c4b4:	bl	a9e0 <abort@plt>
   1c4b8:	ldr	x8, [sp, #16]
   1c4bc:	ldr	x9, [sp, #8]
   1c4c0:	subs	x9, x9, #0x1
   1c4c4:	mov	x10, #0x2                   	// #2
   1c4c8:	udiv	x9, x9, x10
   1c4cc:	cmp	x8, x9
   1c4d0:	b.hi	1c510 <idpriv_temp_restore@@Base+0x7e8>  // b.pmore
   1c4d4:	ldur	x8, [x29, #-8]
   1c4d8:	ldr	x8, [x8, #72]
   1c4dc:	str	x8, [sp]
   1c4e0:	ldr	x8, [sp, #16]
   1c4e4:	cmp	x8, #0x0
   1c4e8:	cset	w9, ls  // ls = plast
   1c4ec:	tbnz	w9, #0, 1c50c <idpriv_temp_restore@@Base+0x7e4>
   1c4f0:	ldr	x8, [sp]
   1c4f4:	ldr	x8, [x8, #16]
   1c4f8:	str	x8, [sp]
   1c4fc:	ldr	x8, [sp, #16]
   1c500:	subs	x8, x8, #0x1
   1c504:	str	x8, [sp, #16]
   1c508:	b	1c4e0 <idpriv_temp_restore@@Base+0x7b8>
   1c50c:	b	1c55c <idpriv_temp_restore@@Base+0x834>
   1c510:	ldr	x8, [sp, #8]
   1c514:	subs	x8, x8, #0x1
   1c518:	ldr	x9, [sp, #16]
   1c51c:	subs	x8, x8, x9
   1c520:	str	x8, [sp, #16]
   1c524:	ldur	x8, [x29, #-8]
   1c528:	ldr	x8, [x8, #80]
   1c52c:	str	x8, [sp]
   1c530:	ldr	x8, [sp, #16]
   1c534:	cmp	x8, #0x0
   1c538:	cset	w9, ls  // ls = plast
   1c53c:	tbnz	w9, #0, 1c55c <idpriv_temp_restore@@Base+0x834>
   1c540:	ldr	x8, [sp]
   1c544:	ldr	x8, [x8, #24]
   1c548:	str	x8, [sp]
   1c54c:	ldr	x8, [sp, #16]
   1c550:	subs	x8, x8, #0x1
   1c554:	str	x8, [sp, #16]
   1c558:	b	1c530 <idpriv_temp_restore@@Base+0x808>
   1c55c:	ldr	x8, [sp]
   1c560:	ldr	x0, [x8, #32]
   1c564:	ldp	x29, x30, [sp, #32]
   1c568:	add	sp, sp, #0x30
   1c56c:	ret
   1c570:	sub	sp, sp, #0x70
   1c574:	stp	x29, x30, [sp, #96]
   1c578:	add	x29, sp, #0x60
   1c57c:	mov	w8, #0x0                   	// #0
   1c580:	stur	x0, [x29, #-16]
   1c584:	stur	x1, [x29, #-24]
   1c588:	stur	x2, [x29, #-32]
   1c58c:	ldur	x9, [x29, #-16]
   1c590:	ldr	x9, [x9, #96]
   1c594:	stur	x9, [x29, #-40]
   1c598:	ldur	x9, [x29, #-24]
   1c59c:	ldur	x10, [x29, #-40]
   1c5a0:	cmp	x9, x10
   1c5a4:	str	w8, [sp, #20]
   1c5a8:	b.cc	1c5b0 <idpriv_temp_restore@@Base+0x888>  // b.lo, b.ul, b.last
   1c5ac:	bl	a9e0 <abort@plt>
   1c5b0:	ldur	x8, [x29, #-24]
   1c5b4:	ldur	x9, [x29, #-40]
   1c5b8:	subs	x9, x9, #0x1
   1c5bc:	mov	x10, #0x2                   	// #2
   1c5c0:	udiv	x9, x9, x10
   1c5c4:	cmp	x8, x9
   1c5c8:	b.hi	1c608 <idpriv_temp_restore@@Base+0x8e0>  // b.pmore
   1c5cc:	ldur	x8, [x29, #-16]
   1c5d0:	ldr	x8, [x8, #72]
   1c5d4:	str	x8, [sp, #48]
   1c5d8:	ldur	x8, [x29, #-24]
   1c5dc:	cmp	x8, #0x0
   1c5e0:	cset	w9, ls  // ls = plast
   1c5e4:	tbnz	w9, #0, 1c604 <idpriv_temp_restore@@Base+0x8dc>
   1c5e8:	ldr	x8, [sp, #48]
   1c5ec:	ldr	x8, [x8, #16]
   1c5f0:	str	x8, [sp, #48]
   1c5f4:	ldur	x8, [x29, #-24]
   1c5f8:	subs	x8, x8, #0x1
   1c5fc:	stur	x8, [x29, #-24]
   1c600:	b	1c5d8 <idpriv_temp_restore@@Base+0x8b0>
   1c604:	b	1c654 <idpriv_temp_restore@@Base+0x92c>
   1c608:	ldur	x8, [x29, #-40]
   1c60c:	subs	x8, x8, #0x1
   1c610:	ldur	x9, [x29, #-24]
   1c614:	subs	x8, x8, x9
   1c618:	stur	x8, [x29, #-24]
   1c61c:	ldur	x8, [x29, #-16]
   1c620:	ldr	x8, [x8, #80]
   1c624:	str	x8, [sp, #48]
   1c628:	ldur	x8, [x29, #-24]
   1c62c:	cmp	x8, #0x0
   1c630:	cset	w9, ls  // ls = plast
   1c634:	tbnz	w9, #0, 1c654 <idpriv_temp_restore@@Base+0x92c>
   1c638:	ldr	x8, [sp, #48]
   1c63c:	ldr	x8, [x8, #24]
   1c640:	str	x8, [sp, #48]
   1c644:	ldur	x8, [x29, #-24]
   1c648:	subs	x8, x8, #0x1
   1c64c:	stur	x8, [x29, #-24]
   1c650:	b	1c628 <idpriv_temp_restore@@Base+0x900>
   1c654:	ldur	x8, [x29, #-32]
   1c658:	ldr	x9, [sp, #48]
   1c65c:	ldr	x9, [x9, #32]
   1c660:	cmp	x8, x9
   1c664:	b.eq	1c750 <idpriv_temp_restore@@Base+0xa28>  // b.none
   1c668:	ldur	x8, [x29, #-16]
   1c66c:	ldr	x8, [x8, #16]
   1c670:	cbz	x8, 1c68c <idpriv_temp_restore@@Base+0x964>
   1c674:	ldur	x8, [x29, #-16]
   1c678:	ldr	x8, [x8, #16]
   1c67c:	ldur	x0, [x29, #-32]
   1c680:	blr	x8
   1c684:	str	x0, [sp, #8]
   1c688:	b	1c694 <idpriv_temp_restore@@Base+0x96c>
   1c68c:	ldur	x8, [x29, #-32]
   1c690:	str	x8, [sp, #8]
   1c694:	ldr	x8, [sp, #8]
   1c698:	str	x8, [sp, #40]
   1c69c:	ldr	x8, [sp, #40]
   1c6a0:	ldr	x9, [sp, #48]
   1c6a4:	ldr	x9, [x9, #8]
   1c6a8:	cmp	x8, x9
   1c6ac:	b.eq	1c744 <idpriv_temp_restore@@Base+0xa1c>  // b.none
   1c6b0:	ldur	x0, [x29, #-16]
   1c6b4:	ldr	x1, [sp, #48]
   1c6b8:	bl	1e394 <idpriv_temp_restore@@Base+0x266c>
   1c6bc:	ldur	x8, [x29, #-32]
   1c6c0:	ldr	x9, [sp, #48]
   1c6c4:	str	x8, [x9, #32]
   1c6c8:	ldr	x8, [sp, #40]
   1c6cc:	ldr	x9, [sp, #48]
   1c6d0:	str	x8, [x9, #8]
   1c6d4:	ldur	x0, [x29, #-16]
   1c6d8:	ldr	x1, [sp, #48]
   1c6dc:	bl	1e320 <idpriv_temp_restore@@Base+0x25f8>
   1c6e0:	ldr	w10, [sp, #20]
   1c6e4:	tbnz	w10, #0, 1c6ec <idpriv_temp_restore@@Base+0x9c4>
   1c6e8:	b	1c740 <idpriv_temp_restore@@Base+0xa18>
   1c6ec:	ldr	x8, [sp, #48]
   1c6f0:	ldr	x8, [x8, #24]
   1c6f4:	str	x8, [sp, #32]
   1c6f8:	ldr	x8, [sp, #48]
   1c6fc:	ldr	x8, [x8, #16]
   1c700:	str	x8, [sp, #24]
   1c704:	ldr	x8, [sp, #24]
   1c708:	ldr	x9, [sp, #32]
   1c70c:	str	x8, [x9, #16]
   1c710:	ldr	x8, [sp, #32]
   1c714:	ldr	x9, [sp, #24]
   1c718:	str	x8, [x9, #24]
   1c71c:	ldur	x8, [x29, #-16]
   1c720:	ldr	x9, [x8, #96]
   1c724:	subs	x9, x9, #0x1
   1c728:	str	x9, [x8, #96]
   1c72c:	ldr	x0, [sp, #48]
   1c730:	bl	a930 <free@plt>
   1c734:	mov	x8, xzr
   1c738:	stur	x8, [x29, #-8]
   1c73c:	b	1c758 <idpriv_temp_restore@@Base+0xa30>
   1c740:	b	1c750 <idpriv_temp_restore@@Base+0xa28>
   1c744:	ldur	x8, [x29, #-32]
   1c748:	ldr	x9, [sp, #48]
   1c74c:	str	x8, [x9, #32]
   1c750:	ldr	x8, [sp, #48]
   1c754:	stur	x8, [x29, #-8]
   1c758:	ldur	x0, [x29, #-8]
   1c75c:	ldp	x29, x30, [sp, #96]
   1c760:	add	sp, sp, #0x70
   1c764:	ret
   1c768:	sub	sp, sp, #0x90
   1c76c:	stp	x29, x30, [sp, #128]
   1c770:	add	x29, sp, #0x80
   1c774:	stur	x0, [x29, #-16]
   1c778:	stur	x1, [x29, #-24]
   1c77c:	stur	x2, [x29, #-32]
   1c780:	stur	x3, [x29, #-40]
   1c784:	ldur	x8, [x29, #-16]
   1c788:	ldr	x8, [x8, #96]
   1c78c:	stur	x8, [x29, #-48]
   1c790:	ldur	x8, [x29, #-24]
   1c794:	ldur	x9, [x29, #-32]
   1c798:	cmp	x8, x9
   1c79c:	b.hi	1c7b0 <idpriv_temp_restore@@Base+0xa88>  // b.pmore
   1c7a0:	ldur	x8, [x29, #-32]
   1c7a4:	ldur	x9, [x29, #-48]
   1c7a8:	cmp	x8, x9
   1c7ac:	b.ls	1c7b4 <idpriv_temp_restore@@Base+0xa8c>  // b.plast
   1c7b0:	bl	a9e0 <abort@plt>
   1c7b4:	ldur	x8, [x29, #-16]
   1c7b8:	ldr	x8, [x8, #16]
   1c7bc:	cbz	x8, 1c7d8 <idpriv_temp_restore@@Base+0xab0>
   1c7c0:	ldur	x8, [x29, #-16]
   1c7c4:	ldr	x8, [x8, #16]
   1c7c8:	ldur	x0, [x29, #-40]
   1c7cc:	blr	x8
   1c7d0:	str	x0, [sp, #8]
   1c7d4:	b	1c7e0 <idpriv_temp_restore@@Base+0xab8>
   1c7d8:	ldur	x8, [x29, #-40]
   1c7dc:	str	x8, [sp, #8]
   1c7e0:	ldr	x8, [sp, #8]
   1c7e4:	stur	x8, [x29, #-56]
   1c7e8:	ldur	x8, [x29, #-56]
   1c7ec:	ldur	x9, [x29, #-16]
   1c7f0:	ldr	x9, [x9, #48]
   1c7f4:	udiv	x10, x8, x9
   1c7f8:	mul	x9, x10, x9
   1c7fc:	subs	x8, x8, x9
   1c800:	str	x8, [sp, #64]
   1c804:	ldur	x8, [x29, #-16]
   1c808:	ldr	x8, [x8, #8]
   1c80c:	str	x8, [sp, #56]
   1c810:	ldur	x8, [x29, #-16]
   1c814:	ldrb	w11, [x8, #32]
   1c818:	tbnz	w11, #0, 1c988 <idpriv_temp_restore@@Base+0xc60>
   1c81c:	mov	x8, xzr
   1c820:	str	x8, [sp, #48]
   1c824:	ldur	x8, [x29, #-16]
   1c828:	ldr	x8, [x8, #40]
   1c82c:	ldr	x9, [sp, #64]
   1c830:	mov	x10, #0x8                   	// #8
   1c834:	mul	x9, x10, x9
   1c838:	add	x8, x8, x9
   1c83c:	ldr	x8, [x8]
   1c840:	str	x8, [sp, #40]
   1c844:	ldr	x8, [sp, #40]
   1c848:	cbz	x8, 1c8b4 <idpriv_temp_restore@@Base+0xb8c>
   1c84c:	ldr	x8, [sp, #40]
   1c850:	ldr	x8, [x8, #8]
   1c854:	ldur	x9, [x29, #-56]
   1c858:	cmp	x8, x9
   1c85c:	b.ne	1c8a4 <idpriv_temp_restore@@Base+0xb7c>  // b.any
   1c860:	ldr	x8, [sp, #56]
   1c864:	cbz	x8, 1c884 <idpriv_temp_restore@@Base+0xb5c>
   1c868:	ldr	x8, [sp, #56]
   1c86c:	ldur	x0, [x29, #-40]
   1c870:	ldr	x9, [sp, #40]
   1c874:	ldr	x1, [x9, #32]
   1c878:	blr	x8
   1c87c:	tbnz	w0, #0, 1c898 <idpriv_temp_restore@@Base+0xb70>
   1c880:	b	1c8a4 <idpriv_temp_restore@@Base+0xb7c>
   1c884:	ldur	x8, [x29, #-40]
   1c888:	ldr	x9, [sp, #40]
   1c88c:	ldr	x9, [x9, #32]
   1c890:	cmp	x8, x9
   1c894:	b.ne	1c8a4 <idpriv_temp_restore@@Base+0xb7c>  // b.any
   1c898:	ldr	x8, [sp, #40]
   1c89c:	str	x8, [sp, #48]
   1c8a0:	b	1c8b4 <idpriv_temp_restore@@Base+0xb8c>
   1c8a4:	ldr	x8, [sp, #40]
   1c8a8:	ldr	x8, [x8]
   1c8ac:	str	x8, [sp, #40]
   1c8b0:	b	1c844 <idpriv_temp_restore@@Base+0xb1c>
   1c8b4:	ldur	x8, [x29, #-24]
   1c8b8:	cmp	x8, #0x0
   1c8bc:	cset	w9, ls  // ls = plast
   1c8c0:	tbnz	w9, #0, 1c910 <idpriv_temp_restore@@Base+0xbe8>
   1c8c4:	ldur	x8, [x29, #-16]
   1c8c8:	ldr	x8, [x8, #72]
   1c8cc:	str	x8, [sp, #40]
   1c8d0:	ldr	x8, [sp, #40]
   1c8d4:	ldr	x9, [sp, #48]
   1c8d8:	cmp	x8, x9
   1c8dc:	b.ne	1c8ec <idpriv_temp_restore@@Base+0xbc4>  // b.any
   1c8e0:	mov	x8, xzr
   1c8e4:	stur	x8, [x29, #-8]
   1c8e8:	b	1cc0c <idpriv_temp_restore@@Base+0xee4>
   1c8ec:	ldur	x8, [x29, #-24]
   1c8f0:	subs	x8, x8, #0x1
   1c8f4:	stur	x8, [x29, #-24]
   1c8f8:	cbnz	x8, 1c900 <idpriv_temp_restore@@Base+0xbd8>
   1c8fc:	b	1c910 <idpriv_temp_restore@@Base+0xbe8>
   1c900:	ldr	x8, [sp, #40]
   1c904:	ldr	x8, [x8, #16]
   1c908:	str	x8, [sp, #40]
   1c90c:	b	1c8d0 <idpriv_temp_restore@@Base+0xba8>
   1c910:	ldur	x8, [x29, #-32]
   1c914:	ldur	x9, [x29, #-48]
   1c918:	cmp	x8, x9
   1c91c:	b.cs	1c97c <idpriv_temp_restore@@Base+0xc54>  // b.hs, b.nlast
   1c920:	ldur	x8, [x29, #-48]
   1c924:	ldur	x9, [x29, #-32]
   1c928:	subs	x8, x8, x9
   1c92c:	stur	x8, [x29, #-32]
   1c930:	ldur	x8, [x29, #-16]
   1c934:	ldr	x8, [x8, #80]
   1c938:	str	x8, [sp, #40]
   1c93c:	ldr	x8, [sp, #40]
   1c940:	ldr	x9, [sp, #48]
   1c944:	cmp	x8, x9
   1c948:	b.ne	1c958 <idpriv_temp_restore@@Base+0xc30>  // b.any
   1c94c:	mov	x8, xzr
   1c950:	stur	x8, [x29, #-8]
   1c954:	b	1cc0c <idpriv_temp_restore@@Base+0xee4>
   1c958:	ldur	x8, [x29, #-32]
   1c95c:	subs	x8, x8, #0x1
   1c960:	stur	x8, [x29, #-32]
   1c964:	cbnz	x8, 1c96c <idpriv_temp_restore@@Base+0xc44>
   1c968:	b	1c97c <idpriv_temp_restore@@Base+0xc54>
   1c96c:	ldr	x8, [sp, #40]
   1c970:	ldr	x8, [x8, #24]
   1c974:	str	x8, [sp, #40]
   1c978:	b	1c93c <idpriv_temp_restore@@Base+0xc14>
   1c97c:	ldr	x8, [sp, #48]
   1c980:	stur	x8, [x29, #-8]
   1c984:	b	1cc0c <idpriv_temp_restore@@Base+0xee4>
   1c988:	mov	w8, #0x0                   	// #0
   1c98c:	strb	w8, [sp, #39]
   1c990:	mov	x9, xzr
   1c994:	str	x9, [sp, #24]
   1c998:	ldur	x9, [x29, #-16]
   1c99c:	ldr	x9, [x9, #40]
   1c9a0:	ldr	x10, [sp, #64]
   1c9a4:	mov	x11, #0x8                   	// #8
   1c9a8:	mul	x10, x11, x10
   1c9ac:	add	x9, x9, x10
   1c9b0:	ldr	x9, [x9]
   1c9b4:	str	x9, [sp, #16]
   1c9b8:	ldr	x8, [sp, #16]
   1c9bc:	cbz	x8, 1ca3c <idpriv_temp_restore@@Base+0xd14>
   1c9c0:	ldr	x8, [sp, #16]
   1c9c4:	ldr	x8, [x8, #8]
   1c9c8:	ldur	x9, [x29, #-56]
   1c9cc:	cmp	x8, x9
   1c9d0:	b.ne	1ca2c <idpriv_temp_restore@@Base+0xd04>  // b.any
   1c9d4:	ldr	x8, [sp, #56]
   1c9d8:	cbz	x8, 1c9f8 <idpriv_temp_restore@@Base+0xcd0>
   1c9dc:	ldr	x8, [sp, #56]
   1c9e0:	ldur	x0, [x29, #-40]
   1c9e4:	ldr	x9, [sp, #16]
   1c9e8:	ldr	x1, [x9, #32]
   1c9ec:	blr	x8
   1c9f0:	tbnz	w0, #0, 1ca0c <idpriv_temp_restore@@Base+0xce4>
   1c9f4:	b	1ca2c <idpriv_temp_restore@@Base+0xd04>
   1c9f8:	ldur	x8, [x29, #-40]
   1c9fc:	ldr	x9, [sp, #16]
   1ca00:	ldr	x9, [x9, #32]
   1ca04:	cmp	x8, x9
   1ca08:	b.ne	1ca2c <idpriv_temp_restore@@Base+0xd04>  // b.any
   1ca0c:	ldr	x8, [sp, #24]
   1ca10:	cbnz	x8, 1ca20 <idpriv_temp_restore@@Base+0xcf8>
   1ca14:	ldr	x8, [sp, #16]
   1ca18:	str	x8, [sp, #24]
   1ca1c:	b	1ca2c <idpriv_temp_restore@@Base+0xd04>
   1ca20:	mov	w8, #0x1                   	// #1
   1ca24:	strb	w8, [sp, #39]
   1ca28:	b	1ca3c <idpriv_temp_restore@@Base+0xd14>
   1ca2c:	ldr	x8, [sp, #16]
   1ca30:	ldr	x8, [x8]
   1ca34:	str	x8, [sp, #16]
   1ca38:	b	1c9b8 <idpriv_temp_restore@@Base+0xc90>
   1ca3c:	ldrb	w8, [sp, #39]
   1ca40:	tbnz	w8, #0, 1ca48 <idpriv_temp_restore@@Base+0xd20>
   1ca44:	b	1cb20 <idpriv_temp_restore@@Base+0xdf8>
   1ca48:	ldur	x8, [x29, #-24]
   1ca4c:	ldur	x9, [x29, #-32]
   1ca50:	subs	x8, x9, x8
   1ca54:	stur	x8, [x29, #-32]
   1ca58:	ldur	x8, [x29, #-16]
   1ca5c:	ldr	x8, [x8, #72]
   1ca60:	str	x8, [sp, #16]
   1ca64:	ldur	x8, [x29, #-24]
   1ca68:	cmp	x8, #0x0
   1ca6c:	cset	w9, ls  // ls = plast
   1ca70:	tbnz	w9, #0, 1ca90 <idpriv_temp_restore@@Base+0xd68>
   1ca74:	ldr	x8, [sp, #16]
   1ca78:	ldr	x8, [x8, #16]
   1ca7c:	str	x8, [sp, #16]
   1ca80:	ldur	x8, [x29, #-24]
   1ca84:	subs	x8, x8, #0x1
   1ca88:	stur	x8, [x29, #-24]
   1ca8c:	b	1ca64 <idpriv_temp_restore@@Base+0xd3c>
   1ca90:	ldur	x8, [x29, #-32]
   1ca94:	cmp	x8, #0x0
   1ca98:	cset	w9, ls  // ls = plast
   1ca9c:	tbnz	w9, #0, 1cb14 <idpriv_temp_restore@@Base+0xdec>
   1caa0:	ldr	x8, [sp, #16]
   1caa4:	ldr	x8, [x8, #8]
   1caa8:	ldur	x9, [x29, #-56]
   1caac:	cmp	x8, x9
   1cab0:	b.ne	1caf8 <idpriv_temp_restore@@Base+0xdd0>  // b.any
   1cab4:	ldr	x8, [sp, #56]
   1cab8:	cbz	x8, 1cad8 <idpriv_temp_restore@@Base+0xdb0>
   1cabc:	ldr	x8, [sp, #56]
   1cac0:	ldur	x0, [x29, #-40]
   1cac4:	ldr	x9, [sp, #16]
   1cac8:	ldr	x1, [x9, #32]
   1cacc:	blr	x8
   1cad0:	tbnz	w0, #0, 1caec <idpriv_temp_restore@@Base+0xdc4>
   1cad4:	b	1caf8 <idpriv_temp_restore@@Base+0xdd0>
   1cad8:	ldur	x8, [x29, #-40]
   1cadc:	ldr	x9, [sp, #16]
   1cae0:	ldr	x9, [x9, #32]
   1cae4:	cmp	x8, x9
   1cae8:	b.ne	1caf8 <idpriv_temp_restore@@Base+0xdd0>  // b.any
   1caec:	ldr	x8, [sp, #16]
   1caf0:	stur	x8, [x29, #-8]
   1caf4:	b	1cc0c <idpriv_temp_restore@@Base+0xee4>
   1caf8:	ldr	x8, [sp, #16]
   1cafc:	ldr	x8, [x8, #16]
   1cb00:	str	x8, [sp, #16]
   1cb04:	ldur	x8, [x29, #-32]
   1cb08:	subs	x8, x8, #0x1
   1cb0c:	stur	x8, [x29, #-32]
   1cb10:	b	1ca90 <idpriv_temp_restore@@Base+0xd68>
   1cb14:	mov	x8, xzr
   1cb18:	stur	x8, [x29, #-8]
   1cb1c:	b	1cc0c <idpriv_temp_restore@@Base+0xee4>
   1cb20:	ldur	x8, [x29, #-24]
   1cb24:	cmp	x8, #0x0
   1cb28:	cset	w9, ls  // ls = plast
   1cb2c:	tbnz	w9, #0, 1cb90 <idpriv_temp_restore@@Base+0xe68>
   1cb30:	ldur	x8, [x29, #-16]
   1cb34:	ldr	x8, [x8, #72]
   1cb38:	str	x8, [sp, #16]
   1cb3c:	ldr	x8, [sp, #16]
   1cb40:	ldur	x9, [x29, #-16]
   1cb44:	add	x9, x9, #0x38
   1cb48:	cmp	x8, x9
   1cb4c:	b.eq	1cb90 <idpriv_temp_restore@@Base+0xe68>  // b.none
   1cb50:	ldr	x8, [sp, #16]
   1cb54:	ldr	x9, [sp, #24]
   1cb58:	cmp	x8, x9
   1cb5c:	b.ne	1cb6c <idpriv_temp_restore@@Base+0xe44>  // b.any
   1cb60:	mov	x8, xzr
   1cb64:	stur	x8, [x29, #-8]
   1cb68:	b	1cc0c <idpriv_temp_restore@@Base+0xee4>
   1cb6c:	ldur	x8, [x29, #-24]
   1cb70:	subs	x8, x8, #0x1
   1cb74:	stur	x8, [x29, #-24]
   1cb78:	cbnz	x8, 1cb80 <idpriv_temp_restore@@Base+0xe58>
   1cb7c:	b	1cb90 <idpriv_temp_restore@@Base+0xe68>
   1cb80:	ldr	x8, [sp, #16]
   1cb84:	ldr	x8, [x8, #16]
   1cb88:	str	x8, [sp, #16]
   1cb8c:	b	1cb3c <idpriv_temp_restore@@Base+0xe14>
   1cb90:	ldur	x8, [x29, #-32]
   1cb94:	ldur	x9, [x29, #-16]
   1cb98:	ldr	x9, [x9, #96]
   1cb9c:	cmp	x8, x9
   1cba0:	b.cs	1cc04 <idpriv_temp_restore@@Base+0xedc>  // b.hs, b.nlast
   1cba4:	ldur	x8, [x29, #-16]
   1cba8:	ldr	x8, [x8, #96]
   1cbac:	ldur	x9, [x29, #-32]
   1cbb0:	subs	x8, x8, x9
   1cbb4:	stur	x8, [x29, #-32]
   1cbb8:	ldur	x8, [x29, #-16]
   1cbbc:	ldr	x8, [x8, #80]
   1cbc0:	str	x8, [sp, #16]
   1cbc4:	ldr	x8, [sp, #16]
   1cbc8:	ldr	x9, [sp, #24]
   1cbcc:	cmp	x8, x9
   1cbd0:	b.ne	1cbe0 <idpriv_temp_restore@@Base+0xeb8>  // b.any
   1cbd4:	mov	x8, xzr
   1cbd8:	stur	x8, [x29, #-8]
   1cbdc:	b	1cc0c <idpriv_temp_restore@@Base+0xee4>
   1cbe0:	ldur	x8, [x29, #-32]
   1cbe4:	subs	x8, x8, #0x1
   1cbe8:	stur	x8, [x29, #-32]
   1cbec:	cbnz	x8, 1cbf4 <idpriv_temp_restore@@Base+0xecc>
   1cbf0:	b	1cc04 <idpriv_temp_restore@@Base+0xedc>
   1cbf4:	ldr	x8, [sp, #16]
   1cbf8:	ldr	x8, [x8, #24]
   1cbfc:	str	x8, [sp, #16]
   1cc00:	b	1cbc4 <idpriv_temp_restore@@Base+0xe9c>
   1cc04:	ldr	x8, [sp, #24]
   1cc08:	stur	x8, [x29, #-8]
   1cc0c:	ldur	x0, [x29, #-8]
   1cc10:	ldp	x29, x30, [sp, #128]
   1cc14:	add	sp, sp, #0x90
   1cc18:	ret
   1cc1c:	sub	sp, sp, #0x90
   1cc20:	stp	x29, x30, [sp, #128]
   1cc24:	add	x29, sp, #0x80
   1cc28:	stur	x0, [x29, #-16]
   1cc2c:	stur	x1, [x29, #-24]
   1cc30:	stur	x2, [x29, #-32]
   1cc34:	stur	x3, [x29, #-40]
   1cc38:	ldur	x8, [x29, #-16]
   1cc3c:	ldr	x8, [x8, #96]
   1cc40:	stur	x8, [x29, #-48]
   1cc44:	ldur	x8, [x29, #-24]
   1cc48:	ldur	x9, [x29, #-32]
   1cc4c:	cmp	x8, x9
   1cc50:	b.hi	1cc64 <idpriv_temp_restore@@Base+0xf3c>  // b.pmore
   1cc54:	ldur	x8, [x29, #-32]
   1cc58:	ldur	x9, [x29, #-48]
   1cc5c:	cmp	x8, x9
   1cc60:	b.ls	1cc68 <idpriv_temp_restore@@Base+0xf40>  // b.plast
   1cc64:	bl	a9e0 <abort@plt>
   1cc68:	ldur	x8, [x29, #-16]
   1cc6c:	ldr	x8, [x8, #16]
   1cc70:	cbz	x8, 1cc8c <idpriv_temp_restore@@Base+0xf64>
   1cc74:	ldur	x8, [x29, #-16]
   1cc78:	ldr	x8, [x8, #16]
   1cc7c:	ldur	x0, [x29, #-40]
   1cc80:	blr	x8
   1cc84:	str	x0, [sp, #8]
   1cc88:	b	1cc94 <idpriv_temp_restore@@Base+0xf6c>
   1cc8c:	ldur	x8, [x29, #-40]
   1cc90:	str	x8, [sp, #8]
   1cc94:	ldr	x8, [sp, #8]
   1cc98:	stur	x8, [x29, #-56]
   1cc9c:	ldur	x8, [x29, #-56]
   1cca0:	ldur	x9, [x29, #-16]
   1cca4:	ldr	x9, [x9, #48]
   1cca8:	udiv	x10, x8, x9
   1ccac:	mul	x9, x10, x9
   1ccb0:	subs	x8, x8, x9
   1ccb4:	str	x8, [sp, #64]
   1ccb8:	ldur	x8, [x29, #-16]
   1ccbc:	ldr	x8, [x8, #8]
   1ccc0:	str	x8, [sp, #56]
   1ccc4:	ldur	x8, [x29, #-16]
   1ccc8:	ldrb	w11, [x8, #32]
   1cccc:	tbnz	w11, #0, 1cd5c <idpriv_temp_restore@@Base+0x1034>
   1ccd0:	ldur	x8, [x29, #-16]
   1ccd4:	ldr	x8, [x8, #40]
   1ccd8:	ldr	x9, [sp, #64]
   1ccdc:	mov	x10, #0x8                   	// #8
   1cce0:	mul	x9, x10, x9
   1cce4:	add	x8, x8, x9
   1cce8:	ldr	x8, [x8]
   1ccec:	str	x8, [sp, #48]
   1ccf0:	ldr	x8, [sp, #48]
   1ccf4:	cbz	x8, 1cd58 <idpriv_temp_restore@@Base+0x1030>
   1ccf8:	ldr	x8, [sp, #48]
   1ccfc:	ldr	x8, [x8, #8]
   1cd00:	ldur	x9, [x29, #-56]
   1cd04:	cmp	x8, x9
   1cd08:	b.ne	1cd48 <idpriv_temp_restore@@Base+0x1020>  // b.any
   1cd0c:	ldr	x8, [sp, #56]
   1cd10:	cbz	x8, 1cd30 <idpriv_temp_restore@@Base+0x1008>
   1cd14:	ldr	x8, [sp, #56]
   1cd18:	ldur	x0, [x29, #-40]
   1cd1c:	ldr	x9, [sp, #48]
   1cd20:	ldr	x1, [x9, #32]
   1cd24:	blr	x8
   1cd28:	tbnz	w0, #0, 1cd44 <idpriv_temp_restore@@Base+0x101c>
   1cd2c:	b	1cd48 <idpriv_temp_restore@@Base+0x1020>
   1cd30:	ldur	x8, [x29, #-40]
   1cd34:	ldr	x9, [sp, #48]
   1cd38:	ldr	x9, [x9, #32]
   1cd3c:	cmp	x8, x9
   1cd40:	b.ne	1cd48 <idpriv_temp_restore@@Base+0x1020>  // b.any
   1cd44:	b	1cd58 <idpriv_temp_restore@@Base+0x1030>
   1cd48:	ldr	x8, [sp, #48]
   1cd4c:	ldr	x8, [x8]
   1cd50:	str	x8, [sp, #48]
   1cd54:	b	1ccf0 <idpriv_temp_restore@@Base+0xfc8>
   1cd58:	b	1cef4 <idpriv_temp_restore@@Base+0x11cc>
   1cd5c:	mov	w8, #0x0                   	// #0
   1cd60:	strb	w8, [sp, #47]
   1cd64:	mov	x9, xzr
   1cd68:	str	x9, [sp, #32]
   1cd6c:	ldur	x9, [x29, #-16]
   1cd70:	ldr	x9, [x9, #40]
   1cd74:	ldr	x10, [sp, #64]
   1cd78:	mov	x11, #0x8                   	// #8
   1cd7c:	mul	x10, x11, x10
   1cd80:	add	x9, x9, x10
   1cd84:	ldr	x9, [x9]
   1cd88:	str	x9, [sp, #48]
   1cd8c:	ldr	x8, [sp, #48]
   1cd90:	cbz	x8, 1ce10 <idpriv_temp_restore@@Base+0x10e8>
   1cd94:	ldr	x8, [sp, #48]
   1cd98:	ldr	x8, [x8, #8]
   1cd9c:	ldur	x9, [x29, #-56]
   1cda0:	cmp	x8, x9
   1cda4:	b.ne	1ce00 <idpriv_temp_restore@@Base+0x10d8>  // b.any
   1cda8:	ldr	x8, [sp, #56]
   1cdac:	cbz	x8, 1cdcc <idpriv_temp_restore@@Base+0x10a4>
   1cdb0:	ldr	x8, [sp, #56]
   1cdb4:	ldur	x0, [x29, #-40]
   1cdb8:	ldr	x9, [sp, #48]
   1cdbc:	ldr	x1, [x9, #32]
   1cdc0:	blr	x8
   1cdc4:	tbnz	w0, #0, 1cde0 <idpriv_temp_restore@@Base+0x10b8>
   1cdc8:	b	1ce00 <idpriv_temp_restore@@Base+0x10d8>
   1cdcc:	ldur	x8, [x29, #-40]
   1cdd0:	ldr	x9, [sp, #48]
   1cdd4:	ldr	x9, [x9, #32]
   1cdd8:	cmp	x8, x9
   1cddc:	b.ne	1ce00 <idpriv_temp_restore@@Base+0x10d8>  // b.any
   1cde0:	ldr	x8, [sp, #32]
   1cde4:	cbnz	x8, 1cdf4 <idpriv_temp_restore@@Base+0x10cc>
   1cde8:	ldr	x8, [sp, #48]
   1cdec:	str	x8, [sp, #32]
   1cdf0:	b	1ce00 <idpriv_temp_restore@@Base+0x10d8>
   1cdf4:	mov	w8, #0x1                   	// #1
   1cdf8:	strb	w8, [sp, #47]
   1cdfc:	b	1ce10 <idpriv_temp_restore@@Base+0x10e8>
   1ce00:	ldr	x8, [sp, #48]
   1ce04:	ldr	x8, [x8]
   1ce08:	str	x8, [sp, #48]
   1ce0c:	b	1cd8c <idpriv_temp_restore@@Base+0x1064>
   1ce10:	ldrb	w8, [sp, #47]
   1ce14:	tbnz	w8, #0, 1ce1c <idpriv_temp_restore@@Base+0x10f4>
   1ce18:	b	1ceec <idpriv_temp_restore@@Base+0x11c4>
   1ce1c:	ldur	x8, [x29, #-24]
   1ce20:	str	x8, [sp, #24]
   1ce24:	ldur	x8, [x29, #-16]
   1ce28:	ldr	x8, [x8, #72]
   1ce2c:	str	x8, [sp, #48]
   1ce30:	ldur	x8, [x29, #-24]
   1ce34:	cmp	x8, #0x0
   1ce38:	cset	w9, ls  // ls = plast
   1ce3c:	tbnz	w9, #0, 1ce5c <idpriv_temp_restore@@Base+0x1134>
   1ce40:	ldr	x8, [sp, #48]
   1ce44:	ldr	x8, [x8, #16]
   1ce48:	str	x8, [sp, #48]
   1ce4c:	ldur	x8, [x29, #-24]
   1ce50:	subs	x8, x8, #0x1
   1ce54:	stur	x8, [x29, #-24]
   1ce58:	b	1ce30 <idpriv_temp_restore@@Base+0x1108>
   1ce5c:	ldr	x8, [sp, #24]
   1ce60:	ldur	x9, [x29, #-32]
   1ce64:	cmp	x8, x9
   1ce68:	b.cs	1cee0 <idpriv_temp_restore@@Base+0x11b8>  // b.hs, b.nlast
   1ce6c:	ldr	x8, [sp, #48]
   1ce70:	ldr	x8, [x8, #8]
   1ce74:	ldur	x9, [x29, #-56]
   1ce78:	cmp	x8, x9
   1ce7c:	b.ne	1cec4 <idpriv_temp_restore@@Base+0x119c>  // b.any
   1ce80:	ldr	x8, [sp, #56]
   1ce84:	cbz	x8, 1cea4 <idpriv_temp_restore@@Base+0x117c>
   1ce88:	ldr	x8, [sp, #56]
   1ce8c:	ldur	x0, [x29, #-40]
   1ce90:	ldr	x9, [sp, #48]
   1ce94:	ldr	x1, [x9, #32]
   1ce98:	blr	x8
   1ce9c:	tbnz	w0, #0, 1ceb8 <idpriv_temp_restore@@Base+0x1190>
   1cea0:	b	1cec4 <idpriv_temp_restore@@Base+0x119c>
   1cea4:	ldur	x8, [x29, #-40]
   1cea8:	ldr	x9, [sp, #48]
   1ceac:	ldr	x9, [x9, #32]
   1ceb0:	cmp	x8, x9
   1ceb4:	b.ne	1cec4 <idpriv_temp_restore@@Base+0x119c>  // b.any
   1ceb8:	ldr	x8, [sp, #24]
   1cebc:	stur	x8, [x29, #-8]
   1cec0:	b	1cf74 <idpriv_temp_restore@@Base+0x124c>
   1cec4:	ldr	x8, [sp, #48]
   1cec8:	ldr	x8, [x8, #16]
   1cecc:	str	x8, [sp, #48]
   1ced0:	ldr	x8, [sp, #24]
   1ced4:	add	x8, x8, #0x1
   1ced8:	str	x8, [sp, #24]
   1cedc:	b	1ce5c <idpriv_temp_restore@@Base+0x1134>
   1cee0:	mov	x8, #0xffffffffffffffff    	// #-1
   1cee4:	stur	x8, [x29, #-8]
   1cee8:	b	1cf74 <idpriv_temp_restore@@Base+0x124c>
   1ceec:	ldr	x8, [sp, #32]
   1cef0:	str	x8, [sp, #48]
   1cef4:	ldr	x8, [sp, #48]
   1cef8:	cbnz	x8, 1cf08 <idpriv_temp_restore@@Base+0x11e0>
   1cefc:	mov	x8, #0xffffffffffffffff    	// #-1
   1cf00:	stur	x8, [x29, #-8]
   1cf04:	b	1cf74 <idpriv_temp_restore@@Base+0x124c>
   1cf08:	str	xzr, [sp, #16]
   1cf0c:	ldr	x8, [sp, #48]
   1cf10:	ldr	x8, [x8, #24]
   1cf14:	ldur	x9, [x29, #-16]
   1cf18:	add	x9, x9, #0x38
   1cf1c:	cmp	x8, x9
   1cf20:	b.eq	1cf40 <idpriv_temp_restore@@Base+0x1218>  // b.none
   1cf24:	ldr	x8, [sp, #16]
   1cf28:	add	x8, x8, #0x1
   1cf2c:	str	x8, [sp, #16]
   1cf30:	ldr	x8, [sp, #48]
   1cf34:	ldr	x8, [x8, #24]
   1cf38:	str	x8, [sp, #48]
   1cf3c:	b	1cf0c <idpriv_temp_restore@@Base+0x11e4>
   1cf40:	ldr	x8, [sp, #16]
   1cf44:	ldur	x9, [x29, #-24]
   1cf48:	cmp	x8, x9
   1cf4c:	b.cc	1cf6c <idpriv_temp_restore@@Base+0x1244>  // b.lo, b.ul, b.last
   1cf50:	ldr	x8, [sp, #16]
   1cf54:	ldur	x9, [x29, #-32]
   1cf58:	cmp	x8, x9
   1cf5c:	b.cs	1cf6c <idpriv_temp_restore@@Base+0x1244>  // b.hs, b.nlast
   1cf60:	ldr	x8, [sp, #16]
   1cf64:	stur	x8, [x29, #-8]
   1cf68:	b	1cf74 <idpriv_temp_restore@@Base+0x124c>
   1cf6c:	mov	x8, #0xffffffffffffffff    	// #-1
   1cf70:	stur	x8, [x29, #-8]
   1cf74:	ldur	x0, [x29, #-8]
   1cf78:	ldp	x29, x30, [sp, #128]
   1cf7c:	add	sp, sp, #0x90
   1cf80:	ret
   1cf84:	sub	sp, sp, #0x40
   1cf88:	stp	x29, x30, [sp, #48]
   1cf8c:	add	x29, sp, #0x30
   1cf90:	mov	x8, #0x28                  	// #40
   1cf94:	mov	w9, #0x0                   	// #0
   1cf98:	stur	x0, [x29, #-16]
   1cf9c:	str	x1, [sp, #24]
   1cfa0:	mov	x0, x8
   1cfa4:	str	w9, [sp, #12]
   1cfa8:	bl	af10 <malloc@plt>
   1cfac:	str	x0, [sp, #16]
   1cfb0:	ldr	x8, [sp, #16]
   1cfb4:	cbnz	x8, 1cfc4 <idpriv_temp_restore@@Base+0x129c>
   1cfb8:	mov	x8, xzr
   1cfbc:	stur	x8, [x29, #-8]
   1cfc0:	b	1d098 <idpriv_temp_restore@@Base+0x1370>
   1cfc4:	ldr	x8, [sp, #24]
   1cfc8:	ldr	x9, [sp, #16]
   1cfcc:	str	x8, [x9, #32]
   1cfd0:	ldur	x8, [x29, #-16]
   1cfd4:	ldr	x8, [x8, #16]
   1cfd8:	cbz	x8, 1cff8 <idpriv_temp_restore@@Base+0x12d0>
   1cfdc:	ldur	x8, [x29, #-16]
   1cfe0:	ldr	x8, [x8, #16]
   1cfe4:	ldr	x9, [sp, #16]
   1cfe8:	ldr	x0, [x9, #32]
   1cfec:	blr	x8
   1cff0:	str	x0, [sp]
   1cff4:	b	1d004 <idpriv_temp_restore@@Base+0x12dc>
   1cff8:	ldr	x8, [sp, #16]
   1cffc:	ldr	x8, [x8, #32]
   1d000:	str	x8, [sp]
   1d004:	ldr	x8, [sp]
   1d008:	ldr	x9, [sp, #16]
   1d00c:	str	x8, [x9, #8]
   1d010:	ldur	x0, [x29, #-16]
   1d014:	ldr	x1, [sp, #16]
   1d018:	bl	1e320 <idpriv_temp_restore@@Base+0x25f8>
   1d01c:	ldr	w10, [sp, #12]
   1d020:	tbnz	w10, #0, 1d028 <idpriv_temp_restore@@Base+0x1300>
   1d024:	b	1d03c <idpriv_temp_restore@@Base+0x1314>
   1d028:	ldr	x0, [sp, #16]
   1d02c:	bl	a930 <free@plt>
   1d030:	mov	x8, xzr
   1d034:	stur	x8, [x29, #-8]
   1d038:	b	1d098 <idpriv_temp_restore@@Base+0x1370>
   1d03c:	ldur	x8, [x29, #-16]
   1d040:	add	x8, x8, #0x38
   1d044:	ldr	x9, [sp, #16]
   1d048:	str	x8, [x9, #24]
   1d04c:	ldur	x8, [x29, #-16]
   1d050:	ldr	x8, [x8, #72]
   1d054:	ldr	x9, [sp, #16]
   1d058:	str	x8, [x9, #16]
   1d05c:	ldr	x8, [sp, #16]
   1d060:	ldr	x9, [sp, #16]
   1d064:	ldr	x9, [x9, #16]
   1d068:	str	x8, [x9, #24]
   1d06c:	ldr	x8, [sp, #16]
   1d070:	ldur	x9, [x29, #-16]
   1d074:	str	x8, [x9, #72]
   1d078:	ldur	x8, [x29, #-16]
   1d07c:	ldr	x9, [x8, #96]
   1d080:	add	x9, x9, #0x1
   1d084:	str	x9, [x8, #96]
   1d088:	ldur	x0, [x29, #-16]
   1d08c:	bl	1e438 <idpriv_temp_restore@@Base+0x2710>
   1d090:	ldr	x8, [sp, #16]
   1d094:	stur	x8, [x29, #-8]
   1d098:	ldur	x0, [x29, #-8]
   1d09c:	ldp	x29, x30, [sp, #48]
   1d0a0:	add	sp, sp, #0x40
   1d0a4:	ret
   1d0a8:	sub	sp, sp, #0x40
   1d0ac:	stp	x29, x30, [sp, #48]
   1d0b0:	add	x29, sp, #0x30
   1d0b4:	mov	x8, #0x28                  	// #40
   1d0b8:	mov	w9, #0x0                   	// #0
   1d0bc:	stur	x0, [x29, #-16]
   1d0c0:	str	x1, [sp, #24]
   1d0c4:	mov	x0, x8
   1d0c8:	str	w9, [sp, #12]
   1d0cc:	bl	af10 <malloc@plt>
   1d0d0:	str	x0, [sp, #16]
   1d0d4:	ldr	x8, [sp, #16]
   1d0d8:	cbnz	x8, 1d0e8 <idpriv_temp_restore@@Base+0x13c0>
   1d0dc:	mov	x8, xzr
   1d0e0:	stur	x8, [x29, #-8]
   1d0e4:	b	1d1bc <idpriv_temp_restore@@Base+0x1494>
   1d0e8:	ldr	x8, [sp, #24]
   1d0ec:	ldr	x9, [sp, #16]
   1d0f0:	str	x8, [x9, #32]
   1d0f4:	ldur	x8, [x29, #-16]
   1d0f8:	ldr	x8, [x8, #16]
   1d0fc:	cbz	x8, 1d11c <idpriv_temp_restore@@Base+0x13f4>
   1d100:	ldur	x8, [x29, #-16]
   1d104:	ldr	x8, [x8, #16]
   1d108:	ldr	x9, [sp, #16]
   1d10c:	ldr	x0, [x9, #32]
   1d110:	blr	x8
   1d114:	str	x0, [sp]
   1d118:	b	1d128 <idpriv_temp_restore@@Base+0x1400>
   1d11c:	ldr	x8, [sp, #16]
   1d120:	ldr	x8, [x8, #32]
   1d124:	str	x8, [sp]
   1d128:	ldr	x8, [sp]
   1d12c:	ldr	x9, [sp, #16]
   1d130:	str	x8, [x9, #8]
   1d134:	ldur	x0, [x29, #-16]
   1d138:	ldr	x1, [sp, #16]
   1d13c:	bl	1e320 <idpriv_temp_restore@@Base+0x25f8>
   1d140:	ldr	w10, [sp, #12]
   1d144:	tbnz	w10, #0, 1d14c <idpriv_temp_restore@@Base+0x1424>
   1d148:	b	1d160 <idpriv_temp_restore@@Base+0x1438>
   1d14c:	ldr	x0, [sp, #16]
   1d150:	bl	a930 <free@plt>
   1d154:	mov	x8, xzr
   1d158:	stur	x8, [x29, #-8]
   1d15c:	b	1d1bc <idpriv_temp_restore@@Base+0x1494>
   1d160:	ldur	x8, [x29, #-16]
   1d164:	add	x8, x8, #0x38
   1d168:	ldr	x9, [sp, #16]
   1d16c:	str	x8, [x9, #16]
   1d170:	ldur	x8, [x29, #-16]
   1d174:	ldr	x8, [x8, #80]
   1d178:	ldr	x9, [sp, #16]
   1d17c:	str	x8, [x9, #24]
   1d180:	ldr	x8, [sp, #16]
   1d184:	ldr	x9, [sp, #16]
   1d188:	ldr	x9, [x9, #24]
   1d18c:	str	x8, [x9, #16]
   1d190:	ldr	x8, [sp, #16]
   1d194:	ldur	x9, [x29, #-16]
   1d198:	str	x8, [x9, #80]
   1d19c:	ldur	x8, [x29, #-16]
   1d1a0:	ldr	x9, [x8, #96]
   1d1a4:	add	x9, x9, #0x1
   1d1a8:	str	x9, [x8, #96]
   1d1ac:	ldur	x0, [x29, #-16]
   1d1b0:	bl	1e438 <idpriv_temp_restore@@Base+0x2710>
   1d1b4:	ldr	x8, [sp, #16]
   1d1b8:	stur	x8, [x29, #-8]
   1d1bc:	ldur	x0, [x29, #-8]
   1d1c0:	ldp	x29, x30, [sp, #48]
   1d1c4:	add	sp, sp, #0x40
   1d1c8:	ret
   1d1cc:	sub	sp, sp, #0x50
   1d1d0:	stp	x29, x30, [sp, #64]
   1d1d4:	add	x29, sp, #0x40
   1d1d8:	mov	x8, #0x28                  	// #40
   1d1dc:	mov	w9, #0x0                   	// #0
   1d1e0:	stur	x0, [x29, #-16]
   1d1e4:	stur	x1, [x29, #-24]
   1d1e8:	str	x2, [sp, #32]
   1d1ec:	mov	x0, x8
   1d1f0:	str	w9, [sp, #20]
   1d1f4:	bl	af10 <malloc@plt>
   1d1f8:	str	x0, [sp, #24]
   1d1fc:	ldr	x8, [sp, #24]
   1d200:	cbnz	x8, 1d210 <idpriv_temp_restore@@Base+0x14e8>
   1d204:	mov	x8, xzr
   1d208:	stur	x8, [x29, #-8]
   1d20c:	b	1d2e0 <idpriv_temp_restore@@Base+0x15b8>
   1d210:	ldr	x8, [sp, #32]
   1d214:	ldr	x9, [sp, #24]
   1d218:	str	x8, [x9, #32]
   1d21c:	ldur	x8, [x29, #-16]
   1d220:	ldr	x8, [x8, #16]
   1d224:	cbz	x8, 1d244 <idpriv_temp_restore@@Base+0x151c>
   1d228:	ldur	x8, [x29, #-16]
   1d22c:	ldr	x8, [x8, #16]
   1d230:	ldr	x9, [sp, #24]
   1d234:	ldr	x0, [x9, #32]
   1d238:	blr	x8
   1d23c:	str	x0, [sp, #8]
   1d240:	b	1d250 <idpriv_temp_restore@@Base+0x1528>
   1d244:	ldr	x8, [sp, #24]
   1d248:	ldr	x8, [x8, #32]
   1d24c:	str	x8, [sp, #8]
   1d250:	ldr	x8, [sp, #8]
   1d254:	ldr	x9, [sp, #24]
   1d258:	str	x8, [x9, #8]
   1d25c:	ldur	x0, [x29, #-16]
   1d260:	ldr	x1, [sp, #24]
   1d264:	bl	1e320 <idpriv_temp_restore@@Base+0x25f8>
   1d268:	ldr	w10, [sp, #20]
   1d26c:	tbnz	w10, #0, 1d274 <idpriv_temp_restore@@Base+0x154c>
   1d270:	b	1d288 <idpriv_temp_restore@@Base+0x1560>
   1d274:	ldr	x0, [sp, #24]
   1d278:	bl	a930 <free@plt>
   1d27c:	mov	x8, xzr
   1d280:	stur	x8, [x29, #-8]
   1d284:	b	1d2e0 <idpriv_temp_restore@@Base+0x15b8>
   1d288:	ldur	x8, [x29, #-24]
   1d28c:	ldr	x9, [sp, #24]
   1d290:	str	x8, [x9, #16]
   1d294:	ldur	x8, [x29, #-24]
   1d298:	ldr	x8, [x8, #24]
   1d29c:	ldr	x9, [sp, #24]
   1d2a0:	str	x8, [x9, #24]
   1d2a4:	ldr	x8, [sp, #24]
   1d2a8:	ldr	x9, [sp, #24]
   1d2ac:	ldr	x9, [x9, #24]
   1d2b0:	str	x8, [x9, #16]
   1d2b4:	ldr	x8, [sp, #24]
   1d2b8:	ldur	x9, [x29, #-24]
   1d2bc:	str	x8, [x9, #24]
   1d2c0:	ldur	x8, [x29, #-16]
   1d2c4:	ldr	x9, [x8, #96]
   1d2c8:	add	x9, x9, #0x1
   1d2cc:	str	x9, [x8, #96]
   1d2d0:	ldur	x0, [x29, #-16]
   1d2d4:	bl	1e438 <idpriv_temp_restore@@Base+0x2710>
   1d2d8:	ldr	x8, [sp, #24]
   1d2dc:	stur	x8, [x29, #-8]
   1d2e0:	ldur	x0, [x29, #-8]
   1d2e4:	ldp	x29, x30, [sp, #64]
   1d2e8:	add	sp, sp, #0x50
   1d2ec:	ret
   1d2f0:	sub	sp, sp, #0x50
   1d2f4:	stp	x29, x30, [sp, #64]
   1d2f8:	add	x29, sp, #0x40
   1d2fc:	mov	x8, #0x28                  	// #40
   1d300:	mov	w9, #0x0                   	// #0
   1d304:	stur	x0, [x29, #-16]
   1d308:	stur	x1, [x29, #-24]
   1d30c:	str	x2, [sp, #32]
   1d310:	mov	x0, x8
   1d314:	str	w9, [sp, #20]
   1d318:	bl	af10 <malloc@plt>
   1d31c:	str	x0, [sp, #24]
   1d320:	ldr	x8, [sp, #24]
   1d324:	cbnz	x8, 1d334 <idpriv_temp_restore@@Base+0x160c>
   1d328:	mov	x8, xzr
   1d32c:	stur	x8, [x29, #-8]
   1d330:	b	1d404 <idpriv_temp_restore@@Base+0x16dc>
   1d334:	ldr	x8, [sp, #32]
   1d338:	ldr	x9, [sp, #24]
   1d33c:	str	x8, [x9, #32]
   1d340:	ldur	x8, [x29, #-16]
   1d344:	ldr	x8, [x8, #16]
   1d348:	cbz	x8, 1d368 <idpriv_temp_restore@@Base+0x1640>
   1d34c:	ldur	x8, [x29, #-16]
   1d350:	ldr	x8, [x8, #16]
   1d354:	ldr	x9, [sp, #24]
   1d358:	ldr	x0, [x9, #32]
   1d35c:	blr	x8
   1d360:	str	x0, [sp, #8]
   1d364:	b	1d374 <idpriv_temp_restore@@Base+0x164c>
   1d368:	ldr	x8, [sp, #24]
   1d36c:	ldr	x8, [x8, #32]
   1d370:	str	x8, [sp, #8]
   1d374:	ldr	x8, [sp, #8]
   1d378:	ldr	x9, [sp, #24]
   1d37c:	str	x8, [x9, #8]
   1d380:	ldur	x0, [x29, #-16]
   1d384:	ldr	x1, [sp, #24]
   1d388:	bl	1e320 <idpriv_temp_restore@@Base+0x25f8>
   1d38c:	ldr	w10, [sp, #20]
   1d390:	tbnz	w10, #0, 1d398 <idpriv_temp_restore@@Base+0x1670>
   1d394:	b	1d3ac <idpriv_temp_restore@@Base+0x1684>
   1d398:	ldr	x0, [sp, #24]
   1d39c:	bl	a930 <free@plt>
   1d3a0:	mov	x8, xzr
   1d3a4:	stur	x8, [x29, #-8]
   1d3a8:	b	1d404 <idpriv_temp_restore@@Base+0x16dc>
   1d3ac:	ldur	x8, [x29, #-24]
   1d3b0:	ldr	x9, [sp, #24]
   1d3b4:	str	x8, [x9, #24]
   1d3b8:	ldur	x8, [x29, #-24]
   1d3bc:	ldr	x8, [x8, #16]
   1d3c0:	ldr	x9, [sp, #24]
   1d3c4:	str	x8, [x9, #16]
   1d3c8:	ldr	x8, [sp, #24]
   1d3cc:	ldr	x9, [sp, #24]
   1d3d0:	ldr	x9, [x9, #16]
   1d3d4:	str	x8, [x9, #24]
   1d3d8:	ldr	x8, [sp, #24]
   1d3dc:	ldur	x9, [x29, #-24]
   1d3e0:	str	x8, [x9, #16]
   1d3e4:	ldur	x8, [x29, #-16]
   1d3e8:	ldr	x9, [x8, #96]
   1d3ec:	add	x9, x9, #0x1
   1d3f0:	str	x9, [x8, #96]
   1d3f4:	ldur	x0, [x29, #-16]
   1d3f8:	bl	1e438 <idpriv_temp_restore@@Base+0x2710>
   1d3fc:	ldr	x8, [sp, #24]
   1d400:	stur	x8, [x29, #-8]
   1d404:	ldur	x0, [x29, #-8]
   1d408:	ldp	x29, x30, [sp, #64]
   1d40c:	add	sp, sp, #0x50
   1d410:	ret
   1d414:	sub	sp, sp, #0x60
   1d418:	stp	x29, x30, [sp, #80]
   1d41c:	add	x29, sp, #0x50
   1d420:	mov	w8, #0x0                   	// #0
   1d424:	stur	x0, [x29, #-16]
   1d428:	stur	x1, [x29, #-24]
   1d42c:	stur	x2, [x29, #-32]
   1d430:	ldur	x9, [x29, #-16]
   1d434:	ldr	x9, [x9, #96]
   1d438:	str	x9, [sp, #40]
   1d43c:	ldur	x9, [x29, #-24]
   1d440:	ldr	x10, [sp, #40]
   1d444:	cmp	x9, x10
   1d448:	str	w8, [sp, #12]
   1d44c:	b.ls	1d454 <idpriv_temp_restore@@Base+0x172c>  // b.plast
   1d450:	bl	a9e0 <abort@plt>
   1d454:	mov	x0, #0x28                  	// #40
   1d458:	bl	af10 <malloc@plt>
   1d45c:	str	x0, [sp, #32]
   1d460:	ldr	x8, [sp, #32]
   1d464:	cbnz	x8, 1d474 <idpriv_temp_restore@@Base+0x174c>
   1d468:	mov	x8, xzr
   1d46c:	stur	x8, [x29, #-8]
   1d470:	b	1d618 <idpriv_temp_restore@@Base+0x18f0>
   1d474:	ldur	x8, [x29, #-32]
   1d478:	ldr	x9, [sp, #32]
   1d47c:	str	x8, [x9, #32]
   1d480:	ldur	x8, [x29, #-16]
   1d484:	ldr	x8, [x8, #16]
   1d488:	cbz	x8, 1d4a8 <idpriv_temp_restore@@Base+0x1780>
   1d48c:	ldur	x8, [x29, #-16]
   1d490:	ldr	x8, [x8, #16]
   1d494:	ldr	x9, [sp, #32]
   1d498:	ldr	x0, [x9, #32]
   1d49c:	blr	x8
   1d4a0:	str	x0, [sp]
   1d4a4:	b	1d4b4 <idpriv_temp_restore@@Base+0x178c>
   1d4a8:	ldr	x8, [sp, #32]
   1d4ac:	ldr	x8, [x8, #32]
   1d4b0:	str	x8, [sp]
   1d4b4:	ldr	x8, [sp]
   1d4b8:	ldr	x9, [sp, #32]
   1d4bc:	str	x8, [x9, #8]
   1d4c0:	ldur	x0, [x29, #-16]
   1d4c4:	ldr	x1, [sp, #32]
   1d4c8:	bl	1e320 <idpriv_temp_restore@@Base+0x25f8>
   1d4cc:	ldr	w10, [sp, #12]
   1d4d0:	tbnz	w10, #0, 1d4d8 <idpriv_temp_restore@@Base+0x17b0>
   1d4d4:	b	1d4ec <idpriv_temp_restore@@Base+0x17c4>
   1d4d8:	ldr	x0, [sp, #32]
   1d4dc:	bl	a930 <free@plt>
   1d4e0:	mov	x8, xzr
   1d4e4:	stur	x8, [x29, #-8]
   1d4e8:	b	1d618 <idpriv_temp_restore@@Base+0x18f0>
   1d4ec:	ldur	x8, [x29, #-24]
   1d4f0:	ldr	x9, [sp, #40]
   1d4f4:	mov	x10, #0x2                   	// #2
   1d4f8:	udiv	x9, x9, x10
   1d4fc:	cmp	x8, x9
   1d500:	b.hi	1d578 <idpriv_temp_restore@@Base+0x1850>  // b.pmore
   1d504:	ldur	x8, [x29, #-16]
   1d508:	add	x8, x8, #0x38
   1d50c:	str	x8, [sp, #24]
   1d510:	ldur	x8, [x29, #-24]
   1d514:	cmp	x8, #0x0
   1d518:	cset	w9, ls  // ls = plast
   1d51c:	tbnz	w9, #0, 1d53c <idpriv_temp_restore@@Base+0x1814>
   1d520:	ldr	x8, [sp, #24]
   1d524:	ldr	x8, [x8, #16]
   1d528:	str	x8, [sp, #24]
   1d52c:	ldur	x8, [x29, #-24]
   1d530:	subs	x8, x8, #0x1
   1d534:	stur	x8, [x29, #-24]
   1d538:	b	1d510 <idpriv_temp_restore@@Base+0x17e8>
   1d53c:	ldr	x8, [sp, #24]
   1d540:	ldr	x9, [sp, #32]
   1d544:	str	x8, [x9, #24]
   1d548:	ldr	x8, [sp, #24]
   1d54c:	ldr	x8, [x8, #16]
   1d550:	ldr	x9, [sp, #32]
   1d554:	str	x8, [x9, #16]
   1d558:	ldr	x8, [sp, #32]
   1d55c:	ldr	x9, [sp, #32]
   1d560:	ldr	x9, [x9, #16]
   1d564:	str	x8, [x9, #24]
   1d568:	ldr	x8, [sp, #32]
   1d56c:	ldr	x9, [sp, #24]
   1d570:	str	x8, [x9, #16]
   1d574:	b	1d5f8 <idpriv_temp_restore@@Base+0x18d0>
   1d578:	ldr	x8, [sp, #40]
   1d57c:	ldur	x9, [x29, #-24]
   1d580:	subs	x8, x8, x9
   1d584:	stur	x8, [x29, #-24]
   1d588:	ldur	x8, [x29, #-16]
   1d58c:	add	x8, x8, #0x38
   1d590:	str	x8, [sp, #16]
   1d594:	ldur	x8, [x29, #-24]
   1d598:	cmp	x8, #0x0
   1d59c:	cset	w9, ls  // ls = plast
   1d5a0:	tbnz	w9, #0, 1d5c0 <idpriv_temp_restore@@Base+0x1898>
   1d5a4:	ldr	x8, [sp, #16]
   1d5a8:	ldr	x8, [x8, #24]
   1d5ac:	str	x8, [sp, #16]
   1d5b0:	ldur	x8, [x29, #-24]
   1d5b4:	subs	x8, x8, #0x1
   1d5b8:	stur	x8, [x29, #-24]
   1d5bc:	b	1d594 <idpriv_temp_restore@@Base+0x186c>
   1d5c0:	ldr	x8, [sp, #16]
   1d5c4:	ldr	x9, [sp, #32]
   1d5c8:	str	x8, [x9, #16]
   1d5cc:	ldr	x8, [sp, #16]
   1d5d0:	ldr	x8, [x8, #24]
   1d5d4:	ldr	x9, [sp, #32]
   1d5d8:	str	x8, [x9, #24]
   1d5dc:	ldr	x8, [sp, #32]
   1d5e0:	ldr	x9, [sp, #32]
   1d5e4:	ldr	x9, [x9, #24]
   1d5e8:	str	x8, [x9, #16]
   1d5ec:	ldr	x8, [sp, #32]
   1d5f0:	ldr	x9, [sp, #16]
   1d5f4:	str	x8, [x9, #24]
   1d5f8:	ldur	x8, [x29, #-16]
   1d5fc:	ldr	x9, [x8, #96]
   1d600:	add	x9, x9, #0x1
   1d604:	str	x9, [x8, #96]
   1d608:	ldur	x0, [x29, #-16]
   1d60c:	bl	1e438 <idpriv_temp_restore@@Base+0x2710>
   1d610:	ldr	x8, [sp, #32]
   1d614:	stur	x8, [x29, #-8]
   1d618:	ldur	x0, [x29, #-8]
   1d61c:	ldp	x29, x30, [sp, #80]
   1d620:	add	sp, sp, #0x60
   1d624:	ret
   1d628:	sub	sp, sp, #0x30
   1d62c:	stp	x29, x30, [sp, #32]
   1d630:	add	x29, sp, #0x20
   1d634:	stur	x0, [x29, #-8]
   1d638:	str	x1, [sp, #16]
   1d63c:	ldur	x0, [x29, #-8]
   1d640:	ldr	x1, [sp, #16]
   1d644:	bl	1e394 <idpriv_temp_restore@@Base+0x266c>
   1d648:	ldr	x8, [sp, #16]
   1d64c:	ldr	x8, [x8, #24]
   1d650:	str	x8, [sp, #8]
   1d654:	ldr	x8, [sp, #16]
   1d658:	ldr	x8, [x8, #16]
   1d65c:	str	x8, [sp]
   1d660:	ldr	x8, [sp]
   1d664:	ldr	x9, [sp, #8]
   1d668:	str	x8, [x9, #16]
   1d66c:	ldr	x8, [sp, #8]
   1d670:	ldr	x9, [sp]
   1d674:	str	x8, [x9, #24]
   1d678:	ldur	x8, [x29, #-8]
   1d67c:	ldr	x9, [x8, #96]
   1d680:	subs	x9, x9, #0x1
   1d684:	str	x9, [x8, #96]
   1d688:	ldur	x8, [x29, #-8]
   1d68c:	ldr	x8, [x8, #24]
   1d690:	cbz	x8, 1d6a8 <idpriv_temp_restore@@Base+0x1980>
   1d694:	ldur	x8, [x29, #-8]
   1d698:	ldr	x8, [x8, #24]
   1d69c:	ldr	x9, [sp, #16]
   1d6a0:	ldr	x0, [x9, #32]
   1d6a4:	blr	x8
   1d6a8:	ldr	x0, [sp, #16]
   1d6ac:	bl	a930 <free@plt>
   1d6b0:	mov	w8, #0x1                   	// #1
   1d6b4:	and	w0, w8, #0x1
   1d6b8:	ldp	x29, x30, [sp, #32]
   1d6bc:	add	sp, sp, #0x30
   1d6c0:	ret
   1d6c4:	sub	sp, sp, #0x50
   1d6c8:	stp	x29, x30, [sp, #64]
   1d6cc:	add	x29, sp, #0x40
   1d6d0:	stur	x0, [x29, #-8]
   1d6d4:	stur	x1, [x29, #-16]
   1d6d8:	ldur	x8, [x29, #-8]
   1d6dc:	ldr	x8, [x8, #96]
   1d6e0:	stur	x8, [x29, #-24]
   1d6e4:	ldur	x8, [x29, #-16]
   1d6e8:	ldur	x9, [x29, #-24]
   1d6ec:	cmp	x8, x9
   1d6f0:	b.cc	1d6f8 <idpriv_temp_restore@@Base+0x19d0>  // b.lo, b.ul, b.last
   1d6f4:	bl	a9e0 <abort@plt>
   1d6f8:	ldur	x8, [x29, #-16]
   1d6fc:	ldur	x9, [x29, #-24]
   1d700:	subs	x9, x9, #0x1
   1d704:	mov	x10, #0x2                   	// #2
   1d708:	udiv	x9, x9, x10
   1d70c:	cmp	x8, x9
   1d710:	b.hi	1d784 <idpriv_temp_restore@@Base+0x1a5c>  // b.pmore
   1d714:	ldur	x8, [x29, #-8]
   1d718:	add	x8, x8, #0x38
   1d71c:	str	x8, [sp, #24]
   1d720:	ldur	x8, [x29, #-16]
   1d724:	cmp	x8, #0x0
   1d728:	cset	w9, ls  // ls = plast
   1d72c:	tbnz	w9, #0, 1d74c <idpriv_temp_restore@@Base+0x1a24>
   1d730:	ldr	x8, [sp, #24]
   1d734:	ldr	x8, [x8, #16]
   1d738:	str	x8, [sp, #24]
   1d73c:	ldur	x8, [x29, #-16]
   1d740:	subs	x8, x8, #0x1
   1d744:	stur	x8, [x29, #-16]
   1d748:	b	1d720 <idpriv_temp_restore@@Base+0x19f8>
   1d74c:	ldr	x8, [sp, #24]
   1d750:	ldr	x8, [x8, #16]
   1d754:	str	x8, [sp, #32]
   1d758:	ldr	x8, [sp, #24]
   1d75c:	ldr	x8, [x8, #16]
   1d760:	ldr	x8, [x8, #16]
   1d764:	str	x8, [sp, #16]
   1d768:	ldr	x8, [sp, #16]
   1d76c:	ldr	x9, [sp, #24]
   1d770:	str	x8, [x9, #16]
   1d774:	ldr	x8, [sp, #24]
   1d778:	ldr	x9, [sp, #16]
   1d77c:	str	x8, [x9, #24]
   1d780:	b	1d804 <idpriv_temp_restore@@Base+0x1adc>
   1d784:	ldur	x8, [x29, #-24]
   1d788:	subs	x8, x8, #0x1
   1d78c:	ldur	x9, [x29, #-16]
   1d790:	subs	x8, x8, x9
   1d794:	stur	x8, [x29, #-16]
   1d798:	ldur	x8, [x29, #-8]
   1d79c:	add	x8, x8, #0x38
   1d7a0:	str	x8, [sp, #8]
   1d7a4:	ldur	x8, [x29, #-16]
   1d7a8:	cmp	x8, #0x0
   1d7ac:	cset	w9, ls  // ls = plast
   1d7b0:	tbnz	w9, #0, 1d7d0 <idpriv_temp_restore@@Base+0x1aa8>
   1d7b4:	ldr	x8, [sp, #8]
   1d7b8:	ldr	x8, [x8, #24]
   1d7bc:	str	x8, [sp, #8]
   1d7c0:	ldur	x8, [x29, #-16]
   1d7c4:	subs	x8, x8, #0x1
   1d7c8:	stur	x8, [x29, #-16]
   1d7cc:	b	1d7a4 <idpriv_temp_restore@@Base+0x1a7c>
   1d7d0:	ldr	x8, [sp, #8]
   1d7d4:	ldr	x8, [x8, #24]
   1d7d8:	str	x8, [sp, #32]
   1d7dc:	ldr	x8, [sp, #8]
   1d7e0:	ldr	x8, [x8, #24]
   1d7e4:	ldr	x8, [x8, #24]
   1d7e8:	str	x8, [sp]
   1d7ec:	ldr	x8, [sp]
   1d7f0:	ldr	x9, [sp, #8]
   1d7f4:	str	x8, [x9, #24]
   1d7f8:	ldr	x8, [sp, #8]
   1d7fc:	ldr	x9, [sp]
   1d800:	str	x8, [x9, #16]
   1d804:	ldur	x0, [x29, #-8]
   1d808:	ldr	x1, [sp, #32]
   1d80c:	bl	1e394 <idpriv_temp_restore@@Base+0x266c>
   1d810:	ldur	x8, [x29, #-8]
   1d814:	ldr	x9, [x8, #96]
   1d818:	subs	x9, x9, #0x1
   1d81c:	str	x9, [x8, #96]
   1d820:	ldur	x8, [x29, #-8]
   1d824:	ldr	x8, [x8, #24]
   1d828:	cbz	x8, 1d840 <idpriv_temp_restore@@Base+0x1b18>
   1d82c:	ldur	x8, [x29, #-8]
   1d830:	ldr	x8, [x8, #24]
   1d834:	ldr	x9, [sp, #32]
   1d838:	ldr	x0, [x9, #32]
   1d83c:	blr	x8
   1d840:	ldr	x0, [sp, #32]
   1d844:	bl	a930 <free@plt>
   1d848:	mov	w8, #0x1                   	// #1
   1d84c:	and	w0, w8, #0x1
   1d850:	ldp	x29, x30, [sp, #64]
   1d854:	add	sp, sp, #0x50
   1d858:	ret
   1d85c:	sub	sp, sp, #0x30
   1d860:	stp	x29, x30, [sp, #32]
   1d864:	add	x29, sp, #0x20
   1d868:	mov	x8, xzr
   1d86c:	str	x0, [sp, #16]
   1d870:	str	x1, [sp, #8]
   1d874:	ldr	x0, [sp, #16]
   1d878:	ldr	x9, [sp, #16]
   1d87c:	ldr	x2, [x9, #96]
   1d880:	ldr	x3, [sp, #8]
   1d884:	mov	x1, x8
   1d888:	bl	1c768 <idpriv_temp_restore@@Base+0xa40>
   1d88c:	str	x0, [sp]
   1d890:	ldr	x8, [sp]
   1d894:	cbz	x8, 1d8b0 <idpriv_temp_restore@@Base+0x1b88>
   1d898:	ldr	x0, [sp, #16]
   1d89c:	ldr	x1, [sp]
   1d8a0:	bl	1d628 <idpriv_temp_restore@@Base+0x1900>
   1d8a4:	and	w8, w0, #0x1
   1d8a8:	sturb	w8, [x29, #-1]
   1d8ac:	b	1d8bc <idpriv_temp_restore@@Base+0x1b94>
   1d8b0:	mov	w8, wzr
   1d8b4:	and	w8, w8, #0x1
   1d8b8:	sturb	w8, [x29, #-1]
   1d8bc:	ldurb	w8, [x29, #-1]
   1d8c0:	and	w0, w8, #0x1
   1d8c4:	ldp	x29, x30, [sp, #32]
   1d8c8:	add	sp, sp, #0x30
   1d8cc:	ret
   1d8d0:	sub	sp, sp, #0x30
   1d8d4:	stp	x29, x30, [sp, #32]
   1d8d8:	add	x29, sp, #0x20
   1d8dc:	stur	x0, [x29, #-8]
   1d8e0:	ldur	x8, [x29, #-8]
   1d8e4:	ldr	x8, [x8, #24]
   1d8e8:	str	x8, [sp, #16]
   1d8ec:	ldur	x8, [x29, #-8]
   1d8f0:	ldr	x8, [x8, #72]
   1d8f4:	str	x8, [sp, #8]
   1d8f8:	ldr	x8, [sp, #8]
   1d8fc:	ldur	x9, [x29, #-8]
   1d900:	add	x9, x9, #0x38
   1d904:	cmp	x8, x9
   1d908:	b.eq	1d944 <idpriv_temp_restore@@Base+0x1c1c>  // b.none
   1d90c:	ldr	x8, [sp, #8]
   1d910:	ldr	x8, [x8, #16]
   1d914:	str	x8, [sp]
   1d918:	ldr	x8, [sp, #16]
   1d91c:	cbz	x8, 1d930 <idpriv_temp_restore@@Base+0x1c08>
   1d920:	ldr	x8, [sp, #16]
   1d924:	ldr	x9, [sp, #8]
   1d928:	ldr	x0, [x9, #32]
   1d92c:	blr	x8
   1d930:	ldr	x0, [sp, #8]
   1d934:	bl	a930 <free@plt>
   1d938:	ldr	x8, [sp]
   1d93c:	str	x8, [sp, #8]
   1d940:	b	1d8f8 <idpriv_temp_restore@@Base+0x1bd0>
   1d944:	ldur	x8, [x29, #-8]
   1d948:	ldr	x0, [x8, #40]
   1d94c:	bl	a930 <free@plt>
   1d950:	ldur	x0, [x29, #-8]
   1d954:	bl	a930 <free@plt>
   1d958:	ldp	x29, x30, [sp, #32]
   1d95c:	add	sp, sp, #0x30
   1d960:	ret
   1d964:	sub	sp, sp, #0x10
   1d968:	str	x0, [sp, #8]
   1d96c:	ldr	x9, [sp, #8]
   1d970:	ldr	x9, [x9]
   1d974:	str	x9, [x8]
   1d978:	ldr	x9, [sp, #8]
   1d97c:	str	x9, [x8, #8]
   1d980:	ldr	x9, [sp, #8]
   1d984:	ldr	x9, [x9, #72]
   1d988:	str	x9, [x8, #24]
   1d98c:	ldr	x9, [sp, #8]
   1d990:	add	x9, x9, #0x38
   1d994:	str	x9, [x8, #32]
   1d998:	add	sp, sp, #0x10
   1d99c:	ret
   1d9a0:	sub	sp, sp, #0x80
   1d9a4:	stp	x29, x30, [sp, #112]
   1d9a8:	add	x29, sp, #0x70
   1d9ac:	stur	x0, [x29, #-8]
   1d9b0:	stur	x1, [x29, #-16]
   1d9b4:	stur	x2, [x29, #-24]
   1d9b8:	ldur	x9, [x29, #-16]
   1d9bc:	ldur	x10, [x29, #-24]
   1d9c0:	cmp	x9, x10
   1d9c4:	str	x8, [sp, #8]
   1d9c8:	b.hi	1d9e0 <idpriv_temp_restore@@Base+0x1cb8>  // b.pmore
   1d9cc:	ldur	x8, [x29, #-24]
   1d9d0:	ldur	x9, [x29, #-8]
   1d9d4:	ldr	x9, [x9, #96]
   1d9d8:	cmp	x8, x9
   1d9dc:	b.ls	1d9e4 <idpriv_temp_restore@@Base+0x1cbc>  // b.plast
   1d9e0:	bl	a9e0 <abort@plt>
   1d9e4:	ldur	x8, [x29, #-8]
   1d9e8:	ldr	x8, [x8]
   1d9ec:	ldr	x9, [sp, #8]
   1d9f0:	str	x8, [x9]
   1d9f4:	ldur	x8, [x29, #-8]
   1d9f8:	str	x8, [x9, #8]
   1d9fc:	ldur	x8, [x29, #-16]
   1da00:	stur	x8, [x29, #-32]
   1da04:	ldur	x8, [x29, #-24]
   1da08:	ldur	x10, [x29, #-16]
   1da0c:	subs	x8, x8, x10
   1da10:	stur	x8, [x29, #-40]
   1da14:	ldur	x8, [x29, #-8]
   1da18:	ldr	x8, [x8, #96]
   1da1c:	ldur	x10, [x29, #-24]
   1da20:	subs	x8, x8, x10
   1da24:	stur	x8, [x29, #-48]
   1da28:	ldur	x8, [x29, #-32]
   1da2c:	ldur	x10, [x29, #-40]
   1da30:	cmp	x8, x10
   1da34:	b.ls	1dad8 <idpriv_temp_restore@@Base+0x1db0>  // b.plast
   1da38:	ldur	x8, [x29, #-32]
   1da3c:	ldur	x9, [x29, #-48]
   1da40:	cmp	x8, x9
   1da44:	b.ls	1dad8 <idpriv_temp_restore@@Base+0x1db0>  // b.plast
   1da48:	ldur	x8, [x29, #-8]
   1da4c:	add	x8, x8, #0x38
   1da50:	str	x8, [sp, #56]
   1da54:	ldur	x8, [x29, #-48]
   1da58:	str	x8, [sp, #48]
   1da5c:	ldr	x8, [sp, #48]
   1da60:	cmp	x8, #0x0
   1da64:	cset	w9, ls  // ls = plast
   1da68:	tbnz	w9, #0, 1da88 <idpriv_temp_restore@@Base+0x1d60>
   1da6c:	ldr	x8, [sp, #56]
   1da70:	ldr	x8, [x8, #24]
   1da74:	str	x8, [sp, #56]
   1da78:	ldr	x8, [sp, #48]
   1da7c:	subs	x8, x8, #0x1
   1da80:	str	x8, [sp, #48]
   1da84:	b	1da5c <idpriv_temp_restore@@Base+0x1d34>
   1da88:	ldr	x8, [sp, #56]
   1da8c:	ldr	x9, [sp, #8]
   1da90:	str	x8, [x9, #32]
   1da94:	ldur	x8, [x29, #-40]
   1da98:	str	x8, [sp, #48]
   1da9c:	ldr	x8, [sp, #48]
   1daa0:	cmp	x8, #0x0
   1daa4:	cset	w9, ls  // ls = plast
   1daa8:	tbnz	w9, #0, 1dac8 <idpriv_temp_restore@@Base+0x1da0>
   1daac:	ldr	x8, [sp, #56]
   1dab0:	ldr	x8, [x8, #24]
   1dab4:	str	x8, [sp, #56]
   1dab8:	ldr	x8, [sp, #48]
   1dabc:	subs	x8, x8, #0x1
   1dac0:	str	x8, [sp, #48]
   1dac4:	b	1da9c <idpriv_temp_restore@@Base+0x1d74>
   1dac8:	ldr	x8, [sp, #56]
   1dacc:	ldr	x9, [sp, #8]
   1dad0:	str	x8, [x9, #24]
   1dad4:	b	1dc10 <idpriv_temp_restore@@Base+0x1ee8>
   1dad8:	ldur	x8, [x29, #-40]
   1dadc:	ldur	x9, [x29, #-48]
   1dae0:	cmp	x8, x9
   1dae4:	b.ls	1db84 <idpriv_temp_restore@@Base+0x1e5c>  // b.plast
   1dae8:	ldur	x8, [x29, #-8]
   1daec:	ldr	x8, [x8, #72]
   1daf0:	str	x8, [sp, #40]
   1daf4:	ldur	x8, [x29, #-32]
   1daf8:	str	x8, [sp, #32]
   1dafc:	ldr	x8, [sp, #32]
   1db00:	cmp	x8, #0x0
   1db04:	cset	w9, ls  // ls = plast
   1db08:	tbnz	w9, #0, 1db28 <idpriv_temp_restore@@Base+0x1e00>
   1db0c:	ldr	x8, [sp, #40]
   1db10:	ldr	x8, [x8, #16]
   1db14:	str	x8, [sp, #40]
   1db18:	ldr	x8, [sp, #32]
   1db1c:	subs	x8, x8, #0x1
   1db20:	str	x8, [sp, #32]
   1db24:	b	1dafc <idpriv_temp_restore@@Base+0x1dd4>
   1db28:	ldr	x8, [sp, #40]
   1db2c:	ldr	x9, [sp, #8]
   1db30:	str	x8, [x9, #24]
   1db34:	ldur	x8, [x29, #-8]
   1db38:	add	x8, x8, #0x38
   1db3c:	str	x8, [sp, #40]
   1db40:	ldur	x8, [x29, #-48]
   1db44:	str	x8, [sp, #32]
   1db48:	ldr	x8, [sp, #32]
   1db4c:	cmp	x8, #0x0
   1db50:	cset	w9, ls  // ls = plast
   1db54:	tbnz	w9, #0, 1db74 <idpriv_temp_restore@@Base+0x1e4c>
   1db58:	ldr	x8, [sp, #40]
   1db5c:	ldr	x8, [x8, #24]
   1db60:	str	x8, [sp, #40]
   1db64:	ldr	x8, [sp, #32]
   1db68:	subs	x8, x8, #0x1
   1db6c:	str	x8, [sp, #32]
   1db70:	b	1db48 <idpriv_temp_restore@@Base+0x1e20>
   1db74:	ldr	x8, [sp, #40]
   1db78:	ldr	x9, [sp, #8]
   1db7c:	str	x8, [x9, #32]
   1db80:	b	1dc10 <idpriv_temp_restore@@Base+0x1ee8>
   1db84:	ldur	x8, [x29, #-8]
   1db88:	ldr	x8, [x8, #72]
   1db8c:	str	x8, [sp, #24]
   1db90:	ldur	x8, [x29, #-32]
   1db94:	str	x8, [sp, #16]
   1db98:	ldr	x8, [sp, #16]
   1db9c:	cmp	x8, #0x0
   1dba0:	cset	w9, ls  // ls = plast
   1dba4:	tbnz	w9, #0, 1dbc4 <idpriv_temp_restore@@Base+0x1e9c>
   1dba8:	ldr	x8, [sp, #24]
   1dbac:	ldr	x8, [x8, #16]
   1dbb0:	str	x8, [sp, #24]
   1dbb4:	ldr	x8, [sp, #16]
   1dbb8:	subs	x8, x8, #0x1
   1dbbc:	str	x8, [sp, #16]
   1dbc0:	b	1db98 <idpriv_temp_restore@@Base+0x1e70>
   1dbc4:	ldr	x8, [sp, #24]
   1dbc8:	ldr	x9, [sp, #8]
   1dbcc:	str	x8, [x9, #24]
   1dbd0:	ldur	x8, [x29, #-40]
   1dbd4:	str	x8, [sp, #16]
   1dbd8:	ldr	x8, [sp, #16]
   1dbdc:	cmp	x8, #0x0
   1dbe0:	cset	w9, ls  // ls = plast
   1dbe4:	tbnz	w9, #0, 1dc04 <idpriv_temp_restore@@Base+0x1edc>
   1dbe8:	ldr	x8, [sp, #24]
   1dbec:	ldr	x8, [x8, #16]
   1dbf0:	str	x8, [sp, #24]
   1dbf4:	ldr	x8, [sp, #16]
   1dbf8:	subs	x8, x8, #0x1
   1dbfc:	str	x8, [sp, #16]
   1dc00:	b	1dbd8 <idpriv_temp_restore@@Base+0x1eb0>
   1dc04:	ldr	x8, [sp, #24]
   1dc08:	ldr	x9, [sp, #8]
   1dc0c:	str	x8, [x9, #32]
   1dc10:	ldp	x29, x30, [sp, #112]
   1dc14:	add	sp, sp, #0x80
   1dc18:	ret
   1dc1c:	sub	sp, sp, #0x30
   1dc20:	str	x0, [sp, #32]
   1dc24:	str	x1, [sp, #24]
   1dc28:	str	x2, [sp, #16]
   1dc2c:	ldr	x8, [sp, #32]
   1dc30:	ldr	x8, [x8, #24]
   1dc34:	ldr	x9, [sp, #32]
   1dc38:	ldr	x9, [x9, #32]
   1dc3c:	cmp	x8, x9
   1dc40:	b.eq	1dc94 <idpriv_temp_restore@@Base+0x1f6c>  // b.none
   1dc44:	ldr	x8, [sp, #32]
   1dc48:	ldr	x8, [x8, #24]
   1dc4c:	str	x8, [sp, #8]
   1dc50:	ldr	x8, [sp, #8]
   1dc54:	ldr	x8, [x8, #32]
   1dc58:	ldr	x9, [sp, #24]
   1dc5c:	str	x8, [x9]
   1dc60:	ldr	x8, [sp, #16]
   1dc64:	cbz	x8, 1dc74 <idpriv_temp_restore@@Base+0x1f4c>
   1dc68:	ldr	x8, [sp, #8]
   1dc6c:	ldr	x9, [sp, #16]
   1dc70:	str	x8, [x9]
   1dc74:	ldr	x8, [sp, #8]
   1dc78:	ldr	x8, [x8, #16]
   1dc7c:	ldr	x9, [sp, #32]
   1dc80:	str	x8, [x9, #24]
   1dc84:	mov	w10, #0x1                   	// #1
   1dc88:	and	w10, w10, #0x1
   1dc8c:	strb	w10, [sp, #47]
   1dc90:	b	1dca0 <idpriv_temp_restore@@Base+0x1f78>
   1dc94:	mov	w8, wzr
   1dc98:	and	w8, w8, #0x1
   1dc9c:	strb	w8, [sp, #47]
   1dca0:	ldrb	w8, [sp, #47]
   1dca4:	and	w0, w8, #0x1
   1dca8:	add	sp, sp, #0x30
   1dcac:	ret
   1dcb0:	sub	sp, sp, #0x10
   1dcb4:	str	x0, [sp, #8]
   1dcb8:	add	sp, sp, #0x10
   1dcbc:	ret
   1dcc0:	sub	sp, sp, #0x40
   1dcc4:	stp	x29, x30, [sp, #48]
   1dcc8:	add	x29, sp, #0x30
   1dccc:	stur	x0, [x29, #-16]
   1dcd0:	str	x1, [sp, #24]
   1dcd4:	str	x2, [sp, #16]
   1dcd8:	ldur	x8, [x29, #-16]
   1dcdc:	ldr	x8, [x8, #72]
   1dce0:	str	x8, [sp, #8]
   1dce4:	ldr	x8, [sp, #8]
   1dce8:	ldur	x9, [x29, #-16]
   1dcec:	add	x9, x9, #0x38
   1dcf0:	cmp	x8, x9
   1dcf4:	b.eq	1dd48 <idpriv_temp_restore@@Base+0x2020>  // b.none
   1dcf8:	ldr	x8, [sp, #24]
   1dcfc:	ldr	x9, [sp, #8]
   1dd00:	ldr	x0, [x9, #32]
   1dd04:	ldr	x1, [sp, #16]
   1dd08:	blr	x8
   1dd0c:	str	w0, [sp, #4]
   1dd10:	ldr	w10, [sp, #4]
   1dd14:	cmp	w10, #0x0
   1dd18:	cset	w10, le
   1dd1c:	tbnz	w10, #0, 1dd24 <idpriv_temp_restore@@Base+0x1ffc>
   1dd20:	b	1dd48 <idpriv_temp_restore@@Base+0x2020>
   1dd24:	ldr	w8, [sp, #4]
   1dd28:	cbnz	w8, 1dd38 <idpriv_temp_restore@@Base+0x2010>
   1dd2c:	ldr	x8, [sp, #8]
   1dd30:	stur	x8, [x29, #-8]
   1dd34:	b	1dd50 <idpriv_temp_restore@@Base+0x2028>
   1dd38:	ldr	x8, [sp, #8]
   1dd3c:	ldr	x8, [x8, #16]
   1dd40:	str	x8, [sp, #8]
   1dd44:	b	1dce4 <idpriv_temp_restore@@Base+0x1fbc>
   1dd48:	mov	x8, xzr
   1dd4c:	stur	x8, [x29, #-8]
   1dd50:	ldur	x0, [x29, #-8]
   1dd54:	ldp	x29, x30, [sp, #48]
   1dd58:	add	sp, sp, #0x40
   1dd5c:	ret
   1dd60:	sub	sp, sp, #0x60
   1dd64:	stp	x29, x30, [sp, #80]
   1dd68:	add	x29, sp, #0x50
   1dd6c:	stur	x0, [x29, #-16]
   1dd70:	stur	x1, [x29, #-24]
   1dd74:	stur	x2, [x29, #-32]
   1dd78:	str	x3, [sp, #40]
   1dd7c:	str	x4, [sp, #32]
   1dd80:	ldur	x8, [x29, #-16]
   1dd84:	ldr	x8, [x8, #96]
   1dd88:	str	x8, [sp, #24]
   1dd8c:	ldur	x8, [x29, #-32]
   1dd90:	ldr	x9, [sp, #40]
   1dd94:	cmp	x8, x9
   1dd98:	b.hi	1ddb0 <idpriv_temp_restore@@Base+0x2088>  // b.pmore
   1dd9c:	ldr	x8, [sp, #40]
   1dda0:	ldur	x9, [x29, #-16]
   1dda4:	ldr	x9, [x9, #96]
   1dda8:	cmp	x8, x9
   1ddac:	b.ls	1ddb4 <idpriv_temp_restore@@Base+0x208c>  // b.plast
   1ddb0:	bl	a9e0 <abort@plt>
   1ddb4:	ldur	x8, [x29, #-32]
   1ddb8:	ldr	x9, [sp, #40]
   1ddbc:	subs	x8, x9, x8
   1ddc0:	str	x8, [sp, #40]
   1ddc4:	ldr	x8, [sp, #40]
   1ddc8:	cmp	x8, #0x0
   1ddcc:	cset	w10, ls  // ls = plast
   1ddd0:	tbnz	w10, #0, 1dee4 <idpriv_temp_restore@@Base+0x21bc>
   1ddd4:	ldur	x8, [x29, #-32]
   1ddd8:	str	x8, [sp, #16]
   1dddc:	ldr	x8, [sp, #16]
   1dde0:	ldr	x9, [sp, #24]
   1dde4:	subs	x9, x9, #0x1
   1dde8:	mov	x10, #0x2                   	// #2
   1ddec:	udiv	x9, x9, x10
   1ddf0:	cmp	x8, x9
   1ddf4:	b.hi	1de34 <idpriv_temp_restore@@Base+0x210c>  // b.pmore
   1ddf8:	ldur	x8, [x29, #-16]
   1ddfc:	ldr	x8, [x8, #72]
   1de00:	str	x8, [sp, #8]
   1de04:	ldr	x8, [sp, #16]
   1de08:	cmp	x8, #0x0
   1de0c:	cset	w9, ls  // ls = plast
   1de10:	tbnz	w9, #0, 1de30 <idpriv_temp_restore@@Base+0x2108>
   1de14:	ldr	x8, [sp, #8]
   1de18:	ldr	x8, [x8, #16]
   1de1c:	str	x8, [sp, #8]
   1de20:	ldr	x8, [sp, #16]
   1de24:	subs	x8, x8, #0x1
   1de28:	str	x8, [sp, #16]
   1de2c:	b	1de04 <idpriv_temp_restore@@Base+0x20dc>
   1de30:	b	1de80 <idpriv_temp_restore@@Base+0x2158>
   1de34:	ldr	x8, [sp, #24]
   1de38:	subs	x8, x8, #0x1
   1de3c:	ldr	x9, [sp, #16]
   1de40:	subs	x8, x8, x9
   1de44:	str	x8, [sp, #16]
   1de48:	ldur	x8, [x29, #-16]
   1de4c:	ldr	x8, [x8, #80]
   1de50:	str	x8, [sp, #8]
   1de54:	ldr	x8, [sp, #16]
   1de58:	cmp	x8, #0x0
   1de5c:	cset	w9, ls  // ls = plast
   1de60:	tbnz	w9, #0, 1de80 <idpriv_temp_restore@@Base+0x2158>
   1de64:	ldr	x8, [sp, #8]
   1de68:	ldr	x8, [x8, #24]
   1de6c:	str	x8, [sp, #8]
   1de70:	ldr	x8, [sp, #16]
   1de74:	subs	x8, x8, #0x1
   1de78:	str	x8, [sp, #16]
   1de7c:	b	1de54 <idpriv_temp_restore@@Base+0x212c>
   1de80:	ldur	x8, [x29, #-24]
   1de84:	ldr	x9, [sp, #8]
   1de88:	ldr	x0, [x9, #32]
   1de8c:	ldr	x1, [sp, #32]
   1de90:	blr	x8
   1de94:	str	w0, [sp, #4]
   1de98:	ldr	w10, [sp, #4]
   1de9c:	cmp	w10, #0x0
   1dea0:	cset	w10, le
   1dea4:	tbnz	w10, #0, 1deac <idpriv_temp_restore@@Base+0x2184>
   1dea8:	b	1dee4 <idpriv_temp_restore@@Base+0x21bc>
   1deac:	ldr	w8, [sp, #4]
   1deb0:	cbnz	w8, 1dec0 <idpriv_temp_restore@@Base+0x2198>
   1deb4:	ldr	x8, [sp, #8]
   1deb8:	stur	x8, [x29, #-8]
   1debc:	b	1deec <idpriv_temp_restore@@Base+0x21c4>
   1dec0:	ldr	x8, [sp, #8]
   1dec4:	ldr	x8, [x8, #16]
   1dec8:	str	x8, [sp, #8]
   1decc:	ldr	x8, [sp, #40]
   1ded0:	subs	x8, x8, #0x1
   1ded4:	str	x8, [sp, #40]
   1ded8:	cmp	x8, #0x0
   1dedc:	cset	w9, hi  // hi = pmore
   1dee0:	tbnz	w9, #0, 1de80 <idpriv_temp_restore@@Base+0x2158>
   1dee4:	mov	x8, xzr
   1dee8:	stur	x8, [x29, #-8]
   1deec:	ldur	x0, [x29, #-8]
   1def0:	ldp	x29, x30, [sp, #80]
   1def4:	add	sp, sp, #0x60
   1def8:	ret
   1defc:	sub	sp, sp, #0x50
   1df00:	stp	x29, x30, [sp, #64]
   1df04:	add	x29, sp, #0x40
   1df08:	stur	x0, [x29, #-16]
   1df0c:	stur	x1, [x29, #-24]
   1df10:	str	x2, [sp, #32]
   1df14:	ldur	x8, [x29, #-16]
   1df18:	ldr	x8, [x8, #72]
   1df1c:	str	x8, [sp, #24]
   1df20:	str	xzr, [sp, #16]
   1df24:	ldr	x8, [sp, #24]
   1df28:	ldur	x9, [x29, #-16]
   1df2c:	add	x9, x9, #0x38
   1df30:	cmp	x8, x9
   1df34:	b.eq	1df94 <idpriv_temp_restore@@Base+0x226c>  // b.none
   1df38:	ldur	x8, [x29, #-24]
   1df3c:	ldr	x9, [sp, #24]
   1df40:	ldr	x0, [x9, #32]
   1df44:	ldr	x1, [sp, #32]
   1df48:	blr	x8
   1df4c:	str	w0, [sp, #12]
   1df50:	ldr	w10, [sp, #12]
   1df54:	cmp	w10, #0x0
   1df58:	cset	w10, le
   1df5c:	tbnz	w10, #0, 1df64 <idpriv_temp_restore@@Base+0x223c>
   1df60:	b	1df94 <idpriv_temp_restore@@Base+0x226c>
   1df64:	ldr	w8, [sp, #12]
   1df68:	cbnz	w8, 1df78 <idpriv_temp_restore@@Base+0x2250>
   1df6c:	ldr	x8, [sp, #16]
   1df70:	stur	x8, [x29, #-8]
   1df74:	b	1df9c <idpriv_temp_restore@@Base+0x2274>
   1df78:	ldr	x8, [sp, #24]
   1df7c:	ldr	x8, [x8, #16]
   1df80:	str	x8, [sp, #24]
   1df84:	ldr	x8, [sp, #16]
   1df88:	add	x8, x8, #0x1
   1df8c:	str	x8, [sp, #16]
   1df90:	b	1df24 <idpriv_temp_restore@@Base+0x21fc>
   1df94:	mov	x8, #0xffffffffffffffff    	// #-1
   1df98:	stur	x8, [x29, #-8]
   1df9c:	ldur	x0, [x29, #-8]
   1dfa0:	ldp	x29, x30, [sp, #64]
   1dfa4:	add	sp, sp, #0x50
   1dfa8:	ret
   1dfac:	sub	sp, sp, #0x70
   1dfb0:	stp	x29, x30, [sp, #96]
   1dfb4:	add	x29, sp, #0x60
   1dfb8:	stur	x0, [x29, #-16]
   1dfbc:	stur	x1, [x29, #-24]
   1dfc0:	stur	x2, [x29, #-32]
   1dfc4:	stur	x3, [x29, #-40]
   1dfc8:	str	x4, [sp, #48]
   1dfcc:	ldur	x8, [x29, #-16]
   1dfd0:	ldr	x8, [x8, #96]
   1dfd4:	str	x8, [sp, #40]
   1dfd8:	ldur	x8, [x29, #-32]
   1dfdc:	ldur	x9, [x29, #-40]
   1dfe0:	cmp	x8, x9
   1dfe4:	b.hi	1dffc <idpriv_temp_restore@@Base+0x22d4>  // b.pmore
   1dfe8:	ldur	x8, [x29, #-40]
   1dfec:	ldur	x9, [x29, #-16]
   1dff0:	ldr	x9, [x9, #96]
   1dff4:	cmp	x8, x9
   1dff8:	b.ls	1e000 <idpriv_temp_restore@@Base+0x22d8>  // b.plast
   1dffc:	bl	a9e0 <abort@plt>
   1e000:	ldur	x8, [x29, #-32]
   1e004:	ldur	x9, [x29, #-40]
   1e008:	subs	x8, x9, x8
   1e00c:	stur	x8, [x29, #-40]
   1e010:	ldur	x8, [x29, #-40]
   1e014:	cmp	x8, #0x0
   1e018:	cset	w10, ls  // ls = plast
   1e01c:	tbnz	w10, #0, 1e144 <idpriv_temp_restore@@Base+0x241c>
   1e020:	ldur	x8, [x29, #-32]
   1e024:	str	x8, [sp, #32]
   1e028:	ldur	x8, [x29, #-32]
   1e02c:	str	x8, [sp, #24]
   1e030:	ldr	x8, [sp, #24]
   1e034:	ldr	x9, [sp, #40]
   1e038:	subs	x9, x9, #0x1
   1e03c:	mov	x10, #0x2                   	// #2
   1e040:	udiv	x9, x9, x10
   1e044:	cmp	x8, x9
   1e048:	b.hi	1e088 <idpriv_temp_restore@@Base+0x2360>  // b.pmore
   1e04c:	ldur	x8, [x29, #-16]
   1e050:	ldr	x8, [x8, #72]
   1e054:	str	x8, [sp, #16]
   1e058:	ldr	x8, [sp, #24]
   1e05c:	cmp	x8, #0x0
   1e060:	cset	w9, ls  // ls = plast
   1e064:	tbnz	w9, #0, 1e084 <idpriv_temp_restore@@Base+0x235c>
   1e068:	ldr	x8, [sp, #16]
   1e06c:	ldr	x8, [x8, #16]
   1e070:	str	x8, [sp, #16]
   1e074:	ldr	x8, [sp, #24]
   1e078:	subs	x8, x8, #0x1
   1e07c:	str	x8, [sp, #24]
   1e080:	b	1e058 <idpriv_temp_restore@@Base+0x2330>
   1e084:	b	1e0d4 <idpriv_temp_restore@@Base+0x23ac>
   1e088:	ldr	x8, [sp, #40]
   1e08c:	subs	x8, x8, #0x1
   1e090:	ldr	x9, [sp, #24]
   1e094:	subs	x8, x8, x9
   1e098:	str	x8, [sp, #24]
   1e09c:	ldur	x8, [x29, #-16]
   1e0a0:	ldr	x8, [x8, #80]
   1e0a4:	str	x8, [sp, #16]
   1e0a8:	ldr	x8, [sp, #24]
   1e0ac:	cmp	x8, #0x0
   1e0b0:	cset	w9, ls  // ls = plast
   1e0b4:	tbnz	w9, #0, 1e0d4 <idpriv_temp_restore@@Base+0x23ac>
   1e0b8:	ldr	x8, [sp, #16]
   1e0bc:	ldr	x8, [x8, #24]
   1e0c0:	str	x8, [sp, #16]
   1e0c4:	ldr	x8, [sp, #24]
   1e0c8:	subs	x8, x8, #0x1
   1e0cc:	str	x8, [sp, #24]
   1e0d0:	b	1e0a8 <idpriv_temp_restore@@Base+0x2380>
   1e0d4:	ldur	x8, [x29, #-24]
   1e0d8:	ldr	x9, [sp, #16]
   1e0dc:	ldr	x0, [x9, #32]
   1e0e0:	ldr	x1, [sp, #48]
   1e0e4:	blr	x8
   1e0e8:	str	w0, [sp, #12]
   1e0ec:	ldr	w10, [sp, #12]
   1e0f0:	cmp	w10, #0x0
   1e0f4:	cset	w10, le
   1e0f8:	tbnz	w10, #0, 1e100 <idpriv_temp_restore@@Base+0x23d8>
   1e0fc:	b	1e144 <idpriv_temp_restore@@Base+0x241c>
   1e100:	ldr	w8, [sp, #12]
   1e104:	cbnz	w8, 1e114 <idpriv_temp_restore@@Base+0x23ec>
   1e108:	ldr	x8, [sp, #32]
   1e10c:	stur	x8, [x29, #-8]
   1e110:	b	1e14c <idpriv_temp_restore@@Base+0x2424>
   1e114:	ldr	x8, [sp, #16]
   1e118:	ldr	x8, [x8, #16]
   1e11c:	str	x8, [sp, #16]
   1e120:	ldr	x8, [sp, #32]
   1e124:	add	x8, x8, #0x1
   1e128:	str	x8, [sp, #32]
   1e12c:	ldur	x8, [x29, #-40]
   1e130:	subs	x8, x8, #0x1
   1e134:	stur	x8, [x29, #-40]
   1e138:	cmp	x8, #0x0
   1e13c:	cset	w9, hi  // hi = pmore
   1e140:	tbnz	w9, #0, 1e0d4 <idpriv_temp_restore@@Base+0x23ac>
   1e144:	mov	x8, #0xffffffffffffffff    	// #-1
   1e148:	stur	x8, [x29, #-8]
   1e14c:	ldur	x0, [x29, #-8]
   1e150:	ldp	x29, x30, [sp, #96]
   1e154:	add	sp, sp, #0x70
   1e158:	ret
   1e15c:	sub	sp, sp, #0x40
   1e160:	stp	x29, x30, [sp, #48]
   1e164:	add	x29, sp, #0x30
   1e168:	stur	x0, [x29, #-16]
   1e16c:	str	x1, [sp, #24]
   1e170:	str	x2, [sp, #16]
   1e174:	ldur	x8, [x29, #-16]
   1e178:	ldr	x8, [x8, #72]
   1e17c:	str	x8, [sp, #8]
   1e180:	ldr	x8, [sp, #8]
   1e184:	ldur	x9, [x29, #-16]
   1e188:	add	x9, x9, #0x38
   1e18c:	cmp	x8, x9
   1e190:	b.eq	1e1dc <idpriv_temp_restore@@Base+0x24b4>  // b.none
   1e194:	ldr	x8, [sp, #24]
   1e198:	ldr	x9, [sp, #8]
   1e19c:	ldr	x0, [x9, #32]
   1e1a0:	ldr	x1, [sp, #16]
   1e1a4:	blr	x8
   1e1a8:	cmp	w0, #0x0
   1e1ac:	cset	w10, lt  // lt = tstop
   1e1b0:	tbnz	w10, #0, 1e1cc <idpriv_temp_restore@@Base+0x24a4>
   1e1b4:	ldur	x0, [x29, #-16]
   1e1b8:	ldr	x1, [sp, #8]
   1e1bc:	ldr	x2, [sp, #16]
   1e1c0:	bl	1d1cc <idpriv_temp_restore@@Base+0x14a4>
   1e1c4:	stur	x0, [x29, #-8]
   1e1c8:	b	1e1ec <idpriv_temp_restore@@Base+0x24c4>
   1e1cc:	ldr	x8, [sp, #8]
   1e1d0:	ldr	x8, [x8, #16]
   1e1d4:	str	x8, [sp, #8]
   1e1d8:	b	1e180 <idpriv_temp_restore@@Base+0x2458>
   1e1dc:	ldur	x0, [x29, #-16]
   1e1e0:	ldr	x1, [sp, #16]
   1e1e4:	bl	1d0a8 <idpriv_temp_restore@@Base+0x1380>
   1e1e8:	stur	x0, [x29, #-8]
   1e1ec:	ldur	x0, [x29, #-8]
   1e1f0:	ldp	x29, x30, [sp, #48]
   1e1f4:	add	sp, sp, #0x40
   1e1f8:	ret
   1e1fc:	sub	sp, sp, #0x40
   1e200:	stp	x29, x30, [sp, #48]
   1e204:	add	x29, sp, #0x30
   1e208:	stur	x0, [x29, #-16]
   1e20c:	str	x1, [sp, #24]
   1e210:	str	x2, [sp, #16]
   1e214:	ldur	x8, [x29, #-16]
   1e218:	ldr	x8, [x8, #72]
   1e21c:	str	x8, [sp, #8]
   1e220:	ldr	x8, [sp, #8]
   1e224:	ldur	x9, [x29, #-16]
   1e228:	add	x9, x9, #0x38
   1e22c:	cmp	x8, x9
   1e230:	b.eq	1e290 <idpriv_temp_restore@@Base+0x2568>  // b.none
   1e234:	ldr	x8, [sp, #24]
   1e238:	ldr	x9, [sp, #8]
   1e23c:	ldr	x0, [x9, #32]
   1e240:	ldr	x1, [sp, #16]
   1e244:	blr	x8
   1e248:	str	w0, [sp, #4]
   1e24c:	ldr	w10, [sp, #4]
   1e250:	cmp	w10, #0x0
   1e254:	cset	w10, le
   1e258:	tbnz	w10, #0, 1e260 <idpriv_temp_restore@@Base+0x2538>
   1e25c:	b	1e290 <idpriv_temp_restore@@Base+0x2568>
   1e260:	ldr	w8, [sp, #4]
   1e264:	cbnz	w8, 1e280 <idpriv_temp_restore@@Base+0x2558>
   1e268:	ldur	x0, [x29, #-16]
   1e26c:	ldr	x1, [sp, #8]
   1e270:	bl	1d628 <idpriv_temp_restore@@Base+0x1900>
   1e274:	and	w8, w0, #0x1
   1e278:	sturb	w8, [x29, #-1]
   1e27c:	b	1e29c <idpriv_temp_restore@@Base+0x2574>
   1e280:	ldr	x8, [sp, #8]
   1e284:	ldr	x8, [x8, #16]
   1e288:	str	x8, [sp, #8]
   1e28c:	b	1e220 <idpriv_temp_restore@@Base+0x24f8>
   1e290:	mov	w8, wzr
   1e294:	and	w8, w8, #0x1
   1e298:	sturb	w8, [x29, #-1]
   1e29c:	ldurb	w8, [x29, #-1]
   1e2a0:	and	w0, w8, #0x1
   1e2a4:	ldp	x29, x30, [sp, #48]
   1e2a8:	add	sp, sp, #0x40
   1e2ac:	ret
   1e2b0:	sub	sp, sp, #0x20
   1e2b4:	str	x0, [sp, #16]
   1e2b8:	str	xzr, [sp, #8]
   1e2bc:	ldr	x8, [sp, #8]
   1e2c0:	cmp	x8, #0xe8
   1e2c4:	b.cs	1e30c <idpriv_temp_restore@@Base+0x25e4>  // b.hs, b.nlast
   1e2c8:	ldr	x8, [sp, #8]
   1e2cc:	adrp	x9, 46000 <vasnprintf@@Base+0x3e4c>
   1e2d0:	add	x9, x9, #0x838
   1e2d4:	ldr	x8, [x9, x8, lsl #3]
   1e2d8:	ldr	x9, [sp, #16]
   1e2dc:	cmp	x8, x9
   1e2e0:	b.cc	1e2fc <idpriv_temp_restore@@Base+0x25d4>  // b.lo, b.ul, b.last
   1e2e4:	ldr	x8, [sp, #8]
   1e2e8:	adrp	x9, 46000 <vasnprintf@@Base+0x3e4c>
   1e2ec:	add	x9, x9, #0x838
   1e2f0:	ldr	x8, [x9, x8, lsl #3]
   1e2f4:	str	x8, [sp, #24]
   1e2f8:	b	1e314 <idpriv_temp_restore@@Base+0x25ec>
   1e2fc:	ldr	x8, [sp, #8]
   1e300:	add	x8, x8, #0x1
   1e304:	str	x8, [sp, #8]
   1e308:	b	1e2bc <idpriv_temp_restore@@Base+0x2594>
   1e30c:	mov	x8, #0xffffffffffffffff    	// #-1
   1e310:	str	x8, [sp, #24]
   1e314:	ldr	x0, [sp, #24]
   1e318:	add	sp, sp, #0x20
   1e31c:	ret
   1e320:	sub	sp, sp, #0x20
   1e324:	str	x0, [sp, #24]
   1e328:	str	x1, [sp, #16]
   1e32c:	ldr	x8, [sp, #16]
   1e330:	mov	x9, #0x8                   	// #8
   1e334:	ldr	x8, [x8, #8]
   1e338:	ldr	x10, [sp, #24]
   1e33c:	ldr	x10, [x10, #48]
   1e340:	udiv	x11, x8, x10
   1e344:	mul	x10, x11, x10
   1e348:	subs	x8, x8, x10
   1e34c:	str	x8, [sp, #8]
   1e350:	ldr	x8, [sp, #24]
   1e354:	ldr	x8, [x8, #40]
   1e358:	ldr	x10, [sp, #8]
   1e35c:	mul	x10, x9, x10
   1e360:	add	x8, x8, x10
   1e364:	ldr	x8, [x8]
   1e368:	ldr	x10, [sp, #16]
   1e36c:	str	x8, [x10]
   1e370:	ldr	x8, [sp, #16]
   1e374:	ldr	x10, [sp, #24]
   1e378:	ldr	x10, [x10, #40]
   1e37c:	ldr	x11, [sp, #8]
   1e380:	mul	x9, x9, x11
   1e384:	add	x9, x10, x9
   1e388:	str	x8, [x9]
   1e38c:	add	sp, sp, #0x20
   1e390:	ret
   1e394:	sub	sp, sp, #0x30
   1e398:	stp	x29, x30, [sp, #32]
   1e39c:	add	x29, sp, #0x20
   1e3a0:	stur	x0, [x29, #-8]
   1e3a4:	str	x1, [sp, #16]
   1e3a8:	ldr	x8, [sp, #16]
   1e3ac:	mov	x9, #0x8                   	// #8
   1e3b0:	ldr	x8, [x8, #8]
   1e3b4:	ldur	x10, [x29, #-8]
   1e3b8:	ldr	x10, [x10, #48]
   1e3bc:	udiv	x11, x8, x10
   1e3c0:	mul	x10, x11, x10
   1e3c4:	subs	x8, x8, x10
   1e3c8:	str	x8, [sp, #8]
   1e3cc:	ldur	x8, [x29, #-8]
   1e3d0:	ldr	x8, [x8, #40]
   1e3d4:	ldr	x10, [sp, #8]
   1e3d8:	mul	x9, x9, x10
   1e3dc:	add	x8, x8, x9
   1e3e0:	str	x8, [sp]
   1e3e4:	ldr	x8, [sp]
   1e3e8:	ldr	x8, [x8]
   1e3ec:	ldr	x9, [sp, #16]
   1e3f0:	cmp	x8, x9
   1e3f4:	b.ne	1e40c <idpriv_temp_restore@@Base+0x26e4>  // b.any
   1e3f8:	ldr	x8, [sp, #16]
   1e3fc:	ldr	x8, [x8]
   1e400:	ldr	x9, [sp]
   1e404:	str	x8, [x9]
   1e408:	b	1e42c <idpriv_temp_restore@@Base+0x2704>
   1e40c:	ldr	x8, [sp]
   1e410:	ldr	x8, [x8]
   1e414:	cbnz	x8, 1e41c <idpriv_temp_restore@@Base+0x26f4>
   1e418:	bl	a9e0 <abort@plt>
   1e41c:	ldr	x8, [sp]
   1e420:	ldr	x8, [x8]
   1e424:	str	x8, [sp]
   1e428:	b	1e3e4 <idpriv_temp_restore@@Base+0x26bc>
   1e42c:	ldp	x29, x30, [sp, #32]
   1e430:	add	sp, sp, #0x30
   1e434:	ret
   1e438:	sub	sp, sp, #0x30
   1e43c:	stp	x29, x30, [sp, #32]
   1e440:	add	x29, sp, #0x20
   1e444:	mov	x8, #0x2                   	// #2
   1e448:	stur	x0, [x29, #-8]
   1e44c:	ldur	x9, [x29, #-8]
   1e450:	ldr	x9, [x9, #96]
   1e454:	str	x9, [sp, #16]
   1e458:	ldr	x0, [sp, #16]
   1e45c:	ldr	x9, [sp, #16]
   1e460:	udiv	x1, x9, x8
   1e464:	bl	b190 <xsum@plt>
   1e468:	str	x0, [sp, #8]
   1e46c:	ldr	x8, [sp, #8]
   1e470:	ldur	x9, [x29, #-8]
   1e474:	ldr	x9, [x9, #48]
   1e478:	cmp	x8, x9
   1e47c:	b.ls	1e48c <idpriv_temp_restore@@Base+0x2764>  // b.plast
   1e480:	ldur	x0, [x29, #-8]
   1e484:	ldr	x1, [sp, #8]
   1e488:	bl	1e498 <idpriv_temp_restore@@Base+0x2770>
   1e48c:	ldp	x29, x30, [sp, #32]
   1e490:	add	sp, sp, #0x30
   1e494:	ret
   1e498:	sub	sp, sp, #0x60
   1e49c:	stp	x29, x30, [sp, #80]
   1e4a0:	add	x29, sp, #0x50
   1e4a4:	stur	x0, [x29, #-8]
   1e4a8:	stur	x1, [x29, #-16]
   1e4ac:	ldur	x0, [x29, #-16]
   1e4b0:	bl	1e2b0 <idpriv_temp_restore@@Base+0x2588>
   1e4b4:	stur	x0, [x29, #-24]
   1e4b8:	ldur	x8, [x29, #-24]
   1e4bc:	ldur	x9, [x29, #-8]
   1e4c0:	ldr	x9, [x9, #48]
   1e4c4:	cmp	x8, x9
   1e4c8:	b.ls	1e60c <idpriv_temp_restore@@Base+0x28e4>  // b.plast
   1e4cc:	ldur	x8, [x29, #-8]
   1e4d0:	ldr	x8, [x8, #40]
   1e4d4:	stur	x8, [x29, #-32]
   1e4d8:	ldur	x8, [x29, #-24]
   1e4dc:	mov	x9, #0x1fffffffffffffff    	// #2305843009213693951
   1e4e0:	cmp	x8, x9
   1e4e4:	b.hi	1e4fc <idpriv_temp_restore@@Base+0x27d4>  // b.pmore
   1e4e8:	ldur	x8, [x29, #-24]
   1e4ec:	mov	x9, #0x8                   	// #8
   1e4f0:	mul	x8, x8, x9
   1e4f4:	str	x8, [sp]
   1e4f8:	b	1e504 <idpriv_temp_restore@@Base+0x27dc>
   1e4fc:	mov	x8, #0xffffffffffffffff    	// #-1
   1e500:	str	x8, [sp]
   1e504:	ldr	x8, [sp]
   1e508:	mov	x9, #0xffffffffffffffff    	// #-1
   1e50c:	cmp	x8, x9
   1e510:	b.ne	1e518 <idpriv_temp_restore@@Base+0x27f0>  // b.any
   1e514:	b	1e610 <idpriv_temp_restore@@Base+0x28e8>
   1e518:	ldur	x0, [x29, #-24]
   1e51c:	mov	x1, #0x8                   	// #8
   1e520:	bl	b2e0 <calloc@plt>
   1e524:	str	x0, [sp, #40]
   1e528:	ldr	x8, [sp, #40]
   1e52c:	cbnz	x8, 1e534 <idpriv_temp_restore@@Base+0x280c>
   1e530:	b	1e610 <idpriv_temp_restore@@Base+0x28e8>
   1e534:	ldur	x8, [x29, #-8]
   1e538:	ldr	x8, [x8, #48]
   1e53c:	str	x8, [sp, #32]
   1e540:	ldr	x8, [sp, #32]
   1e544:	cmp	x8, #0x0
   1e548:	cset	w9, ls  // ls = plast
   1e54c:	tbnz	w9, #0, 1e5ec <idpriv_temp_restore@@Base+0x28c4>
   1e550:	ldur	x8, [x29, #-32]
   1e554:	ldr	x9, [sp, #32]
   1e558:	subs	x9, x9, #0x1
   1e55c:	str	x9, [sp, #32]
   1e560:	mov	x10, #0x8                   	// #8
   1e564:	mul	x9, x10, x9
   1e568:	add	x8, x8, x9
   1e56c:	ldr	x8, [x8]
   1e570:	str	x8, [sp, #24]
   1e574:	ldr	x8, [sp, #24]
   1e578:	cbz	x8, 1e5e8 <idpriv_temp_restore@@Base+0x28c0>
   1e57c:	ldr	x8, [sp, #24]
   1e580:	ldr	x8, [x8]
   1e584:	str	x8, [sp, #16]
   1e588:	ldr	x8, [sp, #24]
   1e58c:	mov	x9, #0x8                   	// #8
   1e590:	ldr	x8, [x8, #8]
   1e594:	ldur	x10, [x29, #-24]
   1e598:	udiv	x11, x8, x10
   1e59c:	mul	x10, x11, x10
   1e5a0:	subs	x8, x8, x10
   1e5a4:	str	x8, [sp, #8]
   1e5a8:	ldr	x8, [sp, #40]
   1e5ac:	ldr	x10, [sp, #8]
   1e5b0:	mul	x10, x9, x10
   1e5b4:	add	x8, x8, x10
   1e5b8:	ldr	x8, [x8]
   1e5bc:	ldr	x10, [sp, #24]
   1e5c0:	str	x8, [x10]
   1e5c4:	ldr	x8, [sp, #24]
   1e5c8:	ldr	x10, [sp, #40]
   1e5cc:	ldr	x11, [sp, #8]
   1e5d0:	mul	x9, x9, x11
   1e5d4:	add	x9, x10, x9
   1e5d8:	str	x8, [x9]
   1e5dc:	ldr	x8, [sp, #16]
   1e5e0:	str	x8, [sp, #24]
   1e5e4:	b	1e574 <idpriv_temp_restore@@Base+0x284c>
   1e5e8:	b	1e540 <idpriv_temp_restore@@Base+0x2818>
   1e5ec:	ldr	x8, [sp, #40]
   1e5f0:	ldur	x9, [x29, #-8]
   1e5f4:	str	x8, [x9, #40]
   1e5f8:	ldur	x8, [x29, #-24]
   1e5fc:	ldur	x9, [x29, #-8]
   1e600:	str	x8, [x9, #48]
   1e604:	ldur	x0, [x29, #-32]
   1e608:	bl	a930 <free@plt>
   1e60c:	b	1e610 <idpriv_temp_restore@@Base+0x28e8>
   1e610:	ldp	x29, x30, [sp, #80]
   1e614:	add	sp, sp, #0x60
   1e618:	ret

000000000001e61c <gl_list_nx_create_empty@@Base>:
   1e61c:	sub	sp, sp, #0x40
   1e620:	stp	x29, x30, [sp, #48]
   1e624:	add	x29, sp, #0x30
   1e628:	stur	x0, [x29, #-8]
   1e62c:	stur	x1, [x29, #-16]
   1e630:	str	x2, [sp, #24]
   1e634:	str	x3, [sp, #16]
   1e638:	mov	w8, #0x1                   	// #1
   1e63c:	and	w8, w4, w8
   1e640:	strb	w8, [sp, #15]
   1e644:	ldur	x9, [x29, #-8]
   1e648:	ldr	x9, [x9]
   1e64c:	ldur	x0, [x29, #-8]
   1e650:	ldur	x1, [x29, #-16]
   1e654:	ldr	x2, [sp, #24]
   1e658:	ldr	x3, [sp, #16]
   1e65c:	ldrb	w8, [sp, #15]
   1e660:	and	w4, w8, #0x1
   1e664:	blr	x9
   1e668:	ldp	x29, x30, [sp, #48]
   1e66c:	add	sp, sp, #0x40
   1e670:	ret

000000000001e674 <gl_list_nx_create@@Base>:
   1e674:	sub	sp, sp, #0x50
   1e678:	stp	x29, x30, [sp, #64]
   1e67c:	add	x29, sp, #0x40
   1e680:	stur	x0, [x29, #-8]
   1e684:	stur	x1, [x29, #-16]
   1e688:	stur	x2, [x29, #-24]
   1e68c:	str	x3, [sp, #32]
   1e690:	mov	w8, #0x1                   	// #1
   1e694:	and	w8, w4, w8
   1e698:	strb	w8, [sp, #31]
   1e69c:	str	x5, [sp, #16]
   1e6a0:	str	x6, [sp, #8]
   1e6a4:	ldur	x9, [x29, #-8]
   1e6a8:	ldr	x9, [x9, #8]
   1e6ac:	ldur	x0, [x29, #-8]
   1e6b0:	ldur	x1, [x29, #-16]
   1e6b4:	ldur	x2, [x29, #-24]
   1e6b8:	ldr	x3, [sp, #32]
   1e6bc:	ldrb	w8, [sp, #31]
   1e6c0:	ldr	x5, [sp, #16]
   1e6c4:	ldr	x6, [sp, #8]
   1e6c8:	and	w4, w8, #0x1
   1e6cc:	blr	x9
   1e6d0:	ldp	x29, x30, [sp, #64]
   1e6d4:	add	sp, sp, #0x50
   1e6d8:	ret

000000000001e6dc <gl_list_size@@Base>:
   1e6dc:	sub	sp, sp, #0x20
   1e6e0:	stp	x29, x30, [sp, #16]
   1e6e4:	add	x29, sp, #0x10
   1e6e8:	str	x0, [sp, #8]
   1e6ec:	ldr	x8, [sp, #8]
   1e6f0:	ldr	x8, [x8]
   1e6f4:	ldr	x8, [x8, #16]
   1e6f8:	ldr	x0, [sp, #8]
   1e6fc:	blr	x8
   1e700:	ldp	x29, x30, [sp, #16]
   1e704:	add	sp, sp, #0x20
   1e708:	ret

000000000001e70c <gl_list_node_value@@Base>:
   1e70c:	sub	sp, sp, #0x20
   1e710:	stp	x29, x30, [sp, #16]
   1e714:	add	x29, sp, #0x10
   1e718:	str	x0, [sp, #8]
   1e71c:	str	x1, [sp]
   1e720:	ldr	x8, [sp, #8]
   1e724:	ldr	x8, [x8]
   1e728:	ldr	x8, [x8, #24]
   1e72c:	ldr	x0, [sp, #8]
   1e730:	ldr	x1, [sp]
   1e734:	blr	x8
   1e738:	ldp	x29, x30, [sp, #16]
   1e73c:	add	sp, sp, #0x20
   1e740:	ret

000000000001e744 <gl_list_node_nx_set_value@@Base>:
   1e744:	sub	sp, sp, #0x30
   1e748:	stp	x29, x30, [sp, #32]
   1e74c:	add	x29, sp, #0x20
   1e750:	stur	x0, [x29, #-8]
   1e754:	str	x1, [sp, #16]
   1e758:	str	x2, [sp, #8]
   1e75c:	ldur	x8, [x29, #-8]
   1e760:	ldr	x8, [x8]
   1e764:	ldr	x8, [x8, #32]
   1e768:	ldur	x0, [x29, #-8]
   1e76c:	ldr	x1, [sp, #16]
   1e770:	ldr	x2, [sp, #8]
   1e774:	blr	x8
   1e778:	ldp	x29, x30, [sp, #32]
   1e77c:	add	sp, sp, #0x30
   1e780:	ret

000000000001e784 <gl_list_next_node@@Base>:
   1e784:	sub	sp, sp, #0x20
   1e788:	stp	x29, x30, [sp, #16]
   1e78c:	add	x29, sp, #0x10
   1e790:	str	x0, [sp, #8]
   1e794:	str	x1, [sp]
   1e798:	ldr	x8, [sp, #8]
   1e79c:	ldr	x8, [x8]
   1e7a0:	ldr	x8, [x8, #40]
   1e7a4:	ldr	x0, [sp, #8]
   1e7a8:	ldr	x1, [sp]
   1e7ac:	blr	x8
   1e7b0:	ldp	x29, x30, [sp, #16]
   1e7b4:	add	sp, sp, #0x20
   1e7b8:	ret

000000000001e7bc <gl_list_previous_node@@Base>:
   1e7bc:	sub	sp, sp, #0x20
   1e7c0:	stp	x29, x30, [sp, #16]
   1e7c4:	add	x29, sp, #0x10
   1e7c8:	str	x0, [sp, #8]
   1e7cc:	str	x1, [sp]
   1e7d0:	ldr	x8, [sp, #8]
   1e7d4:	ldr	x8, [x8]
   1e7d8:	ldr	x8, [x8, #48]
   1e7dc:	ldr	x0, [sp, #8]
   1e7e0:	ldr	x1, [sp]
   1e7e4:	blr	x8
   1e7e8:	ldp	x29, x30, [sp, #16]
   1e7ec:	add	sp, sp, #0x20
   1e7f0:	ret

000000000001e7f4 <gl_list_get_at@@Base>:
   1e7f4:	sub	sp, sp, #0x20
   1e7f8:	stp	x29, x30, [sp, #16]
   1e7fc:	add	x29, sp, #0x10
   1e800:	str	x0, [sp, #8]
   1e804:	str	x1, [sp]
   1e808:	ldr	x8, [sp, #8]
   1e80c:	ldr	x8, [x8]
   1e810:	ldr	x8, [x8, #56]
   1e814:	ldr	x0, [sp, #8]
   1e818:	ldr	x1, [sp]
   1e81c:	blr	x8
   1e820:	ldp	x29, x30, [sp, #16]
   1e824:	add	sp, sp, #0x20
   1e828:	ret

000000000001e82c <gl_list_nx_set_at@@Base>:
   1e82c:	sub	sp, sp, #0x30
   1e830:	stp	x29, x30, [sp, #32]
   1e834:	add	x29, sp, #0x20
   1e838:	stur	x0, [x29, #-8]
   1e83c:	str	x1, [sp, #16]
   1e840:	str	x2, [sp, #8]
   1e844:	ldur	x8, [x29, #-8]
   1e848:	ldr	x8, [x8]
   1e84c:	ldr	x8, [x8, #64]
   1e850:	ldur	x0, [x29, #-8]
   1e854:	ldr	x1, [sp, #16]
   1e858:	ldr	x2, [sp, #8]
   1e85c:	blr	x8
   1e860:	ldp	x29, x30, [sp, #32]
   1e864:	add	sp, sp, #0x30
   1e868:	ret

000000000001e86c <gl_list_search@@Base>:
   1e86c:	sub	sp, sp, #0x30
   1e870:	stp	x29, x30, [sp, #32]
   1e874:	add	x29, sp, #0x20
   1e878:	mov	x8, xzr
   1e87c:	stur	x0, [x29, #-8]
   1e880:	str	x1, [sp, #16]
   1e884:	ldur	x9, [x29, #-8]
   1e888:	ldr	x9, [x9]
   1e88c:	ldr	x9, [x9, #16]
   1e890:	ldur	x0, [x29, #-8]
   1e894:	str	x8, [sp]
   1e898:	blr	x9
   1e89c:	str	x0, [sp, #8]
   1e8a0:	ldur	x8, [x29, #-8]
   1e8a4:	ldr	x8, [x8]
   1e8a8:	ldr	x8, [x8, #72]
   1e8ac:	ldur	x0, [x29, #-8]
   1e8b0:	ldr	x2, [sp, #8]
   1e8b4:	ldr	x3, [sp, #16]
   1e8b8:	ldr	x1, [sp]
   1e8bc:	blr	x8
   1e8c0:	ldp	x29, x30, [sp, #32]
   1e8c4:	add	sp, sp, #0x30
   1e8c8:	ret

000000000001e8cc <gl_list_search_from@@Base>:
   1e8cc:	sub	sp, sp, #0x30
   1e8d0:	stp	x29, x30, [sp, #32]
   1e8d4:	add	x29, sp, #0x20
   1e8d8:	stur	x0, [x29, #-8]
   1e8dc:	str	x1, [sp, #16]
   1e8e0:	str	x2, [sp, #8]
   1e8e4:	ldur	x8, [x29, #-8]
   1e8e8:	ldr	x8, [x8]
   1e8ec:	ldr	x8, [x8, #16]
   1e8f0:	ldur	x0, [x29, #-8]
   1e8f4:	blr	x8
   1e8f8:	str	x0, [sp]
   1e8fc:	ldur	x8, [x29, #-8]
   1e900:	ldr	x8, [x8]
   1e904:	ldr	x8, [x8, #72]
   1e908:	ldur	x0, [x29, #-8]
   1e90c:	ldr	x1, [sp, #16]
   1e910:	ldr	x2, [sp]
   1e914:	ldr	x3, [sp, #8]
   1e918:	blr	x8
   1e91c:	ldp	x29, x30, [sp, #32]
   1e920:	add	sp, sp, #0x30
   1e924:	ret

000000000001e928 <gl_list_search_from_to@@Base>:
   1e928:	sub	sp, sp, #0x30
   1e92c:	stp	x29, x30, [sp, #32]
   1e930:	add	x29, sp, #0x20
   1e934:	stur	x0, [x29, #-8]
   1e938:	str	x1, [sp, #16]
   1e93c:	str	x2, [sp, #8]
   1e940:	str	x3, [sp]
   1e944:	ldur	x8, [x29, #-8]
   1e948:	ldr	x8, [x8]
   1e94c:	ldr	x8, [x8, #72]
   1e950:	ldur	x0, [x29, #-8]
   1e954:	ldr	x1, [sp, #16]
   1e958:	ldr	x2, [sp, #8]
   1e95c:	ldr	x3, [sp]
   1e960:	blr	x8
   1e964:	ldp	x29, x30, [sp, #32]
   1e968:	add	sp, sp, #0x30
   1e96c:	ret

000000000001e970 <gl_list_indexof@@Base>:
   1e970:	sub	sp, sp, #0x30
   1e974:	stp	x29, x30, [sp, #32]
   1e978:	add	x29, sp, #0x20
   1e97c:	mov	x8, xzr
   1e980:	stur	x0, [x29, #-8]
   1e984:	str	x1, [sp, #16]
   1e988:	ldur	x9, [x29, #-8]
   1e98c:	ldr	x9, [x9]
   1e990:	ldr	x9, [x9, #16]
   1e994:	ldur	x0, [x29, #-8]
   1e998:	str	x8, [sp]
   1e99c:	blr	x9
   1e9a0:	str	x0, [sp, #8]
   1e9a4:	ldur	x8, [x29, #-8]
   1e9a8:	ldr	x8, [x8]
   1e9ac:	ldr	x8, [x8, #80]
   1e9b0:	ldur	x0, [x29, #-8]
   1e9b4:	ldr	x2, [sp, #8]
   1e9b8:	ldr	x3, [sp, #16]
   1e9bc:	ldr	x1, [sp]
   1e9c0:	blr	x8
   1e9c4:	ldp	x29, x30, [sp, #32]
   1e9c8:	add	sp, sp, #0x30
   1e9cc:	ret

000000000001e9d0 <gl_list_indexof_from@@Base>:
   1e9d0:	sub	sp, sp, #0x30
   1e9d4:	stp	x29, x30, [sp, #32]
   1e9d8:	add	x29, sp, #0x20
   1e9dc:	stur	x0, [x29, #-8]
   1e9e0:	str	x1, [sp, #16]
   1e9e4:	str	x2, [sp, #8]
   1e9e8:	ldur	x8, [x29, #-8]
   1e9ec:	ldr	x8, [x8]
   1e9f0:	ldr	x8, [x8, #16]
   1e9f4:	ldur	x0, [x29, #-8]
   1e9f8:	blr	x8
   1e9fc:	str	x0, [sp]
   1ea00:	ldur	x8, [x29, #-8]
   1ea04:	ldr	x8, [x8]
   1ea08:	ldr	x8, [x8, #80]
   1ea0c:	ldur	x0, [x29, #-8]
   1ea10:	ldr	x1, [sp, #16]
   1ea14:	ldr	x2, [sp]
   1ea18:	ldr	x3, [sp, #8]
   1ea1c:	blr	x8
   1ea20:	ldp	x29, x30, [sp, #32]
   1ea24:	add	sp, sp, #0x30
   1ea28:	ret

000000000001ea2c <gl_list_indexof_from_to@@Base>:
   1ea2c:	sub	sp, sp, #0x30
   1ea30:	stp	x29, x30, [sp, #32]
   1ea34:	add	x29, sp, #0x20
   1ea38:	stur	x0, [x29, #-8]
   1ea3c:	str	x1, [sp, #16]
   1ea40:	str	x2, [sp, #8]
   1ea44:	str	x3, [sp]
   1ea48:	ldur	x8, [x29, #-8]
   1ea4c:	ldr	x8, [x8]
   1ea50:	ldr	x8, [x8, #80]
   1ea54:	ldur	x0, [x29, #-8]
   1ea58:	ldr	x1, [sp, #16]
   1ea5c:	ldr	x2, [sp, #8]
   1ea60:	ldr	x3, [sp]
   1ea64:	blr	x8
   1ea68:	ldp	x29, x30, [sp, #32]
   1ea6c:	add	sp, sp, #0x30
   1ea70:	ret

000000000001ea74 <gl_list_nx_add_first@@Base>:
   1ea74:	sub	sp, sp, #0x20
   1ea78:	stp	x29, x30, [sp, #16]
   1ea7c:	add	x29, sp, #0x10
   1ea80:	str	x0, [sp, #8]
   1ea84:	str	x1, [sp]
   1ea88:	ldr	x8, [sp, #8]
   1ea8c:	ldr	x8, [x8]
   1ea90:	ldr	x8, [x8, #88]
   1ea94:	ldr	x0, [sp, #8]
   1ea98:	ldr	x1, [sp]
   1ea9c:	blr	x8
   1eaa0:	ldp	x29, x30, [sp, #16]
   1eaa4:	add	sp, sp, #0x20
   1eaa8:	ret

000000000001eaac <gl_list_nx_add_last@@Base>:
   1eaac:	sub	sp, sp, #0x20
   1eab0:	stp	x29, x30, [sp, #16]
   1eab4:	add	x29, sp, #0x10
   1eab8:	str	x0, [sp, #8]
   1eabc:	str	x1, [sp]
   1eac0:	ldr	x8, [sp, #8]
   1eac4:	ldr	x8, [x8]
   1eac8:	ldr	x8, [x8, #96]
   1eacc:	ldr	x0, [sp, #8]
   1ead0:	ldr	x1, [sp]
   1ead4:	blr	x8
   1ead8:	ldp	x29, x30, [sp, #16]
   1eadc:	add	sp, sp, #0x20
   1eae0:	ret

000000000001eae4 <gl_list_nx_add_before@@Base>:
   1eae4:	sub	sp, sp, #0x30
   1eae8:	stp	x29, x30, [sp, #32]
   1eaec:	add	x29, sp, #0x20
   1eaf0:	stur	x0, [x29, #-8]
   1eaf4:	str	x1, [sp, #16]
   1eaf8:	str	x2, [sp, #8]
   1eafc:	ldur	x8, [x29, #-8]
   1eb00:	ldr	x8, [x8]
   1eb04:	ldr	x8, [x8, #104]
   1eb08:	ldur	x0, [x29, #-8]
   1eb0c:	ldr	x1, [sp, #16]
   1eb10:	ldr	x2, [sp, #8]
   1eb14:	blr	x8
   1eb18:	ldp	x29, x30, [sp, #32]
   1eb1c:	add	sp, sp, #0x30
   1eb20:	ret

000000000001eb24 <gl_list_nx_add_after@@Base>:
   1eb24:	sub	sp, sp, #0x30
   1eb28:	stp	x29, x30, [sp, #32]
   1eb2c:	add	x29, sp, #0x20
   1eb30:	stur	x0, [x29, #-8]
   1eb34:	str	x1, [sp, #16]
   1eb38:	str	x2, [sp, #8]
   1eb3c:	ldur	x8, [x29, #-8]
   1eb40:	ldr	x8, [x8]
   1eb44:	ldr	x8, [x8, #112]
   1eb48:	ldur	x0, [x29, #-8]
   1eb4c:	ldr	x1, [sp, #16]
   1eb50:	ldr	x2, [sp, #8]
   1eb54:	blr	x8
   1eb58:	ldp	x29, x30, [sp, #32]
   1eb5c:	add	sp, sp, #0x30
   1eb60:	ret

000000000001eb64 <gl_list_nx_add_at@@Base>:
   1eb64:	sub	sp, sp, #0x30
   1eb68:	stp	x29, x30, [sp, #32]
   1eb6c:	add	x29, sp, #0x20
   1eb70:	stur	x0, [x29, #-8]
   1eb74:	str	x1, [sp, #16]
   1eb78:	str	x2, [sp, #8]
   1eb7c:	ldur	x8, [x29, #-8]
   1eb80:	ldr	x8, [x8]
   1eb84:	ldr	x8, [x8, #120]
   1eb88:	ldur	x0, [x29, #-8]
   1eb8c:	ldr	x1, [sp, #16]
   1eb90:	ldr	x2, [sp, #8]
   1eb94:	blr	x8
   1eb98:	ldp	x29, x30, [sp, #32]
   1eb9c:	add	sp, sp, #0x30
   1eba0:	ret

000000000001eba4 <gl_list_remove_node@@Base>:
   1eba4:	sub	sp, sp, #0x20
   1eba8:	stp	x29, x30, [sp, #16]
   1ebac:	add	x29, sp, #0x10
   1ebb0:	str	x0, [sp, #8]
   1ebb4:	str	x1, [sp]
   1ebb8:	ldr	x8, [sp, #8]
   1ebbc:	ldr	x8, [x8]
   1ebc0:	ldr	x8, [x8, #128]
   1ebc4:	ldr	x0, [sp, #8]
   1ebc8:	ldr	x1, [sp]
   1ebcc:	blr	x8
   1ebd0:	and	w0, w0, #0x1
   1ebd4:	ldp	x29, x30, [sp, #16]
   1ebd8:	add	sp, sp, #0x20
   1ebdc:	ret

000000000001ebe0 <gl_list_remove_at@@Base>:
   1ebe0:	sub	sp, sp, #0x20
   1ebe4:	stp	x29, x30, [sp, #16]
   1ebe8:	add	x29, sp, #0x10
   1ebec:	str	x0, [sp, #8]
   1ebf0:	str	x1, [sp]
   1ebf4:	ldr	x8, [sp, #8]
   1ebf8:	ldr	x8, [x8]
   1ebfc:	ldr	x8, [x8, #136]
   1ec00:	ldr	x0, [sp, #8]
   1ec04:	ldr	x1, [sp]
   1ec08:	blr	x8
   1ec0c:	and	w0, w0, #0x1
   1ec10:	ldp	x29, x30, [sp, #16]
   1ec14:	add	sp, sp, #0x20
   1ec18:	ret

000000000001ec1c <gl_list_remove@@Base>:
   1ec1c:	sub	sp, sp, #0x20
   1ec20:	stp	x29, x30, [sp, #16]
   1ec24:	add	x29, sp, #0x10
   1ec28:	str	x0, [sp, #8]
   1ec2c:	str	x1, [sp]
   1ec30:	ldr	x8, [sp, #8]
   1ec34:	ldr	x8, [x8]
   1ec38:	ldr	x8, [x8, #144]
   1ec3c:	ldr	x0, [sp, #8]
   1ec40:	ldr	x1, [sp]
   1ec44:	blr	x8
   1ec48:	and	w0, w0, #0x1
   1ec4c:	ldp	x29, x30, [sp, #16]
   1ec50:	add	sp, sp, #0x20
   1ec54:	ret

000000000001ec58 <gl_list_free@@Base>:
   1ec58:	sub	sp, sp, #0x20
   1ec5c:	stp	x29, x30, [sp, #16]
   1ec60:	add	x29, sp, #0x10
   1ec64:	str	x0, [sp, #8]
   1ec68:	ldr	x8, [sp, #8]
   1ec6c:	ldr	x8, [x8]
   1ec70:	ldr	x8, [x8, #152]
   1ec74:	ldr	x0, [sp, #8]
   1ec78:	blr	x8
   1ec7c:	ldp	x29, x30, [sp, #16]
   1ec80:	add	sp, sp, #0x20
   1ec84:	ret

000000000001ec88 <gl_list_iterator@@Base>:
   1ec88:	sub	sp, sp, #0x20
   1ec8c:	stp	x29, x30, [sp, #16]
   1ec90:	add	x29, sp, #0x10
   1ec94:	str	x0, [sp, #8]
   1ec98:	ldr	x9, [sp, #8]
   1ec9c:	ldr	x9, [x9]
   1eca0:	ldr	x9, [x9, #160]
   1eca4:	ldr	x0, [sp, #8]
   1eca8:	blr	x9
   1ecac:	ldp	x29, x30, [sp, #16]
   1ecb0:	add	sp, sp, #0x20
   1ecb4:	ret

000000000001ecb8 <gl_list_iterator_from_to@@Base>:
   1ecb8:	sub	sp, sp, #0x30
   1ecbc:	stp	x29, x30, [sp, #32]
   1ecc0:	add	x29, sp, #0x20
   1ecc4:	stur	x0, [x29, #-8]
   1ecc8:	str	x1, [sp, #16]
   1eccc:	str	x2, [sp, #8]
   1ecd0:	ldur	x9, [x29, #-8]
   1ecd4:	ldr	x9, [x9]
   1ecd8:	ldr	x9, [x9, #168]
   1ecdc:	ldur	x0, [x29, #-8]
   1ece0:	ldr	x1, [sp, #16]
   1ece4:	ldr	x2, [sp, #8]
   1ece8:	blr	x9
   1ecec:	ldp	x29, x30, [sp, #32]
   1ecf0:	add	sp, sp, #0x30
   1ecf4:	ret

000000000001ecf8 <gl_list_iterator_next@@Base>:
   1ecf8:	sub	sp, sp, #0x30
   1ecfc:	stp	x29, x30, [sp, #32]
   1ed00:	add	x29, sp, #0x20
   1ed04:	stur	x0, [x29, #-8]
   1ed08:	str	x1, [sp, #16]
   1ed0c:	str	x2, [sp, #8]
   1ed10:	ldur	x8, [x29, #-8]
   1ed14:	ldr	x8, [x8]
   1ed18:	ldr	x8, [x8, #176]
   1ed1c:	ldur	x0, [x29, #-8]
   1ed20:	ldr	x1, [sp, #16]
   1ed24:	ldr	x2, [sp, #8]
   1ed28:	blr	x8
   1ed2c:	and	w0, w0, #0x1
   1ed30:	ldp	x29, x30, [sp, #32]
   1ed34:	add	sp, sp, #0x30
   1ed38:	ret

000000000001ed3c <gl_list_iterator_free@@Base>:
   1ed3c:	sub	sp, sp, #0x20
   1ed40:	stp	x29, x30, [sp, #16]
   1ed44:	add	x29, sp, #0x10
   1ed48:	str	x0, [sp, #8]
   1ed4c:	ldr	x8, [sp, #8]
   1ed50:	ldr	x8, [x8]
   1ed54:	ldr	x8, [x8, #184]
   1ed58:	ldr	x0, [sp, #8]
   1ed5c:	blr	x8
   1ed60:	ldp	x29, x30, [sp, #16]
   1ed64:	add	sp, sp, #0x20
   1ed68:	ret

000000000001ed6c <gl_sortedlist_search@@Base>:
   1ed6c:	sub	sp, sp, #0x30
   1ed70:	stp	x29, x30, [sp, #32]
   1ed74:	add	x29, sp, #0x20
   1ed78:	stur	x0, [x29, #-8]
   1ed7c:	str	x1, [sp, #16]
   1ed80:	str	x2, [sp, #8]
   1ed84:	ldur	x8, [x29, #-8]
   1ed88:	ldr	x8, [x8]
   1ed8c:	ldr	x8, [x8, #192]
   1ed90:	ldur	x0, [x29, #-8]
   1ed94:	ldr	x1, [sp, #16]
   1ed98:	ldr	x2, [sp, #8]
   1ed9c:	blr	x8
   1eda0:	ldp	x29, x30, [sp, #32]
   1eda4:	add	sp, sp, #0x30
   1eda8:	ret

000000000001edac <gl_sortedlist_search_from_to@@Base>:
   1edac:	sub	sp, sp, #0x40
   1edb0:	stp	x29, x30, [sp, #48]
   1edb4:	add	x29, sp, #0x30
   1edb8:	stur	x0, [x29, #-8]
   1edbc:	stur	x1, [x29, #-16]
   1edc0:	str	x2, [sp, #24]
   1edc4:	str	x3, [sp, #16]
   1edc8:	str	x4, [sp, #8]
   1edcc:	ldur	x8, [x29, #-8]
   1edd0:	ldr	x8, [x8]
   1edd4:	ldr	x8, [x8, #200]
   1edd8:	ldur	x0, [x29, #-8]
   1eddc:	ldur	x1, [x29, #-16]
   1ede0:	ldr	x2, [sp, #24]
   1ede4:	ldr	x3, [sp, #16]
   1ede8:	ldr	x4, [sp, #8]
   1edec:	blr	x8
   1edf0:	ldp	x29, x30, [sp, #48]
   1edf4:	add	sp, sp, #0x40
   1edf8:	ret

000000000001edfc <gl_sortedlist_indexof@@Base>:
   1edfc:	sub	sp, sp, #0x30
   1ee00:	stp	x29, x30, [sp, #32]
   1ee04:	add	x29, sp, #0x20
   1ee08:	stur	x0, [x29, #-8]
   1ee0c:	str	x1, [sp, #16]
   1ee10:	str	x2, [sp, #8]
   1ee14:	ldur	x8, [x29, #-8]
   1ee18:	ldr	x8, [x8]
   1ee1c:	ldr	x8, [x8, #208]
   1ee20:	ldur	x0, [x29, #-8]
   1ee24:	ldr	x1, [sp, #16]
   1ee28:	ldr	x2, [sp, #8]
   1ee2c:	blr	x8
   1ee30:	ldp	x29, x30, [sp, #32]
   1ee34:	add	sp, sp, #0x30
   1ee38:	ret

000000000001ee3c <gl_sortedlist_indexof_from_to@@Base>:
   1ee3c:	sub	sp, sp, #0x40
   1ee40:	stp	x29, x30, [sp, #48]
   1ee44:	add	x29, sp, #0x30
   1ee48:	stur	x0, [x29, #-8]
   1ee4c:	stur	x1, [x29, #-16]
   1ee50:	str	x2, [sp, #24]
   1ee54:	str	x3, [sp, #16]
   1ee58:	str	x4, [sp, #8]
   1ee5c:	ldur	x8, [x29, #-8]
   1ee60:	ldr	x8, [x8]
   1ee64:	ldr	x8, [x8, #216]
   1ee68:	ldur	x0, [x29, #-8]
   1ee6c:	ldur	x1, [x29, #-16]
   1ee70:	ldr	x2, [sp, #24]
   1ee74:	ldr	x3, [sp, #16]
   1ee78:	ldr	x4, [sp, #8]
   1ee7c:	blr	x8
   1ee80:	ldp	x29, x30, [sp, #48]
   1ee84:	add	sp, sp, #0x40
   1ee88:	ret

000000000001ee8c <gl_sortedlist_nx_add@@Base>:
   1ee8c:	sub	sp, sp, #0x30
   1ee90:	stp	x29, x30, [sp, #32]
   1ee94:	add	x29, sp, #0x20
   1ee98:	stur	x0, [x29, #-8]
   1ee9c:	str	x1, [sp, #16]
   1eea0:	str	x2, [sp, #8]
   1eea4:	ldur	x8, [x29, #-8]
   1eea8:	ldr	x8, [x8]
   1eeac:	ldr	x8, [x8, #224]
   1eeb0:	ldur	x0, [x29, #-8]
   1eeb4:	ldr	x1, [sp, #16]
   1eeb8:	ldr	x2, [sp, #8]
   1eebc:	blr	x8
   1eec0:	ldp	x29, x30, [sp, #32]
   1eec4:	add	sp, sp, #0x30
   1eec8:	ret

000000000001eecc <gl_sortedlist_remove@@Base>:
   1eecc:	sub	sp, sp, #0x30
   1eed0:	stp	x29, x30, [sp, #32]
   1eed4:	add	x29, sp, #0x20
   1eed8:	stur	x0, [x29, #-8]
   1eedc:	str	x1, [sp, #16]
   1eee0:	str	x2, [sp, #8]
   1eee4:	ldur	x8, [x29, #-8]
   1eee8:	ldr	x8, [x8]
   1eeec:	ldr	x8, [x8, #232]
   1eef0:	ldur	x0, [x29, #-8]
   1eef4:	ldr	x1, [sp, #16]
   1eef8:	ldr	x2, [sp, #8]
   1eefc:	blr	x8
   1ef00:	and	w0, w0, #0x1
   1ef04:	ldp	x29, x30, [sp, #32]
   1ef08:	add	sp, sp, #0x30
   1ef0c:	ret

000000000001ef10 <locale_charset@@Base>:
   1ef10:	sub	sp, sp, #0x20
   1ef14:	stp	x29, x30, [sp, #16]
   1ef18:	add	x29, sp, #0x10
   1ef1c:	mov	w0, #0xe                   	// #14
   1ef20:	bl	b380 <nl_langinfo@plt>
   1ef24:	str	x0, [sp, #8]
   1ef28:	ldr	x8, [sp, #8]
   1ef2c:	cbnz	x8, 1ef3c <locale_charset@@Base+0x2c>
   1ef30:	adrp	x8, 44000 <vasnprintf@@Base+0x1e4c>
   1ef34:	add	x8, x8, #0x4d7
   1ef38:	str	x8, [sp, #8]
   1ef3c:	ldr	x8, [sp, #8]
   1ef40:	ldrb	w9, [x8]
   1ef44:	cbnz	w9, 1ef54 <locale_charset@@Base+0x44>
   1ef48:	adrp	x8, 44000 <vasnprintf@@Base+0x1e4c>
   1ef4c:	add	x8, x8, #0x80a
   1ef50:	str	x8, [sp, #8]
   1ef54:	ldr	x0, [sp, #8]
   1ef58:	ldp	x29, x30, [sp, #16]
   1ef5c:	add	sp, sp, #0x20
   1ef60:	ret

000000000001ef64 <glthread_rwlock_init_for_glibc@@Base>:
   1ef64:	sub	sp, sp, #0x30
   1ef68:	stp	x29, x30, [sp, #32]
   1ef6c:	add	x29, sp, #0x20
   1ef70:	add	x8, sp, #0x8
   1ef74:	str	x0, [sp, #16]
   1ef78:	mov	x0, x8
   1ef7c:	bl	b390 <pthread_rwlockattr_init@plt>
   1ef80:	str	w0, [sp, #4]
   1ef84:	ldr	w9, [sp, #4]
   1ef88:	cbz	w9, 1ef98 <glthread_rwlock_init_for_glibc@@Base+0x34>
   1ef8c:	ldr	w8, [sp, #4]
   1ef90:	stur	w8, [x29, #-4]
   1ef94:	b	1efd0 <glthread_rwlock_init_for_glibc@@Base+0x6c>
   1ef98:	add	x0, sp, #0x8
   1ef9c:	mov	w1, #0x2                   	// #2
   1efa0:	bl	b3a0 <pthread_rwlockattr_setkind_np@plt>
   1efa4:	str	w0, [sp, #4]
   1efa8:	ldr	w8, [sp, #4]
   1efac:	cbnz	w8, 1efc0 <glthread_rwlock_init_for_glibc@@Base+0x5c>
   1efb0:	ldr	x0, [sp, #16]
   1efb4:	add	x1, sp, #0x8
   1efb8:	bl	b3b0 <pthread_rwlock_init@plt>
   1efbc:	str	w0, [sp, #4]
   1efc0:	add	x0, sp, #0x8
   1efc4:	bl	b3c0 <pthread_rwlockattr_destroy@plt>
   1efc8:	ldr	w8, [sp, #4]
   1efcc:	stur	w8, [x29, #-4]
   1efd0:	ldur	w0, [x29, #-4]
   1efd4:	ldp	x29, x30, [sp, #32]
   1efd8:	add	sp, sp, #0x30
   1efdc:	ret

000000000001efe0 <glthread_recursive_lock_init_multithreaded@@Base>:
   1efe0:	sub	sp, sp, #0x30
   1efe4:	stp	x29, x30, [sp, #32]
   1efe8:	add	x29, sp, #0x20
   1efec:	add	x8, sp, #0x8
   1eff0:	str	x0, [sp, #16]
   1eff4:	mov	x0, x8
   1eff8:	bl	b3d0 <pthread_mutexattr_init@plt>
   1effc:	str	w0, [sp, #4]
   1f000:	ldr	w9, [sp, #4]
   1f004:	cbz	w9, 1f014 <glthread_recursive_lock_init_multithreaded@@Base+0x34>
   1f008:	ldr	w8, [sp, #4]
   1f00c:	stur	w8, [x29, #-4]
   1f010:	b	1f090 <glthread_recursive_lock_init_multithreaded@@Base+0xb0>
   1f014:	add	x0, sp, #0x8
   1f018:	mov	w1, #0x1                   	// #1
   1f01c:	bl	b3e0 <pthread_mutexattr_settype@plt>
   1f020:	str	w0, [sp, #4]
   1f024:	ldr	w8, [sp, #4]
   1f028:	cbz	w8, 1f040 <glthread_recursive_lock_init_multithreaded@@Base+0x60>
   1f02c:	add	x0, sp, #0x8
   1f030:	bl	b3f0 <pthread_mutexattr_destroy@plt>
   1f034:	ldr	w8, [sp, #4]
   1f038:	stur	w8, [x29, #-4]
   1f03c:	b	1f090 <glthread_recursive_lock_init_multithreaded@@Base+0xb0>
   1f040:	ldr	x0, [sp, #16]
   1f044:	add	x1, sp, #0x8
   1f048:	bl	b400 <pthread_mutex_init@plt>
   1f04c:	str	w0, [sp, #4]
   1f050:	ldr	w8, [sp, #4]
   1f054:	cbz	w8, 1f06c <glthread_recursive_lock_init_multithreaded@@Base+0x8c>
   1f058:	add	x0, sp, #0x8
   1f05c:	bl	b3f0 <pthread_mutexattr_destroy@plt>
   1f060:	ldr	w8, [sp, #4]
   1f064:	stur	w8, [x29, #-4]
   1f068:	b	1f090 <glthread_recursive_lock_init_multithreaded@@Base+0xb0>
   1f06c:	add	x0, sp, #0x8
   1f070:	bl	b3f0 <pthread_mutexattr_destroy@plt>
   1f074:	str	w0, [sp, #4]
   1f078:	ldr	w8, [sp, #4]
   1f07c:	cbz	w8, 1f08c <glthread_recursive_lock_init_multithreaded@@Base+0xac>
   1f080:	ldr	w8, [sp, #4]
   1f084:	stur	w8, [x29, #-4]
   1f088:	b	1f090 <glthread_recursive_lock_init_multithreaded@@Base+0xb0>
   1f08c:	stur	wzr, [x29, #-4]
   1f090:	ldur	w0, [x29, #-4]
   1f094:	ldp	x29, x30, [sp, #32]
   1f098:	add	sp, sp, #0x30
   1f09c:	ret

000000000001f0a0 <glthread_once_singlethreaded@@Base>:
   1f0a0:	sub	sp, sp, #0x20
   1f0a4:	adrp	x8, 46000 <vasnprintf@@Base+0x3e4c>
   1f0a8:	add	x8, x8, #0xf78
   1f0ac:	str	x0, [sp, #16]
   1f0b0:	ldr	x9, [sp, #16]
   1f0b4:	str	x9, [sp, #8]
   1f0b8:	ldr	x9, [sp, #8]
   1f0bc:	ldrb	w10, [x9]
   1f0c0:	ldrb	w11, [x8]
   1f0c4:	cmp	w10, w11
   1f0c8:	b.ne	1f0f0 <glthread_once_singlethreaded@@Base+0x50>  // b.any
   1f0cc:	adrp	x8, 46000 <vasnprintf@@Base+0x3e4c>
   1f0d0:	add	x8, x8, #0xf78
   1f0d4:	ldrb	w9, [x8]
   1f0d8:	mvn	w9, w9
   1f0dc:	ldr	x8, [sp, #8]
   1f0e0:	strb	w9, [x8]
   1f0e4:	mov	w9, #0x1                   	// #1
   1f0e8:	str	w9, [sp, #28]
   1f0ec:	b	1f0f4 <glthread_once_singlethreaded@@Base+0x54>
   1f0f0:	str	wzr, [sp, #28]
   1f0f4:	ldr	w0, [sp, #28]
   1f0f8:	add	sp, sp, #0x20
   1f0fc:	ret

000000000001f100 <mmalloca@@Base>:
   1f100:	sub	sp, sp, #0x40
   1f104:	stp	x29, x30, [sp, #48]
   1f108:	add	x29, sp, #0x30
   1f10c:	stur	x0, [x29, #-16]
   1f110:	ldur	x8, [x29, #-16]
   1f114:	add	x8, x8, #0x1
   1f118:	add	x8, x8, #0x20
   1f11c:	subs	x8, x8, #0x1
   1f120:	str	x8, [sp, #24]
   1f124:	ldr	x8, [sp, #24]
   1f128:	ldur	x9, [x29, #-16]
   1f12c:	cmp	x8, x9
   1f130:	b.cc	1f18c <mmalloca@@Base+0x8c>  // b.lo, b.ul, b.last
   1f134:	ldr	x0, [sp, #24]
   1f138:	bl	af10 <malloc@plt>
   1f13c:	str	x0, [sp, #16]
   1f140:	ldr	x8, [sp, #16]
   1f144:	cbz	x8, 1f18c <mmalloca@@Base+0x8c>
   1f148:	ldr	x8, [sp, #16]
   1f14c:	add	x8, x8, #0x1
   1f150:	add	x8, x8, #0x10
   1f154:	subs	x8, x8, #0x1
   1f158:	and	x8, x8, #0xffffffffffffffe0
   1f15c:	add	x8, x8, #0x10
   1f160:	str	x8, [sp, #8]
   1f164:	ldr	x8, [sp, #8]
   1f168:	ldr	x9, [sp, #16]
   1f16c:	subs	x8, x8, x9
   1f170:	ldr	x9, [sp, #8]
   1f174:	mov	x10, #0xffffffffffffffff    	// #-1
   1f178:	add	x9, x9, x10
   1f17c:	strb	w8, [x9]
   1f180:	ldr	x9, [sp, #8]
   1f184:	stur	x9, [x29, #-8]
   1f188:	b	1f194 <mmalloca@@Base+0x94>
   1f18c:	mov	x8, xzr
   1f190:	stur	x8, [x29, #-8]
   1f194:	ldur	x0, [x29, #-8]
   1f198:	ldp	x29, x30, [sp, #48]
   1f19c:	add	sp, sp, #0x40
   1f1a0:	ret

000000000001f1a4 <freea@@Base>:
   1f1a4:	sub	sp, sp, #0x20
   1f1a8:	stp	x29, x30, [sp, #16]
   1f1ac:	add	x29, sp, #0x10
   1f1b0:	str	x0, [sp, #8]
   1f1b4:	ldr	x8, [sp, #8]
   1f1b8:	and	x8, x8, #0xf
   1f1bc:	cbz	x8, 1f1c4 <freea@@Base+0x20>
   1f1c0:	bl	a9e0 <abort@plt>
   1f1c4:	ldr	x8, [sp, #8]
   1f1c8:	and	x8, x8, #0x10
   1f1cc:	cbz	x8, 1f1f4 <freea@@Base+0x50>
   1f1d0:	ldr	x8, [sp, #8]
   1f1d4:	ldr	x9, [sp, #8]
   1f1d8:	ldurb	w10, [x9, #-1]
   1f1dc:	mov	x9, xzr
   1f1e0:	subs	x9, x9, w10, sxtw
   1f1e4:	add	x8, x8, x9
   1f1e8:	str	x8, [sp]
   1f1ec:	ldr	x0, [sp]
   1f1f0:	bl	a930 <free@plt>
   1f1f4:	ldp	x29, x30, [sp, #16]
   1f1f8:	add	sp, sp, #0x20
   1f1fc:	ret

000000000001f200 <gl_map_nx_create_empty@@Base>:
   1f200:	sub	sp, sp, #0x40
   1f204:	stp	x29, x30, [sp, #48]
   1f208:	add	x29, sp, #0x30
   1f20c:	stur	x0, [x29, #-8]
   1f210:	stur	x1, [x29, #-16]
   1f214:	str	x2, [sp, #24]
   1f218:	str	x3, [sp, #16]
   1f21c:	str	x4, [sp, #8]
   1f220:	ldur	x8, [x29, #-8]
   1f224:	ldr	x8, [x8]
   1f228:	ldur	x0, [x29, #-8]
   1f22c:	ldur	x1, [x29, #-16]
   1f230:	ldr	x2, [sp, #24]
   1f234:	ldr	x3, [sp, #16]
   1f238:	ldr	x4, [sp, #8]
   1f23c:	blr	x8
   1f240:	ldp	x29, x30, [sp, #48]
   1f244:	add	sp, sp, #0x40
   1f248:	ret

000000000001f24c <gl_map_size@@Base>:
   1f24c:	sub	sp, sp, #0x20
   1f250:	stp	x29, x30, [sp, #16]
   1f254:	add	x29, sp, #0x10
   1f258:	str	x0, [sp, #8]
   1f25c:	ldr	x8, [sp, #8]
   1f260:	ldr	x8, [x8]
   1f264:	ldr	x8, [x8, #8]
   1f268:	ldr	x0, [sp, #8]
   1f26c:	blr	x8
   1f270:	ldp	x29, x30, [sp, #16]
   1f274:	add	sp, sp, #0x20
   1f278:	ret

000000000001f27c <gl_map_search@@Base>:
   1f27c:	sub	sp, sp, #0x30
   1f280:	stp	x29, x30, [sp, #32]
   1f284:	add	x29, sp, #0x20
   1f288:	stur	x0, [x29, #-8]
   1f28c:	str	x1, [sp, #16]
   1f290:	str	x2, [sp, #8]
   1f294:	ldur	x8, [x29, #-8]
   1f298:	ldr	x8, [x8]
   1f29c:	ldr	x8, [x8, #16]
   1f2a0:	ldur	x0, [x29, #-8]
   1f2a4:	ldr	x1, [sp, #16]
   1f2a8:	ldr	x2, [sp, #8]
   1f2ac:	blr	x8
   1f2b0:	and	w0, w0, #0x1
   1f2b4:	ldp	x29, x30, [sp, #32]
   1f2b8:	add	sp, sp, #0x30
   1f2bc:	ret

000000000001f2c0 <gl_map_nx_getput@@Base>:
   1f2c0:	sub	sp, sp, #0x30
   1f2c4:	stp	x29, x30, [sp, #32]
   1f2c8:	add	x29, sp, #0x20
   1f2cc:	stur	x0, [x29, #-8]
   1f2d0:	str	x1, [sp, #16]
   1f2d4:	str	x2, [sp, #8]
   1f2d8:	str	x3, [sp]
   1f2dc:	ldur	x8, [x29, #-8]
   1f2e0:	ldr	x8, [x8]
   1f2e4:	ldr	x8, [x8, #24]
   1f2e8:	ldur	x0, [x29, #-8]
   1f2ec:	ldr	x1, [sp, #16]
   1f2f0:	ldr	x2, [sp, #8]
   1f2f4:	ldr	x3, [sp]
   1f2f8:	blr	x8
   1f2fc:	ldp	x29, x30, [sp, #32]
   1f300:	add	sp, sp, #0x30
   1f304:	ret

000000000001f308 <gl_map_getremove@@Base>:
   1f308:	sub	sp, sp, #0x30
   1f30c:	stp	x29, x30, [sp, #32]
   1f310:	add	x29, sp, #0x20
   1f314:	stur	x0, [x29, #-8]
   1f318:	str	x1, [sp, #16]
   1f31c:	str	x2, [sp, #8]
   1f320:	ldur	x8, [x29, #-8]
   1f324:	ldr	x8, [x8]
   1f328:	ldr	x8, [x8, #32]
   1f32c:	ldur	x0, [x29, #-8]
   1f330:	ldr	x1, [sp, #16]
   1f334:	ldr	x2, [sp, #8]
   1f338:	blr	x8
   1f33c:	and	w0, w0, #0x1
   1f340:	ldp	x29, x30, [sp, #32]
   1f344:	add	sp, sp, #0x30
   1f348:	ret

000000000001f34c <gl_map_free@@Base>:
   1f34c:	sub	sp, sp, #0x20
   1f350:	stp	x29, x30, [sp, #16]
   1f354:	add	x29, sp, #0x10
   1f358:	str	x0, [sp, #8]
   1f35c:	ldr	x8, [sp, #8]
   1f360:	ldr	x8, [x8]
   1f364:	ldr	x8, [x8, #40]
   1f368:	ldr	x0, [sp, #8]
   1f36c:	blr	x8
   1f370:	ldp	x29, x30, [sp, #16]
   1f374:	add	sp, sp, #0x20
   1f378:	ret

000000000001f37c <gl_map_iterator@@Base>:
   1f37c:	sub	sp, sp, #0x20
   1f380:	stp	x29, x30, [sp, #16]
   1f384:	add	x29, sp, #0x10
   1f388:	str	x0, [sp, #8]
   1f38c:	ldr	x9, [sp, #8]
   1f390:	ldr	x9, [x9]
   1f394:	ldr	x9, [x9, #48]
   1f398:	ldr	x0, [sp, #8]
   1f39c:	blr	x9
   1f3a0:	ldp	x29, x30, [sp, #16]
   1f3a4:	add	sp, sp, #0x20
   1f3a8:	ret

000000000001f3ac <gl_map_iterator_next@@Base>:
   1f3ac:	sub	sp, sp, #0x30
   1f3b0:	stp	x29, x30, [sp, #32]
   1f3b4:	add	x29, sp, #0x20
   1f3b8:	stur	x0, [x29, #-8]
   1f3bc:	str	x1, [sp, #16]
   1f3c0:	str	x2, [sp, #8]
   1f3c4:	ldur	x8, [x29, #-8]
   1f3c8:	ldr	x8, [x8]
   1f3cc:	ldr	x8, [x8, #56]
   1f3d0:	ldur	x0, [x29, #-8]
   1f3d4:	ldr	x1, [sp, #16]
   1f3d8:	ldr	x2, [sp, #8]
   1f3dc:	blr	x8
   1f3e0:	and	w0, w0, #0x1
   1f3e4:	ldp	x29, x30, [sp, #32]
   1f3e8:	add	sp, sp, #0x30
   1f3ec:	ret

000000000001f3f0 <gl_map_iterator_free@@Base>:
   1f3f0:	sub	sp, sp, #0x20
   1f3f4:	stp	x29, x30, [sp, #16]
   1f3f8:	add	x29, sp, #0x10
   1f3fc:	str	x0, [sp, #8]
   1f400:	ldr	x8, [sp, #8]
   1f404:	ldr	x8, [x8]
   1f408:	ldr	x8, [x8, #64]
   1f40c:	ldr	x0, [sp, #8]
   1f410:	blr	x8
   1f414:	ldp	x29, x30, [sp, #16]
   1f418:	add	sp, sp, #0x20
   1f41c:	ret

000000000001f420 <gl_map_get@@Base>:
   1f420:	sub	sp, sp, #0x30
   1f424:	stp	x29, x30, [sp, #32]
   1f428:	add	x29, sp, #0x20
   1f42c:	mov	x8, xzr
   1f430:	add	x2, sp, #0x8
   1f434:	stur	x0, [x29, #-8]
   1f438:	str	x1, [sp, #16]
   1f43c:	str	x8, [sp, #8]
   1f440:	ldur	x0, [x29, #-8]
   1f444:	ldr	x1, [sp, #16]
   1f448:	bl	b410 <gl_map_search@plt>
   1f44c:	ldr	x8, [sp, #8]
   1f450:	mov	x0, x8
   1f454:	ldp	x29, x30, [sp, #32]
   1f458:	add	sp, sp, #0x30
   1f45c:	ret

000000000001f460 <gl_map_nx_put@@Base>:
   1f460:	sub	sp, sp, #0x40
   1f464:	stp	x29, x30, [sp, #48]
   1f468:	add	x29, sp, #0x30
   1f46c:	add	x3, sp, #0x10
   1f470:	stur	x0, [x29, #-8]
   1f474:	stur	x1, [x29, #-16]
   1f478:	str	x2, [sp, #24]
   1f47c:	ldur	x0, [x29, #-8]
   1f480:	ldur	x1, [x29, #-16]
   1f484:	ldr	x2, [sp, #24]
   1f488:	bl	b420 <gl_map_nx_getput@plt>
   1f48c:	str	w0, [sp, #12]
   1f490:	ldr	w8, [sp, #12]
   1f494:	cbnz	w8, 1f4b8 <gl_map_nx_put@@Base+0x58>
   1f498:	ldur	x8, [x29, #-8]
   1f49c:	ldr	x8, [x8, #24]
   1f4a0:	str	x8, [sp]
   1f4a4:	ldr	x8, [sp]
   1f4a8:	cbz	x8, 1f4b8 <gl_map_nx_put@@Base+0x58>
   1f4ac:	ldr	x8, [sp]
   1f4b0:	ldr	x0, [sp, #16]
   1f4b4:	blr	x8
   1f4b8:	ldr	w0, [sp, #12]
   1f4bc:	ldp	x29, x30, [sp, #48]
   1f4c0:	add	sp, sp, #0x40
   1f4c4:	ret

000000000001f4c8 <gl_map_remove@@Base>:
   1f4c8:	sub	sp, sp, #0x40
   1f4cc:	stp	x29, x30, [sp, #48]
   1f4d0:	add	x29, sp, #0x30
   1f4d4:	add	x2, sp, #0x18
   1f4d8:	stur	x0, [x29, #-8]
   1f4dc:	stur	x1, [x29, #-16]
   1f4e0:	ldur	x0, [x29, #-8]
   1f4e4:	ldur	x1, [x29, #-16]
   1f4e8:	bl	b430 <gl_map_getremove@plt>
   1f4ec:	and	w8, w0, #0x1
   1f4f0:	strb	w8, [sp, #23]
   1f4f4:	ldrb	w8, [sp, #23]
   1f4f8:	tbnz	w8, #0, 1f500 <gl_map_remove@@Base+0x38>
   1f4fc:	b	1f520 <gl_map_remove@@Base+0x58>
   1f500:	ldur	x8, [x29, #-8]
   1f504:	ldr	x8, [x8, #24]
   1f508:	str	x8, [sp, #8]
   1f50c:	ldr	x8, [sp, #8]
   1f510:	cbz	x8, 1f520 <gl_map_remove@@Base+0x58>
   1f514:	ldr	x8, [sp, #8]
   1f518:	ldr	x0, [sp, #24]
   1f51c:	blr	x8
   1f520:	ldrb	w8, [sp, #23]
   1f524:	and	w0, w8, #0x1
   1f528:	ldp	x29, x30, [sp, #48]
   1f52c:	add	sp, sp, #0x40
   1f530:	ret

000000000001f534 <get_nonblocking_flag@@Base>:
   1f534:	sub	sp, sp, #0x20
   1f538:	stp	x29, x30, [sp, #16]
   1f53c:	add	x29, sp, #0x10
   1f540:	mov	w1, #0x3                   	// #3
   1f544:	mov	w8, wzr
   1f548:	str	w0, [sp, #8]
   1f54c:	ldr	w0, [sp, #8]
   1f550:	mov	w2, w8
   1f554:	bl	b440 <fcntl@plt>
   1f558:	str	w0, [sp, #4]
   1f55c:	ldr	w8, [sp, #4]
   1f560:	cmp	w8, #0x0
   1f564:	cset	w8, ge  // ge = tcont
   1f568:	tbnz	w8, #0, 1f578 <get_nonblocking_flag@@Base+0x44>
   1f56c:	mov	w8, #0xffffffff            	// #-1
   1f570:	stur	w8, [x29, #-4]
   1f574:	b	1f58c <get_nonblocking_flag@@Base+0x58>
   1f578:	ldr	w8, [sp, #4]
   1f57c:	tst	w8, #0x800
   1f580:	cset	w8, ne  // ne = any
   1f584:	and	w8, w8, #0x1
   1f588:	stur	w8, [x29, #-4]
   1f58c:	ldur	w0, [x29, #-4]
   1f590:	ldp	x29, x30, [sp, #16]
   1f594:	add	sp, sp, #0x20
   1f598:	ret

000000000001f59c <set_nonblocking_flag@@Base>:
   1f59c:	sub	sp, sp, #0x20
   1f5a0:	stp	x29, x30, [sp, #16]
   1f5a4:	add	x29, sp, #0x10
   1f5a8:	mov	w8, #0x3                   	// #3
   1f5ac:	mov	w9, wzr
   1f5b0:	str	w0, [sp, #8]
   1f5b4:	and	w10, w1, #0x1
   1f5b8:	strb	w10, [sp, #7]
   1f5bc:	ldr	w0, [sp, #8]
   1f5c0:	mov	w1, w8
   1f5c4:	mov	w2, w9
   1f5c8:	bl	b440 <fcntl@plt>
   1f5cc:	str	w0, [sp]
   1f5d0:	ldr	w8, [sp]
   1f5d4:	cmp	w8, #0x0
   1f5d8:	cset	w8, ge  // ge = tcont
   1f5dc:	tbnz	w8, #0, 1f5ec <set_nonblocking_flag@@Base+0x50>
   1f5e0:	mov	w8, #0xffffffff            	// #-1
   1f5e4:	stur	w8, [x29, #-4]
   1f5e8:	b	1f650 <set_nonblocking_flag@@Base+0xb4>
   1f5ec:	ldr	w8, [sp]
   1f5f0:	tst	w8, #0x800
   1f5f4:	cset	w8, ne  // ne = any
   1f5f8:	and	w8, w8, #0x1
   1f5fc:	ldrb	w9, [sp, #7]
   1f600:	and	w9, w9, #0x1
   1f604:	cmp	w8, w9
   1f608:	b.ne	1f614 <set_nonblocking_flag@@Base+0x78>  // b.any
   1f60c:	stur	wzr, [x29, #-4]
   1f610:	b	1f650 <set_nonblocking_flag@@Base+0xb4>
   1f614:	ldrb	w8, [sp, #7]
   1f618:	tbnz	w8, #0, 1f620 <set_nonblocking_flag@@Base+0x84>
   1f61c:	b	1f630 <set_nonblocking_flag@@Base+0x94>
   1f620:	ldr	w8, [sp]
   1f624:	orr	w8, w8, #0x800
   1f628:	str	w8, [sp]
   1f62c:	b	1f63c <set_nonblocking_flag@@Base+0xa0>
   1f630:	ldr	w8, [sp]
   1f634:	and	w8, w8, #0xfffff7ff
   1f638:	str	w8, [sp]
   1f63c:	ldr	w0, [sp, #8]
   1f640:	ldr	w2, [sp]
   1f644:	mov	w1, #0x4                   	// #4
   1f648:	bl	b440 <fcntl@plt>
   1f64c:	stur	w0, [x29, #-4]
   1f650:	ldur	w0, [x29, #-4]
   1f654:	ldp	x29, x30, [sp, #16]
   1f658:	add	sp, sp, #0x20
   1f65c:	ret

000000000001f660 <openat_save_fail@@Base>:
   1f660:	sub	sp, sp, #0x30
   1f664:	stp	x29, x30, [sp, #32]
   1f668:	add	x29, sp, #0x20
   1f66c:	adrp	x8, 5f000 <vasnprintf@@Base+0x1ce4c>
   1f670:	ldr	x8, [x8, #4000]
   1f674:	adrp	x9, 44000 <vasnprintf@@Base+0x1e4c>
   1f678:	add	x9, x9, #0xe15
   1f67c:	adrp	x1, 45000 <vasnprintf@@Base+0x2e4c>
   1f680:	add	x1, x1, #0x284
   1f684:	stur	w0, [x29, #-4]
   1f688:	ldr	w0, [x8]
   1f68c:	ldur	w10, [x29, #-4]
   1f690:	stur	w0, [x29, #-8]
   1f694:	mov	x0, x9
   1f698:	stur	w10, [x29, #-12]
   1f69c:	bl	b000 <dgettext@plt>
   1f6a0:	ldur	w10, [x29, #-8]
   1f6a4:	str	x0, [sp, #8]
   1f6a8:	mov	w0, w10
   1f6ac:	ldur	w1, [x29, #-12]
   1f6b0:	ldr	x2, [sp, #8]
   1f6b4:	bl	adc0 <error@plt>
   1f6b8:	bl	a9e0 <abort@plt>

000000000001f6bc <openat_restore_fail@@Base>:
   1f6bc:	sub	sp, sp, #0x30
   1f6c0:	stp	x29, x30, [sp, #32]
   1f6c4:	add	x29, sp, #0x20
   1f6c8:	adrp	x8, 5f000 <vasnprintf@@Base+0x1ce4c>
   1f6cc:	ldr	x8, [x8, #4000]
   1f6d0:	adrp	x9, 44000 <vasnprintf@@Base+0x1e4c>
   1f6d4:	add	x9, x9, #0xe15
   1f6d8:	adrp	x1, 45000 <vasnprintf@@Base+0x2e4c>
   1f6dc:	add	x1, x1, #0x2af
   1f6e0:	stur	w0, [x29, #-4]
   1f6e4:	ldr	w0, [x8]
   1f6e8:	ldur	w10, [x29, #-4]
   1f6ec:	stur	w0, [x29, #-8]
   1f6f0:	mov	x0, x9
   1f6f4:	stur	w10, [x29, #-12]
   1f6f8:	bl	b000 <dgettext@plt>
   1f6fc:	ldur	w10, [x29, #-8]
   1f700:	str	x0, [sp, #8]
   1f704:	mov	w0, w10
   1f708:	ldur	w1, [x29, #-12]
   1f70c:	ldr	x2, [sp, #8]
   1f710:	bl	adc0 <error@plt>
   1f714:	bl	a9e0 <abort@plt>

000000000001f718 <set_program_name@@Base>:
   1f718:	sub	sp, sp, #0x30
   1f71c:	stp	x29, x30, [sp, #32]
   1f720:	add	x29, sp, #0x20
   1f724:	stur	x0, [x29, #-8]
   1f728:	ldur	x8, [x29, #-8]
   1f72c:	cbnz	x8, 1f74c <set_program_name@@Base+0x34>
   1f730:	adrp	x8, 5f000 <vasnprintf@@Base+0x1ce4c>
   1f734:	ldr	x8, [x8, #3808]
   1f738:	ldr	x1, [x8]
   1f73c:	adrp	x0, 45000 <vasnprintf@@Base+0x2e4c>
   1f740:	add	x0, x0, #0x2dd
   1f744:	bl	b450 <fputs@plt>
   1f748:	bl	a9e0 <abort@plt>
   1f74c:	ldur	x0, [x29, #-8]
   1f750:	mov	w1, #0x2f                  	// #47
   1f754:	bl	b460 <strrchr@plt>
   1f758:	str	x0, [sp, #16]
   1f75c:	ldr	x8, [sp, #16]
   1f760:	cbz	x8, 1f774 <set_program_name@@Base+0x5c>
   1f764:	ldr	x8, [sp, #16]
   1f768:	add	x8, x8, #0x1
   1f76c:	str	x8, [sp]
   1f770:	b	1f77c <set_program_name@@Base+0x64>
   1f774:	ldur	x8, [x29, #-8]
   1f778:	str	x8, [sp]
   1f77c:	ldr	x8, [sp]
   1f780:	str	x8, [sp, #8]
   1f784:	ldr	x8, [sp, #8]
   1f788:	ldur	x9, [x29, #-8]
   1f78c:	subs	x8, x8, x9
   1f790:	cmp	x8, #0x7
   1f794:	b.lt	1f7f4 <set_program_name@@Base+0xdc>  // b.tstop
   1f798:	ldr	x8, [sp, #8]
   1f79c:	mov	x9, #0xfffffffffffffff9    	// #-7
   1f7a0:	add	x0, x8, x9
   1f7a4:	adrp	x1, 45000 <vasnprintf@@Base+0x2e4c>
   1f7a8:	add	x1, x1, #0x315
   1f7ac:	mov	x2, #0x7                   	// #7
   1f7b0:	bl	aac0 <strncmp@plt>
   1f7b4:	cbnz	w0, 1f7f4 <set_program_name@@Base+0xdc>
   1f7b8:	ldr	x8, [sp, #8]
   1f7bc:	stur	x8, [x29, #-8]
   1f7c0:	ldr	x0, [sp, #8]
   1f7c4:	adrp	x1, 45000 <vasnprintf@@Base+0x2e4c>
   1f7c8:	add	x1, x1, #0x31d
   1f7cc:	mov	x2, #0x3                   	// #3
   1f7d0:	bl	aac0 <strncmp@plt>
   1f7d4:	cbnz	w0, 1f7f4 <set_program_name@@Base+0xdc>
   1f7d8:	ldr	x8, [sp, #8]
   1f7dc:	add	x8, x8, #0x3
   1f7e0:	stur	x8, [x29, #-8]
   1f7e4:	ldur	x8, [x29, #-8]
   1f7e8:	adrp	x9, 5f000 <vasnprintf@@Base+0x1ce4c>
   1f7ec:	ldr	x9, [x9, #3928]
   1f7f0:	str	x8, [x9]
   1f7f4:	ldur	x8, [x29, #-8]
   1f7f8:	adrp	x9, 5f000 <vasnprintf@@Base+0x1ce4c>
   1f7fc:	ldr	x9, [x9, #4008]
   1f800:	str	x8, [x9]
   1f804:	ldur	x8, [x29, #-8]
   1f808:	adrp	x9, 5f000 <vasnprintf@@Base+0x1ce4c>
   1f80c:	ldr	x9, [x9, #3944]
   1f810:	str	x8, [x9]
   1f814:	ldp	x29, x30, [sp, #32]
   1f818:	add	sp, sp, #0x30
   1f81c:	ret

000000000001f820 <gl_rbtree_list_check_invariants@@Base>:
   1f820:	sub	sp, sp, #0x20
   1f824:	stp	x29, x30, [sp, #16]
   1f828:	add	x29, sp, #0x10
   1f82c:	str	x0, [sp, #8]
   1f830:	ldr	x8, [sp, #8]
   1f834:	ldr	x8, [x8, #40]
   1f838:	cbz	x8, 1f850 <gl_rbtree_list_check_invariants@@Base+0x30>
   1f83c:	ldr	x8, [sp, #8]
   1f840:	ldr	x0, [x8, #40]
   1f844:	mov	x8, xzr
   1f848:	mov	x1, x8
   1f84c:	bl	1f85c <gl_rbtree_list_check_invariants@@Base+0x3c>
   1f850:	ldp	x29, x30, [sp, #16]
   1f854:	add	sp, sp, #0x20
   1f858:	ret
   1f85c:	sub	sp, sp, #0x50
   1f860:	stp	x29, x30, [sp, #64]
   1f864:	add	x29, sp, #0x40
   1f868:	stur	x0, [x29, #-8]
   1f86c:	stur	x1, [x29, #-16]
   1f870:	ldur	x8, [x29, #-8]
   1f874:	ldr	x8, [x8]
   1f878:	cbz	x8, 1f894 <gl_rbtree_list_check_invariants@@Base+0x74>
   1f87c:	ldur	x8, [x29, #-8]
   1f880:	ldr	x0, [x8]
   1f884:	ldur	x1, [x29, #-8]
   1f888:	bl	1f85c <gl_rbtree_list_check_invariants@@Base+0x3c>
   1f88c:	stur	w0, [x29, #-28]
   1f890:	b	1f89c <gl_rbtree_list_check_invariants@@Base+0x7c>
   1f894:	mov	w8, wzr
   1f898:	stur	w8, [x29, #-28]
   1f89c:	ldur	w8, [x29, #-28]
   1f8a0:	stur	w8, [x29, #-20]
   1f8a4:	ldur	x9, [x29, #-8]
   1f8a8:	ldr	x9, [x9, #8]
   1f8ac:	cbz	x9, 1f8c8 <gl_rbtree_list_check_invariants@@Base+0xa8>
   1f8b0:	ldur	x8, [x29, #-8]
   1f8b4:	ldr	x0, [x8, #8]
   1f8b8:	ldur	x1, [x29, #-8]
   1f8bc:	bl	1f85c <gl_rbtree_list_check_invariants@@Base+0x3c>
   1f8c0:	str	w0, [sp, #32]
   1f8c4:	b	1f8d0 <gl_rbtree_list_check_invariants@@Base+0xb0>
   1f8c8:	mov	w8, wzr
   1f8cc:	str	w8, [sp, #32]
   1f8d0:	ldr	w8, [sp, #32]
   1f8d4:	stur	w8, [x29, #-24]
   1f8d8:	ldur	x9, [x29, #-8]
   1f8dc:	ldr	x9, [x9, #16]
   1f8e0:	ldur	x10, [x29, #-16]
   1f8e4:	cmp	x9, x10
   1f8e8:	b.eq	1f8f0 <gl_rbtree_list_check_invariants@@Base+0xd0>  // b.none
   1f8ec:	bl	a9e0 <abort@plt>
   1f8f0:	ldur	x8, [x29, #-8]
   1f8f4:	ldr	x8, [x8, #32]
   1f8f8:	ldur	x9, [x29, #-8]
   1f8fc:	ldr	x9, [x9]
   1f900:	str	x8, [sp, #24]
   1f904:	cbz	x9, 1f91c <gl_rbtree_list_check_invariants@@Base+0xfc>
   1f908:	ldur	x8, [x29, #-8]
   1f90c:	ldr	x8, [x8]
   1f910:	ldr	x8, [x8, #32]
   1f914:	str	x8, [sp, #16]
   1f918:	b	1f924 <gl_rbtree_list_check_invariants@@Base+0x104>
   1f91c:	mov	x8, xzr
   1f920:	str	x8, [sp, #16]
   1f924:	ldr	x8, [sp, #16]
   1f928:	add	x8, x8, #0x1
   1f92c:	ldur	x9, [x29, #-8]
   1f930:	ldr	x9, [x9, #8]
   1f934:	str	x8, [sp, #8]
   1f938:	cbz	x9, 1f950 <gl_rbtree_list_check_invariants@@Base+0x130>
   1f93c:	ldur	x8, [x29, #-8]
   1f940:	ldr	x8, [x8, #8]
   1f944:	ldr	x8, [x8, #32]
   1f948:	str	x8, [sp]
   1f94c:	b	1f958 <gl_rbtree_list_check_invariants@@Base+0x138>
   1f950:	mov	x8, xzr
   1f954:	str	x8, [sp]
   1f958:	ldr	x8, [sp]
   1f95c:	ldr	x9, [sp, #8]
   1f960:	add	x8, x9, x8
   1f964:	ldr	x10, [sp, #24]
   1f968:	cmp	x10, x8
   1f96c:	b.eq	1f974 <gl_rbtree_list_check_invariants@@Base+0x154>  // b.none
   1f970:	bl	a9e0 <abort@plt>
   1f974:	ldur	x8, [x29, #-8]
   1f978:	ldr	w9, [x8, #24]
   1f97c:	cbz	w9, 1f994 <gl_rbtree_list_check_invariants@@Base+0x174>
   1f980:	ldur	x8, [x29, #-8]
   1f984:	ldr	w9, [x8, #24]
   1f988:	cmp	w9, #0x1
   1f98c:	b.eq	1f994 <gl_rbtree_list_check_invariants@@Base+0x174>  // b.none
   1f990:	bl	a9e0 <abort@plt>
   1f994:	ldur	x8, [x29, #-16]
   1f998:	cbnz	x8, 1f9ac <gl_rbtree_list_check_invariants@@Base+0x18c>
   1f99c:	ldur	x8, [x29, #-8]
   1f9a0:	ldr	w9, [x8, #24]
   1f9a4:	cbz	w9, 1f9ac <gl_rbtree_list_check_invariants@@Base+0x18c>
   1f9a8:	bl	a9e0 <abort@plt>
   1f9ac:	ldur	w8, [x29, #-20]
   1f9b0:	ldur	w9, [x29, #-24]
   1f9b4:	cmp	w8, w9
   1f9b8:	b.eq	1f9c0 <gl_rbtree_list_check_invariants@@Base+0x1a0>  // b.none
   1f9bc:	bl	a9e0 <abort@plt>
   1f9c0:	ldur	w8, [x29, #-20]
   1f9c4:	ldur	x9, [x29, #-8]
   1f9c8:	ldr	w10, [x9, #24]
   1f9cc:	mov	w11, wzr
   1f9d0:	mov	w12, #0x1                   	// #1
   1f9d4:	cmp	w10, #0x0
   1f9d8:	csel	w10, w12, w11, eq  // eq = none
   1f9dc:	add	w0, w8, w10
   1f9e0:	ldp	x29, x30, [sp, #64]
   1f9e4:	add	sp, sp, #0x50
   1f9e8:	ret
   1f9ec:	sub	sp, sp, #0x50
   1f9f0:	stp	x29, x30, [sp, #64]
   1f9f4:	add	x29, sp, #0x40
   1f9f8:	mov	x8, #0x30                  	// #48
   1f9fc:	stur	x0, [x29, #-16]
   1fa00:	stur	x1, [x29, #-24]
   1fa04:	str	x2, [sp, #32]
   1fa08:	str	x3, [sp, #24]
   1fa0c:	and	w9, w4, #0x1
   1fa10:	strb	w9, [sp, #23]
   1fa14:	mov	x0, x8
   1fa18:	bl	af10 <malloc@plt>
   1fa1c:	str	x0, [sp, #8]
   1fa20:	ldr	x8, [sp, #8]
   1fa24:	cbnz	x8, 1fa34 <gl_rbtree_list_check_invariants@@Base+0x214>
   1fa28:	mov	x8, xzr
   1fa2c:	stur	x8, [x29, #-8]
   1fa30:	b	1fa88 <gl_rbtree_list_check_invariants@@Base+0x268>
   1fa34:	ldur	x8, [x29, #-16]
   1fa38:	ldr	x9, [sp, #8]
   1fa3c:	str	x8, [x9]
   1fa40:	ldur	x8, [x29, #-24]
   1fa44:	ldr	x9, [sp, #8]
   1fa48:	str	x8, [x9, #8]
   1fa4c:	ldr	x8, [sp, #32]
   1fa50:	ldr	x9, [sp, #8]
   1fa54:	str	x8, [x9, #16]
   1fa58:	ldr	x8, [sp, #24]
   1fa5c:	ldr	x9, [sp, #8]
   1fa60:	str	x8, [x9, #24]
   1fa64:	ldrb	w10, [sp, #23]
   1fa68:	ldr	x8, [sp, #8]
   1fa6c:	and	w10, w10, #0x1
   1fa70:	strb	w10, [x8, #32]
   1fa74:	ldr	x8, [sp, #8]
   1fa78:	mov	x9, xzr
   1fa7c:	str	x9, [x8, #40]
   1fa80:	ldr	x8, [sp, #8]
   1fa84:	stur	x8, [x29, #-8]
   1fa88:	ldur	x0, [x29, #-8]
   1fa8c:	ldp	x29, x30, [sp, #64]
   1fa90:	add	sp, sp, #0x50
   1fa94:	ret
   1fa98:	sub	sp, sp, #0x70
   1fa9c:	stp	x29, x30, [sp, #96]
   1faa0:	add	x29, sp, #0x60
   1faa4:	mov	x8, #0x30                  	// #48
   1faa8:	mov	w9, #0x1                   	// #1
   1faac:	stur	x0, [x29, #-16]
   1fab0:	stur	x1, [x29, #-24]
   1fab4:	stur	x2, [x29, #-32]
   1fab8:	stur	x3, [x29, #-40]
   1fabc:	and	w9, w4, w9
   1fac0:	sturb	w9, [x29, #-41]
   1fac4:	str	x5, [sp, #40]
   1fac8:	str	x6, [sp, #32]
   1facc:	mov	x0, x8
   1fad0:	bl	af10 <malloc@plt>
   1fad4:	str	x0, [sp, #24]
   1fad8:	ldr	x8, [sp, #24]
   1fadc:	cbnz	x8, 1faec <gl_rbtree_list_check_invariants@@Base+0x2cc>
   1fae0:	mov	x8, xzr
   1fae4:	stur	x8, [x29, #-8]
   1fae8:	b	1fbd8 <gl_rbtree_list_check_invariants@@Base+0x3b8>
   1faec:	ldur	x8, [x29, #-16]
   1faf0:	ldr	x9, [sp, #24]
   1faf4:	str	x8, [x9]
   1faf8:	ldur	x8, [x29, #-24]
   1fafc:	ldr	x9, [sp, #24]
   1fb00:	str	x8, [x9, #8]
   1fb04:	ldur	x8, [x29, #-32]
   1fb08:	ldr	x9, [sp, #24]
   1fb0c:	str	x8, [x9, #16]
   1fb10:	ldur	x8, [x29, #-40]
   1fb14:	ldr	x9, [sp, #24]
   1fb18:	str	x8, [x9, #24]
   1fb1c:	ldurb	w10, [x29, #-41]
   1fb20:	ldr	x8, [sp, #24]
   1fb24:	and	w10, w10, #0x1
   1fb28:	strb	w10, [x8, #32]
   1fb2c:	ldr	x8, [sp, #40]
   1fb30:	cmp	x8, #0x0
   1fb34:	cset	w10, ls  // ls = plast
   1fb38:	tbnz	w10, #0, 1fbb0 <gl_rbtree_list_check_invariants@@Base+0x390>
   1fb3c:	ldr	x8, [sp, #40]
   1fb40:	add	x8, x8, #0x1
   1fb44:	str	x8, [sp, #8]
   1fb48:	str	wzr, [sp, #20]
   1fb4c:	ldr	x8, [sp, #8]
   1fb50:	cmp	x8, #0x1
   1fb54:	b.ls	1fb74 <gl_rbtree_list_check_invariants@@Base+0x354>  // b.plast
   1fb58:	ldr	w8, [sp, #20]
   1fb5c:	add	w8, w8, #0x1
   1fb60:	str	w8, [sp, #20]
   1fb64:	ldr	x8, [sp, #8]
   1fb68:	lsr	x8, x8, #1
   1fb6c:	str	x8, [sp, #8]
   1fb70:	b	1fb4c <gl_rbtree_list_check_invariants@@Base+0x32c>
   1fb74:	ldr	w0, [sp, #20]
   1fb78:	ldr	x1, [sp, #40]
   1fb7c:	ldr	x2, [sp, #32]
   1fb80:	bl	21a38 <gl_rbtree_list_check_invariants@@Base+0x2218>
   1fb84:	ldr	x8, [sp, #24]
   1fb88:	str	x0, [x8, #40]
   1fb8c:	ldr	x8, [sp, #24]
   1fb90:	ldr	x8, [x8, #40]
   1fb94:	cbnz	x8, 1fb9c <gl_rbtree_list_check_invariants@@Base+0x37c>
   1fb98:	b	1fbc8 <gl_rbtree_list_check_invariants@@Base+0x3a8>
   1fb9c:	ldr	x8, [sp, #24]
   1fba0:	ldr	x8, [x8, #40]
   1fba4:	mov	x9, xzr
   1fba8:	str	x9, [x8, #16]
   1fbac:	b	1fbbc <gl_rbtree_list_check_invariants@@Base+0x39c>
   1fbb0:	ldr	x8, [sp, #24]
   1fbb4:	mov	x9, xzr
   1fbb8:	str	x9, [x8, #40]
   1fbbc:	ldr	x8, [sp, #24]
   1fbc0:	stur	x8, [x29, #-8]
   1fbc4:	b	1fbd8 <gl_rbtree_list_check_invariants@@Base+0x3b8>
   1fbc8:	ldr	x0, [sp, #24]
   1fbcc:	bl	a930 <free@plt>
   1fbd0:	mov	x8, xzr
   1fbd4:	stur	x8, [x29, #-8]
   1fbd8:	ldur	x0, [x29, #-8]
   1fbdc:	ldp	x29, x30, [sp, #96]
   1fbe0:	add	sp, sp, #0x70
   1fbe4:	ret
   1fbe8:	sub	sp, sp, #0x10
   1fbec:	str	x0, [sp, #8]
   1fbf0:	ldr	x8, [sp, #8]
   1fbf4:	ldr	x8, [x8, #40]
   1fbf8:	cbz	x8, 1fc10 <gl_rbtree_list_check_invariants@@Base+0x3f0>
   1fbfc:	ldr	x8, [sp, #8]
   1fc00:	ldr	x8, [x8, #40]
   1fc04:	ldr	x8, [x8, #32]
   1fc08:	str	x8, [sp]
   1fc0c:	b	1fc18 <gl_rbtree_list_check_invariants@@Base+0x3f8>
   1fc10:	mov	x8, xzr
   1fc14:	str	x8, [sp]
   1fc18:	ldr	x8, [sp]
   1fc1c:	mov	x0, x8
   1fc20:	add	sp, sp, #0x10
   1fc24:	ret
   1fc28:	sub	sp, sp, #0x10
   1fc2c:	str	x0, [sp, #8]
   1fc30:	str	x1, [sp]
   1fc34:	ldr	x8, [sp]
   1fc38:	ldr	x0, [x8, #40]
   1fc3c:	add	sp, sp, #0x10
   1fc40:	ret
   1fc44:	sub	sp, sp, #0x20
   1fc48:	mov	w8, wzr
   1fc4c:	str	x0, [sp, #24]
   1fc50:	str	x1, [sp, #16]
   1fc54:	str	x2, [sp, #8]
   1fc58:	ldr	x9, [sp, #8]
   1fc5c:	ldr	x10, [sp, #16]
   1fc60:	str	x9, [x10, #40]
   1fc64:	mov	w0, w8
   1fc68:	add	sp, sp, #0x20
   1fc6c:	ret
   1fc70:	sub	sp, sp, #0x20
   1fc74:	str	x0, [sp, #24]
   1fc78:	str	x1, [sp, #16]
   1fc7c:	ldr	x8, [sp, #16]
   1fc80:	ldr	x8, [x8, #8]
   1fc84:	cbz	x8, 1fcb4 <gl_rbtree_list_check_invariants@@Base+0x494>
   1fc88:	ldr	x8, [sp, #16]
   1fc8c:	ldr	x8, [x8, #8]
   1fc90:	str	x8, [sp, #16]
   1fc94:	ldr	x8, [sp, #16]
   1fc98:	ldr	x8, [x8]
   1fc9c:	cbz	x8, 1fcb0 <gl_rbtree_list_check_invariants@@Base+0x490>
   1fca0:	ldr	x8, [sp, #16]
   1fca4:	ldr	x8, [x8]
   1fca8:	str	x8, [sp, #16]
   1fcac:	b	1fc94 <gl_rbtree_list_check_invariants@@Base+0x474>
   1fcb0:	b	1fd0c <gl_rbtree_list_check_invariants@@Base+0x4ec>
   1fcb4:	ldr	x8, [sp, #16]
   1fcb8:	ldr	x8, [x8, #16]
   1fcbc:	mov	w9, #0x0                   	// #0
   1fcc0:	str	w9, [sp, #12]
   1fcc4:	cbz	x8, 1fce4 <gl_rbtree_list_check_invariants@@Base+0x4c4>
   1fcc8:	ldr	x8, [sp, #16]
   1fccc:	ldr	x8, [x8, #16]
   1fcd0:	ldr	x8, [x8, #8]
   1fcd4:	ldr	x9, [sp, #16]
   1fcd8:	cmp	x8, x9
   1fcdc:	cset	w10, eq  // eq = none
   1fce0:	str	w10, [sp, #12]
   1fce4:	ldr	w8, [sp, #12]
   1fce8:	tbnz	w8, #0, 1fcf0 <gl_rbtree_list_check_invariants@@Base+0x4d0>
   1fcec:	b	1fd00 <gl_rbtree_list_check_invariants@@Base+0x4e0>
   1fcf0:	ldr	x8, [sp, #16]
   1fcf4:	ldr	x8, [x8, #16]
   1fcf8:	str	x8, [sp, #16]
   1fcfc:	b	1fcb4 <gl_rbtree_list_check_invariants@@Base+0x494>
   1fd00:	ldr	x8, [sp, #16]
   1fd04:	ldr	x8, [x8, #16]
   1fd08:	str	x8, [sp, #16]
   1fd0c:	ldr	x0, [sp, #16]
   1fd10:	add	sp, sp, #0x20
   1fd14:	ret
   1fd18:	sub	sp, sp, #0x20
   1fd1c:	str	x0, [sp, #24]
   1fd20:	str	x1, [sp, #16]
   1fd24:	ldr	x8, [sp, #16]
   1fd28:	ldr	x8, [x8]
   1fd2c:	cbz	x8, 1fd5c <gl_rbtree_list_check_invariants@@Base+0x53c>
   1fd30:	ldr	x8, [sp, #16]
   1fd34:	ldr	x8, [x8]
   1fd38:	str	x8, [sp, #16]
   1fd3c:	ldr	x8, [sp, #16]
   1fd40:	ldr	x8, [x8, #8]
   1fd44:	cbz	x8, 1fd58 <gl_rbtree_list_check_invariants@@Base+0x538>
   1fd48:	ldr	x8, [sp, #16]
   1fd4c:	ldr	x8, [x8, #8]
   1fd50:	str	x8, [sp, #16]
   1fd54:	b	1fd3c <gl_rbtree_list_check_invariants@@Base+0x51c>
   1fd58:	b	1fdb4 <gl_rbtree_list_check_invariants@@Base+0x594>
   1fd5c:	ldr	x8, [sp, #16]
   1fd60:	ldr	x8, [x8, #16]
   1fd64:	mov	w9, #0x0                   	// #0
   1fd68:	str	w9, [sp, #12]
   1fd6c:	cbz	x8, 1fd8c <gl_rbtree_list_check_invariants@@Base+0x56c>
   1fd70:	ldr	x8, [sp, #16]
   1fd74:	ldr	x8, [x8, #16]
   1fd78:	ldr	x8, [x8]
   1fd7c:	ldr	x9, [sp, #16]
   1fd80:	cmp	x8, x9
   1fd84:	cset	w10, eq  // eq = none
   1fd88:	str	w10, [sp, #12]
   1fd8c:	ldr	w8, [sp, #12]
   1fd90:	tbnz	w8, #0, 1fd98 <gl_rbtree_list_check_invariants@@Base+0x578>
   1fd94:	b	1fda8 <gl_rbtree_list_check_invariants@@Base+0x588>
   1fd98:	ldr	x8, [sp, #16]
   1fd9c:	ldr	x8, [x8, #16]
   1fda0:	str	x8, [sp, #16]
   1fda4:	b	1fd5c <gl_rbtree_list_check_invariants@@Base+0x53c>
   1fda8:	ldr	x8, [sp, #16]
   1fdac:	ldr	x8, [x8, #16]
   1fdb0:	str	x8, [sp, #16]
   1fdb4:	ldr	x0, [sp, #16]
   1fdb8:	add	sp, sp, #0x20
   1fdbc:	ret
   1fdc0:	sub	sp, sp, #0x30
   1fdc4:	stp	x29, x30, [sp, #32]
   1fdc8:	add	x29, sp, #0x20
   1fdcc:	stur	x0, [x29, #-8]
   1fdd0:	str	x1, [sp, #16]
   1fdd4:	ldur	x8, [x29, #-8]
   1fdd8:	ldr	x8, [x8, #40]
   1fddc:	str	x8, [sp, #8]
   1fde0:	ldr	x8, [sp, #8]
   1fde4:	cbz	x8, 1fdfc <gl_rbtree_list_check_invariants@@Base+0x5dc>
   1fde8:	ldr	x8, [sp, #16]
   1fdec:	ldr	x9, [sp, #8]
   1fdf0:	ldr	x9, [x9, #32]
   1fdf4:	cmp	x8, x9
   1fdf8:	b.cc	1fe00 <gl_rbtree_list_check_invariants@@Base+0x5e0>  // b.lo, b.ul, b.last
   1fdfc:	bl	a9e0 <abort@plt>
   1fe00:	ldr	x0, [sp, #8]
   1fe04:	ldr	x1, [sp, #16]
   1fe08:	bl	21c40 <gl_rbtree_list_check_invariants@@Base+0x2420>
   1fe0c:	str	x0, [sp, #8]
   1fe10:	ldr	x8, [sp, #8]
   1fe14:	ldr	x0, [x8, #40]
   1fe18:	ldp	x29, x30, [sp, #32]
   1fe1c:	add	sp, sp, #0x30
   1fe20:	ret
   1fe24:	sub	sp, sp, #0x30
   1fe28:	stp	x29, x30, [sp, #32]
   1fe2c:	add	x29, sp, #0x20
   1fe30:	stur	x0, [x29, #-8]
   1fe34:	str	x1, [sp, #16]
   1fe38:	str	x2, [sp, #8]
   1fe3c:	ldur	x8, [x29, #-8]
   1fe40:	ldr	x8, [x8, #40]
   1fe44:	str	x8, [sp]
   1fe48:	ldr	x8, [sp]
   1fe4c:	cbz	x8, 1fe64 <gl_rbtree_list_check_invariants@@Base+0x644>
   1fe50:	ldr	x8, [sp, #16]
   1fe54:	ldr	x9, [sp]
   1fe58:	ldr	x9, [x9, #32]
   1fe5c:	cmp	x8, x9
   1fe60:	b.cc	1fe68 <gl_rbtree_list_check_invariants@@Base+0x648>  // b.lo, b.ul, b.last
   1fe64:	bl	a9e0 <abort@plt>
   1fe68:	ldr	x0, [sp]
   1fe6c:	ldr	x1, [sp, #16]
   1fe70:	bl	21c40 <gl_rbtree_list_check_invariants@@Base+0x2420>
   1fe74:	str	x0, [sp]
   1fe78:	ldr	x8, [sp, #8]
   1fe7c:	ldr	x9, [sp]
   1fe80:	str	x8, [x9, #40]
   1fe84:	ldr	x0, [sp]
   1fe88:	ldp	x29, x30, [sp, #32]
   1fe8c:	add	sp, sp, #0x30
   1fe90:	ret
   1fe94:	stp	x29, x30, [sp, #-32]!
   1fe98:	str	x28, [sp, #16]
   1fe9c:	mov	x29, sp
   1fea0:	sub	sp, sp, #0x7b0
   1fea4:	stur	x0, [x29, #-16]
   1fea8:	stur	x1, [x29, #-24]
   1feac:	stur	x2, [x29, #-32]
   1feb0:	stur	x3, [x29, #-40]
   1feb4:	ldur	x8, [x29, #-24]
   1feb8:	ldur	x9, [x29, #-32]
   1febc:	cmp	x8, x9
   1fec0:	b.hi	1ff04 <gl_rbtree_list_check_invariants@@Base+0x6e4>  // b.pmore
   1fec4:	ldur	x8, [x29, #-32]
   1fec8:	ldur	x9, [x29, #-16]
   1fecc:	ldr	x9, [x9, #40]
   1fed0:	str	x8, [sp, #24]
   1fed4:	cbz	x9, 1feec <gl_rbtree_list_check_invariants@@Base+0x6cc>
   1fed8:	ldur	x8, [x29, #-16]
   1fedc:	ldr	x8, [x8, #40]
   1fee0:	ldr	x8, [x8, #32]
   1fee4:	str	x8, [sp, #16]
   1fee8:	b	1fef4 <gl_rbtree_list_check_invariants@@Base+0x6d4>
   1feec:	mov	x8, xzr
   1fef0:	str	x8, [sp, #16]
   1fef4:	ldr	x8, [sp, #16]
   1fef8:	ldr	x9, [sp, #24]
   1fefc:	cmp	x9, x8
   1ff00:	b.ls	1ff08 <gl_rbtree_list_check_invariants@@Base+0x6e8>  // b.plast
   1ff04:	bl	a9e0 <abort@plt>
   1ff08:	ldur	x8, [x29, #-16]
   1ff0c:	ldr	x8, [x8, #8]
   1ff10:	stur	x8, [x29, #-48]
   1ff14:	ldur	x8, [x29, #-16]
   1ff18:	ldr	x8, [x8, #40]
   1ff1c:	stur	x8, [x29, #-56]
   1ff20:	add	x8, sp, #0x38
   1ff24:	str	x8, [sp, #48]
   1ff28:	str	xzr, [sp, #40]
   1ff2c:	ldur	x8, [x29, #-24]
   1ff30:	cbnz	x8, 20050 <gl_rbtree_list_check_invariants@@Base+0x830>
   1ff34:	ldur	x8, [x29, #-56]
   1ff38:	cbnz	x8, 1ff40 <gl_rbtree_list_check_invariants@@Base+0x720>
   1ff3c:	b	1ff70 <gl_rbtree_list_check_invariants@@Base+0x750>
   1ff40:	ldur	x8, [x29, #-56]
   1ff44:	ldr	x9, [sp, #48]
   1ff48:	str	x8, [x9]
   1ff4c:	ldr	x8, [sp, #48]
   1ff50:	str	xzr, [x8, #8]
   1ff54:	ldur	x8, [x29, #-56]
   1ff58:	ldr	x8, [x8]
   1ff5c:	stur	x8, [x29, #-56]
   1ff60:	ldr	x8, [sp, #48]
   1ff64:	add	x8, x8, #0x10
   1ff68:	str	x8, [sp, #48]
   1ff6c:	b	1ff34 <gl_rbtree_list_check_invariants@@Base+0x714>
   1ff70:	ldr	x8, [sp, #48]
   1ff74:	add	x9, sp, #0x38
   1ff78:	cmp	x8, x9
   1ff7c:	b.ne	1ff8c <gl_rbtree_list_check_invariants@@Base+0x76c>  // b.any
   1ff80:	mov	x8, xzr
   1ff84:	stur	x8, [x29, #-8]
   1ff88:	b	201f4 <gl_rbtree_list_check_invariants@@Base+0x9d4>
   1ff8c:	ldr	x8, [sp, #48]
   1ff90:	mov	x9, #0xfffffffffffffff0    	// #-16
   1ff94:	add	x8, x8, x9
   1ff98:	str	x8, [sp, #48]
   1ff9c:	ldr	x8, [sp, #48]
   1ffa0:	ldr	x8, [x8, #8]
   1ffa4:	cbnz	x8, 1ffac <gl_rbtree_list_check_invariants@@Base+0x78c>
   1ffa8:	b	1ffb0 <gl_rbtree_list_check_invariants@@Base+0x790>
   1ffac:	b	1ff70 <gl_rbtree_list_check_invariants@@Base+0x750>
   1ffb0:	ldr	x8, [sp, #48]
   1ffb4:	ldr	x8, [x8]
   1ffb8:	stur	x8, [x29, #-56]
   1ffbc:	ldur	x8, [x29, #-48]
   1ffc0:	cbz	x8, 1ffe0 <gl_rbtree_list_check_invariants@@Base+0x7c0>
   1ffc4:	ldur	x8, [x29, #-48]
   1ffc8:	ldur	x0, [x29, #-40]
   1ffcc:	ldur	x9, [x29, #-56]
   1ffd0:	ldr	x1, [x9, #40]
   1ffd4:	blr	x8
   1ffd8:	tbnz	w0, #0, 1fff4 <gl_rbtree_list_check_invariants@@Base+0x7d4>
   1ffdc:	b	20000 <gl_rbtree_list_check_invariants@@Base+0x7e0>
   1ffe0:	ldur	x8, [x29, #-40]
   1ffe4:	ldur	x9, [x29, #-56]
   1ffe8:	ldr	x9, [x9, #40]
   1ffec:	cmp	x8, x9
   1fff0:	b.ne	20000 <gl_rbtree_list_check_invariants@@Base+0x7e0>  // b.any
   1fff4:	ldur	x8, [x29, #-56]
   1fff8:	stur	x8, [x29, #-8]
   1fffc:	b	201f4 <gl_rbtree_list_check_invariants@@Base+0x9d4>
   20000:	ldr	x8, [sp, #40]
   20004:	add	x8, x8, #0x1
   20008:	str	x8, [sp, #40]
   2000c:	ldr	x8, [sp, #40]
   20010:	ldur	x9, [x29, #-32]
   20014:	cmp	x8, x9
   20018:	b.cc	20028 <gl_rbtree_list_check_invariants@@Base+0x808>  // b.lo, b.ul, b.last
   2001c:	mov	x8, xzr
   20020:	stur	x8, [x29, #-8]
   20024:	b	201f4 <gl_rbtree_list_check_invariants@@Base+0x9d4>
   20028:	ldr	x8, [sp, #48]
   2002c:	mov	x9, #0x1                   	// #1
   20030:	str	x9, [x8, #8]
   20034:	ldur	x8, [x29, #-56]
   20038:	ldr	x8, [x8, #8]
   2003c:	stur	x8, [x29, #-56]
   20040:	ldr	x8, [sp, #48]
   20044:	add	x8, x8, #0x10
   20048:	str	x8, [sp, #48]
   2004c:	b	1ff34 <gl_rbtree_list_check_invariants@@Base+0x714>
   20050:	ldur	x8, [x29, #-56]
   20054:	cbnz	x8, 2005c <gl_rbtree_list_check_invariants@@Base+0x83c>
   20058:	b	200a4 <gl_rbtree_list_check_invariants@@Base+0x884>
   2005c:	ldur	x8, [x29, #-56]
   20060:	ldr	x8, [x8, #32]
   20064:	ldur	x9, [x29, #-24]
   20068:	cmp	x8, x9
   2006c:	b.hi	20074 <gl_rbtree_list_check_invariants@@Base+0x854>  // b.pmore
   20070:	b	200a4 <gl_rbtree_list_check_invariants@@Base+0x884>
   20074:	ldur	x8, [x29, #-56]
   20078:	ldr	x9, [sp, #48]
   2007c:	str	x8, [x9]
   20080:	ldr	x8, [sp, #48]
   20084:	str	xzr, [x8, #8]
   20088:	ldur	x8, [x29, #-56]
   2008c:	ldr	x8, [x8]
   20090:	stur	x8, [x29, #-56]
   20094:	ldr	x8, [sp, #48]
   20098:	add	x8, x8, #0x10
   2009c:	str	x8, [sp, #48]
   200a0:	b	20050 <gl_rbtree_list_check_invariants@@Base+0x830>
   200a4:	ldr	x8, [sp, #48]
   200a8:	add	x9, sp, #0x38
   200ac:	cmp	x8, x9
   200b0:	b.ne	200c0 <gl_rbtree_list_check_invariants@@Base+0x8a0>  // b.any
   200b4:	mov	x8, xzr
   200b8:	stur	x8, [x29, #-8]
   200bc:	b	201f4 <gl_rbtree_list_check_invariants@@Base+0x9d4>
   200c0:	ldr	x8, [sp, #48]
   200c4:	mov	x9, #0xfffffffffffffff0    	// #-16
   200c8:	add	x8, x8, x9
   200cc:	str	x8, [sp, #48]
   200d0:	ldr	x8, [sp, #48]
   200d4:	ldr	x8, [x8, #8]
   200d8:	cbnz	x8, 200e0 <gl_rbtree_list_check_invariants@@Base+0x8c0>
   200dc:	b	200f8 <gl_rbtree_list_check_invariants@@Base+0x8d8>
   200e0:	ldr	x8, [sp, #48]
   200e4:	ldr	x8, [x8, #8]
   200e8:	ldur	x9, [x29, #-24]
   200ec:	add	x8, x9, x8
   200f0:	stur	x8, [x29, #-24]
   200f4:	b	200a4 <gl_rbtree_list_check_invariants@@Base+0x884>
   200f8:	ldr	x8, [sp, #48]
   200fc:	ldr	x8, [x8]
   20100:	stur	x8, [x29, #-56]
   20104:	ldur	x8, [x29, #-56]
   20108:	ldr	x8, [x8]
   2010c:	cbz	x8, 20124 <gl_rbtree_list_check_invariants@@Base+0x904>
   20110:	ldur	x8, [x29, #-56]
   20114:	ldr	x8, [x8]
   20118:	ldr	x8, [x8, #32]
   2011c:	str	x8, [sp, #8]
   20120:	b	2012c <gl_rbtree_list_check_invariants@@Base+0x90c>
   20124:	mov	x8, xzr
   20128:	str	x8, [sp, #8]
   2012c:	ldr	x8, [sp, #8]
   20130:	add	x8, x8, #0x1
   20134:	str	x8, [sp, #32]
   20138:	ldur	x8, [x29, #-24]
   2013c:	ldr	x9, [sp, #32]
   20140:	cmp	x8, x9
   20144:	b.cs	20194 <gl_rbtree_list_check_invariants@@Base+0x974>  // b.hs, b.nlast
   20148:	ldur	x8, [x29, #-48]
   2014c:	cbz	x8, 2016c <gl_rbtree_list_check_invariants@@Base+0x94c>
   20150:	ldur	x8, [x29, #-48]
   20154:	ldur	x0, [x29, #-40]
   20158:	ldur	x9, [x29, #-56]
   2015c:	ldr	x1, [x9, #40]
   20160:	blr	x8
   20164:	tbnz	w0, #0, 20180 <gl_rbtree_list_check_invariants@@Base+0x960>
   20168:	b	2018c <gl_rbtree_list_check_invariants@@Base+0x96c>
   2016c:	ldur	x8, [x29, #-40]
   20170:	ldur	x9, [x29, #-56]
   20174:	ldr	x9, [x9, #40]
   20178:	cmp	x8, x9
   2017c:	b.ne	2018c <gl_rbtree_list_check_invariants@@Base+0x96c>  // b.any
   20180:	ldur	x8, [x29, #-56]
   20184:	stur	x8, [x29, #-8]
   20188:	b	201f4 <gl_rbtree_list_check_invariants@@Base+0x9d4>
   2018c:	ldr	x8, [sp, #32]
   20190:	stur	x8, [x29, #-24]
   20194:	ldr	x8, [sp, #40]
   20198:	add	x8, x8, #0x1
   2019c:	str	x8, [sp, #40]
   201a0:	ldr	x8, [sp, #40]
   201a4:	ldur	x9, [x29, #-32]
   201a8:	cmp	x8, x9
   201ac:	b.cc	201bc <gl_rbtree_list_check_invariants@@Base+0x99c>  // b.lo, b.ul, b.last
   201b0:	mov	x8, xzr
   201b4:	stur	x8, [x29, #-8]
   201b8:	b	201f4 <gl_rbtree_list_check_invariants@@Base+0x9d4>
   201bc:	ldr	x8, [sp, #32]
   201c0:	ldur	x9, [x29, #-24]
   201c4:	subs	x8, x9, x8
   201c8:	stur	x8, [x29, #-24]
   201cc:	ldr	x8, [sp, #32]
   201d0:	ldr	x9, [sp, #48]
   201d4:	str	x8, [x9, #8]
   201d8:	ldur	x8, [x29, #-56]
   201dc:	ldr	x8, [x8, #8]
   201e0:	stur	x8, [x29, #-56]
   201e4:	ldr	x8, [sp, #48]
   201e8:	add	x8, x8, #0x10
   201ec:	str	x8, [sp, #48]
   201f0:	b	20050 <gl_rbtree_list_check_invariants@@Base+0x830>
   201f4:	ldur	x0, [x29, #-8]
   201f8:	add	sp, sp, #0x7b0
   201fc:	ldr	x28, [sp, #16]
   20200:	ldp	x29, x30, [sp], #32
   20204:	ret
   20208:	stp	x29, x30, [sp, #-32]!
   2020c:	str	x28, [sp, #16]
   20210:	mov	x29, sp
   20214:	sub	sp, sp, #0x7b0
   20218:	stur	x0, [x29, #-16]
   2021c:	stur	x1, [x29, #-24]
   20220:	stur	x2, [x29, #-32]
   20224:	stur	x3, [x29, #-40]
   20228:	ldur	x8, [x29, #-24]
   2022c:	ldur	x9, [x29, #-32]
   20230:	cmp	x8, x9
   20234:	b.hi	20278 <gl_rbtree_list_check_invariants@@Base+0xa58>  // b.pmore
   20238:	ldur	x8, [x29, #-32]
   2023c:	ldur	x9, [x29, #-16]
   20240:	ldr	x9, [x9, #40]
   20244:	str	x8, [sp, #24]
   20248:	cbz	x9, 20260 <gl_rbtree_list_check_invariants@@Base+0xa40>
   2024c:	ldur	x8, [x29, #-16]
   20250:	ldr	x8, [x8, #40]
   20254:	ldr	x8, [x8, #32]
   20258:	str	x8, [sp, #16]
   2025c:	b	20268 <gl_rbtree_list_check_invariants@@Base+0xa48>
   20260:	mov	x8, xzr
   20264:	str	x8, [sp, #16]
   20268:	ldr	x8, [sp, #16]
   2026c:	ldr	x9, [sp, #24]
   20270:	cmp	x9, x8
   20274:	b.ls	2027c <gl_rbtree_list_check_invariants@@Base+0xa5c>  // b.plast
   20278:	bl	a9e0 <abort@plt>
   2027c:	ldur	x8, [x29, #-16]
   20280:	ldr	x8, [x8, #8]
   20284:	stur	x8, [x29, #-48]
   20288:	ldur	x8, [x29, #-16]
   2028c:	ldr	x8, [x8, #40]
   20290:	stur	x8, [x29, #-56]
   20294:	add	x8, sp, #0x38
   20298:	str	x8, [sp, #48]
   2029c:	str	xzr, [sp, #40]
   202a0:	ldur	x8, [x29, #-24]
   202a4:	cbnz	x8, 203c4 <gl_rbtree_list_check_invariants@@Base+0xba4>
   202a8:	ldur	x8, [x29, #-56]
   202ac:	cbnz	x8, 202b4 <gl_rbtree_list_check_invariants@@Base+0xa94>
   202b0:	b	202e4 <gl_rbtree_list_check_invariants@@Base+0xac4>
   202b4:	ldur	x8, [x29, #-56]
   202b8:	ldr	x9, [sp, #48]
   202bc:	str	x8, [x9]
   202c0:	ldr	x8, [sp, #48]
   202c4:	str	xzr, [x8, #8]
   202c8:	ldur	x8, [x29, #-56]
   202cc:	ldr	x8, [x8]
   202d0:	stur	x8, [x29, #-56]
   202d4:	ldr	x8, [sp, #48]
   202d8:	add	x8, x8, #0x10
   202dc:	str	x8, [sp, #48]
   202e0:	b	202a8 <gl_rbtree_list_check_invariants@@Base+0xa88>
   202e4:	ldr	x8, [sp, #48]
   202e8:	add	x9, sp, #0x38
   202ec:	cmp	x8, x9
   202f0:	b.ne	20300 <gl_rbtree_list_check_invariants@@Base+0xae0>  // b.any
   202f4:	mov	x8, #0xffffffffffffffff    	// #-1
   202f8:	stur	x8, [x29, #-8]
   202fc:	b	20568 <gl_rbtree_list_check_invariants@@Base+0xd48>
   20300:	ldr	x8, [sp, #48]
   20304:	mov	x9, #0xfffffffffffffff0    	// #-16
   20308:	add	x8, x8, x9
   2030c:	str	x8, [sp, #48]
   20310:	ldr	x8, [sp, #48]
   20314:	ldr	x8, [x8, #8]
   20318:	cbnz	x8, 20320 <gl_rbtree_list_check_invariants@@Base+0xb00>
   2031c:	b	20324 <gl_rbtree_list_check_invariants@@Base+0xb04>
   20320:	b	202e4 <gl_rbtree_list_check_invariants@@Base+0xac4>
   20324:	ldr	x8, [sp, #48]
   20328:	ldr	x8, [x8]
   2032c:	stur	x8, [x29, #-56]
   20330:	ldur	x8, [x29, #-48]
   20334:	cbz	x8, 20354 <gl_rbtree_list_check_invariants@@Base+0xb34>
   20338:	ldur	x8, [x29, #-48]
   2033c:	ldur	x0, [x29, #-40]
   20340:	ldur	x9, [x29, #-56]
   20344:	ldr	x1, [x9, #40]
   20348:	blr	x8
   2034c:	tbnz	w0, #0, 20368 <gl_rbtree_list_check_invariants@@Base+0xb48>
   20350:	b	20374 <gl_rbtree_list_check_invariants@@Base+0xb54>
   20354:	ldur	x8, [x29, #-40]
   20358:	ldur	x9, [x29, #-56]
   2035c:	ldr	x9, [x9, #40]
   20360:	cmp	x8, x9
   20364:	b.ne	20374 <gl_rbtree_list_check_invariants@@Base+0xb54>  // b.any
   20368:	ldr	x8, [sp, #40]
   2036c:	stur	x8, [x29, #-8]
   20370:	b	20568 <gl_rbtree_list_check_invariants@@Base+0xd48>
   20374:	ldr	x8, [sp, #40]
   20378:	add	x8, x8, #0x1
   2037c:	str	x8, [sp, #40]
   20380:	ldr	x8, [sp, #40]
   20384:	ldur	x9, [x29, #-32]
   20388:	cmp	x8, x9
   2038c:	b.cc	2039c <gl_rbtree_list_check_invariants@@Base+0xb7c>  // b.lo, b.ul, b.last
   20390:	mov	x8, #0xffffffffffffffff    	// #-1
   20394:	stur	x8, [x29, #-8]
   20398:	b	20568 <gl_rbtree_list_check_invariants@@Base+0xd48>
   2039c:	ldr	x8, [sp, #48]
   203a0:	mov	x9, #0x1                   	// #1
   203a4:	str	x9, [x8, #8]
   203a8:	ldur	x8, [x29, #-56]
   203ac:	ldr	x8, [x8, #8]
   203b0:	stur	x8, [x29, #-56]
   203b4:	ldr	x8, [sp, #48]
   203b8:	add	x8, x8, #0x10
   203bc:	str	x8, [sp, #48]
   203c0:	b	202a8 <gl_rbtree_list_check_invariants@@Base+0xa88>
   203c4:	ldur	x8, [x29, #-56]
   203c8:	cbnz	x8, 203d0 <gl_rbtree_list_check_invariants@@Base+0xbb0>
   203cc:	b	20418 <gl_rbtree_list_check_invariants@@Base+0xbf8>
   203d0:	ldur	x8, [x29, #-56]
   203d4:	ldr	x8, [x8, #32]
   203d8:	ldur	x9, [x29, #-24]
   203dc:	cmp	x8, x9
   203e0:	b.hi	203e8 <gl_rbtree_list_check_invariants@@Base+0xbc8>  // b.pmore
   203e4:	b	20418 <gl_rbtree_list_check_invariants@@Base+0xbf8>
   203e8:	ldur	x8, [x29, #-56]
   203ec:	ldr	x9, [sp, #48]
   203f0:	str	x8, [x9]
   203f4:	ldr	x8, [sp, #48]
   203f8:	str	xzr, [x8, #8]
   203fc:	ldur	x8, [x29, #-56]
   20400:	ldr	x8, [x8]
   20404:	stur	x8, [x29, #-56]
   20408:	ldr	x8, [sp, #48]
   2040c:	add	x8, x8, #0x10
   20410:	str	x8, [sp, #48]
   20414:	b	203c4 <gl_rbtree_list_check_invariants@@Base+0xba4>
   20418:	ldr	x8, [sp, #48]
   2041c:	add	x9, sp, #0x38
   20420:	cmp	x8, x9
   20424:	b.ne	20434 <gl_rbtree_list_check_invariants@@Base+0xc14>  // b.any
   20428:	mov	x8, #0xffffffffffffffff    	// #-1
   2042c:	stur	x8, [x29, #-8]
   20430:	b	20568 <gl_rbtree_list_check_invariants@@Base+0xd48>
   20434:	ldr	x8, [sp, #48]
   20438:	mov	x9, #0xfffffffffffffff0    	// #-16
   2043c:	add	x8, x8, x9
   20440:	str	x8, [sp, #48]
   20444:	ldr	x8, [sp, #48]
   20448:	ldr	x8, [x8, #8]
   2044c:	cbnz	x8, 20454 <gl_rbtree_list_check_invariants@@Base+0xc34>
   20450:	b	2046c <gl_rbtree_list_check_invariants@@Base+0xc4c>
   20454:	ldr	x8, [sp, #48]
   20458:	ldr	x8, [x8, #8]
   2045c:	ldur	x9, [x29, #-24]
   20460:	add	x8, x9, x8
   20464:	stur	x8, [x29, #-24]
   20468:	b	20418 <gl_rbtree_list_check_invariants@@Base+0xbf8>
   2046c:	ldr	x8, [sp, #48]
   20470:	ldr	x8, [x8]
   20474:	stur	x8, [x29, #-56]
   20478:	ldur	x8, [x29, #-56]
   2047c:	ldr	x8, [x8]
   20480:	cbz	x8, 20498 <gl_rbtree_list_check_invariants@@Base+0xc78>
   20484:	ldur	x8, [x29, #-56]
   20488:	ldr	x8, [x8]
   2048c:	ldr	x8, [x8, #32]
   20490:	str	x8, [sp, #8]
   20494:	b	204a0 <gl_rbtree_list_check_invariants@@Base+0xc80>
   20498:	mov	x8, xzr
   2049c:	str	x8, [sp, #8]
   204a0:	ldr	x8, [sp, #8]
   204a4:	add	x8, x8, #0x1
   204a8:	str	x8, [sp, #32]
   204ac:	ldur	x8, [x29, #-24]
   204b0:	ldr	x9, [sp, #32]
   204b4:	cmp	x8, x9
   204b8:	b.cs	20508 <gl_rbtree_list_check_invariants@@Base+0xce8>  // b.hs, b.nlast
   204bc:	ldur	x8, [x29, #-48]
   204c0:	cbz	x8, 204e0 <gl_rbtree_list_check_invariants@@Base+0xcc0>
   204c4:	ldur	x8, [x29, #-48]
   204c8:	ldur	x0, [x29, #-40]
   204cc:	ldur	x9, [x29, #-56]
   204d0:	ldr	x1, [x9, #40]
   204d4:	blr	x8
   204d8:	tbnz	w0, #0, 204f4 <gl_rbtree_list_check_invariants@@Base+0xcd4>
   204dc:	b	20500 <gl_rbtree_list_check_invariants@@Base+0xce0>
   204e0:	ldur	x8, [x29, #-40]
   204e4:	ldur	x9, [x29, #-56]
   204e8:	ldr	x9, [x9, #40]
   204ec:	cmp	x8, x9
   204f0:	b.ne	20500 <gl_rbtree_list_check_invariants@@Base+0xce0>  // b.any
   204f4:	ldr	x8, [sp, #40]
   204f8:	stur	x8, [x29, #-8]
   204fc:	b	20568 <gl_rbtree_list_check_invariants@@Base+0xd48>
   20500:	ldr	x8, [sp, #32]
   20504:	stur	x8, [x29, #-24]
   20508:	ldr	x8, [sp, #40]
   2050c:	add	x8, x8, #0x1
   20510:	str	x8, [sp, #40]
   20514:	ldr	x8, [sp, #40]
   20518:	ldur	x9, [x29, #-32]
   2051c:	cmp	x8, x9
   20520:	b.cc	20530 <gl_rbtree_list_check_invariants@@Base+0xd10>  // b.lo, b.ul, b.last
   20524:	mov	x8, #0xffffffffffffffff    	// #-1
   20528:	stur	x8, [x29, #-8]
   2052c:	b	20568 <gl_rbtree_list_check_invariants@@Base+0xd48>
   20530:	ldr	x8, [sp, #32]
   20534:	ldur	x9, [x29, #-24]
   20538:	subs	x8, x9, x8
   2053c:	stur	x8, [x29, #-24]
   20540:	ldr	x8, [sp, #32]
   20544:	ldr	x9, [sp, #48]
   20548:	str	x8, [x9, #8]
   2054c:	ldur	x8, [x29, #-56]
   20550:	ldr	x8, [x8, #8]
   20554:	stur	x8, [x29, #-56]
   20558:	ldr	x8, [sp, #48]
   2055c:	add	x8, x8, #0x10
   20560:	str	x8, [sp, #48]
   20564:	b	203c4 <gl_rbtree_list_check_invariants@@Base+0xba4>
   20568:	ldur	x0, [x29, #-8]
   2056c:	add	sp, sp, #0x7b0
   20570:	ldr	x28, [sp, #16]
   20574:	ldp	x29, x30, [sp], #32
   20578:	ret
   2057c:	sub	sp, sp, #0x40
   20580:	stp	x29, x30, [sp, #48]
   20584:	add	x29, sp, #0x30
   20588:	mov	x8, #0x30                  	// #48
   2058c:	stur	x0, [x29, #-16]
   20590:	str	x1, [sp, #24]
   20594:	mov	x0, x8
   20598:	bl	af10 <malloc@plt>
   2059c:	str	x0, [sp, #16]
   205a0:	ldr	x8, [sp, #16]
   205a4:	cbnz	x8, 205b4 <gl_rbtree_list_check_invariants@@Base+0xd94>
   205a8:	mov	x8, xzr
   205ac:	stur	x8, [x29, #-8]
   205b0:	b	20698 <gl_rbtree_list_check_invariants@@Base+0xe78>
   205b4:	ldr	x8, [sp, #16]
   205b8:	mov	x9, xzr
   205bc:	str	x9, [x8]
   205c0:	ldr	x8, [sp, #16]
   205c4:	str	x9, [x8, #8]
   205c8:	ldr	x8, [sp, #16]
   205cc:	mov	x9, #0x1                   	// #1
   205d0:	str	x9, [x8, #32]
   205d4:	ldr	x8, [sp, #24]
   205d8:	ldr	x9, [sp, #16]
   205dc:	str	x8, [x9, #40]
   205e0:	ldur	x8, [x29, #-16]
   205e4:	ldr	x8, [x8, #40]
   205e8:	cbnz	x8, 20610 <gl_rbtree_list_check_invariants@@Base+0xdf0>
   205ec:	ldr	x8, [sp, #16]
   205f0:	str	wzr, [x8, #24]
   205f4:	ldr	x8, [sp, #16]
   205f8:	ldur	x9, [x29, #-16]
   205fc:	str	x8, [x9, #40]
   20600:	ldr	x8, [sp, #16]
   20604:	mov	x9, xzr
   20608:	str	x9, [x8, #16]
   2060c:	b	20690 <gl_rbtree_list_check_invariants@@Base+0xe70>
   20610:	ldur	x8, [x29, #-16]
   20614:	ldr	x8, [x8, #40]
   20618:	str	x8, [sp, #8]
   2061c:	ldr	x8, [sp, #8]
   20620:	ldr	x8, [x8]
   20624:	cbz	x8, 20638 <gl_rbtree_list_check_invariants@@Base+0xe18>
   20628:	ldr	x8, [sp, #8]
   2062c:	ldr	x8, [x8]
   20630:	str	x8, [sp, #8]
   20634:	b	2061c <gl_rbtree_list_check_invariants@@Base+0xdfc>
   20638:	ldr	x8, [sp, #16]
   2063c:	ldr	x9, [sp, #8]
   20640:	str	x8, [x9]
   20644:	ldr	x8, [sp, #8]
   20648:	ldr	x9, [sp, #16]
   2064c:	str	x8, [x9, #16]
   20650:	ldr	x8, [sp, #8]
   20654:	str	x8, [sp]
   20658:	ldr	x8, [sp]
   2065c:	cbz	x8, 20680 <gl_rbtree_list_check_invariants@@Base+0xe60>
   20660:	ldr	x8, [sp]
   20664:	ldr	x9, [x8, #32]
   20668:	add	x9, x9, #0x1
   2066c:	str	x9, [x8, #32]
   20670:	ldr	x8, [sp]
   20674:	ldr	x8, [x8, #16]
   20678:	str	x8, [sp]
   2067c:	b	20658 <gl_rbtree_list_check_invariants@@Base+0xe38>
   20680:	ldur	x0, [x29, #-16]
   20684:	ldr	x1, [sp, #16]
   20688:	ldr	x2, [sp, #8]
   2068c:	bl	21cd4 <gl_rbtree_list_check_invariants@@Base+0x24b4>
   20690:	ldr	x8, [sp, #16]
   20694:	stur	x8, [x29, #-8]
   20698:	ldur	x0, [x29, #-8]
   2069c:	ldp	x29, x30, [sp, #48]
   206a0:	add	sp, sp, #0x40
   206a4:	ret
   206a8:	sub	sp, sp, #0x40
   206ac:	stp	x29, x30, [sp, #48]
   206b0:	add	x29, sp, #0x30
   206b4:	mov	x8, #0x30                  	// #48
   206b8:	stur	x0, [x29, #-16]
   206bc:	str	x1, [sp, #24]
   206c0:	mov	x0, x8
   206c4:	bl	af10 <malloc@plt>
   206c8:	str	x0, [sp, #16]
   206cc:	ldr	x8, [sp, #16]
   206d0:	cbnz	x8, 206e0 <gl_rbtree_list_check_invariants@@Base+0xec0>
   206d4:	mov	x8, xzr
   206d8:	stur	x8, [x29, #-8]
   206dc:	b	207c4 <gl_rbtree_list_check_invariants@@Base+0xfa4>
   206e0:	ldr	x8, [sp, #16]
   206e4:	mov	x9, xzr
   206e8:	str	x9, [x8]
   206ec:	ldr	x8, [sp, #16]
   206f0:	str	x9, [x8, #8]
   206f4:	ldr	x8, [sp, #16]
   206f8:	mov	x9, #0x1                   	// #1
   206fc:	str	x9, [x8, #32]
   20700:	ldr	x8, [sp, #24]
   20704:	ldr	x9, [sp, #16]
   20708:	str	x8, [x9, #40]
   2070c:	ldur	x8, [x29, #-16]
   20710:	ldr	x8, [x8, #40]
   20714:	cbnz	x8, 2073c <gl_rbtree_list_check_invariants@@Base+0xf1c>
   20718:	ldr	x8, [sp, #16]
   2071c:	str	wzr, [x8, #24]
   20720:	ldr	x8, [sp, #16]
   20724:	ldur	x9, [x29, #-16]
   20728:	str	x8, [x9, #40]
   2072c:	ldr	x8, [sp, #16]
   20730:	mov	x9, xzr
   20734:	str	x9, [x8, #16]
   20738:	b	207bc <gl_rbtree_list_check_invariants@@Base+0xf9c>
   2073c:	ldur	x8, [x29, #-16]
   20740:	ldr	x8, [x8, #40]
   20744:	str	x8, [sp, #8]
   20748:	ldr	x8, [sp, #8]
   2074c:	ldr	x8, [x8, #8]
   20750:	cbz	x8, 20764 <gl_rbtree_list_check_invariants@@Base+0xf44>
   20754:	ldr	x8, [sp, #8]
   20758:	ldr	x8, [x8, #8]
   2075c:	str	x8, [sp, #8]
   20760:	b	20748 <gl_rbtree_list_check_invariants@@Base+0xf28>
   20764:	ldr	x8, [sp, #16]
   20768:	ldr	x9, [sp, #8]
   2076c:	str	x8, [x9, #8]
   20770:	ldr	x8, [sp, #8]
   20774:	ldr	x9, [sp, #16]
   20778:	str	x8, [x9, #16]
   2077c:	ldr	x8, [sp, #8]
   20780:	str	x8, [sp]
   20784:	ldr	x8, [sp]
   20788:	cbz	x8, 207ac <gl_rbtree_list_check_invariants@@Base+0xf8c>
   2078c:	ldr	x8, [sp]
   20790:	ldr	x9, [x8, #32]
   20794:	add	x9, x9, #0x1
   20798:	str	x9, [x8, #32]
   2079c:	ldr	x8, [sp]
   207a0:	ldr	x8, [x8, #16]
   207a4:	str	x8, [sp]
   207a8:	b	20784 <gl_rbtree_list_check_invariants@@Base+0xf64>
   207ac:	ldur	x0, [x29, #-16]
   207b0:	ldr	x1, [sp, #16]
   207b4:	ldr	x2, [sp, #8]
   207b8:	bl	21cd4 <gl_rbtree_list_check_invariants@@Base+0x24b4>
   207bc:	ldr	x8, [sp, #16]
   207c0:	stur	x8, [x29, #-8]
   207c4:	ldur	x0, [x29, #-8]
   207c8:	ldp	x29, x30, [sp, #48]
   207cc:	add	sp, sp, #0x40
   207d0:	ret
   207d4:	sub	sp, sp, #0x40
   207d8:	stp	x29, x30, [sp, #48]
   207dc:	add	x29, sp, #0x30
   207e0:	mov	x8, #0x30                  	// #48
   207e4:	stur	x0, [x29, #-16]
   207e8:	str	x1, [sp, #24]
   207ec:	str	x2, [sp, #16]
   207f0:	mov	x0, x8
   207f4:	bl	af10 <malloc@plt>
   207f8:	str	x0, [sp, #8]
   207fc:	ldr	x8, [sp, #8]
   20800:	cbnz	x8, 20810 <gl_rbtree_list_check_invariants@@Base+0xff0>
   20804:	mov	x8, xzr
   20808:	stur	x8, [x29, #-8]
   2080c:	b	208e0 <gl_rbtree_list_check_invariants@@Base+0x10c0>
   20810:	ldr	x8, [sp, #8]
   20814:	mov	x9, xzr
   20818:	str	x9, [x8]
   2081c:	ldr	x8, [sp, #8]
   20820:	str	x9, [x8, #8]
   20824:	ldr	x8, [sp, #8]
   20828:	mov	x9, #0x1                   	// #1
   2082c:	str	x9, [x8, #32]
   20830:	ldr	x8, [sp, #16]
   20834:	ldr	x9, [sp, #8]
   20838:	str	x8, [x9, #40]
   2083c:	ldr	x8, [sp, #24]
   20840:	ldr	x8, [x8]
   20844:	cbnz	x8, 20858 <gl_rbtree_list_check_invariants@@Base+0x1038>
   20848:	ldr	x8, [sp, #8]
   2084c:	ldr	x9, [sp, #24]
   20850:	str	x8, [x9]
   20854:	b	2088c <gl_rbtree_list_check_invariants@@Base+0x106c>
   20858:	ldr	x8, [sp, #24]
   2085c:	ldr	x8, [x8]
   20860:	str	x8, [sp, #24]
   20864:	ldr	x8, [sp, #24]
   20868:	ldr	x8, [x8, #8]
   2086c:	cbz	x8, 20880 <gl_rbtree_list_check_invariants@@Base+0x1060>
   20870:	ldr	x8, [sp, #24]
   20874:	ldr	x8, [x8, #8]
   20878:	str	x8, [sp, #24]
   2087c:	b	20864 <gl_rbtree_list_check_invariants@@Base+0x1044>
   20880:	ldr	x8, [sp, #8]
   20884:	ldr	x9, [sp, #24]
   20888:	str	x8, [x9, #8]
   2088c:	ldr	x8, [sp, #24]
   20890:	ldr	x9, [sp, #8]
   20894:	str	x8, [x9, #16]
   20898:	ldr	x8, [sp, #24]
   2089c:	str	x8, [sp]
   208a0:	ldr	x8, [sp]
   208a4:	cbz	x8, 208c8 <gl_rbtree_list_check_invariants@@Base+0x10a8>
   208a8:	ldr	x8, [sp]
   208ac:	ldr	x9, [x8, #32]
   208b0:	add	x9, x9, #0x1
   208b4:	str	x9, [x8, #32]
   208b8:	ldr	x8, [sp]
   208bc:	ldr	x8, [x8, #16]
   208c0:	str	x8, [sp]
   208c4:	b	208a0 <gl_rbtree_list_check_invariants@@Base+0x1080>
   208c8:	ldur	x0, [x29, #-16]
   208cc:	ldr	x1, [sp, #8]
   208d0:	ldr	x2, [sp, #24]
   208d4:	bl	21cd4 <gl_rbtree_list_check_invariants@@Base+0x24b4>
   208d8:	ldr	x8, [sp, #8]
   208dc:	stur	x8, [x29, #-8]
   208e0:	ldur	x0, [x29, #-8]
   208e4:	ldp	x29, x30, [sp, #48]
   208e8:	add	sp, sp, #0x40
   208ec:	ret
   208f0:	sub	sp, sp, #0x40
   208f4:	stp	x29, x30, [sp, #48]
   208f8:	add	x29, sp, #0x30
   208fc:	mov	x8, #0x30                  	// #48
   20900:	stur	x0, [x29, #-16]
   20904:	str	x1, [sp, #24]
   20908:	str	x2, [sp, #16]
   2090c:	mov	x0, x8
   20910:	bl	af10 <malloc@plt>
   20914:	str	x0, [sp, #8]
   20918:	ldr	x8, [sp, #8]
   2091c:	cbnz	x8, 2092c <gl_rbtree_list_check_invariants@@Base+0x110c>
   20920:	mov	x8, xzr
   20924:	stur	x8, [x29, #-8]
   20928:	b	209fc <gl_rbtree_list_check_invariants@@Base+0x11dc>
   2092c:	ldr	x8, [sp, #8]
   20930:	mov	x9, xzr
   20934:	str	x9, [x8]
   20938:	ldr	x8, [sp, #8]
   2093c:	str	x9, [x8, #8]
   20940:	ldr	x8, [sp, #8]
   20944:	mov	x9, #0x1                   	// #1
   20948:	str	x9, [x8, #32]
   2094c:	ldr	x8, [sp, #16]
   20950:	ldr	x9, [sp, #8]
   20954:	str	x8, [x9, #40]
   20958:	ldr	x8, [sp, #24]
   2095c:	ldr	x8, [x8, #8]
   20960:	cbnz	x8, 20974 <gl_rbtree_list_check_invariants@@Base+0x1154>
   20964:	ldr	x8, [sp, #8]
   20968:	ldr	x9, [sp, #24]
   2096c:	str	x8, [x9, #8]
   20970:	b	209a8 <gl_rbtree_list_check_invariants@@Base+0x1188>
   20974:	ldr	x8, [sp, #24]
   20978:	ldr	x8, [x8, #8]
   2097c:	str	x8, [sp, #24]
   20980:	ldr	x8, [sp, #24]
   20984:	ldr	x8, [x8]
   20988:	cbz	x8, 2099c <gl_rbtree_list_check_invariants@@Base+0x117c>
   2098c:	ldr	x8, [sp, #24]
   20990:	ldr	x8, [x8]
   20994:	str	x8, [sp, #24]
   20998:	b	20980 <gl_rbtree_list_check_invariants@@Base+0x1160>
   2099c:	ldr	x8, [sp, #8]
   209a0:	ldr	x9, [sp, #24]
   209a4:	str	x8, [x9]
   209a8:	ldr	x8, [sp, #24]
   209ac:	ldr	x9, [sp, #8]
   209b0:	str	x8, [x9, #16]
   209b4:	ldr	x8, [sp, #24]
   209b8:	str	x8, [sp]
   209bc:	ldr	x8, [sp]
   209c0:	cbz	x8, 209e4 <gl_rbtree_list_check_invariants@@Base+0x11c4>
   209c4:	ldr	x8, [sp]
   209c8:	ldr	x9, [x8, #32]
   209cc:	add	x9, x9, #0x1
   209d0:	str	x9, [x8, #32]
   209d4:	ldr	x8, [sp]
   209d8:	ldr	x8, [x8, #16]
   209dc:	str	x8, [sp]
   209e0:	b	209bc <gl_rbtree_list_check_invariants@@Base+0x119c>
   209e4:	ldur	x0, [x29, #-16]
   209e8:	ldr	x1, [sp, #8]
   209ec:	ldr	x2, [sp, #24]
   209f0:	bl	21cd4 <gl_rbtree_list_check_invariants@@Base+0x24b4>
   209f4:	ldr	x8, [sp, #8]
   209f8:	stur	x8, [x29, #-8]
   209fc:	ldur	x0, [x29, #-8]
   20a00:	ldp	x29, x30, [sp, #48]
   20a04:	add	sp, sp, #0x40
   20a08:	ret
   20a0c:	sub	sp, sp, #0x50
   20a10:	stp	x29, x30, [sp, #64]
   20a14:	add	x29, sp, #0x40
   20a18:	stur	x0, [x29, #-16]
   20a1c:	stur	x1, [x29, #-24]
   20a20:	str	x2, [sp, #32]
   20a24:	ldur	x8, [x29, #-16]
   20a28:	ldr	x8, [x8, #40]
   20a2c:	cbz	x8, 20a44 <gl_rbtree_list_check_invariants@@Base+0x1224>
   20a30:	ldur	x8, [x29, #-16]
   20a34:	ldr	x8, [x8, #40]
   20a38:	ldr	x8, [x8, #32]
   20a3c:	str	x8, [sp, #16]
   20a40:	b	20a4c <gl_rbtree_list_check_invariants@@Base+0x122c>
   20a44:	mov	x8, xzr
   20a48:	str	x8, [sp, #16]
   20a4c:	ldr	x8, [sp, #16]
   20a50:	str	x8, [sp, #24]
   20a54:	ldur	x8, [x29, #-24]
   20a58:	ldr	x9, [sp, #24]
   20a5c:	cmp	x8, x9
   20a60:	b.ls	20a68 <gl_rbtree_list_check_invariants@@Base+0x1248>  // b.plast
   20a64:	bl	a9e0 <abort@plt>
   20a68:	ldur	x8, [x29, #-24]
   20a6c:	ldr	x9, [sp, #24]
   20a70:	cmp	x8, x9
   20a74:	b.ne	20a8c <gl_rbtree_list_check_invariants@@Base+0x126c>  // b.any
   20a78:	ldur	x0, [x29, #-16]
   20a7c:	ldr	x1, [sp, #32]
   20a80:	bl	206a8 <gl_rbtree_list_check_invariants@@Base+0xe88>
   20a84:	stur	x0, [x29, #-8]
   20a88:	b	20ac4 <gl_rbtree_list_check_invariants@@Base+0x12a4>
   20a8c:	ldur	x0, [x29, #-16]
   20a90:	ldur	x8, [x29, #-16]
   20a94:	ldr	x8, [x8, #40]
   20a98:	ldur	x1, [x29, #-24]
   20a9c:	str	x0, [sp, #8]
   20aa0:	mov	x0, x8
   20aa4:	bl	21c40 <gl_rbtree_list_check_invariants@@Base+0x2420>
   20aa8:	ldr	x2, [sp, #32]
   20aac:	ldr	x8, [sp, #8]
   20ab0:	str	x0, [sp]
   20ab4:	mov	x0, x8
   20ab8:	ldr	x1, [sp]
   20abc:	bl	207d4 <gl_rbtree_list_check_invariants@@Base+0xfb4>
   20ac0:	stur	x0, [x29, #-8]
   20ac4:	ldur	x0, [x29, #-8]
   20ac8:	ldp	x29, x30, [sp, #64]
   20acc:	add	sp, sp, #0x50
   20ad0:	ret
   20ad4:	sub	sp, sp, #0x20
   20ad8:	stp	x29, x30, [sp, #16]
   20adc:	add	x29, sp, #0x10
   20ae0:	str	x0, [sp, #8]
   20ae4:	str	x1, [sp]
   20ae8:	ldr	x0, [sp, #8]
   20aec:	ldr	x1, [sp]
   20af0:	bl	22180 <gl_rbtree_list_check_invariants@@Base+0x2960>
   20af4:	ldr	x8, [sp, #8]
   20af8:	ldr	x8, [x8, #24]
   20afc:	cbz	x8, 20b14 <gl_rbtree_list_check_invariants@@Base+0x12f4>
   20b00:	ldr	x8, [sp, #8]
   20b04:	ldr	x8, [x8, #24]
   20b08:	ldr	x9, [sp]
   20b0c:	ldr	x0, [x9, #40]
   20b10:	blr	x8
   20b14:	ldr	x0, [sp]
   20b18:	bl	a930 <free@plt>
   20b1c:	mov	w8, #0x1                   	// #1
   20b20:	and	w0, w8, #0x1
   20b24:	ldp	x29, x30, [sp, #16]
   20b28:	add	sp, sp, #0x20
   20b2c:	ret
   20b30:	sub	sp, sp, #0x30
   20b34:	stp	x29, x30, [sp, #32]
   20b38:	add	x29, sp, #0x20
   20b3c:	stur	x0, [x29, #-8]
   20b40:	str	x1, [sp, #16]
   20b44:	ldur	x8, [x29, #-8]
   20b48:	ldr	x8, [x8, #40]
   20b4c:	str	x8, [sp, #8]
   20b50:	ldr	x8, [sp, #8]
   20b54:	cbz	x8, 20b6c <gl_rbtree_list_check_invariants@@Base+0x134c>
   20b58:	ldr	x8, [sp, #16]
   20b5c:	ldr	x9, [sp, #8]
   20b60:	ldr	x9, [x9, #32]
   20b64:	cmp	x8, x9
   20b68:	b.cc	20b70 <gl_rbtree_list_check_invariants@@Base+0x1350>  // b.lo, b.ul, b.last
   20b6c:	bl	a9e0 <abort@plt>
   20b70:	ldr	x0, [sp, #8]
   20b74:	ldr	x1, [sp, #16]
   20b78:	bl	21c40 <gl_rbtree_list_check_invariants@@Base+0x2420>
   20b7c:	str	x0, [sp, #8]
   20b80:	ldur	x0, [x29, #-8]
   20b84:	ldr	x1, [sp, #8]
   20b88:	bl	20ad4 <gl_rbtree_list_check_invariants@@Base+0x12b4>
   20b8c:	and	w0, w0, #0x1
   20b90:	ldp	x29, x30, [sp, #32]
   20b94:	add	sp, sp, #0x30
   20b98:	ret
   20b9c:	sub	sp, sp, #0x30
   20ba0:	stp	x29, x30, [sp, #32]
   20ba4:	add	x29, sp, #0x20
   20ba8:	str	x0, [sp, #16]
   20bac:	str	x1, [sp, #8]
   20bb0:	ldr	x8, [sp, #16]
   20bb4:	ldr	x8, [x8, #40]
   20bb8:	cbz	x8, 20c00 <gl_rbtree_list_check_invariants@@Base+0x13e0>
   20bbc:	ldr	x0, [sp, #16]
   20bc0:	ldr	x8, [sp, #16]
   20bc4:	ldr	x8, [x8, #40]
   20bc8:	ldr	x2, [x8, #32]
   20bcc:	ldr	x3, [sp, #8]
   20bd0:	mov	x8, xzr
   20bd4:	mov	x1, x8
   20bd8:	bl	1fe94 <gl_rbtree_list_check_invariants@@Base+0x674>
   20bdc:	str	x0, [sp]
   20be0:	ldr	x8, [sp]
   20be4:	cbz	x8, 20c00 <gl_rbtree_list_check_invariants@@Base+0x13e0>
   20be8:	ldr	x0, [sp, #16]
   20bec:	ldr	x1, [sp]
   20bf0:	bl	20ad4 <gl_rbtree_list_check_invariants@@Base+0x12b4>
   20bf4:	and	w8, w0, #0x1
   20bf8:	sturb	w8, [x29, #-1]
   20bfc:	b	20c0c <gl_rbtree_list_check_invariants@@Base+0x13ec>
   20c00:	mov	w8, wzr
   20c04:	and	w8, w8, #0x1
   20c08:	sturb	w8, [x29, #-1]
   20c0c:	ldurb	w8, [x29, #-1]
   20c10:	and	w0, w8, #0x1
   20c14:	ldp	x29, x30, [sp, #32]
   20c18:	add	sp, sp, #0x30
   20c1c:	ret
   20c20:	stp	x29, x30, [sp, #-32]!
   20c24:	str	x28, [sp, #16]
   20c28:	mov	x29, sp
   20c2c:	sub	sp, sp, #0x760
   20c30:	add	x8, sp, #0x10
   20c34:	stur	x0, [x29, #-8]
   20c38:	ldur	x9, [x29, #-8]
   20c3c:	ldr	x9, [x9, #40]
   20c40:	stur	x9, [x29, #-16]
   20c44:	str	x8, [sp, #8]
   20c48:	ldur	x8, [x29, #-16]
   20c4c:	cbnz	x8, 20c54 <gl_rbtree_list_check_invariants@@Base+0x1434>
   20c50:	b	20c84 <gl_rbtree_list_check_invariants@@Base+0x1464>
   20c54:	ldur	x8, [x29, #-16]
   20c58:	ldr	x9, [sp, #8]
   20c5c:	str	x8, [x9]
   20c60:	ldr	x8, [sp, #8]
   20c64:	str	xzr, [x8, #8]
   20c68:	ldur	x8, [x29, #-16]
   20c6c:	ldr	x8, [x8]
   20c70:	stur	x8, [x29, #-16]
   20c74:	ldr	x8, [sp, #8]
   20c78:	add	x8, x8, #0x10
   20c7c:	str	x8, [sp, #8]
   20c80:	b	20c48 <gl_rbtree_list_check_invariants@@Base+0x1428>
   20c84:	ldr	x8, [sp, #8]
   20c88:	add	x9, sp, #0x10
   20c8c:	cmp	x8, x9
   20c90:	b.ne	20c98 <gl_rbtree_list_check_invariants@@Base+0x1478>  // b.any
   20c94:	b	20d18 <gl_rbtree_list_check_invariants@@Base+0x14f8>
   20c98:	ldr	x8, [sp, #8]
   20c9c:	mov	x9, #0xfffffffffffffff0    	// #-16
   20ca0:	add	x8, x8, x9
   20ca4:	str	x8, [sp, #8]
   20ca8:	ldr	x8, [sp, #8]
   20cac:	ldr	x8, [x8]
   20cb0:	stur	x8, [x29, #-16]
   20cb4:	ldr	x8, [sp, #8]
   20cb8:	ldr	x8, [x8, #8]
   20cbc:	cbnz	x8, 20cc4 <gl_rbtree_list_check_invariants@@Base+0x14a4>
   20cc0:	b	20cf0 <gl_rbtree_list_check_invariants@@Base+0x14d0>
   20cc4:	ldur	x8, [x29, #-8]
   20cc8:	ldr	x8, [x8, #24]
   20ccc:	cbz	x8, 20ce4 <gl_rbtree_list_check_invariants@@Base+0x14c4>
   20cd0:	ldur	x8, [x29, #-8]
   20cd4:	ldr	x8, [x8, #24]
   20cd8:	ldur	x9, [x29, #-16]
   20cdc:	ldr	x0, [x9, #40]
   20ce0:	blr	x8
   20ce4:	ldur	x0, [x29, #-16]
   20ce8:	bl	a930 <free@plt>
   20cec:	b	20c84 <gl_rbtree_list_check_invariants@@Base+0x1464>
   20cf0:	ldr	x8, [sp, #8]
   20cf4:	mov	x9, #0x1                   	// #1
   20cf8:	str	x9, [x8, #8]
   20cfc:	ldur	x8, [x29, #-16]
   20d00:	ldr	x8, [x8, #8]
   20d04:	stur	x8, [x29, #-16]
   20d08:	ldr	x8, [sp, #8]
   20d0c:	add	x8, x8, #0x10
   20d10:	str	x8, [sp, #8]
   20d14:	b	20c48 <gl_rbtree_list_check_invariants@@Base+0x1428>
   20d18:	ldur	x0, [x29, #-8]
   20d1c:	bl	a930 <free@plt>
   20d20:	add	sp, sp, #0x760
   20d24:	ldr	x28, [sp, #16]
   20d28:	ldp	x29, x30, [sp], #32
   20d2c:	ret
   20d30:	sub	sp, sp, #0x20
   20d34:	str	x0, [sp, #24]
   20d38:	ldr	x9, [sp, #24]
   20d3c:	ldr	x9, [x9]
   20d40:	str	x9, [x8]
   20d44:	ldr	x9, [sp, #24]
   20d48:	str	x9, [x8, #8]
   20d4c:	ldr	x9, [sp, #24]
   20d50:	ldr	x9, [x9, #40]
   20d54:	str	x9, [sp, #16]
   20d58:	ldr	x9, [sp, #16]
   20d5c:	str	x8, [sp, #8]
   20d60:	cbz	x9, 20d80 <gl_rbtree_list_check_invariants@@Base+0x1560>
   20d64:	ldr	x8, [sp, #16]
   20d68:	ldr	x8, [x8]
   20d6c:	cbz	x8, 20d80 <gl_rbtree_list_check_invariants@@Base+0x1560>
   20d70:	ldr	x8, [sp, #16]
   20d74:	ldr	x8, [x8]
   20d78:	str	x8, [sp, #16]
   20d7c:	b	20d64 <gl_rbtree_list_check_invariants@@Base+0x1544>
   20d80:	ldr	x8, [sp, #16]
   20d84:	ldr	x9, [sp, #8]
   20d88:	str	x8, [x9, #24]
   20d8c:	mov	x8, xzr
   20d90:	str	x8, [x9, #32]
   20d94:	add	sp, sp, #0x20
   20d98:	ret
   20d9c:	sub	sp, sp, #0x50
   20da0:	stp	x29, x30, [sp, #64]
   20da4:	add	x29, sp, #0x40
   20da8:	stur	x0, [x29, #-8]
   20dac:	stur	x1, [x29, #-16]
   20db0:	stur	x2, [x29, #-24]
   20db4:	ldur	x9, [x29, #-8]
   20db8:	ldr	x9, [x9, #40]
   20dbc:	str	x8, [sp, #24]
   20dc0:	cbz	x9, 20dd8 <gl_rbtree_list_check_invariants@@Base+0x15b8>
   20dc4:	ldur	x8, [x29, #-8]
   20dc8:	ldr	x8, [x8, #40]
   20dcc:	ldr	x8, [x8, #32]
   20dd0:	str	x8, [sp, #16]
   20dd4:	b	20de0 <gl_rbtree_list_check_invariants@@Base+0x15c0>
   20dd8:	mov	x8, xzr
   20ddc:	str	x8, [sp, #16]
   20de0:	ldr	x8, [sp, #16]
   20de4:	str	x8, [sp, #32]
   20de8:	ldur	x8, [x29, #-16]
   20dec:	ldur	x9, [x29, #-24]
   20df0:	cmp	x8, x9
   20df4:	b.hi	20e08 <gl_rbtree_list_check_invariants@@Base+0x15e8>  // b.pmore
   20df8:	ldur	x8, [x29, #-24]
   20dfc:	ldr	x9, [sp, #32]
   20e00:	cmp	x8, x9
   20e04:	b.ls	20e0c <gl_rbtree_list_check_invariants@@Base+0x15ec>  // b.plast
   20e08:	bl	a9e0 <abort@plt>
   20e0c:	ldur	x8, [x29, #-8]
   20e10:	ldr	x8, [x8]
   20e14:	ldr	x9, [sp, #24]
   20e18:	str	x8, [x9]
   20e1c:	ldur	x8, [x29, #-8]
   20e20:	str	x8, [x9, #8]
   20e24:	ldur	x8, [x29, #-16]
   20e28:	ldr	x10, [sp, #32]
   20e2c:	cmp	x8, x10
   20e30:	b.cs	20e4c <gl_rbtree_list_check_invariants@@Base+0x162c>  // b.hs, b.nlast
   20e34:	ldur	x8, [x29, #-8]
   20e38:	ldr	x0, [x8, #40]
   20e3c:	ldur	x1, [x29, #-16]
   20e40:	bl	21c40 <gl_rbtree_list_check_invariants@@Base+0x2420>
   20e44:	str	x0, [sp, #8]
   20e48:	b	20e54 <gl_rbtree_list_check_invariants@@Base+0x1634>
   20e4c:	mov	x8, xzr
   20e50:	str	x8, [sp, #8]
   20e54:	ldr	x8, [sp, #8]
   20e58:	ldr	x9, [sp, #24]
   20e5c:	str	x8, [x9, #24]
   20e60:	ldur	x8, [x29, #-24]
   20e64:	ldr	x10, [sp, #32]
   20e68:	cmp	x8, x10
   20e6c:	b.cs	20e88 <gl_rbtree_list_check_invariants@@Base+0x1668>  // b.hs, b.nlast
   20e70:	ldur	x8, [x29, #-8]
   20e74:	ldr	x0, [x8, #40]
   20e78:	ldur	x1, [x29, #-24]
   20e7c:	bl	21c40 <gl_rbtree_list_check_invariants@@Base+0x2420>
   20e80:	str	x0, [sp]
   20e84:	b	20e90 <gl_rbtree_list_check_invariants@@Base+0x1670>
   20e88:	mov	x8, xzr
   20e8c:	str	x8, [sp]
   20e90:	ldr	x8, [sp]
   20e94:	ldr	x9, [sp, #24]
   20e98:	str	x8, [x9, #32]
   20e9c:	ldp	x29, x30, [sp, #64]
   20ea0:	add	sp, sp, #0x50
   20ea4:	ret
   20ea8:	sub	sp, sp, #0x30
   20eac:	str	x0, [sp, #32]
   20eb0:	str	x1, [sp, #24]
   20eb4:	str	x2, [sp, #16]
   20eb8:	ldr	x8, [sp, #32]
   20ebc:	ldr	x8, [x8, #24]
   20ec0:	ldr	x9, [sp, #32]
   20ec4:	ldr	x9, [x9, #32]
   20ec8:	cmp	x8, x9
   20ecc:	b.eq	20fac <gl_rbtree_list_check_invariants@@Base+0x178c>  // b.none
   20ed0:	ldr	x8, [sp, #32]
   20ed4:	ldr	x8, [x8, #24]
   20ed8:	str	x8, [sp, #8]
   20edc:	ldr	x8, [sp, #8]
   20ee0:	ldr	x8, [x8, #40]
   20ee4:	ldr	x9, [sp, #24]
   20ee8:	str	x8, [x9]
   20eec:	ldr	x8, [sp, #16]
   20ef0:	cbz	x8, 20f00 <gl_rbtree_list_check_invariants@@Base+0x16e0>
   20ef4:	ldr	x8, [sp, #8]
   20ef8:	ldr	x9, [sp, #16]
   20efc:	str	x8, [x9]
   20f00:	ldr	x8, [sp, #8]
   20f04:	ldr	x8, [x8, #8]
   20f08:	cbz	x8, 20f38 <gl_rbtree_list_check_invariants@@Base+0x1718>
   20f0c:	ldr	x8, [sp, #8]
   20f10:	ldr	x8, [x8, #8]
   20f14:	str	x8, [sp, #8]
   20f18:	ldr	x8, [sp, #8]
   20f1c:	ldr	x8, [x8]
   20f20:	cbz	x8, 20f34 <gl_rbtree_list_check_invariants@@Base+0x1714>
   20f24:	ldr	x8, [sp, #8]
   20f28:	ldr	x8, [x8]
   20f2c:	str	x8, [sp, #8]
   20f30:	b	20f18 <gl_rbtree_list_check_invariants@@Base+0x16f8>
   20f34:	b	20f90 <gl_rbtree_list_check_invariants@@Base+0x1770>
   20f38:	ldr	x8, [sp, #8]
   20f3c:	ldr	x8, [x8, #16]
   20f40:	mov	w9, #0x0                   	// #0
   20f44:	str	w9, [sp, #4]
   20f48:	cbz	x8, 20f68 <gl_rbtree_list_check_invariants@@Base+0x1748>
   20f4c:	ldr	x8, [sp, #8]
   20f50:	ldr	x8, [x8, #16]
   20f54:	ldr	x8, [x8, #8]
   20f58:	ldr	x9, [sp, #8]
   20f5c:	cmp	x8, x9
   20f60:	cset	w10, eq  // eq = none
   20f64:	str	w10, [sp, #4]
   20f68:	ldr	w8, [sp, #4]
   20f6c:	tbnz	w8, #0, 20f74 <gl_rbtree_list_check_invariants@@Base+0x1754>
   20f70:	b	20f84 <gl_rbtree_list_check_invariants@@Base+0x1764>
   20f74:	ldr	x8, [sp, #8]
   20f78:	ldr	x8, [x8, #16]
   20f7c:	str	x8, [sp, #8]
   20f80:	b	20f38 <gl_rbtree_list_check_invariants@@Base+0x1718>
   20f84:	ldr	x8, [sp, #8]
   20f88:	ldr	x8, [x8, #16]
   20f8c:	str	x8, [sp, #8]
   20f90:	ldr	x8, [sp, #8]
   20f94:	ldr	x9, [sp, #32]
   20f98:	str	x8, [x9, #24]
   20f9c:	mov	w10, #0x1                   	// #1
   20fa0:	and	w10, w10, #0x1
   20fa4:	strb	w10, [sp, #47]
   20fa8:	b	20fb8 <gl_rbtree_list_check_invariants@@Base+0x1798>
   20fac:	mov	w8, wzr
   20fb0:	and	w8, w8, #0x1
   20fb4:	strb	w8, [sp, #47]
   20fb8:	ldrb	w8, [sp, #47]
   20fbc:	and	w0, w8, #0x1
   20fc0:	add	sp, sp, #0x30
   20fc4:	ret
   20fc8:	sub	sp, sp, #0x10
   20fcc:	str	x0, [sp, #8]
   20fd0:	add	sp, sp, #0x10
   20fd4:	ret
   20fd8:	sub	sp, sp, #0x50
   20fdc:	stp	x29, x30, [sp, #64]
   20fe0:	add	x29, sp, #0x40
   20fe4:	stur	x0, [x29, #-16]
   20fe8:	stur	x1, [x29, #-24]
   20fec:	str	x2, [sp, #32]
   20ff0:	ldur	x8, [x29, #-16]
   20ff4:	ldr	x8, [x8, #40]
   20ff8:	str	x8, [sp, #24]
   20ffc:	ldr	x8, [sp, #24]
   21000:	cbz	x8, 210ec <gl_rbtree_list_check_invariants@@Base+0x18cc>
   21004:	ldur	x8, [x29, #-24]
   21008:	ldr	x9, [sp, #24]
   2100c:	ldr	x0, [x9, #40]
   21010:	ldr	x1, [sp, #32]
   21014:	blr	x8
   21018:	str	w0, [sp, #20]
   2101c:	ldr	w10, [sp, #20]
   21020:	cmp	w10, #0x0
   21024:	cset	w10, ge  // ge = tcont
   21028:	tbnz	w10, #0, 2103c <gl_rbtree_list_check_invariants@@Base+0x181c>
   2102c:	ldr	x8, [sp, #24]
   21030:	ldr	x8, [x8, #8]
   21034:	str	x8, [sp, #24]
   21038:	b	210e8 <gl_rbtree_list_check_invariants@@Base+0x18c8>
   2103c:	ldr	w8, [sp, #20]
   21040:	cmp	w8, #0x0
   21044:	cset	w8, le
   21048:	tbnz	w8, #0, 2105c <gl_rbtree_list_check_invariants@@Base+0x183c>
   2104c:	ldr	x8, [sp, #24]
   21050:	ldr	x8, [x8]
   21054:	str	x8, [sp, #24]
   21058:	b	210e8 <gl_rbtree_list_check_invariants@@Base+0x18c8>
   2105c:	ldr	x8, [sp, #24]
   21060:	str	x8, [sp, #8]
   21064:	ldr	x8, [sp, #24]
   21068:	ldr	x8, [x8]
   2106c:	str	x8, [sp, #24]
   21070:	ldr	x8, [sp, #24]
   21074:	cbz	x8, 210dc <gl_rbtree_list_check_invariants@@Base+0x18bc>
   21078:	ldur	x8, [x29, #-24]
   2107c:	ldr	x9, [sp, #24]
   21080:	ldr	x0, [x9, #40]
   21084:	ldr	x1, [sp, #32]
   21088:	blr	x8
   2108c:	str	w0, [sp, #4]
   21090:	ldr	w10, [sp, #4]
   21094:	cmp	w10, #0x0
   21098:	cset	w10, ge  // ge = tcont
   2109c:	tbnz	w10, #0, 210b0 <gl_rbtree_list_check_invariants@@Base+0x1890>
   210a0:	ldr	x8, [sp, #24]
   210a4:	ldr	x8, [x8, #8]
   210a8:	str	x8, [sp, #24]
   210ac:	b	210d8 <gl_rbtree_list_check_invariants@@Base+0x18b8>
   210b0:	ldr	w8, [sp, #4]
   210b4:	cmp	w8, #0x0
   210b8:	cset	w8, le
   210bc:	tbnz	w8, #0, 210c4 <gl_rbtree_list_check_invariants@@Base+0x18a4>
   210c0:	bl	a9e0 <abort@plt>
   210c4:	ldr	x8, [sp, #24]
   210c8:	str	x8, [sp, #8]
   210cc:	ldr	x8, [sp, #24]
   210d0:	ldr	x8, [x8]
   210d4:	str	x8, [sp, #24]
   210d8:	b	21070 <gl_rbtree_list_check_invariants@@Base+0x1850>
   210dc:	ldr	x8, [sp, #8]
   210e0:	stur	x8, [x29, #-8]
   210e4:	b	210f4 <gl_rbtree_list_check_invariants@@Base+0x18d4>
   210e8:	b	20ffc <gl_rbtree_list_check_invariants@@Base+0x17dc>
   210ec:	mov	x8, xzr
   210f0:	stur	x8, [x29, #-8]
   210f4:	ldur	x0, [x29, #-8]
   210f8:	ldp	x29, x30, [sp, #64]
   210fc:	add	sp, sp, #0x50
   21100:	ret
   21104:	sub	sp, sp, #0x90
   21108:	stp	x29, x30, [sp, #128]
   2110c:	add	x29, sp, #0x80
   21110:	stur	x0, [x29, #-16]
   21114:	stur	x1, [x29, #-24]
   21118:	stur	x2, [x29, #-32]
   2111c:	stur	x3, [x29, #-40]
   21120:	stur	x4, [x29, #-48]
   21124:	ldur	x8, [x29, #-32]
   21128:	ldur	x9, [x29, #-40]
   2112c:	cmp	x8, x9
   21130:	b.hi	21174 <gl_rbtree_list_check_invariants@@Base+0x1954>  // b.pmore
   21134:	ldur	x8, [x29, #-40]
   21138:	ldur	x9, [x29, #-16]
   2113c:	ldr	x9, [x9, #40]
   21140:	str	x8, [sp, #24]
   21144:	cbz	x9, 2115c <gl_rbtree_list_check_invariants@@Base+0x193c>
   21148:	ldur	x8, [x29, #-16]
   2114c:	ldr	x8, [x8, #40]
   21150:	ldr	x8, [x8, #32]
   21154:	str	x8, [sp, #16]
   21158:	b	21164 <gl_rbtree_list_check_invariants@@Base+0x1944>
   2115c:	mov	x8, xzr
   21160:	str	x8, [sp, #16]
   21164:	ldr	x8, [sp, #16]
   21168:	ldr	x9, [sp, #24]
   2116c:	cmp	x9, x8
   21170:	b.ls	21178 <gl_rbtree_list_check_invariants@@Base+0x1958>  // b.plast
   21174:	bl	a9e0 <abort@plt>
   21178:	ldur	x8, [x29, #-16]
   2117c:	ldr	x8, [x8, #40]
   21180:	stur	x8, [x29, #-56]
   21184:	ldur	x8, [x29, #-56]
   21188:	cbz	x8, 2138c <gl_rbtree_list_check_invariants@@Base+0x1b6c>
   2118c:	ldur	x8, [x29, #-56]
   21190:	ldr	x8, [x8]
   21194:	cbz	x8, 211ac <gl_rbtree_list_check_invariants@@Base+0x198c>
   21198:	ldur	x8, [x29, #-56]
   2119c:	ldr	x8, [x8]
   211a0:	ldr	x8, [x8, #32]
   211a4:	str	x8, [sp, #8]
   211a8:	b	211b4 <gl_rbtree_list_check_invariants@@Base+0x1994>
   211ac:	mov	x8, xzr
   211b0:	str	x8, [sp, #8]
   211b4:	ldr	x8, [sp, #8]
   211b8:	str	x8, [sp, #64]
   211bc:	ldur	x8, [x29, #-32]
   211c0:	ldr	x9, [sp, #64]
   211c4:	cmp	x8, x9
   211c8:	b.ls	21204 <gl_rbtree_list_check_invariants@@Base+0x19e4>  // b.plast
   211cc:	ldr	x8, [sp, #64]
   211d0:	add	x8, x8, #0x1
   211d4:	ldur	x9, [x29, #-32]
   211d8:	subs	x8, x9, x8
   211dc:	stur	x8, [x29, #-32]
   211e0:	ldr	x8, [sp, #64]
   211e4:	add	x8, x8, #0x1
   211e8:	ldur	x9, [x29, #-40]
   211ec:	subs	x8, x9, x8
   211f0:	stur	x8, [x29, #-40]
   211f4:	ldur	x8, [x29, #-56]
   211f8:	ldr	x8, [x8, #8]
   211fc:	stur	x8, [x29, #-56]
   21200:	b	21388 <gl_rbtree_list_check_invariants@@Base+0x1b68>
   21204:	ldur	x8, [x29, #-40]
   21208:	ldr	x9, [sp, #64]
   2120c:	cmp	x8, x9
   21210:	b.hi	21224 <gl_rbtree_list_check_invariants@@Base+0x1a04>  // b.pmore
   21214:	ldur	x8, [x29, #-56]
   21218:	ldr	x8, [x8]
   2121c:	stur	x8, [x29, #-56]
   21220:	b	21388 <gl_rbtree_list_check_invariants@@Base+0x1b68>
   21224:	ldur	x8, [x29, #-24]
   21228:	ldur	x9, [x29, #-56]
   2122c:	ldr	x0, [x9, #40]
   21230:	ldur	x1, [x29, #-48]
   21234:	blr	x8
   21238:	str	w0, [sp, #60]
   2123c:	ldr	w10, [sp, #60]
   21240:	cmp	w10, #0x0
   21244:	cset	w10, ge  // ge = tcont
   21248:	tbnz	w10, #0, 21274 <gl_rbtree_list_check_invariants@@Base+0x1a54>
   2124c:	stur	xzr, [x29, #-32]
   21250:	ldr	x8, [sp, #64]
   21254:	add	x8, x8, #0x1
   21258:	ldur	x9, [x29, #-40]
   2125c:	subs	x8, x9, x8
   21260:	stur	x8, [x29, #-40]
   21264:	ldur	x8, [x29, #-56]
   21268:	ldr	x8, [x8, #8]
   2126c:	stur	x8, [x29, #-56]
   21270:	b	21388 <gl_rbtree_list_check_invariants@@Base+0x1b68>
   21274:	ldr	w8, [sp, #60]
   21278:	cmp	w8, #0x0
   2127c:	cset	w8, le
   21280:	tbnz	w8, #0, 21294 <gl_rbtree_list_check_invariants@@Base+0x1a74>
   21284:	ldur	x8, [x29, #-56]
   21288:	ldr	x8, [x8]
   2128c:	stur	x8, [x29, #-56]
   21290:	b	21388 <gl_rbtree_list_check_invariants@@Base+0x1b68>
   21294:	ldur	x8, [x29, #-56]
   21298:	str	x8, [sp, #48]
   2129c:	ldur	x8, [x29, #-56]
   212a0:	ldr	x8, [x8]
   212a4:	stur	x8, [x29, #-56]
   212a8:	ldur	x8, [x29, #-56]
   212ac:	cbz	x8, 2137c <gl_rbtree_list_check_invariants@@Base+0x1b5c>
   212b0:	ldur	x8, [x29, #-56]
   212b4:	ldr	x8, [x8]
   212b8:	cbz	x8, 212d0 <gl_rbtree_list_check_invariants@@Base+0x1ab0>
   212bc:	ldur	x8, [x29, #-56]
   212c0:	ldr	x8, [x8]
   212c4:	ldr	x8, [x8, #32]
   212c8:	str	x8, [sp]
   212cc:	b	212d8 <gl_rbtree_list_check_invariants@@Base+0x1ab8>
   212d0:	mov	x8, xzr
   212d4:	str	x8, [sp]
   212d8:	ldr	x8, [sp]
   212dc:	str	x8, [sp, #40]
   212e0:	ldur	x8, [x29, #-32]
   212e4:	ldr	x9, [sp, #40]
   212e8:	cmp	x8, x9
   212ec:	b.ls	21314 <gl_rbtree_list_check_invariants@@Base+0x1af4>  // b.plast
   212f0:	ldr	x8, [sp, #40]
   212f4:	add	x8, x8, #0x1
   212f8:	ldur	x9, [x29, #-32]
   212fc:	subs	x8, x9, x8
   21300:	stur	x8, [x29, #-32]
   21304:	ldur	x8, [x29, #-56]
   21308:	ldr	x8, [x8, #8]
   2130c:	stur	x8, [x29, #-56]
   21310:	b	21378 <gl_rbtree_list_check_invariants@@Base+0x1b58>
   21314:	ldur	x8, [x29, #-24]
   21318:	ldur	x9, [x29, #-56]
   2131c:	ldr	x0, [x9, #40]
   21320:	ldur	x1, [x29, #-48]
   21324:	blr	x8
   21328:	str	w0, [sp, #36]
   2132c:	ldr	w10, [sp, #36]
   21330:	cmp	w10, #0x0
   21334:	cset	w10, ge  // ge = tcont
   21338:	tbnz	w10, #0, 21350 <gl_rbtree_list_check_invariants@@Base+0x1b30>
   2133c:	stur	xzr, [x29, #-32]
   21340:	ldur	x8, [x29, #-56]
   21344:	ldr	x8, [x8, #8]
   21348:	stur	x8, [x29, #-56]
   2134c:	b	21378 <gl_rbtree_list_check_invariants@@Base+0x1b58>
   21350:	ldr	w8, [sp, #36]
   21354:	cmp	w8, #0x0
   21358:	cset	w8, le
   2135c:	tbnz	w8, #0, 21364 <gl_rbtree_list_check_invariants@@Base+0x1b44>
   21360:	bl	a9e0 <abort@plt>
   21364:	ldur	x8, [x29, #-56]
   21368:	str	x8, [sp, #48]
   2136c:	ldur	x8, [x29, #-56]
   21370:	ldr	x8, [x8]
   21374:	stur	x8, [x29, #-56]
   21378:	b	212a8 <gl_rbtree_list_check_invariants@@Base+0x1a88>
   2137c:	ldr	x8, [sp, #48]
   21380:	stur	x8, [x29, #-8]
   21384:	b	21394 <gl_rbtree_list_check_invariants@@Base+0x1b74>
   21388:	b	21184 <gl_rbtree_list_check_invariants@@Base+0x1964>
   2138c:	mov	x8, xzr
   21390:	stur	x8, [x29, #-8]
   21394:	ldur	x0, [x29, #-8]
   21398:	ldp	x29, x30, [sp, #128]
   2139c:	add	sp, sp, #0x90
   213a0:	ret
   213a4:	sub	sp, sp, #0x80
   213a8:	stp	x29, x30, [sp, #112]
   213ac:	add	x29, sp, #0x70
   213b0:	stur	x0, [x29, #-16]
   213b4:	stur	x1, [x29, #-24]
   213b8:	stur	x2, [x29, #-32]
   213bc:	ldur	x8, [x29, #-16]
   213c0:	ldr	x8, [x8, #40]
   213c4:	stur	x8, [x29, #-40]
   213c8:	stur	xzr, [x29, #-48]
   213cc:	ldur	x8, [x29, #-40]
   213d0:	cbz	x8, 2158c <gl_rbtree_list_check_invariants@@Base+0x1d6c>
   213d4:	ldur	x8, [x29, #-24]
   213d8:	ldur	x9, [x29, #-40]
   213dc:	ldr	x0, [x9, #40]
   213e0:	ldur	x1, [x29, #-32]
   213e4:	blr	x8
   213e8:	stur	w0, [x29, #-52]
   213ec:	ldur	w10, [x29, #-52]
   213f0:	cmp	w10, #0x0
   213f4:	cset	w10, ge  // ge = tcont
   213f8:	tbnz	w10, #0, 2143c <gl_rbtree_list_check_invariants@@Base+0x1c1c>
   213fc:	ldur	x8, [x29, #-40]
   21400:	ldr	x8, [x8]
   21404:	cbz	x8, 21420 <gl_rbtree_list_check_invariants@@Base+0x1c00>
   21408:	ldur	x8, [x29, #-40]
   2140c:	ldr	x8, [x8]
   21410:	ldr	x8, [x8, #32]
   21414:	ldur	x9, [x29, #-48]
   21418:	add	x8, x9, x8
   2141c:	stur	x8, [x29, #-48]
   21420:	ldur	x8, [x29, #-48]
   21424:	add	x8, x8, #0x1
   21428:	stur	x8, [x29, #-48]
   2142c:	ldur	x8, [x29, #-40]
   21430:	ldr	x8, [x8, #8]
   21434:	stur	x8, [x29, #-40]
   21438:	b	21588 <gl_rbtree_list_check_invariants@@Base+0x1d68>
   2143c:	ldur	w8, [x29, #-52]
   21440:	cmp	w8, #0x0
   21444:	cset	w8, le
   21448:	tbnz	w8, #0, 2145c <gl_rbtree_list_check_invariants@@Base+0x1c3c>
   2144c:	ldur	x8, [x29, #-40]
   21450:	ldr	x8, [x8]
   21454:	stur	x8, [x29, #-40]
   21458:	b	21588 <gl_rbtree_list_check_invariants@@Base+0x1d68>
   2145c:	ldur	x8, [x29, #-48]
   21460:	ldur	x9, [x29, #-40]
   21464:	ldr	x9, [x9]
   21468:	str	x8, [sp, #32]
   2146c:	cbz	x9, 21484 <gl_rbtree_list_check_invariants@@Base+0x1c64>
   21470:	ldur	x8, [x29, #-40]
   21474:	ldr	x8, [x8]
   21478:	ldr	x8, [x8, #32]
   2147c:	str	x8, [sp, #24]
   21480:	b	2148c <gl_rbtree_list_check_invariants@@Base+0x1c6c>
   21484:	mov	x8, xzr
   21488:	str	x8, [sp, #24]
   2148c:	ldr	x8, [sp, #24]
   21490:	ldr	x9, [sp, #32]
   21494:	add	x8, x9, x8
   21498:	str	x8, [sp, #48]
   2149c:	ldur	x8, [x29, #-40]
   214a0:	ldr	x8, [x8]
   214a4:	stur	x8, [x29, #-40]
   214a8:	ldur	x8, [x29, #-40]
   214ac:	cbz	x8, 2157c <gl_rbtree_list_check_invariants@@Base+0x1d5c>
   214b0:	ldur	x8, [x29, #-24]
   214b4:	ldur	x9, [x29, #-40]
   214b8:	ldr	x0, [x9, #40]
   214bc:	ldur	x1, [x29, #-32]
   214c0:	blr	x8
   214c4:	str	w0, [sp, #44]
   214c8:	ldr	w10, [sp, #44]
   214cc:	cmp	w10, #0x0
   214d0:	cset	w10, ge  // ge = tcont
   214d4:	tbnz	w10, #0, 21518 <gl_rbtree_list_check_invariants@@Base+0x1cf8>
   214d8:	ldur	x8, [x29, #-40]
   214dc:	ldr	x8, [x8]
   214e0:	cbz	x8, 214fc <gl_rbtree_list_check_invariants@@Base+0x1cdc>
   214e4:	ldur	x8, [x29, #-40]
   214e8:	ldr	x8, [x8]
   214ec:	ldr	x8, [x8, #32]
   214f0:	ldur	x9, [x29, #-48]
   214f4:	add	x8, x9, x8
   214f8:	stur	x8, [x29, #-48]
   214fc:	ldur	x8, [x29, #-48]
   21500:	add	x8, x8, #0x1
   21504:	stur	x8, [x29, #-48]
   21508:	ldur	x8, [x29, #-40]
   2150c:	ldr	x8, [x8, #8]
   21510:	stur	x8, [x29, #-40]
   21514:	b	21578 <gl_rbtree_list_check_invariants@@Base+0x1d58>
   21518:	ldr	w8, [sp, #44]
   2151c:	cmp	w8, #0x0
   21520:	cset	w8, le
   21524:	tbnz	w8, #0, 2152c <gl_rbtree_list_check_invariants@@Base+0x1d0c>
   21528:	bl	a9e0 <abort@plt>
   2152c:	ldur	x8, [x29, #-48]
   21530:	ldur	x9, [x29, #-40]
   21534:	ldr	x9, [x9]
   21538:	str	x8, [sp, #16]
   2153c:	cbz	x9, 21554 <gl_rbtree_list_check_invariants@@Base+0x1d34>
   21540:	ldur	x8, [x29, #-40]
   21544:	ldr	x8, [x8]
   21548:	ldr	x8, [x8, #32]
   2154c:	str	x8, [sp, #8]
   21550:	b	2155c <gl_rbtree_list_check_invariants@@Base+0x1d3c>
   21554:	mov	x8, xzr
   21558:	str	x8, [sp, #8]
   2155c:	ldr	x8, [sp, #8]
   21560:	ldr	x9, [sp, #16]
   21564:	add	x8, x9, x8
   21568:	str	x8, [sp, #48]
   2156c:	ldur	x8, [x29, #-40]
   21570:	ldr	x8, [x8]
   21574:	stur	x8, [x29, #-40]
   21578:	b	214a8 <gl_rbtree_list_check_invariants@@Base+0x1c88>
   2157c:	ldr	x8, [sp, #48]
   21580:	stur	x8, [x29, #-8]
   21584:	b	21594 <gl_rbtree_list_check_invariants@@Base+0x1d74>
   21588:	b	213cc <gl_rbtree_list_check_invariants@@Base+0x1bac>
   2158c:	mov	x8, #0xffffffffffffffff    	// #-1
   21590:	stur	x8, [x29, #-8]
   21594:	ldur	x0, [x29, #-8]
   21598:	ldp	x29, x30, [sp, #112]
   2159c:	add	sp, sp, #0x80
   215a0:	ret
   215a4:	sub	sp, sp, #0xb0
   215a8:	stp	x29, x30, [sp, #160]
   215ac:	add	x29, sp, #0xa0
   215b0:	stur	x0, [x29, #-16]
   215b4:	stur	x1, [x29, #-24]
   215b8:	stur	x2, [x29, #-32]
   215bc:	stur	x3, [x29, #-40]
   215c0:	stur	x4, [x29, #-48]
   215c4:	ldur	x8, [x29, #-32]
   215c8:	ldur	x9, [x29, #-40]
   215cc:	cmp	x8, x9
   215d0:	b.hi	21614 <gl_rbtree_list_check_invariants@@Base+0x1df4>  // b.pmore
   215d4:	ldur	x8, [x29, #-40]
   215d8:	ldur	x9, [x29, #-16]
   215dc:	ldr	x9, [x9, #40]
   215e0:	str	x8, [sp, #48]
   215e4:	cbz	x9, 215fc <gl_rbtree_list_check_invariants@@Base+0x1ddc>
   215e8:	ldur	x8, [x29, #-16]
   215ec:	ldr	x8, [x8, #40]
   215f0:	ldr	x8, [x8, #32]
   215f4:	str	x8, [sp, #40]
   215f8:	b	21604 <gl_rbtree_list_check_invariants@@Base+0x1de4>
   215fc:	mov	x8, xzr
   21600:	str	x8, [sp, #40]
   21604:	ldr	x8, [sp, #40]
   21608:	ldr	x9, [sp, #48]
   2160c:	cmp	x9, x8
   21610:	b.ls	21618 <gl_rbtree_list_check_invariants@@Base+0x1df8>  // b.plast
   21614:	bl	a9e0 <abort@plt>
   21618:	ldur	x8, [x29, #-16]
   2161c:	ldr	x8, [x8, #40]
   21620:	stur	x8, [x29, #-56]
   21624:	stur	xzr, [x29, #-64]
   21628:	ldur	x8, [x29, #-56]
   2162c:	cbz	x8, 218a8 <gl_rbtree_list_check_invariants@@Base+0x2088>
   21630:	ldur	x8, [x29, #-56]
   21634:	ldr	x8, [x8]
   21638:	cbz	x8, 21650 <gl_rbtree_list_check_invariants@@Base+0x1e30>
   2163c:	ldur	x8, [x29, #-56]
   21640:	ldr	x8, [x8]
   21644:	ldr	x8, [x8, #32]
   21648:	str	x8, [sp, #32]
   2164c:	b	21658 <gl_rbtree_list_check_invariants@@Base+0x1e38>
   21650:	mov	x8, xzr
   21654:	str	x8, [sp, #32]
   21658:	ldr	x8, [sp, #32]
   2165c:	stur	x8, [x29, #-72]
   21660:	ldur	x8, [x29, #-32]
   21664:	ldur	x9, [x29, #-72]
   21668:	cmp	x8, x9
   2166c:	b.ls	216bc <gl_rbtree_list_check_invariants@@Base+0x1e9c>  // b.plast
   21670:	ldur	x8, [x29, #-72]
   21674:	add	x8, x8, #0x1
   21678:	ldur	x9, [x29, #-32]
   2167c:	subs	x8, x9, x8
   21680:	stur	x8, [x29, #-32]
   21684:	ldur	x8, [x29, #-72]
   21688:	add	x8, x8, #0x1
   2168c:	ldur	x9, [x29, #-40]
   21690:	subs	x8, x9, x8
   21694:	stur	x8, [x29, #-40]
   21698:	ldur	x8, [x29, #-72]
   2169c:	add	x8, x8, #0x1
   216a0:	ldur	x9, [x29, #-64]
   216a4:	add	x8, x9, x8
   216a8:	stur	x8, [x29, #-64]
   216ac:	ldur	x8, [x29, #-56]
   216b0:	ldr	x8, [x8, #8]
   216b4:	stur	x8, [x29, #-56]
   216b8:	b	218a4 <gl_rbtree_list_check_invariants@@Base+0x2084>
   216bc:	ldur	x8, [x29, #-40]
   216c0:	ldur	x9, [x29, #-72]
   216c4:	cmp	x8, x9
   216c8:	b.hi	216dc <gl_rbtree_list_check_invariants@@Base+0x1ebc>  // b.pmore
   216cc:	ldur	x8, [x29, #-56]
   216d0:	ldr	x8, [x8]
   216d4:	stur	x8, [x29, #-56]
   216d8:	b	218a4 <gl_rbtree_list_check_invariants@@Base+0x2084>
   216dc:	ldur	x8, [x29, #-24]
   216e0:	ldur	x9, [x29, #-56]
   216e4:	ldr	x0, [x9, #40]
   216e8:	ldur	x1, [x29, #-48]
   216ec:	blr	x8
   216f0:	stur	w0, [x29, #-76]
   216f4:	ldur	w10, [x29, #-76]
   216f8:	cmp	w10, #0x0
   216fc:	cset	w10, ge  // ge = tcont
   21700:	tbnz	w10, #0, 21740 <gl_rbtree_list_check_invariants@@Base+0x1f20>
   21704:	stur	xzr, [x29, #-32]
   21708:	ldur	x8, [x29, #-72]
   2170c:	add	x8, x8, #0x1
   21710:	ldur	x9, [x29, #-40]
   21714:	subs	x8, x9, x8
   21718:	stur	x8, [x29, #-40]
   2171c:	ldur	x8, [x29, #-72]
   21720:	add	x8, x8, #0x1
   21724:	ldur	x9, [x29, #-64]
   21728:	add	x8, x9, x8
   2172c:	stur	x8, [x29, #-64]
   21730:	ldur	x8, [x29, #-56]
   21734:	ldr	x8, [x8, #8]
   21738:	stur	x8, [x29, #-56]
   2173c:	b	218a4 <gl_rbtree_list_check_invariants@@Base+0x2084>
   21740:	ldur	w8, [x29, #-76]
   21744:	cmp	w8, #0x0
   21748:	cset	w8, le
   2174c:	tbnz	w8, #0, 21760 <gl_rbtree_list_check_invariants@@Base+0x1f40>
   21750:	ldur	x8, [x29, #-56]
   21754:	ldr	x8, [x8]
   21758:	stur	x8, [x29, #-56]
   2175c:	b	218a4 <gl_rbtree_list_check_invariants@@Base+0x2084>
   21760:	ldur	x8, [x29, #-64]
   21764:	ldur	x9, [x29, #-56]
   21768:	ldr	x9, [x9]
   2176c:	str	x8, [sp, #24]
   21770:	cbz	x9, 21788 <gl_rbtree_list_check_invariants@@Base+0x1f68>
   21774:	ldur	x8, [x29, #-56]
   21778:	ldr	x8, [x8]
   2177c:	ldr	x8, [x8, #32]
   21780:	str	x8, [sp, #16]
   21784:	b	21790 <gl_rbtree_list_check_invariants@@Base+0x1f70>
   21788:	mov	x8, xzr
   2178c:	str	x8, [sp, #16]
   21790:	ldr	x8, [sp, #16]
   21794:	ldr	x9, [sp, #24]
   21798:	add	x8, x9, x8
   2179c:	str	x8, [sp, #72]
   217a0:	ldur	x8, [x29, #-56]
   217a4:	ldr	x8, [x8]
   217a8:	stur	x8, [x29, #-56]
   217ac:	ldur	x8, [x29, #-56]
   217b0:	cbz	x8, 21898 <gl_rbtree_list_check_invariants@@Base+0x2078>
   217b4:	ldur	x8, [x29, #-56]
   217b8:	ldr	x8, [x8]
   217bc:	cbz	x8, 217d4 <gl_rbtree_list_check_invariants@@Base+0x1fb4>
   217c0:	ldur	x8, [x29, #-56]
   217c4:	ldr	x8, [x8]
   217c8:	ldr	x8, [x8, #32]
   217cc:	str	x8, [sp, #8]
   217d0:	b	217dc <gl_rbtree_list_check_invariants@@Base+0x1fbc>
   217d4:	mov	x8, xzr
   217d8:	str	x8, [sp, #8]
   217dc:	ldr	x8, [sp, #8]
   217e0:	str	x8, [sp, #64]
   217e4:	ldur	x8, [x29, #-32]
   217e8:	ldr	x9, [sp, #64]
   217ec:	cmp	x8, x9
   217f0:	b.ls	21818 <gl_rbtree_list_check_invariants@@Base+0x1ff8>  // b.plast
   217f4:	ldr	x8, [sp, #64]
   217f8:	add	x8, x8, #0x1
   217fc:	ldur	x9, [x29, #-32]
   21800:	subs	x8, x9, x8
   21804:	stur	x8, [x29, #-32]
   21808:	ldur	x8, [x29, #-56]
   2180c:	ldr	x8, [x8, #8]
   21810:	stur	x8, [x29, #-56]
   21814:	b	21894 <gl_rbtree_list_check_invariants@@Base+0x2074>
   21818:	ldur	x8, [x29, #-24]
   2181c:	ldur	x9, [x29, #-56]
   21820:	ldr	x0, [x9, #40]
   21824:	ldur	x1, [x29, #-48]
   21828:	blr	x8
   2182c:	str	w0, [sp, #60]
   21830:	ldr	w10, [sp, #60]
   21834:	cmp	w10, #0x0
   21838:	cset	w10, ge  // ge = tcont
   2183c:	tbnz	w10, #0, 21864 <gl_rbtree_list_check_invariants@@Base+0x2044>
   21840:	ldr	x8, [sp, #64]
   21844:	add	x8, x8, #0x1
   21848:	ldur	x9, [x29, #-64]
   2184c:	add	x8, x9, x8
   21850:	stur	x8, [x29, #-64]
   21854:	ldur	x8, [x29, #-56]
   21858:	ldr	x8, [x8, #8]
   2185c:	stur	x8, [x29, #-56]
   21860:	b	21894 <gl_rbtree_list_check_invariants@@Base+0x2074>
   21864:	ldr	w8, [sp, #60]
   21868:	cmp	w8, #0x0
   2186c:	cset	w8, le
   21870:	tbnz	w8, #0, 21878 <gl_rbtree_list_check_invariants@@Base+0x2058>
   21874:	bl	a9e0 <abort@plt>
   21878:	ldur	x8, [x29, #-64]
   2187c:	ldr	x9, [sp, #64]
   21880:	add	x8, x8, x9
   21884:	str	x8, [sp, #72]
   21888:	ldur	x8, [x29, #-56]
   2188c:	ldr	x8, [x8]
   21890:	stur	x8, [x29, #-56]
   21894:	b	217ac <gl_rbtree_list_check_invariants@@Base+0x1f8c>
   21898:	ldr	x8, [sp, #72]
   2189c:	stur	x8, [x29, #-8]
   218a0:	b	218b0 <gl_rbtree_list_check_invariants@@Base+0x2090>
   218a4:	b	21628 <gl_rbtree_list_check_invariants@@Base+0x1e08>
   218a8:	mov	x8, #0xffffffffffffffff    	// #-1
   218ac:	stur	x8, [x29, #-8]
   218b0:	ldur	x0, [x29, #-8]
   218b4:	ldp	x29, x30, [sp, #160]
   218b8:	add	sp, sp, #0xb0
   218bc:	ret
   218c0:	sub	sp, sp, #0x40
   218c4:	stp	x29, x30, [sp, #48]
   218c8:	add	x29, sp, #0x30
   218cc:	stur	x0, [x29, #-16]
   218d0:	str	x1, [sp, #24]
   218d4:	str	x2, [sp, #16]
   218d8:	ldur	x8, [x29, #-16]
   218dc:	ldr	x8, [x8, #40]
   218e0:	str	x8, [sp, #8]
   218e4:	ldr	x8, [sp, #8]
   218e8:	cbnz	x8, 21900 <gl_rbtree_list_check_invariants@@Base+0x20e0>
   218ec:	ldur	x0, [x29, #-16]
   218f0:	ldr	x1, [sp, #16]
   218f4:	bl	2057c <gl_rbtree_list_check_invariants@@Base+0xd5c>
   218f8:	stur	x0, [x29, #-8]
   218fc:	b	219bc <gl_rbtree_list_check_invariants@@Base+0x219c>
   21900:	ldr	x8, [sp, #24]
   21904:	ldr	x9, [sp, #8]
   21908:	ldr	x0, [x9, #40]
   2190c:	ldr	x1, [sp, #16]
   21910:	blr	x8
   21914:	str	w0, [sp, #4]
   21918:	ldr	w10, [sp, #4]
   2191c:	cmp	w10, #0x0
   21920:	cset	w10, ge  // ge = tcont
   21924:	tbnz	w10, #0, 2195c <gl_rbtree_list_check_invariants@@Base+0x213c>
   21928:	ldr	x8, [sp, #8]
   2192c:	ldr	x8, [x8, #8]
   21930:	cbnz	x8, 2194c <gl_rbtree_list_check_invariants@@Base+0x212c>
   21934:	ldur	x0, [x29, #-16]
   21938:	ldr	x1, [sp, #8]
   2193c:	ldr	x2, [sp, #16]
   21940:	bl	208f0 <gl_rbtree_list_check_invariants@@Base+0x10d0>
   21944:	stur	x0, [x29, #-8]
   21948:	b	219bc <gl_rbtree_list_check_invariants@@Base+0x219c>
   2194c:	ldr	x8, [sp, #8]
   21950:	ldr	x8, [x8, #8]
   21954:	str	x8, [sp, #8]
   21958:	b	219b8 <gl_rbtree_list_check_invariants@@Base+0x2198>
   2195c:	ldr	w8, [sp, #4]
   21960:	cmp	w8, #0x0
   21964:	cset	w8, le
   21968:	tbnz	w8, #0, 219a0 <gl_rbtree_list_check_invariants@@Base+0x2180>
   2196c:	ldr	x8, [sp, #8]
   21970:	ldr	x8, [x8]
   21974:	cbnz	x8, 21990 <gl_rbtree_list_check_invariants@@Base+0x2170>
   21978:	ldur	x0, [x29, #-16]
   2197c:	ldr	x1, [sp, #8]
   21980:	ldr	x2, [sp, #16]
   21984:	bl	207d4 <gl_rbtree_list_check_invariants@@Base+0xfb4>
   21988:	stur	x0, [x29, #-8]
   2198c:	b	219bc <gl_rbtree_list_check_invariants@@Base+0x219c>
   21990:	ldr	x8, [sp, #8]
   21994:	ldr	x8, [x8]
   21998:	str	x8, [sp, #8]
   2199c:	b	219b8 <gl_rbtree_list_check_invariants@@Base+0x2198>
   219a0:	ldur	x0, [x29, #-16]
   219a4:	ldr	x1, [sp, #8]
   219a8:	ldr	x2, [sp, #16]
   219ac:	bl	207d4 <gl_rbtree_list_check_invariants@@Base+0xfb4>
   219b0:	stur	x0, [x29, #-8]
   219b4:	b	219bc <gl_rbtree_list_check_invariants@@Base+0x219c>
   219b8:	b	21900 <gl_rbtree_list_check_invariants@@Base+0x20e0>
   219bc:	ldur	x0, [x29, #-8]
   219c0:	ldp	x29, x30, [sp, #48]
   219c4:	add	sp, sp, #0x40
   219c8:	ret
   219cc:	sub	sp, sp, #0x40
   219d0:	stp	x29, x30, [sp, #48]
   219d4:	add	x29, sp, #0x30
   219d8:	stur	x0, [x29, #-16]
   219dc:	str	x1, [sp, #24]
   219e0:	str	x2, [sp, #16]
   219e4:	ldur	x0, [x29, #-16]
   219e8:	ldr	x1, [sp, #24]
   219ec:	ldr	x2, [sp, #16]
   219f0:	bl	20fd8 <gl_rbtree_list_check_invariants@@Base+0x17b8>
   219f4:	str	x0, [sp, #8]
   219f8:	ldr	x8, [sp, #8]
   219fc:	cbz	x8, 21a18 <gl_rbtree_list_check_invariants@@Base+0x21f8>
   21a00:	ldur	x0, [x29, #-16]
   21a04:	ldr	x1, [sp, #8]
   21a08:	bl	20ad4 <gl_rbtree_list_check_invariants@@Base+0x12b4>
   21a0c:	and	w8, w0, #0x1
   21a10:	sturb	w8, [x29, #-1]
   21a14:	b	21a24 <gl_rbtree_list_check_invariants@@Base+0x2204>
   21a18:	mov	w8, wzr
   21a1c:	and	w8, w8, #0x1
   21a20:	sturb	w8, [x29, #-1]
   21a24:	ldurb	w8, [x29, #-1]
   21a28:	and	w0, w8, #0x1
   21a2c:	ldp	x29, x30, [sp, #48]
   21a30:	add	sp, sp, #0x40
   21a34:	ret
   21a38:	sub	sp, sp, #0x50
   21a3c:	stp	x29, x30, [sp, #64]
   21a40:	add	x29, sp, #0x40
   21a44:	mov	x8, #0x2                   	// #2
   21a48:	mov	x9, #0x30                  	// #48
   21a4c:	stur	w0, [x29, #-12]
   21a50:	stur	x1, [x29, #-24]
   21a54:	str	x2, [sp, #32]
   21a58:	ldur	x10, [x29, #-24]
   21a5c:	subs	x10, x10, #0x1
   21a60:	udiv	x10, x10, x8
   21a64:	str	x10, [sp, #24]
   21a68:	ldur	x10, [x29, #-24]
   21a6c:	udiv	x8, x10, x8
   21a70:	str	x8, [sp, #16]
   21a74:	mov	x0, x9
   21a78:	bl	af10 <malloc@plt>
   21a7c:	str	x0, [sp, #8]
   21a80:	ldr	x8, [sp, #8]
   21a84:	cbnz	x8, 21a94 <gl_rbtree_list_check_invariants@@Base+0x2274>
   21a88:	mov	x8, xzr
   21a8c:	stur	x8, [x29, #-8]
   21a90:	b	21bdc <gl_rbtree_list_check_invariants@@Base+0x23bc>
   21a94:	ldr	x8, [sp, #24]
   21a98:	cmp	x8, #0x0
   21a9c:	cset	w9, ls  // ls = plast
   21aa0:	tbnz	w9, #0, 21ae4 <gl_rbtree_list_check_invariants@@Base+0x22c4>
   21aa4:	ldur	w8, [x29, #-12]
   21aa8:	subs	w0, w8, #0x1
   21aac:	ldr	x1, [sp, #24]
   21ab0:	ldr	x2, [sp, #32]
   21ab4:	bl	21a38 <gl_rbtree_list_check_invariants@@Base+0x2218>
   21ab8:	ldr	x9, [sp, #8]
   21abc:	str	x0, [x9]
   21ac0:	ldr	x9, [sp, #8]
   21ac4:	ldr	x9, [x9]
   21ac8:	cbnz	x9, 21ad0 <gl_rbtree_list_check_invariants@@Base+0x22b0>
   21acc:	b	21bcc <gl_rbtree_list_check_invariants@@Base+0x23ac>
   21ad0:	ldr	x8, [sp, #8]
   21ad4:	ldr	x9, [sp, #8]
   21ad8:	ldr	x9, [x9]
   21adc:	str	x8, [x9, #16]
   21ae0:	b	21af0 <gl_rbtree_list_check_invariants@@Base+0x22d0>
   21ae4:	ldr	x8, [sp, #8]
   21ae8:	mov	x9, xzr
   21aec:	str	x9, [x8]
   21af0:	ldr	x8, [sp, #32]
   21af4:	ldr	x9, [sp, #24]
   21af8:	mov	x10, #0x8                   	// #8
   21afc:	mul	x9, x10, x9
   21b00:	add	x8, x8, x9
   21b04:	ldr	x8, [x8]
   21b08:	ldr	x9, [sp, #8]
   21b0c:	str	x8, [x9, #40]
   21b10:	ldr	x8, [sp, #16]
   21b14:	cmp	x8, #0x0
   21b18:	cset	w11, ls  // ls = plast
   21b1c:	tbnz	w11, #0, 21b74 <gl_rbtree_list_check_invariants@@Base+0x2354>
   21b20:	ldur	w8, [x29, #-12]
   21b24:	subs	w0, w8, #0x1
   21b28:	ldr	x1, [sp, #16]
   21b2c:	ldr	x9, [sp, #32]
   21b30:	ldr	x10, [sp, #24]
   21b34:	mov	x11, #0x8                   	// #8
   21b38:	mul	x10, x11, x10
   21b3c:	add	x9, x9, x10
   21b40:	add	x2, x9, #0x8
   21b44:	bl	21a38 <gl_rbtree_list_check_invariants@@Base+0x2218>
   21b48:	ldr	x9, [sp, #8]
   21b4c:	str	x0, [x9, #8]
   21b50:	ldr	x9, [sp, #8]
   21b54:	ldr	x9, [x9, #8]
   21b58:	cbnz	x9, 21b60 <gl_rbtree_list_check_invariants@@Base+0x2340>
   21b5c:	b	21bb4 <gl_rbtree_list_check_invariants@@Base+0x2394>
   21b60:	ldr	x8, [sp, #8]
   21b64:	ldr	x9, [sp, #8]
   21b68:	ldr	x9, [x9, #8]
   21b6c:	str	x8, [x9, #16]
   21b70:	b	21b80 <gl_rbtree_list_check_invariants@@Base+0x2360>
   21b74:	ldr	x8, [sp, #8]
   21b78:	mov	x9, xzr
   21b7c:	str	x9, [x8, #8]
   21b80:	ldur	w8, [x29, #-12]
   21b84:	mov	w9, wzr
   21b88:	mov	w10, #0x1                   	// #1
   21b8c:	cmp	w8, #0x0
   21b90:	csel	w8, w10, w9, eq  // eq = none
   21b94:	ldr	x11, [sp, #8]
   21b98:	str	w8, [x11, #24]
   21b9c:	ldur	x11, [x29, #-24]
   21ba0:	ldr	x12, [sp, #8]
   21ba4:	str	x11, [x12, #32]
   21ba8:	ldr	x11, [sp, #8]
   21bac:	stur	x11, [x29, #-8]
   21bb0:	b	21bdc <gl_rbtree_list_check_invariants@@Base+0x23bc>
   21bb4:	ldr	x8, [sp, #8]
   21bb8:	ldr	x8, [x8]
   21bbc:	cbz	x8, 21bcc <gl_rbtree_list_check_invariants@@Base+0x23ac>
   21bc0:	ldr	x8, [sp, #8]
   21bc4:	ldr	x0, [x8]
   21bc8:	bl	21bec <gl_rbtree_list_check_invariants@@Base+0x23cc>
   21bcc:	ldr	x0, [sp, #8]
   21bd0:	bl	a930 <free@plt>
   21bd4:	mov	x8, xzr
   21bd8:	stur	x8, [x29, #-8]
   21bdc:	ldur	x0, [x29, #-8]
   21be0:	ldp	x29, x30, [sp, #64]
   21be4:	add	sp, sp, #0x50
   21be8:	ret
   21bec:	sub	sp, sp, #0x20
   21bf0:	stp	x29, x30, [sp, #16]
   21bf4:	add	x29, sp, #0x10
   21bf8:	str	x0, [sp, #8]
   21bfc:	ldr	x8, [sp, #8]
   21c00:	ldr	x8, [x8]
   21c04:	cbz	x8, 21c14 <gl_rbtree_list_check_invariants@@Base+0x23f4>
   21c08:	ldr	x8, [sp, #8]
   21c0c:	ldr	x0, [x8]
   21c10:	bl	21bec <gl_rbtree_list_check_invariants@@Base+0x23cc>
   21c14:	ldr	x8, [sp, #8]
   21c18:	ldr	x8, [x8, #8]
   21c1c:	cbz	x8, 21c2c <gl_rbtree_list_check_invariants@@Base+0x240c>
   21c20:	ldr	x8, [sp, #8]
   21c24:	ldr	x0, [x8, #8]
   21c28:	bl	21bec <gl_rbtree_list_check_invariants@@Base+0x23cc>
   21c2c:	ldr	x0, [sp, #8]
   21c30:	bl	a930 <free@plt>
   21c34:	ldp	x29, x30, [sp, #16]
   21c38:	add	sp, sp, #0x20
   21c3c:	ret
   21c40:	sub	sp, sp, #0x20
   21c44:	str	x0, [sp, #24]
   21c48:	str	x1, [sp, #16]
   21c4c:	ldr	x8, [sp, #24]
   21c50:	str	x8, [sp, #8]
   21c54:	ldr	x8, [sp, #8]
   21c58:	ldr	x8, [x8]
   21c5c:	cbz	x8, 21ca0 <gl_rbtree_list_check_invariants@@Base+0x2480>
   21c60:	ldr	x8, [sp, #16]
   21c64:	ldr	x9, [sp, #8]
   21c68:	ldr	x9, [x9]
   21c6c:	ldr	x9, [x9, #32]
   21c70:	cmp	x8, x9
   21c74:	b.cs	21c88 <gl_rbtree_list_check_invariants@@Base+0x2468>  // b.hs, b.nlast
   21c78:	ldr	x8, [sp, #8]
   21c7c:	ldr	x8, [x8]
   21c80:	str	x8, [sp, #8]
   21c84:	b	21c54 <gl_rbtree_list_check_invariants@@Base+0x2434>
   21c88:	ldr	x8, [sp, #8]
   21c8c:	ldr	x8, [x8]
   21c90:	ldr	x8, [x8, #32]
   21c94:	ldr	x9, [sp, #16]
   21c98:	subs	x8, x9, x8
   21c9c:	str	x8, [sp, #16]
   21ca0:	ldr	x8, [sp, #16]
   21ca4:	cbnz	x8, 21cac <gl_rbtree_list_check_invariants@@Base+0x248c>
   21ca8:	b	21cc8 <gl_rbtree_list_check_invariants@@Base+0x24a8>
   21cac:	ldr	x8, [sp, #16]
   21cb0:	subs	x8, x8, #0x1
   21cb4:	str	x8, [sp, #16]
   21cb8:	ldr	x8, [sp, #8]
   21cbc:	ldr	x8, [x8, #8]
   21cc0:	str	x8, [sp, #8]
   21cc4:	b	21c54 <gl_rbtree_list_check_invariants@@Base+0x2434>
   21cc8:	ldr	x0, [sp, #8]
   21ccc:	add	sp, sp, #0x20
   21cd0:	ret
   21cd4:	sub	sp, sp, #0x40
   21cd8:	stp	x29, x30, [sp, #48]
   21cdc:	add	x29, sp, #0x30
   21ce0:	stur	x0, [x29, #-8]
   21ce4:	stur	x1, [x29, #-16]
   21ce8:	str	x2, [sp, #24]
   21cec:	ldr	x8, [sp, #24]
   21cf0:	ldr	w9, [x8, #24]
   21cf4:	cbnz	w9, 21d08 <gl_rbtree_list_check_invariants@@Base+0x24e8>
   21cf8:	ldur	x8, [x29, #-16]
   21cfc:	mov	w9, #0x1                   	// #1
   21d00:	str	w9, [x8, #24]
   21d04:	b	21f2c <gl_rbtree_list_check_invariants@@Base+0x270c>
   21d08:	ldr	x8, [sp, #24]
   21d0c:	ldr	x8, [x8, #16]
   21d10:	str	x8, [sp, #16]
   21d14:	ldr	x8, [sp, #16]
   21d18:	ldr	x8, [x8]
   21d1c:	ldr	x9, [sp, #24]
   21d20:	cmp	x8, x9
   21d24:	b.ne	21d38 <gl_rbtree_list_check_invariants@@Base+0x2518>  // b.any
   21d28:	ldr	x8, [sp, #16]
   21d2c:	ldr	x8, [x8, #8]
   21d30:	str	x8, [sp, #8]
   21d34:	b	21d60 <gl_rbtree_list_check_invariants@@Base+0x2540>
   21d38:	ldr	x8, [sp, #16]
   21d3c:	ldr	x8, [x8, #8]
   21d40:	ldr	x9, [sp, #24]
   21d44:	cmp	x8, x9
   21d48:	b.ne	21d5c <gl_rbtree_list_check_invariants@@Base+0x253c>  // b.any
   21d4c:	ldr	x8, [sp, #16]
   21d50:	ldr	x8, [x8]
   21d54:	str	x8, [sp, #8]
   21d58:	b	21d60 <gl_rbtree_list_check_invariants@@Base+0x2540>
   21d5c:	bl	a9e0 <abort@plt>
   21d60:	ldr	x8, [sp, #8]
   21d64:	cbz	x8, 21da0 <gl_rbtree_list_check_invariants@@Base+0x2580>
   21d68:	ldr	x8, [sp, #8]
   21d6c:	ldr	w9, [x8, #24]
   21d70:	cmp	w9, #0x1
   21d74:	b.ne	21da0 <gl_rbtree_list_check_invariants@@Base+0x2580>  // b.any
   21d78:	ldur	x8, [x29, #-16]
   21d7c:	mov	w9, #0x1                   	// #1
   21d80:	str	w9, [x8, #24]
   21d84:	ldr	x8, [sp, #8]
   21d88:	str	wzr, [x8, #24]
   21d8c:	ldr	x8, [sp, #24]
   21d90:	str	wzr, [x8, #24]
   21d94:	ldr	x8, [sp, #16]
   21d98:	stur	x8, [x29, #-16]
   21d9c:	b	21f08 <gl_rbtree_list_check_invariants@@Base+0x26e8>
   21da0:	ldr	x8, [sp, #16]
   21da4:	ldr	x8, [x8, #16]
   21da8:	cbnz	x8, 21dbc <gl_rbtree_list_check_invariants@@Base+0x259c>
   21dac:	ldur	x8, [x29, #-8]
   21db0:	add	x8, x8, #0x28
   21db4:	str	x8, [sp]
   21db8:	b	21e14 <gl_rbtree_list_check_invariants@@Base+0x25f4>
   21dbc:	ldr	x8, [sp, #16]
   21dc0:	ldr	x8, [x8, #16]
   21dc4:	ldr	x8, [x8]
   21dc8:	ldr	x9, [sp, #16]
   21dcc:	cmp	x8, x9
   21dd0:	b.ne	21de4 <gl_rbtree_list_check_invariants@@Base+0x25c4>  // b.any
   21dd4:	ldr	x8, [sp, #16]
   21dd8:	ldr	x8, [x8, #16]
   21ddc:	str	x8, [sp]
   21de0:	b	21e14 <gl_rbtree_list_check_invariants@@Base+0x25f4>
   21de4:	ldr	x8, [sp, #16]
   21de8:	ldr	x8, [x8, #16]
   21dec:	ldr	x8, [x8, #8]
   21df0:	ldr	x9, [sp, #16]
   21df4:	cmp	x8, x9
   21df8:	b.ne	21e10 <gl_rbtree_list_check_invariants@@Base+0x25f0>  // b.any
   21dfc:	ldr	x8, [sp, #16]
   21e00:	ldr	x8, [x8, #16]
   21e04:	add	x8, x8, #0x8
   21e08:	str	x8, [sp]
   21e0c:	b	21e14 <gl_rbtree_list_check_invariants@@Base+0x25f4>
   21e10:	bl	a9e0 <abort@plt>
   21e14:	ldr	x8, [sp, #16]
   21e18:	ldr	x8, [x8]
   21e1c:	ldr	x9, [sp, #24]
   21e20:	cmp	x8, x9
   21e24:	b.ne	21e98 <gl_rbtree_list_check_invariants@@Base+0x2678>  // b.any
   21e28:	ldr	x8, [sp, #24]
   21e2c:	ldr	x8, [x8, #8]
   21e30:	ldur	x9, [x29, #-16]
   21e34:	cmp	x8, x9
   21e38:	b.ne	21e64 <gl_rbtree_list_check_invariants@@Base+0x2644>  // b.any
   21e3c:	ldr	x0, [sp, #24]
   21e40:	ldur	x1, [x29, #-16]
   21e44:	bl	21f38 <gl_rbtree_list_check_invariants@@Base+0x2718>
   21e48:	ldr	x8, [sp, #16]
   21e4c:	str	x0, [x8]
   21e50:	ldr	x8, [sp, #24]
   21e54:	stur	x8, [x29, #-16]
   21e58:	ldr	x8, [sp, #16]
   21e5c:	ldr	x8, [x8]
   21e60:	str	x8, [sp, #24]
   21e64:	ldr	x0, [sp, #24]
   21e68:	ldr	x1, [sp, #16]
   21e6c:	bl	22060 <gl_rbtree_list_check_invariants@@Base+0x2840>
   21e70:	ldr	x8, [sp]
   21e74:	str	x0, [x8]
   21e78:	ldr	x8, [sp, #24]
   21e7c:	str	wzr, [x8, #24]
   21e80:	ldr	x8, [sp, #16]
   21e84:	mov	w9, #0x1                   	// #1
   21e88:	str	w9, [x8, #24]
   21e8c:	ldur	x8, [x29, #-16]
   21e90:	str	w9, [x8, #24]
   21e94:	b	21f04 <gl_rbtree_list_check_invariants@@Base+0x26e4>
   21e98:	ldr	x8, [sp, #24]
   21e9c:	ldr	x8, [x8]
   21ea0:	ldur	x9, [x29, #-16]
   21ea4:	cmp	x8, x9
   21ea8:	b.ne	21ed4 <gl_rbtree_list_check_invariants@@Base+0x26b4>  // b.any
   21eac:	ldur	x0, [x29, #-16]
   21eb0:	ldr	x1, [sp, #24]
   21eb4:	bl	22060 <gl_rbtree_list_check_invariants@@Base+0x2840>
   21eb8:	ldr	x8, [sp, #16]
   21ebc:	str	x0, [x8, #8]
   21ec0:	ldr	x8, [sp, #24]
   21ec4:	stur	x8, [x29, #-16]
   21ec8:	ldr	x8, [sp, #16]
   21ecc:	ldr	x8, [x8, #8]
   21ed0:	str	x8, [sp, #24]
   21ed4:	ldr	x0, [sp, #16]
   21ed8:	ldr	x1, [sp, #24]
   21edc:	bl	21f38 <gl_rbtree_list_check_invariants@@Base+0x2718>
   21ee0:	ldr	x8, [sp]
   21ee4:	str	x0, [x8]
   21ee8:	ldr	x8, [sp, #24]
   21eec:	str	wzr, [x8, #24]
   21ef0:	ldr	x8, [sp, #16]
   21ef4:	mov	w9, #0x1                   	// #1
   21ef8:	str	w9, [x8, #24]
   21efc:	ldur	x8, [x29, #-16]
   21f00:	str	w9, [x8, #24]
   21f04:	b	21f2c <gl_rbtree_list_check_invariants@@Base+0x270c>
   21f08:	ldur	x8, [x29, #-16]
   21f0c:	ldr	x8, [x8, #16]
   21f10:	str	x8, [sp, #24]
   21f14:	ldr	x8, [sp, #24]
   21f18:	cbnz	x8, 21f28 <gl_rbtree_list_check_invariants@@Base+0x2708>
   21f1c:	ldur	x8, [x29, #-16]
   21f20:	str	wzr, [x8, #24]
   21f24:	b	21f2c <gl_rbtree_list_check_invariants@@Base+0x270c>
   21f28:	b	21cec <gl_rbtree_list_check_invariants@@Base+0x24cc>
   21f2c:	ldp	x29, x30, [sp, #48]
   21f30:	add	sp, sp, #0x40
   21f34:	ret
   21f38:	sub	sp, sp, #0x50
   21f3c:	str	x0, [sp, #72]
   21f40:	str	x1, [sp, #64]
   21f44:	ldr	x8, [sp, #72]
   21f48:	ldr	x8, [x8]
   21f4c:	str	x8, [sp, #56]
   21f50:	ldr	x8, [sp, #64]
   21f54:	ldr	x8, [x8]
   21f58:	str	x8, [sp, #48]
   21f5c:	ldr	x8, [sp, #64]
   21f60:	ldr	x8, [x8, #8]
   21f64:	str	x8, [sp, #40]
   21f68:	ldr	x8, [sp, #48]
   21f6c:	ldr	x9, [sp, #72]
   21f70:	str	x8, [x9, #8]
   21f74:	ldr	x8, [sp, #72]
   21f78:	ldr	x9, [sp, #64]
   21f7c:	str	x8, [x9]
   21f80:	ldr	x8, [sp, #72]
   21f84:	ldr	x8, [x8, #16]
   21f88:	ldr	x9, [sp, #64]
   21f8c:	str	x8, [x9, #16]
   21f90:	ldr	x8, [sp, #64]
   21f94:	ldr	x9, [sp, #72]
   21f98:	str	x8, [x9, #16]
   21f9c:	ldr	x8, [sp, #48]
   21fa0:	cbz	x8, 21fb0 <gl_rbtree_list_check_invariants@@Base+0x2790>
   21fa4:	ldr	x8, [sp, #72]
   21fa8:	ldr	x9, [sp, #48]
   21fac:	str	x8, [x9, #16]
   21fb0:	ldr	x8, [sp, #56]
   21fb4:	cbz	x8, 21fc8 <gl_rbtree_list_check_invariants@@Base+0x27a8>
   21fb8:	ldr	x8, [sp, #56]
   21fbc:	ldr	x8, [x8, #32]
   21fc0:	str	x8, [sp, #32]
   21fc4:	b	21fd0 <gl_rbtree_list_check_invariants@@Base+0x27b0>
   21fc8:	mov	x8, xzr
   21fcc:	str	x8, [sp, #32]
   21fd0:	ldr	x8, [sp, #32]
   21fd4:	add	x8, x8, #0x1
   21fd8:	ldr	x9, [sp, #48]
   21fdc:	str	x8, [sp, #24]
   21fe0:	cbz	x9, 21ff4 <gl_rbtree_list_check_invariants@@Base+0x27d4>
   21fe4:	ldr	x8, [sp, #48]
   21fe8:	ldr	x8, [x8, #32]
   21fec:	str	x8, [sp, #16]
   21ff0:	b	21ffc <gl_rbtree_list_check_invariants@@Base+0x27dc>
   21ff4:	mov	x8, xzr
   21ff8:	str	x8, [sp, #16]
   21ffc:	ldr	x8, [sp, #16]
   22000:	ldr	x9, [sp, #24]
   22004:	add	x8, x9, x8
   22008:	ldr	x10, [sp, #72]
   2200c:	str	x8, [x10, #32]
   22010:	ldr	x8, [sp, #72]
   22014:	ldr	x8, [x8, #32]
   22018:	add	x8, x8, #0x1
   2201c:	ldr	x10, [sp, #40]
   22020:	str	x8, [sp, #8]
   22024:	cbz	x10, 22038 <gl_rbtree_list_check_invariants@@Base+0x2818>
   22028:	ldr	x8, [sp, #40]
   2202c:	ldr	x8, [x8, #32]
   22030:	str	x8, [sp]
   22034:	b	22040 <gl_rbtree_list_check_invariants@@Base+0x2820>
   22038:	mov	x8, xzr
   2203c:	str	x8, [sp]
   22040:	ldr	x8, [sp]
   22044:	ldr	x9, [sp, #8]
   22048:	add	x8, x9, x8
   2204c:	ldr	x10, [sp, #64]
   22050:	str	x8, [x10, #32]
   22054:	ldr	x0, [sp, #64]
   22058:	add	sp, sp, #0x50
   2205c:	ret
   22060:	sub	sp, sp, #0x50
   22064:	str	x0, [sp, #72]
   22068:	str	x1, [sp, #64]
   2206c:	ldr	x8, [sp, #72]
   22070:	ldr	x8, [x8]
   22074:	str	x8, [sp, #56]
   22078:	ldr	x8, [sp, #72]
   2207c:	ldr	x8, [x8, #8]
   22080:	str	x8, [sp, #48]
   22084:	ldr	x8, [sp, #64]
   22088:	ldr	x8, [x8, #8]
   2208c:	str	x8, [sp, #40]
   22090:	ldr	x8, [sp, #48]
   22094:	ldr	x9, [sp, #64]
   22098:	str	x8, [x9]
   2209c:	ldr	x8, [sp, #64]
   220a0:	ldr	x9, [sp, #72]
   220a4:	str	x8, [x9, #8]
   220a8:	ldr	x8, [sp, #64]
   220ac:	ldr	x8, [x8, #16]
   220b0:	ldr	x9, [sp, #72]
   220b4:	str	x8, [x9, #16]
   220b8:	ldr	x8, [sp, #72]
   220bc:	ldr	x9, [sp, #64]
   220c0:	str	x8, [x9, #16]
   220c4:	ldr	x8, [sp, #48]
   220c8:	cbz	x8, 220d8 <gl_rbtree_list_check_invariants@@Base+0x28b8>
   220cc:	ldr	x8, [sp, #64]
   220d0:	ldr	x9, [sp, #48]
   220d4:	str	x8, [x9, #16]
   220d8:	ldr	x8, [sp, #48]
   220dc:	cbz	x8, 220f0 <gl_rbtree_list_check_invariants@@Base+0x28d0>
   220e0:	ldr	x8, [sp, #48]
   220e4:	ldr	x8, [x8, #32]
   220e8:	str	x8, [sp, #32]
   220ec:	b	220f8 <gl_rbtree_list_check_invariants@@Base+0x28d8>
   220f0:	mov	x8, xzr
   220f4:	str	x8, [sp, #32]
   220f8:	ldr	x8, [sp, #32]
   220fc:	add	x8, x8, #0x1
   22100:	ldr	x9, [sp, #40]
   22104:	str	x8, [sp, #24]
   22108:	cbz	x9, 2211c <gl_rbtree_list_check_invariants@@Base+0x28fc>
   2210c:	ldr	x8, [sp, #40]
   22110:	ldr	x8, [x8, #32]
   22114:	str	x8, [sp, #16]
   22118:	b	22124 <gl_rbtree_list_check_invariants@@Base+0x2904>
   2211c:	mov	x8, xzr
   22120:	str	x8, [sp, #16]
   22124:	ldr	x8, [sp, #16]
   22128:	ldr	x9, [sp, #24]
   2212c:	add	x8, x9, x8
   22130:	ldr	x10, [sp, #64]
   22134:	str	x8, [x10, #32]
   22138:	ldr	x8, [sp, #56]
   2213c:	cbz	x8, 22150 <gl_rbtree_list_check_invariants@@Base+0x2930>
   22140:	ldr	x8, [sp, #56]
   22144:	ldr	x8, [x8, #32]
   22148:	str	x8, [sp, #8]
   2214c:	b	22158 <gl_rbtree_list_check_invariants@@Base+0x2938>
   22150:	mov	x8, xzr
   22154:	str	x8, [sp, #8]
   22158:	ldr	x8, [sp, #8]
   2215c:	add	x8, x8, #0x1
   22160:	ldr	x9, [sp, #64]
   22164:	ldr	x9, [x9, #32]
   22168:	add	x8, x8, x9
   2216c:	ldr	x9, [sp, #72]
   22170:	str	x8, [x9, #32]
   22174:	ldr	x0, [sp, #72]
   22178:	add	sp, sp, #0x50
   2217c:	ret
   22180:	sub	sp, sp, #0x90
   22184:	stp	x29, x30, [sp, #128]
   22188:	add	x29, sp, #0x80
   2218c:	stur	x0, [x29, #-8]
   22190:	stur	x1, [x29, #-16]
   22194:	ldur	x8, [x29, #-16]
   22198:	ldr	x8, [x8, #16]
   2219c:	stur	x8, [x29, #-24]
   221a0:	ldur	x8, [x29, #-16]
   221a4:	ldr	x8, [x8]
   221a8:	cbnz	x8, 22274 <gl_rbtree_list_check_invariants@@Base+0x2a54>
   221ac:	ldur	x8, [x29, #-16]
   221b0:	ldr	x8, [x8, #8]
   221b4:	stur	x8, [x29, #-32]
   221b8:	ldur	x8, [x29, #-32]
   221bc:	cbz	x8, 221d4 <gl_rbtree_list_check_invariants@@Base+0x29b4>
   221c0:	ldur	x8, [x29, #-24]
   221c4:	ldur	x9, [x29, #-32]
   221c8:	str	x8, [x9, #16]
   221cc:	ldur	x8, [x29, #-32]
   221d0:	str	wzr, [x8, #24]
   221d4:	ldur	x8, [x29, #-24]
   221d8:	cbnz	x8, 221ec <gl_rbtree_list_check_invariants@@Base+0x29cc>
   221dc:	ldur	x8, [x29, #-32]
   221e0:	ldur	x9, [x29, #-8]
   221e4:	str	x8, [x9, #40]
   221e8:	b	22270 <gl_rbtree_list_check_invariants@@Base+0x2a50>
   221ec:	ldur	x8, [x29, #-24]
   221f0:	ldr	x8, [x8]
   221f4:	ldur	x9, [x29, #-16]
   221f8:	cmp	x8, x9
   221fc:	b.ne	22210 <gl_rbtree_list_check_invariants@@Base+0x29f0>  // b.any
   22200:	ldur	x8, [x29, #-32]
   22204:	ldur	x9, [x29, #-24]
   22208:	str	x8, [x9]
   2220c:	b	2221c <gl_rbtree_list_check_invariants@@Base+0x29fc>
   22210:	ldur	x8, [x29, #-32]
   22214:	ldur	x9, [x29, #-24]
   22218:	str	x8, [x9, #8]
   2221c:	ldur	x8, [x29, #-24]
   22220:	stur	x8, [x29, #-40]
   22224:	ldur	x8, [x29, #-40]
   22228:	cbz	x8, 2224c <gl_rbtree_list_check_invariants@@Base+0x2a2c>
   2222c:	ldur	x8, [x29, #-40]
   22230:	ldr	x9, [x8, #32]
   22234:	subs	x9, x9, #0x1
   22238:	str	x9, [x8, #32]
   2223c:	ldur	x8, [x29, #-40]
   22240:	ldr	x8, [x8, #16]
   22244:	stur	x8, [x29, #-40]
   22248:	b	22224 <gl_rbtree_list_check_invariants@@Base+0x2a04>
   2224c:	ldur	x8, [x29, #-32]
   22250:	cbnz	x8, 22270 <gl_rbtree_list_check_invariants@@Base+0x2a50>
   22254:	ldur	x8, [x29, #-16]
   22258:	ldr	w9, [x8, #24]
   2225c:	cbnz	w9, 22270 <gl_rbtree_list_check_invariants@@Base+0x2a50>
   22260:	ldur	x0, [x29, #-8]
   22264:	ldur	x1, [x29, #-32]
   22268:	ldur	x2, [x29, #-24]
   2226c:	bl	2250c <gl_rbtree_list_check_invariants@@Base+0x2cec>
   22270:	b	22500 <gl_rbtree_list_check_invariants@@Base+0x2ce0>
   22274:	ldur	x8, [x29, #-16]
   22278:	ldr	x8, [x8, #8]
   2227c:	cbnz	x8, 2231c <gl_rbtree_list_check_invariants@@Base+0x2afc>
   22280:	ldur	x8, [x29, #-16]
   22284:	ldr	x8, [x8]
   22288:	stur	x8, [x29, #-48]
   2228c:	ldur	x8, [x29, #-24]
   22290:	ldur	x9, [x29, #-48]
   22294:	str	x8, [x9, #16]
   22298:	ldur	x8, [x29, #-48]
   2229c:	str	wzr, [x8, #24]
   222a0:	ldur	x8, [x29, #-24]
   222a4:	cbnz	x8, 222b8 <gl_rbtree_list_check_invariants@@Base+0x2a98>
   222a8:	ldur	x8, [x29, #-48]
   222ac:	ldur	x9, [x29, #-8]
   222b0:	str	x8, [x9, #40]
   222b4:	b	22318 <gl_rbtree_list_check_invariants@@Base+0x2af8>
   222b8:	ldur	x8, [x29, #-24]
   222bc:	ldr	x8, [x8]
   222c0:	ldur	x9, [x29, #-16]
   222c4:	cmp	x8, x9
   222c8:	b.ne	222dc <gl_rbtree_list_check_invariants@@Base+0x2abc>  // b.any
   222cc:	ldur	x8, [x29, #-48]
   222d0:	ldur	x9, [x29, #-24]
   222d4:	str	x8, [x9]
   222d8:	b	222e8 <gl_rbtree_list_check_invariants@@Base+0x2ac8>
   222dc:	ldur	x8, [x29, #-48]
   222e0:	ldur	x9, [x29, #-24]
   222e4:	str	x8, [x9, #8]
   222e8:	ldur	x8, [x29, #-24]
   222ec:	stur	x8, [x29, #-56]
   222f0:	ldur	x8, [x29, #-56]
   222f4:	cbz	x8, 22318 <gl_rbtree_list_check_invariants@@Base+0x2af8>
   222f8:	ldur	x8, [x29, #-56]
   222fc:	ldr	x9, [x8, #32]
   22300:	subs	x9, x9, #0x1
   22304:	str	x9, [x8, #32]
   22308:	ldur	x8, [x29, #-56]
   2230c:	ldr	x8, [x8, #16]
   22310:	stur	x8, [x29, #-56]
   22314:	b	222f0 <gl_rbtree_list_check_invariants@@Base+0x2ad0>
   22318:	b	22500 <gl_rbtree_list_check_invariants@@Base+0x2ce0>
   2231c:	ldur	x8, [x29, #-16]
   22320:	ldr	x8, [x8]
   22324:	str	x8, [sp, #64]
   22328:	ldr	x8, [sp, #64]
   2232c:	ldr	x8, [x8, #8]
   22330:	cbz	x8, 22344 <gl_rbtree_list_check_invariants@@Base+0x2b24>
   22334:	ldr	x8, [sp, #64]
   22338:	ldr	x8, [x8, #8]
   2233c:	str	x8, [sp, #64]
   22340:	b	22328 <gl_rbtree_list_check_invariants@@Base+0x2b08>
   22344:	ldr	x8, [sp, #64]
   22348:	ldr	x8, [x8, #16]
   2234c:	str	x8, [sp, #56]
   22350:	ldr	x8, [sp, #64]
   22354:	ldr	x8, [x8]
   22358:	str	x8, [sp, #48]
   2235c:	ldr	x8, [sp, #64]
   22360:	ldr	w9, [x8, #24]
   22364:	str	w9, [sp, #44]
   22368:	ldr	x8, [sp, #56]
   2236c:	ldur	x10, [x29, #-16]
   22370:	cmp	x8, x10
   22374:	b.eq	22398 <gl_rbtree_list_check_invariants@@Base+0x2b78>  // b.none
   22378:	ldr	x8, [sp, #48]
   2237c:	cbz	x8, 2238c <gl_rbtree_list_check_invariants@@Base+0x2b6c>
   22380:	ldr	x8, [sp, #56]
   22384:	ldr	x9, [sp, #48]
   22388:	str	x8, [x9, #16]
   2238c:	ldr	x8, [sp, #48]
   22390:	ldr	x9, [sp, #56]
   22394:	str	x8, [x9, #8]
   22398:	ldr	x8, [sp, #56]
   2239c:	str	x8, [sp, #32]
   223a0:	ldr	x8, [sp, #32]
   223a4:	cbz	x8, 223c8 <gl_rbtree_list_check_invariants@@Base+0x2ba8>
   223a8:	ldr	x8, [sp, #32]
   223ac:	ldr	x9, [x8, #32]
   223b0:	subs	x9, x9, #0x1
   223b4:	str	x9, [x8, #32]
   223b8:	ldr	x8, [sp, #32]
   223bc:	ldr	x8, [x8, #16]
   223c0:	str	x8, [sp, #32]
   223c4:	b	223a0 <gl_rbtree_list_check_invariants@@Base+0x2b80>
   223c8:	ldr	x8, [sp, #56]
   223cc:	ldur	x9, [x29, #-16]
   223d0:	cmp	x8, x9
   223d4:	b.eq	223f8 <gl_rbtree_list_check_invariants@@Base+0x2bd8>  // b.none
   223d8:	ldur	x8, [x29, #-16]
   223dc:	ldr	x8, [x8]
   223e0:	ldr	x9, [sp, #64]
   223e4:	str	x8, [x9]
   223e8:	ldr	x8, [sp, #64]
   223ec:	ldr	x9, [sp, #64]
   223f0:	ldr	x9, [x9]
   223f4:	str	x8, [x9, #16]
   223f8:	ldur	x8, [x29, #-16]
   223fc:	ldr	x8, [x8, #8]
   22400:	ldr	x9, [sp, #64]
   22404:	str	x8, [x9, #8]
   22408:	ldr	x8, [sp, #64]
   2240c:	ldr	x9, [sp, #64]
   22410:	ldr	x9, [x9, #8]
   22414:	str	x8, [x9, #16]
   22418:	ldur	x8, [x29, #-16]
   2241c:	ldr	w10, [x8, #24]
   22420:	ldr	x8, [sp, #64]
   22424:	str	w10, [x8, #24]
   22428:	ldur	x8, [x29, #-16]
   2242c:	ldr	x8, [x8, #32]
   22430:	ldr	x9, [sp, #64]
   22434:	str	x8, [x9, #32]
   22438:	ldur	x8, [x29, #-24]
   2243c:	ldr	x9, [sp, #64]
   22440:	str	x8, [x9, #16]
   22444:	ldur	x8, [x29, #-24]
   22448:	cbnz	x8, 2245c <gl_rbtree_list_check_invariants@@Base+0x2c3c>
   2244c:	ldr	x8, [sp, #64]
   22450:	ldur	x9, [x29, #-8]
   22454:	str	x8, [x9, #40]
   22458:	b	2248c <gl_rbtree_list_check_invariants@@Base+0x2c6c>
   2245c:	ldur	x8, [x29, #-24]
   22460:	ldr	x8, [x8]
   22464:	ldur	x9, [x29, #-16]
   22468:	cmp	x8, x9
   2246c:	b.ne	22480 <gl_rbtree_list_check_invariants@@Base+0x2c60>  // b.any
   22470:	ldr	x8, [sp, #64]
   22474:	ldur	x9, [x29, #-24]
   22478:	str	x8, [x9]
   2247c:	b	2248c <gl_rbtree_list_check_invariants@@Base+0x2c6c>
   22480:	ldr	x8, [sp, #64]
   22484:	ldur	x9, [x29, #-24]
   22488:	str	x8, [x9, #8]
   2248c:	ldr	w8, [sp, #44]
   22490:	cbnz	w8, 22500 <gl_rbtree_list_check_invariants@@Base+0x2ce0>
   22494:	ldr	x8, [sp, #48]
   22498:	cbz	x8, 224b8 <gl_rbtree_list_check_invariants@@Base+0x2c98>
   2249c:	ldr	x8, [sp, #48]
   224a0:	ldr	w9, [x8, #24]
   224a4:	cmp	w9, #0x1
   224a8:	b.ne	224b8 <gl_rbtree_list_check_invariants@@Base+0x2c98>  // b.any
   224ac:	ldr	x8, [sp, #48]
   224b0:	str	wzr, [x8, #24]
   224b4:	b	22500 <gl_rbtree_list_check_invariants@@Base+0x2ce0>
   224b8:	ldur	x0, [x29, #-8]
   224bc:	ldr	x1, [sp, #48]
   224c0:	ldr	x8, [sp, #56]
   224c4:	ldur	x9, [x29, #-16]
   224c8:	cmp	x8, x9
   224cc:	str	x0, [sp, #24]
   224d0:	str	x1, [sp, #16]
   224d4:	b.eq	224e4 <gl_rbtree_list_check_invariants@@Base+0x2cc4>  // b.none
   224d8:	ldr	x8, [sp, #56]
   224dc:	str	x8, [sp, #8]
   224e0:	b	224ec <gl_rbtree_list_check_invariants@@Base+0x2ccc>
   224e4:	ldr	x8, [sp, #64]
   224e8:	str	x8, [sp, #8]
   224ec:	ldr	x8, [sp, #8]
   224f0:	ldr	x0, [sp, #24]
   224f4:	ldr	x1, [sp, #16]
   224f8:	mov	x2, x8
   224fc:	bl	2250c <gl_rbtree_list_check_invariants@@Base+0x2cec>
   22500:	ldp	x29, x30, [sp, #128]
   22504:	add	sp, sp, #0x90
   22508:	ret
   2250c:	sub	sp, sp, #0x40
   22510:	stp	x29, x30, [sp, #48]
   22514:	add	x29, sp, #0x30
   22518:	stur	x0, [x29, #-8]
   2251c:	stur	x1, [x29, #-16]
   22520:	str	x2, [sp, #24]
   22524:	ldr	x8, [sp, #24]
   22528:	ldr	x8, [x8, #16]
   2252c:	cbnz	x8, 22540 <gl_rbtree_list_check_invariants@@Base+0x2d20>
   22530:	ldur	x8, [x29, #-8]
   22534:	add	x8, x8, #0x28
   22538:	str	x8, [sp, #16]
   2253c:	b	22598 <gl_rbtree_list_check_invariants@@Base+0x2d78>
   22540:	ldr	x8, [sp, #24]
   22544:	ldr	x8, [x8, #16]
   22548:	ldr	x8, [x8]
   2254c:	ldr	x9, [sp, #24]
   22550:	cmp	x8, x9
   22554:	b.ne	22568 <gl_rbtree_list_check_invariants@@Base+0x2d48>  // b.any
   22558:	ldr	x8, [sp, #24]
   2255c:	ldr	x8, [x8, #16]
   22560:	str	x8, [sp, #16]
   22564:	b	22598 <gl_rbtree_list_check_invariants@@Base+0x2d78>
   22568:	ldr	x8, [sp, #24]
   2256c:	ldr	x8, [x8, #16]
   22570:	ldr	x8, [x8, #8]
   22574:	ldr	x9, [sp, #24]
   22578:	cmp	x8, x9
   2257c:	b.ne	22594 <gl_rbtree_list_check_invariants@@Base+0x2d74>  // b.any
   22580:	ldr	x8, [sp, #24]
   22584:	ldr	x8, [x8, #16]
   22588:	add	x8, x8, #0x8
   2258c:	str	x8, [sp, #16]
   22590:	b	22598 <gl_rbtree_list_check_invariants@@Base+0x2d78>
   22594:	bl	a9e0 <abort@plt>
   22598:	ldr	x8, [sp, #24]
   2259c:	ldr	x8, [x8]
   225a0:	ldur	x9, [x29, #-16]
   225a4:	cmp	x8, x9
   225a8:	b.ne	22734 <gl_rbtree_list_check_invariants@@Base+0x2f14>  // b.any
   225ac:	ldr	x8, [sp, #24]
   225b0:	ldr	x8, [x8, #8]
   225b4:	str	x8, [sp, #8]
   225b8:	ldr	x8, [sp, #8]
   225bc:	ldr	w9, [x8, #24]
   225c0:	cmp	w9, #0x1
   225c4:	b.ne	22604 <gl_rbtree_list_check_invariants@@Base+0x2de4>  // b.any
   225c8:	ldr	x0, [sp, #24]
   225cc:	ldr	x1, [sp, #8]
   225d0:	bl	21f38 <gl_rbtree_list_check_invariants@@Base+0x2718>
   225d4:	ldr	x8, [sp, #16]
   225d8:	str	x0, [x8]
   225dc:	ldr	x8, [sp, #24]
   225e0:	mov	w9, #0x1                   	// #1
   225e4:	str	w9, [x8, #24]
   225e8:	ldr	x8, [sp, #8]
   225ec:	str	wzr, [x8, #24]
   225f0:	ldr	x8, [sp, #8]
   225f4:	str	x8, [sp, #16]
   225f8:	ldr	x8, [sp, #24]
   225fc:	ldr	x8, [x8, #8]
   22600:	str	x8, [sp, #8]
   22604:	ldr	x8, [sp, #8]
   22608:	ldr	x8, [x8, #8]
   2260c:	cbz	x8, 22660 <gl_rbtree_list_check_invariants@@Base+0x2e40>
   22610:	ldr	x8, [sp, #8]
   22614:	ldr	x8, [x8, #8]
   22618:	ldr	w9, [x8, #24]
   2261c:	cmp	w9, #0x1
   22620:	b.ne	22660 <gl_rbtree_list_check_invariants@@Base+0x2e40>  // b.any
   22624:	ldr	x0, [sp, #24]
   22628:	ldr	x1, [sp, #8]
   2262c:	bl	21f38 <gl_rbtree_list_check_invariants@@Base+0x2718>
   22630:	ldr	x8, [sp, #16]
   22634:	str	x0, [x8]
   22638:	ldr	x8, [sp, #24]
   2263c:	ldr	w9, [x8, #24]
   22640:	ldr	x8, [sp, #8]
   22644:	str	w9, [x8, #24]
   22648:	ldr	x8, [sp, #24]
   2264c:	str	wzr, [x8, #24]
   22650:	ldr	x8, [sp, #8]
   22654:	ldr	x8, [x8, #8]
   22658:	str	wzr, [x8, #24]
   2265c:	b	228f4 <gl_rbtree_list_check_invariants@@Base+0x30d4>
   22660:	ldr	x8, [sp, #8]
   22664:	ldr	x8, [x8]
   22668:	cbz	x8, 226f4 <gl_rbtree_list_check_invariants@@Base+0x2ed4>
   2266c:	ldr	x8, [sp, #8]
   22670:	ldr	x8, [x8]
   22674:	ldr	w9, [x8, #24]
   22678:	cmp	w9, #0x1
   2267c:	b.ne	226f4 <gl_rbtree_list_check_invariants@@Base+0x2ed4>  // b.any
   22680:	ldr	x8, [sp, #8]
   22684:	ldr	x0, [x8]
   22688:	ldr	x1, [sp, #8]
   2268c:	bl	22060 <gl_rbtree_list_check_invariants@@Base+0x2840>
   22690:	ldr	x8, [sp, #24]
   22694:	str	x0, [x8, #8]
   22698:	ldr	x8, [sp, #8]
   2269c:	mov	w9, #0x1                   	// #1
   226a0:	str	w9, [x8, #24]
   226a4:	ldr	x8, [sp, #24]
   226a8:	ldr	x8, [x8, #8]
   226ac:	str	x8, [sp, #8]
   226b0:	ldr	x8, [sp, #8]
   226b4:	str	wzr, [x8, #24]
   226b8:	ldr	x0, [sp, #24]
   226bc:	ldr	x1, [sp, #8]
   226c0:	bl	21f38 <gl_rbtree_list_check_invariants@@Base+0x2718>
   226c4:	ldr	x8, [sp, #16]
   226c8:	str	x0, [x8]
   226cc:	ldr	x8, [sp, #24]
   226d0:	ldr	w9, [x8, #24]
   226d4:	ldr	x8, [sp, #8]
   226d8:	str	w9, [x8, #24]
   226dc:	ldr	x8, [sp, #24]
   226e0:	str	wzr, [x8, #24]
   226e4:	ldr	x8, [sp, #8]
   226e8:	ldr	x8, [x8, #8]
   226ec:	str	wzr, [x8, #24]
   226f0:	b	228f4 <gl_rbtree_list_check_invariants@@Base+0x30d4>
   226f4:	ldr	x8, [sp, #24]
   226f8:	ldr	w9, [x8, #24]
   226fc:	cbnz	w9, 22718 <gl_rbtree_list_check_invariants@@Base+0x2ef8>
   22700:	ldr	x8, [sp, #8]
   22704:	mov	w9, #0x1                   	// #1
   22708:	str	w9, [x8, #24]
   2270c:	ldr	x8, [sp, #24]
   22710:	stur	x8, [x29, #-16]
   22714:	b	22730 <gl_rbtree_list_check_invariants@@Base+0x2f10>
   22718:	ldr	x8, [sp, #24]
   2271c:	str	wzr, [x8, #24]
   22720:	ldr	x8, [sp, #8]
   22724:	mov	w9, #0x1                   	// #1
   22728:	str	w9, [x8, #24]
   2272c:	b	228f4 <gl_rbtree_list_check_invariants@@Base+0x30d4>
   22730:	b	228d8 <gl_rbtree_list_check_invariants@@Base+0x30b8>
   22734:	ldr	x8, [sp, #24]
   22738:	ldr	x8, [x8, #8]
   2273c:	ldur	x9, [x29, #-16]
   22740:	cmp	x8, x9
   22744:	b.ne	228d4 <gl_rbtree_list_check_invariants@@Base+0x30b4>  // b.any
   22748:	ldr	x8, [sp, #24]
   2274c:	ldr	x8, [x8]
   22750:	str	x8, [sp]
   22754:	ldr	x8, [sp]
   22758:	ldr	w9, [x8, #24]
   2275c:	cmp	w9, #0x1
   22760:	b.ne	227a4 <gl_rbtree_list_check_invariants@@Base+0x2f84>  // b.any
   22764:	ldr	x0, [sp]
   22768:	ldr	x1, [sp, #24]
   2276c:	bl	22060 <gl_rbtree_list_check_invariants@@Base+0x2840>
   22770:	ldr	x8, [sp, #16]
   22774:	str	x0, [x8]
   22778:	ldr	x8, [sp, #24]
   2277c:	mov	w9, #0x1                   	// #1
   22780:	str	w9, [x8, #24]
   22784:	ldr	x8, [sp]
   22788:	str	wzr, [x8, #24]
   2278c:	ldr	x8, [sp]
   22790:	add	x8, x8, #0x8
   22794:	str	x8, [sp, #16]
   22798:	ldr	x8, [sp, #24]
   2279c:	ldr	x8, [x8]
   227a0:	str	x8, [sp]
   227a4:	ldr	x8, [sp]
   227a8:	ldr	x8, [x8]
   227ac:	cbz	x8, 22800 <gl_rbtree_list_check_invariants@@Base+0x2fe0>
   227b0:	ldr	x8, [sp]
   227b4:	ldr	x8, [x8]
   227b8:	ldr	w9, [x8, #24]
   227bc:	cmp	w9, #0x1
   227c0:	b.ne	22800 <gl_rbtree_list_check_invariants@@Base+0x2fe0>  // b.any
   227c4:	ldr	x0, [sp]
   227c8:	ldr	x1, [sp, #24]
   227cc:	bl	22060 <gl_rbtree_list_check_invariants@@Base+0x2840>
   227d0:	ldr	x8, [sp, #16]
   227d4:	str	x0, [x8]
   227d8:	ldr	x8, [sp, #24]
   227dc:	ldr	w9, [x8, #24]
   227e0:	ldr	x8, [sp]
   227e4:	str	w9, [x8, #24]
   227e8:	ldr	x8, [sp, #24]
   227ec:	str	wzr, [x8, #24]
   227f0:	ldr	x8, [sp]
   227f4:	ldr	x8, [x8]
   227f8:	str	wzr, [x8, #24]
   227fc:	b	228f4 <gl_rbtree_list_check_invariants@@Base+0x30d4>
   22800:	ldr	x8, [sp]
   22804:	ldr	x8, [x8, #8]
   22808:	cbz	x8, 22894 <gl_rbtree_list_check_invariants@@Base+0x3074>
   2280c:	ldr	x8, [sp]
   22810:	ldr	x8, [x8, #8]
   22814:	ldr	w9, [x8, #24]
   22818:	cmp	w9, #0x1
   2281c:	b.ne	22894 <gl_rbtree_list_check_invariants@@Base+0x3074>  // b.any
   22820:	ldr	x0, [sp]
   22824:	ldr	x8, [sp]
   22828:	ldr	x1, [x8, #8]
   2282c:	bl	21f38 <gl_rbtree_list_check_invariants@@Base+0x2718>
   22830:	ldr	x8, [sp, #24]
   22834:	str	x0, [x8]
   22838:	ldr	x8, [sp]
   2283c:	mov	w9, #0x1                   	// #1
   22840:	str	w9, [x8, #24]
   22844:	ldr	x8, [sp, #24]
   22848:	ldr	x8, [x8]
   2284c:	str	x8, [sp]
   22850:	ldr	x8, [sp]
   22854:	str	wzr, [x8, #24]
   22858:	ldr	x0, [sp]
   2285c:	ldr	x1, [sp, #24]
   22860:	bl	22060 <gl_rbtree_list_check_invariants@@Base+0x2840>
   22864:	ldr	x8, [sp, #16]
   22868:	str	x0, [x8]
   2286c:	ldr	x8, [sp, #24]
   22870:	ldr	w9, [x8, #24]
   22874:	ldr	x8, [sp]
   22878:	str	w9, [x8, #24]
   2287c:	ldr	x8, [sp, #24]
   22880:	str	wzr, [x8, #24]
   22884:	ldr	x8, [sp]
   22888:	ldr	x8, [x8]
   2288c:	str	wzr, [x8, #24]
   22890:	b	228f4 <gl_rbtree_list_check_invariants@@Base+0x30d4>
   22894:	ldr	x8, [sp, #24]
   22898:	ldr	w9, [x8, #24]
   2289c:	cbnz	w9, 228b8 <gl_rbtree_list_check_invariants@@Base+0x3098>
   228a0:	ldr	x8, [sp]
   228a4:	mov	w9, #0x1                   	// #1
   228a8:	str	w9, [x8, #24]
   228ac:	ldr	x8, [sp, #24]
   228b0:	stur	x8, [x29, #-16]
   228b4:	b	228d0 <gl_rbtree_list_check_invariants@@Base+0x30b0>
   228b8:	ldr	x8, [sp, #24]
   228bc:	str	wzr, [x8, #24]
   228c0:	ldr	x8, [sp]
   228c4:	mov	w9, #0x1                   	// #1
   228c8:	str	w9, [x8, #24]
   228cc:	b	228f4 <gl_rbtree_list_check_invariants@@Base+0x30d4>
   228d0:	b	228d8 <gl_rbtree_list_check_invariants@@Base+0x30b8>
   228d4:	bl	a9e0 <abort@plt>
   228d8:	ldur	x8, [x29, #-16]
   228dc:	ldr	x8, [x8, #16]
   228e0:	str	x8, [sp, #24]
   228e4:	ldr	x8, [sp, #24]
   228e8:	cbnz	x8, 228f0 <gl_rbtree_list_check_invariants@@Base+0x30d0>
   228ec:	b	228f4 <gl_rbtree_list_check_invariants@@Base+0x30d4>
   228f0:	b	22524 <gl_rbtree_list_check_invariants@@Base+0x2d04>
   228f4:	ldp	x29, x30, [sp, #48]
   228f8:	add	sp, sp, #0x40
   228fc:	ret

0000000000022900 <renameatu@@Base>:
   22900:	sub	sp, sp, #0x190
   22904:	stp	x29, x30, [sp, #368]
   22908:	str	x28, [sp, #384]
   2290c:	add	x29, sp, #0x170
   22910:	add	x8, sp, #0x98
   22914:	mov	w9, #0xffffffff            	// #-1
   22918:	mov	w10, #0x16                  	// #22
   2291c:	str	w0, [x8, #208]
   22920:	str	x1, [x8, #200]
   22924:	str	w2, [x8, #196]
   22928:	str	x3, [x8, #184]
   2292c:	str	w4, [x8, #180]
   22930:	str	w9, [x8, #176]
   22934:	str	w10, [x8, #172]
   22938:	ldr	w0, [x8, #208]
   2293c:	ldr	x1, [x8, #200]
   22940:	ldr	w2, [x8, #196]
   22944:	ldr	x3, [x8, #184]
   22948:	ldr	w4, [x8, #180]
   2294c:	str	x8, [sp, #8]
   22950:	bl	b470 <renameat2@plt>
   22954:	ldr	x8, [sp, #8]
   22958:	str	w0, [x8, #176]
   2295c:	bl	aa20 <__errno_location@plt>
   22960:	ldr	w9, [x0]
   22964:	ldr	x8, [sp, #8]
   22968:	str	w9, [x8, #172]
   2296c:	ldr	w9, [x8, #176]
   22970:	cmp	w9, #0x0
   22974:	cset	w9, ge  // ge = tcont
   22978:	tbnz	w9, #0, 229ac <renameatu@@Base+0xac>
   2297c:	ldr	x8, [sp, #8]
   22980:	ldr	w9, [x8, #172]
   22984:	cmp	w9, #0x16
   22988:	b.eq	229bc <renameatu@@Base+0xbc>  // b.none
   2298c:	ldr	x8, [sp, #8]
   22990:	ldr	w9, [x8, #172]
   22994:	cmp	w9, #0x26
   22998:	b.eq	229bc <renameatu@@Base+0xbc>  // b.none
   2299c:	ldr	x8, [sp, #8]
   229a0:	ldr	w9, [x8, #172]
   229a4:	cmp	w9, #0x5f
   229a8:	b.eq	229bc <renameatu@@Base+0xbc>  // b.none
   229ac:	ldr	x8, [sp, #8]
   229b0:	ldr	w9, [x8, #176]
   229b4:	str	w9, [x8, #212]
   229b8:	b	22cd8 <renameatu@@Base+0x3d8>
   229bc:	ldr	x8, [sp, #8]
   229c0:	ldr	x9, [x8, #200]
   229c4:	str	x9, [x8, #144]
   229c8:	ldr	x9, [x8, #184]
   229cc:	str	x9, [x8, #136]
   229d0:	mov	w10, #0x14                  	// #20
   229d4:	str	w10, [x8, #128]
   229d8:	mov	w10, #0x0                   	// #0
   229dc:	strb	w10, [sp, #23]
   229e0:	ldr	w10, [x8, #180]
   229e4:	cbz	w10, 22a70 <renameatu@@Base+0x170>
   229e8:	ldr	x8, [sp, #8]
   229ec:	ldr	w9, [x8, #180]
   229f0:	and	w9, w9, #0xfffffffe
   229f4:	cbz	w9, 22a0c <renameatu@@Base+0x10c>
   229f8:	mov	w0, #0x5f                  	// #95
   229fc:	bl	22cf0 <renameatu@@Base+0x3f0>
   22a00:	ldr	x8, [sp, #8]
   22a04:	str	w0, [x8, #212]
   22a08:	b	22cd8 <renameatu@@Base+0x3d8>
   22a0c:	ldr	x8, [sp, #8]
   22a10:	ldr	w0, [x8, #196]
   22a14:	ldr	x1, [x8, #184]
   22a18:	add	x2, sp, #0x18
   22a1c:	bl	b480 <lstatat@plt>
   22a20:	cbz	w0, 22a34 <renameatu@@Base+0x134>
   22a24:	bl	aa20 <__errno_location@plt>
   22a28:	ldr	w8, [x0]
   22a2c:	cmp	w8, #0x4b
   22a30:	b.ne	22a48 <renameatu@@Base+0x148>  // b.any
   22a34:	mov	w0, #0x11                  	// #17
   22a38:	bl	22cf0 <renameatu@@Base+0x3f0>
   22a3c:	ldr	x8, [sp, #8]
   22a40:	str	w0, [x8, #212]
   22a44:	b	22cd8 <renameatu@@Base+0x3d8>
   22a48:	bl	aa20 <__errno_location@plt>
   22a4c:	ldr	w8, [x0]
   22a50:	cmp	w8, #0x2
   22a54:	b.eq	22a68 <renameatu@@Base+0x168>  // b.none
   22a58:	mov	w8, #0xffffffff            	// #-1
   22a5c:	ldr	x9, [sp, #8]
   22a60:	str	w8, [x9, #212]
   22a64:	b	22cd8 <renameatu@@Base+0x3d8>
   22a68:	mov	w8, #0x1                   	// #1
   22a6c:	strb	w8, [sp, #23]
   22a70:	ldr	x8, [sp, #8]
   22a74:	ldr	x0, [x8, #200]
   22a78:	bl	a8e0 <strlen@plt>
   22a7c:	ldr	x8, [sp, #8]
   22a80:	str	x0, [x8, #160]
   22a84:	ldr	x0, [x8, #184]
   22a88:	bl	a8e0 <strlen@plt>
   22a8c:	ldr	x8, [sp, #8]
   22a90:	str	x0, [x8, #152]
   22a94:	ldr	x9, [x8, #160]
   22a98:	cbz	x9, 22aa8 <renameatu@@Base+0x1a8>
   22a9c:	ldr	x8, [sp, #8]
   22aa0:	ldr	x9, [x8, #152]
   22aa4:	cbnz	x9, 22acc <renameatu@@Base+0x1cc>
   22aa8:	ldr	x8, [sp, #8]
   22aac:	ldr	w0, [x8, #208]
   22ab0:	ldr	x1, [x8, #200]
   22ab4:	ldr	w2, [x8, #196]
   22ab8:	ldr	x3, [x8, #184]
   22abc:	bl	b490 <renameat@plt>
   22ac0:	ldr	x8, [sp, #8]
   22ac4:	str	w0, [x8, #212]
   22ac8:	b	22cd8 <renameatu@@Base+0x3d8>
   22acc:	ldr	x8, [sp, #8]
   22ad0:	ldr	x9, [x8, #200]
   22ad4:	ldr	x10, [x8, #160]
   22ad8:	subs	x10, x10, #0x1
   22adc:	ldrb	w11, [x9, x10]
   22ae0:	cmp	w11, #0x2f
   22ae4:	cset	w11, eq  // eq = none
   22ae8:	mov	w12, #0x1                   	// #1
   22aec:	and	w11, w11, w12
   22af0:	sturb	w11, [x29, #-81]
   22af4:	ldr	x9, [x8, #184]
   22af8:	ldr	x10, [x8, #152]
   22afc:	subs	x10, x10, #0x1
   22b00:	ldrb	w11, [x9, x10]
   22b04:	cmp	w11, #0x2f
   22b08:	cset	w11, eq  // eq = none
   22b0c:	and	w11, w11, #0x1
   22b10:	sturb	w11, [x29, #-82]
   22b14:	ldurb	w11, [x29, #-81]
   22b18:	tbnz	w11, #0, 22b48 <renameatu@@Base+0x248>
   22b1c:	ldurb	w8, [x29, #-82]
   22b20:	tbnz	w8, #0, 22b48 <renameatu@@Base+0x248>
   22b24:	ldr	x8, [sp, #8]
   22b28:	ldr	w0, [x8, #208]
   22b2c:	ldr	x1, [x8, #200]
   22b30:	ldr	w2, [x8, #196]
   22b34:	ldr	x3, [x8, #184]
   22b38:	bl	b490 <renameat@plt>
   22b3c:	ldr	x8, [sp, #8]
   22b40:	str	w0, [x8, #212]
   22b44:	b	22cd8 <renameatu@@Base+0x3d8>
   22b48:	ldr	x8, [sp, #8]
   22b4c:	ldr	w0, [x8, #208]
   22b50:	ldr	x1, [x8, #200]
   22b54:	add	x2, sp, #0x98
   22b58:	bl	b480 <lstatat@plt>
   22b5c:	cbz	w0, 22b70 <renameatu@@Base+0x270>
   22b60:	mov	w8, #0xffffffff            	// #-1
   22b64:	ldr	x9, [sp, #8]
   22b68:	str	w8, [x9, #212]
   22b6c:	b	22cd8 <renameatu@@Base+0x3d8>
   22b70:	ldrb	w8, [sp, #23]
   22b74:	tbnz	w8, #0, 22b7c <renameatu@@Base+0x27c>
   22b78:	b	22ba8 <renameatu@@Base+0x2a8>
   22b7c:	ldr	x8, [sp, #8]
   22b80:	ldr	w9, [x8, #16]
   22b84:	and	w9, w9, #0xf000
   22b88:	cmp	w9, #0x4, lsl #12
   22b8c:	b.eq	22ba4 <renameatu@@Base+0x2a4>  // b.none
   22b90:	mov	w0, #0x2                   	// #2
   22b94:	bl	22cf0 <renameatu@@Base+0x3f0>
   22b98:	ldr	x8, [sp, #8]
   22b9c:	str	w0, [x8, #212]
   22ba0:	b	22cd8 <renameatu@@Base+0x3d8>
   22ba4:	b	22c44 <renameatu@@Base+0x344>
   22ba8:	ldr	x8, [sp, #8]
   22bac:	ldr	w0, [x8, #196]
   22bb0:	ldr	x1, [x8, #184]
   22bb4:	add	x2, sp, #0x18
   22bb8:	bl	b480 <lstatat@plt>
   22bbc:	cbz	w0, 22bf8 <renameatu@@Base+0x2f8>
   22bc0:	bl	aa20 <__errno_location@plt>
   22bc4:	ldr	w8, [x0]
   22bc8:	cmp	w8, #0x2
   22bcc:	b.ne	22be4 <renameatu@@Base+0x2e4>  // b.any
   22bd0:	ldr	x8, [sp, #8]
   22bd4:	ldr	w9, [x8, #16]
   22bd8:	and	w9, w9, #0xf000
   22bdc:	cmp	w9, #0x4, lsl #12
   22be0:	b.eq	22bf4 <renameatu@@Base+0x2f4>  // b.none
   22be4:	mov	w8, #0xffffffff            	// #-1
   22be8:	ldr	x9, [sp, #8]
   22bec:	str	w8, [x9, #212]
   22bf0:	b	22cd8 <renameatu@@Base+0x3d8>
   22bf4:	b	22c44 <renameatu@@Base+0x344>
   22bf8:	ldr	w8, [sp, #40]
   22bfc:	and	w8, w8, #0xf000
   22c00:	cmp	w8, #0x4, lsl #12
   22c04:	b.eq	22c1c <renameatu@@Base+0x31c>  // b.none
   22c08:	mov	w0, #0x14                  	// #20
   22c0c:	bl	22cf0 <renameatu@@Base+0x3f0>
   22c10:	ldr	x8, [sp, #8]
   22c14:	str	w0, [x8, #212]
   22c18:	b	22cd8 <renameatu@@Base+0x3d8>
   22c1c:	ldr	x8, [sp, #8]
   22c20:	ldr	w9, [x8, #16]
   22c24:	and	w9, w9, #0xf000
   22c28:	cmp	w9, #0x4, lsl #12
   22c2c:	b.eq	22c44 <renameatu@@Base+0x344>  // b.none
   22c30:	mov	w0, #0x15                  	// #21
   22c34:	bl	22cf0 <renameatu@@Base+0x3f0>
   22c38:	ldr	x8, [sp, #8]
   22c3c:	str	w0, [x8, #212]
   22c40:	b	22cd8 <renameatu@@Base+0x3d8>
   22c44:	ldr	x8, [sp, #8]
   22c48:	ldr	w0, [x8, #208]
   22c4c:	ldr	x1, [x8, #144]
   22c50:	ldr	w2, [x8, #196]
   22c54:	ldr	x3, [x8, #136]
   22c58:	bl	b490 <renameat@plt>
   22c5c:	ldr	x8, [sp, #8]
   22c60:	str	w0, [x8, #176]
   22c64:	bl	aa20 <__errno_location@plt>
   22c68:	ldr	w9, [x0]
   22c6c:	ldr	x8, [sp, #8]
   22c70:	str	w9, [x8, #128]
   22c74:	ldr	x8, [sp, #8]
   22c78:	ldr	x9, [x8, #144]
   22c7c:	ldr	x10, [x8, #200]
   22c80:	cmp	x9, x10
   22c84:	b.eq	22c94 <renameatu@@Base+0x394>  // b.none
   22c88:	ldr	x8, [sp, #8]
   22c8c:	ldr	x0, [x8, #144]
   22c90:	bl	a930 <free@plt>
   22c94:	ldr	x8, [sp, #8]
   22c98:	ldr	x9, [x8, #136]
   22c9c:	ldr	x10, [x8, #184]
   22ca0:	cmp	x9, x10
   22ca4:	b.eq	22cb4 <renameatu@@Base+0x3b4>  // b.none
   22ca8:	ldr	x8, [sp, #8]
   22cac:	ldr	x0, [x8, #136]
   22cb0:	bl	a930 <free@plt>
   22cb4:	ldr	x8, [sp, #8]
   22cb8:	ldr	w9, [x8, #128]
   22cbc:	str	w9, [sp, #4]
   22cc0:	bl	aa20 <__errno_location@plt>
   22cc4:	ldr	w9, [sp, #4]
   22cc8:	str	w9, [x0]
   22ccc:	ldr	x8, [sp, #8]
   22cd0:	ldr	w10, [x8, #176]
   22cd4:	str	w10, [x8, #212]
   22cd8:	ldr	x8, [sp, #8]
   22cdc:	ldr	w0, [x8, #212]
   22ce0:	ldr	x28, [sp, #384]
   22ce4:	ldp	x29, x30, [sp, #368]
   22ce8:	add	sp, sp, #0x190
   22cec:	ret
   22cf0:	sub	sp, sp, #0x20
   22cf4:	stp	x29, x30, [sp, #16]
   22cf8:	add	x29, sp, #0x10
   22cfc:	mov	w8, #0xffffffff            	// #-1
   22d00:	stur	w0, [x29, #-4]
   22d04:	ldur	w9, [x29, #-4]
   22d08:	str	w8, [sp, #8]
   22d0c:	str	w9, [sp, #4]
   22d10:	bl	aa20 <__errno_location@plt>
   22d14:	ldr	w8, [sp, #4]
   22d18:	str	w8, [x0]
   22d1c:	ldr	w0, [sp, #8]
   22d20:	ldp	x29, x30, [sp, #16]
   22d24:	add	sp, sp, #0x20
   22d28:	ret

0000000000022d2c <same_name@@Base>:
   22d2c:	sub	sp, sp, #0x20
   22d30:	stp	x29, x30, [sp, #16]
   22d34:	add	x29, sp, #0x10
   22d38:	mov	w8, #0xffffff9c            	// #-100
   22d3c:	str	x0, [sp, #8]
   22d40:	str	x1, [sp]
   22d44:	ldr	x1, [sp, #8]
   22d48:	ldr	x3, [sp]
   22d4c:	mov	w0, w8
   22d50:	mov	w2, w8
   22d54:	bl	b4a0 <same_nameat@plt>
   22d58:	and	w0, w0, #0x1
   22d5c:	ldp	x29, x30, [sp, #16]
   22d60:	add	sp, sp, #0x20
   22d64:	ret

0000000000022d68 <same_nameat@@Base>:
   22d68:	sub	sp, sp, #0x190
   22d6c:	stp	x29, x30, [sp, #368]
   22d70:	str	x28, [sp, #384]
   22d74:	add	x29, sp, #0x170
   22d78:	stur	w0, [x29, #-4]
   22d7c:	stur	x1, [x29, #-16]
   22d80:	stur	w2, [x29, #-20]
   22d84:	stur	x3, [x29, #-32]
   22d88:	ldur	x0, [x29, #-16]
   22d8c:	bl	b130 <last_component@plt>
   22d90:	stur	x0, [x29, #-40]
   22d94:	ldur	x0, [x29, #-32]
   22d98:	bl	b130 <last_component@plt>
   22d9c:	stur	x0, [x29, #-48]
   22da0:	ldur	x0, [x29, #-40]
   22da4:	bl	b220 <base_len@plt>
   22da8:	stur	x0, [x29, #-56]
   22dac:	ldur	x0, [x29, #-48]
   22db0:	bl	b220 <base_len@plt>
   22db4:	stur	x0, [x29, #-64]
   22db8:	ldur	x8, [x29, #-56]
   22dbc:	ldur	x9, [x29, #-64]
   22dc0:	mov	w10, #0x0                   	// #0
   22dc4:	cmp	x8, x9
   22dc8:	str	w10, [sp, #12]
   22dcc:	b.ne	22dec <same_nameat@@Base+0x84>  // b.any
   22dd0:	ldur	x0, [x29, #-40]
   22dd4:	ldur	x1, [x29, #-48]
   22dd8:	ldur	x2, [x29, #-64]
   22ddc:	bl	b4b0 <memcmp@plt>
   22de0:	cmp	w0, #0x0
   22de4:	cset	w8, eq  // eq = none
   22de8:	str	w8, [sp, #12]
   22dec:	ldr	w8, [sp, #12]
   22df0:	mov	w9, #0x1                   	// #1
   22df4:	and	w8, w8, w9
   22df8:	sturb	w8, [x29, #-65]
   22dfc:	ldurb	w8, [x29, #-65]
   22e00:	and	w8, w8, #0x1
   22e04:	sturb	w8, [x29, #-66]
   22e08:	mov	w8, #0x0                   	// #0
   22e0c:	sturb	w8, [x29, #-67]
   22e10:	ldurb	w8, [x29, #-66]
   22e14:	tbnz	w8, #0, 22e1c <same_nameat@@Base+0xb4>
   22e18:	b	22eec <same_nameat@@Base+0x184>
   22e1c:	ldur	x0, [x29, #-16]
   22e20:	bl	b4c0 <dir_name@plt>
   22e24:	str	x0, [sp, #32]
   22e28:	mov	w8, #0x100                 	// #256
   22e2c:	str	w8, [sp, #28]
   22e30:	ldur	w0, [x29, #-4]
   22e34:	ldr	x1, [sp, #32]
   22e38:	ldr	w3, [sp, #28]
   22e3c:	add	x2, sp, #0xa8
   22e40:	bl	443e8 <vasnprintf@@Base+0x2234>
   22e44:	cbz	w0, 22e64 <same_nameat@@Base+0xfc>
   22e48:	bl	aa20 <__errno_location@plt>
   22e4c:	ldr	w1, [x0]
   22e50:	ldr	x3, [sp, #32]
   22e54:	mov	w0, #0x1                   	// #1
   22e58:	adrp	x2, 45000 <vasnprintf@@Base+0x2e4c>
   22e5c:	add	x2, x2, #0x1c3
   22e60:	bl	adc0 <error@plt>
   22e64:	ldr	x0, [sp, #32]
   22e68:	bl	a930 <free@plt>
   22e6c:	ldur	x0, [x29, #-32]
   22e70:	bl	b4c0 <dir_name@plt>
   22e74:	str	x0, [sp, #16]
   22e78:	ldur	w0, [x29, #-20]
   22e7c:	ldr	x1, [sp, #16]
   22e80:	ldr	w3, [sp, #28]
   22e84:	add	x2, sp, #0x28
   22e88:	bl	443e8 <vasnprintf@@Base+0x2234>
   22e8c:	cbz	w0, 22eac <same_nameat@@Base+0x144>
   22e90:	bl	aa20 <__errno_location@plt>
   22e94:	ldr	w1, [x0]
   22e98:	ldr	x3, [sp, #16]
   22e9c:	mov	w0, #0x1                   	// #1
   22ea0:	adrp	x2, 45000 <vasnprintf@@Base+0x2e4c>
   22ea4:	add	x2, x2, #0x1c3
   22ea8:	bl	adc0 <error@plt>
   22eac:	ldr	x8, [sp, #176]
   22eb0:	ldr	x9, [sp, #48]
   22eb4:	mov	w10, #0x0                   	// #0
   22eb8:	cmp	x8, x9
   22ebc:	str	w10, [sp, #8]
   22ec0:	b.ne	22ed8 <same_nameat@@Base+0x170>  // b.any
   22ec4:	ldr	x8, [sp, #168]
   22ec8:	ldr	x9, [sp, #40]
   22ecc:	cmp	x8, x9
   22ed0:	cset	w10, eq  // eq = none
   22ed4:	str	w10, [sp, #8]
   22ed8:	ldr	w8, [sp, #8]
   22edc:	and	w8, w8, #0x1
   22ee0:	sturb	w8, [x29, #-67]
   22ee4:	ldr	x0, [sp, #16]
   22ee8:	bl	a930 <free@plt>
   22eec:	ldurb	w8, [x29, #-67]
   22ef0:	and	w0, w8, #0x1
   22ef4:	ldr	x28, [sp, #384]
   22ef8:	ldp	x29, x30, [sp, #368]
   22efc:	add	sp, sp, #0x190
   22f00:	ret

0000000000022f04 <save_cwd@@Base>:
   22f04:	sub	sp, sp, #0x30
   22f08:	stp	x29, x30, [sp, #32]
   22f0c:	add	x29, sp, #0x20
   22f10:	mov	x8, xzr
   22f14:	adrp	x9, 44000 <vasnprintf@@Base+0x1e4c>
   22f18:	add	x9, x9, #0xd58
   22f1c:	mov	w10, #0x80000               	// #524288
   22f20:	str	x0, [sp, #16]
   22f24:	ldr	x11, [sp, #16]
   22f28:	str	x8, [x11, #8]
   22f2c:	mov	x0, x9
   22f30:	mov	w1, w10
   22f34:	str	w10, [sp, #12]
   22f38:	bl	ac00 <open@plt>
   22f3c:	ldr	x8, [sp, #16]
   22f40:	str	w0, [x8]
   22f44:	ldr	x8, [sp, #16]
   22f48:	ldr	w0, [x8]
   22f4c:	ldr	w1, [sp, #12]
   22f50:	bl	b4d0 <fd_safer_flag@plt>
   22f54:	ldr	x8, [sp, #16]
   22f58:	str	w0, [x8]
   22f5c:	ldr	x8, [sp, #16]
   22f60:	ldr	w10, [x8]
   22f64:	cmp	w10, #0x0
   22f68:	cset	w10, ge  // ge = tcont
   22f6c:	tbnz	w10, #0, 22fa8 <save_cwd@@Base+0xa4>
   22f70:	mov	x8, xzr
   22f74:	mov	x0, x8
   22f78:	mov	x1, x8
   22f7c:	bl	b4e0 <getcwd@plt>
   22f80:	ldr	x8, [sp, #16]
   22f84:	str	x0, [x8, #8]
   22f88:	ldr	x8, [sp, #16]
   22f8c:	ldr	x8, [x8, #8]
   22f90:	mov	w9, #0xffffffff            	// #-1
   22f94:	mov	w10, wzr
   22f98:	cmp	x8, #0x0
   22f9c:	csel	w9, w10, w9, ne  // ne = any
   22fa0:	stur	w9, [x29, #-4]
   22fa4:	b	22fac <save_cwd@@Base+0xa8>
   22fa8:	stur	wzr, [x29, #-4]
   22fac:	ldur	w0, [x29, #-4]
   22fb0:	ldp	x29, x30, [sp, #32]
   22fb4:	add	sp, sp, #0x30
   22fb8:	ret

0000000000022fbc <restore_cwd@@Base>:
   22fbc:	sub	sp, sp, #0x20
   22fc0:	stp	x29, x30, [sp, #16]
   22fc4:	add	x29, sp, #0x10
   22fc8:	mov	w8, wzr
   22fcc:	str	x0, [sp]
   22fd0:	ldr	x9, [sp]
   22fd4:	ldr	w10, [x9]
   22fd8:	cmp	w8, w10
   22fdc:	cset	w8, gt
   22fe0:	tbnz	w8, #0, 22ff8 <restore_cwd@@Base+0x3c>
   22fe4:	ldr	x8, [sp]
   22fe8:	ldr	w0, [x8]
   22fec:	bl	b4f0 <fchdir@plt>
   22ff0:	stur	w0, [x29, #-4]
   22ff4:	b	23008 <restore_cwd@@Base+0x4c>
   22ff8:	ldr	x8, [sp]
   22ffc:	ldr	x0, [x8, #8]
   23000:	bl	b500 <chdir_long@plt>
   23004:	stur	w0, [x29, #-4]
   23008:	ldur	w0, [x29, #-4]
   2300c:	ldp	x29, x30, [sp, #16]
   23010:	add	sp, sp, #0x20
   23014:	ret

0000000000023018 <free_cwd@@Base>:
   23018:	sub	sp, sp, #0x20
   2301c:	stp	x29, x30, [sp, #16]
   23020:	add	x29, sp, #0x10
   23024:	str	x0, [sp, #8]
   23028:	ldr	x8, [sp, #8]
   2302c:	ldr	w9, [x8]
   23030:	cmp	w9, #0x0
   23034:	cset	w9, lt  // lt = tstop
   23038:	tbnz	w9, #0, 23048 <free_cwd@@Base+0x30>
   2303c:	ldr	x8, [sp, #8]
   23040:	ldr	w0, [x8]
   23044:	bl	ac30 <close@plt>
   23048:	ldr	x8, [sp, #8]
   2304c:	ldr	x0, [x8, #8]
   23050:	bl	a930 <free@plt>
   23054:	ldp	x29, x30, [sp, #16]
   23058:	add	sp, sp, #0x20
   2305c:	ret

0000000000023060 <gl_scratch_buffer_grow@@Base>:
   23060:	sub	sp, sp, #0x30
   23064:	stp	x29, x30, [sp, #32]
   23068:	add	x29, sp, #0x20
   2306c:	mov	x8, #0x2                   	// #2
   23070:	str	x0, [sp, #16]
   23074:	ldr	x9, [sp, #16]
   23078:	ldr	x9, [x9, #8]
   2307c:	mul	x8, x9, x8
   23080:	str	x8, [sp]
   23084:	ldr	x0, [sp, #16]
   23088:	bl	23140 <gl_scratch_buffer_grow@@Base+0xe0>
   2308c:	ldr	x8, [sp]
   23090:	ldr	x9, [sp, #16]
   23094:	ldr	x9, [x9, #8]
   23098:	cmp	x8, x9
   2309c:	cset	w10, cs  // cs = hs, nlast
   230a0:	and	w10, w10, #0x1
   230a4:	mov	w0, w10
   230a8:	sxtw	x8, w0
   230ac:	cbz	x8, 230c0 <gl_scratch_buffer_grow@@Base+0x60>
   230b0:	ldr	x0, [sp]
   230b4:	bl	af10 <malloc@plt>
   230b8:	str	x0, [sp, #8]
   230bc:	b	230d4 <gl_scratch_buffer_grow@@Base+0x74>
   230c0:	bl	aa20 <__errno_location@plt>
   230c4:	mov	w8, #0xc                   	// #12
   230c8:	str	w8, [x0]
   230cc:	mov	x9, xzr
   230d0:	str	x9, [sp, #8]
   230d4:	ldr	x8, [sp, #8]
   230d8:	cmp	x8, #0x0
   230dc:	cset	w9, eq  // eq = none
   230e0:	and	w9, w9, #0x1
   230e4:	mov	w0, w9
   230e8:	sxtw	x8, w0
   230ec:	cbz	x8, 23108 <gl_scratch_buffer_grow@@Base+0xa8>
   230f0:	ldr	x0, [sp, #16]
   230f4:	bl	23180 <gl_scratch_buffer_grow@@Base+0x120>
   230f8:	mov	w8, wzr
   230fc:	and	w8, w8, #0x1
   23100:	sturb	w8, [x29, #-1]
   23104:	b	2312c <gl_scratch_buffer_grow@@Base+0xcc>
   23108:	ldr	x8, [sp, #8]
   2310c:	ldr	x9, [sp, #16]
   23110:	str	x8, [x9]
   23114:	ldr	x8, [sp]
   23118:	ldr	x9, [sp, #16]
   2311c:	str	x8, [x9, #8]
   23120:	mov	w10, #0x1                   	// #1
   23124:	and	w10, w10, #0x1
   23128:	sturb	w10, [x29, #-1]
   2312c:	ldurb	w8, [x29, #-1]
   23130:	and	w0, w8, #0x1
   23134:	ldp	x29, x30, [sp, #32]
   23138:	add	sp, sp, #0x30
   2313c:	ret
   23140:	sub	sp, sp, #0x20
   23144:	stp	x29, x30, [sp, #16]
   23148:	add	x29, sp, #0x10
   2314c:	str	x0, [sp, #8]
   23150:	ldr	x8, [sp, #8]
   23154:	ldr	x8, [x8]
   23158:	ldr	x9, [sp, #8]
   2315c:	add	x9, x9, #0x10
   23160:	cmp	x8, x9
   23164:	b.eq	23174 <gl_scratch_buffer_grow@@Base+0x114>  // b.none
   23168:	ldr	x8, [sp, #8]
   2316c:	ldr	x0, [x8]
   23170:	bl	a930 <free@plt>
   23174:	ldp	x29, x30, [sp, #16]
   23178:	add	sp, sp, #0x20
   2317c:	ret
   23180:	sub	sp, sp, #0x10
   23184:	mov	x8, #0x400                 	// #1024
   23188:	str	x0, [sp, #8]
   2318c:	ldr	x9, [sp, #8]
   23190:	add	x9, x9, #0x10
   23194:	ldr	x10, [sp, #8]
   23198:	str	x9, [x10]
   2319c:	ldr	x9, [sp, #8]
   231a0:	str	x8, [x9, #8]
   231a4:	add	sp, sp, #0x10
   231a8:	ret

00000000000231ac <gl_scratch_buffer_grow_preserve@@Base>:
   231ac:	sub	sp, sp, #0x30
   231b0:	stp	x29, x30, [sp, #32]
   231b4:	add	x29, sp, #0x20
   231b8:	mov	x8, #0x2                   	// #2
   231bc:	str	x0, [sp, #16]
   231c0:	ldr	x9, [sp, #16]
   231c4:	ldr	x9, [x9, #8]
   231c8:	mul	x8, x8, x9
   231cc:	str	x8, [sp, #8]
   231d0:	ldr	x8, [sp, #16]
   231d4:	ldr	x8, [x8]
   231d8:	ldr	x9, [sp, #16]
   231dc:	add	x9, x9, #0x10
   231e0:	cmp	x8, x9
   231e4:	b.ne	23228 <gl_scratch_buffer_grow_preserve@@Base+0x7c>  // b.any
   231e8:	ldr	x0, [sp, #8]
   231ec:	bl	af10 <malloc@plt>
   231f0:	str	x0, [sp]
   231f4:	ldr	x8, [sp]
   231f8:	cbnz	x8, 2320c <gl_scratch_buffer_grow_preserve@@Base+0x60>
   231fc:	mov	w8, wzr
   23200:	and	w8, w8, #0x1
   23204:	sturb	w8, [x29, #-1]
   23208:	b	232dc <gl_scratch_buffer_grow_preserve@@Base+0x130>
   2320c:	ldr	x0, [sp]
   23210:	ldr	x8, [sp, #16]
   23214:	add	x1, x8, #0x10
   23218:	ldr	x8, [sp, #16]
   2321c:	ldr	x2, [x8, #8]
   23220:	bl	af30 <memcpy@plt>
   23224:	b	232b8 <gl_scratch_buffer_grow_preserve@@Base+0x10c>
   23228:	ldr	x8, [sp, #8]
   2322c:	ldr	x9, [sp, #16]
   23230:	ldr	x9, [x9, #8]
   23234:	cmp	x8, x9
   23238:	cset	w10, cs  // cs = hs, nlast
   2323c:	and	w10, w10, #0x1
   23240:	mov	w0, w10
   23244:	sxtw	x8, w0
   23248:	cbz	x8, 23264 <gl_scratch_buffer_grow_preserve@@Base+0xb8>
   2324c:	ldr	x8, [sp, #16]
   23250:	ldr	x0, [x8]
   23254:	ldr	x1, [sp, #8]
   23258:	bl	af40 <realloc@plt>
   2325c:	str	x0, [sp]
   23260:	b	23278 <gl_scratch_buffer_grow_preserve@@Base+0xcc>
   23264:	bl	aa20 <__errno_location@plt>
   23268:	mov	w8, #0xc                   	// #12
   2326c:	str	w8, [x0]
   23270:	mov	x9, xzr
   23274:	str	x9, [sp]
   23278:	ldr	x8, [sp]
   2327c:	cmp	x8, #0x0
   23280:	cset	w9, eq  // eq = none
   23284:	and	w9, w9, #0x1
   23288:	mov	w0, w9
   2328c:	sxtw	x8, w0
   23290:	cbz	x8, 232b8 <gl_scratch_buffer_grow_preserve@@Base+0x10c>
   23294:	ldr	x8, [sp, #16]
   23298:	ldr	x0, [x8]
   2329c:	bl	a930 <free@plt>
   232a0:	ldr	x0, [sp, #16]
   232a4:	bl	232f0 <gl_scratch_buffer_grow_preserve@@Base+0x144>
   232a8:	mov	w9, wzr
   232ac:	and	w9, w9, #0x1
   232b0:	sturb	w9, [x29, #-1]
   232b4:	b	232dc <gl_scratch_buffer_grow_preserve@@Base+0x130>
   232b8:	ldr	x8, [sp]
   232bc:	ldr	x9, [sp, #16]
   232c0:	str	x8, [x9]
   232c4:	ldr	x8, [sp, #8]
   232c8:	ldr	x9, [sp, #16]
   232cc:	str	x8, [x9, #8]
   232d0:	mov	w10, #0x1                   	// #1
   232d4:	and	w10, w10, #0x1
   232d8:	sturb	w10, [x29, #-1]
   232dc:	ldurb	w8, [x29, #-1]
   232e0:	and	w0, w8, #0x1
   232e4:	ldp	x29, x30, [sp, #32]
   232e8:	add	sp, sp, #0x30
   232ec:	ret
   232f0:	sub	sp, sp, #0x10
   232f4:	mov	x8, #0x400                 	// #1024
   232f8:	str	x0, [sp, #8]
   232fc:	ldr	x9, [sp, #8]
   23300:	add	x9, x9, #0x10
   23304:	ldr	x10, [sp, #8]
   23308:	str	x9, [x10]
   2330c:	ldr	x9, [sp, #8]
   23310:	str	x8, [x9, #8]
   23314:	add	sp, sp, #0x10
   23318:	ret

000000000002331c <gl_scratch_buffer_set_array_size@@Base>:
   2331c:	sub	sp, sp, #0x40
   23320:	stp	x29, x30, [sp, #48]
   23324:	add	x29, sp, #0x30
   23328:	stur	x0, [x29, #-16]
   2332c:	str	x1, [sp, #24]
   23330:	str	x2, [sp, #16]
   23334:	ldr	x8, [sp, #24]
   23338:	ldr	x9, [sp, #16]
   2333c:	mul	x8, x8, x9
   23340:	str	x8, [sp, #8]
   23344:	ldr	x8, [sp, #24]
   23348:	ldr	x9, [sp, #16]
   2334c:	orr	x8, x8, x9
   23350:	lsr	x8, x8, #32
   23354:	cbz	x8, 233a4 <gl_scratch_buffer_set_array_size@@Base+0x88>
   23358:	ldr	x8, [sp, #24]
   2335c:	cbz	x8, 233a4 <gl_scratch_buffer_set_array_size@@Base+0x88>
   23360:	ldr	x8, [sp, #16]
   23364:	ldr	x9, [sp, #8]
   23368:	ldr	x10, [sp, #24]
   2336c:	udiv	x9, x9, x10
   23370:	cmp	x8, x9
   23374:	b.eq	233a4 <gl_scratch_buffer_set_array_size@@Base+0x88>  // b.none
   23378:	ldur	x0, [x29, #-16]
   2337c:	bl	23434 <gl_scratch_buffer_set_array_size@@Base+0x118>
   23380:	ldur	x0, [x29, #-16]
   23384:	bl	23474 <gl_scratch_buffer_set_array_size@@Base+0x158>
   23388:	bl	aa20 <__errno_location@plt>
   2338c:	mov	w8, #0xc                   	// #12
   23390:	str	w8, [x0]
   23394:	mov	w8, wzr
   23398:	and	w8, w8, #0x1
   2339c:	sturb	w8, [x29, #-1]
   233a0:	b	23420 <gl_scratch_buffer_set_array_size@@Base+0x104>
   233a4:	ldr	x8, [sp, #8]
   233a8:	ldur	x9, [x29, #-16]
   233ac:	ldr	x9, [x9, #8]
   233b0:	cmp	x8, x9
   233b4:	b.hi	233c8 <gl_scratch_buffer_set_array_size@@Base+0xac>  // b.pmore
   233b8:	mov	w8, #0x1                   	// #1
   233bc:	and	w8, w8, #0x1
   233c0:	sturb	w8, [x29, #-1]
   233c4:	b	23420 <gl_scratch_buffer_set_array_size@@Base+0x104>
   233c8:	ldur	x0, [x29, #-16]
   233cc:	bl	23434 <gl_scratch_buffer_set_array_size@@Base+0x118>
   233d0:	ldr	x0, [sp, #8]
   233d4:	bl	af10 <malloc@plt>
   233d8:	str	x0, [sp]
   233dc:	ldr	x8, [sp]
   233e0:	cbnz	x8, 233fc <gl_scratch_buffer_set_array_size@@Base+0xe0>
   233e4:	ldur	x0, [x29, #-16]
   233e8:	bl	23474 <gl_scratch_buffer_set_array_size@@Base+0x158>
   233ec:	mov	w8, wzr
   233f0:	and	w8, w8, #0x1
   233f4:	sturb	w8, [x29, #-1]
   233f8:	b	23420 <gl_scratch_buffer_set_array_size@@Base+0x104>
   233fc:	ldr	x8, [sp]
   23400:	ldur	x9, [x29, #-16]
   23404:	str	x8, [x9]
   23408:	ldr	x8, [sp, #8]
   2340c:	ldur	x9, [x29, #-16]
   23410:	str	x8, [x9, #8]
   23414:	mov	w10, #0x1                   	// #1
   23418:	and	w10, w10, #0x1
   2341c:	sturb	w10, [x29, #-1]
   23420:	ldurb	w8, [x29, #-1]
   23424:	and	w0, w8, #0x1
   23428:	ldp	x29, x30, [sp, #48]
   2342c:	add	sp, sp, #0x40
   23430:	ret
   23434:	sub	sp, sp, #0x20
   23438:	stp	x29, x30, [sp, #16]
   2343c:	add	x29, sp, #0x10
   23440:	str	x0, [sp, #8]
   23444:	ldr	x8, [sp, #8]
   23448:	ldr	x8, [x8]
   2344c:	ldr	x9, [sp, #8]
   23450:	add	x9, x9, #0x10
   23454:	cmp	x8, x9
   23458:	b.eq	23468 <gl_scratch_buffer_set_array_size@@Base+0x14c>  // b.none
   2345c:	ldr	x8, [sp, #8]
   23460:	ldr	x0, [x8]
   23464:	bl	a930 <free@plt>
   23468:	ldp	x29, x30, [sp, #16]
   2346c:	add	sp, sp, #0x20
   23470:	ret
   23474:	sub	sp, sp, #0x10
   23478:	mov	x8, #0x400                 	// #1024
   2347c:	str	x0, [sp, #8]
   23480:	ldr	x9, [sp, #8]
   23484:	add	x9, x9, #0x10
   23488:	ldr	x10, [sp, #8]
   2348c:	str	x9, [x10]
   23490:	ldr	x9, [sp, #8]
   23494:	str	x8, [x9, #8]
   23498:	add	sp, sp, #0x10
   2349c:	ret

00000000000234a0 <gl_set_nx_create_empty@@Base>:
   234a0:	sub	sp, sp, #0x30
   234a4:	stp	x29, x30, [sp, #32]
   234a8:	add	x29, sp, #0x20
   234ac:	stur	x0, [x29, #-8]
   234b0:	str	x1, [sp, #16]
   234b4:	str	x2, [sp, #8]
   234b8:	str	x3, [sp]
   234bc:	ldur	x8, [x29, #-8]
   234c0:	ldr	x8, [x8]
   234c4:	ldur	x0, [x29, #-8]
   234c8:	ldr	x1, [sp, #16]
   234cc:	ldr	x2, [sp, #8]
   234d0:	ldr	x3, [sp]
   234d4:	blr	x8
   234d8:	ldp	x29, x30, [sp, #32]
   234dc:	add	sp, sp, #0x30
   234e0:	ret

00000000000234e4 <gl_set_size@@Base>:
   234e4:	sub	sp, sp, #0x20
   234e8:	stp	x29, x30, [sp, #16]
   234ec:	add	x29, sp, #0x10
   234f0:	str	x0, [sp, #8]
   234f4:	ldr	x8, [sp, #8]
   234f8:	ldr	x8, [x8]
   234fc:	ldr	x8, [x8, #8]
   23500:	ldr	x0, [sp, #8]
   23504:	blr	x8
   23508:	ldp	x29, x30, [sp, #16]
   2350c:	add	sp, sp, #0x20
   23510:	ret

0000000000023514 <gl_set_search@@Base>:
   23514:	sub	sp, sp, #0x20
   23518:	stp	x29, x30, [sp, #16]
   2351c:	add	x29, sp, #0x10
   23520:	str	x0, [sp, #8]
   23524:	str	x1, [sp]
   23528:	ldr	x8, [sp, #8]
   2352c:	ldr	x8, [x8]
   23530:	ldr	x8, [x8, #16]
   23534:	ldr	x0, [sp, #8]
   23538:	ldr	x1, [sp]
   2353c:	blr	x8
   23540:	and	w0, w0, #0x1
   23544:	ldp	x29, x30, [sp, #16]
   23548:	add	sp, sp, #0x20
   2354c:	ret

0000000000023550 <gl_set_nx_add@@Base>:
   23550:	sub	sp, sp, #0x20
   23554:	stp	x29, x30, [sp, #16]
   23558:	add	x29, sp, #0x10
   2355c:	str	x0, [sp, #8]
   23560:	str	x1, [sp]
   23564:	ldr	x8, [sp, #8]
   23568:	ldr	x8, [x8]
   2356c:	ldr	x8, [x8, #24]
   23570:	ldr	x0, [sp, #8]
   23574:	ldr	x1, [sp]
   23578:	blr	x8
   2357c:	ldp	x29, x30, [sp, #16]
   23580:	add	sp, sp, #0x20
   23584:	ret

0000000000023588 <gl_set_remove@@Base>:
   23588:	sub	sp, sp, #0x20
   2358c:	stp	x29, x30, [sp, #16]
   23590:	add	x29, sp, #0x10
   23594:	str	x0, [sp, #8]
   23598:	str	x1, [sp]
   2359c:	ldr	x8, [sp, #8]
   235a0:	ldr	x8, [x8]
   235a4:	ldr	x8, [x8, #32]
   235a8:	ldr	x0, [sp, #8]
   235ac:	ldr	x1, [sp]
   235b0:	blr	x8
   235b4:	and	w0, w0, #0x1
   235b8:	ldp	x29, x30, [sp, #16]
   235bc:	add	sp, sp, #0x20
   235c0:	ret

00000000000235c4 <gl_set_free@@Base>:
   235c4:	sub	sp, sp, #0x20
   235c8:	stp	x29, x30, [sp, #16]
   235cc:	add	x29, sp, #0x10
   235d0:	str	x0, [sp, #8]
   235d4:	ldr	x8, [sp, #8]
   235d8:	ldr	x8, [x8]
   235dc:	ldr	x8, [x8, #40]
   235e0:	ldr	x0, [sp, #8]
   235e4:	blr	x8
   235e8:	ldp	x29, x30, [sp, #16]
   235ec:	add	sp, sp, #0x20
   235f0:	ret

00000000000235f4 <gl_set_iterator@@Base>:
   235f4:	sub	sp, sp, #0x20
   235f8:	stp	x29, x30, [sp, #16]
   235fc:	add	x29, sp, #0x10
   23600:	str	x0, [sp, #8]
   23604:	ldr	x9, [sp, #8]
   23608:	ldr	x9, [x9]
   2360c:	ldr	x9, [x9, #48]
   23610:	ldr	x0, [sp, #8]
   23614:	blr	x9
   23618:	ldp	x29, x30, [sp, #16]
   2361c:	add	sp, sp, #0x20
   23620:	ret

0000000000023624 <gl_set_iterator_next@@Base>:
   23624:	sub	sp, sp, #0x20
   23628:	stp	x29, x30, [sp, #16]
   2362c:	add	x29, sp, #0x10
   23630:	str	x0, [sp, #8]
   23634:	str	x1, [sp]
   23638:	ldr	x8, [sp, #8]
   2363c:	ldr	x8, [x8]
   23640:	ldr	x8, [x8, #56]
   23644:	ldr	x0, [sp, #8]
   23648:	ldr	x1, [sp]
   2364c:	blr	x8
   23650:	and	w0, w0, #0x1
   23654:	ldp	x29, x30, [sp, #16]
   23658:	add	sp, sp, #0x20
   2365c:	ret

0000000000023660 <gl_set_iterator_free@@Base>:
   23660:	sub	sp, sp, #0x20
   23664:	stp	x29, x30, [sp, #16]
   23668:	add	x29, sp, #0x10
   2366c:	str	x0, [sp, #8]
   23670:	ldr	x8, [sp, #8]
   23674:	ldr	x8, [x8]
   23678:	ldr	x8, [x8, #64]
   2367c:	ldr	x0, [sp, #8]
   23680:	blr	x8
   23684:	ldp	x29, x30, [sp, #16]
   23688:	add	sp, sp, #0x20
   2368c:	ret

0000000000023690 <get_handler@@Base>:
   23690:	sub	sp, sp, #0x10
   23694:	str	x0, [sp, #8]
   23698:	ldr	x8, [sp, #8]
   2369c:	ldr	x0, [x8]
   236a0:	add	sp, sp, #0x10
   236a4:	ret

00000000000236a8 <gl_sockets_startup@@Base>:
   236a8:	sub	sp, sp, #0x10
   236ac:	mov	w8, wzr
   236b0:	str	w0, [sp, #12]
   236b4:	mov	w0, w8
   236b8:	add	sp, sp, #0x10
   236bc:	ret

00000000000236c0 <gl_sockets_cleanup@@Base>:
   236c0:	mov	w8, wzr
   236c4:	mov	w0, w8
   236c8:	ret

00000000000236cc <get_stat_atime_ns@@Base>:
   236cc:	sub	sp, sp, #0x10
   236d0:	str	x0, [sp, #8]
   236d4:	ldr	x8, [sp, #8]
   236d8:	ldr	x0, [x8, #80]
   236dc:	add	sp, sp, #0x10
   236e0:	ret

00000000000236e4 <get_stat_ctime_ns@@Base>:
   236e4:	sub	sp, sp, #0x10
   236e8:	str	x0, [sp, #8]
   236ec:	ldr	x8, [sp, #8]
   236f0:	ldr	x0, [x8, #112]
   236f4:	add	sp, sp, #0x10
   236f8:	ret

00000000000236fc <get_stat_mtime_ns@@Base>:
   236fc:	sub	sp, sp, #0x10
   23700:	str	x0, [sp, #8]
   23704:	ldr	x8, [sp, #8]
   23708:	ldr	x0, [x8, #96]
   2370c:	add	sp, sp, #0x10
   23710:	ret

0000000000023714 <get_stat_birthtime_ns@@Base>:
   23714:	sub	sp, sp, #0x10
   23718:	mov	x8, xzr
   2371c:	str	x0, [sp, #8]
   23720:	mov	x0, x8
   23724:	add	sp, sp, #0x10
   23728:	ret

000000000002372c <get_stat_atime@@Base>:
   2372c:	sub	sp, sp, #0x20
   23730:	str	x0, [sp, #8]
   23734:	ldr	x8, [sp, #8]
   23738:	ldur	q0, [x8, #72]
   2373c:	str	q0, [sp, #16]
   23740:	ldr	x0, [sp, #16]
   23744:	ldr	x1, [sp, #24]
   23748:	add	sp, sp, #0x20
   2374c:	ret

0000000000023750 <get_stat_ctime@@Base>:
   23750:	sub	sp, sp, #0x20
   23754:	str	x0, [sp, #8]
   23758:	ldr	x8, [sp, #8]
   2375c:	ldur	q0, [x8, #104]
   23760:	str	q0, [sp, #16]
   23764:	ldr	x0, [sp, #16]
   23768:	ldr	x1, [sp, #24]
   2376c:	add	sp, sp, #0x20
   23770:	ret

0000000000023774 <get_stat_mtime@@Base>:
   23774:	sub	sp, sp, #0x20
   23778:	str	x0, [sp, #8]
   2377c:	ldr	x8, [sp, #8]
   23780:	ldur	q0, [x8, #88]
   23784:	str	q0, [sp, #16]
   23788:	ldr	x0, [sp, #16]
   2378c:	ldr	x1, [sp, #24]
   23790:	add	sp, sp, #0x20
   23794:	ret

0000000000023798 <get_stat_birthtime@@Base>:
   23798:	sub	sp, sp, #0x20
   2379c:	mov	x8, #0xffffffffffffffff    	// #-1
   237a0:	str	x0, [sp, #8]
   237a4:	str	x8, [sp, #16]
   237a8:	str	x8, [sp, #24]
   237ac:	ldr	x0, [sp, #16]
   237b0:	ldr	x1, [sp, #24]
   237b4:	add	sp, sp, #0x20
   237b8:	ret

00000000000237bc <stat_time_normalize@@Base>:
   237bc:	sub	sp, sp, #0x10
   237c0:	str	w0, [sp, #12]
   237c4:	str	x1, [sp]
   237c8:	ldr	w0, [sp, #12]
   237cc:	add	sp, sp, #0x10
   237d0:	ret

00000000000237d4 <statat@@Base>:
   237d4:	sub	sp, sp, #0x30
   237d8:	stp	x29, x30, [sp, #32]
   237dc:	add	x29, sp, #0x20
   237e0:	mov	w8, wzr
   237e4:	stur	w0, [x29, #-4]
   237e8:	str	x1, [sp, #16]
   237ec:	str	x2, [sp, #8]
   237f0:	ldur	w0, [x29, #-4]
   237f4:	ldr	x1, [sp, #16]
   237f8:	ldr	x2, [sp, #8]
   237fc:	mov	w3, w8
   23800:	bl	443e8 <vasnprintf@@Base+0x2234>
   23804:	ldp	x29, x30, [sp, #32]
   23808:	add	sp, sp, #0x30
   2380c:	ret

0000000000023810 <lstatat@@Base>:
   23810:	sub	sp, sp, #0x30
   23814:	stp	x29, x30, [sp, #32]
   23818:	add	x29, sp, #0x20
   2381c:	mov	w3, #0x100                 	// #256
   23820:	stur	w0, [x29, #-4]
   23824:	str	x1, [sp, #16]
   23828:	str	x2, [sp, #8]
   2382c:	ldur	w0, [x29, #-4]
   23830:	ldr	x1, [sp, #16]
   23834:	ldr	x2, [sp, #8]
   23838:	bl	443e8 <vasnprintf@@Base+0x2234>
   2383c:	ldp	x29, x30, [sp, #32]
   23840:	add	sp, sp, #0x30
   23844:	ret

0000000000023848 <stdopen@@Base>:
   23848:	sub	sp, sp, #0x30
   2384c:	stp	x29, x30, [sp, #32]
   23850:	add	x29, sp, #0x20
   23854:	stur	wzr, [x29, #-8]
   23858:	ldur	w8, [x29, #-8]
   2385c:	cmp	w8, #0x2
   23860:	b.gt	2394c <stdopen@@Base+0x104>
   23864:	ldur	w0, [x29, #-8]
   23868:	mov	w1, #0x1                   	// #1
   2386c:	bl	b200 <rpl_fcntl@plt>
   23870:	cmp	w0, #0x0
   23874:	cset	w8, ge  // ge = tcont
   23878:	tbnz	w8, #0, 2393c <stdopen@@Base+0xf4>
   2387c:	ldur	w8, [x29, #-8]
   23880:	mov	w9, wzr
   23884:	mov	w10, #0x1                   	// #1
   23888:	cmp	w8, #0x0
   2388c:	csel	w8, w10, w9, eq  // eq = none
   23890:	stur	w8, [x29, #-12]
   23894:	ldur	w8, [x29, #-8]
   23898:	cbnz	w8, 238b4 <stdopen@@Base+0x6c>
   2389c:	ldur	w1, [x29, #-12]
   238a0:	adrp	x0, 45000 <vasnprintf@@Base+0x2e4c>
   238a4:	add	x0, x0, #0x321
   238a8:	bl	ac00 <open@plt>
   238ac:	str	w0, [sp, #8]
   238b0:	b	238bc <stdopen@@Base+0x74>
   238b4:	mov	w8, #0xffffffff            	// #-1
   238b8:	str	w8, [sp, #8]
   238bc:	ldr	w8, [sp, #8]
   238c0:	str	w8, [sp, #16]
   238c4:	ldr	w8, [sp, #16]
   238c8:	cmp	w8, #0x0
   238cc:	cset	w8, ge  // ge = tcont
   238d0:	tbnz	w8, #0, 238ec <stdopen@@Base+0xa4>
   238d4:	ldur	w1, [x29, #-12]
   238d8:	adrp	x0, 45000 <vasnprintf@@Base+0x2e4c>
   238dc:	add	x0, x0, #0x32b
   238e0:	bl	ac00 <open@plt>
   238e4:	str	w0, [sp, #4]
   238e8:	b	238f4 <stdopen@@Base+0xac>
   238ec:	ldr	w8, [sp, #16]
   238f0:	str	w8, [sp, #4]
   238f4:	ldr	w8, [sp, #4]
   238f8:	str	w8, [sp, #12]
   238fc:	ldr	w8, [sp, #12]
   23900:	cmp	w8, #0x0
   23904:	cset	w8, ge  // ge = tcont
   23908:	tbnz	w8, #0, 2391c <stdopen@@Base+0xd4>
   2390c:	bl	aa20 <__errno_location@plt>
   23910:	ldr	w8, [x0]
   23914:	stur	w8, [x29, #-4]
   23918:	b	23950 <stdopen@@Base+0x108>
   2391c:	ldr	w8, [sp, #12]
   23920:	mov	w9, #0x2                   	// #2
   23924:	cmp	w9, w8
   23928:	b.ge	2393c <stdopen@@Base+0xf4>  // b.tcont
   2392c:	ldr	w0, [sp, #12]
   23930:	bl	ac30 <close@plt>
   23934:	stur	wzr, [x29, #-4]
   23938:	b	23950 <stdopen@@Base+0x108>
   2393c:	ldur	w8, [x29, #-8]
   23940:	add	w8, w8, #0x1
   23944:	stur	w8, [x29, #-8]
   23948:	b	23858 <stdopen@@Base+0x10>
   2394c:	stur	wzr, [x29, #-4]
   23950:	ldur	w0, [x29, #-4]
   23954:	ldp	x29, x30, [sp, #32]
   23958:	add	sp, sp, #0x30
   2395c:	ret

0000000000023960 <strnlen1@@Base>:
   23960:	sub	sp, sp, #0x30
   23964:	stp	x29, x30, [sp, #32]
   23968:	add	x29, sp, #0x20
   2396c:	mov	w8, wzr
   23970:	str	x0, [sp, #16]
   23974:	str	x1, [sp, #8]
   23978:	ldr	x0, [sp, #16]
   2397c:	ldr	x2, [sp, #8]
   23980:	mov	w1, w8
   23984:	bl	ab80 <memchr@plt>
   23988:	str	x0, [sp]
   2398c:	ldr	x9, [sp]
   23990:	cbz	x9, 239ac <strnlen1@@Base+0x4c>
   23994:	ldr	x8, [sp]
   23998:	ldr	x9, [sp, #16]
   2399c:	subs	x8, x8, x9
   239a0:	add	x8, x8, #0x1
   239a4:	stur	x8, [x29, #-8]
   239a8:	b	239b4 <strnlen1@@Base+0x54>
   239ac:	ldr	x8, [sp, #8]
   239b0:	stur	x8, [x29, #-8]
   239b4:	ldur	x0, [x29, #-8]
   239b8:	ldp	x29, x30, [sp, #32]
   239bc:	add	sp, sp, #0x30
   239c0:	ret

00000000000239c4 <try_tempname@@Base>:
   239c4:	sub	sp, sp, #0xa0
   239c8:	stp	x29, x30, [sp, #144]
   239cc:	add	x29, sp, #0x90
   239d0:	mov	w8, #0xffffffff            	// #-1
   239d4:	mov	w9, #0xa2f8                	// #41720
   239d8:	movk	w9, #0x3, lsl #16
   239dc:	adrp	x10, 61000 <gl_rbtree_list_implementation@@Base+0x1468>
   239e0:	add	x10, x10, #0x5e8
   239e4:	adrp	x11, 46000 <vasnprintf@@Base+0x3e4c>
   239e8:	add	x11, x11, #0xf7c
   239ec:	stur	x0, [x29, #-16]
   239f0:	stur	w1, [x29, #-20]
   239f4:	stur	x2, [x29, #-32]
   239f8:	stur	x3, [x29, #-40]
   239fc:	str	w8, [sp, #72]
   23a00:	str	w9, [sp, #36]
   23a04:	str	x10, [sp, #24]
   23a08:	str	x11, [sp, #16]
   23a0c:	bl	aa20 <__errno_location@plt>
   23a10:	ldr	w8, [x0]
   23a14:	str	w8, [sp, #68]
   23a18:	ldr	w8, [sp, #36]
   23a1c:	str	w8, [sp, #64]
   23a20:	ldur	x0, [x29, #-16]
   23a24:	bl	a8e0 <strlen@plt>
   23a28:	stur	w0, [x29, #-44]
   23a2c:	ldur	w8, [x29, #-44]
   23a30:	ldur	w9, [x29, #-20]
   23a34:	add	w9, w9, #0x6
   23a38:	cmp	w8, w9
   23a3c:	b.lt	23a74 <try_tempname@@Base+0xb0>  // b.tstop
   23a40:	ldur	x8, [x29, #-16]
   23a44:	ldur	w9, [x29, #-44]
   23a48:	subs	w9, w9, #0x6
   23a4c:	ldur	w10, [x29, #-20]
   23a50:	subs	w9, w9, w10
   23a54:	mov	w0, w9
   23a58:	sxtw	x11, w0
   23a5c:	add	x0, x8, x11
   23a60:	adrp	x1, 45000 <vasnprintf@@Base+0x2e4c>
   23a64:	add	x1, x1, #0x335
   23a68:	mov	x2, #0x6                   	// #6
   23a6c:	bl	b4b0 <memcmp@plt>
   23a70:	cbz	w0, 23a8c <try_tempname@@Base+0xc8>
   23a74:	bl	aa20 <__errno_location@plt>
   23a78:	mov	w8, #0x16                  	// #22
   23a7c:	str	w8, [x0]
   23a80:	mov	w8, #0xffffffff            	// #-1
   23a84:	stur	w8, [x29, #-4]
   23a88:	b	23cb8 <try_tempname@@Base+0x2f4>
   23a8c:	ldur	x8, [x29, #-16]
   23a90:	ldur	w9, [x29, #-44]
   23a94:	subs	w9, w9, #0x6
   23a98:	ldur	w10, [x29, #-20]
   23a9c:	subs	w9, w9, w10
   23aa0:	mov	w0, w9
   23aa4:	sxtw	x11, w0
   23aa8:	add	x8, x8, x11
   23aac:	stur	x8, [x29, #-56]
   23ab0:	add	x0, sp, #0x30
   23ab4:	mov	x8, xzr
   23ab8:	mov	x1, x8
   23abc:	bl	b510 <gettimeofday@plt>
   23ac0:	ldr	x8, [sp, #56]
   23ac4:	ldr	x11, [sp, #48]
   23ac8:	eor	x8, x11, x8, lsl #16
   23acc:	stur	x8, [x29, #-64]
   23ad0:	ldur	x8, [x29, #-64]
   23ad4:	str	x8, [sp, #8]
   23ad8:	bl	a9c0 <getpid@plt>
   23adc:	mov	w1, w0
   23ae0:	sxtw	x8, w1
   23ae4:	ldr	x11, [sp, #8]
   23ae8:	eor	x8, x11, x8
   23aec:	ldr	x12, [sp, #24]
   23af0:	ldr	x13, [x12]
   23af4:	add	x8, x13, x8
   23af8:	str	x8, [x12]
   23afc:	stur	wzr, [x29, #-68]
   23b00:	ldur	w8, [x29, #-68]
   23b04:	ldr	w9, [sp, #64]
   23b08:	cmp	w8, w9
   23b0c:	b.cs	23ca4 <try_tempname@@Base+0x2e0>  // b.hs, b.nlast
   23b10:	ldr	x8, [sp, #24]
   23b14:	ldr	x9, [x8]
   23b18:	str	x9, [sp, #40]
   23b1c:	ldr	x9, [sp, #40]
   23b20:	mov	x10, #0x3e                  	// #62
   23b24:	udiv	x11, x9, x10
   23b28:	mul	x11, x11, x10
   23b2c:	subs	x9, x9, x11
   23b30:	ldr	x11, [sp, #16]
   23b34:	add	x9, x11, x9
   23b38:	ldrb	w12, [x9]
   23b3c:	ldur	x9, [x29, #-56]
   23b40:	strb	w12, [x9]
   23b44:	ldr	x9, [sp, #40]
   23b48:	udiv	x9, x9, x10
   23b4c:	str	x9, [sp, #40]
   23b50:	ldr	x9, [sp, #40]
   23b54:	udiv	x13, x9, x10
   23b58:	mul	x13, x13, x10
   23b5c:	subs	x9, x9, x13
   23b60:	add	x9, x11, x9
   23b64:	ldrb	w12, [x9]
   23b68:	ldur	x9, [x29, #-56]
   23b6c:	strb	w12, [x9, #1]
   23b70:	ldr	x9, [sp, #40]
   23b74:	udiv	x9, x9, x10
   23b78:	str	x9, [sp, #40]
   23b7c:	ldr	x9, [sp, #40]
   23b80:	udiv	x13, x9, x10
   23b84:	mul	x13, x13, x10
   23b88:	subs	x9, x9, x13
   23b8c:	add	x9, x11, x9
   23b90:	ldrb	w12, [x9]
   23b94:	ldur	x9, [x29, #-56]
   23b98:	strb	w12, [x9, #2]
   23b9c:	ldr	x9, [sp, #40]
   23ba0:	udiv	x9, x9, x10
   23ba4:	str	x9, [sp, #40]
   23ba8:	ldr	x9, [sp, #40]
   23bac:	udiv	x13, x9, x10
   23bb0:	mul	x13, x13, x10
   23bb4:	subs	x9, x9, x13
   23bb8:	add	x9, x11, x9
   23bbc:	ldrb	w12, [x9]
   23bc0:	ldur	x9, [x29, #-56]
   23bc4:	strb	w12, [x9, #3]
   23bc8:	ldr	x9, [sp, #40]
   23bcc:	udiv	x9, x9, x10
   23bd0:	str	x9, [sp, #40]
   23bd4:	ldr	x9, [sp, #40]
   23bd8:	udiv	x13, x9, x10
   23bdc:	mul	x13, x13, x10
   23be0:	subs	x9, x9, x13
   23be4:	add	x9, x11, x9
   23be8:	ldrb	w12, [x9]
   23bec:	ldur	x9, [x29, #-56]
   23bf0:	strb	w12, [x9, #4]
   23bf4:	ldr	x9, [sp, #40]
   23bf8:	udiv	x9, x9, x10
   23bfc:	str	x9, [sp, #40]
   23c00:	ldr	x9, [sp, #40]
   23c04:	udiv	x13, x9, x10
   23c08:	mul	x10, x13, x10
   23c0c:	subs	x9, x9, x10
   23c10:	add	x9, x11, x9
   23c14:	ldrb	w12, [x9]
   23c18:	ldur	x9, [x29, #-56]
   23c1c:	strb	w12, [x9, #5]
   23c20:	ldur	x9, [x29, #-40]
   23c24:	ldur	x0, [x29, #-16]
   23c28:	ldur	x1, [x29, #-32]
   23c2c:	blr	x9
   23c30:	str	w0, [sp, #72]
   23c34:	ldr	w12, [sp, #72]
   23c38:	cmp	w12, #0x0
   23c3c:	cset	w12, lt  // lt = tstop
   23c40:	tbnz	w12, #0, 23c64 <try_tempname@@Base+0x2a0>
   23c44:	ldr	w8, [sp, #68]
   23c48:	str	w8, [sp, #4]
   23c4c:	bl	aa20 <__errno_location@plt>
   23c50:	ldr	w8, [sp, #4]
   23c54:	str	w8, [x0]
   23c58:	ldr	w9, [sp, #72]
   23c5c:	stur	w9, [x29, #-4]
   23c60:	b	23cb8 <try_tempname@@Base+0x2f4>
   23c64:	bl	aa20 <__errno_location@plt>
   23c68:	ldr	w8, [x0]
   23c6c:	cmp	w8, #0x11
   23c70:	b.eq	23c80 <try_tempname@@Base+0x2bc>  // b.none
   23c74:	mov	w8, #0xffffffff            	// #-1
   23c78:	stur	w8, [x29, #-4]
   23c7c:	b	23cb8 <try_tempname@@Base+0x2f4>
   23c80:	ldr	x8, [sp, #24]
   23c84:	ldr	x9, [x8]
   23c88:	mov	x10, #0x1e61                	// #7777
   23c8c:	add	x9, x9, x10
   23c90:	str	x9, [x8]
   23c94:	ldur	w11, [x29, #-68]
   23c98:	add	w11, w11, #0x1
   23c9c:	stur	w11, [x29, #-68]
   23ca0:	b	23b00 <try_tempname@@Base+0x13c>
   23ca4:	bl	aa20 <__errno_location@plt>
   23ca8:	mov	w8, #0x11                  	// #17
   23cac:	str	w8, [x0]
   23cb0:	mov	w8, #0xffffffff            	// #-1
   23cb4:	stur	w8, [x29, #-4]
   23cb8:	ldur	w0, [x29, #-4]
   23cbc:	ldp	x29, x30, [sp, #144]
   23cc0:	add	sp, sp, #0xa0
   23cc4:	ret

0000000000023cc8 <gen_tempname@@Base>:
   23cc8:	sub	sp, sp, #0x40
   23ccc:	stp	x29, x30, [sp, #48]
   23cd0:	add	x29, sp, #0x30
   23cd4:	stur	x0, [x29, #-8]
   23cd8:	stur	w1, [x29, #-12]
   23cdc:	stur	w2, [x29, #-16]
   23ce0:	stur	w3, [x29, #-20]
   23ce4:	ldur	w8, [x29, #-20]
   23ce8:	str	w8, [sp, #12]
   23cec:	cbz	w8, 23d14 <gen_tempname@@Base+0x4c>
   23cf0:	b	23cf4 <gen_tempname@@Base+0x2c>
   23cf4:	ldr	w8, [sp, #12]
   23cf8:	cmp	w8, #0x1
   23cfc:	b.eq	23d24 <gen_tempname@@Base+0x5c>  // b.none
   23d00:	b	23d04 <gen_tempname@@Base+0x3c>
   23d04:	ldr	w8, [sp, #12]
   23d08:	cmp	w8, #0x2
   23d0c:	b.eq	23d34 <gen_tempname@@Base+0x6c>  // b.none
   23d10:	b	23d44 <gen_tempname@@Base+0x7c>
   23d14:	adrp	x8, 23000 <restore_cwd@@Base+0x44>
   23d18:	add	x8, x8, #0xd84
   23d1c:	str	x8, [sp, #16]
   23d20:	b	23d64 <gen_tempname@@Base+0x9c>
   23d24:	adrp	x8, 23000 <restore_cwd@@Base+0x44>
   23d28:	add	x8, x8, #0xdd0
   23d2c:	str	x8, [sp, #16]
   23d30:	b	23d64 <gen_tempname@@Base+0x9c>
   23d34:	adrp	x8, 23000 <restore_cwd@@Base+0x44>
   23d38:	add	x8, x8, #0xe00
   23d3c:	str	x8, [sp, #16]
   23d40:	b	23d64 <gen_tempname@@Base+0x9c>
   23d44:	adrp	x0, 45000 <vasnprintf@@Base+0x2e4c>
   23d48:	add	x0, x0, #0x33c
   23d4c:	adrp	x1, 45000 <vasnprintf@@Base+0x2e4c>
   23d50:	add	x1, x1, #0x35f
   23d54:	mov	w2, #0x13f                 	// #319
   23d58:	adrp	x3, 45000 <vasnprintf@@Base+0x2e4c>
   23d5c:	add	x3, x3, #0x36a
   23d60:	bl	a910 <__assert_fail@plt>
   23d64:	ldur	x0, [x29, #-8]
   23d68:	ldur	w1, [x29, #-12]
   23d6c:	ldr	x3, [sp, #16]
   23d70:	sub	x2, x29, #0x10
   23d74:	bl	b520 <try_tempname@plt>
   23d78:	ldp	x29, x30, [sp, #48]
   23d7c:	add	sp, sp, #0x40
   23d80:	ret
   23d84:	sub	sp, sp, #0x30
   23d88:	stp	x29, x30, [sp, #32]
   23d8c:	add	x29, sp, #0x20
   23d90:	mov	w2, #0x180                 	// #384
   23d94:	stur	x0, [x29, #-8]
   23d98:	str	x1, [sp, #16]
   23d9c:	ldr	x8, [sp, #16]
   23da0:	str	x8, [sp, #8]
   23da4:	ldur	x0, [x29, #-8]
   23da8:	ldr	x8, [sp, #8]
   23dac:	ldr	w9, [x8]
   23db0:	and	w9, w9, #0xfffffffc
   23db4:	orr	w9, w9, #0x2
   23db8:	orr	w9, w9, #0x40
   23dbc:	orr	w1, w9, #0x80
   23dc0:	bl	ac00 <open@plt>
   23dc4:	ldp	x29, x30, [sp, #32]
   23dc8:	add	sp, sp, #0x30
   23dcc:	ret
   23dd0:	sub	sp, sp, #0x20
   23dd4:	stp	x29, x30, [sp, #16]
   23dd8:	add	x29, sp, #0x10
   23ddc:	mov	w8, #0x1c0                 	// #448
   23de0:	str	x0, [sp, #8]
   23de4:	str	x1, [sp]
   23de8:	ldr	x0, [sp, #8]
   23dec:	mov	w1, w8
   23df0:	bl	b530 <mkdir@plt>
   23df4:	ldp	x29, x30, [sp, #16]
   23df8:	add	sp, sp, #0x20
   23dfc:	ret
   23e00:	sub	sp, sp, #0xa0
   23e04:	stp	x29, x30, [sp, #144]
   23e08:	add	x29, sp, #0x90
   23e0c:	mov	x8, sp
   23e10:	stur	x0, [x29, #-8]
   23e14:	stur	x1, [x29, #-16]
   23e18:	ldur	x0, [x29, #-8]
   23e1c:	mov	x1, x8
   23e20:	bl	443d8 <vasnprintf@@Base+0x2224>
   23e24:	cbz	w0, 23e38 <gen_tempname@@Base+0x170>
   23e28:	bl	aa20 <__errno_location@plt>
   23e2c:	ldr	w8, [x0]
   23e30:	cmp	w8, #0x4b
   23e34:	b.ne	23e44 <gen_tempname@@Base+0x17c>  // b.any
   23e38:	bl	aa20 <__errno_location@plt>
   23e3c:	mov	w8, #0x11                  	// #17
   23e40:	str	w8, [x0]
   23e44:	bl	aa20 <__errno_location@plt>
   23e48:	ldr	w8, [x0]
   23e4c:	mov	w9, #0xffffffff            	// #-1
   23e50:	mov	w10, wzr
   23e54:	cmp	w8, #0x2
   23e58:	csel	w0, w10, w9, eq  // eq = none
   23e5c:	ldp	x29, x30, [sp, #144]
   23e60:	add	sp, sp, #0xa0
   23e64:	ret

0000000000023e68 <make_timespec@@Base>:
   23e68:	sub	sp, sp, #0x20
   23e6c:	str	x0, [sp, #8]
   23e70:	str	x1, [sp]
   23e74:	ldr	x8, [sp, #8]
   23e78:	str	x8, [sp, #16]
   23e7c:	ldr	x8, [sp]
   23e80:	str	x8, [sp, #24]
   23e84:	ldr	x0, [sp, #16]
   23e88:	ldr	x1, [sp, #24]
   23e8c:	add	sp, sp, #0x20
   23e90:	ret

0000000000023e94 <timespec_cmp@@Base>:
   23e94:	sub	sp, sp, #0x30
   23e98:	str	x0, [sp, #24]
   23e9c:	str	x1, [sp, #32]
   23ea0:	str	x2, [sp, #8]
   23ea4:	str	x3, [sp, #16]
   23ea8:	ldr	x8, [sp, #24]
   23eac:	ldr	x9, [sp, #8]
   23eb0:	cmp	x8, x9
   23eb4:	b.ge	23ec4 <timespec_cmp@@Base+0x30>  // b.tcont
   23eb8:	mov	w8, #0xffffffff            	// #-1
   23ebc:	str	w8, [sp, #44]
   23ec0:	b	23f40 <timespec_cmp@@Base+0xac>
   23ec4:	ldr	x8, [sp, #24]
   23ec8:	ldr	x9, [sp, #8]
   23ecc:	cmp	x8, x9
   23ed0:	b.le	23ee0 <timespec_cmp@@Base+0x4c>
   23ed4:	mov	w8, #0x1                   	// #1
   23ed8:	str	w8, [sp, #44]
   23edc:	b	23f40 <timespec_cmp@@Base+0xac>
   23ee0:	ldr	x8, [sp, #32]
   23ee4:	mov	x9, #0xffffffffffffffff    	// #-1
   23ee8:	cmp	x9, x8
   23eec:	b.gt	23f08 <timespec_cmp@@Base+0x74>
   23ef0:	ldr	x8, [sp, #32]
   23ef4:	mov	x9, #0x9400                	// #37888
   23ef8:	movk	x9, #0x7735, lsl #16
   23efc:	cmp	x8, x9
   23f00:	b.gt	23f08 <timespec_cmp@@Base+0x74>
   23f04:	b	23f08 <timespec_cmp@@Base+0x74>
   23f08:	ldr	x8, [sp, #16]
   23f0c:	mov	x9, #0xffffffffffffffff    	// #-1
   23f10:	cmp	x9, x8
   23f14:	b.gt	23f30 <timespec_cmp@@Base+0x9c>
   23f18:	ldr	x8, [sp, #16]
   23f1c:	mov	x9, #0x9400                	// #37888
   23f20:	movk	x9, #0x7735, lsl #16
   23f24:	cmp	x8, x9
   23f28:	b.gt	23f30 <timespec_cmp@@Base+0x9c>
   23f2c:	b	23f30 <timespec_cmp@@Base+0x9c>
   23f30:	ldr	x8, [sp, #32]
   23f34:	ldr	x9, [sp, #16]
   23f38:	subs	x8, x8, x9
   23f3c:	str	w8, [sp, #44]
   23f40:	ldr	w0, [sp, #44]
   23f44:	add	sp, sp, #0x30
   23f48:	ret

0000000000023f4c <timespec_sign@@Base>:
   23f4c:	sub	sp, sp, #0x20
   23f50:	str	x0, [sp, #16]
   23f54:	str	x1, [sp, #24]
   23f58:	ldr	x8, [sp, #16]
   23f5c:	cmp	x8, #0x0
   23f60:	cset	w9, ge  // ge = tcont
   23f64:	tbnz	w9, #0, 23f74 <timespec_sign@@Base+0x28>
   23f68:	mov	w8, #0xffffffff            	// #-1
   23f6c:	str	w8, [sp, #12]
   23f70:	b	23fa0 <timespec_sign@@Base+0x54>
   23f74:	ldr	x8, [sp, #16]
   23f78:	mov	w9, #0x1                   	// #1
   23f7c:	str	w9, [sp, #8]
   23f80:	cbnz	x8, 23f94 <timespec_sign@@Base+0x48>
   23f84:	ldr	x8, [sp, #24]
   23f88:	cmp	x8, #0x0
   23f8c:	cset	w9, ne  // ne = any
   23f90:	str	w9, [sp, #8]
   23f94:	ldr	w8, [sp, #8]
   23f98:	and	w8, w8, #0x1
   23f9c:	str	w8, [sp, #12]
   23fa0:	ldr	w8, [sp, #12]
   23fa4:	mov	w0, w8
   23fa8:	add	sp, sp, #0x20
   23fac:	ret

0000000000023fb0 <timespectod@@Base>:
   23fb0:	sub	sp, sp, #0x10
   23fb4:	mov	x8, #0xcd6500000000        	// #225833675390976
   23fb8:	movk	x8, #0x41cd, lsl #48
   23fbc:	fmov	d0, x8
   23fc0:	str	x0, [sp]
   23fc4:	str	x1, [sp, #8]
   23fc8:	ldr	x8, [sp]
   23fcc:	scvtf	d1, x8
   23fd0:	ldr	x8, [sp, #8]
   23fd4:	scvtf	d2, x8
   23fd8:	fdiv	d0, d2, d0
   23fdc:	fadd	d0, d1, d0
   23fe0:	add	sp, sp, #0x10
   23fe4:	ret

0000000000023fe8 <dup_safer@@Base>:
   23fe8:	sub	sp, sp, #0x20
   23fec:	stp	x29, x30, [sp, #16]
   23ff0:	add	x29, sp, #0x10
   23ff4:	mov	w8, wzr
   23ff8:	mov	w2, #0x3                   	// #3
   23ffc:	stur	w0, [x29, #-4]
   24000:	ldur	w0, [x29, #-4]
   24004:	mov	w1, w8
   24008:	bl	b200 <rpl_fcntl@plt>
   2400c:	ldp	x29, x30, [sp, #16]
   24010:	add	sp, sp, #0x20
   24014:	ret

0000000000024018 <fd_safer@@Base>:
   24018:	sub	sp, sp, #0x20
   2401c:	stp	x29, x30, [sp, #16]
   24020:	add	x29, sp, #0x10
   24024:	mov	w8, wzr
   24028:	stur	w0, [x29, #-4]
   2402c:	ldur	w9, [x29, #-4]
   24030:	cmp	w8, w9
   24034:	cset	w8, gt
   24038:	tbnz	w8, #0, 24084 <fd_safer@@Base+0x6c>
   2403c:	ldur	w8, [x29, #-4]
   24040:	cmp	w8, #0x2
   24044:	b.gt	24084 <fd_safer@@Base+0x6c>
   24048:	ldur	w0, [x29, #-4]
   2404c:	bl	b540 <dup_safer@plt>
   24050:	str	w0, [sp, #8]
   24054:	bl	aa20 <__errno_location@plt>
   24058:	ldr	w8, [x0]
   2405c:	str	w8, [sp, #4]
   24060:	ldur	w0, [x29, #-4]
   24064:	bl	ac30 <close@plt>
   24068:	ldr	w8, [sp, #4]
   2406c:	str	w8, [sp]
   24070:	bl	aa20 <__errno_location@plt>
   24074:	ldr	w8, [sp]
   24078:	str	w8, [x0]
   2407c:	ldr	w9, [sp, #8]
   24080:	stur	w9, [x29, #-4]
   24084:	ldur	w0, [x29, #-4]
   24088:	ldp	x29, x30, [sp, #16]
   2408c:	add	sp, sp, #0x20
   24090:	ret

0000000000024094 <pipe_safer@@Base>:
   24094:	sub	sp, sp, #0x30
   24098:	stp	x29, x30, [sp, #32]
   2409c:	add	x29, sp, #0x20
   240a0:	str	x0, [sp, #16]
   240a4:	ldr	x0, [sp, #16]
   240a8:	bl	b550 <pipe@plt>
   240ac:	cbnz	w0, 24150 <pipe_safer@@Base+0xbc>
   240b0:	str	wzr, [sp, #12]
   240b4:	ldr	w8, [sp, #12]
   240b8:	cmp	w8, #0x2
   240bc:	b.ge	24148 <pipe_safer@@Base+0xb4>  // b.tcont
   240c0:	ldr	x8, [sp, #16]
   240c4:	ldrsw	x9, [sp, #12]
   240c8:	ldr	w0, [x8, x9, lsl #2]
   240cc:	bl	b560 <fd_safer@plt>
   240d0:	ldr	x8, [sp, #16]
   240d4:	ldrsw	x9, [sp, #12]
   240d8:	str	w0, [x8, x9, lsl #2]
   240dc:	ldr	x8, [sp, #16]
   240e0:	ldrsw	x9, [sp, #12]
   240e4:	ldr	w10, [x8, x9, lsl #2]
   240e8:	cmp	w10, #0x0
   240ec:	cset	w10, ge  // ge = tcont
   240f0:	tbnz	w10, #0, 24138 <pipe_safer@@Base+0xa4>
   240f4:	bl	aa20 <__errno_location@plt>
   240f8:	ldr	w8, [x0]
   240fc:	str	w8, [sp, #8]
   24100:	ldr	x9, [sp, #16]
   24104:	ldr	w8, [sp, #12]
   24108:	mov	w10, #0x1                   	// #1
   2410c:	subs	w8, w10, w8
   24110:	ldr	w0, [x9, w8, sxtw #2]
   24114:	bl	ac30 <close@plt>
   24118:	ldr	w8, [sp, #8]
   2411c:	str	w8, [sp, #4]
   24120:	bl	aa20 <__errno_location@plt>
   24124:	ldr	w8, [sp, #4]
   24128:	str	w8, [x0]
   2412c:	mov	w10, #0xffffffff            	// #-1
   24130:	stur	w10, [x29, #-4]
   24134:	b	24158 <pipe_safer@@Base+0xc4>
   24138:	ldr	w8, [sp, #12]
   2413c:	add	w8, w8, #0x1
   24140:	str	w8, [sp, #12]
   24144:	b	240b4 <pipe_safer@@Base+0x20>
   24148:	stur	wzr, [x29, #-4]
   2414c:	b	24158 <pipe_safer@@Base+0xc4>
   24150:	mov	w8, #0xffffffff            	// #-1
   24154:	stur	w8, [x29, #-4]
   24158:	ldur	w0, [x29, #-4]
   2415c:	ldp	x29, x30, [sp, #32]
   24160:	add	sp, sp, #0x30
   24164:	ret

0000000000024168 <fdutimens@@Base>:
   24168:	sub	sp, sp, #0x1b0
   2416c:	stp	x29, x30, [sp, #400]
   24170:	str	x28, [sp, #416]
   24174:	add	x29, sp, #0x190
   24178:	adrp	x8, 61000 <gl_rbtree_list_implementation@@Base+0x1468>
   2417c:	add	x8, x8, #0x5f0
   24180:	stur	w0, [x29, #-8]
   24184:	stur	x1, [x29, #-16]
   24188:	stur	x2, [x29, #-24]
   2418c:	ldur	x9, [x29, #-24]
   24190:	str	x8, [sp, #40]
   24194:	cbz	x9, 241a4 <fdutimens@@Base+0x3c>
   24198:	sub	x8, x29, #0x40
   2419c:	str	x8, [sp, #32]
   241a0:	b	241ac <fdutimens@@Base+0x44>
   241a4:	mov	x8, xzr
   241a8:	str	x8, [sp, #32]
   241ac:	ldr	x8, [sp, #32]
   241b0:	stur	x8, [x29, #-72]
   241b4:	stur	wzr, [x29, #-76]
   241b8:	ldur	x8, [x29, #-72]
   241bc:	cbz	x8, 241e4 <fdutimens@@Base+0x7c>
   241c0:	ldur	x8, [x29, #-24]
   241c4:	ldr	q0, [x8]
   241c8:	stur	q0, [x29, #-64]
   241cc:	ldur	x8, [x29, #-24]
   241d0:	ldr	q0, [x8, #16]
   241d4:	stur	q0, [x29, #-48]
   241d8:	ldur	x0, [x29, #-72]
   241dc:	bl	246a8 <fdutimens@@Base+0x540>
   241e0:	stur	w0, [x29, #-76]
   241e4:	ldur	w8, [x29, #-76]
   241e8:	cmp	w8, #0x0
   241ec:	cset	w8, ge  // ge = tcont
   241f0:	tbnz	w8, #0, 24200 <fdutimens@@Base+0x98>
   241f4:	mov	w8, #0xffffffff            	// #-1
   241f8:	stur	w8, [x29, #-4]
   241fc:	b	24694 <fdutimens@@Base+0x52c>
   24200:	ldur	w8, [x29, #-8]
   24204:	cmp	w8, #0x0
   24208:	cset	w8, ge  // ge = tcont
   2420c:	tbnz	w8, #0, 24230 <fdutimens@@Base+0xc8>
   24210:	ldur	x8, [x29, #-16]
   24214:	cbnz	x8, 24230 <fdutimens@@Base+0xc8>
   24218:	bl	aa20 <__errno_location@plt>
   2421c:	mov	w8, #0x9                   	// #9
   24220:	str	w8, [x0]
   24224:	mov	w8, #0xffffffff            	// #-1
   24228:	stur	w8, [x29, #-4]
   2422c:	b	24694 <fdutimens@@Base+0x52c>
   24230:	ldr	x8, [sp, #40]
   24234:	ldr	w9, [x8]
   24238:	mov	w10, wzr
   2423c:	cmp	w10, w9
   24240:	cset	w9, gt
   24244:	tbnz	w9, #0, 24408 <fdutimens@@Base+0x2a0>
   24248:	ldur	w8, [x29, #-76]
   2424c:	cmp	w8, #0x2
   24250:	b.ne	24314 <fdutimens@@Base+0x1ac>  // b.any
   24254:	ldur	w8, [x29, #-8]
   24258:	cmp	w8, #0x0
   2425c:	cset	w8, ge  // ge = tcont
   24260:	tbnz	w8, #0, 24278 <fdutimens@@Base+0x110>
   24264:	ldur	x0, [x29, #-16]
   24268:	add	x1, sp, #0xc0
   2426c:	bl	443b8 <vasnprintf@@Base+0x2204>
   24270:	cbnz	w0, 24288 <fdutimens@@Base+0x120>
   24274:	b	24294 <fdutimens@@Base+0x12c>
   24278:	ldur	w0, [x29, #-8]
   2427c:	add	x1, sp, #0xc0
   24280:	bl	443c8 <vasnprintf@@Base+0x2214>
   24284:	cbz	w0, 24294 <fdutimens@@Base+0x12c>
   24288:	mov	w8, #0xffffffff            	// #-1
   2428c:	stur	w8, [x29, #-4]
   24290:	b	24694 <fdutimens@@Base+0x52c>
   24294:	ldur	x8, [x29, #-72]
   24298:	ldr	x8, [x8, #8]
   2429c:	mov	x9, #0x3ffffffe            	// #1073741822
   242a0:	cmp	x8, x9
   242a4:	b.ne	242d0 <fdutimens@@Base+0x168>  // b.any
   242a8:	ldur	x8, [x29, #-72]
   242ac:	add	x0, sp, #0xc0
   242b0:	str	x8, [sp, #24]
   242b4:	bl	b570 <get_stat_atime@plt>
   242b8:	str	x0, [sp, #168]
   242bc:	str	x1, [sp, #176]
   242c0:	ldur	q0, [sp, #168]
   242c4:	ldr	x8, [sp, #24]
   242c8:	str	q0, [x8]
   242cc:	b	24308 <fdutimens@@Base+0x1a0>
   242d0:	ldur	x8, [x29, #-72]
   242d4:	ldr	x8, [x8, #24]
   242d8:	mov	x9, #0x3ffffffe            	// #1073741822
   242dc:	cmp	x8, x9
   242e0:	b.ne	24308 <fdutimens@@Base+0x1a0>  // b.any
   242e4:	ldur	x8, [x29, #-72]
   242e8:	add	x0, sp, #0xc0
   242ec:	str	x8, [sp, #16]
   242f0:	bl	ae10 <get_stat_mtime@plt>
   242f4:	str	x0, [sp, #152]
   242f8:	str	x1, [sp, #160]
   242fc:	ldur	q0, [sp, #152]
   24300:	ldr	x8, [sp, #16]
   24304:	str	q0, [x8, #16]
   24308:	ldur	w8, [x29, #-76]
   2430c:	add	w8, w8, #0x1
   24310:	stur	w8, [x29, #-76]
   24314:	ldur	w8, [x29, #-8]
   24318:	cmp	w8, #0x0
   2431c:	cset	w8, ge  // ge = tcont
   24320:	tbnz	w8, #0, 24394 <fdutimens@@Base+0x22c>
   24324:	ldur	x1, [x29, #-16]
   24328:	ldur	x2, [x29, #-72]
   2432c:	mov	w0, #0xffffff9c            	// #-100
   24330:	mov	w8, wzr
   24334:	mov	w3, w8
   24338:	str	w8, [sp, #12]
   2433c:	bl	b580 <utimensat@plt>
   24340:	str	w0, [sp, #188]
   24344:	ldr	w8, [sp, #188]
   24348:	ldr	w9, [sp, #12]
   2434c:	cmp	w9, w8
   24350:	cset	w8, ge  // ge = tcont
   24354:	tbnz	w8, #0, 24364 <fdutimens@@Base+0x1fc>
   24358:	bl	aa20 <__errno_location@plt>
   2435c:	mov	w8, #0x26                  	// #38
   24360:	str	w8, [x0]
   24364:	ldr	w8, [sp, #188]
   24368:	cbz	w8, 2437c <fdutimens@@Base+0x214>
   2436c:	bl	aa20 <__errno_location@plt>
   24370:	ldr	w8, [x0]
   24374:	cmp	w8, #0x26
   24378:	b.eq	24394 <fdutimens@@Base+0x22c>  // b.none
   2437c:	mov	w8, #0x1                   	// #1
   24380:	ldr	x9, [sp, #40]
   24384:	str	w8, [x9]
   24388:	ldr	w8, [sp, #188]
   2438c:	stur	w8, [x29, #-4]
   24390:	b	24694 <fdutimens@@Base+0x52c>
   24394:	ldur	w8, [x29, #-8]
   24398:	mov	w9, wzr
   2439c:	cmp	w9, w8
   243a0:	cset	w8, gt
   243a4:	tbnz	w8, #0, 24408 <fdutimens@@Base+0x2a0>
   243a8:	ldur	w0, [x29, #-8]
   243ac:	ldur	x1, [x29, #-72]
   243b0:	bl	b590 <futimens@plt>
   243b4:	str	w0, [sp, #188]
   243b8:	ldr	w8, [sp, #188]
   243bc:	mov	w9, wzr
   243c0:	cmp	w9, w8
   243c4:	cset	w8, ge  // ge = tcont
   243c8:	tbnz	w8, #0, 243d8 <fdutimens@@Base+0x270>
   243cc:	bl	aa20 <__errno_location@plt>
   243d0:	mov	w8, #0x26                  	// #38
   243d4:	str	w8, [x0]
   243d8:	ldr	w8, [sp, #188]
   243dc:	cbz	w8, 243f0 <fdutimens@@Base+0x288>
   243e0:	bl	aa20 <__errno_location@plt>
   243e4:	ldr	w8, [x0]
   243e8:	cmp	w8, #0x26
   243ec:	b.eq	24408 <fdutimens@@Base+0x2a0>  // b.none
   243f0:	mov	w8, #0x1                   	// #1
   243f4:	ldr	x9, [sp, #40]
   243f8:	str	w8, [x9]
   243fc:	ldr	w8, [sp, #188]
   24400:	stur	w8, [x29, #-4]
   24404:	b	24694 <fdutimens@@Base+0x52c>
   24408:	mov	w8, #0xffffffff            	// #-1
   2440c:	ldr	x9, [sp, #40]
   24410:	str	w8, [x9]
   24414:	adrp	x10, 61000 <gl_rbtree_list_implementation@@Base+0x1468>
   24418:	add	x10, x10, #0x5f4
   2441c:	str	w8, [x10]
   24420:	ldur	w8, [x29, #-76]
   24424:	cbz	w8, 24498 <fdutimens@@Base+0x330>
   24428:	ldur	w8, [x29, #-76]
   2442c:	cmp	w8, #0x3
   24430:	b.eq	24474 <fdutimens@@Base+0x30c>  // b.none
   24434:	ldur	w8, [x29, #-8]
   24438:	cmp	w8, #0x0
   2443c:	cset	w8, ge  // ge = tcont
   24440:	tbnz	w8, #0, 24458 <fdutimens@@Base+0x2f0>
   24444:	ldur	x0, [x29, #-16]
   24448:	add	x1, sp, #0xc0
   2444c:	bl	443b8 <vasnprintf@@Base+0x2204>
   24450:	cbnz	w0, 24468 <fdutimens@@Base+0x300>
   24454:	b	24474 <fdutimens@@Base+0x30c>
   24458:	ldur	w0, [x29, #-8]
   2445c:	add	x1, sp, #0xc0
   24460:	bl	443c8 <vasnprintf@@Base+0x2214>
   24464:	cbz	w0, 24474 <fdutimens@@Base+0x30c>
   24468:	mov	w8, #0xffffffff            	// #-1
   2446c:	stur	w8, [x29, #-4]
   24470:	b	24694 <fdutimens@@Base+0x52c>
   24474:	ldur	x8, [x29, #-72]
   24478:	cbz	x8, 24498 <fdutimens@@Base+0x330>
   2447c:	add	x0, sp, #0xc0
   24480:	sub	x1, x29, #0x48
   24484:	bl	24864 <fdutimens@@Base+0x6fc>
   24488:	tbnz	w0, #0, 24490 <fdutimens@@Base+0x328>
   2448c:	b	24498 <fdutimens@@Base+0x330>
   24490:	stur	wzr, [x29, #-4]
   24494:	b	24694 <fdutimens@@Base+0x52c>
   24498:	ldur	x8, [x29, #-72]
   2449c:	cbz	x8, 244e8 <fdutimens@@Base+0x380>
   244a0:	ldur	x8, [x29, #-72]
   244a4:	ldr	x8, [x8]
   244a8:	add	x9, sp, #0x78
   244ac:	str	x8, [sp, #120]
   244b0:	ldur	x8, [x29, #-72]
   244b4:	ldr	x8, [x8, #8]
   244b8:	mov	x10, #0x3e8                 	// #1000
   244bc:	sdiv	x8, x8, x10
   244c0:	str	x8, [sp, #128]
   244c4:	ldur	x8, [x29, #-72]
   244c8:	ldr	x8, [x8, #16]
   244cc:	str	x8, [sp, #136]
   244d0:	ldur	x8, [x29, #-72]
   244d4:	ldr	x8, [x8, #24]
   244d8:	sdiv	x8, x8, x10
   244dc:	str	x8, [sp, #144]
   244e0:	str	x9, [sp, #112]
   244e4:	b	244f0 <fdutimens@@Base+0x388>
   244e8:	mov	x8, xzr
   244ec:	str	x8, [sp, #112]
   244f0:	ldur	w8, [x29, #-8]
   244f4:	cmp	w8, #0x0
   244f8:	cset	w8, ge  // ge = tcont
   244fc:	tbnz	w8, #0, 24518 <fdutimens@@Base+0x3b0>
   24500:	ldur	x1, [x29, #-16]
   24504:	ldr	x2, [sp, #112]
   24508:	mov	w0, #0xffffff9c            	// #-100
   2450c:	bl	b5a0 <futimesat@plt>
   24510:	stur	w0, [x29, #-4]
   24514:	b	24694 <fdutimens@@Base+0x52c>
   24518:	ldur	w0, [x29, #-8]
   2451c:	ldr	x2, [sp, #112]
   24520:	mov	x8, xzr
   24524:	mov	x1, x8
   24528:	bl	b5a0 <futimesat@plt>
   2452c:	cbnz	w0, 24670 <fdutimens@@Base+0x508>
   24530:	ldr	x8, [sp, #112]
   24534:	cbz	x8, 24668 <fdutimens@@Base+0x500>
   24538:	ldr	x8, [sp, #112]
   2453c:	ldr	x8, [x8, #8]
   24540:	mov	x9, #0xa120                	// #41248
   24544:	movk	x9, #0x7, lsl #16
   24548:	cmp	x9, x8
   2454c:	cset	w10, le
   24550:	mov	w11, #0x1                   	// #1
   24554:	and	w10, w10, w11
   24558:	strb	w10, [sp, #111]
   2455c:	ldr	x8, [sp, #112]
   24560:	ldr	x8, [x8, #24]
   24564:	cmp	x9, x8
   24568:	cset	w10, le
   2456c:	and	w10, w10, w11
   24570:	strb	w10, [sp, #110]
   24574:	ldrb	w10, [sp, #111]
   24578:	and	w10, w10, #0x1
   2457c:	ldrb	w11, [sp, #110]
   24580:	and	w11, w11, #0x1
   24584:	orr	w10, w10, w11
   24588:	cbz	w10, 24668 <fdutimens@@Base+0x500>
   2458c:	ldur	w0, [x29, #-8]
   24590:	add	x1, sp, #0xc0
   24594:	bl	443c8 <vasnprintf@@Base+0x2214>
   24598:	cbnz	w0, 24668 <fdutimens@@Base+0x500>
   2459c:	ldr	x8, [sp, #264]
   245a0:	ldr	x9, [sp, #112]
   245a4:	ldr	x9, [x9]
   245a8:	subs	x8, x8, x9
   245ac:	str	x8, [sp, #96]
   245b0:	ldr	x8, [sp, #280]
   245b4:	ldr	x9, [sp, #112]
   245b8:	ldr	x9, [x9, #16]
   245bc:	subs	x8, x8, x9
   245c0:	str	x8, [sp, #88]
   245c4:	mov	x8, xzr
   245c8:	str	x8, [sp, #80]
   245cc:	ldr	x8, [sp, #112]
   245d0:	ldr	q0, [x8]
   245d4:	str	q0, [sp, #48]
   245d8:	ldr	x8, [sp, #112]
   245dc:	ldr	q0, [x8, #16]
   245e0:	str	q0, [sp, #64]
   245e4:	ldrb	w10, [sp, #111]
   245e8:	tbnz	w10, #0, 245f0 <fdutimens@@Base+0x488>
   245ec:	b	24618 <fdutimens@@Base+0x4b0>
   245f0:	ldr	x8, [sp, #96]
   245f4:	cmp	x8, #0x1
   245f8:	b.ne	24618 <fdutimens@@Base+0x4b0>  // b.any
   245fc:	add	x0, sp, #0xc0
   24600:	bl	b5b0 <get_stat_atime_ns@plt>
   24604:	cbnz	x0, 24618 <fdutimens@@Base+0x4b0>
   24608:	add	x8, sp, #0x30
   2460c:	str	x8, [sp, #80]
   24610:	ldr	x8, [sp, #80]
   24614:	str	xzr, [x8, #8]
   24618:	ldrb	w8, [sp, #110]
   2461c:	tbnz	w8, #0, 24624 <fdutimens@@Base+0x4bc>
   24620:	b	2464c <fdutimens@@Base+0x4e4>
   24624:	ldr	x8, [sp, #88]
   24628:	cmp	x8, #0x1
   2462c:	b.ne	2464c <fdutimens@@Base+0x4e4>  // b.any
   24630:	add	x0, sp, #0xc0
   24634:	bl	b5c0 <get_stat_mtime_ns@plt>
   24638:	cbnz	x0, 2464c <fdutimens@@Base+0x4e4>
   2463c:	add	x8, sp, #0x30
   24640:	str	x8, [sp, #80]
   24644:	ldr	x8, [sp, #80]
   24648:	str	xzr, [x8, #24]
   2464c:	ldr	x8, [sp, #80]
   24650:	cbz	x8, 24668 <fdutimens@@Base+0x500>
   24654:	ldur	w0, [x29, #-8]
   24658:	ldr	x2, [sp, #80]
   2465c:	mov	x8, xzr
   24660:	mov	x1, x8
   24664:	bl	b5a0 <futimesat@plt>
   24668:	stur	wzr, [x29, #-4]
   2466c:	b	24694 <fdutimens@@Base+0x52c>
   24670:	ldur	x8, [x29, #-16]
   24674:	cbnz	x8, 24684 <fdutimens@@Base+0x51c>
   24678:	mov	w8, #0xffffffff            	// #-1
   2467c:	stur	w8, [x29, #-4]
   24680:	b	24694 <fdutimens@@Base+0x52c>
   24684:	ldur	x0, [x29, #-16]
   24688:	ldr	x1, [sp, #112]
   2468c:	bl	b5d0 <utimes@plt>
   24690:	stur	w0, [x29, #-4]
   24694:	ldur	w0, [x29, #-4]
   24698:	ldr	x28, [sp, #416]
   2469c:	ldp	x29, x30, [sp, #400]
   246a0:	add	sp, sp, #0x1b0
   246a4:	ret
   246a8:	sub	sp, sp, #0x30
   246ac:	stp	x29, x30, [sp, #32]
   246b0:	add	x29, sp, #0x20
   246b4:	mov	x8, #0x3fffffff            	// #1073741823
   246b8:	str	x0, [sp, #16]
   246bc:	str	wzr, [sp, #12]
   246c0:	str	wzr, [sp, #8]
   246c4:	ldr	x9, [sp, #16]
   246c8:	ldr	x9, [x9, #8]
   246cc:	cmp	x9, x8
   246d0:	b.eq	24718 <fdutimens@@Base+0x5b0>  // b.none
   246d4:	ldr	x8, [sp, #16]
   246d8:	ldr	x8, [x8, #8]
   246dc:	mov	x9, #0x3ffffffe            	// #1073741822
   246e0:	cmp	x8, x9
   246e4:	b.eq	24718 <fdutimens@@Base+0x5b0>  // b.none
   246e8:	ldr	x8, [sp, #16]
   246ec:	ldr	x8, [x8, #8]
   246f0:	mov	x9, xzr
   246f4:	cmp	x9, x8
   246f8:	cset	w10, gt
   246fc:	tbnz	w10, #0, 24770 <fdutimens@@Base+0x608>
   24700:	ldr	x8, [sp, #16]
   24704:	ldr	x8, [x8, #8]
   24708:	mov	x9, #0xca00                	// #51712
   2470c:	movk	x9, #0x3b9a, lsl #16
   24710:	cmp	x8, x9
   24714:	b.ge	24770 <fdutimens@@Base+0x608>  // b.tcont
   24718:	ldr	x8, [sp, #16]
   2471c:	ldr	x8, [x8, #24]
   24720:	mov	x9, #0x3fffffff            	// #1073741823
   24724:	cmp	x8, x9
   24728:	b.eq	24788 <fdutimens@@Base+0x620>  // b.none
   2472c:	ldr	x8, [sp, #16]
   24730:	ldr	x8, [x8, #24]
   24734:	mov	x9, #0x3ffffffe            	// #1073741822
   24738:	cmp	x8, x9
   2473c:	b.eq	24788 <fdutimens@@Base+0x620>  // b.none
   24740:	ldr	x8, [sp, #16]
   24744:	ldr	x8, [x8, #24]
   24748:	mov	x9, xzr
   2474c:	cmp	x9, x8
   24750:	cset	w10, gt
   24754:	tbnz	w10, #0, 24770 <fdutimens@@Base+0x608>
   24758:	ldr	x8, [sp, #16]
   2475c:	ldr	x8, [x8, #24]
   24760:	mov	x9, #0xca00                	// #51712
   24764:	movk	x9, #0x3b9a, lsl #16
   24768:	cmp	x8, x9
   2476c:	b.lt	24788 <fdutimens@@Base+0x620>  // b.tstop
   24770:	bl	aa20 <__errno_location@plt>
   24774:	mov	w8, #0x16                  	// #22
   24778:	str	w8, [x0]
   2477c:	mov	w8, #0xffffffff            	// #-1
   24780:	stur	w8, [x29, #-4]
   24784:	b	24854 <fdutimens@@Base+0x6ec>
   24788:	ldr	x8, [sp, #16]
   2478c:	ldr	x8, [x8, #8]
   24790:	mov	x9, #0x3fffffff            	// #1073741823
   24794:	cmp	x8, x9
   24798:	b.eq	247b0 <fdutimens@@Base+0x648>  // b.none
   2479c:	ldr	x8, [sp, #16]
   247a0:	ldr	x8, [x8, #8]
   247a4:	mov	x9, #0x3ffffffe            	// #1073741822
   247a8:	cmp	x8, x9
   247ac:	b.ne	247e0 <fdutimens@@Base+0x678>  // b.any
   247b0:	ldr	x8, [sp, #16]
   247b4:	str	xzr, [x8]
   247b8:	mov	w9, #0x1                   	// #1
   247bc:	str	w9, [sp, #12]
   247c0:	ldr	x8, [sp, #16]
   247c4:	ldr	x8, [x8, #8]
   247c8:	mov	x10, #0x3ffffffe            	// #1073741822
   247cc:	cmp	x8, x10
   247d0:	b.ne	247e0 <fdutimens@@Base+0x678>  // b.any
   247d4:	ldr	w8, [sp, #8]
   247d8:	add	w8, w8, #0x1
   247dc:	str	w8, [sp, #8]
   247e0:	ldr	x8, [sp, #16]
   247e4:	ldr	x8, [x8, #24]
   247e8:	mov	x9, #0x3fffffff            	// #1073741823
   247ec:	cmp	x8, x9
   247f0:	b.eq	24808 <fdutimens@@Base+0x6a0>  // b.none
   247f4:	ldr	x8, [sp, #16]
   247f8:	ldr	x8, [x8, #24]
   247fc:	mov	x9, #0x3ffffffe            	// #1073741822
   24800:	cmp	x8, x9
   24804:	b.ne	24838 <fdutimens@@Base+0x6d0>  // b.any
   24808:	ldr	x8, [sp, #16]
   2480c:	str	xzr, [x8, #16]
   24810:	mov	w9, #0x1                   	// #1
   24814:	str	w9, [sp, #12]
   24818:	ldr	x8, [sp, #16]
   2481c:	ldr	x8, [x8, #24]
   24820:	mov	x10, #0x3ffffffe            	// #1073741822
   24824:	cmp	x8, x10
   24828:	b.ne	24838 <fdutimens@@Base+0x6d0>  // b.any
   2482c:	ldr	w8, [sp, #8]
   24830:	add	w8, w8, #0x1
   24834:	str	w8, [sp, #8]
   24838:	ldr	w8, [sp, #12]
   2483c:	ldr	w9, [sp, #8]
   24840:	cmp	w9, #0x1
   24844:	cset	w9, eq  // eq = none
   24848:	and	w9, w9, #0x1
   2484c:	add	w8, w8, w9
   24850:	stur	w8, [x29, #-4]
   24854:	ldur	w0, [x29, #-4]
   24858:	ldp	x29, x30, [sp, #32]
   2485c:	add	sp, sp, #0x30
   24860:	ret
   24864:	sub	sp, sp, #0x60
   24868:	stp	x29, x30, [sp, #80]
   2486c:	add	x29, sp, #0x50
   24870:	mov	x8, #0x3ffffffe            	// #1073741822
   24874:	stur	x0, [x29, #-16]
   24878:	stur	x1, [x29, #-24]
   2487c:	ldur	x9, [x29, #-24]
   24880:	ldr	x9, [x9]
   24884:	stur	x9, [x29, #-32]
   24888:	ldur	x9, [x29, #-32]
   2488c:	ldr	x9, [x9, #8]
   24890:	cmp	x9, x8
   24894:	b.ne	248bc <fdutimens@@Base+0x754>  // b.any
   24898:	ldur	x8, [x29, #-32]
   2489c:	ldr	x8, [x8, #24]
   248a0:	mov	x9, #0x3ffffffe            	// #1073741822
   248a4:	cmp	x8, x9
   248a8:	b.ne	248bc <fdutimens@@Base+0x754>  // b.any
   248ac:	mov	w8, #0x1                   	// #1
   248b0:	and	w8, w8, #0x1
   248b4:	sturb	w8, [x29, #-1]
   248b8:	b	249c0 <fdutimens@@Base+0x858>
   248bc:	ldur	x8, [x29, #-32]
   248c0:	ldr	x8, [x8, #8]
   248c4:	mov	x9, #0x3fffffff            	// #1073741823
   248c8:	cmp	x8, x9
   248cc:	b.ne	24900 <fdutimens@@Base+0x798>  // b.any
   248d0:	ldur	x8, [x29, #-32]
   248d4:	ldr	x8, [x8, #24]
   248d8:	mov	x9, #0x3fffffff            	// #1073741823
   248dc:	cmp	x8, x9
   248e0:	b.ne	24900 <fdutimens@@Base+0x798>  // b.any
   248e4:	ldur	x8, [x29, #-24]
   248e8:	mov	x9, xzr
   248ec:	str	x9, [x8]
   248f0:	mov	w10, wzr
   248f4:	and	w10, w10, #0x1
   248f8:	sturb	w10, [x29, #-1]
   248fc:	b	249c0 <fdutimens@@Base+0x858>
   24900:	ldur	x8, [x29, #-32]
   24904:	ldr	x8, [x8, #8]
   24908:	mov	x9, #0x3ffffffe            	// #1073741822
   2490c:	cmp	x8, x9
   24910:	b.ne	2493c <fdutimens@@Base+0x7d4>  // b.any
   24914:	ldur	x8, [x29, #-32]
   24918:	ldur	x0, [x29, #-16]
   2491c:	str	x8, [sp, #8]
   24920:	bl	b570 <get_stat_atime@plt>
   24924:	str	x0, [sp, #32]
   24928:	str	x1, [sp, #40]
   2492c:	ldr	q0, [sp, #32]
   24930:	ldr	x8, [sp, #8]
   24934:	str	q0, [x8]
   24938:	b	24958 <fdutimens@@Base+0x7f0>
   2493c:	ldur	x8, [x29, #-32]
   24940:	ldr	x8, [x8, #8]
   24944:	mov	x9, #0x3fffffff            	// #1073741823
   24948:	cmp	x8, x9
   2494c:	b.ne	24958 <fdutimens@@Base+0x7f0>  // b.any
   24950:	ldur	x0, [x29, #-32]
   24954:	bl	b290 <gettime@plt>
   24958:	ldur	x8, [x29, #-32]
   2495c:	ldr	x8, [x8, #24]
   24960:	mov	x9, #0x3ffffffe            	// #1073741822
   24964:	cmp	x8, x9
   24968:	b.ne	24994 <fdutimens@@Base+0x82c>  // b.any
   2496c:	ldur	x8, [x29, #-32]
   24970:	ldur	x0, [x29, #-16]
   24974:	str	x8, [sp]
   24978:	bl	ae10 <get_stat_mtime@plt>
   2497c:	str	x0, [sp, #16]
   24980:	str	x1, [sp, #24]
   24984:	ldr	q0, [sp, #16]
   24988:	ldr	x8, [sp]
   2498c:	str	q0, [x8, #16]
   24990:	b	249b4 <fdutimens@@Base+0x84c>
   24994:	ldur	x8, [x29, #-32]
   24998:	ldr	x8, [x8, #24]
   2499c:	mov	x9, #0x3fffffff            	// #1073741823
   249a0:	cmp	x8, x9
   249a4:	b.ne	249b4 <fdutimens@@Base+0x84c>  // b.any
   249a8:	ldur	x8, [x29, #-32]
   249ac:	add	x0, x8, #0x10
   249b0:	bl	b290 <gettime@plt>
   249b4:	mov	w8, wzr
   249b8:	and	w8, w8, #0x1
   249bc:	sturb	w8, [x29, #-1]
   249c0:	ldurb	w8, [x29, #-1]
   249c4:	and	w0, w8, #0x1
   249c8:	ldp	x29, x30, [sp, #80]
   249cc:	add	sp, sp, #0x60
   249d0:	ret

00000000000249d4 <utimens@@Base>:
   249d4:	sub	sp, sp, #0x20
   249d8:	stp	x29, x30, [sp, #16]
   249dc:	add	x29, sp, #0x10
   249e0:	mov	w8, #0xffffffff            	// #-1
   249e4:	str	x0, [sp, #8]
   249e8:	str	x1, [sp]
   249ec:	ldr	x1, [sp, #8]
   249f0:	ldr	x2, [sp]
   249f4:	mov	w0, w8
   249f8:	bl	b5e0 <fdutimens@plt>
   249fc:	ldp	x29, x30, [sp, #16]
   24a00:	add	sp, sp, #0x20
   24a04:	ret

0000000000024a08 <lutimens@@Base>:
   24a08:	sub	sp, sp, #0x140
   24a0c:	stp	x29, x30, [sp, #288]
   24a10:	str	x28, [sp, #304]
   24a14:	add	x29, sp, #0x120
   24a18:	sub	x8, x29, #0x40
   24a1c:	adrp	x9, 61000 <gl_rbtree_list_implementation@@Base+0x1468>
   24a20:	add	x9, x9, #0x5f4
   24a24:	stur	x0, [x29, #-16]
   24a28:	stur	x1, [x29, #-24]
   24a2c:	ldur	x10, [x29, #-24]
   24a30:	str	x8, [sp, #32]
   24a34:	str	x9, [sp, #24]
   24a38:	cbz	x10, 24a48 <lutimens@@Base+0x40>
   24a3c:	sub	x8, x29, #0x40
   24a40:	str	x8, [sp, #16]
   24a44:	b	24a50 <lutimens@@Base+0x48>
   24a48:	mov	x8, xzr
   24a4c:	str	x8, [sp, #16]
   24a50:	ldr	x8, [sp, #16]
   24a54:	stur	x8, [x29, #-72]
   24a58:	stur	wzr, [x29, #-76]
   24a5c:	ldur	x8, [x29, #-72]
   24a60:	cbz	x8, 24a8c <lutimens@@Base+0x84>
   24a64:	ldur	x8, [x29, #-24]
   24a68:	ldr	q0, [x8]
   24a6c:	ldr	x8, [sp, #32]
   24a70:	str	q0, [x8]
   24a74:	ldur	x9, [x29, #-24]
   24a78:	ldr	q0, [x9, #16]
   24a7c:	str	q0, [x8, #16]
   24a80:	ldur	x0, [x29, #-72]
   24a84:	bl	246a8 <fdutimens@@Base+0x540>
   24a88:	stur	w0, [x29, #-76]
   24a8c:	ldur	w8, [x29, #-76]
   24a90:	cmp	w8, #0x0
   24a94:	cset	w8, ge  // ge = tcont
   24a98:	tbnz	w8, #0, 24aa8 <lutimens@@Base+0xa0>
   24a9c:	mov	w8, #0xffffffff            	// #-1
   24aa0:	stur	w8, [x29, #-4]
   24aa4:	b	24c9c <lutimens@@Base+0x294>
   24aa8:	ldr	x8, [sp, #24]
   24aac:	ldr	w9, [x8]
   24ab0:	mov	w10, wzr
   24ab4:	cmp	w10, w9
   24ab8:	cset	w9, gt
   24abc:	tbnz	w9, #0, 24bdc <lutimens@@Base+0x1d4>
   24ac0:	ldur	w8, [x29, #-76]
   24ac4:	cmp	w8, #0x2
   24ac8:	b.ne	24b68 <lutimens@@Base+0x160>  // b.any
   24acc:	ldur	x0, [x29, #-16]
   24ad0:	add	x1, sp, #0x50
   24ad4:	bl	443d8 <vasnprintf@@Base+0x2224>
   24ad8:	cbz	w0, 24ae8 <lutimens@@Base+0xe0>
   24adc:	mov	w8, #0xffffffff            	// #-1
   24ae0:	stur	w8, [x29, #-4]
   24ae4:	b	24c9c <lutimens@@Base+0x294>
   24ae8:	ldur	x8, [x29, #-72]
   24aec:	ldr	x8, [x8, #8]
   24af0:	mov	x9, #0x3ffffffe            	// #1073741822
   24af4:	cmp	x8, x9
   24af8:	b.ne	24b24 <lutimens@@Base+0x11c>  // b.any
   24afc:	ldur	x8, [x29, #-72]
   24b00:	add	x0, sp, #0x50
   24b04:	str	x8, [sp, #8]
   24b08:	bl	b570 <get_stat_atime@plt>
   24b0c:	str	x0, [sp, #56]
   24b10:	str	x1, [sp, #64]
   24b14:	ldur	q0, [sp, #56]
   24b18:	ldr	x8, [sp, #8]
   24b1c:	str	q0, [x8]
   24b20:	b	24b5c <lutimens@@Base+0x154>
   24b24:	ldur	x8, [x29, #-72]
   24b28:	ldr	x8, [x8, #24]
   24b2c:	mov	x9, #0x3ffffffe            	// #1073741822
   24b30:	cmp	x8, x9
   24b34:	b.ne	24b5c <lutimens@@Base+0x154>  // b.any
   24b38:	ldur	x8, [x29, #-72]
   24b3c:	add	x0, sp, #0x50
   24b40:	str	x8, [sp]
   24b44:	bl	ae10 <get_stat_mtime@plt>
   24b48:	str	x0, [sp, #40]
   24b4c:	str	x1, [sp, #48]
   24b50:	ldur	q0, [sp, #40]
   24b54:	ldr	x8, [sp]
   24b58:	str	q0, [x8, #16]
   24b5c:	ldur	w8, [x29, #-76]
   24b60:	add	w8, w8, #0x1
   24b64:	stur	w8, [x29, #-76]
   24b68:	ldur	x1, [x29, #-16]
   24b6c:	ldur	x2, [x29, #-72]
   24b70:	mov	w0, #0xffffff9c            	// #-100
   24b74:	mov	w3, #0x100                 	// #256
   24b78:	bl	b580 <utimensat@plt>
   24b7c:	str	w0, [sp, #76]
   24b80:	ldr	w8, [sp, #76]
   24b84:	mov	w9, wzr
   24b88:	cmp	w9, w8
   24b8c:	cset	w8, ge  // ge = tcont
   24b90:	tbnz	w8, #0, 24ba0 <lutimens@@Base+0x198>
   24b94:	bl	aa20 <__errno_location@plt>
   24b98:	mov	w8, #0x26                  	// #38
   24b9c:	str	w8, [x0]
   24ba0:	ldr	w8, [sp, #76]
   24ba4:	cbz	w8, 24bb8 <lutimens@@Base+0x1b0>
   24ba8:	bl	aa20 <__errno_location@plt>
   24bac:	ldr	w8, [x0]
   24bb0:	cmp	w8, #0x26
   24bb4:	b.eq	24bdc <lutimens@@Base+0x1d4>  // b.none
   24bb8:	adrp	x8, 61000 <gl_rbtree_list_implementation@@Base+0x1468>
   24bbc:	add	x8, x8, #0x5f0
   24bc0:	mov	w9, #0x1                   	// #1
   24bc4:	str	w9, [x8]
   24bc8:	ldr	x8, [sp, #24]
   24bcc:	str	w9, [x8]
   24bd0:	ldr	w9, [sp, #76]
   24bd4:	stur	w9, [x29, #-4]
   24bd8:	b	24c9c <lutimens@@Base+0x294>
   24bdc:	mov	w8, #0xffffffff            	// #-1
   24be0:	ldr	x9, [sp, #24]
   24be4:	str	w8, [x9]
   24be8:	ldur	w8, [x29, #-76]
   24bec:	cbz	w8, 24c3c <lutimens@@Base+0x234>
   24bf0:	ldur	w8, [x29, #-76]
   24bf4:	cmp	w8, #0x3
   24bf8:	b.eq	24c18 <lutimens@@Base+0x210>  // b.none
   24bfc:	ldur	x0, [x29, #-16]
   24c00:	add	x1, sp, #0x50
   24c04:	bl	443d8 <vasnprintf@@Base+0x2224>
   24c08:	cbz	w0, 24c18 <lutimens@@Base+0x210>
   24c0c:	mov	w8, #0xffffffff            	// #-1
   24c10:	stur	w8, [x29, #-4]
   24c14:	b	24c9c <lutimens@@Base+0x294>
   24c18:	ldur	x8, [x29, #-72]
   24c1c:	cbz	x8, 24c3c <lutimens@@Base+0x234>
   24c20:	add	x0, sp, #0x50
   24c24:	sub	x1, x29, #0x48
   24c28:	bl	24864 <fdutimens@@Base+0x6fc>
   24c2c:	tbnz	w0, #0, 24c34 <lutimens@@Base+0x22c>
   24c30:	b	24c3c <lutimens@@Base+0x234>
   24c34:	stur	wzr, [x29, #-4]
   24c38:	b	24c9c <lutimens@@Base+0x294>
   24c3c:	ldur	w8, [x29, #-76]
   24c40:	cbnz	w8, 24c60 <lutimens@@Base+0x258>
   24c44:	ldur	x0, [x29, #-16]
   24c48:	add	x1, sp, #0x50
   24c4c:	bl	443d8 <vasnprintf@@Base+0x2224>
   24c50:	cbz	w0, 24c60 <lutimens@@Base+0x258>
   24c54:	mov	w8, #0xffffffff            	// #-1
   24c58:	stur	w8, [x29, #-4]
   24c5c:	b	24c9c <lutimens@@Base+0x294>
   24c60:	ldr	w8, [sp, #96]
   24c64:	and	w8, w8, #0xf000
   24c68:	cmp	w8, #0xa, lsl #12
   24c6c:	b.eq	24c88 <lutimens@@Base+0x280>  // b.none
   24c70:	ldur	x1, [x29, #-16]
   24c74:	ldur	x2, [x29, #-72]
   24c78:	mov	w0, #0xffffffff            	// #-1
   24c7c:	bl	b5e0 <fdutimens@plt>
   24c80:	stur	w0, [x29, #-4]
   24c84:	b	24c9c <lutimens@@Base+0x294>
   24c88:	bl	aa20 <__errno_location@plt>
   24c8c:	mov	w8, #0x26                  	// #38
   24c90:	str	w8, [x0]
   24c94:	mov	w8, #0xffffffff            	// #-1
   24c98:	stur	w8, [x29, #-4]
   24c9c:	ldur	w0, [x29, #-4]
   24ca0:	ldr	x28, [sp, #304]
   24ca4:	ldp	x29, x30, [sp, #288]
   24ca8:	add	sp, sp, #0x140
   24cac:	ret

0000000000024cb0 <xnmalloc@@Base>:
   24cb0:	sub	sp, sp, #0x20
   24cb4:	stp	x29, x30, [sp, #16]
   24cb8:	add	x29, sp, #0x10
   24cbc:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
   24cc0:	str	x0, [sp, #8]
   24cc4:	str	x1, [sp]
   24cc8:	ldr	x9, [sp]
   24ccc:	udiv	x8, x8, x9
   24cd0:	ldr	x9, [sp, #8]
   24cd4:	cmp	x8, x9
   24cd8:	b.cs	24ce0 <xnmalloc@@Base+0x30>  // b.hs, b.nlast
   24cdc:	bl	b1d0 <xalloc_die@plt>
   24ce0:	ldr	x8, [sp, #8]
   24ce4:	ldr	x9, [sp]
   24ce8:	mul	x0, x8, x9
   24cec:	bl	aca0 <xmalloc@plt>
   24cf0:	ldp	x29, x30, [sp, #16]
   24cf4:	add	sp, sp, #0x20
   24cf8:	ret

0000000000024cfc <xmalloc@@Base>:
   24cfc:	sub	sp, sp, #0x20
   24d00:	stp	x29, x30, [sp, #16]
   24d04:	add	x29, sp, #0x10
   24d08:	str	x0, [sp, #8]
   24d0c:	ldr	x0, [sp, #8]
   24d10:	bl	af10 <malloc@plt>
   24d14:	str	x0, [sp]
   24d18:	ldr	x8, [sp]
   24d1c:	cbnz	x8, 24d2c <xmalloc@@Base+0x30>
   24d20:	ldr	x8, [sp, #8]
   24d24:	cbz	x8, 24d2c <xmalloc@@Base+0x30>
   24d28:	bl	b1d0 <xalloc_die@plt>
   24d2c:	ldr	x0, [sp]
   24d30:	ldp	x29, x30, [sp, #16]
   24d34:	add	sp, sp, #0x20
   24d38:	ret

0000000000024d3c <xnrealloc@@Base>:
   24d3c:	sub	sp, sp, #0x30
   24d40:	stp	x29, x30, [sp, #32]
   24d44:	add	x29, sp, #0x20
   24d48:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
   24d4c:	stur	x0, [x29, #-8]
   24d50:	str	x1, [sp, #16]
   24d54:	str	x2, [sp, #8]
   24d58:	ldr	x9, [sp, #8]
   24d5c:	udiv	x8, x8, x9
   24d60:	ldr	x9, [sp, #16]
   24d64:	cmp	x8, x9
   24d68:	b.cs	24d70 <xnrealloc@@Base+0x34>  // b.hs, b.nlast
   24d6c:	bl	b1d0 <xalloc_die@plt>
   24d70:	ldur	x0, [x29, #-8]
   24d74:	ldr	x8, [sp, #16]
   24d78:	ldr	x9, [sp, #8]
   24d7c:	mul	x1, x8, x9
   24d80:	bl	a8f0 <xrealloc@plt>
   24d84:	ldp	x29, x30, [sp, #32]
   24d88:	add	sp, sp, #0x30
   24d8c:	ret

0000000000024d90 <xrealloc@@Base>:
   24d90:	sub	sp, sp, #0x30
   24d94:	stp	x29, x30, [sp, #32]
   24d98:	add	x29, sp, #0x20
   24d9c:	str	x0, [sp, #16]
   24da0:	str	x1, [sp, #8]
   24da4:	ldr	x8, [sp, #8]
   24da8:	cbnz	x8, 24dc8 <xrealloc@@Base+0x38>
   24dac:	ldr	x8, [sp, #16]
   24db0:	cbz	x8, 24dc8 <xrealloc@@Base+0x38>
   24db4:	ldr	x0, [sp, #16]
   24db8:	bl	a930 <free@plt>
   24dbc:	mov	x8, xzr
   24dc0:	stur	x8, [x29, #-8]
   24dc4:	b	24df4 <xrealloc@@Base+0x64>
   24dc8:	ldr	x0, [sp, #16]
   24dcc:	ldr	x1, [sp, #8]
   24dd0:	bl	af40 <realloc@plt>
   24dd4:	str	x0, [sp, #16]
   24dd8:	ldr	x8, [sp, #16]
   24ddc:	cbnz	x8, 24dec <xrealloc@@Base+0x5c>
   24de0:	ldr	x8, [sp, #8]
   24de4:	cbz	x8, 24dec <xrealloc@@Base+0x5c>
   24de8:	bl	b1d0 <xalloc_die@plt>
   24dec:	ldr	x8, [sp, #16]
   24df0:	stur	x8, [x29, #-8]
   24df4:	ldur	x0, [x29, #-8]
   24df8:	ldp	x29, x30, [sp, #32]
   24dfc:	add	sp, sp, #0x30
   24e00:	ret

0000000000024e04 <x2nrealloc@@Base>:
   24e04:	sub	sp, sp, #0x30
   24e08:	stp	x29, x30, [sp, #32]
   24e0c:	add	x29, sp, #0x20
   24e10:	stur	x0, [x29, #-8]
   24e14:	str	x1, [sp, #16]
   24e18:	str	x2, [sp, #8]
   24e1c:	ldr	x8, [sp, #16]
   24e20:	ldr	x8, [x8]
   24e24:	str	x8, [sp]
   24e28:	ldur	x8, [x29, #-8]
   24e2c:	cbnz	x8, 24e88 <x2nrealloc@@Base+0x84>
   24e30:	ldr	x8, [sp]
   24e34:	cbnz	x8, 24e68 <x2nrealloc@@Base+0x64>
   24e38:	ldr	x8, [sp, #8]
   24e3c:	mov	x9, #0x80                  	// #128
   24e40:	udiv	x8, x9, x8
   24e44:	str	x8, [sp]
   24e48:	ldr	x8, [sp]
   24e4c:	cmp	x8, #0x0
   24e50:	cset	w10, ne  // ne = any
   24e54:	eor	w10, w10, #0x1
   24e58:	and	w10, w10, #0x1
   24e5c:	ldr	x8, [sp]
   24e60:	add	x8, x8, w10, sxtw
   24e64:	str	x8, [sp]
   24e68:	ldr	x8, [sp, #8]
   24e6c:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
   24e70:	udiv	x8, x9, x8
   24e74:	ldr	x9, [sp]
   24e78:	cmp	x8, x9
   24e7c:	b.cs	24e84 <x2nrealloc@@Base+0x80>  // b.hs, b.nlast
   24e80:	bl	b1d0 <xalloc_die@plt>
   24e84:	b	24ec4 <x2nrealloc@@Base+0xc0>
   24e88:	ldr	x8, [sp, #8]
   24e8c:	mov	x9, #0x5555555555555555    	// #6148914691236517205
   24e90:	movk	x9, #0x5554
   24e94:	udiv	x8, x9, x8
   24e98:	ldr	x9, [sp]
   24e9c:	cmp	x8, x9
   24ea0:	b.hi	24ea8 <x2nrealloc@@Base+0xa4>  // b.pmore
   24ea4:	bl	b1d0 <xalloc_die@plt>
   24ea8:	ldr	x8, [sp]
   24eac:	mov	x9, #0x2                   	// #2
   24eb0:	udiv	x8, x8, x9
   24eb4:	add	x8, x8, #0x1
   24eb8:	ldr	x9, [sp]
   24ebc:	add	x8, x9, x8
   24ec0:	str	x8, [sp]
   24ec4:	ldr	x8, [sp]
   24ec8:	ldr	x9, [sp, #16]
   24ecc:	str	x8, [x9]
   24ed0:	ldur	x0, [x29, #-8]
   24ed4:	ldr	x8, [sp]
   24ed8:	ldr	x9, [sp, #8]
   24edc:	mul	x1, x8, x9
   24ee0:	bl	a8f0 <xrealloc@plt>
   24ee4:	ldp	x29, x30, [sp, #32]
   24ee8:	add	sp, sp, #0x30
   24eec:	ret

0000000000024ef0 <xcharalloc@@Base>:
   24ef0:	sub	sp, sp, #0x20
   24ef4:	stp	x29, x30, [sp, #16]
   24ef8:	add	x29, sp, #0x10
   24efc:	str	x0, [sp, #8]
   24f00:	ldr	x0, [sp, #8]
   24f04:	bl	aca0 <xmalloc@plt>
   24f08:	ldp	x29, x30, [sp, #16]
   24f0c:	add	sp, sp, #0x20
   24f10:	ret

0000000000024f14 <x2realloc@@Base>:
   24f14:	sub	sp, sp, #0x20
   24f18:	stp	x29, x30, [sp, #16]
   24f1c:	add	x29, sp, #0x10
   24f20:	mov	x2, #0x1                   	// #1
   24f24:	str	x0, [sp, #8]
   24f28:	str	x1, [sp]
   24f2c:	ldr	x0, [sp, #8]
   24f30:	ldr	x1, [sp]
   24f34:	bl	b5f0 <x2nrealloc@plt>
   24f38:	ldp	x29, x30, [sp, #16]
   24f3c:	add	sp, sp, #0x20
   24f40:	ret

0000000000024f44 <xzalloc@@Base>:
   24f44:	sub	sp, sp, #0x20
   24f48:	stp	x29, x30, [sp, #16]
   24f4c:	add	x29, sp, #0x10
   24f50:	str	x0, [sp, #8]
   24f54:	ldr	x0, [sp, #8]
   24f58:	bl	aca0 <xmalloc@plt>
   24f5c:	ldr	x2, [sp, #8]
   24f60:	str	x0, [sp]
   24f64:	mov	w8, wzr
   24f68:	mov	w1, w8
   24f6c:	bl	a970 <memset@plt>
   24f70:	ldr	x0, [sp]
   24f74:	ldp	x29, x30, [sp, #16]
   24f78:	add	sp, sp, #0x20
   24f7c:	ret

0000000000024f80 <xcalloc@@Base>:
   24f80:	sub	sp, sp, #0x30
   24f84:	stp	x29, x30, [sp, #32]
   24f88:	add	x29, sp, #0x20
   24f8c:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
   24f90:	stur	x0, [x29, #-8]
   24f94:	str	x1, [sp, #16]
   24f98:	ldr	x9, [sp, #16]
   24f9c:	udiv	x8, x8, x9
   24fa0:	ldur	x9, [x29, #-8]
   24fa4:	cmp	x8, x9
   24fa8:	b.cc	24fc0 <xcalloc@@Base+0x40>  // b.lo, b.ul, b.last
   24fac:	ldur	x0, [x29, #-8]
   24fb0:	ldr	x1, [sp, #16]
   24fb4:	bl	b2e0 <calloc@plt>
   24fb8:	str	x0, [sp, #8]
   24fbc:	cbnz	x0, 24fc4 <xcalloc@@Base+0x44>
   24fc0:	bl	b1d0 <xalloc_die@plt>
   24fc4:	ldr	x0, [sp, #8]
   24fc8:	ldp	x29, x30, [sp, #32]
   24fcc:	add	sp, sp, #0x30
   24fd0:	ret

0000000000024fd4 <xmemdup@@Base>:
   24fd4:	sub	sp, sp, #0x30
   24fd8:	stp	x29, x30, [sp, #32]
   24fdc:	add	x29, sp, #0x20
   24fe0:	stur	x0, [x29, #-8]
   24fe4:	str	x1, [sp, #16]
   24fe8:	ldr	x0, [sp, #16]
   24fec:	bl	aca0 <xmalloc@plt>
   24ff0:	ldur	x1, [x29, #-8]
   24ff4:	ldr	x2, [sp, #16]
   24ff8:	str	x0, [sp, #8]
   24ffc:	bl	af30 <memcpy@plt>
   25000:	ldr	x0, [sp, #8]
   25004:	ldp	x29, x30, [sp, #32]
   25008:	add	sp, sp, #0x30
   2500c:	ret

0000000000025010 <xstrdup@@Base>:
   25010:	sub	sp, sp, #0x20
   25014:	stp	x29, x30, [sp, #16]
   25018:	add	x29, sp, #0x10
   2501c:	str	x0, [sp, #8]
   25020:	ldr	x0, [sp, #8]
   25024:	ldr	x8, [sp, #8]
   25028:	str	x0, [sp]
   2502c:	mov	x0, x8
   25030:	bl	a8e0 <strlen@plt>
   25034:	add	x1, x0, #0x1
   25038:	ldr	x0, [sp]
   2503c:	bl	b600 <xmemdup@plt>
   25040:	ldp	x29, x30, [sp, #16]
   25044:	add	sp, sp, #0x20
   25048:	ret

000000000002504c <xalloc_die@@Base>:
   2504c:	sub	sp, sp, #0x30
   25050:	stp	x29, x30, [sp, #32]
   25054:	add	x29, sp, #0x20
   25058:	adrp	x8, 5f000 <vasnprintf@@Base+0x1ce4c>
   2505c:	ldr	x8, [x8, #4000]
   25060:	adrp	x0, 44000 <vasnprintf@@Base+0x1e4c>
   25064:	add	x0, x0, #0xe15
   25068:	adrp	x1, 45000 <vasnprintf@@Base+0x2e4c>
   2506c:	add	x1, x1, #0x392
   25070:	mov	w9, wzr
   25074:	adrp	x2, 45000 <vasnprintf@@Base+0x2e4c>
   25078:	add	x2, x2, #0x1c3
   2507c:	ldr	w10, [x8]
   25080:	stur	w9, [x29, #-4]
   25084:	str	x2, [sp, #16]
   25088:	str	w10, [sp, #12]
   2508c:	bl	b000 <dgettext@plt>
   25090:	ldr	w9, [sp, #12]
   25094:	str	x0, [sp]
   25098:	mov	w0, w9
   2509c:	ldur	w1, [x29, #-4]
   250a0:	ldr	x2, [sp, #16]
   250a4:	ldr	x3, [sp]
   250a8:	bl	adc0 <error@plt>
   250ac:	bl	a9e0 <abort@plt>

00000000000250b0 <xgetcwd@@Base>:
   250b0:	sub	sp, sp, #0x20
   250b4:	stp	x29, x30, [sp, #16]
   250b8:	add	x29, sp, #0x10
   250bc:	mov	x8, xzr
   250c0:	mov	x0, x8
   250c4:	mov	x1, x8
   250c8:	bl	b4e0 <getcwd@plt>
   250cc:	str	x0, [sp, #8]
   250d0:	ldr	x8, [sp, #8]
   250d4:	cbnz	x8, 250ec <xgetcwd@@Base+0x3c>
   250d8:	bl	aa20 <__errno_location@plt>
   250dc:	ldr	w8, [x0]
   250e0:	cmp	w8, #0xc
   250e4:	b.ne	250ec <xgetcwd@@Base+0x3c>  // b.any
   250e8:	bl	b1d0 <xalloc_die@plt>
   250ec:	ldr	x0, [sp, #8]
   250f0:	ldp	x29, x30, [sp, #16]
   250f4:	add	sp, sp, #0x20
   250f8:	ret

00000000000250fc <gl_list_create_empty@@Base>:
   250fc:	sub	sp, sp, #0x40
   25100:	stp	x29, x30, [sp, #48]
   25104:	add	x29, sp, #0x30
   25108:	stur	x0, [x29, #-8]
   2510c:	stur	x1, [x29, #-16]
   25110:	str	x2, [sp, #24]
   25114:	str	x3, [sp, #16]
   25118:	mov	w8, #0x1                   	// #1
   2511c:	and	w8, w4, w8
   25120:	strb	w8, [sp, #15]
   25124:	ldur	x0, [x29, #-8]
   25128:	ldur	x1, [x29, #-16]
   2512c:	ldr	x2, [sp, #24]
   25130:	ldr	x3, [sp, #16]
   25134:	ldrb	w8, [sp, #15]
   25138:	and	w4, w8, #0x1
   2513c:	bl	b610 <gl_list_nx_create_empty@plt>
   25140:	str	x0, [sp]
   25144:	ldr	x9, [sp]
   25148:	cbnz	x9, 25150 <gl_list_create_empty@@Base+0x54>
   2514c:	bl	b1d0 <xalloc_die@plt>
   25150:	ldr	x0, [sp]
   25154:	ldp	x29, x30, [sp, #48]
   25158:	add	sp, sp, #0x40
   2515c:	ret

0000000000025160 <gl_list_create@@Base>:
   25160:	sub	sp, sp, #0x50
   25164:	stp	x29, x30, [sp, #64]
   25168:	add	x29, sp, #0x40
   2516c:	stur	x0, [x29, #-8]
   25170:	stur	x1, [x29, #-16]
   25174:	stur	x2, [x29, #-24]
   25178:	str	x3, [sp, #32]
   2517c:	mov	w8, #0x1                   	// #1
   25180:	and	w8, w4, w8
   25184:	strb	w8, [sp, #31]
   25188:	str	x5, [sp, #16]
   2518c:	str	x6, [sp, #8]
   25190:	ldur	x0, [x29, #-8]
   25194:	ldur	x1, [x29, #-16]
   25198:	ldur	x2, [x29, #-24]
   2519c:	ldr	x3, [sp, #32]
   251a0:	ldrb	w8, [sp, #31]
   251a4:	ldr	x5, [sp, #16]
   251a8:	ldr	x6, [sp, #8]
   251ac:	and	w4, w8, #0x1
   251b0:	bl	b620 <gl_list_nx_create@plt>
   251b4:	str	x0, [sp]
   251b8:	ldr	x9, [sp]
   251bc:	cbnz	x9, 251c4 <gl_list_create@@Base+0x64>
   251c0:	bl	b1d0 <xalloc_die@plt>
   251c4:	ldr	x0, [sp]
   251c8:	ldp	x29, x30, [sp, #64]
   251cc:	add	sp, sp, #0x50
   251d0:	ret

00000000000251d4 <gl_list_node_set_value@@Base>:
   251d4:	sub	sp, sp, #0x30
   251d8:	stp	x29, x30, [sp, #32]
   251dc:	add	x29, sp, #0x20
   251e0:	stur	x0, [x29, #-8]
   251e4:	str	x1, [sp, #16]
   251e8:	str	x2, [sp, #8]
   251ec:	ldur	x0, [x29, #-8]
   251f0:	ldr	x1, [sp, #16]
   251f4:	ldr	x2, [sp, #8]
   251f8:	bl	b630 <gl_list_node_nx_set_value@plt>
   251fc:	str	w0, [sp, #4]
   25200:	ldr	w8, [sp, #4]
   25204:	cmp	w8, #0x0
   25208:	cset	w8, ge  // ge = tcont
   2520c:	tbnz	w8, #0, 25214 <gl_list_node_set_value@@Base+0x40>
   25210:	bl	b1d0 <xalloc_die@plt>
   25214:	ldp	x29, x30, [sp, #32]
   25218:	add	sp, sp, #0x30
   2521c:	ret

0000000000025220 <gl_list_set_at@@Base>:
   25220:	sub	sp, sp, #0x30
   25224:	stp	x29, x30, [sp, #32]
   25228:	add	x29, sp, #0x20
   2522c:	stur	x0, [x29, #-8]
   25230:	str	x1, [sp, #16]
   25234:	str	x2, [sp, #8]
   25238:	ldur	x0, [x29, #-8]
   2523c:	ldr	x1, [sp, #16]
   25240:	ldr	x2, [sp, #8]
   25244:	bl	b640 <gl_list_nx_set_at@plt>
   25248:	str	x0, [sp]
   2524c:	ldr	x8, [sp]
   25250:	cbnz	x8, 25258 <gl_list_set_at@@Base+0x38>
   25254:	bl	b1d0 <xalloc_die@plt>
   25258:	ldr	x0, [sp]
   2525c:	ldp	x29, x30, [sp, #32]
   25260:	add	sp, sp, #0x30
   25264:	ret

0000000000025268 <gl_list_add_first@@Base>:
   25268:	sub	sp, sp, #0x30
   2526c:	stp	x29, x30, [sp, #32]
   25270:	add	x29, sp, #0x20
   25274:	stur	x0, [x29, #-8]
   25278:	str	x1, [sp, #16]
   2527c:	ldur	x0, [x29, #-8]
   25280:	ldr	x1, [sp, #16]
   25284:	bl	b650 <gl_list_nx_add_first@plt>
   25288:	str	x0, [sp, #8]
   2528c:	ldr	x8, [sp, #8]
   25290:	cbnz	x8, 25298 <gl_list_add_first@@Base+0x30>
   25294:	bl	b1d0 <xalloc_die@plt>
   25298:	ldr	x0, [sp, #8]
   2529c:	ldp	x29, x30, [sp, #32]
   252a0:	add	sp, sp, #0x30
   252a4:	ret

00000000000252a8 <gl_list_add_last@@Base>:
   252a8:	sub	sp, sp, #0x30
   252ac:	stp	x29, x30, [sp, #32]
   252b0:	add	x29, sp, #0x20
   252b4:	stur	x0, [x29, #-8]
   252b8:	str	x1, [sp, #16]
   252bc:	ldur	x0, [x29, #-8]
   252c0:	ldr	x1, [sp, #16]
   252c4:	bl	b660 <gl_list_nx_add_last@plt>
   252c8:	str	x0, [sp, #8]
   252cc:	ldr	x8, [sp, #8]
   252d0:	cbnz	x8, 252d8 <gl_list_add_last@@Base+0x30>
   252d4:	bl	b1d0 <xalloc_die@plt>
   252d8:	ldr	x0, [sp, #8]
   252dc:	ldp	x29, x30, [sp, #32]
   252e0:	add	sp, sp, #0x30
   252e4:	ret

00000000000252e8 <gl_list_add_before@@Base>:
   252e8:	sub	sp, sp, #0x30
   252ec:	stp	x29, x30, [sp, #32]
   252f0:	add	x29, sp, #0x20
   252f4:	stur	x0, [x29, #-8]
   252f8:	str	x1, [sp, #16]
   252fc:	str	x2, [sp, #8]
   25300:	ldur	x0, [x29, #-8]
   25304:	ldr	x1, [sp, #16]
   25308:	ldr	x2, [sp, #8]
   2530c:	bl	b670 <gl_list_nx_add_before@plt>
   25310:	str	x0, [sp]
   25314:	ldr	x8, [sp]
   25318:	cbnz	x8, 25320 <gl_list_add_before@@Base+0x38>
   2531c:	bl	b1d0 <xalloc_die@plt>
   25320:	ldr	x0, [sp]
   25324:	ldp	x29, x30, [sp, #32]
   25328:	add	sp, sp, #0x30
   2532c:	ret

0000000000025330 <gl_list_add_after@@Base>:
   25330:	sub	sp, sp, #0x30
   25334:	stp	x29, x30, [sp, #32]
   25338:	add	x29, sp, #0x20
   2533c:	stur	x0, [x29, #-8]
   25340:	str	x1, [sp, #16]
   25344:	str	x2, [sp, #8]
   25348:	ldur	x0, [x29, #-8]
   2534c:	ldr	x1, [sp, #16]
   25350:	ldr	x2, [sp, #8]
   25354:	bl	b680 <gl_list_nx_add_after@plt>
   25358:	str	x0, [sp]
   2535c:	ldr	x8, [sp]
   25360:	cbnz	x8, 25368 <gl_list_add_after@@Base+0x38>
   25364:	bl	b1d0 <xalloc_die@plt>
   25368:	ldr	x0, [sp]
   2536c:	ldp	x29, x30, [sp, #32]
   25370:	add	sp, sp, #0x30
   25374:	ret

0000000000025378 <gl_list_add_at@@Base>:
   25378:	sub	sp, sp, #0x30
   2537c:	stp	x29, x30, [sp, #32]
   25380:	add	x29, sp, #0x20
   25384:	stur	x0, [x29, #-8]
   25388:	str	x1, [sp, #16]
   2538c:	str	x2, [sp, #8]
   25390:	ldur	x0, [x29, #-8]
   25394:	ldr	x1, [sp, #16]
   25398:	ldr	x2, [sp, #8]
   2539c:	bl	b690 <gl_list_nx_add_at@plt>
   253a0:	str	x0, [sp]
   253a4:	ldr	x8, [sp]
   253a8:	cbnz	x8, 253b0 <gl_list_add_at@@Base+0x38>
   253ac:	bl	b1d0 <xalloc_die@plt>
   253b0:	ldr	x0, [sp]
   253b4:	ldp	x29, x30, [sp, #32]
   253b8:	add	sp, sp, #0x30
   253bc:	ret

00000000000253c0 <gl_sortedlist_add@@Base>:
   253c0:	sub	sp, sp, #0x30
   253c4:	stp	x29, x30, [sp, #32]
   253c8:	add	x29, sp, #0x20
   253cc:	stur	x0, [x29, #-8]
   253d0:	str	x1, [sp, #16]
   253d4:	str	x2, [sp, #8]
   253d8:	ldur	x0, [x29, #-8]
   253dc:	ldr	x1, [sp, #16]
   253e0:	ldr	x2, [sp, #8]
   253e4:	bl	b6a0 <gl_sortedlist_nx_add@plt>
   253e8:	str	x0, [sp]
   253ec:	ldr	x8, [sp]
   253f0:	cbnz	x8, 253f8 <gl_sortedlist_add@@Base+0x38>
   253f4:	bl	b1d0 <xalloc_die@plt>
   253f8:	ldr	x0, [sp]
   253fc:	ldp	x29, x30, [sp, #32]
   25400:	add	sp, sp, #0x30
   25404:	ret

0000000000025408 <gl_map_create_empty@@Base>:
   25408:	sub	sp, sp, #0x40
   2540c:	stp	x29, x30, [sp, #48]
   25410:	add	x29, sp, #0x30
   25414:	stur	x0, [x29, #-8]
   25418:	stur	x1, [x29, #-16]
   2541c:	str	x2, [sp, #24]
   25420:	str	x3, [sp, #16]
   25424:	str	x4, [sp, #8]
   25428:	ldur	x0, [x29, #-8]
   2542c:	ldur	x1, [x29, #-16]
   25430:	ldr	x2, [sp, #24]
   25434:	ldr	x3, [sp, #16]
   25438:	ldr	x4, [sp, #8]
   2543c:	bl	b6b0 <gl_map_nx_create_empty@plt>
   25440:	str	x0, [sp]
   25444:	ldr	x8, [sp]
   25448:	cbnz	x8, 25450 <gl_map_create_empty@@Base+0x48>
   2544c:	bl	b1d0 <xalloc_die@plt>
   25450:	ldr	x0, [sp]
   25454:	ldp	x29, x30, [sp, #48]
   25458:	add	sp, sp, #0x40
   2545c:	ret

0000000000025460 <gl_map_put@@Base>:
   25460:	sub	sp, sp, #0x30
   25464:	stp	x29, x30, [sp, #32]
   25468:	add	x29, sp, #0x20
   2546c:	stur	x0, [x29, #-8]
   25470:	str	x1, [sp, #16]
   25474:	str	x2, [sp, #8]
   25478:	ldur	x0, [x29, #-8]
   2547c:	ldr	x1, [sp, #16]
   25480:	ldr	x2, [sp, #8]
   25484:	bl	b6c0 <gl_map_nx_put@plt>
   25488:	str	w0, [sp, #4]
   2548c:	ldr	w8, [sp, #4]
   25490:	cmp	w8, #0x0
   25494:	cset	w8, ge  // ge = tcont
   25498:	tbnz	w8, #0, 254a0 <gl_map_put@@Base+0x40>
   2549c:	bl	b1d0 <xalloc_die@plt>
   254a0:	ldr	w8, [sp, #4]
   254a4:	cmp	w8, #0x0
   254a8:	cset	w8, ne  // ne = any
   254ac:	and	w0, w8, #0x1
   254b0:	ldp	x29, x30, [sp, #32]
   254b4:	add	sp, sp, #0x30
   254b8:	ret

00000000000254bc <gl_map_getput@@Base>:
   254bc:	sub	sp, sp, #0x40
   254c0:	stp	x29, x30, [sp, #48]
   254c4:	add	x29, sp, #0x30
   254c8:	stur	x0, [x29, #-8]
   254cc:	stur	x1, [x29, #-16]
   254d0:	str	x2, [sp, #24]
   254d4:	str	x3, [sp, #16]
   254d8:	ldur	x0, [x29, #-8]
   254dc:	ldur	x1, [x29, #-16]
   254e0:	ldr	x2, [sp, #24]
   254e4:	ldr	x3, [sp, #16]
   254e8:	bl	b420 <gl_map_nx_getput@plt>
   254ec:	str	w0, [sp, #12]
   254f0:	ldr	w8, [sp, #12]
   254f4:	cmp	w8, #0x0
   254f8:	cset	w8, ge  // ge = tcont
   254fc:	tbnz	w8, #0, 25504 <gl_map_getput@@Base+0x48>
   25500:	bl	b1d0 <xalloc_die@plt>
   25504:	ldr	w8, [sp, #12]
   25508:	cmp	w8, #0x0
   2550c:	cset	w8, ne  // ne = any
   25510:	and	w0, w8, #0x1
   25514:	ldp	x29, x30, [sp, #48]
   25518:	add	sp, sp, #0x40
   2551c:	ret

0000000000025520 <gl_set_create_empty@@Base>:
   25520:	sub	sp, sp, #0x40
   25524:	stp	x29, x30, [sp, #48]
   25528:	add	x29, sp, #0x30
   2552c:	stur	x0, [x29, #-8]
   25530:	stur	x1, [x29, #-16]
   25534:	str	x2, [sp, #24]
   25538:	str	x3, [sp, #16]
   2553c:	ldur	x0, [x29, #-8]
   25540:	ldur	x1, [x29, #-16]
   25544:	ldr	x2, [sp, #24]
   25548:	ldr	x3, [sp, #16]
   2554c:	bl	b6d0 <gl_set_nx_create_empty@plt>
   25550:	str	x0, [sp, #8]
   25554:	ldr	x8, [sp, #8]
   25558:	cbnz	x8, 25560 <gl_set_create_empty@@Base+0x40>
   2555c:	bl	b1d0 <xalloc_die@plt>
   25560:	ldr	x0, [sp, #8]
   25564:	ldp	x29, x30, [sp, #48]
   25568:	add	sp, sp, #0x40
   2556c:	ret

0000000000025570 <gl_set_add@@Base>:
   25570:	sub	sp, sp, #0x30
   25574:	stp	x29, x30, [sp, #32]
   25578:	add	x29, sp, #0x20
   2557c:	stur	x0, [x29, #-8]
   25580:	str	x1, [sp, #16]
   25584:	ldur	x0, [x29, #-8]
   25588:	ldr	x1, [sp, #16]
   2558c:	bl	b6e0 <gl_set_nx_add@plt>
   25590:	str	w0, [sp, #12]
   25594:	ldr	w8, [sp, #12]
   25598:	cmp	w8, #0x0
   2559c:	cset	w8, ge  // ge = tcont
   255a0:	tbnz	w8, #0, 255a8 <gl_set_add@@Base+0x38>
   255a4:	bl	b1d0 <xalloc_die@plt>
   255a8:	ldr	w8, [sp, #12]
   255ac:	cmp	w8, #0x0
   255b0:	cset	w8, ne  // ne = any
   255b4:	and	w0, w8, #0x1
   255b8:	ldp	x29, x30, [sp, #32]
   255bc:	add	sp, sp, #0x30
   255c0:	ret

00000000000255c4 <xsum@@Base>:
   255c4:	sub	sp, sp, #0x20
   255c8:	str	x0, [sp, #24]
   255cc:	str	x1, [sp, #16]
   255d0:	ldr	x8, [sp, #24]
   255d4:	ldr	x9, [sp, #16]
   255d8:	add	x8, x8, x9
   255dc:	str	x8, [sp, #8]
   255e0:	ldr	x8, [sp, #8]
   255e4:	ldr	x9, [sp, #24]
   255e8:	cmp	x8, x9
   255ec:	b.cc	255fc <xsum@@Base+0x38>  // b.lo, b.ul, b.last
   255f0:	ldr	x8, [sp, #8]
   255f4:	str	x8, [sp]
   255f8:	b	25604 <xsum@@Base+0x40>
   255fc:	mov	x8, #0xffffffffffffffff    	// #-1
   25600:	str	x8, [sp]
   25604:	ldr	x8, [sp]
   25608:	mov	x0, x8
   2560c:	add	sp, sp, #0x20
   25610:	ret

0000000000025614 <xsum3@@Base>:
   25614:	sub	sp, sp, #0x30
   25618:	stp	x29, x30, [sp, #32]
   2561c:	add	x29, sp, #0x20
   25620:	stur	x0, [x29, #-8]
   25624:	str	x1, [sp, #16]
   25628:	str	x2, [sp, #8]
   2562c:	ldur	x0, [x29, #-8]
   25630:	ldr	x1, [sp, #16]
   25634:	bl	b190 <xsum@plt>
   25638:	ldr	x1, [sp, #8]
   2563c:	bl	b190 <xsum@plt>
   25640:	ldp	x29, x30, [sp, #32]
   25644:	add	sp, sp, #0x30
   25648:	ret

000000000002564c <xsum4@@Base>:
   2564c:	sub	sp, sp, #0x30
   25650:	stp	x29, x30, [sp, #32]
   25654:	add	x29, sp, #0x20
   25658:	stur	x0, [x29, #-8]
   2565c:	str	x1, [sp, #16]
   25660:	str	x2, [sp, #8]
   25664:	str	x3, [sp]
   25668:	ldur	x0, [x29, #-8]
   2566c:	ldr	x1, [sp, #16]
   25670:	bl	b190 <xsum@plt>
   25674:	ldr	x1, [sp, #8]
   25678:	bl	b190 <xsum@plt>
   2567c:	ldr	x1, [sp]
   25680:	bl	b190 <xsum@plt>
   25684:	ldp	x29, x30, [sp, #32]
   25688:	add	sp, sp, #0x30
   2568c:	ret

0000000000025690 <xmax@@Base>:
   25690:	sub	sp, sp, #0x20
   25694:	str	x0, [sp, #24]
   25698:	str	x1, [sp, #16]
   2569c:	ldr	x8, [sp, #24]
   256a0:	ldr	x9, [sp, #16]
   256a4:	cmp	x8, x9
   256a8:	b.cc	256b8 <xmax@@Base+0x28>  // b.lo, b.ul, b.last
   256ac:	ldr	x8, [sp, #24]
   256b0:	str	x8, [sp, #8]
   256b4:	b	256c0 <xmax@@Base+0x30>
   256b8:	ldr	x8, [sp, #16]
   256bc:	str	x8, [sp, #8]
   256c0:	ldr	x8, [sp, #8]
   256c4:	mov	x0, x8
   256c8:	add	sp, sp, #0x20
   256cc:	ret

00000000000256d0 <xstdopen@@Base>:
   256d0:	sub	sp, sp, #0x30
   256d4:	stp	x29, x30, [sp, #32]
   256d8:	add	x29, sp, #0x20
   256dc:	bl	b6f0 <stdopen@plt>
   256e0:	stur	w0, [x29, #-4]
   256e4:	ldur	w8, [x29, #-4]
   256e8:	cbz	w8, 25738 <xstdopen@@Base+0x68>
   256ec:	adrp	x8, 5f000 <vasnprintf@@Base+0x1ce4c>
   256f0:	ldr	x8, [x8, #4000]
   256f4:	ldr	w0, [x8]
   256f8:	ldur	w1, [x29, #-4]
   256fc:	adrp	x8, 44000 <vasnprintf@@Base+0x1e4c>
   25700:	add	x8, x8, #0xe15
   25704:	stur	w0, [x29, #-8]
   25708:	mov	x0, x8
   2570c:	adrp	x8, 45000 <vasnprintf@@Base+0x2e4c>
   25710:	add	x8, x8, #0x3a3
   25714:	stur	w1, [x29, #-12]
   25718:	mov	x1, x8
   2571c:	bl	b000 <dgettext@plt>
   25720:	ldur	w9, [x29, #-8]
   25724:	str	x0, [sp, #8]
   25728:	mov	w0, w9
   2572c:	ldur	w1, [x29, #-12]
   25730:	ldr	x2, [sp, #8]
   25734:	bl	adc0 <error@plt>
   25738:	ldp	x29, x30, [sp, #32]
   2573c:	add	sp, sp, #0x30
   25740:	ret

0000000000025744 <xstrndup@@Base>:
   25744:	sub	sp, sp, #0x30
   25748:	stp	x29, x30, [sp, #32]
   2574c:	add	x29, sp, #0x20
   25750:	stur	x0, [x29, #-8]
   25754:	str	x1, [sp, #16]
   25758:	ldur	x0, [x29, #-8]
   2575c:	ldr	x1, [sp, #16]
   25760:	bl	b0d0 <strndup@plt>
   25764:	str	x0, [sp, #8]
   25768:	ldr	x8, [sp, #8]
   2576c:	cbnz	x8, 25774 <xstrndup@@Base+0x30>
   25770:	bl	b1d0 <xalloc_die@plt>
   25774:	ldr	x0, [sp, #8]
   25778:	ldp	x29, x30, [sp, #32]
   2577c:	add	sp, sp, #0x30
   25780:	ret

0000000000025784 <xvasprintf@@Base>:
   25784:	sub	sp, sp, #0x90
   25788:	stp	x29, x30, [sp, #128]
   2578c:	add	x29, sp, #0x80
   25790:	stur	x0, [x29, #-16]
   25794:	stur	xzr, [x29, #-32]
   25798:	ldur	x8, [x29, #-16]
   2579c:	stur	x8, [x29, #-40]
   257a0:	str	x1, [sp, #8]
   257a4:	ldur	x8, [x29, #-40]
   257a8:	ldrb	w9, [x8]
   257ac:	cbnz	w9, 257d8 <xvasprintf@@Base+0x54>
   257b0:	ldur	x0, [x29, #-32]
   257b4:	ldr	x8, [sp, #8]
   257b8:	ldr	q0, [x8]
   257bc:	add	x1, sp, #0x30
   257c0:	str	q0, [sp, #48]
   257c4:	ldr	q0, [x8, #16]
   257c8:	str	q0, [sp, #64]
   257cc:	bl	25890 <xvasprintf@@Base+0x10c>
   257d0:	stur	x0, [x29, #-8]
   257d4:	b	25880 <xvasprintf@@Base+0xfc>
   257d8:	ldur	x8, [x29, #-40]
   257dc:	ldrb	w9, [x8]
   257e0:	cmp	w9, #0x25
   257e4:	b.eq	257ec <xvasprintf@@Base+0x68>  // b.none
   257e8:	b	25828 <xvasprintf@@Base+0xa4>
   257ec:	ldur	x8, [x29, #-40]
   257f0:	add	x8, x8, #0x1
   257f4:	stur	x8, [x29, #-40]
   257f8:	ldur	x8, [x29, #-40]
   257fc:	ldrb	w9, [x8]
   25800:	cmp	w9, #0x73
   25804:	b.eq	2580c <xvasprintf@@Base+0x88>  // b.none
   25808:	b	25828 <xvasprintf@@Base+0xa4>
   2580c:	ldur	x8, [x29, #-40]
   25810:	add	x8, x8, #0x1
   25814:	stur	x8, [x29, #-40]
   25818:	ldur	x8, [x29, #-32]
   2581c:	add	x8, x8, #0x1
   25820:	stur	x8, [x29, #-32]
   25824:	b	257a4 <xvasprintf@@Base+0x20>
   25828:	ldur	x1, [x29, #-16]
   2582c:	ldr	x8, [sp, #8]
   25830:	ldr	q0, [x8]
   25834:	add	x2, sp, #0x10
   25838:	str	q0, [sp, #16]
   2583c:	ldr	q0, [x8, #16]
   25840:	str	q0, [sp, #32]
   25844:	sub	x0, x29, #0x18
   25848:	bl	b700 <vasprintf@plt>
   2584c:	cmp	w0, #0x0
   25850:	cset	w9, ge  // ge = tcont
   25854:	tbnz	w9, #0, 25878 <xvasprintf@@Base+0xf4>
   25858:	bl	aa20 <__errno_location@plt>
   2585c:	ldr	w8, [x0]
   25860:	cmp	w8, #0xc
   25864:	b.ne	2586c <xvasprintf@@Base+0xe8>  // b.any
   25868:	bl	b1d0 <xalloc_die@plt>
   2586c:	mov	x8, xzr
   25870:	stur	x8, [x29, #-8]
   25874:	b	25880 <xvasprintf@@Base+0xfc>
   25878:	ldur	x8, [x29, #-24]
   2587c:	stur	x8, [x29, #-8]
   25880:	ldur	x0, [x29, #-8]
   25884:	ldp	x29, x30, [sp, #128]
   25888:	add	sp, sp, #0x90
   2588c:	ret
   25890:	sub	sp, sp, #0xd0
   25894:	stp	x29, x30, [sp, #192]
   25898:	add	x29, sp, #0xc0
   2589c:	stur	x0, [x29, #-16]
   258a0:	mov	x8, xzr
   258a4:	stur	x8, [x29, #-72]
   258a8:	ldr	q0, [x1]
   258ac:	ldr	q1, [x1, #16]
   258b0:	stur	q1, [x29, #-48]
   258b4:	stur	q0, [x29, #-64]
   258b8:	ldur	x8, [x29, #-16]
   258bc:	stur	x8, [x29, #-80]
   258c0:	str	x1, [sp, #72]
   258c4:	b	258c8 <xvasprintf@@Base+0x144>
   258c8:	ldur	x8, [x29, #-80]
   258cc:	cbz	x8, 25984 <xvasprintf@@Base+0x200>
   258d0:	b	258d4 <xvasprintf@@Base+0x150>
   258d4:	sub	x8, x29, #0x40
   258d8:	add	x8, x8, #0x18
   258dc:	ldur	w9, [x29, #-40]
   258e0:	mov	w10, w9
   258e4:	str	x8, [sp, #64]
   258e8:	str	w10, [sp, #60]
   258ec:	tbz	w9, #31, 25924 <xvasprintf@@Base+0x1a0>
   258f0:	b	258f4 <xvasprintf@@Base+0x170>
   258f4:	ldr	w8, [sp, #60]
   258f8:	add	w9, w8, #0x8
   258fc:	ldr	x10, [sp, #64]
   25900:	str	w9, [x10]
   25904:	subs	w9, w9, #0x0
   25908:	b.gt	25924 <xvasprintf@@Base+0x1a0>
   2590c:	b	25910 <xvasprintf@@Base+0x18c>
   25910:	ldur	x8, [x29, #-56]
   25914:	ldr	w9, [sp, #60]
   25918:	add	x8, x8, w9, sxtw
   2591c:	str	x8, [sp, #48]
   25920:	b	25938 <xvasprintf@@Base+0x1b4>
   25924:	ldur	x8, [x29, #-64]
   25928:	add	x9, x8, #0x8
   2592c:	stur	x9, [x29, #-64]
   25930:	str	x8, [sp, #48]
   25934:	b	25938 <xvasprintf@@Base+0x1b4>
   25938:	ldr	x8, [sp, #48]
   2593c:	ldr	x8, [x8]
   25940:	str	x8, [sp, #96]
   25944:	ldur	x0, [x29, #-72]
   25948:	ldr	x8, [sp, #96]
   2594c:	str	x0, [sp, #40]
   25950:	mov	x0, x8
   25954:	bl	a8e0 <strlen@plt>
   25958:	ldr	x8, [sp, #40]
   2595c:	str	x0, [sp, #32]
   25960:	mov	x0, x8
   25964:	ldr	x1, [sp, #32]
   25968:	bl	b190 <xsum@plt>
   2596c:	stur	x0, [x29, #-72]
   25970:	b	25974 <xvasprintf@@Base+0x1f0>
   25974:	ldur	x8, [x29, #-80]
   25978:	subs	x8, x8, #0x1
   2597c:	stur	x8, [x29, #-80]
   25980:	b	258c8 <xvasprintf@@Base+0x144>
   25984:	ldur	x8, [x29, #-72]
   25988:	adds	x8, x8, #0x1
   2598c:	b.eq	259a4 <xvasprintf@@Base+0x220>  // b.none
   25990:	b	25994 <xvasprintf@@Base+0x210>
   25994:	ldur	x8, [x29, #-72]
   25998:	lsr	x8, x8, #31
   2599c:	cbz	x8, 259bc <xvasprintf@@Base+0x238>
   259a0:	b	259a4 <xvasprintf@@Base+0x220>
   259a4:	bl	aa20 <__errno_location@plt>
   259a8:	mov	w8, #0x4b                  	// #75
   259ac:	str	w8, [x0]
   259b0:	mov	x9, xzr
   259b4:	stur	x9, [x29, #-8]
   259b8:	b	25ab8 <xvasprintf@@Base+0x334>
   259bc:	ldur	x8, [x29, #-72]
   259c0:	add	x0, x8, #0x1
   259c4:	bl	aca0 <xmalloc@plt>
   259c8:	stur	x0, [x29, #-24]
   259cc:	ldur	x8, [x29, #-24]
   259d0:	stur	x8, [x29, #-88]
   259d4:	ldur	x8, [x29, #-16]
   259d8:	stur	x8, [x29, #-80]
   259dc:	b	259e0 <xvasprintf@@Base+0x25c>
   259e0:	ldur	x8, [x29, #-80]
   259e4:	cbz	x8, 25aa0 <xvasprintf@@Base+0x31c>
   259e8:	b	259ec <xvasprintf@@Base+0x268>
   259ec:	ldr	x8, [sp, #72]
   259f0:	ldr	w9, [x8, #24]!
   259f4:	mov	w10, w9
   259f8:	str	x8, [sp, #24]
   259fc:	str	w10, [sp, #20]
   25a00:	tbz	w9, #31, 25a3c <xvasprintf@@Base+0x2b8>
   25a04:	b	25a08 <xvasprintf@@Base+0x284>
   25a08:	ldr	w8, [sp, #20]
   25a0c:	add	w9, w8, #0x8
   25a10:	ldr	x10, [sp, #24]
   25a14:	str	w9, [x10]
   25a18:	subs	w9, w9, #0x0
   25a1c:	b.gt	25a3c <xvasprintf@@Base+0x2b8>
   25a20:	b	25a24 <xvasprintf@@Base+0x2a0>
   25a24:	ldr	x8, [sp, #72]
   25a28:	ldr	x9, [x8, #8]
   25a2c:	ldr	w10, [sp, #20]
   25a30:	add	x9, x9, w10, sxtw
   25a34:	str	x9, [sp, #8]
   25a38:	b	25a54 <xvasprintf@@Base+0x2d0>
   25a3c:	ldr	x8, [sp, #72]
   25a40:	ldr	x9, [x8]
   25a44:	add	x10, x9, #0x8
   25a48:	str	x10, [x8]
   25a4c:	str	x9, [sp, #8]
   25a50:	b	25a54 <xvasprintf@@Base+0x2d0>
   25a54:	ldr	x8, [sp, #8]
   25a58:	ldr	x8, [x8]
   25a5c:	str	x8, [sp, #88]
   25a60:	ldr	x0, [sp, #88]
   25a64:	bl	a8e0 <strlen@plt>
   25a68:	str	x0, [sp, #80]
   25a6c:	ldur	x0, [x29, #-88]
   25a70:	ldr	x1, [sp, #88]
   25a74:	ldr	x2, [sp, #80]
   25a78:	bl	af30 <memcpy@plt>
   25a7c:	ldr	x8, [sp, #80]
   25a80:	ldur	x9, [x29, #-88]
   25a84:	add	x8, x9, x8
   25a88:	stur	x8, [x29, #-88]
   25a8c:	b	25a90 <xvasprintf@@Base+0x30c>
   25a90:	ldur	x8, [x29, #-80]
   25a94:	subs	x8, x8, #0x1
   25a98:	stur	x8, [x29, #-80]
   25a9c:	b	259e0 <xvasprintf@@Base+0x25c>
   25aa0:	ldur	x8, [x29, #-88]
   25aa4:	mov	w9, wzr
   25aa8:	strb	w9, [x8]
   25aac:	ldur	x8, [x29, #-24]
   25ab0:	stur	x8, [x29, #-8]
   25ab4:	b	25ab8 <xvasprintf@@Base+0x334>
   25ab8:	ldur	x0, [x29, #-8]
   25abc:	ldp	x29, x30, [sp, #192]
   25ac0:	add	sp, sp, #0xd0
   25ac4:	ret

0000000000025ac8 <xasprintf@@Base>:
   25ac8:	sub	sp, sp, #0x130
   25acc:	stp	x29, x30, [sp, #272]
   25ad0:	str	x28, [sp, #288]
   25ad4:	add	x29, sp, #0x110
   25ad8:	sub	x8, x29, #0x28
   25adc:	str	q7, [sp, #112]
   25ae0:	str	q6, [sp, #96]
   25ae4:	str	q5, [sp, #80]
   25ae8:	str	q4, [sp, #64]
   25aec:	str	q3, [sp, #48]
   25af0:	str	q2, [sp, #32]
   25af4:	str	q1, [sp, #16]
   25af8:	str	q0, [sp]
   25afc:	str	x7, [sp, #184]
   25b00:	str	x6, [sp, #176]
   25b04:	str	x5, [sp, #168]
   25b08:	str	x4, [sp, #160]
   25b0c:	str	x3, [sp, #152]
   25b10:	str	x2, [sp, #144]
   25b14:	str	x1, [sp, #136]
   25b18:	stur	x0, [x29, #-8]
   25b1c:	mov	w9, #0xffffff80            	// #-128
   25b20:	stur	w9, [x29, #-12]
   25b24:	mov	w9, #0xffffffc8            	// #-56
   25b28:	stur	w9, [x29, #-16]
   25b2c:	mov	x10, sp
   25b30:	add	x10, x10, #0x80
   25b34:	stur	x10, [x29, #-24]
   25b38:	add	x10, sp, #0x88
   25b3c:	add	x10, x10, #0x38
   25b40:	stur	x10, [x29, #-32]
   25b44:	add	x10, x29, #0x20
   25b48:	stur	x10, [x29, #-40]
   25b4c:	ldur	x0, [x29, #-8]
   25b50:	ldr	q0, [x8]
   25b54:	ldr	q1, [x8, #16]
   25b58:	stur	q1, [x29, #-64]
   25b5c:	stur	q0, [x29, #-80]
   25b60:	sub	x1, x29, #0x50
   25b64:	bl	b710 <xvasprintf@plt>
   25b68:	stur	x0, [x29, #-48]
   25b6c:	ldur	x0, [x29, #-48]
   25b70:	ldr	x28, [sp, #288]
   25b74:	ldp	x29, x30, [sp, #272]
   25b78:	add	sp, sp, #0x130
   25b7c:	ret

0000000000025b80 <asnprintf@@Base>:
   25b80:	sub	sp, sp, #0x130
   25b84:	stp	x29, x30, [sp, #272]
   25b88:	str	x28, [sp, #288]
   25b8c:	add	x29, sp, #0x110
   25b90:	sub	x8, x29, #0x38
   25b94:	str	q7, [sp, #112]
   25b98:	str	q6, [sp, #96]
   25b9c:	str	q5, [sp, #80]
   25ba0:	str	q4, [sp, #64]
   25ba4:	str	q3, [sp, #48]
   25ba8:	str	q2, [sp, #32]
   25bac:	str	q1, [sp, #16]
   25bb0:	str	q0, [sp]
   25bb4:	str	x7, [sp, #168]
   25bb8:	str	x6, [sp, #160]
   25bbc:	str	x5, [sp, #152]
   25bc0:	str	x4, [sp, #144]
   25bc4:	str	x3, [sp, #136]
   25bc8:	stur	x0, [x29, #-8]
   25bcc:	stur	x1, [x29, #-16]
   25bd0:	stur	x2, [x29, #-24]
   25bd4:	mov	w9, #0xffffff80            	// #-128
   25bd8:	stur	w9, [x29, #-28]
   25bdc:	mov	w9, #0xffffffd8            	// #-40
   25be0:	stur	w9, [x29, #-32]
   25be4:	mov	x10, sp
   25be8:	add	x10, x10, #0x80
   25bec:	stur	x10, [x29, #-40]
   25bf0:	add	x10, sp, #0x88
   25bf4:	add	x10, x10, #0x28
   25bf8:	stur	x10, [x29, #-48]
   25bfc:	add	x10, x29, #0x20
   25c00:	stur	x10, [x29, #-56]
   25c04:	ldur	x0, [x29, #-8]
   25c08:	ldur	x1, [x29, #-16]
   25c0c:	ldur	x2, [x29, #-24]
   25c10:	ldr	q0, [x8]
   25c14:	ldr	q1, [x8, #16]
   25c18:	stur	q1, [x29, #-80]
   25c1c:	stur	q0, [x29, #-96]
   25c20:	sub	x3, x29, #0x60
   25c24:	bl	b720 <vasnprintf@plt>
   25c28:	stur	x0, [x29, #-64]
   25c2c:	ldur	x0, [x29, #-64]
   25c30:	ldr	x28, [sp, #288]
   25c34:	ldp	x29, x30, [sp, #272]
   25c38:	add	sp, sp, #0x130
   25c3c:	ret

0000000000025c40 <chdir_long@@Base>:
   25c40:	sub	sp, sp, #0x90
   25c44:	stp	x29, x30, [sp, #128]
   25c48:	add	x29, sp, #0x80
   25c4c:	adrp	x8, 45000 <vasnprintf@@Base+0x2e4c>
   25c50:	add	x8, x8, #0x3c5
   25c54:	adrp	x9, 45000 <vasnprintf@@Base+0x2e4c>
   25c58:	add	x9, x9, #0x3d2
   25c5c:	stur	x0, [x29, #-16]
   25c60:	ldur	x0, [x29, #-16]
   25c64:	str	x8, [sp, #24]
   25c68:	str	x9, [sp, #16]
   25c6c:	bl	b730 <chdir@plt>
   25c70:	stur	w0, [x29, #-20]
   25c74:	ldur	w10, [x29, #-20]
   25c78:	cbz	w10, 25c8c <chdir_long@@Base+0x4c>
   25c7c:	bl	aa20 <__errno_location@plt>
   25c80:	ldr	w8, [x0]
   25c84:	cmp	w8, #0x24
   25c88:	b.eq	25c98 <chdir_long@@Base+0x58>  // b.none
   25c8c:	ldur	w8, [x29, #-20]
   25c90:	stur	w8, [x29, #-4]
   25c94:	b	25f84 <chdir_long@@Base+0x344>
   25c98:	ldur	x0, [x29, #-16]
   25c9c:	bl	a8e0 <strlen@plt>
   25ca0:	stur	x0, [x29, #-32]
   25ca4:	ldur	x8, [x29, #-16]
   25ca8:	ldur	x9, [x29, #-32]
   25cac:	add	x8, x8, x9
   25cb0:	stur	x8, [x29, #-40]
   25cb4:	sub	x0, x29, #0x2c
   25cb8:	bl	25f94 <chdir_long@@Base+0x354>
   25cbc:	ldur	x8, [x29, #-32]
   25cc0:	mov	x9, xzr
   25cc4:	cmp	x9, x8
   25cc8:	cset	w10, cs  // cs = hs, nlast
   25ccc:	tbnz	w10, #0, 25cd4 <chdir_long@@Base+0x94>
   25cd0:	b	25cec <chdir_long@@Base+0xac>
   25cd4:	adrp	x0, 45000 <vasnprintf@@Base+0x2e4c>
   25cd8:	add	x0, x0, #0x3bd
   25cdc:	ldr	x1, [sp, #24]
   25ce0:	mov	w2, #0x7e                  	// #126
   25ce4:	ldr	x3, [sp, #16]
   25ce8:	bl	a910 <__assert_fail@plt>
   25cec:	ldur	x8, [x29, #-32]
   25cf0:	mov	x9, #0x1000                	// #4096
   25cf4:	cmp	x9, x8
   25cf8:	b.hi	25d00 <chdir_long@@Base+0xc0>  // b.pmore
   25cfc:	b	25d18 <chdir_long@@Base+0xd8>
   25d00:	adrp	x0, 45000 <vasnprintf@@Base+0x2e4c>
   25d04:	add	x0, x0, #0x3e9
   25d08:	ldr	x1, [sp, #24]
   25d0c:	mov	w2, #0x7f                  	// #127
   25d10:	ldr	x3, [sp, #16]
   25d14:	bl	a910 <__assert_fail@plt>
   25d18:	ldur	x0, [x29, #-16]
   25d1c:	adrp	x1, 45000 <vasnprintf@@Base+0x2e4c>
   25d20:	add	x1, x1, #0x219
   25d24:	bl	ab70 <strspn@plt>
   25d28:	stur	x0, [x29, #-56]
   25d2c:	ldur	x8, [x29, #-56]
   25d30:	cmp	x8, #0x2
   25d34:	b.ne	25dc4 <chdir_long@@Base+0x184>  // b.any
   25d38:	ldur	x8, [x29, #-16]
   25d3c:	add	x0, x8, #0x3
   25d40:	ldur	x8, [x29, #-40]
   25d44:	ldur	x9, [x29, #-16]
   25d48:	add	x9, x9, #0x3
   25d4c:	subs	x2, x8, x9
   25d50:	mov	w1, #0x2f                  	// #47
   25d54:	bl	ab80 <memchr@plt>
   25d58:	str	x0, [sp, #56]
   25d5c:	ldr	x8, [sp, #56]
   25d60:	cbnz	x8, 25d7c <chdir_long@@Base+0x13c>
   25d64:	bl	aa20 <__errno_location@plt>
   25d68:	mov	w8, #0x24                  	// #36
   25d6c:	str	w8, [x0]
   25d70:	mov	w8, #0xffffffff            	// #-1
   25d74:	stur	w8, [x29, #-4]
   25d78:	b	25f84 <chdir_long@@Base+0x344>
   25d7c:	ldr	x8, [sp, #56]
   25d80:	mov	w9, #0x0                   	// #0
   25d84:	strb	w9, [x8]
   25d88:	ldur	x1, [x29, #-16]
   25d8c:	sub	x0, x29, #0x2c
   25d90:	bl	25fb0 <chdir_long@@Base+0x370>
   25d94:	stur	w0, [x29, #-60]
   25d98:	ldr	x8, [sp, #56]
   25d9c:	mov	w9, #0x2f                  	// #47
   25da0:	strb	w9, [x8]
   25da4:	ldur	w9, [x29, #-60]
   25da8:	cbz	w9, 25db0 <chdir_long@@Base+0x170>
   25dac:	b	25f54 <chdir_long@@Base+0x314>
   25db0:	ldr	x8, [sp, #56]
   25db4:	add	x0, x8, #0x1
   25db8:	bl	26020 <chdir_long@@Base+0x3e0>
   25dbc:	stur	x0, [x29, #-16]
   25dc0:	b	25df4 <chdir_long@@Base+0x1b4>
   25dc4:	ldur	x8, [x29, #-56]
   25dc8:	cbz	x8, 25df4 <chdir_long@@Base+0x1b4>
   25dcc:	sub	x0, x29, #0x2c
   25dd0:	adrp	x1, 45000 <vasnprintf@@Base+0x2e4c>
   25dd4:	add	x1, x1, #0x219
   25dd8:	bl	25fb0 <chdir_long@@Base+0x370>
   25ddc:	cbz	w0, 25de4 <chdir_long@@Base+0x1a4>
   25de0:	b	25f54 <chdir_long@@Base+0x314>
   25de4:	ldur	x8, [x29, #-56]
   25de8:	ldur	x9, [x29, #-16]
   25dec:	add	x8, x9, x8
   25df0:	stur	x8, [x29, #-16]
   25df4:	ldur	x8, [x29, #-16]
   25df8:	ldrb	w9, [x8]
   25dfc:	cmp	w9, #0x2f
   25e00:	b.eq	25e08 <chdir_long@@Base+0x1c8>  // b.none
   25e04:	b	25e20 <chdir_long@@Base+0x1e0>
   25e08:	adrp	x0, 45000 <vasnprintf@@Base+0x2e4c>
   25e0c:	add	x0, x0, #0x3f5
   25e10:	ldr	x1, [sp, #24]
   25e14:	mov	w2, #0xa2                  	// #162
   25e18:	ldr	x3, [sp, #16]
   25e1c:	bl	a910 <__assert_fail@plt>
   25e20:	ldur	x8, [x29, #-16]
   25e24:	ldur	x9, [x29, #-40]
   25e28:	cmp	x8, x9
   25e2c:	b.hi	25e34 <chdir_long@@Base+0x1f4>  // b.pmore
   25e30:	b	25e4c <chdir_long@@Base+0x20c>
   25e34:	adrp	x0, 45000 <vasnprintf@@Base+0x2e4c>
   25e38:	add	x0, x0, #0x401
   25e3c:	ldr	x1, [sp, #24]
   25e40:	mov	w2, #0xa3                  	// #163
   25e44:	ldr	x3, [sp, #16]
   25e48:	bl	a910 <__assert_fail@plt>
   25e4c:	ldur	x8, [x29, #-40]
   25e50:	ldur	x9, [x29, #-16]
   25e54:	subs	x8, x8, x9
   25e58:	mov	x9, #0x1000                	// #4096
   25e5c:	cmp	x9, x8
   25e60:	b.gt	25f10 <chdir_long@@Base+0x2d0>
   25e64:	ldur	x0, [x29, #-16]
   25e68:	mov	w1, #0x2f                  	// #47
   25e6c:	mov	x2, #0x1000                	// #4096
   25e70:	bl	b740 <memrchr@plt>
   25e74:	str	x0, [sp, #40]
   25e78:	ldr	x8, [sp, #40]
   25e7c:	cbnz	x8, 25e98 <chdir_long@@Base+0x258>
   25e80:	bl	aa20 <__errno_location@plt>
   25e84:	mov	w8, #0x24                  	// #36
   25e88:	str	w8, [x0]
   25e8c:	mov	w8, #0xffffffff            	// #-1
   25e90:	stur	w8, [x29, #-4]
   25e94:	b	25f84 <chdir_long@@Base+0x344>
   25e98:	ldr	x8, [sp, #40]
   25e9c:	mov	w9, #0x0                   	// #0
   25ea0:	strb	w9, [x8]
   25ea4:	ldr	x8, [sp, #40]
   25ea8:	ldur	x10, [x29, #-16]
   25eac:	subs	x8, x8, x10
   25eb0:	cmp	x8, #0x1, lsl #12
   25eb4:	b.ge	25ebc <chdir_long@@Base+0x27c>  // b.tcont
   25eb8:	b	25ed4 <chdir_long@@Base+0x294>
   25ebc:	adrp	x0, 45000 <vasnprintf@@Base+0x2e4c>
   25ec0:	add	x0, x0, #0x410
   25ec4:	ldr	x1, [sp, #24]
   25ec8:	mov	w2, #0xb3                  	// #179
   25ecc:	ldr	x3, [sp, #16]
   25ed0:	bl	a910 <__assert_fail@plt>
   25ed4:	ldur	x1, [x29, #-16]
   25ed8:	sub	x0, x29, #0x2c
   25edc:	bl	25fb0 <chdir_long@@Base+0x370>
   25ee0:	str	w0, [sp, #52]
   25ee4:	ldr	x8, [sp, #40]
   25ee8:	mov	w9, #0x2f                  	// #47
   25eec:	strb	w9, [x8]
   25ef0:	ldr	w9, [sp, #52]
   25ef4:	cbz	w9, 25efc <chdir_long@@Base+0x2bc>
   25ef8:	b	25f54 <chdir_long@@Base+0x314>
   25efc:	ldr	x8, [sp, #40]
   25f00:	add	x0, x8, #0x1
   25f04:	bl	26020 <chdir_long@@Base+0x3e0>
   25f08:	stur	x0, [x29, #-16]
   25f0c:	b	25e4c <chdir_long@@Base+0x20c>
   25f10:	ldur	x8, [x29, #-16]
   25f14:	ldur	x9, [x29, #-40]
   25f18:	cmp	x8, x9
   25f1c:	b.cs	25f34 <chdir_long@@Base+0x2f4>  // b.hs, b.nlast
   25f20:	ldur	x1, [x29, #-16]
   25f24:	sub	x0, x29, #0x2c
   25f28:	bl	25fb0 <chdir_long@@Base+0x370>
   25f2c:	cbz	w0, 25f34 <chdir_long@@Base+0x2f4>
   25f30:	b	25f54 <chdir_long@@Base+0x314>
   25f34:	sub	x0, x29, #0x2c
   25f38:	bl	2605c <chdir_long@@Base+0x41c>
   25f3c:	cbz	w0, 25f44 <chdir_long@@Base+0x304>
   25f40:	b	25f54 <chdir_long@@Base+0x314>
   25f44:	sub	x0, x29, #0x2c
   25f48:	bl	26084 <chdir_long@@Base+0x444>
   25f4c:	stur	wzr, [x29, #-4]
   25f50:	b	25f84 <chdir_long@@Base+0x344>
   25f54:	bl	aa20 <__errno_location@plt>
   25f58:	ldr	w8, [x0]
   25f5c:	str	w8, [sp, #36]
   25f60:	sub	x0, x29, #0x2c
   25f64:	bl	26084 <chdir_long@@Base+0x444>
   25f68:	ldr	w8, [sp, #36]
   25f6c:	str	w8, [sp, #12]
   25f70:	bl	aa20 <__errno_location@plt>
   25f74:	ldr	w8, [sp, #12]
   25f78:	str	w8, [x0]
   25f7c:	mov	w9, #0xffffffff            	// #-1
   25f80:	stur	w9, [x29, #-4]
   25f84:	ldur	w0, [x29, #-4]
   25f88:	ldp	x29, x30, [sp, #128]
   25f8c:	add	sp, sp, #0x90
   25f90:	ret
   25f94:	sub	sp, sp, #0x10
   25f98:	mov	w8, #0xffffff9c            	// #-100
   25f9c:	str	x0, [sp, #8]
   25fa0:	ldr	x9, [sp, #8]
   25fa4:	str	w8, [x9]
   25fa8:	add	sp, sp, #0x10
   25fac:	ret
   25fb0:	sub	sp, sp, #0x30
   25fb4:	stp	x29, x30, [sp, #32]
   25fb8:	add	x29, sp, #0x20
   25fbc:	mov	w2, #0x4900                	// #18688
   25fc0:	str	x0, [sp, #16]
   25fc4:	str	x1, [sp, #8]
   25fc8:	ldr	x8, [sp, #16]
   25fcc:	ldr	w0, [x8]
   25fd0:	ldr	x1, [sp, #8]
   25fd4:	bl	ac90 <openat@plt>
   25fd8:	str	w0, [sp, #4]
   25fdc:	ldr	w9, [sp, #4]
   25fe0:	cmp	w9, #0x0
   25fe4:	cset	w9, ge  // ge = tcont
   25fe8:	tbnz	w9, #0, 25ff8 <chdir_long@@Base+0x3b8>
   25fec:	mov	w8, #0xffffffff            	// #-1
   25ff0:	stur	w8, [x29, #-4]
   25ff4:	b	26010 <chdir_long@@Base+0x3d0>
   25ff8:	ldr	x0, [sp, #16]
   25ffc:	bl	26084 <chdir_long@@Base+0x444>
   26000:	ldr	w8, [sp, #4]
   26004:	ldr	x9, [sp, #16]
   26008:	str	w8, [x9]
   2600c:	stur	wzr, [x29, #-4]
   26010:	ldur	w0, [x29, #-4]
   26014:	ldp	x29, x30, [sp, #32]
   26018:	add	sp, sp, #0x30
   2601c:	ret
   26020:	sub	sp, sp, #0x20
   26024:	stp	x29, x30, [sp, #16]
   26028:	add	x29, sp, #0x10
   2602c:	adrp	x1, 45000 <vasnprintf@@Base+0x2e4c>
   26030:	add	x1, x1, #0x219
   26034:	str	x0, [sp, #8]
   26038:	ldr	x0, [sp, #8]
   2603c:	bl	ab70 <strspn@plt>
   26040:	str	x0, [sp]
   26044:	ldr	x8, [sp, #8]
   26048:	ldr	x9, [sp]
   2604c:	add	x0, x8, x9
   26050:	ldp	x29, x30, [sp, #16]
   26054:	add	sp, sp, #0x20
   26058:	ret
   2605c:	sub	sp, sp, #0x20
   26060:	stp	x29, x30, [sp, #16]
   26064:	add	x29, sp, #0x10
   26068:	str	x0, [sp, #8]
   2606c:	ldr	x8, [sp, #8]
   26070:	ldr	w0, [x8]
   26074:	bl	b4f0 <fchdir@plt>
   26078:	ldp	x29, x30, [sp, #16]
   2607c:	add	sp, sp, #0x20
   26080:	ret
   26084:	sub	sp, sp, #0x20
   26088:	stp	x29, x30, [sp, #16]
   2608c:	add	x29, sp, #0x10
   26090:	mov	w8, wzr
   26094:	str	x0, [sp, #8]
   26098:	ldr	x9, [sp, #8]
   2609c:	ldr	w10, [x9]
   260a0:	cmp	w8, w10
   260a4:	cset	w8, gt
   260a8:	tbnz	w8, #0, 260f4 <chdir_long@@Base+0x4b4>
   260ac:	ldr	x8, [sp, #8]
   260b0:	ldr	w0, [x8]
   260b4:	bl	ac30 <close@plt>
   260b8:	cmp	w0, #0x0
   260bc:	cset	w9, ne  // ne = any
   260c0:	and	w9, w9, #0x1
   260c4:	strb	w9, [sp, #7]
   260c8:	ldrb	w9, [sp, #7]
   260cc:	tbnz	w9, #0, 260d4 <chdir_long@@Base+0x494>
   260d0:	b	260f4 <chdir_long@@Base+0x4b4>
   260d4:	adrp	x0, 45000 <vasnprintf@@Base+0x2e4c>
   260d8:	add	x0, x0, #0x423
   260dc:	adrp	x1, 45000 <vasnprintf@@Base+0x2e4c>
   260e0:	add	x1, x1, #0x3c5
   260e4:	mov	w2, #0x40                  	// #64
   260e8:	adrp	x3, 45000 <vasnprintf@@Base+0x2e4c>
   260ec:	add	x3, x3, #0x430
   260f0:	bl	a910 <__assert_fail@plt>
   260f4:	ldp	x29, x30, [sp, #16]
   260f8:	add	sp, sp, #0x20
   260fc:	ret

0000000000026100 <rpl_fcntl@@Base>:
   26100:	sub	sp, sp, #0x180
   26104:	stp	x29, x30, [sp, #352]
   26108:	str	x28, [sp, #368]
   2610c:	add	x29, sp, #0x160
   26110:	str	q7, [sp, #224]
   26114:	str	q6, [sp, #208]
   26118:	str	q5, [sp, #192]
   2611c:	str	q4, [sp, #176]
   26120:	str	q3, [sp, #160]
   26124:	str	q2, [sp, #144]
   26128:	str	q1, [sp, #128]
   2612c:	str	q0, [sp, #112]
   26130:	stur	x7, [x29, #-72]
   26134:	stur	x6, [x29, #-80]
   26138:	stur	x5, [x29, #-88]
   2613c:	stur	x4, [x29, #-96]
   26140:	stur	x3, [x29, #-104]
   26144:	stur	x2, [x29, #-112]
   26148:	stur	w0, [x29, #-4]
   2614c:	stur	w1, [x29, #-8]
   26150:	mov	w8, #0xffffffff            	// #-1
   26154:	stur	w8, [x29, #-44]
   26158:	mov	w8, #0xffffff80            	// #-128
   2615c:	stur	w8, [x29, #-12]
   26160:	mov	w8, #0xffffffd0            	// #-48
   26164:	stur	w8, [x29, #-16]
   26168:	add	x9, sp, #0x70
   2616c:	add	x9, x9, #0x80
   26170:	stur	x9, [x29, #-24]
   26174:	sub	x9, x29, #0x70
   26178:	add	x9, x9, #0x30
   2617c:	stur	x9, [x29, #-32]
   26180:	add	x9, x29, #0x20
   26184:	stur	x9, [x29, #-40]
   26188:	ldur	w8, [x29, #-8]
   2618c:	mov	w10, w8
   26190:	str	w10, [sp, #108]
   26194:	cbz	w8, 261ac <rpl_fcntl@@Base+0xac>
   26198:	b	2619c <rpl_fcntl@@Base+0x9c>
   2619c:	ldr	w8, [sp, #108]
   261a0:	subs	w9, w8, #0x406
   261a4:	b.eq	26230 <rpl_fcntl@@Base+0x130>  // b.none
   261a8:	b	262b4 <rpl_fcntl@@Base+0x1b4>
   261ac:	sub	x8, x29, #0x28
   261b0:	add	x8, x8, #0x18
   261b4:	ldur	w9, [x29, #-16]
   261b8:	mov	w10, w9
   261bc:	str	x8, [sp, #96]
   261c0:	str	w10, [sp, #92]
   261c4:	tbz	w9, #31, 261fc <rpl_fcntl@@Base+0xfc>
   261c8:	b	261cc <rpl_fcntl@@Base+0xcc>
   261cc:	ldr	w8, [sp, #92]
   261d0:	add	w9, w8, #0x8
   261d4:	ldr	x10, [sp, #96]
   261d8:	str	w9, [x10]
   261dc:	subs	w9, w9, #0x0
   261e0:	b.gt	261fc <rpl_fcntl@@Base+0xfc>
   261e4:	b	261e8 <rpl_fcntl@@Base+0xe8>
   261e8:	ldur	x8, [x29, #-32]
   261ec:	ldr	w9, [sp, #92]
   261f0:	add	x8, x8, w9, sxtw
   261f4:	str	x8, [sp, #80]
   261f8:	b	26210 <rpl_fcntl@@Base+0x110>
   261fc:	ldur	x8, [x29, #-40]
   26200:	add	x9, x8, #0x8
   26204:	stur	x9, [x29, #-40]
   26208:	str	x8, [sp, #80]
   2620c:	b	26210 <rpl_fcntl@@Base+0x110>
   26210:	ldr	x8, [sp, #80]
   26214:	ldr	w9, [x8]
   26218:	stur	w9, [x29, #-48]
   2621c:	ldur	w0, [x29, #-4]
   26220:	ldur	w1, [x29, #-48]
   26224:	bl	264f8 <rpl_fcntl@@Base+0x3f8>
   26228:	stur	w0, [x29, #-44]
   2622c:	b	264e4 <rpl_fcntl@@Base+0x3e4>
   26230:	sub	x8, x29, #0x28
   26234:	add	x8, x8, #0x18
   26238:	ldur	w9, [x29, #-16]
   2623c:	mov	w10, w9
   26240:	str	x8, [sp, #72]
   26244:	str	w10, [sp, #68]
   26248:	tbz	w9, #31, 26280 <rpl_fcntl@@Base+0x180>
   2624c:	b	26250 <rpl_fcntl@@Base+0x150>
   26250:	ldr	w8, [sp, #68]
   26254:	add	w9, w8, #0x8
   26258:	ldr	x10, [sp, #72]
   2625c:	str	w9, [x10]
   26260:	subs	w9, w9, #0x0
   26264:	b.gt	26280 <rpl_fcntl@@Base+0x180>
   26268:	b	2626c <rpl_fcntl@@Base+0x16c>
   2626c:	ldur	x8, [x29, #-32]
   26270:	ldr	w9, [sp, #68]
   26274:	add	x8, x8, w9, sxtw
   26278:	str	x8, [sp, #56]
   2627c:	b	26294 <rpl_fcntl@@Base+0x194>
   26280:	ldur	x8, [x29, #-40]
   26284:	add	x9, x8, #0x8
   26288:	stur	x9, [x29, #-40]
   2628c:	str	x8, [sp, #56]
   26290:	b	26294 <rpl_fcntl@@Base+0x194>
   26294:	ldr	x8, [sp, #56]
   26298:	ldr	w9, [x8]
   2629c:	stur	w9, [x29, #-52]
   262a0:	ldur	w0, [x29, #-4]
   262a4:	ldur	w1, [x29, #-52]
   262a8:	bl	26534 <rpl_fcntl@@Base+0x434>
   262ac:	stur	w0, [x29, #-44]
   262b0:	b	264e4 <rpl_fcntl@@Base+0x3e4>
   262b4:	ldur	w8, [x29, #-8]
   262b8:	mov	w9, w8
   262bc:	str	w9, [sp, #52]
   262c0:	cbz	w8, 263d0 <rpl_fcntl@@Base+0x2d0>
   262c4:	b	262c8 <rpl_fcntl@@Base+0x1c8>
   262c8:	ldr	w8, [sp, #52]
   262cc:	subs	w9, w8, #0x1
   262d0:	b.eq	263bc <rpl_fcntl@@Base+0x2bc>  // b.none
   262d4:	b	262d8 <rpl_fcntl@@Base+0x1d8>
   262d8:	ldr	w8, [sp, #52]
   262dc:	subs	w9, w8, #0x2
   262e0:	b.eq	263d0 <rpl_fcntl@@Base+0x2d0>  // b.none
   262e4:	b	262e8 <rpl_fcntl@@Base+0x1e8>
   262e8:	ldr	w8, [sp, #52]
   262ec:	subs	w9, w8, #0x3
   262f0:	b.eq	263bc <rpl_fcntl@@Base+0x2bc>  // b.none
   262f4:	b	262f8 <rpl_fcntl@@Base+0x1f8>
   262f8:	ldr	w8, [sp, #52]
   262fc:	subs	w9, w8, #0x4
   26300:	b.eq	263d0 <rpl_fcntl@@Base+0x2d0>  // b.none
   26304:	b	26308 <rpl_fcntl@@Base+0x208>
   26308:	ldr	w8, [sp, #52]
   2630c:	subs	w9, w8, #0x8
   26310:	b.eq	263d0 <rpl_fcntl@@Base+0x2d0>  // b.none
   26314:	b	26318 <rpl_fcntl@@Base+0x218>
   26318:	ldr	w8, [sp, #52]
   2631c:	subs	w9, w8, #0x9
   26320:	b.eq	263bc <rpl_fcntl@@Base+0x2bc>  // b.none
   26324:	b	26328 <rpl_fcntl@@Base+0x228>
   26328:	ldr	w8, [sp, #52]
   2632c:	subs	w9, w8, #0xa
   26330:	b.eq	263d0 <rpl_fcntl@@Base+0x2d0>  // b.none
   26334:	b	26338 <rpl_fcntl@@Base+0x238>
   26338:	ldr	w8, [sp, #52]
   2633c:	subs	w9, w8, #0xb
   26340:	b.eq	263bc <rpl_fcntl@@Base+0x2bc>  // b.none
   26344:	b	26348 <rpl_fcntl@@Base+0x248>
   26348:	ldr	w8, [sp, #52]
   2634c:	subs	w9, w8, #0x400
   26350:	b.eq	263d0 <rpl_fcntl@@Base+0x2d0>  // b.none
   26354:	b	26358 <rpl_fcntl@@Base+0x258>
   26358:	ldr	w8, [sp, #52]
   2635c:	subs	w9, w8, #0x401
   26360:	b.eq	263bc <rpl_fcntl@@Base+0x2bc>  // b.none
   26364:	b	26368 <rpl_fcntl@@Base+0x268>
   26368:	ldr	w8, [sp, #52]
   2636c:	subs	w9, w8, #0x402
   26370:	b.eq	263d0 <rpl_fcntl@@Base+0x2d0>  // b.none
   26374:	b	26378 <rpl_fcntl@@Base+0x278>
   26378:	ldr	w8, [sp, #52]
   2637c:	subs	w9, w8, #0x406
   26380:	subs	w9, w9, #0x2
   26384:	b.cc	263d0 <rpl_fcntl@@Base+0x2d0>  // b.lo, b.ul, b.last
   26388:	b	2638c <rpl_fcntl@@Base+0x28c>
   2638c:	ldr	w8, [sp, #52]
   26390:	subs	w9, w8, #0x408
   26394:	b.eq	263bc <rpl_fcntl@@Base+0x2bc>  // b.none
   26398:	b	2639c <rpl_fcntl@@Base+0x29c>
   2639c:	ldr	w8, [sp, #52]
   263a0:	subs	w9, w8, #0x409
   263a4:	b.eq	263d0 <rpl_fcntl@@Base+0x2d0>  // b.none
   263a8:	b	263ac <rpl_fcntl@@Base+0x2ac>
   263ac:	ldr	w8, [sp, #52]
   263b0:	subs	w9, w8, #0x40a
   263b4:	b.ne	26458 <rpl_fcntl@@Base+0x358>  // b.any
   263b8:	b	263bc <rpl_fcntl@@Base+0x2bc>
   263bc:	ldur	w0, [x29, #-4]
   263c0:	ldur	w1, [x29, #-8]
   263c4:	bl	b440 <fcntl@plt>
   263c8:	stur	w0, [x29, #-44]
   263cc:	b	264e0 <rpl_fcntl@@Base+0x3e0>
   263d0:	sub	x8, x29, #0x28
   263d4:	add	x8, x8, #0x18
   263d8:	ldur	w9, [x29, #-16]
   263dc:	mov	w10, w9
   263e0:	str	x8, [sp, #40]
   263e4:	str	w10, [sp, #36]
   263e8:	tbz	w9, #31, 26420 <rpl_fcntl@@Base+0x320>
   263ec:	b	263f0 <rpl_fcntl@@Base+0x2f0>
   263f0:	ldr	w8, [sp, #36]
   263f4:	add	w9, w8, #0x8
   263f8:	ldr	x10, [sp, #40]
   263fc:	str	w9, [x10]
   26400:	subs	w9, w9, #0x0
   26404:	b.gt	26420 <rpl_fcntl@@Base+0x320>
   26408:	b	2640c <rpl_fcntl@@Base+0x30c>
   2640c:	ldur	x8, [x29, #-32]
   26410:	ldr	w9, [sp, #36]
   26414:	add	x8, x8, w9, sxtw
   26418:	str	x8, [sp, #24]
   2641c:	b	26434 <rpl_fcntl@@Base+0x334>
   26420:	ldur	x8, [x29, #-40]
   26424:	add	x9, x8, #0x8
   26428:	stur	x9, [x29, #-40]
   2642c:	str	x8, [sp, #24]
   26430:	b	26434 <rpl_fcntl@@Base+0x334>
   26434:	ldr	x8, [sp, #24]
   26438:	ldr	w9, [x8]
   2643c:	stur	w9, [x29, #-56]
   26440:	ldur	w0, [x29, #-4]
   26444:	ldur	w1, [x29, #-8]
   26448:	ldur	w2, [x29, #-56]
   2644c:	bl	b440 <fcntl@plt>
   26450:	stur	w0, [x29, #-44]
   26454:	b	264e0 <rpl_fcntl@@Base+0x3e0>
   26458:	sub	x8, x29, #0x28
   2645c:	add	x8, x8, #0x18
   26460:	ldur	w9, [x29, #-16]
   26464:	mov	w10, w9
   26468:	str	x8, [sp, #16]
   2646c:	str	w10, [sp, #12]
   26470:	tbz	w9, #31, 264a8 <rpl_fcntl@@Base+0x3a8>
   26474:	b	26478 <rpl_fcntl@@Base+0x378>
   26478:	ldr	w8, [sp, #12]
   2647c:	add	w9, w8, #0x8
   26480:	ldr	x10, [sp, #16]
   26484:	str	w9, [x10]
   26488:	subs	w9, w9, #0x0
   2648c:	b.gt	264a8 <rpl_fcntl@@Base+0x3a8>
   26490:	b	26494 <rpl_fcntl@@Base+0x394>
   26494:	ldur	x8, [x29, #-32]
   26498:	ldr	w9, [sp, #12]
   2649c:	add	x8, x8, w9, sxtw
   264a0:	str	x8, [sp]
   264a4:	b	264bc <rpl_fcntl@@Base+0x3bc>
   264a8:	ldur	x8, [x29, #-40]
   264ac:	add	x9, x8, #0x8
   264b0:	stur	x9, [x29, #-40]
   264b4:	str	x8, [sp]
   264b8:	b	264bc <rpl_fcntl@@Base+0x3bc>
   264bc:	ldr	x8, [sp]
   264c0:	ldr	x8, [x8]
   264c4:	stur	x8, [x29, #-64]
   264c8:	ldur	w0, [x29, #-4]
   264cc:	ldur	w1, [x29, #-8]
   264d0:	ldur	x2, [x29, #-64]
   264d4:	bl	b440 <fcntl@plt>
   264d8:	stur	w0, [x29, #-44]
   264dc:	b	264e0 <rpl_fcntl@@Base+0x3e0>
   264e0:	b	264e4 <rpl_fcntl@@Base+0x3e4>
   264e4:	ldur	w0, [x29, #-44]
   264e8:	ldr	x28, [sp, #368]
   264ec:	ldp	x29, x30, [sp, #352]
   264f0:	add	sp, sp, #0x180
   264f4:	ret
   264f8:	sub	sp, sp, #0x20
   264fc:	stp	x29, x30, [sp, #16]
   26500:	add	x29, sp, #0x10
   26504:	mov	w8, wzr
   26508:	stur	w0, [x29, #-4]
   2650c:	str	w1, [sp, #8]
   26510:	ldur	w0, [x29, #-4]
   26514:	ldr	w2, [sp, #8]
   26518:	mov	w1, w8
   2651c:	bl	b440 <fcntl@plt>
   26520:	str	w0, [sp, #4]
   26524:	ldr	w0, [sp, #4]
   26528:	ldp	x29, x30, [sp, #16]
   2652c:	add	sp, sp, #0x20
   26530:	ret
   26534:	sub	sp, sp, #0x40
   26538:	stp	x29, x30, [sp, #48]
   2653c:	add	x29, sp, #0x30
   26540:	adrp	x8, 61000 <gl_rbtree_list_implementation@@Base+0x1468>
   26544:	add	x8, x8, #0x5f8
   26548:	mov	w9, wzr
   2654c:	stur	w0, [x29, #-4]
   26550:	stur	w1, [x29, #-8]
   26554:	ldr	w10, [x8]
   26558:	cmp	w9, w10
   2655c:	cset	w9, gt
   26560:	str	x8, [sp, #16]
   26564:	tbnz	w9, #0, 265e0 <rpl_fcntl@@Base+0x4e0>
   26568:	ldur	w0, [x29, #-4]
   2656c:	ldur	w2, [x29, #-8]
   26570:	mov	w1, #0x406                 	// #1030
   26574:	bl	b440 <fcntl@plt>
   26578:	stur	w0, [x29, #-12]
   2657c:	ldur	w8, [x29, #-12]
   26580:	mov	w9, wzr
   26584:	cmp	w9, w8
   26588:	cset	w8, le
   2658c:	tbnz	w8, #0, 265a0 <rpl_fcntl@@Base+0x4a0>
   26590:	bl	aa20 <__errno_location@plt>
   26594:	ldr	w8, [x0]
   26598:	cmp	w8, #0x16
   2659c:	b.eq	265b0 <rpl_fcntl@@Base+0x4b0>  // b.none
   265a0:	mov	w8, #0x1                   	// #1
   265a4:	ldr	x9, [sp, #16]
   265a8:	str	w8, [x9]
   265ac:	b	265dc <rpl_fcntl@@Base+0x4dc>
   265b0:	ldur	w0, [x29, #-4]
   265b4:	ldur	w1, [x29, #-8]
   265b8:	bl	264f8 <rpl_fcntl@@Base+0x3f8>
   265bc:	stur	w0, [x29, #-12]
   265c0:	ldur	w8, [x29, #-12]
   265c4:	cmp	w8, #0x0
   265c8:	cset	w8, lt  // lt = tstop
   265cc:	tbnz	w8, #0, 265dc <rpl_fcntl@@Base+0x4dc>
   265d0:	mov	w8, #0xffffffff            	// #-1
   265d4:	ldr	x9, [sp, #16]
   265d8:	str	w8, [x9]
   265dc:	b	265f0 <rpl_fcntl@@Base+0x4f0>
   265e0:	ldur	w0, [x29, #-4]
   265e4:	ldur	w1, [x29, #-8]
   265e8:	bl	264f8 <rpl_fcntl@@Base+0x3f8>
   265ec:	stur	w0, [x29, #-12]
   265f0:	ldur	w8, [x29, #-12]
   265f4:	mov	w9, wzr
   265f8:	cmp	w9, w8
   265fc:	cset	w8, gt
   26600:	tbnz	w8, #0, 26688 <rpl_fcntl@@Base+0x588>
   26604:	ldr	x8, [sp, #16]
   26608:	ldr	w9, [x8]
   2660c:	mov	w10, #0xffffffff            	// #-1
   26610:	cmp	w9, w10
   26614:	b.ne	26688 <rpl_fcntl@@Base+0x588>  // b.any
   26618:	ldur	w0, [x29, #-12]
   2661c:	mov	w1, #0x1                   	// #1
   26620:	bl	b440 <fcntl@plt>
   26624:	stur	w0, [x29, #-16]
   26628:	ldur	w8, [x29, #-16]
   2662c:	cmp	w8, #0x0
   26630:	cset	w8, lt  // lt = tstop
   26634:	tbnz	w8, #0, 26658 <rpl_fcntl@@Base+0x558>
   26638:	ldur	w0, [x29, #-12]
   2663c:	ldur	w8, [x29, #-16]
   26640:	orr	w2, w8, #0x1
   26644:	mov	w1, #0x2                   	// #2
   26648:	bl	b440 <fcntl@plt>
   2664c:	mov	w8, #0xffffffff            	// #-1
   26650:	cmp	w0, w8
   26654:	b.ne	26688 <rpl_fcntl@@Base+0x588>  // b.any
   26658:	bl	aa20 <__errno_location@plt>
   2665c:	ldr	w8, [x0]
   26660:	stur	w8, [x29, #-20]
   26664:	ldur	w0, [x29, #-12]
   26668:	bl	ac30 <close@plt>
   2666c:	ldur	w8, [x29, #-20]
   26670:	str	w8, [sp, #12]
   26674:	bl	aa20 <__errno_location@plt>
   26678:	ldr	w8, [sp, #12]
   2667c:	str	w8, [x0]
   26680:	mov	w9, #0xffffffff            	// #-1
   26684:	stur	w9, [x29, #-12]
   26688:	ldur	w0, [x29, #-12]
   2668c:	ldp	x29, x30, [sp, #48]
   26690:	add	sp, sp, #0x40
   26694:	ret

0000000000026698 <_getopt_internal_r@@Base>:
   26698:	sub	sp, sp, #0xb0
   2669c:	stp	x29, x30, [sp, #160]
   266a0:	add	x29, sp, #0xa0
   266a4:	adrp	x8, 5f000 <vasnprintf@@Base+0x1ce4c>
   266a8:	ldr	x8, [x8, #3808]
   266ac:	adrp	x9, 44000 <vasnprintf@@Base+0x1e4c>
   266b0:	add	x9, x9, #0xe15
   266b4:	stur	w0, [x29, #-8]
   266b8:	stur	x1, [x29, #-16]
   266bc:	stur	x2, [x29, #-24]
   266c0:	stur	x3, [x29, #-32]
   266c4:	stur	x4, [x29, #-40]
   266c8:	stur	w5, [x29, #-44]
   266cc:	stur	x6, [x29, #-56]
   266d0:	stur	w7, [x29, #-60]
   266d4:	ldur	x10, [x29, #-56]
   266d8:	ldr	w11, [x10, #4]
   266dc:	stur	w11, [x29, #-64]
   266e0:	ldur	w11, [x29, #-8]
   266e4:	cmp	w11, #0x1
   266e8:	str	x8, [sp, #72]
   266ec:	str	x9, [sp, #64]
   266f0:	b.ge	26700 <_getopt_internal_r@@Base+0x68>  // b.tcont
   266f4:	mov	w8, #0xffffffff            	// #-1
   266f8:	stur	w8, [x29, #-4]
   266fc:	b	27004 <_getopt_internal_r@@Base+0x96c>
   26700:	ldur	x8, [x29, #-56]
   26704:	mov	x9, xzr
   26708:	str	x9, [x8, #16]
   2670c:	ldur	x8, [x29, #-56]
   26710:	ldr	w10, [x8]
   26714:	cbz	w10, 26724 <_getopt_internal_r@@Base+0x8c>
   26718:	ldur	x8, [x29, #-56]
   2671c:	ldr	w9, [x8, #24]
   26720:	cbnz	w9, 26744 <_getopt_internal_r@@Base+0xac>
   26724:	ldur	w0, [x29, #-8]
   26728:	ldur	x1, [x29, #-16]
   2672c:	ldur	x2, [x29, #-24]
   26730:	ldur	x3, [x29, #-56]
   26734:	ldur	w4, [x29, #-60]
   26738:	bl	27014 <_getopt_internal_r@@Base+0x97c>
   2673c:	stur	x0, [x29, #-24]
   26740:	b	26770 <_getopt_internal_r@@Base+0xd8>
   26744:	ldur	x8, [x29, #-24]
   26748:	ldrb	w9, [x8]
   2674c:	cmp	w9, #0x2d
   26750:	b.eq	26764 <_getopt_internal_r@@Base+0xcc>  // b.none
   26754:	ldur	x8, [x29, #-24]
   26758:	ldrb	w9, [x8]
   2675c:	cmp	w9, #0x2b
   26760:	b.ne	26770 <_getopt_internal_r@@Base+0xd8>  // b.any
   26764:	ldur	x8, [x29, #-24]
   26768:	add	x8, x8, #0x1
   2676c:	stur	x8, [x29, #-24]
   26770:	ldur	x8, [x29, #-24]
   26774:	ldrb	w9, [x8]
   26778:	cmp	w9, #0x3a
   2677c:	b.ne	26784 <_getopt_internal_r@@Base+0xec>  // b.any
   26780:	stur	wzr, [x29, #-64]
   26784:	ldur	x8, [x29, #-56]
   26788:	ldr	x8, [x8, #32]
   2678c:	cbz	x8, 267a0 <_getopt_internal_r@@Base+0x108>
   26790:	ldur	x8, [x29, #-56]
   26794:	ldr	x8, [x8, #32]
   26798:	ldrb	w9, [x8]
   2679c:	cbnz	w9, 26c60 <_getopt_internal_r@@Base+0x5c8>
   267a0:	ldur	x8, [x29, #-56]
   267a4:	ldr	w9, [x8, #48]
   267a8:	ldur	x8, [x29, #-56]
   267ac:	ldr	w10, [x8]
   267b0:	cmp	w9, w10
   267b4:	b.le	267c8 <_getopt_internal_r@@Base+0x130>
   267b8:	ldur	x8, [x29, #-56]
   267bc:	ldr	w9, [x8]
   267c0:	ldur	x8, [x29, #-56]
   267c4:	str	w9, [x8, #48]
   267c8:	ldur	x8, [x29, #-56]
   267cc:	ldr	w9, [x8, #44]
   267d0:	ldur	x8, [x29, #-56]
   267d4:	ldr	w10, [x8]
   267d8:	cmp	w9, w10
   267dc:	b.le	267f0 <_getopt_internal_r@@Base+0x158>
   267e0:	ldur	x8, [x29, #-56]
   267e4:	ldr	w9, [x8]
   267e8:	ldur	x8, [x29, #-56]
   267ec:	str	w9, [x8, #44]
   267f0:	ldur	x8, [x29, #-56]
   267f4:	ldr	w9, [x8, #40]
   267f8:	cmp	w9, #0x1
   267fc:	b.ne	26918 <_getopt_internal_r@@Base+0x280>  // b.any
   26800:	ldur	x8, [x29, #-56]
   26804:	ldr	w9, [x8, #44]
   26808:	ldur	x8, [x29, #-56]
   2680c:	ldr	w10, [x8, #48]
   26810:	cmp	w9, w10
   26814:	b.eq	26840 <_getopt_internal_r@@Base+0x1a8>  // b.none
   26818:	ldur	x8, [x29, #-56]
   2681c:	ldr	w9, [x8, #48]
   26820:	ldur	x8, [x29, #-56]
   26824:	ldr	w10, [x8]
   26828:	cmp	w9, w10
   2682c:	b.eq	26840 <_getopt_internal_r@@Base+0x1a8>  // b.none
   26830:	ldur	x0, [x29, #-16]
   26834:	ldur	x1, [x29, #-56]
   26838:	bl	27110 <_getopt_internal_r@@Base+0xa78>
   2683c:	b	26868 <_getopt_internal_r@@Base+0x1d0>
   26840:	ldur	x8, [x29, #-56]
   26844:	ldr	w9, [x8, #48]
   26848:	ldur	x8, [x29, #-56]
   2684c:	ldr	w10, [x8]
   26850:	cmp	w9, w10
   26854:	b.eq	26868 <_getopt_internal_r@@Base+0x1d0>  // b.none
   26858:	ldur	x8, [x29, #-56]
   2685c:	ldr	w9, [x8]
   26860:	ldur	x8, [x29, #-56]
   26864:	str	w9, [x8, #44]
   26868:	ldur	x8, [x29, #-56]
   2686c:	ldr	w9, [x8]
   26870:	ldur	w10, [x29, #-8]
   26874:	mov	w11, #0x0                   	// #0
   26878:	cmp	w9, w10
   2687c:	str	w11, [sp, #60]
   26880:	b.ge	268e8 <_getopt_internal_r@@Base+0x250>  // b.tcont
   26884:	ldur	x8, [x29, #-16]
   26888:	ldur	x9, [x29, #-56]
   2688c:	ldrsw	x9, [x9]
   26890:	mov	x10, #0x8                   	// #8
   26894:	mul	x9, x10, x9
   26898:	add	x8, x8, x9
   2689c:	ldr	x8, [x8]
   268a0:	ldrb	w11, [x8]
   268a4:	mov	w12, #0x1                   	// #1
   268a8:	cmp	w11, #0x2d
   268ac:	str	w12, [sp, #56]
   268b0:	b.ne	268e0 <_getopt_internal_r@@Base+0x248>  // b.any
   268b4:	ldur	x8, [x29, #-16]
   268b8:	ldur	x9, [x29, #-56]
   268bc:	ldrsw	x9, [x9]
   268c0:	mov	x10, #0x8                   	// #8
   268c4:	mul	x9, x10, x9
   268c8:	add	x8, x8, x9
   268cc:	ldr	x8, [x8]
   268d0:	ldrb	w11, [x8, #1]
   268d4:	cmp	w11, #0x0
   268d8:	cset	w11, eq  // eq = none
   268dc:	str	w11, [sp, #56]
   268e0:	ldr	w8, [sp, #56]
   268e4:	str	w8, [sp, #60]
   268e8:	ldr	w8, [sp, #60]
   268ec:	tbnz	w8, #0, 268f4 <_getopt_internal_r@@Base+0x25c>
   268f0:	b	26908 <_getopt_internal_r@@Base+0x270>
   268f4:	ldur	x8, [x29, #-56]
   268f8:	ldr	w9, [x8]
   268fc:	add	w9, w9, #0x1
   26900:	str	w9, [x8]
   26904:	b	26868 <_getopt_internal_r@@Base+0x1d0>
   26908:	ldur	x8, [x29, #-56]
   2690c:	ldr	w9, [x8]
   26910:	ldur	x8, [x29, #-56]
   26914:	str	w9, [x8, #48]
   26918:	ldur	x8, [x29, #-56]
   2691c:	ldr	w9, [x8]
   26920:	ldur	w10, [x29, #-8]
   26924:	cmp	w9, w10
   26928:	b.eq	269e8 <_getopt_internal_r@@Base+0x350>  // b.none
   2692c:	ldur	x8, [x29, #-16]
   26930:	ldur	x9, [x29, #-56]
   26934:	ldrsw	x9, [x9]
   26938:	mov	x10, #0x8                   	// #8
   2693c:	mul	x9, x10, x9
   26940:	add	x8, x8, x9
   26944:	ldr	x0, [x8]
   26948:	adrp	x1, 45000 <vasnprintf@@Base+0x2e4c>
   2694c:	add	x1, x1, #0x1e9
   26950:	bl	aa00 <strcmp@plt>
   26954:	cbnz	w0, 269e8 <_getopt_internal_r@@Base+0x350>
   26958:	ldur	x8, [x29, #-56]
   2695c:	ldr	w9, [x8]
   26960:	add	w9, w9, #0x1
   26964:	str	w9, [x8]
   26968:	ldur	x8, [x29, #-56]
   2696c:	ldr	w9, [x8, #44]
   26970:	ldur	x8, [x29, #-56]
   26974:	ldr	w10, [x8, #48]
   26978:	cmp	w9, w10
   2697c:	b.eq	269a8 <_getopt_internal_r@@Base+0x310>  // b.none
   26980:	ldur	x8, [x29, #-56]
   26984:	ldr	w9, [x8, #48]
   26988:	ldur	x8, [x29, #-56]
   2698c:	ldr	w10, [x8]
   26990:	cmp	w9, w10
   26994:	b.eq	269a8 <_getopt_internal_r@@Base+0x310>  // b.none
   26998:	ldur	x0, [x29, #-16]
   2699c:	ldur	x1, [x29, #-56]
   269a0:	bl	27110 <_getopt_internal_r@@Base+0xa78>
   269a4:	b	269d0 <_getopt_internal_r@@Base+0x338>
   269a8:	ldur	x8, [x29, #-56]
   269ac:	ldr	w9, [x8, #44]
   269b0:	ldur	x8, [x29, #-56]
   269b4:	ldr	w10, [x8, #48]
   269b8:	cmp	w9, w10
   269bc:	b.ne	269d0 <_getopt_internal_r@@Base+0x338>  // b.any
   269c0:	ldur	x8, [x29, #-56]
   269c4:	ldr	w9, [x8]
   269c8:	ldur	x8, [x29, #-56]
   269cc:	str	w9, [x8, #44]
   269d0:	ldur	w8, [x29, #-8]
   269d4:	ldur	x9, [x29, #-56]
   269d8:	str	w8, [x9, #48]
   269dc:	ldur	w8, [x29, #-8]
   269e0:	ldur	x9, [x29, #-56]
   269e4:	str	w8, [x9]
   269e8:	ldur	x8, [x29, #-56]
   269ec:	ldr	w9, [x8]
   269f0:	ldur	w10, [x29, #-8]
   269f4:	cmp	w9, w10
   269f8:	b.ne	26a30 <_getopt_internal_r@@Base+0x398>  // b.any
   269fc:	ldur	x8, [x29, #-56]
   26a00:	ldr	w9, [x8, #44]
   26a04:	ldur	x8, [x29, #-56]
   26a08:	ldr	w10, [x8, #48]
   26a0c:	cmp	w9, w10
   26a10:	b.eq	26a24 <_getopt_internal_r@@Base+0x38c>  // b.none
   26a14:	ldur	x8, [x29, #-56]
   26a18:	ldr	w9, [x8, #44]
   26a1c:	ldur	x8, [x29, #-56]
   26a20:	str	w9, [x8]
   26a24:	mov	w8, #0xffffffff            	// #-1
   26a28:	stur	w8, [x29, #-4]
   26a2c:	b	27004 <_getopt_internal_r@@Base+0x96c>
   26a30:	ldur	x8, [x29, #-16]
   26a34:	ldur	x9, [x29, #-56]
   26a38:	ldrsw	x9, [x9]
   26a3c:	mov	x10, #0x8                   	// #8
   26a40:	mul	x9, x10, x9
   26a44:	add	x8, x8, x9
   26a48:	ldr	x8, [x8]
   26a4c:	ldrb	w11, [x8]
   26a50:	cmp	w11, #0x2d
   26a54:	b.ne	26a7c <_getopt_internal_r@@Base+0x3e4>  // b.any
   26a58:	ldur	x8, [x29, #-16]
   26a5c:	ldur	x9, [x29, #-56]
   26a60:	ldrsw	x9, [x9]
   26a64:	mov	x10, #0x8                   	// #8
   26a68:	mul	x9, x10, x9
   26a6c:	add	x8, x8, x9
   26a70:	ldr	x8, [x8]
   26a74:	ldrb	w11, [x8, #1]
   26a78:	cbnz	w11, 26ad0 <_getopt_internal_r@@Base+0x438>
   26a7c:	ldur	x8, [x29, #-56]
   26a80:	ldr	w9, [x8, #40]
   26a84:	cbnz	w9, 26a94 <_getopt_internal_r@@Base+0x3fc>
   26a88:	mov	w8, #0xffffffff            	// #-1
   26a8c:	stur	w8, [x29, #-4]
   26a90:	b	27004 <_getopt_internal_r@@Base+0x96c>
   26a94:	ldur	x8, [x29, #-16]
   26a98:	ldur	x9, [x29, #-56]
   26a9c:	ldrsw	x10, [x9]
   26aa0:	mov	w11, w10
   26aa4:	mov	w12, #0x1                   	// #1
   26aa8:	add	w11, w11, #0x1
   26aac:	str	w11, [x9]
   26ab0:	mov	x9, #0x8                   	// #8
   26ab4:	mul	x9, x9, x10
   26ab8:	add	x8, x8, x9
   26abc:	ldr	x8, [x8]
   26ac0:	ldur	x9, [x29, #-56]
   26ac4:	str	x8, [x9, #16]
   26ac8:	stur	w12, [x29, #-4]
   26acc:	b	27004 <_getopt_internal_r@@Base+0x96c>
   26ad0:	ldur	x8, [x29, #-32]
   26ad4:	cbz	x8, 26c38 <_getopt_internal_r@@Base+0x5a0>
   26ad8:	ldur	x8, [x29, #-16]
   26adc:	ldur	x9, [x29, #-56]
   26ae0:	ldrsw	x9, [x9]
   26ae4:	mov	x10, #0x8                   	// #8
   26ae8:	mul	x9, x10, x9
   26aec:	add	x8, x8, x9
   26af0:	ldr	x8, [x8]
   26af4:	ldrb	w11, [x8, #1]
   26af8:	cmp	w11, #0x2d
   26afc:	b.ne	26b64 <_getopt_internal_r@@Base+0x4cc>  // b.any
   26b00:	ldur	x8, [x29, #-16]
   26b04:	ldur	x9, [x29, #-56]
   26b08:	ldrsw	x9, [x9]
   26b0c:	mov	x10, #0x8                   	// #8
   26b10:	mul	x9, x10, x9
   26b14:	add	x8, x8, x9
   26b18:	ldr	x8, [x8]
   26b1c:	add	x8, x8, #0x2
   26b20:	ldur	x9, [x29, #-56]
   26b24:	str	x8, [x9, #32]
   26b28:	ldur	w0, [x29, #-8]
   26b2c:	ldur	x1, [x29, #-16]
   26b30:	ldur	x2, [x29, #-24]
   26b34:	ldur	x3, [x29, #-32]
   26b38:	ldur	x4, [x29, #-40]
   26b3c:	ldur	w5, [x29, #-44]
   26b40:	ldur	x6, [x29, #-56]
   26b44:	ldur	w7, [x29, #-64]
   26b48:	mov	x8, sp
   26b4c:	adrp	x9, 45000 <vasnprintf@@Base+0x2e4c>
   26b50:	add	x9, x9, #0x1e9
   26b54:	str	x9, [x8]
   26b58:	bl	273bc <_getopt_internal_r@@Base+0xd24>
   26b5c:	stur	w0, [x29, #-4]
   26b60:	b	27004 <_getopt_internal_r@@Base+0x96c>
   26b64:	ldur	w8, [x29, #-44]
   26b68:	cbz	w8, 26c38 <_getopt_internal_r@@Base+0x5a0>
   26b6c:	ldur	x8, [x29, #-16]
   26b70:	ldur	x9, [x29, #-56]
   26b74:	ldrsw	x9, [x9]
   26b78:	mov	x10, #0x8                   	// #8
   26b7c:	mul	x9, x10, x9
   26b80:	add	x8, x8, x9
   26b84:	ldr	x8, [x8]
   26b88:	ldrb	w11, [x8, #2]
   26b8c:	cbnz	w11, 26bbc <_getopt_internal_r@@Base+0x524>
   26b90:	ldur	x0, [x29, #-24]
   26b94:	ldur	x8, [x29, #-16]
   26b98:	ldur	x9, [x29, #-56]
   26b9c:	ldrsw	x9, [x9]
   26ba0:	mov	x10, #0x8                   	// #8
   26ba4:	mul	x9, x10, x9
   26ba8:	add	x8, x8, x9
   26bac:	ldr	x8, [x8]
   26bb0:	ldrb	w1, [x8, #1]
   26bb4:	bl	aa80 <strchr@plt>
   26bb8:	cbnz	x0, 26c38 <_getopt_internal_r@@Base+0x5a0>
   26bbc:	ldur	x8, [x29, #-16]
   26bc0:	ldur	x9, [x29, #-56]
   26bc4:	ldrsw	x9, [x9]
   26bc8:	mov	x10, #0x8                   	// #8
   26bcc:	mul	x9, x10, x9
   26bd0:	add	x8, x8, x9
   26bd4:	ldr	x8, [x8]
   26bd8:	add	x8, x8, #0x1
   26bdc:	ldur	x9, [x29, #-56]
   26be0:	str	x8, [x9, #32]
   26be4:	ldur	w0, [x29, #-8]
   26be8:	ldur	x1, [x29, #-16]
   26bec:	ldur	x2, [x29, #-24]
   26bf0:	ldur	x3, [x29, #-32]
   26bf4:	ldur	x4, [x29, #-40]
   26bf8:	ldur	w5, [x29, #-44]
   26bfc:	ldur	x6, [x29, #-56]
   26c00:	ldur	w7, [x29, #-64]
   26c04:	mov	x8, sp
   26c08:	adrp	x9, 45000 <vasnprintf@@Base+0x2e4c>
   26c0c:	add	x9, x9, #0x455
   26c10:	str	x9, [x8]
   26c14:	bl	273bc <_getopt_internal_r@@Base+0xd24>
   26c18:	stur	w0, [x29, #-68]
   26c1c:	ldur	w11, [x29, #-68]
   26c20:	mov	w12, #0xffffffff            	// #-1
   26c24:	cmp	w11, w12
   26c28:	b.eq	26c38 <_getopt_internal_r@@Base+0x5a0>  // b.none
   26c2c:	ldur	w8, [x29, #-68]
   26c30:	stur	w8, [x29, #-4]
   26c34:	b	27004 <_getopt_internal_r@@Base+0x96c>
   26c38:	ldur	x8, [x29, #-16]
   26c3c:	ldur	x9, [x29, #-56]
   26c40:	ldrsw	x9, [x9]
   26c44:	mov	x10, #0x8                   	// #8
   26c48:	mul	x9, x10, x9
   26c4c:	add	x8, x8, x9
   26c50:	ldr	x8, [x8]
   26c54:	add	x8, x8, #0x1
   26c58:	ldur	x9, [x29, #-56]
   26c5c:	str	x8, [x9, #32]
   26c60:	ldur	x8, [x29, #-56]
   26c64:	ldr	x9, [x8, #32]
   26c68:	add	x10, x9, #0x1
   26c6c:	str	x10, [x8, #32]
   26c70:	ldrb	w11, [x9]
   26c74:	sturb	w11, [x29, #-69]
   26c78:	ldur	x0, [x29, #-24]
   26c7c:	ldurb	w1, [x29, #-69]
   26c80:	bl	aa80 <strchr@plt>
   26c84:	str	x0, [sp, #80]
   26c88:	ldur	x8, [x29, #-56]
   26c8c:	ldr	x8, [x8, #32]
   26c90:	ldrb	w11, [x8]
   26c94:	cbnz	w11, 26ca8 <_getopt_internal_r@@Base+0x610>
   26c98:	ldur	x8, [x29, #-56]
   26c9c:	ldr	w9, [x8]
   26ca0:	add	w9, w9, #0x1
   26ca4:	str	w9, [x8]
   26ca8:	ldr	x8, [sp, #80]
   26cac:	cbz	x8, 26cc8 <_getopt_internal_r@@Base+0x630>
   26cb0:	ldurb	w8, [x29, #-69]
   26cb4:	cmp	w8, #0x3a
   26cb8:	b.eq	26cc8 <_getopt_internal_r@@Base+0x630>  // b.none
   26cbc:	ldurb	w8, [x29, #-69]
   26cc0:	cmp	w8, #0x3b
   26cc4:	b.ne	26d28 <_getopt_internal_r@@Base+0x690>  // b.any
   26cc8:	ldur	w8, [x29, #-64]
   26ccc:	cbz	w8, 26d10 <_getopt_internal_r@@Base+0x678>
   26cd0:	ldr	x8, [sp, #72]
   26cd4:	ldr	x0, [x8]
   26cd8:	ldr	x9, [sp, #64]
   26cdc:	str	x0, [sp, #48]
   26ce0:	mov	x0, x9
   26ce4:	adrp	x1, 45000 <vasnprintf@@Base+0x2e4c>
   26ce8:	add	x1, x1, #0x457
   26cec:	bl	b000 <dgettext@plt>
   26cf0:	ldur	x8, [x29, #-16]
   26cf4:	ldr	x2, [x8]
   26cf8:	ldurb	w3, [x29, #-69]
   26cfc:	ldr	x8, [sp, #48]
   26d00:	str	x0, [sp, #40]
   26d04:	mov	x0, x8
   26d08:	ldr	x1, [sp, #40]
   26d0c:	bl	b160 <fprintf@plt>
   26d10:	ldurb	w8, [x29, #-69]
   26d14:	ldur	x9, [x29, #-56]
   26d18:	str	w8, [x9, #8]
   26d1c:	mov	w8, #0x3f                  	// #63
   26d20:	stur	w8, [x29, #-4]
   26d24:	b	27004 <_getopt_internal_r@@Base+0x96c>
   26d28:	ldr	x8, [sp, #80]
   26d2c:	ldrb	w9, [x8]
   26d30:	cmp	w9, #0x57
   26d34:	b.ne	26e8c <_getopt_internal_r@@Base+0x7f4>  // b.any
   26d38:	ldr	x8, [sp, #80]
   26d3c:	ldrb	w9, [x8, #1]
   26d40:	cmp	w9, #0x3b
   26d44:	b.ne	26e8c <_getopt_internal_r@@Base+0x7f4>  // b.any
   26d48:	ldur	x8, [x29, #-32]
   26d4c:	cbz	x8, 26e8c <_getopt_internal_r@@Base+0x7f4>
   26d50:	ldur	x8, [x29, #-56]
   26d54:	ldr	x8, [x8, #32]
   26d58:	ldrb	w9, [x8]
   26d5c:	cbz	w9, 26d74 <_getopt_internal_r@@Base+0x6dc>
   26d60:	ldur	x8, [x29, #-56]
   26d64:	ldr	x8, [x8, #32]
   26d68:	ldur	x9, [x29, #-56]
   26d6c:	str	x8, [x9, #16]
   26d70:	b	26e30 <_getopt_internal_r@@Base+0x798>
   26d74:	ldur	x8, [x29, #-56]
   26d78:	ldr	w9, [x8]
   26d7c:	ldur	w10, [x29, #-8]
   26d80:	cmp	w9, w10
   26d84:	b.ne	26e0c <_getopt_internal_r@@Base+0x774>  // b.any
   26d88:	ldur	w8, [x29, #-64]
   26d8c:	cbz	w8, 26dd0 <_getopt_internal_r@@Base+0x738>
   26d90:	ldr	x8, [sp, #72]
   26d94:	ldr	x0, [x8]
   26d98:	ldr	x9, [sp, #64]
   26d9c:	str	x0, [sp, #32]
   26da0:	mov	x0, x9
   26da4:	adrp	x1, 45000 <vasnprintf@@Base+0x2e4c>
   26da8:	add	x1, x1, #0x473
   26dac:	bl	b000 <dgettext@plt>
   26db0:	ldur	x8, [x29, #-16]
   26db4:	ldr	x2, [x8]
   26db8:	ldurb	w3, [x29, #-69]
   26dbc:	ldr	x8, [sp, #32]
   26dc0:	str	x0, [sp, #24]
   26dc4:	mov	x0, x8
   26dc8:	ldr	x1, [sp, #24]
   26dcc:	bl	b160 <fprintf@plt>
   26dd0:	ldurb	w8, [x29, #-69]
   26dd4:	ldur	x9, [x29, #-56]
   26dd8:	str	w8, [x9, #8]
   26ddc:	ldur	x9, [x29, #-24]
   26de0:	ldrb	w8, [x9]
   26de4:	cmp	w8, #0x3a
   26de8:	b.ne	26df8 <_getopt_internal_r@@Base+0x760>  // b.any
   26dec:	mov	w8, #0x3a                  	// #58
   26df0:	sturb	w8, [x29, #-69]
   26df4:	b	26e00 <_getopt_internal_r@@Base+0x768>
   26df8:	mov	w8, #0x3f                  	// #63
   26dfc:	sturb	w8, [x29, #-69]
   26e00:	ldurb	w8, [x29, #-69]
   26e04:	stur	w8, [x29, #-4]
   26e08:	b	27004 <_getopt_internal_r@@Base+0x96c>
   26e0c:	ldur	x8, [x29, #-16]
   26e10:	ldur	x9, [x29, #-56]
   26e14:	ldrsw	x9, [x9]
   26e18:	mov	x10, #0x8                   	// #8
   26e1c:	mul	x9, x10, x9
   26e20:	add	x8, x8, x9
   26e24:	ldr	x8, [x8]
   26e28:	ldur	x9, [x29, #-56]
   26e2c:	str	x8, [x9, #16]
   26e30:	ldur	x8, [x29, #-56]
   26e34:	ldr	x8, [x8, #16]
   26e38:	ldur	x9, [x29, #-56]
   26e3c:	str	x8, [x9, #32]
   26e40:	ldur	x8, [x29, #-56]
   26e44:	mov	x9, xzr
   26e48:	str	x9, [x8, #16]
   26e4c:	ldur	w0, [x29, #-8]
   26e50:	ldur	x1, [x29, #-16]
   26e54:	ldur	x2, [x29, #-24]
   26e58:	ldur	x3, [x29, #-32]
   26e5c:	ldur	x4, [x29, #-40]
   26e60:	ldur	x6, [x29, #-56]
   26e64:	ldur	w7, [x29, #-64]
   26e68:	mov	w10, wzr
   26e6c:	mov	w5, w10
   26e70:	mov	x8, sp
   26e74:	adrp	x9, 45000 <vasnprintf@@Base+0x2e4c>
   26e78:	add	x9, x9, #0x49c
   26e7c:	str	x9, [x8]
   26e80:	bl	273bc <_getopt_internal_r@@Base+0xd24>
   26e84:	stur	w0, [x29, #-4]
   26e88:	b	27004 <_getopt_internal_r@@Base+0x96c>
   26e8c:	ldr	x8, [sp, #80]
   26e90:	ldrb	w9, [x8, #1]
   26e94:	cmp	w9, #0x3a
   26e98:	b.ne	26ffc <_getopt_internal_r@@Base+0x964>  // b.any
   26e9c:	ldr	x8, [sp, #80]
   26ea0:	ldrb	w9, [x8, #2]
   26ea4:	cmp	w9, #0x3a
   26ea8:	b.ne	26efc <_getopt_internal_r@@Base+0x864>  // b.any
   26eac:	ldur	x8, [x29, #-56]
   26eb0:	ldr	x8, [x8, #32]
   26eb4:	ldrb	w9, [x8]
   26eb8:	cbz	w9, 26ee0 <_getopt_internal_r@@Base+0x848>
   26ebc:	ldur	x8, [x29, #-56]
   26ec0:	ldr	x8, [x8, #32]
   26ec4:	ldur	x9, [x29, #-56]
   26ec8:	str	x8, [x9, #16]
   26ecc:	ldur	x8, [x29, #-56]
   26ed0:	ldr	w10, [x8]
   26ed4:	add	w10, w10, #0x1
   26ed8:	str	w10, [x8]
   26edc:	b	26eec <_getopt_internal_r@@Base+0x854>
   26ee0:	ldur	x8, [x29, #-56]
   26ee4:	mov	x9, xzr
   26ee8:	str	x9, [x8, #16]
   26eec:	ldur	x8, [x29, #-56]
   26ef0:	mov	x9, xzr
   26ef4:	str	x9, [x8, #32]
   26ef8:	b	26ffc <_getopt_internal_r@@Base+0x964>
   26efc:	ldur	x8, [x29, #-56]
   26f00:	ldr	x8, [x8, #32]
   26f04:	ldrb	w9, [x8]
   26f08:	cbz	w9, 26f30 <_getopt_internal_r@@Base+0x898>
   26f0c:	ldur	x8, [x29, #-56]
   26f10:	ldr	x8, [x8, #32]
   26f14:	ldur	x9, [x29, #-56]
   26f18:	str	x8, [x9, #16]
   26f1c:	ldur	x8, [x29, #-56]
   26f20:	ldr	w10, [x8]
   26f24:	add	w10, w10, #0x1
   26f28:	str	w10, [x8]
   26f2c:	b	26ff0 <_getopt_internal_r@@Base+0x958>
   26f30:	ldur	x8, [x29, #-56]
   26f34:	ldr	w9, [x8]
   26f38:	ldur	w10, [x29, #-8]
   26f3c:	cmp	w9, w10
   26f40:	b.ne	26fc0 <_getopt_internal_r@@Base+0x928>  // b.any
   26f44:	ldur	w8, [x29, #-64]
   26f48:	cbz	w8, 26f8c <_getopt_internal_r@@Base+0x8f4>
   26f4c:	ldr	x8, [sp, #72]
   26f50:	ldr	x0, [x8]
   26f54:	ldr	x9, [sp, #64]
   26f58:	str	x0, [sp, #16]
   26f5c:	mov	x0, x9
   26f60:	adrp	x1, 45000 <vasnprintf@@Base+0x2e4c>
   26f64:	add	x1, x1, #0x473
   26f68:	bl	b000 <dgettext@plt>
   26f6c:	ldur	x8, [x29, #-16]
   26f70:	ldr	x2, [x8]
   26f74:	ldurb	w3, [x29, #-69]
   26f78:	ldr	x8, [sp, #16]
   26f7c:	str	x0, [sp, #8]
   26f80:	mov	x0, x8
   26f84:	ldr	x1, [sp, #8]
   26f88:	bl	b160 <fprintf@plt>
   26f8c:	ldurb	w8, [x29, #-69]
   26f90:	ldur	x9, [x29, #-56]
   26f94:	str	w8, [x9, #8]
   26f98:	ldur	x9, [x29, #-24]
   26f9c:	ldrb	w8, [x9]
   26fa0:	cmp	w8, #0x3a
   26fa4:	b.ne	26fb4 <_getopt_internal_r@@Base+0x91c>  // b.any
   26fa8:	mov	w8, #0x3a                  	// #58
   26fac:	sturb	w8, [x29, #-69]
   26fb0:	b	26fbc <_getopt_internal_r@@Base+0x924>
   26fb4:	mov	w8, #0x3f                  	// #63
   26fb8:	sturb	w8, [x29, #-69]
   26fbc:	b	26ff0 <_getopt_internal_r@@Base+0x958>
   26fc0:	ldur	x8, [x29, #-16]
   26fc4:	ldur	x9, [x29, #-56]
   26fc8:	ldrsw	x10, [x9]
   26fcc:	mov	w11, w10
   26fd0:	add	w11, w11, #0x1
   26fd4:	str	w11, [x9]
   26fd8:	mov	x9, #0x8                   	// #8
   26fdc:	mul	x9, x9, x10
   26fe0:	add	x8, x8, x9
   26fe4:	ldr	x8, [x8]
   26fe8:	ldur	x9, [x29, #-56]
   26fec:	str	x8, [x9, #16]
   26ff0:	ldur	x8, [x29, #-56]
   26ff4:	mov	x9, xzr
   26ff8:	str	x9, [x8, #32]
   26ffc:	ldurb	w8, [x29, #-69]
   27000:	stur	w8, [x29, #-4]
   27004:	ldur	w0, [x29, #-4]
   27008:	ldp	x29, x30, [sp, #160]
   2700c:	add	sp, sp, #0xb0
   27010:	ret
   27014:	sub	sp, sp, #0x40
   27018:	stp	x29, x30, [sp, #48]
   2701c:	add	x29, sp, #0x30
   27020:	stur	w0, [x29, #-4]
   27024:	stur	x1, [x29, #-16]
   27028:	str	x2, [sp, #24]
   2702c:	str	x3, [sp, #16]
   27030:	str	w4, [sp, #12]
   27034:	ldr	x8, [sp, #16]
   27038:	ldr	w9, [x8]
   2703c:	cbnz	w9, 2704c <_getopt_internal_r@@Base+0x9b4>
   27040:	ldr	x8, [sp, #16]
   27044:	mov	w9, #0x1                   	// #1
   27048:	str	w9, [x8]
   2704c:	ldr	x8, [sp, #16]
   27050:	ldr	w9, [x8]
   27054:	ldr	x8, [sp, #16]
   27058:	str	w9, [x8, #48]
   2705c:	ldr	x8, [sp, #16]
   27060:	str	w9, [x8, #44]
   27064:	ldr	x8, [sp, #16]
   27068:	mov	x10, xzr
   2706c:	str	x10, [x8, #32]
   27070:	ldr	x8, [sp, #24]
   27074:	ldrb	w9, [x8]
   27078:	cmp	w9, #0x2d
   2707c:	b.ne	2709c <_getopt_internal_r@@Base+0xa04>  // b.any
   27080:	ldr	x8, [sp, #16]
   27084:	mov	w9, #0x2                   	// #2
   27088:	str	w9, [x8, #40]
   2708c:	ldr	x8, [sp, #24]
   27090:	add	x8, x8, #0x1
   27094:	str	x8, [sp, #24]
   27098:	b	270f4 <_getopt_internal_r@@Base+0xa5c>
   2709c:	ldr	x8, [sp, #24]
   270a0:	ldrb	w9, [x8]
   270a4:	cmp	w9, #0x2b
   270a8:	b.ne	270c4 <_getopt_internal_r@@Base+0xa2c>  // b.any
   270ac:	ldr	x8, [sp, #16]
   270b0:	str	wzr, [x8, #40]
   270b4:	ldr	x8, [sp, #24]
   270b8:	add	x8, x8, #0x1
   270bc:	str	x8, [sp, #24]
   270c0:	b	270f4 <_getopt_internal_r@@Base+0xa5c>
   270c4:	ldr	w8, [sp, #12]
   270c8:	cbnz	w8, 270dc <_getopt_internal_r@@Base+0xa44>
   270cc:	adrp	x0, 45000 <vasnprintf@@Base+0x2e4c>
   270d0:	add	x0, x0, #0x4a0
   270d4:	bl	a9f0 <getenv@plt>
   270d8:	cbz	x0, 270e8 <_getopt_internal_r@@Base+0xa50>
   270dc:	ldr	x8, [sp, #16]
   270e0:	str	wzr, [x8, #40]
   270e4:	b	270f4 <_getopt_internal_r@@Base+0xa5c>
   270e8:	ldr	x8, [sp, #16]
   270ec:	mov	w9, #0x1                   	// #1
   270f0:	str	w9, [x8, #40]
   270f4:	ldr	x8, [sp, #16]
   270f8:	mov	w9, #0x1                   	// #1
   270fc:	str	w9, [x8, #24]
   27100:	ldr	x0, [sp, #24]
   27104:	ldp	x29, x30, [sp, #48]
   27108:	add	sp, sp, #0x40
   2710c:	ret
   27110:	sub	sp, sp, #0x40
   27114:	str	x0, [sp, #56]
   27118:	str	x1, [sp, #48]
   2711c:	ldr	x8, [sp, #48]
   27120:	ldr	w9, [x8, #44]
   27124:	str	w9, [sp, #44]
   27128:	ldr	x8, [sp, #48]
   2712c:	ldr	w9, [x8, #48]
   27130:	str	w9, [sp, #40]
   27134:	ldr	x8, [sp, #48]
   27138:	ldr	w9, [x8]
   2713c:	str	w9, [sp, #36]
   27140:	ldr	w8, [sp, #36]
   27144:	ldr	w9, [sp, #40]
   27148:	mov	w10, #0x0                   	// #0
   2714c:	cmp	w8, w9
   27150:	str	w10, [sp, #4]
   27154:	b.le	2716c <_getopt_internal_r@@Base+0xad4>
   27158:	ldr	w8, [sp, #40]
   2715c:	ldr	w9, [sp, #44]
   27160:	cmp	w8, w9
   27164:	cset	w8, gt
   27168:	str	w8, [sp, #4]
   2716c:	ldr	w8, [sp, #4]
   27170:	tbnz	w8, #0, 27178 <_getopt_internal_r@@Base+0xae0>
   27174:	b	27380 <_getopt_internal_r@@Base+0xce8>
   27178:	ldr	w8, [sp, #36]
   2717c:	ldr	w9, [sp, #40]
   27180:	subs	w8, w8, w9
   27184:	ldr	w9, [sp, #40]
   27188:	ldr	w10, [sp, #44]
   2718c:	subs	w9, w9, w10
   27190:	cmp	w8, w9
   27194:	b.le	2729c <_getopt_internal_r@@Base+0xc04>
   27198:	ldr	w8, [sp, #40]
   2719c:	ldr	w9, [sp, #44]
   271a0:	subs	w8, w8, w9
   271a4:	str	w8, [sp, #20]
   271a8:	str	wzr, [sp, #16]
   271ac:	ldr	w8, [sp, #16]
   271b0:	ldr	w9, [sp, #20]
   271b4:	cmp	w8, w9
   271b8:	b.ge	27288 <_getopt_internal_r@@Base+0xbf0>  // b.tcont
   271bc:	ldr	x8, [sp, #56]
   271c0:	ldr	w9, [sp, #44]
   271c4:	ldr	w10, [sp, #16]
   271c8:	add	w9, w9, w10
   271cc:	mov	w0, w9
   271d0:	sxtw	x11, w0
   271d4:	mov	x12, #0x8                   	// #8
   271d8:	mul	x11, x12, x11
   271dc:	add	x8, x8, x11
   271e0:	ldr	x8, [x8]
   271e4:	str	x8, [sp, #24]
   271e8:	ldr	x8, [sp, #56]
   271ec:	ldr	w9, [sp, #36]
   271f0:	ldr	w10, [sp, #40]
   271f4:	ldr	w13, [sp, #44]
   271f8:	subs	w10, w10, w13
   271fc:	subs	w9, w9, w10
   27200:	ldr	w10, [sp, #16]
   27204:	add	w9, w9, w10
   27208:	mov	w0, w9
   2720c:	sxtw	x11, w0
   27210:	mul	x11, x12, x11
   27214:	add	x8, x8, x11
   27218:	ldr	x8, [x8]
   2721c:	ldr	x11, [sp, #56]
   27220:	ldr	w9, [sp, #44]
   27224:	ldr	w10, [sp, #16]
   27228:	add	w9, w9, w10
   2722c:	mov	w0, w9
   27230:	sxtw	x14, w0
   27234:	mul	x14, x12, x14
   27238:	add	x11, x11, x14
   2723c:	str	x8, [x11]
   27240:	ldr	x8, [sp, #24]
   27244:	ldr	x11, [sp, #56]
   27248:	ldr	w9, [sp, #36]
   2724c:	ldr	w10, [sp, #40]
   27250:	ldr	w13, [sp, #44]
   27254:	subs	w10, w10, w13
   27258:	subs	w9, w9, w10
   2725c:	ldr	w10, [sp, #16]
   27260:	add	w9, w9, w10
   27264:	mov	w0, w9
   27268:	sxtw	x14, w0
   2726c:	mul	x12, x12, x14
   27270:	add	x11, x11, x12
   27274:	str	x8, [x11]
   27278:	ldr	w8, [sp, #16]
   2727c:	add	w8, w8, #0x1
   27280:	str	w8, [sp, #16]
   27284:	b	271ac <_getopt_internal_r@@Base+0xb14>
   27288:	ldr	w8, [sp, #20]
   2728c:	ldr	w9, [sp, #36]
   27290:	subs	w8, w9, w8
   27294:	str	w8, [sp, #36]
   27298:	b	2737c <_getopt_internal_r@@Base+0xce4>
   2729c:	ldr	w8, [sp, #36]
   272a0:	ldr	w9, [sp, #40]
   272a4:	subs	w8, w8, w9
   272a8:	str	w8, [sp, #12]
   272ac:	str	wzr, [sp, #8]
   272b0:	ldr	w8, [sp, #8]
   272b4:	ldr	w9, [sp, #12]
   272b8:	cmp	w8, w9
   272bc:	b.ge	2736c <_getopt_internal_r@@Base+0xcd4>  // b.tcont
   272c0:	ldr	x8, [sp, #56]
   272c4:	ldr	w9, [sp, #44]
   272c8:	ldr	w10, [sp, #8]
   272cc:	add	w9, w9, w10
   272d0:	mov	w0, w9
   272d4:	sxtw	x11, w0
   272d8:	mov	x12, #0x8                   	// #8
   272dc:	mul	x11, x12, x11
   272e0:	add	x8, x8, x11
   272e4:	ldr	x8, [x8]
   272e8:	str	x8, [sp, #24]
   272ec:	ldr	x8, [sp, #56]
   272f0:	ldr	w9, [sp, #40]
   272f4:	ldr	w10, [sp, #8]
   272f8:	add	w9, w9, w10
   272fc:	mov	w0, w9
   27300:	sxtw	x11, w0
   27304:	mul	x11, x12, x11
   27308:	add	x8, x8, x11
   2730c:	ldr	x8, [x8]
   27310:	ldr	x11, [sp, #56]
   27314:	ldr	w9, [sp, #44]
   27318:	ldr	w10, [sp, #8]
   2731c:	add	w9, w9, w10
   27320:	mov	w0, w9
   27324:	sxtw	x13, w0
   27328:	mul	x13, x12, x13
   2732c:	add	x11, x11, x13
   27330:	str	x8, [x11]
   27334:	ldr	x8, [sp, #24]
   27338:	ldr	x11, [sp, #56]
   2733c:	ldr	w9, [sp, #40]
   27340:	ldr	w10, [sp, #8]
   27344:	add	w9, w9, w10
   27348:	mov	w0, w9
   2734c:	sxtw	x13, w0
   27350:	mul	x12, x12, x13
   27354:	add	x11, x11, x12
   27358:	str	x8, [x11]
   2735c:	ldr	w8, [sp, #8]
   27360:	add	w8, w8, #0x1
   27364:	str	w8, [sp, #8]
   27368:	b	272b0 <_getopt_internal_r@@Base+0xc18>
   2736c:	ldr	w8, [sp, #12]
   27370:	ldr	w9, [sp, #44]
   27374:	add	w8, w9, w8
   27378:	str	w8, [sp, #44]
   2737c:	b	27140 <_getopt_internal_r@@Base+0xaa8>
   27380:	ldr	x8, [sp, #48]
   27384:	ldr	w9, [x8]
   27388:	ldr	x8, [sp, #48]
   2738c:	ldr	w10, [x8, #48]
   27390:	subs	w9, w9, w10
   27394:	ldr	x8, [sp, #48]
   27398:	ldr	w10, [x8, #44]
   2739c:	add	w9, w10, w9
   273a0:	str	w9, [x8, #44]
   273a4:	ldr	x8, [sp, #48]
   273a8:	ldr	w9, [x8]
   273ac:	ldr	x8, [sp, #48]
   273b0:	str	w9, [x8, #48]
   273b4:	add	sp, sp, #0x40
   273b8:	ret
   273bc:	sub	sp, sp, #0x120
   273c0:	stp	x29, x30, [sp, #256]
   273c4:	str	x28, [sp, #272]
   273c8:	add	x29, sp, #0x100
   273cc:	ldr	x8, [x29, #32]
   273d0:	mov	x9, xzr
   273d4:	adrp	x10, 5f000 <vasnprintf@@Base+0x1ce4c>
   273d8:	ldr	x10, [x10, #3808]
   273dc:	adrp	x11, 44000 <vasnprintf@@Base+0x1e4c>
   273e0:	add	x11, x11, #0xe15
   273e4:	stur	w0, [x29, #-8]
   273e8:	stur	x1, [x29, #-16]
   273ec:	stur	x2, [x29, #-24]
   273f0:	stur	x3, [x29, #-32]
   273f4:	stur	x4, [x29, #-40]
   273f8:	stur	w5, [x29, #-44]
   273fc:	stur	x6, [x29, #-56]
   27400:	stur	w7, [x29, #-60]
   27404:	stur	x8, [x29, #-72]
   27408:	stur	x9, [x29, #-104]
   2740c:	ldur	x8, [x29, #-56]
   27410:	ldr	x8, [x8, #32]
   27414:	stur	x8, [x29, #-80]
   27418:	str	x10, [sp, #112]
   2741c:	str	x11, [sp, #104]
   27420:	ldur	x8, [x29, #-80]
   27424:	ldrb	w9, [x8]
   27428:	mov	w10, #0x0                   	// #0
   2742c:	str	w10, [sp, #100]
   27430:	cbz	w9, 27448 <_getopt_internal_r@@Base+0xdb0>
   27434:	ldur	x8, [x29, #-80]
   27438:	ldrb	w9, [x8]
   2743c:	cmp	w9, #0x3d
   27440:	cset	w9, ne  // ne = any
   27444:	str	w9, [sp, #100]
   27448:	ldr	w8, [sp, #100]
   2744c:	tbnz	w8, #0, 27454 <_getopt_internal_r@@Base+0xdbc>
   27450:	b	27464 <_getopt_internal_r@@Base+0xdcc>
   27454:	ldur	x8, [x29, #-80]
   27458:	add	x8, x8, #0x1
   2745c:	stur	x8, [x29, #-80]
   27460:	b	27420 <_getopt_internal_r@@Base+0xd88>
   27464:	ldur	x8, [x29, #-80]
   27468:	ldur	x9, [x29, #-56]
   2746c:	ldr	x9, [x9, #32]
   27470:	subs	x8, x8, x9
   27474:	stur	x8, [x29, #-88]
   27478:	ldur	x8, [x29, #-32]
   2747c:	stur	x8, [x29, #-96]
   27480:	stur	wzr, [x29, #-108]
   27484:	ldur	x8, [x29, #-96]
   27488:	ldr	x8, [x8]
   2748c:	cbz	x8, 274fc <_getopt_internal_r@@Base+0xe64>
   27490:	ldur	x8, [x29, #-96]
   27494:	ldr	x0, [x8]
   27498:	ldur	x8, [x29, #-56]
   2749c:	ldr	x1, [x8, #32]
   274a0:	ldur	x2, [x29, #-88]
   274a4:	bl	aac0 <strncmp@plt>
   274a8:	cbnz	w0, 274e0 <_getopt_internal_r@@Base+0xe48>
   274ac:	ldur	x8, [x29, #-88]
   274b0:	ldur	x9, [x29, #-96]
   274b4:	ldr	x0, [x9]
   274b8:	str	x8, [sp, #88]
   274bc:	bl	a8e0 <strlen@plt>
   274c0:	ldr	x8, [sp, #88]
   274c4:	cmp	x8, x0
   274c8:	b.ne	274e0 <_getopt_internal_r@@Base+0xe48>  // b.any
   274cc:	ldur	x8, [x29, #-96]
   274d0:	stur	x8, [x29, #-104]
   274d4:	ldur	w9, [x29, #-108]
   274d8:	stur	w9, [x29, #-112]
   274dc:	b	274fc <_getopt_internal_r@@Base+0xe64>
   274e0:	ldur	x8, [x29, #-96]
   274e4:	add	x8, x8, #0x20
   274e8:	stur	x8, [x29, #-96]
   274ec:	ldur	w9, [x29, #-108]
   274f0:	add	w9, w9, #0x1
   274f4:	stur	w9, [x29, #-108]
   274f8:	b	27484 <_getopt_internal_r@@Base+0xdec>
   274fc:	ldur	x8, [x29, #-104]
   27500:	cbnz	x8, 27810 <_getopt_internal_r@@Base+0x1178>
   27504:	mov	x8, xzr
   27508:	stur	x8, [x29, #-120]
   2750c:	stur	wzr, [x29, #-124]
   27510:	str	wzr, [sp, #128]
   27514:	mov	w9, #0xffffffff            	// #-1
   27518:	str	w9, [sp, #124]
   2751c:	ldur	x8, [x29, #-32]
   27520:	stur	x8, [x29, #-96]
   27524:	stur	wzr, [x29, #-112]
   27528:	ldur	x8, [x29, #-96]
   2752c:	ldr	x8, [x8]
   27530:	cbz	x8, 2766c <_getopt_internal_r@@Base+0xfd4>
   27534:	ldur	x8, [x29, #-96]
   27538:	ldr	x0, [x8]
   2753c:	ldur	x8, [x29, #-56]
   27540:	ldr	x1, [x8, #32]
   27544:	ldur	x2, [x29, #-88]
   27548:	bl	aac0 <strncmp@plt>
   2754c:	cbnz	w0, 27650 <_getopt_internal_r@@Base+0xfb8>
   27550:	ldur	x8, [x29, #-104]
   27554:	cbnz	x8, 2756c <_getopt_internal_r@@Base+0xed4>
   27558:	ldur	x8, [x29, #-96]
   2755c:	stur	x8, [x29, #-104]
   27560:	ldur	w9, [x29, #-112]
   27564:	str	w9, [sp, #124]
   27568:	b	27650 <_getopt_internal_r@@Base+0xfb8>
   2756c:	ldur	w8, [x29, #-44]
   27570:	cbnz	w8, 275bc <_getopt_internal_r@@Base+0xf24>
   27574:	ldur	x8, [x29, #-104]
   27578:	ldr	w9, [x8, #8]
   2757c:	ldur	x8, [x29, #-96]
   27580:	ldr	w10, [x8, #8]
   27584:	cmp	w9, w10
   27588:	b.ne	275bc <_getopt_internal_r@@Base+0xf24>  // b.any
   2758c:	ldur	x8, [x29, #-104]
   27590:	ldr	x8, [x8, #16]
   27594:	ldur	x9, [x29, #-96]
   27598:	ldr	x9, [x9, #16]
   2759c:	cmp	x8, x9
   275a0:	b.ne	275bc <_getopt_internal_r@@Base+0xf24>  // b.any
   275a4:	ldur	x8, [x29, #-104]
   275a8:	ldr	w9, [x8, #24]
   275ac:	ldur	x8, [x29, #-96]
   275b0:	ldr	w10, [x8, #24]
   275b4:	cmp	w9, w10
   275b8:	b.eq	27650 <_getopt_internal_r@@Base+0xfb8>  // b.none
   275bc:	ldr	w8, [sp, #128]
   275c0:	cbnz	w8, 27650 <_getopt_internal_r@@Base+0xfb8>
   275c4:	ldur	w8, [x29, #-60]
   275c8:	cbnz	w8, 275d8 <_getopt_internal_r@@Base+0xf40>
   275cc:	mov	w8, #0x1                   	// #1
   275d0:	str	w8, [sp, #128]
   275d4:	b	27634 <_getopt_internal_r@@Base+0xf9c>
   275d8:	ldur	x8, [x29, #-120]
   275dc:	cbnz	x8, 27634 <_getopt_internal_r@@Base+0xf9c>
   275e0:	ldursw	x0, [x29, #-108]
   275e4:	bl	af10 <malloc@plt>
   275e8:	stur	x0, [x29, #-120]
   275ec:	cbnz	x0, 275fc <_getopt_internal_r@@Base+0xf64>
   275f0:	mov	w8, #0x1                   	// #1
   275f4:	str	w8, [sp, #128]
   275f8:	b	27604 <_getopt_internal_r@@Base+0xf6c>
   275fc:	mov	w8, #0x1                   	// #1
   27600:	stur	w8, [x29, #-124]
   27604:	ldur	x8, [x29, #-120]
   27608:	cbz	x8, 27634 <_getopt_internal_r@@Base+0xf9c>
   2760c:	ldur	x0, [x29, #-120]
   27610:	ldursw	x2, [x29, #-108]
   27614:	mov	w8, wzr
   27618:	mov	w1, w8
   2761c:	bl	a970 <memset@plt>
   27620:	ldur	x9, [x29, #-120]
   27624:	ldrsw	x10, [sp, #124]
   27628:	add	x9, x9, x10
   2762c:	mov	w8, #0x1                   	// #1
   27630:	strb	w8, [x9]
   27634:	ldur	x8, [x29, #-120]
   27638:	cbz	x8, 27650 <_getopt_internal_r@@Base+0xfb8>
   2763c:	ldur	x8, [x29, #-120]
   27640:	ldursw	x9, [x29, #-112]
   27644:	add	x8, x8, x9
   27648:	mov	w10, #0x1                   	// #1
   2764c:	strb	w10, [x8]
   27650:	ldur	x8, [x29, #-96]
   27654:	add	x8, x8, #0x20
   27658:	stur	x8, [x29, #-96]
   2765c:	ldur	w9, [x29, #-112]
   27660:	add	w9, w9, #0x1
   27664:	stur	w9, [x29, #-112]
   27668:	b	27528 <_getopt_internal_r@@Base+0xe90>
   2766c:	ldur	x8, [x29, #-120]
   27670:	cbnz	x8, 2767c <_getopt_internal_r@@Base+0xfe4>
   27674:	ldr	w8, [sp, #128]
   27678:	cbz	w8, 27808 <_getopt_internal_r@@Base+0x1170>
   2767c:	ldur	w8, [x29, #-60]
   27680:	cbz	w8, 277b8 <_getopt_internal_r@@Base+0x1120>
   27684:	ldr	w8, [sp, #128]
   27688:	cbz	w8, 276d8 <_getopt_internal_r@@Base+0x1040>
   2768c:	ldr	x8, [sp, #112]
   27690:	ldr	x0, [x8]
   27694:	ldr	x9, [sp, #104]
   27698:	str	x0, [sp, #80]
   2769c:	mov	x0, x9
   276a0:	adrp	x1, 45000 <vasnprintf@@Base+0x2e4c>
   276a4:	add	x1, x1, #0x4b0
   276a8:	bl	b000 <dgettext@plt>
   276ac:	ldur	x8, [x29, #-16]
   276b0:	ldr	x2, [x8]
   276b4:	ldur	x3, [x29, #-72]
   276b8:	ldur	x8, [x29, #-56]
   276bc:	ldr	x4, [x8, #32]
   276c0:	ldr	x8, [sp, #80]
   276c4:	str	x0, [sp, #72]
   276c8:	mov	x0, x8
   276cc:	ldr	x1, [sp, #72]
   276d0:	bl	b160 <fprintf@plt>
   276d4:	b	277b8 <_getopt_internal_r@@Base+0x1120>
   276d8:	ldr	x8, [sp, #112]
   276dc:	ldr	x0, [x8]
   276e0:	bl	afc0 <flockfile@plt>
   276e4:	ldr	x8, [sp, #112]
   276e8:	ldr	x0, [x8]
   276ec:	ldr	x9, [sp, #104]
   276f0:	str	x0, [sp, #64]
   276f4:	mov	x0, x9
   276f8:	adrp	x1, 45000 <vasnprintf@@Base+0x2e4c>
   276fc:	add	x1, x1, #0x4d0
   27700:	bl	b000 <dgettext@plt>
   27704:	ldur	x8, [x29, #-16]
   27708:	ldr	x2, [x8]
   2770c:	ldur	x3, [x29, #-72]
   27710:	ldur	x8, [x29, #-56]
   27714:	ldr	x4, [x8, #32]
   27718:	ldr	x8, [sp, #64]
   2771c:	str	x0, [sp, #56]
   27720:	mov	x0, x8
   27724:	ldr	x1, [sp, #56]
   27728:	bl	b160 <fprintf@plt>
   2772c:	stur	wzr, [x29, #-112]
   27730:	ldur	w8, [x29, #-112]
   27734:	ldur	w9, [x29, #-108]
   27738:	cmp	w8, w9
   2773c:	b.ge	27794 <_getopt_internal_r@@Base+0x10fc>  // b.tcont
   27740:	ldur	x8, [x29, #-120]
   27744:	ldursw	x9, [x29, #-112]
   27748:	add	x8, x8, x9
   2774c:	ldrb	w10, [x8]
   27750:	cbz	w10, 27784 <_getopt_internal_r@@Base+0x10ec>
   27754:	ldr	x8, [sp, #112]
   27758:	ldr	x0, [x8]
   2775c:	ldur	x2, [x29, #-72]
   27760:	ldur	x9, [x29, #-32]
   27764:	ldursw	x10, [x29, #-112]
   27768:	mov	x11, #0x20                  	// #32
   2776c:	mul	x10, x11, x10
   27770:	add	x9, x9, x10
   27774:	ldr	x3, [x9]
   27778:	adrp	x1, 45000 <vasnprintf@@Base+0x2e4c>
   2777c:	add	x1, x1, #0x4ff
   27780:	bl	b160 <fprintf@plt>
   27784:	ldur	w8, [x29, #-112]
   27788:	add	w8, w8, #0x1
   2778c:	stur	w8, [x29, #-112]
   27790:	b	27730 <_getopt_internal_r@@Base+0x1098>
   27794:	ldr	x8, [sp, #112]
   27798:	ldr	x0, [x8]
   2779c:	adrp	x1, 45000 <vasnprintf@@Base+0x2e4c>
   277a0:	add	x1, x1, #0x507
   277a4:	bl	b160 <fprintf@plt>
   277a8:	ldr	x8, [sp, #112]
   277ac:	ldr	x9, [x8]
   277b0:	mov	x0, x9
   277b4:	bl	afe0 <funlockfile@plt>
   277b8:	ldur	w8, [x29, #-124]
   277bc:	cbz	w8, 277c8 <_getopt_internal_r@@Base+0x1130>
   277c0:	ldur	x0, [x29, #-120]
   277c4:	bl	a930 <free@plt>
   277c8:	ldur	x8, [x29, #-56]
   277cc:	ldr	x0, [x8, #32]
   277d0:	bl	a8e0 <strlen@plt>
   277d4:	ldur	x8, [x29, #-56]
   277d8:	ldr	x9, [x8, #32]
   277dc:	add	x9, x9, x0
   277e0:	str	x9, [x8, #32]
   277e4:	ldur	x8, [x29, #-56]
   277e8:	ldr	w10, [x8]
   277ec:	add	w10, w10, #0x1
   277f0:	str	w10, [x8]
   277f4:	ldur	x8, [x29, #-56]
   277f8:	str	wzr, [x8, #8]
   277fc:	mov	w10, #0x3f                  	// #63
   27800:	stur	w10, [x29, #-4]
   27804:	b	27ac4 <_getopt_internal_r@@Base+0x142c>
   27808:	ldr	w8, [sp, #124]
   2780c:	stur	w8, [x29, #-112]
   27810:	ldur	x8, [x29, #-104]
   27814:	cbnz	x8, 278ec <_getopt_internal_r@@Base+0x1254>
   27818:	ldur	w8, [x29, #-44]
   2781c:	cbz	w8, 27860 <_getopt_internal_r@@Base+0x11c8>
   27820:	ldur	x8, [x29, #-16]
   27824:	ldur	x9, [x29, #-56]
   27828:	ldrsw	x9, [x9]
   2782c:	mov	x10, #0x8                   	// #8
   27830:	mul	x9, x10, x9
   27834:	add	x8, x8, x9
   27838:	ldr	x8, [x8]
   2783c:	ldrb	w11, [x8, #1]
   27840:	cmp	w11, #0x2d
   27844:	b.eq	27860 <_getopt_internal_r@@Base+0x11c8>  // b.none
   27848:	ldur	x0, [x29, #-24]
   2784c:	ldur	x8, [x29, #-56]
   27850:	ldr	x8, [x8, #32]
   27854:	ldrb	w1, [x8]
   27858:	bl	aa80 <strchr@plt>
   2785c:	cbnz	x0, 278e0 <_getopt_internal_r@@Base+0x1248>
   27860:	ldur	w8, [x29, #-60]
   27864:	cbz	w8, 278b0 <_getopt_internal_r@@Base+0x1218>
   27868:	ldr	x8, [sp, #112]
   2786c:	ldr	x0, [x8]
   27870:	ldr	x9, [sp, #104]
   27874:	str	x0, [sp, #48]
   27878:	mov	x0, x9
   2787c:	adrp	x1, 45000 <vasnprintf@@Base+0x2e4c>
   27880:	add	x1, x1, #0x509
   27884:	bl	b000 <dgettext@plt>
   27888:	ldur	x8, [x29, #-16]
   2788c:	ldr	x2, [x8]
   27890:	ldur	x3, [x29, #-72]
   27894:	ldur	x8, [x29, #-56]
   27898:	ldr	x4, [x8, #32]
   2789c:	ldr	x8, [sp, #48]
   278a0:	str	x0, [sp, #40]
   278a4:	mov	x0, x8
   278a8:	ldr	x1, [sp, #40]
   278ac:	bl	b160 <fprintf@plt>
   278b0:	ldur	x8, [x29, #-56]
   278b4:	mov	x9, xzr
   278b8:	str	x9, [x8, #32]
   278bc:	ldur	x8, [x29, #-56]
   278c0:	ldr	w10, [x8]
   278c4:	add	w10, w10, #0x1
   278c8:	str	w10, [x8]
   278cc:	ldur	x8, [x29, #-56]
   278d0:	str	wzr, [x8, #8]
   278d4:	mov	w10, #0x3f                  	// #63
   278d8:	stur	w10, [x29, #-4]
   278dc:	b	27ac4 <_getopt_internal_r@@Base+0x142c>
   278e0:	mov	w8, #0xffffffff            	// #-1
   278e4:	stur	w8, [x29, #-4]
   278e8:	b	27ac4 <_getopt_internal_r@@Base+0x142c>
   278ec:	ldur	x8, [x29, #-56]
   278f0:	ldr	w9, [x8]
   278f4:	add	w9, w9, #0x1
   278f8:	str	w9, [x8]
   278fc:	ldur	x8, [x29, #-56]
   27900:	mov	x10, xzr
   27904:	str	x10, [x8, #32]
   27908:	ldur	x8, [x29, #-80]
   2790c:	ldrb	w9, [x8]
   27910:	cbz	w9, 279a4 <_getopt_internal_r@@Base+0x130c>
   27914:	ldur	x8, [x29, #-104]
   27918:	ldr	w9, [x8, #8]
   2791c:	cbz	w9, 27934 <_getopt_internal_r@@Base+0x129c>
   27920:	ldur	x8, [x29, #-80]
   27924:	add	x8, x8, #0x1
   27928:	ldur	x9, [x29, #-56]
   2792c:	str	x8, [x9, #16]
   27930:	b	279a0 <_getopt_internal_r@@Base+0x1308>
   27934:	ldur	w8, [x29, #-60]
   27938:	cbz	w8, 27984 <_getopt_internal_r@@Base+0x12ec>
   2793c:	ldr	x8, [sp, #112]
   27940:	ldr	x0, [x8]
   27944:	ldr	x9, [sp, #104]
   27948:	str	x0, [sp, #32]
   2794c:	mov	x0, x9
   27950:	adrp	x1, 45000 <vasnprintf@@Base+0x2e4c>
   27954:	add	x1, x1, #0x529
   27958:	bl	b000 <dgettext@plt>
   2795c:	ldur	x8, [x29, #-16]
   27960:	ldr	x2, [x8]
   27964:	ldur	x3, [x29, #-72]
   27968:	ldur	x8, [x29, #-104]
   2796c:	ldr	x4, [x8]
   27970:	ldr	x8, [sp, #32]
   27974:	str	x0, [sp, #24]
   27978:	mov	x0, x8
   2797c:	ldr	x1, [sp, #24]
   27980:	bl	b160 <fprintf@plt>
   27984:	ldur	x8, [x29, #-104]
   27988:	ldr	w9, [x8, #24]
   2798c:	ldur	x8, [x29, #-56]
   27990:	str	w9, [x8, #8]
   27994:	mov	w9, #0x3f                  	// #63
   27998:	stur	w9, [x29, #-4]
   2799c:	b	27ac4 <_getopt_internal_r@@Base+0x142c>
   279a0:	b	27a7c <_getopt_internal_r@@Base+0x13e4>
   279a4:	ldur	x8, [x29, #-104]
   279a8:	ldr	w9, [x8, #8]
   279ac:	cmp	w9, #0x1
   279b0:	b.ne	27a7c <_getopt_internal_r@@Base+0x13e4>  // b.any
   279b4:	ldur	x8, [x29, #-56]
   279b8:	ldr	w9, [x8]
   279bc:	ldur	w10, [x29, #-8]
   279c0:	cmp	w9, w10
   279c4:	b.ge	279fc <_getopt_internal_r@@Base+0x1364>  // b.tcont
   279c8:	ldur	x8, [x29, #-16]
   279cc:	ldur	x9, [x29, #-56]
   279d0:	ldrsw	x10, [x9]
   279d4:	mov	w11, w10
   279d8:	add	w11, w11, #0x1
   279dc:	str	w11, [x9]
   279e0:	mov	x9, #0x8                   	// #8
   279e4:	mul	x9, x9, x10
   279e8:	add	x8, x8, x9
   279ec:	ldr	x8, [x8]
   279f0:	ldur	x9, [x29, #-56]
   279f4:	str	x8, [x9, #16]
   279f8:	b	27a7c <_getopt_internal_r@@Base+0x13e4>
   279fc:	ldur	w8, [x29, #-60]
   27a00:	cbz	w8, 27a4c <_getopt_internal_r@@Base+0x13b4>
   27a04:	ldr	x8, [sp, #112]
   27a08:	ldr	x0, [x8]
   27a0c:	ldr	x9, [sp, #104]
   27a10:	str	x0, [sp, #16]
   27a14:	mov	x0, x9
   27a18:	adrp	x1, 45000 <vasnprintf@@Base+0x2e4c>
   27a1c:	add	x1, x1, #0x556
   27a20:	bl	b000 <dgettext@plt>
   27a24:	ldur	x8, [x29, #-16]
   27a28:	ldr	x2, [x8]
   27a2c:	ldur	x3, [x29, #-72]
   27a30:	ldur	x8, [x29, #-104]
   27a34:	ldr	x4, [x8]
   27a38:	ldr	x8, [sp, #16]
   27a3c:	str	x0, [sp, #8]
   27a40:	mov	x0, x8
   27a44:	ldr	x1, [sp, #8]
   27a48:	bl	b160 <fprintf@plt>
   27a4c:	ldur	x8, [x29, #-104]
   27a50:	ldr	w9, [x8, #24]
   27a54:	ldur	x8, [x29, #-56]
   27a58:	str	w9, [x8, #8]
   27a5c:	ldur	x8, [x29, #-24]
   27a60:	ldrb	w9, [x8]
   27a64:	mov	w10, #0x3a                  	// #58
   27a68:	mov	w11, #0x3f                  	// #63
   27a6c:	cmp	w9, #0x3a
   27a70:	csel	w9, w10, w11, eq  // eq = none
   27a74:	stur	w9, [x29, #-4]
   27a78:	b	27ac4 <_getopt_internal_r@@Base+0x142c>
   27a7c:	ldur	x8, [x29, #-40]
   27a80:	cbz	x8, 27a90 <_getopt_internal_r@@Base+0x13f8>
   27a84:	ldur	w8, [x29, #-112]
   27a88:	ldur	x9, [x29, #-40]
   27a8c:	str	w8, [x9]
   27a90:	ldur	x8, [x29, #-104]
   27a94:	ldr	x8, [x8, #16]
   27a98:	cbz	x8, 27ab8 <_getopt_internal_r@@Base+0x1420>
   27a9c:	ldur	x8, [x29, #-104]
   27aa0:	ldr	w9, [x8, #24]
   27aa4:	ldur	x8, [x29, #-104]
   27aa8:	ldr	x8, [x8, #16]
   27aac:	str	w9, [x8]
   27ab0:	stur	wzr, [x29, #-4]
   27ab4:	b	27ac4 <_getopt_internal_r@@Base+0x142c>
   27ab8:	ldur	x8, [x29, #-104]
   27abc:	ldr	w9, [x8, #24]
   27ac0:	stur	w9, [x29, #-4]
   27ac4:	ldur	w0, [x29, #-4]
   27ac8:	ldr	x28, [sp, #272]
   27acc:	ldp	x29, x30, [sp, #256]
   27ad0:	add	sp, sp, #0x120
   27ad4:	ret

0000000000027ad8 <rpl_getopt_internal@@Base>:
   27ad8:	sub	sp, sp, #0x70
   27adc:	stp	x29, x30, [sp, #96]
   27ae0:	add	x29, sp, #0x60
   27ae4:	adrp	x8, 5f000 <vasnprintf@@Base+0x1ce4c>
   27ae8:	ldr	x8, [x8, #4016]
   27aec:	adrp	x9, 61000 <gl_rbtree_list_implementation@@Base+0x1468>
   27af0:	add	x9, x9, #0x600
   27af4:	adrp	x10, 5f000 <vasnprintf@@Base+0x1ce4c>
   27af8:	ldr	x10, [x10, #4024]
   27afc:	adrp	x11, 5f000 <vasnprintf@@Base+0x1ce4c>
   27b00:	ldr	x11, [x11, #4032]
   27b04:	adrp	x12, 5f000 <vasnprintf@@Base+0x1ce4c>
   27b08:	ldr	x12, [x12, #4040]
   27b0c:	stur	w0, [x29, #-4]
   27b10:	stur	x1, [x29, #-16]
   27b14:	stur	x2, [x29, #-24]
   27b18:	stur	x3, [x29, #-32]
   27b1c:	stur	x4, [x29, #-40]
   27b20:	stur	w5, [x29, #-44]
   27b24:	str	w6, [sp, #48]
   27b28:	ldr	w13, [x8]
   27b2c:	str	w13, [x9]
   27b30:	ldr	w13, [x10]
   27b34:	str	w13, [x9, #4]
   27b38:	ldur	w0, [x29, #-4]
   27b3c:	ldur	x1, [x29, #-16]
   27b40:	ldur	x2, [x29, #-24]
   27b44:	ldur	x3, [x29, #-32]
   27b48:	ldur	x4, [x29, #-40]
   27b4c:	ldur	w5, [x29, #-44]
   27b50:	ldr	w7, [sp, #48]
   27b54:	mov	x6, x9
   27b58:	str	x8, [sp, #32]
   27b5c:	str	x9, [sp, #24]
   27b60:	str	x11, [sp, #16]
   27b64:	str	x12, [sp, #8]
   27b68:	bl	b750 <_getopt_internal_r@plt>
   27b6c:	str	w0, [sp, #44]
   27b70:	ldr	x8, [sp, #24]
   27b74:	ldr	w13, [x8]
   27b78:	ldr	x9, [sp, #32]
   27b7c:	str	w13, [x9]
   27b80:	ldr	x10, [x8, #16]
   27b84:	ldr	x11, [sp, #16]
   27b88:	str	x10, [x11]
   27b8c:	ldr	w13, [x8, #8]
   27b90:	ldr	x10, [sp, #8]
   27b94:	str	w13, [x10]
   27b98:	ldr	w0, [sp, #44]
   27b9c:	ldp	x29, x30, [sp, #96]
   27ba0:	add	sp, sp, #0x70
   27ba4:	ret

0000000000027ba8 <rpl_getopt@@Base>:
   27ba8:	sub	sp, sp, #0x30
   27bac:	stp	x29, x30, [sp, #32]
   27bb0:	add	x29, sp, #0x20
   27bb4:	mov	x8, xzr
   27bb8:	mov	x3, x8
   27bbc:	mov	w9, wzr
   27bc0:	mov	w6, #0x1                   	// #1
   27bc4:	stur	w0, [x29, #-4]
   27bc8:	str	x1, [sp, #16]
   27bcc:	str	x2, [sp, #8]
   27bd0:	ldur	w0, [x29, #-4]
   27bd4:	ldr	x1, [sp, #16]
   27bd8:	ldr	x2, [sp, #8]
   27bdc:	mov	x4, x8
   27be0:	mov	w5, w9
   27be4:	bl	b760 <rpl_getopt_internal@plt>
   27be8:	ldp	x29, x30, [sp, #32]
   27bec:	add	sp, sp, #0x30
   27bf0:	ret

0000000000027bf4 <rpl_getopt_long@@Base>:
   27bf4:	sub	sp, sp, #0x40
   27bf8:	stp	x29, x30, [sp, #48]
   27bfc:	add	x29, sp, #0x30
   27c00:	mov	w8, wzr
   27c04:	stur	w0, [x29, #-4]
   27c08:	stur	x1, [x29, #-16]
   27c0c:	str	x2, [sp, #24]
   27c10:	str	x3, [sp, #16]
   27c14:	str	x4, [sp, #8]
   27c18:	ldur	w0, [x29, #-4]
   27c1c:	ldur	x1, [x29, #-16]
   27c20:	ldr	x2, [sp, #24]
   27c24:	ldr	x3, [sp, #16]
   27c28:	ldr	x4, [sp, #8]
   27c2c:	mov	w5, w8
   27c30:	mov	w6, w8
   27c34:	bl	b760 <rpl_getopt_internal@plt>
   27c38:	ldp	x29, x30, [sp, #48]
   27c3c:	add	sp, sp, #0x40
   27c40:	ret

0000000000027c44 <_getopt_long_r@@Base>:
   27c44:	sub	sp, sp, #0x40
   27c48:	stp	x29, x30, [sp, #48]
   27c4c:	add	x29, sp, #0x30
   27c50:	mov	w8, wzr
   27c54:	stur	w0, [x29, #-4]
   27c58:	stur	x1, [x29, #-16]
   27c5c:	str	x2, [sp, #24]
   27c60:	str	x3, [sp, #16]
   27c64:	str	x4, [sp, #8]
   27c68:	str	x5, [sp]
   27c6c:	ldur	w0, [x29, #-4]
   27c70:	ldur	x1, [x29, #-16]
   27c74:	ldr	x2, [sp, #24]
   27c78:	ldr	x3, [sp, #16]
   27c7c:	ldr	x4, [sp, #8]
   27c80:	ldr	x6, [sp]
   27c84:	mov	w5, w8
   27c88:	mov	w7, w8
   27c8c:	bl	b750 <_getopt_internal_r@plt>
   27c90:	ldp	x29, x30, [sp, #48]
   27c94:	add	sp, sp, #0x40
   27c98:	ret

0000000000027c9c <rpl_getopt_long_only@@Base>:
   27c9c:	sub	sp, sp, #0x40
   27ca0:	stp	x29, x30, [sp, #48]
   27ca4:	add	x29, sp, #0x30
   27ca8:	mov	w5, #0x1                   	// #1
   27cac:	mov	w8, wzr
   27cb0:	stur	w0, [x29, #-4]
   27cb4:	stur	x1, [x29, #-16]
   27cb8:	str	x2, [sp, #24]
   27cbc:	str	x3, [sp, #16]
   27cc0:	str	x4, [sp, #8]
   27cc4:	ldur	w0, [x29, #-4]
   27cc8:	ldur	x1, [x29, #-16]
   27ccc:	ldr	x2, [sp, #24]
   27cd0:	ldr	x3, [sp, #16]
   27cd4:	ldr	x4, [sp, #8]
   27cd8:	mov	w6, w8
   27cdc:	bl	b760 <rpl_getopt_internal@plt>
   27ce0:	ldp	x29, x30, [sp, #48]
   27ce4:	add	sp, sp, #0x40
   27ce8:	ret

0000000000027cec <_getopt_long_only_r@@Base>:
   27cec:	sub	sp, sp, #0x40
   27cf0:	stp	x29, x30, [sp, #48]
   27cf4:	add	x29, sp, #0x30
   27cf8:	mov	w8, #0x1                   	// #1
   27cfc:	mov	w9, wzr
   27d00:	stur	w0, [x29, #-4]
   27d04:	stur	x1, [x29, #-16]
   27d08:	str	x2, [sp, #24]
   27d0c:	str	x3, [sp, #16]
   27d10:	str	x4, [sp, #8]
   27d14:	str	x5, [sp]
   27d18:	ldur	w0, [x29, #-4]
   27d1c:	ldur	x1, [x29, #-16]
   27d20:	ldr	x2, [sp, #24]
   27d24:	ldr	x3, [sp, #16]
   27d28:	ldr	x4, [sp, #8]
   27d2c:	ldr	x6, [sp]
   27d30:	mov	w5, w8
   27d34:	mov	w7, w9
   27d38:	bl	b750 <_getopt_internal_r@plt>
   27d3c:	ldp	x29, x30, [sp, #48]
   27d40:	add	sp, sp, #0x40
   27d44:	ret

0000000000027d48 <rpl_ioctl@@Base>:
   27d48:	sub	sp, sp, #0x120
   27d4c:	stp	x29, x30, [sp, #256]
   27d50:	str	x28, [sp, #272]
   27d54:	add	x29, sp, #0x100
   27d58:	str	q7, [sp, #144]
   27d5c:	str	q6, [sp, #128]
   27d60:	str	q5, [sp, #112]
   27d64:	str	q4, [sp, #96]
   27d68:	str	q3, [sp, #80]
   27d6c:	str	q2, [sp, #64]
   27d70:	str	q1, [sp, #48]
   27d74:	str	q0, [sp, #32]
   27d78:	stur	x7, [x29, #-56]
   27d7c:	stur	x6, [x29, #-64]
   27d80:	stur	x5, [x29, #-72]
   27d84:	stur	x4, [x29, #-80]
   27d88:	stur	x3, [x29, #-88]
   27d8c:	stur	x2, [x29, #-96]
   27d90:	stur	w0, [x29, #-4]
   27d94:	stur	w1, [x29, #-8]
   27d98:	mov	w8, #0xffffff80            	// #-128
   27d9c:	stur	w8, [x29, #-20]
   27da0:	mov	w8, #0xffffffd0            	// #-48
   27da4:	stur	w8, [x29, #-24]
   27da8:	add	x9, sp, #0x20
   27dac:	add	x9, x9, #0x80
   27db0:	stur	x9, [x29, #-32]
   27db4:	sub	x9, x29, #0x60
   27db8:	add	x9, x9, #0x30
   27dbc:	stur	x9, [x29, #-40]
   27dc0:	add	x9, x29, #0x20
   27dc4:	stur	x9, [x29, #-48]
   27dc8:	sub	x9, x29, #0x30
   27dcc:	add	x9, x9, #0x18
   27dd0:	ldur	w8, [x29, #-24]
   27dd4:	mov	w10, w8
   27dd8:	str	x9, [sp, #24]
   27ddc:	str	w10, [sp, #20]
   27de0:	tbz	w8, #31, 27e18 <rpl_ioctl@@Base+0xd0>
   27de4:	b	27de8 <rpl_ioctl@@Base+0xa0>
   27de8:	ldr	w8, [sp, #20]
   27dec:	add	w9, w8, #0x8
   27df0:	ldr	x10, [sp, #24]
   27df4:	str	w9, [x10]
   27df8:	subs	w9, w9, #0x0
   27dfc:	b.gt	27e18 <rpl_ioctl@@Base+0xd0>
   27e00:	b	27e04 <rpl_ioctl@@Base+0xbc>
   27e04:	ldur	x8, [x29, #-40]
   27e08:	ldr	w9, [sp, #20]
   27e0c:	add	x8, x8, w9, sxtw
   27e10:	str	x8, [sp, #8]
   27e14:	b	27e2c <rpl_ioctl@@Base+0xe4>
   27e18:	ldur	x8, [x29, #-48]
   27e1c:	add	x9, x8, #0x8
   27e20:	stur	x9, [x29, #-48]
   27e24:	str	x8, [sp, #8]
   27e28:	b	27e2c <rpl_ioctl@@Base+0xe4>
   27e2c:	ldr	x8, [sp, #8]
   27e30:	ldr	x8, [x8]
   27e34:	stur	x8, [x29, #-16]
   27e38:	ldur	w0, [x29, #-4]
   27e3c:	ldur	w9, [x29, #-8]
   27e40:	mov	w1, w9
   27e44:	ldur	x2, [x29, #-16]
   27e48:	bl	b770 <ioctl@plt>
   27e4c:	ldr	x28, [sp, #272]
   27e50:	ldp	x29, x30, [sp, #256]
   27e54:	add	sp, sp, #0x120
   27e58:	ret

0000000000027e5c <rpl_mbrtowc@@Base>:
   27e5c:	sub	sp, sp, #0x50
   27e60:	stp	x29, x30, [sp, #64]
   27e64:	add	x29, sp, #0x40
   27e68:	stur	x0, [x29, #-16]
   27e6c:	stur	x1, [x29, #-24]
   27e70:	str	x2, [sp, #32]
   27e74:	str	x3, [sp, #24]
   27e78:	ldur	x8, [x29, #-16]
   27e7c:	cbnz	x8, 27e88 <rpl_mbrtowc@@Base+0x2c>
   27e80:	add	x8, sp, #0xc
   27e84:	stur	x8, [x29, #-16]
   27e88:	ldur	x0, [x29, #-16]
   27e8c:	ldur	x1, [x29, #-24]
   27e90:	ldr	x2, [sp, #32]
   27e94:	ldr	x3, [sp, #24]
   27e98:	bl	b780 <mbrtowc@plt>
   27e9c:	str	x0, [sp, #16]
   27ea0:	ldr	x8, [sp, #16]
   27ea4:	mov	x9, #0xfffffffffffffffe    	// #-2
   27ea8:	cmp	x9, x8
   27eac:	b.hi	27eec <rpl_mbrtowc@@Base+0x90>  // b.pmore
   27eb0:	ldr	x8, [sp, #32]
   27eb4:	cbz	x8, 27eec <rpl_mbrtowc@@Base+0x90>
   27eb8:	mov	w8, wzr
   27ebc:	mov	w0, w8
   27ec0:	bl	b790 <hard_locale@plt>
   27ec4:	tbnz	w0, #0, 27eec <rpl_mbrtowc@@Base+0x90>
   27ec8:	ldur	x8, [x29, #-24]
   27ecc:	ldrb	w9, [x8]
   27ed0:	strb	w9, [sp, #11]
   27ed4:	ldrb	w9, [sp, #11]
   27ed8:	ldur	x8, [x29, #-16]
   27edc:	str	w9, [x8]
   27ee0:	mov	x8, #0x1                   	// #1
   27ee4:	stur	x8, [x29, #-8]
   27ee8:	b	27ef4 <rpl_mbrtowc@@Base+0x98>
   27eec:	ldr	x8, [sp, #16]
   27ef0:	stur	x8, [x29, #-8]
   27ef4:	ldur	x0, [x29, #-8]
   27ef8:	ldp	x29, x30, [sp, #64]
   27efc:	add	sp, sp, #0x50
   27f00:	ret

0000000000027f04 <rpl_nanosleep@@Base>:
   27f04:	sub	sp, sp, #0x60
   27f08:	stp	x29, x30, [sp, #80]
   27f0c:	add	x29, sp, #0x50
   27f10:	stur	x0, [x29, #-16]
   27f14:	stur	x1, [x29, #-24]
   27f18:	ldur	x8, [x29, #-16]
   27f1c:	ldr	x8, [x8, #8]
   27f20:	cmp	x8, #0x0
   27f24:	cset	w9, lt  // lt = tstop
   27f28:	tbnz	w9, #0, 27f44 <rpl_nanosleep@@Base+0x40>
   27f2c:	ldur	x8, [x29, #-16]
   27f30:	ldr	x8, [x8, #8]
   27f34:	mov	x9, #0xca00                	// #51712
   27f38:	movk	x9, #0x3b9a, lsl #16
   27f3c:	cmp	x9, x8
   27f40:	b.gt	27f5c <rpl_nanosleep@@Base+0x58>
   27f44:	bl	aa20 <__errno_location@plt>
   27f48:	mov	w8, #0x16                  	// #22
   27f4c:	str	w8, [x0]
   27f50:	mov	w8, #0xffffffff            	// #-1
   27f54:	stur	w8, [x29, #-4]
   27f58:	b	28014 <rpl_nanosleep@@Base+0x110>
   27f5c:	mov	x8, #0xa400                	// #41984
   27f60:	movk	x8, #0x1f, lsl #16
   27f64:	stur	x8, [x29, #-32]
   27f68:	ldur	x8, [x29, #-16]
   27f6c:	ldr	x8, [x8]
   27f70:	str	x8, [sp, #40]
   27f74:	ldur	x8, [x29, #-16]
   27f78:	ldr	x8, [x8, #8]
   27f7c:	str	x8, [sp, #32]
   27f80:	ldr	x8, [sp, #40]
   27f84:	mov	x9, #0xa400                	// #41984
   27f88:	movk	x9, #0x1f, lsl #16
   27f8c:	cmp	x9, x8
   27f90:	b.ge	27ffc <rpl_nanosleep@@Base+0xf8>  // b.tcont
   27f94:	add	x0, sp, #0x18
   27f98:	mov	x8, #0xa400                	// #41984
   27f9c:	movk	x8, #0x1f, lsl #16
   27fa0:	str	x8, [sp, #24]
   27fa4:	ldur	x1, [x29, #-24]
   27fa8:	str	x8, [sp, #8]
   27fac:	bl	b7a0 <nanosleep@plt>
   27fb0:	str	w0, [sp, #20]
   27fb4:	ldr	x8, [sp, #40]
   27fb8:	ldr	x9, [sp, #8]
   27fbc:	subs	x8, x8, x9
   27fc0:	str	x8, [sp, #40]
   27fc4:	ldr	w10, [sp, #20]
   27fc8:	cbz	w10, 27ff4 <rpl_nanosleep@@Base+0xf0>
   27fcc:	ldur	x8, [x29, #-24]
   27fd0:	cbz	x8, 27fe8 <rpl_nanosleep@@Base+0xe4>
   27fd4:	ldr	x8, [sp, #40]
   27fd8:	ldur	x9, [x29, #-24]
   27fdc:	ldr	x10, [x9]
   27fe0:	add	x8, x10, x8
   27fe4:	str	x8, [x9]
   27fe8:	ldr	w8, [sp, #20]
   27fec:	stur	w8, [x29, #-4]
   27ff0:	b	28014 <rpl_nanosleep@@Base+0x110>
   27ff4:	str	xzr, [sp, #32]
   27ff8:	b	27f80 <rpl_nanosleep@@Base+0x7c>
   27ffc:	ldr	x8, [sp, #40]
   28000:	add	x0, sp, #0x18
   28004:	str	x8, [sp, #24]
   28008:	ldur	x1, [x29, #-24]
   2800c:	bl	b7a0 <nanosleep@plt>
   28010:	stur	w0, [x29, #-4]
   28014:	ldur	w0, [x29, #-4]
   28018:	ldp	x29, x30, [sp, #80]
   2801c:	add	sp, sp, #0x60
   28020:	ret

0000000000028024 <openat_proc_name@@Base>:
   28024:	sub	sp, sp, #0x80
   28028:	stp	x29, x30, [sp, #112]
   2802c:	add	x29, sp, #0x70
   28030:	adrp	x8, 61000 <gl_rbtree_list_implementation@@Base+0x1468>
   28034:	add	x8, x8, #0x638
   28038:	stur	x0, [x29, #-16]
   2803c:	stur	w1, [x29, #-20]
   28040:	stur	x2, [x29, #-32]
   28044:	ldur	x9, [x29, #-16]
   28048:	stur	x9, [x29, #-40]
   2804c:	ldur	x9, [x29, #-32]
   28050:	ldrb	w10, [x9]
   28054:	str	x8, [sp, #16]
   28058:	cbnz	w10, 28074 <openat_proc_name@@Base+0x50>
   2805c:	ldur	x8, [x29, #-16]
   28060:	mov	w9, #0x0                   	// #0
   28064:	strb	w9, [x8]
   28068:	ldur	x8, [x29, #-16]
   2806c:	stur	x8, [x29, #-8]
   28070:	b	28198 <openat_proc_name@@Base+0x174>
   28074:	ldr	x8, [sp, #16]
   28078:	ldr	w9, [x8]
   2807c:	cbnz	w9, 28104 <openat_proc_name@@Base+0xe0>
   28080:	adrp	x0, 45000 <vasnprintf@@Base+0x2e4c>
   28084:	add	x0, x0, #0x57e
   28088:	mov	w1, #0x4900                	// #18688
   2808c:	bl	ac00 <open@plt>
   28090:	stur	w0, [x29, #-48]
   28094:	ldur	w8, [x29, #-48]
   28098:	cmp	w8, #0x0
   2809c:	cset	w8, ge  // ge = tcont
   280a0:	tbnz	w8, #0, 280b4 <openat_proc_name@@Base+0x90>
   280a4:	mov	w8, #0xffffffff            	// #-1
   280a8:	ldr	x9, [sp, #16]
   280ac:	str	w8, [x9]
   280b0:	b	28104 <openat_proc_name@@Base+0xe0>
   280b4:	ldur	w2, [x29, #-48]
   280b8:	add	x8, sp, #0x20
   280bc:	mov	x0, x8
   280c0:	adrp	x1, 45000 <vasnprintf@@Base+0x2e4c>
   280c4:	add	x1, x1, #0x58c
   280c8:	str	x8, [sp, #8]
   280cc:	bl	b7b0 <sprintf@plt>
   280d0:	ldr	x8, [sp, #8]
   280d4:	mov	x0, x8
   280d8:	mov	w9, wzr
   280dc:	mov	w1, w9
   280e0:	bl	ae00 <access@plt>
   280e4:	mov	w9, #0x1                   	// #1
   280e8:	mov	w10, #0xffffffff            	// #-1
   280ec:	cmp	w0, #0x0
   280f0:	csel	w9, w10, w9, ne  // ne = any
   280f4:	ldr	x8, [sp, #16]
   280f8:	str	w9, [x8]
   280fc:	ldur	w0, [x29, #-48]
   28100:	bl	ac30 <close@plt>
   28104:	ldr	x8, [sp, #16]
   28108:	ldr	w9, [x8]
   2810c:	cmp	w9, #0x0
   28110:	cset	w9, ge  // ge = tcont
   28114:	tbnz	w9, #0, 28124 <openat_proc_name@@Base+0x100>
   28118:	mov	x8, xzr
   2811c:	stur	x8, [x29, #-8]
   28120:	b	28198 <openat_proc_name@@Base+0x174>
   28124:	ldur	x0, [x29, #-32]
   28128:	bl	a8e0 <strlen@plt>
   2812c:	add	x8, x0, #0x1b
   28130:	str	x8, [sp, #24]
   28134:	ldr	x8, [sp, #24]
   28138:	mov	x9, #0xfc0                 	// #4032
   2813c:	cmp	x9, x8
   28140:	b.cs	28164 <openat_proc_name@@Base+0x140>  // b.hs, b.nlast
   28144:	ldr	x0, [sp, #24]
   28148:	bl	af10 <malloc@plt>
   2814c:	stur	x0, [x29, #-40]
   28150:	ldur	x8, [x29, #-40]
   28154:	cbnz	x8, 28164 <openat_proc_name@@Base+0x140>
   28158:	mov	x8, xzr
   2815c:	stur	x8, [x29, #-8]
   28160:	b	28198 <openat_proc_name@@Base+0x174>
   28164:	ldur	x0, [x29, #-40]
   28168:	ldur	w2, [x29, #-20]
   2816c:	adrp	x1, 45000 <vasnprintf@@Base+0x2e4c>
   28170:	add	x1, x1, #0x5a3
   28174:	bl	b7b0 <sprintf@plt>
   28178:	stur	w0, [x29, #-44]
   2817c:	ldur	x8, [x29, #-40]
   28180:	ldursw	x9, [x29, #-44]
   28184:	add	x0, x8, x9
   28188:	ldur	x1, [x29, #-32]
   2818c:	bl	a900 <strcpy@plt>
   28190:	ldur	x8, [x29, #-40]
   28194:	stur	x8, [x29, #-8]
   28198:	ldur	x0, [x29, #-8]
   2819c:	ldp	x29, x30, [sp, #112]
   281a0:	add	sp, sp, #0x80
   281a4:	ret

00000000000281a8 <printf_fetchargs@@Base>:
   281a8:	sub	sp, sp, #0x1a0
   281ac:	str	x29, [sp, #400]
   281b0:	str	x1, [sp, #384]
   281b4:	str	xzr, [sp, #376]
   281b8:	ldr	x8, [sp, #384]
   281bc:	ldr	x8, [x8, #8]
   281c0:	str	x8, [sp, #368]
   281c4:	str	x0, [sp, #360]
   281c8:	ldr	x8, [sp, #376]
   281cc:	ldr	x9, [sp, #384]
   281d0:	ldr	x9, [x9]
   281d4:	cmp	x8, x9
   281d8:	b.cs	28ccc <printf_fetchargs@@Base+0xb24>  // b.hs, b.nlast
   281dc:	ldr	x8, [sp, #368]
   281e0:	ldr	w9, [x8]
   281e4:	subs	w9, w9, #0x1
   281e8:	mov	w8, w9
   281ec:	ubfx	x8, x8, #0, #32
   281f0:	cmp	x8, #0x15
   281f4:	str	x8, [sp, #352]
   281f8:	b.hi	28ca4 <printf_fetchargs@@Base+0xafc>  // b.pmore
   281fc:	adrp	x8, 46000 <vasnprintf@@Base+0x3e4c>
   28200:	add	x8, x8, #0xfbc
   28204:	ldr	x11, [sp, #352]
   28208:	ldrsw	x10, [x8, x11, lsl #2]
   2820c:	add	x9, x8, x10
   28210:	br	x9
   28214:	ldr	x8, [sp, #360]
   28218:	ldrsw	x9, [x8, #24]
   2821c:	mov	w10, w9
   28220:	cmp	w10, #0x0
   28224:	cset	w10, ge  // ge = tcont
   28228:	str	x9, [sp, #344]
   2822c:	tbnz	w10, #0, 28264 <printf_fetchargs@@Base+0xbc>
   28230:	ldr	x8, [sp, #344]
   28234:	add	w8, w8, #0x8
   28238:	ldr	x9, [sp, #360]
   2823c:	str	w8, [x9, #24]
   28240:	cmp	w8, #0x0
   28244:	cset	w8, gt
   28248:	tbnz	w8, #0, 28264 <printf_fetchargs@@Base+0xbc>
   2824c:	ldr	x8, [sp, #360]
   28250:	ldr	x9, [x8, #8]
   28254:	ldr	x10, [sp, #344]
   28258:	add	x9, x9, x10
   2825c:	str	x9, [sp, #336]
   28260:	b	28278 <printf_fetchargs@@Base+0xd0>
   28264:	ldr	x8, [sp, #360]
   28268:	ldr	x9, [x8]
   2826c:	add	x10, x9, #0x8
   28270:	str	x10, [x8]
   28274:	str	x9, [sp, #336]
   28278:	ldr	x8, [sp, #336]
   2827c:	ldr	w9, [x8]
   28280:	ldr	x8, [sp, #368]
   28284:	strb	w9, [x8, #16]
   28288:	b	28cb0 <printf_fetchargs@@Base+0xb08>
   2828c:	ldr	x8, [sp, #360]
   28290:	ldrsw	x9, [x8, #24]
   28294:	mov	w10, w9
   28298:	cmp	w10, #0x0
   2829c:	cset	w10, ge  // ge = tcont
   282a0:	str	x9, [sp, #328]
   282a4:	tbnz	w10, #0, 282dc <printf_fetchargs@@Base+0x134>
   282a8:	ldr	x8, [sp, #328]
   282ac:	add	w8, w8, #0x8
   282b0:	ldr	x9, [sp, #360]
   282b4:	str	w8, [x9, #24]
   282b8:	cmp	w8, #0x0
   282bc:	cset	w8, gt
   282c0:	tbnz	w8, #0, 282dc <printf_fetchargs@@Base+0x134>
   282c4:	ldr	x8, [sp, #360]
   282c8:	ldr	x9, [x8, #8]
   282cc:	ldr	x10, [sp, #328]
   282d0:	add	x9, x9, x10
   282d4:	str	x9, [sp, #320]
   282d8:	b	282f0 <printf_fetchargs@@Base+0x148>
   282dc:	ldr	x8, [sp, #360]
   282e0:	ldr	x9, [x8]
   282e4:	add	x10, x9, #0x8
   282e8:	str	x10, [x8]
   282ec:	str	x9, [sp, #320]
   282f0:	ldr	x8, [sp, #320]
   282f4:	ldr	w9, [x8]
   282f8:	ldr	x8, [sp, #368]
   282fc:	strb	w9, [x8, #16]
   28300:	b	28cb0 <printf_fetchargs@@Base+0xb08>
   28304:	ldr	x8, [sp, #360]
   28308:	ldrsw	x9, [x8, #24]
   2830c:	mov	w10, w9
   28310:	cmp	w10, #0x0
   28314:	cset	w10, ge  // ge = tcont
   28318:	str	x9, [sp, #312]
   2831c:	tbnz	w10, #0, 28354 <printf_fetchargs@@Base+0x1ac>
   28320:	ldr	x8, [sp, #312]
   28324:	add	w8, w8, #0x8
   28328:	ldr	x9, [sp, #360]
   2832c:	str	w8, [x9, #24]
   28330:	cmp	w8, #0x0
   28334:	cset	w8, gt
   28338:	tbnz	w8, #0, 28354 <printf_fetchargs@@Base+0x1ac>
   2833c:	ldr	x8, [sp, #360]
   28340:	ldr	x9, [x8, #8]
   28344:	ldr	x10, [sp, #312]
   28348:	add	x9, x9, x10
   2834c:	str	x9, [sp, #304]
   28350:	b	28368 <printf_fetchargs@@Base+0x1c0>
   28354:	ldr	x8, [sp, #360]
   28358:	ldr	x9, [x8]
   2835c:	add	x10, x9, #0x8
   28360:	str	x10, [x8]
   28364:	str	x9, [sp, #304]
   28368:	ldr	x8, [sp, #304]
   2836c:	ldr	w9, [x8]
   28370:	ldr	x8, [sp, #368]
   28374:	strh	w9, [x8, #16]
   28378:	b	28cb0 <printf_fetchargs@@Base+0xb08>
   2837c:	ldr	x8, [sp, #360]
   28380:	ldrsw	x9, [x8, #24]
   28384:	mov	w10, w9
   28388:	cmp	w10, #0x0
   2838c:	cset	w10, ge  // ge = tcont
   28390:	str	x9, [sp, #296]
   28394:	tbnz	w10, #0, 283cc <printf_fetchargs@@Base+0x224>
   28398:	ldr	x8, [sp, #296]
   2839c:	add	w8, w8, #0x8
   283a0:	ldr	x9, [sp, #360]
   283a4:	str	w8, [x9, #24]
   283a8:	cmp	w8, #0x0
   283ac:	cset	w8, gt
   283b0:	tbnz	w8, #0, 283cc <printf_fetchargs@@Base+0x224>
   283b4:	ldr	x8, [sp, #360]
   283b8:	ldr	x9, [x8, #8]
   283bc:	ldr	x10, [sp, #296]
   283c0:	add	x9, x9, x10
   283c4:	str	x9, [sp, #288]
   283c8:	b	283e0 <printf_fetchargs@@Base+0x238>
   283cc:	ldr	x8, [sp, #360]
   283d0:	ldr	x9, [x8]
   283d4:	add	x10, x9, #0x8
   283d8:	str	x10, [x8]
   283dc:	str	x9, [sp, #288]
   283e0:	ldr	x8, [sp, #288]
   283e4:	ldr	w9, [x8]
   283e8:	ldr	x8, [sp, #368]
   283ec:	strh	w9, [x8, #16]
   283f0:	b	28cb0 <printf_fetchargs@@Base+0xb08>
   283f4:	ldr	x8, [sp, #360]
   283f8:	ldrsw	x9, [x8, #24]
   283fc:	mov	w10, w9
   28400:	cmp	w10, #0x0
   28404:	cset	w10, ge  // ge = tcont
   28408:	str	x9, [sp, #280]
   2840c:	tbnz	w10, #0, 28444 <printf_fetchargs@@Base+0x29c>
   28410:	ldr	x8, [sp, #280]
   28414:	add	w8, w8, #0x8
   28418:	ldr	x9, [sp, #360]
   2841c:	str	w8, [x9, #24]
   28420:	cmp	w8, #0x0
   28424:	cset	w8, gt
   28428:	tbnz	w8, #0, 28444 <printf_fetchargs@@Base+0x29c>
   2842c:	ldr	x8, [sp, #360]
   28430:	ldr	x9, [x8, #8]
   28434:	ldr	x10, [sp, #280]
   28438:	add	x9, x9, x10
   2843c:	str	x9, [sp, #272]
   28440:	b	28458 <printf_fetchargs@@Base+0x2b0>
   28444:	ldr	x8, [sp, #360]
   28448:	ldr	x9, [x8]
   2844c:	add	x10, x9, #0x8
   28450:	str	x10, [x8]
   28454:	str	x9, [sp, #272]
   28458:	ldr	x8, [sp, #272]
   2845c:	ldr	w9, [x8]
   28460:	ldr	x8, [sp, #368]
   28464:	str	w9, [x8, #16]
   28468:	b	28cb0 <printf_fetchargs@@Base+0xb08>
   2846c:	ldr	x8, [sp, #360]
   28470:	ldrsw	x9, [x8, #24]
   28474:	mov	w10, w9
   28478:	cmp	w10, #0x0
   2847c:	cset	w10, ge  // ge = tcont
   28480:	str	x9, [sp, #264]
   28484:	tbnz	w10, #0, 284bc <printf_fetchargs@@Base+0x314>
   28488:	ldr	x8, [sp, #264]
   2848c:	add	w8, w8, #0x8
   28490:	ldr	x9, [sp, #360]
   28494:	str	w8, [x9, #24]
   28498:	cmp	w8, #0x0
   2849c:	cset	w8, gt
   284a0:	tbnz	w8, #0, 284bc <printf_fetchargs@@Base+0x314>
   284a4:	ldr	x8, [sp, #360]
   284a8:	ldr	x9, [x8, #8]
   284ac:	ldr	x10, [sp, #264]
   284b0:	add	x9, x9, x10
   284b4:	str	x9, [sp, #256]
   284b8:	b	284d0 <printf_fetchargs@@Base+0x328>
   284bc:	ldr	x8, [sp, #360]
   284c0:	ldr	x9, [x8]
   284c4:	add	x10, x9, #0x8
   284c8:	str	x10, [x8]
   284cc:	str	x9, [sp, #256]
   284d0:	ldr	x8, [sp, #256]
   284d4:	ldr	w9, [x8]
   284d8:	ldr	x8, [sp, #368]
   284dc:	str	w9, [x8, #16]
   284e0:	b	28cb0 <printf_fetchargs@@Base+0xb08>
   284e4:	ldr	x8, [sp, #360]
   284e8:	ldrsw	x9, [x8, #24]
   284ec:	mov	w10, w9
   284f0:	cmp	w10, #0x0
   284f4:	cset	w10, ge  // ge = tcont
   284f8:	str	x9, [sp, #248]
   284fc:	tbnz	w10, #0, 28534 <printf_fetchargs@@Base+0x38c>
   28500:	ldr	x8, [sp, #248]
   28504:	add	w8, w8, #0x8
   28508:	ldr	x9, [sp, #360]
   2850c:	str	w8, [x9, #24]
   28510:	cmp	w8, #0x0
   28514:	cset	w8, gt
   28518:	tbnz	w8, #0, 28534 <printf_fetchargs@@Base+0x38c>
   2851c:	ldr	x8, [sp, #360]
   28520:	ldr	x9, [x8, #8]
   28524:	ldr	x10, [sp, #248]
   28528:	add	x9, x9, x10
   2852c:	str	x9, [sp, #240]
   28530:	b	28548 <printf_fetchargs@@Base+0x3a0>
   28534:	ldr	x8, [sp, #360]
   28538:	ldr	x9, [x8]
   2853c:	add	x10, x9, #0x8
   28540:	str	x10, [x8]
   28544:	str	x9, [sp, #240]
   28548:	ldr	x8, [sp, #240]
   2854c:	ldr	x8, [x8]
   28550:	ldr	x9, [sp, #368]
   28554:	str	x8, [x9, #16]
   28558:	b	28cb0 <printf_fetchargs@@Base+0xb08>
   2855c:	ldr	x8, [sp, #360]
   28560:	ldrsw	x9, [x8, #24]
   28564:	mov	w10, w9
   28568:	cmp	w10, #0x0
   2856c:	cset	w10, ge  // ge = tcont
   28570:	str	x9, [sp, #232]
   28574:	tbnz	w10, #0, 285ac <printf_fetchargs@@Base+0x404>
   28578:	ldr	x8, [sp, #232]
   2857c:	add	w8, w8, #0x8
   28580:	ldr	x9, [sp, #360]
   28584:	str	w8, [x9, #24]
   28588:	cmp	w8, #0x0
   2858c:	cset	w8, gt
   28590:	tbnz	w8, #0, 285ac <printf_fetchargs@@Base+0x404>
   28594:	ldr	x8, [sp, #360]
   28598:	ldr	x9, [x8, #8]
   2859c:	ldr	x10, [sp, #232]
   285a0:	add	x9, x9, x10
   285a4:	str	x9, [sp, #224]
   285a8:	b	285c0 <printf_fetchargs@@Base+0x418>
   285ac:	ldr	x8, [sp, #360]
   285b0:	ldr	x9, [x8]
   285b4:	add	x10, x9, #0x8
   285b8:	str	x10, [x8]
   285bc:	str	x9, [sp, #224]
   285c0:	ldr	x8, [sp, #224]
   285c4:	ldr	x8, [x8]
   285c8:	ldr	x9, [sp, #368]
   285cc:	str	x8, [x9, #16]
   285d0:	b	28cb0 <printf_fetchargs@@Base+0xb08>
   285d4:	ldr	x8, [sp, #360]
   285d8:	ldrsw	x9, [x8, #24]
   285dc:	mov	w10, w9
   285e0:	cmp	w10, #0x0
   285e4:	cset	w10, ge  // ge = tcont
   285e8:	str	x9, [sp, #216]
   285ec:	tbnz	w10, #0, 28624 <printf_fetchargs@@Base+0x47c>
   285f0:	ldr	x8, [sp, #216]
   285f4:	add	w8, w8, #0x8
   285f8:	ldr	x9, [sp, #360]
   285fc:	str	w8, [x9, #24]
   28600:	cmp	w8, #0x0
   28604:	cset	w8, gt
   28608:	tbnz	w8, #0, 28624 <printf_fetchargs@@Base+0x47c>
   2860c:	ldr	x8, [sp, #360]
   28610:	ldr	x9, [x8, #8]
   28614:	ldr	x10, [sp, #216]
   28618:	add	x9, x9, x10
   2861c:	str	x9, [sp, #208]
   28620:	b	28638 <printf_fetchargs@@Base+0x490>
   28624:	ldr	x8, [sp, #360]
   28628:	ldr	x9, [x8]
   2862c:	add	x10, x9, #0x8
   28630:	str	x10, [x8]
   28634:	str	x9, [sp, #208]
   28638:	ldr	x8, [sp, #208]
   2863c:	ldr	x8, [x8]
   28640:	ldr	x9, [sp, #368]
   28644:	str	x8, [x9, #16]
   28648:	b	28cb0 <printf_fetchargs@@Base+0xb08>
   2864c:	ldr	x8, [sp, #360]
   28650:	ldrsw	x9, [x8, #24]
   28654:	mov	w10, w9
   28658:	cmp	w10, #0x0
   2865c:	cset	w10, ge  // ge = tcont
   28660:	str	x9, [sp, #200]
   28664:	tbnz	w10, #0, 2869c <printf_fetchargs@@Base+0x4f4>
   28668:	ldr	x8, [sp, #200]
   2866c:	add	w8, w8, #0x8
   28670:	ldr	x9, [sp, #360]
   28674:	str	w8, [x9, #24]
   28678:	cmp	w8, #0x0
   2867c:	cset	w8, gt
   28680:	tbnz	w8, #0, 2869c <printf_fetchargs@@Base+0x4f4>
   28684:	ldr	x8, [sp, #360]
   28688:	ldr	x9, [x8, #8]
   2868c:	ldr	x10, [sp, #200]
   28690:	add	x9, x9, x10
   28694:	str	x9, [sp, #192]
   28698:	b	286b0 <printf_fetchargs@@Base+0x508>
   2869c:	ldr	x8, [sp, #360]
   286a0:	ldr	x9, [x8]
   286a4:	add	x10, x9, #0x8
   286a8:	str	x10, [x8]
   286ac:	str	x9, [sp, #192]
   286b0:	ldr	x8, [sp, #192]
   286b4:	ldr	x8, [x8]
   286b8:	ldr	x9, [sp, #368]
   286bc:	str	x8, [x9, #16]
   286c0:	b	28cb0 <printf_fetchargs@@Base+0xb08>
   286c4:	ldr	x8, [sp, #360]
   286c8:	ldrsw	x9, [x8, #28]
   286cc:	mov	w10, w9
   286d0:	cmp	w10, #0x0
   286d4:	cset	w10, ge  // ge = tcont
   286d8:	str	x9, [sp, #184]
   286dc:	tbnz	w10, #0, 28714 <printf_fetchargs@@Base+0x56c>
   286e0:	ldr	x8, [sp, #184]
   286e4:	add	w8, w8, #0x10
   286e8:	ldr	x9, [sp, #360]
   286ec:	str	w8, [x9, #28]
   286f0:	cmp	w8, #0x0
   286f4:	cset	w8, gt
   286f8:	tbnz	w8, #0, 28714 <printf_fetchargs@@Base+0x56c>
   286fc:	ldr	x8, [sp, #360]
   28700:	ldr	x9, [x8, #16]
   28704:	ldr	x10, [sp, #184]
   28708:	add	x9, x9, x10
   2870c:	str	x9, [sp, #176]
   28710:	b	28728 <printf_fetchargs@@Base+0x580>
   28714:	ldr	x8, [sp, #360]
   28718:	ldr	x9, [x8]
   2871c:	add	x10, x9, #0x8
   28720:	str	x10, [x8]
   28724:	str	x9, [sp, #176]
   28728:	ldr	x8, [sp, #176]
   2872c:	ldr	x8, [x8]
   28730:	ldr	x9, [sp, #368]
   28734:	str	x8, [x9, #16]
   28738:	b	28cb0 <printf_fetchargs@@Base+0xb08>
   2873c:	ldr	x8, [sp, #360]
   28740:	ldrsw	x9, [x8, #28]
   28744:	mov	w10, w9
   28748:	cmp	w10, #0x0
   2874c:	cset	w10, ge  // ge = tcont
   28750:	str	x9, [sp, #168]
   28754:	tbnz	w10, #0, 2878c <printf_fetchargs@@Base+0x5e4>
   28758:	ldr	x8, [sp, #168]
   2875c:	add	w8, w8, #0x10
   28760:	ldr	x9, [sp, #360]
   28764:	str	w8, [x9, #28]
   28768:	cmp	w8, #0x0
   2876c:	cset	w8, gt
   28770:	tbnz	w8, #0, 2878c <printf_fetchargs@@Base+0x5e4>
   28774:	ldr	x8, [sp, #360]
   28778:	ldr	x9, [x8, #16]
   2877c:	ldr	x10, [sp, #168]
   28780:	add	x9, x9, x10
   28784:	str	x9, [sp, #160]
   28788:	b	287a8 <printf_fetchargs@@Base+0x600>
   2878c:	ldr	x8, [sp, #360]
   28790:	ldr	x9, [x8]
   28794:	add	x9, x9, #0xf
   28798:	and	x9, x9, #0xfffffffffffffff0
   2879c:	add	x10, x9, #0x10
   287a0:	str	x10, [x8]
   287a4:	str	x9, [sp, #160]
   287a8:	ldr	x8, [sp, #160]
   287ac:	ldr	q0, [x8]
   287b0:	ldr	x8, [sp, #368]
   287b4:	str	q0, [x8, #16]
   287b8:	b	28cb0 <printf_fetchargs@@Base+0xb08>
   287bc:	ldr	x8, [sp, #360]
   287c0:	ldrsw	x9, [x8, #24]
   287c4:	mov	w10, w9
   287c8:	cmp	w10, #0x0
   287cc:	cset	w10, ge  // ge = tcont
   287d0:	str	x9, [sp, #152]
   287d4:	tbnz	w10, #0, 2880c <printf_fetchargs@@Base+0x664>
   287d8:	ldr	x8, [sp, #152]
   287dc:	add	w8, w8, #0x8
   287e0:	ldr	x9, [sp, #360]
   287e4:	str	w8, [x9, #24]
   287e8:	cmp	w8, #0x0
   287ec:	cset	w8, gt
   287f0:	tbnz	w8, #0, 2880c <printf_fetchargs@@Base+0x664>
   287f4:	ldr	x8, [sp, #360]
   287f8:	ldr	x9, [x8, #8]
   287fc:	ldr	x10, [sp, #152]
   28800:	add	x9, x9, x10
   28804:	str	x9, [sp, #144]
   28808:	b	28820 <printf_fetchargs@@Base+0x678>
   2880c:	ldr	x8, [sp, #360]
   28810:	ldr	x9, [x8]
   28814:	add	x10, x9, #0x8
   28818:	str	x10, [x8]
   2881c:	str	x9, [sp, #144]
   28820:	ldr	x8, [sp, #144]
   28824:	ldr	w9, [x8]
   28828:	ldr	x8, [sp, #368]
   2882c:	str	w9, [x8, #16]
   28830:	b	28cb0 <printf_fetchargs@@Base+0xb08>
   28834:	ldr	x8, [sp, #360]
   28838:	ldrsw	x9, [x8, #24]
   2883c:	mov	w10, w9
   28840:	cmp	w10, #0x0
   28844:	cset	w10, ge  // ge = tcont
   28848:	str	x9, [sp, #136]
   2884c:	tbnz	w10, #0, 28884 <printf_fetchargs@@Base+0x6dc>
   28850:	ldr	x8, [sp, #136]
   28854:	add	w8, w8, #0x8
   28858:	ldr	x9, [sp, #360]
   2885c:	str	w8, [x9, #24]
   28860:	cmp	w8, #0x0
   28864:	cset	w8, gt
   28868:	tbnz	w8, #0, 28884 <printf_fetchargs@@Base+0x6dc>
   2886c:	ldr	x8, [sp, #360]
   28870:	ldr	x9, [x8, #8]
   28874:	ldr	x10, [sp, #136]
   28878:	add	x9, x9, x10
   2887c:	str	x9, [sp, #128]
   28880:	b	28898 <printf_fetchargs@@Base+0x6f0>
   28884:	ldr	x8, [sp, #360]
   28888:	ldr	x9, [x8]
   2888c:	add	x10, x9, #0x8
   28890:	str	x10, [x8]
   28894:	str	x9, [sp, #128]
   28898:	ldr	x8, [sp, #128]
   2889c:	ldr	w9, [x8]
   288a0:	ldr	x8, [sp, #368]
   288a4:	str	w9, [x8, #16]
   288a8:	b	28cb0 <printf_fetchargs@@Base+0xb08>
   288ac:	ldr	x8, [sp, #360]
   288b0:	ldrsw	x9, [x8, #24]
   288b4:	mov	w10, w9
   288b8:	cmp	w10, #0x0
   288bc:	cset	w10, ge  // ge = tcont
   288c0:	str	x9, [sp, #120]
   288c4:	tbnz	w10, #0, 288fc <printf_fetchargs@@Base+0x754>
   288c8:	ldr	x8, [sp, #120]
   288cc:	add	w8, w8, #0x8
   288d0:	ldr	x9, [sp, #360]
   288d4:	str	w8, [x9, #24]
   288d8:	cmp	w8, #0x0
   288dc:	cset	w8, gt
   288e0:	tbnz	w8, #0, 288fc <printf_fetchargs@@Base+0x754>
   288e4:	ldr	x8, [sp, #360]
   288e8:	ldr	x9, [x8, #8]
   288ec:	ldr	x10, [sp, #120]
   288f0:	add	x9, x9, x10
   288f4:	str	x9, [sp, #112]
   288f8:	b	28910 <printf_fetchargs@@Base+0x768>
   288fc:	ldr	x8, [sp, #360]
   28900:	ldr	x9, [x8]
   28904:	add	x10, x9, #0x8
   28908:	str	x10, [x8]
   2890c:	str	x9, [sp, #112]
   28910:	ldr	x8, [sp, #112]
   28914:	ldr	x8, [x8]
   28918:	ldr	x9, [sp, #368]
   2891c:	str	x8, [x9, #16]
   28920:	ldr	x8, [sp, #368]
   28924:	ldr	x8, [x8, #16]
   28928:	cbnz	x8, 2893c <printf_fetchargs@@Base+0x794>
   2892c:	ldr	x8, [sp, #368]
   28930:	adrp	x9, 45000 <vasnprintf@@Base+0x2e4c>
   28934:	add	x9, x9, #0x5b5
   28938:	str	x9, [x8, #16]
   2893c:	b	28cb0 <printf_fetchargs@@Base+0xb08>
   28940:	ldr	x8, [sp, #360]
   28944:	ldrsw	x9, [x8, #24]
   28948:	mov	w10, w9
   2894c:	cmp	w10, #0x0
   28950:	cset	w10, ge  // ge = tcont
   28954:	str	x9, [sp, #104]
   28958:	tbnz	w10, #0, 28990 <printf_fetchargs@@Base+0x7e8>
   2895c:	ldr	x8, [sp, #104]
   28960:	add	w8, w8, #0x8
   28964:	ldr	x9, [sp, #360]
   28968:	str	w8, [x9, #24]
   2896c:	cmp	w8, #0x0
   28970:	cset	w8, gt
   28974:	tbnz	w8, #0, 28990 <printf_fetchargs@@Base+0x7e8>
   28978:	ldr	x8, [sp, #360]
   2897c:	ldr	x9, [x8, #8]
   28980:	ldr	x10, [sp, #104]
   28984:	add	x9, x9, x10
   28988:	str	x9, [sp, #96]
   2898c:	b	289a4 <printf_fetchargs@@Base+0x7fc>
   28990:	ldr	x8, [sp, #360]
   28994:	ldr	x9, [x8]
   28998:	add	x10, x9, #0x8
   2899c:	str	x10, [x8]
   289a0:	str	x9, [sp, #96]
   289a4:	ldr	x8, [sp, #96]
   289a8:	ldr	x8, [x8]
   289ac:	ldr	x9, [sp, #368]
   289b0:	str	x8, [x9, #16]
   289b4:	ldr	x8, [sp, #368]
   289b8:	ldr	x8, [x8, #16]
   289bc:	cbnz	x8, 289d0 <printf_fetchargs@@Base+0x828>
   289c0:	ldr	x8, [sp, #368]
   289c4:	adrp	x9, 47000 <vasnprintf@@Base+0x4e4c>
   289c8:	add	x9, x9, #0x14
   289cc:	str	x9, [x8, #16]
   289d0:	b	28cb0 <printf_fetchargs@@Base+0xb08>
   289d4:	ldr	x8, [sp, #360]
   289d8:	ldrsw	x9, [x8, #24]
   289dc:	mov	w10, w9
   289e0:	cmp	w10, #0x0
   289e4:	cset	w10, ge  // ge = tcont
   289e8:	str	x9, [sp, #88]
   289ec:	tbnz	w10, #0, 28a24 <printf_fetchargs@@Base+0x87c>
   289f0:	ldr	x8, [sp, #88]
   289f4:	add	w8, w8, #0x8
   289f8:	ldr	x9, [sp, #360]
   289fc:	str	w8, [x9, #24]
   28a00:	cmp	w8, #0x0
   28a04:	cset	w8, gt
   28a08:	tbnz	w8, #0, 28a24 <printf_fetchargs@@Base+0x87c>
   28a0c:	ldr	x8, [sp, #360]
   28a10:	ldr	x9, [x8, #8]
   28a14:	ldr	x10, [sp, #88]
   28a18:	add	x9, x9, x10
   28a1c:	str	x9, [sp, #80]
   28a20:	b	28a38 <printf_fetchargs@@Base+0x890>
   28a24:	ldr	x8, [sp, #360]
   28a28:	ldr	x9, [x8]
   28a2c:	add	x10, x9, #0x8
   28a30:	str	x10, [x8]
   28a34:	str	x9, [sp, #80]
   28a38:	ldr	x8, [sp, #80]
   28a3c:	ldr	x8, [x8]
   28a40:	ldr	x9, [sp, #368]
   28a44:	str	x8, [x9, #16]
   28a48:	b	28cb0 <printf_fetchargs@@Base+0xb08>
   28a4c:	ldr	x8, [sp, #360]
   28a50:	ldrsw	x9, [x8, #24]
   28a54:	mov	w10, w9
   28a58:	cmp	w10, #0x0
   28a5c:	cset	w10, ge  // ge = tcont
   28a60:	str	x9, [sp, #72]
   28a64:	tbnz	w10, #0, 28a9c <printf_fetchargs@@Base+0x8f4>
   28a68:	ldr	x8, [sp, #72]
   28a6c:	add	w8, w8, #0x8
   28a70:	ldr	x9, [sp, #360]
   28a74:	str	w8, [x9, #24]
   28a78:	cmp	w8, #0x0
   28a7c:	cset	w8, gt
   28a80:	tbnz	w8, #0, 28a9c <printf_fetchargs@@Base+0x8f4>
   28a84:	ldr	x8, [sp, #360]
   28a88:	ldr	x9, [x8, #8]
   28a8c:	ldr	x10, [sp, #72]
   28a90:	add	x9, x9, x10
   28a94:	str	x9, [sp, #64]
   28a98:	b	28ab0 <printf_fetchargs@@Base+0x908>
   28a9c:	ldr	x8, [sp, #360]
   28aa0:	ldr	x9, [x8]
   28aa4:	add	x10, x9, #0x8
   28aa8:	str	x10, [x8]
   28aac:	str	x9, [sp, #64]
   28ab0:	ldr	x8, [sp, #64]
   28ab4:	ldr	x8, [x8]
   28ab8:	ldr	x9, [sp, #368]
   28abc:	str	x8, [x9, #16]
   28ac0:	b	28cb0 <printf_fetchargs@@Base+0xb08>
   28ac4:	ldr	x8, [sp, #360]
   28ac8:	ldrsw	x9, [x8, #24]
   28acc:	mov	w10, w9
   28ad0:	cmp	w10, #0x0
   28ad4:	cset	w10, ge  // ge = tcont
   28ad8:	str	x9, [sp, #56]
   28adc:	tbnz	w10, #0, 28b14 <printf_fetchargs@@Base+0x96c>
   28ae0:	ldr	x8, [sp, #56]
   28ae4:	add	w8, w8, #0x8
   28ae8:	ldr	x9, [sp, #360]
   28aec:	str	w8, [x9, #24]
   28af0:	cmp	w8, #0x0
   28af4:	cset	w8, gt
   28af8:	tbnz	w8, #0, 28b14 <printf_fetchargs@@Base+0x96c>
   28afc:	ldr	x8, [sp, #360]
   28b00:	ldr	x9, [x8, #8]
   28b04:	ldr	x10, [sp, #56]
   28b08:	add	x9, x9, x10
   28b0c:	str	x9, [sp, #48]
   28b10:	b	28b28 <printf_fetchargs@@Base+0x980>
   28b14:	ldr	x8, [sp, #360]
   28b18:	ldr	x9, [x8]
   28b1c:	add	x10, x9, #0x8
   28b20:	str	x10, [x8]
   28b24:	str	x9, [sp, #48]
   28b28:	ldr	x8, [sp, #48]
   28b2c:	ldr	x8, [x8]
   28b30:	ldr	x9, [sp, #368]
   28b34:	str	x8, [x9, #16]
   28b38:	b	28cb0 <printf_fetchargs@@Base+0xb08>
   28b3c:	ldr	x8, [sp, #360]
   28b40:	ldrsw	x9, [x8, #24]
   28b44:	mov	w10, w9
   28b48:	cmp	w10, #0x0
   28b4c:	cset	w10, ge  // ge = tcont
   28b50:	str	x9, [sp, #40]
   28b54:	tbnz	w10, #0, 28b8c <printf_fetchargs@@Base+0x9e4>
   28b58:	ldr	x8, [sp, #40]
   28b5c:	add	w8, w8, #0x8
   28b60:	ldr	x9, [sp, #360]
   28b64:	str	w8, [x9, #24]
   28b68:	cmp	w8, #0x0
   28b6c:	cset	w8, gt
   28b70:	tbnz	w8, #0, 28b8c <printf_fetchargs@@Base+0x9e4>
   28b74:	ldr	x8, [sp, #360]
   28b78:	ldr	x9, [x8, #8]
   28b7c:	ldr	x10, [sp, #40]
   28b80:	add	x9, x9, x10
   28b84:	str	x9, [sp, #32]
   28b88:	b	28ba0 <printf_fetchargs@@Base+0x9f8>
   28b8c:	ldr	x8, [sp, #360]
   28b90:	ldr	x9, [x8]
   28b94:	add	x10, x9, #0x8
   28b98:	str	x10, [x8]
   28b9c:	str	x9, [sp, #32]
   28ba0:	ldr	x8, [sp, #32]
   28ba4:	ldr	x8, [x8]
   28ba8:	ldr	x9, [sp, #368]
   28bac:	str	x8, [x9, #16]
   28bb0:	b	28cb0 <printf_fetchargs@@Base+0xb08>
   28bb4:	ldr	x8, [sp, #360]
   28bb8:	ldrsw	x9, [x8, #24]
   28bbc:	mov	w10, w9
   28bc0:	cmp	w10, #0x0
   28bc4:	cset	w10, ge  // ge = tcont
   28bc8:	str	x9, [sp, #24]
   28bcc:	tbnz	w10, #0, 28c04 <printf_fetchargs@@Base+0xa5c>
   28bd0:	ldr	x8, [sp, #24]
   28bd4:	add	w8, w8, #0x8
   28bd8:	ldr	x9, [sp, #360]
   28bdc:	str	w8, [x9, #24]
   28be0:	cmp	w8, #0x0
   28be4:	cset	w8, gt
   28be8:	tbnz	w8, #0, 28c04 <printf_fetchargs@@Base+0xa5c>
   28bec:	ldr	x8, [sp, #360]
   28bf0:	ldr	x9, [x8, #8]
   28bf4:	ldr	x10, [sp, #24]
   28bf8:	add	x9, x9, x10
   28bfc:	str	x9, [sp, #16]
   28c00:	b	28c18 <printf_fetchargs@@Base+0xa70>
   28c04:	ldr	x8, [sp, #360]
   28c08:	ldr	x9, [x8]
   28c0c:	add	x10, x9, #0x8
   28c10:	str	x10, [x8]
   28c14:	str	x9, [sp, #16]
   28c18:	ldr	x8, [sp, #16]
   28c1c:	ldr	x8, [x8]
   28c20:	ldr	x9, [sp, #368]
   28c24:	str	x8, [x9, #16]
   28c28:	b	28cb0 <printf_fetchargs@@Base+0xb08>
   28c2c:	ldr	x8, [sp, #360]
   28c30:	ldrsw	x9, [x8, #24]
   28c34:	mov	w10, w9
   28c38:	cmp	w10, #0x0
   28c3c:	cset	w10, ge  // ge = tcont
   28c40:	str	x9, [sp, #8]
   28c44:	tbnz	w10, #0, 28c7c <printf_fetchargs@@Base+0xad4>
   28c48:	ldr	x8, [sp, #8]
   28c4c:	add	w8, w8, #0x8
   28c50:	ldr	x9, [sp, #360]
   28c54:	str	w8, [x9, #24]
   28c58:	cmp	w8, #0x0
   28c5c:	cset	w8, gt
   28c60:	tbnz	w8, #0, 28c7c <printf_fetchargs@@Base+0xad4>
   28c64:	ldr	x8, [sp, #360]
   28c68:	ldr	x9, [x8, #8]
   28c6c:	ldr	x10, [sp, #8]
   28c70:	add	x9, x9, x10
   28c74:	str	x9, [sp]
   28c78:	b	28c90 <printf_fetchargs@@Base+0xae8>
   28c7c:	ldr	x8, [sp, #360]
   28c80:	ldr	x9, [x8]
   28c84:	add	x10, x9, #0x8
   28c88:	str	x10, [x8]
   28c8c:	str	x9, [sp]
   28c90:	ldr	x8, [sp]
   28c94:	ldr	x8, [x8]
   28c98:	ldr	x9, [sp, #368]
   28c9c:	str	x8, [x9, #16]
   28ca0:	b	28cb0 <printf_fetchargs@@Base+0xb08>
   28ca4:	mov	w8, #0xffffffff            	// #-1
   28ca8:	str	w8, [sp, #396]
   28cac:	b	28cd0 <printf_fetchargs@@Base+0xb28>
   28cb0:	ldr	x8, [sp, #376]
   28cb4:	add	x8, x8, #0x1
   28cb8:	str	x8, [sp, #376]
   28cbc:	ldr	x8, [sp, #368]
   28cc0:	add	x8, x8, #0x20
   28cc4:	str	x8, [sp, #368]
   28cc8:	b	281c8 <printf_fetchargs@@Base+0x20>
   28ccc:	str	wzr, [sp, #396]
   28cd0:	ldr	w0, [sp, #396]
   28cd4:	ldr	x29, [sp, #400]
   28cd8:	add	sp, sp, #0x1a0
   28cdc:	ret

0000000000028ce0 <printf_parse@@Base>:
   28ce0:	sub	sp, sp, #0x1d0
   28ce4:	stp	x29, x30, [sp, #432]
   28ce8:	str	x28, [sp, #448]
   28cec:	add	x29, sp, #0x1b0
   28cf0:	mov	x8, #0x7                   	// #7
   28cf4:	stur	x0, [x29, #-16]
   28cf8:	stur	x1, [x29, #-24]
   28cfc:	stur	x2, [x29, #-32]
   28d00:	ldur	x9, [x29, #-16]
   28d04:	stur	x9, [x29, #-40]
   28d08:	stur	xzr, [x29, #-48]
   28d0c:	stur	xzr, [x29, #-72]
   28d10:	stur	xzr, [x29, #-80]
   28d14:	ldur	x9, [x29, #-24]
   28d18:	str	xzr, [x9]
   28d1c:	stur	x8, [x29, #-56]
   28d20:	ldur	x9, [x29, #-24]
   28d24:	add	x9, x9, #0x20
   28d28:	ldur	x10, [x29, #-24]
   28d2c:	str	x9, [x10, #8]
   28d30:	ldur	x9, [x29, #-32]
   28d34:	str	xzr, [x9]
   28d38:	stur	x8, [x29, #-64]
   28d3c:	ldur	x8, [x29, #-32]
   28d40:	add	x8, x8, #0x10
   28d44:	ldur	x9, [x29, #-32]
   28d48:	str	x8, [x9, #8]
   28d4c:	ldur	x8, [x29, #-40]
   28d50:	ldrb	w9, [x8]
   28d54:	cbz	w9, 2a110 <printf_parse@@Base+0x1430>
   28d58:	ldur	x8, [x29, #-40]
   28d5c:	add	x9, x8, #0x1
   28d60:	stur	x9, [x29, #-40]
   28d64:	ldrb	w10, [x8]
   28d68:	sturb	w10, [x29, #-81]
   28d6c:	ldurb	w10, [x29, #-81]
   28d70:	cmp	w10, #0x25
   28d74:	b.ne	2a10c <printf_parse@@Base+0x142c>  // b.any
   28d78:	mov	x8, #0xffffffffffffffff    	// #-1
   28d7c:	stur	x8, [x29, #-96]
   28d80:	ldur	x9, [x29, #-24]
   28d84:	ldr	x9, [x9, #8]
   28d88:	ldur	x10, [x29, #-24]
   28d8c:	ldr	x10, [x10]
   28d90:	mov	x11, #0x58                  	// #88
   28d94:	mul	x10, x11, x10
   28d98:	add	x9, x9, x10
   28d9c:	stur	x9, [x29, #-104]
   28da0:	ldur	x9, [x29, #-40]
   28da4:	mov	x10, #0xffffffffffffffff    	// #-1
   28da8:	add	x9, x9, x10
   28dac:	ldur	x10, [x29, #-104]
   28db0:	str	x9, [x10]
   28db4:	ldur	x9, [x29, #-104]
   28db8:	str	wzr, [x9, #16]
   28dbc:	ldur	x9, [x29, #-104]
   28dc0:	mov	x10, xzr
   28dc4:	str	x10, [x9, #24]
   28dc8:	ldur	x9, [x29, #-104]
   28dcc:	str	x10, [x9, #32]
   28dd0:	ldur	x9, [x29, #-104]
   28dd4:	str	x8, [x9, #40]
   28dd8:	ldur	x9, [x29, #-104]
   28ddc:	str	x10, [x9, #48]
   28de0:	ldur	x9, [x29, #-104]
   28de4:	str	x10, [x9, #56]
   28de8:	ldur	x9, [x29, #-104]
   28dec:	str	x8, [x9, #64]
   28df0:	ldur	x9, [x29, #-104]
   28df4:	str	x8, [x9, #80]
   28df8:	ldur	x8, [x29, #-40]
   28dfc:	ldrb	w12, [x8]
   28e00:	cmp	w12, #0x30
   28e04:	b.lt	28f58 <printf_parse@@Base+0x278>  // b.tstop
   28e08:	ldur	x8, [x29, #-40]
   28e0c:	ldrb	w9, [x8]
   28e10:	cmp	w9, #0x39
   28e14:	b.gt	28f58 <printf_parse@@Base+0x278>
   28e18:	ldur	x8, [x29, #-40]
   28e1c:	stur	x8, [x29, #-112]
   28e20:	ldur	x8, [x29, #-112]
   28e24:	ldrb	w9, [x8]
   28e28:	mov	w10, #0x0                   	// #0
   28e2c:	cmp	w9, #0x30
   28e30:	str	w10, [sp, #164]
   28e34:	b.lt	28e4c <printf_parse@@Base+0x16c>  // b.tstop
   28e38:	ldur	x8, [x29, #-112]
   28e3c:	ldrb	w9, [x8]
   28e40:	cmp	w9, #0x39
   28e44:	cset	w9, le
   28e48:	str	w9, [sp, #164]
   28e4c:	ldr	w8, [sp, #164]
   28e50:	tbnz	w8, #0, 28e58 <printf_parse@@Base+0x178>
   28e54:	b	28e68 <printf_parse@@Base+0x188>
   28e58:	ldur	x8, [x29, #-112]
   28e5c:	add	x8, x8, #0x1
   28e60:	stur	x8, [x29, #-112]
   28e64:	b	28e20 <printf_parse@@Base+0x140>
   28e68:	ldur	x8, [x29, #-112]
   28e6c:	ldrb	w9, [x8]
   28e70:	cmp	w9, #0x24
   28e74:	b.ne	28f58 <printf_parse@@Base+0x278>  // b.any
   28e78:	stur	xzr, [x29, #-120]
   28e7c:	ldur	x8, [x29, #-40]
   28e80:	stur	x8, [x29, #-112]
   28e84:	ldur	x8, [x29, #-112]
   28e88:	ldrb	w9, [x8]
   28e8c:	mov	w10, #0x0                   	// #0
   28e90:	cmp	w9, #0x30
   28e94:	str	w10, [sp, #160]
   28e98:	b.lt	28eb0 <printf_parse@@Base+0x1d0>  // b.tstop
   28e9c:	ldur	x8, [x29, #-112]
   28ea0:	ldrb	w9, [x8]
   28ea4:	cmp	w9, #0x39
   28ea8:	cset	w9, le
   28eac:	str	w9, [sp, #160]
   28eb0:	ldr	w8, [sp, #160]
   28eb4:	tbnz	w8, #0, 28ebc <printf_parse@@Base+0x1dc>
   28eb8:	b	28f20 <printf_parse@@Base+0x240>
   28ebc:	ldur	x8, [x29, #-120]
   28ec0:	mov	x9, #0x9999999999999999    	// #-7378697629483820647
   28ec4:	movk	x9, #0x1999, lsl #48
   28ec8:	cmp	x8, x9
   28ecc:	b.hi	28ee4 <printf_parse@@Base+0x204>  // b.pmore
   28ed0:	ldur	x8, [x29, #-120]
   28ed4:	mov	x9, #0xa                   	// #10
   28ed8:	mul	x8, x8, x9
   28edc:	str	x8, [sp, #152]
   28ee0:	b	28eec <printf_parse@@Base+0x20c>
   28ee4:	mov	x8, #0xffffffffffffffff    	// #-1
   28ee8:	str	x8, [sp, #152]
   28eec:	ldr	x8, [sp, #152]
   28ef0:	ldur	x9, [x29, #-112]
   28ef4:	ldrb	w10, [x9]
   28ef8:	subs	w10, w10, #0x30
   28efc:	mov	w0, w10
   28f00:	sxtw	x1, w0
   28f04:	mov	x0, x8
   28f08:	bl	b190 <xsum@plt>
   28f0c:	stur	x0, [x29, #-120]
   28f10:	ldur	x8, [x29, #-112]
   28f14:	add	x8, x8, #0x1
   28f18:	stur	x8, [x29, #-112]
   28f1c:	b	28e84 <printf_parse@@Base+0x1a4>
   28f20:	ldur	x8, [x29, #-120]
   28f24:	cbnz	x8, 28f2c <printf_parse@@Base+0x24c>
   28f28:	b	2a154 <printf_parse@@Base+0x1474>
   28f2c:	ldur	x8, [x29, #-120]
   28f30:	mov	x9, #0xffffffffffffffff    	// #-1
   28f34:	cmp	x8, x9
   28f38:	b.ne	28f40 <printf_parse@@Base+0x260>  // b.any
   28f3c:	b	2a154 <printf_parse@@Base+0x1474>
   28f40:	ldur	x8, [x29, #-120]
   28f44:	subs	x8, x8, #0x1
   28f48:	stur	x8, [x29, #-96]
   28f4c:	ldur	x8, [x29, #-112]
   28f50:	add	x8, x8, #0x1
   28f54:	stur	x8, [x29, #-40]
   28f58:	ldur	x8, [x29, #-40]
   28f5c:	ldrb	w9, [x8]
   28f60:	cmp	w9, #0x27
   28f64:	b.ne	28f88 <printf_parse@@Base+0x2a8>  // b.any
   28f68:	ldur	x8, [x29, #-104]
   28f6c:	ldr	w9, [x8, #16]
   28f70:	orr	w9, w9, #0x1
   28f74:	str	w9, [x8, #16]
   28f78:	ldur	x8, [x29, #-40]
   28f7c:	add	x8, x8, #0x1
   28f80:	stur	x8, [x29, #-40]
   28f84:	b	290ac <printf_parse@@Base+0x3cc>
   28f88:	ldur	x8, [x29, #-40]
   28f8c:	ldrb	w9, [x8]
   28f90:	cmp	w9, #0x2d
   28f94:	b.ne	28fb8 <printf_parse@@Base+0x2d8>  // b.any
   28f98:	ldur	x8, [x29, #-104]
   28f9c:	ldr	w9, [x8, #16]
   28fa0:	orr	w9, w9, #0x2
   28fa4:	str	w9, [x8, #16]
   28fa8:	ldur	x8, [x29, #-40]
   28fac:	add	x8, x8, #0x1
   28fb0:	stur	x8, [x29, #-40]
   28fb4:	b	290ac <printf_parse@@Base+0x3cc>
   28fb8:	ldur	x8, [x29, #-40]
   28fbc:	ldrb	w9, [x8]
   28fc0:	cmp	w9, #0x2b
   28fc4:	b.ne	28fe8 <printf_parse@@Base+0x308>  // b.any
   28fc8:	ldur	x8, [x29, #-104]
   28fcc:	ldr	w9, [x8, #16]
   28fd0:	orr	w9, w9, #0x4
   28fd4:	str	w9, [x8, #16]
   28fd8:	ldur	x8, [x29, #-40]
   28fdc:	add	x8, x8, #0x1
   28fe0:	stur	x8, [x29, #-40]
   28fe4:	b	290ac <printf_parse@@Base+0x3cc>
   28fe8:	ldur	x8, [x29, #-40]
   28fec:	ldrb	w9, [x8]
   28ff0:	cmp	w9, #0x20
   28ff4:	b.ne	29018 <printf_parse@@Base+0x338>  // b.any
   28ff8:	ldur	x8, [x29, #-104]
   28ffc:	ldr	w9, [x8, #16]
   29000:	orr	w9, w9, #0x8
   29004:	str	w9, [x8, #16]
   29008:	ldur	x8, [x29, #-40]
   2900c:	add	x8, x8, #0x1
   29010:	stur	x8, [x29, #-40]
   29014:	b	290ac <printf_parse@@Base+0x3cc>
   29018:	ldur	x8, [x29, #-40]
   2901c:	ldrb	w9, [x8]
   29020:	cmp	w9, #0x23
   29024:	b.ne	29048 <printf_parse@@Base+0x368>  // b.any
   29028:	ldur	x8, [x29, #-104]
   2902c:	ldr	w9, [x8, #16]
   29030:	orr	w9, w9, #0x10
   29034:	str	w9, [x8, #16]
   29038:	ldur	x8, [x29, #-40]
   2903c:	add	x8, x8, #0x1
   29040:	stur	x8, [x29, #-40]
   29044:	b	290ac <printf_parse@@Base+0x3cc>
   29048:	ldur	x8, [x29, #-40]
   2904c:	ldrb	w9, [x8]
   29050:	cmp	w9, #0x30
   29054:	b.ne	29078 <printf_parse@@Base+0x398>  // b.any
   29058:	ldur	x8, [x29, #-104]
   2905c:	ldr	w9, [x8, #16]
   29060:	orr	w9, w9, #0x20
   29064:	str	w9, [x8, #16]
   29068:	ldur	x8, [x29, #-40]
   2906c:	add	x8, x8, #0x1
   29070:	stur	x8, [x29, #-40]
   29074:	b	290ac <printf_parse@@Base+0x3cc>
   29078:	ldur	x8, [x29, #-40]
   2907c:	ldrb	w9, [x8]
   29080:	cmp	w9, #0x49
   29084:	b.ne	290a8 <printf_parse@@Base+0x3c8>  // b.any
   29088:	ldur	x8, [x29, #-104]
   2908c:	ldr	w9, [x8, #16]
   29090:	orr	w9, w9, #0x40
   29094:	str	w9, [x8, #16]
   29098:	ldur	x8, [x29, #-40]
   2909c:	add	x8, x8, #0x1
   290a0:	stur	x8, [x29, #-40]
   290a4:	b	290ac <printf_parse@@Base+0x3cc>
   290a8:	b	290b0 <printf_parse@@Base+0x3d0>
   290ac:	b	28f58 <printf_parse@@Base+0x278>
   290b0:	ldur	x8, [x29, #-40]
   290b4:	ldrb	w9, [x8]
   290b8:	cmp	w9, #0x2a
   290bc:	b.ne	2948c <printf_parse@@Base+0x7ac>  // b.any
   290c0:	ldur	x8, [x29, #-40]
   290c4:	ldur	x9, [x29, #-104]
   290c8:	str	x8, [x9, #24]
   290cc:	ldur	x8, [x29, #-40]
   290d0:	add	x8, x8, #0x1
   290d4:	stur	x8, [x29, #-40]
   290d8:	ldur	x8, [x29, #-40]
   290dc:	ldur	x9, [x29, #-104]
   290e0:	str	x8, [x9, #32]
   290e4:	ldur	x8, [x29, #-72]
   290e8:	cmp	x8, #0x1
   290ec:	b.cs	290f8 <printf_parse@@Base+0x418>  // b.hs, b.nlast
   290f0:	mov	x8, #0x1                   	// #1
   290f4:	stur	x8, [x29, #-72]
   290f8:	ldur	x8, [x29, #-40]
   290fc:	ldrb	w9, [x8]
   29100:	cmp	w9, #0x30
   29104:	b.lt	2925c <printf_parse@@Base+0x57c>  // b.tstop
   29108:	ldur	x8, [x29, #-40]
   2910c:	ldrb	w9, [x8]
   29110:	cmp	w9, #0x39
   29114:	b.gt	2925c <printf_parse@@Base+0x57c>
   29118:	ldur	x8, [x29, #-40]
   2911c:	stur	x8, [x29, #-128]
   29120:	ldur	x8, [x29, #-128]
   29124:	ldrb	w9, [x8]
   29128:	mov	w10, #0x0                   	// #0
   2912c:	cmp	w9, #0x30
   29130:	str	w10, [sp, #148]
   29134:	b.lt	2914c <printf_parse@@Base+0x46c>  // b.tstop
   29138:	ldur	x8, [x29, #-128]
   2913c:	ldrb	w9, [x8]
   29140:	cmp	w9, #0x39
   29144:	cset	w9, le
   29148:	str	w9, [sp, #148]
   2914c:	ldr	w8, [sp, #148]
   29150:	tbnz	w8, #0, 29158 <printf_parse@@Base+0x478>
   29154:	b	29168 <printf_parse@@Base+0x488>
   29158:	ldur	x8, [x29, #-128]
   2915c:	add	x8, x8, #0x1
   29160:	stur	x8, [x29, #-128]
   29164:	b	29120 <printf_parse@@Base+0x440>
   29168:	ldur	x8, [x29, #-128]
   2916c:	ldrb	w9, [x8]
   29170:	cmp	w9, #0x24
   29174:	b.ne	2925c <printf_parse@@Base+0x57c>  // b.any
   29178:	stur	xzr, [x29, #-136]
   2917c:	ldur	x8, [x29, #-40]
   29180:	stur	x8, [x29, #-128]
   29184:	ldur	x8, [x29, #-128]
   29188:	ldrb	w9, [x8]
   2918c:	mov	w10, #0x0                   	// #0
   29190:	cmp	w9, #0x30
   29194:	str	w10, [sp, #144]
   29198:	b.lt	291b0 <printf_parse@@Base+0x4d0>  // b.tstop
   2919c:	ldur	x8, [x29, #-128]
   291a0:	ldrb	w9, [x8]
   291a4:	cmp	w9, #0x39
   291a8:	cset	w9, le
   291ac:	str	w9, [sp, #144]
   291b0:	ldr	w8, [sp, #144]
   291b4:	tbnz	w8, #0, 291bc <printf_parse@@Base+0x4dc>
   291b8:	b	29220 <printf_parse@@Base+0x540>
   291bc:	ldur	x8, [x29, #-136]
   291c0:	mov	x9, #0x9999999999999999    	// #-7378697629483820647
   291c4:	movk	x9, #0x1999, lsl #48
   291c8:	cmp	x8, x9
   291cc:	b.hi	291e4 <printf_parse@@Base+0x504>  // b.pmore
   291d0:	ldur	x8, [x29, #-136]
   291d4:	mov	x9, #0xa                   	// #10
   291d8:	mul	x8, x8, x9
   291dc:	str	x8, [sp, #136]
   291e0:	b	291ec <printf_parse@@Base+0x50c>
   291e4:	mov	x8, #0xffffffffffffffff    	// #-1
   291e8:	str	x8, [sp, #136]
   291ec:	ldr	x8, [sp, #136]
   291f0:	ldur	x9, [x29, #-128]
   291f4:	ldrb	w10, [x9]
   291f8:	subs	w10, w10, #0x30
   291fc:	mov	w0, w10
   29200:	sxtw	x1, w0
   29204:	mov	x0, x8
   29208:	bl	b190 <xsum@plt>
   2920c:	stur	x0, [x29, #-136]
   29210:	ldur	x8, [x29, #-128]
   29214:	add	x8, x8, #0x1
   29218:	stur	x8, [x29, #-128]
   2921c:	b	29184 <printf_parse@@Base+0x4a4>
   29220:	ldur	x8, [x29, #-136]
   29224:	cbnz	x8, 2922c <printf_parse@@Base+0x54c>
   29228:	b	2a154 <printf_parse@@Base+0x1474>
   2922c:	ldur	x8, [x29, #-136]
   29230:	mov	x9, #0xffffffffffffffff    	// #-1
   29234:	cmp	x8, x9
   29238:	b.ne	29240 <printf_parse@@Base+0x560>  // b.any
   2923c:	b	2a154 <printf_parse@@Base+0x1474>
   29240:	ldur	x8, [x29, #-136]
   29244:	subs	x8, x8, #0x1
   29248:	ldur	x9, [x29, #-104]
   2924c:	str	x8, [x9, #40]
   29250:	ldur	x8, [x29, #-128]
   29254:	add	x8, x8, #0x1
   29258:	stur	x8, [x29, #-40]
   2925c:	ldur	x8, [x29, #-104]
   29260:	ldr	x8, [x8, #40]
   29264:	mov	x9, #0xffffffffffffffff    	// #-1
   29268:	cmp	x8, x9
   2926c:	b.ne	2929c <printf_parse@@Base+0x5bc>  // b.any
   29270:	ldur	x8, [x29, #-48]
   29274:	add	x9, x8, #0x1
   29278:	stur	x9, [x29, #-48]
   2927c:	ldur	x9, [x29, #-104]
   29280:	str	x8, [x9, #40]
   29284:	ldur	x8, [x29, #-104]
   29288:	ldr	x8, [x8, #40]
   2928c:	mov	x9, #0xffffffffffffffff    	// #-1
   29290:	cmp	x8, x9
   29294:	b.ne	2929c <printf_parse@@Base+0x5bc>  // b.any
   29298:	b	2a154 <printf_parse@@Base+0x1474>
   2929c:	ldur	x8, [x29, #-104]
   292a0:	ldr	x8, [x8, #40]
   292a4:	stur	x8, [x29, #-144]
   292a8:	ldur	x8, [x29, #-144]
   292ac:	ldur	x9, [x29, #-64]
   292b0:	cmp	x8, x9
   292b4:	b.cc	293e8 <printf_parse@@Base+0x708>  // b.lo, b.ul, b.last
   292b8:	ldur	x8, [x29, #-64]
   292bc:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
   292c0:	cmp	x8, x9
   292c4:	b.hi	292dc <printf_parse@@Base+0x5fc>  // b.pmore
   292c8:	ldur	x8, [x29, #-64]
   292cc:	mov	x9, #0x2                   	// #2
   292d0:	mul	x8, x8, x9
   292d4:	str	x8, [sp, #128]
   292d8:	b	292e4 <printf_parse@@Base+0x604>
   292dc:	mov	x8, #0xffffffffffffffff    	// #-1
   292e0:	str	x8, [sp, #128]
   292e4:	ldr	x8, [sp, #128]
   292e8:	stur	x8, [x29, #-64]
   292ec:	ldur	x8, [x29, #-64]
   292f0:	ldur	x9, [x29, #-144]
   292f4:	cmp	x8, x9
   292f8:	b.hi	2930c <printf_parse@@Base+0x62c>  // b.pmore
   292fc:	ldur	x0, [x29, #-144]
   29300:	mov	x1, #0x1                   	// #1
   29304:	bl	b190 <xsum@plt>
   29308:	stur	x0, [x29, #-64]
   2930c:	ldur	x8, [x29, #-64]
   29310:	mov	x9, #0x7ffffffffffffff     	// #576460752303423487
   29314:	cmp	x8, x9
   29318:	b.hi	29330 <printf_parse@@Base+0x650>  // b.pmore
   2931c:	ldur	x8, [x29, #-64]
   29320:	mov	x9, #0x20                  	// #32
   29324:	mul	x8, x8, x9
   29328:	str	x8, [sp, #120]
   2932c:	b	29338 <printf_parse@@Base+0x658>
   29330:	mov	x8, #0xffffffffffffffff    	// #-1
   29334:	str	x8, [sp, #120]
   29338:	ldr	x8, [sp, #120]
   2933c:	stur	x8, [x29, #-152]
   29340:	ldur	x8, [x29, #-152]
   29344:	mov	x9, #0xffffffffffffffff    	// #-1
   29348:	cmp	x8, x9
   2934c:	b.ne	29354 <printf_parse@@Base+0x674>  // b.any
   29350:	b	2a1b4 <printf_parse@@Base+0x14d4>
   29354:	ldur	x8, [x29, #-32]
   29358:	ldr	x8, [x8, #8]
   2935c:	ldur	x9, [x29, #-32]
   29360:	add	x9, x9, #0x10
   29364:	cmp	x8, x9
   29368:	b.eq	29384 <printf_parse@@Base+0x6a4>  // b.none
   2936c:	ldur	x8, [x29, #-32]
   29370:	ldr	x0, [x8, #8]
   29374:	ldur	x1, [x29, #-152]
   29378:	bl	af40 <realloc@plt>
   2937c:	str	x0, [sp, #112]
   29380:	b	29390 <printf_parse@@Base+0x6b0>
   29384:	ldur	x0, [x29, #-152]
   29388:	bl	af10 <malloc@plt>
   2938c:	str	x0, [sp, #112]
   29390:	ldr	x8, [sp, #112]
   29394:	stur	x8, [x29, #-160]
   29398:	ldur	x8, [x29, #-160]
   2939c:	cbnz	x8, 293a4 <printf_parse@@Base+0x6c4>
   293a0:	b	2a1b4 <printf_parse@@Base+0x14d4>
   293a4:	ldur	x8, [x29, #-32]
   293a8:	ldr	x8, [x8, #8]
   293ac:	ldur	x9, [x29, #-32]
   293b0:	add	x9, x9, #0x10
   293b4:	cmp	x8, x9
   293b8:	b.ne	293dc <printf_parse@@Base+0x6fc>  // b.any
   293bc:	ldur	x0, [x29, #-160]
   293c0:	ldur	x8, [x29, #-32]
   293c4:	ldr	x1, [x8, #8]
   293c8:	ldur	x8, [x29, #-32]
   293cc:	ldr	x8, [x8]
   293d0:	mov	x9, #0x20                  	// #32
   293d4:	mul	x2, x8, x9
   293d8:	bl	af30 <memcpy@plt>
   293dc:	ldur	x8, [x29, #-160]
   293e0:	ldur	x9, [x29, #-32]
   293e4:	str	x8, [x9, #8]
   293e8:	ldur	x8, [x29, #-32]
   293ec:	ldr	x8, [x8]
   293f0:	ldur	x9, [x29, #-144]
   293f4:	cmp	x8, x9
   293f8:	b.hi	29428 <printf_parse@@Base+0x748>  // b.pmore
   293fc:	ldur	x8, [x29, #-32]
   29400:	ldr	x8, [x8, #8]
   29404:	ldur	x9, [x29, #-32]
   29408:	ldr	x10, [x9]
   2940c:	add	x11, x10, #0x1
   29410:	str	x11, [x9]
   29414:	mov	x9, #0x20                  	// #32
   29418:	mul	x9, x9, x10
   2941c:	mov	w12, wzr
   29420:	str	w12, [x8, x9]
   29424:	b	293e8 <printf_parse@@Base+0x708>
   29428:	ldur	x8, [x29, #-32]
   2942c:	ldr	x8, [x8, #8]
   29430:	ldur	x9, [x29, #-144]
   29434:	mov	x10, #0x20                  	// #32
   29438:	mul	x9, x10, x9
   2943c:	ldr	w11, [x8, x9]
   29440:	cbnz	w11, 29464 <printf_parse@@Base+0x784>
   29444:	ldur	x8, [x29, #-32]
   29448:	ldr	x8, [x8, #8]
   2944c:	ldur	x9, [x29, #-144]
   29450:	mov	x10, #0x20                  	// #32
   29454:	mul	x9, x10, x9
   29458:	mov	w11, #0x5                   	// #5
   2945c:	str	w11, [x8, x9]
   29460:	b	29488 <printf_parse@@Base+0x7a8>
   29464:	ldur	x8, [x29, #-32]
   29468:	ldr	x8, [x8, #8]
   2946c:	ldur	x9, [x29, #-144]
   29470:	mov	x10, #0x20                  	// #32
   29474:	mul	x9, x10, x9
   29478:	ldr	w11, [x8, x9]
   2947c:	cmp	w11, #0x5
   29480:	b.eq	29488 <printf_parse@@Base+0x7a8>  // b.none
   29484:	b	2a154 <printf_parse@@Base+0x1474>
   29488:	b	2953c <printf_parse@@Base+0x85c>
   2948c:	ldur	x8, [x29, #-40]
   29490:	ldrb	w9, [x8]
   29494:	cmp	w9, #0x30
   29498:	b.lt	2953c <printf_parse@@Base+0x85c>  // b.tstop
   2949c:	ldur	x8, [x29, #-40]
   294a0:	ldrb	w9, [x8]
   294a4:	cmp	w9, #0x39
   294a8:	b.gt	2953c <printf_parse@@Base+0x85c>
   294ac:	ldur	x8, [x29, #-40]
   294b0:	ldur	x9, [x29, #-104]
   294b4:	str	x8, [x9, #24]
   294b8:	ldur	x8, [x29, #-40]
   294bc:	ldrb	w9, [x8]
   294c0:	mov	w10, #0x0                   	// #0
   294c4:	cmp	w9, #0x30
   294c8:	str	w10, [sp, #108]
   294cc:	b.lt	294e4 <printf_parse@@Base+0x804>  // b.tstop
   294d0:	ldur	x8, [x29, #-40]
   294d4:	ldrb	w9, [x8]
   294d8:	cmp	w9, #0x39
   294dc:	cset	w9, le
   294e0:	str	w9, [sp, #108]
   294e4:	ldr	w8, [sp, #108]
   294e8:	tbnz	w8, #0, 294f0 <printf_parse@@Base+0x810>
   294ec:	b	29500 <printf_parse@@Base+0x820>
   294f0:	ldur	x8, [x29, #-40]
   294f4:	add	x8, x8, #0x1
   294f8:	stur	x8, [x29, #-40]
   294fc:	b	294b8 <printf_parse@@Base+0x7d8>
   29500:	ldur	x8, [x29, #-40]
   29504:	ldur	x9, [x29, #-104]
   29508:	str	x8, [x9, #32]
   2950c:	ldur	x8, [x29, #-104]
   29510:	ldr	x8, [x8, #32]
   29514:	ldur	x9, [x29, #-104]
   29518:	ldr	x9, [x9, #24]
   2951c:	subs	x8, x8, x9
   29520:	stur	x8, [x29, #-168]
   29524:	ldur	x8, [x29, #-72]
   29528:	ldur	x9, [x29, #-168]
   2952c:	cmp	x8, x9
   29530:	b.cs	2953c <printf_parse@@Base+0x85c>  // b.hs, b.nlast
   29534:	ldur	x8, [x29, #-168]
   29538:	stur	x8, [x29, #-72]
   2953c:	ldur	x8, [x29, #-40]
   29540:	ldrb	w9, [x8]
   29544:	cmp	w9, #0x2e
   29548:	b.ne	299d4 <printf_parse@@Base+0xcf4>  // b.any
   2954c:	ldur	x8, [x29, #-40]
   29550:	add	x8, x8, #0x1
   29554:	stur	x8, [x29, #-40]
   29558:	ldur	x8, [x29, #-40]
   2955c:	ldrb	w9, [x8]
   29560:	cmp	w9, #0x2a
   29564:	b.ne	2993c <printf_parse@@Base+0xc5c>  // b.any
   29568:	ldur	x8, [x29, #-40]
   2956c:	mov	x9, #0xffffffffffffffff    	// #-1
   29570:	add	x8, x8, x9
   29574:	ldur	x9, [x29, #-104]
   29578:	str	x8, [x9, #48]
   2957c:	ldur	x8, [x29, #-40]
   29580:	add	x8, x8, #0x1
   29584:	stur	x8, [x29, #-40]
   29588:	ldur	x8, [x29, #-40]
   2958c:	ldur	x9, [x29, #-104]
   29590:	str	x8, [x9, #56]
   29594:	ldur	x8, [x29, #-80]
   29598:	cmp	x8, #0x2
   2959c:	b.cs	295a8 <printf_parse@@Base+0x8c8>  // b.hs, b.nlast
   295a0:	mov	x8, #0x2                   	// #2
   295a4:	stur	x8, [x29, #-80]
   295a8:	ldur	x8, [x29, #-40]
   295ac:	ldrb	w9, [x8]
   295b0:	cmp	w9, #0x30
   295b4:	b.lt	2970c <printf_parse@@Base+0xa2c>  // b.tstop
   295b8:	ldur	x8, [x29, #-40]
   295bc:	ldrb	w9, [x8]
   295c0:	cmp	w9, #0x39
   295c4:	b.gt	2970c <printf_parse@@Base+0xa2c>
   295c8:	ldur	x8, [x29, #-40]
   295cc:	stur	x8, [x29, #-176]
   295d0:	ldur	x8, [x29, #-176]
   295d4:	ldrb	w9, [x8]
   295d8:	mov	w10, #0x0                   	// #0
   295dc:	cmp	w9, #0x30
   295e0:	str	w10, [sp, #104]
   295e4:	b.lt	295fc <printf_parse@@Base+0x91c>  // b.tstop
   295e8:	ldur	x8, [x29, #-176]
   295ec:	ldrb	w9, [x8]
   295f0:	cmp	w9, #0x39
   295f4:	cset	w9, le
   295f8:	str	w9, [sp, #104]
   295fc:	ldr	w8, [sp, #104]
   29600:	tbnz	w8, #0, 29608 <printf_parse@@Base+0x928>
   29604:	b	29618 <printf_parse@@Base+0x938>
   29608:	ldur	x8, [x29, #-176]
   2960c:	add	x8, x8, #0x1
   29610:	stur	x8, [x29, #-176]
   29614:	b	295d0 <printf_parse@@Base+0x8f0>
   29618:	ldur	x8, [x29, #-176]
   2961c:	ldrb	w9, [x8]
   29620:	cmp	w9, #0x24
   29624:	b.ne	2970c <printf_parse@@Base+0xa2c>  // b.any
   29628:	stur	xzr, [x29, #-184]
   2962c:	ldur	x8, [x29, #-40]
   29630:	stur	x8, [x29, #-176]
   29634:	ldur	x8, [x29, #-176]
   29638:	ldrb	w9, [x8]
   2963c:	mov	w10, #0x0                   	// #0
   29640:	cmp	w9, #0x30
   29644:	str	w10, [sp, #100]
   29648:	b.lt	29660 <printf_parse@@Base+0x980>  // b.tstop
   2964c:	ldur	x8, [x29, #-176]
   29650:	ldrb	w9, [x8]
   29654:	cmp	w9, #0x39
   29658:	cset	w9, le
   2965c:	str	w9, [sp, #100]
   29660:	ldr	w8, [sp, #100]
   29664:	tbnz	w8, #0, 2966c <printf_parse@@Base+0x98c>
   29668:	b	296d0 <printf_parse@@Base+0x9f0>
   2966c:	ldur	x8, [x29, #-184]
   29670:	mov	x9, #0x9999999999999999    	// #-7378697629483820647
   29674:	movk	x9, #0x1999, lsl #48
   29678:	cmp	x8, x9
   2967c:	b.hi	29694 <printf_parse@@Base+0x9b4>  // b.pmore
   29680:	ldur	x8, [x29, #-184]
   29684:	mov	x9, #0xa                   	// #10
   29688:	mul	x8, x8, x9
   2968c:	str	x8, [sp, #88]
   29690:	b	2969c <printf_parse@@Base+0x9bc>
   29694:	mov	x8, #0xffffffffffffffff    	// #-1
   29698:	str	x8, [sp, #88]
   2969c:	ldr	x8, [sp, #88]
   296a0:	ldur	x9, [x29, #-176]
   296a4:	ldrb	w10, [x9]
   296a8:	subs	w10, w10, #0x30
   296ac:	mov	w0, w10
   296b0:	sxtw	x1, w0
   296b4:	mov	x0, x8
   296b8:	bl	b190 <xsum@plt>
   296bc:	stur	x0, [x29, #-184]
   296c0:	ldur	x8, [x29, #-176]
   296c4:	add	x8, x8, #0x1
   296c8:	stur	x8, [x29, #-176]
   296cc:	b	29634 <printf_parse@@Base+0x954>
   296d0:	ldur	x8, [x29, #-184]
   296d4:	cbnz	x8, 296dc <printf_parse@@Base+0x9fc>
   296d8:	b	2a154 <printf_parse@@Base+0x1474>
   296dc:	ldur	x8, [x29, #-184]
   296e0:	mov	x9, #0xffffffffffffffff    	// #-1
   296e4:	cmp	x8, x9
   296e8:	b.ne	296f0 <printf_parse@@Base+0xa10>  // b.any
   296ec:	b	2a154 <printf_parse@@Base+0x1474>
   296f0:	ldur	x8, [x29, #-184]
   296f4:	subs	x8, x8, #0x1
   296f8:	ldur	x9, [x29, #-104]
   296fc:	str	x8, [x9, #64]
   29700:	ldur	x8, [x29, #-176]
   29704:	add	x8, x8, #0x1
   29708:	stur	x8, [x29, #-40]
   2970c:	ldur	x8, [x29, #-104]
   29710:	ldr	x8, [x8, #64]
   29714:	mov	x9, #0xffffffffffffffff    	// #-1
   29718:	cmp	x8, x9
   2971c:	b.ne	2974c <printf_parse@@Base+0xa6c>  // b.any
   29720:	ldur	x8, [x29, #-48]
   29724:	add	x9, x8, #0x1
   29728:	stur	x9, [x29, #-48]
   2972c:	ldur	x9, [x29, #-104]
   29730:	str	x8, [x9, #64]
   29734:	ldur	x8, [x29, #-104]
   29738:	ldr	x8, [x8, #64]
   2973c:	mov	x9, #0xffffffffffffffff    	// #-1
   29740:	cmp	x8, x9
   29744:	b.ne	2974c <printf_parse@@Base+0xa6c>  // b.any
   29748:	b	2a154 <printf_parse@@Base+0x1474>
   2974c:	ldur	x8, [x29, #-104]
   29750:	ldr	x8, [x8, #64]
   29754:	stur	x8, [x29, #-192]
   29758:	ldur	x8, [x29, #-192]
   2975c:	ldur	x9, [x29, #-64]
   29760:	cmp	x8, x9
   29764:	b.cc	29898 <printf_parse@@Base+0xbb8>  // b.lo, b.ul, b.last
   29768:	ldur	x8, [x29, #-64]
   2976c:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
   29770:	cmp	x8, x9
   29774:	b.hi	2978c <printf_parse@@Base+0xaac>  // b.pmore
   29778:	ldur	x8, [x29, #-64]
   2977c:	mov	x9, #0x2                   	// #2
   29780:	mul	x8, x8, x9
   29784:	str	x8, [sp, #80]
   29788:	b	29794 <printf_parse@@Base+0xab4>
   2978c:	mov	x8, #0xffffffffffffffff    	// #-1
   29790:	str	x8, [sp, #80]
   29794:	ldr	x8, [sp, #80]
   29798:	stur	x8, [x29, #-64]
   2979c:	ldur	x8, [x29, #-64]
   297a0:	ldur	x9, [x29, #-192]
   297a4:	cmp	x8, x9
   297a8:	b.hi	297bc <printf_parse@@Base+0xadc>  // b.pmore
   297ac:	ldur	x0, [x29, #-192]
   297b0:	mov	x1, #0x1                   	// #1
   297b4:	bl	b190 <xsum@plt>
   297b8:	stur	x0, [x29, #-64]
   297bc:	ldur	x8, [x29, #-64]
   297c0:	mov	x9, #0x7ffffffffffffff     	// #576460752303423487
   297c4:	cmp	x8, x9
   297c8:	b.hi	297e0 <printf_parse@@Base+0xb00>  // b.pmore
   297cc:	ldur	x8, [x29, #-64]
   297d0:	mov	x9, #0x20                  	// #32
   297d4:	mul	x8, x8, x9
   297d8:	str	x8, [sp, #72]
   297dc:	b	297e8 <printf_parse@@Base+0xb08>
   297e0:	mov	x8, #0xffffffffffffffff    	// #-1
   297e4:	str	x8, [sp, #72]
   297e8:	ldr	x8, [sp, #72]
   297ec:	stur	x8, [x29, #-200]
   297f0:	ldur	x8, [x29, #-200]
   297f4:	mov	x9, #0xffffffffffffffff    	// #-1
   297f8:	cmp	x8, x9
   297fc:	b.ne	29804 <printf_parse@@Base+0xb24>  // b.any
   29800:	b	2a1b4 <printf_parse@@Base+0x14d4>
   29804:	ldur	x8, [x29, #-32]
   29808:	ldr	x8, [x8, #8]
   2980c:	ldur	x9, [x29, #-32]
   29810:	add	x9, x9, #0x10
   29814:	cmp	x8, x9
   29818:	b.eq	29834 <printf_parse@@Base+0xb54>  // b.none
   2981c:	ldur	x8, [x29, #-32]
   29820:	ldr	x0, [x8, #8]
   29824:	ldur	x1, [x29, #-200]
   29828:	bl	af40 <realloc@plt>
   2982c:	str	x0, [sp, #64]
   29830:	b	29840 <printf_parse@@Base+0xb60>
   29834:	ldur	x0, [x29, #-200]
   29838:	bl	af10 <malloc@plt>
   2983c:	str	x0, [sp, #64]
   29840:	ldr	x8, [sp, #64]
   29844:	stur	x8, [x29, #-208]
   29848:	ldur	x8, [x29, #-208]
   2984c:	cbnz	x8, 29854 <printf_parse@@Base+0xb74>
   29850:	b	2a1b4 <printf_parse@@Base+0x14d4>
   29854:	ldur	x8, [x29, #-32]
   29858:	ldr	x8, [x8, #8]
   2985c:	ldur	x9, [x29, #-32]
   29860:	add	x9, x9, #0x10
   29864:	cmp	x8, x9
   29868:	b.ne	2988c <printf_parse@@Base+0xbac>  // b.any
   2986c:	ldur	x0, [x29, #-208]
   29870:	ldur	x8, [x29, #-32]
   29874:	ldr	x1, [x8, #8]
   29878:	ldur	x8, [x29, #-32]
   2987c:	ldr	x8, [x8]
   29880:	mov	x9, #0x20                  	// #32
   29884:	mul	x2, x8, x9
   29888:	bl	af30 <memcpy@plt>
   2988c:	ldur	x8, [x29, #-208]
   29890:	ldur	x9, [x29, #-32]
   29894:	str	x8, [x9, #8]
   29898:	ldur	x8, [x29, #-32]
   2989c:	ldr	x8, [x8]
   298a0:	ldur	x9, [x29, #-192]
   298a4:	cmp	x8, x9
   298a8:	b.hi	298d8 <printf_parse@@Base+0xbf8>  // b.pmore
   298ac:	ldur	x8, [x29, #-32]
   298b0:	ldr	x8, [x8, #8]
   298b4:	ldur	x9, [x29, #-32]
   298b8:	ldr	x10, [x9]
   298bc:	add	x11, x10, #0x1
   298c0:	str	x11, [x9]
   298c4:	mov	x9, #0x20                  	// #32
   298c8:	mul	x9, x9, x10
   298cc:	mov	w12, wzr
   298d0:	str	w12, [x8, x9]
   298d4:	b	29898 <printf_parse@@Base+0xbb8>
   298d8:	ldur	x8, [x29, #-32]
   298dc:	ldr	x8, [x8, #8]
   298e0:	ldur	x9, [x29, #-192]
   298e4:	mov	x10, #0x20                  	// #32
   298e8:	mul	x9, x10, x9
   298ec:	ldr	w11, [x8, x9]
   298f0:	cbnz	w11, 29914 <printf_parse@@Base+0xc34>
   298f4:	ldur	x8, [x29, #-32]
   298f8:	ldr	x8, [x8, #8]
   298fc:	ldur	x9, [x29, #-192]
   29900:	mov	x10, #0x20                  	// #32
   29904:	mul	x9, x10, x9
   29908:	mov	w11, #0x5                   	// #5
   2990c:	str	w11, [x8, x9]
   29910:	b	29938 <printf_parse@@Base+0xc58>
   29914:	ldur	x8, [x29, #-32]
   29918:	ldr	x8, [x8, #8]
   2991c:	ldur	x9, [x29, #-192]
   29920:	mov	x10, #0x20                  	// #32
   29924:	mul	x9, x10, x9
   29928:	ldr	w11, [x8, x9]
   2992c:	cmp	w11, #0x5
   29930:	b.eq	29938 <printf_parse@@Base+0xc58>  // b.none
   29934:	b	2a154 <printf_parse@@Base+0x1474>
   29938:	b	299d4 <printf_parse@@Base+0xcf4>
   2993c:	ldur	x8, [x29, #-40]
   29940:	mov	x9, #0xffffffffffffffff    	// #-1
   29944:	add	x8, x8, x9
   29948:	ldur	x9, [x29, #-104]
   2994c:	str	x8, [x9, #48]
   29950:	ldur	x8, [x29, #-40]
   29954:	ldrb	w9, [x8]
   29958:	mov	w10, #0x0                   	// #0
   2995c:	cmp	w9, #0x30
   29960:	str	w10, [sp, #60]
   29964:	b.lt	2997c <printf_parse@@Base+0xc9c>  // b.tstop
   29968:	ldur	x8, [x29, #-40]
   2996c:	ldrb	w9, [x8]
   29970:	cmp	w9, #0x39
   29974:	cset	w9, le
   29978:	str	w9, [sp, #60]
   2997c:	ldr	w8, [sp, #60]
   29980:	tbnz	w8, #0, 29988 <printf_parse@@Base+0xca8>
   29984:	b	29998 <printf_parse@@Base+0xcb8>
   29988:	ldur	x8, [x29, #-40]
   2998c:	add	x8, x8, #0x1
   29990:	stur	x8, [x29, #-40]
   29994:	b	29950 <printf_parse@@Base+0xc70>
   29998:	ldur	x8, [x29, #-40]
   2999c:	ldur	x9, [x29, #-104]
   299a0:	str	x8, [x9, #56]
   299a4:	ldur	x8, [x29, #-104]
   299a8:	ldr	x8, [x8, #56]
   299ac:	ldur	x9, [x29, #-104]
   299b0:	ldr	x9, [x9, #48]
   299b4:	subs	x8, x8, x9
   299b8:	str	x8, [sp, #216]
   299bc:	ldur	x8, [x29, #-80]
   299c0:	ldr	x9, [sp, #216]
   299c4:	cmp	x8, x9
   299c8:	b.cs	299d4 <printf_parse@@Base+0xcf4>  // b.hs, b.nlast
   299cc:	ldr	x8, [sp, #216]
   299d0:	stur	x8, [x29, #-80]
   299d4:	str	wzr, [sp, #208]
   299d8:	ldur	x8, [x29, #-40]
   299dc:	ldrb	w9, [x8]
   299e0:	cmp	w9, #0x68
   299e4:	b.ne	29a14 <printf_parse@@Base+0xd34>  // b.any
   299e8:	ldr	w8, [sp, #208]
   299ec:	mov	w9, #0x1                   	// #1
   299f0:	and	w8, w8, #0x1
   299f4:	lsl	w8, w9, w8
   299f8:	ldr	w9, [sp, #208]
   299fc:	orr	w8, w9, w8
   29a00:	str	w8, [sp, #208]
   29a04:	ldur	x10, [x29, #-40]
   29a08:	add	x10, x10, #0x1
   29a0c:	stur	x10, [x29, #-40]
   29a10:	b	29b04 <printf_parse@@Base+0xe24>
   29a14:	ldur	x8, [x29, #-40]
   29a18:	ldrb	w9, [x8]
   29a1c:	cmp	w9, #0x4c
   29a20:	b.ne	29a40 <printf_parse@@Base+0xd60>  // b.any
   29a24:	ldr	w8, [sp, #208]
   29a28:	orr	w8, w8, #0x4
   29a2c:	str	w8, [sp, #208]
   29a30:	ldur	x9, [x29, #-40]
   29a34:	add	x9, x9, #0x1
   29a38:	stur	x9, [x29, #-40]
   29a3c:	b	29b04 <printf_parse@@Base+0xe24>
   29a40:	ldur	x8, [x29, #-40]
   29a44:	ldrb	w9, [x8]
   29a48:	cmp	w9, #0x6c
   29a4c:	b.ne	29a6c <printf_parse@@Base+0xd8c>  // b.any
   29a50:	ldr	w8, [sp, #208]
   29a54:	add	w8, w8, #0x8
   29a58:	str	w8, [sp, #208]
   29a5c:	ldur	x9, [x29, #-40]
   29a60:	add	x9, x9, #0x1
   29a64:	stur	x9, [x29, #-40]
   29a68:	b	29b04 <printf_parse@@Base+0xe24>
   29a6c:	ldur	x8, [x29, #-40]
   29a70:	ldrb	w9, [x8]
   29a74:	cmp	w9, #0x6a
   29a78:	b.ne	29a98 <printf_parse@@Base+0xdb8>  // b.any
   29a7c:	ldr	w8, [sp, #208]
   29a80:	add	w8, w8, #0x8
   29a84:	str	w8, [sp, #208]
   29a88:	ldur	x9, [x29, #-40]
   29a8c:	add	x9, x9, #0x1
   29a90:	stur	x9, [x29, #-40]
   29a94:	b	29b04 <printf_parse@@Base+0xe24>
   29a98:	ldur	x8, [x29, #-40]
   29a9c:	ldrb	w9, [x8]
   29aa0:	cmp	w9, #0x7a
   29aa4:	b.eq	29ab8 <printf_parse@@Base+0xdd8>  // b.none
   29aa8:	ldur	x8, [x29, #-40]
   29aac:	ldrb	w9, [x8]
   29ab0:	cmp	w9, #0x5a
   29ab4:	b.ne	29ad4 <printf_parse@@Base+0xdf4>  // b.any
   29ab8:	ldr	w8, [sp, #208]
   29abc:	add	w8, w8, #0x8
   29ac0:	str	w8, [sp, #208]
   29ac4:	ldur	x9, [x29, #-40]
   29ac8:	add	x9, x9, #0x1
   29acc:	stur	x9, [x29, #-40]
   29ad0:	b	29b04 <printf_parse@@Base+0xe24>
   29ad4:	ldur	x8, [x29, #-40]
   29ad8:	ldrb	w9, [x8]
   29adc:	cmp	w9, #0x74
   29ae0:	b.ne	29b00 <printf_parse@@Base+0xe20>  // b.any
   29ae4:	ldr	w8, [sp, #208]
   29ae8:	add	w8, w8, #0x8
   29aec:	str	w8, [sp, #208]
   29af0:	ldur	x9, [x29, #-40]
   29af4:	add	x9, x9, #0x1
   29af8:	stur	x9, [x29, #-40]
   29afc:	b	29b04 <printf_parse@@Base+0xe24>
   29b00:	b	29b08 <printf_parse@@Base+0xe28>
   29b04:	b	299d8 <printf_parse@@Base+0xcf8>
   29b08:	ldur	x8, [x29, #-40]
   29b0c:	add	x9, x8, #0x1
   29b10:	stur	x9, [x29, #-40]
   29b14:	ldrb	w10, [x8]
   29b18:	sturb	w10, [x29, #-81]
   29b1c:	ldurb	w10, [x29, #-81]
   29b20:	subs	w10, w10, #0x25
   29b24:	mov	w8, w10
   29b28:	ubfx	x8, x8, #0, #32
   29b2c:	cmp	x8, #0x53
   29b30:	str	x8, [sp, #48]
   29b34:	b.hi	29d6c <printf_parse@@Base+0x108c>  // b.pmore
   29b38:	adrp	x8, 47000 <vasnprintf@@Base+0x4e4c>
   29b3c:	add	x8, x8, #0x30
   29b40:	ldr	x11, [sp, #48]
   29b44:	ldrsw	x10, [x8, x11, lsl #2]
   29b48:	add	x9, x8, x10
   29b4c:	br	x9
   29b50:	ldr	w8, [sp, #208]
   29b54:	cmp	w8, #0x10
   29b58:	b.ge	29b68 <printf_parse@@Base+0xe88>  // b.tcont
   29b5c:	ldr	w8, [sp, #208]
   29b60:	and	w8, w8, #0x4
   29b64:	cbz	w8, 29b74 <printf_parse@@Base+0xe94>
   29b68:	mov	w8, #0x9                   	// #9
   29b6c:	str	w8, [sp, #212]
   29b70:	b	29bc4 <printf_parse@@Base+0xee4>
   29b74:	ldr	w8, [sp, #208]
   29b78:	cmp	w8, #0x8
   29b7c:	b.lt	29b8c <printf_parse@@Base+0xeac>  // b.tstop
   29b80:	mov	w8, #0x7                   	// #7
   29b84:	str	w8, [sp, #212]
   29b88:	b	29bc4 <printf_parse@@Base+0xee4>
   29b8c:	ldr	w8, [sp, #208]
   29b90:	and	w8, w8, #0x2
   29b94:	cbz	w8, 29ba4 <printf_parse@@Base+0xec4>
   29b98:	mov	w8, #0x1                   	// #1
   29b9c:	str	w8, [sp, #212]
   29ba0:	b	29bc4 <printf_parse@@Base+0xee4>
   29ba4:	ldr	w8, [sp, #208]
   29ba8:	and	w8, w8, #0x1
   29bac:	cbz	w8, 29bbc <printf_parse@@Base+0xedc>
   29bb0:	mov	w8, #0x3                   	// #3
   29bb4:	str	w8, [sp, #212]
   29bb8:	b	29bc4 <printf_parse@@Base+0xee4>
   29bbc:	mov	w8, #0x5                   	// #5
   29bc0:	str	w8, [sp, #212]
   29bc4:	b	29d70 <printf_parse@@Base+0x1090>
   29bc8:	ldr	w8, [sp, #208]
   29bcc:	cmp	w8, #0x10
   29bd0:	b.ge	29be0 <printf_parse@@Base+0xf00>  // b.tcont
   29bd4:	ldr	w8, [sp, #208]
   29bd8:	and	w8, w8, #0x4
   29bdc:	cbz	w8, 29bec <printf_parse@@Base+0xf0c>
   29be0:	mov	w8, #0xa                   	// #10
   29be4:	str	w8, [sp, #212]
   29be8:	b	29c3c <printf_parse@@Base+0xf5c>
   29bec:	ldr	w8, [sp, #208]
   29bf0:	cmp	w8, #0x8
   29bf4:	b.lt	29c04 <printf_parse@@Base+0xf24>  // b.tstop
   29bf8:	mov	w8, #0x8                   	// #8
   29bfc:	str	w8, [sp, #212]
   29c00:	b	29c3c <printf_parse@@Base+0xf5c>
   29c04:	ldr	w8, [sp, #208]
   29c08:	and	w8, w8, #0x2
   29c0c:	cbz	w8, 29c1c <printf_parse@@Base+0xf3c>
   29c10:	mov	w8, #0x2                   	// #2
   29c14:	str	w8, [sp, #212]
   29c18:	b	29c3c <printf_parse@@Base+0xf5c>
   29c1c:	ldr	w8, [sp, #208]
   29c20:	and	w8, w8, #0x1
   29c24:	cbz	w8, 29c34 <printf_parse@@Base+0xf54>
   29c28:	mov	w8, #0x4                   	// #4
   29c2c:	str	w8, [sp, #212]
   29c30:	b	29c3c <printf_parse@@Base+0xf5c>
   29c34:	mov	w8, #0x6                   	// #6
   29c38:	str	w8, [sp, #212]
   29c3c:	b	29d70 <printf_parse@@Base+0x1090>
   29c40:	ldr	w8, [sp, #208]
   29c44:	cmp	w8, #0x10
   29c48:	b.ge	29c58 <printf_parse@@Base+0xf78>  // b.tcont
   29c4c:	ldr	w8, [sp, #208]
   29c50:	and	w8, w8, #0x4
   29c54:	cbz	w8, 29c64 <printf_parse@@Base+0xf84>
   29c58:	mov	w8, #0xc                   	// #12
   29c5c:	str	w8, [sp, #212]
   29c60:	b	29c6c <printf_parse@@Base+0xf8c>
   29c64:	mov	w8, #0xb                   	// #11
   29c68:	str	w8, [sp, #212]
   29c6c:	b	29d70 <printf_parse@@Base+0x1090>
   29c70:	ldr	w8, [sp, #208]
   29c74:	cmp	w8, #0x8
   29c78:	b.lt	29c88 <printf_parse@@Base+0xfa8>  // b.tstop
   29c7c:	mov	w8, #0xe                   	// #14
   29c80:	str	w8, [sp, #212]
   29c84:	b	29c90 <printf_parse@@Base+0xfb0>
   29c88:	mov	w8, #0xd                   	// #13
   29c8c:	str	w8, [sp, #212]
   29c90:	b	29d70 <printf_parse@@Base+0x1090>
   29c94:	mov	w8, #0xe                   	// #14
   29c98:	str	w8, [sp, #212]
   29c9c:	mov	w8, #0x63                  	// #99
   29ca0:	sturb	w8, [x29, #-81]
   29ca4:	b	29d70 <printf_parse@@Base+0x1090>
   29ca8:	ldr	w8, [sp, #208]
   29cac:	cmp	w8, #0x8
   29cb0:	b.lt	29cc0 <printf_parse@@Base+0xfe0>  // b.tstop
   29cb4:	mov	w8, #0x10                  	// #16
   29cb8:	str	w8, [sp, #212]
   29cbc:	b	29cc8 <printf_parse@@Base+0xfe8>
   29cc0:	mov	w8, #0xf                   	// #15
   29cc4:	str	w8, [sp, #212]
   29cc8:	b	29d70 <printf_parse@@Base+0x1090>
   29ccc:	mov	w8, #0x10                  	// #16
   29cd0:	str	w8, [sp, #212]
   29cd4:	mov	w8, #0x73                  	// #115
   29cd8:	sturb	w8, [x29, #-81]
   29cdc:	b	29d70 <printf_parse@@Base+0x1090>
   29ce0:	mov	w8, #0x11                  	// #17
   29ce4:	str	w8, [sp, #212]
   29ce8:	b	29d70 <printf_parse@@Base+0x1090>
   29cec:	ldr	w8, [sp, #208]
   29cf0:	cmp	w8, #0x10
   29cf4:	b.ge	29d04 <printf_parse@@Base+0x1024>  // b.tcont
   29cf8:	ldr	w8, [sp, #208]
   29cfc:	and	w8, w8, #0x4
   29d00:	cbz	w8, 29d10 <printf_parse@@Base+0x1030>
   29d04:	mov	w8, #0x16                  	// #22
   29d08:	str	w8, [sp, #212]
   29d0c:	b	29d60 <printf_parse@@Base+0x1080>
   29d10:	ldr	w8, [sp, #208]
   29d14:	cmp	w8, #0x8
   29d18:	b.lt	29d28 <printf_parse@@Base+0x1048>  // b.tstop
   29d1c:	mov	w8, #0x15                  	// #21
   29d20:	str	w8, [sp, #212]
   29d24:	b	29d60 <printf_parse@@Base+0x1080>
   29d28:	ldr	w8, [sp, #208]
   29d2c:	and	w8, w8, #0x2
   29d30:	cbz	w8, 29d40 <printf_parse@@Base+0x1060>
   29d34:	mov	w8, #0x12                  	// #18
   29d38:	str	w8, [sp, #212]
   29d3c:	b	29d60 <printf_parse@@Base+0x1080>
   29d40:	ldr	w8, [sp, #208]
   29d44:	and	w8, w8, #0x1
   29d48:	cbz	w8, 29d58 <printf_parse@@Base+0x1078>
   29d4c:	mov	w8, #0x13                  	// #19
   29d50:	str	w8, [sp, #212]
   29d54:	b	29d60 <printf_parse@@Base+0x1080>
   29d58:	mov	w8, #0x14                  	// #20
   29d5c:	str	w8, [sp, #212]
   29d60:	b	29d70 <printf_parse@@Base+0x1090>
   29d64:	str	wzr, [sp, #212]
   29d68:	b	29d70 <printf_parse@@Base+0x1090>
   29d6c:	b	2a154 <printf_parse@@Base+0x1474>
   29d70:	ldr	w8, [sp, #212]
   29d74:	cbz	w8, 29fb4 <printf_parse@@Base+0x12d4>
   29d78:	ldur	x8, [x29, #-96]
   29d7c:	ldur	x9, [x29, #-104]
   29d80:	str	x8, [x9, #80]
   29d84:	ldur	x8, [x29, #-104]
   29d88:	ldr	x8, [x8, #80]
   29d8c:	mov	x9, #0xffffffffffffffff    	// #-1
   29d90:	cmp	x8, x9
   29d94:	b.ne	29dc4 <printf_parse@@Base+0x10e4>  // b.any
   29d98:	ldur	x8, [x29, #-48]
   29d9c:	add	x9, x8, #0x1
   29da0:	stur	x9, [x29, #-48]
   29da4:	ldur	x9, [x29, #-104]
   29da8:	str	x8, [x9, #80]
   29dac:	ldur	x8, [x29, #-104]
   29db0:	ldr	x8, [x8, #80]
   29db4:	mov	x9, #0xffffffffffffffff    	// #-1
   29db8:	cmp	x8, x9
   29dbc:	b.ne	29dc4 <printf_parse@@Base+0x10e4>  // b.any
   29dc0:	b	2a154 <printf_parse@@Base+0x1474>
   29dc4:	ldur	x8, [x29, #-104]
   29dc8:	ldr	x8, [x8, #80]
   29dcc:	str	x8, [sp, #200]
   29dd0:	ldr	x8, [sp, #200]
   29dd4:	ldur	x9, [x29, #-64]
   29dd8:	cmp	x8, x9
   29ddc:	b.cc	29f10 <printf_parse@@Base+0x1230>  // b.lo, b.ul, b.last
   29de0:	ldur	x8, [x29, #-64]
   29de4:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
   29de8:	cmp	x8, x9
   29dec:	b.hi	29e04 <printf_parse@@Base+0x1124>  // b.pmore
   29df0:	ldur	x8, [x29, #-64]
   29df4:	mov	x9, #0x2                   	// #2
   29df8:	mul	x8, x8, x9
   29dfc:	str	x8, [sp, #40]
   29e00:	b	29e0c <printf_parse@@Base+0x112c>
   29e04:	mov	x8, #0xffffffffffffffff    	// #-1
   29e08:	str	x8, [sp, #40]
   29e0c:	ldr	x8, [sp, #40]
   29e10:	stur	x8, [x29, #-64]
   29e14:	ldur	x8, [x29, #-64]
   29e18:	ldr	x9, [sp, #200]
   29e1c:	cmp	x8, x9
   29e20:	b.hi	29e34 <printf_parse@@Base+0x1154>  // b.pmore
   29e24:	ldr	x0, [sp, #200]
   29e28:	mov	x1, #0x1                   	// #1
   29e2c:	bl	b190 <xsum@plt>
   29e30:	stur	x0, [x29, #-64]
   29e34:	ldur	x8, [x29, #-64]
   29e38:	mov	x9, #0x7ffffffffffffff     	// #576460752303423487
   29e3c:	cmp	x8, x9
   29e40:	b.hi	29e58 <printf_parse@@Base+0x1178>  // b.pmore
   29e44:	ldur	x8, [x29, #-64]
   29e48:	mov	x9, #0x20                  	// #32
   29e4c:	mul	x8, x8, x9
   29e50:	str	x8, [sp, #32]
   29e54:	b	29e60 <printf_parse@@Base+0x1180>
   29e58:	mov	x8, #0xffffffffffffffff    	// #-1
   29e5c:	str	x8, [sp, #32]
   29e60:	ldr	x8, [sp, #32]
   29e64:	str	x8, [sp, #192]
   29e68:	ldr	x8, [sp, #192]
   29e6c:	mov	x9, #0xffffffffffffffff    	// #-1
   29e70:	cmp	x8, x9
   29e74:	b.ne	29e7c <printf_parse@@Base+0x119c>  // b.any
   29e78:	b	2a1b4 <printf_parse@@Base+0x14d4>
   29e7c:	ldur	x8, [x29, #-32]
   29e80:	ldr	x8, [x8, #8]
   29e84:	ldur	x9, [x29, #-32]
   29e88:	add	x9, x9, #0x10
   29e8c:	cmp	x8, x9
   29e90:	b.eq	29eac <printf_parse@@Base+0x11cc>  // b.none
   29e94:	ldur	x8, [x29, #-32]
   29e98:	ldr	x0, [x8, #8]
   29e9c:	ldr	x1, [sp, #192]
   29ea0:	bl	af40 <realloc@plt>
   29ea4:	str	x0, [sp, #24]
   29ea8:	b	29eb8 <printf_parse@@Base+0x11d8>
   29eac:	ldr	x0, [sp, #192]
   29eb0:	bl	af10 <malloc@plt>
   29eb4:	str	x0, [sp, #24]
   29eb8:	ldr	x8, [sp, #24]
   29ebc:	str	x8, [sp, #184]
   29ec0:	ldr	x8, [sp, #184]
   29ec4:	cbnz	x8, 29ecc <printf_parse@@Base+0x11ec>
   29ec8:	b	2a1b4 <printf_parse@@Base+0x14d4>
   29ecc:	ldur	x8, [x29, #-32]
   29ed0:	ldr	x8, [x8, #8]
   29ed4:	ldur	x9, [x29, #-32]
   29ed8:	add	x9, x9, #0x10
   29edc:	cmp	x8, x9
   29ee0:	b.ne	29f04 <printf_parse@@Base+0x1224>  // b.any
   29ee4:	ldr	x0, [sp, #184]
   29ee8:	ldur	x8, [x29, #-32]
   29eec:	ldr	x1, [x8, #8]
   29ef0:	ldur	x8, [x29, #-32]
   29ef4:	ldr	x8, [x8]
   29ef8:	mov	x9, #0x20                  	// #32
   29efc:	mul	x2, x8, x9
   29f00:	bl	af30 <memcpy@plt>
   29f04:	ldr	x8, [sp, #184]
   29f08:	ldur	x9, [x29, #-32]
   29f0c:	str	x8, [x9, #8]
   29f10:	ldur	x8, [x29, #-32]
   29f14:	ldr	x8, [x8]
   29f18:	ldr	x9, [sp, #200]
   29f1c:	cmp	x8, x9
   29f20:	b.hi	29f50 <printf_parse@@Base+0x1270>  // b.pmore
   29f24:	ldur	x8, [x29, #-32]
   29f28:	ldr	x8, [x8, #8]
   29f2c:	ldur	x9, [x29, #-32]
   29f30:	ldr	x10, [x9]
   29f34:	add	x11, x10, #0x1
   29f38:	str	x11, [x9]
   29f3c:	mov	x9, #0x20                  	// #32
   29f40:	mul	x9, x9, x10
   29f44:	mov	w12, wzr
   29f48:	str	w12, [x8, x9]
   29f4c:	b	29f10 <printf_parse@@Base+0x1230>
   29f50:	ldur	x8, [x29, #-32]
   29f54:	ldr	x8, [x8, #8]
   29f58:	ldr	x9, [sp, #200]
   29f5c:	mov	x10, #0x20                  	// #32
   29f60:	mul	x9, x10, x9
   29f64:	ldr	w11, [x8, x9]
   29f68:	cbnz	w11, 29f8c <printf_parse@@Base+0x12ac>
   29f6c:	ldr	w8, [sp, #212]
   29f70:	ldur	x9, [x29, #-32]
   29f74:	ldr	x9, [x9, #8]
   29f78:	ldr	x10, [sp, #200]
   29f7c:	mov	x11, #0x20                  	// #32
   29f80:	mul	x10, x11, x10
   29f84:	str	w8, [x9, x10]
   29f88:	b	29fb4 <printf_parse@@Base+0x12d4>
   29f8c:	ldur	x8, [x29, #-32]
   29f90:	ldr	x8, [x8, #8]
   29f94:	ldr	x9, [sp, #200]
   29f98:	mov	x10, #0x20                  	// #32
   29f9c:	mul	x9, x10, x9
   29fa0:	ldr	w11, [x8, x9]
   29fa4:	ldr	w12, [sp, #212]
   29fa8:	cmp	w11, w12
   29fac:	b.eq	29fb4 <printf_parse@@Base+0x12d4>  // b.none
   29fb0:	b	2a154 <printf_parse@@Base+0x1474>
   29fb4:	ldurb	w8, [x29, #-81]
   29fb8:	ldur	x9, [x29, #-104]
   29fbc:	strb	w8, [x9, #72]
   29fc0:	ldur	x9, [x29, #-40]
   29fc4:	ldur	x10, [x29, #-104]
   29fc8:	str	x9, [x10, #8]
   29fcc:	ldur	x9, [x29, #-24]
   29fd0:	ldr	x10, [x9]
   29fd4:	add	x10, x10, #0x1
   29fd8:	str	x10, [x9]
   29fdc:	ldur	x9, [x29, #-24]
   29fe0:	ldr	x9, [x9]
   29fe4:	ldur	x10, [x29, #-56]
   29fe8:	cmp	x9, x10
   29fec:	b.cc	2a10c <printf_parse@@Base+0x142c>  // b.lo, b.ul, b.last
   29ff0:	ldur	x8, [x29, #-56]
   29ff4:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
   29ff8:	cmp	x8, x9
   29ffc:	b.hi	2a014 <printf_parse@@Base+0x1334>  // b.pmore
   2a000:	ldur	x8, [x29, #-56]
   2a004:	mov	x9, #0x2                   	// #2
   2a008:	mul	x8, x8, x9
   2a00c:	str	x8, [sp, #16]
   2a010:	b	2a01c <printf_parse@@Base+0x133c>
   2a014:	mov	x8, #0xffffffffffffffff    	// #-1
   2a018:	str	x8, [sp, #16]
   2a01c:	ldr	x8, [sp, #16]
   2a020:	stur	x8, [x29, #-56]
   2a024:	ldur	x8, [x29, #-56]
   2a028:	mov	x9, #0xe8ba                	// #59578
   2a02c:	movk	x9, #0x8ba2, lsl #16
   2a030:	movk	x9, #0xba2e, lsl #32
   2a034:	movk	x9, #0x2e8, lsl #48
   2a038:	cmp	x8, x9
   2a03c:	b.hi	2a054 <printf_parse@@Base+0x1374>  // b.pmore
   2a040:	ldur	x8, [x29, #-56]
   2a044:	mov	x9, #0x58                  	// #88
   2a048:	mul	x8, x8, x9
   2a04c:	str	x8, [sp, #8]
   2a050:	b	2a05c <printf_parse@@Base+0x137c>
   2a054:	mov	x8, #0xffffffffffffffff    	// #-1
   2a058:	str	x8, [sp, #8]
   2a05c:	ldr	x8, [sp, #8]
   2a060:	str	x8, [sp, #176]
   2a064:	ldr	x8, [sp, #176]
   2a068:	mov	x9, #0xffffffffffffffff    	// #-1
   2a06c:	cmp	x8, x9
   2a070:	b.ne	2a078 <printf_parse@@Base+0x1398>  // b.any
   2a074:	b	2a1b4 <printf_parse@@Base+0x14d4>
   2a078:	ldur	x8, [x29, #-24]
   2a07c:	ldr	x8, [x8, #8]
   2a080:	ldur	x9, [x29, #-24]
   2a084:	add	x9, x9, #0x20
   2a088:	cmp	x8, x9
   2a08c:	b.eq	2a0a8 <printf_parse@@Base+0x13c8>  // b.none
   2a090:	ldur	x8, [x29, #-24]
   2a094:	ldr	x0, [x8, #8]
   2a098:	ldr	x1, [sp, #176]
   2a09c:	bl	af40 <realloc@plt>
   2a0a0:	str	x0, [sp]
   2a0a4:	b	2a0b4 <printf_parse@@Base+0x13d4>
   2a0a8:	ldr	x0, [sp, #176]
   2a0ac:	bl	af10 <malloc@plt>
   2a0b0:	str	x0, [sp]
   2a0b4:	ldr	x8, [sp]
   2a0b8:	str	x8, [sp, #168]
   2a0bc:	ldr	x8, [sp, #168]
   2a0c0:	cbnz	x8, 2a0c8 <printf_parse@@Base+0x13e8>
   2a0c4:	b	2a1b4 <printf_parse@@Base+0x14d4>
   2a0c8:	ldur	x8, [x29, #-24]
   2a0cc:	ldr	x8, [x8, #8]
   2a0d0:	ldur	x9, [x29, #-24]
   2a0d4:	add	x9, x9, #0x20
   2a0d8:	cmp	x8, x9
   2a0dc:	b.ne	2a100 <printf_parse@@Base+0x1420>  // b.any
   2a0e0:	ldr	x0, [sp, #168]
   2a0e4:	ldur	x8, [x29, #-24]
   2a0e8:	ldr	x1, [x8, #8]
   2a0ec:	ldur	x8, [x29, #-24]
   2a0f0:	ldr	x8, [x8]
   2a0f4:	mov	x9, #0x58                  	// #88
   2a0f8:	mul	x2, x8, x9
   2a0fc:	bl	af30 <memcpy@plt>
   2a100:	ldr	x8, [sp, #168]
   2a104:	ldur	x9, [x29, #-24]
   2a108:	str	x8, [x9, #8]
   2a10c:	b	28d4c <printf_parse@@Base+0x6c>
   2a110:	ldur	x8, [x29, #-40]
   2a114:	ldur	x9, [x29, #-24]
   2a118:	ldr	x9, [x9, #8]
   2a11c:	ldur	x10, [x29, #-24]
   2a120:	ldr	x10, [x10]
   2a124:	mov	x11, #0x58                  	// #88
   2a128:	mul	x10, x11, x10
   2a12c:	add	x9, x9, x10
   2a130:	str	x8, [x9]
   2a134:	ldur	x8, [x29, #-72]
   2a138:	ldur	x9, [x29, #-24]
   2a13c:	str	x8, [x9, #16]
   2a140:	ldur	x8, [x29, #-80]
   2a144:	ldur	x9, [x29, #-24]
   2a148:	str	x8, [x9, #24]
   2a14c:	stur	wzr, [x29, #-4]
   2a150:	b	2a210 <printf_parse@@Base+0x1530>
   2a154:	ldur	x8, [x29, #-32]
   2a158:	ldr	x8, [x8, #8]
   2a15c:	ldur	x9, [x29, #-32]
   2a160:	add	x9, x9, #0x10
   2a164:	cmp	x8, x9
   2a168:	b.eq	2a178 <printf_parse@@Base+0x1498>  // b.none
   2a16c:	ldur	x8, [x29, #-32]
   2a170:	ldr	x0, [x8, #8]
   2a174:	bl	a930 <free@plt>
   2a178:	ldur	x8, [x29, #-24]
   2a17c:	ldr	x8, [x8, #8]
   2a180:	ldur	x9, [x29, #-24]
   2a184:	add	x9, x9, #0x20
   2a188:	cmp	x8, x9
   2a18c:	b.eq	2a19c <printf_parse@@Base+0x14bc>  // b.none
   2a190:	ldur	x8, [x29, #-24]
   2a194:	ldr	x0, [x8, #8]
   2a198:	bl	a930 <free@plt>
   2a19c:	bl	aa20 <__errno_location@plt>
   2a1a0:	mov	w8, #0x16                  	// #22
   2a1a4:	str	w8, [x0]
   2a1a8:	mov	w8, #0xffffffff            	// #-1
   2a1ac:	stur	w8, [x29, #-4]
   2a1b0:	b	2a210 <printf_parse@@Base+0x1530>
   2a1b4:	ldur	x8, [x29, #-32]
   2a1b8:	ldr	x8, [x8, #8]
   2a1bc:	ldur	x9, [x29, #-32]
   2a1c0:	add	x9, x9, #0x10
   2a1c4:	cmp	x8, x9
   2a1c8:	b.eq	2a1d8 <printf_parse@@Base+0x14f8>  // b.none
   2a1cc:	ldur	x8, [x29, #-32]
   2a1d0:	ldr	x0, [x8, #8]
   2a1d4:	bl	a930 <free@plt>
   2a1d8:	ldur	x8, [x29, #-24]
   2a1dc:	ldr	x8, [x8, #8]
   2a1e0:	ldur	x9, [x29, #-24]
   2a1e4:	add	x9, x9, #0x20
   2a1e8:	cmp	x8, x9
   2a1ec:	b.eq	2a1fc <printf_parse@@Base+0x151c>  // b.none
   2a1f0:	ldur	x8, [x29, #-24]
   2a1f4:	ldr	x0, [x8, #8]
   2a1f8:	bl	a930 <free@plt>
   2a1fc:	bl	aa20 <__errno_location@plt>
   2a200:	mov	w8, #0xc                   	// #12
   2a204:	str	w8, [x0]
   2a208:	mov	w8, #0xffffffff            	// #-1
   2a20c:	stur	w8, [x29, #-4]
   2a210:	ldur	w0, [x29, #-4]
   2a214:	ldr	x28, [sp, #448]
   2a218:	ldp	x29, x30, [sp, #432]
   2a21c:	add	sp, sp, #0x1d0
   2a220:	ret

000000000002a224 <rpl_re_compile_pattern@@Base>:
   2a224:	sub	sp, sp, #0x40
   2a228:	stp	x29, x30, [sp, #48]
   2a22c:	add	x29, sp, #0x30
   2a230:	adrp	x8, 5f000 <vasnprintf@@Base+0x1ce4c>
   2a234:	ldr	x8, [x8, #4048]
   2a238:	stur	x0, [x29, #-16]
   2a23c:	str	x1, [sp, #24]
   2a240:	str	x2, [sp, #16]
   2a244:	ldr	x9, [x8]
   2a248:	tst	x9, #0x2000000
   2a24c:	cset	w10, ne  // ne = any
   2a250:	mov	w11, #0x1                   	// #1
   2a254:	eor	w10, w10, #0x1
   2a258:	eor	w10, w10, w11
   2a25c:	and	w10, w10, #0x1
   2a260:	ldr	x9, [sp, #16]
   2a264:	ldrb	w12, [x9, #56]
   2a268:	and	w10, w10, w11
   2a26c:	lsl	w10, w10, #4
   2a270:	and	w11, w12, #0xffffffef
   2a274:	orr	w10, w11, w10
   2a278:	strb	w10, [x9, #56]
   2a27c:	ldr	x9, [sp, #16]
   2a280:	ldrb	w10, [x9, #56]
   2a284:	and	w10, w10, #0x7f
   2a288:	orr	w10, w10, #0xffffff80
   2a28c:	strb	w10, [x9, #56]
   2a290:	ldr	x0, [sp, #16]
   2a294:	ldur	x1, [x29, #-16]
   2a298:	ldr	x2, [sp, #24]
   2a29c:	ldr	x3, [x8]
   2a2a0:	bl	2a2f0 <rpl_re_compile_pattern@@Base+0xcc>
   2a2a4:	str	w0, [sp, #12]
   2a2a8:	ldr	w10, [sp, #12]
   2a2ac:	cbnz	w10, 2a2bc <rpl_re_compile_pattern@@Base+0x98>
   2a2b0:	mov	x8, xzr
   2a2b4:	stur	x8, [x29, #-8]
   2a2b8:	b	2a2e0 <rpl_re_compile_pattern@@Base+0xbc>
   2a2bc:	ldrsw	x8, [sp, #12]
   2a2c0:	adrp	x9, 47000 <vasnprintf@@Base+0x4e4c>
   2a2c4:	add	x9, x9, #0x770
   2a2c8:	ldr	x8, [x9, x8, lsl #3]
   2a2cc:	adrp	x9, 47000 <vasnprintf@@Base+0x4e4c>
   2a2d0:	add	x9, x9, #0x5ec
   2a2d4:	add	x0, x9, x8
   2a2d8:	bl	adb0 <gettext@plt>
   2a2dc:	stur	x0, [x29, #-8]
   2a2e0:	ldur	x0, [x29, #-8]
   2a2e4:	ldp	x29, x30, [sp, #48]
   2a2e8:	add	sp, sp, #0x40
   2a2ec:	ret
   2a2f0:	sub	sp, sp, #0x100
   2a2f4:	stp	x29, x30, [sp, #240]
   2a2f8:	add	x29, sp, #0xf0
   2a2fc:	adrp	x8, 5f000 <vasnprintf@@Base+0x1ce4c>
   2a300:	ldr	x8, [x8, #4056]
   2a304:	adrp	x9, 5f000 <vasnprintf@@Base+0x1ce4c>
   2a308:	ldr	x9, [x9, #4064]
   2a30c:	stur	x0, [x29, #-16]
   2a310:	stur	x1, [x29, #-24]
   2a314:	stur	x2, [x29, #-32]
   2a318:	stur	x3, [x29, #-40]
   2a31c:	stur	wzr, [x29, #-44]
   2a320:	ldur	x10, [x29, #-16]
   2a324:	ldrb	w11, [x10, #56]
   2a328:	and	w11, w11, #0xfffffff7
   2a32c:	strb	w11, [x10, #56]
   2a330:	ldur	x10, [x29, #-40]
   2a334:	ldur	x12, [x29, #-16]
   2a338:	str	x10, [x12, #24]
   2a33c:	ldur	x10, [x29, #-16]
   2a340:	ldrb	w11, [x10, #56]
   2a344:	and	w11, w11, #0xffffffbf
   2a348:	strb	w11, [x10, #56]
   2a34c:	ldur	x10, [x29, #-16]
   2a350:	ldrb	w11, [x10, #56]
   2a354:	and	w11, w11, #0xffffffdf
   2a358:	strb	w11, [x10, #56]
   2a35c:	ldur	x10, [x29, #-16]
   2a360:	str	xzr, [x10, #16]
   2a364:	ldur	x10, [x29, #-16]
   2a368:	str	xzr, [x10, #48]
   2a36c:	ldur	x10, [x29, #-16]
   2a370:	ldrb	w11, [x10, #56]
   2a374:	and	w11, w11, #0xfffffffe
   2a378:	strb	w11, [x10, #56]
   2a37c:	ldur	x10, [x29, #-16]
   2a380:	ldrb	w11, [x10, #56]
   2a384:	and	w11, w11, #0xfffffff9
   2a388:	strb	w11, [x10, #56]
   2a38c:	ldur	x10, [x29, #-16]
   2a390:	ldr	x10, [x10]
   2a394:	stur	x10, [x29, #-56]
   2a398:	ldur	x10, [x29, #-16]
   2a39c:	ldr	x10, [x10, #8]
   2a3a0:	cmp	x10, #0x118
   2a3a4:	cset	w11, cc  // cc = lo, ul, last
   2a3a8:	and	w11, w11, #0x1
   2a3ac:	mov	w0, w11
   2a3b0:	sxtw	x10, w0
   2a3b4:	str	x8, [sp, #24]
   2a3b8:	str	x9, [sp, #16]
   2a3bc:	cbz	x10, 2a400 <rpl_re_compile_pattern@@Base+0x1dc>
   2a3c0:	ldur	x8, [x29, #-16]
   2a3c4:	ldr	x0, [x8]
   2a3c8:	mov	x1, #0x118                 	// #280
   2a3cc:	bl	af40 <realloc@plt>
   2a3d0:	stur	x0, [x29, #-56]
   2a3d4:	ldur	x8, [x29, #-56]
   2a3d8:	cbnz	x8, 2a3e8 <rpl_re_compile_pattern@@Base+0x1c4>
   2a3dc:	mov	w8, #0xc                   	// #12
   2a3e0:	stur	w8, [x29, #-4]
   2a3e4:	b	2a6ac <rpl_re_compile_pattern@@Base+0x488>
   2a3e8:	ldur	x8, [x29, #-16]
   2a3ec:	mov	x9, #0x118                 	// #280
   2a3f0:	str	x9, [x8, #8]
   2a3f4:	ldur	x8, [x29, #-56]
   2a3f8:	ldur	x9, [x29, #-16]
   2a3fc:	str	x8, [x9]
   2a400:	ldur	x8, [x29, #-16]
   2a404:	mov	x9, #0x118                 	// #280
   2a408:	str	x9, [x8, #16]
   2a40c:	ldur	x0, [x29, #-56]
   2a410:	ldur	x1, [x29, #-32]
   2a414:	bl	2d19c <rpl_re_set_registers@@Base+0x200>
   2a418:	stur	w0, [x29, #-44]
   2a41c:	ldur	w10, [x29, #-44]
   2a420:	mov	w11, #0x0                   	// #0
   2a424:	str	w11, [sp, #12]
   2a428:	cbnz	w10, 2a474 <rpl_re_compile_pattern@@Base+0x250>
   2a42c:	ldr	x8, [sp, #24]
   2a430:	cbnz	x8, 2a440 <rpl_re_compile_pattern@@Base+0x21c>
   2a434:	ldr	x8, [sp, #16]
   2a438:	cbnz	x8, 2a440 <rpl_re_compile_pattern@@Base+0x21c>
   2a43c:	b	2a45c <rpl_re_compile_pattern@@Base+0x238>
   2a440:	ldur	x8, [x29, #-56]
   2a444:	add	x0, x8, #0xe8
   2a448:	mov	x8, xzr
   2a44c:	mov	x1, x8
   2a450:	bl	b400 <pthread_mutex_init@plt>
   2a454:	str	w0, [sp, #8]
   2a458:	b	2a464 <rpl_re_compile_pattern@@Base+0x240>
   2a45c:	mov	w8, wzr
   2a460:	str	w8, [sp, #8]
   2a464:	ldr	w8, [sp, #8]
   2a468:	cmp	w8, #0x0
   2a46c:	cset	w8, ne  // ne = any
   2a470:	str	w8, [sp, #12]
   2a474:	ldr	w8, [sp, #12]
   2a478:	and	w8, w8, #0x1
   2a47c:	mov	w0, w8
   2a480:	sxtw	x9, w0
   2a484:	cbz	x9, 2a490 <rpl_re_compile_pattern@@Base+0x26c>
   2a488:	mov	w8, #0xc                   	// #12
   2a48c:	stur	w8, [x29, #-44]
   2a490:	ldur	w8, [x29, #-44]
   2a494:	cmp	w8, #0x0
   2a498:	cset	w8, ne  // ne = any
   2a49c:	and	w8, w8, #0x1
   2a4a0:	mov	w0, w8
   2a4a4:	sxtw	x9, w0
   2a4a8:	cbz	x9, 2a4d4 <rpl_re_compile_pattern@@Base+0x2b0>
   2a4ac:	ldur	x0, [x29, #-56]
   2a4b0:	bl	2b2d4 <rpl_regfree@@Base+0xcc>
   2a4b4:	ldur	x8, [x29, #-16]
   2a4b8:	mov	x9, xzr
   2a4bc:	str	x9, [x8]
   2a4c0:	ldur	x8, [x29, #-16]
   2a4c4:	str	xzr, [x8, #8]
   2a4c8:	ldur	w10, [x29, #-44]
   2a4cc:	stur	w10, [x29, #-4]
   2a4d0:	b	2a6ac <rpl_re_compile_pattern@@Base+0x488>
   2a4d4:	ldur	x1, [x29, #-24]
   2a4d8:	ldur	x2, [x29, #-32]
   2a4dc:	ldur	x8, [x29, #-16]
   2a4e0:	ldr	x3, [x8, #40]
   2a4e4:	ldur	x8, [x29, #-40]
   2a4e8:	tst	x8, #0x400000
   2a4ec:	cset	w9, ne  // ne = any
   2a4f0:	ldur	x5, [x29, #-56]
   2a4f4:	add	x0, sp, #0x20
   2a4f8:	and	w4, w9, #0x1
   2a4fc:	bl	2d768 <rpl_re_set_registers@@Base+0x7cc>
   2a500:	stur	w0, [x29, #-44]
   2a504:	ldur	w9, [x29, #-44]
   2a508:	cmp	w9, #0x0
   2a50c:	cset	w9, ne  // ne = any
   2a510:	and	w9, w9, #0x1
   2a514:	mov	w1, w9
   2a518:	sxtw	x8, w1
   2a51c:	cbz	x8, 2a57c <rpl_re_compile_pattern@@Base+0x358>
   2a520:	ldur	x0, [x29, #-16]
   2a524:	bl	2d994 <rpl_re_set_registers@@Base+0x9f8>
   2a528:	add	x0, sp, #0x20
   2a52c:	bl	2da2c <rpl_re_set_registers@@Base+0xa90>
   2a530:	ldr	x8, [sp, #24]
   2a534:	cbnz	x8, 2a544 <rpl_re_compile_pattern@@Base+0x320>
   2a538:	ldr	x8, [sp, #16]
   2a53c:	cbnz	x8, 2a544 <rpl_re_compile_pattern@@Base+0x320>
   2a540:	b	2a554 <rpl_re_compile_pattern@@Base+0x330>
   2a544:	ldur	x8, [x29, #-56]
   2a548:	add	x0, x8, #0xe8
   2a54c:	bl	b7c0 <pthread_mutex_destroy@plt>
   2a550:	b	2a554 <rpl_re_compile_pattern@@Base+0x330>
   2a554:	ldur	x0, [x29, #-56]
   2a558:	bl	2b2d4 <rpl_regfree@@Base+0xcc>
   2a55c:	ldur	x8, [x29, #-16]
   2a560:	mov	x9, xzr
   2a564:	str	x9, [x8]
   2a568:	ldur	x8, [x29, #-16]
   2a56c:	str	xzr, [x8, #8]
   2a570:	ldur	w10, [x29, #-44]
   2a574:	stur	w10, [x29, #-4]
   2a578:	b	2a6ac <rpl_re_compile_pattern@@Base+0x488>
   2a57c:	ldur	x8, [x29, #-16]
   2a580:	str	xzr, [x8, #48]
   2a584:	ldur	x1, [x29, #-16]
   2a588:	ldur	x2, [x29, #-40]
   2a58c:	add	x0, sp, #0x20
   2a590:	sub	x3, x29, #0x2c
   2a594:	bl	2da78 <rpl_re_set_registers@@Base+0xadc>
   2a598:	ldur	x8, [x29, #-56]
   2a59c:	str	x0, [x8, #104]
   2a5a0:	ldur	x8, [x29, #-56]
   2a5a4:	ldr	x8, [x8, #104]
   2a5a8:	cmp	x8, #0x0
   2a5ac:	cset	w9, eq  // eq = none
   2a5b0:	and	w9, w9, #0x1
   2a5b4:	mov	w0, w9
   2a5b8:	sxtw	x8, w0
   2a5bc:	cbz	x8, 2a5c4 <rpl_re_compile_pattern@@Base+0x3a0>
   2a5c0:	b	2a520 <rpl_re_compile_pattern@@Base+0x2fc>
   2a5c4:	ldur	x0, [x29, #-16]
   2a5c8:	bl	2dbe0 <rpl_re_set_registers@@Base+0xc44>
   2a5cc:	stur	w0, [x29, #-44]
   2a5d0:	ldur	w8, [x29, #-44]
   2a5d4:	cmp	w8, #0x0
   2a5d8:	cset	w8, ne  // ne = any
   2a5dc:	and	w8, w8, #0x1
   2a5e0:	mov	w1, w8
   2a5e4:	sxtw	x9, w1
   2a5e8:	cbz	x9, 2a5f0 <rpl_re_compile_pattern@@Base+0x3cc>
   2a5ec:	b	2a520 <rpl_re_compile_pattern@@Base+0x2fc>
   2a5f0:	ldur	x8, [x29, #-56]
   2a5f4:	ldrb	w9, [x8, #176]
   2a5f8:	mov	w10, #0x2                   	// #2
   2a5fc:	lsr	w9, w9, w10
   2a600:	and	w9, w9, #0x1
   2a604:	and	w9, w9, #0xff
   2a608:	cbz	w9, 2a62c <rpl_re_compile_pattern@@Base+0x408>
   2a60c:	ldur	x8, [x29, #-40]
   2a610:	and	x8, x8, #0x400000
   2a614:	cbnz	x8, 2a62c <rpl_re_compile_pattern@@Base+0x408>
   2a618:	ldur	x8, [x29, #-16]
   2a61c:	ldr	x8, [x8, #40]
   2a620:	cbnz	x8, 2a62c <rpl_re_compile_pattern@@Base+0x408>
   2a624:	ldur	x0, [x29, #-56]
   2a628:	bl	2dfb0 <rpl_re_set_registers@@Base+0x1014>
   2a62c:	ldur	x0, [x29, #-56]
   2a630:	bl	2e2cc <rpl_re_set_registers@@Base+0x1330>
   2a634:	stur	w0, [x29, #-44]
   2a638:	ldur	x0, [x29, #-16]
   2a63c:	bl	2d994 <rpl_re_set_registers@@Base+0x9f8>
   2a640:	add	x0, sp, #0x20
   2a644:	bl	2da2c <rpl_re_set_registers@@Base+0xa90>
   2a648:	ldur	w8, [x29, #-44]
   2a64c:	cmp	w8, #0x0
   2a650:	cset	w8, ne  // ne = any
   2a654:	and	w8, w8, #0x1
   2a658:	mov	w0, w8
   2a65c:	sxtw	x9, w0
   2a660:	cbz	x9, 2a6a4 <rpl_re_compile_pattern@@Base+0x480>
   2a664:	ldr	x8, [sp, #24]
   2a668:	cbnz	x8, 2a678 <rpl_re_compile_pattern@@Base+0x454>
   2a66c:	ldr	x8, [sp, #16]
   2a670:	cbnz	x8, 2a678 <rpl_re_compile_pattern@@Base+0x454>
   2a674:	b	2a688 <rpl_re_compile_pattern@@Base+0x464>
   2a678:	ldur	x8, [x29, #-56]
   2a67c:	add	x0, x8, #0xe8
   2a680:	bl	b7c0 <pthread_mutex_destroy@plt>
   2a684:	b	2a688 <rpl_re_compile_pattern@@Base+0x464>
   2a688:	ldur	x0, [x29, #-56]
   2a68c:	bl	2b2d4 <rpl_regfree@@Base+0xcc>
   2a690:	ldur	x8, [x29, #-16]
   2a694:	mov	x9, xzr
   2a698:	str	x9, [x8]
   2a69c:	ldur	x8, [x29, #-16]
   2a6a0:	str	xzr, [x8, #8]
   2a6a4:	ldur	w8, [x29, #-44]
   2a6a8:	stur	w8, [x29, #-4]
   2a6ac:	ldur	w0, [x29, #-4]
   2a6b0:	ldp	x29, x30, [sp, #240]
   2a6b4:	add	sp, sp, #0x100
   2a6b8:	ret

000000000002a6bc <rpl_re_set_syntax@@Base>:
   2a6bc:	sub	sp, sp, #0x10
   2a6c0:	adrp	x8, 5f000 <vasnprintf@@Base+0x1ce4c>
   2a6c4:	ldr	x8, [x8, #4048]
   2a6c8:	str	x0, [sp, #8]
   2a6cc:	ldr	x9, [x8]
   2a6d0:	str	x9, [sp]
   2a6d4:	ldr	x9, [sp, #8]
   2a6d8:	str	x9, [x8]
   2a6dc:	ldr	x0, [sp]
   2a6e0:	add	sp, sp, #0x10
   2a6e4:	ret

000000000002a6e8 <rpl_re_compile_fastmap@@Base>:
   2a6e8:	sub	sp, sp, #0x30
   2a6ec:	stp	x29, x30, [sp, #32]
   2a6f0:	add	x29, sp, #0x20
   2a6f4:	mov	x2, #0x100                 	// #256
   2a6f8:	mov	w8, wzr
   2a6fc:	stur	x0, [x29, #-8]
   2a700:	ldur	x9, [x29, #-8]
   2a704:	ldr	x9, [x9]
   2a708:	str	x9, [sp, #16]
   2a70c:	ldur	x9, [x29, #-8]
   2a710:	ldr	x9, [x9, #32]
   2a714:	str	x9, [sp, #8]
   2a718:	ldr	x0, [sp, #8]
   2a71c:	mov	w1, w8
   2a720:	bl	a970 <memset@plt>
   2a724:	ldur	x0, [x29, #-8]
   2a728:	ldr	x9, [sp, #16]
   2a72c:	ldr	x1, [x9, #72]
   2a730:	ldr	x2, [sp, #8]
   2a734:	bl	2a7e4 <rpl_re_compile_fastmap@@Base+0xfc>
   2a738:	ldr	x9, [sp, #16]
   2a73c:	ldr	x9, [x9, #72]
   2a740:	ldr	x10, [sp, #16]
   2a744:	ldr	x10, [x10, #80]
   2a748:	cmp	x9, x10
   2a74c:	b.eq	2a764 <rpl_re_compile_fastmap@@Base+0x7c>  // b.none
   2a750:	ldur	x0, [x29, #-8]
   2a754:	ldr	x8, [sp, #16]
   2a758:	ldr	x1, [x8, #80]
   2a75c:	ldr	x2, [sp, #8]
   2a760:	bl	2a7e4 <rpl_re_compile_fastmap@@Base+0xfc>
   2a764:	ldr	x8, [sp, #16]
   2a768:	ldr	x8, [x8, #72]
   2a76c:	ldr	x9, [sp, #16]
   2a770:	ldr	x9, [x9, #88]
   2a774:	cmp	x8, x9
   2a778:	b.eq	2a790 <rpl_re_compile_fastmap@@Base+0xa8>  // b.none
   2a77c:	ldur	x0, [x29, #-8]
   2a780:	ldr	x8, [sp, #16]
   2a784:	ldr	x1, [x8, #88]
   2a788:	ldr	x2, [sp, #8]
   2a78c:	bl	2a7e4 <rpl_re_compile_fastmap@@Base+0xfc>
   2a790:	ldr	x8, [sp, #16]
   2a794:	ldr	x8, [x8, #72]
   2a798:	ldr	x9, [sp, #16]
   2a79c:	ldr	x9, [x9, #96]
   2a7a0:	cmp	x8, x9
   2a7a4:	b.eq	2a7bc <rpl_re_compile_fastmap@@Base+0xd4>  // b.none
   2a7a8:	ldur	x0, [x29, #-8]
   2a7ac:	ldr	x8, [sp, #16]
   2a7b0:	ldr	x1, [x8, #96]
   2a7b4:	ldr	x2, [sp, #8]
   2a7b8:	bl	2a7e4 <rpl_re_compile_fastmap@@Base+0xfc>
   2a7bc:	ldur	x8, [x29, #-8]
   2a7c0:	ldrb	w9, [x8, #56]
   2a7c4:	and	w9, w9, #0xfffffff7
   2a7c8:	orr	w9, w9, #0x8
   2a7cc:	strb	w9, [x8, #56]
   2a7d0:	mov	w9, wzr
   2a7d4:	mov	w0, w9
   2a7d8:	ldp	x29, x30, [sp, #32]
   2a7dc:	add	sp, sp, #0x30
   2a7e0:	ret
   2a7e4:	stp	x29, x30, [sp, #-32]!
   2a7e8:	str	x28, [sp, #16]
   2a7ec:	mov	x29, sp
   2a7f0:	sub	sp, sp, #0x260
   2a7f4:	stur	x0, [x29, #-104]
   2a7f8:	stur	x1, [x29, #-112]
   2a7fc:	stur	x2, [x29, #-120]
   2a800:	ldur	x8, [x29, #-104]
   2a804:	ldr	x8, [x8]
   2a808:	stur	x8, [x29, #-128]
   2a80c:	ldur	x8, [x29, #-128]
   2a810:	ldr	w9, [x8, #180]
   2a814:	mov	w10, #0x0                   	// #0
   2a818:	cmp	w9, #0x1
   2a81c:	str	w10, [sp, #84]
   2a820:	b.ne	2a838 <rpl_re_compile_fastmap@@Base+0x150>  // b.any
   2a824:	ldur	x8, [x29, #-104]
   2a828:	ldr	x8, [x8, #24]
   2a82c:	tst	x8, #0x400000
   2a830:	cset	w9, ne  // ne = any
   2a834:	str	w9, [sp, #84]
   2a838:	ldr	w8, [sp, #84]
   2a83c:	and	w8, w8, #0x1
   2a840:	sturb	w8, [x29, #-137]
   2a844:	stur	xzr, [x29, #-136]
   2a848:	ldur	x8, [x29, #-136]
   2a84c:	ldur	x9, [x29, #-112]
   2a850:	ldr	x9, [x9, #16]
   2a854:	cmp	x8, x9
   2a858:	b.ge	2aeec <rpl_re_compile_fastmap@@Base+0x804>  // b.tcont
   2a85c:	ldur	x8, [x29, #-112]
   2a860:	mov	x9, #0x10                  	// #16
   2a864:	ldr	x8, [x8, #24]
   2a868:	ldur	x10, [x29, #-136]
   2a86c:	ldr	x8, [x8, x10, lsl #3]
   2a870:	stur	x8, [x29, #-152]
   2a874:	ldur	x8, [x29, #-128]
   2a878:	ldr	x8, [x8]
   2a87c:	ldur	x10, [x29, #-152]
   2a880:	mul	x9, x9, x10
   2a884:	add	x8, x8, x9
   2a888:	ldr	w11, [x8, #8]
   2a88c:	and	w11, w11, #0xff
   2a890:	stur	w11, [x29, #-156]
   2a894:	ldur	w11, [x29, #-156]
   2a898:	cmp	w11, #0x1
   2a89c:	b.ne	2aaf4 <rpl_re_compile_fastmap@@Base+0x40c>  // b.any
   2a8a0:	ldur	x8, [x29, #-120]
   2a8a4:	ldurb	w9, [x29, #-137]
   2a8a8:	ldur	x10, [x29, #-128]
   2a8ac:	ldr	x10, [x10]
   2a8b0:	ldur	x11, [x29, #-152]
   2a8b4:	mov	x12, #0x10                  	// #16
   2a8b8:	mul	x11, x12, x11
   2a8bc:	ldrb	w13, [x10, x11]
   2a8c0:	stur	x8, [x29, #-88]
   2a8c4:	and	w9, w9, #0x1
   2a8c8:	sturb	w9, [x29, #-89]
   2a8cc:	stur	w13, [x29, #-96]
   2a8d0:	ldur	x8, [x29, #-88]
   2a8d4:	ldursw	x10, [x29, #-96]
   2a8d8:	add	x8, x8, x10
   2a8dc:	mov	w9, #0x1                   	// #1
   2a8e0:	strb	w9, [x8]
   2a8e4:	ldurb	w9, [x29, #-89]
   2a8e8:	tbnz	w9, #0, 2a8f0 <rpl_re_compile_fastmap@@Base+0x208>
   2a8ec:	b	2a918 <rpl_re_compile_fastmap@@Base+0x230>
   2a8f0:	ldur	x8, [x29, #-88]
   2a8f4:	ldur	w0, [x29, #-96]
   2a8f8:	str	x8, [sp, #72]
   2a8fc:	bl	b7d0 <tolower@plt>
   2a900:	mov	w1, w0
   2a904:	sxtw	x8, w1
   2a908:	ldr	x9, [sp, #72]
   2a90c:	add	x8, x9, x8
   2a910:	mov	w10, #0x1                   	// #1
   2a914:	strb	w10, [x8]
   2a918:	ldur	x8, [x29, #-104]
   2a91c:	ldr	x8, [x8, #24]
   2a920:	and	x8, x8, #0x400000
   2a924:	cbz	x8, 2aaf0 <rpl_re_compile_fastmap@@Base+0x408>
   2a928:	ldur	x8, [x29, #-128]
   2a92c:	ldr	w9, [x8, #180]
   2a930:	cmp	w9, #0x1
   2a934:	b.le	2aaf0 <rpl_re_compile_fastmap@@Base+0x408>
   2a938:	sub	x8, x29, #0xac
   2a93c:	stur	x8, [x29, #-184]
   2a940:	ldur	x8, [x29, #-128]
   2a944:	ldr	x8, [x8]
   2a948:	ldur	x9, [x29, #-152]
   2a94c:	mov	x10, #0x10                  	// #16
   2a950:	mul	x9, x10, x9
   2a954:	add	x8, x8, x9
   2a958:	ldrb	w11, [x8]
   2a95c:	ldur	x8, [x29, #-184]
   2a960:	add	x9, x8, #0x1
   2a964:	stur	x9, [x29, #-184]
   2a968:	strb	w11, [x8]
   2a96c:	ldur	x8, [x29, #-152]
   2a970:	add	x8, x8, #0x1
   2a974:	stur	x8, [x29, #-152]
   2a978:	ldur	x9, [x29, #-128]
   2a97c:	ldr	x9, [x9, #16]
   2a980:	mov	w10, #0x0                   	// #0
   2a984:	cmp	x8, x9
   2a988:	str	w10, [sp, #68]
   2a98c:	b.cs	2a9ec <rpl_re_compile_fastmap@@Base+0x304>  // b.hs, b.nlast
   2a990:	ldur	x8, [x29, #-128]
   2a994:	ldr	x8, [x8]
   2a998:	ldur	x9, [x29, #-152]
   2a99c:	mov	x10, #0x10                  	// #16
   2a9a0:	mul	x9, x10, x9
   2a9a4:	add	x8, x8, x9
   2a9a8:	ldr	w11, [x8, #8]
   2a9ac:	and	w11, w11, #0xff
   2a9b0:	mov	w12, #0x0                   	// #0
   2a9b4:	cmp	w11, #0x1
   2a9b8:	str	w12, [sp, #68]
   2a9bc:	b.ne	2a9ec <rpl_re_compile_fastmap@@Base+0x304>  // b.any
   2a9c0:	ldur	x8, [x29, #-128]
   2a9c4:	ldr	x8, [x8]
   2a9c8:	ldur	x9, [x29, #-152]
   2a9cc:	mov	x10, #0x10                  	// #16
   2a9d0:	mul	x9, x10, x9
   2a9d4:	add	x8, x8, x9
   2a9d8:	ldr	w11, [x8, #8]
   2a9dc:	lsr	w11, w11, #21
   2a9e0:	tst	w11, #0x1
   2a9e4:	cset	w11, ne  // ne = any
   2a9e8:	str	w11, [sp, #68]
   2a9ec:	ldr	w8, [sp, #68]
   2a9f0:	tbnz	w8, #0, 2a9f8 <rpl_re_compile_fastmap@@Base+0x310>
   2a9f4:	b	2aa28 <rpl_re_compile_fastmap@@Base+0x340>
   2a9f8:	ldur	x8, [x29, #-128]
   2a9fc:	ldr	x8, [x8]
   2aa00:	ldur	x9, [x29, #-152]
   2aa04:	mov	x10, #0x10                  	// #16
   2aa08:	mul	x9, x10, x9
   2aa0c:	add	x8, x8, x9
   2aa10:	ldrb	w11, [x8]
   2aa14:	ldur	x8, [x29, #-184]
   2aa18:	add	x9, x8, #0x1
   2aa1c:	stur	x9, [x29, #-184]
   2aa20:	strb	w11, [x8]
   2aa24:	b	2a96c <rpl_re_compile_fastmap@@Base+0x284>
   2aa28:	sub	x3, x29, #0xc8
   2aa2c:	stur	xzr, [x29, #-200]
   2aa30:	ldur	x8, [x29, #-184]
   2aa34:	sub	x9, x29, #0xac
   2aa38:	mov	x10, x9
   2aa3c:	subs	x2, x8, x10
   2aa40:	sub	x0, x29, #0xbc
   2aa44:	mov	x1, x9
   2aa48:	str	x9, [sp, #56]
   2aa4c:	bl	b7e0 <rpl_mbrtowc@plt>
   2aa50:	ldur	x8, [x29, #-184]
   2aa54:	ldr	x9, [sp, #56]
   2aa58:	subs	x8, x8, x9
   2aa5c:	cmp	x0, x8
   2aa60:	b.ne	2aaf0 <rpl_re_compile_fastmap@@Base+0x408>  // b.any
   2aa64:	ldur	w0, [x29, #-188]
   2aa68:	bl	b7f0 <towlower@plt>
   2aa6c:	sub	x8, x29, #0xac
   2aa70:	str	w0, [sp, #52]
   2aa74:	mov	x0, x8
   2aa78:	ldr	w1, [sp, #52]
   2aa7c:	sub	x2, x29, #0xc8
   2aa80:	bl	b800 <wcrtomb@plt>
   2aa84:	mov	x8, #0xffffffffffffffff    	// #-1
   2aa88:	cmp	x0, x8
   2aa8c:	b.eq	2aaf0 <rpl_re_compile_fastmap@@Base+0x408>  // b.none
   2aa90:	ldur	x8, [x29, #-120]
   2aa94:	ldurb	w9, [x29, #-172]
   2aa98:	stur	x8, [x29, #-72]
   2aa9c:	mov	w10, #0x0                   	// #0
   2aaa0:	sturb	w10, [x29, #-73]
   2aaa4:	stur	w9, [x29, #-80]
   2aaa8:	ldur	x8, [x29, #-72]
   2aaac:	ldursw	x11, [x29, #-80]
   2aab0:	add	x8, x8, x11
   2aab4:	mov	w9, #0x1                   	// #1
   2aab8:	strb	w9, [x8]
   2aabc:	ldurb	w9, [x29, #-73]
   2aac0:	tbnz	w9, #0, 2aac8 <rpl_re_compile_fastmap@@Base+0x3e0>
   2aac4:	b	2aaf0 <rpl_re_compile_fastmap@@Base+0x408>
   2aac8:	ldur	x8, [x29, #-72]
   2aacc:	ldur	w0, [x29, #-80]
   2aad0:	str	x8, [sp, #40]
   2aad4:	bl	b7d0 <tolower@plt>
   2aad8:	mov	w1, w0
   2aadc:	sxtw	x8, w1
   2aae0:	ldr	x9, [sp, #40]
   2aae4:	add	x8, x9, x8
   2aae8:	mov	w10, #0x1                   	// #1
   2aaec:	strb	w10, [x8]
   2aaf0:	b	2aedc <rpl_re_compile_fastmap@@Base+0x7f4>
   2aaf4:	ldur	w8, [x29, #-156]
   2aaf8:	cmp	w8, #0x3
   2aafc:	b.ne	2abfc <rpl_re_compile_fastmap@@Base+0x514>  // b.any
   2ab00:	stur	wzr, [x29, #-204]
   2ab04:	stur	wzr, [x29, #-208]
   2ab08:	ldur	w8, [x29, #-204]
   2ab0c:	cmp	w8, #0x4
   2ab10:	b.ge	2abf8 <rpl_re_compile_fastmap@@Base+0x510>  // b.tcont
   2ab14:	ldur	x8, [x29, #-128]
   2ab18:	ldr	x8, [x8]
   2ab1c:	ldur	x9, [x29, #-152]
   2ab20:	mov	x10, #0x10                  	// #16
   2ab24:	mul	x9, x10, x9
   2ab28:	add	x8, x8, x9
   2ab2c:	ldr	x8, [x8]
   2ab30:	ldursw	x9, [x29, #-204]
   2ab34:	ldr	x8, [x8, x9, lsl #3]
   2ab38:	stur	x8, [x29, #-224]
   2ab3c:	stur	wzr, [x29, #-212]
   2ab40:	ldur	w8, [x29, #-212]
   2ab44:	cmp	w8, #0x40
   2ab48:	b.ge	2abe8 <rpl_re_compile_fastmap@@Base+0x500>  // b.tcont
   2ab4c:	ldur	x8, [x29, #-224]
   2ab50:	ldur	w9, [x29, #-212]
   2ab54:	mov	w10, w9
   2ab58:	mov	x11, #0x1                   	// #1
   2ab5c:	lsl	x10, x11, x10
   2ab60:	and	x8, x8, x10
   2ab64:	cbz	x8, 2abcc <rpl_re_compile_fastmap@@Base+0x4e4>
   2ab68:	ldur	x8, [x29, #-120]
   2ab6c:	ldurb	w9, [x29, #-137]
   2ab70:	ldur	w10, [x29, #-208]
   2ab74:	stur	x8, [x29, #-56]
   2ab78:	and	w9, w9, #0x1
   2ab7c:	sturb	w9, [x29, #-57]
   2ab80:	stur	w10, [x29, #-64]
   2ab84:	ldur	x8, [x29, #-56]
   2ab88:	ldursw	x11, [x29, #-64]
   2ab8c:	add	x8, x8, x11
   2ab90:	mov	w9, #0x1                   	// #1
   2ab94:	strb	w9, [x8]
   2ab98:	ldurb	w9, [x29, #-57]
   2ab9c:	tbnz	w9, #0, 2aba4 <rpl_re_compile_fastmap@@Base+0x4bc>
   2aba0:	b	2abcc <rpl_re_compile_fastmap@@Base+0x4e4>
   2aba4:	ldur	x8, [x29, #-56]
   2aba8:	ldur	w0, [x29, #-64]
   2abac:	str	x8, [sp, #32]
   2abb0:	bl	b7d0 <tolower@plt>
   2abb4:	mov	w1, w0
   2abb8:	sxtw	x8, w1
   2abbc:	ldr	x9, [sp, #32]
   2abc0:	add	x8, x9, x8
   2abc4:	mov	w10, #0x1                   	// #1
   2abc8:	strb	w10, [x8]
   2abcc:	ldur	w8, [x29, #-212]
   2abd0:	add	w8, w8, #0x1
   2abd4:	stur	w8, [x29, #-212]
   2abd8:	ldur	w8, [x29, #-208]
   2abdc:	add	w8, w8, #0x1
   2abe0:	stur	w8, [x29, #-208]
   2abe4:	b	2ab40 <rpl_re_compile_fastmap@@Base+0x458>
   2abe8:	ldur	w8, [x29, #-204]
   2abec:	add	w8, w8, #0x1
   2abf0:	stur	w8, [x29, #-204]
   2abf4:	b	2ab08 <rpl_re_compile_fastmap@@Base+0x420>
   2abf8:	b	2aedc <rpl_re_compile_fastmap@@Base+0x7f4>
   2abfc:	ldur	w8, [x29, #-156]
   2ac00:	cmp	w8, #0x6
   2ac04:	b.ne	2ae84 <rpl_re_compile_fastmap@@Base+0x79c>  // b.any
   2ac08:	ldur	x8, [x29, #-128]
   2ac0c:	ldr	x8, [x8]
   2ac10:	ldur	x9, [x29, #-152]
   2ac14:	mov	x10, #0x10                  	// #16
   2ac18:	mul	x9, x10, x9
   2ac1c:	add	x8, x8, x9
   2ac20:	ldr	x8, [x8]
   2ac24:	stur	x8, [x29, #-232]
   2ac28:	ldur	x8, [x29, #-128]
   2ac2c:	ldr	w11, [x8, #180]
   2ac30:	cmp	w11, #0x1
   2ac34:	b.le	2ad10 <rpl_re_compile_fastmap@@Base+0x628>
   2ac38:	ldur	x8, [x29, #-232]
   2ac3c:	ldr	x8, [x8, #72]
   2ac40:	cbnz	x8, 2ac64 <rpl_re_compile_fastmap@@Base+0x57c>
   2ac44:	ldur	x8, [x29, #-232]
   2ac48:	ldrb	w9, [x8, #32]
   2ac4c:	and	w9, w9, #0x1
   2ac50:	and	w9, w9, #0xff
   2ac54:	cbnz	w9, 2ac64 <rpl_re_compile_fastmap@@Base+0x57c>
   2ac58:	ldur	x8, [x29, #-232]
   2ac5c:	ldr	x8, [x8, #64]
   2ac60:	cbz	x8, 2ad10 <rpl_re_compile_fastmap@@Base+0x628>
   2ac64:	mov	w8, #0x0                   	// #0
   2ac68:	sturb	w8, [x29, #-241]
   2ac6c:	sub	x3, x29, #0x100
   2ac70:	stur	xzr, [x29, #-256]
   2ac74:	mov	x8, xzr
   2ac78:	mov	x0, x8
   2ac7c:	sub	x1, x29, #0xf1
   2ac80:	mov	x2, #0x1                   	// #1
   2ac84:	bl	b7e0 <rpl_mbrtowc@plt>
   2ac88:	mov	x8, #0xfffffffffffffffe    	// #-2
   2ac8c:	cmp	x0, x8
   2ac90:	b.ne	2acf4 <rpl_re_compile_fastmap@@Base+0x60c>  // b.any
   2ac94:	ldur	x8, [x29, #-120]
   2ac98:	ldurb	w9, [x29, #-241]
   2ac9c:	stur	x8, [x29, #-40]
   2aca0:	mov	w10, #0x0                   	// #0
   2aca4:	sturb	w10, [x29, #-41]
   2aca8:	stur	w9, [x29, #-48]
   2acac:	ldur	x8, [x29, #-40]
   2acb0:	ldursw	x11, [x29, #-48]
   2acb4:	add	x8, x8, x11
   2acb8:	mov	w9, #0x1                   	// #1
   2acbc:	strb	w9, [x8]
   2acc0:	ldurb	w9, [x29, #-41]
   2acc4:	tbnz	w9, #0, 2accc <rpl_re_compile_fastmap@@Base+0x5e4>
   2acc8:	b	2acf4 <rpl_re_compile_fastmap@@Base+0x60c>
   2accc:	ldur	x8, [x29, #-40]
   2acd0:	ldur	w0, [x29, #-48]
   2acd4:	str	x8, [sp, #24]
   2acd8:	bl	b7d0 <tolower@plt>
   2acdc:	mov	w1, w0
   2ace0:	sxtw	x8, w1
   2ace4:	ldr	x9, [sp, #24]
   2ace8:	add	x8, x9, x8
   2acec:	mov	w10, #0x1                   	// #1
   2acf0:	strb	w10, [x8]
   2acf4:	ldurb	w8, [x29, #-241]
   2acf8:	add	w8, w8, #0x1
   2acfc:	mov	w9, w8
   2ad00:	sturb	w9, [x29, #-241]
   2ad04:	and	w8, w8, #0xff
   2ad08:	cbnz	w8, 2ac6c <rpl_re_compile_fastmap@@Base+0x584>
   2ad0c:	b	2ae80 <rpl_re_compile_fastmap@@Base+0x798>
   2ad10:	stur	xzr, [x29, #-240]
   2ad14:	ldur	x8, [x29, #-240]
   2ad18:	ldur	x9, [x29, #-232]
   2ad1c:	ldr	x9, [x9, #40]
   2ad20:	cmp	x8, x9
   2ad24:	b.ge	2ae80 <rpl_re_compile_fastmap@@Base+0x798>  // b.tcont
   2ad28:	add	x2, sp, #0x58
   2ad2c:	str	xzr, [sp, #88]
   2ad30:	ldur	x8, [x29, #-232]
   2ad34:	ldr	x8, [x8]
   2ad38:	ldur	x9, [x29, #-240]
   2ad3c:	ldr	w1, [x8, x9, lsl #2]
   2ad40:	add	x0, sp, #0x60
   2ad44:	bl	b800 <wcrtomb@plt>
   2ad48:	mov	x8, #0xffffffffffffffff    	// #-1
   2ad4c:	cmp	x0, x8
   2ad50:	b.eq	2adb8 <rpl_re_compile_fastmap@@Base+0x6d0>  // b.none
   2ad54:	ldur	x8, [x29, #-120]
   2ad58:	ldurb	w9, [x29, #-137]
   2ad5c:	ldrb	w10, [sp, #96]
   2ad60:	stur	x8, [x29, #-24]
   2ad64:	and	w9, w9, #0x1
   2ad68:	sturb	w9, [x29, #-25]
   2ad6c:	stur	w10, [x29, #-32]
   2ad70:	ldur	x8, [x29, #-24]
   2ad74:	ldursw	x11, [x29, #-32]
   2ad78:	add	x8, x8, x11
   2ad7c:	mov	w9, #0x1                   	// #1
   2ad80:	strb	w9, [x8]
   2ad84:	ldurb	w9, [x29, #-25]
   2ad88:	tbnz	w9, #0, 2ad90 <rpl_re_compile_fastmap@@Base+0x6a8>
   2ad8c:	b	2adb8 <rpl_re_compile_fastmap@@Base+0x6d0>
   2ad90:	ldur	x8, [x29, #-24]
   2ad94:	ldur	w0, [x29, #-32]
   2ad98:	str	x8, [sp, #16]
   2ad9c:	bl	b7d0 <tolower@plt>
   2ada0:	mov	w1, w0
   2ada4:	sxtw	x8, w1
   2ada8:	ldr	x9, [sp, #16]
   2adac:	add	x8, x9, x8
   2adb0:	mov	w10, #0x1                   	// #1
   2adb4:	strb	w10, [x8]
   2adb8:	ldur	x8, [x29, #-104]
   2adbc:	ldr	x8, [x8, #24]
   2adc0:	and	x8, x8, #0x400000
   2adc4:	cbz	x8, 2ae70 <rpl_re_compile_fastmap@@Base+0x788>
   2adc8:	ldur	x8, [x29, #-128]
   2adcc:	ldr	w9, [x8, #180]
   2add0:	cmp	w9, #0x1
   2add4:	b.le	2ae70 <rpl_re_compile_fastmap@@Base+0x788>
   2add8:	ldur	x8, [x29, #-232]
   2addc:	ldr	x8, [x8]
   2ade0:	ldur	x9, [x29, #-240]
   2ade4:	ldr	w0, [x8, x9, lsl #2]
   2ade8:	bl	b7f0 <towlower@plt>
   2adec:	add	x8, sp, #0x60
   2adf0:	str	w0, [sp, #12]
   2adf4:	mov	x0, x8
   2adf8:	ldr	w1, [sp, #12]
   2adfc:	add	x2, sp, #0x58
   2ae00:	bl	b800 <wcrtomb@plt>
   2ae04:	mov	x8, #0xffffffffffffffff    	// #-1
   2ae08:	cmp	x0, x8
   2ae0c:	b.eq	2ae70 <rpl_re_compile_fastmap@@Base+0x788>  // b.none
   2ae10:	ldur	x8, [x29, #-120]
   2ae14:	ldrb	w9, [sp, #96]
   2ae18:	stur	x8, [x29, #-8]
   2ae1c:	mov	w10, #0x0                   	// #0
   2ae20:	sturb	w10, [x29, #-9]
   2ae24:	stur	w9, [x29, #-16]
   2ae28:	ldur	x8, [x29, #-8]
   2ae2c:	ldursw	x11, [x29, #-16]
   2ae30:	add	x8, x8, x11
   2ae34:	mov	w9, #0x1                   	// #1
   2ae38:	strb	w9, [x8]
   2ae3c:	ldurb	w9, [x29, #-9]
   2ae40:	tbnz	w9, #0, 2ae48 <rpl_re_compile_fastmap@@Base+0x760>
   2ae44:	b	2ae70 <rpl_re_compile_fastmap@@Base+0x788>
   2ae48:	ldur	x8, [x29, #-8]
   2ae4c:	ldur	w0, [x29, #-16]
   2ae50:	str	x8, [sp]
   2ae54:	bl	b7d0 <tolower@plt>
   2ae58:	mov	w1, w0
   2ae5c:	sxtw	x8, w1
   2ae60:	ldr	x9, [sp]
   2ae64:	add	x8, x9, x8
   2ae68:	mov	w10, #0x1                   	// #1
   2ae6c:	strb	w10, [x8]
   2ae70:	ldur	x8, [x29, #-240]
   2ae74:	add	x8, x8, #0x1
   2ae78:	stur	x8, [x29, #-240]
   2ae7c:	b	2ad14 <rpl_re_compile_fastmap@@Base+0x62c>
   2ae80:	b	2aedc <rpl_re_compile_fastmap@@Base+0x7f4>
   2ae84:	ldur	w8, [x29, #-156]
   2ae88:	cmp	w8, #0x5
   2ae8c:	b.eq	2aea8 <rpl_re_compile_fastmap@@Base+0x7c0>  // b.none
   2ae90:	ldur	w8, [x29, #-156]
   2ae94:	cmp	w8, #0x7
   2ae98:	b.eq	2aea8 <rpl_re_compile_fastmap@@Base+0x7c0>  // b.none
   2ae9c:	ldur	w8, [x29, #-156]
   2aea0:	cmp	w8, #0x2
   2aea4:	b.ne	2aedc <rpl_re_compile_fastmap@@Base+0x7f4>  // b.any
   2aea8:	ldur	x0, [x29, #-120]
   2aeac:	mov	w1, #0x1                   	// #1
   2aeb0:	mov	x2, #0x100                 	// #256
   2aeb4:	bl	a970 <memset@plt>
   2aeb8:	ldur	w8, [x29, #-156]
   2aebc:	cmp	w8, #0x2
   2aec0:	b.ne	2aed8 <rpl_re_compile_fastmap@@Base+0x7f0>  // b.any
   2aec4:	ldur	x8, [x29, #-104]
   2aec8:	ldrb	w9, [x8, #56]
   2aecc:	and	w9, w9, #0xfffffffe
   2aed0:	orr	w9, w9, #0x1
   2aed4:	strb	w9, [x8, #56]
   2aed8:	b	2aeec <rpl_re_compile_fastmap@@Base+0x804>
   2aedc:	ldur	x8, [x29, #-136]
   2aee0:	add	x8, x8, #0x1
   2aee4:	stur	x8, [x29, #-136]
   2aee8:	b	2a848 <rpl_re_compile_fastmap@@Base+0x160>
   2aeec:	add	sp, sp, #0x260
   2aef0:	ldr	x28, [sp, #16]
   2aef4:	ldp	x29, x30, [sp], #32
   2aef8:	ret

000000000002aefc <rpl_regcomp@@Base>:
   2aefc:	sub	sp, sp, #0x50
   2af00:	stp	x29, x30, [sp, #64]
   2af04:	add	x29, sp, #0x40
   2af08:	mov	x8, #0xb2fc                	// #45820
   2af0c:	movk	x8, #0x3, lsl #16
   2af10:	mov	x9, #0x2c6                 	// #710
   2af14:	movk	x9, #0x101, lsl #16
   2af18:	mov	x10, xzr
   2af1c:	mov	x11, #0x100                 	// #256
   2af20:	stur	x0, [x29, #-16]
   2af24:	stur	x1, [x29, #-24]
   2af28:	stur	w2, [x29, #-28]
   2af2c:	ldur	w12, [x29, #-28]
   2af30:	tst	w12, #0x1
   2af34:	csel	x8, x8, x9, ne  // ne = any
   2af38:	str	x8, [sp, #24]
   2af3c:	ldur	x8, [x29, #-16]
   2af40:	str	x10, [x8]
   2af44:	ldur	x8, [x29, #-16]
   2af48:	str	xzr, [x8, #8]
   2af4c:	ldur	x8, [x29, #-16]
   2af50:	str	xzr, [x8, #16]
   2af54:	mov	x0, x11
   2af58:	bl	af10 <malloc@plt>
   2af5c:	ldur	x8, [x29, #-16]
   2af60:	str	x0, [x8, #32]
   2af64:	ldur	x8, [x29, #-16]
   2af68:	ldr	x8, [x8, #32]
   2af6c:	cmp	x8, #0x0
   2af70:	cset	w12, eq  // eq = none
   2af74:	and	w12, w12, #0x1
   2af78:	mov	w0, w12
   2af7c:	sxtw	x8, w0
   2af80:	cbz	x8, 2af90 <rpl_regcomp@@Base+0x94>
   2af84:	mov	w8, #0xc                   	// #12
   2af88:	stur	w8, [x29, #-4]
   2af8c:	b	2b0d8 <rpl_regcomp@@Base+0x1dc>
   2af90:	ldur	w8, [x29, #-28]
   2af94:	mov	x9, #0x400000              	// #4194304
   2af98:	mov	x10, xzr
   2af9c:	tst	w8, #0x2
   2afa0:	csel	x9, x9, x10, ne  // ne = any
   2afa4:	ldr	x10, [sp, #24]
   2afa8:	orr	x9, x10, x9
   2afac:	str	x9, [sp, #24]
   2afb0:	ldur	w8, [x29, #-28]
   2afb4:	and	w8, w8, #0x4
   2afb8:	cbz	w8, 2afec <rpl_regcomp@@Base+0xf0>
   2afbc:	ldr	x8, [sp, #24]
   2afc0:	and	x8, x8, #0xffffffffffffffbf
   2afc4:	str	x8, [sp, #24]
   2afc8:	ldr	x8, [sp, #24]
   2afcc:	orr	x8, x8, #0x100
   2afd0:	str	x8, [sp, #24]
   2afd4:	ldur	x8, [x29, #-16]
   2afd8:	ldrb	w9, [x8, #56]
   2afdc:	and	w9, w9, #0x7f
   2afe0:	orr	w9, w9, #0xffffff80
   2afe4:	strb	w9, [x8, #56]
   2afe8:	b	2affc <rpl_regcomp@@Base+0x100>
   2afec:	ldur	x8, [x29, #-16]
   2aff0:	ldrb	w9, [x8, #56]
   2aff4:	and	w9, w9, #0x7f
   2aff8:	strb	w9, [x8, #56]
   2affc:	ldur	w8, [x29, #-28]
   2b000:	tst	w8, #0x8
   2b004:	cset	w8, ne  // ne = any
   2b008:	mov	w9, #0x1                   	// #1
   2b00c:	eor	w8, w8, #0x1
   2b010:	eor	w8, w8, w9
   2b014:	and	w8, w8, #0x1
   2b018:	ldur	x10, [x29, #-16]
   2b01c:	ldrb	w11, [x10, #56]
   2b020:	and	w8, w8, w9
   2b024:	lsl	w8, w8, #4
   2b028:	and	w9, w11, #0xffffffef
   2b02c:	orr	w8, w9, w8
   2b030:	strb	w8, [x10, #56]
   2b034:	ldur	x10, [x29, #-16]
   2b038:	mov	x12, xzr
   2b03c:	str	x12, [x10, #40]
   2b040:	ldur	x0, [x29, #-16]
   2b044:	ldur	x1, [x29, #-24]
   2b048:	ldur	x10, [x29, #-24]
   2b04c:	str	x0, [sp, #16]
   2b050:	mov	x0, x10
   2b054:	str	x1, [sp, #8]
   2b058:	bl	a8e0 <strlen@plt>
   2b05c:	ldr	x3, [sp, #24]
   2b060:	ldr	x10, [sp, #16]
   2b064:	str	x0, [sp]
   2b068:	mov	x0, x10
   2b06c:	ldr	x1, [sp, #8]
   2b070:	ldr	x2, [sp]
   2b074:	bl	2a2f0 <rpl_re_compile_pattern@@Base+0xcc>
   2b078:	str	w0, [sp, #32]
   2b07c:	ldr	w8, [sp, #32]
   2b080:	cmp	w8, #0x10
   2b084:	b.ne	2b090 <rpl_regcomp@@Base+0x194>  // b.any
   2b088:	mov	w8, #0x8                   	// #8
   2b08c:	str	w8, [sp, #32]
   2b090:	ldr	w8, [sp, #32]
   2b094:	cmp	w8, #0x0
   2b098:	cset	w8, eq  // eq = none
   2b09c:	and	w8, w8, #0x1
   2b0a0:	mov	w0, w8
   2b0a4:	sxtw	x9, w0
   2b0a8:	cbz	x9, 2b0b8 <rpl_regcomp@@Base+0x1bc>
   2b0ac:	ldur	x0, [x29, #-16]
   2b0b0:	bl	b810 <rpl_re_compile_fastmap@plt>
   2b0b4:	b	2b0d0 <rpl_regcomp@@Base+0x1d4>
   2b0b8:	ldur	x8, [x29, #-16]
   2b0bc:	ldr	x0, [x8, #32]
   2b0c0:	bl	a930 <free@plt>
   2b0c4:	ldur	x8, [x29, #-16]
   2b0c8:	mov	x9, xzr
   2b0cc:	str	x9, [x8, #32]
   2b0d0:	ldr	w8, [sp, #32]
   2b0d4:	stur	w8, [x29, #-4]
   2b0d8:	ldur	w0, [x29, #-4]
   2b0dc:	ldp	x29, x30, [sp, #64]
   2b0e0:	add	sp, sp, #0x50
   2b0e4:	ret

000000000002b0e8 <rpl_regerror@@Base>:
   2b0e8:	sub	sp, sp, #0x60
   2b0ec:	stp	x29, x30, [sp, #80]
   2b0f0:	add	x29, sp, #0x50
   2b0f4:	mov	w8, #0x11                  	// #17
   2b0f8:	stur	w0, [x29, #-4]
   2b0fc:	stur	x1, [x29, #-16]
   2b100:	stur	x2, [x29, #-24]
   2b104:	stur	x3, [x29, #-32]
   2b108:	str	w8, [sp, #28]
   2b10c:	ldur	w8, [x29, #-4]
   2b110:	cmp	w8, #0x0
   2b114:	cset	w8, lt  // lt = tstop
   2b118:	mov	w9, #0x1                   	// #1
   2b11c:	str	w9, [sp, #12]
   2b120:	tbnz	w8, #0, 2b138 <rpl_regerror@@Base+0x50>
   2b124:	ldur	w8, [x29, #-4]
   2b128:	ldr	w9, [sp, #28]
   2b12c:	cmp	w8, w9
   2b130:	cset	w8, ge  // ge = tcont
   2b134:	str	w8, [sp, #12]
   2b138:	ldr	w8, [sp, #12]
   2b13c:	and	w8, w8, #0x1
   2b140:	mov	w0, w8
   2b144:	sxtw	x9, w0
   2b148:	cbz	x9, 2b150 <rpl_regerror@@Base+0x68>
   2b14c:	bl	a9e0 <abort@plt>
   2b150:	ldursw	x8, [x29, #-4]
   2b154:	adrp	x9, 47000 <vasnprintf@@Base+0x4e4c>
   2b158:	add	x9, x9, #0x770
   2b15c:	ldr	x8, [x9, x8, lsl #3]
   2b160:	adrp	x9, 47000 <vasnprintf@@Base+0x4e4c>
   2b164:	add	x9, x9, #0x5ec
   2b168:	add	x0, x9, x8
   2b16c:	bl	adb0 <gettext@plt>
   2b170:	str	x0, [sp, #40]
   2b174:	ldr	x0, [sp, #40]
   2b178:	bl	a8e0 <strlen@plt>
   2b17c:	add	x8, x0, #0x1
   2b180:	str	x8, [sp, #32]
   2b184:	ldur	x8, [x29, #-32]
   2b188:	cmp	x8, #0x0
   2b18c:	cset	w10, ne  // ne = any
   2b190:	and	w10, w10, #0x1
   2b194:	mov	w0, w10
   2b198:	sxtw	x8, w0
   2b19c:	cbz	x8, 2b1f8 <rpl_regerror@@Base+0x110>
   2b1a0:	ldr	x8, [sp, #32]
   2b1a4:	str	x8, [sp, #16]
   2b1a8:	ldr	x8, [sp, #32]
   2b1ac:	ldur	x9, [x29, #-32]
   2b1b0:	cmp	x8, x9
   2b1b4:	cset	w10, hi  // hi = pmore
   2b1b8:	and	w10, w10, #0x1
   2b1bc:	mov	w0, w10
   2b1c0:	sxtw	x8, w0
   2b1c4:	cbz	x8, 2b1e8 <rpl_regerror@@Base+0x100>
   2b1c8:	ldur	x8, [x29, #-32]
   2b1cc:	subs	x8, x8, #0x1
   2b1d0:	str	x8, [sp, #16]
   2b1d4:	ldur	x8, [x29, #-24]
   2b1d8:	ldr	x9, [sp, #16]
   2b1dc:	add	x8, x8, x9
   2b1e0:	mov	w10, #0x0                   	// #0
   2b1e4:	strb	w10, [x8]
   2b1e8:	ldur	x0, [x29, #-24]
   2b1ec:	ldr	x1, [sp, #40]
   2b1f0:	ldr	x2, [sp, #16]
   2b1f4:	bl	af30 <memcpy@plt>
   2b1f8:	ldr	x0, [sp, #32]
   2b1fc:	ldp	x29, x30, [sp, #80]
   2b200:	add	sp, sp, #0x60
   2b204:	ret

000000000002b208 <rpl_regfree@@Base>:
   2b208:	sub	sp, sp, #0x40
   2b20c:	stp	x29, x30, [sp, #48]
   2b210:	add	x29, sp, #0x30
   2b214:	adrp	x8, 5f000 <vasnprintf@@Base+0x1ce4c>
   2b218:	ldr	x8, [x8, #4056]
   2b21c:	adrp	x9, 5f000 <vasnprintf@@Base+0x1ce4c>
   2b220:	ldr	x9, [x9, #4064]
   2b224:	stur	x0, [x29, #-8]
   2b228:	ldur	x10, [x29, #-8]
   2b22c:	ldr	x10, [x10]
   2b230:	stur	x10, [x29, #-16]
   2b234:	ldur	x10, [x29, #-16]
   2b238:	cmp	x10, #0x0
   2b23c:	cset	w11, ne  // ne = any
   2b240:	and	w11, w11, #0x1
   2b244:	mov	w0, w11
   2b248:	sxtw	x10, w0
   2b24c:	str	x8, [sp, #24]
   2b250:	str	x9, [sp, #16]
   2b254:	cbz	x10, 2b280 <rpl_regfree@@Base+0x78>
   2b258:	ldr	x8, [sp, #24]
   2b25c:	cbnz	x8, 2b268 <rpl_regfree@@Base+0x60>
   2b260:	ldr	x8, [sp, #16]
   2b264:	cbz	x8, 2b278 <rpl_regfree@@Base+0x70>
   2b268:	ldur	x8, [x29, #-16]
   2b26c:	add	x0, x8, #0xe8
   2b270:	bl	b7c0 <pthread_mutex_destroy@plt>
   2b274:	b	2b278 <rpl_regfree@@Base+0x70>
   2b278:	ldur	x0, [x29, #-16]
   2b27c:	bl	2b2d4 <rpl_regfree@@Base+0xcc>
   2b280:	ldur	x8, [x29, #-8]
   2b284:	mov	x9, xzr
   2b288:	str	x9, [x8]
   2b28c:	ldur	x8, [x29, #-8]
   2b290:	str	xzr, [x8, #8]
   2b294:	ldur	x8, [x29, #-8]
   2b298:	ldr	x0, [x8, #32]
   2b29c:	str	x9, [sp, #8]
   2b2a0:	bl	a930 <free@plt>
   2b2a4:	ldur	x8, [x29, #-8]
   2b2a8:	ldr	x9, [sp, #8]
   2b2ac:	str	x9, [x8, #32]
   2b2b0:	ldur	x8, [x29, #-8]
   2b2b4:	ldr	x0, [x8, #40]
   2b2b8:	bl	a930 <free@plt>
   2b2bc:	ldur	x8, [x29, #-8]
   2b2c0:	ldr	x9, [sp, #8]
   2b2c4:	str	x9, [x8, #40]
   2b2c8:	ldp	x29, x30, [sp, #48]
   2b2cc:	add	sp, sp, #0x40
   2b2d0:	ret
   2b2d4:	sub	sp, sp, #0x40
   2b2d8:	stp	x29, x30, [sp, #48]
   2b2dc:	add	x29, sp, #0x30
   2b2e0:	stur	x0, [x29, #-8]
   2b2e4:	ldur	x8, [x29, #-8]
   2b2e8:	ldr	x8, [x8]
   2b2ec:	cbz	x8, 2b334 <rpl_regfree@@Base+0x12c>
   2b2f0:	stur	xzr, [x29, #-16]
   2b2f4:	ldur	x8, [x29, #-16]
   2b2f8:	ldur	x9, [x29, #-8]
   2b2fc:	ldr	x9, [x9, #16]
   2b300:	cmp	x8, x9
   2b304:	b.cs	2b334 <rpl_regfree@@Base+0x12c>  // b.hs, b.nlast
   2b308:	ldur	x8, [x29, #-8]
   2b30c:	ldr	x8, [x8]
   2b310:	ldur	x9, [x29, #-16]
   2b314:	mov	x10, #0x10                  	// #16
   2b318:	mul	x9, x10, x9
   2b31c:	add	x0, x8, x9
   2b320:	bl	2d02c <rpl_re_set_registers@@Base+0x90>
   2b324:	ldur	x8, [x29, #-16]
   2b328:	add	x8, x8, #0x1
   2b32c:	stur	x8, [x29, #-16]
   2b330:	b	2b2f4 <rpl_regfree@@Base+0xec>
   2b334:	ldur	x8, [x29, #-8]
   2b338:	ldr	x0, [x8, #24]
   2b33c:	bl	a930 <free@plt>
   2b340:	stur	xzr, [x29, #-16]
   2b344:	ldur	x8, [x29, #-16]
   2b348:	ldur	x9, [x29, #-8]
   2b34c:	ldr	x9, [x9, #16]
   2b350:	cmp	x8, x9
   2b354:	b.cs	2b3ec <rpl_regfree@@Base+0x1e4>  // b.hs, b.nlast
   2b358:	ldur	x8, [x29, #-8]
   2b35c:	ldr	x8, [x8, #48]
   2b360:	cbz	x8, 2b384 <rpl_regfree@@Base+0x17c>
   2b364:	ldur	x8, [x29, #-8]
   2b368:	ldr	x8, [x8, #48]
   2b36c:	ldur	x9, [x29, #-16]
   2b370:	mov	x10, #0x18                  	// #24
   2b374:	mul	x9, x10, x9
   2b378:	add	x8, x8, x9
   2b37c:	ldr	x0, [x8, #16]
   2b380:	bl	a930 <free@plt>
   2b384:	ldur	x8, [x29, #-8]
   2b388:	ldr	x8, [x8, #56]
   2b38c:	cbz	x8, 2b3b0 <rpl_regfree@@Base+0x1a8>
   2b390:	ldur	x8, [x29, #-8]
   2b394:	ldr	x8, [x8, #56]
   2b398:	ldur	x9, [x29, #-16]
   2b39c:	mov	x10, #0x18                  	// #24
   2b3a0:	mul	x9, x10, x9
   2b3a4:	add	x8, x8, x9
   2b3a8:	ldr	x0, [x8, #16]
   2b3ac:	bl	a930 <free@plt>
   2b3b0:	ldur	x8, [x29, #-8]
   2b3b4:	ldr	x8, [x8, #40]
   2b3b8:	cbz	x8, 2b3dc <rpl_regfree@@Base+0x1d4>
   2b3bc:	ldur	x8, [x29, #-8]
   2b3c0:	ldr	x8, [x8, #40]
   2b3c4:	ldur	x9, [x29, #-16]
   2b3c8:	mov	x10, #0x18                  	// #24
   2b3cc:	mul	x9, x10, x9
   2b3d0:	add	x8, x8, x9
   2b3d4:	ldr	x0, [x8, #16]
   2b3d8:	bl	a930 <free@plt>
   2b3dc:	ldur	x8, [x29, #-16]
   2b3e0:	add	x8, x8, #0x1
   2b3e4:	stur	x8, [x29, #-16]
   2b3e8:	b	2b344 <rpl_regfree@@Base+0x13c>
   2b3ec:	ldur	x8, [x29, #-8]
   2b3f0:	ldr	x0, [x8, #40]
   2b3f4:	bl	a930 <free@plt>
   2b3f8:	ldur	x8, [x29, #-8]
   2b3fc:	ldr	x0, [x8, #48]
   2b400:	bl	a930 <free@plt>
   2b404:	ldur	x8, [x29, #-8]
   2b408:	ldr	x0, [x8, #56]
   2b40c:	bl	a930 <free@plt>
   2b410:	ldur	x8, [x29, #-8]
   2b414:	ldr	x0, [x8]
   2b418:	bl	a930 <free@plt>
   2b41c:	ldur	x8, [x29, #-8]
   2b420:	ldr	x8, [x8, #64]
   2b424:	cbz	x8, 2b4c8 <rpl_regfree@@Base+0x2c0>
   2b428:	stur	xzr, [x29, #-16]
   2b42c:	ldur	x8, [x29, #-16]
   2b430:	ldur	x9, [x29, #-8]
   2b434:	ldr	x9, [x9, #136]
   2b438:	cmp	x8, x9
   2b43c:	b.hi	2b4c8 <rpl_regfree@@Base+0x2c0>  // b.pmore
   2b440:	ldur	x8, [x29, #-8]
   2b444:	ldr	x8, [x8, #64]
   2b448:	ldur	x9, [x29, #-16]
   2b44c:	mov	x10, #0x18                  	// #24
   2b450:	mul	x9, x10, x9
   2b454:	add	x8, x8, x9
   2b458:	str	x8, [sp, #16]
   2b45c:	str	xzr, [sp, #24]
   2b460:	ldr	x8, [sp, #24]
   2b464:	ldr	x9, [sp, #16]
   2b468:	ldr	x9, [x9]
   2b46c:	cmp	x8, x9
   2b470:	b.ge	2b4ac <rpl_regfree@@Base+0x2a4>  // b.tcont
   2b474:	ldr	x8, [sp, #16]
   2b478:	ldr	x8, [x8, #16]
   2b47c:	ldr	x9, [sp, #24]
   2b480:	mov	x10, #0x8                   	// #8
   2b484:	mul	x9, x10, x9
   2b488:	add	x8, x8, x9
   2b48c:	ldr	x8, [x8]
   2b490:	str	x8, [sp, #8]
   2b494:	ldr	x0, [sp, #8]
   2b498:	bl	2d0b4 <rpl_re_set_registers@@Base+0x118>
   2b49c:	ldr	x8, [sp, #24]
   2b4a0:	add	x8, x8, #0x1
   2b4a4:	str	x8, [sp, #24]
   2b4a8:	b	2b460 <rpl_regfree@@Base+0x258>
   2b4ac:	ldr	x8, [sp, #16]
   2b4b0:	ldr	x0, [x8, #16]
   2b4b4:	bl	a930 <free@plt>
   2b4b8:	ldur	x8, [x29, #-16]
   2b4bc:	add	x8, x8, #0x1
   2b4c0:	stur	x8, [x29, #-16]
   2b4c4:	b	2b42c <rpl_regfree@@Base+0x224>
   2b4c8:	ldur	x8, [x29, #-8]
   2b4cc:	ldr	x0, [x8, #64]
   2b4d0:	bl	a930 <free@plt>
   2b4d4:	ldur	x8, [x29, #-8]
   2b4d8:	ldr	x8, [x8, #120]
   2b4dc:	adrp	x9, 47000 <vasnprintf@@Base+0x4e4c>
   2b4e0:	add	x9, x9, #0x7f8
   2b4e4:	cmp	x8, x9
   2b4e8:	b.eq	2b4f8 <rpl_regfree@@Base+0x2f0>  // b.none
   2b4ec:	ldur	x8, [x29, #-8]
   2b4f0:	ldr	x0, [x8, #120]
   2b4f4:	bl	a930 <free@plt>
   2b4f8:	ldur	x8, [x29, #-8]
   2b4fc:	ldr	x0, [x8, #224]
   2b500:	bl	a930 <free@plt>
   2b504:	ldur	x0, [x29, #-8]
   2b508:	bl	a930 <free@plt>
   2b50c:	ldp	x29, x30, [sp, #48]
   2b510:	add	sp, sp, #0x40
   2b514:	ret

000000000002b518 <rpl_regexec@@Base>:
   2b518:	sub	sp, sp, #0x70
   2b51c:	stp	x29, x30, [sp, #96]
   2b520:	add	x29, sp, #0x60
   2b524:	adrp	x8, 5f000 <vasnprintf@@Base+0x1ce4c>
   2b528:	ldr	x8, [x8, #4056]
   2b52c:	adrp	x9, 5f000 <vasnprintf@@Base+0x1ce4c>
   2b530:	ldr	x9, [x9, #4064]
   2b534:	stur	x0, [x29, #-16]
   2b538:	stur	x1, [x29, #-24]
   2b53c:	stur	x2, [x29, #-32]
   2b540:	stur	x3, [x29, #-40]
   2b544:	stur	w4, [x29, #-44]
   2b548:	ldur	x10, [x29, #-16]
   2b54c:	ldr	x10, [x10]
   2b550:	str	x10, [sp, #24]
   2b554:	ldur	w11, [x29, #-44]
   2b558:	and	w11, w11, #0xfffffff8
   2b55c:	str	x8, [sp, #16]
   2b560:	str	x9, [sp, #8]
   2b564:	cbz	w11, 2b574 <rpl_regexec@@Base+0x5c>
   2b568:	mov	w8, #0x2                   	// #2
   2b56c:	stur	w8, [x29, #-4]
   2b570:	b	2b694 <rpl_regexec@@Base+0x17c>
   2b574:	ldur	w8, [x29, #-44]
   2b578:	and	w8, w8, #0x4
   2b57c:	cbz	w8, 2b59c <rpl_regexec@@Base+0x84>
   2b580:	ldur	x8, [x29, #-40]
   2b584:	ldr	x8, [x8]
   2b588:	str	x8, [sp, #40]
   2b58c:	ldur	x8, [x29, #-40]
   2b590:	ldr	x8, [x8, #8]
   2b594:	str	x8, [sp, #32]
   2b598:	b	2b5ac <rpl_regexec@@Base+0x94>
   2b59c:	str	xzr, [sp, #40]
   2b5a0:	ldur	x0, [x29, #-24]
   2b5a4:	bl	a8e0 <strlen@plt>
   2b5a8:	str	x0, [sp, #32]
   2b5ac:	ldr	x8, [sp, #16]
   2b5b0:	cbnz	x8, 2b5c0 <rpl_regexec@@Base+0xa8>
   2b5b4:	ldr	x8, [sp, #8]
   2b5b8:	cbnz	x8, 2b5c0 <rpl_regexec@@Base+0xa8>
   2b5bc:	b	2b5d0 <rpl_regexec@@Base+0xb8>
   2b5c0:	ldr	x8, [sp, #24]
   2b5c4:	add	x0, x8, #0xe8
   2b5c8:	bl	b820 <pthread_mutex_lock@plt>
   2b5cc:	b	2b5d0 <rpl_regexec@@Base+0xb8>
   2b5d0:	ldur	x8, [x29, #-16]
   2b5d4:	ldrb	w9, [x8, #56]
   2b5d8:	mov	w10, #0x4                   	// #4
   2b5dc:	lsr	w9, w9, w10
   2b5e0:	and	w9, w9, #0x1
   2b5e4:	and	w9, w9, #0xff
   2b5e8:	cbz	w9, 2b628 <rpl_regexec@@Base+0x110>
   2b5ec:	ldur	x0, [x29, #-16]
   2b5f0:	ldur	x1, [x29, #-24]
   2b5f4:	ldr	x2, [sp, #32]
   2b5f8:	ldr	x3, [sp, #40]
   2b5fc:	ldr	x4, [sp, #32]
   2b600:	ldr	x5, [sp, #32]
   2b604:	ldur	w8, [x29, #-44]
   2b608:	mov	x9, xzr
   2b60c:	mov	x6, x9
   2b610:	mov	x7, x9
   2b614:	mov	x9, sp
   2b618:	str	w8, [x9]
   2b61c:	bl	2b6a4 <rpl_regexec@@Base+0x18c>
   2b620:	str	w0, [sp, #48]
   2b624:	b	2b65c <rpl_regexec@@Base+0x144>
   2b628:	ldur	x0, [x29, #-16]
   2b62c:	ldur	x1, [x29, #-24]
   2b630:	ldr	x2, [sp, #32]
   2b634:	ldr	x3, [sp, #40]
   2b638:	ldr	x4, [sp, #32]
   2b63c:	ldr	x5, [sp, #32]
   2b640:	ldur	x6, [x29, #-32]
   2b644:	ldur	x7, [x29, #-40]
   2b648:	ldur	w8, [x29, #-44]
   2b64c:	mov	x9, sp
   2b650:	str	w8, [x9]
   2b654:	bl	2b6a4 <rpl_regexec@@Base+0x18c>
   2b658:	str	w0, [sp, #48]
   2b65c:	ldr	x8, [sp, #16]
   2b660:	cbnz	x8, 2b670 <rpl_regexec@@Base+0x158>
   2b664:	ldr	x8, [sp, #8]
   2b668:	cbnz	x8, 2b670 <rpl_regexec@@Base+0x158>
   2b66c:	b	2b680 <rpl_regexec@@Base+0x168>
   2b670:	ldr	x8, [sp, #24]
   2b674:	add	x0, x8, #0xe8
   2b678:	bl	b830 <pthread_mutex_unlock@plt>
   2b67c:	b	2b680 <rpl_regexec@@Base+0x168>
   2b680:	ldr	w8, [sp, #48]
   2b684:	cmp	w8, #0x0
   2b688:	cset	w8, ne  // ne = any
   2b68c:	and	w8, w8, #0x1
   2b690:	stur	w8, [x29, #-4]
   2b694:	ldur	w0, [x29, #-4]
   2b698:	ldp	x29, x30, [sp, #96]
   2b69c:	add	sp, sp, #0x70
   2b6a0:	ret
   2b6a4:	stp	x29, x30, [sp, #-32]!
   2b6a8:	str	x28, [sp, #16]
   2b6ac:	mov	x29, sp
   2b6b0:	sub	sp, sp, #0x280
   2b6b4:	ldr	w8, [x29, #32]
   2b6b8:	mov	x9, #0xffffffffffffffff    	// #-1
   2b6bc:	mov	x10, #0x100                 	// #256
   2b6c0:	mov	w11, wzr
   2b6c4:	add	x12, sp, #0xe8
   2b6c8:	stur	x0, [x29, #-16]
   2b6cc:	stur	x1, [x29, #-24]
   2b6d0:	stur	x2, [x29, #-32]
   2b6d4:	stur	x3, [x29, #-40]
   2b6d8:	stur	x4, [x29, #-48]
   2b6dc:	stur	x5, [x29, #-56]
   2b6e0:	stur	x6, [x29, #-64]
   2b6e4:	stur	x7, [x29, #-72]
   2b6e8:	stur	w8, [x29, #-76]
   2b6ec:	ldur	x13, [x29, #-16]
   2b6f0:	ldr	x13, [x13]
   2b6f4:	stur	x13, [x29, #-88]
   2b6f8:	stur	x9, [x29, #-136]
   2b6fc:	mov	x0, x12
   2b700:	mov	w1, w11
   2b704:	mov	x2, x10
   2b708:	str	x12, [sp, #184]
   2b70c:	bl	a970 <memset@plt>
   2b710:	ldur	x9, [x29, #-88]
   2b714:	ldr	x10, [sp, #184]
   2b718:	str	x9, [x10, #152]
   2b71c:	ldur	x9, [x29, #-16]
   2b720:	ldr	x9, [x9, #32]
   2b724:	cbz	x9, 2b778 <rpl_regexec@@Base+0x260>
   2b728:	ldur	x8, [x29, #-16]
   2b72c:	ldrb	w9, [x8, #56]
   2b730:	mov	w10, #0x3                   	// #3
   2b734:	lsr	w9, w9, w10
   2b738:	and	w9, w9, #0x1
   2b73c:	and	w9, w9, #0xff
   2b740:	cbz	w9, 2b778 <rpl_regexec@@Base+0x260>
   2b744:	ldur	x8, [x29, #-40]
   2b748:	ldur	x9, [x29, #-48]
   2b74c:	cmp	x8, x9
   2b750:	b.eq	2b778 <rpl_regexec@@Base+0x260>  // b.none
   2b754:	ldur	x8, [x29, #-16]
   2b758:	ldrb	w9, [x8, #56]
   2b75c:	and	w9, w9, #0x1
   2b760:	and	w9, w9, #0xff
   2b764:	cbnz	w9, 2b778 <rpl_regexec@@Base+0x260>
   2b768:	ldur	x8, [x29, #-16]
   2b76c:	ldr	x8, [x8, #32]
   2b770:	str	x8, [sp, #176]
   2b774:	b	2b780 <rpl_regexec@@Base+0x268>
   2b778:	mov	x8, xzr
   2b77c:	str	x8, [sp, #176]
   2b780:	ldr	x8, [sp, #176]
   2b784:	str	x8, [sp, #224]
   2b788:	ldur	x8, [x29, #-16]
   2b78c:	ldr	x8, [x8, #40]
   2b790:	str	x8, [sp, #216]
   2b794:	ldur	x8, [x29, #-64]
   2b798:	ldur	x9, [x29, #-16]
   2b79c:	ldr	x9, [x9, #48]
   2b7a0:	cmp	x8, x9
   2b7a4:	b.ls	2b7c4 <rpl_regexec@@Base+0x2ac>  // b.plast
   2b7a8:	ldur	x8, [x29, #-64]
   2b7ac:	ldur	x9, [x29, #-16]
   2b7b0:	ldr	x9, [x9, #48]
   2b7b4:	add	x9, x9, #0x1
   2b7b8:	subs	x8, x8, x9
   2b7bc:	str	x8, [sp, #168]
   2b7c0:	b	2b7cc <rpl_regexec@@Base+0x2b4>
   2b7c4:	mov	x8, xzr
   2b7c8:	str	x8, [sp, #168]
   2b7cc:	ldr	x8, [sp, #168]
   2b7d0:	stur	x8, [x29, #-144]
   2b7d4:	ldur	x8, [x29, #-144]
   2b7d8:	ldur	x9, [x29, #-64]
   2b7dc:	subs	x8, x9, x8
   2b7e0:	stur	x8, [x29, #-64]
   2b7e4:	ldur	x8, [x29, #-16]
   2b7e8:	ldr	x8, [x8, #16]
   2b7ec:	mov	w10, #0x1                   	// #1
   2b7f0:	str	w10, [sp, #164]
   2b7f4:	cbz	x8, 2b848 <rpl_regexec@@Base+0x330>
   2b7f8:	ldur	x8, [x29, #-88]
   2b7fc:	ldr	x8, [x8, #72]
   2b800:	mov	w9, #0x1                   	// #1
   2b804:	str	w9, [sp, #164]
   2b808:	cbz	x8, 2b848 <rpl_regexec@@Base+0x330>
   2b80c:	ldur	x8, [x29, #-88]
   2b810:	ldr	x8, [x8, #80]
   2b814:	mov	w9, #0x1                   	// #1
   2b818:	str	w9, [sp, #164]
   2b81c:	cbz	x8, 2b848 <rpl_regexec@@Base+0x330>
   2b820:	ldur	x8, [x29, #-88]
   2b824:	ldr	x8, [x8, #88]
   2b828:	mov	w9, #0x1                   	// #1
   2b82c:	str	w9, [sp, #164]
   2b830:	cbz	x8, 2b848 <rpl_regexec@@Base+0x330>
   2b834:	ldur	x8, [x29, #-88]
   2b838:	ldr	x8, [x8, #96]
   2b83c:	cmp	x8, #0x0
   2b840:	cset	w9, eq  // eq = none
   2b844:	str	w9, [sp, #164]
   2b848:	ldr	w8, [sp, #164]
   2b84c:	and	w8, w8, #0x1
   2b850:	mov	w0, w8
   2b854:	sxtw	x9, w0
   2b858:	cbz	x9, 2b868 <rpl_regexec@@Base+0x350>
   2b85c:	mov	w8, #0x1                   	// #1
   2b860:	stur	w8, [x29, #-4]
   2b864:	b	2c58c <rpl_regexec@@Base+0x1074>
   2b868:	ldur	x8, [x29, #-88]
   2b86c:	ldr	x8, [x8, #72]
   2b870:	ldr	x8, [x8, #16]
   2b874:	cbnz	x8, 2b8d4 <rpl_regexec@@Base+0x3bc>
   2b878:	ldur	x8, [x29, #-88]
   2b87c:	ldr	x8, [x8, #80]
   2b880:	ldr	x8, [x8, #16]
   2b884:	cbnz	x8, 2b8d4 <rpl_regexec@@Base+0x3bc>
   2b888:	ldur	x8, [x29, #-88]
   2b88c:	ldr	x8, [x8, #88]
   2b890:	ldr	x8, [x8, #16]
   2b894:	cbz	x8, 2b8b0 <rpl_regexec@@Base+0x398>
   2b898:	ldur	x8, [x29, #-16]
   2b89c:	ldrb	w9, [x8, #56]
   2b8a0:	mov	w10, #0x7                   	// #7
   2b8a4:	lsr	w9, w9, w10
   2b8a8:	and	w9, w9, #0xff
   2b8ac:	cbnz	w9, 2b8d4 <rpl_regexec@@Base+0x3bc>
   2b8b0:	ldur	x8, [x29, #-40]
   2b8b4:	cbz	x8, 2b8cc <rpl_regexec@@Base+0x3b4>
   2b8b8:	ldur	x8, [x29, #-48]
   2b8bc:	cbz	x8, 2b8cc <rpl_regexec@@Base+0x3b4>
   2b8c0:	mov	w8, #0x1                   	// #1
   2b8c4:	stur	w8, [x29, #-4]
   2b8c8:	b	2c58c <rpl_regexec@@Base+0x1074>
   2b8cc:	stur	xzr, [x29, #-48]
   2b8d0:	stur	xzr, [x29, #-40]
   2b8d4:	ldur	x8, [x29, #-64]
   2b8d8:	mov	w9, #0x1                   	// #1
   2b8dc:	str	w9, [sp, #160]
   2b8e0:	cbnz	x8, 2b8f8 <rpl_regexec@@Base+0x3e0>
   2b8e4:	ldur	x8, [x29, #-88]
   2b8e8:	ldr	x8, [x8, #152]
   2b8ec:	cmp	x8, #0x0
   2b8f0:	cset	w9, ne  // ne = any
   2b8f4:	str	w9, [sp, #160]
   2b8f8:	ldr	w8, [sp, #160]
   2b8fc:	mov	w9, #0x1                   	// #1
   2b900:	and	w8, w8, w9
   2b904:	sturb	w8, [x29, #-109]
   2b908:	ldur	x1, [x29, #-24]
   2b90c:	ldur	x2, [x29, #-32]
   2b910:	ldur	x10, [x29, #-88]
   2b914:	ldr	x10, [x10, #16]
   2b918:	add	x3, x10, #0x1
   2b91c:	ldur	x10, [x29, #-16]
   2b920:	ldr	x4, [x10, #40]
   2b924:	ldur	x10, [x29, #-16]
   2b928:	ldr	x10, [x10, #24]
   2b92c:	tst	x10, #0x400000
   2b930:	cset	w8, ne  // ne = any
   2b934:	ldur	x6, [x29, #-88]
   2b938:	add	x0, sp, #0xe8
   2b93c:	and	w5, w8, #0x1
   2b940:	bl	37ee8 <rpl_re_set_registers@@Base+0xaf4c>
   2b944:	stur	w0, [x29, #-80]
   2b948:	ldur	w8, [x29, #-80]
   2b94c:	cmp	w8, #0x0
   2b950:	cset	w8, ne  // ne = any
   2b954:	and	w8, w8, #0x1
   2b958:	mov	w1, w8
   2b95c:	sxtw	x10, w1
   2b960:	cbz	x10, 2b968 <rpl_regexec@@Base+0x450>
   2b964:	b	2c55c <rpl_regexec@@Base+0x1044>
   2b968:	ldur	x8, [x29, #-56]
   2b96c:	add	x9, sp, #0xe8
   2b970:	str	x8, [sp, #336]
   2b974:	ldur	x8, [x29, #-56]
   2b978:	str	x8, [sp, #328]
   2b97c:	ldur	x8, [x29, #-16]
   2b980:	ldrb	w10, [x8, #56]
   2b984:	mov	w11, #0x7                   	// #7
   2b988:	lsr	w10, w10, w11
   2b98c:	and	w10, w10, #0xff
   2b990:	strb	w10, [x9, #141]
   2b994:	ldur	w1, [x29, #-76]
   2b998:	ldur	x8, [x29, #-88]
   2b99c:	ldr	x8, [x8, #152]
   2b9a0:	mov	x12, #0x2                   	// #2
   2b9a4:	mul	x2, x8, x12
   2b9a8:	mov	x0, x9
   2b9ac:	bl	38084 <rpl_re_set_registers@@Base+0xb0e8>
   2b9b0:	stur	w0, [x29, #-80]
   2b9b4:	ldur	w10, [x29, #-80]
   2b9b8:	cmp	w10, #0x0
   2b9bc:	cset	w10, ne  // ne = any
   2b9c0:	and	w10, w10, #0x1
   2b9c4:	mov	w2, w10
   2b9c8:	sxtw	x8, w2
   2b9cc:	cbz	x8, 2b9d4 <rpl_regexec@@Base+0x4bc>
   2b9d0:	b	2c55c <rpl_regexec@@Base+0x1044>
   2b9d4:	ldur	x8, [x29, #-64]
   2b9d8:	cmp	x8, #0x1
   2b9dc:	b.hi	2b9fc <rpl_regexec@@Base+0x4e4>  // b.pmore
   2b9e0:	ldur	x8, [x29, #-88]
   2b9e4:	ldrb	w9, [x8, #176]
   2b9e8:	mov	w10, #0x1                   	// #1
   2b9ec:	lsr	w9, w9, w10
   2b9f0:	and	w9, w9, w10
   2b9f4:	and	w9, w9, #0xff
   2b9f8:	cbz	w9, 2ba78 <rpl_regexec@@Base+0x560>
   2b9fc:	ldr	x8, [sp, #296]
   2ba00:	mov	x9, #0x1fffffffffffffff    	// #2305843009213693951
   2ba04:	cmp	x9, x8
   2ba08:	cset	w10, ls  // ls = plast
   2ba0c:	and	w10, w10, #0x1
   2ba10:	mov	w0, w10
   2ba14:	sxtw	x8, w0
   2ba18:	cbz	x8, 2ba28 <rpl_regexec@@Base+0x510>
   2ba1c:	mov	w8, #0xc                   	// #12
   2ba20:	stur	w8, [x29, #-80]
   2ba24:	b	2c55c <rpl_regexec@@Base+0x1044>
   2ba28:	add	x8, sp, #0xe8
   2ba2c:	ldr	x9, [sp, #296]
   2ba30:	add	x9, x9, #0x1
   2ba34:	mov	x10, #0x8                   	// #8
   2ba38:	mul	x0, x9, x10
   2ba3c:	str	x8, [sp, #152]
   2ba40:	bl	af10 <malloc@plt>
   2ba44:	ldr	x8, [sp, #152]
   2ba48:	str	x0, [x8, #184]
   2ba4c:	ldr	x9, [x8, #184]
   2ba50:	cmp	x9, #0x0
   2ba54:	cset	w11, eq  // eq = none
   2ba58:	and	w11, w11, #0x1
   2ba5c:	mov	w0, w11
   2ba60:	sxtw	x9, w0
   2ba64:	cbz	x9, 2ba74 <rpl_regexec@@Base+0x55c>
   2ba68:	mov	w8, #0xc                   	// #12
   2ba6c:	stur	w8, [x29, #-80]
   2ba70:	b	2c55c <rpl_regexec@@Base+0x1044>
   2ba74:	b	2ba84 <rpl_regexec@@Base+0x56c>
   2ba78:	add	x8, sp, #0xe8
   2ba7c:	mov	x9, xzr
   2ba80:	str	x9, [x8, #184]
   2ba84:	ldur	x8, [x29, #-40]
   2ba88:	stur	x8, [x29, #-128]
   2ba8c:	ldur	w9, [x29, #-76]
   2ba90:	mov	w10, #0x1                   	// #1
   2ba94:	mov	w11, #0x6                   	// #6
   2ba98:	mov	w12, #0x4                   	// #4
   2ba9c:	tst	w9, #0x1
   2baa0:	csel	w9, w12, w11, ne  // ne = any
   2baa4:	str	w9, [sp, #344]
   2baa8:	ldur	x8, [x29, #-48]
   2baac:	ldur	x13, [x29, #-40]
   2bab0:	mov	w9, #0xffffffff            	// #-1
   2bab4:	cmp	x8, x13
   2bab8:	csel	w9, w9, w10, lt  // lt = tstop
   2babc:	stur	w9, [x29, #-108]
   2bac0:	ldur	x8, [x29, #-48]
   2bac4:	ldur	x13, [x29, #-40]
   2bac8:	cmp	x8, x13
   2bacc:	b.ge	2badc <rpl_regexec@@Base+0x5c4>  // b.tcont
   2bad0:	ldur	x8, [x29, #-48]
   2bad4:	str	x8, [sp, #144]
   2bad8:	b	2bae4 <rpl_regexec@@Base+0x5cc>
   2badc:	ldur	x8, [x29, #-40]
   2bae0:	str	x8, [sp, #144]
   2bae4:	ldr	x8, [sp, #144]
   2bae8:	stur	x8, [x29, #-96]
   2baec:	ldur	x8, [x29, #-48]
   2baf0:	ldur	x9, [x29, #-40]
   2baf4:	cmp	x8, x9
   2baf8:	b.ge	2bb08 <rpl_regexec@@Base+0x5f0>  // b.tcont
   2bafc:	ldur	x8, [x29, #-40]
   2bb00:	str	x8, [sp, #136]
   2bb04:	b	2bb10 <rpl_regexec@@Base+0x5f8>
   2bb08:	ldur	x8, [x29, #-48]
   2bb0c:	str	x8, [sp, #136]
   2bb10:	ldr	x8, [sp, #136]
   2bb14:	stur	x8, [x29, #-104]
   2bb18:	ldur	x8, [x29, #-88]
   2bb1c:	ldr	w9, [x8, #180]
   2bb20:	cmp	w9, #0x1
   2bb24:	cset	w9, eq  // eq = none
   2bb28:	and	w9, w9, #0x1
   2bb2c:	sturb	w9, [x29, #-145]
   2bb30:	ldr	x8, [sp, #224]
   2bb34:	cbz	x8, 2bbc4 <rpl_regexec@@Base+0x6ac>
   2bb38:	ldurb	w8, [x29, #-145]
   2bb3c:	mov	w9, #0x1                   	// #1
   2bb40:	str	w9, [sp, #132]
   2bb44:	tbnz	w8, #0, 2bb7c <rpl_regexec@@Base+0x664>
   2bb48:	ldur	x8, [x29, #-16]
   2bb4c:	ldr	x8, [x8, #24]
   2bb50:	and	x8, x8, #0x400000
   2bb54:	mov	w9, #0x1                   	// #1
   2bb58:	str	w9, [sp, #128]
   2bb5c:	cbnz	x8, 2bb70 <rpl_regexec@@Base+0x658>
   2bb60:	ldr	x8, [sp, #216]
   2bb64:	cmp	x8, #0x0
   2bb68:	cset	w9, ne  // ne = any
   2bb6c:	str	w9, [sp, #128]
   2bb70:	ldr	w8, [sp, #128]
   2bb74:	eor	w8, w8, #0x1
   2bb78:	str	w8, [sp, #132]
   2bb7c:	ldr	w8, [sp, #132]
   2bb80:	mov	w9, #0x4                   	// #4
   2bb84:	mov	w10, wzr
   2bb88:	tst	w8, #0x1
   2bb8c:	csel	w8, w9, w10, ne  // ne = any
   2bb90:	ldur	x11, [x29, #-40]
   2bb94:	ldur	x12, [x29, #-48]
   2bb98:	mov	w9, #0x2                   	// #2
   2bb9c:	cmp	x11, x12
   2bba0:	csel	w9, w9, w10, le
   2bba4:	orr	w8, w8, w9
   2bba8:	ldr	x11, [sp, #216]
   2bbac:	mov	w9, #0x1                   	// #1
   2bbb0:	cmp	x11, #0x0
   2bbb4:	csel	w9, w9, w10, ne  // ne = any
   2bbb8:	orr	w8, w8, w9
   2bbbc:	str	w8, [sp, #124]
   2bbc0:	b	2bbcc <rpl_regexec@@Base+0x6b4>
   2bbc4:	mov	w8, #0x8                   	// #8
   2bbc8:	str	w8, [sp, #124]
   2bbcc:	ldr	w8, [sp, #124]
   2bbd0:	stur	w8, [x29, #-116]
   2bbd4:	mov	w8, #0x1                   	// #1
   2bbd8:	stur	w8, [x29, #-80]
   2bbdc:	ldur	x9, [x29, #-128]
   2bbe0:	ldur	x10, [x29, #-96]
   2bbe4:	cmp	x9, x10
   2bbe8:	b.lt	2bbfc <rpl_regexec@@Base+0x6e4>  // b.tstop
   2bbec:	ldur	x8, [x29, #-104]
   2bbf0:	ldur	x9, [x29, #-128]
   2bbf4:	cmp	x8, x9
   2bbf8:	b.ge	2bc00 <rpl_regexec@@Base+0x6e8>  // b.tcont
   2bbfc:	b	2c55c <rpl_regexec@@Base+0x1044>
   2bc00:	ldur	w8, [x29, #-116]
   2bc04:	subs	w8, w8, #0x4
   2bc08:	mov	w9, w8
   2bc0c:	ubfx	x9, x9, #0, #32
   2bc10:	cmp	x9, #0x4
   2bc14:	str	x9, [sp, #112]
   2bc18:	b.hi	2be84 <rpl_regexec@@Base+0x96c>  // b.pmore
   2bc1c:	adrp	x8, 47000 <vasnprintf@@Base+0x4e4c>
   2bc20:	add	x8, x8, #0x180
   2bc24:	ldr	x11, [sp, #112]
   2bc28:	ldrsw	x10, [x8, x11, lsl #2]
   2bc2c:	add	x9, x8, x10
   2bc30:	br	x9
   2bc34:	b	2bf88 <rpl_regexec@@Base+0xa70>
   2bc38:	ldur	x8, [x29, #-128]
   2bc3c:	ldur	x9, [x29, #-104]
   2bc40:	cmp	x8, x9
   2bc44:	cset	w10, lt  // lt = tstop
   2bc48:	and	w10, w10, #0x1
   2bc4c:	mov	w0, w10
   2bc50:	sxtw	x8, w0
   2bc54:	mov	w10, #0x0                   	// #0
   2bc58:	str	w10, [sp, #108]
   2bc5c:	cbz	x8, 2bc98 <rpl_regexec@@Base+0x780>
   2bc60:	ldr	x8, [sp, #224]
   2bc64:	ldr	x9, [sp, #216]
   2bc68:	ldur	x10, [x29, #-24]
   2bc6c:	ldur	x11, [x29, #-128]
   2bc70:	ldrb	w12, [x10, x11]
   2bc74:	mov	w10, w12
   2bc78:	ldrb	w12, [x9, x10]
   2bc7c:	mov	w9, w12
   2bc80:	add	x8, x8, x9
   2bc84:	ldrb	w12, [x8]
   2bc88:	cmp	w12, #0x0
   2bc8c:	cset	w12, ne  // ne = any
   2bc90:	eor	w12, w12, #0x1
   2bc94:	str	w12, [sp, #108]
   2bc98:	ldr	w8, [sp, #108]
   2bc9c:	tbnz	w8, #0, 2bca4 <rpl_regexec@@Base+0x78c>
   2bca0:	b	2bcb4 <rpl_regexec@@Base+0x79c>
   2bca4:	ldur	x8, [x29, #-128]
   2bca8:	add	x8, x8, #0x1
   2bcac:	stur	x8, [x29, #-128]
   2bcb0:	b	2bc38 <rpl_regexec@@Base+0x720>
   2bcb4:	b	2bd28 <rpl_regexec@@Base+0x810>
   2bcb8:	ldur	x8, [x29, #-128]
   2bcbc:	ldur	x9, [x29, #-104]
   2bcc0:	cmp	x8, x9
   2bcc4:	cset	w10, lt  // lt = tstop
   2bcc8:	and	w10, w10, #0x1
   2bccc:	mov	w0, w10
   2bcd0:	sxtw	x8, w0
   2bcd4:	mov	w10, #0x0                   	// #0
   2bcd8:	str	w10, [sp, #104]
   2bcdc:	cbz	x8, 2bd0c <rpl_regexec@@Base+0x7f4>
   2bce0:	ldr	x8, [sp, #224]
   2bce4:	ldur	x9, [x29, #-24]
   2bce8:	ldur	x10, [x29, #-128]
   2bcec:	ldrb	w11, [x9, x10]
   2bcf0:	mov	w9, w11
   2bcf4:	add	x8, x8, x9
   2bcf8:	ldrb	w11, [x8]
   2bcfc:	cmp	w11, #0x0
   2bd00:	cset	w11, ne  // ne = any
   2bd04:	eor	w11, w11, #0x1
   2bd08:	str	w11, [sp, #104]
   2bd0c:	ldr	w8, [sp, #104]
   2bd10:	tbnz	w8, #0, 2bd18 <rpl_regexec@@Base+0x800>
   2bd14:	b	2bd28 <rpl_regexec@@Base+0x810>
   2bd18:	ldur	x8, [x29, #-128]
   2bd1c:	add	x8, x8, #0x1
   2bd20:	stur	x8, [x29, #-128]
   2bd24:	b	2bcb8 <rpl_regexec@@Base+0x7a0>
   2bd28:	ldur	x8, [x29, #-128]
   2bd2c:	ldur	x9, [x29, #-104]
   2bd30:	cmp	x8, x9
   2bd34:	cset	w10, eq  // eq = none
   2bd38:	and	w10, w10, #0x1
   2bd3c:	mov	w0, w10
   2bd40:	sxtw	x8, w0
   2bd44:	cbz	x8, 2bdc8 <rpl_regexec@@Base+0x8b0>
   2bd48:	ldur	x8, [x29, #-128]
   2bd4c:	ldur	x9, [x29, #-32]
   2bd50:	cmp	x8, x9
   2bd54:	b.lt	2bd64 <rpl_regexec@@Base+0x84c>  // b.tstop
   2bd58:	mov	w8, wzr
   2bd5c:	str	w8, [sp, #100]
   2bd60:	b	2bd74 <rpl_regexec@@Base+0x85c>
   2bd64:	ldur	x8, [x29, #-24]
   2bd68:	ldur	x9, [x29, #-128]
   2bd6c:	ldrb	w10, [x8, x9]
   2bd70:	str	w10, [sp, #100]
   2bd74:	ldr	w8, [sp, #100]
   2bd78:	stur	w8, [x29, #-152]
   2bd7c:	ldr	x9, [sp, #224]
   2bd80:	ldr	x10, [sp, #216]
   2bd84:	str	x9, [sp, #88]
   2bd88:	cbz	x10, 2bda0 <rpl_regexec@@Base+0x888>
   2bd8c:	ldr	x8, [sp, #216]
   2bd90:	ldursw	x9, [x29, #-152]
   2bd94:	ldrb	w10, [x8, x9]
   2bd98:	str	w10, [sp, #84]
   2bd9c:	b	2bda8 <rpl_regexec@@Base+0x890>
   2bda0:	ldur	w8, [x29, #-152]
   2bda4:	str	w8, [sp, #84]
   2bda8:	ldr	w8, [sp, #84]
   2bdac:	mov	w0, w8
   2bdb0:	sxtw	x9, w0
   2bdb4:	ldr	x10, [sp, #88]
   2bdb8:	add	x9, x10, x9
   2bdbc:	ldrb	w8, [x9]
   2bdc0:	cbnz	w8, 2bdc8 <rpl_regexec@@Base+0x8b0>
   2bdc4:	b	2c55c <rpl_regexec@@Base+0x1044>
   2bdc8:	b	2bf88 <rpl_regexec@@Base+0xa70>
   2bdcc:	ldur	x8, [x29, #-128]
   2bdd0:	ldur	x9, [x29, #-96]
   2bdd4:	cmp	x8, x9
   2bdd8:	b.lt	2be6c <rpl_regexec@@Base+0x954>  // b.tstop
   2bddc:	ldur	x8, [x29, #-128]
   2bde0:	ldur	x9, [x29, #-32]
   2bde4:	cmp	x8, x9
   2bde8:	b.lt	2bdf8 <rpl_regexec@@Base+0x8e0>  // b.tstop
   2bdec:	mov	w8, wzr
   2bdf0:	str	w8, [sp, #80]
   2bdf4:	b	2be08 <rpl_regexec@@Base+0x8f0>
   2bdf8:	ldur	x8, [x29, #-24]
   2bdfc:	ldur	x9, [x29, #-128]
   2be00:	ldrb	w10, [x8, x9]
   2be04:	str	w10, [sp, #80]
   2be08:	ldr	w8, [sp, #80]
   2be0c:	stur	w8, [x29, #-152]
   2be10:	ldr	x9, [sp, #224]
   2be14:	ldr	x10, [sp, #216]
   2be18:	str	x9, [sp, #72]
   2be1c:	cbz	x10, 2be34 <rpl_regexec@@Base+0x91c>
   2be20:	ldr	x8, [sp, #216]
   2be24:	ldursw	x9, [x29, #-152]
   2be28:	ldrb	w10, [x8, x9]
   2be2c:	str	w10, [sp, #68]
   2be30:	b	2be3c <rpl_regexec@@Base+0x924>
   2be34:	ldur	w8, [x29, #-152]
   2be38:	str	w8, [sp, #68]
   2be3c:	ldr	w8, [sp, #68]
   2be40:	mov	w0, w8
   2be44:	sxtw	x9, w0
   2be48:	ldr	x10, [sp, #72]
   2be4c:	add	x9, x10, x9
   2be50:	ldrb	w8, [x9]
   2be54:	cbz	w8, 2be5c <rpl_regexec@@Base+0x944>
   2be58:	b	2be6c <rpl_regexec@@Base+0x954>
   2be5c:	ldur	x8, [x29, #-128]
   2be60:	subs	x8, x8, #0x1
   2be64:	stur	x8, [x29, #-128]
   2be68:	b	2bdcc <rpl_regexec@@Base+0x8b4>
   2be6c:	ldur	x8, [x29, #-128]
   2be70:	ldur	x9, [x29, #-96]
   2be74:	cmp	x8, x9
   2be78:	b.ge	2be80 <rpl_regexec@@Base+0x968>  // b.tcont
   2be7c:	b	2c55c <rpl_regexec@@Base+0x1044>
   2be80:	b	2bf88 <rpl_regexec@@Base+0xa70>
   2be84:	ldur	x8, [x29, #-128]
   2be88:	ldr	x9, [sp, #272]
   2be8c:	subs	x8, x8, x9
   2be90:	str	x8, [sp, #208]
   2be94:	ldr	x8, [sp, #208]
   2be98:	ldr	x9, [sp, #288]
   2be9c:	cmp	x8, x9
   2bea0:	cset	w10, cs  // cs = hs, nlast
   2bea4:	and	w10, w10, #0x1
   2bea8:	mov	w0, w10
   2beac:	sxtw	x8, w0
   2beb0:	cbz	x8, 2bef8 <rpl_regexec@@Base+0x9e0>
   2beb4:	ldur	x1, [x29, #-128]
   2beb8:	ldur	w2, [x29, #-76]
   2bebc:	add	x0, sp, #0xe8
   2bec0:	bl	381dc <rpl_re_set_registers@@Base+0xb240>
   2bec4:	stur	w0, [x29, #-80]
   2bec8:	ldur	w8, [x29, #-80]
   2becc:	cmp	w8, #0x0
   2bed0:	cset	w8, ne  // ne = any
   2bed4:	and	w8, w8, #0x1
   2bed8:	mov	w1, w8
   2bedc:	sxtw	x9, w1
   2bee0:	cbz	x9, 2bee8 <rpl_regexec@@Base+0x9d0>
   2bee4:	b	2c55c <rpl_regexec@@Base+0x1044>
   2bee8:	ldur	x8, [x29, #-128]
   2beec:	ldr	x9, [sp, #272]
   2bef0:	subs	x8, x8, x9
   2bef4:	str	x8, [sp, #208]
   2bef8:	ldur	x8, [x29, #-128]
   2befc:	ldur	x9, [x29, #-32]
   2bf00:	cmp	x8, x9
   2bf04:	b.lt	2bf14 <rpl_regexec@@Base+0x9fc>  // b.tstop
   2bf08:	mov	w8, wzr
   2bf0c:	str	w8, [sp, #64]
   2bf10:	b	2bf28 <rpl_regexec@@Base+0xa10>
   2bf14:	add	x8, sp, #0xe8
   2bf18:	ldr	x8, [x8, #8]
   2bf1c:	ldr	x9, [sp, #208]
   2bf20:	ldrb	w10, [x8, x9]
   2bf24:	str	w10, [sp, #64]
   2bf28:	ldr	w8, [sp, #64]
   2bf2c:	stur	w8, [x29, #-152]
   2bf30:	ldr	x9, [sp, #224]
   2bf34:	ldursw	x10, [x29, #-152]
   2bf38:	add	x9, x9, x10
   2bf3c:	ldrb	w8, [x9]
   2bf40:	cbz	w8, 2bf48 <rpl_regexec@@Base+0xa30>
   2bf44:	b	2bf88 <rpl_regexec@@Base+0xa70>
   2bf48:	ldursw	x8, [x29, #-108]
   2bf4c:	ldur	x9, [x29, #-128]
   2bf50:	add	x8, x9, x8
   2bf54:	stur	x8, [x29, #-128]
   2bf58:	ldur	x8, [x29, #-128]
   2bf5c:	ldur	x9, [x29, #-96]
   2bf60:	cmp	x8, x9
   2bf64:	b.lt	2bf78 <rpl_regexec@@Base+0xa60>  // b.tstop
   2bf68:	ldur	x8, [x29, #-128]
   2bf6c:	ldur	x9, [x29, #-104]
   2bf70:	cmp	x8, x9
   2bf74:	b.le	2bf84 <rpl_regexec@@Base+0xa6c>
   2bf78:	mov	w8, #0x1                   	// #1
   2bf7c:	stur	w8, [x29, #-80]
   2bf80:	b	2c55c <rpl_regexec@@Base+0x1044>
   2bf84:	b	2be84 <rpl_regexec@@Base+0x96c>
   2bf88:	ldur	x1, [x29, #-128]
   2bf8c:	ldur	w2, [x29, #-76]
   2bf90:	add	x0, sp, #0xe8
   2bf94:	bl	381dc <rpl_re_set_registers@@Base+0xb240>
   2bf98:	stur	w0, [x29, #-80]
   2bf9c:	ldur	w8, [x29, #-80]
   2bfa0:	cmp	w8, #0x0
   2bfa4:	cset	w8, ne  // ne = any
   2bfa8:	and	w8, w8, #0x1
   2bfac:	mov	w1, w8
   2bfb0:	sxtw	x9, w1
   2bfb4:	cbz	x9, 2bfbc <rpl_regexec@@Base+0xaa4>
   2bfb8:	b	2c55c <rpl_regexec@@Base+0x1044>
   2bfbc:	ldurb	w8, [x29, #-145]
   2bfc0:	tbnz	w8, #0, 2bfe8 <rpl_regexec@@Base+0xad0>
   2bfc4:	ldr	x8, [sp, #280]
   2bfc8:	cbz	x8, 2bfe8 <rpl_regexec@@Base+0xad0>
   2bfcc:	add	x8, sp, #0xe8
   2bfd0:	ldr	x8, [x8, #16]
   2bfd4:	ldr	w9, [x8]
   2bfd8:	mov	w10, #0xffffffff            	// #-1
   2bfdc:	cmp	w9, w10
   2bfe0:	b.ne	2bfe8 <rpl_regexec@@Base+0xad0>  // b.any
   2bfe4:	b	2c180 <rpl_regexec@@Base+0xc68>
   2bfe8:	str	wzr, [sp, #456]
   2bfec:	str	xzr, [sp, #432]
   2bff0:	str	xzr, [sp, #424]
   2bff4:	ldurb	w8, [x29, #-109]
   2bff8:	ldur	x9, [x29, #-40]
   2bffc:	ldur	x10, [x29, #-48]
   2c000:	cmp	x9, x10
   2c004:	str	w8, [sp, #60]
   2c008:	b.gt	2c018 <rpl_regexec@@Base+0xb00>
   2c00c:	sub	x8, x29, #0x80
   2c010:	str	x8, [sp, #48]
   2c014:	b	2c020 <rpl_regexec@@Base+0xb08>
   2c018:	mov	x8, xzr
   2c01c:	str	x8, [sp, #48]
   2c020:	ldr	x8, [sp, #48]
   2c024:	add	x0, sp, #0xe8
   2c028:	ldr	w9, [sp, #60]
   2c02c:	and	w1, w9, #0x1
   2c030:	mov	x2, x8
   2c034:	bl	38ea0 <rpl_re_set_registers@@Base+0xbf04>
   2c038:	stur	x0, [x29, #-136]
   2c03c:	ldur	x8, [x29, #-136]
   2c040:	mov	x10, #0xffffffffffffffff    	// #-1
   2c044:	cmp	x8, x10
   2c048:	b.eq	2c178 <rpl_regexec@@Base+0xc60>  // b.none
   2c04c:	ldur	x8, [x29, #-136]
   2c050:	mov	x9, #0xfffffffffffffffe    	// #-2
   2c054:	cmp	x8, x9
   2c058:	cset	w10, eq  // eq = none
   2c05c:	and	w10, w10, #0x1
   2c060:	mov	w0, w10
   2c064:	sxtw	x8, w0
   2c068:	cbz	x8, 2c078 <rpl_regexec@@Base+0xb60>
   2c06c:	mov	w8, #0xc                   	// #12
   2c070:	stur	w8, [x29, #-80]
   2c074:	b	2c55c <rpl_regexec@@Base+0x1044>
   2c078:	ldur	x8, [x29, #-136]
   2c07c:	str	x8, [sp, #400]
   2c080:	ldur	x8, [x29, #-16]
   2c084:	ldrb	w9, [x8, #56]
   2c088:	mov	w10, #0x4                   	// #4
   2c08c:	lsr	w9, w9, w10
   2c090:	and	w9, w9, #0x1
   2c094:	and	w9, w9, #0xff
   2c098:	cbnz	w9, 2c0a8 <rpl_regexec@@Base+0xb90>
   2c09c:	ldur	x8, [x29, #-64]
   2c0a0:	cmp	x8, #0x1
   2c0a4:	b.hi	2c0b4 <rpl_regexec@@Base+0xb9c>  // b.pmore
   2c0a8:	ldur	x8, [x29, #-88]
   2c0ac:	ldr	x8, [x8, #152]
   2c0b0:	cbz	x8, 2c0e8 <rpl_regexec@@Base+0xbd0>
   2c0b4:	add	x8, sp, #0xe8
   2c0b8:	ldr	x9, [x8, #184]
   2c0bc:	ldur	x10, [x29, #-136]
   2c0c0:	mov	x11, #0x8                   	// #8
   2c0c4:	mul	x10, x11, x10
   2c0c8:	add	x9, x9, x10
   2c0cc:	ldr	x9, [x9]
   2c0d0:	str	x9, [sp, #200]
   2c0d4:	ldr	x1, [sp, #200]
   2c0d8:	ldur	x2, [x29, #-136]
   2c0dc:	mov	x0, x8
   2c0e0:	bl	39470 <rpl_re_set_registers@@Base+0xc4d4>
   2c0e4:	str	x0, [sp, #408]
   2c0e8:	ldur	x8, [x29, #-16]
   2c0ec:	ldrb	w9, [x8, #56]
   2c0f0:	mov	w10, #0x4                   	// #4
   2c0f4:	lsr	w9, w9, w10
   2c0f8:	and	w9, w9, #0x1
   2c0fc:	and	w9, w9, #0xff
   2c100:	cbnz	w9, 2c124 <rpl_regexec@@Base+0xc0c>
   2c104:	ldur	x8, [x29, #-64]
   2c108:	cmp	x8, #0x1
   2c10c:	b.ls	2c124 <rpl_regexec@@Base+0xc0c>  // b.plast
   2c110:	ldur	x8, [x29, #-88]
   2c114:	ldrb	w9, [x8, #176]
   2c118:	and	w9, w9, #0x1
   2c11c:	and	w9, w9, #0xff
   2c120:	cbnz	w9, 2c130 <rpl_regexec@@Base+0xc18>
   2c124:	ldur	x8, [x29, #-88]
   2c128:	ldr	x8, [x8, #152]
   2c12c:	cbz	x8, 2c174 <rpl_regexec@@Base+0xc5c>
   2c130:	add	x0, sp, #0xe8
   2c134:	bl	3951c <rpl_re_set_registers@@Base+0xc580>
   2c138:	stur	w0, [x29, #-80]
   2c13c:	ldur	w8, [x29, #-80]
   2c140:	cbnz	w8, 2c148 <rpl_regexec@@Base+0xc30>
   2c144:	b	2c194 <rpl_regexec@@Base+0xc7c>
   2c148:	ldur	w8, [x29, #-80]
   2c14c:	cmp	w8, #0x1
   2c150:	cset	w8, ne  // ne = any
   2c154:	and	w8, w8, #0x1
   2c158:	mov	w0, w8
   2c15c:	sxtw	x9, w0
   2c160:	cbz	x9, 2c168 <rpl_regexec@@Base+0xc50>
   2c164:	b	2c55c <rpl_regexec@@Base+0x1044>
   2c168:	mov	x8, #0xffffffffffffffff    	// #-1
   2c16c:	stur	x8, [x29, #-136]
   2c170:	b	2c178 <rpl_regexec@@Base+0xc60>
   2c174:	b	2c194 <rpl_regexec@@Base+0xc7c>
   2c178:	add	x0, sp, #0xe8
   2c17c:	bl	39898 <rpl_re_set_registers@@Base+0xc8fc>
   2c180:	ldursw	x8, [x29, #-108]
   2c184:	ldur	x9, [x29, #-128]
   2c188:	add	x8, x9, x8
   2c18c:	stur	x8, [x29, #-128]
   2c190:	b	2bbd4 <rpl_regexec@@Base+0x6bc>
   2c194:	ldur	x8, [x29, #-64]
   2c198:	cmp	x8, #0x0
   2c19c:	cset	w9, ls  // ls = plast
   2c1a0:	tbnz	w9, #0, 2c55c <rpl_regexec@@Base+0x1044>
   2c1a4:	mov	x8, #0x1                   	// #1
   2c1a8:	str	x8, [sp, #192]
   2c1ac:	ldr	x8, [sp, #192]
   2c1b0:	ldur	x9, [x29, #-64]
   2c1b4:	cmp	x8, x9
   2c1b8:	b.cs	2c1f8 <rpl_regexec@@Base+0xce0>  // b.hs, b.nlast
   2c1bc:	ldur	x8, [x29, #-72]
   2c1c0:	ldr	x9, [sp, #192]
   2c1c4:	mov	x10, #0x10                  	// #16
   2c1c8:	mul	x9, x10, x9
   2c1cc:	add	x8, x8, x9
   2c1d0:	mov	x9, #0xffffffffffffffff    	// #-1
   2c1d4:	str	x9, [x8, #8]
   2c1d8:	ldur	x8, [x29, #-72]
   2c1dc:	ldr	x11, [sp, #192]
   2c1e0:	mul	x10, x10, x11
   2c1e4:	str	x9, [x8, x10]
   2c1e8:	ldr	x8, [sp, #192]
   2c1ec:	add	x8, x8, #0x1
   2c1f0:	str	x8, [sp, #192]
   2c1f4:	b	2c1ac <rpl_regexec@@Base+0xc94>
   2c1f8:	ldur	x8, [x29, #-72]
   2c1fc:	str	xzr, [x8]
   2c200:	ldr	x8, [sp, #400]
   2c204:	ldur	x9, [x29, #-72]
   2c208:	str	x8, [x9, #8]
   2c20c:	ldur	x8, [x29, #-16]
   2c210:	ldrb	w10, [x8, #56]
   2c214:	mov	w11, #0x4                   	// #4
   2c218:	lsr	w10, w10, w11
   2c21c:	and	w10, w10, #0x1
   2c220:	and	w10, w10, #0xff
   2c224:	cbnz	w10, 2c2bc <rpl_regexec@@Base+0xda4>
   2c228:	ldur	x8, [x29, #-64]
   2c22c:	cmp	x8, #0x1
   2c230:	b.ls	2c2bc <rpl_regexec@@Base+0xda4>  // b.plast
   2c234:	ldur	x0, [x29, #-16]
   2c238:	ldur	x2, [x29, #-64]
   2c23c:	ldur	x3, [x29, #-72]
   2c240:	ldur	x8, [x29, #-88]
   2c244:	ldrb	w9, [x8, #176]
   2c248:	and	w9, w9, #0x1
   2c24c:	and	w9, w9, #0xff
   2c250:	mov	w10, #0x0                   	// #0
   2c254:	str	x0, [sp, #40]
   2c258:	str	x2, [sp, #32]
   2c25c:	str	x3, [sp, #24]
   2c260:	str	w10, [sp, #20]
   2c264:	cbz	w9, 2c27c <rpl_regexec@@Base+0xd64>
   2c268:	ldur	x8, [x29, #-88]
   2c26c:	ldr	x8, [x8, #152]
   2c270:	cmp	x8, #0x0
   2c274:	cset	w9, gt
   2c278:	str	w9, [sp, #20]
   2c27c:	ldr	w8, [sp, #20]
   2c280:	ldr	x0, [sp, #40]
   2c284:	add	x1, sp, #0xe8
   2c288:	ldr	x2, [sp, #32]
   2c28c:	ldr	x3, [sp, #24]
   2c290:	and	w4, w8, #0x1
   2c294:	bl	399a4 <rpl_re_set_registers@@Base+0xca08>
   2c298:	stur	w0, [x29, #-80]
   2c29c:	ldur	w8, [x29, #-80]
   2c2a0:	cmp	w8, #0x0
   2c2a4:	cset	w8, ne  // ne = any
   2c2a8:	and	w8, w8, #0x1
   2c2ac:	mov	w1, w8
   2c2b0:	sxtw	x9, w1
   2c2b4:	cbz	x9, 2c2bc <rpl_regexec@@Base+0xda4>
   2c2b8:	b	2c55c <rpl_regexec@@Base+0x1044>
   2c2bc:	str	xzr, [sp, #192]
   2c2c0:	ldr	x8, [sp, #192]
   2c2c4:	ldur	x9, [x29, #-64]
   2c2c8:	cmp	x8, x9
   2c2cc:	b.cs	2c438 <rpl_regexec@@Base+0xf20>  // b.hs, b.nlast
   2c2d0:	ldur	x8, [x29, #-72]
   2c2d4:	ldr	x9, [sp, #192]
   2c2d8:	mov	x10, #0x10                  	// #16
   2c2dc:	mul	x9, x10, x9
   2c2e0:	ldr	x8, [x8, x9]
   2c2e4:	mov	x9, #0xffffffffffffffff    	// #-1
   2c2e8:	cmp	x8, x9
   2c2ec:	b.eq	2c428 <rpl_regexec@@Base+0xf10>  // b.none
   2c2f0:	ldrb	w8, [sp, #372]
   2c2f4:	cmp	w8, #0x0
   2c2f8:	cset	w8, ne  // ne = any
   2c2fc:	and	w8, w8, #0x1
   2c300:	mov	w0, w8
   2c304:	sxtw	x9, w0
   2c308:	cbz	x9, 2c3e4 <rpl_regexec@@Base+0xecc>
   2c30c:	ldur	x8, [x29, #-72]
   2c310:	ldr	x9, [sp, #192]
   2c314:	mov	x10, #0x10                  	// #16
   2c318:	mul	x9, x10, x9
   2c31c:	ldr	x8, [x8, x9]
   2c320:	ldr	x9, [sp, #280]
   2c324:	cmp	x8, x9
   2c328:	b.ne	2c338 <rpl_regexec@@Base+0xe20>  // b.any
   2c32c:	ldr	x8, [sp, #288]
   2c330:	str	x8, [sp, #8]
   2c334:	b	2c35c <rpl_regexec@@Base+0xe44>
   2c338:	add	x8, sp, #0xe8
   2c33c:	ldr	x8, [x8, #24]
   2c340:	ldur	x9, [x29, #-72]
   2c344:	ldr	x10, [sp, #192]
   2c348:	mov	x11, #0x10                  	// #16
   2c34c:	mul	x10, x11, x10
   2c350:	ldr	x9, [x9, x10]
   2c354:	ldr	x8, [x8, x9, lsl #3]
   2c358:	str	x8, [sp, #8]
   2c35c:	ldr	x8, [sp, #8]
   2c360:	ldur	x9, [x29, #-72]
   2c364:	ldr	x10, [sp, #192]
   2c368:	mov	x11, #0x10                  	// #16
   2c36c:	mul	x10, x11, x10
   2c370:	str	x8, [x9, x10]
   2c374:	ldur	x8, [x29, #-72]
   2c378:	ldr	x9, [sp, #192]
   2c37c:	mul	x9, x11, x9
   2c380:	add	x8, x8, x9
   2c384:	ldr	x8, [x8, #8]
   2c388:	ldr	x9, [sp, #280]
   2c38c:	cmp	x8, x9
   2c390:	b.ne	2c3a0 <rpl_regexec@@Base+0xe88>  // b.any
   2c394:	ldr	x8, [sp, #288]
   2c398:	str	x8, [sp]
   2c39c:	b	2c3c8 <rpl_regexec@@Base+0xeb0>
   2c3a0:	add	x8, sp, #0xe8
   2c3a4:	ldr	x8, [x8, #24]
   2c3a8:	ldur	x9, [x29, #-72]
   2c3ac:	ldr	x10, [sp, #192]
   2c3b0:	mov	x11, #0x10                  	// #16
   2c3b4:	mul	x10, x11, x10
   2c3b8:	add	x9, x9, x10
   2c3bc:	ldr	x9, [x9, #8]
   2c3c0:	ldr	x8, [x8, x9, lsl #3]
   2c3c4:	str	x8, [sp]
   2c3c8:	ldr	x8, [sp]
   2c3cc:	ldur	x9, [x29, #-72]
   2c3d0:	ldr	x10, [sp, #192]
   2c3d4:	mov	x11, #0x10                  	// #16
   2c3d8:	mul	x10, x11, x10
   2c3dc:	add	x9, x9, x10
   2c3e0:	str	x8, [x9, #8]
   2c3e4:	ldur	x8, [x29, #-128]
   2c3e8:	ldur	x9, [x29, #-72]
   2c3ec:	ldr	x10, [sp, #192]
   2c3f0:	mov	x11, #0x10                  	// #16
   2c3f4:	mul	x10, x11, x10
   2c3f8:	add	x9, x9, x10
   2c3fc:	ldr	x10, [x9]
   2c400:	add	x8, x10, x8
   2c404:	str	x8, [x9]
   2c408:	ldur	x8, [x29, #-128]
   2c40c:	ldur	x9, [x29, #-72]
   2c410:	ldr	x10, [sp, #192]
   2c414:	mul	x10, x11, x10
   2c418:	add	x9, x9, x10
   2c41c:	ldr	x10, [x9, #8]
   2c420:	add	x8, x10, x8
   2c424:	str	x8, [x9, #8]
   2c428:	ldr	x8, [sp, #192]
   2c42c:	add	x8, x8, #0x1
   2c430:	str	x8, [sp, #192]
   2c434:	b	2c2c0 <rpl_regexec@@Base+0xda8>
   2c438:	str	xzr, [sp, #192]
   2c43c:	ldr	x8, [sp, #192]
   2c440:	ldur	x9, [x29, #-144]
   2c444:	cmp	x8, x9
   2c448:	b.ge	2c498 <rpl_regexec@@Base+0xf80>  // b.tcont
   2c44c:	ldur	x8, [x29, #-72]
   2c450:	ldur	x9, [x29, #-64]
   2c454:	ldr	x10, [sp, #192]
   2c458:	add	x9, x9, x10
   2c45c:	mov	x10, #0x10                  	// #16
   2c460:	mul	x9, x10, x9
   2c464:	mov	x11, #0xffffffffffffffff    	// #-1
   2c468:	str	x11, [x8, x9]
   2c46c:	ldur	x8, [x29, #-72]
   2c470:	ldur	x9, [x29, #-64]
   2c474:	ldr	x12, [sp, #192]
   2c478:	add	x9, x9, x12
   2c47c:	mul	x9, x10, x9
   2c480:	add	x8, x8, x9
   2c484:	str	x11, [x8, #8]
   2c488:	ldr	x8, [sp, #192]
   2c48c:	add	x8, x8, #0x1
   2c490:	str	x8, [sp, #192]
   2c494:	b	2c43c <rpl_regexec@@Base+0xf24>
   2c498:	ldur	x8, [x29, #-88]
   2c49c:	ldr	x8, [x8, #224]
   2c4a0:	cbz	x8, 2c55c <rpl_regexec@@Base+0x1044>
   2c4a4:	str	xzr, [sp, #192]
   2c4a8:	ldr	x8, [sp, #192]
   2c4ac:	add	x8, x8, #0x1
   2c4b0:	ldur	x9, [x29, #-64]
   2c4b4:	cmp	x8, x9
   2c4b8:	b.cs	2c55c <rpl_regexec@@Base+0x1044>  // b.hs, b.nlast
   2c4bc:	ldur	x8, [x29, #-88]
   2c4c0:	ldr	x8, [x8, #224]
   2c4c4:	ldr	x9, [sp, #192]
   2c4c8:	ldr	x8, [x8, x9, lsl #3]
   2c4cc:	ldr	x9, [sp, #192]
   2c4d0:	cmp	x8, x9
   2c4d4:	b.eq	2c54c <rpl_regexec@@Base+0x1034>  // b.none
   2c4d8:	ldur	x8, [x29, #-72]
   2c4dc:	ldur	x9, [x29, #-88]
   2c4e0:	ldr	x9, [x9, #224]
   2c4e4:	ldr	x10, [sp, #192]
   2c4e8:	ldr	x9, [x9, x10, lsl #3]
   2c4ec:	add	x9, x9, #0x1
   2c4f0:	mov	x10, #0x10                  	// #16
   2c4f4:	mul	x9, x10, x9
   2c4f8:	ldr	x8, [x8, x9]
   2c4fc:	ldur	x9, [x29, #-72]
   2c500:	ldr	x11, [sp, #192]
   2c504:	add	x11, x11, #0x1
   2c508:	mul	x11, x10, x11
   2c50c:	str	x8, [x9, x11]
   2c510:	ldur	x8, [x29, #-72]
   2c514:	ldur	x9, [x29, #-88]
   2c518:	ldr	x9, [x9, #224]
   2c51c:	ldr	x11, [sp, #192]
   2c520:	ldr	x9, [x9, x11, lsl #3]
   2c524:	add	x9, x9, #0x1
   2c528:	mul	x9, x10, x9
   2c52c:	add	x8, x8, x9
   2c530:	ldr	x8, [x8, #8]
   2c534:	ldur	x9, [x29, #-72]
   2c538:	ldr	x11, [sp, #192]
   2c53c:	add	x11, x11, #0x1
   2c540:	mul	x10, x10, x11
   2c544:	add	x9, x9, x10
   2c548:	str	x8, [x9, #8]
   2c54c:	ldr	x8, [sp, #192]
   2c550:	add	x8, x8, #0x1
   2c554:	str	x8, [sp, #192]
   2c558:	b	2c4a8 <rpl_regexec@@Base+0xf90>
   2c55c:	add	x8, sp, #0xe8
   2c560:	ldr	x0, [x8, #184]
   2c564:	bl	a930 <free@plt>
   2c568:	ldur	x8, [x29, #-88]
   2c56c:	ldr	x8, [x8, #152]
   2c570:	cbz	x8, 2c57c <rpl_regexec@@Base+0x1064>
   2c574:	add	x0, sp, #0xe8
   2c578:	bl	39d80 <rpl_re_set_registers@@Base+0xcde4>
   2c57c:	add	x0, sp, #0xe8
   2c580:	bl	2da2c <rpl_re_set_registers@@Base+0xa90>
   2c584:	ldur	w8, [x29, #-80]
   2c588:	stur	w8, [x29, #-4]
   2c58c:	ldur	w0, [x29, #-4]
   2c590:	add	sp, sp, #0x280
   2c594:	ldr	x28, [sp, #16]
   2c598:	ldp	x29, x30, [sp], #32
   2c59c:	ret

000000000002c5a0 <rpl_re_match@@Base>:
   2c5a0:	sub	sp, sp, #0x40
   2c5a4:	stp	x29, x30, [sp, #48]
   2c5a8:	add	x29, sp, #0x30
   2c5ac:	mov	x8, xzr
   2c5b0:	stur	x0, [x29, #-8]
   2c5b4:	stur	x1, [x29, #-16]
   2c5b8:	str	x2, [sp, #24]
   2c5bc:	str	x3, [sp, #16]
   2c5c0:	str	x4, [sp, #8]
   2c5c4:	ldur	x0, [x29, #-8]
   2c5c8:	ldur	x1, [x29, #-16]
   2c5cc:	ldr	x2, [sp, #24]
   2c5d0:	ldr	x3, [sp, #16]
   2c5d4:	ldr	x5, [sp, #24]
   2c5d8:	ldr	x6, [sp, #8]
   2c5dc:	mov	x4, x8
   2c5e0:	mov	w9, #0x1                   	// #1
   2c5e4:	and	w7, w9, #0x1
   2c5e8:	bl	2c5f8 <rpl_re_match@@Base+0x58>
   2c5ec:	ldp	x29, x30, [sp, #48]
   2c5f0:	add	sp, sp, #0x40
   2c5f4:	ret
   2c5f8:	sub	sp, sp, #0xc0
   2c5fc:	stp	x29, x30, [sp, #176]
   2c600:	add	x29, sp, #0xb0
   2c604:	adrp	x8, 5f000 <vasnprintf@@Base+0x1ce4c>
   2c608:	ldr	x8, [x8, #4056]
   2c60c:	adrp	x9, 5f000 <vasnprintf@@Base+0x1ce4c>
   2c610:	ldr	x9, [x9, #4064]
   2c614:	mov	w10, #0x1                   	// #1
   2c618:	stur	x0, [x29, #-16]
   2c61c:	stur	x1, [x29, #-24]
   2c620:	stur	x2, [x29, #-32]
   2c624:	stur	x3, [x29, #-40]
   2c628:	stur	x4, [x29, #-48]
   2c62c:	stur	x5, [x29, #-56]
   2c630:	stur	x6, [x29, #-64]
   2c634:	and	w10, w7, w10
   2c638:	sturb	w10, [x29, #-65]
   2c63c:	str	wzr, [sp, #76]
   2c640:	ldur	x11, [x29, #-16]
   2c644:	ldr	x11, [x11]
   2c648:	str	x11, [sp, #64]
   2c64c:	ldur	x11, [x29, #-40]
   2c650:	ldur	x12, [x29, #-48]
   2c654:	add	x11, x11, x12
   2c658:	str	x11, [sp, #56]
   2c65c:	ldur	x11, [x29, #-40]
   2c660:	cmp	x11, #0x0
   2c664:	cset	w10, lt  // lt = tstop
   2c668:	mov	w13, #0x1                   	// #1
   2c66c:	str	x8, [sp, #48]
   2c670:	str	x9, [sp, #40]
   2c674:	str	w13, [sp, #36]
   2c678:	tbnz	w10, #0, 2c690 <rpl_re_match@@Base+0xf0>
   2c67c:	ldur	x8, [x29, #-40]
   2c680:	ldur	x9, [x29, #-32]
   2c684:	cmp	x8, x9
   2c688:	cset	w10, gt
   2c68c:	str	w10, [sp, #36]
   2c690:	ldr	w8, [sp, #36]
   2c694:	and	w8, w8, #0x1
   2c698:	mov	w0, w8
   2c69c:	sxtw	x9, w0
   2c6a0:	cbz	x9, 2c6b0 <rpl_re_match@@Base+0x110>
   2c6a4:	mov	x8, #0xffffffffffffffff    	// #-1
   2c6a8:	stur	x8, [x29, #-8]
   2c6ac:	b	2cb14 <rpl_re_match@@Base+0x574>
   2c6b0:	ldur	x8, [x29, #-32]
   2c6b4:	ldr	x9, [sp, #56]
   2c6b8:	mov	w10, #0x1                   	// #1
   2c6bc:	cmp	x8, x9
   2c6c0:	str	w10, [sp, #32]
   2c6c4:	b.lt	2c700 <rpl_re_match@@Base+0x160>  // b.tstop
   2c6c8:	ldur	x8, [x29, #-48]
   2c6cc:	mov	x9, xzr
   2c6d0:	cmp	x9, x8
   2c6d4:	cset	w10, gt
   2c6d8:	mov	w11, #0x0                   	// #0
   2c6dc:	str	w11, [sp, #28]
   2c6e0:	tbnz	w10, #0, 2c6f8 <rpl_re_match@@Base+0x158>
   2c6e4:	ldr	x8, [sp, #56]
   2c6e8:	ldur	x9, [x29, #-40]
   2c6ec:	cmp	x8, x9
   2c6f0:	cset	w10, lt  // lt = tstop
   2c6f4:	str	w10, [sp, #28]
   2c6f8:	ldr	w8, [sp, #28]
   2c6fc:	str	w8, [sp, #32]
   2c700:	ldr	w8, [sp, #32]
   2c704:	and	w8, w8, #0x1
   2c708:	mov	w0, w8
   2c70c:	sxtw	x9, w0
   2c710:	cbz	x9, 2c720 <rpl_re_match@@Base+0x180>
   2c714:	ldur	x8, [x29, #-32]
   2c718:	str	x8, [sp, #56]
   2c71c:	b	2c784 <rpl_re_match@@Base+0x1e4>
   2c720:	ldr	x8, [sp, #56]
   2c724:	cmp	x8, #0x0
   2c728:	cset	w9, lt  // lt = tstop
   2c72c:	mov	w10, #0x1                   	// #1
   2c730:	str	w10, [sp, #24]
   2c734:	tbnz	w9, #0, 2c76c <rpl_re_match@@Base+0x1cc>
   2c738:	ldur	x8, [x29, #-48]
   2c73c:	cmp	x8, #0x0
   2c740:	cset	w9, ge  // ge = tcont
   2c744:	mov	w10, #0x0                   	// #0
   2c748:	str	w10, [sp, #20]
   2c74c:	tbnz	w9, #0, 2c764 <rpl_re_match@@Base+0x1c4>
   2c750:	ldur	x8, [x29, #-40]
   2c754:	ldr	x9, [sp, #56]
   2c758:	cmp	x8, x9
   2c75c:	cset	w10, le
   2c760:	str	w10, [sp, #20]
   2c764:	ldr	w8, [sp, #20]
   2c768:	str	w8, [sp, #24]
   2c76c:	ldr	w8, [sp, #24]
   2c770:	and	w8, w8, #0x1
   2c774:	mov	w0, w8
   2c778:	sxtw	x9, w0
   2c77c:	cbz	x9, 2c784 <rpl_re_match@@Base+0x1e4>
   2c780:	str	xzr, [sp, #56]
   2c784:	ldr	x8, [sp, #48]
   2c788:	cbnz	x8, 2c798 <rpl_re_match@@Base+0x1f8>
   2c78c:	ldr	x8, [sp, #40]
   2c790:	cbnz	x8, 2c798 <rpl_re_match@@Base+0x1f8>
   2c794:	b	2c7a8 <rpl_re_match@@Base+0x208>
   2c798:	ldr	x8, [sp, #64]
   2c79c:	add	x0, x8, #0xe8
   2c7a0:	bl	b820 <pthread_mutex_lock@plt>
   2c7a4:	b	2c7a8 <rpl_re_match@@Base+0x208>
   2c7a8:	ldur	x8, [x29, #-16]
   2c7ac:	ldrb	w9, [x8, #56]
   2c7b0:	mov	w10, #0x5                   	// #5
   2c7b4:	lsr	w9, w9, w10
   2c7b8:	mov	w10, #0x1                   	// #1
   2c7bc:	and	w9, w9, #0x1
   2c7c0:	mov	w11, wzr
   2c7c4:	mov	w12, #0x1                   	// #1
   2c7c8:	tst	w9, #0xff
   2c7cc:	csel	w9, w12, w11, ne  // ne = any
   2c7d0:	ldr	w12, [sp, #76]
   2c7d4:	orr	w9, w12, w9
   2c7d8:	str	w9, [sp, #76]
   2c7dc:	ldur	x8, [x29, #-16]
   2c7e0:	ldrb	w9, [x8, #56]
   2c7e4:	mov	w12, #0x6                   	// #6
   2c7e8:	lsr	w9, w9, w12
   2c7ec:	and	w9, w9, w10
   2c7f0:	mov	w10, #0x2                   	// #2
   2c7f4:	tst	w9, #0xff
   2c7f8:	csel	w9, w10, w11, ne  // ne = any
   2c7fc:	ldr	w10, [sp, #76]
   2c800:	orr	w9, w10, w9
   2c804:	str	w9, [sp, #76]
   2c808:	ldur	x8, [x29, #-40]
   2c80c:	ldr	x13, [sp, #56]
   2c810:	cmp	x8, x13
   2c814:	b.ge	2c848 <rpl_re_match@@Base+0x2a8>  // b.tcont
   2c818:	ldur	x8, [x29, #-16]
   2c81c:	ldr	x8, [x8, #32]
   2c820:	cbz	x8, 2c848 <rpl_re_match@@Base+0x2a8>
   2c824:	ldur	x8, [x29, #-16]
   2c828:	ldrb	w9, [x8, #56]
   2c82c:	mov	w10, #0x3                   	// #3
   2c830:	lsr	w9, w9, w10
   2c834:	and	w9, w9, #0x1
   2c838:	and	w9, w9, #0xff
   2c83c:	cbnz	w9, 2c848 <rpl_re_match@@Base+0x2a8>
   2c840:	ldur	x0, [x29, #-16]
   2c844:	bl	b810 <rpl_re_compile_fastmap@plt>
   2c848:	ldur	x8, [x29, #-16]
   2c84c:	ldrb	w9, [x8, #56]
   2c850:	mov	w10, #0x4                   	// #4
   2c854:	lsr	w9, w9, w10
   2c858:	and	w9, w9, #0x1
   2c85c:	and	w9, w9, #0xff
   2c860:	mov	w8, w9
   2c864:	ubfx	x8, x8, #0, #32
   2c868:	cbz	x8, 2c874 <rpl_re_match@@Base+0x2d4>
   2c86c:	mov	x8, xzr
   2c870:	stur	x8, [x29, #-64]
   2c874:	ldur	x8, [x29, #-64]
   2c878:	cbnz	x8, 2c888 <rpl_re_match@@Base+0x2e8>
   2c87c:	mov	x8, #0x1                   	// #1
   2c880:	str	x8, [sp, #88]
   2c884:	b	2c92c <rpl_re_match@@Base+0x38c>
   2c888:	ldur	x8, [x29, #-16]
   2c88c:	ldrb	w9, [x8, #56]
   2c890:	mov	w10, #0x1                   	// #1
   2c894:	lsr	w9, w9, w10
   2c898:	and	w9, w9, #0x3
   2c89c:	and	w9, w9, #0xff
   2c8a0:	mov	w10, #0x0                   	// #0
   2c8a4:	cmp	w9, #0x2
   2c8a8:	str	w10, [sp, #16]
   2c8ac:	b.ne	2c8cc <rpl_re_match@@Base+0x32c>  // b.any
   2c8b0:	ldur	x8, [x29, #-64]
   2c8b4:	ldr	x8, [x8]
   2c8b8:	ldur	x9, [x29, #-16]
   2c8bc:	ldr	x9, [x9, #48]
   2c8c0:	cmp	x8, x9
   2c8c4:	cset	w10, ls  // ls = plast
   2c8c8:	str	w10, [sp, #16]
   2c8cc:	ldr	w8, [sp, #16]
   2c8d0:	and	w8, w8, #0x1
   2c8d4:	mov	w0, w8
   2c8d8:	sxtw	x9, w0
   2c8dc:	cbz	x9, 2c91c <rpl_re_match@@Base+0x37c>
   2c8e0:	ldur	x8, [x29, #-64]
   2c8e4:	ldr	x8, [x8]
   2c8e8:	str	x8, [sp, #88]
   2c8ec:	ldr	x8, [sp, #88]
   2c8f0:	cmp	x8, #0x1
   2c8f4:	cset	w9, lt  // lt = tstop
   2c8f8:	and	w9, w9, #0x1
   2c8fc:	mov	w0, w9
   2c900:	sxtw	x8, w0
   2c904:	cbz	x8, 2c918 <rpl_re_match@@Base+0x378>
   2c908:	mov	x8, xzr
   2c90c:	stur	x8, [x29, #-64]
   2c910:	mov	x8, #0x1                   	// #1
   2c914:	str	x8, [sp, #88]
   2c918:	b	2c92c <rpl_re_match@@Base+0x38c>
   2c91c:	ldur	x8, [x29, #-16]
   2c920:	ldr	x8, [x8, #48]
   2c924:	add	x8, x8, #0x1
   2c928:	str	x8, [sp, #88]
   2c92c:	ldr	x8, [sp, #88]
   2c930:	mov	x9, #0x10                  	// #16
   2c934:	mul	x0, x8, x9
   2c938:	bl	af10 <malloc@plt>
   2c93c:	stur	x0, [x29, #-80]
   2c940:	ldur	x8, [x29, #-80]
   2c944:	cmp	x8, #0x0
   2c948:	cset	w10, eq  // eq = none
   2c94c:	and	w10, w10, #0x1
   2c950:	mov	w0, w10
   2c954:	sxtw	x8, w0
   2c958:	cbz	x8, 2c968 <rpl_re_match@@Base+0x3c8>
   2c95c:	mov	x8, #0xfffffffffffffffe    	// #-2
   2c960:	str	x8, [sp, #80]
   2c964:	b	2cae8 <rpl_re_match@@Base+0x548>
   2c968:	ldur	x0, [x29, #-16]
   2c96c:	ldur	x1, [x29, #-24]
   2c970:	ldur	x2, [x29, #-32]
   2c974:	ldur	x3, [x29, #-40]
   2c978:	ldr	x4, [sp, #56]
   2c97c:	ldur	x5, [x29, #-56]
   2c980:	ldr	x6, [sp, #88]
   2c984:	ldur	x7, [x29, #-80]
   2c988:	ldr	w8, [sp, #76]
   2c98c:	mov	x9, sp
   2c990:	str	w8, [x9]
   2c994:	bl	2b6a4 <rpl_regexec@@Base+0x18c>
   2c998:	stur	w0, [x29, #-72]
   2c99c:	str	xzr, [sp, #80]
   2c9a0:	ldur	w8, [x29, #-72]
   2c9a4:	cbz	w8, 2c9cc <rpl_re_match@@Base+0x42c>
   2c9a8:	ldur	w8, [x29, #-72]
   2c9ac:	mov	w9, #0xfffffffe            	// #-2
   2c9b0:	mov	w10, #0xffffffff            	// #-1
   2c9b4:	cmp	w8, #0x1
   2c9b8:	csel	w8, w10, w9, eq  // eq = none
   2c9bc:	mov	w0, w8
   2c9c0:	sxtw	x11, w0
   2c9c4:	str	x11, [sp, #80]
   2c9c8:	b	2ca5c <rpl_re_match@@Base+0x4bc>
   2c9cc:	ldur	x8, [x29, #-64]
   2c9d0:	cbz	x8, 2ca5c <rpl_re_match@@Base+0x4bc>
   2c9d4:	ldur	x0, [x29, #-64]
   2c9d8:	ldur	x1, [x29, #-80]
   2c9dc:	ldr	x2, [sp, #88]
   2c9e0:	ldur	x8, [x29, #-16]
   2c9e4:	ldrb	w9, [x8, #56]
   2c9e8:	mov	w10, #0x1                   	// #1
   2c9ec:	lsr	w9, w9, w10
   2c9f0:	mov	w11, #0x3                   	// #3
   2c9f4:	and	w9, w9, #0x3
   2c9f8:	and	w3, w9, #0xff
   2c9fc:	str	w10, [sp, #12]
   2ca00:	str	w11, [sp, #8]
   2ca04:	bl	37bf8 <rpl_re_set_registers@@Base+0xac5c>
   2ca08:	ldur	x8, [x29, #-16]
   2ca0c:	ldrb	w9, [x8, #56]
   2ca10:	ldr	w10, [sp, #8]
   2ca14:	and	w11, w0, w10
   2ca18:	ldr	w12, [sp, #12]
   2ca1c:	lsl	w11, w11, w12
   2ca20:	and	w9, w9, #0xfffffff9
   2ca24:	orr	w9, w9, w11
   2ca28:	strb	w9, [x8, #56]
   2ca2c:	ldur	x8, [x29, #-16]
   2ca30:	ldrb	w9, [x8, #56]
   2ca34:	lsr	w9, w9, w12
   2ca38:	and	w9, w9, w10
   2ca3c:	tst	w9, #0xff
   2ca40:	cset	w9, eq  // eq = none
   2ca44:	and	w9, w9, #0x1
   2ca48:	mov	w1, w9
   2ca4c:	sxtw	x8, w1
   2ca50:	cbz	x8, 2ca5c <rpl_re_match@@Base+0x4bc>
   2ca54:	mov	x8, #0xfffffffffffffffe    	// #-2
   2ca58:	str	x8, [sp, #80]
   2ca5c:	ldr	x8, [sp, #80]
   2ca60:	cmp	x8, #0x0
   2ca64:	cset	w9, eq  // eq = none
   2ca68:	and	w9, w9, #0x1
   2ca6c:	mov	w0, w9
   2ca70:	sxtw	x8, w0
   2ca74:	cbz	x8, 2cae0 <rpl_re_match@@Base+0x540>
   2ca78:	ldurb	w8, [x29, #-65]
   2ca7c:	tbnz	w8, #0, 2ca84 <rpl_re_match@@Base+0x4e4>
   2ca80:	b	2cad4 <rpl_re_match@@Base+0x534>
   2ca84:	ldur	x8, [x29, #-80]
   2ca88:	ldr	x8, [x8]
   2ca8c:	ldur	x9, [x29, #-40]
   2ca90:	cmp	x8, x9
   2ca94:	b.ne	2ca9c <rpl_re_match@@Base+0x4fc>  // b.any
   2ca98:	b	2cabc <rpl_re_match@@Base+0x51c>
   2ca9c:	adrp	x0, 45000 <vasnprintf@@Base+0x2e4c>
   2caa0:	add	x0, x0, #0x6fc
   2caa4:	adrp	x1, 45000 <vasnprintf@@Base+0x2e4c>
   2caa8:	add	x1, x1, #0x715
   2caac:	mov	w2, #0x1be                 	// #446
   2cab0:	adrp	x3, 45000 <vasnprintf@@Base+0x2e4c>
   2cab4:	add	x3, x3, #0x721
   2cab8:	bl	a910 <__assert_fail@plt>
   2cabc:	ldur	x8, [x29, #-80]
   2cac0:	ldr	x8, [x8, #8]
   2cac4:	ldur	x9, [x29, #-40]
   2cac8:	subs	x8, x8, x9
   2cacc:	str	x8, [sp, #80]
   2cad0:	b	2cae0 <rpl_re_match@@Base+0x540>
   2cad4:	ldur	x8, [x29, #-80]
   2cad8:	ldr	x8, [x8]
   2cadc:	str	x8, [sp, #80]
   2cae0:	ldur	x0, [x29, #-80]
   2cae4:	bl	a930 <free@plt>
   2cae8:	ldr	x8, [sp, #48]
   2caec:	cbnz	x8, 2cafc <rpl_re_match@@Base+0x55c>
   2caf0:	ldr	x8, [sp, #40]
   2caf4:	cbnz	x8, 2cafc <rpl_re_match@@Base+0x55c>
   2caf8:	b	2cb0c <rpl_re_match@@Base+0x56c>
   2cafc:	ldr	x8, [sp, #64]
   2cb00:	add	x0, x8, #0xe8
   2cb04:	bl	b830 <pthread_mutex_unlock@plt>
   2cb08:	b	2cb0c <rpl_re_match@@Base+0x56c>
   2cb0c:	ldr	x8, [sp, #80]
   2cb10:	stur	x8, [x29, #-8]
   2cb14:	ldur	x0, [x29, #-8]
   2cb18:	ldp	x29, x30, [sp, #176]
   2cb1c:	add	sp, sp, #0xc0
   2cb20:	ret

000000000002cb24 <rpl_re_search@@Base>:
   2cb24:	sub	sp, sp, #0x40
   2cb28:	stp	x29, x30, [sp, #48]
   2cb2c:	add	x29, sp, #0x30
   2cb30:	stur	x0, [x29, #-8]
   2cb34:	stur	x1, [x29, #-16]
   2cb38:	str	x2, [sp, #24]
   2cb3c:	str	x3, [sp, #16]
   2cb40:	str	x4, [sp, #8]
   2cb44:	str	x5, [sp]
   2cb48:	ldur	x0, [x29, #-8]
   2cb4c:	ldur	x1, [x29, #-16]
   2cb50:	ldr	x2, [sp, #24]
   2cb54:	ldr	x3, [sp, #16]
   2cb58:	ldr	x4, [sp, #8]
   2cb5c:	ldr	x5, [sp, #24]
   2cb60:	ldr	x6, [sp]
   2cb64:	mov	w8, wzr
   2cb68:	and	w7, w8, #0x1
   2cb6c:	bl	2c5f8 <rpl_re_match@@Base+0x58>
   2cb70:	ldp	x29, x30, [sp, #48]
   2cb74:	add	sp, sp, #0x40
   2cb78:	ret

000000000002cb7c <rpl_re_match_2@@Base>:
   2cb7c:	sub	sp, sp, #0x60
   2cb80:	stp	x29, x30, [sp, #80]
   2cb84:	add	x29, sp, #0x50
   2cb88:	mov	x8, xzr
   2cb8c:	stur	x0, [x29, #-8]
   2cb90:	stur	x1, [x29, #-16]
   2cb94:	stur	x2, [x29, #-24]
   2cb98:	stur	x3, [x29, #-32]
   2cb9c:	str	x4, [sp, #40]
   2cba0:	str	x5, [sp, #32]
   2cba4:	str	x6, [sp, #24]
   2cba8:	str	x7, [sp, #16]
   2cbac:	ldur	x0, [x29, #-8]
   2cbb0:	ldur	x1, [x29, #-16]
   2cbb4:	ldur	x2, [x29, #-24]
   2cbb8:	ldur	x3, [x29, #-32]
   2cbbc:	ldr	x4, [sp, #40]
   2cbc0:	ldr	x5, [sp, #32]
   2cbc4:	ldr	x7, [sp, #24]
   2cbc8:	ldr	x9, [sp, #16]
   2cbcc:	mov	x6, x8
   2cbd0:	mov	x8, sp
   2cbd4:	str	x9, [x8]
   2cbd8:	mov	x8, sp
   2cbdc:	mov	w10, #0x1                   	// #1
   2cbe0:	and	w10, w10, #0x1
   2cbe4:	strb	w10, [x8, #8]
   2cbe8:	bl	2cbf8 <rpl_re_match_2@@Base+0x7c>
   2cbec:	ldp	x29, x30, [sp, #80]
   2cbf0:	add	sp, sp, #0x60
   2cbf4:	ret
   2cbf8:	sub	sp, sp, #0xa0
   2cbfc:	stp	x29, x30, [sp, #144]
   2cc00:	add	x29, sp, #0x90
   2cc04:	ldr	x8, [x29, #16]
   2cc08:	ldrb	w9, [x29, #24]
   2cc0c:	mov	x10, xzr
   2cc10:	mov	w11, #0x1                   	// #1
   2cc14:	mov	w12, #0x1                   	// #1
   2cc18:	stur	x0, [x29, #-16]
   2cc1c:	stur	x1, [x29, #-24]
   2cc20:	stur	x2, [x29, #-32]
   2cc24:	stur	x3, [x29, #-40]
   2cc28:	stur	x4, [x29, #-48]
   2cc2c:	stur	x5, [x29, #-56]
   2cc30:	stur	x6, [x29, #-64]
   2cc34:	str	x7, [sp, #72]
   2cc38:	str	x8, [sp, #64]
   2cc3c:	and	w9, w9, w12
   2cc40:	strb	w9, [sp, #63]
   2cc44:	str	x10, [sp, #24]
   2cc48:	ldur	x8, [x29, #-32]
   2cc4c:	cmp	x8, #0x0
   2cc50:	cset	w9, lt  // lt = tstop
   2cc54:	mov	w12, #0x1                   	// #1
   2cc58:	str	w11, [sp, #20]
   2cc5c:	str	w12, [sp, #16]
   2cc60:	tbnz	w9, #0, 2ce0c <rpl_re_match_2@@Base+0x290>
   2cc64:	ldur	x8, [x29, #-48]
   2cc68:	cmp	x8, #0x0
   2cc6c:	cset	w9, lt  // lt = tstop
   2cc70:	mov	w10, #0x1                   	// #1
   2cc74:	str	w10, [sp, #16]
   2cc78:	tbnz	w9, #0, 2ce0c <rpl_re_match_2@@Base+0x290>
   2cc7c:	ldr	x8, [sp, #64]
   2cc80:	cmp	x8, #0x0
   2cc84:	cset	w9, lt  // lt = tstop
   2cc88:	mov	w10, #0x1                   	// #1
   2cc8c:	str	w10, [sp, #16]
   2cc90:	tbnz	w9, #0, 2ce0c <rpl_re_match_2@@Base+0x290>
   2cc94:	ldur	x8, [x29, #-48]
   2cc98:	cmp	x8, #0x0
   2cc9c:	cset	w9, ge  // ge = tcont
   2cca0:	tbnz	w9, #0, 2cd34 <rpl_re_match_2@@Base+0x1b8>
   2cca4:	ldr	w8, [sp, #20]
   2cca8:	tbnz	w8, #0, 2ccb0 <rpl_re_match_2@@Base+0x134>
   2ccac:	b	2cccc <rpl_re_match_2@@Base+0x150>
   2ccb0:	ldur	x8, [x29, #-32]
   2ccb4:	ldur	x9, [x29, #-48]
   2ccb8:	mov	x10, #0x8000000000000000    	// #-9223372036854775808
   2ccbc:	subs	x9, x10, x9
   2ccc0:	cmp	x8, x9
   2ccc4:	b.lt	2cdc8 <rpl_re_match_2@@Base+0x24c>  // b.tstop
   2ccc8:	b	2cce4 <rpl_re_match_2@@Base+0x168>
   2cccc:	ldur	x8, [x29, #-32]
   2ccd0:	ldur	x9, [x29, #-48]
   2ccd4:	mov	x10, #0xffffffffffffffff    	// #-1
   2ccd8:	subs	x9, x10, x9
   2ccdc:	cmp	x8, x9
   2cce0:	b.le	2cdc8 <rpl_re_match_2@@Base+0x24c>
   2cce4:	ldr	w8, [sp, #20]
   2cce8:	tbnz	w8, #0, 2ccf0 <rpl_re_match_2@@Base+0x174>
   2ccec:	b	2cd08 <rpl_re_match_2@@Base+0x18c>
   2ccf0:	ldur	x8, [x29, #-32]
   2ccf4:	mov	x9, xzr
   2ccf8:	cmp	x9, x8
   2ccfc:	cset	w10, le
   2cd00:	tbnz	w10, #0, 2cd18 <rpl_re_match_2@@Base+0x19c>
   2cd04:	b	2cde4 <rpl_re_match_2@@Base+0x268>
   2cd08:	ldur	x8, [x29, #-32]
   2cd0c:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
   2cd10:	cmp	x9, x8
   2cd14:	b.ge	2cde4 <rpl_re_match_2@@Base+0x268>  // b.tcont
   2cd18:	ldur	x8, [x29, #-32]
   2cd1c:	ldur	x9, [x29, #-48]
   2cd20:	add	x8, x8, x9
   2cd24:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
   2cd28:	cmp	x9, x8
   2cd2c:	b.lt	2cdc8 <rpl_re_match_2@@Base+0x24c>  // b.tstop
   2cd30:	b	2cde4 <rpl_re_match_2@@Base+0x268>
   2cd34:	ldur	x8, [x29, #-32]
   2cd38:	cmp	x8, #0x0
   2cd3c:	cset	w9, ge  // ge = tcont
   2cd40:	tbnz	w9, #0, 2cda0 <rpl_re_match_2@@Base+0x224>
   2cd44:	ldr	w8, [sp, #20]
   2cd48:	tbnz	w8, #0, 2cd50 <rpl_re_match_2@@Base+0x1d4>
   2cd4c:	b	2cd6c <rpl_re_match_2@@Base+0x1f0>
   2cd50:	ldur	x8, [x29, #-48]
   2cd54:	ldur	x9, [x29, #-32]
   2cd58:	mov	x10, #0x8000000000000000    	// #-9223372036854775808
   2cd5c:	subs	x9, x10, x9
   2cd60:	cmp	x8, x9
   2cd64:	b.lt	2cdc8 <rpl_re_match_2@@Base+0x24c>  // b.tstop
   2cd68:	b	2cd84 <rpl_re_match_2@@Base+0x208>
   2cd6c:	ldur	x8, [x29, #-48]
   2cd70:	ldur	x9, [x29, #-32]
   2cd74:	mov	x10, #0xffffffffffffffff    	// #-1
   2cd78:	subs	x9, x10, x9
   2cd7c:	cmp	x8, x9
   2cd80:	b.le	2cdc8 <rpl_re_match_2@@Base+0x24c>
   2cd84:	ldur	x8, [x29, #-32]
   2cd88:	ldur	x9, [x29, #-48]
   2cd8c:	add	x8, x8, x9
   2cd90:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
   2cd94:	cmp	x9, x8
   2cd98:	b.lt	2cdc8 <rpl_re_match_2@@Base+0x24c>  // b.tstop
   2cd9c:	b	2cde4 <rpl_re_match_2@@Base+0x268>
   2cda0:	ldur	x8, [x29, #-48]
   2cda4:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
   2cda8:	cmp	x9, x8
   2cdac:	b.lt	2cdc8 <rpl_re_match_2@@Base+0x24c>  // b.tstop
   2cdb0:	ldur	x8, [x29, #-48]
   2cdb4:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
   2cdb8:	subs	x8, x9, x8
   2cdbc:	ldur	x9, [x29, #-32]
   2cdc0:	cmp	x8, x9
   2cdc4:	b.ge	2cde4 <rpl_re_match_2@@Base+0x268>  // b.tcont
   2cdc8:	mov	w8, #0x1                   	// #1
   2cdcc:	ldur	x9, [x29, #-32]
   2cdd0:	ldur	x10, [x29, #-48]
   2cdd4:	add	x9, x9, x10
   2cdd8:	str	x9, [sp, #32]
   2cddc:	str	w8, [sp, #12]
   2cde0:	b	2cdfc <rpl_re_match_2@@Base+0x280>
   2cde4:	mov	w8, wzr
   2cde8:	ldur	x9, [x29, #-32]
   2cdec:	ldur	x10, [x29, #-48]
   2cdf0:	add	x9, x9, x10
   2cdf4:	str	x9, [sp, #32]
   2cdf8:	str	w8, [sp, #12]
   2cdfc:	ldr	w8, [sp, #12]
   2ce00:	cmp	w8, #0x0
   2ce04:	cset	w8, ne  // ne = any
   2ce08:	str	w8, [sp, #16]
   2ce0c:	ldr	w8, [sp, #16]
   2ce10:	and	w8, w8, #0x1
   2ce14:	mov	w0, w8
   2ce18:	sxtw	x9, w0
   2ce1c:	cbz	x9, 2ce2c <rpl_re_match_2@@Base+0x2b0>
   2ce20:	mov	x8, #0xfffffffffffffffe    	// #-2
   2ce24:	stur	x8, [x29, #-8]
   2ce28:	b	2cf0c <rpl_re_match_2@@Base+0x390>
   2ce2c:	ldur	x8, [x29, #-48]
   2ce30:	cmp	x8, #0x0
   2ce34:	cset	w9, le
   2ce38:	tbnz	w9, #0, 2cec8 <rpl_re_match_2@@Base+0x34c>
   2ce3c:	ldur	x8, [x29, #-32]
   2ce40:	cmp	x8, #0x0
   2ce44:	cset	w9, le
   2ce48:	tbnz	w9, #0, 2cebc <rpl_re_match_2@@Base+0x340>
   2ce4c:	ldr	x8, [sp, #32]
   2ce50:	mov	x9, #0x1                   	// #1
   2ce54:	mul	x0, x8, x9
   2ce58:	bl	af10 <malloc@plt>
   2ce5c:	str	x0, [sp, #24]
   2ce60:	ldr	x8, [sp, #24]
   2ce64:	cmp	x8, #0x0
   2ce68:	cset	w10, eq  // eq = none
   2ce6c:	and	w10, w10, #0x1
   2ce70:	mov	w0, w10
   2ce74:	sxtw	x8, w0
   2ce78:	cbz	x8, 2ce88 <rpl_re_match_2@@Base+0x30c>
   2ce7c:	mov	x8, #0xfffffffffffffffe    	// #-2
   2ce80:	stur	x8, [x29, #-8]
   2ce84:	b	2cf0c <rpl_re_match_2@@Base+0x390>
   2ce88:	ldr	x0, [sp, #24]
   2ce8c:	ldur	x1, [x29, #-24]
   2ce90:	ldur	x2, [x29, #-32]
   2ce94:	bl	af30 <memcpy@plt>
   2ce98:	ldr	x8, [sp, #24]
   2ce9c:	ldur	x9, [x29, #-32]
   2cea0:	add	x0, x8, x9
   2cea4:	ldur	x1, [x29, #-40]
   2cea8:	ldur	x2, [x29, #-48]
   2ceac:	bl	af30 <memcpy@plt>
   2ceb0:	ldr	x8, [sp, #24]
   2ceb4:	str	x8, [sp, #48]
   2ceb8:	b	2cec4 <rpl_re_match_2@@Base+0x348>
   2cebc:	ldur	x8, [x29, #-40]
   2cec0:	str	x8, [sp, #48]
   2cec4:	b	2ced0 <rpl_re_match_2@@Base+0x354>
   2cec8:	ldur	x8, [x29, #-24]
   2cecc:	str	x8, [sp, #48]
   2ced0:	ldur	x0, [x29, #-16]
   2ced4:	ldr	x1, [sp, #48]
   2ced8:	ldr	x2, [sp, #32]
   2cedc:	ldur	x3, [x29, #-56]
   2cee0:	ldur	x4, [x29, #-64]
   2cee4:	ldr	x5, [sp, #64]
   2cee8:	ldr	x6, [sp, #72]
   2ceec:	ldrb	w8, [sp, #63]
   2cef0:	and	w7, w8, #0x1
   2cef4:	bl	2c5f8 <rpl_re_match@@Base+0x58>
   2cef8:	str	x0, [sp, #40]
   2cefc:	ldr	x0, [sp, #24]
   2cf00:	bl	a930 <free@plt>
   2cf04:	ldr	x9, [sp, #40]
   2cf08:	stur	x9, [x29, #-8]
   2cf0c:	ldur	x0, [x29, #-8]
   2cf10:	ldp	x29, x30, [sp, #144]
   2cf14:	add	sp, sp, #0xa0
   2cf18:	ret

000000000002cf1c <rpl_re_search_2@@Base>:
   2cf1c:	sub	sp, sp, #0x70
   2cf20:	stp	x29, x30, [sp, #96]
   2cf24:	add	x29, sp, #0x60
   2cf28:	ldr	x8, [x29, #16]
   2cf2c:	stur	x0, [x29, #-8]
   2cf30:	stur	x1, [x29, #-16]
   2cf34:	stur	x2, [x29, #-24]
   2cf38:	stur	x3, [x29, #-32]
   2cf3c:	stur	x4, [x29, #-40]
   2cf40:	str	x5, [sp, #48]
   2cf44:	str	x6, [sp, #40]
   2cf48:	str	x7, [sp, #32]
   2cf4c:	str	x8, [sp, #24]
   2cf50:	ldur	x0, [x29, #-8]
   2cf54:	ldur	x1, [x29, #-16]
   2cf58:	ldur	x2, [x29, #-24]
   2cf5c:	ldur	x3, [x29, #-32]
   2cf60:	ldur	x4, [x29, #-40]
   2cf64:	ldr	x5, [sp, #48]
   2cf68:	ldr	x6, [sp, #40]
   2cf6c:	ldr	x7, [sp, #32]
   2cf70:	ldr	x8, [sp, #24]
   2cf74:	mov	x9, sp
   2cf78:	str	x8, [x9]
   2cf7c:	mov	x8, sp
   2cf80:	mov	w10, wzr
   2cf84:	and	w10, w10, #0x1
   2cf88:	strb	w10, [x8, #8]
   2cf8c:	bl	2cbf8 <rpl_re_match_2@@Base+0x7c>
   2cf90:	ldp	x29, x30, [sp, #96]
   2cf94:	add	sp, sp, #0x70
   2cf98:	ret

000000000002cf9c <rpl_re_set_registers@@Base>:
   2cf9c:	sub	sp, sp, #0x30
   2cfa0:	str	x0, [sp, #40]
   2cfa4:	str	x1, [sp, #32]
   2cfa8:	str	x2, [sp, #24]
   2cfac:	str	x3, [sp, #16]
   2cfb0:	str	x4, [sp, #8]
   2cfb4:	ldr	x8, [sp, #24]
   2cfb8:	cbz	x8, 2cff8 <rpl_re_set_registers@@Base+0x5c>
   2cfbc:	ldr	x8, [sp, #40]
   2cfc0:	ldrb	w9, [x8, #56]
   2cfc4:	and	w9, w9, #0xfffffff9
   2cfc8:	orr	w9, w9, #0x2
   2cfcc:	strb	w9, [x8, #56]
   2cfd0:	ldr	x8, [sp, #24]
   2cfd4:	ldr	x10, [sp, #32]
   2cfd8:	str	x8, [x10]
   2cfdc:	ldr	x8, [sp, #16]
   2cfe0:	ldr	x10, [sp, #32]
   2cfe4:	str	x8, [x10, #8]
   2cfe8:	ldr	x8, [sp, #8]
   2cfec:	ldr	x10, [sp, #32]
   2cff0:	str	x8, [x10, #16]
   2cff4:	b	2d024 <rpl_re_set_registers@@Base+0x88>
   2cff8:	ldr	x8, [sp, #40]
   2cffc:	ldrb	w9, [x8, #56]
   2d000:	and	w9, w9, #0xfffffff9
   2d004:	strb	w9, [x8, #56]
   2d008:	ldr	x8, [sp, #32]
   2d00c:	mov	x10, xzr
   2d010:	str	xzr, [x8]
   2d014:	ldr	x8, [sp, #32]
   2d018:	str	x10, [x8, #16]
   2d01c:	ldr	x8, [sp, #32]
   2d020:	str	x10, [x8, #8]
   2d024:	add	sp, sp, #0x30
   2d028:	ret
   2d02c:	sub	sp, sp, #0x20
   2d030:	stp	x29, x30, [sp, #16]
   2d034:	add	x29, sp, #0x10
   2d038:	str	x0, [sp, #8]
   2d03c:	ldr	x8, [sp, #8]
   2d040:	ldr	w9, [x8, #8]
   2d044:	and	w9, w9, #0xff
   2d048:	cmp	w9, #0x6
   2d04c:	b.ne	2d074 <rpl_re_set_registers@@Base+0xd8>  // b.any
   2d050:	ldr	x8, [sp, #8]
   2d054:	ldr	w9, [x8, #8]
   2d058:	lsr	w9, w9, #18
   2d05c:	and	w9, w9, #0x1
   2d060:	cbnz	w9, 2d074 <rpl_re_set_registers@@Base+0xd8>
   2d064:	ldr	x8, [sp, #8]
   2d068:	ldr	x0, [x8]
   2d06c:	bl	2d148 <rpl_re_set_registers@@Base+0x1ac>
   2d070:	b	2d0a8 <rpl_re_set_registers@@Base+0x10c>
   2d074:	ldr	x8, [sp, #8]
   2d078:	ldr	w9, [x8, #8]
   2d07c:	and	w9, w9, #0xff
   2d080:	cmp	w9, #0x3
   2d084:	b.ne	2d0a8 <rpl_re_set_registers@@Base+0x10c>  // b.any
   2d088:	ldr	x8, [sp, #8]
   2d08c:	ldr	w9, [x8, #8]
   2d090:	lsr	w9, w9, #18
   2d094:	and	w9, w9, #0x1
   2d098:	cbnz	w9, 2d0a8 <rpl_re_set_registers@@Base+0x10c>
   2d09c:	ldr	x8, [sp, #8]
   2d0a0:	ldr	x0, [x8]
   2d0a4:	bl	a930 <free@plt>
   2d0a8:	ldp	x29, x30, [sp, #16]
   2d0ac:	add	sp, sp, #0x20
   2d0b0:	ret
   2d0b4:	sub	sp, sp, #0x20
   2d0b8:	stp	x29, x30, [sp, #16]
   2d0bc:	add	x29, sp, #0x10
   2d0c0:	str	x0, [sp, #8]
   2d0c4:	ldr	x8, [sp, #8]
   2d0c8:	ldr	x0, [x8, #48]
   2d0cc:	bl	a930 <free@plt>
   2d0d0:	ldr	x8, [sp, #8]
   2d0d4:	ldr	x0, [x8, #72]
   2d0d8:	bl	a930 <free@plt>
   2d0dc:	ldr	x8, [sp, #8]
   2d0e0:	ldr	x8, [x8, #80]
   2d0e4:	ldr	x9, [sp, #8]
   2d0e8:	add	x9, x9, #0x8
   2d0ec:	cmp	x8, x9
   2d0f0:	b.eq	2d110 <rpl_re_set_registers@@Base+0x174>  // b.none
   2d0f4:	ldr	x8, [sp, #8]
   2d0f8:	ldr	x8, [x8, #80]
   2d0fc:	ldr	x0, [x8, #16]
   2d100:	bl	a930 <free@plt>
   2d104:	ldr	x8, [sp, #8]
   2d108:	ldr	x0, [x8, #80]
   2d10c:	bl	a930 <free@plt>
   2d110:	ldr	x8, [sp, #8]
   2d114:	ldr	x0, [x8, #24]
   2d118:	bl	a930 <free@plt>
   2d11c:	ldr	x8, [sp, #8]
   2d120:	ldr	x0, [x8, #96]
   2d124:	bl	a930 <free@plt>
   2d128:	ldr	x8, [sp, #8]
   2d12c:	ldr	x0, [x8, #88]
   2d130:	bl	a930 <free@plt>
   2d134:	ldr	x0, [sp, #8]
   2d138:	bl	a930 <free@plt>
   2d13c:	ldp	x29, x30, [sp, #16]
   2d140:	add	sp, sp, #0x20
   2d144:	ret
   2d148:	sub	sp, sp, #0x20
   2d14c:	stp	x29, x30, [sp, #16]
   2d150:	add	x29, sp, #0x10
   2d154:	str	x0, [sp, #8]
   2d158:	ldr	x8, [sp, #8]
   2d15c:	ldr	x0, [x8]
   2d160:	bl	a930 <free@plt>
   2d164:	ldr	x8, [sp, #8]
   2d168:	ldr	x0, [x8, #8]
   2d16c:	bl	a930 <free@plt>
   2d170:	ldr	x8, [sp, #8]
   2d174:	ldr	x0, [x8, #16]
   2d178:	bl	a930 <free@plt>
   2d17c:	ldr	x8, [sp, #8]
   2d180:	ldr	x0, [x8, #24]
   2d184:	bl	a930 <free@plt>
   2d188:	ldr	x0, [sp, #8]
   2d18c:	bl	a930 <free@plt>
   2d190:	ldp	x29, x30, [sp, #16]
   2d194:	add	sp, sp, #0x20
   2d198:	ret
   2d19c:	sub	sp, sp, #0xf0
   2d1a0:	stp	x29, x30, [sp, #224]
   2d1a4:	add	x29, sp, #0xe0
   2d1a8:	mov	x8, #0x8                   	// #8
   2d1ac:	mov	x9, #0x10                  	// #16
   2d1b0:	stur	x0, [x29, #-16]
   2d1b4:	stur	x1, [x29, #-24]
   2d1b8:	stur	x8, [x29, #-48]
   2d1bc:	ldur	x8, [x29, #-48]
   2d1c0:	cmp	x9, x8
   2d1c4:	b.cs	2d1d4 <rpl_re_set_registers@@Base+0x238>  // b.hs, b.nlast
   2d1c8:	ldur	x8, [x29, #-48]
   2d1cc:	stur	x8, [x29, #-80]
   2d1d0:	b	2d1dc <rpl_re_set_registers@@Base+0x240>
   2d1d4:	mov	x8, #0x10                  	// #16
   2d1d8:	stur	x8, [x29, #-80]
   2d1dc:	ldur	x8, [x29, #-80]
   2d1e0:	mov	x9, #0x18                  	// #24
   2d1e4:	cmp	x9, x8
   2d1e8:	b.cs	2d21c <rpl_re_set_registers@@Base+0x280>  // b.hs, b.nlast
   2d1ec:	ldur	x8, [x29, #-48]
   2d1f0:	mov	x9, #0x10                  	// #16
   2d1f4:	cmp	x9, x8
   2d1f8:	b.cs	2d208 <rpl_re_set_registers@@Base+0x26c>  // b.hs, b.nlast
   2d1fc:	ldur	x8, [x29, #-48]
   2d200:	stur	x8, [x29, #-88]
   2d204:	b	2d210 <rpl_re_set_registers@@Base+0x274>
   2d208:	mov	x8, #0x10                  	// #16
   2d20c:	stur	x8, [x29, #-88]
   2d210:	ldur	x8, [x29, #-88]
   2d214:	stur	x8, [x29, #-96]
   2d218:	b	2d224 <rpl_re_set_registers@@Base+0x288>
   2d21c:	mov	x8, #0x18                  	// #24
   2d220:	stur	x8, [x29, #-96]
   2d224:	ldur	x8, [x29, #-96]
   2d228:	mov	x9, #0x10                  	// #16
   2d22c:	cmp	x9, x8
   2d230:	b.cs	2d2ac <rpl_re_set_registers@@Base+0x310>  // b.hs, b.nlast
   2d234:	ldur	x8, [x29, #-48]
   2d238:	mov	x9, #0x10                  	// #16
   2d23c:	cmp	x9, x8
   2d240:	b.cs	2d250 <rpl_re_set_registers@@Base+0x2b4>  // b.hs, b.nlast
   2d244:	ldur	x8, [x29, #-48]
   2d248:	stur	x8, [x29, #-104]
   2d24c:	b	2d258 <rpl_re_set_registers@@Base+0x2bc>
   2d250:	mov	x8, #0x10                  	// #16
   2d254:	stur	x8, [x29, #-104]
   2d258:	ldur	x8, [x29, #-104]
   2d25c:	mov	x9, #0x18                  	// #24
   2d260:	cmp	x9, x8
   2d264:	b.cs	2d298 <rpl_re_set_registers@@Base+0x2fc>  // b.hs, b.nlast
   2d268:	ldur	x8, [x29, #-48]
   2d26c:	mov	x9, #0x10                  	// #16
   2d270:	cmp	x9, x8
   2d274:	b.cs	2d284 <rpl_re_set_registers@@Base+0x2e8>  // b.hs, b.nlast
   2d278:	ldur	x8, [x29, #-48]
   2d27c:	str	x8, [sp, #112]
   2d280:	b	2d28c <rpl_re_set_registers@@Base+0x2f0>
   2d284:	mov	x8, #0x10                  	// #16
   2d288:	str	x8, [sp, #112]
   2d28c:	ldr	x8, [sp, #112]
   2d290:	str	x8, [sp, #104]
   2d294:	b	2d2a0 <rpl_re_set_registers@@Base+0x304>
   2d298:	mov	x8, #0x18                  	// #24
   2d29c:	str	x8, [sp, #104]
   2d2a0:	ldr	x8, [sp, #104]
   2d2a4:	str	x8, [sp, #96]
   2d2a8:	b	2d2b4 <rpl_re_set_registers@@Base+0x318>
   2d2ac:	mov	x8, #0x10                  	// #16
   2d2b0:	str	x8, [sp, #96]
   2d2b4:	ldr	x8, [sp, #96]
   2d2b8:	mov	x9, #0x18                  	// #24
   2d2bc:	cmp	x9, x8
   2d2c0:	b.cs	2d3cc <rpl_re_set_registers@@Base+0x430>  // b.hs, b.nlast
   2d2c4:	ldur	x8, [x29, #-48]
   2d2c8:	mov	x9, #0x10                  	// #16
   2d2cc:	cmp	x9, x8
   2d2d0:	b.cs	2d2e0 <rpl_re_set_registers@@Base+0x344>  // b.hs, b.nlast
   2d2d4:	ldur	x8, [x29, #-48]
   2d2d8:	str	x8, [sp, #88]
   2d2dc:	b	2d2e8 <rpl_re_set_registers@@Base+0x34c>
   2d2e0:	mov	x8, #0x10                  	// #16
   2d2e4:	str	x8, [sp, #88]
   2d2e8:	ldr	x8, [sp, #88]
   2d2ec:	mov	x9, #0x18                  	// #24
   2d2f0:	cmp	x9, x8
   2d2f4:	b.cs	2d328 <rpl_re_set_registers@@Base+0x38c>  // b.hs, b.nlast
   2d2f8:	ldur	x8, [x29, #-48]
   2d2fc:	mov	x9, #0x10                  	// #16
   2d300:	cmp	x9, x8
   2d304:	b.cs	2d314 <rpl_re_set_registers@@Base+0x378>  // b.hs, b.nlast
   2d308:	ldur	x8, [x29, #-48]
   2d30c:	str	x8, [sp, #80]
   2d310:	b	2d31c <rpl_re_set_registers@@Base+0x380>
   2d314:	mov	x8, #0x10                  	// #16
   2d318:	str	x8, [sp, #80]
   2d31c:	ldr	x8, [sp, #80]
   2d320:	str	x8, [sp, #72]
   2d324:	b	2d330 <rpl_re_set_registers@@Base+0x394>
   2d328:	mov	x8, #0x18                  	// #24
   2d32c:	str	x8, [sp, #72]
   2d330:	ldr	x8, [sp, #72]
   2d334:	mov	x9, #0x10                  	// #16
   2d338:	cmp	x9, x8
   2d33c:	b.cs	2d3b8 <rpl_re_set_registers@@Base+0x41c>  // b.hs, b.nlast
   2d340:	ldur	x8, [x29, #-48]
   2d344:	mov	x9, #0x10                  	// #16
   2d348:	cmp	x9, x8
   2d34c:	b.cs	2d35c <rpl_re_set_registers@@Base+0x3c0>  // b.hs, b.nlast
   2d350:	ldur	x8, [x29, #-48]
   2d354:	str	x8, [sp, #64]
   2d358:	b	2d364 <rpl_re_set_registers@@Base+0x3c8>
   2d35c:	mov	x8, #0x10                  	// #16
   2d360:	str	x8, [sp, #64]
   2d364:	ldr	x8, [sp, #64]
   2d368:	mov	x9, #0x18                  	// #24
   2d36c:	cmp	x9, x8
   2d370:	b.cs	2d3a4 <rpl_re_set_registers@@Base+0x408>  // b.hs, b.nlast
   2d374:	ldur	x8, [x29, #-48]
   2d378:	mov	x9, #0x10                  	// #16
   2d37c:	cmp	x9, x8
   2d380:	b.cs	2d390 <rpl_re_set_registers@@Base+0x3f4>  // b.hs, b.nlast
   2d384:	ldur	x8, [x29, #-48]
   2d388:	str	x8, [sp, #56]
   2d38c:	b	2d398 <rpl_re_set_registers@@Base+0x3fc>
   2d390:	mov	x8, #0x10                  	// #16
   2d394:	str	x8, [sp, #56]
   2d398:	ldr	x8, [sp, #56]
   2d39c:	str	x8, [sp, #48]
   2d3a0:	b	2d3ac <rpl_re_set_registers@@Base+0x410>
   2d3a4:	mov	x8, #0x18                  	// #24
   2d3a8:	str	x8, [sp, #48]
   2d3ac:	ldr	x8, [sp, #48]
   2d3b0:	str	x8, [sp, #40]
   2d3b4:	b	2d3c0 <rpl_re_set_registers@@Base+0x424>
   2d3b8:	mov	x8, #0x10                  	// #16
   2d3bc:	str	x8, [sp, #40]
   2d3c0:	ldr	x8, [sp, #40]
   2d3c4:	str	x8, [sp, #32]
   2d3c8:	b	2d3d4 <rpl_re_set_registers@@Base+0x438>
   2d3cc:	mov	x8, #0x18                  	// #24
   2d3d0:	str	x8, [sp, #32]
   2d3d4:	ldr	x8, [sp, #32]
   2d3d8:	stur	x8, [x29, #-56]
   2d3dc:	ldur	x0, [x29, #-16]
   2d3e0:	mov	w9, wzr
   2d3e4:	mov	w1, w9
   2d3e8:	mov	x2, #0x118                 	// #280
   2d3ec:	bl	a970 <memset@plt>
   2d3f0:	ldur	x8, [x29, #-16]
   2d3f4:	mov	w9, #0xf                   	// #15
   2d3f8:	str	w9, [x8, #128]
   2d3fc:	ldur	x8, [x29, #-56]
   2d400:	mov	x10, #0xffffffffffffffff    	// #-1
   2d404:	udiv	x8, x10, x8
   2d408:	mov	x10, #0x7fffffffffffffff    	// #9223372036854775807
   2d40c:	cmp	x10, x8
   2d410:	b.cs	2d420 <rpl_re_set_registers@@Base+0x484>  // b.hs, b.nlast
   2d414:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
   2d418:	str	x8, [sp, #24]
   2d41c:	b	2d430 <rpl_re_set_registers@@Base+0x494>
   2d420:	ldur	x8, [x29, #-56]
   2d424:	mov	x9, #0xffffffffffffffff    	// #-1
   2d428:	udiv	x8, x9, x8
   2d42c:	str	x8, [sp, #24]
   2d430:	ldr	x8, [sp, #24]
   2d434:	mov	x9, #0x2                   	// #2
   2d438:	udiv	x8, x8, x9
   2d43c:	ldur	x9, [x29, #-24]
   2d440:	cmp	x8, x9
   2d444:	cset	w10, ls  // ls = plast
   2d448:	and	w10, w10, #0x1
   2d44c:	mov	w0, w10
   2d450:	sxtw	x8, w0
   2d454:	cbz	x8, 2d464 <rpl_re_set_registers@@Base+0x4c8>
   2d458:	mov	w8, #0xc                   	// #12
   2d45c:	stur	w8, [x29, #-4]
   2d460:	b	2d758 <rpl_re_set_registers@@Base+0x7bc>
   2d464:	ldur	x8, [x29, #-24]
   2d468:	mov	x9, #0x1                   	// #1
   2d46c:	add	x8, x8, #0x1
   2d470:	ldur	x10, [x29, #-16]
   2d474:	str	x8, [x10, #8]
   2d478:	ldur	x8, [x29, #-16]
   2d47c:	ldr	x8, [x8, #8]
   2d480:	mov	x10, #0x10                  	// #16
   2d484:	mul	x0, x8, x10
   2d488:	str	x9, [sp, #16]
   2d48c:	bl	af10 <malloc@plt>
   2d490:	ldur	x8, [x29, #-16]
   2d494:	str	x0, [x8]
   2d498:	ldr	x8, [sp, #16]
   2d49c:	stur	x8, [x29, #-32]
   2d4a0:	ldur	x8, [x29, #-32]
   2d4a4:	ldur	x9, [x29, #-24]
   2d4a8:	cmp	x8, x9
   2d4ac:	b.ls	2d4b4 <rpl_re_set_registers@@Base+0x518>  // b.plast
   2d4b0:	b	2d4c4 <rpl_re_set_registers@@Base+0x528>
   2d4b4:	ldur	x8, [x29, #-32]
   2d4b8:	lsl	x8, x8, #1
   2d4bc:	stur	x8, [x29, #-32]
   2d4c0:	b	2d4a0 <rpl_re_set_registers@@Base+0x504>
   2d4c4:	ldur	x1, [x29, #-32]
   2d4c8:	mov	x0, #0x18                  	// #24
   2d4cc:	bl	b2e0 <calloc@plt>
   2d4d0:	ldur	x8, [x29, #-16]
   2d4d4:	str	x0, [x8, #64]
   2d4d8:	ldur	x8, [x29, #-32]
   2d4dc:	subs	x8, x8, #0x1
   2d4e0:	ldur	x9, [x29, #-16]
   2d4e4:	str	x8, [x9, #136]
   2d4e8:	bl	b840 <__ctype_get_mb_cur_max@plt>
   2d4ec:	ldur	x8, [x29, #-16]
   2d4f0:	str	w0, [x8, #180]
   2d4f4:	mov	w0, #0xe                   	// #14
   2d4f8:	bl	b380 <nl_langinfo@plt>
   2d4fc:	stur	x0, [x29, #-40]
   2d500:	ldur	x8, [x29, #-40]
   2d504:	ldrb	w10, [x8]
   2d508:	cmp	w10, #0x55
   2d50c:	b.eq	2d520 <rpl_re_set_registers@@Base+0x584>  // b.none
   2d510:	ldur	x8, [x29, #-40]
   2d514:	ldrb	w9, [x8]
   2d518:	cmp	w9, #0x75
   2d51c:	b.ne	2d5ac <rpl_re_set_registers@@Base+0x610>  // b.any
   2d520:	ldur	x8, [x29, #-40]
   2d524:	ldrb	w9, [x8, #1]
   2d528:	cmp	w9, #0x54
   2d52c:	b.eq	2d540 <rpl_re_set_registers@@Base+0x5a4>  // b.none
   2d530:	ldur	x8, [x29, #-40]
   2d534:	ldrb	w9, [x8, #1]
   2d538:	cmp	w9, #0x74
   2d53c:	b.ne	2d5ac <rpl_re_set_registers@@Base+0x610>  // b.any
   2d540:	ldur	x8, [x29, #-40]
   2d544:	ldrb	w9, [x8, #2]
   2d548:	cmp	w9, #0x46
   2d54c:	b.eq	2d560 <rpl_re_set_registers@@Base+0x5c4>  // b.none
   2d550:	ldur	x8, [x29, #-40]
   2d554:	ldrb	w9, [x8, #2]
   2d558:	cmp	w9, #0x66
   2d55c:	b.ne	2d5ac <rpl_re_set_registers@@Base+0x610>  // b.any
   2d560:	ldur	x8, [x29, #-40]
   2d564:	add	x8, x8, #0x3
   2d568:	ldur	x9, [x29, #-40]
   2d56c:	ldrb	w10, [x9, #3]
   2d570:	cmp	w10, #0x2d
   2d574:	cset	w10, eq  // eq = none
   2d578:	and	w10, w10, #0x1
   2d57c:	mov	w0, w10
   2d580:	sxtw	x9, w0
   2d584:	add	x0, x8, x9
   2d588:	adrp	x1, 45000 <vasnprintf@@Base+0x2e4c>
   2d58c:	add	x1, x1, #0x5bc
   2d590:	bl	aa00 <strcmp@plt>
   2d594:	cbnz	w0, 2d5ac <rpl_re_set_registers@@Base+0x610>
   2d598:	ldur	x8, [x29, #-16]
   2d59c:	ldrb	w9, [x8, #176]
   2d5a0:	and	w9, w9, #0xfffffffb
   2d5a4:	orr	w9, w9, #0x4
   2d5a8:	strb	w9, [x8, #176]
   2d5ac:	ldur	x8, [x29, #-16]
   2d5b0:	ldrb	w9, [x8, #176]
   2d5b4:	and	w9, w9, #0xfffffff7
   2d5b8:	strb	w9, [x8, #176]
   2d5bc:	ldur	x8, [x29, #-16]
   2d5c0:	ldr	w9, [x8, #180]
   2d5c4:	cmp	w9, #0x1
   2d5c8:	b.le	2d70c <rpl_re_set_registers@@Base+0x770>
   2d5cc:	ldur	x8, [x29, #-16]
   2d5d0:	ldrb	w9, [x8, #176]
   2d5d4:	mov	w10, #0x2                   	// #2
   2d5d8:	lsr	w9, w9, w10
   2d5dc:	and	w9, w9, #0x1
   2d5e0:	and	w9, w9, #0xff
   2d5e4:	cbz	w9, 2d5fc <rpl_re_set_registers@@Base+0x660>
   2d5e8:	ldur	x8, [x29, #-16]
   2d5ec:	adrp	x9, 47000 <vasnprintf@@Base+0x4e4c>
   2d5f0:	add	x9, x9, #0x7f8
   2d5f4:	str	x9, [x8, #120]
   2d5f8:	b	2d70c <rpl_re_set_registers@@Base+0x770>
   2d5fc:	mov	x0, #0x20                  	// #32
   2d600:	mov	x1, #0x1                   	// #1
   2d604:	bl	b2e0 <calloc@plt>
   2d608:	ldur	x8, [x29, #-16]
   2d60c:	str	x0, [x8, #120]
   2d610:	ldur	x8, [x29, #-16]
   2d614:	ldr	x8, [x8, #120]
   2d618:	cmp	x8, #0x0
   2d61c:	cset	w9, eq  // eq = none
   2d620:	and	w9, w9, #0x1
   2d624:	mov	w0, w9
   2d628:	sxtw	x8, w0
   2d62c:	cbz	x8, 2d63c <rpl_re_set_registers@@Base+0x6a0>
   2d630:	mov	w8, #0xc                   	// #12
   2d634:	stur	w8, [x29, #-4]
   2d638:	b	2d758 <rpl_re_set_registers@@Base+0x7bc>
   2d63c:	stur	wzr, [x29, #-60]
   2d640:	stur	wzr, [x29, #-68]
   2d644:	ldur	w8, [x29, #-60]
   2d648:	cmp	w8, #0x4
   2d64c:	b.ge	2d70c <rpl_re_set_registers@@Base+0x770>  // b.tcont
   2d650:	stur	wzr, [x29, #-64]
   2d654:	ldur	w8, [x29, #-64]
   2d658:	cmp	w8, #0x40
   2d65c:	b.ge	2d6fc <rpl_re_set_registers@@Base+0x760>  // b.tcont
   2d660:	ldur	w0, [x29, #-68]
   2d664:	bl	b850 <btowc@plt>
   2d668:	stur	w0, [x29, #-72]
   2d66c:	ldur	w8, [x29, #-72]
   2d670:	mov	w9, #0xffffffff            	// #-1
   2d674:	cmp	w8, w9
   2d678:	b.eq	2d6b0 <rpl_re_set_registers@@Base+0x714>  // b.none
   2d67c:	ldur	w8, [x29, #-64]
   2d680:	mov	w9, w8
   2d684:	mov	x10, #0x1                   	// #1
   2d688:	lsl	x9, x10, x9
   2d68c:	ldur	x10, [x29, #-16]
   2d690:	ldr	x10, [x10, #120]
   2d694:	ldursw	x11, [x29, #-60]
   2d698:	mov	x12, #0x8                   	// #8
   2d69c:	mul	x11, x12, x11
   2d6a0:	add	x10, x10, x11
   2d6a4:	ldr	x11, [x10]
   2d6a8:	orr	x9, x11, x9
   2d6ac:	str	x9, [x10]
   2d6b0:	ldur	w8, [x29, #-68]
   2d6b4:	and	w8, w8, #0xffffff80
   2d6b8:	cbnz	w8, 2d6e0 <rpl_re_set_registers@@Base+0x744>
   2d6bc:	ldur	w8, [x29, #-72]
   2d6c0:	ldur	w9, [x29, #-68]
   2d6c4:	cmp	w8, w9
   2d6c8:	b.eq	2d6e0 <rpl_re_set_registers@@Base+0x744>  // b.none
   2d6cc:	ldur	x8, [x29, #-16]
   2d6d0:	ldrb	w9, [x8, #176]
   2d6d4:	and	w9, w9, #0xfffffff7
   2d6d8:	orr	w9, w9, #0x8
   2d6dc:	strb	w9, [x8, #176]
   2d6e0:	ldur	w8, [x29, #-64]
   2d6e4:	add	w8, w8, #0x1
   2d6e8:	stur	w8, [x29, #-64]
   2d6ec:	ldur	w8, [x29, #-68]
   2d6f0:	add	w8, w8, #0x1
   2d6f4:	stur	w8, [x29, #-68]
   2d6f8:	b	2d654 <rpl_re_set_registers@@Base+0x6b8>
   2d6fc:	ldur	w8, [x29, #-60]
   2d700:	add	w8, w8, #0x1
   2d704:	stur	w8, [x29, #-60]
   2d708:	b	2d644 <rpl_re_set_registers@@Base+0x6a8>
   2d70c:	ldur	x8, [x29, #-16]
   2d710:	ldr	x8, [x8]
   2d714:	mov	w9, #0x1                   	// #1
   2d718:	str	w9, [sp, #12]
   2d71c:	cbz	x8, 2d734 <rpl_re_set_registers@@Base+0x798>
   2d720:	ldur	x8, [x29, #-16]
   2d724:	ldr	x8, [x8, #64]
   2d728:	cmp	x8, #0x0
   2d72c:	cset	w9, eq  // eq = none
   2d730:	str	w9, [sp, #12]
   2d734:	ldr	w8, [sp, #12]
   2d738:	and	w8, w8, #0x1
   2d73c:	mov	w0, w8
   2d740:	sxtw	x9, w0
   2d744:	cbz	x9, 2d754 <rpl_re_set_registers@@Base+0x7b8>
   2d748:	mov	w8, #0xc                   	// #12
   2d74c:	stur	w8, [x29, #-4]
   2d750:	b	2d758 <rpl_re_set_registers@@Base+0x7bc>
   2d754:	stur	wzr, [x29, #-4]
   2d758:	ldur	w0, [x29, #-4]
   2d75c:	ldp	x29, x30, [sp, #224]
   2d760:	add	sp, sp, #0xf0
   2d764:	ret
   2d768:	sub	sp, sp, #0x60
   2d76c:	stp	x29, x30, [sp, #80]
   2d770:	add	x29, sp, #0x50
   2d774:	mov	x8, #0x98                  	// #152
   2d778:	mov	w9, wzr
   2d77c:	mov	w10, #0x1                   	// #1
   2d780:	stur	x0, [x29, #-16]
   2d784:	stur	x1, [x29, #-24]
   2d788:	stur	x2, [x29, #-32]
   2d78c:	str	x3, [sp, #40]
   2d790:	and	w10, w4, w10
   2d794:	strb	w10, [sp, #39]
   2d798:	str	x5, [sp, #24]
   2d79c:	ldur	x0, [x29, #-16]
   2d7a0:	mov	w1, w9
   2d7a4:	mov	x2, x8
   2d7a8:	bl	a970 <memset@plt>
   2d7ac:	ldur	x0, [x29, #-24]
   2d7b0:	ldur	x1, [x29, #-32]
   2d7b4:	ldur	x2, [x29, #-16]
   2d7b8:	ldr	x3, [sp, #40]
   2d7bc:	ldrb	w9, [sp, #39]
   2d7c0:	ldr	x5, [sp, #24]
   2d7c4:	and	w4, w9, #0x1
   2d7c8:	bl	2e654 <rpl_re_set_registers@@Base+0x16b8>
   2d7cc:	ldur	x8, [x29, #-32]
   2d7d0:	cmp	x8, #0x0
   2d7d4:	cset	w9, le
   2d7d8:	tbnz	w9, #0, 2d818 <rpl_re_set_registers@@Base+0x87c>
   2d7dc:	ldur	x0, [x29, #-16]
   2d7e0:	ldur	x8, [x29, #-32]
   2d7e4:	add	x1, x8, #0x1
   2d7e8:	bl	2e75c <rpl_re_set_registers@@Base+0x17c0>
   2d7ec:	str	w0, [sp, #20]
   2d7f0:	ldr	w9, [sp, #20]
   2d7f4:	cmp	w9, #0x0
   2d7f8:	cset	w9, ne  // ne = any
   2d7fc:	and	w9, w9, #0x1
   2d800:	mov	w1, w9
   2d804:	sxtw	x8, w1
   2d808:	cbz	x8, 2d818 <rpl_re_set_registers@@Base+0x87c>
   2d80c:	ldr	w8, [sp, #20]
   2d810:	stur	w8, [x29, #-4]
   2d814:	b	2d984 <rpl_re_set_registers@@Base+0x9e8>
   2d818:	ldur	x8, [x29, #-16]
   2d81c:	ldrb	w9, [x8, #139]
   2d820:	cbz	w9, 2d834 <rpl_re_set_registers@@Base+0x898>
   2d824:	ldur	x8, [x29, #-16]
   2d828:	ldr	x8, [x8, #8]
   2d82c:	str	x8, [sp, #8]
   2d830:	b	2d83c <rpl_re_set_registers@@Base+0x8a0>
   2d834:	ldur	x8, [x29, #-24]
   2d838:	str	x8, [sp, #8]
   2d83c:	ldr	x8, [sp, #8]
   2d840:	ldur	x9, [x29, #-16]
   2d844:	str	x8, [x9, #8]
   2d848:	ldrb	w10, [sp, #39]
   2d84c:	tbnz	w10, #0, 2d854 <rpl_re_set_registers@@Base+0x8b8>
   2d850:	b	2d930 <rpl_re_set_registers@@Base+0x994>
   2d854:	ldr	x8, [sp, #24]
   2d858:	ldr	w9, [x8, #180]
   2d85c:	cmp	w9, #0x1
   2d860:	b.le	2d924 <rpl_re_set_registers@@Base+0x988>
   2d864:	ldur	x0, [x29, #-16]
   2d868:	bl	2e8dc <rpl_re_set_registers@@Base+0x1940>
   2d86c:	str	w0, [sp, #20]
   2d870:	ldr	w8, [sp, #20]
   2d874:	cmp	w8, #0x0
   2d878:	cset	w8, ne  // ne = any
   2d87c:	and	w8, w8, #0x1
   2d880:	mov	w1, w8
   2d884:	sxtw	x9, w1
   2d888:	cbz	x9, 2d898 <rpl_re_set_registers@@Base+0x8fc>
   2d88c:	ldr	w8, [sp, #20]
   2d890:	stur	w8, [x29, #-4]
   2d894:	b	2d984 <rpl_re_set_registers@@Base+0x9e8>
   2d898:	ldur	x8, [x29, #-16]
   2d89c:	ldr	x8, [x8, #56]
   2d8a0:	ldur	x9, [x29, #-32]
   2d8a4:	cmp	x8, x9
   2d8a8:	b.lt	2d8b0 <rpl_re_set_registers@@Base+0x914>  // b.tstop
   2d8ac:	b	2d920 <rpl_re_set_registers@@Base+0x984>
   2d8b0:	ldur	x8, [x29, #-16]
   2d8b4:	ldr	x8, [x8, #64]
   2d8b8:	ldur	x9, [x29, #-16]
   2d8bc:	ldr	x9, [x9, #48]
   2d8c0:	ldr	x10, [sp, #24]
   2d8c4:	ldrsw	x10, [x10, #180]
   2d8c8:	add	x9, x9, x10
   2d8cc:	cmp	x8, x9
   2d8d0:	b.le	2d8d8 <rpl_re_set_registers@@Base+0x93c>
   2d8d4:	b	2d920 <rpl_re_set_registers@@Base+0x984>
   2d8d8:	ldur	x0, [x29, #-16]
   2d8dc:	ldur	x8, [x29, #-16]
   2d8e0:	ldr	x8, [x8, #64]
   2d8e4:	mov	x9, #0x2                   	// #2
   2d8e8:	mul	x1, x8, x9
   2d8ec:	bl	2e75c <rpl_re_set_registers@@Base+0x17c0>
   2d8f0:	str	w0, [sp, #20]
   2d8f4:	ldr	w10, [sp, #20]
   2d8f8:	cmp	w10, #0x0
   2d8fc:	cset	w10, ne  // ne = any
   2d900:	and	w10, w10, #0x1
   2d904:	mov	w1, w10
   2d908:	sxtw	x8, w1
   2d90c:	cbz	x8, 2d91c <rpl_re_set_registers@@Base+0x980>
   2d910:	ldr	w8, [sp, #20]
   2d914:	stur	w8, [x29, #-4]
   2d918:	b	2d984 <rpl_re_set_registers@@Base+0x9e8>
   2d91c:	b	2d864 <rpl_re_set_registers@@Base+0x8c8>
   2d920:	b	2d92c <rpl_re_set_registers@@Base+0x990>
   2d924:	ldur	x0, [x29, #-16]
   2d928:	bl	2f4c8 <rpl_re_set_registers@@Base+0x252c>
   2d92c:	b	2d980 <rpl_re_set_registers@@Base+0x9e4>
   2d930:	ldr	x8, [sp, #24]
   2d934:	ldr	w9, [x8, #180]
   2d938:	cmp	w9, #0x1
   2d93c:	b.le	2d94c <rpl_re_set_registers@@Base+0x9b0>
   2d940:	ldur	x0, [x29, #-16]
   2d944:	bl	2f5d4 <rpl_re_set_registers@@Base+0x2638>
   2d948:	b	2d980 <rpl_re_set_registers@@Base+0x9e4>
   2d94c:	ldr	x8, [sp, #40]
   2d950:	cbz	x8, 2d960 <rpl_re_set_registers@@Base+0x9c4>
   2d954:	ldur	x0, [x29, #-16]
   2d958:	bl	2f918 <rpl_re_set_registers@@Base+0x297c>
   2d95c:	b	2d980 <rpl_re_set_registers@@Base+0x9e4>
   2d960:	ldur	x8, [x29, #-16]
   2d964:	ldr	x8, [x8, #64]
   2d968:	ldur	x9, [x29, #-16]
   2d96c:	str	x8, [x9, #48]
   2d970:	ldur	x8, [x29, #-16]
   2d974:	ldr	x8, [x8, #64]
   2d978:	ldur	x9, [x29, #-16]
   2d97c:	str	x8, [x9, #56]
   2d980:	stur	wzr, [x29, #-4]
   2d984:	ldur	w0, [x29, #-4]
   2d988:	ldp	x29, x30, [sp, #80]
   2d98c:	add	sp, sp, #0x60
   2d990:	ret
   2d994:	sub	sp, sp, #0x40
   2d998:	stp	x29, x30, [sp, #48]
   2d99c:	add	x29, sp, #0x30
   2d9a0:	stur	x0, [x29, #-8]
   2d9a4:	ldur	x8, [x29, #-8]
   2d9a8:	ldr	x8, [x8]
   2d9ac:	stur	x8, [x29, #-16]
   2d9b0:	ldur	x8, [x29, #-16]
   2d9b4:	ldr	x8, [x8, #112]
   2d9b8:	str	x8, [sp, #24]
   2d9bc:	ldr	x8, [sp, #24]
   2d9c0:	cbz	x8, 2d9e4 <rpl_re_set_registers@@Base+0xa48>
   2d9c4:	ldr	x8, [sp, #24]
   2d9c8:	ldr	x8, [x8]
   2d9cc:	str	x8, [sp, #16]
   2d9d0:	ldr	x0, [sp, #24]
   2d9d4:	bl	a930 <free@plt>
   2d9d8:	ldr	x8, [sp, #16]
   2d9dc:	str	x8, [sp, #24]
   2d9e0:	b	2d9bc <rpl_re_set_registers@@Base+0xa20>
   2d9e4:	ldur	x8, [x29, #-16]
   2d9e8:	mov	x9, xzr
   2d9ec:	str	x9, [x8, #112]
   2d9f0:	ldur	x8, [x29, #-16]
   2d9f4:	mov	w10, #0xf                   	// #15
   2d9f8:	str	w10, [x8, #128]
   2d9fc:	ldur	x8, [x29, #-16]
   2da00:	str	x9, [x8, #104]
   2da04:	ldur	x8, [x29, #-16]
   2da08:	ldr	x0, [x8, #32]
   2da0c:	str	x9, [sp, #8]
   2da10:	bl	a930 <free@plt>
   2da14:	ldur	x8, [x29, #-16]
   2da18:	ldr	x9, [sp, #8]
   2da1c:	str	x9, [x8, #32]
   2da20:	ldp	x29, x30, [sp, #48]
   2da24:	add	sp, sp, #0x40
   2da28:	ret
   2da2c:	sub	sp, sp, #0x20
   2da30:	stp	x29, x30, [sp, #16]
   2da34:	add	x29, sp, #0x10
   2da38:	str	x0, [sp, #8]
   2da3c:	ldr	x8, [sp, #8]
   2da40:	ldr	x0, [x8, #16]
   2da44:	bl	a930 <free@plt>
   2da48:	ldr	x8, [sp, #8]
   2da4c:	ldr	x0, [x8, #24]
   2da50:	bl	a930 <free@plt>
   2da54:	ldr	x8, [sp, #8]
   2da58:	ldrb	w9, [x8, #139]
   2da5c:	cbz	w9, 2da6c <rpl_re_set_registers@@Base+0xad0>
   2da60:	ldr	x8, [sp, #8]
   2da64:	ldr	x0, [x8, #8]
   2da68:	bl	a930 <free@plt>
   2da6c:	ldp	x29, x30, [sp, #16]
   2da70:	add	sp, sp, #0x20
   2da74:	ret
   2da78:	sub	sp, sp, #0x80
   2da7c:	stp	x29, x30, [sp, #112]
   2da80:	add	x29, sp, #0x70
   2da84:	mov	x8, xzr
   2da88:	add	x9, sp, #0x18
   2da8c:	stur	x0, [x29, #-16]
   2da90:	stur	x1, [x29, #-24]
   2da94:	stur	x2, [x29, #-32]
   2da98:	stur	x3, [x29, #-40]
   2da9c:	ldur	x10, [x29, #-24]
   2daa0:	ldr	x10, [x10]
   2daa4:	stur	x10, [x29, #-48]
   2daa8:	ldur	x10, [x29, #-32]
   2daac:	ldur	x11, [x29, #-48]
   2dab0:	str	x10, [x11, #216]
   2dab4:	ldur	x1, [x29, #-16]
   2dab8:	ldur	x10, [x29, #-32]
   2dabc:	orr	x2, x10, #0x800000
   2dac0:	mov	x0, x9
   2dac4:	str	x8, [sp, #16]
   2dac8:	str	x9, [sp, #8]
   2dacc:	bl	2f9f0 <rpl_re_set_registers@@Base+0x2a54>
   2dad0:	ldur	x0, [x29, #-16]
   2dad4:	ldur	x1, [x29, #-24]
   2dad8:	ldur	x3, [x29, #-32]
   2dadc:	ldur	x5, [x29, #-40]
   2dae0:	ldr	x2, [sp, #8]
   2dae4:	ldr	x4, [sp, #16]
   2dae8:	bl	2fa34 <rpl_re_set_registers@@Base+0x2a98>
   2daec:	str	x0, [sp, #56]
   2daf0:	ldur	x8, [x29, #-40]
   2daf4:	ldr	w12, [x8]
   2daf8:	mov	w13, #0x0                   	// #0
   2dafc:	str	w13, [sp, #4]
   2db00:	cbz	w12, 2db14 <rpl_re_set_registers@@Base+0xb78>
   2db04:	ldr	x8, [sp, #56]
   2db08:	cmp	x8, #0x0
   2db0c:	cset	w9, eq  // eq = none
   2db10:	str	w9, [sp, #4]
   2db14:	ldr	w8, [sp, #4]
   2db18:	and	w8, w8, #0x1
   2db1c:	mov	w0, w8
   2db20:	sxtw	x9, w0
   2db24:	cbz	x9, 2db34 <rpl_re_set_registers@@Base+0xb98>
   2db28:	mov	x8, xzr
   2db2c:	stur	x8, [x29, #-8]
   2db30:	b	2dbd0 <rpl_re_set_registers@@Base+0xc34>
   2db34:	ldur	x0, [x29, #-48]
   2db38:	mov	x8, xzr
   2db3c:	mov	x1, x8
   2db40:	mov	x2, x8
   2db44:	mov	w3, #0x2                   	// #2
   2db48:	bl	2fc6c <rpl_re_set_registers@@Base+0x2cd0>
   2db4c:	str	x0, [sp, #48]
   2db50:	ldr	x8, [sp, #56]
   2db54:	cbz	x8, 2db74 <rpl_re_set_registers@@Base+0xbd8>
   2db58:	ldur	x0, [x29, #-48]
   2db5c:	ldr	x1, [sp, #56]
   2db60:	ldr	x2, [sp, #48]
   2db64:	mov	w3, #0x10                  	// #16
   2db68:	bl	2fc6c <rpl_re_set_registers@@Base+0x2cd0>
   2db6c:	str	x0, [sp, #40]
   2db70:	b	2db7c <rpl_re_set_registers@@Base+0xbe0>
   2db74:	ldr	x8, [sp, #48]
   2db78:	str	x8, [sp, #40]
   2db7c:	ldr	x8, [sp, #48]
   2db80:	mov	w9, #0x1                   	// #1
   2db84:	str	w9, [sp]
   2db88:	cbz	x8, 2db9c <rpl_re_set_registers@@Base+0xc00>
   2db8c:	ldr	x8, [sp, #40]
   2db90:	cmp	x8, #0x0
   2db94:	cset	w9, eq  // eq = none
   2db98:	str	w9, [sp]
   2db9c:	ldr	w8, [sp]
   2dba0:	and	w8, w8, #0x1
   2dba4:	mov	w0, w8
   2dba8:	sxtw	x9, w0
   2dbac:	cbz	x9, 2dbc8 <rpl_re_set_registers@@Base+0xc2c>
   2dbb0:	ldur	x8, [x29, #-40]
   2dbb4:	mov	w9, #0xc                   	// #12
   2dbb8:	str	w9, [x8]
   2dbbc:	mov	x8, xzr
   2dbc0:	stur	x8, [x29, #-8]
   2dbc4:	b	2dbd0 <rpl_re_set_registers@@Base+0xc34>
   2dbc8:	ldr	x8, [sp, #40]
   2dbcc:	stur	x8, [x29, #-8]
   2dbd0:	ldur	x0, [x29, #-8]
   2dbd4:	ldp	x29, x30, [sp, #112]
   2dbd8:	add	sp, sp, #0x80
   2dbdc:	ret
   2dbe0:	sub	sp, sp, #0x50
   2dbe4:	stp	x29, x30, [sp, #64]
   2dbe8:	add	x29, sp, #0x40
   2dbec:	mov	x8, #0x8                   	// #8
   2dbf0:	mov	x9, #0x18                  	// #24
   2dbf4:	stur	x0, [x29, #-16]
   2dbf8:	ldur	x10, [x29, #-16]
   2dbfc:	ldr	x10, [x10]
   2dc00:	stur	x10, [x29, #-24]
   2dc04:	ldur	x10, [x29, #-24]
   2dc08:	ldr	x10, [x10, #8]
   2dc0c:	mul	x0, x10, x8
   2dc10:	str	x8, [sp, #16]
   2dc14:	str	x9, [sp, #8]
   2dc18:	bl	af10 <malloc@plt>
   2dc1c:	ldur	x8, [x29, #-24]
   2dc20:	str	x0, [x8, #24]
   2dc24:	ldur	x8, [x29, #-24]
   2dc28:	ldr	x8, [x8, #8]
   2dc2c:	ldr	x9, [sp, #16]
   2dc30:	mul	x0, x8, x9
   2dc34:	bl	af10 <malloc@plt>
   2dc38:	ldur	x8, [x29, #-24]
   2dc3c:	str	x0, [x8, #32]
   2dc40:	ldur	x8, [x29, #-24]
   2dc44:	ldr	x8, [x8, #8]
   2dc48:	ldr	x9, [sp, #8]
   2dc4c:	mul	x0, x8, x9
   2dc50:	bl	af10 <malloc@plt>
   2dc54:	ldur	x8, [x29, #-24]
   2dc58:	str	x0, [x8, #40]
   2dc5c:	ldur	x8, [x29, #-24]
   2dc60:	ldr	x8, [x8, #8]
   2dc64:	ldr	x9, [sp, #8]
   2dc68:	mul	x0, x8, x9
   2dc6c:	bl	af10 <malloc@plt>
   2dc70:	ldur	x8, [x29, #-24]
   2dc74:	str	x0, [x8, #48]
   2dc78:	ldur	x8, [x29, #-24]
   2dc7c:	ldr	x8, [x8, #24]
   2dc80:	mov	w11, #0x1                   	// #1
   2dc84:	str	w11, [sp, #4]
   2dc88:	cbz	x8, 2dcc8 <rpl_re_set_registers@@Base+0xd2c>
   2dc8c:	ldur	x8, [x29, #-24]
   2dc90:	ldr	x8, [x8, #32]
   2dc94:	mov	w9, #0x1                   	// #1
   2dc98:	str	w9, [sp, #4]
   2dc9c:	cbz	x8, 2dcc8 <rpl_re_set_registers@@Base+0xd2c>
   2dca0:	ldur	x8, [x29, #-24]
   2dca4:	ldr	x8, [x8, #40]
   2dca8:	mov	w9, #0x1                   	// #1
   2dcac:	str	w9, [sp, #4]
   2dcb0:	cbz	x8, 2dcc8 <rpl_re_set_registers@@Base+0xd2c>
   2dcb4:	ldur	x8, [x29, #-24]
   2dcb8:	ldr	x8, [x8, #48]
   2dcbc:	cmp	x8, #0x0
   2dcc0:	cset	w9, eq  // eq = none
   2dcc4:	str	w9, [sp, #4]
   2dcc8:	ldr	w8, [sp, #4]
   2dccc:	and	w8, w8, #0x1
   2dcd0:	mov	w0, w8
   2dcd4:	sxtw	x9, w0
   2dcd8:	cbz	x9, 2dce8 <rpl_re_set_registers@@Base+0xd4c>
   2dcdc:	mov	w8, #0xc                   	// #12
   2dce0:	stur	w8, [x29, #-4]
   2dce4:	b	2dfa0 <rpl_re_set_registers@@Base+0x1004>
   2dce8:	ldur	x8, [x29, #-16]
   2dcec:	ldr	x8, [x8, #48]
   2dcf0:	mov	x9, #0x8                   	// #8
   2dcf4:	mul	x0, x8, x9
   2dcf8:	bl	af10 <malloc@plt>
   2dcfc:	ldur	x8, [x29, #-24]
   2dd00:	str	x0, [x8, #224]
   2dd04:	ldur	x8, [x29, #-24]
   2dd08:	ldr	x8, [x8, #224]
   2dd0c:	cbz	x8, 2ddd8 <rpl_re_set_registers@@Base+0xe3c>
   2dd10:	str	xzr, [sp, #24]
   2dd14:	ldr	x8, [sp, #24]
   2dd18:	ldur	x9, [x29, #-16]
   2dd1c:	ldr	x9, [x9, #48]
   2dd20:	cmp	x8, x9
   2dd24:	b.cs	2dd4c <rpl_re_set_registers@@Base+0xdb0>  // b.hs, b.nlast
   2dd28:	ldr	x8, [sp, #24]
   2dd2c:	ldur	x9, [x29, #-24]
   2dd30:	ldr	x9, [x9, #224]
   2dd34:	ldr	x10, [sp, #24]
   2dd38:	str	x8, [x9, x10, lsl #3]
   2dd3c:	ldr	x8, [sp, #24]
   2dd40:	add	x8, x8, #0x1
   2dd44:	str	x8, [sp, #24]
   2dd48:	b	2dd14 <rpl_re_set_registers@@Base+0xd78>
   2dd4c:	ldur	x8, [x29, #-24]
   2dd50:	ldr	x0, [x8, #104]
   2dd54:	ldur	x2, [x29, #-24]
   2dd58:	adrp	x1, 34000 <rpl_re_set_registers@@Base+0x7064>
   2dd5c:	add	x1, x1, #0xe2c
   2dd60:	bl	34d28 <rpl_re_set_registers@@Base+0x7d8c>
   2dd64:	str	xzr, [sp, #24]
   2dd68:	ldr	x8, [sp, #24]
   2dd6c:	ldur	x9, [x29, #-16]
   2dd70:	ldr	x9, [x9, #48]
   2dd74:	cmp	x8, x9
   2dd78:	b.cs	2ddac <rpl_re_set_registers@@Base+0xe10>  // b.hs, b.nlast
   2dd7c:	ldur	x8, [x29, #-24]
   2dd80:	ldr	x8, [x8, #224]
   2dd84:	ldr	x9, [sp, #24]
   2dd88:	ldr	x8, [x8, x9, lsl #3]
   2dd8c:	ldr	x9, [sp, #24]
   2dd90:	cmp	x8, x9
   2dd94:	b.eq	2dd9c <rpl_re_set_registers@@Base+0xe00>  // b.none
   2dd98:	b	2ddac <rpl_re_set_registers@@Base+0xe10>
   2dd9c:	ldr	x8, [sp, #24]
   2dda0:	add	x8, x8, #0x1
   2dda4:	str	x8, [sp, #24]
   2dda8:	b	2dd68 <rpl_re_set_registers@@Base+0xdcc>
   2ddac:	ldr	x8, [sp, #24]
   2ddb0:	ldur	x9, [x29, #-16]
   2ddb4:	ldr	x9, [x9, #48]
   2ddb8:	cmp	x8, x9
   2ddbc:	b.ne	2ddd8 <rpl_re_set_registers@@Base+0xe3c>  // b.any
   2ddc0:	ldur	x8, [x29, #-24]
   2ddc4:	ldr	x0, [x8, #224]
   2ddc8:	bl	a930 <free@plt>
   2ddcc:	ldur	x8, [x29, #-24]
   2ddd0:	mov	x9, xzr
   2ddd4:	str	x9, [x8, #224]
   2ddd8:	ldur	x8, [x29, #-24]
   2dddc:	ldr	x0, [x8, #104]
   2dde0:	ldur	x2, [x29, #-16]
   2dde4:	adrp	x1, 34000 <rpl_re_set_registers@@Base+0x7064>
   2dde8:	add	x1, x1, #0xf84
   2ddec:	bl	30b08 <rpl_re_set_registers@@Base+0x3b6c>
   2ddf0:	stur	w0, [x29, #-28]
   2ddf4:	ldur	w9, [x29, #-28]
   2ddf8:	cmp	w9, #0x0
   2ddfc:	cset	w9, ne  // ne = any
   2de00:	and	w9, w9, #0x1
   2de04:	mov	w1, w9
   2de08:	sxtw	x8, w1
   2de0c:	cbz	x8, 2de1c <rpl_re_set_registers@@Base+0xe80>
   2de10:	ldur	w8, [x29, #-28]
   2de14:	stur	w8, [x29, #-4]
   2de18:	b	2dfa0 <rpl_re_set_registers@@Base+0x1004>
   2de1c:	ldur	x8, [x29, #-24]
   2de20:	ldr	x0, [x8, #104]
   2de24:	ldur	x2, [x29, #-24]
   2de28:	adrp	x1, 35000 <rpl_re_set_registers@@Base+0x8064>
   2de2c:	add	x1, x1, #0x6c
   2de30:	bl	30b08 <rpl_re_set_registers@@Base+0x3b6c>
   2de34:	stur	w0, [x29, #-28]
   2de38:	ldur	w9, [x29, #-28]
   2de3c:	cmp	w9, #0x0
   2de40:	cset	w9, ne  // ne = any
   2de44:	and	w9, w9, #0x1
   2de48:	mov	w1, w9
   2de4c:	sxtw	x8, w1
   2de50:	cbz	x8, 2de60 <rpl_re_set_registers@@Base+0xec4>
   2de54:	ldur	w8, [x29, #-28]
   2de58:	stur	w8, [x29, #-4]
   2de5c:	b	2dfa0 <rpl_re_set_registers@@Base+0x1004>
   2de60:	ldur	x8, [x29, #-24]
   2de64:	ldr	x0, [x8, #104]
   2de68:	ldur	x2, [x29, #-24]
   2de6c:	adrp	x1, 35000 <rpl_re_set_registers@@Base+0x8064>
   2de70:	add	x1, x1, #0x180
   2de74:	bl	34d28 <rpl_re_set_registers@@Base+0x7d8c>
   2de78:	ldur	x8, [x29, #-24]
   2de7c:	ldr	x8, [x8, #104]
   2de80:	ldur	x2, [x29, #-24]
   2de84:	mov	x0, x8
   2de88:	adrp	x1, 35000 <rpl_re_set_registers@@Base+0x8064>
   2de8c:	add	x1, x1, #0x24c
   2de90:	bl	34d28 <rpl_re_set_registers@@Base+0x7d8c>
   2de94:	stur	w0, [x29, #-28]
   2de98:	ldur	w9, [x29, #-28]
   2de9c:	cmp	w9, #0x0
   2dea0:	cset	w9, ne  // ne = any
   2dea4:	and	w9, w9, #0x1
   2dea8:	mov	w1, w9
   2deac:	sxtw	x8, w1
   2deb0:	cbz	x8, 2dec0 <rpl_re_set_registers@@Base+0xf24>
   2deb4:	ldur	w8, [x29, #-28]
   2deb8:	stur	w8, [x29, #-4]
   2debc:	b	2dfa0 <rpl_re_set_registers@@Base+0x1004>
   2dec0:	ldur	x0, [x29, #-24]
   2dec4:	bl	354ec <rpl_re_set_registers@@Base+0x8550>
   2dec8:	stur	w0, [x29, #-28]
   2decc:	ldur	w8, [x29, #-28]
   2ded0:	cmp	w8, #0x0
   2ded4:	cset	w8, ne  // ne = any
   2ded8:	and	w8, w8, #0x1
   2dedc:	mov	w1, w8
   2dee0:	sxtw	x9, w1
   2dee4:	cbz	x9, 2def4 <rpl_re_set_registers@@Base+0xf58>
   2dee8:	ldur	w8, [x29, #-28]
   2deec:	stur	w8, [x29, #-4]
   2def0:	b	2dfa0 <rpl_re_set_registers@@Base+0x1004>
   2def4:	ldur	x8, [x29, #-16]
   2def8:	ldrb	w9, [x8, #56]
   2defc:	mov	w10, #0x4                   	// #4
   2df00:	lsr	w9, w9, w10
   2df04:	and	w9, w9, #0x1
   2df08:	and	w9, w9, #0xff
   2df0c:	cbnz	w9, 2df38 <rpl_re_set_registers@@Base+0xf9c>
   2df10:	ldur	x8, [x29, #-16]
   2df14:	ldr	x8, [x8, #48]
   2df18:	cmp	x8, #0x0
   2df1c:	cset	w9, ls  // ls = plast
   2df20:	tbnz	w9, #0, 2df38 <rpl_re_set_registers@@Base+0xf9c>
   2df24:	ldur	x8, [x29, #-24]
   2df28:	ldrb	w9, [x8, #176]
   2df2c:	and	w9, w9, #0x1
   2df30:	and	w9, w9, #0xff
   2df34:	cbnz	w9, 2df44 <rpl_re_set_registers@@Base+0xfa8>
   2df38:	ldur	x8, [x29, #-24]
   2df3c:	ldr	x8, [x8, #152]
   2df40:	cbz	x8, 2df98 <rpl_re_set_registers@@Base+0xffc>
   2df44:	ldur	x8, [x29, #-24]
   2df48:	ldr	x8, [x8, #16]
   2df4c:	mov	x9, #0x18                  	// #24
   2df50:	mul	x0, x8, x9
   2df54:	bl	af10 <malloc@plt>
   2df58:	ldur	x8, [x29, #-24]
   2df5c:	str	x0, [x8, #56]
   2df60:	ldur	x8, [x29, #-24]
   2df64:	ldr	x8, [x8, #56]
   2df68:	cmp	x8, #0x0
   2df6c:	cset	w10, eq  // eq = none
   2df70:	and	w10, w10, #0x1
   2df74:	mov	w0, w10
   2df78:	sxtw	x8, w0
   2df7c:	cbz	x8, 2df8c <rpl_re_set_registers@@Base+0xff0>
   2df80:	mov	w8, #0xc                   	// #12
   2df84:	stur	w8, [x29, #-4]
   2df88:	b	2dfa0 <rpl_re_set_registers@@Base+0x1004>
   2df8c:	ldur	x0, [x29, #-24]
   2df90:	bl	355f4 <rpl_re_set_registers@@Base+0x8658>
   2df94:	stur	w0, [x29, #-28]
   2df98:	ldur	w8, [x29, #-28]
   2df9c:	stur	w8, [x29, #-4]
   2dfa0:	ldur	w0, [x29, #-4]
   2dfa4:	ldp	x29, x30, [sp, #64]
   2dfa8:	add	sp, sp, #0x50
   2dfac:	ret
   2dfb0:	sub	sp, sp, #0x40
   2dfb4:	stp	x29, x30, [sp, #48]
   2dfb8:	add	x29, sp, #0x30
   2dfbc:	mov	w8, #0x0                   	// #0
   2dfc0:	stur	x0, [x29, #-8]
   2dfc4:	sturb	w8, [x29, #-21]
   2dfc8:	sturb	w8, [x29, #-22]
   2dfcc:	stur	xzr, [x29, #-16]
   2dfd0:	ldur	x8, [x29, #-16]
   2dfd4:	ldur	x9, [x29, #-8]
   2dfd8:	ldr	x9, [x9, #16]
   2dfdc:	cmp	x8, x9
   2dfe0:	b.cs	2e15c <rpl_re_set_registers@@Base+0x11c0>  // b.hs, b.nlast
   2dfe4:	ldur	x8, [x29, #-8]
   2dfe8:	ldr	x8, [x8]
   2dfec:	ldur	x9, [x29, #-16]
   2dff0:	mov	x10, #0x10                  	// #16
   2dff4:	mul	x9, x10, x9
   2dff8:	add	x8, x8, x9
   2dffc:	ldr	w11, [x8, #8]
   2e000:	and	w11, w11, #0xff
   2e004:	subs	w11, w11, #0x1
   2e008:	mov	w8, w11
   2e00c:	ubfx	x8, x8, #0, #32
   2e010:	cmp	x8, #0xb
   2e014:	str	x8, [sp, #8]
   2e018:	b.hi	2e148 <rpl_re_set_registers@@Base+0x11ac>  // b.pmore
   2e01c:	adrp	x8, 47000 <vasnprintf@@Base+0x4e4c>
   2e020:	add	x8, x8, #0x194
   2e024:	ldr	x11, [sp, #8]
   2e028:	ldrsw	x10, [x8, x11, lsl #2]
   2e02c:	add	x9, x8, x10
   2e030:	br	x9
   2e034:	ldur	x8, [x29, #-8]
   2e038:	ldr	x8, [x8]
   2e03c:	ldur	x9, [x29, #-16]
   2e040:	mov	x10, #0x10                  	// #16
   2e044:	mul	x9, x10, x9
   2e048:	ldrb	w11, [x8, x9]
   2e04c:	cmp	w11, #0x80
   2e050:	b.lt	2e05c <rpl_re_set_registers@@Base+0x10c0>  // b.tstop
   2e054:	mov	w8, #0x1                   	// #1
   2e058:	sturb	w8, [x29, #-21]
   2e05c:	b	2e14c <rpl_re_set_registers@@Base+0x11b0>
   2e060:	ldur	x8, [x29, #-8]
   2e064:	ldr	x8, [x8]
   2e068:	ldur	x9, [x29, #-16]
   2e06c:	mov	x10, #0x10                  	// #16
   2e070:	mul	x9, x10, x9
   2e074:	ldr	w11, [x8, x9]
   2e078:	cmp	w11, #0x10
   2e07c:	str	w11, [sp, #4]
   2e080:	b.eq	2e0c0 <rpl_re_set_registers@@Base+0x1124>  // b.none
   2e084:	b	2e088 <rpl_re_set_registers@@Base+0x10ec>
   2e088:	ldr	w8, [sp, #4]
   2e08c:	cmp	w8, #0x20
   2e090:	b.eq	2e0c0 <rpl_re_set_registers@@Base+0x1124>  // b.none
   2e094:	b	2e098 <rpl_re_set_registers@@Base+0x10fc>
   2e098:	ldr	w8, [sp, #4]
   2e09c:	cmp	w8, #0x40
   2e0a0:	b.eq	2e0c0 <rpl_re_set_registers@@Base+0x1124>  // b.none
   2e0a4:	b	2e0a8 <rpl_re_set_registers@@Base+0x110c>
   2e0a8:	ldr	w8, [sp, #4]
   2e0ac:	cmp	w8, #0x80
   2e0b0:	cset	w9, eq  // eq = none
   2e0b4:	eor	w9, w9, #0x1
   2e0b8:	tbnz	w9, #0, 2e0c4 <rpl_re_set_registers@@Base+0x1128>
   2e0bc:	b	2e0c0 <rpl_re_set_registers@@Base+0x1124>
   2e0c0:	b	2e0c8 <rpl_re_set_registers@@Base+0x112c>
   2e0c4:	b	2e2c0 <rpl_re_set_registers@@Base+0x1324>
   2e0c8:	b	2e14c <rpl_re_set_registers@@Base+0x11b0>
   2e0cc:	mov	w8, #0x1                   	// #1
   2e0d0:	sturb	w8, [x29, #-22]
   2e0d4:	b	2e14c <rpl_re_set_registers@@Base+0x11b0>
   2e0d8:	b	2e14c <rpl_re_set_registers@@Base+0x11b0>
   2e0dc:	b	2e2c0 <rpl_re_set_registers@@Base+0x1324>
   2e0e0:	str	wzr, [sp, #20]
   2e0e4:	mov	w8, #0x2                   	// #2
   2e0e8:	stur	w8, [x29, #-20]
   2e0ec:	ldur	w8, [x29, #-20]
   2e0f0:	cmp	w8, #0x4
   2e0f4:	b.ge	2e144 <rpl_re_set_registers@@Base+0x11a8>  // b.tcont
   2e0f8:	ldur	x8, [x29, #-8]
   2e0fc:	ldr	x8, [x8]
   2e100:	ldur	x9, [x29, #-16]
   2e104:	mov	x10, #0x10                  	// #16
   2e108:	mul	x9, x10, x9
   2e10c:	add	x8, x8, x9
   2e110:	ldr	x8, [x8]
   2e114:	ldursw	x9, [x29, #-20]
   2e118:	ldr	x8, [x8, x9, lsl #3]
   2e11c:	ldr	w11, [sp, #20]
   2e120:	mov	w9, w11
   2e124:	lsr	x8, x8, x9
   2e128:	cbz	x8, 2e130 <rpl_re_set_registers@@Base+0x1194>
   2e12c:	b	2e2c0 <rpl_re_set_registers@@Base+0x1324>
   2e130:	str	wzr, [sp, #20]
   2e134:	ldur	w8, [x29, #-20]
   2e138:	add	w8, w8, #0x1
   2e13c:	stur	w8, [x29, #-20]
   2e140:	b	2e0ec <rpl_re_set_registers@@Base+0x1150>
   2e144:	b	2e14c <rpl_re_set_registers@@Base+0x11b0>
   2e148:	bl	a9e0 <abort@plt>
   2e14c:	ldur	x8, [x29, #-16]
   2e150:	add	x8, x8, #0x1
   2e154:	stur	x8, [x29, #-16]
   2e158:	b	2dfd0 <rpl_re_set_registers@@Base+0x1034>
   2e15c:	ldurb	w8, [x29, #-21]
   2e160:	tbnz	w8, #0, 2e170 <rpl_re_set_registers@@Base+0x11d4>
   2e164:	ldurb	w8, [x29, #-22]
   2e168:	tbnz	w8, #0, 2e170 <rpl_re_set_registers@@Base+0x11d4>
   2e16c:	b	2e258 <rpl_re_set_registers@@Base+0x12bc>
   2e170:	stur	xzr, [x29, #-16]
   2e174:	ldur	x8, [x29, #-16]
   2e178:	ldur	x9, [x29, #-8]
   2e17c:	ldr	x9, [x9, #16]
   2e180:	cmp	x8, x9
   2e184:	b.cs	2e258 <rpl_re_set_registers@@Base+0x12bc>  // b.hs, b.nlast
   2e188:	ldur	x8, [x29, #-8]
   2e18c:	ldr	x8, [x8]
   2e190:	ldur	x9, [x29, #-16]
   2e194:	mov	x10, #0x10                  	// #16
   2e198:	mul	x9, x10, x9
   2e19c:	add	x8, x8, x9
   2e1a0:	ldr	w11, [x8, #8]
   2e1a4:	and	w11, w11, #0xff
   2e1a8:	cmp	w11, #0x1
   2e1ac:	b.ne	2e1f8 <rpl_re_set_registers@@Base+0x125c>  // b.any
   2e1b0:	ldur	x8, [x29, #-8]
   2e1b4:	ldr	x8, [x8]
   2e1b8:	ldur	x9, [x29, #-16]
   2e1bc:	mov	x10, #0x10                  	// #16
   2e1c0:	mul	x9, x10, x9
   2e1c4:	ldrb	w11, [x8, x9]
   2e1c8:	cmp	w11, #0x80
   2e1cc:	b.lt	2e1f8 <rpl_re_set_registers@@Base+0x125c>  // b.tstop
   2e1d0:	ldur	x8, [x29, #-8]
   2e1d4:	ldr	x8, [x8]
   2e1d8:	ldur	x9, [x29, #-16]
   2e1dc:	mov	x10, #0x10                  	// #16
   2e1e0:	mul	x9, x10, x9
   2e1e4:	add	x8, x8, x9
   2e1e8:	ldr	w11, [x8, #8]
   2e1ec:	and	w11, w11, #0xffdfffff
   2e1f0:	str	w11, [x8, #8]
   2e1f4:	b	2e248 <rpl_re_set_registers@@Base+0x12ac>
   2e1f8:	ldur	x8, [x29, #-8]
   2e1fc:	ldr	x8, [x8]
   2e200:	ldur	x9, [x29, #-16]
   2e204:	mov	x10, #0x10                  	// #16
   2e208:	mul	x9, x10, x9
   2e20c:	add	x8, x8, x9
   2e210:	ldr	w11, [x8, #8]
   2e214:	and	w11, w11, #0xff
   2e218:	cmp	w11, #0x5
   2e21c:	b.ne	2e248 <rpl_re_set_registers@@Base+0x12ac>  // b.any
   2e220:	ldur	x8, [x29, #-8]
   2e224:	ldr	x8, [x8]
   2e228:	ldur	x9, [x29, #-16]
   2e22c:	mov	x10, #0x10                  	// #16
   2e230:	mul	x9, x10, x9
   2e234:	add	x8, x8, x9
   2e238:	ldr	w11, [x8, #8]
   2e23c:	and	w11, w11, #0xffffff00
   2e240:	orr	w11, w11, #0x7
   2e244:	str	w11, [x8, #8]
   2e248:	ldur	x8, [x29, #-16]
   2e24c:	add	x8, x8, #0x1
   2e250:	stur	x8, [x29, #-16]
   2e254:	b	2e174 <rpl_re_set_registers@@Base+0x11d8>
   2e258:	ldur	x8, [x29, #-8]
   2e25c:	mov	w9, #0x1                   	// #1
   2e260:	str	w9, [x8, #180]
   2e264:	ldur	x8, [x29, #-8]
   2e268:	ldrb	w9, [x8, #176]
   2e26c:	and	w9, w9, #0xfffffffb
   2e270:	strb	w9, [x8, #176]
   2e274:	ldur	x8, [x29, #-8]
   2e278:	ldr	x8, [x8, #152]
   2e27c:	cmp	x8, #0x0
   2e280:	cset	w9, gt
   2e284:	mov	w10, #0x1                   	// #1
   2e288:	str	w10, [sp]
   2e28c:	tbnz	w9, #0, 2e298 <rpl_re_set_registers@@Base+0x12fc>
   2e290:	ldurb	w8, [x29, #-22]
   2e294:	str	w8, [sp]
   2e298:	ldr	w8, [sp]
   2e29c:	mov	w9, #0x1                   	// #1
   2e2a0:	and	w8, w8, #0x1
   2e2a4:	ldur	x10, [x29, #-8]
   2e2a8:	ldrb	w11, [x10, #176]
   2e2ac:	and	w8, w8, #0x1
   2e2b0:	lsl	w8, w8, w9
   2e2b4:	and	w9, w11, #0xfffffffd
   2e2b8:	orr	w8, w9, w8
   2e2bc:	strb	w8, [x10, #176]
   2e2c0:	ldp	x29, x30, [sp, #48]
   2e2c4:	add	sp, sp, #0x40
   2e2c8:	ret
   2e2cc:	sub	sp, sp, #0xa0
   2e2d0:	stp	x29, x30, [sp, #144]
   2e2d4:	add	x29, sp, #0x90
   2e2d8:	sub	x8, x29, #0x40
   2e2dc:	stur	x0, [x29, #-16]
   2e2e0:	ldur	x9, [x29, #-16]
   2e2e4:	ldr	x9, [x9, #104]
   2e2e8:	mov	x10, #0x18                  	// #24
   2e2ec:	ldr	x9, [x9, #24]
   2e2f0:	ldr	x9, [x9, #56]
   2e2f4:	stur	x9, [x29, #-24]
   2e2f8:	ldur	x9, [x29, #-24]
   2e2fc:	ldur	x11, [x29, #-16]
   2e300:	str	x9, [x11, #144]
   2e304:	ldur	x9, [x29, #-16]
   2e308:	ldr	x9, [x9, #48]
   2e30c:	ldur	x11, [x29, #-24]
   2e310:	mul	x10, x10, x11
   2e314:	add	x1, x9, x10
   2e318:	mov	x0, x8
   2e31c:	bl	3719c <rpl_re_set_registers@@Base+0xa200>
   2e320:	stur	w0, [x29, #-36]
   2e324:	ldur	w12, [x29, #-36]
   2e328:	cmp	w12, #0x0
   2e32c:	cset	w12, ne  // ne = any
   2e330:	and	w12, w12, #0x1
   2e334:	mov	w1, w12
   2e338:	sxtw	x8, w1
   2e33c:	cbz	x8, 2e34c <rpl_re_set_registers@@Base+0x13b0>
   2e340:	ldur	w8, [x29, #-36]
   2e344:	stur	w8, [x29, #-4]
   2e348:	b	2e644 <rpl_re_set_registers@@Base+0x16a8>
   2e34c:	ldur	x8, [x29, #-16]
   2e350:	ldr	x8, [x8, #152]
   2e354:	cmp	x8, #0x0
   2e358:	cset	w9, le
   2e35c:	tbnz	w9, #0, 2e4e8 <rpl_re_set_registers@@Base+0x154c>
   2e360:	stur	xzr, [x29, #-32]
   2e364:	ldur	x8, [x29, #-32]
   2e368:	ldur	x9, [x29, #-56]
   2e36c:	cmp	x8, x9
   2e370:	b.ge	2e4e8 <rpl_re_set_registers@@Base+0x154c>  // b.tcont
   2e374:	mov	x8, #0x10                  	// #16
   2e378:	sub	x9, x29, #0x40
   2e37c:	ldr	x9, [x9, #16]
   2e380:	ldur	x10, [x29, #-32]
   2e384:	ldr	x9, [x9, x10, lsl #3]
   2e388:	str	x9, [sp, #72]
   2e38c:	ldur	x9, [x29, #-16]
   2e390:	ldr	x9, [x9]
   2e394:	ldr	x10, [sp, #72]
   2e398:	mul	x8, x8, x10
   2e39c:	add	x8, x9, x8
   2e3a0:	ldr	w11, [x8, #8]
   2e3a4:	and	w11, w11, #0xff
   2e3a8:	str	w11, [sp, #68]
   2e3ac:	ldr	w11, [sp, #68]
   2e3b0:	cmp	w11, #0x4
   2e3b4:	b.eq	2e3bc <rpl_re_set_registers@@Base+0x1420>  // b.none
   2e3b8:	b	2e4d8 <rpl_re_set_registers@@Base+0x153c>
   2e3bc:	str	xzr, [sp, #56]
   2e3c0:	ldr	x8, [sp, #56]
   2e3c4:	ldur	x9, [x29, #-56]
   2e3c8:	cmp	x8, x9
   2e3cc:	b.ge	2e448 <rpl_re_set_registers@@Base+0x14ac>  // b.tcont
   2e3d0:	ldur	x8, [x29, #-16]
   2e3d4:	ldr	x8, [x8]
   2e3d8:	mov	x9, #0x10                  	// #16
   2e3dc:	sub	x10, x29, #0x40
   2e3e0:	ldr	x10, [x10, #16]
   2e3e4:	ldr	x11, [sp, #56]
   2e3e8:	ldr	x10, [x10, x11, lsl #3]
   2e3ec:	mul	x9, x9, x10
   2e3f0:	add	x8, x8, x9
   2e3f4:	str	x8, [sp, #48]
   2e3f8:	ldr	x8, [sp, #48]
   2e3fc:	ldr	w12, [x8, #8]
   2e400:	and	w12, w12, #0xff
   2e404:	cmp	w12, #0x9
   2e408:	b.ne	2e438 <rpl_re_set_registers@@Base+0x149c>  // b.any
   2e40c:	ldr	x8, [sp, #48]
   2e410:	ldr	x8, [x8]
   2e414:	ldur	x9, [x29, #-16]
   2e418:	ldr	x9, [x9]
   2e41c:	ldr	x10, [sp, #72]
   2e420:	mov	x11, #0x10                  	// #16
   2e424:	mul	x10, x11, x10
   2e428:	ldr	x9, [x9, x10]
   2e42c:	cmp	x8, x9
   2e430:	b.ne	2e438 <rpl_re_set_registers@@Base+0x149c>  // b.any
   2e434:	b	2e448 <rpl_re_set_registers@@Base+0x14ac>
   2e438:	ldr	x8, [sp, #56]
   2e43c:	add	x8, x8, #0x1
   2e440:	str	x8, [sp, #56]
   2e444:	b	2e3c0 <rpl_re_set_registers@@Base+0x1424>
   2e448:	ldr	x8, [sp, #56]
   2e44c:	ldur	x9, [x29, #-56]
   2e450:	cmp	x8, x9
   2e454:	b.ne	2e45c <rpl_re_set_registers@@Base+0x14c0>  // b.any
   2e458:	b	2e4d8 <rpl_re_set_registers@@Base+0x153c>
   2e45c:	ldr	w8, [sp, #68]
   2e460:	cmp	w8, #0x4
   2e464:	b.ne	2e4d8 <rpl_re_set_registers@@Base+0x153c>  // b.any
   2e468:	ldur	x8, [x29, #-16]
   2e46c:	ldr	x8, [x8, #40]
   2e470:	ldr	x9, [sp, #72]
   2e474:	mov	x10, #0x18                  	// #24
   2e478:	mul	x9, x10, x9
   2e47c:	add	x8, x8, x9
   2e480:	ldr	x8, [x8, #16]
   2e484:	ldr	x8, [x8]
   2e488:	str	x8, [sp, #40]
   2e48c:	ldr	x1, [sp, #40]
   2e490:	sub	x0, x29, #0x40
   2e494:	bl	37288 <rpl_re_set_registers@@Base+0xa2ec>
   2e498:	cbnz	x0, 2e4d8 <rpl_re_set_registers@@Base+0x153c>
   2e49c:	ldur	x8, [x29, #-16]
   2e4a0:	ldr	x8, [x8, #48]
   2e4a4:	ldr	x9, [sp, #40]
   2e4a8:	mov	x10, #0x18                  	// #24
   2e4ac:	mul	x9, x10, x9
   2e4b0:	add	x1, x8, x9
   2e4b4:	sub	x0, x29, #0x40
   2e4b8:	bl	36848 <rpl_re_set_registers@@Base+0x98ac>
   2e4bc:	str	w0, [sp, #36]
   2e4c0:	ldr	w11, [sp, #36]
   2e4c4:	cbz	w11, 2e4d4 <rpl_re_set_registers@@Base+0x1538>
   2e4c8:	ldr	w8, [sp, #36]
   2e4cc:	stur	w8, [x29, #-4]
   2e4d0:	b	2e644 <rpl_re_set_registers@@Base+0x16a8>
   2e4d4:	stur	xzr, [x29, #-32]
   2e4d8:	ldur	x8, [x29, #-32]
   2e4dc:	add	x8, x8, #0x1
   2e4e0:	stur	x8, [x29, #-32]
   2e4e4:	b	2e364 <rpl_re_set_registers@@Base+0x13c8>
   2e4e8:	ldur	x1, [x29, #-16]
   2e4ec:	sub	x0, x29, #0x24
   2e4f0:	sub	x2, x29, #0x40
   2e4f4:	mov	w8, wzr
   2e4f8:	mov	w3, w8
   2e4fc:	bl	3736c <rpl_re_set_registers@@Base+0xa3d0>
   2e500:	ldur	x9, [x29, #-16]
   2e504:	str	x0, [x9, #72]
   2e508:	ldur	x9, [x29, #-16]
   2e50c:	ldr	x9, [x9, #72]
   2e510:	cmp	x9, #0x0
   2e514:	cset	w8, eq  // eq = none
   2e518:	and	w8, w8, #0x1
   2e51c:	mov	w0, w8
   2e520:	sxtw	x9, w0
   2e524:	cbz	x9, 2e534 <rpl_re_set_registers@@Base+0x1598>
   2e528:	ldur	w8, [x29, #-36]
   2e52c:	stur	w8, [x29, #-4]
   2e530:	b	2e644 <rpl_re_set_registers@@Base+0x16a8>
   2e534:	ldur	x8, [x29, #-16]
   2e538:	ldr	x8, [x8, #72]
   2e53c:	ldrb	w9, [x8, #104]
   2e540:	mov	w10, #0x7                   	// #7
   2e544:	lsr	w9, w9, w10
   2e548:	and	w9, w9, #0xff
   2e54c:	cbz	w9, 2e614 <rpl_re_set_registers@@Base+0x1678>
   2e550:	ldur	x1, [x29, #-16]
   2e554:	sub	x8, x29, #0x24
   2e558:	mov	x0, x8
   2e55c:	sub	x9, x29, #0x40
   2e560:	mov	x2, x9
   2e564:	mov	w3, #0x1                   	// #1
   2e568:	str	x8, [sp, #24]
   2e56c:	str	x9, [sp, #16]
   2e570:	bl	3736c <rpl_re_set_registers@@Base+0xa3d0>
   2e574:	ldur	x8, [x29, #-16]
   2e578:	str	x0, [x8, #80]
   2e57c:	ldur	x1, [x29, #-16]
   2e580:	ldr	x0, [sp, #24]
   2e584:	ldr	x2, [sp, #16]
   2e588:	mov	w3, #0x2                   	// #2
   2e58c:	bl	3736c <rpl_re_set_registers@@Base+0xa3d0>
   2e590:	ldur	x8, [x29, #-16]
   2e594:	str	x0, [x8, #88]
   2e598:	ldur	x1, [x29, #-16]
   2e59c:	ldr	x0, [sp, #24]
   2e5a0:	ldr	x2, [sp, #16]
   2e5a4:	mov	w3, #0x6                   	// #6
   2e5a8:	bl	3736c <rpl_re_set_registers@@Base+0xa3d0>
   2e5ac:	ldur	x8, [x29, #-16]
   2e5b0:	str	x0, [x8, #96]
   2e5b4:	ldur	x8, [x29, #-16]
   2e5b8:	ldr	x8, [x8, #80]
   2e5bc:	mov	w10, #0x1                   	// #1
   2e5c0:	str	w10, [sp, #12]
   2e5c4:	cbz	x8, 2e5f0 <rpl_re_set_registers@@Base+0x1654>
   2e5c8:	ldur	x8, [x29, #-16]
   2e5cc:	ldr	x8, [x8, #88]
   2e5d0:	mov	w9, #0x1                   	// #1
   2e5d4:	str	w9, [sp, #12]
   2e5d8:	cbz	x8, 2e5f0 <rpl_re_set_registers@@Base+0x1654>
   2e5dc:	ldur	x8, [x29, #-16]
   2e5e0:	ldr	x8, [x8, #96]
   2e5e4:	cmp	x8, #0x0
   2e5e8:	cset	w9, eq  // eq = none
   2e5ec:	str	w9, [sp, #12]
   2e5f0:	ldr	w8, [sp, #12]
   2e5f4:	and	w8, w8, #0x1
   2e5f8:	mov	w0, w8
   2e5fc:	sxtw	x9, w0
   2e600:	cbz	x9, 2e610 <rpl_re_set_registers@@Base+0x1674>
   2e604:	ldur	w8, [x29, #-36]
   2e608:	stur	w8, [x29, #-4]
   2e60c:	b	2e644 <rpl_re_set_registers@@Base+0x16a8>
   2e610:	b	2e634 <rpl_re_set_registers@@Base+0x1698>
   2e614:	ldur	x8, [x29, #-16]
   2e618:	ldr	x8, [x8, #72]
   2e61c:	ldur	x9, [x29, #-16]
   2e620:	str	x8, [x9, #96]
   2e624:	ldur	x9, [x29, #-16]
   2e628:	str	x8, [x9, #88]
   2e62c:	ldur	x9, [x29, #-16]
   2e630:	str	x8, [x9, #80]
   2e634:	sub	x8, x29, #0x40
   2e638:	ldr	x0, [x8, #16]
   2e63c:	bl	a930 <free@plt>
   2e640:	stur	wzr, [x29, #-4]
   2e644:	ldur	w0, [x29, #-4]
   2e648:	ldp	x29, x30, [sp, #144]
   2e64c:	add	sp, sp, #0xa0
   2e650:	ret
   2e654:	sub	sp, sp, #0x40
   2e658:	str	x0, [sp, #56]
   2e65c:	str	x1, [sp, #48]
   2e660:	str	x2, [sp, #40]
   2e664:	str	x3, [sp, #32]
   2e668:	mov	w8, #0x1                   	// #1
   2e66c:	and	w8, w4, w8
   2e670:	strb	w8, [sp, #31]
   2e674:	str	x5, [sp, #16]
   2e678:	ldr	x9, [sp, #56]
   2e67c:	ldr	x10, [sp, #40]
   2e680:	str	x9, [x10]
   2e684:	ldr	x9, [sp, #48]
   2e688:	ldr	x10, [sp, #40]
   2e68c:	str	x9, [x10, #88]
   2e690:	ldr	x9, [sp, #48]
   2e694:	ldr	x10, [sp, #40]
   2e698:	str	x9, [x10, #80]
   2e69c:	ldr	x9, [sp, #32]
   2e6a0:	ldr	x10, [sp, #40]
   2e6a4:	str	x9, [x10, #120]
   2e6a8:	ldrb	w8, [sp, #31]
   2e6ac:	and	w8, w8, #0x1
   2e6b0:	ldr	x9, [sp, #40]
   2e6b4:	strb	w8, [x9, #136]
   2e6b8:	ldr	x9, [sp, #32]
   2e6bc:	mov	w8, #0x1                   	// #1
   2e6c0:	str	w8, [sp, #12]
   2e6c4:	cbnz	x9, 2e6d0 <rpl_re_set_registers@@Base+0x1734>
   2e6c8:	ldrb	w8, [sp, #31]
   2e6cc:	str	w8, [sp, #12]
   2e6d0:	ldr	w8, [sp, #12]
   2e6d4:	mov	w9, #0x1                   	// #1
   2e6d8:	and	w8, w8, #0x1
   2e6dc:	ldr	x10, [sp, #40]
   2e6e0:	strb	w8, [x10, #139]
   2e6e4:	ldr	x10, [sp, #16]
   2e6e8:	ldr	w8, [x10, #180]
   2e6ec:	ldr	x10, [sp, #40]
   2e6f0:	str	w8, [x10, #144]
   2e6f4:	ldr	x10, [sp, #16]
   2e6f8:	ldrb	w8, [x10, #176]
   2e6fc:	mov	w11, #0x2                   	// #2
   2e700:	lsr	w8, w8, w11
   2e704:	and	w8, w8, #0x1
   2e708:	and	w8, w8, #0xff
   2e70c:	ldr	x10, [sp, #40]
   2e710:	strb	w8, [x10, #137]
   2e714:	ldr	x10, [sp, #16]
   2e718:	ldrb	w8, [x10, #176]
   2e71c:	mov	w11, #0x3                   	// #3
   2e720:	lsr	w8, w8, w11
   2e724:	and	w8, w8, w9
   2e728:	and	w8, w8, #0xff
   2e72c:	ldr	x10, [sp, #40]
   2e730:	strb	w8, [x10, #138]
   2e734:	ldr	x10, [sp, #40]
   2e738:	ldr	x10, [x10, #88]
   2e73c:	ldr	x12, [sp, #40]
   2e740:	str	x10, [x12, #104]
   2e744:	ldr	x10, [sp, #40]
   2e748:	ldr	x10, [x10, #104]
   2e74c:	ldr	x12, [sp, #40]
   2e750:	str	x10, [x12, #96]
   2e754:	add	sp, sp, #0x40
   2e758:	ret
   2e75c:	sub	sp, sp, #0x50
   2e760:	stp	x29, x30, [sp, #64]
   2e764:	add	x29, sp, #0x40
   2e768:	stur	x0, [x29, #-16]
   2e76c:	stur	x1, [x29, #-24]
   2e770:	ldur	x8, [x29, #-16]
   2e774:	ldr	w9, [x8, #144]
   2e778:	cmp	w9, #0x1
   2e77c:	b.le	2e860 <rpl_re_set_registers@@Base+0x18c4>
   2e780:	mov	x8, #0x8                   	// #8
   2e784:	str	x8, [sp, #24]
   2e788:	ldur	x8, [x29, #-24]
   2e78c:	mov	x9, #0x1fffffffffffffff    	// #2305843009213693951
   2e790:	cmp	x9, x8
   2e794:	cset	w10, cc  // cc = lo, ul, last
   2e798:	and	w10, w10, #0x1
   2e79c:	mov	w0, w10
   2e7a0:	sxtw	x8, w0
   2e7a4:	cbz	x8, 2e7b4 <rpl_re_set_registers@@Base+0x1818>
   2e7a8:	mov	w8, #0xc                   	// #12
   2e7ac:	stur	w8, [x29, #-4]
   2e7b0:	b	2e8cc <rpl_re_set_registers@@Base+0x1930>
   2e7b4:	ldur	x8, [x29, #-16]
   2e7b8:	ldr	x0, [x8, #16]
   2e7bc:	ldur	x8, [x29, #-24]
   2e7c0:	mov	x9, #0x4                   	// #4
   2e7c4:	mul	x1, x8, x9
   2e7c8:	bl	af40 <realloc@plt>
   2e7cc:	str	x0, [sp, #32]
   2e7d0:	ldr	x8, [sp, #32]
   2e7d4:	cmp	x8, #0x0
   2e7d8:	cset	w10, eq  // eq = none
   2e7dc:	and	w10, w10, #0x1
   2e7e0:	mov	w0, w10
   2e7e4:	sxtw	x8, w0
   2e7e8:	cbz	x8, 2e7f8 <rpl_re_set_registers@@Base+0x185c>
   2e7ec:	mov	w8, #0xc                   	// #12
   2e7f0:	stur	w8, [x29, #-4]
   2e7f4:	b	2e8cc <rpl_re_set_registers@@Base+0x1930>
   2e7f8:	ldr	x8, [sp, #32]
   2e7fc:	ldur	x9, [x29, #-16]
   2e800:	str	x8, [x9, #16]
   2e804:	ldur	x8, [x29, #-16]
   2e808:	ldr	x8, [x8, #24]
   2e80c:	cbz	x8, 2e860 <rpl_re_set_registers@@Base+0x18c4>
   2e810:	ldur	x8, [x29, #-16]
   2e814:	ldr	x0, [x8, #24]
   2e818:	ldur	x8, [x29, #-24]
   2e81c:	mov	x9, #0x8                   	// #8
   2e820:	mul	x1, x8, x9
   2e824:	bl	af40 <realloc@plt>
   2e828:	str	x0, [sp, #16]
   2e82c:	ldr	x8, [sp, #16]
   2e830:	cmp	x8, #0x0
   2e834:	cset	w10, eq  // eq = none
   2e838:	and	w10, w10, #0x1
   2e83c:	mov	w0, w10
   2e840:	sxtw	x8, w0
   2e844:	cbz	x8, 2e854 <rpl_re_set_registers@@Base+0x18b8>
   2e848:	mov	w8, #0xc                   	// #12
   2e84c:	stur	w8, [x29, #-4]
   2e850:	b	2e8cc <rpl_re_set_registers@@Base+0x1930>
   2e854:	ldr	x8, [sp, #16]
   2e858:	ldur	x9, [x29, #-16]
   2e85c:	str	x8, [x9, #24]
   2e860:	ldur	x8, [x29, #-16]
   2e864:	ldrb	w9, [x8, #139]
   2e868:	cbz	w9, 2e8bc <rpl_re_set_registers@@Base+0x1920>
   2e86c:	ldur	x8, [x29, #-16]
   2e870:	ldr	x0, [x8, #8]
   2e874:	ldur	x8, [x29, #-24]
   2e878:	mov	x9, #0x1                   	// #1
   2e87c:	mul	x1, x8, x9
   2e880:	bl	af40 <realloc@plt>
   2e884:	str	x0, [sp, #8]
   2e888:	ldr	x8, [sp, #8]
   2e88c:	cmp	x8, #0x0
   2e890:	cset	w10, eq  // eq = none
   2e894:	and	w10, w10, #0x1
   2e898:	mov	w0, w10
   2e89c:	sxtw	x8, w0
   2e8a0:	cbz	x8, 2e8b0 <rpl_re_set_registers@@Base+0x1914>
   2e8a4:	mov	w8, #0xc                   	// #12
   2e8a8:	stur	w8, [x29, #-4]
   2e8ac:	b	2e8cc <rpl_re_set_registers@@Base+0x1930>
   2e8b0:	ldr	x8, [sp, #8]
   2e8b4:	ldur	x9, [x29, #-16]
   2e8b8:	str	x8, [x9, #8]
   2e8bc:	ldur	x8, [x29, #-24]
   2e8c0:	ldur	x9, [x29, #-16]
   2e8c4:	str	x8, [x9, #64]
   2e8c8:	stur	wzr, [x29, #-4]
   2e8cc:	ldur	w0, [x29, #-4]
   2e8d0:	ldp	x29, x30, [sp, #64]
   2e8d4:	add	sp, sp, #0x50
   2e8d8:	ret
   2e8dc:	sub	sp, sp, #0x130
   2e8e0:	stp	x29, x30, [sp, #272]
   2e8e4:	str	x28, [sp, #288]
   2e8e8:	add	x29, sp, #0x110
   2e8ec:	sub	x8, x29, #0x40
   2e8f0:	str	x0, [x8, #48]
   2e8f4:	ldr	x9, [x8, #48]
   2e8f8:	ldr	x9, [x9, #48]
   2e8fc:	str	x9, [x8, #24]
   2e900:	ldr	x9, [x8, #48]
   2e904:	ldr	x9, [x9, #64]
   2e908:	ldr	x10, [x8, #48]
   2e90c:	ldr	x10, [x10, #88]
   2e910:	cmp	x9, x10
   2e914:	str	x8, [sp, #56]
   2e918:	b.le	2e930 <rpl_re_set_registers@@Base+0x1994>
   2e91c:	ldr	x8, [sp, #56]
   2e920:	ldr	x9, [x8, #48]
   2e924:	ldr	x9, [x9, #88]
   2e928:	str	x9, [sp, #48]
   2e92c:	b	2e940 <rpl_re_set_registers@@Base+0x19a4>
   2e930:	ldr	x8, [sp, #56]
   2e934:	ldr	x9, [x8, #48]
   2e938:	ldr	x9, [x9, #64]
   2e93c:	str	x9, [sp, #48]
   2e940:	ldr	x8, [sp, #48]
   2e944:	ldr	x9, [sp, #56]
   2e948:	str	x8, [x9, #16]
   2e94c:	ldr	x8, [x9, #48]
   2e950:	ldrb	w10, [x8, #138]
   2e954:	cbnz	w10, 2ed20 <rpl_re_set_registers@@Base+0x1d84>
   2e958:	ldr	x8, [sp, #56]
   2e95c:	ldr	x9, [x8, #48]
   2e960:	ldr	x9, [x9, #120]
   2e964:	cbnz	x9, 2ed20 <rpl_re_set_registers@@Base+0x1d84>
   2e968:	ldr	x8, [sp, #56]
   2e96c:	ldr	x9, [x8, #48]
   2e970:	ldrb	w10, [x9, #140]
   2e974:	cbnz	w10, 2ed20 <rpl_re_set_registers@@Base+0x1d84>
   2e978:	ldr	x8, [sp, #56]
   2e97c:	ldr	x9, [x8, #24]
   2e980:	ldr	x10, [x8, #16]
   2e984:	cmp	x9, x10
   2e988:	b.ge	2ecfc <rpl_re_set_registers@@Base+0x1d60>  // b.tcont
   2e98c:	ldr	x8, [sp, #56]
   2e990:	ldr	x9, [x8, #48]
   2e994:	ldr	x9, [x9]
   2e998:	ldr	x10, [x8, #48]
   2e99c:	ldr	x10, [x10, #40]
   2e9a0:	ldr	x11, [x8, #24]
   2e9a4:	add	x10, x10, x11
   2e9a8:	ldrb	w12, [x9, x10]
   2e9ac:	and	w12, w12, #0xffffff80
   2e9b0:	cbnz	w12, 2ea34 <rpl_re_set_registers@@Base+0x1a98>
   2e9b4:	ldr	x8, [sp, #56]
   2e9b8:	ldr	x9, [x8, #48]
   2e9bc:	add	x0, x9, #0x20
   2e9c0:	bl	b860 <mbsinit@plt>
   2e9c4:	cbz	w0, 2ea34 <rpl_re_set_registers@@Base+0x1a98>
   2e9c8:	ldr	x8, [sp, #56]
   2e9cc:	ldr	x9, [x8, #48]
   2e9d0:	ldr	x9, [x9]
   2e9d4:	ldr	x10, [x8, #48]
   2e9d8:	ldr	x10, [x10, #40]
   2e9dc:	ldr	x11, [x8, #24]
   2e9e0:	add	x10, x10, x11
   2e9e4:	ldrb	w0, [x9, x10]
   2e9e8:	bl	aad0 <toupper@plt>
   2e9ec:	ldr	x8, [sp, #56]
   2e9f0:	ldr	x9, [x8, #48]
   2e9f4:	ldr	x9, [x9, #8]
   2e9f8:	ldr	x10, [x8, #24]
   2e9fc:	add	x9, x9, x10
   2ea00:	strb	w0, [x9]
   2ea04:	ldr	x9, [x8, #48]
   2ea08:	ldr	x9, [x9, #8]
   2ea0c:	ldr	x10, [x8, #24]
   2ea10:	ldrb	w12, [x9, x10]
   2ea14:	ldr	x9, [x8, #48]
   2ea18:	ldr	x9, [x9, #16]
   2ea1c:	ldr	x10, [x8, #24]
   2ea20:	str	w12, [x9, x10, lsl #2]
   2ea24:	ldr	x9, [x8, #24]
   2ea28:	add	x9, x9, #0x1
   2ea2c:	str	x9, [x8, #24]
   2ea30:	b	2e978 <rpl_re_set_registers@@Base+0x19dc>
   2ea34:	ldr	x8, [sp, #56]
   2ea38:	ldr	x9, [x8, #16]
   2ea3c:	ldr	x10, [x8, #24]
   2ea40:	subs	x9, x9, x10
   2ea44:	str	x9, [x8, #8]
   2ea48:	ldr	x9, [x8, #48]
   2ea4c:	ldr	x9, [x9, #32]
   2ea50:	str	x9, [x8, #40]
   2ea54:	ldr	x9, [x8, #48]
   2ea58:	ldr	x9, [x9]
   2ea5c:	ldr	x10, [x8, #48]
   2ea60:	ldr	x10, [x10, #40]
   2ea64:	add	x9, x9, x10
   2ea68:	ldr	x10, [x8, #24]
   2ea6c:	add	x1, x9, x10
   2ea70:	ldr	x2, [x8, #8]
   2ea74:	ldr	x9, [x8, #48]
   2ea78:	add	x3, x9, #0x20
   2ea7c:	sub	x0, x29, #0x84
   2ea80:	bl	b7e0 <rpl_mbrtowc@plt>
   2ea84:	ldr	x8, [sp, #56]
   2ea88:	str	x0, [x8]
   2ea8c:	ldr	x9, [x8]
   2ea90:	mov	x10, xzr
   2ea94:	cmp	x10, x9
   2ea98:	cset	w11, cs  // cs = hs, nlast
   2ea9c:	mov	w12, #0x0                   	// #0
   2eaa0:	str	w12, [sp, #44]
   2eaa4:	tbnz	w11, #0, 2eac0 <rpl_re_set_registers@@Base+0x1b24>
   2eaa8:	ldr	x8, [sp, #56]
   2eaac:	ldr	x9, [x8]
   2eab0:	mov	x10, #0xfffffffffffffffe    	// #-2
   2eab4:	cmp	x9, x10
   2eab8:	cset	w11, cc  // cc = lo, ul, last
   2eabc:	str	w11, [sp, #44]
   2eac0:	ldr	w8, [sp, #44]
   2eac4:	and	w8, w8, #0x1
   2eac8:	mov	w0, w8
   2eacc:	sxtw	x9, w0
   2ead0:	cbz	x9, 2ec08 <rpl_re_set_registers@@Base+0x1c6c>
   2ead4:	ldur	w0, [x29, #-132]
   2ead8:	bl	b870 <towupper@plt>
   2eadc:	str	w0, [sp, #136]
   2eae0:	ldr	w8, [sp, #136]
   2eae4:	ldur	w9, [x29, #-132]
   2eae8:	cmp	w8, w9
   2eaec:	b.eq	2eb60 <rpl_re_set_registers@@Base+0x1bc4>  // b.none
   2eaf0:	ldr	w1, [sp, #136]
   2eaf4:	sub	x0, x29, #0x80
   2eaf8:	sub	x2, x29, #0x18
   2eafc:	bl	b800 <wcrtomb@plt>
   2eb00:	str	x0, [sp, #128]
   2eb04:	ldr	x8, [sp, #56]
   2eb08:	ldr	x9, [x8]
   2eb0c:	ldr	x10, [sp, #128]
   2eb10:	cmp	x9, x10
   2eb14:	cset	w11, eq  // eq = none
   2eb18:	and	w11, w11, #0x1
   2eb1c:	mov	w0, w11
   2eb20:	sxtw	x9, w0
   2eb24:	cbz	x9, 2eb4c <rpl_re_set_registers@@Base+0x1bb0>
   2eb28:	ldr	x8, [sp, #56]
   2eb2c:	ldr	x9, [x8, #48]
   2eb30:	ldr	x9, [x9, #8]
   2eb34:	ldr	x10, [x8, #24]
   2eb38:	add	x0, x9, x10
   2eb3c:	ldr	x2, [x8]
   2eb40:	sub	x1, x29, #0x80
   2eb44:	bl	af30 <memcpy@plt>
   2eb48:	b	2eb5c <rpl_re_set_registers@@Base+0x1bc0>
   2eb4c:	ldr	x8, [sp, #56]
   2eb50:	ldr	x9, [x8, #24]
   2eb54:	str	x9, [x8, #32]
   2eb58:	b	2ed44 <rpl_re_set_registers@@Base+0x1da8>
   2eb5c:	b	2eb98 <rpl_re_set_registers@@Base+0x1bfc>
   2eb60:	ldr	x8, [sp, #56]
   2eb64:	ldr	x9, [x8, #48]
   2eb68:	ldr	x9, [x9, #8]
   2eb6c:	ldr	x10, [x8, #24]
   2eb70:	add	x0, x9, x10
   2eb74:	ldr	x9, [x8, #48]
   2eb78:	ldr	x9, [x9]
   2eb7c:	ldr	x10, [x8, #48]
   2eb80:	ldr	x10, [x10, #40]
   2eb84:	add	x9, x9, x10
   2eb88:	ldr	x10, [x8, #24]
   2eb8c:	add	x1, x9, x10
   2eb90:	ldr	x2, [x8]
   2eb94:	bl	af30 <memcpy@plt>
   2eb98:	ldr	w8, [sp, #136]
   2eb9c:	ldr	x9, [sp, #56]
   2eba0:	ldr	x10, [x9, #48]
   2eba4:	ldr	x10, [x10, #16]
   2eba8:	ldr	x11, [x9, #24]
   2ebac:	add	x12, x11, #0x1
   2ebb0:	str	x12, [x9, #24]
   2ebb4:	str	w8, [x10, x11, lsl #2]
   2ebb8:	ldr	x10, [x9, #24]
   2ebbc:	ldr	x11, [x9]
   2ebc0:	add	x10, x10, x11
   2ebc4:	subs	x10, x10, #0x1
   2ebc8:	str	x10, [x9, #8]
   2ebcc:	ldr	x8, [sp, #56]
   2ebd0:	ldr	x9, [x8, #24]
   2ebd4:	ldr	x10, [x8, #8]
   2ebd8:	cmp	x9, x10
   2ebdc:	b.ge	2ec04 <rpl_re_set_registers@@Base+0x1c68>  // b.tcont
   2ebe0:	ldr	x8, [sp, #56]
   2ebe4:	ldr	x9, [x8, #48]
   2ebe8:	ldr	x9, [x9, #16]
   2ebec:	ldr	x10, [x8, #24]
   2ebf0:	add	x11, x10, #0x1
   2ebf4:	str	x11, [x8, #24]
   2ebf8:	mov	w12, #0xffffffff            	// #-1
   2ebfc:	str	w12, [x9, x10, lsl #2]
   2ec00:	b	2ebcc <rpl_re_set_registers@@Base+0x1c30>
   2ec04:	b	2ecf8 <rpl_re_set_registers@@Base+0x1d5c>
   2ec08:	ldr	x8, [sp, #56]
   2ec0c:	ldr	x9, [x8]
   2ec10:	mov	x10, #0xffffffffffffffff    	// #-1
   2ec14:	cmp	x9, x10
   2ec18:	b.eq	2ec58 <rpl_re_set_registers@@Base+0x1cbc>  // b.none
   2ec1c:	ldr	x8, [sp, #56]
   2ec20:	ldr	x9, [x8]
   2ec24:	cbz	x9, 2ec58 <rpl_re_set_registers@@Base+0x1cbc>
   2ec28:	ldr	x8, [sp, #56]
   2ec2c:	ldr	x9, [x8]
   2ec30:	mov	x10, #0xfffffffffffffffe    	// #-2
   2ec34:	cmp	x9, x10
   2ec38:	b.ne	2ece4 <rpl_re_set_registers@@Base+0x1d48>  // b.any
   2ec3c:	ldr	x8, [sp, #56]
   2ec40:	ldr	x9, [x8, #48]
   2ec44:	ldr	x9, [x9, #64]
   2ec48:	ldr	x10, [x8, #48]
   2ec4c:	ldr	x10, [x10, #88]
   2ec50:	cmp	x9, x10
   2ec54:	b.lt	2ece4 <rpl_re_set_registers@@Base+0x1d48>  // b.tstop
   2ec58:	ldr	x8, [sp, #56]
   2ec5c:	ldr	x9, [x8, #48]
   2ec60:	ldr	x9, [x9]
   2ec64:	ldr	x10, [x8, #48]
   2ec68:	ldr	x10, [x10, #40]
   2ec6c:	ldr	x11, [x8, #24]
   2ec70:	add	x10, x10, x11
   2ec74:	ldrb	w12, [x9, x10]
   2ec78:	str	w12, [sp, #124]
   2ec7c:	ldr	w12, [sp, #124]
   2ec80:	ldr	x9, [x8, #48]
   2ec84:	ldr	x9, [x9, #8]
   2ec88:	ldr	x10, [x8, #24]
   2ec8c:	add	x9, x9, x10
   2ec90:	strb	w12, [x9]
   2ec94:	ldr	w12, [sp, #124]
   2ec98:	ldr	x9, [x8, #48]
   2ec9c:	ldr	x9, [x9, #16]
   2eca0:	ldr	x10, [x8, #24]
   2eca4:	add	x11, x10, #0x1
   2eca8:	str	x11, [x8, #24]
   2ecac:	str	w12, [x9, x10, lsl #2]
   2ecb0:	ldr	x9, [x8]
   2ecb4:	mov	x10, #0xffffffffffffffff    	// #-1
   2ecb8:	cmp	x9, x10
   2ecbc:	cset	w12, eq  // eq = none
   2ecc0:	and	w12, w12, #0x1
   2ecc4:	mov	w0, w12
   2ecc8:	sxtw	x9, w0
   2eccc:	cbz	x9, 2ece0 <rpl_re_set_registers@@Base+0x1d44>
   2ecd0:	ldr	x8, [sp, #56]
   2ecd4:	ldr	x9, [x8, #48]
   2ecd8:	ldr	x10, [x8, #40]
   2ecdc:	str	x10, [x9, #32]
   2ece0:	b	2ecf8 <rpl_re_set_registers@@Base+0x1d5c>
   2ece4:	ldr	x8, [sp, #56]
   2ece8:	ldr	x9, [x8, #48]
   2ecec:	ldr	x10, [x8, #40]
   2ecf0:	str	x10, [x9, #32]
   2ecf4:	b	2ecfc <rpl_re_set_registers@@Base+0x1d60>
   2ecf8:	b	2e978 <rpl_re_set_registers@@Base+0x19dc>
   2ecfc:	ldr	x8, [sp, #56]
   2ed00:	ldr	x9, [x8, #24]
   2ed04:	ldr	x10, [x8, #48]
   2ed08:	str	x9, [x10, #48]
   2ed0c:	ldr	x9, [x8, #24]
   2ed10:	ldr	x10, [x8, #48]
   2ed14:	str	x9, [x10, #56]
   2ed18:	stur	wzr, [x29, #-4]
   2ed1c:	b	2f4b4 <rpl_re_set_registers@@Base+0x2518>
   2ed20:	ldr	x8, [sp, #56]
   2ed24:	ldr	x9, [x8, #48]
   2ed28:	ldr	x9, [x9, #56]
   2ed2c:	str	x9, [x8, #32]
   2ed30:	ldr	x8, [sp, #56]
   2ed34:	ldr	x9, [x8, #24]
   2ed38:	ldr	x10, [x8, #16]
   2ed3c:	cmp	x9, x10
   2ed40:	b.ge	2f494 <rpl_re_set_registers@@Base+0x24f8>  // b.tcont
   2ed44:	ldr	x8, [sp, #56]
   2ed48:	ldr	x9, [x8, #16]
   2ed4c:	ldr	x10, [x8, #24]
   2ed50:	subs	x9, x9, x10
   2ed54:	str	x9, [x8, #8]
   2ed58:	ldr	x9, [x8, #48]
   2ed5c:	ldr	x9, [x9, #32]
   2ed60:	str	x9, [x8, #40]
   2ed64:	ldr	x9, [x8, #48]
   2ed68:	ldr	x9, [x9, #120]
   2ed6c:	cmp	x9, #0x0
   2ed70:	cset	w11, ne  // ne = any
   2ed74:	and	w11, w11, #0x1
   2ed78:	mov	w0, w11
   2ed7c:	sxtw	x9, w0
   2ed80:	cbz	x9, 2ee38 <rpl_re_set_registers@@Base+0x1e9c>
   2ed84:	str	wzr, [sp, #108]
   2ed88:	ldr	w8, [sp, #108]
   2ed8c:	ldr	x9, [sp, #56]
   2ed90:	ldr	x10, [x9, #48]
   2ed94:	ldr	w11, [x10, #144]
   2ed98:	mov	w12, #0x0                   	// #0
   2ed9c:	cmp	w8, w11
   2eda0:	str	w12, [sp, #40]
   2eda4:	b.ge	2edc0 <rpl_re_set_registers@@Base+0x1e24>  // b.tcont
   2eda8:	ldrsw	x8, [sp, #108]
   2edac:	ldr	x9, [sp, #56]
   2edb0:	ldr	x10, [x9, #8]
   2edb4:	cmp	x8, x10
   2edb8:	cset	w11, lt  // lt = tstop
   2edbc:	str	w11, [sp, #40]
   2edc0:	ldr	w8, [sp, #40]
   2edc4:	tbnz	w8, #0, 2edcc <rpl_re_set_registers@@Base+0x1e30>
   2edc8:	b	2ee2c <rpl_re_set_registers@@Base+0x1e90>
   2edcc:	ldr	x8, [sp, #56]
   2edd0:	ldr	x9, [x8, #48]
   2edd4:	ldr	x9, [x9]
   2edd8:	ldr	x10, [x8, #48]
   2eddc:	ldr	x10, [x10, #40]
   2ede0:	ldr	x11, [x8, #32]
   2ede4:	add	x10, x10, x11
   2ede8:	ldrsw	x11, [sp, #108]
   2edec:	add	x10, x10, x11
   2edf0:	ldrb	w12, [x9, x10]
   2edf4:	str	w12, [sp, #104]
   2edf8:	ldr	x9, [x8, #48]
   2edfc:	ldr	x9, [x9, #120]
   2ee00:	ldrsw	x10, [sp, #104]
   2ee04:	add	x9, x9, x10
   2ee08:	ldrb	w12, [x9]
   2ee0c:	ldrsw	x9, [sp, #108]
   2ee10:	sub	x10, x29, #0x80
   2ee14:	add	x9, x10, x9
   2ee18:	strb	w12, [x9]
   2ee1c:	ldr	w8, [sp, #108]
   2ee20:	add	w8, w8, #0x1
   2ee24:	str	w8, [sp, #108]
   2ee28:	b	2ed88 <rpl_re_set_registers@@Base+0x1dec>
   2ee2c:	sub	x8, x29, #0x80
   2ee30:	str	x8, [sp, #112]
   2ee34:	b	2ee5c <rpl_re_set_registers@@Base+0x1ec0>
   2ee38:	ldr	x8, [sp, #56]
   2ee3c:	ldr	x9, [x8, #48]
   2ee40:	ldr	x9, [x9]
   2ee44:	ldr	x10, [x8, #48]
   2ee48:	ldr	x10, [x10, #40]
   2ee4c:	add	x9, x9, x10
   2ee50:	ldr	x10, [x8, #32]
   2ee54:	add	x9, x9, x10
   2ee58:	str	x9, [sp, #112]
   2ee5c:	ldr	x1, [sp, #112]
   2ee60:	ldr	x8, [sp, #56]
   2ee64:	ldr	x2, [x8, #8]
   2ee68:	ldr	x9, [x8, #48]
   2ee6c:	add	x3, x9, #0x20
   2ee70:	add	x0, sp, #0x78
   2ee74:	bl	b7e0 <rpl_mbrtowc@plt>
   2ee78:	ldr	x8, [sp, #56]
   2ee7c:	str	x0, [x8]
   2ee80:	ldr	x9, [x8]
   2ee84:	mov	x10, xzr
   2ee88:	cmp	x10, x9
   2ee8c:	cset	w11, cs  // cs = hs, nlast
   2ee90:	mov	w12, #0x0                   	// #0
   2ee94:	str	w12, [sp, #36]
   2ee98:	tbnz	w11, #0, 2eeb4 <rpl_re_set_registers@@Base+0x1f18>
   2ee9c:	ldr	x8, [sp, #56]
   2eea0:	ldr	x9, [x8]
   2eea4:	mov	x10, #0xfffffffffffffffe    	// #-2
   2eea8:	cmp	x9, x10
   2eeac:	cset	w11, cc  // cc = lo, ul, last
   2eeb0:	str	w11, [sp, #36]
   2eeb4:	ldr	w8, [sp, #36]
   2eeb8:	and	w8, w8, #0x1
   2eebc:	mov	w0, w8
   2eec0:	sxtw	x9, w0
   2eec4:	cbz	x9, 2f31c <rpl_re_set_registers@@Base+0x2380>
   2eec8:	ldr	w0, [sp, #120]
   2eecc:	bl	b870 <towupper@plt>
   2eed0:	str	w0, [sp, #100]
   2eed4:	ldr	w8, [sp, #100]
   2eed8:	ldr	w9, [sp, #120]
   2eedc:	cmp	w8, w9
   2eee0:	b.eq	2f208 <rpl_re_set_registers@@Base+0x226c>  // b.none
   2eee4:	ldr	w1, [sp, #100]
   2eee8:	sub	x0, x29, #0x80
   2eeec:	sub	x2, x29, #0x18
   2eef0:	bl	b800 <wcrtomb@plt>
   2eef4:	str	x0, [sp, #88]
   2eef8:	ldr	x8, [sp, #56]
   2eefc:	ldr	x9, [x8]
   2ef00:	ldr	x10, [sp, #88]
   2ef04:	cmp	x9, x10
   2ef08:	cset	w11, eq  // eq = none
   2ef0c:	and	w11, w11, #0x1
   2ef10:	mov	w0, w11
   2ef14:	sxtw	x9, w0
   2ef18:	cbz	x9, 2ef40 <rpl_re_set_registers@@Base+0x1fa4>
   2ef1c:	ldr	x8, [sp, #56]
   2ef20:	ldr	x9, [x8, #48]
   2ef24:	ldr	x9, [x9, #8]
   2ef28:	ldr	x10, [x8, #24]
   2ef2c:	add	x0, x9, x10
   2ef30:	ldr	x2, [x8]
   2ef34:	sub	x1, x29, #0x80
   2ef38:	bl	af30 <memcpy@plt>
   2ef3c:	b	2f204 <rpl_re_set_registers@@Base+0x2268>
   2ef40:	ldr	x8, [sp, #88]
   2ef44:	mov	x9, #0xffffffffffffffff    	// #-1
   2ef48:	cmp	x8, x9
   2ef4c:	b.eq	2f1e4 <rpl_re_set_registers@@Base+0x2248>  // b.none
   2ef50:	ldr	x8, [sp, #56]
   2ef54:	ldr	x9, [x8, #24]
   2ef58:	ldr	x10, [sp, #88]
   2ef5c:	add	x9, x9, x10
   2ef60:	ldr	x10, [x8, #48]
   2ef64:	ldr	x10, [x10, #64]
   2ef68:	cmp	x9, x10
   2ef6c:	b.ls	2ef84 <rpl_re_set_registers@@Base+0x1fe8>  // b.plast
   2ef70:	ldr	x8, [sp, #56]
   2ef74:	ldr	x9, [x8, #48]
   2ef78:	ldr	x10, [x8, #40]
   2ef7c:	str	x10, [x9, #32]
   2ef80:	b	2f494 <rpl_re_set_registers@@Base+0x24f8>
   2ef84:	ldr	x8, [sp, #56]
   2ef88:	ldr	x9, [x8, #48]
   2ef8c:	ldr	x9, [x9, #24]
   2ef90:	cbnz	x9, 2efd0 <rpl_re_set_registers@@Base+0x2034>
   2ef94:	ldr	x8, [sp, #56]
   2ef98:	ldr	x9, [x8, #48]
   2ef9c:	ldr	x9, [x9, #64]
   2efa0:	mov	x10, #0x8                   	// #8
   2efa4:	mul	x0, x9, x10
   2efa8:	bl	af10 <malloc@plt>
   2efac:	ldr	x8, [sp, #56]
   2efb0:	ldr	x9, [x8, #48]
   2efb4:	str	x0, [x9, #24]
   2efb8:	ldr	x9, [x8, #48]
   2efbc:	ldr	x9, [x9, #24]
   2efc0:	cbnz	x9, 2efd0 <rpl_re_set_registers@@Base+0x2034>
   2efc4:	mov	w8, #0xc                   	// #12
   2efc8:	stur	w8, [x29, #-4]
   2efcc:	b	2f4b4 <rpl_re_set_registers@@Base+0x2518>
   2efd0:	ldr	x8, [sp, #56]
   2efd4:	ldr	x9, [x8, #48]
   2efd8:	ldrb	w10, [x9, #140]
   2efdc:	cbnz	w10, 2f030 <rpl_re_set_registers@@Base+0x2094>
   2efe0:	str	xzr, [sp, #80]
   2efe4:	ldr	x8, [sp, #80]
   2efe8:	ldr	x9, [sp, #56]
   2efec:	ldr	x10, [x9, #24]
   2eff0:	cmp	x8, x10
   2eff4:	b.cs	2f020 <rpl_re_set_registers@@Base+0x2084>  // b.hs, b.nlast
   2eff8:	ldr	x8, [sp, #80]
   2effc:	ldr	x9, [sp, #56]
   2f000:	ldr	x10, [x9, #48]
   2f004:	ldr	x10, [x10, #24]
   2f008:	ldr	x11, [sp, #80]
   2f00c:	str	x8, [x10, x11, lsl #3]
   2f010:	ldr	x8, [sp, #80]
   2f014:	add	x8, x8, #0x1
   2f018:	str	x8, [sp, #80]
   2f01c:	b	2efe4 <rpl_re_set_registers@@Base+0x2048>
   2f020:	ldr	x8, [sp, #56]
   2f024:	ldr	x9, [x8, #48]
   2f028:	mov	w10, #0x1                   	// #1
   2f02c:	strb	w10, [x9, #140]
   2f030:	ldr	x8, [sp, #56]
   2f034:	ldr	x9, [x8, #48]
   2f038:	ldr	x9, [x9, #8]
   2f03c:	ldr	x10, [x8, #24]
   2f040:	add	x0, x9, x10
   2f044:	ldr	x2, [sp, #88]
   2f048:	sub	x1, x29, #0x80
   2f04c:	bl	af30 <memcpy@plt>
   2f050:	ldr	w11, [sp, #100]
   2f054:	ldr	x8, [sp, #56]
   2f058:	ldr	x9, [x8, #48]
   2f05c:	ldr	x9, [x9, #16]
   2f060:	ldr	x10, [x8, #24]
   2f064:	str	w11, [x9, x10, lsl #2]
   2f068:	ldr	x9, [x8, #32]
   2f06c:	ldr	x10, [x8, #48]
   2f070:	ldr	x10, [x10, #24]
   2f074:	ldr	x12, [x8, #24]
   2f078:	str	x9, [x10, x12, lsl #3]
   2f07c:	mov	x9, #0x1                   	// #1
   2f080:	str	x9, [sp, #80]
   2f084:	ldr	x8, [sp, #80]
   2f088:	ldr	x9, [sp, #88]
   2f08c:	cmp	x8, x9
   2f090:	b.cs	2f120 <rpl_re_set_registers@@Base+0x2184>  // b.hs, b.nlast
   2f094:	ldr	x8, [sp, #56]
   2f098:	ldr	x9, [x8, #32]
   2f09c:	ldr	x10, [sp, #80]
   2f0a0:	ldr	x11, [x8]
   2f0a4:	cmp	x10, x11
   2f0a8:	str	x9, [sp, #24]
   2f0ac:	b.cs	2f0bc <rpl_re_set_registers@@Base+0x2120>  // b.hs, b.nlast
   2f0b0:	ldr	x8, [sp, #80]
   2f0b4:	str	x8, [sp, #16]
   2f0b8:	b	2f0cc <rpl_re_set_registers@@Base+0x2130>
   2f0bc:	ldr	x8, [sp, #56]
   2f0c0:	ldr	x9, [x8]
   2f0c4:	subs	x9, x9, #0x1
   2f0c8:	str	x9, [sp, #16]
   2f0cc:	ldr	x8, [sp, #16]
   2f0d0:	ldr	x9, [sp, #24]
   2f0d4:	add	x8, x9, x8
   2f0d8:	ldr	x10, [sp, #56]
   2f0dc:	ldr	x11, [x10, #48]
   2f0e0:	ldr	x11, [x11, #24]
   2f0e4:	ldr	x12, [x10, #24]
   2f0e8:	ldr	x13, [sp, #80]
   2f0ec:	add	x12, x12, x13
   2f0f0:	str	x8, [x11, x12, lsl #3]
   2f0f4:	ldr	x8, [x10, #48]
   2f0f8:	ldr	x8, [x8, #16]
   2f0fc:	ldr	x11, [x10, #24]
   2f100:	ldr	x12, [sp, #80]
   2f104:	add	x11, x11, x12
   2f108:	mov	w14, #0xffffffff            	// #-1
   2f10c:	str	w14, [x8, x11, lsl #2]
   2f110:	ldr	x8, [sp, #80]
   2f114:	add	x8, x8, #0x1
   2f118:	str	x8, [sp, #80]
   2f11c:	b	2f084 <rpl_re_set_registers@@Base+0x20e8>
   2f120:	ldr	x8, [sp, #88]
   2f124:	ldr	x9, [sp, #56]
   2f128:	ldr	x10, [x9]
   2f12c:	subs	x8, x8, x10
   2f130:	ldr	x10, [x9, #48]
   2f134:	ldr	x11, [x10, #88]
   2f138:	add	x8, x11, x8
   2f13c:	str	x8, [x10, #88]
   2f140:	ldr	x8, [x9, #48]
   2f144:	ldr	x8, [x8, #96]
   2f148:	ldr	x10, [x9, #32]
   2f14c:	cmp	x8, x10
   2f150:	b.le	2f174 <rpl_re_set_registers@@Base+0x21d8>
   2f154:	ldr	x8, [sp, #88]
   2f158:	ldr	x9, [sp, #56]
   2f15c:	ldr	x10, [x9]
   2f160:	subs	x8, x8, x10
   2f164:	ldr	x10, [x9, #48]
   2f168:	ldr	x11, [x10, #104]
   2f16c:	add	x8, x11, x8
   2f170:	str	x8, [x10, #104]
   2f174:	ldr	x8, [sp, #56]
   2f178:	ldr	x9, [x8, #48]
   2f17c:	ldr	x9, [x9, #64]
   2f180:	ldr	x10, [x8, #48]
   2f184:	ldr	x10, [x10, #88]
   2f188:	cmp	x9, x10
   2f18c:	b.le	2f1a4 <rpl_re_set_registers@@Base+0x2208>
   2f190:	ldr	x8, [sp, #56]
   2f194:	ldr	x9, [x8, #48]
   2f198:	ldr	x9, [x9, #88]
   2f19c:	str	x9, [sp, #8]
   2f1a0:	b	2f1b4 <rpl_re_set_registers@@Base+0x2218>
   2f1a4:	ldr	x8, [sp, #56]
   2f1a8:	ldr	x9, [x8, #48]
   2f1ac:	ldr	x9, [x9, #64]
   2f1b0:	str	x9, [sp, #8]
   2f1b4:	ldr	x8, [sp, #8]
   2f1b8:	ldr	x9, [sp, #56]
   2f1bc:	str	x8, [x9, #16]
   2f1c0:	ldr	x8, [sp, #88]
   2f1c4:	ldr	x10, [x9, #24]
   2f1c8:	add	x8, x10, x8
   2f1cc:	str	x8, [x9, #24]
   2f1d0:	ldr	x8, [x9]
   2f1d4:	ldr	x10, [x9, #32]
   2f1d8:	add	x8, x10, x8
   2f1dc:	str	x8, [x9, #32]
   2f1e0:	b	2ed30 <rpl_re_set_registers@@Base+0x1d94>
   2f1e4:	ldr	x8, [sp, #56]
   2f1e8:	ldr	x9, [x8, #48]
   2f1ec:	ldr	x9, [x9, #8]
   2f1f0:	ldr	x10, [x8, #24]
   2f1f4:	add	x0, x9, x10
   2f1f8:	ldr	x1, [sp, #112]
   2f1fc:	ldr	x2, [x8]
   2f200:	bl	af30 <memcpy@plt>
   2f204:	b	2f228 <rpl_re_set_registers@@Base+0x228c>
   2f208:	ldr	x8, [sp, #56]
   2f20c:	ldr	x9, [x8, #48]
   2f210:	ldr	x9, [x9, #8]
   2f214:	ldr	x10, [x8, #24]
   2f218:	add	x0, x9, x10
   2f21c:	ldr	x1, [sp, #112]
   2f220:	ldr	x2, [x8]
   2f224:	bl	af30 <memcpy@plt>
   2f228:	ldr	x8, [sp, #56]
   2f22c:	ldr	x9, [x8, #48]
   2f230:	ldrb	w10, [x9, #140]
   2f234:	cmp	w10, #0x0
   2f238:	cset	w10, ne  // ne = any
   2f23c:	and	w10, w10, #0x1
   2f240:	mov	w0, w10
   2f244:	sxtw	x9, w0
   2f248:	cbz	x9, 2f29c <rpl_re_set_registers@@Base+0x2300>
   2f24c:	str	xzr, [sp, #72]
   2f250:	ldr	x8, [sp, #72]
   2f254:	ldr	x9, [sp, #56]
   2f258:	ldr	x10, [x9]
   2f25c:	cmp	x8, x10
   2f260:	b.cs	2f29c <rpl_re_set_registers@@Base+0x2300>  // b.hs, b.nlast
   2f264:	ldr	x8, [sp, #56]
   2f268:	ldr	x9, [x8, #32]
   2f26c:	ldr	x10, [sp, #72]
   2f270:	add	x9, x9, x10
   2f274:	ldr	x10, [x8, #48]
   2f278:	ldr	x10, [x10, #24]
   2f27c:	ldr	x11, [x8, #24]
   2f280:	ldr	x12, [sp, #72]
   2f284:	add	x11, x11, x12
   2f288:	str	x9, [x10, x11, lsl #3]
   2f28c:	ldr	x8, [sp, #72]
   2f290:	add	x8, x8, #0x1
   2f294:	str	x8, [sp, #72]
   2f298:	b	2f250 <rpl_re_set_registers@@Base+0x22b4>
   2f29c:	ldr	x8, [sp, #56]
   2f2a0:	ldr	x9, [x8]
   2f2a4:	ldr	x10, [x8, #32]
   2f2a8:	add	x9, x10, x9
   2f2ac:	str	x9, [x8, #32]
   2f2b0:	ldr	w11, [sp, #100]
   2f2b4:	ldr	x9, [x8, #48]
   2f2b8:	ldr	x9, [x9, #16]
   2f2bc:	ldr	x10, [x8, #24]
   2f2c0:	add	x12, x10, #0x1
   2f2c4:	str	x12, [x8, #24]
   2f2c8:	str	w11, [x9, x10, lsl #2]
   2f2cc:	ldr	x9, [x8, #24]
   2f2d0:	ldr	x10, [x8]
   2f2d4:	add	x9, x9, x10
   2f2d8:	subs	x9, x9, #0x1
   2f2dc:	str	x9, [x8, #8]
   2f2e0:	ldr	x8, [sp, #56]
   2f2e4:	ldr	x9, [x8, #24]
   2f2e8:	ldr	x10, [x8, #8]
   2f2ec:	cmp	x9, x10
   2f2f0:	b.ge	2f318 <rpl_re_set_registers@@Base+0x237c>  // b.tcont
   2f2f4:	ldr	x8, [sp, #56]
   2f2f8:	ldr	x9, [x8, #48]
   2f2fc:	ldr	x9, [x9, #16]
   2f300:	ldr	x10, [x8, #24]
   2f304:	add	x11, x10, #0x1
   2f308:	str	x11, [x8, #24]
   2f30c:	mov	w12, #0xffffffff            	// #-1
   2f310:	str	w12, [x9, x10, lsl #2]
   2f314:	b	2f2e0 <rpl_re_set_registers@@Base+0x2344>
   2f318:	b	2f490 <rpl_re_set_registers@@Base+0x24f4>
   2f31c:	ldr	x8, [sp, #56]
   2f320:	ldr	x9, [x8]
   2f324:	mov	x10, #0xffffffffffffffff    	// #-1
   2f328:	cmp	x9, x10
   2f32c:	b.eq	2f36c <rpl_re_set_registers@@Base+0x23d0>  // b.none
   2f330:	ldr	x8, [sp, #56]
   2f334:	ldr	x9, [x8]
   2f338:	cbz	x9, 2f36c <rpl_re_set_registers@@Base+0x23d0>
   2f33c:	ldr	x8, [sp, #56]
   2f340:	ldr	x9, [x8]
   2f344:	mov	x10, #0xfffffffffffffffe    	// #-2
   2f348:	cmp	x9, x10
   2f34c:	b.ne	2f47c <rpl_re_set_registers@@Base+0x24e0>  // b.any
   2f350:	ldr	x8, [sp, #56]
   2f354:	ldr	x9, [x8, #48]
   2f358:	ldr	x9, [x9, #64]
   2f35c:	ldr	x10, [x8, #48]
   2f360:	ldr	x10, [x10, #88]
   2f364:	cmp	x9, x10
   2f368:	b.lt	2f47c <rpl_re_set_registers@@Base+0x24e0>  // b.tstop
   2f36c:	ldr	x8, [sp, #56]
   2f370:	ldr	x9, [x8, #48]
   2f374:	ldr	x9, [x9]
   2f378:	ldr	x10, [x8, #48]
   2f37c:	ldr	x10, [x10, #40]
   2f380:	ldr	x11, [x8, #32]
   2f384:	add	x10, x10, x11
   2f388:	ldrb	w12, [x9, x10]
   2f38c:	str	w12, [sp, #68]
   2f390:	ldr	x9, [x8, #48]
   2f394:	ldr	x9, [x9, #120]
   2f398:	cmp	x9, #0x0
   2f39c:	cset	w12, ne  // ne = any
   2f3a0:	and	w12, w12, #0x1
   2f3a4:	mov	w0, w12
   2f3a8:	sxtw	x9, w0
   2f3ac:	cbz	x9, 2f3c8 <rpl_re_set_registers@@Base+0x242c>
   2f3b0:	ldr	x8, [sp, #56]
   2f3b4:	ldr	x9, [x8, #48]
   2f3b8:	ldr	x9, [x9, #120]
   2f3bc:	ldrsw	x10, [sp, #68]
   2f3c0:	ldrb	w11, [x9, x10]
   2f3c4:	str	w11, [sp, #68]
   2f3c8:	ldr	w8, [sp, #68]
   2f3cc:	ldr	x9, [sp, #56]
   2f3d0:	ldr	x10, [x9, #48]
   2f3d4:	ldr	x10, [x10, #8]
   2f3d8:	ldr	x11, [x9, #24]
   2f3dc:	add	x10, x10, x11
   2f3e0:	strb	w8, [x10]
   2f3e4:	ldr	x10, [x9, #48]
   2f3e8:	ldrb	w8, [x10, #140]
   2f3ec:	cmp	w8, #0x0
   2f3f0:	cset	w8, ne  // ne = any
   2f3f4:	and	w8, w8, #0x1
   2f3f8:	mov	w0, w8
   2f3fc:	sxtw	x10, w0
   2f400:	cbz	x10, 2f41c <rpl_re_set_registers@@Base+0x2480>
   2f404:	ldr	x8, [sp, #56]
   2f408:	ldr	x9, [x8, #32]
   2f40c:	ldr	x10, [x8, #48]
   2f410:	ldr	x10, [x10, #24]
   2f414:	ldr	x11, [x8, #24]
   2f418:	str	x9, [x10, x11, lsl #3]
   2f41c:	ldr	x8, [sp, #56]
   2f420:	ldr	x9, [x8, #32]
   2f424:	add	x9, x9, #0x1
   2f428:	str	x9, [x8, #32]
   2f42c:	ldr	w10, [sp, #68]
   2f430:	ldr	x9, [x8, #48]
   2f434:	ldr	x9, [x9, #16]
   2f438:	ldr	x11, [x8, #24]
   2f43c:	add	x12, x11, #0x1
   2f440:	str	x12, [x8, #24]
   2f444:	str	w10, [x9, x11, lsl #2]
   2f448:	ldr	x9, [x8]
   2f44c:	mov	x11, #0xffffffffffffffff    	// #-1
   2f450:	cmp	x9, x11
   2f454:	cset	w10, eq  // eq = none
   2f458:	and	w10, w10, #0x1
   2f45c:	mov	w0, w10
   2f460:	sxtw	x9, w0
   2f464:	cbz	x9, 2f478 <rpl_re_set_registers@@Base+0x24dc>
   2f468:	ldr	x8, [sp, #56]
   2f46c:	ldr	x9, [x8, #48]
   2f470:	ldr	x10, [x8, #40]
   2f474:	str	x10, [x9, #32]
   2f478:	b	2f490 <rpl_re_set_registers@@Base+0x24f4>
   2f47c:	ldr	x8, [sp, #56]
   2f480:	ldr	x9, [x8, #48]
   2f484:	ldr	x10, [x8, #40]
   2f488:	str	x10, [x9, #32]
   2f48c:	b	2f494 <rpl_re_set_registers@@Base+0x24f8>
   2f490:	b	2ed30 <rpl_re_set_registers@@Base+0x1d94>
   2f494:	ldr	x8, [sp, #56]
   2f498:	ldr	x9, [x8, #24]
   2f49c:	ldr	x10, [x8, #48]
   2f4a0:	str	x9, [x10, #48]
   2f4a4:	ldr	x9, [x8, #32]
   2f4a8:	ldr	x10, [x8, #48]
   2f4ac:	str	x9, [x10, #56]
   2f4b0:	stur	wzr, [x29, #-4]
   2f4b4:	ldur	w0, [x29, #-4]
   2f4b8:	ldr	x28, [sp, #288]
   2f4bc:	ldp	x29, x30, [sp, #272]
   2f4c0:	add	sp, sp, #0x130
   2f4c4:	ret
   2f4c8:	sub	sp, sp, #0x40
   2f4cc:	stp	x29, x30, [sp, #48]
   2f4d0:	add	x29, sp, #0x30
   2f4d4:	stur	x0, [x29, #-8]
   2f4d8:	ldur	x8, [x29, #-8]
   2f4dc:	ldr	x8, [x8, #64]
   2f4e0:	ldur	x9, [x29, #-8]
   2f4e4:	ldr	x9, [x9, #88]
   2f4e8:	cmp	x8, x9
   2f4ec:	b.le	2f500 <rpl_re_set_registers@@Base+0x2564>
   2f4f0:	ldur	x8, [x29, #-8]
   2f4f4:	ldr	x8, [x8, #88]
   2f4f8:	str	x8, [sp, #8]
   2f4fc:	b	2f50c <rpl_re_set_registers@@Base+0x2570>
   2f500:	ldur	x8, [x29, #-8]
   2f504:	ldr	x8, [x8, #64]
   2f508:	str	x8, [sp, #8]
   2f50c:	ldr	x8, [sp, #8]
   2f510:	str	x8, [sp, #24]
   2f514:	ldur	x8, [x29, #-8]
   2f518:	ldr	x8, [x8, #48]
   2f51c:	stur	x8, [x29, #-16]
   2f520:	ldur	x8, [x29, #-16]
   2f524:	ldr	x9, [sp, #24]
   2f528:	cmp	x8, x9
   2f52c:	b.ge	2f5b0 <rpl_re_set_registers@@Base+0x2614>  // b.tcont
   2f530:	ldur	x8, [x29, #-8]
   2f534:	ldr	x8, [x8]
   2f538:	ldur	x9, [x29, #-8]
   2f53c:	ldr	x9, [x9, #40]
   2f540:	ldur	x10, [x29, #-16]
   2f544:	add	x9, x9, x10
   2f548:	ldrb	w11, [x8, x9]
   2f54c:	str	w11, [sp, #20]
   2f550:	ldur	x8, [x29, #-8]
   2f554:	ldr	x8, [x8, #120]
   2f558:	cmp	x8, #0x0
   2f55c:	cset	w11, ne  // ne = any
   2f560:	and	w11, w11, #0x1
   2f564:	mov	w0, w11
   2f568:	sxtw	x8, w0
   2f56c:	cbz	x8, 2f584 <rpl_re_set_registers@@Base+0x25e8>
   2f570:	ldur	x8, [x29, #-8]
   2f574:	ldr	x8, [x8, #120]
   2f578:	ldrsw	x9, [sp, #20]
   2f57c:	ldrb	w10, [x8, x9]
   2f580:	str	w10, [sp, #20]
   2f584:	ldr	w0, [sp, #20]
   2f588:	bl	aad0 <toupper@plt>
   2f58c:	ldur	x8, [x29, #-8]
   2f590:	ldr	x8, [x8, #8]
   2f594:	ldur	x9, [x29, #-16]
   2f598:	add	x8, x8, x9
   2f59c:	strb	w0, [x8]
   2f5a0:	ldur	x8, [x29, #-16]
   2f5a4:	add	x8, x8, #0x1
   2f5a8:	stur	x8, [x29, #-16]
   2f5ac:	b	2f520 <rpl_re_set_registers@@Base+0x2584>
   2f5b0:	ldur	x8, [x29, #-16]
   2f5b4:	ldur	x9, [x29, #-8]
   2f5b8:	str	x8, [x9, #48]
   2f5bc:	ldur	x8, [x29, #-16]
   2f5c0:	ldur	x9, [x29, #-8]
   2f5c4:	str	x8, [x9, #56]
   2f5c8:	ldp	x29, x30, [sp, #48]
   2f5cc:	add	sp, sp, #0x40
   2f5d0:	ret
   2f5d4:	sub	sp, sp, #0xb0
   2f5d8:	stp	x29, x30, [sp, #160]
   2f5dc:	add	x29, sp, #0xa0
   2f5e0:	stur	x0, [x29, #-8]
   2f5e4:	ldur	x8, [x29, #-8]
   2f5e8:	ldr	x8, [x8, #64]
   2f5ec:	ldur	x9, [x29, #-8]
   2f5f0:	ldr	x9, [x9, #88]
   2f5f4:	cmp	x8, x9
   2f5f8:	b.le	2f60c <rpl_re_set_registers@@Base+0x2670>
   2f5fc:	ldur	x8, [x29, #-8]
   2f600:	ldr	x8, [x8, #88]
   2f604:	str	x8, [sp, #16]
   2f608:	b	2f618 <rpl_re_set_registers@@Base+0x267c>
   2f60c:	ldur	x8, [x29, #-8]
   2f610:	ldr	x8, [x8, #64]
   2f614:	str	x8, [sp, #16]
   2f618:	ldr	x8, [sp, #16]
   2f61c:	str	x8, [sp, #64]
   2f620:	ldur	x8, [x29, #-8]
   2f624:	ldr	x8, [x8, #48]
   2f628:	str	x8, [sp, #72]
   2f62c:	ldr	x8, [sp, #72]
   2f630:	ldr	x9, [sp, #64]
   2f634:	cmp	x8, x9
   2f638:	b.ge	2f8f4 <rpl_re_set_registers@@Base+0x2958>  // b.tcont
   2f63c:	ldr	x8, [sp, #64]
   2f640:	ldr	x9, [sp, #72]
   2f644:	subs	x8, x8, x9
   2f648:	str	x8, [sp, #56]
   2f64c:	ldur	x8, [x29, #-8]
   2f650:	ldr	x8, [x8, #32]
   2f654:	str	x8, [sp, #80]
   2f658:	ldur	x8, [x29, #-8]
   2f65c:	ldr	x8, [x8, #120]
   2f660:	cmp	x8, #0x0
   2f664:	cset	w10, ne  // ne = any
   2f668:	and	w10, w10, #0x1
   2f66c:	mov	w0, w10
   2f670:	sxtw	x8, w0
   2f674:	cbz	x8, 2f73c <rpl_re_set_registers@@Base+0x27a0>
   2f678:	str	wzr, [sp, #28]
   2f67c:	ldr	w8, [sp, #28]
   2f680:	ldur	x9, [x29, #-8]
   2f684:	ldr	w10, [x9, #144]
   2f688:	mov	w11, #0x0                   	// #0
   2f68c:	cmp	w8, w10
   2f690:	str	w11, [sp, #12]
   2f694:	b.ge	2f6ac <rpl_re_set_registers@@Base+0x2710>  // b.tcont
   2f698:	ldrsw	x8, [sp, #28]
   2f69c:	ldr	x9, [sp, #56]
   2f6a0:	cmp	x8, x9
   2f6a4:	cset	w10, lt  // lt = tstop
   2f6a8:	str	w10, [sp, #12]
   2f6ac:	ldr	w8, [sp, #12]
   2f6b0:	tbnz	w8, #0, 2f6b8 <rpl_re_set_registers@@Base+0x271c>
   2f6b4:	b	2f730 <rpl_re_set_registers@@Base+0x2794>
   2f6b8:	ldur	x8, [x29, #-8]
   2f6bc:	ldr	x8, [x8]
   2f6c0:	ldur	x9, [x29, #-8]
   2f6c4:	ldr	x9, [x9, #40]
   2f6c8:	ldr	x10, [sp, #72]
   2f6cc:	add	x9, x9, x10
   2f6d0:	ldrsw	x10, [sp, #28]
   2f6d4:	add	x9, x9, x10
   2f6d8:	ldrb	w11, [x8, x9]
   2f6dc:	str	w11, [sp, #24]
   2f6e0:	ldur	x8, [x29, #-8]
   2f6e4:	ldr	x8, [x8, #120]
   2f6e8:	ldrsw	x9, [sp, #24]
   2f6ec:	add	x8, x8, x9
   2f6f0:	ldrb	w11, [x8]
   2f6f4:	ldur	x8, [x29, #-8]
   2f6f8:	ldr	x8, [x8, #8]
   2f6fc:	ldr	x9, [sp, #72]
   2f700:	ldrsw	x10, [sp, #28]
   2f704:	add	x9, x9, x10
   2f708:	add	x8, x8, x9
   2f70c:	strb	w11, [x8]
   2f710:	ldrsw	x8, [sp, #28]
   2f714:	sub	x9, x29, #0x48
   2f718:	add	x8, x9, x8
   2f71c:	strb	w11, [x8]
   2f720:	ldr	w8, [sp, #28]
   2f724:	add	w8, w8, #0x1
   2f728:	str	w8, [sp, #28]
   2f72c:	b	2f67c <rpl_re_set_registers@@Base+0x26e0>
   2f730:	sub	x8, x29, #0x48
   2f734:	str	x8, [sp, #32]
   2f738:	b	2f75c <rpl_re_set_registers@@Base+0x27c0>
   2f73c:	ldur	x8, [x29, #-8]
   2f740:	ldr	x8, [x8]
   2f744:	ldur	x9, [x29, #-8]
   2f748:	ldr	x9, [x9, #40]
   2f74c:	add	x8, x8, x9
   2f750:	ldr	x9, [sp, #72]
   2f754:	add	x8, x8, x9
   2f758:	str	x8, [sp, #32]
   2f75c:	ldr	x1, [sp, #32]
   2f760:	ldr	x2, [sp, #56]
   2f764:	ldur	x8, [x29, #-8]
   2f768:	add	x3, x8, #0x20
   2f76c:	add	x0, sp, #0x2c
   2f770:	bl	b7e0 <rpl_mbrtowc@plt>
   2f774:	str	x0, [sp, #48]
   2f778:	ldr	x8, [sp, #48]
   2f77c:	mov	x9, #0xffffffffffffffff    	// #-1
   2f780:	mov	w10, #0x1                   	// #1
   2f784:	cmp	x8, x9
   2f788:	str	w10, [sp, #8]
   2f78c:	b.eq	2f7dc <rpl_re_set_registers@@Base+0x2840>  // b.none
   2f790:	ldr	x8, [sp, #48]
   2f794:	mov	w9, #0x1                   	// #1
   2f798:	str	w9, [sp, #8]
   2f79c:	cbz	x8, 2f7dc <rpl_re_set_registers@@Base+0x2840>
   2f7a0:	ldr	x8, [sp, #48]
   2f7a4:	mov	x9, #0xfffffffffffffffe    	// #-2
   2f7a8:	mov	w10, #0x0                   	// #0
   2f7ac:	cmp	x8, x9
   2f7b0:	str	w10, [sp, #4]
   2f7b4:	b.ne	2f7d4 <rpl_re_set_registers@@Base+0x2838>  // b.any
   2f7b8:	ldur	x8, [x29, #-8]
   2f7bc:	ldr	x8, [x8, #64]
   2f7c0:	ldur	x9, [x29, #-8]
   2f7c4:	ldr	x9, [x9, #88]
   2f7c8:	cmp	x8, x9
   2f7cc:	cset	w10, ge  // ge = tcont
   2f7d0:	str	w10, [sp, #4]
   2f7d4:	ldr	w8, [sp, #4]
   2f7d8:	str	w8, [sp, #8]
   2f7dc:	ldr	w8, [sp, #8]
   2f7e0:	and	w8, w8, #0x1
   2f7e4:	mov	w0, w8
   2f7e8:	sxtw	x9, w0
   2f7ec:	cbz	x9, 2f860 <rpl_re_set_registers@@Base+0x28c4>
   2f7f0:	mov	x8, #0x1                   	// #1
   2f7f4:	str	x8, [sp, #48]
   2f7f8:	ldur	x8, [x29, #-8]
   2f7fc:	ldr	x8, [x8]
   2f800:	ldur	x9, [x29, #-8]
   2f804:	ldr	x9, [x9, #40]
   2f808:	ldr	x10, [sp, #72]
   2f80c:	add	x9, x9, x10
   2f810:	ldrb	w11, [x8, x9]
   2f814:	str	w11, [sp, #44]
   2f818:	ldur	x8, [x29, #-8]
   2f81c:	ldr	x8, [x8, #120]
   2f820:	cmp	x8, #0x0
   2f824:	cset	w11, ne  // ne = any
   2f828:	and	w11, w11, #0x1
   2f82c:	mov	w0, w11
   2f830:	sxtw	x8, w0
   2f834:	cbz	x8, 2f850 <rpl_re_set_registers@@Base+0x28b4>
   2f838:	ldur	x8, [x29, #-8]
   2f83c:	ldr	x8, [x8, #120]
   2f840:	ldr	w9, [sp, #44]
   2f844:	mov	w10, w9
   2f848:	ldrb	w9, [x8, x10]
   2f84c:	str	w9, [sp, #44]
   2f850:	ldur	x8, [x29, #-8]
   2f854:	ldr	x9, [sp, #80]
   2f858:	str	x9, [x8, #32]
   2f85c:	b	2f890 <rpl_re_set_registers@@Base+0x28f4>
   2f860:	ldr	x8, [sp, #48]
   2f864:	mov	x9, #0xfffffffffffffffe    	// #-2
   2f868:	cmp	x8, x9
   2f86c:	cset	w10, eq  // eq = none
   2f870:	and	w10, w10, #0x1
   2f874:	mov	w0, w10
   2f878:	sxtw	x8, w0
   2f87c:	cbz	x8, 2f890 <rpl_re_set_registers@@Base+0x28f4>
   2f880:	ldur	x8, [x29, #-8]
   2f884:	ldr	x9, [sp, #80]
   2f888:	str	x9, [x8, #32]
   2f88c:	b	2f8f4 <rpl_re_set_registers@@Base+0x2958>
   2f890:	ldr	w8, [sp, #44]
   2f894:	ldur	x9, [x29, #-8]
   2f898:	ldr	x9, [x9, #16]
   2f89c:	ldr	x10, [sp, #72]
   2f8a0:	add	x11, x10, #0x1
   2f8a4:	str	x11, [sp, #72]
   2f8a8:	str	w8, [x9, x10, lsl #2]
   2f8ac:	ldr	x9, [sp, #72]
   2f8b0:	ldr	x10, [sp, #48]
   2f8b4:	add	x9, x9, x10
   2f8b8:	subs	x9, x9, #0x1
   2f8bc:	str	x9, [sp, #56]
   2f8c0:	ldr	x8, [sp, #72]
   2f8c4:	ldr	x9, [sp, #56]
   2f8c8:	cmp	x8, x9
   2f8cc:	b.ge	2f8f0 <rpl_re_set_registers@@Base+0x2954>  // b.tcont
   2f8d0:	ldur	x8, [x29, #-8]
   2f8d4:	ldr	x8, [x8, #16]
   2f8d8:	ldr	x9, [sp, #72]
   2f8dc:	add	x10, x9, #0x1
   2f8e0:	str	x10, [sp, #72]
   2f8e4:	mov	w11, #0xffffffff            	// #-1
   2f8e8:	str	w11, [x8, x9, lsl #2]
   2f8ec:	b	2f8c0 <rpl_re_set_registers@@Base+0x2924>
   2f8f0:	b	2f62c <rpl_re_set_registers@@Base+0x2690>
   2f8f4:	ldr	x8, [sp, #72]
   2f8f8:	ldur	x9, [x29, #-8]
   2f8fc:	str	x8, [x9, #48]
   2f900:	ldr	x8, [sp, #72]
   2f904:	ldur	x9, [x29, #-8]
   2f908:	str	x8, [x9, #56]
   2f90c:	ldp	x29, x30, [sp, #160]
   2f910:	add	sp, sp, #0xb0
   2f914:	ret
   2f918:	sub	sp, sp, #0x30
   2f91c:	str	x0, [sp, #40]
   2f920:	ldr	x8, [sp, #40]
   2f924:	ldr	x8, [x8, #64]
   2f928:	ldr	x9, [sp, #40]
   2f92c:	ldr	x9, [x9, #88]
   2f930:	cmp	x8, x9
   2f934:	b.le	2f948 <rpl_re_set_registers@@Base+0x29ac>
   2f938:	ldr	x8, [sp, #40]
   2f93c:	ldr	x8, [x8, #88]
   2f940:	str	x8, [sp, #8]
   2f944:	b	2f954 <rpl_re_set_registers@@Base+0x29b8>
   2f948:	ldr	x8, [sp, #40]
   2f94c:	ldr	x8, [x8, #64]
   2f950:	str	x8, [sp, #8]
   2f954:	ldr	x8, [sp, #8]
   2f958:	str	x8, [sp, #24]
   2f95c:	ldr	x8, [sp, #40]
   2f960:	ldr	x8, [x8, #48]
   2f964:	str	x8, [sp, #32]
   2f968:	ldr	x8, [sp, #32]
   2f96c:	ldr	x9, [sp, #24]
   2f970:	cmp	x8, x9
   2f974:	b.ge	2f9d0 <rpl_re_set_registers@@Base+0x2a34>  // b.tcont
   2f978:	ldr	x8, [sp, #40]
   2f97c:	ldr	x8, [x8]
   2f980:	ldr	x9, [sp, #40]
   2f984:	ldr	x9, [x9, #40]
   2f988:	ldr	x10, [sp, #32]
   2f98c:	add	x9, x9, x10
   2f990:	ldrb	w11, [x8, x9]
   2f994:	str	w11, [sp, #20]
   2f998:	ldr	x8, [sp, #40]
   2f99c:	ldr	x8, [x8, #120]
   2f9a0:	ldrsw	x9, [sp, #20]
   2f9a4:	add	x8, x8, x9
   2f9a8:	ldrb	w11, [x8]
   2f9ac:	ldr	x8, [sp, #40]
   2f9b0:	ldr	x8, [x8, #8]
   2f9b4:	ldr	x9, [sp, #32]
   2f9b8:	add	x8, x8, x9
   2f9bc:	strb	w11, [x8]
   2f9c0:	ldr	x8, [sp, #32]
   2f9c4:	add	x8, x8, #0x1
   2f9c8:	str	x8, [sp, #32]
   2f9cc:	b	2f968 <rpl_re_set_registers@@Base+0x29cc>
   2f9d0:	ldr	x8, [sp, #32]
   2f9d4:	ldr	x9, [sp, #40]
   2f9d8:	str	x8, [x9, #48]
   2f9dc:	ldr	x8, [sp, #32]
   2f9e0:	ldr	x9, [sp, #40]
   2f9e4:	str	x8, [x9, #56]
   2f9e8:	add	sp, sp, #0x30
   2f9ec:	ret
   2f9f0:	sub	sp, sp, #0x30
   2f9f4:	stp	x29, x30, [sp, #32]
   2f9f8:	add	x29, sp, #0x20
   2f9fc:	stur	x0, [x29, #-8]
   2fa00:	str	x1, [sp, #16]
   2fa04:	str	x2, [sp, #8]
   2fa08:	ldur	x0, [x29, #-8]
   2fa0c:	ldr	x1, [sp, #16]
   2fa10:	ldr	x2, [sp, #8]
   2fa14:	bl	2fcc4 <rpl_re_set_registers@@Base+0x2d28>
   2fa18:	ldr	x8, [sp, #16]
   2fa1c:	ldr	x9, [x8, #72]
   2fa20:	add	x9, x9, w0, sxtw
   2fa24:	str	x9, [x8, #72]
   2fa28:	ldp	x29, x30, [sp, #32]
   2fa2c:	add	sp, sp, #0x30
   2fa30:	ret
   2fa34:	sub	sp, sp, #0x80
   2fa38:	stp	x29, x30, [sp, #112]
   2fa3c:	add	x29, sp, #0x70
   2fa40:	mov	x8, xzr
   2fa44:	stur	x0, [x29, #-16]
   2fa48:	stur	x1, [x29, #-24]
   2fa4c:	stur	x2, [x29, #-32]
   2fa50:	stur	x3, [x29, #-40]
   2fa54:	stur	x4, [x29, #-48]
   2fa58:	str	x5, [sp, #56]
   2fa5c:	ldur	x9, [x29, #-24]
   2fa60:	ldr	x9, [x9]
   2fa64:	str	x9, [sp, #48]
   2fa68:	str	x8, [sp, #32]
   2fa6c:	ldr	x8, [sp, #48]
   2fa70:	ldr	x8, [x8, #168]
   2fa74:	str	x8, [sp, #24]
   2fa78:	ldur	x0, [x29, #-16]
   2fa7c:	ldur	x1, [x29, #-24]
   2fa80:	ldur	x2, [x29, #-32]
   2fa84:	ldur	x3, [x29, #-40]
   2fa88:	ldur	x4, [x29, #-48]
   2fa8c:	ldr	x5, [sp, #56]
   2fa90:	bl	308c4 <rpl_re_set_registers@@Base+0x3928>
   2fa94:	str	x0, [sp, #40]
   2fa98:	ldr	x8, [sp, #56]
   2fa9c:	ldr	w10, [x8]
   2faa0:	mov	w11, #0x0                   	// #0
   2faa4:	str	w11, [sp, #12]
   2faa8:	cbz	w10, 2fabc <rpl_re_set_registers@@Base+0x2b20>
   2faac:	ldr	x8, [sp, #40]
   2fab0:	cmp	x8, #0x0
   2fab4:	cset	w9, eq  // eq = none
   2fab8:	str	w9, [sp, #12]
   2fabc:	ldr	w8, [sp, #12]
   2fac0:	and	w8, w8, #0x1
   2fac4:	mov	w0, w8
   2fac8:	sxtw	x9, w0
   2facc:	cbz	x9, 2fadc <rpl_re_set_registers@@Base+0x2b40>
   2fad0:	mov	x8, xzr
   2fad4:	stur	x8, [x29, #-8]
   2fad8:	b	2fc5c <rpl_re_set_registers@@Base+0x2cc0>
   2fadc:	ldur	x8, [x29, #-32]
   2fae0:	ldr	w9, [x8, #8]
   2fae4:	and	w9, w9, #0xff
   2fae8:	cmp	w9, #0xa
   2faec:	b.ne	2fc54 <rpl_re_set_registers@@Base+0x2cb8>  // b.any
   2faf0:	ldur	x0, [x29, #-32]
   2faf4:	ldur	x1, [x29, #-16]
   2faf8:	ldur	x8, [x29, #-40]
   2fafc:	orr	x2, x8, #0x800000
   2fb00:	bl	2f9f0 <rpl_re_set_registers@@Base+0x2a54>
   2fb04:	ldur	x8, [x29, #-32]
   2fb08:	ldr	w9, [x8, #8]
   2fb0c:	and	w9, w9, #0xff
   2fb10:	cmp	w9, #0xa
   2fb14:	b.eq	2fbfc <rpl_re_set_registers@@Base+0x2c60>  // b.none
   2fb18:	ldur	x8, [x29, #-32]
   2fb1c:	ldr	w9, [x8, #8]
   2fb20:	and	w9, w9, #0xff
   2fb24:	cmp	w9, #0x2
   2fb28:	b.eq	2fbfc <rpl_re_set_registers@@Base+0x2c60>  // b.none
   2fb2c:	ldur	x8, [x29, #-48]
   2fb30:	cbz	x8, 2fb48 <rpl_re_set_registers@@Base+0x2bac>
   2fb34:	ldur	x8, [x29, #-32]
   2fb38:	ldr	w9, [x8, #8]
   2fb3c:	and	w9, w9, #0xff
   2fb40:	cmp	w9, #0x9
   2fb44:	b.eq	2fbfc <rpl_re_set_registers@@Base+0x2c60>  // b.none
   2fb48:	ldr	x8, [sp, #48]
   2fb4c:	ldr	x8, [x8, #168]
   2fb50:	str	x8, [sp, #16]
   2fb54:	ldr	x8, [sp, #24]
   2fb58:	ldr	x9, [sp, #48]
   2fb5c:	str	x8, [x9, #168]
   2fb60:	ldur	x0, [x29, #-16]
   2fb64:	ldur	x1, [x29, #-24]
   2fb68:	ldur	x2, [x29, #-32]
   2fb6c:	ldur	x3, [x29, #-40]
   2fb70:	ldur	x4, [x29, #-48]
   2fb74:	ldr	x5, [sp, #56]
   2fb78:	bl	308c4 <rpl_re_set_registers@@Base+0x3928>
   2fb7c:	str	x0, [sp, #32]
   2fb80:	ldr	x8, [sp, #56]
   2fb84:	ldr	w10, [x8]
   2fb88:	mov	w11, #0x0                   	// #0
   2fb8c:	str	w11, [sp, #8]
   2fb90:	cbz	w10, 2fba4 <rpl_re_set_registers@@Base+0x2c08>
   2fb94:	ldr	x8, [sp, #32]
   2fb98:	cmp	x8, #0x0
   2fb9c:	cset	w9, eq  // eq = none
   2fba0:	str	w9, [sp, #8]
   2fba4:	ldr	w8, [sp, #8]
   2fba8:	and	w8, w8, #0x1
   2fbac:	mov	w0, w8
   2fbb0:	sxtw	x9, w0
   2fbb4:	cbz	x9, 2fbe4 <rpl_re_set_registers@@Base+0x2c48>
   2fbb8:	ldr	x8, [sp, #40]
   2fbbc:	cbz	x8, 2fbd8 <rpl_re_set_registers@@Base+0x2c3c>
   2fbc0:	ldr	x0, [sp, #40]
   2fbc4:	adrp	x1, 30000 <rpl_re_set_registers@@Base+0x3064>
   2fbc8:	add	x1, x1, #0xc44
   2fbcc:	mov	x8, xzr
   2fbd0:	mov	x2, x8
   2fbd4:	bl	30b08 <rpl_re_set_registers@@Base+0x3b6c>
   2fbd8:	mov	x8, xzr
   2fbdc:	stur	x8, [x29, #-8]
   2fbe0:	b	2fc5c <rpl_re_set_registers@@Base+0x2cc0>
   2fbe4:	ldr	x8, [sp, #16]
   2fbe8:	ldr	x9, [sp, #48]
   2fbec:	ldr	x10, [x9, #168]
   2fbf0:	orr	x8, x10, x8
   2fbf4:	str	x8, [x9, #168]
   2fbf8:	b	2fc04 <rpl_re_set_registers@@Base+0x2c68>
   2fbfc:	mov	x8, xzr
   2fc00:	str	x8, [sp, #32]
   2fc04:	ldr	x0, [sp, #48]
   2fc08:	ldr	x1, [sp, #40]
   2fc0c:	ldr	x2, [sp, #32]
   2fc10:	mov	w3, #0xa                   	// #10
   2fc14:	bl	2fc6c <rpl_re_set_registers@@Base+0x2cd0>
   2fc18:	str	x0, [sp, #40]
   2fc1c:	ldr	x8, [sp, #40]
   2fc20:	cmp	x8, #0x0
   2fc24:	cset	w9, eq  // eq = none
   2fc28:	and	w9, w9, #0x1
   2fc2c:	mov	w0, w9
   2fc30:	sxtw	x8, w0
   2fc34:	cbz	x8, 2fc50 <rpl_re_set_registers@@Base+0x2cb4>
   2fc38:	ldr	x8, [sp, #56]
   2fc3c:	mov	w9, #0xc                   	// #12
   2fc40:	str	w9, [x8]
   2fc44:	mov	x8, xzr
   2fc48:	stur	x8, [x29, #-8]
   2fc4c:	b	2fc5c <rpl_re_set_registers@@Base+0x2cc0>
   2fc50:	b	2fadc <rpl_re_set_registers@@Base+0x2b40>
   2fc54:	ldr	x8, [sp, #40]
   2fc58:	stur	x8, [x29, #-8]
   2fc5c:	ldur	x0, [x29, #-8]
   2fc60:	ldp	x29, x30, [sp, #112]
   2fc64:	add	sp, sp, #0x80
   2fc68:	ret
   2fc6c:	sub	sp, sp, #0x40
   2fc70:	stp	x29, x30, [sp, #48]
   2fc74:	add	x29, sp, #0x30
   2fc78:	mov	x8, sp
   2fc7c:	stur	x0, [x29, #-8]
   2fc80:	stur	x1, [x29, #-16]
   2fc84:	str	x2, [sp, #24]
   2fc88:	str	w3, [sp, #20]
   2fc8c:	ldr	w9, [sp, #20]
   2fc90:	ldr	w10, [sp, #8]
   2fc94:	and	w9, w9, #0xff
   2fc98:	and	w10, w10, #0xffffff00
   2fc9c:	orr	w9, w10, w9
   2fca0:	str	w9, [sp, #8]
   2fca4:	ldur	x0, [x29, #-8]
   2fca8:	ldur	x1, [x29, #-16]
   2fcac:	ldr	x2, [sp, #24]
   2fcb0:	mov	x3, x8
   2fcb4:	bl	3165c <rpl_re_set_registers@@Base+0x46c0>
   2fcb8:	ldp	x29, x30, [sp, #48]
   2fcbc:	add	sp, sp, #0x40
   2fcc0:	ret
   2fcc4:	sub	sp, sp, #0x70
   2fcc8:	stp	x29, x30, [sp, #96]
   2fccc:	add	x29, sp, #0x60
   2fcd0:	stur	x0, [x29, #-16]
   2fcd4:	stur	x1, [x29, #-24]
   2fcd8:	stur	x2, [x29, #-32]
   2fcdc:	ldur	x8, [x29, #-24]
   2fce0:	ldr	x8, [x8, #104]
   2fce4:	ldur	x9, [x29, #-24]
   2fce8:	ldr	x9, [x9, #72]
   2fcec:	cmp	x8, x9
   2fcf0:	b.gt	2fd10 <rpl_re_set_registers@@Base+0x2d74>
   2fcf4:	ldur	x8, [x29, #-16]
   2fcf8:	ldr	w9, [x8, #8]
   2fcfc:	and	w9, w9, #0xffffff00
   2fd00:	orr	w9, w9, #0x2
   2fd04:	str	w9, [x8, #8]
   2fd08:	stur	wzr, [x29, #-4]
   2fd0c:	b	306ac <rpl_re_set_registers@@Base+0x3710>
   2fd10:	ldur	x8, [x29, #-24]
   2fd14:	ldr	x8, [x8, #8]
   2fd18:	ldur	x9, [x29, #-24]
   2fd1c:	ldr	x9, [x9, #72]
   2fd20:	add	x9, x9, #0x0
   2fd24:	add	x8, x8, x9
   2fd28:	ldrb	w10, [x8]
   2fd2c:	sturb	w10, [x29, #-33]
   2fd30:	ldurb	w10, [x29, #-33]
   2fd34:	ldur	x8, [x29, #-16]
   2fd38:	strb	w10, [x8]
   2fd3c:	ldur	x8, [x29, #-16]
   2fd40:	ldr	w10, [x8, #8]
   2fd44:	and	w10, w10, #0xffbfffff
   2fd48:	str	w10, [x8, #8]
   2fd4c:	ldur	x8, [x29, #-16]
   2fd50:	ldr	w10, [x8, #8]
   2fd54:	and	w10, w10, #0xffdfffff
   2fd58:	str	w10, [x8, #8]
   2fd5c:	ldur	x8, [x29, #-24]
   2fd60:	ldr	w10, [x8, #144]
   2fd64:	cmp	w10, #0x1
   2fd68:	b.le	2fdd8 <rpl_re_set_registers@@Base+0x2e3c>
   2fd6c:	ldur	x8, [x29, #-24]
   2fd70:	ldr	x8, [x8, #72]
   2fd74:	ldur	x9, [x29, #-24]
   2fd78:	ldr	x9, [x9, #48]
   2fd7c:	cmp	x8, x9
   2fd80:	b.eq	2fdd8 <rpl_re_set_registers@@Base+0x2e3c>  // b.none
   2fd84:	ldur	x8, [x29, #-24]
   2fd88:	ldr	x8, [x8, #16]
   2fd8c:	ldur	x9, [x29, #-24]
   2fd90:	ldr	x9, [x9, #72]
   2fd94:	ldr	w10, [x8, x9, lsl #2]
   2fd98:	mov	w11, #0xffffffff            	// #-1
   2fd9c:	cmp	w10, w11
   2fda0:	b.ne	2fdd8 <rpl_re_set_registers@@Base+0x2e3c>  // b.any
   2fda4:	ldur	x8, [x29, #-16]
   2fda8:	ldr	w9, [x8, #8]
   2fdac:	and	w9, w9, #0xffffff00
   2fdb0:	mov	w10, #0x1                   	// #1
   2fdb4:	orr	w9, w9, #0x1
   2fdb8:	str	w9, [x8, #8]
   2fdbc:	ldur	x8, [x29, #-16]
   2fdc0:	ldr	w9, [x8, #8]
   2fdc4:	and	w9, w9, #0xffdfffff
   2fdc8:	orr	w9, w9, #0x200000
   2fdcc:	str	w9, [x8, #8]
   2fdd0:	stur	w10, [x29, #-4]
   2fdd4:	b	306ac <rpl_re_set_registers@@Base+0x3710>
   2fdd8:	ldurb	w8, [x29, #-33]
   2fddc:	cmp	w8, #0x5c
   2fde0:	b.ne	302a8 <rpl_re_set_registers@@Base+0x330c>  // b.any
   2fde4:	ldur	x8, [x29, #-24]
   2fde8:	ldr	x8, [x8, #72]
   2fdec:	add	x8, x8, #0x1
   2fdf0:	ldur	x9, [x29, #-24]
   2fdf4:	ldr	x9, [x9, #88]
   2fdf8:	cmp	x8, x9
   2fdfc:	b.lt	2fe24 <rpl_re_set_registers@@Base+0x2e88>  // b.tstop
   2fe00:	ldur	x8, [x29, #-16]
   2fe04:	ldr	w9, [x8, #8]
   2fe08:	and	w9, w9, #0xffffff00
   2fe0c:	mov	w10, #0x24                  	// #36
   2fe10:	orr	w9, w9, w10
   2fe14:	str	w9, [x8, #8]
   2fe18:	mov	w9, #0x1                   	// #1
   2fe1c:	stur	w9, [x29, #-4]
   2fe20:	b	306ac <rpl_re_set_registers@@Base+0x3710>
   2fe24:	ldur	x0, [x29, #-24]
   2fe28:	mov	x1, #0x1                   	// #1
   2fe2c:	bl	306bc <rpl_re_set_registers@@Base+0x3720>
   2fe30:	sturb	w0, [x29, #-34]
   2fe34:	ldurb	w8, [x29, #-34]
   2fe38:	ldur	x9, [x29, #-16]
   2fe3c:	strb	w8, [x9]
   2fe40:	ldur	x9, [x29, #-16]
   2fe44:	ldr	w8, [x9, #8]
   2fe48:	and	w8, w8, #0xffffff00
   2fe4c:	orr	w8, w8, #0x1
   2fe50:	str	w8, [x9, #8]
   2fe54:	ldur	x9, [x29, #-24]
   2fe58:	ldr	w8, [x9, #144]
   2fe5c:	cmp	w8, #0x1
   2fe60:	b.le	2fecc <rpl_re_set_registers@@Base+0x2f30>
   2fe64:	ldur	x0, [x29, #-24]
   2fe68:	ldur	x8, [x29, #-24]
   2fe6c:	ldr	x8, [x8, #72]
   2fe70:	add	x1, x8, #0x1
   2fe74:	bl	30870 <rpl_re_set_registers@@Base+0x38d4>
   2fe78:	stur	w0, [x29, #-40]
   2fe7c:	ldur	w0, [x29, #-40]
   2fe80:	bl	b880 <iswalnum@plt>
   2fe84:	mov	w9, #0x1                   	// #1
   2fe88:	str	w9, [sp, #28]
   2fe8c:	cbnz	w0, 2fea0 <rpl_re_set_registers@@Base+0x2f04>
   2fe90:	ldur	w8, [x29, #-40]
   2fe94:	cmp	w8, #0x5f
   2fe98:	cset	w8, eq  // eq = none
   2fe9c:	str	w8, [sp, #28]
   2fea0:	ldr	w8, [sp, #28]
   2fea4:	tst	w8, #0x1
   2fea8:	cset	w8, ne  // ne = any
   2feac:	and	w8, w8, #0x1
   2feb0:	ldur	x9, [x29, #-16]
   2feb4:	ldr	w10, [x9, #8]
   2feb8:	and	w8, w8, #0x1
   2febc:	and	w10, w10, #0xffbfffff
   2fec0:	orr	w8, w10, w8, lsl #22
   2fec4:	str	w8, [x9, #8]
   2fec8:	b	2ff24 <rpl_re_set_registers@@Base+0x2f88>
   2fecc:	bl	aed0 <__ctype_b_loc@plt>
   2fed0:	ldr	x8, [x0]
   2fed4:	ldurb	w9, [x29, #-34]
   2fed8:	ldrh	w9, [x8, w9, sxtw #1]
   2fedc:	and	w9, w9, #0x8
   2fee0:	mov	w10, #0x1                   	// #1
   2fee4:	str	w10, [sp, #24]
   2fee8:	cbnz	w9, 2fefc <rpl_re_set_registers@@Base+0x2f60>
   2feec:	ldurb	w8, [x29, #-34]
   2fef0:	cmp	w8, #0x5f
   2fef4:	cset	w8, eq  // eq = none
   2fef8:	str	w8, [sp, #24]
   2fefc:	ldr	w8, [sp, #24]
   2ff00:	tst	w8, #0x1
   2ff04:	cset	w8, ne  // ne = any
   2ff08:	and	w8, w8, #0x1
   2ff0c:	ldur	x9, [x29, #-16]
   2ff10:	ldr	w10, [x9, #8]
   2ff14:	and	w8, w8, #0x1
   2ff18:	and	w10, w10, #0xffbfffff
   2ff1c:	orr	w8, w10, w8, lsl #22
   2ff20:	str	w8, [x9, #8]
   2ff24:	ldurb	w8, [x29, #-34]
   2ff28:	subs	w8, w8, #0x27
   2ff2c:	mov	w9, w8
   2ff30:	ubfx	x9, x9, #0, #32
   2ff34:	cmp	x9, #0x56
   2ff38:	str	x9, [sp, #16]
   2ff3c:	b.hi	3029c <rpl_re_set_registers@@Base+0x3300>  // b.pmore
   2ff40:	adrp	x8, 47000 <vasnprintf@@Base+0x4e4c>
   2ff44:	add	x8, x8, #0x394
   2ff48:	ldr	x11, [sp, #16]
   2ff4c:	ldrsw	x10, [x8, x11, lsl #2]
   2ff50:	add	x9, x8, x10
   2ff54:	br	x9
   2ff58:	ldur	x8, [x29, #-32]
   2ff5c:	and	x8, x8, #0x400
   2ff60:	cbnz	x8, 2ff88 <rpl_re_set_registers@@Base+0x2fec>
   2ff64:	ldur	x8, [x29, #-32]
   2ff68:	and	x8, x8, #0x8000
   2ff6c:	cbnz	x8, 2ff88 <rpl_re_set_registers@@Base+0x2fec>
   2ff70:	ldur	x8, [x29, #-16]
   2ff74:	ldr	w9, [x8, #8]
   2ff78:	and	w9, w9, #0xffffff00
   2ff7c:	mov	w10, #0xa                   	// #10
   2ff80:	orr	w9, w9, w10
   2ff84:	str	w9, [x8, #8]
   2ff88:	b	3029c <rpl_re_set_registers@@Base+0x3300>
   2ff8c:	ldur	x8, [x29, #-32]
   2ff90:	and	x8, x8, #0x4000
   2ff94:	cbnz	x8, 2ffc4 <rpl_re_set_registers@@Base+0x3028>
   2ff98:	ldur	x8, [x29, #-16]
   2ff9c:	ldr	w9, [x8, #8]
   2ffa0:	and	w9, w9, #0xffffff00
   2ffa4:	orr	w9, w9, #0x4
   2ffa8:	str	w9, [x8, #8]
   2ffac:	ldurb	w9, [x29, #-34]
   2ffb0:	subs	w9, w9, #0x31
   2ffb4:	mov	w0, w9
   2ffb8:	sxtw	x8, w0
   2ffbc:	ldur	x10, [x29, #-16]
   2ffc0:	str	x8, [x10]
   2ffc4:	b	3029c <rpl_re_set_registers@@Base+0x3300>
   2ffc8:	ldur	x8, [x29, #-32]
   2ffcc:	and	x8, x8, #0x80000
   2ffd0:	cbnz	x8, 2fff4 <rpl_re_set_registers@@Base+0x3058>
   2ffd4:	ldur	x8, [x29, #-16]
   2ffd8:	ldr	w9, [x8, #8]
   2ffdc:	and	w9, w9, #0xffffff00
   2ffe0:	orr	w9, w9, #0xc
   2ffe4:	str	w9, [x8, #8]
   2ffe8:	ldur	x8, [x29, #-16]
   2ffec:	mov	w9, #0x6                   	// #6
   2fff0:	str	w9, [x8]
   2fff4:	b	3029c <rpl_re_set_registers@@Base+0x3300>
   2fff8:	ldur	x8, [x29, #-32]
   2fffc:	and	x8, x8, #0x80000
   30000:	cbnz	x8, 30024 <rpl_re_set_registers@@Base+0x3088>
   30004:	ldur	x8, [x29, #-16]
   30008:	ldr	w9, [x8, #8]
   3000c:	and	w9, w9, #0xffffff00
   30010:	orr	w9, w9, #0xc
   30014:	str	w9, [x8, #8]
   30018:	ldur	x8, [x29, #-16]
   3001c:	mov	w9, #0x9                   	// #9
   30020:	str	w9, [x8]
   30024:	b	3029c <rpl_re_set_registers@@Base+0x3300>
   30028:	ldur	x8, [x29, #-32]
   3002c:	and	x8, x8, #0x80000
   30030:	cbnz	x8, 30054 <rpl_re_set_registers@@Base+0x30b8>
   30034:	ldur	x8, [x29, #-16]
   30038:	ldr	w9, [x8, #8]
   3003c:	and	w9, w9, #0xffffff00
   30040:	orr	w9, w9, #0xc
   30044:	str	w9, [x8, #8]
   30048:	ldur	x8, [x29, #-16]
   3004c:	mov	w9, #0x100                 	// #256
   30050:	str	w9, [x8]
   30054:	b	3029c <rpl_re_set_registers@@Base+0x3300>
   30058:	ldur	x8, [x29, #-32]
   3005c:	and	x8, x8, #0x80000
   30060:	cbnz	x8, 30084 <rpl_re_set_registers@@Base+0x30e8>
   30064:	ldur	x8, [x29, #-16]
   30068:	ldr	w9, [x8, #8]
   3006c:	and	w9, w9, #0xffffff00
   30070:	orr	w9, w9, #0xc
   30074:	str	w9, [x8, #8]
   30078:	ldur	x8, [x29, #-16]
   3007c:	mov	w9, #0x200                 	// #512
   30080:	str	w9, [x8]
   30084:	b	3029c <rpl_re_set_registers@@Base+0x3300>
   30088:	ldur	x8, [x29, #-32]
   3008c:	and	x8, x8, #0x80000
   30090:	cbnz	x8, 300a8 <rpl_re_set_registers@@Base+0x310c>
   30094:	ldur	x8, [x29, #-16]
   30098:	ldr	w9, [x8, #8]
   3009c:	and	w9, w9, #0xffffff00
   300a0:	orr	w9, w9, #0x20
   300a4:	str	w9, [x8, #8]
   300a8:	b	3029c <rpl_re_set_registers@@Base+0x3300>
   300ac:	ldur	x8, [x29, #-32]
   300b0:	and	x8, x8, #0x80000
   300b4:	cbnz	x8, 300d0 <rpl_re_set_registers@@Base+0x3134>
   300b8:	ldur	x8, [x29, #-16]
   300bc:	ldr	w9, [x8, #8]
   300c0:	and	w9, w9, #0xffffff00
   300c4:	mov	w10, #0x21                  	// #33
   300c8:	orr	w9, w9, w10
   300cc:	str	w9, [x8, #8]
   300d0:	b	3029c <rpl_re_set_registers@@Base+0x3300>
   300d4:	ldur	x8, [x29, #-32]
   300d8:	and	x8, x8, #0x80000
   300dc:	cbnz	x8, 300f8 <rpl_re_set_registers@@Base+0x315c>
   300e0:	ldur	x8, [x29, #-16]
   300e4:	ldr	w9, [x8, #8]
   300e8:	and	w9, w9, #0xffffff00
   300ec:	mov	w10, #0x22                  	// #34
   300f0:	orr	w9, w9, w10
   300f4:	str	w9, [x8, #8]
   300f8:	b	3029c <rpl_re_set_registers@@Base+0x3300>
   300fc:	ldur	x8, [x29, #-32]
   30100:	and	x8, x8, #0x80000
   30104:	cbnz	x8, 30120 <rpl_re_set_registers@@Base+0x3184>
   30108:	ldur	x8, [x29, #-16]
   3010c:	ldr	w9, [x8, #8]
   30110:	and	w9, w9, #0xffffff00
   30114:	mov	w10, #0x23                  	// #35
   30118:	orr	w9, w9, w10
   3011c:	str	w9, [x8, #8]
   30120:	b	3029c <rpl_re_set_registers@@Base+0x3300>
   30124:	ldur	x8, [x29, #-32]
   30128:	and	x8, x8, #0x80000
   3012c:	cbnz	x8, 30150 <rpl_re_set_registers@@Base+0x31b4>
   30130:	ldur	x8, [x29, #-16]
   30134:	ldr	w9, [x8, #8]
   30138:	and	w9, w9, #0xffffff00
   3013c:	orr	w9, w9, #0xc
   30140:	str	w9, [x8, #8]
   30144:	ldur	x8, [x29, #-16]
   30148:	mov	w9, #0x40                  	// #64
   3014c:	str	w9, [x8]
   30150:	b	3029c <rpl_re_set_registers@@Base+0x3300>
   30154:	ldur	x8, [x29, #-32]
   30158:	and	x8, x8, #0x80000
   3015c:	cbnz	x8, 30180 <rpl_re_set_registers@@Base+0x31e4>
   30160:	ldur	x8, [x29, #-16]
   30164:	ldr	w9, [x8, #8]
   30168:	and	w9, w9, #0xffffff00
   3016c:	orr	w9, w9, #0xc
   30170:	str	w9, [x8, #8]
   30174:	ldur	x8, [x29, #-16]
   30178:	mov	w9, #0x80                  	// #128
   3017c:	str	w9, [x8]
   30180:	b	3029c <rpl_re_set_registers@@Base+0x3300>
   30184:	ldur	x8, [x29, #-32]
   30188:	and	x8, x8, #0x2000
   3018c:	cbnz	x8, 301a4 <rpl_re_set_registers@@Base+0x3208>
   30190:	ldur	x8, [x29, #-16]
   30194:	ldr	w9, [x8, #8]
   30198:	and	w9, w9, #0xffffff00
   3019c:	orr	w9, w9, #0x8
   301a0:	str	w9, [x8, #8]
   301a4:	b	3029c <rpl_re_set_registers@@Base+0x3300>
   301a8:	ldur	x8, [x29, #-32]
   301ac:	and	x8, x8, #0x2000
   301b0:	cbnz	x8, 301cc <rpl_re_set_registers@@Base+0x3230>
   301b4:	ldur	x8, [x29, #-16]
   301b8:	ldr	w9, [x8, #8]
   301bc:	and	w9, w9, #0xffffff00
   301c0:	mov	w10, #0x9                   	// #9
   301c4:	orr	w9, w9, w10
   301c8:	str	w9, [x8, #8]
   301cc:	b	3029c <rpl_re_set_registers@@Base+0x3300>
   301d0:	ldur	x8, [x29, #-32]
   301d4:	and	x8, x8, #0x400
   301d8:	cbnz	x8, 30200 <rpl_re_set_registers@@Base+0x3264>
   301dc:	ldur	x8, [x29, #-32]
   301e0:	and	x8, x8, #0x2
   301e4:	cbz	x8, 30200 <rpl_re_set_registers@@Base+0x3264>
   301e8:	ldur	x8, [x29, #-16]
   301ec:	ldr	w9, [x8, #8]
   301f0:	and	w9, w9, #0xffffff00
   301f4:	mov	w10, #0x12                  	// #18
   301f8:	orr	w9, w9, w10
   301fc:	str	w9, [x8, #8]
   30200:	b	3029c <rpl_re_set_registers@@Base+0x3300>
   30204:	ldur	x8, [x29, #-32]
   30208:	and	x8, x8, #0x400
   3020c:	cbnz	x8, 30234 <rpl_re_set_registers@@Base+0x3298>
   30210:	ldur	x8, [x29, #-32]
   30214:	and	x8, x8, #0x2
   30218:	cbz	x8, 30234 <rpl_re_set_registers@@Base+0x3298>
   3021c:	ldur	x8, [x29, #-16]
   30220:	ldr	w9, [x8, #8]
   30224:	and	w9, w9, #0xffffff00
   30228:	mov	w10, #0x13                  	// #19
   3022c:	orr	w9, w9, w10
   30230:	str	w9, [x8, #8]
   30234:	b	3029c <rpl_re_set_registers@@Base+0x3300>
   30238:	ldur	x8, [x29, #-32]
   3023c:	and	x8, x8, #0x200
   30240:	cbz	x8, 30268 <rpl_re_set_registers@@Base+0x32cc>
   30244:	ldur	x8, [x29, #-32]
   30248:	and	x8, x8, #0x1000
   3024c:	cbnz	x8, 30268 <rpl_re_set_registers@@Base+0x32cc>
   30250:	ldur	x8, [x29, #-16]
   30254:	ldr	w9, [x8, #8]
   30258:	and	w9, w9, #0xffffff00
   3025c:	mov	w10, #0x17                  	// #23
   30260:	orr	w9, w9, w10
   30264:	str	w9, [x8, #8]
   30268:	b	3029c <rpl_re_set_registers@@Base+0x3300>
   3026c:	ldur	x8, [x29, #-32]
   30270:	and	x8, x8, #0x200
   30274:	cbz	x8, 30298 <rpl_re_set_registers@@Base+0x32fc>
   30278:	ldur	x8, [x29, #-32]
   3027c:	and	x8, x8, #0x1000
   30280:	cbnz	x8, 30298 <rpl_re_set_registers@@Base+0x32fc>
   30284:	ldur	x8, [x29, #-16]
   30288:	ldr	w9, [x8, #8]
   3028c:	and	w9, w9, #0xffffff00
   30290:	orr	w9, w9, #0x18
   30294:	str	w9, [x8, #8]
   30298:	b	3029c <rpl_re_set_registers@@Base+0x3300>
   3029c:	mov	w8, #0x2                   	// #2
   302a0:	stur	w8, [x29, #-4]
   302a4:	b	306ac <rpl_re_set_registers@@Base+0x3710>
   302a8:	ldur	x8, [x29, #-16]
   302ac:	ldr	w9, [x8, #8]
   302b0:	and	w9, w9, #0xffffff00
   302b4:	orr	w9, w9, #0x1
   302b8:	str	w9, [x8, #8]
   302bc:	ldur	x8, [x29, #-24]
   302c0:	ldr	w9, [x8, #144]
   302c4:	cmp	w9, #0x1
   302c8:	b.le	30330 <rpl_re_set_registers@@Base+0x3394>
   302cc:	ldur	x0, [x29, #-24]
   302d0:	ldur	x8, [x29, #-24]
   302d4:	ldr	x1, [x8, #72]
   302d8:	bl	30870 <rpl_re_set_registers@@Base+0x38d4>
   302dc:	stur	w0, [x29, #-44]
   302e0:	ldur	w0, [x29, #-44]
   302e4:	bl	b880 <iswalnum@plt>
   302e8:	mov	w9, #0x1                   	// #1
   302ec:	str	w9, [sp, #12]
   302f0:	cbnz	w0, 30304 <rpl_re_set_registers@@Base+0x3368>
   302f4:	ldur	w8, [x29, #-44]
   302f8:	cmp	w8, #0x5f
   302fc:	cset	w8, eq  // eq = none
   30300:	str	w8, [sp, #12]
   30304:	ldr	w8, [sp, #12]
   30308:	tst	w8, #0x1
   3030c:	cset	w8, ne  // ne = any
   30310:	and	w8, w8, #0x1
   30314:	ldur	x9, [x29, #-16]
   30318:	ldr	w10, [x9, #8]
   3031c:	and	w8, w8, #0x1
   30320:	and	w10, w10, #0xffbfffff
   30324:	orr	w8, w10, w8, lsl #22
   30328:	str	w8, [x9, #8]
   3032c:	b	30388 <rpl_re_set_registers@@Base+0x33ec>
   30330:	bl	aed0 <__ctype_b_loc@plt>
   30334:	ldr	x8, [x0]
   30338:	ldur	x9, [x29, #-16]
   3033c:	ldrb	w10, [x9]
   30340:	ldrh	w10, [x8, w10, sxtw #1]
   30344:	and	w10, w10, #0x8
   30348:	mov	w11, #0x1                   	// #1
   3034c:	str	w11, [sp, #8]
   30350:	cbnz	w10, 30368 <rpl_re_set_registers@@Base+0x33cc>
   30354:	ldur	x8, [x29, #-16]
   30358:	ldrb	w9, [x8]
   3035c:	cmp	w9, #0x5f
   30360:	cset	w9, eq  // eq = none
   30364:	str	w9, [sp, #8]
   30368:	ldr	w8, [sp, #8]
   3036c:	and	w8, w8, #0x1
   30370:	ldur	x9, [x29, #-16]
   30374:	ldr	w10, [x9, #8]
   30378:	and	w8, w8, #0x1
   3037c:	and	w10, w10, #0xffbfffff
   30380:	orr	w8, w10, w8, lsl #22
   30384:	str	w8, [x9, #8]
   30388:	ldurb	w8, [x29, #-33]
   3038c:	subs	w8, w8, #0xa
   30390:	mov	w9, w8
   30394:	ubfx	x9, x9, #0, #32
   30398:	cmp	x9, #0x73
   3039c:	str	x9, [sp]
   303a0:	b.hi	306a4 <rpl_re_set_registers@@Base+0x3708>  // b.pmore
   303a4:	adrp	x8, 47000 <vasnprintf@@Base+0x4e4c>
   303a8:	add	x8, x8, #0x1c4
   303ac:	ldr	x11, [sp]
   303b0:	ldrsw	x10, [x8, x11, lsl #2]
   303b4:	add	x9, x8, x10
   303b8:	br	x9
   303bc:	ldur	x8, [x29, #-32]
   303c0:	and	x8, x8, #0x800
   303c4:	cbz	x8, 303e0 <rpl_re_set_registers@@Base+0x3444>
   303c8:	ldur	x8, [x29, #-16]
   303cc:	ldr	w9, [x8, #8]
   303d0:	and	w9, w9, #0xffffff00
   303d4:	mov	w10, #0xa                   	// #10
   303d8:	orr	w9, w9, w10
   303dc:	str	w9, [x8, #8]
   303e0:	b	306a4 <rpl_re_set_registers@@Base+0x3708>
   303e4:	ldur	x8, [x29, #-32]
   303e8:	and	x8, x8, #0x400
   303ec:	cbnz	x8, 30414 <rpl_re_set_registers@@Base+0x3478>
   303f0:	ldur	x8, [x29, #-32]
   303f4:	and	x8, x8, #0x8000
   303f8:	cbz	x8, 30414 <rpl_re_set_registers@@Base+0x3478>
   303fc:	ldur	x8, [x29, #-16]
   30400:	ldr	w9, [x8, #8]
   30404:	and	w9, w9, #0xffffff00
   30408:	mov	w10, #0xa                   	// #10
   3040c:	orr	w9, w9, w10
   30410:	str	w9, [x8, #8]
   30414:	b	306a4 <rpl_re_set_registers@@Base+0x3708>
   30418:	ldur	x8, [x29, #-16]
   3041c:	ldr	w9, [x8, #8]
   30420:	and	w9, w9, #0xffffff00
   30424:	mov	w10, #0xb                   	// #11
   30428:	orr	w9, w9, w10
   3042c:	str	w9, [x8, #8]
   30430:	b	306a4 <rpl_re_set_registers@@Base+0x3708>
   30434:	ldur	x8, [x29, #-32]
   30438:	and	x8, x8, #0x400
   3043c:	cbnz	x8, 30464 <rpl_re_set_registers@@Base+0x34c8>
   30440:	ldur	x8, [x29, #-32]
   30444:	and	x8, x8, #0x2
   30448:	cbnz	x8, 30464 <rpl_re_set_registers@@Base+0x34c8>
   3044c:	ldur	x8, [x29, #-16]
   30450:	ldr	w9, [x8, #8]
   30454:	and	w9, w9, #0xffffff00
   30458:	mov	w10, #0x12                  	// #18
   3045c:	orr	w9, w9, w10
   30460:	str	w9, [x8, #8]
   30464:	b	306a4 <rpl_re_set_registers@@Base+0x3708>
   30468:	ldur	x8, [x29, #-32]
   3046c:	and	x8, x8, #0x400
   30470:	cbnz	x8, 30498 <rpl_re_set_registers@@Base+0x34fc>
   30474:	ldur	x8, [x29, #-32]
   30478:	and	x8, x8, #0x2
   3047c:	cbnz	x8, 30498 <rpl_re_set_registers@@Base+0x34fc>
   30480:	ldur	x8, [x29, #-16]
   30484:	ldr	w9, [x8, #8]
   30488:	and	w9, w9, #0xffffff00
   3048c:	mov	w10, #0x13                  	// #19
   30490:	orr	w9, w9, w10
   30494:	str	w9, [x8, #8]
   30498:	b	306a4 <rpl_re_set_registers@@Base+0x3708>
   3049c:	ldur	x8, [x29, #-32]
   304a0:	and	x8, x8, #0x200
   304a4:	cbz	x8, 304cc <rpl_re_set_registers@@Base+0x3530>
   304a8:	ldur	x8, [x29, #-32]
   304ac:	and	x8, x8, #0x1000
   304b0:	cbz	x8, 304cc <rpl_re_set_registers@@Base+0x3530>
   304b4:	ldur	x8, [x29, #-16]
   304b8:	ldr	w9, [x8, #8]
   304bc:	and	w9, w9, #0xffffff00
   304c0:	mov	w10, #0x17                  	// #23
   304c4:	orr	w9, w9, w10
   304c8:	str	w9, [x8, #8]
   304cc:	b	306a4 <rpl_re_set_registers@@Base+0x3708>
   304d0:	ldur	x8, [x29, #-32]
   304d4:	and	x8, x8, #0x200
   304d8:	cbz	x8, 304fc <rpl_re_set_registers@@Base+0x3560>
   304dc:	ldur	x8, [x29, #-32]
   304e0:	and	x8, x8, #0x1000
   304e4:	cbz	x8, 304fc <rpl_re_set_registers@@Base+0x3560>
   304e8:	ldur	x8, [x29, #-16]
   304ec:	ldr	w9, [x8, #8]
   304f0:	and	w9, w9, #0xffffff00
   304f4:	orr	w9, w9, #0x18
   304f8:	str	w9, [x8, #8]
   304fc:	b	306a4 <rpl_re_set_registers@@Base+0x3708>
   30500:	ldur	x8, [x29, #-32]
   30504:	and	x8, x8, #0x2000
   30508:	cbz	x8, 30520 <rpl_re_set_registers@@Base+0x3584>
   3050c:	ldur	x8, [x29, #-16]
   30510:	ldr	w9, [x8, #8]
   30514:	and	w9, w9, #0xffffff00
   30518:	orr	w9, w9, #0x8
   3051c:	str	w9, [x8, #8]
   30520:	b	306a4 <rpl_re_set_registers@@Base+0x3708>
   30524:	ldur	x8, [x29, #-32]
   30528:	and	x8, x8, #0x2000
   3052c:	cbz	x8, 30548 <rpl_re_set_registers@@Base+0x35ac>
   30530:	ldur	x8, [x29, #-16]
   30534:	ldr	w9, [x8, #8]
   30538:	and	w9, w9, #0xffffff00
   3053c:	mov	w10, #0x9                   	// #9
   30540:	orr	w9, w9, w10
   30544:	str	w9, [x8, #8]
   30548:	b	306a4 <rpl_re_set_registers@@Base+0x3708>
   3054c:	ldur	x8, [x29, #-16]
   30550:	ldr	w9, [x8, #8]
   30554:	and	w9, w9, #0xffffff00
   30558:	mov	w10, #0x14                  	// #20
   3055c:	orr	w9, w9, w10
   30560:	str	w9, [x8, #8]
   30564:	b	306a4 <rpl_re_set_registers@@Base+0x3708>
   30568:	ldur	x8, [x29, #-16]
   3056c:	ldr	w9, [x8, #8]
   30570:	and	w9, w9, #0xffffff00
   30574:	mov	w10, #0x5                   	// #5
   30578:	orr	w9, w9, w10
   3057c:	str	w9, [x8, #8]
   30580:	b	306a4 <rpl_re_set_registers@@Base+0x3708>
   30584:	ldur	x8, [x29, #-32]
   30588:	mov	x9, #0x8                   	// #8
   3058c:	movk	x9, #0x80, lsl #16
   30590:	and	x8, x8, x9
   30594:	cbnz	x8, 305e0 <rpl_re_set_registers@@Base+0x3644>
   30598:	ldur	x8, [x29, #-24]
   3059c:	ldr	x8, [x8, #72]
   305a0:	cbz	x8, 305e0 <rpl_re_set_registers@@Base+0x3644>
   305a4:	ldur	x8, [x29, #-24]
   305a8:	ldr	x8, [x8, #8]
   305ac:	ldur	x9, [x29, #-24]
   305b0:	ldr	x9, [x9, #72]
   305b4:	subs	x9, x9, #0x1
   305b8:	add	x8, x8, x9
   305bc:	ldrb	w10, [x8]
   305c0:	sturb	w10, [x29, #-45]
   305c4:	ldur	x8, [x29, #-32]
   305c8:	and	x8, x8, #0x800
   305cc:	cbz	x8, 305dc <rpl_re_set_registers@@Base+0x3640>
   305d0:	ldurb	w8, [x29, #-45]
   305d4:	cmp	w8, #0xa
   305d8:	b.eq	305e0 <rpl_re_set_registers@@Base+0x3644>  // b.none
   305dc:	b	306a4 <rpl_re_set_registers@@Base+0x3708>
   305e0:	ldur	x8, [x29, #-16]
   305e4:	ldr	w9, [x8, #8]
   305e8:	and	w9, w9, #0xffffff00
   305ec:	orr	w9, w9, #0xc
   305f0:	str	w9, [x8, #8]
   305f4:	ldur	x8, [x29, #-16]
   305f8:	mov	w9, #0x10                  	// #16
   305fc:	str	w9, [x8]
   30600:	b	306a4 <rpl_re_set_registers@@Base+0x3708>
   30604:	ldur	x8, [x29, #-32]
   30608:	and	x8, x8, #0x8
   3060c:	cbnz	x8, 30680 <rpl_re_set_registers@@Base+0x36e4>
   30610:	ldur	x8, [x29, #-24]
   30614:	ldr	x8, [x8, #72]
   30618:	add	x8, x8, #0x1
   3061c:	ldur	x9, [x29, #-24]
   30620:	ldr	x9, [x9, #88]
   30624:	cmp	x8, x9
   30628:	b.eq	30680 <rpl_re_set_registers@@Base+0x36e4>  // b.none
   3062c:	ldur	x8, [x29, #-24]
   30630:	ldr	x9, [x8, #72]
   30634:	add	x9, x9, #0x1
   30638:	str	x9, [x8, #72]
   3063c:	ldur	x1, [x29, #-24]
   30640:	ldur	x2, [x29, #-32]
   30644:	add	x0, sp, #0x20
   30648:	bl	2fcc4 <rpl_re_set_registers@@Base+0x2d28>
   3064c:	ldur	x8, [x29, #-24]
   30650:	ldr	x9, [x8, #72]
   30654:	subs	x9, x9, #0x1
   30658:	str	x9, [x8, #72]
   3065c:	ldr	w10, [sp, #40]
   30660:	and	w10, w10, #0xff
   30664:	cmp	w10, #0xa
   30668:	b.eq	30680 <rpl_re_set_registers@@Base+0x36e4>  // b.none
   3066c:	ldr	w8, [sp, #40]
   30670:	and	w8, w8, #0xff
   30674:	cmp	w8, #0x9
   30678:	b.eq	30680 <rpl_re_set_registers@@Base+0x36e4>  // b.none
   3067c:	b	306a4 <rpl_re_set_registers@@Base+0x3708>
   30680:	ldur	x8, [x29, #-16]
   30684:	ldr	w9, [x8, #8]
   30688:	and	w9, w9, #0xffffff00
   3068c:	orr	w9, w9, #0xc
   30690:	str	w9, [x8, #8]
   30694:	ldur	x8, [x29, #-16]
   30698:	mov	w9, #0x20                  	// #32
   3069c:	str	w9, [x8]
   306a0:	b	306a4 <rpl_re_set_registers@@Base+0x3708>
   306a4:	mov	w8, #0x1                   	// #1
   306a8:	stur	w8, [x29, #-4]
   306ac:	ldur	w0, [x29, #-4]
   306b0:	ldp	x29, x30, [sp, #96]
   306b4:	add	sp, sp, #0x70
   306b8:	ret
   306bc:	sub	sp, sp, #0x30
   306c0:	mov	w8, #0x1                   	// #1
   306c4:	str	x0, [sp, #32]
   306c8:	str	x1, [sp, #24]
   306cc:	ldr	x9, [sp, #32]
   306d0:	ldrb	w10, [x9, #139]
   306d4:	cmp	w10, #0x0
   306d8:	cset	w10, ne  // ne = any
   306dc:	eor	w8, w10, w8
   306e0:	and	w8, w8, #0x1
   306e4:	mov	w0, w8
   306e8:	sxtw	x9, w0
   306ec:	cbz	x9, 30718 <rpl_re_set_registers@@Base+0x377c>
   306f0:	ldr	x8, [sp, #32]
   306f4:	ldr	x8, [x8, #8]
   306f8:	ldr	x9, [sp, #32]
   306fc:	ldr	x9, [x9, #72]
   30700:	ldr	x10, [sp, #24]
   30704:	add	x9, x9, x10
   30708:	add	x8, x8, x9
   3070c:	ldrb	w11, [x8]
   30710:	strb	w11, [sp, #47]
   30714:	b	30864 <rpl_re_set_registers@@Base+0x38c8>
   30718:	ldr	x8, [sp, #32]
   3071c:	ldr	w9, [x8, #144]
   30720:	cmp	w9, #0x1
   30724:	b.le	307c8 <rpl_re_set_registers@@Base+0x382c>
   30728:	ldr	x8, [sp, #32]
   3072c:	ldr	x8, [x8, #16]
   30730:	ldr	x9, [sp, #32]
   30734:	ldr	x9, [x9, #72]
   30738:	ldr	x10, [sp, #24]
   3073c:	add	x9, x9, x10
   30740:	ldr	w11, [x8, x9, lsl #2]
   30744:	mov	w12, #0xffffffff            	// #-1
   30748:	cmp	w11, w12
   3074c:	b.eq	307a0 <rpl_re_set_registers@@Base+0x3804>  // b.none
   30750:	ldr	x8, [sp, #32]
   30754:	ldr	x8, [x8, #48]
   30758:	ldr	x9, [sp, #32]
   3075c:	ldr	x9, [x9, #72]
   30760:	ldr	x10, [sp, #24]
   30764:	add	x9, x9, x10
   30768:	add	x9, x9, #0x1
   3076c:	cmp	x8, x9
   30770:	b.eq	307c8 <rpl_re_set_registers@@Base+0x382c>  // b.none
   30774:	ldr	x8, [sp, #32]
   30778:	ldr	x8, [x8, #16]
   3077c:	ldr	x9, [sp, #32]
   30780:	ldr	x9, [x9, #72]
   30784:	ldr	x10, [sp, #24]
   30788:	add	x9, x9, x10
   3078c:	add	x9, x9, #0x1
   30790:	ldr	w11, [x8, x9, lsl #2]
   30794:	mov	w12, #0xffffffff            	// #-1
   30798:	cmp	w11, w12
   3079c:	b.ne	307c8 <rpl_re_set_registers@@Base+0x382c>  // b.any
   307a0:	ldr	x8, [sp, #32]
   307a4:	ldr	x8, [x8, #8]
   307a8:	ldr	x9, [sp, #32]
   307ac:	ldr	x9, [x9, #72]
   307b0:	ldr	x10, [sp, #24]
   307b4:	add	x9, x9, x10
   307b8:	add	x8, x8, x9
   307bc:	ldrb	w11, [x8]
   307c0:	strb	w11, [sp, #47]
   307c4:	b	30864 <rpl_re_set_registers@@Base+0x38c8>
   307c8:	ldr	x8, [sp, #32]
   307cc:	ldr	x8, [x8, #72]
   307d0:	ldr	x9, [sp, #24]
   307d4:	add	x8, x8, x9
   307d8:	str	x8, [sp, #8]
   307dc:	ldr	x8, [sp, #32]
   307e0:	ldrb	w10, [x8, #140]
   307e4:	cbz	w10, 307fc <rpl_re_set_registers@@Base+0x3860>
   307e8:	ldr	x8, [sp, #32]
   307ec:	ldr	x8, [x8, #24]
   307f0:	ldr	x9, [sp, #8]
   307f4:	ldr	x8, [x8, x9, lsl #3]
   307f8:	str	x8, [sp, #8]
   307fc:	ldr	x8, [sp, #32]
   30800:	ldr	x8, [x8]
   30804:	ldr	x9, [sp, #32]
   30808:	ldr	x9, [x9, #40]
   3080c:	ldr	x10, [sp, #8]
   30810:	add	x9, x9, x10
   30814:	ldrb	w11, [x8, x9]
   30818:	str	w11, [sp, #20]
   3081c:	ldr	x8, [sp, #32]
   30820:	ldrb	w11, [x8, #140]
   30824:	cbz	w11, 3085c <rpl_re_set_registers@@Base+0x38c0>
   30828:	ldr	w8, [sp, #20]
   3082c:	and	w8, w8, #0xffffff80
   30830:	cbz	w8, 3085c <rpl_re_set_registers@@Base+0x38c0>
   30834:	ldr	x8, [sp, #32]
   30838:	ldr	x8, [x8, #8]
   3083c:	ldr	x9, [sp, #32]
   30840:	ldr	x9, [x9, #72]
   30844:	ldr	x10, [sp, #24]
   30848:	add	x9, x9, x10
   3084c:	add	x8, x8, x9
   30850:	ldrb	w11, [x8]
   30854:	strb	w11, [sp, #47]
   30858:	b	30864 <rpl_re_set_registers@@Base+0x38c8>
   3085c:	ldr	w8, [sp, #20]
   30860:	strb	w8, [sp, #47]
   30864:	ldrb	w0, [sp, #47]
   30868:	add	sp, sp, #0x30
   3086c:	ret
   30870:	sub	sp, sp, #0x20
   30874:	str	x0, [sp, #16]
   30878:	str	x1, [sp, #8]
   3087c:	ldr	x8, [sp, #16]
   30880:	ldr	w9, [x8, #144]
   30884:	cmp	w9, #0x1
   30888:	b.ne	308a4 <rpl_re_set_registers@@Base+0x3908>  // b.any
   3088c:	ldr	x8, [sp, #16]
   30890:	ldr	x8, [x8, #8]
   30894:	ldr	x9, [sp, #8]
   30898:	ldrb	w10, [x8, x9]
   3089c:	str	w10, [sp, #28]
   308a0:	b	308b8 <rpl_re_set_registers@@Base+0x391c>
   308a4:	ldr	x8, [sp, #16]
   308a8:	ldr	x8, [x8, #16]
   308ac:	ldr	x9, [sp, #8]
   308b0:	ldr	w10, [x8, x9, lsl #2]
   308b4:	str	w10, [sp, #28]
   308b8:	ldr	w0, [sp, #28]
   308bc:	add	sp, sp, #0x20
   308c0:	ret
   308c4:	sub	sp, sp, #0x90
   308c8:	stp	x29, x30, [sp, #128]
   308cc:	add	x29, sp, #0x80
   308d0:	adrp	x8, 30000 <rpl_re_set_registers@@Base+0x3064>
   308d4:	add	x8, x8, #0xc44
   308d8:	stur	x0, [x29, #-16]
   308dc:	stur	x1, [x29, #-24]
   308e0:	stur	x2, [x29, #-32]
   308e4:	stur	x3, [x29, #-40]
   308e8:	stur	x4, [x29, #-48]
   308ec:	stur	x5, [x29, #-56]
   308f0:	ldur	x9, [x29, #-24]
   308f4:	ldr	x9, [x9]
   308f8:	str	x9, [sp, #48]
   308fc:	ldur	x0, [x29, #-16]
   30900:	ldur	x1, [x29, #-24]
   30904:	ldur	x2, [x29, #-32]
   30908:	ldur	x3, [x29, #-40]
   3090c:	ldur	x4, [x29, #-48]
   30910:	ldur	x5, [x29, #-56]
   30914:	str	x8, [sp, #32]
   30918:	bl	30c7c <rpl_re_set_registers@@Base+0x3ce0>
   3091c:	str	x0, [sp, #64]
   30920:	ldur	x8, [x29, #-56]
   30924:	ldr	w10, [x8]
   30928:	mov	w11, #0x0                   	// #0
   3092c:	str	w11, [sp, #28]
   30930:	cbz	w10, 30944 <rpl_re_set_registers@@Base+0x39a8>
   30934:	ldr	x8, [sp, #64]
   30938:	cmp	x8, #0x0
   3093c:	cset	w9, eq  // eq = none
   30940:	str	w9, [sp, #28]
   30944:	ldr	w8, [sp, #28]
   30948:	and	w8, w8, #0x1
   3094c:	mov	w0, w8
   30950:	sxtw	x9, w0
   30954:	cbz	x9, 30964 <rpl_re_set_registers@@Base+0x39c8>
   30958:	mov	x8, xzr
   3095c:	stur	x8, [x29, #-8]
   30960:	b	30af8 <rpl_re_set_registers@@Base+0x3b5c>
   30964:	ldur	x8, [x29, #-32]
   30968:	ldr	w9, [x8, #8]
   3096c:	and	w9, w9, #0xff
   30970:	mov	w10, #0x0                   	// #0
   30974:	cmp	w9, #0xa
   30978:	str	w10, [sp, #24]
   3097c:	b.eq	309cc <rpl_re_set_registers@@Base+0x3a30>  // b.none
   30980:	ldur	x8, [x29, #-32]
   30984:	ldr	w9, [x8, #8]
   30988:	and	w9, w9, #0xff
   3098c:	mov	w10, #0x0                   	// #0
   30990:	cmp	w9, #0x2
   30994:	str	w10, [sp, #24]
   30998:	b.eq	309cc <rpl_re_set_registers@@Base+0x3a30>  // b.none
   3099c:	ldur	x8, [x29, #-48]
   309a0:	mov	w9, #0x1                   	// #1
   309a4:	str	w9, [sp, #20]
   309a8:	cbz	x8, 309c4 <rpl_re_set_registers@@Base+0x3a28>
   309ac:	ldur	x8, [x29, #-32]
   309b0:	ldr	w9, [x8, #8]
   309b4:	and	w9, w9, #0xff
   309b8:	cmp	w9, #0x9
   309bc:	cset	w9, ne  // ne = any
   309c0:	str	w9, [sp, #20]
   309c4:	ldr	w8, [sp, #20]
   309c8:	str	w8, [sp, #24]
   309cc:	ldr	w8, [sp, #24]
   309d0:	tbnz	w8, #0, 309d8 <rpl_re_set_registers@@Base+0x3a3c>
   309d4:	b	30af0 <rpl_re_set_registers@@Base+0x3b54>
   309d8:	ldur	x0, [x29, #-16]
   309dc:	ldur	x1, [x29, #-24]
   309e0:	ldur	x2, [x29, #-32]
   309e4:	ldur	x3, [x29, #-40]
   309e8:	ldur	x4, [x29, #-48]
   309ec:	ldur	x5, [x29, #-56]
   309f0:	bl	30c7c <rpl_re_set_registers@@Base+0x3ce0>
   309f4:	str	x0, [sp, #56]
   309f8:	ldur	x8, [x29, #-56]
   309fc:	ldr	w9, [x8]
   30a00:	mov	w10, #0x0                   	// #0
   30a04:	str	w10, [sp, #16]
   30a08:	cbz	w9, 30a1c <rpl_re_set_registers@@Base+0x3a80>
   30a0c:	ldr	x8, [sp, #56]
   30a10:	cmp	x8, #0x0
   30a14:	cset	w9, eq  // eq = none
   30a18:	str	w9, [sp, #16]
   30a1c:	ldr	w8, [sp, #16]
   30a20:	and	w8, w8, #0x1
   30a24:	mov	w0, w8
   30a28:	sxtw	x9, w0
   30a2c:	cbz	x9, 30a58 <rpl_re_set_registers@@Base+0x3abc>
   30a30:	ldr	x8, [sp, #64]
   30a34:	cbz	x8, 30a4c <rpl_re_set_registers@@Base+0x3ab0>
   30a38:	ldr	x0, [sp, #64]
   30a3c:	ldr	x1, [sp, #32]
   30a40:	mov	x8, xzr
   30a44:	mov	x2, x8
   30a48:	bl	30b08 <rpl_re_set_registers@@Base+0x3b6c>
   30a4c:	mov	x8, xzr
   30a50:	stur	x8, [x29, #-8]
   30a54:	b	30af8 <rpl_re_set_registers@@Base+0x3b5c>
   30a58:	ldr	x8, [sp, #64]
   30a5c:	cbz	x8, 30adc <rpl_re_set_registers@@Base+0x3b40>
   30a60:	ldr	x8, [sp, #56]
   30a64:	cbz	x8, 30adc <rpl_re_set_registers@@Base+0x3b40>
   30a68:	ldr	x0, [sp, #48]
   30a6c:	ldr	x1, [sp, #64]
   30a70:	ldr	x2, [sp, #56]
   30a74:	mov	w3, #0x10                  	// #16
   30a78:	bl	2fc6c <rpl_re_set_registers@@Base+0x2cd0>
   30a7c:	str	x0, [sp, #40]
   30a80:	ldr	x8, [sp, #40]
   30a84:	cbnz	x8, 30ad0 <rpl_re_set_registers@@Base+0x3b34>
   30a88:	ldr	x0, [sp, #56]
   30a8c:	ldr	x1, [sp, #32]
   30a90:	mov	x8, xzr
   30a94:	mov	x2, x8
   30a98:	str	x2, [sp, #8]
   30a9c:	str	x8, [sp]
   30aa0:	bl	30b08 <rpl_re_set_registers@@Base+0x3b6c>
   30aa4:	ldr	x8, [sp, #64]
   30aa8:	mov	x0, x8
   30aac:	ldr	x1, [sp, #32]
   30ab0:	ldr	x2, [sp, #8]
   30ab4:	bl	30b08 <rpl_re_set_registers@@Base+0x3b6c>
   30ab8:	ldur	x8, [x29, #-56]
   30abc:	mov	w9, #0xc                   	// #12
   30ac0:	str	w9, [x8]
   30ac4:	ldr	x8, [sp]
   30ac8:	stur	x8, [x29, #-8]
   30acc:	b	30af8 <rpl_re_set_registers@@Base+0x3b5c>
   30ad0:	ldr	x8, [sp, #40]
   30ad4:	str	x8, [sp, #64]
   30ad8:	b	30aec <rpl_re_set_registers@@Base+0x3b50>
   30adc:	ldr	x8, [sp, #64]
   30ae0:	cbnz	x8, 30aec <rpl_re_set_registers@@Base+0x3b50>
   30ae4:	ldr	x8, [sp, #56]
   30ae8:	str	x8, [sp, #64]
   30aec:	b	30964 <rpl_re_set_registers@@Base+0x39c8>
   30af0:	ldr	x8, [sp, #64]
   30af4:	stur	x8, [x29, #-8]
   30af8:	ldur	x0, [x29, #-8]
   30afc:	ldp	x29, x30, [sp, #128]
   30b00:	add	sp, sp, #0x90
   30b04:	ret
   30b08:	sub	sp, sp, #0x50
   30b0c:	stp	x29, x30, [sp, #64]
   30b10:	add	x29, sp, #0x40
   30b14:	stur	x0, [x29, #-16]
   30b18:	stur	x1, [x29, #-24]
   30b1c:	str	x2, [sp, #32]
   30b20:	ldur	x8, [x29, #-16]
   30b24:	str	x8, [sp, #24]
   30b28:	ldr	x8, [sp, #24]
   30b2c:	ldr	x8, [x8, #8]
   30b30:	mov	w9, #0x1                   	// #1
   30b34:	str	w9, [sp, #8]
   30b38:	cbnz	x8, 30b50 <rpl_re_set_registers@@Base+0x3bb4>
   30b3c:	ldr	x8, [sp, #24]
   30b40:	ldr	x8, [x8, #16]
   30b44:	cmp	x8, #0x0
   30b48:	cset	w9, ne  // ne = any
   30b4c:	str	w9, [sp, #8]
   30b50:	ldr	w8, [sp, #8]
   30b54:	tbnz	w8, #0, 30b5c <rpl_re_set_registers@@Base+0x3bc0>
   30b58:	b	30b88 <rpl_re_set_registers@@Base+0x3bec>
   30b5c:	ldr	x8, [sp, #24]
   30b60:	ldr	x8, [x8, #8]
   30b64:	cbz	x8, 30b78 <rpl_re_set_registers@@Base+0x3bdc>
   30b68:	ldr	x8, [sp, #24]
   30b6c:	ldr	x8, [x8, #8]
   30b70:	str	x8, [sp, #24]
   30b74:	b	30b84 <rpl_re_set_registers@@Base+0x3be8>
   30b78:	ldr	x8, [sp, #24]
   30b7c:	ldr	x8, [x8, #16]
   30b80:	str	x8, [sp, #24]
   30b84:	b	30b28 <rpl_re_set_registers@@Base+0x3b8c>
   30b88:	ldur	x8, [x29, #-24]
   30b8c:	ldr	x0, [sp, #32]
   30b90:	ldr	x1, [sp, #24]
   30b94:	blr	x8
   30b98:	str	w0, [sp, #12]
   30b9c:	ldr	w9, [sp, #12]
   30ba0:	cmp	w9, #0x0
   30ba4:	cset	w9, ne  // ne = any
   30ba8:	and	w9, w9, #0x1
   30bac:	mov	w1, w9
   30bb0:	sxtw	x8, w1
   30bb4:	cbz	x8, 30bc4 <rpl_re_set_registers@@Base+0x3c28>
   30bb8:	ldr	w8, [sp, #12]
   30bbc:	stur	w8, [x29, #-4]
   30bc0:	b	30c34 <rpl_re_set_registers@@Base+0x3c98>
   30bc4:	ldr	x8, [sp, #24]
   30bc8:	ldr	x8, [x8]
   30bcc:	cbnz	x8, 30bd8 <rpl_re_set_registers@@Base+0x3c3c>
   30bd0:	stur	wzr, [x29, #-4]
   30bd4:	b	30c34 <rpl_re_set_registers@@Base+0x3c98>
   30bd8:	ldr	x8, [sp, #24]
   30bdc:	str	x8, [sp, #16]
   30be0:	ldr	x8, [sp, #24]
   30be4:	ldr	x8, [x8]
   30be8:	str	x8, [sp, #24]
   30bec:	ldr	x8, [sp, #24]
   30bf0:	ldr	x8, [x8, #16]
   30bf4:	ldr	x9, [sp, #16]
   30bf8:	mov	w10, #0x1                   	// #1
   30bfc:	cmp	x8, x9
   30c00:	str	w10, [sp, #4]
   30c04:	b.eq	30c1c <rpl_re_set_registers@@Base+0x3c80>  // b.none
   30c08:	ldr	x8, [sp, #24]
   30c0c:	ldr	x8, [x8, #16]
   30c10:	cmp	x8, #0x0
   30c14:	cset	w9, eq  // eq = none
   30c18:	str	w9, [sp, #4]
   30c1c:	ldr	w8, [sp, #4]
   30c20:	tbnz	w8, #0, 30b88 <rpl_re_set_registers@@Base+0x3bec>
   30c24:	ldr	x8, [sp, #24]
   30c28:	ldr	x8, [x8, #16]
   30c2c:	str	x8, [sp, #24]
   30c30:	b	30b28 <rpl_re_set_registers@@Base+0x3b8c>
   30c34:	ldur	w0, [x29, #-4]
   30c38:	ldp	x29, x30, [sp, #64]
   30c3c:	add	sp, sp, #0x50
   30c40:	ret
   30c44:	sub	sp, sp, #0x30
   30c48:	stp	x29, x30, [sp, #32]
   30c4c:	add	x29, sp, #0x20
   30c50:	mov	w8, wzr
   30c54:	stur	x0, [x29, #-8]
   30c58:	str	x1, [sp, #16]
   30c5c:	ldr	x9, [sp, #16]
   30c60:	add	x0, x9, #0x28
   30c64:	str	w8, [sp, #12]
   30c68:	bl	2d02c <rpl_re_set_registers@@Base+0x90>
   30c6c:	ldr	w0, [sp, #12]
   30c70:	ldp	x29, x30, [sp, #32]
   30c74:	add	sp, sp, #0x30
   30c78:	ret
   30c7c:	sub	sp, sp, #0xb0
   30c80:	stp	x29, x30, [sp, #160]
   30c84:	add	x29, sp, #0xa0
   30c88:	stur	x0, [x29, #-16]
   30c8c:	stur	x1, [x29, #-24]
   30c90:	stur	x2, [x29, #-32]
   30c94:	stur	x3, [x29, #-40]
   30c98:	stur	x4, [x29, #-48]
   30c9c:	stur	x5, [x29, #-56]
   30ca0:	ldur	x8, [x29, #-24]
   30ca4:	ldr	x8, [x8]
   30ca8:	stur	x8, [x29, #-64]
   30cac:	ldur	x8, [x29, #-32]
   30cb0:	ldr	w9, [x8, #8]
   30cb4:	and	w9, w9, #0xff
   30cb8:	subs	w9, w9, #0x1
   30cbc:	mov	w8, w9
   30cc0:	ubfx	x8, x8, #0, #32
   30cc4:	cmp	x8, #0x23
   30cc8:	str	x8, [sp, #48]
   30ccc:	b.hi	314b4 <rpl_re_set_registers@@Base+0x4518>  // b.pmore
   30cd0:	adrp	x8, 47000 <vasnprintf@@Base+0x4e4c>
   30cd4:	add	x8, x8, #0x4f0
   30cd8:	ldr	x11, [sp, #48]
   30cdc:	ldrsw	x10, [x8, x11, lsl #2]
   30ce0:	add	x9, x8, x10
   30ce4:	br	x9
   30ce8:	ldur	x0, [x29, #-64]
   30cec:	ldur	x3, [x29, #-32]
   30cf0:	mov	x8, xzr
   30cf4:	mov	x1, x8
   30cf8:	mov	x2, x8
   30cfc:	bl	3165c <rpl_re_set_registers@@Base+0x46c0>
   30d00:	stur	x0, [x29, #-72]
   30d04:	ldur	x8, [x29, #-72]
   30d08:	cmp	x8, #0x0
   30d0c:	cset	w9, eq  // eq = none
   30d10:	and	w9, w9, #0x1
   30d14:	mov	w0, w9
   30d18:	sxtw	x8, w0
   30d1c:	cbz	x8, 30d38 <rpl_re_set_registers@@Base+0x3d9c>
   30d20:	ldur	x8, [x29, #-56]
   30d24:	mov	w9, #0xc                   	// #12
   30d28:	str	w9, [x8]
   30d2c:	mov	x8, xzr
   30d30:	stur	x8, [x29, #-8]
   30d34:	b	3164c <rpl_re_set_registers@@Base+0x46b0>
   30d38:	ldur	x8, [x29, #-64]
   30d3c:	ldr	w9, [x8, #180]
   30d40:	cmp	w9, #0x1
   30d44:	b.le	30e58 <rpl_re_set_registers@@Base+0x3ebc>
   30d48:	ldur	x8, [x29, #-16]
   30d4c:	ldr	x8, [x8, #104]
   30d50:	ldur	x9, [x29, #-16]
   30d54:	ldr	x9, [x9, #72]
   30d58:	mov	w10, #0x0                   	// #0
   30d5c:	cmp	x8, x9
   30d60:	str	w10, [sp, #44]
   30d64:	b.le	30db8 <rpl_re_set_registers@@Base+0x3e1c>
   30d68:	ldur	x8, [x29, #-16]
   30d6c:	ldr	x8, [x8, #72]
   30d70:	ldur	x9, [x29, #-16]
   30d74:	ldr	x9, [x9, #48]
   30d78:	mov	w10, #0x1                   	// #1
   30d7c:	cmp	x8, x9
   30d80:	str	w10, [sp, #40]
   30d84:	b.eq	30dac <rpl_re_set_registers@@Base+0x3e10>  // b.none
   30d88:	ldur	x8, [x29, #-16]
   30d8c:	ldr	x8, [x8, #16]
   30d90:	ldur	x9, [x29, #-16]
   30d94:	ldr	x9, [x9, #72]
   30d98:	ldr	w10, [x8, x9, lsl #2]
   30d9c:	mov	w11, #0xffffffff            	// #-1
   30da0:	cmp	w10, w11
   30da4:	cset	w10, ne  // ne = any
   30da8:	str	w10, [sp, #40]
   30dac:	ldr	w8, [sp, #40]
   30db0:	eor	w8, w8, #0x1
   30db4:	str	w8, [sp, #44]
   30db8:	ldr	w8, [sp, #44]
   30dbc:	tbnz	w8, #0, 30dc4 <rpl_re_set_registers@@Base+0x3e28>
   30dc0:	b	30e58 <rpl_re_set_registers@@Base+0x3ebc>
   30dc4:	ldur	x0, [x29, #-32]
   30dc8:	ldur	x1, [x29, #-16]
   30dcc:	ldur	x2, [x29, #-40]
   30dd0:	bl	2f9f0 <rpl_re_set_registers@@Base+0x2a54>
   30dd4:	ldur	x0, [x29, #-64]
   30dd8:	ldur	x3, [x29, #-32]
   30ddc:	mov	x8, xzr
   30de0:	mov	x1, x8
   30de4:	mov	x2, x8
   30de8:	bl	3165c <rpl_re_set_registers@@Base+0x46c0>
   30dec:	str	x0, [sp, #80]
   30df0:	ldur	x0, [x29, #-64]
   30df4:	ldur	x1, [x29, #-72]
   30df8:	ldr	x2, [sp, #80]
   30dfc:	mov	w3, #0x10                  	// #16
   30e00:	bl	2fc6c <rpl_re_set_registers@@Base+0x2cd0>
   30e04:	stur	x0, [x29, #-72]
   30e08:	ldr	x8, [sp, #80]
   30e0c:	mov	w9, #0x1                   	// #1
   30e10:	str	w9, [sp, #36]
   30e14:	cbz	x8, 30e28 <rpl_re_set_registers@@Base+0x3e8c>
   30e18:	ldur	x8, [x29, #-72]
   30e1c:	cmp	x8, #0x0
   30e20:	cset	w9, eq  // eq = none
   30e24:	str	w9, [sp, #36]
   30e28:	ldr	w8, [sp, #36]
   30e2c:	and	w8, w8, #0x1
   30e30:	mov	w0, w8
   30e34:	sxtw	x9, w0
   30e38:	cbz	x9, 30e54 <rpl_re_set_registers@@Base+0x3eb8>
   30e3c:	ldur	x8, [x29, #-56]
   30e40:	mov	w9, #0xc                   	// #12
   30e44:	str	w9, [x8]
   30e48:	mov	x8, xzr
   30e4c:	stur	x8, [x29, #-8]
   30e50:	b	3164c <rpl_re_set_registers@@Base+0x46b0>
   30e54:	b	30d48 <rpl_re_set_registers@@Base+0x3dac>
   30e58:	b	314c0 <rpl_re_set_registers@@Base+0x4524>
   30e5c:	ldur	x0, [x29, #-16]
   30e60:	ldur	x1, [x29, #-24]
   30e64:	ldur	x2, [x29, #-32]
   30e68:	ldur	x3, [x29, #-40]
   30e6c:	ldur	x8, [x29, #-48]
   30e70:	add	x4, x8, #0x1
   30e74:	ldur	x5, [x29, #-56]
   30e78:	bl	317bc <rpl_re_set_registers@@Base+0x4820>
   30e7c:	stur	x0, [x29, #-72]
   30e80:	ldur	x8, [x29, #-56]
   30e84:	ldr	w9, [x8]
   30e88:	mov	w10, #0x0                   	// #0
   30e8c:	str	w10, [sp, #32]
   30e90:	cbz	w9, 30ea4 <rpl_re_set_registers@@Base+0x3f08>
   30e94:	ldur	x8, [x29, #-72]
   30e98:	cmp	x8, #0x0
   30e9c:	cset	w9, eq  // eq = none
   30ea0:	str	w9, [sp, #32]
   30ea4:	ldr	w8, [sp, #32]
   30ea8:	and	w8, w8, #0x1
   30eac:	mov	w0, w8
   30eb0:	sxtw	x9, w0
   30eb4:	cbz	x9, 30ec4 <rpl_re_set_registers@@Base+0x3f28>
   30eb8:	mov	x8, xzr
   30ebc:	stur	x8, [x29, #-8]
   30ec0:	b	3164c <rpl_re_set_registers@@Base+0x46b0>
   30ec4:	b	314c0 <rpl_re_set_registers@@Base+0x4524>
   30ec8:	ldur	x0, [x29, #-16]
   30ecc:	ldur	x1, [x29, #-64]
   30ed0:	ldur	x2, [x29, #-32]
   30ed4:	ldur	x3, [x29, #-40]
   30ed8:	ldur	x4, [x29, #-56]
   30edc:	bl	31990 <rpl_re_set_registers@@Base+0x49f4>
   30ee0:	stur	x0, [x29, #-72]
   30ee4:	ldur	x8, [x29, #-56]
   30ee8:	ldr	w9, [x8]
   30eec:	mov	w10, #0x0                   	// #0
   30ef0:	str	w10, [sp, #28]
   30ef4:	cbz	w9, 30f08 <rpl_re_set_registers@@Base+0x3f6c>
   30ef8:	ldur	x8, [x29, #-72]
   30efc:	cmp	x8, #0x0
   30f00:	cset	w9, eq  // eq = none
   30f04:	str	w9, [sp, #28]
   30f08:	ldr	w8, [sp, #28]
   30f0c:	and	w8, w8, #0x1
   30f10:	mov	w0, w8
   30f14:	sxtw	x9, w0
   30f18:	cbz	x9, 30f28 <rpl_re_set_registers@@Base+0x3f8c>
   30f1c:	mov	x8, xzr
   30f20:	stur	x8, [x29, #-8]
   30f24:	b	3164c <rpl_re_set_registers@@Base+0x46b0>
   30f28:	b	314c0 <rpl_re_set_registers@@Base+0x4524>
   30f2c:	ldur	x8, [x29, #-64]
   30f30:	ldr	x8, [x8, #168]
   30f34:	ldur	x9, [x29, #-32]
   30f38:	ldr	x9, [x9]
   30f3c:	mov	w10, #0x1                   	// #1
   30f40:	lsl	w9, w10, w9
   30f44:	mov	w0, w9
   30f48:	sxtw	x11, w0
   30f4c:	and	x8, x8, x11
   30f50:	cbnz	x8, 30f6c <rpl_re_set_registers@@Base+0x3fd0>
   30f54:	ldur	x8, [x29, #-56]
   30f58:	mov	w9, #0x6                   	// #6
   30f5c:	str	w9, [x8]
   30f60:	mov	x8, xzr
   30f64:	stur	x8, [x29, #-8]
   30f68:	b	3164c <rpl_re_set_registers@@Base+0x46b0>
   30f6c:	ldur	x8, [x29, #-32]
   30f70:	ldr	x8, [x8]
   30f74:	mov	w9, #0x1                   	// #1
   30f78:	lsl	w8, w9, w8
   30f7c:	mov	w0, w8
   30f80:	sxtw	x10, w0
   30f84:	ldur	x11, [x29, #-64]
   30f88:	ldr	x12, [x11, #160]
   30f8c:	orr	x10, x12, x10
   30f90:	str	x10, [x11, #160]
   30f94:	ldur	x0, [x29, #-64]
   30f98:	ldur	x3, [x29, #-32]
   30f9c:	mov	x10, xzr
   30fa0:	mov	x1, x10
   30fa4:	mov	x2, x10
   30fa8:	bl	3165c <rpl_re_set_registers@@Base+0x46c0>
   30fac:	stur	x0, [x29, #-72]
   30fb0:	ldur	x10, [x29, #-72]
   30fb4:	cmp	x10, #0x0
   30fb8:	cset	w8, eq  // eq = none
   30fbc:	and	w8, w8, #0x1
   30fc0:	mov	w0, w8
   30fc4:	sxtw	x10, w0
   30fc8:	cbz	x10, 30fe4 <rpl_re_set_registers@@Base+0x4048>
   30fcc:	ldur	x8, [x29, #-56]
   30fd0:	mov	w9, #0xc                   	// #12
   30fd4:	str	w9, [x8]
   30fd8:	mov	x8, xzr
   30fdc:	stur	x8, [x29, #-8]
   30fe0:	b	3164c <rpl_re_set_registers@@Base+0x46b0>
   30fe4:	ldur	x8, [x29, #-64]
   30fe8:	ldr	x9, [x8, #152]
   30fec:	add	x9, x9, #0x1
   30ff0:	str	x9, [x8, #152]
   30ff4:	ldur	x8, [x29, #-64]
   30ff8:	ldrb	w10, [x8, #176]
   30ffc:	and	w10, w10, #0xfffffffd
   31000:	orr	w10, w10, #0x2
   31004:	strb	w10, [x8, #176]
   31008:	b	314c0 <rpl_re_set_registers@@Base+0x4524>
   3100c:	ldur	x8, [x29, #-40]
   31010:	and	x8, x8, #0x1000000
   31014:	cbz	x8, 31030 <rpl_re_set_registers@@Base+0x4094>
   31018:	ldur	x8, [x29, #-56]
   3101c:	mov	w9, #0xd                   	// #13
   31020:	str	w9, [x8]
   31024:	mov	x8, xzr
   31028:	stur	x8, [x29, #-8]
   3102c:	b	3164c <rpl_re_set_registers@@Base+0x46b0>
   31030:	ldur	x8, [x29, #-40]
   31034:	and	x8, x8, #0x20
   31038:	cbz	x8, 31054 <rpl_re_set_registers@@Base+0x40b8>
   3103c:	ldur	x8, [x29, #-56]
   31040:	mov	w9, #0xd                   	// #13
   31044:	str	w9, [x8]
   31048:	mov	x8, xzr
   3104c:	stur	x8, [x29, #-8]
   31050:	b	3164c <rpl_re_set_registers@@Base+0x46b0>
   31054:	ldur	x8, [x29, #-40]
   31058:	and	x8, x8, #0x10
   3105c:	cbz	x8, 31094 <rpl_re_set_registers@@Base+0x40f8>
   31060:	ldur	x0, [x29, #-32]
   31064:	ldur	x1, [x29, #-16]
   31068:	ldur	x2, [x29, #-40]
   3106c:	bl	2f9f0 <rpl_re_set_registers@@Base+0x2a54>
   31070:	ldur	x0, [x29, #-16]
   31074:	ldur	x1, [x29, #-24]
   31078:	ldur	x2, [x29, #-32]
   3107c:	ldur	x3, [x29, #-40]
   31080:	ldur	x4, [x29, #-48]
   31084:	ldur	x5, [x29, #-56]
   31088:	bl	30c7c <rpl_re_set_registers@@Base+0x3ce0>
   3108c:	stur	x0, [x29, #-8]
   31090:	b	3164c <rpl_re_set_registers@@Base+0x46b0>
   31094:	ldur	x8, [x29, #-32]
   31098:	ldr	w9, [x8, #8]
   3109c:	and	w9, w9, #0xff
   310a0:	cmp	w9, #0x9
   310a4:	b.ne	310cc <rpl_re_set_registers@@Base+0x4130>  // b.any
   310a8:	ldur	x8, [x29, #-40]
   310ac:	and	x8, x8, #0x20000
   310b0:	cbnz	x8, 310cc <rpl_re_set_registers@@Base+0x4130>
   310b4:	ldur	x8, [x29, #-56]
   310b8:	mov	w9, #0x10                  	// #16
   310bc:	str	w9, [x8]
   310c0:	mov	x8, xzr
   310c4:	stur	x8, [x29, #-8]
   310c8:	b	3164c <rpl_re_set_registers@@Base+0x46b0>
   310cc:	ldur	x8, [x29, #-32]
   310d0:	ldr	w9, [x8, #8]
   310d4:	and	w9, w9, #0xffffff00
   310d8:	orr	w9, w9, #0x1
   310dc:	str	w9, [x8, #8]
   310e0:	ldur	x0, [x29, #-64]
   310e4:	ldur	x3, [x29, #-32]
   310e8:	mov	x8, xzr
   310ec:	mov	x1, x8
   310f0:	mov	x2, x8
   310f4:	bl	3165c <rpl_re_set_registers@@Base+0x46c0>
   310f8:	stur	x0, [x29, #-72]
   310fc:	ldur	x8, [x29, #-72]
   31100:	cmp	x8, #0x0
   31104:	cset	w9, eq  // eq = none
   31108:	and	w9, w9, #0x1
   3110c:	mov	w0, w9
   31110:	sxtw	x8, w0
   31114:	cbz	x8, 31130 <rpl_re_set_registers@@Base+0x4194>
   31118:	ldur	x8, [x29, #-56]
   3111c:	mov	w9, #0xc                   	// #12
   31120:	str	w9, [x8]
   31124:	mov	x8, xzr
   31128:	stur	x8, [x29, #-8]
   3112c:	b	3164c <rpl_re_set_registers@@Base+0x46b0>
   31130:	b	314c0 <rpl_re_set_registers@@Base+0x4524>
   31134:	ldur	x8, [x29, #-32]
   31138:	ldr	w9, [x8]
   3113c:	mov	w10, #0x30f                 	// #783
   31140:	and	w9, w9, w10
   31144:	cbz	w9, 3116c <rpl_re_set_registers@@Base+0x41d0>
   31148:	ldur	x8, [x29, #-64]
   3114c:	ldrb	w9, [x8, #176]
   31150:	mov	w10, #0x4                   	// #4
   31154:	lsr	w9, w9, w10
   31158:	and	w9, w9, #0x1
   3115c:	and	w9, w9, #0xff
   31160:	cbnz	w9, 3116c <rpl_re_set_registers@@Base+0x41d0>
   31164:	ldur	x0, [x29, #-64]
   31168:	bl	32428 <rpl_re_set_registers@@Base+0x548c>
   3116c:	ldur	x8, [x29, #-32]
   31170:	ldr	w9, [x8]
   31174:	cmp	w9, #0x100
   31178:	b.eq	3118c <rpl_re_set_registers@@Base+0x41f0>  // b.none
   3117c:	ldur	x8, [x29, #-32]
   31180:	ldr	w9, [x8]
   31184:	cmp	w9, #0x200
   31188:	b.ne	3129c <rpl_re_set_registers@@Base+0x4300>  // b.any
   3118c:	ldur	x8, [x29, #-32]
   31190:	ldr	w9, [x8]
   31194:	cmp	w9, #0x100
   31198:	b.ne	311d4 <rpl_re_set_registers@@Base+0x4238>  // b.any
   3119c:	ldur	x8, [x29, #-32]
   311a0:	mov	w9, #0x6                   	// #6
   311a4:	str	w9, [x8]
   311a8:	ldur	x0, [x29, #-64]
   311ac:	ldur	x3, [x29, #-32]
   311b0:	mov	x8, xzr
   311b4:	mov	x1, x8
   311b8:	mov	x2, x8
   311bc:	bl	3165c <rpl_re_set_registers@@Base+0x46c0>
   311c0:	str	x0, [sp, #72]
   311c4:	ldur	x8, [x29, #-32]
   311c8:	mov	w9, #0x9                   	// #9
   311cc:	str	w9, [x8]
   311d0:	b	31208 <rpl_re_set_registers@@Base+0x426c>
   311d4:	ldur	x8, [x29, #-32]
   311d8:	mov	w9, #0x5                   	// #5
   311dc:	str	w9, [x8]
   311e0:	ldur	x0, [x29, #-64]
   311e4:	ldur	x3, [x29, #-32]
   311e8:	mov	x8, xzr
   311ec:	mov	x1, x8
   311f0:	mov	x2, x8
   311f4:	bl	3165c <rpl_re_set_registers@@Base+0x46c0>
   311f8:	str	x0, [sp, #72]
   311fc:	ldur	x8, [x29, #-32]
   31200:	mov	w9, #0xa                   	// #10
   31204:	str	w9, [x8]
   31208:	ldur	x0, [x29, #-64]
   3120c:	ldur	x3, [x29, #-32]
   31210:	mov	x8, xzr
   31214:	mov	x1, x8
   31218:	mov	x2, x8
   3121c:	bl	3165c <rpl_re_set_registers@@Base+0x46c0>
   31220:	str	x0, [sp, #64]
   31224:	ldur	x0, [x29, #-64]
   31228:	ldr	x1, [sp, #72]
   3122c:	ldr	x2, [sp, #64]
   31230:	mov	w3, #0xa                   	// #10
   31234:	bl	2fc6c <rpl_re_set_registers@@Base+0x2cd0>
   31238:	stur	x0, [x29, #-72]
   3123c:	ldr	x8, [sp, #72]
   31240:	mov	w9, #0x1                   	// #1
   31244:	str	w9, [sp, #24]
   31248:	cbz	x8, 3126c <rpl_re_set_registers@@Base+0x42d0>
   3124c:	ldr	x8, [sp, #64]
   31250:	mov	w9, #0x1                   	// #1
   31254:	str	w9, [sp, #24]
   31258:	cbz	x8, 3126c <rpl_re_set_registers@@Base+0x42d0>
   3125c:	ldur	x8, [x29, #-72]
   31260:	cmp	x8, #0x0
   31264:	cset	w9, eq  // eq = none
   31268:	str	w9, [sp, #24]
   3126c:	ldr	w8, [sp, #24]
   31270:	and	w8, w8, #0x1
   31274:	mov	w0, w8
   31278:	sxtw	x9, w0
   3127c:	cbz	x9, 31298 <rpl_re_set_registers@@Base+0x42fc>
   31280:	ldur	x8, [x29, #-56]
   31284:	mov	w9, #0xc                   	// #12
   31288:	str	w9, [x8]
   3128c:	mov	x8, xzr
   31290:	stur	x8, [x29, #-8]
   31294:	b	3164c <rpl_re_set_registers@@Base+0x46b0>
   31298:	b	312ec <rpl_re_set_registers@@Base+0x4350>
   3129c:	ldur	x0, [x29, #-64]
   312a0:	ldur	x3, [x29, #-32]
   312a4:	mov	x8, xzr
   312a8:	mov	x1, x8
   312ac:	mov	x2, x8
   312b0:	bl	3165c <rpl_re_set_registers@@Base+0x46c0>
   312b4:	stur	x0, [x29, #-72]
   312b8:	ldur	x8, [x29, #-72]
   312bc:	cmp	x8, #0x0
   312c0:	cset	w9, eq  // eq = none
   312c4:	and	w9, w9, #0x1
   312c8:	mov	w0, w9
   312cc:	sxtw	x8, w0
   312d0:	cbz	x8, 312ec <rpl_re_set_registers@@Base+0x4350>
   312d4:	ldur	x8, [x29, #-56]
   312d8:	mov	w9, #0xc                   	// #12
   312dc:	str	w9, [x8]
   312e0:	mov	x8, xzr
   312e4:	stur	x8, [x29, #-8]
   312e8:	b	3164c <rpl_re_set_registers@@Base+0x46b0>
   312ec:	ldur	x0, [x29, #-32]
   312f0:	ldur	x1, [x29, #-16]
   312f4:	ldur	x2, [x29, #-40]
   312f8:	bl	2f9f0 <rpl_re_set_registers@@Base+0x2a54>
   312fc:	ldur	x8, [x29, #-72]
   31300:	stur	x8, [x29, #-8]
   31304:	b	3164c <rpl_re_set_registers@@Base+0x46b0>
   31308:	ldur	x0, [x29, #-64]
   3130c:	ldur	x3, [x29, #-32]
   31310:	mov	x8, xzr
   31314:	mov	x1, x8
   31318:	mov	x2, x8
   3131c:	bl	3165c <rpl_re_set_registers@@Base+0x46c0>
   31320:	stur	x0, [x29, #-72]
   31324:	ldur	x8, [x29, #-72]
   31328:	cmp	x8, #0x0
   3132c:	cset	w9, eq  // eq = none
   31330:	and	w9, w9, #0x1
   31334:	mov	w0, w9
   31338:	sxtw	x8, w0
   3133c:	cbz	x8, 31358 <rpl_re_set_registers@@Base+0x43bc>
   31340:	ldur	x8, [x29, #-56]
   31344:	mov	w9, #0xc                   	// #12
   31348:	str	w9, [x8]
   3134c:	mov	x8, xzr
   31350:	stur	x8, [x29, #-8]
   31354:	b	3164c <rpl_re_set_registers@@Base+0x46b0>
   31358:	ldur	x8, [x29, #-64]
   3135c:	ldr	w9, [x8, #180]
   31360:	cmp	w9, #0x1
   31364:	b.le	3137c <rpl_re_set_registers@@Base+0x43e0>
   31368:	ldur	x8, [x29, #-64]
   3136c:	ldrb	w9, [x8, #176]
   31370:	and	w9, w9, #0xfffffffd
   31374:	orr	w9, w9, #0x2
   31378:	strb	w9, [x8, #176]
   3137c:	b	314c0 <rpl_re_set_registers@@Base+0x4524>
   31380:	ldur	x0, [x29, #-64]
   31384:	ldur	x8, [x29, #-16]
   31388:	ldr	x1, [x8, #120]
   3138c:	ldur	x8, [x29, #-32]
   31390:	ldr	w9, [x8, #8]
   31394:	and	w9, w9, #0xff
   31398:	cmp	w9, #0x21
   3139c:	cset	w9, eq  // eq = none
   313a0:	ldur	x5, [x29, #-56]
   313a4:	adrp	x2, 45000 <vasnprintf@@Base+0x2e4c>
   313a8:	add	x2, x2, #0x5be
   313ac:	adrp	x3, 45000 <vasnprintf@@Base+0x2e4c>
   313b0:	add	x3, x3, #0x5c4
   313b4:	and	w4, w9, #0x1
   313b8:	bl	325f8 <rpl_re_set_registers@@Base+0x565c>
   313bc:	stur	x0, [x29, #-72]
   313c0:	ldur	x8, [x29, #-56]
   313c4:	ldr	w9, [x8]
   313c8:	mov	w10, #0x0                   	// #0
   313cc:	str	w10, [sp, #20]
   313d0:	cbz	w9, 313e4 <rpl_re_set_registers@@Base+0x4448>
   313d4:	ldur	x8, [x29, #-72]
   313d8:	cmp	x8, #0x0
   313dc:	cset	w9, eq  // eq = none
   313e0:	str	w9, [sp, #20]
   313e4:	ldr	w8, [sp, #20]
   313e8:	and	w8, w8, #0x1
   313ec:	mov	w0, w8
   313f0:	sxtw	x9, w0
   313f4:	cbz	x9, 31404 <rpl_re_set_registers@@Base+0x4468>
   313f8:	mov	x8, xzr
   313fc:	stur	x8, [x29, #-8]
   31400:	b	3164c <rpl_re_set_registers@@Base+0x46b0>
   31404:	b	314c0 <rpl_re_set_registers@@Base+0x4524>
   31408:	ldur	x0, [x29, #-64]
   3140c:	ldur	x8, [x29, #-16]
   31410:	ldr	x1, [x8, #120]
   31414:	ldur	x8, [x29, #-32]
   31418:	ldr	w9, [x8, #8]
   3141c:	and	w9, w9, #0xff
   31420:	cmp	w9, #0x23
   31424:	cset	w9, eq  // eq = none
   31428:	ldur	x5, [x29, #-56]
   3142c:	adrp	x2, 45000 <vasnprintf@@Base+0x2e4c>
   31430:	add	x2, x2, #0x5c6
   31434:	adrp	x3, 44000 <vasnprintf@@Base+0x1e4c>
   31438:	add	x3, x3, #0x4d7
   3143c:	and	w4, w9, #0x1
   31440:	bl	325f8 <rpl_re_set_registers@@Base+0x565c>
   31444:	stur	x0, [x29, #-72]
   31448:	ldur	x8, [x29, #-56]
   3144c:	ldr	w9, [x8]
   31450:	mov	w10, #0x0                   	// #0
   31454:	str	w10, [sp, #16]
   31458:	cbz	w9, 3146c <rpl_re_set_registers@@Base+0x44d0>
   3145c:	ldur	x8, [x29, #-72]
   31460:	cmp	x8, #0x0
   31464:	cset	w9, eq  // eq = none
   31468:	str	w9, [sp, #16]
   3146c:	ldr	w8, [sp, #16]
   31470:	and	w8, w8, #0x1
   31474:	mov	w0, w8
   31478:	sxtw	x9, w0
   3147c:	cbz	x9, 3148c <rpl_re_set_registers@@Base+0x44f0>
   31480:	mov	x8, xzr
   31484:	stur	x8, [x29, #-8]
   31488:	b	3164c <rpl_re_set_registers@@Base+0x46b0>
   3148c:	b	314c0 <rpl_re_set_registers@@Base+0x4524>
   31490:	mov	x8, xzr
   31494:	stur	x8, [x29, #-8]
   31498:	b	3164c <rpl_re_set_registers@@Base+0x46b0>
   3149c:	ldur	x8, [x29, #-56]
   314a0:	mov	w9, #0x5                   	// #5
   314a4:	str	w9, [x8]
   314a8:	mov	x8, xzr
   314ac:	stur	x8, [x29, #-8]
   314b0:	b	3164c <rpl_re_set_registers@@Base+0x46b0>
   314b4:	mov	x8, xzr
   314b8:	stur	x8, [x29, #-8]
   314bc:	b	3164c <rpl_re_set_registers@@Base+0x46b0>
   314c0:	ldur	x0, [x29, #-32]
   314c4:	ldur	x1, [x29, #-16]
   314c8:	ldur	x2, [x29, #-40]
   314cc:	bl	2f9f0 <rpl_re_set_registers@@Base+0x2a54>
   314d0:	ldur	x8, [x29, #-32]
   314d4:	ldr	w9, [x8, #8]
   314d8:	and	w9, w9, #0xff
   314dc:	mov	w10, #0x1                   	// #1
   314e0:	cmp	w9, #0xb
   314e4:	str	w10, [sp, #12]
   314e8:	b.eq	3153c <rpl_re_set_registers@@Base+0x45a0>  // b.none
   314ec:	ldur	x8, [x29, #-32]
   314f0:	ldr	w9, [x8, #8]
   314f4:	and	w9, w9, #0xff
   314f8:	mov	w10, #0x1                   	// #1
   314fc:	cmp	w9, #0x12
   31500:	str	w10, [sp, #12]
   31504:	b.eq	3153c <rpl_re_set_registers@@Base+0x45a0>  // b.none
   31508:	ldur	x8, [x29, #-32]
   3150c:	ldr	w9, [x8, #8]
   31510:	and	w9, w9, #0xff
   31514:	mov	w10, #0x1                   	// #1
   31518:	cmp	w9, #0x13
   3151c:	str	w10, [sp, #12]
   31520:	b.eq	3153c <rpl_re_set_registers@@Base+0x45a0>  // b.none
   31524:	ldur	x8, [x29, #-32]
   31528:	ldr	w9, [x8, #8]
   3152c:	and	w9, w9, #0xff
   31530:	cmp	w9, #0x17
   31534:	cset	w9, eq  // eq = none
   31538:	str	w9, [sp, #12]
   3153c:	ldr	w8, [sp, #12]
   31540:	tbnz	w8, #0, 31548 <rpl_re_set_registers@@Base+0x45ac>
   31544:	b	31644 <rpl_re_set_registers@@Base+0x46a8>
   31548:	ldur	x0, [x29, #-72]
   3154c:	ldur	x1, [x29, #-16]
   31550:	ldur	x2, [x29, #-64]
   31554:	ldur	x3, [x29, #-32]
   31558:	ldur	x4, [x29, #-40]
   3155c:	ldur	x5, [x29, #-56]
   31560:	bl	32904 <rpl_re_set_registers@@Base+0x5968>
   31564:	str	x0, [sp, #56]
   31568:	ldur	x8, [x29, #-56]
   3156c:	ldr	w9, [x8]
   31570:	mov	w10, #0x0                   	// #0
   31574:	str	w10, [sp, #8]
   31578:	cbz	w9, 3158c <rpl_re_set_registers@@Base+0x45f0>
   3157c:	ldr	x8, [sp, #56]
   31580:	cmp	x8, #0x0
   31584:	cset	w9, eq  // eq = none
   31588:	str	w9, [sp, #8]
   3158c:	ldr	w8, [sp, #8]
   31590:	and	w8, w8, #0x1
   31594:	mov	w0, w8
   31598:	sxtw	x9, w0
   3159c:	cbz	x9, 315cc <rpl_re_set_registers@@Base+0x4630>
   315a0:	ldur	x8, [x29, #-72]
   315a4:	cbz	x8, 315c0 <rpl_re_set_registers@@Base+0x4624>
   315a8:	ldur	x0, [x29, #-72]
   315ac:	adrp	x1, 30000 <rpl_re_set_registers@@Base+0x3064>
   315b0:	add	x1, x1, #0xc44
   315b4:	mov	x8, xzr
   315b8:	mov	x2, x8
   315bc:	bl	30b08 <rpl_re_set_registers@@Base+0x3b6c>
   315c0:	mov	x8, xzr
   315c4:	stur	x8, [x29, #-8]
   315c8:	b	3164c <rpl_re_set_registers@@Base+0x46b0>
   315cc:	ldr	x8, [sp, #56]
   315d0:	stur	x8, [x29, #-72]
   315d4:	ldur	x8, [x29, #-40]
   315d8:	and	x8, x8, #0x1000000
   315dc:	cbz	x8, 31640 <rpl_re_set_registers@@Base+0x46a4>
   315e0:	ldur	x8, [x29, #-32]
   315e4:	ldr	w9, [x8, #8]
   315e8:	and	w9, w9, #0xff
   315ec:	cmp	w9, #0xb
   315f0:	b.eq	31608 <rpl_re_set_registers@@Base+0x466c>  // b.none
   315f4:	ldur	x8, [x29, #-32]
   315f8:	ldr	w9, [x8, #8]
   315fc:	and	w9, w9, #0xff
   31600:	cmp	w9, #0x17
   31604:	b.ne	31640 <rpl_re_set_registers@@Base+0x46a4>  // b.any
   31608:	ldur	x8, [x29, #-72]
   3160c:	cbz	x8, 31628 <rpl_re_set_registers@@Base+0x468c>
   31610:	ldur	x0, [x29, #-72]
   31614:	adrp	x1, 30000 <rpl_re_set_registers@@Base+0x3064>
   31618:	add	x1, x1, #0xc44
   3161c:	mov	x8, xzr
   31620:	mov	x2, x8
   31624:	bl	30b08 <rpl_re_set_registers@@Base+0x3b6c>
   31628:	ldur	x8, [x29, #-56]
   3162c:	mov	w9, #0xd                   	// #13
   31630:	str	w9, [x8]
   31634:	mov	x8, xzr
   31638:	stur	x8, [x29, #-8]
   3163c:	b	3164c <rpl_re_set_registers@@Base+0x46b0>
   31640:	b	314d0 <rpl_re_set_registers@@Base+0x4534>
   31644:	ldur	x8, [x29, #-72]
   31648:	stur	x8, [x29, #-8]
   3164c:	ldur	x0, [x29, #-8]
   31650:	ldp	x29, x30, [sp, #160]
   31654:	add	sp, sp, #0xb0
   31658:	ret
   3165c:	sub	sp, sp, #0x50
   31660:	stp	x29, x30, [sp, #64]
   31664:	add	x29, sp, #0x40
   31668:	stur	x0, [x29, #-16]
   3166c:	stur	x1, [x29, #-24]
   31670:	str	x2, [sp, #32]
   31674:	str	x3, [sp, #24]
   31678:	ldur	x8, [x29, #-16]
   3167c:	ldrsw	x8, [x8, #128]
   31680:	cmp	x8, #0xf
   31684:	cset	w9, eq  // eq = none
   31688:	and	w9, w9, #0x1
   3168c:	mov	w0, w9
   31690:	sxtw	x8, w0
   31694:	cbz	x8, 316dc <rpl_re_set_registers@@Base+0x4740>
   31698:	mov	x0, #0x3c8                 	// #968
   3169c:	bl	af10 <malloc@plt>
   316a0:	str	x0, [sp, #8]
   316a4:	ldr	x8, [sp, #8]
   316a8:	cbnz	x8, 316b8 <rpl_re_set_registers@@Base+0x471c>
   316ac:	mov	x8, xzr
   316b0:	stur	x8, [x29, #-8]
   316b4:	b	317ac <rpl_re_set_registers@@Base+0x4810>
   316b8:	ldur	x8, [x29, #-16]
   316bc:	ldr	x8, [x8, #112]
   316c0:	ldr	x9, [sp, #8]
   316c4:	str	x8, [x9]
   316c8:	ldr	x8, [sp, #8]
   316cc:	ldur	x9, [x29, #-16]
   316d0:	str	x8, [x9, #112]
   316d4:	ldur	x8, [x29, #-16]
   316d8:	str	wzr, [x8, #128]
   316dc:	ldur	x8, [x29, #-16]
   316e0:	ldr	x8, [x8, #112]
   316e4:	add	x8, x8, #0x8
   316e8:	ldur	x9, [x29, #-16]
   316ec:	ldrsw	x10, [x9, #128]
   316f0:	mov	w11, w10
   316f4:	add	w11, w11, #0x1
   316f8:	str	w11, [x9, #128]
   316fc:	mov	x9, #0x40                  	// #64
   31700:	mul	x9, x9, x10
   31704:	add	x8, x8, x9
   31708:	str	x8, [sp, #16]
   3170c:	ldr	x8, [sp, #16]
   31710:	mov	x9, xzr
   31714:	str	x9, [x8]
   31718:	ldur	x8, [x29, #-24]
   3171c:	ldr	x10, [sp, #16]
   31720:	str	x8, [x10, #8]
   31724:	ldr	x8, [sp, #32]
   31728:	ldr	x10, [sp, #16]
   3172c:	str	x8, [x10, #16]
   31730:	ldr	x8, [sp, #16]
   31734:	ldr	x10, [sp, #24]
   31738:	ldr	q0, [x10]
   3173c:	stur	q0, [x8, #40]
   31740:	ldr	x8, [sp, #16]
   31744:	ldr	w11, [x8, #48]
   31748:	and	w11, w11, #0xfffbffff
   3174c:	str	w11, [x8, #48]
   31750:	ldr	x8, [sp, #16]
   31754:	ldr	w11, [x8, #48]
   31758:	and	w11, w11, #0xfff7ffff
   3175c:	str	w11, [x8, #48]
   31760:	ldr	x8, [sp, #16]
   31764:	str	x9, [x8, #24]
   31768:	ldr	x8, [sp, #16]
   3176c:	str	x9, [x8, #32]
   31770:	ldr	x8, [sp, #16]
   31774:	mov	x9, #0xffffffffffffffff    	// #-1
   31778:	str	x9, [x8, #56]
   3177c:	ldur	x8, [x29, #-24]
   31780:	cbz	x8, 31790 <rpl_re_set_registers@@Base+0x47f4>
   31784:	ldr	x8, [sp, #16]
   31788:	ldur	x9, [x29, #-24]
   3178c:	str	x8, [x9]
   31790:	ldr	x8, [sp, #32]
   31794:	cbz	x8, 317a4 <rpl_re_set_registers@@Base+0x4808>
   31798:	ldr	x8, [sp, #16]
   3179c:	ldr	x9, [sp, #32]
   317a0:	str	x8, [x9]
   317a4:	ldr	x8, [sp, #16]
   317a8:	stur	x8, [x29, #-8]
   317ac:	ldur	x0, [x29, #-8]
   317b0:	ldp	x29, x30, [sp, #64]
   317b4:	add	sp, sp, #0x50
   317b8:	ret
   317bc:	sub	sp, sp, #0x70
   317c0:	stp	x29, x30, [sp, #96]
   317c4:	add	x29, sp, #0x60
   317c8:	stur	x0, [x29, #-16]
   317cc:	stur	x1, [x29, #-24]
   317d0:	stur	x2, [x29, #-32]
   317d4:	stur	x3, [x29, #-40]
   317d8:	str	x4, [sp, #48]
   317dc:	str	x5, [sp, #40]
   317e0:	ldur	x8, [x29, #-24]
   317e4:	ldr	x8, [x8]
   317e8:	str	x8, [sp, #32]
   317ec:	ldur	x8, [x29, #-24]
   317f0:	ldr	x9, [x8, #48]
   317f4:	add	x10, x9, #0x1
   317f8:	str	x10, [x8, #48]
   317fc:	str	x9, [sp, #16]
   31800:	ldur	x0, [x29, #-32]
   31804:	ldur	x1, [x29, #-16]
   31808:	ldur	x8, [x29, #-40]
   3180c:	orr	x2, x8, #0x800000
   31810:	bl	2f9f0 <rpl_re_set_registers@@Base+0x2a54>
   31814:	ldur	x8, [x29, #-32]
   31818:	ldr	w11, [x8, #8]
   3181c:	and	w11, w11, #0xff
   31820:	cmp	w11, #0x9
   31824:	b.ne	31834 <rpl_re_set_registers@@Base+0x4898>  // b.any
   31828:	mov	x8, xzr
   3182c:	str	x8, [sp, #24]
   31830:	b	318ec <rpl_re_set_registers@@Base+0x4950>
   31834:	ldur	x0, [x29, #-16]
   31838:	ldur	x1, [x29, #-24]
   3183c:	ldur	x2, [x29, #-32]
   31840:	ldur	x3, [x29, #-40]
   31844:	ldr	x4, [sp, #48]
   31848:	ldr	x5, [sp, #40]
   3184c:	bl	2fa34 <rpl_re_set_registers@@Base+0x2a98>
   31850:	str	x0, [sp, #24]
   31854:	ldr	x8, [sp, #40]
   31858:	ldr	w9, [x8]
   3185c:	mov	w10, #0x0                   	// #0
   31860:	str	w10, [sp, #12]
   31864:	cbnz	w9, 31880 <rpl_re_set_registers@@Base+0x48e4>
   31868:	ldur	x8, [x29, #-32]
   3186c:	ldr	w9, [x8, #8]
   31870:	and	w9, w9, #0xff
   31874:	cmp	w9, #0x9
   31878:	cset	w9, ne  // ne = any
   3187c:	str	w9, [sp, #12]
   31880:	ldr	w8, [sp, #12]
   31884:	and	w8, w8, #0x1
   31888:	mov	w0, w8
   3188c:	sxtw	x9, w0
   31890:	cbz	x9, 318c0 <rpl_re_set_registers@@Base+0x4924>
   31894:	ldr	x8, [sp, #24]
   31898:	cbz	x8, 318b4 <rpl_re_set_registers@@Base+0x4918>
   3189c:	ldr	x0, [sp, #24]
   318a0:	adrp	x1, 30000 <rpl_re_set_registers@@Base+0x3064>
   318a4:	add	x1, x1, #0xc44
   318a8:	mov	x8, xzr
   318ac:	mov	x2, x8
   318b0:	bl	30b08 <rpl_re_set_registers@@Base+0x3b6c>
   318b4:	ldr	x8, [sp, #40]
   318b8:	mov	w9, #0x8                   	// #8
   318bc:	str	w9, [x8]
   318c0:	ldr	x8, [sp, #40]
   318c4:	ldr	w9, [x8]
   318c8:	cmp	w9, #0x0
   318cc:	cset	w9, ne  // ne = any
   318d0:	and	w9, w9, #0x1
   318d4:	mov	w0, w9
   318d8:	sxtw	x8, w0
   318dc:	cbz	x8, 318ec <rpl_re_set_registers@@Base+0x4950>
   318e0:	mov	x8, xzr
   318e4:	stur	x8, [x29, #-8]
   318e8:	b	31980 <rpl_re_set_registers@@Base+0x49e4>
   318ec:	ldr	x8, [sp, #16]
   318f0:	cmp	x8, #0x8
   318f4:	b.hi	3191c <rpl_re_set_registers@@Base+0x4980>  // b.pmore
   318f8:	ldr	x8, [sp, #16]
   318fc:	mov	w9, #0x1                   	// #1
   31900:	lsl	w8, w9, w8
   31904:	mov	w0, w8
   31908:	sxtw	x10, w0
   3190c:	ldr	x11, [sp, #32]
   31910:	ldr	x12, [x11, #168]
   31914:	orr	x10, x12, x10
   31918:	str	x10, [x11, #168]
   3191c:	ldr	x0, [sp, #32]
   31920:	ldr	x1, [sp, #24]
   31924:	mov	x8, xzr
   31928:	mov	x2, x8
   3192c:	mov	w3, #0x11                  	// #17
   31930:	bl	2fc6c <rpl_re_set_registers@@Base+0x2cd0>
   31934:	str	x0, [sp, #24]
   31938:	ldr	x8, [sp, #24]
   3193c:	cmp	x8, #0x0
   31940:	cset	w9, eq  // eq = none
   31944:	and	w9, w9, #0x1
   31948:	mov	w0, w9
   3194c:	sxtw	x8, w0
   31950:	cbz	x8, 3196c <rpl_re_set_registers@@Base+0x49d0>
   31954:	ldr	x8, [sp, #40]
   31958:	mov	w9, #0xc                   	// #12
   3195c:	str	w9, [x8]
   31960:	mov	x8, xzr
   31964:	stur	x8, [x29, #-8]
   31968:	b	31980 <rpl_re_set_registers@@Base+0x49e4>
   3196c:	ldr	x8, [sp, #16]
   31970:	ldr	x9, [sp, #24]
   31974:	str	x8, [x9, #40]
   31978:	ldr	x8, [sp, #24]
   3197c:	stur	x8, [x29, #-8]
   31980:	ldur	x0, [x29, #-8]
   31984:	ldp	x29, x30, [sp, #96]
   31988:	add	sp, sp, #0x70
   3198c:	ret
   31990:	sub	sp, sp, #0x190
   31994:	stp	x29, x30, [sp, #368]
   31998:	str	x28, [sp, #384]
   3199c:	add	x29, sp, #0x170
   319a0:	sub	x8, x29, #0x88
   319a4:	mov	w9, #0x0                   	// #0
   319a8:	mov	w10, #0x1                   	// #1
   319ac:	mov	x11, #0x20                  	// #32
   319b0:	mov	x12, #0x1                   	// #1
   319b4:	mov	x13, #0x50                  	// #80
   319b8:	str	x0, [x8, #120]
   319bc:	str	x1, [x8, #112]
   319c0:	str	x2, [x8, #104]
   319c4:	str	x3, [x8, #96]
   319c8:	str	x4, [x8, #88]
   319cc:	str	xzr, [x8, #48]
   319d0:	str	xzr, [x8, #40]
   319d4:	str	xzr, [x8, #32]
   319d8:	str	xzr, [x8, #24]
   319dc:	str	xzr, [x8, #16]
   319e0:	sturb	w9, [x29, #-121]
   319e4:	sturb	w10, [x29, #-141]
   319e8:	mov	x0, x11
   319ec:	mov	x1, x12
   319f0:	str	x8, [sp, #64]
   319f4:	str	x12, [sp, #56]
   319f8:	str	x13, [sp, #48]
   319fc:	bl	b2e0 <calloc@plt>
   31a00:	ldr	x8, [sp, #64]
   31a04:	str	x0, [x8, #64]
   31a08:	ldr	x0, [sp, #48]
   31a0c:	ldr	x1, [sp, #56]
   31a10:	bl	b2e0 <calloc@plt>
   31a14:	ldr	x8, [sp, #64]
   31a18:	str	x0, [x8, #56]
   31a1c:	ldr	x11, [x8, #64]
   31a20:	mov	w9, #0x1                   	// #1
   31a24:	str	w9, [sp, #44]
   31a28:	cbz	x11, 31a40 <rpl_re_set_registers@@Base+0x4aa4>
   31a2c:	ldr	x8, [sp, #64]
   31a30:	ldr	x9, [x8, #56]
   31a34:	cmp	x9, #0x0
   31a38:	cset	w10, eq  // eq = none
   31a3c:	str	w10, [sp, #44]
   31a40:	ldr	w8, [sp, #44]
   31a44:	and	w8, w8, #0x1
   31a48:	mov	w0, w8
   31a4c:	sxtw	x9, w0
   31a50:	cbz	x9, 31a88 <rpl_re_set_registers@@Base+0x4aec>
   31a54:	ldr	x8, [sp, #64]
   31a58:	ldr	x0, [x8, #64]
   31a5c:	bl	a930 <free@plt>
   31a60:	ldr	x8, [sp, #64]
   31a64:	ldr	x0, [x8, #56]
   31a68:	bl	a930 <free@plt>
   31a6c:	ldr	x8, [sp, #64]
   31a70:	ldr	x9, [x8, #88]
   31a74:	mov	w10, #0xc                   	// #12
   31a78:	str	w10, [x9]
   31a7c:	mov	x9, xzr
   31a80:	str	x9, [x8, #128]
   31a84:	b	32410 <rpl_re_set_registers@@Base+0x5474>
   31a88:	ldr	x8, [sp, #64]
   31a8c:	ldr	x0, [x8, #104]
   31a90:	ldr	x1, [x8, #120]
   31a94:	ldr	x2, [x8, #96]
   31a98:	bl	32f8c <rpl_re_set_registers@@Base+0x5ff0>
   31a9c:	stur	w0, [x29, #-140]
   31aa0:	ldr	x8, [sp, #64]
   31aa4:	ldr	x9, [x8, #104]
   31aa8:	ldr	w10, [x9, #8]
   31aac:	and	w10, w10, #0xff
   31ab0:	cmp	w10, #0x2
   31ab4:	cset	w10, eq  // eq = none
   31ab8:	and	w10, w10, #0x1
   31abc:	mov	w1, w10
   31ac0:	sxtw	x9, w1
   31ac4:	cbz	x9, 31adc <rpl_re_set_registers@@Base+0x4b40>
   31ac8:	ldr	x8, [sp, #64]
   31acc:	ldr	x9, [x8, #88]
   31ad0:	mov	w10, #0x2                   	// #2
   31ad4:	str	w10, [x9]
   31ad8:	b	323ec <rpl_re_set_registers@@Base+0x5450>
   31adc:	ldr	x8, [sp, #64]
   31ae0:	ldr	x9, [x8, #104]
   31ae4:	ldr	w10, [x9, #8]
   31ae8:	and	w10, w10, #0xff
   31aec:	cmp	w10, #0x19
   31af0:	b.ne	31b98 <rpl_re_set_registers@@Base+0x4bfc>  // b.any
   31af4:	ldr	x8, [sp, #64]
   31af8:	ldr	x9, [x8, #56]
   31afc:	ldrb	w10, [x9, #32]
   31b00:	and	w10, w10, #0xfffffffe
   31b04:	orr	w10, w10, #0x1
   31b08:	strb	w10, [x9, #32]
   31b0c:	mov	w10, #0x1                   	// #1
   31b10:	sturb	w10, [x29, #-121]
   31b14:	ldr	x9, [x8, #96]
   31b18:	and	x9, x9, #0x100
   31b1c:	cbz	x9, 31b30 <rpl_re_set_registers@@Base+0x4b94>
   31b20:	ldr	x8, [sp, #64]
   31b24:	ldr	x0, [x8, #64]
   31b28:	mov	x1, #0xa                   	// #10
   31b2c:	bl	332cc <rpl_re_set_registers@@Base+0x6330>
   31b30:	ldursw	x8, [x29, #-140]
   31b34:	ldr	x9, [sp, #64]
   31b38:	ldr	x10, [x9, #120]
   31b3c:	ldr	x11, [x10, #72]
   31b40:	add	x8, x11, x8
   31b44:	str	x8, [x10, #72]
   31b48:	ldr	x0, [x9, #104]
   31b4c:	ldr	x1, [x9, #120]
   31b50:	ldr	x2, [x9, #96]
   31b54:	bl	32f8c <rpl_re_set_registers@@Base+0x5ff0>
   31b58:	stur	w0, [x29, #-140]
   31b5c:	ldr	x8, [sp, #64]
   31b60:	ldr	x9, [x8, #104]
   31b64:	ldr	w12, [x9, #8]
   31b68:	and	w12, w12, #0xff
   31b6c:	cmp	w12, #0x2
   31b70:	cset	w12, eq  // eq = none
   31b74:	and	w12, w12, #0x1
   31b78:	mov	w1, w12
   31b7c:	sxtw	x9, w1
   31b80:	cbz	x9, 31b98 <rpl_re_set_registers@@Base+0x4bfc>
   31b84:	ldr	x8, [sp, #64]
   31b88:	ldr	x9, [x8, #88]
   31b8c:	mov	w10, #0x2                   	// #2
   31b90:	str	w10, [x9]
   31b94:	b	323ec <rpl_re_set_registers@@Base+0x5450>
   31b98:	ldr	x8, [sp, #64]
   31b9c:	ldr	x9, [x8, #104]
   31ba0:	ldr	w10, [x9, #8]
   31ba4:	and	w10, w10, #0xff
   31ba8:	cmp	w10, #0x15
   31bac:	b.ne	31bc8 <rpl_re_set_registers@@Base+0x4c2c>  // b.any
   31bb0:	ldr	x8, [sp, #64]
   31bb4:	ldr	x9, [x8, #104]
   31bb8:	ldr	w10, [x9, #8]
   31bbc:	and	w10, w10, #0xffffff00
   31bc0:	orr	w10, w10, #0x1
   31bc4:	str	w10, [x9, #8]
   31bc8:	str	wzr, [sp, #120]
   31bcc:	mov	w8, #0x0                   	// #0
   31bd0:	strb	w8, [sp, #119]
   31bd4:	sub	x9, x29, #0xa0
   31bd8:	add	x10, sp, #0xa0
   31bdc:	str	x10, [x9, #8]
   31be0:	mov	w8, #0x3                   	// #3
   31be4:	stur	w8, [x29, #-160]
   31be8:	ldr	x10, [sp, #64]
   31bec:	ldr	x1, [x10, #120]
   31bf0:	ldr	x2, [x10, #104]
   31bf4:	ldur	w3, [x29, #-140]
   31bf8:	ldr	x4, [x10, #112]
   31bfc:	ldr	x5, [x10, #96]
   31c00:	ldurb	w8, [x29, #-141]
   31c04:	mov	x0, x9
   31c08:	and	w6, w8, #0x1
   31c0c:	bl	33320 <rpl_re_set_registers@@Base+0x6384>
   31c10:	str	w0, [sp, #124]
   31c14:	ldr	w8, [sp, #124]
   31c18:	cmp	w8, #0x0
   31c1c:	cset	w8, ne  // ne = any
   31c20:	and	w8, w8, #0x1
   31c24:	mov	w1, w8
   31c28:	sxtw	x9, w1
   31c2c:	cbz	x9, 31c44 <rpl_re_set_registers@@Base+0x4ca8>
   31c30:	ldr	w8, [sp, #124]
   31c34:	ldr	x9, [sp, #64]
   31c38:	ldr	x10, [x9, #88]
   31c3c:	str	w8, [x10]
   31c40:	b	323ec <rpl_re_set_registers@@Base+0x5450>
   31c44:	mov	w8, #0x0                   	// #0
   31c48:	sturb	w8, [x29, #-141]
   31c4c:	ldr	x9, [sp, #64]
   31c50:	ldr	x0, [x9, #104]
   31c54:	ldr	x1, [x9, #120]
   31c58:	ldr	x2, [x9, #96]
   31c5c:	bl	32f8c <rpl_re_set_registers@@Base+0x5ff0>
   31c60:	stur	w0, [x29, #-140]
   31c64:	ldur	w8, [x29, #-160]
   31c68:	cmp	w8, #0x4
   31c6c:	b.eq	31d80 <rpl_re_set_registers@@Base+0x4de4>  // b.none
   31c70:	ldur	w8, [x29, #-160]
   31c74:	cmp	w8, #0x2
   31c78:	b.eq	31d80 <rpl_re_set_registers@@Base+0x4de4>  // b.none
   31c7c:	ldr	x8, [sp, #64]
   31c80:	ldr	x9, [x8, #104]
   31c84:	ldr	w10, [x9, #8]
   31c88:	and	w10, w10, #0xff
   31c8c:	cmp	w10, #0x2
   31c90:	cset	w10, eq  // eq = none
   31c94:	and	w10, w10, #0x1
   31c98:	mov	w0, w10
   31c9c:	sxtw	x9, w0
   31ca0:	cbz	x9, 31cb8 <rpl_re_set_registers@@Base+0x4d1c>
   31ca4:	ldr	x8, [sp, #64]
   31ca8:	ldr	x9, [x8, #88]
   31cac:	mov	w10, #0x7                   	// #7
   31cb0:	str	w10, [x9]
   31cb4:	b	323ec <rpl_re_set_registers@@Base+0x5450>
   31cb8:	ldr	x8, [sp, #64]
   31cbc:	ldr	x9, [x8, #104]
   31cc0:	ldr	w10, [x9, #8]
   31cc4:	and	w10, w10, #0xff
   31cc8:	cmp	w10, #0x16
   31ccc:	b.ne	31d80 <rpl_re_set_registers@@Base+0x4de4>  // b.any
   31cd0:	ldursw	x8, [x29, #-140]
   31cd4:	ldr	x9, [sp, #64]
   31cd8:	ldr	x10, [x9, #120]
   31cdc:	ldr	x11, [x10, #72]
   31ce0:	add	x8, x11, x8
   31ce4:	str	x8, [x10, #72]
   31ce8:	ldr	x1, [x9, #120]
   31cec:	ldr	x2, [x9, #96]
   31cf0:	add	x0, sp, #0x60
   31cf4:	bl	32f8c <rpl_re_set_registers@@Base+0x5ff0>
   31cf8:	str	w0, [sp, #120]
   31cfc:	ldr	w12, [sp, #104]
   31d00:	and	w12, w12, #0xff
   31d04:	cmp	w12, #0x2
   31d08:	cset	w12, eq  // eq = none
   31d0c:	and	w12, w12, #0x1
   31d10:	mov	w1, w12
   31d14:	sxtw	x8, w1
   31d18:	cbz	x8, 31d30 <rpl_re_set_registers@@Base+0x4d94>
   31d1c:	ldr	x8, [sp, #64]
   31d20:	ldr	x9, [x8, #88]
   31d24:	mov	w10, #0x7                   	// #7
   31d28:	str	w10, [x9]
   31d2c:	b	323ec <rpl_re_set_registers@@Base+0x5450>
   31d30:	ldr	w8, [sp, #104]
   31d34:	and	w8, w8, #0xff
   31d38:	cmp	w8, #0x15
   31d3c:	b.ne	31d78 <rpl_re_set_registers@@Base+0x4ddc>  // b.any
   31d40:	ldur	w8, [x29, #-140]
   31d44:	mov	w9, wzr
   31d48:	subs	w8, w9, w8
   31d4c:	ldr	x10, [sp, #64]
   31d50:	ldr	x11, [x10, #120]
   31d54:	ldr	x12, [x11, #72]
   31d58:	add	x12, x12, w8, sxtw
   31d5c:	str	x12, [x11, #72]
   31d60:	ldr	x11, [x10, #104]
   31d64:	ldr	w8, [x11, #8]
   31d68:	and	w8, w8, #0xffffff00
   31d6c:	orr	w8, w8, #0x1
   31d70:	str	w8, [x11, #8]
   31d74:	b	31d80 <rpl_re_set_registers@@Base+0x4de4>
   31d78:	mov	w8, #0x1                   	// #1
   31d7c:	strb	w8, [sp, #119]
   31d80:	ldrb	w8, [sp, #119]
   31d84:	and	w8, w8, #0x1
   31d88:	cmp	w8, #0x1
   31d8c:	b.ne	31ea8 <rpl_re_set_registers@@Base+0x4f0c>  // b.any
   31d90:	sub	x8, x29, #0xb0
   31d94:	add	x9, sp, #0x80
   31d98:	str	x9, [x8, #8]
   31d9c:	mov	w10, #0x3                   	// #3
   31da0:	stur	w10, [x29, #-176]
   31da4:	ldr	x9, [sp, #64]
   31da8:	ldr	x1, [x9, #120]
   31dac:	ldr	w3, [sp, #120]
   31db0:	ldr	x4, [x9, #112]
   31db4:	ldr	x5, [x9, #96]
   31db8:	mov	x0, x8
   31dbc:	add	x2, sp, #0x60
   31dc0:	mov	w10, #0x1                   	// #1
   31dc4:	and	w6, w10, #0x1
   31dc8:	bl	33320 <rpl_re_set_registers@@Base+0x6384>
   31dcc:	str	w0, [sp, #124]
   31dd0:	ldr	w10, [sp, #124]
   31dd4:	cmp	w10, #0x0
   31dd8:	cset	w10, ne  // ne = any
   31ddc:	and	w10, w10, #0x1
   31de0:	mov	w1, w10
   31de4:	sxtw	x8, w1
   31de8:	cbz	x8, 31e00 <rpl_re_set_registers@@Base+0x4e64>
   31dec:	ldr	w8, [sp, #124]
   31df0:	ldr	x9, [sp, #64]
   31df4:	ldr	x10, [x9, #88]
   31df8:	str	w8, [x10]
   31dfc:	b	323ec <rpl_re_set_registers@@Base+0x5450>
   31e00:	ldr	x8, [sp, #64]
   31e04:	ldr	x0, [x8, #104]
   31e08:	ldr	x1, [x8, #120]
   31e0c:	ldr	x2, [x8, #96]
   31e10:	bl	32f8c <rpl_re_set_registers@@Base+0x5ff0>
   31e14:	stur	w0, [x29, #-140]
   31e18:	ldr	x8, [sp, #64]
   31e1c:	ldr	x0, [x8, #96]
   31e20:	ldr	x1, [x8, #64]
   31e24:	ldr	x9, [x8, #112]
   31e28:	ldr	w10, [x9, #180]
   31e2c:	cmp	w10, #0x1
   31e30:	str	x0, [sp, #32]
   31e34:	str	x1, [sp, #24]
   31e38:	b.le	31e4c <rpl_re_set_registers@@Base+0x4eb0>
   31e3c:	ldr	x8, [sp, #64]
   31e40:	ldr	x9, [x8, #56]
   31e44:	str	x9, [sp, #16]
   31e48:	b	31e54 <rpl_re_set_registers@@Base+0x4eb8>
   31e4c:	mov	x8, xzr
   31e50:	str	x8, [sp, #16]
   31e54:	ldr	x8, [sp, #16]
   31e58:	ldr	x0, [sp, #32]
   31e5c:	ldr	x1, [sp, #24]
   31e60:	mov	x2, x8
   31e64:	sub	x3, x29, #0x60
   31e68:	sub	x4, x29, #0xa0
   31e6c:	sub	x5, x29, #0xb0
   31e70:	bl	3349c <rpl_re_set_registers@@Base+0x6500>
   31e74:	ldr	x8, [sp, #64]
   31e78:	ldr	x9, [x8, #88]
   31e7c:	str	w0, [x9]
   31e80:	ldr	x9, [x8, #88]
   31e84:	ldr	w10, [x9]
   31e88:	cmp	w10, #0x0
   31e8c:	cset	w10, ne  // ne = any
   31e90:	and	w10, w10, #0x1
   31e94:	mov	w1, w10
   31e98:	sxtw	x9, w1
   31e9c:	cbz	x9, 31ea4 <rpl_re_set_registers@@Base+0x4f08>
   31ea0:	b	323ec <rpl_re_set_registers@@Base+0x5450>
   31ea4:	b	320c8 <rpl_re_set_registers@@Base+0x512c>
   31ea8:	ldur	w8, [x29, #-160]
   31eac:	subs	w8, w8, #0x0
   31eb0:	mov	w9, w8
   31eb4:	ubfx	x9, x9, #0, #32
   31eb8:	cmp	x9, #0x4
   31ebc:	str	x9, [sp, #8]
   31ec0:	b.hi	320a8 <rpl_re_set_registers@@Base+0x510c>  // b.pmore
   31ec4:	adrp	x8, 47000 <vasnprintf@@Base+0x4e4c>
   31ec8:	add	x8, x8, #0x580
   31ecc:	ldr	x11, [sp, #8]
   31ed0:	ldrsw	x10, [x8, x11, lsl #2]
   31ed4:	add	x9, x8, x10
   31ed8:	br	x9
   31edc:	ldr	x8, [sp, #64]
   31ee0:	ldr	x0, [x8, #64]
   31ee4:	ldurb	w9, [x29, #-152]
   31ee8:	mov	w1, w9
   31eec:	bl	332cc <rpl_re_set_registers@@Base+0x6330>
   31ef0:	b	320c8 <rpl_re_set_registers@@Base+0x512c>
   31ef4:	ldr	x8, [sp, #64]
   31ef8:	ldr	x9, [x8, #32]
   31efc:	ldr	x10, [x8, #56]
   31f00:	ldr	x10, [x10, #40]
   31f04:	cmp	x9, x10
   31f08:	cset	w11, eq  // eq = none
   31f0c:	and	w11, w11, #0x1
   31f10:	mov	w0, w11
   31f14:	sxtw	x9, w0
   31f18:	cbz	x9, 31f84 <rpl_re_set_registers@@Base+0x4fe8>
   31f1c:	ldr	x8, [sp, #64]
   31f20:	ldr	x9, [x8, #56]
   31f24:	ldr	x9, [x9, #40]
   31f28:	mov	x10, #0x2                   	// #2
   31f2c:	mul	x9, x10, x9
   31f30:	add	x9, x9, #0x1
   31f34:	str	x9, [x8, #32]
   31f38:	ldr	x9, [x8, #56]
   31f3c:	ldr	x0, [x9]
   31f40:	ldr	x9, [x8, #32]
   31f44:	mov	x10, #0x4                   	// #4
   31f48:	mul	x1, x9, x10
   31f4c:	bl	af40 <realloc@plt>
   31f50:	str	x0, [sp, #88]
   31f54:	ldr	x8, [sp, #88]
   31f58:	cmp	x8, #0x0
   31f5c:	cset	w11, eq  // eq = none
   31f60:	and	w11, w11, #0x1
   31f64:	mov	w0, w11
   31f68:	sxtw	x8, w0
   31f6c:	cbz	x8, 31f74 <rpl_re_set_registers@@Base+0x4fd8>
   31f70:	b	323dc <rpl_re_set_registers@@Base+0x5440>
   31f74:	ldr	x8, [sp, #88]
   31f78:	ldr	x9, [sp, #64]
   31f7c:	ldr	x10, [x9, #56]
   31f80:	str	x8, [x10]
   31f84:	ldur	w8, [x29, #-152]
   31f88:	ldr	x9, [sp, #64]
   31f8c:	ldr	x10, [x9, #56]
   31f90:	ldr	x10, [x10]
   31f94:	ldr	x11, [x9, #56]
   31f98:	ldr	x12, [x11, #40]
   31f9c:	add	x13, x12, #0x1
   31fa0:	str	x13, [x11, #40]
   31fa4:	str	w8, [x10, x12, lsl #2]
   31fa8:	b	320c8 <rpl_re_set_registers@@Base+0x512c>
   31fac:	ldr	x8, [sp, #64]
   31fb0:	ldr	x0, [x8, #64]
   31fb4:	ldr	x1, [x8, #56]
   31fb8:	sub	x9, x29, #0xa0
   31fbc:	ldr	x3, [x9, #8]
   31fc0:	sub	x2, x29, #0x70
   31fc4:	bl	33908 <rpl_re_set_registers@@Base+0x696c>
   31fc8:	ldr	x8, [sp, #64]
   31fcc:	ldr	x9, [x8, #88]
   31fd0:	str	w0, [x9]
   31fd4:	ldr	x9, [x8, #88]
   31fd8:	ldr	w10, [x9]
   31fdc:	cmp	w10, #0x0
   31fe0:	cset	w10, ne  // ne = any
   31fe4:	and	w10, w10, #0x1
   31fe8:	mov	w1, w10
   31fec:	sxtw	x9, w1
   31ff0:	cbz	x9, 31ff8 <rpl_re_set_registers@@Base+0x505c>
   31ff4:	b	323ec <rpl_re_set_registers@@Base+0x5450>
   31ff8:	b	320c8 <rpl_re_set_registers@@Base+0x512c>
   31ffc:	ldr	x8, [sp, #64]
   32000:	ldr	x0, [x8, #64]
   32004:	ldr	x1, [x8, #56]
   32008:	sub	x9, x29, #0xa0
   3200c:	ldr	x3, [x9, #8]
   32010:	sub	x2, x29, #0x58
   32014:	bl	33978 <rpl_re_set_registers@@Base+0x69dc>
   32018:	ldr	x8, [sp, #64]
   3201c:	ldr	x9, [x8, #88]
   32020:	str	w0, [x9]
   32024:	ldr	x9, [x8, #88]
   32028:	ldr	w10, [x9]
   3202c:	cmp	w10, #0x0
   32030:	cset	w10, ne  // ne = any
   32034:	and	w10, w10, #0x1
   32038:	mov	w1, w10
   3203c:	sxtw	x9, w1
   32040:	cbz	x9, 32048 <rpl_re_set_registers@@Base+0x50ac>
   32044:	b	323ec <rpl_re_set_registers@@Base+0x5450>
   32048:	b	320c8 <rpl_re_set_registers@@Base+0x512c>
   3204c:	ldr	x8, [sp, #64]
   32050:	ldr	x9, [x8, #120]
   32054:	ldr	x0, [x9, #120]
   32058:	ldr	x1, [x8, #64]
   3205c:	ldr	x2, [x8, #56]
   32060:	sub	x9, x29, #0xa0
   32064:	ldr	x4, [x9, #8]
   32068:	ldr	x5, [x8, #96]
   3206c:	sub	x3, x29, #0x78
   32070:	bl	339f0 <rpl_re_set_registers@@Base+0x6a54>
   32074:	ldr	x8, [sp, #64]
   32078:	ldr	x9, [x8, #88]
   3207c:	str	w0, [x9]
   32080:	ldr	x9, [x8, #88]
   32084:	ldr	w10, [x9]
   32088:	cmp	w10, #0x0
   3208c:	cset	w10, ne  // ne = any
   32090:	and	w10, w10, #0x1
   32094:	mov	w1, w10
   32098:	sxtw	x9, w1
   3209c:	cbz	x9, 320a4 <rpl_re_set_registers@@Base+0x5108>
   320a0:	b	323ec <rpl_re_set_registers@@Base+0x5450>
   320a4:	b	320c8 <rpl_re_set_registers@@Base+0x512c>
   320a8:	adrp	x0, 45000 <vasnprintf@@Base+0x2e4c>
   320ac:	add	x0, x0, #0x5cc
   320b0:	adrp	x1, 45000 <vasnprintf@@Base+0x2e4c>
   320b4:	add	x1, x1, #0x5ce
   320b8:	mov	w2, #0xced                 	// #3309
   320bc:	adrp	x3, 45000 <vasnprintf@@Base+0x2e4c>
   320c0:	add	x3, x3, #0x5da
   320c4:	bl	a910 <__assert_fail@plt>
   320c8:	ldr	x8, [sp, #64]
   320cc:	ldr	x9, [x8, #104]
   320d0:	ldr	w10, [x9, #8]
   320d4:	and	w10, w10, #0xff
   320d8:	cmp	w10, #0x2
   320dc:	cset	w10, eq  // eq = none
   320e0:	and	w10, w10, #0x1
   320e4:	mov	w0, w10
   320e8:	sxtw	x9, w0
   320ec:	cbz	x9, 32104 <rpl_re_set_registers@@Base+0x5168>
   320f0:	ldr	x8, [sp, #64]
   320f4:	ldr	x9, [x8, #88]
   320f8:	mov	w10, #0x7                   	// #7
   320fc:	str	w10, [x9]
   32100:	b	323ec <rpl_re_set_registers@@Base+0x5450>
   32104:	ldr	x8, [sp, #64]
   32108:	ldr	x9, [x8, #104]
   3210c:	ldr	w10, [x9, #8]
   32110:	and	w10, w10, #0xff
   32114:	cmp	w10, #0x15
   32118:	b.ne	32120 <rpl_re_set_registers@@Base+0x5184>  // b.any
   3211c:	b	32124 <rpl_re_set_registers@@Base+0x5188>
   32120:	b	31bc8 <rpl_re_set_registers@@Base+0x4c2c>
   32124:	ldursw	x8, [x29, #-140]
   32128:	ldr	x9, [sp, #64]
   3212c:	ldr	x10, [x9, #120]
   32130:	ldr	x11, [x10, #72]
   32134:	add	x8, x11, x8
   32138:	str	x8, [x10, #72]
   3213c:	ldurb	w12, [x29, #-121]
   32140:	tbnz	w12, #0, 32148 <rpl_re_set_registers@@Base+0x51ac>
   32144:	b	32154 <rpl_re_set_registers@@Base+0x51b8>
   32148:	ldr	x8, [sp, #64]
   3214c:	ldr	x0, [x8, #64]
   32150:	bl	344cc <rpl_re_set_registers@@Base+0x7530>
   32154:	ldr	x8, [sp, #64]
   32158:	ldr	x9, [x8, #112]
   3215c:	ldr	w10, [x9, #180]
   32160:	cmp	w10, #0x1
   32164:	b.le	3217c <rpl_re_set_registers@@Base+0x51e0>
   32168:	ldr	x8, [sp, #64]
   3216c:	ldr	x0, [x8, #64]
   32170:	ldr	x9, [x8, #112]
   32174:	ldr	x1, [x9, #120]
   32178:	bl	34518 <rpl_re_set_registers@@Base+0x757c>
   3217c:	ldr	x8, [sp, #64]
   32180:	ldr	x9, [x8, #56]
   32184:	ldr	x9, [x9, #40]
   32188:	cbnz	x9, 321f8 <rpl_re_set_registers@@Base+0x525c>
   3218c:	ldr	x8, [sp, #64]
   32190:	ldr	x9, [x8, #56]
   32194:	ldr	x9, [x9, #48]
   32198:	cbnz	x9, 321f8 <rpl_re_set_registers@@Base+0x525c>
   3219c:	ldr	x8, [sp, #64]
   321a0:	ldr	x9, [x8, #56]
   321a4:	ldr	x9, [x9, #56]
   321a8:	cbnz	x9, 321f8 <rpl_re_set_registers@@Base+0x525c>
   321ac:	ldr	x8, [sp, #64]
   321b0:	ldr	x9, [x8, #56]
   321b4:	ldr	x9, [x9, #64]
   321b8:	cbnz	x9, 321f8 <rpl_re_set_registers@@Base+0x525c>
   321bc:	ldr	x8, [sp, #64]
   321c0:	ldr	x9, [x8, #112]
   321c4:	ldr	w10, [x9, #180]
   321c8:	cmp	w10, #0x1
   321cc:	b.le	32364 <rpl_re_set_registers@@Base+0x53c8>
   321d0:	ldr	x8, [sp, #64]
   321d4:	ldr	x9, [x8, #56]
   321d8:	ldr	x9, [x9, #72]
   321dc:	cbnz	x9, 321f8 <rpl_re_set_registers@@Base+0x525c>
   321e0:	ldr	x8, [sp, #64]
   321e4:	ldr	x9, [x8, #56]
   321e8:	ldrb	w10, [x9, #32]
   321ec:	and	w10, w10, #0x1
   321f0:	and	w10, w10, #0xff
   321f4:	cbz	w10, 32364 <rpl_re_set_registers@@Base+0x53c8>
   321f8:	ldr	x8, [sp, #64]
   321fc:	ldr	x9, [x8, #112]
   32200:	ldrb	w10, [x9, #176]
   32204:	and	w10, w10, #0xfffffffd
   32208:	orr	w10, w10, #0x2
   3220c:	strb	w10, [x9, #176]
   32210:	sub	x3, x29, #0x40
   32214:	ldur	w10, [x29, #-56]
   32218:	and	w10, w10, #0xffffff00
   3221c:	orr	w10, w10, #0x6
   32220:	stur	w10, [x29, #-56]
   32224:	ldr	x9, [x8, #56]
   32228:	str	x9, [x8, #72]
   3222c:	ldr	x0, [x8, #112]
   32230:	mov	x9, xzr
   32234:	mov	x1, x9
   32238:	mov	x2, x9
   3223c:	bl	3165c <rpl_re_set_registers@@Base+0x46c0>
   32240:	str	x0, [sp, #80]
   32244:	ldr	x8, [sp, #80]
   32248:	cmp	x8, #0x0
   3224c:	cset	w10, eq  // eq = none
   32250:	and	w10, w10, #0x1
   32254:	mov	w0, w10
   32258:	sxtw	x8, w0
   3225c:	cbz	x8, 32264 <rpl_re_set_registers@@Base+0x52c8>
   32260:	b	323dc <rpl_re_set_registers@@Base+0x5440>
   32264:	str	wzr, [sp, #76]
   32268:	ldr	w8, [sp, #76]
   3226c:	cmp	w8, #0x4
   32270:	b.ge	3229c <rpl_re_set_registers@@Base+0x5300>  // b.tcont
   32274:	ldr	x8, [sp, #64]
   32278:	ldr	x9, [x8, #64]
   3227c:	ldrsw	x10, [sp, #76]
   32280:	ldr	x9, [x9, x10, lsl #3]
   32284:	cbz	x9, 3228c <rpl_re_set_registers@@Base+0x52f0>
   32288:	b	3229c <rpl_re_set_registers@@Base+0x5300>
   3228c:	ldr	w8, [sp, #76]
   32290:	add	w8, w8, #0x1
   32294:	str	w8, [sp, #76]
   32298:	b	32268 <rpl_re_set_registers@@Base+0x52cc>
   3229c:	ldr	w8, [sp, #76]
   322a0:	cmp	w8, #0x4
   322a4:	b.ge	32348 <rpl_re_set_registers@@Base+0x53ac>  // b.tcont
   322a8:	sub	x3, x29, #0x40
   322ac:	ldur	w8, [x29, #-56]
   322b0:	and	w8, w8, #0xffffff00
   322b4:	orr	w8, w8, #0x3
   322b8:	stur	w8, [x29, #-56]
   322bc:	ldr	x9, [sp, #64]
   322c0:	ldr	x10, [x9, #64]
   322c4:	str	x10, [x9, #72]
   322c8:	ldr	x0, [x9, #112]
   322cc:	mov	x10, xzr
   322d0:	mov	x1, x10
   322d4:	mov	x2, x10
   322d8:	bl	3165c <rpl_re_set_registers@@Base+0x46c0>
   322dc:	ldr	x9, [sp, #64]
   322e0:	str	x0, [x9]
   322e4:	ldr	x10, [x9]
   322e8:	cmp	x10, #0x0
   322ec:	cset	w8, eq  // eq = none
   322f0:	and	w8, w8, #0x1
   322f4:	mov	w0, w8
   322f8:	sxtw	x10, w0
   322fc:	cbz	x10, 32304 <rpl_re_set_registers@@Base+0x5368>
   32300:	b	323dc <rpl_re_set_registers@@Base+0x5440>
   32304:	ldr	x8, [sp, #64]
   32308:	ldr	x0, [x8, #112]
   3230c:	ldr	x1, [x8]
   32310:	ldr	x2, [sp, #80]
   32314:	mov	w3, #0xa                   	// #10
   32318:	bl	2fc6c <rpl_re_set_registers@@Base+0x2cd0>
   3231c:	ldr	x8, [sp, #64]
   32320:	str	x0, [x8]
   32324:	ldr	x9, [x8]
   32328:	cmp	x9, #0x0
   3232c:	cset	w10, eq  // eq = none
   32330:	and	w10, w10, #0x1
   32334:	mov	w0, w10
   32338:	sxtw	x9, w0
   3233c:	cbz	x9, 32344 <rpl_re_set_registers@@Base+0x53a8>
   32340:	b	323dc <rpl_re_set_registers@@Base+0x5440>
   32344:	b	32360 <rpl_re_set_registers@@Base+0x53c4>
   32348:	ldr	x8, [sp, #64]
   3234c:	ldr	x0, [x8, #64]
   32350:	bl	a930 <free@plt>
   32354:	ldr	x8, [sp, #80]
   32358:	ldr	x9, [sp, #64]
   3235c:	str	x8, [x9]
   32360:	b	323cc <rpl_re_set_registers@@Base+0x5430>
   32364:	ldr	x8, [sp, #64]
   32368:	ldr	x0, [x8, #56]
   3236c:	bl	2d148 <rpl_re_set_registers@@Base+0x1ac>
   32370:	sub	x3, x29, #0x40
   32374:	ldur	w9, [x29, #-56]
   32378:	and	w9, w9, #0xffffff00
   3237c:	orr	w9, w9, #0x3
   32380:	stur	w9, [x29, #-56]
   32384:	ldr	x8, [sp, #64]
   32388:	ldr	x10, [x8, #64]
   3238c:	str	x10, [x8, #72]
   32390:	ldr	x0, [x8, #112]
   32394:	mov	x10, xzr
   32398:	mov	x1, x10
   3239c:	mov	x2, x10
   323a0:	bl	3165c <rpl_re_set_registers@@Base+0x46c0>
   323a4:	ldr	x8, [sp, #64]
   323a8:	str	x0, [x8]
   323ac:	ldr	x10, [x8]
   323b0:	cmp	x10, #0x0
   323b4:	cset	w9, eq  // eq = none
   323b8:	and	w9, w9, #0x1
   323bc:	mov	w0, w9
   323c0:	sxtw	x10, w0
   323c4:	cbz	x10, 323cc <rpl_re_set_registers@@Base+0x5430>
   323c8:	b	323dc <rpl_re_set_registers@@Base+0x5440>
   323cc:	ldr	x8, [sp, #64]
   323d0:	ldr	x9, [x8]
   323d4:	str	x9, [x8, #128]
   323d8:	b	32410 <rpl_re_set_registers@@Base+0x5474>
   323dc:	ldr	x8, [sp, #64]
   323e0:	ldr	x9, [x8, #88]
   323e4:	mov	w10, #0xc                   	// #12
   323e8:	str	w10, [x9]
   323ec:	ldr	x8, [sp, #64]
   323f0:	ldr	x0, [x8, #64]
   323f4:	bl	a930 <free@plt>
   323f8:	ldr	x8, [sp, #64]
   323fc:	ldr	x0, [x8, #56]
   32400:	bl	2d148 <rpl_re_set_registers@@Base+0x1ac>
   32404:	mov	x8, xzr
   32408:	ldr	x9, [sp, #64]
   3240c:	str	x8, [x9, #128]
   32410:	ldr	x8, [sp, #64]
   32414:	ldr	x0, [x8, #128]
   32418:	ldr	x28, [sp, #384]
   3241c:	ldp	x29, x30, [sp, #368]
   32420:	add	sp, sp, #0x190
   32424:	ret
   32428:	sub	sp, sp, #0x50
   3242c:	stp	x29, x30, [sp, #64]
   32430:	add	x29, sp, #0x40
   32434:	mov	w8, #0x1                   	// #1
   32438:	stur	x0, [x29, #-8]
   3243c:	stur	wzr, [x29, #-12]
   32440:	stur	wzr, [x29, #-20]
   32444:	ldur	x9, [x29, #-8]
   32448:	ldrb	w10, [x9, #176]
   3244c:	and	w10, w10, #0xffffffef
   32450:	orr	w10, w10, #0x10
   32454:	strb	w10, [x9, #176]
   32458:	ldur	x9, [x29, #-8]
   3245c:	ldrb	w10, [x9, #176]
   32460:	mov	w11, #0x3                   	// #3
   32464:	lsr	w10, w10, w11
   32468:	and	w8, w10, w8
   3246c:	tst	w8, #0xff
   32470:	cset	w8, eq  // eq = none
   32474:	and	w8, w8, #0x1
   32478:	mov	w0, w8
   3247c:	sxtw	x9, w0
   32480:	cbz	x9, 3254c <rpl_re_set_registers@@Base+0x55b0>
   32484:	str	xzr, [sp, #32]
   32488:	mov	x8, #0x3ff0000             	// #67043328
   3248c:	str	x8, [sp, #24]
   32490:	mov	x8, #0xfffe                	// #65534
   32494:	movk	x8, #0x87ff, lsl #16
   32498:	str	x8, [sp, #16]
   3249c:	mov	x8, #0x7fffffe             	// #134217726
   324a0:	str	x8, [sp, #8]
   324a4:	ldr	x8, [sp, #24]
   324a8:	lsl	x8, x8, #31
   324ac:	ldr	x9, [sp, #32]
   324b0:	orr	x8, x9, x8, lsl #1
   324b4:	ldur	x9, [x29, #-8]
   324b8:	str	x8, [x9, #184]
   324bc:	ldr	x8, [sp, #8]
   324c0:	lsl	x8, x8, #31
   324c4:	ldr	x9, [sp, #16]
   324c8:	orr	x8, x9, x8, lsl #1
   324cc:	ldur	x9, [x29, #-8]
   324d0:	str	x8, [x9, #192]
   324d4:	mov	w10, #0x2                   	// #2
   324d8:	stur	w10, [x29, #-12]
   324dc:	mov	w10, #0x80                  	// #128
   324e0:	stur	w10, [x29, #-20]
   324e4:	ldur	x8, [x29, #-8]
   324e8:	ldrb	w10, [x8, #176]
   324ec:	mov	w11, #0x2                   	// #2
   324f0:	lsr	w10, w10, w11
   324f4:	and	w10, w10, #0x1
   324f8:	and	w10, w10, #0xff
   324fc:	mov	w8, w10
   32500:	ubfx	x8, x8, #0, #32
   32504:	cbz	x8, 3254c <rpl_re_set_registers@@Base+0x55b0>
   32508:	ldur	x8, [x29, #-8]
   3250c:	add	x8, x8, #0xb8
   32510:	ldursw	x9, [x29, #-12]
   32514:	mov	x10, #0x8                   	// #8
   32518:	mul	x9, x10, x9
   3251c:	add	x0, x8, x9
   32520:	ldur	w11, [x29, #-20]
   32524:	mov	w12, #0x100                 	// #256
   32528:	subs	w11, w12, w11
   3252c:	mov	w12, #0x8                   	// #8
   32530:	sdiv	w11, w11, w12
   32534:	mov	w1, w11
   32538:	sxtw	x2, w1
   3253c:	mov	w11, wzr
   32540:	mov	w1, w11
   32544:	bl	a970 <memset@plt>
   32548:	b	325ec <rpl_re_set_registers@@Base+0x5650>
   3254c:	ldur	w8, [x29, #-12]
   32550:	cmp	w8, #0x4
   32554:	b.ge	325ec <rpl_re_set_registers@@Base+0x5650>  // b.tcont
   32558:	stur	wzr, [x29, #-16]
   3255c:	ldur	w8, [x29, #-16]
   32560:	cmp	w8, #0x40
   32564:	b.ge	325dc <rpl_re_set_registers@@Base+0x5640>  // b.tcont
   32568:	bl	aed0 <__ctype_b_loc@plt>
   3256c:	ldr	x8, [x0]
   32570:	ldursw	x9, [x29, #-20]
   32574:	ldrh	w10, [x8, x9, lsl #1]
   32578:	and	w10, w10, #0x8
   3257c:	cbnz	w10, 3258c <rpl_re_set_registers@@Base+0x55f0>
   32580:	ldur	w8, [x29, #-20]
   32584:	cmp	w8, #0x5f
   32588:	b.ne	325c0 <rpl_re_set_registers@@Base+0x5624>  // b.any
   3258c:	ldur	w8, [x29, #-16]
   32590:	mov	w9, w8
   32594:	mov	x10, #0x1                   	// #1
   32598:	lsl	x9, x10, x9
   3259c:	ldur	x10, [x29, #-8]
   325a0:	add	x10, x10, #0xb8
   325a4:	ldursw	x11, [x29, #-12]
   325a8:	mov	x12, #0x8                   	// #8
   325ac:	mul	x11, x12, x11
   325b0:	add	x10, x10, x11
   325b4:	ldr	x11, [x10]
   325b8:	orr	x9, x11, x9
   325bc:	str	x9, [x10]
   325c0:	ldur	w8, [x29, #-16]
   325c4:	add	w8, w8, #0x1
   325c8:	stur	w8, [x29, #-16]
   325cc:	ldur	w8, [x29, #-20]
   325d0:	add	w8, w8, #0x1
   325d4:	stur	w8, [x29, #-20]
   325d8:	b	3255c <rpl_re_set_registers@@Base+0x55c0>
   325dc:	ldur	w8, [x29, #-12]
   325e0:	add	w8, w8, #0x1
   325e4:	stur	w8, [x29, #-12]
   325e8:	b	3254c <rpl_re_set_registers@@Base+0x55b0>
   325ec:	ldp	x29, x30, [sp, #64]
   325f0:	add	sp, sp, #0x50
   325f4:	ret
   325f8:	sub	sp, sp, #0x90
   325fc:	stp	x29, x30, [sp, #128]
   32600:	add	x29, sp, #0x80
   32604:	mov	x8, #0x20                  	// #32
   32608:	mov	x9, #0x1                   	// #1
   3260c:	mov	w10, #0x1                   	// #1
   32610:	stur	x0, [x29, #-16]
   32614:	stur	x1, [x29, #-24]
   32618:	stur	x2, [x29, #-32]
   3261c:	stur	x3, [x29, #-40]
   32620:	and	w10, w4, w10
   32624:	sturb	w10, [x29, #-41]
   32628:	stur	x5, [x29, #-56]
   3262c:	str	xzr, [sp, #48]
   32630:	mov	x0, x8
   32634:	mov	x1, x9
   32638:	bl	b2e0 <calloc@plt>
   3263c:	str	x0, [sp, #64]
   32640:	ldr	x8, [sp, #64]
   32644:	cmp	x8, #0x0
   32648:	cset	w10, eq  // eq = none
   3264c:	and	w10, w10, #0x1
   32650:	mov	w0, w10
   32654:	sxtw	x8, w0
   32658:	cbz	x8, 32674 <rpl_re_set_registers@@Base+0x56d8>
   3265c:	ldur	x8, [x29, #-56]
   32660:	mov	w9, #0xc                   	// #12
   32664:	str	w9, [x8]
   32668:	mov	x8, xzr
   3266c:	stur	x8, [x29, #-8]
   32670:	b	328f4 <rpl_re_set_registers@@Base+0x5958>
   32674:	mov	x0, #0x50                  	// #80
   32678:	mov	x1, #0x1                   	// #1
   3267c:	bl	b2e0 <calloc@plt>
   32680:	str	x0, [sp, #56]
   32684:	ldr	x8, [sp, #56]
   32688:	cmp	x8, #0x0
   3268c:	cset	w9, eq  // eq = none
   32690:	and	w9, w9, #0x1
   32694:	mov	w0, w9
   32698:	sxtw	x8, w0
   3269c:	cbz	x8, 326c0 <rpl_re_set_registers@@Base+0x5724>
   326a0:	ldr	x0, [sp, #64]
   326a4:	bl	a930 <free@plt>
   326a8:	ldur	x8, [x29, #-56]
   326ac:	mov	w9, #0xc                   	// #12
   326b0:	str	w9, [x8]
   326b4:	mov	x8, xzr
   326b8:	stur	x8, [x29, #-8]
   326bc:	b	328f4 <rpl_re_set_registers@@Base+0x5958>
   326c0:	ldurb	w8, [x29, #-41]
   326c4:	and	w8, w8, #0x1
   326c8:	ldr	x9, [sp, #56]
   326cc:	ldrb	w10, [x9, #32]
   326d0:	and	w8, w8, #0x1
   326d4:	and	w10, w10, #0xfffffffe
   326d8:	orr	w8, w10, w8
   326dc:	strb	w8, [x9, #32]
   326e0:	ldur	x0, [x29, #-24]
   326e4:	ldr	x1, [sp, #64]
   326e8:	ldr	x2, [sp, #56]
   326ec:	ldur	x4, [x29, #-32]
   326f0:	add	x3, sp, #0x30
   326f4:	mov	x9, xzr
   326f8:	mov	x5, x9
   326fc:	bl	339f0 <rpl_re_set_registers@@Base+0x6a54>
   32700:	str	w0, [sp, #44]
   32704:	ldr	w8, [sp, #44]
   32708:	cmp	w8, #0x0
   3270c:	cset	w8, ne  // ne = any
   32710:	and	w8, w8, #0x1
   32714:	mov	w1, w8
   32718:	sxtw	x9, w1
   3271c:	cbz	x9, 32748 <rpl_re_set_registers@@Base+0x57ac>
   32720:	ldr	x0, [sp, #64]
   32724:	bl	a930 <free@plt>
   32728:	ldr	x0, [sp, #56]
   3272c:	bl	2d148 <rpl_re_set_registers@@Base+0x1ac>
   32730:	ldr	w8, [sp, #44]
   32734:	ldur	x9, [x29, #-56]
   32738:	str	w8, [x9]
   3273c:	mov	x9, xzr
   32740:	stur	x9, [x29, #-8]
   32744:	b	328f4 <rpl_re_set_registers@@Base+0x5958>
   32748:	ldur	x8, [x29, #-40]
   3274c:	ldrb	w9, [x8]
   32750:	cbz	w9, 32778 <rpl_re_set_registers@@Base+0x57dc>
   32754:	ldr	x0, [sp, #64]
   32758:	ldur	x8, [x29, #-40]
   3275c:	ldrb	w9, [x8]
   32760:	mov	w1, w9
   32764:	bl	332cc <rpl_re_set_registers@@Base+0x6330>
   32768:	ldur	x8, [x29, #-40]
   3276c:	add	x8, x8, #0x1
   32770:	stur	x8, [x29, #-40]
   32774:	b	32748 <rpl_re_set_registers@@Base+0x57ac>
   32778:	ldurb	w8, [x29, #-41]
   3277c:	tbnz	w8, #0, 32784 <rpl_re_set_registers@@Base+0x57e8>
   32780:	b	3278c <rpl_re_set_registers@@Base+0x57f0>
   32784:	ldr	x0, [sp, #64]
   32788:	bl	344cc <rpl_re_set_registers@@Base+0x7530>
   3278c:	ldur	x8, [x29, #-16]
   32790:	ldr	w9, [x8, #180]
   32794:	cmp	w9, #0x1
   32798:	b.le	327ac <rpl_re_set_registers@@Base+0x5810>
   3279c:	ldr	x0, [sp, #64]
   327a0:	ldur	x8, [x29, #-16]
   327a4:	ldr	x1, [x8, #120]
   327a8:	bl	34518 <rpl_re_set_registers@@Base+0x757c>
   327ac:	add	x3, sp, #0x18
   327b0:	ldr	w8, [sp, #32]
   327b4:	and	w8, w8, #0xffffff00
   327b8:	orr	w8, w8, #0x3
   327bc:	str	w8, [sp, #32]
   327c0:	ldr	x9, [sp, #64]
   327c4:	str	x9, [sp, #24]
   327c8:	ldur	x0, [x29, #-16]
   327cc:	mov	x9, xzr
   327d0:	mov	x1, x9
   327d4:	mov	x2, x9
   327d8:	bl	3165c <rpl_re_set_registers@@Base+0x46c0>
   327dc:	str	x0, [sp, #16]
   327e0:	ldr	x9, [sp, #16]
   327e4:	cmp	x9, #0x0
   327e8:	cset	w8, eq  // eq = none
   327ec:	and	w8, w8, #0x1
   327f0:	mov	w0, w8
   327f4:	sxtw	x9, w0
   327f8:	cbz	x9, 32800 <rpl_re_set_registers@@Base+0x5864>
   327fc:	b	328d0 <rpl_re_set_registers@@Base+0x5934>
   32800:	ldur	x8, [x29, #-16]
   32804:	ldr	w9, [x8, #180]
   32808:	cmp	w9, #0x1
   3280c:	b.le	328bc <rpl_re_set_registers@@Base+0x5920>
   32810:	add	x3, sp, #0x18
   32814:	ldr	w8, [sp, #32]
   32818:	and	w8, w8, #0xffffff00
   3281c:	orr	w8, w8, #0x6
   32820:	str	w8, [sp, #32]
   32824:	ldr	x9, [sp, #56]
   32828:	str	x9, [sp, #24]
   3282c:	ldur	x9, [x29, #-16]
   32830:	ldrb	w8, [x9, #176]
   32834:	and	w8, w8, #0xfffffffd
   32838:	orr	w8, w8, #0x2
   3283c:	strb	w8, [x9, #176]
   32840:	ldur	x0, [x29, #-16]
   32844:	mov	x9, xzr
   32848:	mov	x1, x9
   3284c:	mov	x2, x9
   32850:	bl	3165c <rpl_re_set_registers@@Base+0x46c0>
   32854:	str	x0, [sp, #8]
   32858:	ldr	x9, [sp, #8]
   3285c:	cmp	x9, #0x0
   32860:	cset	w8, eq  // eq = none
   32864:	and	w8, w8, #0x1
   32868:	mov	w0, w8
   3286c:	sxtw	x9, w0
   32870:	cbz	x9, 32878 <rpl_re_set_registers@@Base+0x58dc>
   32874:	b	328d0 <rpl_re_set_registers@@Base+0x5934>
   32878:	ldur	x0, [x29, #-16]
   3287c:	ldr	x1, [sp, #16]
   32880:	ldr	x2, [sp, #8]
   32884:	mov	w3, #0xa                   	// #10
   32888:	bl	2fc6c <rpl_re_set_registers@@Base+0x2cd0>
   3288c:	str	x0, [sp, #16]
   32890:	ldr	x8, [sp, #8]
   32894:	cmp	x8, #0x0
   32898:	cset	w9, ne  // ne = any
   3289c:	and	w9, w9, #0x1
   328a0:	mov	w0, w9
   328a4:	sxtw	x8, w0
   328a8:	cbz	x8, 328b8 <rpl_re_set_registers@@Base+0x591c>
   328ac:	ldr	x8, [sp, #16]
   328b0:	stur	x8, [x29, #-8]
   328b4:	b	328f4 <rpl_re_set_registers@@Base+0x5958>
   328b8:	b	328d0 <rpl_re_set_registers@@Base+0x5934>
   328bc:	ldr	x0, [sp, #56]
   328c0:	bl	2d148 <rpl_re_set_registers@@Base+0x1ac>
   328c4:	ldr	x8, [sp, #16]
   328c8:	stur	x8, [x29, #-8]
   328cc:	b	328f4 <rpl_re_set_registers@@Base+0x5958>
   328d0:	ldr	x0, [sp, #64]
   328d4:	bl	a930 <free@plt>
   328d8:	ldr	x0, [sp, #56]
   328dc:	bl	2d148 <rpl_re_set_registers@@Base+0x1ac>
   328e0:	ldur	x8, [x29, #-56]
   328e4:	mov	w9, #0xc                   	// #12
   328e8:	str	w9, [x8]
   328ec:	mov	x8, xzr
   328f0:	stur	x8, [x29, #-8]
   328f4:	ldur	x0, [x29, #-8]
   328f8:	ldp	x29, x30, [sp, #128]
   328fc:	add	sp, sp, #0x90
   32900:	ret
   32904:	sub	sp, sp, #0xd0
   32908:	stp	x29, x30, [sp, #192]
   3290c:	add	x29, sp, #0xc0
   32910:	mov	x8, xzr
   32914:	stur	x0, [x29, #-16]
   32918:	stur	x1, [x29, #-24]
   3291c:	stur	x2, [x29, #-32]
   32920:	stur	x3, [x29, #-40]
   32924:	stur	x4, [x29, #-48]
   32928:	stur	x5, [x29, #-56]
   3292c:	stur	x8, [x29, #-64]
   32930:	stur	x8, [x29, #-72]
   32934:	ldur	x8, [x29, #-24]
   32938:	ldr	x8, [x8, #72]
   3293c:	str	x8, [sp, #88]
   32940:	ldur	x8, [x29, #-40]
   32944:	ldr	q0, [x8]
   32948:	str	q0, [sp, #64]
   3294c:	ldur	x8, [x29, #-40]
   32950:	ldr	w9, [x8, #8]
   32954:	and	w9, w9, #0xff
   32958:	cmp	w9, #0x17
   3295c:	b.ne	32c00 <rpl_re_set_registers@@Base+0x5c64>  // b.any
   32960:	str	xzr, [sp, #96]
   32964:	ldur	x0, [x29, #-24]
   32968:	ldur	x1, [x29, #-40]
   3296c:	ldur	x2, [x29, #-48]
   32970:	bl	349cc <rpl_re_set_registers@@Base+0x7a30>
   32974:	stur	x0, [x29, #-88]
   32978:	ldur	x8, [x29, #-88]
   3297c:	mov	x9, #0xffffffffffffffff    	// #-1
   32980:	cmp	x8, x9
   32984:	b.ne	329cc <rpl_re_set_registers@@Base+0x5a30>  // b.any
   32988:	ldur	x8, [x29, #-40]
   3298c:	ldr	w9, [x8, #8]
   32990:	and	w9, w9, #0xff
   32994:	cmp	w9, #0x1
   32998:	b.ne	329b4 <rpl_re_set_registers@@Base+0x5a18>  // b.any
   3299c:	ldur	x8, [x29, #-40]
   329a0:	ldrb	w9, [x8]
   329a4:	cmp	w9, #0x2c
   329a8:	b.ne	329b4 <rpl_re_set_registers@@Base+0x5a18>  // b.any
   329ac:	stur	xzr, [x29, #-88]
   329b0:	b	329cc <rpl_re_set_registers@@Base+0x5a30>
   329b4:	ldur	x8, [x29, #-56]
   329b8:	mov	w9, #0xa                   	// #10
   329bc:	str	w9, [x8]
   329c0:	mov	x8, xzr
   329c4:	stur	x8, [x29, #-8]
   329c8:	b	32f7c <rpl_re_set_registers@@Base+0x5fe0>
   329cc:	ldur	x8, [x29, #-88]
   329d0:	mov	x9, #0xfffffffffffffffe    	// #-2
   329d4:	cmp	x8, x9
   329d8:	cset	w10, ne  // ne = any
   329dc:	and	w10, w10, #0x1
   329e0:	mov	w0, w10
   329e4:	sxtw	x8, w0
   329e8:	cbz	x8, 32a60 <rpl_re_set_registers@@Base+0x5ac4>
   329ec:	ldur	x8, [x29, #-40]
   329f0:	ldr	w9, [x8, #8]
   329f4:	and	w9, w9, #0xff
   329f8:	cmp	w9, #0x18
   329fc:	b.ne	32a0c <rpl_re_set_registers@@Base+0x5a70>  // b.any
   32a00:	ldur	x8, [x29, #-88]
   32a04:	str	x8, [sp, #48]
   32a08:	b	32a58 <rpl_re_set_registers@@Base+0x5abc>
   32a0c:	ldur	x8, [x29, #-40]
   32a10:	ldr	w9, [x8, #8]
   32a14:	and	w9, w9, #0xff
   32a18:	cmp	w9, #0x1
   32a1c:	b.ne	32a48 <rpl_re_set_registers@@Base+0x5aac>  // b.any
   32a20:	ldur	x8, [x29, #-40]
   32a24:	ldrb	w9, [x8]
   32a28:	cmp	w9, #0x2c
   32a2c:	b.ne	32a48 <rpl_re_set_registers@@Base+0x5aac>  // b.any
   32a30:	ldur	x0, [x29, #-24]
   32a34:	ldur	x1, [x29, #-40]
   32a38:	ldur	x2, [x29, #-48]
   32a3c:	bl	349cc <rpl_re_set_registers@@Base+0x7a30>
   32a40:	str	x0, [sp, #40]
   32a44:	b	32a50 <rpl_re_set_registers@@Base+0x5ab4>
   32a48:	mov	x8, #0xfffffffffffffffe    	// #-2
   32a4c:	str	x8, [sp, #40]
   32a50:	ldr	x8, [sp, #40]
   32a54:	str	x8, [sp, #48]
   32a58:	ldr	x8, [sp, #48]
   32a5c:	str	x8, [sp, #96]
   32a60:	ldur	x8, [x29, #-88]
   32a64:	mov	x9, #0xfffffffffffffffe    	// #-2
   32a68:	mov	w10, #0x1                   	// #1
   32a6c:	cmp	x8, x9
   32a70:	str	w10, [sp, #36]
   32a74:	b.eq	32a8c <rpl_re_set_registers@@Base+0x5af0>  // b.none
   32a78:	ldr	x8, [sp, #96]
   32a7c:	mov	x9, #0xfffffffffffffffe    	// #-2
   32a80:	cmp	x8, x9
   32a84:	cset	w10, eq  // eq = none
   32a88:	str	w10, [sp, #36]
   32a8c:	ldr	w8, [sp, #36]
   32a90:	and	w8, w8, #0x1
   32a94:	mov	w0, w8
   32a98:	sxtw	x9, w0
   32a9c:	cbz	x9, 32b34 <rpl_re_set_registers@@Base+0x5b98>
   32aa0:	ldur	x8, [x29, #-48]
   32aa4:	tst	x8, #0x200000
   32aa8:	cset	w9, ne  // ne = any
   32aac:	eor	w9, w9, #0x1
   32ab0:	and	w9, w9, #0x1
   32ab4:	mov	w0, w9
   32ab8:	sxtw	x8, w0
   32abc:	cbz	x8, 32afc <rpl_re_set_registers@@Base+0x5b60>
   32ac0:	ldur	x8, [x29, #-40]
   32ac4:	ldr	w9, [x8, #8]
   32ac8:	and	w9, w9, #0xff
   32acc:	cmp	w9, #0x2
   32ad0:	b.ne	32ae4 <rpl_re_set_registers@@Base+0x5b48>  // b.any
   32ad4:	ldur	x8, [x29, #-56]
   32ad8:	mov	w9, #0x9                   	// #9
   32adc:	str	w9, [x8]
   32ae0:	b	32af0 <rpl_re_set_registers@@Base+0x5b54>
   32ae4:	ldur	x8, [x29, #-56]
   32ae8:	mov	w9, #0xa                   	// #10
   32aec:	str	w9, [x8]
   32af0:	mov	x8, xzr
   32af4:	stur	x8, [x29, #-8]
   32af8:	b	32f7c <rpl_re_set_registers@@Base+0x5fe0>
   32afc:	ldr	x8, [sp, #88]
   32b00:	ldur	x9, [x29, #-24]
   32b04:	str	x8, [x9, #72]
   32b08:	ldur	x8, [x29, #-40]
   32b0c:	ldr	q0, [sp, #64]
   32b10:	str	q0, [x8]
   32b14:	ldur	x8, [x29, #-40]
   32b18:	ldr	w10, [x8, #8]
   32b1c:	and	w10, w10, #0xffffff00
   32b20:	orr	w10, w10, #0x1
   32b24:	str	w10, [x8, #8]
   32b28:	ldur	x8, [x29, #-16]
   32b2c:	stur	x8, [x29, #-8]
   32b30:	b	32f7c <rpl_re_set_registers@@Base+0x5fe0>
   32b34:	ldr	x8, [sp, #96]
   32b38:	mov	x9, #0xffffffffffffffff    	// #-1
   32b3c:	cmp	x8, x9
   32b40:	b.eq	32b5c <rpl_re_set_registers@@Base+0x5bc0>  // b.none
   32b44:	ldur	x8, [x29, #-88]
   32b48:	ldr	x9, [sp, #96]
   32b4c:	mov	w10, #0x1                   	// #1
   32b50:	cmp	x8, x9
   32b54:	str	w10, [sp, #32]
   32b58:	b.gt	32b74 <rpl_re_set_registers@@Base+0x5bd8>
   32b5c:	ldur	x8, [x29, #-40]
   32b60:	ldr	w9, [x8, #8]
   32b64:	and	w9, w9, #0xff
   32b68:	cmp	w9, #0x18
   32b6c:	cset	w9, ne  // ne = any
   32b70:	str	w9, [sp, #32]
   32b74:	ldr	w8, [sp, #32]
   32b78:	and	w8, w8, #0x1
   32b7c:	mov	w0, w8
   32b80:	sxtw	x9, w0
   32b84:	cbz	x9, 32ba0 <rpl_re_set_registers@@Base+0x5c04>
   32b88:	ldur	x8, [x29, #-56]
   32b8c:	mov	w9, #0xa                   	// #10
   32b90:	str	w9, [x8]
   32b94:	mov	x8, xzr
   32b98:	stur	x8, [x29, #-8]
   32b9c:	b	32f7c <rpl_re_set_registers@@Base+0x5fe0>
   32ba0:	ldr	x8, [sp, #96]
   32ba4:	mov	x9, #0xffffffffffffffff    	// #-1
   32ba8:	cmp	x8, x9
   32bac:	b.ne	32bbc <rpl_re_set_registers@@Base+0x5c20>  // b.any
   32bb0:	ldur	x8, [x29, #-88]
   32bb4:	str	x8, [sp, #24]
   32bb8:	b	32bc4 <rpl_re_set_registers@@Base+0x5c28>
   32bbc:	ldr	x8, [sp, #96]
   32bc0:	str	x8, [sp, #24]
   32bc4:	ldr	x8, [sp, #24]
   32bc8:	mov	x9, #0x7fff                	// #32767
   32bcc:	cmp	x9, x8
   32bd0:	cset	w10, lt  // lt = tstop
   32bd4:	and	w10, w10, #0x1
   32bd8:	mov	w0, w10
   32bdc:	sxtw	x8, w0
   32be0:	cbz	x8, 32bfc <rpl_re_set_registers@@Base+0x5c60>
   32be4:	ldur	x8, [x29, #-56]
   32be8:	mov	w9, #0xf                   	// #15
   32bec:	str	w9, [x8]
   32bf0:	mov	x8, xzr
   32bf4:	stur	x8, [x29, #-8]
   32bf8:	b	32f7c <rpl_re_set_registers@@Base+0x5fe0>
   32bfc:	b	32c4c <rpl_re_set_registers@@Base+0x5cb0>
   32c00:	ldur	x8, [x29, #-40]
   32c04:	ldr	w9, [x8, #8]
   32c08:	and	w9, w9, #0xff
   32c0c:	mov	w10, wzr
   32c10:	mov	w11, #0x1                   	// #1
   32c14:	cmp	w9, #0x12
   32c18:	csel	w9, w11, w10, eq  // eq = none
   32c1c:	mov	w0, w9
   32c20:	sxtw	x8, w0
   32c24:	stur	x8, [x29, #-88]
   32c28:	ldur	x8, [x29, #-40]
   32c2c:	ldr	w9, [x8, #8]
   32c30:	and	w9, w9, #0xff
   32c34:	mov	w10, #0xffffffff            	// #-1
   32c38:	cmp	w9, #0x13
   32c3c:	csel	w9, w11, w10, eq  // eq = none
   32c40:	mov	w0, w9
   32c44:	sxtw	x8, w0
   32c48:	str	x8, [sp, #96]
   32c4c:	ldur	x0, [x29, #-40]
   32c50:	ldur	x1, [x29, #-24]
   32c54:	ldur	x2, [x29, #-48]
   32c58:	bl	2f9f0 <rpl_re_set_registers@@Base+0x2a54>
   32c5c:	ldur	x8, [x29, #-16]
   32c60:	cmp	x8, #0x0
   32c64:	cset	w9, eq  // eq = none
   32c68:	and	w9, w9, #0x1
   32c6c:	mov	w0, w9
   32c70:	sxtw	x8, w0
   32c74:	cbz	x8, 32c84 <rpl_re_set_registers@@Base+0x5ce8>
   32c78:	mov	x8, xzr
   32c7c:	stur	x8, [x29, #-8]
   32c80:	b	32f7c <rpl_re_set_registers@@Base+0x5fe0>
   32c84:	ldur	x8, [x29, #-88]
   32c88:	mov	w9, #0x0                   	// #0
   32c8c:	str	w9, [sp, #20]
   32c90:	cbnz	x8, 32ca4 <rpl_re_set_registers@@Base+0x5d08>
   32c94:	ldr	x8, [sp, #96]
   32c98:	cmp	x8, #0x0
   32c9c:	cset	w9, eq  // eq = none
   32ca0:	str	w9, [sp, #20]
   32ca4:	ldr	w8, [sp, #20]
   32ca8:	and	w8, w8, #0x1
   32cac:	mov	w0, w8
   32cb0:	sxtw	x9, w0
   32cb4:	cbz	x9, 32ce0 <rpl_re_set_registers@@Base+0x5d44>
   32cb8:	ldur	x0, [x29, #-16]
   32cbc:	adrp	x1, 30000 <rpl_re_set_registers@@Base+0x3064>
   32cc0:	add	x1, x1, #0xc44
   32cc4:	mov	x8, xzr
   32cc8:	mov	x2, x8
   32ccc:	str	x8, [sp, #8]
   32cd0:	bl	30b08 <rpl_re_set_registers@@Base+0x3b6c>
   32cd4:	ldr	x8, [sp, #8]
   32cd8:	stur	x8, [x29, #-8]
   32cdc:	b	32f7c <rpl_re_set_registers@@Base+0x5fe0>
   32ce0:	ldur	x8, [x29, #-88]
   32ce4:	cmp	x8, #0x0
   32ce8:	cset	w9, gt
   32cec:	and	w9, w9, #0x1
   32cf0:	mov	w0, w9
   32cf4:	sxtw	x8, w0
   32cf8:	cbz	x8, 32de4 <rpl_re_set_registers@@Base+0x5e48>
   32cfc:	ldur	x8, [x29, #-16]
   32d00:	stur	x8, [x29, #-64]
   32d04:	mov	x8, #0x2                   	// #2
   32d08:	stur	x8, [x29, #-80]
   32d0c:	ldur	x8, [x29, #-80]
   32d10:	ldur	x9, [x29, #-88]
   32d14:	cmp	x8, x9
   32d18:	b.gt	32d8c <rpl_re_set_registers@@Base+0x5df0>
   32d1c:	ldur	x0, [x29, #-16]
   32d20:	ldur	x1, [x29, #-32]
   32d24:	bl	34b58 <rpl_re_set_registers@@Base+0x7bbc>
   32d28:	stur	x0, [x29, #-16]
   32d2c:	ldur	x0, [x29, #-32]
   32d30:	ldur	x1, [x29, #-64]
   32d34:	ldur	x2, [x29, #-16]
   32d38:	mov	w3, #0x10                  	// #16
   32d3c:	bl	2fc6c <rpl_re_set_registers@@Base+0x2cd0>
   32d40:	stur	x0, [x29, #-64]
   32d44:	ldur	x8, [x29, #-16]
   32d48:	mov	w9, #0x1                   	// #1
   32d4c:	str	w9, [sp, #4]
   32d50:	cbz	x8, 32d64 <rpl_re_set_registers@@Base+0x5dc8>
   32d54:	ldur	x8, [x29, #-64]
   32d58:	cmp	x8, #0x0
   32d5c:	cset	w9, eq  // eq = none
   32d60:	str	w9, [sp, #4]
   32d64:	ldr	w8, [sp, #4]
   32d68:	and	w8, w8, #0x1
   32d6c:	mov	w0, w8
   32d70:	sxtw	x9, w0
   32d74:	cbz	x9, 32d7c <rpl_re_set_registers@@Base+0x5de0>
   32d78:	b	32f68 <rpl_re_set_registers@@Base+0x5fcc>
   32d7c:	ldur	x8, [x29, #-80]
   32d80:	add	x8, x8, #0x1
   32d84:	stur	x8, [x29, #-80]
   32d88:	b	32d0c <rpl_re_set_registers@@Base+0x5d70>
   32d8c:	ldur	x8, [x29, #-88]
   32d90:	ldr	x9, [sp, #96]
   32d94:	cmp	x8, x9
   32d98:	b.ne	32da8 <rpl_re_set_registers@@Base+0x5e0c>  // b.any
   32d9c:	ldur	x8, [x29, #-64]
   32da0:	stur	x8, [x29, #-8]
   32da4:	b	32f7c <rpl_re_set_registers@@Base+0x5fe0>
   32da8:	ldur	x0, [x29, #-16]
   32dac:	ldur	x1, [x29, #-32]
   32db0:	bl	34b58 <rpl_re_set_registers@@Base+0x7bbc>
   32db4:	stur	x0, [x29, #-16]
   32db8:	ldur	x8, [x29, #-16]
   32dbc:	cmp	x8, #0x0
   32dc0:	cset	w9, eq  // eq = none
   32dc4:	and	w9, w9, #0x1
   32dc8:	mov	w0, w9
   32dcc:	sxtw	x8, w0
   32dd0:	cbz	x8, 32dd8 <rpl_re_set_registers@@Base+0x5e3c>
   32dd4:	b	32f68 <rpl_re_set_registers@@Base+0x5fcc>
   32dd8:	ldur	x8, [x29, #-64]
   32ddc:	stur	x8, [x29, #-72]
   32de0:	b	32dec <rpl_re_set_registers@@Base+0x5e50>
   32de4:	mov	x8, xzr
   32de8:	stur	x8, [x29, #-72]
   32dec:	ldur	x8, [x29, #-16]
   32df0:	ldr	w9, [x8, #48]
   32df4:	and	w9, w9, #0xff
   32df8:	cmp	w9, #0x11
   32dfc:	b.ne	32e24 <rpl_re_set_registers@@Base+0x5e88>  // b.any
   32e00:	ldur	x8, [x29, #-16]
   32e04:	ldr	x8, [x8, #40]
   32e08:	str	x8, [sp, #56]
   32e0c:	ldur	x0, [x29, #-16]
   32e10:	ldr	x8, [sp, #56]
   32e14:	adrp	x1, 34000 <rpl_re_set_registers@@Base+0x7064>
   32e18:	add	x1, x1, #0xcc8
   32e1c:	mov	x2, x8
   32e20:	bl	30b08 <rpl_re_set_registers@@Base+0x3b6c>
   32e24:	ldur	x0, [x29, #-32]
   32e28:	ldur	x1, [x29, #-16]
   32e2c:	ldr	x8, [sp, #96]
   32e30:	mov	x9, #0xffffffffffffffff    	// #-1
   32e34:	mov	w10, #0xb                   	// #11
   32e38:	mov	w11, #0xa                   	// #10
   32e3c:	cmp	x8, x9
   32e40:	csel	w3, w10, w11, eq  // eq = none
   32e44:	mov	x8, xzr
   32e48:	mov	x2, x8
   32e4c:	bl	2fc6c <rpl_re_set_registers@@Base+0x2cd0>
   32e50:	stur	x0, [x29, #-64]
   32e54:	ldur	x8, [x29, #-64]
   32e58:	cmp	x8, #0x0
   32e5c:	cset	w10, eq  // eq = none
   32e60:	and	w10, w10, #0x1
   32e64:	mov	w0, w10
   32e68:	sxtw	x8, w0
   32e6c:	cbz	x8, 32e74 <rpl_re_set_registers@@Base+0x5ed8>
   32e70:	b	32f68 <rpl_re_set_registers@@Base+0x5fcc>
   32e74:	ldur	x8, [x29, #-88]
   32e78:	add	x8, x8, #0x2
   32e7c:	stur	x8, [x29, #-80]
   32e80:	ldur	x8, [x29, #-80]
   32e84:	ldr	x9, [sp, #96]
   32e88:	cmp	x8, x9
   32e8c:	b.gt	32f3c <rpl_re_set_registers@@Base+0x5fa0>
   32e90:	ldur	x0, [x29, #-16]
   32e94:	ldur	x1, [x29, #-32]
   32e98:	bl	34b58 <rpl_re_set_registers@@Base+0x7bbc>
   32e9c:	stur	x0, [x29, #-16]
   32ea0:	ldur	x0, [x29, #-32]
   32ea4:	ldur	x1, [x29, #-64]
   32ea8:	ldur	x2, [x29, #-16]
   32eac:	mov	w3, #0x10                  	// #16
   32eb0:	bl	2fc6c <rpl_re_set_registers@@Base+0x2cd0>
   32eb4:	stur	x0, [x29, #-64]
   32eb8:	ldur	x8, [x29, #-16]
   32ebc:	mov	w9, #0x1                   	// #1
   32ec0:	str	w9, [sp]
   32ec4:	cbz	x8, 32ed8 <rpl_re_set_registers@@Base+0x5f3c>
   32ec8:	ldur	x8, [x29, #-64]
   32ecc:	cmp	x8, #0x0
   32ed0:	cset	w9, eq  // eq = none
   32ed4:	str	w9, [sp]
   32ed8:	ldr	w8, [sp]
   32edc:	and	w8, w8, #0x1
   32ee0:	mov	w0, w8
   32ee4:	sxtw	x9, w0
   32ee8:	cbz	x9, 32ef0 <rpl_re_set_registers@@Base+0x5f54>
   32eec:	b	32f68 <rpl_re_set_registers@@Base+0x5fcc>
   32ef0:	ldur	x0, [x29, #-32]
   32ef4:	ldur	x1, [x29, #-64]
   32ef8:	mov	x8, xzr
   32efc:	mov	x2, x8
   32f00:	mov	w3, #0xa                   	// #10
   32f04:	bl	2fc6c <rpl_re_set_registers@@Base+0x2cd0>
   32f08:	stur	x0, [x29, #-64]
   32f0c:	ldur	x8, [x29, #-64]
   32f10:	cmp	x8, #0x0
   32f14:	cset	w9, eq  // eq = none
   32f18:	and	w9, w9, #0x1
   32f1c:	mov	w0, w9
   32f20:	sxtw	x8, w0
   32f24:	cbz	x8, 32f2c <rpl_re_set_registers@@Base+0x5f90>
   32f28:	b	32f68 <rpl_re_set_registers@@Base+0x5fcc>
   32f2c:	ldur	x8, [x29, #-80]
   32f30:	add	x8, x8, #0x1
   32f34:	stur	x8, [x29, #-80]
   32f38:	b	32e80 <rpl_re_set_registers@@Base+0x5ee4>
   32f3c:	ldur	x8, [x29, #-72]
   32f40:	cbz	x8, 32f5c <rpl_re_set_registers@@Base+0x5fc0>
   32f44:	ldur	x0, [x29, #-32]
   32f48:	ldur	x1, [x29, #-72]
   32f4c:	ldur	x2, [x29, #-64]
   32f50:	mov	w3, #0x10                  	// #16
   32f54:	bl	2fc6c <rpl_re_set_registers@@Base+0x2cd0>
   32f58:	stur	x0, [x29, #-64]
   32f5c:	ldur	x8, [x29, #-64]
   32f60:	stur	x8, [x29, #-8]
   32f64:	b	32f7c <rpl_re_set_registers@@Base+0x5fe0>
   32f68:	ldur	x8, [x29, #-56]
   32f6c:	mov	w9, #0xc                   	// #12
   32f70:	str	w9, [x8]
   32f74:	mov	x8, xzr
   32f78:	stur	x8, [x29, #-8]
   32f7c:	ldur	x0, [x29, #-8]
   32f80:	ldp	x29, x30, [sp, #192]
   32f84:	add	sp, sp, #0xd0
   32f88:	ret
   32f8c:	sub	sp, sp, #0x30
   32f90:	str	x0, [sp, #32]
   32f94:	str	x1, [sp, #24]
   32f98:	str	x2, [sp, #16]
   32f9c:	ldr	x8, [sp, #24]
   32fa0:	ldr	x8, [x8, #104]
   32fa4:	ldr	x9, [sp, #24]
   32fa8:	ldr	x9, [x9, #72]
   32fac:	cmp	x8, x9
   32fb0:	b.gt	32fd0 <rpl_re_set_registers@@Base+0x6034>
   32fb4:	ldr	x8, [sp, #32]
   32fb8:	ldr	w9, [x8, #8]
   32fbc:	and	w9, w9, #0xffffff00
   32fc0:	orr	w9, w9, #0x2
   32fc4:	str	w9, [x8, #8]
   32fc8:	str	wzr, [sp, #44]
   32fcc:	b	332c0 <rpl_re_set_registers@@Base+0x6324>
   32fd0:	ldr	x8, [sp, #24]
   32fd4:	ldr	x8, [x8, #8]
   32fd8:	ldr	x9, [sp, #24]
   32fdc:	ldr	x9, [x9, #72]
   32fe0:	add	x9, x9, #0x0
   32fe4:	add	x8, x8, x9
   32fe8:	ldrb	w10, [x8]
   32fec:	strb	w10, [sp, #15]
   32ff0:	ldrb	w10, [sp, #15]
   32ff4:	ldr	x8, [sp, #32]
   32ff8:	strb	w10, [x8]
   32ffc:	ldr	x8, [sp, #24]
   33000:	ldr	w10, [x8, #144]
   33004:	cmp	w10, #0x1
   33008:	b.le	33064 <rpl_re_set_registers@@Base+0x60c8>
   3300c:	ldr	x8, [sp, #24]
   33010:	ldr	x8, [x8, #72]
   33014:	ldr	x9, [sp, #24]
   33018:	ldr	x9, [x9, #48]
   3301c:	cmp	x8, x9
   33020:	b.eq	33064 <rpl_re_set_registers@@Base+0x60c8>  // b.none
   33024:	ldr	x8, [sp, #24]
   33028:	ldr	x8, [x8, #16]
   3302c:	ldr	x9, [sp, #24]
   33030:	ldr	x9, [x9, #72]
   33034:	ldr	w10, [x8, x9, lsl #2]
   33038:	mov	w11, #0xffffffff            	// #-1
   3303c:	cmp	w10, w11
   33040:	b.ne	33064 <rpl_re_set_registers@@Base+0x60c8>  // b.any
   33044:	ldr	x8, [sp, #32]
   33048:	ldr	w9, [x8, #8]
   3304c:	and	w9, w9, #0xffffff00
   33050:	mov	w10, #0x1                   	// #1
   33054:	orr	w9, w9, #0x1
   33058:	str	w9, [x8, #8]
   3305c:	str	w10, [sp, #44]
   33060:	b	332c0 <rpl_re_set_registers@@Base+0x6324>
   33064:	ldrb	w8, [sp, #15]
   33068:	cmp	w8, #0x5c
   3306c:	b.ne	330f4 <rpl_re_set_registers@@Base+0x6158>  // b.any
   33070:	ldr	x8, [sp, #16]
   33074:	and	x8, x8, #0x1
   33078:	cbz	x8, 330f4 <rpl_re_set_registers@@Base+0x6158>
   3307c:	ldr	x8, [sp, #24]
   33080:	ldr	x8, [x8, #72]
   33084:	add	x8, x8, #0x1
   33088:	ldr	x9, [sp, #24]
   3308c:	ldr	x9, [x9, #88]
   33090:	cmp	x8, x9
   33094:	b.ge	330f4 <rpl_re_set_registers@@Base+0x6158>  // b.tcont
   33098:	ldr	x8, [sp, #24]
   3309c:	ldr	x9, [x8, #72]
   330a0:	add	x9, x9, #0x1
   330a4:	str	x9, [x8, #72]
   330a8:	ldr	x8, [sp, #24]
   330ac:	ldr	x8, [x8, #8]
   330b0:	ldr	x9, [sp, #24]
   330b4:	ldr	x9, [x9, #72]
   330b8:	add	x9, x9, #0x0
   330bc:	add	x8, x8, x9
   330c0:	ldrb	w10, [x8]
   330c4:	strb	w10, [sp, #14]
   330c8:	ldrb	w10, [sp, #14]
   330cc:	ldr	x8, [sp, #32]
   330d0:	strb	w10, [x8]
   330d4:	ldr	x8, [sp, #32]
   330d8:	ldr	w10, [x8, #8]
   330dc:	and	w10, w10, #0xffffff00
   330e0:	mov	w11, #0x1                   	// #1
   330e4:	orr	w10, w10, #0x1
   330e8:	str	w10, [x8, #8]
   330ec:	str	w11, [sp, #44]
   330f0:	b	332c0 <rpl_re_set_registers@@Base+0x6324>
   330f4:	ldrb	w8, [sp, #15]
   330f8:	cmp	w8, #0x5b
   330fc:	b.ne	3321c <rpl_re_set_registers@@Base+0x6280>  // b.any
   33100:	ldr	x8, [sp, #24]
   33104:	ldr	x8, [x8, #72]
   33108:	add	x8, x8, #0x1
   3310c:	ldr	x9, [sp, #24]
   33110:	ldr	x9, [x9, #88]
   33114:	cmp	x8, x9
   33118:	b.ge	33140 <rpl_re_set_registers@@Base+0x61a4>  // b.tcont
   3311c:	ldr	x8, [sp, #24]
   33120:	ldr	x8, [x8, #8]
   33124:	ldr	x9, [sp, #24]
   33128:	ldr	x9, [x9, #72]
   3312c:	add	x9, x9, #0x1
   33130:	add	x8, x8, x9
   33134:	ldrb	w10, [x8]
   33138:	strb	w10, [sp, #13]
   3313c:	b	33148 <rpl_re_set_registers@@Base+0x61ac>
   33140:	mov	w8, #0x0                   	// #0
   33144:	strb	w8, [sp, #13]
   33148:	ldrb	w8, [sp, #13]
   3314c:	ldr	x9, [sp, #32]
   33150:	strb	w8, [x9]
   33154:	mov	w8, #0x2                   	// #2
   33158:	str	w8, [sp, #8]
   3315c:	ldrb	w8, [sp, #13]
   33160:	cmp	w8, #0x2e
   33164:	str	w8, [sp, #4]
   33168:	b.eq	33190 <rpl_re_set_registers@@Base+0x61f4>  // b.none
   3316c:	b	33170 <rpl_re_set_registers@@Base+0x61d4>
   33170:	ldr	w8, [sp, #4]
   33174:	cmp	w8, #0x3a
   33178:	b.eq	331c4 <rpl_re_set_registers@@Base+0x6228>  // b.none
   3317c:	b	33180 <rpl_re_set_registers@@Base+0x61e4>
   33180:	ldr	w8, [sp, #4]
   33184:	cmp	w8, #0x3d
   33188:	b.eq	331ac <rpl_re_set_registers@@Base+0x6210>  // b.none
   3318c:	b	331e8 <rpl_re_set_registers@@Base+0x624c>
   33190:	ldr	x8, [sp, #32]
   33194:	ldr	w9, [x8, #8]
   33198:	and	w9, w9, #0xffffff00
   3319c:	mov	w10, #0x1a                  	// #26
   331a0:	orr	w9, w9, w10
   331a4:	str	w9, [x8, #8]
   331a8:	b	33210 <rpl_re_set_registers@@Base+0x6274>
   331ac:	ldr	x8, [sp, #32]
   331b0:	ldr	w9, [x8, #8]
   331b4:	and	w9, w9, #0xffffff00
   331b8:	orr	w9, w9, #0x1c
   331bc:	str	w9, [x8, #8]
   331c0:	b	33210 <rpl_re_set_registers@@Base+0x6274>
   331c4:	ldr	x8, [sp, #16]
   331c8:	and	x8, x8, #0x4
   331cc:	cbz	x8, 331e8 <rpl_re_set_registers@@Base+0x624c>
   331d0:	ldr	x8, [sp, #32]
   331d4:	ldr	w9, [x8, #8]
   331d8:	and	w9, w9, #0xffffff00
   331dc:	orr	w9, w9, #0x1e
   331e0:	str	w9, [x8, #8]
   331e4:	b	33210 <rpl_re_set_registers@@Base+0x6274>
   331e8:	ldr	x8, [sp, #32]
   331ec:	ldr	w9, [x8, #8]
   331f0:	and	w9, w9, #0xffffff00
   331f4:	mov	w10, #0x1                   	// #1
   331f8:	orr	w9, w9, #0x1
   331fc:	str	w9, [x8, #8]
   33200:	ldrb	w9, [sp, #15]
   33204:	ldr	x8, [sp, #32]
   33208:	strb	w9, [x8]
   3320c:	str	w10, [sp, #8]
   33210:	ldr	w8, [sp, #8]
   33214:	str	w8, [sp, #44]
   33218:	b	332c0 <rpl_re_set_registers@@Base+0x6324>
   3321c:	ldrb	w8, [sp, #15]
   33220:	cmp	w8, #0x2d
   33224:	str	w8, [sp]
   33228:	b.eq	33250 <rpl_re_set_registers@@Base+0x62b4>  // b.none
   3322c:	b	33230 <rpl_re_set_registers@@Base+0x6294>
   33230:	ldr	w8, [sp]
   33234:	cmp	w8, #0x5d
   33238:	b.eq	3326c <rpl_re_set_registers@@Base+0x62d0>  // b.none
   3323c:	b	33240 <rpl_re_set_registers@@Base+0x62a4>
   33240:	ldr	w8, [sp]
   33244:	cmp	w8, #0x5e
   33248:	b.eq	33288 <rpl_re_set_registers@@Base+0x62ec>  // b.none
   3324c:	b	332a4 <rpl_re_set_registers@@Base+0x6308>
   33250:	ldr	x8, [sp, #32]
   33254:	ldr	w9, [x8, #8]
   33258:	and	w9, w9, #0xffffff00
   3325c:	mov	w10, #0x16                  	// #22
   33260:	orr	w9, w9, w10
   33264:	str	w9, [x8, #8]
   33268:	b	332b8 <rpl_re_set_registers@@Base+0x631c>
   3326c:	ldr	x8, [sp, #32]
   33270:	ldr	w9, [x8, #8]
   33274:	and	w9, w9, #0xffffff00
   33278:	mov	w10, #0x15                  	// #21
   3327c:	orr	w9, w9, w10
   33280:	str	w9, [x8, #8]
   33284:	b	332b8 <rpl_re_set_registers@@Base+0x631c>
   33288:	ldr	x8, [sp, #32]
   3328c:	ldr	w9, [x8, #8]
   33290:	and	w9, w9, #0xffffff00
   33294:	mov	w10, #0x19                  	// #25
   33298:	orr	w9, w9, w10
   3329c:	str	w9, [x8, #8]
   332a0:	b	332b8 <rpl_re_set_registers@@Base+0x631c>
   332a4:	ldr	x8, [sp, #32]
   332a8:	ldr	w9, [x8, #8]
   332ac:	and	w9, w9, #0xffffff00
   332b0:	orr	w9, w9, #0x1
   332b4:	str	w9, [x8, #8]
   332b8:	mov	w8, #0x1                   	// #1
   332bc:	str	w8, [sp, #44]
   332c0:	ldr	w0, [sp, #44]
   332c4:	add	sp, sp, #0x30
   332c8:	ret
   332cc:	sub	sp, sp, #0x10
   332d0:	mov	x8, #0x40                  	// #64
   332d4:	mov	x9, #0x1                   	// #1
   332d8:	str	x0, [sp, #8]
   332dc:	str	x1, [sp]
   332e0:	ldr	x10, [sp]
   332e4:	sdiv	x11, x10, x8
   332e8:	mul	x11, x11, x8
   332ec:	subs	x10, x10, x11
   332f0:	lsl	x9, x9, x10
   332f4:	ldr	x10, [sp, #8]
   332f8:	ldr	x11, [sp]
   332fc:	sdiv	x8, x11, x8
   33300:	mov	x11, #0x8                   	// #8
   33304:	mul	x8, x11, x8
   33308:	add	x8, x10, x8
   3330c:	ldr	x10, [x8]
   33310:	orr	x9, x10, x9
   33314:	str	x9, [x8]
   33318:	add	sp, sp, #0x10
   3331c:	ret
   33320:	sub	sp, sp, #0x60
   33324:	stp	x29, x30, [sp, #80]
   33328:	add	x29, sp, #0x50
   3332c:	mov	w8, #0x1                   	// #1
   33330:	stur	x0, [x29, #-16]
   33334:	stur	x1, [x29, #-24]
   33338:	stur	x2, [x29, #-32]
   3333c:	stur	w3, [x29, #-36]
   33340:	str	x4, [sp, #32]
   33344:	str	x5, [sp, #24]
   33348:	and	w8, w6, w8
   3334c:	strb	w8, [sp, #23]
   33350:	ldur	x0, [x29, #-24]
   33354:	ldur	x9, [x29, #-24]
   33358:	ldr	x1, [x9, #72]
   3335c:	bl	34578 <rpl_re_set_registers@@Base+0x75dc>
   33360:	str	w0, [sp, #16]
   33364:	ldr	w8, [sp, #16]
   33368:	cmp	w8, #0x1
   3336c:	b.le	333b0 <rpl_re_set_registers@@Base+0x6414>
   33370:	ldur	x8, [x29, #-16]
   33374:	mov	w9, #0x1                   	// #1
   33378:	str	w9, [x8]
   3337c:	ldur	x0, [x29, #-24]
   33380:	ldur	x8, [x29, #-24]
   33384:	ldr	x1, [x8, #72]
   33388:	bl	30870 <rpl_re_set_registers@@Base+0x38d4>
   3338c:	ldur	x8, [x29, #-16]
   33390:	str	w0, [x8, #8]
   33394:	ldrsw	x8, [sp, #16]
   33398:	ldur	x10, [x29, #-24]
   3339c:	ldr	x11, [x10, #72]
   333a0:	add	x8, x11, x8
   333a4:	str	x8, [x10, #72]
   333a8:	stur	wzr, [x29, #-4]
   333ac:	b	3348c <rpl_re_set_registers@@Base+0x64f0>
   333b0:	ldursw	x8, [x29, #-36]
   333b4:	ldur	x9, [x29, #-24]
   333b8:	ldr	x10, [x9, #72]
   333bc:	add	x8, x10, x8
   333c0:	str	x8, [x9, #72]
   333c4:	ldur	x8, [x29, #-32]
   333c8:	ldr	w11, [x8, #8]
   333cc:	and	w11, w11, #0xff
   333d0:	cmp	w11, #0x1a
   333d4:	b.eq	33400 <rpl_re_set_registers@@Base+0x6464>  // b.none
   333d8:	ldur	x8, [x29, #-32]
   333dc:	ldr	w9, [x8, #8]
   333e0:	and	w9, w9, #0xff
   333e4:	cmp	w9, #0x1e
   333e8:	b.eq	33400 <rpl_re_set_registers@@Base+0x6464>  // b.none
   333ec:	ldur	x8, [x29, #-32]
   333f0:	ldr	w9, [x8, #8]
   333f4:	and	w9, w9, #0xff
   333f8:	cmp	w9, #0x1c
   333fc:	b.ne	33418 <rpl_re_set_registers@@Base+0x647c>  // b.any
   33400:	ldur	x0, [x29, #-16]
   33404:	ldur	x1, [x29, #-24]
   33408:	ldur	x2, [x29, #-32]
   3340c:	bl	34610 <rpl_re_set_registers@@Base+0x7674>
   33410:	stur	w0, [x29, #-4]
   33414:	b	3348c <rpl_re_set_registers@@Base+0x64f0>
   33418:	ldur	x8, [x29, #-32]
   3341c:	ldr	w9, [x8, #8]
   33420:	and	w9, w9, #0xff
   33424:	cmp	w9, #0x16
   33428:	cset	w9, eq  // eq = none
   3342c:	and	w9, w9, #0x1
   33430:	mov	w0, w9
   33434:	sxtw	x8, w0
   33438:	cbz	x8, 33470 <rpl_re_set_registers@@Base+0x64d4>
   3343c:	ldrb	w8, [sp, #23]
   33440:	tbnz	w8, #0, 33470 <rpl_re_set_registers@@Base+0x64d4>
   33444:	ldur	x1, [x29, #-24]
   33448:	ldr	x2, [sp, #24]
   3344c:	mov	x0, sp
   33450:	bl	32f8c <rpl_re_set_registers@@Base+0x5ff0>
   33454:	ldr	w8, [sp, #8]
   33458:	and	w8, w8, #0xff
   3345c:	cmp	w8, #0x15
   33460:	b.eq	33470 <rpl_re_set_registers@@Base+0x64d4>  // b.none
   33464:	mov	w8, #0xb                   	// #11
   33468:	stur	w8, [x29, #-4]
   3346c:	b	3348c <rpl_re_set_registers@@Base+0x64f0>
   33470:	ldur	x8, [x29, #-16]
   33474:	str	wzr, [x8]
   33478:	ldur	x8, [x29, #-32]
   3347c:	ldrb	w9, [x8]
   33480:	ldur	x8, [x29, #-16]
   33484:	strb	w9, [x8, #8]
   33488:	stur	wzr, [x29, #-4]
   3348c:	ldur	w0, [x29, #-4]
   33490:	ldp	x29, x30, [sp, #80]
   33494:	add	sp, sp, #0x60
   33498:	ret
   3349c:	sub	sp, sp, #0xb0
   334a0:	stp	x29, x30, [sp, #160]
   334a4:	add	x29, sp, #0xa0
   334a8:	stur	x0, [x29, #-16]
   334ac:	stur	x1, [x29, #-24]
   334b0:	stur	x2, [x29, #-32]
   334b4:	stur	x3, [x29, #-40]
   334b8:	stur	x4, [x29, #-48]
   334bc:	stur	x5, [x29, #-56]
   334c0:	ldur	x8, [x29, #-48]
   334c4:	ldr	w9, [x8]
   334c8:	mov	w10, #0x1                   	// #1
   334cc:	cmp	w9, #0x2
   334d0:	str	w10, [sp, #52]
   334d4:	b.eq	3351c <rpl_re_set_registers@@Base+0x6580>  // b.none
   334d8:	ldur	x8, [x29, #-48]
   334dc:	ldr	w9, [x8]
   334e0:	mov	w10, #0x1                   	// #1
   334e4:	cmp	w9, #0x4
   334e8:	str	w10, [sp, #52]
   334ec:	b.eq	3351c <rpl_re_set_registers@@Base+0x6580>  // b.none
   334f0:	ldur	x8, [x29, #-56]
   334f4:	ldr	w9, [x8]
   334f8:	mov	w10, #0x1                   	// #1
   334fc:	cmp	w9, #0x2
   33500:	str	w10, [sp, #52]
   33504:	b.eq	3351c <rpl_re_set_registers@@Base+0x6580>  // b.none
   33508:	ldur	x8, [x29, #-56]
   3350c:	ldr	w9, [x8]
   33510:	cmp	w9, #0x4
   33514:	cset	w9, eq  // eq = none
   33518:	str	w9, [sp, #52]
   3351c:	ldr	w8, [sp, #52]
   33520:	and	w8, w8, #0x1
   33524:	mov	w0, w8
   33528:	sxtw	x9, w0
   3352c:	cbz	x9, 3353c <rpl_re_set_registers@@Base+0x65a0>
   33530:	mov	w8, #0xb                   	// #11
   33534:	stur	w8, [x29, #-4]
   33538:	b	338f8 <rpl_re_set_registers@@Base+0x695c>
   3353c:	ldur	x8, [x29, #-48]
   33540:	ldr	w9, [x8]
   33544:	cmp	w9, #0x3
   33548:	b.ne	33568 <rpl_re_set_registers@@Base+0x65cc>  // b.any
   3354c:	ldur	x8, [x29, #-48]
   33550:	ldr	x0, [x8, #8]
   33554:	bl	a8e0 <strlen@plt>
   33558:	mov	w9, #0x1                   	// #1
   3355c:	cmp	x0, #0x1
   33560:	str	w9, [sp, #48]
   33564:	b.hi	335a0 <rpl_re_set_registers@@Base+0x6604>  // b.pmore
   33568:	ldur	x8, [x29, #-56]
   3356c:	ldr	w9, [x8]
   33570:	mov	w10, #0x0                   	// #0
   33574:	cmp	w9, #0x3
   33578:	str	w10, [sp, #44]
   3357c:	b.ne	33598 <rpl_re_set_registers@@Base+0x65fc>  // b.any
   33580:	ldur	x8, [x29, #-56]
   33584:	ldr	x0, [x8, #8]
   33588:	bl	a8e0 <strlen@plt>
   3358c:	cmp	x0, #0x1
   33590:	cset	w9, hi  // hi = pmore
   33594:	str	w9, [sp, #44]
   33598:	ldr	w8, [sp, #44]
   3359c:	str	w8, [sp, #48]
   335a0:	ldr	w8, [sp, #48]
   335a4:	and	w8, w8, #0x1
   335a8:	mov	w0, w8
   335ac:	sxtw	x9, w0
   335b0:	cbz	x9, 335c0 <rpl_re_set_registers@@Base+0x6624>
   335b4:	mov	w8, #0x3                   	// #3
   335b8:	stur	w8, [x29, #-4]
   335bc:	b	338f8 <rpl_re_set_registers@@Base+0x695c>
   335c0:	ldur	x8, [x29, #-48]
   335c4:	ldr	w9, [x8]
   335c8:	cbnz	w9, 335dc <rpl_re_set_registers@@Base+0x6640>
   335cc:	ldur	x8, [x29, #-48]
   335d0:	ldrb	w9, [x8, #8]
   335d4:	str	w9, [sp, #40]
   335d8:	b	33610 <rpl_re_set_registers@@Base+0x6674>
   335dc:	ldur	x8, [x29, #-48]
   335e0:	ldr	w9, [x8]
   335e4:	cmp	w9, #0x3
   335e8:	b.ne	33600 <rpl_re_set_registers@@Base+0x6664>  // b.any
   335ec:	ldur	x8, [x29, #-48]
   335f0:	ldr	x8, [x8, #8]
   335f4:	ldrb	w9, [x8]
   335f8:	str	w9, [sp, #36]
   335fc:	b	33608 <rpl_re_set_registers@@Base+0x666c>
   33600:	mov	w8, wzr
   33604:	str	w8, [sp, #36]
   33608:	ldr	w8, [sp, #36]
   3360c:	str	w8, [sp, #40]
   33610:	ldr	w8, [sp, #40]
   33614:	stur	w8, [x29, #-60]
   33618:	ldur	x9, [x29, #-56]
   3361c:	ldr	w8, [x9]
   33620:	cbnz	w8, 33634 <rpl_re_set_registers@@Base+0x6698>
   33624:	ldur	x8, [x29, #-56]
   33628:	ldrb	w9, [x8, #8]
   3362c:	str	w9, [sp, #32]
   33630:	b	33668 <rpl_re_set_registers@@Base+0x66cc>
   33634:	ldur	x8, [x29, #-56]
   33638:	ldr	w9, [x8]
   3363c:	cmp	w9, #0x3
   33640:	b.ne	33658 <rpl_re_set_registers@@Base+0x66bc>  // b.any
   33644:	ldur	x8, [x29, #-56]
   33648:	ldr	x8, [x8, #8]
   3364c:	ldrb	w9, [x8]
   33650:	str	w9, [sp, #28]
   33654:	b	33660 <rpl_re_set_registers@@Base+0x66c4>
   33658:	mov	w8, wzr
   3365c:	str	w8, [sp, #28]
   33660:	ldr	w8, [sp, #28]
   33664:	str	w8, [sp, #32]
   33668:	ldr	w8, [sp, #32]
   3366c:	stur	w8, [x29, #-64]
   33670:	ldur	x9, [x29, #-48]
   33674:	ldr	w8, [x9]
   33678:	cbz	w8, 3368c <rpl_re_set_registers@@Base+0x66f0>
   3367c:	ldur	x8, [x29, #-48]
   33680:	ldr	w9, [x8]
   33684:	cmp	w9, #0x3
   33688:	b.ne	336a4 <rpl_re_set_registers@@Base+0x6708>  // b.any
   3368c:	ldur	w8, [x29, #-60]
   33690:	ldur	x1, [x29, #-32]
   33694:	mov	w0, w8
   33698:	bl	34984 <rpl_re_set_registers@@Base+0x79e8>
   3369c:	str	w0, [sp, #24]
   336a0:	b	336b0 <rpl_re_set_registers@@Base+0x6714>
   336a4:	ldur	x8, [x29, #-48]
   336a8:	ldr	w9, [x8, #8]
   336ac:	str	w9, [sp, #24]
   336b0:	ldr	w8, [sp, #24]
   336b4:	stur	w8, [x29, #-72]
   336b8:	ldur	x9, [x29, #-56]
   336bc:	ldr	w8, [x9]
   336c0:	cbz	w8, 336d4 <rpl_re_set_registers@@Base+0x6738>
   336c4:	ldur	x8, [x29, #-56]
   336c8:	ldr	w9, [x8]
   336cc:	cmp	w9, #0x3
   336d0:	b.ne	336ec <rpl_re_set_registers@@Base+0x6750>  // b.any
   336d4:	ldur	w8, [x29, #-64]
   336d8:	ldur	x1, [x29, #-32]
   336dc:	mov	w0, w8
   336e0:	bl	34984 <rpl_re_set_registers@@Base+0x79e8>
   336e4:	str	w0, [sp, #20]
   336e8:	b	336f8 <rpl_re_set_registers@@Base+0x675c>
   336ec:	ldur	x8, [x29, #-56]
   336f0:	ldr	w9, [x8, #8]
   336f4:	str	w9, [sp, #20]
   336f8:	ldr	w8, [sp, #20]
   336fc:	stur	w8, [x29, #-76]
   33700:	ldur	w8, [x29, #-72]
   33704:	mov	w9, #0xffffffff            	// #-1
   33708:	cmp	w8, w9
   3370c:	b.eq	33720 <rpl_re_set_registers@@Base+0x6784>  // b.none
   33710:	ldur	w8, [x29, #-76]
   33714:	mov	w9, #0xffffffff            	// #-1
   33718:	cmp	w8, w9
   3371c:	b.ne	3372c <rpl_re_set_registers@@Base+0x6790>  // b.any
   33720:	mov	w8, #0x3                   	// #3
   33724:	stur	w8, [x29, #-4]
   33728:	b	338f8 <rpl_re_set_registers@@Base+0x695c>
   3372c:	ldur	x8, [x29, #-16]
   33730:	and	x8, x8, #0x10000
   33734:	mov	w9, #0x0                   	// #0
   33738:	str	w9, [sp, #16]
   3373c:	cbz	x8, 33754 <rpl_re_set_registers@@Base+0x67b8>
   33740:	ldur	w8, [x29, #-72]
   33744:	ldur	w9, [x29, #-76]
   33748:	cmp	w8, w9
   3374c:	cset	w8, hi  // hi = pmore
   33750:	str	w8, [sp, #16]
   33754:	ldr	w8, [sp, #16]
   33758:	and	w8, w8, #0x1
   3375c:	mov	w0, w8
   33760:	sxtw	x9, w0
   33764:	cbz	x9, 33774 <rpl_re_set_registers@@Base+0x67d8>
   33768:	mov	w8, #0xb                   	// #11
   3376c:	stur	w8, [x29, #-4]
   33770:	b	338f8 <rpl_re_set_registers@@Base+0x695c>
   33774:	ldur	x8, [x29, #-32]
   33778:	cbz	x8, 338a4 <rpl_re_set_registers@@Base+0x6908>
   3377c:	ldur	x8, [x29, #-40]
   33780:	ldr	x8, [x8]
   33784:	ldur	x9, [x29, #-32]
   33788:	ldr	x9, [x9, #64]
   3378c:	cmp	x8, x9
   33790:	cset	w10, eq  // eq = none
   33794:	and	w10, w10, #0x1
   33798:	mov	w0, w10
   3379c:	sxtw	x8, w0
   337a0:	cbz	x8, 3386c <rpl_re_set_registers@@Base+0x68d0>
   337a4:	ldur	x8, [x29, #-32]
   337a8:	ldr	x8, [x8, #64]
   337ac:	mov	x9, #0x2                   	// #2
   337b0:	mul	x8, x9, x8
   337b4:	add	x8, x8, #0x1
   337b8:	str	x8, [sp, #56]
   337bc:	ldur	x8, [x29, #-32]
   337c0:	ldr	x0, [x8, #8]
   337c4:	ldr	x8, [sp, #56]
   337c8:	mov	x9, #0x4                   	// #4
   337cc:	mul	x1, x8, x9
   337d0:	str	x9, [sp, #8]
   337d4:	bl	af40 <realloc@plt>
   337d8:	str	x0, [sp, #72]
   337dc:	ldur	x8, [x29, #-32]
   337e0:	ldr	x0, [x8, #16]
   337e4:	ldr	x8, [sp, #56]
   337e8:	ldr	x9, [sp, #8]
   337ec:	mul	x1, x8, x9
   337f0:	bl	af40 <realloc@plt>
   337f4:	str	x0, [sp, #64]
   337f8:	ldr	x8, [sp, #72]
   337fc:	mov	w10, #0x1                   	// #1
   33800:	str	w10, [sp, #4]
   33804:	cbz	x8, 33818 <rpl_re_set_registers@@Base+0x687c>
   33808:	ldr	x8, [sp, #64]
   3380c:	cmp	x8, #0x0
   33810:	cset	w9, eq  // eq = none
   33814:	str	w9, [sp, #4]
   33818:	ldr	w8, [sp, #4]
   3381c:	and	w8, w8, #0x1
   33820:	mov	w0, w8
   33824:	sxtw	x9, w0
   33828:	cbz	x9, 33848 <rpl_re_set_registers@@Base+0x68ac>
   3382c:	ldr	x0, [sp, #72]
   33830:	bl	a930 <free@plt>
   33834:	ldr	x0, [sp, #64]
   33838:	bl	a930 <free@plt>
   3383c:	mov	w8, #0xc                   	// #12
   33840:	stur	w8, [x29, #-4]
   33844:	b	338f8 <rpl_re_set_registers@@Base+0x695c>
   33848:	ldr	x8, [sp, #72]
   3384c:	ldur	x9, [x29, #-32]
   33850:	str	x8, [x9, #8]
   33854:	ldr	x8, [sp, #64]
   33858:	ldur	x9, [x29, #-32]
   3385c:	str	x8, [x9, #16]
   33860:	ldr	x8, [sp, #56]
   33864:	ldur	x9, [x29, #-40]
   33868:	str	x8, [x9]
   3386c:	ldur	w8, [x29, #-72]
   33870:	ldur	x9, [x29, #-32]
   33874:	ldr	x9, [x9, #8]
   33878:	ldur	x10, [x29, #-32]
   3387c:	ldr	x10, [x10, #64]
   33880:	str	w8, [x9, x10, lsl #2]
   33884:	ldur	w8, [x29, #-76]
   33888:	ldur	x9, [x29, #-32]
   3388c:	ldr	x9, [x9, #16]
   33890:	ldur	x10, [x29, #-32]
   33894:	ldr	x11, [x10, #64]
   33898:	add	x12, x11, #0x1
   3389c:	str	x12, [x10, #64]
   338a0:	str	w8, [x9, x11, lsl #2]
   338a4:	stur	wzr, [x29, #-68]
   338a8:	ldur	w8, [x29, #-68]
   338ac:	cmp	w8, #0x100
   338b0:	b.cs	338f4 <rpl_re_set_registers@@Base+0x6958>  // b.hs, b.nlast
   338b4:	ldur	w8, [x29, #-72]
   338b8:	ldur	w9, [x29, #-68]
   338bc:	cmp	w8, w9
   338c0:	b.hi	338e4 <rpl_re_set_registers@@Base+0x6948>  // b.pmore
   338c4:	ldur	w8, [x29, #-68]
   338c8:	ldur	w9, [x29, #-76]
   338cc:	cmp	w8, w9
   338d0:	b.hi	338e4 <rpl_re_set_registers@@Base+0x6948>  // b.pmore
   338d4:	ldur	x0, [x29, #-24]
   338d8:	ldur	w8, [x29, #-68]
   338dc:	mov	w1, w8
   338e0:	bl	332cc <rpl_re_set_registers@@Base+0x6330>
   338e4:	ldur	w8, [x29, #-68]
   338e8:	add	w8, w8, #0x1
   338ec:	stur	w8, [x29, #-68]
   338f0:	b	338a8 <rpl_re_set_registers@@Base+0x690c>
   338f4:	stur	wzr, [x29, #-4]
   338f8:	ldur	w0, [x29, #-4]
   338fc:	ldp	x29, x30, [sp, #160]
   33900:	add	sp, sp, #0xb0
   33904:	ret
   33908:	sub	sp, sp, #0x40
   3390c:	stp	x29, x30, [sp, #48]
   33910:	add	x29, sp, #0x30
   33914:	stur	x0, [x29, #-16]
   33918:	str	x1, [sp, #24]
   3391c:	str	x2, [sp, #16]
   33920:	str	x3, [sp, #8]
   33924:	ldr	x0, [sp, #8]
   33928:	bl	a8e0 <strlen@plt>
   3392c:	cmp	x0, #0x1
   33930:	cset	w8, ne  // ne = any
   33934:	and	w8, w8, #0x1
   33938:	mov	w0, w8
   3393c:	sxtw	x9, w0
   33940:	cbz	x9, 33950 <rpl_re_set_registers@@Base+0x69b4>
   33944:	mov	w8, #0x3                   	// #3
   33948:	stur	w8, [x29, #-4]
   3394c:	b	33968 <rpl_re_set_registers@@Base+0x69cc>
   33950:	ldur	x0, [x29, #-16]
   33954:	ldr	x8, [sp, #8]
   33958:	ldrb	w9, [x8]
   3395c:	mov	w1, w9
   33960:	bl	332cc <rpl_re_set_registers@@Base+0x6330>
   33964:	stur	wzr, [x29, #-4]
   33968:	ldur	w0, [x29, #-4]
   3396c:	ldp	x29, x30, [sp, #48]
   33970:	add	sp, sp, #0x40
   33974:	ret
   33978:	sub	sp, sp, #0x40
   3397c:	stp	x29, x30, [sp, #48]
   33980:	add	x29, sp, #0x30
   33984:	stur	x0, [x29, #-16]
   33988:	str	x1, [sp, #24]
   3398c:	str	x2, [sp, #16]
   33990:	str	x3, [sp, #8]
   33994:	ldr	x0, [sp, #8]
   33998:	bl	a8e0 <strlen@plt>
   3399c:	str	x0, [sp]
   339a0:	ldr	x8, [sp]
   339a4:	cmp	x8, #0x1
   339a8:	cset	w9, ne  // ne = any
   339ac:	and	w9, w9, #0x1
   339b0:	mov	w0, w9
   339b4:	sxtw	x8, w0
   339b8:	cbz	x8, 339c8 <rpl_re_set_registers@@Base+0x6a2c>
   339bc:	mov	w8, #0x3                   	// #3
   339c0:	stur	w8, [x29, #-4]
   339c4:	b	339e0 <rpl_re_set_registers@@Base+0x6a44>
   339c8:	ldur	x0, [x29, #-16]
   339cc:	ldr	x8, [sp, #8]
   339d0:	ldrb	w9, [x8]
   339d4:	mov	w1, w9
   339d8:	bl	332cc <rpl_re_set_registers@@Base+0x6330>
   339dc:	stur	wzr, [x29, #-4]
   339e0:	ldur	w0, [x29, #-4]
   339e4:	ldp	x29, x30, [sp, #48]
   339e8:	add	sp, sp, #0x40
   339ec:	ret
   339f0:	sub	sp, sp, #0x70
   339f4:	stp	x29, x30, [sp, #96]
   339f8:	add	x29, sp, #0x60
   339fc:	stur	x0, [x29, #-16]
   33a00:	stur	x1, [x29, #-24]
   33a04:	stur	x2, [x29, #-32]
   33a08:	stur	x3, [x29, #-40]
   33a0c:	str	x4, [sp, #48]
   33a10:	str	x5, [sp, #40]
   33a14:	ldr	x8, [sp, #48]
   33a18:	str	x8, [sp, #24]
   33a1c:	ldr	x8, [sp, #40]
   33a20:	and	x8, x8, #0x400000
   33a24:	cbz	x8, 33a5c <rpl_re_set_registers@@Base+0x6ac0>
   33a28:	ldr	x0, [sp, #24]
   33a2c:	adrp	x1, 45000 <vasnprintf@@Base+0x2e4c>
   33a30:	add	x1, x1, #0x640
   33a34:	bl	aa00 <strcmp@plt>
   33a38:	cbz	w0, 33a50 <rpl_re_set_registers@@Base+0x6ab4>
   33a3c:	ldr	x0, [sp, #24]
   33a40:	adrp	x1, 45000 <vasnprintf@@Base+0x2e4c>
   33a44:	add	x1, x1, #0x646
   33a48:	bl	aa00 <strcmp@plt>
   33a4c:	cbnz	w0, 33a5c <rpl_re_set_registers@@Base+0x6ac0>
   33a50:	adrp	x8, 45000 <vasnprintf@@Base+0x2e4c>
   33a54:	add	x8, x8, #0x64c
   33a58:	str	x8, [sp, #24]
   33a5c:	ldur	x8, [x29, #-40]
   33a60:	ldr	x8, [x8]
   33a64:	ldur	x9, [x29, #-32]
   33a68:	ldr	x9, [x9, #72]
   33a6c:	cmp	x8, x9
   33a70:	cset	w10, eq  // eq = none
   33a74:	and	w10, w10, #0x1
   33a78:	mov	w0, w10
   33a7c:	sxtw	x8, w0
   33a80:	cbz	x8, 33af8 <rpl_re_set_registers@@Base+0x6b5c>
   33a84:	ldur	x8, [x29, #-32]
   33a88:	ldr	x8, [x8, #72]
   33a8c:	mov	x9, #0x2                   	// #2
   33a90:	mul	x8, x9, x8
   33a94:	add	x8, x8, #0x1
   33a98:	str	x8, [sp, #16]
   33a9c:	ldur	x8, [x29, #-32]
   33aa0:	ldr	x0, [x8, #24]
   33aa4:	ldr	x8, [sp, #16]
   33aa8:	mov	x9, #0x8                   	// #8
   33aac:	mul	x1, x8, x9
   33ab0:	bl	af40 <realloc@plt>
   33ab4:	str	x0, [sp, #8]
   33ab8:	ldr	x8, [sp, #8]
   33abc:	cmp	x8, #0x0
   33ac0:	cset	w10, eq  // eq = none
   33ac4:	and	w10, w10, #0x1
   33ac8:	mov	w0, w10
   33acc:	sxtw	x8, w0
   33ad0:	cbz	x8, 33ae0 <rpl_re_set_registers@@Base+0x6b44>
   33ad4:	mov	w8, #0xc                   	// #12
   33ad8:	stur	w8, [x29, #-4]
   33adc:	b	344bc <rpl_re_set_registers@@Base+0x7520>
   33ae0:	ldr	x8, [sp, #8]
   33ae4:	ldur	x9, [x29, #-32]
   33ae8:	str	x8, [x9, #24]
   33aec:	ldr	x8, [sp, #16]
   33af0:	ldur	x9, [x29, #-40]
   33af4:	str	x8, [x9]
   33af8:	ldr	x0, [sp, #24]
   33afc:	bl	b890 <wctype@plt>
   33b00:	ldur	x8, [x29, #-32]
   33b04:	ldr	x8, [x8, #24]
   33b08:	ldur	x9, [x29, #-32]
   33b0c:	ldr	x10, [x9, #72]
   33b10:	add	x11, x10, #0x1
   33b14:	str	x11, [x9, #72]
   33b18:	str	x0, [x8, x10, lsl #3]
   33b1c:	ldr	x0, [sp, #24]
   33b20:	adrp	x1, 45000 <vasnprintf@@Base+0x2e4c>
   33b24:	add	x1, x1, #0x5be
   33b28:	bl	aa00 <strcmp@plt>
   33b2c:	cbnz	w0, 33be8 <rpl_re_set_registers@@Base+0x6c4c>
   33b30:	ldur	x8, [x29, #-16]
   33b34:	cmp	x8, #0x0
   33b38:	cset	w9, ne  // ne = any
   33b3c:	and	w9, w9, #0x1
   33b40:	mov	w0, w9
   33b44:	sxtw	x8, w0
   33b48:	cbz	x8, 33ba0 <rpl_re_set_registers@@Base+0x6c04>
   33b4c:	str	wzr, [sp, #36]
   33b50:	ldr	w8, [sp, #36]
   33b54:	cmp	w8, #0x100
   33b58:	b.ge	33b9c <rpl_re_set_registers@@Base+0x6c00>  // b.tcont
   33b5c:	bl	aed0 <__ctype_b_loc@plt>
   33b60:	ldr	x8, [x0]
   33b64:	ldrsw	x9, [sp, #36]
   33b68:	ldrh	w10, [x8, x9, lsl #1]
   33b6c:	and	w10, w10, #0x8
   33b70:	cbz	w10, 33b8c <rpl_re_set_registers@@Base+0x6bf0>
   33b74:	ldur	x0, [x29, #-24]
   33b78:	ldur	x8, [x29, #-16]
   33b7c:	ldrsw	x9, [sp, #36]
   33b80:	ldrb	w10, [x8, x9]
   33b84:	mov	w1, w10
   33b88:	bl	332cc <rpl_re_set_registers@@Base+0x6330>
   33b8c:	ldr	w8, [sp, #36]
   33b90:	add	w8, w8, #0x1
   33b94:	str	w8, [sp, #36]
   33b98:	b	33b50 <rpl_re_set_registers@@Base+0x6bb4>
   33b9c:	b	33be4 <rpl_re_set_registers@@Base+0x6c48>
   33ba0:	str	wzr, [sp, #36]
   33ba4:	ldr	w8, [sp, #36]
   33ba8:	cmp	w8, #0x100
   33bac:	b.ge	33be4 <rpl_re_set_registers@@Base+0x6c48>  // b.tcont
   33bb0:	bl	aed0 <__ctype_b_loc@plt>
   33bb4:	ldr	x8, [x0]
   33bb8:	ldrsw	x9, [sp, #36]
   33bbc:	ldrh	w10, [x8, x9, lsl #1]
   33bc0:	and	w10, w10, #0x8
   33bc4:	cbz	w10, 33bd4 <rpl_re_set_registers@@Base+0x6c38>
   33bc8:	ldur	x0, [x29, #-24]
   33bcc:	ldrsw	x1, [sp, #36]
   33bd0:	bl	332cc <rpl_re_set_registers@@Base+0x6330>
   33bd4:	ldr	w8, [sp, #36]
   33bd8:	add	w8, w8, #0x1
   33bdc:	str	w8, [sp, #36]
   33be0:	b	33ba4 <rpl_re_set_registers@@Base+0x6c08>
   33be4:	b	344b8 <rpl_re_set_registers@@Base+0x751c>
   33be8:	ldr	x0, [sp, #24]
   33bec:	adrp	x1, 45000 <vasnprintf@@Base+0x2e4c>
   33bf0:	add	x1, x1, #0x652
   33bf4:	bl	aa00 <strcmp@plt>
   33bf8:	cbnz	w0, 33cb4 <rpl_re_set_registers@@Base+0x6d18>
   33bfc:	ldur	x8, [x29, #-16]
   33c00:	cmp	x8, #0x0
   33c04:	cset	w9, ne  // ne = any
   33c08:	and	w9, w9, #0x1
   33c0c:	mov	w0, w9
   33c10:	sxtw	x8, w0
   33c14:	cbz	x8, 33c6c <rpl_re_set_registers@@Base+0x6cd0>
   33c18:	str	wzr, [sp, #36]
   33c1c:	ldr	w8, [sp, #36]
   33c20:	cmp	w8, #0x100
   33c24:	b.ge	33c68 <rpl_re_set_registers@@Base+0x6ccc>  // b.tcont
   33c28:	bl	aed0 <__ctype_b_loc@plt>
   33c2c:	ldr	x8, [x0]
   33c30:	ldrsw	x9, [sp, #36]
   33c34:	ldrh	w10, [x8, x9, lsl #1]
   33c38:	and	w10, w10, #0x2
   33c3c:	cbz	w10, 33c58 <rpl_re_set_registers@@Base+0x6cbc>
   33c40:	ldur	x0, [x29, #-24]
   33c44:	ldur	x8, [x29, #-16]
   33c48:	ldrsw	x9, [sp, #36]
   33c4c:	ldrb	w10, [x8, x9]
   33c50:	mov	w1, w10
   33c54:	bl	332cc <rpl_re_set_registers@@Base+0x6330>
   33c58:	ldr	w8, [sp, #36]
   33c5c:	add	w8, w8, #0x1
   33c60:	str	w8, [sp, #36]
   33c64:	b	33c1c <rpl_re_set_registers@@Base+0x6c80>
   33c68:	b	33cb0 <rpl_re_set_registers@@Base+0x6d14>
   33c6c:	str	wzr, [sp, #36]
   33c70:	ldr	w8, [sp, #36]
   33c74:	cmp	w8, #0x100
   33c78:	b.ge	33cb0 <rpl_re_set_registers@@Base+0x6d14>  // b.tcont
   33c7c:	bl	aed0 <__ctype_b_loc@plt>
   33c80:	ldr	x8, [x0]
   33c84:	ldrsw	x9, [sp, #36]
   33c88:	ldrh	w10, [x8, x9, lsl #1]
   33c8c:	and	w10, w10, #0x2
   33c90:	cbz	w10, 33ca0 <rpl_re_set_registers@@Base+0x6d04>
   33c94:	ldur	x0, [x29, #-24]
   33c98:	ldrsw	x1, [sp, #36]
   33c9c:	bl	332cc <rpl_re_set_registers@@Base+0x6330>
   33ca0:	ldr	w8, [sp, #36]
   33ca4:	add	w8, w8, #0x1
   33ca8:	str	w8, [sp, #36]
   33cac:	b	33c70 <rpl_re_set_registers@@Base+0x6cd4>
   33cb0:	b	344b8 <rpl_re_set_registers@@Base+0x751c>
   33cb4:	ldr	x0, [sp, #24]
   33cb8:	adrp	x1, 45000 <vasnprintf@@Base+0x2e4c>
   33cbc:	add	x1, x1, #0x646
   33cc0:	bl	aa00 <strcmp@plt>
   33cc4:	cbnz	w0, 33d80 <rpl_re_set_registers@@Base+0x6de4>
   33cc8:	ldur	x8, [x29, #-16]
   33ccc:	cmp	x8, #0x0
   33cd0:	cset	w9, ne  // ne = any
   33cd4:	and	w9, w9, #0x1
   33cd8:	mov	w0, w9
   33cdc:	sxtw	x8, w0
   33ce0:	cbz	x8, 33d38 <rpl_re_set_registers@@Base+0x6d9c>
   33ce4:	str	wzr, [sp, #36]
   33ce8:	ldr	w8, [sp, #36]
   33cec:	cmp	w8, #0x100
   33cf0:	b.ge	33d34 <rpl_re_set_registers@@Base+0x6d98>  // b.tcont
   33cf4:	bl	aed0 <__ctype_b_loc@plt>
   33cf8:	ldr	x8, [x0]
   33cfc:	ldrsw	x9, [sp, #36]
   33d00:	ldrh	w10, [x8, x9, lsl #1]
   33d04:	and	w10, w10, #0x200
   33d08:	cbz	w10, 33d24 <rpl_re_set_registers@@Base+0x6d88>
   33d0c:	ldur	x0, [x29, #-24]
   33d10:	ldur	x8, [x29, #-16]
   33d14:	ldrsw	x9, [sp, #36]
   33d18:	ldrb	w10, [x8, x9]
   33d1c:	mov	w1, w10
   33d20:	bl	332cc <rpl_re_set_registers@@Base+0x6330>
   33d24:	ldr	w8, [sp, #36]
   33d28:	add	w8, w8, #0x1
   33d2c:	str	w8, [sp, #36]
   33d30:	b	33ce8 <rpl_re_set_registers@@Base+0x6d4c>
   33d34:	b	33d7c <rpl_re_set_registers@@Base+0x6de0>
   33d38:	str	wzr, [sp, #36]
   33d3c:	ldr	w8, [sp, #36]
   33d40:	cmp	w8, #0x100
   33d44:	b.ge	33d7c <rpl_re_set_registers@@Base+0x6de0>  // b.tcont
   33d48:	bl	aed0 <__ctype_b_loc@plt>
   33d4c:	ldr	x8, [x0]
   33d50:	ldrsw	x9, [sp, #36]
   33d54:	ldrh	w10, [x8, x9, lsl #1]
   33d58:	and	w10, w10, #0x200
   33d5c:	cbz	w10, 33d6c <rpl_re_set_registers@@Base+0x6dd0>
   33d60:	ldur	x0, [x29, #-24]
   33d64:	ldrsw	x1, [sp, #36]
   33d68:	bl	332cc <rpl_re_set_registers@@Base+0x6330>
   33d6c:	ldr	w8, [sp, #36]
   33d70:	add	w8, w8, #0x1
   33d74:	str	w8, [sp, #36]
   33d78:	b	33d3c <rpl_re_set_registers@@Base+0x6da0>
   33d7c:	b	344b8 <rpl_re_set_registers@@Base+0x751c>
   33d80:	ldr	x0, [sp, #24]
   33d84:	adrp	x1, 45000 <vasnprintf@@Base+0x2e4c>
   33d88:	add	x1, x1, #0x5c6
   33d8c:	bl	aa00 <strcmp@plt>
   33d90:	cbnz	w0, 33e4c <rpl_re_set_registers@@Base+0x6eb0>
   33d94:	ldur	x8, [x29, #-16]
   33d98:	cmp	x8, #0x0
   33d9c:	cset	w9, ne  // ne = any
   33da0:	and	w9, w9, #0x1
   33da4:	mov	w0, w9
   33da8:	sxtw	x8, w0
   33dac:	cbz	x8, 33e04 <rpl_re_set_registers@@Base+0x6e68>
   33db0:	str	wzr, [sp, #36]
   33db4:	ldr	w8, [sp, #36]
   33db8:	cmp	w8, #0x100
   33dbc:	b.ge	33e00 <rpl_re_set_registers@@Base+0x6e64>  // b.tcont
   33dc0:	bl	aed0 <__ctype_b_loc@plt>
   33dc4:	ldr	x8, [x0]
   33dc8:	ldrsw	x9, [sp, #36]
   33dcc:	ldrh	w10, [x8, x9, lsl #1]
   33dd0:	and	w10, w10, #0x2000
   33dd4:	cbz	w10, 33df0 <rpl_re_set_registers@@Base+0x6e54>
   33dd8:	ldur	x0, [x29, #-24]
   33ddc:	ldur	x8, [x29, #-16]
   33de0:	ldrsw	x9, [sp, #36]
   33de4:	ldrb	w10, [x8, x9]
   33de8:	mov	w1, w10
   33dec:	bl	332cc <rpl_re_set_registers@@Base+0x6330>
   33df0:	ldr	w8, [sp, #36]
   33df4:	add	w8, w8, #0x1
   33df8:	str	w8, [sp, #36]
   33dfc:	b	33db4 <rpl_re_set_registers@@Base+0x6e18>
   33e00:	b	33e48 <rpl_re_set_registers@@Base+0x6eac>
   33e04:	str	wzr, [sp, #36]
   33e08:	ldr	w8, [sp, #36]
   33e0c:	cmp	w8, #0x100
   33e10:	b.ge	33e48 <rpl_re_set_registers@@Base+0x6eac>  // b.tcont
   33e14:	bl	aed0 <__ctype_b_loc@plt>
   33e18:	ldr	x8, [x0]
   33e1c:	ldrsw	x9, [sp, #36]
   33e20:	ldrh	w10, [x8, x9, lsl #1]
   33e24:	and	w10, w10, #0x2000
   33e28:	cbz	w10, 33e38 <rpl_re_set_registers@@Base+0x6e9c>
   33e2c:	ldur	x0, [x29, #-24]
   33e30:	ldrsw	x1, [sp, #36]
   33e34:	bl	332cc <rpl_re_set_registers@@Base+0x6330>
   33e38:	ldr	w8, [sp, #36]
   33e3c:	add	w8, w8, #0x1
   33e40:	str	w8, [sp, #36]
   33e44:	b	33e08 <rpl_re_set_registers@@Base+0x6e6c>
   33e48:	b	344b8 <rpl_re_set_registers@@Base+0x751c>
   33e4c:	ldr	x0, [sp, #24]
   33e50:	adrp	x1, 45000 <vasnprintf@@Base+0x2e4c>
   33e54:	add	x1, x1, #0x64c
   33e58:	bl	aa00 <strcmp@plt>
   33e5c:	cbnz	w0, 33f18 <rpl_re_set_registers@@Base+0x6f7c>
   33e60:	ldur	x8, [x29, #-16]
   33e64:	cmp	x8, #0x0
   33e68:	cset	w9, ne  // ne = any
   33e6c:	and	w9, w9, #0x1
   33e70:	mov	w0, w9
   33e74:	sxtw	x8, w0
   33e78:	cbz	x8, 33ed0 <rpl_re_set_registers@@Base+0x6f34>
   33e7c:	str	wzr, [sp, #36]
   33e80:	ldr	w8, [sp, #36]
   33e84:	cmp	w8, #0x100
   33e88:	b.ge	33ecc <rpl_re_set_registers@@Base+0x6f30>  // b.tcont
   33e8c:	bl	aed0 <__ctype_b_loc@plt>
   33e90:	ldr	x8, [x0]
   33e94:	ldrsw	x9, [sp, #36]
   33e98:	ldrh	w10, [x8, x9, lsl #1]
   33e9c:	and	w10, w10, #0x400
   33ea0:	cbz	w10, 33ebc <rpl_re_set_registers@@Base+0x6f20>
   33ea4:	ldur	x0, [x29, #-24]
   33ea8:	ldur	x8, [x29, #-16]
   33eac:	ldrsw	x9, [sp, #36]
   33eb0:	ldrb	w10, [x8, x9]
   33eb4:	mov	w1, w10
   33eb8:	bl	332cc <rpl_re_set_registers@@Base+0x6330>
   33ebc:	ldr	w8, [sp, #36]
   33ec0:	add	w8, w8, #0x1
   33ec4:	str	w8, [sp, #36]
   33ec8:	b	33e80 <rpl_re_set_registers@@Base+0x6ee4>
   33ecc:	b	33f14 <rpl_re_set_registers@@Base+0x6f78>
   33ed0:	str	wzr, [sp, #36]
   33ed4:	ldr	w8, [sp, #36]
   33ed8:	cmp	w8, #0x100
   33edc:	b.ge	33f14 <rpl_re_set_registers@@Base+0x6f78>  // b.tcont
   33ee0:	bl	aed0 <__ctype_b_loc@plt>
   33ee4:	ldr	x8, [x0]
   33ee8:	ldrsw	x9, [sp, #36]
   33eec:	ldrh	w10, [x8, x9, lsl #1]
   33ef0:	and	w10, w10, #0x400
   33ef4:	cbz	w10, 33f04 <rpl_re_set_registers@@Base+0x6f68>
   33ef8:	ldur	x0, [x29, #-24]
   33efc:	ldrsw	x1, [sp, #36]
   33f00:	bl	332cc <rpl_re_set_registers@@Base+0x6330>
   33f04:	ldr	w8, [sp, #36]
   33f08:	add	w8, w8, #0x1
   33f0c:	str	w8, [sp, #36]
   33f10:	b	33ed4 <rpl_re_set_registers@@Base+0x6f38>
   33f14:	b	344b8 <rpl_re_set_registers@@Base+0x751c>
   33f18:	ldr	x0, [sp, #24]
   33f1c:	adrp	x1, 45000 <vasnprintf@@Base+0x2e4c>
   33f20:	add	x1, x1, #0x658
   33f24:	bl	aa00 <strcmp@plt>
   33f28:	cbnz	w0, 33fe4 <rpl_re_set_registers@@Base+0x7048>
   33f2c:	ldur	x8, [x29, #-16]
   33f30:	cmp	x8, #0x0
   33f34:	cset	w9, ne  // ne = any
   33f38:	and	w9, w9, #0x1
   33f3c:	mov	w0, w9
   33f40:	sxtw	x8, w0
   33f44:	cbz	x8, 33f9c <rpl_re_set_registers@@Base+0x7000>
   33f48:	str	wzr, [sp, #36]
   33f4c:	ldr	w8, [sp, #36]
   33f50:	cmp	w8, #0x100
   33f54:	b.ge	33f98 <rpl_re_set_registers@@Base+0x6ffc>  // b.tcont
   33f58:	bl	aed0 <__ctype_b_loc@plt>
   33f5c:	ldr	x8, [x0]
   33f60:	ldrsw	x9, [sp, #36]
   33f64:	ldrh	w10, [x8, x9, lsl #1]
   33f68:	and	w10, w10, #0x800
   33f6c:	cbz	w10, 33f88 <rpl_re_set_registers@@Base+0x6fec>
   33f70:	ldur	x0, [x29, #-24]
   33f74:	ldur	x8, [x29, #-16]
   33f78:	ldrsw	x9, [sp, #36]
   33f7c:	ldrb	w10, [x8, x9]
   33f80:	mov	w1, w10
   33f84:	bl	332cc <rpl_re_set_registers@@Base+0x6330>
   33f88:	ldr	w8, [sp, #36]
   33f8c:	add	w8, w8, #0x1
   33f90:	str	w8, [sp, #36]
   33f94:	b	33f4c <rpl_re_set_registers@@Base+0x6fb0>
   33f98:	b	33fe0 <rpl_re_set_registers@@Base+0x7044>
   33f9c:	str	wzr, [sp, #36]
   33fa0:	ldr	w8, [sp, #36]
   33fa4:	cmp	w8, #0x100
   33fa8:	b.ge	33fe0 <rpl_re_set_registers@@Base+0x7044>  // b.tcont
   33fac:	bl	aed0 <__ctype_b_loc@plt>
   33fb0:	ldr	x8, [x0]
   33fb4:	ldrsw	x9, [sp, #36]
   33fb8:	ldrh	w10, [x8, x9, lsl #1]
   33fbc:	and	w10, w10, #0x800
   33fc0:	cbz	w10, 33fd0 <rpl_re_set_registers@@Base+0x7034>
   33fc4:	ldur	x0, [x29, #-24]
   33fc8:	ldrsw	x1, [sp, #36]
   33fcc:	bl	332cc <rpl_re_set_registers@@Base+0x6330>
   33fd0:	ldr	w8, [sp, #36]
   33fd4:	add	w8, w8, #0x1
   33fd8:	str	w8, [sp, #36]
   33fdc:	b	33fa0 <rpl_re_set_registers@@Base+0x7004>
   33fe0:	b	344b8 <rpl_re_set_registers@@Base+0x751c>
   33fe4:	ldr	x0, [sp, #24]
   33fe8:	adrp	x1, 45000 <vasnprintf@@Base+0x2e4c>
   33fec:	add	x1, x1, #0x65e
   33ff0:	bl	aa00 <strcmp@plt>
   33ff4:	cbnz	w0, 340b0 <rpl_re_set_registers@@Base+0x7114>
   33ff8:	ldur	x8, [x29, #-16]
   33ffc:	cmp	x8, #0x0
   34000:	cset	w9, ne  // ne = any
   34004:	and	w9, w9, #0x1
   34008:	mov	w0, w9
   3400c:	sxtw	x8, w0
   34010:	cbz	x8, 34068 <rpl_re_set_registers@@Base+0x70cc>
   34014:	str	wzr, [sp, #36]
   34018:	ldr	w8, [sp, #36]
   3401c:	cmp	w8, #0x100
   34020:	b.ge	34064 <rpl_re_set_registers@@Base+0x70c8>  // b.tcont
   34024:	bl	aed0 <__ctype_b_loc@plt>
   34028:	ldr	x8, [x0]
   3402c:	ldrsw	x9, [sp, #36]
   34030:	ldrh	w10, [x8, x9, lsl #1]
   34034:	and	w10, w10, #0x4000
   34038:	cbz	w10, 34054 <rpl_re_set_registers@@Base+0x70b8>
   3403c:	ldur	x0, [x29, #-24]
   34040:	ldur	x8, [x29, #-16]
   34044:	ldrsw	x9, [sp, #36]
   34048:	ldrb	w10, [x8, x9]
   3404c:	mov	w1, w10
   34050:	bl	332cc <rpl_re_set_registers@@Base+0x6330>
   34054:	ldr	w8, [sp, #36]
   34058:	add	w8, w8, #0x1
   3405c:	str	w8, [sp, #36]
   34060:	b	34018 <rpl_re_set_registers@@Base+0x707c>
   34064:	b	340ac <rpl_re_set_registers@@Base+0x7110>
   34068:	str	wzr, [sp, #36]
   3406c:	ldr	w8, [sp, #36]
   34070:	cmp	w8, #0x100
   34074:	b.ge	340ac <rpl_re_set_registers@@Base+0x7110>  // b.tcont
   34078:	bl	aed0 <__ctype_b_loc@plt>
   3407c:	ldr	x8, [x0]
   34080:	ldrsw	x9, [sp, #36]
   34084:	ldrh	w10, [x8, x9, lsl #1]
   34088:	and	w10, w10, #0x4000
   3408c:	cbz	w10, 3409c <rpl_re_set_registers@@Base+0x7100>
   34090:	ldur	x0, [x29, #-24]
   34094:	ldrsw	x1, [sp, #36]
   34098:	bl	332cc <rpl_re_set_registers@@Base+0x6330>
   3409c:	ldr	w8, [sp, #36]
   340a0:	add	w8, w8, #0x1
   340a4:	str	w8, [sp, #36]
   340a8:	b	3406c <rpl_re_set_registers@@Base+0x70d0>
   340ac:	b	344b8 <rpl_re_set_registers@@Base+0x751c>
   340b0:	ldr	x0, [sp, #24]
   340b4:	adrp	x1, 45000 <vasnprintf@@Base+0x2e4c>
   340b8:	add	x1, x1, #0x640
   340bc:	bl	aa00 <strcmp@plt>
   340c0:	cbnz	w0, 3417c <rpl_re_set_registers@@Base+0x71e0>
   340c4:	ldur	x8, [x29, #-16]
   340c8:	cmp	x8, #0x0
   340cc:	cset	w9, ne  // ne = any
   340d0:	and	w9, w9, #0x1
   340d4:	mov	w0, w9
   340d8:	sxtw	x8, w0
   340dc:	cbz	x8, 34134 <rpl_re_set_registers@@Base+0x7198>
   340e0:	str	wzr, [sp, #36]
   340e4:	ldr	w8, [sp, #36]
   340e8:	cmp	w8, #0x100
   340ec:	b.ge	34130 <rpl_re_set_registers@@Base+0x7194>  // b.tcont
   340f0:	bl	aed0 <__ctype_b_loc@plt>
   340f4:	ldr	x8, [x0]
   340f8:	ldrsw	x9, [sp, #36]
   340fc:	ldrh	w10, [x8, x9, lsl #1]
   34100:	and	w10, w10, #0x100
   34104:	cbz	w10, 34120 <rpl_re_set_registers@@Base+0x7184>
   34108:	ldur	x0, [x29, #-24]
   3410c:	ldur	x8, [x29, #-16]
   34110:	ldrsw	x9, [sp, #36]
   34114:	ldrb	w10, [x8, x9]
   34118:	mov	w1, w10
   3411c:	bl	332cc <rpl_re_set_registers@@Base+0x6330>
   34120:	ldr	w8, [sp, #36]
   34124:	add	w8, w8, #0x1
   34128:	str	w8, [sp, #36]
   3412c:	b	340e4 <rpl_re_set_registers@@Base+0x7148>
   34130:	b	34178 <rpl_re_set_registers@@Base+0x71dc>
   34134:	str	wzr, [sp, #36]
   34138:	ldr	w8, [sp, #36]
   3413c:	cmp	w8, #0x100
   34140:	b.ge	34178 <rpl_re_set_registers@@Base+0x71dc>  // b.tcont
   34144:	bl	aed0 <__ctype_b_loc@plt>
   34148:	ldr	x8, [x0]
   3414c:	ldrsw	x9, [sp, #36]
   34150:	ldrh	w10, [x8, x9, lsl #1]
   34154:	and	w10, w10, #0x100
   34158:	cbz	w10, 34168 <rpl_re_set_registers@@Base+0x71cc>
   3415c:	ldur	x0, [x29, #-24]
   34160:	ldrsw	x1, [sp, #36]
   34164:	bl	332cc <rpl_re_set_registers@@Base+0x6330>
   34168:	ldr	w8, [sp, #36]
   3416c:	add	w8, w8, #0x1
   34170:	str	w8, [sp, #36]
   34174:	b	34138 <rpl_re_set_registers@@Base+0x719c>
   34178:	b	344b8 <rpl_re_set_registers@@Base+0x751c>
   3417c:	ldr	x0, [sp, #24]
   34180:	adrp	x1, 45000 <vasnprintf@@Base+0x2e4c>
   34184:	add	x1, x1, #0x664
   34188:	bl	aa00 <strcmp@plt>
   3418c:	cbnz	w0, 34248 <rpl_re_set_registers@@Base+0x72ac>
   34190:	ldur	x8, [x29, #-16]
   34194:	cmp	x8, #0x0
   34198:	cset	w9, ne  // ne = any
   3419c:	and	w9, w9, #0x1
   341a0:	mov	w0, w9
   341a4:	sxtw	x8, w0
   341a8:	cbz	x8, 34200 <rpl_re_set_registers@@Base+0x7264>
   341ac:	str	wzr, [sp, #36]
   341b0:	ldr	w8, [sp, #36]
   341b4:	cmp	w8, #0x100
   341b8:	b.ge	341fc <rpl_re_set_registers@@Base+0x7260>  // b.tcont
   341bc:	bl	aed0 <__ctype_b_loc@plt>
   341c0:	ldr	x8, [x0]
   341c4:	ldrsw	x9, [sp, #36]
   341c8:	ldrh	w10, [x8, x9, lsl #1]
   341cc:	and	w10, w10, #0x1
   341d0:	cbz	w10, 341ec <rpl_re_set_registers@@Base+0x7250>
   341d4:	ldur	x0, [x29, #-24]
   341d8:	ldur	x8, [x29, #-16]
   341dc:	ldrsw	x9, [sp, #36]
   341e0:	ldrb	w10, [x8, x9]
   341e4:	mov	w1, w10
   341e8:	bl	332cc <rpl_re_set_registers@@Base+0x6330>
   341ec:	ldr	w8, [sp, #36]
   341f0:	add	w8, w8, #0x1
   341f4:	str	w8, [sp, #36]
   341f8:	b	341b0 <rpl_re_set_registers@@Base+0x7214>
   341fc:	b	34244 <rpl_re_set_registers@@Base+0x72a8>
   34200:	str	wzr, [sp, #36]
   34204:	ldr	w8, [sp, #36]
   34208:	cmp	w8, #0x100
   3420c:	b.ge	34244 <rpl_re_set_registers@@Base+0x72a8>  // b.tcont
   34210:	bl	aed0 <__ctype_b_loc@plt>
   34214:	ldr	x8, [x0]
   34218:	ldrsw	x9, [sp, #36]
   3421c:	ldrh	w10, [x8, x9, lsl #1]
   34220:	and	w10, w10, #0x1
   34224:	cbz	w10, 34234 <rpl_re_set_registers@@Base+0x7298>
   34228:	ldur	x0, [x29, #-24]
   3422c:	ldrsw	x1, [sp, #36]
   34230:	bl	332cc <rpl_re_set_registers@@Base+0x6330>
   34234:	ldr	w8, [sp, #36]
   34238:	add	w8, w8, #0x1
   3423c:	str	w8, [sp, #36]
   34240:	b	34204 <rpl_re_set_registers@@Base+0x7268>
   34244:	b	344b8 <rpl_re_set_registers@@Base+0x751c>
   34248:	ldr	x0, [sp, #24]
   3424c:	adrp	x1, 45000 <vasnprintf@@Base+0x2e4c>
   34250:	add	x1, x1, #0x66a
   34254:	bl	aa00 <strcmp@plt>
   34258:	cbnz	w0, 34314 <rpl_re_set_registers@@Base+0x7378>
   3425c:	ldur	x8, [x29, #-16]
   34260:	cmp	x8, #0x0
   34264:	cset	w9, ne  // ne = any
   34268:	and	w9, w9, #0x1
   3426c:	mov	w0, w9
   34270:	sxtw	x8, w0
   34274:	cbz	x8, 342cc <rpl_re_set_registers@@Base+0x7330>
   34278:	str	wzr, [sp, #36]
   3427c:	ldr	w8, [sp, #36]
   34280:	cmp	w8, #0x100
   34284:	b.ge	342c8 <rpl_re_set_registers@@Base+0x732c>  // b.tcont
   34288:	bl	aed0 <__ctype_b_loc@plt>
   3428c:	ldr	x8, [x0]
   34290:	ldrsw	x9, [sp, #36]
   34294:	ldrh	w10, [x8, x9, lsl #1]
   34298:	and	w10, w10, #0x8000
   3429c:	cbz	w10, 342b8 <rpl_re_set_registers@@Base+0x731c>
   342a0:	ldur	x0, [x29, #-24]
   342a4:	ldur	x8, [x29, #-16]
   342a8:	ldrsw	x9, [sp, #36]
   342ac:	ldrb	w10, [x8, x9]
   342b0:	mov	w1, w10
   342b4:	bl	332cc <rpl_re_set_registers@@Base+0x6330>
   342b8:	ldr	w8, [sp, #36]
   342bc:	add	w8, w8, #0x1
   342c0:	str	w8, [sp, #36]
   342c4:	b	3427c <rpl_re_set_registers@@Base+0x72e0>
   342c8:	b	34310 <rpl_re_set_registers@@Base+0x7374>
   342cc:	str	wzr, [sp, #36]
   342d0:	ldr	w8, [sp, #36]
   342d4:	cmp	w8, #0x100
   342d8:	b.ge	34310 <rpl_re_set_registers@@Base+0x7374>  // b.tcont
   342dc:	bl	aed0 <__ctype_b_loc@plt>
   342e0:	ldr	x8, [x0]
   342e4:	ldrsw	x9, [sp, #36]
   342e8:	ldrh	w10, [x8, x9, lsl #1]
   342ec:	and	w10, w10, #0x8000
   342f0:	cbz	w10, 34300 <rpl_re_set_registers@@Base+0x7364>
   342f4:	ldur	x0, [x29, #-24]
   342f8:	ldrsw	x1, [sp, #36]
   342fc:	bl	332cc <rpl_re_set_registers@@Base+0x6330>
   34300:	ldr	w8, [sp, #36]
   34304:	add	w8, w8, #0x1
   34308:	str	w8, [sp, #36]
   3430c:	b	342d0 <rpl_re_set_registers@@Base+0x7334>
   34310:	b	344b8 <rpl_re_set_registers@@Base+0x751c>
   34314:	ldr	x0, [sp, #24]
   34318:	adrp	x1, 45000 <vasnprintf@@Base+0x2e4c>
   3431c:	add	x1, x1, #0x670
   34320:	bl	aa00 <strcmp@plt>
   34324:	cbnz	w0, 343e0 <rpl_re_set_registers@@Base+0x7444>
   34328:	ldur	x8, [x29, #-16]
   3432c:	cmp	x8, #0x0
   34330:	cset	w9, ne  // ne = any
   34334:	and	w9, w9, #0x1
   34338:	mov	w0, w9
   3433c:	sxtw	x8, w0
   34340:	cbz	x8, 34398 <rpl_re_set_registers@@Base+0x73fc>
   34344:	str	wzr, [sp, #36]
   34348:	ldr	w8, [sp, #36]
   3434c:	cmp	w8, #0x100
   34350:	b.ge	34394 <rpl_re_set_registers@@Base+0x73f8>  // b.tcont
   34354:	bl	aed0 <__ctype_b_loc@plt>
   34358:	ldr	x8, [x0]
   3435c:	ldrsw	x9, [sp, #36]
   34360:	ldrh	w10, [x8, x9, lsl #1]
   34364:	and	w10, w10, #0x4
   34368:	cbz	w10, 34384 <rpl_re_set_registers@@Base+0x73e8>
   3436c:	ldur	x0, [x29, #-24]
   34370:	ldur	x8, [x29, #-16]
   34374:	ldrsw	x9, [sp, #36]
   34378:	ldrb	w10, [x8, x9]
   3437c:	mov	w1, w10
   34380:	bl	332cc <rpl_re_set_registers@@Base+0x6330>
   34384:	ldr	w8, [sp, #36]
   34388:	add	w8, w8, #0x1
   3438c:	str	w8, [sp, #36]
   34390:	b	34348 <rpl_re_set_registers@@Base+0x73ac>
   34394:	b	343dc <rpl_re_set_registers@@Base+0x7440>
   34398:	str	wzr, [sp, #36]
   3439c:	ldr	w8, [sp, #36]
   343a0:	cmp	w8, #0x100
   343a4:	b.ge	343dc <rpl_re_set_registers@@Base+0x7440>  // b.tcont
   343a8:	bl	aed0 <__ctype_b_loc@plt>
   343ac:	ldr	x8, [x0]
   343b0:	ldrsw	x9, [sp, #36]
   343b4:	ldrh	w10, [x8, x9, lsl #1]
   343b8:	and	w10, w10, #0x4
   343bc:	cbz	w10, 343cc <rpl_re_set_registers@@Base+0x7430>
   343c0:	ldur	x0, [x29, #-24]
   343c4:	ldrsw	x1, [sp, #36]
   343c8:	bl	332cc <rpl_re_set_registers@@Base+0x6330>
   343cc:	ldr	w8, [sp, #36]
   343d0:	add	w8, w8, #0x1
   343d4:	str	w8, [sp, #36]
   343d8:	b	3439c <rpl_re_set_registers@@Base+0x7400>
   343dc:	b	344b8 <rpl_re_set_registers@@Base+0x751c>
   343e0:	ldr	x0, [sp, #24]
   343e4:	adrp	x1, 45000 <vasnprintf@@Base+0x2e4c>
   343e8:	add	x1, x1, #0x676
   343ec:	bl	aa00 <strcmp@plt>
   343f0:	cbnz	w0, 344ac <rpl_re_set_registers@@Base+0x7510>
   343f4:	ldur	x8, [x29, #-16]
   343f8:	cmp	x8, #0x0
   343fc:	cset	w9, ne  // ne = any
   34400:	and	w9, w9, #0x1
   34404:	mov	w0, w9
   34408:	sxtw	x8, w0
   3440c:	cbz	x8, 34464 <rpl_re_set_registers@@Base+0x74c8>
   34410:	str	wzr, [sp, #36]
   34414:	ldr	w8, [sp, #36]
   34418:	cmp	w8, #0x100
   3441c:	b.ge	34460 <rpl_re_set_registers@@Base+0x74c4>  // b.tcont
   34420:	bl	aed0 <__ctype_b_loc@plt>
   34424:	ldr	x8, [x0]
   34428:	ldrsw	x9, [sp, #36]
   3442c:	ldrh	w10, [x8, x9, lsl #1]
   34430:	and	w10, w10, #0x1000
   34434:	cbz	w10, 34450 <rpl_re_set_registers@@Base+0x74b4>
   34438:	ldur	x0, [x29, #-24]
   3443c:	ldur	x8, [x29, #-16]
   34440:	ldrsw	x9, [sp, #36]
   34444:	ldrb	w10, [x8, x9]
   34448:	mov	w1, w10
   3444c:	bl	332cc <rpl_re_set_registers@@Base+0x6330>
   34450:	ldr	w8, [sp, #36]
   34454:	add	w8, w8, #0x1
   34458:	str	w8, [sp, #36]
   3445c:	b	34414 <rpl_re_set_registers@@Base+0x7478>
   34460:	b	344a8 <rpl_re_set_registers@@Base+0x750c>
   34464:	str	wzr, [sp, #36]
   34468:	ldr	w8, [sp, #36]
   3446c:	cmp	w8, #0x100
   34470:	b.ge	344a8 <rpl_re_set_registers@@Base+0x750c>  // b.tcont
   34474:	bl	aed0 <__ctype_b_loc@plt>
   34478:	ldr	x8, [x0]
   3447c:	ldrsw	x9, [sp, #36]
   34480:	ldrh	w10, [x8, x9, lsl #1]
   34484:	and	w10, w10, #0x1000
   34488:	cbz	w10, 34498 <rpl_re_set_registers@@Base+0x74fc>
   3448c:	ldur	x0, [x29, #-24]
   34490:	ldrsw	x1, [sp, #36]
   34494:	bl	332cc <rpl_re_set_registers@@Base+0x6330>
   34498:	ldr	w8, [sp, #36]
   3449c:	add	w8, w8, #0x1
   344a0:	str	w8, [sp, #36]
   344a4:	b	34468 <rpl_re_set_registers@@Base+0x74cc>
   344a8:	b	344b8 <rpl_re_set_registers@@Base+0x751c>
   344ac:	mov	w8, #0x4                   	// #4
   344b0:	stur	w8, [x29, #-4]
   344b4:	b	344bc <rpl_re_set_registers@@Base+0x7520>
   344b8:	stur	wzr, [x29, #-4]
   344bc:	ldur	w0, [x29, #-4]
   344c0:	ldp	x29, x30, [sp, #96]
   344c4:	add	sp, sp, #0x70
   344c8:	ret
   344cc:	sub	sp, sp, #0x10
   344d0:	str	x0, [sp, #8]
   344d4:	str	wzr, [sp, #4]
   344d8:	ldr	w8, [sp, #4]
   344dc:	cmp	w8, #0x4
   344e0:	b.ge	34510 <rpl_re_set_registers@@Base+0x7574>  // b.tcont
   344e4:	ldr	x8, [sp, #8]
   344e8:	ldrsw	x9, [sp, #4]
   344ec:	ldr	x8, [x8, x9, lsl #3]
   344f0:	mvn	x8, x8
   344f4:	ldr	x9, [sp, #8]
   344f8:	ldrsw	x10, [sp, #4]
   344fc:	str	x8, [x9, x10, lsl #3]
   34500:	ldr	w8, [sp, #4]
   34504:	add	w8, w8, #0x1
   34508:	str	w8, [sp, #4]
   3450c:	b	344d8 <rpl_re_set_registers@@Base+0x753c>
   34510:	add	sp, sp, #0x10
   34514:	ret
   34518:	sub	sp, sp, #0x20
   3451c:	str	x0, [sp, #24]
   34520:	str	x1, [sp, #16]
   34524:	str	wzr, [sp, #12]
   34528:	ldr	w8, [sp, #12]
   3452c:	cmp	w8, #0x4
   34530:	b.ge	34570 <rpl_re_set_registers@@Base+0x75d4>  // b.tcont
   34534:	ldr	x8, [sp, #16]
   34538:	ldrsw	x9, [sp, #12]
   3453c:	mov	x10, #0x8                   	// #8
   34540:	ldr	x8, [x8, x9, lsl #3]
   34544:	ldr	x9, [sp, #24]
   34548:	ldrsw	x11, [sp, #12]
   3454c:	mul	x10, x10, x11
   34550:	add	x9, x9, x10
   34554:	ldr	x10, [x9]
   34558:	and	x8, x10, x8
   3455c:	str	x8, [x9]
   34560:	ldr	w8, [sp, #12]
   34564:	add	w8, w8, #0x1
   34568:	str	w8, [sp, #12]
   3456c:	b	34528 <rpl_re_set_registers@@Base+0x758c>
   34570:	add	sp, sp, #0x20
   34574:	ret
   34578:	sub	sp, sp, #0x20
   3457c:	str	x0, [sp, #16]
   34580:	str	x1, [sp, #8]
   34584:	ldr	x8, [sp, #16]
   34588:	ldr	w9, [x8, #144]
   3458c:	cmp	w9, #0x1
   34590:	b.ne	345a0 <rpl_re_set_registers@@Base+0x7604>  // b.any
   34594:	mov	w8, #0x1                   	// #1
   34598:	str	w8, [sp, #28]
   3459c:	b	34604 <rpl_re_set_registers@@Base+0x7668>
   345a0:	mov	w8, #0x1                   	// #1
   345a4:	str	w8, [sp, #4]
   345a8:	ldr	x8, [sp, #8]
   345ac:	ldrsw	x9, [sp, #4]
   345b0:	add	x8, x8, x9
   345b4:	ldr	x9, [sp, #16]
   345b8:	ldr	x9, [x9, #48]
   345bc:	cmp	x8, x9
   345c0:	b.ge	345fc <rpl_re_set_registers@@Base+0x7660>  // b.tcont
   345c4:	ldr	x8, [sp, #16]
   345c8:	ldr	x8, [x8, #16]
   345cc:	ldr	x9, [sp, #8]
   345d0:	ldrsw	x10, [sp, #4]
   345d4:	add	x9, x9, x10
   345d8:	ldr	w11, [x8, x9, lsl #2]
   345dc:	mov	w12, #0xffffffff            	// #-1
   345e0:	cmp	w11, w12
   345e4:	b.eq	345ec <rpl_re_set_registers@@Base+0x7650>  // b.none
   345e8:	b	345fc <rpl_re_set_registers@@Base+0x7660>
   345ec:	ldr	w8, [sp, #4]
   345f0:	add	w8, w8, #0x1
   345f4:	str	w8, [sp, #4]
   345f8:	b	345a8 <rpl_re_set_registers@@Base+0x760c>
   345fc:	ldr	w8, [sp, #4]
   34600:	str	w8, [sp, #28]
   34604:	ldr	w0, [sp, #28]
   34608:	add	sp, sp, #0x20
   3460c:	ret
   34610:	sub	sp, sp, #0x40
   34614:	stp	x29, x30, [sp, #48]
   34618:	add	x29, sp, #0x30
   3461c:	stur	x0, [x29, #-16]
   34620:	str	x1, [sp, #24]
   34624:	str	x2, [sp, #16]
   34628:	ldr	x8, [sp, #16]
   3462c:	ldrb	w9, [x8]
   34630:	strb	w9, [sp, #14]
   34634:	str	wzr, [sp, #8]
   34638:	ldr	x8, [sp, #24]
   3463c:	ldr	x8, [x8, #104]
   34640:	ldr	x10, [sp, #24]
   34644:	ldr	x10, [x10, #72]
   34648:	cmp	x8, x10
   3464c:	b.gt	3465c <rpl_re_set_registers@@Base+0x76c0>
   34650:	mov	w8, #0x7                   	// #7
   34654:	stur	w8, [x29, #-4]
   34658:	b	347d4 <rpl_re_set_registers@@Base+0x7838>
   3465c:	ldr	w8, [sp, #8]
   34660:	cmp	w8, #0x20
   34664:	b.lt	34674 <rpl_re_set_registers@@Base+0x76d8>  // b.tstop
   34668:	mov	w8, #0x7                   	// #7
   3466c:	stur	w8, [x29, #-4]
   34670:	b	347d4 <rpl_re_set_registers@@Base+0x7838>
   34674:	ldr	x8, [sp, #16]
   34678:	ldr	w9, [x8, #8]
   3467c:	and	w9, w9, #0xff
   34680:	cmp	w9, #0x1e
   34684:	b.ne	34698 <rpl_re_set_registers@@Base+0x76fc>  // b.any
   34688:	ldr	x0, [sp, #24]
   3468c:	bl	347e4 <rpl_re_set_registers@@Base+0x7848>
   34690:	strb	w0, [sp, #15]
   34694:	b	346bc <rpl_re_set_registers@@Base+0x7720>
   34698:	ldr	x8, [sp, #24]
   3469c:	ldr	x8, [x8, #8]
   346a0:	ldr	x9, [sp, #24]
   346a4:	ldr	x10, [x9, #72]
   346a8:	add	x11, x10, #0x1
   346ac:	str	x11, [x9, #72]
   346b0:	add	x8, x8, x10
   346b4:	ldrb	w12, [x8]
   346b8:	strb	w12, [sp, #15]
   346bc:	ldr	x8, [sp, #24]
   346c0:	ldr	x8, [x8, #104]
   346c4:	ldr	x9, [sp, #24]
   346c8:	ldr	x9, [x9, #72]
   346cc:	cmp	x8, x9
   346d0:	b.gt	346e0 <rpl_re_set_registers@@Base+0x7744>
   346d4:	mov	w8, #0x7                   	// #7
   346d8:	stur	w8, [x29, #-4]
   346dc:	b	347d4 <rpl_re_set_registers@@Base+0x7838>
   346e0:	ldrb	w8, [sp, #15]
   346e4:	ldrb	w9, [sp, #14]
   346e8:	cmp	w8, w9
   346ec:	b.ne	34714 <rpl_re_set_registers@@Base+0x7778>  // b.any
   346f0:	ldr	x8, [sp, #24]
   346f4:	ldr	x8, [x8, #8]
   346f8:	ldr	x9, [sp, #24]
   346fc:	ldr	x9, [x9, #72]
   34700:	add	x9, x9, #0x0
   34704:	ldrb	w10, [x8, x9]
   34708:	cmp	w10, #0x5d
   3470c:	b.ne	34714 <rpl_re_set_registers@@Base+0x7778>  // b.any
   34710:	b	3473c <rpl_re_set_registers@@Base+0x77a0>
   34714:	ldrb	w8, [sp, #15]
   34718:	ldur	x9, [x29, #-16]
   3471c:	ldr	x9, [x9, #8]
   34720:	ldrsw	x10, [sp, #8]
   34724:	add	x9, x9, x10
   34728:	strb	w8, [x9]
   3472c:	ldr	w8, [sp, #8]
   34730:	add	w8, w8, #0x1
   34734:	str	w8, [sp, #8]
   34738:	b	3465c <rpl_re_set_registers@@Base+0x76c0>
   3473c:	ldr	x8, [sp, #24]
   34740:	ldr	x9, [x8, #72]
   34744:	add	x9, x9, #0x1
   34748:	str	x9, [x8, #72]
   3474c:	ldur	x8, [x29, #-16]
   34750:	ldr	x8, [x8, #8]
   34754:	ldrsw	x9, [sp, #8]
   34758:	add	x8, x8, x9
   3475c:	mov	w10, #0x0                   	// #0
   34760:	strb	w10, [x8]
   34764:	ldr	x8, [sp, #16]
   34768:	ldr	w10, [x8, #8]
   3476c:	and	w10, w10, #0xff
   34770:	cmp	w10, #0x1a
   34774:	str	w10, [sp, #4]
   34778:	b.eq	347a0 <rpl_re_set_registers@@Base+0x7804>  // b.none
   3477c:	b	34780 <rpl_re_set_registers@@Base+0x77e4>
   34780:	ldr	w8, [sp, #4]
   34784:	cmp	w8, #0x1c
   34788:	b.eq	347b0 <rpl_re_set_registers@@Base+0x7814>  // b.none
   3478c:	b	34790 <rpl_re_set_registers@@Base+0x77f4>
   34790:	ldr	w8, [sp, #4]
   34794:	cmp	w8, #0x1e
   34798:	b.eq	347c0 <rpl_re_set_registers@@Base+0x7824>  // b.none
   3479c:	b	347d0 <rpl_re_set_registers@@Base+0x7834>
   347a0:	ldur	x8, [x29, #-16]
   347a4:	mov	w9, #0x3                   	// #3
   347a8:	str	w9, [x8]
   347ac:	b	347d0 <rpl_re_set_registers@@Base+0x7834>
   347b0:	ldur	x8, [x29, #-16]
   347b4:	mov	w9, #0x2                   	// #2
   347b8:	str	w9, [x8]
   347bc:	b	347d0 <rpl_re_set_registers@@Base+0x7834>
   347c0:	ldur	x8, [x29, #-16]
   347c4:	mov	w9, #0x4                   	// #4
   347c8:	str	w9, [x8]
   347cc:	b	347d0 <rpl_re_set_registers@@Base+0x7834>
   347d0:	stur	wzr, [x29, #-4]
   347d4:	ldur	w0, [x29, #-4]
   347d8:	ldp	x29, x30, [sp, #48]
   347dc:	add	sp, sp, #0x40
   347e0:	ret
   347e4:	sub	sp, sp, #0x30
   347e8:	stp	x29, x30, [sp, #32]
   347ec:	add	x29, sp, #0x20
   347f0:	str	x0, [sp, #16]
   347f4:	ldr	x8, [sp, #16]
   347f8:	ldrb	w9, [x8, #139]
   347fc:	cmp	w9, #0x0
   34800:	cset	w9, ne  // ne = any
   34804:	eor	w9, w9, #0x1
   34808:	and	w9, w9, #0x1
   3480c:	mov	w0, w9
   34810:	sxtw	x8, w0
   34814:	cbz	x8, 34840 <rpl_re_set_registers@@Base+0x78a4>
   34818:	ldr	x8, [sp, #16]
   3481c:	ldr	x8, [x8, #8]
   34820:	ldr	x9, [sp, #16]
   34824:	ldr	x10, [x9, #72]
   34828:	add	x11, x10, #0x1
   3482c:	str	x11, [x9, #72]
   34830:	add	x8, x8, x10
   34834:	ldrb	w12, [x8]
   34838:	sturb	w12, [x29, #-1]
   3483c:	b	34974 <rpl_re_set_registers@@Base+0x79d8>
   34840:	ldr	x8, [sp, #16]
   34844:	ldrb	w9, [x8, #140]
   34848:	cbz	w9, 34944 <rpl_re_set_registers@@Base+0x79a8>
   3484c:	ldr	x8, [sp, #16]
   34850:	ldr	x8, [x8, #72]
   34854:	ldr	x9, [sp, #16]
   34858:	ldr	x9, [x9, #48]
   3485c:	cmp	x8, x9
   34860:	b.eq	348ac <rpl_re_set_registers@@Base+0x7910>  // b.none
   34864:	ldr	x8, [sp, #16]
   34868:	ldr	x8, [x8, #16]
   3486c:	ldr	x9, [sp, #16]
   34870:	ldr	x9, [x9, #72]
   34874:	ldr	w10, [x8, x9, lsl #2]
   34878:	mov	w11, #0xffffffff            	// #-1
   3487c:	cmp	w10, w11
   34880:	b.ne	348ac <rpl_re_set_registers@@Base+0x7910>  // b.any
   34884:	ldr	x8, [sp, #16]
   34888:	ldr	x8, [x8, #8]
   3488c:	ldr	x9, [sp, #16]
   34890:	ldr	x10, [x9, #72]
   34894:	add	x11, x10, #0x1
   34898:	str	x11, [x9, #72]
   3489c:	add	x8, x8, x10
   348a0:	ldrb	w12, [x8]
   348a4:	sturb	w12, [x29, #-1]
   348a8:	b	34974 <rpl_re_set_registers@@Base+0x79d8>
   348ac:	ldr	x8, [sp, #16]
   348b0:	ldr	x8, [x8, #24]
   348b4:	ldr	x9, [sp, #16]
   348b8:	ldr	x9, [x9, #72]
   348bc:	ldr	x8, [x8, x9, lsl #3]
   348c0:	str	x8, [sp, #8]
   348c4:	ldr	x8, [sp, #16]
   348c8:	ldr	x8, [x8]
   348cc:	ldr	x9, [sp, #16]
   348d0:	ldr	x9, [x9, #40]
   348d4:	ldr	x10, [sp, #8]
   348d8:	add	x9, x9, x10
   348dc:	ldrb	w11, [x8, x9]
   348e0:	str	w11, [sp, #4]
   348e4:	ldr	w11, [sp, #4]
   348e8:	and	w11, w11, #0xffffff80
   348ec:	cbz	w11, 34918 <rpl_re_set_registers@@Base+0x797c>
   348f0:	ldr	x8, [sp, #16]
   348f4:	ldr	x8, [x8, #8]
   348f8:	ldr	x9, [sp, #16]
   348fc:	ldr	x10, [x9, #72]
   34900:	add	x11, x10, #0x1
   34904:	str	x11, [x9, #72]
   34908:	add	x8, x8, x10
   3490c:	ldrb	w12, [x8]
   34910:	sturb	w12, [x29, #-1]
   34914:	b	34974 <rpl_re_set_registers@@Base+0x79d8>
   34918:	ldr	x0, [sp, #16]
   3491c:	ldr	x8, [sp, #16]
   34920:	ldr	x1, [x8, #72]
   34924:	bl	34578 <rpl_re_set_registers@@Base+0x75dc>
   34928:	ldr	x8, [sp, #16]
   3492c:	ldr	x9, [x8, #72]
   34930:	add	x9, x9, w0, sxtw
   34934:	str	x9, [x8, #72]
   34938:	ldr	w10, [sp, #4]
   3493c:	sturb	w10, [x29, #-1]
   34940:	b	34974 <rpl_re_set_registers@@Base+0x79d8>
   34944:	ldr	x8, [sp, #16]
   34948:	ldr	x8, [x8]
   3494c:	ldr	x9, [sp, #16]
   34950:	ldr	x9, [x9, #40]
   34954:	ldr	x10, [sp, #16]
   34958:	ldr	x11, [x10, #72]
   3495c:	add	x12, x11, #0x1
   34960:	str	x12, [x10, #72]
   34964:	add	x9, x9, x11
   34968:	add	x8, x8, x9
   3496c:	ldrb	w13, [x8]
   34970:	sturb	w13, [x29, #-1]
   34974:	ldurb	w0, [x29, #-1]
   34978:	ldp	x29, x30, [sp, #32]
   3497c:	add	sp, sp, #0x30
   34980:	ret
   34984:	sub	sp, sp, #0x30
   34988:	stp	x29, x30, [sp, #32]
   3498c:	add	x29, sp, #0x20
   34990:	sturb	w0, [x29, #-1]
   34994:	str	x1, [sp, #16]
   34998:	ldr	x8, [sp, #16]
   3499c:	cbnz	x8, 349ac <rpl_re_set_registers@@Base+0x7a10>
   349a0:	ldurb	w8, [x29, #-1]
   349a4:	str	w8, [sp, #12]
   349a8:	b	349b8 <rpl_re_set_registers@@Base+0x7a1c>
   349ac:	ldurb	w0, [x29, #-1]
   349b0:	bl	b850 <btowc@plt>
   349b4:	str	w0, [sp, #12]
   349b8:	ldr	w8, [sp, #12]
   349bc:	mov	w0, w8
   349c0:	ldp	x29, x30, [sp, #32]
   349c4:	add	sp, sp, #0x30
   349c8:	ret
   349cc:	sub	sp, sp, #0x60
   349d0:	stp	x29, x30, [sp, #80]
   349d4:	add	x29, sp, #0x50
   349d8:	mov	x8, #0xffffffffffffffff    	// #-1
   349dc:	stur	x0, [x29, #-16]
   349e0:	stur	x1, [x29, #-24]
   349e4:	stur	x2, [x29, #-32]
   349e8:	str	x8, [sp, #40]
   349ec:	ldur	x0, [x29, #-24]
   349f0:	ldur	x1, [x29, #-16]
   349f4:	ldur	x2, [x29, #-32]
   349f8:	bl	2f9f0 <rpl_re_set_registers@@Base+0x2a54>
   349fc:	ldur	x8, [x29, #-24]
   34a00:	ldrb	w9, [x8]
   34a04:	strb	w9, [sp, #39]
   34a08:	ldur	x8, [x29, #-24]
   34a0c:	ldr	w9, [x8, #8]
   34a10:	and	w9, w9, #0xff
   34a14:	cmp	w9, #0x2
   34a18:	cset	w9, eq  // eq = none
   34a1c:	and	w9, w9, #0x1
   34a20:	mov	w0, w9
   34a24:	sxtw	x8, w0
   34a28:	cbz	x8, 34a38 <rpl_re_set_registers@@Base+0x7a9c>
   34a2c:	mov	x8, #0xfffffffffffffffe    	// #-2
   34a30:	stur	x8, [x29, #-8]
   34a34:	b	34b48 <rpl_re_set_registers@@Base+0x7bac>
   34a38:	ldur	x8, [x29, #-24]
   34a3c:	ldr	w9, [x8, #8]
   34a40:	and	w9, w9, #0xff
   34a44:	cmp	w9, #0x18
   34a48:	b.eq	34a58 <rpl_re_set_registers@@Base+0x7abc>  // b.none
   34a4c:	ldrb	w8, [sp, #39]
   34a50:	cmp	w8, #0x2c
   34a54:	b.ne	34a5c <rpl_re_set_registers@@Base+0x7ac0>  // b.any
   34a58:	b	34b40 <rpl_re_set_registers@@Base+0x7ba4>
   34a5c:	ldur	x8, [x29, #-24]
   34a60:	ldr	w9, [x8, #8]
   34a64:	and	w9, w9, #0xff
   34a68:	cmp	w9, #0x1
   34a6c:	b.ne	34a9c <rpl_re_set_registers@@Base+0x7b00>  // b.any
   34a70:	ldrb	w8, [sp, #39]
   34a74:	cmp	w8, #0x30
   34a78:	b.lt	34a9c <rpl_re_set_registers@@Base+0x7b00>  // b.tstop
   34a7c:	ldrb	w8, [sp, #39]
   34a80:	mov	w9, #0x39                  	// #57
   34a84:	cmp	w9, w8
   34a88:	b.lt	34a9c <rpl_re_set_registers@@Base+0x7b00>  // b.tstop
   34a8c:	ldr	x8, [sp, #40]
   34a90:	mov	x9, #0xfffffffffffffffe    	// #-2
   34a94:	cmp	x8, x9
   34a98:	b.ne	34aa8 <rpl_re_set_registers@@Base+0x7b0c>  // b.any
   34a9c:	mov	x8, #0xfffffffffffffffe    	// #-2
   34aa0:	str	x8, [sp, #24]
   34aa4:	b	34b34 <rpl_re_set_registers@@Base+0x7b98>
   34aa8:	ldr	x8, [sp, #40]
   34aac:	mov	x9, #0xffffffffffffffff    	// #-1
   34ab0:	cmp	x8, x9
   34ab4:	b.ne	34ad0 <rpl_re_set_registers@@Base+0x7b34>  // b.any
   34ab8:	ldrb	w8, [sp, #39]
   34abc:	subs	w8, w8, #0x30
   34ac0:	mov	w0, w8
   34ac4:	sxtw	x9, w0
   34ac8:	str	x9, [sp, #16]
   34acc:	b	34b2c <rpl_re_set_registers@@Base+0x7b90>
   34ad0:	ldr	x8, [sp, #40]
   34ad4:	mov	x9, #0xa                   	// #10
   34ad8:	mul	x8, x8, x9
   34adc:	ldrb	w10, [sp, #39]
   34ae0:	mov	w9, w10
   34ae4:	add	x8, x8, x9
   34ae8:	subs	x8, x8, #0x30
   34aec:	mov	x9, #0x8000                	// #32768
   34af0:	cmp	x9, x8
   34af4:	b.ge	34b04 <rpl_re_set_registers@@Base+0x7b68>  // b.tcont
   34af8:	mov	x8, #0x8000                	// #32768
   34afc:	str	x8, [sp, #8]
   34b00:	b	34b24 <rpl_re_set_registers@@Base+0x7b88>
   34b04:	ldr	x8, [sp, #40]
   34b08:	mov	x9, #0xa                   	// #10
   34b0c:	mul	x8, x8, x9
   34b10:	ldrb	w10, [sp, #39]
   34b14:	mov	w9, w10
   34b18:	add	x8, x8, x9
   34b1c:	subs	x8, x8, #0x30
   34b20:	str	x8, [sp, #8]
   34b24:	ldr	x8, [sp, #8]
   34b28:	str	x8, [sp, #16]
   34b2c:	ldr	x8, [sp, #16]
   34b30:	str	x8, [sp, #24]
   34b34:	ldr	x8, [sp, #24]
   34b38:	str	x8, [sp, #40]
   34b3c:	b	349ec <rpl_re_set_registers@@Base+0x7a50>
   34b40:	ldr	x8, [sp, #40]
   34b44:	stur	x8, [x29, #-8]
   34b48:	ldur	x0, [x29, #-8]
   34b4c:	ldp	x29, x30, [sp, #80]
   34b50:	add	sp, sp, #0x60
   34b54:	ret
   34b58:	sub	sp, sp, #0x60
   34b5c:	stp	x29, x30, [sp, #80]
   34b60:	add	x29, sp, #0x50
   34b64:	add	x8, sp, #0x28
   34b68:	stur	x0, [x29, #-16]
   34b6c:	stur	x1, [x29, #-24]
   34b70:	str	x8, [sp, #32]
   34b74:	ldur	x8, [x29, #-16]
   34b78:	ldr	x8, [x8]
   34b7c:	str	x8, [sp, #24]
   34b80:	ldur	x8, [x29, #-16]
   34b84:	stur	x8, [x29, #-32]
   34b88:	ldur	x0, [x29, #-24]
   34b8c:	ldur	x8, [x29, #-32]
   34b90:	add	x3, x8, #0x28
   34b94:	mov	x8, xzr
   34b98:	mov	x1, x8
   34b9c:	mov	x2, x8
   34ba0:	bl	3165c <rpl_re_set_registers@@Base+0x46c0>
   34ba4:	ldr	x8, [sp, #32]
   34ba8:	str	x0, [x8]
   34bac:	ldr	x8, [sp, #32]
   34bb0:	ldr	x8, [x8]
   34bb4:	cbnz	x8, 34bc4 <rpl_re_set_registers@@Base+0x7c28>
   34bb8:	mov	x8, xzr
   34bbc:	stur	x8, [x29, #-8]
   34bc0:	b	34cb8 <rpl_re_set_registers@@Base+0x7d1c>
   34bc4:	ldr	x8, [sp, #24]
   34bc8:	ldr	x9, [sp, #32]
   34bcc:	ldr	x9, [x9]
   34bd0:	str	x8, [x9]
   34bd4:	ldr	x8, [sp, #32]
   34bd8:	ldr	x8, [x8]
   34bdc:	ldr	w10, [x8, #48]
   34be0:	and	w10, w10, #0xfffbffff
   34be4:	orr	w10, w10, #0x40000
   34be8:	str	w10, [x8, #48]
   34bec:	ldr	x8, [sp, #32]
   34bf0:	ldr	x8, [x8]
   34bf4:	str	x8, [sp, #24]
   34bf8:	ldur	x8, [x29, #-32]
   34bfc:	ldr	x8, [x8, #8]
   34c00:	cbz	x8, 34c20 <rpl_re_set_registers@@Base+0x7c84>
   34c04:	ldur	x8, [x29, #-32]
   34c08:	ldr	x8, [x8, #8]
   34c0c:	stur	x8, [x29, #-32]
   34c10:	ldr	x8, [sp, #24]
   34c14:	add	x8, x8, #0x8
   34c18:	str	x8, [sp, #32]
   34c1c:	b	34cb4 <rpl_re_set_registers@@Base+0x7d18>
   34c20:	mov	x8, xzr
   34c24:	str	x8, [sp, #16]
   34c28:	ldur	x8, [x29, #-32]
   34c2c:	ldr	x8, [x8, #16]
   34c30:	ldr	x9, [sp, #16]
   34c34:	mov	w10, #0x1                   	// #1
   34c38:	cmp	x8, x9
   34c3c:	str	w10, [sp, #12]
   34c40:	b.eq	34c58 <rpl_re_set_registers@@Base+0x7cbc>  // b.none
   34c44:	ldur	x8, [x29, #-32]
   34c48:	ldr	x8, [x8, #16]
   34c4c:	cmp	x8, #0x0
   34c50:	cset	w9, eq  // eq = none
   34c54:	str	w9, [sp, #12]
   34c58:	ldr	w8, [sp, #12]
   34c5c:	tbnz	w8, #0, 34c64 <rpl_re_set_registers@@Base+0x7cc8>
   34c60:	b	34c9c <rpl_re_set_registers@@Base+0x7d00>
   34c64:	ldur	x8, [x29, #-32]
   34c68:	str	x8, [sp, #16]
   34c6c:	ldur	x8, [x29, #-32]
   34c70:	ldr	x8, [x8]
   34c74:	stur	x8, [x29, #-32]
   34c78:	ldr	x8, [sp, #24]
   34c7c:	ldr	x8, [x8]
   34c80:	str	x8, [sp, #24]
   34c84:	ldur	x8, [x29, #-32]
   34c88:	cbnz	x8, 34c98 <rpl_re_set_registers@@Base+0x7cfc>
   34c8c:	ldr	x8, [sp, #40]
   34c90:	stur	x8, [x29, #-8]
   34c94:	b	34cb8 <rpl_re_set_registers@@Base+0x7d1c>
   34c98:	b	34c28 <rpl_re_set_registers@@Base+0x7c8c>
   34c9c:	ldur	x8, [x29, #-32]
   34ca0:	ldr	x8, [x8, #16]
   34ca4:	stur	x8, [x29, #-32]
   34ca8:	ldr	x8, [sp, #24]
   34cac:	add	x8, x8, #0x10
   34cb0:	str	x8, [sp, #32]
   34cb4:	b	34b88 <rpl_re_set_registers@@Base+0x7bec>
   34cb8:	ldur	x0, [x29, #-8]
   34cbc:	ldp	x29, x30, [sp, #80]
   34cc0:	add	sp, sp, #0x60
   34cc4:	ret
   34cc8:	sub	sp, sp, #0x20
   34ccc:	str	x0, [sp, #24]
   34cd0:	str	x1, [sp, #16]
   34cd4:	ldr	x8, [sp, #24]
   34cd8:	str	x8, [sp, #8]
   34cdc:	ldr	x8, [sp, #16]
   34ce0:	ldr	w9, [x8, #48]
   34ce4:	and	w9, w9, #0xff
   34ce8:	cmp	w9, #0x11
   34cec:	b.ne	34d18 <rpl_re_set_registers@@Base+0x7d7c>  // b.any
   34cf0:	ldr	x8, [sp, #16]
   34cf4:	ldr	x8, [x8, #40]
   34cf8:	ldr	x9, [sp, #8]
   34cfc:	cmp	x8, x9
   34d00:	b.ne	34d18 <rpl_re_set_registers@@Base+0x7d7c>  // b.any
   34d04:	ldr	x8, [sp, #16]
   34d08:	ldr	w9, [x8, #48]
   34d0c:	and	w9, w9, #0xfff7ffff
   34d10:	orr	w9, w9, #0x80000
   34d14:	str	w9, [x8, #48]
   34d18:	mov	w8, wzr
   34d1c:	mov	w0, w8
   34d20:	add	sp, sp, #0x20
   34d24:	ret
   34d28:	sub	sp, sp, #0x50
   34d2c:	stp	x29, x30, [sp, #64]
   34d30:	add	x29, sp, #0x40
   34d34:	stur	x0, [x29, #-16]
   34d38:	stur	x1, [x29, #-24]
   34d3c:	str	x2, [sp, #32]
   34d40:	ldur	x8, [x29, #-16]
   34d44:	str	x8, [sp, #24]
   34d48:	ldur	x8, [x29, #-24]
   34d4c:	ldr	x0, [sp, #32]
   34d50:	ldr	x1, [sp, #24]
   34d54:	blr	x8
   34d58:	str	w0, [sp, #20]
   34d5c:	ldr	w9, [sp, #20]
   34d60:	cmp	w9, #0x0
   34d64:	cset	w9, ne  // ne = any
   34d68:	and	w9, w9, #0x1
   34d6c:	mov	w1, w9
   34d70:	sxtw	x8, w1
   34d74:	cbz	x8, 34d84 <rpl_re_set_registers@@Base+0x7de8>
   34d78:	ldr	w8, [sp, #20]
   34d7c:	stur	w8, [x29, #-4]
   34d80:	b	34e1c <rpl_re_set_registers@@Base+0x7e80>
   34d84:	ldr	x8, [sp, #24]
   34d88:	ldr	x8, [x8, #8]
   34d8c:	cbz	x8, 34da0 <rpl_re_set_registers@@Base+0x7e04>
   34d90:	ldr	x8, [sp, #24]
   34d94:	ldr	x8, [x8, #8]
   34d98:	str	x8, [sp, #24]
   34d9c:	b	34e18 <rpl_re_set_registers@@Base+0x7e7c>
   34da0:	mov	x8, xzr
   34da4:	str	x8, [sp, #8]
   34da8:	ldr	x8, [sp, #24]
   34dac:	ldr	x8, [x8, #16]
   34db0:	ldr	x9, [sp, #8]
   34db4:	mov	w10, #0x1                   	// #1
   34db8:	cmp	x8, x9
   34dbc:	str	w10, [sp, #4]
   34dc0:	b.eq	34dd8 <rpl_re_set_registers@@Base+0x7e3c>  // b.none
   34dc4:	ldr	x8, [sp, #24]
   34dc8:	ldr	x8, [x8, #16]
   34dcc:	cmp	x8, #0x0
   34dd0:	cset	w9, eq  // eq = none
   34dd4:	str	w9, [sp, #4]
   34dd8:	ldr	w8, [sp, #4]
   34ddc:	tbnz	w8, #0, 34de4 <rpl_re_set_registers@@Base+0x7e48>
   34de0:	b	34e0c <rpl_re_set_registers@@Base+0x7e70>
   34de4:	ldr	x8, [sp, #24]
   34de8:	str	x8, [sp, #8]
   34dec:	ldr	x8, [sp, #24]
   34df0:	ldr	x8, [x8]
   34df4:	str	x8, [sp, #24]
   34df8:	ldr	x8, [sp, #24]
   34dfc:	cbnz	x8, 34e08 <rpl_re_set_registers@@Base+0x7e6c>
   34e00:	stur	wzr, [x29, #-4]
   34e04:	b	34e1c <rpl_re_set_registers@@Base+0x7e80>
   34e08:	b	34da8 <rpl_re_set_registers@@Base+0x7e0c>
   34e0c:	ldr	x8, [sp, #24]
   34e10:	ldr	x8, [x8, #16]
   34e14:	str	x8, [sp, #24]
   34e18:	b	34d48 <rpl_re_set_registers@@Base+0x7dac>
   34e1c:	ldur	w0, [x29, #-4]
   34e20:	ldp	x29, x30, [sp, #64]
   34e24:	add	sp, sp, #0x50
   34e28:	ret
   34e2c:	sub	sp, sp, #0x30
   34e30:	str	x0, [sp, #40]
   34e34:	str	x1, [sp, #32]
   34e38:	ldr	x8, [sp, #40]
   34e3c:	str	x8, [sp, #24]
   34e40:	ldr	x8, [sp, #32]
   34e44:	ldr	w9, [x8, #48]
   34e48:	and	w9, w9, #0xff
   34e4c:	cmp	w9, #0x4
   34e50:	b.ne	34eb0 <rpl_re_set_registers@@Base+0x7f14>  // b.any
   34e54:	ldr	x8, [sp, #24]
   34e58:	ldr	x8, [x8, #224]
   34e5c:	cbz	x8, 34eb0 <rpl_re_set_registers@@Base+0x7f14>
   34e60:	ldr	x8, [sp, #32]
   34e64:	ldr	x8, [x8, #40]
   34e68:	str	w8, [sp, #20]
   34e6c:	ldr	x9, [sp, #24]
   34e70:	ldr	x9, [x9, #224]
   34e74:	ldrsw	x10, [sp, #20]
   34e78:	ldr	x9, [x9, x10, lsl #3]
   34e7c:	ldr	x10, [sp, #32]
   34e80:	str	x9, [x10, #40]
   34e84:	ldr	x9, [sp, #32]
   34e88:	ldr	x9, [x9, #40]
   34e8c:	mov	w8, #0x1                   	// #1
   34e90:	lsl	w8, w8, w9
   34e94:	mov	w0, w8
   34e98:	sxtw	x10, w0
   34e9c:	ldr	x11, [sp, #24]
   34ea0:	ldr	x12, [x11, #160]
   34ea4:	orr	x10, x12, x10
   34ea8:	str	x10, [x11, #160]
   34eac:	b	34f74 <rpl_re_set_registers@@Base+0x7fd8>
   34eb0:	ldr	x8, [sp, #32]
   34eb4:	ldr	w9, [x8, #48]
   34eb8:	and	w9, w9, #0xff
   34ebc:	cmp	w9, #0x11
   34ec0:	b.ne	34f74 <rpl_re_set_registers@@Base+0x7fd8>  // b.any
   34ec4:	ldr	x8, [sp, #32]
   34ec8:	ldr	x8, [x8, #8]
   34ecc:	cbz	x8, 34f74 <rpl_re_set_registers@@Base+0x7fd8>
   34ed0:	ldr	x8, [sp, #32]
   34ed4:	ldr	x8, [x8, #8]
   34ed8:	ldr	w9, [x8, #48]
   34edc:	and	w9, w9, #0xff
   34ee0:	cmp	w9, #0x11
   34ee4:	b.ne	34f74 <rpl_re_set_registers@@Base+0x7fd8>  // b.any
   34ee8:	ldr	x8, [sp, #32]
   34eec:	ldr	x8, [x8, #8]
   34ef0:	ldr	x8, [x8, #40]
   34ef4:	str	x8, [sp, #8]
   34ef8:	ldr	x8, [sp, #32]
   34efc:	ldr	x8, [x8, #8]
   34f00:	ldr	x8, [x8, #8]
   34f04:	ldr	x9, [sp, #32]
   34f08:	str	x8, [x9, #8]
   34f0c:	ldr	x8, [sp, #32]
   34f10:	ldr	x8, [x8, #8]
   34f14:	cbz	x8, 34f28 <rpl_re_set_registers@@Base+0x7f8c>
   34f18:	ldr	x8, [sp, #32]
   34f1c:	ldr	x9, [sp, #32]
   34f20:	ldr	x9, [x9, #8]
   34f24:	str	x8, [x9]
   34f28:	ldr	x8, [sp, #24]
   34f2c:	ldr	x8, [x8, #224]
   34f30:	ldr	x9, [sp, #32]
   34f34:	ldr	x9, [x9, #40]
   34f38:	ldr	x8, [x8, x9, lsl #3]
   34f3c:	ldr	x9, [sp, #24]
   34f40:	ldr	x9, [x9, #224]
   34f44:	ldr	x10, [sp, #8]
   34f48:	str	x8, [x9, x10, lsl #3]
   34f4c:	ldr	x8, [sp, #8]
   34f50:	cmp	x8, #0x40
   34f54:	b.ge	34f74 <rpl_re_set_registers@@Base+0x7fd8>  // b.tcont
   34f58:	ldr	x8, [sp, #8]
   34f5c:	mov	x9, #0x1                   	// #1
   34f60:	lsl	x8, x9, x8
   34f64:	ldr	x9, [sp, #24]
   34f68:	ldr	x10, [x9, #160]
   34f6c:	bic	x8, x10, x8
   34f70:	str	x8, [x9, #160]
   34f74:	mov	w8, wzr
   34f78:	mov	w0, w8
   34f7c:	add	sp, sp, #0x30
   34f80:	ret
   34f84:	sub	sp, sp, #0x30
   34f88:	stp	x29, x30, [sp, #32]
   34f8c:	add	x29, sp, #0x20
   34f90:	stur	x0, [x29, #-8]
   34f94:	str	x1, [sp, #16]
   34f98:	ldur	x8, [x29, #-8]
   34f9c:	str	x8, [sp, #8]
   34fa0:	str	wzr, [sp, #4]
   34fa4:	ldr	x8, [sp, #16]
   34fa8:	ldr	x8, [x8, #8]
   34fac:	cbz	x8, 35000 <rpl_re_set_registers@@Base+0x8064>
   34fb0:	ldr	x8, [sp, #16]
   34fb4:	ldr	x8, [x8, #8]
   34fb8:	ldr	w9, [x8, #48]
   34fbc:	and	w9, w9, #0xff
   34fc0:	cmp	w9, #0x11
   34fc4:	b.ne	35000 <rpl_re_set_registers@@Base+0x8064>  // b.any
   34fc8:	ldr	x1, [sp, #8]
   34fcc:	ldr	x8, [sp, #16]
   34fd0:	ldr	x2, [x8, #8]
   34fd4:	add	x0, sp, #0x4
   34fd8:	bl	35740 <rpl_re_set_registers@@Base+0x87a4>
   34fdc:	ldr	x8, [sp, #16]
   34fe0:	str	x0, [x8, #8]
   34fe4:	ldr	x8, [sp, #16]
   34fe8:	ldr	x8, [x8, #8]
   34fec:	cbz	x8, 35000 <rpl_re_set_registers@@Base+0x8064>
   34ff0:	ldr	x8, [sp, #16]
   34ff4:	ldr	x9, [sp, #16]
   34ff8:	ldr	x9, [x9, #8]
   34ffc:	str	x8, [x9]
   35000:	ldr	x8, [sp, #16]
   35004:	ldr	x8, [x8, #16]
   35008:	cbz	x8, 3505c <rpl_re_set_registers@@Base+0x80c0>
   3500c:	ldr	x8, [sp, #16]
   35010:	ldr	x8, [x8, #16]
   35014:	ldr	w9, [x8, #48]
   35018:	and	w9, w9, #0xff
   3501c:	cmp	w9, #0x11
   35020:	b.ne	3505c <rpl_re_set_registers@@Base+0x80c0>  // b.any
   35024:	ldr	x1, [sp, #8]
   35028:	ldr	x8, [sp, #16]
   3502c:	ldr	x2, [x8, #16]
   35030:	add	x0, sp, #0x4
   35034:	bl	35740 <rpl_re_set_registers@@Base+0x87a4>
   35038:	ldr	x8, [sp, #16]
   3503c:	str	x0, [x8, #16]
   35040:	ldr	x8, [sp, #16]
   35044:	ldr	x8, [x8, #16]
   35048:	cbz	x8, 3505c <rpl_re_set_registers@@Base+0x80c0>
   3504c:	ldr	x8, [sp, #16]
   35050:	ldr	x9, [sp, #16]
   35054:	ldr	x9, [x9, #16]
   35058:	str	x8, [x9]
   3505c:	ldr	w0, [sp, #4]
   35060:	ldp	x29, x30, [sp, #32]
   35064:	add	sp, sp, #0x30
   35068:	ret
   3506c:	sub	sp, sp, #0x30
   35070:	stp	x29, x30, [sp, #32]
   35074:	add	x29, sp, #0x20
   35078:	str	x0, [sp, #16]
   3507c:	str	x1, [sp, #8]
   35080:	ldr	x8, [sp, #16]
   35084:	str	x8, [sp]
   35088:	ldr	x8, [sp, #8]
   3508c:	ldr	w9, [x8, #48]
   35090:	and	w9, w9, #0xff
   35094:	cmp	w9, #0x10
   35098:	b.ne	350c8 <rpl_re_set_registers@@Base+0x812c>  // b.any
   3509c:	ldr	x8, [sp, #8]
   350a0:	ldr	x8, [x8, #8]
   350a4:	ldr	x8, [x8, #24]
   350a8:	ldr	x9, [sp, #8]
   350ac:	str	x8, [x9, #24]
   350b0:	ldr	x8, [sp, #8]
   350b4:	ldr	x8, [x8, #8]
   350b8:	ldr	x8, [x8, #56]
   350bc:	ldr	x9, [sp, #8]
   350c0:	str	x8, [x9, #56]
   350c4:	b	3516c <rpl_re_set_registers@@Base+0x81d0>
   350c8:	ldr	x8, [sp, #8]
   350cc:	ldr	x9, [sp, #8]
   350d0:	str	x8, [x9, #24]
   350d4:	ldr	x0, [sp]
   350d8:	ldr	x8, [sp, #8]
   350dc:	ldr	x1, [x8, #40]
   350e0:	ldr	x2, [x8, #48]
   350e4:	bl	3593c <rpl_re_set_registers@@Base+0x89a0>
   350e8:	ldr	x8, [sp, #8]
   350ec:	str	x0, [x8, #56]
   350f0:	ldr	x8, [sp, #8]
   350f4:	ldr	x8, [x8, #56]
   350f8:	mov	x9, #0xffffffffffffffff    	// #-1
   350fc:	cmp	x8, x9
   35100:	cset	w10, eq  // eq = none
   35104:	and	w10, w10, #0x1
   35108:	mov	w0, w10
   3510c:	sxtw	x8, w0
   35110:	cbz	x8, 35120 <rpl_re_set_registers@@Base+0x8184>
   35114:	mov	w8, #0xc                   	// #12
   35118:	stur	w8, [x29, #-4]
   3511c:	b	35170 <rpl_re_set_registers@@Base+0x81d4>
   35120:	ldr	x8, [sp, #8]
   35124:	ldr	w9, [x8, #48]
   35128:	and	w9, w9, #0xff
   3512c:	cmp	w9, #0xc
   35130:	b.ne	3516c <rpl_re_set_registers@@Base+0x81d0>  // b.any
   35134:	ldr	x8, [sp, #8]
   35138:	ldr	w9, [x8, #40]
   3513c:	ldr	x8, [sp]
   35140:	ldr	x8, [x8]
   35144:	ldr	x10, [sp, #8]
   35148:	ldr	x10, [x10, #56]
   3514c:	mov	x11, #0x10                  	// #16
   35150:	mul	x10, x11, x10
   35154:	add	x8, x8, x10
   35158:	ldr	w12, [x8, #8]
   3515c:	and	w9, w9, #0x3ff
   35160:	and	w12, w12, #0xfffc00ff
   35164:	orr	w9, w12, w9, lsl #8
   35168:	str	w9, [x8, #8]
   3516c:	stur	wzr, [x29, #-4]
   35170:	ldur	w0, [x29, #-4]
   35174:	ldp	x29, x30, [sp, #32]
   35178:	add	sp, sp, #0x30
   3517c:	ret
   35180:	sub	sp, sp, #0x20
   35184:	str	x0, [sp, #24]
   35188:	str	x1, [sp, #16]
   3518c:	ldr	x8, [sp, #16]
   35190:	ldr	w9, [x8, #48]
   35194:	and	w9, w9, #0xff
   35198:	cmp	w9, #0xb
   3519c:	str	w9, [sp, #12]
   351a0:	b.eq	351b8 <rpl_re_set_registers@@Base+0x821c>  // b.none
   351a4:	b	351a8 <rpl_re_set_registers@@Base+0x820c>
   351a8:	ldr	w8, [sp, #12]
   351ac:	cmp	w8, #0x10
   351b0:	b.eq	351cc <rpl_re_set_registers@@Base+0x8230>  // b.none
   351b4:	b	351fc <rpl_re_set_registers@@Base+0x8260>
   351b8:	ldr	x8, [sp, #16]
   351bc:	ldr	x9, [sp, #16]
   351c0:	ldr	x9, [x9, #8]
   351c4:	str	x8, [x9, #32]
   351c8:	b	3523c <rpl_re_set_registers@@Base+0x82a0>
   351cc:	ldr	x8, [sp, #16]
   351d0:	ldr	x8, [x8, #16]
   351d4:	ldr	x8, [x8, #24]
   351d8:	ldr	x9, [sp, #16]
   351dc:	ldr	x9, [x9, #8]
   351e0:	str	x8, [x9, #32]
   351e4:	ldr	x8, [sp, #16]
   351e8:	ldr	x8, [x8, #32]
   351ec:	ldr	x9, [sp, #16]
   351f0:	ldr	x9, [x9, #16]
   351f4:	str	x8, [x9, #32]
   351f8:	b	3523c <rpl_re_set_registers@@Base+0x82a0>
   351fc:	ldr	x8, [sp, #16]
   35200:	ldr	x8, [x8, #8]
   35204:	cbz	x8, 3521c <rpl_re_set_registers@@Base+0x8280>
   35208:	ldr	x8, [sp, #16]
   3520c:	ldr	x8, [x8, #32]
   35210:	ldr	x9, [sp, #16]
   35214:	ldr	x9, [x9, #8]
   35218:	str	x8, [x9, #32]
   3521c:	ldr	x8, [sp, #16]
   35220:	ldr	x8, [x8, #16]
   35224:	cbz	x8, 3523c <rpl_re_set_registers@@Base+0x82a0>
   35228:	ldr	x8, [sp, #16]
   3522c:	ldr	x8, [x8, #32]
   35230:	ldr	x9, [sp, #16]
   35234:	ldr	x9, [x9, #16]
   35238:	str	x8, [x9, #32]
   3523c:	mov	w8, wzr
   35240:	mov	w0, w8
   35244:	add	sp, sp, #0x20
   35248:	ret
   3524c:	sub	sp, sp, #0x60
   35250:	stp	x29, x30, [sp, #80]
   35254:	add	x29, sp, #0x50
   35258:	adrp	x8, 45000 <vasnprintf@@Base+0x2e4c>
   3525c:	add	x8, x8, #0x5ce
   35260:	adrp	x9, 45000 <vasnprintf@@Base+0x2e4c>
   35264:	add	x9, x9, #0x690
   35268:	stur	x0, [x29, #-8]
   3526c:	stur	x1, [x29, #-16]
   35270:	ldur	x10, [x29, #-8]
   35274:	stur	x10, [x29, #-24]
   35278:	ldur	x10, [x29, #-16]
   3527c:	ldr	x10, [x10, #56]
   35280:	stur	x10, [x29, #-32]
   35284:	stur	wzr, [x29, #-36]
   35288:	ldur	x10, [x29, #-16]
   3528c:	ldr	w11, [x10, #48]
   35290:	and	w11, w11, #0xff
   35294:	subs	w11, w11, #0x2
   35298:	mov	w10, w11
   3529c:	ubfx	x10, x10, #0, #32
   352a0:	cmp	x10, #0xe
   352a4:	str	x8, [sp, #16]
   352a8:	str	x9, [sp, #8]
   352ac:	str	x10, [sp]
   352b0:	b.hi	35490 <rpl_re_set_registers@@Base+0x84f4>  // b.pmore
   352b4:	adrp	x8, 47000 <vasnprintf@@Base+0x4e4c>
   352b8:	add	x8, x8, #0x594
   352bc:	ldr	x11, [sp]
   352c0:	ldrsw	x10, [x8, x11, lsl #2]
   352c4:	add	x9, x8, x10
   352c8:	br	x9
   352cc:	b	354dc <rpl_re_set_registers@@Base+0x8540>
   352d0:	ldur	x8, [x29, #-16]
   352d4:	ldr	x8, [x8, #32]
   352d8:	cbnz	x8, 352e0 <rpl_re_set_registers@@Base+0x8344>
   352dc:	b	352f8 <rpl_re_set_registers@@Base+0x835c>
   352e0:	adrp	x0, 45000 <vasnprintf@@Base+0x2e4c>
   352e4:	add	x0, x0, #0x67d
   352e8:	ldr	x1, [sp, #16]
   352ec:	mov	w2, #0x59f                 	// #1439
   352f0:	ldr	x3, [sp, #8]
   352f4:	bl	a910 <__assert_fail@plt>
   352f8:	b	354dc <rpl_re_set_registers@@Base+0x8540>
   352fc:	ldur	x8, [x29, #-24]
   35300:	ldrb	w9, [x8, #176]
   35304:	and	w9, w9, #0xfffffffe
   35308:	orr	w9, w9, #0x1
   3530c:	strb	w9, [x8, #176]
   35310:	ldur	x8, [x29, #-16]
   35314:	ldr	x8, [x8, #8]
   35318:	cbz	x8, 35334 <rpl_re_set_registers@@Base+0x8398>
   3531c:	ldur	x8, [x29, #-16]
   35320:	ldr	x8, [x8, #8]
   35324:	ldr	x8, [x8, #24]
   35328:	ldr	x8, [x8, #56]
   3532c:	str	x8, [sp, #32]
   35330:	b	35344 <rpl_re_set_registers@@Base+0x83a8>
   35334:	ldur	x8, [x29, #-16]
   35338:	ldr	x8, [x8, #32]
   3533c:	ldr	x8, [x8, #56]
   35340:	str	x8, [sp, #32]
   35344:	ldur	x8, [x29, #-16]
   35348:	ldr	x8, [x8, #16]
   3534c:	cbz	x8, 35368 <rpl_re_set_registers@@Base+0x83cc>
   35350:	ldur	x8, [x29, #-16]
   35354:	ldr	x8, [x8, #16]
   35358:	ldr	x8, [x8, #24]
   3535c:	ldr	x8, [x8, #56]
   35360:	str	x8, [sp, #24]
   35364:	b	35378 <rpl_re_set_registers@@Base+0x83dc>
   35368:	ldur	x8, [x29, #-16]
   3536c:	ldr	x8, [x8, #32]
   35370:	ldr	x8, [x8, #56]
   35374:	str	x8, [sp, #24]
   35378:	ldr	x8, [sp, #32]
   3537c:	mov	x9, #0xffffffffffffffff    	// #-1
   35380:	cmp	x8, x9
   35384:	b.le	3538c <rpl_re_set_registers@@Base+0x83f0>
   35388:	b	353a4 <rpl_re_set_registers@@Base+0x8408>
   3538c:	adrp	x0, 45000 <vasnprintf@@Base+0x2e4c>
   35390:	add	x0, x0, #0x6c3
   35394:	ldr	x1, [sp, #16]
   35398:	mov	w2, #0x5af                 	// #1455
   3539c:	ldr	x3, [sp, #8]
   353a0:	bl	a910 <__assert_fail@plt>
   353a4:	ldr	x8, [sp, #24]
   353a8:	mov	x9, #0xffffffffffffffff    	// #-1
   353ac:	cmp	x8, x9
   353b0:	b.le	353b8 <rpl_re_set_registers@@Base+0x841c>
   353b4:	b	353d0 <rpl_re_set_registers@@Base+0x8434>
   353b8:	adrp	x0, 45000 <vasnprintf@@Base+0x2e4c>
   353bc:	add	x0, x0, #0x6cd
   353c0:	ldr	x1, [sp, #16]
   353c4:	mov	w2, #0x5b0                 	// #1456
   353c8:	ldr	x3, [sp, #8]
   353cc:	bl	a910 <__assert_fail@plt>
   353d0:	ldur	x8, [x29, #-24]
   353d4:	ldr	x8, [x8, #40]
   353d8:	ldur	x9, [x29, #-32]
   353dc:	mov	x10, #0x18                  	// #24
   353e0:	mul	x9, x10, x9
   353e4:	add	x0, x8, x9
   353e8:	ldr	x1, [sp, #32]
   353ec:	ldr	x2, [sp, #24]
   353f0:	bl	35c88 <rpl_re_set_registers@@Base+0x8cec>
   353f4:	stur	w0, [x29, #-36]
   353f8:	b	354dc <rpl_re_set_registers@@Base+0x8540>
   353fc:	ldur	x8, [x29, #-24]
   35400:	ldr	x8, [x8, #40]
   35404:	ldur	x9, [x29, #-32]
   35408:	mov	x10, #0x18                  	// #24
   3540c:	mul	x9, x10, x9
   35410:	add	x0, x8, x9
   35414:	ldur	x8, [x29, #-16]
   35418:	ldr	x8, [x8, #32]
   3541c:	ldr	x1, [x8, #56]
   35420:	bl	35d90 <rpl_re_set_registers@@Base+0x8df4>
   35424:	stur	w0, [x29, #-36]
   35428:	b	354dc <rpl_re_set_registers@@Base+0x8540>
   3542c:	ldur	x8, [x29, #-16]
   35430:	ldr	x8, [x8, #32]
   35434:	ldr	x8, [x8, #56]
   35438:	ldur	x9, [x29, #-24]
   3543c:	ldr	x9, [x9, #24]
   35440:	ldur	x10, [x29, #-32]
   35444:	str	x8, [x9, x10, lsl #3]
   35448:	ldur	x8, [x29, #-16]
   3544c:	ldr	w11, [x8, #48]
   35450:	and	w11, w11, #0xff
   35454:	cmp	w11, #0x4
   35458:	b.ne	3548c <rpl_re_set_registers@@Base+0x84f0>  // b.any
   3545c:	ldur	x8, [x29, #-24]
   35460:	ldr	x8, [x8, #40]
   35464:	ldur	x9, [x29, #-32]
   35468:	mov	x10, #0x18                  	// #24
   3546c:	mul	x9, x10, x9
   35470:	add	x0, x8, x9
   35474:	ldur	x8, [x29, #-24]
   35478:	ldr	x8, [x8, #24]
   3547c:	ldur	x9, [x29, #-32]
   35480:	ldr	x1, [x8, x9, lsl #3]
   35484:	bl	35d90 <rpl_re_set_registers@@Base+0x8df4>
   35488:	stur	w0, [x29, #-36]
   3548c:	b	354dc <rpl_re_set_registers@@Base+0x8540>
   35490:	ldur	x8, [x29, #-16]
   35494:	ldr	w9, [x8, #48]
   35498:	and	w9, w9, #0xff
   3549c:	and	w9, w9, #0x8
   354a0:	cbnz	w9, 354a8 <rpl_re_set_registers@@Base+0x850c>
   354a4:	b	354c0 <rpl_re_set_registers@@Base+0x8524>
   354a8:	adrp	x0, 45000 <vasnprintf@@Base+0x2e4c>
   354ac:	add	x0, x0, #0x6d8
   354b0:	ldr	x1, [sp, #16]
   354b4:	mov	w2, #0x5c2                 	// #1474
   354b8:	ldr	x3, [sp, #8]
   354bc:	bl	a910 <__assert_fail@plt>
   354c0:	ldur	x8, [x29, #-16]
   354c4:	ldr	x8, [x8, #32]
   354c8:	ldr	x8, [x8, #56]
   354cc:	ldur	x9, [x29, #-24]
   354d0:	ldr	x9, [x9, #24]
   354d4:	ldur	x10, [x29, #-32]
   354d8:	str	x8, [x9, x10, lsl #3]
   354dc:	ldur	w0, [x29, #-36]
   354e0:	ldp	x29, x30, [sp, #80]
   354e4:	add	sp, sp, #0x60
   354e8:	ret
   354ec:	sub	sp, sp, #0x50
   354f0:	stp	x29, x30, [sp, #64]
   354f4:	add	x29, sp, #0x40
   354f8:	mov	w8, #0x0                   	// #0
   354fc:	stur	x0, [x29, #-16]
   35500:	sturb	w8, [x29, #-25]
   35504:	stur	xzr, [x29, #-24]
   35508:	ldur	x8, [x29, #-24]
   3550c:	ldur	x9, [x29, #-16]
   35510:	ldr	x9, [x9, #16]
   35514:	cmp	x8, x9
   35518:	b.ne	35534 <rpl_re_set_registers@@Base+0x8598>  // b.any
   3551c:	ldurb	w8, [x29, #-25]
   35520:	tbnz	w8, #0, 35528 <rpl_re_set_registers@@Base+0x858c>
   35524:	b	355e0 <rpl_re_set_registers@@Base+0x8644>
   35528:	mov	w8, #0x0                   	// #0
   3552c:	sturb	w8, [x29, #-25]
   35530:	stur	xzr, [x29, #-24]
   35534:	ldur	x8, [x29, #-16]
   35538:	ldr	x8, [x8, #48]
   3553c:	ldur	x9, [x29, #-24]
   35540:	mov	x10, #0x18                  	// #24
   35544:	mul	x9, x10, x9
   35548:	add	x8, x8, x9
   3554c:	ldr	x8, [x8, #8]
   35550:	cbz	x8, 35558 <rpl_re_set_registers@@Base+0x85bc>
   35554:	b	355d0 <rpl_re_set_registers@@Base+0x8634>
   35558:	ldur	x1, [x29, #-16]
   3555c:	ldur	x2, [x29, #-24]
   35560:	add	x0, sp, #0x8
   35564:	mov	w8, #0x1                   	// #1
   35568:	and	w3, w8, #0x1
   3556c:	bl	35e2c <rpl_re_set_registers@@Base+0x8e90>
   35570:	str	w0, [sp, #32]
   35574:	ldr	w8, [sp, #32]
   35578:	cmp	w8, #0x0
   3557c:	cset	w8, ne  // ne = any
   35580:	and	w8, w8, #0x1
   35584:	mov	w1, w8
   35588:	sxtw	x9, w1
   3558c:	cbz	x9, 3559c <rpl_re_set_registers@@Base+0x8600>
   35590:	ldr	w8, [sp, #32]
   35594:	stur	w8, [x29, #-4]
   35598:	b	355e4 <rpl_re_set_registers@@Base+0x8648>
   3559c:	ldur	x8, [x29, #-16]
   355a0:	ldr	x8, [x8, #48]
   355a4:	ldur	x9, [x29, #-24]
   355a8:	mov	x10, #0x18                  	// #24
   355ac:	mul	x9, x10, x9
   355b0:	add	x8, x8, x9
   355b4:	ldr	x8, [x8, #8]
   355b8:	cbnz	x8, 355d0 <rpl_re_set_registers@@Base+0x8634>
   355bc:	mov	w8, #0x1                   	// #1
   355c0:	sturb	w8, [x29, #-25]
   355c4:	add	x9, sp, #0x8
   355c8:	ldr	x0, [x9, #16]
   355cc:	bl	a930 <free@plt>
   355d0:	ldur	x8, [x29, #-24]
   355d4:	add	x8, x8, #0x1
   355d8:	stur	x8, [x29, #-24]
   355dc:	b	35508 <rpl_re_set_registers@@Base+0x856c>
   355e0:	stur	wzr, [x29, #-4]
   355e4:	ldur	w0, [x29, #-4]
   355e8:	ldp	x29, x30, [sp, #64]
   355ec:	add	sp, sp, #0x50
   355f0:	ret
   355f4:	sub	sp, sp, #0x40
   355f8:	stp	x29, x30, [sp, #48]
   355fc:	add	x29, sp, #0x30
   35600:	stur	x0, [x29, #-16]
   35604:	str	xzr, [sp, #16]
   35608:	ldr	x8, [sp, #16]
   3560c:	ldur	x9, [x29, #-16]
   35610:	ldr	x9, [x9, #16]
   35614:	cmp	x8, x9
   35618:	b.cs	35650 <rpl_re_set_registers@@Base+0x86b4>  // b.hs, b.nlast
   3561c:	ldur	x8, [x29, #-16]
   35620:	ldr	x8, [x8, #56]
   35624:	ldr	x9, [sp, #16]
   35628:	mov	x10, #0x18                  	// #24
   3562c:	mul	x9, x10, x9
   35630:	add	x8, x8, x9
   35634:	str	xzr, [x8]
   35638:	str	xzr, [x8, #8]
   3563c:	str	xzr, [x8, #16]
   35640:	ldr	x8, [sp, #16]
   35644:	add	x8, x8, #0x1
   35648:	str	x8, [sp, #16]
   3564c:	b	35608 <rpl_re_set_registers@@Base+0x866c>
   35650:	str	xzr, [sp, #24]
   35654:	ldr	x8, [sp, #24]
   35658:	ldur	x9, [x29, #-16]
   3565c:	ldr	x9, [x9, #16]
   35660:	cmp	x8, x9
   35664:	b.cs	3572c <rpl_re_set_registers@@Base+0x8790>  // b.hs, b.nlast
   35668:	ldur	x8, [x29, #-16]
   3566c:	ldr	x8, [x8, #48]
   35670:	ldr	x9, [sp, #24]
   35674:	mov	x10, #0x18                  	// #24
   35678:	mul	x9, x10, x9
   3567c:	add	x8, x8, x9
   35680:	ldr	x8, [x8, #16]
   35684:	str	x8, [sp]
   35688:	str	xzr, [sp, #16]
   3568c:	ldr	x8, [sp, #16]
   35690:	ldur	x9, [x29, #-16]
   35694:	ldr	x9, [x9, #48]
   35698:	ldr	x10, [sp, #24]
   3569c:	mov	x11, #0x18                  	// #24
   356a0:	mul	x10, x11, x10
   356a4:	add	x9, x9, x10
   356a8:	ldr	x9, [x9, #8]
   356ac:	cmp	x8, x9
   356b0:	b.ge	3571c <rpl_re_set_registers@@Base+0x8780>  // b.tcont
   356b4:	ldur	x8, [x29, #-16]
   356b8:	ldr	x8, [x8, #56]
   356bc:	ldr	x9, [sp]
   356c0:	ldr	x10, [sp, #16]
   356c4:	ldr	x9, [x9, x10, lsl #3]
   356c8:	mov	x10, #0x18                  	// #24
   356cc:	mul	x9, x10, x9
   356d0:	add	x0, x8, x9
   356d4:	ldr	x1, [sp, #24]
   356d8:	bl	370bc <rpl_re_set_registers@@Base+0xa120>
   356dc:	mov	w11, #0x1                   	// #1
   356e0:	and	w11, w0, w11
   356e4:	strb	w11, [sp, #15]
   356e8:	ldrb	w11, [sp, #15]
   356ec:	eor	w11, w11, #0x1
   356f0:	and	w11, w11, #0x1
   356f4:	mov	w1, w11
   356f8:	sxtw	x8, w1
   356fc:	cbz	x8, 3570c <rpl_re_set_registers@@Base+0x8770>
   35700:	mov	w8, #0xc                   	// #12
   35704:	stur	w8, [x29, #-4]
   35708:	b	35730 <rpl_re_set_registers@@Base+0x8794>
   3570c:	ldr	x8, [sp, #16]
   35710:	add	x8, x8, #0x1
   35714:	str	x8, [sp, #16]
   35718:	b	3568c <rpl_re_set_registers@@Base+0x86f0>
   3571c:	ldr	x8, [sp, #24]
   35720:	add	x8, x8, #0x1
   35724:	str	x8, [sp, #24]
   35728:	b	35654 <rpl_re_set_registers@@Base+0x86b8>
   3572c:	stur	wzr, [x29, #-4]
   35730:	ldur	w0, [x29, #-4]
   35734:	ldp	x29, x30, [sp, #48]
   35738:	add	sp, sp, #0x40
   3573c:	ret
   35740:	sub	sp, sp, #0x80
   35744:	stp	x29, x30, [sp, #112]
   35748:	add	x29, sp, #0x70
   3574c:	mov	w8, #0x1                   	// #1
   35750:	stur	x0, [x29, #-16]
   35754:	stur	x1, [x29, #-24]
   35758:	stur	x2, [x29, #-32]
   3575c:	ldur	x9, [x29, #-24]
   35760:	ldr	x9, [x9]
   35764:	stur	x9, [x29, #-40]
   35768:	ldur	x9, [x29, #-32]
   3576c:	ldr	x9, [x9, #8]
   35770:	stur	x9, [x29, #-48]
   35774:	ldur	x9, [x29, #-24]
   35778:	ldrb	w10, [x9, #56]
   3577c:	mov	w11, #0x4                   	// #4
   35780:	lsr	w10, w10, w11
   35784:	and	w8, w10, w8
   35788:	and	w8, w8, #0xff
   3578c:	cbz	w8, 357dc <rpl_re_set_registers@@Base+0x8840>
   35790:	ldur	x8, [x29, #-32]
   35794:	ldr	x8, [x8, #8]
   35798:	cbz	x8, 357dc <rpl_re_set_registers@@Base+0x8840>
   3579c:	ldur	x8, [x29, #-32]
   357a0:	ldr	x8, [x8, #40]
   357a4:	cmp	x8, #0x40
   357a8:	b.ge	357cc <rpl_re_set_registers@@Base+0x8830>  // b.tcont
   357ac:	ldur	x8, [x29, #-40]
   357b0:	ldr	x8, [x8, #160]
   357b4:	ldur	x9, [x29, #-32]
   357b8:	ldr	x9, [x9, #40]
   357bc:	mov	x10, #0x1                   	// #1
   357c0:	lsl	x9, x10, x9
   357c4:	and	x8, x8, x9
   357c8:	cbnz	x8, 357dc <rpl_re_set_registers@@Base+0x8840>
   357cc:	ldur	x8, [x29, #-32]
   357d0:	ldr	x8, [x8, #8]
   357d4:	stur	x8, [x29, #-8]
   357d8:	b	3592c <rpl_re_set_registers@@Base+0x8990>
   357dc:	ldur	x0, [x29, #-40]
   357e0:	mov	x8, xzr
   357e4:	mov	x1, x8
   357e8:	mov	x2, x8
   357ec:	mov	w3, #0x8                   	// #8
   357f0:	str	x8, [sp, #24]
   357f4:	bl	2fc6c <rpl_re_set_registers@@Base+0x2cd0>
   357f8:	str	x0, [sp, #56]
   357fc:	ldur	x0, [x29, #-40]
   35800:	ldr	x1, [sp, #24]
   35804:	ldr	x2, [sp, #24]
   35808:	mov	w3, #0x9                   	// #9
   3580c:	bl	2fc6c <rpl_re_set_registers@@Base+0x2cd0>
   35810:	str	x0, [sp, #48]
   35814:	ldur	x8, [x29, #-48]
   35818:	cbz	x8, 35838 <rpl_re_set_registers@@Base+0x889c>
   3581c:	ldur	x0, [x29, #-40]
   35820:	ldur	x1, [x29, #-48]
   35824:	ldr	x2, [sp, #48]
   35828:	mov	w3, #0x10                  	// #16
   3582c:	bl	2fc6c <rpl_re_set_registers@@Base+0x2cd0>
   35830:	str	x0, [sp, #16]
   35834:	b	35840 <rpl_re_set_registers@@Base+0x88a4>
   35838:	ldr	x8, [sp, #48]
   3583c:	str	x8, [sp, #16]
   35840:	ldr	x8, [sp, #16]
   35844:	str	x8, [sp, #40]
   35848:	ldur	x0, [x29, #-40]
   3584c:	ldr	x1, [sp, #56]
   35850:	ldr	x2, [sp, #40]
   35854:	mov	w3, #0x10                  	// #16
   35858:	bl	2fc6c <rpl_re_set_registers@@Base+0x2cd0>
   3585c:	str	x0, [sp, #32]
   35860:	ldr	x8, [sp, #32]
   35864:	mov	w9, #0x1                   	// #1
   35868:	str	w9, [sp, #12]
   3586c:	cbz	x8, 358a0 <rpl_re_set_registers@@Base+0x8904>
   35870:	ldr	x8, [sp, #40]
   35874:	mov	w9, #0x1                   	// #1
   35878:	str	w9, [sp, #12]
   3587c:	cbz	x8, 358a0 <rpl_re_set_registers@@Base+0x8904>
   35880:	ldr	x8, [sp, #56]
   35884:	mov	w9, #0x1                   	// #1
   35888:	str	w9, [sp, #12]
   3588c:	cbz	x8, 358a0 <rpl_re_set_registers@@Base+0x8904>
   35890:	ldr	x8, [sp, #48]
   35894:	cmp	x8, #0x0
   35898:	cset	w9, eq  // eq = none
   3589c:	str	w9, [sp, #12]
   358a0:	ldr	w8, [sp, #12]
   358a4:	and	w8, w8, #0x1
   358a8:	mov	w0, w8
   358ac:	sxtw	x9, w0
   358b0:	cbz	x9, 358cc <rpl_re_set_registers@@Base+0x8930>
   358b4:	ldur	x8, [x29, #-16]
   358b8:	mov	w9, #0xc                   	// #12
   358bc:	str	w9, [x8]
   358c0:	mov	x8, xzr
   358c4:	stur	x8, [x29, #-8]
   358c8:	b	3592c <rpl_re_set_registers@@Base+0x8990>
   358cc:	ldur	x8, [x29, #-32]
   358d0:	ldr	x8, [x8, #40]
   358d4:	ldr	x9, [sp, #48]
   358d8:	str	x8, [x9, #40]
   358dc:	ldr	x9, [sp, #56]
   358e0:	str	x8, [x9, #40]
   358e4:	ldur	x8, [x29, #-32]
   358e8:	ldr	w10, [x8, #48]
   358ec:	lsr	w10, w10, #19
   358f0:	and	w10, w10, #0x1
   358f4:	ldr	x8, [sp, #48]
   358f8:	ldr	w11, [x8, #48]
   358fc:	and	w10, w10, #0x1
   35900:	and	w11, w11, #0xfff7ffff
   35904:	orr	w11, w11, w10, lsl #19
   35908:	str	w11, [x8, #48]
   3590c:	ldr	x8, [sp, #56]
   35910:	ldr	w11, [x8, #48]
   35914:	and	w10, w10, #0x1
   35918:	and	w11, w11, #0xfff7ffff
   3591c:	orr	w10, w11, w10, lsl #19
   35920:	str	w10, [x8, #48]
   35924:	ldr	x8, [sp, #32]
   35928:	stur	x8, [x29, #-8]
   3592c:	ldur	x0, [x29, #-8]
   35930:	ldp	x29, x30, [sp, #112]
   35934:	add	sp, sp, #0x80
   35938:	ret
   3593c:	sub	sp, sp, #0x80
   35940:	stp	x29, x30, [sp, #112]
   35944:	add	x29, sp, #0x70
   35948:	stur	x1, [x29, #-24]
   3594c:	stur	x2, [x29, #-16]
   35950:	stur	x0, [x29, #-32]
   35954:	ldur	x8, [x29, #-32]
   35958:	ldr	x8, [x8, #16]
   3595c:	ldur	x9, [x29, #-32]
   35960:	ldr	x9, [x9, #8]
   35964:	cmp	x8, x9
   35968:	cset	w10, cs  // cs = hs, nlast
   3596c:	and	w10, w10, #0x1
   35970:	mov	w0, w10
   35974:	sxtw	x8, w0
   35978:	cbz	x8, 35b4c <rpl_re_set_registers@@Base+0x8bb0>
   3597c:	ldur	x8, [x29, #-32]
   35980:	ldr	x8, [x8, #8]
   35984:	mov	x9, #0x2                   	// #2
   35988:	mul	x8, x8, x9
   3598c:	stur	x8, [x29, #-40]
   35990:	mov	x8, #0x18                  	// #24
   35994:	str	x8, [sp, #24]
   35998:	ldur	x8, [x29, #-40]
   3599c:	mov	x9, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   359a0:	movk	x9, #0xaaa, lsl #48
   359a4:	cmp	x9, x8
   359a8:	cset	w10, cc  // cc = lo, ul, last
   359ac:	and	w10, w10, #0x1
   359b0:	mov	w0, w10
   359b4:	sxtw	x8, w0
   359b8:	cbz	x8, 359c8 <rpl_re_set_registers@@Base+0x8a2c>
   359bc:	mov	x8, #0xffffffffffffffff    	// #-1
   359c0:	stur	x8, [x29, #-8]
   359c4:	b	35c78 <rpl_re_set_registers@@Base+0x8cdc>
   359c8:	ldur	x8, [x29, #-32]
   359cc:	ldr	x0, [x8]
   359d0:	ldur	x8, [x29, #-40]
   359d4:	mov	x9, #0x10                  	// #16
   359d8:	mul	x1, x8, x9
   359dc:	bl	af40 <realloc@plt>
   359e0:	str	x0, [sp, #32]
   359e4:	ldr	x8, [sp, #32]
   359e8:	cmp	x8, #0x0
   359ec:	cset	w10, eq  // eq = none
   359f0:	and	w10, w10, #0x1
   359f4:	mov	w0, w10
   359f8:	sxtw	x8, w0
   359fc:	cbz	x8, 35a0c <rpl_re_set_registers@@Base+0x8a70>
   35a00:	mov	x8, #0xffffffffffffffff    	// #-1
   35a04:	stur	x8, [x29, #-8]
   35a08:	b	35c78 <rpl_re_set_registers@@Base+0x8cdc>
   35a0c:	ldr	x8, [sp, #32]
   35a10:	ldur	x9, [x29, #-32]
   35a14:	str	x8, [x9]
   35a18:	ldur	x8, [x29, #-32]
   35a1c:	ldr	x0, [x8, #24]
   35a20:	ldur	x8, [x29, #-40]
   35a24:	mov	x9, #0x8                   	// #8
   35a28:	mul	x1, x8, x9
   35a2c:	str	x9, [sp, #16]
   35a30:	bl	af40 <realloc@plt>
   35a34:	stur	x0, [x29, #-48]
   35a38:	ldur	x8, [x29, #-32]
   35a3c:	ldr	x0, [x8, #32]
   35a40:	ldur	x8, [x29, #-40]
   35a44:	ldr	x9, [sp, #16]
   35a48:	mul	x1, x8, x9
   35a4c:	bl	af40 <realloc@plt>
   35a50:	str	x0, [sp, #56]
   35a54:	ldur	x8, [x29, #-32]
   35a58:	ldr	x0, [x8, #40]
   35a5c:	ldur	x8, [x29, #-40]
   35a60:	mov	x9, #0x18                  	// #24
   35a64:	mul	x1, x8, x9
   35a68:	str	x9, [sp, #8]
   35a6c:	bl	af40 <realloc@plt>
   35a70:	str	x0, [sp, #48]
   35a74:	ldur	x8, [x29, #-32]
   35a78:	ldr	x0, [x8, #48]
   35a7c:	ldur	x8, [x29, #-40]
   35a80:	ldr	x9, [sp, #8]
   35a84:	mul	x1, x8, x9
   35a88:	bl	af40 <realloc@plt>
   35a8c:	str	x0, [sp, #40]
   35a90:	ldur	x8, [x29, #-48]
   35a94:	mov	w10, #0x1                   	// #1
   35a98:	str	w10, [sp, #4]
   35a9c:	cbz	x8, 35ad0 <rpl_re_set_registers@@Base+0x8b34>
   35aa0:	ldr	x8, [sp, #56]
   35aa4:	mov	w9, #0x1                   	// #1
   35aa8:	str	w9, [sp, #4]
   35aac:	cbz	x8, 35ad0 <rpl_re_set_registers@@Base+0x8b34>
   35ab0:	ldr	x8, [sp, #48]
   35ab4:	mov	w9, #0x1                   	// #1
   35ab8:	str	w9, [sp, #4]
   35abc:	cbz	x8, 35ad0 <rpl_re_set_registers@@Base+0x8b34>
   35ac0:	ldr	x8, [sp, #40]
   35ac4:	cmp	x8, #0x0
   35ac8:	cset	w9, eq  // eq = none
   35acc:	str	w9, [sp, #4]
   35ad0:	ldr	w8, [sp, #4]
   35ad4:	and	w8, w8, #0x1
   35ad8:	mov	w0, w8
   35adc:	sxtw	x9, w0
   35ae0:	cbz	x9, 35b10 <rpl_re_set_registers@@Base+0x8b74>
   35ae4:	ldur	x0, [x29, #-48]
   35ae8:	bl	a930 <free@plt>
   35aec:	ldr	x0, [sp, #56]
   35af0:	bl	a930 <free@plt>
   35af4:	ldr	x0, [sp, #48]
   35af8:	bl	a930 <free@plt>
   35afc:	ldr	x0, [sp, #40]
   35b00:	bl	a930 <free@plt>
   35b04:	mov	x8, #0xffffffffffffffff    	// #-1
   35b08:	stur	x8, [x29, #-8]
   35b0c:	b	35c78 <rpl_re_set_registers@@Base+0x8cdc>
   35b10:	ldur	x8, [x29, #-48]
   35b14:	ldur	x9, [x29, #-32]
   35b18:	str	x8, [x9, #24]
   35b1c:	ldr	x8, [sp, #56]
   35b20:	ldur	x9, [x29, #-32]
   35b24:	str	x8, [x9, #32]
   35b28:	ldr	x8, [sp, #48]
   35b2c:	ldur	x9, [x29, #-32]
   35b30:	str	x8, [x9, #40]
   35b34:	ldr	x8, [sp, #40]
   35b38:	ldur	x9, [x29, #-32]
   35b3c:	str	x8, [x9, #48]
   35b40:	ldur	x8, [x29, #-40]
   35b44:	ldur	x9, [x29, #-32]
   35b48:	str	x8, [x9, #8]
   35b4c:	ldur	x8, [x29, #-32]
   35b50:	ldr	x8, [x8]
   35b54:	ldur	x9, [x29, #-32]
   35b58:	mov	x10, #0x10                  	// #16
   35b5c:	ldr	x9, [x9, #16]
   35b60:	ldur	q0, [x29, #-24]
   35b64:	str	q0, [x8, x9, lsl #4]
   35b68:	ldur	x8, [x29, #-32]
   35b6c:	ldr	x8, [x8]
   35b70:	ldur	x9, [x29, #-32]
   35b74:	ldr	x9, [x9, #16]
   35b78:	mul	x9, x10, x9
   35b7c:	add	x8, x8, x9
   35b80:	ldr	w11, [x8, #8]
   35b84:	and	w11, w11, #0xfffc00ff
   35b88:	str	w11, [x8, #8]
   35b8c:	ldur	w11, [x29, #-16]
   35b90:	and	w11, w11, #0xff
   35b94:	cmp	w11, #0x5
   35b98:	b.ne	35bb4 <rpl_re_set_registers@@Base+0x8c18>  // b.any
   35b9c:	ldur	x8, [x29, #-32]
   35ba0:	ldr	w9, [x8, #180]
   35ba4:	mov	w10, #0x1                   	// #1
   35ba8:	cmp	w9, #0x1
   35bac:	str	w10, [sp]
   35bb0:	b.gt	35bc8 <rpl_re_set_registers@@Base+0x8c2c>
   35bb4:	ldur	w8, [x29, #-16]
   35bb8:	and	w8, w8, #0xff
   35bbc:	cmp	w8, #0x6
   35bc0:	cset	w8, eq  // eq = none
   35bc4:	str	w8, [sp]
   35bc8:	ldr	w8, [sp]
   35bcc:	and	w8, w8, #0x1
   35bd0:	ldur	x9, [x29, #-32]
   35bd4:	ldr	x9, [x9]
   35bd8:	ldur	x10, [x29, #-32]
   35bdc:	mov	x11, #0x10                  	// #16
   35be0:	ldr	x10, [x10, #16]
   35be4:	mul	x10, x11, x10
   35be8:	add	x9, x9, x10
   35bec:	ldr	w12, [x9, #8]
   35bf0:	and	w8, w8, #0x1
   35bf4:	and	w12, w12, #0xffefffff
   35bf8:	orr	w8, w12, w8, lsl #20
   35bfc:	str	w8, [x9, #8]
   35c00:	ldur	x9, [x29, #-32]
   35c04:	mov	x10, #0x18                  	// #24
   35c08:	ldr	x9, [x9, #24]
   35c0c:	ldur	x11, [x29, #-32]
   35c10:	ldr	x11, [x11, #16]
   35c14:	mov	x13, #0xffffffffffffffff    	// #-1
   35c18:	str	x13, [x9, x11, lsl #3]
   35c1c:	ldur	x9, [x29, #-32]
   35c20:	ldr	x9, [x9, #40]
   35c24:	ldur	x11, [x29, #-32]
   35c28:	ldr	x11, [x11, #16]
   35c2c:	mul	x11, x10, x11
   35c30:	add	x9, x9, x11
   35c34:	str	xzr, [x9]
   35c38:	str	xzr, [x9, #8]
   35c3c:	str	xzr, [x9, #16]
   35c40:	ldur	x9, [x29, #-32]
   35c44:	ldr	x9, [x9, #48]
   35c48:	ldur	x11, [x29, #-32]
   35c4c:	ldr	x11, [x11, #16]
   35c50:	mul	x10, x10, x11
   35c54:	add	x9, x9, x10
   35c58:	str	xzr, [x9]
   35c5c:	str	xzr, [x9, #8]
   35c60:	str	xzr, [x9, #16]
   35c64:	ldur	x9, [x29, #-32]
   35c68:	ldr	x10, [x9, #16]
   35c6c:	add	x11, x10, #0x1
   35c70:	str	x11, [x9, #16]
   35c74:	stur	x10, [x29, #-8]
   35c78:	ldur	x0, [x29, #-8]
   35c7c:	ldp	x29, x30, [sp, #112]
   35c80:	add	sp, sp, #0x80
   35c84:	ret
   35c88:	sub	sp, sp, #0x30
   35c8c:	stp	x29, x30, [sp, #32]
   35c90:	add	x29, sp, #0x20
   35c94:	mov	x8, #0x2                   	// #2
   35c98:	mov	x9, #0x10                  	// #16
   35c9c:	str	x0, [sp, #16]
   35ca0:	str	x1, [sp, #8]
   35ca4:	str	x2, [sp]
   35ca8:	ldr	x10, [sp, #16]
   35cac:	str	x8, [x10]
   35cb0:	mov	x0, x9
   35cb4:	bl	af10 <malloc@plt>
   35cb8:	ldr	x8, [sp, #16]
   35cbc:	str	x0, [x8, #16]
   35cc0:	ldr	x8, [sp, #16]
   35cc4:	ldr	x8, [x8, #16]
   35cc8:	cmp	x8, #0x0
   35ccc:	cset	w11, eq  // eq = none
   35cd0:	and	w11, w11, #0x1
   35cd4:	mov	w0, w11
   35cd8:	sxtw	x8, w0
   35cdc:	cbz	x8, 35cec <rpl_re_set_registers@@Base+0x8d50>
   35ce0:	mov	w8, #0xc                   	// #12
   35ce4:	stur	w8, [x29, #-4]
   35ce8:	b	35d80 <rpl_re_set_registers@@Base+0x8de4>
   35cec:	ldr	x8, [sp, #8]
   35cf0:	ldr	x9, [sp]
   35cf4:	cmp	x8, x9
   35cf8:	b.ne	35d1c <rpl_re_set_registers@@Base+0x8d80>  // b.any
   35cfc:	ldr	x8, [sp, #16]
   35d00:	mov	x9, #0x1                   	// #1
   35d04:	str	x9, [x8, #8]
   35d08:	ldr	x8, [sp, #8]
   35d0c:	ldr	x9, [sp, #16]
   35d10:	ldr	x9, [x9, #16]
   35d14:	str	x8, [x9]
   35d18:	b	35d7c <rpl_re_set_registers@@Base+0x8de0>
   35d1c:	ldr	x8, [sp, #16]
   35d20:	mov	x9, #0x2                   	// #2
   35d24:	str	x9, [x8, #8]
   35d28:	ldr	x8, [sp, #8]
   35d2c:	ldr	x9, [sp]
   35d30:	cmp	x8, x9
   35d34:	b.ge	35d5c <rpl_re_set_registers@@Base+0x8dc0>  // b.tcont
   35d38:	ldr	x8, [sp, #8]
   35d3c:	ldr	x9, [sp, #16]
   35d40:	ldr	x9, [x9, #16]
   35d44:	str	x8, [x9]
   35d48:	ldr	x8, [sp]
   35d4c:	ldr	x9, [sp, #16]
   35d50:	ldr	x9, [x9, #16]
   35d54:	str	x8, [x9, #8]
   35d58:	b	35d7c <rpl_re_set_registers@@Base+0x8de0>
   35d5c:	ldr	x8, [sp]
   35d60:	ldr	x9, [sp, #16]
   35d64:	ldr	x9, [x9, #16]
   35d68:	str	x8, [x9]
   35d6c:	ldr	x8, [sp, #8]
   35d70:	ldr	x9, [sp, #16]
   35d74:	ldr	x9, [x9, #16]
   35d78:	str	x8, [x9, #8]
   35d7c:	stur	wzr, [x29, #-4]
   35d80:	ldur	w0, [x29, #-4]
   35d84:	ldp	x29, x30, [sp, #32]
   35d88:	add	sp, sp, #0x30
   35d8c:	ret
   35d90:	sub	sp, sp, #0x30
   35d94:	stp	x29, x30, [sp, #32]
   35d98:	add	x29, sp, #0x20
   35d9c:	mov	x8, #0x1                   	// #1
   35da0:	mov	x9, #0x8                   	// #8
   35da4:	str	x0, [sp, #16]
   35da8:	str	x1, [sp, #8]
   35dac:	ldr	x10, [sp, #16]
   35db0:	str	x8, [x10]
   35db4:	ldr	x10, [sp, #16]
   35db8:	str	x8, [x10, #8]
   35dbc:	mov	x0, x9
   35dc0:	bl	af10 <malloc@plt>
   35dc4:	ldr	x8, [sp, #16]
   35dc8:	str	x0, [x8, #16]
   35dcc:	ldr	x8, [sp, #16]
   35dd0:	ldr	x8, [x8, #16]
   35dd4:	cmp	x8, #0x0
   35dd8:	cset	w11, eq  // eq = none
   35ddc:	and	w11, w11, #0x1
   35de0:	mov	w0, w11
   35de4:	sxtw	x8, w0
   35de8:	cbz	x8, 35e08 <rpl_re_set_registers@@Base+0x8e6c>
   35dec:	ldr	x8, [sp, #16]
   35df0:	str	xzr, [x8, #8]
   35df4:	ldr	x8, [sp, #16]
   35df8:	str	xzr, [x8]
   35dfc:	mov	w9, #0xc                   	// #12
   35e00:	stur	w9, [x29, #-4]
   35e04:	b	35e1c <rpl_re_set_registers@@Base+0x8e80>
   35e08:	ldr	x8, [sp, #8]
   35e0c:	ldr	x9, [sp, #16]
   35e10:	ldr	x9, [x9, #16]
   35e14:	str	x8, [x9]
   35e18:	stur	wzr, [x29, #-4]
   35e1c:	ldur	w0, [x29, #-4]
   35e20:	ldp	x29, x30, [sp, #32]
   35e24:	add	sp, sp, #0x30
   35e28:	ret
   35e2c:	sub	sp, sp, #0x90
   35e30:	stp	x29, x30, [sp, #128]
   35e34:	add	x29, sp, #0x80
   35e38:	mov	w8, #0x0                   	// #0
   35e3c:	mov	w9, #0x1                   	// #1
   35e40:	add	x10, sp, #0x38
   35e44:	stur	x0, [x29, #-16]
   35e48:	stur	x1, [x29, #-24]
   35e4c:	stur	x2, [x29, #-32]
   35e50:	and	w9, w3, w9
   35e54:	sturb	w9, [x29, #-33]
   35e58:	strb	w8, [sp, #54]
   35e5c:	ldur	x11, [x29, #-24]
   35e60:	ldr	x11, [x11, #40]
   35e64:	ldur	x12, [x29, #-32]
   35e68:	mov	x13, #0x18                  	// #24
   35e6c:	mul	x12, x13, x12
   35e70:	add	x11, x11, x12
   35e74:	ldr	x11, [x11, #8]
   35e78:	add	x1, x11, #0x1
   35e7c:	mov	x0, x10
   35e80:	bl	36240 <rpl_re_set_registers@@Base+0x92a4>
   35e84:	stur	w0, [x29, #-40]
   35e88:	ldur	w8, [x29, #-40]
   35e8c:	cmp	w8, #0x0
   35e90:	cset	w8, ne  // ne = any
   35e94:	and	w8, w8, #0x1
   35e98:	mov	w1, w8
   35e9c:	sxtw	x10, w1
   35ea0:	cbz	x10, 35eb0 <rpl_re_set_registers@@Base+0x8f14>
   35ea4:	ldur	w8, [x29, #-40]
   35ea8:	stur	w8, [x29, #-4]
   35eac:	b	36230 <rpl_re_set_registers@@Base+0x9294>
   35eb0:	ldur	x8, [x29, #-24]
   35eb4:	ldr	x8, [x8, #48]
   35eb8:	ldur	x9, [x29, #-32]
   35ebc:	mov	x10, #0x18                  	// #24
   35ec0:	mul	x9, x10, x9
   35ec4:	add	x8, x8, x9
   35ec8:	mov	x9, #0x8                   	// #8
   35ecc:	mov	x10, #0xffffffffffffffff    	// #-1
   35ed0:	str	x10, [x8, #8]
   35ed4:	ldur	x8, [x29, #-24]
   35ed8:	ldr	x8, [x8]
   35edc:	ldur	x10, [x29, #-32]
   35ee0:	mov	x11, #0x10                  	// #16
   35ee4:	mul	x10, x11, x10
   35ee8:	add	x8, x8, x10
   35eec:	ldr	w12, [x8, #8]
   35ef0:	lsr	w9, w12, w9
   35ef4:	and	w9, w9, #0x3ff
   35ef8:	cbz	w9, 35fc8 <rpl_re_set_registers@@Base+0x902c>
   35efc:	ldur	x8, [x29, #-24]
   35f00:	ldr	x8, [x8, #40]
   35f04:	ldur	x9, [x29, #-32]
   35f08:	mov	x10, #0x18                  	// #24
   35f0c:	mul	x9, x10, x9
   35f10:	add	x8, x8, x9
   35f14:	ldr	x8, [x8, #8]
   35f18:	cbz	x8, 35fc8 <rpl_re_set_registers@@Base+0x902c>
   35f1c:	ldur	x8, [x29, #-24]
   35f20:	ldr	x8, [x8]
   35f24:	ldur	x9, [x29, #-24]
   35f28:	ldr	x9, [x9, #40]
   35f2c:	ldur	x10, [x29, #-32]
   35f30:	mov	x11, #0x18                  	// #24
   35f34:	mul	x10, x11, x10
   35f38:	add	x9, x9, x10
   35f3c:	mov	x10, #0x10                  	// #16
   35f40:	ldr	x9, [x9, #16]
   35f44:	ldr	x9, [x9]
   35f48:	mul	x9, x10, x9
   35f4c:	add	x8, x8, x9
   35f50:	ldr	w12, [x8, #8]
   35f54:	lsr	w12, w12, #18
   35f58:	and	w12, w12, #0x1
   35f5c:	cbnz	w12, 35fc8 <rpl_re_set_registers@@Base+0x902c>
   35f60:	ldur	x0, [x29, #-24]
   35f64:	ldur	x1, [x29, #-32]
   35f68:	ldur	x2, [x29, #-32]
   35f6c:	ldur	x3, [x29, #-32]
   35f70:	ldur	x8, [x29, #-24]
   35f74:	ldr	x8, [x8]
   35f78:	ldur	x9, [x29, #-32]
   35f7c:	mov	x10, #0x10                  	// #16
   35f80:	mul	x9, x10, x9
   35f84:	add	x8, x8, x9
   35f88:	mov	x9, #0x8                   	// #8
   35f8c:	ldr	w11, [x8, #8]
   35f90:	lsr	w9, w11, w9
   35f94:	and	w4, w9, #0x3ff
   35f98:	bl	362c0 <rpl_re_set_registers@@Base+0x9324>
   35f9c:	stur	w0, [x29, #-40]
   35fa0:	ldur	w9, [x29, #-40]
   35fa4:	cmp	w9, #0x0
   35fa8:	cset	w9, ne  // ne = any
   35fac:	and	w9, w9, #0x1
   35fb0:	mov	w1, w9
   35fb4:	sxtw	x8, w1
   35fb8:	cbz	x8, 35fc8 <rpl_re_set_registers@@Base+0x902c>
   35fbc:	ldur	w8, [x29, #-40]
   35fc0:	stur	w8, [x29, #-4]
   35fc4:	b	36230 <rpl_re_set_registers@@Base+0x9294>
   35fc8:	ldur	x8, [x29, #-24]
   35fcc:	ldr	x8, [x8]
   35fd0:	ldur	x9, [x29, #-32]
   35fd4:	mov	x10, #0x10                  	// #16
   35fd8:	mul	x9, x10, x9
   35fdc:	add	x8, x8, x9
   35fe0:	ldr	w11, [x8, #8]
   35fe4:	and	w11, w11, #0xff
   35fe8:	and	w11, w11, #0x8
   35fec:	cbz	w11, 36180 <rpl_re_set_registers@@Base+0x91e4>
   35ff0:	stur	xzr, [x29, #-48]
   35ff4:	ldur	x8, [x29, #-48]
   35ff8:	ldur	x9, [x29, #-24]
   35ffc:	ldr	x9, [x9, #40]
   36000:	ldur	x10, [x29, #-32]
   36004:	mov	x11, #0x18                  	// #24
   36008:	mul	x10, x11, x10
   3600c:	add	x9, x9, x10
   36010:	ldr	x9, [x9, #8]
   36014:	cmp	x8, x9
   36018:	b.ge	36180 <rpl_re_set_registers@@Base+0x91e4>  // b.tcont
   3601c:	ldur	x8, [x29, #-24]
   36020:	ldr	x8, [x8, #40]
   36024:	ldur	x9, [x29, #-32]
   36028:	mov	x10, #0x18                  	// #24
   3602c:	mul	x9, x10, x9
   36030:	add	x8, x8, x9
   36034:	ldr	x8, [x8, #16]
   36038:	ldur	x9, [x29, #-48]
   3603c:	ldr	x8, [x8, x9, lsl #3]
   36040:	str	x8, [sp, #8]
   36044:	ldur	x8, [x29, #-24]
   36048:	ldr	x8, [x8, #48]
   3604c:	ldr	x9, [sp, #8]
   36050:	mul	x9, x10, x9
   36054:	add	x8, x8, x9
   36058:	ldr	x8, [x8, #8]
   3605c:	mov	x9, #0xffffffffffffffff    	// #-1
   36060:	cmp	x8, x9
   36064:	b.ne	36074 <rpl_re_set_registers@@Base+0x90d8>  // b.any
   36068:	mov	w8, #0x1                   	// #1
   3606c:	strb	w8, [sp, #54]
   36070:	b	36170 <rpl_re_set_registers@@Base+0x91d4>
   36074:	ldur	x8, [x29, #-24]
   36078:	ldr	x8, [x8, #48]
   3607c:	ldr	x9, [sp, #8]
   36080:	mov	x10, #0x18                  	// #24
   36084:	mul	x9, x10, x9
   36088:	add	x8, x8, x9
   3608c:	ldr	x8, [x8, #8]
   36090:	cbnz	x8, 360dc <rpl_re_set_registers@@Base+0x9140>
   36094:	ldur	x1, [x29, #-24]
   36098:	ldr	x2, [sp, #8]
   3609c:	add	x0, sp, #0x10
   360a0:	mov	w8, wzr
   360a4:	and	w3, w8, #0x1
   360a8:	bl	35e2c <rpl_re_set_registers@@Base+0x8e90>
   360ac:	stur	w0, [x29, #-40]
   360b0:	ldur	w8, [x29, #-40]
   360b4:	cmp	w8, #0x0
   360b8:	cset	w8, ne  // ne = any
   360bc:	and	w8, w8, #0x1
   360c0:	mov	w1, w8
   360c4:	sxtw	x9, w1
   360c8:	cbz	x9, 360d8 <rpl_re_set_registers@@Base+0x913c>
   360cc:	ldur	w8, [x29, #-40]
   360d0:	stur	w8, [x29, #-4]
   360d4:	b	36230 <rpl_re_set_registers@@Base+0x9294>
   360d8:	b	36104 <rpl_re_set_registers@@Base+0x9168>
   360dc:	ldur	x8, [x29, #-24]
   360e0:	ldr	x8, [x8, #48]
   360e4:	ldr	x9, [sp, #8]
   360e8:	mov	x10, #0x18                  	// #24
   360ec:	mul	x9, x10, x9
   360f0:	add	x8, x8, x9
   360f4:	ldr	q0, [x8]
   360f8:	str	q0, [sp, #16]
   360fc:	ldr	x8, [x8, #16]
   36100:	str	x8, [sp, #32]
   36104:	add	x0, sp, #0x38
   36108:	add	x1, sp, #0x10
   3610c:	bl	36848 <rpl_re_set_registers@@Base+0x98ac>
   36110:	stur	w0, [x29, #-40]
   36114:	ldur	w8, [x29, #-40]
   36118:	cmp	w8, #0x0
   3611c:	cset	w8, ne  // ne = any
   36120:	and	w8, w8, #0x1
   36124:	mov	w1, w8
   36128:	sxtw	x9, w1
   3612c:	cbz	x9, 3613c <rpl_re_set_registers@@Base+0x91a0>
   36130:	ldur	w8, [x29, #-40]
   36134:	stur	w8, [x29, #-4]
   36138:	b	36230 <rpl_re_set_registers@@Base+0x9294>
   3613c:	ldur	x8, [x29, #-24]
   36140:	ldr	x8, [x8, #48]
   36144:	ldr	x9, [sp, #8]
   36148:	mov	x10, #0x18                  	// #24
   3614c:	mul	x9, x10, x9
   36150:	add	x8, x8, x9
   36154:	ldr	x8, [x8, #8]
   36158:	cbnz	x8, 36170 <rpl_re_set_registers@@Base+0x91d4>
   3615c:	mov	w8, #0x1                   	// #1
   36160:	strb	w8, [sp, #54]
   36164:	add	x9, sp, #0x10
   36168:	ldr	x0, [x9, #16]
   3616c:	bl	a930 <free@plt>
   36170:	ldur	x8, [x29, #-48]
   36174:	add	x8, x8, #0x1
   36178:	stur	x8, [x29, #-48]
   3617c:	b	35ff4 <rpl_re_set_registers@@Base+0x9058>
   36180:	ldur	x1, [x29, #-32]
   36184:	add	x0, sp, #0x38
   36188:	bl	36c60 <rpl_re_set_registers@@Base+0x9cc4>
   3618c:	mov	w8, #0x1                   	// #1
   36190:	and	w8, w0, w8
   36194:	strb	w8, [sp, #55]
   36198:	ldrb	w8, [sp, #55]
   3619c:	eor	w8, w8, #0x1
   361a0:	and	w8, w8, #0x1
   361a4:	mov	w1, w8
   361a8:	sxtw	x9, w1
   361ac:	cbz	x9, 361bc <rpl_re_set_registers@@Base+0x9220>
   361b0:	mov	w8, #0xc                   	// #12
   361b4:	stur	w8, [x29, #-4]
   361b8:	b	36230 <rpl_re_set_registers@@Base+0x9294>
   361bc:	ldrb	w8, [sp, #54]
   361c0:	tbnz	w8, #0, 361c8 <rpl_re_set_registers@@Base+0x922c>
   361c4:	b	361f0 <rpl_re_set_registers@@Base+0x9254>
   361c8:	ldurb	w8, [x29, #-33]
   361cc:	tbnz	w8, #0, 361f0 <rpl_re_set_registers@@Base+0x9254>
   361d0:	ldur	x8, [x29, #-24]
   361d4:	ldr	x8, [x8, #48]
   361d8:	ldur	x9, [x29, #-32]
   361dc:	mov	x10, #0x18                  	// #24
   361e0:	mul	x9, x10, x9
   361e4:	add	x8, x8, x9
   361e8:	str	xzr, [x8, #8]
   361ec:	b	36218 <rpl_re_set_registers@@Base+0x927c>
   361f0:	ldur	x8, [x29, #-24]
   361f4:	ldr	x8, [x8, #48]
   361f8:	ldur	x9, [x29, #-32]
   361fc:	mov	x10, #0x18                  	// #24
   36200:	mul	x9, x10, x9
   36204:	add	x8, x8, x9
   36208:	ldur	q0, [sp, #56]
   3620c:	str	q0, [x8]
   36210:	ldr	x9, [sp, #72]
   36214:	str	x9, [x8, #16]
   36218:	ldur	x8, [x29, #-16]
   3621c:	ldur	q0, [sp, #56]
   36220:	str	q0, [x8]
   36224:	ldr	x9, [sp, #72]
   36228:	str	x9, [x8, #16]
   3622c:	stur	wzr, [x29, #-4]
   36230:	ldur	w0, [x29, #-4]
   36234:	ldp	x29, x30, [sp, #128]
   36238:	add	sp, sp, #0x90
   3623c:	ret
   36240:	sub	sp, sp, #0x30
   36244:	stp	x29, x30, [sp, #32]
   36248:	add	x29, sp, #0x20
   3624c:	mov	x8, #0x8                   	// #8
   36250:	str	x0, [sp, #16]
   36254:	str	x1, [sp, #8]
   36258:	ldr	x9, [sp, #8]
   3625c:	ldr	x10, [sp, #16]
   36260:	str	x9, [x10]
   36264:	ldr	x9, [sp, #16]
   36268:	str	xzr, [x9, #8]
   3626c:	ldr	x9, [sp, #8]
   36270:	mul	x0, x9, x8
   36274:	bl	af10 <malloc@plt>
   36278:	ldr	x8, [sp, #16]
   3627c:	str	x0, [x8, #16]
   36280:	ldr	x8, [sp, #16]
   36284:	ldr	x8, [x8, #16]
   36288:	cmp	x8, #0x0
   3628c:	cset	w11, eq  // eq = none
   36290:	and	w11, w11, #0x1
   36294:	mov	w0, w11
   36298:	sxtw	x8, w0
   3629c:	cbz	x8, 362ac <rpl_re_set_registers@@Base+0x9310>
   362a0:	mov	w8, #0xc                   	// #12
   362a4:	stur	w8, [x29, #-4]
   362a8:	b	362b0 <rpl_re_set_registers@@Base+0x9314>
   362ac:	stur	wzr, [x29, #-4]
   362b0:	ldur	w0, [x29, #-4]
   362b4:	ldp	x29, x30, [sp, #32]
   362b8:	add	sp, sp, #0x30
   362bc:	ret
   362c0:	sub	sp, sp, #0x70
   362c4:	stp	x29, x30, [sp, #96]
   362c8:	add	x29, sp, #0x60
   362cc:	stur	x0, [x29, #-16]
   362d0:	stur	x1, [x29, #-24]
   362d4:	stur	x2, [x29, #-32]
   362d8:	stur	x3, [x29, #-40]
   362dc:	stur	w4, [x29, #-44]
   362e0:	ldur	w8, [x29, #-44]
   362e4:	str	w8, [sp, #24]
   362e8:	ldur	x9, [x29, #-24]
   362ec:	str	x9, [sp, #40]
   362f0:	ldur	x9, [x29, #-32]
   362f4:	str	x9, [sp, #32]
   362f8:	ldur	x8, [x29, #-16]
   362fc:	ldr	x8, [x8]
   36300:	ldr	x9, [sp, #40]
   36304:	mov	x10, #0x10                  	// #16
   36308:	mul	x9, x10, x9
   3630c:	add	x8, x8, x9
   36310:	ldr	w11, [x8, #8]
   36314:	and	w11, w11, #0xff
   36318:	cmp	w11, #0x4
   3631c:	b.ne	36404 <rpl_re_set_registers@@Base+0x9468>  // b.any
   36320:	ldur	x8, [x29, #-16]
   36324:	mov	x9, #0x18                  	// #24
   36328:	ldr	x8, [x8, #24]
   3632c:	ldr	x10, [sp, #40]
   36330:	ldr	x8, [x8, x10, lsl #3]
   36334:	str	x8, [sp, #16]
   36338:	ldur	x8, [x29, #-16]
   3633c:	ldr	x8, [x8, #40]
   36340:	ldr	x10, [sp, #32]
   36344:	mul	x9, x9, x10
   36348:	add	x8, x8, x9
   3634c:	str	xzr, [x8, #8]
   36350:	ldur	x0, [x29, #-16]
   36354:	ldr	x1, [sp, #16]
   36358:	ldr	w2, [sp, #24]
   3635c:	bl	36e8c <rpl_re_set_registers@@Base+0x9ef0>
   36360:	str	x0, [sp, #8]
   36364:	ldr	x8, [sp, #8]
   36368:	mov	x9, #0xffffffffffffffff    	// #-1
   3636c:	cmp	x8, x9
   36370:	cset	w11, eq  // eq = none
   36374:	and	w11, w11, #0x1
   36378:	mov	w0, w11
   3637c:	sxtw	x8, w0
   36380:	cbz	x8, 36390 <rpl_re_set_registers@@Base+0x93f4>
   36384:	mov	w8, #0xc                   	// #12
   36388:	stur	w8, [x29, #-4]
   3638c:	b	36838 <rpl_re_set_registers@@Base+0x989c>
   36390:	ldur	x8, [x29, #-16]
   36394:	mov	x9, #0x18                  	// #24
   36398:	ldr	x8, [x8, #24]
   3639c:	ldr	x10, [sp, #40]
   363a0:	ldr	x8, [x8, x10, lsl #3]
   363a4:	ldur	x10, [x29, #-16]
   363a8:	ldr	x10, [x10, #24]
   363ac:	ldr	x11, [sp, #32]
   363b0:	str	x8, [x10, x11, lsl #3]
   363b4:	ldur	x8, [x29, #-16]
   363b8:	ldr	x8, [x8, #40]
   363bc:	ldr	x10, [sp, #32]
   363c0:	mul	x9, x9, x10
   363c4:	add	x0, x8, x9
   363c8:	ldr	x1, [sp, #8]
   363cc:	bl	36c60 <rpl_re_set_registers@@Base+0x9cc4>
   363d0:	mov	w12, #0x1                   	// #1
   363d4:	and	w12, w0, w12
   363d8:	strb	w12, [sp, #31]
   363dc:	ldrb	w12, [sp, #31]
   363e0:	eor	w12, w12, #0x1
   363e4:	and	w12, w12, #0x1
   363e8:	mov	w1, w12
   363ec:	sxtw	x8, w1
   363f0:	cbz	x8, 36400 <rpl_re_set_registers@@Base+0x9464>
   363f4:	mov	w8, #0xc                   	// #12
   363f8:	stur	w8, [x29, #-4]
   363fc:	b	36838 <rpl_re_set_registers@@Base+0x989c>
   36400:	b	36820 <rpl_re_set_registers@@Base+0x9884>
   36404:	ldur	x8, [x29, #-16]
   36408:	ldr	x8, [x8, #40]
   3640c:	ldr	x9, [sp, #40]
   36410:	mov	x10, #0x18                  	// #24
   36414:	mul	x9, x10, x9
   36418:	add	x8, x8, x9
   3641c:	ldr	x8, [x8, #8]
   36420:	cbnz	x8, 36448 <rpl_re_set_registers@@Base+0x94ac>
   36424:	ldur	x8, [x29, #-16]
   36428:	ldr	x8, [x8, #24]
   3642c:	ldr	x9, [sp, #40]
   36430:	ldr	x8, [x8, x9, lsl #3]
   36434:	ldur	x9, [x29, #-16]
   36438:	ldr	x9, [x9, #24]
   3643c:	ldr	x10, [sp, #32]
   36440:	str	x8, [x9, x10, lsl #3]
   36444:	b	36834 <rpl_re_set_registers@@Base+0x9898>
   36448:	ldur	x8, [x29, #-16]
   3644c:	ldr	x8, [x8, #40]
   36450:	ldr	x9, [sp, #40]
   36454:	mov	x10, #0x18                  	// #24
   36458:	mul	x9, x10, x9
   3645c:	add	x8, x8, x9
   36460:	ldr	x8, [x8, #8]
   36464:	cmp	x8, #0x1
   36468:	b.ne	365e4 <rpl_re_set_registers@@Base+0x9648>  // b.any
   3646c:	ldur	x8, [x29, #-16]
   36470:	ldr	x8, [x8, #40]
   36474:	ldr	x9, [sp, #40]
   36478:	mov	x10, #0x18                  	// #24
   3647c:	mul	x9, x10, x9
   36480:	add	x8, x8, x9
   36484:	ldr	x8, [x8, #16]
   36488:	ldr	x8, [x8]
   3648c:	str	x8, [sp, #16]
   36490:	ldur	x8, [x29, #-16]
   36494:	ldr	x8, [x8, #40]
   36498:	ldr	x9, [sp, #32]
   3649c:	mul	x9, x10, x9
   364a0:	add	x8, x8, x9
   364a4:	str	xzr, [x8, #8]
   364a8:	ldr	x8, [sp, #40]
   364ac:	ldur	x9, [x29, #-40]
   364b0:	cmp	x8, x9
   364b4:	b.ne	3651c <rpl_re_set_registers@@Base+0x9580>  // b.any
   364b8:	ldr	x8, [sp, #32]
   364bc:	ldr	x9, [sp, #40]
   364c0:	cmp	x8, x9
   364c4:	b.eq	3651c <rpl_re_set_registers@@Base+0x9580>  // b.none
   364c8:	ldur	x8, [x29, #-16]
   364cc:	ldr	x8, [x8, #40]
   364d0:	ldr	x9, [sp, #32]
   364d4:	mov	x10, #0x18                  	// #24
   364d8:	mul	x9, x10, x9
   364dc:	add	x0, x8, x9
   364e0:	ldr	x1, [sp, #16]
   364e4:	bl	36c60 <rpl_re_set_registers@@Base+0x9cc4>
   364e8:	mov	w11, #0x1                   	// #1
   364ec:	and	w11, w0, w11
   364f0:	strb	w11, [sp, #31]
   364f4:	ldrb	w11, [sp, #31]
   364f8:	eor	w11, w11, #0x1
   364fc:	and	w11, w11, #0x1
   36500:	mov	w1, w11
   36504:	sxtw	x8, w1
   36508:	cbz	x8, 36518 <rpl_re_set_registers@@Base+0x957c>
   3650c:	mov	w8, #0xc                   	// #12
   36510:	stur	w8, [x29, #-4]
   36514:	b	36838 <rpl_re_set_registers@@Base+0x989c>
   36518:	b	36834 <rpl_re_set_registers@@Base+0x9898>
   3651c:	ldur	x8, [x29, #-16]
   36520:	ldr	x8, [x8]
   36524:	ldr	x9, [sp, #40]
   36528:	mov	x10, #0x10                  	// #16
   3652c:	mul	x9, x10, x9
   36530:	add	x8, x8, x9
   36534:	mov	x9, #0x8                   	// #8
   36538:	ldr	w11, [x8, #8]
   3653c:	lsr	w9, w11, w9
   36540:	and	w9, w9, #0x3ff
   36544:	ldr	w11, [sp, #24]
   36548:	orr	w9, w11, w9
   3654c:	str	w9, [sp, #24]
   36550:	ldur	x0, [x29, #-16]
   36554:	ldr	x1, [sp, #16]
   36558:	ldr	w2, [sp, #24]
   3655c:	bl	36e8c <rpl_re_set_registers@@Base+0x9ef0>
   36560:	str	x0, [sp, #8]
   36564:	ldr	x8, [sp, #8]
   36568:	mov	x10, #0xffffffffffffffff    	// #-1
   3656c:	cmp	x8, x10
   36570:	cset	w9, eq  // eq = none
   36574:	and	w9, w9, #0x1
   36578:	mov	w0, w9
   3657c:	sxtw	x8, w0
   36580:	cbz	x8, 36590 <rpl_re_set_registers@@Base+0x95f4>
   36584:	mov	w8, #0xc                   	// #12
   36588:	stur	w8, [x29, #-4]
   3658c:	b	36838 <rpl_re_set_registers@@Base+0x989c>
   36590:	ldur	x8, [x29, #-16]
   36594:	ldr	x8, [x8, #40]
   36598:	ldr	x9, [sp, #32]
   3659c:	mov	x10, #0x18                  	// #24
   365a0:	mul	x9, x10, x9
   365a4:	add	x0, x8, x9
   365a8:	ldr	x1, [sp, #8]
   365ac:	bl	36c60 <rpl_re_set_registers@@Base+0x9cc4>
   365b0:	mov	w11, #0x1                   	// #1
   365b4:	and	w11, w0, w11
   365b8:	strb	w11, [sp, #31]
   365bc:	ldrb	w11, [sp, #31]
   365c0:	eor	w11, w11, #0x1
   365c4:	and	w11, w11, #0x1
   365c8:	mov	w1, w11
   365cc:	sxtw	x8, w1
   365d0:	cbz	x8, 365e0 <rpl_re_set_registers@@Base+0x9644>
   365d4:	mov	w8, #0xc                   	// #12
   365d8:	stur	w8, [x29, #-4]
   365dc:	b	36838 <rpl_re_set_registers@@Base+0x989c>
   365e0:	b	36820 <rpl_re_set_registers@@Base+0x9884>
   365e4:	ldur	x8, [x29, #-16]
   365e8:	ldr	x8, [x8, #40]
   365ec:	ldr	x9, [sp, #40]
   365f0:	mov	x10, #0x18                  	// #24
   365f4:	mul	x9, x10, x9
   365f8:	add	x8, x8, x9
   365fc:	ldr	x8, [x8, #16]
   36600:	ldr	x8, [x8]
   36604:	str	x8, [sp, #16]
   36608:	ldur	x8, [x29, #-16]
   3660c:	ldr	x8, [x8, #40]
   36610:	ldr	x9, [sp, #32]
   36614:	mul	x9, x10, x9
   36618:	add	x8, x8, x9
   3661c:	str	xzr, [x8, #8]
   36620:	ldur	x0, [x29, #-16]
   36624:	ldr	x1, [sp, #16]
   36628:	ldr	w2, [sp, #24]
   3662c:	bl	36fd0 <rpl_re_set_registers@@Base+0xa034>
   36630:	str	x0, [sp, #8]
   36634:	ldr	x8, [sp, #8]
   36638:	mov	x9, #0xffffffffffffffff    	// #-1
   3663c:	cmp	x8, x9
   36640:	b.ne	3671c <rpl_re_set_registers@@Base+0x9780>  // b.any
   36644:	ldur	x0, [x29, #-16]
   36648:	ldr	x1, [sp, #16]
   3664c:	ldr	w2, [sp, #24]
   36650:	bl	36e8c <rpl_re_set_registers@@Base+0x9ef0>
   36654:	str	x0, [sp, #8]
   36658:	ldr	x8, [sp, #8]
   3665c:	mov	x9, #0xffffffffffffffff    	// #-1
   36660:	cmp	x8, x9
   36664:	cset	w10, eq  // eq = none
   36668:	and	w10, w10, #0x1
   3666c:	mov	w0, w10
   36670:	sxtw	x8, w0
   36674:	cbz	x8, 36684 <rpl_re_set_registers@@Base+0x96e8>
   36678:	mov	w8, #0xc                   	// #12
   3667c:	stur	w8, [x29, #-4]
   36680:	b	36838 <rpl_re_set_registers@@Base+0x989c>
   36684:	ldur	x8, [x29, #-16]
   36688:	ldr	x8, [x8, #40]
   3668c:	ldr	x9, [sp, #32]
   36690:	mov	x10, #0x18                  	// #24
   36694:	mul	x9, x10, x9
   36698:	add	x0, x8, x9
   3669c:	ldr	x1, [sp, #8]
   366a0:	bl	36c60 <rpl_re_set_registers@@Base+0x9cc4>
   366a4:	mov	w11, #0x1                   	// #1
   366a8:	and	w11, w0, w11
   366ac:	strb	w11, [sp, #31]
   366b0:	ldrb	w11, [sp, #31]
   366b4:	eor	w11, w11, #0x1
   366b8:	and	w11, w11, #0x1
   366bc:	mov	w1, w11
   366c0:	sxtw	x8, w1
   366c4:	cbz	x8, 366d4 <rpl_re_set_registers@@Base+0x9738>
   366c8:	mov	w8, #0xc                   	// #12
   366cc:	stur	w8, [x29, #-4]
   366d0:	b	36838 <rpl_re_set_registers@@Base+0x989c>
   366d4:	ldur	x0, [x29, #-16]
   366d8:	ldr	x1, [sp, #16]
   366dc:	ldr	x2, [sp, #8]
   366e0:	ldur	x3, [x29, #-40]
   366e4:	ldr	w4, [sp, #24]
   366e8:	bl	362c0 <rpl_re_set_registers@@Base+0x9324>
   366ec:	str	w0, [sp, #4]
   366f0:	ldr	w8, [sp, #4]
   366f4:	cmp	w8, #0x0
   366f8:	cset	w8, ne  // ne = any
   366fc:	and	w8, w8, #0x1
   36700:	mov	w1, w8
   36704:	sxtw	x9, w1
   36708:	cbz	x9, 36718 <rpl_re_set_registers@@Base+0x977c>
   3670c:	ldr	w8, [sp, #4]
   36710:	stur	w8, [x29, #-4]
   36714:	b	36838 <rpl_re_set_registers@@Base+0x989c>
   36718:	b	3676c <rpl_re_set_registers@@Base+0x97d0>
   3671c:	ldur	x8, [x29, #-16]
   36720:	ldr	x8, [x8, #40]
   36724:	ldr	x9, [sp, #32]
   36728:	mov	x10, #0x18                  	// #24
   3672c:	mul	x9, x10, x9
   36730:	add	x0, x8, x9
   36734:	ldr	x1, [sp, #8]
   36738:	bl	36c60 <rpl_re_set_registers@@Base+0x9cc4>
   3673c:	mov	w11, #0x1                   	// #1
   36740:	and	w11, w0, w11
   36744:	strb	w11, [sp, #31]
   36748:	ldrb	w11, [sp, #31]
   3674c:	eor	w11, w11, #0x1
   36750:	and	w11, w11, #0x1
   36754:	mov	w1, w11
   36758:	sxtw	x8, w1
   3675c:	cbz	x8, 3676c <rpl_re_set_registers@@Base+0x97d0>
   36760:	mov	w8, #0xc                   	// #12
   36764:	stur	w8, [x29, #-4]
   36768:	b	36838 <rpl_re_set_registers@@Base+0x989c>
   3676c:	ldur	x8, [x29, #-16]
   36770:	ldr	x8, [x8, #40]
   36774:	ldr	x9, [sp, #40]
   36778:	mov	x10, #0x18                  	// #24
   3677c:	mul	x9, x10, x9
   36780:	add	x8, x8, x9
   36784:	ldr	x8, [x8, #16]
   36788:	ldr	x8, [x8, #8]
   3678c:	str	x8, [sp, #16]
   36790:	ldur	x0, [x29, #-16]
   36794:	ldr	x1, [sp, #16]
   36798:	ldr	w2, [sp, #24]
   3679c:	bl	36e8c <rpl_re_set_registers@@Base+0x9ef0>
   367a0:	str	x0, [sp, #8]
   367a4:	ldr	x8, [sp, #8]
   367a8:	mov	x9, #0xffffffffffffffff    	// #-1
   367ac:	cmp	x8, x9
   367b0:	cset	w11, eq  // eq = none
   367b4:	and	w11, w11, #0x1
   367b8:	mov	w0, w11
   367bc:	sxtw	x8, w0
   367c0:	cbz	x8, 367d0 <rpl_re_set_registers@@Base+0x9834>
   367c4:	mov	w8, #0xc                   	// #12
   367c8:	stur	w8, [x29, #-4]
   367cc:	b	36838 <rpl_re_set_registers@@Base+0x989c>
   367d0:	ldur	x8, [x29, #-16]
   367d4:	ldr	x8, [x8, #40]
   367d8:	ldr	x9, [sp, #32]
   367dc:	mov	x10, #0x18                  	// #24
   367e0:	mul	x9, x10, x9
   367e4:	add	x0, x8, x9
   367e8:	ldr	x1, [sp, #8]
   367ec:	bl	36c60 <rpl_re_set_registers@@Base+0x9cc4>
   367f0:	mov	w11, #0x1                   	// #1
   367f4:	and	w11, w0, w11
   367f8:	strb	w11, [sp, #31]
   367fc:	ldrb	w11, [sp, #31]
   36800:	eor	w11, w11, #0x1
   36804:	and	w11, w11, #0x1
   36808:	mov	w1, w11
   3680c:	sxtw	x8, w1
   36810:	cbz	x8, 36820 <rpl_re_set_registers@@Base+0x9884>
   36814:	mov	w8, #0xc                   	// #12
   36818:	stur	w8, [x29, #-4]
   3681c:	b	36838 <rpl_re_set_registers@@Base+0x989c>
   36820:	ldr	x8, [sp, #16]
   36824:	str	x8, [sp, #40]
   36828:	ldr	x8, [sp, #8]
   3682c:	str	x8, [sp, #32]
   36830:	b	362f8 <rpl_re_set_registers@@Base+0x935c>
   36834:	stur	wzr, [x29, #-4]
   36838:	ldur	w0, [x29, #-4]
   3683c:	ldp	x29, x30, [sp, #96]
   36840:	add	sp, sp, #0x70
   36844:	ret
   36848:	sub	sp, sp, #0x60
   3684c:	stp	x29, x30, [sp, #80]
   36850:	add	x29, sp, #0x50
   36854:	stur	x0, [x29, #-16]
   36858:	stur	x1, [x29, #-24]
   3685c:	ldur	x8, [x29, #-24]
   36860:	cbz	x8, 36870 <rpl_re_set_registers@@Base+0x98d4>
   36864:	ldur	x8, [x29, #-24]
   36868:	ldr	x8, [x8, #8]
   3686c:	cbnz	x8, 36878 <rpl_re_set_registers@@Base+0x98dc>
   36870:	stur	wzr, [x29, #-4]
   36874:	b	36c50 <rpl_re_set_registers@@Base+0x9cb4>
   36878:	ldur	x8, [x29, #-16]
   3687c:	ldr	x8, [x8]
   36880:	ldur	x9, [x29, #-24]
   36884:	ldr	x9, [x9, #8]
   36888:	mov	x10, #0x2                   	// #2
   3688c:	mul	x9, x10, x9
   36890:	ldur	x10, [x29, #-16]
   36894:	ldr	x10, [x10, #8]
   36898:	add	x9, x9, x10
   3689c:	cmp	x8, x9
   368a0:	b.ge	36920 <rpl_re_set_registers@@Base+0x9984>  // b.tcont
   368a4:	ldur	x8, [x29, #-24]
   368a8:	ldr	x8, [x8, #8]
   368ac:	ldur	x9, [x29, #-16]
   368b0:	ldr	x9, [x9]
   368b4:	add	x8, x8, x9
   368b8:	mov	x9, #0x2                   	// #2
   368bc:	mul	x8, x9, x8
   368c0:	str	x8, [sp, #16]
   368c4:	ldur	x8, [x29, #-16]
   368c8:	ldr	x0, [x8, #16]
   368cc:	ldr	x8, [sp, #16]
   368d0:	mov	x9, #0x8                   	// #8
   368d4:	mul	x1, x8, x9
   368d8:	bl	af40 <realloc@plt>
   368dc:	str	x0, [sp, #8]
   368e0:	ldr	x8, [sp, #8]
   368e4:	cmp	x8, #0x0
   368e8:	cset	w10, eq  // eq = none
   368ec:	and	w10, w10, #0x1
   368f0:	mov	w0, w10
   368f4:	sxtw	x8, w0
   368f8:	cbz	x8, 36908 <rpl_re_set_registers@@Base+0x996c>
   368fc:	mov	w8, #0xc                   	// #12
   36900:	stur	w8, [x29, #-4]
   36904:	b	36c50 <rpl_re_set_registers@@Base+0x9cb4>
   36908:	ldr	x8, [sp, #8]
   3690c:	ldur	x9, [x29, #-16]
   36910:	str	x8, [x9, #16]
   36914:	ldr	x8, [sp, #16]
   36918:	ldur	x9, [x29, #-16]
   3691c:	str	x8, [x9]
   36920:	ldur	x8, [x29, #-16]
   36924:	ldr	x8, [x8, #8]
   36928:	cmp	x8, #0x0
   3692c:	cset	w9, eq  // eq = none
   36930:	and	w9, w9, #0x1
   36934:	mov	w0, w9
   36938:	sxtw	x8, w0
   3693c:	cbz	x8, 3697c <rpl_re_set_registers@@Base+0x99e0>
   36940:	ldur	x8, [x29, #-24]
   36944:	ldr	x8, [x8, #8]
   36948:	ldur	x9, [x29, #-16]
   3694c:	str	x8, [x9, #8]
   36950:	ldur	x8, [x29, #-16]
   36954:	ldr	x0, [x8, #16]
   36958:	ldur	x8, [x29, #-24]
   3695c:	ldr	x1, [x8, #16]
   36960:	ldur	x8, [x29, #-24]
   36964:	ldr	x8, [x8, #8]
   36968:	mov	x9, #0x8                   	// #8
   3696c:	mul	x2, x8, x9
   36970:	bl	af30 <memcpy@plt>
   36974:	stur	wzr, [x29, #-4]
   36978:	b	36c50 <rpl_re_set_registers@@Base+0x9cb4>
   3697c:	ldur	x8, [x29, #-16]
   36980:	ldr	x8, [x8, #8]
   36984:	ldur	x9, [x29, #-24]
   36988:	ldr	x9, [x9, #8]
   3698c:	mov	x10, #0x2                   	// #2
   36990:	mul	x9, x10, x9
   36994:	add	x8, x8, x9
   36998:	str	x8, [sp, #32]
   3699c:	ldur	x8, [x29, #-24]
   369a0:	ldr	x8, [x8, #8]
   369a4:	subs	x8, x8, #0x1
   369a8:	stur	x8, [x29, #-32]
   369ac:	ldur	x8, [x29, #-16]
   369b0:	ldr	x8, [x8, #8]
   369b4:	subs	x8, x8, #0x1
   369b8:	str	x8, [sp, #40]
   369bc:	ldur	x8, [x29, #-32]
   369c0:	cmp	x8, #0x0
   369c4:	cset	w9, lt  // lt = tstop
   369c8:	mov	w10, #0x0                   	// #0
   369cc:	str	w10, [sp, #4]
   369d0:	tbnz	w9, #0, 369e4 <rpl_re_set_registers@@Base+0x9a48>
   369d4:	ldr	x8, [sp, #40]
   369d8:	cmp	x8, #0x0
   369dc:	cset	w9, ge  // ge = tcont
   369e0:	str	w9, [sp, #4]
   369e4:	ldr	w8, [sp, #4]
   369e8:	tbnz	w8, #0, 369f0 <rpl_re_set_registers@@Base+0x9a54>
   369ec:	b	36aa0 <rpl_re_set_registers@@Base+0x9b04>
   369f0:	ldur	x8, [x29, #-16]
   369f4:	ldr	x8, [x8, #16]
   369f8:	ldr	x9, [sp, #40]
   369fc:	ldr	x8, [x8, x9, lsl #3]
   36a00:	ldur	x9, [x29, #-24]
   36a04:	ldr	x9, [x9, #16]
   36a08:	ldur	x10, [x29, #-32]
   36a0c:	ldr	x9, [x9, x10, lsl #3]
   36a10:	cmp	x8, x9
   36a14:	b.ne	36a34 <rpl_re_set_registers@@Base+0x9a98>  // b.any
   36a18:	ldur	x8, [x29, #-32]
   36a1c:	subs	x8, x8, #0x1
   36a20:	stur	x8, [x29, #-32]
   36a24:	ldr	x8, [sp, #40]
   36a28:	subs	x8, x8, #0x1
   36a2c:	str	x8, [sp, #40]
   36a30:	b	36a9c <rpl_re_set_registers@@Base+0x9b00>
   36a34:	ldur	x8, [x29, #-16]
   36a38:	ldr	x8, [x8, #16]
   36a3c:	ldr	x9, [sp, #40]
   36a40:	ldr	x8, [x8, x9, lsl #3]
   36a44:	ldur	x9, [x29, #-24]
   36a48:	ldr	x9, [x9, #16]
   36a4c:	ldur	x10, [x29, #-32]
   36a50:	ldr	x9, [x9, x10, lsl #3]
   36a54:	cmp	x8, x9
   36a58:	b.ge	36a90 <rpl_re_set_registers@@Base+0x9af4>  // b.tcont
   36a5c:	ldur	x8, [x29, #-24]
   36a60:	ldr	x8, [x8, #16]
   36a64:	ldur	x9, [x29, #-32]
   36a68:	subs	x10, x9, #0x1
   36a6c:	stur	x10, [x29, #-32]
   36a70:	ldr	x8, [x8, x9, lsl #3]
   36a74:	ldur	x9, [x29, #-16]
   36a78:	ldr	x9, [x9, #16]
   36a7c:	ldr	x10, [sp, #32]
   36a80:	subs	x10, x10, #0x1
   36a84:	str	x10, [sp, #32]
   36a88:	str	x8, [x9, x10, lsl #3]
   36a8c:	b	36a9c <rpl_re_set_registers@@Base+0x9b00>
   36a90:	ldr	x8, [sp, #40]
   36a94:	subs	x8, x8, #0x1
   36a98:	str	x8, [sp, #40]
   36a9c:	b	369bc <rpl_re_set_registers@@Base+0x9a20>
   36aa0:	ldur	x8, [x29, #-32]
   36aa4:	cmp	x8, #0x0
   36aa8:	cset	w9, lt  // lt = tstop
   36aac:	tbnz	w9, #0, 36af8 <rpl_re_set_registers@@Base+0x9b5c>
   36ab0:	ldur	x8, [x29, #-32]
   36ab4:	add	x8, x8, #0x1
   36ab8:	ldr	x9, [sp, #32]
   36abc:	subs	x8, x9, x8
   36ac0:	str	x8, [sp, #32]
   36ac4:	ldur	x8, [x29, #-16]
   36ac8:	ldr	x8, [x8, #16]
   36acc:	ldr	x9, [sp, #32]
   36ad0:	mov	x10, #0x8                   	// #8
   36ad4:	mul	x9, x10, x9
   36ad8:	add	x0, x8, x9
   36adc:	ldur	x8, [x29, #-24]
   36ae0:	ldr	x1, [x8, #16]
   36ae4:	ldur	x8, [x29, #-32]
   36ae8:	add	x8, x8, #0x1
   36aec:	mov	x9, #0x8                   	// #8
   36af0:	mul	x2, x8, x9
   36af4:	bl	af30 <memcpy@plt>
   36af8:	ldur	x8, [x29, #-16]
   36afc:	ldr	x8, [x8, #8]
   36b00:	subs	x8, x8, #0x1
   36b04:	str	x8, [sp, #40]
   36b08:	ldur	x8, [x29, #-16]
   36b0c:	ldr	x8, [x8, #8]
   36b10:	ldur	x9, [x29, #-24]
   36b14:	ldr	x9, [x9, #8]
   36b18:	mov	x10, #0x2                   	// #2
   36b1c:	mul	x9, x10, x9
   36b20:	add	x8, x8, x9
   36b24:	subs	x8, x8, #0x1
   36b28:	stur	x8, [x29, #-32]
   36b2c:	ldur	x8, [x29, #-32]
   36b30:	ldr	x9, [sp, #32]
   36b34:	subs	x8, x8, x9
   36b38:	add	x8, x8, #0x1
   36b3c:	str	x8, [sp, #24]
   36b40:	ldr	x8, [sp, #24]
   36b44:	cbnz	x8, 36b50 <rpl_re_set_registers@@Base+0x9bb4>
   36b48:	stur	wzr, [x29, #-4]
   36b4c:	b	36c50 <rpl_re_set_registers@@Base+0x9cb4>
   36b50:	ldr	x8, [sp, #24]
   36b54:	ldur	x9, [x29, #-16]
   36b58:	ldr	x10, [x9, #8]
   36b5c:	add	x8, x10, x8
   36b60:	str	x8, [x9, #8]
   36b64:	ldur	x8, [x29, #-16]
   36b68:	ldr	x8, [x8, #16]
   36b6c:	ldur	x9, [x29, #-32]
   36b70:	ldr	x8, [x8, x9, lsl #3]
   36b74:	ldur	x9, [x29, #-16]
   36b78:	ldr	x9, [x9, #16]
   36b7c:	ldr	x10, [sp, #40]
   36b80:	ldr	x9, [x9, x10, lsl #3]
   36b84:	cmp	x8, x9
   36b88:	b.le	36bd4 <rpl_re_set_registers@@Base+0x9c38>
   36b8c:	ldur	x8, [x29, #-16]
   36b90:	ldr	x8, [x8, #16]
   36b94:	ldur	x9, [x29, #-32]
   36b98:	subs	x10, x9, #0x1
   36b9c:	stur	x10, [x29, #-32]
   36ba0:	ldr	x8, [x8, x9, lsl #3]
   36ba4:	ldur	x9, [x29, #-16]
   36ba8:	ldr	x9, [x9, #16]
   36bac:	ldr	x10, [sp, #40]
   36bb0:	ldr	x11, [sp, #24]
   36bb4:	subs	x12, x11, #0x1
   36bb8:	str	x12, [sp, #24]
   36bbc:	add	x10, x10, x11
   36bc0:	str	x8, [x9, x10, lsl #3]
   36bc4:	ldr	x8, [sp, #24]
   36bc8:	cbnz	x8, 36bd0 <rpl_re_set_registers@@Base+0x9c34>
   36bcc:	b	36c4c <rpl_re_set_registers@@Base+0x9cb0>
   36bd0:	b	36c48 <rpl_re_set_registers@@Base+0x9cac>
   36bd4:	ldur	x8, [x29, #-16]
   36bd8:	ldr	x8, [x8, #16]
   36bdc:	ldr	x9, [sp, #40]
   36be0:	ldr	x8, [x8, x9, lsl #3]
   36be4:	ldur	x9, [x29, #-16]
   36be8:	ldr	x9, [x9, #16]
   36bec:	ldr	x10, [sp, #40]
   36bf0:	ldr	x11, [sp, #24]
   36bf4:	add	x10, x10, x11
   36bf8:	str	x8, [x9, x10, lsl #3]
   36bfc:	ldr	x8, [sp, #40]
   36c00:	subs	x8, x8, #0x1
   36c04:	str	x8, [sp, #40]
   36c08:	cmp	x8, #0x0
   36c0c:	cset	w12, ge  // ge = tcont
   36c10:	tbnz	w12, #0, 36c48 <rpl_re_set_registers@@Base+0x9cac>
   36c14:	ldur	x8, [x29, #-16]
   36c18:	ldr	x0, [x8, #16]
   36c1c:	ldur	x8, [x29, #-16]
   36c20:	ldr	x8, [x8, #16]
   36c24:	ldr	x9, [sp, #32]
   36c28:	mov	x10, #0x8                   	// #8
   36c2c:	mul	x9, x10, x9
   36c30:	add	x1, x8, x9
   36c34:	ldr	x8, [sp, #24]
   36c38:	mov	x9, #0x8                   	// #8
   36c3c:	mul	x2, x8, x9
   36c40:	bl	af30 <memcpy@plt>
   36c44:	b	36c4c <rpl_re_set_registers@@Base+0x9cb0>
   36c48:	b	36b64 <rpl_re_set_registers@@Base+0x9bc8>
   36c4c:	stur	wzr, [x29, #-4]
   36c50:	ldur	w0, [x29, #-4]
   36c54:	ldp	x29, x30, [sp, #80]
   36c58:	add	sp, sp, #0x60
   36c5c:	ret
   36c60:	sub	sp, sp, #0x40
   36c64:	stp	x29, x30, [sp, #48]
   36c68:	add	x29, sp, #0x30
   36c6c:	stur	x0, [x29, #-16]
   36c70:	str	x1, [sp, #24]
   36c74:	ldur	x8, [x29, #-16]
   36c78:	ldr	x8, [x8]
   36c7c:	cbnz	x8, 36cb8 <rpl_re_set_registers@@Base+0x9d1c>
   36c80:	ldur	x0, [x29, #-16]
   36c84:	ldr	x1, [sp, #24]
   36c88:	bl	35d90 <rpl_re_set_registers@@Base+0x8df4>
   36c8c:	cmp	w0, #0x0
   36c90:	cset	w8, eq  // eq = none
   36c94:	mov	w9, #0x1                   	// #1
   36c98:	and	w8, w8, #0x1
   36c9c:	mov	w1, w8
   36ca0:	sxtw	x10, w1
   36ca4:	cmp	x10, #0x0
   36ca8:	cset	w8, ne  // ne = any
   36cac:	and	w8, w8, w9
   36cb0:	sturb	w8, [x29, #-1]
   36cb4:	b	36e78 <rpl_re_set_registers@@Base+0x9edc>
   36cb8:	ldur	x8, [x29, #-16]
   36cbc:	ldr	x8, [x8, #8]
   36cc0:	cbnz	x8, 36cf4 <rpl_re_set_registers@@Base+0x9d58>
   36cc4:	ldr	x8, [sp, #24]
   36cc8:	ldur	x9, [x29, #-16]
   36ccc:	ldr	x9, [x9, #16]
   36cd0:	str	x8, [x9]
   36cd4:	ldur	x8, [x29, #-16]
   36cd8:	ldr	x9, [x8, #8]
   36cdc:	add	x9, x9, #0x1
   36ce0:	str	x9, [x8, #8]
   36ce4:	mov	w10, #0x1                   	// #1
   36ce8:	and	w10, w10, #0x1
   36cec:	sturb	w10, [x29, #-1]
   36cf0:	b	36e78 <rpl_re_set_registers@@Base+0x9edc>
   36cf4:	ldur	x8, [x29, #-16]
   36cf8:	ldr	x8, [x8]
   36cfc:	ldur	x9, [x29, #-16]
   36d00:	ldr	x9, [x9, #8]
   36d04:	cmp	x8, x9
   36d08:	b.ne	36d7c <rpl_re_set_registers@@Base+0x9de0>  // b.any
   36d0c:	ldur	x8, [x29, #-16]
   36d10:	ldr	x8, [x8]
   36d14:	mov	x9, #0x2                   	// #2
   36d18:	mul	x8, x8, x9
   36d1c:	ldur	x9, [x29, #-16]
   36d20:	str	x8, [x9]
   36d24:	ldur	x8, [x29, #-16]
   36d28:	ldr	x0, [x8, #16]
   36d2c:	ldur	x8, [x29, #-16]
   36d30:	ldr	x8, [x8]
   36d34:	mov	x9, #0x8                   	// #8
   36d38:	mul	x1, x8, x9
   36d3c:	bl	af40 <realloc@plt>
   36d40:	str	x0, [sp, #8]
   36d44:	ldr	x8, [sp, #8]
   36d48:	cmp	x8, #0x0
   36d4c:	cset	w10, eq  // eq = none
   36d50:	and	w10, w10, #0x1
   36d54:	mov	w0, w10
   36d58:	sxtw	x8, w0
   36d5c:	cbz	x8, 36d70 <rpl_re_set_registers@@Base+0x9dd4>
   36d60:	mov	w8, wzr
   36d64:	and	w8, w8, #0x1
   36d68:	sturb	w8, [x29, #-1]
   36d6c:	b	36e78 <rpl_re_set_registers@@Base+0x9edc>
   36d70:	ldr	x8, [sp, #8]
   36d74:	ldur	x9, [x29, #-16]
   36d78:	str	x8, [x9, #16]
   36d7c:	ldr	x8, [sp, #24]
   36d80:	ldur	x9, [x29, #-16]
   36d84:	ldr	x9, [x9, #16]
   36d88:	ldr	x9, [x9]
   36d8c:	cmp	x8, x9
   36d90:	b.ge	36de8 <rpl_re_set_registers@@Base+0x9e4c>  // b.tcont
   36d94:	ldur	x8, [x29, #-16]
   36d98:	ldr	x8, [x8, #8]
   36d9c:	str	x8, [sp, #16]
   36da0:	ldr	x8, [sp, #16]
   36da4:	cmp	x8, #0x0
   36da8:	cset	w9, le
   36dac:	tbnz	w9, #0, 36de4 <rpl_re_set_registers@@Base+0x9e48>
   36db0:	ldur	x8, [x29, #-16]
   36db4:	ldr	x8, [x8, #16]
   36db8:	ldr	x9, [sp, #16]
   36dbc:	subs	x9, x9, #0x1
   36dc0:	ldr	x8, [x8, x9, lsl #3]
   36dc4:	ldur	x9, [x29, #-16]
   36dc8:	ldr	x9, [x9, #16]
   36dcc:	ldr	x10, [sp, #16]
   36dd0:	str	x8, [x9, x10, lsl #3]
   36dd4:	ldr	x8, [sp, #16]
   36dd8:	subs	x8, x8, #0x1
   36ddc:	str	x8, [sp, #16]
   36de0:	b	36da0 <rpl_re_set_registers@@Base+0x9e04>
   36de4:	b	36e48 <rpl_re_set_registers@@Base+0x9eac>
   36de8:	ldur	x8, [x29, #-16]
   36dec:	ldr	x8, [x8, #8]
   36df0:	str	x8, [sp, #16]
   36df4:	ldur	x8, [x29, #-16]
   36df8:	ldr	x8, [x8, #16]
   36dfc:	ldr	x9, [sp, #16]
   36e00:	subs	x9, x9, #0x1
   36e04:	ldr	x8, [x8, x9, lsl #3]
   36e08:	ldr	x9, [sp, #24]
   36e0c:	cmp	x8, x9
   36e10:	b.le	36e48 <rpl_re_set_registers@@Base+0x9eac>
   36e14:	ldur	x8, [x29, #-16]
   36e18:	ldr	x8, [x8, #16]
   36e1c:	ldr	x9, [sp, #16]
   36e20:	subs	x9, x9, #0x1
   36e24:	ldr	x8, [x8, x9, lsl #3]
   36e28:	ldur	x9, [x29, #-16]
   36e2c:	ldr	x9, [x9, #16]
   36e30:	ldr	x10, [sp, #16]
   36e34:	str	x8, [x9, x10, lsl #3]
   36e38:	ldr	x8, [sp, #16]
   36e3c:	subs	x8, x8, #0x1
   36e40:	str	x8, [sp, #16]
   36e44:	b	36df4 <rpl_re_set_registers@@Base+0x9e58>
   36e48:	ldr	x8, [sp, #24]
   36e4c:	ldur	x9, [x29, #-16]
   36e50:	ldr	x9, [x9, #16]
   36e54:	ldr	x10, [sp, #16]
   36e58:	str	x8, [x9, x10, lsl #3]
   36e5c:	ldur	x8, [x29, #-16]
   36e60:	ldr	x9, [x8, #8]
   36e64:	add	x9, x9, #0x1
   36e68:	str	x9, [x8, #8]
   36e6c:	mov	w11, #0x1                   	// #1
   36e70:	and	w11, w11, #0x1
   36e74:	sturb	w11, [x29, #-1]
   36e78:	ldurb	w8, [x29, #-1]
   36e7c:	and	w0, w8, #0x1
   36e80:	ldp	x29, x30, [sp, #48]
   36e84:	add	sp, sp, #0x40
   36e88:	ret
   36e8c:	sub	sp, sp, #0x40
   36e90:	stp	x29, x30, [sp, #48]
   36e94:	add	x29, sp, #0x30
   36e98:	mov	x8, #0xffffffffffffffff    	// #-1
   36e9c:	stur	x0, [x29, #-8]
   36ea0:	stur	x1, [x29, #-16]
   36ea4:	stur	w2, [x29, #-20]
   36ea8:	ldur	x0, [x29, #-8]
   36eac:	ldur	x9, [x29, #-8]
   36eb0:	ldr	x9, [x9]
   36eb4:	ldur	x10, [x29, #-16]
   36eb8:	mov	x11, #0x10                  	// #16
   36ebc:	mul	x10, x11, x10
   36ec0:	add	x9, x9, x10
   36ec4:	ldr	x1, [x9]
   36ec8:	ldr	x2, [x9, #8]
   36ecc:	str	x8, [sp, #8]
   36ed0:	bl	3593c <rpl_re_set_registers@@Base+0x89a0>
   36ed4:	str	x0, [sp, #16]
   36ed8:	ldr	x8, [sp, #16]
   36edc:	ldr	x9, [sp, #8]
   36ee0:	cmp	x8, x9
   36ee4:	cset	w12, ne  // ne = any
   36ee8:	and	w12, w12, #0x1
   36eec:	mov	w0, w12
   36ef0:	sxtw	x8, w0
   36ef4:	cbz	x8, 36fc0 <rpl_re_set_registers@@Base+0xa024>
   36ef8:	ldur	w8, [x29, #-20]
   36efc:	ldur	x9, [x29, #-8]
   36f00:	ldr	x9, [x9]
   36f04:	ldr	x10, [sp, #16]
   36f08:	mov	x11, #0x10                  	// #16
   36f0c:	mul	x10, x11, x10
   36f10:	add	x9, x9, x10
   36f14:	mov	x10, #0x8                   	// #8
   36f18:	ldr	w12, [x9, #8]
   36f1c:	and	w8, w8, #0x3ff
   36f20:	and	w12, w12, #0xfffc00ff
   36f24:	orr	w8, w12, w8, lsl #8
   36f28:	str	w8, [x9, #8]
   36f2c:	ldur	x9, [x29, #-8]
   36f30:	ldr	x9, [x9]
   36f34:	ldur	x13, [x29, #-16]
   36f38:	mul	x13, x11, x13
   36f3c:	add	x9, x9, x13
   36f40:	ldr	w8, [x9, #8]
   36f44:	mov	x0, x10
   36f48:	lsr	w8, w8, w0
   36f4c:	and	w8, w8, #0x3ff
   36f50:	ldur	x9, [x29, #-8]
   36f54:	ldr	x9, [x9]
   36f58:	ldr	x13, [sp, #16]
   36f5c:	mul	x13, x11, x13
   36f60:	add	x9, x9, x13
   36f64:	ldr	w12, [x9, #8]
   36f68:	lsr	w10, w12, w10
   36f6c:	and	w10, w10, #0x3ff
   36f70:	orr	w8, w10, w8
   36f74:	ldr	w10, [x9, #8]
   36f78:	and	w8, w8, #0x3ff
   36f7c:	and	w10, w10, #0xfffc00ff
   36f80:	orr	w8, w10, w8, lsl #8
   36f84:	str	w8, [x9, #8]
   36f88:	ldur	x9, [x29, #-8]
   36f8c:	ldr	x9, [x9]
   36f90:	ldr	x13, [sp, #16]
   36f94:	mul	x11, x11, x13
   36f98:	add	x9, x9, x11
   36f9c:	ldr	w8, [x9, #8]
   36fa0:	and	w8, w8, #0xfffbffff
   36fa4:	orr	w8, w8, #0x40000
   36fa8:	str	w8, [x9, #8]
   36fac:	ldur	x9, [x29, #-16]
   36fb0:	ldur	x11, [x29, #-8]
   36fb4:	ldr	x11, [x11, #32]
   36fb8:	ldr	x13, [sp, #16]
   36fbc:	str	x9, [x11, x13, lsl #3]
   36fc0:	ldr	x0, [sp, #16]
   36fc4:	ldp	x29, x30, [sp, #48]
   36fc8:	add	sp, sp, #0x40
   36fcc:	ret
   36fd0:	sub	sp, sp, #0x30
   36fd4:	str	x0, [sp, #32]
   36fd8:	str	x1, [sp, #24]
   36fdc:	str	w2, [sp, #20]
   36fe0:	ldr	x8, [sp, #32]
   36fe4:	ldr	x8, [x8, #16]
   36fe8:	subs	x8, x8, #0x1
   36fec:	str	x8, [sp, #8]
   36ff0:	ldr	x8, [sp, #32]
   36ff4:	ldr	x8, [x8]
   36ff8:	ldr	x9, [sp, #8]
   36ffc:	mov	x10, #0x10                  	// #16
   37000:	mul	x9, x10, x9
   37004:	add	x8, x8, x9
   37008:	ldr	w11, [x8, #8]
   3700c:	lsr	w11, w11, #18
   37010:	and	w11, w11, #0x1
   37014:	mov	w12, #0x0                   	// #0
   37018:	str	w12, [sp, #4]
   3701c:	cbz	w11, 37030 <rpl_re_set_registers@@Base+0xa094>
   37020:	ldr	x8, [sp, #8]
   37024:	cmp	x8, #0x0
   37028:	cset	w9, gt
   3702c:	str	w9, [sp, #4]
   37030:	ldr	w8, [sp, #4]
   37034:	tbnz	w8, #0, 3703c <rpl_re_set_registers@@Base+0xa0a0>
   37038:	b	370a8 <rpl_re_set_registers@@Base+0xa10c>
   3703c:	ldr	x8, [sp, #24]
   37040:	ldr	x9, [sp, #32]
   37044:	ldr	x9, [x9, #32]
   37048:	ldr	x10, [sp, #8]
   3704c:	ldr	x9, [x9, x10, lsl #3]
   37050:	cmp	x8, x9
   37054:	b.ne	37098 <rpl_re_set_registers@@Base+0xa0fc>  // b.any
   37058:	ldr	w8, [sp, #20]
   3705c:	ldr	x9, [sp, #32]
   37060:	ldr	x9, [x9]
   37064:	ldr	x10, [sp, #8]
   37068:	mov	x11, #0x10                  	// #16
   3706c:	mul	x10, x11, x10
   37070:	add	x9, x9, x10
   37074:	mov	x10, #0x8                   	// #8
   37078:	ldr	w12, [x9, #8]
   3707c:	lsr	w10, w12, w10
   37080:	and	w10, w10, #0x3ff
   37084:	cmp	w8, w10
   37088:	b.ne	37098 <rpl_re_set_registers@@Base+0xa0fc>  // b.any
   3708c:	ldr	x8, [sp, #8]
   37090:	str	x8, [sp, #40]
   37094:	b	370b0 <rpl_re_set_registers@@Base+0xa114>
   37098:	ldr	x8, [sp, #8]
   3709c:	subs	x8, x8, #0x1
   370a0:	str	x8, [sp, #8]
   370a4:	b	36ff0 <rpl_re_set_registers@@Base+0xa054>
   370a8:	mov	x8, #0xffffffffffffffff    	// #-1
   370ac:	str	x8, [sp, #40]
   370b0:	ldr	x0, [sp, #40]
   370b4:	add	sp, sp, #0x30
   370b8:	ret
   370bc:	sub	sp, sp, #0x30
   370c0:	stp	x29, x30, [sp, #32]
   370c4:	add	x29, sp, #0x20
   370c8:	str	x0, [sp, #16]
   370cc:	str	x1, [sp, #8]
   370d0:	ldr	x8, [sp, #16]
   370d4:	ldr	x8, [x8]
   370d8:	ldr	x9, [sp, #16]
   370dc:	ldr	x9, [x9, #8]
   370e0:	cmp	x8, x9
   370e4:	b.ne	3715c <rpl_re_set_registers@@Base+0xa1c0>  // b.any
   370e8:	ldr	x8, [sp, #16]
   370ec:	ldr	x8, [x8]
   370f0:	add	x8, x8, #0x1
   370f4:	mov	x9, #0x2                   	// #2
   370f8:	mul	x8, x8, x9
   370fc:	ldr	x9, [sp, #16]
   37100:	str	x8, [x9]
   37104:	ldr	x8, [sp, #16]
   37108:	ldr	x0, [x8, #16]
   3710c:	ldr	x8, [sp, #16]
   37110:	ldr	x8, [x8]
   37114:	mov	x9, #0x8                   	// #8
   37118:	mul	x1, x8, x9
   3711c:	bl	af40 <realloc@plt>
   37120:	str	x0, [sp]
   37124:	ldr	x8, [sp]
   37128:	cmp	x8, #0x0
   3712c:	cset	w10, eq  // eq = none
   37130:	and	w10, w10, #0x1
   37134:	mov	w0, w10
   37138:	sxtw	x8, w0
   3713c:	cbz	x8, 37150 <rpl_re_set_registers@@Base+0xa1b4>
   37140:	mov	w8, wzr
   37144:	and	w8, w8, #0x1
   37148:	sturb	w8, [x29, #-1]
   3714c:	b	37188 <rpl_re_set_registers@@Base+0xa1ec>
   37150:	ldr	x8, [sp]
   37154:	ldr	x9, [sp, #16]
   37158:	str	x8, [x9, #16]
   3715c:	ldr	x8, [sp, #8]
   37160:	ldr	x9, [sp, #16]
   37164:	ldr	x9, [x9, #16]
   37168:	ldr	x10, [sp, #16]
   3716c:	ldr	x11, [x10, #8]
   37170:	add	x12, x11, #0x1
   37174:	str	x12, [x10, #8]
   37178:	str	x8, [x9, x11, lsl #3]
   3717c:	mov	w13, #0x1                   	// #1
   37180:	and	w13, w13, #0x1
   37184:	sturb	w13, [x29, #-1]
   37188:	ldurb	w8, [x29, #-1]
   3718c:	and	w0, w8, #0x1
   37190:	ldp	x29, x30, [sp, #32]
   37194:	add	sp, sp, #0x30
   37198:	ret
   3719c:	sub	sp, sp, #0x30
   371a0:	stp	x29, x30, [sp, #32]
   371a4:	add	x29, sp, #0x20
   371a8:	str	x0, [sp, #16]
   371ac:	str	x1, [sp, #8]
   371b0:	ldr	x8, [sp, #8]
   371b4:	ldr	x8, [x8, #8]
   371b8:	ldr	x9, [sp, #16]
   371bc:	str	x8, [x9, #8]
   371c0:	ldr	x8, [sp, #8]
   371c4:	ldr	x8, [x8, #8]
   371c8:	cmp	x8, #0x0
   371cc:	cset	w10, le
   371d0:	tbnz	w10, #0, 37264 <rpl_re_set_registers@@Base+0xa2c8>
   371d4:	ldr	x8, [sp, #16]
   371d8:	ldr	x8, [x8, #8]
   371dc:	ldr	x9, [sp, #16]
   371e0:	str	x8, [x9]
   371e4:	ldr	x8, [sp, #16]
   371e8:	ldr	x8, [x8]
   371ec:	mov	x9, #0x8                   	// #8
   371f0:	mul	x0, x8, x9
   371f4:	bl	af10 <malloc@plt>
   371f8:	ldr	x8, [sp, #16]
   371fc:	str	x0, [x8, #16]
   37200:	ldr	x8, [sp, #16]
   37204:	ldr	x8, [x8, #16]
   37208:	cmp	x8, #0x0
   3720c:	cset	w10, eq  // eq = none
   37210:	and	w10, w10, #0x1
   37214:	mov	w0, w10
   37218:	sxtw	x8, w0
   3721c:	cbz	x8, 3723c <rpl_re_set_registers@@Base+0xa2a0>
   37220:	ldr	x8, [sp, #16]
   37224:	str	xzr, [x8, #8]
   37228:	ldr	x8, [sp, #16]
   3722c:	str	xzr, [x8]
   37230:	mov	w9, #0xc                   	// #12
   37234:	stur	w9, [x29, #-4]
   37238:	b	37278 <rpl_re_set_registers@@Base+0xa2dc>
   3723c:	ldr	x8, [sp, #16]
   37240:	ldr	x0, [x8, #16]
   37244:	ldr	x8, [sp, #8]
   37248:	ldr	x1, [x8, #16]
   3724c:	ldr	x8, [sp, #8]
   37250:	ldr	x8, [x8, #8]
   37254:	mov	x9, #0x8                   	// #8
   37258:	mul	x2, x8, x9
   3725c:	bl	af30 <memcpy@plt>
   37260:	b	37274 <rpl_re_set_registers@@Base+0xa2d8>
   37264:	ldr	x8, [sp, #16]
   37268:	str	xzr, [x8]
   3726c:	str	xzr, [x8, #8]
   37270:	str	xzr, [x8, #16]
   37274:	stur	wzr, [x29, #-4]
   37278:	ldur	w0, [x29, #-4]
   3727c:	ldp	x29, x30, [sp, #32]
   37280:	add	sp, sp, #0x30
   37284:	ret
   37288:	sub	sp, sp, #0x40
   3728c:	str	x0, [sp, #48]
   37290:	str	x1, [sp, #40]
   37294:	ldr	x8, [sp, #48]
   37298:	ldr	x8, [x8, #8]
   3729c:	cmp	x8, #0x0
   372a0:	cset	w9, gt
   372a4:	tbnz	w9, #0, 372b0 <rpl_re_set_registers@@Base+0xa314>
   372a8:	str	xzr, [sp, #56]
   372ac:	b	37360 <rpl_re_set_registers@@Base+0xa3c4>
   372b0:	str	xzr, [sp, #32]
   372b4:	ldr	x8, [sp, #48]
   372b8:	ldr	x8, [x8, #8]
   372bc:	subs	x8, x8, #0x1
   372c0:	str	x8, [sp, #24]
   372c4:	ldr	x8, [sp, #32]
   372c8:	ldr	x9, [sp, #24]
   372cc:	cmp	x8, x9
   372d0:	b.cs	37324 <rpl_re_set_registers@@Base+0xa388>  // b.hs, b.nlast
   372d4:	ldr	x8, [sp, #32]
   372d8:	ldr	x9, [sp, #24]
   372dc:	add	x8, x8, x9
   372e0:	mov	x9, #0x2                   	// #2
   372e4:	udiv	x8, x8, x9
   372e8:	str	x8, [sp, #16]
   372ec:	ldr	x8, [sp, #48]
   372f0:	ldr	x8, [x8, #16]
   372f4:	ldr	x9, [sp, #16]
   372f8:	ldr	x8, [x8, x9, lsl #3]
   372fc:	ldr	x9, [sp, #40]
   37300:	cmp	x8, x9
   37304:	b.ge	37318 <rpl_re_set_registers@@Base+0xa37c>  // b.tcont
   37308:	ldr	x8, [sp, #16]
   3730c:	add	x8, x8, #0x1
   37310:	str	x8, [sp, #32]
   37314:	b	37320 <rpl_re_set_registers@@Base+0xa384>
   37318:	ldr	x8, [sp, #16]
   3731c:	str	x8, [sp, #24]
   37320:	b	372c4 <rpl_re_set_registers@@Base+0xa328>
   37324:	ldr	x8, [sp, #48]
   37328:	ldr	x8, [x8, #16]
   3732c:	ldr	x9, [sp, #32]
   37330:	ldr	x8, [x8, x9, lsl #3]
   37334:	ldr	x9, [sp, #40]
   37338:	cmp	x8, x9
   3733c:	b.ne	37350 <rpl_re_set_registers@@Base+0xa3b4>  // b.any
   37340:	ldr	x8, [sp, #32]
   37344:	add	x8, x8, #0x1
   37348:	str	x8, [sp, #8]
   3734c:	b	37358 <rpl_re_set_registers@@Base+0xa3bc>
   37350:	mov	x8, xzr
   37354:	str	x8, [sp, #8]
   37358:	ldr	x8, [sp, #8]
   3735c:	str	x8, [sp, #56]
   37360:	ldr	x0, [sp, #56]
   37364:	add	sp, sp, #0x40
   37368:	ret
   3736c:	sub	sp, sp, #0x60
   37370:	stp	x29, x30, [sp, #80]
   37374:	add	x29, sp, #0x50
   37378:	stur	x0, [x29, #-16]
   3737c:	stur	x1, [x29, #-24]
   37380:	stur	x2, [x29, #-32]
   37384:	stur	w3, [x29, #-36]
   37388:	ldur	x8, [x29, #-32]
   3738c:	ldr	x8, [x8, #8]
   37390:	cbnz	x8, 373a8 <rpl_re_set_registers@@Base+0xa40c>
   37394:	ldur	x8, [x29, #-16]
   37398:	str	wzr, [x8]
   3739c:	mov	x8, xzr
   373a0:	stur	x8, [x29, #-8]
   373a4:	b	374c4 <rpl_re_set_registers@@Base+0xa528>
   373a8:	ldur	x0, [x29, #-32]
   373ac:	ldur	w1, [x29, #-36]
   373b0:	bl	374d4 <rpl_re_set_registers@@Base+0xa538>
   373b4:	str	x0, [sp, #32]
   373b8:	ldur	x8, [x29, #-24]
   373bc:	ldr	x8, [x8, #64]
   373c0:	ldr	x9, [sp, #32]
   373c4:	ldur	x10, [x29, #-24]
   373c8:	ldr	x10, [x10, #136]
   373cc:	and	x9, x9, x10
   373d0:	mov	x10, #0x18                  	// #24
   373d4:	mul	x9, x10, x9
   373d8:	add	x8, x8, x9
   373dc:	str	x8, [sp, #16]
   373e0:	str	xzr, [sp, #8]
   373e4:	ldr	x8, [sp, #8]
   373e8:	ldr	x9, [sp, #16]
   373ec:	ldr	x9, [x9]
   373f0:	cmp	x8, x9
   373f4:	b.ge	3747c <rpl_re_set_registers@@Base+0xa4e0>  // b.tcont
   373f8:	ldr	x8, [sp, #16]
   373fc:	ldr	x8, [x8, #16]
   37400:	ldr	x9, [sp, #8]
   37404:	mov	x10, #0x8                   	// #8
   37408:	mul	x9, x10, x9
   3740c:	add	x8, x8, x9
   37410:	ldr	x8, [x8]
   37414:	str	x8, [sp]
   37418:	ldr	x8, [sp]
   3741c:	ldr	x8, [x8]
   37420:	ldr	x9, [sp, #32]
   37424:	cmp	x8, x9
   37428:	b.ne	3746c <rpl_re_set_registers@@Base+0xa4d0>  // b.any
   3742c:	ldr	x8, [sp]
   37430:	ldrb	w9, [x8, #104]
   37434:	and	w9, w9, #0xf
   37438:	and	w9, w9, #0xff
   3743c:	ldur	w10, [x29, #-36]
   37440:	cmp	w9, w10
   37444:	b.ne	3746c <rpl_re_set_registers@@Base+0xa4d0>  // b.any
   37448:	ldr	x8, [sp]
   3744c:	ldr	x0, [x8, #80]
   37450:	ldur	x1, [x29, #-32]
   37454:	bl	37548 <rpl_re_set_registers@@Base+0xa5ac>
   37458:	tbnz	w0, #0, 37460 <rpl_re_set_registers@@Base+0xa4c4>
   3745c:	b	3746c <rpl_re_set_registers@@Base+0xa4d0>
   37460:	ldr	x8, [sp]
   37464:	stur	x8, [x29, #-8]
   37468:	b	374c4 <rpl_re_set_registers@@Base+0xa528>
   3746c:	ldr	x8, [sp, #8]
   37470:	add	x8, x8, #0x1
   37474:	str	x8, [sp, #8]
   37478:	b	373e4 <rpl_re_set_registers@@Base+0xa448>
   3747c:	ldur	x0, [x29, #-24]
   37480:	ldur	x1, [x29, #-32]
   37484:	ldur	w2, [x29, #-36]
   37488:	ldr	x3, [sp, #32]
   3748c:	bl	37608 <rpl_re_set_registers@@Base+0xa66c>
   37490:	str	x0, [sp, #24]
   37494:	ldr	x8, [sp, #24]
   37498:	cmp	x8, #0x0
   3749c:	cset	w9, eq  // eq = none
   374a0:	and	w9, w9, #0x1
   374a4:	mov	w0, w9
   374a8:	sxtw	x8, w0
   374ac:	cbz	x8, 374bc <rpl_re_set_registers@@Base+0xa520>
   374b0:	ldur	x8, [x29, #-16]
   374b4:	mov	w9, #0xc                   	// #12
   374b8:	str	w9, [x8]
   374bc:	ldr	x8, [sp, #24]
   374c0:	stur	x8, [x29, #-8]
   374c4:	ldur	x0, [x29, #-8]
   374c8:	ldp	x29, x30, [sp, #80]
   374cc:	add	sp, sp, #0x60
   374d0:	ret
   374d4:	sub	sp, sp, #0x20
   374d8:	str	x0, [sp, #24]
   374dc:	str	w1, [sp, #20]
   374e0:	ldr	x8, [sp, #24]
   374e4:	ldr	x8, [x8, #8]
   374e8:	ldr	w9, [sp, #20]
   374ec:	mov	w10, w9
   374f0:	add	x8, x8, x10
   374f4:	str	x8, [sp, #8]
   374f8:	str	xzr, [sp]
   374fc:	ldr	x8, [sp]
   37500:	ldr	x9, [sp, #24]
   37504:	ldr	x9, [x9, #8]
   37508:	cmp	x8, x9
   3750c:	b.ge	3753c <rpl_re_set_registers@@Base+0xa5a0>  // b.tcont
   37510:	ldr	x8, [sp, #24]
   37514:	ldr	x8, [x8, #16]
   37518:	ldr	x9, [sp]
   3751c:	ldr	x8, [x8, x9, lsl #3]
   37520:	ldr	x9, [sp, #8]
   37524:	add	x8, x9, x8
   37528:	str	x8, [sp, #8]
   3752c:	ldr	x8, [sp]
   37530:	add	x8, x8, #0x1
   37534:	str	x8, [sp]
   37538:	b	374fc <rpl_re_set_registers@@Base+0xa560>
   3753c:	ldr	x0, [sp, #8]
   37540:	add	sp, sp, #0x20
   37544:	ret
   37548:	sub	sp, sp, #0x20
   3754c:	str	x0, [sp, #16]
   37550:	str	x1, [sp, #8]
   37554:	ldr	x8, [sp, #16]
   37558:	cbz	x8, 3757c <rpl_re_set_registers@@Base+0xa5e0>
   3755c:	ldr	x8, [sp, #8]
   37560:	cbz	x8, 3757c <rpl_re_set_registers@@Base+0xa5e0>
   37564:	ldr	x8, [sp, #16]
   37568:	ldr	x8, [x8, #8]
   3756c:	ldr	x9, [sp, #8]
   37570:	ldr	x9, [x9, #8]
   37574:	cmp	x8, x9
   37578:	b.eq	3758c <rpl_re_set_registers@@Base+0xa5f0>  // b.none
   3757c:	mov	w8, wzr
   37580:	and	w8, w8, #0x1
   37584:	strb	w8, [sp, #31]
   37588:	b	375f8 <rpl_re_set_registers@@Base+0xa65c>
   3758c:	ldr	x8, [sp, #16]
   37590:	ldr	x8, [x8, #8]
   37594:	str	x8, [sp]
   37598:	ldr	x8, [sp]
   3759c:	subs	x8, x8, #0x1
   375a0:	str	x8, [sp]
   375a4:	cmp	x8, #0x0
   375a8:	cset	w9, lt  // lt = tstop
   375ac:	tbnz	w9, #0, 375ec <rpl_re_set_registers@@Base+0xa650>
   375b0:	ldr	x8, [sp, #16]
   375b4:	ldr	x8, [x8, #16]
   375b8:	ldr	x9, [sp]
   375bc:	ldr	x8, [x8, x9, lsl #3]
   375c0:	ldr	x9, [sp, #8]
   375c4:	ldr	x9, [x9, #16]
   375c8:	ldr	x10, [sp]
   375cc:	ldr	x9, [x9, x10, lsl #3]
   375d0:	cmp	x8, x9
   375d4:	b.eq	375e8 <rpl_re_set_registers@@Base+0xa64c>  // b.none
   375d8:	mov	w8, wzr
   375dc:	and	w8, w8, #0x1
   375e0:	strb	w8, [sp, #31]
   375e4:	b	375f8 <rpl_re_set_registers@@Base+0xa65c>
   375e8:	b	37598 <rpl_re_set_registers@@Base+0xa5fc>
   375ec:	mov	w8, #0x1                   	// #1
   375f0:	and	w8, w8, #0x1
   375f4:	strb	w8, [sp, #31]
   375f8:	ldrb	w8, [sp, #31]
   375fc:	and	w0, w8, #0x1
   37600:	add	sp, sp, #0x20
   37604:	ret
   37608:	sub	sp, sp, #0x70
   3760c:	stp	x29, x30, [sp, #96]
   37610:	add	x29, sp, #0x60
   37614:	mov	x8, #0x70                  	// #112
   37618:	mov	x9, #0x1                   	// #1
   3761c:	stur	x0, [x29, #-16]
   37620:	stur	x1, [x29, #-24]
   37624:	stur	w2, [x29, #-28]
   37628:	stur	x3, [x29, #-40]
   3762c:	str	xzr, [sp, #40]
   37630:	mov	x0, x8
   37634:	mov	x1, x9
   37638:	bl	b2e0 <calloc@plt>
   3763c:	str	x0, [sp, #24]
   37640:	ldr	x8, [sp, #24]
   37644:	cmp	x8, #0x0
   37648:	cset	w10, eq  // eq = none
   3764c:	and	w10, w10, #0x1
   37650:	mov	w0, w10
   37654:	sxtw	x8, w0
   37658:	cbz	x8, 37668 <rpl_re_set_registers@@Base+0xa6cc>
   3765c:	mov	x8, xzr
   37660:	stur	x8, [x29, #-8]
   37664:	b	37968 <rpl_re_set_registers@@Base+0xa9cc>
   37668:	ldr	x8, [sp, #24]
   3766c:	add	x0, x8, #0x8
   37670:	ldur	x1, [x29, #-24]
   37674:	bl	3719c <rpl_re_set_registers@@Base+0xa200>
   37678:	str	w0, [sp, #36]
   3767c:	ldr	w9, [sp, #36]
   37680:	cmp	w9, #0x0
   37684:	cset	w9, ne  // ne = any
   37688:	and	w9, w9, #0x1
   3768c:	mov	w1, w9
   37690:	sxtw	x8, w1
   37694:	cbz	x8, 376ac <rpl_re_set_registers@@Base+0xa710>
   37698:	ldr	x0, [sp, #24]
   3769c:	bl	a930 <free@plt>
   376a0:	mov	x8, xzr
   376a4:	stur	x8, [x29, #-8]
   376a8:	b	37968 <rpl_re_set_registers@@Base+0xa9cc>
   376ac:	ldur	w8, [x29, #-28]
   376b0:	ldr	x9, [sp, #24]
   376b4:	ldrb	w10, [x9, #104]
   376b8:	and	w8, w8, #0xf
   376bc:	and	w10, w10, #0xfffffff0
   376c0:	orr	w8, w10, w8
   376c4:	strb	w8, [x9, #104]
   376c8:	ldr	x9, [sp, #24]
   376cc:	add	x9, x9, #0x8
   376d0:	ldr	x11, [sp, #24]
   376d4:	str	x9, [x11, #80]
   376d8:	str	xzr, [sp, #48]
   376dc:	ldr	x8, [sp, #48]
   376e0:	ldur	x9, [x29, #-24]
   376e4:	ldr	x9, [x9, #8]
   376e8:	cmp	x8, x9
   376ec:	b.ge	37920 <rpl_re_set_registers@@Base+0xa984>  // b.tcont
   376f0:	ldur	x8, [x29, #-16]
   376f4:	ldr	x8, [x8]
   376f8:	ldur	x9, [x29, #-24]
   376fc:	mov	x10, #0x10                  	// #16
   37700:	ldr	x9, [x9, #16]
   37704:	ldr	x11, [sp, #48]
   37708:	mov	x12, #0x8                   	// #8
   3770c:	ldr	x9, [x9, x11, lsl #3]
   37710:	mul	x9, x10, x9
   37714:	add	x8, x8, x9
   37718:	str	x8, [sp, #16]
   3771c:	ldr	x8, [sp, #16]
   37720:	ldr	w13, [x8, #8]
   37724:	and	w13, w13, #0xff
   37728:	str	w13, [sp, #12]
   3772c:	ldr	x8, [sp, #16]
   37730:	ldr	w13, [x8, #8]
   37734:	lsr	w12, w13, w12
   37738:	and	w12, w12, #0x3ff
   3773c:	str	w12, [sp, #8]
   37740:	ldr	w12, [sp, #12]
   37744:	cmp	w12, #0x1
   37748:	b.ne	37758 <rpl_re_set_registers@@Base+0xa7bc>  // b.any
   3774c:	ldr	w8, [sp, #8]
   37750:	cbnz	w8, 37758 <rpl_re_set_registers@@Base+0xa7bc>
   37754:	b	37910 <rpl_re_set_registers@@Base+0xa974>
   37758:	ldr	x8, [sp, #16]
   3775c:	ldr	w9, [x8, #8]
   37760:	lsr	w9, w9, #20
   37764:	and	w9, w9, #0x1
   37768:	ldr	x8, [sp, #24]
   3776c:	ldrb	w10, [x8, #104]
   37770:	mov	w11, #0x5                   	// #5
   37774:	lsr	w10, w10, w11
   37778:	mov	w12, #0x1                   	// #1
   3777c:	and	w10, w10, #0x1
   37780:	and	w10, w10, #0xff
   37784:	orr	w9, w10, w9
   37788:	ldrb	w10, [x8, #104]
   3778c:	and	w9, w9, w12
   37790:	lsl	w9, w9, w11
   37794:	and	w10, w10, #0xffffffdf
   37798:	orr	w9, w10, w9
   3779c:	strb	w9, [x8, #104]
   377a0:	ldr	w9, [sp, #12]
   377a4:	cmp	w9, #0x2
   377a8:	b.ne	377c4 <rpl_re_set_registers@@Base+0xa828>  // b.any
   377ac:	ldr	x8, [sp, #24]
   377b0:	ldrb	w9, [x8, #104]
   377b4:	and	w9, w9, #0xffffffef
   377b8:	orr	w9, w9, #0x10
   377bc:	strb	w9, [x8, #104]
   377c0:	b	377e4 <rpl_re_set_registers@@Base+0xa848>
   377c4:	ldr	w8, [sp, #12]
   377c8:	cmp	w8, #0x4
   377cc:	b.ne	377e4 <rpl_re_set_registers@@Base+0xa848>  // b.any
   377d0:	ldr	x8, [sp, #24]
   377d4:	ldrb	w9, [x8, #104]
   377d8:	and	w9, w9, #0xffffffbf
   377dc:	orr	w9, w9, #0x40
   377e0:	strb	w9, [x8, #104]
   377e4:	ldr	w8, [sp, #8]
   377e8:	cbz	w8, 37910 <rpl_re_set_registers@@Base+0xa974>
   377ec:	ldr	x8, [sp, #24]
   377f0:	ldr	x8, [x8, #80]
   377f4:	ldr	x9, [sp, #24]
   377f8:	add	x9, x9, #0x8
   377fc:	cmp	x8, x9
   37800:	b.ne	3788c <rpl_re_set_registers@@Base+0xa8f0>  // b.any
   37804:	mov	x0, #0x18                  	// #24
   37808:	bl	af10 <malloc@plt>
   3780c:	str	x0, [sp]
   37810:	ldr	x8, [sp]
   37814:	cmp	x8, #0x0
   37818:	cset	w9, eq  // eq = none
   3781c:	and	w9, w9, #0x1
   37820:	mov	w0, w9
   37824:	sxtw	x8, w0
   37828:	cbz	x8, 37840 <rpl_re_set_registers@@Base+0xa8a4>
   3782c:	ldr	x0, [sp, #24]
   37830:	bl	2d0b4 <rpl_re_set_registers@@Base+0x118>
   37834:	mov	x8, xzr
   37838:	stur	x8, [x29, #-8]
   3783c:	b	37968 <rpl_re_set_registers@@Base+0xa9cc>
   37840:	ldr	x8, [sp]
   37844:	ldr	x9, [sp, #24]
   37848:	str	x8, [x9, #80]
   3784c:	ldr	x8, [sp, #24]
   37850:	ldr	x0, [x8, #80]
   37854:	ldur	x1, [x29, #-24]
   37858:	bl	3719c <rpl_re_set_registers@@Base+0xa200>
   3785c:	cbz	w0, 37874 <rpl_re_set_registers@@Base+0xa8d8>
   37860:	ldr	x0, [sp, #24]
   37864:	bl	2d0b4 <rpl_re_set_registers@@Base+0x118>
   37868:	mov	x8, xzr
   3786c:	stur	x8, [x29, #-8]
   37870:	b	37968 <rpl_re_set_registers@@Base+0xa9cc>
   37874:	str	xzr, [sp, #40]
   37878:	ldr	x8, [sp, #24]
   3787c:	ldrb	w9, [x8, #104]
   37880:	and	w9, w9, #0x7f
   37884:	orr	w9, w9, #0xffffff80
   37888:	strb	w9, [x8, #104]
   3788c:	ldr	w8, [sp, #8]
   37890:	and	w8, w8, #0x1
   37894:	cbz	w8, 378a4 <rpl_re_set_registers@@Base+0xa908>
   37898:	ldur	w8, [x29, #-28]
   3789c:	and	w8, w8, #0x1
   378a0:	cbz	w8, 378ec <rpl_re_set_registers@@Base+0xa950>
   378a4:	ldr	w8, [sp, #8]
   378a8:	and	w8, w8, #0x2
   378ac:	cbz	w8, 378bc <rpl_re_set_registers@@Base+0xa920>
   378b0:	ldur	w8, [x29, #-28]
   378b4:	and	w8, w8, #0x1
   378b8:	cbnz	w8, 378ec <rpl_re_set_registers@@Base+0xa950>
   378bc:	ldr	w8, [sp, #8]
   378c0:	and	w8, w8, #0x10
   378c4:	cbz	w8, 378d4 <rpl_re_set_registers@@Base+0xa938>
   378c8:	ldur	w8, [x29, #-28]
   378cc:	and	w8, w8, #0x2
   378d0:	cbz	w8, 378ec <rpl_re_set_registers@@Base+0xa950>
   378d4:	ldr	w8, [sp, #8]
   378d8:	and	w8, w8, #0x40
   378dc:	cbz	w8, 37910 <rpl_re_set_registers@@Base+0xa974>
   378e0:	ldur	w8, [x29, #-28]
   378e4:	and	w8, w8, #0x4
   378e8:	cbnz	w8, 37910 <rpl_re_set_registers@@Base+0xa974>
   378ec:	ldr	x8, [sp, #24]
   378f0:	add	x0, x8, #0x8
   378f4:	ldr	x8, [sp, #48]
   378f8:	ldr	x9, [sp, #40]
   378fc:	subs	x1, x8, x9
   37900:	bl	37978 <rpl_re_set_registers@@Base+0xa9dc>
   37904:	ldr	x8, [sp, #40]
   37908:	add	x8, x8, #0x1
   3790c:	str	x8, [sp, #40]
   37910:	ldr	x8, [sp, #48]
   37914:	add	x8, x8, #0x1
   37918:	str	x8, [sp, #48]
   3791c:	b	376dc <rpl_re_set_registers@@Base+0xa740>
   37920:	ldur	x0, [x29, #-16]
   37924:	ldr	x1, [sp, #24]
   37928:	ldur	x2, [x29, #-40]
   3792c:	bl	37a0c <rpl_re_set_registers@@Base+0xaa70>
   37930:	str	w0, [sp, #36]
   37934:	ldr	w8, [sp, #36]
   37938:	cmp	w8, #0x0
   3793c:	cset	w8, ne  // ne = any
   37940:	and	w8, w8, #0x1
   37944:	mov	w1, w8
   37948:	sxtw	x9, w1
   3794c:	cbz	x9, 37960 <rpl_re_set_registers@@Base+0xa9c4>
   37950:	ldr	x0, [sp, #24]
   37954:	bl	2d0b4 <rpl_re_set_registers@@Base+0x118>
   37958:	mov	x8, xzr
   3795c:	str	x8, [sp, #24]
   37960:	ldr	x8, [sp, #24]
   37964:	stur	x8, [x29, #-8]
   37968:	ldur	x0, [x29, #-8]
   3796c:	ldp	x29, x30, [sp, #96]
   37970:	add	sp, sp, #0x70
   37974:	ret
   37978:	sub	sp, sp, #0x10
   3797c:	str	x0, [sp, #8]
   37980:	str	x1, [sp]
   37984:	ldr	x8, [sp]
   37988:	cmp	x8, #0x0
   3798c:	cset	w9, lt  // lt = tstop
   37990:	tbnz	w9, #0, 379a8 <rpl_re_set_registers@@Base+0xaa0c>
   37994:	ldr	x8, [sp]
   37998:	ldr	x9, [sp, #8]
   3799c:	ldr	x9, [x9, #8]
   379a0:	cmp	x8, x9
   379a4:	b.lt	379ac <rpl_re_set_registers@@Base+0xaa10>  // b.tstop
   379a8:	b	37a04 <rpl_re_set_registers@@Base+0xaa68>
   379ac:	ldr	x8, [sp, #8]
   379b0:	ldr	x9, [x8, #8]
   379b4:	subs	x9, x9, #0x1
   379b8:	str	x9, [x8, #8]
   379bc:	ldr	x8, [sp]
   379c0:	ldr	x9, [sp, #8]
   379c4:	ldr	x9, [x9, #8]
   379c8:	cmp	x8, x9
   379cc:	b.ge	37a04 <rpl_re_set_registers@@Base+0xaa68>  // b.tcont
   379d0:	ldr	x8, [sp, #8]
   379d4:	ldr	x8, [x8, #16]
   379d8:	ldr	x9, [sp]
   379dc:	add	x9, x9, #0x1
   379e0:	ldr	x8, [x8, x9, lsl #3]
   379e4:	ldr	x9, [sp, #8]
   379e8:	ldr	x9, [x9, #16]
   379ec:	ldr	x10, [sp]
   379f0:	str	x8, [x9, x10, lsl #3]
   379f4:	ldr	x8, [sp]
   379f8:	add	x8, x8, #0x1
   379fc:	str	x8, [sp]
   37a00:	b	379bc <rpl_re_set_registers@@Base+0xaa20>
   37a04:	add	sp, sp, #0x10
   37a08:	ret
   37a0c:	sub	sp, sp, #0x60
   37a10:	stp	x29, x30, [sp, #80]
   37a14:	add	x29, sp, #0x50
   37a18:	stur	x0, [x29, #-16]
   37a1c:	stur	x1, [x29, #-24]
   37a20:	stur	x2, [x29, #-32]
   37a24:	ldur	x8, [x29, #-32]
   37a28:	ldur	x9, [x29, #-24]
   37a2c:	str	x8, [x9]
   37a30:	ldur	x8, [x29, #-24]
   37a34:	add	x0, x8, #0x20
   37a38:	ldur	x8, [x29, #-24]
   37a3c:	ldr	x1, [x8, #16]
   37a40:	bl	36240 <rpl_re_set_registers@@Base+0x92a4>
   37a44:	str	w0, [sp, #36]
   37a48:	ldr	w10, [sp, #36]
   37a4c:	cmp	w10, #0x0
   37a50:	cset	w10, ne  // ne = any
   37a54:	and	w10, w10, #0x1
   37a58:	mov	w1, w10
   37a5c:	sxtw	x8, w1
   37a60:	cbz	x8, 37a70 <rpl_re_set_registers@@Base+0xaad4>
   37a64:	mov	w8, #0xc                   	// #12
   37a68:	stur	w8, [x29, #-4]
   37a6c:	b	37be8 <rpl_re_set_registers@@Base+0xac4c>
   37a70:	str	xzr, [sp, #24]
   37a74:	ldr	x8, [sp, #24]
   37a78:	ldur	x9, [x29, #-24]
   37a7c:	ldr	x9, [x9, #16]
   37a80:	cmp	x8, x9
   37a84:	b.ge	37af4 <rpl_re_set_registers@@Base+0xab58>  // b.tcont
   37a88:	ldur	x8, [x29, #-24]
   37a8c:	mov	x9, #0x10                  	// #16
   37a90:	ldr	x8, [x8, #24]
   37a94:	ldr	x10, [sp, #24]
   37a98:	ldr	x8, [x8, x10, lsl #3]
   37a9c:	str	x8, [sp, #16]
   37aa0:	ldur	x8, [x29, #-16]
   37aa4:	ldr	x8, [x8]
   37aa8:	ldr	x10, [sp, #16]
   37aac:	mul	x9, x9, x10
   37ab0:	add	x8, x8, x9
   37ab4:	ldr	w11, [x8, #8]
   37ab8:	and	w11, w11, #0xff
   37abc:	and	w11, w11, #0x8
   37ac0:	cbnz	w11, 37ae4 <rpl_re_set_registers@@Base+0xab48>
   37ac4:	ldur	x8, [x29, #-24]
   37ac8:	add	x0, x8, #0x20
   37acc:	ldr	x1, [sp, #16]
   37ad0:	bl	370bc <rpl_re_set_registers@@Base+0xa120>
   37ad4:	tbnz	w0, #0, 37ae4 <rpl_re_set_registers@@Base+0xab48>
   37ad8:	mov	w8, #0xc                   	// #12
   37adc:	stur	w8, [x29, #-4]
   37ae0:	b	37be8 <rpl_re_set_registers@@Base+0xac4c>
   37ae4:	ldr	x8, [sp, #24]
   37ae8:	add	x8, x8, #0x1
   37aec:	str	x8, [sp, #24]
   37af0:	b	37a74 <rpl_re_set_registers@@Base+0xaad8>
   37af4:	ldur	x8, [x29, #-16]
   37af8:	ldr	x8, [x8, #64]
   37afc:	ldur	x9, [x29, #-32]
   37b00:	ldur	x10, [x29, #-16]
   37b04:	ldr	x10, [x10, #136]
   37b08:	and	x9, x9, x10
   37b0c:	mov	x10, #0x18                  	// #24
   37b10:	mul	x9, x10, x9
   37b14:	add	x8, x8, x9
   37b18:	str	x8, [sp, #40]
   37b1c:	ldr	x8, [sp, #40]
   37b20:	ldr	x8, [x8, #8]
   37b24:	ldr	x9, [sp, #40]
   37b28:	ldr	x9, [x9]
   37b2c:	cmp	x8, x9
   37b30:	cset	w11, le
   37b34:	and	w11, w11, #0x1
   37b38:	mov	w0, w11
   37b3c:	sxtw	x8, w0
   37b40:	cbz	x8, 37bb8 <rpl_re_set_registers@@Base+0xac1c>
   37b44:	ldr	x8, [sp, #40]
   37b48:	ldr	x8, [x8]
   37b4c:	mov	x9, #0x2                   	// #2
   37b50:	mul	x8, x9, x8
   37b54:	add	x8, x8, #0x2
   37b58:	str	x8, [sp, #8]
   37b5c:	ldr	x8, [sp, #40]
   37b60:	ldr	x0, [x8, #16]
   37b64:	ldr	x8, [sp, #8]
   37b68:	mov	x9, #0x8                   	// #8
   37b6c:	mul	x1, x8, x9
   37b70:	bl	af40 <realloc@plt>
   37b74:	str	x0, [sp]
   37b78:	ldr	x8, [sp]
   37b7c:	cmp	x8, #0x0
   37b80:	cset	w10, eq  // eq = none
   37b84:	and	w10, w10, #0x1
   37b88:	mov	w0, w10
   37b8c:	sxtw	x8, w0
   37b90:	cbz	x8, 37ba0 <rpl_re_set_registers@@Base+0xac04>
   37b94:	mov	w8, #0xc                   	// #12
   37b98:	stur	w8, [x29, #-4]
   37b9c:	b	37be8 <rpl_re_set_registers@@Base+0xac4c>
   37ba0:	ldr	x8, [sp]
   37ba4:	ldr	x9, [sp, #40]
   37ba8:	str	x8, [x9, #16]
   37bac:	ldr	x8, [sp, #8]
   37bb0:	ldr	x9, [sp, #40]
   37bb4:	str	x8, [x9, #8]
   37bb8:	ldur	x8, [x29, #-24]
   37bbc:	ldr	x9, [sp, #40]
   37bc0:	ldr	x9, [x9, #16]
   37bc4:	ldr	x10, [sp, #40]
   37bc8:	ldr	x11, [x10]
   37bcc:	add	x12, x11, #0x1
   37bd0:	str	x12, [x10]
   37bd4:	mov	x10, #0x8                   	// #8
   37bd8:	mul	x10, x10, x11
   37bdc:	add	x9, x9, x10
   37be0:	str	x8, [x9]
   37be4:	stur	wzr, [x29, #-4]
   37be8:	ldur	w0, [x29, #-4]
   37bec:	ldp	x29, x30, [sp, #80]
   37bf0:	add	sp, sp, #0x60
   37bf4:	ret
   37bf8:	sub	sp, sp, #0x60
   37bfc:	stp	x29, x30, [sp, #80]
   37c00:	add	x29, sp, #0x50
   37c04:	mov	w8, #0x1                   	// #1
   37c08:	stur	x0, [x29, #-16]
   37c0c:	stur	x1, [x29, #-24]
   37c10:	stur	x2, [x29, #-32]
   37c14:	stur	w3, [x29, #-36]
   37c18:	str	w8, [sp, #40]
   37c1c:	ldur	x9, [x29, #-32]
   37c20:	add	x9, x9, #0x1
   37c24:	str	x9, [sp, #24]
   37c28:	ldur	w8, [x29, #-36]
   37c2c:	cbnz	w8, 37ccc <rpl_re_set_registers@@Base+0xad30>
   37c30:	ldr	x8, [sp, #24]
   37c34:	mov	x9, #0x8                   	// #8
   37c38:	mul	x0, x8, x9
   37c3c:	bl	af10 <malloc@plt>
   37c40:	ldur	x8, [x29, #-16]
   37c44:	str	x0, [x8, #8]
   37c48:	ldur	x8, [x29, #-16]
   37c4c:	ldr	x8, [x8, #8]
   37c50:	cmp	x8, #0x0
   37c54:	cset	w10, eq  // eq = none
   37c58:	and	w10, w10, #0x1
   37c5c:	mov	w0, w10
   37c60:	sxtw	x8, w0
   37c64:	cbz	x8, 37c70 <rpl_re_set_registers@@Base+0xacd4>
   37c68:	stur	wzr, [x29, #-4]
   37c6c:	b	37ed8 <rpl_re_set_registers@@Base+0xaf3c>
   37c70:	ldr	x8, [sp, #24]
   37c74:	mov	x9, #0x8                   	// #8
   37c78:	mul	x0, x8, x9
   37c7c:	bl	af10 <malloc@plt>
   37c80:	ldur	x8, [x29, #-16]
   37c84:	str	x0, [x8, #16]
   37c88:	ldur	x8, [x29, #-16]
   37c8c:	ldr	x8, [x8, #16]
   37c90:	cmp	x8, #0x0
   37c94:	cset	w10, eq  // eq = none
   37c98:	and	w10, w10, #0x1
   37c9c:	mov	w0, w10
   37ca0:	sxtw	x8, w0
   37ca4:	cbz	x8, 37cbc <rpl_re_set_registers@@Base+0xad20>
   37ca8:	ldur	x8, [x29, #-16]
   37cac:	ldr	x0, [x8, #8]
   37cb0:	bl	a930 <free@plt>
   37cb4:	stur	wzr, [x29, #-4]
   37cb8:	b	37ed8 <rpl_re_set_registers@@Base+0xaf3c>
   37cbc:	ldr	x8, [sp, #24]
   37cc0:	ldur	x9, [x29, #-16]
   37cc4:	str	x8, [x9]
   37cc8:	b	37e1c <rpl_re_set_registers@@Base+0xae80>
   37ccc:	ldur	w8, [x29, #-36]
   37cd0:	cmp	w8, #0x1
   37cd4:	b.ne	37dac <rpl_re_set_registers@@Base+0xae10>  // b.any
   37cd8:	ldr	x8, [sp, #24]
   37cdc:	ldur	x9, [x29, #-16]
   37ce0:	ldr	x9, [x9]
   37ce4:	cmp	x8, x9
   37ce8:	cset	w10, hi  // hi = pmore
   37cec:	and	w10, w10, #0x1
   37cf0:	mov	w0, w10
   37cf4:	sxtw	x8, w0
   37cf8:	cbz	x8, 37da8 <rpl_re_set_registers@@Base+0xae0c>
   37cfc:	ldur	x8, [x29, #-16]
   37d00:	ldr	x0, [x8, #8]
   37d04:	ldr	x8, [sp, #24]
   37d08:	mov	x9, #0x8                   	// #8
   37d0c:	mul	x1, x8, x9
   37d10:	bl	af40 <realloc@plt>
   37d14:	str	x0, [sp, #16]
   37d18:	ldr	x8, [sp, #16]
   37d1c:	cmp	x8, #0x0
   37d20:	cset	w10, eq  // eq = none
   37d24:	and	w10, w10, #0x1
   37d28:	mov	w0, w10
   37d2c:	sxtw	x8, w0
   37d30:	cbz	x8, 37d3c <rpl_re_set_registers@@Base+0xada0>
   37d34:	stur	wzr, [x29, #-4]
   37d38:	b	37ed8 <rpl_re_set_registers@@Base+0xaf3c>
   37d3c:	ldur	x8, [x29, #-16]
   37d40:	ldr	x0, [x8, #16]
   37d44:	ldr	x8, [sp, #24]
   37d48:	mov	x9, #0x8                   	// #8
   37d4c:	mul	x1, x8, x9
   37d50:	bl	af40 <realloc@plt>
   37d54:	str	x0, [sp, #8]
   37d58:	ldr	x8, [sp, #8]
   37d5c:	cmp	x8, #0x0
   37d60:	cset	w10, eq  // eq = none
   37d64:	and	w10, w10, #0x1
   37d68:	mov	w0, w10
   37d6c:	sxtw	x8, w0
   37d70:	cbz	x8, 37d84 <rpl_re_set_registers@@Base+0xade8>
   37d74:	ldr	x0, [sp, #16]
   37d78:	bl	a930 <free@plt>
   37d7c:	stur	wzr, [x29, #-4]
   37d80:	b	37ed8 <rpl_re_set_registers@@Base+0xaf3c>
   37d84:	ldr	x8, [sp, #16]
   37d88:	ldur	x9, [x29, #-16]
   37d8c:	str	x8, [x9, #8]
   37d90:	ldr	x8, [sp, #8]
   37d94:	ldur	x9, [x29, #-16]
   37d98:	str	x8, [x9, #16]
   37d9c:	ldr	x8, [sp, #24]
   37da0:	ldur	x9, [x29, #-16]
   37da4:	str	x8, [x9]
   37da8:	b	37e1c <rpl_re_set_registers@@Base+0xae80>
   37dac:	ldur	w8, [x29, #-36]
   37db0:	cmp	w8, #0x2
   37db4:	b.ne	37dbc <rpl_re_set_registers@@Base+0xae20>  // b.any
   37db8:	b	37ddc <rpl_re_set_registers@@Base+0xae40>
   37dbc:	adrp	x0, 45000 <vasnprintf@@Base+0x2e4c>
   37dc0:	add	x0, x0, #0x79a
   37dc4:	adrp	x1, 45000 <vasnprintf@@Base+0x2e4c>
   37dc8:	add	x1, x1, #0x715
   37dcc:	mov	w2, #0x1f9                 	// #505
   37dd0:	adrp	x3, 45000 <vasnprintf@@Base+0x2e4c>
   37dd4:	add	x3, x3, #0x7b7
   37dd8:	bl	a910 <__assert_fail@plt>
   37ddc:	ldur	x8, [x29, #-16]
   37de0:	ldr	x8, [x8]
   37de4:	ldur	x9, [x29, #-32]
   37de8:	cmp	x8, x9
   37dec:	b.cc	37df4 <rpl_re_set_registers@@Base+0xae58>  // b.lo, b.ul, b.last
   37df0:	b	37e14 <rpl_re_set_registers@@Base+0xae78>
   37df4:	adrp	x0, 45000 <vasnprintf@@Base+0x2e4c>
   37df8:	add	x0, x0, #0x800
   37dfc:	adrp	x1, 45000 <vasnprintf@@Base+0x2e4c>
   37e00:	add	x1, x1, #0x715
   37e04:	mov	w2, #0x1fb                 	// #507
   37e08:	adrp	x3, 45000 <vasnprintf@@Base+0x2e4c>
   37e0c:	add	x3, x3, #0x7b7
   37e10:	bl	a910 <__assert_fail@plt>
   37e14:	mov	w8, #0x2                   	// #2
   37e18:	str	w8, [sp, #40]
   37e1c:	str	xzr, [sp, #32]
   37e20:	ldr	x8, [sp, #32]
   37e24:	ldur	x9, [x29, #-32]
   37e28:	cmp	x8, x9
   37e2c:	b.ge	37e88 <rpl_re_set_registers@@Base+0xaeec>  // b.tcont
   37e30:	ldur	x8, [x29, #-24]
   37e34:	ldr	x9, [sp, #32]
   37e38:	mov	x10, #0x10                  	// #16
   37e3c:	mul	x9, x10, x9
   37e40:	ldr	x8, [x8, x9]
   37e44:	ldur	x9, [x29, #-16]
   37e48:	ldr	x9, [x9, #8]
   37e4c:	ldr	x11, [sp, #32]
   37e50:	str	x8, [x9, x11, lsl #3]
   37e54:	ldur	x8, [x29, #-24]
   37e58:	ldr	x9, [sp, #32]
   37e5c:	mul	x9, x10, x9
   37e60:	add	x8, x8, x9
   37e64:	ldr	x8, [x8, #8]
   37e68:	ldur	x9, [x29, #-16]
   37e6c:	ldr	x9, [x9, #16]
   37e70:	ldr	x10, [sp, #32]
   37e74:	str	x8, [x9, x10, lsl #3]
   37e78:	ldr	x8, [sp, #32]
   37e7c:	add	x8, x8, #0x1
   37e80:	str	x8, [sp, #32]
   37e84:	b	37e20 <rpl_re_set_registers@@Base+0xae84>
   37e88:	ldr	x8, [sp, #32]
   37e8c:	ldur	x9, [x29, #-16]
   37e90:	ldr	x9, [x9]
   37e94:	cmp	x8, x9
   37e98:	b.cs	37ed0 <rpl_re_set_registers@@Base+0xaf34>  // b.hs, b.nlast
   37e9c:	ldur	x8, [x29, #-16]
   37ea0:	ldr	x8, [x8, #16]
   37ea4:	ldr	x9, [sp, #32]
   37ea8:	mov	x10, #0xffffffffffffffff    	// #-1
   37eac:	str	x10, [x8, x9, lsl #3]
   37eb0:	ldur	x8, [x29, #-16]
   37eb4:	ldr	x8, [x8, #8]
   37eb8:	ldr	x9, [sp, #32]
   37ebc:	str	x10, [x8, x9, lsl #3]
   37ec0:	ldr	x8, [sp, #32]
   37ec4:	add	x8, x8, #0x1
   37ec8:	str	x8, [sp, #32]
   37ecc:	b	37e88 <rpl_re_set_registers@@Base+0xaeec>
   37ed0:	ldr	w8, [sp, #40]
   37ed4:	stur	w8, [x29, #-4]
   37ed8:	ldur	w0, [x29, #-4]
   37edc:	ldp	x29, x30, [sp, #80]
   37ee0:	add	sp, sp, #0x60
   37ee4:	ret
   37ee8:	sub	sp, sp, #0x80
   37eec:	stp	x29, x30, [sp, #112]
   37ef0:	add	x29, sp, #0x70
   37ef4:	mov	w8, #0x1                   	// #1
   37ef8:	stur	x0, [x29, #-16]
   37efc:	stur	x1, [x29, #-24]
   37f00:	stur	x2, [x29, #-32]
   37f04:	stur	x3, [x29, #-40]
   37f08:	stur	x4, [x29, #-48]
   37f0c:	and	w8, w5, w8
   37f10:	sturb	w8, [x29, #-49]
   37f14:	str	x6, [sp, #48]
   37f18:	ldur	x9, [x29, #-40]
   37f1c:	ldr	x10, [sp, #48]
   37f20:	ldrsw	x10, [x10, #180]
   37f24:	cmp	x9, x10
   37f28:	b.ge	37f38 <rpl_re_set_registers@@Base+0xaf9c>  // b.tcont
   37f2c:	ldr	x8, [sp, #48]
   37f30:	ldrsw	x8, [x8, #180]
   37f34:	stur	x8, [x29, #-40]
   37f38:	ldur	x8, [x29, #-32]
   37f3c:	add	x8, x8, #0x1
   37f40:	ldur	x9, [x29, #-40]
   37f44:	cmp	x8, x9
   37f48:	b.ge	37f5c <rpl_re_set_registers@@Base+0xafc0>  // b.tcont
   37f4c:	ldur	x8, [x29, #-32]
   37f50:	add	x8, x8, #0x1
   37f54:	str	x8, [sp, #24]
   37f58:	b	37f64 <rpl_re_set_registers@@Base+0xafc8>
   37f5c:	ldur	x8, [x29, #-40]
   37f60:	str	x8, [sp, #24]
   37f64:	ldr	x8, [sp, #24]
   37f68:	str	x8, [sp, #32]
   37f6c:	ldur	x0, [x29, #-24]
   37f70:	ldur	x1, [x29, #-32]
   37f74:	ldur	x2, [x29, #-16]
   37f78:	ldur	x3, [x29, #-48]
   37f7c:	ldurb	w9, [x29, #-49]
   37f80:	ldr	x5, [sp, #48]
   37f84:	and	w4, w9, #0x1
   37f88:	bl	2e654 <rpl_re_set_registers@@Base+0x16b8>
   37f8c:	ldur	x0, [x29, #-16]
   37f90:	ldr	x1, [sp, #32]
   37f94:	bl	2e75c <rpl_re_set_registers@@Base+0x17c0>
   37f98:	str	w0, [sp, #44]
   37f9c:	ldr	w9, [sp, #44]
   37fa0:	cmp	w9, #0x0
   37fa4:	cset	w9, ne  // ne = any
   37fa8:	and	w9, w9, #0x1
   37fac:	mov	w1, w9
   37fb0:	sxtw	x8, w1
   37fb4:	cbz	x8, 37fc4 <rpl_re_set_registers@@Base+0xb028>
   37fb8:	ldr	w8, [sp, #44]
   37fbc:	stur	w8, [x29, #-4]
   37fc0:	b	38074 <rpl_re_set_registers@@Base+0xb0d8>
   37fc4:	ldr	x8, [sp, #48]
   37fc8:	add	x8, x8, #0xb8
   37fcc:	ldur	x9, [x29, #-16]
   37fd0:	str	x8, [x9, #128]
   37fd4:	ldr	x8, [sp, #48]
   37fd8:	ldrb	w10, [x8, #176]
   37fdc:	mov	w11, #0x4                   	// #4
   37fe0:	lsr	w10, w10, w11
   37fe4:	and	w10, w10, #0x1
   37fe8:	and	w10, w10, #0xff
   37fec:	ldur	x8, [x29, #-16]
   37ff0:	strb	w10, [x8, #142]
   37ff4:	ldur	x8, [x29, #-16]
   37ff8:	ldrb	w10, [x8, #139]
   37ffc:	cbz	w10, 38010 <rpl_re_set_registers@@Base+0xb074>
   38000:	ldur	x8, [x29, #-16]
   38004:	ldr	x8, [x8, #8]
   38008:	str	x8, [sp, #16]
   3800c:	b	38018 <rpl_re_set_registers@@Base+0xb07c>
   38010:	ldur	x8, [x29, #-24]
   38014:	str	x8, [sp, #16]
   38018:	ldr	x8, [sp, #16]
   3801c:	ldur	x9, [x29, #-16]
   38020:	str	x8, [x9, #8]
   38024:	ldur	x8, [x29, #-16]
   38028:	ldrb	w10, [x8, #139]
   3802c:	cbnz	w10, 38040 <rpl_re_set_registers@@Base+0xb0a4>
   38030:	ldr	x8, [sp, #48]
   38034:	ldr	w9, [x8, #180]
   38038:	cmp	w9, #0x1
   3803c:	b.le	3804c <rpl_re_set_registers@@Base+0xb0b0>
   38040:	mov	x8, xzr
   38044:	str	x8, [sp, #8]
   38048:	b	38054 <rpl_re_set_registers@@Base+0xb0b8>
   3804c:	ldur	x8, [x29, #-32]
   38050:	str	x8, [sp, #8]
   38054:	ldr	x8, [sp, #8]
   38058:	ldur	x9, [x29, #-16]
   3805c:	str	x8, [x9, #48]
   38060:	ldur	x8, [x29, #-16]
   38064:	ldr	x8, [x8, #48]
   38068:	ldur	x9, [x29, #-16]
   3806c:	str	x8, [x9, #56]
   38070:	stur	wzr, [x29, #-4]
   38074:	ldur	w0, [x29, #-4]
   38078:	ldp	x29, x30, [sp, #112]
   3807c:	add	sp, sp, #0x80
   38080:	ret
   38084:	sub	sp, sp, #0x50
   38088:	stp	x29, x30, [sp, #64]
   3808c:	add	x29, sp, #0x40
   38090:	mov	x8, #0xffffffffffffffff    	// #-1
   38094:	stur	x0, [x29, #-16]
   38098:	stur	w1, [x29, #-20]
   3809c:	str	x2, [sp, #32]
   380a0:	ldur	w9, [x29, #-20]
   380a4:	ldur	x10, [x29, #-16]
   380a8:	str	w9, [x10, #160]
   380ac:	ldur	x10, [x29, #-16]
   380b0:	str	x8, [x10, #168]
   380b4:	ldr	x8, [sp, #32]
   380b8:	cmp	x8, #0x0
   380bc:	cset	w9, le
   380c0:	tbnz	w9, #0, 381a4 <rpl_re_set_registers@@Base+0xb208>
   380c4:	mov	x8, #0x28                  	// #40
   380c8:	str	x8, [sp, #24]
   380cc:	ldr	x8, [sp, #24]
   380d0:	mov	x9, #0xffffffffffffffff    	// #-1
   380d4:	udiv	x8, x9, x8
   380d8:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
   380dc:	cmp	x9, x8
   380e0:	b.cs	380f0 <rpl_re_set_registers@@Base+0xb154>  // b.hs, b.nlast
   380e4:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
   380e8:	str	x8, [sp, #16]
   380ec:	b	38100 <rpl_re_set_registers@@Base+0xb164>
   380f0:	ldr	x8, [sp, #24]
   380f4:	mov	x9, #0xffffffffffffffff    	// #-1
   380f8:	udiv	x8, x9, x8
   380fc:	str	x8, [sp, #16]
   38100:	ldr	x8, [sp, #16]
   38104:	ldr	x9, [sp, #32]
   38108:	cmp	x8, x9
   3810c:	cset	w10, cc  // cc = lo, ul, last
   38110:	and	w10, w10, #0x1
   38114:	mov	w0, w10
   38118:	sxtw	x8, w0
   3811c:	cbz	x8, 3812c <rpl_re_set_registers@@Base+0xb190>
   38120:	mov	w8, #0xc                   	// #12
   38124:	stur	w8, [x29, #-4]
   38128:	b	381cc <rpl_re_set_registers@@Base+0xb230>
   3812c:	ldr	x8, [sp, #32]
   38130:	mov	x9, #0x28                  	// #40
   38134:	mul	x0, x8, x9
   38138:	bl	af10 <malloc@plt>
   3813c:	ldur	x8, [x29, #-16]
   38140:	str	x0, [x8, #216]
   38144:	ldr	x8, [sp, #32]
   38148:	mov	x9, #0x8                   	// #8
   3814c:	mul	x0, x8, x9
   38150:	bl	af10 <malloc@plt>
   38154:	ldur	x8, [x29, #-16]
   38158:	str	x0, [x8, #248]
   3815c:	ldur	x8, [x29, #-16]
   38160:	ldr	x8, [x8, #216]
   38164:	mov	w10, #0x1                   	// #1
   38168:	str	w10, [sp, #12]
   3816c:	cbz	x8, 38184 <rpl_re_set_registers@@Base+0xb1e8>
   38170:	ldur	x8, [x29, #-16]
   38174:	ldr	x8, [x8, #248]
   38178:	cmp	x8, #0x0
   3817c:	cset	w9, eq  // eq = none
   38180:	str	w9, [sp, #12]
   38184:	ldr	w8, [sp, #12]
   38188:	and	w8, w8, #0x1
   3818c:	mov	w0, w8
   38190:	sxtw	x9, w0
   38194:	cbz	x9, 381a4 <rpl_re_set_registers@@Base+0xb208>
   38198:	mov	w8, #0xc                   	// #12
   3819c:	stur	w8, [x29, #-4]
   381a0:	b	381cc <rpl_re_set_registers@@Base+0xb230>
   381a4:	ldr	x8, [sp, #32]
   381a8:	ldur	x9, [x29, #-16]
   381ac:	str	x8, [x9, #208]
   381b0:	ldur	x8, [x29, #-16]
   381b4:	mov	w10, #0x1                   	// #1
   381b8:	str	w10, [x8, #224]
   381bc:	ldr	x8, [sp, #32]
   381c0:	ldur	x9, [x29, #-16]
   381c4:	str	x8, [x9, #240]
   381c8:	stur	wzr, [x29, #-4]
   381cc:	ldur	w0, [x29, #-4]
   381d0:	ldp	x29, x30, [sp, #64]
   381d4:	add	sp, sp, #0x50
   381d8:	ret
   381dc:	sub	sp, sp, #0xf0
   381e0:	stp	x29, x30, [sp, #224]
   381e4:	add	x29, sp, #0xe0
   381e8:	sub	x8, x29, #0x28
   381ec:	str	x0, [x8, #24]
   381f0:	str	x1, [x8, #16]
   381f4:	stur	w2, [x29, #-28]
   381f8:	ldr	x9, [x8, #24]
   381fc:	ldr	x9, [x9, #40]
   38200:	ldr	x10, [x8, #16]
   38204:	cmp	x9, x10
   38208:	cset	w11, le
   3820c:	and	w11, w11, #0x1
   38210:	mov	w0, w11
   38214:	sxtw	x9, w0
   38218:	str	x8, [sp, #40]
   3821c:	cbz	x9, 3823c <rpl_re_set_registers@@Base+0xb2a0>
   38220:	ldr	x8, [sp, #40]
   38224:	ldr	x9, [x8, #16]
   38228:	ldr	x10, [x8, #24]
   3822c:	ldr	x10, [x10, #40]
   38230:	subs	x9, x9, x10
   38234:	str	x9, [x8]
   38238:	b	382ec <rpl_re_set_registers@@Base+0xb350>
   3823c:	ldr	x8, [sp, #40]
   38240:	ldr	x9, [x8, #24]
   38244:	ldr	w10, [x9, #144]
   38248:	cmp	w10, #0x1
   3824c:	b.le	3825c <rpl_re_set_registers@@Base+0xb2c0>
   38250:	ldr	x8, [sp, #40]
   38254:	ldr	x9, [x8, #24]
   38258:	str	xzr, [x9, #32]
   3825c:	ldr	x8, [sp, #40]
   38260:	ldr	x9, [x8, #24]
   38264:	ldr	x9, [x9, #80]
   38268:	ldr	x10, [x8, #24]
   3826c:	str	x9, [x10, #88]
   38270:	ldr	x9, [x8, #24]
   38274:	ldr	x9, [x9, #96]
   38278:	ldr	x10, [x8, #24]
   3827c:	str	x9, [x10, #104]
   38280:	ldr	x9, [x8, #24]
   38284:	str	xzr, [x9, #48]
   38288:	ldr	x9, [x8, #24]
   3828c:	str	xzr, [x9, #40]
   38290:	ldr	x9, [x8, #24]
   38294:	str	xzr, [x9, #56]
   38298:	ldr	x9, [x8, #24]
   3829c:	mov	w11, #0x0                   	// #0
   382a0:	strb	w11, [x9, #140]
   382a4:	ldur	w11, [x29, #-28]
   382a8:	mov	w12, #0x6                   	// #6
   382ac:	mov	w13, #0x4                   	// #4
   382b0:	tst	w11, #0x1
   382b4:	csel	w11, w13, w12, ne  // ne = any
   382b8:	ldr	x9, [x8, #24]
   382bc:	str	w11, [x9, #112]
   382c0:	ldr	x9, [x8, #24]
   382c4:	ldrb	w11, [x9, #139]
   382c8:	cbnz	w11, 382e0 <rpl_re_set_registers@@Base+0xb344>
   382cc:	ldr	x8, [sp, #40]
   382d0:	ldr	x9, [x8, #24]
   382d4:	ldr	x9, [x9]
   382d8:	ldr	x10, [x8, #24]
   382dc:	str	x9, [x10, #8]
   382e0:	ldr	x8, [sp, #40]
   382e4:	ldr	x9, [x8, #16]
   382e8:	str	x9, [x8]
   382ec:	ldr	x8, [sp, #40]
   382f0:	ldr	x9, [x8]
   382f4:	cmp	x9, #0x0
   382f8:	cset	w10, ne  // ne = any
   382fc:	and	w10, w10, #0x1
   38300:	mov	w0, w10
   38304:	sxtw	x9, w0
   38308:	cbz	x9, 38d74 <rpl_re_set_registers@@Base+0xbdd8>
   3830c:	ldr	x8, [sp, #40]
   38310:	ldr	x9, [x8]
   38314:	ldr	x10, [x8, #24]
   38318:	ldr	x10, [x10, #56]
   3831c:	cmp	x9, x10
   38320:	cset	w11, lt  // lt = tstop
   38324:	and	w11, w11, #0x1
   38328:	mov	w0, w11
   3832c:	sxtw	x9, w0
   38330:	cbz	x9, 3882c <rpl_re_set_registers@@Base+0xb890>
   38334:	ldr	x8, [sp, #40]
   38338:	ldr	x9, [x8, #24]
   3833c:	ldrb	w10, [x9, #140]
   38340:	mov	w9, w10
   38344:	cbz	x9, 38744 <rpl_re_set_registers@@Base+0xb7a8>
   38348:	stur	xzr, [x29, #-48]
   3834c:	ldr	x8, [sp, #40]
   38350:	ldr	x9, [x8, #24]
   38354:	ldr	x9, [x9, #48]
   38358:	stur	x9, [x29, #-56]
   3835c:	ldur	x8, [x29, #-56]
   38360:	ldur	x9, [x29, #-48]
   38364:	add	x8, x8, x9
   38368:	mov	x9, #0x2                   	// #2
   3836c:	sdiv	x8, x8, x9
   38370:	stur	x8, [x29, #-64]
   38374:	ldr	x8, [sp, #40]
   38378:	ldr	x9, [x8, #24]
   3837c:	ldr	x9, [x9, #24]
   38380:	ldur	x10, [x29, #-64]
   38384:	ldr	x9, [x9, x10, lsl #3]
   38388:	ldr	x10, [x8]
   3838c:	cmp	x9, x10
   38390:	b.le	383a0 <rpl_re_set_registers@@Base+0xb404>
   38394:	ldur	x8, [x29, #-64]
   38398:	stur	x8, [x29, #-56]
   3839c:	b	383d4 <rpl_re_set_registers@@Base+0xb438>
   383a0:	ldr	x8, [sp, #40]
   383a4:	ldr	x9, [x8, #24]
   383a8:	ldr	x9, [x9, #24]
   383ac:	ldur	x10, [x29, #-64]
   383b0:	ldr	x9, [x9, x10, lsl #3]
   383b4:	ldr	x10, [x8]
   383b8:	cmp	x9, x10
   383bc:	b.ge	383d0 <rpl_re_set_registers@@Base+0xb434>  // b.tcont
   383c0:	ldur	x8, [x29, #-64]
   383c4:	add	x8, x8, #0x1
   383c8:	stur	x8, [x29, #-48]
   383cc:	b	383d4 <rpl_re_set_registers@@Base+0xb438>
   383d0:	b	383e4 <rpl_re_set_registers@@Base+0xb448>
   383d4:	ldur	x8, [x29, #-48]
   383d8:	ldur	x9, [x29, #-56]
   383dc:	cmp	x8, x9
   383e0:	b.lt	3835c <rpl_re_set_registers@@Base+0xb3c0>  // b.tstop
   383e4:	ldr	x8, [sp, #40]
   383e8:	ldr	x9, [x8, #24]
   383ec:	ldr	x9, [x9, #24]
   383f0:	ldur	x10, [x29, #-64]
   383f4:	ldr	x9, [x9, x10, lsl #3]
   383f8:	ldr	x10, [x8]
   383fc:	cmp	x9, x10
   38400:	b.ge	38410 <rpl_re_set_registers@@Base+0xb474>  // b.tcont
   38404:	ldur	x8, [x29, #-64]
   38408:	add	x8, x8, #0x1
   3840c:	stur	x8, [x29, #-64]
   38410:	ldr	x8, [sp, #40]
   38414:	ldr	x0, [x8, #24]
   38418:	ldur	x9, [x29, #-64]
   3841c:	subs	x1, x9, #0x1
   38420:	ldur	w2, [x29, #-28]
   38424:	bl	39dbc <rpl_re_set_registers@@Base+0xce20>
   38428:	ldr	x8, [sp, #40]
   3842c:	ldr	x9, [x8, #24]
   38430:	str	w0, [x9, #112]
   38434:	ldr	x9, [x8, #24]
   38438:	ldr	x9, [x9, #48]
   3843c:	ldr	x10, [x8]
   38440:	cmp	x9, x10
   38444:	b.le	3857c <rpl_re_set_registers@@Base+0xb5e0>
   38448:	ldur	x8, [x29, #-64]
   3844c:	ldr	x9, [sp, #40]
   38450:	ldr	x10, [x9]
   38454:	cmp	x8, x10
   38458:	b.ne	3857c <rpl_re_set_registers@@Base+0xb5e0>  // b.any
   3845c:	ldr	x8, [sp, #40]
   38460:	ldr	x9, [x8, #24]
   38464:	ldr	x9, [x9, #24]
   38468:	ldur	x10, [x29, #-64]
   3846c:	ldr	x9, [x9, x10, lsl #3]
   38470:	ldr	x10, [x8]
   38474:	cmp	x9, x10
   38478:	b.ne	3857c <rpl_re_set_registers@@Base+0xb5e0>  // b.any
   3847c:	ldr	x8, [sp, #40]
   38480:	ldr	x9, [x8, #24]
   38484:	ldr	x0, [x9, #16]
   38488:	ldr	x9, [x8, #24]
   3848c:	ldr	x9, [x9, #16]
   38490:	ldr	x10, [x8]
   38494:	mov	x11, #0x4                   	// #4
   38498:	mul	x10, x11, x10
   3849c:	add	x1, x9, x10
   384a0:	ldr	x9, [x8, #24]
   384a4:	ldr	x9, [x9, #48]
   384a8:	ldr	x10, [x8]
   384ac:	subs	x9, x9, x10
   384b0:	mov	x10, #0x4                   	// #4
   384b4:	mul	x2, x9, x10
   384b8:	bl	af70 <memmove@plt>
   384bc:	ldr	x8, [sp, #40]
   384c0:	ldr	x9, [x8, #24]
   384c4:	ldr	x0, [x9, #8]
   384c8:	ldr	x9, [x8, #24]
   384cc:	ldr	x9, [x9, #8]
   384d0:	ldr	x10, [x8]
   384d4:	add	x1, x9, x10
   384d8:	ldr	x9, [x8, #24]
   384dc:	ldr	x9, [x9, #48]
   384e0:	ldr	x10, [x8]
   384e4:	subs	x2, x9, x10
   384e8:	bl	af70 <memmove@plt>
   384ec:	ldr	x8, [sp, #40]
   384f0:	ldr	x9, [x8]
   384f4:	ldr	x10, [x8, #24]
   384f8:	ldr	x11, [x10, #48]
   384fc:	subs	x9, x11, x9
   38500:	str	x9, [x10, #48]
   38504:	ldr	x9, [x8]
   38508:	ldr	x10, [x8, #24]
   3850c:	ldr	x11, [x10, #56]
   38510:	subs	x9, x11, x9
   38514:	str	x9, [x10, #56]
   38518:	stur	xzr, [x29, #-48]
   3851c:	ldur	x8, [x29, #-48]
   38520:	ldr	x9, [sp, #40]
   38524:	ldr	x10, [x9, #24]
   38528:	ldr	x10, [x10, #48]
   3852c:	cmp	x8, x10
   38530:	b.ge	38578 <rpl_re_set_registers@@Base+0xb5dc>  // b.tcont
   38534:	ldr	x8, [sp, #40]
   38538:	ldr	x9, [x8, #24]
   3853c:	ldr	x9, [x9, #24]
   38540:	ldur	x10, [x29, #-48]
   38544:	ldr	x11, [x8]
   38548:	add	x10, x10, x11
   3854c:	ldr	x9, [x9, x10, lsl #3]
   38550:	ldr	x10, [x8]
   38554:	subs	x9, x9, x10
   38558:	ldr	x10, [x8, #24]
   3855c:	ldr	x10, [x10, #24]
   38560:	ldur	x11, [x29, #-48]
   38564:	str	x9, [x10, x11, lsl #3]
   38568:	ldur	x8, [x29, #-48]
   3856c:	add	x8, x8, #0x1
   38570:	stur	x8, [x29, #-48]
   38574:	b	3851c <rpl_re_set_registers@@Base+0xb580>
   38578:	b	38740 <rpl_re_set_registers@@Base+0xb7a4>
   3857c:	ldr	x8, [sp, #40]
   38580:	ldr	x9, [x8, #24]
   38584:	ldr	x9, [x9, #80]
   38588:	ldr	x10, [x8, #16]
   3858c:	subs	x9, x9, x10
   38590:	ldr	x10, [x8]
   38594:	add	x9, x9, x10
   38598:	ldr	x10, [x8, #24]
   3859c:	str	x9, [x10, #88]
   385a0:	ldr	x9, [x8, #24]
   385a4:	ldr	x9, [x9, #96]
   385a8:	ldr	x10, [x8, #16]
   385ac:	subs	x9, x9, x10
   385b0:	ldr	x10, [x8]
   385b4:	add	x9, x9, x10
   385b8:	ldr	x10, [x8, #24]
   385bc:	str	x9, [x10, #104]
   385c0:	ldr	x9, [x8, #24]
   385c4:	mov	w11, #0x0                   	// #0
   385c8:	strb	w11, [x9, #140]
   385cc:	ldur	x8, [x29, #-64]
   385d0:	cmp	x8, #0x0
   385d4:	cset	w9, le
   385d8:	mov	w10, #0x0                   	// #0
   385dc:	str	w10, [sp, #36]
   385e0:	tbnz	w9, #0, 3860c <rpl_re_set_registers@@Base+0xb670>
   385e4:	ldr	x8, [sp, #40]
   385e8:	ldr	x9, [x8, #24]
   385ec:	ldr	x9, [x9, #24]
   385f0:	ldur	x10, [x29, #-64]
   385f4:	subs	x10, x10, #0x1
   385f8:	ldr	x9, [x9, x10, lsl #3]
   385fc:	ldr	x10, [x8]
   38600:	cmp	x9, x10
   38604:	cset	w11, eq  // eq = none
   38608:	str	w11, [sp, #36]
   3860c:	ldr	w8, [sp, #36]
   38610:	tbnz	w8, #0, 38618 <rpl_re_set_registers@@Base+0xb67c>
   38614:	b	38628 <rpl_re_set_registers@@Base+0xb68c>
   38618:	ldur	x8, [x29, #-64]
   3861c:	subs	x8, x8, #0x1
   38620:	stur	x8, [x29, #-64]
   38624:	b	385cc <rpl_re_set_registers@@Base+0xb630>
   38628:	ldur	x8, [x29, #-64]
   3862c:	ldr	x9, [sp, #40]
   38630:	ldr	x10, [x9, #24]
   38634:	ldr	x10, [x10, #48]
   38638:	cmp	x8, x10
   3863c:	b.ge	38674 <rpl_re_set_registers@@Base+0xb6d8>  // b.tcont
   38640:	ldr	x8, [sp, #40]
   38644:	ldr	x9, [x8, #24]
   38648:	ldr	x9, [x9, #16]
   3864c:	ldur	x10, [x29, #-64]
   38650:	ldr	w11, [x9, x10, lsl #2]
   38654:	mov	w12, #0xffffffff            	// #-1
   38658:	cmp	w11, w12
   3865c:	b.eq	38664 <rpl_re_set_registers@@Base+0xb6c8>  // b.none
   38660:	b	38674 <rpl_re_set_registers@@Base+0xb6d8>
   38664:	ldur	x8, [x29, #-64]
   38668:	add	x8, x8, #0x1
   3866c:	stur	x8, [x29, #-64]
   38670:	b	38628 <rpl_re_set_registers@@Base+0xb68c>
   38674:	ldur	x8, [x29, #-64]
   38678:	ldr	x9, [sp, #40]
   3867c:	ldr	x10, [x9, #24]
   38680:	ldr	x10, [x10, #48]
   38684:	cmp	x8, x10
   38688:	b.ne	3869c <rpl_re_set_registers@@Base+0xb700>  // b.any
   3868c:	ldr	x8, [sp, #40]
   38690:	ldr	x9, [x8, #24]
   38694:	str	xzr, [x9, #48]
   38698:	b	3872c <rpl_re_set_registers@@Base+0xb790>
   3869c:	ldr	x8, [sp, #40]
   386a0:	ldr	x9, [x8, #24]
   386a4:	ldr	x9, [x9, #24]
   386a8:	ldur	x10, [x29, #-64]
   386ac:	ldr	x9, [x9, x10, lsl #3]
   386b0:	ldr	x10, [x8]
   386b4:	subs	x9, x9, x10
   386b8:	ldr	x10, [x8, #24]
   386bc:	str	x9, [x10, #48]
   386c0:	ldr	x9, [x8, #24]
   386c4:	ldr	x9, [x9, #48]
   386c8:	cbz	x9, 3872c <rpl_re_set_registers@@Base+0xb790>
   386cc:	stur	xzr, [x29, #-48]
   386d0:	ldur	x8, [x29, #-48]
   386d4:	ldr	x9, [sp, #40]
   386d8:	ldr	x10, [x9, #24]
   386dc:	ldr	x10, [x10, #48]
   386e0:	cmp	x8, x10
   386e4:	b.ge	38710 <rpl_re_set_registers@@Base+0xb774>  // b.tcont
   386e8:	ldr	x8, [sp, #40]
   386ec:	ldr	x9, [x8, #24]
   386f0:	ldr	x9, [x9, #16]
   386f4:	ldur	x10, [x29, #-48]
   386f8:	mov	w11, #0xffffffff            	// #-1
   386fc:	str	w11, [x9, x10, lsl #2]
   38700:	ldur	x8, [x29, #-48]
   38704:	add	x8, x8, #0x1
   38708:	stur	x8, [x29, #-48]
   3870c:	b	386d0 <rpl_re_set_registers@@Base+0xb734>
   38710:	ldr	x8, [sp, #40]
   38714:	ldr	x9, [x8, #24]
   38718:	ldr	x0, [x9, #8]
   3871c:	ldr	x9, [x8, #24]
   38720:	ldr	x2, [x9, #48]
   38724:	mov	w1, #0xffffffff            	// #-1
   38728:	bl	a970 <memset@plt>
   3872c:	ldr	x8, [sp, #40]
   38730:	ldr	x9, [x8, #24]
   38734:	ldr	x9, [x9, #48]
   38738:	ldr	x10, [x8, #24]
   3873c:	str	x9, [x10, #56]
   38740:	b	38828 <rpl_re_set_registers@@Base+0xb88c>
   38744:	ldr	x8, [sp, #40]
   38748:	ldr	x0, [x8, #24]
   3874c:	ldr	x9, [x8]
   38750:	subs	x1, x9, #0x1
   38754:	ldur	w2, [x29, #-28]
   38758:	bl	39dbc <rpl_re_set_registers@@Base+0xce20>
   3875c:	ldr	x8, [sp, #40]
   38760:	ldr	x9, [x8, #24]
   38764:	str	w0, [x9, #112]
   38768:	ldr	x9, [x8, #24]
   3876c:	ldr	w10, [x9, #144]
   38770:	cmp	w10, #0x1
   38774:	b.le	387b8 <rpl_re_set_registers@@Base+0xb81c>
   38778:	ldr	x8, [sp, #40]
   3877c:	ldr	x9, [x8, #24]
   38780:	ldr	x0, [x9, #16]
   38784:	ldr	x9, [x8, #24]
   38788:	ldr	x9, [x9, #16]
   3878c:	ldr	x10, [x8]
   38790:	mov	x11, #0x4                   	// #4
   38794:	mul	x10, x11, x10
   38798:	add	x1, x9, x10
   3879c:	ldr	x9, [x8, #24]
   387a0:	ldr	x9, [x9, #48]
   387a4:	ldr	x10, [x8]
   387a8:	subs	x9, x9, x10
   387ac:	mov	x10, #0x4                   	// #4
   387b0:	mul	x2, x9, x10
   387b4:	bl	af70 <memmove@plt>
   387b8:	ldr	x8, [sp, #40]
   387bc:	ldr	x9, [x8, #24]
   387c0:	ldrb	w10, [x9, #139]
   387c4:	mov	w9, w10
   387c8:	cbz	x9, 387fc <rpl_re_set_registers@@Base+0xb860>
   387cc:	ldr	x8, [sp, #40]
   387d0:	ldr	x9, [x8, #24]
   387d4:	ldr	x0, [x9, #8]
   387d8:	ldr	x9, [x8, #24]
   387dc:	ldr	x9, [x9, #8]
   387e0:	ldr	x10, [x8]
   387e4:	add	x1, x9, x10
   387e8:	ldr	x9, [x8, #24]
   387ec:	ldr	x9, [x9, #48]
   387f0:	ldr	x10, [x8]
   387f4:	subs	x2, x9, x10
   387f8:	bl	af70 <memmove@plt>
   387fc:	ldr	x8, [sp, #40]
   38800:	ldr	x9, [x8]
   38804:	ldr	x10, [x8, #24]
   38808:	ldr	x11, [x10, #48]
   3880c:	subs	x9, x11, x9
   38810:	str	x9, [x10, #48]
   38814:	ldr	x9, [x8]
   38818:	ldr	x10, [x8, #24]
   3881c:	ldr	x11, [x10, #56]
   38820:	subs	x9, x11, x9
   38824:	str	x9, [x10, #56]
   38828:	b	38d48 <rpl_re_set_registers@@Base+0xbdac>
   3882c:	ldr	x8, [sp, #40]
   38830:	ldr	x9, [x8, #24]
   38834:	ldr	x9, [x9, #48]
   38838:	stur	x9, [x29, #-72]
   3883c:	ldr	x9, [x8, #24]
   38840:	ldrb	w10, [x9, #140]
   38844:	mov	w9, w10
   38848:	cbz	x9, 3889c <rpl_re_set_registers@@Base+0xb900>
   3884c:	ldr	x8, [sp, #40]
   38850:	ldr	x9, [x8, #24]
   38854:	ldr	x9, [x9, #80]
   38858:	ldr	x10, [x8, #16]
   3885c:	subs	x9, x9, x10
   38860:	ldr	x10, [x8]
   38864:	add	x9, x9, x10
   38868:	ldr	x10, [x8, #24]
   3886c:	str	x9, [x10, #88]
   38870:	ldr	x9, [x8, #24]
   38874:	ldr	x9, [x9, #96]
   38878:	ldr	x10, [x8, #16]
   3887c:	subs	x9, x9, x10
   38880:	ldr	x10, [x8]
   38884:	add	x9, x9, x10
   38888:	ldr	x10, [x8, #24]
   3888c:	str	x9, [x10, #104]
   38890:	ldr	x9, [x8, #24]
   38894:	mov	w11, #0x0                   	// #0
   38898:	strb	w11, [x9, #140]
   3889c:	ldr	x8, [sp, #40]
   388a0:	ldr	x9, [x8, #24]
   388a4:	str	xzr, [x9, #48]
   388a8:	ldr	x9, [x8, #24]
   388ac:	ldr	w10, [x9, #144]
   388b0:	cmp	w10, #0x1
   388b4:	b.le	38c78 <rpl_re_set_registers@@Base+0xbcdc>
   388b8:	mov	w8, #0xffffffff            	// #-1
   388bc:	stur	w8, [x29, #-84]
   388c0:	ldr	x9, [sp, #40]
   388c4:	ldr	x10, [x9, #24]
   388c8:	ldrb	w8, [x10, #137]
   388cc:	cbz	w8, 38ad4 <rpl_re_set_registers@@Base+0xbb38>
   388d0:	ldr	x8, [sp, #40]
   388d4:	ldr	x9, [x8, #24]
   388d8:	ldr	x9, [x9]
   388dc:	ldr	x10, [x8, #24]
   388e0:	ldr	x10, [x10, #40]
   388e4:	add	x9, x9, x10
   388e8:	stur	x9, [x29, #-96]
   388ec:	ldur	x9, [x29, #-96]
   388f0:	ldr	x10, [x8]
   388f4:	ldr	x11, [x8, #24]
   388f8:	ldrsw	x11, [x11, #144]
   388fc:	subs	x10, x10, x11
   38900:	add	x9, x9, x10
   38904:	str	x9, [sp, #112]
   38908:	ldr	x9, [sp, #112]
   3890c:	ldr	x10, [x8, #24]
   38910:	ldr	x10, [x10]
   38914:	cmp	x9, x10
   38918:	b.cs	3892c <rpl_re_set_registers@@Base+0xb990>  // b.hs, b.nlast
   3891c:	ldr	x8, [sp, #40]
   38920:	ldr	x9, [x8, #24]
   38924:	ldr	x9, [x9]
   38928:	str	x9, [sp, #112]
   3892c:	ldur	x8, [x29, #-96]
   38930:	ldr	x9, [sp, #40]
   38934:	ldr	x10, [x9]
   38938:	add	x8, x8, x10
   3893c:	mov	x10, #0xffffffffffffffff    	// #-1
   38940:	add	x8, x8, x10
   38944:	stur	x8, [x29, #-104]
   38948:	ldur	x8, [x29, #-104]
   3894c:	ldr	x9, [sp, #112]
   38950:	cmp	x8, x9
   38954:	b.cc	38ad4 <rpl_re_set_registers@@Base+0xbb38>  // b.lo, b.ul, b.last
   38958:	ldur	x8, [x29, #-104]
   3895c:	ldrb	w9, [x8]
   38960:	and	w9, w9, #0xc0
   38964:	cmp	w9, #0x80
   38968:	b.eq	38ac0 <rpl_re_set_registers@@Base+0xbb24>  // b.none
   3896c:	ldur	x8, [x29, #-96]
   38970:	ldr	x9, [sp, #40]
   38974:	ldr	x10, [x9, #24]
   38978:	ldr	x10, [x10, #88]
   3897c:	add	x8, x8, x10
   38980:	ldur	x10, [x29, #-104]
   38984:	subs	x8, x8, x10
   38988:	str	x8, [sp, #88]
   3898c:	ldur	x8, [x29, #-104]
   38990:	str	x8, [sp, #64]
   38994:	ldr	x8, [x9, #24]
   38998:	ldr	x8, [x8, #120]
   3899c:	cmp	x8, #0x0
   389a0:	cset	w11, ne  // ne = any
   389a4:	and	w11, w11, #0x1
   389a8:	mov	w0, w11
   389ac:	sxtw	x8, w0
   389b0:	cbz	x8, 38a34 <rpl_re_set_registers@@Base+0xba98>
   389b4:	ldr	x8, [sp, #88]
   389b8:	cmp	x8, #0x6
   389bc:	b.ge	389cc <rpl_re_set_registers@@Base+0xba30>  // b.tcont
   389c0:	ldr	x8, [sp, #88]
   389c4:	str	x8, [sp, #24]
   389c8:	b	389d4 <rpl_re_set_registers@@Base+0xba38>
   389cc:	mov	x8, #0x6                   	// #6
   389d0:	str	x8, [sp, #24]
   389d4:	ldr	x8, [sp, #24]
   389d8:	str	w8, [sp, #60]
   389dc:	ldr	w8, [sp, #60]
   389e0:	subs	w8, w8, #0x1
   389e4:	str	w8, [sp, #60]
   389e8:	cmp	w8, #0x0
   389ec:	cset	w8, lt  // lt = tstop
   389f0:	tbnz	w8, #0, 38a2c <rpl_re_set_registers@@Base+0xba90>
   389f4:	ldr	x8, [sp, #40]
   389f8:	ldr	x9, [x8, #24]
   389fc:	ldr	x9, [x9, #120]
   38a00:	ldur	x10, [x29, #-104]
   38a04:	ldrsw	x11, [sp, #60]
   38a08:	ldrb	w12, [x10, x11]
   38a0c:	mov	w10, w12
   38a10:	add	x9, x9, x10
   38a14:	ldrb	w12, [x9]
   38a18:	ldrsw	x9, [sp, #60]
   38a1c:	add	x10, sp, #0x52
   38a20:	add	x9, x10, x9
   38a24:	strb	w12, [x9]
   38a28:	b	389dc <rpl_re_set_registers@@Base+0xba40>
   38a2c:	add	x8, sp, #0x52
   38a30:	str	x8, [sp, #64]
   38a34:	add	x3, sp, #0x68
   38a38:	str	xzr, [sp, #104]
   38a3c:	ldr	x1, [sp, #64]
   38a40:	ldr	x2, [sp, #88]
   38a44:	add	x0, sp, #0x64
   38a48:	bl	b7e0 <rpl_mbrtowc@plt>
   38a4c:	str	x0, [sp, #72]
   38a50:	ldur	x8, [x29, #-96]
   38a54:	ldr	x9, [sp, #40]
   38a58:	ldr	x10, [x9]
   38a5c:	add	x8, x8, x10
   38a60:	ldur	x10, [x29, #-104]
   38a64:	subs	x8, x8, x10
   38a68:	ldr	x10, [sp, #72]
   38a6c:	cmp	x8, x10
   38a70:	b.hi	38abc <rpl_re_set_registers@@Base+0xbb20>  // b.pmore
   38a74:	ldr	x8, [sp, #72]
   38a78:	mov	x9, #0xfffffffffffffffe    	// #-2
   38a7c:	cmp	x8, x9
   38a80:	b.cs	38abc <rpl_re_set_registers@@Base+0xbb20>  // b.hs, b.nlast
   38a84:	ldr	x8, [sp, #40]
   38a88:	ldr	x9, [x8, #24]
   38a8c:	str	xzr, [x9, #32]
   38a90:	ldr	x9, [sp, #72]
   38a94:	ldur	x10, [x29, #-96]
   38a98:	ldr	x11, [x8]
   38a9c:	add	x10, x10, x11
   38aa0:	ldur	x11, [x29, #-104]
   38aa4:	subs	x10, x10, x11
   38aa8:	subs	x9, x9, x10
   38aac:	ldr	x10, [x8, #24]
   38ab0:	str	x9, [x10, #48]
   38ab4:	ldr	w12, [sp, #100]
   38ab8:	stur	w12, [x29, #-84]
   38abc:	b	38ad4 <rpl_re_set_registers@@Base+0xbb38>
   38ac0:	ldur	x8, [x29, #-104]
   38ac4:	mov	x9, #0xffffffffffffffff    	// #-1
   38ac8:	add	x8, x8, x9
   38acc:	stur	x8, [x29, #-104]
   38ad0:	b	38948 <rpl_re_set_registers@@Base+0xb9ac>
   38ad4:	ldur	w8, [x29, #-84]
   38ad8:	mov	w9, #0xffffffff            	// #-1
   38adc:	cmp	w8, w9
   38ae0:	b.ne	38b0c <rpl_re_set_registers@@Base+0xbb70>  // b.any
   38ae4:	ldr	x8, [sp, #40]
   38ae8:	ldr	x0, [x8, #24]
   38aec:	ldr	x1, [x8, #16]
   38af0:	sub	x2, x29, #0x54
   38af4:	bl	39fc8 <rpl_re_set_registers@@Base+0xd02c>
   38af8:	ldr	x8, [sp, #40]
   38afc:	ldr	x9, [x8, #16]
   38b00:	subs	x9, x0, x9
   38b04:	ldr	x10, [x8, #24]
   38b08:	str	x9, [x10, #48]
   38b0c:	ldur	w8, [x29, #-84]
   38b10:	mov	w9, #0xffffffff            	// #-1
   38b14:	cmp	w8, w9
   38b18:	b.ne	38b44 <rpl_re_set_registers@@Base+0xbba8>  // b.any
   38b1c:	ldr	x8, [sp, #40]
   38b20:	ldr	x0, [x8, #24]
   38b24:	ldur	x9, [x29, #-72]
   38b28:	subs	x1, x9, #0x1
   38b2c:	ldur	w2, [x29, #-28]
   38b30:	bl	39dbc <rpl_re_set_registers@@Base+0xce20>
   38b34:	ldr	x8, [sp, #40]
   38b38:	ldr	x9, [x8, #24]
   38b3c:	str	w0, [x9, #112]
   38b40:	b	38be0 <rpl_re_set_registers@@Base+0xbc44>
   38b44:	ldr	x8, [sp, #40]
   38b48:	ldr	x9, [x8, #24]
   38b4c:	ldrb	w10, [x9, #142]
   38b50:	cmp	w10, #0x0
   38b54:	cset	w10, ne  // ne = any
   38b58:	and	w10, w10, #0x1
   38b5c:	mov	w0, w10
   38b60:	sxtw	x9, w0
   38b64:	cbz	x9, 38b8c <rpl_re_set_registers@@Base+0xbbf0>
   38b68:	ldur	w0, [x29, #-84]
   38b6c:	bl	b880 <iswalnum@plt>
   38b70:	cbnz	w0, 38b80 <rpl_re_set_registers@@Base+0xbbe4>
   38b74:	ldur	w8, [x29, #-84]
   38b78:	cmp	w8, #0x5f
   38b7c:	b.ne	38b8c <rpl_re_set_registers@@Base+0xbbf0>  // b.any
   38b80:	mov	w8, #0x1                   	// #1
   38b84:	str	w8, [sp, #20]
   38b88:	b	38bd0 <rpl_re_set_registers@@Base+0xbc34>
   38b8c:	ldur	w8, [x29, #-84]
   38b90:	mov	w9, #0x0                   	// #0
   38b94:	cmp	w8, #0xa
   38b98:	str	w9, [sp, #16]
   38b9c:	b.ne	38bb8 <rpl_re_set_registers@@Base+0xbc1c>  // b.any
   38ba0:	ldr	x8, [sp, #40]
   38ba4:	ldr	x9, [x8, #24]
   38ba8:	ldrb	w10, [x9, #141]
   38bac:	cmp	w10, #0x0
   38bb0:	cset	w10, ne  // ne = any
   38bb4:	str	w10, [sp, #16]
   38bb8:	ldr	w8, [sp, #16]
   38bbc:	mov	w9, #0x2                   	// #2
   38bc0:	mov	w10, wzr
   38bc4:	tst	w8, #0x1
   38bc8:	csel	w8, w9, w10, ne  // ne = any
   38bcc:	str	w8, [sp, #20]
   38bd0:	ldr	w8, [sp, #20]
   38bd4:	ldr	x9, [sp, #40]
   38bd8:	ldr	x10, [x9, #24]
   38bdc:	str	w8, [x10, #112]
   38be0:	ldr	x8, [sp, #40]
   38be4:	ldr	x9, [x8, #24]
   38be8:	ldr	x9, [x9, #48]
   38bec:	cbz	x9, 38c60 <rpl_re_set_registers@@Base+0xbcc4>
   38bf0:	stur	xzr, [x29, #-80]
   38bf4:	ldur	x8, [x29, #-80]
   38bf8:	ldr	x9, [sp, #40]
   38bfc:	ldr	x10, [x9, #24]
   38c00:	ldr	x10, [x10, #48]
   38c04:	cmp	x8, x10
   38c08:	b.ge	38c34 <rpl_re_set_registers@@Base+0xbc98>  // b.tcont
   38c0c:	ldr	x8, [sp, #40]
   38c10:	ldr	x9, [x8, #24]
   38c14:	ldr	x9, [x9, #16]
   38c18:	ldur	x10, [x29, #-80]
   38c1c:	mov	w11, #0xffffffff            	// #-1
   38c20:	str	w11, [x9, x10, lsl #2]
   38c24:	ldur	x8, [x29, #-80]
   38c28:	add	x8, x8, #0x1
   38c2c:	stur	x8, [x29, #-80]
   38c30:	b	38bf4 <rpl_re_set_registers@@Base+0xbc58>
   38c34:	ldr	x8, [sp, #40]
   38c38:	ldr	x9, [x8, #24]
   38c3c:	ldrb	w10, [x9, #139]
   38c40:	cbz	w10, 38c60 <rpl_re_set_registers@@Base+0xbcc4>
   38c44:	ldr	x8, [sp, #40]
   38c48:	ldr	x9, [x8, #24]
   38c4c:	ldr	x0, [x9, #8]
   38c50:	ldr	x9, [x8, #24]
   38c54:	ldr	x2, [x9, #48]
   38c58:	mov	w1, #0xffffffff            	// #-1
   38c5c:	bl	a970 <memset@plt>
   38c60:	ldr	x8, [sp, #40]
   38c64:	ldr	x9, [x8, #24]
   38c68:	ldr	x9, [x9, #48]
   38c6c:	ldr	x10, [x8, #24]
   38c70:	str	x9, [x10, #56]
   38c74:	b	38d48 <rpl_re_set_registers@@Base+0xbdac>
   38c78:	ldr	x8, [sp, #40]
   38c7c:	ldr	x9, [x8, #24]
   38c80:	ldr	x9, [x9]
   38c84:	ldr	x10, [x8, #24]
   38c88:	ldr	x10, [x10, #40]
   38c8c:	ldr	x11, [x8]
   38c90:	add	x10, x10, x11
   38c94:	subs	x10, x10, #0x1
   38c98:	ldrb	w12, [x9, x10]
   38c9c:	str	w12, [sp, #56]
   38ca0:	ldr	x9, [x8, #24]
   38ca4:	str	xzr, [x9, #56]
   38ca8:	ldr	x9, [x8, #24]
   38cac:	ldr	x9, [x9, #120]
   38cb0:	cbz	x9, 38ccc <rpl_re_set_registers@@Base+0xbd30>
   38cb4:	ldr	x8, [sp, #40]
   38cb8:	ldr	x9, [x8, #24]
   38cbc:	ldr	x9, [x9, #120]
   38cc0:	ldrsw	x10, [sp, #56]
   38cc4:	ldrb	w11, [x9, x10]
   38cc8:	str	w11, [sp, #56]
   38ccc:	ldr	x8, [sp, #40]
   38cd0:	ldr	x9, [x8, #24]
   38cd4:	ldr	x0, [x9, #128]
   38cd8:	ldrsw	x1, [sp, #56]
   38cdc:	bl	3a128 <rpl_re_set_registers@@Base+0xd18c>
   38ce0:	tbnz	w0, #0, 38ce8 <rpl_re_set_registers@@Base+0xbd4c>
   38ce4:	b	38cf4 <rpl_re_set_registers@@Base+0xbd58>
   38ce8:	mov	w8, #0x1                   	// #1
   38cec:	str	w8, [sp, #12]
   38cf0:	b	38d38 <rpl_re_set_registers@@Base+0xbd9c>
   38cf4:	ldr	w8, [sp, #56]
   38cf8:	mov	w9, #0x0                   	// #0
   38cfc:	cmp	w8, #0xa
   38d00:	str	w9, [sp, #8]
   38d04:	b.ne	38d20 <rpl_re_set_registers@@Base+0xbd84>  // b.any
   38d08:	ldr	x8, [sp, #40]
   38d0c:	ldr	x9, [x8, #24]
   38d10:	ldrb	w10, [x9, #141]
   38d14:	cmp	w10, #0x0
   38d18:	cset	w10, ne  // ne = any
   38d1c:	str	w10, [sp, #8]
   38d20:	ldr	w8, [sp, #8]
   38d24:	mov	w9, #0x2                   	// #2
   38d28:	mov	w10, wzr
   38d2c:	tst	w8, #0x1
   38d30:	csel	w8, w9, w10, ne  // ne = any
   38d34:	str	w8, [sp, #12]
   38d38:	ldr	w8, [sp, #12]
   38d3c:	ldr	x9, [sp, #40]
   38d40:	ldr	x10, [x9, #24]
   38d44:	str	w8, [x10, #112]
   38d48:	ldr	x8, [sp, #40]
   38d4c:	ldr	x9, [x8, #24]
   38d50:	ldrb	w10, [x9, #139]
   38d54:	mov	w9, w10
   38d58:	cbnz	x9, 38d74 <rpl_re_set_registers@@Base+0xbdd8>
   38d5c:	ldr	x8, [sp, #40]
   38d60:	ldr	x9, [x8]
   38d64:	ldr	x10, [x8, #24]
   38d68:	ldr	x11, [x10, #8]
   38d6c:	add	x9, x11, x9
   38d70:	str	x9, [x10, #8]
   38d74:	ldr	x8, [sp, #40]
   38d78:	ldr	x9, [x8, #16]
   38d7c:	ldr	x10, [x8, #24]
   38d80:	str	x9, [x10, #40]
   38d84:	ldr	x9, [x8]
   38d88:	ldr	x10, [x8, #24]
   38d8c:	ldr	x11, [x10, #88]
   38d90:	subs	x9, x11, x9
   38d94:	str	x9, [x10, #88]
   38d98:	ldr	x9, [x8]
   38d9c:	ldr	x10, [x8, #24]
   38da0:	ldr	x11, [x10, #104]
   38da4:	subs	x9, x11, x9
   38da8:	str	x9, [x10, #104]
   38dac:	ldr	x9, [x8, #24]
   38db0:	ldr	w12, [x9, #144]
   38db4:	cmp	w12, #0x1
   38db8:	b.le	38e18 <rpl_re_set_registers@@Base+0xbe7c>
   38dbc:	ldr	x8, [sp, #40]
   38dc0:	ldr	x9, [x8, #24]
   38dc4:	ldrb	w10, [x9, #136]
   38dc8:	cbz	w10, 38e08 <rpl_re_set_registers@@Base+0xbe6c>
   38dcc:	ldr	x8, [sp, #40]
   38dd0:	ldr	x0, [x8, #24]
   38dd4:	bl	2e8dc <rpl_re_set_registers@@Base+0x1940>
   38dd8:	str	w0, [sp, #52]
   38ddc:	ldr	w9, [sp, #52]
   38de0:	cmp	w9, #0x0
   38de4:	cset	w9, ne  // ne = any
   38de8:	and	w9, w9, #0x1
   38dec:	mov	w1, w9
   38df0:	sxtw	x8, w1
   38df4:	cbz	x8, 38e04 <rpl_re_set_registers@@Base+0xbe68>
   38df8:	ldr	w8, [sp, #52]
   38dfc:	stur	w8, [x29, #-4]
   38e00:	b	38e90 <rpl_re_set_registers@@Base+0xbef4>
   38e04:	b	38e14 <rpl_re_set_registers@@Base+0xbe78>
   38e08:	ldr	x8, [sp, #40]
   38e0c:	ldr	x0, [x8, #24]
   38e10:	bl	2f5d4 <rpl_re_set_registers@@Base+0x2638>
   38e14:	b	38e80 <rpl_re_set_registers@@Base+0xbee4>
   38e18:	ldr	x8, [sp, #40]
   38e1c:	ldr	x9, [x8, #24]
   38e20:	ldrb	w10, [x9, #139]
   38e24:	mov	w9, w10
   38e28:	cbz	x9, 38e6c <rpl_re_set_registers@@Base+0xbed0>
   38e2c:	ldr	x8, [sp, #40]
   38e30:	ldr	x9, [x8, #24]
   38e34:	ldrb	w10, [x9, #136]
   38e38:	cbz	w10, 38e4c <rpl_re_set_registers@@Base+0xbeb0>
   38e3c:	ldr	x8, [sp, #40]
   38e40:	ldr	x0, [x8, #24]
   38e44:	bl	2f4c8 <rpl_re_set_registers@@Base+0x252c>
   38e48:	b	38e68 <rpl_re_set_registers@@Base+0xbecc>
   38e4c:	ldr	x8, [sp, #40]
   38e50:	ldr	x9, [x8, #24]
   38e54:	ldr	x9, [x9, #120]
   38e58:	cbz	x9, 38e68 <rpl_re_set_registers@@Base+0xbecc>
   38e5c:	ldr	x8, [sp, #40]
   38e60:	ldr	x0, [x8, #24]
   38e64:	bl	2f918 <rpl_re_set_registers@@Base+0x297c>
   38e68:	b	38e80 <rpl_re_set_registers@@Base+0xbee4>
   38e6c:	ldr	x8, [sp, #40]
   38e70:	ldr	x9, [x8, #24]
   38e74:	ldr	x9, [x9, #88]
   38e78:	ldr	x10, [x8, #24]
   38e7c:	str	x9, [x10, #48]
   38e80:	ldr	x8, [sp, #40]
   38e84:	ldr	x9, [x8, #24]
   38e88:	str	xzr, [x9, #72]
   38e8c:	stur	wzr, [x29, #-4]
   38e90:	ldur	w0, [x29, #-4]
   38e94:	ldp	x29, x30, [sp, #224]
   38e98:	add	sp, sp, #0xf0
   38e9c:	ret
   38ea0:	sub	sp, sp, #0xb0
   38ea4:	stp	x29, x30, [sp, #160]
   38ea8:	add	x29, sp, #0xa0
   38eac:	mov	x8, #0xffffffffffffffff    	// #-1
   38eb0:	mov	w9, #0x1                   	// #1
   38eb4:	add	x10, sp, #0x44
   38eb8:	stur	x0, [x29, #-64]
   38ebc:	and	w11, w1, w9
   38ec0:	sturb	w11, [x29, #-65]
   38ec4:	str	x2, [sp, #80]
   38ec8:	ldur	x12, [x29, #-64]
   38ecc:	ldr	x12, [x12, #152]
   38ed0:	str	x12, [sp, #72]
   38ed4:	str	xzr, [sp, #56]
   38ed8:	str	x8, [sp, #48]
   38edc:	ldur	x8, [x29, #-64]
   38ee0:	ldr	x8, [x8, #72]
   38ee4:	str	x8, [sp, #40]
   38ee8:	ldr	x8, [sp, #80]
   38eec:	cmp	x8, #0x0
   38ef0:	cset	w11, ne  // ne = any
   38ef4:	and	w9, w11, w9
   38ef8:	strb	w9, [sp, #31]
   38efc:	ldr	x8, [sp, #40]
   38f00:	str	x8, [sp, #16]
   38f04:	str	wzr, [sp, #68]
   38f08:	ldur	x8, [x29, #-64]
   38f0c:	ldr	x12, [sp, #40]
   38f10:	stur	x10, [x29, #-16]
   38f14:	stur	x8, [x29, #-24]
   38f18:	stur	x12, [x29, #-32]
   38f1c:	ldur	x8, [x29, #-24]
   38f20:	ldr	x8, [x8, #152]
   38f24:	stur	x8, [x29, #-40]
   38f28:	ldur	x8, [x29, #-40]
   38f2c:	ldr	x8, [x8, #72]
   38f30:	ldrb	w9, [x8, #104]
   38f34:	mov	w11, #0x7                   	// #7
   38f38:	lsr	w9, w9, w11
   38f3c:	and	w9, w9, #0xff
   38f40:	cbz	w9, 39018 <rpl_re_set_registers@@Base+0xc07c>
   38f44:	ldur	x0, [x29, #-24]
   38f48:	ldur	x8, [x29, #-32]
   38f4c:	subs	x1, x8, #0x1
   38f50:	ldur	x8, [x29, #-24]
   38f54:	ldr	w2, [x8, #160]
   38f58:	bl	39dbc <rpl_re_set_registers@@Base+0xce20>
   38f5c:	stur	w0, [x29, #-44]
   38f60:	ldur	w9, [x29, #-44]
   38f64:	and	w9, w9, #0x1
   38f68:	cbz	w9, 38f7c <rpl_re_set_registers@@Base+0xbfe0>
   38f6c:	ldur	x8, [x29, #-40]
   38f70:	ldr	x8, [x8, #80]
   38f74:	stur	x8, [x29, #-8]
   38f78:	b	39024 <rpl_re_set_registers@@Base+0xc088>
   38f7c:	ldur	w8, [x29, #-44]
   38f80:	cbnz	w8, 38f94 <rpl_re_set_registers@@Base+0xbff8>
   38f84:	ldur	x8, [x29, #-40]
   38f88:	ldr	x8, [x8, #72]
   38f8c:	stur	x8, [x29, #-8]
   38f90:	b	39024 <rpl_re_set_registers@@Base+0xc088>
   38f94:	ldur	w8, [x29, #-44]
   38f98:	and	w8, w8, #0x4
   38f9c:	cbz	w8, 38fbc <rpl_re_set_registers@@Base+0xc020>
   38fa0:	ldur	w8, [x29, #-44]
   38fa4:	and	w8, w8, #0x2
   38fa8:	cbz	w8, 38fbc <rpl_re_set_registers@@Base+0xc020>
   38fac:	ldur	x8, [x29, #-40]
   38fb0:	ldr	x8, [x8, #96]
   38fb4:	stur	x8, [x29, #-8]
   38fb8:	b	39024 <rpl_re_set_registers@@Base+0xc088>
   38fbc:	ldur	w8, [x29, #-44]
   38fc0:	and	w8, w8, #0x2
   38fc4:	cbz	w8, 38fd8 <rpl_re_set_registers@@Base+0xc03c>
   38fc8:	ldur	x8, [x29, #-40]
   38fcc:	ldr	x8, [x8, #88]
   38fd0:	stur	x8, [x29, #-8]
   38fd4:	b	39024 <rpl_re_set_registers@@Base+0xc088>
   38fd8:	ldur	w8, [x29, #-44]
   38fdc:	and	w8, w8, #0x4
   38fe0:	cbz	w8, 39008 <rpl_re_set_registers@@Base+0xc06c>
   38fe4:	ldur	x0, [x29, #-16]
   38fe8:	ldur	x1, [x29, #-40]
   38fec:	ldur	x8, [x29, #-40]
   38ff0:	ldr	x8, [x8, #72]
   38ff4:	ldr	x2, [x8, #80]
   38ff8:	ldur	w3, [x29, #-44]
   38ffc:	bl	3736c <rpl_re_set_registers@@Base+0xa3d0>
   39000:	stur	x0, [x29, #-8]
   39004:	b	39024 <rpl_re_set_registers@@Base+0xc088>
   39008:	ldur	x8, [x29, #-40]
   3900c:	ldr	x8, [x8, #72]
   39010:	stur	x8, [x29, #-8]
   39014:	b	39024 <rpl_re_set_registers@@Base+0xc088>
   39018:	ldur	x8, [x29, #-40]
   3901c:	ldr	x8, [x8, #72]
   39020:	stur	x8, [x29, #-8]
   39024:	ldur	x8, [x29, #-8]
   39028:	str	x8, [sp, #32]
   3902c:	ldr	x8, [sp, #32]
   39030:	cmp	x8, #0x0
   39034:	cset	w9, eq  // eq = none
   39038:	and	w9, w9, #0x1
   3903c:	mov	w0, w9
   39040:	sxtw	x8, w0
   39044:	cbz	x8, 39084 <rpl_re_set_registers@@Base+0xc0e8>
   39048:	ldr	w8, [sp, #68]
   3904c:	cmp	w8, #0xc
   39050:	b.ne	39058 <rpl_re_set_registers@@Base+0xc0bc>  // b.any
   39054:	b	39078 <rpl_re_set_registers@@Base+0xc0dc>
   39058:	adrp	x0, 45000 <vasnprintf@@Base+0x2e4c>
   3905c:	add	x0, x0, #0x818
   39060:	adrp	x1, 45000 <vasnprintf@@Base+0x2e4c>
   39064:	add	x1, x1, #0x715
   39068:	mov	w2, #0x435                 	// #1077
   3906c:	adrp	x3, 45000 <vasnprintf@@Base+0x2e4c>
   39070:	add	x3, x3, #0x82a
   39074:	bl	a910 <__assert_fail@plt>
   39078:	mov	x8, #0xfffffffffffffffe    	// #-2
   3907c:	stur	x8, [x29, #-56]
   39080:	b	39460 <rpl_re_set_registers@@Base+0xc4c4>
   39084:	ldur	x8, [x29, #-64]
   39088:	ldr	x8, [x8, #184]
   3908c:	cbz	x8, 39160 <rpl_re_set_registers@@Base+0xc1c4>
   39090:	ldr	x8, [sp, #32]
   39094:	ldur	x9, [x29, #-64]
   39098:	ldr	x9, [x9, #184]
   3909c:	ldr	x10, [sp, #40]
   390a0:	mov	x11, #0x8                   	// #8
   390a4:	mul	x10, x11, x10
   390a8:	add	x9, x9, x10
   390ac:	str	x8, [x9]
   390b0:	ldr	x8, [sp, #72]
   390b4:	ldr	x8, [x8, #152]
   390b8:	cbz	x8, 39160 <rpl_re_set_registers@@Base+0xc1c4>
   390bc:	mov	w8, #0x0                   	// #0
   390c0:	strb	w8, [sp, #31]
   390c4:	ldur	x0, [x29, #-64]
   390c8:	ldr	x9, [sp, #32]
   390cc:	add	x1, x9, #0x8
   390d0:	mov	x9, xzr
   390d4:	mov	x2, x9
   390d8:	bl	3a170 <rpl_re_set_registers@@Base+0xd1d4>
   390dc:	str	w0, [sp, #68]
   390e0:	ldr	w8, [sp, #68]
   390e4:	cmp	w8, #0x0
   390e8:	cset	w8, ne  // ne = any
   390ec:	and	w8, w8, #0x1
   390f0:	mov	w1, w8
   390f4:	sxtw	x9, w1
   390f8:	cbz	x9, 39108 <rpl_re_set_registers@@Base+0xc16c>
   390fc:	ldrsw	x8, [sp, #68]
   39100:	stur	x8, [x29, #-56]
   39104:	b	39460 <rpl_re_set_registers@@Base+0xc4c4>
   39108:	ldr	x8, [sp, #32]
   3910c:	ldrb	w9, [x8, #104]
   39110:	mov	w10, #0x6                   	// #6
   39114:	lsr	w9, w9, w10
   39118:	and	w9, w9, #0x1
   3911c:	and	w9, w9, #0xff
   39120:	cbz	w9, 39160 <rpl_re_set_registers@@Base+0xc1c4>
   39124:	ldur	x0, [x29, #-64]
   39128:	ldr	x8, [sp, #32]
   3912c:	add	x1, x8, #0x8
   39130:	bl	3a298 <rpl_re_set_registers@@Base+0xd2fc>
   39134:	str	w0, [sp, #68]
   39138:	ldr	w9, [sp, #68]
   3913c:	cmp	w9, #0x0
   39140:	cset	w9, ne  // ne = any
   39144:	and	w9, w9, #0x1
   39148:	mov	w1, w9
   3914c:	sxtw	x8, w1
   39150:	cbz	x8, 39160 <rpl_re_set_registers@@Base+0xc1c4>
   39154:	ldrsw	x8, [sp, #68]
   39158:	stur	x8, [x29, #-56]
   3915c:	b	39460 <rpl_re_set_registers@@Base+0xc4c4>
   39160:	ldr	x8, [sp, #32]
   39164:	ldrb	w9, [x8, #104]
   39168:	mov	w10, #0x4                   	// #4
   3916c:	lsr	w9, w9, w10
   39170:	and	w9, w9, #0x1
   39174:	and	w9, w9, #0xff
   39178:	mov	w8, w9
   3917c:	ubfx	x8, x8, #0, #32
   39180:	cbz	x8, 391d4 <rpl_re_set_registers@@Base+0xc238>
   39184:	ldr	x8, [sp, #32]
   39188:	ldrb	w9, [x8, #104]
   3918c:	mov	w10, #0x7                   	// #7
   39190:	lsr	w9, w9, w10
   39194:	and	w9, w9, #0xff
   39198:	cbz	w9, 391b0 <rpl_re_set_registers@@Base+0xc214>
   3919c:	ldur	x0, [x29, #-64]
   391a0:	ldr	x1, [sp, #32]
   391a4:	ldr	x2, [sp, #40]
   391a8:	bl	39470 <rpl_re_set_registers@@Base+0xc4d4>
   391ac:	cbz	x0, 391d4 <rpl_re_set_registers@@Base+0xc238>
   391b0:	ldurb	w8, [x29, #-65]
   391b4:	tbnz	w8, #0, 391c4 <rpl_re_set_registers@@Base+0xc228>
   391b8:	ldr	x8, [sp, #40]
   391bc:	stur	x8, [x29, #-56]
   391c0:	b	39460 <rpl_re_set_registers@@Base+0xc4c4>
   391c4:	ldr	x8, [sp, #40]
   391c8:	str	x8, [sp, #48]
   391cc:	mov	x8, #0x1                   	// #1
   391d0:	str	x8, [sp, #56]
   391d4:	ldur	x8, [x29, #-64]
   391d8:	ldr	x8, [x8, #104]
   391dc:	ldur	x9, [x29, #-64]
   391e0:	ldr	x9, [x9, #72]
   391e4:	cmp	x8, x9
   391e8:	cset	w10, le
   391ec:	eor	w10, w10, #0x1
   391f0:	tbnz	w10, #0, 391f8 <rpl_re_set_registers@@Base+0xc25c>
   391f4:	b	3943c <rpl_re_set_registers@@Base+0xc4a0>
   391f8:	ldr	x8, [sp, #32]
   391fc:	str	x8, [sp, #8]
   39200:	ldur	x8, [x29, #-64]
   39204:	ldr	x8, [x8, #72]
   39208:	add	x8, x8, #0x1
   3920c:	str	x8, [sp]
   39210:	ldr	x8, [sp]
   39214:	ldur	x9, [x29, #-64]
   39218:	ldr	x9, [x9, #64]
   3921c:	cmp	x8, x9
   39220:	cset	w10, ge  // ge = tcont
   39224:	and	w10, w10, #0x1
   39228:	mov	w0, w10
   3922c:	sxtw	x8, w0
   39230:	cbz	x8, 3924c <rpl_re_set_registers@@Base+0xc2b0>
   39234:	ldur	x8, [x29, #-64]
   39238:	ldr	x8, [x8, #64]
   3923c:	ldur	x9, [x29, #-64]
   39240:	ldr	x9, [x9, #88]
   39244:	cmp	x8, x9
   39248:	b.lt	39288 <rpl_re_set_registers@@Base+0xc2ec>  // b.tstop
   3924c:	ldr	x8, [sp]
   39250:	ldur	x9, [x29, #-64]
   39254:	ldr	x9, [x9, #48]
   39258:	cmp	x8, x9
   3925c:	cset	w10, ge  // ge = tcont
   39260:	and	w10, w10, #0x1
   39264:	mov	w0, w10
   39268:	sxtw	x8, w0
   3926c:	cbz	x8, 392f8 <rpl_re_set_registers@@Base+0xc35c>
   39270:	ldur	x8, [x29, #-64]
   39274:	ldr	x8, [x8, #48]
   39278:	ldur	x9, [x29, #-64]
   3927c:	ldr	x9, [x9, #88]
   39280:	cmp	x8, x9
   39284:	b.ge	392f8 <rpl_re_set_registers@@Base+0xc35c>  // b.tcont
   39288:	ldur	x0, [x29, #-64]
   3928c:	ldr	x8, [sp]
   39290:	add	x8, x8, #0x1
   39294:	mov	w1, w8
   39298:	bl	3a7fc <rpl_re_set_registers@@Base+0xd860>
   3929c:	str	w0, [sp, #68]
   392a0:	ldr	w8, [sp, #68]
   392a4:	cmp	w8, #0x0
   392a8:	cset	w8, ne  // ne = any
   392ac:	and	w8, w8, #0x1
   392b0:	mov	w2, w8
   392b4:	sxtw	x9, w2
   392b8:	cbz	x9, 392f8 <rpl_re_set_registers@@Base+0xc35c>
   392bc:	ldr	w8, [sp, #68]
   392c0:	cmp	w8, #0xc
   392c4:	b.ne	392cc <rpl_re_set_registers@@Base+0xc330>  // b.any
   392c8:	b	392ec <rpl_re_set_registers@@Base+0xc350>
   392cc:	adrp	x0, 45000 <vasnprintf@@Base+0x2e4c>
   392d0:	add	x0, x0, #0x818
   392d4:	adrp	x1, 45000 <vasnprintf@@Base+0x2e4c>
   392d8:	add	x1, x1, #0x715
   392dc:	mov	w2, #0x46c                 	// #1132
   392e0:	adrp	x3, 45000 <vasnprintf@@Base+0x2e4c>
   392e4:	add	x3, x3, #0x82a
   392e8:	bl	a910 <__assert_fail@plt>
   392ec:	mov	x8, #0xfffffffffffffffe    	// #-2
   392f0:	stur	x8, [x29, #-56]
   392f4:	b	39460 <rpl_re_set_registers@@Base+0xc4c4>
   392f8:	ldur	x1, [x29, #-64]
   392fc:	ldr	x2, [sp, #32]
   39300:	add	x0, sp, #0x44
   39304:	bl	3aa48 <rpl_re_set_registers@@Base+0xdaac>
   39308:	str	x0, [sp, #32]
   3930c:	ldur	x8, [x29, #-64]
   39310:	ldr	x8, [x8, #184]
   39314:	cbz	x8, 3932c <rpl_re_set_registers@@Base+0xc390>
   39318:	ldur	x1, [x29, #-64]
   3931c:	ldr	x2, [sp, #32]
   39320:	add	x0, sp, #0x44
   39324:	bl	3ac1c <rpl_re_set_registers@@Base+0xdc80>
   39328:	str	x0, [sp, #32]
   3932c:	ldr	x8, [sp, #32]
   39330:	cbnz	x8, 39394 <rpl_re_set_registers@@Base+0xc3f8>
   39334:	ldr	w8, [sp, #68]
   39338:	cmp	w8, #0x0
   3933c:	cset	w8, ne  // ne = any
   39340:	and	w8, w8, #0x1
   39344:	mov	w0, w8
   39348:	sxtw	x9, w0
   3934c:	cbz	x9, 3935c <rpl_re_set_registers@@Base+0xc3c0>
   39350:	mov	x8, #0xfffffffffffffffe    	// #-2
   39354:	stur	x8, [x29, #-56]
   39358:	b	39460 <rpl_re_set_registers@@Base+0xc4c4>
   3935c:	ldur	x8, [x29, #-64]
   39360:	ldr	x8, [x8, #184]
   39364:	cbz	x8, 39390 <rpl_re_set_registers@@Base+0xc3f4>
   39368:	ldr	x8, [sp, #56]
   3936c:	cbz	x8, 3937c <rpl_re_set_registers@@Base+0xc3e0>
   39370:	ldurb	w8, [x29, #-65]
   39374:	tbnz	w8, #0, 3937c <rpl_re_set_registers@@Base+0xc3e0>
   39378:	b	39390 <rpl_re_set_registers@@Base+0xc3f4>
   3937c:	ldur	x1, [x29, #-64]
   39380:	add	x0, sp, #0x44
   39384:	bl	3aed4 <rpl_re_set_registers@@Base+0xdf38>
   39388:	str	x0, [sp, #32]
   3938c:	cbnz	x0, 39394 <rpl_re_set_registers@@Base+0xc3f8>
   39390:	b	3943c <rpl_re_set_registers@@Base+0xc4a0>
   39394:	ldrb	w8, [sp, #31]
   39398:	tbnz	w8, #0, 393a0 <rpl_re_set_registers@@Base+0xc404>
   3939c:	b	393c4 <rpl_re_set_registers@@Base+0xc428>
   393a0:	ldr	x8, [sp, #8]
   393a4:	ldr	x9, [sp, #32]
   393a8:	cmp	x8, x9
   393ac:	b.ne	393bc <rpl_re_set_registers@@Base+0xc420>  // b.any
   393b0:	ldr	x8, [sp]
   393b4:	str	x8, [sp, #16]
   393b8:	b	393c4 <rpl_re_set_registers@@Base+0xc428>
   393bc:	mov	w8, #0x0                   	// #0
   393c0:	strb	w8, [sp, #31]
   393c4:	ldr	x8, [sp, #32]
   393c8:	ldrb	w9, [x8, #104]
   393cc:	mov	w10, #0x4                   	// #4
   393d0:	lsr	w9, w9, w10
   393d4:	and	w9, w9, #0x1
   393d8:	and	w9, w9, #0xff
   393dc:	cbz	w9, 39438 <rpl_re_set_registers@@Base+0xc49c>
   393e0:	ldr	x8, [sp, #32]
   393e4:	ldrb	w9, [x8, #104]
   393e8:	mov	w10, #0x7                   	// #7
   393ec:	lsr	w9, w9, w10
   393f0:	and	w9, w9, #0xff
   393f4:	cbz	w9, 39410 <rpl_re_set_registers@@Base+0xc474>
   393f8:	ldur	x0, [x29, #-64]
   393fc:	ldr	x1, [sp, #32]
   39400:	ldur	x8, [x29, #-64]
   39404:	ldr	x2, [x8, #72]
   39408:	bl	39470 <rpl_re_set_registers@@Base+0xc4d4>
   3940c:	cbz	x0, 39438 <rpl_re_set_registers@@Base+0xc49c>
   39410:	ldur	x8, [x29, #-64]
   39414:	ldr	x8, [x8, #72]
   39418:	str	x8, [sp, #48]
   3941c:	mov	x8, #0x1                   	// #1
   39420:	str	x8, [sp, #56]
   39424:	mov	x8, xzr
   39428:	str	x8, [sp, #80]
   3942c:	ldurb	w9, [x29, #-65]
   39430:	tbnz	w9, #0, 39438 <rpl_re_set_registers@@Base+0xc49c>
   39434:	b	3943c <rpl_re_set_registers@@Base+0xc4a0>
   39438:	b	391d4 <rpl_re_set_registers@@Base+0xc238>
   3943c:	ldr	x8, [sp, #80]
   39440:	cbz	x8, 39458 <rpl_re_set_registers@@Base+0xc4bc>
   39444:	ldr	x8, [sp, #16]
   39448:	ldr	x9, [sp, #80]
   3944c:	ldr	x10, [x9]
   39450:	add	x8, x10, x8
   39454:	str	x8, [x9]
   39458:	ldr	x8, [sp, #48]
   3945c:	stur	x8, [x29, #-56]
   39460:	ldur	x0, [x29, #-56]
   39464:	ldp	x29, x30, [sp, #160]
   39468:	add	sp, sp, #0xb0
   3946c:	ret
   39470:	sub	sp, sp, #0x40
   39474:	stp	x29, x30, [sp, #48]
   39478:	add	x29, sp, #0x30
   3947c:	stur	x0, [x29, #-16]
   39480:	str	x1, [sp, #24]
   39484:	str	x2, [sp, #16]
   39488:	ldur	x0, [x29, #-16]
   3948c:	ldr	x1, [sp, #16]
   39490:	ldur	x8, [x29, #-16]
   39494:	ldr	w2, [x8, #160]
   39498:	bl	39dbc <rpl_re_set_registers@@Base+0xce20>
   3949c:	str	w0, [sp, #4]
   394a0:	str	xzr, [sp, #8]
   394a4:	ldr	x8, [sp, #8]
   394a8:	ldr	x9, [sp, #24]
   394ac:	ldr	x9, [x9, #16]
   394b0:	cmp	x8, x9
   394b4:	b.ge	39508 <rpl_re_set_registers@@Base+0xc56c>  // b.tcont
   394b8:	ldur	x8, [x29, #-16]
   394bc:	ldr	x0, [x8, #152]
   394c0:	ldr	x8, [sp, #24]
   394c4:	ldr	x8, [x8, #24]
   394c8:	ldr	x9, [sp, #8]
   394cc:	ldr	x1, [x8, x9, lsl #3]
   394d0:	ldr	w2, [sp, #4]
   394d4:	bl	3f750 <rpl_re_set_registers@@Base+0x127b4>
   394d8:	tbnz	w0, #0, 394e0 <rpl_re_set_registers@@Base+0xc544>
   394dc:	b	394f8 <rpl_re_set_registers@@Base+0xc55c>
   394e0:	ldr	x8, [sp, #24]
   394e4:	ldr	x8, [x8, #24]
   394e8:	ldr	x9, [sp, #8]
   394ec:	ldr	x8, [x8, x9, lsl #3]
   394f0:	stur	x8, [x29, #-8]
   394f4:	b	3950c <rpl_re_set_registers@@Base+0xc570>
   394f8:	ldr	x8, [sp, #8]
   394fc:	add	x8, x8, #0x1
   39500:	str	x8, [sp, #8]
   39504:	b	394a4 <rpl_re_set_registers@@Base+0xc508>
   39508:	stur	xzr, [x29, #-8]
   3950c:	ldur	x0, [x29, #-8]
   39510:	ldp	x29, x30, [sp, #48]
   39514:	add	sp, sp, #0x40
   39518:	ret
   3951c:	sub	sp, sp, #0xa0
   39520:	stp	x29, x30, [sp, #144]
   39524:	add	x29, sp, #0x90
   39528:	mov	x8, xzr
   3952c:	mov	x9, #0x1fffffffffffffff    	// #2305843009213693951
   39530:	stur	x0, [x29, #-16]
   39534:	ldur	x10, [x29, #-16]
   39538:	ldr	x10, [x10, #152]
   3953c:	stur	x10, [x29, #-24]
   39540:	stur	x8, [x29, #-64]
   39544:	ldur	x8, [x29, #-16]
   39548:	ldr	x8, [x8, #168]
   3954c:	stur	x8, [x29, #-40]
   39550:	ldur	x8, [x29, #-16]
   39554:	ldr	x8, [x8, #176]
   39558:	stur	x8, [x29, #-32]
   3955c:	ldur	x8, [x29, #-40]
   39560:	cmp	x9, x8
   39564:	cset	w11, ls  // ls = plast
   39568:	and	w11, w11, #0x1
   3956c:	mov	w0, w11
   39570:	sxtw	x8, w0
   39574:	cbz	x8, 39584 <rpl_re_set_registers@@Base+0xc5e8>
   39578:	mov	w8, #0xc                   	// #12
   3957c:	stur	w8, [x29, #-4]
   39580:	b	39888 <rpl_re_set_registers@@Base+0xc8ec>
   39584:	ldur	x8, [x29, #-40]
   39588:	add	x8, x8, #0x1
   3958c:	mov	x9, #0x8                   	// #8
   39590:	mul	x0, x8, x9
   39594:	bl	af10 <malloc@plt>
   39598:	stur	x0, [x29, #-56]
   3959c:	ldur	x8, [x29, #-56]
   395a0:	cmp	x8, #0x0
   395a4:	cset	w10, eq  // eq = none
   395a8:	and	w10, w10, #0x1
   395ac:	mov	w0, w10
   395b0:	sxtw	x8, w0
   395b4:	cbz	x8, 395c4 <rpl_re_set_registers@@Base+0xc628>
   395b8:	mov	w8, #0xc                   	// #12
   395bc:	stur	w8, [x29, #-44]
   395c0:	b	39870 <rpl_re_set_registers@@Base+0xc8d4>
   395c4:	ldur	x8, [x29, #-24]
   395c8:	ldr	x8, [x8, #152]
   395cc:	cbz	x8, 397c0 <rpl_re_set_registers@@Base+0xc824>
   395d0:	ldur	x8, [x29, #-40]
   395d4:	add	x8, x8, #0x1
   395d8:	mov	x9, #0x8                   	// #8
   395dc:	mul	x0, x8, x9
   395e0:	bl	af10 <malloc@plt>
   395e4:	stur	x0, [x29, #-64]
   395e8:	ldur	x8, [x29, #-64]
   395ec:	cmp	x8, #0x0
   395f0:	cset	w10, eq  // eq = none
   395f4:	and	w10, w10, #0x1
   395f8:	mov	w0, w10
   395fc:	sxtw	x8, w0
   39600:	cbz	x8, 39610 <rpl_re_set_registers@@Base+0xc674>
   39604:	mov	w8, #0xc                   	// #12
   39608:	stur	w8, [x29, #-44]
   3960c:	b	39870 <rpl_re_set_registers@@Base+0xc8d4>
   39610:	ldur	x0, [x29, #-64]
   39614:	ldur	x8, [x29, #-40]
   39618:	add	x8, x8, #0x1
   3961c:	mov	x9, #0x8                   	// #8
   39620:	mul	x2, x9, x8
   39624:	mov	w10, wzr
   39628:	mov	w1, w10
   3962c:	bl	a970 <memset@plt>
   39630:	ldur	x1, [x29, #-56]
   39634:	ldur	x2, [x29, #-64]
   39638:	ldur	x3, [x29, #-32]
   3963c:	ldur	x4, [x29, #-40]
   39640:	add	x8, sp, #0x18
   39644:	mov	x0, x8
   39648:	str	x8, [sp, #16]
   3964c:	bl	3f86c <rpl_re_set_registers@@Base+0x128d0>
   39650:	ldur	x0, [x29, #-16]
   39654:	ldr	x1, [sp, #16]
   39658:	bl	3f8cc <rpl_re_set_registers@@Base+0x12930>
   3965c:	stur	w0, [x29, #-44]
   39660:	ldr	x8, [sp, #16]
   39664:	ldr	x0, [x8, #48]
   39668:	bl	a930 <free@plt>
   3966c:	ldur	w10, [x29, #-44]
   39670:	cmp	w10, #0x0
   39674:	cset	w10, ne  // ne = any
   39678:	and	w10, w10, #0x1
   3967c:	mov	w0, w10
   39680:	sxtw	x8, w0
   39684:	cbz	x8, 3968c <rpl_re_set_registers@@Base+0xc6f0>
   39688:	b	39870 <rpl_re_set_registers@@Base+0xc8d4>
   3968c:	ldur	x8, [x29, #-56]
   39690:	ldr	x8, [x8]
   39694:	cbnz	x8, 396a4 <rpl_re_set_registers@@Base+0xc708>
   39698:	ldur	x8, [x29, #-64]
   3969c:	ldr	x8, [x8]
   396a0:	cbz	x8, 396a8 <rpl_re_set_registers@@Base+0xc70c>
   396a4:	b	39770 <rpl_re_set_registers@@Base+0xc7d4>
   396a8:	ldur	x8, [x29, #-40]
   396ac:	subs	x8, x8, #0x1
   396b0:	stur	x8, [x29, #-40]
   396b4:	ldur	x8, [x29, #-40]
   396b8:	cmp	x8, #0x0
   396bc:	cset	w9, ge  // ge = tcont
   396c0:	tbnz	w9, #0, 396d0 <rpl_re_set_registers@@Base+0xc734>
   396c4:	mov	w8, #0x1                   	// #1
   396c8:	stur	w8, [x29, #-44]
   396cc:	b	39870 <rpl_re_set_registers@@Base+0xc8d4>
   396d0:	ldur	x8, [x29, #-16]
   396d4:	ldr	x8, [x8, #184]
   396d8:	ldur	x9, [x29, #-40]
   396dc:	mov	x10, #0x8                   	// #8
   396e0:	mul	x9, x10, x9
   396e4:	add	x8, x8, x9
   396e8:	ldr	x8, [x8]
   396ec:	mov	w11, #0x1                   	// #1
   396f0:	str	w11, [sp, #12]
   396f4:	cbz	x8, 39738 <rpl_re_set_registers@@Base+0xc79c>
   396f8:	ldur	x8, [x29, #-16]
   396fc:	ldr	x8, [x8, #184]
   39700:	ldur	x9, [x29, #-40]
   39704:	mov	x10, #0x8                   	// #8
   39708:	mul	x9, x10, x9
   3970c:	add	x8, x8, x9
   39710:	ldr	x8, [x8]
   39714:	ldrb	w11, [x8, #104]
   39718:	mov	w12, #0x4                   	// #4
   3971c:	lsr	w11, w11, w12
   39720:	mov	w12, #0x1                   	// #1
   39724:	and	w11, w11, #0x1
   39728:	tst	w11, #0xff
   3972c:	cset	w11, ne  // ne = any
   39730:	eor	w11, w11, w12
   39734:	str	w11, [sp, #12]
   39738:	ldr	w8, [sp, #12]
   3973c:	tbnz	w8, #0, 396a8 <rpl_re_set_registers@@Base+0xc70c>
   39740:	ldur	x0, [x29, #-16]
   39744:	ldur	x8, [x29, #-16]
   39748:	ldr	x8, [x8, #184]
   3974c:	ldur	x9, [x29, #-40]
   39750:	mov	x10, #0x8                   	// #8
   39754:	mul	x9, x10, x9
   39758:	add	x8, x8, x9
   3975c:	ldr	x1, [x8]
   39760:	ldur	x2, [x29, #-40]
   39764:	bl	39470 <rpl_re_set_registers@@Base+0xc4d4>
   39768:	stur	x0, [x29, #-32]
   3976c:	b	39610 <rpl_re_set_registers@@Base+0xc674>
   39770:	ldur	x0, [x29, #-24]
   39774:	ldur	x1, [x29, #-56]
   39778:	ldur	x2, [x29, #-64]
   3977c:	ldur	x8, [x29, #-40]
   39780:	add	x3, x8, #0x1
   39784:	bl	3facc <rpl_re_set_registers@@Base+0x12b30>
   39788:	stur	w0, [x29, #-44]
   3978c:	ldur	x0, [x29, #-64]
   39790:	bl	a930 <free@plt>
   39794:	mov	x8, xzr
   39798:	stur	x8, [x29, #-64]
   3979c:	ldur	w9, [x29, #-44]
   397a0:	cmp	w9, #0x0
   397a4:	cset	w9, ne  // ne = any
   397a8:	and	w9, w9, #0x1
   397ac:	mov	w0, w9
   397b0:	sxtw	x8, w0
   397b4:	cbz	x8, 397bc <rpl_re_set_registers@@Base+0xc820>
   397b8:	b	39870 <rpl_re_set_registers@@Base+0xc8d4>
   397bc:	b	39834 <rpl_re_set_registers@@Base+0xc898>
   397c0:	ldur	x1, [x29, #-56]
   397c4:	ldur	x2, [x29, #-64]
   397c8:	ldur	x3, [x29, #-32]
   397cc:	ldur	x4, [x29, #-40]
   397d0:	add	x8, sp, #0x18
   397d4:	mov	x0, x8
   397d8:	str	x8, [sp]
   397dc:	bl	3f86c <rpl_re_set_registers@@Base+0x128d0>
   397e0:	ldur	x0, [x29, #-16]
   397e4:	ldr	x1, [sp]
   397e8:	bl	3f8cc <rpl_re_set_registers@@Base+0x12930>
   397ec:	stur	w0, [x29, #-44]
   397f0:	ldr	x8, [sp]
   397f4:	ldr	x0, [x8, #48]
   397f8:	bl	a930 <free@plt>
   397fc:	ldur	w9, [x29, #-44]
   39800:	cmp	w9, #0x0
   39804:	cset	w9, ne  // ne = any
   39808:	and	w9, w9, #0x1
   3980c:	mov	w0, w9
   39810:	sxtw	x8, w0
   39814:	cbz	x8, 3981c <rpl_re_set_registers@@Base+0xc880>
   39818:	b	39870 <rpl_re_set_registers@@Base+0xc8d4>
   3981c:	ldur	x8, [x29, #-56]
   39820:	ldr	x8, [x8]
   39824:	cbnz	x8, 39834 <rpl_re_set_registers@@Base+0xc898>
   39828:	mov	w8, #0x1                   	// #1
   3982c:	stur	w8, [x29, #-44]
   39830:	b	39870 <rpl_re_set_registers@@Base+0xc8d4>
   39834:	ldur	x8, [x29, #-16]
   39838:	ldr	x0, [x8, #184]
   3983c:	bl	a930 <free@plt>
   39840:	ldur	x8, [x29, #-56]
   39844:	ldur	x9, [x29, #-16]
   39848:	str	x8, [x9, #184]
   3984c:	mov	x8, xzr
   39850:	stur	x8, [x29, #-56]
   39854:	ldur	x8, [x29, #-32]
   39858:	ldur	x9, [x29, #-16]
   3985c:	str	x8, [x9, #176]
   39860:	ldur	x8, [x29, #-40]
   39864:	ldur	x9, [x29, #-16]
   39868:	str	x8, [x9, #168]
   3986c:	stur	wzr, [x29, #-44]
   39870:	ldur	x0, [x29, #-56]
   39874:	bl	a930 <free@plt>
   39878:	ldur	x0, [x29, #-64]
   3987c:	bl	a930 <free@plt>
   39880:	ldur	w8, [x29, #-44]
   39884:	stur	w8, [x29, #-4]
   39888:	ldur	w0, [x29, #-4]
   3988c:	ldp	x29, x30, [sp, #144]
   39890:	add	sp, sp, #0xa0
   39894:	ret
   39898:	sub	sp, sp, #0x40
   3989c:	stp	x29, x30, [sp, #48]
   398a0:	add	x29, sp, #0x30
   398a4:	stur	x0, [x29, #-8]
   398a8:	stur	xzr, [x29, #-16]
   398ac:	ldur	x8, [x29, #-16]
   398b0:	ldur	x9, [x29, #-8]
   398b4:	ldr	x9, [x9, #232]
   398b8:	cmp	x8, x9
   398bc:	b.ge	39988 <rpl_re_set_registers@@Base+0xc9ec>  // b.tcont
   398c0:	ldur	x8, [x29, #-8]
   398c4:	ldr	x8, [x8, #248]
   398c8:	ldur	x9, [x29, #-16]
   398cc:	mov	x10, #0x8                   	// #8
   398d0:	mul	x9, x10, x9
   398d4:	add	x8, x8, x9
   398d8:	ldr	x8, [x8]
   398dc:	str	x8, [sp, #16]
   398e0:	str	xzr, [sp, #24]
   398e4:	ldr	x8, [sp, #24]
   398e8:	ldr	x9, [sp, #16]
   398ec:	ldr	x9, [x9, #32]
   398f0:	cmp	x8, x9
   398f4:	b.ge	3993c <rpl_re_set_registers@@Base+0xc9a0>  // b.tcont
   398f8:	ldr	x8, [sp, #16]
   398fc:	ldr	x8, [x8, #40]
   39900:	ldr	x9, [sp, #24]
   39904:	mov	x10, #0x8                   	// #8
   39908:	mul	x9, x10, x9
   3990c:	add	x8, x8, x9
   39910:	ldr	x8, [x8]
   39914:	str	x8, [sp, #8]
   39918:	ldr	x8, [sp, #8]
   3991c:	ldr	x0, [x8, #32]
   39920:	bl	a930 <free@plt>
   39924:	ldr	x0, [sp, #8]
   39928:	bl	a930 <free@plt>
   3992c:	ldr	x8, [sp, #24]
   39930:	add	x8, x8, #0x1
   39934:	str	x8, [sp, #24]
   39938:	b	398e4 <rpl_re_set_registers@@Base+0xc948>
   3993c:	ldr	x8, [sp, #16]
   39940:	ldr	x0, [x8, #40]
   39944:	bl	a930 <free@plt>
   39948:	ldr	x8, [sp, #16]
   3994c:	ldr	x8, [x8, #16]
   39950:	cbz	x8, 39970 <rpl_re_set_registers@@Base+0xc9d4>
   39954:	ldr	x8, [sp, #16]
   39958:	ldr	x8, [x8, #16]
   3995c:	ldr	x0, [x8, #16]
   39960:	bl	a930 <free@plt>
   39964:	ldr	x8, [sp, #16]
   39968:	ldr	x0, [x8, #16]
   3996c:	bl	a930 <free@plt>
   39970:	ldr	x0, [sp, #16]
   39974:	bl	a930 <free@plt>
   39978:	ldur	x8, [x29, #-16]
   3997c:	add	x8, x8, #0x1
   39980:	stur	x8, [x29, #-16]
   39984:	b	398ac <rpl_re_set_registers@@Base+0xc910>
   39988:	ldur	x8, [x29, #-8]
   3998c:	str	xzr, [x8, #232]
   39990:	ldur	x8, [x29, #-8]
   39994:	str	xzr, [x8, #200]
   39998:	ldp	x29, x30, [sp, #48]
   3999c:	add	sp, sp, #0x40
   399a0:	ret
   399a4:	stp	x29, x30, [sp, #-16]!
   399a8:	mov	x29, sp
   399ac:	sub	sp, sp, #0xa0
   399b0:	adrp	x8, 47000 <vasnprintf@@Base+0x4e4c>
   399b4:	add	x8, x8, #0x818
   399b8:	mov	w9, #0x0                   	// #0
   399bc:	mov	w10, #0x1                   	// #1
   399c0:	stur	x0, [x29, #-16]
   399c4:	stur	x1, [x29, #-24]
   399c8:	stur	x2, [x29, #-32]
   399cc:	stur	x3, [x29, #-40]
   399d0:	and	w10, w4, w10
   399d4:	sturb	w10, [x29, #-41]
   399d8:	ldur	x11, [x29, #-16]
   399dc:	ldr	x11, [x11]
   399e0:	stur	x11, [x29, #-56]
   399e4:	ldr	q0, [x8]
   399e8:	stur	q0, [x29, #-128]
   399ec:	ldr	x8, [x8, #16]
   399f0:	stur	x8, [x29, #-112]
   399f4:	sturb	w9, [x29, #-137]
   399f8:	ldurb	w9, [x29, #-41]
   399fc:	tbnz	w9, #0, 39a04 <rpl_re_set_registers@@Base+0xca68>
   39a00:	b	39a44 <rpl_re_set_registers@@Base+0xcaa8>
   39a04:	sub	x8, x29, #0x80
   39a08:	stur	x8, [x29, #-104]
   39a0c:	ldur	x8, [x29, #-104]
   39a10:	ldr	x8, [x8, #8]
   39a14:	mov	x9, #0x30                  	// #48
   39a18:	mul	x0, x8, x9
   39a1c:	bl	af10 <malloc@plt>
   39a20:	ldur	x8, [x29, #-104]
   39a24:	str	x0, [x8, #16]
   39a28:	ldur	x8, [x29, #-104]
   39a2c:	ldr	x8, [x8, #16]
   39a30:	cbnz	x8, 39a40 <rpl_re_set_registers@@Base+0xcaa4>
   39a34:	mov	w8, #0xc                   	// #12
   39a38:	stur	w8, [x29, #-4]
   39a3c:	b	39d70 <rpl_re_set_registers@@Base+0xcdd4>
   39a40:	b	39a4c <rpl_re_set_registers@@Base+0xcab0>
   39a44:	mov	x8, xzr
   39a48:	stur	x8, [x29, #-104]
   39a4c:	ldur	x8, [x29, #-56]
   39a50:	ldr	x8, [x8, #144]
   39a54:	stur	x8, [x29, #-72]
   39a58:	stur	xzr, [x29, #-96]
   39a5c:	stur	xzr, [x29, #-88]
   39a60:	stur	xzr, [x29, #-80]
   39a64:	ldur	x8, [x29, #-32]
   39a68:	mov	x9, #0x10                  	// #16
   39a6c:	mul	x8, x8, x9
   39a70:	cmp	x8, #0xfc0
   39a74:	b.cs	39aa8 <rpl_re_set_registers@@Base+0xcb0c>  // b.hs, b.nlast
   39a78:	ldur	x8, [x29, #-32]
   39a7c:	mov	x9, #0x10                  	// #16
   39a80:	mul	x8, x8, x9
   39a84:	mov	x9, #0x1                   	// #1
   39a88:	mul	x8, x8, x9
   39a8c:	add	x8, x8, #0xf
   39a90:	and	x8, x8, #0xfffffffffffffff0
   39a94:	mov	x9, sp
   39a98:	subs	x8, x9, x8
   39a9c:	mov	sp, x8
   39aa0:	stur	x8, [x29, #-136]
   39aa4:	b	39ae0 <rpl_re_set_registers@@Base+0xcb44>
   39aa8:	ldur	x8, [x29, #-32]
   39aac:	mov	x9, #0x10                  	// #16
   39ab0:	mul	x0, x8, x9
   39ab4:	bl	af10 <malloc@plt>
   39ab8:	stur	x0, [x29, #-136]
   39abc:	ldur	x8, [x29, #-136]
   39ac0:	cbnz	x8, 39ad8 <rpl_re_set_registers@@Base+0xcb3c>
   39ac4:	ldur	x0, [x29, #-104]
   39ac8:	bl	4172c <rpl_re_set_registers@@Base+0x14790>
   39acc:	mov	w8, #0xc                   	// #12
   39ad0:	stur	w8, [x29, #-4]
   39ad4:	b	39d70 <rpl_re_set_registers@@Base+0xcdd4>
   39ad8:	mov	w8, #0x1                   	// #1
   39adc:	sturb	w8, [x29, #-137]
   39ae0:	ldur	x0, [x29, #-136]
   39ae4:	ldur	x1, [x29, #-40]
   39ae8:	ldur	x8, [x29, #-32]
   39aec:	mov	x9, #0x10                  	// #16
   39af0:	mul	x2, x9, x8
   39af4:	bl	af30 <memcpy@plt>
   39af8:	ldur	x8, [x29, #-40]
   39afc:	ldr	x8, [x8]
   39b00:	stur	x8, [x29, #-64]
   39b04:	ldur	x8, [x29, #-64]
   39b08:	ldur	x9, [x29, #-40]
   39b0c:	ldr	x9, [x9, #8]
   39b10:	cmp	x8, x9
   39b14:	b.gt	39d44 <rpl_re_set_registers@@Base+0xcda8>
   39b18:	ldur	x0, [x29, #-56]
   39b1c:	ldur	x1, [x29, #-40]
   39b20:	ldur	x2, [x29, #-136]
   39b24:	ldur	x3, [x29, #-72]
   39b28:	ldur	x4, [x29, #-64]
   39b2c:	ldur	x5, [x29, #-32]
   39b30:	bl	417d0 <rpl_re_set_registers@@Base+0x14834>
   39b34:	ldur	x8, [x29, #-64]
   39b38:	ldur	x9, [x29, #-40]
   39b3c:	ldr	x9, [x9, #8]
   39b40:	cmp	x8, x9
   39b44:	b.ne	39c58 <rpl_re_set_registers@@Base+0xccbc>  // b.any
   39b48:	ldur	x8, [x29, #-72]
   39b4c:	ldur	x9, [x29, #-24]
   39b50:	ldr	x9, [x9, #176]
   39b54:	cmp	x8, x9
   39b58:	b.ne	39c58 <rpl_re_set_registers@@Base+0xccbc>  // b.any
   39b5c:	ldur	x8, [x29, #-104]
   39b60:	cbz	x8, 39c30 <rpl_re_set_registers@@Base+0xcc94>
   39b64:	stur	xzr, [x29, #-152]
   39b68:	ldur	x8, [x29, #-152]
   39b6c:	ldur	x9, [x29, #-32]
   39b70:	cmp	x8, x9
   39b74:	b.cs	39bd0 <rpl_re_set_registers@@Base+0xcc34>  // b.hs, b.nlast
   39b78:	ldur	x8, [x29, #-40]
   39b7c:	ldur	x9, [x29, #-152]
   39b80:	mov	x10, #0x10                  	// #16
   39b84:	mul	x9, x10, x9
   39b88:	ldr	x8, [x8, x9]
   39b8c:	mov	x9, #0xffffffffffffffff    	// #-1
   39b90:	cmp	x8, x9
   39b94:	b.le	39bc0 <rpl_re_set_registers@@Base+0xcc24>
   39b98:	ldur	x8, [x29, #-40]
   39b9c:	ldur	x9, [x29, #-152]
   39ba0:	mov	x10, #0x10                  	// #16
   39ba4:	mul	x9, x10, x9
   39ba8:	add	x8, x8, x9
   39bac:	ldr	x8, [x8, #8]
   39bb0:	mov	x9, #0xffffffffffffffff    	// #-1
   39bb4:	cmp	x8, x9
   39bb8:	b.ne	39bc0 <rpl_re_set_registers@@Base+0xcc24>  // b.any
   39bbc:	b	39bd0 <rpl_re_set_registers@@Base+0xcc34>
   39bc0:	ldur	x8, [x29, #-152]
   39bc4:	add	x8, x8, #0x1
   39bc8:	stur	x8, [x29, #-152]
   39bcc:	b	39b68 <rpl_re_set_registers@@Base+0xcbcc>
   39bd0:	ldur	x8, [x29, #-152]
   39bd4:	ldur	x9, [x29, #-32]
   39bd8:	cmp	x8, x9
   39bdc:	b.ne	39c10 <rpl_re_set_registers@@Base+0xcc74>  // b.any
   39be0:	sub	x8, x29, #0x60
   39be4:	ldr	x0, [x8, #16]
   39be8:	bl	a930 <free@plt>
   39bec:	ldurb	w9, [x29, #-137]
   39bf0:	tbnz	w9, #0, 39bf8 <rpl_re_set_registers@@Base+0xcc5c>
   39bf4:	b	39c00 <rpl_re_set_registers@@Base+0xcc64>
   39bf8:	ldur	x0, [x29, #-136]
   39bfc:	bl	a930 <free@plt>
   39c00:	ldur	x0, [x29, #-104]
   39c04:	bl	4172c <rpl_re_set_registers@@Base+0x14790>
   39c08:	stur	w0, [x29, #-4]
   39c0c:	b	39d70 <rpl_re_set_registers@@Base+0xcdd4>
   39c10:	ldur	x0, [x29, #-104]
   39c14:	ldur	x2, [x29, #-32]
   39c18:	ldur	x3, [x29, #-40]
   39c1c:	sub	x1, x29, #0x40
   39c20:	sub	x4, x29, #0x60
   39c24:	bl	419a8 <rpl_re_set_registers@@Base+0x14a0c>
   39c28:	stur	x0, [x29, #-72]
   39c2c:	b	39c58 <rpl_re_set_registers@@Base+0xccbc>
   39c30:	sub	x8, x29, #0x60
   39c34:	ldr	x0, [x8, #16]
   39c38:	bl	a930 <free@plt>
   39c3c:	ldurb	w9, [x29, #-137]
   39c40:	tbnz	w9, #0, 39c48 <rpl_re_set_registers@@Base+0xccac>
   39c44:	b	39c50 <rpl_re_set_registers@@Base+0xccb4>
   39c48:	ldur	x0, [x29, #-136]
   39c4c:	bl	a930 <free@plt>
   39c50:	stur	wzr, [x29, #-4]
   39c54:	b	39d70 <rpl_re_set_registers@@Base+0xcdd4>
   39c58:	ldur	x0, [x29, #-24]
   39c5c:	ldur	x1, [x29, #-32]
   39c60:	ldur	x2, [x29, #-40]
   39c64:	ldur	x4, [x29, #-72]
   39c68:	ldur	x6, [x29, #-104]
   39c6c:	sub	x3, x29, #0x40
   39c70:	sub	x5, x29, #0x60
   39c74:	bl	41adc <rpl_re_set_registers@@Base+0x14b40>
   39c78:	stur	x0, [x29, #-72]
   39c7c:	ldur	x8, [x29, #-72]
   39c80:	cmp	x8, #0x0
   39c84:	cset	w9, lt  // lt = tstop
   39c88:	and	w9, w9, #0x1
   39c8c:	mov	w0, w9
   39c90:	sxtw	x8, w0
   39c94:	cbz	x8, 39d40 <rpl_re_set_registers@@Base+0xcda4>
   39c98:	ldur	x8, [x29, #-72]
   39c9c:	mov	x9, #0xfffffffffffffffe    	// #-2
   39ca0:	cmp	x8, x9
   39ca4:	cset	w10, eq  // eq = none
   39ca8:	and	w10, w10, #0x1
   39cac:	mov	w0, w10
   39cb0:	sxtw	x8, w0
   39cb4:	cbz	x8, 39cec <rpl_re_set_registers@@Base+0xcd50>
   39cb8:	sub	x8, x29, #0x60
   39cbc:	ldr	x0, [x8, #16]
   39cc0:	bl	a930 <free@plt>
   39cc4:	ldurb	w9, [x29, #-137]
   39cc8:	tbnz	w9, #0, 39cd0 <rpl_re_set_registers@@Base+0xcd34>
   39ccc:	b	39cd8 <rpl_re_set_registers@@Base+0xcd3c>
   39cd0:	ldur	x0, [x29, #-136]
   39cd4:	bl	a930 <free@plt>
   39cd8:	ldur	x0, [x29, #-104]
   39cdc:	bl	4172c <rpl_re_set_registers@@Base+0x14790>
   39ce0:	mov	w8, #0xc                   	// #12
   39ce4:	stur	w8, [x29, #-4]
   39ce8:	b	39d70 <rpl_re_set_registers@@Base+0xcdd4>
   39cec:	ldur	x8, [x29, #-104]
   39cf0:	cbz	x8, 39d14 <rpl_re_set_registers@@Base+0xcd78>
   39cf4:	ldur	x0, [x29, #-104]
   39cf8:	ldur	x2, [x29, #-32]
   39cfc:	ldur	x3, [x29, #-40]
   39d00:	sub	x1, x29, #0x40
   39d04:	sub	x4, x29, #0x60
   39d08:	bl	419a8 <rpl_re_set_registers@@Base+0x14a0c>
   39d0c:	stur	x0, [x29, #-72]
   39d10:	b	39d40 <rpl_re_set_registers@@Base+0xcda4>
   39d14:	sub	x8, x29, #0x60
   39d18:	ldr	x0, [x8, #16]
   39d1c:	bl	a930 <free@plt>
   39d20:	ldurb	w9, [x29, #-137]
   39d24:	tbnz	w9, #0, 39d2c <rpl_re_set_registers@@Base+0xcd90>
   39d28:	b	39d34 <rpl_re_set_registers@@Base+0xcd98>
   39d2c:	ldur	x0, [x29, #-136]
   39d30:	bl	a930 <free@plt>
   39d34:	mov	w8, #0x1                   	// #1
   39d38:	stur	w8, [x29, #-4]
   39d3c:	b	39d70 <rpl_re_set_registers@@Base+0xcdd4>
   39d40:	b	39b04 <rpl_re_set_registers@@Base+0xcb68>
   39d44:	sub	x8, x29, #0x60
   39d48:	ldr	x0, [x8, #16]
   39d4c:	bl	a930 <free@plt>
   39d50:	ldurb	w9, [x29, #-137]
   39d54:	tbnz	w9, #0, 39d5c <rpl_re_set_registers@@Base+0xcdc0>
   39d58:	b	39d64 <rpl_re_set_registers@@Base+0xcdc8>
   39d5c:	ldur	x0, [x29, #-136]
   39d60:	bl	a930 <free@plt>
   39d64:	ldur	x0, [x29, #-104]
   39d68:	bl	4172c <rpl_re_set_registers@@Base+0x14790>
   39d6c:	stur	w0, [x29, #-4]
   39d70:	ldur	w0, [x29, #-4]
   39d74:	mov	sp, x29
   39d78:	ldp	x29, x30, [sp], #16
   39d7c:	ret
   39d80:	sub	sp, sp, #0x20
   39d84:	stp	x29, x30, [sp, #16]
   39d88:	add	x29, sp, #0x10
   39d8c:	str	x0, [sp, #8]
   39d90:	ldr	x0, [sp, #8]
   39d94:	bl	39898 <rpl_re_set_registers@@Base+0xc8fc>
   39d98:	ldr	x8, [sp, #8]
   39d9c:	ldr	x0, [x8, #248]
   39da0:	bl	a930 <free@plt>
   39da4:	ldr	x8, [sp, #8]
   39da8:	ldr	x0, [x8, #216]
   39dac:	bl	a930 <free@plt>
   39db0:	ldp	x29, x30, [sp, #16]
   39db4:	add	sp, sp, #0x20
   39db8:	ret
   39dbc:	sub	sp, sp, #0x50
   39dc0:	stp	x29, x30, [sp, #64]
   39dc4:	add	x29, sp, #0x40
   39dc8:	stur	x0, [x29, #-16]
   39dcc:	stur	x1, [x29, #-24]
   39dd0:	stur	w2, [x29, #-28]
   39dd4:	ldur	x8, [x29, #-24]
   39dd8:	cmp	x8, #0x0
   39ddc:	cset	w9, lt  // lt = tstop
   39de0:	and	w9, w9, #0x1
   39de4:	mov	w0, w9
   39de8:	sxtw	x8, w0
   39dec:	cbz	x8, 39e00 <rpl_re_set_registers@@Base+0xce64>
   39df0:	ldur	x8, [x29, #-16]
   39df4:	ldr	w9, [x8, #112]
   39df8:	stur	w9, [x29, #-4]
   39dfc:	b	39fb8 <rpl_re_set_registers@@Base+0xd01c>
   39e00:	ldur	x8, [x29, #-24]
   39e04:	ldur	x9, [x29, #-16]
   39e08:	ldr	x9, [x9, #88]
   39e0c:	cmp	x8, x9
   39e10:	cset	w10, eq  // eq = none
   39e14:	and	w10, w10, #0x1
   39e18:	mov	w0, w10
   39e1c:	sxtw	x8, w0
   39e20:	cbz	x8, 39e40 <rpl_re_set_registers@@Base+0xcea4>
   39e24:	ldur	w8, [x29, #-28]
   39e28:	mov	w9, #0x8                   	// #8
   39e2c:	mov	w10, #0xa                   	// #10
   39e30:	tst	w8, #0x2
   39e34:	csel	w8, w9, w10, ne  // ne = any
   39e38:	stur	w8, [x29, #-4]
   39e3c:	b	39fb8 <rpl_re_set_registers@@Base+0xd01c>
   39e40:	ldur	x8, [x29, #-16]
   39e44:	ldr	w9, [x8, #144]
   39e48:	cmp	w9, #0x1
   39e4c:	b.le	39f40 <rpl_re_set_registers@@Base+0xcfa4>
   39e50:	ldur	x8, [x29, #-24]
   39e54:	str	x8, [sp, #16]
   39e58:	ldur	x8, [x29, #-16]
   39e5c:	ldr	x8, [x8, #16]
   39e60:	ldr	x9, [sp, #16]
   39e64:	ldr	w10, [x8, x9, lsl #2]
   39e68:	mov	w11, #0xffffffff            	// #-1
   39e6c:	cmp	w10, w11
   39e70:	b.ne	39ea4 <rpl_re_set_registers@@Base+0xcf08>  // b.any
   39e74:	ldr	x8, [sp, #16]
   39e78:	subs	x8, x8, #0x1
   39e7c:	str	x8, [sp, #16]
   39e80:	ldr	x8, [sp, #16]
   39e84:	cmp	x8, #0x0
   39e88:	cset	w9, ge  // ge = tcont
   39e8c:	tbnz	w9, #0, 39ea0 <rpl_re_set_registers@@Base+0xcf04>
   39e90:	ldur	x8, [x29, #-16]
   39e94:	ldr	w9, [x8, #112]
   39e98:	stur	w9, [x29, #-4]
   39e9c:	b	39fb8 <rpl_re_set_registers@@Base+0xd01c>
   39ea0:	b	39e58 <rpl_re_set_registers@@Base+0xcebc>
   39ea4:	ldur	x8, [x29, #-16]
   39ea8:	ldr	x8, [x8, #16]
   39eac:	ldr	x9, [sp, #16]
   39eb0:	ldr	w10, [x8, x9, lsl #2]
   39eb4:	str	w10, [sp, #28]
   39eb8:	ldur	x8, [x29, #-16]
   39ebc:	ldrb	w10, [x8, #142]
   39ec0:	cmp	w10, #0x0
   39ec4:	cset	w10, ne  // ne = any
   39ec8:	and	w10, w10, #0x1
   39ecc:	mov	w0, w10
   39ed0:	sxtw	x8, w0
   39ed4:	cbz	x8, 39efc <rpl_re_set_registers@@Base+0xcf60>
   39ed8:	ldr	w0, [sp, #28]
   39edc:	bl	b880 <iswalnum@plt>
   39ee0:	cbnz	w0, 39ef0 <rpl_re_set_registers@@Base+0xcf54>
   39ee4:	ldr	w8, [sp, #28]
   39ee8:	cmp	w8, #0x5f
   39eec:	b.ne	39efc <rpl_re_set_registers@@Base+0xcf60>  // b.any
   39ef0:	mov	w8, #0x1                   	// #1
   39ef4:	stur	w8, [x29, #-4]
   39ef8:	b	39fb8 <rpl_re_set_registers@@Base+0xd01c>
   39efc:	ldr	w8, [sp, #28]
   39f00:	mov	w9, #0x0                   	// #0
   39f04:	cmp	w8, #0xa
   39f08:	str	w9, [sp, #12]
   39f0c:	b.ne	39f24 <rpl_re_set_registers@@Base+0xcf88>  // b.any
   39f10:	ldur	x8, [x29, #-16]
   39f14:	ldrb	w9, [x8, #141]
   39f18:	cmp	w9, #0x0
   39f1c:	cset	w9, ne  // ne = any
   39f20:	str	w9, [sp, #12]
   39f24:	ldr	w8, [sp, #12]
   39f28:	mov	w9, #0x2                   	// #2
   39f2c:	mov	w10, wzr
   39f30:	tst	w8, #0x1
   39f34:	csel	w8, w9, w10, ne  // ne = any
   39f38:	stur	w8, [x29, #-4]
   39f3c:	b	39fb8 <rpl_re_set_registers@@Base+0xd01c>
   39f40:	ldur	x8, [x29, #-16]
   39f44:	ldr	x8, [x8, #8]
   39f48:	ldur	x9, [x29, #-24]
   39f4c:	ldrb	w10, [x8, x9]
   39f50:	str	w10, [sp, #32]
   39f54:	ldur	x8, [x29, #-16]
   39f58:	ldr	x0, [x8, #128]
   39f5c:	ldrsw	x1, [sp, #32]
   39f60:	bl	3a128 <rpl_re_set_registers@@Base+0xd18c>
   39f64:	tbnz	w0, #0, 39f6c <rpl_re_set_registers@@Base+0xcfd0>
   39f68:	b	39f78 <rpl_re_set_registers@@Base+0xcfdc>
   39f6c:	mov	w8, #0x1                   	// #1
   39f70:	stur	w8, [x29, #-4]
   39f74:	b	39fb8 <rpl_re_set_registers@@Base+0xd01c>
   39f78:	ldr	w8, [sp, #32]
   39f7c:	mov	w9, #0x0                   	// #0
   39f80:	cmp	w8, #0xa
   39f84:	str	w9, [sp, #8]
   39f88:	b.ne	39fa0 <rpl_re_set_registers@@Base+0xd004>  // b.any
   39f8c:	ldur	x8, [x29, #-16]
   39f90:	ldrb	w9, [x8, #141]
   39f94:	cmp	w9, #0x0
   39f98:	cset	w9, ne  // ne = any
   39f9c:	str	w9, [sp, #8]
   39fa0:	ldr	w8, [sp, #8]
   39fa4:	mov	w9, #0x2                   	// #2
   39fa8:	mov	w10, wzr
   39fac:	tst	w8, #0x1
   39fb0:	csel	w8, w9, w10, ne  // ne = any
   39fb4:	stur	w8, [x29, #-4]
   39fb8:	ldur	w0, [x29, #-4]
   39fbc:	ldp	x29, x30, [sp, #64]
   39fc0:	add	sp, sp, #0x50
   39fc4:	ret
   39fc8:	sub	sp, sp, #0x60
   39fcc:	stp	x29, x30, [sp, #80]
   39fd0:	add	x29, sp, #0x50
   39fd4:	mov	w8, #0xffffffff            	// #-1
   39fd8:	stur	x0, [x29, #-8]
   39fdc:	stur	x1, [x29, #-16]
   39fe0:	stur	x2, [x29, #-24]
   39fe4:	str	w8, [sp, #28]
   39fe8:	ldur	x9, [x29, #-8]
   39fec:	ldr	x9, [x9, #40]
   39ff0:	ldur	x10, [x29, #-8]
   39ff4:	ldr	x10, [x10, #56]
   39ff8:	add	x9, x9, x10
   39ffc:	str	x9, [sp, #40]
   3a000:	ldr	x8, [sp, #40]
   3a004:	ldur	x9, [x29, #-16]
   3a008:	cmp	x8, x9
   3a00c:	b.ge	3a10c <rpl_re_set_registers@@Base+0xd170>  // b.tcont
   3a010:	ldur	x8, [x29, #-8]
   3a014:	ldr	x8, [x8, #80]
   3a018:	ldr	x9, [sp, #40]
   3a01c:	subs	x8, x8, x9
   3a020:	str	x8, [sp, #16]
   3a024:	ldur	x8, [x29, #-8]
   3a028:	ldr	x8, [x8, #32]
   3a02c:	stur	x8, [x29, #-32]
   3a030:	ldur	x8, [x29, #-8]
   3a034:	ldr	x8, [x8]
   3a038:	ldr	x9, [sp, #40]
   3a03c:	add	x1, x8, x9
   3a040:	ldr	x2, [sp, #16]
   3a044:	ldur	x8, [x29, #-8]
   3a048:	add	x3, x8, #0x20
   3a04c:	add	x0, sp, #0x18
   3a050:	bl	b7e0 <rpl_mbrtowc@plt>
   3a054:	str	x0, [sp, #32]
   3a058:	ldr	x8, [sp, #32]
   3a05c:	mov	x9, #0xfffffffffffffffe    	// #-2
   3a060:	mov	w10, #0x1                   	// #1
   3a064:	cmp	x8, x9
   3a068:	str	w10, [sp, #12]
   3a06c:	b.eq	3a098 <rpl_re_set_registers@@Base+0xd0fc>  // b.none
   3a070:	ldr	x8, [sp, #32]
   3a074:	mov	x9, #0xffffffffffffffff    	// #-1
   3a078:	mov	w10, #0x1                   	// #1
   3a07c:	cmp	x8, x9
   3a080:	str	w10, [sp, #12]
   3a084:	b.eq	3a098 <rpl_re_set_registers@@Base+0xd0fc>  // b.none
   3a088:	ldr	x8, [sp, #32]
   3a08c:	cmp	x8, #0x0
   3a090:	cset	w9, eq  // eq = none
   3a094:	str	w9, [sp, #12]
   3a098:	ldr	w8, [sp, #12]
   3a09c:	and	w8, w8, #0x1
   3a0a0:	mov	w0, w8
   3a0a4:	sxtw	x9, w0
   3a0a8:	cbz	x9, 3a0f0 <rpl_re_set_registers@@Base+0xd154>
   3a0ac:	ldr	x8, [sp, #32]
   3a0b0:	cbz	x8, 3a0bc <rpl_re_set_registers@@Base+0xd120>
   3a0b4:	ldr	x8, [sp, #16]
   3a0b8:	cbnz	x8, 3a0c4 <rpl_re_set_registers@@Base+0xd128>
   3a0bc:	str	wzr, [sp, #28]
   3a0c0:	b	3a0d8 <rpl_re_set_registers@@Base+0xd13c>
   3a0c4:	ldur	x8, [x29, #-8]
   3a0c8:	ldr	x8, [x8]
   3a0cc:	ldr	x9, [sp, #40]
   3a0d0:	ldrb	w10, [x8, x9]
   3a0d4:	str	w10, [sp, #28]
   3a0d8:	mov	x8, #0x1                   	// #1
   3a0dc:	str	x8, [sp, #32]
   3a0e0:	ldur	x8, [x29, #-8]
   3a0e4:	ldur	x9, [x29, #-32]
   3a0e8:	str	x9, [x8, #32]
   3a0ec:	b	3a0f8 <rpl_re_set_registers@@Base+0xd15c>
   3a0f0:	ldr	w8, [sp, #24]
   3a0f4:	str	w8, [sp, #28]
   3a0f8:	ldr	x8, [sp, #32]
   3a0fc:	ldr	x9, [sp, #40]
   3a100:	add	x8, x9, x8
   3a104:	str	x8, [sp, #40]
   3a108:	b	3a000 <rpl_re_set_registers@@Base+0xd064>
   3a10c:	ldr	w8, [sp, #28]
   3a110:	ldur	x9, [x29, #-24]
   3a114:	str	w8, [x9]
   3a118:	ldr	x0, [sp, #40]
   3a11c:	ldp	x29, x30, [sp, #80]
   3a120:	add	sp, sp, #0x60
   3a124:	ret
   3a128:	sub	sp, sp, #0x10
   3a12c:	mov	x8, #0x40                  	// #64
   3a130:	str	x0, [sp, #8]
   3a134:	str	x1, [sp]
   3a138:	ldr	x9, [sp, #8]
   3a13c:	ldr	x10, [sp]
   3a140:	sdiv	x10, x10, x8
   3a144:	ldr	x9, [x9, x10, lsl #3]
   3a148:	ldr	x10, [sp]
   3a14c:	sdiv	x11, x10, x8
   3a150:	mul	x8, x11, x8
   3a154:	subs	x8, x10, x8
   3a158:	lsr	x8, x9, x8
   3a15c:	tst	x8, #0x1
   3a160:	cset	w12, ne  // ne = any
   3a164:	and	w0, w12, #0x1
   3a168:	add	sp, sp, #0x10
   3a16c:	ret
   3a170:	sub	sp, sp, #0x50
   3a174:	stp	x29, x30, [sp, #64]
   3a178:	add	x29, sp, #0x40
   3a17c:	stur	x0, [x29, #-16]
   3a180:	stur	x1, [x29, #-24]
   3a184:	str	x2, [sp, #32]
   3a188:	ldur	x8, [x29, #-16]
   3a18c:	ldr	x8, [x8, #152]
   3a190:	str	x8, [sp, #24]
   3a194:	str	xzr, [sp, #16]
   3a198:	ldr	x8, [sp, #16]
   3a19c:	ldur	x9, [x29, #-24]
   3a1a0:	ldr	x9, [x9, #8]
   3a1a4:	cmp	x8, x9
   3a1a8:	b.ge	3a284 <rpl_re_set_registers@@Base+0xd2e8>  // b.tcont
   3a1ac:	ldur	x8, [x29, #-24]
   3a1b0:	mov	x9, #0x10                  	// #16
   3a1b4:	ldr	x8, [x8, #16]
   3a1b8:	ldr	x10, [sp, #16]
   3a1bc:	ldr	x8, [x8, x10, lsl #3]
   3a1c0:	str	x8, [sp]
   3a1c4:	ldr	x8, [sp, #24]
   3a1c8:	ldr	x8, [x8]
   3a1cc:	ldr	x10, [sp]
   3a1d0:	mul	x9, x9, x10
   3a1d4:	add	x8, x8, x9
   3a1d8:	ldr	w11, [x8, #8]
   3a1dc:	and	w11, w11, #0xff
   3a1e0:	cmp	w11, #0x8
   3a1e4:	b.ne	3a274 <rpl_re_set_registers@@Base+0xd2d8>  // b.any
   3a1e8:	ldr	x8, [sp, #24]
   3a1ec:	ldr	x8, [x8]
   3a1f0:	ldr	x9, [sp]
   3a1f4:	mov	x10, #0x10                  	// #16
   3a1f8:	mul	x9, x10, x9
   3a1fc:	ldr	x8, [x8, x9]
   3a200:	cmp	x8, #0x40
   3a204:	b.ge	3a274 <rpl_re_set_registers@@Base+0xd2d8>  // b.tcont
   3a208:	ldr	x8, [sp, #24]
   3a20c:	ldr	x8, [x8, #160]
   3a210:	ldr	x9, [sp, #24]
   3a214:	ldr	x9, [x9]
   3a218:	ldr	x10, [sp]
   3a21c:	mov	x11, #0x10                  	// #16
   3a220:	mul	x10, x11, x10
   3a224:	ldr	x9, [x9, x10]
   3a228:	mov	x10, #0x1                   	// #1
   3a22c:	lsl	x9, x10, x9
   3a230:	and	x8, x8, x9
   3a234:	cbz	x8, 3a274 <rpl_re_set_registers@@Base+0xd2d8>
   3a238:	ldur	x0, [x29, #-16]
   3a23c:	ldr	x1, [sp]
   3a240:	ldr	x2, [sp, #32]
   3a244:	bl	3afb0 <rpl_re_set_registers@@Base+0xe014>
   3a248:	str	w0, [sp, #12]
   3a24c:	ldr	w8, [sp, #12]
   3a250:	cmp	w8, #0x0
   3a254:	cset	w8, ne  // ne = any
   3a258:	and	w8, w8, #0x1
   3a25c:	mov	w1, w8
   3a260:	sxtw	x9, w1
   3a264:	cbz	x9, 3a274 <rpl_re_set_registers@@Base+0xd2d8>
   3a268:	ldr	w8, [sp, #12]
   3a26c:	stur	w8, [x29, #-4]
   3a270:	b	3a288 <rpl_re_set_registers@@Base+0xd2ec>
   3a274:	ldr	x8, [sp, #16]
   3a278:	add	x8, x8, #0x1
   3a27c:	str	x8, [sp, #16]
   3a280:	b	3a198 <rpl_re_set_registers@@Base+0xd1fc>
   3a284:	stur	wzr, [x29, #-4]
   3a288:	ldur	w0, [x29, #-4]
   3a28c:	ldp	x29, x30, [sp, #64]
   3a290:	add	sp, sp, #0x50
   3a294:	ret
   3a298:	sub	sp, sp, #0xe0
   3a29c:	stp	x29, x30, [sp, #208]
   3a2a0:	add	x29, sp, #0xd0
   3a2a4:	stur	x0, [x29, #-8]
   3a2a8:	stur	x1, [x29, #-16]
   3a2ac:	ldur	x8, [x29, #-8]
   3a2b0:	ldr	x8, [x8, #152]
   3a2b4:	stur	x8, [x29, #-24]
   3a2b8:	ldur	x8, [x29, #-8]
   3a2bc:	ldr	x8, [x8, #72]
   3a2c0:	stur	x8, [x29, #-48]
   3a2c4:	stur	xzr, [x29, #-40]
   3a2c8:	ldur	x8, [x29, #-40]
   3a2cc:	ldur	x9, [x29, #-16]
   3a2d0:	ldr	x9, [x9, #8]
   3a2d4:	cmp	x8, x9
   3a2d8:	b.ge	3a7e8 <rpl_re_set_registers@@Base+0xd84c>  // b.tcont
   3a2dc:	ldur	x8, [x29, #-16]
   3a2e0:	mov	x9, #0x10                  	// #16
   3a2e4:	ldr	x8, [x8, #16]
   3a2e8:	ldur	x10, [x29, #-40]
   3a2ec:	ldr	x8, [x8, x10, lsl #3]
   3a2f0:	stur	x8, [x29, #-80]
   3a2f4:	ldur	x8, [x29, #-24]
   3a2f8:	ldr	x8, [x8]
   3a2fc:	ldur	x10, [x29, #-80]
   3a300:	mul	x9, x9, x10
   3a304:	add	x8, x8, x9
   3a308:	stur	x8, [x29, #-96]
   3a30c:	ldur	x8, [x29, #-96]
   3a310:	ldr	w11, [x8, #8]
   3a314:	and	w11, w11, #0xff
   3a318:	cmp	w11, #0x4
   3a31c:	b.eq	3a324 <rpl_re_set_registers@@Base+0xd388>  // b.none
   3a320:	b	3a7d8 <rpl_re_set_registers@@Base+0xd83c>
   3a324:	ldur	x8, [x29, #-96]
   3a328:	mov	x9, #0x8                   	// #8
   3a32c:	ldr	w10, [x8, #8]
   3a330:	lsr	w9, w10, w9
   3a334:	and	w9, w9, #0x3ff
   3a338:	cbz	w9, 3a3f8 <rpl_re_set_registers@@Base+0xd45c>
   3a33c:	ldur	x0, [x29, #-8]
   3a340:	ldur	x1, [x29, #-48]
   3a344:	ldur	x8, [x29, #-8]
   3a348:	ldr	w2, [x8, #160]
   3a34c:	bl	39dbc <rpl_re_set_registers@@Base+0xce20>
   3a350:	stur	w0, [x29, #-84]
   3a354:	ldur	x8, [x29, #-96]
   3a358:	mov	x9, #0x8                   	// #8
   3a35c:	ldr	w10, [x8, #8]
   3a360:	lsr	w9, w10, w9
   3a364:	and	w9, w9, #0x3ff
   3a368:	and	w9, w9, #0x4
   3a36c:	cbz	w9, 3a37c <rpl_re_set_registers@@Base+0xd3e0>
   3a370:	ldur	w8, [x29, #-84]
   3a374:	and	w8, w8, #0x1
   3a378:	cbz	w8, 3a3f4 <rpl_re_set_registers@@Base+0xd458>
   3a37c:	ldur	x8, [x29, #-96]
   3a380:	mov	x9, #0x8                   	// #8
   3a384:	ldr	w10, [x8, #8]
   3a388:	lsr	w9, w10, w9
   3a38c:	and	w9, w9, #0x3ff
   3a390:	and	w9, w9, #0x8
   3a394:	cbz	w9, 3a3a4 <rpl_re_set_registers@@Base+0xd408>
   3a398:	ldur	w8, [x29, #-84]
   3a39c:	and	w8, w8, #0x1
   3a3a0:	cbnz	w8, 3a3f4 <rpl_re_set_registers@@Base+0xd458>
   3a3a4:	ldur	x8, [x29, #-96]
   3a3a8:	mov	x9, #0x8                   	// #8
   3a3ac:	ldr	w10, [x8, #8]
   3a3b0:	lsr	w9, w10, w9
   3a3b4:	and	w9, w9, #0x3ff
   3a3b8:	and	w9, w9, #0x20
   3a3bc:	cbz	w9, 3a3cc <rpl_re_set_registers@@Base+0xd430>
   3a3c0:	ldur	w8, [x29, #-84]
   3a3c4:	and	w8, w8, #0x2
   3a3c8:	cbz	w8, 3a3f4 <rpl_re_set_registers@@Base+0xd458>
   3a3cc:	ldur	x8, [x29, #-96]
   3a3d0:	mov	x9, #0x8                   	// #8
   3a3d4:	ldr	w10, [x8, #8]
   3a3d8:	lsr	w9, w10, w9
   3a3dc:	and	w9, w9, #0x3ff
   3a3e0:	and	w9, w9, #0x80
   3a3e4:	cbz	w9, 3a3f8 <rpl_re_set_registers@@Base+0xd45c>
   3a3e8:	ldur	w8, [x29, #-84]
   3a3ec:	and	w8, w8, #0x8
   3a3f0:	cbnz	w8, 3a3f8 <rpl_re_set_registers@@Base+0xd45c>
   3a3f4:	b	3a7d8 <rpl_re_set_registers@@Base+0xd83c>
   3a3f8:	ldur	x8, [x29, #-8]
   3a3fc:	ldr	x8, [x8, #200]
   3a400:	stur	x8, [x29, #-72]
   3a404:	ldur	x0, [x29, #-8]
   3a408:	ldur	x1, [x29, #-80]
   3a40c:	ldur	x2, [x29, #-48]
   3a410:	bl	3b134 <rpl_re_set_registers@@Base+0xe198>
   3a414:	stur	w0, [x29, #-28]
   3a418:	ldur	w9, [x29, #-28]
   3a41c:	cmp	w9, #0x0
   3a420:	cset	w9, ne  // ne = any
   3a424:	and	w9, w9, #0x1
   3a428:	mov	w1, w9
   3a42c:	sxtw	x8, w1
   3a430:	cbz	x8, 3a438 <rpl_re_set_registers@@Base+0xd49c>
   3a434:	b	3a7ec <rpl_re_set_registers@@Base+0xd850>
   3a438:	ldur	x8, [x29, #-72]
   3a43c:	ldur	x9, [x29, #-8]
   3a440:	ldr	x9, [x9, #200]
   3a444:	cmp	x8, x9
   3a448:	b.ge	3a7d8 <rpl_re_set_registers@@Base+0xd83c>  // b.tcont
   3a44c:	ldur	x8, [x29, #-8]
   3a450:	ldr	x8, [x8, #216]
   3a454:	ldur	x9, [x29, #-72]
   3a458:	mov	x10, #0x28                  	// #40
   3a45c:	mul	x9, x10, x9
   3a460:	add	x8, x8, x9
   3a464:	str	x8, [sp, #80]
   3a468:	ldr	x8, [sp, #80]
   3a46c:	ldr	x8, [x8]
   3a470:	ldur	x9, [x29, #-80]
   3a474:	cmp	x8, x9
   3a478:	b.ne	3a490 <rpl_re_set_registers@@Base+0xd4f4>  // b.any
   3a47c:	ldr	x8, [sp, #80]
   3a480:	ldr	x8, [x8, #8]
   3a484:	ldur	x9, [x29, #-48]
   3a488:	cmp	x8, x9
   3a48c:	b.eq	3a494 <rpl_re_set_registers@@Base+0xd4f8>  // b.none
   3a490:	b	3a7c8 <rpl_re_set_registers@@Base+0xd82c>
   3a494:	ldr	x8, [sp, #80]
   3a498:	ldr	x8, [x8, #24]
   3a49c:	ldr	x9, [sp, #80]
   3a4a0:	ldr	x9, [x9, #16]
   3a4a4:	subs	x8, x8, x9
   3a4a8:	str	x8, [sp, #96]
   3a4ac:	ldr	x8, [sp, #96]
   3a4b0:	cbnz	x8, 3a4ec <rpl_re_set_registers@@Base+0xd550>
   3a4b4:	ldur	x8, [x29, #-24]
   3a4b8:	ldr	x8, [x8, #48]
   3a4bc:	ldur	x9, [x29, #-24]
   3a4c0:	ldr	x9, [x9, #40]
   3a4c4:	ldur	x10, [x29, #-80]
   3a4c8:	mov	x11, #0x18                  	// #24
   3a4cc:	mul	x10, x11, x10
   3a4d0:	add	x9, x9, x10
   3a4d4:	ldr	x9, [x9, #16]
   3a4d8:	ldr	x9, [x9]
   3a4dc:	mul	x9, x11, x9
   3a4e0:	add	x8, x8, x9
   3a4e4:	str	x8, [sp, #48]
   3a4e8:	b	3a514 <rpl_re_set_registers@@Base+0xd578>
   3a4ec:	ldur	x8, [x29, #-24]
   3a4f0:	ldr	x8, [x8, #48]
   3a4f4:	ldur	x9, [x29, #-24]
   3a4f8:	mov	x10, #0x18                  	// #24
   3a4fc:	ldr	x9, [x9, #24]
   3a500:	ldur	x11, [x29, #-80]
   3a504:	ldr	x9, [x9, x11, lsl #3]
   3a508:	mul	x9, x10, x9
   3a50c:	add	x8, x8, x9
   3a510:	str	x8, [sp, #48]
   3a514:	ldr	x8, [sp, #48]
   3a518:	str	x8, [sp, #104]
   3a51c:	ldur	x8, [x29, #-48]
   3a520:	ldr	x9, [sp, #80]
   3a524:	ldr	x9, [x9, #24]
   3a528:	add	x8, x8, x9
   3a52c:	ldr	x9, [sp, #80]
   3a530:	ldr	x9, [x9, #16]
   3a534:	subs	x8, x8, x9
   3a538:	stur	x8, [x29, #-56]
   3a53c:	ldur	x0, [x29, #-8]
   3a540:	ldur	x8, [x29, #-56]
   3a544:	subs	x1, x8, #0x1
   3a548:	ldur	x8, [x29, #-8]
   3a54c:	ldr	w2, [x8, #160]
   3a550:	bl	39dbc <rpl_re_set_registers@@Base+0xce20>
   3a554:	stur	w0, [x29, #-84]
   3a558:	ldur	x8, [x29, #-8]
   3a55c:	ldr	x8, [x8, #184]
   3a560:	ldur	x9, [x29, #-56]
   3a564:	mov	x10, #0x8                   	// #8
   3a568:	mul	x9, x10, x9
   3a56c:	add	x8, x8, x9
   3a570:	ldr	x8, [x8]
   3a574:	str	x8, [sp, #88]
   3a578:	ldur	x8, [x29, #-8]
   3a57c:	ldr	x8, [x8, #184]
   3a580:	ldur	x9, [x29, #-48]
   3a584:	mul	x9, x10, x9
   3a588:	add	x8, x8, x9
   3a58c:	ldr	x8, [x8]
   3a590:	cbnz	x8, 3a5a0 <rpl_re_set_registers@@Base+0xd604>
   3a594:	mov	x8, xzr
   3a598:	str	x8, [sp, #40]
   3a59c:	b	3a5c4 <rpl_re_set_registers@@Base+0xd628>
   3a5a0:	ldur	x8, [x29, #-8]
   3a5a4:	ldr	x8, [x8, #184]
   3a5a8:	ldur	x9, [x29, #-48]
   3a5ac:	mov	x10, #0x8                   	// #8
   3a5b0:	mul	x9, x10, x9
   3a5b4:	add	x8, x8, x9
   3a5b8:	ldr	x8, [x8]
   3a5bc:	ldr	x8, [x8, #16]
   3a5c0:	str	x8, [sp, #40]
   3a5c4:	ldr	x8, [sp, #40]
   3a5c8:	stur	x8, [x29, #-64]
   3a5cc:	ldr	x8, [sp, #88]
   3a5d0:	cbnz	x8, 3a654 <rpl_re_set_registers@@Base+0xd6b8>
   3a5d4:	ldur	x1, [x29, #-24]
   3a5d8:	ldr	x2, [sp, #104]
   3a5dc:	ldur	w3, [x29, #-84]
   3a5e0:	sub	x0, x29, #0x1c
   3a5e4:	bl	3736c <rpl_re_set_registers@@Base+0xa3d0>
   3a5e8:	ldur	x8, [x29, #-8]
   3a5ec:	ldr	x8, [x8, #184]
   3a5f0:	ldur	x9, [x29, #-56]
   3a5f4:	mov	x10, #0x8                   	// #8
   3a5f8:	mul	x9, x10, x9
   3a5fc:	add	x8, x8, x9
   3a600:	str	x0, [x8]
   3a604:	ldur	x8, [x29, #-8]
   3a608:	ldr	x8, [x8, #184]
   3a60c:	ldur	x9, [x29, #-56]
   3a610:	mul	x9, x10, x9
   3a614:	add	x8, x8, x9
   3a618:	ldr	x8, [x8]
   3a61c:	mov	w11, #0x0                   	// #0
   3a620:	str	w11, [sp, #36]
   3a624:	cbnz	x8, 3a638 <rpl_re_set_registers@@Base+0xd69c>
   3a628:	ldur	w8, [x29, #-28]
   3a62c:	cmp	w8, #0x0
   3a630:	cset	w8, ne  // ne = any
   3a634:	str	w8, [sp, #36]
   3a638:	ldr	w8, [sp, #36]
   3a63c:	and	w8, w8, #0x1
   3a640:	mov	w0, w8
   3a644:	sxtw	x9, w0
   3a648:	cbz	x9, 3a650 <rpl_re_set_registers@@Base+0xd6b4>
   3a64c:	b	3a7ec <rpl_re_set_registers@@Base+0xd850>
   3a650:	b	3a730 <rpl_re_set_registers@@Base+0xd794>
   3a654:	ldr	x8, [sp, #88]
   3a658:	ldr	x1, [x8, #80]
   3a65c:	ldr	x2, [sp, #104]
   3a660:	add	x0, sp, #0x38
   3a664:	bl	3b72c <rpl_re_set_registers@@Base+0xe790>
   3a668:	stur	w0, [x29, #-28]
   3a66c:	ldur	w9, [x29, #-28]
   3a670:	cmp	w9, #0x0
   3a674:	cset	w9, ne  // ne = any
   3a678:	and	w9, w9, #0x1
   3a67c:	mov	w1, w9
   3a680:	sxtw	x8, w1
   3a684:	cbz	x8, 3a698 <rpl_re_set_registers@@Base+0xd6fc>
   3a688:	add	x8, sp, #0x38
   3a68c:	ldr	x0, [x8, #16]
   3a690:	bl	a930 <free@plt>
   3a694:	b	3a7ec <rpl_re_set_registers@@Base+0xd850>
   3a698:	ldur	x1, [x29, #-24]
   3a69c:	ldur	w3, [x29, #-84]
   3a6a0:	sub	x0, x29, #0x1c
   3a6a4:	add	x8, sp, #0x38
   3a6a8:	mov	x2, x8
   3a6ac:	str	x8, [sp, #24]
   3a6b0:	bl	3736c <rpl_re_set_registers@@Base+0xa3d0>
   3a6b4:	ldur	x8, [x29, #-8]
   3a6b8:	ldr	x8, [x8, #184]
   3a6bc:	ldur	x9, [x29, #-56]
   3a6c0:	mov	x10, #0x8                   	// #8
   3a6c4:	mul	x9, x10, x9
   3a6c8:	add	x8, x8, x9
   3a6cc:	str	x0, [x8]
   3a6d0:	ldr	x8, [sp, #24]
   3a6d4:	ldr	x0, [x8, #16]
   3a6d8:	str	x10, [sp, #16]
   3a6dc:	bl	a930 <free@plt>
   3a6e0:	ldur	x8, [x29, #-8]
   3a6e4:	ldr	x8, [x8, #184]
   3a6e8:	ldur	x9, [x29, #-56]
   3a6ec:	ldr	x10, [sp, #16]
   3a6f0:	mul	x9, x10, x9
   3a6f4:	add	x8, x8, x9
   3a6f8:	ldr	x8, [x8]
   3a6fc:	mov	w11, #0x0                   	// #0
   3a700:	str	w11, [sp, #12]
   3a704:	cbnz	x8, 3a718 <rpl_re_set_registers@@Base+0xd77c>
   3a708:	ldur	w8, [x29, #-28]
   3a70c:	cmp	w8, #0x0
   3a710:	cset	w8, ne  // ne = any
   3a714:	str	w8, [sp, #12]
   3a718:	ldr	w8, [sp, #12]
   3a71c:	and	w8, w8, #0x1
   3a720:	mov	w0, w8
   3a724:	sxtw	x9, w0
   3a728:	cbz	x9, 3a730 <rpl_re_set_registers@@Base+0xd794>
   3a72c:	b	3a7ec <rpl_re_set_registers@@Base+0xd850>
   3a730:	ldr	x8, [sp, #96]
   3a734:	cbnz	x8, 3a7c8 <rpl_re_set_registers@@Base+0xd82c>
   3a738:	ldur	x8, [x29, #-8]
   3a73c:	ldr	x8, [x8, #184]
   3a740:	ldur	x9, [x29, #-48]
   3a744:	mov	x10, #0x8                   	// #8
   3a748:	mul	x9, x10, x9
   3a74c:	add	x8, x8, x9
   3a750:	ldr	x8, [x8]
   3a754:	ldr	x8, [x8, #16]
   3a758:	ldur	x9, [x29, #-64]
   3a75c:	cmp	x8, x9
   3a760:	b.le	3a7c8 <rpl_re_set_registers@@Base+0xd82c>
   3a764:	ldur	x0, [x29, #-8]
   3a768:	ldr	x1, [sp, #104]
   3a76c:	ldur	x2, [x29, #-48]
   3a770:	bl	3a170 <rpl_re_set_registers@@Base+0xd1d4>
   3a774:	stur	w0, [x29, #-28]
   3a778:	ldur	w8, [x29, #-28]
   3a77c:	cmp	w8, #0x0
   3a780:	cset	w8, ne  // ne = any
   3a784:	and	w8, w8, #0x1
   3a788:	mov	w1, w8
   3a78c:	sxtw	x9, w1
   3a790:	cbz	x9, 3a798 <rpl_re_set_registers@@Base+0xd7fc>
   3a794:	b	3a7ec <rpl_re_set_registers@@Base+0xd850>
   3a798:	ldur	x0, [x29, #-8]
   3a79c:	ldr	x1, [sp, #104]
   3a7a0:	bl	3a298 <rpl_re_set_registers@@Base+0xd2fc>
   3a7a4:	stur	w0, [x29, #-28]
   3a7a8:	ldur	w8, [x29, #-28]
   3a7ac:	cmp	w8, #0x0
   3a7b0:	cset	w8, ne  // ne = any
   3a7b4:	and	w8, w8, #0x1
   3a7b8:	mov	w1, w8
   3a7bc:	sxtw	x9, w1
   3a7c0:	cbz	x9, 3a7c8 <rpl_re_set_registers@@Base+0xd82c>
   3a7c4:	b	3a7ec <rpl_re_set_registers@@Base+0xd850>
   3a7c8:	ldur	x8, [x29, #-72]
   3a7cc:	add	x8, x8, #0x1
   3a7d0:	stur	x8, [x29, #-72]
   3a7d4:	b	3a438 <rpl_re_set_registers@@Base+0xd49c>
   3a7d8:	ldur	x8, [x29, #-40]
   3a7dc:	add	x8, x8, #0x1
   3a7e0:	stur	x8, [x29, #-40]
   3a7e4:	b	3a2c8 <rpl_re_set_registers@@Base+0xd32c>
   3a7e8:	stur	wzr, [x29, #-28]
   3a7ec:	ldur	w0, [x29, #-28]
   3a7f0:	ldp	x29, x30, [sp, #208]
   3a7f4:	add	sp, sp, #0xe0
   3a7f8:	ret
   3a7fc:	sub	sp, sp, #0x60
   3a800:	stp	x29, x30, [sp, #80]
   3a804:	add	x29, sp, #0x50
   3a808:	mov	x8, #0xfffffffffffffff     	// #1152921504606846975
   3a80c:	stur	x0, [x29, #-16]
   3a810:	stur	w1, [x29, #-20]
   3a814:	ldur	x9, [x29, #-16]
   3a818:	stur	x9, [x29, #-32]
   3a81c:	ldur	x9, [x29, #-32]
   3a820:	ldr	x9, [x9, #64]
   3a824:	cmp	x8, x9
   3a828:	cset	w10, ls  // ls = plast
   3a82c:	and	w10, w10, #0x1
   3a830:	mov	w0, w10
   3a834:	sxtw	x8, w0
   3a838:	cbz	x8, 3a848 <rpl_re_set_registers@@Base+0xd8ac>
   3a83c:	mov	w8, #0xc                   	// #12
   3a840:	stur	w8, [x29, #-4]
   3a844:	b	3aa38 <rpl_re_set_registers@@Base+0xda9c>
   3a848:	ldur	x0, [x29, #-32]
   3a84c:	ldursw	x8, [x29, #-20]
   3a850:	ldur	x9, [x29, #-32]
   3a854:	ldr	x9, [x9, #88]
   3a858:	ldur	x10, [x29, #-32]
   3a85c:	ldr	x10, [x10, #64]
   3a860:	mov	x11, #0x2                   	// #2
   3a864:	mul	x10, x10, x11
   3a868:	cmp	x9, x10
   3a86c:	str	x0, [sp, #32]
   3a870:	str	x8, [sp, #24]
   3a874:	b.ge	3a888 <rpl_re_set_registers@@Base+0xd8ec>  // b.tcont
   3a878:	ldur	x8, [x29, #-32]
   3a87c:	ldr	x8, [x8, #88]
   3a880:	str	x8, [sp, #16]
   3a884:	b	3a89c <rpl_re_set_registers@@Base+0xd900>
   3a888:	ldur	x8, [x29, #-32]
   3a88c:	ldr	x8, [x8, #64]
   3a890:	mov	x9, #0x2                   	// #2
   3a894:	mul	x8, x8, x9
   3a898:	str	x8, [sp, #16]
   3a89c:	ldr	x8, [sp, #16]
   3a8a0:	ldr	x9, [sp, #24]
   3a8a4:	cmp	x9, x8
   3a8a8:	b.ge	3a8fc <rpl_re_set_registers@@Base+0xd960>  // b.tcont
   3a8ac:	ldur	x8, [x29, #-32]
   3a8b0:	ldr	x8, [x8, #88]
   3a8b4:	ldur	x9, [x29, #-32]
   3a8b8:	ldr	x9, [x9, #64]
   3a8bc:	mov	x10, #0x2                   	// #2
   3a8c0:	mul	x9, x9, x10
   3a8c4:	cmp	x8, x9
   3a8c8:	b.ge	3a8dc <rpl_re_set_registers@@Base+0xd940>  // b.tcont
   3a8cc:	ldur	x8, [x29, #-32]
   3a8d0:	ldr	x8, [x8, #88]
   3a8d4:	str	x8, [sp, #8]
   3a8d8:	b	3a8f0 <rpl_re_set_registers@@Base+0xd954>
   3a8dc:	ldur	x8, [x29, #-32]
   3a8e0:	ldr	x8, [x8, #64]
   3a8e4:	mov	x9, #0x2                   	// #2
   3a8e8:	mul	x8, x8, x9
   3a8ec:	str	x8, [sp, #8]
   3a8f0:	ldr	x8, [sp, #8]
   3a8f4:	str	x8, [sp]
   3a8f8:	b	3a904 <rpl_re_set_registers@@Base+0xd968>
   3a8fc:	ldursw	x8, [x29, #-20]
   3a900:	str	x8, [sp]
   3a904:	ldr	x8, [sp]
   3a908:	ldr	x0, [sp, #32]
   3a90c:	mov	x1, x8
   3a910:	bl	2e75c <rpl_re_set_registers@@Base+0x17c0>
   3a914:	stur	w0, [x29, #-24]
   3a918:	ldur	w9, [x29, #-24]
   3a91c:	cmp	w9, #0x0
   3a920:	cset	w9, ne  // ne = any
   3a924:	and	w9, w9, #0x1
   3a928:	mov	w1, w9
   3a92c:	sxtw	x8, w1
   3a930:	cbz	x8, 3a940 <rpl_re_set_registers@@Base+0xd9a4>
   3a934:	ldur	w8, [x29, #-24]
   3a938:	stur	w8, [x29, #-4]
   3a93c:	b	3aa38 <rpl_re_set_registers@@Base+0xda9c>
   3a940:	ldur	x8, [x29, #-16]
   3a944:	ldr	x8, [x8, #184]
   3a948:	cbz	x8, 3a9a4 <rpl_re_set_registers@@Base+0xda08>
   3a94c:	ldur	x8, [x29, #-16]
   3a950:	ldr	x0, [x8, #184]
   3a954:	ldur	x8, [x29, #-32]
   3a958:	ldr	x8, [x8, #64]
   3a95c:	add	x8, x8, #0x1
   3a960:	mov	x9, #0x8                   	// #8
   3a964:	mul	x1, x8, x9
   3a968:	bl	af40 <realloc@plt>
   3a96c:	str	x0, [sp, #40]
   3a970:	ldr	x8, [sp, #40]
   3a974:	cmp	x8, #0x0
   3a978:	cset	w10, eq  // eq = none
   3a97c:	and	w10, w10, #0x1
   3a980:	mov	w0, w10
   3a984:	sxtw	x8, w0
   3a988:	cbz	x8, 3a998 <rpl_re_set_registers@@Base+0xd9fc>
   3a98c:	mov	w8, #0xc                   	// #12
   3a990:	stur	w8, [x29, #-4]
   3a994:	b	3aa38 <rpl_re_set_registers@@Base+0xda9c>
   3a998:	ldr	x8, [sp, #40]
   3a99c:	ldur	x9, [x29, #-16]
   3a9a0:	str	x8, [x9, #184]
   3a9a4:	ldur	x8, [x29, #-32]
   3a9a8:	ldrb	w9, [x8, #136]
   3a9ac:	cbz	w9, 3aa04 <rpl_re_set_registers@@Base+0xda68>
   3a9b0:	ldur	x8, [x29, #-32]
   3a9b4:	ldr	w9, [x8, #144]
   3a9b8:	cmp	w9, #0x1
   3a9bc:	b.le	3a9f8 <rpl_re_set_registers@@Base+0xda5c>
   3a9c0:	ldur	x0, [x29, #-32]
   3a9c4:	bl	2e8dc <rpl_re_set_registers@@Base+0x1940>
   3a9c8:	stur	w0, [x29, #-24]
   3a9cc:	ldur	w8, [x29, #-24]
   3a9d0:	cmp	w8, #0x0
   3a9d4:	cset	w8, ne  // ne = any
   3a9d8:	and	w8, w8, #0x1
   3a9dc:	mov	w1, w8
   3a9e0:	sxtw	x9, w1
   3a9e4:	cbz	x9, 3a9f4 <rpl_re_set_registers@@Base+0xda58>
   3a9e8:	ldur	w8, [x29, #-24]
   3a9ec:	stur	w8, [x29, #-4]
   3a9f0:	b	3aa38 <rpl_re_set_registers@@Base+0xda9c>
   3a9f4:	b	3aa00 <rpl_re_set_registers@@Base+0xda64>
   3a9f8:	ldur	x0, [x29, #-32]
   3a9fc:	bl	2f4c8 <rpl_re_set_registers@@Base+0x252c>
   3aa00:	b	3aa34 <rpl_re_set_registers@@Base+0xda98>
   3aa04:	ldur	x8, [x29, #-32]
   3aa08:	ldr	w9, [x8, #144]
   3aa0c:	cmp	w9, #0x1
   3aa10:	b.le	3aa20 <rpl_re_set_registers@@Base+0xda84>
   3aa14:	ldur	x0, [x29, #-32]
   3aa18:	bl	2f5d4 <rpl_re_set_registers@@Base+0x2638>
   3aa1c:	b	3aa34 <rpl_re_set_registers@@Base+0xda98>
   3aa20:	ldur	x8, [x29, #-32]
   3aa24:	ldr	x8, [x8, #120]
   3aa28:	cbz	x8, 3aa34 <rpl_re_set_registers@@Base+0xda98>
   3aa2c:	ldur	x0, [x29, #-32]
   3aa30:	bl	2f918 <rpl_re_set_registers@@Base+0x297c>
   3aa34:	stur	wzr, [x29, #-4]
   3aa38:	ldur	w0, [x29, #-4]
   3aa3c:	ldp	x29, x30, [sp, #80]
   3aa40:	add	sp, sp, #0x60
   3aa44:	ret
   3aa48:	sub	sp, sp, #0x40
   3aa4c:	stp	x29, x30, [sp, #48]
   3aa50:	add	x29, sp, #0x30
   3aa54:	mov	w8, #0x1                   	// #1
   3aa58:	stur	x0, [x29, #-16]
   3aa5c:	str	x1, [sp, #24]
   3aa60:	str	x2, [sp, #16]
   3aa64:	ldr	x9, [sp, #16]
   3aa68:	ldrb	w10, [x9, #104]
   3aa6c:	mov	w11, #0x5                   	// #5
   3aa70:	lsr	w10, w10, w11
   3aa74:	and	w8, w10, w8
   3aa78:	and	w8, w8, #0xff
   3aa7c:	mov	w9, w8
   3aa80:	ubfx	x9, x9, #0, #32
   3aa84:	cbz	x9, 3aac8 <rpl_re_set_registers@@Base+0xdb2c>
   3aa88:	ldr	x0, [sp, #24]
   3aa8c:	ldr	x1, [sp, #16]
   3aa90:	bl	3dff4 <rpl_re_set_registers@@Base+0x11058>
   3aa94:	ldur	x8, [x29, #-16]
   3aa98:	str	w0, [x8]
   3aa9c:	ldur	x8, [x29, #-16]
   3aaa0:	ldr	w9, [x8]
   3aaa4:	cmp	w9, #0x0
   3aaa8:	cset	w9, ne  // ne = any
   3aaac:	and	w9, w9, #0x1
   3aab0:	mov	w1, w9
   3aab4:	sxtw	x8, w1
   3aab8:	cbz	x8, 3aac8 <rpl_re_set_registers@@Base+0xdb2c>
   3aabc:	mov	x8, xzr
   3aac0:	stur	x8, [x29, #-8]
   3aac4:	b	3ac0c <rpl_re_set_registers@@Base+0xdc70>
   3aac8:	ldr	x8, [sp, #24]
   3aacc:	ldr	x8, [x8, #8]
   3aad0:	ldr	x9, [sp, #24]
   3aad4:	ldr	x10, [x9, #72]
   3aad8:	add	x11, x10, #0x1
   3aadc:	str	x11, [x9, #72]
   3aae0:	add	x8, x8, x10
   3aae4:	ldrb	w12, [x8]
   3aae8:	strb	w12, [sp, #7]
   3aaec:	ldr	x8, [sp, #16]
   3aaf0:	ldr	x8, [x8, #88]
   3aaf4:	str	x8, [sp, #8]
   3aaf8:	ldr	x8, [sp, #8]
   3aafc:	cmp	x8, #0x0
   3ab00:	cset	w9, ne  // ne = any
   3ab04:	and	w9, w9, #0x1
   3ab08:	mov	w0, w9
   3ab0c:	sxtw	x8, w0
   3ab10:	cbz	x8, 3ab38 <rpl_re_set_registers@@Base+0xdb9c>
   3ab14:	ldr	x8, [sp, #8]
   3ab18:	ldrb	w9, [sp, #7]
   3ab1c:	mov	w10, w9
   3ab20:	mov	x11, #0x8                   	// #8
   3ab24:	mul	x10, x11, x10
   3ab28:	add	x8, x8, x10
   3ab2c:	ldr	x8, [x8]
   3ab30:	stur	x8, [x29, #-8]
   3ab34:	b	3ac0c <rpl_re_set_registers@@Base+0xdc70>
   3ab38:	ldr	x8, [sp, #16]
   3ab3c:	ldr	x8, [x8, #96]
   3ab40:	str	x8, [sp, #8]
   3ab44:	ldr	x8, [sp, #8]
   3ab48:	cmp	x8, #0x0
   3ab4c:	cset	w9, ne  // ne = any
   3ab50:	and	w9, w9, #0x1
   3ab54:	mov	w0, w9
   3ab58:	sxtw	x8, w0
   3ab5c:	cbz	x8, 3abdc <rpl_re_set_registers@@Base+0xdc40>
   3ab60:	ldr	x0, [sp, #24]
   3ab64:	ldr	x8, [sp, #24]
   3ab68:	ldr	x8, [x8, #72]
   3ab6c:	subs	x1, x8, #0x1
   3ab70:	ldr	x8, [sp, #24]
   3ab74:	ldr	w2, [x8, #160]
   3ab78:	bl	39dbc <rpl_re_set_registers@@Base+0xce20>
   3ab7c:	str	w0, [sp]
   3ab80:	ldr	w9, [sp]
   3ab84:	and	w9, w9, #0x1
   3ab88:	cbz	w9, 3abb8 <rpl_re_set_registers@@Base+0xdc1c>
   3ab8c:	ldr	x8, [sp, #8]
   3ab90:	ldrb	w9, [sp, #7]
   3ab94:	add	w9, w9, #0x100
   3ab98:	mov	w0, w9
   3ab9c:	sxtw	x10, w0
   3aba0:	mov	x11, #0x8                   	// #8
   3aba4:	mul	x10, x11, x10
   3aba8:	add	x8, x8, x10
   3abac:	ldr	x8, [x8]
   3abb0:	stur	x8, [x29, #-8]
   3abb4:	b	3ac0c <rpl_re_set_registers@@Base+0xdc70>
   3abb8:	ldr	x8, [sp, #8]
   3abbc:	ldrb	w9, [sp, #7]
   3abc0:	mov	w10, w9
   3abc4:	mov	x11, #0x8                   	// #8
   3abc8:	mul	x10, x11, x10
   3abcc:	add	x8, x8, x10
   3abd0:	ldr	x8, [x8]
   3abd4:	stur	x8, [x29, #-8]
   3abd8:	b	3ac0c <rpl_re_set_registers@@Base+0xdc70>
   3abdc:	ldr	x8, [sp, #24]
   3abe0:	ldr	x0, [x8, #152]
   3abe4:	ldr	x1, [sp, #16]
   3abe8:	bl	3e3d8 <rpl_re_set_registers@@Base+0x1143c>
   3abec:	tbnz	w0, #0, 3ac08 <rpl_re_set_registers@@Base+0xdc6c>
   3abf0:	ldur	x8, [x29, #-16]
   3abf4:	mov	w9, #0xc                   	// #12
   3abf8:	str	w9, [x8]
   3abfc:	mov	x8, xzr
   3ac00:	stur	x8, [x29, #-8]
   3ac04:	b	3ac0c <rpl_re_set_registers@@Base+0xdc70>
   3ac08:	b	3aaec <rpl_re_set_registers@@Base+0xdb50>
   3ac0c:	ldur	x0, [x29, #-8]
   3ac10:	ldp	x29, x30, [sp, #48]
   3ac14:	add	sp, sp, #0x40
   3ac18:	ret
   3ac1c:	sub	sp, sp, #0x80
   3ac20:	stp	x29, x30, [sp, #112]
   3ac24:	add	x29, sp, #0x70
   3ac28:	stur	x0, [x29, #-16]
   3ac2c:	stur	x1, [x29, #-24]
   3ac30:	stur	x2, [x29, #-32]
   3ac34:	ldur	x8, [x29, #-24]
   3ac38:	ldr	x8, [x8, #152]
   3ac3c:	stur	x8, [x29, #-40]
   3ac40:	ldur	x8, [x29, #-24]
   3ac44:	ldr	x8, [x8, #72]
   3ac48:	stur	x8, [x29, #-48]
   3ac4c:	ldur	x8, [x29, #-48]
   3ac50:	ldur	x9, [x29, #-24]
   3ac54:	ldr	x9, [x9, #192]
   3ac58:	cmp	x8, x9
   3ac5c:	b.le	3ac90 <rpl_re_set_registers@@Base+0xdcf4>
   3ac60:	ldur	x8, [x29, #-32]
   3ac64:	ldur	x9, [x29, #-24]
   3ac68:	ldr	x9, [x9, #184]
   3ac6c:	ldur	x10, [x29, #-48]
   3ac70:	mov	x11, #0x8                   	// #8
   3ac74:	mul	x10, x11, x10
   3ac78:	add	x9, x9, x10
   3ac7c:	str	x8, [x9]
   3ac80:	ldur	x8, [x29, #-48]
   3ac84:	ldur	x9, [x29, #-24]
   3ac88:	str	x8, [x9, #192]
   3ac8c:	b	3ade0 <rpl_re_set_registers@@Base+0xde44>
   3ac90:	ldur	x8, [x29, #-24]
   3ac94:	ldr	x8, [x8, #184]
   3ac98:	ldur	x9, [x29, #-48]
   3ac9c:	mov	x10, #0x8                   	// #8
   3aca0:	mul	x9, x10, x9
   3aca4:	add	x8, x8, x9
   3aca8:	ldr	x8, [x8]
   3acac:	cbnz	x8, 3acd4 <rpl_re_set_registers@@Base+0xdd38>
   3acb0:	ldur	x8, [x29, #-32]
   3acb4:	ldur	x9, [x29, #-24]
   3acb8:	ldr	x9, [x9, #184]
   3acbc:	ldur	x10, [x29, #-48]
   3acc0:	mov	x11, #0x8                   	// #8
   3acc4:	mul	x10, x11, x10
   3acc8:	add	x9, x9, x10
   3accc:	str	x8, [x9]
   3acd0:	b	3ade0 <rpl_re_set_registers@@Base+0xde44>
   3acd4:	mov	x8, xzr
   3acd8:	str	x8, [sp]
   3acdc:	ldur	x8, [x29, #-24]
   3ace0:	ldr	x8, [x8, #184]
   3ace4:	ldur	x9, [x29, #-48]
   3ace8:	mov	x10, #0x8                   	// #8
   3acec:	mul	x9, x10, x9
   3acf0:	add	x8, x8, x9
   3acf4:	ldr	x8, [x8]
   3acf8:	str	x8, [sp, #56]
   3acfc:	ldr	x8, [sp, #56]
   3ad00:	ldr	x8, [x8, #80]
   3ad04:	str	x8, [sp, #8]
   3ad08:	ldur	x8, [x29, #-32]
   3ad0c:	cbz	x8, 3ad64 <rpl_re_set_registers@@Base+0xddc8>
   3ad10:	ldur	x8, [x29, #-32]
   3ad14:	ldr	x8, [x8, #80]
   3ad18:	str	x8, [sp]
   3ad1c:	ldr	x1, [sp]
   3ad20:	ldr	x2, [sp, #8]
   3ad24:	add	x0, sp, #0x10
   3ad28:	bl	3b72c <rpl_re_set_registers@@Base+0xe790>
   3ad2c:	ldur	x8, [x29, #-16]
   3ad30:	str	w0, [x8]
   3ad34:	ldur	x8, [x29, #-16]
   3ad38:	ldr	w9, [x8]
   3ad3c:	cmp	w9, #0x0
   3ad40:	cset	w9, ne  // ne = any
   3ad44:	and	w9, w9, #0x1
   3ad48:	mov	w1, w9
   3ad4c:	sxtw	x8, w1
   3ad50:	cbz	x8, 3ad60 <rpl_re_set_registers@@Base+0xddc4>
   3ad54:	mov	x8, xzr
   3ad58:	stur	x8, [x29, #-8]
   3ad5c:	b	3aec4 <rpl_re_set_registers@@Base+0xdf28>
   3ad60:	b	3ad78 <rpl_re_set_registers@@Base+0xdddc>
   3ad64:	ldr	x8, [sp, #8]
   3ad68:	ldr	q0, [x8]
   3ad6c:	str	q0, [sp, #16]
   3ad70:	ldr	x8, [x8, #16]
   3ad74:	str	x8, [sp, #32]
   3ad78:	ldur	x0, [x29, #-24]
   3ad7c:	ldur	x8, [x29, #-24]
   3ad80:	ldr	x8, [x8, #72]
   3ad84:	subs	x1, x8, #0x1
   3ad88:	ldur	x8, [x29, #-24]
   3ad8c:	ldr	w2, [x8, #160]
   3ad90:	bl	39dbc <rpl_re_set_registers@@Base+0xce20>
   3ad94:	str	w0, [sp, #52]
   3ad98:	ldur	x0, [x29, #-16]
   3ad9c:	ldur	x1, [x29, #-40]
   3ada0:	ldr	w3, [sp, #52]
   3ada4:	add	x2, sp, #0x10
   3ada8:	bl	3736c <rpl_re_set_registers@@Base+0xa3d0>
   3adac:	ldur	x8, [x29, #-24]
   3adb0:	ldr	x8, [x8, #184]
   3adb4:	ldur	x9, [x29, #-48]
   3adb8:	mov	x10, #0x8                   	// #8
   3adbc:	mul	x9, x10, x9
   3adc0:	add	x8, x8, x9
   3adc4:	str	x0, [x8]
   3adc8:	stur	x0, [x29, #-32]
   3adcc:	ldr	x8, [sp]
   3add0:	cbz	x8, 3ade0 <rpl_re_set_registers@@Base+0xde44>
   3add4:	add	x8, sp, #0x10
   3add8:	ldr	x0, [x8, #16]
   3addc:	bl	a930 <free@plt>
   3ade0:	ldur	x8, [x29, #-40]
   3ade4:	ldr	x8, [x8, #152]
   3ade8:	cbz	x8, 3aebc <rpl_re_set_registers@@Base+0xdf20>
   3adec:	ldur	x8, [x29, #-32]
   3adf0:	cbz	x8, 3aebc <rpl_re_set_registers@@Base+0xdf20>
   3adf4:	ldur	x0, [x29, #-24]
   3adf8:	ldur	x8, [x29, #-32]
   3adfc:	add	x1, x8, #0x8
   3ae00:	ldur	x2, [x29, #-48]
   3ae04:	bl	3a170 <rpl_re_set_registers@@Base+0xd1d4>
   3ae08:	ldur	x8, [x29, #-16]
   3ae0c:	str	w0, [x8]
   3ae10:	ldur	x8, [x29, #-16]
   3ae14:	ldr	w9, [x8]
   3ae18:	cmp	w9, #0x0
   3ae1c:	cset	w9, ne  // ne = any
   3ae20:	and	w9, w9, #0x1
   3ae24:	mov	w1, w9
   3ae28:	sxtw	x8, w1
   3ae2c:	cbz	x8, 3ae3c <rpl_re_set_registers@@Base+0xdea0>
   3ae30:	mov	x8, xzr
   3ae34:	stur	x8, [x29, #-8]
   3ae38:	b	3aec4 <rpl_re_set_registers@@Base+0xdf28>
   3ae3c:	ldur	x8, [x29, #-32]
   3ae40:	ldrb	w9, [x8, #104]
   3ae44:	mov	w10, #0x6                   	// #6
   3ae48:	lsr	w9, w9, w10
   3ae4c:	and	w9, w9, #0x1
   3ae50:	and	w9, w9, #0xff
   3ae54:	cbz	w9, 3aebc <rpl_re_set_registers@@Base+0xdf20>
   3ae58:	ldur	x0, [x29, #-24]
   3ae5c:	ldur	x8, [x29, #-32]
   3ae60:	add	x1, x8, #0x8
   3ae64:	bl	3a298 <rpl_re_set_registers@@Base+0xd2fc>
   3ae68:	ldur	x8, [x29, #-16]
   3ae6c:	str	w0, [x8]
   3ae70:	ldur	x8, [x29, #-16]
   3ae74:	ldr	w9, [x8]
   3ae78:	cmp	w9, #0x0
   3ae7c:	cset	w9, ne  // ne = any
   3ae80:	and	w9, w9, #0x1
   3ae84:	mov	w1, w9
   3ae88:	sxtw	x8, w1
   3ae8c:	cbz	x8, 3ae9c <rpl_re_set_registers@@Base+0xdf00>
   3ae90:	mov	x8, xzr
   3ae94:	stur	x8, [x29, #-8]
   3ae98:	b	3aec4 <rpl_re_set_registers@@Base+0xdf28>
   3ae9c:	ldur	x8, [x29, #-24]
   3aea0:	ldr	x8, [x8, #184]
   3aea4:	ldur	x9, [x29, #-48]
   3aea8:	mov	x10, #0x8                   	// #8
   3aeac:	mul	x9, x10, x9
   3aeb0:	add	x8, x8, x9
   3aeb4:	ldr	x8, [x8]
   3aeb8:	stur	x8, [x29, #-32]
   3aebc:	ldur	x8, [x29, #-32]
   3aec0:	stur	x8, [x29, #-8]
   3aec4:	ldur	x0, [x29, #-8]
   3aec8:	ldp	x29, x30, [sp, #112]
   3aecc:	add	sp, sp, #0x80
   3aed0:	ret
   3aed4:	sub	sp, sp, #0x50
   3aed8:	stp	x29, x30, [sp, #64]
   3aedc:	add	x29, sp, #0x40
   3aee0:	stur	x0, [x29, #-16]
   3aee4:	stur	x1, [x29, #-24]
   3aee8:	ldur	x8, [x29, #-24]
   3aeec:	ldr	x8, [x8, #192]
   3aef0:	str	x8, [sp, #24]
   3aef4:	ldur	x8, [x29, #-24]
   3aef8:	ldr	x8, [x8, #72]
   3aefc:	str	x8, [sp, #16]
   3af00:	ldr	x8, [sp, #16]
   3af04:	add	x8, x8, #0x1
   3af08:	str	x8, [sp, #16]
   3af0c:	ldr	x9, [sp, #24]
   3af10:	cmp	x8, x9
   3af14:	b.le	3af24 <rpl_re_set_registers@@Base+0xdf88>
   3af18:	mov	x8, xzr
   3af1c:	stur	x8, [x29, #-8]
   3af20:	b	3afa0 <rpl_re_set_registers@@Base+0xe004>
   3af24:	ldur	x8, [x29, #-24]
   3af28:	ldr	x9, [x8, #72]
   3af2c:	add	x9, x9, #0x1
   3af30:	str	x9, [x8, #72]
   3af34:	ldur	x8, [x29, #-24]
   3af38:	ldr	x8, [x8, #184]
   3af3c:	ldr	x9, [sp, #16]
   3af40:	mov	x10, #0x8                   	// #8
   3af44:	mul	x9, x10, x9
   3af48:	add	x8, x8, x9
   3af4c:	ldr	x8, [x8]
   3af50:	cbz	x8, 3af00 <rpl_re_set_registers@@Base+0xdf64>
   3af54:	ldur	x0, [x29, #-16]
   3af58:	ldur	x1, [x29, #-24]
   3af5c:	mov	x8, xzr
   3af60:	mov	x2, x8
   3af64:	bl	3ac1c <rpl_re_set_registers@@Base+0xdc80>
   3af68:	str	x0, [sp, #32]
   3af6c:	ldur	x8, [x29, #-16]
   3af70:	ldr	w9, [x8]
   3af74:	mov	w10, #0x0                   	// #0
   3af78:	str	w10, [sp, #12]
   3af7c:	cbnz	w9, 3af90 <rpl_re_set_registers@@Base+0xdff4>
   3af80:	ldr	x8, [sp, #32]
   3af84:	cmp	x8, #0x0
   3af88:	cset	w9, eq  // eq = none
   3af8c:	str	w9, [sp, #12]
   3af90:	ldr	w8, [sp, #12]
   3af94:	tbnz	w8, #0, 3aee8 <rpl_re_set_registers@@Base+0xdf4c>
   3af98:	ldr	x8, [sp, #32]
   3af9c:	stur	x8, [x29, #-8]
   3afa0:	ldur	x0, [x29, #-8]
   3afa4:	ldp	x29, x30, [sp, #64]
   3afa8:	add	sp, sp, #0x50
   3afac:	ret
   3afb0:	sub	sp, sp, #0x40
   3afb4:	stp	x29, x30, [sp, #48]
   3afb8:	add	x29, sp, #0x30
   3afbc:	stur	x0, [x29, #-16]
   3afc0:	str	x1, [sp, #24]
   3afc4:	str	x2, [sp, #16]
   3afc8:	ldur	x8, [x29, #-16]
   3afcc:	ldr	x8, [x8, #232]
   3afd0:	ldur	x9, [x29, #-16]
   3afd4:	ldr	x9, [x9, #240]
   3afd8:	cmp	x8, x9
   3afdc:	cset	w10, eq  // eq = none
   3afe0:	and	w10, w10, #0x1
   3afe4:	mov	w0, w10
   3afe8:	sxtw	x8, w0
   3afec:	cbz	x8, 3b060 <rpl_re_set_registers@@Base+0xe0c4>
   3aff0:	ldur	x8, [x29, #-16]
   3aff4:	ldr	x8, [x8, #240]
   3aff8:	mov	x9, #0x2                   	// #2
   3affc:	mul	x8, x8, x9
   3b000:	str	x8, [sp, #8]
   3b004:	ldur	x8, [x29, #-16]
   3b008:	ldr	x0, [x8, #248]
   3b00c:	ldr	x8, [sp, #8]
   3b010:	mov	x9, #0x8                   	// #8
   3b014:	mul	x1, x8, x9
   3b018:	bl	af40 <realloc@plt>
   3b01c:	str	x0, [sp]
   3b020:	ldr	x8, [sp]
   3b024:	cmp	x8, #0x0
   3b028:	cset	w10, eq  // eq = none
   3b02c:	and	w10, w10, #0x1
   3b030:	mov	w0, w10
   3b034:	sxtw	x8, w0
   3b038:	cbz	x8, 3b048 <rpl_re_set_registers@@Base+0xe0ac>
   3b03c:	mov	w8, #0xc                   	// #12
   3b040:	stur	w8, [x29, #-4]
   3b044:	b	3b124 <rpl_re_set_registers@@Base+0xe188>
   3b048:	ldr	x8, [sp]
   3b04c:	ldur	x9, [x29, #-16]
   3b050:	str	x8, [x9, #248]
   3b054:	ldr	x8, [sp, #8]
   3b058:	ldur	x9, [x29, #-16]
   3b05c:	str	x8, [x9, #240]
   3b060:	mov	x0, #0x1                   	// #1
   3b064:	mov	x1, #0x30                  	// #48
   3b068:	bl	b2e0 <calloc@plt>
   3b06c:	ldur	x8, [x29, #-16]
   3b070:	ldr	x8, [x8, #248]
   3b074:	ldur	x9, [x29, #-16]
   3b078:	ldr	x9, [x9, #232]
   3b07c:	mov	x10, #0x8                   	// #8
   3b080:	mul	x9, x10, x9
   3b084:	add	x8, x8, x9
   3b088:	str	x0, [x8]
   3b08c:	ldur	x8, [x29, #-16]
   3b090:	ldr	x8, [x8, #248]
   3b094:	ldur	x9, [x29, #-16]
   3b098:	ldr	x9, [x9, #232]
   3b09c:	mul	x9, x10, x9
   3b0a0:	add	x8, x8, x9
   3b0a4:	ldr	x8, [x8]
   3b0a8:	cmp	x8, #0x0
   3b0ac:	cset	w11, eq  // eq = none
   3b0b0:	and	w11, w11, #0x1
   3b0b4:	mov	w0, w11
   3b0b8:	sxtw	x8, w0
   3b0bc:	cbz	x8, 3b0cc <rpl_re_set_registers@@Base+0xe130>
   3b0c0:	mov	w8, #0xc                   	// #12
   3b0c4:	stur	w8, [x29, #-4]
   3b0c8:	b	3b124 <rpl_re_set_registers@@Base+0xe188>
   3b0cc:	ldr	x8, [sp, #24]
   3b0d0:	ldur	x9, [x29, #-16]
   3b0d4:	ldr	x9, [x9, #248]
   3b0d8:	ldur	x10, [x29, #-16]
   3b0dc:	ldr	x10, [x10, #232]
   3b0e0:	mov	x11, #0x8                   	// #8
   3b0e4:	mul	x10, x11, x10
   3b0e8:	add	x9, x9, x10
   3b0ec:	ldr	x9, [x9]
   3b0f0:	str	x8, [x9, #8]
   3b0f4:	ldr	x8, [sp, #16]
   3b0f8:	ldur	x9, [x29, #-16]
   3b0fc:	ldr	x9, [x9, #248]
   3b100:	ldur	x10, [x29, #-16]
   3b104:	ldr	x12, [x10, #232]
   3b108:	add	x13, x12, #0x1
   3b10c:	str	x13, [x10, #232]
   3b110:	mul	x10, x11, x12
   3b114:	add	x9, x9, x10
   3b118:	ldr	x9, [x9]
   3b11c:	str	x8, [x9]
   3b120:	stur	wzr, [x29, #-4]
   3b124:	ldur	w0, [x29, #-4]
   3b128:	ldp	x29, x30, [sp, #48]
   3b12c:	add	sp, sp, #0x40
   3b130:	ret
   3b134:	sub	sp, sp, #0xc0
   3b138:	stp	x29, x30, [sp, #176]
   3b13c:	add	x29, sp, #0xb0
   3b140:	mov	x8, #0xffffffffffffffff    	// #-1
   3b144:	stur	x0, [x29, #-16]
   3b148:	stur	x1, [x29, #-24]
   3b14c:	stur	x2, [x29, #-32]
   3b150:	ldur	x9, [x29, #-16]
   3b154:	ldr	x9, [x9, #152]
   3b158:	stur	x9, [x29, #-40]
   3b15c:	ldur	x9, [x29, #-16]
   3b160:	ldr	x9, [x9, #8]
   3b164:	stur	x9, [x29, #-64]
   3b168:	ldur	x0, [x29, #-16]
   3b16c:	ldur	x1, [x29, #-32]
   3b170:	str	x8, [sp, #8]
   3b174:	bl	3ba80 <rpl_re_set_registers@@Base+0xeae4>
   3b178:	stur	x0, [x29, #-72]
   3b17c:	ldur	x8, [x29, #-72]
   3b180:	ldr	x9, [sp, #8]
   3b184:	cmp	x8, x9
   3b188:	b.eq	3b1d8 <rpl_re_set_registers@@Base+0xe23c>  // b.none
   3b18c:	ldur	x8, [x29, #-16]
   3b190:	ldr	x8, [x8, #216]
   3b194:	ldur	x9, [x29, #-72]
   3b198:	mov	x10, #0x28                  	// #40
   3b19c:	mul	x9, x10, x9
   3b1a0:	add	x8, x8, x9
   3b1a4:	stur	x8, [x29, #-80]
   3b1a8:	ldur	x8, [x29, #-80]
   3b1ac:	ldr	x8, [x8]
   3b1b0:	ldur	x9, [x29, #-24]
   3b1b4:	cmp	x8, x9
   3b1b8:	b.ne	3b1c4 <rpl_re_set_registers@@Base+0xe228>  // b.any
   3b1bc:	stur	wzr, [x29, #-4]
   3b1c0:	b	3b71c <rpl_re_set_registers@@Base+0xe780>
   3b1c4:	ldur	x8, [x29, #-80]
   3b1c8:	add	x9, x8, #0x28
   3b1cc:	stur	x9, [x29, #-80]
   3b1d0:	ldrb	w10, [x8, #32]
   3b1d4:	cbnz	w10, 3b1a8 <rpl_re_set_registers@@Base+0xe20c>
   3b1d8:	ldur	x8, [x29, #-40]
   3b1dc:	ldr	x8, [x8]
   3b1e0:	ldur	x9, [x29, #-24]
   3b1e4:	mov	x10, #0x10                  	// #16
   3b1e8:	mul	x9, x10, x9
   3b1ec:	ldr	x8, [x8, x9]
   3b1f0:	stur	x8, [x29, #-48]
   3b1f4:	stur	xzr, [x29, #-56]
   3b1f8:	ldur	x8, [x29, #-56]
   3b1fc:	ldur	x9, [x29, #-16]
   3b200:	ldr	x9, [x9, #232]
   3b204:	cmp	x8, x9
   3b208:	b.ge	3b718 <rpl_re_set_registers@@Base+0xe77c>  // b.tcont
   3b20c:	ldur	x8, [x29, #-16]
   3b210:	ldr	x8, [x8, #248]
   3b214:	ldur	x9, [x29, #-56]
   3b218:	mov	x10, #0x8                   	// #8
   3b21c:	mul	x9, x10, x9
   3b220:	add	x8, x8, x9
   3b224:	ldr	x8, [x8]
   3b228:	str	x8, [sp, #80]
   3b22c:	ldur	x8, [x29, #-40]
   3b230:	ldr	x8, [x8]
   3b234:	ldr	x9, [sp, #80]
   3b238:	ldr	x9, [x9, #8]
   3b23c:	mov	x10, #0x10                  	// #16
   3b240:	mul	x9, x10, x9
   3b244:	ldr	x8, [x8, x9]
   3b248:	ldur	x9, [x29, #-48]
   3b24c:	cmp	x8, x9
   3b250:	b.eq	3b258 <rpl_re_set_registers@@Base+0xe2bc>  // b.none
   3b254:	b	3b708 <rpl_re_set_registers@@Base+0xe76c>
   3b258:	ldr	x8, [sp, #80]
   3b25c:	ldr	x8, [x8]
   3b260:	str	x8, [sp, #56]
   3b264:	ldur	x8, [x29, #-32]
   3b268:	str	x8, [sp, #48]
   3b26c:	str	xzr, [sp, #64]
   3b270:	ldr	x8, [sp, #64]
   3b274:	ldr	x9, [sp, #80]
   3b278:	ldr	x9, [x9, #32]
   3b27c:	cmp	x8, x9
   3b280:	b.ge	3b418 <rpl_re_set_registers@@Base+0xe47c>  // b.tcont
   3b284:	ldr	x8, [sp, #80]
   3b288:	ldr	x8, [x8, #40]
   3b28c:	ldr	x9, [sp, #64]
   3b290:	mov	x10, #0x8                   	// #8
   3b294:	mul	x9, x10, x9
   3b298:	add	x8, x8, x9
   3b29c:	ldr	x8, [x8]
   3b2a0:	str	x8, [sp, #72]
   3b2a4:	ldr	x8, [sp, #72]
   3b2a8:	ldr	x8, [x8, #8]
   3b2ac:	ldr	x9, [sp, #56]
   3b2b0:	subs	x8, x8, x9
   3b2b4:	str	x8, [sp, #40]
   3b2b8:	ldr	x8, [sp, #40]
   3b2bc:	cmp	x8, #0x0
   3b2c0:	cset	w11, le
   3b2c4:	tbnz	w11, #0, 3b388 <rpl_re_set_registers@@Base+0xe3ec>
   3b2c8:	ldr	x8, [sp, #48]
   3b2cc:	ldr	x9, [sp, #40]
   3b2d0:	add	x8, x8, x9
   3b2d4:	ldur	x9, [x29, #-16]
   3b2d8:	ldr	x9, [x9, #48]
   3b2dc:	cmp	x8, x9
   3b2e0:	cset	w10, gt
   3b2e4:	and	w10, w10, #0x1
   3b2e8:	mov	w0, w10
   3b2ec:	sxtw	x8, w0
   3b2f0:	cbz	x8, 3b360 <rpl_re_set_registers@@Base+0xe3c4>
   3b2f4:	ldr	x8, [sp, #48]
   3b2f8:	ldr	x9, [sp, #40]
   3b2fc:	add	x8, x8, x9
   3b300:	ldur	x9, [x29, #-16]
   3b304:	ldr	x9, [x9, #88]
   3b308:	cmp	x8, x9
   3b30c:	b.le	3b314 <rpl_re_set_registers@@Base+0xe378>
   3b310:	b	3b418 <rpl_re_set_registers@@Base+0xe47c>
   3b314:	ldur	x0, [x29, #-16]
   3b318:	ldr	x8, [sp, #48]
   3b31c:	ldr	x9, [sp, #40]
   3b320:	add	x1, x8, x9
   3b324:	bl	3bb64 <rpl_re_set_registers@@Base+0xebc8>
   3b328:	stur	w0, [x29, #-84]
   3b32c:	ldur	w10, [x29, #-84]
   3b330:	cmp	w10, #0x0
   3b334:	cset	w10, ne  // ne = any
   3b338:	and	w10, w10, #0x1
   3b33c:	mov	w1, w10
   3b340:	sxtw	x8, w1
   3b344:	cbz	x8, 3b354 <rpl_re_set_registers@@Base+0xe3b8>
   3b348:	ldur	w8, [x29, #-84]
   3b34c:	stur	w8, [x29, #-4]
   3b350:	b	3b71c <rpl_re_set_registers@@Base+0xe780>
   3b354:	ldur	x8, [x29, #-16]
   3b358:	ldr	x8, [x8, #8]
   3b35c:	stur	x8, [x29, #-64]
   3b360:	ldur	x8, [x29, #-64]
   3b364:	ldr	x9, [sp, #48]
   3b368:	add	x0, x8, x9
   3b36c:	ldur	x8, [x29, #-64]
   3b370:	ldr	x9, [sp, #56]
   3b374:	add	x1, x8, x9
   3b378:	ldr	x2, [sp, #40]
   3b37c:	bl	b4b0 <memcmp@plt>
   3b380:	cbz	w0, 3b388 <rpl_re_set_registers@@Base+0xe3ec>
   3b384:	b	3b418 <rpl_re_set_registers@@Base+0xe47c>
   3b388:	ldr	x8, [sp, #40]
   3b38c:	ldr	x9, [sp, #48]
   3b390:	add	x8, x9, x8
   3b394:	str	x8, [sp, #48]
   3b398:	ldr	x8, [sp, #40]
   3b39c:	ldr	x9, [sp, #56]
   3b3a0:	add	x8, x9, x8
   3b3a4:	str	x8, [sp, #56]
   3b3a8:	ldur	x0, [x29, #-16]
   3b3ac:	ldr	x1, [sp, #80]
   3b3b0:	ldr	x2, [sp, #72]
   3b3b4:	ldur	x3, [x29, #-24]
   3b3b8:	ldur	x4, [x29, #-32]
   3b3bc:	bl	3bc88 <rpl_re_set_registers@@Base+0xecec>
   3b3c0:	stur	w0, [x29, #-84]
   3b3c4:	ldur	x8, [x29, #-16]
   3b3c8:	ldr	x8, [x8, #8]
   3b3cc:	stur	x8, [x29, #-64]
   3b3d0:	ldur	w10, [x29, #-84]
   3b3d4:	cmp	w10, #0x1
   3b3d8:	b.ne	3b3e0 <rpl_re_set_registers@@Base+0xe444>  // b.any
   3b3dc:	b	3b408 <rpl_re_set_registers@@Base+0xe46c>
   3b3e0:	ldur	w8, [x29, #-84]
   3b3e4:	cmp	w8, #0x0
   3b3e8:	cset	w8, ne  // ne = any
   3b3ec:	and	w8, w8, #0x1
   3b3f0:	mov	w0, w8
   3b3f4:	sxtw	x9, w0
   3b3f8:	cbz	x9, 3b408 <rpl_re_set_registers@@Base+0xe46c>
   3b3fc:	ldur	w8, [x29, #-84]
   3b400:	stur	w8, [x29, #-4]
   3b404:	b	3b71c <rpl_re_set_registers@@Base+0xe780>
   3b408:	ldr	x8, [sp, #64]
   3b40c:	add	x8, x8, #0x1
   3b410:	str	x8, [sp, #64]
   3b414:	b	3b270 <rpl_re_set_registers@@Base+0xe2d4>
   3b418:	ldr	x8, [sp, #64]
   3b41c:	ldr	x9, [sp, #80]
   3b420:	ldr	x9, [x9, #32]
   3b424:	cmp	x8, x9
   3b428:	b.ge	3b430 <rpl_re_set_registers@@Base+0xe494>  // b.tcont
   3b42c:	b	3b708 <rpl_re_set_registers@@Base+0xe76c>
   3b430:	ldr	x8, [sp, #64]
   3b434:	cmp	x8, #0x0
   3b438:	cset	w9, le
   3b43c:	tbnz	w9, #0, 3b44c <rpl_re_set_registers@@Base+0xe4b0>
   3b440:	ldr	x8, [sp, #56]
   3b444:	add	x8, x8, #0x1
   3b448:	str	x8, [sp, #56]
   3b44c:	ldr	x8, [sp, #56]
   3b450:	ldur	x9, [x29, #-32]
   3b454:	cmp	x8, x9
   3b458:	b.gt	3b708 <rpl_re_set_registers@@Base+0xe76c>
   3b45c:	ldr	x8, [sp, #56]
   3b460:	ldr	x9, [sp, #80]
   3b464:	ldr	x9, [x9]
   3b468:	subs	x8, x8, x9
   3b46c:	str	x8, [sp, #24]
   3b470:	ldr	x8, [sp, #24]
   3b474:	cmp	x8, #0x0
   3b478:	cset	w10, le
   3b47c:	tbnz	w10, #0, 3b538 <rpl_re_set_registers@@Base+0xe59c>
   3b480:	ldr	x8, [sp, #48]
   3b484:	ldur	x9, [x29, #-16]
   3b488:	ldr	x9, [x9, #48]
   3b48c:	cmp	x8, x9
   3b490:	cset	w10, ge  // ge = tcont
   3b494:	and	w10, w10, #0x1
   3b498:	mov	w0, w10
   3b49c:	sxtw	x8, w0
   3b4a0:	cbz	x8, 3b508 <rpl_re_set_registers@@Base+0xe56c>
   3b4a4:	ldr	x8, [sp, #48]
   3b4a8:	ldur	x9, [x29, #-16]
   3b4ac:	ldr	x9, [x9, #88]
   3b4b0:	cmp	x8, x9
   3b4b4:	b.lt	3b4bc <rpl_re_set_registers@@Base+0xe520>  // b.tstop
   3b4b8:	b	3b708 <rpl_re_set_registers@@Base+0xe76c>
   3b4bc:	ldur	x0, [x29, #-16]
   3b4c0:	ldr	x8, [sp, #48]
   3b4c4:	add	x8, x8, #0x1
   3b4c8:	mov	w1, w8
   3b4cc:	bl	3a7fc <rpl_re_set_registers@@Base+0xd860>
   3b4d0:	stur	w0, [x29, #-84]
   3b4d4:	ldur	w8, [x29, #-84]
   3b4d8:	cmp	w8, #0x0
   3b4dc:	cset	w8, ne  // ne = any
   3b4e0:	and	w8, w8, #0x1
   3b4e4:	mov	w2, w8
   3b4e8:	sxtw	x9, w2
   3b4ec:	cbz	x9, 3b4fc <rpl_re_set_registers@@Base+0xe560>
   3b4f0:	ldur	w8, [x29, #-84]
   3b4f4:	stur	w8, [x29, #-4]
   3b4f8:	b	3b71c <rpl_re_set_registers@@Base+0xe780>
   3b4fc:	ldur	x8, [x29, #-16]
   3b500:	ldr	x8, [x8, #8]
   3b504:	stur	x8, [x29, #-64]
   3b508:	ldur	x8, [x29, #-64]
   3b50c:	ldr	x9, [sp, #48]
   3b510:	add	x10, x9, #0x1
   3b514:	str	x10, [sp, #48]
   3b518:	ldrb	w11, [x8, x9]
   3b51c:	ldur	x8, [x29, #-64]
   3b520:	ldr	x9, [sp, #56]
   3b524:	subs	x9, x9, #0x1
   3b528:	ldrb	w12, [x8, x9]
   3b52c:	cmp	w11, w12
   3b530:	b.eq	3b538 <rpl_re_set_registers@@Base+0xe59c>  // b.none
   3b534:	b	3b708 <rpl_re_set_registers@@Base+0xe76c>
   3b538:	ldur	x8, [x29, #-16]
   3b53c:	ldr	x8, [x8, #184]
   3b540:	ldr	x9, [sp, #56]
   3b544:	mov	x10, #0x8                   	// #8
   3b548:	mul	x9, x10, x9
   3b54c:	add	x8, x8, x9
   3b550:	ldr	x8, [x8]
   3b554:	cbnz	x8, 3b55c <rpl_re_set_registers@@Base+0xe5c0>
   3b558:	b	3b6f8 <rpl_re_set_registers@@Base+0xe75c>
   3b55c:	ldur	x8, [x29, #-16]
   3b560:	ldr	x8, [x8, #184]
   3b564:	ldr	x9, [sp, #56]
   3b568:	mov	x10, #0x8                   	// #8
   3b56c:	mul	x9, x10, x9
   3b570:	add	x8, x8, x9
   3b574:	ldr	x8, [x8]
   3b578:	add	x8, x8, #0x8
   3b57c:	str	x8, [sp, #16]
   3b580:	ldur	x0, [x29, #-40]
   3b584:	ldr	x1, [sp, #16]
   3b588:	ldur	x2, [x29, #-48]
   3b58c:	mov	w3, #0x9                   	// #9
   3b590:	bl	3bd78 <rpl_re_set_registers@@Base+0xeddc>
   3b594:	str	x0, [sp, #32]
   3b598:	ldr	x8, [sp, #32]
   3b59c:	mov	x9, #0xffffffffffffffff    	// #-1
   3b5a0:	cmp	x8, x9
   3b5a4:	b.ne	3b5ac <rpl_re_set_registers@@Base+0xe610>  // b.any
   3b5a8:	b	3b6f8 <rpl_re_set_registers@@Base+0xe75c>
   3b5ac:	ldr	x8, [sp, #80]
   3b5b0:	ldr	x8, [x8, #16]
   3b5b4:	cbnz	x8, 3b5f4 <rpl_re_set_registers@@Base+0xe658>
   3b5b8:	ldr	x8, [sp, #56]
   3b5bc:	ldr	x9, [sp, #80]
   3b5c0:	ldr	x9, [x9]
   3b5c4:	subs	x8, x8, x9
   3b5c8:	add	x1, x8, #0x1
   3b5cc:	mov	x0, #0x18                  	// #24
   3b5d0:	bl	b2e0 <calloc@plt>
   3b5d4:	ldr	x8, [sp, #80]
   3b5d8:	str	x0, [x8, #16]
   3b5dc:	ldr	x8, [sp, #80]
   3b5e0:	ldr	x8, [x8, #16]
   3b5e4:	cbnz	x8, 3b5f4 <rpl_re_set_registers@@Base+0xe658>
   3b5e8:	mov	w8, #0xc                   	// #12
   3b5ec:	stur	w8, [x29, #-4]
   3b5f0:	b	3b71c <rpl_re_set_registers@@Base+0xe780>
   3b5f4:	ldur	x0, [x29, #-16]
   3b5f8:	ldr	x8, [sp, #80]
   3b5fc:	ldr	x1, [x8, #16]
   3b600:	ldr	x8, [sp, #80]
   3b604:	ldr	x2, [x8, #8]
   3b608:	ldr	x8, [sp, #80]
   3b60c:	ldr	x3, [x8]
   3b610:	ldr	x4, [sp, #32]
   3b614:	ldr	x5, [sp, #56]
   3b618:	mov	w6, #0x9                   	// #9
   3b61c:	bl	3be30 <rpl_re_set_registers@@Base+0xee94>
   3b620:	stur	w0, [x29, #-84]
   3b624:	ldur	w9, [x29, #-84]
   3b628:	cmp	w9, #0x1
   3b62c:	b.ne	3b634 <rpl_re_set_registers@@Base+0xe698>  // b.any
   3b630:	b	3b6f8 <rpl_re_set_registers@@Base+0xe75c>
   3b634:	ldur	w8, [x29, #-84]
   3b638:	cmp	w8, #0x0
   3b63c:	cset	w8, ne  // ne = any
   3b640:	and	w8, w8, #0x1
   3b644:	mov	w0, w8
   3b648:	sxtw	x9, w0
   3b64c:	cbz	x9, 3b65c <rpl_re_set_registers@@Base+0xe6c0>
   3b650:	ldur	w8, [x29, #-84]
   3b654:	stur	w8, [x29, #-4]
   3b658:	b	3b71c <rpl_re_set_registers@@Base+0xe780>
   3b65c:	ldr	x0, [sp, #80]
   3b660:	ldr	x1, [sp, #32]
   3b664:	ldr	x2, [sp, #56]
   3b668:	bl	3c5fc <rpl_re_set_registers@@Base+0xf660>
   3b66c:	str	x0, [sp, #72]
   3b670:	ldr	x8, [sp, #72]
   3b674:	cmp	x8, #0x0
   3b678:	cset	w9, eq  // eq = none
   3b67c:	and	w9, w9, #0x1
   3b680:	mov	w0, w9
   3b684:	sxtw	x8, w0
   3b688:	cbz	x8, 3b698 <rpl_re_set_registers@@Base+0xe6fc>
   3b68c:	mov	w8, #0xc                   	// #12
   3b690:	stur	w8, [x29, #-4]
   3b694:	b	3b71c <rpl_re_set_registers@@Base+0xe780>
   3b698:	ldur	x0, [x29, #-16]
   3b69c:	ldr	x1, [sp, #80]
   3b6a0:	ldr	x2, [sp, #72]
   3b6a4:	ldur	x3, [x29, #-24]
   3b6a8:	ldur	x4, [x29, #-32]
   3b6ac:	bl	3bc88 <rpl_re_set_registers@@Base+0xecec>
   3b6b0:	stur	w0, [x29, #-84]
   3b6b4:	ldur	x8, [x29, #-16]
   3b6b8:	ldr	x8, [x8, #8]
   3b6bc:	stur	x8, [x29, #-64]
   3b6c0:	ldur	w9, [x29, #-84]
   3b6c4:	cmp	w9, #0x1
   3b6c8:	b.ne	3b6d0 <rpl_re_set_registers@@Base+0xe734>  // b.any
   3b6cc:	b	3b6f8 <rpl_re_set_registers@@Base+0xe75c>
   3b6d0:	ldur	w8, [x29, #-84]
   3b6d4:	cmp	w8, #0x0
   3b6d8:	cset	w8, ne  // ne = any
   3b6dc:	and	w8, w8, #0x1
   3b6e0:	mov	w0, w8
   3b6e4:	sxtw	x9, w0
   3b6e8:	cbz	x9, 3b6f8 <rpl_re_set_registers@@Base+0xe75c>
   3b6ec:	ldur	w8, [x29, #-84]
   3b6f0:	stur	w8, [x29, #-4]
   3b6f4:	b	3b71c <rpl_re_set_registers@@Base+0xe780>
   3b6f8:	ldr	x8, [sp, #56]
   3b6fc:	add	x8, x8, #0x1
   3b700:	str	x8, [sp, #56]
   3b704:	b	3b44c <rpl_re_set_registers@@Base+0xe4b0>
   3b708:	ldur	x8, [x29, #-56]
   3b70c:	add	x8, x8, #0x1
   3b710:	stur	x8, [x29, #-56]
   3b714:	b	3b1f8 <rpl_re_set_registers@@Base+0xe25c>
   3b718:	stur	wzr, [x29, #-4]
   3b71c:	ldur	w0, [x29, #-4]
   3b720:	ldp	x29, x30, [sp, #176]
   3b724:	add	sp, sp, #0xc0
   3b728:	ret
   3b72c:	sub	sp, sp, #0x50
   3b730:	stp	x29, x30, [sp, #64]
   3b734:	add	x29, sp, #0x40
   3b738:	stur	x0, [x29, #-16]
   3b73c:	stur	x1, [x29, #-24]
   3b740:	str	x2, [sp, #32]
   3b744:	ldur	x8, [x29, #-24]
   3b748:	cbz	x8, 3b7e4 <rpl_re_set_registers@@Base+0xe848>
   3b74c:	ldur	x8, [x29, #-24]
   3b750:	ldr	x8, [x8, #8]
   3b754:	cmp	x8, #0x0
   3b758:	cset	w9, le
   3b75c:	tbnz	w9, #0, 3b7e4 <rpl_re_set_registers@@Base+0xe848>
   3b760:	ldr	x8, [sp, #32]
   3b764:	cbz	x8, 3b7e4 <rpl_re_set_registers@@Base+0xe848>
   3b768:	ldr	x8, [sp, #32]
   3b76c:	ldr	x8, [x8, #8]
   3b770:	cmp	x8, #0x0
   3b774:	cset	w9, le
   3b778:	tbnz	w9, #0, 3b7e4 <rpl_re_set_registers@@Base+0xe848>
   3b77c:	ldur	x8, [x29, #-24]
   3b780:	ldr	x8, [x8, #8]
   3b784:	ldr	x9, [sp, #32]
   3b788:	ldr	x9, [x9, #8]
   3b78c:	add	x8, x8, x9
   3b790:	ldur	x9, [x29, #-16]
   3b794:	str	x8, [x9]
   3b798:	ldur	x8, [x29, #-16]
   3b79c:	ldr	x8, [x8]
   3b7a0:	mov	x9, #0x8                   	// #8
   3b7a4:	mul	x0, x8, x9
   3b7a8:	bl	af10 <malloc@plt>
   3b7ac:	ldur	x8, [x29, #-16]
   3b7b0:	str	x0, [x8, #16]
   3b7b4:	ldur	x8, [x29, #-16]
   3b7b8:	ldr	x8, [x8, #16]
   3b7bc:	cmp	x8, #0x0
   3b7c0:	cset	w10, eq  // eq = none
   3b7c4:	and	w10, w10, #0x1
   3b7c8:	mov	w0, w10
   3b7cc:	sxtw	x8, w0
   3b7d0:	cbz	x8, 3b7e0 <rpl_re_set_registers@@Base+0xe844>
   3b7d4:	mov	w8, #0xc                   	// #12
   3b7d8:	stur	w8, [x29, #-4]
   3b7dc:	b	3ba70 <rpl_re_set_registers@@Base+0xead4>
   3b7e0:	b	3b85c <rpl_re_set_registers@@Base+0xe8c0>
   3b7e4:	ldur	x8, [x29, #-24]
   3b7e8:	cbz	x8, 3b814 <rpl_re_set_registers@@Base+0xe878>
   3b7ec:	ldur	x8, [x29, #-24]
   3b7f0:	ldr	x8, [x8, #8]
   3b7f4:	cmp	x8, #0x0
   3b7f8:	cset	w9, le
   3b7fc:	tbnz	w9, #0, 3b814 <rpl_re_set_registers@@Base+0xe878>
   3b800:	ldur	x0, [x29, #-16]
   3b804:	ldur	x1, [x29, #-24]
   3b808:	bl	3719c <rpl_re_set_registers@@Base+0xa200>
   3b80c:	stur	w0, [x29, #-4]
   3b810:	b	3ba70 <rpl_re_set_registers@@Base+0xead4>
   3b814:	ldr	x8, [sp, #32]
   3b818:	cbz	x8, 3b844 <rpl_re_set_registers@@Base+0xe8a8>
   3b81c:	ldr	x8, [sp, #32]
   3b820:	ldr	x8, [x8, #8]
   3b824:	cmp	x8, #0x0
   3b828:	cset	w9, le
   3b82c:	tbnz	w9, #0, 3b844 <rpl_re_set_registers@@Base+0xe8a8>
   3b830:	ldur	x0, [x29, #-16]
   3b834:	ldr	x1, [sp, #32]
   3b838:	bl	3719c <rpl_re_set_registers@@Base+0xa200>
   3b83c:	stur	w0, [x29, #-4]
   3b840:	b	3ba70 <rpl_re_set_registers@@Base+0xead4>
   3b844:	ldur	x8, [x29, #-16]
   3b848:	str	xzr, [x8]
   3b84c:	str	xzr, [x8, #8]
   3b850:	str	xzr, [x8, #16]
   3b854:	stur	wzr, [x29, #-4]
   3b858:	b	3ba70 <rpl_re_set_registers@@Base+0xead4>
   3b85c:	str	xzr, [sp, #8]
   3b860:	str	xzr, [sp, #16]
   3b864:	str	xzr, [sp, #24]
   3b868:	ldr	x8, [sp, #24]
   3b86c:	ldur	x9, [x29, #-24]
   3b870:	ldr	x9, [x9, #8]
   3b874:	mov	w10, #0x0                   	// #0
   3b878:	cmp	x8, x9
   3b87c:	str	w10, [sp, #4]
   3b880:	b.ge	3b89c <rpl_re_set_registers@@Base+0xe900>  // b.tcont
   3b884:	ldr	x8, [sp, #16]
   3b888:	ldr	x9, [sp, #32]
   3b88c:	ldr	x9, [x9, #8]
   3b890:	cmp	x8, x9
   3b894:	cset	w10, lt  // lt = tstop
   3b898:	str	w10, [sp, #4]
   3b89c:	ldr	w8, [sp, #4]
   3b8a0:	tbnz	w8, #0, 3b8a8 <rpl_re_set_registers@@Base+0xe90c>
   3b8a4:	b	3b96c <rpl_re_set_registers@@Base+0xe9d0>
   3b8a8:	ldur	x8, [x29, #-24]
   3b8ac:	ldr	x8, [x8, #16]
   3b8b0:	ldr	x9, [sp, #24]
   3b8b4:	ldr	x8, [x8, x9, lsl #3]
   3b8b8:	ldr	x9, [sp, #32]
   3b8bc:	ldr	x9, [x9, #16]
   3b8c0:	ldr	x10, [sp, #16]
   3b8c4:	ldr	x9, [x9, x10, lsl #3]
   3b8c8:	cmp	x8, x9
   3b8cc:	b.le	3b904 <rpl_re_set_registers@@Base+0xe968>
   3b8d0:	ldr	x8, [sp, #32]
   3b8d4:	ldr	x8, [x8, #16]
   3b8d8:	ldr	x9, [sp, #16]
   3b8dc:	add	x10, x9, #0x1
   3b8e0:	str	x10, [sp, #16]
   3b8e4:	ldr	x8, [x8, x9, lsl #3]
   3b8e8:	ldur	x9, [x29, #-16]
   3b8ec:	ldr	x9, [x9, #16]
   3b8f0:	ldr	x10, [sp, #8]
   3b8f4:	add	x11, x10, #0x1
   3b8f8:	str	x11, [sp, #8]
   3b8fc:	str	x8, [x9, x10, lsl #3]
   3b900:	b	3b868 <rpl_re_set_registers@@Base+0xe8cc>
   3b904:	ldur	x8, [x29, #-24]
   3b908:	ldr	x8, [x8, #16]
   3b90c:	ldr	x9, [sp, #24]
   3b910:	ldr	x8, [x8, x9, lsl #3]
   3b914:	ldr	x9, [sp, #32]
   3b918:	ldr	x9, [x9, #16]
   3b91c:	ldr	x10, [sp, #16]
   3b920:	ldr	x9, [x9, x10, lsl #3]
   3b924:	cmp	x8, x9
   3b928:	b.ne	3b938 <rpl_re_set_registers@@Base+0xe99c>  // b.any
   3b92c:	ldr	x8, [sp, #16]
   3b930:	add	x8, x8, #0x1
   3b934:	str	x8, [sp, #16]
   3b938:	ldur	x8, [x29, #-24]
   3b93c:	ldr	x8, [x8, #16]
   3b940:	ldr	x9, [sp, #24]
   3b944:	add	x10, x9, #0x1
   3b948:	str	x10, [sp, #24]
   3b94c:	ldr	x8, [x8, x9, lsl #3]
   3b950:	ldur	x9, [x29, #-16]
   3b954:	ldr	x9, [x9, #16]
   3b958:	ldr	x10, [sp, #8]
   3b95c:	add	x11, x10, #0x1
   3b960:	str	x11, [sp, #8]
   3b964:	str	x8, [x9, x10, lsl #3]
   3b968:	b	3b868 <rpl_re_set_registers@@Base+0xe8cc>
   3b96c:	ldr	x8, [sp, #24]
   3b970:	ldur	x9, [x29, #-24]
   3b974:	ldr	x9, [x9, #8]
   3b978:	cmp	x8, x9
   3b97c:	b.ge	3b9e8 <rpl_re_set_registers@@Base+0xea4c>  // b.tcont
   3b980:	ldur	x8, [x29, #-16]
   3b984:	ldr	x8, [x8, #16]
   3b988:	ldr	x9, [sp, #8]
   3b98c:	mov	x10, #0x8                   	// #8
   3b990:	mul	x9, x10, x9
   3b994:	add	x0, x8, x9
   3b998:	ldur	x8, [x29, #-24]
   3b99c:	ldr	x8, [x8, #16]
   3b9a0:	ldr	x9, [sp, #24]
   3b9a4:	mul	x9, x10, x9
   3b9a8:	add	x1, x8, x9
   3b9ac:	ldur	x8, [x29, #-24]
   3b9b0:	ldr	x8, [x8, #8]
   3b9b4:	ldr	x9, [sp, #24]
   3b9b8:	subs	x8, x8, x9
   3b9bc:	mov	x9, #0x8                   	// #8
   3b9c0:	mul	x2, x8, x9
   3b9c4:	bl	af30 <memcpy@plt>
   3b9c8:	ldur	x8, [x29, #-24]
   3b9cc:	ldr	x8, [x8, #8]
   3b9d0:	ldr	x9, [sp, #24]
   3b9d4:	subs	x8, x8, x9
   3b9d8:	ldr	x9, [sp, #8]
   3b9dc:	add	x8, x9, x8
   3b9e0:	str	x8, [sp, #8]
   3b9e4:	b	3ba60 <rpl_re_set_registers@@Base+0xeac4>
   3b9e8:	ldr	x8, [sp, #16]
   3b9ec:	ldr	x9, [sp, #32]
   3b9f0:	ldr	x9, [x9, #8]
   3b9f4:	cmp	x8, x9
   3b9f8:	b.ge	3ba60 <rpl_re_set_registers@@Base+0xeac4>  // b.tcont
   3b9fc:	ldur	x8, [x29, #-16]
   3ba00:	ldr	x8, [x8, #16]
   3ba04:	ldr	x9, [sp, #8]
   3ba08:	mov	x10, #0x8                   	// #8
   3ba0c:	mul	x9, x10, x9
   3ba10:	add	x0, x8, x9
   3ba14:	ldr	x8, [sp, #32]
   3ba18:	ldr	x8, [x8, #16]
   3ba1c:	ldr	x9, [sp, #16]
   3ba20:	mul	x9, x10, x9
   3ba24:	add	x1, x8, x9
   3ba28:	ldr	x8, [sp, #32]
   3ba2c:	ldr	x8, [x8, #8]
   3ba30:	ldr	x9, [sp, #16]
   3ba34:	subs	x8, x8, x9
   3ba38:	mov	x9, #0x8                   	// #8
   3ba3c:	mul	x2, x8, x9
   3ba40:	bl	af30 <memcpy@plt>
   3ba44:	ldr	x8, [sp, #32]
   3ba48:	ldr	x8, [x8, #8]
   3ba4c:	ldr	x9, [sp, #16]
   3ba50:	subs	x8, x8, x9
   3ba54:	ldr	x9, [sp, #8]
   3ba58:	add	x8, x9, x8
   3ba5c:	str	x8, [sp, #8]
   3ba60:	ldr	x8, [sp, #8]
   3ba64:	ldur	x9, [x29, #-16]
   3ba68:	str	x8, [x9, #8]
   3ba6c:	stur	wzr, [x29, #-4]
   3ba70:	ldur	w0, [x29, #-4]
   3ba74:	ldp	x29, x30, [sp, #64]
   3ba78:	add	sp, sp, #0x50
   3ba7c:	ret
   3ba80:	sub	sp, sp, #0x40
   3ba84:	str	x0, [sp, #48]
   3ba88:	str	x1, [sp, #40]
   3ba8c:	ldr	x8, [sp, #48]
   3ba90:	ldr	x8, [x8, #200]
   3ba94:	str	x8, [sp, #24]
   3ba98:	str	x8, [sp, #8]
   3ba9c:	str	xzr, [sp, #32]
   3baa0:	ldr	x8, [sp, #32]
   3baa4:	ldr	x9, [sp, #24]
   3baa8:	cmp	x8, x9
   3baac:	b.ge	3bb0c <rpl_re_set_registers@@Base+0xeb70>  // b.tcont
   3bab0:	ldr	x8, [sp, #32]
   3bab4:	ldr	x9, [sp, #24]
   3bab8:	add	x8, x8, x9
   3babc:	mov	x9, #0x2                   	// #2
   3bac0:	sdiv	x8, x8, x9
   3bac4:	str	x8, [sp, #16]
   3bac8:	ldr	x8, [sp, #48]
   3bacc:	ldr	x8, [x8, #216]
   3bad0:	ldr	x9, [sp, #16]
   3bad4:	mov	x10, #0x28                  	// #40
   3bad8:	mul	x9, x10, x9
   3badc:	add	x8, x8, x9
   3bae0:	ldr	x8, [x8, #8]
   3bae4:	ldr	x9, [sp, #40]
   3bae8:	cmp	x8, x9
   3baec:	b.ge	3bb00 <rpl_re_set_registers@@Base+0xeb64>  // b.tcont
   3baf0:	ldr	x8, [sp, #16]
   3baf4:	add	x8, x8, #0x1
   3baf8:	str	x8, [sp, #32]
   3bafc:	b	3bb08 <rpl_re_set_registers@@Base+0xeb6c>
   3bb00:	ldr	x8, [sp, #16]
   3bb04:	str	x8, [sp, #24]
   3bb08:	b	3baa0 <rpl_re_set_registers@@Base+0xeb04>
   3bb0c:	ldr	x8, [sp, #32]
   3bb10:	ldr	x9, [sp, #8]
   3bb14:	cmp	x8, x9
   3bb18:	b.ge	3bb50 <rpl_re_set_registers@@Base+0xebb4>  // b.tcont
   3bb1c:	ldr	x8, [sp, #48]
   3bb20:	ldr	x8, [x8, #216]
   3bb24:	ldr	x9, [sp, #32]
   3bb28:	mov	x10, #0x28                  	// #40
   3bb2c:	mul	x9, x10, x9
   3bb30:	add	x8, x8, x9
   3bb34:	ldr	x8, [x8, #8]
   3bb38:	ldr	x9, [sp, #40]
   3bb3c:	cmp	x8, x9
   3bb40:	b.ne	3bb50 <rpl_re_set_registers@@Base+0xebb4>  // b.any
   3bb44:	ldr	x8, [sp, #32]
   3bb48:	str	x8, [sp, #56]
   3bb4c:	b	3bb58 <rpl_re_set_registers@@Base+0xebbc>
   3bb50:	mov	x8, #0xffffffffffffffff    	// #-1
   3bb54:	str	x8, [sp, #56]
   3bb58:	ldr	x0, [sp, #56]
   3bb5c:	add	sp, sp, #0x40
   3bb60:	ret
   3bb64:	sub	sp, sp, #0x40
   3bb68:	stp	x29, x30, [sp, #48]
   3bb6c:	add	x29, sp, #0x30
   3bb70:	stur	x0, [x29, #-16]
   3bb74:	str	x1, [sp, #24]
   3bb78:	ldur	x8, [x29, #-16]
   3bb7c:	ldr	x8, [x8, #192]
   3bb80:	str	x8, [sp, #16]
   3bb84:	ldr	x8, [sp, #24]
   3bb88:	ldur	x9, [x29, #-16]
   3bb8c:	ldr	x9, [x9, #64]
   3bb90:	cmp	x8, x9
   3bb94:	b.lt	3bbb0 <rpl_re_set_registers@@Base+0xec14>  // b.tstop
   3bb98:	ldur	x8, [x29, #-16]
   3bb9c:	ldr	x8, [x8, #64]
   3bba0:	ldur	x9, [x29, #-16]
   3bba4:	ldr	x9, [x9, #88]
   3bba8:	cmp	x8, x9
   3bbac:	b.lt	3bbdc <rpl_re_set_registers@@Base+0xec40>  // b.tstop
   3bbb0:	ldr	x8, [sp, #24]
   3bbb4:	ldur	x9, [x29, #-16]
   3bbb8:	ldr	x9, [x9, #48]
   3bbbc:	cmp	x8, x9
   3bbc0:	b.lt	3bc1c <rpl_re_set_registers@@Base+0xec80>  // b.tstop
   3bbc4:	ldur	x8, [x29, #-16]
   3bbc8:	ldr	x8, [x8, #48]
   3bbcc:	ldur	x9, [x29, #-16]
   3bbd0:	ldr	x9, [x9, #88]
   3bbd4:	cmp	x8, x9
   3bbd8:	b.ge	3bc1c <rpl_re_set_registers@@Base+0xec80>  // b.tcont
   3bbdc:	ldur	x0, [x29, #-16]
   3bbe0:	ldr	x8, [sp, #24]
   3bbe4:	add	x8, x8, #0x1
   3bbe8:	mov	w1, w8
   3bbec:	bl	3a7fc <rpl_re_set_registers@@Base+0xd860>
   3bbf0:	str	w0, [sp, #12]
   3bbf4:	ldr	w8, [sp, #12]
   3bbf8:	cmp	w8, #0x0
   3bbfc:	cset	w8, ne  // ne = any
   3bc00:	and	w8, w8, #0x1
   3bc04:	mov	w2, w8
   3bc08:	sxtw	x9, w2
   3bc0c:	cbz	x9, 3bc1c <rpl_re_set_registers@@Base+0xec80>
   3bc10:	ldr	w8, [sp, #12]
   3bc14:	stur	w8, [x29, #-4]
   3bc18:	b	3bc78 <rpl_re_set_registers@@Base+0xecdc>
   3bc1c:	ldr	x8, [sp, #16]
   3bc20:	ldr	x9, [sp, #24]
   3bc24:	cmp	x8, x9
   3bc28:	b.ge	3bc74 <rpl_re_set_registers@@Base+0xecd8>  // b.tcont
   3bc2c:	ldur	x8, [x29, #-16]
   3bc30:	ldr	x8, [x8, #184]
   3bc34:	ldr	x9, [sp, #16]
   3bc38:	mov	x10, #0x8                   	// #8
   3bc3c:	mul	x9, x10, x9
   3bc40:	add	x8, x8, x9
   3bc44:	add	x0, x8, #0x8
   3bc48:	ldr	x8, [sp, #24]
   3bc4c:	ldr	x9, [sp, #16]
   3bc50:	subs	x8, x8, x9
   3bc54:	mov	x9, #0x8                   	// #8
   3bc58:	mul	x2, x9, x8
   3bc5c:	mov	w11, wzr
   3bc60:	mov	w1, w11
   3bc64:	bl	a970 <memset@plt>
   3bc68:	ldr	x8, [sp, #24]
   3bc6c:	ldur	x9, [x29, #-16]
   3bc70:	str	x8, [x9, #192]
   3bc74:	stur	wzr, [x29, #-4]
   3bc78:	ldur	w0, [x29, #-4]
   3bc7c:	ldp	x29, x30, [sp, #48]
   3bc80:	add	sp, sp, #0x40
   3bc84:	ret
   3bc88:	sub	sp, sp, #0x50
   3bc8c:	stp	x29, x30, [sp, #64]
   3bc90:	add	x29, sp, #0x40
   3bc94:	mov	w6, #0x8                   	// #8
   3bc98:	stur	x0, [x29, #-16]
   3bc9c:	stur	x1, [x29, #-24]
   3bca0:	str	x2, [sp, #32]
   3bca4:	str	x3, [sp, #24]
   3bca8:	str	x4, [sp, #16]
   3bcac:	ldur	x0, [x29, #-16]
   3bcb0:	ldr	x8, [sp, #32]
   3bcb4:	add	x1, x8, #0x10
   3bcb8:	ldr	x8, [sp, #32]
   3bcbc:	ldr	x2, [x8]
   3bcc0:	ldr	x8, [sp, #32]
   3bcc4:	ldr	x3, [x8, #8]
   3bcc8:	ldr	x4, [sp, #24]
   3bccc:	ldr	x5, [sp, #16]
   3bcd0:	bl	3be30 <rpl_re_set_registers@@Base+0xee94>
   3bcd4:	str	w0, [sp, #12]
   3bcd8:	ldr	w9, [sp, #12]
   3bcdc:	cbz	w9, 3bcec <rpl_re_set_registers@@Base+0xed50>
   3bce0:	ldr	w8, [sp, #12]
   3bce4:	stur	w8, [x29, #-4]
   3bce8:	b	3bd68 <rpl_re_set_registers@@Base+0xedcc>
   3bcec:	ldur	x0, [x29, #-16]
   3bcf0:	ldr	x1, [sp, #24]
   3bcf4:	ldr	x2, [sp, #16]
   3bcf8:	ldur	x8, [x29, #-24]
   3bcfc:	ldr	x3, [x8]
   3bd00:	ldr	x8, [sp, #32]
   3bd04:	ldr	x4, [x8, #8]
   3bd08:	bl	3c740 <rpl_re_set_registers@@Base+0xf7a4>
   3bd0c:	str	w0, [sp, #12]
   3bd10:	ldr	w9, [sp, #12]
   3bd14:	cmp	w9, #0x0
   3bd18:	cset	w9, ne  // ne = any
   3bd1c:	and	w9, w9, #0x1
   3bd20:	mov	w1, w9
   3bd24:	sxtw	x8, w1
   3bd28:	cbz	x8, 3bd38 <rpl_re_set_registers@@Base+0xed9c>
   3bd2c:	ldr	w8, [sp, #12]
   3bd30:	stur	w8, [x29, #-4]
   3bd34:	b	3bd68 <rpl_re_set_registers@@Base+0xedcc>
   3bd38:	ldr	x8, [sp, #16]
   3bd3c:	ldr	x9, [sp, #32]
   3bd40:	ldr	x9, [x9, #8]
   3bd44:	add	x8, x8, x9
   3bd48:	ldur	x9, [x29, #-24]
   3bd4c:	ldr	x9, [x9]
   3bd50:	subs	x8, x8, x9
   3bd54:	str	x8, [sp]
   3bd58:	ldur	x0, [x29, #-16]
   3bd5c:	ldr	x1, [sp]
   3bd60:	bl	3bb64 <rpl_re_set_registers@@Base+0xebc8>
   3bd64:	stur	w0, [x29, #-4]
   3bd68:	ldur	w0, [x29, #-4]
   3bd6c:	ldp	x29, x30, [sp, #64]
   3bd70:	add	sp, sp, #0x50
   3bd74:	ret
   3bd78:	sub	sp, sp, #0x40
   3bd7c:	str	x0, [sp, #48]
   3bd80:	str	x1, [sp, #40]
   3bd84:	str	x2, [sp, #32]
   3bd88:	str	w3, [sp, #28]
   3bd8c:	str	xzr, [sp, #16]
   3bd90:	ldr	x8, [sp, #16]
   3bd94:	ldr	x9, [sp, #40]
   3bd98:	ldr	x9, [x9, #8]
   3bd9c:	cmp	x8, x9
   3bda0:	b.ge	3be1c <rpl_re_set_registers@@Base+0xee80>  // b.tcont
   3bda4:	ldr	x8, [sp, #40]
   3bda8:	mov	x9, #0x10                  	// #16
   3bdac:	ldr	x8, [x8, #16]
   3bdb0:	ldr	x10, [sp, #16]
   3bdb4:	ldr	x8, [x8, x10, lsl #3]
   3bdb8:	str	x8, [sp, #8]
   3bdbc:	ldr	x8, [sp, #48]
   3bdc0:	ldr	x8, [x8]
   3bdc4:	ldr	x10, [sp, #8]
   3bdc8:	mul	x9, x9, x10
   3bdcc:	add	x8, x8, x9
   3bdd0:	str	x8, [sp]
   3bdd4:	ldr	x8, [sp]
   3bdd8:	ldr	w11, [x8, #8]
   3bddc:	and	w11, w11, #0xff
   3bde0:	ldr	w12, [sp, #28]
   3bde4:	cmp	w11, w12
   3bde8:	b.ne	3be0c <rpl_re_set_registers@@Base+0xee70>  // b.any
   3bdec:	ldr	x8, [sp]
   3bdf0:	ldr	x8, [x8]
   3bdf4:	ldr	x9, [sp, #32]
   3bdf8:	cmp	x8, x9
   3bdfc:	b.ne	3be0c <rpl_re_set_registers@@Base+0xee70>  // b.any
   3be00:	ldr	x8, [sp, #8]
   3be04:	str	x8, [sp, #56]
   3be08:	b	3be24 <rpl_re_set_registers@@Base+0xee88>
   3be0c:	ldr	x8, [sp, #16]
   3be10:	add	x8, x8, #0x1
   3be14:	str	x8, [sp, #16]
   3be18:	b	3bd90 <rpl_re_set_registers@@Base+0xedf4>
   3be1c:	mov	x8, #0xffffffffffffffff    	// #-1
   3be20:	str	x8, [sp, #56]
   3be24:	ldr	x0, [sp, #56]
   3be28:	add	sp, sp, #0x40
   3be2c:	ret
   3be30:	sub	sp, sp, #0x100
   3be34:	stp	x29, x30, [sp, #240]
   3be38:	add	x29, sp, #0xf0
   3be3c:	mov	x8, xzr
   3be40:	stur	x0, [x29, #-16]
   3be44:	stur	x1, [x29, #-24]
   3be48:	stur	x2, [x29, #-32]
   3be4c:	stur	x3, [x29, #-40]
   3be50:	stur	x4, [x29, #-48]
   3be54:	stur	x5, [x29, #-56]
   3be58:	stur	w6, [x29, #-60]
   3be5c:	ldur	x9, [x29, #-16]
   3be60:	ldr	x9, [x9, #152]
   3be64:	stur	x9, [x29, #-72]
   3be68:	stur	wzr, [x29, #-76]
   3be6c:	str	x8, [sp, #120]
   3be70:	ldur	x8, [x29, #-72]
   3be74:	ldr	x8, [x8]
   3be78:	ldur	x9, [x29, #-32]
   3be7c:	mov	x10, #0x10                  	// #16
   3be80:	mul	x9, x10, x9
   3be84:	ldr	x8, [x8, x9]
   3be88:	stur	x8, [x29, #-88]
   3be8c:	ldur	x8, [x29, #-24]
   3be90:	ldr	x8, [x8, #8]
   3be94:	ldur	x9, [x29, #-56]
   3be98:	ldur	x10, [x29, #-16]
   3be9c:	ldrsw	x10, [x10, #224]
   3bea0:	add	x9, x9, x10
   3bea4:	add	x9, x9, #0x1
   3bea8:	cmp	x8, x9
   3beac:	cset	w11, lt  // lt = tstop
   3beb0:	and	w11, w11, #0x1
   3beb4:	mov	w0, w11
   3beb8:	sxtw	x8, w0
   3bebc:	cbz	x8, 3bfe8 <rpl_re_set_registers@@Base+0xf04c>
   3bec0:	ldur	x8, [x29, #-24]
   3bec4:	ldr	x8, [x8, #8]
   3bec8:	str	x8, [sp, #56]
   3becc:	ldur	x8, [x29, #-56]
   3bed0:	ldur	x9, [x29, #-16]
   3bed4:	ldrsw	x9, [x9, #224]
   3bed8:	add	x8, x8, x9
   3bedc:	add	x8, x8, #0x1
   3bee0:	str	x8, [sp, #48]
   3bee4:	ldr	x8, [sp, #56]
   3bee8:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
   3beec:	subs	x8, x9, x8
   3bef0:	ldr	x9, [sp, #48]
   3bef4:	cmp	x8, x9
   3bef8:	cset	w10, lt  // lt = tstop
   3befc:	and	w10, w10, #0x1
   3bf00:	mov	w0, w10
   3bf04:	sxtw	x8, w0
   3bf08:	cbz	x8, 3bf18 <rpl_re_set_registers@@Base+0xef7c>
   3bf0c:	mov	w8, #0xc                   	// #12
   3bf10:	stur	w8, [x29, #-4]
   3bf14:	b	3c5ec <rpl_re_set_registers@@Base+0xf650>
   3bf18:	ldr	x8, [sp, #56]
   3bf1c:	ldr	x9, [sp, #48]
   3bf20:	add	x8, x8, x9
   3bf24:	str	x8, [sp, #40]
   3bf28:	ldr	x8, [sp, #40]
   3bf2c:	mov	x9, #0x1fffffffffffffff    	// #2305843009213693951
   3bf30:	cmp	x9, x8
   3bf34:	cset	w10, cc  // cc = lo, ul, last
   3bf38:	and	w10, w10, #0x1
   3bf3c:	mov	w0, w10
   3bf40:	sxtw	x8, w0
   3bf44:	cbz	x8, 3bf54 <rpl_re_set_registers@@Base+0xefb8>
   3bf48:	mov	w8, #0xc                   	// #12
   3bf4c:	stur	w8, [x29, #-4]
   3bf50:	b	3c5ec <rpl_re_set_registers@@Base+0xf650>
   3bf54:	ldur	x8, [x29, #-24]
   3bf58:	ldr	x0, [x8, #16]
   3bf5c:	ldr	x8, [sp, #40]
   3bf60:	mov	x9, #0x8                   	// #8
   3bf64:	mul	x1, x8, x9
   3bf68:	bl	af40 <realloc@plt>
   3bf6c:	str	x0, [sp, #64]
   3bf70:	ldr	x8, [sp, #64]
   3bf74:	cmp	x8, #0x0
   3bf78:	cset	w10, eq  // eq = none
   3bf7c:	and	w10, w10, #0x1
   3bf80:	mov	w0, w10
   3bf84:	sxtw	x8, w0
   3bf88:	cbz	x8, 3bf98 <rpl_re_set_registers@@Base+0xeffc>
   3bf8c:	mov	w8, #0xc                   	// #12
   3bf90:	stur	w8, [x29, #-4]
   3bf94:	b	3c5ec <rpl_re_set_registers@@Base+0xf650>
   3bf98:	ldr	x8, [sp, #64]
   3bf9c:	ldur	x9, [x29, #-24]
   3bfa0:	str	x8, [x9, #16]
   3bfa4:	ldr	x8, [sp, #40]
   3bfa8:	ldur	x9, [x29, #-24]
   3bfac:	mov	x10, #0x8                   	// #8
   3bfb0:	str	x8, [x9, #8]
   3bfb4:	ldr	x8, [sp, #64]
   3bfb8:	ldr	x9, [sp, #56]
   3bfbc:	mul	x9, x10, x9
   3bfc0:	add	x0, x8, x9
   3bfc4:	ldur	x8, [x29, #-24]
   3bfc8:	ldr	x8, [x8, #8]
   3bfcc:	ldr	x9, [sp, #56]
   3bfd0:	subs	x8, x8, x9
   3bfd4:	mov	x9, #0x8                   	// #8
   3bfd8:	mul	x2, x9, x8
   3bfdc:	mov	w11, wzr
   3bfe0:	mov	w1, w11
   3bfe4:	bl	a970 <memset@plt>
   3bfe8:	ldur	x8, [x29, #-24]
   3bfec:	ldr	x8, [x8]
   3bff0:	cbz	x8, 3c004 <rpl_re_set_registers@@Base+0xf068>
   3bff4:	ldur	x8, [x29, #-24]
   3bff8:	ldr	x8, [x8]
   3bffc:	str	x8, [sp, #32]
   3c000:	b	3c00c <rpl_re_set_registers@@Base+0xf070>
   3c004:	ldur	x8, [x29, #-40]
   3c008:	str	x8, [sp, #32]
   3c00c:	ldr	x8, [sp, #32]
   3c010:	stur	x8, [x29, #-104]
   3c014:	ldur	x8, [x29, #-16]
   3c018:	ldr	x8, [x8, #184]
   3c01c:	str	x8, [sp, #80]
   3c020:	ldur	x8, [x29, #-16]
   3c024:	ldr	x8, [x8, #72]
   3c028:	stur	x8, [x29, #-96]
   3c02c:	ldur	x8, [x29, #-24]
   3c030:	ldr	x8, [x8, #16]
   3c034:	ldur	x9, [x29, #-16]
   3c038:	str	x8, [x9, #184]
   3c03c:	ldur	x8, [x29, #-104]
   3c040:	ldur	x9, [x29, #-16]
   3c044:	str	x8, [x9, #72]
   3c048:	ldur	x0, [x29, #-16]
   3c04c:	ldur	x8, [x29, #-104]
   3c050:	subs	x1, x8, #0x1
   3c054:	ldur	x8, [x29, #-16]
   3c058:	ldr	w2, [x8, #160]
   3c05c:	bl	39dbc <rpl_re_set_registers@@Base+0xce20>
   3c060:	str	w0, [sp, #76]
   3c064:	ldur	x8, [x29, #-104]
   3c068:	ldur	x9, [x29, #-40]
   3c06c:	cmp	x8, x9
   3c070:	b.ne	3c0fc <rpl_re_set_registers@@Base+0xf160>  // b.any
   3c074:	ldur	x1, [x29, #-32]
   3c078:	add	x0, sp, #0x58
   3c07c:	bl	35d90 <rpl_re_set_registers@@Base+0x8df4>
   3c080:	stur	w0, [x29, #-76]
   3c084:	ldur	w8, [x29, #-76]
   3c088:	cmp	w8, #0x0
   3c08c:	cset	w8, ne  // ne = any
   3c090:	and	w8, w8, #0x1
   3c094:	mov	w1, w8
   3c098:	sxtw	x9, w1
   3c09c:	cbz	x9, 3c0ac <rpl_re_set_registers@@Base+0xf110>
   3c0a0:	ldur	w8, [x29, #-76]
   3c0a4:	stur	w8, [x29, #-4]
   3c0a8:	b	3c5ec <rpl_re_set_registers@@Base+0xf650>
   3c0ac:	ldur	x0, [x29, #-72]
   3c0b0:	ldur	x2, [x29, #-88]
   3c0b4:	ldur	w3, [x29, #-60]
   3c0b8:	add	x1, sp, #0x58
   3c0bc:	bl	3c9b8 <rpl_re_set_registers@@Base+0xfa1c>
   3c0c0:	stur	w0, [x29, #-76]
   3c0c4:	ldur	w8, [x29, #-76]
   3c0c8:	cmp	w8, #0x0
   3c0cc:	cset	w8, ne  // ne = any
   3c0d0:	and	w8, w8, #0x1
   3c0d4:	mov	w1, w8
   3c0d8:	sxtw	x9, w1
   3c0dc:	cbz	x9, 3c0f8 <rpl_re_set_registers@@Base+0xf15c>
   3c0e0:	add	x8, sp, #0x58
   3c0e4:	ldr	x0, [x8, #16]
   3c0e8:	bl	a930 <free@plt>
   3c0ec:	ldur	w9, [x29, #-76]
   3c0f0:	stur	w9, [x29, #-4]
   3c0f4:	b	3c5ec <rpl_re_set_registers@@Base+0xf650>
   3c0f8:	b	3c18c <rpl_re_set_registers@@Base+0xf1f0>
   3c0fc:	ldur	x8, [x29, #-16]
   3c100:	ldr	x8, [x8, #184]
   3c104:	ldur	x9, [x29, #-104]
   3c108:	mov	x10, #0x8                   	// #8
   3c10c:	mul	x9, x10, x9
   3c110:	add	x8, x8, x9
   3c114:	ldr	x8, [x8]
   3c118:	str	x8, [sp, #120]
   3c11c:	ldr	x8, [sp, #120]
   3c120:	cbz	x8, 3c180 <rpl_re_set_registers@@Base+0xf1e4>
   3c124:	ldr	x8, [sp, #120]
   3c128:	ldrb	w9, [x8, #104]
   3c12c:	mov	w10, #0x6                   	// #6
   3c130:	lsr	w9, w9, w10
   3c134:	and	w9, w9, #0x1
   3c138:	and	w9, w9, #0xff
   3c13c:	cbz	w9, 3c180 <rpl_re_set_registers@@Base+0xf1e4>
   3c140:	ldr	x8, [sp, #120]
   3c144:	add	x1, x8, #0x8
   3c148:	add	x0, sp, #0x58
   3c14c:	bl	3719c <rpl_re_set_registers@@Base+0xa200>
   3c150:	stur	w0, [x29, #-76]
   3c154:	ldur	w9, [x29, #-76]
   3c158:	cmp	w9, #0x0
   3c15c:	cset	w9, ne  // ne = any
   3c160:	and	w9, w9, #0x1
   3c164:	mov	w1, w9
   3c168:	sxtw	x8, w1
   3c16c:	cbz	x8, 3c17c <rpl_re_set_registers@@Base+0xf1e0>
   3c170:	ldur	w8, [x29, #-76]
   3c174:	stur	w8, [x29, #-4]
   3c178:	b	3c5ec <rpl_re_set_registers@@Base+0xf650>
   3c17c:	b	3c18c <rpl_re_set_registers@@Base+0xf1f0>
   3c180:	str	xzr, [sp, #88]
   3c184:	str	xzr, [sp, #96]
   3c188:	str	xzr, [sp, #104]
   3c18c:	ldur	x8, [x29, #-104]
   3c190:	ldur	x9, [x29, #-40]
   3c194:	cmp	x8, x9
   3c198:	b.eq	3c1c0 <rpl_re_set_registers@@Base+0xf224>  // b.none
   3c19c:	ldr	x8, [sp, #120]
   3c1a0:	cbz	x8, 3c29c <rpl_re_set_registers@@Base+0xf300>
   3c1a4:	ldr	x8, [sp, #120]
   3c1a8:	ldrb	w9, [x8, #104]
   3c1ac:	mov	w10, #0x6                   	// #6
   3c1b0:	lsr	w9, w9, w10
   3c1b4:	and	w9, w9, #0x1
   3c1b8:	and	w9, w9, #0xff
   3c1bc:	cbz	w9, 3c29c <rpl_re_set_registers@@Base+0xf300>
   3c1c0:	ldr	x8, [sp, #96]
   3c1c4:	cbz	x8, 3c218 <rpl_re_set_registers@@Base+0xf27c>
   3c1c8:	ldur	x0, [x29, #-16]
   3c1cc:	ldur	x2, [x29, #-104]
   3c1d0:	ldur	x3, [x29, #-88]
   3c1d4:	ldur	w4, [x29, #-60]
   3c1d8:	add	x1, sp, #0x58
   3c1dc:	bl	3cb60 <rpl_re_set_registers@@Base+0xfbc4>
   3c1e0:	stur	w0, [x29, #-76]
   3c1e4:	ldur	w8, [x29, #-76]
   3c1e8:	cmp	w8, #0x0
   3c1ec:	cset	w8, ne  // ne = any
   3c1f0:	and	w8, w8, #0x1
   3c1f4:	mov	w1, w8
   3c1f8:	sxtw	x9, w1
   3c1fc:	cbz	x9, 3c218 <rpl_re_set_registers@@Base+0xf27c>
   3c200:	add	x8, sp, #0x58
   3c204:	ldr	x0, [x8, #16]
   3c208:	bl	a930 <free@plt>
   3c20c:	ldur	w9, [x29, #-76]
   3c210:	stur	w9, [x29, #-4]
   3c214:	b	3c5ec <rpl_re_set_registers@@Base+0xf650>
   3c218:	ldur	x1, [x29, #-72]
   3c21c:	ldr	w3, [sp, #76]
   3c220:	sub	x0, x29, #0x4c
   3c224:	add	x2, sp, #0x58
   3c228:	bl	3736c <rpl_re_set_registers@@Base+0xa3d0>
   3c22c:	str	x0, [sp, #120]
   3c230:	ldr	x8, [sp, #120]
   3c234:	mov	w9, #0x0                   	// #0
   3c238:	str	w9, [sp, #28]
   3c23c:	cbnz	x8, 3c250 <rpl_re_set_registers@@Base+0xf2b4>
   3c240:	ldur	w8, [x29, #-76]
   3c244:	cmp	w8, #0x0
   3c248:	cset	w8, ne  // ne = any
   3c24c:	str	w8, [sp, #28]
   3c250:	ldr	w8, [sp, #28]
   3c254:	and	w8, w8, #0x1
   3c258:	mov	w0, w8
   3c25c:	sxtw	x9, w0
   3c260:	cbz	x9, 3c27c <rpl_re_set_registers@@Base+0xf2e0>
   3c264:	add	x8, sp, #0x58
   3c268:	ldr	x0, [x8, #16]
   3c26c:	bl	a930 <free@plt>
   3c270:	ldur	w9, [x29, #-76]
   3c274:	stur	w9, [x29, #-4]
   3c278:	b	3c5ec <rpl_re_set_registers@@Base+0xf650>
   3c27c:	ldr	x8, [sp, #120]
   3c280:	ldur	x9, [x29, #-16]
   3c284:	ldr	x9, [x9, #184]
   3c288:	ldur	x10, [x29, #-104]
   3c28c:	mov	x11, #0x8                   	// #8
   3c290:	mul	x10, x11, x10
   3c294:	add	x9, x9, x10
   3c298:	str	x8, [x9]
   3c29c:	stur	xzr, [x29, #-112]
   3c2a0:	ldur	x8, [x29, #-104]
   3c2a4:	ldur	x9, [x29, #-56]
   3c2a8:	mov	w10, #0x0                   	// #0
   3c2ac:	cmp	x8, x9
   3c2b0:	str	w10, [sp, #24]
   3c2b4:	b.ge	3c2d0 <rpl_re_set_registers@@Base+0xf334>  // b.tcont
   3c2b8:	ldur	x8, [x29, #-112]
   3c2bc:	ldur	x9, [x29, #-16]
   3c2c0:	ldrsw	x9, [x9, #224]
   3c2c4:	cmp	x8, x9
   3c2c8:	cset	w10, le
   3c2cc:	str	w10, [sp, #24]
   3c2d0:	ldr	w8, [sp, #24]
   3c2d4:	tbnz	w8, #0, 3c2dc <rpl_re_set_registers@@Base+0xf340>
   3c2d8:	b	3c53c <rpl_re_set_registers@@Base+0xf5a0>
   3c2dc:	mov	x8, #0x8                   	// #8
   3c2e0:	str	xzr, [sp, #96]
   3c2e4:	ldur	x9, [x29, #-16]
   3c2e8:	ldr	x9, [x9, #184]
   3c2ec:	ldur	x10, [x29, #-104]
   3c2f0:	add	x10, x10, #0x1
   3c2f4:	mul	x8, x8, x10
   3c2f8:	add	x8, x9, x8
   3c2fc:	ldr	x8, [x8]
   3c300:	cbz	x8, 3c368 <rpl_re_set_registers@@Base+0xf3cc>
   3c304:	ldur	x8, [x29, #-16]
   3c308:	ldr	x8, [x8, #184]
   3c30c:	ldur	x9, [x29, #-104]
   3c310:	add	x9, x9, #0x1
   3c314:	mov	x10, #0x8                   	// #8
   3c318:	mul	x9, x10, x9
   3c31c:	add	x8, x8, x9
   3c320:	ldr	x8, [x8]
   3c324:	add	x1, x8, #0x8
   3c328:	add	x0, sp, #0x58
   3c32c:	bl	36848 <rpl_re_set_registers@@Base+0x98ac>
   3c330:	stur	w0, [x29, #-76]
   3c334:	ldur	w11, [x29, #-76]
   3c338:	cmp	w11, #0x0
   3c33c:	cset	w11, ne  // ne = any
   3c340:	and	w11, w11, #0x1
   3c344:	mov	w1, w11
   3c348:	sxtw	x8, w1
   3c34c:	cbz	x8, 3c368 <rpl_re_set_registers@@Base+0xf3cc>
   3c350:	add	x8, sp, #0x58
   3c354:	ldr	x0, [x8, #16]
   3c358:	bl	a930 <free@plt>
   3c35c:	ldur	w9, [x29, #-76]
   3c360:	stur	w9, [x29, #-4]
   3c364:	b	3c5ec <rpl_re_set_registers@@Base+0xf650>
   3c368:	ldr	x8, [sp, #120]
   3c36c:	cbz	x8, 3c3c0 <rpl_re_set_registers@@Base+0xf424>
   3c370:	ldur	x0, [x29, #-16]
   3c374:	ldur	x1, [x29, #-104]
   3c378:	ldr	x8, [sp, #120]
   3c37c:	add	x2, x8, #0x20
   3c380:	add	x3, sp, #0x58
   3c384:	bl	3cfa0 <rpl_re_set_registers@@Base+0x10004>
   3c388:	stur	w0, [x29, #-76]
   3c38c:	ldur	w9, [x29, #-76]
   3c390:	cmp	w9, #0x0
   3c394:	cset	w9, ne  // ne = any
   3c398:	and	w9, w9, #0x1
   3c39c:	mov	w1, w9
   3c3a0:	sxtw	x8, w1
   3c3a4:	cbz	x8, 3c3c0 <rpl_re_set_registers@@Base+0xf424>
   3c3a8:	add	x8, sp, #0x58
   3c3ac:	ldr	x0, [x8, #16]
   3c3b0:	bl	a930 <free@plt>
   3c3b4:	ldur	w9, [x29, #-76]
   3c3b8:	stur	w9, [x29, #-4]
   3c3bc:	b	3c5ec <rpl_re_set_registers@@Base+0xf650>
   3c3c0:	ldur	x8, [x29, #-104]
   3c3c4:	add	x8, x8, #0x1
   3c3c8:	stur	x8, [x29, #-104]
   3c3cc:	ldr	x8, [sp, #96]
   3c3d0:	cbz	x8, 3c470 <rpl_re_set_registers@@Base+0xf4d4>
   3c3d4:	ldur	x0, [x29, #-72]
   3c3d8:	ldur	x2, [x29, #-88]
   3c3dc:	ldur	w3, [x29, #-60]
   3c3e0:	add	x1, sp, #0x58
   3c3e4:	bl	3c9b8 <rpl_re_set_registers@@Base+0xfa1c>
   3c3e8:	stur	w0, [x29, #-76]
   3c3ec:	ldur	w8, [x29, #-76]
   3c3f0:	cmp	w8, #0x0
   3c3f4:	cset	w8, ne  // ne = any
   3c3f8:	and	w8, w8, #0x1
   3c3fc:	mov	w1, w8
   3c400:	sxtw	x9, w1
   3c404:	cbz	x9, 3c420 <rpl_re_set_registers@@Base+0xf484>
   3c408:	add	x8, sp, #0x58
   3c40c:	ldr	x0, [x8, #16]
   3c410:	bl	a930 <free@plt>
   3c414:	ldur	w9, [x29, #-76]
   3c418:	stur	w9, [x29, #-4]
   3c41c:	b	3c5ec <rpl_re_set_registers@@Base+0xf650>
   3c420:	ldur	x0, [x29, #-16]
   3c424:	ldur	x2, [x29, #-104]
   3c428:	ldur	x3, [x29, #-88]
   3c42c:	ldur	w4, [x29, #-60]
   3c430:	add	x1, sp, #0x58
   3c434:	bl	3cb60 <rpl_re_set_registers@@Base+0xfbc4>
   3c438:	stur	w0, [x29, #-76]
   3c43c:	ldur	w8, [x29, #-76]
   3c440:	cmp	w8, #0x0
   3c444:	cset	w8, ne  // ne = any
   3c448:	and	w8, w8, #0x1
   3c44c:	mov	w1, w8
   3c450:	sxtw	x9, w1
   3c454:	cbz	x9, 3c470 <rpl_re_set_registers@@Base+0xf4d4>
   3c458:	add	x8, sp, #0x58
   3c45c:	ldr	x0, [x8, #16]
   3c460:	bl	a930 <free@plt>
   3c464:	ldur	w9, [x29, #-76]
   3c468:	stur	w9, [x29, #-4]
   3c46c:	b	3c5ec <rpl_re_set_registers@@Base+0xf650>
   3c470:	ldur	x0, [x29, #-16]
   3c474:	ldur	x8, [x29, #-104]
   3c478:	subs	x1, x8, #0x1
   3c47c:	ldur	x8, [x29, #-16]
   3c480:	ldr	w2, [x8, #160]
   3c484:	bl	39dbc <rpl_re_set_registers@@Base+0xce20>
   3c488:	str	w0, [sp, #76]
   3c48c:	ldur	x1, [x29, #-72]
   3c490:	ldr	w3, [sp, #76]
   3c494:	sub	x0, x29, #0x4c
   3c498:	add	x2, sp, #0x58
   3c49c:	bl	3736c <rpl_re_set_registers@@Base+0xa3d0>
   3c4a0:	str	x0, [sp, #120]
   3c4a4:	ldr	x8, [sp, #120]
   3c4a8:	mov	w9, #0x0                   	// #0
   3c4ac:	str	w9, [sp, #20]
   3c4b0:	cbnz	x8, 3c4c4 <rpl_re_set_registers@@Base+0xf528>
   3c4b4:	ldur	w8, [x29, #-76]
   3c4b8:	cmp	w8, #0x0
   3c4bc:	cset	w8, ne  // ne = any
   3c4c0:	str	w8, [sp, #20]
   3c4c4:	ldr	w8, [sp, #20]
   3c4c8:	and	w8, w8, #0x1
   3c4cc:	mov	w0, w8
   3c4d0:	sxtw	x9, w0
   3c4d4:	cbz	x9, 3c4f0 <rpl_re_set_registers@@Base+0xf554>
   3c4d8:	add	x8, sp, #0x58
   3c4dc:	ldr	x0, [x8, #16]
   3c4e0:	bl	a930 <free@plt>
   3c4e4:	ldur	w9, [x29, #-76]
   3c4e8:	stur	w9, [x29, #-4]
   3c4ec:	b	3c5ec <rpl_re_set_registers@@Base+0xf650>
   3c4f0:	ldr	x8, [sp, #120]
   3c4f4:	ldur	x9, [x29, #-16]
   3c4f8:	ldr	x9, [x9, #184]
   3c4fc:	ldur	x10, [x29, #-104]
   3c500:	mov	x11, #0x8                   	// #8
   3c504:	mul	x10, x11, x10
   3c508:	add	x9, x9, x10
   3c50c:	str	x8, [x9]
   3c510:	ldr	x8, [sp, #120]
   3c514:	cbnz	x8, 3c528 <rpl_re_set_registers@@Base+0xf58c>
   3c518:	ldur	x8, [x29, #-112]
   3c51c:	add	x8, x8, #0x1
   3c520:	str	x8, [sp, #8]
   3c524:	b	3c530 <rpl_re_set_registers@@Base+0xf594>
   3c528:	mov	x8, xzr
   3c52c:	str	x8, [sp, #8]
   3c530:	ldr	x8, [sp, #8]
   3c534:	stur	x8, [x29, #-112]
   3c538:	b	3c2a0 <rpl_re_set_registers@@Base+0xf304>
   3c53c:	add	x8, sp, #0x58
   3c540:	ldr	x0, [x8, #16]
   3c544:	bl	a930 <free@plt>
   3c548:	ldur	x8, [x29, #-16]
   3c54c:	ldr	x8, [x8, #184]
   3c550:	ldur	x9, [x29, #-56]
   3c554:	mov	x10, #0x8                   	// #8
   3c558:	mul	x9, x10, x9
   3c55c:	add	x8, x8, x9
   3c560:	ldr	x8, [x8]
   3c564:	cbnz	x8, 3c574 <rpl_re_set_registers@@Base+0xf5d8>
   3c568:	mov	x8, xzr
   3c56c:	str	x8, [sp]
   3c570:	b	3c598 <rpl_re_set_registers@@Base+0xf5fc>
   3c574:	ldur	x8, [x29, #-16]
   3c578:	ldr	x8, [x8, #184]
   3c57c:	ldur	x9, [x29, #-56]
   3c580:	mov	x10, #0x8                   	// #8
   3c584:	mul	x9, x10, x9
   3c588:	add	x8, x8, x9
   3c58c:	ldr	x8, [x8]
   3c590:	add	x8, x8, #0x8
   3c594:	str	x8, [sp]
   3c598:	ldr	x8, [sp]
   3c59c:	str	x8, [sp, #112]
   3c5a0:	ldur	x8, [x29, #-104]
   3c5a4:	ldur	x9, [x29, #-24]
   3c5a8:	str	x8, [x9]
   3c5ac:	ldr	x8, [sp, #80]
   3c5b0:	ldur	x9, [x29, #-16]
   3c5b4:	str	x8, [x9, #184]
   3c5b8:	ldur	x8, [x29, #-96]
   3c5bc:	ldur	x9, [x29, #-16]
   3c5c0:	str	x8, [x9, #72]
   3c5c4:	ldr	x8, [sp, #112]
   3c5c8:	cbz	x8, 3c5e4 <rpl_re_set_registers@@Base+0xf648>
   3c5cc:	ldr	x0, [sp, #112]
   3c5d0:	ldur	x1, [x29, #-48]
   3c5d4:	bl	37288 <rpl_re_set_registers@@Base+0xa2ec>
   3c5d8:	cbz	x0, 3c5e4 <rpl_re_set_registers@@Base+0xf648>
   3c5dc:	stur	wzr, [x29, #-4]
   3c5e0:	b	3c5ec <rpl_re_set_registers@@Base+0xf650>
   3c5e4:	mov	w8, #0x1                   	// #1
   3c5e8:	stur	w8, [x29, #-4]
   3c5ec:	ldur	w0, [x29, #-4]
   3c5f0:	ldp	x29, x30, [sp, #240]
   3c5f4:	add	sp, sp, #0x100
   3c5f8:	ret
   3c5fc:	sub	sp, sp, #0x50
   3c600:	stp	x29, x30, [sp, #64]
   3c604:	add	x29, sp, #0x40
   3c608:	stur	x0, [x29, #-16]
   3c60c:	stur	x1, [x29, #-24]
   3c610:	str	x2, [sp, #32]
   3c614:	ldur	x8, [x29, #-16]
   3c618:	ldr	x8, [x8, #32]
   3c61c:	ldur	x9, [x29, #-16]
   3c620:	ldr	x9, [x9, #24]
   3c624:	cmp	x8, x9
   3c628:	cset	w10, eq  // eq = none
   3c62c:	and	w10, w10, #0x1
   3c630:	mov	w0, w10
   3c634:	sxtw	x8, w0
   3c638:	cbz	x8, 3c6b0 <rpl_re_set_registers@@Base+0xf714>
   3c63c:	ldur	x8, [x29, #-16]
   3c640:	ldr	x8, [x8, #24]
   3c644:	mov	x9, #0x2                   	// #2
   3c648:	mul	x8, x9, x8
   3c64c:	add	x8, x8, #0x1
   3c650:	str	x8, [sp, #16]
   3c654:	ldur	x8, [x29, #-16]
   3c658:	ldr	x0, [x8, #40]
   3c65c:	ldr	x8, [sp, #16]
   3c660:	mov	x9, #0x8                   	// #8
   3c664:	mul	x1, x8, x9
   3c668:	bl	af40 <realloc@plt>
   3c66c:	str	x0, [sp, #8]
   3c670:	ldr	x8, [sp, #8]
   3c674:	cmp	x8, #0x0
   3c678:	cset	w10, eq  // eq = none
   3c67c:	and	w10, w10, #0x1
   3c680:	mov	w0, w10
   3c684:	sxtw	x8, w0
   3c688:	cbz	x8, 3c698 <rpl_re_set_registers@@Base+0xf6fc>
   3c68c:	mov	x8, xzr
   3c690:	stur	x8, [x29, #-8]
   3c694:	b	3c730 <rpl_re_set_registers@@Base+0xf794>
   3c698:	ldr	x8, [sp, #8]
   3c69c:	ldur	x9, [x29, #-16]
   3c6a0:	str	x8, [x9, #40]
   3c6a4:	ldr	x8, [sp, #16]
   3c6a8:	ldur	x9, [x29, #-16]
   3c6ac:	str	x8, [x9, #24]
   3c6b0:	mov	x0, #0x1                   	// #1
   3c6b4:	mov	x1, #0x28                  	// #40
   3c6b8:	bl	b2e0 <calloc@plt>
   3c6bc:	str	x0, [sp, #24]
   3c6c0:	ldr	x8, [sp, #24]
   3c6c4:	cmp	x8, #0x0
   3c6c8:	cset	w9, ne  // ne = any
   3c6cc:	and	w9, w9, #0x1
   3c6d0:	mov	w0, w9
   3c6d4:	sxtw	x8, w0
   3c6d8:	cbz	x8, 3c728 <rpl_re_set_registers@@Base+0xf78c>
   3c6dc:	ldr	x8, [sp, #24]
   3c6e0:	ldur	x9, [x29, #-16]
   3c6e4:	ldr	x9, [x9, #40]
   3c6e8:	ldur	x10, [x29, #-16]
   3c6ec:	ldr	x10, [x10, #32]
   3c6f0:	mov	x11, #0x8                   	// #8
   3c6f4:	mul	x10, x11, x10
   3c6f8:	add	x9, x9, x10
   3c6fc:	str	x8, [x9]
   3c700:	ldur	x8, [x29, #-24]
   3c704:	ldr	x9, [sp, #24]
   3c708:	str	x8, [x9]
   3c70c:	ldr	x8, [sp, #32]
   3c710:	ldr	x9, [sp, #24]
   3c714:	str	x8, [x9, #8]
   3c718:	ldur	x8, [x29, #-16]
   3c71c:	ldr	x9, [x8, #32]
   3c720:	add	x9, x9, #0x1
   3c724:	str	x9, [x8, #32]
   3c728:	ldr	x8, [sp, #24]
   3c72c:	stur	x8, [x29, #-8]
   3c730:	ldur	x0, [x29, #-8]
   3c734:	ldp	x29, x30, [sp, #64]
   3c738:	add	sp, sp, #0x50
   3c73c:	ret
   3c740:	sub	sp, sp, #0x50
   3c744:	stp	x29, x30, [sp, #64]
   3c748:	add	x29, sp, #0x40
   3c74c:	stur	x0, [x29, #-16]
   3c750:	stur	x1, [x29, #-24]
   3c754:	str	x2, [sp, #32]
   3c758:	str	x3, [sp, #24]
   3c75c:	str	x4, [sp, #16]
   3c760:	ldur	x8, [x29, #-16]
   3c764:	ldr	x8, [x8, #200]
   3c768:	ldur	x9, [x29, #-16]
   3c76c:	ldr	x9, [x9, #208]
   3c770:	cmp	x8, x9
   3c774:	b.lt	3c82c <rpl_re_set_registers@@Base+0xf890>  // b.tstop
   3c778:	ldur	x8, [x29, #-16]
   3c77c:	ldr	x0, [x8, #216]
   3c780:	ldur	x8, [x29, #-16]
   3c784:	ldr	x8, [x8, #208]
   3c788:	mov	x9, #0x2                   	// #2
   3c78c:	mul	x8, x8, x9
   3c790:	mov	x9, #0x28                  	// #40
   3c794:	mul	x1, x8, x9
   3c798:	bl	af40 <realloc@plt>
   3c79c:	str	x0, [sp, #8]
   3c7a0:	ldr	x8, [sp, #8]
   3c7a4:	cmp	x8, #0x0
   3c7a8:	cset	w10, eq  // eq = none
   3c7ac:	and	w10, w10, #0x1
   3c7b0:	mov	w0, w10
   3c7b4:	sxtw	x8, w0
   3c7b8:	cbz	x8, 3c7d4 <rpl_re_set_registers@@Base+0xf838>
   3c7bc:	ldur	x8, [x29, #-16]
   3c7c0:	ldr	x0, [x8, #216]
   3c7c4:	bl	a930 <free@plt>
   3c7c8:	mov	w9, #0xc                   	// #12
   3c7cc:	stur	w9, [x29, #-4]
   3c7d0:	b	3c9a8 <rpl_re_set_registers@@Base+0xfa0c>
   3c7d4:	ldr	x8, [sp, #8]
   3c7d8:	ldur	x9, [x29, #-16]
   3c7dc:	str	x8, [x9, #216]
   3c7e0:	ldur	x8, [x29, #-16]
   3c7e4:	ldr	x8, [x8, #216]
   3c7e8:	ldur	x9, [x29, #-16]
   3c7ec:	ldr	x9, [x9, #200]
   3c7f0:	mov	x10, #0x28                  	// #40
   3c7f4:	mul	x9, x10, x9
   3c7f8:	add	x0, x8, x9
   3c7fc:	ldur	x8, [x29, #-16]
   3c800:	ldr	x8, [x8, #208]
   3c804:	mov	x9, #0x28                  	// #40
   3c808:	mul	x2, x9, x8
   3c80c:	mov	w11, wzr
   3c810:	mov	w1, w11
   3c814:	bl	a970 <memset@plt>
   3c818:	ldur	x8, [x29, #-16]
   3c81c:	ldr	x9, [x8, #208]
   3c820:	mov	x10, #0x2                   	// #2
   3c824:	mul	x9, x9, x10
   3c828:	str	x9, [x8, #208]
   3c82c:	ldur	x8, [x29, #-16]
   3c830:	ldr	x8, [x8, #200]
   3c834:	cmp	x8, #0x0
   3c838:	cset	w9, le
   3c83c:	tbnz	w9, #0, 3c898 <rpl_re_set_registers@@Base+0xf8fc>
   3c840:	ldur	x8, [x29, #-16]
   3c844:	ldr	x8, [x8, #216]
   3c848:	ldur	x9, [x29, #-16]
   3c84c:	ldr	x9, [x9, #200]
   3c850:	subs	x9, x9, #0x1
   3c854:	mov	x10, #0x28                  	// #40
   3c858:	mul	x9, x10, x9
   3c85c:	add	x8, x8, x9
   3c860:	ldr	x8, [x8, #8]
   3c864:	ldr	x9, [sp, #32]
   3c868:	cmp	x8, x9
   3c86c:	b.ne	3c898 <rpl_re_set_registers@@Base+0xf8fc>  // b.any
   3c870:	ldur	x8, [x29, #-16]
   3c874:	ldr	x8, [x8, #216]
   3c878:	ldur	x9, [x29, #-16]
   3c87c:	ldr	x9, [x9, #200]
   3c880:	subs	x9, x9, #0x1
   3c884:	mov	x10, #0x28                  	// #40
   3c888:	mul	x9, x10, x9
   3c88c:	add	x8, x8, x9
   3c890:	mov	w11, #0x1                   	// #1
   3c894:	strb	w11, [x8, #32]
   3c898:	ldur	x8, [x29, #-24]
   3c89c:	ldur	x9, [x29, #-16]
   3c8a0:	ldr	x9, [x9, #216]
   3c8a4:	ldur	x10, [x29, #-16]
   3c8a8:	ldr	x10, [x10, #200]
   3c8ac:	mov	x11, #0x28                  	// #40
   3c8b0:	mul	x10, x11, x10
   3c8b4:	str	x8, [x9, x10]
   3c8b8:	ldr	x8, [sp, #32]
   3c8bc:	ldur	x9, [x29, #-16]
   3c8c0:	ldr	x9, [x9, #216]
   3c8c4:	ldur	x10, [x29, #-16]
   3c8c8:	ldr	x10, [x10, #200]
   3c8cc:	mul	x10, x11, x10
   3c8d0:	add	x9, x9, x10
   3c8d4:	str	x8, [x9, #8]
   3c8d8:	ldr	x8, [sp, #24]
   3c8dc:	ldur	x9, [x29, #-16]
   3c8e0:	ldr	x9, [x9, #216]
   3c8e4:	ldur	x10, [x29, #-16]
   3c8e8:	ldr	x10, [x10, #200]
   3c8ec:	mul	x10, x11, x10
   3c8f0:	add	x9, x9, x10
   3c8f4:	str	x8, [x9, #16]
   3c8f8:	ldr	x8, [sp, #16]
   3c8fc:	ldur	x9, [x29, #-16]
   3c900:	ldr	x9, [x9, #216]
   3c904:	ldur	x10, [x29, #-16]
   3c908:	ldr	x10, [x10, #200]
   3c90c:	mul	x10, x11, x10
   3c910:	add	x9, x9, x10
   3c914:	str	x8, [x9, #24]
   3c918:	ldr	x8, [sp, #24]
   3c91c:	ldr	x9, [sp, #16]
   3c920:	mov	w12, wzr
   3c924:	mov	w13, #0xffffffff            	// #-1
   3c928:	cmp	x8, x9
   3c92c:	csel	w12, w13, w12, eq  // eq = none
   3c930:	ldur	x8, [x29, #-16]
   3c934:	ldr	x8, [x8, #216]
   3c938:	ldur	x9, [x29, #-16]
   3c93c:	ldr	x9, [x9, #200]
   3c940:	mul	x9, x11, x9
   3c944:	add	x8, x8, x9
   3c948:	strh	w12, [x8, #34]
   3c94c:	ldur	x8, [x29, #-16]
   3c950:	ldr	x8, [x8, #216]
   3c954:	ldur	x9, [x29, #-16]
   3c958:	ldr	x10, [x9, #200]
   3c95c:	add	x14, x10, #0x1
   3c960:	str	x14, [x9, #200]
   3c964:	mul	x9, x11, x10
   3c968:	add	x8, x8, x9
   3c96c:	mov	w12, #0x0                   	// #0
   3c970:	strb	w12, [x8, #32]
   3c974:	ldur	x8, [x29, #-16]
   3c978:	ldrsw	x8, [x8, #224]
   3c97c:	ldr	x9, [sp, #16]
   3c980:	ldr	x10, [sp, #24]
   3c984:	subs	x9, x9, x10
   3c988:	cmp	x8, x9
   3c98c:	b.ge	3c9a4 <rpl_re_set_registers@@Base+0xfa08>  // b.tcont
   3c990:	ldr	x8, [sp, #16]
   3c994:	ldr	x9, [sp, #24]
   3c998:	subs	x8, x8, x9
   3c99c:	ldur	x9, [x29, #-16]
   3c9a0:	str	w8, [x9, #224]
   3c9a4:	stur	wzr, [x29, #-4]
   3c9a8:	ldur	w0, [x29, #-4]
   3c9ac:	ldp	x29, x30, [sp, #64]
   3c9b0:	add	sp, sp, #0x50
   3c9b4:	ret
   3c9b8:	sub	sp, sp, #0x70
   3c9bc:	stp	x29, x30, [sp, #96]
   3c9c0:	add	x29, sp, #0x60
   3c9c4:	add	x8, sp, #0x10
   3c9c8:	stur	x0, [x29, #-16]
   3c9cc:	stur	x1, [x29, #-24]
   3c9d0:	stur	x2, [x29, #-32]
   3c9d4:	stur	w3, [x29, #-36]
   3c9d8:	ldur	x9, [x29, #-24]
   3c9dc:	ldr	x1, [x9, #8]
   3c9e0:	mov	x0, x8
   3c9e4:	bl	36240 <rpl_re_set_registers@@Base+0x92a4>
   3c9e8:	stur	w0, [x29, #-40]
   3c9ec:	ldur	w10, [x29, #-40]
   3c9f0:	cmp	w10, #0x0
   3c9f4:	cset	w10, ne  // ne = any
   3c9f8:	and	w10, w10, #0x1
   3c9fc:	mov	w1, w10
   3ca00:	sxtw	x8, w1
   3ca04:	cbz	x8, 3ca14 <rpl_re_set_registers@@Base+0xfa78>
   3ca08:	ldur	w8, [x29, #-40]
   3ca0c:	stur	w8, [x29, #-4]
   3ca10:	b	3cb50 <rpl_re_set_registers@@Base+0xfbb4>
   3ca14:	str	xzr, [sp, #48]
   3ca18:	ldr	x8, [sp, #48]
   3ca1c:	ldur	x9, [x29, #-24]
   3ca20:	ldr	x9, [x9, #8]
   3ca24:	cmp	x8, x9
   3ca28:	b.ge	3cb2c <rpl_re_set_registers@@Base+0xfb90>  // b.tcont
   3ca2c:	ldur	x8, [x29, #-24]
   3ca30:	ldr	x8, [x8, #16]
   3ca34:	ldr	x9, [sp, #48]
   3ca38:	ldr	x8, [x8, x9, lsl #3]
   3ca3c:	str	x8, [sp, #8]
   3ca40:	ldur	x8, [x29, #-16]
   3ca44:	ldr	x8, [x8, #48]
   3ca48:	ldr	x9, [sp, #8]
   3ca4c:	mov	x10, #0x18                  	// #24
   3ca50:	mul	x9, x10, x9
   3ca54:	add	x8, x8, x9
   3ca58:	str	x8, [sp]
   3ca5c:	ldur	x0, [x29, #-16]
   3ca60:	ldr	x1, [sp]
   3ca64:	ldur	x2, [x29, #-32]
   3ca68:	ldur	w3, [x29, #-36]
   3ca6c:	bl	3bd78 <rpl_re_set_registers@@Base+0xeddc>
   3ca70:	str	x0, [sp, #40]
   3ca74:	ldr	x8, [sp, #40]
   3ca78:	mov	x9, #0xffffffffffffffff    	// #-1
   3ca7c:	cmp	x8, x9
   3ca80:	b.ne	3cacc <rpl_re_set_registers@@Base+0xfb30>  // b.any
   3ca84:	ldr	x1, [sp]
   3ca88:	add	x0, sp, #0x10
   3ca8c:	bl	36848 <rpl_re_set_registers@@Base+0x98ac>
   3ca90:	stur	w0, [x29, #-40]
   3ca94:	ldur	w8, [x29, #-40]
   3ca98:	cmp	w8, #0x0
   3ca9c:	cset	w8, ne  // ne = any
   3caa0:	and	w8, w8, #0x1
   3caa4:	mov	w1, w8
   3caa8:	sxtw	x9, w1
   3caac:	cbz	x9, 3cac8 <rpl_re_set_registers@@Base+0xfb2c>
   3cab0:	add	x8, sp, #0x10
   3cab4:	ldr	x0, [x8, #16]
   3cab8:	bl	a930 <free@plt>
   3cabc:	ldur	w9, [x29, #-40]
   3cac0:	stur	w9, [x29, #-4]
   3cac4:	b	3cb50 <rpl_re_set_registers@@Base+0xfbb4>
   3cac8:	b	3cb1c <rpl_re_set_registers@@Base+0xfb80>
   3cacc:	ldur	x0, [x29, #-16]
   3cad0:	ldr	x2, [sp, #8]
   3cad4:	ldur	x3, [x29, #-32]
   3cad8:	ldur	w4, [x29, #-36]
   3cadc:	add	x1, sp, #0x10
   3cae0:	bl	3d278 <rpl_re_set_registers@@Base+0x102dc>
   3cae4:	stur	w0, [x29, #-40]
   3cae8:	ldur	w8, [x29, #-40]
   3caec:	cmp	w8, #0x0
   3caf0:	cset	w8, ne  // ne = any
   3caf4:	and	w8, w8, #0x1
   3caf8:	mov	w1, w8
   3cafc:	sxtw	x9, w1
   3cb00:	cbz	x9, 3cb1c <rpl_re_set_registers@@Base+0xfb80>
   3cb04:	add	x8, sp, #0x10
   3cb08:	ldr	x0, [x8, #16]
   3cb0c:	bl	a930 <free@plt>
   3cb10:	ldur	w9, [x29, #-40]
   3cb14:	stur	w9, [x29, #-4]
   3cb18:	b	3cb50 <rpl_re_set_registers@@Base+0xfbb4>
   3cb1c:	ldr	x8, [sp, #48]
   3cb20:	add	x8, x8, #0x1
   3cb24:	str	x8, [sp, #48]
   3cb28:	b	3ca18 <rpl_re_set_registers@@Base+0xfa7c>
   3cb2c:	ldur	x8, [x29, #-24]
   3cb30:	ldr	x0, [x8, #16]
   3cb34:	bl	a930 <free@plt>
   3cb38:	ldur	x8, [x29, #-24]
   3cb3c:	ldr	q0, [sp, #16]
   3cb40:	str	q0, [x8]
   3cb44:	ldr	x9, [sp, #32]
   3cb48:	str	x9, [x8, #16]
   3cb4c:	stur	wzr, [x29, #-4]
   3cb50:	ldur	w0, [x29, #-4]
   3cb54:	ldp	x29, x30, [sp, #96]
   3cb58:	add	sp, sp, #0x70
   3cb5c:	ret
   3cb60:	sub	sp, sp, #0x100
   3cb64:	stp	x29, x30, [sp, #240]
   3cb68:	add	x29, sp, #0xf0
   3cb6c:	sub	x8, x29, #0x18
   3cb70:	mov	x9, #0xffffffffffffffff    	// #-1
   3cb74:	str	x0, [x8, #8]
   3cb78:	str	x1, [x8]
   3cb7c:	stur	x2, [x29, #-32]
   3cb80:	stur	x3, [x29, #-40]
   3cb84:	stur	w4, [x29, #-44]
   3cb88:	ldr	x10, [x8, #8]
   3cb8c:	ldr	x10, [x10, #152]
   3cb90:	stur	x10, [x29, #-56]
   3cb94:	ldr	x0, [x8, #8]
   3cb98:	ldur	x1, [x29, #-32]
   3cb9c:	str	x8, [sp, #72]
   3cba0:	str	x9, [sp, #64]
   3cba4:	bl	3ba80 <rpl_re_set_registers@@Base+0xeae4>
   3cba8:	stur	x0, [x29, #-72]
   3cbac:	ldur	x8, [x29, #-72]
   3cbb0:	ldr	x9, [sp, #64]
   3cbb4:	cmp	x8, x9
   3cbb8:	b.ne	3cbc8 <rpl_re_set_registers@@Base+0xfc2c>  // b.any
   3cbbc:	ldr	x8, [sp, #72]
   3cbc0:	str	wzr, [x8, #20]
   3cbc4:	b	3cf8c <rpl_re_set_registers@@Base+0xfff0>
   3cbc8:	ldr	x8, [sp, #72]
   3cbcc:	ldr	x9, [x8, #8]
   3cbd0:	ldr	x9, [x9, #216]
   3cbd4:	ldur	x10, [x29, #-72]
   3cbd8:	mov	x11, #0x28                  	// #40
   3cbdc:	mul	x10, x11, x10
   3cbe0:	add	x9, x9, x10
   3cbe4:	stur	x9, [x29, #-80]
   3cbe8:	ldr	x8, [sp, #72]
   3cbec:	ldr	x0, [x8]
   3cbf0:	ldur	x9, [x29, #-80]
   3cbf4:	ldr	x1, [x9]
   3cbf8:	bl	37288 <rpl_re_set_registers@@Base+0xa2ec>
   3cbfc:	cbnz	x0, 3cc04 <rpl_re_set_registers@@Base+0xfc68>
   3cc00:	b	3cf70 <rpl_re_set_registers@@Base+0xffd4>
   3cc04:	ldur	x8, [x29, #-32]
   3cc08:	ldur	x9, [x29, #-80]
   3cc0c:	ldr	x9, [x9, #24]
   3cc10:	add	x8, x8, x9
   3cc14:	ldur	x9, [x29, #-80]
   3cc18:	ldr	x9, [x9, #16]
   3cc1c:	subs	x8, x8, x9
   3cc20:	stur	x8, [x29, #-88]
   3cc24:	ldur	x8, [x29, #-88]
   3cc28:	ldur	x9, [x29, #-32]
   3cc2c:	cmp	x8, x9
   3cc30:	b.ne	3cd5c <rpl_re_set_registers@@Base+0xfdc0>  // b.any
   3cc34:	ldur	x8, [x29, #-56]
   3cc38:	ldr	x8, [x8, #40]
   3cc3c:	ldur	x9, [x29, #-80]
   3cc40:	ldr	x9, [x9]
   3cc44:	mov	x10, #0x18                  	// #24
   3cc48:	mul	x9, x10, x9
   3cc4c:	add	x8, x8, x9
   3cc50:	ldr	x8, [x8, #16]
   3cc54:	ldr	x8, [x8]
   3cc58:	stur	x8, [x29, #-96]
   3cc5c:	ldr	x8, [sp, #72]
   3cc60:	ldr	x0, [x8]
   3cc64:	ldur	x1, [x29, #-96]
   3cc68:	bl	37288 <rpl_re_set_registers@@Base+0xa2ec>
   3cc6c:	cbz	x0, 3cc74 <rpl_re_set_registers@@Base+0xfcd8>
   3cc70:	b	3cf70 <rpl_re_set_registers@@Base+0xffd4>
   3cc74:	ldur	x1, [x29, #-96]
   3cc78:	add	x8, sp, #0x78
   3cc7c:	mov	x0, x8
   3cc80:	str	x8, [sp, #56]
   3cc84:	bl	35d90 <rpl_re_set_registers@@Base+0x8df4>
   3cc88:	stur	w0, [x29, #-60]
   3cc8c:	ldur	x0, [x29, #-56]
   3cc90:	ldur	x2, [x29, #-40]
   3cc94:	ldur	w3, [x29, #-44]
   3cc98:	ldr	x1, [sp, #56]
   3cc9c:	bl	3c9b8 <rpl_re_set_registers@@Base+0xfa1c>
   3cca0:	str	w0, [sp, #116]
   3cca4:	ldr	x8, [sp, #72]
   3cca8:	ldr	x0, [x8]
   3ccac:	ldr	x1, [sp, #56]
   3ccb0:	bl	36848 <rpl_re_set_registers@@Base+0x98ac>
   3ccb4:	str	w0, [sp, #112]
   3ccb8:	ldr	x8, [sp, #56]
   3ccbc:	ldr	x0, [x8, #16]
   3ccc0:	bl	a930 <free@plt>
   3ccc4:	ldur	w9, [x29, #-60]
   3ccc8:	mov	w10, #0x1                   	// #1
   3cccc:	str	w10, [sp, #52]
   3ccd0:	cbnz	w9, 3ccf4 <rpl_re_set_registers@@Base+0xfd58>
   3ccd4:	ldr	w8, [sp, #116]
   3ccd8:	mov	w9, #0x1                   	// #1
   3ccdc:	str	w9, [sp, #52]
   3cce0:	cbnz	w8, 3ccf4 <rpl_re_set_registers@@Base+0xfd58>
   3cce4:	ldr	w8, [sp, #112]
   3cce8:	cmp	w8, #0x0
   3ccec:	cset	w8, ne  // ne = any
   3ccf0:	str	w8, [sp, #52]
   3ccf4:	ldr	w8, [sp, #52]
   3ccf8:	and	w8, w8, #0x1
   3ccfc:	mov	w0, w8
   3cd00:	sxtw	x9, w0
   3cd04:	cbz	x9, 3cd58 <rpl_re_set_registers@@Base+0xfdbc>
   3cd08:	ldur	w8, [x29, #-60]
   3cd0c:	cbz	w8, 3cd1c <rpl_re_set_registers@@Base+0xfd80>
   3cd10:	ldur	w8, [x29, #-60]
   3cd14:	str	w8, [sp, #48]
   3cd18:	b	3cd40 <rpl_re_set_registers@@Base+0xfda4>
   3cd1c:	ldr	w8, [sp, #116]
   3cd20:	cbz	w8, 3cd30 <rpl_re_set_registers@@Base+0xfd94>
   3cd24:	ldr	w8, [sp, #116]
   3cd28:	str	w8, [sp, #44]
   3cd2c:	b	3cd38 <rpl_re_set_registers@@Base+0xfd9c>
   3cd30:	ldr	w8, [sp, #112]
   3cd34:	str	w8, [sp, #44]
   3cd38:	ldr	w8, [sp, #44]
   3cd3c:	str	w8, [sp, #48]
   3cd40:	ldr	w8, [sp, #48]
   3cd44:	stur	w8, [x29, #-60]
   3cd48:	ldur	w8, [x29, #-60]
   3cd4c:	ldr	x9, [sp, #72]
   3cd50:	str	w8, [x9, #20]
   3cd54:	b	3cf8c <rpl_re_set_registers@@Base+0xfff0>
   3cd58:	b	3cbc8 <rpl_re_set_registers@@Base+0xfc2c>
   3cd5c:	ldur	x8, [x29, #-56]
   3cd60:	ldr	x8, [x8, #24]
   3cd64:	ldur	x9, [x29, #-80]
   3cd68:	ldr	x9, [x9]
   3cd6c:	mov	x10, #0x8                   	// #8
   3cd70:	ldr	x8, [x8, x9, lsl #3]
   3cd74:	stur	x8, [x29, #-96]
   3cd78:	ldr	x8, [sp, #72]
   3cd7c:	ldr	x9, [x8, #8]
   3cd80:	ldr	x9, [x9, #184]
   3cd84:	ldur	x11, [x29, #-88]
   3cd88:	mul	x10, x10, x11
   3cd8c:	add	x9, x9, x10
   3cd90:	ldr	x9, [x9]
   3cd94:	cbz	x9, 3ce8c <rpl_re_set_registers@@Base+0xfef0>
   3cd98:	ldr	x8, [sp, #72]
   3cd9c:	ldr	x9, [x8, #8]
   3cda0:	ldr	x9, [x9, #184]
   3cda4:	ldur	x10, [x29, #-88]
   3cda8:	mov	x11, #0x8                   	// #8
   3cdac:	mul	x10, x11, x10
   3cdb0:	add	x9, x9, x10
   3cdb4:	ldr	x9, [x9]
   3cdb8:	add	x0, x9, #0x8
   3cdbc:	ldur	x1, [x29, #-96]
   3cdc0:	bl	37288 <rpl_re_set_registers@@Base+0xa2ec>
   3cdc4:	cbz	x0, 3cdcc <rpl_re_set_registers@@Base+0xfe30>
   3cdc8:	b	3cf70 <rpl_re_set_registers@@Base+0xffd4>
   3cdcc:	ldr	x8, [sp, #72]
   3cdd0:	ldr	x9, [x8, #8]
   3cdd4:	ldr	x9, [x9, #184]
   3cdd8:	ldur	x10, [x29, #-88]
   3cddc:	mov	x11, #0x8                   	// #8
   3cde0:	mul	x10, x11, x10
   3cde4:	add	x9, x9, x10
   3cde8:	ldr	x9, [x9]
   3cdec:	add	x1, x9, #0x8
   3cdf0:	add	x9, sp, #0x58
   3cdf4:	mov	x0, x9
   3cdf8:	str	x9, [sp, #32]
   3cdfc:	bl	3719c <rpl_re_set_registers@@Base+0xa200>
   3ce00:	stur	w0, [x29, #-60]
   3ce04:	ldur	x1, [x29, #-96]
   3ce08:	ldr	x0, [sp, #32]
   3ce0c:	bl	36c60 <rpl_re_set_registers@@Base+0x9cc4>
   3ce10:	and	w12, w0, #0x1
   3ce14:	strb	w12, [sp, #87]
   3ce18:	ldur	w12, [x29, #-60]
   3ce1c:	mov	w13, #0x1                   	// #1
   3ce20:	str	w13, [sp, #28]
   3ce24:	cbnz	w12, 3ce34 <rpl_re_set_registers@@Base+0xfe98>
   3ce28:	ldrb	w8, [sp, #87]
   3ce2c:	eor	w8, w8, #0x1
   3ce30:	str	w8, [sp, #28]
   3ce34:	ldr	w8, [sp, #28]
   3ce38:	and	w8, w8, #0x1
   3ce3c:	mov	w0, w8
   3ce40:	sxtw	x9, w0
   3ce44:	cbz	x9, 3ce88 <rpl_re_set_registers@@Base+0xfeec>
   3ce48:	add	x8, sp, #0x58
   3ce4c:	ldr	x0, [x8, #16]
   3ce50:	bl	a930 <free@plt>
   3ce54:	ldur	w9, [x29, #-60]
   3ce58:	cbz	w9, 3ce68 <rpl_re_set_registers@@Base+0xfecc>
   3ce5c:	ldur	w8, [x29, #-60]
   3ce60:	str	w8, [sp, #24]
   3ce64:	b	3ce70 <rpl_re_set_registers@@Base+0xfed4>
   3ce68:	mov	w8, #0xc                   	// #12
   3ce6c:	str	w8, [sp, #24]
   3ce70:	ldr	w8, [sp, #24]
   3ce74:	stur	w8, [x29, #-60]
   3ce78:	ldur	w8, [x29, #-60]
   3ce7c:	ldr	x9, [sp, #72]
   3ce80:	str	w8, [x9, #20]
   3ce84:	b	3cf8c <rpl_re_set_registers@@Base+0xfff0>
   3ce88:	b	3cec8 <rpl_re_set_registers@@Base+0xff2c>
   3ce8c:	ldur	x1, [x29, #-96]
   3ce90:	add	x0, sp, #0x58
   3ce94:	bl	35d90 <rpl_re_set_registers@@Base+0x8df4>
   3ce98:	stur	w0, [x29, #-60]
   3ce9c:	ldur	w8, [x29, #-60]
   3cea0:	cmp	w8, #0x0
   3cea4:	cset	w8, ne  // ne = any
   3cea8:	and	w8, w8, #0x1
   3ceac:	mov	w1, w8
   3ceb0:	sxtw	x9, w1
   3ceb4:	cbz	x9, 3cec8 <rpl_re_set_registers@@Base+0xff2c>
   3ceb8:	ldur	w8, [x29, #-60]
   3cebc:	ldr	x9, [sp, #72]
   3cec0:	str	w8, [x9, #20]
   3cec4:	b	3cf8c <rpl_re_set_registers@@Base+0xfff0>
   3cec8:	ldur	x1, [x29, #-56]
   3cecc:	sub	x0, x29, #0x3c
   3ced0:	add	x8, sp, #0x58
   3ced4:	mov	x2, x8
   3ced8:	str	x8, [sp, #16]
   3cedc:	bl	3d47c <rpl_re_set_registers@@Base+0x104e0>
   3cee0:	ldr	x8, [sp, #72]
   3cee4:	ldr	x9, [x8, #8]
   3cee8:	ldr	x9, [x9, #184]
   3ceec:	ldur	x10, [x29, #-88]
   3cef0:	mov	x11, #0x8                   	// #8
   3cef4:	mul	x10, x11, x10
   3cef8:	add	x9, x9, x10
   3cefc:	str	x0, [x9]
   3cf00:	ldr	x9, [sp, #16]
   3cf04:	ldr	x0, [x9, #16]
   3cf08:	str	x11, [sp, #8]
   3cf0c:	bl	a930 <free@plt>
   3cf10:	ldr	x8, [sp, #72]
   3cf14:	ldr	x9, [x8, #8]
   3cf18:	ldr	x9, [x9, #184]
   3cf1c:	ldur	x10, [x29, #-88]
   3cf20:	ldr	x11, [sp, #8]
   3cf24:	mul	x10, x11, x10
   3cf28:	add	x9, x9, x10
   3cf2c:	ldr	x9, [x9]
   3cf30:	mov	w12, #0x0                   	// #0
   3cf34:	str	w12, [sp, #4]
   3cf38:	cbnz	x9, 3cf4c <rpl_re_set_registers@@Base+0xffb0>
   3cf3c:	ldur	w8, [x29, #-60]
   3cf40:	cmp	w8, #0x0
   3cf44:	cset	w8, ne  // ne = any
   3cf48:	str	w8, [sp, #4]
   3cf4c:	ldr	w8, [sp, #4]
   3cf50:	and	w8, w8, #0x1
   3cf54:	mov	w0, w8
   3cf58:	sxtw	x9, w0
   3cf5c:	cbz	x9, 3cf70 <rpl_re_set_registers@@Base+0xffd4>
   3cf60:	ldur	w8, [x29, #-60]
   3cf64:	ldr	x9, [sp, #72]
   3cf68:	str	w8, [x9, #20]
   3cf6c:	b	3cf8c <rpl_re_set_registers@@Base+0xfff0>
   3cf70:	ldur	x8, [x29, #-80]
   3cf74:	add	x9, x8, #0x28
   3cf78:	stur	x9, [x29, #-80]
   3cf7c:	ldrb	w10, [x8, #32]
   3cf80:	cbnz	w10, 3cbe8 <rpl_re_set_registers@@Base+0xfc4c>
   3cf84:	ldr	x8, [sp, #72]
   3cf88:	str	wzr, [x8, #20]
   3cf8c:	ldr	x8, [sp, #72]
   3cf90:	ldr	w0, [x8, #20]
   3cf94:	ldp	x29, x30, [sp, #240]
   3cf98:	add	sp, sp, #0x100
   3cf9c:	ret
   3cfa0:	sub	sp, sp, #0xa0
   3cfa4:	stp	x29, x30, [sp, #144]
   3cfa8:	add	x29, sp, #0x90
   3cfac:	stur	x0, [x29, #-16]
   3cfb0:	stur	x1, [x29, #-24]
   3cfb4:	stur	x2, [x29, #-32]
   3cfb8:	stur	x3, [x29, #-40]
   3cfbc:	ldur	x8, [x29, #-16]
   3cfc0:	ldr	x8, [x8, #152]
   3cfc4:	stur	x8, [x29, #-48]
   3cfc8:	stur	wzr, [x29, #-68]
   3cfcc:	str	xzr, [sp, #48]
   3cfd0:	str	xzr, [sp, #56]
   3cfd4:	str	xzr, [sp, #64]
   3cfd8:	stur	xzr, [x29, #-64]
   3cfdc:	ldur	x8, [x29, #-64]
   3cfe0:	ldur	x9, [x29, #-32]
   3cfe4:	ldr	x9, [x9, #8]
   3cfe8:	cmp	x8, x9
   3cfec:	b.ge	3d258 <rpl_re_set_registers@@Base+0x102bc>  // b.tcont
   3cff0:	str	wzr, [sp, #44]
   3cff4:	ldur	x8, [x29, #-32]
   3cff8:	mov	x9, #0x10                  	// #16
   3cffc:	ldr	x8, [x8, #16]
   3d000:	ldur	x10, [x29, #-64]
   3d004:	ldr	x8, [x8, x10, lsl #3]
   3d008:	str	x8, [sp, #32]
   3d00c:	ldur	x8, [x29, #-48]
   3d010:	ldr	x8, [x8]
   3d014:	ldr	x10, [sp, #32]
   3d018:	mul	x9, x9, x10
   3d01c:	add	x8, x8, x9
   3d020:	ldr	w11, [x8, #8]
   3d024:	lsr	w11, w11, #20
   3d028:	and	w11, w11, #0x1
   3d02c:	cbz	w11, 3d1c0 <rpl_re_set_registers@@Base+0x10224>
   3d030:	ldur	x0, [x29, #-48]
   3d034:	ldr	x1, [sp, #32]
   3d038:	ldur	x2, [x29, #-16]
   3d03c:	ldur	x3, [x29, #-24]
   3d040:	bl	3d830 <rpl_re_set_registers@@Base+0x10894>
   3d044:	str	w0, [sp, #44]
   3d048:	ldr	w8, [sp, #44]
   3d04c:	cmp	w8, #0x1
   3d050:	b.le	3d1c0 <rpl_re_set_registers@@Base+0x10224>
   3d054:	ldur	x8, [x29, #-48]
   3d058:	ldr	x8, [x8, #24]
   3d05c:	ldr	x9, [sp, #32]
   3d060:	mov	x10, #0x8                   	// #8
   3d064:	ldr	x8, [x8, x9, lsl #3]
   3d068:	str	x8, [sp, #16]
   3d06c:	ldur	x8, [x29, #-24]
   3d070:	ldrsw	x9, [sp, #44]
   3d074:	add	x8, x8, x9
   3d078:	str	x8, [sp, #8]
   3d07c:	ldur	x8, [x29, #-16]
   3d080:	ldr	x8, [x8, #184]
   3d084:	ldr	x9, [sp, #8]
   3d088:	mul	x9, x10, x9
   3d08c:	add	x8, x8, x9
   3d090:	ldr	x8, [x8]
   3d094:	str	x8, [sp, #24]
   3d098:	str	xzr, [sp, #56]
   3d09c:	ldr	x8, [sp, #24]
   3d0a0:	cbz	x8, 3d0ec <rpl_re_set_registers@@Base+0x10150>
   3d0a4:	ldr	x8, [sp, #24]
   3d0a8:	add	x1, x8, #0x8
   3d0ac:	add	x0, sp, #0x30
   3d0b0:	bl	36848 <rpl_re_set_registers@@Base+0x98ac>
   3d0b4:	stur	w0, [x29, #-68]
   3d0b8:	ldur	w9, [x29, #-68]
   3d0bc:	cmp	w9, #0x0
   3d0c0:	cset	w9, ne  // ne = any
   3d0c4:	and	w9, w9, #0x1
   3d0c8:	mov	w1, w9
   3d0cc:	sxtw	x8, w1
   3d0d0:	cbz	x8, 3d0ec <rpl_re_set_registers@@Base+0x10150>
   3d0d4:	add	x8, sp, #0x30
   3d0d8:	ldr	x0, [x8, #16]
   3d0dc:	bl	a930 <free@plt>
   3d0e0:	ldur	w9, [x29, #-68]
   3d0e4:	stur	w9, [x29, #-4]
   3d0e8:	b	3d268 <rpl_re_set_registers@@Base+0x102cc>
   3d0ec:	ldr	x1, [sp, #16]
   3d0f0:	add	x0, sp, #0x30
   3d0f4:	bl	36c60 <rpl_re_set_registers@@Base+0x9cc4>
   3d0f8:	mov	w8, #0x1                   	// #1
   3d0fc:	and	w8, w0, w8
   3d100:	sturb	w8, [x29, #-49]
   3d104:	ldurb	w8, [x29, #-49]
   3d108:	eor	w8, w8, #0x1
   3d10c:	and	w8, w8, #0x1
   3d110:	mov	w1, w8
   3d114:	sxtw	x9, w1
   3d118:	cbz	x9, 3d134 <rpl_re_set_registers@@Base+0x10198>
   3d11c:	add	x8, sp, #0x30
   3d120:	ldr	x0, [x8, #16]
   3d124:	bl	a930 <free@plt>
   3d128:	mov	w9, #0xc                   	// #12
   3d12c:	stur	w9, [x29, #-4]
   3d130:	b	3d268 <rpl_re_set_registers@@Base+0x102cc>
   3d134:	ldur	x1, [x29, #-48]
   3d138:	sub	x0, x29, #0x44
   3d13c:	add	x2, sp, #0x30
   3d140:	bl	3d47c <rpl_re_set_registers@@Base+0x104e0>
   3d144:	ldur	x8, [x29, #-16]
   3d148:	ldr	x8, [x8, #184]
   3d14c:	ldr	x9, [sp, #8]
   3d150:	mov	x10, #0x8                   	// #8
   3d154:	mul	x9, x10, x9
   3d158:	add	x8, x8, x9
   3d15c:	str	x0, [x8]
   3d160:	ldur	x8, [x29, #-16]
   3d164:	ldr	x8, [x8, #184]
   3d168:	ldr	x9, [sp, #8]
   3d16c:	mul	x9, x10, x9
   3d170:	add	x8, x8, x9
   3d174:	ldr	x8, [x8]
   3d178:	mov	w11, #0x0                   	// #0
   3d17c:	str	w11, [sp, #4]
   3d180:	cbnz	x8, 3d194 <rpl_re_set_registers@@Base+0x101f8>
   3d184:	ldur	w8, [x29, #-68]
   3d188:	cmp	w8, #0x0
   3d18c:	cset	w8, ne  // ne = any
   3d190:	str	w8, [sp, #4]
   3d194:	ldr	w8, [sp, #4]
   3d198:	and	w8, w8, #0x1
   3d19c:	mov	w0, w8
   3d1a0:	sxtw	x9, w0
   3d1a4:	cbz	x9, 3d1c0 <rpl_re_set_registers@@Base+0x10224>
   3d1a8:	add	x8, sp, #0x30
   3d1ac:	ldr	x0, [x8, #16]
   3d1b0:	bl	a930 <free@plt>
   3d1b4:	ldur	w9, [x29, #-68]
   3d1b8:	stur	w9, [x29, #-4]
   3d1bc:	b	3d268 <rpl_re_set_registers@@Base+0x102cc>
   3d1c0:	ldr	w8, [sp, #44]
   3d1c4:	cbnz	w8, 3d1f4 <rpl_re_set_registers@@Base+0x10258>
   3d1c8:	ldur	x0, [x29, #-16]
   3d1cc:	ldur	x8, [x29, #-48]
   3d1d0:	ldr	x8, [x8]
   3d1d4:	ldr	x9, [sp, #32]
   3d1d8:	mov	x10, #0x10                  	// #16
   3d1dc:	mul	x9, x10, x9
   3d1e0:	add	x1, x8, x9
   3d1e4:	ldur	x2, [x29, #-24]
   3d1e8:	bl	3dd9c <rpl_re_set_registers@@Base+0x10e00>
   3d1ec:	tbnz	w0, #0, 3d1f4 <rpl_re_set_registers@@Base+0x10258>
   3d1f0:	b	3d248 <rpl_re_set_registers@@Base+0x102ac>
   3d1f4:	ldur	x0, [x29, #-40]
   3d1f8:	ldur	x8, [x29, #-48]
   3d1fc:	ldr	x8, [x8, #24]
   3d200:	ldr	x9, [sp, #32]
   3d204:	ldr	x1, [x8, x9, lsl #3]
   3d208:	bl	36c60 <rpl_re_set_registers@@Base+0x9cc4>
   3d20c:	mov	w10, #0x1                   	// #1
   3d210:	and	w10, w0, w10
   3d214:	sturb	w10, [x29, #-49]
   3d218:	ldurb	w10, [x29, #-49]
   3d21c:	eor	w10, w10, #0x1
   3d220:	and	w10, w10, #0x1
   3d224:	mov	w1, w10
   3d228:	sxtw	x8, w1
   3d22c:	cbz	x8, 3d248 <rpl_re_set_registers@@Base+0x102ac>
   3d230:	add	x8, sp, #0x30
   3d234:	ldr	x0, [x8, #16]
   3d238:	bl	a930 <free@plt>
   3d23c:	mov	w9, #0xc                   	// #12
   3d240:	stur	w9, [x29, #-4]
   3d244:	b	3d268 <rpl_re_set_registers@@Base+0x102cc>
   3d248:	ldur	x8, [x29, #-64]
   3d24c:	add	x8, x8, #0x1
   3d250:	stur	x8, [x29, #-64]
   3d254:	b	3cfdc <rpl_re_set_registers@@Base+0x10040>
   3d258:	add	x8, sp, #0x30
   3d25c:	ldr	x0, [x8, #16]
   3d260:	bl	a930 <free@plt>
   3d264:	stur	wzr, [x29, #-4]
   3d268:	ldur	w0, [x29, #-4]
   3d26c:	ldp	x29, x30, [sp, #144]
   3d270:	add	sp, sp, #0xa0
   3d274:	ret
   3d278:	sub	sp, sp, #0x50
   3d27c:	stp	x29, x30, [sp, #64]
   3d280:	add	x29, sp, #0x40
   3d284:	stur	x0, [x29, #-16]
   3d288:	stur	x1, [x29, #-24]
   3d28c:	str	x2, [sp, #32]
   3d290:	str	x3, [sp, #24]
   3d294:	str	w4, [sp, #20]
   3d298:	ldr	x8, [sp, #32]
   3d29c:	str	x8, [sp, #8]
   3d2a0:	ldur	x0, [x29, #-24]
   3d2a4:	ldr	x1, [sp, #8]
   3d2a8:	bl	37288 <rpl_re_set_registers@@Base+0xa2ec>
   3d2ac:	cmp	x0, #0x0
   3d2b0:	cset	w8, ne  // ne = any
   3d2b4:	eor	w8, w8, #0x1
   3d2b8:	tbnz	w8, #0, 3d2c0 <rpl_re_set_registers@@Base+0x10324>
   3d2bc:	b	3d468 <rpl_re_set_registers@@Base+0x104cc>
   3d2c0:	ldur	x8, [x29, #-16]
   3d2c4:	ldr	x8, [x8]
   3d2c8:	ldr	x9, [sp, #8]
   3d2cc:	mov	x10, #0x10                  	// #16
   3d2d0:	mul	x9, x10, x9
   3d2d4:	add	x8, x8, x9
   3d2d8:	ldr	w11, [x8, #8]
   3d2dc:	and	w11, w11, #0xff
   3d2e0:	ldr	w12, [sp, #20]
   3d2e4:	cmp	w11, w12
   3d2e8:	b.ne	3d35c <rpl_re_set_registers@@Base+0x103c0>  // b.any
   3d2ec:	ldur	x8, [x29, #-16]
   3d2f0:	ldr	x8, [x8]
   3d2f4:	ldr	x9, [sp, #8]
   3d2f8:	mov	x10, #0x10                  	// #16
   3d2fc:	mul	x9, x10, x9
   3d300:	ldr	x8, [x8, x9]
   3d304:	ldr	x9, [sp, #24]
   3d308:	cmp	x8, x9
   3d30c:	b.ne	3d35c <rpl_re_set_registers@@Base+0x103c0>  // b.any
   3d310:	ldr	w8, [sp, #20]
   3d314:	cmp	w8, #0x9
   3d318:	b.ne	3d358 <rpl_re_set_registers@@Base+0x103bc>  // b.any
   3d31c:	ldur	x0, [x29, #-24]
   3d320:	ldr	x1, [sp, #8]
   3d324:	bl	36c60 <rpl_re_set_registers@@Base+0x9cc4>
   3d328:	mov	w8, #0x1                   	// #1
   3d32c:	and	w8, w0, w8
   3d330:	strb	w8, [sp, #7]
   3d334:	ldrb	w8, [sp, #7]
   3d338:	eor	w8, w8, #0x1
   3d33c:	and	w8, w8, #0x1
   3d340:	mov	w1, w8
   3d344:	sxtw	x9, w1
   3d348:	cbz	x9, 3d358 <rpl_re_set_registers@@Base+0x103bc>
   3d34c:	mov	w8, #0xc                   	// #12
   3d350:	stur	w8, [x29, #-4]
   3d354:	b	3d46c <rpl_re_set_registers@@Base+0x104d0>
   3d358:	b	3d468 <rpl_re_set_registers@@Base+0x104cc>
   3d35c:	ldur	x0, [x29, #-24]
   3d360:	ldr	x1, [sp, #8]
   3d364:	bl	36c60 <rpl_re_set_registers@@Base+0x9cc4>
   3d368:	mov	w8, #0x1                   	// #1
   3d36c:	and	w8, w0, w8
   3d370:	strb	w8, [sp, #7]
   3d374:	ldrb	w8, [sp, #7]
   3d378:	eor	w8, w8, #0x1
   3d37c:	and	w8, w8, #0x1
   3d380:	mov	w1, w8
   3d384:	sxtw	x9, w1
   3d388:	cbz	x9, 3d398 <rpl_re_set_registers@@Base+0x103fc>
   3d38c:	mov	w8, #0xc                   	// #12
   3d390:	stur	w8, [x29, #-4]
   3d394:	b	3d46c <rpl_re_set_registers@@Base+0x104d0>
   3d398:	ldur	x8, [x29, #-16]
   3d39c:	ldr	x8, [x8, #40]
   3d3a0:	ldr	x9, [sp, #8]
   3d3a4:	mov	x10, #0x18                  	// #24
   3d3a8:	mul	x9, x10, x9
   3d3ac:	add	x8, x8, x9
   3d3b0:	ldr	x8, [x8, #8]
   3d3b4:	cbnz	x8, 3d3bc <rpl_re_set_registers@@Base+0x10420>
   3d3b8:	b	3d468 <rpl_re_set_registers@@Base+0x104cc>
   3d3bc:	ldur	x8, [x29, #-16]
   3d3c0:	ldr	x8, [x8, #40]
   3d3c4:	ldr	x9, [sp, #8]
   3d3c8:	mov	x10, #0x18                  	// #24
   3d3cc:	mul	x9, x10, x9
   3d3d0:	add	x8, x8, x9
   3d3d4:	ldr	x8, [x8, #8]
   3d3d8:	cmp	x8, #0x2
   3d3dc:	b.ne	3d440 <rpl_re_set_registers@@Base+0x104a4>  // b.any
   3d3e0:	ldur	x0, [x29, #-16]
   3d3e4:	ldur	x1, [x29, #-24]
   3d3e8:	ldur	x8, [x29, #-16]
   3d3ec:	ldr	x8, [x8, #40]
   3d3f0:	ldr	x9, [sp, #8]
   3d3f4:	mov	x10, #0x18                  	// #24
   3d3f8:	mul	x9, x10, x9
   3d3fc:	add	x8, x8, x9
   3d400:	ldr	x8, [x8, #16]
   3d404:	ldr	x2, [x8, #8]
   3d408:	ldr	x3, [sp, #24]
   3d40c:	ldr	w4, [sp, #20]
   3d410:	bl	3d278 <rpl_re_set_registers@@Base+0x102dc>
   3d414:	str	w0, [sp]
   3d418:	ldr	w11, [sp]
   3d41c:	cmp	w11, #0x0
   3d420:	cset	w11, ne  // ne = any
   3d424:	and	w11, w11, #0x1
   3d428:	mov	w1, w11
   3d42c:	sxtw	x8, w1
   3d430:	cbz	x8, 3d440 <rpl_re_set_registers@@Base+0x104a4>
   3d434:	ldr	w8, [sp]
   3d438:	stur	w8, [x29, #-4]
   3d43c:	b	3d46c <rpl_re_set_registers@@Base+0x104d0>
   3d440:	ldur	x8, [x29, #-16]
   3d444:	ldr	x8, [x8, #40]
   3d448:	ldr	x9, [sp, #8]
   3d44c:	mov	x10, #0x18                  	// #24
   3d450:	mul	x9, x10, x9
   3d454:	add	x8, x8, x9
   3d458:	ldr	x8, [x8, #16]
   3d45c:	ldr	x8, [x8]
   3d460:	str	x8, [sp, #8]
   3d464:	b	3d2a0 <rpl_re_set_registers@@Base+0x10304>
   3d468:	stur	wzr, [x29, #-4]
   3d46c:	ldur	w0, [x29, #-4]
   3d470:	ldp	x29, x30, [sp, #64]
   3d474:	add	sp, sp, #0x50
   3d478:	ret
   3d47c:	sub	sp, sp, #0x60
   3d480:	stp	x29, x30, [sp, #80]
   3d484:	add	x29, sp, #0x50
   3d488:	stur	x0, [x29, #-16]
   3d48c:	stur	x1, [x29, #-24]
   3d490:	stur	x2, [x29, #-32]
   3d494:	ldur	x8, [x29, #-32]
   3d498:	ldr	x8, [x8, #8]
   3d49c:	cmp	x8, #0x0
   3d4a0:	cset	w9, eq  // eq = none
   3d4a4:	and	w9, w9, #0x1
   3d4a8:	mov	w0, w9
   3d4ac:	sxtw	x8, w0
   3d4b0:	cbz	x8, 3d4c8 <rpl_re_set_registers@@Base+0x1052c>
   3d4b4:	ldur	x8, [x29, #-16]
   3d4b8:	str	wzr, [x8]
   3d4bc:	mov	x8, xzr
   3d4c0:	stur	x8, [x29, #-8]
   3d4c4:	b	3d5cc <rpl_re_set_registers@@Base+0x10630>
   3d4c8:	ldur	x0, [x29, #-32]
   3d4cc:	mov	w8, wzr
   3d4d0:	mov	w1, w8
   3d4d4:	bl	374d4 <rpl_re_set_registers@@Base+0xa538>
   3d4d8:	str	x0, [sp, #40]
   3d4dc:	ldur	x9, [x29, #-24]
   3d4e0:	ldr	x9, [x9, #64]
   3d4e4:	ldr	x10, [sp, #40]
   3d4e8:	ldur	x11, [x29, #-24]
   3d4ec:	ldr	x11, [x11, #136]
   3d4f0:	and	x10, x10, x11
   3d4f4:	mov	x11, #0x18                  	// #24
   3d4f8:	mul	x10, x11, x10
   3d4fc:	add	x9, x9, x10
   3d500:	str	x9, [sp, #24]
   3d504:	str	xzr, [sp, #16]
   3d508:	ldr	x8, [sp, #16]
   3d50c:	ldr	x9, [sp, #24]
   3d510:	ldr	x9, [x9]
   3d514:	cmp	x8, x9
   3d518:	b.ge	3d588 <rpl_re_set_registers@@Base+0x105ec>  // b.tcont
   3d51c:	ldr	x8, [sp, #24]
   3d520:	ldr	x8, [x8, #16]
   3d524:	ldr	x9, [sp, #16]
   3d528:	mov	x10, #0x8                   	// #8
   3d52c:	mul	x9, x10, x9
   3d530:	add	x8, x8, x9
   3d534:	ldr	x8, [x8]
   3d538:	str	x8, [sp, #8]
   3d53c:	ldr	x8, [sp, #40]
   3d540:	ldr	x9, [sp, #8]
   3d544:	ldr	x9, [x9]
   3d548:	cmp	x8, x9
   3d54c:	b.eq	3d554 <rpl_re_set_registers@@Base+0x105b8>  // b.none
   3d550:	b	3d578 <rpl_re_set_registers@@Base+0x105dc>
   3d554:	ldr	x8, [sp, #8]
   3d558:	add	x0, x8, #0x8
   3d55c:	ldur	x1, [x29, #-32]
   3d560:	bl	37548 <rpl_re_set_registers@@Base+0xa5ac>
   3d564:	tbnz	w0, #0, 3d56c <rpl_re_set_registers@@Base+0x105d0>
   3d568:	b	3d578 <rpl_re_set_registers@@Base+0x105dc>
   3d56c:	ldr	x8, [sp, #8]
   3d570:	stur	x8, [x29, #-8]
   3d574:	b	3d5cc <rpl_re_set_registers@@Base+0x10630>
   3d578:	ldr	x8, [sp, #16]
   3d57c:	add	x8, x8, #0x1
   3d580:	str	x8, [sp, #16]
   3d584:	b	3d508 <rpl_re_set_registers@@Base+0x1056c>
   3d588:	ldur	x0, [x29, #-24]
   3d58c:	ldur	x1, [x29, #-32]
   3d590:	ldr	x2, [sp, #40]
   3d594:	bl	3d5dc <rpl_re_set_registers@@Base+0x10640>
   3d598:	str	x0, [sp, #32]
   3d59c:	ldr	x8, [sp, #32]
   3d5a0:	cmp	x8, #0x0
   3d5a4:	cset	w9, eq  // eq = none
   3d5a8:	and	w9, w9, #0x1
   3d5ac:	mov	w0, w9
   3d5b0:	sxtw	x8, w0
   3d5b4:	cbz	x8, 3d5c4 <rpl_re_set_registers@@Base+0x10628>
   3d5b8:	ldur	x8, [x29, #-16]
   3d5bc:	mov	w9, #0xc                   	// #12
   3d5c0:	str	w9, [x8]
   3d5c4:	ldr	x8, [sp, #32]
   3d5c8:	stur	x8, [x29, #-8]
   3d5cc:	ldur	x0, [x29, #-8]
   3d5d0:	ldp	x29, x30, [sp, #80]
   3d5d4:	add	sp, sp, #0x60
   3d5d8:	ret
   3d5dc:	sub	sp, sp, #0x60
   3d5e0:	stp	x29, x30, [sp, #80]
   3d5e4:	add	x29, sp, #0x50
   3d5e8:	mov	x8, #0x70                  	// #112
   3d5ec:	mov	x9, #0x1                   	// #1
   3d5f0:	stur	x0, [x29, #-16]
   3d5f4:	stur	x1, [x29, #-24]
   3d5f8:	stur	x2, [x29, #-32]
   3d5fc:	mov	x0, x8
   3d600:	mov	x1, x9
   3d604:	bl	b2e0 <calloc@plt>
   3d608:	str	x0, [sp, #24]
   3d60c:	ldr	x8, [sp, #24]
   3d610:	cmp	x8, #0x0
   3d614:	cset	w10, eq  // eq = none
   3d618:	and	w10, w10, #0x1
   3d61c:	mov	w0, w10
   3d620:	sxtw	x8, w0
   3d624:	cbz	x8, 3d634 <rpl_re_set_registers@@Base+0x10698>
   3d628:	mov	x8, xzr
   3d62c:	stur	x8, [x29, #-8]
   3d630:	b	3d820 <rpl_re_set_registers@@Base+0x10884>
   3d634:	ldr	x8, [sp, #24]
   3d638:	add	x0, x8, #0x8
   3d63c:	ldur	x1, [x29, #-24]
   3d640:	bl	3719c <rpl_re_set_registers@@Base+0xa200>
   3d644:	str	w0, [sp, #36]
   3d648:	ldr	w9, [sp, #36]
   3d64c:	cmp	w9, #0x0
   3d650:	cset	w9, ne  // ne = any
   3d654:	and	w9, w9, #0x1
   3d658:	mov	w1, w9
   3d65c:	sxtw	x8, w1
   3d660:	cbz	x8, 3d678 <rpl_re_set_registers@@Base+0x106dc>
   3d664:	ldr	x0, [sp, #24]
   3d668:	bl	a930 <free@plt>
   3d66c:	mov	x8, xzr
   3d670:	stur	x8, [x29, #-8]
   3d674:	b	3d820 <rpl_re_set_registers@@Base+0x10884>
   3d678:	ldr	x8, [sp, #24]
   3d67c:	add	x8, x8, #0x8
   3d680:	ldr	x9, [sp, #24]
   3d684:	str	x8, [x9, #80]
   3d688:	str	xzr, [sp, #40]
   3d68c:	ldr	x8, [sp, #40]
   3d690:	ldur	x9, [x29, #-24]
   3d694:	ldr	x9, [x9, #8]
   3d698:	cmp	x8, x9
   3d69c:	b.ge	3d7d8 <rpl_re_set_registers@@Base+0x1083c>  // b.tcont
   3d6a0:	ldur	x8, [x29, #-16]
   3d6a4:	ldr	x8, [x8]
   3d6a8:	ldur	x9, [x29, #-24]
   3d6ac:	mov	x10, #0x10                  	// #16
   3d6b0:	ldr	x9, [x9, #16]
   3d6b4:	ldr	x11, [sp, #40]
   3d6b8:	ldr	x9, [x9, x11, lsl #3]
   3d6bc:	mul	x9, x10, x9
   3d6c0:	add	x8, x8, x9
   3d6c4:	str	x8, [sp, #16]
   3d6c8:	ldr	x8, [sp, #16]
   3d6cc:	ldr	w12, [x8, #8]
   3d6d0:	and	w12, w12, #0xff
   3d6d4:	str	w12, [sp, #12]
   3d6d8:	ldr	w12, [sp, #12]
   3d6dc:	cmp	w12, #0x1
   3d6e0:	b.ne	3d700 <rpl_re_set_registers@@Base+0x10764>  // b.any
   3d6e4:	ldr	x8, [sp, #16]
   3d6e8:	mov	x9, #0x8                   	// #8
   3d6ec:	ldr	w10, [x8, #8]
   3d6f0:	lsr	w9, w10, w9
   3d6f4:	and	w9, w9, #0x3ff
   3d6f8:	cbnz	w9, 3d700 <rpl_re_set_registers@@Base+0x10764>
   3d6fc:	b	3d7c8 <rpl_re_set_registers@@Base+0x1082c>
   3d700:	ldr	x8, [sp, #16]
   3d704:	ldr	w9, [x8, #8]
   3d708:	lsr	w9, w9, #20
   3d70c:	and	w9, w9, #0x1
   3d710:	ldr	x8, [sp, #24]
   3d714:	ldrb	w10, [x8, #104]
   3d718:	mov	w11, #0x5                   	// #5
   3d71c:	lsr	w10, w10, w11
   3d720:	mov	w12, #0x1                   	// #1
   3d724:	and	w10, w10, #0x1
   3d728:	and	w10, w10, #0xff
   3d72c:	orr	w9, w10, w9
   3d730:	ldrb	w10, [x8, #104]
   3d734:	and	w9, w9, w12
   3d738:	lsl	w9, w9, w11
   3d73c:	and	w10, w10, #0xffffffdf
   3d740:	orr	w9, w10, w9
   3d744:	strb	w9, [x8, #104]
   3d748:	ldr	w9, [sp, #12]
   3d74c:	cmp	w9, #0x2
   3d750:	b.ne	3d76c <rpl_re_set_registers@@Base+0x107d0>  // b.any
   3d754:	ldr	x8, [sp, #24]
   3d758:	ldrb	w9, [x8, #104]
   3d75c:	and	w9, w9, #0xffffffef
   3d760:	orr	w9, w9, #0x10
   3d764:	strb	w9, [x8, #104]
   3d768:	b	3d7c8 <rpl_re_set_registers@@Base+0x1082c>
   3d76c:	ldr	w8, [sp, #12]
   3d770:	cmp	w8, #0x4
   3d774:	b.ne	3d790 <rpl_re_set_registers@@Base+0x107f4>  // b.any
   3d778:	ldr	x8, [sp, #24]
   3d77c:	ldrb	w9, [x8, #104]
   3d780:	and	w9, w9, #0xffffffbf
   3d784:	orr	w9, w9, #0x40
   3d788:	strb	w9, [x8, #104]
   3d78c:	b	3d7c8 <rpl_re_set_registers@@Base+0x1082c>
   3d790:	ldr	w8, [sp, #12]
   3d794:	cmp	w8, #0xc
   3d798:	b.eq	3d7b4 <rpl_re_set_registers@@Base+0x10818>  // b.none
   3d79c:	ldr	x8, [sp, #16]
   3d7a0:	mov	x9, #0x8                   	// #8
   3d7a4:	ldr	w10, [x8, #8]
   3d7a8:	lsr	w9, w10, w9
   3d7ac:	and	w9, w9, #0x3ff
   3d7b0:	cbz	w9, 3d7c8 <rpl_re_set_registers@@Base+0x1082c>
   3d7b4:	ldr	x8, [sp, #24]
   3d7b8:	ldrb	w9, [x8, #104]
   3d7bc:	and	w9, w9, #0x7f
   3d7c0:	orr	w9, w9, #0xffffff80
   3d7c4:	strb	w9, [x8, #104]
   3d7c8:	ldr	x8, [sp, #40]
   3d7cc:	add	x8, x8, #0x1
   3d7d0:	str	x8, [sp, #40]
   3d7d4:	b	3d68c <rpl_re_set_registers@@Base+0x106f0>
   3d7d8:	ldur	x0, [x29, #-16]
   3d7dc:	ldr	x1, [sp, #24]
   3d7e0:	ldur	x2, [x29, #-32]
   3d7e4:	bl	37a0c <rpl_re_set_registers@@Base+0xaa70>
   3d7e8:	str	w0, [sp, #36]
   3d7ec:	ldr	w8, [sp, #36]
   3d7f0:	cmp	w8, #0x0
   3d7f4:	cset	w8, ne  // ne = any
   3d7f8:	and	w8, w8, #0x1
   3d7fc:	mov	w1, w8
   3d800:	sxtw	x9, w1
   3d804:	cbz	x9, 3d818 <rpl_re_set_registers@@Base+0x1087c>
   3d808:	ldr	x0, [sp, #24]
   3d80c:	bl	2d0b4 <rpl_re_set_registers@@Base+0x118>
   3d810:	mov	x8, xzr
   3d814:	str	x8, [sp, #24]
   3d818:	ldr	x8, [sp, #24]
   3d81c:	stur	x8, [x29, #-8]
   3d820:	ldur	x0, [x29, #-8]
   3d824:	ldp	x29, x30, [sp, #80]
   3d828:	add	sp, sp, #0x60
   3d82c:	ret
   3d830:	sub	sp, sp, #0x80
   3d834:	stp	x29, x30, [sp, #112]
   3d838:	add	x29, sp, #0x70
   3d83c:	stur	x0, [x29, #-16]
   3d840:	stur	x1, [x29, #-24]
   3d844:	stur	x2, [x29, #-32]
   3d848:	stur	x3, [x29, #-40]
   3d84c:	ldur	x8, [x29, #-16]
   3d850:	ldr	x8, [x8]
   3d854:	ldur	x9, [x29, #-24]
   3d858:	mov	x10, #0x10                  	// #16
   3d85c:	mul	x9, x10, x9
   3d860:	add	x8, x8, x9
   3d864:	stur	x8, [x29, #-48]
   3d868:	ldur	x8, [x29, #-48]
   3d86c:	ldr	w11, [x8, #8]
   3d870:	and	w11, w11, #0xff
   3d874:	cmp	w11, #0x7
   3d878:	cset	w11, eq  // eq = none
   3d87c:	and	w11, w11, #0x1
   3d880:	mov	w0, w11
   3d884:	sxtw	x8, w0
   3d888:	cbz	x8, 3dad0 <rpl_re_set_registers@@Base+0x10b34>
   3d88c:	ldur	x8, [x29, #-32]
   3d890:	ldr	x8, [x8, #8]
   3d894:	ldur	x9, [x29, #-40]
   3d898:	add	x8, x8, x9
   3d89c:	ldrb	w10, [x8]
   3d8a0:	strb	w10, [sp, #47]
   3d8a4:	ldrb	w10, [sp, #47]
   3d8a8:	cmp	w10, #0xc2
   3d8ac:	cset	w10, lt  // lt = tstop
   3d8b0:	and	w10, w10, #0x1
   3d8b4:	mov	w0, w10
   3d8b8:	sxtw	x8, w0
   3d8bc:	cbz	x8, 3d8c8 <rpl_re_set_registers@@Base+0x1092c>
   3d8c0:	stur	wzr, [x29, #-4]
   3d8c4:	b	3dd8c <rpl_re_set_registers@@Base+0x10df0>
   3d8c8:	ldur	x8, [x29, #-40]
   3d8cc:	add	x8, x8, #0x2
   3d8d0:	ldur	x9, [x29, #-32]
   3d8d4:	ldr	x9, [x9, #88]
   3d8d8:	cmp	x8, x9
   3d8dc:	b.le	3d8e8 <rpl_re_set_registers@@Base+0x1094c>
   3d8e0:	stur	wzr, [x29, #-4]
   3d8e4:	b	3dd8c <rpl_re_set_registers@@Base+0x10df0>
   3d8e8:	ldur	x8, [x29, #-32]
   3d8ec:	ldr	x8, [x8, #8]
   3d8f0:	ldur	x9, [x29, #-40]
   3d8f4:	add	x9, x9, #0x1
   3d8f8:	add	x8, x8, x9
   3d8fc:	ldrb	w10, [x8]
   3d900:	strb	w10, [sp, #46]
   3d904:	ldrb	w10, [sp, #47]
   3d908:	cmp	w10, #0xe0
   3d90c:	b.ge	3d950 <rpl_re_set_registers@@Base+0x109b4>  // b.tcont
   3d910:	ldrb	w8, [sp, #46]
   3d914:	mov	w9, #0x1                   	// #1
   3d918:	cmp	w8, #0x80
   3d91c:	str	w9, [sp, #12]
   3d920:	b.lt	3d934 <rpl_re_set_registers@@Base+0x10998>  // b.tstop
   3d924:	ldrb	w8, [sp, #46]
   3d928:	cmp	w8, #0xbf
   3d92c:	cset	w8, gt
   3d930:	str	w8, [sp, #12]
   3d934:	ldr	w8, [sp, #12]
   3d938:	mov	w9, #0x2                   	// #2
   3d93c:	mov	w10, wzr
   3d940:	tst	w8, #0x1
   3d944:	csel	w8, w10, w9, ne  // ne = any
   3d948:	stur	w8, [x29, #-4]
   3d94c:	b	3dd8c <rpl_re_set_registers@@Base+0x10df0>
   3d950:	ldrb	w8, [sp, #47]
   3d954:	cmp	w8, #0xf0
   3d958:	b.ge	3d988 <rpl_re_set_registers@@Base+0x109ec>  // b.tcont
   3d95c:	mov	w8, #0x3                   	// #3
   3d960:	stur	w8, [x29, #-52]
   3d964:	ldrb	w8, [sp, #47]
   3d968:	cmp	w8, #0xe0
   3d96c:	b.ne	3d984 <rpl_re_set_registers@@Base+0x109e8>  // b.any
   3d970:	ldrb	w8, [sp, #46]
   3d974:	cmp	w8, #0xa0
   3d978:	b.ge	3d984 <rpl_re_set_registers@@Base+0x109e8>  // b.tcont
   3d97c:	stur	wzr, [x29, #-4]
   3d980:	b	3dd8c <rpl_re_set_registers@@Base+0x10df0>
   3d984:	b	3da38 <rpl_re_set_registers@@Base+0x10a9c>
   3d988:	ldrb	w8, [sp, #47]
   3d98c:	cmp	w8, #0xf8
   3d990:	b.ge	3d9c0 <rpl_re_set_registers@@Base+0x10a24>  // b.tcont
   3d994:	mov	w8, #0x4                   	// #4
   3d998:	stur	w8, [x29, #-52]
   3d99c:	ldrb	w8, [sp, #47]
   3d9a0:	cmp	w8, #0xf0
   3d9a4:	b.ne	3d9bc <rpl_re_set_registers@@Base+0x10a20>  // b.any
   3d9a8:	ldrb	w8, [sp, #46]
   3d9ac:	cmp	w8, #0x90
   3d9b0:	b.ge	3d9bc <rpl_re_set_registers@@Base+0x10a20>  // b.tcont
   3d9b4:	stur	wzr, [x29, #-4]
   3d9b8:	b	3dd8c <rpl_re_set_registers@@Base+0x10df0>
   3d9bc:	b	3da38 <rpl_re_set_registers@@Base+0x10a9c>
   3d9c0:	ldrb	w8, [sp, #47]
   3d9c4:	cmp	w8, #0xfc
   3d9c8:	b.ge	3d9f8 <rpl_re_set_registers@@Base+0x10a5c>  // b.tcont
   3d9cc:	mov	w8, #0x5                   	// #5
   3d9d0:	stur	w8, [x29, #-52]
   3d9d4:	ldrb	w8, [sp, #47]
   3d9d8:	cmp	w8, #0xf8
   3d9dc:	b.ne	3d9f4 <rpl_re_set_registers@@Base+0x10a58>  // b.any
   3d9e0:	ldrb	w8, [sp, #46]
   3d9e4:	cmp	w8, #0x88
   3d9e8:	b.ge	3d9f4 <rpl_re_set_registers@@Base+0x10a58>  // b.tcont
   3d9ec:	stur	wzr, [x29, #-4]
   3d9f0:	b	3dd8c <rpl_re_set_registers@@Base+0x10df0>
   3d9f4:	b	3da38 <rpl_re_set_registers@@Base+0x10a9c>
   3d9f8:	ldrb	w8, [sp, #47]
   3d9fc:	cmp	w8, #0xfe
   3da00:	b.ge	3da30 <rpl_re_set_registers@@Base+0x10a94>  // b.tcont
   3da04:	mov	w8, #0x6                   	// #6
   3da08:	stur	w8, [x29, #-52]
   3da0c:	ldrb	w8, [sp, #47]
   3da10:	cmp	w8, #0xfc
   3da14:	b.ne	3da2c <rpl_re_set_registers@@Base+0x10a90>  // b.any
   3da18:	ldrb	w8, [sp, #46]
   3da1c:	cmp	w8, #0x84
   3da20:	b.ge	3da2c <rpl_re_set_registers@@Base+0x10a90>  // b.tcont
   3da24:	stur	wzr, [x29, #-4]
   3da28:	b	3dd8c <rpl_re_set_registers@@Base+0x10df0>
   3da2c:	b	3da38 <rpl_re_set_registers@@Base+0x10a9c>
   3da30:	stur	wzr, [x29, #-4]
   3da34:	b	3dd8c <rpl_re_set_registers@@Base+0x10df0>
   3da38:	ldur	x8, [x29, #-40]
   3da3c:	ldursw	x9, [x29, #-52]
   3da40:	add	x8, x8, x9
   3da44:	ldur	x9, [x29, #-32]
   3da48:	ldr	x9, [x9, #88]
   3da4c:	cmp	x8, x9
   3da50:	b.le	3da5c <rpl_re_set_registers@@Base+0x10ac0>
   3da54:	stur	wzr, [x29, #-4]
   3da58:	b	3dd8c <rpl_re_set_registers@@Base+0x10df0>
   3da5c:	mov	x8, #0x1                   	// #1
   3da60:	str	x8, [sp, #48]
   3da64:	ldr	x8, [sp, #48]
   3da68:	ldursw	x9, [x29, #-52]
   3da6c:	cmp	x8, x9
   3da70:	b.ge	3dac4 <rpl_re_set_registers@@Base+0x10b28>  // b.tcont
   3da74:	ldur	x8, [x29, #-32]
   3da78:	ldr	x8, [x8, #8]
   3da7c:	ldur	x9, [x29, #-40]
   3da80:	ldr	x10, [sp, #48]
   3da84:	add	x9, x9, x10
   3da88:	add	x8, x8, x9
   3da8c:	ldrb	w11, [x8]
   3da90:	strb	w11, [sp, #46]
   3da94:	ldrb	w11, [sp, #46]
   3da98:	cmp	w11, #0x80
   3da9c:	b.lt	3daac <rpl_re_set_registers@@Base+0x10b10>  // b.tstop
   3daa0:	ldrb	w8, [sp, #46]
   3daa4:	cmp	w8, #0xbf
   3daa8:	b.le	3dab4 <rpl_re_set_registers@@Base+0x10b18>
   3daac:	stur	wzr, [x29, #-4]
   3dab0:	b	3dd8c <rpl_re_set_registers@@Base+0x10df0>
   3dab4:	ldr	x8, [sp, #48]
   3dab8:	add	x8, x8, #0x1
   3dabc:	str	x8, [sp, #48]
   3dac0:	b	3da64 <rpl_re_set_registers@@Base+0x10ac8>
   3dac4:	ldur	w8, [x29, #-52]
   3dac8:	stur	w8, [x29, #-4]
   3dacc:	b	3dd8c <rpl_re_set_registers@@Base+0x10df0>
   3dad0:	ldur	x0, [x29, #-32]
   3dad4:	ldur	x1, [x29, #-40]
   3dad8:	bl	34578 <rpl_re_set_registers@@Base+0x75dc>
   3dadc:	stur	w0, [x29, #-52]
   3dae0:	ldur	x8, [x29, #-48]
   3dae4:	ldr	w9, [x8, #8]
   3dae8:	and	w9, w9, #0xff
   3daec:	cmp	w9, #0x5
   3daf0:	b.ne	3db68 <rpl_re_set_registers@@Base+0x10bcc>  // b.any
   3daf4:	ldur	w8, [x29, #-52]
   3daf8:	cmp	w8, #0x1
   3dafc:	b.gt	3db08 <rpl_re_set_registers@@Base+0x10b6c>
   3db00:	stur	wzr, [x29, #-4]
   3db04:	b	3dd8c <rpl_re_set_registers@@Base+0x10df0>
   3db08:	ldur	x8, [x29, #-16]
   3db0c:	ldr	x8, [x8, #216]
   3db10:	and	x8, x8, #0x40
   3db14:	cbnz	x8, 3db30 <rpl_re_set_registers@@Base+0x10b94>
   3db18:	ldur	x8, [x29, #-32]
   3db1c:	ldr	x8, [x8, #8]
   3db20:	ldur	x9, [x29, #-40]
   3db24:	ldrb	w10, [x8, x9]
   3db28:	cmp	w10, #0xa
   3db2c:	b.eq	3db54 <rpl_re_set_registers@@Base+0x10bb8>  // b.none
   3db30:	ldur	x8, [x29, #-16]
   3db34:	ldr	x8, [x8, #216]
   3db38:	and	x8, x8, #0x80
   3db3c:	cbz	x8, 3db5c <rpl_re_set_registers@@Base+0x10bc0>
   3db40:	ldur	x8, [x29, #-32]
   3db44:	ldr	x8, [x8, #8]
   3db48:	ldur	x9, [x29, #-40]
   3db4c:	ldrb	w10, [x8, x9]
   3db50:	cbnz	w10, 3db5c <rpl_re_set_registers@@Base+0x10bc0>
   3db54:	stur	wzr, [x29, #-4]
   3db58:	b	3dd8c <rpl_re_set_registers@@Base+0x10df0>
   3db5c:	ldur	w8, [x29, #-52]
   3db60:	stur	w8, [x29, #-4]
   3db64:	b	3dd8c <rpl_re_set_registers@@Base+0x10df0>
   3db68:	ldur	x0, [x29, #-32]
   3db6c:	ldur	x1, [x29, #-40]
   3db70:	bl	3dfd8 <rpl_re_set_registers@@Base+0x1103c>
   3db74:	str	w0, [sp, #56]
   3db78:	ldr	w8, [sp, #56]
   3db7c:	cmp	w8, #0x1
   3db80:	b.gt	3db90 <rpl_re_set_registers@@Base+0x10bf4>
   3db84:	ldur	w8, [x29, #-52]
   3db88:	cmp	w8, #0x1
   3db8c:	b.le	3db98 <rpl_re_set_registers@@Base+0x10bfc>
   3db90:	ldur	w8, [x29, #-52]
   3db94:	cbnz	w8, 3dba0 <rpl_re_set_registers@@Base+0x10c04>
   3db98:	stur	wzr, [x29, #-4]
   3db9c:	b	3dd8c <rpl_re_set_registers@@Base+0x10df0>
   3dba0:	ldur	x8, [x29, #-48]
   3dba4:	ldr	w9, [x8, #8]
   3dba8:	and	w9, w9, #0xff
   3dbac:	cmp	w9, #0x6
   3dbb0:	b.ne	3dd88 <rpl_re_set_registers@@Base+0x10dec>  // b.any
   3dbb4:	ldur	x8, [x29, #-48]
   3dbb8:	ldr	x8, [x8]
   3dbbc:	str	x8, [sp, #32]
   3dbc0:	str	wzr, [sp, #28]
   3dbc4:	ldr	x8, [sp, #32]
   3dbc8:	ldr	x8, [x8, #64]
   3dbcc:	cbnz	x8, 3dbe8 <rpl_re_set_registers@@Base+0x10c4c>
   3dbd0:	ldr	x8, [sp, #32]
   3dbd4:	ldr	x8, [x8, #72]
   3dbd8:	cbnz	x8, 3dbe8 <rpl_re_set_registers@@Base+0x10c4c>
   3dbdc:	ldr	x8, [sp, #32]
   3dbe0:	ldr	x8, [x8, #40]
   3dbe4:	cbz	x8, 3dbfc <rpl_re_set_registers@@Base+0x10c60>
   3dbe8:	ldur	x0, [x29, #-32]
   3dbec:	ldur	x1, [x29, #-40]
   3dbf0:	bl	30870 <rpl_re_set_registers@@Base+0x38d4>
   3dbf4:	str	w0, [sp, #8]
   3dbf8:	b	3dc04 <rpl_re_set_registers@@Base+0x10c68>
   3dbfc:	mov	w8, wzr
   3dc00:	str	w8, [sp, #8]
   3dc04:	ldr	w8, [sp, #8]
   3dc08:	str	w8, [sp, #24]
   3dc0c:	str	xzr, [sp, #48]
   3dc10:	ldr	x8, [sp, #48]
   3dc14:	ldr	x9, [sp, #32]
   3dc18:	ldr	x9, [x9, #40]
   3dc1c:	cmp	x8, x9
   3dc20:	b.ge	3dc5c <rpl_re_set_registers@@Base+0x10cc0>  // b.tcont
   3dc24:	ldr	w8, [sp, #24]
   3dc28:	ldr	x9, [sp, #32]
   3dc2c:	ldr	x9, [x9]
   3dc30:	ldr	x10, [sp, #48]
   3dc34:	ldr	w11, [x9, x10, lsl #2]
   3dc38:	cmp	w8, w11
   3dc3c:	b.ne	3dc4c <rpl_re_set_registers@@Base+0x10cb0>  // b.any
   3dc40:	ldur	w8, [x29, #-52]
   3dc44:	str	w8, [sp, #28]
   3dc48:	b	3dd20 <rpl_re_set_registers@@Base+0x10d84>
   3dc4c:	ldr	x8, [sp, #48]
   3dc50:	add	x8, x8, #0x1
   3dc54:	str	x8, [sp, #48]
   3dc58:	b	3dc10 <rpl_re_set_registers@@Base+0x10c74>
   3dc5c:	str	xzr, [sp, #48]
   3dc60:	ldr	x8, [sp, #48]
   3dc64:	ldr	x9, [sp, #32]
   3dc68:	ldr	x9, [x9, #72]
   3dc6c:	cmp	x8, x9
   3dc70:	b.ge	3dcb4 <rpl_re_set_registers@@Base+0x10d18>  // b.tcont
   3dc74:	ldr	x8, [sp, #32]
   3dc78:	ldr	x8, [x8, #24]
   3dc7c:	ldr	x9, [sp, #48]
   3dc80:	ldr	x8, [x8, x9, lsl #3]
   3dc84:	str	x8, [sp, #16]
   3dc88:	ldr	w0, [sp, #24]
   3dc8c:	ldr	x1, [sp, #16]
   3dc90:	bl	b8a0 <iswctype@plt>
   3dc94:	cbz	w0, 3dca4 <rpl_re_set_registers@@Base+0x10d08>
   3dc98:	ldur	w8, [x29, #-52]
   3dc9c:	str	w8, [sp, #28]
   3dca0:	b	3dd20 <rpl_re_set_registers@@Base+0x10d84>
   3dca4:	ldr	x8, [sp, #48]
   3dca8:	add	x8, x8, #0x1
   3dcac:	str	x8, [sp, #48]
   3dcb0:	b	3dc60 <rpl_re_set_registers@@Base+0x10cc4>
   3dcb4:	str	xzr, [sp, #48]
   3dcb8:	ldr	x8, [sp, #48]
   3dcbc:	ldr	x9, [sp, #32]
   3dcc0:	ldr	x9, [x9, #64]
   3dcc4:	cmp	x8, x9
   3dcc8:	b.ge	3dd20 <rpl_re_set_registers@@Base+0x10d84>  // b.tcont
   3dccc:	ldr	x8, [sp, #32]
   3dcd0:	ldr	x8, [x8, #8]
   3dcd4:	ldr	x9, [sp, #48]
   3dcd8:	ldr	w10, [x8, x9, lsl #2]
   3dcdc:	ldr	w11, [sp, #24]
   3dce0:	cmp	w10, w11
   3dce4:	b.hi	3dd10 <rpl_re_set_registers@@Base+0x10d74>  // b.pmore
   3dce8:	ldr	w8, [sp, #24]
   3dcec:	ldr	x9, [sp, #32]
   3dcf0:	ldr	x9, [x9, #16]
   3dcf4:	ldr	x10, [sp, #48]
   3dcf8:	ldr	w11, [x9, x10, lsl #2]
   3dcfc:	cmp	w8, w11
   3dd00:	b.hi	3dd10 <rpl_re_set_registers@@Base+0x10d74>  // b.pmore
   3dd04:	ldur	w8, [x29, #-52]
   3dd08:	str	w8, [sp, #28]
   3dd0c:	b	3dd20 <rpl_re_set_registers@@Base+0x10d84>
   3dd10:	ldr	x8, [sp, #48]
   3dd14:	add	x8, x8, #0x1
   3dd18:	str	x8, [sp, #48]
   3dd1c:	b	3dcb8 <rpl_re_set_registers@@Base+0x10d1c>
   3dd20:	ldr	x8, [sp, #32]
   3dd24:	ldrb	w9, [x8, #32]
   3dd28:	and	w9, w9, #0x1
   3dd2c:	and	w9, w9, #0xff
   3dd30:	cbnz	w9, 3dd40 <rpl_re_set_registers@@Base+0x10da4>
   3dd34:	ldr	w8, [sp, #28]
   3dd38:	stur	w8, [x29, #-4]
   3dd3c:	b	3dd8c <rpl_re_set_registers@@Base+0x10df0>
   3dd40:	ldr	w8, [sp, #28]
   3dd44:	cmp	w8, #0x0
   3dd48:	cset	w8, le
   3dd4c:	tbnz	w8, #0, 3dd58 <rpl_re_set_registers@@Base+0x10dbc>
   3dd50:	stur	wzr, [x29, #-4]
   3dd54:	b	3dd8c <rpl_re_set_registers@@Base+0x10df0>
   3dd58:	ldr	w8, [sp, #56]
   3dd5c:	ldur	w9, [x29, #-52]
   3dd60:	cmp	w8, w9
   3dd64:	b.le	3dd74 <rpl_re_set_registers@@Base+0x10dd8>
   3dd68:	ldr	w8, [sp, #56]
   3dd6c:	str	w8, [sp, #4]
   3dd70:	b	3dd7c <rpl_re_set_registers@@Base+0x10de0>
   3dd74:	ldur	w8, [x29, #-52]
   3dd78:	str	w8, [sp, #4]
   3dd7c:	ldr	w8, [sp, #4]
   3dd80:	stur	w8, [x29, #-4]
   3dd84:	b	3dd8c <rpl_re_set_registers@@Base+0x10df0>
   3dd88:	stur	wzr, [x29, #-4]
   3dd8c:	ldur	w0, [x29, #-4]
   3dd90:	ldp	x29, x30, [sp, #112]
   3dd94:	add	sp, sp, #0x80
   3dd98:	ret
   3dd9c:	sub	sp, sp, #0x40
   3dda0:	stp	x29, x30, [sp, #48]
   3dda4:	add	x29, sp, #0x30
   3dda8:	stur	x0, [x29, #-16]
   3ddac:	str	x1, [sp, #24]
   3ddb0:	str	x2, [sp, #16]
   3ddb4:	ldur	x8, [x29, #-16]
   3ddb8:	ldr	x8, [x8, #8]
   3ddbc:	ldr	x9, [sp, #16]
   3ddc0:	add	x8, x8, x9
   3ddc4:	ldrb	w10, [x8]
   3ddc8:	strb	w10, [sp, #15]
   3ddcc:	ldr	x8, [sp, #24]
   3ddd0:	ldr	w10, [x8, #8]
   3ddd4:	and	w10, w10, #0xff
   3ddd8:	subs	w10, w10, #0x1
   3dddc:	mov	w8, w10
   3dde0:	ubfx	x8, x8, #0, #32
   3dde4:	cmp	x8, #0x6
   3dde8:	str	x8, [sp]
   3ddec:	b.hi	3dec8 <rpl_re_set_registers@@Base+0x10f2c>  // b.pmore
   3ddf0:	adrp	x8, 47000 <vasnprintf@@Base+0x4e4c>
   3ddf4:	add	x8, x8, #0x5d0
   3ddf8:	ldr	x11, [sp]
   3ddfc:	ldrsw	x10, [x8, x11, lsl #2]
   3de00:	add	x9, x8, x10
   3de04:	br	x9
   3de08:	ldr	x8, [sp, #24]
   3de0c:	ldrb	w9, [x8]
   3de10:	ldrb	w10, [sp, #15]
   3de14:	cmp	w9, w10
   3de18:	b.eq	3de2c <rpl_re_set_registers@@Base+0x10e90>  // b.none
   3de1c:	mov	w8, wzr
   3de20:	and	w8, w8, #0x1
   3de24:	sturb	w8, [x29, #-1]
   3de28:	b	3dfc4 <rpl_re_set_registers@@Base+0x11028>
   3de2c:	b	3ded8 <rpl_re_set_registers@@Base+0x10f3c>
   3de30:	ldr	x8, [sp, #24]
   3de34:	ldr	x0, [x8]
   3de38:	ldrb	w9, [sp, #15]
   3de3c:	mov	w1, w9
   3de40:	bl	3a128 <rpl_re_set_registers@@Base+0xd18c>
   3de44:	tbnz	w0, #0, 3de58 <rpl_re_set_registers@@Base+0x10ebc>
   3de48:	mov	w8, wzr
   3de4c:	and	w8, w8, #0x1
   3de50:	sturb	w8, [x29, #-1]
   3de54:	b	3dfc4 <rpl_re_set_registers@@Base+0x11028>
   3de58:	b	3ded8 <rpl_re_set_registers@@Base+0x10f3c>
   3de5c:	ldrb	w8, [sp, #15]
   3de60:	cmp	w8, #0x80
   3de64:	b.lt	3de78 <rpl_re_set_registers@@Base+0x10edc>  // b.tstop
   3de68:	mov	w8, wzr
   3de6c:	and	w8, w8, #0x1
   3de70:	sturb	w8, [x29, #-1]
   3de74:	b	3dfc4 <rpl_re_set_registers@@Base+0x11028>
   3de78:	ldrb	w8, [sp, #15]
   3de7c:	cmp	w8, #0xa
   3de80:	b.ne	3de98 <rpl_re_set_registers@@Base+0x10efc>  // b.any
   3de84:	ldur	x8, [x29, #-16]
   3de88:	ldr	x8, [x8, #152]
   3de8c:	ldr	x8, [x8, #216]
   3de90:	and	x8, x8, #0x40
   3de94:	cbz	x8, 3deb4 <rpl_re_set_registers@@Base+0x10f18>
   3de98:	ldrb	w8, [sp, #15]
   3de9c:	cbnz	w8, 3dec4 <rpl_re_set_registers@@Base+0x10f28>
   3dea0:	ldur	x8, [x29, #-16]
   3dea4:	ldr	x8, [x8, #152]
   3dea8:	ldr	x8, [x8, #216]
   3deac:	and	x8, x8, #0x80
   3deb0:	cbz	x8, 3dec4 <rpl_re_set_registers@@Base+0x10f28>
   3deb4:	mov	w8, wzr
   3deb8:	and	w8, w8, #0x1
   3debc:	sturb	w8, [x29, #-1]
   3dec0:	b	3dfc4 <rpl_re_set_registers@@Base+0x11028>
   3dec4:	b	3ded8 <rpl_re_set_registers@@Base+0x10f3c>
   3dec8:	mov	w8, wzr
   3decc:	and	w8, w8, #0x1
   3ded0:	sturb	w8, [x29, #-1]
   3ded4:	b	3dfc4 <rpl_re_set_registers@@Base+0x11028>
   3ded8:	ldr	x8, [sp, #24]
   3dedc:	mov	x9, #0x8                   	// #8
   3dee0:	ldr	w10, [x8, #8]
   3dee4:	lsr	w9, w10, w9
   3dee8:	and	w9, w9, #0x3ff
   3deec:	cbz	w9, 3dfb8 <rpl_re_set_registers@@Base+0x1101c>
   3def0:	ldur	x0, [x29, #-16]
   3def4:	ldr	x1, [sp, #16]
   3def8:	ldur	x8, [x29, #-16]
   3defc:	ldr	w2, [x8, #160]
   3df00:	bl	39dbc <rpl_re_set_registers@@Base+0xce20>
   3df04:	str	w0, [sp, #8]
   3df08:	ldr	x8, [sp, #24]
   3df0c:	mov	x9, #0x8                   	// #8
   3df10:	ldr	w10, [x8, #8]
   3df14:	lsr	w9, w10, w9
   3df18:	and	w9, w9, #0x3ff
   3df1c:	and	w9, w9, #0x4
   3df20:	cbz	w9, 3df30 <rpl_re_set_registers@@Base+0x10f94>
   3df24:	ldr	w8, [sp, #8]
   3df28:	and	w8, w8, #0x1
   3df2c:	cbz	w8, 3dfa8 <rpl_re_set_registers@@Base+0x1100c>
   3df30:	ldr	x8, [sp, #24]
   3df34:	mov	x9, #0x8                   	// #8
   3df38:	ldr	w10, [x8, #8]
   3df3c:	lsr	w9, w10, w9
   3df40:	and	w9, w9, #0x3ff
   3df44:	and	w9, w9, #0x8
   3df48:	cbz	w9, 3df58 <rpl_re_set_registers@@Base+0x10fbc>
   3df4c:	ldr	w8, [sp, #8]
   3df50:	and	w8, w8, #0x1
   3df54:	cbnz	w8, 3dfa8 <rpl_re_set_registers@@Base+0x1100c>
   3df58:	ldr	x8, [sp, #24]
   3df5c:	mov	x9, #0x8                   	// #8
   3df60:	ldr	w10, [x8, #8]
   3df64:	lsr	w9, w10, w9
   3df68:	and	w9, w9, #0x3ff
   3df6c:	and	w9, w9, #0x20
   3df70:	cbz	w9, 3df80 <rpl_re_set_registers@@Base+0x10fe4>
   3df74:	ldr	w8, [sp, #8]
   3df78:	and	w8, w8, #0x2
   3df7c:	cbz	w8, 3dfa8 <rpl_re_set_registers@@Base+0x1100c>
   3df80:	ldr	x8, [sp, #24]
   3df84:	mov	x9, #0x8                   	// #8
   3df88:	ldr	w10, [x8, #8]
   3df8c:	lsr	w9, w10, w9
   3df90:	and	w9, w9, #0x3ff
   3df94:	and	w9, w9, #0x80
   3df98:	cbz	w9, 3dfb8 <rpl_re_set_registers@@Base+0x1101c>
   3df9c:	ldr	w8, [sp, #8]
   3dfa0:	and	w8, w8, #0x8
   3dfa4:	cbnz	w8, 3dfb8 <rpl_re_set_registers@@Base+0x1101c>
   3dfa8:	mov	w8, wzr
   3dfac:	and	w8, w8, #0x1
   3dfb0:	sturb	w8, [x29, #-1]
   3dfb4:	b	3dfc4 <rpl_re_set_registers@@Base+0x11028>
   3dfb8:	mov	w8, #0x1                   	// #1
   3dfbc:	and	w8, w8, #0x1
   3dfc0:	sturb	w8, [x29, #-1]
   3dfc4:	ldurb	w8, [x29, #-1]
   3dfc8:	and	w0, w8, #0x1
   3dfcc:	ldp	x29, x30, [sp, #48]
   3dfd0:	add	sp, sp, #0x40
   3dfd4:	ret
   3dfd8:	sub	sp, sp, #0x10
   3dfdc:	mov	w8, #0x1                   	// #1
   3dfe0:	str	x0, [sp, #8]
   3dfe4:	str	x1, [sp]
   3dfe8:	mov	w0, w8
   3dfec:	add	sp, sp, #0x10
   3dff0:	ret
   3dff4:	sub	sp, sp, #0xa0
   3dff8:	stp	x29, x30, [sp, #144]
   3dffc:	add	x29, sp, #0x90
   3e000:	stur	x0, [x29, #-16]
   3e004:	stur	x1, [x29, #-24]
   3e008:	ldur	x8, [x29, #-16]
   3e00c:	ldr	x8, [x8, #152]
   3e010:	stur	x8, [x29, #-32]
   3e014:	stur	xzr, [x29, #-48]
   3e018:	ldur	x8, [x29, #-48]
   3e01c:	ldur	x9, [x29, #-24]
   3e020:	ldr	x9, [x9, #16]
   3e024:	cmp	x8, x9
   3e028:	b.ge	3e3c4 <rpl_re_set_registers@@Base+0x11428>  // b.tcont
   3e02c:	ldur	x8, [x29, #-24]
   3e030:	mov	x9, #0x10                  	// #16
   3e034:	ldr	x8, [x8, #24]
   3e038:	ldur	x10, [x29, #-48]
   3e03c:	ldr	x8, [x8, x10, lsl #3]
   3e040:	str	x8, [sp, #48]
   3e044:	ldur	x8, [x29, #-32]
   3e048:	ldr	x8, [x8]
   3e04c:	ldr	x10, [sp, #48]
   3e050:	mul	x9, x9, x10
   3e054:	add	x8, x8, x9
   3e058:	ldr	w11, [x8, #8]
   3e05c:	lsr	w11, w11, #20
   3e060:	and	w11, w11, #0x1
   3e064:	cbnz	w11, 3e06c <rpl_re_set_registers@@Base+0x110d0>
   3e068:	b	3e3b4 <rpl_re_set_registers@@Base+0x11418>
   3e06c:	ldur	x8, [x29, #-32]
   3e070:	ldr	x8, [x8]
   3e074:	ldr	x9, [sp, #48]
   3e078:	mov	x10, #0x10                  	// #16
   3e07c:	mul	x9, x10, x9
   3e080:	add	x8, x8, x9
   3e084:	mov	x9, #0x8                   	// #8
   3e088:	ldr	w11, [x8, #8]
   3e08c:	lsr	w9, w11, w9
   3e090:	and	w9, w9, #0x3ff
   3e094:	cbz	w9, 3e1a8 <rpl_re_set_registers@@Base+0x1120c>
   3e098:	ldur	x0, [x29, #-16]
   3e09c:	ldur	x8, [x29, #-16]
   3e0a0:	ldr	x1, [x8, #72]
   3e0a4:	ldur	x8, [x29, #-16]
   3e0a8:	ldr	w2, [x8, #160]
   3e0ac:	bl	39dbc <rpl_re_set_registers@@Base+0xce20>
   3e0b0:	str	w0, [sp, #28]
   3e0b4:	ldur	x8, [x29, #-32]
   3e0b8:	ldr	x8, [x8]
   3e0bc:	ldr	x9, [sp, #48]
   3e0c0:	mov	x10, #0x10                  	// #16
   3e0c4:	mul	x9, x10, x9
   3e0c8:	add	x8, x8, x9
   3e0cc:	mov	x9, #0x8                   	// #8
   3e0d0:	ldr	w11, [x8, #8]
   3e0d4:	lsr	w9, w11, w9
   3e0d8:	and	w9, w9, #0x3ff
   3e0dc:	and	w9, w9, #0x4
   3e0e0:	cbz	w9, 3e0f0 <rpl_re_set_registers@@Base+0x11154>
   3e0e4:	ldr	w8, [sp, #28]
   3e0e8:	and	w8, w8, #0x1
   3e0ec:	cbz	w8, 3e1a4 <rpl_re_set_registers@@Base+0x11208>
   3e0f0:	ldur	x8, [x29, #-32]
   3e0f4:	ldr	x8, [x8]
   3e0f8:	ldr	x9, [sp, #48]
   3e0fc:	mov	x10, #0x10                  	// #16
   3e100:	mul	x9, x10, x9
   3e104:	add	x8, x8, x9
   3e108:	mov	x9, #0x8                   	// #8
   3e10c:	ldr	w11, [x8, #8]
   3e110:	lsr	w9, w11, w9
   3e114:	and	w9, w9, #0x3ff
   3e118:	and	w9, w9, #0x8
   3e11c:	cbz	w9, 3e12c <rpl_re_set_registers@@Base+0x11190>
   3e120:	ldr	w8, [sp, #28]
   3e124:	and	w8, w8, #0x1
   3e128:	cbnz	w8, 3e1a4 <rpl_re_set_registers@@Base+0x11208>
   3e12c:	ldur	x8, [x29, #-32]
   3e130:	ldr	x8, [x8]
   3e134:	ldr	x9, [sp, #48]
   3e138:	mov	x10, #0x10                  	// #16
   3e13c:	mul	x9, x10, x9
   3e140:	add	x8, x8, x9
   3e144:	mov	x9, #0x8                   	// #8
   3e148:	ldr	w11, [x8, #8]
   3e14c:	lsr	w9, w11, w9
   3e150:	and	w9, w9, #0x3ff
   3e154:	and	w9, w9, #0x20
   3e158:	cbz	w9, 3e168 <rpl_re_set_registers@@Base+0x111cc>
   3e15c:	ldr	w8, [sp, #28]
   3e160:	and	w8, w8, #0x2
   3e164:	cbz	w8, 3e1a4 <rpl_re_set_registers@@Base+0x11208>
   3e168:	ldur	x8, [x29, #-32]
   3e16c:	ldr	x8, [x8]
   3e170:	ldr	x9, [sp, #48]
   3e174:	mov	x10, #0x10                  	// #16
   3e178:	mul	x9, x10, x9
   3e17c:	add	x8, x8, x9
   3e180:	mov	x9, #0x8                   	// #8
   3e184:	ldr	w11, [x8, #8]
   3e188:	lsr	w9, w11, w9
   3e18c:	and	w9, w9, #0x3ff
   3e190:	and	w9, w9, #0x80
   3e194:	cbz	w9, 3e1a8 <rpl_re_set_registers@@Base+0x1120c>
   3e198:	ldr	w8, [sp, #28]
   3e19c:	and	w8, w8, #0x8
   3e1a0:	cbnz	w8, 3e1a8 <rpl_re_set_registers@@Base+0x1120c>
   3e1a4:	b	3e3b4 <rpl_re_set_registers@@Base+0x11418>
   3e1a8:	ldur	x0, [x29, #-32]
   3e1ac:	ldr	x1, [sp, #48]
   3e1b0:	ldur	x2, [x29, #-16]
   3e1b4:	ldur	x8, [x29, #-16]
   3e1b8:	ldr	x3, [x8, #72]
   3e1bc:	bl	3d830 <rpl_re_set_registers@@Base+0x10894>
   3e1c0:	str	w0, [sp, #44]
   3e1c4:	ldr	w9, [sp, #44]
   3e1c8:	cbnz	w9, 3e1d0 <rpl_re_set_registers@@Base+0x11234>
   3e1cc:	b	3e3b4 <rpl_re_set_registers@@Base+0x11418>
   3e1d0:	ldur	x8, [x29, #-16]
   3e1d4:	ldr	x8, [x8, #72]
   3e1d8:	ldrsw	x9, [sp, #44]
   3e1dc:	add	x8, x8, x9
   3e1e0:	str	x8, [sp, #32]
   3e1e4:	ldur	x8, [x29, #-16]
   3e1e8:	ldr	w10, [x8, #224]
   3e1ec:	ldr	w11, [sp, #44]
   3e1f0:	cmp	w10, w11
   3e1f4:	b.ge	3e204 <rpl_re_set_registers@@Base+0x11268>  // b.tcont
   3e1f8:	ldr	w8, [sp, #44]
   3e1fc:	str	w8, [sp, #12]
   3e200:	b	3e210 <rpl_re_set_registers@@Base+0x11274>
   3e204:	ldur	x8, [x29, #-16]
   3e208:	ldr	w9, [x8, #224]
   3e20c:	str	w9, [sp, #12]
   3e210:	ldr	w8, [sp, #12]
   3e214:	ldur	x9, [x29, #-16]
   3e218:	str	w8, [x9, #224]
   3e21c:	ldur	x0, [x29, #-16]
   3e220:	ldr	x1, [sp, #32]
   3e224:	bl	3bb64 <rpl_re_set_registers@@Base+0xebc8>
   3e228:	stur	w0, [x29, #-36]
   3e22c:	ldur	w8, [x29, #-36]
   3e230:	cmp	w8, #0x0
   3e234:	cset	w8, ne  // ne = any
   3e238:	and	w8, w8, #0x1
   3e23c:	mov	w1, w8
   3e240:	sxtw	x9, w1
   3e244:	cbz	x9, 3e254 <rpl_re_set_registers@@Base+0x112b8>
   3e248:	ldur	w8, [x29, #-36]
   3e24c:	stur	w8, [x29, #-4]
   3e250:	b	3e3c8 <rpl_re_set_registers@@Base+0x1142c>
   3e254:	ldur	x8, [x29, #-32]
   3e258:	ldr	x8, [x8, #48]
   3e25c:	ldur	x9, [x29, #-32]
   3e260:	mov	x10, #0x18                  	// #24
   3e264:	ldr	x9, [x9, #24]
   3e268:	ldr	x11, [sp, #48]
   3e26c:	mov	x12, #0x8                   	// #8
   3e270:	ldr	x9, [x9, x11, lsl #3]
   3e274:	mul	x9, x10, x9
   3e278:	add	x8, x8, x9
   3e27c:	str	x8, [sp, #56]
   3e280:	ldur	x8, [x29, #-16]
   3e284:	ldr	x8, [x8, #184]
   3e288:	ldr	x9, [sp, #32]
   3e28c:	mul	x9, x12, x9
   3e290:	add	x8, x8, x9
   3e294:	ldr	x8, [x8]
   3e298:	str	x8, [sp, #16]
   3e29c:	ldr	x8, [sp, #16]
   3e2a0:	cbnz	x8, 3e2bc <rpl_re_set_registers@@Base+0x11320>
   3e2a4:	ldr	x8, [sp, #56]
   3e2a8:	ldr	q0, [x8]
   3e2ac:	str	q0, [sp, #64]
   3e2b0:	ldr	x8, [x8, #16]
   3e2b4:	str	x8, [sp, #80]
   3e2b8:	b	3e2fc <rpl_re_set_registers@@Base+0x11360>
   3e2bc:	ldr	x8, [sp, #16]
   3e2c0:	ldr	x1, [x8, #80]
   3e2c4:	ldr	x2, [sp, #56]
   3e2c8:	add	x0, sp, #0x40
   3e2cc:	bl	3b72c <rpl_re_set_registers@@Base+0xe790>
   3e2d0:	stur	w0, [x29, #-36]
   3e2d4:	ldur	w9, [x29, #-36]
   3e2d8:	cmp	w9, #0x0
   3e2dc:	cset	w9, ne  // ne = any
   3e2e0:	and	w9, w9, #0x1
   3e2e4:	mov	w1, w9
   3e2e8:	sxtw	x8, w1
   3e2ec:	cbz	x8, 3e2fc <rpl_re_set_registers@@Base+0x11360>
   3e2f0:	ldur	w8, [x29, #-36]
   3e2f4:	stur	w8, [x29, #-4]
   3e2f8:	b	3e3c8 <rpl_re_set_registers@@Base+0x1142c>
   3e2fc:	ldur	x0, [x29, #-16]
   3e300:	ldr	x8, [sp, #32]
   3e304:	subs	x1, x8, #0x1
   3e308:	ldur	x8, [x29, #-16]
   3e30c:	ldr	w2, [x8, #160]
   3e310:	bl	39dbc <rpl_re_set_registers@@Base+0xce20>
   3e314:	str	w0, [sp, #28]
   3e318:	ldur	x1, [x29, #-32]
   3e31c:	ldr	w3, [sp, #28]
   3e320:	sub	x0, x29, #0x24
   3e324:	add	x2, sp, #0x40
   3e328:	bl	3736c <rpl_re_set_registers@@Base+0xa3d0>
   3e32c:	ldur	x8, [x29, #-16]
   3e330:	ldr	x8, [x8, #184]
   3e334:	ldr	x9, [sp, #32]
   3e338:	mov	x10, #0x8                   	// #8
   3e33c:	mul	x9, x10, x9
   3e340:	add	x8, x8, x9
   3e344:	str	x0, [x8]
   3e348:	ldr	x8, [sp, #16]
   3e34c:	cbz	x8, 3e35c <rpl_re_set_registers@@Base+0x113c0>
   3e350:	add	x8, sp, #0x40
   3e354:	ldr	x0, [x8, #16]
   3e358:	bl	a930 <free@plt>
   3e35c:	ldur	x8, [x29, #-16]
   3e360:	ldr	x8, [x8, #184]
   3e364:	ldr	x9, [sp, #32]
   3e368:	mov	x10, #0x8                   	// #8
   3e36c:	mul	x9, x10, x9
   3e370:	add	x8, x8, x9
   3e374:	ldr	x8, [x8]
   3e378:	mov	w11, #0x0                   	// #0
   3e37c:	str	w11, [sp, #8]
   3e380:	cbnz	x8, 3e394 <rpl_re_set_registers@@Base+0x113f8>
   3e384:	ldur	w8, [x29, #-36]
   3e388:	cmp	w8, #0x0
   3e38c:	cset	w8, ne  // ne = any
   3e390:	str	w8, [sp, #8]
   3e394:	ldr	w8, [sp, #8]
   3e398:	and	w8, w8, #0x1
   3e39c:	mov	w0, w8
   3e3a0:	sxtw	x9, w0
   3e3a4:	cbz	x9, 3e3b4 <rpl_re_set_registers@@Base+0x11418>
   3e3a8:	ldur	w8, [x29, #-36]
   3e3ac:	stur	w8, [x29, #-4]
   3e3b0:	b	3e3c8 <rpl_re_set_registers@@Base+0x1142c>
   3e3b4:	ldur	x8, [x29, #-48]
   3e3b8:	add	x8, x8, #0x1
   3e3bc:	stur	x8, [x29, #-48]
   3e3c0:	b	3e018 <rpl_re_set_registers@@Base+0x1107c>
   3e3c4:	stur	wzr, [x29, #-4]
   3e3c8:	ldur	w0, [x29, #-4]
   3e3cc:	ldp	x29, x30, [sp, #144]
   3e3d0:	add	sp, sp, #0xa0
   3e3d4:	ret
   3e3d8:	stp	x29, x30, [sp, #-16]!
   3e3dc:	mov	x29, sp
   3e3e0:	sub	sp, sp, #0xf0
   3e3e4:	mov	w8, #0x0                   	// #0
   3e3e8:	mov	x9, xzr
   3e3ec:	mov	x10, #0x3800                	// #14336
   3e3f0:	stur	x0, [x29, #-16]
   3e3f4:	stur	x1, [x29, #-24]
   3e3f8:	sturb	w8, [x29, #-53]
   3e3fc:	sturb	w8, [x29, #-73]
   3e400:	sturb	w8, [x29, #-74]
   3e404:	stur	x9, [x29, #-104]
   3e408:	mov	x0, x10
   3e40c:	bl	af10 <malloc@plt>
   3e410:	stur	x0, [x29, #-200]
   3e414:	ldur	x9, [x29, #-200]
   3e418:	cmp	x9, #0x0
   3e41c:	cset	w8, eq  // eq = none
   3e420:	and	w8, w8, #0x1
   3e424:	mov	w0, w8
   3e428:	sxtw	x9, w0
   3e42c:	cbz	x9, 3e440 <rpl_re_set_registers@@Base+0x114a4>
   3e430:	mov	w8, wzr
   3e434:	and	w8, w8, #0x1
   3e438:	sturb	w8, [x29, #-1]
   3e43c:	b	3ee14 <rpl_re_set_registers@@Base+0x11e78>
   3e440:	mov	w8, #0x1                   	// #1
   3e444:	sturb	w8, [x29, #-73]
   3e448:	ldur	x9, [x29, #-200]
   3e44c:	stur	x9, [x29, #-152]
   3e450:	ldur	x9, [x29, #-200]
   3e454:	mov	x10, #0x1800                	// #6144
   3e458:	add	x9, x9, x10
   3e45c:	stur	x9, [x29, #-160]
   3e460:	ldur	x9, [x29, #-24]
   3e464:	mov	x10, xzr
   3e468:	str	x10, [x9, #88]
   3e46c:	ldur	x9, [x29, #-24]
   3e470:	str	x10, [x9, #96]
   3e474:	ldur	x0, [x29, #-16]
   3e478:	ldur	x1, [x29, #-24]
   3e47c:	ldur	x2, [x29, #-152]
   3e480:	ldur	x3, [x29, #-160]
   3e484:	bl	3ee28 <rpl_re_set_registers@@Base+0x11e8c>
   3e488:	stur	x0, [x29, #-88]
   3e48c:	ldur	x9, [x29, #-88]
   3e490:	cmp	x9, #0x0
   3e494:	cset	w8, le
   3e498:	and	w8, w8, #0x1
   3e49c:	mov	w0, w8
   3e4a0:	sxtw	x9, w0
   3e4a4:	cbz	x9, 3e528 <rpl_re_set_registers@@Base+0x1158c>
   3e4a8:	ldurb	w8, [x29, #-73]
   3e4ac:	tbnz	w8, #0, 3e4b4 <rpl_re_set_registers@@Base+0x11518>
   3e4b0:	b	3e4bc <rpl_re_set_registers@@Base+0x11520>
   3e4b4:	ldur	x0, [x29, #-200]
   3e4b8:	bl	a930 <free@plt>
   3e4bc:	ldur	x8, [x29, #-88]
   3e4c0:	cbnz	x8, 3e518 <rpl_re_set_registers@@Base+0x1157c>
   3e4c4:	mov	x0, #0x8                   	// #8
   3e4c8:	mov	x1, #0x100                 	// #256
   3e4cc:	bl	b2e0 <calloc@plt>
   3e4d0:	ldur	x8, [x29, #-24]
   3e4d4:	str	x0, [x8, #88]
   3e4d8:	ldur	x8, [x29, #-24]
   3e4dc:	ldr	x8, [x8, #88]
   3e4e0:	cmp	x8, #0x0
   3e4e4:	cset	w9, eq  // eq = none
   3e4e8:	and	w9, w9, #0x1
   3e4ec:	mov	w0, w9
   3e4f0:	sxtw	x8, w0
   3e4f4:	cbz	x8, 3e508 <rpl_re_set_registers@@Base+0x1156c>
   3e4f8:	mov	w8, wzr
   3e4fc:	and	w8, w8, #0x1
   3e500:	sturb	w8, [x29, #-1]
   3e504:	b	3ee14 <rpl_re_set_registers@@Base+0x11e78>
   3e508:	mov	w8, #0x1                   	// #1
   3e50c:	and	w8, w8, #0x1
   3e510:	sturb	w8, [x29, #-1]
   3e514:	b	3ee14 <rpl_re_set_registers@@Base+0x11e78>
   3e518:	mov	w8, wzr
   3e51c:	and	w8, w8, #0x1
   3e520:	sturb	w8, [x29, #-1]
   3e524:	b	3ee14 <rpl_re_set_registers@@Base+0x11e78>
   3e528:	ldur	x8, [x29, #-88]
   3e52c:	add	x1, x8, #0x1
   3e530:	sub	x0, x29, #0x90
   3e534:	bl	36240 <rpl_re_set_registers@@Base+0x92a4>
   3e538:	stur	w0, [x29, #-28]
   3e53c:	ldur	w9, [x29, #-28]
   3e540:	cmp	w9, #0x0
   3e544:	cset	w9, ne  // ne = any
   3e548:	and	w9, w9, #0x1
   3e54c:	mov	w1, w9
   3e550:	sxtw	x8, w1
   3e554:	cbz	x8, 3e55c <rpl_re_set_registers@@Base+0x115c0>
   3e558:	b	3e624 <rpl_re_set_registers@@Base+0x11688>
   3e55c:	mov	x8, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   3e560:	movk	x8, #0xa855
   3e564:	movk	x8, #0xaaa, lsl #48
   3e568:	stur	x8, [x29, #-208]
   3e56c:	ldur	x8, [x29, #-208]
   3e570:	ldur	x9, [x29, #-88]
   3e574:	cmp	x8, x9
   3e578:	cset	w10, cc  // cc = lo, ul, last
   3e57c:	and	w10, w10, #0x1
   3e580:	mov	w0, w10
   3e584:	sxtw	x8, w0
   3e588:	cbz	x8, 3e590 <rpl_re_set_registers@@Base+0x115f4>
   3e58c:	b	3e624 <rpl_re_set_registers@@Base+0x11688>
   3e590:	ldur	x8, [x29, #-88]
   3e594:	mov	x9, #0x3                   	// #3
   3e598:	mul	x8, x8, x9
   3e59c:	mov	x9, #0x8                   	// #8
   3e5a0:	mul	x8, x8, x9
   3e5a4:	mov	x9, #0x3800                	// #14336
   3e5a8:	add	x8, x9, x8
   3e5ac:	cmp	x8, #0xfc0
   3e5b0:	b.cs	3e5ec <rpl_re_set_registers@@Base+0x11650>  // b.hs, b.nlast
   3e5b4:	ldur	x8, [x29, #-88]
   3e5b8:	mov	x9, #0x3                   	// #3
   3e5bc:	mul	x8, x8, x9
   3e5c0:	mov	x9, #0x8                   	// #8
   3e5c4:	mul	x8, x8, x9
   3e5c8:	mov	x9, #0x1                   	// #1
   3e5cc:	mul	x8, x8, x9
   3e5d0:	add	x8, x8, #0xf
   3e5d4:	and	x8, x8, #0xfffffffffffffff0
   3e5d8:	mov	x9, sp
   3e5dc:	subs	x8, x9, x8
   3e5e0:	mov	sp, x8
   3e5e4:	stur	x8, [x29, #-104]
   3e5e8:	b	3e6b0 <rpl_re_set_registers@@Base+0x11714>
   3e5ec:	ldur	x8, [x29, #-88]
   3e5f0:	mov	x9, #0x3                   	// #3
   3e5f4:	mul	x8, x8, x9
   3e5f8:	mov	x9, #0x8                   	// #8
   3e5fc:	mul	x0, x8, x9
   3e600:	bl	af10 <malloc@plt>
   3e604:	stur	x0, [x29, #-104]
   3e608:	ldur	x8, [x29, #-104]
   3e60c:	cmp	x8, #0x0
   3e610:	cset	w10, eq  // eq = none
   3e614:	and	w10, w10, #0x1
   3e618:	mov	w0, w10
   3e61c:	sxtw	x8, w0
   3e620:	cbz	x8, 3e6a8 <rpl_re_set_registers@@Base+0x1170c>
   3e624:	ldurb	w8, [x29, #-74]
   3e628:	tbnz	w8, #0, 3e630 <rpl_re_set_registers@@Base+0x11694>
   3e62c:	b	3e638 <rpl_re_set_registers@@Base+0x1169c>
   3e630:	ldur	x0, [x29, #-104]
   3e634:	bl	a930 <free@plt>
   3e638:	sub	x8, x29, #0x90
   3e63c:	ldr	x0, [x8, #16]
   3e640:	bl	a930 <free@plt>
   3e644:	stur	xzr, [x29, #-40]
   3e648:	ldur	x8, [x29, #-40]
   3e64c:	ldur	x9, [x29, #-88]
   3e650:	cmp	x8, x9
   3e654:	b.ge	3e684 <rpl_re_set_registers@@Base+0x116e8>  // b.tcont
   3e658:	ldur	x8, [x29, #-152]
   3e65c:	ldur	x9, [x29, #-40]
   3e660:	mov	x10, #0x18                  	// #24
   3e664:	mul	x9, x10, x9
   3e668:	add	x8, x8, x9
   3e66c:	ldr	x0, [x8, #16]
   3e670:	bl	a930 <free@plt>
   3e674:	ldur	x8, [x29, #-40]
   3e678:	add	x8, x8, #0x1
   3e67c:	stur	x8, [x29, #-40]
   3e680:	b	3e648 <rpl_re_set_registers@@Base+0x116ac>
   3e684:	ldurb	w8, [x29, #-73]
   3e688:	tbnz	w8, #0, 3e690 <rpl_re_set_registers@@Base+0x116f4>
   3e68c:	b	3e698 <rpl_re_set_registers@@Base+0x116fc>
   3e690:	ldur	x0, [x29, #-200]
   3e694:	bl	a930 <free@plt>
   3e698:	mov	w8, wzr
   3e69c:	and	w8, w8, #0x1
   3e6a0:	sturb	w8, [x29, #-1]
   3e6a4:	b	3ee14 <rpl_re_set_registers@@Base+0x11e78>
   3e6a8:	mov	w8, #0x1                   	// #1
   3e6ac:	sturb	w8, [x29, #-74]
   3e6b0:	ldur	x8, [x29, #-104]
   3e6b4:	ldur	x9, [x29, #-88]
   3e6b8:	mov	x10, #0x8                   	// #8
   3e6bc:	mul	x9, x10, x9
   3e6c0:	add	x8, x8, x9
   3e6c4:	stur	x8, [x29, #-112]
   3e6c8:	ldur	x8, [x29, #-112]
   3e6cc:	ldur	x9, [x29, #-88]
   3e6d0:	mul	x9, x10, x9
   3e6d4:	add	x8, x8, x9
   3e6d8:	stur	x8, [x29, #-120]
   3e6dc:	sub	x0, x29, #0xc0
   3e6e0:	bl	3f614 <rpl_re_set_registers@@Base+0x12678>
   3e6e4:	stur	xzr, [x29, #-40]
   3e6e8:	ldur	x8, [x29, #-40]
   3e6ec:	ldur	x9, [x29, #-88]
   3e6f0:	cmp	x8, x9
   3e6f4:	b.ge	3ea14 <rpl_re_set_registers@@Base+0x11a78>  // b.tcont
   3e6f8:	stur	xzr, [x29, #-136]
   3e6fc:	stur	xzr, [x29, #-48]
   3e700:	ldur	x8, [x29, #-48]
   3e704:	ldur	x9, [x29, #-152]
   3e708:	ldur	x10, [x29, #-40]
   3e70c:	mov	x11, #0x18                  	// #24
   3e710:	mul	x10, x11, x10
   3e714:	add	x9, x9, x10
   3e718:	ldr	x9, [x9, #8]
   3e71c:	cmp	x8, x9
   3e720:	b.ge	3e7b8 <rpl_re_set_registers@@Base+0x1181c>  // b.tcont
   3e724:	ldur	x8, [x29, #-16]
   3e728:	mov	x9, #0x18                  	// #24
   3e72c:	ldr	x8, [x8, #24]
   3e730:	ldur	x10, [x29, #-152]
   3e734:	ldur	x11, [x29, #-40]
   3e738:	mul	x9, x9, x11
   3e73c:	add	x9, x10, x9
   3e740:	ldr	x9, [x9, #16]
   3e744:	ldur	x10, [x29, #-48]
   3e748:	ldr	x9, [x9, x10, lsl #3]
   3e74c:	ldr	x8, [x8, x9, lsl #3]
   3e750:	stur	x8, [x29, #-216]
   3e754:	ldur	x8, [x29, #-216]
   3e758:	mov	x9, #0xffffffffffffffff    	// #-1
   3e75c:	cmp	x8, x9
   3e760:	b.eq	3e7a8 <rpl_re_set_registers@@Base+0x1180c>  // b.none
   3e764:	ldur	x8, [x29, #-16]
   3e768:	ldr	x8, [x8, #48]
   3e76c:	ldur	x9, [x29, #-216]
   3e770:	mov	x10, #0x18                  	// #24
   3e774:	mul	x9, x10, x9
   3e778:	add	x1, x8, x9
   3e77c:	sub	x0, x29, #0x90
   3e780:	bl	36848 <rpl_re_set_registers@@Base+0x98ac>
   3e784:	stur	w0, [x29, #-28]
   3e788:	ldur	w11, [x29, #-28]
   3e78c:	cmp	w11, #0x0
   3e790:	cset	w11, ne  // ne = any
   3e794:	and	w11, w11, #0x1
   3e798:	mov	w1, w11
   3e79c:	sxtw	x8, w1
   3e7a0:	cbz	x8, 3e7a8 <rpl_re_set_registers@@Base+0x1180c>
   3e7a4:	b	3e624 <rpl_re_set_registers@@Base+0x11688>
   3e7a8:	ldur	x8, [x29, #-48]
   3e7ac:	add	x8, x8, #0x1
   3e7b0:	stur	x8, [x29, #-48]
   3e7b4:	b	3e700 <rpl_re_set_registers@@Base+0x11764>
   3e7b8:	ldur	x1, [x29, #-16]
   3e7bc:	sub	x0, x29, #0x1c
   3e7c0:	sub	x2, x29, #0x90
   3e7c4:	mov	w8, wzr
   3e7c8:	mov	w3, w8
   3e7cc:	bl	3736c <rpl_re_set_registers@@Base+0xa3d0>
   3e7d0:	ldur	x9, [x29, #-104]
   3e7d4:	ldur	x10, [x29, #-40]
   3e7d8:	mov	x11, #0x8                   	// #8
   3e7dc:	mul	x10, x11, x10
   3e7e0:	add	x9, x9, x10
   3e7e4:	str	x0, [x9]
   3e7e8:	ldur	x9, [x29, #-104]
   3e7ec:	ldur	x10, [x29, #-40]
   3e7f0:	mul	x10, x11, x10
   3e7f4:	add	x9, x9, x10
   3e7f8:	ldr	x9, [x9]
   3e7fc:	mov	w8, #0x0                   	// #0
   3e800:	stur	w8, [x29, #-220]
   3e804:	cbnz	x9, 3e818 <rpl_re_set_registers@@Base+0x1187c>
   3e808:	ldur	w8, [x29, #-28]
   3e80c:	cmp	w8, #0x0
   3e810:	cset	w8, ne  // ne = any
   3e814:	stur	w8, [x29, #-220]
   3e818:	ldur	w8, [x29, #-220]
   3e81c:	and	w8, w8, #0x1
   3e820:	mov	w0, w8
   3e824:	sxtw	x9, w0
   3e828:	cbz	x9, 3e830 <rpl_re_set_registers@@Base+0x11894>
   3e82c:	b	3e624 <rpl_re_set_registers@@Base+0x11688>
   3e830:	ldur	x8, [x29, #-104]
   3e834:	ldur	x9, [x29, #-40]
   3e838:	mov	x10, #0x8                   	// #8
   3e83c:	mul	x9, x10, x9
   3e840:	add	x8, x8, x9
   3e844:	ldr	x8, [x8]
   3e848:	ldrb	w11, [x8, #104]
   3e84c:	mov	w12, #0x7                   	// #7
   3e850:	lsr	w11, w11, w12
   3e854:	and	w11, w11, #0xff
   3e858:	cbz	w11, 3e994 <rpl_re_set_registers@@Base+0x119f8>
   3e85c:	ldur	x1, [x29, #-16]
   3e860:	sub	x0, x29, #0x1c
   3e864:	sub	x2, x29, #0x90
   3e868:	mov	w3, #0x1                   	// #1
   3e86c:	bl	3736c <rpl_re_set_registers@@Base+0xa3d0>
   3e870:	ldur	x8, [x29, #-112]
   3e874:	ldur	x9, [x29, #-40]
   3e878:	mov	x10, #0x8                   	// #8
   3e87c:	mul	x9, x10, x9
   3e880:	add	x8, x8, x9
   3e884:	str	x0, [x8]
   3e888:	ldur	x8, [x29, #-112]
   3e88c:	ldur	x9, [x29, #-40]
   3e890:	mul	x9, x10, x9
   3e894:	add	x8, x8, x9
   3e898:	ldr	x8, [x8]
   3e89c:	mov	w11, #0x0                   	// #0
   3e8a0:	stur	w11, [x29, #-224]
   3e8a4:	cbnz	x8, 3e8b8 <rpl_re_set_registers@@Base+0x1191c>
   3e8a8:	ldur	w8, [x29, #-28]
   3e8ac:	cmp	w8, #0x0
   3e8b0:	cset	w8, ne  // ne = any
   3e8b4:	stur	w8, [x29, #-224]
   3e8b8:	ldur	w8, [x29, #-224]
   3e8bc:	and	w8, w8, #0x1
   3e8c0:	mov	w0, w8
   3e8c4:	sxtw	x9, w0
   3e8c8:	cbz	x9, 3e8d0 <rpl_re_set_registers@@Base+0x11934>
   3e8cc:	b	3e624 <rpl_re_set_registers@@Base+0x11688>
   3e8d0:	ldur	x8, [x29, #-104]
   3e8d4:	ldur	x9, [x29, #-40]
   3e8d8:	mov	x10, #0x8                   	// #8
   3e8dc:	mul	x9, x10, x9
   3e8e0:	add	x8, x8, x9
   3e8e4:	ldr	x8, [x8]
   3e8e8:	ldur	x9, [x29, #-112]
   3e8ec:	ldur	x11, [x29, #-40]
   3e8f0:	mul	x10, x10, x11
   3e8f4:	add	x9, x9, x10
   3e8f8:	ldr	x9, [x9]
   3e8fc:	cmp	x8, x9
   3e900:	b.eq	3e91c <rpl_re_set_registers@@Base+0x11980>  // b.none
   3e904:	ldur	x8, [x29, #-16]
   3e908:	ldr	w9, [x8, #180]
   3e90c:	cmp	w9, #0x1
   3e910:	b.le	3e91c <rpl_re_set_registers@@Base+0x11980>
   3e914:	mov	w8, #0x1                   	// #1
   3e918:	sturb	w8, [x29, #-53]
   3e91c:	ldur	x1, [x29, #-16]
   3e920:	sub	x0, x29, #0x1c
   3e924:	sub	x2, x29, #0x90
   3e928:	mov	w3, #0x2                   	// #2
   3e92c:	bl	3736c <rpl_re_set_registers@@Base+0xa3d0>
   3e930:	ldur	x8, [x29, #-120]
   3e934:	ldur	x9, [x29, #-40]
   3e938:	mov	x10, #0x8                   	// #8
   3e93c:	mul	x9, x10, x9
   3e940:	add	x8, x8, x9
   3e944:	str	x0, [x8]
   3e948:	ldur	x8, [x29, #-120]
   3e94c:	ldur	x9, [x29, #-40]
   3e950:	mul	x9, x10, x9
   3e954:	add	x8, x8, x9
   3e958:	ldr	x8, [x8]
   3e95c:	mov	w11, #0x0                   	// #0
   3e960:	stur	w11, [x29, #-228]
   3e964:	cbnz	x8, 3e978 <rpl_re_set_registers@@Base+0x119dc>
   3e968:	ldur	w8, [x29, #-28]
   3e96c:	cmp	w8, #0x0
   3e970:	cset	w8, ne  // ne = any
   3e974:	stur	w8, [x29, #-228]
   3e978:	ldur	w8, [x29, #-228]
   3e97c:	and	w8, w8, #0x1
   3e980:	mov	w0, w8
   3e984:	sxtw	x9, w0
   3e988:	cbz	x9, 3e990 <rpl_re_set_registers@@Base+0x119f4>
   3e98c:	b	3e624 <rpl_re_set_registers@@Base+0x11688>
   3e990:	b	3e9e8 <rpl_re_set_registers@@Base+0x11a4c>
   3e994:	ldur	x8, [x29, #-104]
   3e998:	ldur	x9, [x29, #-40]
   3e99c:	mov	x10, #0x8                   	// #8
   3e9a0:	mul	x9, x10, x9
   3e9a4:	add	x8, x8, x9
   3e9a8:	ldr	x8, [x8]
   3e9ac:	ldur	x9, [x29, #-112]
   3e9b0:	ldur	x11, [x29, #-40]
   3e9b4:	mul	x11, x10, x11
   3e9b8:	add	x9, x9, x11
   3e9bc:	str	x8, [x9]
   3e9c0:	ldur	x8, [x29, #-104]
   3e9c4:	ldur	x9, [x29, #-40]
   3e9c8:	mul	x9, x10, x9
   3e9cc:	add	x8, x8, x9
   3e9d0:	ldr	x8, [x8]
   3e9d4:	ldur	x9, [x29, #-120]
   3e9d8:	ldur	x11, [x29, #-40]
   3e9dc:	mul	x10, x10, x11
   3e9e0:	add	x9, x9, x10
   3e9e4:	str	x8, [x9]
   3e9e8:	ldur	x8, [x29, #-160]
   3e9ec:	ldur	x9, [x29, #-40]
   3e9f0:	mov	x10, #0x20                  	// #32
   3e9f4:	mul	x9, x10, x9
   3e9f8:	add	x1, x8, x9
   3e9fc:	sub	x0, x29, #0xc0
   3ea00:	bl	3f644 <rpl_re_set_registers@@Base+0x126a8>
   3ea04:	ldur	x8, [x29, #-40]
   3ea08:	add	x8, x8, #0x1
   3ea0c:	stur	x8, [x29, #-40]
   3ea10:	b	3e6e8 <rpl_re_set_registers@@Base+0x1174c>
   3ea14:	ldurb	w8, [x29, #-53]
   3ea18:	tbnz	w8, #0, 3eb90 <rpl_re_set_registers@@Base+0x11bf4>
   3ea1c:	mov	x0, #0x8                   	// #8
   3ea20:	mov	x1, #0x100                 	// #256
   3ea24:	bl	b2e0 <calloc@plt>
   3ea28:	ldur	x8, [x29, #-24]
   3ea2c:	str	x0, [x8, #88]
   3ea30:	stur	x0, [x29, #-96]
   3ea34:	ldur	x8, [x29, #-96]
   3ea38:	cmp	x8, #0x0
   3ea3c:	cset	w9, eq  // eq = none
   3ea40:	and	w9, w9, #0x1
   3ea44:	mov	w0, w9
   3ea48:	sxtw	x8, w0
   3ea4c:	cbz	x8, 3ea54 <rpl_re_set_registers@@Base+0x11ab8>
   3ea50:	b	3e624 <rpl_re_set_registers@@Base+0x11688>
   3ea54:	stur	xzr, [x29, #-40]
   3ea58:	ldur	x8, [x29, #-40]
   3ea5c:	cmp	x8, #0x4
   3ea60:	b.ge	3eb8c <rpl_re_set_registers@@Base+0x11bf0>  // b.tcont
   3ea64:	ldur	x8, [x29, #-40]
   3ea68:	mov	x9, #0x40                  	// #64
   3ea6c:	mul	x8, x8, x9
   3ea70:	stur	w8, [x29, #-52]
   3ea74:	ldur	x9, [x29, #-40]
   3ea78:	sub	x10, x29, #0xc0
   3ea7c:	ldr	x9, [x10, x9, lsl #3]
   3ea80:	stur	x9, [x29, #-64]
   3ea84:	mov	x9, #0x1                   	// #1
   3ea88:	stur	x9, [x29, #-72]
   3ea8c:	ldur	x8, [x29, #-64]
   3ea90:	cbz	x8, 3eb7c <rpl_re_set_registers@@Base+0x11be0>
   3ea94:	ldur	x8, [x29, #-64]
   3ea98:	and	x8, x8, #0x1
   3ea9c:	cbz	x8, 3eb54 <rpl_re_set_registers@@Base+0x11bb8>
   3eaa0:	stur	xzr, [x29, #-48]
   3eaa4:	ldur	x8, [x29, #-160]
   3eaa8:	ldur	x9, [x29, #-48]
   3eaac:	mov	x10, #0x20                  	// #32
   3eab0:	mul	x9, x10, x9
   3eab4:	add	x8, x8, x9
   3eab8:	ldur	x9, [x29, #-40]
   3eabc:	ldr	x8, [x8, x9, lsl #3]
   3eac0:	ldur	x9, [x29, #-72]
   3eac4:	and	x8, x8, x9
   3eac8:	cbnz	x8, 3eadc <rpl_re_set_registers@@Base+0x11b40>
   3eacc:	ldur	x8, [x29, #-48]
   3ead0:	add	x8, x8, #0x1
   3ead4:	stur	x8, [x29, #-48]
   3ead8:	b	3eaa4 <rpl_re_set_registers@@Base+0x11b08>
   3eadc:	ldur	x8, [x29, #-16]
   3eae0:	add	x8, x8, #0xb8
   3eae4:	ldur	x9, [x29, #-40]
   3eae8:	ldr	x8, [x8, x9, lsl #3]
   3eaec:	ldur	x9, [x29, #-72]
   3eaf0:	and	x8, x8, x9
   3eaf4:	cbz	x8, 3eb28 <rpl_re_set_registers@@Base+0x11b8c>
   3eaf8:	ldur	x8, [x29, #-112]
   3eafc:	ldur	x9, [x29, #-48]
   3eb00:	mov	x10, #0x8                   	// #8
   3eb04:	mul	x9, x10, x9
   3eb08:	add	x8, x8, x9
   3eb0c:	ldr	x8, [x8]
   3eb10:	ldur	x9, [x29, #-96]
   3eb14:	ldursw	x11, [x29, #-52]
   3eb18:	mul	x10, x10, x11
   3eb1c:	add	x9, x9, x10
   3eb20:	str	x8, [x9]
   3eb24:	b	3eb54 <rpl_re_set_registers@@Base+0x11bb8>
   3eb28:	ldur	x8, [x29, #-104]
   3eb2c:	ldur	x9, [x29, #-48]
   3eb30:	mov	x10, #0x8                   	// #8
   3eb34:	mul	x9, x10, x9
   3eb38:	add	x8, x8, x9
   3eb3c:	ldr	x8, [x8]
   3eb40:	ldur	x9, [x29, #-96]
   3eb44:	ldursw	x11, [x29, #-52]
   3eb48:	mul	x10, x10, x11
   3eb4c:	add	x9, x9, x10
   3eb50:	str	x8, [x9]
   3eb54:	ldur	x8, [x29, #-72]
   3eb58:	lsl	x8, x8, #1
   3eb5c:	stur	x8, [x29, #-72]
   3eb60:	ldur	x8, [x29, #-64]
   3eb64:	lsr	x8, x8, #1
   3eb68:	stur	x8, [x29, #-64]
   3eb6c:	ldur	w9, [x29, #-52]
   3eb70:	add	w9, w9, #0x1
   3eb74:	stur	w9, [x29, #-52]
   3eb78:	b	3ea8c <rpl_re_set_registers@@Base+0x11af0>
   3eb7c:	ldur	x8, [x29, #-40]
   3eb80:	add	x8, x8, #0x1
   3eb84:	stur	x8, [x29, #-40]
   3eb88:	b	3ea58 <rpl_re_set_registers@@Base+0x11abc>
   3eb8c:	b	3ece8 <rpl_re_set_registers@@Base+0x11d4c>
   3eb90:	mov	x0, #0x8                   	// #8
   3eb94:	mov	x1, #0x200                 	// #512
   3eb98:	bl	b2e0 <calloc@plt>
   3eb9c:	ldur	x8, [x29, #-24]
   3eba0:	str	x0, [x8, #96]
   3eba4:	stur	x0, [x29, #-96]
   3eba8:	ldur	x8, [x29, #-96]
   3ebac:	cmp	x8, #0x0
   3ebb0:	cset	w9, eq  // eq = none
   3ebb4:	and	w9, w9, #0x1
   3ebb8:	mov	w0, w9
   3ebbc:	sxtw	x8, w0
   3ebc0:	cbz	x8, 3ebc8 <rpl_re_set_registers@@Base+0x11c2c>
   3ebc4:	b	3e624 <rpl_re_set_registers@@Base+0x11688>
   3ebc8:	stur	xzr, [x29, #-40]
   3ebcc:	ldur	x8, [x29, #-40]
   3ebd0:	cmp	x8, #0x4
   3ebd4:	b.ge	3ece8 <rpl_re_set_registers@@Base+0x11d4c>  // b.tcont
   3ebd8:	ldur	x8, [x29, #-40]
   3ebdc:	mov	x9, #0x40                  	// #64
   3ebe0:	mul	x8, x8, x9
   3ebe4:	stur	w8, [x29, #-52]
   3ebe8:	ldur	x9, [x29, #-40]
   3ebec:	sub	x10, x29, #0xc0
   3ebf0:	ldr	x9, [x10, x9, lsl #3]
   3ebf4:	stur	x9, [x29, #-64]
   3ebf8:	mov	x9, #0x1                   	// #1
   3ebfc:	stur	x9, [x29, #-72]
   3ec00:	ldur	x8, [x29, #-64]
   3ec04:	cbz	x8, 3ecd8 <rpl_re_set_registers@@Base+0x11d3c>
   3ec08:	ldur	x8, [x29, #-64]
   3ec0c:	and	x8, x8, #0x1
   3ec10:	cbz	x8, 3ecb0 <rpl_re_set_registers@@Base+0x11d14>
   3ec14:	stur	xzr, [x29, #-48]
   3ec18:	ldur	x8, [x29, #-160]
   3ec1c:	ldur	x9, [x29, #-48]
   3ec20:	mov	x10, #0x20                  	// #32
   3ec24:	mul	x9, x10, x9
   3ec28:	add	x8, x8, x9
   3ec2c:	ldur	x9, [x29, #-40]
   3ec30:	ldr	x8, [x8, x9, lsl #3]
   3ec34:	ldur	x9, [x29, #-72]
   3ec38:	and	x8, x8, x9
   3ec3c:	cbnz	x8, 3ec50 <rpl_re_set_registers@@Base+0x11cb4>
   3ec40:	ldur	x8, [x29, #-48]
   3ec44:	add	x8, x8, #0x1
   3ec48:	stur	x8, [x29, #-48]
   3ec4c:	b	3ec18 <rpl_re_set_registers@@Base+0x11c7c>
   3ec50:	ldur	x8, [x29, #-104]
   3ec54:	ldur	x9, [x29, #-48]
   3ec58:	mov	x10, #0x8                   	// #8
   3ec5c:	mul	x9, x10, x9
   3ec60:	add	x8, x8, x9
   3ec64:	ldr	x8, [x8]
   3ec68:	ldur	x9, [x29, #-96]
   3ec6c:	ldursw	x11, [x29, #-52]
   3ec70:	mul	x11, x10, x11
   3ec74:	add	x9, x9, x11
   3ec78:	str	x8, [x9]
   3ec7c:	ldur	x8, [x29, #-112]
   3ec80:	ldur	x9, [x29, #-48]
   3ec84:	mul	x9, x10, x9
   3ec88:	add	x8, x8, x9
   3ec8c:	ldr	x8, [x8]
   3ec90:	ldur	x9, [x29, #-96]
   3ec94:	ldur	w12, [x29, #-52]
   3ec98:	add	w12, w12, #0x100
   3ec9c:	mov	w0, w12
   3eca0:	sxtw	x11, w0
   3eca4:	mul	x10, x10, x11
   3eca8:	add	x9, x9, x10
   3ecac:	str	x8, [x9]
   3ecb0:	ldur	x8, [x29, #-72]
   3ecb4:	lsl	x8, x8, #1
   3ecb8:	stur	x8, [x29, #-72]
   3ecbc:	ldur	x8, [x29, #-64]
   3ecc0:	lsr	x8, x8, #1
   3ecc4:	stur	x8, [x29, #-64]
   3ecc8:	ldur	w9, [x29, #-52]
   3eccc:	add	w9, w9, #0x1
   3ecd0:	stur	w9, [x29, #-52]
   3ecd4:	b	3ec00 <rpl_re_set_registers@@Base+0x11c64>
   3ecd8:	ldur	x8, [x29, #-40]
   3ecdc:	add	x8, x8, #0x1
   3ece0:	stur	x8, [x29, #-40]
   3ece4:	b	3ebcc <rpl_re_set_registers@@Base+0x11c30>
   3ece8:	sub	x0, x29, #0xc0
   3ecec:	mov	x1, #0xa                   	// #10
   3ecf0:	bl	3a128 <rpl_re_set_registers@@Base+0xd18c>
   3ecf4:	tbnz	w0, #0, 3ecfc <rpl_re_set_registers@@Base+0x11d60>
   3ecf8:	b	3ed94 <rpl_re_set_registers@@Base+0x11df8>
   3ecfc:	stur	xzr, [x29, #-48]
   3ed00:	ldur	x8, [x29, #-48]
   3ed04:	ldur	x9, [x29, #-88]
   3ed08:	cmp	x8, x9
   3ed0c:	b.ge	3ed94 <rpl_re_set_registers@@Base+0x11df8>  // b.tcont
   3ed10:	ldur	x8, [x29, #-160]
   3ed14:	ldur	x9, [x29, #-48]
   3ed18:	mov	x10, #0x20                  	// #32
   3ed1c:	mul	x9, x10, x9
   3ed20:	add	x0, x8, x9
   3ed24:	mov	x1, #0xa                   	// #10
   3ed28:	bl	3a128 <rpl_re_set_registers@@Base+0xd18c>
   3ed2c:	tbnz	w0, #0, 3ed34 <rpl_re_set_registers@@Base+0x11d98>
   3ed30:	b	3ed84 <rpl_re_set_registers@@Base+0x11de8>
   3ed34:	ldur	x8, [x29, #-120]
   3ed38:	ldur	x9, [x29, #-48]
   3ed3c:	mov	x10, #0x8                   	// #8
   3ed40:	mul	x9, x10, x9
   3ed44:	add	x8, x8, x9
   3ed48:	ldr	x8, [x8]
   3ed4c:	ldur	x9, [x29, #-96]
   3ed50:	str	x8, [x9, #80]
   3ed54:	ldurb	w11, [x29, #-53]
   3ed58:	tbnz	w11, #0, 3ed60 <rpl_re_set_registers@@Base+0x11dc4>
   3ed5c:	b	3ed80 <rpl_re_set_registers@@Base+0x11de4>
   3ed60:	ldur	x8, [x29, #-120]
   3ed64:	ldur	x9, [x29, #-48]
   3ed68:	mov	x10, #0x8                   	// #8
   3ed6c:	mul	x9, x10, x9
   3ed70:	add	x8, x8, x9
   3ed74:	ldr	x8, [x8]
   3ed78:	ldur	x9, [x29, #-96]
   3ed7c:	str	x8, [x9, #2128]
   3ed80:	b	3ed94 <rpl_re_set_registers@@Base+0x11df8>
   3ed84:	ldur	x8, [x29, #-48]
   3ed88:	add	x8, x8, #0x1
   3ed8c:	stur	x8, [x29, #-48]
   3ed90:	b	3ed00 <rpl_re_set_registers@@Base+0x11d64>
   3ed94:	ldurb	w8, [x29, #-74]
   3ed98:	tbnz	w8, #0, 3eda0 <rpl_re_set_registers@@Base+0x11e04>
   3ed9c:	b	3eda8 <rpl_re_set_registers@@Base+0x11e0c>
   3eda0:	ldur	x0, [x29, #-104]
   3eda4:	bl	a930 <free@plt>
   3eda8:	sub	x8, x29, #0x90
   3edac:	ldr	x0, [x8, #16]
   3edb0:	bl	a930 <free@plt>
   3edb4:	stur	xzr, [x29, #-40]
   3edb8:	ldur	x8, [x29, #-40]
   3edbc:	ldur	x9, [x29, #-88]
   3edc0:	cmp	x8, x9
   3edc4:	b.ge	3edf4 <rpl_re_set_registers@@Base+0x11e58>  // b.tcont
   3edc8:	ldur	x8, [x29, #-152]
   3edcc:	ldur	x9, [x29, #-40]
   3edd0:	mov	x10, #0x18                  	// #24
   3edd4:	mul	x9, x10, x9
   3edd8:	add	x8, x8, x9
   3eddc:	ldr	x0, [x8, #16]
   3ede0:	bl	a930 <free@plt>
   3ede4:	ldur	x8, [x29, #-40]
   3ede8:	add	x8, x8, #0x1
   3edec:	stur	x8, [x29, #-40]
   3edf0:	b	3edb8 <rpl_re_set_registers@@Base+0x11e1c>
   3edf4:	ldurb	w8, [x29, #-73]
   3edf8:	tbnz	w8, #0, 3ee00 <rpl_re_set_registers@@Base+0x11e64>
   3edfc:	b	3ee08 <rpl_re_set_registers@@Base+0x11e6c>
   3ee00:	ldur	x0, [x29, #-200]
   3ee04:	bl	a930 <free@plt>
   3ee08:	mov	w8, #0x1                   	// #1
   3ee0c:	and	w8, w8, #0x1
   3ee10:	sturb	w8, [x29, #-1]
   3ee14:	ldurb	w8, [x29, #-1]
   3ee18:	and	w0, w8, #0x1
   3ee1c:	mov	sp, x29
   3ee20:	ldp	x29, x30, [sp], #16
   3ee24:	ret
   3ee28:	sub	sp, sp, #0x130
   3ee2c:	stp	x29, x30, [sp, #272]
   3ee30:	str	x28, [sp, #288]
   3ee34:	add	x29, sp, #0x110
   3ee38:	sub	x8, x29, #0x70
   3ee3c:	stur	x0, [x29, #-16]
   3ee40:	stur	x1, [x29, #-24]
   3ee44:	stur	x2, [x29, #-32]
   3ee48:	stur	x3, [x29, #-40]
   3ee4c:	ldur	x9, [x29, #-24]
   3ee50:	add	x9, x9, #0x8
   3ee54:	stur	x9, [x29, #-120]
   3ee58:	mov	x0, x8
   3ee5c:	bl	3f614 <rpl_re_set_registers@@Base+0x12678>
   3ee60:	stur	xzr, [x29, #-80]
   3ee64:	stur	xzr, [x29, #-56]
   3ee68:	ldur	x8, [x29, #-56]
   3ee6c:	ldur	x9, [x29, #-120]
   3ee70:	ldr	x9, [x9, #8]
   3ee74:	cmp	x8, x9
   3ee78:	b.ge	3f5ac <rpl_re_set_registers@@Base+0x12610>  // b.tcont
   3ee7c:	ldur	x8, [x29, #-16]
   3ee80:	ldr	x8, [x8]
   3ee84:	ldur	x9, [x29, #-120]
   3ee88:	mov	x10, #0x10                  	// #16
   3ee8c:	ldr	x9, [x9, #16]
   3ee90:	ldur	x11, [x29, #-56]
   3ee94:	mov	x12, #0x8                   	// #8
   3ee98:	ldr	x9, [x9, x11, lsl #3]
   3ee9c:	mul	x9, x10, x9
   3eea0:	add	x8, x8, x9
   3eea4:	stur	x8, [x29, #-128]
   3eea8:	ldur	x8, [x29, #-128]
   3eeac:	ldr	w13, [x8, #8]
   3eeb0:	and	w13, w13, #0xff
   3eeb4:	stur	w13, [x29, #-132]
   3eeb8:	ldur	x8, [x29, #-128]
   3eebc:	ldr	w13, [x8, #8]
   3eec0:	lsr	w12, w13, w12
   3eec4:	and	w12, w12, #0x3ff
   3eec8:	str	w12, [sp, #136]
   3eecc:	ldur	w12, [x29, #-132]
   3eed0:	cmp	w12, #0x1
   3eed4:	b.ne	3eef0 <rpl_re_set_registers@@Base+0x11f54>  // b.any
   3eed8:	ldur	x8, [x29, #-128]
   3eedc:	ldrb	w9, [x8]
   3eee0:	mov	w1, w9
   3eee4:	sub	x0, x29, #0x70
   3eee8:	bl	332cc <rpl_re_set_registers@@Base+0x6330>
   3eeec:	b	3efe4 <rpl_re_set_registers@@Base+0x12048>
   3eef0:	ldur	w8, [x29, #-132]
   3eef4:	cmp	w8, #0x3
   3eef8:	b.ne	3ef10 <rpl_re_set_registers@@Base+0x11f74>  // b.any
   3eefc:	ldur	x8, [x29, #-128]
   3ef00:	ldr	x1, [x8]
   3ef04:	sub	x0, x29, #0x70
   3ef08:	bl	3f644 <rpl_re_set_registers@@Base+0x126a8>
   3ef0c:	b	3efe4 <rpl_re_set_registers@@Base+0x12048>
   3ef10:	ldur	w8, [x29, #-132]
   3ef14:	cmp	w8, #0x5
   3ef18:	b.ne	3ef88 <rpl_re_set_registers@@Base+0x11fec>  // b.any
   3ef1c:	ldur	x8, [x29, #-16]
   3ef20:	ldr	w9, [x8, #180]
   3ef24:	cmp	w9, #0x1
   3ef28:	b.le	3ef40 <rpl_re_set_registers@@Base+0x11fa4>
   3ef2c:	ldur	x8, [x29, #-16]
   3ef30:	ldr	x1, [x8, #120]
   3ef34:	sub	x0, x29, #0x70
   3ef38:	bl	3f644 <rpl_re_set_registers@@Base+0x126a8>
   3ef3c:	b	3ef48 <rpl_re_set_registers@@Base+0x11fac>
   3ef40:	sub	x0, x29, #0x70
   3ef44:	bl	3f6a4 <rpl_re_set_registers@@Base+0x12708>
   3ef48:	ldur	x8, [x29, #-16]
   3ef4c:	ldr	x8, [x8, #216]
   3ef50:	and	x8, x8, #0x40
   3ef54:	cbnz	x8, 3ef64 <rpl_re_set_registers@@Base+0x11fc8>
   3ef58:	sub	x0, x29, #0x70
   3ef5c:	mov	x1, #0xa                   	// #10
   3ef60:	bl	3f6d0 <rpl_re_set_registers@@Base+0x12734>
   3ef64:	ldur	x8, [x29, #-16]
   3ef68:	ldr	x8, [x8, #216]
   3ef6c:	and	x8, x8, #0x80
   3ef70:	cbz	x8, 3ef84 <rpl_re_set_registers@@Base+0x11fe8>
   3ef74:	sub	x0, x29, #0x70
   3ef78:	mov	x8, xzr
   3ef7c:	mov	x1, x8
   3ef80:	bl	3f6d0 <rpl_re_set_registers@@Base+0x12734>
   3ef84:	b	3efe4 <rpl_re_set_registers@@Base+0x12048>
   3ef88:	ldur	w8, [x29, #-132]
   3ef8c:	cmp	w8, #0x7
   3ef90:	b.ne	3efe0 <rpl_re_set_registers@@Base+0x12044>  // b.any
   3ef94:	mov	x8, #0xffffffffffffffff    	// #-1
   3ef98:	stur	x8, [x29, #-112]
   3ef9c:	stur	x8, [x29, #-104]
   3efa0:	ldur	x8, [x29, #-16]
   3efa4:	ldr	x8, [x8, #216]
   3efa8:	and	x8, x8, #0x40
   3efac:	cbnz	x8, 3efbc <rpl_re_set_registers@@Base+0x12020>
   3efb0:	sub	x0, x29, #0x70
   3efb4:	mov	x1, #0xa                   	// #10
   3efb8:	bl	3f6d0 <rpl_re_set_registers@@Base+0x12734>
   3efbc:	ldur	x8, [x29, #-16]
   3efc0:	ldr	x8, [x8, #216]
   3efc4:	and	x8, x8, #0x80
   3efc8:	cbz	x8, 3efdc <rpl_re_set_registers@@Base+0x12040>
   3efcc:	sub	x0, x29, #0x70
   3efd0:	mov	x8, xzr
   3efd4:	mov	x1, x8
   3efd8:	bl	3f6d0 <rpl_re_set_registers@@Base+0x12734>
   3efdc:	b	3efe4 <rpl_re_set_registers@@Base+0x12048>
   3efe0:	b	3f59c <rpl_re_set_registers@@Base+0x12600>
   3efe4:	ldr	w8, [sp, #136]
   3efe8:	cbz	w8, 3f2a4 <rpl_re_set_registers@@Base+0x12308>
   3efec:	ldr	w8, [sp, #136]
   3eff0:	and	w8, w8, #0x20
   3eff4:	cbz	w8, 3f03c <rpl_re_set_registers@@Base+0x120a0>
   3eff8:	sub	x8, x29, #0x70
   3effc:	mov	x0, x8
   3f000:	mov	x1, #0xa                   	// #10
   3f004:	str	x8, [sp, #16]
   3f008:	bl	3a128 <rpl_re_set_registers@@Base+0xd18c>
   3f00c:	and	w9, w0, #0x1
   3f010:	strb	w9, [sp, #135]
   3f014:	ldr	x0, [sp, #16]
   3f018:	bl	3f614 <rpl_re_set_registers@@Base+0x12678>
   3f01c:	ldrb	w9, [sp, #135]
   3f020:	tbnz	w9, #0, 3f028 <rpl_re_set_registers@@Base+0x1208c>
   3f024:	b	3f038 <rpl_re_set_registers@@Base+0x1209c>
   3f028:	sub	x0, x29, #0x70
   3f02c:	mov	x1, #0xa                   	// #10
   3f030:	bl	332cc <rpl_re_set_registers@@Base+0x6330>
   3f034:	b	3f03c <rpl_re_set_registers@@Base+0x120a0>
   3f038:	b	3f59c <rpl_re_set_registers@@Base+0x12600>
   3f03c:	ldr	w8, [sp, #136]
   3f040:	and	w8, w8, #0x80
   3f044:	cbz	w8, 3f054 <rpl_re_set_registers@@Base+0x120b8>
   3f048:	sub	x0, x29, #0x70
   3f04c:	bl	3f614 <rpl_re_set_registers@@Base+0x12678>
   3f050:	b	3f59c <rpl_re_set_registers@@Base+0x12600>
   3f054:	ldr	w8, [sp, #136]
   3f058:	and	w8, w8, #0x4
   3f05c:	cbz	w8, 3f17c <rpl_re_set_registers@@Base+0x121e0>
   3f060:	str	xzr, [sp, #120]
   3f064:	ldur	w8, [x29, #-132]
   3f068:	cmp	w8, #0x1
   3f06c:	b.ne	3f090 <rpl_re_set_registers@@Base+0x120f4>  // b.any
   3f070:	ldur	x8, [x29, #-128]
   3f074:	ldr	w9, [x8, #8]
   3f078:	lsr	w9, w9, #22
   3f07c:	and	w9, w9, #0x1
   3f080:	cbnz	w9, 3f090 <rpl_re_set_registers@@Base+0x120f4>
   3f084:	sub	x0, x29, #0x70
   3f088:	bl	3f614 <rpl_re_set_registers@@Base+0x12678>
   3f08c:	b	3f59c <rpl_re_set_registers@@Base+0x12600>
   3f090:	ldur	x8, [x29, #-16]
   3f094:	ldr	w9, [x8, #180]
   3f098:	cmp	w9, #0x1
   3f09c:	b.le	3f114 <rpl_re_set_registers@@Base+0x12178>
   3f0a0:	stur	xzr, [x29, #-64]
   3f0a4:	ldur	x8, [x29, #-64]
   3f0a8:	cmp	x8, #0x4
   3f0ac:	b.ge	3f110 <rpl_re_set_registers@@Base+0x12174>  // b.tcont
   3f0b0:	ldur	x8, [x29, #-16]
   3f0b4:	add	x8, x8, #0xb8
   3f0b8:	ldur	x9, [x29, #-64]
   3f0bc:	mov	x10, #0x8                   	// #8
   3f0c0:	ldr	x8, [x8, x9, lsl #3]
   3f0c4:	ldur	x9, [x29, #-16]
   3f0c8:	ldr	x9, [x9, #120]
   3f0cc:	ldur	x11, [x29, #-64]
   3f0d0:	ldr	x9, [x9, x11, lsl #3]
   3f0d4:	orn	x8, x8, x9
   3f0d8:	ldur	x9, [x29, #-64]
   3f0dc:	mul	x9, x10, x9
   3f0e0:	sub	x10, x29, #0x70
   3f0e4:	add	x9, x10, x9
   3f0e8:	ldr	x10, [x9]
   3f0ec:	and	x8, x10, x8
   3f0f0:	str	x8, [x9]
   3f0f4:	ldr	x9, [sp, #120]
   3f0f8:	orr	x8, x9, x8
   3f0fc:	str	x8, [sp, #120]
   3f100:	ldur	x8, [x29, #-64]
   3f104:	add	x8, x8, #0x1
   3f108:	stur	x8, [x29, #-64]
   3f10c:	b	3f0a4 <rpl_re_set_registers@@Base+0x12108>
   3f110:	b	3f170 <rpl_re_set_registers@@Base+0x121d4>
   3f114:	stur	xzr, [x29, #-64]
   3f118:	ldur	x8, [x29, #-64]
   3f11c:	cmp	x8, #0x4
   3f120:	b.ge	3f170 <rpl_re_set_registers@@Base+0x121d4>  // b.tcont
   3f124:	ldur	x8, [x29, #-16]
   3f128:	add	x8, x8, #0xb8
   3f12c:	ldur	x9, [x29, #-64]
   3f130:	mov	x10, #0x8                   	// #8
   3f134:	ldr	x8, [x8, x9, lsl #3]
   3f138:	ldur	x9, [x29, #-64]
   3f13c:	mul	x9, x10, x9
   3f140:	sub	x10, x29, #0x70
   3f144:	add	x9, x10, x9
   3f148:	ldr	x10, [x9]
   3f14c:	and	x8, x10, x8
   3f150:	str	x8, [x9]
   3f154:	ldr	x9, [sp, #120]
   3f158:	orr	x8, x9, x8
   3f15c:	str	x8, [sp, #120]
   3f160:	ldur	x8, [x29, #-64]
   3f164:	add	x8, x8, #0x1
   3f168:	stur	x8, [x29, #-64]
   3f16c:	b	3f118 <rpl_re_set_registers@@Base+0x1217c>
   3f170:	ldr	x8, [sp, #120]
   3f174:	cbnz	x8, 3f17c <rpl_re_set_registers@@Base+0x121e0>
   3f178:	b	3f59c <rpl_re_set_registers@@Base+0x12600>
   3f17c:	ldr	w8, [sp, #136]
   3f180:	and	w8, w8, #0x8
   3f184:	cbz	w8, 3f2a4 <rpl_re_set_registers@@Base+0x12308>
   3f188:	str	xzr, [sp, #112]
   3f18c:	ldur	w8, [x29, #-132]
   3f190:	cmp	w8, #0x1
   3f194:	b.ne	3f1b8 <rpl_re_set_registers@@Base+0x1221c>  // b.any
   3f198:	ldur	x8, [x29, #-128]
   3f19c:	ldr	w9, [x8, #8]
   3f1a0:	lsr	w9, w9, #22
   3f1a4:	and	w9, w9, #0x1
   3f1a8:	cbz	w9, 3f1b8 <rpl_re_set_registers@@Base+0x1221c>
   3f1ac:	sub	x0, x29, #0x70
   3f1b0:	bl	3f614 <rpl_re_set_registers@@Base+0x12678>
   3f1b4:	b	3f59c <rpl_re_set_registers@@Base+0x12600>
   3f1b8:	ldur	x8, [x29, #-16]
   3f1bc:	ldr	w9, [x8, #180]
   3f1c0:	cmp	w9, #0x1
   3f1c4:	b.le	3f23c <rpl_re_set_registers@@Base+0x122a0>
   3f1c8:	stur	xzr, [x29, #-64]
   3f1cc:	ldur	x8, [x29, #-64]
   3f1d0:	cmp	x8, #0x4
   3f1d4:	b.ge	3f238 <rpl_re_set_registers@@Base+0x1229c>  // b.tcont
   3f1d8:	ldur	x8, [x29, #-16]
   3f1dc:	add	x8, x8, #0xb8
   3f1e0:	ldur	x9, [x29, #-64]
   3f1e4:	mov	x10, #0x8                   	// #8
   3f1e8:	ldr	x8, [x8, x9, lsl #3]
   3f1ec:	ldur	x9, [x29, #-16]
   3f1f0:	ldr	x9, [x9, #120]
   3f1f4:	ldur	x11, [x29, #-64]
   3f1f8:	ldr	x9, [x9, x11, lsl #3]
   3f1fc:	and	x8, x8, x9
   3f200:	ldur	x9, [x29, #-64]
   3f204:	mul	x9, x10, x9
   3f208:	sub	x10, x29, #0x70
   3f20c:	add	x9, x10, x9
   3f210:	ldr	x10, [x9]
   3f214:	bic	x8, x10, x8
   3f218:	str	x8, [x9]
   3f21c:	ldr	x9, [sp, #112]
   3f220:	orr	x8, x9, x8
   3f224:	str	x8, [sp, #112]
   3f228:	ldur	x8, [x29, #-64]
   3f22c:	add	x8, x8, #0x1
   3f230:	stur	x8, [x29, #-64]
   3f234:	b	3f1cc <rpl_re_set_registers@@Base+0x12230>
   3f238:	b	3f298 <rpl_re_set_registers@@Base+0x122fc>
   3f23c:	stur	xzr, [x29, #-64]
   3f240:	ldur	x8, [x29, #-64]
   3f244:	cmp	x8, #0x4
   3f248:	b.ge	3f298 <rpl_re_set_registers@@Base+0x122fc>  // b.tcont
   3f24c:	ldur	x8, [x29, #-16]
   3f250:	add	x8, x8, #0xb8
   3f254:	ldur	x9, [x29, #-64]
   3f258:	mov	x10, #0x8                   	// #8
   3f25c:	ldr	x8, [x8, x9, lsl #3]
   3f260:	ldur	x9, [x29, #-64]
   3f264:	mul	x9, x10, x9
   3f268:	sub	x10, x29, #0x70
   3f26c:	add	x9, x10, x9
   3f270:	ldr	x10, [x9]
   3f274:	bic	x8, x10, x8
   3f278:	str	x8, [x9]
   3f27c:	ldr	x9, [sp, #112]
   3f280:	orr	x8, x9, x8
   3f284:	str	x8, [sp, #112]
   3f288:	ldur	x8, [x29, #-64]
   3f28c:	add	x8, x8, #0x1
   3f290:	stur	x8, [x29, #-64]
   3f294:	b	3f240 <rpl_re_set_registers@@Base+0x122a4>
   3f298:	ldr	x8, [sp, #112]
   3f29c:	cbnz	x8, 3f2a4 <rpl_re_set_registers@@Base+0x12308>
   3f2a0:	b	3f59c <rpl_re_set_registers@@Base+0x12600>
   3f2a4:	stur	xzr, [x29, #-64]
   3f2a8:	ldur	x8, [x29, #-64]
   3f2ac:	ldur	x9, [x29, #-80]
   3f2b0:	cmp	x8, x9
   3f2b4:	b.ge	3f510 <rpl_re_set_registers@@Base+0x12574>  // b.tcont
   3f2b8:	ldur	w8, [x29, #-132]
   3f2bc:	cmp	w8, #0x1
   3f2c0:	b.ne	3f2f0 <rpl_re_set_registers@@Base+0x12354>  // b.any
   3f2c4:	ldur	x8, [x29, #-40]
   3f2c8:	ldur	x9, [x29, #-64]
   3f2cc:	mov	x10, #0x20                  	// #32
   3f2d0:	mul	x9, x10, x9
   3f2d4:	add	x0, x8, x9
   3f2d8:	ldur	x8, [x29, #-128]
   3f2dc:	ldrb	w11, [x8]
   3f2e0:	mov	w1, w11
   3f2e4:	bl	3a128 <rpl_re_set_registers@@Base+0xd18c>
   3f2e8:	tbnz	w0, #0, 3f2f0 <rpl_re_set_registers@@Base+0x12354>
   3f2ec:	b	3f500 <rpl_re_set_registers@@Base+0x12564>
   3f2f0:	str	xzr, [sp, #40]
   3f2f4:	stur	xzr, [x29, #-72]
   3f2f8:	ldur	x8, [x29, #-72]
   3f2fc:	cmp	x8, #0x4
   3f300:	b.ge	3f358 <rpl_re_set_registers@@Base+0x123bc>  // b.tcont
   3f304:	ldur	x8, [x29, #-72]
   3f308:	sub	x9, x29, #0x70
   3f30c:	ldr	x8, [x9, x8, lsl #3]
   3f310:	ldur	x9, [x29, #-40]
   3f314:	ldur	x10, [x29, #-64]
   3f318:	mov	x11, #0x20                  	// #32
   3f31c:	mul	x10, x11, x10
   3f320:	add	x9, x9, x10
   3f324:	ldur	x10, [x29, #-72]
   3f328:	ldr	x9, [x9, x10, lsl #3]
   3f32c:	and	x8, x8, x9
   3f330:	ldur	x9, [x29, #-72]
   3f334:	add	x10, sp, #0x50
   3f338:	str	x8, [x10, x9, lsl #3]
   3f33c:	ldr	x9, [sp, #40]
   3f340:	orr	x8, x9, x8
   3f344:	str	x8, [sp, #40]
   3f348:	ldur	x8, [x29, #-72]
   3f34c:	add	x8, x8, #0x1
   3f350:	stur	x8, [x29, #-72]
   3f354:	b	3f2f8 <rpl_re_set_registers@@Base+0x1235c>
   3f358:	ldr	x8, [sp, #40]
   3f35c:	cbnz	x8, 3f364 <rpl_re_set_registers@@Base+0x123c8>
   3f360:	b	3f500 <rpl_re_set_registers@@Base+0x12564>
   3f364:	str	xzr, [sp, #24]
   3f368:	str	xzr, [sp, #32]
   3f36c:	stur	xzr, [x29, #-72]
   3f370:	ldur	x8, [x29, #-72]
   3f374:	cmp	x8, #0x4
   3f378:	b.ge	3f408 <rpl_re_set_registers@@Base+0x1246c>  // b.tcont
   3f37c:	ldur	x8, [x29, #-72]
   3f380:	sub	x9, x29, #0x70
   3f384:	ldr	x8, [x9, x8, lsl #3]
   3f388:	ldur	x10, [x29, #-40]
   3f38c:	ldur	x11, [x29, #-64]
   3f390:	mov	x12, #0x20                  	// #32
   3f394:	mul	x11, x12, x11
   3f398:	add	x10, x10, x11
   3f39c:	ldur	x11, [x29, #-72]
   3f3a0:	ldr	x10, [x10, x11, lsl #3]
   3f3a4:	bic	x8, x10, x8
   3f3a8:	ldur	x10, [x29, #-72]
   3f3ac:	add	x11, sp, #0x30
   3f3b0:	str	x8, [x11, x10, lsl #3]
   3f3b4:	ldr	x10, [sp, #32]
   3f3b8:	orr	x8, x10, x8
   3f3bc:	str	x8, [sp, #32]
   3f3c0:	ldur	x8, [x29, #-72]
   3f3c4:	ldr	x8, [x9, x8, lsl #3]
   3f3c8:	ldur	x10, [x29, #-40]
   3f3cc:	ldur	x11, [x29, #-64]
   3f3d0:	mul	x11, x12, x11
   3f3d4:	add	x10, x10, x11
   3f3d8:	ldur	x11, [x29, #-72]
   3f3dc:	ldr	x10, [x10, x11, lsl #3]
   3f3e0:	bic	x8, x8, x10
   3f3e4:	ldur	x10, [x29, #-72]
   3f3e8:	str	x8, [x9, x10, lsl #3]
   3f3ec:	ldr	x9, [sp, #24]
   3f3f0:	orr	x8, x9, x8
   3f3f4:	str	x8, [sp, #24]
   3f3f8:	ldur	x8, [x29, #-72]
   3f3fc:	add	x8, x8, #0x1
   3f400:	stur	x8, [x29, #-72]
   3f404:	b	3f370 <rpl_re_set_registers@@Base+0x123d4>
   3f408:	ldr	x8, [sp, #32]
   3f40c:	cbz	x8, 3f4a4 <rpl_re_set_registers@@Base+0x12508>
   3f410:	ldur	x8, [x29, #-40]
   3f414:	ldur	x9, [x29, #-80]
   3f418:	mov	x10, #0x20                  	// #32
   3f41c:	mul	x9, x10, x9
   3f420:	add	x0, x8, x9
   3f424:	add	x1, sp, #0x30
   3f428:	str	x10, [sp, #8]
   3f42c:	bl	3f724 <rpl_re_set_registers@@Base+0x12788>
   3f430:	ldur	x8, [x29, #-40]
   3f434:	ldur	x9, [x29, #-64]
   3f438:	ldr	x10, [sp, #8]
   3f43c:	mul	x9, x10, x9
   3f440:	add	x0, x8, x9
   3f444:	add	x1, sp, #0x50
   3f448:	bl	3f724 <rpl_re_set_registers@@Base+0x12788>
   3f44c:	ldur	x8, [x29, #-32]
   3f450:	ldur	x9, [x29, #-80]
   3f454:	mov	x10, #0x18                  	// #24
   3f458:	mul	x9, x10, x9
   3f45c:	add	x0, x8, x9
   3f460:	ldur	x8, [x29, #-32]
   3f464:	ldur	x9, [x29, #-64]
   3f468:	mul	x9, x10, x9
   3f46c:	add	x1, x8, x9
   3f470:	bl	3719c <rpl_re_set_registers@@Base+0xa200>
   3f474:	stur	w0, [x29, #-44]
   3f478:	ldur	w11, [x29, #-44]
   3f47c:	cmp	w11, #0x0
   3f480:	cset	w11, ne  // ne = any
   3f484:	and	w11, w11, #0x1
   3f488:	mov	w1, w11
   3f48c:	sxtw	x8, w1
   3f490:	cbz	x8, 3f498 <rpl_re_set_registers@@Base+0x124fc>
   3f494:	b	3f5b8 <rpl_re_set_registers@@Base+0x1261c>
   3f498:	ldur	x8, [x29, #-80]
   3f49c:	add	x8, x8, #0x1
   3f4a0:	stur	x8, [x29, #-80]
   3f4a4:	ldur	x8, [x29, #-32]
   3f4a8:	ldur	x9, [x29, #-64]
   3f4ac:	mov	x10, #0x18                  	// #24
   3f4b0:	mul	x9, x10, x9
   3f4b4:	add	x0, x8, x9
   3f4b8:	ldur	x8, [x29, #-120]
   3f4bc:	ldr	x8, [x8, #16]
   3f4c0:	ldur	x9, [x29, #-56]
   3f4c4:	ldr	x1, [x8, x9, lsl #3]
   3f4c8:	bl	36c60 <rpl_re_set_registers@@Base+0x9cc4>
   3f4cc:	mov	w11, #0x1                   	// #1
   3f4d0:	and	w11, w0, w11
   3f4d4:	sturb	w11, [x29, #-45]
   3f4d8:	ldurb	w11, [x29, #-45]
   3f4dc:	eor	w11, w11, #0x1
   3f4e0:	and	w11, w11, #0x1
   3f4e4:	mov	w1, w11
   3f4e8:	sxtw	x8, w1
   3f4ec:	cbz	x8, 3f4f4 <rpl_re_set_registers@@Base+0x12558>
   3f4f0:	b	3f5b8 <rpl_re_set_registers@@Base+0x1261c>
   3f4f4:	ldr	x8, [sp, #24]
   3f4f8:	cbnz	x8, 3f500 <rpl_re_set_registers@@Base+0x12564>
   3f4fc:	b	3f510 <rpl_re_set_registers@@Base+0x12574>
   3f500:	ldur	x8, [x29, #-64]
   3f504:	add	x8, x8, #0x1
   3f508:	stur	x8, [x29, #-64]
   3f50c:	b	3f2a8 <rpl_re_set_registers@@Base+0x1230c>
   3f510:	ldur	x8, [x29, #-64]
   3f514:	ldur	x9, [x29, #-80]
   3f518:	cmp	x8, x9
   3f51c:	b.ne	3f59c <rpl_re_set_registers@@Base+0x12600>  // b.any
   3f520:	ldur	x8, [x29, #-40]
   3f524:	ldur	x9, [x29, #-80]
   3f528:	mov	x10, #0x20                  	// #32
   3f52c:	mul	x9, x10, x9
   3f530:	add	x0, x8, x9
   3f534:	sub	x1, x29, #0x70
   3f538:	bl	3f724 <rpl_re_set_registers@@Base+0x12788>
   3f53c:	ldur	x8, [x29, #-32]
   3f540:	ldur	x9, [x29, #-80]
   3f544:	mov	x10, #0x18                  	// #24
   3f548:	mul	x9, x10, x9
   3f54c:	add	x0, x8, x9
   3f550:	ldur	x8, [x29, #-120]
   3f554:	ldr	x8, [x8, #16]
   3f558:	ldur	x9, [x29, #-56]
   3f55c:	ldr	x1, [x8, x9, lsl #3]
   3f560:	bl	35d90 <rpl_re_set_registers@@Base+0x8df4>
   3f564:	stur	w0, [x29, #-44]
   3f568:	ldur	w11, [x29, #-44]
   3f56c:	cmp	w11, #0x0
   3f570:	cset	w11, ne  // ne = any
   3f574:	and	w11, w11, #0x1
   3f578:	mov	w1, w11
   3f57c:	sxtw	x8, w1
   3f580:	cbz	x8, 3f588 <rpl_re_set_registers@@Base+0x125ec>
   3f584:	b	3f5b8 <rpl_re_set_registers@@Base+0x1261c>
   3f588:	ldur	x8, [x29, #-80]
   3f58c:	add	x8, x8, #0x1
   3f590:	stur	x8, [x29, #-80]
   3f594:	sub	x0, x29, #0x70
   3f598:	bl	3f614 <rpl_re_set_registers@@Base+0x12678>
   3f59c:	ldur	x8, [x29, #-56]
   3f5a0:	add	x8, x8, #0x1
   3f5a4:	stur	x8, [x29, #-56]
   3f5a8:	b	3ee68 <rpl_re_set_registers@@Base+0x11ecc>
   3f5ac:	ldur	x8, [x29, #-80]
   3f5b0:	stur	x8, [x29, #-8]
   3f5b4:	b	3f600 <rpl_re_set_registers@@Base+0x12664>
   3f5b8:	stur	xzr, [x29, #-64]
   3f5bc:	ldur	x8, [x29, #-64]
   3f5c0:	ldur	x9, [x29, #-80]
   3f5c4:	cmp	x8, x9
   3f5c8:	b.ge	3f5f8 <rpl_re_set_registers@@Base+0x1265c>  // b.tcont
   3f5cc:	ldur	x8, [x29, #-32]
   3f5d0:	ldur	x9, [x29, #-64]
   3f5d4:	mov	x10, #0x18                  	// #24
   3f5d8:	mul	x9, x10, x9
   3f5dc:	add	x8, x8, x9
   3f5e0:	ldr	x0, [x8, #16]
   3f5e4:	bl	a930 <free@plt>
   3f5e8:	ldur	x8, [x29, #-64]
   3f5ec:	add	x8, x8, #0x1
   3f5f0:	stur	x8, [x29, #-64]
   3f5f4:	b	3f5bc <rpl_re_set_registers@@Base+0x12620>
   3f5f8:	mov	x8, #0xffffffffffffffff    	// #-1
   3f5fc:	stur	x8, [x29, #-8]
   3f600:	ldur	x0, [x29, #-8]
   3f604:	ldr	x28, [sp, #288]
   3f608:	ldp	x29, x30, [sp, #272]
   3f60c:	add	sp, sp, #0x130
   3f610:	ret
   3f614:	sub	sp, sp, #0x20
   3f618:	stp	x29, x30, [sp, #16]
   3f61c:	add	x29, sp, #0x10
   3f620:	mov	x2, #0x20                  	// #32
   3f624:	str	x0, [sp, #8]
   3f628:	ldr	x0, [sp, #8]
   3f62c:	mov	w8, wzr
   3f630:	mov	w1, w8
   3f634:	bl	a970 <memset@plt>
   3f638:	ldp	x29, x30, [sp, #16]
   3f63c:	add	sp, sp, #0x20
   3f640:	ret
   3f644:	sub	sp, sp, #0x20
   3f648:	str	x0, [sp, #24]
   3f64c:	str	x1, [sp, #16]
   3f650:	str	wzr, [sp, #12]
   3f654:	ldr	w8, [sp, #12]
   3f658:	cmp	w8, #0x4
   3f65c:	b.ge	3f69c <rpl_re_set_registers@@Base+0x12700>  // b.tcont
   3f660:	ldr	x8, [sp, #16]
   3f664:	ldrsw	x9, [sp, #12]
   3f668:	mov	x10, #0x8                   	// #8
   3f66c:	ldr	x8, [x8, x9, lsl #3]
   3f670:	ldr	x9, [sp, #24]
   3f674:	ldrsw	x11, [sp, #12]
   3f678:	mul	x10, x10, x11
   3f67c:	add	x9, x9, x10
   3f680:	ldr	x10, [x9]
   3f684:	orr	x8, x10, x8
   3f688:	str	x8, [x9]
   3f68c:	ldr	w8, [sp, #12]
   3f690:	add	w8, w8, #0x1
   3f694:	str	w8, [sp, #12]
   3f698:	b	3f654 <rpl_re_set_registers@@Base+0x126b8>
   3f69c:	add	sp, sp, #0x20
   3f6a0:	ret
   3f6a4:	sub	sp, sp, #0x20
   3f6a8:	stp	x29, x30, [sp, #16]
   3f6ac:	add	x29, sp, #0x10
   3f6b0:	mov	x2, #0x20                  	// #32
   3f6b4:	str	x0, [sp, #8]
   3f6b8:	ldr	x0, [sp, #8]
   3f6bc:	mov	w1, #0xffffffff            	// #-1
   3f6c0:	bl	a970 <memset@plt>
   3f6c4:	ldp	x29, x30, [sp, #16]
   3f6c8:	add	sp, sp, #0x20
   3f6cc:	ret
   3f6d0:	sub	sp, sp, #0x10
   3f6d4:	mov	x8, #0x40                  	// #64
   3f6d8:	mov	x9, #0x1                   	// #1
   3f6dc:	str	x0, [sp, #8]
   3f6e0:	str	x1, [sp]
   3f6e4:	ldr	x10, [sp]
   3f6e8:	sdiv	x11, x10, x8
   3f6ec:	mul	x11, x11, x8
   3f6f0:	subs	x10, x10, x11
   3f6f4:	lsl	x9, x9, x10
   3f6f8:	ldr	x10, [sp, #8]
   3f6fc:	ldr	x11, [sp]
   3f700:	sdiv	x8, x11, x8
   3f704:	mov	x11, #0x8                   	// #8
   3f708:	mul	x8, x11, x8
   3f70c:	add	x8, x10, x8
   3f710:	ldr	x10, [x8]
   3f714:	bic	x9, x10, x9
   3f718:	str	x9, [x8]
   3f71c:	add	sp, sp, #0x10
   3f720:	ret
   3f724:	sub	sp, sp, #0x10
   3f728:	str	x0, [sp, #8]
   3f72c:	str	x1, [sp]
   3f730:	ldr	x8, [sp, #8]
   3f734:	ldr	x9, [sp]
   3f738:	ldr	q0, [x9]
   3f73c:	str	q0, [x8]
   3f740:	ldr	q0, [x9, #16]
   3f744:	str	q0, [x8, #16]
   3f748:	add	sp, sp, #0x10
   3f74c:	ret
   3f750:	sub	sp, sp, #0x30
   3f754:	str	x0, [sp, #32]
   3f758:	str	x1, [sp, #24]
   3f75c:	str	w2, [sp, #20]
   3f760:	ldr	x8, [sp, #32]
   3f764:	ldr	x8, [x8]
   3f768:	ldr	x9, [sp, #24]
   3f76c:	mov	x10, #0x10                  	// #16
   3f770:	mul	x9, x10, x9
   3f774:	add	x8, x8, x9
   3f778:	mov	x9, #0x8                   	// #8
   3f77c:	ldr	w11, [x8, #8]
   3f780:	and	w11, w11, #0xff
   3f784:	str	w11, [sp, #16]
   3f788:	ldr	x8, [sp, #32]
   3f78c:	ldr	x8, [x8]
   3f790:	ldr	x12, [sp, #24]
   3f794:	mul	x10, x10, x12
   3f798:	add	x8, x8, x10
   3f79c:	ldr	w11, [x8, #8]
   3f7a0:	lsr	w9, w11, w9
   3f7a4:	and	w9, w9, #0x3ff
   3f7a8:	str	w9, [sp, #12]
   3f7ac:	ldr	w9, [sp, #16]
   3f7b0:	cmp	w9, #0x2
   3f7b4:	b.eq	3f7c8 <rpl_re_set_registers@@Base+0x1282c>  // b.none
   3f7b8:	mov	w8, wzr
   3f7bc:	and	w8, w8, #0x1
   3f7c0:	strb	w8, [sp, #47]
   3f7c4:	b	3f85c <rpl_re_set_registers@@Base+0x128c0>
   3f7c8:	ldr	w8, [sp, #12]
   3f7cc:	cbnz	w8, 3f7e0 <rpl_re_set_registers@@Base+0x12844>
   3f7d0:	mov	w8, #0x1                   	// #1
   3f7d4:	and	w8, w8, #0x1
   3f7d8:	strb	w8, [sp, #47]
   3f7dc:	b	3f85c <rpl_re_set_registers@@Base+0x128c0>
   3f7e0:	ldr	w8, [sp, #12]
   3f7e4:	and	w8, w8, #0x4
   3f7e8:	cbz	w8, 3f7f8 <rpl_re_set_registers@@Base+0x1285c>
   3f7ec:	ldr	w8, [sp, #20]
   3f7f0:	and	w8, w8, #0x1
   3f7f4:	cbz	w8, 3f840 <rpl_re_set_registers@@Base+0x128a4>
   3f7f8:	ldr	w8, [sp, #12]
   3f7fc:	and	w8, w8, #0x8
   3f800:	cbz	w8, 3f810 <rpl_re_set_registers@@Base+0x12874>
   3f804:	ldr	w8, [sp, #20]
   3f808:	and	w8, w8, #0x1
   3f80c:	cbnz	w8, 3f840 <rpl_re_set_registers@@Base+0x128a4>
   3f810:	ldr	w8, [sp, #12]
   3f814:	and	w8, w8, #0x20
   3f818:	cbz	w8, 3f828 <rpl_re_set_registers@@Base+0x1288c>
   3f81c:	ldr	w8, [sp, #20]
   3f820:	and	w8, w8, #0x2
   3f824:	cbz	w8, 3f840 <rpl_re_set_registers@@Base+0x128a4>
   3f828:	ldr	w8, [sp, #12]
   3f82c:	and	w8, w8, #0x80
   3f830:	cbz	w8, 3f850 <rpl_re_set_registers@@Base+0x128b4>
   3f834:	ldr	w8, [sp, #20]
   3f838:	and	w8, w8, #0x8
   3f83c:	cbnz	w8, 3f850 <rpl_re_set_registers@@Base+0x128b4>
   3f840:	mov	w8, wzr
   3f844:	and	w8, w8, #0x1
   3f848:	strb	w8, [sp, #47]
   3f84c:	b	3f85c <rpl_re_set_registers@@Base+0x128c0>
   3f850:	mov	w8, #0x1                   	// #1
   3f854:	and	w8, w8, #0x1
   3f858:	strb	w8, [sp, #47]
   3f85c:	ldrb	w8, [sp, #47]
   3f860:	and	w0, w8, #0x1
   3f864:	add	sp, sp, #0x30
   3f868:	ret
   3f86c:	sub	sp, sp, #0x30
   3f870:	str	x0, [sp, #40]
   3f874:	str	x1, [sp, #32]
   3f878:	str	x2, [sp, #24]
   3f87c:	str	x3, [sp, #16]
   3f880:	str	x4, [sp, #8]
   3f884:	ldr	x8, [sp, #32]
   3f888:	ldr	x9, [sp, #40]
   3f88c:	str	x8, [x9]
   3f890:	ldr	x8, [sp, #24]
   3f894:	ldr	x9, [sp, #40]
   3f898:	str	x8, [x9, #8]
   3f89c:	ldr	x8, [sp, #16]
   3f8a0:	ldr	x9, [sp, #40]
   3f8a4:	str	x8, [x9, #16]
   3f8a8:	ldr	x8, [sp, #8]
   3f8ac:	ldr	x9, [sp, #40]
   3f8b0:	str	x8, [x9, #24]
   3f8b4:	ldr	x8, [sp, #40]
   3f8b8:	str	xzr, [x8, #32]
   3f8bc:	str	xzr, [x8, #40]
   3f8c0:	str	xzr, [x8, #48]
   3f8c4:	add	sp, sp, #0x30
   3f8c8:	ret
   3f8cc:	sub	sp, sp, #0x60
   3f8d0:	stp	x29, x30, [sp, #80]
   3f8d4:	add	x29, sp, #0x50
   3f8d8:	add	x8, sp, #0x10
   3f8dc:	stur	x0, [x29, #-16]
   3f8e0:	stur	x1, [x29, #-24]
   3f8e4:	stur	wzr, [x29, #-32]
   3f8e8:	ldur	x9, [x29, #-24]
   3f8ec:	ldr	x9, [x9, #24]
   3f8f0:	str	x9, [sp, #40]
   3f8f4:	ldur	x9, [x29, #-24]
   3f8f8:	ldr	x1, [x9, #16]
   3f8fc:	mov	x0, x8
   3f900:	bl	35d90 <rpl_re_set_registers@@Base+0x8df4>
   3f904:	stur	w0, [x29, #-28]
   3f908:	ldur	w10, [x29, #-28]
   3f90c:	cmp	w10, #0x0
   3f910:	cset	w10, ne  // ne = any
   3f914:	and	w10, w10, #0x1
   3f918:	mov	w1, w10
   3f91c:	sxtw	x8, w1
   3f920:	cbz	x8, 3f930 <rpl_re_set_registers@@Base+0x12994>
   3f924:	ldur	w8, [x29, #-28]
   3f928:	stur	w8, [x29, #-4]
   3f92c:	b	3fabc <rpl_re_set_registers@@Base+0x12b20>
   3f930:	ldur	x0, [x29, #-16]
   3f934:	ldur	x1, [x29, #-24]
   3f938:	ldr	x2, [sp, #40]
   3f93c:	add	x3, sp, #0x10
   3f940:	bl	3fc54 <rpl_re_set_registers@@Base+0x12cb8>
   3f944:	stur	w0, [x29, #-28]
   3f948:	ldur	w8, [x29, #-28]
   3f94c:	cmp	w8, #0x0
   3f950:	cset	w8, ne  // ne = any
   3f954:	and	w8, w8, #0x1
   3f958:	mov	w1, w8
   3f95c:	sxtw	x9, w1
   3f960:	cbz	x9, 3f968 <rpl_re_set_registers@@Base+0x129cc>
   3f964:	b	3faa8 <rpl_re_set_registers@@Base+0x12b0c>
   3f968:	ldr	x8, [sp, #40]
   3f96c:	cmp	x8, #0x0
   3f970:	cset	w9, le
   3f974:	tbnz	w9, #0, 3faa4 <rpl_re_set_registers@@Base+0x12b08>
   3f978:	ldur	x8, [x29, #-24]
   3f97c:	ldr	x8, [x8]
   3f980:	ldr	x9, [sp, #40]
   3f984:	mov	x10, #0x8                   	// #8
   3f988:	mul	x9, x10, x9
   3f98c:	add	x8, x8, x9
   3f990:	ldr	x8, [x8]
   3f994:	cbnz	x8, 3f9a8 <rpl_re_set_registers@@Base+0x12a0c>
   3f998:	ldur	w8, [x29, #-32]
   3f99c:	add	w8, w8, #0x1
   3f9a0:	str	w8, [sp, #12]
   3f9a4:	b	3f9b0 <rpl_re_set_registers@@Base+0x12a14>
   3f9a8:	mov	w8, wzr
   3f9ac:	str	w8, [sp, #12]
   3f9b0:	ldr	w8, [sp, #12]
   3f9b4:	stur	w8, [x29, #-32]
   3f9b8:	ldur	w8, [x29, #-32]
   3f9bc:	ldur	x9, [x29, #-16]
   3f9c0:	ldr	w10, [x9, #224]
   3f9c4:	cmp	w8, w10
   3f9c8:	b.le	3fa00 <rpl_re_set_registers@@Base+0x12a64>
   3f9cc:	ldur	x8, [x29, #-24]
   3f9d0:	ldr	x0, [x8]
   3f9d4:	ldr	x8, [sp, #40]
   3f9d8:	mov	x9, #0x8                   	// #8
   3f9dc:	mul	x2, x9, x8
   3f9e0:	mov	w10, wzr
   3f9e4:	mov	w1, w10
   3f9e8:	bl	a970 <memset@plt>
   3f9ec:	add	x8, sp, #0x10
   3f9f0:	ldr	x0, [x8, #16]
   3f9f4:	bl	a930 <free@plt>
   3f9f8:	stur	wzr, [x29, #-4]
   3f9fc:	b	3fabc <rpl_re_set_registers@@Base+0x12b20>
   3fa00:	mov	x8, #0x8                   	// #8
   3fa04:	str	xzr, [sp, #24]
   3fa08:	ldr	x9, [sp, #40]
   3fa0c:	subs	x9, x9, #0x1
   3fa10:	str	x9, [sp, #40]
   3fa14:	ldur	x9, [x29, #-16]
   3fa18:	ldr	x9, [x9, #184]
   3fa1c:	ldr	x10, [sp, #40]
   3fa20:	mul	x8, x8, x10
   3fa24:	add	x8, x9, x8
   3fa28:	ldr	x8, [x8]
   3fa2c:	cbz	x8, 3fa68 <rpl_re_set_registers@@Base+0x12acc>
   3fa30:	ldur	x0, [x29, #-16]
   3fa34:	ldur	x1, [x29, #-24]
   3fa38:	ldr	x2, [sp, #40]
   3fa3c:	add	x3, sp, #0x10
   3fa40:	bl	3fe8c <rpl_re_set_registers@@Base+0x12ef0>
   3fa44:	stur	w0, [x29, #-28]
   3fa48:	ldur	w8, [x29, #-28]
   3fa4c:	cmp	w8, #0x0
   3fa50:	cset	w8, ne  // ne = any
   3fa54:	and	w8, w8, #0x1
   3fa58:	mov	w1, w8
   3fa5c:	sxtw	x9, w1
   3fa60:	cbz	x9, 3fa68 <rpl_re_set_registers@@Base+0x12acc>
   3fa64:	b	3faa8 <rpl_re_set_registers@@Base+0x12b0c>
   3fa68:	ldur	x0, [x29, #-16]
   3fa6c:	ldur	x1, [x29, #-24]
   3fa70:	ldr	x2, [sp, #40]
   3fa74:	add	x3, sp, #0x10
   3fa78:	bl	3fc54 <rpl_re_set_registers@@Base+0x12cb8>
   3fa7c:	stur	w0, [x29, #-28]
   3fa80:	ldur	w8, [x29, #-28]
   3fa84:	cmp	w8, #0x0
   3fa88:	cset	w8, ne  // ne = any
   3fa8c:	and	w8, w8, #0x1
   3fa90:	mov	w1, w8
   3fa94:	sxtw	x9, w1
   3fa98:	cbz	x9, 3faa0 <rpl_re_set_registers@@Base+0x12b04>
   3fa9c:	b	3faa8 <rpl_re_set_registers@@Base+0x12b0c>
   3faa0:	b	3f968 <rpl_re_set_registers@@Base+0x129cc>
   3faa4:	stur	wzr, [x29, #-28]
   3faa8:	add	x8, sp, #0x10
   3faac:	ldr	x0, [x8, #16]
   3fab0:	bl	a930 <free@plt>
   3fab4:	ldur	w9, [x29, #-28]
   3fab8:	stur	w9, [x29, #-4]
   3fabc:	ldur	w0, [x29, #-4]
   3fac0:	ldp	x29, x30, [sp, #80]
   3fac4:	add	sp, sp, #0x60
   3fac8:	ret
   3facc:	sub	sp, sp, #0x70
   3fad0:	stp	x29, x30, [sp, #96]
   3fad4:	add	x29, sp, #0x60
   3fad8:	stur	x0, [x29, #-16]
   3fadc:	stur	x1, [x29, #-24]
   3fae0:	stur	x2, [x29, #-32]
   3fae4:	stur	x3, [x29, #-40]
   3fae8:	str	xzr, [sp, #48]
   3faec:	ldr	x8, [sp, #48]
   3faf0:	ldur	x9, [x29, #-40]
   3faf4:	cmp	x8, x9
   3faf8:	b.ge	3fc40 <rpl_re_set_registers@@Base+0x12ca4>  // b.tcont
   3fafc:	ldur	x8, [x29, #-24]
   3fb00:	ldr	x9, [sp, #48]
   3fb04:	mov	x10, #0x8                   	// #8
   3fb08:	mul	x9, x10, x9
   3fb0c:	add	x8, x8, x9
   3fb10:	ldr	x8, [x8]
   3fb14:	cbnz	x8, 3fb48 <rpl_re_set_registers@@Base+0x12bac>
   3fb18:	ldur	x8, [x29, #-32]
   3fb1c:	ldr	x9, [sp, #48]
   3fb20:	mov	x10, #0x8                   	// #8
   3fb24:	mul	x9, x10, x9
   3fb28:	add	x8, x8, x9
   3fb2c:	ldr	x8, [x8]
   3fb30:	ldur	x9, [x29, #-24]
   3fb34:	ldr	x11, [sp, #48]
   3fb38:	mul	x10, x10, x11
   3fb3c:	add	x9, x9, x10
   3fb40:	str	x8, [x9]
   3fb44:	b	3fc30 <rpl_re_set_registers@@Base+0x12c94>
   3fb48:	ldur	x8, [x29, #-32]
   3fb4c:	ldr	x9, [sp, #48]
   3fb50:	mov	x10, #0x8                   	// #8
   3fb54:	mul	x9, x10, x9
   3fb58:	add	x8, x8, x9
   3fb5c:	ldr	x8, [x8]
   3fb60:	cbz	x8, 3fc30 <rpl_re_set_registers@@Base+0x12c94>
   3fb64:	ldur	x8, [x29, #-24]
   3fb68:	ldr	x9, [sp, #48]
   3fb6c:	mov	x10, #0x8                   	// #8
   3fb70:	mul	x9, x10, x9
   3fb74:	add	x8, x8, x9
   3fb78:	ldr	x8, [x8]
   3fb7c:	add	x1, x8, #0x8
   3fb80:	ldur	x8, [x29, #-32]
   3fb84:	ldr	x9, [sp, #48]
   3fb88:	mul	x9, x10, x9
   3fb8c:	add	x8, x8, x9
   3fb90:	ldr	x8, [x8]
   3fb94:	add	x2, x8, #0x8
   3fb98:	add	x0, sp, #0x10
   3fb9c:	bl	3b72c <rpl_re_set_registers@@Base+0xe790>
   3fba0:	str	w0, [sp, #44]
   3fba4:	ldr	w11, [sp, #44]
   3fba8:	cmp	w11, #0x0
   3fbac:	cset	w11, ne  // ne = any
   3fbb0:	and	w11, w11, #0x1
   3fbb4:	mov	w1, w11
   3fbb8:	sxtw	x8, w1
   3fbbc:	cbz	x8, 3fbcc <rpl_re_set_registers@@Base+0x12c30>
   3fbc0:	ldr	w8, [sp, #44]
   3fbc4:	stur	w8, [x29, #-4]
   3fbc8:	b	3fc44 <rpl_re_set_registers@@Base+0x12ca8>
   3fbcc:	ldur	x1, [x29, #-16]
   3fbd0:	add	x0, sp, #0x2c
   3fbd4:	add	x8, sp, #0x10
   3fbd8:	mov	x2, x8
   3fbdc:	str	x8, [sp, #8]
   3fbe0:	bl	3d47c <rpl_re_set_registers@@Base+0x104e0>
   3fbe4:	ldur	x8, [x29, #-24]
   3fbe8:	ldr	x9, [sp, #48]
   3fbec:	mov	x10, #0x8                   	// #8
   3fbf0:	mul	x9, x10, x9
   3fbf4:	add	x8, x8, x9
   3fbf8:	str	x0, [x8]
   3fbfc:	ldr	x8, [sp, #8]
   3fc00:	ldr	x0, [x8, #16]
   3fc04:	bl	a930 <free@plt>
   3fc08:	ldr	w11, [sp, #44]
   3fc0c:	cmp	w11, #0x0
   3fc10:	cset	w11, ne  // ne = any
   3fc14:	and	w11, w11, #0x1
   3fc18:	mov	w0, w11
   3fc1c:	sxtw	x8, w0
   3fc20:	cbz	x8, 3fc30 <rpl_re_set_registers@@Base+0x12c94>
   3fc24:	ldr	w8, [sp, #44]
   3fc28:	stur	w8, [x29, #-4]
   3fc2c:	b	3fc44 <rpl_re_set_registers@@Base+0x12ca8>
   3fc30:	ldr	x8, [sp, #48]
   3fc34:	add	x8, x8, #0x1
   3fc38:	str	x8, [sp, #48]
   3fc3c:	b	3faec <rpl_re_set_registers@@Base+0x12b50>
   3fc40:	stur	wzr, [x29, #-4]
   3fc44:	ldur	w0, [x29, #-4]
   3fc48:	ldp	x29, x30, [sp, #96]
   3fc4c:	add	sp, sp, #0x70
   3fc50:	ret
   3fc54:	sub	sp, sp, #0x60
   3fc58:	stp	x29, x30, [sp, #80]
   3fc5c:	add	x29, sp, #0x50
   3fc60:	stur	x0, [x29, #-16]
   3fc64:	stur	x1, [x29, #-24]
   3fc68:	stur	x2, [x29, #-32]
   3fc6c:	str	x3, [sp, #40]
   3fc70:	ldur	x8, [x29, #-16]
   3fc74:	ldr	x8, [x8, #152]
   3fc78:	str	x8, [sp, #32]
   3fc7c:	str	wzr, [sp, #28]
   3fc80:	ldur	x8, [x29, #-16]
   3fc84:	ldr	x8, [x8, #184]
   3fc88:	ldur	x9, [x29, #-32]
   3fc8c:	mov	x10, #0x8                   	// #8
   3fc90:	mul	x9, x10, x9
   3fc94:	add	x8, x8, x9
   3fc98:	ldr	x8, [x8]
   3fc9c:	cbnz	x8, 3fcac <rpl_re_set_registers@@Base+0x12d10>
   3fca0:	mov	x8, xzr
   3fca4:	str	x8, [sp, #8]
   3fca8:	b	3fcd0 <rpl_re_set_registers@@Base+0x12d34>
   3fcac:	ldur	x8, [x29, #-16]
   3fcb0:	ldr	x8, [x8, #184]
   3fcb4:	ldur	x9, [x29, #-32]
   3fcb8:	mov	x10, #0x8                   	// #8
   3fcbc:	mul	x9, x10, x9
   3fcc0:	add	x8, x8, x9
   3fcc4:	ldr	x8, [x8]
   3fcc8:	add	x8, x8, #0x8
   3fccc:	str	x8, [sp, #8]
   3fcd0:	ldr	x8, [sp, #8]
   3fcd4:	str	x8, [sp, #16]
   3fcd8:	ldr	x8, [sp, #40]
   3fcdc:	ldr	x8, [x8, #8]
   3fce0:	cbnz	x8, 3fd08 <rpl_re_set_registers@@Base+0x12d6c>
   3fce4:	ldur	x8, [x29, #-24]
   3fce8:	ldr	x8, [x8]
   3fcec:	ldur	x9, [x29, #-32]
   3fcf0:	mov	x10, #0x8                   	// #8
   3fcf4:	mul	x9, x10, x9
   3fcf8:	add	x8, x8, x9
   3fcfc:	mov	x9, xzr
   3fd00:	str	x9, [x8]
   3fd04:	b	3fdfc <rpl_re_set_registers@@Base+0x12e60>
   3fd08:	ldr	x8, [sp, #16]
   3fd0c:	cbz	x8, 3fda8 <rpl_re_set_registers@@Base+0x12e0c>
   3fd10:	ldr	x0, [sp, #32]
   3fd14:	ldr	x1, [sp, #40]
   3fd18:	ldr	x2, [sp, #16]
   3fd1c:	bl	400ac <rpl_re_set_registers@@Base+0x13110>
   3fd20:	str	w0, [sp, #28]
   3fd24:	ldr	w8, [sp, #28]
   3fd28:	cmp	w8, #0x0
   3fd2c:	cset	w8, ne  // ne = any
   3fd30:	and	w8, w8, #0x1
   3fd34:	mov	w1, w8
   3fd38:	sxtw	x9, w1
   3fd3c:	cbz	x9, 3fd4c <rpl_re_set_registers@@Base+0x12db0>
   3fd40:	ldr	w8, [sp, #28]
   3fd44:	stur	w8, [x29, #-4]
   3fd48:	b	3fe7c <rpl_re_set_registers@@Base+0x12ee0>
   3fd4c:	ldur	x8, [x29, #-24]
   3fd50:	ldr	x8, [x8, #40]
   3fd54:	cbz	x8, 3fda8 <rpl_re_set_registers@@Base+0x12e0c>
   3fd58:	ldr	x0, [sp, #32]
   3fd5c:	ldr	x1, [sp, #40]
   3fd60:	ldr	x2, [sp, #16]
   3fd64:	ldur	x8, [x29, #-24]
   3fd68:	add	x3, x8, #0x20
   3fd6c:	ldur	x8, [x29, #-16]
   3fd70:	ldr	x4, [x8, #216]
   3fd74:	ldur	x5, [x29, #-32]
   3fd78:	bl	40200 <rpl_re_set_registers@@Base+0x13264>
   3fd7c:	str	w0, [sp, #28]
   3fd80:	ldr	w9, [sp, #28]
   3fd84:	cmp	w9, #0x0
   3fd88:	cset	w9, ne  // ne = any
   3fd8c:	and	w9, w9, #0x1
   3fd90:	mov	w1, w9
   3fd94:	sxtw	x8, w1
   3fd98:	cbz	x8, 3fda8 <rpl_re_set_registers@@Base+0x12e0c>
   3fd9c:	ldr	w8, [sp, #28]
   3fda0:	stur	w8, [x29, #-4]
   3fda4:	b	3fe7c <rpl_re_set_registers@@Base+0x12ee0>
   3fda8:	ldr	x1, [sp, #32]
   3fdac:	ldr	x2, [sp, #40]
   3fdb0:	add	x0, sp, #0x1c
   3fdb4:	bl	3d47c <rpl_re_set_registers@@Base+0x104e0>
   3fdb8:	ldur	x8, [x29, #-24]
   3fdbc:	ldr	x8, [x8]
   3fdc0:	ldur	x9, [x29, #-32]
   3fdc4:	mov	x10, #0x8                   	// #8
   3fdc8:	mul	x9, x10, x9
   3fdcc:	add	x8, x8, x9
   3fdd0:	str	x0, [x8]
   3fdd4:	ldr	w11, [sp, #28]
   3fdd8:	cmp	w11, #0x0
   3fddc:	cset	w11, ne  // ne = any
   3fde0:	and	w11, w11, #0x1
   3fde4:	mov	w0, w11
   3fde8:	sxtw	x8, w0
   3fdec:	cbz	x8, 3fdfc <rpl_re_set_registers@@Base+0x12e60>
   3fdf0:	ldr	w8, [sp, #28]
   3fdf4:	stur	w8, [x29, #-4]
   3fdf8:	b	3fe7c <rpl_re_set_registers@@Base+0x12ee0>
   3fdfc:	ldr	x8, [sp, #16]
   3fe00:	cbz	x8, 3fe78 <rpl_re_set_registers@@Base+0x12edc>
   3fe04:	ldur	x8, [x29, #-16]
   3fe08:	ldr	x8, [x8, #184]
   3fe0c:	ldur	x9, [x29, #-32]
   3fe10:	mov	x10, #0x8                   	// #8
   3fe14:	mul	x9, x10, x9
   3fe18:	add	x8, x8, x9
   3fe1c:	ldr	x8, [x8]
   3fe20:	ldrb	w11, [x8, #104]
   3fe24:	mov	w12, #0x6                   	// #6
   3fe28:	lsr	w11, w11, w12
   3fe2c:	and	w11, w11, #0x1
   3fe30:	and	w11, w11, #0xff
   3fe34:	cbz	w11, 3fe78 <rpl_re_set_registers@@Base+0x12edc>
   3fe38:	ldur	x0, [x29, #-16]
   3fe3c:	ldur	x1, [x29, #-24]
   3fe40:	ldur	x2, [x29, #-32]
   3fe44:	ldr	x3, [sp, #16]
   3fe48:	bl	4060c <rpl_re_set_registers@@Base+0x13670>
   3fe4c:	str	w0, [sp, #28]
   3fe50:	ldr	w8, [sp, #28]
   3fe54:	cmp	w8, #0x0
   3fe58:	cset	w8, ne  // ne = any
   3fe5c:	and	w8, w8, #0x1
   3fe60:	mov	w1, w8
   3fe64:	sxtw	x9, w1
   3fe68:	cbz	x9, 3fe78 <rpl_re_set_registers@@Base+0x12edc>
   3fe6c:	ldr	w8, [sp, #28]
   3fe70:	stur	w8, [x29, #-4]
   3fe74:	b	3fe7c <rpl_re_set_registers@@Base+0x12ee0>
   3fe78:	stur	wzr, [x29, #-4]
   3fe7c:	ldur	w0, [x29, #-4]
   3fe80:	ldp	x29, x30, [sp, #80]
   3fe84:	add	sp, sp, #0x60
   3fe88:	ret
   3fe8c:	sub	sp, sp, #0x70
   3fe90:	stp	x29, x30, [sp, #96]
   3fe94:	add	x29, sp, #0x60
   3fe98:	stur	x0, [x29, #-16]
   3fe9c:	stur	x1, [x29, #-24]
   3fea0:	stur	x2, [x29, #-32]
   3fea4:	stur	x3, [x29, #-40]
   3fea8:	ldur	x8, [x29, #-16]
   3feac:	ldr	x8, [x8, #152]
   3feb0:	str	x8, [sp, #48]
   3feb4:	ldur	x8, [x29, #-16]
   3feb8:	ldr	x8, [x8, #184]
   3febc:	ldur	x9, [x29, #-32]
   3fec0:	mov	x10, #0x8                   	// #8
   3fec4:	mul	x9, x10, x9
   3fec8:	add	x8, x8, x9
   3fecc:	ldr	x8, [x8]
   3fed0:	add	x8, x8, #0x20
   3fed4:	str	x8, [sp, #40]
   3fed8:	str	xzr, [sp, #32]
   3fedc:	ldr	x8, [sp, #32]
   3fee0:	ldr	x9, [sp, #40]
   3fee4:	ldr	x9, [x9, #8]
   3fee8:	cmp	x8, x9
   3feec:	b.ge	40098 <rpl_re_set_registers@@Base+0x130fc>  // b.tcont
   3fef0:	ldr	x8, [sp, #40]
   3fef4:	mov	x9, #0x10                  	// #16
   3fef8:	ldr	x8, [x8, #16]
   3fefc:	ldr	x10, [sp, #32]
   3ff00:	ldr	x8, [x8, x10, lsl #3]
   3ff04:	str	x8, [sp, #24]
   3ff08:	str	wzr, [sp, #20]
   3ff0c:	ldr	x8, [sp, #48]
   3ff10:	ldr	x8, [x8]
   3ff14:	ldr	x10, [sp, #24]
   3ff18:	mul	x9, x9, x10
   3ff1c:	add	x8, x8, x9
   3ff20:	ldr	w11, [x8, #8]
   3ff24:	lsr	w11, w11, #20
   3ff28:	and	w11, w11, #0x1
   3ff2c:	cbz	w11, 3ff50 <rpl_re_set_registers@@Base+0x12fb4>
   3ff30:	ldur	x0, [x29, #-16]
   3ff34:	ldur	x1, [x29, #-24]
   3ff38:	ldr	x2, [sp, #24]
   3ff3c:	ldur	x3, [x29, #-32]
   3ff40:	ldur	x8, [x29, #-24]
   3ff44:	ldr	x4, [x8, #24]
   3ff48:	bl	41644 <rpl_re_set_registers@@Base+0x146a8>
   3ff4c:	str	w0, [sp, #20]
   3ff50:	ldr	w8, [sp, #20]
   3ff54:	cbnz	w8, 3ffec <rpl_re_set_registers@@Base+0x13050>
   3ff58:	ldur	x0, [x29, #-16]
   3ff5c:	ldr	x8, [sp, #48]
   3ff60:	ldr	x8, [x8]
   3ff64:	ldr	x9, [sp, #24]
   3ff68:	mov	x10, #0x10                  	// #16
   3ff6c:	mul	x9, x10, x9
   3ff70:	add	x1, x8, x9
   3ff74:	ldur	x2, [x29, #-32]
   3ff78:	bl	3dd9c <rpl_re_set_registers@@Base+0x10e00>
   3ff7c:	tbnz	w0, #0, 3ff84 <rpl_re_set_registers@@Base+0x12fe8>
   3ff80:	b	3ffec <rpl_re_set_registers@@Base+0x13050>
   3ff84:	ldur	x8, [x29, #-24]
   3ff88:	ldr	x8, [x8]
   3ff8c:	ldur	x9, [x29, #-32]
   3ff90:	add	x9, x9, #0x1
   3ff94:	mov	x10, #0x8                   	// #8
   3ff98:	mul	x9, x10, x9
   3ff9c:	add	x8, x8, x9
   3ffa0:	ldr	x8, [x8]
   3ffa4:	cbz	x8, 3ffec <rpl_re_set_registers@@Base+0x13050>
   3ffa8:	ldur	x8, [x29, #-24]
   3ffac:	ldr	x8, [x8]
   3ffb0:	ldur	x9, [x29, #-32]
   3ffb4:	add	x9, x9, #0x1
   3ffb8:	mov	x10, #0x8                   	// #8
   3ffbc:	mul	x9, x10, x9
   3ffc0:	add	x8, x8, x9
   3ffc4:	ldr	x8, [x8]
   3ffc8:	add	x0, x8, #0x8
   3ffcc:	ldr	x8, [sp, #48]
   3ffd0:	ldr	x8, [x8, #24]
   3ffd4:	ldr	x9, [sp, #24]
   3ffd8:	ldr	x1, [x8, x9, lsl #3]
   3ffdc:	bl	37288 <rpl_re_set_registers@@Base+0xa2ec>
   3ffe0:	cbz	x0, 3ffec <rpl_re_set_registers@@Base+0x13050>
   3ffe4:	mov	w8, #0x1                   	// #1
   3ffe8:	str	w8, [sp, #20]
   3ffec:	ldr	w8, [sp, #20]
   3fff0:	cbnz	w8, 3fff8 <rpl_re_set_registers@@Base+0x1305c>
   3fff4:	b	40088 <rpl_re_set_registers@@Base+0x130ec>
   3fff8:	ldur	x8, [x29, #-24]
   3fffc:	ldr	x8, [x8, #40]
   40000:	cbz	x8, 4004c <rpl_re_set_registers@@Base+0x130b0>
   40004:	ldur	x8, [x29, #-32]
   40008:	ldrsw	x9, [sp, #20]
   4000c:	add	x8, x8, x9
   40010:	str	x8, [sp, #8]
   40014:	ldur	x0, [x29, #-16]
   40018:	ldur	x8, [x29, #-24]
   4001c:	add	x1, x8, #0x20
   40020:	ldr	x8, [sp, #48]
   40024:	ldr	x8, [x8, #24]
   40028:	ldr	x9, [sp, #24]
   4002c:	ldr	x2, [x8, x9, lsl #3]
   40030:	ldr	x3, [sp, #8]
   40034:	ldr	x4, [sp, #24]
   40038:	ldur	x5, [x29, #-32]
   4003c:	bl	41104 <rpl_re_set_registers@@Base+0x14168>
   40040:	tbnz	w0, #0, 40048 <rpl_re_set_registers@@Base+0x130ac>
   40044:	b	4004c <rpl_re_set_registers@@Base+0x130b0>
   40048:	b	40088 <rpl_re_set_registers@@Base+0x130ec>
   4004c:	ldur	x0, [x29, #-40]
   40050:	ldr	x1, [sp, #24]
   40054:	bl	36c60 <rpl_re_set_registers@@Base+0x9cc4>
   40058:	mov	w8, #0x1                   	// #1
   4005c:	and	w8, w0, w8
   40060:	strb	w8, [sp, #19]
   40064:	ldrb	w8, [sp, #19]
   40068:	eor	w8, w8, #0x1
   4006c:	and	w8, w8, #0x1
   40070:	mov	w1, w8
   40074:	sxtw	x9, w1
   40078:	cbz	x9, 40088 <rpl_re_set_registers@@Base+0x130ec>
   4007c:	mov	w8, #0xc                   	// #12
   40080:	stur	w8, [x29, #-4]
   40084:	b	4009c <rpl_re_set_registers@@Base+0x13100>
   40088:	ldr	x8, [sp, #32]
   4008c:	add	x8, x8, #0x1
   40090:	str	x8, [sp, #32]
   40094:	b	3fedc <rpl_re_set_registers@@Base+0x12f40>
   40098:	stur	wzr, [x29, #-4]
   4009c:	ldur	w0, [x29, #-4]
   400a0:	ldp	x29, x30, [sp, #96]
   400a4:	add	sp, sp, #0x70
   400a8:	ret
   400ac:	sub	sp, sp, #0x50
   400b0:	stp	x29, x30, [sp, #64]
   400b4:	add	x29, sp, #0x40
   400b8:	add	x8, sp, #0x1c
   400bc:	stur	x0, [x29, #-16]
   400c0:	stur	x1, [x29, #-24]
   400c4:	str	x2, [sp, #32]
   400c8:	str	wzr, [sp, #28]
   400cc:	ldur	x1, [x29, #-16]
   400d0:	ldur	x2, [x29, #-24]
   400d4:	mov	x0, x8
   400d8:	bl	3d47c <rpl_re_set_registers@@Base+0x104e0>
   400dc:	str	x0, [sp, #8]
   400e0:	ldr	w9, [sp, #28]
   400e4:	cmp	w9, #0x0
   400e8:	cset	w9, ne  // ne = any
   400ec:	and	w9, w9, #0x1
   400f0:	mov	w0, w9
   400f4:	sxtw	x8, w0
   400f8:	cbz	x8, 40108 <rpl_re_set_registers@@Base+0x1316c>
   400fc:	ldr	w8, [sp, #28]
   40100:	stur	w8, [x29, #-4]
   40104:	b	401f0 <rpl_re_set_registers@@Base+0x13254>
   40108:	ldr	x8, [sp, #8]
   4010c:	ldr	x8, [x8, #56]
   40110:	cbnz	x8, 401d8 <rpl_re_set_registers@@Base+0x1323c>
   40114:	ldr	x8, [sp, #8]
   40118:	add	x0, x8, #0x38
   4011c:	ldur	x8, [x29, #-24]
   40120:	ldr	x1, [x8, #8]
   40124:	bl	36240 <rpl_re_set_registers@@Base+0x92a4>
   40128:	str	w0, [sp, #28]
   4012c:	ldr	w9, [sp, #28]
   40130:	cmp	w9, #0x0
   40134:	cset	w9, ne  // ne = any
   40138:	and	w9, w9, #0x1
   4013c:	mov	w1, w9
   40140:	sxtw	x8, w1
   40144:	cbz	x8, 40154 <rpl_re_set_registers@@Base+0x131b8>
   40148:	mov	w8, #0xc                   	// #12
   4014c:	stur	w8, [x29, #-4]
   40150:	b	401f0 <rpl_re_set_registers@@Base+0x13254>
   40154:	str	xzr, [sp, #16]
   40158:	ldr	x8, [sp, #16]
   4015c:	ldur	x9, [x29, #-24]
   40160:	ldr	x9, [x9, #8]
   40164:	cmp	x8, x9
   40168:	b.ge	401d8 <rpl_re_set_registers@@Base+0x1323c>  // b.tcont
   4016c:	ldr	x8, [sp, #8]
   40170:	add	x0, x8, #0x38
   40174:	ldur	x8, [x29, #-16]
   40178:	ldr	x8, [x8, #56]
   4017c:	ldur	x9, [x29, #-24]
   40180:	ldr	x9, [x9, #16]
   40184:	ldr	x10, [sp, #16]
   40188:	ldr	x9, [x9, x10, lsl #3]
   4018c:	mov	x10, #0x18                  	// #24
   40190:	mul	x9, x10, x9
   40194:	add	x1, x8, x9
   40198:	bl	36848 <rpl_re_set_registers@@Base+0x98ac>
   4019c:	str	w0, [sp, #28]
   401a0:	ldr	w11, [sp, #28]
   401a4:	cmp	w11, #0x0
   401a8:	cset	w11, ne  // ne = any
   401ac:	and	w11, w11, #0x1
   401b0:	mov	w1, w11
   401b4:	sxtw	x8, w1
   401b8:	cbz	x8, 401c8 <rpl_re_set_registers@@Base+0x1322c>
   401bc:	mov	w8, #0xc                   	// #12
   401c0:	stur	w8, [x29, #-4]
   401c4:	b	401f0 <rpl_re_set_registers@@Base+0x13254>
   401c8:	ldr	x8, [sp, #16]
   401cc:	add	x8, x8, #0x1
   401d0:	str	x8, [sp, #16]
   401d4:	b	40158 <rpl_re_set_registers@@Base+0x131bc>
   401d8:	ldur	x0, [x29, #-24]
   401dc:	ldr	x1, [sp, #32]
   401e0:	ldr	x8, [sp, #8]
   401e4:	add	x2, x8, #0x38
   401e8:	bl	40a54 <rpl_re_set_registers@@Base+0x13ab8>
   401ec:	stur	w0, [x29, #-4]
   401f0:	ldur	w0, [x29, #-4]
   401f4:	ldp	x29, x30, [sp, #64]
   401f8:	add	sp, sp, #0x50
   401fc:	ret
   40200:	sub	sp, sp, #0xb0
   40204:	stp	x29, x30, [sp, #160]
   40208:	add	x29, sp, #0xa0
   4020c:	sub	x8, x29, #0x10
   40210:	str	x0, [x8]
   40214:	stur	x1, [x29, #-24]
   40218:	stur	x2, [x29, #-32]
   4021c:	stur	x3, [x29, #-40]
   40220:	stur	x4, [x29, #-48]
   40224:	stur	x5, [x29, #-56]
   40228:	str	xzr, [sp, #80]
   4022c:	str	x8, [sp]
   40230:	ldr	x8, [sp, #80]
   40234:	ldur	x9, [x29, #-40]
   40238:	ldr	x9, [x9, #8]
   4023c:	cmp	x8, x9
   40240:	b.ge	405f8 <rpl_re_set_registers@@Base+0x1365c>  // b.tcont
   40244:	ldur	x8, [x29, #-48]
   40248:	ldur	x9, [x29, #-40]
   4024c:	ldr	x9, [x9, #16]
   40250:	ldr	x10, [sp, #80]
   40254:	ldr	x9, [x9, x10, lsl #3]
   40258:	mov	x10, #0x28                  	// #40
   4025c:	mul	x9, x10, x9
   40260:	add	x8, x8, x9
   40264:	str	x8, [sp, #64]
   40268:	ldur	x8, [x29, #-56]
   4026c:	ldr	x9, [sp, #64]
   40270:	ldr	x9, [x9, #16]
   40274:	cmp	x8, x9
   40278:	b.le	40290 <rpl_re_set_registers@@Base+0x132f4>
   4027c:	ldr	x8, [sp, #64]
   40280:	ldr	x8, [x8, #8]
   40284:	ldur	x9, [x29, #-56]
   40288:	cmp	x8, x9
   4028c:	b.ge	40294 <rpl_re_set_registers@@Base+0x132f8>  // b.tcont
   40290:	b	405e8 <rpl_re_set_registers@@Base+0x1364c>
   40294:	ldr	x8, [sp]
   40298:	ldr	x9, [x8]
   4029c:	ldr	x9, [x9]
   402a0:	ldr	x10, [sp, #64]
   402a4:	ldr	x10, [x10]
   402a8:	mov	x11, #0x10                  	// #16
   402ac:	mul	x10, x11, x10
   402b0:	ldr	x9, [x9, x10]
   402b4:	str	x9, [sp, #72]
   402b8:	ldr	x9, [sp, #64]
   402bc:	ldr	x9, [x9, #24]
   402c0:	ldur	x10, [x29, #-56]
   402c4:	cmp	x9, x10
   402c8:	b.ne	404fc <rpl_re_set_registers@@Base+0x13560>  // b.any
   402cc:	mov	x8, #0xffffffffffffffff    	// #-1
   402d0:	str	x8, [sp, #56]
   402d4:	str	x8, [sp, #48]
   402d8:	stur	xzr, [x29, #-72]
   402dc:	ldur	x8, [x29, #-72]
   402e0:	ldur	x9, [x29, #-24]
   402e4:	ldr	x9, [x9, #8]
   402e8:	cmp	x8, x9
   402ec:	b.ge	403b8 <rpl_re_set_registers@@Base+0x1341c>  // b.tcont
   402f0:	ldur	x8, [x29, #-24]
   402f4:	mov	x9, #0x10                  	// #16
   402f8:	ldr	x8, [x8, #16]
   402fc:	ldur	x10, [x29, #-72]
   40300:	ldr	x8, [x8, x10, lsl #3]
   40304:	str	x8, [sp, #40]
   40308:	ldr	x8, [sp]
   4030c:	ldr	x10, [x8]
   40310:	ldr	x10, [x10]
   40314:	ldr	x11, [sp, #40]
   40318:	mul	x9, x9, x11
   4031c:	add	x9, x10, x9
   40320:	ldr	w12, [x9, #8]
   40324:	and	w12, w12, #0xff
   40328:	str	w12, [sp, #36]
   4032c:	ldr	w12, [sp, #36]
   40330:	cmp	w12, #0x8
   40334:	b.ne	4036c <rpl_re_set_registers@@Base+0x133d0>  // b.any
   40338:	ldr	x8, [sp, #72]
   4033c:	ldr	x9, [sp]
   40340:	ldr	x10, [x9]
   40344:	ldr	x10, [x10]
   40348:	ldr	x11, [sp, #40]
   4034c:	mov	x12, #0x10                  	// #16
   40350:	mul	x11, x12, x11
   40354:	ldr	x10, [x10, x11]
   40358:	cmp	x8, x10
   4035c:	b.ne	4036c <rpl_re_set_registers@@Base+0x133d0>  // b.any
   40360:	ldr	x8, [sp, #40]
   40364:	str	x8, [sp, #56]
   40368:	b	403a8 <rpl_re_set_registers@@Base+0x1340c>
   4036c:	ldr	w8, [sp, #36]
   40370:	cmp	w8, #0x9
   40374:	b.ne	403a8 <rpl_re_set_registers@@Base+0x1340c>  // b.any
   40378:	ldr	x8, [sp, #72]
   4037c:	ldr	x9, [sp]
   40380:	ldr	x10, [x9]
   40384:	ldr	x10, [x10]
   40388:	ldr	x11, [sp, #40]
   4038c:	mov	x12, #0x10                  	// #16
   40390:	mul	x11, x12, x11
   40394:	ldr	x10, [x10, x11]
   40398:	cmp	x8, x10
   4039c:	b.ne	403a8 <rpl_re_set_registers@@Base+0x1340c>  // b.any
   403a0:	ldr	x8, [sp, #40]
   403a4:	str	x8, [sp, #48]
   403a8:	ldur	x8, [x29, #-72]
   403ac:	add	x8, x8, #0x1
   403b0:	stur	x8, [x29, #-72]
   403b4:	b	402dc <rpl_re_set_registers@@Base+0x13340>
   403b8:	ldr	x8, [sp, #56]
   403bc:	cmp	x8, #0x0
   403c0:	cset	w9, lt  // lt = tstop
   403c4:	tbnz	w9, #0, 4040c <rpl_re_set_registers@@Base+0x13470>
   403c8:	ldr	x8, [sp]
   403cc:	ldr	x0, [x8]
   403d0:	ldr	x1, [sp, #56]
   403d4:	ldur	x2, [x29, #-24]
   403d8:	ldur	x3, [x29, #-32]
   403dc:	bl	40e94 <rpl_re_set_registers@@Base+0x13ef8>
   403e0:	stur	w0, [x29, #-60]
   403e4:	ldur	w9, [x29, #-60]
   403e8:	cmp	w9, #0x0
   403ec:	cset	w9, ne  // ne = any
   403f0:	and	w9, w9, #0x1
   403f4:	mov	w1, w9
   403f8:	sxtw	x8, w1
   403fc:	cbz	x8, 4040c <rpl_re_set_registers@@Base+0x13470>
   40400:	ldur	w8, [x29, #-60]
   40404:	stur	w8, [x29, #-4]
   40408:	b	405fc <rpl_re_set_registers@@Base+0x13660>
   4040c:	ldr	x8, [sp, #48]
   40410:	cmp	x8, #0x0
   40414:	cset	w9, lt  // lt = tstop
   40418:	tbnz	w9, #0, 404f8 <rpl_re_set_registers@@Base+0x1355c>
   4041c:	stur	xzr, [x29, #-72]
   40420:	ldur	x8, [x29, #-72]
   40424:	ldur	x9, [x29, #-24]
   40428:	ldr	x9, [x9, #8]
   4042c:	cmp	x8, x9
   40430:	b.ge	404f8 <rpl_re_set_registers@@Base+0x1355c>  // b.tcont
   40434:	ldur	x8, [x29, #-24]
   40438:	ldr	x8, [x8, #16]
   4043c:	ldur	x9, [x29, #-72]
   40440:	ldr	x8, [x8, x9, lsl #3]
   40444:	str	x8, [sp, #24]
   40448:	ldr	x8, [sp]
   4044c:	ldr	x9, [x8]
   40450:	ldr	x9, [x9, #56]
   40454:	ldr	x10, [sp, #24]
   40458:	mov	x11, #0x18                  	// #24
   4045c:	mul	x10, x11, x10
   40460:	add	x0, x9, x10
   40464:	ldr	x1, [sp, #48]
   40468:	bl	37288 <rpl_re_set_registers@@Base+0xa2ec>
   4046c:	cbnz	x0, 404e8 <rpl_re_set_registers@@Base+0x1354c>
   40470:	ldr	x8, [sp]
   40474:	ldr	x9, [x8]
   40478:	ldr	x9, [x9, #48]
   4047c:	ldr	x10, [sp, #24]
   40480:	mov	x11, #0x18                  	// #24
   40484:	mul	x10, x11, x10
   40488:	add	x0, x9, x10
   4048c:	ldr	x1, [sp, #48]
   40490:	bl	37288 <rpl_re_set_registers@@Base+0xa2ec>
   40494:	cbnz	x0, 404e8 <rpl_re_set_registers@@Base+0x1354c>
   40498:	ldr	x8, [sp]
   4049c:	ldr	x0, [x8]
   404a0:	ldr	x1, [sp, #24]
   404a4:	ldur	x2, [x29, #-24]
   404a8:	ldur	x3, [x29, #-32]
   404ac:	bl	40e94 <rpl_re_set_registers@@Base+0x13ef8>
   404b0:	stur	w0, [x29, #-60]
   404b4:	ldur	w9, [x29, #-60]
   404b8:	cmp	w9, #0x0
   404bc:	cset	w9, ne  // ne = any
   404c0:	and	w9, w9, #0x1
   404c4:	mov	w1, w9
   404c8:	sxtw	x8, w1
   404cc:	cbz	x8, 404dc <rpl_re_set_registers@@Base+0x13540>
   404d0:	ldur	w8, [x29, #-60]
   404d4:	stur	w8, [x29, #-4]
   404d8:	b	405fc <rpl_re_set_registers@@Base+0x13660>
   404dc:	ldur	x8, [x29, #-72]
   404e0:	subs	x8, x8, #0x1
   404e4:	stur	x8, [x29, #-72]
   404e8:	ldur	x8, [x29, #-72]
   404ec:	add	x8, x8, #0x1
   404f0:	stur	x8, [x29, #-72]
   404f4:	b	40420 <rpl_re_set_registers@@Base+0x13484>
   404f8:	b	405e8 <rpl_re_set_registers@@Base+0x1364c>
   404fc:	stur	xzr, [x29, #-72]
   40500:	ldur	x8, [x29, #-72]
   40504:	ldur	x9, [x29, #-24]
   40508:	ldr	x9, [x9, #8]
   4050c:	cmp	x8, x9
   40510:	b.ge	405e8 <rpl_re_set_registers@@Base+0x1364c>  // b.tcont
   40514:	ldur	x8, [x29, #-24]
   40518:	mov	x9, #0x10                  	// #16
   4051c:	ldr	x8, [x8, #16]
   40520:	ldur	x10, [x29, #-72]
   40524:	ldr	x8, [x8, x10, lsl #3]
   40528:	str	x8, [sp, #16]
   4052c:	ldr	x8, [sp]
   40530:	ldr	x10, [x8]
   40534:	ldr	x10, [x10]
   40538:	ldr	x11, [sp, #16]
   4053c:	mul	x9, x9, x11
   40540:	add	x9, x10, x9
   40544:	ldr	w12, [x9, #8]
   40548:	and	w12, w12, #0xff
   4054c:	str	w12, [sp, #12]
   40550:	ldr	w12, [sp, #12]
   40554:	cmp	w12, #0x9
   40558:	b.eq	40568 <rpl_re_set_registers@@Base+0x135cc>  // b.none
   4055c:	ldr	w8, [sp, #12]
   40560:	cmp	w8, #0x8
   40564:	b.ne	405d8 <rpl_re_set_registers@@Base+0x1363c>  // b.any
   40568:	ldr	x8, [sp, #72]
   4056c:	ldr	x9, [sp]
   40570:	ldr	x10, [x9]
   40574:	ldr	x10, [x10]
   40578:	ldr	x11, [sp, #16]
   4057c:	mov	x12, #0x10                  	// #16
   40580:	mul	x11, x12, x11
   40584:	ldr	x10, [x10, x11]
   40588:	cmp	x8, x10
   4058c:	b.eq	40594 <rpl_re_set_registers@@Base+0x135f8>  // b.none
   40590:	b	405d8 <rpl_re_set_registers@@Base+0x1363c>
   40594:	ldr	x8, [sp]
   40598:	ldr	x0, [x8]
   4059c:	ldr	x1, [sp, #16]
   405a0:	ldur	x2, [x29, #-24]
   405a4:	ldur	x3, [x29, #-32]
   405a8:	bl	40e94 <rpl_re_set_registers@@Base+0x13ef8>
   405ac:	stur	w0, [x29, #-60]
   405b0:	ldur	w9, [x29, #-60]
   405b4:	cmp	w9, #0x0
   405b8:	cset	w9, ne  // ne = any
   405bc:	and	w9, w9, #0x1
   405c0:	mov	w1, w9
   405c4:	sxtw	x8, w1
   405c8:	cbz	x8, 405d8 <rpl_re_set_registers@@Base+0x1363c>
   405cc:	ldur	w8, [x29, #-60]
   405d0:	stur	w8, [x29, #-4]
   405d4:	b	405fc <rpl_re_set_registers@@Base+0x13660>
   405d8:	ldur	x8, [x29, #-72]
   405dc:	add	x8, x8, #0x1
   405e0:	stur	x8, [x29, #-72]
   405e4:	b	40500 <rpl_re_set_registers@@Base+0x13564>
   405e8:	ldr	x8, [sp, #80]
   405ec:	add	x8, x8, #0x1
   405f0:	str	x8, [sp, #80]
   405f4:	b	40230 <rpl_re_set_registers@@Base+0x13294>
   405f8:	stur	wzr, [x29, #-4]
   405fc:	ldur	w0, [x29, #-4]
   40600:	ldp	x29, x30, [sp, #160]
   40604:	add	sp, sp, #0xb0
   40608:	ret
   4060c:	sub	sp, sp, #0x100
   40610:	stp	x29, x30, [sp, #240]
   40614:	add	x29, sp, #0xf0
   40618:	mov	x8, #0xffffffffffffffff    	// #-1
   4061c:	stur	x0, [x29, #-16]
   40620:	stur	x1, [x29, #-24]
   40624:	stur	x2, [x29, #-32]
   40628:	stur	x3, [x29, #-40]
   4062c:	ldur	x9, [x29, #-16]
   40630:	ldr	x9, [x9, #152]
   40634:	stur	x9, [x29, #-48]
   40638:	ldur	x0, [x29, #-16]
   4063c:	ldur	x1, [x29, #-32]
   40640:	str	x8, [sp, #32]
   40644:	bl	3ba80 <rpl_re_set_registers@@Base+0xeae4>
   40648:	str	x0, [sp, #104]
   4064c:	ldr	x8, [sp, #104]
   40650:	ldr	x9, [sp, #32]
   40654:	cmp	x8, x9
   40658:	b.ne	40664 <rpl_re_set_registers@@Base+0x136c8>  // b.any
   4065c:	stur	wzr, [x29, #-4]
   40660:	b	40a44 <rpl_re_set_registers@@Base+0x13aa8>
   40664:	mov	x8, xzr
   40668:	str	x8, [sp, #112]
   4066c:	stur	xzr, [x29, #-64]
   40670:	ldur	x8, [x29, #-64]
   40674:	ldur	x9, [x29, #-40]
   40678:	ldr	x9, [x9, #8]
   4067c:	cmp	x8, x9
   40680:	b.ge	40a24 <rpl_re_set_registers@@Base+0x13a88>  // b.tcont
   40684:	ldur	x8, [x29, #-40]
   40688:	mov	x9, #0x10                  	// #16
   4068c:	ldr	x8, [x8, #16]
   40690:	ldur	x10, [x29, #-64]
   40694:	ldr	x8, [x8, x10, lsl #3]
   40698:	stur	x8, [x29, #-72]
   4069c:	ldur	x8, [x29, #-48]
   406a0:	ldr	x8, [x8]
   406a4:	ldur	x10, [x29, #-72]
   406a8:	mul	x9, x9, x10
   406ac:	add	x8, x8, x9
   406b0:	ldr	w11, [x8, #8]
   406b4:	and	w11, w11, #0xff
   406b8:	str	w11, [sp, #92]
   406bc:	ldur	x8, [x29, #-72]
   406c0:	ldur	x9, [x29, #-24]
   406c4:	ldr	x9, [x9, #16]
   406c8:	cmp	x8, x9
   406cc:	b.ne	406e8 <rpl_re_set_registers@@Base+0x1374c>  // b.any
   406d0:	ldur	x8, [x29, #-32]
   406d4:	ldur	x9, [x29, #-24]
   406d8:	ldr	x9, [x9, #24]
   406dc:	cmp	x8, x9
   406e0:	b.ne	406e8 <rpl_re_set_registers@@Base+0x1374c>  // b.any
   406e4:	b	40a14 <rpl_re_set_registers@@Base+0x13a78>
   406e8:	ldr	w8, [sp, #92]
   406ec:	cmp	w8, #0x4
   406f0:	b.eq	406f8 <rpl_re_set_registers@@Base+0x1375c>  // b.none
   406f4:	b	40a14 <rpl_re_set_registers@@Base+0x13a78>
   406f8:	ldur	x8, [x29, #-16]
   406fc:	ldr	x8, [x8, #216]
   40700:	ldr	x9, [sp, #104]
   40704:	mov	x10, #0x28                  	// #40
   40708:	mul	x9, x10, x9
   4070c:	add	x8, x8, x9
   40710:	str	x8, [sp, #80]
   40714:	ldr	x8, [sp, #104]
   40718:	str	x8, [sp, #96]
   4071c:	ldr	x8, [sp, #80]
   40720:	ldr	x8, [x8]
   40724:	ldur	x9, [x29, #-72]
   40728:	cmp	x8, x9
   4072c:	b.eq	40734 <rpl_re_set_registers@@Base+0x13798>  // b.none
   40730:	b	409f4 <rpl_re_set_registers@@Base+0x13a58>
   40734:	ldr	x8, [sp, #80]
   40738:	ldr	x8, [x8, #24]
   4073c:	ldr	x9, [sp, #80]
   40740:	ldr	x9, [x9, #16]
   40744:	subs	x8, x8, x9
   40748:	str	x8, [sp, #72]
   4074c:	ldur	x8, [x29, #-32]
   40750:	ldr	x9, [sp, #72]
   40754:	add	x8, x8, x9
   40758:	str	x8, [sp, #64]
   4075c:	ldr	x8, [sp, #72]
   40760:	cbz	x8, 4077c <rpl_re_set_registers@@Base+0x137e0>
   40764:	ldur	x8, [x29, #-48]
   40768:	ldr	x8, [x8, #24]
   4076c:	ldur	x9, [x29, #-72]
   40770:	ldr	x8, [x8, x9, lsl #3]
   40774:	str	x8, [sp, #24]
   40778:	b	407a0 <rpl_re_set_registers@@Base+0x13804>
   4077c:	ldur	x8, [x29, #-48]
   40780:	ldr	x8, [x8, #40]
   40784:	ldur	x9, [x29, #-72]
   40788:	mov	x10, #0x18                  	// #24
   4078c:	mul	x9, x10, x9
   40790:	add	x8, x8, x9
   40794:	ldr	x8, [x8, #16]
   40798:	ldr	x8, [x8]
   4079c:	str	x8, [sp, #24]
   407a0:	ldr	x8, [sp, #24]
   407a4:	str	x8, [sp, #56]
   407a8:	ldr	x8, [sp, #64]
   407ac:	ldur	x9, [x29, #-24]
   407b0:	ldr	x9, [x9, #24]
   407b4:	cmp	x8, x9
   407b8:	b.gt	40850 <rpl_re_set_registers@@Base+0x138b4>
   407bc:	ldur	x8, [x29, #-24]
   407c0:	ldr	x8, [x8]
   407c4:	ldr	x9, [sp, #64]
   407c8:	mov	x10, #0x8                   	// #8
   407cc:	mul	x9, x10, x9
   407d0:	add	x8, x8, x9
   407d4:	ldr	x8, [x8]
   407d8:	cbz	x8, 40850 <rpl_re_set_registers@@Base+0x138b4>
   407dc:	ldur	x8, [x29, #-24]
   407e0:	ldr	x8, [x8]
   407e4:	ldr	x9, [sp, #64]
   407e8:	mov	x10, #0x8                   	// #8
   407ec:	mul	x9, x10, x9
   407f0:	add	x8, x8, x9
   407f4:	ldr	x8, [x8]
   407f8:	cbz	x8, 40850 <rpl_re_set_registers@@Base+0x138b4>
   407fc:	ldur	x8, [x29, #-24]
   40800:	ldr	x8, [x8]
   40804:	ldr	x9, [sp, #64]
   40808:	mov	x10, #0x8                   	// #8
   4080c:	mul	x9, x10, x9
   40810:	add	x8, x8, x9
   40814:	ldr	x8, [x8]
   40818:	add	x0, x8, #0x8
   4081c:	ldr	x1, [sp, #56]
   40820:	bl	37288 <rpl_re_set_registers@@Base+0xa2ec>
   40824:	cbz	x0, 40850 <rpl_re_set_registers@@Base+0x138b4>
   40828:	ldur	x0, [x29, #-16]
   4082c:	ldur	x8, [x29, #-24]
   40830:	add	x1, x8, #0x20
   40834:	ldur	x2, [x29, #-72]
   40838:	ldur	x3, [x29, #-32]
   4083c:	ldr	x4, [sp, #56]
   40840:	ldr	x5, [sp, #64]
   40844:	bl	41104 <rpl_re_set_registers@@Base+0x14168>
   40848:	tbnz	w0, #0, 40850 <rpl_re_set_registers@@Base+0x138b4>
   4084c:	b	40854 <rpl_re_set_registers@@Base+0x138b8>
   40850:	b	409f4 <rpl_re_set_registers@@Base+0x13a58>
   40854:	ldr	x8, [sp, #112]
   40858:	cbnz	x8, 408ac <rpl_re_set_registers@@Base+0x13910>
   4085c:	ldur	x1, [x29, #-24]
   40860:	add	x8, sp, #0x70
   40864:	mov	x0, x8
   40868:	mov	x2, #0x38                  	// #56
   4086c:	str	x8, [sp, #16]
   40870:	bl	af30 <memcpy@plt>
   40874:	ldr	x8, [sp, #16]
   40878:	add	x0, x8, #0x20
   4087c:	ldur	x9, [x29, #-24]
   40880:	add	x1, x9, #0x20
   40884:	bl	3719c <rpl_re_set_registers@@Base+0xa200>
   40888:	stur	w0, [x29, #-52]
   4088c:	ldur	w10, [x29, #-52]
   40890:	cmp	w10, #0x0
   40894:	cset	w10, ne  // ne = any
   40898:	and	w10, w10, #0x1
   4089c:	mov	w1, w10
   408a0:	sxtw	x8, w1
   408a4:	cbz	x8, 408ac <rpl_re_set_registers@@Base+0x13910>
   408a8:	b	40a28 <rpl_re_set_registers@@Base+0x13a8c>
   408ac:	ldur	x8, [x29, #-72]
   408b0:	add	x9, sp, #0x70
   408b4:	str	x8, [sp, #128]
   408b8:	ldur	x8, [x29, #-32]
   408bc:	str	x8, [sp, #136]
   408c0:	add	x0, x9, #0x20
   408c4:	ldr	x1, [sp, #96]
   408c8:	bl	36c60 <rpl_re_set_registers@@Base+0x9cc4>
   408cc:	mov	w10, #0x1                   	// #1
   408d0:	and	w10, w0, w10
   408d4:	strb	w10, [sp, #55]
   408d8:	ldrb	w10, [sp, #55]
   408dc:	eor	w10, w10, #0x1
   408e0:	and	w10, w10, #0x1
   408e4:	mov	w1, w10
   408e8:	sxtw	x8, w1
   408ec:	cbz	x8, 408fc <rpl_re_set_registers@@Base+0x13960>
   408f0:	mov	w8, #0xc                   	// #12
   408f4:	stur	w8, [x29, #-52]
   408f8:	b	40a28 <rpl_re_set_registers@@Base+0x13a8c>
   408fc:	add	x1, sp, #0x70
   40900:	ldr	x8, [sp, #112]
   40904:	ldur	x9, [x29, #-32]
   40908:	mov	x10, #0x8                   	// #8
   4090c:	mul	x9, x10, x9
   40910:	add	x8, x8, x9
   40914:	ldr	x8, [x8]
   40918:	str	x8, [sp, #40]
   4091c:	ldur	x0, [x29, #-16]
   40920:	bl	3f8cc <rpl_re_set_registers@@Base+0x12930>
   40924:	stur	w0, [x29, #-52]
   40928:	ldur	w11, [x29, #-52]
   4092c:	cmp	w11, #0x0
   40930:	cset	w11, ne  // ne = any
   40934:	and	w11, w11, #0x1
   40938:	mov	w1, w11
   4093c:	sxtw	x8, w1
   40940:	cbz	x8, 40948 <rpl_re_set_registers@@Base+0x139ac>
   40944:	b	40a28 <rpl_re_set_registers@@Base+0x13a8c>
   40948:	ldur	x8, [x29, #-24]
   4094c:	ldr	x8, [x8, #8]
   40950:	cbz	x8, 40994 <rpl_re_set_registers@@Base+0x139f8>
   40954:	ldur	x0, [x29, #-48]
   40958:	ldur	x8, [x29, #-24]
   4095c:	ldr	x1, [x8, #8]
   40960:	ldr	x2, [sp, #112]
   40964:	ldur	x8, [x29, #-32]
   40968:	add	x3, x8, #0x1
   4096c:	bl	3facc <rpl_re_set_registers@@Base+0x12b30>
   40970:	stur	w0, [x29, #-52]
   40974:	ldur	w9, [x29, #-52]
   40978:	cmp	w9, #0x0
   4097c:	cset	w9, ne  // ne = any
   40980:	and	w9, w9, #0x1
   40984:	mov	w1, w9
   40988:	sxtw	x8, w1
   4098c:	cbz	x8, 40994 <rpl_re_set_registers@@Base+0x139f8>
   40990:	b	40a28 <rpl_re_set_registers@@Base+0x13a8c>
   40994:	ldr	x8, [sp, #40]
   40998:	add	x9, sp, #0x70
   4099c:	ldr	x10, [sp, #112]
   409a0:	ldur	x11, [x29, #-32]
   409a4:	mov	x12, #0x8                   	// #8
   409a8:	mul	x11, x12, x11
   409ac:	add	x10, x10, x11
   409b0:	str	x8, [x10]
   409b4:	add	x0, x9, #0x20
   409b8:	add	x8, x9, #0x20
   409bc:	ldr	x1, [sp, #96]
   409c0:	str	x0, [sp, #8]
   409c4:	mov	x0, x8
   409c8:	bl	37288 <rpl_re_set_registers@@Base+0xa2ec>
   409cc:	subs	x1, x0, #0x1
   409d0:	ldr	x0, [sp, #8]
   409d4:	bl	37978 <rpl_re_set_registers@@Base+0xa9dc>
   409d8:	ldur	x8, [x29, #-16]
   409dc:	ldr	x8, [x8, #216]
   409e0:	ldr	x9, [sp, #96]
   409e4:	mov	x10, #0x28                  	// #40
   409e8:	mul	x9, x10, x9
   409ec:	add	x8, x8, x9
   409f0:	str	x8, [sp, #80]
   409f4:	ldr	x8, [sp, #96]
   409f8:	add	x8, x8, #0x1
   409fc:	str	x8, [sp, #96]
   40a00:	ldr	x8, [sp, #80]
   40a04:	add	x9, x8, #0x28
   40a08:	str	x9, [sp, #80]
   40a0c:	ldrb	w10, [x8, #32]
   40a10:	cbnz	w10, 4071c <rpl_re_set_registers@@Base+0x13780>
   40a14:	ldur	x8, [x29, #-64]
   40a18:	add	x8, x8, #0x1
   40a1c:	stur	x8, [x29, #-64]
   40a20:	b	40670 <rpl_re_set_registers@@Base+0x136d4>
   40a24:	stur	wzr, [x29, #-52]
   40a28:	ldr	x8, [sp, #112]
   40a2c:	cbz	x8, 40a3c <rpl_re_set_registers@@Base+0x13aa0>
   40a30:	add	x8, sp, #0x70
   40a34:	ldr	x0, [x8, #48]
   40a38:	bl	a930 <free@plt>
   40a3c:	ldur	w8, [x29, #-52]
   40a40:	stur	w8, [x29, #-4]
   40a44:	ldur	w0, [x29, #-4]
   40a48:	ldp	x29, x30, [sp, #240]
   40a4c:	add	sp, sp, #0x100
   40a50:	ret
   40a54:	sub	sp, sp, #0x80
   40a58:	stp	x29, x30, [sp, #112]
   40a5c:	add	x29, sp, #0x70
   40a60:	stur	x0, [x29, #-16]
   40a64:	stur	x1, [x29, #-24]
   40a68:	stur	x2, [x29, #-32]
   40a6c:	ldur	x8, [x29, #-24]
   40a70:	ldr	x8, [x8, #8]
   40a74:	cbz	x8, 40a84 <rpl_re_set_registers@@Base+0x13ae8>
   40a78:	ldur	x8, [x29, #-32]
   40a7c:	ldr	x8, [x8, #8]
   40a80:	cbnz	x8, 40a8c <rpl_re_set_registers@@Base+0x13af0>
   40a84:	stur	wzr, [x29, #-4]
   40a88:	b	40e84 <rpl_re_set_registers@@Base+0x13ee8>
   40a8c:	ldur	x8, [x29, #-24]
   40a90:	ldr	x8, [x8, #8]
   40a94:	ldur	x9, [x29, #-32]
   40a98:	ldr	x9, [x9, #8]
   40a9c:	add	x8, x8, x9
   40aa0:	ldur	x9, [x29, #-16]
   40aa4:	ldr	x9, [x9, #8]
   40aa8:	add	x8, x8, x9
   40aac:	ldur	x9, [x29, #-16]
   40ab0:	ldr	x9, [x9]
   40ab4:	cmp	x8, x9
   40ab8:	b.le	40b3c <rpl_re_set_registers@@Base+0x13ba0>
   40abc:	ldur	x8, [x29, #-24]
   40ac0:	ldr	x8, [x8, #8]
   40ac4:	ldur	x9, [x29, #-32]
   40ac8:	ldr	x9, [x9, #8]
   40acc:	add	x8, x8, x9
   40ad0:	ldur	x9, [x29, #-16]
   40ad4:	ldr	x9, [x9]
   40ad8:	add	x8, x8, x9
   40adc:	str	x8, [sp, #24]
   40ae0:	ldur	x8, [x29, #-16]
   40ae4:	ldr	x0, [x8, #16]
   40ae8:	ldr	x8, [sp, #24]
   40aec:	mov	x9, #0x8                   	// #8
   40af0:	mul	x1, x8, x9
   40af4:	bl	af40 <realloc@plt>
   40af8:	str	x0, [sp, #16]
   40afc:	ldr	x8, [sp, #16]
   40b00:	cmp	x8, #0x0
   40b04:	cset	w10, eq  // eq = none
   40b08:	and	w10, w10, #0x1
   40b0c:	mov	w0, w10
   40b10:	sxtw	x8, w0
   40b14:	cbz	x8, 40b24 <rpl_re_set_registers@@Base+0x13b88>
   40b18:	mov	w8, #0xc                   	// #12
   40b1c:	stur	w8, [x29, #-4]
   40b20:	b	40e84 <rpl_re_set_registers@@Base+0x13ee8>
   40b24:	ldr	x8, [sp, #16]
   40b28:	ldur	x9, [x29, #-16]
   40b2c:	str	x8, [x9, #16]
   40b30:	ldr	x8, [sp, #24]
   40b34:	ldur	x9, [x29, #-16]
   40b38:	str	x8, [x9]
   40b3c:	ldur	x8, [x29, #-16]
   40b40:	ldr	x8, [x8, #8]
   40b44:	ldur	x9, [x29, #-24]
   40b48:	ldr	x9, [x9, #8]
   40b4c:	add	x8, x8, x9
   40b50:	ldur	x9, [x29, #-32]
   40b54:	ldr	x9, [x9, #8]
   40b58:	add	x8, x8, x9
   40b5c:	str	x8, [sp, #32]
   40b60:	ldur	x8, [x29, #-24]
   40b64:	ldr	x8, [x8, #8]
   40b68:	subs	x8, x8, #0x1
   40b6c:	stur	x8, [x29, #-40]
   40b70:	ldur	x8, [x29, #-32]
   40b74:	ldr	x8, [x8, #8]
   40b78:	subs	x8, x8, #0x1
   40b7c:	stur	x8, [x29, #-48]
   40b80:	ldur	x8, [x29, #-16]
   40b84:	ldr	x8, [x8, #8]
   40b88:	subs	x8, x8, #0x1
   40b8c:	str	x8, [sp, #48]
   40b90:	ldur	x8, [x29, #-24]
   40b94:	ldr	x8, [x8, #16]
   40b98:	ldur	x9, [x29, #-40]
   40b9c:	ldr	x8, [x8, x9, lsl #3]
   40ba0:	ldur	x9, [x29, #-32]
   40ba4:	ldr	x9, [x9, #16]
   40ba8:	ldur	x10, [x29, #-48]
   40bac:	ldr	x9, [x9, x10, lsl #3]
   40bb0:	cmp	x8, x9
   40bb4:	b.ne	40cb0 <rpl_re_set_registers@@Base+0x13d14>  // b.any
   40bb8:	ldr	x8, [sp, #48]
   40bbc:	cmp	x8, #0x0
   40bc0:	cset	w9, lt  // lt = tstop
   40bc4:	mov	w10, #0x0                   	// #0
   40bc8:	str	w10, [sp, #12]
   40bcc:	tbnz	w9, #0, 40bfc <rpl_re_set_registers@@Base+0x13c60>
   40bd0:	ldur	x8, [x29, #-16]
   40bd4:	ldr	x8, [x8, #16]
   40bd8:	ldr	x9, [sp, #48]
   40bdc:	ldr	x8, [x8, x9, lsl #3]
   40be0:	ldur	x9, [x29, #-24]
   40be4:	ldr	x9, [x9, #16]
   40be8:	ldur	x10, [x29, #-40]
   40bec:	ldr	x9, [x9, x10, lsl #3]
   40bf0:	cmp	x8, x9
   40bf4:	cset	w11, gt
   40bf8:	str	w11, [sp, #12]
   40bfc:	ldr	w8, [sp, #12]
   40c00:	tbnz	w8, #0, 40c08 <rpl_re_set_registers@@Base+0x13c6c>
   40c04:	b	40c18 <rpl_re_set_registers@@Base+0x13c7c>
   40c08:	ldr	x8, [sp, #48]
   40c0c:	subs	x8, x8, #0x1
   40c10:	str	x8, [sp, #48]
   40c14:	b	40bb8 <rpl_re_set_registers@@Base+0x13c1c>
   40c18:	ldr	x8, [sp, #48]
   40c1c:	cmp	x8, #0x0
   40c20:	cset	w9, lt  // lt = tstop
   40c24:	tbnz	w9, #0, 40c50 <rpl_re_set_registers@@Base+0x13cb4>
   40c28:	ldur	x8, [x29, #-16]
   40c2c:	ldr	x8, [x8, #16]
   40c30:	ldr	x9, [sp, #48]
   40c34:	ldr	x8, [x8, x9, lsl #3]
   40c38:	ldur	x9, [x29, #-24]
   40c3c:	ldr	x9, [x9, #16]
   40c40:	ldur	x10, [x29, #-40]
   40c44:	ldr	x9, [x9, x10, lsl #3]
   40c48:	cmp	x8, x9
   40c4c:	b.eq	40c78 <rpl_re_set_registers@@Base+0x13cdc>  // b.none
   40c50:	ldur	x8, [x29, #-24]
   40c54:	ldr	x8, [x8, #16]
   40c58:	ldur	x9, [x29, #-40]
   40c5c:	ldr	x8, [x8, x9, lsl #3]
   40c60:	ldur	x9, [x29, #-16]
   40c64:	ldr	x9, [x9, #16]
   40c68:	ldr	x10, [sp, #32]
   40c6c:	subs	x10, x10, #0x1
   40c70:	str	x10, [sp, #32]
   40c74:	str	x8, [x9, x10, lsl #3]
   40c78:	ldur	x8, [x29, #-40]
   40c7c:	subs	x8, x8, #0x1
   40c80:	stur	x8, [x29, #-40]
   40c84:	cmp	x8, #0x0
   40c88:	cset	w9, lt  // lt = tstop
   40c8c:	tbnz	w9, #0, 40ca8 <rpl_re_set_registers@@Base+0x13d0c>
   40c90:	ldur	x8, [x29, #-48]
   40c94:	subs	x8, x8, #0x1
   40c98:	stur	x8, [x29, #-48]
   40c9c:	cmp	x8, #0x0
   40ca0:	cset	w9, ge  // ge = tcont
   40ca4:	tbnz	w9, #0, 40cac <rpl_re_set_registers@@Base+0x13d10>
   40ca8:	b	40d18 <rpl_re_set_registers@@Base+0x13d7c>
   40cac:	b	40d14 <rpl_re_set_registers@@Base+0x13d78>
   40cb0:	ldur	x8, [x29, #-24]
   40cb4:	ldr	x8, [x8, #16]
   40cb8:	ldur	x9, [x29, #-40]
   40cbc:	ldr	x8, [x8, x9, lsl #3]
   40cc0:	ldur	x9, [x29, #-32]
   40cc4:	ldr	x9, [x9, #16]
   40cc8:	ldur	x10, [x29, #-48]
   40ccc:	ldr	x9, [x9, x10, lsl #3]
   40cd0:	cmp	x8, x9
   40cd4:	b.ge	40cf8 <rpl_re_set_registers@@Base+0x13d5c>  // b.tcont
   40cd8:	ldur	x8, [x29, #-48]
   40cdc:	subs	x8, x8, #0x1
   40ce0:	stur	x8, [x29, #-48]
   40ce4:	cmp	x8, #0x0
   40ce8:	cset	w9, ge  // ge = tcont
   40cec:	tbnz	w9, #0, 40cf4 <rpl_re_set_registers@@Base+0x13d58>
   40cf0:	b	40d18 <rpl_re_set_registers@@Base+0x13d7c>
   40cf4:	b	40d14 <rpl_re_set_registers@@Base+0x13d78>
   40cf8:	ldur	x8, [x29, #-40]
   40cfc:	subs	x8, x8, #0x1
   40d00:	stur	x8, [x29, #-40]
   40d04:	cmp	x8, #0x0
   40d08:	cset	w9, ge  // ge = tcont
   40d0c:	tbnz	w9, #0, 40d14 <rpl_re_set_registers@@Base+0x13d78>
   40d10:	b	40d18 <rpl_re_set_registers@@Base+0x13d7c>
   40d14:	b	40b90 <rpl_re_set_registers@@Base+0x13bf4>
   40d18:	ldur	x8, [x29, #-16]
   40d1c:	ldr	x8, [x8, #8]
   40d20:	subs	x8, x8, #0x1
   40d24:	str	x8, [sp, #48]
   40d28:	ldur	x8, [x29, #-16]
   40d2c:	ldr	x8, [x8, #8]
   40d30:	ldur	x9, [x29, #-24]
   40d34:	ldr	x9, [x9, #8]
   40d38:	add	x8, x8, x9
   40d3c:	ldur	x9, [x29, #-32]
   40d40:	ldr	x9, [x9, #8]
   40d44:	add	x8, x8, x9
   40d48:	subs	x8, x8, #0x1
   40d4c:	str	x8, [sp, #56]
   40d50:	ldr	x8, [sp, #56]
   40d54:	ldr	x9, [sp, #32]
   40d58:	subs	x8, x8, x9
   40d5c:	add	x8, x8, #0x1
   40d60:	str	x8, [sp, #40]
   40d64:	ldr	x8, [sp, #40]
   40d68:	ldur	x9, [x29, #-16]
   40d6c:	ldr	x10, [x9, #8]
   40d70:	add	x8, x10, x8
   40d74:	str	x8, [x9, #8]
   40d78:	ldr	x8, [sp, #40]
   40d7c:	cmp	x8, #0x0
   40d80:	cset	w11, le
   40d84:	tbnz	w11, #0, 40e50 <rpl_re_set_registers@@Base+0x13eb4>
   40d88:	ldr	x8, [sp, #48]
   40d8c:	cmp	x8, #0x0
   40d90:	cset	w9, lt  // lt = tstop
   40d94:	tbnz	w9, #0, 40e50 <rpl_re_set_registers@@Base+0x13eb4>
   40d98:	ldur	x8, [x29, #-16]
   40d9c:	ldr	x8, [x8, #16]
   40da0:	ldr	x9, [sp, #56]
   40da4:	ldr	x8, [x8, x9, lsl #3]
   40da8:	ldur	x9, [x29, #-16]
   40dac:	ldr	x9, [x9, #16]
   40db0:	ldr	x10, [sp, #48]
   40db4:	ldr	x9, [x9, x10, lsl #3]
   40db8:	cmp	x8, x9
   40dbc:	b.le	40e08 <rpl_re_set_registers@@Base+0x13e6c>
   40dc0:	ldur	x8, [x29, #-16]
   40dc4:	ldr	x8, [x8, #16]
   40dc8:	ldr	x9, [sp, #56]
   40dcc:	subs	x10, x9, #0x1
   40dd0:	str	x10, [sp, #56]
   40dd4:	ldr	x8, [x8, x9, lsl #3]
   40dd8:	ldur	x9, [x29, #-16]
   40ddc:	ldr	x9, [x9, #16]
   40de0:	ldr	x10, [sp, #48]
   40de4:	ldr	x11, [sp, #40]
   40de8:	subs	x12, x11, #0x1
   40dec:	str	x12, [sp, #40]
   40df0:	add	x10, x10, x11
   40df4:	str	x8, [x9, x10, lsl #3]
   40df8:	ldr	x8, [sp, #40]
   40dfc:	cbnz	x8, 40e04 <rpl_re_set_registers@@Base+0x13e68>
   40e00:	b	40e50 <rpl_re_set_registers@@Base+0x13eb4>
   40e04:	b	40e4c <rpl_re_set_registers@@Base+0x13eb0>
   40e08:	ldur	x8, [x29, #-16]
   40e0c:	ldr	x8, [x8, #16]
   40e10:	ldr	x9, [sp, #48]
   40e14:	ldr	x8, [x8, x9, lsl #3]
   40e18:	ldur	x9, [x29, #-16]
   40e1c:	ldr	x9, [x9, #16]
   40e20:	ldr	x10, [sp, #48]
   40e24:	ldr	x11, [sp, #40]
   40e28:	add	x10, x10, x11
   40e2c:	str	x8, [x9, x10, lsl #3]
   40e30:	ldr	x8, [sp, #48]
   40e34:	subs	x8, x8, #0x1
   40e38:	str	x8, [sp, #48]
   40e3c:	cmp	x8, #0x0
   40e40:	cset	w12, ge  // ge = tcont
   40e44:	tbnz	w12, #0, 40e4c <rpl_re_set_registers@@Base+0x13eb0>
   40e48:	b	40e50 <rpl_re_set_registers@@Base+0x13eb4>
   40e4c:	b	40d98 <rpl_re_set_registers@@Base+0x13dfc>
   40e50:	ldur	x8, [x29, #-16]
   40e54:	ldr	x0, [x8, #16]
   40e58:	ldur	x8, [x29, #-16]
   40e5c:	ldr	x8, [x8, #16]
   40e60:	ldr	x9, [sp, #32]
   40e64:	mov	x10, #0x8                   	// #8
   40e68:	mul	x9, x10, x9
   40e6c:	add	x1, x8, x9
   40e70:	ldr	x8, [sp, #40]
   40e74:	mov	x9, #0x8                   	// #8
   40e78:	mul	x2, x8, x9
   40e7c:	bl	af30 <memcpy@plt>
   40e80:	stur	wzr, [x29, #-4]
   40e84:	ldur	w0, [x29, #-4]
   40e88:	ldp	x29, x30, [sp, #112]
   40e8c:	add	sp, sp, #0x80
   40e90:	ret
   40e94:	sub	sp, sp, #0xa0
   40e98:	stp	x29, x30, [sp, #144]
   40e9c:	add	x29, sp, #0x90
   40ea0:	stur	x0, [x29, #-16]
   40ea4:	stur	x1, [x29, #-24]
   40ea8:	stur	x2, [x29, #-32]
   40eac:	stur	x3, [x29, #-40]
   40eb0:	ldur	x8, [x29, #-16]
   40eb4:	ldr	x8, [x8, #56]
   40eb8:	ldur	x9, [x29, #-24]
   40ebc:	mov	x10, #0x18                  	// #24
   40ec0:	mul	x9, x10, x9
   40ec4:	add	x8, x8, x9
   40ec8:	stur	x8, [x29, #-64]
   40ecc:	str	xzr, [sp, #56]
   40ed0:	str	xzr, [sp, #64]
   40ed4:	str	xzr, [sp, #72]
   40ed8:	stur	xzr, [x29, #-48]
   40edc:	ldur	x8, [x29, #-48]
   40ee0:	ldur	x9, [x29, #-64]
   40ee4:	ldr	x9, [x9, #8]
   40ee8:	cmp	x8, x9
   40eec:	b.ge	41078 <rpl_re_set_registers@@Base+0x140dc>  // b.tcont
   40ef0:	ldur	x8, [x29, #-64]
   40ef4:	ldr	x8, [x8, #16]
   40ef8:	ldur	x9, [x29, #-48]
   40efc:	ldr	x8, [x8, x9, lsl #3]
   40f00:	str	x8, [sp, #48]
   40f04:	ldr	x8, [sp, #48]
   40f08:	ldur	x9, [x29, #-24]
   40f0c:	cmp	x8, x9
   40f10:	b.ne	40f18 <rpl_re_set_registers@@Base+0x13f7c>  // b.any
   40f14:	b	41068 <rpl_re_set_registers@@Base+0x140cc>
   40f18:	ldur	x8, [x29, #-16]
   40f1c:	ldr	x8, [x8]
   40f20:	ldr	x9, [sp, #48]
   40f24:	mov	x10, #0x10                  	// #16
   40f28:	mul	x9, x10, x9
   40f2c:	add	x8, x8, x9
   40f30:	ldr	w11, [x8, #8]
   40f34:	and	w11, w11, #0xff
   40f38:	and	w11, w11, #0x8
   40f3c:	cbz	w11, 41068 <rpl_re_set_registers@@Base+0x140cc>
   40f40:	ldur	x8, [x29, #-16]
   40f44:	ldr	x8, [x8, #40]
   40f48:	ldr	x9, [sp, #48]
   40f4c:	mov	x10, #0x18                  	// #24
   40f50:	mul	x9, x10, x9
   40f54:	add	x8, x8, x9
   40f58:	ldr	x8, [x8, #16]
   40f5c:	ldr	x8, [x8]
   40f60:	str	x8, [sp, #40]
   40f64:	ldur	x8, [x29, #-16]
   40f68:	ldr	x8, [x8, #40]
   40f6c:	ldr	x9, [sp, #48]
   40f70:	mul	x9, x10, x9
   40f74:	add	x8, x8, x9
   40f78:	ldr	x8, [x8, #8]
   40f7c:	cmp	x8, #0x1
   40f80:	b.le	40fac <rpl_re_set_registers@@Base+0x14010>
   40f84:	ldur	x8, [x29, #-16]
   40f88:	ldr	x8, [x8, #40]
   40f8c:	ldr	x9, [sp, #48]
   40f90:	mov	x10, #0x18                  	// #24
   40f94:	mul	x9, x10, x9
   40f98:	add	x8, x8, x9
   40f9c:	ldr	x8, [x8, #16]
   40fa0:	ldr	x8, [x8, #8]
   40fa4:	str	x8, [sp, #8]
   40fa8:	b	40fb4 <rpl_re_set_registers@@Base+0x14018>
   40fac:	mov	x8, #0xffffffffffffffff    	// #-1
   40fb0:	str	x8, [sp, #8]
   40fb4:	ldr	x8, [sp, #8]
   40fb8:	str	x8, [sp, #32]
   40fbc:	ldur	x0, [x29, #-64]
   40fc0:	ldr	x1, [sp, #40]
   40fc4:	bl	37288 <rpl_re_set_registers@@Base+0xa2ec>
   40fc8:	cbnz	x0, 40fdc <rpl_re_set_registers@@Base+0x14040>
   40fcc:	ldur	x0, [x29, #-32]
   40fd0:	ldr	x1, [sp, #40]
   40fd4:	bl	37288 <rpl_re_set_registers@@Base+0xa2ec>
   40fd8:	cbnz	x0, 4100c <rpl_re_set_registers@@Base+0x14070>
   40fdc:	ldr	x8, [sp, #32]
   40fe0:	cmp	x8, #0x0
   40fe4:	cset	w9, le
   40fe8:	tbnz	w9, #0, 41068 <rpl_re_set_registers@@Base+0x140cc>
   40fec:	ldur	x0, [x29, #-64]
   40ff0:	ldr	x1, [sp, #32]
   40ff4:	bl	37288 <rpl_re_set_registers@@Base+0xa2ec>
   40ff8:	cbnz	x0, 41068 <rpl_re_set_registers@@Base+0x140cc>
   40ffc:	ldur	x0, [x29, #-32]
   41000:	ldr	x1, [sp, #32]
   41004:	bl	37288 <rpl_re_set_registers@@Base+0xa2ec>
   41008:	cbz	x0, 41068 <rpl_re_set_registers@@Base+0x140cc>
   4100c:	ldur	x1, [x29, #-40]
   41010:	ldur	x8, [x29, #-16]
   41014:	ldr	x8, [x8, #56]
   41018:	ldr	x9, [sp, #48]
   4101c:	mov	x10, #0x18                  	// #24
   41020:	mul	x9, x10, x9
   41024:	add	x2, x8, x9
   41028:	add	x0, sp, #0x38
   4102c:	bl	40a54 <rpl_re_set_registers@@Base+0x13ab8>
   41030:	stur	w0, [x29, #-52]
   41034:	ldur	w11, [x29, #-52]
   41038:	cmp	w11, #0x0
   4103c:	cset	w11, ne  // ne = any
   41040:	and	w11, w11, #0x1
   41044:	mov	w1, w11
   41048:	sxtw	x8, w1
   4104c:	cbz	x8, 41068 <rpl_re_set_registers@@Base+0x140cc>
   41050:	add	x8, sp, #0x38
   41054:	ldr	x0, [x8, #16]
   41058:	bl	a930 <free@plt>
   4105c:	ldur	w9, [x29, #-52]
   41060:	stur	w9, [x29, #-4]
   41064:	b	410f4 <rpl_re_set_registers@@Base+0x14158>
   41068:	ldur	x8, [x29, #-48]
   4106c:	add	x8, x8, #0x1
   41070:	stur	x8, [x29, #-48]
   41074:	b	40edc <rpl_re_set_registers@@Base+0x13f40>
   41078:	stur	xzr, [x29, #-48]
   4107c:	ldur	x8, [x29, #-48]
   41080:	ldur	x9, [x29, #-64]
   41084:	ldr	x9, [x9, #8]
   41088:	cmp	x8, x9
   4108c:	b.ge	410e4 <rpl_re_set_registers@@Base+0x14148>  // b.tcont
   41090:	ldur	x8, [x29, #-64]
   41094:	ldr	x8, [x8, #16]
   41098:	ldur	x9, [x29, #-48]
   4109c:	ldr	x8, [x8, x9, lsl #3]
   410a0:	str	x8, [sp, #24]
   410a4:	ldr	x1, [sp, #24]
   410a8:	add	x0, sp, #0x38
   410ac:	bl	37288 <rpl_re_set_registers@@Base+0xa2ec>
   410b0:	cbnz	x0, 410d4 <rpl_re_set_registers@@Base+0x14138>
   410b4:	ldur	x0, [x29, #-32]
   410b8:	ldr	x1, [sp, #24]
   410bc:	bl	37288 <rpl_re_set_registers@@Base+0xa2ec>
   410c0:	subs	x8, x0, #0x1
   410c4:	str	x8, [sp, #16]
   410c8:	ldur	x0, [x29, #-32]
   410cc:	ldr	x1, [sp, #16]
   410d0:	bl	37978 <rpl_re_set_registers@@Base+0xa9dc>
   410d4:	ldur	x8, [x29, #-48]
   410d8:	add	x8, x8, #0x1
   410dc:	stur	x8, [x29, #-48]
   410e0:	b	4107c <rpl_re_set_registers@@Base+0x140e0>
   410e4:	add	x8, sp, #0x38
   410e8:	ldr	x0, [x8, #16]
   410ec:	bl	a930 <free@plt>
   410f0:	stur	wzr, [x29, #-4]
   410f4:	ldur	w0, [x29, #-4]
   410f8:	ldp	x29, x30, [sp, #144]
   410fc:	add	sp, sp, #0xa0
   41100:	ret
   41104:	sub	sp, sp, #0x90
   41108:	stp	x29, x30, [sp, #128]
   4110c:	add	x29, sp, #0x80
   41110:	stur	x0, [x29, #-16]
   41114:	stur	x1, [x29, #-24]
   41118:	stur	x2, [x29, #-32]
   4111c:	stur	x3, [x29, #-40]
   41120:	stur	x4, [x29, #-48]
   41124:	stur	x5, [x29, #-56]
   41128:	ldur	x8, [x29, #-16]
   4112c:	ldr	x8, [x8, #152]
   41130:	str	x8, [sp, #64]
   41134:	ldur	x0, [x29, #-16]
   41138:	ldur	x1, [x29, #-40]
   4113c:	bl	3ba80 <rpl_re_set_registers@@Base+0xeae4>
   41140:	str	x0, [sp, #32]
   41144:	ldur	x0, [x29, #-16]
   41148:	ldur	x1, [x29, #-56]
   4114c:	bl	3ba80 <rpl_re_set_registers@@Base+0xeae4>
   41150:	str	x0, [sp, #24]
   41154:	str	xzr, [sp, #56]
   41158:	ldr	x8, [sp, #56]
   4115c:	ldur	x9, [x29, #-24]
   41160:	ldr	x9, [x9, #8]
   41164:	cmp	x8, x9
   41168:	b.ge	41250 <rpl_re_set_registers@@Base+0x142b4>  // b.tcont
   4116c:	ldur	x8, [x29, #-16]
   41170:	ldr	x8, [x8, #216]
   41174:	ldur	x9, [x29, #-24]
   41178:	mov	x10, #0x10                  	// #16
   4117c:	ldr	x9, [x9, #16]
   41180:	ldr	x11, [sp, #56]
   41184:	ldr	x9, [x9, x11, lsl #3]
   41188:	mov	x11, #0x28                  	// #40
   4118c:	mul	x9, x11, x9
   41190:	add	x8, x8, x9
   41194:	str	x8, [sp, #8]
   41198:	ldr	x8, [sp, #64]
   4119c:	ldr	x8, [x8]
   411a0:	ldr	x9, [sp, #8]
   411a4:	ldr	x9, [x9]
   411a8:	mul	x9, x10, x9
   411ac:	ldr	x8, [x8, x9]
   411b0:	str	x8, [sp, #16]
   411b4:	ldur	x0, [x29, #-16]
   411b8:	ldur	x8, [x29, #-24]
   411bc:	ldr	x8, [x8, #16]
   411c0:	ldr	x9, [sp, #56]
   411c4:	ldr	x1, [x8, x9, lsl #3]
   411c8:	ldr	x2, [sp, #16]
   411cc:	ldur	x3, [x29, #-32]
   411d0:	ldur	x4, [x29, #-40]
   411d4:	ldr	x5, [sp, #32]
   411d8:	bl	41270 <rpl_re_set_registers@@Base+0x142d4>
   411dc:	mov	w1, w0
   411e0:	sxtw	x8, w1
   411e4:	str	x8, [sp, #40]
   411e8:	ldur	x0, [x29, #-16]
   411ec:	ldur	x8, [x29, #-24]
   411f0:	ldr	x8, [x8, #16]
   411f4:	ldr	x9, [sp, #56]
   411f8:	ldr	x1, [x8, x9, lsl #3]
   411fc:	ldr	x2, [sp, #16]
   41200:	ldur	x3, [x29, #-48]
   41204:	ldur	x4, [x29, #-56]
   41208:	ldr	x5, [sp, #24]
   4120c:	bl	41270 <rpl_re_set_registers@@Base+0x142d4>
   41210:	mov	w1, w0
   41214:	sxtw	x8, w1
   41218:	str	x8, [sp, #48]
   4121c:	ldr	x8, [sp, #48]
   41220:	ldr	x9, [sp, #40]
   41224:	cmp	x8, x9
   41228:	b.ne	41230 <rpl_re_set_registers@@Base+0x14294>  // b.any
   4122c:	b	41240 <rpl_re_set_registers@@Base+0x142a4>
   41230:	mov	w8, #0x1                   	// #1
   41234:	and	w8, w8, #0x1
   41238:	sturb	w8, [x29, #-1]
   4123c:	b	4125c <rpl_re_set_registers@@Base+0x142c0>
   41240:	ldr	x8, [sp, #56]
   41244:	add	x8, x8, #0x1
   41248:	str	x8, [sp, #56]
   4124c:	b	41158 <rpl_re_set_registers@@Base+0x141bc>
   41250:	mov	w8, wzr
   41254:	and	w8, w8, #0x1
   41258:	sturb	w8, [x29, #-1]
   4125c:	ldurb	w8, [x29, #-1]
   41260:	and	w0, w8, #0x1
   41264:	ldp	x29, x30, [sp, #128]
   41268:	add	sp, sp, #0x90
   4126c:	ret
   41270:	sub	sp, sp, #0x60
   41274:	stp	x29, x30, [sp, #80]
   41278:	add	x29, sp, #0x50
   4127c:	stur	x0, [x29, #-16]
   41280:	stur	x1, [x29, #-24]
   41284:	stur	x2, [x29, #-32]
   41288:	str	x3, [sp, #40]
   4128c:	str	x4, [sp, #32]
   41290:	str	x5, [sp, #24]
   41294:	ldur	x8, [x29, #-16]
   41298:	ldr	x8, [x8, #216]
   4129c:	ldur	x9, [x29, #-24]
   412a0:	mov	x10, #0x28                  	// #40
   412a4:	mul	x9, x10, x9
   412a8:	add	x8, x8, x9
   412ac:	str	x8, [sp, #16]
   412b0:	ldr	x8, [sp, #32]
   412b4:	ldr	x9, [sp, #16]
   412b8:	ldr	x9, [x9, #16]
   412bc:	cmp	x8, x9
   412c0:	b.ge	412d0 <rpl_re_set_registers@@Base+0x14334>  // b.tcont
   412c4:	mov	w8, #0xffffffff            	// #-1
   412c8:	stur	w8, [x29, #-4]
   412cc:	b	4135c <rpl_re_set_registers@@Base+0x143c0>
   412d0:	ldr	x8, [sp, #16]
   412d4:	ldr	x8, [x8, #24]
   412d8:	ldr	x9, [sp, #32]
   412dc:	cmp	x8, x9
   412e0:	b.ge	412f0 <rpl_re_set_registers@@Base+0x14354>  // b.tcont
   412e4:	mov	w8, #0x1                   	// #1
   412e8:	stur	w8, [x29, #-4]
   412ec:	b	4135c <rpl_re_set_registers@@Base+0x143c0>
   412f0:	ldr	x8, [sp, #32]
   412f4:	ldr	x9, [sp, #16]
   412f8:	ldr	x9, [x9, #16]
   412fc:	cmp	x8, x9
   41300:	cset	w10, eq  // eq = none
   41304:	and	w10, w10, #0x1
   41308:	str	w10, [sp, #12]
   4130c:	ldr	x8, [sp, #32]
   41310:	ldr	x9, [sp, #16]
   41314:	ldr	x9, [x9, #24]
   41318:	cmp	x8, x9
   4131c:	cset	w10, eq  // eq = none
   41320:	and	w10, w10, #0x1
   41324:	ldr	w11, [sp, #12]
   41328:	orr	w10, w11, w10, lsl #1
   4132c:	str	w10, [sp, #12]
   41330:	ldr	w10, [sp, #12]
   41334:	cbnz	w10, 41340 <rpl_re_set_registers@@Base+0x143a4>
   41338:	stur	wzr, [x29, #-4]
   4133c:	b	4135c <rpl_re_set_registers@@Base+0x143c0>
   41340:	ldur	x0, [x29, #-16]
   41344:	ldr	w1, [sp, #12]
   41348:	ldur	x2, [x29, #-32]
   4134c:	ldr	x3, [sp, #40]
   41350:	ldr	x4, [sp, #24]
   41354:	bl	4136c <rpl_re_set_registers@@Base+0x143d0>
   41358:	stur	w0, [x29, #-4]
   4135c:	ldur	w0, [x29, #-4]
   41360:	ldp	x29, x30, [sp, #80]
   41364:	add	sp, sp, #0x60
   41368:	ret
   4136c:	sub	sp, sp, #0x80
   41370:	stp	x29, x30, [sp, #112]
   41374:	add	x29, sp, #0x70
   41378:	stur	x0, [x29, #-16]
   4137c:	stur	w1, [x29, #-20]
   41380:	stur	x2, [x29, #-32]
   41384:	stur	x3, [x29, #-40]
   41388:	stur	x4, [x29, #-48]
   4138c:	ldur	x8, [x29, #-16]
   41390:	ldr	x8, [x8, #152]
   41394:	str	x8, [sp, #56]
   41398:	ldr	x8, [sp, #56]
   4139c:	ldr	x8, [x8, #48]
   413a0:	ldur	x9, [x29, #-40]
   413a4:	mov	x10, #0x18                  	// #24
   413a8:	mul	x9, x10, x9
   413ac:	add	x8, x8, x9
   413b0:	str	x8, [sp, #48]
   413b4:	str	xzr, [sp, #40]
   413b8:	ldr	x8, [sp, #40]
   413bc:	ldr	x9, [sp, #48]
   413c0:	ldr	x9, [x9, #8]
   413c4:	cmp	x8, x9
   413c8:	b.ge	4161c <rpl_re_set_registers@@Base+0x14680>  // b.tcont
   413cc:	ldr	x8, [sp, #48]
   413d0:	mov	x9, #0x10                  	// #16
   413d4:	ldr	x8, [x8, #16]
   413d8:	ldr	x10, [sp, #40]
   413dc:	ldr	x8, [x8, x10, lsl #3]
   413e0:	str	x8, [sp, #32]
   413e4:	ldr	x8, [sp, #56]
   413e8:	ldr	x8, [x8]
   413ec:	ldr	x10, [sp, #32]
   413f0:	mul	x9, x9, x10
   413f4:	add	x8, x8, x9
   413f8:	ldr	w11, [x8, #8]
   413fc:	and	w11, w11, #0xff
   41400:	cmp	w11, #0x4
   41404:	str	w11, [sp, #8]
   41408:	b.eq	41430 <rpl_re_set_registers@@Base+0x14494>  // b.none
   4140c:	b	41410 <rpl_re_set_registers@@Base+0x14474>
   41410:	ldr	w8, [sp, #8]
   41414:	cmp	w8, #0x8
   41418:	b.eq	41590 <rpl_re_set_registers@@Base+0x145f4>  // b.none
   4141c:	b	41420 <rpl_re_set_registers@@Base+0x14484>
   41420:	ldr	w8, [sp, #8]
   41424:	cmp	w8, #0x9
   41428:	b.eq	415d0 <rpl_re_set_registers@@Base+0x14634>  // b.none
   4142c:	b	4160c <rpl_re_set_registers@@Base+0x14670>
   41430:	ldur	x8, [x29, #-48]
   41434:	mov	x9, #0xffffffffffffffff    	// #-1
   41438:	cmp	x8, x9
   4143c:	b.eq	4158c <rpl_re_set_registers@@Base+0x145f0>  // b.none
   41440:	ldur	x8, [x29, #-16]
   41444:	ldr	x8, [x8, #216]
   41448:	ldur	x9, [x29, #-48]
   4144c:	mov	x10, #0x28                  	// #40
   41450:	mul	x9, x10, x9
   41454:	add	x8, x8, x9
   41458:	str	x8, [sp, #24]
   4145c:	ldr	x8, [sp, #24]
   41460:	ldr	x8, [x8]
   41464:	ldr	x9, [sp, #32]
   41468:	cmp	x8, x9
   4146c:	b.eq	41474 <rpl_re_set_registers@@Base+0x144d8>  // b.none
   41470:	b	41578 <rpl_re_set_registers@@Base+0x145dc>
   41474:	ldur	x8, [x29, #-32]
   41478:	cmp	x8, #0x40
   4147c:	b.ge	414a4 <rpl_re_set_registers@@Base+0x14508>  // b.tcont
   41480:	ldr	x8, [sp, #24]
   41484:	ldrh	w9, [x8, #34]
   41488:	mov	w8, w9
   4148c:	ldur	x10, [x29, #-32]
   41490:	mov	x11, #0x1                   	// #1
   41494:	lsl	x10, x11, x10
   41498:	and	x8, x8, x10
   4149c:	cbnz	x8, 414a4 <rpl_re_set_registers@@Base+0x14508>
   414a0:	b	41578 <rpl_re_set_registers@@Base+0x145dc>
   414a4:	ldr	x8, [sp, #56]
   414a8:	ldr	x8, [x8, #40]
   414ac:	ldr	x9, [sp, #32]
   414b0:	mov	x10, #0x18                  	// #24
   414b4:	mul	x9, x10, x9
   414b8:	add	x8, x8, x9
   414bc:	ldr	x8, [x8, #16]
   414c0:	ldr	x8, [x8]
   414c4:	str	x8, [sp, #16]
   414c8:	ldr	x8, [sp, #16]
   414cc:	ldur	x9, [x29, #-40]
   414d0:	cmp	x8, x9
   414d4:	b.ne	414f8 <rpl_re_set_registers@@Base+0x1455c>  // b.any
   414d8:	ldur	w8, [x29, #-20]
   414dc:	and	w8, w8, #0x1
   414e0:	cbz	w8, 414f0 <rpl_re_set_registers@@Base+0x14554>
   414e4:	mov	w8, #0xffffffff            	// #-1
   414e8:	stur	w8, [x29, #-4]
   414ec:	b	41634 <rpl_re_set_registers@@Base+0x14698>
   414f0:	stur	wzr, [x29, #-4]
   414f4:	b	41634 <rpl_re_set_registers@@Base+0x14698>
   414f8:	ldur	x0, [x29, #-16]
   414fc:	ldur	w1, [x29, #-20]
   41500:	ldur	x2, [x29, #-32]
   41504:	ldr	x3, [sp, #16]
   41508:	ldur	x4, [x29, #-48]
   4150c:	bl	4136c <rpl_re_set_registers@@Base+0x143d0>
   41510:	str	w0, [sp, #12]
   41514:	ldr	w8, [sp, #12]
   41518:	mov	w9, #0xffffffff            	// #-1
   4151c:	cmp	w8, w9
   41520:	b.ne	41530 <rpl_re_set_registers@@Base+0x14594>  // b.any
   41524:	mov	w8, #0xffffffff            	// #-1
   41528:	stur	w8, [x29, #-4]
   4152c:	b	41634 <rpl_re_set_registers@@Base+0x14698>
   41530:	ldr	w8, [sp, #12]
   41534:	cbnz	w8, 4154c <rpl_re_set_registers@@Base+0x145b0>
   41538:	ldur	w8, [x29, #-20]
   4153c:	and	w8, w8, #0x2
   41540:	cbz	w8, 4154c <rpl_re_set_registers@@Base+0x145b0>
   41544:	stur	wzr, [x29, #-4]
   41548:	b	41634 <rpl_re_set_registers@@Base+0x14698>
   4154c:	ldur	x8, [x29, #-32]
   41550:	cmp	x8, #0x40
   41554:	b.ge	41578 <rpl_re_set_registers@@Base+0x145dc>  // b.tcont
   41558:	ldur	x8, [x29, #-32]
   4155c:	mov	x9, #0x1                   	// #1
   41560:	lsl	x8, x9, x8
   41564:	ldr	x9, [sp, #24]
   41568:	ldrh	w10, [x9, #34]
   4156c:	mov	w11, w10
   41570:	bic	x8, x11, x8
   41574:	strh	w8, [x9, #34]
   41578:	ldr	x8, [sp, #24]
   4157c:	add	x9, x8, #0x28
   41580:	str	x9, [sp, #24]
   41584:	ldrb	w10, [x8, #32]
   41588:	cbnz	w10, 4145c <rpl_re_set_registers@@Base+0x144c0>
   4158c:	b	4160c <rpl_re_set_registers@@Base+0x14670>
   41590:	ldur	w8, [x29, #-20]
   41594:	and	w8, w8, #0x1
   41598:	cbz	w8, 415cc <rpl_re_set_registers@@Base+0x14630>
   4159c:	ldur	x8, [x29, #-32]
   415a0:	ldr	x9, [sp, #56]
   415a4:	ldr	x9, [x9]
   415a8:	ldr	x10, [sp, #32]
   415ac:	mov	x11, #0x10                  	// #16
   415b0:	mul	x10, x11, x10
   415b4:	ldr	x9, [x9, x10]
   415b8:	cmp	x8, x9
   415bc:	b.ne	415cc <rpl_re_set_registers@@Base+0x14630>  // b.any
   415c0:	mov	w8, #0xffffffff            	// #-1
   415c4:	stur	w8, [x29, #-4]
   415c8:	b	41634 <rpl_re_set_registers@@Base+0x14698>
   415cc:	b	4160c <rpl_re_set_registers@@Base+0x14670>
   415d0:	ldur	w8, [x29, #-20]
   415d4:	and	w8, w8, #0x2
   415d8:	cbz	w8, 41608 <rpl_re_set_registers@@Base+0x1466c>
   415dc:	ldur	x8, [x29, #-32]
   415e0:	ldr	x9, [sp, #56]
   415e4:	ldr	x9, [x9]
   415e8:	ldr	x10, [sp, #32]
   415ec:	mov	x11, #0x10                  	// #16
   415f0:	mul	x10, x11, x10
   415f4:	ldr	x9, [x9, x10]
   415f8:	cmp	x8, x9
   415fc:	b.ne	41608 <rpl_re_set_registers@@Base+0x1466c>  // b.any
   41600:	stur	wzr, [x29, #-4]
   41604:	b	41634 <rpl_re_set_registers@@Base+0x14698>
   41608:	b	4160c <rpl_re_set_registers@@Base+0x14670>
   4160c:	ldr	x8, [sp, #40]
   41610:	add	x8, x8, #0x1
   41614:	str	x8, [sp, #40]
   41618:	b	413b8 <rpl_re_set_registers@@Base+0x1441c>
   4161c:	ldur	w8, [x29, #-20]
   41620:	mov	w9, wzr
   41624:	mov	w10, #0x1                   	// #1
   41628:	tst	w8, #0x2
   4162c:	csel	w8, w10, w9, ne  // ne = any
   41630:	stur	w8, [x29, #-4]
   41634:	ldur	w0, [x29, #-4]
   41638:	ldp	x29, x30, [sp, #112]
   4163c:	add	sp, sp, #0x80
   41640:	ret
   41644:	sub	sp, sp, #0x50
   41648:	stp	x29, x30, [sp, #64]
   4164c:	add	x29, sp, #0x40
   41650:	stur	x0, [x29, #-8]
   41654:	stur	x1, [x29, #-16]
   41658:	stur	x2, [x29, #-24]
   4165c:	str	x3, [sp, #32]
   41660:	str	x4, [sp, #24]
   41664:	ldur	x8, [x29, #-8]
   41668:	ldr	x8, [x8, #152]
   4166c:	str	x8, [sp, #16]
   41670:	ldr	x0, [sp, #16]
   41674:	ldur	x1, [x29, #-24]
   41678:	ldur	x2, [x29, #-8]
   4167c:	ldr	x3, [sp, #32]
   41680:	bl	3d830 <rpl_re_set_registers@@Base+0x10894>
   41684:	str	w0, [sp, #12]
   41688:	ldr	w9, [sp, #12]
   4168c:	cmp	w9, #0x0
   41690:	cset	w9, le
   41694:	tbnz	w9, #0, 4171c <rpl_re_set_registers@@Base+0x14780>
   41698:	ldr	x8, [sp, #32]
   4169c:	ldrsw	x9, [sp, #12]
   416a0:	add	x8, x8, x9
   416a4:	ldr	x9, [sp, #24]
   416a8:	cmp	x8, x9
   416ac:	b.gt	4171c <rpl_re_set_registers@@Base+0x14780>
   416b0:	ldur	x8, [x29, #-16]
   416b4:	ldr	x8, [x8]
   416b8:	ldr	x9, [sp, #32]
   416bc:	ldrsw	x10, [sp, #12]
   416c0:	add	x9, x9, x10
   416c4:	mov	x10, #0x8                   	// #8
   416c8:	mul	x9, x10, x9
   416cc:	add	x8, x8, x9
   416d0:	ldr	x8, [x8]
   416d4:	cbz	x8, 41718 <rpl_re_set_registers@@Base+0x1477c>
   416d8:	ldur	x8, [x29, #-16]
   416dc:	ldr	x8, [x8]
   416e0:	ldr	x9, [sp, #32]
   416e4:	ldrsw	x10, [sp, #12]
   416e8:	add	x9, x9, x10
   416ec:	mov	x10, #0x8                   	// #8
   416f0:	mul	x9, x10, x9
   416f4:	add	x8, x8, x9
   416f8:	ldr	x8, [x8]
   416fc:	add	x0, x8, #0x8
   41700:	ldr	x8, [sp, #16]
   41704:	ldr	x8, [x8, #24]
   41708:	ldur	x9, [x29, #-24]
   4170c:	ldr	x1, [x8, x9, lsl #3]
   41710:	bl	37288 <rpl_re_set_registers@@Base+0xa2ec>
   41714:	cbnz	x0, 4171c <rpl_re_set_registers@@Base+0x14780>
   41718:	str	wzr, [sp, #12]
   4171c:	ldr	w0, [sp, #12]
   41720:	ldp	x29, x30, [sp, #64]
   41724:	add	sp, sp, #0x50
   41728:	ret
   4172c:	sub	sp, sp, #0x30
   41730:	stp	x29, x30, [sp, #32]
   41734:	add	x29, sp, #0x20
   41738:	stur	x0, [x29, #-8]
   4173c:	ldur	x8, [x29, #-8]
   41740:	cbz	x8, 417bc <rpl_re_set_registers@@Base+0x14820>
   41744:	str	xzr, [sp, #16]
   41748:	ldr	x8, [sp, #16]
   4174c:	ldur	x9, [x29, #-8]
   41750:	ldr	x9, [x9]
   41754:	cmp	x8, x9
   41758:	b.ge	417b0 <rpl_re_set_registers@@Base+0x14814>  // b.tcont
   4175c:	ldur	x8, [x29, #-8]
   41760:	ldr	x8, [x8, #16]
   41764:	ldr	x9, [sp, #16]
   41768:	mov	x10, #0x30                  	// #48
   4176c:	mul	x9, x10, x9
   41770:	add	x8, x8, x9
   41774:	ldr	x0, [x8, #40]
   41778:	str	x10, [sp, #8]
   4177c:	bl	a930 <free@plt>
   41780:	ldur	x8, [x29, #-8]
   41784:	ldr	x8, [x8, #16]
   41788:	ldr	x9, [sp, #16]
   4178c:	ldr	x10, [sp, #8]
   41790:	mul	x9, x10, x9
   41794:	add	x8, x8, x9
   41798:	ldr	x0, [x8, #16]
   4179c:	bl	a930 <free@plt>
   417a0:	ldr	x8, [sp, #16]
   417a4:	add	x8, x8, #0x1
   417a8:	str	x8, [sp, #16]
   417ac:	b	41748 <rpl_re_set_registers@@Base+0x147ac>
   417b0:	ldur	x8, [x29, #-8]
   417b4:	ldr	x0, [x8, #16]
   417b8:	bl	a930 <free@plt>
   417bc:	mov	w8, wzr
   417c0:	mov	w0, w8
   417c4:	ldp	x29, x30, [sp, #32]
   417c8:	add	sp, sp, #0x30
   417cc:	ret
   417d0:	sub	sp, sp, #0x60
   417d4:	stp	x29, x30, [sp, #80]
   417d8:	add	x29, sp, #0x50
   417dc:	stur	x0, [x29, #-8]
   417e0:	stur	x1, [x29, #-16]
   417e4:	stur	x2, [x29, #-24]
   417e8:	stur	x3, [x29, #-32]
   417ec:	str	x4, [sp, #40]
   417f0:	str	x5, [sp, #32]
   417f4:	ldur	x8, [x29, #-8]
   417f8:	ldr	x8, [x8]
   417fc:	ldur	x9, [x29, #-32]
   41800:	mov	x10, #0x10                  	// #16
   41804:	mul	x9, x10, x9
   41808:	add	x8, x8, x9
   4180c:	ldr	w11, [x8, #8]
   41810:	and	w11, w11, #0xff
   41814:	str	w11, [sp, #28]
   41818:	ldr	w11, [sp, #28]
   4181c:	cmp	w11, #0x8
   41820:	b.ne	41888 <rpl_re_set_registers@@Base+0x148ec>  // b.any
   41824:	ldur	x8, [x29, #-8]
   41828:	ldr	x8, [x8]
   4182c:	ldur	x9, [x29, #-32]
   41830:	mov	x10, #0x10                  	// #16
   41834:	mul	x9, x10, x9
   41838:	ldr	x8, [x8, x9]
   4183c:	add	x8, x8, #0x1
   41840:	str	x8, [sp, #16]
   41844:	ldr	x8, [sp, #16]
   41848:	ldr	x9, [sp, #32]
   4184c:	cmp	x8, x9
   41850:	b.ge	41884 <rpl_re_set_registers@@Base+0x148e8>  // b.tcont
   41854:	ldr	x8, [sp, #40]
   41858:	ldur	x9, [x29, #-16]
   4185c:	ldr	x10, [sp, #16]
   41860:	mov	x11, #0x10                  	// #16
   41864:	mul	x10, x11, x10
   41868:	str	x8, [x9, x10]
   4186c:	ldur	x8, [x29, #-16]
   41870:	ldr	x9, [sp, #16]
   41874:	mul	x9, x11, x9
   41878:	add	x8, x8, x9
   4187c:	mov	x9, #0xffffffffffffffff    	// #-1
   41880:	str	x9, [x8, #8]
   41884:	b	4199c <rpl_re_set_registers@@Base+0x14a00>
   41888:	ldr	w8, [sp, #28]
   4188c:	cmp	w8, #0x9
   41890:	b.ne	4199c <rpl_re_set_registers@@Base+0x14a00>  // b.any
   41894:	ldur	x8, [x29, #-8]
   41898:	ldr	x8, [x8]
   4189c:	ldur	x9, [x29, #-32]
   418a0:	mov	x10, #0x10                  	// #16
   418a4:	mul	x9, x10, x9
   418a8:	ldr	x8, [x8, x9]
   418ac:	add	x8, x8, #0x1
   418b0:	str	x8, [sp, #8]
   418b4:	ldr	x8, [sp, #8]
   418b8:	ldr	x9, [sp, #32]
   418bc:	cmp	x8, x9
   418c0:	b.ge	4199c <rpl_re_set_registers@@Base+0x14a00>  // b.tcont
   418c4:	ldur	x8, [x29, #-16]
   418c8:	ldr	x9, [sp, #8]
   418cc:	mov	x10, #0x10                  	// #16
   418d0:	mul	x9, x10, x9
   418d4:	ldr	x8, [x8, x9]
   418d8:	ldr	x9, [sp, #40]
   418dc:	cmp	x8, x9
   418e0:	b.ge	4191c <rpl_re_set_registers@@Base+0x14980>  // b.tcont
   418e4:	ldr	x8, [sp, #40]
   418e8:	ldur	x9, [x29, #-16]
   418ec:	ldr	x10, [sp, #8]
   418f0:	mov	x11, #0x10                  	// #16
   418f4:	mul	x10, x11, x10
   418f8:	add	x9, x9, x10
   418fc:	str	x8, [x9, #8]
   41900:	ldur	x0, [x29, #-24]
   41904:	ldur	x1, [x29, #-16]
   41908:	ldr	x8, [sp, #32]
   4190c:	mov	x9, #0x10                  	// #16
   41910:	mul	x2, x9, x8
   41914:	bl	af30 <memcpy@plt>
   41918:	b	4199c <rpl_re_set_registers@@Base+0x14a00>
   4191c:	ldur	x8, [x29, #-8]
   41920:	ldr	x8, [x8]
   41924:	ldur	x9, [x29, #-32]
   41928:	mov	x10, #0x10                  	// #16
   4192c:	mul	x9, x10, x9
   41930:	add	x8, x8, x9
   41934:	ldr	w11, [x8, #8]
   41938:	lsr	w11, w11, #19
   4193c:	and	w11, w11, #0x1
   41940:	cbz	w11, 41980 <rpl_re_set_registers@@Base+0x149e4>
   41944:	ldur	x8, [x29, #-24]
   41948:	ldr	x9, [sp, #8]
   4194c:	mov	x10, #0x10                  	// #16
   41950:	mul	x9, x10, x9
   41954:	ldr	x8, [x8, x9]
   41958:	mov	x9, #0xffffffffffffffff    	// #-1
   4195c:	cmp	x8, x9
   41960:	b.eq	41980 <rpl_re_set_registers@@Base+0x149e4>  // b.none
   41964:	ldur	x0, [x29, #-16]
   41968:	ldur	x1, [x29, #-24]
   4196c:	ldr	x8, [sp, #32]
   41970:	mov	x9, #0x10                  	// #16
   41974:	mul	x2, x9, x8
   41978:	bl	af30 <memcpy@plt>
   4197c:	b	4199c <rpl_re_set_registers@@Base+0x14a00>
   41980:	ldr	x8, [sp, #40]
   41984:	ldur	x9, [x29, #-16]
   41988:	ldr	x10, [sp, #8]
   4198c:	mov	x11, #0x10                  	// #16
   41990:	mul	x10, x11, x10
   41994:	add	x9, x9, x10
   41998:	str	x8, [x9, #8]
   4199c:	ldp	x29, x30, [sp, #80]
   419a0:	add	sp, sp, #0x60
   419a4:	ret
   419a8:	sub	sp, sp, #0x50
   419ac:	stp	x29, x30, [sp, #64]
   419b0:	add	x29, sp, #0x40
   419b4:	stur	x0, [x29, #-8]
   419b8:	stur	x1, [x29, #-16]
   419bc:	stur	x2, [x29, #-24]
   419c0:	str	x3, [sp, #32]
   419c4:	str	x4, [sp, #24]
   419c8:	ldur	x8, [x29, #-8]
   419cc:	ldr	x9, [x8]
   419d0:	subs	x9, x9, #0x1
   419d4:	str	x9, [x8]
   419d8:	str	x9, [sp, #16]
   419dc:	ldr	x8, [sp, #16]
   419e0:	cmp	x8, #0x0
   419e4:	cset	w10, lt  // lt = tstop
   419e8:	tbnz	w10, #0, 419f0 <rpl_re_set_registers@@Base+0x14a54>
   419ec:	b	41a10 <rpl_re_set_registers@@Base+0x14a74>
   419f0:	adrp	x0, 45000 <vasnprintf@@Base+0x2e4c>
   419f4:	add	x0, x0, #0x861
   419f8:	adrp	x1, 45000 <vasnprintf@@Base+0x2e4c>
   419fc:	add	x1, x1, #0x715
   41a00:	mov	w2, #0x555                 	// #1365
   41a04:	adrp	x3, 45000 <vasnprintf@@Base+0x2e4c>
   41a08:	add	x3, x3, #0x86a
   41a0c:	bl	a910 <__assert_fail@plt>
   41a10:	ldur	x8, [x29, #-8]
   41a14:	ldr	x8, [x8, #16]
   41a18:	ldr	x9, [sp, #16]
   41a1c:	mov	x10, #0x30                  	// #48
   41a20:	mul	x9, x10, x9
   41a24:	ldr	x8, [x8, x9]
   41a28:	ldur	x9, [x29, #-16]
   41a2c:	str	x8, [x9]
   41a30:	ldr	x0, [sp, #32]
   41a34:	ldur	x8, [x29, #-8]
   41a38:	ldr	x8, [x8, #16]
   41a3c:	ldr	x9, [sp, #16]
   41a40:	mul	x9, x10, x9
   41a44:	add	x8, x8, x9
   41a48:	ldr	x1, [x8, #16]
   41a4c:	ldur	x8, [x29, #-24]
   41a50:	mov	x9, #0x10                  	// #16
   41a54:	mul	x2, x9, x8
   41a58:	str	x10, [sp, #8]
   41a5c:	bl	af30 <memcpy@plt>
   41a60:	ldr	x8, [sp, #24]
   41a64:	ldr	x0, [x8, #16]
   41a68:	bl	a930 <free@plt>
   41a6c:	ldur	x8, [x29, #-8]
   41a70:	ldr	x8, [x8, #16]
   41a74:	ldr	x9, [sp, #16]
   41a78:	ldr	x10, [sp, #8]
   41a7c:	mul	x9, x10, x9
   41a80:	add	x8, x8, x9
   41a84:	ldr	x0, [x8, #16]
   41a88:	bl	a930 <free@plt>
   41a8c:	ldr	x8, [sp, #24]
   41a90:	ldur	x9, [x29, #-8]
   41a94:	ldr	x9, [x9, #16]
   41a98:	ldr	x10, [sp, #16]
   41a9c:	ldr	x11, [sp, #8]
   41aa0:	mul	x10, x11, x10
   41aa4:	add	x9, x9, x10
   41aa8:	ldur	q0, [x9, #24]
   41aac:	str	q0, [x8]
   41ab0:	ldr	x9, [x9, #40]
   41ab4:	str	x9, [x8, #16]
   41ab8:	ldur	x8, [x29, #-8]
   41abc:	ldr	x8, [x8, #16]
   41ac0:	ldr	x9, [sp, #16]
   41ac4:	mul	x9, x11, x9
   41ac8:	add	x8, x8, x9
   41acc:	ldr	x0, [x8, #8]
   41ad0:	ldp	x29, x30, [sp, #64]
   41ad4:	add	sp, sp, #0x50
   41ad8:	ret
   41adc:	sub	sp, sp, #0xc0
   41ae0:	stp	x29, x30, [sp, #176]
   41ae4:	add	x29, sp, #0xb0
   41ae8:	stur	x0, [x29, #-16]
   41aec:	stur	x1, [x29, #-24]
   41af0:	stur	x2, [x29, #-32]
   41af4:	stur	x3, [x29, #-40]
   41af8:	stur	x4, [x29, #-48]
   41afc:	stur	x5, [x29, #-56]
   41b00:	stur	x6, [x29, #-64]
   41b04:	ldur	x8, [x29, #-16]
   41b08:	ldr	x8, [x8, #152]
   41b0c:	stur	x8, [x29, #-72]
   41b10:	ldur	x8, [x29, #-72]
   41b14:	ldr	x8, [x8]
   41b18:	ldur	x9, [x29, #-48]
   41b1c:	mov	x10, #0x10                  	// #16
   41b20:	mul	x9, x10, x9
   41b24:	add	x8, x8, x9
   41b28:	ldr	w11, [x8, #8]
   41b2c:	and	w11, w11, #0xff
   41b30:	and	w11, w11, #0x8
   41b34:	cbz	w11, 41c90 <rpl_re_set_registers@@Base+0x14cf4>
   41b38:	ldur	x8, [x29, #-16]
   41b3c:	ldr	x8, [x8, #184]
   41b40:	ldur	x9, [x29, #-40]
   41b44:	ldr	x9, [x9]
   41b48:	mov	x10, #0x8                   	// #8
   41b4c:	mul	x9, x10, x9
   41b50:	add	x8, x8, x9
   41b54:	ldr	x8, [x8]
   41b58:	add	x8, x8, #0x8
   41b5c:	str	x8, [sp, #80]
   41b60:	ldur	x8, [x29, #-72]
   41b64:	ldr	x8, [x8, #40]
   41b68:	ldur	x9, [x29, #-48]
   41b6c:	mov	x10, #0x18                  	// #24
   41b70:	mul	x9, x10, x9
   41b74:	add	x8, x8, x9
   41b78:	str	x8, [sp, #72]
   41b7c:	ldur	x0, [x29, #-56]
   41b80:	ldur	x1, [x29, #-48]
   41b84:	bl	36c60 <rpl_re_set_registers@@Base+0x9cc4>
   41b88:	mov	w11, #0x1                   	// #1
   41b8c:	and	w11, w0, w11
   41b90:	sturb	w11, [x29, #-81]
   41b94:	ldurb	w11, [x29, #-81]
   41b98:	eor	w11, w11, #0x1
   41b9c:	and	w11, w11, #0x1
   41ba0:	mov	w1, w11
   41ba4:	sxtw	x8, w1
   41ba8:	cbz	x8, 41bb8 <rpl_re_set_registers@@Base+0x14c1c>
   41bac:	mov	x8, #0xfffffffffffffffe    	// #-2
   41bb0:	stur	x8, [x29, #-8]
   41bb4:	b	41ff4 <rpl_re_set_registers@@Base+0x15058>
   41bb8:	mov	x8, #0xffffffffffffffff    	// #-1
   41bbc:	str	x8, [sp, #64]
   41bc0:	stur	xzr, [x29, #-80]
   41bc4:	ldur	x8, [x29, #-80]
   41bc8:	ldr	x9, [sp, #72]
   41bcc:	ldr	x9, [x9, #8]
   41bd0:	cmp	x8, x9
   41bd4:	b.ge	41c84 <rpl_re_set_registers@@Base+0x14ce8>  // b.tcont
   41bd8:	ldr	x8, [sp, #72]
   41bdc:	ldr	x8, [x8, #16]
   41be0:	ldur	x9, [x29, #-80]
   41be4:	ldr	x8, [x8, x9, lsl #3]
   41be8:	str	x8, [sp, #56]
   41bec:	ldr	x0, [sp, #80]
   41bf0:	ldr	x1, [sp, #56]
   41bf4:	bl	37288 <rpl_re_set_registers@@Base+0xa2ec>
   41bf8:	cbnz	x0, 41c00 <rpl_re_set_registers@@Base+0x14c64>
   41bfc:	b	41c74 <rpl_re_set_registers@@Base+0x14cd8>
   41c00:	ldr	x8, [sp, #64]
   41c04:	mov	x9, #0xffffffffffffffff    	// #-1
   41c08:	cmp	x8, x9
   41c0c:	b.ne	41c1c <rpl_re_set_registers@@Base+0x14c80>  // b.any
   41c10:	ldr	x8, [sp, #56]
   41c14:	str	x8, [sp, #64]
   41c18:	b	41c74 <rpl_re_set_registers@@Base+0x14cd8>
   41c1c:	ldur	x0, [x29, #-56]
   41c20:	ldr	x1, [sp, #64]
   41c24:	bl	37288 <rpl_re_set_registers@@Base+0xa2ec>
   41c28:	cbz	x0, 41c38 <rpl_re_set_registers@@Base+0x14c9c>
   41c2c:	ldr	x8, [sp, #56]
   41c30:	stur	x8, [x29, #-8]
   41c34:	b	41ff4 <rpl_re_set_registers@@Base+0x15058>
   41c38:	ldur	x8, [x29, #-64]
   41c3c:	cbz	x8, 41c70 <rpl_re_set_registers@@Base+0x14cd4>
   41c40:	ldur	x0, [x29, #-64]
   41c44:	ldur	x8, [x29, #-40]
   41c48:	ldr	x1, [x8]
   41c4c:	ldr	x2, [sp, #56]
   41c50:	ldur	x3, [x29, #-24]
   41c54:	ldur	x4, [x29, #-32]
   41c58:	ldur	x5, [x29, #-56]
   41c5c:	bl	42004 <rpl_re_set_registers@@Base+0x15068>
   41c60:	cbz	w0, 41c70 <rpl_re_set_registers@@Base+0x14cd4>
   41c64:	mov	x8, #0xfffffffffffffffe    	// #-2
   41c68:	stur	x8, [x29, #-8]
   41c6c:	b	41ff4 <rpl_re_set_registers@@Base+0x15058>
   41c70:	b	41c84 <rpl_re_set_registers@@Base+0x14ce8>
   41c74:	ldur	x8, [x29, #-80]
   41c78:	add	x8, x8, #0x1
   41c7c:	stur	x8, [x29, #-80]
   41c80:	b	41bc4 <rpl_re_set_registers@@Base+0x14c28>
   41c84:	ldr	x8, [sp, #64]
   41c88:	stur	x8, [x29, #-8]
   41c8c:	b	41ff4 <rpl_re_set_registers@@Base+0x15058>
   41c90:	str	xzr, [sp, #48]
   41c94:	ldur	x8, [x29, #-72]
   41c98:	ldr	x8, [x8]
   41c9c:	ldur	x9, [x29, #-48]
   41ca0:	mov	x10, #0x10                  	// #16
   41ca4:	mul	x9, x10, x9
   41ca8:	add	x8, x8, x9
   41cac:	ldr	w11, [x8, #8]
   41cb0:	and	w11, w11, #0xff
   41cb4:	str	w11, [sp, #44]
   41cb8:	ldur	x8, [x29, #-72]
   41cbc:	ldr	x8, [x8]
   41cc0:	ldur	x9, [x29, #-48]
   41cc4:	mul	x9, x10, x9
   41cc8:	add	x8, x8, x9
   41ccc:	ldr	w11, [x8, #8]
   41cd0:	lsr	w11, w11, #20
   41cd4:	and	w11, w11, #0x1
   41cd8:	cbz	w11, 41d04 <rpl_re_set_registers@@Base+0x14d68>
   41cdc:	ldur	x0, [x29, #-72]
   41ce0:	ldur	x1, [x29, #-48]
   41ce4:	ldur	x2, [x29, #-16]
   41ce8:	ldur	x8, [x29, #-40]
   41cec:	ldr	x3, [x8]
   41cf0:	bl	3d830 <rpl_re_set_registers@@Base+0x10894>
   41cf4:	mov	w1, w0
   41cf8:	sxtw	x8, w1
   41cfc:	str	x8, [sp, #48]
   41d00:	b	41ed0 <rpl_re_set_registers@@Base+0x14f34>
   41d04:	ldr	w8, [sp, #44]
   41d08:	cmp	w8, #0x4
   41d0c:	b.ne	41ed0 <rpl_re_set_registers@@Base+0x14f34>  // b.any
   41d10:	ldur	x8, [x29, #-72]
   41d14:	ldr	x8, [x8]
   41d18:	ldur	x9, [x29, #-48]
   41d1c:	mov	x10, #0x10                  	// #16
   41d20:	mul	x9, x10, x9
   41d24:	ldr	x8, [x8, x9]
   41d28:	add	x8, x8, #0x1
   41d2c:	str	x8, [sp, #32]
   41d30:	ldur	x8, [x29, #-32]
   41d34:	ldr	x9, [sp, #32]
   41d38:	mul	x9, x10, x9
   41d3c:	add	x8, x8, x9
   41d40:	ldr	x8, [x8, #8]
   41d44:	ldur	x9, [x29, #-32]
   41d48:	ldr	x11, [sp, #32]
   41d4c:	mul	x10, x10, x11
   41d50:	ldr	x9, [x9, x10]
   41d54:	subs	x8, x8, x9
   41d58:	str	x8, [sp, #48]
   41d5c:	ldur	x8, [x29, #-64]
   41d60:	cbz	x8, 41e2c <rpl_re_set_registers@@Base+0x14e90>
   41d64:	ldur	x8, [x29, #-32]
   41d68:	ldr	x9, [sp, #32]
   41d6c:	mov	x10, #0x10                  	// #16
   41d70:	mul	x9, x10, x9
   41d74:	ldr	x8, [x8, x9]
   41d78:	mov	x9, #0xffffffffffffffff    	// #-1
   41d7c:	cmp	x8, x9
   41d80:	b.eq	41da8 <rpl_re_set_registers@@Base+0x14e0c>  // b.none
   41d84:	ldur	x8, [x29, #-32]
   41d88:	ldr	x9, [sp, #32]
   41d8c:	mov	x10, #0x10                  	// #16
   41d90:	mul	x9, x10, x9
   41d94:	add	x8, x8, x9
   41d98:	ldr	x8, [x8, #8]
   41d9c:	mov	x9, #0xffffffffffffffff    	// #-1
   41da0:	cmp	x8, x9
   41da4:	b.ne	41db4 <rpl_re_set_registers@@Base+0x14e18>  // b.any
   41da8:	mov	x8, #0xffffffffffffffff    	// #-1
   41dac:	stur	x8, [x29, #-8]
   41db0:	b	41ff4 <rpl_re_set_registers@@Base+0x15058>
   41db4:	ldr	x8, [sp, #48]
   41db8:	cbz	x8, 41e2c <rpl_re_set_registers@@Base+0x14e90>
   41dbc:	ldur	x8, [x29, #-16]
   41dc0:	ldr	x8, [x8, #8]
   41dc4:	str	x8, [sp, #24]
   41dc8:	ldur	x8, [x29, #-16]
   41dcc:	ldr	x8, [x8, #48]
   41dd0:	ldur	x9, [x29, #-40]
   41dd4:	ldr	x9, [x9]
   41dd8:	subs	x8, x8, x9
   41ddc:	ldr	x9, [sp, #48]
   41de0:	cmp	x8, x9
   41de4:	b.lt	41e20 <rpl_re_set_registers@@Base+0x14e84>  // b.tstop
   41de8:	ldr	x8, [sp, #24]
   41dec:	ldur	x9, [x29, #-32]
   41df0:	ldr	x10, [sp, #32]
   41df4:	mov	x11, #0x10                  	// #16
   41df8:	mul	x10, x11, x10
   41dfc:	ldr	x9, [x9, x10]
   41e00:	add	x0, x8, x9
   41e04:	ldr	x8, [sp, #24]
   41e08:	ldur	x9, [x29, #-40]
   41e0c:	ldr	x9, [x9]
   41e10:	add	x1, x8, x9
   41e14:	ldr	x2, [sp, #48]
   41e18:	bl	b4b0 <memcmp@plt>
   41e1c:	cbz	w0, 41e2c <rpl_re_set_registers@@Base+0x14e90>
   41e20:	mov	x8, #0xffffffffffffffff    	// #-1
   41e24:	stur	x8, [x29, #-8]
   41e28:	b	41ff4 <rpl_re_set_registers@@Base+0x15058>
   41e2c:	ldr	x8, [sp, #48]
   41e30:	cbnz	x8, 41ed0 <rpl_re_set_registers@@Base+0x14f34>
   41e34:	ldur	x0, [x29, #-56]
   41e38:	ldur	x1, [x29, #-48]
   41e3c:	bl	36c60 <rpl_re_set_registers@@Base+0x9cc4>
   41e40:	mov	w8, #0x1                   	// #1
   41e44:	and	w8, w0, w8
   41e48:	sturb	w8, [x29, #-81]
   41e4c:	ldurb	w8, [x29, #-81]
   41e50:	eor	w8, w8, #0x1
   41e54:	and	w8, w8, #0x1
   41e58:	mov	w1, w8
   41e5c:	sxtw	x9, w1
   41e60:	cbz	x9, 41e70 <rpl_re_set_registers@@Base+0x14ed4>
   41e64:	mov	x8, #0xfffffffffffffffe    	// #-2
   41e68:	stur	x8, [x29, #-8]
   41e6c:	b	41ff4 <rpl_re_set_registers@@Base+0x15058>
   41e70:	ldur	x8, [x29, #-72]
   41e74:	ldr	x8, [x8, #40]
   41e78:	ldur	x9, [x29, #-48]
   41e7c:	mov	x10, #0x18                  	// #24
   41e80:	mul	x9, x10, x9
   41e84:	add	x8, x8, x9
   41e88:	ldr	x8, [x8, #16]
   41e8c:	ldr	x8, [x8]
   41e90:	str	x8, [sp, #16]
   41e94:	ldur	x8, [x29, #-16]
   41e98:	ldr	x8, [x8, #184]
   41e9c:	ldur	x9, [x29, #-40]
   41ea0:	ldr	x9, [x9]
   41ea4:	mov	x10, #0x8                   	// #8
   41ea8:	mul	x9, x10, x9
   41eac:	add	x8, x8, x9
   41eb0:	ldr	x8, [x8]
   41eb4:	add	x0, x8, #0x8
   41eb8:	ldr	x1, [sp, #16]
   41ebc:	bl	37288 <rpl_re_set_registers@@Base+0xa2ec>
   41ec0:	cbz	x0, 41ed0 <rpl_re_set_registers@@Base+0x14f34>
   41ec4:	ldr	x8, [sp, #16]
   41ec8:	stur	x8, [x29, #-8]
   41ecc:	b	41ff4 <rpl_re_set_registers@@Base+0x15058>
   41ed0:	ldr	x8, [sp, #48]
   41ed4:	cbnz	x8, 41f08 <rpl_re_set_registers@@Base+0x14f6c>
   41ed8:	ldur	x0, [x29, #-16]
   41edc:	ldur	x8, [x29, #-72]
   41ee0:	ldr	x8, [x8]
   41ee4:	ldur	x9, [x29, #-48]
   41ee8:	mov	x10, #0x10                  	// #16
   41eec:	mul	x9, x10, x9
   41ef0:	add	x1, x8, x9
   41ef4:	ldur	x8, [x29, #-40]
   41ef8:	ldr	x2, [x8]
   41efc:	bl	3dd9c <rpl_re_set_registers@@Base+0x10e00>
   41f00:	tbnz	w0, #0, 41f08 <rpl_re_set_registers@@Base+0x14f6c>
   41f04:	b	41fec <rpl_re_set_registers@@Base+0x15050>
   41f08:	ldur	x8, [x29, #-72]
   41f0c:	ldr	x8, [x8, #24]
   41f10:	ldur	x9, [x29, #-48]
   41f14:	ldr	x8, [x8, x9, lsl #3]
   41f18:	str	x8, [sp, #8]
   41f1c:	ldr	x8, [sp, #48]
   41f20:	cbnz	x8, 41f38 <rpl_re_set_registers@@Base+0x14f9c>
   41f24:	ldur	x8, [x29, #-40]
   41f28:	ldr	x8, [x8]
   41f2c:	add	x8, x8, #0x1
   41f30:	str	x8, [sp]
   41f34:	b	41f4c <rpl_re_set_registers@@Base+0x14fb0>
   41f38:	ldur	x8, [x29, #-40]
   41f3c:	ldr	x8, [x8]
   41f40:	ldr	x9, [sp, #48]
   41f44:	add	x8, x8, x9
   41f48:	str	x8, [sp]
   41f4c:	ldr	x8, [sp]
   41f50:	ldur	x9, [x29, #-40]
   41f54:	str	x8, [x9]
   41f58:	ldur	x8, [x29, #-64]
   41f5c:	cbz	x8, 41fd8 <rpl_re_set_registers@@Base+0x1503c>
   41f60:	ldur	x8, [x29, #-40]
   41f64:	ldr	x8, [x8]
   41f68:	ldur	x9, [x29, #-16]
   41f6c:	ldr	x9, [x9, #168]
   41f70:	cmp	x8, x9
   41f74:	b.gt	41fcc <rpl_re_set_registers@@Base+0x15030>
   41f78:	ldur	x8, [x29, #-16]
   41f7c:	ldr	x8, [x8, #184]
   41f80:	ldur	x9, [x29, #-40]
   41f84:	ldr	x9, [x9]
   41f88:	mov	x10, #0x8                   	// #8
   41f8c:	mul	x9, x10, x9
   41f90:	add	x8, x8, x9
   41f94:	ldr	x8, [x8]
   41f98:	cbz	x8, 41fcc <rpl_re_set_registers@@Base+0x15030>
   41f9c:	ldur	x8, [x29, #-16]
   41fa0:	ldr	x8, [x8, #184]
   41fa4:	ldur	x9, [x29, #-40]
   41fa8:	ldr	x9, [x9]
   41fac:	mov	x10, #0x8                   	// #8
   41fb0:	mul	x9, x10, x9
   41fb4:	add	x8, x8, x9
   41fb8:	ldr	x8, [x8]
   41fbc:	add	x0, x8, #0x8
   41fc0:	ldr	x1, [sp, #8]
   41fc4:	bl	37288 <rpl_re_set_registers@@Base+0xa2ec>
   41fc8:	cbnz	x0, 41fd8 <rpl_re_set_registers@@Base+0x1503c>
   41fcc:	mov	x8, #0xffffffffffffffff    	// #-1
   41fd0:	stur	x8, [x29, #-8]
   41fd4:	b	41ff4 <rpl_re_set_registers@@Base+0x15058>
   41fd8:	ldur	x8, [x29, #-56]
   41fdc:	str	xzr, [x8, #8]
   41fe0:	ldr	x8, [sp, #8]
   41fe4:	stur	x8, [x29, #-8]
   41fe8:	b	41ff4 <rpl_re_set_registers@@Base+0x15058>
   41fec:	mov	x8, #0xffffffffffffffff    	// #-1
   41ff0:	stur	x8, [x29, #-8]
   41ff4:	ldur	x0, [x29, #-8]
   41ff8:	ldp	x29, x30, [sp, #176]
   41ffc:	add	sp, sp, #0xc0
   42000:	ret
   42004:	sub	sp, sp, #0x70
   42008:	stp	x29, x30, [sp, #96]
   4200c:	add	x29, sp, #0x60
   42010:	stur	x0, [x29, #-16]
   42014:	stur	x1, [x29, #-24]
   42018:	stur	x2, [x29, #-32]
   4201c:	stur	x3, [x29, #-40]
   42020:	str	x4, [sp, #48]
   42024:	str	x5, [sp, #40]
   42028:	ldur	x8, [x29, #-16]
   4202c:	ldr	x9, [x8]
   42030:	add	x10, x9, #0x1
   42034:	str	x10, [x8]
   42038:	str	x9, [sp, #24]
   4203c:	ldur	x8, [x29, #-16]
   42040:	ldr	x8, [x8]
   42044:	ldur	x9, [x29, #-16]
   42048:	ldr	x9, [x9, #8]
   4204c:	cmp	x8, x9
   42050:	b.ne	420b0 <rpl_re_set_registers@@Base+0x15114>  // b.any
   42054:	ldur	x8, [x29, #-16]
   42058:	ldr	x0, [x8, #16]
   4205c:	ldur	x8, [x29, #-16]
   42060:	ldr	x8, [x8, #8]
   42064:	mov	x9, #0x2                   	// #2
   42068:	mul	x8, x8, x9
   4206c:	mov	x9, #0x30                  	// #48
   42070:	mul	x1, x8, x9
   42074:	bl	af40 <realloc@plt>
   42078:	str	x0, [sp, #16]
   4207c:	ldr	x8, [sp, #16]
   42080:	cbnz	x8, 42090 <rpl_re_set_registers@@Base+0x150f4>
   42084:	mov	w8, #0xc                   	// #12
   42088:	stur	w8, [x29, #-4]
   4208c:	b	421a4 <rpl_re_set_registers@@Base+0x15208>
   42090:	ldur	x8, [x29, #-16]
   42094:	ldr	x9, [x8, #8]
   42098:	mov	x10, #0x2                   	// #2
   4209c:	mul	x9, x9, x10
   420a0:	str	x9, [x8, #8]
   420a4:	ldr	x8, [sp, #16]
   420a8:	ldur	x9, [x29, #-16]
   420ac:	str	x8, [x9, #16]
   420b0:	ldur	x8, [x29, #-24]
   420b4:	ldur	x9, [x29, #-16]
   420b8:	ldr	x9, [x9, #16]
   420bc:	ldr	x10, [sp, #24]
   420c0:	mov	x11, #0x30                  	// #48
   420c4:	mul	x10, x11, x10
   420c8:	str	x8, [x9, x10]
   420cc:	ldur	x8, [x29, #-32]
   420d0:	ldur	x9, [x29, #-16]
   420d4:	ldr	x9, [x9, #16]
   420d8:	ldr	x10, [sp, #24]
   420dc:	mul	x10, x11, x10
   420e0:	add	x9, x9, x10
   420e4:	str	x8, [x9, #8]
   420e8:	ldur	x8, [x29, #-40]
   420ec:	mov	x9, #0x10                  	// #16
   420f0:	mul	x0, x8, x9
   420f4:	str	x11, [sp, #8]
   420f8:	bl	af10 <malloc@plt>
   420fc:	ldur	x8, [x29, #-16]
   42100:	ldr	x8, [x8, #16]
   42104:	ldr	x9, [sp, #24]
   42108:	ldr	x10, [sp, #8]
   4210c:	mul	x9, x10, x9
   42110:	add	x8, x8, x9
   42114:	str	x0, [x8, #16]
   42118:	ldur	x8, [x29, #-16]
   4211c:	ldr	x8, [x8, #16]
   42120:	ldr	x9, [sp, #24]
   42124:	mul	x9, x10, x9
   42128:	add	x8, x8, x9
   4212c:	ldr	x8, [x8, #16]
   42130:	cbnz	x8, 42140 <rpl_re_set_registers@@Base+0x151a4>
   42134:	mov	w8, #0xc                   	// #12
   42138:	stur	w8, [x29, #-4]
   4213c:	b	421a4 <rpl_re_set_registers@@Base+0x15208>
   42140:	ldur	x8, [x29, #-16]
   42144:	ldr	x8, [x8, #16]
   42148:	ldr	x9, [sp, #24]
   4214c:	mov	x10, #0x30                  	// #48
   42150:	mul	x9, x10, x9
   42154:	add	x8, x8, x9
   42158:	ldr	x0, [x8, #16]
   4215c:	ldr	x1, [sp, #48]
   42160:	ldur	x8, [x29, #-40]
   42164:	mov	x9, #0x10                  	// #16
   42168:	mul	x2, x9, x8
   4216c:	str	x10, [sp]
   42170:	bl	af30 <memcpy@plt>
   42174:	ldur	x8, [x29, #-16]
   42178:	ldr	x8, [x8, #16]
   4217c:	ldr	x9, [sp, #24]
   42180:	ldr	x10, [sp]
   42184:	mul	x9, x10, x9
   42188:	add	x8, x8, x9
   4218c:	add	x0, x8, #0x18
   42190:	ldr	x1, [sp, #40]
   42194:	bl	3719c <rpl_re_set_registers@@Base+0xa200>
   42198:	str	w0, [sp, #36]
   4219c:	ldr	w11, [sp, #36]
   421a0:	stur	w11, [x29, #-4]
   421a4:	ldur	w0, [x29, #-4]
   421a8:	ldp	x29, x30, [sp, #96]
   421ac:	add	sp, sp, #0x70
   421b0:	ret

00000000000421b4 <vasnprintf@@Base>:
   421b4:	stp	x29, x30, [sp, #-32]!
   421b8:	stp	x28, x19, [sp, #16]
   421bc:	mov	x29, sp
   421c0:	sub	sp, sp, #0x650
   421c4:	mov	x19, sp
   421c8:	add	x8, x19, #0x290
   421cc:	add	x9, x19, #0x3a8
   421d0:	add	x10, x19, #0x2b0
   421d4:	stur	x0, [x29, #-16]
   421d8:	stur	x1, [x29, #-24]
   421dc:	stur	x2, [x29, #-32]
   421e0:	ldur	x0, [x29, #-32]
   421e4:	mov	x1, x9
   421e8:	mov	x2, x10
   421ec:	str	x8, [x19, #256]
   421f0:	str	x3, [x19, #248]
   421f4:	bl	b8b0 <printf_parse@plt>
   421f8:	cmp	w0, #0x0
   421fc:	cset	w11, ge  // ge = tcont
   42200:	tbnz	w11, #0, 42210 <vasnprintf@@Base+0x5c>
   42204:	mov	x8, xzr
   42208:	stur	x8, [x29, #-8]
   4220c:	b	44394 <vasnprintf@@Base+0x21e0>
   42210:	ldr	x8, [x19, #248]
   42214:	ldr	q0, [x8]
   42218:	add	x0, x19, #0x290
   4221c:	ldr	x9, [x19, #256]
   42220:	str	q0, [x9]
   42224:	ldr	q0, [x8, #16]
   42228:	str	q0, [x9, #16]
   4222c:	add	x1, x19, #0x2b0
   42230:	bl	b8c0 <printf_fetchargs@plt>
   42234:	cmp	w0, #0x0
   42238:	cset	w10, ge  // ge = tcont
   4223c:	tbnz	w10, #0, 42298 <vasnprintf@@Base+0xe4>
   42240:	add	x8, x19, #0x3a8
   42244:	ldr	x9, [x8, #8]
   42248:	add	x8, x8, #0x20
   4224c:	cmp	x9, x8
   42250:	b.eq	42260 <vasnprintf@@Base+0xac>  // b.none
   42254:	add	x8, x19, #0x3a8
   42258:	ldr	x0, [x8, #8]
   4225c:	bl	a930 <free@plt>
   42260:	add	x8, x19, #0x2b0
   42264:	ldr	x9, [x8, #8]
   42268:	add	x8, x8, #0x10
   4226c:	cmp	x9, x8
   42270:	b.eq	42280 <vasnprintf@@Base+0xcc>  // b.none
   42274:	add	x8, x19, #0x2b0
   42278:	ldr	x0, [x8, #8]
   4227c:	bl	a930 <free@plt>
   42280:	bl	aa20 <__errno_location@plt>
   42284:	mov	w8, #0x16                  	// #22
   42288:	str	w8, [x0]
   4228c:	mov	x9, xzr
   42290:	stur	x9, [x29, #-8]
   42294:	b	44394 <vasnprintf@@Base+0x21e0>
   42298:	ldr	x1, [x19, #952]
   4229c:	ldr	x2, [x19, #960]
   422a0:	mov	x0, #0x7                   	// #7
   422a4:	mov	x3, #0x6                   	// #6
   422a8:	bl	b8d0 <xsum4@plt>
   422ac:	str	x0, [x19, #648]
   422b0:	ldr	x8, [x19, #648]
   422b4:	cmp	x8, #0xfa0
   422b8:	b.cs	422f0 <vasnprintf@@Base+0x13c>  // b.hs, b.nlast
   422bc:	ldr	x8, [x19, #648]
   422c0:	mov	x9, #0x1                   	// #1
   422c4:	mul	x8, x8, x9
   422c8:	mul	x8, x8, x9
   422cc:	add	x8, x8, #0xf
   422d0:	and	x8, x8, #0xfffffffffffffff0
   422d4:	mov	x9, sp
   422d8:	subs	x8, x9, x8
   422dc:	mov	sp, x8
   422e0:	str	x8, [x19, #640]
   422e4:	mov	x8, xzr
   422e8:	str	x8, [x19, #632]
   422ec:	b	42358 <vasnprintf@@Base+0x1a4>
   422f0:	ldr	x8, [x19, #648]
   422f4:	mov	x9, #0xffffffffffffffff    	// #-1
   422f8:	cmp	x8, x9
   422fc:	b.hi	42314 <vasnprintf@@Base+0x160>  // b.pmore
   42300:	ldr	x8, [x19, #648]
   42304:	mov	x9, #0x1                   	// #1
   42308:	mul	x8, x8, x9
   4230c:	str	x8, [x19, #240]
   42310:	b	4231c <vasnprintf@@Base+0x168>
   42314:	mov	x8, #0xffffffffffffffff    	// #-1
   42318:	str	x8, [x19, #240]
   4231c:	ldr	x8, [x19, #240]
   42320:	str	x8, [x19, #576]
   42324:	ldr	x8, [x19, #576]
   42328:	mov	x9, #0xffffffffffffffff    	// #-1
   4232c:	cmp	x8, x9
   42330:	b.ne	42338 <vasnprintf@@Base+0x184>  // b.any
   42334:	b	44340 <vasnprintf@@Base+0x218c>
   42338:	ldr	x0, [x19, #576]
   4233c:	bl	af10 <malloc@plt>
   42340:	str	x0, [x19, #640]
   42344:	ldr	x8, [x19, #640]
   42348:	cbnz	x8, 42350 <vasnprintf@@Base+0x19c>
   4234c:	b	44340 <vasnprintf@@Base+0x218c>
   42350:	ldr	x8, [x19, #640]
   42354:	str	x8, [x19, #632]
   42358:	ldur	x8, [x29, #-16]
   4235c:	cbz	x8, 42378 <vasnprintf@@Base+0x1c4>
   42360:	ldur	x8, [x29, #-16]
   42364:	str	x8, [x19, #600]
   42368:	ldur	x8, [x29, #-24]
   4236c:	ldr	x8, [x8]
   42370:	str	x8, [x19, #592]
   42374:	b	42384 <vasnprintf@@Base+0x1d0>
   42378:	mov	x8, xzr
   4237c:	str	x8, [x19, #600]
   42380:	str	xzr, [x19, #592]
   42384:	str	xzr, [x19, #584]
   42388:	ldur	x8, [x29, #-32]
   4238c:	str	x8, [x19, #624]
   42390:	str	xzr, [x19, #616]
   42394:	add	x8, x19, #0x3a8
   42398:	ldr	x8, [x8, #8]
   4239c:	str	x8, [x19, #608]
   423a0:	ldr	x8, [x19, #624]
   423a4:	ldr	x9, [x19, #608]
   423a8:	ldr	x9, [x9]
   423ac:	cmp	x8, x9
   423b0:	b.eq	4253c <vasnprintf@@Base+0x388>  // b.none
   423b4:	ldr	x8, [x19, #608]
   423b8:	ldr	x8, [x8]
   423bc:	ldr	x9, [x19, #624]
   423c0:	subs	x8, x8, x9
   423c4:	str	x8, [x19, #568]
   423c8:	ldr	x0, [x19, #584]
   423cc:	ldr	x1, [x19, #568]
   423d0:	bl	b190 <xsum@plt>
   423d4:	str	x0, [x19, #560]
   423d8:	ldr	x8, [x19, #560]
   423dc:	ldr	x9, [x19, #592]
   423e0:	cmp	x8, x9
   423e4:	b.ls	4251c <vasnprintf@@Base+0x368>  // b.plast
   423e8:	ldr	x8, [x19, #592]
   423ec:	cmp	x8, #0x0
   423f0:	cset	w9, ls  // ls = plast
   423f4:	tbnz	w9, #0, 42430 <vasnprintf@@Base+0x27c>
   423f8:	ldr	x8, [x19, #592]
   423fc:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
   42400:	cmp	x8, x9
   42404:	b.hi	4241c <vasnprintf@@Base+0x268>  // b.pmore
   42408:	ldr	x8, [x19, #592]
   4240c:	mov	x9, #0x2                   	// #2
   42410:	mul	x8, x8, x9
   42414:	str	x8, [x19, #232]
   42418:	b	42424 <vasnprintf@@Base+0x270>
   4241c:	mov	x8, #0xffffffffffffffff    	// #-1
   42420:	str	x8, [x19, #232]
   42424:	ldr	x8, [x19, #232]
   42428:	str	x8, [x19, #224]
   4242c:	b	42438 <vasnprintf@@Base+0x284>
   42430:	mov	x8, #0xc                   	// #12
   42434:	str	x8, [x19, #224]
   42438:	ldr	x8, [x19, #224]
   4243c:	str	x8, [x19, #592]
   42440:	ldr	x8, [x19, #560]
   42444:	ldr	x9, [x19, #592]
   42448:	cmp	x8, x9
   4244c:	b.ls	42458 <vasnprintf@@Base+0x2a4>  // b.plast
   42450:	ldr	x8, [x19, #560]
   42454:	str	x8, [x19, #592]
   42458:	ldr	x8, [x19, #592]
   4245c:	mov	x9, #0xffffffffffffffff    	// #-1
   42460:	cmp	x8, x9
   42464:	b.hi	4247c <vasnprintf@@Base+0x2c8>  // b.pmore
   42468:	ldr	x8, [x19, #592]
   4246c:	mov	x9, #0x1                   	// #1
   42470:	mul	x8, x8, x9
   42474:	str	x8, [x19, #216]
   42478:	b	42484 <vasnprintf@@Base+0x2d0>
   4247c:	mov	x8, #0xffffffffffffffff    	// #-1
   42480:	str	x8, [x19, #216]
   42484:	ldr	x8, [x19, #216]
   42488:	str	x8, [x19, #552]
   4248c:	ldr	x8, [x19, #552]
   42490:	mov	x9, #0xffffffffffffffff    	// #-1
   42494:	cmp	x8, x9
   42498:	b.ne	424a0 <vasnprintf@@Base+0x2ec>  // b.any
   4249c:	b	44310 <vasnprintf@@Base+0x215c>
   424a0:	ldr	x8, [x19, #600]
   424a4:	ldur	x9, [x29, #-16]
   424a8:	cmp	x8, x9
   424ac:	b.eq	424b8 <vasnprintf@@Base+0x304>  // b.none
   424b0:	ldr	x8, [x19, #600]
   424b4:	cbnz	x8, 424c8 <vasnprintf@@Base+0x314>
   424b8:	ldr	x0, [x19, #552]
   424bc:	bl	af10 <malloc@plt>
   424c0:	str	x0, [x19, #544]
   424c4:	b	424d8 <vasnprintf@@Base+0x324>
   424c8:	ldr	x0, [x19, #600]
   424cc:	ldr	x1, [x19, #552]
   424d0:	bl	af40 <realloc@plt>
   424d4:	str	x0, [x19, #544]
   424d8:	ldr	x8, [x19, #544]
   424dc:	cbnz	x8, 424e4 <vasnprintf@@Base+0x330>
   424e0:	b	44310 <vasnprintf@@Base+0x215c>
   424e4:	ldr	x8, [x19, #600]
   424e8:	ldur	x9, [x29, #-16]
   424ec:	cmp	x8, x9
   424f0:	b.ne	42514 <vasnprintf@@Base+0x360>  // b.any
   424f4:	ldr	x8, [x19, #584]
   424f8:	cmp	x8, #0x0
   424fc:	cset	w9, ls  // ls = plast
   42500:	tbnz	w9, #0, 42514 <vasnprintf@@Base+0x360>
   42504:	ldr	x0, [x19, #544]
   42508:	ldr	x1, [x19, #600]
   4250c:	ldr	x2, [x19, #584]
   42510:	bl	af30 <memcpy@plt>
   42514:	ldr	x8, [x19, #544]
   42518:	str	x8, [x19, #600]
   4251c:	ldr	x8, [x19, #600]
   42520:	ldr	x9, [x19, #584]
   42524:	add	x0, x8, x9
   42528:	ldr	x1, [x19, #624]
   4252c:	ldr	x2, [x19, #568]
   42530:	bl	af30 <memcpy@plt>
   42534:	ldr	x8, [x19, #560]
   42538:	str	x8, [x19, #584]
   4253c:	ldr	x8, [x19, #616]
   42540:	ldr	x9, [x19, #936]
   42544:	cmp	x8, x9
   42548:	b.ne	42550 <vasnprintf@@Base+0x39c>  // b.any
   4254c:	b	44060 <vasnprintf@@Base+0x1eac>
   42550:	ldr	x8, [x19, #608]
   42554:	ldrb	w9, [x8, #72]
   42558:	cmp	w9, #0x25
   4255c:	b.ne	426ec <vasnprintf@@Base+0x538>  // b.any
   42560:	ldr	x8, [x19, #608]
   42564:	ldr	x8, [x8, #80]
   42568:	mov	x9, #0xffffffffffffffff    	// #-1
   4256c:	cmp	x8, x9
   42570:	b.eq	42578 <vasnprintf@@Base+0x3c4>  // b.none
   42574:	bl	a9e0 <abort@plt>
   42578:	ldr	x0, [x19, #584]
   4257c:	mov	x1, #0x1                   	// #1
   42580:	bl	b190 <xsum@plt>
   42584:	str	x0, [x19, #536]
   42588:	ldr	x8, [x19, #536]
   4258c:	ldr	x9, [x19, #592]
   42590:	cmp	x8, x9
   42594:	b.ls	426cc <vasnprintf@@Base+0x518>  // b.plast
   42598:	ldr	x8, [x19, #592]
   4259c:	cmp	x8, #0x0
   425a0:	cset	w9, ls  // ls = plast
   425a4:	tbnz	w9, #0, 425e0 <vasnprintf@@Base+0x42c>
   425a8:	ldr	x8, [x19, #592]
   425ac:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
   425b0:	cmp	x8, x9
   425b4:	b.hi	425cc <vasnprintf@@Base+0x418>  // b.pmore
   425b8:	ldr	x8, [x19, #592]
   425bc:	mov	x9, #0x2                   	// #2
   425c0:	mul	x8, x8, x9
   425c4:	str	x8, [x19, #208]
   425c8:	b	425d4 <vasnprintf@@Base+0x420>
   425cc:	mov	x8, #0xffffffffffffffff    	// #-1
   425d0:	str	x8, [x19, #208]
   425d4:	ldr	x8, [x19, #208]
   425d8:	str	x8, [x19, #200]
   425dc:	b	425e8 <vasnprintf@@Base+0x434>
   425e0:	mov	x8, #0xc                   	// #12
   425e4:	str	x8, [x19, #200]
   425e8:	ldr	x8, [x19, #200]
   425ec:	str	x8, [x19, #592]
   425f0:	ldr	x8, [x19, #536]
   425f4:	ldr	x9, [x19, #592]
   425f8:	cmp	x8, x9
   425fc:	b.ls	42608 <vasnprintf@@Base+0x454>  // b.plast
   42600:	ldr	x8, [x19, #536]
   42604:	str	x8, [x19, #592]
   42608:	ldr	x8, [x19, #592]
   4260c:	mov	x9, #0xffffffffffffffff    	// #-1
   42610:	cmp	x8, x9
   42614:	b.hi	4262c <vasnprintf@@Base+0x478>  // b.pmore
   42618:	ldr	x8, [x19, #592]
   4261c:	mov	x9, #0x1                   	// #1
   42620:	mul	x8, x8, x9
   42624:	str	x8, [x19, #192]
   42628:	b	42634 <vasnprintf@@Base+0x480>
   4262c:	mov	x8, #0xffffffffffffffff    	// #-1
   42630:	str	x8, [x19, #192]
   42634:	ldr	x8, [x19, #192]
   42638:	str	x8, [x19, #528]
   4263c:	ldr	x8, [x19, #528]
   42640:	mov	x9, #0xffffffffffffffff    	// #-1
   42644:	cmp	x8, x9
   42648:	b.ne	42650 <vasnprintf@@Base+0x49c>  // b.any
   4264c:	b	44310 <vasnprintf@@Base+0x215c>
   42650:	ldr	x8, [x19, #600]
   42654:	ldur	x9, [x29, #-16]
   42658:	cmp	x8, x9
   4265c:	b.eq	42668 <vasnprintf@@Base+0x4b4>  // b.none
   42660:	ldr	x8, [x19, #600]
   42664:	cbnz	x8, 42678 <vasnprintf@@Base+0x4c4>
   42668:	ldr	x0, [x19, #528]
   4266c:	bl	af10 <malloc@plt>
   42670:	str	x0, [x19, #520]
   42674:	b	42688 <vasnprintf@@Base+0x4d4>
   42678:	ldr	x0, [x19, #600]
   4267c:	ldr	x1, [x19, #528]
   42680:	bl	af40 <realloc@plt>
   42684:	str	x0, [x19, #520]
   42688:	ldr	x8, [x19, #520]
   4268c:	cbnz	x8, 42694 <vasnprintf@@Base+0x4e0>
   42690:	b	44310 <vasnprintf@@Base+0x215c>
   42694:	ldr	x8, [x19, #600]
   42698:	ldur	x9, [x29, #-16]
   4269c:	cmp	x8, x9
   426a0:	b.ne	426c4 <vasnprintf@@Base+0x510>  // b.any
   426a4:	ldr	x8, [x19, #584]
   426a8:	cmp	x8, #0x0
   426ac:	cset	w9, ls  // ls = plast
   426b0:	tbnz	w9, #0, 426c4 <vasnprintf@@Base+0x510>
   426b4:	ldr	x0, [x19, #520]
   426b8:	ldr	x1, [x19, #600]
   426bc:	ldr	x2, [x19, #584]
   426c0:	bl	af30 <memcpy@plt>
   426c4:	ldr	x8, [x19, #520]
   426c8:	str	x8, [x19, #600]
   426cc:	ldr	x8, [x19, #600]
   426d0:	ldr	x9, [x19, #584]
   426d4:	add	x8, x8, x9
   426d8:	mov	w10, #0x25                  	// #37
   426dc:	strb	w10, [x8]
   426e0:	ldr	x8, [x19, #536]
   426e4:	str	x8, [x19, #584]
   426e8:	b	44038 <vasnprintf@@Base+0x1e84>
   426ec:	ldr	x8, [x19, #608]
   426f0:	ldr	x8, [x8, #80]
   426f4:	mov	x9, #0xffffffffffffffff    	// #-1
   426f8:	cmp	x8, x9
   426fc:	b.ne	42704 <vasnprintf@@Base+0x550>  // b.any
   42700:	bl	a9e0 <abort@plt>
   42704:	ldr	x8, [x19, #608]
   42708:	ldrb	w9, [x8, #72]
   4270c:	cmp	w9, #0x6e
   42710:	b.ne	42844 <vasnprintf@@Base+0x690>  // b.any
   42714:	add	x8, x19, #0x2b0
   42718:	ldr	x8, [x8, #8]
   4271c:	ldr	x9, [x19, #608]
   42720:	ldr	x9, [x9, #80]
   42724:	mov	x10, #0x20                  	// #32
   42728:	mul	x9, x10, x9
   4272c:	ldr	w11, [x8, x9]
   42730:	subs	w11, w11, #0x12
   42734:	mov	w8, w11
   42738:	ubfx	x8, x8, #0, #32
   4273c:	cmp	x8, #0x4
   42740:	str	x8, [x19, #184]
   42744:	b.hi	4283c <vasnprintf@@Base+0x688>  // b.pmore
   42748:	adrp	x8, 47000 <vasnprintf@@Base+0x4e4c>
   4274c:	add	x8, x8, #0x874
   42750:	ldr	x11, [x19, #184]
   42754:	ldrsw	x10, [x8, x11, lsl #2]
   42758:	add	x9, x8, x10
   4275c:	br	x9
   42760:	ldr	x8, [x19, #584]
   42764:	add	x9, x19, #0x2b0
   42768:	ldr	x9, [x9, #8]
   4276c:	ldr	x10, [x19, #608]
   42770:	ldr	x10, [x10, #80]
   42774:	mov	x11, #0x20                  	// #32
   42778:	mul	x10, x11, x10
   4277c:	add	x9, x9, x10
   42780:	ldr	x9, [x9, #16]
   42784:	strb	w8, [x9]
   42788:	b	42840 <vasnprintf@@Base+0x68c>
   4278c:	ldr	x8, [x19, #584]
   42790:	add	x9, x19, #0x2b0
   42794:	ldr	x9, [x9, #8]
   42798:	ldr	x10, [x19, #608]
   4279c:	ldr	x10, [x10, #80]
   427a0:	mov	x11, #0x20                  	// #32
   427a4:	mul	x10, x11, x10
   427a8:	add	x9, x9, x10
   427ac:	ldr	x9, [x9, #16]
   427b0:	strh	w8, [x9]
   427b4:	b	42840 <vasnprintf@@Base+0x68c>
   427b8:	ldr	x8, [x19, #584]
   427bc:	add	x9, x19, #0x2b0
   427c0:	ldr	x9, [x9, #8]
   427c4:	ldr	x10, [x19, #608]
   427c8:	ldr	x10, [x10, #80]
   427cc:	mov	x11, #0x20                  	// #32
   427d0:	mul	x10, x11, x10
   427d4:	add	x9, x9, x10
   427d8:	ldr	x9, [x9, #16]
   427dc:	str	w8, [x9]
   427e0:	b	42840 <vasnprintf@@Base+0x68c>
   427e4:	ldr	x8, [x19, #584]
   427e8:	add	x9, x19, #0x2b0
   427ec:	ldr	x9, [x9, #8]
   427f0:	ldr	x10, [x19, #608]
   427f4:	ldr	x10, [x10, #80]
   427f8:	mov	x11, #0x20                  	// #32
   427fc:	mul	x10, x11, x10
   42800:	add	x9, x9, x10
   42804:	ldr	x9, [x9, #16]
   42808:	str	x8, [x9]
   4280c:	b	42840 <vasnprintf@@Base+0x68c>
   42810:	ldr	x8, [x19, #584]
   42814:	add	x9, x19, #0x2b0
   42818:	ldr	x9, [x9, #8]
   4281c:	ldr	x10, [x19, #608]
   42820:	ldr	x10, [x10, #80]
   42824:	mov	x11, #0x20                  	// #32
   42828:	mul	x10, x11, x10
   4282c:	add	x9, x9, x10
   42830:	ldr	x9, [x9, #16]
   42834:	str	x8, [x9]
   42838:	b	42840 <vasnprintf@@Base+0x68c>
   4283c:	bl	a9e0 <abort@plt>
   42840:	b	44038 <vasnprintf@@Base+0x1e84>
   42844:	add	x8, x19, #0x2b0
   42848:	ldr	x8, [x8, #8]
   4284c:	ldr	x9, [x19, #608]
   42850:	ldr	x9, [x9, #80]
   42854:	mov	x10, #0x20                  	// #32
   42858:	mul	x9, x10, x9
   4285c:	ldr	w11, [x8, x9]
   42860:	str	w11, [x19, #516]
   42864:	ldr	x8, [x19, #608]
   42868:	ldr	w11, [x8, #16]
   4286c:	str	w11, [x19, #512]
   42870:	ldr	x8, [x19, #640]
   42874:	str	x8, [x19, #504]
   42878:	ldr	x8, [x19, #504]
   4287c:	add	x9, x8, #0x1
   42880:	str	x9, [x19, #504]
   42884:	mov	w11, #0x25                  	// #37
   42888:	strb	w11, [x8]
   4288c:	ldr	w11, [x19, #512]
   42890:	and	w11, w11, #0x1
   42894:	cbz	w11, 428ac <vasnprintf@@Base+0x6f8>
   42898:	ldr	x8, [x19, #504]
   4289c:	add	x9, x8, #0x1
   428a0:	str	x9, [x19, #504]
   428a4:	mov	w10, #0x27                  	// #39
   428a8:	strb	w10, [x8]
   428ac:	ldr	w8, [x19, #512]
   428b0:	and	w8, w8, #0x2
   428b4:	cbz	w8, 428cc <vasnprintf@@Base+0x718>
   428b8:	ldr	x8, [x19, #504]
   428bc:	add	x9, x8, #0x1
   428c0:	str	x9, [x19, #504]
   428c4:	mov	w10, #0x2d                  	// #45
   428c8:	strb	w10, [x8]
   428cc:	ldr	w8, [x19, #512]
   428d0:	and	w8, w8, #0x4
   428d4:	cbz	w8, 428ec <vasnprintf@@Base+0x738>
   428d8:	ldr	x8, [x19, #504]
   428dc:	add	x9, x8, #0x1
   428e0:	str	x9, [x19, #504]
   428e4:	mov	w10, #0x2b                  	// #43
   428e8:	strb	w10, [x8]
   428ec:	ldr	w8, [x19, #512]
   428f0:	and	w8, w8, #0x8
   428f4:	cbz	w8, 4290c <vasnprintf@@Base+0x758>
   428f8:	ldr	x8, [x19, #504]
   428fc:	add	x9, x8, #0x1
   42900:	str	x9, [x19, #504]
   42904:	mov	w10, #0x20                  	// #32
   42908:	strb	w10, [x8]
   4290c:	ldr	w8, [x19, #512]
   42910:	and	w8, w8, #0x10
   42914:	cbz	w8, 4292c <vasnprintf@@Base+0x778>
   42918:	ldr	x8, [x19, #504]
   4291c:	add	x9, x8, #0x1
   42920:	str	x9, [x19, #504]
   42924:	mov	w10, #0x23                  	// #35
   42928:	strb	w10, [x8]
   4292c:	ldr	w8, [x19, #512]
   42930:	and	w8, w8, #0x40
   42934:	cbz	w8, 4294c <vasnprintf@@Base+0x798>
   42938:	ldr	x8, [x19, #504]
   4293c:	add	x9, x8, #0x1
   42940:	str	x9, [x19, #504]
   42944:	mov	w10, #0x49                  	// #73
   42948:	strb	w10, [x8]
   4294c:	ldr	w8, [x19, #512]
   42950:	and	w8, w8, #0x20
   42954:	cbz	w8, 4296c <vasnprintf@@Base+0x7b8>
   42958:	ldr	x8, [x19, #504]
   4295c:	add	x9, x8, #0x1
   42960:	str	x9, [x19, #504]
   42964:	mov	w10, #0x30                  	// #48
   42968:	strb	w10, [x8]
   4296c:	ldr	x8, [x19, #608]
   42970:	ldr	x8, [x8, #24]
   42974:	ldr	x9, [x19, #608]
   42978:	ldr	x9, [x9, #32]
   4297c:	cmp	x8, x9
   42980:	b.eq	429c8 <vasnprintf@@Base+0x814>  // b.none
   42984:	ldr	x8, [x19, #608]
   42988:	ldr	x8, [x8, #32]
   4298c:	ldr	x9, [x19, #608]
   42990:	ldr	x9, [x9, #24]
   42994:	subs	x8, x8, x9
   42998:	str	x8, [x19, #480]
   4299c:	ldr	x0, [x19, #504]
   429a0:	ldr	x8, [x19, #608]
   429a4:	ldr	x1, [x8, #24]
   429a8:	ldr	x8, [x19, #480]
   429ac:	mov	x9, #0x1                   	// #1
   429b0:	mul	x2, x8, x9
   429b4:	bl	af30 <memcpy@plt>
   429b8:	ldr	x8, [x19, #480]
   429bc:	ldr	x9, [x19, #504]
   429c0:	add	x8, x9, x8
   429c4:	str	x8, [x19, #504]
   429c8:	ldr	x8, [x19, #608]
   429cc:	ldr	x8, [x8, #48]
   429d0:	ldr	x9, [x19, #608]
   429d4:	ldr	x9, [x9, #56]
   429d8:	cmp	x8, x9
   429dc:	b.eq	42a24 <vasnprintf@@Base+0x870>  // b.none
   429e0:	ldr	x8, [x19, #608]
   429e4:	ldr	x8, [x8, #56]
   429e8:	ldr	x9, [x19, #608]
   429ec:	ldr	x9, [x9, #48]
   429f0:	subs	x8, x8, x9
   429f4:	str	x8, [x19, #472]
   429f8:	ldr	x0, [x19, #504]
   429fc:	ldr	x8, [x19, #608]
   42a00:	ldr	x1, [x8, #48]
   42a04:	ldr	x8, [x19, #472]
   42a08:	mov	x9, #0x1                   	// #1
   42a0c:	mul	x2, x8, x9
   42a10:	bl	af30 <memcpy@plt>
   42a14:	ldr	x8, [x19, #472]
   42a18:	ldr	x9, [x19, #504]
   42a1c:	add	x8, x9, x8
   42a20:	str	x8, [x19, #504]
   42a24:	ldr	w8, [x19, #516]
   42a28:	subs	w9, w8, #0x7
   42a2c:	cmp	w9, #0x1
   42a30:	str	w8, [x19, #180]
   42a34:	b.ls	42a94 <vasnprintf@@Base+0x8e0>  // b.plast
   42a38:	b	42a3c <vasnprintf@@Base+0x888>
   42a3c:	ldr	w8, [x19, #180]
   42a40:	subs	w9, w8, #0x9
   42a44:	cmp	w9, #0x1
   42a48:	b.ls	42a80 <vasnprintf@@Base+0x8cc>  // b.plast
   42a4c:	b	42a50 <vasnprintf@@Base+0x89c>
   42a50:	ldr	w8, [x19, #180]
   42a54:	cmp	w8, #0xc
   42a58:	b.eq	42aac <vasnprintf@@Base+0x8f8>  // b.none
   42a5c:	b	42a60 <vasnprintf@@Base+0x8ac>
   42a60:	ldr	w8, [x19, #180]
   42a64:	cmp	w8, #0xe
   42a68:	b.eq	42a94 <vasnprintf@@Base+0x8e0>  // b.none
   42a6c:	b	42a70 <vasnprintf@@Base+0x8bc>
   42a70:	ldr	w8, [x19, #180]
   42a74:	cmp	w8, #0x10
   42a78:	b.eq	42a94 <vasnprintf@@Base+0x8e0>  // b.none
   42a7c:	b	42ac4 <vasnprintf@@Base+0x910>
   42a80:	ldr	x8, [x19, #504]
   42a84:	add	x9, x8, #0x1
   42a88:	str	x9, [x19, #504]
   42a8c:	mov	w10, #0x6c                  	// #108
   42a90:	strb	w10, [x8]
   42a94:	ldr	x8, [x19, #504]
   42a98:	add	x9, x8, #0x1
   42a9c:	str	x9, [x19, #504]
   42aa0:	mov	w10, #0x6c                  	// #108
   42aa4:	strb	w10, [x8]
   42aa8:	b	42ac4 <vasnprintf@@Base+0x910>
   42aac:	ldr	x8, [x19, #504]
   42ab0:	add	x9, x8, #0x1
   42ab4:	str	x9, [x19, #504]
   42ab8:	mov	w10, #0x4c                  	// #76
   42abc:	strb	w10, [x8]
   42ac0:	b	42ac4 <vasnprintf@@Base+0x910>
   42ac4:	ldr	x8, [x19, #608]
   42ac8:	ldrb	w9, [x8, #72]
   42acc:	ldr	x8, [x19, #504]
   42ad0:	strb	w9, [x8]
   42ad4:	ldr	x8, [x19, #504]
   42ad8:	mov	w9, #0x0                   	// #0
   42adc:	strb	w9, [x8, #1]
   42ae0:	str	wzr, [x19, #500]
   42ae4:	ldr	x8, [x19, #608]
   42ae8:	ldr	x8, [x8, #40]
   42aec:	mov	x10, #0xffffffffffffffff    	// #-1
   42af0:	cmp	x8, x10
   42af4:	b.eq	42b5c <vasnprintf@@Base+0x9a8>  // b.none
   42af8:	add	x8, x19, #0x2b0
   42afc:	ldr	x8, [x8, #8]
   42b00:	ldr	x9, [x19, #608]
   42b04:	ldr	x9, [x9, #40]
   42b08:	mov	x10, #0x20                  	// #32
   42b0c:	mul	x9, x10, x9
   42b10:	ldr	w11, [x8, x9]
   42b14:	cmp	w11, #0x5
   42b18:	b.eq	42b20 <vasnprintf@@Base+0x96c>  // b.none
   42b1c:	bl	a9e0 <abort@plt>
   42b20:	add	x8, x19, #0x2b0
   42b24:	ldr	x8, [x8, #8]
   42b28:	ldr	x9, [x19, #608]
   42b2c:	ldr	x9, [x9, #40]
   42b30:	mov	x10, #0x20                  	// #32
   42b34:	mul	x9, x10, x9
   42b38:	add	x8, x8, x9
   42b3c:	ldr	w11, [x8, #16]
   42b40:	ldr	w12, [x19, #500]
   42b44:	mov	w8, w12
   42b48:	mov	w12, w8
   42b4c:	add	w12, w12, #0x1
   42b50:	str	w12, [x19, #500]
   42b54:	add	x9, x19, #0x1ec
   42b58:	str	w11, [x9, x8, lsl #2]
   42b5c:	ldr	x8, [x19, #608]
   42b60:	ldr	x8, [x8, #64]
   42b64:	mov	x9, #0xffffffffffffffff    	// #-1
   42b68:	cmp	x8, x9
   42b6c:	b.eq	42bd4 <vasnprintf@@Base+0xa20>  // b.none
   42b70:	add	x8, x19, #0x2b0
   42b74:	ldr	x8, [x8, #8]
   42b78:	ldr	x9, [x19, #608]
   42b7c:	ldr	x9, [x9, #64]
   42b80:	mov	x10, #0x20                  	// #32
   42b84:	mul	x9, x10, x9
   42b88:	ldr	w11, [x8, x9]
   42b8c:	cmp	w11, #0x5
   42b90:	b.eq	42b98 <vasnprintf@@Base+0x9e4>  // b.none
   42b94:	bl	a9e0 <abort@plt>
   42b98:	add	x8, x19, #0x2b0
   42b9c:	ldr	x8, [x8, #8]
   42ba0:	ldr	x9, [x19, #608]
   42ba4:	ldr	x9, [x9, #64]
   42ba8:	mov	x10, #0x20                  	// #32
   42bac:	mul	x9, x10, x9
   42bb0:	add	x8, x8, x9
   42bb4:	ldr	w11, [x8, #16]
   42bb8:	ldr	w12, [x19, #500]
   42bbc:	mov	w8, w12
   42bc0:	mov	w12, w8
   42bc4:	add	w12, w12, #0x1
   42bc8:	str	w12, [x19, #500]
   42bcc:	add	x9, x19, #0x1ec
   42bd0:	str	w11, [x9, x8, lsl #2]
   42bd4:	ldr	x0, [x19, #584]
   42bd8:	mov	x1, #0x2                   	// #2
   42bdc:	bl	b190 <xsum@plt>
   42be0:	ldr	x8, [x19, #592]
   42be4:	cmp	x0, x8
   42be8:	b.ls	42d30 <vasnprintf@@Base+0xb7c>  // b.plast
   42bec:	ldr	x8, [x19, #592]
   42bf0:	cmp	x8, #0x0
   42bf4:	cset	w9, ls  // ls = plast
   42bf8:	tbnz	w9, #0, 42c34 <vasnprintf@@Base+0xa80>
   42bfc:	ldr	x8, [x19, #592]
   42c00:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
   42c04:	cmp	x8, x9
   42c08:	b.hi	42c20 <vasnprintf@@Base+0xa6c>  // b.pmore
   42c0c:	ldr	x8, [x19, #592]
   42c10:	mov	x9, #0x2                   	// #2
   42c14:	mul	x8, x8, x9
   42c18:	str	x8, [x19, #168]
   42c1c:	b	42c28 <vasnprintf@@Base+0xa74>
   42c20:	mov	x8, #0xffffffffffffffff    	// #-1
   42c24:	str	x8, [x19, #168]
   42c28:	ldr	x8, [x19, #168]
   42c2c:	str	x8, [x19, #160]
   42c30:	b	42c3c <vasnprintf@@Base+0xa88>
   42c34:	mov	x8, #0xc                   	// #12
   42c38:	str	x8, [x19, #160]
   42c3c:	ldr	x8, [x19, #160]
   42c40:	str	x8, [x19, #592]
   42c44:	ldr	x0, [x19, #584]
   42c48:	mov	x1, #0x2                   	// #2
   42c4c:	bl	b190 <xsum@plt>
   42c50:	ldr	x8, [x19, #592]
   42c54:	cmp	x0, x8
   42c58:	b.ls	42c6c <vasnprintf@@Base+0xab8>  // b.plast
   42c5c:	ldr	x0, [x19, #584]
   42c60:	mov	x1, #0x2                   	// #2
   42c64:	bl	b190 <xsum@plt>
   42c68:	str	x0, [x19, #592]
   42c6c:	ldr	x8, [x19, #592]
   42c70:	mov	x9, #0xffffffffffffffff    	// #-1
   42c74:	cmp	x8, x9
   42c78:	b.hi	42c90 <vasnprintf@@Base+0xadc>  // b.pmore
   42c7c:	ldr	x8, [x19, #592]
   42c80:	mov	x9, #0x1                   	// #1
   42c84:	mul	x8, x8, x9
   42c88:	str	x8, [x19, #152]
   42c8c:	b	42c98 <vasnprintf@@Base+0xae4>
   42c90:	mov	x8, #0xffffffffffffffff    	// #-1
   42c94:	str	x8, [x19, #152]
   42c98:	ldr	x8, [x19, #152]
   42c9c:	str	x8, [x19, #464]
   42ca0:	ldr	x8, [x19, #464]
   42ca4:	mov	x9, #0xffffffffffffffff    	// #-1
   42ca8:	cmp	x8, x9
   42cac:	b.ne	42cb4 <vasnprintf@@Base+0xb00>  // b.any
   42cb0:	b	44310 <vasnprintf@@Base+0x215c>
   42cb4:	ldr	x8, [x19, #600]
   42cb8:	ldur	x9, [x29, #-16]
   42cbc:	cmp	x8, x9
   42cc0:	b.eq	42ccc <vasnprintf@@Base+0xb18>  // b.none
   42cc4:	ldr	x8, [x19, #600]
   42cc8:	cbnz	x8, 42cdc <vasnprintf@@Base+0xb28>
   42ccc:	ldr	x0, [x19, #464]
   42cd0:	bl	af10 <malloc@plt>
   42cd4:	str	x0, [x19, #456]
   42cd8:	b	42cec <vasnprintf@@Base+0xb38>
   42cdc:	ldr	x0, [x19, #600]
   42ce0:	ldr	x1, [x19, #464]
   42ce4:	bl	af40 <realloc@plt>
   42ce8:	str	x0, [x19, #456]
   42cec:	ldr	x8, [x19, #456]
   42cf0:	cbnz	x8, 42cf8 <vasnprintf@@Base+0xb44>
   42cf4:	b	44310 <vasnprintf@@Base+0x215c>
   42cf8:	ldr	x8, [x19, #600]
   42cfc:	ldur	x9, [x29, #-16]
   42d00:	cmp	x8, x9
   42d04:	b.ne	42d28 <vasnprintf@@Base+0xb74>  // b.any
   42d08:	ldr	x8, [x19, #584]
   42d0c:	cmp	x8, #0x0
   42d10:	cset	w9, ls  // ls = plast
   42d14:	tbnz	w9, #0, 42d28 <vasnprintf@@Base+0xb74>
   42d18:	ldr	x0, [x19, #456]
   42d1c:	ldr	x1, [x19, #600]
   42d20:	ldr	x2, [x19, #584]
   42d24:	bl	af30 <memcpy@plt>
   42d28:	ldr	x8, [x19, #456]
   42d2c:	str	x8, [x19, #600]
   42d30:	ldr	x8, [x19, #600]
   42d34:	ldr	x9, [x19, #584]
   42d38:	add	x8, x8, x9
   42d3c:	mov	w10, #0x0                   	// #0
   42d40:	strb	w10, [x8]
   42d44:	bl	aa20 <__errno_location@plt>
   42d48:	ldr	w10, [x0]
   42d4c:	str	w10, [x19, #488]
   42d50:	mov	w8, #0xffffffff            	// #-1
   42d54:	str	w8, [x19, #452]
   42d58:	str	wzr, [x19, #448]
   42d5c:	ldr	x9, [x19, #592]
   42d60:	ldr	x10, [x19, #584]
   42d64:	subs	x9, x9, x10
   42d68:	str	x9, [x19, #440]
   42d6c:	ldr	x9, [x19, #440]
   42d70:	mov	x10, #0x7fffffff            	// #2147483647
   42d74:	cmp	x9, x10
   42d78:	b.ls	42d84 <vasnprintf@@Base+0xbd0>  // b.plast
   42d7c:	mov	x8, #0x7fffffff            	// #2147483647
   42d80:	str	x8, [x19, #440]
   42d84:	ldr	x8, [x19, #440]
   42d88:	mov	x9, #0x1                   	// #1
   42d8c:	mul	x8, x8, x9
   42d90:	str	x8, [x19, #440]
   42d94:	bl	aa20 <__errno_location@plt>
   42d98:	str	wzr, [x0]
   42d9c:	ldr	w10, [x19, #516]
   42da0:	subs	w10, w10, #0x1
   42da4:	mov	w8, w10
   42da8:	ubfx	x8, x8, #0, #32
   42dac:	cmp	x8, #0x10
   42db0:	str	x8, [x19, #144]
   42db4:	b.hi	43cb0 <vasnprintf@@Base+0x1afc>  // b.pmore
   42db8:	adrp	x8, 47000 <vasnprintf@@Base+0x4e4c>
   42dbc:	add	x8, x8, #0x830
   42dc0:	ldr	x11, [x19, #144]
   42dc4:	ldrsw	x10, [x8, x11, lsl #2]
   42dc8:	add	x9, x8, x10
   42dcc:	br	x9
   42dd0:	add	x8, x19, #0x2b0
   42dd4:	ldr	x8, [x8, #8]
   42dd8:	ldr	x9, [x19, #608]
   42ddc:	ldr	x9, [x9, #80]
   42de0:	mov	x10, #0x20                  	// #32
   42de4:	mul	x9, x10, x9
   42de8:	add	x8, x8, x9
   42dec:	ldrsb	w11, [x8, #16]
   42df0:	str	w11, [x19, #436]
   42df4:	ldr	w11, [x19, #500]
   42df8:	str	w11, [x19, #140]
   42dfc:	cbz	w11, 42e24 <vasnprintf@@Base+0xc70>
   42e00:	b	42e04 <vasnprintf@@Base+0xc50>
   42e04:	ldr	w8, [x19, #140]
   42e08:	cmp	w8, #0x1
   42e0c:	b.eq	42e4c <vasnprintf@@Base+0xc98>  // b.none
   42e10:	b	42e14 <vasnprintf@@Base+0xc60>
   42e14:	ldr	w8, [x19, #140]
   42e18:	cmp	w8, #0x2
   42e1c:	b.eq	42e78 <vasnprintf@@Base+0xcc4>  // b.none
   42e20:	b	42ea8 <vasnprintf@@Base+0xcf4>
   42e24:	ldr	x8, [x19, #600]
   42e28:	ldr	x9, [x19, #584]
   42e2c:	add	x0, x8, x9
   42e30:	ldr	x1, [x19, #440]
   42e34:	ldr	x2, [x19, #640]
   42e38:	ldr	w3, [x19, #436]
   42e3c:	add	x4, x19, #0x1c4
   42e40:	bl	b8e0 <snprintf@plt>
   42e44:	str	w0, [x19, #448]
   42e48:	b	42eac <vasnprintf@@Base+0xcf8>
   42e4c:	ldr	x8, [x19, #600]
   42e50:	ldr	x9, [x19, #584]
   42e54:	add	x0, x8, x9
   42e58:	ldr	x1, [x19, #440]
   42e5c:	ldr	x2, [x19, #640]
   42e60:	ldr	w3, [x19, #492]
   42e64:	ldr	w4, [x19, #436]
   42e68:	add	x5, x19, #0x1c4
   42e6c:	bl	b8e0 <snprintf@plt>
   42e70:	str	w0, [x19, #448]
   42e74:	b	42eac <vasnprintf@@Base+0xcf8>
   42e78:	ldr	x8, [x19, #600]
   42e7c:	ldr	x9, [x19, #584]
   42e80:	add	x0, x8, x9
   42e84:	ldr	x1, [x19, #440]
   42e88:	ldr	x2, [x19, #640]
   42e8c:	ldr	w3, [x19, #492]
   42e90:	ldr	w4, [x19, #496]
   42e94:	ldr	w5, [x19, #436]
   42e98:	add	x6, x19, #0x1c4
   42e9c:	bl	b8e0 <snprintf@plt>
   42ea0:	str	w0, [x19, #448]
   42ea4:	b	42eac <vasnprintf@@Base+0xcf8>
   42ea8:	bl	a9e0 <abort@plt>
   42eac:	b	43cb4 <vasnprintf@@Base+0x1b00>
   42eb0:	add	x8, x19, #0x2b0
   42eb4:	ldr	x8, [x8, #8]
   42eb8:	ldr	x9, [x19, #608]
   42ebc:	ldr	x9, [x9, #80]
   42ec0:	mov	x10, #0x20                  	// #32
   42ec4:	mul	x9, x10, x9
   42ec8:	add	x8, x8, x9
   42ecc:	ldrb	w11, [x8, #16]
   42ed0:	str	w11, [x19, #432]
   42ed4:	ldr	w11, [x19, #500]
   42ed8:	str	w11, [x19, #136]
   42edc:	cbz	w11, 42f04 <vasnprintf@@Base+0xd50>
   42ee0:	b	42ee4 <vasnprintf@@Base+0xd30>
   42ee4:	ldr	w8, [x19, #136]
   42ee8:	cmp	w8, #0x1
   42eec:	b.eq	42f2c <vasnprintf@@Base+0xd78>  // b.none
   42ef0:	b	42ef4 <vasnprintf@@Base+0xd40>
   42ef4:	ldr	w8, [x19, #136]
   42ef8:	cmp	w8, #0x2
   42efc:	b.eq	42f58 <vasnprintf@@Base+0xda4>  // b.none
   42f00:	b	42f88 <vasnprintf@@Base+0xdd4>
   42f04:	ldr	x8, [x19, #600]
   42f08:	ldr	x9, [x19, #584]
   42f0c:	add	x0, x8, x9
   42f10:	ldr	x1, [x19, #440]
   42f14:	ldr	x2, [x19, #640]
   42f18:	ldr	w3, [x19, #432]
   42f1c:	add	x4, x19, #0x1c4
   42f20:	bl	b8e0 <snprintf@plt>
   42f24:	str	w0, [x19, #448]
   42f28:	b	42f8c <vasnprintf@@Base+0xdd8>
   42f2c:	ldr	x8, [x19, #600]
   42f30:	ldr	x9, [x19, #584]
   42f34:	add	x0, x8, x9
   42f38:	ldr	x1, [x19, #440]
   42f3c:	ldr	x2, [x19, #640]
   42f40:	ldr	w3, [x19, #492]
   42f44:	ldr	w4, [x19, #432]
   42f48:	add	x5, x19, #0x1c4
   42f4c:	bl	b8e0 <snprintf@plt>
   42f50:	str	w0, [x19, #448]
   42f54:	b	42f8c <vasnprintf@@Base+0xdd8>
   42f58:	ldr	x8, [x19, #600]
   42f5c:	ldr	x9, [x19, #584]
   42f60:	add	x0, x8, x9
   42f64:	ldr	x1, [x19, #440]
   42f68:	ldr	x2, [x19, #640]
   42f6c:	ldr	w3, [x19, #492]
   42f70:	ldr	w4, [x19, #496]
   42f74:	ldr	w5, [x19, #432]
   42f78:	add	x6, x19, #0x1c4
   42f7c:	bl	b8e0 <snprintf@plt>
   42f80:	str	w0, [x19, #448]
   42f84:	b	42f8c <vasnprintf@@Base+0xdd8>
   42f88:	bl	a9e0 <abort@plt>
   42f8c:	b	43cb4 <vasnprintf@@Base+0x1b00>
   42f90:	add	x8, x19, #0x2b0
   42f94:	ldr	x8, [x8, #8]
   42f98:	ldr	x9, [x19, #608]
   42f9c:	ldr	x9, [x9, #80]
   42fa0:	mov	x10, #0x20                  	// #32
   42fa4:	mul	x9, x10, x9
   42fa8:	add	x8, x8, x9
   42fac:	ldrsh	w11, [x8, #16]
   42fb0:	str	w11, [x19, #428]
   42fb4:	ldr	w11, [x19, #500]
   42fb8:	str	w11, [x19, #132]
   42fbc:	cbz	w11, 42fe4 <vasnprintf@@Base+0xe30>
   42fc0:	b	42fc4 <vasnprintf@@Base+0xe10>
   42fc4:	ldr	w8, [x19, #132]
   42fc8:	cmp	w8, #0x1
   42fcc:	b.eq	4300c <vasnprintf@@Base+0xe58>  // b.none
   42fd0:	b	42fd4 <vasnprintf@@Base+0xe20>
   42fd4:	ldr	w8, [x19, #132]
   42fd8:	cmp	w8, #0x2
   42fdc:	b.eq	43038 <vasnprintf@@Base+0xe84>  // b.none
   42fe0:	b	43068 <vasnprintf@@Base+0xeb4>
   42fe4:	ldr	x8, [x19, #600]
   42fe8:	ldr	x9, [x19, #584]
   42fec:	add	x0, x8, x9
   42ff0:	ldr	x1, [x19, #440]
   42ff4:	ldr	x2, [x19, #640]
   42ff8:	ldr	w3, [x19, #428]
   42ffc:	add	x4, x19, #0x1c4
   43000:	bl	b8e0 <snprintf@plt>
   43004:	str	w0, [x19, #448]
   43008:	b	4306c <vasnprintf@@Base+0xeb8>
   4300c:	ldr	x8, [x19, #600]
   43010:	ldr	x9, [x19, #584]
   43014:	add	x0, x8, x9
   43018:	ldr	x1, [x19, #440]
   4301c:	ldr	x2, [x19, #640]
   43020:	ldr	w3, [x19, #492]
   43024:	ldr	w4, [x19, #428]
   43028:	add	x5, x19, #0x1c4
   4302c:	bl	b8e0 <snprintf@plt>
   43030:	str	w0, [x19, #448]
   43034:	b	4306c <vasnprintf@@Base+0xeb8>
   43038:	ldr	x8, [x19, #600]
   4303c:	ldr	x9, [x19, #584]
   43040:	add	x0, x8, x9
   43044:	ldr	x1, [x19, #440]
   43048:	ldr	x2, [x19, #640]
   4304c:	ldr	w3, [x19, #492]
   43050:	ldr	w4, [x19, #496]
   43054:	ldr	w5, [x19, #428]
   43058:	add	x6, x19, #0x1c4
   4305c:	bl	b8e0 <snprintf@plt>
   43060:	str	w0, [x19, #448]
   43064:	b	4306c <vasnprintf@@Base+0xeb8>
   43068:	bl	a9e0 <abort@plt>
   4306c:	b	43cb4 <vasnprintf@@Base+0x1b00>
   43070:	add	x8, x19, #0x2b0
   43074:	ldr	x8, [x8, #8]
   43078:	ldr	x9, [x19, #608]
   4307c:	ldr	x9, [x9, #80]
   43080:	mov	x10, #0x20                  	// #32
   43084:	mul	x9, x10, x9
   43088:	add	x8, x8, x9
   4308c:	ldrh	w11, [x8, #16]
   43090:	str	w11, [x19, #424]
   43094:	ldr	w11, [x19, #500]
   43098:	str	w11, [x19, #128]
   4309c:	cbz	w11, 430c4 <vasnprintf@@Base+0xf10>
   430a0:	b	430a4 <vasnprintf@@Base+0xef0>
   430a4:	ldr	w8, [x19, #128]
   430a8:	cmp	w8, #0x1
   430ac:	b.eq	430ec <vasnprintf@@Base+0xf38>  // b.none
   430b0:	b	430b4 <vasnprintf@@Base+0xf00>
   430b4:	ldr	w8, [x19, #128]
   430b8:	cmp	w8, #0x2
   430bc:	b.eq	43118 <vasnprintf@@Base+0xf64>  // b.none
   430c0:	b	43148 <vasnprintf@@Base+0xf94>
   430c4:	ldr	x8, [x19, #600]
   430c8:	ldr	x9, [x19, #584]
   430cc:	add	x0, x8, x9
   430d0:	ldr	x1, [x19, #440]
   430d4:	ldr	x2, [x19, #640]
   430d8:	ldr	w3, [x19, #424]
   430dc:	add	x4, x19, #0x1c4
   430e0:	bl	b8e0 <snprintf@plt>
   430e4:	str	w0, [x19, #448]
   430e8:	b	4314c <vasnprintf@@Base+0xf98>
   430ec:	ldr	x8, [x19, #600]
   430f0:	ldr	x9, [x19, #584]
   430f4:	add	x0, x8, x9
   430f8:	ldr	x1, [x19, #440]
   430fc:	ldr	x2, [x19, #640]
   43100:	ldr	w3, [x19, #492]
   43104:	ldr	w4, [x19, #424]
   43108:	add	x5, x19, #0x1c4
   4310c:	bl	b8e0 <snprintf@plt>
   43110:	str	w0, [x19, #448]
   43114:	b	4314c <vasnprintf@@Base+0xf98>
   43118:	ldr	x8, [x19, #600]
   4311c:	ldr	x9, [x19, #584]
   43120:	add	x0, x8, x9
   43124:	ldr	x1, [x19, #440]
   43128:	ldr	x2, [x19, #640]
   4312c:	ldr	w3, [x19, #492]
   43130:	ldr	w4, [x19, #496]
   43134:	ldr	w5, [x19, #424]
   43138:	add	x6, x19, #0x1c4
   4313c:	bl	b8e0 <snprintf@plt>
   43140:	str	w0, [x19, #448]
   43144:	b	4314c <vasnprintf@@Base+0xf98>
   43148:	bl	a9e0 <abort@plt>
   4314c:	b	43cb4 <vasnprintf@@Base+0x1b00>
   43150:	add	x8, x19, #0x2b0
   43154:	ldr	x8, [x8, #8]
   43158:	ldr	x9, [x19, #608]
   4315c:	ldr	x9, [x9, #80]
   43160:	mov	x10, #0x20                  	// #32
   43164:	mul	x9, x10, x9
   43168:	add	x8, x8, x9
   4316c:	ldr	w11, [x8, #16]
   43170:	str	w11, [x19, #420]
   43174:	ldr	w11, [x19, #500]
   43178:	str	w11, [x19, #124]
   4317c:	cbz	w11, 431a4 <vasnprintf@@Base+0xff0>
   43180:	b	43184 <vasnprintf@@Base+0xfd0>
   43184:	ldr	w8, [x19, #124]
   43188:	cmp	w8, #0x1
   4318c:	b.eq	431cc <vasnprintf@@Base+0x1018>  // b.none
   43190:	b	43194 <vasnprintf@@Base+0xfe0>
   43194:	ldr	w8, [x19, #124]
   43198:	cmp	w8, #0x2
   4319c:	b.eq	431f8 <vasnprintf@@Base+0x1044>  // b.none
   431a0:	b	43228 <vasnprintf@@Base+0x1074>
   431a4:	ldr	x8, [x19, #600]
   431a8:	ldr	x9, [x19, #584]
   431ac:	add	x0, x8, x9
   431b0:	ldr	x1, [x19, #440]
   431b4:	ldr	x2, [x19, #640]
   431b8:	ldr	w3, [x19, #420]
   431bc:	add	x4, x19, #0x1c4
   431c0:	bl	b8e0 <snprintf@plt>
   431c4:	str	w0, [x19, #448]
   431c8:	b	4322c <vasnprintf@@Base+0x1078>
   431cc:	ldr	x8, [x19, #600]
   431d0:	ldr	x9, [x19, #584]
   431d4:	add	x0, x8, x9
   431d8:	ldr	x1, [x19, #440]
   431dc:	ldr	x2, [x19, #640]
   431e0:	ldr	w3, [x19, #492]
   431e4:	ldr	w4, [x19, #420]
   431e8:	add	x5, x19, #0x1c4
   431ec:	bl	b8e0 <snprintf@plt>
   431f0:	str	w0, [x19, #448]
   431f4:	b	4322c <vasnprintf@@Base+0x1078>
   431f8:	ldr	x8, [x19, #600]
   431fc:	ldr	x9, [x19, #584]
   43200:	add	x0, x8, x9
   43204:	ldr	x1, [x19, #440]
   43208:	ldr	x2, [x19, #640]
   4320c:	ldr	w3, [x19, #492]
   43210:	ldr	w4, [x19, #496]
   43214:	ldr	w5, [x19, #420]
   43218:	add	x6, x19, #0x1c4
   4321c:	bl	b8e0 <snprintf@plt>
   43220:	str	w0, [x19, #448]
   43224:	b	4322c <vasnprintf@@Base+0x1078>
   43228:	bl	a9e0 <abort@plt>
   4322c:	b	43cb4 <vasnprintf@@Base+0x1b00>
   43230:	add	x8, x19, #0x2b0
   43234:	ldr	x8, [x8, #8]
   43238:	ldr	x9, [x19, #608]
   4323c:	ldr	x9, [x9, #80]
   43240:	mov	x10, #0x20                  	// #32
   43244:	mul	x9, x10, x9
   43248:	add	x8, x8, x9
   4324c:	ldr	w11, [x8, #16]
   43250:	str	w11, [x19, #416]
   43254:	ldr	w11, [x19, #500]
   43258:	str	w11, [x19, #120]
   4325c:	cbz	w11, 43284 <vasnprintf@@Base+0x10d0>
   43260:	b	43264 <vasnprintf@@Base+0x10b0>
   43264:	ldr	w8, [x19, #120]
   43268:	cmp	w8, #0x1
   4326c:	b.eq	432ac <vasnprintf@@Base+0x10f8>  // b.none
   43270:	b	43274 <vasnprintf@@Base+0x10c0>
   43274:	ldr	w8, [x19, #120]
   43278:	cmp	w8, #0x2
   4327c:	b.eq	432d8 <vasnprintf@@Base+0x1124>  // b.none
   43280:	b	43308 <vasnprintf@@Base+0x1154>
   43284:	ldr	x8, [x19, #600]
   43288:	ldr	x9, [x19, #584]
   4328c:	add	x0, x8, x9
   43290:	ldr	x1, [x19, #440]
   43294:	ldr	x2, [x19, #640]
   43298:	ldr	w3, [x19, #416]
   4329c:	add	x4, x19, #0x1c4
   432a0:	bl	b8e0 <snprintf@plt>
   432a4:	str	w0, [x19, #448]
   432a8:	b	4330c <vasnprintf@@Base+0x1158>
   432ac:	ldr	x8, [x19, #600]
   432b0:	ldr	x9, [x19, #584]
   432b4:	add	x0, x8, x9
   432b8:	ldr	x1, [x19, #440]
   432bc:	ldr	x2, [x19, #640]
   432c0:	ldr	w3, [x19, #492]
   432c4:	ldr	w4, [x19, #416]
   432c8:	add	x5, x19, #0x1c4
   432cc:	bl	b8e0 <snprintf@plt>
   432d0:	str	w0, [x19, #448]
   432d4:	b	4330c <vasnprintf@@Base+0x1158>
   432d8:	ldr	x8, [x19, #600]
   432dc:	ldr	x9, [x19, #584]
   432e0:	add	x0, x8, x9
   432e4:	ldr	x1, [x19, #440]
   432e8:	ldr	x2, [x19, #640]
   432ec:	ldr	w3, [x19, #492]
   432f0:	ldr	w4, [x19, #496]
   432f4:	ldr	w5, [x19, #416]
   432f8:	add	x6, x19, #0x1c4
   432fc:	bl	b8e0 <snprintf@plt>
   43300:	str	w0, [x19, #448]
   43304:	b	4330c <vasnprintf@@Base+0x1158>
   43308:	bl	a9e0 <abort@plt>
   4330c:	b	43cb4 <vasnprintf@@Base+0x1b00>
   43310:	add	x8, x19, #0x2b0
   43314:	ldr	x8, [x8, #8]
   43318:	ldr	x9, [x19, #608]
   4331c:	ldr	x9, [x9, #80]
   43320:	mov	x10, #0x20                  	// #32
   43324:	mul	x9, x10, x9
   43328:	add	x8, x8, x9
   4332c:	ldr	x8, [x8, #16]
   43330:	str	x8, [x19, #408]
   43334:	ldr	w11, [x19, #500]
   43338:	str	w11, [x19, #116]
   4333c:	cbz	w11, 43364 <vasnprintf@@Base+0x11b0>
   43340:	b	43344 <vasnprintf@@Base+0x1190>
   43344:	ldr	w8, [x19, #116]
   43348:	cmp	w8, #0x1
   4334c:	b.eq	4338c <vasnprintf@@Base+0x11d8>  // b.none
   43350:	b	43354 <vasnprintf@@Base+0x11a0>
   43354:	ldr	w8, [x19, #116]
   43358:	cmp	w8, #0x2
   4335c:	b.eq	433b8 <vasnprintf@@Base+0x1204>  // b.none
   43360:	b	433e8 <vasnprintf@@Base+0x1234>
   43364:	ldr	x8, [x19, #600]
   43368:	ldr	x9, [x19, #584]
   4336c:	add	x0, x8, x9
   43370:	ldr	x1, [x19, #440]
   43374:	ldr	x2, [x19, #640]
   43378:	ldr	x3, [x19, #408]
   4337c:	add	x4, x19, #0x1c4
   43380:	bl	b8e0 <snprintf@plt>
   43384:	str	w0, [x19, #448]
   43388:	b	433ec <vasnprintf@@Base+0x1238>
   4338c:	ldr	x8, [x19, #600]
   43390:	ldr	x9, [x19, #584]
   43394:	add	x0, x8, x9
   43398:	ldr	x1, [x19, #440]
   4339c:	ldr	x2, [x19, #640]
   433a0:	ldr	w3, [x19, #492]
   433a4:	ldr	x4, [x19, #408]
   433a8:	add	x5, x19, #0x1c4
   433ac:	bl	b8e0 <snprintf@plt>
   433b0:	str	w0, [x19, #448]
   433b4:	b	433ec <vasnprintf@@Base+0x1238>
   433b8:	ldr	x8, [x19, #600]
   433bc:	ldr	x9, [x19, #584]
   433c0:	add	x0, x8, x9
   433c4:	ldr	x1, [x19, #440]
   433c8:	ldr	x2, [x19, #640]
   433cc:	ldr	w3, [x19, #492]
   433d0:	ldr	w4, [x19, #496]
   433d4:	ldr	x5, [x19, #408]
   433d8:	add	x6, x19, #0x1c4
   433dc:	bl	b8e0 <snprintf@plt>
   433e0:	str	w0, [x19, #448]
   433e4:	b	433ec <vasnprintf@@Base+0x1238>
   433e8:	bl	a9e0 <abort@plt>
   433ec:	b	43cb4 <vasnprintf@@Base+0x1b00>
   433f0:	add	x8, x19, #0x2b0
   433f4:	ldr	x8, [x8, #8]
   433f8:	ldr	x9, [x19, #608]
   433fc:	ldr	x9, [x9, #80]
   43400:	mov	x10, #0x20                  	// #32
   43404:	mul	x9, x10, x9
   43408:	add	x8, x8, x9
   4340c:	ldr	x8, [x8, #16]
   43410:	str	x8, [x19, #400]
   43414:	ldr	w11, [x19, #500]
   43418:	str	w11, [x19, #112]
   4341c:	cbz	w11, 43444 <vasnprintf@@Base+0x1290>
   43420:	b	43424 <vasnprintf@@Base+0x1270>
   43424:	ldr	w8, [x19, #112]
   43428:	cmp	w8, #0x1
   4342c:	b.eq	4346c <vasnprintf@@Base+0x12b8>  // b.none
   43430:	b	43434 <vasnprintf@@Base+0x1280>
   43434:	ldr	w8, [x19, #112]
   43438:	cmp	w8, #0x2
   4343c:	b.eq	43498 <vasnprintf@@Base+0x12e4>  // b.none
   43440:	b	434c8 <vasnprintf@@Base+0x1314>
   43444:	ldr	x8, [x19, #600]
   43448:	ldr	x9, [x19, #584]
   4344c:	add	x0, x8, x9
   43450:	ldr	x1, [x19, #440]
   43454:	ldr	x2, [x19, #640]
   43458:	ldr	x3, [x19, #400]
   4345c:	add	x4, x19, #0x1c4
   43460:	bl	b8e0 <snprintf@plt>
   43464:	str	w0, [x19, #448]
   43468:	b	434cc <vasnprintf@@Base+0x1318>
   4346c:	ldr	x8, [x19, #600]
   43470:	ldr	x9, [x19, #584]
   43474:	add	x0, x8, x9
   43478:	ldr	x1, [x19, #440]
   4347c:	ldr	x2, [x19, #640]
   43480:	ldr	w3, [x19, #492]
   43484:	ldr	x4, [x19, #400]
   43488:	add	x5, x19, #0x1c4
   4348c:	bl	b8e0 <snprintf@plt>
   43490:	str	w0, [x19, #448]
   43494:	b	434cc <vasnprintf@@Base+0x1318>
   43498:	ldr	x8, [x19, #600]
   4349c:	ldr	x9, [x19, #584]
   434a0:	add	x0, x8, x9
   434a4:	ldr	x1, [x19, #440]
   434a8:	ldr	x2, [x19, #640]
   434ac:	ldr	w3, [x19, #492]
   434b0:	ldr	w4, [x19, #496]
   434b4:	ldr	x5, [x19, #400]
   434b8:	add	x6, x19, #0x1c4
   434bc:	bl	b8e0 <snprintf@plt>
   434c0:	str	w0, [x19, #448]
   434c4:	b	434cc <vasnprintf@@Base+0x1318>
   434c8:	bl	a9e0 <abort@plt>
   434cc:	b	43cb4 <vasnprintf@@Base+0x1b00>
   434d0:	add	x8, x19, #0x2b0
   434d4:	ldr	x8, [x8, #8]
   434d8:	ldr	x9, [x19, #608]
   434dc:	ldr	x9, [x9, #80]
   434e0:	mov	x10, #0x20                  	// #32
   434e4:	mul	x9, x10, x9
   434e8:	add	x8, x8, x9
   434ec:	ldr	x8, [x8, #16]
   434f0:	str	x8, [x19, #392]
   434f4:	ldr	w11, [x19, #500]
   434f8:	str	w11, [x19, #108]
   434fc:	cbz	w11, 43524 <vasnprintf@@Base+0x1370>
   43500:	b	43504 <vasnprintf@@Base+0x1350>
   43504:	ldr	w8, [x19, #108]
   43508:	cmp	w8, #0x1
   4350c:	b.eq	4354c <vasnprintf@@Base+0x1398>  // b.none
   43510:	b	43514 <vasnprintf@@Base+0x1360>
   43514:	ldr	w8, [x19, #108]
   43518:	cmp	w8, #0x2
   4351c:	b.eq	43578 <vasnprintf@@Base+0x13c4>  // b.none
   43520:	b	435a8 <vasnprintf@@Base+0x13f4>
   43524:	ldr	x8, [x19, #600]
   43528:	ldr	x9, [x19, #584]
   4352c:	add	x0, x8, x9
   43530:	ldr	x1, [x19, #440]
   43534:	ldr	x2, [x19, #640]
   43538:	ldr	x3, [x19, #392]
   4353c:	add	x4, x19, #0x1c4
   43540:	bl	b8e0 <snprintf@plt>
   43544:	str	w0, [x19, #448]
   43548:	b	435ac <vasnprintf@@Base+0x13f8>
   4354c:	ldr	x8, [x19, #600]
   43550:	ldr	x9, [x19, #584]
   43554:	add	x0, x8, x9
   43558:	ldr	x1, [x19, #440]
   4355c:	ldr	x2, [x19, #640]
   43560:	ldr	w3, [x19, #492]
   43564:	ldr	x4, [x19, #392]
   43568:	add	x5, x19, #0x1c4
   4356c:	bl	b8e0 <snprintf@plt>
   43570:	str	w0, [x19, #448]
   43574:	b	435ac <vasnprintf@@Base+0x13f8>
   43578:	ldr	x8, [x19, #600]
   4357c:	ldr	x9, [x19, #584]
   43580:	add	x0, x8, x9
   43584:	ldr	x1, [x19, #440]
   43588:	ldr	x2, [x19, #640]
   4358c:	ldr	w3, [x19, #492]
   43590:	ldr	w4, [x19, #496]
   43594:	ldr	x5, [x19, #392]
   43598:	add	x6, x19, #0x1c4
   4359c:	bl	b8e0 <snprintf@plt>
   435a0:	str	w0, [x19, #448]
   435a4:	b	435ac <vasnprintf@@Base+0x13f8>
   435a8:	bl	a9e0 <abort@plt>
   435ac:	b	43cb4 <vasnprintf@@Base+0x1b00>
   435b0:	add	x8, x19, #0x2b0
   435b4:	ldr	x8, [x8, #8]
   435b8:	ldr	x9, [x19, #608]
   435bc:	ldr	x9, [x9, #80]
   435c0:	mov	x10, #0x20                  	// #32
   435c4:	mul	x9, x10, x9
   435c8:	add	x8, x8, x9
   435cc:	ldr	x8, [x8, #16]
   435d0:	str	x8, [x19, #384]
   435d4:	ldr	w11, [x19, #500]
   435d8:	str	w11, [x19, #104]
   435dc:	cbz	w11, 43604 <vasnprintf@@Base+0x1450>
   435e0:	b	435e4 <vasnprintf@@Base+0x1430>
   435e4:	ldr	w8, [x19, #104]
   435e8:	cmp	w8, #0x1
   435ec:	b.eq	4362c <vasnprintf@@Base+0x1478>  // b.none
   435f0:	b	435f4 <vasnprintf@@Base+0x1440>
   435f4:	ldr	w8, [x19, #104]
   435f8:	cmp	w8, #0x2
   435fc:	b.eq	43658 <vasnprintf@@Base+0x14a4>  // b.none
   43600:	b	43688 <vasnprintf@@Base+0x14d4>
   43604:	ldr	x8, [x19, #600]
   43608:	ldr	x9, [x19, #584]
   4360c:	add	x0, x8, x9
   43610:	ldr	x1, [x19, #440]
   43614:	ldr	x2, [x19, #640]
   43618:	ldr	x3, [x19, #384]
   4361c:	add	x4, x19, #0x1c4
   43620:	bl	b8e0 <snprintf@plt>
   43624:	str	w0, [x19, #448]
   43628:	b	4368c <vasnprintf@@Base+0x14d8>
   4362c:	ldr	x8, [x19, #600]
   43630:	ldr	x9, [x19, #584]
   43634:	add	x0, x8, x9
   43638:	ldr	x1, [x19, #440]
   4363c:	ldr	x2, [x19, #640]
   43640:	ldr	w3, [x19, #492]
   43644:	ldr	x4, [x19, #384]
   43648:	add	x5, x19, #0x1c4
   4364c:	bl	b8e0 <snprintf@plt>
   43650:	str	w0, [x19, #448]
   43654:	b	4368c <vasnprintf@@Base+0x14d8>
   43658:	ldr	x8, [x19, #600]
   4365c:	ldr	x9, [x19, #584]
   43660:	add	x0, x8, x9
   43664:	ldr	x1, [x19, #440]
   43668:	ldr	x2, [x19, #640]
   4366c:	ldr	w3, [x19, #492]
   43670:	ldr	w4, [x19, #496]
   43674:	ldr	x5, [x19, #384]
   43678:	add	x6, x19, #0x1c4
   4367c:	bl	b8e0 <snprintf@plt>
   43680:	str	w0, [x19, #448]
   43684:	b	4368c <vasnprintf@@Base+0x14d8>
   43688:	bl	a9e0 <abort@plt>
   4368c:	b	43cb4 <vasnprintf@@Base+0x1b00>
   43690:	add	x8, x19, #0x2b0
   43694:	ldr	x8, [x8, #8]
   43698:	ldr	x9, [x19, #608]
   4369c:	ldr	x9, [x9, #80]
   436a0:	mov	x10, #0x20                  	// #32
   436a4:	mul	x9, x10, x9
   436a8:	add	x8, x8, x9
   436ac:	ldr	x8, [x8, #16]
   436b0:	str	x8, [x19, #376]
   436b4:	ldr	w11, [x19, #500]
   436b8:	str	w11, [x19, #100]
   436bc:	cbz	w11, 436e4 <vasnprintf@@Base+0x1530>
   436c0:	b	436c4 <vasnprintf@@Base+0x1510>
   436c4:	ldr	w8, [x19, #100]
   436c8:	cmp	w8, #0x1
   436cc:	b.eq	4370c <vasnprintf@@Base+0x1558>  // b.none
   436d0:	b	436d4 <vasnprintf@@Base+0x1520>
   436d4:	ldr	w8, [x19, #100]
   436d8:	cmp	w8, #0x2
   436dc:	b.eq	43738 <vasnprintf@@Base+0x1584>  // b.none
   436e0:	b	43768 <vasnprintf@@Base+0x15b4>
   436e4:	ldr	x8, [x19, #600]
   436e8:	ldr	x9, [x19, #584]
   436ec:	add	x0, x8, x9
   436f0:	ldr	x1, [x19, #440]
   436f4:	ldr	x2, [x19, #640]
   436f8:	ldr	d0, [x19, #376]
   436fc:	add	x3, x19, #0x1c4
   43700:	bl	b8e0 <snprintf@plt>
   43704:	str	w0, [x19, #448]
   43708:	b	4376c <vasnprintf@@Base+0x15b8>
   4370c:	ldr	x8, [x19, #600]
   43710:	ldr	x9, [x19, #584]
   43714:	add	x0, x8, x9
   43718:	ldr	x1, [x19, #440]
   4371c:	ldr	x2, [x19, #640]
   43720:	ldr	w3, [x19, #492]
   43724:	ldr	d0, [x19, #376]
   43728:	add	x4, x19, #0x1c4
   4372c:	bl	b8e0 <snprintf@plt>
   43730:	str	w0, [x19, #448]
   43734:	b	4376c <vasnprintf@@Base+0x15b8>
   43738:	ldr	x8, [x19, #600]
   4373c:	ldr	x9, [x19, #584]
   43740:	add	x0, x8, x9
   43744:	ldr	x1, [x19, #440]
   43748:	ldr	x2, [x19, #640]
   4374c:	ldr	w3, [x19, #492]
   43750:	ldr	w4, [x19, #496]
   43754:	ldr	d0, [x19, #376]
   43758:	add	x5, x19, #0x1c4
   4375c:	bl	b8e0 <snprintf@plt>
   43760:	str	w0, [x19, #448]
   43764:	b	4376c <vasnprintf@@Base+0x15b8>
   43768:	bl	a9e0 <abort@plt>
   4376c:	b	43cb4 <vasnprintf@@Base+0x1b00>
   43770:	add	x8, x19, #0x2b0
   43774:	ldr	x8, [x8, #8]
   43778:	ldr	x9, [x19, #608]
   4377c:	ldr	x9, [x9, #80]
   43780:	mov	x10, #0x20                  	// #32
   43784:	mul	x9, x10, x9
   43788:	add	x8, x8, x9
   4378c:	ldr	q0, [x8, #16]
   43790:	str	q0, [x19, #352]
   43794:	ldr	w11, [x19, #500]
   43798:	str	w11, [x19, #96]
   4379c:	cbz	w11, 437c4 <vasnprintf@@Base+0x1610>
   437a0:	b	437a4 <vasnprintf@@Base+0x15f0>
   437a4:	ldr	w8, [x19, #96]
   437a8:	cmp	w8, #0x1
   437ac:	b.eq	437ec <vasnprintf@@Base+0x1638>  // b.none
   437b0:	b	437b4 <vasnprintf@@Base+0x1600>
   437b4:	ldr	w8, [x19, #96]
   437b8:	cmp	w8, #0x2
   437bc:	b.eq	43818 <vasnprintf@@Base+0x1664>  // b.none
   437c0:	b	43848 <vasnprintf@@Base+0x1694>
   437c4:	ldr	x8, [x19, #600]
   437c8:	ldr	x9, [x19, #584]
   437cc:	add	x0, x8, x9
   437d0:	ldr	x1, [x19, #440]
   437d4:	ldr	x2, [x19, #640]
   437d8:	ldr	q0, [x19, #352]
   437dc:	add	x3, x19, #0x1c4
   437e0:	bl	b8e0 <snprintf@plt>
   437e4:	str	w0, [x19, #448]
   437e8:	b	4384c <vasnprintf@@Base+0x1698>
   437ec:	ldr	x8, [x19, #600]
   437f0:	ldr	x9, [x19, #584]
   437f4:	add	x0, x8, x9
   437f8:	ldr	x1, [x19, #440]
   437fc:	ldr	x2, [x19, #640]
   43800:	ldr	w3, [x19, #492]
   43804:	ldr	q0, [x19, #352]
   43808:	add	x4, x19, #0x1c4
   4380c:	bl	b8e0 <snprintf@plt>
   43810:	str	w0, [x19, #448]
   43814:	b	4384c <vasnprintf@@Base+0x1698>
   43818:	ldr	x8, [x19, #600]
   4381c:	ldr	x9, [x19, #584]
   43820:	add	x0, x8, x9
   43824:	ldr	x1, [x19, #440]
   43828:	ldr	x2, [x19, #640]
   4382c:	ldr	w3, [x19, #492]
   43830:	ldr	w4, [x19, #496]
   43834:	ldr	q0, [x19, #352]
   43838:	add	x5, x19, #0x1c4
   4383c:	bl	b8e0 <snprintf@plt>
   43840:	str	w0, [x19, #448]
   43844:	b	4384c <vasnprintf@@Base+0x1698>
   43848:	bl	a9e0 <abort@plt>
   4384c:	b	43cb4 <vasnprintf@@Base+0x1b00>
   43850:	add	x8, x19, #0x2b0
   43854:	ldr	x8, [x8, #8]
   43858:	ldr	x9, [x19, #608]
   4385c:	ldr	x9, [x9, #80]
   43860:	mov	x10, #0x20                  	// #32
   43864:	mul	x9, x10, x9
   43868:	add	x8, x8, x9
   4386c:	ldr	w11, [x8, #16]
   43870:	str	w11, [x19, #348]
   43874:	ldr	w11, [x19, #500]
   43878:	str	w11, [x19, #92]
   4387c:	cbz	w11, 438a4 <vasnprintf@@Base+0x16f0>
   43880:	b	43884 <vasnprintf@@Base+0x16d0>
   43884:	ldr	w8, [x19, #92]
   43888:	cmp	w8, #0x1
   4388c:	b.eq	438cc <vasnprintf@@Base+0x1718>  // b.none
   43890:	b	43894 <vasnprintf@@Base+0x16e0>
   43894:	ldr	w8, [x19, #92]
   43898:	cmp	w8, #0x2
   4389c:	b.eq	438f8 <vasnprintf@@Base+0x1744>  // b.none
   438a0:	b	43928 <vasnprintf@@Base+0x1774>
   438a4:	ldr	x8, [x19, #600]
   438a8:	ldr	x9, [x19, #584]
   438ac:	add	x0, x8, x9
   438b0:	ldr	x1, [x19, #440]
   438b4:	ldr	x2, [x19, #640]
   438b8:	ldr	w3, [x19, #348]
   438bc:	add	x4, x19, #0x1c4
   438c0:	bl	b8e0 <snprintf@plt>
   438c4:	str	w0, [x19, #448]
   438c8:	b	4392c <vasnprintf@@Base+0x1778>
   438cc:	ldr	x8, [x19, #600]
   438d0:	ldr	x9, [x19, #584]
   438d4:	add	x0, x8, x9
   438d8:	ldr	x1, [x19, #440]
   438dc:	ldr	x2, [x19, #640]
   438e0:	ldr	w3, [x19, #492]
   438e4:	ldr	w4, [x19, #348]
   438e8:	add	x5, x19, #0x1c4
   438ec:	bl	b8e0 <snprintf@plt>
   438f0:	str	w0, [x19, #448]
   438f4:	b	4392c <vasnprintf@@Base+0x1778>
   438f8:	ldr	x8, [x19, #600]
   438fc:	ldr	x9, [x19, #584]
   43900:	add	x0, x8, x9
   43904:	ldr	x1, [x19, #440]
   43908:	ldr	x2, [x19, #640]
   4390c:	ldr	w3, [x19, #492]
   43910:	ldr	w4, [x19, #496]
   43914:	ldr	w5, [x19, #348]
   43918:	add	x6, x19, #0x1c4
   4391c:	bl	b8e0 <snprintf@plt>
   43920:	str	w0, [x19, #448]
   43924:	b	4392c <vasnprintf@@Base+0x1778>
   43928:	bl	a9e0 <abort@plt>
   4392c:	b	43cb4 <vasnprintf@@Base+0x1b00>
   43930:	add	x8, x19, #0x2b0
   43934:	ldr	x8, [x8, #8]
   43938:	ldr	x9, [x19, #608]
   4393c:	ldr	x9, [x9, #80]
   43940:	mov	x10, #0x20                  	// #32
   43944:	mul	x9, x10, x9
   43948:	add	x8, x8, x9
   4394c:	ldr	w11, [x8, #16]
   43950:	str	w11, [x19, #344]
   43954:	ldr	w11, [x19, #500]
   43958:	str	w11, [x19, #88]
   4395c:	cbz	w11, 43984 <vasnprintf@@Base+0x17d0>
   43960:	b	43964 <vasnprintf@@Base+0x17b0>
   43964:	ldr	w8, [x19, #88]
   43968:	cmp	w8, #0x1
   4396c:	b.eq	439ac <vasnprintf@@Base+0x17f8>  // b.none
   43970:	b	43974 <vasnprintf@@Base+0x17c0>
   43974:	ldr	w8, [x19, #88]
   43978:	cmp	w8, #0x2
   4397c:	b.eq	439d8 <vasnprintf@@Base+0x1824>  // b.none
   43980:	b	43a08 <vasnprintf@@Base+0x1854>
   43984:	ldr	x8, [x19, #600]
   43988:	ldr	x9, [x19, #584]
   4398c:	add	x0, x8, x9
   43990:	ldr	x1, [x19, #440]
   43994:	ldr	x2, [x19, #640]
   43998:	ldr	w3, [x19, #344]
   4399c:	add	x4, x19, #0x1c4
   439a0:	bl	b8e0 <snprintf@plt>
   439a4:	str	w0, [x19, #448]
   439a8:	b	43a0c <vasnprintf@@Base+0x1858>
   439ac:	ldr	x8, [x19, #600]
   439b0:	ldr	x9, [x19, #584]
   439b4:	add	x0, x8, x9
   439b8:	ldr	x1, [x19, #440]
   439bc:	ldr	x2, [x19, #640]
   439c0:	ldr	w3, [x19, #492]
   439c4:	ldr	w4, [x19, #344]
   439c8:	add	x5, x19, #0x1c4
   439cc:	bl	b8e0 <snprintf@plt>
   439d0:	str	w0, [x19, #448]
   439d4:	b	43a0c <vasnprintf@@Base+0x1858>
   439d8:	ldr	x8, [x19, #600]
   439dc:	ldr	x9, [x19, #584]
   439e0:	add	x0, x8, x9
   439e4:	ldr	x1, [x19, #440]
   439e8:	ldr	x2, [x19, #640]
   439ec:	ldr	w3, [x19, #492]
   439f0:	ldr	w4, [x19, #496]
   439f4:	ldr	w5, [x19, #344]
   439f8:	add	x6, x19, #0x1c4
   439fc:	bl	b8e0 <snprintf@plt>
   43a00:	str	w0, [x19, #448]
   43a04:	b	43a0c <vasnprintf@@Base+0x1858>
   43a08:	bl	a9e0 <abort@plt>
   43a0c:	b	43cb4 <vasnprintf@@Base+0x1b00>
   43a10:	add	x8, x19, #0x2b0
   43a14:	ldr	x8, [x8, #8]
   43a18:	ldr	x9, [x19, #608]
   43a1c:	ldr	x9, [x9, #80]
   43a20:	mov	x10, #0x20                  	// #32
   43a24:	mul	x9, x10, x9
   43a28:	add	x8, x8, x9
   43a2c:	ldr	x8, [x8, #16]
   43a30:	str	x8, [x19, #336]
   43a34:	ldr	w11, [x19, #500]
   43a38:	str	w11, [x19, #84]
   43a3c:	cbz	w11, 43a64 <vasnprintf@@Base+0x18b0>
   43a40:	b	43a44 <vasnprintf@@Base+0x1890>
   43a44:	ldr	w8, [x19, #84]
   43a48:	cmp	w8, #0x1
   43a4c:	b.eq	43a8c <vasnprintf@@Base+0x18d8>  // b.none
   43a50:	b	43a54 <vasnprintf@@Base+0x18a0>
   43a54:	ldr	w8, [x19, #84]
   43a58:	cmp	w8, #0x2
   43a5c:	b.eq	43ab8 <vasnprintf@@Base+0x1904>  // b.none
   43a60:	b	43ae8 <vasnprintf@@Base+0x1934>
   43a64:	ldr	x8, [x19, #600]
   43a68:	ldr	x9, [x19, #584]
   43a6c:	add	x0, x8, x9
   43a70:	ldr	x1, [x19, #440]
   43a74:	ldr	x2, [x19, #640]
   43a78:	ldr	x3, [x19, #336]
   43a7c:	add	x4, x19, #0x1c4
   43a80:	bl	b8e0 <snprintf@plt>
   43a84:	str	w0, [x19, #448]
   43a88:	b	43aec <vasnprintf@@Base+0x1938>
   43a8c:	ldr	x8, [x19, #600]
   43a90:	ldr	x9, [x19, #584]
   43a94:	add	x0, x8, x9
   43a98:	ldr	x1, [x19, #440]
   43a9c:	ldr	x2, [x19, #640]
   43aa0:	ldr	w3, [x19, #492]
   43aa4:	ldr	x4, [x19, #336]
   43aa8:	add	x5, x19, #0x1c4
   43aac:	bl	b8e0 <snprintf@plt>
   43ab0:	str	w0, [x19, #448]
   43ab4:	b	43aec <vasnprintf@@Base+0x1938>
   43ab8:	ldr	x8, [x19, #600]
   43abc:	ldr	x9, [x19, #584]
   43ac0:	add	x0, x8, x9
   43ac4:	ldr	x1, [x19, #440]
   43ac8:	ldr	x2, [x19, #640]
   43acc:	ldr	w3, [x19, #492]
   43ad0:	ldr	w4, [x19, #496]
   43ad4:	ldr	x5, [x19, #336]
   43ad8:	add	x6, x19, #0x1c4
   43adc:	bl	b8e0 <snprintf@plt>
   43ae0:	str	w0, [x19, #448]
   43ae4:	b	43aec <vasnprintf@@Base+0x1938>
   43ae8:	bl	a9e0 <abort@plt>
   43aec:	b	43cb4 <vasnprintf@@Base+0x1b00>
   43af0:	add	x8, x19, #0x2b0
   43af4:	ldr	x8, [x8, #8]
   43af8:	ldr	x9, [x19, #608]
   43afc:	ldr	x9, [x9, #80]
   43b00:	mov	x10, #0x20                  	// #32
   43b04:	mul	x9, x10, x9
   43b08:	add	x8, x8, x9
   43b0c:	ldr	x8, [x8, #16]
   43b10:	str	x8, [x19, #328]
   43b14:	ldr	w11, [x19, #500]
   43b18:	str	w11, [x19, #80]
   43b1c:	cbz	w11, 43b44 <vasnprintf@@Base+0x1990>
   43b20:	b	43b24 <vasnprintf@@Base+0x1970>
   43b24:	ldr	w8, [x19, #80]
   43b28:	cmp	w8, #0x1
   43b2c:	b.eq	43b6c <vasnprintf@@Base+0x19b8>  // b.none
   43b30:	b	43b34 <vasnprintf@@Base+0x1980>
   43b34:	ldr	w8, [x19, #80]
   43b38:	cmp	w8, #0x2
   43b3c:	b.eq	43b98 <vasnprintf@@Base+0x19e4>  // b.none
   43b40:	b	43bc8 <vasnprintf@@Base+0x1a14>
   43b44:	ldr	x8, [x19, #600]
   43b48:	ldr	x9, [x19, #584]
   43b4c:	add	x0, x8, x9
   43b50:	ldr	x1, [x19, #440]
   43b54:	ldr	x2, [x19, #640]
   43b58:	ldr	x3, [x19, #328]
   43b5c:	add	x4, x19, #0x1c4
   43b60:	bl	b8e0 <snprintf@plt>
   43b64:	str	w0, [x19, #448]
   43b68:	b	43bcc <vasnprintf@@Base+0x1a18>
   43b6c:	ldr	x8, [x19, #600]
   43b70:	ldr	x9, [x19, #584]
   43b74:	add	x0, x8, x9
   43b78:	ldr	x1, [x19, #440]
   43b7c:	ldr	x2, [x19, #640]
   43b80:	ldr	w3, [x19, #492]
   43b84:	ldr	x4, [x19, #328]
   43b88:	add	x5, x19, #0x1c4
   43b8c:	bl	b8e0 <snprintf@plt>
   43b90:	str	w0, [x19, #448]
   43b94:	b	43bcc <vasnprintf@@Base+0x1a18>
   43b98:	ldr	x8, [x19, #600]
   43b9c:	ldr	x9, [x19, #584]
   43ba0:	add	x0, x8, x9
   43ba4:	ldr	x1, [x19, #440]
   43ba8:	ldr	x2, [x19, #640]
   43bac:	ldr	w3, [x19, #492]
   43bb0:	ldr	w4, [x19, #496]
   43bb4:	ldr	x5, [x19, #328]
   43bb8:	add	x6, x19, #0x1c4
   43bbc:	bl	b8e0 <snprintf@plt>
   43bc0:	str	w0, [x19, #448]
   43bc4:	b	43bcc <vasnprintf@@Base+0x1a18>
   43bc8:	bl	a9e0 <abort@plt>
   43bcc:	b	43cb4 <vasnprintf@@Base+0x1b00>
   43bd0:	add	x8, x19, #0x2b0
   43bd4:	ldr	x8, [x8, #8]
   43bd8:	ldr	x9, [x19, #608]
   43bdc:	ldr	x9, [x9, #80]
   43be0:	mov	x10, #0x20                  	// #32
   43be4:	mul	x9, x10, x9
   43be8:	add	x8, x8, x9
   43bec:	ldr	x8, [x8, #16]
   43bf0:	str	x8, [x19, #320]
   43bf4:	ldr	w11, [x19, #500]
   43bf8:	str	w11, [x19, #76]
   43bfc:	cbz	w11, 43c24 <vasnprintf@@Base+0x1a70>
   43c00:	b	43c04 <vasnprintf@@Base+0x1a50>
   43c04:	ldr	w8, [x19, #76]
   43c08:	cmp	w8, #0x1
   43c0c:	b.eq	43c4c <vasnprintf@@Base+0x1a98>  // b.none
   43c10:	b	43c14 <vasnprintf@@Base+0x1a60>
   43c14:	ldr	w8, [x19, #76]
   43c18:	cmp	w8, #0x2
   43c1c:	b.eq	43c78 <vasnprintf@@Base+0x1ac4>  // b.none
   43c20:	b	43ca8 <vasnprintf@@Base+0x1af4>
   43c24:	ldr	x8, [x19, #600]
   43c28:	ldr	x9, [x19, #584]
   43c2c:	add	x0, x8, x9
   43c30:	ldr	x1, [x19, #440]
   43c34:	ldr	x2, [x19, #640]
   43c38:	ldr	x3, [x19, #320]
   43c3c:	add	x4, x19, #0x1c4
   43c40:	bl	b8e0 <snprintf@plt>
   43c44:	str	w0, [x19, #448]
   43c48:	b	43cac <vasnprintf@@Base+0x1af8>
   43c4c:	ldr	x8, [x19, #600]
   43c50:	ldr	x9, [x19, #584]
   43c54:	add	x0, x8, x9
   43c58:	ldr	x1, [x19, #440]
   43c5c:	ldr	x2, [x19, #640]
   43c60:	ldr	w3, [x19, #492]
   43c64:	ldr	x4, [x19, #320]
   43c68:	add	x5, x19, #0x1c4
   43c6c:	bl	b8e0 <snprintf@plt>
   43c70:	str	w0, [x19, #448]
   43c74:	b	43cac <vasnprintf@@Base+0x1af8>
   43c78:	ldr	x8, [x19, #600]
   43c7c:	ldr	x9, [x19, #584]
   43c80:	add	x0, x8, x9
   43c84:	ldr	x1, [x19, #440]
   43c88:	ldr	x2, [x19, #640]
   43c8c:	ldr	w3, [x19, #492]
   43c90:	ldr	w4, [x19, #496]
   43c94:	ldr	x5, [x19, #320]
   43c98:	add	x6, x19, #0x1c4
   43c9c:	bl	b8e0 <snprintf@plt>
   43ca0:	str	w0, [x19, #448]
   43ca4:	b	43cac <vasnprintf@@Base+0x1af8>
   43ca8:	bl	a9e0 <abort@plt>
   43cac:	b	43cb4 <vasnprintf@@Base+0x1b00>
   43cb0:	bl	a9e0 <abort@plt>
   43cb4:	ldr	w8, [x19, #452]
   43cb8:	cmp	w8, #0x0
   43cbc:	cset	w8, lt  // lt = tstop
   43cc0:	tbnz	w8, #0, 43d10 <vasnprintf@@Base+0x1b5c>
   43cc4:	ldr	w8, [x19, #452]
   43cc8:	mov	w9, w8
   43ccc:	ldr	x10, [x19, #440]
   43cd0:	cmp	x9, x10
   43cd4:	b.cs	43cf4 <vasnprintf@@Base+0x1b40>  // b.hs, b.nlast
   43cd8:	ldr	x8, [x19, #600]
   43cdc:	ldr	x9, [x19, #584]
   43ce0:	add	x8, x8, x9
   43ce4:	ldrsw	x9, [x19, #452]
   43ce8:	ldrb	w10, [x8, x9]
   43cec:	cbz	w10, 43cf4 <vasnprintf@@Base+0x1b40>
   43cf0:	bl	a9e0 <abort@plt>
   43cf4:	ldr	w8, [x19, #448]
   43cf8:	ldr	w9, [x19, #452]
   43cfc:	cmp	w8, w9
   43d00:	b.le	43d0c <vasnprintf@@Base+0x1b58>
   43d04:	ldr	w8, [x19, #448]
   43d08:	str	w8, [x19, #452]
   43d0c:	b	43d48 <vasnprintf@@Base+0x1b94>
   43d10:	ldr	x8, [x19, #504]
   43d14:	ldrb	w9, [x8, #1]
   43d18:	cbz	w9, 43d2c <vasnprintf@@Base+0x1b78>
   43d1c:	ldr	x8, [x19, #504]
   43d20:	mov	w9, #0x0                   	// #0
   43d24:	strb	w9, [x8, #1]
   43d28:	b	42d50 <vasnprintf@@Base+0xb9c>
   43d2c:	ldr	w8, [x19, #448]
   43d30:	cmp	w8, #0x0
   43d34:	cset	w8, ge  // ge = tcont
   43d38:	tbnz	w8, #0, 43d40 <vasnprintf@@Base+0x1b8c>
   43d3c:	b	43d48 <vasnprintf@@Base+0x1b94>
   43d40:	ldr	w8, [x19, #448]
   43d44:	str	w8, [x19, #452]
   43d48:	ldr	w8, [x19, #452]
   43d4c:	cmp	w8, #0x0
   43d50:	cset	w8, ge  // ge = tcont
   43d54:	tbnz	w8, #0, 43e30 <vasnprintf@@Base+0x1c7c>
   43d58:	bl	aa20 <__errno_location@plt>
   43d5c:	ldr	w8, [x0]
   43d60:	str	w8, [x19, #316]
   43d64:	ldr	w8, [x19, #316]
   43d68:	cbnz	w8, 43da0 <vasnprintf@@Base+0x1bec>
   43d6c:	ldr	x8, [x19, #608]
   43d70:	ldrb	w9, [x8, #72]
   43d74:	cmp	w9, #0x63
   43d78:	b.eq	43d8c <vasnprintf@@Base+0x1bd8>  // b.none
   43d7c:	ldr	x8, [x19, #608]
   43d80:	ldrb	w9, [x8, #72]
   43d84:	cmp	w9, #0x73
   43d88:	b.ne	43d98 <vasnprintf@@Base+0x1be4>  // b.any
   43d8c:	mov	w8, #0x54                  	// #84
   43d90:	str	w8, [x19, #316]
   43d94:	b	43da0 <vasnprintf@@Base+0x1bec>
   43d98:	mov	w8, #0x16                  	// #22
   43d9c:	str	w8, [x19, #316]
   43da0:	ldr	x8, [x19, #600]
   43da4:	ldur	x9, [x29, #-16]
   43da8:	cmp	x8, x9
   43dac:	b.eq	43dc0 <vasnprintf@@Base+0x1c0c>  // b.none
   43db0:	ldr	x8, [x19, #600]
   43db4:	cbz	x8, 43dc0 <vasnprintf@@Base+0x1c0c>
   43db8:	ldr	x0, [x19, #600]
   43dbc:	bl	a930 <free@plt>
   43dc0:	ldr	x8, [x19, #632]
   43dc4:	cbz	x8, 43dd0 <vasnprintf@@Base+0x1c1c>
   43dc8:	ldr	x0, [x19, #632]
   43dcc:	bl	a930 <free@plt>
   43dd0:	add	x8, x19, #0x3a8
   43dd4:	ldr	x9, [x8, #8]
   43dd8:	add	x8, x8, #0x20
   43ddc:	cmp	x9, x8
   43de0:	b.eq	43df0 <vasnprintf@@Base+0x1c3c>  // b.none
   43de4:	add	x8, x19, #0x3a8
   43de8:	ldr	x0, [x8, #8]
   43dec:	bl	a930 <free@plt>
   43df0:	add	x8, x19, #0x2b0
   43df4:	ldr	x9, [x8, #8]
   43df8:	add	x8, x8, #0x10
   43dfc:	cmp	x9, x8
   43e00:	b.eq	43e10 <vasnprintf@@Base+0x1c5c>  // b.none
   43e04:	add	x8, x19, #0x2b0
   43e08:	ldr	x0, [x8, #8]
   43e0c:	bl	a930 <free@plt>
   43e10:	ldr	w8, [x19, #316]
   43e14:	str	w8, [x19, #72]
   43e18:	bl	aa20 <__errno_location@plt>
   43e1c:	ldr	w8, [x19, #72]
   43e20:	str	w8, [x0]
   43e24:	mov	x9, xzr
   43e28:	stur	x9, [x29, #-8]
   43e2c:	b	44394 <vasnprintf@@Base+0x21e0>
   43e30:	ldr	w8, [x19, #452]
   43e34:	add	w8, w8, #0x1
   43e38:	mov	w9, w8
   43e3c:	ubfx	x9, x9, #0, #32
   43e40:	ldr	x10, [x19, #440]
   43e44:	cmp	x9, x10
   43e48:	b.cc	44014 <vasnprintf@@Base+0x1e60>  // b.lo, b.ul, b.last
   43e4c:	ldr	x8, [x19, #440]
   43e50:	mov	x9, #0x7fffffff            	// #2147483647
   43e54:	cmp	x8, x9
   43e58:	b.ne	43e60 <vasnprintf@@Base+0x1cac>  // b.any
   43e5c:	b	44288 <vasnprintf@@Base+0x20d4>
   43e60:	ldr	x0, [x19, #584]
   43e64:	ldr	w8, [x19, #452]
   43e68:	add	w8, w8, #0x2
   43e6c:	mov	w9, w8
   43e70:	ubfx	x9, x9, #0, #32
   43e74:	mov	x10, #0x1                   	// #1
   43e78:	add	x9, x9, #0x1
   43e7c:	subs	x9, x9, #0x1
   43e80:	udiv	x1, x9, x10
   43e84:	bl	b190 <xsum@plt>
   43e88:	ldr	x9, [x19, #592]
   43e8c:	mov	x10, #0x7fffffffffffffff    	// #9223372036854775807
   43e90:	cmp	x9, x10
   43e94:	str	x0, [x19, #64]
   43e98:	b.hi	43eb0 <vasnprintf@@Base+0x1cfc>  // b.pmore
   43e9c:	ldr	x8, [x19, #592]
   43ea0:	mov	x9, #0x2                   	// #2
   43ea4:	mul	x8, x8, x9
   43ea8:	str	x8, [x19, #56]
   43eac:	b	43eb8 <vasnprintf@@Base+0x1d04>
   43eb0:	mov	x8, #0xffffffffffffffff    	// #-1
   43eb4:	str	x8, [x19, #56]
   43eb8:	ldr	x8, [x19, #56]
   43ebc:	ldr	x0, [x19, #64]
   43ec0:	mov	x1, x8
   43ec4:	bl	b8f0 <xmax@plt>
   43ec8:	str	x0, [x19, #304]
   43ecc:	ldr	x8, [x19, #304]
   43ed0:	ldr	x9, [x19, #592]
   43ed4:	cmp	x8, x9
   43ed8:	b.ls	44010 <vasnprintf@@Base+0x1e5c>  // b.plast
   43edc:	ldr	x8, [x19, #592]
   43ee0:	cmp	x8, #0x0
   43ee4:	cset	w9, ls  // ls = plast
   43ee8:	tbnz	w9, #0, 43f24 <vasnprintf@@Base+0x1d70>
   43eec:	ldr	x8, [x19, #592]
   43ef0:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
   43ef4:	cmp	x8, x9
   43ef8:	b.hi	43f10 <vasnprintf@@Base+0x1d5c>  // b.pmore
   43efc:	ldr	x8, [x19, #592]
   43f00:	mov	x9, #0x2                   	// #2
   43f04:	mul	x8, x8, x9
   43f08:	str	x8, [x19, #48]
   43f0c:	b	43f18 <vasnprintf@@Base+0x1d64>
   43f10:	mov	x8, #0xffffffffffffffff    	// #-1
   43f14:	str	x8, [x19, #48]
   43f18:	ldr	x8, [x19, #48]
   43f1c:	str	x8, [x19, #40]
   43f20:	b	43f2c <vasnprintf@@Base+0x1d78>
   43f24:	mov	x8, #0xc                   	// #12
   43f28:	str	x8, [x19, #40]
   43f2c:	ldr	x8, [x19, #40]
   43f30:	str	x8, [x19, #592]
   43f34:	ldr	x8, [x19, #304]
   43f38:	ldr	x9, [x19, #592]
   43f3c:	cmp	x8, x9
   43f40:	b.ls	43f4c <vasnprintf@@Base+0x1d98>  // b.plast
   43f44:	ldr	x8, [x19, #304]
   43f48:	str	x8, [x19, #592]
   43f4c:	ldr	x8, [x19, #592]
   43f50:	mov	x9, #0xffffffffffffffff    	// #-1
   43f54:	cmp	x8, x9
   43f58:	b.hi	43f70 <vasnprintf@@Base+0x1dbc>  // b.pmore
   43f5c:	ldr	x8, [x19, #592]
   43f60:	mov	x9, #0x1                   	// #1
   43f64:	mul	x8, x8, x9
   43f68:	str	x8, [x19, #32]
   43f6c:	b	43f78 <vasnprintf@@Base+0x1dc4>
   43f70:	mov	x8, #0xffffffffffffffff    	// #-1
   43f74:	str	x8, [x19, #32]
   43f78:	ldr	x8, [x19, #32]
   43f7c:	str	x8, [x19, #296]
   43f80:	ldr	x8, [x19, #296]
   43f84:	mov	x9, #0xffffffffffffffff    	// #-1
   43f88:	cmp	x8, x9
   43f8c:	b.ne	43f94 <vasnprintf@@Base+0x1de0>  // b.any
   43f90:	b	44310 <vasnprintf@@Base+0x215c>
   43f94:	ldr	x8, [x19, #600]
   43f98:	ldur	x9, [x29, #-16]
   43f9c:	cmp	x8, x9
   43fa0:	b.eq	43fac <vasnprintf@@Base+0x1df8>  // b.none
   43fa4:	ldr	x8, [x19, #600]
   43fa8:	cbnz	x8, 43fbc <vasnprintf@@Base+0x1e08>
   43fac:	ldr	x0, [x19, #296]
   43fb0:	bl	af10 <malloc@plt>
   43fb4:	str	x0, [x19, #288]
   43fb8:	b	43fcc <vasnprintf@@Base+0x1e18>
   43fbc:	ldr	x0, [x19, #600]
   43fc0:	ldr	x1, [x19, #296]
   43fc4:	bl	af40 <realloc@plt>
   43fc8:	str	x0, [x19, #288]
   43fcc:	ldr	x8, [x19, #288]
   43fd0:	cbnz	x8, 43fd8 <vasnprintf@@Base+0x1e24>
   43fd4:	b	44310 <vasnprintf@@Base+0x215c>
   43fd8:	ldr	x8, [x19, #600]
   43fdc:	ldur	x9, [x29, #-16]
   43fe0:	cmp	x8, x9
   43fe4:	b.ne	44008 <vasnprintf@@Base+0x1e54>  // b.any
   43fe8:	ldr	x8, [x19, #584]
   43fec:	cmp	x8, #0x0
   43ff0:	cset	w9, ls  // ls = plast
   43ff4:	tbnz	w9, #0, 44008 <vasnprintf@@Base+0x1e54>
   43ff8:	ldr	x0, [x19, #288]
   43ffc:	ldr	x1, [x19, #600]
   44000:	ldr	x2, [x19, #584]
   44004:	bl	af30 <memcpy@plt>
   44008:	ldr	x8, [x19, #288]
   4400c:	str	x8, [x19, #600]
   44010:	b	42d50 <vasnprintf@@Base+0xb9c>
   44014:	ldrsw	x8, [x19, #452]
   44018:	ldr	x9, [x19, #584]
   4401c:	add	x8, x9, x8
   44020:	str	x8, [x19, #584]
   44024:	ldr	w8, [x19, #488]
   44028:	str	w8, [x19, #28]
   4402c:	bl	aa20 <__errno_location@plt>
   44030:	ldr	w8, [x19, #28]
   44034:	str	w8, [x0]
   44038:	ldr	x8, [x19, #608]
   4403c:	ldr	x8, [x8, #8]
   44040:	str	x8, [x19, #624]
   44044:	ldr	x8, [x19, #616]
   44048:	add	x8, x8, #0x1
   4404c:	str	x8, [x19, #616]
   44050:	ldr	x8, [x19, #608]
   44054:	add	x8, x8, #0x58
   44058:	str	x8, [x19, #608]
   4405c:	b	423a0 <vasnprintf@@Base+0x1ec>
   44060:	ldr	x0, [x19, #584]
   44064:	mov	x1, #0x1                   	// #1
   44068:	bl	b190 <xsum@plt>
   4406c:	ldr	x8, [x19, #592]
   44070:	cmp	x0, x8
   44074:	b.ls	441bc <vasnprintf@@Base+0x2008>  // b.plast
   44078:	ldr	x8, [x19, #592]
   4407c:	cmp	x8, #0x0
   44080:	cset	w9, ls  // ls = plast
   44084:	tbnz	w9, #0, 440c0 <vasnprintf@@Base+0x1f0c>
   44088:	ldr	x8, [x19, #592]
   4408c:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
   44090:	cmp	x8, x9
   44094:	b.hi	440ac <vasnprintf@@Base+0x1ef8>  // b.pmore
   44098:	ldr	x8, [x19, #592]
   4409c:	mov	x9, #0x2                   	// #2
   440a0:	mul	x8, x8, x9
   440a4:	str	x8, [x19, #16]
   440a8:	b	440b4 <vasnprintf@@Base+0x1f00>
   440ac:	mov	x8, #0xffffffffffffffff    	// #-1
   440b0:	str	x8, [x19, #16]
   440b4:	ldr	x8, [x19, #16]
   440b8:	str	x8, [x19, #8]
   440bc:	b	440c8 <vasnprintf@@Base+0x1f14>
   440c0:	mov	x8, #0xc                   	// #12
   440c4:	str	x8, [x19, #8]
   440c8:	ldr	x8, [x19, #8]
   440cc:	str	x8, [x19, #592]
   440d0:	ldr	x0, [x19, #584]
   440d4:	mov	x1, #0x1                   	// #1
   440d8:	bl	b190 <xsum@plt>
   440dc:	ldr	x8, [x19, #592]
   440e0:	cmp	x0, x8
   440e4:	b.ls	440f8 <vasnprintf@@Base+0x1f44>  // b.plast
   440e8:	ldr	x0, [x19, #584]
   440ec:	mov	x1, #0x1                   	// #1
   440f0:	bl	b190 <xsum@plt>
   440f4:	str	x0, [x19, #592]
   440f8:	ldr	x8, [x19, #592]
   440fc:	mov	x9, #0xffffffffffffffff    	// #-1
   44100:	cmp	x8, x9
   44104:	b.hi	4411c <vasnprintf@@Base+0x1f68>  // b.pmore
   44108:	ldr	x8, [x19, #592]
   4410c:	mov	x9, #0x1                   	// #1
   44110:	mul	x8, x8, x9
   44114:	str	x8, [x19]
   44118:	b	44124 <vasnprintf@@Base+0x1f70>
   4411c:	mov	x8, #0xffffffffffffffff    	// #-1
   44120:	str	x8, [x19]
   44124:	ldr	x8, [x19]
   44128:	str	x8, [x19, #280]
   4412c:	ldr	x8, [x19, #280]
   44130:	mov	x9, #0xffffffffffffffff    	// #-1
   44134:	cmp	x8, x9
   44138:	b.ne	44140 <vasnprintf@@Base+0x1f8c>  // b.any
   4413c:	b	44310 <vasnprintf@@Base+0x215c>
   44140:	ldr	x8, [x19, #600]
   44144:	ldur	x9, [x29, #-16]
   44148:	cmp	x8, x9
   4414c:	b.eq	44158 <vasnprintf@@Base+0x1fa4>  // b.none
   44150:	ldr	x8, [x19, #600]
   44154:	cbnz	x8, 44168 <vasnprintf@@Base+0x1fb4>
   44158:	ldr	x0, [x19, #280]
   4415c:	bl	af10 <malloc@plt>
   44160:	str	x0, [x19, #272]
   44164:	b	44178 <vasnprintf@@Base+0x1fc4>
   44168:	ldr	x0, [x19, #600]
   4416c:	ldr	x1, [x19, #280]
   44170:	bl	af40 <realloc@plt>
   44174:	str	x0, [x19, #272]
   44178:	ldr	x8, [x19, #272]
   4417c:	cbnz	x8, 44184 <vasnprintf@@Base+0x1fd0>
   44180:	b	44310 <vasnprintf@@Base+0x215c>
   44184:	ldr	x8, [x19, #600]
   44188:	ldur	x9, [x29, #-16]
   4418c:	cmp	x8, x9
   44190:	b.ne	441b4 <vasnprintf@@Base+0x2000>  // b.any
   44194:	ldr	x8, [x19, #584]
   44198:	cmp	x8, #0x0
   4419c:	cset	w9, ls  // ls = plast
   441a0:	tbnz	w9, #0, 441b4 <vasnprintf@@Base+0x2000>
   441a4:	ldr	x0, [x19, #272]
   441a8:	ldr	x1, [x19, #600]
   441ac:	ldr	x2, [x19, #584]
   441b0:	bl	af30 <memcpy@plt>
   441b4:	ldr	x8, [x19, #272]
   441b8:	str	x8, [x19, #600]
   441bc:	ldr	x8, [x19, #600]
   441c0:	ldr	x9, [x19, #584]
   441c4:	add	x8, x8, x9
   441c8:	mov	w10, #0x0                   	// #0
   441cc:	strb	w10, [x8]
   441d0:	ldr	x8, [x19, #600]
   441d4:	ldur	x9, [x29, #-16]
   441d8:	cmp	x8, x9
   441dc:	b.eq	44220 <vasnprintf@@Base+0x206c>  // b.none
   441e0:	ldr	x8, [x19, #584]
   441e4:	add	x8, x8, #0x1
   441e8:	ldr	x9, [x19, #592]
   441ec:	cmp	x8, x9
   441f0:	b.cs	44220 <vasnprintf@@Base+0x206c>  // b.hs, b.nlast
   441f4:	ldr	x0, [x19, #600]
   441f8:	ldr	x8, [x19, #584]
   441fc:	mov	x9, #0x1                   	// #1
   44200:	add	x8, x8, #0x1
   44204:	mul	x1, x8, x9
   44208:	bl	af40 <realloc@plt>
   4420c:	str	x0, [x19, #264]
   44210:	ldr	x8, [x19, #264]
   44214:	cbz	x8, 44220 <vasnprintf@@Base+0x206c>
   44218:	ldr	x8, [x19, #264]
   4421c:	str	x8, [x19, #600]
   44220:	ldr	x8, [x19, #632]
   44224:	cbz	x8, 44230 <vasnprintf@@Base+0x207c>
   44228:	ldr	x0, [x19, #632]
   4422c:	bl	a930 <free@plt>
   44230:	add	x8, x19, #0x3a8
   44234:	ldr	x9, [x8, #8]
   44238:	add	x8, x8, #0x20
   4423c:	cmp	x9, x8
   44240:	b.eq	44250 <vasnprintf@@Base+0x209c>  // b.none
   44244:	add	x8, x19, #0x3a8
   44248:	ldr	x0, [x8, #8]
   4424c:	bl	a930 <free@plt>
   44250:	add	x8, x19, #0x2b0
   44254:	ldr	x9, [x8, #8]
   44258:	add	x8, x8, #0x10
   4425c:	cmp	x9, x8
   44260:	b.eq	44270 <vasnprintf@@Base+0x20bc>  // b.none
   44264:	add	x8, x19, #0x2b0
   44268:	ldr	x0, [x8, #8]
   4426c:	bl	a930 <free@plt>
   44270:	ldr	x8, [x19, #584]
   44274:	ldur	x9, [x29, #-24]
   44278:	str	x8, [x9]
   4427c:	ldr	x8, [x19, #600]
   44280:	stur	x8, [x29, #-8]
   44284:	b	44394 <vasnprintf@@Base+0x21e0>
   44288:	ldr	x8, [x19, #600]
   4428c:	ldur	x9, [x29, #-16]
   44290:	cmp	x8, x9
   44294:	b.eq	442a8 <vasnprintf@@Base+0x20f4>  // b.none
   44298:	ldr	x8, [x19, #600]
   4429c:	cbz	x8, 442a8 <vasnprintf@@Base+0x20f4>
   442a0:	ldr	x0, [x19, #600]
   442a4:	bl	a930 <free@plt>
   442a8:	ldr	x8, [x19, #632]
   442ac:	cbz	x8, 442b8 <vasnprintf@@Base+0x2104>
   442b0:	ldr	x0, [x19, #632]
   442b4:	bl	a930 <free@plt>
   442b8:	add	x8, x19, #0x3a8
   442bc:	ldr	x9, [x8, #8]
   442c0:	add	x8, x8, #0x20
   442c4:	cmp	x9, x8
   442c8:	b.eq	442d8 <vasnprintf@@Base+0x2124>  // b.none
   442cc:	add	x8, x19, #0x3a8
   442d0:	ldr	x0, [x8, #8]
   442d4:	bl	a930 <free@plt>
   442d8:	add	x8, x19, #0x2b0
   442dc:	ldr	x9, [x8, #8]
   442e0:	add	x8, x8, #0x10
   442e4:	cmp	x9, x8
   442e8:	b.eq	442f8 <vasnprintf@@Base+0x2144>  // b.none
   442ec:	add	x8, x19, #0x2b0
   442f0:	ldr	x0, [x8, #8]
   442f4:	bl	a930 <free@plt>
   442f8:	bl	aa20 <__errno_location@plt>
   442fc:	mov	w8, #0x4b                  	// #75
   44300:	str	w8, [x0]
   44304:	mov	x9, xzr
   44308:	stur	x9, [x29, #-8]
   4430c:	b	44394 <vasnprintf@@Base+0x21e0>
   44310:	ldr	x8, [x19, #600]
   44314:	ldur	x9, [x29, #-16]
   44318:	cmp	x8, x9
   4431c:	b.eq	44330 <vasnprintf@@Base+0x217c>  // b.none
   44320:	ldr	x8, [x19, #600]
   44324:	cbz	x8, 44330 <vasnprintf@@Base+0x217c>
   44328:	ldr	x0, [x19, #600]
   4432c:	bl	a930 <free@plt>
   44330:	ldr	x8, [x19, #632]
   44334:	cbz	x8, 44340 <vasnprintf@@Base+0x218c>
   44338:	ldr	x0, [x19, #632]
   4433c:	bl	a930 <free@plt>
   44340:	add	x8, x19, #0x3a8
   44344:	ldr	x9, [x8, #8]
   44348:	add	x8, x8, #0x20
   4434c:	cmp	x9, x8
   44350:	b.eq	44360 <vasnprintf@@Base+0x21ac>  // b.none
   44354:	add	x8, x19, #0x3a8
   44358:	ldr	x0, [x8, #8]
   4435c:	bl	a930 <free@plt>
   44360:	add	x8, x19, #0x2b0
   44364:	ldr	x9, [x8, #8]
   44368:	add	x8, x8, #0x10
   4436c:	cmp	x9, x8
   44370:	b.eq	44380 <vasnprintf@@Base+0x21cc>  // b.none
   44374:	add	x8, x19, #0x2b0
   44378:	ldr	x0, [x8, #8]
   4437c:	bl	a930 <free@plt>
   44380:	bl	aa20 <__errno_location@plt>
   44384:	mov	w8, #0xc                   	// #12
   44388:	str	w8, [x0]
   4438c:	mov	x9, xzr
   44390:	stur	x9, [x29, #-8]
   44394:	ldur	x0, [x29, #-8]
   44398:	mov	sp, x29
   4439c:	ldp	x28, x19, [sp, #16]
   443a0:	ldp	x29, x30, [sp], #32
   443a4:	ret
   443a8:	adrp	x2, 60000 <__gmon_start__>
   443ac:	mov	x1, #0x0                   	// #0
   443b0:	ldr	x2, [x2, #2120]
   443b4:	b	b900 <__cxa_atexit@plt>
   443b8:	mov	x2, x1
   443bc:	mov	x1, x0
   443c0:	mov	w0, #0x0                   	// #0
   443c4:	b	b910 <__xstat@plt>
   443c8:	mov	x2, x1
   443cc:	mov	w1, w0
   443d0:	mov	w0, #0x0                   	// #0
   443d4:	b	b920 <__fxstat@plt>
   443d8:	mov	x2, x1
   443dc:	mov	x1, x0
   443e0:	mov	w0, #0x0                   	// #0
   443e4:	b	b930 <__lxstat@plt>
   443e8:	mov	x4, x1
   443ec:	mov	x5, x2
   443f0:	mov	w1, w0
   443f4:	mov	x2, x4
   443f8:	mov	w0, #0x0                   	// #0
   443fc:	mov	w4, w3
   44400:	mov	x3, x5
   44404:	b	b940 <__fxstatat@plt>

Disassembly of section .fini:

0000000000044408 <.fini>:
   44408:	stp	x29, x30, [sp, #-16]!
   4440c:	mov	x29, sp
   44410:	ldp	x29, x30, [sp], #16
   44414:	ret
