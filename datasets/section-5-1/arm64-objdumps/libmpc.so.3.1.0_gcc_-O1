
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libmpc.so.3.1.0_gcc_-O1:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000004958 <.init>:
    4958:	stp	x29, x30, [sp, #-16]!
    495c:	mov	x29, sp
    4960:	bl	55d0 <mpfr_get_emin_min@plt+0x10>
    4964:	ldp	x29, x30, [sp], #16
    4968:	ret

Disassembly of section .plt:

0000000000004970 <mpfr_set_underflow@plt-0x20>:
    4970:	stp	x16, x30, [sp, #-16]!
    4974:	adrp	x16, 27000 <mpc_ui_ui_sub@@Base+0x13228>
    4978:	ldr	x17, [x16, #4088]
    497c:	add	x16, x16, #0xff8
    4980:	br	x17
    4984:	nop
    4988:	nop
    498c:	nop

0000000000004990 <mpfr_set_underflow@plt>:
    4990:	adrp	x16, 28000 <mpfr_set_underflow>
    4994:	ldr	x17, [x16]
    4998:	add	x16, x16, #0x0
    499c:	br	x17

00000000000049a0 <__gmpz_get_si@plt>:
    49a0:	adrp	x16, 28000 <mpfr_set_underflow>
    49a4:	ldr	x17, [x16, #8]
    49a8:	add	x16, x16, #0x8
    49ac:	br	x17

00000000000049b0 <mpfr_set_ld@plt>:
    49b0:	adrp	x16, 28000 <mpfr_set_underflow>
    49b4:	ldr	x17, [x16, #16]
    49b8:	add	x16, x16, #0x10
    49bc:	br	x17

00000000000049c0 <mpfr_mul_ui@plt>:
    49c0:	adrp	x16, 28000 <mpfr_set_underflow>
    49c4:	ldr	x17, [x16, #24]
    49c8:	add	x16, x16, #0x18
    49cc:	br	x17

00000000000049d0 <mpfr_mul_q@plt>:
    49d0:	adrp	x16, 28000 <mpfr_set_underflow>
    49d4:	ldr	x17, [x16, #32]
    49d8:	add	x16, x16, #0x20
    49dc:	br	x17

00000000000049e0 <mpfr_set_si_2exp@plt>:
    49e0:	adrp	x16, 28000 <mpfr_set_underflow>
    49e4:	ldr	x17, [x16, #40]
    49e8:	add	x16, x16, #0x28
    49ec:	br	x17

00000000000049f0 <__gmpz_scan1@plt>:
    49f0:	adrp	x16, 28000 <mpfr_set_underflow>
    49f4:	ldr	x17, [x16, #48]
    49f8:	add	x16, x16, #0x30
    49fc:	br	x17

0000000000004a00 <strlen@plt>:
    4a00:	adrp	x16, 28000 <mpfr_set_underflow>
    4a04:	ldr	x17, [x16, #56]
    4a08:	add	x16, x16, #0x38
    4a0c:	br	x17

0000000000004a10 <mpc_clear@plt>:
    4a10:	adrp	x16, 28000 <mpfr_set_underflow>
    4a14:	ldr	x17, [x16, #64]
    4a18:	add	x16, x16, #0x40
    4a1c:	br	x17

0000000000004a20 <mpfr_cosh@plt>:
    4a20:	adrp	x16, 28000 <mpfr_set_underflow>
    4a24:	ldr	x17, [x16, #72]
    4a28:	add	x16, x16, #0x48
    4a2c:	br	x17

0000000000004a30 <mpfr_tanh@plt>:
    4a30:	adrp	x16, 28000 <mpfr_set_underflow>
    4a34:	ldr	x17, [x16, #80]
    4a38:	add	x16, x16, #0x50
    4a3c:	br	x17

0000000000004a40 <mpfr_set_nan@plt>:
    4a40:	adrp	x16, 28000 <mpfr_set_underflow>
    4a44:	ldr	x17, [x16, #88]
    4a48:	add	x16, x16, #0x58
    4a4c:	br	x17

0000000000004a50 <mpfr_clear_overflow@plt>:
    4a50:	adrp	x16, 28000 <mpfr_set_underflow>
    4a54:	ldr	x17, [x16, #96]
    4a58:	add	x16, x16, #0x60
    4a5c:	br	x17

0000000000004a60 <mpfr_sub@plt>:
    4a60:	adrp	x16, 28000 <mpfr_set_underflow>
    4a64:	ldr	x17, [x16, #104]
    4a68:	add	x16, x16, #0x68
    4a6c:	br	x17

0000000000004a70 <mpfr_mul_2si@plt>:
    4a70:	adrp	x16, 28000 <mpfr_set_underflow>
    4a74:	ldr	x17, [x16, #112]
    4a78:	add	x16, x16, #0x70
    4a7c:	br	x17

0000000000004a80 <mpfr_const_pi@plt>:
    4a80:	adrp	x16, 28000 <mpfr_set_underflow>
    4a84:	ldr	x17, [x16, #120]
    4a88:	add	x16, x16, #0x78
    4a8c:	br	x17

0000000000004a90 <mpfr_fmms@plt>:
    4a90:	adrp	x16, 28000 <mpfr_set_underflow>
    4a94:	ldr	x17, [x16, #128]
    4a98:	add	x16, x16, #0x80
    4a9c:	br	x17

0000000000004aa0 <mpfr_init@plt>:
    4aa0:	adrp	x16, 28000 <mpfr_set_underflow>
    4aa4:	ldr	x17, [x16, #136]
    4aa8:	add	x16, x16, #0x88
    4aac:	br	x17

0000000000004ab0 <mpfr_tan@plt>:
    4ab0:	adrp	x16, 28000 <mpfr_set_underflow>
    4ab4:	ldr	x17, [x16, #144]
    4ab8:	add	x16, x16, #0x90
    4abc:	br	x17

0000000000004ac0 <mpfr_strtofr@plt>:
    4ac0:	adrp	x16, 28000 <mpfr_set_underflow>
    4ac4:	ldr	x17, [x16, #152]
    4ac8:	add	x16, x16, #0x98
    4acc:	br	x17

0000000000004ad0 <__gmpz_sub_ui@plt>:
    4ad0:	adrp	x16, 28000 <mpfr_set_underflow>
    4ad4:	ldr	x17, [x16, #160]
    4ad8:	add	x16, x16, #0xa0
    4adc:	br	x17

0000000000004ae0 <__gmp_get_memory_functions@plt>:
    4ae0:	adrp	x16, 28000 <mpfr_set_underflow>
    4ae4:	ldr	x17, [x16, #168]
    4ae8:	add	x16, x16, #0xa8
    4aec:	br	x17

0000000000004af0 <__gmpz_sqrt@plt>:
    4af0:	adrp	x16, 28000 <mpfr_set_underflow>
    4af4:	ldr	x17, [x16, #176]
    4af8:	add	x16, x16, #0xb0
    4afc:	br	x17

0000000000004b00 <mpfr_set_erangeflag@plt>:
    4b00:	adrp	x16, 28000 <mpfr_set_underflow>
    4b04:	ldr	x17, [x16, #184]
    4b08:	add	x16, x16, #0xb8
    4b0c:	br	x17

0000000000004b10 <__gmpz_set_ui@plt>:
    4b10:	adrp	x16, 28000 <mpfr_set_underflow>
    4b14:	ldr	x17, [x16, #192]
    4b18:	add	x16, x16, #0xc0
    4b1c:	br	x17

0000000000004b20 <__cxa_finalize@plt>:
    4b20:	adrp	x16, 28000 <mpfr_set_underflow>
    4b24:	ldr	x17, [x16, #200]
    4b28:	add	x16, x16, #0xc8
    4b2c:	br	x17

0000000000004b30 <sprintf@plt>:
    4b30:	adrp	x16, 28000 <mpfr_set_underflow>
    4b34:	ldr	x17, [x16, #208]
    4b38:	add	x16, x16, #0xd0
    4b3c:	br	x17

0000000000004b40 <mpc_sqrt@plt>:
    4b40:	adrp	x16, 28000 <mpfr_set_underflow>
    4b44:	ldr	x17, [x16, #216]
    4b48:	add	x16, x16, #0xd8
    4b4c:	br	x17

0000000000004b50 <mpfr_get_d@plt>:
    4b50:	adrp	x16, 28000 <mpfr_set_underflow>
    4b54:	ldr	x17, [x16, #224]
    4b58:	add	x16, x16, #0xe0
    4b5c:	br	x17

0000000000004b60 <mpfr_set_f@plt>:
    4b60:	adrp	x16, 28000 <mpfr_set_underflow>
    4b64:	ldr	x17, [x16, #232]
    4b68:	add	x16, x16, #0xe8
    4b6c:	br	x17

0000000000004b70 <mpfr_mul@plt>:
    4b70:	adrp	x16, 28000 <mpfr_set_underflow>
    4b74:	ldr	x17, [x16, #240]
    4b78:	add	x16, x16, #0xf0
    4b7c:	br	x17

0000000000004b80 <mpfr_neg@plt>:
    4b80:	adrp	x16, 28000 <mpfr_set_underflow>
    4b84:	ldr	x17, [x16, #248]
    4b88:	add	x16, x16, #0xf8
    4b8c:	br	x17

0000000000004b90 <mpfr_pow@plt>:
    4b90:	adrp	x16, 28000 <mpfr_set_underflow>
    4b94:	ldr	x17, [x16, #256]
    4b98:	add	x16, x16, #0x100
    4b9c:	br	x17

0000000000004ba0 <fputc@plt>:
    4ba0:	adrp	x16, 28000 <mpfr_set_underflow>
    4ba4:	ldr	x17, [x16, #264]
    4ba8:	add	x16, x16, #0x108
    4bac:	br	x17

0000000000004bb0 <mpfr_nextbelow@plt>:
    4bb0:	adrp	x16, 28000 <mpfr_set_underflow>
    4bb4:	ldr	x17, [x16, #272]
    4bb8:	add	x16, x16, #0x110
    4bbc:	br	x17

0000000000004bc0 <__gmpz_sub@plt>:
    4bc0:	adrp	x16, 28000 <mpfr_set_underflow>
    4bc4:	ldr	x17, [x16, #280]
    4bc8:	add	x16, x16, #0x118
    4bcc:	br	x17

0000000000004bd0 <mpfr_get_z@plt>:
    4bd0:	adrp	x16, 28000 <mpfr_set_underflow>
    4bd4:	ldr	x17, [x16, #288]
    4bd8:	add	x16, x16, #0x120
    4bdc:	br	x17

0000000000004be0 <mpfr_sinh_cosh@plt>:
    4be0:	adrp	x16, 28000 <mpfr_set_underflow>
    4be4:	ldr	x17, [x16, #296]
    4be8:	add	x16, x16, #0x128
    4bec:	br	x17

0000000000004bf0 <mpc_alloc_str@plt>:
    4bf0:	adrp	x16, 28000 <mpfr_set_underflow>
    4bf4:	ldr	x17, [x16, #304]
    4bf8:	add	x16, x16, #0x130
    4bfc:	br	x17

0000000000004c00 <mpc_set_prec@plt>:
    4c00:	adrp	x16, 28000 <mpfr_set_underflow>
    4c04:	ldr	x17, [x16, #312]
    4c08:	add	x16, x16, #0x138
    4c0c:	br	x17

0000000000004c10 <mpfr_set_exp@plt>:
    4c10:	adrp	x16, 28000 <mpfr_set_underflow>
    4c14:	ldr	x17, [x16, #320]
    4c18:	add	x16, x16, #0x140
    4c1c:	br	x17

0000000000004c20 <mpc_tan@plt>:
    4c20:	adrp	x16, 28000 <mpfr_set_underflow>
    4c24:	ldr	x17, [x16, #328]
    4c28:	add	x16, x16, #0x148
    4c2c:	br	x17

0000000000004c30 <mpfr_set_d@plt>:
    4c30:	adrp	x16, 28000 <mpfr_set_underflow>
    4c34:	ldr	x17, [x16, #336]
    4c38:	add	x16, x16, #0x150
    4c3c:	br	x17

0000000000004c40 <__gmpz_divisible_2exp_p@plt>:
    4c40:	adrp	x16, 28000 <mpfr_set_underflow>
    4c44:	ldr	x17, [x16, #344]
    4c48:	add	x16, x16, #0x158
    4c4c:	br	x17

0000000000004c50 <__ctype_tolower_loc@plt>:
    4c50:	adrp	x16, 28000 <mpfr_set_underflow>
    4c54:	ldr	x17, [x16, #352]
    4c58:	add	x16, x16, #0x160
    4c5c:	br	x17

0000000000004c60 <__gmpz_fits_slong_p@plt>:
    4c60:	adrp	x16, 28000 <mpfr_set_underflow>
    4c64:	ldr	x17, [x16, #360]
    4c68:	add	x16, x16, #0x168
    4c6c:	br	x17

0000000000004c70 <localeconv@plt>:
    4c70:	adrp	x16, 28000 <mpfr_set_underflow>
    4c74:	ldr	x17, [x16, #368]
    4c78:	add	x16, x16, #0x170
    4c7c:	br	x17

0000000000004c80 <mpfr_set_prec@plt>:
    4c80:	adrp	x16, 28000 <mpfr_set_underflow>
    4c84:	ldr	x17, [x16, #376]
    4c88:	add	x16, x16, #0x178
    4c8c:	br	x17

0000000000004c90 <mpfr_fmma@plt>:
    4c90:	adrp	x16, 28000 <mpfr_set_underflow>
    4c94:	ldr	x17, [x16, #384]
    4c98:	add	x16, x16, #0x180
    4c9c:	br	x17

0000000000004ca0 <mpfr_atan2@plt>:
    4ca0:	adrp	x16, 28000 <mpfr_set_underflow>
    4ca4:	ldr	x17, [x16, #392]
    4ca8:	add	x16, x16, #0x188
    4cac:	br	x17

0000000000004cb0 <mpfr_cmp_ui_2exp@plt>:
    4cb0:	adrp	x16, 28000 <mpfr_set_underflow>
    4cb4:	ldr	x17, [x16, #400]
    4cb8:	add	x16, x16, #0x190
    4cbc:	br	x17

0000000000004cc0 <__gmpz_divexact@plt>:
    4cc0:	adrp	x16, 28000 <mpfr_set_underflow>
    4cc4:	ldr	x17, [x16, #408]
    4cc8:	add	x16, x16, #0x198
    4ccc:	br	x17

0000000000004cd0 <mpc_add@plt>:
    4cd0:	adrp	x16, 28000 <mpfr_set_underflow>
    4cd4:	ldr	x17, [x16, #416]
    4cd8:	add	x16, x16, #0x1a0
    4cdc:	br	x17

0000000000004ce0 <mpc_set_ui@plt>:
    4ce0:	adrp	x16, 28000 <mpfr_set_underflow>
    4ce4:	ldr	x17, [x16, #424]
    4ce8:	add	x16, x16, #0x1a8
    4cec:	br	x17

0000000000004cf0 <mpc_init2@plt>:
    4cf0:	adrp	x16, 28000 <mpfr_set_underflow>
    4cf4:	ldr	x17, [x16, #432]
    4cf8:	add	x16, x16, #0x1b0
    4cfc:	br	x17

0000000000004d00 <__gmpz_set@plt>:
    4d00:	adrp	x16, 28000 <mpfr_set_underflow>
    4d04:	ldr	x17, [x16, #440]
    4d08:	add	x16, x16, #0x1b8
    4d0c:	br	x17

0000000000004d10 <mpfr_set_zero@plt>:
    4d10:	adrp	x16, 28000 <mpfr_set_underflow>
    4d14:	ldr	x17, [x16, #448]
    4d18:	add	x16, x16, #0x1c0
    4d1c:	br	x17

0000000000004d20 <mpc_ceil_log2@plt>:
    4d20:	adrp	x16, 28000 <mpfr_set_underflow>
    4d24:	ldr	x17, [x16, #456]
    4d28:	add	x16, x16, #0x1c8
    4d2c:	br	x17

0000000000004d30 <__gmpz_tstbit@plt>:
    4d30:	adrp	x16, 28000 <mpfr_set_underflow>
    4d34:	ldr	x17, [x16, #464]
    4d38:	add	x16, x16, #0x1d0
    4d3c:	br	x17

0000000000004d40 <__gmpz_mul@plt>:
    4d40:	adrp	x16, 28000 <mpfr_set_underflow>
    4d44:	ldr	x17, [x16, #472]
    4d48:	add	x16, x16, #0x1d8
    4d4c:	br	x17

0000000000004d50 <mpc_set_ld_ld@plt>:
    4d50:	adrp	x16, 28000 <mpfr_set_underflow>
    4d54:	ldr	x17, [x16, #480]
    4d58:	add	x16, x16, #0x1e0
    4d5c:	br	x17

0000000000004d60 <mpfr_clear@plt>:
    4d60:	adrp	x16, 28000 <mpfr_set_underflow>
    4d64:	ldr	x17, [x16, #488]
    4d68:	add	x16, x16, #0x1e8
    4d6c:	br	x17

0000000000004d70 <__gmpfr_set_sj@plt>:
    4d70:	adrp	x16, 28000 <mpfr_set_underflow>
    4d74:	ldr	x17, [x16, #496]
    4d78:	add	x16, x16, #0x1f0
    4d7c:	br	x17

0000000000004d80 <mpfr_log@plt>:
    4d80:	adrp	x16, 28000 <mpfr_set_underflow>
    4d84:	ldr	x17, [x16, #504]
    4d88:	add	x16, x16, #0x1f8
    4d8c:	br	x17

0000000000004d90 <mpfr_atanh@plt>:
    4d90:	adrp	x16, 28000 <mpfr_set_underflow>
    4d94:	ldr	x17, [x16, #512]
    4d98:	add	x16, x16, #0x200
    4d9c:	br	x17

0000000000004da0 <__gmpz_swap@plt>:
    4da0:	adrp	x16, 28000 <mpfr_set_underflow>
    4da4:	ldr	x17, [x16, #520]
    4da8:	add	x16, x16, #0x208
    4dac:	br	x17

0000000000004db0 <mpc_log@plt>:
    4db0:	adrp	x16, 28000 <mpfr_set_underflow>
    4db4:	ldr	x17, [x16, #528]
    4db8:	add	x16, x16, #0x210
    4dbc:	br	x17

0000000000004dc0 <mpfr_asinh@plt>:
    4dc0:	adrp	x16, 28000 <mpfr_set_underflow>
    4dc4:	ldr	x17, [x16, #536]
    4dc8:	add	x16, x16, #0x218
    4dcc:	br	x17

0000000000004dd0 <mpc_fix_inf@plt>:
    4dd0:	adrp	x16, 28000 <mpfr_set_underflow>
    4dd4:	ldr	x17, [x16, #544]
    4dd8:	add	x16, x16, #0x220
    4ddc:	br	x17

0000000000004de0 <strcat@plt>:
    4de0:	adrp	x16, 28000 <mpfr_set_underflow>
    4de4:	ldr	x17, [x16, #552]
    4de8:	add	x16, x16, #0x228
    4dec:	br	x17

0000000000004df0 <mpc_pow_usi@plt>:
    4df0:	adrp	x16, 28000 <mpfr_set_underflow>
    4df4:	ldr	x17, [x16, #560]
    4df8:	add	x16, x16, #0x230
    4dfc:	br	x17

0000000000004e00 <mpfr_nextabove@plt>:
    4e00:	adrp	x16, 28000 <mpfr_set_underflow>
    4e04:	ldr	x17, [x16, #568]
    4e08:	add	x16, x16, #0x238
    4e0c:	br	x17

0000000000004e10 <__gmpz_fdiv_q_2exp@plt>:
    4e10:	adrp	x16, 28000 <mpfr_set_underflow>
    4e14:	ldr	x17, [x16, #576]
    4e18:	add	x16, x16, #0x240
    4e1c:	br	x17

0000000000004e20 <mpfr_clear_underflow@plt>:
    4e20:	adrp	x16, 28000 <mpfr_set_underflow>
    4e24:	ldr	x17, [x16, #584]
    4e28:	add	x16, x16, #0x248
    4e2c:	br	x17

0000000000004e30 <mpfr_integer_p@plt>:
    4e30:	adrp	x16, 28000 <mpfr_set_underflow>
    4e34:	ldr	x17, [x16, #592]
    4e38:	add	x16, x16, #0x250
    4e3c:	br	x17

0000000000004e40 <mpfr_asin@plt>:
    4e40:	adrp	x16, 28000 <mpfr_set_underflow>
    4e44:	ldr	x17, [x16, #600]
    4e48:	add	x16, x16, #0x258
    4e4c:	br	x17

0000000000004e50 <mpc_set_ld@plt>:
    4e50:	adrp	x16, 28000 <mpfr_set_underflow>
    4e54:	ldr	x17, [x16, #608]
    4e58:	add	x16, x16, #0x260
    4e5c:	br	x17

0000000000004e60 <mpfr_add@plt>:
    4e60:	adrp	x16, 28000 <mpfr_set_underflow>
    4e64:	ldr	x17, [x16, #616]
    4e68:	add	x16, x16, #0x268
    4e6c:	br	x17

0000000000004e70 <mpfr_clears@plt>:
    4e70:	adrp	x16, 28000 <mpfr_set_underflow>
    4e74:	ldr	x17, [x16, #624]
    4e78:	add	x16, x16, #0x270
    4e7c:	br	x17

0000000000004e80 <mpfr_set@plt>:
    4e80:	adrp	x16, 28000 <mpfr_set_underflow>
    4e84:	ldr	x17, [x16, #632]
    4e88:	add	x16, x16, #0x278
    4e8c:	br	x17

0000000000004e90 <__gmpz_mul_2exp@plt>:
    4e90:	adrp	x16, 28000 <mpfr_set_underflow>
    4e94:	ldr	x17, [x16, #640]
    4e98:	add	x16, x16, #0x280
    4e9c:	br	x17

0000000000004ea0 <mpc_norm@plt>:
    4ea0:	adrp	x16, 28000 <mpfr_set_underflow>
    4ea4:	ldr	x17, [x16, #648]
    4ea8:	add	x16, x16, #0x288
    4eac:	br	x17

0000000000004eb0 <mpc_mul_naive@plt>:
    4eb0:	adrp	x16, 28000 <mpfr_set_underflow>
    4eb4:	ldr	x17, [x16, #656]
    4eb8:	add	x16, x16, #0x290
    4ebc:	br	x17

0000000000004ec0 <mpfr_set_z@plt>:
    4ec0:	adrp	x16, 28000 <mpfr_set_underflow>
    4ec4:	ldr	x17, [x16, #664]
    4ec8:	add	x16, x16, #0x298
    4ecc:	br	x17

0000000000004ed0 <mpc_mul@plt>:
    4ed0:	adrp	x16, 28000 <mpfr_set_underflow>
    4ed4:	ldr	x17, [x16, #672]
    4ed8:	add	x16, x16, #0x2a0
    4edc:	br	x17

0000000000004ee0 <mpfr_add_ui@plt>:
    4ee0:	adrp	x16, 28000 <mpfr_set_underflow>
    4ee4:	ldr	x17, [x16, #680]
    4ee8:	add	x16, x16, #0x2a8
    4eec:	br	x17

0000000000004ef0 <mpc_set_nan@plt>:
    4ef0:	adrp	x16, 28000 <mpfr_set_underflow>
    4ef4:	ldr	x17, [x16, #688]
    4ef8:	add	x16, x16, #0x2b0
    4efc:	br	x17

0000000000004f00 <mpc_strtoc@plt>:
    4f00:	adrp	x16, 28000 <mpfr_set_underflow>
    4f04:	ldr	x17, [x16, #696]
    4f08:	add	x16, x16, #0x2b8
    4f0c:	br	x17

0000000000004f10 <__gmpz_addmul@plt>:
    4f10:	adrp	x16, 28000 <mpfr_set_underflow>
    4f14:	ldr	x17, [x16, #704]
    4f18:	add	x16, x16, #0x2c0
    4f1c:	br	x17

0000000000004f20 <getc@plt>:
    4f20:	adrp	x16, 28000 <mpfr_set_underflow>
    4f24:	ldr	x17, [x16, #712]
    4f28:	add	x16, x16, #0x2c8
    4f2c:	br	x17

0000000000004f30 <mpc_sqr@plt>:
    4f30:	adrp	x16, 28000 <mpfr_set_underflow>
    4f34:	ldr	x17, [x16, #720]
    4f38:	add	x16, x16, #0x2d0
    4f3c:	br	x17

0000000000004f40 <mpfr_mul_2ui@plt>:
    4f40:	adrp	x16, 28000 <mpfr_set_underflow>
    4f44:	ldr	x17, [x16, #728]
    4f48:	add	x16, x16, #0x2d8
    4f4c:	br	x17

0000000000004f50 <mpc_sin@plt>:
    4f50:	adrp	x16, 28000 <mpfr_set_underflow>
    4f54:	ldr	x17, [x16, #736]
    4f58:	add	x16, x16, #0x2e0
    4f5c:	br	x17

0000000000004f60 <mpc_conj@plt>:
    4f60:	adrp	x16, 28000 <mpfr_set_underflow>
    4f64:	ldr	x17, [x16, #744]
    4f68:	add	x16, x16, #0x2e8
    4f6c:	br	x17

0000000000004f70 <mpfr_ui_div@plt>:
    4f70:	adrp	x16, 28000 <mpfr_set_underflow>
    4f74:	ldr	x17, [x16, #752]
    4f78:	add	x16, x16, #0x2f0
    4f7c:	br	x17

0000000000004f80 <mpfr_sinh@plt>:
    4f80:	adrp	x16, 28000 <mpfr_set_underflow>
    4f84:	ldr	x17, [x16, #760]
    4f88:	add	x16, x16, #0x2f8
    4f8c:	br	x17

0000000000004f90 <mpc_set_d_d@plt>:
    4f90:	adrp	x16, 28000 <mpfr_set_underflow>
    4f94:	ldr	x17, [x16, #768]
    4f98:	add	x16, x16, #0x300
    4f9c:	br	x17

0000000000004fa0 <__gmpz_add_ui@plt>:
    4fa0:	adrp	x16, 28000 <mpfr_set_underflow>
    4fa4:	ldr	x17, [x16, #776]
    4fa8:	add	x16, x16, #0x308
    4fac:	br	x17

0000000000004fb0 <__gmpq_clear@plt>:
    4fb0:	adrp	x16, 28000 <mpfr_set_underflow>
    4fb4:	ldr	x17, [x16, #784]
    4fb8:	add	x16, x16, #0x310
    4fbc:	br	x17

0000000000004fc0 <__gmon_start__@plt>:
    4fc0:	adrp	x16, 28000 <mpfr_set_underflow>
    4fc4:	ldr	x17, [x16, #792]
    4fc8:	add	x16, x16, #0x318
    4fcc:	br	x17

0000000000004fd0 <mpfr_acos@plt>:
    4fd0:	adrp	x16, 28000 <mpfr_set_underflow>
    4fd4:	ldr	x17, [x16, #800]
    4fd8:	add	x16, x16, #0x320
    4fdc:	br	x17

0000000000004fe0 <mpfr_cmp_si_2exp@plt>:
    4fe0:	adrp	x16, 28000 <mpfr_set_underflow>
    4fe4:	ldr	x17, [x16, #808]
    4fe8:	add	x16, x16, #0x328
    4fec:	br	x17

0000000000004ff0 <mpc_free_str@plt>:
    4ff0:	adrp	x16, 28000 <mpfr_set_underflow>
    4ff4:	ldr	x17, [x16, #816]
    4ff8:	add	x16, x16, #0x330
    4ffc:	br	x17

0000000000005000 <abort@plt>:
    5000:	adrp	x16, 28000 <mpfr_set_underflow>
    5004:	ldr	x17, [x16, #824]
    5008:	add	x16, x16, #0x338
    500c:	br	x17

0000000000005010 <mpfr_sqr@plt>:
    5010:	adrp	x16, 28000 <mpfr_set_underflow>
    5014:	ldr	x17, [x16, #832]
    5018:	add	x16, x16, #0x340
    501c:	br	x17

0000000000005020 <mpc_set_si@plt>:
    5020:	adrp	x16, 28000 <mpfr_set_underflow>
    5024:	ldr	x17, [x16, #840]
    5028:	add	x16, x16, #0x348
    502c:	br	x17

0000000000005030 <mpfr_div_2si@plt>:
    5030:	adrp	x16, 28000 <mpfr_set_underflow>
    5034:	ldr	x17, [x16, #848]
    5038:	add	x16, x16, #0x350
    503c:	br	x17

0000000000005040 <mpc_set_ui_ui@plt>:
    5040:	adrp	x16, 28000 <mpfr_set_underflow>
    5044:	ldr	x17, [x16, #856]
    5048:	add	x16, x16, #0x358
    504c:	br	x17

0000000000005050 <mpfr_cos@plt>:
    5050:	adrp	x16, 28000 <mpfr_set_underflow>
    5054:	ldr	x17, [x16, #864]
    5058:	add	x16, x16, #0x360
    505c:	br	x17

0000000000005060 <mpfr_get_emin@plt>:
    5060:	adrp	x16, 28000 <mpfr_set_underflow>
    5064:	ldr	x17, [x16, #872]
    5068:	add	x16, x16, #0x368
    506c:	br	x17

0000000000005070 <mpc_acos@plt>:
    5070:	adrp	x16, 28000 <mpfr_set_underflow>
    5074:	ldr	x17, [x16, #880]
    5078:	add	x16, x16, #0x370
    507c:	br	x17

0000000000005080 <mpfr_sin@plt>:
    5080:	adrp	x16, 28000 <mpfr_set_underflow>
    5084:	ldr	x17, [x16, #888]
    5088:	add	x16, x16, #0x378
    508c:	br	x17

0000000000005090 <mpfr_swap@plt>:
    5090:	adrp	x16, 28000 <mpfr_set_underflow>
    5094:	ldr	x17, [x16, #896]
    5098:	add	x16, x16, #0x380
    509c:	br	x17

00000000000050a0 <mpc_set_z@plt>:
    50a0:	adrp	x16, 28000 <mpfr_set_underflow>
    50a4:	ldr	x17, [x16, #904]
    50a8:	add	x16, x16, #0x388
    50ac:	br	x17

00000000000050b0 <__gmpz_ui_pow_ui@plt>:
    50b0:	adrp	x16, 28000 <mpfr_set_underflow>
    50b4:	ldr	x17, [x16, #912]
    50b8:	add	x16, x16, #0x390
    50bc:	br	x17

00000000000050c0 <mpfr_get_str@plt>:
    50c0:	adrp	x16, 28000 <mpfr_set_underflow>
    50c4:	ldr	x17, [x16, #920]
    50c8:	add	x16, x16, #0x398
    50cc:	br	x17

00000000000050d0 <mpc_fix_zero@plt>:
    50d0:	adrp	x16, 28000 <mpfr_set_underflow>
    50d4:	ldr	x17, [x16, #928]
    50d8:	add	x16, x16, #0x3a0
    50dc:	br	x17

00000000000050e0 <mpfr_acosh@plt>:
    50e0:	adrp	x16, 28000 <mpfr_set_underflow>
    50e4:	ldr	x17, [x16, #936]
    50e8:	add	x16, x16, #0x3a8
    50ec:	br	x17

00000000000050f0 <mpfr_sub_ui@plt>:
    50f0:	adrp	x16, 28000 <mpfr_set_underflow>
    50f4:	ldr	x17, [x16, #944]
    50f8:	add	x16, x16, #0x3b0
    50fc:	br	x17

0000000000005100 <__gmpq_set_ui@plt>:
    5100:	adrp	x16, 28000 <mpfr_set_underflow>
    5104:	ldr	x17, [x16, #952]
    5108:	add	x16, x16, #0x3b8
    510c:	br	x17

0000000000005110 <mpfr_get_ld@plt>:
    5110:	adrp	x16, 28000 <mpfr_set_underflow>
    5114:	ldr	x17, [x16, #960]
    5118:	add	x16, x16, #0x3c0
    511c:	br	x17

0000000000005120 <mpfr_set_inf@plt>:
    5120:	adrp	x16, 28000 <mpfr_set_underflow>
    5124:	ldr	x17, [x16, #968]
    5128:	add	x16, x16, #0x3c8
    512c:	br	x17

0000000000005130 <mpfr_set_ui_2exp@plt>:
    5130:	adrp	x16, 28000 <mpfr_set_underflow>
    5134:	ldr	x17, [x16, #976]
    5138:	add	x16, x16, #0x3d0
    513c:	br	x17

0000000000005140 <mpc_sin_cos@plt>:
    5140:	adrp	x16, 28000 <mpfr_set_underflow>
    5144:	ldr	x17, [x16, #984]
    5148:	add	x16, x16, #0x3d8
    514c:	br	x17

0000000000005150 <mpfr_div@plt>:
    5150:	adrp	x16, 28000 <mpfr_set_underflow>
    5154:	ldr	x17, [x16, #992]
    5158:	add	x16, x16, #0x3e0
    515c:	br	x17

0000000000005160 <mpc_mul_fr@plt>:
    5160:	adrp	x16, 28000 <mpfr_set_underflow>
    5164:	ldr	x17, [x16, #1000]
    5168:	add	x16, x16, #0x3e8
    516c:	br	x17

0000000000005170 <__ctype_b_loc@plt>:
    5170:	adrp	x16, 28000 <mpfr_set_underflow>
    5174:	ldr	x17, [x16, #1008]
    5178:	add	x16, x16, #0x3f0
    517c:	br	x17

0000000000005180 <__gmpz_clear@plt>:
    5180:	adrp	x16, 28000 <mpfr_set_underflow>
    5184:	ldr	x17, [x16, #1016]
    5188:	add	x16, x16, #0x3f8
    518c:	br	x17

0000000000005190 <__gmpfr_out_str@plt>:
    5190:	adrp	x16, 28000 <mpfr_set_underflow>
    5194:	ldr	x17, [x16, #1024]
    5198:	add	x16, x16, #0x400
    519c:	br	x17

00000000000051a0 <mpc_abs@plt>:
    51a0:	adrp	x16, 28000 <mpfr_set_underflow>
    51a4:	ldr	x17, [x16, #1032]
    51a8:	add	x16, x16, #0x408
    51ac:	br	x17

00000000000051b0 <mpfr_atan@plt>:
    51b0:	adrp	x16, 28000 <mpfr_set_underflow>
    51b4:	ldr	x17, [x16, #1040]
    51b8:	add	x16, x16, #0x410
    51bc:	br	x17

00000000000051c0 <mpfr_nexttoward@plt>:
    51c0:	adrp	x16, 28000 <mpfr_set_underflow>
    51c4:	ldr	x17, [x16, #1048]
    51c8:	add	x16, x16, #0x418
    51cc:	br	x17

00000000000051d0 <mpfr_set4@plt>:
    51d0:	adrp	x16, 28000 <mpfr_set_underflow>
    51d4:	ldr	x17, [x16, #1056]
    51d8:	add	x16, x16, #0x420
    51dc:	br	x17

00000000000051e0 <mpfr_log1p@plt>:
    51e0:	adrp	x16, 28000 <mpfr_set_underflow>
    51e4:	ldr	x17, [x16, #1064]
    51e8:	add	x16, x16, #0x428
    51ec:	br	x17

00000000000051f0 <mpfr_sgn@plt>:
    51f0:	adrp	x16, 28000 <mpfr_set_underflow>
    51f4:	ldr	x17, [x16, #1072]
    51f8:	add	x16, x16, #0x430
    51fc:	br	x17

0000000000005200 <mpfr_get_emax@plt>:
    5200:	adrp	x16, 28000 <mpfr_set_underflow>
    5204:	ldr	x17, [x16, #1080]
    5208:	add	x16, x16, #0x438
    520c:	br	x17

0000000000005210 <ungetc@plt>:
    5210:	adrp	x16, 28000 <mpfr_set_underflow>
    5214:	ldr	x17, [x16, #1088]
    5218:	add	x16, x16, #0x440
    521c:	br	x17

0000000000005220 <__gmpz_tdiv_q_2exp@plt>:
    5220:	adrp	x16, 28000 <mpfr_set_underflow>
    5224:	ldr	x17, [x16, #1096]
    5228:	add	x16, x16, #0x448
    522c:	br	x17

0000000000005230 <mpfr_exp@plt>:
    5230:	adrp	x16, 28000 <mpfr_set_underflow>
    5234:	ldr	x17, [x16, #1104]
    5238:	add	x16, x16, #0x450
    523c:	br	x17

0000000000005240 <mpc_pow@plt>:
    5240:	adrp	x16, 28000 <mpfr_set_underflow>
    5244:	ldr	x17, [x16, #1112]
    5248:	add	x16, x16, #0x458
    524c:	br	x17

0000000000005250 <mpc_div@plt>:
    5250:	adrp	x16, 28000 <mpfr_set_underflow>
    5254:	ldr	x17, [x16, #1120]
    5258:	add	x16, x16, #0x460
    525c:	br	x17

0000000000005260 <mpfr_add_si@plt>:
    5260:	adrp	x16, 28000 <mpfr_set_underflow>
    5264:	ldr	x17, [x16, #1128]
    5268:	add	x16, x16, #0x468
    526c:	br	x17

0000000000005270 <mpfr_set_si@plt>:
    5270:	adrp	x16, 28000 <mpfr_set_underflow>
    5274:	ldr	x17, [x16, #1136]
    5278:	add	x16, x16, #0x470
    527c:	br	x17

0000000000005280 <mpfr_sqrt_ui@plt>:
    5280:	adrp	x16, 28000 <mpfr_set_underflow>
    5284:	ldr	x17, [x16, #1144]
    5288:	add	x16, x16, #0x478
    528c:	br	x17

0000000000005290 <mpfr_set_q@plt>:
    5290:	adrp	x16, 28000 <mpfr_set_underflow>
    5294:	ldr	x17, [x16, #1152]
    5298:	add	x16, x16, #0x480
    529c:	br	x17

00000000000052a0 <mpc_exp@plt>:
    52a0:	adrp	x16, 28000 <mpfr_set_underflow>
    52a4:	ldr	x17, [x16, #1160]
    52a8:	add	x16, x16, #0x488
    52ac:	br	x17

00000000000052b0 <__gmpq_init@plt>:
    52b0:	adrp	x16, 28000 <mpfr_set_underflow>
    52b4:	ldr	x17, [x16, #1168]
    52b8:	add	x16, x16, #0x490
    52bc:	br	x17

00000000000052c0 <mpc_set_si_si@plt>:
    52c0:	adrp	x16, 28000 <mpfr_set_underflow>
    52c4:	ldr	x17, [x16, #1176]
    52c8:	add	x16, x16, #0x498
    52cc:	br	x17

00000000000052d0 <__gmpz_submul@plt>:
    52d0:	adrp	x16, 28000 <mpfr_set_underflow>
    52d4:	ldr	x17, [x16, #1184]
    52d8:	add	x16, x16, #0x4a0
    52dc:	br	x17

00000000000052e0 <mpfr_free_str@plt>:
    52e0:	adrp	x16, 28000 <mpfr_set_underflow>
    52e4:	ldr	x17, [x16, #1192]
    52e8:	add	x16, x16, #0x4a8
    52ec:	br	x17

00000000000052f0 <mpfr_underflow_p@plt>:
    52f0:	adrp	x16, 28000 <mpfr_set_underflow>
    52f4:	ldr	x17, [x16, #1200]
    52f8:	add	x16, x16, #0x4b0
    52fc:	br	x17

0000000000005300 <__gmpz_cmp@plt>:
    5300:	adrp	x16, 28000 <mpfr_set_underflow>
    5304:	ldr	x17, [x16, #1208]
    5308:	add	x16, x16, #0x4b8
    530c:	br	x17

0000000000005310 <mpc_cmp_si_si@plt>:
    5310:	adrp	x16, 28000 <mpfr_set_underflow>
    5314:	ldr	x17, [x16, #1216]
    5318:	add	x16, x16, #0x4c0
    531c:	br	x17

0000000000005320 <mpfr_div_2ui@plt>:
    5320:	adrp	x16, 28000 <mpfr_set_underflow>
    5324:	ldr	x17, [x16, #1224]
    5328:	add	x16, x16, #0x4c8
    532c:	br	x17

0000000000005330 <mpc_realloc_str@plt>:
    5330:	adrp	x16, 28000 <mpfr_set_underflow>
    5334:	ldr	x17, [x16, #1232]
    5338:	add	x16, x16, #0x4d0
    533c:	br	x17

0000000000005340 <strcpy@plt>:
    5340:	adrp	x16, 28000 <mpfr_set_underflow>
    5344:	ldr	x17, [x16, #1240]
    5348:	add	x16, x16, #0x4d8
    534c:	br	x17

0000000000005350 <mpfr_sqrt@plt>:
    5350:	adrp	x16, 28000 <mpfr_set_underflow>
    5354:	ldr	x17, [x16, #1248]
    5358:	add	x16, x16, #0x4e0
    535c:	br	x17

0000000000005360 <mpfr_mul_si@plt>:
    5360:	adrp	x16, 28000 <mpfr_set_underflow>
    5364:	ldr	x17, [x16, #1256]
    5368:	add	x16, x16, #0x4e8
    536c:	br	x17

0000000000005370 <mpfr_prec_round@plt>:
    5370:	adrp	x16, 28000 <mpfr_set_underflow>
    5374:	ldr	x17, [x16, #1264]
    5378:	add	x16, x16, #0x4f0
    537c:	br	x17

0000000000005380 <mpc_set_str@plt>:
    5380:	adrp	x16, 28000 <mpfr_set_underflow>
    5384:	ldr	x17, [x16, #1272]
    5388:	add	x16, x16, #0x4f8
    538c:	br	x17

0000000000005390 <mpfr_min_prec@plt>:
    5390:	adrp	x16, 28000 <mpfr_set_underflow>
    5394:	ldr	x17, [x16, #1280]
    5398:	add	x16, x16, #0x500
    539c:	br	x17

00000000000053a0 <mpfr_cmp3@plt>:
    53a0:	adrp	x16, 28000 <mpfr_set_underflow>
    53a4:	ldr	x17, [x16, #1288]
    53a8:	add	x16, x16, #0x508
    53ac:	br	x17

00000000000053b0 <mpfr_cmpabs@plt>:
    53b0:	adrp	x16, 28000 <mpfr_set_underflow>
    53b4:	ldr	x17, [x16, #1296]
    53b8:	add	x16, x16, #0x510
    53bc:	br	x17

00000000000053c0 <mpc_init3@plt>:
    53c0:	adrp	x16, 28000 <mpfr_set_underflow>
    53c4:	ldr	x17, [x16, #1304]
    53c8:	add	x16, x16, #0x518
    53cc:	br	x17

00000000000053d0 <__gmpz_add@plt>:
    53d0:	adrp	x16, 28000 <mpfr_set_underflow>
    53d4:	ldr	x17, [x16, #1312]
    53d8:	add	x16, x16, #0x520
    53dc:	br	x17

00000000000053e0 <mpc_cos@plt>:
    53e0:	adrp	x16, 28000 <mpfr_set_underflow>
    53e4:	ldr	x17, [x16, #1320]
    53e8:	add	x16, x16, #0x528
    53ec:	br	x17

00000000000053f0 <set_pi_over_2@plt>:
    53f0:	adrp	x16, 28000 <mpfr_set_underflow>
    53f4:	ldr	x17, [x16, #1328]
    53f8:	add	x16, x16, #0x530
    53fc:	br	x17

0000000000005400 <__gmpfr_set_uj@plt>:
    5400:	adrp	x16, 28000 <mpfr_set_underflow>
    5404:	ldr	x17, [x16, #1336]
    5408:	add	x16, x16, #0x538
    540c:	br	x17

0000000000005410 <mpc_atan@plt>:
    5410:	adrp	x16, 28000 <mpfr_set_underflow>
    5414:	ldr	x17, [x16, #1344]
    5418:	add	x16, x16, #0x540
    541c:	br	x17

0000000000005420 <__gmpn_perfect_square_p@plt>:
    5420:	adrp	x16, 28000 <mpfr_set_underflow>
    5424:	ldr	x17, [x16, #1352]
    5428:	add	x16, x16, #0x548
    542c:	br	x17

0000000000005430 <mpfr_ui_sub@plt>:
    5430:	adrp	x16, 28000 <mpfr_set_underflow>
    5434:	ldr	x17, [x16, #1360]
    5438:	add	x16, x16, #0x550
    543c:	br	x17

0000000000005440 <mpfr_init2@plt>:
    5440:	adrp	x16, 28000 <mpfr_set_underflow>
    5444:	ldr	x17, [x16, #1368]
    5448:	add	x16, x16, #0x558
    544c:	br	x17

0000000000005450 <mpfr_can_round@plt>:
    5450:	adrp	x16, 28000 <mpfr_set_underflow>
    5454:	ldr	x17, [x16, #1376]
    5458:	add	x16, x16, #0x560
    545c:	br	x17

0000000000005460 <mpc_set_d@plt>:
    5460:	adrp	x16, 28000 <mpfr_set_underflow>
    5464:	ldr	x17, [x16, #1384]
    5468:	add	x16, x16, #0x568
    546c:	br	x17

0000000000005470 <mpfr_get_z_2exp@plt>:
    5470:	adrp	x16, 28000 <mpfr_set_underflow>
    5474:	ldr	x17, [x16, #1392]
    5478:	add	x16, x16, #0x570
    547c:	br	x17

0000000000005480 <mpc_asin@plt>:
    5480:	adrp	x16, 28000 <mpfr_set_underflow>
    5484:	ldr	x17, [x16, #1400]
    5488:	add	x16, x16, #0x578
    548c:	br	x17

0000000000005490 <mpfr_set_overflow@plt>:
    5490:	adrp	x16, 28000 <mpfr_set_underflow>
    5494:	ldr	x17, [x16, #1408]
    5498:	add	x16, x16, #0x580
    549c:	br	x17

00000000000054a0 <__gmpz_init@plt>:
    54a0:	adrp	x16, 28000 <mpfr_set_underflow>
    54a4:	ldr	x17, [x16, #1416]
    54a8:	add	x16, x16, #0x588
    54ac:	br	x17

00000000000054b0 <__gmpz_sizeinbase@plt>:
    54b0:	adrp	x16, 28000 <mpfr_set_underflow>
    54b4:	ldr	x17, [x16, #1424]
    54b8:	add	x16, x16, #0x590
    54bc:	br	x17

00000000000054c0 <__gmpz_set_si@plt>:
    54c0:	adrp	x16, 28000 <mpfr_set_underflow>
    54c4:	ldr	x17, [x16, #1432]
    54c8:	add	x16, x16, #0x598
    54cc:	br	x17

00000000000054d0 <mpfr_number_p@plt>:
    54d0:	adrp	x16, 28000 <mpfr_set_underflow>
    54d4:	ldr	x17, [x16, #1440]
    54d8:	add	x16, x16, #0x5a0
    54dc:	br	x17

00000000000054e0 <mpfr_overflow_p@plt>:
    54e0:	adrp	x16, 28000 <mpfr_set_underflow>
    54e4:	ldr	x17, [x16, #1448]
    54e8:	add	x16, x16, #0x5a8
    54ec:	br	x17

00000000000054f0 <mpc_set_fr_fr@plt>:
    54f0:	adrp	x16, 28000 <mpfr_set_underflow>
    54f4:	ldr	x17, [x16, #1456]
    54f8:	add	x16, x16, #0x5b0
    54fc:	br	x17

0000000000005500 <mpfr_urandomb@plt>:
    5500:	adrp	x16, 28000 <mpfr_set_underflow>
    5504:	ldr	x17, [x16, #1464]
    5508:	add	x16, x16, #0x5b8
    550c:	br	x17

0000000000005510 <mpfr_set_ui@plt>:
    5510:	adrp	x16, 28000 <mpfr_set_underflow>
    5514:	ldr	x17, [x16, #1472]
    5518:	add	x16, x16, #0x5c0
    551c:	br	x17

0000000000005520 <mpfr_sin_cos@plt>:
    5520:	adrp	x16, 28000 <mpfr_set_underflow>
    5524:	ldr	x17, [x16, #1480]
    5528:	add	x16, x16, #0x5c8
    552c:	br	x17

0000000000005530 <mpc_div_2ui@plt>:
    5530:	adrp	x16, 28000 <mpfr_set_underflow>
    5534:	ldr	x17, [x16, #1488]
    5538:	add	x16, x16, #0x5d0
    553c:	br	x17

0000000000005540 <mpfr_inits2@plt>:
    5540:	adrp	x16, 28000 <mpfr_set_underflow>
    5544:	ldr	x17, [x16, #1496]
    5548:	add	x16, x16, #0x5d8
    554c:	br	x17

0000000000005550 <mpfr_div_ui@plt>:
    5550:	adrp	x16, 28000 <mpfr_set_underflow>
    5554:	ldr	x17, [x16, #1504]
    5558:	add	x16, x16, #0x5e0
    555c:	br	x17

0000000000005560 <mpc_fma_naive@plt>:
    5560:	adrp	x16, 28000 <mpfr_set_underflow>
    5564:	ldr	x17, [x16, #1512]
    5568:	add	x16, x16, #0x5e8
    556c:	br	x17

0000000000005570 <__gmpq_mul_2exp@plt>:
    5570:	adrp	x16, 28000 <mpfr_set_underflow>
    5574:	ldr	x17, [x16, #1520]
    5578:	add	x16, x16, #0x5f0
    557c:	br	x17

0000000000005580 <mpc_set@plt>:
    5580:	adrp	x16, 28000 <mpfr_set_underflow>
    5584:	ldr	x17, [x16, #1528]
    5588:	add	x16, x16, #0x5f8
    558c:	br	x17

0000000000005590 <mpfr_hypot@plt>:
    5590:	adrp	x16, 28000 <mpfr_set_underflow>
    5594:	ldr	x17, [x16, #1536]
    5598:	add	x16, x16, #0x600
    559c:	br	x17

00000000000055a0 <fprintf@plt>:
    55a0:	adrp	x16, 28000 <mpfr_set_underflow>
    55a4:	ldr	x17, [x16, #1544]
    55a8:	add	x16, x16, #0x608
    55ac:	br	x17

00000000000055b0 <mpc_ui_div@plt>:
    55b0:	adrp	x16, 28000 <mpfr_set_underflow>
    55b4:	ldr	x17, [x16, #1552]
    55b8:	add	x16, x16, #0x610
    55bc:	br	x17

00000000000055c0 <mpfr_get_emin_min@plt>:
    55c0:	adrp	x16, 28000 <mpfr_set_underflow>
    55c4:	ldr	x17, [x16, #1560]
    55c8:	add	x16, x16, #0x618
    55cc:	br	x17

Disassembly of section .text:

00000000000055d0 <mpc_abs@@Base-0xd4>:
    55d0:	adrp	x0, 27000 <mpc_ui_ui_sub@@Base+0x13228>
    55d4:	ldr	x0, [x0, #4048]
    55d8:	cbz	x0, 55e0 <mpfr_get_emin_min@plt+0x20>
    55dc:	b	4fc0 <__gmon_start__@plt>
    55e0:	ret
    55e4:	nop
    55e8:	adrp	x0, 28000 <mpc_ui_ui_sub@@Base+0x14228>
    55ec:	add	x0, x0, #0x628
    55f0:	adrp	x1, 28000 <mpc_ui_ui_sub@@Base+0x14228>
    55f4:	add	x1, x1, #0x628
    55f8:	cmp	x1, x0
    55fc:	b.eq	5614 <mpfr_get_emin_min@plt+0x54>  // b.none
    5600:	adrp	x1, 27000 <mpc_ui_ui_sub@@Base+0x13228>
    5604:	ldr	x1, [x1, #3992]
    5608:	cbz	x1, 5614 <mpfr_get_emin_min@plt+0x54>
    560c:	mov	x16, x1
    5610:	br	x16
    5614:	ret
    5618:	adrp	x0, 28000 <mpc_ui_ui_sub@@Base+0x14228>
    561c:	add	x0, x0, #0x628
    5620:	adrp	x1, 28000 <mpc_ui_ui_sub@@Base+0x14228>
    5624:	add	x1, x1, #0x628
    5628:	sub	x1, x1, x0
    562c:	lsr	x2, x1, #63
    5630:	add	x1, x2, x1, asr #3
    5634:	cmp	xzr, x1, asr #1
    5638:	asr	x1, x1, #1
    563c:	b.eq	5654 <mpfr_get_emin_min@plt+0x94>  // b.none
    5640:	adrp	x2, 27000 <mpc_ui_ui_sub@@Base+0x13228>
    5644:	ldr	x2, [x2, #4064]
    5648:	cbz	x2, 5654 <mpfr_get_emin_min@plt+0x94>
    564c:	mov	x16, x2
    5650:	br	x16
    5654:	ret
    5658:	stp	x29, x30, [sp, #-32]!
    565c:	mov	x29, sp
    5660:	str	x19, [sp, #16]
    5664:	adrp	x19, 28000 <mpc_ui_ui_sub@@Base+0x14228>
    5668:	ldrb	w0, [x19, #1576]
    566c:	cbnz	w0, 5694 <mpfr_get_emin_min@plt+0xd4>
    5670:	adrp	x0, 27000 <mpc_ui_ui_sub@@Base+0x13228>
    5674:	ldr	x0, [x0, #4000]
    5678:	cbz	x0, 5688 <mpfr_get_emin_min@plt+0xc8>
    567c:	adrp	x0, 28000 <mpc_ui_ui_sub@@Base+0x14228>
    5680:	ldr	x0, [x0, #1568]
    5684:	bl	4b20 <__cxa_finalize@plt>
    5688:	bl	55e8 <mpfr_get_emin_min@plt+0x28>
    568c:	mov	w0, #0x1                   	// #1
    5690:	strb	w0, [x19, #1576]
    5694:	ldr	x19, [sp, #16]
    5698:	ldp	x29, x30, [sp], #32
    569c:	ret
    56a0:	b	5618 <mpfr_get_emin_min@plt+0x58>

00000000000056a4 <mpc_abs@@Base>:
    56a4:	stp	x29, x30, [sp, #-16]!
    56a8:	mov	x29, sp
    56ac:	mov	w3, w2
    56b0:	add	x2, x1, #0x20
    56b4:	bl	5590 <mpfr_hypot@plt>
    56b8:	ldp	x29, x30, [sp], #16
    56bc:	ret

00000000000056c0 <mpc_acos@@Base>:
    56c0:	stp	x29, x30, [sp, #-256]!
    56c4:	mov	x29, sp
    56c8:	stp	x19, x20, [sp, #16]
    56cc:	stp	x21, x22, [sp, #32]
    56d0:	str	x0, [sp, #120]
    56d4:	mov	x22, x1
    56d8:	ldr	x0, [x1, #16]
    56dc:	mov	x1, #0x2                   	// #2
    56e0:	movk	x1, #0x8000, lsl #48
    56e4:	cmp	x0, x1
    56e8:	b.eq	57a0 <mpc_acos@@Base+0xe0>  // b.none
    56ec:	stp	x27, x28, [sp, #80]
    56f0:	mov	w28, w2
    56f4:	ldr	x1, [x22, #48]
    56f8:	mov	x2, #0x2                   	// #2
    56fc:	movk	x2, #0x8000, lsl #48
    5700:	cmp	x1, x2
    5704:	b.eq	5e34 <mpc_acos@@Base+0x774>  // b.none
    5708:	mov	x2, #0x8000000000000003    	// #-9223372036854775805
    570c:	cmp	x0, x2
    5710:	ccmp	x1, x2, #0x4, ne  // ne = any
    5714:	b.eq	5818 <mpc_acos@@Base+0x158>  // b.none
    5718:	stp	x25, x26, [sp, #64]
    571c:	mov	x2, #0x8000000000000001    	// #-9223372036854775807
    5720:	cmp	x1, x2
    5724:	b.eq	59ac <mpc_acos@@Base+0x2ec>  // b.none
    5728:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
    572c:	cmp	x0, x1
    5730:	b.eq	5b60 <mpc_acos@@Base+0x4a0>  // b.none
    5734:	stp	x23, x24, [sp, #48]
    5738:	ldr	x0, [sp, #120]
    573c:	ldr	x1, [x0]
    5740:	str	x1, [sp, #112]
    5744:	ldr	x2, [x0, #32]
    5748:	add	x0, sp, #0xc0
    574c:	bl	53c0 <mpc_init3@plt>
    5750:	asr	w0, w28, #4
    5754:	cmp	w0, #0x1
    5758:	b.eq	5bf4 <mpc_acos@@Base+0x534>  // b.none
    575c:	cmp	w0, #0x2
    5760:	b.eq	5c38 <mpc_acos@@Base+0x578>  // b.none
    5764:	cmp	w0, #0x3
    5768:	mov	w1, #0x2                   	// #2
    576c:	csel	w0, w0, w1, ne  // ne = any
    5770:	lsl	w0, w0, #4
    5774:	str	w0, [sp, #108]
    5778:	ldr	x20, [sp, #112]
    577c:	mov	x1, x20
    5780:	add	x0, sp, #0xa0
    5784:	bl	5440 <mpfr_init2@plt>
    5788:	mov	w23, #0x0                   	// #0
    578c:	add	x21, sp, #0xc0
    5790:	add	x24, sp, #0xa0
    5794:	mov	w26, #0x1                   	// #1
    5798:	add	x27, x21, #0x20
    579c:	b	5d04 <mpc_acos@@Base+0x644>
    57a0:	ldr	x1, [x22, #48]
    57a4:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
    57a8:	cmp	x1, x0
    57ac:	b.eq	5e44 <mpc_acos@@Base+0x784>  // b.none
    57b0:	ldr	x19, [sp, #120]
    57b4:	mov	x0, x19
    57b8:	bl	4a40 <mpfr_set_nan@plt>
    57bc:	add	x0, x19, #0x20
    57c0:	bl	4a40 <mpfr_set_nan@plt>
    57c4:	mov	w19, #0x0                   	// #0
    57c8:	b	5e6c <mpc_acos@@Base+0x7ac>
    57cc:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
    57d0:	cmp	x0, x1
    57d4:	b.ne	5810 <mpc_acos@@Base+0x150>  // b.any
    57d8:	and	w2, w28, #0xf
    57dc:	mov	w1, #0x1                   	// #1
    57e0:	ldr	x20, [sp, #120]
    57e4:	mov	x0, x20
    57e8:	bl	53f0 <set_pi_over_2@plt>
    57ec:	mov	w19, w0
    57f0:	add	x0, x20, #0x20
    57f4:	bl	4a40 <mpfr_set_nan@plt>
    57f8:	tbnz	w19, #31, 5804 <mpc_acos@@Base+0x144>
    57fc:	ldp	x27, x28, [sp, #80]
    5800:	b	5e6c <mpc_acos@@Base+0x7ac>
    5804:	mov	w0, #0x2                   	// #2
    5808:	ldp	x27, x28, [sp, #80]
    580c:	b	5e74 <mpc_acos@@Base+0x7b4>
    5810:	ldp	x27, x28, [sp, #80]
    5814:	b	57b0 <mpc_acos@@Base+0xf0>
    5818:	cmp	x0, x2
    581c:	b.ne	596c <mpc_acos@@Base+0x2ac>  // b.any
    5820:	cmp	x1, x2
    5824:	b.eq	5870 <mpc_acos@@Base+0x1b0>  // b.none
    5828:	ldr	w0, [x22, #8]
    582c:	cmp	w0, #0x0
    5830:	b.le	5958 <mpc_acos@@Base+0x298>
    5834:	mov	w0, #0x1                   	// #1
    5838:	ldr	x1, [sp, #120]
    583c:	str	w0, [x1, #8]
    5840:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
    5844:	str	x0, [x1, #16]
    5848:	add	x0, x1, #0x20
    584c:	ldr	w1, [x22, #40]
    5850:	tbnz	w1, #31, 5e84 <mpc_acos@@Base+0x7c4>
    5854:	mov	w1, #0xffffffff            	// #-1
    5858:	bl	5120 <mpfr_set_inf@plt>
    585c:	mov	w19, #0x0                   	// #0
    5860:	cmp	w19, #0x0
    5864:	cset	w0, ne  // ne = any
    5868:	ldp	x27, x28, [sp, #80]
    586c:	b	5e74 <mpc_acos@@Base+0x7b4>
    5870:	ldr	w0, [x22, #8]
    5874:	cmp	w0, #0x0
    5878:	b.le	58ac <mpc_acos@@Base+0x1ec>
    587c:	and	w2, w28, #0xf
    5880:	mov	w1, #0x1                   	// #1
    5884:	ldr	x20, [sp, #120]
    5888:	mov	x0, x20
    588c:	bl	53f0 <set_pi_over_2@plt>
    5890:	mov	w19, w0
    5894:	mov	w3, #0x0                   	// #0
    5898:	mov	x2, #0x1                   	// #1
    589c:	mov	x1, x20
    58a0:	mov	x0, x20
    58a4:	bl	5320 <mpfr_div_2ui@plt>
    58a8:	b	5980 <mpc_acos@@Base+0x2c0>
    58ac:	stp	x23, x24, [sp, #48]
    58b0:	add	x0, sp, #0x80
    58b4:	bl	4aa0 <mpfr_init@plt>
    58b8:	ldr	x0, [sp, #120]
    58bc:	ldr	x23, [x0]
    58c0:	mov	x20, x23
    58c4:	add	x19, sp, #0x80
    58c8:	mov	w21, #0x3                   	// #3
    58cc:	mov	x24, #0x3                   	// #3
    58d0:	and	w28, w28, #0xf
    58d4:	mov	x0, x20
    58d8:	bl	4d20 <mpc_ceil_log2@plt>
    58dc:	add	x20, x20, x0
    58e0:	mov	x1, x20
    58e4:	mov	x0, x19
    58e8:	bl	4c80 <mpfr_set_prec@plt>
    58ec:	mov	w1, w21
    58f0:	mov	x0, x19
    58f4:	bl	4a80 <mpfr_const_pi@plt>
    58f8:	mov	w3, w21
    58fc:	mov	x2, x24
    5900:	mov	x1, x19
    5904:	mov	x0, x19
    5908:	bl	49c0 <mpfr_mul_ui@plt>
    590c:	cmp	w28, #0x0
    5910:	cinc	x4, x23, eq  // eq = none
    5914:	mov	w3, w28
    5918:	mov	w2, w21
    591c:	sub	x1, x20, #0x1
    5920:	mov	x0, x19
    5924:	bl	5450 <mpfr_can_round@plt>
    5928:	cbz	w0, 58d4 <mpc_acos@@Base+0x214>
    592c:	add	x20, sp, #0x80
    5930:	mov	w3, w28
    5934:	mov	x2, #0x2                   	// #2
    5938:	mov	x1, x20
    593c:	ldr	x0, [sp, #120]
    5940:	bl	5320 <mpfr_div_2ui@plt>
    5944:	mov	w19, w0
    5948:	mov	x0, x20
    594c:	bl	4d60 <mpfr_clear@plt>
    5950:	ldp	x23, x24, [sp, #48]
    5954:	b	5980 <mpc_acos@@Base+0x2c0>
    5958:	and	w1, w28, #0xf
    595c:	ldr	x0, [sp, #120]
    5960:	bl	4a80 <mpfr_const_pi@plt>
    5964:	mov	w19, w0
    5968:	b	5980 <mpc_acos@@Base+0x2c0>
    596c:	and	w2, w28, #0xf
    5970:	mov	w1, #0x1                   	// #1
    5974:	ldr	x0, [sp, #120]
    5978:	bl	53f0 <set_pi_over_2@plt>
    597c:	mov	w19, w0
    5980:	ldr	w0, [x22, #40]
    5984:	mov	w1, #0x1                   	// #1
    5988:	cmn	w0, #0x1
    598c:	cneg	w1, w1, gt
    5990:	ldr	x0, [sp, #120]
    5994:	add	x0, x0, #0x20
    5998:	bl	5120 <mpfr_set_inf@plt>
    599c:	mov	w0, #0x2                   	// #2
    59a0:	tbz	w19, #31, 5860 <mpc_acos@@Base+0x1a0>
    59a4:	ldp	x27, x28, [sp, #80]
    59a8:	b	5e74 <mpc_acos@@Base+0x7b4>
    59ac:	ldr	w20, [x22, #40]
    59b0:	mov	x2, #0x0                   	// #0
    59b4:	mov	x1, #0x1                   	// #1
    59b8:	mov	x0, x22
    59bc:	bl	4cb0 <mpfr_cmp_ui_2exp@plt>
    59c0:	cmp	w0, #0x0
    59c4:	b.le	5a88 <mpc_acos@@Base+0x3c8>
    59c8:	tbnz	w20, #31, 5a2c <mpc_acos@@Base+0x36c>
    59cc:	ldr	x0, [sp, #120]
    59d0:	add	x0, x0, #0x20
    59d4:	asr	w2, w28, #4
    59d8:	cmp	w2, #0x2
    59dc:	b.eq	5a80 <mpc_acos@@Base+0x3c0>  // b.none
    59e0:	cmp	w2, #0x3
    59e4:	mov	w1, #0x2                   	// #2
    59e8:	csel	w2, w2, w1, ne  // ne = any
    59ec:	mov	x1, x22
    59f0:	bl	50e0 <mpfr_acosh@plt>
    59f4:	neg	w25, w0
    59f8:	mov	w0, #0x1                   	// #1
    59fc:	ldr	x1, [sp, #120]
    5a00:	str	w0, [x1, #8]
    5a04:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
    5a08:	str	x0, [x1, #16]
    5a0c:	mov	w19, #0x0                   	// #0
    5a10:	mov	w2, #0x0                   	// #0
    5a14:	ldr	x0, [sp, #120]
    5a18:	mov	x1, x0
    5a1c:	bl	4f60 <mpc_conj@plt>
    5a20:	mov	w0, #0x2                   	// #2
    5a24:	tbnz	w19, #31, 5a60 <mpc_acos@@Base+0x3a0>
    5a28:	b	5a58 <mpc_acos@@Base+0x398>
    5a2c:	asr	w2, w28, #4
    5a30:	mov	x1, x22
    5a34:	ldr	x19, [sp, #120]
    5a38:	add	x0, x19, #0x20
    5a3c:	bl	50e0 <mpfr_acosh@plt>
    5a40:	mov	w25, w0
    5a44:	mov	w0, #0x1                   	// #1
    5a48:	str	w0, [x19, #8]
    5a4c:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
    5a50:	str	x0, [x19, #16]
    5a54:	mov	w19, #0x0                   	// #0
    5a58:	cmp	w19, #0x0
    5a5c:	cset	w0, ne  // ne = any
    5a60:	tbnz	w25, #31, 5b58 <mpc_acos@@Base+0x498>
    5a64:	cmp	w25, #0x0
    5a68:	mov	w1, #0x4                   	// #4
    5a6c:	csel	w25, w25, w1, eq  // eq = none
    5a70:	orr	w0, w0, w25
    5a74:	ldp	x25, x26, [sp, #64]
    5a78:	ldp	x27, x28, [sp, #80]
    5a7c:	b	5e74 <mpc_acos@@Base+0x7b4>
    5a80:	mov	w2, #0x3                   	// #3
    5a84:	b	59ec <mpc_acos@@Base+0x32c>
    5a88:	mov	x2, #0x0                   	// #0
    5a8c:	mov	x1, #0xffffffffffffffff    	// #-1
    5a90:	mov	x0, x22
    5a94:	bl	4fe0 <mpfr_cmp_si_2exp@plt>
    5a98:	tbnz	w0, #31, 5ad0 <mpc_acos@@Base+0x410>
    5a9c:	and	w2, w28, #0xf
    5aa0:	mov	x1, x22
    5aa4:	ldr	x21, [sp, #120]
    5aa8:	mov	x0, x21
    5aac:	bl	4fd0 <mpfr_acos@plt>
    5ab0:	mov	w19, w0
    5ab4:	mov	w1, #0x1                   	// #1
    5ab8:	str	w1, [x21, #40]
    5abc:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
    5ac0:	str	x1, [x21, #48]
    5ac4:	mov	w25, #0x0                   	// #0
    5ac8:	tbnz	w20, #31, 5a20 <mpc_acos@@Base+0x360>
    5acc:	b	5a10 <mpc_acos@@Base+0x350>
    5ad0:	add	x0, sp, #0x80
    5ad4:	ldp	x2, x3, [x22]
    5ad8:	stp	x2, x3, [sp, #128]
    5adc:	ldp	x2, x3, [x22, #16]
    5ae0:	stp	x2, x3, [sp, #144]
    5ae4:	mov	w2, #0x0                   	// #0
    5ae8:	mov	x1, x0
    5aec:	bl	4b80 <mpfr_neg@plt>
    5af0:	tbnz	w20, #31, 5b34 <mpc_acos@@Base+0x474>
    5af4:	ldr	x0, [sp, #120]
    5af8:	add	x0, x0, #0x20
    5afc:	asr	w2, w28, #4
    5b00:	cmp	w2, #0x2
    5b04:	b.eq	5b50 <mpc_acos@@Base+0x490>  // b.none
    5b08:	cmp	w2, #0x3
    5b0c:	mov	w1, #0x2                   	// #2
    5b10:	csel	w2, w2, w1, ne  // ne = any
    5b14:	add	x1, sp, #0x80
    5b18:	bl	50e0 <mpfr_acosh@plt>
    5b1c:	neg	w25, w0
    5b20:	and	w1, w28, #0xf
    5b24:	ldr	x0, [sp, #120]
    5b28:	bl	4a80 <mpfr_const_pi@plt>
    5b2c:	mov	w19, w0
    5b30:	b	5ac8 <mpc_acos@@Base+0x408>
    5b34:	asr	w2, w28, #4
    5b38:	add	x1, sp, #0x80
    5b3c:	ldr	x0, [sp, #120]
    5b40:	add	x0, x0, #0x20
    5b44:	bl	50e0 <mpfr_acosh@plt>
    5b48:	mov	w25, w0
    5b4c:	b	5b20 <mpc_acos@@Base+0x460>
    5b50:	mov	w2, #0x3                   	// #3
    5b54:	b	5b14 <mpc_acos@@Base+0x454>
    5b58:	mov	w25, #0x8                   	// #8
    5b5c:	b	5a70 <mpc_acos@@Base+0x3b0>
    5b60:	and	w2, w28, #0xf
    5b64:	mov	w1, #0x1                   	// #1
    5b68:	ldr	x19, [sp, #120]
    5b6c:	mov	x0, x19
    5b70:	bl	53f0 <set_pi_over_2@plt>
    5b74:	mov	w20, w0
    5b78:	add	x0, x19, #0x20
    5b7c:	add	x1, x22, #0x20
    5b80:	asr	w2, w28, #4
    5b84:	cmp	w2, #0x2
    5b88:	b.eq	5bdc <mpc_acos@@Base+0x51c>  // b.none
    5b8c:	cmp	w2, #0x3
    5b90:	mov	w3, #0x2                   	// #2
    5b94:	csel	w2, w2, w3, ne  // ne = any
    5b98:	bl	4dc0 <mpfr_asinh@plt>
    5b9c:	mov	w19, w0
    5ba0:	mov	w2, #0x0                   	// #0
    5ba4:	ldr	x0, [sp, #120]
    5ba8:	mov	x1, x0
    5bac:	bl	4f60 <mpc_conj@plt>
    5bb0:	mov	w25, #0x2                   	// #2
    5bb4:	tbnz	w20, #31, 5bc0 <mpc_acos@@Base+0x500>
    5bb8:	cmp	w20, #0x0
    5bbc:	cset	w25, ne  // ne = any
    5bc0:	cmp	w19, #0x0
    5bc4:	b.le	5be4 <mpc_acos@@Base+0x524>
    5bc8:	mov	w19, #0x8                   	// #8
    5bcc:	orr	w0, w25, w19
    5bd0:	ldp	x25, x26, [sp, #64]
    5bd4:	ldp	x27, x28, [sp, #80]
    5bd8:	b	5e74 <mpc_acos@@Base+0x7b4>
    5bdc:	mov	w2, #0x3                   	// #3
    5be0:	b	5b98 <mpc_acos@@Base+0x4d8>
    5be4:	cmp	w19, #0x0
    5be8:	mov	w0, #0x4                   	// #4
    5bec:	csel	w19, w19, w0, eq  // eq = none
    5bf0:	b	5bcc <mpc_acos@@Base+0x50c>
    5bf4:	ldr	x1, [x22, #48]
    5bf8:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
    5bfc:	cmp	x1, x0
    5c00:	b.ge	5c24 <mpc_acos@@Base+0x564>  // b.tcont
    5c04:	mov	w0, #0x2                   	// #2
    5c08:	mov	x2, #0x2                   	// #2
    5c0c:	movk	x2, #0x8000, lsl #48
    5c10:	cmp	x1, x2
    5c14:	b.ne	5770 <mpc_acos@@Base+0xb0>  // b.any
    5c18:	bl	4b00 <mpfr_set_erangeflag@plt>
    5c1c:	mov	w0, #0x2                   	// #2
    5c20:	b	5770 <mpc_acos@@Base+0xb0>
    5c24:	ldr	w0, [x22, #40]
    5c28:	cmp	w0, #0x0
    5c2c:	cset	w0, gt
    5c30:	add	w0, w0, #0x2
    5c34:	b	5770 <mpc_acos@@Base+0xb0>
    5c38:	mov	w0, #0x3                   	// #3
    5c3c:	b	5770 <mpc_acos@@Base+0xb0>
    5c40:	mov	x0, #0x2                   	// #2
    5c44:	sdiv	x0, x20, x0
    5c48:	b	5d1c <mpc_acos@@Base+0x65c>
    5c4c:	bl	4b00 <mpfr_set_erangeflag@plt>
    5c50:	b	5d78 <mpc_acos@@Base+0x6b8>
    5c54:	ldr	w1, [sp, #232]
    5c58:	ldr	x2, [x22, #48]
    5c5c:	mov	x3, #0x8000000000000003    	// #-9223372036854775805
    5c60:	cmp	x2, x3
    5c64:	b.lt	5d88 <mpc_acos@@Base+0x6c8>  // b.tstop
    5c68:	ldr	w2, [x22, #40]
    5c6c:	mul	w1, w1, w2
    5c70:	cmp	w1, #0x0
    5c74:	b.le	5d98 <mpc_acos@@Base+0x6d8>
    5c78:	asr	w0, w0, #2
    5c7c:	mov	w25, #0xffffffff            	// #-1
    5c80:	cmp	w0, #0x2
    5c84:	b.eq	5c90 <mpc_acos@@Base+0x5d0>  // b.none
    5c88:	cmp	w0, #0x0
    5c8c:	cset	w25, ne  // ne = any
    5c90:	ldr	x19, [sp, #208]
    5c94:	mov	w3, #0x0                   	// #0
    5c98:	mov	x2, x21
    5c9c:	mov	x1, x24
    5ca0:	mov	x0, x21
    5ca4:	bl	4a60 <mpfr_sub@plt>
    5ca8:	ldr	x1, [sp, #208]
    5cac:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
    5cb0:	cmp	x1, x0
    5cb4:	b.eq	5d04 <mpc_acos@@Base+0x644>  // b.none
    5cb8:	cmp	x19, #0x1
    5cbc:	mov	x0, #0x2                   	// #2
    5cc0:	csinc	x19, x0, x19, le
    5cc4:	sub	x19, x19, x1
    5cc8:	mov	w2, #0x0                   	// #0
    5ccc:	mov	x1, x27
    5cd0:	mov	x0, x27
    5cd4:	bl	4b80 <mpfr_neg@plt>
    5cd8:	tst	x28, #0xf
    5cdc:	ldr	x0, [sp, #112]
    5ce0:	cinc	x4, x0, eq  // eq = none
    5ce4:	cmp	x19, #0x0
    5ce8:	csel	x19, x19, xzr, ge  // ge = tcont
    5cec:	mov	w3, w26
    5cf0:	mov	w2, #0x0                   	// #0
    5cf4:	sub	x1, x20, x19
    5cf8:	mov	x0, x21
    5cfc:	bl	5450 <mpfr_can_round@plt>
    5d00:	cbnz	w0, 5dd0 <mpc_acos@@Base+0x710>
    5d04:	add	w23, w23, #0x1
    5d08:	cmp	w23, #0x2
    5d0c:	b.gt	5c40 <mpc_acos@@Base+0x580>
    5d10:	mov	x0, x20
    5d14:	bl	4d20 <mpc_ceil_log2@plt>
    5d18:	add	x0, x0, #0x3
    5d1c:	add	x20, x20, x0
    5d20:	mov	x1, x20
    5d24:	mov	x0, x21
    5d28:	bl	4c80 <mpfr_set_prec@plt>
    5d2c:	mov	x1, x20
    5d30:	mov	x0, x24
    5d34:	bl	4c80 <mpfr_set_prec@plt>
    5d38:	mov	w2, #0x0                   	// #0
    5d3c:	mov	w1, w26
    5d40:	mov	x0, x24
    5d44:	bl	53f0 <set_pi_over_2@plt>
    5d48:	ldr	w2, [sp, #108]
    5d4c:	mov	x1, x22
    5d50:	mov	x0, x21
    5d54:	bl	5480 <mpc_asin@plt>
    5d58:	ldr	x1, [sp, #240]
    5d5c:	mov	x2, #0x8000000000000003    	// #-9223372036854775805
    5d60:	cmp	x1, x2
    5d64:	b.ge	5c54 <mpc_acos@@Base+0x594>  // b.tcont
    5d68:	mov	x0, #0x2                   	// #2
    5d6c:	movk	x0, #0x8000, lsl #48
    5d70:	cmp	x1, x0
    5d74:	b.eq	5c4c <mpc_acos@@Base+0x58c>  // b.none
    5d78:	ldr	x2, [x22, #48]
    5d7c:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
    5d80:	cmp	x2, x0
    5d84:	b.ge	5d98 <mpc_acos@@Base+0x6d8>  // b.tcont
    5d88:	mov	x0, #0x2                   	// #2
    5d8c:	movk	x0, #0x8000, lsl #48
    5d90:	cmp	x2, x0
    5d94:	b.eq	5dc8 <mpc_acos@@Base+0x708>  // b.none
    5d98:	adrp	x4, 15000 <mpc_ui_ui_sub@@Base+0x1228>
    5d9c:	add	x4, x4, #0x1f0
    5da0:	mov	w3, #0xca                  	// #202
    5da4:	adrp	x2, 15000 <mpc_ui_ui_sub@@Base+0x1228>
    5da8:	add	x2, x2, #0x230
    5dac:	adrp	x1, 15000 <mpc_ui_ui_sub@@Base+0x1228>
    5db0:	add	x1, x1, #0x238
    5db4:	adrp	x0, 27000 <mpc_ui_ui_sub@@Base+0x13228>
    5db8:	ldr	x0, [x0, #4008]
    5dbc:	ldr	x0, [x0]
    5dc0:	bl	55a0 <fprintf@plt>
    5dc4:	bl	5000 <abort@plt>
    5dc8:	bl	4b00 <mpfr_set_erangeflag@plt>
    5dcc:	b	5d98 <mpc_acos@@Base+0x6d8>
    5dd0:	mov	w2, w28
    5dd4:	add	x1, sp, #0xc0
    5dd8:	ldr	x0, [sp, #120]
    5ddc:	bl	5580 <mpc_set@plt>
    5de0:	and	w19, w0, #0x3
    5de4:	cmp	w19, #0x2
    5de8:	b.eq	5e94 <mpc_acos@@Base+0x7d4>  // b.none
    5dec:	add	x0, sp, #0xc0
    5df0:	bl	4a10 <mpc_clear@plt>
    5df4:	add	x0, sp, #0xa0
    5df8:	bl	4d60 <mpfr_clear@plt>
    5dfc:	cmp	w19, #0x0
    5e00:	cset	w19, ne  // ne = any
    5e04:	cmp	w25, #0x0
    5e08:	b.le	5e24 <mpc_acos@@Base+0x764>
    5e0c:	mov	w25, #0x8                   	// #8
    5e10:	orr	w0, w19, w25
    5e14:	ldp	x23, x24, [sp, #48]
    5e18:	ldp	x25, x26, [sp, #64]
    5e1c:	ldp	x27, x28, [sp, #80]
    5e20:	b	5e74 <mpc_acos@@Base+0x7b4>
    5e24:	cmp	w25, #0x0
    5e28:	mov	w0, #0x4                   	// #4
    5e2c:	csel	w25, w25, w0, eq  // eq = none
    5e30:	b	5e10 <mpc_acos@@Base+0x750>
    5e34:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
    5e38:	cmp	x0, x1
    5e3c:	b.ne	57cc <mpc_acos@@Base+0x10c>  // b.any
    5e40:	ldp	x27, x28, [sp, #80]
    5e44:	ldr	w0, [x22, #40]
    5e48:	mov	w1, #0xffffffff            	// #-1
    5e4c:	cmp	w0, #0x0
    5e50:	cneg	w1, w1, lt  // lt = tstop
    5e54:	ldr	x19, [sp, #120]
    5e58:	add	x0, x19, #0x20
    5e5c:	bl	5120 <mpfr_set_inf@plt>
    5e60:	mov	x0, x19
    5e64:	bl	4a40 <mpfr_set_nan@plt>
    5e68:	mov	w19, #0x0                   	// #0
    5e6c:	cmp	w19, #0x0
    5e70:	cset	w0, ne  // ne = any
    5e74:	ldp	x19, x20, [sp, #16]
    5e78:	ldp	x21, x22, [sp, #32]
    5e7c:	ldp	x29, x30, [sp], #256
    5e80:	ret
    5e84:	mov	w1, #0x1                   	// #1
    5e88:	bl	5120 <mpfr_set_inf@plt>
    5e8c:	mov	w19, #0x0                   	// #0
    5e90:	b	5860 <mpc_acos@@Base+0x1a0>
    5e94:	add	x0, sp, #0xc0
    5e98:	bl	4a10 <mpc_clear@plt>
    5e9c:	add	x0, sp, #0xa0
    5ea0:	bl	4d60 <mpfr_clear@plt>
    5ea4:	b	5e04 <mpc_acos@@Base+0x744>

0000000000005ea8 <mpc_acosh@@Base>:
    5ea8:	stp	x29, x30, [sp, #-160]!
    5eac:	mov	x29, sp
    5eb0:	stp	x19, x20, [sp, #16]
    5eb4:	stp	x21, x22, [sp, #32]
    5eb8:	mov	x21, x0
    5ebc:	mov	x19, x1
    5ec0:	mov	w20, w2
    5ec4:	ldr	x1, [x1, #16]
    5ec8:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
    5ecc:	cmp	x1, x0
    5ed0:	b.ne	5ee4 <mpc_acosh@@Base+0x3c>  // b.any
    5ed4:	ldr	x1, [x19, #48]
    5ed8:	add	x0, x0, #0x1
    5edc:	cmp	x1, x0
    5ee0:	b.eq	5fd8 <mpc_acosh@@Base+0x130>  // b.none
    5ee4:	ldr	x2, [x21]
    5ee8:	ldr	x1, [x21, #32]
    5eec:	add	x0, sp, #0x60
    5ef0:	bl	53c0 <mpc_init3@plt>
    5ef4:	ldr	w0, [x19, #40]
    5ef8:	tbnz	w0, #31, 5ff0 <mpc_acosh@@Base+0x148>
    5efc:	str	x23, [sp, #48]
    5f00:	asr	w2, w20, #4
    5f04:	and	w1, w20, #0xf
    5f08:	mov	w0, #0x30                  	// #48
    5f0c:	cmp	w1, #0x2
    5f10:	b.eq	5f24 <mpc_acosh@@Base+0x7c>  // b.none
    5f14:	ubfiz	w0, w20, #4, #4
    5f18:	cmp	w1, #0x3
    5f1c:	mov	w1, #0x20                  	// #32
    5f20:	csel	w0, w0, w1, ne  // ne = any
    5f24:	add	x23, sp, #0x60
    5f28:	add	w2, w2, w0
    5f2c:	mov	x1, x19
    5f30:	mov	x0, x23
    5f34:	bl	5070 <mpc_acos@plt>
    5f38:	mov	w22, w0
    5f3c:	ldp	x2, x3, [sp, #96]
    5f40:	ldp	x0, x1, [sp, #112]
    5f44:	ldp	x4, x5, [sp, #128]
    5f48:	stp	x4, x5, [sp, #96]
    5f4c:	ldp	x4, x5, [sp, #144]
    5f50:	stp	x4, x5, [sp, #112]
    5f54:	stp	x2, x3, [sp, #128]
    5f58:	stp	x0, x1, [sp, #144]
    5f5c:	mov	w2, #0x0                   	// #0
    5f60:	mov	x1, x23
    5f64:	mov	x0, x23
    5f68:	bl	4b80 <mpfr_neg@plt>
    5f6c:	asr	w0, w22, #2
    5f70:	mov	w19, #0x2                   	// #2
    5f74:	tst	w0, #0xfffffffd
    5f78:	b.ne	5f84 <mpc_acosh@@Base+0xdc>  // b.any
    5f7c:	cmp	w0, #0x0
    5f80:	cset	w19, ne  // ne = any
    5f84:	and	w0, w22, #0x3
    5f88:	cmp	w0, #0x2
    5f8c:	b.eq	608c <mpc_acosh@@Base+0x1e4>  // b.none
    5f90:	cmp	w0, #0x0
    5f94:	mov	w1, #0x4                   	// #4
    5f98:	csel	w0, w0, w1, eq  // eq = none
    5f9c:	orr	w19, w19, w0
    5fa0:	ldr	x23, [sp, #48]
    5fa4:	add	x0, sp, #0x60
    5fa8:	mov	w2, w20
    5fac:	mov	x20, x0
    5fb0:	mov	x1, x0
    5fb4:	mov	x0, x21
    5fb8:	bl	5580 <mpc_set@plt>
    5fbc:	mov	x0, x20
    5fc0:	bl	4a10 <mpc_clear@plt>
    5fc4:	mov	w0, w19
    5fc8:	ldp	x19, x20, [sp, #16]
    5fcc:	ldp	x21, x22, [sp, #32]
    5fd0:	ldp	x29, x30, [sp], #160
    5fd4:	ret
    5fd8:	mov	x0, x21
    5fdc:	bl	4a40 <mpfr_set_nan@plt>
    5fe0:	add	x0, x21, #0x20
    5fe4:	bl	4a40 <mpfr_set_nan@plt>
    5fe8:	mov	w19, #0x0                   	// #0
    5fec:	b	5fc4 <mpc_acosh@@Base+0x11c>
    5ff0:	asr	w1, w20, #4
    5ff4:	cmp	w1, #0x2
    5ff8:	b.eq	6084 <mpc_acosh@@Base+0x1dc>  // b.none
    5ffc:	cmp	w1, #0x3
    6000:	mov	w0, #0x2                   	// #2
    6004:	csel	w1, w1, w0, ne  // ne = any
    6008:	ubfiz	w2, w20, #4, #4
    600c:	add	x0, sp, #0x60
    6010:	add	w2, w2, w1
    6014:	mov	x1, x19
    6018:	mov	x19, x0
    601c:	bl	5070 <mpc_acos@plt>
    6020:	mov	w22, w0
    6024:	ldp	x2, x3, [sp, #96]
    6028:	ldp	x0, x1, [sp, #112]
    602c:	ldp	x4, x5, [sp, #128]
    6030:	stp	x4, x5, [sp, #96]
    6034:	ldp	x4, x5, [sp, #144]
    6038:	stp	x4, x5, [sp, #112]
    603c:	stp	x2, x3, [sp, #128]
    6040:	stp	x0, x1, [sp, #144]
    6044:	add	x0, x19, #0x20
    6048:	mov	w2, #0x0                   	// #0
    604c:	mov	x1, x0
    6050:	bl	4b80 <mpfr_neg@plt>
    6054:	asr	w19, w22, #2
    6058:	cmp	w19, #0x2
    605c:	b.eq	6068 <mpc_acosh@@Base+0x1c0>  // b.none
    6060:	cmp	w19, #0x0
    6064:	cset	w19, ne  // ne = any
    6068:	mov	w0, #0x8                   	// #8
    606c:	tbnz	w22, #0, 607c <mpc_acosh@@Base+0x1d4>
    6070:	ands	w0, w22, #0x3
    6074:	mov	w1, #0x4                   	// #4
    6078:	csel	w0, w0, w1, eq  // eq = none
    607c:	orr	w19, w19, w0
    6080:	b	5fa4 <mpc_acosh@@Base+0xfc>
    6084:	mov	w1, #0x3                   	// #3
    6088:	b	6008 <mpc_acosh@@Base+0x160>
    608c:	mov	w0, #0x8                   	// #8
    6090:	b	5f9c <mpc_acosh@@Base+0xf4>

0000000000006094 <mpc_add@@Base>:
    6094:	stp	x29, x30, [sp, #-64]!
    6098:	mov	x29, sp
    609c:	stp	x19, x20, [sp, #16]
    60a0:	stp	x21, x22, [sp, #32]
    60a4:	str	x23, [sp, #48]
    60a8:	mov	x21, x0
    60ac:	mov	x22, x1
    60b0:	mov	x23, x2
    60b4:	mov	w19, w3
    60b8:	and	w3, w3, #0xf
    60bc:	bl	4e60 <mpfr_add@plt>
    60c0:	mov	w20, w0
    60c4:	asr	w3, w19, #4
    60c8:	add	x2, x23, #0x20
    60cc:	add	x1, x22, #0x20
    60d0:	add	x0, x21, #0x20
    60d4:	bl	4e60 <mpfr_add@plt>
    60d8:	mov	w1, #0x2                   	// #2
    60dc:	tbnz	w20, #31, 60e8 <mpc_add@@Base+0x54>
    60e0:	cmp	w20, #0x0
    60e4:	cset	w1, ne  // ne = any
    60e8:	tbnz	w0, #31, 6110 <mpc_add@@Base+0x7c>
    60ec:	cmp	w0, #0x0
    60f0:	mov	w2, #0x4                   	// #4
    60f4:	csel	w0, w0, w2, eq  // eq = none
    60f8:	orr	w0, w1, w0
    60fc:	ldp	x19, x20, [sp, #16]
    6100:	ldp	x21, x22, [sp, #32]
    6104:	ldr	x23, [sp, #48]
    6108:	ldp	x29, x30, [sp], #64
    610c:	ret
    6110:	mov	w0, #0x8                   	// #8
    6114:	b	60f8 <mpc_add@@Base+0x64>

0000000000006118 <mpc_add_fr@@Base>:
    6118:	stp	x29, x30, [sp, #-48]!
    611c:	mov	x29, sp
    6120:	stp	x19, x20, [sp, #16]
    6124:	stp	x21, x22, [sp, #32]
    6128:	mov	x22, x0
    612c:	mov	x19, x1
    6130:	mov	w20, w3
    6134:	and	w3, w3, #0xf
    6138:	bl	4e60 <mpfr_add@plt>
    613c:	mov	w21, w0
    6140:	ldr	w3, [x19, #40]
    6144:	asr	w2, w20, #4
    6148:	add	x1, x19, #0x20
    614c:	add	x0, x22, #0x20
    6150:	bl	51d0 <mpfr_set4@plt>
    6154:	mov	w1, #0x2                   	// #2
    6158:	tbnz	w21, #31, 6164 <mpc_add_fr@@Base+0x4c>
    615c:	cmp	w21, #0x0
    6160:	cset	w1, ne  // ne = any
    6164:	tbnz	w0, #31, 6188 <mpc_add_fr@@Base+0x70>
    6168:	cmp	w0, #0x0
    616c:	mov	w2, #0x4                   	// #4
    6170:	csel	w0, w0, w2, eq  // eq = none
    6174:	orr	w0, w1, w0
    6178:	ldp	x19, x20, [sp, #16]
    617c:	ldp	x21, x22, [sp, #32]
    6180:	ldp	x29, x30, [sp], #48
    6184:	ret
    6188:	mov	w0, #0x8                   	// #8
    618c:	b	6174 <mpc_add_fr@@Base+0x5c>

0000000000006190 <mpc_add_si@@Base>:
    6190:	stp	x29, x30, [sp, #-48]!
    6194:	mov	x29, sp
    6198:	stp	x19, x20, [sp, #16]
    619c:	stp	x21, x22, [sp, #32]
    61a0:	mov	x22, x0
    61a4:	mov	x19, x1
    61a8:	mov	w20, w3
    61ac:	and	w3, w3, #0xf
    61b0:	bl	5260 <mpfr_add_si@plt>
    61b4:	mov	w21, w0
    61b8:	ldr	w3, [x19, #40]
    61bc:	asr	w2, w20, #4
    61c0:	add	x1, x19, #0x20
    61c4:	add	x0, x22, #0x20
    61c8:	bl	51d0 <mpfr_set4@plt>
    61cc:	mov	w1, #0x2                   	// #2
    61d0:	tbnz	w21, #31, 61dc <mpc_add_si@@Base+0x4c>
    61d4:	cmp	w21, #0x0
    61d8:	cset	w1, ne  // ne = any
    61dc:	tbnz	w0, #31, 6200 <mpc_add_si@@Base+0x70>
    61e0:	cmp	w0, #0x0
    61e4:	mov	w2, #0x4                   	// #4
    61e8:	csel	w0, w0, w2, eq  // eq = none
    61ec:	orr	w0, w1, w0
    61f0:	ldp	x19, x20, [sp, #16]
    61f4:	ldp	x21, x22, [sp, #32]
    61f8:	ldp	x29, x30, [sp], #48
    61fc:	ret
    6200:	mov	w0, #0x8                   	// #8
    6204:	b	61ec <mpc_add_si@@Base+0x5c>

0000000000006208 <mpc_add_ui@@Base>:
    6208:	stp	x29, x30, [sp, #-48]!
    620c:	mov	x29, sp
    6210:	stp	x19, x20, [sp, #16]
    6214:	stp	x21, x22, [sp, #32]
    6218:	mov	x22, x0
    621c:	mov	x19, x1
    6220:	mov	w20, w3
    6224:	and	w3, w3, #0xf
    6228:	bl	4ee0 <mpfr_add_ui@plt>
    622c:	mov	w21, w0
    6230:	ldr	w3, [x19, #40]
    6234:	asr	w2, w20, #4
    6238:	add	x1, x19, #0x20
    623c:	add	x0, x22, #0x20
    6240:	bl	51d0 <mpfr_set4@plt>
    6244:	mov	w1, #0x2                   	// #2
    6248:	tbnz	w21, #31, 6254 <mpc_add_ui@@Base+0x4c>
    624c:	cmp	w21, #0x0
    6250:	cset	w1, ne  // ne = any
    6254:	tbnz	w0, #31, 6278 <mpc_add_ui@@Base+0x70>
    6258:	cmp	w0, #0x0
    625c:	mov	w2, #0x4                   	// #4
    6260:	csel	w0, w0, w2, eq  // eq = none
    6264:	orr	w0, w1, w0
    6268:	ldp	x19, x20, [sp, #16]
    626c:	ldp	x21, x22, [sp, #32]
    6270:	ldp	x29, x30, [sp], #48
    6274:	ret
    6278:	mov	w0, #0x8                   	// #8
    627c:	b	6264 <mpc_add_ui@@Base+0x5c>

0000000000006280 <mpc_arg@@Base>:
    6280:	stp	x29, x30, [sp, #-16]!
    6284:	mov	x29, sp
    6288:	mov	w3, w2
    628c:	mov	x2, x1
    6290:	add	x1, x1, #0x20
    6294:	bl	4ca0 <mpfr_atan2@plt>
    6298:	ldp	x29, x30, [sp], #16
    629c:	ret

00000000000062a0 <mpc_asin@@Base>:
    62a0:	stp	x29, x30, [sp, #-240]!
    62a4:	mov	x29, sp
    62a8:	stp	x19, x20, [sp, #16]
    62ac:	stp	x23, x24, [sp, #48]
    62b0:	str	x0, [sp, #112]
    62b4:	mov	x24, x1
    62b8:	str	w2, [sp, #128]
    62bc:	ldr	x0, [x1, #16]
    62c0:	mov	x1, #0x2                   	// #2
    62c4:	movk	x1, #0x8000, lsl #48
    62c8:	cmp	x0, x1
    62cc:	b.eq	6560 <mpc_asin@@Base+0x2c0>  // b.none
    62d0:	ldr	x19, [x24, #48]
    62d4:	cmp	x19, x1
    62d8:	b.eq	6a54 <mpc_asin@@Base+0x7b4>  // b.none
    62dc:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
    62e0:	cmp	x19, x1
    62e4:	ccmp	x0, x1, #0x4, ne  // ne = any
    62e8:	b.eq	65b8 <mpc_asin@@Base+0x318>  // b.none
    62ec:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
    62f0:	cmp	x19, x1
    62f4:	b.eq	667c <mpc_asin@@Base+0x3dc>  // b.none
    62f8:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
    62fc:	cmp	x0, x1
    6300:	b.eq	686c <mpc_asin@@Base+0x5cc>  // b.none
    6304:	stp	x21, x22, [sp, #32]
    6308:	stp	x25, x26, [sp, #64]
    630c:	stp	x27, x28, [sp, #80]
    6310:	ldr	x1, [sp, #112]
    6314:	ldr	x0, [x1]
    6318:	str	x0, [sp, #120]
    631c:	ldr	x1, [x1, #32]
    6320:	str	x1, [sp, #136]
    6324:	ldr	w2, [sp, #128]
    6328:	and	w3, w2, #0xf
    632c:	str	w3, [sp, #108]
    6330:	asr	w2, w2, #4
    6334:	str	w2, [sp, #132]
    6338:	cmp	x0, x1
    633c:	csel	x20, x0, x1, ge  // ge = tcont
    6340:	mov	x1, x20
    6344:	add	x0, sp, #0xb0
    6348:	bl	4cf0 <mpc_init2@plt>
    634c:	mov	w23, #0x0                   	// #0
    6350:	add	x19, sp, #0xb0
    6354:	add	x21, x19, #0x20
    6358:	add	w23, w23, #0x1
    635c:	cmp	w23, #0x2
    6360:	b.gt	68cc <mpc_asin@@Base+0x62c>
    6364:	mov	x0, x20
    6368:	bl	4d20 <mpc_ceil_log2@plt>
    636c:	add	x0, x0, #0x3
    6370:	add	x20, x20, x0
    6374:	mov	x1, x20
    6378:	mov	x0, x19
    637c:	bl	4c80 <mpfr_set_prec@plt>
    6380:	mov	x1, x20
    6384:	mov	x0, x21
    6388:	bl	4c80 <mpfr_set_prec@plt>
    638c:	cmp	w23, #0x1
    6390:	b.eq	68f4 <mpc_asin@@Base+0x654>  // b.none
    6394:	mov	w2, #0x0                   	// #0
    6398:	mov	x1, x24
    639c:	mov	x0, x19
    63a0:	bl	4f30 <mpc_sqr@plt>
    63a4:	ldr	x25, [sp, #192]
    63a8:	mov	w3, #0x0                   	// #0
    63ac:	mov	x2, x19
    63b0:	mov	x1, #0x1                   	// #1
    63b4:	mov	x0, x19
    63b8:	bl	5430 <mpfr_ui_sub@plt>
    63bc:	mov	w2, #0x0                   	// #0
    63c0:	mov	x1, x21
    63c4:	mov	x0, x21
    63c8:	bl	4b80 <mpfr_neg@plt>
    63cc:	ldr	x26, [sp, #192]
    63d0:	ldr	x28, [sp, #224]
    63d4:	mov	w2, #0x0                   	// #0
    63d8:	mov	x1, x19
    63dc:	mov	x0, x19
    63e0:	bl	4b40 <mpc_sqrt@plt>
    63e4:	ldr	x27, [sp, #192]
    63e8:	ldr	x22, [sp, #224]
    63ec:	mov	w3, #0x0                   	// #0
    63f0:	add	x2, x24, #0x20
    63f4:	mov	x1, x19
    63f8:	mov	x0, x19
    63fc:	bl	4a60 <mpfr_sub@plt>
    6400:	mov	w3, #0x0                   	// #0
    6404:	mov	x2, x24
    6408:	mov	x1, x21
    640c:	mov	x0, x21
    6410:	bl	4e60 <mpfr_add@plt>
    6414:	mov	x0, x19
    6418:	bl	51f0 <mpfr_sgn@plt>
    641c:	cbz	w0, 6358 <mpc_asin@@Base+0xb8>
    6420:	mov	x0, x21
    6424:	bl	51f0 <mpfr_sgn@plt>
    6428:	cbz	w0, 6358 <mpc_asin@@Base+0xb8>
    642c:	ldr	x3, [sp, #192]
    6430:	sub	x4, x27, x3
    6434:	ldr	x2, [sp, #224]
    6438:	subs	x0, x25, x26
    643c:	csel	x0, x0, xzr, pl  // pl = nfrst
    6440:	add	x0, x0, x26
    6444:	sub	x1, x0, x20
    6448:	sub	x0, x28, x20
    644c:	sub	x0, x0, #0x1
    6450:	cmp	x0, x1
    6454:	csel	x0, x0, x1, ge  // ge = tcont
    6458:	lsl	x0, x0, #1
    645c:	cmp	x26, x28
    6460:	csel	x26, x26, x28, ge  // ge = tcont
    6464:	sub	x26, x0, x26
    6468:	add	x26, x26, #0x1
    646c:	add	x26, x26, x26, lsr #63
    6470:	asr	x26, x26, #1
    6474:	cmp	x27, x22
    6478:	csel	x27, x27, x22, le
    647c:	sub	x27, x26, x27
    6480:	adds	x27, x27, x20
    6484:	csel	x27, x27, xzr, pl  // pl = nfrst
    6488:	add	x27, x27, #0x1
    648c:	sub	x22, x22, x2
    6490:	cmp	x22, x4
    6494:	csel	x22, x22, x4, ge  // ge = tcont
    6498:	adds	x27, x22, x27
    649c:	csel	x27, x27, xzr, pl  // pl = nfrst
    64a0:	add	x27, x27, #0x1
    64a4:	cmp	x3, x2
    64a8:	csel	x25, x3, x2, ge  // ge = tcont
    64ac:	sub	x22, x25, x20
    64b0:	add	x22, x22, x27
    64b4:	mov	w2, #0x0                   	// #0
    64b8:	mov	x1, x19
    64bc:	mov	x0, x19
    64c0:	bl	4db0 <mpc_log@plt>
    64c4:	sub	x25, x25, #0x1
    64c8:	sub	x22, x22, x25
    64cc:	ldr	x1, [sp, #224]
    64d0:	ldr	x0, [sp, #192]
    64d4:	cmp	x0, x1
    64d8:	csel	x0, x0, x1, le
    64dc:	sub	x22, x22, x0
    64e0:	adds	x22, x22, x20
    64e4:	csel	x22, x22, xzr, pl  // pl = nfrst
    64e8:	mov	x1, x21
    64ec:	mov	x0, x19
    64f0:	bl	5090 <mpfr_swap@plt>
    64f4:	mov	w2, #0x0                   	// #0
    64f8:	mov	x1, x21
    64fc:	mov	x0, x21
    6500:	bl	4b80 <mpfr_neg@plt>
    6504:	add	x22, x22, #0x1
    6508:	sub	x22, x20, x22
    650c:	ldr	w0, [sp, #108]
    6510:	cmp	w0, #0x0
    6514:	ldr	x0, [sp, #120]
    6518:	cinc	x4, x0, eq  // eq = none
    651c:	mov	w3, #0x1                   	// #1
    6520:	mov	w2, #0x0                   	// #0
    6524:	mov	x1, x22
    6528:	mov	x0, x19
    652c:	bl	5450 <mpfr_can_round@plt>
    6530:	cbz	w0, 6358 <mpc_asin@@Base+0xb8>
    6534:	ldr	w0, [sp, #132]
    6538:	cmp	w0, #0x0
    653c:	ldr	x0, [sp, #136]
    6540:	cinc	x4, x0, eq  // eq = none
    6544:	mov	w3, #0x1                   	// #1
    6548:	mov	w2, #0x0                   	// #0
    654c:	mov	x1, x22
    6550:	mov	x0, x21
    6554:	bl	5450 <mpfr_can_round@plt>
    6558:	cbz	w0, 6358 <mpc_asin@@Base+0xb8>
    655c:	b	6a0c <mpc_asin@@Base+0x76c>
    6560:	ldr	x1, [x24, #48]
    6564:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
    6568:	cmp	x1, x0
    656c:	b.eq	658c <mpc_asin@@Base+0x2ec>  // b.none
    6570:	ldr	x19, [sp, #112]
    6574:	mov	x0, x19
    6578:	bl	4a40 <mpfr_set_nan@plt>
    657c:	add	x0, x19, #0x20
    6580:	bl	4a40 <mpfr_set_nan@plt>
    6584:	mov	w19, #0x0                   	// #0
    6588:	b	6a38 <mpc_asin@@Base+0x798>
    658c:	ldr	x19, [sp, #112]
    6590:	mov	x0, x19
    6594:	bl	4a40 <mpfr_set_nan@plt>
    6598:	ldr	w0, [x24, #40]
    659c:	mov	w1, #0x1                   	// #1
    65a0:	cmp	w0, #0x0
    65a4:	cneg	w1, w1, lt  // lt = tstop
    65a8:	add	x0, x19, #0x20
    65ac:	bl	5120 <mpfr_set_inf@plt>
    65b0:	mov	w19, #0x0                   	// #0
    65b4:	b	6a38 <mpc_asin@@Base+0x798>
    65b8:	cmp	x0, x1
    65bc:	b.eq	6604 <mpc_asin@@Base+0x364>  // b.none
    65c0:	ldr	w0, [x24, #8]
    65c4:	mov	w1, #0x1                   	// #1
    65c8:	cmp	w0, #0x0
    65cc:	cneg	w1, w1, lt  // lt = tstop
    65d0:	ldr	x19, [sp, #112]
    65d4:	mov	x0, x19
    65d8:	bl	4d10 <mpfr_set_zero@plt>
    65dc:	ldr	w0, [x24, #40]
    65e0:	mov	w1, #0x1                   	// #1
    65e4:	cmp	w0, #0x0
    65e8:	cneg	w1, w1, lt  // lt = tstop
    65ec:	add	x0, x19, #0x20
    65f0:	bl	5120 <mpfr_set_inf@plt>
    65f4:	mov	w20, #0x0                   	// #0
    65f8:	cmp	w20, #0x0
    65fc:	cset	w19, ne  // ne = any
    6600:	b	6a38 <mpc_asin@@Base+0x798>
    6604:	stp	x21, x22, [sp, #32]
    6608:	ldr	w0, [x24, #8]
    660c:	mov	w1, #0x1                   	// #1
    6610:	cmp	w0, #0x0
    6614:	ldr	w0, [sp, #128]
    6618:	and	w2, w0, #0xf
    661c:	cneg	w1, w1, lt  // lt = tstop
    6620:	ldr	x21, [sp, #112]
    6624:	mov	x0, x21
    6628:	bl	53f0 <set_pi_over_2@plt>
    662c:	mov	w20, w0
    6630:	ldr	w0, [x24, #40]
    6634:	mov	w1, #0x1                   	// #1
    6638:	cmp	w0, #0x0
    663c:	cneg	w1, w1, lt  // lt = tstop
    6640:	add	x0, x21, #0x20
    6644:	bl	5120 <mpfr_set_inf@plt>
    6648:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
    664c:	cmp	x19, x0
    6650:	b.eq	6664 <mpc_asin@@Base+0x3c4>  // b.none
    6654:	mov	w19, #0x2                   	// #2
    6658:	tbnz	w20, #31, 6b48 <mpc_asin@@Base+0x8a8>
    665c:	ldp	x21, x22, [sp, #32]
    6660:	b	65f8 <mpc_asin@@Base+0x358>
    6664:	mov	w3, #0x0                   	// #0
    6668:	mov	x2, #0x1                   	// #1
    666c:	ldr	x0, [sp, #112]
    6670:	mov	x1, x0
    6674:	bl	5320 <mpfr_div_2ui@plt>
    6678:	b	6654 <mpc_asin@@Base+0x3b4>
    667c:	ldr	w19, [x24, #40]
    6680:	mov	x2, #0x0                   	// #0
    6684:	mov	x1, #0x1                   	// #1
    6688:	mov	x0, x24
    668c:	bl	4cb0 <mpfr_cmp_ui_2exp@plt>
    6690:	cmp	w0, #0x0
    6694:	b.le	6738 <mpc_asin@@Base+0x498>
    6698:	tbz	w19, #31, 66f8 <mpc_asin@@Base+0x458>
    669c:	ldr	x0, [sp, #112]
    66a0:	add	x0, x0, #0x20
    66a4:	ldr	w1, [sp, #128]
    66a8:	asr	w2, w1, #4
    66ac:	cmp	w2, #0x2
    66b0:	b.eq	66f0 <mpc_asin@@Base+0x450>  // b.none
    66b4:	cmp	w2, #0x3
    66b8:	mov	w1, #0x2                   	// #2
    66bc:	csel	w2, w2, w1, ne  // ne = any
    66c0:	mov	x1, x24
    66c4:	bl	50e0 <mpfr_acosh@plt>
    66c8:	neg	w19, w0
    66cc:	ldr	w0, [x24, #8]
    66d0:	tbz	w0, #31, 6a94 <mpc_asin@@Base+0x7f4>
    66d4:	ldr	w0, [sp, #128]
    66d8:	and	w2, w0, #0xf
    66dc:	mov	w1, #0xffffffff            	// #-1
    66e0:	ldr	x0, [sp, #112]
    66e4:	bl	53f0 <set_pi_over_2@plt>
    66e8:	mov	w20, w0
    66ec:	b	6aac <mpc_asin@@Base+0x80c>
    66f0:	mov	w2, #0x3                   	// #3
    66f4:	b	66c0 <mpc_asin@@Base+0x420>
    66f8:	ldr	w0, [sp, #128]
    66fc:	asr	w2, w0, #4
    6700:	mov	x1, x24
    6704:	ldr	x0, [sp, #112]
    6708:	add	x0, x0, #0x20
    670c:	bl	50e0 <mpfr_acosh@plt>
    6710:	mov	w19, w0
    6714:	ldr	w0, [x24, #8]
    6718:	tbnz	w0, #31, 6ae4 <mpc_asin@@Base+0x844>
    671c:	ldr	w0, [sp, #128]
    6720:	and	w2, w0, #0xf
    6724:	mov	w1, #0x1                   	// #1
    6728:	ldr	x0, [sp, #112]
    672c:	bl	53f0 <set_pi_over_2@plt>
    6730:	mov	w20, w0
    6734:	b	6abc <mpc_asin@@Base+0x81c>
    6738:	mov	x2, #0x0                   	// #0
    673c:	mov	x1, #0xffffffffffffffff    	// #-1
    6740:	mov	x0, x24
    6744:	bl	4fe0 <mpfr_cmp_si_2exp@plt>
    6748:	tbnz	w0, #31, 678c <mpc_asin@@Base+0x4ec>
    674c:	ldr	x0, [sp, #112]
    6750:	mov	w1, #0x1                   	// #1
    6754:	str	w1, [x0, #40]
    6758:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
    675c:	str	x1, [x0, #48]
    6760:	tbnz	w19, #31, 684c <mpc_asin@@Base+0x5ac>
    6764:	ldr	w0, [sp, #128]
    6768:	and	w2, w0, #0xf
    676c:	mov	x1, x24
    6770:	ldr	x0, [sp, #112]
    6774:	bl	4e40 <mpfr_asin@plt>
    6778:	mov	w20, w0
    677c:	mov	w19, #0x0                   	// #0
    6780:	mov	w0, #0x2                   	// #2
    6784:	tbz	w20, #31, 6ac4 <mpc_asin@@Base+0x824>
    6788:	b	6adc <mpc_asin@@Base+0x83c>
    678c:	add	x0, sp, #0x90
    6790:	ldp	x2, x3, [x24]
    6794:	stp	x2, x3, [sp, #144]
    6798:	ldp	x2, x3, [x24, #16]
    679c:	stp	x2, x3, [sp, #160]
    67a0:	mov	w2, #0x0                   	// #0
    67a4:	mov	x1, x0
    67a8:	bl	4b80 <mpfr_neg@plt>
    67ac:	tbz	w19, #31, 680c <mpc_asin@@Base+0x56c>
    67b0:	ldr	x0, [sp, #112]
    67b4:	add	x0, x0, #0x20
    67b8:	ldr	w1, [sp, #128]
    67bc:	asr	w2, w1, #4
    67c0:	cmp	w2, #0x2
    67c4:	b.eq	6804 <mpc_asin@@Base+0x564>  // b.none
    67c8:	cmp	w2, #0x3
    67cc:	mov	w1, #0x2                   	// #2
    67d0:	csel	w2, w2, w1, ne  // ne = any
    67d4:	add	x1, sp, #0x90
    67d8:	bl	50e0 <mpfr_acosh@plt>
    67dc:	neg	w19, w0
    67e0:	ldr	w0, [x24, #8]
    67e4:	tbnz	w0, #31, 6b00 <mpc_asin@@Base+0x860>
    67e8:	ldr	w0, [sp, #128]
    67ec:	and	w2, w0, #0xf
    67f0:	mov	w1, #0x1                   	// #1
    67f4:	ldr	x0, [sp, #112]
    67f8:	bl	53f0 <set_pi_over_2@plt>
    67fc:	mov	w20, w0
    6800:	b	6b18 <mpc_asin@@Base+0x878>
    6804:	mov	w2, #0x3                   	// #3
    6808:	b	67d4 <mpc_asin@@Base+0x534>
    680c:	ldr	w0, [sp, #128]
    6810:	asr	w2, w0, #4
    6814:	add	x1, sp, #0x90
    6818:	ldr	x0, [sp, #112]
    681c:	add	x0, x0, #0x20
    6820:	bl	50e0 <mpfr_acosh@plt>
    6824:	mov	w19, w0
    6828:	ldr	w0, [x24, #8]
    682c:	tbnz	w0, #31, 6b2c <mpc_asin@@Base+0x88c>
    6830:	ldr	w0, [sp, #128]
    6834:	and	w2, w0, #0xf
    6838:	mov	w1, #0x1                   	// #1
    683c:	ldr	x0, [sp, #112]
    6840:	bl	53f0 <set_pi_over_2@plt>
    6844:	mov	w20, w0
    6848:	b	6abc <mpc_asin@@Base+0x81c>
    684c:	ldr	x0, [sp, #112]
    6850:	add	x0, x0, #0x20
    6854:	mov	w2, #0x0                   	// #0
    6858:	mov	x1, x0
    685c:	bl	4b80 <mpfr_neg@plt>
    6860:	b	6764 <mpc_asin@@Base+0x4c4>
    6864:	mov	w19, #0x8                   	// #8
    6868:	b	6adc <mpc_asin@@Base+0x83c>
    686c:	ldr	w0, [x24, #8]
    6870:	mov	w1, #0x1                   	// #1
    6874:	ldr	x2, [sp, #112]
    6878:	str	w1, [x2, #8]
    687c:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
    6880:	str	x1, [x2, #16]
    6884:	tbnz	w0, #31, 68b8 <mpc_asin@@Base+0x618>
    6888:	ldr	w0, [sp, #128]
    688c:	asr	w2, w0, #4
    6890:	add	x1, x24, #0x20
    6894:	ldr	x0, [sp, #112]
    6898:	add	x0, x0, #0x20
    689c:	bl	4dc0 <mpfr_asinh@plt>
    68a0:	mov	w19, w0
    68a4:	tbnz	w0, #31, 6a4c <mpc_asin@@Base+0x7ac>
    68a8:	cmp	w0, #0x0
    68ac:	mov	w0, #0x4                   	// #4
    68b0:	csel	w19, w19, w0, eq  // eq = none
    68b4:	b	6a38 <mpc_asin@@Base+0x798>
    68b8:	mov	w2, #0x0                   	// #0
    68bc:	ldr	x0, [sp, #112]
    68c0:	mov	x1, x0
    68c4:	bl	4b80 <mpfr_neg@plt>
    68c8:	b	6888 <mpc_asin@@Base+0x5e8>
    68cc:	mov	x0, #0x2                   	// #2
    68d0:	sdiv	x0, x20, x0
    68d4:	add	x20, x20, x0
    68d8:	mov	x1, x20
    68dc:	mov	x0, x19
    68e0:	bl	4c80 <mpfr_set_prec@plt>
    68e4:	mov	x1, x20
    68e8:	mov	x0, x21
    68ec:	bl	4c80 <mpfr_set_prec@plt>
    68f0:	b	6394 <mpc_asin@@Base+0xf4>
    68f4:	ldr	x0, [x24, #48]
    68f8:	tbz	x0, #63, 6394 <mpc_asin@@Base+0xf4>
    68fc:	add	x0, x0, x0, lsr #63
    6900:	neg	x0, x0, asr #1
    6904:	ldr	x1, [sp, #176]
    6908:	cmp	x0, x1
    690c:	b.lt	6394 <mpc_asin@@Base+0xf4>  // b.tstop
    6910:	mov	w1, #0x0                   	// #0
    6914:	mov	x0, x19
    6918:	bl	4a80 <mpfr_const_pi@plt>
    691c:	mov	w3, #0x0                   	// #0
    6920:	mov	x2, #0x1                   	// #1
    6924:	mov	x1, x19
    6928:	mov	x0, x19
    692c:	bl	5320 <mpfr_div_2ui@plt>
    6930:	ldr	w0, [sp, #108]
    6934:	cmp	w0, #0x0
    6938:	ldr	x0, [sp, #112]
    693c:	ldr	x4, [x0]
    6940:	cinc	x4, x4, eq  // eq = none
    6944:	mov	w3, #0x1                   	// #1
    6948:	mov	w2, #0x0                   	// #0
    694c:	ldr	x1, [sp, #176]
    6950:	mov	x0, x19
    6954:	bl	5450 <mpfr_can_round@plt>
    6958:	cbz	w0, 6394 <mpc_asin@@Base+0xf4>
    695c:	ldp	x0, x1, [x24, #32]
    6960:	stp	x0, x1, [sp, #144]
    6964:	ldp	x0, x1, [x24, #48]
    6968:	stp	x0, x1, [sp, #160]
    696c:	ldr	w0, [x24, #40]
    6970:	tbnz	w0, #31, 69c8 <mpc_asin@@Base+0x728>
    6974:	mov	w2, #0x0                   	// #0
    6978:	add	x1, sp, #0x90
    697c:	mov	x0, x21
    6980:	bl	5350 <mpfr_sqrt@plt>
    6984:	mov	w22, w0
    6988:	ldr	w0, [x24, #40]
    698c:	tbnz	w0, #31, 69dc <mpc_asin@@Base+0x73c>
    6990:	cbz	w22, 6a04 <mpc_asin@@Base+0x764>
    6994:	ldr	w0, [sp, #132]
    6998:	cmp	w0, #0x0
    699c:	ldr	x0, [sp, #112]
    69a0:	ldr	x4, [x0, #32]
    69a4:	cinc	x4, x4, eq  // eq = none
    69a8:	mov	w3, #0x1                   	// #1
    69ac:	mov	w2, #0x4                   	// #4
    69b0:	ldr	x1, [sp, #208]
    69b4:	sub	x1, x1, #0x1
    69b8:	mov	x0, x21
    69bc:	bl	5450 <mpfr_can_round@plt>
    69c0:	cbz	w0, 6394 <mpc_asin@@Base+0xf4>
    69c4:	b	6a0c <mpc_asin@@Base+0x76c>
    69c8:	add	x0, sp, #0x90
    69cc:	mov	w2, #0x0                   	// #0
    69d0:	mov	x1, x0
    69d4:	bl	4b80 <mpfr_neg@plt>
    69d8:	b	6974 <mpc_asin@@Base+0x6d4>
    69dc:	mov	w2, #0x0                   	// #0
    69e0:	mov	x1, x21
    69e4:	mov	x0, x21
    69e8:	bl	4b80 <mpfr_neg@plt>
    69ec:	cbnz	w22, 6994 <mpc_asin@@Base+0x6f4>
    69f0:	ldr	w0, [x24, #40]
    69f4:	tbz	w0, #31, 6a04 <mpc_asin@@Base+0x764>
    69f8:	add	x0, sp, #0xd0
    69fc:	bl	4bb0 <mpfr_nextbelow@plt>
    6a00:	b	6a0c <mpc_asin@@Base+0x76c>
    6a04:	add	x0, sp, #0xd0
    6a08:	bl	4e00 <mpfr_nextabove@plt>
    6a0c:	add	x20, sp, #0xb0
    6a10:	ldr	w2, [sp, #128]
    6a14:	mov	x1, x20
    6a18:	ldr	x0, [sp, #112]
    6a1c:	bl	5580 <mpc_set@plt>
    6a20:	mov	w19, w0
    6a24:	mov	x0, x20
    6a28:	bl	4a10 <mpc_clear@plt>
    6a2c:	ldp	x21, x22, [sp, #32]
    6a30:	ldp	x25, x26, [sp, #64]
    6a34:	ldp	x27, x28, [sp, #80]
    6a38:	mov	w0, w19
    6a3c:	ldp	x19, x20, [sp, #16]
    6a40:	ldp	x23, x24, [sp, #48]
    6a44:	ldp	x29, x30, [sp], #240
    6a48:	ret
    6a4c:	mov	w19, #0x8                   	// #8
    6a50:	b	6a38 <mpc_asin@@Base+0x798>
    6a54:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
    6a58:	cmp	x0, x1
    6a5c:	b.eq	658c <mpc_asin@@Base+0x2ec>  // b.none
    6a60:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
    6a64:	cmp	x0, x1
    6a68:	b.ne	6570 <mpc_asin@@Base+0x2d0>  // b.any
    6a6c:	ldr	w3, [x24, #8]
    6a70:	mov	w2, #0x0                   	// #0
    6a74:	mov	x1, x24
    6a78:	ldr	x19, [sp, #112]
    6a7c:	mov	x0, x19
    6a80:	bl	51d0 <mpfr_set4@plt>
    6a84:	add	x0, x19, #0x20
    6a88:	bl	4a40 <mpfr_set_nan@plt>
    6a8c:	mov	w19, #0x0                   	// #0
    6a90:	b	6a38 <mpc_asin@@Base+0x798>
    6a94:	ldr	w0, [sp, #128]
    6a98:	and	w2, w0, #0xf
    6a9c:	mov	w1, #0x1                   	// #1
    6aa0:	ldr	x0, [sp, #112]
    6aa4:	bl	53f0 <set_pi_over_2@plt>
    6aa8:	mov	w20, w0
    6aac:	mov	w2, #0x0                   	// #0
    6ab0:	ldr	x0, [sp, #112]
    6ab4:	mov	x1, x0
    6ab8:	bl	4f60 <mpc_conj@plt>
    6abc:	mov	w0, #0x2                   	// #2
    6ac0:	tbnz	w20, #31, 6acc <mpc_asin@@Base+0x82c>
    6ac4:	cmp	w20, #0x0
    6ac8:	cset	w0, ne  // ne = any
    6acc:	tbnz	w19, #31, 6864 <mpc_asin@@Base+0x5c4>
    6ad0:	cmp	w19, #0x0
    6ad4:	mov	w1, #0x4                   	// #4
    6ad8:	csel	w19, w19, w1, eq  // eq = none
    6adc:	orr	w19, w19, w0
    6ae0:	b	6a38 <mpc_asin@@Base+0x798>
    6ae4:	ldr	w0, [sp, #128]
    6ae8:	and	w2, w0, #0xf
    6aec:	mov	w1, #0xffffffff            	// #-1
    6af0:	ldr	x0, [sp, #112]
    6af4:	bl	53f0 <set_pi_over_2@plt>
    6af8:	mov	w20, w0
    6afc:	b	6abc <mpc_asin@@Base+0x81c>
    6b00:	ldr	w0, [sp, #128]
    6b04:	and	w2, w0, #0xf
    6b08:	mov	w1, #0xffffffff            	// #-1
    6b0c:	ldr	x0, [sp, #112]
    6b10:	bl	53f0 <set_pi_over_2@plt>
    6b14:	mov	w20, w0
    6b18:	mov	w2, #0x0                   	// #0
    6b1c:	ldr	x0, [sp, #112]
    6b20:	mov	x1, x0
    6b24:	bl	4f60 <mpc_conj@plt>
    6b28:	b	6abc <mpc_asin@@Base+0x81c>
    6b2c:	ldr	w0, [sp, #128]
    6b30:	and	w2, w0, #0xf
    6b34:	mov	w1, #0xffffffff            	// #-1
    6b38:	ldr	x0, [sp, #112]
    6b3c:	bl	53f0 <set_pi_over_2@plt>
    6b40:	mov	w20, w0
    6b44:	b	6abc <mpc_asin@@Base+0x81c>
    6b48:	ldp	x21, x22, [sp, #32]
    6b4c:	b	6a38 <mpc_asin@@Base+0x798>

0000000000006b50 <mpc_asinh@@Base>:
    6b50:	stp	x29, x30, [sp, #-208]!
    6b54:	mov	x29, sp
    6b58:	stp	x19, x20, [sp, #16]
    6b5c:	str	x21, [sp, #32]
    6b60:	mov	x21, x0
    6b64:	mov	w19, w2
    6b68:	add	x0, sp, #0x90
    6b6c:	ldp	x2, x3, [x1, #32]
    6b70:	stp	x2, x3, [sp, #144]
    6b74:	ldp	x2, x3, [x1, #48]
    6b78:	stp	x2, x3, [sp, #160]
    6b7c:	ldp	x2, x3, [x1]
    6b80:	stp	x2, x3, [sp, #176]
    6b84:	ldp	x2, x3, [x1, #16]
    6b88:	stp	x2, x3, [sp, #192]
    6b8c:	mov	w2, #0x0                   	// #0
    6b90:	mov	x1, x0
    6b94:	bl	4b80 <mpfr_neg@plt>
    6b98:	ldr	x2, [x21]
    6b9c:	ldr	x1, [x21, #32]
    6ba0:	add	x0, sp, #0x50
    6ba4:	bl	53c0 <mpc_init3@plt>
    6ba8:	asr	w1, w19, #4
    6bac:	cmp	w1, #0x2
    6bb0:	b.eq	6c60 <mpc_asinh@@Base+0x110>  // b.none
    6bb4:	cmp	w1, #0x3
    6bb8:	mov	w0, #0x2                   	// #2
    6bbc:	csel	w1, w1, w0, ne  // ne = any
    6bc0:	ubfiz	w2, w19, #4, #4
    6bc4:	add	x19, sp, #0x50
    6bc8:	add	w2, w2, w1
    6bcc:	add	x1, sp, #0x90
    6bd0:	mov	x0, x19
    6bd4:	bl	5480 <mpc_asin@plt>
    6bd8:	mov	w20, w0
    6bdc:	ldp	x2, x3, [sp, #80]
    6be0:	ldp	x0, x1, [sp, #96]
    6be4:	ldp	x4, x5, [sp, #112]
    6be8:	stp	x4, x5, [sp, #80]
    6bec:	ldp	x4, x5, [sp, #128]
    6bf0:	stp	x4, x5, [sp, #96]
    6bf4:	stp	x2, x3, [sp, #112]
    6bf8:	stp	x0, x1, [sp, #128]
    6bfc:	add	x0, x19, #0x20
    6c00:	mov	w2, #0x0                   	// #0
    6c04:	mov	x1, x0
    6c08:	bl	4b80 <mpfr_neg@plt>
    6c0c:	mov	w2, #0x0                   	// #0
    6c10:	mov	x1, x19
    6c14:	mov	x0, x21
    6c18:	bl	5580 <mpc_set@plt>
    6c1c:	mov	x0, x19
    6c20:	bl	4a10 <mpc_clear@plt>
    6c24:	asr	w0, w20, #2
    6c28:	cmp	w0, #0x2
    6c2c:	b.eq	6c38 <mpc_asinh@@Base+0xe8>  // b.none
    6c30:	cmp	w0, #0x0
    6c34:	cset	w0, ne  // ne = any
    6c38:	mov	w1, #0x8                   	// #8
    6c3c:	tbnz	w20, #0, 6c4c <mpc_asinh@@Base+0xfc>
    6c40:	ands	w1, w20, #0x3
    6c44:	mov	w2, #0x4                   	// #4
    6c48:	csel	w1, w1, w2, eq  // eq = none
    6c4c:	orr	w0, w0, w1
    6c50:	ldp	x19, x20, [sp, #16]
    6c54:	ldr	x21, [sp, #32]
    6c58:	ldp	x29, x30, [sp], #208
    6c5c:	ret
    6c60:	mov	w1, #0x3                   	// #3
    6c64:	b	6bc0 <mpc_asinh@@Base+0x70>

0000000000006c68 <set_pi_over_2@@Base>:
    6c68:	stp	x29, x30, [sp, #-32]!
    6c6c:	mov	x29, sp
    6c70:	stp	x19, x20, [sp, #16]
    6c74:	mov	x19, x0
    6c78:	tbnz	w1, #31, 6cac <set_pi_over_2@@Base+0x44>
    6c7c:	mov	w1, w2
    6c80:	bl	4a80 <mpfr_const_pi@plt>
    6c84:	mov	w20, w0
    6c88:	mov	w3, #0x0                   	// #0
    6c8c:	mov	x2, #0x1                   	// #1
    6c90:	mov	x1, x19
    6c94:	mov	x0, x19
    6c98:	bl	5320 <mpfr_div_2ui@plt>
    6c9c:	mov	w0, w20
    6ca0:	ldp	x19, x20, [sp, #16]
    6ca4:	ldp	x29, x30, [sp], #32
    6ca8:	ret
    6cac:	cmp	w2, #0x2
    6cb0:	b.eq	6cfc <set_pi_over_2@@Base+0x94>  // b.none
    6cb4:	cmp	w2, #0x3
    6cb8:	mov	w0, #0x2                   	// #2
    6cbc:	csel	w2, w2, w0, ne  // ne = any
    6cc0:	mov	w1, w2
    6cc4:	mov	x0, x19
    6cc8:	bl	4a80 <mpfr_const_pi@plt>
    6ccc:	mov	w20, w0
    6cd0:	mov	w3, #0x0                   	// #0
    6cd4:	mov	x2, #0x1                   	// #1
    6cd8:	mov	x1, x19
    6cdc:	mov	x0, x19
    6ce0:	bl	5320 <mpfr_div_2ui@plt>
    6ce4:	neg	w20, w20
    6ce8:	mov	w2, #0x0                   	// #0
    6cec:	mov	x1, x19
    6cf0:	mov	x0, x19
    6cf4:	bl	4b80 <mpfr_neg@plt>
    6cf8:	b	6c9c <set_pi_over_2@@Base+0x34>
    6cfc:	mov	w2, #0x3                   	// #3
    6d00:	b	6cc0 <set_pi_over_2@@Base+0x58>

0000000000006d04 <mpc_atan@@Base>:
    6d04:	stp	x29, x30, [sp, #-304]!
    6d08:	mov	x29, sp
    6d0c:	stp	x19, x20, [sp, #16]
    6d10:	stp	x25, x26, [sp, #64]
    6d14:	str	x0, [sp, #136]
    6d18:	mov	x25, x1
    6d1c:	ldr	w19, [x1, #8]
    6d20:	ldr	w20, [x1, #40]
    6d24:	ldr	x0, [x1, #16]
    6d28:	mov	x1, #0x2                   	// #2
    6d2c:	movk	x1, #0x8000, lsl #48
    6d30:	cmp	x0, x1
    6d34:	b.eq	6dfc <mpc_atan@@Base+0xf8>  // b.none
    6d38:	stp	x27, x28, [sp, #80]
    6d3c:	mov	w27, w2
    6d40:	lsr	w28, w19, #31
    6d44:	ldr	x1, [x25, #48]
    6d48:	mov	x2, #0x2                   	// #2
    6d4c:	movk	x2, #0x8000, lsl #48
    6d50:	cmp	x1, x2
    6d54:	b.eq	6e60 <mpc_atan@@Base+0x15c>  // b.none
    6d58:	stp	x21, x22, [sp, #32]
    6d5c:	mov	x2, #0x8000000000000003    	// #-9223372036854775805
    6d60:	cmp	x1, x2
    6d64:	ccmp	x0, x2, #0x4, ne  // ne = any
    6d68:	b.eq	6ee0 <mpc_atan@@Base+0x1dc>  // b.none
    6d6c:	mov	x2, #0x8000000000000001    	// #-9223372036854775807
    6d70:	cmp	x1, x2
    6d74:	b.eq	6f3c <mpc_atan@@Base+0x238>  // b.none
    6d78:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
    6d7c:	cmp	x0, x1
    6d80:	b.ne	71cc <mpc_atan@@Base+0x4c8>  // b.any
    6d84:	tbnz	w20, #31, 6f98 <mpc_atan@@Base+0x294>
    6d88:	mov	x2, #0x0                   	// #0
    6d8c:	mov	x1, #0x1                   	// #1
    6d90:	add	x0, x25, #0x20
    6d94:	bl	4cb0 <mpfr_cmp_ui_2exp@plt>
    6d98:	mov	w21, w0
    6d9c:	tbnz	w21, #31, 6fb0 <mpc_atan@@Base+0x2ac>
    6da0:	cbnz	w21, 6ff8 <mpc_atan@@Base+0x2f4>
    6da4:	mov	w1, #0x1                   	// #1
    6da8:	cmp	w19, #0x0
    6dac:	cneg	w1, w1, lt  // lt = tstop
    6db0:	ldr	x19, [sp, #136]
    6db4:	mov	x0, x19
    6db8:	bl	4d10 <mpfr_set_zero@plt>
    6dbc:	mov	w1, #0x1                   	// #1
    6dc0:	cmp	w20, #0x0
    6dc4:	cneg	w1, w1, lt  // lt = tstop
    6dc8:	add	x0, x19, #0x20
    6dcc:	bl	5120 <mpfr_set_inf@plt>
    6dd0:	mov	w20, w21
    6dd4:	cmp	w21, #0x0
    6dd8:	cset	w19, ne  // ne = any
    6ddc:	tbnz	w20, #31, 71c4 <mpc_atan@@Base+0x4c0>
    6de0:	cmp	w20, #0x0
    6de4:	mov	w0, #0x4                   	// #4
    6de8:	csel	w20, w20, w0, eq  // eq = none
    6dec:	orr	w19, w19, w20
    6df0:	ldp	x21, x22, [sp, #32]
    6df4:	ldp	x27, x28, [sp, #80]
    6df8:	b	6e90 <mpc_atan@@Base+0x18c>
    6dfc:	ldr	x19, [sp, #136]
    6e00:	mov	x0, x19
    6e04:	bl	4a40 <mpfr_set_nan@plt>
    6e08:	ldr	x0, [x25, #48]
    6e0c:	and	x0, x0, #0xfffffffffffffffd
    6e10:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
    6e14:	cmp	x0, x1
    6e18:	b.ne	6e4c <mpc_atan@@Base+0x148>  // b.any
    6e1c:	mov	w1, #0x1                   	// #1
    6e20:	str	w1, [x19, #40]
    6e24:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
    6e28:	str	x1, [x19, #48]
    6e2c:	mov	w0, #0x0                   	// #0
    6e30:	tbz	w20, #31, 6e88 <mpc_atan@@Base+0x184>
    6e34:	mov	w2, #0x0                   	// #0
    6e38:	ldr	x0, [sp, #136]
    6e3c:	mov	x1, x0
    6e40:	bl	4f60 <mpc_conj@plt>
    6e44:	mov	w0, #0x0                   	// #0
    6e48:	b	6e88 <mpc_atan@@Base+0x184>
    6e4c:	ldr	x0, [sp, #136]
    6e50:	add	x0, x0, #0x20
    6e54:	bl	4a40 <mpfr_set_nan@plt>
    6e58:	mov	w0, #0x0                   	// #0
    6e5c:	b	6e88 <mpc_atan@@Base+0x184>
    6e60:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
    6e64:	cmp	x0, x1
    6e68:	b.eq	6ea4 <mpc_atan@@Base+0x1a0>  // b.none
    6e6c:	ldr	x19, [sp, #136]
    6e70:	mov	x0, x19
    6e74:	bl	4a40 <mpfr_set_nan@plt>
    6e78:	add	x0, x19, #0x20
    6e7c:	bl	4a40 <mpfr_set_nan@plt>
    6e80:	mov	w0, #0x0                   	// #0
    6e84:	ldp	x27, x28, [sp, #80]
    6e88:	cmp	w0, #0x0
    6e8c:	cset	w19, ne  // ne = any
    6e90:	mov	w0, w19
    6e94:	ldp	x19, x20, [sp, #16]
    6e98:	ldp	x25, x26, [sp, #64]
    6e9c:	ldp	x29, x30, [sp], #304
    6ea0:	ret
    6ea4:	and	w2, w27, #0xf
    6ea8:	neg	w1, w28
    6eac:	ldr	x19, [sp, #136]
    6eb0:	mov	x0, x19
    6eb4:	bl	53f0 <set_pi_over_2@plt>
    6eb8:	mov	w2, #0x1                   	// #1
    6ebc:	str	w2, [x19, #40]
    6ec0:	mov	x2, #0x8000000000000001    	// #-9223372036854775807
    6ec4:	str	x2, [x19, #48]
    6ec8:	tbnz	w0, #31, 6ed4 <mpc_atan@@Base+0x1d0>
    6ecc:	ldp	x27, x28, [sp, #80]
    6ed0:	b	6e88 <mpc_atan@@Base+0x184>
    6ed4:	mov	w19, #0x2                   	// #2
    6ed8:	ldp	x27, x28, [sp, #80]
    6edc:	b	6e90 <mpc_atan@@Base+0x18c>
    6ee0:	and	w2, w27, #0xf
    6ee4:	neg	w1, w28
    6ee8:	ldr	x19, [sp, #136]
    6eec:	mov	x0, x19
    6ef0:	bl	53f0 <set_pi_over_2@plt>
    6ef4:	mov	w21, w0
    6ef8:	mov	w0, #0x1                   	// #1
    6efc:	str	w0, [x19, #40]
    6f00:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
    6f04:	str	x0, [x19, #48]
    6f08:	tbnz	w20, #31, 6f28 <mpc_atan@@Base+0x224>
    6f0c:	mov	w19, #0x2                   	// #2
    6f10:	tbnz	w21, #31, 7730 <mpc_atan@@Base+0xa2c>
    6f14:	cmp	w21, #0x0
    6f18:	cset	w19, ne  // ne = any
    6f1c:	ldp	x21, x22, [sp, #32]
    6f20:	ldp	x27, x28, [sp, #80]
    6f24:	b	6e90 <mpc_atan@@Base+0x18c>
    6f28:	mov	w2, #0x0                   	// #0
    6f2c:	ldr	x0, [sp, #136]
    6f30:	mov	x1, x0
    6f34:	bl	4f60 <mpc_conj@plt>
    6f38:	b	6f0c <mpc_atan@@Base+0x208>
    6f3c:	and	w2, w27, #0xf
    6f40:	mov	x1, x25
    6f44:	ldr	x19, [sp, #136]
    6f48:	mov	x0, x19
    6f4c:	bl	51b0 <mpfr_atan@plt>
    6f50:	mov	w21, w0
    6f54:	mov	w0, #0x1                   	// #1
    6f58:	str	w0, [x19, #40]
    6f5c:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
    6f60:	str	x0, [x19, #48]
    6f64:	tbnz	w20, #31, 6f84 <mpc_atan@@Base+0x280>
    6f68:	mov	w19, #0x2                   	// #2
    6f6c:	tbnz	w21, #31, 773c <mpc_atan@@Base+0xa38>
    6f70:	cmp	w21, #0x0
    6f74:	cset	w19, ne  // ne = any
    6f78:	ldp	x21, x22, [sp, #32]
    6f7c:	ldp	x27, x28, [sp, #80]
    6f80:	b	6e90 <mpc_atan@@Base+0x18c>
    6f84:	mov	w2, #0x0                   	// #0
    6f88:	ldr	x0, [sp, #136]
    6f8c:	mov	x1, x0
    6f90:	bl	4f60 <mpc_conj@plt>
    6f94:	b	6f68 <mpc_atan@@Base+0x264>
    6f98:	mov	x2, #0x0                   	// #0
    6f9c:	mov	x1, #0xffffffffffffffff    	// #-1
    6fa0:	add	x0, x25, #0x20
    6fa4:	bl	4fe0 <mpfr_cmp_si_2exp@plt>
    6fa8:	neg	w21, w0
    6fac:	b	6d9c <mpc_atan@@Base+0x98>
    6fb0:	mov	w0, #0x1                   	// #1
    6fb4:	ldr	x1, [sp, #136]
    6fb8:	str	w0, [x1, #8]
    6fbc:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
    6fc0:	str	x0, [x1, #16]
    6fc4:	tbnz	w19, #31, 6fe8 <mpc_atan@@Base+0x2e4>
    6fc8:	asr	w2, w27, #4
    6fcc:	add	x1, x25, #0x20
    6fd0:	ldr	x0, [sp, #136]
    6fd4:	add	x0, x0, #0x20
    6fd8:	bl	4d90 <mpfr_atanh@plt>
    6fdc:	mov	w20, w0
    6fe0:	mov	w21, #0x0                   	// #0
    6fe4:	b	6dd4 <mpc_atan@@Base+0xd0>
    6fe8:	mov	w2, #0x0                   	// #0
    6fec:	mov	x0, x1
    6ff0:	bl	4b80 <mpfr_neg@plt>
    6ff4:	b	6fc8 <mpc_atan@@Base+0x2c4>
    6ff8:	stp	x23, x24, [sp, #48]
    6ffc:	asr	w0, w27, #4
    7000:	str	w0, [sp, #108]
    7004:	add	x0, sp, #0xf0
    7008:	bl	4aa0 <mpfr_init@plt>
    700c:	add	x0, sp, #0x110
    7010:	bl	4aa0 <mpfr_init@plt>
    7014:	ldr	x0, [sp, #136]
    7018:	ldr	x1, [x0, #32]
    701c:	str	x1, [sp, #112]
    7020:	cmp	w20, #0x0
    7024:	mov	w24, #0x2                   	// #2
    7028:	mov	w0, #0x3                   	// #3
    702c:	csel	w24, w24, w0, ge  // ge = tcont
    7030:	mov	x20, x1
    7034:	add	x22, sp, #0xf0
    7038:	add	x21, sp, #0x110
    703c:	add	x25, x25, #0x20
    7040:	mov	x23, #0x1                   	// #1
    7044:	mov	w26, #0x2                   	// #2
    7048:	mov	x0, x20
    704c:	bl	4d20 <mpc_ceil_log2@plt>
    7050:	add	x0, x0, #0x2
    7054:	add	x20, x20, x0
    7058:	mov	x1, x20
    705c:	mov	x0, x22
    7060:	bl	4c80 <mpfr_set_prec@plt>
    7064:	mov	x1, x20
    7068:	mov	x0, x21
    706c:	bl	4c80 <mpfr_set_prec@plt>
    7070:	mov	w3, w24
    7074:	mov	x2, x25
    7078:	mov	x1, x23
    707c:	mov	x0, x22
    7080:	bl	4f70 <mpfr_ui_div@plt>
    7084:	str	w0, [sp, #96]
    7088:	ldr	x19, [sp, #256]
    708c:	mov	w2, w26
    7090:	mov	x1, x22
    7094:	mov	x0, x21
    7098:	bl	5010 <mpfr_sqr@plt>
    709c:	mov	x2, #0x0                   	// #0
    70a0:	mov	x1, x23
    70a4:	mov	x0, x21
    70a8:	bl	4cb0 <mpfr_cmp_ui_2exp@plt>
    70ac:	cmp	w0, #0x0
    70b0:	b.gt	718c <mpc_atan@@Base+0x488>
    70b4:	mov	x2, #0x0                   	// #0
    70b8:	mov	x1, x23
    70bc:	mov	x0, x21
    70c0:	bl	4cb0 <mpfr_cmp_ui_2exp@plt>
    70c4:	cbz	w0, 7048 <mpc_atan@@Base+0x344>
    70c8:	mov	w3, #0x1                   	// #1
    70cc:	mov	x2, x21
    70d0:	mov	x1, x23
    70d4:	mov	x0, x21
    70d8:	bl	5430 <mpfr_ui_sub@plt>
    70dc:	mov	w2, w24
    70e0:	mov	x1, x22
    70e4:	mov	x0, x22
    70e8:	bl	4d90 <mpfr_atanh@plt>
    70ec:	ldr	w1, [sp, #96]
    70f0:	orr	w0, w1, w0
    70f4:	ldr	x1, [sp, #256]
    70f8:	sub	x19, x19, x1
    70fc:	add	x19, x19, #0x1
    7100:	ldr	x1, [sp, #288]
    7104:	subs	x19, x19, x1
    7108:	csinc	x19, x23, x19, mi  // mi = first
    710c:	cbz	w0, 7138 <mpc_atan@@Base+0x434>
    7110:	ldr	w0, [sp, #108]
    7114:	cmp	w0, #0x0
    7118:	ldr	x0, [sp, #112]
    711c:	cinc	x4, x0, eq  // eq = none
    7120:	mov	w3, #0x1                   	// #1
    7124:	mov	w2, w24
    7128:	sub	x1, x20, x19
    712c:	mov	x0, x22
    7130:	bl	5450 <mpfr_can_round@plt>
    7134:	cbz	w0, 7048 <mpc_atan@@Base+0x344>
    7138:	and	w2, w27, #0xf
    713c:	neg	w1, w28
    7140:	ldr	x20, [sp, #136]
    7144:	mov	x0, x20
    7148:	bl	53f0 <set_pi_over_2@plt>
    714c:	mov	w21, w0
    7150:	add	x19, sp, #0xf0
    7154:	ldr	w3, [sp, #248]
    7158:	ldr	w2, [sp, #108]
    715c:	mov	x1, x19
    7160:	add	x0, x20, #0x20
    7164:	bl	51d0 <mpfr_set4@plt>
    7168:	mov	w20, w0
    716c:	mov	x0, x19
    7170:	bl	4d60 <mpfr_clear@plt>
    7174:	add	x0, sp, #0x110
    7178:	bl	4d60 <mpfr_clear@plt>
    717c:	mov	w19, #0x2                   	// #2
    7180:	tbnz	w21, #31, 71bc <mpc_atan@@Base+0x4b8>
    7184:	ldp	x23, x24, [sp, #48]
    7188:	b	6dd4 <mpc_atan@@Base+0xd0>
    718c:	adrp	x4, 15000 <mpc_ui_ui_sub@@Base+0x1228>
    7190:	add	x4, x4, #0x260
    7194:	mov	w3, #0xba                  	// #186
    7198:	adrp	x2, 15000 <mpc_ui_ui_sub@@Base+0x1228>
    719c:	add	x2, x2, #0x278
    71a0:	adrp	x1, 15000 <mpc_ui_ui_sub@@Base+0x1228>
    71a4:	add	x1, x1, #0x238
    71a8:	adrp	x0, 27000 <mpc_ui_ui_sub@@Base+0x13228>
    71ac:	ldr	x0, [x0, #4008]
    71b0:	ldr	x0, [x0]
    71b4:	bl	55a0 <fprintf@plt>
    71b8:	bl	5000 <abort@plt>
    71bc:	ldp	x23, x24, [sp, #48]
    71c0:	b	6ddc <mpc_atan@@Base+0xd8>
    71c4:	mov	w20, #0x8                   	// #8
    71c8:	b	6dec <mpc_atan@@Base+0xe8>
    71cc:	stp	x23, x24, [sp, #48]
    71d0:	mov	x5, #0x0                   	// #0
    71d4:	add	x4, sp, #0xf0
    71d8:	add	x3, sp, #0xd0
    71dc:	add	x2, sp, #0xb0
    71e0:	add	x1, sp, #0x90
    71e4:	mov	x0, #0x1                   	// #1
    71e8:	bl	5540 <mpfr_inits2@plt>
    71ec:	add	x0, sp, #0x110
    71f0:	ldp	x2, x3, [x25]
    71f4:	stp	x2, x3, [sp, #272]
    71f8:	ldp	x2, x3, [x25, #16]
    71fc:	stp	x2, x3, [sp, #288]
    7200:	mov	w2, #0x0                   	// #0
    7204:	mov	x1, x0
    7208:	bl	4b80 <mpfr_neg@plt>
    720c:	ldr	x28, [x25, #16]
    7210:	ldr	x0, [x25, #48]
    7214:	ldr	x1, [sp, #136]
    7218:	ldr	x2, [x1]
    721c:	str	x2, [sp, #120]
    7220:	mov	x20, x2
    7224:	cmp	x0, #0x0
    7228:	b.le	7270 <mpc_atan@@Base+0x56c>
    722c:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
    7230:	cmp	x28, x0
    7234:	b.ge	72c0 <mpc_atan@@Base+0x5bc>  // b.tcont
    7238:	mov	w0, #0x2                   	// #2
    723c:	str	w0, [sp, #108]
    7240:	mov	w0, #0x3                   	// #3
    7244:	str	w0, [sp, #112]
    7248:	mov	x0, #0x2                   	// #2
    724c:	movk	x0, #0x8000, lsl #48
    7250:	cmp	x28, x0
    7254:	b.eq	7284 <mpc_atan@@Base+0x580>  // b.none
    7258:	add	x24, sp, #0x90
    725c:	add	x26, sp, #0xb0
    7260:	add	x21, sp, #0xd0
    7264:	add	x0, sp, #0x110
    7268:	str	x0, [sp, #128]
    726c:	b	7400 <mpc_atan@@Base+0x6fc>
    7270:	cneg	x1, x0, lt  // lt = tstop
    7274:	sub	x0, x2, x0
    7278:	cmp	x1, x2
    727c:	csel	x20, x0, x2, ge  // ge = tcont
    7280:	b	722c <mpc_atan@@Base+0x528>
    7284:	bl	4b00 <mpfr_set_erangeflag@plt>
    7288:	ldr	x0, [x25, #16]
    728c:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
    7290:	cmp	x0, x1
    7294:	b.ge	72cc <mpc_atan@@Base+0x5c8>  // b.tcont
    7298:	mov	x1, #0x2                   	// #2
    729c:	movk	x1, #0x8000, lsl #48
    72a0:	cmp	x0, x1
    72a4:	b.ne	7308 <mpc_atan@@Base+0x604>  // b.any
    72a8:	bl	4b00 <mpfr_set_erangeflag@plt>
    72ac:	mov	w0, #0x2                   	// #2
    72b0:	str	w0, [sp, #108]
    72b4:	mov	w0, #0x3                   	// #3
    72b8:	str	w0, [sp, #112]
    72bc:	b	7258 <mpc_atan@@Base+0x554>
    72c0:	ldr	w0, [x25, #8]
    72c4:	cmp	w0, #0x0
    72c8:	b.gt	72f8 <mpc_atan@@Base+0x5f4>
    72cc:	ldr	w0, [x25, #8]
    72d0:	tbz	w0, #31, 72e4 <mpc_atan@@Base+0x5e0>
    72d4:	mov	w0, #0x2                   	// #2
    72d8:	str	w0, [sp, #108]
    72dc:	str	w0, [sp, #112]
    72e0:	b	7258 <mpc_atan@@Base+0x554>
    72e4:	mov	w0, #0x2                   	// #2
    72e8:	str	w0, [sp, #108]
    72ec:	mov	w0, #0x3                   	// #3
    72f0:	str	w0, [sp, #112]
    72f4:	b	7258 <mpc_atan@@Base+0x554>
    72f8:	mov	w0, #0x3                   	// #3
    72fc:	str	w0, [sp, #108]
    7300:	str	w0, [sp, #112]
    7304:	b	7258 <mpc_atan@@Base+0x554>
    7308:	mov	w0, #0x2                   	// #2
    730c:	str	w0, [sp, #108]
    7310:	mov	w0, #0x3                   	// #3
    7314:	str	w0, [sp, #112]
    7318:	b	7258 <mpc_atan@@Base+0x554>
    731c:	bl	4b00 <mpfr_set_erangeflag@plt>
    7320:	b	746c <mpc_atan@@Base+0x768>
    7324:	ldr	w0, [sp, #152]
    7328:	cbnz	w0, 7484 <mpc_atan@@Base+0x780>
    732c:	b	746c <mpc_atan@@Base+0x768>
    7330:	adrp	x4, 15000 <mpc_ui_ui_sub@@Base+0x1228>
    7334:	add	x4, x4, #0x280
    7338:	mov	w3, #0x113                 	// #275
    733c:	adrp	x2, 15000 <mpc_ui_ui_sub@@Base+0x1228>
    7340:	add	x2, x2, #0x278
    7344:	adrp	x1, 15000 <mpc_ui_ui_sub@@Base+0x1228>
    7348:	add	x1, x1, #0x238
    734c:	adrp	x0, 27000 <mpc_ui_ui_sub@@Base+0x13228>
    7350:	ldr	x0, [x0, #4008]
    7354:	ldr	x0, [x0]
    7358:	bl	55a0 <fprintf@plt>
    735c:	bl	5000 <abort@plt>
    7360:	ldr	w0, [sp, #152]
    7364:	cbnz	w0, 7380 <mpc_atan@@Base+0x67c>
    7368:	mov	x2, #0x0                   	// #0
    736c:	mov	x1, #0xffffffffffffffff    	// #-1
    7370:	mov	x0, x22
    7374:	bl	4fe0 <mpfr_cmp_si_2exp@plt>
    7378:	cbnz	w0, 74d8 <mpc_atan@@Base+0x7d4>
    737c:	mov	x23, x19
    7380:	mov	w3, #0x3                   	// #3
    7384:	mov	x2, x24
    7388:	ldr	x1, [sp, #128]
    738c:	mov	x0, x26
    7390:	bl	4ca0 <mpfr_atan2@plt>
    7394:	cmp	x19, x23
    7398:	csel	x19, x19, x23, le
    739c:	mov	w3, #0x2                   	// #2
    73a0:	mov	x2, x26
    73a4:	mov	x1, x21
    73a8:	mov	x0, x21
    73ac:	bl	4a60 <mpfr_sub@plt>
    73b0:	add	x23, x28, #0x5
    73b4:	sub	x19, x23, x19
    73b8:	ldr	x1, [sp, #224]
    73bc:	subs	x19, x19, x1
    73c0:	csel	x19, x19, xzr, pl  // pl = nfrst
    73c4:	mov	w3, #0x2                   	// #2
    73c8:	mov	x2, #0x1                   	// #1
    73cc:	mov	x1, x21
    73d0:	mov	x0, x21
    73d4:	bl	5320 <mpfr_div_2ui@plt>
    73d8:	tst	x27, #0xf
    73dc:	add	x1, x19, #0x1
    73e0:	ldr	x0, [sp, #120]
    73e4:	cinc	x4, x0, eq  // eq = none
    73e8:	mov	w3, #0x3                   	// #3
    73ec:	mov	w2, #0x2                   	// #2
    73f0:	sub	x1, x20, x1
    73f4:	mov	x0, x21
    73f8:	bl	5450 <mpfr_can_round@plt>
    73fc:	cbnz	w0, 7508 <mpc_atan@@Base+0x804>
    7400:	mov	x0, x20
    7404:	bl	4d20 <mpc_ceil_log2@plt>
    7408:	add	x0, x0, #0x2
    740c:	add	x20, x20, x0
    7410:	mov	x1, x20
    7414:	mov	x0, x24
    7418:	bl	4c80 <mpfr_set_prec@plt>
    741c:	mov	x1, x20
    7420:	mov	x0, x26
    7424:	bl	4c80 <mpfr_set_prec@plt>
    7428:	mov	x1, x20
    742c:	mov	x0, x21
    7430:	bl	4c80 <mpfr_set_prec@plt>
    7434:	add	x22, x25, #0x20
    7438:	ldr	w3, [sp, #108]
    743c:	mov	x2, x22
    7440:	mov	x1, #0x1                   	// #1
    7444:	mov	x0, x24
    7448:	bl	5430 <mpfr_ui_sub@plt>
    744c:	ldr	x19, [sp, #160]
    7450:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
    7454:	cmp	x19, x0
    7458:	b.ge	7324 <mpc_atan@@Base+0x620>  // b.tcont
    745c:	mov	x0, #0x2                   	// #2
    7460:	movk	x0, #0x8000, lsl #48
    7464:	cmp	x19, x0
    7468:	b.eq	731c <mpc_atan@@Base+0x618>  // b.none
    746c:	mov	x2, #0x0                   	// #0
    7470:	mov	x1, #0x1                   	// #1
    7474:	mov	x0, x22
    7478:	bl	4cb0 <mpfr_cmp_ui_2exp@plt>
    747c:	cbnz	w0, 7330 <mpc_atan@@Base+0x62c>
    7480:	mov	x19, #0x2                   	// #2
    7484:	str	x25, [sp, #96]
    7488:	mov	w3, #0x2                   	// #2
    748c:	mov	x2, x24
    7490:	mov	x1, x25
    7494:	mov	x0, x21
    7498:	bl	4ca0 <mpfr_atan2@plt>
    749c:	ldr	w3, [sp, #112]
    74a0:	mov	x2, #0x1                   	// #1
    74a4:	mov	x1, x22
    74a8:	mov	x0, x24
    74ac:	bl	4ee0 <mpfr_add_ui@plt>
    74b0:	ldr	x23, [sp, #160]
    74b4:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
    74b8:	cmp	x23, x0
    74bc:	b.ge	7360 <mpc_atan@@Base+0x65c>  // b.tcont
    74c0:	mov	x0, #0x2                   	// #2
    74c4:	movk	x0, #0x8000, lsl #48
    74c8:	cmp	x23, x0
    74cc:	b.ne	7368 <mpc_atan@@Base+0x664>  // b.any
    74d0:	bl	4b00 <mpfr_set_erangeflag@plt>
    74d4:	b	7368 <mpc_atan@@Base+0x664>
    74d8:	adrp	x4, 15000 <mpc_ui_ui_sub@@Base+0x1228>
    74dc:	add	x4, x4, #0x2a8
    74e0:	mov	w3, #0x122                 	// #290
    74e4:	adrp	x2, 15000 <mpc_ui_ui_sub@@Base+0x1228>
    74e8:	add	x2, x2, #0x278
    74ec:	adrp	x1, 15000 <mpc_ui_ui_sub@@Base+0x1228>
    74f0:	add	x1, x1, #0x238
    74f4:	adrp	x0, 27000 <mpc_ui_ui_sub@@Base+0x13228>
    74f8:	ldr	x0, [x0, #4008]
    74fc:	ldr	x0, [x0]
    7500:	bl	55a0 <fprintf@plt>
    7504:	bl	5000 <abort@plt>
    7508:	ldr	x0, [sp, #136]
    750c:	ldr	x24, [x0, #32]
    7510:	cmp	wzr, w27, lsr #4
    7514:	cinc	x28, x24, eq  // eq = none
    7518:	mov	x19, #0x2                   	// #2
    751c:	add	x21, sp, #0x90
    7520:	add	x20, sp, #0xb0
    7524:	add	x23, sp, #0xf0
    7528:	mov	w25, #0x2                   	// #2
    752c:	mov	w26, #0x1                   	// #1
    7530:	b	7580 <mpc_atan@@Base+0x87c>
    7534:	cmp	x0, #0x0
    7538:	csinv	x19, x0, xzr, ge  // ge = tcont
    753c:	add	x19, x19, #0x2
    7540:	mov	w3, #0x0                   	// #0
    7544:	mov	x2, #0x2                   	// #2
    7548:	mov	x1, x23
    754c:	mov	x0, x23
    7550:	bl	5320 <mpfr_div_2ui@plt>
    7554:	ldr	x1, [sp, #256]
    7558:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
    755c:	cmp	x1, x0
    7560:	b.eq	76b8 <mpc_atan@@Base+0x9b4>  // b.none
    7564:	mov	x4, x28
    7568:	mov	w3, #0x3                   	// #3
    756c:	mov	w2, w25
    7570:	sub	x1, x24, x19
    7574:	mov	x0, x23
    7578:	bl	5450 <mpfr_can_round@plt>
    757c:	cbnz	w0, 76e8 <mpc_atan@@Base+0x9e4>
    7580:	mov	x0, x24
    7584:	bl	4d20 <mpc_ceil_log2@plt>
    7588:	add	x0, x0, x19
    758c:	add	x24, x24, x0
    7590:	mov	x1, x24
    7594:	mov	x0, x21
    7598:	bl	4c80 <mpfr_set_prec@plt>
    759c:	mov	x1, x24
    75a0:	mov	x0, x20
    75a4:	bl	4c80 <mpfr_set_prec@plt>
    75a8:	mov	x1, x24
    75ac:	mov	x0, x23
    75b0:	bl	4c80 <mpfr_set_prec@plt>
    75b4:	mov	w3, #0x4                   	// #4
    75b8:	mov	x2, #0x1                   	// #1
    75bc:	mov	x1, x22
    75c0:	mov	x0, x21
    75c4:	bl	4ee0 <mpfr_add_ui@plt>
    75c8:	mov	w2, w25
    75cc:	mov	x1, x21
    75d0:	mov	x0, x21
    75d4:	bl	5010 <mpfr_sqr@plt>
    75d8:	mov	w2, w25
    75dc:	ldr	x1, [sp, #96]
    75e0:	mov	x0, x23
    75e4:	bl	5010 <mpfr_sqr@plt>
    75e8:	mov	w3, w25
    75ec:	mov	x2, x23
    75f0:	mov	x1, x21
    75f4:	mov	x0, x21
    75f8:	bl	4e60 <mpfr_add@plt>
    75fc:	mov	w2, w25
    7600:	mov	x1, x21
    7604:	mov	x0, x21
    7608:	bl	4d80 <mpfr_log@plt>
    760c:	mov	w3, w26
    7610:	mov	x2, x22
    7614:	mov	x1, #0x1                   	// #1
    7618:	mov	x0, x20
    761c:	bl	5430 <mpfr_ui_sub@plt>
    7620:	mov	w2, w26
    7624:	mov	x1, x20
    7628:	mov	x0, x20
    762c:	bl	5010 <mpfr_sqr@plt>
    7630:	mov	x0, x23
    7634:	bl	4bb0 <mpfr_nextbelow@plt>
    7638:	mov	w3, w26
    763c:	mov	x2, x23
    7640:	mov	x1, x20
    7644:	mov	x0, x20
    7648:	bl	4e60 <mpfr_add@plt>
    764c:	mov	w2, w26
    7650:	mov	x1, x20
    7654:	mov	x0, x20
    7658:	bl	4d80 <mpfr_log@plt>
    765c:	mov	w3, w25
    7660:	mov	x2, x20
    7664:	mov	x1, x21
    7668:	mov	x0, x23
    766c:	bl	4a60 <mpfr_sub@plt>
    7670:	ldr	x1, [sp, #256]
    7674:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
    7678:	cmp	x1, x0
    767c:	b.eq	7580 <mpc_atan@@Base+0x87c>  // b.none
    7680:	ldr	x19, [sp, #160]
    7684:	ldr	x0, [sp, #192]
    7688:	cmp	x0, x19
    768c:	csel	x0, x0, x19, ge  // ge = tcont
    7690:	sub	x0, x0, x1
    7694:	add	x0, x0, #0x1
    7698:	mov	x19, #0x3                   	// #3
    769c:	sub	x19, x19, x1
    76a0:	cmp	x0, x19
    76a4:	b.gt	7534 <mpc_atan@@Base+0x830>
    76a8:	cmp	x19, #0x0
    76ac:	csinv	x19, x19, xzr, ge  // ge = tcont
    76b0:	add	x19, x19, #0x2
    76b4:	b	7540 <mpc_atan@@Base+0x83c>
    76b8:	adrp	x4, 15000 <mpc_ui_ui_sub@@Base+0x1228>
    76bc:	add	x4, x4, #0x2d0
    76c0:	mov	w3, #0x17b                 	// #379
    76c4:	adrp	x2, 15000 <mpc_ui_ui_sub@@Base+0x1228>
    76c8:	add	x2, x2, #0x278
    76cc:	adrp	x1, 15000 <mpc_ui_ui_sub@@Base+0x1228>
    76d0:	add	x1, x1, #0x238
    76d4:	adrp	x0, 27000 <mpc_ui_ui_sub@@Base+0x13228>
    76d8:	ldr	x0, [x0, #4008]
    76dc:	ldr	x0, [x0]
    76e0:	bl	55a0 <fprintf@plt>
    76e4:	bl	5000 <abort@plt>
    76e8:	add	x21, sp, #0xf0
    76ec:	add	x20, sp, #0xd0
    76f0:	mov	w3, w27
    76f4:	mov	x2, x21
    76f8:	mov	x1, x20
    76fc:	ldr	x0, [sp, #136]
    7700:	bl	54f0 <mpc_set_fr_fr@plt>
    7704:	mov	w19, w0
    7708:	mov	x4, #0x0                   	// #0
    770c:	mov	x3, x21
    7710:	mov	x2, x20
    7714:	add	x1, sp, #0xb0
    7718:	add	x0, sp, #0x90
    771c:	bl	4e70 <mpfr_clears@plt>
    7720:	ldp	x21, x22, [sp, #32]
    7724:	ldp	x23, x24, [sp, #48]
    7728:	ldp	x27, x28, [sp, #80]
    772c:	b	6e90 <mpc_atan@@Base+0x18c>
    7730:	ldp	x21, x22, [sp, #32]
    7734:	ldp	x27, x28, [sp, #80]
    7738:	b	6e90 <mpc_atan@@Base+0x18c>
    773c:	ldp	x21, x22, [sp, #32]
    7740:	ldp	x27, x28, [sp, #80]
    7744:	b	6e90 <mpc_atan@@Base+0x18c>

0000000000007748 <mpc_atanh@@Base>:
    7748:	stp	x29, x30, [sp, #-208]!
    774c:	mov	x29, sp
    7750:	stp	x19, x20, [sp, #16]
    7754:	stp	x21, x22, [sp, #32]
    7758:	mov	x21, x0
    775c:	mov	w22, w2
    7760:	add	x0, sp, #0x70
    7764:	ldp	x2, x3, [x1, #32]
    7768:	stp	x2, x3, [sp, #112]
    776c:	ldp	x2, x3, [x1, #48]
    7770:	stp	x2, x3, [sp, #128]
    7774:	ldp	x2, x3, [x1]
    7778:	stp	x2, x3, [sp, #144]
    777c:	ldp	x2, x3, [x1, #16]
    7780:	stp	x2, x3, [sp, #160]
    7784:	mov	w2, #0x0                   	// #0
    7788:	mov	x1, x0
    778c:	bl	4b80 <mpfr_neg@plt>
    7790:	ldr	x2, [x21]
    7794:	ldr	x1, [x21, #32]
    7798:	add	x0, sp, #0x30
    779c:	bl	53c0 <mpc_init3@plt>
    77a0:	asr	w0, w22, #4
    77a4:	cmp	w0, #0x2
    77a8:	b.eq	7858 <mpc_atanh@@Base+0x110>  // b.none
    77ac:	cmp	w0, #0x3
    77b0:	mov	w1, #0x2                   	// #2
    77b4:	csel	w0, w0, w1, ne  // ne = any
    77b8:	ubfiz	w2, w22, #4, #4
    77bc:	add	x19, sp, #0x30
    77c0:	add	w2, w2, w0
    77c4:	add	x1, sp, #0x70
    77c8:	mov	x0, x19
    77cc:	bl	5410 <mpc_atan@plt>
    77d0:	mov	w20, w0
    77d4:	ldp	x2, x3, [sp, #48]
    77d8:	ldp	x0, x1, [sp, #64]
    77dc:	ldp	x4, x5, [sp, #80]
    77e0:	stp	x4, x5, [sp, #48]
    77e4:	ldp	x4, x5, [sp, #96]
    77e8:	stp	x4, x5, [sp, #64]
    77ec:	stp	x2, x3, [sp, #80]
    77f0:	stp	x0, x1, [sp, #96]
    77f4:	add	x0, x19, #0x20
    77f8:	mov	w2, #0x0                   	// #0
    77fc:	mov	x1, x0
    7800:	bl	4b80 <mpfr_neg@plt>
    7804:	mov	w2, w22
    7808:	mov	x1, x19
    780c:	mov	x0, x21
    7810:	bl	5580 <mpc_set@plt>
    7814:	mov	x0, x19
    7818:	bl	4a10 <mpc_clear@plt>
    781c:	asr	w0, w20, #2
    7820:	cmp	w0, #0x2
    7824:	b.eq	7830 <mpc_atanh@@Base+0xe8>  // b.none
    7828:	cmp	w0, #0x0
    782c:	cset	w0, ne  // ne = any
    7830:	mov	w1, #0x8                   	// #8
    7834:	tbnz	w20, #0, 7844 <mpc_atanh@@Base+0xfc>
    7838:	ands	w1, w20, #0x3
    783c:	mov	w2, #0x4                   	// #4
    7840:	csel	w1, w1, w2, eq  // eq = none
    7844:	orr	w0, w0, w1
    7848:	ldp	x19, x20, [sp, #16]
    784c:	ldp	x21, x22, [sp, #32]
    7850:	ldp	x29, x30, [sp], #208
    7854:	ret
    7858:	mov	w0, #0x3                   	// #3
    785c:	b	77b8 <mpc_atanh@@Base+0x70>

0000000000007860 <mpc_clear@@Base>:
    7860:	stp	x29, x30, [sp, #-32]!
    7864:	mov	x29, sp
    7868:	str	x19, [sp, #16]
    786c:	mov	x19, x0
    7870:	bl	4d60 <mpfr_clear@plt>
    7874:	add	x0, x19, #0x20
    7878:	bl	4d60 <mpfr_clear@plt>
    787c:	ldr	x19, [sp, #16]
    7880:	ldp	x29, x30, [sp], #32
    7884:	ret

0000000000007888 <mpc_cmp@@Base>:
    7888:	stp	x29, x30, [sp, #-48]!
    788c:	mov	x29, sp
    7890:	stp	x19, x20, [sp, #16]
    7894:	str	x21, [sp, #32]
    7898:	mov	x20, x0
    789c:	mov	x21, x1
    78a0:	mov	w2, #0x1                   	// #1
    78a4:	bl	53a0 <mpfr_cmp3@plt>
    78a8:	mov	w19, w0
    78ac:	mov	w2, #0x1                   	// #1
    78b0:	add	x1, x21, #0x20
    78b4:	add	x0, x20, #0x20
    78b8:	bl	53a0 <mpfr_cmp3@plt>
    78bc:	mov	w1, #0x2                   	// #2
    78c0:	tbnz	w19, #31, 78cc <mpc_cmp@@Base+0x44>
    78c4:	cmp	w19, #0x0
    78c8:	cset	w1, ne  // ne = any
    78cc:	tbnz	w0, #31, 78f0 <mpc_cmp@@Base+0x68>
    78d0:	cmp	w0, #0x0
    78d4:	mov	w2, #0x4                   	// #4
    78d8:	csel	w0, w0, w2, eq  // eq = none
    78dc:	orr	w0, w1, w0
    78e0:	ldp	x19, x20, [sp, #16]
    78e4:	ldr	x21, [sp, #32]
    78e8:	ldp	x29, x30, [sp], #48
    78ec:	ret
    78f0:	mov	w0, #0x8                   	// #8
    78f4:	b	78dc <mpc_cmp@@Base+0x54>

00000000000078f8 <mpc_cmp_abs@@Base>:
    78f8:	stp	x29, x30, [sp, #-320]!
    78fc:	mov	x29, sp
    7900:	stp	x19, x20, [sp, #16]
    7904:	mov	x19, x0
    7908:	mov	x20, x1
    790c:	ldr	x0, [x0, #16]
    7910:	mov	x1, #0x2                   	// #2
    7914:	movk	x1, #0x8000, lsl #48
    7918:	cmp	x0, x1
    791c:	b.eq	797c <mpc_cmp_abs@@Base+0x84>  // b.none
    7920:	ldr	x1, [x19, #48]
    7924:	mov	x2, #0x2                   	// #2
    7928:	movk	x2, #0x8000, lsl #48
    792c:	cmp	x1, x2
    7930:	b.eq	797c <mpc_cmp_abs@@Base+0x84>  // b.none
    7934:	ldr	x2, [x20, #16]
    7938:	mov	x3, #0x2                   	// #2
    793c:	movk	x3, #0x8000, lsl #48
    7940:	cmp	x2, x3
    7944:	b.eq	797c <mpc_cmp_abs@@Base+0x84>  // b.none
    7948:	ldr	x3, [x20, #48]
    794c:	mov	x4, #0x2                   	// #2
    7950:	movk	x4, #0x8000, lsl #48
    7954:	cmp	x3, x4
    7958:	b.eq	797c <mpc_cmp_abs@@Base+0x84>  // b.none
    795c:	mov	x4, #0x8000000000000003    	// #-9223372036854775805
    7960:	cmp	x1, x4
    7964:	ccmp	x0, x4, #0x4, ne  // ne = any
    7968:	b.ne	79bc <mpc_cmp_abs@@Base+0xc4>  // b.any
    796c:	cmp	x3, x4
    7970:	ccmp	x2, x4, #0x4, ne  // ne = any
    7974:	cset	w19, ne  // ne = any
    7978:	b	79ac <mpc_cmp_abs@@Base+0xb4>
    797c:	add	x20, sp, #0x60
    7980:	mov	x0, x20
    7984:	bl	4aa0 <mpfr_init@plt>
    7988:	mov	x0, x20
    798c:	bl	4a40 <mpfr_set_nan@plt>
    7990:	mov	w2, #0x1                   	// #1
    7994:	mov	x1, x20
    7998:	mov	x0, x20
    799c:	bl	53a0 <mpfr_cmp3@plt>
    79a0:	mov	w19, w0
    79a4:	mov	x0, x20
    79a8:	bl	4d60 <mpfr_clear@plt>
    79ac:	mov	w0, w19
    79b0:	ldp	x19, x20, [sp, #16]
    79b4:	ldp	x29, x30, [sp], #320
    79b8:	ret
    79bc:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
    79c0:	cmp	x3, x0
    79c4:	ccmp	x2, x0, #0x4, ne  // ne = any
    79c8:	b.eq	7c4c <mpc_cmp_abs@@Base+0x354>  // b.none
    79cc:	ldp	x0, x1, [x19]
    79d0:	stp	x0, x1, [sp, #256]
    79d4:	ldp	x0, x1, [x19, #16]
    79d8:	stp	x0, x1, [sp, #272]
    79dc:	ldp	x0, x1, [x19, #32]
    79e0:	stp	x0, x1, [sp, #288]
    79e4:	ldp	x0, x1, [x19, #48]
    79e8:	stp	x0, x1, [sp, #304]
    79ec:	ldp	x0, x1, [x20]
    79f0:	stp	x0, x1, [sp, #192]
    79f4:	ldp	x0, x1, [x20, #16]
    79f8:	stp	x0, x1, [sp, #208]
    79fc:	ldp	x0, x1, [x20, #32]
    7a00:	stp	x0, x1, [sp, #224]
    7a04:	ldp	x0, x1, [x20, #48]
    7a08:	stp	x0, x1, [sp, #240]
    7a0c:	ldr	w0, [x19, #8]
    7a10:	tbnz	w0, #31, 7b14 <mpc_cmp_abs@@Base+0x21c>
    7a14:	ldr	w0, [x19, #40]
    7a18:	tbnz	w0, #31, 7b28 <mpc_cmp_abs@@Base+0x230>
    7a1c:	ldr	w0, [x20, #8]
    7a20:	tbnz	w0, #31, 7b3c <mpc_cmp_abs@@Base+0x244>
    7a24:	ldr	w0, [x20, #40]
    7a28:	tbnz	w0, #31, 7b50 <mpc_cmp_abs@@Base+0x258>
    7a2c:	add	x0, sp, #0x100
    7a30:	mov	w2, #0x1                   	// #1
    7a34:	add	x1, x0, #0x20
    7a38:	bl	53a0 <mpfr_cmp3@plt>
    7a3c:	cmp	w0, #0x0
    7a40:	b.gt	7b64 <mpc_cmp_abs@@Base+0x26c>
    7a44:	add	x0, sp, #0xc0
    7a48:	mov	w2, #0x1                   	// #1
    7a4c:	add	x1, x0, #0x20
    7a50:	bl	53a0 <mpfr_cmp3@plt>
    7a54:	cmp	w0, #0x0
    7a58:	b.gt	7b74 <mpc_cmp_abs@@Base+0x27c>
    7a5c:	mov	w2, #0x1                   	// #1
    7a60:	add	x1, sp, #0xc0
    7a64:	add	x0, sp, #0x100
    7a68:	bl	53a0 <mpfr_cmp3@plt>
    7a6c:	cbz	w0, 7b84 <mpc_cmp_abs@@Base+0x28c>
    7a70:	mov	w2, #0x1                   	// #1
    7a74:	add	x1, sp, #0xe0
    7a78:	add	x0, sp, #0x120
    7a7c:	bl	53a0 <mpfr_cmp3@plt>
    7a80:	cbz	w0, 7b9c <mpc_cmp_abs@@Base+0x2a4>
    7a84:	stp	x21, x22, [sp, #32]
    7a88:	stp	x23, x24, [sp, #48]
    7a8c:	stp	x25, x26, [sp, #64]
    7a90:	str	x27, [sp, #80]
    7a94:	add	x0, sp, #0xa0
    7a98:	bl	4aa0 <mpfr_init@plt>
    7a9c:	add	x0, sp, #0x80
    7aa0:	bl	4aa0 <mpfr_init@plt>
    7aa4:	ldr	x1, [sp, #192]
    7aa8:	ldr	x0, [sp, #224]
    7aac:	cmp	x0, x1
    7ab0:	csel	x0, x0, x1, ge  // ge = tcont
    7ab4:	ldr	x2, [sp, #256]
    7ab8:	ldr	x1, [sp, #288]
    7abc:	cmp	x1, x2
    7ac0:	csel	x1, x1, x2, ge  // ge = tcont
    7ac4:	cmp	x0, x1
    7ac8:	csel	x0, x0, x1, ge  // ge = tcont
    7acc:	mov	x20, #0x32                  	// #50
    7ad0:	mov	x1, #0x1387                	// #4999
    7ad4:	cmp	x0, x1
    7ad8:	b.le	7afc <mpc_cmp_abs@@Base+0x204>
    7adc:	mov	x20, #0xd70b                	// #55051
    7ae0:	movk	x20, #0x70a3, lsl #16
    7ae4:	movk	x20, #0xa3d, lsl #32
    7ae8:	movk	x20, #0xa3d7, lsl #48
    7aec:	smulh	x20, x0, x20
    7af0:	add	x20, x20, x0
    7af4:	asr	x20, x20, #6
    7af8:	sub	x20, x20, x0, asr #63
    7afc:	add	x23, sp, #0xa0
    7b00:	add	x22, sp, #0x80
    7b04:	add	x26, sp, #0x100
    7b08:	mov	w24, #0x3                   	// #3
    7b0c:	add	x25, sp, #0xc0
    7b10:	b	7be4 <mpc_cmp_abs@@Base+0x2ec>
    7b14:	add	x0, sp, #0x100
    7b18:	mov	w2, #0x0                   	// #0
    7b1c:	mov	x1, x0
    7b20:	bl	4b80 <mpfr_neg@plt>
    7b24:	b	7a14 <mpc_cmp_abs@@Base+0x11c>
    7b28:	add	x0, sp, #0x120
    7b2c:	mov	w2, #0x0                   	// #0
    7b30:	mov	x1, x0
    7b34:	bl	4b80 <mpfr_neg@plt>
    7b38:	b	7a1c <mpc_cmp_abs@@Base+0x124>
    7b3c:	add	x0, sp, #0xc0
    7b40:	mov	w2, #0x0                   	// #0
    7b44:	mov	x1, x0
    7b48:	bl	4b80 <mpfr_neg@plt>
    7b4c:	b	7a24 <mpc_cmp_abs@@Base+0x12c>
    7b50:	add	x0, sp, #0xe0
    7b54:	mov	w2, #0x0                   	// #0
    7b58:	mov	x1, x0
    7b5c:	bl	4b80 <mpfr_neg@plt>
    7b60:	b	7a2c <mpc_cmp_abs@@Base+0x134>
    7b64:	add	x0, sp, #0x100
    7b68:	add	x1, x0, #0x20
    7b6c:	bl	5090 <mpfr_swap@plt>
    7b70:	b	7a44 <mpc_cmp_abs@@Base+0x14c>
    7b74:	add	x0, sp, #0xc0
    7b78:	add	x1, x0, #0x20
    7b7c:	bl	5090 <mpfr_swap@plt>
    7b80:	b	7a5c <mpc_cmp_abs@@Base+0x164>
    7b84:	mov	w2, #0x1                   	// #1
    7b88:	add	x1, sp, #0xe0
    7b8c:	add	x0, sp, #0x120
    7b90:	bl	53a0 <mpfr_cmp3@plt>
    7b94:	mov	w19, w0
    7b98:	b	79ac <mpc_cmp_abs@@Base+0xb4>
    7b9c:	mov	w2, #0x1                   	// #1
    7ba0:	add	x1, sp, #0xc0
    7ba4:	add	x0, sp, #0x100
    7ba8:	bl	53a0 <mpfr_cmp3@plt>
    7bac:	mov	w19, w0
    7bb0:	b	79ac <mpc_cmp_abs@@Base+0xb4>
    7bb4:	cmp	w27, #0x0
    7bb8:	csetm	w19, ne  // ne = any
    7bbc:	add	x0, sp, #0xa0
    7bc0:	bl	4d60 <mpfr_clear@plt>
    7bc4:	add	x0, sp, #0x80
    7bc8:	bl	4d60 <mpfr_clear@plt>
    7bcc:	ldp	x21, x22, [sp, #32]
    7bd0:	ldp	x23, x24, [sp, #48]
    7bd4:	ldp	x25, x26, [sp, #64]
    7bd8:	ldr	x27, [sp, #80]
    7bdc:	b	79ac <mpc_cmp_abs@@Base+0xb4>
    7be0:	lsl	x20, x20, #1
    7be4:	mov	x1, x20
    7be8:	mov	x0, x23
    7bec:	bl	4c80 <mpfr_set_prec@plt>
    7bf0:	mov	x1, x20
    7bf4:	mov	x0, x22
    7bf8:	bl	4c80 <mpfr_set_prec@plt>
    7bfc:	mov	w2, w24
    7c00:	mov	x1, x26
    7c04:	mov	x0, x23
    7c08:	bl	4ea0 <mpc_norm@plt>
    7c0c:	mov	w21, w0
    7c10:	mov	w2, w24
    7c14:	mov	x1, x25
    7c18:	mov	x0, x22
    7c1c:	bl	4ea0 <mpc_norm@plt>
    7c20:	mov	w27, w0
    7c24:	mov	w2, #0x1                   	// #1
    7c28:	mov	x1, x22
    7c2c:	mov	x0, x23
    7c30:	bl	53a0 <mpfr_cmp3@plt>
    7c34:	mov	w19, w0
    7c38:	cbnz	w0, 7bbc <mpc_cmp_abs@@Base+0x2c4>
    7c3c:	cbz	w21, 7bb4 <mpc_cmp_abs@@Base+0x2bc>
    7c40:	cbnz	w27, 7be0 <mpc_cmp_abs@@Base+0x2e8>
    7c44:	mov	w19, #0x1                   	// #1
    7c48:	b	7bbc <mpc_cmp_abs@@Base+0x2c4>
    7c4c:	mov	w19, #0xffffffff            	// #-1
    7c50:	b	79ac <mpc_cmp_abs@@Base+0xb4>

0000000000007c54 <mpc_cmp_si_si@@Base>:
    7c54:	stp	x29, x30, [sp, #-48]!
    7c58:	mov	x29, sp
    7c5c:	stp	x19, x20, [sp, #16]
    7c60:	str	x21, [sp, #32]
    7c64:	mov	x20, x0
    7c68:	mov	x21, x2
    7c6c:	mov	x2, #0x0                   	// #0
    7c70:	bl	4fe0 <mpfr_cmp_si_2exp@plt>
    7c74:	mov	w19, w0
    7c78:	mov	x2, #0x0                   	// #0
    7c7c:	mov	x1, x21
    7c80:	add	x0, x20, #0x20
    7c84:	bl	4fe0 <mpfr_cmp_si_2exp@plt>
    7c88:	mov	w1, #0x2                   	// #2
    7c8c:	tbnz	w19, #31, 7c98 <mpc_cmp_si_si@@Base+0x44>
    7c90:	cmp	w19, #0x0
    7c94:	cset	w1, ne  // ne = any
    7c98:	tbnz	w0, #31, 7cbc <mpc_cmp_si_si@@Base+0x68>
    7c9c:	cmp	w0, #0x0
    7ca0:	mov	w2, #0x4                   	// #4
    7ca4:	csel	w0, w0, w2, eq  // eq = none
    7ca8:	orr	w0, w1, w0
    7cac:	ldp	x19, x20, [sp, #16]
    7cb0:	ldr	x21, [sp, #32]
    7cb4:	ldp	x29, x30, [sp], #48
    7cb8:	ret
    7cbc:	mov	w0, #0x8                   	// #8
    7cc0:	b	7ca8 <mpc_cmp_si_si@@Base+0x54>

0000000000007cc4 <mpc_conj@@Base>:
    7cc4:	stp	x29, x30, [sp, #-48]!
    7cc8:	mov	x29, sp
    7ccc:	stp	x19, x20, [sp, #16]
    7cd0:	stp	x21, x22, [sp, #32]
    7cd4:	mov	x22, x0
    7cd8:	mov	x19, x1
    7cdc:	mov	w20, w2
    7ce0:	ldr	w3, [x1, #8]
    7ce4:	and	w2, w2, #0xf
    7ce8:	bl	51d0 <mpfr_set4@plt>
    7cec:	mov	w21, w0
    7cf0:	asr	w2, w20, #4
    7cf4:	add	x1, x19, #0x20
    7cf8:	add	x0, x22, #0x20
    7cfc:	bl	4b80 <mpfr_neg@plt>
    7d00:	mov	w1, #0x2                   	// #2
    7d04:	tbnz	w21, #31, 7d10 <mpc_conj@@Base+0x4c>
    7d08:	cmp	w21, #0x0
    7d0c:	cset	w1, ne  // ne = any
    7d10:	tbnz	w0, #31, 7d34 <mpc_conj@@Base+0x70>
    7d14:	cmp	w0, #0x0
    7d18:	mov	w2, #0x4                   	// #4
    7d1c:	csel	w0, w0, w2, eq  // eq = none
    7d20:	orr	w0, w1, w0
    7d24:	ldp	x19, x20, [sp, #16]
    7d28:	ldp	x21, x22, [sp, #32]
    7d2c:	ldp	x29, x30, [sp], #48
    7d30:	ret
    7d34:	mov	w0, #0x8                   	// #8
    7d38:	b	7d20 <mpc_conj@@Base+0x5c>

0000000000007d3c <mpc_cos@@Base>:
    7d3c:	stp	x29, x30, [sp, #-16]!
    7d40:	mov	x29, sp
    7d44:	mov	w4, w2
    7d48:	mov	w3, #0x0                   	// #0
    7d4c:	mov	x2, x1
    7d50:	mov	x1, x0
    7d54:	mov	x0, #0x0                   	// #0
    7d58:	bl	5140 <mpc_sin_cos@plt>
    7d5c:	asr	w0, w0, #4
    7d60:	ldp	x29, x30, [sp], #16
    7d64:	ret

0000000000007d68 <mpc_cosh@@Base>:
    7d68:	stp	x29, x30, [sp, #-112]!
    7d6c:	mov	x29, sp
    7d70:	stp	x19, x20, [sp, #16]
    7d74:	str	x21, [sp, #32]
    7d78:	mov	x20, x0
    7d7c:	mov	w21, w2
    7d80:	add	x19, sp, #0x30
    7d84:	ldp	x2, x3, [x1, #32]
    7d88:	stp	x2, x3, [sp, #48]
    7d8c:	ldp	x2, x3, [x1, #48]
    7d90:	stp	x2, x3, [sp, #64]
    7d94:	ldp	x2, x3, [x1]
    7d98:	stp	x2, x3, [sp, #80]
    7d9c:	ldp	x0, x1, [x1, #16]
    7da0:	stp	x0, x1, [sp, #96]
    7da4:	mov	w2, #0x0                   	// #0
    7da8:	mov	x1, x19
    7dac:	mov	x0, x19
    7db0:	bl	4b80 <mpfr_neg@plt>
    7db4:	mov	w2, w21
    7db8:	mov	x1, x19
    7dbc:	mov	x0, x20
    7dc0:	bl	53e0 <mpc_cos@plt>
    7dc4:	ldp	x19, x20, [sp, #16]
    7dc8:	ldr	x21, [sp, #32]
    7dcc:	ldp	x29, x30, [sp], #112
    7dd0:	ret

0000000000007dd4 <mpc_div_2si@@Base>:
    7dd4:	stp	x29, x30, [sp, #-64]!
    7dd8:	mov	x29, sp
    7ddc:	stp	x19, x20, [sp, #16]
    7de0:	stp	x21, x22, [sp, #32]
    7de4:	str	x23, [sp, #48]
    7de8:	mov	x21, x0
    7dec:	mov	x22, x1
    7df0:	mov	x23, x2
    7df4:	mov	w19, w3
    7df8:	and	w3, w3, #0xf
    7dfc:	bl	5030 <mpfr_div_2si@plt>
    7e00:	mov	w20, w0
    7e04:	asr	w3, w19, #4
    7e08:	mov	x2, x23
    7e0c:	add	x1, x22, #0x20
    7e10:	add	x0, x21, #0x20
    7e14:	bl	5030 <mpfr_div_2si@plt>
    7e18:	mov	w1, #0x2                   	// #2
    7e1c:	tbnz	w20, #31, 7e28 <mpc_div_2si@@Base+0x54>
    7e20:	cmp	w20, #0x0
    7e24:	cset	w1, ne  // ne = any
    7e28:	tbnz	w0, #31, 7e50 <mpc_div_2si@@Base+0x7c>
    7e2c:	cmp	w0, #0x0
    7e30:	mov	w2, #0x4                   	// #4
    7e34:	csel	w0, w0, w2, eq  // eq = none
    7e38:	orr	w0, w1, w0
    7e3c:	ldp	x19, x20, [sp, #16]
    7e40:	ldp	x21, x22, [sp, #32]
    7e44:	ldr	x23, [sp, #48]
    7e48:	ldp	x29, x30, [sp], #64
    7e4c:	ret
    7e50:	mov	w0, #0x8                   	// #8
    7e54:	b	7e38 <mpc_div_2si@@Base+0x64>

0000000000007e58 <mpc_div_2ui@@Base>:
    7e58:	stp	x29, x30, [sp, #-64]!
    7e5c:	mov	x29, sp
    7e60:	stp	x19, x20, [sp, #16]
    7e64:	stp	x21, x22, [sp, #32]
    7e68:	str	x23, [sp, #48]
    7e6c:	mov	x21, x0
    7e70:	mov	x22, x1
    7e74:	mov	x23, x2
    7e78:	mov	w19, w3
    7e7c:	and	w3, w3, #0xf
    7e80:	bl	5320 <mpfr_div_2ui@plt>
    7e84:	mov	w20, w0
    7e88:	asr	w3, w19, #4
    7e8c:	mov	x2, x23
    7e90:	add	x1, x22, #0x20
    7e94:	add	x0, x21, #0x20
    7e98:	bl	5320 <mpfr_div_2ui@plt>
    7e9c:	mov	w1, #0x2                   	// #2
    7ea0:	tbnz	w20, #31, 7eac <mpc_div_2ui@@Base+0x54>
    7ea4:	cmp	w20, #0x0
    7ea8:	cset	w1, ne  // ne = any
    7eac:	tbnz	w0, #31, 7ed4 <mpc_div_2ui@@Base+0x7c>
    7eb0:	cmp	w0, #0x0
    7eb4:	mov	w2, #0x4                   	// #4
    7eb8:	csel	w0, w0, w2, eq  // eq = none
    7ebc:	orr	w0, w1, w0
    7ec0:	ldp	x19, x20, [sp, #16]
    7ec4:	ldp	x21, x22, [sp, #32]
    7ec8:	ldr	x23, [sp, #48]
    7ecc:	ldp	x29, x30, [sp], #64
    7ed0:	ret
    7ed4:	mov	w0, #0x8                   	// #8
    7ed8:	b	7ebc <mpc_div_2ui@@Base+0x64>

0000000000007edc <mpc_div@@Base>:
    7edc:	sub	sp, sp, #0x250
    7ee0:	stp	x29, x30, [sp]
    7ee4:	mov	x29, sp
    7ee8:	stp	x19, x20, [sp, #16]
    7eec:	stp	x21, x22, [sp, #32]
    7ef0:	stp	x23, x24, [sp, #48]
    7ef4:	mov	x22, x0
    7ef8:	mov	x19, x1
    7efc:	mov	x20, x2
    7f00:	mov	w21, w3
    7f04:	and	w0, w3, #0xf
    7f08:	str	w0, [sp, #124]
    7f0c:	asr	w0, w3, #4
    7f10:	str	w0, [sp, #136]
    7f14:	ldr	x1, [x2, #16]
    7f18:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
    7f1c:	cmp	x1, x0
    7f20:	b.eq	7fbc <mpc_div@@Base+0xe0>  // b.none
    7f24:	ldr	x1, [x19, #16]
    7f28:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
    7f2c:	cmp	x1, x0
    7f30:	b.eq	802c <mpc_div@@Base+0x150>  // b.none
    7f34:	ldr	x1, [x19, #48]
    7f38:	cmp	x1, x0
    7f3c:	b.eq	802c <mpc_div@@Base+0x150>  // b.none
    7f40:	mov	x0, x19
    7f44:	bl	54d0 <mpfr_number_p@plt>
    7f48:	cbz	w0, 7f78 <mpc_div@@Base+0x9c>
    7f4c:	add	x23, x19, #0x20
    7f50:	mov	x0, x23
    7f54:	bl	54d0 <mpfr_number_p@plt>
    7f58:	cbz	w0, 7f78 <mpc_div@@Base+0x9c>
    7f5c:	ldr	x1, [x20, #16]
    7f60:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
    7f64:	cmp	x1, x0
    7f68:	b.eq	833c <mpc_div@@Base+0x460>  // b.none
    7f6c:	ldr	x1, [x20, #48]
    7f70:	cmp	x1, x0
    7f74:	b.eq	833c <mpc_div@@Base+0x460>  // b.none
    7f78:	mov	x0, x19
    7f7c:	bl	54d0 <mpfr_number_p@plt>
    7f80:	cbz	w0, 7f94 <mpc_div@@Base+0xb8>
    7f84:	add	x23, x19, #0x20
    7f88:	mov	x0, x23
    7f8c:	bl	54d0 <mpfr_number_p@plt>
    7f90:	cbnz	w0, 85b4 <mpc_div@@Base+0x6d8>
    7f94:	mov	x0, x22
    7f98:	bl	4ef0 <mpc_set_nan@plt>
    7f9c:	mov	w24, #0x0                   	// #0
    7fa0:	mov	w0, w24
    7fa4:	ldp	x19, x20, [sp, #16]
    7fa8:	ldp	x21, x22, [sp, #32]
    7fac:	ldp	x23, x24, [sp, #48]
    7fb0:	ldp	x29, x30, [sp]
    7fb4:	add	sp, sp, #0x250
    7fb8:	ret
    7fbc:	ldr	x1, [x2, #48]
    7fc0:	cmp	x1, x0
    7fc4:	b.ne	7f24 <mpc_div@@Base+0x48>  // b.any
    7fc8:	ldr	w0, [x2, #8]
    7fcc:	mov	w1, #0x1                   	// #1
    7fd0:	cmp	w0, #0x0
    7fd4:	cneg	w21, w1, lt  // lt = tstop
    7fd8:	add	x20, sp, #0x170
    7fdc:	mov	x1, #0x1                   	// #1
    7fe0:	mov	x0, x20
    7fe4:	bl	5440 <mpfr_init2@plt>
    7fe8:	mov	w1, w21
    7fec:	mov	x0, x20
    7ff0:	bl	5120 <mpfr_set_inf@plt>
    7ff4:	ldr	w3, [sp, #124]
    7ff8:	mov	x2, x19
    7ffc:	mov	x1, x20
    8000:	mov	x0, x22
    8004:	bl	4b70 <mpfr_mul@plt>
    8008:	ldr	w3, [sp, #136]
    800c:	add	x2, x19, #0x20
    8010:	mov	x1, x20
    8014:	add	x0, x22, #0x20
    8018:	bl	4b70 <mpfr_mul@plt>
    801c:	mov	x0, x20
    8020:	bl	4d60 <mpfr_clear@plt>
    8024:	mov	w24, #0x0                   	// #0
    8028:	b	7fa0 <mpc_div@@Base+0xc4>
    802c:	mov	x0, x20
    8030:	bl	54d0 <mpfr_number_p@plt>
    8034:	cbz	w0, 7f40 <mpc_div@@Base+0x64>
    8038:	add	x23, x20, #0x20
    803c:	mov	x0, x23
    8040:	bl	54d0 <mpfr_number_p@plt>
    8044:	cbz	w0, 7f40 <mpc_div@@Base+0x64>
    8048:	ldr	x1, [x19, #16]
    804c:	mov	w21, #0x0                   	// #0
    8050:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
    8054:	cmp	x1, x0
    8058:	b.eq	8104 <mpc_div@@Base+0x228>  // b.none
    805c:	ldr	x1, [x19, #48]
    8060:	mov	w24, #0x0                   	// #0
    8064:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
    8068:	cmp	x1, x0
    806c:	b.eq	8118 <mpc_div@@Base+0x23c>  // b.none
    8070:	ldr	x1, [x20, #16]
    8074:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
    8078:	cmp	x1, x0
    807c:	b.eq	90c8 <mpc_div@@Base+0x11ec>  // b.none
    8080:	ldr	w2, [x20, #8]
    8084:	mov	w0, #0x1                   	// #1
    8088:	cmp	w2, #0x0
    808c:	cneg	w0, w0, lt  // lt = tstop
    8090:	mul	w19, w21, w0
    8094:	ldr	x2, [x20, #48]
    8098:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
    809c:	cmp	x2, x0
    80a0:	b.eq	8f20 <mpc_div@@Base+0x1044>  // b.none
    80a4:	ldr	w0, [x20, #40]
    80a8:	tbnz	w0, #31, 90ac <mpc_div@@Base+0x11d0>
    80ac:	add	w19, w19, w24
    80b0:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
    80b4:	cmp	x1, x0
    80b8:	b.eq	90a0 <mpc_div@@Base+0x11c4>  // b.none
    80bc:	ldr	w0, [x20, #8]
    80c0:	tbnz	w0, #31, 9098 <mpc_div@@Base+0x11bc>
    80c4:	mov	w0, #0x0                   	// #0
    80c8:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
    80cc:	cmp	x2, x1
    80d0:	b.eq	80e4 <mpc_div@@Base+0x208>  // b.none
    80d4:	ldr	w1, [x20, #40]
    80d8:	mov	w0, #0x1                   	// #1
    80dc:	cmp	w1, #0x0
    80e0:	cneg	w0, w0, lt  // lt = tstop
    80e4:	msub	w24, w21, w0, w24
    80e8:	cbnz	w19, 8318 <mpc_div@@Base+0x43c>
    80ec:	mov	x0, x22
    80f0:	bl	4a40 <mpfr_set_nan@plt>
    80f4:	cbnz	w24, 8328 <mpc_div@@Base+0x44c>
    80f8:	add	x0, x22, #0x20
    80fc:	bl	4a40 <mpfr_set_nan@plt>
    8100:	b	7fa0 <mpc_div@@Base+0xc4>
    8104:	ldr	w0, [x19, #8]
    8108:	mov	w21, #0x1                   	// #1
    810c:	cmp	w0, #0x0
    8110:	cneg	w21, w21, lt  // lt = tstop
    8114:	b	805c <mpc_div@@Base+0x180>
    8118:	ldr	w0, [x19, #40]
    811c:	mov	w24, #0x1                   	// #1
    8120:	cmp	w0, #0x0
    8124:	cneg	w24, w24, lt  // lt = tstop
    8128:	cbz	w21, 8070 <mpc_div@@Base+0x194>
    812c:	mov	x1, #0x2                   	// #2
    8130:	add	x0, sp, #0x170
    8134:	bl	5440 <mpfr_init2@plt>
    8138:	cmp	w21, #0x1
    813c:	b.eq	81c4 <mpc_div@@Base+0x2e8>  // b.none
    8140:	cmp	w24, #0x1
    8144:	b.eq	82a0 <mpc_div@@Base+0x3c4>  // b.none
    8148:	mov	w3, #0x0                   	// #0
    814c:	mov	x2, x23
    8150:	mov	x1, x20
    8154:	add	x0, sp, #0x170
    8158:	bl	4e60 <mpfr_add@plt>
    815c:	mov	w19, #0x0                   	// #0
    8160:	ldr	x1, [sp, #384]
    8164:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
    8168:	cmp	x1, x0
    816c:	b.eq	8180 <mpc_div@@Base+0x2a4>  // b.none
    8170:	mov	w19, #0xffffffff            	// #-1
    8174:	ldr	w0, [sp, #376]
    8178:	cmp	w0, #0x0
    817c:	cneg	w19, w19, lt  // lt = tstop
    8180:	mov	w3, #0x0                   	// #0
    8184:	mov	x2, x20
    8188:	mov	x1, x23
    818c:	add	x0, sp, #0x170
    8190:	bl	4a60 <mpfr_sub@plt>
    8194:	mov	w24, #0x0                   	// #0
    8198:	ldr	x1, [sp, #384]
    819c:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
    81a0:	cmp	x1, x0
    81a4:	b.eq	81b8 <mpc_div@@Base+0x2dc>  // b.none
    81a8:	mov	w24, #0x1                   	// #1
    81ac:	ldr	w0, [sp, #376]
    81b0:	cmp	w0, #0x0
    81b4:	cneg	w24, w24, lt  // lt = tstop
    81b8:	add	x0, sp, #0x170
    81bc:	bl	4d60 <mpfr_clear@plt>
    81c0:	b	80e8 <mpc_div@@Base+0x20c>
    81c4:	cmp	w24, #0x1
    81c8:	b.eq	8238 <mpc_div@@Base+0x35c>  // b.none
    81cc:	mov	w3, #0x0                   	// #0
    81d0:	mov	x2, x23
    81d4:	mov	x1, x20
    81d8:	add	x0, sp, #0x170
    81dc:	bl	4a60 <mpfr_sub@plt>
    81e0:	mov	w19, #0x0                   	// #0
    81e4:	ldr	x1, [sp, #384]
    81e8:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
    81ec:	cmp	x1, x0
    81f0:	b.eq	8200 <mpc_div@@Base+0x324>  // b.none
    81f4:	ldr	w0, [sp, #376]
    81f8:	cmp	w0, #0x0
    81fc:	csinv	w19, w21, wzr, ge  // ge = tcont
    8200:	mov	w3, #0x0                   	// #0
    8204:	mov	x2, x23
    8208:	mov	x1, x20
    820c:	add	x0, sp, #0x170
    8210:	bl	4e60 <mpfr_add@plt>
    8214:	mov	w24, #0x0                   	// #0
    8218:	ldr	x1, [sp, #384]
    821c:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
    8220:	cmp	x1, x0
    8224:	b.eq	81b8 <mpc_div@@Base+0x2dc>  // b.none
    8228:	ldr	w0, [sp, #376]
    822c:	cmp	w0, #0x0
    8230:	csinv	w24, w21, wzr, lt  // lt = tstop
    8234:	b	81b8 <mpc_div@@Base+0x2dc>
    8238:	mov	w3, #0x0                   	// #0
    823c:	mov	x2, x23
    8240:	mov	x1, x20
    8244:	add	x0, sp, #0x170
    8248:	bl	4e60 <mpfr_add@plt>
    824c:	mov	w19, #0x0                   	// #0
    8250:	ldr	x1, [sp, #384]
    8254:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
    8258:	cmp	x1, x0
    825c:	b.eq	826c <mpc_div@@Base+0x390>  // b.none
    8260:	ldr	w0, [sp, #376]
    8264:	cmp	w0, #0x0
    8268:	csinv	w19, w24, wzr, ge  // ge = tcont
    826c:	mov	w3, #0x0                   	// #0
    8270:	mov	x2, x23
    8274:	mov	x1, x20
    8278:	add	x0, sp, #0x170
    827c:	bl	4a60 <mpfr_sub@plt>
    8280:	ldr	x1, [sp, #384]
    8284:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
    8288:	cmp	x1, x0
    828c:	b.eq	8308 <mpc_div@@Base+0x42c>  // b.none
    8290:	ldr	w0, [sp, #376]
    8294:	cmp	w0, #0x0
    8298:	csinv	w24, w24, wzr, ge  // ge = tcont
    829c:	b	81b8 <mpc_div@@Base+0x2dc>
    82a0:	mov	w3, #0x0                   	// #0
    82a4:	mov	x2, x20
    82a8:	mov	x1, x23
    82ac:	add	x0, sp, #0x170
    82b0:	bl	4a60 <mpfr_sub@plt>
    82b4:	mov	w19, #0x0                   	// #0
    82b8:	ldr	x1, [sp, #384]
    82bc:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
    82c0:	cmp	x1, x0
    82c4:	b.eq	82d4 <mpc_div@@Base+0x3f8>  // b.none
    82c8:	ldr	w0, [sp, #376]
    82cc:	cmp	w0, #0x0
    82d0:	csinv	w19, w24, wzr, ge  // ge = tcont
    82d4:	mov	w3, #0x0                   	// #0
    82d8:	mov	x2, x23
    82dc:	mov	x1, x20
    82e0:	add	x0, sp, #0x170
    82e4:	bl	4e60 <mpfr_add@plt>
    82e8:	ldr	x1, [sp, #384]
    82ec:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
    82f0:	cmp	x1, x0
    82f4:	b.eq	8310 <mpc_div@@Base+0x434>  // b.none
    82f8:	ldr	w0, [sp, #376]
    82fc:	cmp	w0, #0x0
    8300:	csinv	w24, w24, wzr, ge  // ge = tcont
    8304:	b	81b8 <mpc_div@@Base+0x2dc>
    8308:	mov	w24, #0x0                   	// #0
    830c:	b	81b8 <mpc_div@@Base+0x2dc>
    8310:	mov	w24, #0x0                   	// #0
    8314:	b	81b8 <mpc_div@@Base+0x2dc>
    8318:	mov	w1, w19
    831c:	mov	x0, x22
    8320:	bl	5120 <mpfr_set_inf@plt>
    8324:	b	80f4 <mpc_div@@Base+0x218>
    8328:	mov	w1, w24
    832c:	add	x0, x22, #0x20
    8330:	bl	5120 <mpfr_set_inf@plt>
    8334:	mov	w24, #0x0                   	// #0
    8338:	b	7fa0 <mpc_div@@Base+0xc4>
    833c:	stp	x25, x26, [sp, #64]
    8340:	add	x21, sp, #0xb0
    8344:	mov	x1, #0x2                   	// #2
    8348:	mov	x0, x21
    834c:	bl	5440 <mpfr_init2@plt>
    8350:	mov	x1, #0x2                   	// #2
    8354:	add	x0, sp, #0xd0
    8358:	bl	5440 <mpfr_init2@plt>
    835c:	mov	x1, #0x2                   	// #2
    8360:	add	x0, sp, #0x130
    8364:	bl	5440 <mpfr_init2@plt>
    8368:	mov	x1, #0x2                   	// #2
    836c:	add	x0, sp, #0x150
    8370:	bl	5440 <mpfr_init2@plt>
    8374:	mov	x1, #0x2                   	// #2
    8378:	add	x0, sp, #0x170
    837c:	bl	5440 <mpfr_init2@plt>
    8380:	mov	w0, #0x1                   	// #1
    8384:	str	w0, [sp, #376]
    8388:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
    838c:	str	x0, [sp, #384]
    8390:	ldr	x1, [x19]
    8394:	add	x0, sp, #0xf0
    8398:	bl	5440 <mpfr_init2@plt>
    839c:	ldr	x1, [x19, #32]
    83a0:	add	x0, sp, #0x110
    83a4:	bl	5440 <mpfr_init2@plt>
    83a8:	ldr	x1, [x20, #16]
    83ac:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
    83b0:	cmp	x1, x0
    83b4:	mov	w3, #0x0                   	// #0
    83b8:	mov	x2, #0x0                   	// #0
    83bc:	cset	x1, eq  // eq = none
    83c0:	mov	x0, x21
    83c4:	bl	5130 <mpfr_set_ui_2exp@plt>
    83c8:	ldr	x1, [x20, #16]
    83cc:	mov	x0, #0x2                   	// #2
    83d0:	movk	x0, #0x8000, lsl #48
    83d4:	cmp	x1, x0
    83d8:	b.eq	8554 <mpc_div@@Base+0x678>  // b.none
    83dc:	add	x0, sp, #0xb0
    83e0:	ldr	w3, [x20, #8]
    83e4:	mov	w2, #0x0                   	// #0
    83e8:	mov	x1, x0
    83ec:	bl	51d0 <mpfr_set4@plt>
    83f0:	ldr	x1, [x20, #48]
    83f4:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
    83f8:	cmp	x1, x0
    83fc:	mov	w3, #0x0                   	// #0
    8400:	mov	x2, #0x0                   	// #0
    8404:	cset	x1, eq  // eq = none
    8408:	add	x0, sp, #0xd0
    840c:	bl	5130 <mpfr_set_ui_2exp@plt>
    8410:	ldr	x1, [x20, #48]
    8414:	mov	x0, #0x2                   	// #2
    8418:	movk	x0, #0x8000, lsl #48
    841c:	cmp	x1, x0
    8420:	b.eq	856c <mpc_div@@Base+0x690>  // b.none
    8424:	add	x0, sp, #0xd0
    8428:	ldr	w3, [x20, #40]
    842c:	mov	w2, #0x0                   	// #0
    8430:	mov	x1, x0
    8434:	bl	51d0 <mpfr_set4@plt>
    8438:	add	x25, sp, #0xb0
    843c:	add	x21, sp, #0xf0
    8440:	mov	w3, #0x0                   	// #0
    8444:	mov	x2, x25
    8448:	mov	x1, x19
    844c:	mov	x0, x21
    8450:	bl	4b70 <mpfr_mul@plt>
    8454:	add	x24, sp, #0xd0
    8458:	add	x20, sp, #0x110
    845c:	mov	w3, #0x0                   	// #0
    8460:	mov	x2, x24
    8464:	mov	x1, x23
    8468:	mov	x0, x20
    846c:	bl	4b70 <mpfr_mul@plt>
    8470:	mov	w3, #0x0                   	// #0
    8474:	mov	x2, x20
    8478:	mov	x1, x21
    847c:	add	x0, sp, #0x130
    8480:	bl	4e60 <mpfr_add@plt>
    8484:	mov	w3, #0x0                   	// #0
    8488:	mov	x2, x25
    848c:	mov	x1, x23
    8490:	mov	x0, x20
    8494:	bl	4b70 <mpfr_mul@plt>
    8498:	mov	w3, #0x0                   	// #0
    849c:	mov	x2, x24
    84a0:	mov	x1, x19
    84a4:	mov	x0, x21
    84a8:	bl	4b70 <mpfr_mul@plt>
    84ac:	mov	w3, #0x0                   	// #0
    84b0:	mov	x2, x21
    84b4:	mov	x1, x20
    84b8:	add	x0, sp, #0x150
    84bc:	bl	4a60 <mpfr_sub@plt>
    84c0:	mov	x0, #0x2                   	// #2
    84c4:	movk	x0, #0x8000, lsl #48
    84c8:	ldr	x1, [sp, #320]
    84cc:	cmp	x1, x0
    84d0:	b.eq	8584 <mpc_div@@Base+0x6a8>  // b.none
    84d4:	ldr	w3, [sp, #312]
    84d8:	mov	w2, #0x0                   	// #0
    84dc:	add	x1, sp, #0x170
    84e0:	mov	x0, x22
    84e4:	bl	51d0 <mpfr_set4@plt>
    84e8:	mov	x0, #0x2                   	// #2
    84ec:	movk	x0, #0x8000, lsl #48
    84f0:	ldr	x1, [sp, #352]
    84f4:	cmp	x1, x0
    84f8:	b.eq	859c <mpc_div@@Base+0x6c0>  // b.none
    84fc:	ldr	w3, [sp, #344]
    8500:	mov	w2, #0x0                   	// #0
    8504:	add	x1, sp, #0x170
    8508:	add	x0, x22, #0x20
    850c:	bl	51d0 <mpfr_set4@plt>
    8510:	add	x0, sp, #0xb0
    8514:	bl	4d60 <mpfr_clear@plt>
    8518:	add	x0, sp, #0xd0
    851c:	bl	4d60 <mpfr_clear@plt>
    8520:	add	x0, sp, #0x130
    8524:	bl	4d60 <mpfr_clear@plt>
    8528:	add	x0, sp, #0x150
    852c:	bl	4d60 <mpfr_clear@plt>
    8530:	add	x0, sp, #0x170
    8534:	bl	4d60 <mpfr_clear@plt>
    8538:	add	x0, sp, #0xf0
    853c:	bl	4d60 <mpfr_clear@plt>
    8540:	add	x0, sp, #0x110
    8544:	bl	4d60 <mpfr_clear@plt>
    8548:	mov	w24, #0x0                   	// #0
    854c:	ldp	x25, x26, [sp, #64]
    8550:	b	7fa0 <mpc_div@@Base+0xc4>
    8554:	add	x0, sp, #0xb0
    8558:	mov	w3, #0x1                   	// #1
    855c:	mov	w2, #0x0                   	// #0
    8560:	mov	x1, x0
    8564:	bl	51d0 <mpfr_set4@plt>
    8568:	b	83f0 <mpc_div@@Base+0x514>
    856c:	add	x0, sp, #0xd0
    8570:	mov	w3, #0x1                   	// #1
    8574:	mov	w2, #0x0                   	// #0
    8578:	mov	x1, x0
    857c:	bl	51d0 <mpfr_set4@plt>
    8580:	b	8438 <mpc_div@@Base+0x55c>
    8584:	mov	w3, #0x1                   	// #1
    8588:	mov	w2, #0x0                   	// #0
    858c:	add	x1, sp, #0x170
    8590:	mov	x0, x22
    8594:	bl	51d0 <mpfr_set4@plt>
    8598:	b	84e8 <mpc_div@@Base+0x60c>
    859c:	mov	w3, #0x1                   	// #1
    85a0:	mov	w2, #0x0                   	// #0
    85a4:	add	x1, sp, #0x170
    85a8:	add	x0, x22, #0x20
    85ac:	bl	51d0 <mpfr_set4@plt>
    85b0:	b	8510 <mpc_div@@Base+0x634>
    85b4:	mov	x0, x20
    85b8:	bl	54d0 <mpfr_number_p@plt>
    85bc:	cbz	w0, 7f94 <mpc_div@@Base+0xb8>
    85c0:	add	x0, x20, #0x20
    85c4:	bl	54d0 <mpfr_number_p@plt>
    85c8:	cbz	w0, 7f94 <mpc_div@@Base+0xb8>
    85cc:	stp	x25, x26, [sp, #64]
    85d0:	stp	x27, x28, [sp, #80]
    85d4:	ldr	x1, [x20, #48]
    85d8:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
    85dc:	cmp	x1, x0
    85e0:	b.eq	8684 <mpc_div@@Base+0x7a8>  // b.none
    85e4:	ldr	x1, [x20, #16]
    85e8:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
    85ec:	cmp	x1, x0
    85f0:	b.eq	8798 <mpc_div@@Base+0x8bc>  // b.none
    85f4:	ldr	x0, [x22]
    85f8:	ldr	x25, [x22, #32]
    85fc:	cmp	x25, x0
    8600:	csel	x25, x25, x0, ge  // ge = tcont
    8604:	mov	x1, #0x2                   	// #2
    8608:	add	x0, sp, #0x210
    860c:	bl	4cf0 <mpc_init2@plt>
    8610:	add	x0, sp, #0x1b0
    8614:	bl	4aa0 <mpfr_init@plt>
    8618:	ldp	x0, x1, [x20]
    861c:	stp	x0, x1, [sp, #464]
    8620:	ldp	x0, x1, [x20, #16]
    8624:	stp	x0, x1, [sp, #480]
    8628:	ldp	x0, x1, [x20, #32]
    862c:	stp	x0, x1, [sp, #496]
    8630:	ldp	x0, x1, [x20, #48]
    8634:	add	x2, sp, #0x200
    8638:	stp	x0, x1, [x2]
    863c:	add	x0, sp, #0x1f0
    8640:	mov	w2, #0x0                   	// #0
    8644:	mov	x1, x0
    8648:	bl	4b80 <mpfr_neg@plt>
    864c:	bl	52f0 <mpfr_underflow_p@plt>
    8650:	str	w0, [sp, #168]
    8654:	bl	54e0 <mpfr_overflow_p@plt>
    8658:	str	w0, [sp, #172]
    865c:	str	wzr, [sp, #140]
    8660:	str	wzr, [sp, #104]
    8664:	mov	w28, #0x0                   	// #0
    8668:	add	x27, sp, #0x210
    866c:	add	x26, sp, #0x1b0
    8670:	add	x0, sp, #0x1d0
    8674:	str	x0, [sp, #144]
    8678:	add	x0, x27, #0x20
    867c:	str	x0, [sp, #152]
    8680:	b	8c4c <mpc_div@@Base+0xd70>
    8684:	ldr	w0, [x19, #8]
    8688:	mov	w21, #0x1                   	// #1
    868c:	cmp	w0, #0x0
    8690:	cneg	w21, w21, lt  // lt = tstop
    8694:	ldr	w0, [x19, #40]
    8698:	mov	w24, #0x1                   	// #1
    869c:	cmp	w0, #0x0
    86a0:	cneg	w24, w24, lt  // lt = tstop
    86a4:	ldr	w0, [x20, #8]
    86a8:	mov	w25, #0x1                   	// #1
    86ac:	cmp	w0, #0x0
    86b0:	cneg	w25, w25, lt  // lt = tstop
    86b4:	ldr	w0, [x20, #40]
    86b8:	mov	w27, #0x1                   	// #1
    86bc:	cmp	w0, #0x0
    86c0:	cneg	w27, w27, lt  // lt = tstop
    86c4:	add	x26, x22, #0x20
    86c8:	ldr	w3, [sp, #136]
    86cc:	mov	x2, x20
    86d0:	mov	x1, x23
    86d4:	mov	x0, x26
    86d8:	bl	5150 <mpfr_div@plt>
    86dc:	mov	w23, w0
    86e0:	ldr	w3, [sp, #124]
    86e4:	mov	x2, x20
    86e8:	mov	x1, x19
    86ec:	mov	x0, x22
    86f0:	bl	5150 <mpfr_div@plt>
    86f4:	mov	w19, w0
    86f8:	ldr	x1, [x22, #16]
    86fc:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
    8700:	cmp	x1, x0
    8704:	b.eq	8748 <mpc_div@@Base+0x86c>  // b.none
    8708:	ldr	x1, [x22, #48]
    870c:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
    8710:	cmp	x1, x0
    8714:	b.eq	876c <mpc_div@@Base+0x890>  // b.none
    8718:	mov	w24, #0x2                   	// #2
    871c:	tbnz	w19, #31, 8728 <mpc_div@@Base+0x84c>
    8720:	cmp	w19, #0x0
    8724:	cset	w24, ne  // ne = any
    8728:	tbnz	w23, #31, 8790 <mpc_div@@Base+0x8b4>
    872c:	cmp	w23, #0x0
    8730:	mov	w0, #0x4                   	// #4
    8734:	csel	w23, w23, w0, eq  // eq = none
    8738:	orr	w24, w24, w23
    873c:	ldp	x25, x26, [sp, #64]
    8740:	ldp	x27, x28, [sp, #80]
    8744:	b	7fa0 <mpc_div@@Base+0xc4>
    8748:	cmp	w21, w25
    874c:	mov	w3, #0x1                   	// #1
    8750:	ccmp	w24, w27, #0x4, ne  // ne = any
    8754:	cneg	w3, w3, ne  // ne = any
    8758:	mov	w2, #0x0                   	// #0
    875c:	mov	x1, x22
    8760:	mov	x0, x22
    8764:	bl	51d0 <mpfr_set4@plt>
    8768:	b	8708 <mpc_div@@Base+0x82c>
    876c:	cmp	w25, w24
    8770:	mov	w3, #0x1                   	// #1
    8774:	ccmp	w21, w27, #0x0, ne  // ne = any
    8778:	cneg	w3, w3, eq  // eq = none
    877c:	mov	w2, #0x0                   	// #0
    8780:	mov	x1, x26
    8784:	mov	x0, x26
    8788:	bl	51d0 <mpfr_set4@plt>
    878c:	b	8718 <mpc_div@@Base+0x83c>
    8790:	mov	w23, #0x8                   	// #8
    8794:	b	8738 <mpc_div@@Base+0x85c>
    8798:	cmp	x22, x19
    879c:	cset	w0, eq  // eq = none
    87a0:	cmp	x20, x22
    87a4:	csinc	w0, w0, wzr, ne  // ne = any
    87a8:	ldr	x26, [x19, #16]
    87ac:	cmp	w0, #0x0
    87b0:	add	x21, sp, #0x170
    87b4:	csel	x21, x21, x22, ne  // ne = any
    87b8:	ldr	w1, [x19, #8]
    87bc:	mov	w28, #0x1                   	// #1
    87c0:	cmp	w1, #0x0
    87c4:	cneg	w28, w28, lt  // lt = tstop
    87c8:	ldr	w1, [x19, #40]
    87cc:	mov	w24, #0x1                   	// #1
    87d0:	cmp	w1, #0x0
    87d4:	cneg	w24, w24, lt  // lt = tstop
    87d8:	ldr	w1, [x20, #8]
    87dc:	mov	w27, #0x1                   	// #1
    87e0:	cmp	w1, #0x0
    87e4:	cneg	w27, w27, lt  // lt = tstop
    87e8:	ldr	w1, [x20, #40]
    87ec:	mov	w25, #0x1                   	// #1
    87f0:	cmp	w1, #0x0
    87f4:	cneg	w25, w25, lt  // lt = tstop
    87f8:	cbnz	w0, 88a0 <mpc_div@@Base+0x9c4>
    87fc:	add	x0, sp, #0x150
    8800:	ldp	x2, x3, [x20, #32]
    8804:	stp	x2, x3, [sp, #336]
    8808:	ldp	x2, x3, [x20, #48]
    880c:	stp	x2, x3, [sp, #352]
    8810:	ldr	w3, [sp, #124]
    8814:	mov	x20, x0
    8818:	mov	x2, x0
    881c:	mov	x1, x23
    8820:	mov	x0, x21
    8824:	bl	5150 <mpfr_div@plt>
    8828:	mov	w23, w0
    882c:	mov	w2, #0x0                   	// #0
    8830:	mov	x1, x20
    8834:	mov	x0, x20
    8838:	bl	4b80 <mpfr_neg@plt>
    883c:	ldr	w3, [sp, #136]
    8840:	mov	x2, x20
    8844:	mov	x1, x19
    8848:	add	x0, x21, #0x20
    884c:	bl	5150 <mpfr_div@plt>
    8850:	mov	w19, w0
    8854:	ldr	x1, [x22, #16]
    8858:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
    885c:	cmp	x1, x0
    8860:	b.eq	892c <mpc_div@@Base+0xa50>  // b.none
    8864:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
    8868:	cmp	x26, x0
    886c:	b.eq	8950 <mpc_div@@Base+0xa74>  // b.none
    8870:	mov	w24, #0x2                   	// #2
    8874:	tbnz	w23, #31, 8880 <mpc_div@@Base+0x9a4>
    8878:	cmp	w23, #0x0
    887c:	cset	w24, ne  // ne = any
    8880:	tbnz	w19, #31, 8974 <mpc_div@@Base+0xa98>
    8884:	cmp	w19, #0x0
    8888:	mov	w0, #0x4                   	// #4
    888c:	csel	w19, w19, w0, eq  // eq = none
    8890:	orr	w24, w24, w19
    8894:	ldp	x25, x26, [sp, #64]
    8898:	ldp	x27, x28, [sp, #80]
    889c:	b	7fa0 <mpc_div@@Base+0xc4>
    88a0:	add	x0, sp, #0x170
    88a4:	ldr	x2, [x22, #32]
    88a8:	ldr	x1, [x22]
    88ac:	str	x0, [sp, #104]
    88b0:	bl	53c0 <mpc_init3@plt>
    88b4:	add	x0, sp, #0x150
    88b8:	ldp	x2, x3, [x20, #32]
    88bc:	stp	x2, x3, [sp, #336]
    88c0:	ldp	x2, x3, [x20, #48]
    88c4:	stp	x2, x3, [sp, #352]
    88c8:	ldr	w3, [sp, #124]
    88cc:	mov	x20, x0
    88d0:	mov	x2, x0
    88d4:	mov	x1, x23
    88d8:	mov	x0, x21
    88dc:	bl	5150 <mpfr_div@plt>
    88e0:	mov	w23, w0
    88e4:	mov	w2, #0x0                   	// #0
    88e8:	mov	x1, x20
    88ec:	mov	x0, x20
    88f0:	bl	4b80 <mpfr_neg@plt>
    88f4:	ldr	w3, [sp, #136]
    88f8:	mov	x2, x20
    88fc:	mov	x1, x19
    8900:	add	x0, x21, #0x20
    8904:	bl	5150 <mpfr_div@plt>
    8908:	mov	w19, w0
    890c:	mov	w2, #0x0                   	// #0
    8910:	ldr	x20, [sp, #104]
    8914:	mov	x1, x20
    8918:	mov	x0, x22
    891c:	bl	5580 <mpc_set@plt>
    8920:	mov	x0, x20
    8924:	bl	4a10 <mpc_clear@plt>
    8928:	b	8854 <mpc_div@@Base+0x978>
    892c:	cmp	w28, w27
    8930:	mov	w3, #0x1                   	// #1
    8934:	ccmp	w24, w25, #0x4, ne  // ne = any
    8938:	cneg	w3, w3, ne  // ne = any
    893c:	mov	w2, #0x0                   	// #0
    8940:	mov	x1, x22
    8944:	mov	x0, x22
    8948:	bl	51d0 <mpfr_set4@plt>
    894c:	b	8864 <mpc_div@@Base+0x988>
    8950:	add	x0, x22, #0x20
    8954:	cmp	w27, w24
    8958:	mov	w3, #0x1                   	// #1
    895c:	ccmp	w28, w25, #0x0, ne  // ne = any
    8960:	cneg	w3, w3, eq  // eq = none
    8964:	mov	w2, #0x0                   	// #0
    8968:	mov	x1, x0
    896c:	bl	51d0 <mpfr_set4@plt>
    8970:	b	8870 <mpc_div@@Base+0x994>
    8974:	mov	w19, #0x8                   	// #8
    8978:	b	8890 <mpc_div@@Base+0x9b4>
    897c:	mov	x0, #0x2                   	// #2
    8980:	sdiv	x0, x25, x0
    8984:	b	8c64 <mpc_div@@Base+0xd88>
    8988:	ldr	x0, [sp, #544]
    898c:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
    8990:	cmp	x0, x1
    8994:	b.ge	89ec <mpc_div@@Base+0xb10>  // b.tcont
    8998:	mov	x1, #0x2                   	// #2
    899c:	movk	x1, #0x8000, lsl #48
    89a0:	cmp	x0, x1
    89a4:	b.eq	89e4 <mpc_div@@Base+0xb08>  // b.none
    89a8:	ldr	x0, [sp, #576]
    89ac:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
    89b0:	cmp	x0, x1
    89b4:	b.ge	8a68 <mpc_div@@Base+0xb8c>  // b.tcont
    89b8:	mov	x1, #0x2                   	// #2
    89bc:	movk	x1, #0x8000, lsl #48
    89c0:	cmp	x0, x1
    89c4:	b.eq	8a60 <mpc_div@@Base+0xb84>  // b.none
    89c8:	str	wzr, [sp, #128]
    89cc:	mov	w2, w21
    89d0:	add	x1, sp, #0x210
    89d4:	mov	x0, x22
    89d8:	bl	5580 <mpc_set@plt>
    89dc:	str	wzr, [sp, #164]
    89e0:	b	904c <mpc_div@@Base+0x1170>
    89e4:	bl	4b00 <mpfr_set_erangeflag@plt>
    89e8:	b	89a8 <mpc_div@@Base+0xacc>
    89ec:	ldr	w20, [sp, #536]
    89f0:	cmp	w20, #0x0
    89f4:	b.gt	8a24 <mpc_div@@Base+0xb48>
    89f8:	tbz	w20, #31, 89a8 <mpc_div@@Base+0xacc>
    89fc:	add	x25, sp, #0x210
    8a00:	mov	x0, x25
    8a04:	bl	4bb0 <mpfr_nextbelow@plt>
    8a08:	ldr	x1, [sp, #544]
    8a0c:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
    8a10:	cmp	x1, x0
    8a14:	cset	w19, eq  // eq = none
    8a18:	mov	x0, x25
    8a1c:	bl	4e00 <mpfr_nextabove@plt>
    8a20:	b	8a48 <mpc_div@@Base+0xb6c>
    8a24:	add	x25, sp, #0x210
    8a28:	mov	x0, x25
    8a2c:	bl	4e00 <mpfr_nextabove@plt>
    8a30:	ldr	x1, [sp, #544]
    8a34:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
    8a38:	cmp	x1, x0
    8a3c:	cset	w19, eq  // eq = none
    8a40:	mov	x0, x25
    8a44:	bl	4bb0 <mpfr_nextbelow@plt>
    8a48:	cbz	w19, 89a8 <mpc_div@@Base+0xacc>
    8a4c:	mov	w1, w20
    8a50:	add	x0, sp, #0x210
    8a54:	bl	5120 <mpfr_set_inf@plt>
    8a58:	str	w19, [sp, #140]
    8a5c:	b	89a8 <mpc_div@@Base+0xacc>
    8a60:	bl	4b00 <mpfr_set_erangeflag@plt>
    8a64:	b	89c8 <mpc_div@@Base+0xaec>
    8a68:	ldr	w19, [sp, #568]
    8a6c:	cmp	w19, #0x0
    8a70:	b.gt	8aa8 <mpc_div@@Base+0xbcc>
    8a74:	str	wzr, [sp, #128]
    8a78:	tbz	w19, #31, 89cc <mpc_div@@Base+0xaf0>
    8a7c:	add	x20, sp, #0x230
    8a80:	mov	x0, x20
    8a84:	bl	4bb0 <mpfr_nextbelow@plt>
    8a88:	ldr	x1, [sp, #576]
    8a8c:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
    8a90:	cmp	x1, x0
    8a94:	cset	w0, eq  // eq = none
    8a98:	str	w0, [sp, #128]
    8a9c:	mov	x0, x20
    8aa0:	bl	4e00 <mpfr_nextabove@plt>
    8aa4:	b	8ad0 <mpc_div@@Base+0xbf4>
    8aa8:	add	x20, sp, #0x230
    8aac:	mov	x0, x20
    8ab0:	bl	4e00 <mpfr_nextabove@plt>
    8ab4:	ldr	x1, [sp, #576]
    8ab8:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
    8abc:	cmp	x1, x0
    8ac0:	cset	w0, eq  // eq = none
    8ac4:	str	w0, [sp, #128]
    8ac8:	mov	x0, x20
    8acc:	bl	4bb0 <mpfr_nextbelow@plt>
    8ad0:	ldr	w0, [sp, #128]
    8ad4:	cbz	w0, 89cc <mpc_div@@Base+0xaf0>
    8ad8:	mov	w1, w19
    8adc:	add	x0, sp, #0x230
    8ae0:	bl	5120 <mpfr_set_inf@plt>
    8ae4:	b	89cc <mpc_div@@Base+0xaf0>
    8ae8:	bl	4e20 <mpfr_clear_underflow@plt>
    8aec:	bl	4a50 <mpfr_clear_overflow@plt>
    8af0:	mov	w3, #0x1                   	// #1
    8af4:	mov	x2, x26
    8af8:	mov	x1, x27
    8afc:	mov	x0, x27
    8b00:	bl	5150 <mpfr_div@plt>
    8b04:	orr	w23, w23, w0
    8b08:	bl	52f0 <mpfr_underflow_p@plt>
    8b0c:	str	w0, [sp, #104]
    8b10:	bl	54e0 <mpfr_overflow_p@plt>
    8b14:	str	w0, [sp, #140]
    8b18:	ldr	w1, [sp, #104]
    8b1c:	orr	w0, w1, w0
    8b20:	cmp	w0, #0x0
    8b24:	ccmp	w23, #0x0, #0x4, eq  // eq = none
    8b28:	b.ne	8ba0 <mpc_div@@Base+0xcc4>  // b.any
    8b2c:	bl	4e20 <mpfr_clear_underflow@plt>
    8b30:	bl	4a50 <mpfr_clear_overflow@plt>
    8b34:	mov	w3, #0x1                   	// #1
    8b38:	mov	x2, x26
    8b3c:	ldr	x0, [sp, #152]
    8b40:	mov	x1, x0
    8b44:	bl	5150 <mpfr_div@plt>
    8b48:	orr	w24, w24, w0
    8b4c:	bl	52f0 <mpfr_underflow_p@plt>
    8b50:	mov	w23, w0
    8b54:	str	w0, [sp, #164]
    8b58:	bl	54e0 <mpfr_overflow_p@plt>
    8b5c:	str	w0, [sp, #128]
    8b60:	orr	w0, w23, w0
    8b64:	cmp	w0, #0x0
    8b68:	ccmp	w24, #0x0, #0x4, eq  // eq = none
    8b6c:	b.eq	900c <mpc_div@@Base+0x1130>  // b.none
    8b70:	ldr	w0, [sp, #136]
    8b74:	cmp	w0, #0x0
    8b78:	ldr	x4, [x22, #32]
    8b7c:	cinc	x4, x4, eq  // eq = none
    8b80:	mov	w3, #0x1                   	// #1
    8b84:	mov	w2, #0x0                   	// #0
    8b88:	sub	x1, x25, #0x4
    8b8c:	ldr	x0, [sp, #152]
    8b90:	bl	5450 <mpfr_can_round@plt>
    8b94:	cmp	w0, #0x0
    8b98:	cset	w0, ne  // ne = any
    8b9c:	b	8c30 <mpc_div@@Base+0xd54>
    8ba0:	ldr	w0, [sp, #124]
    8ba4:	cmp	w0, #0x0
    8ba8:	ldr	x4, [x22]
    8bac:	cinc	x4, x4, eq  // eq = none
    8bb0:	mov	w3, #0x1                   	// #1
    8bb4:	mov	w2, #0x0                   	// #0
    8bb8:	sub	x1, x25, #0x4
    8bbc:	mov	x0, x27
    8bc0:	bl	5450 <mpfr_can_round@plt>
    8bc4:	cbz	w0, 8bf4 <mpc_div@@Base+0xd18>
    8bc8:	b	8b2c <mpc_div@@Base+0xc50>
    8bcc:	ldr	w0, [sp, #124]
    8bd0:	cmp	w0, #0x0
    8bd4:	ldr	x4, [x22]
    8bd8:	cinc	x4, x4, eq  // eq = none
    8bdc:	mov	w3, #0x1                   	// #1
    8be0:	mov	w2, #0x0                   	// #0
    8be4:	sub	x1, x25, #0x4
    8be8:	mov	x0, x27
    8bec:	bl	5450 <mpfr_can_round@plt>
    8bf0:	cbnz	w0, 8fc8 <mpc_div@@Base+0x10ec>
    8bf4:	ldr	w0, [sp, #160]
    8bf8:	str	w0, [sp, #140]
    8bfc:	str	w0, [sp, #104]
    8c00:	b	8c34 <mpc_div@@Base+0xd58>
    8c04:	ldr	w0, [sp, #136]
    8c08:	cmp	w0, #0x0
    8c0c:	ldr	x4, [x22, #32]
    8c10:	cinc	x4, x4, eq  // eq = none
    8c14:	mov	w3, #0x1                   	// #1
    8c18:	mov	w2, #0x0                   	// #0
    8c1c:	sub	x1, x25, #0x4
    8c20:	ldr	x0, [sp, #152]
    8c24:	bl	5450 <mpfr_can_round@plt>
    8c28:	cmp	w0, #0x0
    8c2c:	cset	w0, ne  // ne = any
    8c30:	cbnz	w0, 8d64 <mpc_div@@Base+0xe88>
    8c34:	ldr	w0, [sp, #116]
    8c38:	ldr	w1, [sp, #132]
    8c3c:	orr	w0, w0, w1
    8c40:	ldr	w1, [sp, #120]
    8c44:	orr	w0, w0, w1
    8c48:	cbnz	w0, 8d54 <mpc_div@@Base+0xe78>
    8c4c:	add	w28, w28, #0x1
    8c50:	cmp	w28, #0x2
    8c54:	b.gt	897c <mpc_div@@Base+0xaa0>
    8c58:	mov	x0, x25
    8c5c:	bl	4d20 <mpc_ceil_log2@plt>
    8c60:	add	x0, x0, #0x5
    8c64:	add	x25, x25, x0
    8c68:	mov	x1, x25
    8c6c:	mov	x0, x27
    8c70:	bl	4c00 <mpc_set_prec@plt>
    8c74:	mov	x1, x25
    8c78:	mov	x0, x26
    8c7c:	bl	4c80 <mpfr_set_prec@plt>
    8c80:	bl	4e20 <mpfr_clear_underflow@plt>
    8c84:	bl	4a50 <mpfr_clear_overflow@plt>
    8c88:	mov	w2, #0x2                   	// #2
    8c8c:	mov	x1, x20
    8c90:	mov	x0, x26
    8c94:	bl	4ea0 <mpc_norm@plt>
    8c98:	str	w0, [sp, #128]
    8c9c:	bl	52f0 <mpfr_underflow_p@plt>
    8ca0:	mov	w23, w0
    8ca4:	str	w0, [sp, #116]
    8ca8:	bl	54e0 <mpfr_overflow_p@plt>
    8cac:	str	w0, [sp, #132]
    8cb0:	cbz	w23, 8cc4 <mpc_div@@Base+0xde8>
    8cb4:	mov	w0, #0x1                   	// #1
    8cb8:	str	w0, [sp, #440]
    8cbc:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
    8cc0:	str	x0, [sp, #448]
    8cc4:	bl	4e20 <mpfr_clear_underflow@plt>
    8cc8:	bl	4a50 <mpfr_clear_overflow@plt>
    8ccc:	mov	w3, #0x11                  	// #17
    8cd0:	ldr	x2, [sp, #144]
    8cd4:	mov	x1, x19
    8cd8:	mov	x0, x27
    8cdc:	bl	4ed0 <mpc_mul@plt>
    8ce0:	and	w1, w0, #0x3
    8ce4:	mov	w23, #0xffffffff            	// #-1
    8ce8:	cmp	w1, #0x2
    8cec:	b.eq	8cf8 <mpc_div@@Base+0xe1c>  // b.none
    8cf0:	cmp	w1, #0x0
    8cf4:	cset	w23, ne  // ne = any
    8cf8:	asr	w0, w0, #2
    8cfc:	mov	w24, #0xffffffff            	// #-1
    8d00:	cmp	w0, #0x2
    8d04:	b.eq	8d10 <mpc_div@@Base+0xe34>  // b.none
    8d08:	cmp	w0, #0x0
    8d0c:	cset	w24, ne  // ne = any
    8d10:	bl	52f0 <mpfr_underflow_p@plt>
    8d14:	str	w0, [sp, #120]
    8d18:	bl	54e0 <mpfr_overflow_p@plt>
    8d1c:	str	w0, [sp, #160]
    8d20:	cbnz	w0, 8988 <mpc_div@@Base+0xaac>
    8d24:	ldr	w0, [sp, #128]
    8d28:	cbnz	w0, 8f4c <mpc_div@@Base+0x1070>
    8d2c:	cmp	w23, #0x0
    8d30:	ccmp	w24, #0x0, #0x4, ne  // ne = any
    8d34:	b.eq	8ae8 <mpc_div@@Base+0xc0c>  // b.none
    8d38:	mov	w3, #0x1                   	// #1
    8d3c:	mov	x2, x26
    8d40:	mov	x1, #0x1                   	// #1
    8d44:	mov	x0, x26
    8d48:	bl	4f70 <mpfr_ui_div@plt>
    8d4c:	cbnz	w0, 8f60 <mpc_div@@Base+0x1084>
    8d50:	b	8f84 <mpc_div@@Base+0x10a8>
    8d54:	ldr	w0, [sp, #160]
    8d58:	str	w0, [sp, #128]
    8d5c:	str	w0, [sp, #164]
    8d60:	b	900c <mpc_div@@Base+0x1130>
    8d64:	ldr	w0, [sp, #160]
    8d68:	str	w0, [sp, #128]
    8d6c:	str	w0, [sp, #164]
    8d70:	b	900c <mpc_div@@Base+0x1130>
    8d74:	ldr	w1, [sp, #536]
    8d78:	mov	x0, x22
    8d7c:	bl	5120 <mpfr_set_inf@plt>
    8d80:	ldr	x0, [sp, #544]
    8d84:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
    8d88:	cmp	x0, x1
    8d8c:	b.ge	8dac <mpc_div@@Base+0xed0>  // b.tcont
    8d90:	mov	w23, #0x0                   	// #0
    8d94:	mov	x1, #0x2                   	// #2
    8d98:	movk	x1, #0x8000, lsl #48
    8d9c:	cmp	x0, x1
    8da0:	b.ne	8db0 <mpc_div@@Base+0xed4>  // b.any
    8da4:	bl	4b00 <mpfr_set_erangeflag@plt>
    8da8:	b	8db0 <mpc_div@@Base+0xed4>
    8dac:	ldr	w23, [sp, #536]
    8db0:	ldr	w0, [sp, #128]
    8db4:	cbnz	w0, 8dcc <mpc_div@@Base+0xef0>
    8db8:	ldr	w0, [sp, #116]
    8dbc:	cmp	w0, #0x0
    8dc0:	ldr	w0, [sp, #120]
    8dc4:	ccmp	w0, #0x0, #0x0, ne  // ne = any
    8dc8:	b.ne	8e40 <mpc_div@@Base+0xf64>  // b.any
    8dcc:	add	x22, x22, #0x20
    8dd0:	ldr	x0, [sp, #576]
    8dd4:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
    8dd8:	cmp	x0, x1
    8ddc:	b.ge	8e7c <mpc_div@@Base+0xfa0>  // b.tcont
    8de0:	mov	w1, #0x0                   	// #0
    8de4:	mov	x2, #0x2                   	// #2
    8de8:	movk	x2, #0x8000, lsl #48
    8dec:	cmp	x0, x2
    8df0:	b.ne	8e80 <mpc_div@@Base+0xfa4>  // b.any
    8df4:	bl	4b00 <mpfr_set_erangeflag@plt>
    8df8:	mov	w1, #0x0                   	// #0
    8dfc:	b	8e80 <mpc_div@@Base+0xfa4>
    8e00:	ldr	w0, [sp, #104]
    8e04:	cbnz	w0, 8e1c <mpc_div@@Base+0xf40>
    8e08:	ldr	w0, [sp, #132]
    8e0c:	cmp	w0, #0x0
    8e10:	ldr	w0, [sp, #160]
    8e14:	ccmp	w0, #0x0, #0x0, ne  // ne = any
    8e18:	b.ne	8e38 <mpc_div@@Base+0xf5c>  // b.any
    8e1c:	mov	w1, #0xffffffff            	// #-1
    8e20:	ldr	w0, [sp, #536]
    8e24:	cmp	w0, #0x0
    8e28:	cneg	w23, w1, lt  // lt = tstop
    8e2c:	cneg	w1, w1, ge  // ge = tcont
    8e30:	mov	x0, x22
    8e34:	bl	4d10 <mpfr_set_zero@plt>
    8e38:	ldr	w0, [sp, #128]
    8e3c:	cbnz	w0, 8dcc <mpc_div@@Base+0xef0>
    8e40:	ldr	w0, [sp, #164]
    8e44:	cbnz	w0, 8e5c <mpc_div@@Base+0xf80>
    8e48:	ldr	w0, [sp, #132]
    8e4c:	cmp	w0, #0x0
    8e50:	ldr	w0, [sp, #160]
    8e54:	ccmp	w0, #0x0, #0x0, ne  // ne = any
    8e58:	b.ne	8eb8 <mpc_div@@Base+0xfdc>  // b.any
    8e5c:	mov	w1, #0xffffffff            	// #-1
    8e60:	ldr	w0, [sp, #568]
    8e64:	cmp	w0, #0x0
    8e68:	cneg	w24, w1, lt  // lt = tstop
    8e6c:	cneg	w1, w1, ge  // ge = tcont
    8e70:	add	x0, x22, #0x20
    8e74:	bl	4d10 <mpfr_set_zero@plt>
    8e78:	b	8eb8 <mpc_div@@Base+0xfdc>
    8e7c:	ldr	w1, [sp, #568]
    8e80:	mov	x0, x22
    8e84:	bl	5120 <mpfr_set_inf@plt>
    8e88:	ldr	x0, [sp, #576]
    8e8c:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
    8e90:	cmp	x0, x1
    8e94:	b.ge	8eb4 <mpc_div@@Base+0xfd8>  // b.tcont
    8e98:	mov	w24, #0x0                   	// #0
    8e9c:	mov	x1, #0x2                   	// #2
    8ea0:	movk	x1, #0x8000, lsl #48
    8ea4:	cmp	x0, x1
    8ea8:	b.ne	8eb8 <mpc_div@@Base+0xfdc>  // b.any
    8eac:	bl	4b00 <mpfr_set_erangeflag@plt>
    8eb0:	b	8eb8 <mpc_div@@Base+0xfdc>
    8eb4:	ldr	w24, [sp, #568]
    8eb8:	add	x0, sp, #0x210
    8ebc:	bl	4a10 <mpc_clear@plt>
    8ec0:	add	x0, sp, #0x1b0
    8ec4:	bl	4d60 <mpfr_clear@plt>
    8ec8:	ldr	w0, [sp, #168]
    8ecc:	cbnz	w0, 8f08 <mpc_div@@Base+0x102c>
    8ed0:	ldr	w0, [sp, #172]
    8ed4:	cbnz	w0, 8f10 <mpc_div@@Base+0x1034>
    8ed8:	mov	w0, #0x2                   	// #2
    8edc:	tbnz	w23, #31, 8ee8 <mpc_div@@Base+0x100c>
    8ee0:	cmp	w23, #0x0
    8ee4:	cset	w0, ne  // ne = any
    8ee8:	tbnz	w24, #31, 8f18 <mpc_div@@Base+0x103c>
    8eec:	cmp	w24, #0x0
    8ef0:	mov	w1, #0x4                   	// #4
    8ef4:	csel	w24, w24, w1, eq  // eq = none
    8ef8:	orr	w24, w0, w24
    8efc:	ldp	x25, x26, [sp, #64]
    8f00:	ldp	x27, x28, [sp, #80]
    8f04:	b	7fa0 <mpc_div@@Base+0xc4>
    8f08:	bl	4990 <mpfr_set_underflow@plt>
    8f0c:	b	8ed0 <mpc_div@@Base+0xff4>
    8f10:	bl	5490 <mpfr_set_overflow@plt>
    8f14:	b	8ed8 <mpc_div@@Base+0xffc>
    8f18:	mov	w24, #0x8                   	// #8
    8f1c:	b	8ef8 <mpc_div@@Base+0x101c>
    8f20:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
    8f24:	cmp	x1, x0
    8f28:	b.eq	8f40 <mpc_div@@Base+0x1064>  // b.none
    8f2c:	ldr	w0, [x20, #8]
    8f30:	tbz	w0, #31, 80c4 <mpc_div@@Base+0x1e8>
    8f34:	neg	w24, w24
    8f38:	mov	w0, #0x0                   	// #0
    8f3c:	b	80e4 <mpc_div@@Base+0x208>
    8f40:	mov	w24, #0x0                   	// #0
    8f44:	mov	w0, #0x0                   	// #0
    8f48:	b	80e4 <mpc_div@@Base+0x208>
    8f4c:	mov	w3, #0x1                   	// #1
    8f50:	mov	x2, x26
    8f54:	mov	x1, #0x1                   	// #1
    8f58:	mov	x0, x26
    8f5c:	bl	4f70 <mpfr_ui_div@plt>
    8f60:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
    8f64:	ldr	x1, [sp, #544]
    8f68:	cmp	x1, x0
    8f6c:	cset	w1, ne  // ne = any
    8f70:	orr	w23, w23, w1
    8f74:	ldr	x1, [sp, #576]
    8f78:	cmp	x1, x0
    8f7c:	cset	w0, ne  // ne = any
    8f80:	orr	w24, w24, w0
    8f84:	bl	4e20 <mpfr_clear_underflow@plt>
    8f88:	bl	4a50 <mpfr_clear_overflow@plt>
    8f8c:	mov	w3, #0x1                   	// #1
    8f90:	mov	x2, x26
    8f94:	mov	x1, x27
    8f98:	mov	x0, x27
    8f9c:	bl	4b70 <mpfr_mul@plt>
    8fa0:	orr	w23, w23, w0
    8fa4:	bl	52f0 <mpfr_underflow_p@plt>
    8fa8:	str	w0, [sp, #104]
    8fac:	bl	54e0 <mpfr_overflow_p@plt>
    8fb0:	str	w0, [sp, #140]
    8fb4:	ldr	w1, [sp, #104]
    8fb8:	orr	w0, w1, w0
    8fbc:	cmp	w0, #0x0
    8fc0:	ccmp	w23, #0x0, #0x4, eq  // eq = none
    8fc4:	b.ne	8bcc <mpc_div@@Base+0xcf0>  // b.any
    8fc8:	bl	4e20 <mpfr_clear_underflow@plt>
    8fcc:	bl	4a50 <mpfr_clear_overflow@plt>
    8fd0:	mov	w3, #0x1                   	// #1
    8fd4:	mov	x2, x26
    8fd8:	ldr	x0, [sp, #152]
    8fdc:	mov	x1, x0
    8fe0:	bl	4b70 <mpfr_mul@plt>
    8fe4:	orr	w24, w24, w0
    8fe8:	bl	52f0 <mpfr_underflow_p@plt>
    8fec:	mov	w23, w0
    8ff0:	str	w0, [sp, #164]
    8ff4:	bl	54e0 <mpfr_overflow_p@plt>
    8ff8:	str	w0, [sp, #128]
    8ffc:	orr	w0, w23, w0
    9000:	cmp	w0, #0x0
    9004:	ccmp	w24, #0x0, #0x4, eq  // eq = none
    9008:	b.ne	8c04 <mpc_div@@Base+0xd28>  // b.any
    900c:	mov	w2, w21
    9010:	add	x1, sp, #0x210
    9014:	mov	x0, x22
    9018:	bl	5580 <mpc_set@plt>
    901c:	and	w1, w0, #0x3
    9020:	mov	w23, #0xffffffff            	// #-1
    9024:	cmp	w1, #0x2
    9028:	b.eq	9034 <mpc_div@@Base+0x1158>  // b.none
    902c:	cmp	w1, #0x0
    9030:	cset	w23, ne  // ne = any
    9034:	asr	w0, w0, #2
    9038:	mov	w24, #0xffffffff            	// #-1
    903c:	cmp	w0, #0x2
    9040:	b.eq	904c <mpc_div@@Base+0x1170>  // b.none
    9044:	cmp	w0, #0x0
    9048:	cset	w24, ne  // ne = any
    904c:	ldr	w0, [sp, #140]
    9050:	cbnz	w0, 9068 <mpc_div@@Base+0x118c>
    9054:	ldr	w0, [sp, #116]
    9058:	cmp	w0, #0x0
    905c:	ldr	w0, [sp, #120]
    9060:	ccmp	w0, #0x0, #0x0, ne  // ne = any
    9064:	b.ne	8e00 <mpc_div@@Base+0xf24>  // b.any
    9068:	ldr	x0, [sp, #544]
    906c:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
    9070:	cmp	x0, x1
    9074:	b.ge	8d74 <mpc_div@@Base+0xe98>  // b.tcont
    9078:	mov	w1, #0x0                   	// #0
    907c:	mov	x2, #0x2                   	// #2
    9080:	movk	x2, #0x8000, lsl #48
    9084:	cmp	x0, x2
    9088:	b.ne	8d78 <mpc_div@@Base+0xe9c>  // b.any
    908c:	bl	4b00 <mpfr_set_erangeflag@plt>
    9090:	mov	w1, #0x0                   	// #0
    9094:	b	8d78 <mpc_div@@Base+0xe9c>
    9098:	neg	w24, w24
    909c:	b	80d4 <mpc_div@@Base+0x1f8>
    90a0:	mov	w24, #0x0                   	// #0
    90a4:	mov	w0, #0x1                   	// #1
    90a8:	b	80e4 <mpc_div@@Base+0x208>
    90ac:	sub	w19, w19, w24
    90b0:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
    90b4:	cmp	x1, x0
    90b8:	b.ne	80bc <mpc_div@@Base+0x1e0>  // b.any
    90bc:	mov	w24, #0x0                   	// #0
    90c0:	mov	w0, #0xffffffff            	// #-1
    90c4:	b	80e4 <mpc_div@@Base+0x208>
    90c8:	ldr	x2, [x20, #48]
    90cc:	mov	w19, #0x0                   	// #0
    90d0:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
    90d4:	cmp	x2, x0
    90d8:	b.ne	80a4 <mpc_div@@Base+0x1c8>  // b.any
    90dc:	mov	w24, #0x0                   	// #0
    90e0:	mov	w0, #0x0                   	// #0
    90e4:	b	80e4 <mpc_div@@Base+0x208>

00000000000090e8 <mpc_div_fr@@Base>:
    90e8:	stp	x29, x30, [sp, #-112]!
    90ec:	mov	x29, sp
    90f0:	stp	x19, x20, [sp, #16]
    90f4:	stp	x21, x22, [sp, #32]
    90f8:	stp	x23, x24, [sp, #48]
    90fc:	str	x25, [sp, #64]
    9100:	mov	x21, x0
    9104:	mov	x19, x1
    9108:	mov	x22, x2
    910c:	mov	w23, w3
    9110:	mov	x25, x0
    9114:	add	x20, sp, #0x50
    9118:	ldr	x1, [x25], #32
    911c:	mov	x0, x20
    9120:	bl	5440 <mpfr_init2@plt>
    9124:	and	w3, w23, #0xf
    9128:	mov	x2, x22
    912c:	mov	x1, x19
    9130:	mov	x0, x20
    9134:	bl	5150 <mpfr_div@plt>
    9138:	mov	w24, w0
    913c:	asr	w3, w23, #4
    9140:	mov	x2, x22
    9144:	add	x1, x19, #0x20
    9148:	mov	x0, x25
    914c:	bl	5150 <mpfr_div@plt>
    9150:	mov	w19, w0
    9154:	ldr	w3, [sp, #88]
    9158:	mov	w2, #0x0                   	// #0
    915c:	mov	x1, x20
    9160:	mov	x0, x21
    9164:	bl	51d0 <mpfr_set4@plt>
    9168:	mov	x0, x20
    916c:	bl	4d60 <mpfr_clear@plt>
    9170:	mov	w0, #0x2                   	// #2
    9174:	tbnz	w24, #31, 9180 <mpc_div_fr@@Base+0x98>
    9178:	cmp	w24, #0x0
    917c:	cset	w0, ne  // ne = any
    9180:	tbnz	w19, #31, 91ac <mpc_div_fr@@Base+0xc4>
    9184:	cmp	w19, #0x0
    9188:	mov	w1, #0x4                   	// #4
    918c:	csel	w19, w19, w1, eq  // eq = none
    9190:	orr	w0, w0, w19
    9194:	ldp	x19, x20, [sp, #16]
    9198:	ldp	x21, x22, [sp, #32]
    919c:	ldp	x23, x24, [sp, #48]
    91a0:	ldr	x25, [sp, #64]
    91a4:	ldp	x29, x30, [sp], #112
    91a8:	ret
    91ac:	mov	w19, #0x8                   	// #8
    91b0:	b	9190 <mpc_div_fr@@Base+0xa8>

00000000000091b4 <mpc_div_ui@@Base>:
    91b4:	stp	x29, x30, [sp, #-64]!
    91b8:	mov	x29, sp
    91bc:	stp	x19, x20, [sp, #16]
    91c0:	stp	x21, x22, [sp, #32]
    91c4:	str	x23, [sp, #48]
    91c8:	mov	x21, x0
    91cc:	mov	x22, x1
    91d0:	mov	x23, x2
    91d4:	mov	w19, w3
    91d8:	and	w3, w3, #0xf
    91dc:	bl	5550 <mpfr_div_ui@plt>
    91e0:	mov	w20, w0
    91e4:	asr	w3, w19, #4
    91e8:	mov	x2, x23
    91ec:	add	x1, x22, #0x20
    91f0:	add	x0, x21, #0x20
    91f4:	bl	5550 <mpfr_div_ui@plt>
    91f8:	mov	w1, #0x2                   	// #2
    91fc:	tbnz	w20, #31, 9208 <mpc_div_ui@@Base+0x54>
    9200:	cmp	w20, #0x0
    9204:	cset	w1, ne  // ne = any
    9208:	tbnz	w0, #31, 9230 <mpc_div_ui@@Base+0x7c>
    920c:	cmp	w0, #0x0
    9210:	mov	w2, #0x4                   	// #4
    9214:	csel	w0, w0, w2, eq  // eq = none
    9218:	orr	w0, w1, w0
    921c:	ldp	x19, x20, [sp, #16]
    9220:	ldp	x21, x22, [sp, #32]
    9224:	ldr	x23, [sp, #48]
    9228:	ldp	x29, x30, [sp], #64
    922c:	ret
    9230:	mov	w0, #0x8                   	// #8
    9234:	b	9218 <mpc_div_ui@@Base+0x64>

0000000000009238 <mpc_exp@@Base>:
    9238:	stp	x29, x30, [sp, #-304]!
    923c:	mov	x29, sp
    9240:	stp	x23, x24, [sp, #48]
    9244:	mov	x24, x0
    9248:	mov	x23, x1
    924c:	ldr	x0, [x1, #16]
    9250:	mov	x1, #0x2                   	// #2
    9254:	movk	x1, #0x8000, lsl #48
    9258:	cmp	x0, x1
    925c:	b.eq	97e8 <mpc_exp@@Base+0x5b0>  // b.none
    9260:	stp	x25, x26, [sp, #64]
    9264:	mov	w25, w2
    9268:	ldr	x1, [x23, #48]
    926c:	mov	x2, #0x2                   	// #2
    9270:	movk	x2, #0x8000, lsl #48
    9274:	cmp	x1, x2
    9278:	b.eq	9798 <mpc_exp@@Base+0x560>  // b.none
    927c:	mov	x2, #0x8000000000000001    	// #-9223372036854775807
    9280:	cmp	x1, x2
    9284:	b.eq	9358 <mpc_exp@@Base+0x120>  // b.none
    9288:	mov	x2, #0x8000000000000001    	// #-9223372036854775807
    928c:	cmp	x0, x2
    9290:	b.eq	93bc <mpc_exp@@Base+0x184>  // b.none
    9294:	mov	x2, #0x8000000000000003    	// #-9223372036854775805
    9298:	cmp	x0, x2
    929c:	b.eq	9420 <mpc_exp@@Base+0x1e8>  // b.none
    92a0:	mov	x2, #0x8000000000000003    	// #-9223372036854775805
    92a4:	cmp	x1, x2
    92a8:	b.eq	9574 <mpc_exp@@Base+0x33c>  // b.none
    92ac:	stp	x19, x20, [sp, #16]
    92b0:	stp	x21, x22, [sp, #32]
    92b4:	stp	x27, x28, [sp, #80]
    92b8:	ldr	x2, [x24]
    92bc:	ldr	x19, [x24, #32]
    92c0:	cmp	x19, x2
    92c4:	csel	x19, x19, x2, ge  // ge = tcont
    92c8:	neg	x1, x1
    92cc:	cmp	x0, #0x0
    92d0:	csneg	x0, xzr, x0, ge  // ge = tcont
    92d4:	cmp	x1, x0
    92d8:	csel	x0, x1, x0, ge  // ge = tcont
    92dc:	add	x19, x0, x19
    92e0:	mov	x1, #0x2                   	// #2
    92e4:	add	x0, sp, #0x110
    92e8:	bl	5440 <mpfr_init2@plt>
    92ec:	mov	x1, #0x2                   	// #2
    92f0:	add	x0, sp, #0xf0
    92f4:	bl	5440 <mpfr_init2@plt>
    92f8:	mov	x1, #0x2                   	// #2
    92fc:	add	x0, sp, #0xd0
    9300:	bl	5440 <mpfr_init2@plt>
    9304:	bl	52f0 <mpfr_underflow_p@plt>
    9308:	str	w0, [sp, #104]
    930c:	bl	54e0 <mpfr_overflow_p@plt>
    9310:	str	w0, [sp, #108]
    9314:	asr	w0, w25, #4
    9318:	str	w0, [sp, #100]
    931c:	cmp	w0, #0x0
    9320:	cset	x28, eq  // eq = none
    9324:	add	x22, sp, #0x110
    9328:	add	x21, sp, #0xf0
    932c:	add	x20, sp, #0xd0
    9330:	add	x27, x23, #0x20
    9334:	mov	x26, #0x8000000000000001    	// #-9223372036854775807
    9338:	b	95d8 <mpc_exp@@Base+0x3a0>
    933c:	mov	w3, #0x0                   	// #0
    9340:	mov	x2, #0x0                   	// #0
    9344:	mov	x1, #0x0                   	// #0
    9348:	mov	x0, x24
    934c:	bl	5040 <mpc_set_ui_ui@plt>
    9350:	ldp	x25, x26, [sp, #64]
    9354:	b	9748 <mpc_exp@@Base+0x510>
    9358:	stp	x19, x20, [sp, #16]
    935c:	and	w2, w25, #0xf
    9360:	mov	x1, x23
    9364:	mov	x0, x24
    9368:	bl	5230 <mpfr_exp@plt>
    936c:	mov	w19, w0
    9370:	ldr	w3, [x23, #40]
    9374:	asr	w2, w25, #4
    9378:	add	x1, x23, #0x20
    937c:	add	x0, x24, #0x20
    9380:	bl	51d0 <mpfr_set4@plt>
    9384:	mov	w1, #0x2                   	// #2
    9388:	tbnz	w19, #31, 9394 <mpc_exp@@Base+0x15c>
    938c:	cmp	w19, #0x0
    9390:	cset	w1, ne  // ne = any
    9394:	tbnz	w0, #31, 93b4 <mpc_exp@@Base+0x17c>
    9398:	cmp	w0, #0x0
    939c:	mov	w2, #0x4                   	// #4
    93a0:	csel	w0, w0, w2, eq  // eq = none
    93a4:	orr	w0, w1, w0
    93a8:	ldp	x19, x20, [sp, #16]
    93ac:	ldp	x25, x26, [sp, #64]
    93b0:	b	9748 <mpc_exp@@Base+0x510>
    93b4:	mov	w0, #0x8                   	// #8
    93b8:	b	93a4 <mpc_exp@@Base+0x16c>
    93bc:	stp	x19, x20, [sp, #16]
    93c0:	add	x23, x23, #0x20
    93c4:	and	w2, w25, #0xf
    93c8:	mov	x1, x23
    93cc:	mov	x0, x24
    93d0:	bl	5050 <mpfr_cos@plt>
    93d4:	mov	w19, w0
    93d8:	asr	w2, w25, #4
    93dc:	mov	x1, x23
    93e0:	add	x0, x24, #0x20
    93e4:	bl	5080 <mpfr_sin@plt>
    93e8:	mov	w1, #0x2                   	// #2
    93ec:	tbnz	w19, #31, 93f8 <mpc_exp@@Base+0x1c0>
    93f0:	cmp	w19, #0x0
    93f4:	cset	w1, ne  // ne = any
    93f8:	tbnz	w0, #31, 9418 <mpc_exp@@Base+0x1e0>
    93fc:	cmp	w0, #0x0
    9400:	mov	w2, #0x4                   	// #4
    9404:	csel	w0, w0, w2, eq  // eq = none
    9408:	orr	w0, w1, w0
    940c:	ldp	x19, x20, [sp, #16]
    9410:	ldp	x25, x26, [sp, #64]
    9414:	b	9748 <mpc_exp@@Base+0x510>
    9418:	mov	w0, #0x8                   	// #8
    941c:	b	9408 <mpc_exp@@Base+0x1d0>
    9420:	stp	x19, x20, [sp, #16]
    9424:	mov	x1, #0x2                   	// #2
    9428:	add	x0, sp, #0x70
    942c:	bl	5440 <mpfr_init2@plt>
    9430:	ldr	w0, [x23, #8]
    9434:	tbz	w0, #31, 9510 <mpc_exp@@Base+0x2d8>
    9438:	mov	w0, #0x1                   	// #1
    943c:	str	w0, [sp, #120]
    9440:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
    9444:	str	x0, [sp, #128]
    9448:	ldr	x1, [x23, #48]
    944c:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
    9450:	cmp	x1, x0
    9454:	b.eq	980c <mpc_exp@@Base+0x5d4>  // b.none
    9458:	stp	x21, x22, [sp, #32]
    945c:	add	x21, sp, #0x90
    9460:	mov	x1, #0x2                   	// #2
    9464:	mov	x0, x21
    9468:	bl	5440 <mpfr_init2@plt>
    946c:	add	x22, sp, #0xb0
    9470:	mov	x1, #0x2                   	// #2
    9474:	mov	x0, x22
    9478:	bl	5440 <mpfr_init2@plt>
    947c:	mov	w3, #0x0                   	// #0
    9480:	add	x2, x23, #0x20
    9484:	mov	x1, x21
    9488:	mov	x0, x22
    948c:	bl	5520 <mpfr_sin_cos@plt>
    9490:	add	x19, sp, #0x70
    9494:	ldr	w3, [sp, #152]
    9498:	mov	w2, #0x0                   	// #0
    949c:	mov	x1, x19
    94a0:	mov	x0, x24
    94a4:	bl	51d0 <mpfr_set4@plt>
    94a8:	mov	w20, w0
    94ac:	ldr	w3, [sp, #184]
    94b0:	mov	w2, #0x0                   	// #0
    94b4:	mov	x1, x19
    94b8:	add	x0, x24, #0x20
    94bc:	bl	51d0 <mpfr_set4@plt>
    94c0:	mov	w19, w0
    94c4:	mov	x0, x22
    94c8:	bl	4d60 <mpfr_clear@plt>
    94cc:	mov	x0, x21
    94d0:	bl	4d60 <mpfr_clear@plt>
    94d4:	ldp	x21, x22, [sp, #32]
    94d8:	add	x0, sp, #0x70
    94dc:	bl	4d60 <mpfr_clear@plt>
    94e0:	mov	w0, #0x2                   	// #2
    94e4:	tbnz	w20, #31, 94f0 <mpc_exp@@Base+0x2b8>
    94e8:	cmp	w20, #0x0
    94ec:	cset	w0, ne  // ne = any
    94f0:	tbnz	w19, #31, 956c <mpc_exp@@Base+0x334>
    94f4:	cmp	w19, #0x0
    94f8:	mov	w1, #0x4                   	// #4
    94fc:	csel	w19, w19, w1, eq  // eq = none
    9500:	orr	w0, w19, w0
    9504:	ldp	x19, x20, [sp, #16]
    9508:	ldp	x25, x26, [sp, #64]
    950c:	b	9748 <mpc_exp@@Base+0x510>
    9510:	mov	w1, #0x1                   	// #1
    9514:	add	x0, sp, #0x70
    9518:	bl	5120 <mpfr_set_inf@plt>
    951c:	ldr	x1, [x23, #48]
    9520:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
    9524:	cmp	x1, x0
    9528:	b.ne	9458 <mpc_exp@@Base+0x220>  // b.any
    952c:	ldr	w19, [x23, #8]
    9530:	ldr	w3, [sp, #120]
    9534:	mov	w2, #0x0                   	// #0
    9538:	add	x1, sp, #0x70
    953c:	mov	x0, x24
    9540:	bl	51d0 <mpfr_set4@plt>
    9544:	mov	w20, w0
    9548:	tbnz	w19, #31, 9824 <mpc_exp@@Base+0x5ec>
    954c:	add	x0, x24, #0x20
    9550:	bl	4a40 <mpfr_set_nan@plt>
    9554:	add	x0, sp, #0x70
    9558:	bl	4d60 <mpfr_clear@plt>
    955c:	mov	w19, #0x0                   	// #0
    9560:	mov	w0, #0x2                   	// #2
    9564:	tbz	w20, #31, 94e8 <mpc_exp@@Base+0x2b0>
    9568:	b	9500 <mpc_exp@@Base+0x2c8>
    956c:	mov	w19, #0x8                   	// #8
    9570:	b	9500 <mpc_exp@@Base+0x2c8>
    9574:	mov	x0, x24
    9578:	bl	4a40 <mpfr_set_nan@plt>
    957c:	add	x0, x24, #0x20
    9580:	bl	4a40 <mpfr_set_nan@plt>
    9584:	mov	w0, #0x0                   	// #0
    9588:	ldp	x25, x26, [sp, #64]
    958c:	b	9748 <mpc_exp@@Base+0x510>
    9590:	mov	w3, #0x0                   	// #0
    9594:	mov	x2, x22
    9598:	mov	x1, x20
    959c:	mov	x0, x20
    95a0:	bl	4b70 <mpfr_mul@plt>
    95a4:	bl	54e0 <mpfr_overflow_p@plt>
    95a8:	cbnz	w0, 9688 <mpc_exp@@Base+0x450>
    95ac:	ldr	x0, [sp, #288]
    95b0:	cmp	x0, x26
    95b4:	b.eq	9688 <mpc_exp@@Base+0x450>  // b.none
    95b8:	ldr	x4, [x24, #32]
    95bc:	add	x4, x28, x4
    95c0:	mov	w3, #0x1                   	// #1
    95c4:	mov	w2, #0x0                   	// #0
    95c8:	sub	x1, x19, #0x2
    95cc:	mov	x0, x20
    95d0:	bl	5450 <mpfr_can_round@plt>
    95d4:	cbnz	w0, 9688 <mpc_exp@@Base+0x450>
    95d8:	mov	x0, x19
    95dc:	bl	4d20 <mpc_ceil_log2@plt>
    95e0:	add	x0, x0, #0x5
    95e4:	add	x19, x19, x0
    95e8:	mov	x1, x19
    95ec:	mov	x0, x22
    95f0:	bl	4c80 <mpfr_set_prec@plt>
    95f4:	mov	x1, x19
    95f8:	mov	x0, x21
    95fc:	bl	4c80 <mpfr_set_prec@plt>
    9600:	mov	x1, x19
    9604:	mov	x0, x20
    9608:	bl	4c80 <mpfr_set_prec@plt>
    960c:	bl	4a50 <mpfr_clear_overflow@plt>
    9610:	bl	4e20 <mpfr_clear_underflow@plt>
    9614:	mov	w2, #0x0                   	// #0
    9618:	mov	x1, x23
    961c:	mov	x0, x22
    9620:	bl	5230 <mpfr_exp@plt>
    9624:	mov	w3, #0x0                   	// #0
    9628:	mov	x2, x27
    962c:	mov	x1, x21
    9630:	mov	x0, x20
    9634:	bl	5520 <mpfr_sin_cos@plt>
    9638:	mov	w3, #0x0                   	// #0
    963c:	mov	x2, x22
    9640:	mov	x1, x21
    9644:	mov	x0, x21
    9648:	bl	4b70 <mpfr_mul@plt>
    964c:	bl	54e0 <mpfr_overflow_p@plt>
    9650:	cbnz	w0, 9590 <mpc_exp@@Base+0x358>
    9654:	ldr	x0, [sp, #288]
    9658:	cmp	x0, x26
    965c:	b.eq	9590 <mpc_exp@@Base+0x358>  // b.none
    9660:	tst	x25, #0xf
    9664:	ldr	x4, [x24]
    9668:	cinc	x4, x4, eq  // eq = none
    966c:	mov	w3, #0x1                   	// #1
    9670:	mov	w2, #0x0                   	// #0
    9674:	sub	x1, x19, #0x2
    9678:	mov	x0, x21
    967c:	bl	5450 <mpfr_can_round@plt>
    9680:	cbz	w0, 95d8 <mpc_exp@@Base+0x3a0>
    9684:	b	9590 <mpc_exp@@Base+0x358>
    9688:	and	w25, w25, #0xf
    968c:	ldr	w3, [sp, #248]
    9690:	mov	w2, w25
    9694:	add	x1, sp, #0xf0
    9698:	mov	x0, x24
    969c:	bl	51d0 <mpfr_set4@plt>
    96a0:	mov	w21, w0
    96a4:	add	x20, x24, #0x20
    96a8:	ldr	w3, [sp, #216]
    96ac:	ldr	w22, [sp, #100]
    96b0:	mov	w2, w22
    96b4:	add	x1, sp, #0xd0
    96b8:	mov	x0, x20
    96bc:	bl	51d0 <mpfr_set4@plt>
    96c0:	mov	w19, w0
    96c4:	bl	54e0 <mpfr_overflow_p@plt>
    96c8:	cbz	w0, 9754 <mpc_exp@@Base+0x51c>
    96cc:	mov	w1, w25
    96d0:	mov	x0, x24
    96d4:	bl	4dd0 <mpc_fix_inf@plt>
    96d8:	mov	w21, w0
    96dc:	mov	w1, w22
    96e0:	mov	x0, x20
    96e4:	bl	4dd0 <mpc_fix_inf@plt>
    96e8:	mov	w19, w0
    96ec:	add	x0, sp, #0x110
    96f0:	bl	4d60 <mpfr_clear@plt>
    96f4:	add	x0, sp, #0xf0
    96f8:	bl	4d60 <mpfr_clear@plt>
    96fc:	add	x0, sp, #0xd0
    9700:	bl	4d60 <mpfr_clear@plt>
    9704:	ldr	w0, [sp, #104]
    9708:	cbnz	w0, 9780 <mpc_exp@@Base+0x548>
    970c:	ldr	w0, [sp, #108]
    9710:	cbnz	w0, 9788 <mpc_exp@@Base+0x550>
    9714:	mov	w1, #0x2                   	// #2
    9718:	tbnz	w21, #31, 9724 <mpc_exp@@Base+0x4ec>
    971c:	cmp	w21, #0x0
    9720:	cset	w1, ne  // ne = any
    9724:	tbnz	w19, #31, 9790 <mpc_exp@@Base+0x558>
    9728:	cmp	w19, #0x0
    972c:	mov	w0, #0x4                   	// #4
    9730:	csel	w19, w19, w0, eq  // eq = none
    9734:	orr	w0, w1, w19
    9738:	ldp	x19, x20, [sp, #16]
    973c:	ldp	x21, x22, [sp, #32]
    9740:	ldp	x25, x26, [sp, #64]
    9744:	ldp	x27, x28, [sp, #80]
    9748:	ldp	x23, x24, [sp, #48]
    974c:	ldp	x29, x30, [sp], #304
    9750:	ret
    9754:	bl	52f0 <mpfr_underflow_p@plt>
    9758:	cbz	w0, 96ec <mpc_exp@@Base+0x4b4>
    975c:	mov	w1, w25
    9760:	mov	x0, x24
    9764:	bl	50d0 <mpc_fix_zero@plt>
    9768:	mov	w21, w0
    976c:	ldr	w1, [sp, #100]
    9770:	mov	x0, x20
    9774:	bl	50d0 <mpc_fix_zero@plt>
    9778:	mov	w19, w0
    977c:	b	96ec <mpc_exp@@Base+0x4b4>
    9780:	bl	4990 <mpfr_set_underflow@plt>
    9784:	b	970c <mpc_exp@@Base+0x4d4>
    9788:	bl	5490 <mpfr_set_overflow@plt>
    978c:	b	9714 <mpc_exp@@Base+0x4dc>
    9790:	mov	w19, #0x8                   	// #8
    9794:	b	9734 <mpc_exp@@Base+0x4fc>
    9798:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
    979c:	cmp	x0, x1
    97a0:	b.ne	97cc <mpc_exp@@Base+0x594>  // b.any
    97a4:	ldr	w0, [x23, #8]
    97a8:	tbnz	w0, #31, 933c <mpc_exp@@Base+0x104>
    97ac:	mov	w1, #0x1                   	// #1
    97b0:	mov	x0, x24
    97b4:	bl	5120 <mpfr_set_inf@plt>
    97b8:	add	x0, x24, #0x20
    97bc:	bl	4a40 <mpfr_set_nan@plt>
    97c0:	mov	w0, #0x0                   	// #0
    97c4:	ldp	x25, x26, [sp, #64]
    97c8:	b	9748 <mpc_exp@@Base+0x510>
    97cc:	ldp	x25, x26, [sp, #64]
    97d0:	mov	x0, x24
    97d4:	bl	4a40 <mpfr_set_nan@plt>
    97d8:	add	x0, x24, #0x20
    97dc:	bl	4a40 <mpfr_set_nan@plt>
    97e0:	mov	w0, #0x0                   	// #0
    97e4:	b	9748 <mpc_exp@@Base+0x510>
    97e8:	ldr	x1, [x23, #48]
    97ec:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
    97f0:	cmp	x1, x0
    97f4:	b.ne	97d0 <mpc_exp@@Base+0x598>  // b.any
    97f8:	mov	w2, #0x0                   	// #0
    97fc:	mov	x1, x23
    9800:	mov	x0, x24
    9804:	bl	5580 <mpc_set@plt>
    9808:	b	9748 <mpc_exp@@Base+0x510>
    980c:	mov	w3, #0x1                   	// #1
    9810:	mov	w2, #0x0                   	// #0
    9814:	add	x1, sp, #0x70
    9818:	mov	x0, x24
    981c:	bl	51d0 <mpfr_set4@plt>
    9820:	mov	w20, w0
    9824:	ldr	w3, [sp, #120]
    9828:	mov	w2, #0x0                   	// #0
    982c:	add	x1, sp, #0x70
    9830:	add	x0, x24, #0x20
    9834:	bl	51d0 <mpfr_set4@plt>
    9838:	mov	w19, w0
    983c:	b	94d8 <mpc_exp@@Base+0x2a0>
    9840:	ldr	x2, [x0, #16]
    9844:	mov	x3, #0x8000000000000003    	// #-9223372036854775805
    9848:	cmp	x2, x3
    984c:	b.le	9868 <mpc_exp@@Base+0x630>
    9850:	ldr	x4, [x1, #16]
    9854:	mov	x3, #0x8000000000000003    	// #-9223372036854775805
    9858:	cmp	x4, x3
    985c:	b.gt	9870 <mpc_exp@@Base+0x638>
    9860:	ldr	x0, [x0]
    9864:	b	986c <mpc_exp@@Base+0x634>
    9868:	ldr	x0, [x1]
    986c:	ret
    9870:	cmp	x2, x4
    9874:	csel	x3, x2, x4, ge  // ge = tcont
    9878:	add	x3, x3, #0x1
    987c:	ldr	x0, [x0]
    9880:	sub	x2, x2, x0
    9884:	ldr	x0, [x1]
    9888:	sub	x4, x4, x0
    988c:	cmp	x2, x4
    9890:	csel	x2, x2, x4, le
    9894:	sub	x0, x3, x2
    9898:	b	986c <mpc_exp@@Base+0x634>

000000000000989c <mpc_fma_naive@@Base>:
    989c:	stp	x29, x30, [sp, #-256]!
    98a0:	mov	x29, sp
    98a4:	stp	x19, x20, [sp, #16]
    98a8:	stp	x21, x22, [sp, #32]
    98ac:	stp	x23, x24, [sp, #48]
    98b0:	stp	x25, x26, [sp, #64]
    98b4:	stp	x27, x28, [sp, #80]
    98b8:	mov	x24, x0
    98bc:	mov	x19, x1
    98c0:	mov	x21, x2
    98c4:	mov	x20, x3
    98c8:	mov	w25, w4
    98cc:	ldr	x1, [x1]
    98d0:	ldr	x0, [x2]
    98d4:	add	x23, sp, #0xe0
    98d8:	add	x1, x1, x0
    98dc:	mov	x0, x23
    98e0:	bl	5440 <mpfr_init2@plt>
    98e4:	ldr	x1, [x19]
    98e8:	ldr	x0, [x21, #32]
    98ec:	add	x28, sp, #0xc0
    98f0:	add	x1, x1, x0
    98f4:	mov	x0, x28
    98f8:	bl	5440 <mpfr_init2@plt>
    98fc:	ldr	x1, [x19, #32]
    9900:	ldr	x0, [x21]
    9904:	add	x26, sp, #0xa0
    9908:	add	x1, x1, x0
    990c:	mov	x0, x26
    9910:	bl	5440 <mpfr_init2@plt>
    9914:	ldr	x1, [x19, #32]
    9918:	ldr	x0, [x21, #32]
    991c:	add	x22, sp, #0x80
    9920:	add	x1, x1, x0
    9924:	mov	x0, x22
    9928:	bl	5440 <mpfr_init2@plt>
    992c:	mov	w3, #0x1                   	// #1
    9930:	mov	x2, x21
    9934:	mov	x1, x19
    9938:	mov	x0, x23
    993c:	bl	4b70 <mpfr_mul@plt>
    9940:	add	x27, x21, #0x20
    9944:	mov	w3, #0x1                   	// #1
    9948:	mov	x2, x27
    994c:	mov	x1, x19
    9950:	mov	x0, x28
    9954:	bl	4b70 <mpfr_mul@plt>
    9958:	add	x19, x19, #0x20
    995c:	mov	w3, #0x1                   	// #1
    9960:	mov	x2, x21
    9964:	mov	x1, x19
    9968:	mov	x0, x26
    996c:	bl	4b70 <mpfr_mul@plt>
    9970:	mov	w3, #0x1                   	// #1
    9974:	mov	x2, x27
    9978:	mov	x1, x19
    997c:	mov	x0, x22
    9980:	bl	4b70 <mpfr_mul@plt>
    9984:	mov	x1, x22
    9988:	mov	x0, x23
    998c:	bl	9840 <mpc_exp@@Base+0x608>
    9990:	mov	x26, x0
    9994:	mov	x1, x20
    9998:	mov	x0, x23
    999c:	bl	9840 <mpc_exp@@Base+0x608>
    99a0:	mov	x21, x0
    99a4:	mov	x1, x20
    99a8:	mov	x0, x22
    99ac:	bl	9840 <mpc_exp@@Base+0x608>
    99b0:	mov	x19, x0
    99b4:	cmp	x21, x0
    99b8:	csel	x0, x21, x0, le
    99bc:	cmp	x26, x0
    99c0:	b.le	9afc <mpc_fma_naive@@Base+0x260>
    99c4:	cmp	x21, x19
    99c8:	b.gt	9b3c <mpc_fma_naive@@Base+0x2a0>
    99cc:	add	x0, sp, #0x60
    99d0:	mov	x1, x21
    99d4:	mov	x21, x0
    99d8:	bl	5440 <mpfr_init2@plt>
    99dc:	mov	w3, #0x1                   	// #1
    99e0:	mov	x2, x20
    99e4:	add	x1, sp, #0xe0
    99e8:	mov	x0, x21
    99ec:	bl	4e60 <mpfr_add@plt>
    99f0:	and	w3, w25, #0xf
    99f4:	add	x2, sp, #0x80
    99f8:	mov	x1, x21
    99fc:	mov	x0, x24
    9a00:	bl	4a60 <mpfr_sub@plt>
    9a04:	mov	w22, w0
    9a08:	add	x23, sp, #0xa0
    9a0c:	add	x21, sp, #0xc0
    9a10:	mov	x1, x23
    9a14:	mov	x0, x21
    9a18:	bl	9840 <mpc_exp@@Base+0x608>
    9a1c:	mov	x26, x0
    9a20:	add	x20, x20, #0x20
    9a24:	mov	x1, x20
    9a28:	mov	x0, x21
    9a2c:	bl	9840 <mpc_exp@@Base+0x608>
    9a30:	mov	x21, x0
    9a34:	mov	x1, x20
    9a38:	mov	x0, x23
    9a3c:	bl	9840 <mpc_exp@@Base+0x608>
    9a40:	cmp	x21, x0
    9a44:	csel	x1, x21, x0, le
    9a48:	cmp	x26, x1
    9a4c:	b.le	9b7c <mpc_fma_naive@@Base+0x2e0>
    9a50:	cmp	x21, x0
    9a54:	b.gt	9bbc <mpc_fma_naive@@Base+0x320>
    9a58:	add	x19, sp, #0x60
    9a5c:	mov	x1, x21
    9a60:	mov	x0, x19
    9a64:	bl	4c80 <mpfr_set_prec@plt>
    9a68:	mov	w3, #0x1                   	// #1
    9a6c:	mov	x2, x20
    9a70:	add	x1, sp, #0xc0
    9a74:	mov	x0, x19
    9a78:	bl	4e60 <mpfr_add@plt>
    9a7c:	asr	w3, w25, #4
    9a80:	add	x2, sp, #0xa0
    9a84:	mov	x1, x19
    9a88:	add	x0, x24, #0x20
    9a8c:	bl	4e60 <mpfr_add@plt>
    9a90:	mov	w19, w0
    9a94:	add	x0, sp, #0xe0
    9a98:	bl	4d60 <mpfr_clear@plt>
    9a9c:	add	x0, sp, #0xc0
    9aa0:	bl	4d60 <mpfr_clear@plt>
    9aa4:	add	x0, sp, #0xa0
    9aa8:	bl	4d60 <mpfr_clear@plt>
    9aac:	add	x0, sp, #0x80
    9ab0:	bl	4d60 <mpfr_clear@plt>
    9ab4:	add	x0, sp, #0x60
    9ab8:	bl	4d60 <mpfr_clear@plt>
    9abc:	mov	w0, #0x2                   	// #2
    9ac0:	tbnz	w22, #31, 9acc <mpc_fma_naive@@Base+0x230>
    9ac4:	cmp	w22, #0x0
    9ac8:	cset	w0, ne  // ne = any
    9acc:	tbnz	w19, #31, 9bfc <mpc_fma_naive@@Base+0x360>
    9ad0:	cmp	w19, #0x0
    9ad4:	mov	w1, #0x4                   	// #4
    9ad8:	csel	w19, w19, w1, eq  // eq = none
    9adc:	orr	w0, w0, w19
    9ae0:	ldp	x19, x20, [sp, #16]
    9ae4:	ldp	x21, x22, [sp, #32]
    9ae8:	ldp	x23, x24, [sp, #48]
    9aec:	ldp	x25, x26, [sp, #64]
    9af0:	ldp	x27, x28, [sp, #80]
    9af4:	ldp	x29, x30, [sp], #256
    9af8:	ret
    9afc:	add	x21, sp, #0x60
    9b00:	mov	x1, x26
    9b04:	mov	x0, x21
    9b08:	bl	5440 <mpfr_init2@plt>
    9b0c:	mov	w3, #0x1                   	// #1
    9b10:	add	x2, sp, #0x80
    9b14:	add	x1, sp, #0xe0
    9b18:	mov	x0, x21
    9b1c:	bl	4a60 <mpfr_sub@plt>
    9b20:	and	w3, w25, #0xf
    9b24:	mov	x2, x20
    9b28:	mov	x1, x21
    9b2c:	mov	x0, x24
    9b30:	bl	4e60 <mpfr_add@plt>
    9b34:	mov	w22, w0
    9b38:	b	9a08 <mpc_fma_naive@@Base+0x16c>
    9b3c:	add	x21, sp, #0x60
    9b40:	mov	x1, x19
    9b44:	mov	x0, x21
    9b48:	bl	5440 <mpfr_init2@plt>
    9b4c:	mov	w3, #0x1                   	// #1
    9b50:	add	x2, sp, #0x80
    9b54:	mov	x1, x20
    9b58:	mov	x0, x21
    9b5c:	bl	4a60 <mpfr_sub@plt>
    9b60:	and	w3, w25, #0xf
    9b64:	add	x2, sp, #0xe0
    9b68:	mov	x1, x21
    9b6c:	mov	x0, x24
    9b70:	bl	4e60 <mpfr_add@plt>
    9b74:	mov	w22, w0
    9b78:	b	9a08 <mpc_fma_naive@@Base+0x16c>
    9b7c:	add	x19, sp, #0x60
    9b80:	mov	x1, x26
    9b84:	mov	x0, x19
    9b88:	bl	4c80 <mpfr_set_prec@plt>
    9b8c:	mov	w3, #0x1                   	// #1
    9b90:	add	x2, sp, #0xa0
    9b94:	add	x1, sp, #0xc0
    9b98:	mov	x0, x19
    9b9c:	bl	4e60 <mpfr_add@plt>
    9ba0:	asr	w3, w25, #4
    9ba4:	mov	x2, x20
    9ba8:	mov	x1, x19
    9bac:	add	x0, x24, #0x20
    9bb0:	bl	4e60 <mpfr_add@plt>
    9bb4:	mov	w19, w0
    9bb8:	b	9a94 <mpc_fma_naive@@Base+0x1f8>
    9bbc:	add	x0, sp, #0x60
    9bc0:	mov	x1, x19
    9bc4:	mov	x19, x0
    9bc8:	bl	4c80 <mpfr_set_prec@plt>
    9bcc:	mov	w3, #0x1                   	// #1
    9bd0:	add	x2, sp, #0xa0
    9bd4:	mov	x1, x20
    9bd8:	mov	x0, x19
    9bdc:	bl	4e60 <mpfr_add@plt>
    9be0:	asr	w3, w25, #4
    9be4:	add	x2, sp, #0xc0
    9be8:	mov	x1, x19
    9bec:	add	x0, x24, #0x20
    9bf0:	bl	4e60 <mpfr_add@plt>
    9bf4:	mov	w19, w0
    9bf8:	b	9a94 <mpc_fma_naive@@Base+0x1f8>
    9bfc:	mov	w19, #0x8                   	// #8
    9c00:	b	9adc <mpc_fma_naive@@Base+0x240>

0000000000009c04 <mpc_fma@@Base>:
    9c04:	stp	x29, x30, [sp, #-208]!
    9c08:	mov	x29, sp
    9c0c:	stp	x19, x20, [sp, #16]
    9c10:	stp	x21, x22, [sp, #32]
    9c14:	stp	x23, x24, [sp, #48]
    9c18:	mov	x22, x0
    9c1c:	mov	x19, x1
    9c20:	mov	x20, x2
    9c24:	mov	x21, x3
    9c28:	mov	w23, w4
    9c2c:	mov	x0, x1
    9c30:	bl	54d0 <mpfr_number_p@plt>
    9c34:	cbz	w0, 9c44 <mpc_fma@@Base+0x40>
    9c38:	add	x0, x19, #0x20
    9c3c:	bl	54d0 <mpfr_number_p@plt>
    9c40:	cbnz	w0, 9c78 <mpc_fma@@Base+0x74>
    9c44:	mov	w4, w23
    9c48:	mov	x3, x21
    9c4c:	mov	x2, x20
    9c50:	mov	x1, x19
    9c54:	mov	x0, x22
    9c58:	bl	5560 <mpc_fma_naive@plt>
    9c5c:	mov	w24, w0
    9c60:	mov	w0, w24
    9c64:	ldp	x19, x20, [sp, #16]
    9c68:	ldp	x21, x22, [sp, #32]
    9c6c:	ldp	x23, x24, [sp, #48]
    9c70:	ldp	x29, x30, [sp], #208
    9c74:	ret
    9c78:	mov	x0, x20
    9c7c:	bl	54d0 <mpfr_number_p@plt>
    9c80:	cbz	w0, 9c44 <mpc_fma@@Base+0x40>
    9c84:	add	x0, x20, #0x20
    9c88:	bl	54d0 <mpfr_number_p@plt>
    9c8c:	cbz	w0, 9c44 <mpc_fma@@Base+0x40>
    9c90:	mov	x0, x21
    9c94:	bl	54d0 <mpfr_number_p@plt>
    9c98:	cbz	w0, 9c44 <mpc_fma@@Base+0x40>
    9c9c:	add	x0, x21, #0x20
    9ca0:	bl	54d0 <mpfr_number_p@plt>
    9ca4:	cbz	w0, 9c44 <mpc_fma@@Base+0x40>
    9ca8:	stp	x25, x26, [sp, #64]
    9cac:	stp	x27, x28, [sp, #80]
    9cb0:	ldr	x0, [x22]
    9cb4:	mov	x24, x0
    9cb8:	str	x0, [sp, #136]
    9cbc:	ldr	x26, [x22, #32]
    9cc0:	bl	4d20 <mpc_ceil_log2@plt>
    9cc4:	add	x24, x0, x24
    9cc8:	add	x24, x24, #0xa
    9ccc:	mov	x0, x26
    9cd0:	bl	4d20 <mpc_ceil_log2@plt>
    9cd4:	add	x25, x0, x26
    9cd8:	add	x25, x25, #0xa
    9cdc:	mov	x2, x25
    9ce0:	mov	x1, x24
    9ce4:	add	x0, sp, #0x90
    9ce8:	bl	53c0 <mpc_init3@plt>
    9cec:	cmp	wzr, w23, lsr #4
    9cf0:	cinc	x0, x26, eq  // eq = none
    9cf4:	str	x0, [sp, #128]
    9cf8:	mov	w0, #0x2                   	// #2
    9cfc:	str	w0, [sp, #108]
    9d00:	str	wzr, [sp, #104]
    9d04:	str	wzr, [sp, #100]
    9d08:	add	x27, sp, #0x90
    9d0c:	mov	x28, #0x8000000000000001    	// #-9223372036854775807
    9d10:	add	x0, x27, #0x20
    9d14:	str	x0, [sp, #120]
    9d18:	mov	w3, #0x11                  	// #17
    9d1c:	mov	x2, x20
    9d20:	mov	x1, x19
    9d24:	mov	x0, x27
    9d28:	bl	4ed0 <mpc_mul@plt>
    9d2c:	ldr	x26, [sp, #160]
    9d30:	cmp	x26, x28
    9d34:	b.eq	9e90 <mpc_fma@@Base+0x28c>  // b.none
    9d38:	ldr	x0, [sp, #192]
    9d3c:	str	x0, [sp, #112]
    9d40:	cmp	x0, x28
    9d44:	b.eq	9e90 <mpc_fma@@Base+0x28c>  // b.none
    9d48:	mov	w3, #0x11                  	// #17
    9d4c:	mov	x2, x21
    9d50:	mov	x1, x27
    9d54:	mov	x0, x27
    9d58:	bl	4cd0 <mpc_add@plt>
    9d5c:	ldr	x1, [sp, #160]
    9d60:	cmp	x1, x28
    9d64:	b.eq	9e90 <mpc_fma@@Base+0x28c>  // b.none
    9d68:	ldr	x0, [sp, #192]
    9d6c:	cmp	x0, x28
    9d70:	b.eq	9e90 <mpc_fma@@Base+0x28c>  // b.none
    9d74:	subs	x26, x26, x1
    9d78:	csel	x26, x26, xzr, pl  // pl = nfrst
    9d7c:	add	x26, x26, #0x1
    9d80:	ldr	x1, [sp, #112]
    9d84:	subs	x0, x1, x0
    9d88:	csel	x0, x0, xzr, pl  // pl = nfrst
    9d8c:	add	x0, x0, #0x1
    9d90:	str	x0, [sp, #112]
    9d94:	str	wzr, [sp, #100]
    9d98:	cmp	x26, x24
    9d9c:	b.le	9e10 <mpc_fma@@Base+0x20c>
    9da0:	str	wzr, [sp, #104]
    9da4:	ldr	x0, [sp, #112]
    9da8:	cmp	x0, x25
    9dac:	b.le	9e38 <mpc_fma@@Base+0x234>
    9db0:	ldr	w0, [sp, #108]
    9db4:	cmp	w0, #0x1
    9db8:	b.eq	9e90 <mpc_fma@@Base+0x28c>  // b.none
    9dbc:	ldr	w1, [sp, #100]
    9dc0:	cmp	w1, #0x0
    9dc4:	add	x0, x24, x26
    9dc8:	ccmp	x26, #0x1, #0x4, eq  // eq = none
    9dcc:	csel	x24, x0, x24, gt
    9dd0:	ldr	w1, [sp, #104]
    9dd4:	cmp	w1, #0x0
    9dd8:	ldr	x1, [sp, #112]
    9ddc:	add	x0, x25, x1
    9de0:	ccmp	x1, #0x1, #0x4, eq  // eq = none
    9de4:	csel	x25, x0, x25, gt
    9de8:	mov	x1, x24
    9dec:	mov	x0, x27
    9df0:	bl	4c80 <mpfr_set_prec@plt>
    9df4:	mov	x1, x25
    9df8:	ldr	x0, [sp, #120]
    9dfc:	bl	4c80 <mpfr_set_prec@plt>
    9e00:	ldr	w0, [sp, #108]
    9e04:	sub	w0, w0, #0x1
    9e08:	str	w0, [sp, #108]
    9e0c:	b	9d18 <mpc_fma@@Base+0x114>
    9e10:	tst	x23, #0xf
    9e14:	ldr	x0, [sp, #136]
    9e18:	cinc	x4, x0, eq  // eq = none
    9e1c:	mov	w3, #0x1                   	// #1
    9e20:	mov	w2, #0x0                   	// #0
    9e24:	sub	x1, x24, x26
    9e28:	mov	x0, x27
    9e2c:	bl	5450 <mpfr_can_round@plt>
    9e30:	str	w0, [sp, #100]
    9e34:	b	9da0 <mpc_fma@@Base+0x19c>
    9e38:	ldr	x4, [sp, #128]
    9e3c:	mov	w3, #0x1                   	// #1
    9e40:	mov	w2, #0x0                   	// #0
    9e44:	sub	x1, x25, x0
    9e48:	ldr	x0, [sp, #120]
    9e4c:	bl	5450 <mpfr_can_round@plt>
    9e50:	str	w0, [sp, #104]
    9e54:	ldr	w1, [sp, #100]
    9e58:	cmp	w1, #0x0
    9e5c:	ccmp	w0, #0x0, #0x4, ne  // ne = any
    9e60:	b.eq	9db0 <mpc_fma@@Base+0x1ac>  // b.none
    9e64:	add	x19, sp, #0x90
    9e68:	mov	w2, w23
    9e6c:	mov	x1, x19
    9e70:	mov	x0, x22
    9e74:	bl	5580 <mpc_set@plt>
    9e78:	mov	w24, w0
    9e7c:	mov	x0, x19
    9e80:	bl	4a10 <mpc_clear@plt>
    9e84:	ldp	x25, x26, [sp, #64]
    9e88:	ldp	x27, x28, [sp, #80]
    9e8c:	b	9c60 <mpc_fma@@Base+0x5c>
    9e90:	add	x0, sp, #0x90
    9e94:	bl	4a10 <mpc_clear@plt>
    9e98:	ldr	w0, [sp, #100]
    9e9c:	cmp	w0, #0x0
    9ea0:	mov	w24, #0x0                   	// #0
    9ea4:	ldr	w0, [sp, #104]
    9ea8:	ccmp	w0, #0x0, #0x4, ne  // ne = any
    9eac:	b.eq	9ebc <mpc_fma@@Base+0x2b8>  // b.none
    9eb0:	ldp	x25, x26, [sp, #64]
    9eb4:	ldp	x27, x28, [sp, #80]
    9eb8:	b	9c60 <mpc_fma@@Base+0x5c>
    9ebc:	mov	w4, w23
    9ec0:	mov	x3, x21
    9ec4:	mov	x2, x20
    9ec8:	mov	x1, x19
    9ecc:	mov	x0, x22
    9ed0:	bl	5560 <mpc_fma_naive@plt>
    9ed4:	mov	w24, w0
    9ed8:	ldp	x25, x26, [sp, #64]
    9edc:	ldp	x27, x28, [sp, #80]
    9ee0:	b	9c60 <mpc_fma@@Base+0x5c>

0000000000009ee4 <mpc_fr_div@@Base>:
    9ee4:	stp	x29, x30, [sp, #-128]!
    9ee8:	mov	x29, sp
    9eec:	stp	x19, x20, [sp, #16]
    9ef0:	stp	x21, x22, [sp, #32]
    9ef4:	str	x23, [sp, #48]
    9ef8:	mov	x20, x0
    9efc:	mov	x21, x2
    9f00:	mov	w22, w3
    9f04:	add	x19, sp, #0x40
    9f08:	ldp	x2, x3, [x1]
    9f0c:	stp	x2, x3, [sp, #64]
    9f10:	ldp	x0, x1, [x1, #16]
    9f14:	stp	x0, x1, [sp, #80]
    9f18:	add	x23, sp, #0x60
    9f1c:	mov	x0, x23
    9f20:	bl	4aa0 <mpfr_init@plt>
    9f24:	mov	w0, #0x1                   	// #1
    9f28:	str	w0, [sp, #104]
    9f2c:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
    9f30:	str	x0, [sp, #112]
    9f34:	mov	w3, w22
    9f38:	mov	x2, x21
    9f3c:	mov	x1, x19
    9f40:	mov	x0, x20
    9f44:	bl	5250 <mpc_div@plt>
    9f48:	mov	w19, w0
    9f4c:	mov	x0, x23
    9f50:	bl	4d60 <mpfr_clear@plt>
    9f54:	mov	w0, w19
    9f58:	ldp	x19, x20, [sp, #16]
    9f5c:	ldp	x21, x22, [sp, #32]
    9f60:	ldr	x23, [sp, #48]
    9f64:	ldp	x29, x30, [sp], #128
    9f68:	ret

0000000000009f6c <mpc_fr_sub@@Base>:
    9f6c:	stp	x29, x30, [sp, #-48]!
    9f70:	mov	x29, sp
    9f74:	stp	x19, x20, [sp, #16]
    9f78:	stp	x21, x22, [sp, #32]
    9f7c:	mov	x21, x0
    9f80:	mov	x22, x2
    9f84:	mov	w19, w3
    9f88:	and	w3, w3, #0xf
    9f8c:	bl	4a60 <mpfr_sub@plt>
    9f90:	mov	w20, w0
    9f94:	asr	w2, w19, #4
    9f98:	add	x1, x22, #0x20
    9f9c:	add	x0, x21, #0x20
    9fa0:	bl	4b80 <mpfr_neg@plt>
    9fa4:	mov	w1, #0x2                   	// #2
    9fa8:	tbnz	w20, #31, 9fb4 <mpc_fr_sub@@Base+0x48>
    9fac:	cmp	w20, #0x0
    9fb0:	cset	w1, ne  // ne = any
    9fb4:	tbnz	w0, #31, 9fd8 <mpc_fr_sub@@Base+0x6c>
    9fb8:	cmp	w0, #0x0
    9fbc:	mov	w2, #0x4                   	// #4
    9fc0:	csel	w0, w0, w2, eq  // eq = none
    9fc4:	orr	w0, w1, w0
    9fc8:	ldp	x19, x20, [sp, #16]
    9fcc:	ldp	x21, x22, [sp, #32]
    9fd0:	ldp	x29, x30, [sp], #48
    9fd4:	ret
    9fd8:	mov	w0, #0x8                   	// #8
    9fdc:	b	9fc4 <mpc_fr_sub@@Base+0x58>

0000000000009fe0 <mpc_get_prec2@@Base>:
    9fe0:	ldr	x3, [x2]
    9fe4:	str	x3, [x0]
    9fe8:	ldr	x0, [x2, #32]
    9fec:	str	x0, [x1]
    9ff0:	ret

0000000000009ff4 <mpc_get_prec@@Base>:
    9ff4:	ldr	x1, [x0]
    9ff8:	ldr	x0, [x0, #32]
    9ffc:	cmp	x0, x1
    a000:	csel	x0, x1, xzr, eq  // eq = none
    a004:	ret

000000000000a008 <mpc_get_version@@Base>:
    a008:	adrp	x0, 15000 <mpc_ui_ui_sub@@Base+0x1228>
    a00c:	add	x0, x0, #0x2e8
    a010:	ret
    a014:	stp	x29, x30, [sp, #-80]!
    a018:	mov	x29, sp
    a01c:	stp	x19, x20, [sp, #16]
    a020:	stp	x21, x22, [sp, #32]
    a024:	stp	x23, x24, [sp, #48]
    a028:	mov	w23, w0
    a02c:	mov	x22, x2
    a030:	ldr	x2, [x2, #16]
    a034:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
    a038:	cmp	x2, x0
    a03c:	b.eq	a158 <mpc_get_version@@Base+0x150>  // b.none
    a040:	mov	w5, w3
    a044:	mov	x4, x22
    a048:	mov	x3, x1
    a04c:	mov	w2, w23
    a050:	add	x1, sp, #0x48
    a054:	mov	x0, #0x0                   	// #0
    a058:	bl	50c0 <mpfr_get_str@plt>
    a05c:	mov	x19, x0
    a060:	cbz	x0, a18c <mpc_get_version@@Base+0x184>
    a064:	ldr	x21, [sp, #72]
    a068:	mov	x0, x22
    a06c:	bl	54d0 <mpfr_number_p@plt>
    a070:	mov	w20, w0
    a074:	mov	x0, x19
    a078:	bl	4a00 <strlen@plt>
    a07c:	mov	x2, x0
    a080:	cbz	w20, a1bc <mpc_get_version@@Base+0x1b4>
    a084:	ldrb	w22, [x19]
    a088:	sub	w22, w22, #0x2b
    a08c:	and	w22, w22, #0xfffffffd
    a090:	and	w22, w22, #0xff
    a094:	sub	x21, x21, #0x1
    a098:	lsl	x0, x21, #2
    a09c:	cmp	w23, #0x10
    a0a0:	csel	x21, x0, x21, eq  // eq = none
    a0a4:	add	x0, x2, #0x2
    a0a8:	cbz	x21, a0e4 <mpc_get_version@@Base+0xdc>
    a0ac:	add	x0, x2, #0x5
    a0b0:	mov	x1, x21
    a0b4:	tbnz	x21, #63, a1d4 <mpc_get_version@@Base+0x1cc>
    a0b8:	cmp	x1, #0x9
    a0bc:	b.le	a0e4 <mpc_get_version@@Base+0xdc>
    a0c0:	mov	x4, #0x6666666666666666    	// #7378697629483820646
    a0c4:	movk	x4, #0x6667
    a0c8:	add	x0, x0, #0x1
    a0cc:	mov	x3, x1
    a0d0:	smulh	x2, x1, x4
    a0d4:	asr	x2, x2, #2
    a0d8:	sub	x1, x2, x1, asr #63
    a0dc:	cmp	x3, #0x63
    a0e0:	b.gt	a0c8 <mpc_get_version@@Base+0xc0>
    a0e4:	bl	4bf0 <mpc_alloc_str@plt>
    a0e8:	mov	x20, x0
    a0ec:	ldrb	w0, [x19]
    a0f0:	strb	w0, [x20]
    a0f4:	cbz	w22, a208 <mpc_get_version@@Base+0x200>
    a0f8:	add	x24, x19, #0x1
    a0fc:	add	x22, x20, #0x1
    a100:	bl	4c70 <localeconv@plt>
    a104:	ldr	x0, [x0]
    a108:	ldrb	w0, [x0]
    a10c:	strb	w0, [x22]
    a110:	strb	wzr, [x22, #1]
    a114:	mov	x1, x24
    a118:	mov	x0, x20
    a11c:	bl	4de0 <strcat@plt>
    a120:	cbz	x21, a23c <mpc_get_version@@Base+0x234>
    a124:	mov	x0, x19
    a128:	bl	4a00 <strlen@plt>
    a12c:	add	x1, x0, #0x1
    a130:	add	x0, x20, x1
    a134:	cmp	w23, #0xa
    a138:	b.eq	a21c <mpc_get_version@@Base+0x214>  // b.none
    a13c:	cmp	w23, #0x10
    a140:	b.eq	a25c <mpc_get_version@@Base+0x254>  // b.none
    a144:	cmp	w23, #0x2
    a148:	b.eq	a25c <mpc_get_version@@Base+0x254>  // b.none
    a14c:	mov	w1, #0x40                  	// #64
    a150:	strb	w1, [x0], #1
    a154:	b	a228 <mpc_get_version@@Base+0x220>
    a158:	mov	x0, #0x3                   	// #3
    a15c:	bl	4bf0 <mpc_alloc_str@plt>
    a160:	mov	x20, x0
    a164:	ldr	w0, [x22, #8]
    a168:	cmp	w0, #0x0
    a16c:	mov	w0, #0x2d                  	// #45
    a170:	mov	w1, #0x2b                  	// #43
    a174:	csel	w0, w0, w1, lt  // lt = tstop
    a178:	strb	w0, [x20]
    a17c:	mov	w0, #0x30                  	// #48
    a180:	strb	w0, [x20, #1]
    a184:	strb	wzr, [x20, #2]
    a188:	b	a244 <mpc_get_version@@Base+0x23c>
    a18c:	adrp	x4, 15000 <mpc_ui_ui_sub@@Base+0x1228>
    a190:	add	x4, x4, #0x2f0
    a194:	mov	w3, #0xc8                  	// #200
    a198:	adrp	x2, 15000 <mpc_ui_ui_sub@@Base+0x1228>
    a19c:	add	x2, x2, #0x300
    a1a0:	adrp	x1, 15000 <mpc_ui_ui_sub@@Base+0x1228>
    a1a4:	add	x1, x1, #0x238
    a1a8:	adrp	x0, 27000 <mpc_ui_ui_sub@@Base+0x13228>
    a1ac:	ldr	x0, [x0, #4008]
    a1b0:	ldr	x0, [x0]
    a1b4:	bl	55a0 <fprintf@plt>
    a1b8:	bl	5000 <abort@plt>
    a1bc:	add	x0, x0, #0x1
    a1c0:	bl	4bf0 <mpc_alloc_str@plt>
    a1c4:	mov	x20, x0
    a1c8:	mov	x1, x19
    a1cc:	bl	5340 <strcpy@plt>
    a1d0:	b	a23c <mpc_get_version@@Base+0x234>
    a1d4:	cmn	x21, #0xa
    a1d8:	b.ge	a1f8 <mpc_get_version@@Base+0x1f0>  // b.tcont
    a1dc:	mov	x1, #0x6666666666666666    	// #7378697629483820646
    a1e0:	movk	x1, #0x6667
    a1e4:	smulh	x1, x21, x1
    a1e8:	asr	x0, x21, #63
    a1ec:	sub	x1, x0, x1, asr #2
    a1f0:	add	x0, x2, #0x6
    a1f4:	b	a0b8 <mpc_get_version@@Base+0xb0>
    a1f8:	add	x2, x2, #0x6
    a1fc:	cmn	x21, #0x9
    a200:	csel	x0, x2, x0, lt  // lt = tstop
    a204:	b	a0e4 <mpc_get_version@@Base+0xdc>
    a208:	add	x24, x19, #0x2
    a20c:	add	x22, x20, #0x2
    a210:	ldrb	w0, [x19, #1]
    a214:	strb	w0, [x20, #1]
    a218:	b	a100 <mpc_get_version@@Base+0xf8>
    a21c:	add	x0, x0, #0x1
    a220:	mov	w2, #0x65                  	// #101
    a224:	strb	w2, [x20, x1]
    a228:	strb	wzr, [x0]
    a22c:	mov	x2, x21
    a230:	adrp	x1, 15000 <mpc_ui_ui_sub@@Base+0x1228>
    a234:	add	x1, x1, #0x308
    a238:	bl	4b30 <sprintf@plt>
    a23c:	mov	x0, x19
    a240:	bl	52e0 <mpfr_free_str@plt>
    a244:	mov	x0, x20
    a248:	ldp	x19, x20, [sp, #16]
    a24c:	ldp	x21, x22, [sp, #32]
    a250:	ldp	x23, x24, [sp, #48]
    a254:	ldp	x29, x30, [sp], #80
    a258:	ret
    a25c:	mov	w1, #0x70                  	// #112
    a260:	strb	w1, [x0], #1
    a264:	b	a228 <mpc_get_version@@Base+0x220>

000000000000a268 <mpc_get_dc@@Base>:
    a268:	stp	x29, x30, [sp, #-48]!
    a26c:	mov	x29, sp
    a270:	stp	x19, x20, [sp, #16]
    a274:	str	d8, [sp, #32]
    a278:	mov	x19, x0
    a27c:	mov	w20, w1
    a280:	asr	w1, w1, #4
    a284:	add	x0, x0, #0x20
    a288:	bl	4b50 <mpfr_get_d@plt>
    a28c:	fmov	d8, d0
    a290:	and	w1, w20, #0xf
    a294:	mov	x0, x19
    a298:	bl	4b50 <mpfr_get_d@plt>
    a29c:	movi	d1, #0x0
    a2a0:	fmul	d1, d8, d1
    a2a4:	fadd	d0, d1, d0
    a2a8:	fmov	d1, d8
    a2ac:	ldp	x19, x20, [sp, #16]
    a2b0:	ldr	d8, [sp, #32]
    a2b4:	ldp	x29, x30, [sp], #48
    a2b8:	ret

000000000000a2bc <mpc_get_ldc@@Base>:
    a2bc:	stp	x29, x30, [sp, #-64]!
    a2c0:	mov	x29, sp
    a2c4:	stp	x19, x20, [sp, #16]
    a2c8:	mov	x19, x0
    a2cc:	mov	w20, w1
    a2d0:	asr	w1, w1, #4
    a2d4:	add	x0, x0, #0x20
    a2d8:	bl	5110 <mpfr_get_ld@plt>
    a2dc:	str	q0, [sp, #32]
    a2e0:	and	w1, w20, #0xf
    a2e4:	mov	x0, x19
    a2e8:	bl	5110 <mpfr_get_ld@plt>
    a2ec:	str	q0, [sp, #48]
    a2f0:	movi	v1.2d, #0x0
    a2f4:	ldr	q0, [sp, #32]
    a2f8:	bl	14988 <mpc_ui_ui_sub@@Base+0xbb0>
    a2fc:	ldr	q1, [sp, #48]
    a300:	bl	13e60 <mpc_ui_ui_sub@@Base+0x88>
    a304:	ldr	q1, [sp, #32]
    a308:	ldp	x19, x20, [sp, #16]
    a30c:	ldp	x29, x30, [sp], #64
    a310:	ret

000000000000a314 <mpc_get_str@@Base>:
    a314:	stp	x29, x30, [sp, #-64]!
    a318:	mov	x29, sp
    a31c:	stp	x19, x20, [sp, #16]
    a320:	mov	w19, w0
    a324:	sub	w0, w0, #0x2
    a328:	cmp	w0, #0x22
    a32c:	b.hi	a42c <mpc_get_str@@Base+0x118>  // b.pmore
    a330:	stp	x21, x22, [sp, #32]
    a334:	str	x23, [sp, #48]
    a338:	mov	x20, x1
    a33c:	mov	x21, x2
    a340:	mov	w22, w3
    a344:	and	w3, w3, #0xf
    a348:	mov	w0, w19
    a34c:	bl	a014 <mpc_get_version@@Base+0xc>
    a350:	mov	x23, x0
    a354:	asr	w3, w22, #4
    a358:	add	x2, x21, #0x20
    a35c:	mov	x1, x20
    a360:	mov	w0, w19
    a364:	bl	a014 <mpc_get_version@@Base+0xc>
    a368:	mov	x20, x0
    a36c:	mov	x0, x23
    a370:	bl	4a00 <strlen@plt>
    a374:	mov	x19, x0
    a378:	mov	x0, x20
    a37c:	bl	4a00 <strlen@plt>
    a380:	add	x0, x19, x0
    a384:	add	x0, x0, #0x4
    a388:	bl	4bf0 <mpc_alloc_str@plt>
    a38c:	mov	x19, x0
    a390:	cbz	x0, a3fc <mpc_get_str@@Base+0xe8>
    a394:	mov	w0, #0x28                  	// #40
    a398:	strh	w0, [x19]
    a39c:	mov	x1, x23
    a3a0:	mov	x0, x19
    a3a4:	bl	4de0 <strcat@plt>
    a3a8:	mov	x0, x19
    a3ac:	bl	4a00 <strlen@plt>
    a3b0:	mov	w1, #0x20                  	// #32
    a3b4:	strh	w1, [x19, x0]
    a3b8:	mov	x1, x20
    a3bc:	mov	x0, x19
    a3c0:	bl	4de0 <strcat@plt>
    a3c4:	mov	x0, x19
    a3c8:	bl	4a00 <strlen@plt>
    a3cc:	mov	w1, #0x29                  	// #41
    a3d0:	strh	w1, [x19, x0]
    a3d4:	mov	x0, x23
    a3d8:	bl	4ff0 <mpc_free_str@plt>
    a3dc:	mov	x0, x20
    a3e0:	bl	4ff0 <mpc_free_str@plt>
    a3e4:	ldp	x21, x22, [sp, #32]
    a3e8:	ldr	x23, [sp, #48]
    a3ec:	mov	x0, x19
    a3f0:	ldp	x19, x20, [sp, #16]
    a3f4:	ldp	x29, x30, [sp], #64
    a3f8:	ret
    a3fc:	adrp	x4, 15000 <mpc_ui_ui_sub@@Base+0x1228>
    a400:	add	x4, x4, #0x310
    a404:	mov	w3, #0xe0                  	// #224
    a408:	adrp	x2, 15000 <mpc_ui_ui_sub@@Base+0x1228>
    a40c:	add	x2, x2, #0x300
    a410:	adrp	x1, 15000 <mpc_ui_ui_sub@@Base+0x1228>
    a414:	add	x1, x1, #0x238
    a418:	adrp	x0, 27000 <mpc_ui_ui_sub@@Base+0x13228>
    a41c:	ldr	x0, [x0, #4008]
    a420:	ldr	x0, [x0]
    a424:	bl	55a0 <fprintf@plt>
    a428:	bl	5000 <abort@plt>
    a42c:	mov	x19, #0x0                   	// #0
    a430:	b	a3ec <mpc_get_str@@Base+0xd8>

000000000000a434 <mpc_imag@@Base>:
    a434:	stp	x29, x30, [sp, #-16]!
    a438:	mov	x29, sp
    a43c:	ldr	w3, [x1, #40]
    a440:	add	x1, x1, #0x20
    a444:	bl	51d0 <mpfr_set4@plt>
    a448:	ldp	x29, x30, [sp], #16
    a44c:	ret

000000000000a450 <mpc_init2@@Base>:
    a450:	stp	x29, x30, [sp, #-32]!
    a454:	mov	x29, sp
    a458:	stp	x19, x20, [sp, #16]
    a45c:	mov	x19, x0
    a460:	mov	x20, x1
    a464:	bl	5440 <mpfr_init2@plt>
    a468:	mov	x1, x20
    a46c:	add	x0, x19, #0x20
    a470:	bl	5440 <mpfr_init2@plt>
    a474:	ldp	x19, x20, [sp, #16]
    a478:	ldp	x29, x30, [sp], #32
    a47c:	ret

000000000000a480 <mpc_init3@@Base>:
    a480:	stp	x29, x30, [sp, #-32]!
    a484:	mov	x29, sp
    a488:	stp	x19, x20, [sp, #16]
    a48c:	mov	x19, x0
    a490:	mov	x20, x2
    a494:	bl	5440 <mpfr_init2@plt>
    a498:	mov	x1, x20
    a49c:	add	x0, x19, #0x20
    a4a0:	bl	5440 <mpfr_init2@plt>
    a4a4:	ldp	x19, x20, [sp, #16]
    a4a8:	ldp	x29, x30, [sp], #32
    a4ac:	ret
    a4b0:	stp	x29, x30, [sp, #-48]!
    a4b4:	mov	x29, sp
    a4b8:	stp	x19, x20, [sp, #16]
    a4bc:	stp	x21, x22, [sp, #32]
    a4c0:	mov	x21, x0
    a4c4:	bl	4f20 <getc@plt>
    a4c8:	cmn	w0, #0x1
    a4cc:	b.eq	a534 <mpc_init3@@Base+0xb4>  // b.none
    a4d0:	mov	w19, w0
    a4d4:	bl	5170 <__ctype_b_loc@plt>
    a4d8:	mov	x22, x0
    a4dc:	mov	x20, #0x0                   	// #0
    a4e0:	and	x1, x19, #0xff
    a4e4:	ldr	x2, [x22]
    a4e8:	ldrh	w1, [x2, x1, lsl #1]
    a4ec:	tbz	w1, #13, a50c <mpc_init3@@Base+0x8c>
    a4f0:	mov	x0, x21
    a4f4:	bl	4f20 <getc@plt>
    a4f8:	mov	w19, w0
    a4fc:	add	x20, x20, #0x1
    a500:	cmn	w0, #0x1
    a504:	b.ne	a4e0 <mpc_init3@@Base+0x60>  // b.any
    a508:	b	a520 <mpc_init3@@Base+0xa0>
    a50c:	cmn	w19, #0x1
    a510:	b.eq	a520 <mpc_init3@@Base+0xa0>  // b.none
    a514:	mov	x1, x21
    a518:	mov	w0, w19
    a51c:	bl	5210 <ungetc@plt>
    a520:	mov	x0, x20
    a524:	ldp	x19, x20, [sp, #16]
    a528:	ldp	x21, x22, [sp, #32]
    a52c:	ldp	x29, x30, [sp], #48
    a530:	ret
    a534:	mov	x20, #0x0                   	// #0
    a538:	b	a520 <mpc_init3@@Base+0xa0>
    a53c:	stp	x29, x30, [sp, #-96]!
    a540:	mov	x29, sp
    a544:	stp	x21, x22, [sp, #32]
    a548:	stp	x23, x24, [sp, #48]
    a54c:	mov	x23, x0
    a550:	mov	x0, #0x64                  	// #100
    a554:	bl	4bf0 <mpc_alloc_str@plt>
    a558:	mov	x21, x0
    a55c:	mov	x0, x23
    a560:	bl	4f20 <getc@plt>
    a564:	cmp	w0, #0xa
    a568:	ccmn	w0, #0x1, #0x4, ne  // ne = any
    a56c:	b.eq	a8d8 <mpc_init3@@Base+0x458>  // b.none
    a570:	stp	x19, x20, [sp, #16]
    a574:	stp	x25, x26, [sp, #64]
    a578:	mov	w19, w0
    a57c:	bl	5170 <__ctype_b_loc@plt>
    a580:	mov	x24, x0
    a584:	mov	x20, #0x0                   	// #0
    a588:	mov	x22, #0x64                  	// #100
    a58c:	b	a5c4 <mpc_init3@@Base+0x144>
    a590:	lsl	x19, x22, #1
    a594:	mov	x2, x19
    a598:	mov	x1, x22
    a59c:	mov	x0, x21
    a5a0:	bl	5330 <mpc_realloc_str@plt>
    a5a4:	mov	x21, x0
    a5a8:	mov	x22, x19
    a5ac:	mov	x0, x23
    a5b0:	bl	4f20 <getc@plt>
    a5b4:	mov	w19, w0
    a5b8:	cmp	w0, #0xa
    a5bc:	ccmn	w0, #0x1, #0x4, ne  // ne = any
    a5c0:	b.eq	a5f8 <mpc_init3@@Base+0x178>  // b.none
    a5c4:	and	w0, w19, #0xff
    a5c8:	and	x1, x19, #0xff
    a5cc:	ldr	x2, [x24]
    a5d0:	ldrh	w1, [x2, x1, lsl #1]
    a5d4:	tbnz	w1, #13, a5f8 <mpc_init3@@Base+0x178>
    a5d8:	sub	w1, w19, #0x28
    a5dc:	cmp	w1, #0x1
    a5e0:	b.ls	a5f8 <mpc_init3@@Base+0x178>  // b.plast
    a5e4:	strb	w0, [x21, x20]
    a5e8:	add	x20, x20, #0x1
    a5ec:	cmp	x20, x22
    a5f0:	b.ne	a5ac <mpc_init3@@Base+0x12c>  // b.any
    a5f4:	b	a590 <mpc_init3@@Base+0x110>
    a5f8:	add	x25, x20, #0x1
    a5fc:	mov	x2, x25
    a600:	mov	x1, x22
    a604:	mov	x0, x21
    a608:	bl	5330 <mpc_realloc_str@plt>
    a60c:	mov	x21, x0
    a610:	strb	wzr, [x0, x20]
    a614:	cbz	x20, a8f4 <mpc_init3@@Base+0x474>
    a618:	cmp	w19, #0x28
    a61c:	b.eq	a634 <mpc_init3@@Base+0x1b4>  // b.none
    a620:	cmn	w19, #0x1
    a624:	b.ne	a8c0 <mpc_init3@@Base+0x440>  // b.any
    a628:	ldp	x19, x20, [sp, #16]
    a62c:	ldp	x25, x26, [sp, #64]
    a630:	b	a8fc <mpc_init3@@Base+0x47c>
    a634:	cmp	x20, #0x3
    a638:	b.eq	a6bc <mpc_init3@@Base+0x23c>  // b.none
    a63c:	cmp	x20, #0x5
    a640:	b.ne	a6d4 <mpc_init3@@Base+0x254>  // b.any
    a644:	ldrb	w0, [x0]
    a648:	cmp	w0, #0x40
    a64c:	b.ne	a6d4 <mpc_init3@@Base+0x254>  // b.any
    a650:	bl	4c50 <__ctype_tolower_loc@plt>
    a654:	ldr	x0, [x0]
    a658:	ldrb	w1, [x21, #1]
    a65c:	ldr	w1, [x0, x1, lsl #2]
    a660:	cmp	w1, #0x6e
    a664:	b.ne	a6d4 <mpc_init3@@Base+0x254>  // b.any
    a668:	ldrb	w1, [x21, #2]
    a66c:	ldr	w1, [x0, x1, lsl #2]
    a670:	cmp	w1, #0x61
    a674:	b.ne	a6d4 <mpc_init3@@Base+0x254>  // b.any
    a678:	ldrb	w1, [x21, #3]
    a67c:	ldr	w0, [x0, x1, lsl #2]
    a680:	cmp	w0, #0x6e
    a684:	b.ne	a6d4 <mpc_init3@@Base+0x254>  // b.any
    a688:	ldrb	w0, [x21, #4]
    a68c:	cmp	w0, #0x40
    a690:	b.ne	a6d4 <mpc_init3@@Base+0x254>  // b.any
    a694:	str	x27, [sp, #80]
    a698:	mov	x0, #0x64                  	// #100
    a69c:	bl	4bf0 <mpc_alloc_str@plt>
    a6a0:	mov	x26, x0
    a6a4:	mov	x0, x23
    a6a8:	bl	4f20 <getc@plt>
    a6ac:	mov	w19, w0
    a6b0:	mov	x27, #0x64                  	// #100
    a6b4:	mov	x22, #0x0                   	// #0
    a6b8:	b	a720 <mpc_init3@@Base+0x2a0>
    a6bc:	bl	4c50 <__ctype_tolower_loc@plt>
    a6c0:	ldr	x0, [x0]
    a6c4:	ldrb	w1, [x21]
    a6c8:	ldr	w1, [x0, x1, lsl #2]
    a6cc:	cmp	w1, #0x6e
    a6d0:	b.eq	a6ec <mpc_init3@@Base+0x26c>  // b.none
    a6d4:	mov	x1, x23
    a6d8:	mov	w0, #0x28                  	// #40
    a6dc:	bl	5210 <ungetc@plt>
    a6e0:	ldp	x19, x20, [sp, #16]
    a6e4:	ldp	x25, x26, [sp, #64]
    a6e8:	b	a8fc <mpc_init3@@Base+0x47c>
    a6ec:	ldrb	w1, [x21, #1]
    a6f0:	ldr	w1, [x0, x1, lsl #2]
    a6f4:	cmp	w1, #0x61
    a6f8:	b.ne	a6d4 <mpc_init3@@Base+0x254>  // b.any
    a6fc:	ldrb	w1, [x21, #2]
    a700:	ldr	w0, [x0, x1, lsl #2]
    a704:	cmp	w0, #0x6e
    a708:	b.ne	a6d4 <mpc_init3@@Base+0x254>  // b.any
    a70c:	str	x27, [sp, #80]
    a710:	b	a698 <mpc_init3@@Base+0x218>
    a714:	mov	x0, x23
    a718:	bl	4f20 <getc@plt>
    a71c:	mov	w19, w0
    a720:	and	w2, w19, #0xff
    a724:	and	x0, x19, #0xff
    a728:	ldr	x1, [x24]
    a72c:	ldrh	w0, [x1, x0, lsl #1]
    a730:	and	w0, w0, #0x8
    a734:	cmp	w19, #0x5f
    a738:	ccmp	w0, #0x0, #0x0, ne  // ne = any
    a73c:	b.eq	a770 <mpc_init3@@Base+0x2f0>  // b.none
    a740:	strb	w2, [x26, x22]
    a744:	add	x22, x22, #0x1
    a748:	cmp	x22, x27
    a74c:	b.ne	a714 <mpc_init3@@Base+0x294>  // b.any
    a750:	lsl	x19, x27, #1
    a754:	mov	x2, x19
    a758:	mov	x1, x27
    a75c:	mov	x0, x26
    a760:	bl	5330 <mpc_realloc_str@plt>
    a764:	mov	x26, x0
    a768:	mov	x27, x19
    a76c:	b	a714 <mpc_init3@@Base+0x294>
    a770:	add	x2, x22, #0x1
    a774:	mov	x1, x27
    a778:	mov	x0, x26
    a77c:	bl	5330 <mpc_realloc_str@plt>
    a780:	mov	x24, x0
    a784:	strb	wzr, [x0, x22]
    a788:	cmn	w19, #0x1
    a78c:	b.ne	a7fc <mpc_init3@@Base+0x37c>  // b.any
    a790:	mov	x0, x24
    a794:	bl	4a00 <strlen@plt>
    a798:	add	x19, x0, x20
    a79c:	add	x22, x19, #0x1
    a7a0:	cmp	x25, x22
    a7a4:	b.ls	a80c <mpc_init3@@Base+0x38c>  // b.plast
    a7a8:	mov	x2, x24
    a7ac:	adrp	x1, 15000 <mpc_ui_ui_sub@@Base+0x1228>
    a7b0:	add	x1, x1, #0x328
    a7b4:	add	x0, x21, x20
    a7b8:	bl	4b30 <sprintf@plt>
    a7bc:	tbnz	w0, #31, a82c <mpc_init3@@Base+0x3ac>
    a7c0:	add	x0, x20, w0, sxtw
    a7c4:	cmp	x0, x22
    a7c8:	b.ne	a85c <mpc_init3@@Base+0x3dc>  // b.any
    a7cc:	mov	x0, x23
    a7d0:	bl	4f20 <getc@plt>
    a7d4:	cmp	w0, #0x29
    a7d8:	b.eq	a88c <mpc_init3@@Base+0x40c>  // b.none
    a7dc:	cmn	w0, #0x1
    a7e0:	b.ne	a8b4 <mpc_init3@@Base+0x434>  // b.any
    a7e4:	mov	x0, x24
    a7e8:	bl	4ff0 <mpc_free_str@plt>
    a7ec:	ldp	x19, x20, [sp, #16]
    a7f0:	ldp	x25, x26, [sp, #64]
    a7f4:	ldr	x27, [sp, #80]
    a7f8:	b	a8fc <mpc_init3@@Base+0x47c>
    a7fc:	mov	x1, x23
    a800:	mov	w0, w19
    a804:	bl	5210 <ungetc@plt>
    a808:	b	a790 <mpc_init3@@Base+0x310>
    a80c:	add	x26, x19, #0x2
    a810:	mov	x2, x26
    a814:	mov	x1, x25
    a818:	mov	x0, x21
    a81c:	bl	5330 <mpc_realloc_str@plt>
    a820:	mov	x21, x0
    a824:	mov	x25, x26
    a828:	b	a7a8 <mpc_init3@@Base+0x328>
    a82c:	adrp	x4, 15000 <mpc_ui_ui_sub@@Base+0x1228>
    a830:	add	x4, x4, #0x330
    a834:	mov	w3, #0x88                  	// #136
    a838:	adrp	x2, 15000 <mpc_ui_ui_sub@@Base+0x1228>
    a83c:	add	x2, x2, #0x340
    a840:	adrp	x1, 15000 <mpc_ui_ui_sub@@Base+0x1228>
    a844:	add	x1, x1, #0x238
    a848:	adrp	x0, 27000 <mpc_ui_ui_sub@@Base+0x13228>
    a84c:	ldr	x0, [x0, #4008]
    a850:	ldr	x0, [x0]
    a854:	bl	55a0 <fprintf@plt>
    a858:	bl	5000 <abort@plt>
    a85c:	adrp	x4, 15000 <mpc_ui_ui_sub@@Base+0x1228>
    a860:	add	x4, x4, #0x350
    a864:	mov	w3, #0x8a                  	// #138
    a868:	adrp	x2, 15000 <mpc_ui_ui_sub@@Base+0x1228>
    a86c:	add	x2, x2, #0x340
    a870:	adrp	x1, 15000 <mpc_ui_ui_sub@@Base+0x1228>
    a874:	add	x1, x1, #0x238
    a878:	adrp	x0, 27000 <mpc_ui_ui_sub@@Base+0x13228>
    a87c:	ldr	x0, [x0, #4008]
    a880:	ldr	x0, [x0]
    a884:	bl	55a0 <fprintf@plt>
    a888:	bl	5000 <abort@plt>
    a88c:	add	x2, x19, #0x3
    a890:	mov	x1, x25
    a894:	mov	x0, x21
    a898:	bl	5330 <mpc_realloc_str@plt>
    a89c:	mov	x21, x0
    a8a0:	mov	w0, #0x29                  	// #41
    a8a4:	strb	w0, [x21, x22]
    a8a8:	add	x19, x21, x19
    a8ac:	strb	wzr, [x19, #2]
    a8b0:	b	a7e4 <mpc_init3@@Base+0x364>
    a8b4:	mov	x1, x23
    a8b8:	bl	5210 <ungetc@plt>
    a8bc:	b	a7e4 <mpc_init3@@Base+0x364>
    a8c0:	mov	x1, x23
    a8c4:	mov	w0, w19
    a8c8:	bl	5210 <ungetc@plt>
    a8cc:	ldp	x19, x20, [sp, #16]
    a8d0:	ldp	x25, x26, [sp, #64]
    a8d4:	b	a8fc <mpc_init3@@Base+0x47c>
    a8d8:	mov	x2, #0x1                   	// #1
    a8dc:	mov	x1, #0x64                  	// #100
    a8e0:	mov	x0, x21
    a8e4:	bl	5330 <mpc_realloc_str@plt>
    a8e8:	mov	x21, x0
    a8ec:	strb	wzr, [x0]
    a8f0:	b	a8fc <mpc_init3@@Base+0x47c>
    a8f4:	ldp	x19, x20, [sp, #16]
    a8f8:	ldp	x25, x26, [sp, #64]
    a8fc:	mov	x0, x21
    a900:	ldp	x21, x22, [sp, #32]
    a904:	ldp	x23, x24, [sp, #48]
    a908:	ldp	x29, x30, [sp], #96
    a90c:	ret

000000000000a910 <mpc_inp_str@@Base>:
    a910:	stp	x29, x30, [sp, #-112]!
    a914:	mov	x29, sp
    a918:	stp	x19, x20, [sp, #16]
    a91c:	stp	x21, x22, [sp, #32]
    a920:	stp	x23, x24, [sp, #48]
    a924:	stp	x25, x26, [sp, #64]
    a928:	mov	x24, x0
    a92c:	mov	x19, x1
    a930:	mov	x23, x2
    a934:	mov	w25, w3
    a938:	mov	w26, w4
    a93c:	cbz	x1, a9d0 <mpc_inp_str@@Base+0xc0>
    a940:	mov	x0, x19
    a944:	bl	a4b0 <mpc_init3@@Base+0x30>
    a948:	mov	x20, x0
    a94c:	mov	x0, x19
    a950:	bl	4f20 <getc@plt>
    a954:	cmn	w0, #0x1
    a958:	b.eq	ab80 <mpc_inp_str@@Base+0x270>  // b.none
    a95c:	cmp	w0, #0x28
    a960:	b.eq	a9e0 <mpc_inp_str@@Base+0xd0>  // b.none
    a964:	mov	x1, x19
    a968:	bl	5210 <ungetc@plt>
    a96c:	mov	x0, x19
    a970:	bl	a53c <mpc_init3@@Base+0xbc>
    a974:	mov	x21, x0
    a978:	bl	4a00 <strlen@plt>
    a97c:	mov	x22, x0
    a980:	mov	w3, w26
    a984:	mov	w2, w25
    a988:	mov	x1, x21
    a98c:	mov	x0, x24
    a990:	bl	5380 <mpc_set_str@plt>
    a994:	mov	w19, w0
    a998:	mov	x0, x21
    a99c:	bl	4ff0 <mpc_free_str@plt>
    a9a0:	cmn	w19, #0x1
    a9a4:	b.eq	ab84 <mpc_inp_str@@Base+0x274>  // b.none
    a9a8:	cbz	x23, a9b4 <mpc_inp_str@@Base+0xa4>
    a9ac:	add	x0, x20, x22
    a9b0:	str	x0, [x23]
    a9b4:	mov	w0, w19
    a9b8:	ldp	x19, x20, [sp, #16]
    a9bc:	ldp	x21, x22, [sp, #32]
    a9c0:	ldp	x23, x24, [sp, #48]
    a9c4:	ldp	x25, x26, [sp, #64]
    a9c8:	ldp	x29, x30, [sp], #112
    a9cc:	ret
    a9d0:	adrp	x0, 27000 <mpc_ui_ui_sub@@Base+0x13228>
    a9d4:	ldr	x0, [x0, #4040]
    a9d8:	ldr	x19, [x0]
    a9dc:	b	a940 <mpc_inp_str@@Base+0x30>
    a9e0:	mov	x0, x19
    a9e4:	bl	a4b0 <mpc_init3@@Base+0x30>
    a9e8:	mov	x20, x0
    a9ec:	mov	x0, x19
    a9f0:	bl	a53c <mpc_init3@@Base+0xbc>
    a9f4:	str	x0, [sp, #96]
    a9f8:	bl	4a00 <strlen@plt>
    a9fc:	add	x22, x0, #0x1
    aa00:	mov	x0, x19
    aa04:	bl	4f20 <getc@plt>
    aa08:	mov	w21, w0
    aa0c:	bl	5170 <__ctype_b_loc@plt>
    aa10:	ldr	x0, [x0]
    aa14:	ldrh	w0, [x0, w21, sxtw #1]
    aa18:	tbz	w0, #13, aac0 <mpc_inp_str@@Base+0x1b0>
    aa1c:	stp	x27, x28, [sp, #80]
    aa20:	mov	x1, x19
    aa24:	mov	w0, w21
    aa28:	bl	5210 <ungetc@plt>
    aa2c:	mov	x0, x19
    aa30:	bl	a4b0 <mpc_init3@@Base+0x30>
    aa34:	add	x20, x20, x0
    aa38:	mov	x0, x19
    aa3c:	bl	a53c <mpc_init3@@Base+0xbc>
    aa40:	mov	x28, x0
    aa44:	str	x0, [sp, #104]
    aa48:	bl	4a00 <strlen@plt>
    aa4c:	add	x22, x22, x0
    aa50:	add	x27, x22, #0x2
    aa54:	mov	x0, x27
    aa58:	bl	4bf0 <mpc_alloc_str@plt>
    aa5c:	mov	x21, x0
    aa60:	mov	x3, x28
    aa64:	ldr	x2, [sp, #96]
    aa68:	adrp	x1, 15000 <mpc_ui_ui_sub@@Base+0x1228>
    aa6c:	add	x1, x1, #0x360
    aa70:	bl	4b30 <sprintf@plt>
    aa74:	tbnz	w0, #31, aae4 <mpc_inp_str@@Base+0x1d4>
    aa78:	add	x28, x22, #0x1
    aa7c:	cmp	x28, w0, sxtw
    aa80:	b.ne	ab14 <mpc_inp_str@@Base+0x204>  // b.any
    aa84:	ldr	x0, [sp, #96]
    aa88:	bl	4ff0 <mpc_free_str@plt>
    aa8c:	ldr	x0, [sp, #104]
    aa90:	bl	4ff0 <mpc_free_str@plt>
    aa94:	mov	x0, x19
    aa98:	bl	a4b0 <mpc_init3@@Base+0x30>
    aa9c:	add	x20, x20, x0
    aaa0:	mov	x0, x19
    aaa4:	bl	4f20 <getc@plt>
    aaa8:	cmp	w0, #0x29
    aaac:	b.eq	ab44 <mpc_inp_str@@Base+0x234>  // b.none
    aab0:	cmn	w0, #0x1
    aab4:	b.ne	ab70 <mpc_inp_str@@Base+0x260>  // b.any
    aab8:	ldp	x27, x28, [sp, #80]
    aabc:	b	a980 <mpc_inp_str@@Base+0x70>
    aac0:	cmn	w21, #0x1
    aac4:	b.ne	aad4 <mpc_inp_str@@Base+0x1c4>  // b.any
    aac8:	ldr	x0, [sp, #96]
    aacc:	bl	4ff0 <mpc_free_str@plt>
    aad0:	b	ab84 <mpc_inp_str@@Base+0x274>
    aad4:	mov	x1, x19
    aad8:	mov	w0, w21
    aadc:	bl	5210 <ungetc@plt>
    aae0:	b	aac8 <mpc_inp_str@@Base+0x1b8>
    aae4:	adrp	x4, 15000 <mpc_ui_ui_sub@@Base+0x1228>
    aae8:	add	x4, x4, #0x330
    aaec:	mov	w3, #0xca                  	// #202
    aaf0:	adrp	x2, 15000 <mpc_ui_ui_sub@@Base+0x1228>
    aaf4:	add	x2, x2, #0x340
    aaf8:	adrp	x1, 15000 <mpc_ui_ui_sub@@Base+0x1228>
    aafc:	add	x1, x1, #0x238
    ab00:	adrp	x0, 27000 <mpc_ui_ui_sub@@Base+0x13228>
    ab04:	ldr	x0, [x0, #4008]
    ab08:	ldr	x0, [x0]
    ab0c:	bl	55a0 <fprintf@plt>
    ab10:	bl	5000 <abort@plt>
    ab14:	adrp	x4, 15000 <mpc_ui_ui_sub@@Base+0x1228>
    ab18:	add	x4, x4, #0x368
    ab1c:	mov	w3, #0xcc                  	// #204
    ab20:	adrp	x2, 15000 <mpc_ui_ui_sub@@Base+0x1228>
    ab24:	add	x2, x2, #0x340
    ab28:	adrp	x1, 15000 <mpc_ui_ui_sub@@Base+0x1228>
    ab2c:	add	x1, x1, #0x238
    ab30:	adrp	x0, 27000 <mpc_ui_ui_sub@@Base+0x13228>
    ab34:	ldr	x0, [x0, #4008]
    ab38:	ldr	x0, [x0]
    ab3c:	bl	55a0 <fprintf@plt>
    ab40:	bl	5000 <abort@plt>
    ab44:	add	x2, x22, #0x3
    ab48:	mov	x1, x27
    ab4c:	mov	x0, x21
    ab50:	bl	5330 <mpc_realloc_str@plt>
    ab54:	mov	x21, x0
    ab58:	mov	w0, #0x29                  	// #41
    ab5c:	strb	w0, [x21, x28]
    ab60:	strb	wzr, [x21, x27]
    ab64:	mov	x22, x28
    ab68:	ldp	x27, x28, [sp, #80]
    ab6c:	b	a980 <mpc_inp_str@@Base+0x70>
    ab70:	mov	x1, x19
    ab74:	bl	5210 <ungetc@plt>
    ab78:	ldp	x27, x28, [sp, #80]
    ab7c:	b	a980 <mpc_inp_str@@Base+0x70>
    ab80:	mov	x22, #0x0                   	// #0
    ab84:	mov	x0, x24
    ab88:	bl	4a40 <mpfr_set_nan@plt>
    ab8c:	add	x0, x24, #0x20
    ab90:	bl	4a40 <mpfr_set_nan@plt>
    ab94:	mov	w19, #0xffffffff            	// #-1
    ab98:	b	a9a8 <mpc_inp_str@@Base+0x98>

000000000000ab9c <mpc_log@@Base>:
    ab9c:	stp	x29, x30, [sp, #-192]!
    aba0:	mov	x29, sp
    aba4:	stp	x19, x20, [sp, #16]
    aba8:	stp	x21, x22, [sp, #32]
    abac:	mov	x20, x0
    abb0:	mov	x19, x1
    abb4:	mov	w21, w2
    abb8:	mov	x0, x1
    abbc:	bl	54d0 <mpfr_number_p@plt>
    abc0:	cbnz	w0, ac0c <mpc_log@@Base+0x70>
    abc4:	ldr	x0, [x19, #16]
    abc8:	mov	x1, #0x2                   	// #2
    abcc:	movk	x1, #0x8000, lsl #48
    abd0:	cmp	x0, x1
    abd4:	b.eq	ac28 <mpc_log@@Base+0x8c>  // b.none
    abd8:	ldr	x2, [x19, #48]
    abdc:	mov	x1, #0x2                   	// #2
    abe0:	movk	x1, #0x8000, lsl #48
    abe4:	cmp	x2, x1
    abe8:	b.ne	ac70 <mpc_log@@Base+0xd4>  // b.any
    abec:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
    abf0:	cmp	x0, x1
    abf4:	b.eq	ac60 <mpc_log@@Base+0xc4>  // b.none
    abf8:	mov	x0, x20
    abfc:	bl	4a40 <mpfr_set_nan@plt>
    ac00:	add	x0, x20, #0x20
    ac04:	bl	4a40 <mpfr_set_nan@plt>
    ac08:	b	ac48 <mpc_log@@Base+0xac>
    ac0c:	stp	x25, x26, [sp, #64]
    ac10:	add	x26, x19, #0x20
    ac14:	mov	x0, x26
    ac18:	bl	54d0 <mpfr_number_p@plt>
    ac1c:	cbnz	w0, acb8 <mpc_log@@Base+0x11c>
    ac20:	ldp	x25, x26, [sp, #64]
    ac24:	b	abc4 <mpc_log@@Base+0x28>
    ac28:	ldr	x1, [x19, #48]
    ac2c:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
    ac30:	cmp	x1, x0
    ac34:	b.eq	ac50 <mpc_log@@Base+0xb4>  // b.none
    ac38:	mov	x0, x20
    ac3c:	bl	4a40 <mpfr_set_nan@plt>
    ac40:	add	x0, x20, #0x20
    ac44:	bl	4a40 <mpfr_set_nan@plt>
    ac48:	mov	w19, #0x0                   	// #0
    ac4c:	b	aca4 <mpc_log@@Base+0x108>
    ac50:	mov	w1, #0x1                   	// #1
    ac54:	mov	x0, x20
    ac58:	bl	5120 <mpfr_set_inf@plt>
    ac5c:	b	ac40 <mpc_log@@Base+0xa4>
    ac60:	mov	w1, #0x1                   	// #1
    ac64:	mov	x0, x20
    ac68:	bl	5120 <mpfr_set_inf@plt>
    ac6c:	b	ac00 <mpc_log@@Base+0x64>
    ac70:	asr	w3, w21, #4
    ac74:	mov	x2, x19
    ac78:	add	x1, x19, #0x20
    ac7c:	add	x0, x20, #0x20
    ac80:	bl	4ca0 <mpfr_atan2@plt>
    ac84:	mov	w19, w0
    ac88:	mov	w1, #0x1                   	// #1
    ac8c:	mov	x0, x20
    ac90:	bl	5120 <mpfr_set_inf@plt>
    ac94:	tbnz	w19, #31, b214 <mpc_log@@Base+0x678>
    ac98:	cmp	w19, #0x0
    ac9c:	mov	w0, #0x4                   	// #4
    aca0:	csel	w19, w19, w0, eq  // eq = none
    aca4:	mov	w0, w19
    aca8:	ldp	x19, x20, [sp, #16]
    acac:	ldp	x21, x22, [sp, #32]
    acb0:	ldp	x29, x30, [sp], #192
    acb4:	ret
    acb8:	mov	x0, x19
    acbc:	bl	51f0 <mpfr_sgn@plt>
    acc0:	mov	w22, w0
    acc4:	mov	x0, x26
    acc8:	bl	51f0 <mpfr_sgn@plt>
    accc:	cbz	w0, ad44 <mpc_log@@Base+0x1a8>
    acd0:	cbnz	w22, af48 <mpc_log@@Base+0x3ac>
    acd4:	cmp	w0, #0x0
    acd8:	b.le	aeac <mpc_log@@Base+0x310>
    acdc:	and	w2, w21, #0xf
    ace0:	mov	x1, x26
    ace4:	mov	x0, x20
    ace8:	bl	4d80 <mpfr_log@plt>
    acec:	mov	w22, w0
    acf0:	add	x20, x20, #0x20
    acf4:	asr	w1, w21, #4
    acf8:	mov	x0, x20
    acfc:	bl	4a80 <mpfr_const_pi@plt>
    ad00:	mov	w21, w0
    ad04:	mov	w3, #0x0                   	// #0
    ad08:	mov	x2, #0x1                   	// #1
    ad0c:	mov	x1, x20
    ad10:	mov	x0, x20
    ad14:	bl	5320 <mpfr_div_2ui@plt>
    ad18:	mov	w19, #0x2                   	// #2
    ad1c:	tbnz	w22, #31, ad28 <mpc_log@@Base+0x18c>
    ad20:	cmp	w22, #0x0
    ad24:	cset	w19, ne  // ne = any
    ad28:	tbnz	w21, #31, af40 <mpc_log@@Base+0x3a4>
    ad2c:	cmp	w21, #0x0
    ad30:	mov	w0, #0x4                   	// #4
    ad34:	csel	w21, w21, w0, eq  // eq = none
    ad38:	orr	w19, w19, w21
    ad3c:	ldp	x25, x26, [sp, #64]
    ad40:	b	aca4 <mpc_log@@Base+0x108>
    ad44:	cbz	w22, ada4 <mpc_log@@Base+0x208>
    ad48:	cmp	w22, #0x0
    ad4c:	b.gt	adcc <mpc_log@@Base+0x230>
    ad50:	ldr	w0, [x19, #40]
    ad54:	tbnz	w0, #31, ae24 <mpc_log@@Base+0x288>
    ad58:	add	x0, sp, #0x80
    ad5c:	ldp	x2, x3, [x19]
    ad60:	stp	x2, x3, [sp, #128]
    ad64:	ldp	x2, x3, [x19, #16]
    ad68:	stp	x2, x3, [sp, #144]
    ad6c:	mov	w2, #0x0                   	// #0
    ad70:	mov	x19, x0
    ad74:	mov	x1, x0
    ad78:	bl	4b80 <mpfr_neg@plt>
    ad7c:	and	w2, w21, #0xf
    ad80:	mov	x1, x19
    ad84:	mov	x0, x20
    ad88:	bl	4d80 <mpfr_log@plt>
    ad8c:	mov	w22, w0
    ad90:	asr	w1, w21, #4
    ad94:	add	x0, x20, #0x20
    ad98:	bl	4a80 <mpfr_const_pi@plt>
    ad9c:	mov	w21, w0
    ada0:	b	adf8 <mpc_log@@Base+0x25c>
    ada4:	asr	w3, w21, #4
    ada8:	mov	x2, x19
    adac:	mov	x1, x26
    adb0:	add	x0, x20, #0x20
    adb4:	bl	4ca0 <mpfr_atan2@plt>
    adb8:	mov	w21, w0
    adbc:	mov	w1, #0xffffffff            	// #-1
    adc0:	mov	x0, x20
    adc4:	bl	5120 <mpfr_set_inf@plt>
    adc8:	b	ae00 <mpc_log@@Base+0x264>
    adcc:	and	w2, w21, #0xf
    add0:	mov	x1, x19
    add4:	mov	x0, x20
    add8:	bl	4d80 <mpfr_log@plt>
    addc:	mov	w22, w0
    ade0:	ldr	w3, [x19, #40]
    ade4:	asr	w2, w21, #4
    ade8:	mov	x1, x26
    adec:	add	x0, x20, #0x20
    adf0:	bl	51d0 <mpfr_set4@plt>
    adf4:	mov	w21, w0
    adf8:	mov	w19, #0x2                   	// #2
    adfc:	tbnz	w22, #31, ae08 <mpc_log@@Base+0x26c>
    ae00:	cmp	w22, #0x0
    ae04:	cset	w19, ne  // ne = any
    ae08:	tbnz	w21, #31, aea4 <mpc_log@@Base+0x308>
    ae0c:	cmp	w21, #0x0
    ae10:	mov	w0, #0x4                   	// #4
    ae14:	csel	w21, w21, w0, eq  // eq = none
    ae18:	orr	w19, w19, w21
    ae1c:	ldp	x25, x26, [sp, #64]
    ae20:	b	aca4 <mpc_log@@Base+0x108>
    ae24:	stp	x23, x24, [sp, #48]
    ae28:	asr	w23, w21, #4
    ae2c:	cmp	w23, #0x2
    ae30:	b.eq	b21c <mpc_log@@Base+0x680>  // b.none
    ae34:	cmp	w23, #0x3
    ae38:	mov	w0, #0x2                   	// #2
    ae3c:	csel	w23, w23, w0, ne  // ne = any
    ae40:	add	x0, sp, #0x80
    ae44:	ldp	x2, x3, [x19]
    ae48:	stp	x2, x3, [sp, #128]
    ae4c:	ldp	x2, x3, [x19, #16]
    ae50:	stp	x2, x3, [sp, #144]
    ae54:	mov	w2, #0x0                   	// #0
    ae58:	mov	x19, x0
    ae5c:	mov	x1, x0
    ae60:	bl	4b80 <mpfr_neg@plt>
    ae64:	and	w2, w21, #0xf
    ae68:	mov	x1, x19
    ae6c:	mov	x0, x20
    ae70:	bl	4d80 <mpfr_log@plt>
    ae74:	mov	w22, w0
    ae78:	mov	w1, w23
    ae7c:	add	x0, x20, #0x20
    ae80:	bl	4a80 <mpfr_const_pi@plt>
    ae84:	mov	w21, w0
    ae88:	mov	w2, #0x0                   	// #0
    ae8c:	mov	x1, x20
    ae90:	mov	x0, x20
    ae94:	bl	4f60 <mpc_conj@plt>
    ae98:	neg	w21, w21
    ae9c:	ldp	x23, x24, [sp, #48]
    aea0:	b	adf8 <mpc_log@@Base+0x25c>
    aea4:	mov	w21, #0x8                   	// #8
    aea8:	b	ae18 <mpc_log@@Base+0x27c>
    aeac:	add	x0, sp, #0x80
    aeb0:	ldp	x2, x3, [x19, #32]
    aeb4:	stp	x2, x3, [sp, #128]
    aeb8:	ldp	x2, x3, [x19, #48]
    aebc:	stp	x2, x3, [sp, #144]
    aec0:	mov	w2, #0x0                   	// #0
    aec4:	mov	x19, x0
    aec8:	mov	x1, x0
    aecc:	bl	4b80 <mpfr_neg@plt>
    aed0:	and	w2, w21, #0xf
    aed4:	mov	x1, x19
    aed8:	mov	x0, x20
    aedc:	bl	4d80 <mpfr_log@plt>
    aee0:	mov	w22, w0
    aee4:	add	x20, x20, #0x20
    aee8:	asr	w1, w21, #4
    aeec:	cmp	w1, #0x2
    aef0:	b.eq	af38 <mpc_log@@Base+0x39c>  // b.none
    aef4:	cmp	w1, #0x3
    aef8:	mov	w0, #0x2                   	// #2
    aefc:	csel	w1, w1, w0, ne  // ne = any
    af00:	mov	x0, x20
    af04:	bl	4a80 <mpfr_const_pi@plt>
    af08:	mov	w21, w0
    af0c:	mov	w3, #0x0                   	// #0
    af10:	mov	x2, #0x1                   	// #1
    af14:	mov	x1, x20
    af18:	mov	x0, x20
    af1c:	bl	5320 <mpfr_div_2ui@plt>
    af20:	mov	w2, #0x0                   	// #0
    af24:	mov	x1, x20
    af28:	mov	x0, x20
    af2c:	bl	4b80 <mpfr_neg@plt>
    af30:	neg	w21, w21
    af34:	b	ad18 <mpc_log@@Base+0x17c>
    af38:	mov	w1, #0x3                   	// #3
    af3c:	b	af00 <mpc_log@@Base+0x364>
    af40:	mov	w21, #0x8                   	// #8
    af44:	b	ad38 <mpc_log@@Base+0x19c>
    af48:	stp	x23, x24, [sp, #48]
    af4c:	stp	x27, x28, [sp, #80]
    af50:	ldr	x22, [x20]
    af54:	mov	x1, #0x2                   	// #2
    af58:	add	x0, sp, #0x80
    af5c:	bl	5440 <mpfr_init2@plt>
    af60:	mov	w25, #0x1                   	// #1
    af64:	add	x23, sp, #0x80
    af68:	mov	x27, #0x8000000000000003    	// #-9223372036854775805
    af6c:	mov	x28, #0x8000000000000001    	// #-9223372036854775807
    af70:	mov	w24, w25
    af74:	and	w0, w21, #0xf
    af78:	str	w0, [sp, #108]
    af7c:	mov	x0, x22
    af80:	bl	4d20 <mpc_ceil_log2@plt>
    af84:	add	x0, x0, #0x4
    af88:	add	x22, x22, x0
    af8c:	mov	x1, x22
    af90:	mov	x0, x23
    af94:	bl	4c80 <mpfr_set_prec@plt>
    af98:	mov	w2, #0x0                   	// #0
    af9c:	mov	x1, x19
    afa0:	mov	x0, x23
    afa4:	bl	51a0 <mpc_abs@plt>
    afa8:	ldr	x0, [sp, #144]
    afac:	cmp	x0, x27
    afb0:	b.eq	b080 <mpc_log@@Base+0x4e4>  // b.none
    afb4:	mov	w2, #0x0                   	// #0
    afb8:	mov	x1, x23
    afbc:	mov	x0, x23
    afc0:	bl	4d80 <mpfr_log@plt>
    afc4:	ldr	x0, [sp, #144]
    afc8:	cmp	x0, x28
    afcc:	b.eq	b080 <mpc_log@@Base+0x4e4>  // b.none
    afd0:	sub	w1, w24, w0
    afd4:	cmp	x0, #0x0
    afd8:	csel	w1, w1, w24, lt  // lt = tstop
    afdc:	ldr	w0, [sp, #108]
    afe0:	cmp	w0, #0x0
    afe4:	ldr	x4, [x20]
    afe8:	cinc	x4, x4, eq  // eq = none
    afec:	mov	w3, w24
    aff0:	mov	w2, #0x0                   	// #0
    aff4:	sub	x1, x22, w1, sxtw
    aff8:	mov	x0, x23
    affc:	bl	5450 <mpfr_can_round@plt>
    b000:	add	w25, w25, #0x1
    b004:	cmp	w0, #0x0
    b008:	ccmp	w25, #0x2, #0x0, eq  // eq = none
    b00c:	b.le	af7c <mpc_log@@Base+0x3e0>
    b010:	cbz	w0, b080 <mpc_log@@Base+0x4e4>
    b014:	asr	w3, w21, #4
    b018:	mov	x2, x19
    b01c:	mov	x1, x26
    b020:	add	x0, x20, #0x20
    b024:	bl	4ca0 <mpfr_atan2@plt>
    b028:	mov	w22, w0
    b02c:	ldr	w3, [sp, #136]
    b030:	and	w2, w21, #0xf
    b034:	add	x1, sp, #0x80
    b038:	mov	x0, x20
    b03c:	bl	51d0 <mpfr_set4@plt>
    b040:	mov	w20, w0
    b044:	add	x0, sp, #0x80
    b048:	bl	4d60 <mpfr_clear@plt>
    b04c:	mov	w19, #0x2                   	// #2
    b050:	tbnz	w20, #31, b05c <mpc_log@@Base+0x4c0>
    b054:	cmp	w20, #0x0
    b058:	cset	w19, ne  // ne = any
    b05c:	tbnz	w22, #31, b20c <mpc_log@@Base+0x670>
    b060:	cmp	w22, #0x0
    b064:	mov	w0, #0x4                   	// #4
    b068:	csel	w22, w22, w0, eq  // eq = none
    b06c:	orr	w19, w19, w22
    b070:	ldp	x23, x24, [sp, #48]
    b074:	ldp	x25, x26, [sp, #64]
    b078:	ldp	x27, x28, [sp, #80]
    b07c:	b	aca4 <mpc_log@@Base+0x108>
    b080:	ldr	x24, [x20]
    b084:	mov	x1, #0x2                   	// #2
    b088:	add	x0, sp, #0xa0
    b08c:	bl	5440 <mpfr_init2@plt>
    b090:	mov	x1, x26
    b094:	mov	x0, x19
    b098:	bl	53b0 <mpfr_cmpabs@plt>
    b09c:	cmp	w0, #0x0
    b0a0:	csel	x1, x26, x19, ge  // ge = tcont
    b0a4:	str	x1, [sp, #120]
    b0a8:	csel	x27, x19, x26, ge  // ge = tcont
    b0ac:	add	x22, sp, #0xa0
    b0b0:	add	x23, sp, #0x80
    b0b4:	mov	w25, #0x3                   	// #3
    b0b8:	b	b12c <mpc_log@@Base+0x590>
    b0bc:	ldr	x1, [sp, #176]
    b0c0:	ldr	x0, [sp, #144]
    b0c4:	add	x3, x1, #0x4
    b0c8:	ldr	x4, [sp, #112]
    b0cc:	sub	x2, x4, #0x1
    b0d0:	sub	x2, x2, x0
    b0d4:	add	w1, w1, #0x7
    b0d8:	sub	w0, w4, w0
    b0dc:	cmp	x3, x2
    b0e0:	csinc	w28, w1, w0, ge  // ge = tcont
    b0e4:	mov	x2, #0x0                   	// #0
    b0e8:	mov	x1, #0xffffffffffffffff    	// #-1
    b0ec:	mov	x0, x27
    b0f0:	bl	4fe0 <mpfr_cmp_si_2exp@plt>
    b0f4:	cbnz	w0, b1f4 <mpc_log@@Base+0x658>
    b0f8:	ldr	x1, [sp, #144]
    b0fc:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
    b100:	cmp	x1, x0
    b104:	b.eq	b224 <mpc_log@@Base+0x688>  // b.none
    b108:	tst	x21, #0xf
    b10c:	ldr	x4, [x20]
    b110:	cinc	x4, x4, eq  // eq = none
    b114:	mov	w3, #0x1                   	// #1
    b118:	mov	w2, #0x0                   	// #0
    b11c:	sub	x1, x24, w28, sxtw
    b120:	mov	x0, x23
    b124:	bl	5450 <mpfr_can_round@plt>
    b128:	cbnz	w0, b264 <mpc_log@@Base+0x6c8>
    b12c:	mov	x0, x24
    b130:	bl	4d20 <mpc_ceil_log2@plt>
    b134:	add	x0, x0, #0x4
    b138:	add	x24, x24, x0
    b13c:	mov	x1, x24
    b140:	mov	x0, x22
    b144:	bl	4c80 <mpfr_set_prec@plt>
    b148:	mov	x1, x24
    b14c:	mov	x0, x23
    b150:	bl	4c80 <mpfr_set_prec@plt>
    b154:	mov	w3, w25
    b158:	mov	x2, x27
    b15c:	ldr	x1, [sp, #120]
    b160:	mov	x0, x22
    b164:	bl	5150 <mpfr_div@plt>
    b168:	mov	w2, w25
    b16c:	mov	x1, x22
    b170:	mov	x0, x22
    b174:	bl	5010 <mpfr_sqr@plt>
    b178:	mov	w2, w25
    b17c:	mov	x1, x22
    b180:	mov	x0, x22
    b184:	bl	51e0 <mpfr_log1p@plt>
    b188:	mov	w3, w25
    b18c:	mov	x2, #0x1                   	// #1
    b190:	mov	x1, x22
    b194:	mov	x0, x22
    b198:	bl	5320 <mpfr_div_2ui@plt>
    b19c:	mov	w3, #0x1                   	// #1
    b1a0:	mov	w2, #0x0                   	// #0
    b1a4:	mov	x1, x27
    b1a8:	mov	x0, x23
    b1ac:	bl	51d0 <mpfr_set4@plt>
    b1b0:	mov	w2, #0x0                   	// #0
    b1b4:	mov	x1, x23
    b1b8:	mov	x0, x23
    b1bc:	bl	4d80 <mpfr_log@plt>
    b1c0:	ldr	x4, [sp, #144]
    b1c4:	str	x4, [sp, #112]
    b1c8:	ldr	w0, [sp, #136]
    b1cc:	str	w0, [sp, #108]
    b1d0:	mov	w3, #0x0                   	// #0
    b1d4:	mov	x2, x22
    b1d8:	mov	x1, x23
    b1dc:	mov	x0, x23
    b1e0:	bl	4e60 <mpfr_add@plt>
    b1e4:	mov	w28, #0x5                   	// #5
    b1e8:	ldr	w0, [sp, #108]
    b1ec:	tbz	w0, #31, b0e4 <mpc_log@@Base+0x548>
    b1f0:	b	b0bc <mpc_log@@Base+0x520>
    b1f4:	mov	x2, #0x0                   	// #0
    b1f8:	mov	x1, #0x1                   	// #1
    b1fc:	mov	x0, x27
    b200:	bl	4cb0 <mpfr_cmp_ui_2exp@plt>
    b204:	cbnz	w0, b108 <mpc_log@@Base+0x56c>
    b208:	b	b0f8 <mpc_log@@Base+0x55c>
    b20c:	mov	w22, #0x8                   	// #8
    b210:	b	b06c <mpc_log@@Base+0x4d0>
    b214:	mov	w19, #0x8                   	// #8
    b218:	b	aca4 <mpc_log@@Base+0x108>
    b21c:	mov	w23, #0x3                   	// #3
    b220:	b	ae40 <mpc_log@@Base+0x2a4>
    b224:	add	x0, sp, #0xa0
    b228:	bl	4d60 <mpfr_clear@plt>
    b22c:	asr	w3, w21, #4
    b230:	mov	x2, x19
    b234:	mov	x1, x26
    b238:	add	x0, x20, #0x20
    b23c:	bl	4ca0 <mpfr_atan2@plt>
    b240:	mov	w22, w0
    b244:	bl	55c0 <mpfr_get_emin_min@plt>
    b248:	and	w3, w21, #0xf
    b24c:	sub	x2, x0, #0x2
    b250:	mov	x1, #0x1                   	// #1
    b254:	mov	x0, x20
    b258:	bl	5130 <mpfr_set_ui_2exp@plt>
    b25c:	mov	w20, w0
    b260:	b	b044 <mpc_log@@Base+0x4a8>
    b264:	add	x0, sp, #0xa0
    b268:	bl	4d60 <mpfr_clear@plt>
    b26c:	asr	w3, w21, #4
    b270:	mov	x2, x19
    b274:	mov	x1, x26
    b278:	add	x0, x20, #0x20
    b27c:	bl	4ca0 <mpfr_atan2@plt>
    b280:	mov	w22, w0
    b284:	b	b02c <mpc_log@@Base+0x490>
    b288:	stp	x29, x30, [sp, #-32]!
    b28c:	mov	x29, sp
    b290:	str	x19, [sp, #16]
    b294:	mov	x19, x0
    b298:	mov	w3, #0x0                   	// #0
    b29c:	mov	x2, #0x0                   	// #0
    b2a0:	mov	x1, #0xa                   	// #10
    b2a4:	bl	5130 <mpfr_set_ui_2exp@plt>
    b2a8:	mov	w2, #0x0                   	// #0
    b2ac:	mov	x1, x19
    b2b0:	mov	x0, x19
    b2b4:	bl	4d80 <mpfr_log@plt>
    b2b8:	ldr	x19, [sp, #16]
    b2bc:	ldp	x29, x30, [sp], #32
    b2c0:	ret

000000000000b2c4 <mpc_log10@@Base>:
    b2c4:	stp	x29, x30, [sp, #-272]!
    b2c8:	mov	x29, sp
    b2cc:	stp	x19, x20, [sp, #16]
    b2d0:	stp	x21, x22, [sp, #32]
    b2d4:	stp	x23, x24, [sp, #48]
    b2d8:	stp	x25, x26, [sp, #64]
    b2dc:	stp	x27, x28, [sp, #80]
    b2e0:	mov	x28, x0
    b2e4:	mov	x27, x1
    b2e8:	mov	w26, w2
    b2ec:	mov	x1, #0x2                   	// #2
    b2f0:	add	x0, sp, #0xf0
    b2f4:	bl	5440 <mpfr_init2@plt>
    b2f8:	mov	x1, #0x2                   	// #2
    b2fc:	add	x0, sp, #0xb0
    b300:	bl	4cf0 <mpc_init2@plt>
    b304:	ldr	x0, [x28]
    b308:	ldr	x19, [x28, #32]
    b30c:	cmp	x19, x0
    b310:	csel	x19, x19, x0, ge  // ge = tcont
    b314:	asr	w0, w26, #4
    b318:	str	w0, [sp, #140]
    b31c:	cmp	w0, #0x0
    b320:	cset	x0, eq  // eq = none
    b324:	str	x0, [sp, #112]
    b328:	str	wzr, [sp, #104]
    b32c:	mov	w22, #0x0                   	// #0
    b330:	add	x24, sp, #0xf0
    b334:	add	x20, sp, #0xb0
    b338:	add	x25, x20, #0x20
    b33c:	add	x0, sp, #0x90
    b340:	str	x0, [sp, #128]
    b344:	add	x0, sp, #0xa0
    b348:	str	x0, [sp, #120]
    b34c:	b	b448 <mpc_log10@@Base+0x184>
    b350:	mov	x0, x19
    b354:	bl	4d20 <mpc_ceil_log2@plt>
    b358:	add	x0, x0, #0x4
    b35c:	b	b45c <mpc_log10@@Base+0x198>
    b360:	mov	x0, x24
    b364:	bl	b288 <mpc_log@@Base+0x6ec>
    b368:	mov	w3, #0x0                   	// #0
    b36c:	mov	x2, x24
    b370:	mov	x1, x25
    b374:	mov	x0, x25
    b378:	bl	5150 <mpfr_div@plt>
    b37c:	ldr	x4, [x28, #32]
    b380:	ldr	x0, [sp, #112]
    b384:	add	x4, x0, x4
    b388:	mov	w3, #0x1                   	// #1
    b38c:	mov	w2, #0x0                   	// #0
    b390:	sub	x1, x19, #0x2
    b394:	mov	x0, x25
    b398:	bl	5450 <mpfr_can_round@plt>
    b39c:	mov	w21, w0
    b3a0:	cbz	w0, b448 <mpc_log10@@Base+0x184>
    b3a4:	mov	x0, x20
    b3a8:	bl	54d0 <mpfr_number_p@plt>
    b3ac:	mov	w23, w0
    b3b0:	cbz	w0, b428 <mpc_log10@@Base+0x164>
    b3b4:	mov	w23, #0x0                   	// #0
    b3b8:	b	b4bc <mpc_log10@@Base+0x1f8>
    b3bc:	mov	x0, x24
    b3c0:	bl	b288 <mpc_log@@Base+0x6ec>
    b3c4:	b	b4d0 <mpc_log10@@Base+0x20c>
    b3c8:	ldr	x2, [sp, #104]
    b3cc:	ldr	x21, [sp, #128]
    b3d0:	mov	x1, x21
    b3d4:	mov	x0, x21
    b3d8:	bl	4e10 <__gmpz_fdiv_q_2exp@plt>
    b3dc:	ldr	x2, [sp, #104]
    b3e0:	mov	x1, #0x5                   	// #5
    b3e4:	ldr	x0, [sp, #120]
    b3e8:	bl	50b0 <__gmpz_ui_pow_ui@plt>
    b3ec:	mov	x1, x21
    b3f0:	ldr	x0, [sp, #120]
    b3f4:	bl	5300 <__gmpz_cmp@plt>
    b3f8:	ldr	w21, [sp, #136]
    b3fc:	cbnz	w0, b5dc <mpc_log10@@Base+0x318>
    b400:	mov	x1, #0x40                  	// #64
    b404:	mov	x0, x20
    b408:	bl	4c80 <mpfr_set_prec@plt>
    b40c:	mov	w3, #0x0                   	// #0
    b410:	mov	x2, #0xffffffffffffffff    	// #-1
    b414:	ldr	x1, [sp, #104]
    b418:	mov	x0, x20
    b41c:	bl	5130 <mpfr_set_ui_2exp@plt>
    b420:	mov	w21, #0x1                   	// #1
    b424:	b	b5dc <mpc_log10@@Base+0x318>
    b428:	mov	w0, #0x1                   	// #1
    b42c:	str	w0, [sp, #136]
    b430:	b	b444 <mpc_log10@@Base+0x180>
    b434:	str	wzr, [sp, #136]
    b438:	b	b444 <mpc_log10@@Base+0x180>
    b43c:	mov	w0, #0x1                   	// #1
    b440:	str	w0, [sp, #136]
    b444:	cbnz	w21, b600 <mpc_log10@@Base+0x33c>
    b448:	add	w22, w22, #0x1
    b44c:	cmp	w22, #0x2
    b450:	b.le	b350 <mpc_log10@@Base+0x8c>
    b454:	add	x0, x19, x19, lsr #63
    b458:	asr	x0, x0, #1
    b45c:	add	x19, x19, x0
    b460:	mov	x1, x19
    b464:	mov	x0, x24
    b468:	bl	4c80 <mpfr_set_prec@plt>
    b46c:	mov	x1, x19
    b470:	mov	x0, x20
    b474:	bl	4c00 <mpc_set_prec@plt>
    b478:	mov	w2, w26
    b47c:	mov	x1, x27
    b480:	mov	x0, x20
    b484:	bl	4db0 <mpc_log@plt>
    b488:	str	w0, [sp, #100]
    b48c:	mov	x0, x25
    b490:	bl	54d0 <mpfr_number_p@plt>
    b494:	cbz	w0, b4a8 <mpc_log10@@Base+0x1e4>
    b498:	ldr	x1, [sp, #224]
    b49c:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
    b4a0:	cmp	x1, x0
    b4a4:	b.ne	b360 <mpc_log10@@Base+0x9c>  // b.any
    b4a8:	mov	x0, x20
    b4ac:	bl	54d0 <mpfr_number_p@plt>
    b4b0:	cbz	w0, b5f8 <mpc_log10@@Base+0x334>
    b4b4:	mov	w23, #0x1                   	// #1
    b4b8:	mov	w21, w23
    b4bc:	ldr	x1, [sp, #192]
    b4c0:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
    b4c4:	cmp	x1, x0
    b4c8:	b.eq	b43c <mpc_log10@@Base+0x178>  // b.none
    b4cc:	cbnz	w23, b3bc <mpc_log10@@Base+0xf8>
    b4d0:	mov	w3, #0x0                   	// #0
    b4d4:	mov	x2, x24
    b4d8:	mov	x1, x20
    b4dc:	mov	x0, x20
    b4e0:	bl	5150 <mpfr_div@plt>
    b4e4:	tst	x26, #0xf
    b4e8:	ldr	x4, [x28]
    b4ec:	cinc	x4, x4, eq  // eq = none
    b4f0:	mov	w3, #0x1                   	// #1
    b4f4:	mov	w2, #0x0                   	// #0
    b4f8:	sub	x1, x19, #0x2
    b4fc:	mov	x0, x20
    b500:	bl	5450 <mpfr_can_round@plt>
    b504:	mov	w21, w0
    b508:	ldr	w0, [sp, #104]
    b50c:	orr	w0, w21, w0
    b510:	str	w0, [sp, #136]
    b514:	cbnz	w0, b434 <mpc_log10@@Base+0x170>
    b518:	mov	x0, x27
    b51c:	bl	4e30 <mpfr_integer_p@plt>
    b520:	str	w0, [sp, #104]
    b524:	cbz	w0, b448 <mpc_log10@@Base+0x184>
    b528:	add	x21, x27, #0x20
    b52c:	mov	x0, x21
    b530:	bl	4e30 <mpfr_integer_p@plt>
    b534:	str	w0, [sp, #104]
    b538:	cbz	w0, b448 <mpc_log10@@Base+0x184>
    b53c:	ldr	x0, [sp, #128]
    b540:	bl	54a0 <__gmpz_init@plt>
    b544:	ldr	x0, [sp, #120]
    b548:	bl	54a0 <__gmpz_init@plt>
    b54c:	mov	w2, #0x0                   	// #0
    b550:	mov	x1, x27
    b554:	ldr	x0, [sp, #128]
    b558:	bl	4bd0 <mpfr_get_z@plt>
    b55c:	mov	w2, #0x0                   	// #0
    b560:	mov	x1, x21
    b564:	ldr	x0, [sp, #120]
    b568:	bl	4bd0 <mpfr_get_z@plt>
    b56c:	ldr	x21, [sp, #128]
    b570:	mov	x2, x21
    b574:	mov	x1, x21
    b578:	mov	x0, x21
    b57c:	bl	4d40 <__gmpz_mul@plt>
    b580:	ldr	x1, [sp, #120]
    b584:	mov	x2, x1
    b588:	mov	x0, x1
    b58c:	bl	4d40 <__gmpz_mul@plt>
    b590:	ldr	x2, [sp, #120]
    b594:	mov	x1, x21
    b598:	mov	x0, x21
    b59c:	bl	53d0 <__gmpz_add@plt>
    b5a0:	mov	x1, #0x0                   	// #0
    b5a4:	mov	x0, x21
    b5a8:	bl	49f0 <__gmpz_scan1@plt>
    b5ac:	str	x0, [sp, #104]
    b5b0:	mov	w1, #0xa                   	// #10
    b5b4:	mov	x0, x21
    b5b8:	bl	54b0 <__gmpz_sizeinbase@plt>
    b5bc:	ldr	x2, [sp, #104]
    b5c0:	add	x1, x2, #0x1
    b5c4:	cmp	x1, x0
    b5c8:	b.eq	b3c8 <mpc_log10@@Base+0x104>  // b.none
    b5cc:	add	x1, x2, #0x2
    b5d0:	ldr	w21, [sp, #136]
    b5d4:	cmp	x1, x0
    b5d8:	b.eq	b3c8 <mpc_log10@@Base+0x104>  // b.none
    b5dc:	ldr	x0, [sp, #128]
    b5e0:	bl	5180 <__gmpz_clear@plt>
    b5e4:	ldr	x0, [sp, #120]
    b5e8:	bl	5180 <__gmpz_clear@plt>
    b5ec:	mov	w0, #0x1                   	// #1
    b5f0:	str	w0, [sp, #104]
    b5f4:	b	b444 <mpc_log10@@Base+0x180>
    b5f8:	mov	w23, #0x1                   	// #1
    b5fc:	str	w23, [sp, #136]
    b600:	ldr	w3, [sp, #184]
    b604:	and	w2, w26, #0xf
    b608:	add	x1, sp, #0xb0
    b60c:	mov	x0, x28
    b610:	bl	51d0 <mpfr_set4@plt>
    b614:	mov	w20, w0
    b618:	ldr	w0, [sp, #136]
    b61c:	cbz	w0, b668 <mpc_log10@@Base+0x3a4>
    b620:	ldr	w0, [sp, #100]
    b624:	and	w21, w0, #0x3
    b628:	cmp	w21, #0x2
    b62c:	b.eq	b738 <mpc_log10@@Base+0x474>  // b.none
    b630:	cmp	w21, #0x0
    b634:	cset	w20, ne  // ne = any
    b638:	ldr	w3, [sp, #216]
    b63c:	ldr	w2, [sp, #140]
    b640:	add	x1, sp, #0xd0
    b644:	add	x0, x28, #0x20
    b648:	bl	51d0 <mpfr_set4@plt>
    b64c:	mov	w19, w0
    b650:	cbnz	w23, b768 <mpc_log10@@Base+0x4a4>
    b654:	add	x0, sp, #0xf0
    b658:	bl	4d60 <mpfr_clear@plt>
    b65c:	add	x0, sp, #0xb0
    b660:	bl	4a10 <mpc_clear@plt>
    b664:	b	b6d0 <mpc_log10@@Base+0x40c>
    b668:	ldr	w3, [sp, #216]
    b66c:	ldr	w2, [sp, #140]
    b670:	add	x1, sp, #0xd0
    b674:	add	x0, x28, #0x20
    b678:	bl	51d0 <mpfr_set4@plt>
    b67c:	mov	w19, w0
    b680:	cbnz	w23, b6a0 <mpc_log10@@Base+0x3dc>
    b684:	add	x0, sp, #0xf0
    b688:	bl	4d60 <mpfr_clear@plt>
    b68c:	add	x0, sp, #0xb0
    b690:	bl	4a10 <mpc_clear@plt>
    b694:	mov	w21, #0x2                   	// #2
    b698:	tbz	w20, #31, b6d0 <mpc_log10@@Base+0x40c>
    b69c:	b	b6d8 <mpc_log10@@Base+0x414>
    b6a0:	ldr	w0, [sp, #100]
    b6a4:	asr	w0, w0, #2
    b6a8:	cmp	w0, #0x2
    b6ac:	b.eq	b718 <mpc_log10@@Base+0x454>  // b.none
    b6b0:	cmp	w0, #0x0
    b6b4:	cset	w19, ne  // ne = any
    b6b8:	add	x0, sp, #0xf0
    b6bc:	bl	4d60 <mpfr_clear@plt>
    b6c0:	add	x0, sp, #0xb0
    b6c4:	bl	4a10 <mpc_clear@plt>
    b6c8:	mov	w21, #0x2                   	// #2
    b6cc:	tbnz	w20, #31, b6dc <mpc_log10@@Base+0x418>
    b6d0:	cmp	w20, #0x0
    b6d4:	cset	w21, ne  // ne = any
    b6d8:	tbnz	w19, #31, b710 <mpc_log10@@Base+0x44c>
    b6dc:	cmp	w19, #0x0
    b6e0:	mov	w0, #0x4                   	// #4
    b6e4:	csel	w19, w19, w0, eq  // eq = none
    b6e8:	orr	w0, w19, w21
    b6ec:	ldp	x19, x20, [sp, #16]
    b6f0:	ldp	x21, x22, [sp, #32]
    b6f4:	ldp	x23, x24, [sp, #48]
    b6f8:	ldp	x25, x26, [sp, #64]
    b6fc:	ldp	x27, x28, [sp, #80]
    b700:	ldp	x29, x30, [sp], #272
    b704:	ret
    b708:	mov	w19, #0xffffffff            	// #-1
    b70c:	b	b6d0 <mpc_log10@@Base+0x40c>
    b710:	mov	w19, #0x8                   	// #8
    b714:	b	b6e8 <mpc_log10@@Base+0x424>
    b718:	add	x0, sp, #0xf0
    b71c:	bl	4d60 <mpfr_clear@plt>
    b720:	add	x0, sp, #0xb0
    b724:	bl	4a10 <mpc_clear@plt>
    b728:	tbz	w20, #31, b708 <mpc_log10@@Base+0x444>
    b72c:	mov	w21, #0x2                   	// #2
    b730:	mov	w19, #0x8                   	// #8
    b734:	b	b6e8 <mpc_log10@@Base+0x424>
    b738:	ldr	w3, [sp, #216]
    b73c:	ldr	w2, [sp, #140]
    b740:	add	x1, sp, #0xd0
    b744:	add	x0, x28, #0x20
    b748:	bl	51d0 <mpfr_set4@plt>
    b74c:	mov	w19, w0
    b750:	cbnz	w23, b790 <mpc_log10@@Base+0x4cc>
    b754:	add	x0, sp, #0xf0
    b758:	bl	4d60 <mpfr_clear@plt>
    b75c:	add	x0, sp, #0xb0
    b760:	bl	4a10 <mpc_clear@plt>
    b764:	b	b6d8 <mpc_log10@@Base+0x414>
    b768:	ldr	w0, [sp, #100]
    b76c:	asr	w0, w0, #2
    b770:	cmp	w0, #0x2
    b774:	b.ne	b6b0 <mpc_log10@@Base+0x3ec>  // b.any
    b778:	add	x0, sp, #0xf0
    b77c:	bl	4d60 <mpfr_clear@plt>
    b780:	add	x0, sp, #0xb0
    b784:	bl	4a10 <mpc_clear@plt>
    b788:	mov	w19, #0xffffffff            	// #-1
    b78c:	b	b6d0 <mpc_log10@@Base+0x40c>
    b790:	ldr	w0, [sp, #100]
    b794:	asr	w0, w0, #2
    b798:	mov	w20, #0xffffffff            	// #-1
    b79c:	cmp	w0, #0x2
    b7a0:	b.eq	b718 <mpc_log10@@Base+0x454>  // b.none
    b7a4:	cmp	w0, #0x0
    b7a8:	cset	w19, ne  // ne = any
    b7ac:	add	x0, sp, #0xf0
    b7b0:	bl	4d60 <mpfr_clear@plt>
    b7b4:	add	x0, sp, #0xb0
    b7b8:	bl	4a10 <mpc_clear@plt>
    b7bc:	b	b6dc <mpc_log10@@Base+0x418>

000000000000b7c0 <mpc_alloc_str@@Base>:
    b7c0:	stp	x29, x30, [sp, #-48]!
    b7c4:	mov	x29, sp
    b7c8:	str	x19, [sp, #16]
    b7cc:	mov	x19, x0
    b7d0:	mov	x2, #0x0                   	// #0
    b7d4:	mov	x1, #0x0                   	// #0
    b7d8:	add	x0, sp, #0x28
    b7dc:	bl	4ae0 <__gmp_get_memory_functions@plt>
    b7e0:	mov	x0, x19
    b7e4:	ldr	x1, [sp, #40]
    b7e8:	blr	x1
    b7ec:	ldr	x19, [sp, #16]
    b7f0:	ldp	x29, x30, [sp], #48
    b7f4:	ret

000000000000b7f8 <mpc_realloc_str@@Base>:
    b7f8:	stp	x29, x30, [sp, #-64]!
    b7fc:	mov	x29, sp
    b800:	stp	x19, x20, [sp, #16]
    b804:	str	x21, [sp, #32]
    b808:	mov	x19, x0
    b80c:	mov	x20, x1
    b810:	mov	x21, x2
    b814:	mov	x2, #0x0                   	// #0
    b818:	add	x1, sp, #0x38
    b81c:	mov	x0, #0x0                   	// #0
    b820:	bl	4ae0 <__gmp_get_memory_functions@plt>
    b824:	mov	x2, x21
    b828:	mov	x1, x20
    b82c:	mov	x0, x19
    b830:	ldr	x3, [sp, #56]
    b834:	blr	x3
    b838:	ldp	x19, x20, [sp, #16]
    b83c:	ldr	x21, [sp, #32]
    b840:	ldp	x29, x30, [sp], #64
    b844:	ret

000000000000b848 <mpc_free_str@@Base>:
    b848:	stp	x29, x30, [sp, #-48]!
    b84c:	mov	x29, sp
    b850:	str	x19, [sp, #16]
    b854:	mov	x19, x0
    b858:	add	x2, sp, #0x28
    b85c:	mov	x1, #0x0                   	// #0
    b860:	mov	x0, #0x0                   	// #0
    b864:	bl	4ae0 <__gmp_get_memory_functions@plt>
    b868:	mov	x0, x19
    b86c:	bl	4a00 <strlen@plt>
    b870:	add	x1, x0, #0x1
    b874:	mov	x0, x19
    b878:	ldr	x2, [sp, #40]
    b87c:	blr	x2
    b880:	ldr	x19, [sp, #16]
    b884:	ldp	x29, x30, [sp], #48
    b888:	ret

000000000000b88c <mpc_mul_2si@@Base>:
    b88c:	stp	x29, x30, [sp, #-64]!
    b890:	mov	x29, sp
    b894:	stp	x19, x20, [sp, #16]
    b898:	stp	x21, x22, [sp, #32]
    b89c:	str	x23, [sp, #48]
    b8a0:	mov	x21, x0
    b8a4:	mov	x22, x1
    b8a8:	mov	x23, x2
    b8ac:	mov	w19, w3
    b8b0:	and	w3, w3, #0xf
    b8b4:	bl	4a70 <mpfr_mul_2si@plt>
    b8b8:	mov	w20, w0
    b8bc:	asr	w3, w19, #4
    b8c0:	mov	x2, x23
    b8c4:	add	x1, x22, #0x20
    b8c8:	add	x0, x21, #0x20
    b8cc:	bl	4a70 <mpfr_mul_2si@plt>
    b8d0:	mov	w1, #0x2                   	// #2
    b8d4:	tbnz	w20, #31, b8e0 <mpc_mul_2si@@Base+0x54>
    b8d8:	cmp	w20, #0x0
    b8dc:	cset	w1, ne  // ne = any
    b8e0:	tbnz	w0, #31, b908 <mpc_mul_2si@@Base+0x7c>
    b8e4:	cmp	w0, #0x0
    b8e8:	mov	w2, #0x4                   	// #4
    b8ec:	csel	w0, w0, w2, eq  // eq = none
    b8f0:	orr	w0, w1, w0
    b8f4:	ldp	x19, x20, [sp, #16]
    b8f8:	ldp	x21, x22, [sp, #32]
    b8fc:	ldr	x23, [sp, #48]
    b900:	ldp	x29, x30, [sp], #64
    b904:	ret
    b908:	mov	w0, #0x8                   	// #8
    b90c:	b	b8f0 <mpc_mul_2si@@Base+0x64>

000000000000b910 <mpc_mul_2ui@@Base>:
    b910:	stp	x29, x30, [sp, #-64]!
    b914:	mov	x29, sp
    b918:	stp	x19, x20, [sp, #16]
    b91c:	stp	x21, x22, [sp, #32]
    b920:	str	x23, [sp, #48]
    b924:	mov	x21, x0
    b928:	mov	x22, x1
    b92c:	mov	x23, x2
    b930:	mov	w19, w3
    b934:	and	w3, w3, #0xf
    b938:	bl	4f40 <mpfr_mul_2ui@plt>
    b93c:	mov	w20, w0
    b940:	asr	w3, w19, #4
    b944:	mov	x2, x23
    b948:	add	x1, x22, #0x20
    b94c:	add	x0, x21, #0x20
    b950:	bl	4f40 <mpfr_mul_2ui@plt>
    b954:	mov	w1, #0x2                   	// #2
    b958:	tbnz	w20, #31, b964 <mpc_mul_2ui@@Base+0x54>
    b95c:	cmp	w20, #0x0
    b960:	cset	w1, ne  // ne = any
    b964:	tbnz	w0, #31, b98c <mpc_mul_2ui@@Base+0x7c>
    b968:	cmp	w0, #0x0
    b96c:	mov	w2, #0x4                   	// #4
    b970:	csel	w0, w0, w2, eq  // eq = none
    b974:	orr	w0, w1, w0
    b978:	ldp	x19, x20, [sp, #16]
    b97c:	ldp	x21, x22, [sp, #32]
    b980:	ldr	x23, [sp, #48]
    b984:	ldp	x29, x30, [sp], #64
    b988:	ret
    b98c:	mov	w0, #0x8                   	// #8
    b990:	b	b974 <mpc_mul_2ui@@Base+0x64>

000000000000b994 <mpc_mul_naive@@Base>:
    b994:	stp	x29, x30, [sp, #-160]!
    b998:	mov	x29, sp
    b99c:	stp	x19, x20, [sp, #16]
    b9a0:	stp	x21, x22, [sp, #32]
    b9a4:	stp	x23, x24, [sp, #48]
    b9a8:	stp	x25, x26, [sp, #64]
    b9ac:	str	x27, [sp, #80]
    b9b0:	mov	x21, x0
    b9b4:	mov	x19, x1
    b9b8:	ldr	x1, [x1, #16]
    b9bc:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
    b9c0:	cmp	x1, x0
    b9c4:	b.le	bab8 <mpc_mul_naive@@Base+0x124>
    b9c8:	mov	x20, x2
    b9cc:	mov	w22, w3
    b9d0:	ldr	x1, [x19, #48]
    b9d4:	cmp	x1, x0
    b9d8:	b.le	bab8 <mpc_mul_naive@@Base+0x124>
    b9dc:	ldr	x1, [x2, #16]
    b9e0:	cmp	x1, x0
    b9e4:	b.le	bab8 <mpc_mul_naive@@Base+0x124>
    b9e8:	ldr	x1, [x2, #48]
    b9ec:	cmp	x1, x0
    b9f0:	b.le	bab8 <mpc_mul_naive@@Base+0x124>
    b9f4:	cmp	x19, x21
    b9f8:	cset	w23, eq  // eq = none
    b9fc:	cmp	x2, x21
    ba00:	csinc	w23, w23, wzr, ne  // ne = any
    ba04:	cbnz	w23, bae8 <mpc_mul_naive@@Base+0x154>
    ba08:	ldp	x0, x1, [x21]
    ba0c:	stp	x0, x1, [sp, #96]
    ba10:	ldp	x0, x1, [x21, #16]
    ba14:	stp	x0, x1, [sp, #112]
    ba18:	ldp	x0, x1, [x21, #32]
    ba1c:	stp	x0, x1, [sp, #128]
    ba20:	ldp	x0, x1, [x21, #48]
    ba24:	stp	x0, x1, [sp, #144]
    ba28:	add	x26, x19, #0x20
    ba2c:	add	x25, x20, #0x20
    ba30:	and	w27, w22, #0xf
    ba34:	mov	w5, w27
    ba38:	mov	x4, x25
    ba3c:	mov	x3, x26
    ba40:	mov	x2, x20
    ba44:	mov	x1, x19
    ba48:	add	x0, sp, #0x60
    ba4c:	bl	4a90 <mpfr_fmms@plt>
    ba50:	mov	w24, #0x2                   	// #2
    ba54:	tbz	w0, #31, bafc <mpc_mul_naive@@Base+0x168>
    ba58:	asr	w22, w22, #4
    ba5c:	mov	w5, w22
    ba60:	mov	x4, x20
    ba64:	mov	x3, x26
    ba68:	mov	x2, x25
    ba6c:	mov	x1, x19
    ba70:	add	x0, sp, #0x80
    ba74:	bl	4c90 <mpfr_fmma@plt>
    ba78:	mov	w1, #0x8                   	// #8
    ba7c:	tbz	w0, #31, bb24 <mpc_mul_naive@@Base+0x190>
    ba80:	orr	w24, w24, w1
    ba84:	mov	w2, #0x0                   	// #0
    ba88:	add	x1, sp, #0x60
    ba8c:	mov	x0, x21
    ba90:	bl	5580 <mpc_set@plt>
    ba94:	cbnz	w23, bb54 <mpc_mul_naive@@Base+0x1c0>
    ba98:	mov	w0, w24
    ba9c:	ldp	x19, x20, [sp, #16]
    baa0:	ldp	x21, x22, [sp, #32]
    baa4:	ldp	x23, x24, [sp, #48]
    baa8:	ldp	x25, x26, [sp, #64]
    baac:	ldr	x27, [sp, #80]
    bab0:	ldp	x29, x30, [sp], #160
    bab4:	ret
    bab8:	adrp	x4, 15000 <mpc_ui_ui_sub@@Base+0x1228>
    babc:	add	x4, x4, #0x378
    bac0:	mov	w3, #0x174                 	// #372
    bac4:	adrp	x2, 15000 <mpc_ui_ui_sub@@Base+0x1228>
    bac8:	add	x2, x2, #0x408
    bacc:	adrp	x1, 15000 <mpc_ui_ui_sub@@Base+0x1228>
    bad0:	add	x1, x1, #0x238
    bad4:	adrp	x0, 27000 <mpc_ui_ui_sub@@Base+0x13228>
    bad8:	ldr	x0, [x0, #4008]
    badc:	ldr	x0, [x0]
    bae0:	bl	55a0 <fprintf@plt>
    bae4:	bl	5000 <abort@plt>
    bae8:	ldr	x2, [x21, #32]
    baec:	ldr	x1, [x21]
    baf0:	add	x0, sp, #0x60
    baf4:	bl	53c0 <mpc_init3@plt>
    baf8:	b	ba28 <mpc_mul_naive@@Base+0x94>
    bafc:	mov	w5, w27
    bb00:	mov	x4, x25
    bb04:	mov	x3, x26
    bb08:	mov	x2, x20
    bb0c:	mov	x1, x19
    bb10:	add	x0, sp, #0x60
    bb14:	bl	4a90 <mpfr_fmms@plt>
    bb18:	cmp	w0, #0x0
    bb1c:	cset	w24, ne  // ne = any
    bb20:	b	ba58 <mpc_mul_naive@@Base+0xc4>
    bb24:	mov	w5, w22
    bb28:	mov	x4, x20
    bb2c:	mov	x3, x26
    bb30:	mov	x2, x25
    bb34:	mov	x1, x19
    bb38:	add	x0, sp, #0x80
    bb3c:	bl	4c90 <mpfr_fmma@plt>
    bb40:	mov	w1, w0
    bb44:	cmp	w0, #0x0
    bb48:	mov	w0, #0x4                   	// #4
    bb4c:	csel	w1, w1, w0, eq  // eq = none
    bb50:	b	ba80 <mpc_mul_naive@@Base+0xec>
    bb54:	add	x0, sp, #0x60
    bb58:	bl	4a10 <mpc_clear@plt>
    bb5c:	b	ba98 <mpc_mul_naive@@Base+0x104>
    bb60:	stp	x29, x30, [sp, #-144]!
    bb64:	mov	x29, sp
    bb68:	stp	x19, x20, [sp, #16]
    bb6c:	stp	x21, x22, [sp, #32]
    bb70:	stp	x23, x24, [sp, #48]
    bb74:	stp	x25, x26, [sp, #64]
    bb78:	mov	x19, x0
    bb7c:	mov	x26, x1
    bb80:	mov	x20, x2
    bb84:	mov	w24, w3
    bb88:	cmp	x0, x1
    bb8c:	cset	w21, eq  // eq = none
    bb90:	cmp	x0, x2
    bb94:	csinc	w21, w21, wzr, ne  // ne = any
    bb98:	cbnz	w21, bbd4 <mpc_mul_naive@@Base+0x240>
    bb9c:	ldp	x0, x1, [x0]
    bba0:	stp	x0, x1, [sp, #80]
    bba4:	ldp	x0, x1, [x19, #16]
    bba8:	stp	x0, x1, [sp, #96]
    bbac:	ldp	x0, x1, [x19, #32]
    bbb0:	stp	x0, x1, [sp, #112]
    bbb4:	ldp	x0, x1, [x19, #48]
    bbb8:	stp	x0, x1, [sp, #128]
    bbbc:	ldr	w0, [x20, #8]
    bbc0:	tbnz	w0, #31, bc40 <mpc_mul_naive@@Base+0x2ac>
    bbc4:	ldr	w0, [x26, #40]
    bbc8:	mov	w22, #0x0                   	// #0
    bbcc:	tbz	w0, #31, bc5c <mpc_mul_naive@@Base+0x2c8>
    bbd0:	b	bc4c <mpc_mul_naive@@Base+0x2b8>
    bbd4:	ldr	x2, [x0, #32]
    bbd8:	ldr	x1, [x0]
    bbdc:	add	x0, sp, #0x50
    bbe0:	bl	53c0 <mpc_init3@plt>
    bbe4:	b	bbbc <mpc_mul_naive@@Base+0x228>
    bbe8:	mov	w3, #0x3                   	// #3
    bbec:	b	bc7c <mpc_mul_naive@@Base+0x2e8>
    bbf0:	add	x0, x19, #0x20
    bbf4:	cmp	w22, #0x0
    bbf8:	mov	w3, #0x1                   	// #1
    bbfc:	ccmp	w24, #0x3, #0x4, eq  // eq = none
    bc00:	cneg	w3, w3, eq  // eq = none
    bc04:	mov	w2, #0x0                   	// #0
    bc08:	mov	x1, x0
    bc0c:	bl	51d0 <mpfr_set4@plt>
    bc10:	b	bcdc <mpc_mul_naive@@Base+0x348>
    bc14:	add	x0, sp, #0x50
    bc18:	bl	4a10 <mpc_clear@plt>
    bc1c:	b	bce0 <mpc_mul_naive@@Base+0x34c>
    bc20:	cset	w1, ne  // ne = any
    bc24:	b	bcec <mpc_mul_naive@@Base+0x358>
    bc28:	mov	w20, #0x8                   	// #8
    bc2c:	b	bcfc <mpc_mul_naive@@Base+0x368>
    bc30:	ldr	w22, [x26, #8]
    bc34:	mvn	w22, w22
    bc38:	lsr	w22, w22, #31
    bc3c:	b	bc5c <mpc_mul_naive@@Base+0x2c8>
    bc40:	ldr	w0, [x26, #40]
    bc44:	mov	w22, #0x0                   	// #0
    bc48:	tbnz	w0, #31, bc5c <mpc_mul_naive@@Base+0x2c8>
    bc4c:	ldr	w0, [x20, #40]
    bc50:	tbnz	w0, #31, bc30 <mpc_mul_naive@@Base+0x29c>
    bc54:	ldr	w22, [x26, #8]
    bc58:	lsr	w22, w22, #31
    bc5c:	add	x1, x26, #0x20
    bc60:	add	x20, x20, #0x20
    bc64:	and	w3, w24, #0xf
    bc68:	cmp	w3, #0x2
    bc6c:	b.eq	bbe8 <mpc_mul_naive@@Base+0x254>  // b.none
    bc70:	cmp	w3, #0x3
    bc74:	mov	w0, #0x2                   	// #2
    bc78:	csel	w3, w3, w0, ne  // ne = any
    bc7c:	add	x25, sp, #0x50
    bc80:	mov	x2, x20
    bc84:	mov	x0, x25
    bc88:	bl	4b70 <mpfr_mul@plt>
    bc8c:	mov	w23, w0
    bc90:	mov	w2, #0x0                   	// #0
    bc94:	mov	x1, x25
    bc98:	mov	x0, x25
    bc9c:	bl	4b80 <mpfr_neg@plt>
    bca0:	asr	w24, w24, #4
    bca4:	mov	w3, w24
    bca8:	mov	x2, x20
    bcac:	mov	x1, x26
    bcb0:	add	x0, x25, #0x20
    bcb4:	bl	4b70 <mpfr_mul@plt>
    bcb8:	mov	w20, w0
    bcbc:	mov	w2, #0x0                   	// #0
    bcc0:	mov	x1, x25
    bcc4:	mov	x0, x19
    bcc8:	bl	5580 <mpc_set@plt>
    bccc:	ldr	x2, [x19, #48]
    bcd0:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
    bcd4:	cmp	x2, x1
    bcd8:	b.eq	bbf0 <mpc_mul_naive@@Base+0x25c>  // b.none
    bcdc:	cbnz	w21, bc14 <mpc_mul_naive@@Base+0x280>
    bce0:	mov	w1, #0x2                   	// #2
    bce4:	cmp	w23, #0x0
    bce8:	b.le	bc20 <mpc_mul_naive@@Base+0x28c>
    bcec:	tbnz	w20, #31, bc28 <mpc_mul_naive@@Base+0x294>
    bcf0:	cmp	w20, #0x0
    bcf4:	mov	w0, #0x4                   	// #4
    bcf8:	csel	w20, w20, w0, eq  // eq = none
    bcfc:	orr	w0, w1, w20
    bd00:	ldp	x19, x20, [sp, #16]
    bd04:	ldp	x21, x22, [sp, #32]
    bd08:	ldp	x23, x24, [sp, #48]
    bd0c:	ldp	x25, x26, [sp, #64]
    bd10:	ldp	x29, x30, [sp], #144
    bd14:	ret

000000000000bd18 <mpc_mul_karatsuba@@Base>:
    bd18:	stp	x29, x30, [sp, #-416]!
    bd1c:	mov	x29, sp
    bd20:	stp	x19, x20, [sp, #16]
    bd24:	stp	x21, x22, [sp, #32]
    bd28:	stp	x23, x24, [sp, #48]
    bd2c:	stp	x25, x26, [sp, #64]
    bd30:	stp	x27, x28, [sp, #80]
    bd34:	mov	x26, x0
    bd38:	str	x1, [sp, #192]
    bd3c:	str	x2, [sp, #176]
    bd40:	str	w3, [sp, #200]
    bd44:	cmp	x0, x1
    bd48:	cset	w0, eq  // eq = none
    bd4c:	cmp	x26, x2
    bd50:	csinc	w0, w0, wzr, ne  // ne = any
    bd54:	str	w0, [sp, #204]
    bd58:	cbnz	w0, bed4 <mpc_mul_karatsuba@@Base+0x1bc>
    bd5c:	ldp	x0, x1, [x26]
    bd60:	stp	x0, x1, [sp, #224]
    bd64:	ldp	x0, x1, [x26, #16]
    bd68:	stp	x0, x1, [sp, #240]
    bd6c:	ldp	x0, x1, [x26, #32]
    bd70:	stp	x0, x1, [sp, #256]
    bd74:	ldp	x0, x1, [x26, #48]
    bd78:	stp	x0, x1, [sp, #272]
    bd7c:	ldr	x0, [sp, #192]
    bd80:	str	x0, [sp, #112]
    bd84:	add	x27, x0, #0x20
    bd88:	ldr	x1, [sp, #176]
    bd8c:	str	x1, [sp, #104]
    bd90:	add	x28, x1, #0x20
    bd94:	mov	x1, x27
    bd98:	bl	53b0 <mpfr_cmpabs@plt>
    bd9c:	tbnz	w0, #31, c668 <mpc_mul_karatsuba@@Base+0x950>
    bda0:	mov	x1, x28
    bda4:	ldr	x0, [sp, #176]
    bda8:	bl	53b0 <mpfr_cmpabs@plt>
    bdac:	tbnz	w0, #31, bee8 <mpc_mul_karatsuba@@Base+0x1d0>
    bdb0:	ldr	x0, [x26]
    bdb4:	str	x0, [sp, #136]
    bdb8:	ldr	w0, [sp, #200]
    bdbc:	and	w0, w0, #0xf
    bdc0:	str	w0, [sp, #132]
    bdc4:	mov	x0, x27
    bdc8:	ldr	x27, [sp, #192]
    bdcc:	str	x0, [sp, #112]
    bdd0:	mov	w0, #0x1                   	// #1
    bdd4:	str	w0, [sp, #128]
    bdd8:	mov	w23, w0
    bddc:	str	wzr, [sp, #220]
    bde0:	ldr	x20, [x26, #32]
    bde4:	ldr	x21, [x26]
    bde8:	ldr	x1, [x27]
    bdec:	ldr	x0, [x28]
    bdf0:	add	x0, x1, x0
    bdf4:	str	x0, [sp, #208]
    bdf8:	add	x19, sp, #0x160
    bdfc:	mov	x1, x0
    be00:	mov	x0, x19
    be04:	bl	5440 <mpfr_init2@plt>
    be08:	ldr	x0, [sp, #112]
    be0c:	ldr	x1, [x0]
    be10:	ldr	x0, [sp, #104]
    be14:	ldr	x0, [x0]
    be18:	add	x0, x1, x0
    be1c:	str	x0, [sp, #168]
    be20:	mov	x1, x0
    be24:	add	x0, sp, #0x140
    be28:	bl	5440 <mpfr_init2@plt>
    be2c:	mov	x1, #0x2                   	// #2
    be30:	add	x0, sp, #0x180
    be34:	bl	5440 <mpfr_init2@plt>
    be38:	mov	x1, #0x2                   	// #2
    be3c:	add	x0, sp, #0x120
    be40:	bl	5440 <mpfr_init2@plt>
    be44:	mov	w3, #0x0                   	// #0
    be48:	mov	x2, x28
    be4c:	mov	x1, x27
    be50:	mov	x0, x19
    be54:	bl	4b70 <mpfr_mul@plt>
    be58:	cbnz	w0, c620 <mpc_mul_karatsuba@@Base+0x908>
    be5c:	cmn	w23, #0x1
    be60:	b.eq	bf54 <mpc_mul_karatsuba@@Base+0x23c>  // b.none
    be64:	mov	w3, #0x0                   	// #0
    be68:	ldr	x2, [sp, #104]
    be6c:	ldr	x1, [sp, #112]
    be70:	add	x0, sp, #0x140
    be74:	bl	4b70 <mpfr_mul@plt>
    be78:	str	w0, [sp, #216]
    be7c:	cbnz	w0, c620 <mpc_mul_karatsuba@@Base+0x908>
    be80:	ldr	w0, [sp, #128]
    be84:	cmn	w0, #0x1
    be88:	b.eq	bf68 <mpc_mul_karatsuba@@Base+0x250>  // b.none
    be8c:	add	x1, sp, #0x140
    be90:	add	x0, sp, #0x160
    be94:	bl	53b0 <mpfr_cmpabs@plt>
    be98:	mov	w19, w0
    be9c:	cmp	w0, #0x0
    bea0:	b.le	c058 <mpc_mul_karatsuba@@Base+0x340>
    bea4:	ldr	x0, [sp, #368]
    bea8:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
    beac:	cmp	x0, x1
    beb0:	b.ge	bf7c <mpc_mul_karatsuba@@Base+0x264>  // b.tcont
    beb4:	ldr	w19, [sp, #216]
    beb8:	mov	x1, #0x2                   	// #2
    bebc:	movk	x1, #0x8000, lsl #48
    bec0:	cmp	x0, x1
    bec4:	b.ne	bf84 <mpc_mul_karatsuba@@Base+0x26c>  // b.any
    bec8:	bl	4b00 <mpfr_set_erangeflag@plt>
    becc:	ldr	w19, [sp, #216]
    bed0:	b	bf84 <mpc_mul_karatsuba@@Base+0x26c>
    bed4:	ldr	x2, [x26, #32]
    bed8:	ldr	x1, [x26]
    bedc:	add	x0, sp, #0xe0
    bee0:	bl	53c0 <mpc_init3@plt>
    bee4:	b	bd7c <mpc_mul_karatsuba@@Base+0x64>
    bee8:	str	x28, [sp, #104]
    beec:	ldr	x28, [sp, #176]
    bef0:	mov	x0, x27
    bef4:	ldr	x27, [sp, #192]
    bef8:	str	x0, [sp, #112]
    befc:	mov	w0, #0xffffffff            	// #-1
    bf00:	str	w0, [sp, #128]
    bf04:	mov	w0, #0x1                   	// #1
    bf08:	mov	w23, w0
    bf0c:	ldr	x0, [x26, #32]
    bf10:	str	x0, [sp, #136]
    bf14:	ldr	w0, [sp, #200]
    bf18:	asr	w0, w0, #4
    bf1c:	str	w0, [sp, #132]
    bf20:	mov	w0, #0x1                   	// #1
    bf24:	str	w0, [sp, #220]
    bf28:	ldr	w1, [sp, #132]
    bf2c:	cmp	w1, #0x2
    bf30:	b.eq	bf48 <mpc_mul_karatsuba@@Base+0x230>  // b.none
    bf34:	cmp	w1, #0x3
    bf38:	mov	w0, #0x2                   	// #2
    bf3c:	csel	w0, w1, w0, ne  // ne = any
    bf40:	str	w0, [sp, #132]
    bf44:	b	bde0 <mpc_mul_karatsuba@@Base+0xc8>
    bf48:	mov	w0, #0x3                   	// #3
    bf4c:	str	w0, [sp, #132]
    bf50:	b	bde0 <mpc_mul_karatsuba@@Base+0xc8>
    bf54:	add	x0, sp, #0x160
    bf58:	mov	w2, #0x0                   	// #0
    bf5c:	mov	x1, x0
    bf60:	bl	4b80 <mpfr_neg@plt>
    bf64:	b	be64 <mpc_mul_karatsuba@@Base+0x14c>
    bf68:	add	x0, sp, #0x140
    bf6c:	mov	w2, #0x0                   	// #0
    bf70:	mov	x1, x0
    bf74:	bl	4b80 <mpfr_neg@plt>
    bf78:	b	be8c <mpc_mul_karatsuba@@Base+0x174>
    bf7c:	ldr	w19, [sp, #360]
    bf80:	lsl	w19, w19, #1
    bf84:	ldr	x0, [sp, #336]
    bf88:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
    bf8c:	cmp	x0, x1
    bf90:	b.ge	bfb4 <mpc_mul_karatsuba@@Base+0x29c>  // b.tcont
    bf94:	ldr	w22, [sp, #216]
    bf98:	mov	x1, #0x2                   	// #2
    bf9c:	movk	x1, #0x8000, lsl #48
    bfa0:	cmp	x0, x1
    bfa4:	b.ne	bfb8 <mpc_mul_karatsuba@@Base+0x2a0>  // b.any
    bfa8:	bl	4b00 <mpfr_set_erangeflag@plt>
    bfac:	ldr	w22, [sp, #216]
    bfb0:	b	bfb8 <mpc_mul_karatsuba@@Base+0x2a0>
    bfb4:	ldr	w22, [sp, #328]
    bfb8:	sub	w22, w19, w22
    bfbc:	ldr	x0, [x27, #16]
    bfc0:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
    bfc4:	cmp	x0, x1
    bfc8:	b.ge	c13c <mpc_mul_karatsuba@@Base+0x424>  // b.tcont
    bfcc:	mov	x1, #0x2                   	// #2
    bfd0:	movk	x1, #0x8000, lsl #48
    bfd4:	cmp	x0, x1
    bfd8:	b.eq	c134 <mpc_mul_karatsuba@@Base+0x41c>  // b.none
    bfdc:	ldr	x0, [sp, #104]
    bfe0:	ldr	x0, [x0, #16]
    bfe4:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
    bfe8:	cmp	x0, x1
    bfec:	b.ge	c698 <mpc_mul_karatsuba@@Base+0x980>  // b.tcont
    bff0:	mov	x1, #0x2                   	// #2
    bff4:	movk	x1, #0x8000, lsl #48
    bff8:	cmp	x0, x1
    bffc:	b.eq	c1a8 <mpc_mul_karatsuba@@Base+0x490>  // b.none
    c000:	ldr	w19, [sp, #216]
    c004:	cmp	x20, x21
    c008:	csel	x20, x20, x21, ge  // ge = tcont
    c00c:	cmp	w19, #0x0
    c010:	mov	w1, #0x2                   	// #2
    c014:	mov	w0, #0x3                   	// #3
    c018:	csel	w0, w1, w0, gt
    c01c:	str	w0, [sp, #124]
    c020:	ldr	w25, [sp, #216]
    c024:	add	x19, sp, #0x180
    c028:	add	x22, sp, #0x120
    c02c:	add	x0, sp, #0x140
    c030:	str	x0, [sp, #144]
    c034:	add	x0, sp, #0x160
    c038:	str	x0, [sp, #152]
    c03c:	str	x27, [sp, #160]
    c040:	ldr	x27, [sp, #168]
    c044:	str	x28, [sp, #168]
    c048:	mov	w28, w23
    c04c:	str	x26, [sp, #184]
    c050:	ldr	x26, [sp, #208]
    c054:	b	c320 <mpc_mul_karatsuba@@Base+0x608>
    c058:	cbnz	w0, c0c0 <mpc_mul_karatsuba@@Base+0x3a8>
    c05c:	ldr	x0, [sp, #368]
    c060:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
    c064:	cmp	x0, x1
    c068:	b.ge	c088 <mpc_mul_karatsuba@@Base+0x370>  // b.tcont
    c06c:	mov	w22, w19
    c070:	mov	x1, #0x2                   	// #2
    c074:	movk	x1, #0x8000, lsl #48
    c078:	cmp	x0, x1
    c07c:	b.ne	c08c <mpc_mul_karatsuba@@Base+0x374>  // b.any
    c080:	bl	4b00 <mpfr_set_erangeflag@plt>
    c084:	b	c08c <mpc_mul_karatsuba@@Base+0x374>
    c088:	ldr	w22, [sp, #360]
    c08c:	ldr	x0, [sp, #336]
    c090:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
    c094:	cmp	x0, x1
    c098:	b.ge	c0b4 <mpc_mul_karatsuba@@Base+0x39c>  // b.tcont
    c09c:	mov	x1, #0x2                   	// #2
    c0a0:	movk	x1, #0x8000, lsl #48
    c0a4:	cmp	x0, x1
    c0a8:	b.ne	c0b8 <mpc_mul_karatsuba@@Base+0x3a0>  // b.any
    c0ac:	bl	4b00 <mpfr_set_erangeflag@plt>
    c0b0:	b	c0b8 <mpc_mul_karatsuba@@Base+0x3a0>
    c0b4:	ldr	w19, [sp, #328]
    c0b8:	sub	w22, w22, w19
    c0bc:	b	bfbc <mpc_mul_karatsuba@@Base+0x2a4>
    c0c0:	ldr	x0, [sp, #368]
    c0c4:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
    c0c8:	cmp	x0, x1
    c0cc:	b.ge	c0f0 <mpc_mul_karatsuba@@Base+0x3d8>  // b.tcont
    c0d0:	ldr	w19, [sp, #216]
    c0d4:	mov	x1, #0x2                   	// #2
    c0d8:	movk	x1, #0x8000, lsl #48
    c0dc:	cmp	x0, x1
    c0e0:	b.ne	c0f4 <mpc_mul_karatsuba@@Base+0x3dc>  // b.any
    c0e4:	bl	4b00 <mpfr_set_erangeflag@plt>
    c0e8:	ldr	w19, [sp, #216]
    c0ec:	b	c0f4 <mpc_mul_karatsuba@@Base+0x3dc>
    c0f0:	ldr	w19, [sp, #360]
    c0f4:	ldr	x0, [sp, #336]
    c0f8:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
    c0fc:	cmp	x0, x1
    c100:	b.ge	c124 <mpc_mul_karatsuba@@Base+0x40c>  // b.tcont
    c104:	ldr	w22, [sp, #216]
    c108:	mov	x1, #0x2                   	// #2
    c10c:	movk	x1, #0x8000, lsl #48
    c110:	cmp	x0, x1
    c114:	b.ne	c12c <mpc_mul_karatsuba@@Base+0x414>  // b.any
    c118:	bl	4b00 <mpfr_set_erangeflag@plt>
    c11c:	ldr	w22, [sp, #216]
    c120:	b	c12c <mpc_mul_karatsuba@@Base+0x414>
    c124:	ldr	w22, [sp, #328]
    c128:	lsl	w22, w22, #1
    c12c:	sub	w22, w19, w22
    c130:	b	bfbc <mpc_mul_karatsuba@@Base+0x2a4>
    c134:	bl	4b00 <mpfr_set_erangeflag@plt>
    c138:	b	bfdc <mpc_mul_karatsuba@@Base+0x2c4>
    c13c:	ldr	w1, [x27, #8]
    c140:	ldr	x0, [sp, #104]
    c144:	ldr	x0, [x0, #16]
    c148:	mov	x2, #0x8000000000000003    	// #-9223372036854775805
    c14c:	cmp	x0, x2
    c150:	b.lt	bff0 <mpc_mul_karatsuba@@Base+0x2d8>  // b.tstop
    c154:	mul	w19, w1, w23
    c158:	ldr	w24, [sp, #128]
    c15c:	mul	w19, w19, w24
    c160:	ldr	x25, [sp, #104]
    c164:	ldr	w0, [x25, #8]
    c168:	mul	w19, w19, w0
    c16c:	mul	w22, w22, w19
    c170:	tbz	w22, #31, c004 <mpc_mul_karatsuba@@Base+0x2ec>
    c174:	add	x1, sp, #0x140
    c178:	add	x0, sp, #0x160
    c17c:	bl	5090 <mpfr_swap@plt>
    c180:	mov	w0, w23
    c184:	mov	w23, w24
    c188:	str	w0, [sp, #128]
    c18c:	ldr	x0, [sp, #112]
    c190:	str	x28, [sp, #112]
    c194:	mov	x28, x0
    c198:	mov	x0, x27
    c19c:	mov	x27, x25
    c1a0:	str	x0, [sp, #104]
    c1a4:	b	c004 <mpc_mul_karatsuba@@Base+0x2ec>
    c1a8:	bl	4b00 <mpfr_set_erangeflag@plt>
    c1ac:	b	c000 <mpc_mul_karatsuba@@Base+0x2e8>
    c1b0:	mov	w3, #0x4                   	// #4
    c1b4:	ldr	x2, [sp, #160]
    c1b8:	ldr	x1, [sp, #112]
    c1bc:	mov	x0, x19
    c1c0:	bl	4a60 <mpfr_sub@plt>
    c1c4:	mov	w21, w0
    c1c8:	b	c36c <mpc_mul_karatsuba@@Base+0x654>
    c1cc:	mov	w3, #0x4                   	// #4
    c1d0:	ldr	x2, [sp, #168]
    c1d4:	ldr	x1, [sp, #104]
    c1d8:	mov	x0, x22
    c1dc:	bl	4e60 <mpfr_add@plt>
    c1e0:	orr	w21, w21, w0
    c1e4:	mov	w2, #0x0                   	// #0
    c1e8:	mov	x1, x22
    c1ec:	mov	x0, x22
    c1f0:	bl	4b80 <mpfr_neg@plt>
    c1f4:	b	c390 <mpc_mul_karatsuba@@Base+0x678>
    c1f8:	lsl	x24, x20, #1
    c1fc:	mov	w2, #0x0                   	// #0
    c200:	mov	x1, x24
    c204:	mov	x0, x19
    c208:	bl	5370 <mpfr_prec_round@plt>
    c20c:	mov	w3, #0x4                   	// #4
    c210:	mov	x2, x22
    c214:	mov	x1, x19
    c218:	mov	x0, x19
    c21c:	bl	4b70 <mpfr_mul@plt>
    c220:	mov	w21, w0
    c224:	cbnz	w0, c3b0 <mpc_mul_karatsuba@@Base+0x698>
    c228:	ldr	x1, [sp, #368]
    c22c:	ldr	x0, [sp, #336]
    c230:	subs	x1, x1, x0
    c234:	cneg	x1, x1, mi  // mi = first
    c238:	cmp	x26, x27
    c23c:	csel	x0, x26, x27, ge  // ge = tcont
    c240:	add	x1, x1, x0
    c244:	add	x1, x1, #0x1
    c248:	cmp	x24, x1
    c24c:	csel	x1, x24, x1, le
    c250:	cmp	x1, x20
    c254:	b.le	c3b0 <mpc_mul_karatsuba@@Base+0x698>
    c258:	mov	w2, #0x0                   	// #0
    c25c:	mov	x0, x22
    c260:	bl	5370 <mpfr_prec_round@plt>
    c264:	b	c3b0 <mpc_mul_karatsuba@@Base+0x698>
    c268:	bl	4b00 <mpfr_set_erangeflag@plt>
    c26c:	b	c3e8 <mpc_mul_karatsuba@@Base+0x6d0>
    c270:	ldr	w0, [sp, #392]
    c274:	ldr	w23, [sp, #124]
    c278:	cbnz	w0, c290 <mpc_mul_karatsuba@@Base+0x578>
    c27c:	b	c3e8 <mpc_mul_karatsuba@@Base+0x6d0>
    c280:	ldr	w0, [sp, #296]
    c284:	cmp	w0, #0x0
    c288:	cset	w23, le
    c28c:	add	w23, w23, #0x2
    c290:	mov	w3, w23
    c294:	mov	x2, x22
    c298:	mov	x1, x19
    c29c:	mov	x0, x19
    c2a0:	bl	4e60 <mpfr_add@plt>
    c2a4:	orr	w21, w21, w0
    c2a8:	cbnz	w21, c2ec <mpc_mul_karatsuba@@Base+0x5d4>
    c2ac:	ldr	x26, [sp, #184]
    c2b0:	mov	w1, #0x1                   	// #1
    c2b4:	cbz	w1, c620 <mpc_mul_karatsuba@@Base+0x908>
    c2b8:	cbz	w21, c420 <mpc_mul_karatsuba@@Base+0x708>
    c2bc:	ldr	x0, [sp, #400]
    c2c0:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
    c2c4:	cmp	x0, x1
    c2c8:	b.ge	c41c <mpc_mul_karatsuba@@Base+0x704>  // b.tcont
    c2cc:	ldr	w21, [sp, #216]
    c2d0:	mov	x1, #0x2                   	// #2
    c2d4:	movk	x1, #0x8000, lsl #48
    c2d8:	cmp	x0, x1
    c2dc:	b.ne	c420 <mpc_mul_karatsuba@@Base+0x708>  // b.any
    c2e0:	bl	4b00 <mpfr_set_erangeflag@plt>
    c2e4:	ldr	w21, [sp, #216]
    c2e8:	b	c420 <mpc_mul_karatsuba@@Base+0x708>
    c2ec:	ldr	w0, [sp, #132]
    c2f0:	cmp	w0, #0x0
    c2f4:	ldr	x0, [sp, #136]
    c2f8:	cinc	x4, x0, eq  // eq = none
    c2fc:	mov	w3, #0x1                   	// #1
    c300:	mov	w2, w23
    c304:	sub	x1, x24, #0x3
    c308:	mov	x0, x19
    c30c:	bl	5450 <mpfr_can_round@plt>
    c310:	cmp	w0, #0x0
    c314:	cset	w1, ne  // ne = any
    c318:	ccmp	w25, #0x1, #0x0, eq  // eq = none
    c31c:	b.gt	c414 <mpc_mul_karatsuba@@Base+0x6fc>
    c320:	add	w25, w25, #0x1
    c324:	mov	x0, x20
    c328:	bl	4d20 <mpc_ceil_log2@plt>
    c32c:	add	x0, x0, #0x3
    c330:	add	x20, x20, x0
    c334:	mov	x1, x20
    c338:	mov	x0, x19
    c33c:	bl	4c80 <mpfr_set_prec@plt>
    c340:	mov	x1, x20
    c344:	mov	x0, x22
    c348:	bl	4c80 <mpfr_set_prec@plt>
    c34c:	cmn	w28, #0x1
    c350:	b.eq	c1b0 <mpc_mul_karatsuba@@Base+0x498>  // b.none
    c354:	mov	w3, #0x4                   	// #4
    c358:	ldr	x2, [sp, #160]
    c35c:	ldr	x1, [sp, #112]
    c360:	mov	x0, x19
    c364:	bl	4e60 <mpfr_add@plt>
    c368:	mov	w21, w0
    c36c:	ldr	w0, [sp, #128]
    c370:	cmn	w0, #0x1
    c374:	b.eq	c1cc <mpc_mul_karatsuba@@Base+0x4b4>  // b.none
    c378:	mov	w3, #0x4                   	// #4
    c37c:	ldr	x2, [sp, #168]
    c380:	ldr	x1, [sp, #104]
    c384:	mov	x0, x22
    c388:	bl	4a60 <mpfr_sub@plt>
    c38c:	orr	w21, w21, w0
    c390:	cbz	w21, c1f8 <mpc_mul_karatsuba@@Base+0x4e0>
    c394:	mov	w3, #0x4                   	// #4
    c398:	mov	x2, x22
    c39c:	mov	x1, x19
    c3a0:	mov	x0, x19
    c3a4:	bl	4b70 <mpfr_mul@plt>
    c3a8:	orr	w21, w0, w21
    c3ac:	mov	x24, x20
    c3b0:	ldr	w3, [sp, #124]
    c3b4:	ldr	x2, [sp, #144]
    c3b8:	ldr	x1, [sp, #152]
    c3bc:	mov	x0, x22
    c3c0:	bl	4a60 <mpfr_sub@plt>
    c3c4:	orr	w21, w0, w21
    c3c8:	ldr	x0, [sp, #400]
    c3cc:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
    c3d0:	cmp	x0, x1
    c3d4:	b.ge	c270 <mpc_mul_karatsuba@@Base+0x558>  // b.tcont
    c3d8:	mov	x1, #0x2                   	// #2
    c3dc:	movk	x1, #0x8000, lsl #48
    c3e0:	cmp	x0, x1
    c3e4:	b.eq	c268 <mpc_mul_karatsuba@@Base+0x550>  // b.none
    c3e8:	ldr	x0, [sp, #304]
    c3ec:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
    c3f0:	cmp	x0, x1
    c3f4:	b.ge	c280 <mpc_mul_karatsuba@@Base+0x568>  // b.tcont
    c3f8:	mov	w23, #0x3                   	// #3
    c3fc:	mov	x1, #0x2                   	// #2
    c400:	movk	x1, #0x8000, lsl #48
    c404:	cmp	x0, x1
    c408:	b.ne	c290 <mpc_mul_karatsuba@@Base+0x578>  // b.any
    c40c:	bl	4b00 <mpfr_set_erangeflag@plt>
    c410:	b	c290 <mpc_mul_karatsuba@@Base+0x578>
    c414:	ldr	x26, [sp, #184]
    c418:	b	c2b4 <mpc_mul_karatsuba@@Base+0x59c>
    c41c:	ldr	w21, [sp, #392]
    c420:	ldr	w0, [sp, #220]
    c424:	cbz	w0, c510 <mpc_mul_karatsuba@@Base+0x7f8>
    c428:	ldr	w0, [sp, #220]
    c42c:	cmp	w0, #0x1
    c430:	b.eq	c570 <mpc_mul_karatsuba@@Base+0x858>  // b.none
    c434:	ldr	w19, [sp, #200]
    c438:	and	w2, w19, #0xf
    c43c:	add	x1, sp, #0x180
    c440:	add	x0, sp, #0xe0
    c444:	bl	4b80 <mpfr_neg@plt>
    c448:	mov	w20, w0
    c44c:	cbnz	w0, c5cc <mpc_mul_karatsuba@@Base+0x8b4>
    c450:	neg	w20, w21
    c454:	asr	w22, w19, #4
    c458:	mov	w3, #0x3                   	// #3
    c45c:	cmp	w22, #0x2
    c460:	b.eq	c470 <mpc_mul_karatsuba@@Base+0x758>  // b.none
    c464:	cmp	w22, w3
    c468:	mov	w3, #0x2                   	// #2
    c46c:	csel	w3, w22, w3, ne  // ne = any
    c470:	add	x21, sp, #0x100
    c474:	add	x2, sp, #0x140
    c478:	add	x1, sp, #0x160
    c47c:	mov	x0, x21
    c480:	bl	4e60 <mpfr_add@plt>
    c484:	neg	w19, w0
    c488:	mov	w2, w22
    c48c:	mov	x1, x21
    c490:	mov	x0, x21
    c494:	bl	4b80 <mpfr_neg@plt>
    c498:	mov	w2, #0x0                   	// #0
    c49c:	add	x1, sp, #0xe0
    c4a0:	mov	x0, x26
    c4a4:	bl	5580 <mpc_set@plt>
    c4a8:	add	x0, sp, #0x180
    c4ac:	bl	4d60 <mpfr_clear@plt>
    c4b0:	add	x0, sp, #0x160
    c4b4:	bl	4d60 <mpfr_clear@plt>
    c4b8:	add	x0, sp, #0x140
    c4bc:	bl	4d60 <mpfr_clear@plt>
    c4c0:	add	x0, sp, #0x120
    c4c4:	bl	4d60 <mpfr_clear@plt>
    c4c8:	ldr	w0, [sp, #204]
    c4cc:	cbnz	w0, c68c <mpc_mul_karatsuba@@Base+0x974>
    c4d0:	mov	w0, #0x2                   	// #2
    c4d4:	tbnz	w20, #31, c4e0 <mpc_mul_karatsuba@@Base+0x7c8>
    c4d8:	cmp	w20, #0x0
    c4dc:	cset	w0, ne  // ne = any
    c4e0:	tbnz	w19, #31, c618 <mpc_mul_karatsuba@@Base+0x900>
    c4e4:	cmp	w19, #0x0
    c4e8:	mov	w1, #0x4                   	// #4
    c4ec:	csel	w19, w19, w1, eq  // eq = none
    c4f0:	orr	w0, w0, w19
    c4f4:	ldp	x19, x20, [sp, #16]
    c4f8:	ldp	x21, x22, [sp, #32]
    c4fc:	ldp	x23, x24, [sp, #48]
    c500:	ldp	x25, x26, [sp, #64]
    c504:	ldp	x27, x28, [sp, #80]
    c508:	ldp	x29, x30, [sp], #416
    c50c:	ret
    c510:	ldr	w3, [sp, #392]
    c514:	ldr	w19, [sp, #200]
    c518:	and	w2, w19, #0xf
    c51c:	add	x1, sp, #0x180
    c520:	add	x0, sp, #0xe0
    c524:	bl	51d0 <mpfr_set4@plt>
    c528:	mov	w20, w0
    c52c:	cbnz	w0, c550 <mpc_mul_karatsuba@@Base+0x838>
    c530:	asr	w3, w19, #4
    c534:	add	x2, sp, #0x140
    c538:	add	x1, sp, #0x160
    c53c:	add	x0, sp, #0x100
    c540:	bl	4e60 <mpfr_add@plt>
    c544:	mov	w19, w0
    c548:	mov	w20, w21
    c54c:	b	c498 <mpc_mul_karatsuba@@Base+0x780>
    c550:	ldr	w0, [sp, #200]
    c554:	asr	w3, w0, #4
    c558:	add	x2, sp, #0x140
    c55c:	add	x1, sp, #0x160
    c560:	add	x0, sp, #0x100
    c564:	bl	4e60 <mpfr_add@plt>
    c568:	mov	w19, w0
    c56c:	b	c498 <mpc_mul_karatsuba@@Base+0x780>
    c570:	ldr	w20, [sp, #200]
    c574:	asr	w2, w20, #4
    c578:	add	x1, sp, #0x180
    c57c:	add	x0, sp, #0x100
    c580:	bl	4b80 <mpfr_neg@plt>
    c584:	mov	w19, w0
    c588:	cbnz	w0, c5ac <mpc_mul_karatsuba@@Base+0x894>
    c58c:	neg	w19, w21
    c590:	and	w3, w20, #0xf
    c594:	add	x2, sp, #0x140
    c598:	add	x1, sp, #0x160
    c59c:	add	x0, sp, #0xe0
    c5a0:	bl	4e60 <mpfr_add@plt>
    c5a4:	mov	w20, w0
    c5a8:	b	c498 <mpc_mul_karatsuba@@Base+0x780>
    c5ac:	ldr	w0, [sp, #200]
    c5b0:	and	w3, w0, #0xf
    c5b4:	add	x2, sp, #0x140
    c5b8:	add	x1, sp, #0x160
    c5bc:	add	x0, sp, #0xe0
    c5c0:	bl	4e60 <mpfr_add@plt>
    c5c4:	mov	w20, w0
    c5c8:	b	c498 <mpc_mul_karatsuba@@Base+0x780>
    c5cc:	ldr	w0, [sp, #200]
    c5d0:	asr	w22, w0, #4
    c5d4:	mov	w3, #0x3                   	// #3
    c5d8:	cmp	w22, #0x2
    c5dc:	b.eq	c5ec <mpc_mul_karatsuba@@Base+0x8d4>  // b.none
    c5e0:	cmp	w22, w3
    c5e4:	mov	w3, #0x2                   	// #2
    c5e8:	csel	w3, w22, w3, ne  // ne = any
    c5ec:	add	x21, sp, #0x100
    c5f0:	add	x2, sp, #0x140
    c5f4:	add	x1, sp, #0x160
    c5f8:	mov	x0, x21
    c5fc:	bl	4e60 <mpfr_add@plt>
    c600:	neg	w19, w0
    c604:	mov	w2, w22
    c608:	mov	x1, x21
    c60c:	mov	x0, x21
    c610:	bl	4b80 <mpfr_neg@plt>
    c614:	b	c498 <mpc_mul_karatsuba@@Base+0x780>
    c618:	mov	w19, #0x8                   	// #8
    c61c:	b	c4f0 <mpc_mul_karatsuba@@Base+0x7d8>
    c620:	add	x0, sp, #0x180
    c624:	bl	4d60 <mpfr_clear@plt>
    c628:	add	x0, sp, #0x160
    c62c:	bl	4d60 <mpfr_clear@plt>
    c630:	add	x0, sp, #0x140
    c634:	bl	4d60 <mpfr_clear@plt>
    c638:	add	x0, sp, #0x120
    c63c:	bl	4d60 <mpfr_clear@plt>
    c640:	ldr	w0, [sp, #204]
    c644:	cbz	w0, c650 <mpc_mul_karatsuba@@Base+0x938>
    c648:	add	x0, sp, #0xe0
    c64c:	bl	4a10 <mpc_clear@plt>
    c650:	ldr	w3, [sp, #200]
    c654:	ldr	x2, [sp, #176]
    c658:	ldr	x1, [sp, #192]
    c65c:	mov	x0, x26
    c660:	bl	4eb0 <mpc_mul_naive@plt>
    c664:	b	c4f4 <mpc_mul_karatsuba@@Base+0x7dc>
    c668:	mov	x1, x28
    c66c:	ldr	x0, [sp, #176]
    c670:	bl	53b0 <mpfr_cmpabs@plt>
    c674:	tbnz	w0, #31, c6a0 <mpc_mul_karatsuba@@Base+0x988>
    c678:	mov	w0, #0x1                   	// #1
    c67c:	str	w0, [sp, #128]
    c680:	mov	w0, #0xffffffff            	// #-1
    c684:	mov	w23, w0
    c688:	b	bf0c <mpc_mul_karatsuba@@Base+0x1f4>
    c68c:	add	x0, sp, #0xe0
    c690:	bl	4a10 <mpc_clear@plt>
    c694:	b	c4d0 <mpc_mul_karatsuba@@Base+0x7b8>
    c698:	ldr	w19, [sp, #216]
    c69c:	b	c004 <mpc_mul_karatsuba@@Base+0x2ec>
    c6a0:	ldr	x0, [x26]
    c6a4:	str	x0, [sp, #136]
    c6a8:	ldr	w0, [sp, #200]
    c6ac:	and	w0, w0, #0xf
    c6b0:	str	w0, [sp, #132]
    c6b4:	str	x28, [sp, #104]
    c6b8:	ldr	x28, [sp, #176]
    c6bc:	mov	w0, #0xffffffff            	// #-1
    c6c0:	str	w0, [sp, #128]
    c6c4:	mov	w23, w0
    c6c8:	mov	w0, #0x2                   	// #2
    c6cc:	str	w0, [sp, #220]
    c6d0:	b	bf28 <mpc_mul_karatsuba@@Base+0x210>
    c6d4:	stp	x29, x30, [sp, #-32]!
    c6d8:	mov	x29, sp
    c6dc:	stp	x19, x20, [sp, #16]
    c6e0:	mov	x19, x0
    c6e4:	mov	x3, x1
    c6e8:	ldr	w0, [x1, #8]
    c6ec:	mov	w4, #0x1                   	// #1
    c6f0:	cmp	w0, #0x0
    c6f4:	cneg	w10, w4, lt  // lt = tstop
    c6f8:	ldr	w1, [x1, #40]
    c6fc:	cmp	w1, #0x0
    c700:	cneg	w9, w4, lt  // lt = tstop
    c704:	ldr	w1, [x2, #8]
    c708:	cmp	w1, #0x0
    c70c:	cneg	w8, w4, lt  // lt = tstop
    c710:	ldr	w1, [x2, #40]
    c714:	cmp	w1, #0x0
    c718:	cneg	w7, w4, lt  // lt = tstop
    c71c:	ldr	x5, [x3, #16]
    c720:	mov	x1, #0x2                   	// #2
    c724:	movk	x1, #0x8000, lsl #48
    c728:	cmp	x5, x1
    c72c:	b.eq	c93c <mpc_mul_karatsuba@@Base+0xc24>  // b.none
    c730:	ldr	x0, [x3, #48]
    c734:	cmp	x0, x1
    c738:	b.eq	c93c <mpc_mul_karatsuba@@Base+0xc24>  // b.none
    c73c:	ldr	x4, [x2, #16]
    c740:	cmp	x4, x1
    c744:	b.eq	c93c <mpc_mul_karatsuba@@Base+0xc24>  // b.none
    c748:	ldr	x6, [x2, #48]
    c74c:	cmp	x6, x1
    c750:	b.eq	c93c <mpc_mul_karatsuba@@Base+0xc24>  // b.none
    c754:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
    c758:	cmp	x5, x1
    c75c:	b.eq	c7d8 <mpc_mul_karatsuba@@Base+0xac0>  // b.none
    c760:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
    c764:	cmp	x6, x0
    c768:	b.eq	c920 <mpc_mul_karatsuba@@Base+0xc08>  // b.none
    c76c:	cmp	x5, x0
    c770:	cset	w0, ne  // ne = any
    c774:	cmp	w0, #0x0
    c778:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
    c77c:	ccmp	x4, x1, #0x0, eq  // eq = none
    c780:	b.eq	ca18 <mpc_mul_karatsuba@@Base+0xd00>  // b.none
    c784:	cmp	x4, x1
    c788:	b.eq	c880 <mpc_mul_karatsuba@@Base+0xb68>  // b.none
    c78c:	mneg	w1, w9, w7
    c790:	mov	w20, #0x0                   	// #0
    c794:	mov	x11, #0x8000000000000001    	// #-9223372036854775807
    c798:	cmp	x4, x11
    c79c:	b.eq	c934 <mpc_mul_karatsuba@@Base+0xc1c>  // b.none
    c7a0:	mov	x4, #0x8000000000000003    	// #-9223372036854775805
    c7a4:	cmp	x6, x4
    c7a8:	cset	w4, ne  // ne = any
    c7ac:	cmp	w0, #0x0
    c7b0:	mov	w20, #0x0                   	// #0
    c7b4:	ccmp	w4, #0x0, #0x0, eq  // eq = none
    c7b8:	b.eq	c934 <mpc_mul_karatsuba@@Base+0xc1c>  // b.none
    c7bc:	cbnz	w4, c930 <mpc_mul_karatsuba@@Base+0xc18>
    c7c0:	mul	w4, w10, w7
    c7c4:	mul	w0, w9, w8
    c7c8:	mov	w20, #0x0                   	// #0
    c7cc:	cmp	w4, w0
    c7d0:	b.ne	c934 <mpc_mul_karatsuba@@Base+0xc1c>  // b.any
    c7d4:	b	c930 <mpc_mul_karatsuba@@Base+0xc18>
    c7d8:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
    c7dc:	cmp	x4, x1
    c7e0:	b.eq	c8d4 <mpc_mul_karatsuba@@Base+0xbbc>  // b.none
    c7e4:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
    c7e8:	cmp	x0, x1
    c7ec:	cset	w11, ne  // ne = any
    c7f0:	cmp	w11, #0x0
    c7f4:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
    c7f8:	ccmp	x6, x1, #0x0, eq  // eq = none
    c7fc:	b.eq	c93c <mpc_mul_karatsuba@@Base+0xc24>  // b.none
    c800:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
    c804:	cmp	x6, x1
    c808:	cset	w1, ne  // ne = any
    c80c:	cmp	w1, #0x0
    c810:	mov	x12, #0x8000000000000001    	// #-9223372036854775807
    c814:	ccmp	x0, x12, #0x0, eq  // eq = none
    c818:	b.eq	c9f4 <mpc_mul_karatsuba@@Base+0xcdc>  // b.none
    c81c:	cmp	w11, #0x0
    c820:	ccmp	w1, #0x0, #0x4, ne  // ne = any
    c824:	b.ne	c838 <mpc_mul_karatsuba@@Base+0xb20>  // b.any
    c828:	mul	w1, w10, w8
    c82c:	mul	w12, w9, w7
    c830:	cmp	w1, w12
    c834:	b.eq	c9e0 <mpc_mul_karatsuba@@Base+0xcc8>  // b.none
    c838:	mul	w1, w10, w8
    c83c:	mov	x12, #0x8000000000000001    	// #-9223372036854775807
    c840:	mov	w20, #0x0                   	// #0
    c844:	cmp	x6, x12
    c848:	b.eq	c934 <mpc_mul_karatsuba@@Base+0xc1c>  // b.none
    c84c:	mov	x6, #0x8000000000000003    	// #-9223372036854775805
    c850:	cmp	x4, x6
    c854:	mov	x4, #0x8000000000000001    	// #-9223372036854775807
    c858:	ccmp	x0, x4, #0x0, eq  // eq = none
    c85c:	mov	w20, #0x0                   	// #0
    c860:	b.ne	c914 <mpc_mul_karatsuba@@Base+0xbfc>  // b.any
    c864:	b	c934 <mpc_mul_karatsuba@@Base+0xc1c>
    c868:	mul	w4, w10, w7
    c86c:	mul	w0, w9, w8
    c870:	mov	w20, #0x0                   	// #0
    c874:	cmp	w4, w0
    c878:	b.ne	c934 <mpc_mul_karatsuba@@Base+0xc1c>  // b.any
    c87c:	b	c918 <mpc_mul_karatsuba@@Base+0xc00>
    c880:	mul	w1, w10, w8
    c884:	mul	w4, w9, w7
    c888:	cmp	w1, w4
    c88c:	b.eq	ca04 <mpc_mul_karatsuba@@Base+0xcec>  // b.none
    c890:	mneg	w1, w9, w7
    c894:	b	c7a0 <mpc_mul_karatsuba@@Base+0xa88>
    c898:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
    c89c:	add	x4, x4, x0
    c8a0:	cmp	x4, #0x1
    c8a4:	cset	w6, hi  // hi = pmore
    c8a8:	add	x2, x2, x0
    c8ac:	cmp	x2, #0x1
    c8b0:	cset	w0, hi  // hi = pmore
    c8b4:	b	c990 <mpc_mul_karatsuba@@Base+0xc78>
    c8b8:	mov	x0, x19
    c8bc:	bl	5120 <mpfr_set_inf@plt>
    c8c0:	b	c9c4 <mpc_mul_karatsuba@@Base+0xcac>
    c8c4:	mov	w1, w20
    c8c8:	add	x0, x19, #0x20
    c8cc:	bl	5120 <mpfr_set_inf@plt>
    c8d0:	b	c9d0 <mpc_mul_karatsuba@@Base+0xcb8>
    c8d4:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
    c8d8:	cmp	x6, x1
    c8dc:	b.eq	c93c <mpc_mul_karatsuba@@Base+0xc24>  // b.none
    c8e0:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
    c8e4:	cmp	x0, x1
    c8e8:	cset	w11, ne  // ne = any
    c8ec:	cmp	w11, #0x0
    c8f0:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
    c8f4:	ccmp	x4, x1, #0x0, eq  // eq = none
    c8f8:	b.eq	c93c <mpc_mul_karatsuba@@Base+0xc24>  // b.none
    c8fc:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
    c900:	cmp	x0, x1
    c904:	mov	w1, #0x0                   	// #0
    c908:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
    c90c:	ccmp	x4, x0, #0x0, eq  // eq = none
    c910:	b.eq	c93c <mpc_mul_karatsuba@@Base+0xc24>  // b.none
    c914:	cbz	w11, c868 <mpc_mul_karatsuba@@Base+0xb50>
    c918:	mul	w20, w10, w7
    c91c:	b	c934 <mpc_mul_karatsuba@@Base+0xc1c>
    c920:	mov	w1, #0x0                   	// #0
    c924:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
    c928:	cmp	x4, x0
    c92c:	b.eq	c93c <mpc_mul_karatsuba@@Base+0xc24>  // b.none
    c930:	mul	w20, w9, w8
    c934:	orr	w0, w1, w20
    c938:	cbnz	w0, c9b8 <mpc_mul_karatsuba@@Base+0xca0>
    c93c:	mov	x6, #0x7fffffffffffffff    	// #9223372036854775807
    c940:	add	x0, x5, x6
    c944:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
    c948:	cmp	x0, #0x1
    c94c:	ccmp	x5, x1, #0x0, hi  // hi = pmore
    c950:	cset	w5, eq  // eq = none
    c954:	ldr	x0, [x3, #48]
    c958:	add	x6, x0, x6
    c95c:	cmp	x6, #0x1
    c960:	ccmp	x0, x1, #0x0, hi  // hi = pmore
    c964:	cset	w3, eq  // eq = none
    c968:	ldr	x4, [x2, #16]
    c96c:	ldr	x2, [x2, #48]
    c970:	cmp	x2, x1
    c974:	cset	w0, eq  // eq = none
    c978:	cmp	x4, x1
    c97c:	cset	w1, eq  // eq = none
    c980:	cmp	w0, #0x0
    c984:	mov	w6, w1
    c988:	ccmp	w1, #0x0, #0x0, eq  // eq = none
    c98c:	b.eq	c898 <mpc_mul_karatsuba@@Base+0xb80>  // b.none
    c990:	mul	w4, w10, w5
    c994:	mul	w2, w9, w3
    c998:	mul	w1, w4, w8
    c99c:	mul	w1, w1, w6
    c9a0:	mul	w3, w2, w7
    c9a4:	msub	w1, w3, w0, w1
    c9a8:	mul	w4, w4, w7
    c9ac:	mul	w2, w2, w8
    c9b0:	mul	w2, w2, w6
    c9b4:	madd	w20, w4, w0, w2
    c9b8:	cbnz	w1, c8b8 <mpc_mul_karatsuba@@Base+0xba0>
    c9bc:	mov	x0, x19
    c9c0:	bl	4a40 <mpfr_set_nan@plt>
    c9c4:	cbnz	w20, c8c4 <mpc_mul_karatsuba@@Base+0xbac>
    c9c8:	add	x0, x19, #0x20
    c9cc:	bl	4a40 <mpfr_set_nan@plt>
    c9d0:	mov	w0, #0x0                   	// #0
    c9d4:	ldp	x19, x20, [sp, #16]
    c9d8:	ldp	x29, x30, [sp], #32
    c9dc:	ret
    c9e0:	mov	w1, #0x0                   	// #0
    c9e4:	mov	x12, #0x8000000000000001    	// #-9223372036854775807
    c9e8:	cmp	x6, x12
    c9ec:	b.ne	c84c <mpc_mul_karatsuba@@Base+0xb34>  // b.any
    c9f0:	b	c93c <mpc_mul_karatsuba@@Base+0xc24>
    c9f4:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
    c9f8:	cmp	x0, x1
    c9fc:	cset	w11, ne  // ne = any
    ca00:	b	c8fc <mpc_mul_karatsuba@@Base+0xbe4>
    ca04:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
    ca08:	cmp	x6, x0
    ca0c:	cset	w4, ne  // ne = any
    ca10:	mov	w1, #0x0                   	// #0
    ca14:	b	c7bc <mpc_mul_karatsuba@@Base+0xaa4>
    ca18:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
    ca1c:	cmp	x6, x1
    ca20:	cset	w4, ne  // ne = any
    ca24:	cmp	w0, #0x0
    ca28:	mov	w1, #0x0                   	// #0
    ca2c:	ccmp	w4, #0x0, #0x0, eq  // eq = none
    ca30:	b.ne	c7bc <mpc_mul_karatsuba@@Base+0xaa4>  // b.any
    ca34:	b	c93c <mpc_mul_karatsuba@@Base+0xc24>
    ca38:	stp	x29, x30, [sp, #-80]!
    ca3c:	mov	x29, sp
    ca40:	stp	x19, x20, [sp, #16]
    ca44:	stp	x21, x22, [sp, #32]
    ca48:	stp	x23, x24, [sp, #48]
    ca4c:	str	x25, [sp, #64]
    ca50:	mov	x19, x0
    ca54:	mov	w20, w3
    ca58:	ldr	w0, [x1, #8]
    ca5c:	mov	w24, #0x1                   	// #1
    ca60:	cmp	w0, #0x0
    ca64:	cneg	w24, w24, lt  // lt = tstop
    ca68:	ldr	w0, [x1, #40]
    ca6c:	mov	w22, #0x1                   	// #1
    ca70:	cmp	w0, #0x0
    ca74:	cneg	w22, w22, lt  // lt = tstop
    ca78:	ldr	w0, [x2, #8]
    ca7c:	mov	w21, #0x1                   	// #1
    ca80:	cmp	w0, #0x0
    ca84:	cneg	w21, w21, lt  // lt = tstop
    ca88:	ldr	w0, [x2, #40]
    ca8c:	mov	w23, #0x1                   	// #1
    ca90:	cmp	w0, #0x0
    ca94:	cneg	w23, w23, lt  // lt = tstop
    ca98:	mov	x0, x19
    ca9c:	bl	5160 <mpc_mul_fr@plt>
    caa0:	mov	w25, w0
    caa4:	ldr	x1, [x19, #16]
    caa8:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
    caac:	cmp	x1, x0
    cab0:	b.eq	cae0 <mpc_mul_karatsuba@@Base+0xdc8>  // b.none
    cab4:	ldr	x1, [x19, #48]
    cab8:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
    cabc:	cmp	x1, x0
    cac0:	b.eq	cb14 <mpc_mul_karatsuba@@Base+0xdfc>  // b.none
    cac4:	mov	w0, w25
    cac8:	ldp	x19, x20, [sp, #16]
    cacc:	ldp	x21, x22, [sp, #32]
    cad0:	ldp	x23, x24, [sp, #48]
    cad4:	ldr	x25, [sp, #64]
    cad8:	ldp	x29, x30, [sp], #80
    cadc:	ret
    cae0:	and	w0, w20, #0xf
    cae4:	mov	w3, #0xffffffff            	// #-1
    cae8:	cmp	w0, #0x3
    caec:	b.eq	cb00 <mpc_mul_karatsuba@@Base+0xde8>  // b.none
    caf0:	cmp	w24, w21
    caf4:	mov	w3, #0x1                   	// #1
    caf8:	ccmp	w22, w23, #0x0, ne  // ne = any
    cafc:	cneg	w3, w3, eq  // eq = none
    cb00:	mov	w2, #0x0                   	// #0
    cb04:	mov	x1, x19
    cb08:	mov	x0, x19
    cb0c:	bl	51d0 <mpfr_set4@plt>
    cb10:	b	cab4 <mpc_mul_karatsuba@@Base+0xd9c>
    cb14:	add	x0, x19, #0x20
    cb18:	asr	w20, w20, #4
    cb1c:	mov	w3, #0xffffffff            	// #-1
    cb20:	cmp	w20, #0x3
    cb24:	b.eq	cb38 <mpc_mul_karatsuba@@Base+0xe20>  // b.none
    cb28:	cmp	w24, w23
    cb2c:	mov	w3, #0x1                   	// #1
    cb30:	ccmp	w22, w21, #0x4, ne  // ne = any
    cb34:	cneg	w3, w3, ne  // ne = any
    cb38:	mov	w2, #0x0                   	// #0
    cb3c:	mov	x1, x0
    cb40:	bl	51d0 <mpfr_set4@plt>
    cb44:	b	cac4 <mpc_mul_karatsuba@@Base+0xdac>

000000000000cb48 <mpc_mul@@Base>:
    cb48:	stp	x29, x30, [sp, #-32]!
    cb4c:	mov	x29, sp
    cb50:	str	x19, [sp, #16]
    cb54:	mov	x19, x0
    cb58:	mov	x4, x2
    cb5c:	ldr	x0, [x1, #16]
    cb60:	mov	x2, #0x8000000000000003    	// #-9223372036854775805
    cb64:	cmp	x0, x2
    cb68:	b.eq	cbd0 <mpc_mul@@Base+0x88>  // b.none
    cb6c:	ldr	x5, [x1, #48]
    cb70:	cmp	x5, x2
    cb74:	b.eq	cbd0 <mpc_mul@@Base+0x88>  // b.none
    cb78:	ldr	x2, [x4, #16]
    cb7c:	mov	x6, #0x8000000000000003    	// #-9223372036854775805
    cb80:	cmp	x2, x6
    cb84:	b.eq	cbe8 <mpc_mul@@Base+0xa0>  // b.none
    cb88:	ldr	x7, [x4, #48]
    cb8c:	cmp	x7, x6
    cb90:	b.eq	cbe8 <mpc_mul@@Base+0xa0>  // b.none
    cb94:	mov	x6, #0x2                   	// #2
    cb98:	movk	x6, #0x8000, lsl #48
    cb9c:	cmp	x2, x6
    cba0:	ccmp	x7, x6, #0x4, ne  // ne = any
    cba4:	cset	w8, eq  // eq = none
    cba8:	cmp	x5, x6
    cbac:	ccmp	x0, x6, #0x4, ne  // ne = any
    cbb0:	csinc	w6, w8, wzr, ne  // ne = any
    cbb4:	cbz	w6, cbfc <mpc_mul@@Base+0xb4>
    cbb8:	mov	x0, x19
    cbbc:	bl	4a40 <mpfr_set_nan@plt>
    cbc0:	add	x0, x19, #0x20
    cbc4:	bl	4a40 <mpfr_set_nan@plt>
    cbc8:	mov	w0, #0x0                   	// #0
    cbcc:	b	cbdc <mpc_mul@@Base+0x94>
    cbd0:	mov	x2, x4
    cbd4:	mov	x0, x19
    cbd8:	bl	c6d4 <mpc_mul_karatsuba@@Base+0x9bc>
    cbdc:	ldr	x19, [sp, #16]
    cbe0:	ldp	x29, x30, [sp], #32
    cbe4:	ret
    cbe8:	mov	x2, x1
    cbec:	mov	x1, x4
    cbf0:	mov	x0, x19
    cbf4:	bl	c6d4 <mpc_mul_karatsuba@@Base+0x9bc>
    cbf8:	b	cbdc <mpc_mul@@Base+0x94>
    cbfc:	mov	x6, #0x8000000000000001    	// #-9223372036854775807
    cc00:	cmp	x5, x6
    cc04:	b.eq	cc84 <mpc_mul@@Base+0x13c>  // b.none
    cc08:	mov	x6, #0x8000000000000001    	// #-9223372036854775807
    cc0c:	cmp	x7, x6
    cc10:	b.eq	cc98 <mpc_mul@@Base+0x150>  // b.none
    cc14:	mov	x6, #0x8000000000000001    	// #-9223372036854775807
    cc18:	cmp	x0, x6
    cc1c:	b.eq	cca8 <mpc_mul@@Base+0x160>  // b.none
    cc20:	mov	x6, #0x8000000000000001    	// #-9223372036854775807
    cc24:	cmp	x2, x6
    cc28:	b.eq	ccbc <mpc_mul@@Base+0x174>  // b.none
    cc2c:	subs	x0, x0, x5
    cc30:	cneg	x0, x0, mi  // mi = first
    cc34:	ldr	x6, [x1]
    cc38:	ldr	x5, [x1, #32]
    cc3c:	cmp	x5, x6
    cc40:	csel	x5, x5, x6, ge  // ge = tcont
    cc44:	add	x5, x5, x5, lsr #63
    cc48:	cmp	x0, x5, asr #1
    cc4c:	b.gt	cc74 <mpc_mul@@Base+0x12c>
    cc50:	subs	x2, x2, x7
    cc54:	cneg	x2, x2, mi  // mi = first
    cc58:	ldr	x5, [x4]
    cc5c:	ldr	x0, [x4, #32]
    cc60:	cmp	x0, x5
    cc64:	csel	x0, x0, x5, ge  // ge = tcont
    cc68:	add	x0, x0, x0, lsr #63
    cc6c:	cmp	x2, x0, asr #1
    cc70:	b.le	cccc <mpc_mul@@Base+0x184>
    cc74:	mov	x2, x4
    cc78:	mov	x0, x19
    cc7c:	bl	4eb0 <mpc_mul_naive@plt>
    cc80:	b	cbdc <mpc_mul@@Base+0x94>
    cc84:	mov	x2, x1
    cc88:	mov	x1, x4
    cc8c:	mov	x0, x19
    cc90:	bl	ca38 <mpc_mul_karatsuba@@Base+0xd20>
    cc94:	b	cbdc <mpc_mul@@Base+0x94>
    cc98:	mov	x2, x4
    cc9c:	mov	x0, x19
    cca0:	bl	ca38 <mpc_mul_karatsuba@@Base+0xd20>
    cca4:	b	cbdc <mpc_mul@@Base+0x94>
    cca8:	mov	x2, x1
    ccac:	mov	x1, x4
    ccb0:	mov	x0, x19
    ccb4:	bl	bb60 <mpc_mul_naive@@Base+0x1cc>
    ccb8:	b	cbdc <mpc_mul@@Base+0x94>
    ccbc:	mov	x2, x4
    ccc0:	mov	x0, x19
    ccc4:	bl	bb60 <mpc_mul_naive@@Base+0x1cc>
    ccc8:	b	cbdc <mpc_mul@@Base+0x94>
    cccc:	ldr	x2, [x19]
    ccd0:	ldr	x0, [x19, #32]
    ccd4:	cmp	x0, x2
    ccd8:	csel	x2, x0, x2, ge  // ge = tcont
    ccdc:	adrp	x0, 27000 <mpc_ui_ui_sub@@Base+0x13228>
    cce0:	ldr	x0, [x0, #4056]
    cce4:	ldrsw	x5, [x0]
    cce8:	add	x0, x5, x5, lsl #1
    ccec:	lsl	x0, x0, #3
    ccf0:	sub	x0, x0, x5
    ccf4:	adrp	x5, 27000 <mpc_ui_ui_sub@@Base+0x13228>
    ccf8:	ldr	x6, [x5, #4016]
    ccfc:	adrp	x5, 27000 <mpc_ui_ui_sub@@Base+0x13228>
    cd00:	ldr	x5, [x5, #4032]
    cd04:	cmp	x2, x0
    cd08:	csel	x5, x5, x6, le
    cd0c:	mov	x2, x4
    cd10:	mov	x0, x19
    cd14:	blr	x5
    cd18:	b	cbdc <mpc_mul@@Base+0x94>

000000000000cd1c <mpc_mul_fr@@Base>:
    cd1c:	stp	x29, x30, [sp, #-112]!
    cd20:	mov	x29, sp
    cd24:	stp	x19, x20, [sp, #16]
    cd28:	stp	x21, x22, [sp, #32]
    cd2c:	stp	x23, x24, [sp, #48]
    cd30:	mov	x19, x0
    cd34:	mov	x24, x1
    cd38:	mov	x20, x2
    cd3c:	mov	w21, w3
    cd40:	cmp	x0, x2
    cd44:	b.eq	cdd4 <mpc_mul_fr@@Base+0xb8>  // b.none
    cd48:	add	x23, sp, #0x50
    cd4c:	ldp	x0, x1, [x0]
    cd50:	stp	x0, x1, [sp, #80]
    cd54:	ldp	x0, x1, [x19, #16]
    cd58:	stp	x0, x1, [sp, #96]
    cd5c:	and	w3, w3, #0xf
    cd60:	mov	x1, x24
    cd64:	mov	x0, x23
    cd68:	bl	4b70 <mpfr_mul@plt>
    cd6c:	mov	w22, w0
    cd70:	asr	w3, w21, #4
    cd74:	mov	x2, x20
    cd78:	add	x1, x24, #0x20
    cd7c:	add	x0, x19, #0x20
    cd80:	bl	4b70 <mpfr_mul@plt>
    cd84:	mov	w20, w0
    cd88:	ldr	w3, [sp, #88]
    cd8c:	mov	w2, #0x0                   	// #0
    cd90:	mov	x1, x23
    cd94:	mov	x0, x19
    cd98:	bl	51d0 <mpfr_set4@plt>
    cd9c:	mov	w0, #0x2                   	// #2
    cda0:	tbnz	w22, #31, cdac <mpc_mul_fr@@Base+0x90>
    cda4:	cmp	w22, #0x0
    cda8:	cset	w0, ne  // ne = any
    cdac:	tbnz	w20, #31, ce40 <mpc_mul_fr@@Base+0x124>
    cdb0:	cmp	w20, #0x0
    cdb4:	mov	w1, #0x4                   	// #4
    cdb8:	csel	w20, w20, w1, eq  // eq = none
    cdbc:	orr	w0, w0, w20
    cdc0:	ldp	x19, x20, [sp, #16]
    cdc4:	ldp	x21, x22, [sp, #32]
    cdc8:	ldp	x23, x24, [sp, #48]
    cdcc:	ldp	x29, x30, [sp], #112
    cdd0:	ret
    cdd4:	str	x25, [sp, #64]
    cdd8:	mov	x25, x0
    cddc:	add	x23, sp, #0x50
    cde0:	ldr	x1, [x25], #32
    cde4:	mov	x0, x23
    cde8:	bl	5440 <mpfr_init2@plt>
    cdec:	and	w3, w21, #0xf
    cdf0:	mov	x2, x20
    cdf4:	mov	x1, x24
    cdf8:	mov	x0, x23
    cdfc:	bl	4b70 <mpfr_mul@plt>
    ce00:	mov	w22, w0
    ce04:	asr	w3, w21, #4
    ce08:	mov	x2, x20
    ce0c:	add	x1, x24, #0x20
    ce10:	mov	x0, x25
    ce14:	bl	4b70 <mpfr_mul@plt>
    ce18:	mov	w20, w0
    ce1c:	ldr	w3, [sp, #88]
    ce20:	mov	w2, #0x0                   	// #0
    ce24:	mov	x1, x23
    ce28:	mov	x0, x19
    ce2c:	bl	51d0 <mpfr_set4@plt>
    ce30:	mov	x0, x23
    ce34:	bl	4d60 <mpfr_clear@plt>
    ce38:	ldr	x25, [sp, #64]
    ce3c:	b	cd9c <mpc_mul_fr@@Base+0x80>
    ce40:	mov	w20, #0x8                   	// #8
    ce44:	b	cdbc <mpc_mul_fr@@Base+0xa0>

000000000000ce48 <mpc_mul_i@@Base>:
    ce48:	stp	x29, x30, [sp, #-80]!
    ce4c:	mov	x29, sp
    ce50:	stp	x19, x20, [sp, #16]
    ce54:	stp	x21, x22, [sp, #32]
    ce58:	mov	x20, x0
    ce5c:	mov	x19, x1
    ce60:	mov	w22, w2
    ce64:	mov	w21, w3
    ce68:	ldr	x1, [x1]
    ce6c:	ldr	x0, [x0, #32]
    ce70:	cmp	x1, x0
    ce74:	b.eq	cee4 <mpc_mul_i@@Base+0x9c>  // b.none
    ce78:	cmp	x19, x20
    ce7c:	b.eq	cf70 <mpc_mul_i@@Base+0x128>  // b.none
    ce80:	tbnz	w22, #31, cff8 <mpc_mul_i@@Base+0x1b0>
    ce84:	and	w2, w21, #0xf
    ce88:	add	x1, x19, #0x20
    ce8c:	mov	x0, x20
    ce90:	bl	4b80 <mpfr_neg@plt>
    ce94:	mov	w22, w0
    ce98:	ldr	w3, [x19, #8]
    ce9c:	asr	w2, w21, #4
    cea0:	mov	x1, x19
    cea4:	add	x0, x20, #0x20
    cea8:	bl	51d0 <mpfr_set4@plt>
    ceac:	mov	w19, w0
    ceb0:	mov	w0, #0x2                   	// #2
    ceb4:	tbnz	w22, #31, cec0 <mpc_mul_i@@Base+0x78>
    ceb8:	cmp	w22, #0x0
    cebc:	cset	w0, ne  // ne = any
    cec0:	tbnz	w19, #31, d028 <mpc_mul_i@@Base+0x1e0>
    cec4:	cmp	w19, #0x0
    cec8:	mov	w1, #0x4                   	// #4
    cecc:	csel	w19, w19, w1, eq  // eq = none
    ced0:	orr	w0, w0, w19
    ced4:	ldp	x19, x20, [sp, #16]
    ced8:	ldp	x21, x22, [sp, #32]
    cedc:	ldp	x29, x30, [sp], #80
    cee0:	ret
    cee4:	ldr	x1, [x19, #32]
    cee8:	ldr	x0, [x20]
    ceec:	cmp	x1, x0
    cef0:	b.ne	ce78 <mpc_mul_i@@Base+0x30>  // b.any
    cef4:	cmp	x19, x20
    cef8:	b.eq	cf44 <mpc_mul_i@@Base+0xfc>  // b.none
    cefc:	ldr	w3, [x19, #40]
    cf00:	mov	w2, #0x0                   	// #0
    cf04:	add	x1, x19, #0x20
    cf08:	mov	x0, x20
    cf0c:	bl	51d0 <mpfr_set4@plt>
    cf10:	ldr	w3, [x19, #8]
    cf14:	mov	w2, #0x0                   	// #0
    cf18:	mov	x1, x19
    cf1c:	add	x0, x20, #0x20
    cf20:	bl	51d0 <mpfr_set4@plt>
    cf24:	tbnz	w22, #31, cf54 <mpc_mul_i@@Base+0x10c>
    cf28:	mov	w2, #0x0                   	// #0
    cf2c:	mov	x1, x20
    cf30:	mov	x0, x20
    cf34:	bl	4b80 <mpfr_neg@plt>
    cf38:	mov	w19, #0x0                   	// #0
    cf3c:	mov	w22, #0x0                   	// #0
    cf40:	b	ceb8 <mpc_mul_i@@Base+0x70>
    cf44:	add	x1, x20, #0x20
    cf48:	mov	x0, x20
    cf4c:	bl	5090 <mpfr_swap@plt>
    cf50:	b	cf24 <mpc_mul_i@@Base+0xdc>
    cf54:	add	x0, x20, #0x20
    cf58:	mov	w2, #0x0                   	// #0
    cf5c:	mov	x1, x0
    cf60:	bl	4b80 <mpfr_neg@plt>
    cf64:	mov	w19, #0x0                   	// #0
    cf68:	mov	w22, #0x0                   	// #0
    cf6c:	b	ceb8 <mpc_mul_i@@Base+0x70>
    cf70:	ldr	x1, [x20]
    cf74:	add	x0, sp, #0x30
    cf78:	bl	5440 <mpfr_init2@plt>
    cf7c:	tbnz	w22, #31, cfc8 <mpc_mul_i@@Base+0x180>
    cf80:	and	w2, w21, #0xf
    cf84:	add	x1, x19, #0x20
    cf88:	add	x0, sp, #0x30
    cf8c:	bl	4b80 <mpfr_neg@plt>
    cf90:	mov	w22, w0
    cf94:	ldr	w3, [x19, #8]
    cf98:	asr	w2, w21, #4
    cf9c:	mov	x1, x19
    cfa0:	add	x0, x20, #0x20
    cfa4:	bl	51d0 <mpfr_set4@plt>
    cfa8:	mov	w19, w0
    cfac:	mov	x0, x20
    cfb0:	bl	4d60 <mpfr_clear@plt>
    cfb4:	ldp	x0, x1, [sp, #48]
    cfb8:	stp	x0, x1, [x20]
    cfbc:	ldp	x0, x1, [sp, #64]
    cfc0:	stp	x0, x1, [x20, #16]
    cfc4:	b	ceb0 <mpc_mul_i@@Base+0x68>
    cfc8:	ldr	w3, [x19, #40]
    cfcc:	and	w2, w21, #0xf
    cfd0:	add	x1, x19, #0x20
    cfd4:	add	x0, sp, #0x30
    cfd8:	bl	51d0 <mpfr_set4@plt>
    cfdc:	mov	w22, w0
    cfe0:	asr	w2, w21, #4
    cfe4:	mov	x1, x19
    cfe8:	add	x0, x20, #0x20
    cfec:	bl	4b80 <mpfr_neg@plt>
    cff0:	mov	w19, w0
    cff4:	b	cfac <mpc_mul_i@@Base+0x164>
    cff8:	ldr	w3, [x19, #40]
    cffc:	and	w2, w21, #0xf
    d000:	add	x1, x19, #0x20
    d004:	mov	x0, x20
    d008:	bl	51d0 <mpfr_set4@plt>
    d00c:	mov	w22, w0
    d010:	asr	w2, w21, #4
    d014:	mov	x1, x19
    d018:	add	x0, x20, #0x20
    d01c:	bl	4b80 <mpfr_neg@plt>
    d020:	mov	w19, w0
    d024:	b	ceb0 <mpc_mul_i@@Base+0x68>
    d028:	mov	w19, #0x8                   	// #8
    d02c:	b	ced0 <mpc_mul_i@@Base+0x88>

000000000000d030 <mpc_mul_si@@Base>:
    d030:	stp	x29, x30, [sp, #-64]!
    d034:	mov	x29, sp
    d038:	stp	x19, x20, [sp, #16]
    d03c:	stp	x21, x22, [sp, #32]
    d040:	str	x23, [sp, #48]
    d044:	mov	x21, x0
    d048:	mov	x22, x1
    d04c:	mov	x23, x2
    d050:	mov	w19, w3
    d054:	and	w3, w3, #0xf
    d058:	bl	5360 <mpfr_mul_si@plt>
    d05c:	mov	w20, w0
    d060:	asr	w3, w19, #4
    d064:	mov	x2, x23
    d068:	add	x1, x22, #0x20
    d06c:	add	x0, x21, #0x20
    d070:	bl	5360 <mpfr_mul_si@plt>
    d074:	mov	w1, #0x2                   	// #2
    d078:	tbnz	w20, #31, d084 <mpc_mul_si@@Base+0x54>
    d07c:	cmp	w20, #0x0
    d080:	cset	w1, ne  // ne = any
    d084:	tbnz	w0, #31, d0ac <mpc_mul_si@@Base+0x7c>
    d088:	cmp	w0, #0x0
    d08c:	mov	w2, #0x4                   	// #4
    d090:	csel	w0, w0, w2, eq  // eq = none
    d094:	orr	w0, w1, w0
    d098:	ldp	x19, x20, [sp, #16]
    d09c:	ldp	x21, x22, [sp, #32]
    d0a0:	ldr	x23, [sp, #48]
    d0a4:	ldp	x29, x30, [sp], #64
    d0a8:	ret
    d0ac:	mov	w0, #0x8                   	// #8
    d0b0:	b	d094 <mpc_mul_si@@Base+0x64>

000000000000d0b4 <mpc_mul_ui@@Base>:
    d0b4:	stp	x29, x30, [sp, #-64]!
    d0b8:	mov	x29, sp
    d0bc:	stp	x19, x20, [sp, #16]
    d0c0:	stp	x21, x22, [sp, #32]
    d0c4:	str	x23, [sp, #48]
    d0c8:	mov	x21, x0
    d0cc:	mov	x22, x1
    d0d0:	mov	x23, x2
    d0d4:	mov	w19, w3
    d0d8:	and	w3, w3, #0xf
    d0dc:	bl	49c0 <mpfr_mul_ui@plt>
    d0e0:	mov	w20, w0
    d0e4:	asr	w3, w19, #4
    d0e8:	mov	x2, x23
    d0ec:	add	x1, x22, #0x20
    d0f0:	add	x0, x21, #0x20
    d0f4:	bl	49c0 <mpfr_mul_ui@plt>
    d0f8:	mov	w1, #0x2                   	// #2
    d0fc:	tbnz	w20, #31, d108 <mpc_mul_ui@@Base+0x54>
    d100:	cmp	w20, #0x0
    d104:	cset	w1, ne  // ne = any
    d108:	tbnz	w0, #31, d130 <mpc_mul_ui@@Base+0x7c>
    d10c:	cmp	w0, #0x0
    d110:	mov	w2, #0x4                   	// #4
    d114:	csel	w0, w0, w2, eq  // eq = none
    d118:	orr	w0, w1, w0
    d11c:	ldp	x19, x20, [sp, #16]
    d120:	ldp	x21, x22, [sp, #32]
    d124:	ldr	x23, [sp, #48]
    d128:	ldp	x29, x30, [sp], #64
    d12c:	ret
    d130:	mov	w0, #0x8                   	// #8
    d134:	b	d118 <mpc_mul_ui@@Base+0x64>

000000000000d138 <mpc_neg@@Base>:
    d138:	stp	x29, x30, [sp, #-48]!
    d13c:	mov	x29, sp
    d140:	stp	x19, x20, [sp, #16]
    d144:	stp	x21, x22, [sp, #32]
    d148:	mov	x21, x0
    d14c:	mov	x22, x1
    d150:	mov	w19, w2
    d154:	and	w2, w2, #0xf
    d158:	bl	4b80 <mpfr_neg@plt>
    d15c:	mov	w20, w0
    d160:	asr	w2, w19, #4
    d164:	add	x1, x22, #0x20
    d168:	add	x0, x21, #0x20
    d16c:	bl	4b80 <mpfr_neg@plt>
    d170:	mov	w1, #0x2                   	// #2
    d174:	tbnz	w20, #31, d180 <mpc_neg@@Base+0x48>
    d178:	cmp	w20, #0x0
    d17c:	cset	w1, ne  // ne = any
    d180:	tbnz	w0, #31, d1a4 <mpc_neg@@Base+0x6c>
    d184:	cmp	w0, #0x0
    d188:	mov	w2, #0x4                   	// #4
    d18c:	csel	w0, w0, w2, eq  // eq = none
    d190:	orr	w0, w1, w0
    d194:	ldp	x19, x20, [sp, #16]
    d198:	ldp	x21, x22, [sp, #32]
    d19c:	ldp	x29, x30, [sp], #48
    d1a0:	ret
    d1a4:	mov	w0, #0x8                   	// #8
    d1a8:	b	d190 <mpc_neg@@Base+0x58>

000000000000d1ac <mpc_norm@@Base>:
    d1ac:	stp	x29, x30, [sp, #-240]!
    d1b0:	mov	x29, sp
    d1b4:	stp	x19, x20, [sp, #16]
    d1b8:	stp	x21, x22, [sp, #32]
    d1bc:	stp	x23, x24, [sp, #48]
    d1c0:	stp	x25, x26, [sp, #64]
    d1c4:	mov	x24, x0
    d1c8:	mov	x21, x1
    d1cc:	mov	w25, w2
    d1d0:	str	x1, [sp, #104]
    d1d4:	mov	x0, x1
    d1d8:	bl	54d0 <mpfr_number_p@plt>
    d1dc:	cbz	w0, d260 <mpc_norm@@Base+0xb4>
    d1e0:	add	x0, x21, #0x20
    d1e4:	str	x0, [sp, #112]
    d1e8:	bl	54d0 <mpfr_number_p@plt>
    d1ec:	cbz	w0, d260 <mpc_norm@@Base+0xb4>
    d1f0:	ldr	x1, [x21, #16]
    d1f4:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
    d1f8:	cmp	x1, x0
    d1fc:	b.eq	d290 <mpc_norm@@Base+0xe4>  // b.none
    d200:	ldr	x1, [x21, #48]
    d204:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
    d208:	cmp	x1, x0
    d20c:	b.eq	d2cc <mpc_norm@@Base+0x120>  // b.none
    d210:	stp	x27, x28, [sp, #80]
    d214:	ldr	x19, [x24]
    d218:	add	x0, sp, #0x90
    d21c:	bl	4aa0 <mpfr_init@plt>
    d220:	add	x0, sp, #0xb0
    d224:	bl	4aa0 <mpfr_init@plt>
    d228:	add	x0, sp, #0xd0
    d22c:	bl	4aa0 <mpfr_init@plt>
    d230:	bl	52f0 <mpfr_underflow_p@plt>
    d234:	str	w0, [sp, #136]
    d238:	bl	54e0 <mpfr_overflow_p@plt>
    d23c:	str	w0, [sp, #140]
    d240:	bl	4e20 <mpfr_clear_underflow@plt>
    d244:	bl	4a50 <mpfr_clear_overflow@plt>
    d248:	mov	w23, #0x0                   	// #0
    d24c:	add	x27, sp, #0x90
    d250:	add	x26, sp, #0xb0
    d254:	mov	w22, #0x3                   	// #3
    d258:	add	x28, sp, #0xd0
    d25c:	b	d38c <mpc_norm@@Base+0x1e0>
    d260:	mov	w2, w25
    d264:	mov	x1, x21
    d268:	mov	x0, x24
    d26c:	bl	51a0 <mpc_abs@plt>
    d270:	mov	w19, w0
    d274:	mov	w0, w19
    d278:	ldp	x19, x20, [sp, #16]
    d27c:	ldp	x21, x22, [sp, #32]
    d280:	ldp	x23, x24, [sp, #48]
    d284:	ldp	x25, x26, [sp, #64]
    d288:	ldp	x29, x30, [sp], #240
    d28c:	ret
    d290:	ldr	x1, [x21, #48]
    d294:	cmp	x1, x0
    d298:	b.ne	d2b4 <mpc_norm@@Base+0x108>  // b.any
    d29c:	mov	w0, #0x1                   	// #1
    d2a0:	str	w0, [x24, #8]
    d2a4:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
    d2a8:	str	x0, [x24, #16]
    d2ac:	mov	w19, #0x0                   	// #0
    d2b0:	b	d274 <mpc_norm@@Base+0xc8>
    d2b4:	mov	w2, w25
    d2b8:	ldr	x1, [sp, #112]
    d2bc:	mov	x0, x24
    d2c0:	bl	5010 <mpfr_sqr@plt>
    d2c4:	mov	w19, w0
    d2c8:	b	d274 <mpc_norm@@Base+0xc8>
    d2cc:	mov	w2, w25
    d2d0:	mov	x1, x21
    d2d4:	mov	x0, x24
    d2d8:	bl	5010 <mpfr_sqr@plt>
    d2dc:	mov	w19, w0
    d2e0:	b	d274 <mpc_norm@@Base+0xc8>
    d2e4:	ldr	x0, [x21]
    d2e8:	lsl	x1, x0, #1
    d2ec:	str	x1, [sp, #120]
    d2f0:	ldr	x0, [x21, #32]
    d2f4:	lsl	x0, x0, #1
    d2f8:	mov	x20, x0
    d2fc:	str	x0, [sp, #128]
    d300:	mov	x0, x27
    d304:	bl	4c80 <mpfr_set_prec@plt>
    d308:	mov	x1, x20
    d30c:	mov	x0, x26
    d310:	bl	4c80 <mpfr_set_prec@plt>
    d314:	mov	w2, w22
    d318:	ldr	x1, [sp, #104]
    d31c:	mov	x0, x27
    d320:	bl	5010 <mpfr_sqr@plt>
    d324:	mov	w20, w0
    d328:	mov	w2, w22
    d32c:	ldr	x1, [sp, #112]
    d330:	mov	x0, x26
    d334:	bl	5010 <mpfr_sqr@plt>
    d338:	orr	w20, w20, w0
    d33c:	cbz	w20, d414 <mpc_norm@@Base+0x268>
    d340:	mov	x1, x19
    d344:	mov	x0, x28
    d348:	bl	4c80 <mpfr_set_prec@plt>
    d34c:	mov	w3, w22
    d350:	mov	x2, x26
    d354:	mov	x1, x27
    d358:	mov	x0, x28
    d35c:	bl	4e60 <mpfr_add@plt>
    d360:	cmp	w23, #0x1
    d364:	b.gt	d45c <mpc_norm@@Base+0x2b0>
    d368:	cmp	w25, #0x0
    d36c:	ldr	x4, [x24]
    d370:	cinc	x4, x4, eq  // eq = none
    d374:	mov	w3, #0x2                   	// #2
    d378:	mov	w2, w22
    d37c:	sub	x1, x19, #0x2
    d380:	mov	x0, x28
    d384:	bl	5450 <mpfr_can_round@plt>
    d388:	cbnz	w0, d45c <mpc_norm@@Base+0x2b0>
    d38c:	add	w23, w23, #0x1
    d390:	mov	x0, x19
    d394:	bl	4d20 <mpc_ceil_log2@plt>
    d398:	add	x0, x0, #0x3
    d39c:	add	x19, x19, x0
    d3a0:	cmp	w23, #0x1
    d3a4:	b.gt	d2e4 <mpc_norm@@Base+0x138>
    d3a8:	ldr	x0, [x21]
    d3ac:	lsl	x0, x0, #1
    d3b0:	cmp	x0, x19
    d3b4:	csel	x1, x0, x19, le
    d3b8:	str	x1, [sp, #120]
    d3bc:	ldr	x0, [x21, #32]
    d3c0:	lsl	x0, x0, #1
    d3c4:	cmp	x0, x19
    d3c8:	csel	x0, x0, x19, le
    d3cc:	mov	x20, x0
    d3d0:	str	x0, [sp, #128]
    d3d4:	mov	x0, x27
    d3d8:	bl	4c80 <mpfr_set_prec@plt>
    d3dc:	mov	x1, x20
    d3e0:	mov	x0, x26
    d3e4:	bl	4c80 <mpfr_set_prec@plt>
    d3e8:	mov	w2, w22
    d3ec:	ldr	x1, [sp, #104]
    d3f0:	mov	x0, x27
    d3f4:	bl	5010 <mpfr_sqr@plt>
    d3f8:	mov	w20, w0
    d3fc:	mov	w2, w22
    d400:	ldr	x1, [sp, #112]
    d404:	mov	x0, x26
    d408:	bl	5010 <mpfr_sqr@plt>
    d40c:	orr	w20, w20, w0
    d410:	cbnz	w20, d694 <mpc_norm@@Base+0x4e8>
    d414:	mov	w3, w25
    d418:	add	x2, sp, #0xb0
    d41c:	add	x1, sp, #0x90
    d420:	mov	x0, x24
    d424:	bl	4e60 <mpfr_add@plt>
    d428:	mov	w19, w0
    d42c:	ldr	w0, [sp, #136]
    d430:	cbnz	w0, d684 <mpc_norm@@Base+0x4d8>
    d434:	ldr	w0, [sp, #140]
    d438:	cbnz	w0, d68c <mpc_norm@@Base+0x4e0>
    d43c:	add	x0, sp, #0x90
    d440:	bl	4d60 <mpfr_clear@plt>
    d444:	add	x0, sp, #0xb0
    d448:	bl	4d60 <mpfr_clear@plt>
    d44c:	add	x0, sp, #0xd0
    d450:	bl	4d60 <mpfr_clear@plt>
    d454:	ldp	x27, x28, [sp, #80]
    d458:	b	d274 <mpc_norm@@Base+0xc8>
    d45c:	bl	54e0 <mpfr_overflow_p@plt>
    d460:	cbz	w0, d498 <mpc_norm@@Base+0x2ec>
    d464:	mov	w3, #0x0                   	// #0
    d468:	mov	x2, #0x0                   	// #0
    d46c:	mov	x1, #0x1                   	// #1
    d470:	mov	x0, x24
    d474:	bl	5130 <mpfr_set_ui_2exp@plt>
    d478:	bl	5200 <mpfr_get_emax@plt>
    d47c:	mov	w3, w25
    d480:	mov	x2, x0
    d484:	mov	x1, x24
    d488:	mov	x0, x24
    d48c:	bl	4f40 <mpfr_mul_2ui@plt>
    d490:	mov	w19, w0
    d494:	b	d42c <mpc_norm@@Base+0x280>
    d498:	bl	52f0 <mpfr_underflow_p@plt>
    d49c:	cbz	w0, d668 <mpc_norm@@Base+0x4bc>
    d4a0:	bl	5060 <mpfr_get_emin@plt>
    d4a4:	mov	x19, x0
    d4a8:	ldr	x2, [sp, #160]
    d4ac:	cmn	x2, #0x9
    d4b0:	b.lt	d4c4 <mpc_norm@@Base+0x318>  // b.tstop
    d4b4:	ldr	x0, [sp, #120]
    d4b8:	sub	x1, x2, x0, lsl #1
    d4bc:	cmp	x1, x19
    d4c0:	b.gt	d590 <mpc_norm@@Base+0x3e4>
    d4c4:	ldr	x0, [sp, #192]
    d4c8:	cmn	x0, #0x9
    d4cc:	b.lt	d4e0 <mpc_norm@@Base+0x334>  // b.tstop
    d4d0:	ldr	x1, [sp, #128]
    d4d4:	sub	x0, x0, x1, lsl #1
    d4d8:	cmp	x0, x19
    d4dc:	b.gt	d5d0 <mpc_norm@@Base+0x424>
    d4e0:	ldr	x0, [x21, #16]
    d4e4:	neg	x3, x0
    d4e8:	ldr	x1, [x21, #48]
    d4ec:	neg	x4, x1
    d4f0:	and	x20, x0, #0x1
    d4f4:	and	x1, x1, #0x1
    d4f8:	add	x20, x20, x1
    d4fc:	lsr	x0, x4, #1
    d500:	add	x0, x0, x3, lsr #1
    d504:	add	x20, x0, x20, lsr #1
    d508:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
    d50c:	cmp	x2, x0
    d510:	b.eq	d610 <mpc_norm@@Base+0x464>  // b.none
    d514:	add	x0, sp, #0x90
    d518:	mov	w3, #0x0                   	// #0
    d51c:	lsl	x2, x20, #1
    d520:	mov	x1, x0
    d524:	bl	4f40 <mpfr_mul_2ui@plt>
    d528:	ldr	x1, [sp, #192]
    d52c:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
    d530:	cmp	x1, x0
    d534:	b.eq	d63c <mpc_norm@@Base+0x490>  // b.none
    d538:	add	x0, sp, #0xb0
    d53c:	mov	w3, #0x0                   	// #0
    d540:	lsl	x2, x20, #1
    d544:	mov	x1, x0
    d548:	bl	4f40 <mpfr_mul_2ui@plt>
    d54c:	mov	w3, w25
    d550:	add	x2, sp, #0xb0
    d554:	add	x1, sp, #0x90
    d558:	mov	x0, x24
    d55c:	bl	4e60 <mpfr_add@plt>
    d560:	mov	w19, w0
    d564:	bl	4e20 <mpfr_clear_underflow@plt>
    d568:	mov	w3, w25
    d56c:	lsl	x2, x20, #1
    d570:	mov	x1, x24
    d574:	mov	x0, x24
    d578:	bl	5320 <mpfr_div_2ui@plt>
    d57c:	mov	w20, w0
    d580:	bl	52f0 <mpfr_underflow_p@plt>
    d584:	cmp	w0, #0x0
    d588:	csel	w19, w19, w20, eq  // eq = none
    d58c:	b	d42c <mpc_norm@@Base+0x280>
    d590:	add	x20, sp, #0xb0
    d594:	mov	x1, #0x1                   	// #1
    d598:	mov	x0, x20
    d59c:	bl	4c80 <mpfr_set_prec@plt>
    d5a0:	mov	w3, #0x1                   	// #1
    d5a4:	sub	x2, x19, #0x1
    d5a8:	mov	x1, #0x1                   	// #1
    d5ac:	mov	x0, x20
    d5b0:	bl	5130 <mpfr_set_ui_2exp@plt>
    d5b4:	mov	w3, w25
    d5b8:	mov	x2, x20
    d5bc:	add	x1, sp, #0x90
    d5c0:	mov	x0, x24
    d5c4:	bl	4e60 <mpfr_add@plt>
    d5c8:	mov	w19, w0
    d5cc:	b	d42c <mpc_norm@@Base+0x280>
    d5d0:	add	x20, sp, #0x90
    d5d4:	mov	x1, #0x1                   	// #1
    d5d8:	mov	x0, x20
    d5dc:	bl	4c80 <mpfr_set_prec@plt>
    d5e0:	mov	w3, #0x1                   	// #1
    d5e4:	sub	x2, x19, #0x1
    d5e8:	mov	x1, #0x1                   	// #1
    d5ec:	mov	x0, x20
    d5f0:	bl	5130 <mpfr_set_ui_2exp@plt>
    d5f4:	mov	w3, w25
    d5f8:	add	x2, sp, #0xb0
    d5fc:	mov	x1, x20
    d600:	mov	x0, x24
    d604:	bl	4e60 <mpfr_add@plt>
    d608:	mov	w19, w0
    d60c:	b	d42c <mpc_norm@@Base+0x280>
    d610:	add	x19, sp, #0x90
    d614:	mov	w3, #0x0                   	// #0
    d618:	mov	x2, x20
    d61c:	mov	x1, x21
    d620:	mov	x0, x19
    d624:	bl	4f40 <mpfr_mul_2ui@plt>
    d628:	mov	w2, #0x0                   	// #0
    d62c:	mov	x1, x19
    d630:	mov	x0, x19
    d634:	bl	5010 <mpfr_sqr@plt>
    d638:	b	d528 <mpc_norm@@Base+0x37c>
    d63c:	add	x19, sp, #0xb0
    d640:	mov	w3, #0x0                   	// #0
    d644:	mov	x2, x20
    d648:	ldr	x1, [sp, #112]
    d64c:	mov	x0, x19
    d650:	bl	4f40 <mpfr_mul_2ui@plt>
    d654:	mov	w2, #0x0                   	// #0
    d658:	mov	x1, x19
    d65c:	mov	x0, x19
    d660:	bl	5010 <mpfr_sqr@plt>
    d664:	b	d54c <mpc_norm@@Base+0x3a0>
    d668:	ldr	w3, [sp, #216]
    d66c:	mov	w2, w25
    d670:	add	x1, sp, #0xd0
    d674:	mov	x0, x24
    d678:	bl	51d0 <mpfr_set4@plt>
    d67c:	mov	w19, w0
    d680:	b	d42c <mpc_norm@@Base+0x280>
    d684:	bl	4990 <mpfr_set_underflow@plt>
    d688:	b	d434 <mpc_norm@@Base+0x288>
    d68c:	bl	5490 <mpfr_set_overflow@plt>
    d690:	b	d43c <mpc_norm@@Base+0x290>
    d694:	mov	x1, x19
    d698:	mov	x0, x28
    d69c:	bl	4c80 <mpfr_set_prec@plt>
    d6a0:	mov	w3, w22
    d6a4:	mov	x2, x26
    d6a8:	mov	x1, x27
    d6ac:	mov	x0, x28
    d6b0:	bl	4e60 <mpfr_add@plt>
    d6b4:	b	d368 <mpc_norm@@Base+0x1bc>

000000000000d6b8 <mpc_out_str@@Base>:
    d6b8:	stp	x29, x30, [sp, #-64]!
    d6bc:	mov	x29, sp
    d6c0:	stp	x19, x20, [sp, #16]
    d6c4:	stp	x21, x22, [sp, #32]
    d6c8:	stp	x23, x24, [sp, #48]
    d6cc:	mov	x19, x0
    d6d0:	mov	w22, w1
    d6d4:	mov	x23, x2
    d6d8:	mov	x24, x3
    d6dc:	mov	w20, w4
    d6e0:	cbz	x0, d760 <mpc_out_str@@Base+0xa8>
    d6e4:	mov	x1, x19
    d6e8:	mov	w0, #0x28                  	// #40
    d6ec:	bl	4ba0 <fputc@plt>
    d6f0:	and	w20, w20, #0xf
    d6f4:	mov	w4, w20
    d6f8:	mov	x3, x24
    d6fc:	mov	x2, x23
    d700:	mov	w1, w22
    d704:	mov	x0, x19
    d708:	bl	5190 <__gmpfr_out_str@plt>
    d70c:	mov	x21, x0
    d710:	mov	x1, x19
    d714:	mov	w0, #0x20                  	// #32
    d718:	bl	4ba0 <fputc@plt>
    d71c:	mov	w4, w20
    d720:	add	x3, x24, #0x20
    d724:	mov	x2, x23
    d728:	mov	w1, w22
    d72c:	mov	x0, x19
    d730:	bl	5190 <__gmpfr_out_str@plt>
    d734:	mov	x20, x0
    d738:	mov	x1, x19
    d73c:	mov	w0, #0x29                  	// #41
    d740:	bl	4ba0 <fputc@plt>
    d744:	add	x0, x21, x20
    d748:	add	x0, x0, #0x3
    d74c:	ldp	x19, x20, [sp, #16]
    d750:	ldp	x21, x22, [sp, #32]
    d754:	ldp	x23, x24, [sp, #48]
    d758:	ldp	x29, x30, [sp], #64
    d75c:	ret
    d760:	adrp	x0, 27000 <mpc_ui_ui_sub@@Base+0x13228>
    d764:	ldr	x0, [x0, #4024]
    d768:	ldr	x19, [x0]
    d76c:	b	d6e4 <mpc_out_str@@Base+0x2c>
    d770:	mov	x3, x0
    d774:	ldr	x0, [x0, #16]
    d778:	add	x1, x1, x0
    d77c:	mov	w0, #0x0                   	// #0
    d780:	cmp	x1, #0x0
    d784:	b.le	d820 <mpc_out_str@@Base+0x168>
    d788:	ldr	x2, [x3]
    d78c:	mov	w0, #0x0                   	// #0
    d790:	cmp	x1, x2
    d794:	b.gt	d820 <mpc_out_str@@Base+0x168>
    d798:	adrp	x0, 27000 <mpc_ui_ui_sub@@Base+0x13228>
    d79c:	ldr	x0, [x0, #4056]
    d7a0:	ldr	w5, [x0]
    d7a4:	sxtw	x0, w5
    d7a8:	sub	x2, x2, #0x1
    d7ac:	sdiv	x2, x2, x0
    d7b0:	madd	x2, x2, x0, x0
    d7b4:	sub	x2, x2, x1
    d7b8:	sdiv	x2, x2, x0
    d7bc:	ldr	x3, [x3, #24]
    d7c0:	sdiv	x4, x1, x0
    d7c4:	msub	x1, x4, x0, x1
    d7c8:	cbnz	x1, d7f8 <mpc_out_str@@Base+0x140>
    d7cc:	ldr	x1, [x3, x2, lsl #3]
    d7d0:	eor	x1, x1, #0x1
    d7d4:	and	w1, w1, #0x1
    d7d8:	mov	w0, #0x0                   	// #0
    d7dc:	cbnz	w1, d820 <mpc_out_str@@Base+0x168>
    d7e0:	subs	x2, x2, #0x1
    d7e4:	b.mi	d81c <mpc_out_str@@Base+0x164>  // b.first
    d7e8:	ldr	x0, [x3, x2, lsl #3]
    d7ec:	cbz	x0, d7e0 <mpc_out_str@@Base+0x128>
    d7f0:	mov	w0, #0x0                   	// #0
    d7f4:	b	d820 <mpc_out_str@@Base+0x168>
    d7f8:	sub	w1, w1, #0x1
    d7fc:	ldr	x0, [x3, x2, lsl #3]
    d800:	lsl	x1, x0, x1
    d804:	sub	w5, w5, #0x1
    d808:	mov	x0, #0x1                   	// #1
    d80c:	lsl	x5, x0, x5
    d810:	cmp	x1, x5
    d814:	cset	w1, ne  // ne = any
    d818:	b	d7d8 <mpc_out_str@@Base+0x120>
    d81c:	mov	w0, #0x1                   	// #1
    d820:	ret
    d824:	stp	x29, x30, [sp, #-80]!
    d828:	mov	x29, sp
    d82c:	stp	x19, x20, [sp, #16]
    d830:	stp	x21, x22, [sp, #32]
    d834:	str	x23, [sp, #48]
    d838:	mov	x21, x0
    d83c:	mov	w22, w1
    d840:	mov	w23, w2
    d844:	mov	x19, x3
    d848:	add	x20, sp, #0x40
    d84c:	mov	x0, x20
    d850:	bl	54a0 <__gmpz_init@plt>
    d854:	mov	x1, x19
    d858:	mov	x0, x20
    d85c:	bl	5470 <mpfr_get_z_2exp@plt>
    d860:	mov	x19, x0
    d864:	mov	x1, #0x0                   	// #0
    d868:	mov	x0, x20
    d86c:	bl	49f0 <__gmpz_scan1@plt>
    d870:	mov	x2, x0
    d874:	add	x19, x0, x19
    d878:	mov	x1, x20
    d87c:	mov	x0, x20
    d880:	bl	5220 <__gmpz_tdiv_q_2exp@plt>
    d884:	mov	w0, #0x0                   	// #0
    d888:	cmp	x19, #0x1
    d88c:	b.le	d8cc <mpc_out_str@@Base+0x214>
    d890:	ldr	x2, [x21, #16]
    d894:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
    d898:	cmp	x2, x1
    d89c:	b.eq	d968 <mpc_out_str@@Base+0x2b0>  // b.none
    d8a0:	ldr	x2, [x21, #48]
    d8a4:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
    d8a8:	cmp	x2, x1
    d8ac:	b.eq	d998 <mpc_out_str@@Base+0x2e0>  // b.none
    d8b0:	add	x0, sp, #0x40
    d8b4:	bl	5180 <__gmpz_clear@plt>
    d8b8:	ldp	x19, x20, [sp, #16]
    d8bc:	ldp	x21, x22, [sp, #32]
    d8c0:	ldr	x23, [sp, #48]
    d8c4:	ldp	x29, x30, [sp], #80
    d8c8:	ret
    d8cc:	b.eq	d954 <mpc_out_str@@Base+0x29c>  // b.none
    d8d0:	cbnz	x19, d8b0 <mpc_out_str@@Base+0x1f8>
    d8d4:	add	x20, sp, #0x40
    d8d8:	mov	x1, #0x1                   	// #1
    d8dc:	mov	x0, x20
    d8e0:	bl	4d30 <__gmpz_tstbit@plt>
    d8e4:	mov	w19, w0
    d8e8:	mov	x1, #0x0                   	// #0
    d8ec:	mov	x0, x20
    d8f0:	bl	4d30 <__gmpz_tstbit@plt>
    d8f4:	add	w0, w0, w19, lsl #1
    d8f8:	mov	w1, #0x4                   	// #4
    d8fc:	sub	w1, w1, w0
    d900:	ldr	w2, [sp, #68]
    d904:	cmp	w2, #0x0
    d908:	csel	w0, w1, w0, lt  // lt = tstop
    d90c:	ldr	x2, [x21, #16]
    d910:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
    d914:	cmp	x2, x1
    d918:	b.ne	d8a0 <mpc_out_str@@Base+0x1e8>  // b.any
    d91c:	and	w1, w0, #0xfffffffd
    d920:	cmp	w1, #0x1
    d924:	b.ne	d968 <mpc_out_str@@Base+0x2b0>  // b.any
    d928:	cmp	w22, #0x0
    d92c:	ccmp	w0, #0x3, #0x0, eq  // eq = none
    d930:	b.eq	d940 <mpc_out_str@@Base+0x288>  // b.none
    d934:	cmp	w0, #0x1
    d938:	ccmp	w22, #0x1, #0x0, eq  // eq = none
    d93c:	b.ne	d8b0 <mpc_out_str@@Base+0x1f8>  // b.any
    d940:	mov	w2, #0x1                   	// #1
    d944:	mov	x1, x21
    d948:	mov	x0, x21
    d94c:	bl	4b80 <mpfr_neg@plt>
    d950:	b	d8b0 <mpc_out_str@@Base+0x1f8>
    d954:	mov	x1, #0x0                   	// #0
    d958:	add	x0, sp, #0x40
    d95c:	bl	4d30 <__gmpz_tstbit@plt>
    d960:	lsl	w0, w0, #1
    d964:	b	d890 <mpc_out_str@@Base+0x1d8>
    d968:	adrp	x4, 15000 <mpc_ui_ui_sub@@Base+0x1228>
    d96c:	add	x4, x4, #0x410
    d970:	mov	w3, #0x89                  	// #137
    d974:	adrp	x2, 15000 <mpc_ui_ui_sub@@Base+0x1228>
    d978:	add	x2, x2, #0x430
    d97c:	adrp	x1, 15000 <mpc_ui_ui_sub@@Base+0x1228>
    d980:	add	x1, x1, #0x238
    d984:	adrp	x0, 27000 <mpc_ui_ui_sub@@Base+0x13228>
    d988:	ldr	x0, [x0, #4008]
    d98c:	ldr	x0, [x0]
    d990:	bl	55a0 <fprintf@plt>
    d994:	bl	5000 <abort@plt>
    d998:	tst	w0, #0xfffffffd
    d99c:	b.ne	d9cc <mpc_out_str@@Base+0x314>  // b.any
    d9a0:	cmp	w0, #0x0
    d9a4:	ccmp	w23, w22, #0x0, eq  // eq = none
    d9a8:	b.eq	d9b8 <mpc_out_str@@Base+0x300>  // b.none
    d9ac:	cmp	w0, #0x2
    d9b0:	ccmp	w23, w22, #0x4, eq  // eq = none
    d9b4:	b.eq	d8b0 <mpc_out_str@@Base+0x1f8>  // b.none
    d9b8:	add	x0, x21, #0x20
    d9bc:	mov	w2, #0x1                   	// #1
    d9c0:	mov	x1, x0
    d9c4:	bl	4b80 <mpfr_neg@plt>
    d9c8:	b	d8b0 <mpc_out_str@@Base+0x1f8>
    d9cc:	adrp	x4, 15000 <mpc_ui_ui_sub@@Base+0x1228>
    d9d0:	add	x4, x4, #0x438
    d9d4:	mov	w3, #0x93                  	// #147
    d9d8:	adrp	x2, 15000 <mpc_ui_ui_sub@@Base+0x1228>
    d9dc:	add	x2, x2, #0x430
    d9e0:	adrp	x1, 15000 <mpc_ui_ui_sub@@Base+0x1228>
    d9e4:	add	x1, x1, #0x238
    d9e8:	adrp	x0, 27000 <mpc_ui_ui_sub@@Base+0x13228>
    d9ec:	ldr	x0, [x0, #4008]
    d9f0:	ldr	x0, [x0]
    d9f4:	bl	55a0 <fprintf@plt>
    d9f8:	bl	5000 <abort@plt>

000000000000d9fc <mpc_pow@@Base>:
    d9fc:	sub	sp, sp, #0x240
    da00:	stp	x29, x30, [sp]
    da04:	mov	x29, sp
    da08:	stp	x23, x24, [sp, #48]
    da0c:	stp	x25, x26, [sp, #64]
    da10:	str	x0, [sp, #112]
    da14:	mov	x24, x1
    da18:	mov	x25, x2
    da1c:	str	w3, [sp, #152]
    da20:	bl	52f0 <mpfr_underflow_p@plt>
    da24:	str	w0, [sp, #184]
    da28:	bl	54e0 <mpfr_overflow_p@plt>
    da2c:	str	w0, [sp, #188]
    da30:	ldr	x0, [x24, #48]
    da34:	str	x0, [sp, #168]
    da38:	ldr	x0, [x25, #48]
    da3c:	mov	x1, x0
    da40:	str	x0, [sp, #160]
    da44:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
    da48:	cmp	x1, x0
    da4c:	b.ne	da5c <mpc_pow@@Base+0x60>  // b.any
    da50:	ldr	x1, [x25, #16]
    da54:	cmp	x1, x0
    da58:	b.eq	daec <mpc_pow@@Base+0xf0>  // b.none
    da5c:	stp	x19, x20, [sp, #16]
    da60:	str	x24, [sp, #192]
    da64:	mov	x0, x24
    da68:	bl	54d0 <mpfr_number_p@plt>
    da6c:	cbz	w0, da80 <mpc_pow@@Base+0x84>
    da70:	add	x0, x24, #0x20
    da74:	str	x0, [sp, #200]
    da78:	bl	54d0 <mpfr_number_p@plt>
    da7c:	cbnz	w0, dbf4 <mpc_pow@@Base+0x1f8>
    da80:	add	x19, sp, #0x1c0
    da84:	mov	x1, #0x2                   	// #2
    da88:	mov	x0, x19
    da8c:	bl	4cf0 <mpc_init2@plt>
    da90:	mov	w2, #0x0                   	// #0
    da94:	mov	x1, x24
    da98:	mov	x0, x19
    da9c:	bl	4db0 <mpc_log@plt>
    daa0:	mov	w3, #0x0                   	// #0
    daa4:	mov	x2, x25
    daa8:	mov	x1, x19
    daac:	mov	x0, x19
    dab0:	bl	4ed0 <mpc_mul@plt>
    dab4:	ldr	w2, [sp, #152]
    dab8:	mov	x1, x19
    dabc:	ldr	x0, [sp, #112]
    dac0:	bl	52a0 <mpc_exp@plt>
    dac4:	str	w0, [sp, #108]
    dac8:	mov	x0, x19
    dacc:	bl	4a10 <mpc_clear@plt>
    dad0:	ldp	x19, x20, [sp, #16]
    dad4:	ldr	w0, [sp, #108]
    dad8:	ldp	x23, x24, [sp, #48]
    dadc:	ldp	x25, x26, [sp, #64]
    dae0:	ldp	x29, x30, [sp]
    dae4:	add	sp, sp, #0x240
    dae8:	ret
    daec:	ldr	x1, [sp, #168]
    daf0:	cmp	x1, x0
    daf4:	b.ne	db04 <mpc_pow@@Base+0x108>  // b.any
    daf8:	ldr	x1, [x24, #16]
    dafc:	cmp	x1, x0
    db00:	b.eq	db98 <mpc_pow@@Base+0x19c>  // b.none
    db04:	stp	x19, x20, [sp, #16]
    db08:	add	x20, sp, #0x1a0
    db0c:	mov	x0, x20
    db10:	bl	4aa0 <mpfr_init@plt>
    db14:	mov	w2, #0x0                   	// #0
    db18:	mov	x1, x24
    db1c:	mov	x0, x20
    db20:	bl	4ea0 <mpc_norm@plt>
    db24:	mov	w19, w0
    db28:	mov	x2, #0x0                   	// #0
    db2c:	mov	x1, #0x1                   	// #1
    db30:	mov	x0, x20
    db34:	bl	4cb0 <mpfr_cmp_ui_2exp@plt>
    db38:	cmp	w0, #0x0
    db3c:	ccmp	w19, #0x0, #0x4, eq  // eq = none
    db40:	csneg	w19, w0, w19, eq  // eq = none
    db44:	tbnz	w19, #31, dbb4 <mpc_pow@@Base+0x1b8>
    db48:	cbnz	w19, dbc0 <mpc_pow@@Base+0x1c4>
    db4c:	ldr	w1, [x24, #40]
    db50:	ldr	w0, [x25, #8]
    db54:	lsr	w0, w0, #31
    db58:	cmp	w0, w1, lsr #31
    db5c:	b.eq	dbc8 <mpc_pow@@Base+0x1cc>  // b.none
    db60:	ldr	w3, [sp, #152]
    db64:	mov	x2, #0x0                   	// #0
    db68:	mov	x1, #0x1                   	// #1
    db6c:	ldr	x0, [sp, #112]
    db70:	bl	5040 <mpc_set_ui_ui@plt>
    db74:	str	w0, [sp, #108]
    db78:	mov	w2, #0x0                   	// #0
    db7c:	ldr	x0, [sp, #112]
    db80:	mov	x1, x0
    db84:	bl	4f60 <mpc_conj@plt>
    db88:	add	x0, sp, #0x1a0
    db8c:	bl	4d60 <mpfr_clear@plt>
    db90:	ldp	x19, x20, [sp, #16]
    db94:	b	dad4 <mpc_pow@@Base+0xd8>
    db98:	mov	w3, #0x0                   	// #0
    db9c:	mov	x2, #0x0                   	// #0
    dba0:	mov	x1, #0x1                   	// #1
    dba4:	ldr	x0, [sp, #112]
    dba8:	bl	5040 <mpc_set_ui_ui@plt>
    dbac:	str	wzr, [sp, #108]
    dbb0:	b	dad4 <mpc_pow@@Base+0xd8>
    dbb4:	ldr	w0, [x25, #40]
    dbb8:	tbz	w0, #31, db60 <mpc_pow@@Base+0x164>
    dbbc:	b	dbc8 <mpc_pow@@Base+0x1cc>
    dbc0:	ldr	w0, [x25, #40]
    dbc4:	tbnz	w0, #31, db60 <mpc_pow@@Base+0x164>
    dbc8:	ldr	w19, [sp, #152]
    dbcc:	mov	w3, w19
    dbd0:	mov	x2, #0x0                   	// #0
    dbd4:	mov	x1, #0x1                   	// #1
    dbd8:	ldr	x0, [sp, #112]
    dbdc:	bl	5040 <mpc_set_ui_ui@plt>
    dbe0:	str	w0, [sp, #108]
    dbe4:	asr	w3, w19, #4
    dbe8:	cmp	w3, #0x3
    dbec:	b.ne	db88 <mpc_pow@@Base+0x18c>  // b.any
    dbf0:	b	db78 <mpc_pow@@Base+0x17c>
    dbf4:	str	x25, [sp, #216]
    dbf8:	mov	x0, x25
    dbfc:	bl	54d0 <mpfr_number_p@plt>
    dc00:	cbz	w0, da80 <mpc_pow@@Base+0x84>
    dc04:	add	x0, x25, #0x20
    dc08:	bl	54d0 <mpfr_number_p@plt>
    dc0c:	cbz	w0, da80 <mpc_pow@@Base+0x84>
    dc10:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
    dc14:	ldr	x1, [sp, #160]
    dc18:	cmp	x1, x0
    dc1c:	cset	w1, eq  // eq = none
    dc20:	str	w1, [sp, #296]
    dc24:	ldr	x1, [sp, #168]
    dc28:	cmp	x1, x0
    dc2c:	b.ne	de3c <mpc_pow@@Base+0x440>  // b.any
    dc30:	ldr	x1, [x24, #16]
    dc34:	cmp	x1, x0
    dc38:	b.eq	dcdc <mpc_pow@@Base+0x2e0>  // b.none
    dc3c:	mov	x2, #0x0                   	// #0
    dc40:	mov	x1, #0x1                   	// #1
    dc44:	mov	x0, x24
    dc48:	bl	4cb0 <mpfr_cmp_ui_2exp@plt>
    dc4c:	cbz	w0, dd34 <mpc_pow@@Base+0x338>
    dc50:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
    dc54:	ldr	x1, [sp, #160]
    dc58:	cmp	x1, x0
    dc5c:	b.eq	dd90 <mpc_pow@@Base+0x394>  // b.none
    dc60:	stp	x21, x22, [sp, #32]
    dc64:	stp	x27, x28, [sp, #80]
    dc68:	mov	x2, #0x0                   	// #0
    dc6c:	mov	x1, #0xffffffffffffffff    	// #-1
    dc70:	mov	x0, x24
    dc74:	bl	4fe0 <mpfr_cmp_si_2exp@plt>
    dc78:	str	wzr, [sp, #176]
    dc7c:	cbz	w0, de24 <mpc_pow@@Base+0x428>
    dc80:	mov	x0, x24
    dc84:	bl	51f0 <mpfr_sgn@plt>
    dc88:	str	wzr, [sp, #156]
    dc8c:	tbz	w0, #31, de9c <mpc_pow@@Base+0x4a0>
    dc90:	mov	x1, #0x1                   	// #1
    dc94:	mov	x0, x25
    dc98:	bl	d770 <mpc_out_str@@Base+0xb8>
    dc9c:	str	w0, [sp, #156]
    dca0:	cbz	w0, de9c <mpc_pow@@Base+0x4a0>
    dca4:	mov	w0, #0x1                   	// #1
    dca8:	str	w0, [sp, #156]
    dcac:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
    dcb0:	ldr	x1, [sp, #160]
    dcb4:	cmp	x1, x0
    dcb8:	b.eq	de9c <mpc_pow@@Base+0x4a0>  // b.none
    dcbc:	mov	x2, #0x0                   	// #0
    dcc0:	mov	x1, #0xffffffffffffffff    	// #-1
    dcc4:	mov	x0, x24
    dcc8:	bl	4fe0 <mpfr_cmp_si_2exp@plt>
    dccc:	cmp	w0, #0x0
    dcd0:	cset	w0, eq  // eq = none
    dcd4:	str	w0, [sp, #156]
    dcd8:	b	de9c <mpc_pow@@Base+0x4a0>
    dcdc:	add	x19, sp, #0x1c0
    dce0:	mov	x1, #0x2                   	// #2
    dce4:	mov	x0, x19
    dce8:	bl	4cf0 <mpc_init2@plt>
    dcec:	mov	w2, #0x0                   	// #0
    dcf0:	mov	x1, x24
    dcf4:	mov	x0, x19
    dcf8:	bl	4db0 <mpc_log@plt>
    dcfc:	mov	w3, #0x0                   	// #0
    dd00:	mov	x2, x25
    dd04:	mov	x1, x19
    dd08:	mov	x0, x19
    dd0c:	bl	4ed0 <mpc_mul@plt>
    dd10:	ldr	w2, [sp, #152]
    dd14:	mov	x1, x19
    dd18:	ldr	x0, [sp, #112]
    dd1c:	bl	52a0 <mpc_exp@plt>
    dd20:	str	w0, [sp, #108]
    dd24:	mov	x0, x19
    dd28:	bl	4a10 <mpc_clear@plt>
    dd2c:	ldp	x19, x20, [sp, #16]
    dd30:	b	dad4 <mpc_pow@@Base+0xd8>
    dd34:	stp	x21, x22, [sp, #32]
    dd38:	ldr	w20, [x25, #8]
    dd3c:	lsr	w20, w20, #31
    dd40:	ldr	w19, [x24, #40]
    dd44:	lsr	w19, w19, #31
    dd48:	ldr	w22, [sp, #152]
    dd4c:	mov	w2, w22
    dd50:	mov	x1, #0x1                   	// #1
    dd54:	ldr	x21, [sp, #112]
    dd58:	mov	x0, x21
    dd5c:	bl	4ce0 <mpc_set_ui@plt>
    dd60:	str	w0, [sp, #108]
    dd64:	asr	w0, w22, #4
    dd68:	cmp	w0, #0x3
    dd6c:	ccmp	w20, w19, #0x0, ne  // ne = any
    dd70:	b.eq	ef50 <mpc_pow@@Base+0x1554>  // b.none
    dd74:	mov	w2, #0x0                   	// #0
    dd78:	mov	x1, x21
    dd7c:	mov	x0, x21
    dd80:	bl	4f60 <mpc_conj@plt>
    dd84:	ldp	x19, x20, [sp, #16]
    dd88:	ldp	x21, x22, [sp, #32]
    dd8c:	b	dad4 <mpc_pow@@Base+0xd8>
    dd90:	mov	x0, x25
    dd94:	bl	4e30 <mpfr_integer_p@plt>
    dd98:	cbnz	w0, dda8 <mpc_pow@@Base+0x3ac>
    dd9c:	mov	x0, x24
    dda0:	bl	51f0 <mpfr_sgn@plt>
    dda4:	tbnz	w0, #31, dc60 <mpc_pow@@Base+0x264>
    dda8:	ldr	w20, [x25, #8]
    ddac:	lsr	w20, w20, #31
    ddb0:	ldr	w19, [x24, #40]
    ddb4:	lsr	w19, w19, #31
    ddb8:	ldr	w0, [sp, #152]
    ddbc:	and	w3, w0, #0xf
    ddc0:	mov	x2, x25
    ddc4:	mov	x1, x24
    ddc8:	ldr	x0, [sp, #112]
    ddcc:	bl	4b90 <mpfr_pow@plt>
    ddd0:	mov	w1, #0x2                   	// #2
    ddd4:	str	w1, [sp, #108]
    ddd8:	tbnz	w0, #31, dde8 <mpc_pow@@Base+0x3ec>
    dddc:	cmp	w0, #0x0
    dde0:	cset	w0, ne  // ne = any
    dde4:	str	w0, [sp, #108]
    dde8:	ldr	x3, [sp, #112]
    ddec:	mov	w1, #0x1                   	// #1
    ddf0:	str	w1, [x3, #40]
    ddf4:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
    ddf8:	str	x1, [x3, #48]
    ddfc:	ldr	w0, [sp, #152]
    de00:	asr	w2, w0, #4
    de04:	cmp	w2, #0x3
    de08:	ccmp	w20, w19, #0x0, ne  // ne = any
    de0c:	b.eq	ef5c <mpc_pow@@Base+0x1560>  // b.none
    de10:	add	x0, x3, #0x20
    de14:	mov	x1, x0
    de18:	bl	4b80 <mpfr_neg@plt>
    de1c:	ldp	x19, x20, [sp, #16]
    de20:	b	dad4 <mpc_pow@@Base+0xd8>
    de24:	mov	x0, x25
    de28:	bl	4e30 <mpfr_integer_p@plt>
    de2c:	cmp	w0, #0x0
    de30:	cset	w0, ne  // ne = any
    de34:	str	w0, [sp, #176]
    de38:	b	dc80 <mpc_pow@@Base+0x284>
    de3c:	stp	x21, x22, [sp, #32]
    de40:	stp	x27, x28, [sp, #80]
    de44:	mov	x2, #0x1                   	// #1
    de48:	mov	x1, #0x0                   	// #0
    de4c:	mov	x0, x24
    de50:	bl	5310 <mpc_cmp_si_si@plt>
    de54:	cbz	w0, de6c <mpc_pow@@Base+0x470>
    de58:	mov	x2, #0xffffffffffffffff    	// #-1
    de5c:	mov	x1, #0x0                   	// #0
    de60:	mov	x0, x24
    de64:	bl	5310 <mpc_cmp_si_si@plt>
    de68:	cbnz	w0, df58 <mpc_pow@@Base+0x55c>
    de6c:	mov	x0, x25
    de70:	bl	4e30 <mpfr_integer_p@plt>
    de74:	cbnz	w0, df74 <mpc_pow@@Base+0x578>
    de78:	ldr	x1, [sp, #200]
    de7c:	mov	x0, x24
    de80:	bl	53b0 <mpfr_cmpabs@plt>
    de84:	cmp	w0, #0x0
    de88:	str	wzr, [sp, #156]
    de8c:	str	wzr, [sp, #176]
    de90:	ldr	w0, [sp, #296]
    de94:	ccmp	w0, #0x0, #0x4, eq  // eq = none
    de98:	b.ne	df94 <mpc_pow@@Base+0x598>  // b.any
    de9c:	ldr	x21, [sp, #112]
    dea0:	ldr	x20, [x21]
    dea4:	ldr	x19, [x21, #32]
    dea8:	cmp	x20, x19
    deac:	csel	x0, x20, x19, ge  // ge = tcont
    deb0:	add	x0, x0, #0xc
    deb4:	cmp	x0, #0x40
    deb8:	mov	x1, #0x40                  	// #64
    debc:	csel	x28, x0, x1, ge  // ge = tcont
    dec0:	mov	x1, x28
    dec4:	add	x0, sp, #0x1c0
    dec8:	bl	4cf0 <mpc_init2@plt>
    decc:	mov	x1, x28
    ded0:	add	x0, sp, #0x200
    ded4:	bl	4cf0 <mpc_init2@plt>
    ded8:	ldr	w0, [sp, #152]
    dedc:	ands	w1, w0, #0xf
    dee0:	str	w1, [sp, #304]
    dee4:	cinc	x1, x20, eq  // eq = none
    dee8:	str	x1, [sp, #248]
    deec:	asr	w0, w0, #4
    def0:	str	w0, [sp, #300]
    def4:	cmp	w0, #0x0
    def8:	cinc	x0, x19, eq  // eq = none
    defc:	str	x0, [sp, #240]
    df00:	ldr	x0, [x21]
    df04:	ldr	x1, [x21, #32]
    df08:	cmp	x1, x0
    df0c:	csel	x0, x1, x0, ge  // ge = tcont
    df10:	str	x0, [sp, #224]
    df14:	ldr	x1, [x24, #16]
    df18:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
    df1c:	cmp	x1, x0
    df20:	cset	w0, eq  // eq = none
    df24:	str	w0, [sp, #316]
    df28:	mov	w0, #0xfffffffe            	// #-2
    df2c:	str	w0, [sp, #108]
    df30:	add	x26, sp, #0x200
    df34:	add	x22, sp, #0x1c0
    df38:	add	x0, sp, #0x140
    df3c:	str	x0, [sp, #232]
    df40:	add	x27, sp, #0x150
    df44:	add	x0, x22, #0x20
    df48:	str	x0, [sp, #208]
    df4c:	str	x24, [sp, #136]
    df50:	str	x25, [sp, #144]
    df54:	b	e234 <mpc_pow@@Base+0x838>
    df58:	mov	x0, x24
    df5c:	bl	51f0 <mpfr_sgn@plt>
    df60:	cmp	w0, #0x0
    df64:	ldr	w0, [sp, #296]
    df68:	ccmp	w0, #0x0, #0x4, eq  // eq = none
    df6c:	b.eq	de78 <mpc_pow@@Base+0x47c>  // b.none
    df70:	b	de6c <mpc_pow@@Base+0x470>
    df74:	mov	x1, #0x0                   	// #0
    df78:	mov	x0, x25
    df7c:	bl	d770 <mpc_out_str@@Base+0xb8>
    df80:	str	w0, [sp, #156]
    df84:	cbnz	w0, dfe8 <mpc_pow@@Base+0x5ec>
    df88:	mov	w0, #0x1                   	// #1
    df8c:	str	w0, [sp, #176]
    df90:	b	de9c <mpc_pow@@Base+0x4a0>
    df94:	mov	x0, x25
    df98:	bl	4e30 <mpfr_integer_p@plt>
    df9c:	str	w0, [sp, #176]
    dfa0:	str	w0, [sp, #156]
    dfa4:	cbz	w0, de9c <mpc_pow@@Base+0x4a0>
    dfa8:	mov	x1, #0x0                   	// #0
    dfac:	mov	x0, x25
    dfb0:	bl	d770 <mpc_out_str@@Base+0xb8>
    dfb4:	str	w0, [sp, #176]
    dfb8:	cbz	w0, dfc8 <mpc_pow@@Base+0x5cc>
    dfbc:	str	wzr, [sp, #156]
    dfc0:	str	wzr, [sp, #176]
    dfc4:	b	de9c <mpc_pow@@Base+0x4a0>
    dfc8:	mov	x1, #0xffffffffffffffff    	// #-1
    dfcc:	mov	x0, x25
    dfd0:	bl	d770 <mpc_out_str@@Base+0xb8>
    dfd4:	str	w0, [sp, #156]
    dfd8:	cbnz	w0, dff8 <mpc_pow@@Base+0x5fc>
    dfdc:	mov	w0, #0x1                   	// #1
    dfe0:	str	w0, [sp, #176]
    dfe4:	b	de9c <mpc_pow@@Base+0x4a0>
    dfe8:	mov	w0, #0x1                   	// #1
    dfec:	str	w0, [sp, #156]
    dff0:	str	wzr, [sp, #176]
    dff4:	b	de9c <mpc_pow@@Base+0x4a0>
    dff8:	mov	w0, #0x1                   	// #1
    dffc:	str	w0, [sp, #156]
    e000:	b	de9c <mpc_pow@@Base+0x4a0>
    e004:	add	x28, x28, #0x40
    e008:	b	e21c <mpc_pow@@Base+0x820>
    e00c:	mov	w2, #0x0                   	// #0
    e010:	add	x1, sp, #0x1c0
    e014:	ldr	x0, [sp, #112]
    e018:	bl	5580 <mpc_set@plt>
    e01c:	and	w0, w19, #0x3
    e020:	mov	w20, #0xffffffff            	// #-1
    e024:	cmp	w0, #0x2
    e028:	b.eq	e034 <mpc_pow@@Base+0x638>  // b.none
    e02c:	cmp	w0, #0x0
    e030:	cset	w20, ne  // ne = any
    e034:	asr	w19, w19, #2
    e038:	mov	w22, #0xffffffff            	// #-1
    e03c:	cmp	w19, #0x2
    e040:	b.eq	e04c <mpc_pow@@Base+0x650>  // b.none
    e044:	cmp	w19, #0x0
    e048:	cset	w22, ne  // ne = any
    e04c:	ldr	x0, [sp, #112]
    e050:	ldr	x1, [x0, #16]
    e054:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
    e058:	cmp	x1, x0
    e05c:	b.eq	e0cc <mpc_pow@@Base+0x6d0>  // b.none
    e060:	ldr	x0, [sp, #112]
    e064:	ldr	x1, [x0, #48]
    e068:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
    e06c:	cmp	x1, x0
    e070:	b.eq	e0e0 <mpc_pow@@Base+0x6e4>  // b.none
    e074:	mov	w0, #0x2                   	// #2
    e078:	tbnz	w20, #31, e084 <mpc_pow@@Base+0x688>
    e07c:	cmp	w20, #0x0
    e080:	cset	w0, ne  // ne = any
    e084:	tbnz	w22, #31, e0f8 <mpc_pow@@Base+0x6fc>
    e088:	cmp	w22, #0x0
    e08c:	mov	w1, #0x4                   	// #4
    e090:	csel	w22, w22, w1, eq  // eq = none
    e094:	orr	w0, w0, w22
    e098:	str	w0, [sp, #108]
    e09c:	add	x0, sp, #0x200
    e0a0:	bl	4a10 <mpc_clear@plt>
    e0a4:	add	x0, sp, #0x1c0
    e0a8:	bl	4a10 <mpc_clear@plt>
    e0ac:	ldr	w0, [sp, #184]
    e0b0:	cbnz	w0, edf8 <mpc_pow@@Base+0x13fc>
    e0b4:	ldr	w0, [sp, #188]
    e0b8:	cbnz	w0, ee00 <mpc_pow@@Base+0x1404>
    e0bc:	ldp	x19, x20, [sp, #16]
    e0c0:	ldp	x21, x22, [sp, #32]
    e0c4:	ldp	x27, x28, [sp, #80]
    e0c8:	b	dad4 <mpc_pow@@Base+0xd8>
    e0cc:	ldr	w1, [sp, #304]
    e0d0:	ldr	x0, [sp, #112]
    e0d4:	bl	4dd0 <mpc_fix_inf@plt>
    e0d8:	mov	w20, w0
    e0dc:	b	e060 <mpc_pow@@Base+0x664>
    e0e0:	ldr	w1, [sp, #300]
    e0e4:	ldr	x0, [sp, #112]
    e0e8:	add	x0, x0, #0x20
    e0ec:	bl	4dd0 <mpc_fix_inf@plt>
    e0f0:	mov	w22, w0
    e0f4:	b	e074 <mpc_pow@@Base+0x678>
    e0f8:	mov	w22, #0x8                   	// #8
    e0fc:	b	e094 <mpc_pow@@Base+0x698>
    e100:	ldr	x0, [sp, #496]
    e104:	mov	x1, x0
    e108:	mov	x2, #0x8000000000000001    	// #-9223372036854775807
    e10c:	cmp	x0, x2
    e110:	b.ne	e118 <mpc_pow@@Base+0x71c>  // b.any
    e114:	mov	x1, x0
    e118:	sub	x0, x1, x0
    e11c:	str	x0, [sp, #128]
    e120:	str	xzr, [sp, #120]
    e124:	b	e2dc <mpc_pow@@Base+0x8e0>
    e128:	sub	x1, x28, x20
    e12c:	sub	x1, x1, #0x3
    e130:	ldr	x4, [sp, #248]
    e134:	mov	w3, #0x1                   	// #1
    e138:	mov	w2, #0x0                   	// #0
    e13c:	ldr	x0, [sp, #128]
    e140:	sub	x1, x1, x0
    e144:	mov	x0, x22
    e148:	bl	5450 <mpfr_can_round@plt>
    e14c:	cbz	w0, e2f8 <mpc_pow@@Base+0x8fc>
    e150:	ldr	w0, [sp, #176]
    e154:	cbnz	w0, ee14 <mpc_pow@@Base+0x1418>
    e158:	add	x0, x20, #0x3
    e15c:	ldr	x1, [sp, #120]
    e160:	add	x0, x0, x1
    e164:	cmp	x0, x28
    e168:	b.lt	e1b0 <mpc_pow@@Base+0x7b4>  // b.tstop
    e16c:	ldr	w0, [sp, #156]
    e170:	cbz	w0, ef40 <mpc_pow@@Base+0x1544>
    e174:	ldr	x0, [sp, #208]
    e178:	bl	54d0 <mpfr_number_p@plt>
    e17c:	cbnz	w0, e208 <mpc_pow@@Base+0x80c>
    e180:	adrp	x4, 15000 <mpc_ui_ui_sub@@Base+0x1228>
    e184:	add	x4, x4, #0x488
    e188:	mov	w3, #0x2d8                 	// #728
    e18c:	adrp	x2, 15000 <mpc_ui_ui_sub@@Base+0x1228>
    e190:	add	x2, x2, #0x430
    e194:	adrp	x1, 15000 <mpc_ui_ui_sub@@Base+0x1228>
    e198:	add	x1, x1, #0x238
    e19c:	adrp	x0, 27000 <mpc_ui_ui_sub@@Base+0x13228>
    e1a0:	ldr	x0, [x0, #4008]
    e1a4:	ldr	x0, [x0]
    e1a8:	bl	55a0 <fprintf@plt>
    e1ac:	bl	5000 <abort@plt>
    e1b0:	sub	x1, x28, x20
    e1b4:	sub	x1, x1, #0x3
    e1b8:	ldr	x4, [sp, #240]
    e1bc:	mov	w3, #0x1                   	// #1
    e1c0:	mov	w2, #0x0                   	// #0
    e1c4:	ldr	x0, [sp, #120]
    e1c8:	sub	x1, x1, x0
    e1cc:	ldr	x0, [sp, #208]
    e1d0:	bl	5450 <mpfr_can_round@plt>
    e1d4:	cbz	w0, e16c <mpc_pow@@Base+0x770>
    e1d8:	ldr	x24, [sp, #136]
    e1dc:	ldr	x25, [sp, #144]
    e1e0:	ldr	w0, [sp, #156]
    e1e4:	cbnz	w0, ed38 <mpc_pow@@Base+0x133c>
    e1e8:	ldr	w2, [sp, #152]
    e1ec:	add	x1, sp, #0x1c0
    e1f0:	ldr	x0, [sp, #112]
    e1f4:	bl	5580 <mpc_set@plt>
    e1f8:	str	w0, [sp, #108]
    e1fc:	b	e09c <mpc_pow@@Base+0x6a0>
    e200:	ldr	w0, [sp, #176]
    e204:	cbz	w0, e174 <mpc_pow@@Base+0x778>
    e208:	ldr	w0, [sp, #108]
    e20c:	cmn	w0, #0x2
    e210:	b.eq	e334 <mpc_pow@@Base+0x938>  // b.none
    e214:	add	x0, x28, x28, lsr #63
    e218:	add	x28, x28, x0, asr #1
    e21c:	mov	x1, x28
    e220:	mov	x0, x26
    e224:	bl	4c00 <mpc_set_prec@plt>
    e228:	mov	x1, x28
    e22c:	mov	x0, x22
    e230:	bl	4c00 <mpc_set_prec@plt>
    e234:	mov	w2, #0x0                   	// #0
    e238:	ldr	x1, [sp, #136]
    e23c:	mov	x0, x26
    e240:	bl	4db0 <mpc_log@plt>
    e244:	mov	w3, #0x0                   	// #0
    e248:	ldr	x2, [sp, #144]
    e24c:	mov	x1, x26
    e250:	mov	x0, x26
    e254:	bl	4ed0 <mpc_mul@plt>
    e258:	ldr	x0, [sp, #560]
    e25c:	ldr	x20, [sp, #528]
    e260:	cmp	x20, x0
    e264:	csel	x20, x20, x0, ge  // ge = tcont
    e268:	cmp	x20, #0x0
    e26c:	csel	x20, x20, xzr, ge  // ge = tcont
    e270:	cmp	x28, x20
    e274:	b.le	e004 <mpc_pow@@Base+0x608>
    e278:	bl	4a50 <mpfr_clear_overflow@plt>
    e27c:	bl	4e20 <mpfr_clear_underflow@plt>
    e280:	mov	w2, #0x0                   	// #0
    e284:	mov	x1, x26
    e288:	mov	x0, x22
    e28c:	bl	52a0 <mpc_exp@plt>
    e290:	mov	w19, w0
    e294:	bl	52f0 <mpfr_underflow_p@plt>
    e298:	cbnz	w0, e00c <mpc_pow@@Base+0x610>
    e29c:	bl	54e0 <mpfr_overflow_p@plt>
    e2a0:	str	w0, [sp, #180]
    e2a4:	cbnz	w0, e00c <mpc_pow@@Base+0x610>
    e2a8:	ldr	x0, [sp, #464]
    e2ac:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
    e2b0:	cmp	x0, x1
    e2b4:	b.eq	e100 <mpc_pow@@Base+0x704>  // b.none
    e2b8:	ldr	x1, [sp, #496]
    e2bc:	mov	x2, #0x8000000000000001    	// #-9223372036854775807
    e2c0:	cmp	x1, x2
    e2c4:	b.eq	e114 <mpc_pow@@Base+0x718>  // b.none
    e2c8:	cmp	x0, x1
    e2cc:	b.le	e118 <mpc_pow@@Base+0x71c>
    e2d0:	sub	x0, x0, x1
    e2d4:	str	x0, [sp, #120]
    e2d8:	str	xzr, [sp, #128]
    e2dc:	ldr	w0, [sp, #156]
    e2e0:	cbnz	w0, e150 <mpc_pow@@Base+0x754>
    e2e4:	add	x0, x20, #0x3
    e2e8:	ldr	x1, [sp, #128]
    e2ec:	add	x0, x0, x1
    e2f0:	cmp	x0, x28
    e2f4:	b.lt	e128 <mpc_pow@@Base+0x72c>  // b.tstop
    e2f8:	mov	x0, x22
    e2fc:	bl	54d0 <mpfr_number_p@plt>
    e300:	cbnz	w0, e200 <mpc_pow@@Base+0x804>
    e304:	adrp	x4, 15000 <mpc_ui_ui_sub@@Base+0x1228>
    e308:	add	x4, x4, #0x458
    e30c:	mov	w3, #0x2d6                 	// #726
    e310:	adrp	x2, 15000 <mpc_ui_ui_sub@@Base+0x1228>
    e314:	add	x2, x2, #0x430
    e318:	adrp	x1, 15000 <mpc_ui_ui_sub@@Base+0x1228>
    e31c:	add	x1, x1, #0x238
    e320:	adrp	x0, 27000 <mpc_ui_ui_sub@@Base+0x13228>
    e324:	ldr	x0, [x0, #4008]
    e328:	ldr	x0, [x0]
    e32c:	bl	55a0 <fprintf@plt>
    e330:	bl	5000 <abort@plt>
    e334:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
    e338:	ldr	x1, [sp, #160]
    e33c:	cmp	x1, x0
    e340:	b.eq	e35c <mpc_pow@@Base+0x960>  // b.none
    e344:	ldr	x0, [sp, #128]
    e348:	ldr	x1, [sp, #120]
    e34c:	add	x0, x0, x1
    e350:	add	x0, x0, #0x40
    e354:	add	x28, x28, x0
    e358:	b	e21c <mpc_pow@@Base+0x820>
    e35c:	ldr	x0, [sp, #224]
    e360:	lsl	x0, x0, #1
    e364:	str	x0, [sp, #224]
    e368:	ldr	x0, [sp, #136]
    e36c:	ldr	w1, [x0, #8]
    e370:	str	w1, [sp, #308]
    e374:	ldr	w1, [x0, #40]
    e378:	str	w1, [sp, #312]
    e37c:	ldr	x0, [x0, #16]
    e380:	str	x0, [sp, #264]
    e384:	ldr	x1, [sp, #216]
    e388:	ldr	x0, [sp, #112]
    e38c:	cmp	x1, x0
    e390:	b.eq	e484 <mpc_pow@@Base+0xa88>  // b.none
    e394:	add	x0, x0, #0x20
    e398:	cmp	x1, x0
    e39c:	b.eq	e484 <mpc_pow@@Base+0xa88>  // b.none
    e3a0:	ldr	x19, [sp, #232]
    e3a4:	mov	x0, x19
    e3a8:	bl	54a0 <__gmpz_init@plt>
    e3ac:	mov	x0, x27
    e3b0:	bl	54a0 <__gmpz_init@plt>
    e3b4:	add	x0, sp, #0x160
    e3b8:	bl	54a0 <__gmpz_init@plt>
    e3bc:	add	x0, sp, #0x170
    e3c0:	bl	54a0 <__gmpz_init@plt>
    e3c4:	add	x0, sp, #0x180
    e3c8:	bl	54a0 <__gmpz_init@plt>
    e3cc:	add	x0, sp, #0x190
    e3d0:	bl	54a0 <__gmpz_init@plt>
    e3d4:	ldr	x1, [sp, #216]
    e3d8:	mov	x0, x19
    e3dc:	bl	5470 <mpfr_get_z_2exp@plt>
    e3e0:	mov	x23, x0
    e3e4:	mov	x1, #0x0                   	// #0
    e3e8:	mov	x0, x19
    e3ec:	bl	49f0 <__gmpz_scan1@plt>
    e3f0:	mov	x2, x0
    e3f4:	add	x0, x0, x23
    e3f8:	str	x0, [sp, #256]
    e3fc:	mov	x1, x19
    e400:	mov	x0, x19
    e404:	bl	5220 <__gmpz_tdiv_q_2exp@plt>
    e408:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
    e40c:	ldr	x1, [sp, #264]
    e410:	cmp	x1, x0
    e414:	b.eq	e4b8 <mpc_pow@@Base+0xabc>  // b.none
    e418:	ldr	x1, [sp, #192]
    e41c:	add	x0, sp, #0x170
    e420:	bl	5470 <mpfr_get_z_2exp@plt>
    e424:	mov	x24, x0
    e428:	ldr	x0, [sp, #136]
    e42c:	ldr	x1, [x0, #48]
    e430:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
    e434:	cmp	x1, x0
    e438:	b.eq	e4f0 <mpc_pow@@Base+0xaf4>  // b.none
    e43c:	ldr	x1, [sp, #200]
    e440:	add	x0, sp, #0x180
    e444:	bl	5470 <mpfr_get_z_2exp@plt>
    e448:	mov	x19, x0
    e44c:	cmp	x24, x0
    e450:	b.ge	e550 <mpc_pow@@Base+0xb54>  // b.tcont
    e454:	add	x0, sp, #0x180
    e458:	sub	x2, x19, x24
    e45c:	mov	x19, x0
    e460:	mov	x1, x0
    e464:	bl	4e90 <__gmpz_mul_2exp@plt>
    e468:	mov	w1, #0x2                   	// #2
    e46c:	mov	x0, x19
    e470:	bl	54b0 <__gmpz_sizeinbase@plt>
    e474:	ldr	x1, [sp, #224]
    e478:	cmp	x1, x0
    e47c:	b.ge	e4fc <mpc_pow@@Base+0xb00>  // b.tcont
    e480:	b	eea0 <mpc_pow@@Base+0x14a4>
    e484:	add	x19, sp, #0x1a0
    e488:	ldr	x20, [sp, #144]
    e48c:	ldr	x1, [x20]
    e490:	mov	x0, x19
    e494:	bl	5440 <mpfr_init2@plt>
    e498:	ldr	w3, [x20, #8]
    e49c:	mov	w2, #0x0                   	// #0
    e4a0:	ldr	x1, [sp, #216]
    e4a4:	mov	x0, x19
    e4a8:	bl	51d0 <mpfr_set4@plt>
    e4ac:	mov	w0, #0x1                   	// #1
    e4b0:	str	w0, [sp, #180]
    e4b4:	b	e3a0 <mpc_pow@@Base+0x9a4>
    e4b8:	mov	x1, #0x0                   	// #0
    e4bc:	add	x0, sp, #0x170
    e4c0:	bl	4b10 <__gmpz_set_ui@plt>
    e4c4:	ldr	x0, [sp, #136]
    e4c8:	ldr	x1, [x0, #48]
    e4cc:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
    e4d0:	cmp	x1, x0
    e4d4:	b.eq	e4ec <mpc_pow@@Base+0xaf0>  // b.none
    e4d8:	ldr	x1, [sp, #200]
    e4dc:	add	x0, sp, #0x180
    e4e0:	bl	5470 <mpfr_get_z_2exp@plt>
    e4e4:	mov	x24, x0
    e4e8:	b	e4fc <mpc_pow@@Base+0xb00>
    e4ec:	mov	x24, #0x0                   	// #0
    e4f0:	mov	x1, #0x0                   	// #0
    e4f4:	add	x0, sp, #0x180
    e4f8:	bl	4b10 <__gmpz_set_ui@plt>
    e4fc:	ldr	w0, [sp, #372]
    e500:	cbz	w0, e588 <mpc_pow@@Base+0xb8c>
    e504:	ldr	w0, [sp, #388]
    e508:	cbnz	w0, e5b4 <mpc_pow@@Base+0xbb8>
    e50c:	add	x19, sp, #0x170
    e510:	mov	x1, #0x0                   	// #0
    e514:	mov	x0, x19
    e518:	bl	49f0 <__gmpz_scan1@plt>
    e51c:	mov	x21, x0
    e520:	mov	x2, x0
    e524:	mov	x1, x19
    e528:	mov	x0, x19
    e52c:	bl	5220 <__gmpz_tdiv_q_2exp@plt>
    e530:	add	x21, x21, x24
    e534:	ldr	x25, [sp, #256]
    e538:	tbz	x25, #63, e6f4 <mpc_pow@@Base+0xcf8>
    e53c:	add	x19, sp, #0x170
    e540:	mov	x24, #0x1                   	// #1
    e544:	add	x20, sp, #0x180
    e548:	add	x23, sp, #0x160
    e54c:	b	e6a8 <mpc_pow@@Base+0xcac>
    e550:	b.le	e4fc <mpc_pow@@Base+0xb00>
    e554:	add	x20, sp, #0x170
    e558:	sub	x2, x24, x19
    e55c:	mov	x1, x20
    e560:	mov	x0, x20
    e564:	bl	4e90 <__gmpz_mul_2exp@plt>
    e568:	mov	w1, #0x2                   	// #2
    e56c:	mov	x0, x20
    e570:	bl	54b0 <__gmpz_sizeinbase@plt>
    e574:	ldr	x1, [sp, #224]
    e578:	cmp	x1, x0
    e57c:	b.lt	eea0 <mpc_pow@@Base+0x14a4>  // b.tstop
    e580:	mov	x24, x19
    e584:	b	e4fc <mpc_pow@@Base+0xb00>
    e588:	add	x19, sp, #0x180
    e58c:	mov	x1, #0x0                   	// #0
    e590:	mov	x0, x19
    e594:	bl	49f0 <__gmpz_scan1@plt>
    e598:	mov	x21, x0
    e59c:	mov	x2, x0
    e5a0:	mov	x1, x19
    e5a4:	mov	x0, x19
    e5a8:	bl	5220 <__gmpz_tdiv_q_2exp@plt>
    e5ac:	add	x21, x21, x24
    e5b0:	b	e534 <mpc_pow@@Base+0xb38>
    e5b4:	add	x20, sp, #0x170
    e5b8:	mov	x1, #0x0                   	// #0
    e5bc:	mov	x0, x20
    e5c0:	bl	49f0 <__gmpz_scan1@plt>
    e5c4:	mov	x21, x0
    e5c8:	add	x19, sp, #0x180
    e5cc:	mov	x1, #0x0                   	// #0
    e5d0:	mov	x0, x19
    e5d4:	bl	49f0 <__gmpz_scan1@plt>
    e5d8:	cmp	x21, x0
    e5dc:	csel	x21, x21, x0, ls  // ls = plast
    e5e0:	mov	x2, x21
    e5e4:	mov	x1, x20
    e5e8:	mov	x0, x20
    e5ec:	bl	5220 <__gmpz_tdiv_q_2exp@plt>
    e5f0:	mov	x2, x21
    e5f4:	mov	x1, x19
    e5f8:	mov	x0, x19
    e5fc:	bl	5220 <__gmpz_tdiv_q_2exp@plt>
    e600:	add	x21, x21, x24
    e604:	b	e534 <mpc_pow@@Base+0xb38>
    e608:	mov	x2, x24
    e60c:	mov	x1, x19
    e610:	mov	x0, x19
    e614:	bl	4e90 <__gmpz_mul_2exp@plt>
    e618:	mov	x2, x24
    e61c:	mov	x1, x20
    e620:	mov	x0, x20
    e624:	bl	4e90 <__gmpz_mul_2exp@plt>
    e628:	sub	x21, x21, #0x1
    e62c:	b	e6ac <mpc_pow@@Base+0xcb0>
    e630:	adrp	x4, 15000 <mpc_ui_ui_sub@@Base+0x1228>
    e634:	add	x4, x4, #0x4b8
    e638:	mov	w3, #0x3c                  	// #60
    e63c:	adrp	x2, 15000 <mpc_ui_ui_sub@@Base+0x1228>
    e640:	add	x2, x2, #0x430
    e644:	adrp	x1, 15000 <mpc_ui_ui_sub@@Base+0x1228>
    e648:	add	x1, x1, #0x238
    e64c:	adrp	x0, 27000 <mpc_ui_ui_sub@@Base+0x13228>
    e650:	ldr	x0, [x0, #4008]
    e654:	ldr	x0, [x0]
    e658:	bl	55a0 <fprintf@plt>
    e65c:	bl	5000 <abort@plt>
    e660:	cset	w0, eq  // eq = none
    e664:	b	e6e8 <mpc_pow@@Base+0xcec>
    e668:	mov	x1, x23
    e66c:	mov	x0, x23
    e670:	bl	4af0 <__gmpz_sqrt@plt>
    e674:	mov	x1, #0x0                   	// #0
    e678:	mov	x0, x27
    e67c:	bl	4b10 <__gmpz_set_ui@plt>
    e680:	mov	x1, x19
    e684:	mov	x0, x27
    e688:	bl	4da0 <__gmpz_swap@plt>
    e68c:	mov	x1, x20
    e690:	mov	x0, x23
    e694:	bl	4da0 <__gmpz_swap@plt>
    e698:	add	x21, x21, x21, lsr #63
    e69c:	asr	x21, x21, #1
    e6a0:	adds	x25, x25, #0x1
    e6a4:	b.eq	eef4 <mpc_pow@@Base+0x14f8>  // b.none
    e6a8:	tbnz	w21, #0, e608 <mpc_pow@@Base+0xc0c>
    e6ac:	ldr	w0, [sp, #388]
    e6b0:	cbnz	w0, e758 <mpc_pow@@Base+0xd5c>
    e6b4:	ldr	w0, [sp, #372]
    e6b8:	tbz	w0, #31, e630 <mpc_pow@@Base+0xc34>
    e6bc:	mov	x1, x19
    e6c0:	mov	x0, x23
    e6c4:	bl	4d00 <__gmpz_set@plt>
    e6c8:	ldr	w1, [sp, #356]
    e6cc:	neg	w1, w1
    e6d0:	str	w1, [sp, #356]
    e6d4:	sxtw	x1, w1
    e6d8:	cmp	x1, #0x0
    e6dc:	b.le	e660 <mpc_pow@@Base+0xc64>
    e6e0:	ldr	x0, [sp, #360]
    e6e4:	bl	5420 <__gmpn_perfect_square_p@plt>
    e6e8:	cbnz	w0, e668 <mpc_pow@@Base+0xc6c>
    e6ec:	str	x25, [sp, #256]
    e6f0:	tbnz	x25, #63, ee88 <mpc_pow@@Base+0x148c>
    e6f4:	ldr	w0, [sp, #324]
    e6f8:	tbnz	w0, #31, e834 <mpc_pow@@Base+0xe38>
    e6fc:	mov	w1, #0x2                   	// #2
    e700:	ldr	x19, [sp, #232]
    e704:	mov	x0, x19
    e708:	bl	54b0 <__gmpz_sizeinbase@plt>
    e70c:	mov	x23, x0
    e710:	add	x1, sp, #0x170
    e714:	mov	x0, x27
    e718:	bl	4d00 <__gmpz_set@plt>
    e71c:	add	x1, sp, #0x180
    e720:	add	x0, sp, #0x160
    e724:	bl	4d00 <__gmpz_set@plt>
    e728:	sub	x23, x23, #0x2
    e72c:	mov	x25, x21
    e730:	add	x20, sp, #0x160
    e734:	add	x24, sp, #0x190
    e738:	add	x0, sp, #0x170
    e73c:	str	x28, [sp, #272]
    e740:	ldr	x28, [sp, #224]
    e744:	str	x26, [sp, #280]
    e748:	str	x22, [sp, #288]
    e74c:	mov	x22, x0
    e750:	mov	x26, x19
    e754:	b	e994 <mpc_pow@@Base+0xf98>
    e758:	mov	x1, x24
    e75c:	mov	x0, x20
    e760:	bl	4c40 <__gmpz_divisible_2exp_p@plt>
    e764:	cbz	w0, e6ec <mpc_pow@@Base+0xcf0>
    e768:	mov	x2, x19
    e76c:	mov	x1, x19
    e770:	mov	x0, x27
    e774:	bl	4d40 <__gmpz_mul@plt>
    e778:	mov	x2, x20
    e77c:	mov	x1, x20
    e780:	mov	x0, x27
    e784:	bl	4f10 <__gmpz_addmul@plt>
    e788:	ldrsw	x1, [sp, #340]
    e78c:	cmp	x1, #0x0
    e790:	b.le	e824 <mpc_pow@@Base+0xe28>
    e794:	ldr	x0, [sp, #344]
    e798:	bl	5420 <__gmpn_perfect_square_p@plt>
    e79c:	cbz	w0, e6ec <mpc_pow@@Base+0xcf0>
    e7a0:	mov	x1, x27
    e7a4:	mov	x0, x27
    e7a8:	bl	4af0 <__gmpz_sqrt@plt>
    e7ac:	mov	x2, x27
    e7b0:	mov	x1, x19
    e7b4:	mov	x0, x27
    e7b8:	bl	53d0 <__gmpz_add@plt>
    e7bc:	mov	x1, x24
    e7c0:	mov	x0, x27
    e7c4:	bl	4c40 <__gmpz_divisible_2exp_p@plt>
    e7c8:	cbz	w0, e6ec <mpc_pow@@Base+0xcf0>
    e7cc:	mov	x2, x24
    e7d0:	mov	x1, x27
    e7d4:	mov	x0, x27
    e7d8:	bl	5220 <__gmpz_tdiv_q_2exp@plt>
    e7dc:	ldrsw	x1, [sp, #340]
    e7e0:	cmp	x1, #0x0
    e7e4:	b.le	e82c <mpc_pow@@Base+0xe30>
    e7e8:	ldr	x0, [sp, #344]
    e7ec:	bl	5420 <__gmpn_perfect_square_p@plt>
    e7f0:	cbz	w0, e6ec <mpc_pow@@Base+0xcf0>
    e7f4:	mov	x1, x27
    e7f8:	mov	x0, x27
    e7fc:	bl	4af0 <__gmpz_sqrt@plt>
    e800:	mov	x2, x24
    e804:	mov	x1, x20
    e808:	mov	x0, x23
    e80c:	bl	5220 <__gmpz_tdiv_q_2exp@plt>
    e810:	mov	x2, x27
    e814:	mov	x1, x23
    e818:	mov	x0, x23
    e81c:	bl	4cc0 <__gmpz_divexact@plt>
    e820:	b	e680 <mpc_pow@@Base+0xc84>
    e824:	cset	w0, eq  // eq = none
    e828:	b	e79c <mpc_pow@@Base+0xda0>
    e82c:	cset	w0, eq  // eq = none
    e830:	b	e7f0 <mpc_pow@@Base+0xdf4>
    e834:	add	x1, sp, #0x170
    e838:	mov	x2, x1
    e83c:	mov	x0, x27
    e840:	bl	4d40 <__gmpz_mul@plt>
    e844:	add	x1, sp, #0x180
    e848:	mov	x2, x1
    e84c:	mov	x0, x27
    e850:	bl	4f10 <__gmpz_addmul@plt>
    e854:	mov	x1, #0x0                   	// #0
    e858:	mov	x0, x27
    e85c:	bl	49f0 <__gmpz_scan1@plt>
    e860:	mov	x19, x0
    e864:	mov	w1, #0x2                   	// #2
    e868:	mov	x0, x27
    e86c:	bl	54b0 <__gmpz_sizeinbase@plt>
    e870:	add	x1, x19, #0x1
    e874:	cmp	x0, x1
    e878:	b.ne	ee7c <mpc_pow@@Base+0x1480>  // b.any
    e87c:	ldr	w0, [sp, #388]
    e880:	neg	w0, w0
    e884:	str	w0, [sp, #388]
    e888:	neg	x21, x21
    e88c:	sub	x21, x21, x19
    e890:	ldr	w0, [sp, #324]
    e894:	neg	w0, w0
    e898:	str	w0, [sp, #324]
    e89c:	b	e6fc <mpc_pow@@Base+0xd00>
    e8a0:	mov	x2, x22
    e8a4:	mov	x1, x27
    e8a8:	mov	x0, x24
    e8ac:	bl	4d40 <__gmpz_mul@plt>
    e8b0:	add	x19, sp, #0x180
    e8b4:	mov	x2, x19
    e8b8:	mov	x1, x20
    e8bc:	mov	x0, x24
    e8c0:	bl	52d0 <__gmpz_submul@plt>
    e8c4:	mov	x2, x22
    e8c8:	mov	x1, x20
    e8cc:	mov	x0, x20
    e8d0:	bl	4d40 <__gmpz_mul@plt>
    e8d4:	mov	x2, x19
    e8d8:	mov	x1, x27
    e8dc:	mov	x0, x20
    e8e0:	bl	4f10 <__gmpz_addmul@plt>
    e8e4:	mov	x1, x24
    e8e8:	mov	x0, x27
    e8ec:	bl	4da0 <__gmpz_swap@plt>
    e8f0:	add	x25, x25, x21
    e8f4:	b	e9f0 <mpc_pow@@Base+0xff4>
    e8f8:	mov	x1, #0x0                   	// #0
    e8fc:	mov	x0, x20
    e900:	bl	49f0 <__gmpz_scan1@plt>
    e904:	mov	x19, x0
    e908:	mov	x2, x0
    e90c:	mov	x1, x20
    e910:	mov	x0, x20
    e914:	bl	5220 <__gmpz_tdiv_q_2exp@plt>
    e918:	add	x25, x19, x25
    e91c:	b	e968 <mpc_pow@@Base+0xf6c>
    e920:	mov	x1, #0x0                   	// #0
    e924:	mov	x0, x27
    e928:	bl	49f0 <__gmpz_scan1@plt>
    e92c:	mov	x19, x0
    e930:	mov	x1, #0x0                   	// #0
    e934:	mov	x0, x20
    e938:	bl	49f0 <__gmpz_scan1@plt>
    e93c:	cmp	x19, x0
    e940:	csel	x19, x19, x0, ls  // ls = plast
    e944:	mov	x2, x19
    e948:	mov	x1, x27
    e94c:	mov	x0, x27
    e950:	bl	5220 <__gmpz_tdiv_q_2exp@plt>
    e954:	mov	x2, x19
    e958:	mov	x1, x20
    e95c:	mov	x0, x20
    e960:	bl	5220 <__gmpz_tdiv_q_2exp@plt>
    e964:	add	x25, x19, x25
    e968:	mov	w1, #0x2                   	// #2
    e96c:	mov	x0, x27
    e970:	bl	54b0 <__gmpz_sizeinbase@plt>
    e974:	cmp	x28, x0
    e978:	b.lt	ee94 <mpc_pow@@Base+0x1498>  // b.tstop
    e97c:	mov	w1, #0x2                   	// #2
    e980:	mov	x0, x20
    e984:	bl	54b0 <__gmpz_sizeinbase@plt>
    e988:	sub	x23, x23, #0x1
    e98c:	cmp	x28, x0
    e990:	b.lt	eedc <mpc_pow@@Base+0x14e0>  // b.tstop
    e994:	cmn	x23, #0x1
    e998:	b.eq	ea28 <mpc_pow@@Base+0x102c>  // b.none
    e99c:	mov	x2, x20
    e9a0:	mov	x1, x27
    e9a4:	mov	x0, x24
    e9a8:	bl	4d40 <__gmpz_mul@plt>
    e9ac:	mov	x2, x27
    e9b0:	mov	x1, x27
    e9b4:	mov	x0, x27
    e9b8:	bl	4d40 <__gmpz_mul@plt>
    e9bc:	mov	x2, x20
    e9c0:	mov	x1, x20
    e9c4:	mov	x0, x27
    e9c8:	bl	52d0 <__gmpz_submul@plt>
    e9cc:	mov	x2, #0x1                   	// #1
    e9d0:	mov	x1, x24
    e9d4:	mov	x0, x20
    e9d8:	bl	4e90 <__gmpz_mul_2exp@plt>
    e9dc:	lsl	x25, x25, #1
    e9e0:	mov	x1, x23
    e9e4:	mov	x0, x26
    e9e8:	bl	4d30 <__gmpz_tstbit@plt>
    e9ec:	cbnz	w0, e8a0 <mpc_pow@@Base+0xea4>
    e9f0:	ldr	w0, [sp, #340]
    e9f4:	cbz	w0, e8f8 <mpc_pow@@Base+0xefc>
    e9f8:	ldr	w0, [sp, #356]
    e9fc:	cbnz	w0, e920 <mpc_pow@@Base+0xf24>
    ea00:	mov	x1, #0x0                   	// #0
    ea04:	mov	x0, x27
    ea08:	bl	49f0 <__gmpz_scan1@plt>
    ea0c:	mov	x19, x0
    ea10:	mov	x2, x0
    ea14:	mov	x1, x27
    ea18:	mov	x0, x27
    ea1c:	bl	5220 <__gmpz_tdiv_q_2exp@plt>
    ea20:	add	x25, x19, x25
    ea24:	b	e968 <mpc_pow@@Base+0xf6c>
    ea28:	ldr	x28, [sp, #272]
    ea2c:	ldr	x26, [sp, #280]
    ea30:	ldr	x22, [sp, #288]
    ea34:	ldr	x23, [sp, #256]
    ea38:	add	x21, sp, #0x160
    ea3c:	add	x24, sp, #0x190
    ea40:	mov	w19, #0x2                   	// #2
    ea44:	str	x28, [sp, #256]
    ea48:	ldr	x28, [sp, #224]
    ea4c:	cmp	x23, #0x0
    ea50:	b.le	eb14 <mpc_pow@@Base+0x1118>
    ea54:	mov	x2, x21
    ea58:	mov	x1, x27
    ea5c:	mov	x0, x24
    ea60:	bl	4d40 <__gmpz_mul@plt>
    ea64:	mov	x2, x27
    ea68:	mov	x1, x27
    ea6c:	mov	x0, x27
    ea70:	bl	4d40 <__gmpz_mul@plt>
    ea74:	mov	x2, x21
    ea78:	mov	x1, x21
    ea7c:	mov	x0, x27
    ea80:	bl	52d0 <__gmpz_submul@plt>
    ea84:	mov	x2, #0x1                   	// #1
    ea88:	mov	x1, x24
    ea8c:	mov	x0, x21
    ea90:	bl	4e90 <__gmpz_mul_2exp@plt>
    ea94:	lsl	x25, x25, #1
    ea98:	mov	x1, #0x0                   	// #0
    ea9c:	mov	x0, x27
    eaa0:	bl	49f0 <__gmpz_scan1@plt>
    eaa4:	mov	x20, x0
    eaa8:	mov	x1, #0x0                   	// #0
    eaac:	mov	x0, x21
    eab0:	bl	49f0 <__gmpz_scan1@plt>
    eab4:	cmp	x20, x0
    eab8:	csel	x20, x20, x0, ls  // ls = plast
    eabc:	mov	x2, x20
    eac0:	mov	x1, x27
    eac4:	mov	x0, x27
    eac8:	bl	5220 <__gmpz_tdiv_q_2exp@plt>
    eacc:	mov	x2, x20
    ead0:	mov	x1, x21
    ead4:	mov	x0, x21
    ead8:	bl	5220 <__gmpz_tdiv_q_2exp@plt>
    eadc:	add	x25, x20, x25
    eae0:	mov	w1, w19
    eae4:	mov	x0, x27
    eae8:	bl	54b0 <__gmpz_sizeinbase@plt>
    eaec:	cmp	x28, x0
    eaf0:	b.lt	eeec <mpc_pow@@Base+0x14f0>  // b.tstop
    eaf4:	mov	w1, w19
    eaf8:	mov	x0, x21
    eafc:	bl	54b0 <__gmpz_sizeinbase@plt>
    eb00:	sub	x23, x23, #0x1
    eb04:	cmp	x28, x0
    eb08:	b.ge	ea4c <mpc_pow@@Base+0x1050>  // b.tcont
    eb0c:	ldr	x28, [sp, #256]
    eb10:	b	eea0 <mpc_pow@@Base+0x14a4>
    eb14:	ldr	x28, [sp, #256]
    eb18:	ldr	w2, [sp, #304]
    eb1c:	mov	x1, x27
    eb20:	ldr	x0, [sp, #112]
    eb24:	bl	4ec0 <mpfr_set_z@plt>
    eb28:	mov	w20, #0x2                   	// #2
    eb2c:	tbnz	w0, #31, eb38 <mpc_pow@@Base+0x113c>
    eb30:	cmp	w0, #0x0
    eb34:	cset	w20, ne  // ne = any
    eb38:	ldr	x0, [sp, #112]
    eb3c:	add	x19, x0, #0x20
    eb40:	ldr	w21, [sp, #300]
    eb44:	mov	w2, w21
    eb48:	add	x1, sp, #0x160
    eb4c:	mov	x0, x19
    eb50:	bl	4ec0 <mpfr_set_z@plt>
    eb54:	mov	w1, #0x8                   	// #8
    eb58:	tbz	w0, #31, ebf8 <mpc_pow@@Base+0x11fc>
    eb5c:	orr	w0, w20, w1
    eb60:	str	w0, [sp, #108]
    eb64:	ldr	w3, [sp, #304]
    eb68:	mov	x2, x25
    eb6c:	ldr	x0, [sp, #112]
    eb70:	mov	x1, x0
    eb74:	bl	4a70 <mpfr_mul_2si@plt>
    eb78:	ldr	w3, [sp, #300]
    eb7c:	mov	x2, x25
    eb80:	mov	x1, x19
    eb84:	mov	x0, x19
    eb88:	bl	4a70 <mpfr_mul_2si@plt>
    eb8c:	ldr	x0, [sp, #232]
    eb90:	bl	5180 <__gmpz_clear@plt>
    eb94:	mov	x0, x27
    eb98:	bl	5180 <__gmpz_clear@plt>
    eb9c:	add	x0, sp, #0x160
    eba0:	bl	5180 <__gmpz_clear@plt>
    eba4:	add	x0, sp, #0x170
    eba8:	bl	5180 <__gmpz_clear@plt>
    ebac:	add	x0, sp, #0x180
    ebb0:	bl	5180 <__gmpz_clear@plt>
    ebb4:	add	x0, sp, #0x190
    ebb8:	bl	5180 <__gmpz_clear@plt>
    ebbc:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
    ebc0:	ldr	x1, [sp, #264]
    ebc4:	cmp	x1, x0
    ebc8:	b.ne	eefc <mpc_pow@@Base+0x1500>  // b.any
    ebcc:	ldr	w0, [sp, #180]
    ebd0:	cbnz	w0, ef08 <mpc_pow@@Base+0x150c>
    ebd4:	ldr	x25, [sp, #144]
    ebd8:	mov	x3, x25
    ebdc:	ldr	w0, [sp, #312]
    ebe0:	lsr	w2, w0, #31
    ebe4:	ldr	w0, [sp, #308]
    ebe8:	lsr	w1, w0, #31
    ebec:	ldr	x0, [sp, #112]
    ebf0:	bl	d824 <mpc_out_str@@Base+0x16c>
    ebf4:	b	e09c <mpc_pow@@Base+0x6a0>
    ebf8:	mov	w2, w21
    ebfc:	add	x1, sp, #0x160
    ec00:	mov	x0, x19
    ec04:	bl	4ec0 <mpfr_set_z@plt>
    ec08:	mov	w1, w0
    ec0c:	cmp	w0, #0x0
    ec10:	mov	w0, #0x4                   	// #4
    ec14:	csel	w1, w1, w0, eq  // eq = none
    ec18:	b	eb5c <mpc_pow@@Base+0x1160>
    ec1c:	ldr	w19, [x25, #40]
    ec20:	mvn	w19, w19
    ec24:	lsr	w19, w19, #31
    ec28:	add	x22, sp, #0x1a0
    ec2c:	ldr	x1, [x25]
    ec30:	mov	x0, x22
    ec34:	bl	4c80 <mpfr_set_prec@plt>
    ec38:	ldr	w3, [x25, #8]
    ec3c:	mov	w2, #0x0                   	// #0
    ec40:	mov	x1, x25
    ec44:	mov	x0, x22
    ec48:	bl	51d0 <mpfr_set4@plt>
    ec4c:	ldr	w3, [sp, #456]
    ec50:	ldr	w2, [sp, #304]
    ec54:	add	x1, sp, #0x1c0
    ec58:	ldr	x0, [sp, #112]
    ec5c:	bl	51d0 <mpfr_set4@plt>
    ec60:	mov	w22, w0
    ec64:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
    ec68:	ldr	x1, [sp, #160]
    ec6c:	cmp	x1, x0
    ec70:	b.eq	ecd8 <mpc_pow@@Base+0x12dc>  // b.none
    ec74:	mov	w0, #0x2                   	// #2
    ec78:	str	w0, [sp, #108]
    ec7c:	tbnz	w22, #31, ec8c <mpc_pow@@Base+0x1290>
    ec80:	cmp	w22, #0x0
    ec84:	cset	w0, ne  // ne = any
    ec88:	str	w0, [sp, #108]
    ec8c:	ldr	x3, [sp, #112]
    ec90:	mov	w1, #0x1                   	// #1
    ec94:	str	w1, [x3, #40]
    ec98:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
    ec9c:	str	x1, [x3, #48]
    eca0:	cmp	w19, #0x0
    eca4:	ldr	w0, [sp, #300]
    eca8:	ccmp	w0, #0x3, #0x4, eq  // eq = none
    ecac:	b.ne	ecc0 <mpc_pow@@Base+0x12c4>  // b.any
    ecb0:	mov	w2, #0x0                   	// #0
    ecb4:	mov	x1, x3
    ecb8:	mov	x0, x3
    ecbc:	bl	4f60 <mpc_conj@plt>
    ecc0:	add	x0, sp, #0x1a0
    ecc4:	bl	4d60 <mpfr_clear@plt>
    ecc8:	b	e09c <mpc_pow@@Base+0x6a0>
    eccc:	ldr	w19, [x25, #40]
    ecd0:	lsr	w19, w19, #31
    ecd4:	b	ec28 <mpc_pow@@Base+0x122c>
    ecd8:	ldr	w0, [sp, #316]
    ecdc:	cmp	w0, #0x0
    ece0:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
    ece4:	ldr	x1, [sp, #168]
    ece8:	ccmp	x1, x0, #0x4, eq  // eq = none
    ecec:	b.ne	ec74 <mpc_pow@@Base+0x1278>  // b.any
    ecf0:	ldr	x4, [sp, #112]
    ecf4:	mov	w1, #0x1                   	// #1
    ecf8:	str	w1, [x4, #40]
    ecfc:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
    ed00:	str	x1, [x4, #48]
    ed04:	add	x3, sp, #0x1a0
    ed08:	mov	w2, w20
    ed0c:	lsr	w1, w21, #31
    ed10:	mov	x0, x4
    ed14:	bl	d824 <mpc_out_str@@Base+0x16c>
    ed18:	tbnz	w22, #31, ed2c <mpc_pow@@Base+0x1330>
    ed1c:	cmp	w22, #0x0
    ed20:	cset	w0, ne  // ne = any
    ed24:	str	w0, [sp, #108]
    ed28:	b	ecc0 <mpc_pow@@Base+0x12c4>
    ed2c:	mov	w0, #0x2                   	// #2
    ed30:	str	w0, [sp, #108]
    ed34:	b	ecc0 <mpc_pow@@Base+0x12c4>
    ed38:	ldr	w3, [sp, #488]
    ed3c:	ldr	w2, [sp, #300]
    ed40:	add	x1, sp, #0x1e0
    ed44:	ldr	x0, [sp, #112]
    ed48:	add	x0, x0, #0x20
    ed4c:	bl	51d0 <mpfr_set4@plt>
    ed50:	str	w0, [sp, #108]
    ed54:	ldr	w0, [sp, #296]
    ed58:	cmp	w0, #0x0
    ed5c:	ldr	w0, [sp, #316]
    ed60:	ccmp	w0, #0x0, #0x4, ne  // ne = any
    ed64:	b.ne	ed98 <mpc_pow@@Base+0x139c>  // b.any
    ed68:	mov	w0, #0x1                   	// #1
    ed6c:	ldr	x1, [sp, #112]
    ed70:	str	w0, [x1, #8]
    ed74:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
    ed78:	str	x0, [x1, #16]
    ed7c:	ldr	w1, [sp, #108]
    ed80:	tbnz	w1, #31, edec <mpc_pow@@Base+0x13f0>
    ed84:	cmp	w1, #0x0
    ed88:	mov	w0, #0x4                   	// #4
    ed8c:	csel	w0, w1, w0, eq  // eq = none
    ed90:	str	w0, [sp, #108]
    ed94:	b	e09c <mpc_pow@@Base+0x6a0>
    ed98:	ldr	w1, [x24, #8]
    ed9c:	mov	w0, #0x1                   	// #1
    eda0:	ldr	x4, [sp, #112]
    eda4:	str	w0, [x4, #8]
    eda8:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
    edac:	str	x0, [x4, #16]
    edb0:	mov	x3, x25
    edb4:	mov	w2, #0x0                   	// #0
    edb8:	lsr	w1, w1, #31
    edbc:	mov	x0, x4
    edc0:	bl	d824 <mpc_out_str@@Base+0x16c>
    edc4:	ldr	w1, [sp, #108]
    edc8:	tbnz	w1, #31, ede0 <mpc_pow@@Base+0x13e4>
    edcc:	cmp	w1, #0x0
    edd0:	mov	w0, #0x4                   	// #4
    edd4:	csel	w0, w1, w0, eq  // eq = none
    edd8:	str	w0, [sp, #108]
    eddc:	b	e09c <mpc_pow@@Base+0x6a0>
    ede0:	mov	w0, #0x8                   	// #8
    ede4:	str	w0, [sp, #108]
    ede8:	b	e09c <mpc_pow@@Base+0x6a0>
    edec:	mov	w0, #0x8                   	// #8
    edf0:	str	w0, [sp, #108]
    edf4:	b	e09c <mpc_pow@@Base+0x6a0>
    edf8:	bl	4990 <mpfr_set_underflow@plt>
    edfc:	b	e0b4 <mpc_pow@@Base+0x6b8>
    ee00:	bl	5490 <mpfr_set_overflow@plt>
    ee04:	ldp	x19, x20, [sp, #16]
    ee08:	ldp	x21, x22, [sp, #32]
    ee0c:	ldp	x27, x28, [sp, #80]
    ee10:	b	dad4 <mpc_pow@@Base+0xd8>
    ee14:	ldr	x24, [sp, #136]
    ee18:	ldr	x25, [sp, #144]
    ee1c:	ldr	w21, [x24, #8]
    ee20:	ldr	w20, [x24, #40]
    ee24:	lsr	w20, w20, #31
    ee28:	add	x19, sp, #0x1a0
    ee2c:	mov	x0, x19
    ee30:	bl	4aa0 <mpfr_init@plt>
    ee34:	mov	w2, #0x0                   	// #0
    ee38:	mov	x1, x24
    ee3c:	mov	x0, x19
    ee40:	bl	4ea0 <mpc_norm@plt>
    ee44:	mov	w22, w0
    ee48:	mov	x2, #0x0                   	// #0
    ee4c:	mov	x1, #0x1                   	// #1
    ee50:	mov	x0, x19
    ee54:	bl	4cb0 <mpfr_cmp_ui_2exp@plt>
    ee58:	cmp	w0, #0x0
    ee5c:	ccmp	w22, #0x0, #0x4, eq  // eq = none
    ee60:	csneg	w22, w0, w22, eq  // eq = none
    ee64:	tbnz	w22, #31, ec1c <mpc_pow@@Base+0x1220>
    ee68:	cbnz	w22, eccc <mpc_pow@@Base+0x12d0>
    ee6c:	ldr	w0, [x25, #8]
    ee70:	cmp	w20, w0, lsr #31
    ee74:	cset	w19, ne  // ne = any
    ee78:	b	ec28 <mpc_pow@@Base+0x122c>
    ee7c:	mov	w0, #0xffffffff            	// #-1
    ee80:	str	w0, [sp, #108]
    ee84:	b	eea0 <mpc_pow@@Base+0x14a4>
    ee88:	mov	w0, #0xffffffff            	// #-1
    ee8c:	str	w0, [sp, #108]
    ee90:	b	eea0 <mpc_pow@@Base+0x14a4>
    ee94:	ldr	x28, [sp, #272]
    ee98:	ldr	x26, [sp, #280]
    ee9c:	ldr	x22, [sp, #288]
    eea0:	ldr	x0, [sp, #232]
    eea4:	bl	5180 <__gmpz_clear@plt>
    eea8:	mov	x0, x27
    eeac:	bl	5180 <__gmpz_clear@plt>
    eeb0:	add	x0, sp, #0x160
    eeb4:	bl	5180 <__gmpz_clear@plt>
    eeb8:	add	x0, sp, #0x170
    eebc:	bl	5180 <__gmpz_clear@plt>
    eec0:	add	x0, sp, #0x180
    eec4:	bl	5180 <__gmpz_clear@plt>
    eec8:	add	x0, sp, #0x190
    eecc:	bl	5180 <__gmpz_clear@plt>
    eed0:	ldr	w0, [sp, #180]
    eed4:	cbz	w0, e344 <mpc_pow@@Base+0x948>
    eed8:	b	ef24 <mpc_pow@@Base+0x1528>
    eedc:	ldr	x28, [sp, #272]
    eee0:	ldr	x26, [sp, #280]
    eee4:	ldr	x22, [sp, #288]
    eee8:	b	eea0 <mpc_pow@@Base+0x14a4>
    eeec:	ldr	x28, [sp, #256]
    eef0:	b	eea0 <mpc_pow@@Base+0x14a4>
    eef4:	str	x25, [sp, #256]
    eef8:	b	e6f4 <mpc_pow@@Base+0xcf8>
    eefc:	ldr	w0, [sp, #180]
    ef00:	cbz	w0, e09c <mpc_pow@@Base+0x6a0>
    ef04:	b	ef24 <mpc_pow@@Base+0x1528>
    ef08:	add	x3, sp, #0x1a0
    ef0c:	ldr	w0, [sp, #312]
    ef10:	lsr	w2, w0, #31
    ef14:	ldr	w0, [sp, #308]
    ef18:	lsr	w1, w0, #31
    ef1c:	ldr	x0, [sp, #112]
    ef20:	bl	d824 <mpc_out_str@@Base+0x16c>
    ef24:	add	x0, sp, #0x1a0
    ef28:	bl	4d60 <mpfr_clear@plt>
    ef2c:	ldr	w0, [sp, #108]
    ef30:	add	w0, w0, #0x2
    ef34:	cmp	w0, #0x1
    ef38:	b.ls	e344 <mpc_pow@@Base+0x948>  // b.plast
    ef3c:	b	e09c <mpc_pow@@Base+0x6a0>
    ef40:	mov	x0, x22
    ef44:	bl	54d0 <mpfr_number_p@plt>
    ef48:	cbnz	w0, e174 <mpc_pow@@Base+0x778>
    ef4c:	b	e304 <mpc_pow@@Base+0x908>
    ef50:	ldp	x19, x20, [sp, #16]
    ef54:	ldp	x21, x22, [sp, #32]
    ef58:	b	dad4 <mpc_pow@@Base+0xd8>
    ef5c:	ldp	x19, x20, [sp, #16]
    ef60:	b	dad4 <mpc_pow@@Base+0xd8>

000000000000ef64 <mpc_pow_fr@@Base>:
    ef64:	stp	x29, x30, [sp, #-128]!
    ef68:	mov	x29, sp
    ef6c:	stp	x19, x20, [sp, #16]
    ef70:	stp	x21, x22, [sp, #32]
    ef74:	str	x23, [sp, #48]
    ef78:	mov	x20, x0
    ef7c:	mov	x21, x1
    ef80:	mov	w22, w3
    ef84:	add	x19, sp, #0x40
    ef88:	ldp	x0, x1, [x2]
    ef8c:	stp	x0, x1, [sp, #64]
    ef90:	ldp	x0, x1, [x2, #16]
    ef94:	stp	x0, x1, [sp, #80]
    ef98:	add	x23, sp, #0x60
    ef9c:	mov	x1, #0x1                   	// #1
    efa0:	mov	x0, x23
    efa4:	bl	5440 <mpfr_init2@plt>
    efa8:	mov	w0, #0x1                   	// #1
    efac:	str	w0, [sp, #104]
    efb0:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
    efb4:	str	x0, [sp, #112]
    efb8:	mov	w3, w22
    efbc:	mov	x2, x19
    efc0:	mov	x1, x21
    efc4:	mov	x0, x20
    efc8:	bl	5240 <mpc_pow@plt>
    efcc:	mov	w19, w0
    efd0:	mov	x0, x23
    efd4:	bl	4d60 <mpfr_clear@plt>
    efd8:	mov	w0, w19
    efdc:	ldp	x19, x20, [sp, #16]
    efe0:	ldp	x21, x22, [sp, #32]
    efe4:	ldr	x23, [sp, #48]
    efe8:	ldp	x29, x30, [sp], #128
    efec:	ret

000000000000eff0 <mpc_pow_ld@@Base>:
    eff0:	stp	x29, x30, [sp, #-128]!
    eff4:	mov	x29, sp
    eff8:	stp	x19, x20, [sp, #16]
    effc:	stp	x21, x22, [sp, #32]
    f000:	mov	x20, x0
    f004:	mov	x21, x1
    f008:	str	q0, [sp, #48]
    f00c:	mov	w22, w2
    f010:	add	x19, sp, #0x40
    f014:	mov	x2, #0x1                   	// #1
    f018:	mov	x1, #0x71                  	// #113
    f01c:	mov	x0, x19
    f020:	bl	53c0 <mpc_init3@plt>
    f024:	mov	w1, #0x0                   	// #0
    f028:	ldr	q0, [sp, #48]
    f02c:	mov	x0, x19
    f030:	bl	4e50 <mpc_set_ld@plt>
    f034:	mov	w3, w22
    f038:	mov	x2, x19
    f03c:	mov	x1, x21
    f040:	mov	x0, x20
    f044:	bl	5240 <mpc_pow@plt>
    f048:	mov	w20, w0
    f04c:	mov	x0, x19
    f050:	bl	4a10 <mpc_clear@plt>
    f054:	mov	w0, w20
    f058:	ldp	x19, x20, [sp, #16]
    f05c:	ldp	x21, x22, [sp, #32]
    f060:	ldp	x29, x30, [sp], #128
    f064:	ret

000000000000f068 <mpc_pow_d@@Base>:
    f068:	stp	x29, x30, [sp, #-128]!
    f06c:	mov	x29, sp
    f070:	stp	x19, x20, [sp, #16]
    f074:	stp	x21, x22, [sp, #32]
    f078:	str	d8, [sp, #48]
    f07c:	mov	x20, x0
    f080:	mov	x21, x1
    f084:	fmov	d8, d0
    f088:	mov	w22, w2
    f08c:	add	x19, sp, #0x40
    f090:	mov	x2, #0x1                   	// #1
    f094:	mov	x1, #0x35                  	// #53
    f098:	mov	x0, x19
    f09c:	bl	53c0 <mpc_init3@plt>
    f0a0:	mov	w1, #0x0                   	// #0
    f0a4:	fmov	d0, d8
    f0a8:	mov	x0, x19
    f0ac:	bl	5460 <mpc_set_d@plt>
    f0b0:	mov	w3, w22
    f0b4:	mov	x2, x19
    f0b8:	mov	x1, x21
    f0bc:	mov	x0, x20
    f0c0:	bl	5240 <mpc_pow@plt>
    f0c4:	mov	w20, w0
    f0c8:	mov	x0, x19
    f0cc:	bl	4a10 <mpc_clear@plt>
    f0d0:	mov	w0, w20
    f0d4:	ldp	x19, x20, [sp, #16]
    f0d8:	ldp	x21, x22, [sp, #32]
    f0dc:	ldr	d8, [sp, #48]
    f0e0:	ldp	x29, x30, [sp], #128
    f0e4:	ret

000000000000f0e8 <mpc_pow_si@@Base>:
    f0e8:	stp	x29, x30, [sp, #-16]!
    f0ec:	mov	x29, sp
    f0f0:	mov	w4, w3
    f0f4:	tbnz	x2, #63, f108 <mpc_pow_si@@Base+0x20>
    f0f8:	mov	w3, #0x1                   	// #1
    f0fc:	bl	4df0 <mpc_pow_usi@plt>
    f100:	ldp	x29, x30, [sp], #16
    f104:	ret
    f108:	mov	w3, #0xffffffff            	// #-1
    f10c:	neg	x2, x2
    f110:	bl	4df0 <mpc_pow_usi@plt>
    f114:	b	f100 <mpc_pow_si@@Base+0x18>
    f118:	stp	x29, x30, [sp, #-128]!
    f11c:	mov	x29, sp
    f120:	stp	x19, x20, [sp, #16]
    f124:	stp	x21, x22, [sp, #32]
    f128:	str	x23, [sp, #48]
    f12c:	mov	x20, x0
    f130:	mov	x21, x1
    f134:	mov	x19, x2
    f138:	mov	w23, w3
    f13c:	mov	w22, w4
    f140:	mov	x2, #0x1                   	// #1
    f144:	mov	x1, #0x40                  	// #64
    f148:	add	x0, sp, x1
    f14c:	bl	53c0 <mpc_init3@plt>
    f150:	cmp	w23, #0x0
    f154:	b.le	f1a4 <mpc_pow_si@@Base+0xbc>
    f158:	mov	w2, #0x0                   	// #0
    f15c:	mov	x1, x19
    f160:	add	x0, sp, #0x40
    f164:	bl	4ce0 <mpc_set_ui@plt>
    f168:	add	x19, sp, #0x40
    f16c:	mov	w3, w22
    f170:	mov	x2, x19
    f174:	mov	x1, x21
    f178:	mov	x0, x20
    f17c:	bl	5240 <mpc_pow@plt>
    f180:	mov	w20, w0
    f184:	mov	x0, x19
    f188:	bl	4a10 <mpc_clear@plt>
    f18c:	mov	w0, w20
    f190:	ldp	x19, x20, [sp, #16]
    f194:	ldp	x21, x22, [sp, #32]
    f198:	ldr	x23, [sp, #48]
    f19c:	ldp	x29, x30, [sp], #128
    f1a0:	ret
    f1a4:	mov	w2, #0x0                   	// #0
    f1a8:	neg	x1, x19
    f1ac:	add	x0, sp, #0x40
    f1b0:	bl	5020 <mpc_set_si@plt>
    f1b4:	b	f168 <mpc_pow_si@@Base+0x80>

000000000000f1b8 <mpc_pow_usi@@Base>:
    f1b8:	stp	x29, x30, [sp, #-288]!
    f1bc:	mov	x29, sp
    f1c0:	stp	x19, x20, [sp, #16]
    f1c4:	stp	x21, x22, [sp, #32]
    f1c8:	stp	x23, x24, [sp, #48]
    f1cc:	stp	x25, x26, [sp, #64]
    f1d0:	mov	x24, x0
    f1d4:	mov	x23, x1
    f1d8:	mov	x21, x2
    f1dc:	mov	w25, w3
    f1e0:	mov	w26, w4
    f1e4:	mov	x0, x1
    f1e8:	bl	54d0 <mpfr_number_p@plt>
    f1ec:	cbz	w0, f300 <mpc_pow_usi@@Base+0x148>
    f1f0:	add	x0, x23, #0x20
    f1f4:	bl	54d0 <mpfr_number_p@plt>
    f1f8:	cbz	w0, f300 <mpc_pow_usi@@Base+0x148>
    f1fc:	ldr	x19, [x23, #16]
    f200:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
    f204:	cmp	x19, x0
    f208:	b.eq	f300 <mpc_pow_usi@@Base+0x148>  // b.none
    f20c:	ldr	x20, [x23, #48]
    f210:	cmp	x21, #0x0
    f214:	ccmp	x20, x0, #0x4, ne  // ne = any
    f218:	b.eq	f300 <mpc_pow_usi@@Base+0x148>  // b.none
    f21c:	cmp	x21, #0x1
    f220:	b.eq	f338 <mpc_pow_usi@@Base+0x180>  // b.none
    f224:	cmp	w25, #0x0
    f228:	ccmp	x21, #0x2, #0x0, gt
    f22c:	b.eq	f374 <mpc_pow_usi@@Base+0x1bc>  // b.none
    f230:	cmp	x19, x20
    f234:	csel	x22, x19, x20, ge  // ge = tcont
    f238:	bl	5200 <mpfr_get_emax@plt>
    f23c:	sdiv	x0, x0, x21
    f240:	cmp	x22, x0
    f244:	b.gt	f38c <mpc_pow_usi@@Base+0x1d4>
    f248:	neg	x0, x20
    f24c:	cmp	x19, x20
    f250:	csneg	x19, x0, x19, ge  // ge = tcont
    f254:	bl	5060 <mpfr_get_emin@plt>
    f258:	neg	x0, x0
    f25c:	sdiv	x0, x0, x21
    f260:	cmp	x0, x19
    f264:	b.lt	f38c <mpc_pow_usi@@Base+0x1d4>  // b.tstop
    f268:	stp	x27, x28, [sp, #80]
    f26c:	and	x28, x21, x21, lsr #1
    f270:	cmp	x21, #0x3
    f274:	b.ls	f3ac <mpc_pow_usi@@Base+0x1f4>  // b.plast
    f278:	mov	x0, x21
    f27c:	mov	x27, #0x0                   	// #0
    f280:	add	x27, x27, #0x1
    f284:	lsr	x0, x0, #1
    f288:	cmp	x0, #0x3
    f28c:	b.hi	f280 <mpc_pow_usi@@Base+0xc8>  // b.pmore
    f290:	add	x2, x27, #0x2
    f294:	str	x2, [sp, #128]
    f298:	ldr	x1, [x24]
    f29c:	ldr	x0, [x24, #32]
    f2a0:	cmp	x0, x1
    f2a4:	csel	x0, x0, x1, ge  // ge = tcont
    f2a8:	add	x0, x0, x2
    f2ac:	add	x0, x0, #0x20
    f2b0:	str	x0, [sp, #120]
    f2b4:	mov	x1, x0
    f2b8:	add	x0, sp, #0xe0
    f2bc:	bl	4cf0 <mpc_init2@plt>
    f2c0:	cbnz	x28, f3b4 <mpc_pow_usi@@Base+0x1fc>
    f2c4:	lsr	x0, x21, x27
    f2c8:	and	x0, x0, #0x1
    f2cc:	str	x0, [sp, #136]
    f2d0:	cmp	wzr, w26, lsr #4
    f2d4:	cset	x0, eq  // eq = none
    f2d8:	str	x0, [sp, #144]
    f2dc:	str	wzr, [sp, #108]
    f2e0:	add	x20, sp, #0xe0
    f2e4:	add	x0, sp, #0xa0
    f2e8:	str	x0, [sp, #96]
    f2ec:	sub	x0, x27, #0x1
    f2f0:	str	x0, [sp, #112]
    f2f4:	add	x0, x20, #0x20
    f2f8:	str	x0, [sp, #152]
    f2fc:	b	f5fc <mpc_pow_usi@@Base+0x444>
    f300:	mov	w4, w26
    f304:	mov	w3, w25
    f308:	mov	x2, x21
    f30c:	mov	x1, x23
    f310:	mov	x0, x24
    f314:	bl	f118 <mpc_pow_si@@Base+0x30>
    f318:	mov	w19, w0
    f31c:	mov	w0, w19
    f320:	ldp	x19, x20, [sp, #16]
    f324:	ldp	x21, x22, [sp, #32]
    f328:	ldp	x23, x24, [sp, #48]
    f32c:	ldp	x25, x26, [sp, #64]
    f330:	ldp	x29, x30, [sp], #288
    f334:	ret
    f338:	cmp	w25, #0x0
    f33c:	b.le	f358 <mpc_pow_usi@@Base+0x1a0>
    f340:	mov	w2, w26
    f344:	mov	x1, x23
    f348:	mov	x0, x24
    f34c:	bl	5580 <mpc_set@plt>
    f350:	mov	w19, w0
    f354:	b	f31c <mpc_pow_usi@@Base+0x164>
    f358:	mov	w3, w26
    f35c:	mov	x2, x23
    f360:	mov	x1, #0x1                   	// #1
    f364:	mov	x0, x24
    f368:	bl	55b0 <mpc_ui_div@plt>
    f36c:	mov	w19, w0
    f370:	b	f31c <mpc_pow_usi@@Base+0x164>
    f374:	mov	w2, w26
    f378:	mov	x1, x23
    f37c:	mov	x0, x24
    f380:	bl	4f30 <mpc_sqr@plt>
    f384:	mov	w19, w0
    f388:	b	f31c <mpc_pow_usi@@Base+0x164>
    f38c:	mov	w4, w26
    f390:	mov	w3, w25
    f394:	mov	x2, x21
    f398:	mov	x1, x23
    f39c:	mov	x0, x24
    f3a0:	bl	f118 <mpc_pow_si@@Base+0x30>
    f3a4:	mov	w19, w0
    f3a8:	b	f31c <mpc_pow_usi@@Base+0x164>
    f3ac:	mov	x27, #0x0                   	// #0
    f3b0:	b	f290 <mpc_pow_usi@@Base+0xd8>
    f3b4:	ldr	x1, [sp, #120]
    f3b8:	add	x0, sp, #0xa0
    f3bc:	bl	4cf0 <mpc_init2@plt>
    f3c0:	b	f2c4 <mpc_pow_usi@@Base+0x10c>
    f3c4:	mov	w3, #0x0                   	// #0
    f3c8:	mov	x2, x23
    f3cc:	mov	x1, x20
    f3d0:	ldr	x0, [sp, #96]
    f3d4:	bl	4ed0 <mpc_mul@plt>
    f3d8:	ldr	x0, [sp, #136]
    f3dc:	cbz	x0, f610 <mpc_pow_usi@@Base+0x458>
    f3e0:	mov	w2, #0x0                   	// #0
    f3e4:	ldr	x1, [sp, #96]
    f3e8:	mov	x0, x20
    f3ec:	bl	5580 <mpc_set@plt>
    f3f0:	b	f610 <mpc_pow_usi@@Base+0x458>
    f3f4:	sub	x22, x22, #0x2
    f3f8:	mov	w2, #0x0                   	// #0
    f3fc:	mov	x1, x20
    f400:	mov	x0, x20
    f404:	bl	4f30 <mpc_sqr@plt>
    f408:	mov	w3, #0x0                   	// #0
    f40c:	ldr	x2, [sp, #96]
    f410:	mov	x1, x20
    f414:	mov	x0, x20
    f418:	bl	4ed0 <mpc_mul@plt>
    f41c:	b	f424 <mpc_pow_usi@@Base+0x26c>
    f420:	mov	x22, x19
    f424:	sub	x19, x22, #0x1
    f428:	cmp	x22, #0x0
    f42c:	b.le	f478 <mpc_pow_usi@@Base+0x2c0>
    f430:	mov	w2, #0x0                   	// #0
    f434:	mov	x1, x20
    f438:	mov	x0, x20
    f43c:	bl	4f30 <mpc_sqr@plt>
    f440:	lsr	x1, x21, x19
    f444:	tbz	w1, #0, f420 <mpc_pow_usi@@Base+0x268>
    f448:	cmp	x19, #0x0
    f44c:	b.le	f45c <mpc_pow_usi@@Base+0x2a4>
    f450:	sub	w0, w19, #0x1
    f454:	lsr	x0, x21, x0
    f458:	tbnz	w0, #0, f3f4 <mpc_pow_usi@@Base+0x23c>
    f45c:	mov	w3, #0x0                   	// #0
    f460:	mov	x2, x23
    f464:	mov	x1, x20
    f468:	mov	x0, x20
    f46c:	bl	4ed0 <mpc_mul@plt>
    f470:	mov	x22, x19
    f474:	b	f424 <mpc_pow_usi@@Base+0x26c>
    f478:	tbnz	w25, #31, f528 <mpc_pow_usi@@Base+0x370>
    f47c:	ldr	x19, [sp, #240]
    f480:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
    f484:	cmp	x19, x0
    f488:	b.eq	f540 <mpc_pow_usi@@Base+0x388>  // b.none
    f48c:	ldr	x0, [sp, #272]
    f490:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
    f494:	cmp	x0, x1
    f498:	b.eq	f540 <mpc_pow_usi@@Base+0x388>  // b.none
    f49c:	sub	x19, x19, x0
    f4a0:	add	x1, x27, #0x5
    f4a4:	cmp	x19, #0x0
    f4a8:	b.le	f570 <mpc_pow_usi@@Base+0x3b8>
    f4ac:	ldr	x0, [sp, #128]
    f4b0:	add	x22, x0, x19
    f4b4:	add	x22, x22, #0x3
    f4b8:	tst	x26, #0xf
    f4bc:	ldr	x4, [x24]
    f4c0:	cinc	x4, x4, eq  // eq = none
    f4c4:	mov	w3, #0x1                   	// #1
    f4c8:	mov	w2, #0x0                   	// #0
    f4cc:	ldr	x0, [sp, #120]
    f4d0:	sub	x1, x0, x1
    f4d4:	mov	x0, x20
    f4d8:	bl	5450 <mpfr_can_round@plt>
    f4dc:	cbnz	w0, f588 <mpc_pow_usi@@Base+0x3d0>
    f4e0:	ldr	w0, [sp, #108]
    f4e4:	cbnz	w0, f508 <mpc_pow_usi@@Base+0x350>
    f4e8:	cmp	x19, #0x0
    f4ec:	cneg	x19, x19, lt  // lt = tstop
    f4f0:	ldr	x1, [x24]
    f4f4:	ldr	x0, [x24, #32]
    f4f8:	cmp	x0, x1
    f4fc:	csel	x0, x0, x1, ge  // ge = tcont
    f500:	cmp	x19, x0
    f504:	b.lt	f5c8 <mpc_pow_usi@@Base+0x410>  // b.tstop
    f508:	mov	w4, w26
    f50c:	mov	w3, w25
    f510:	mov	x2, x21
    f514:	mov	x1, x23
    f518:	mov	x0, x24
    f51c:	bl	f118 <mpc_pow_si@@Base+0x30>
    f520:	mov	w19, w0
    f524:	b	f55c <mpc_pow_usi@@Base+0x3a4>
    f528:	mov	w3, #0x0                   	// #0
    f52c:	mov	x2, x20
    f530:	mov	x1, #0x1                   	// #1
    f534:	mov	x0, x20
    f538:	bl	55b0 <mpc_ui_div@plt>
    f53c:	b	f47c <mpc_pow_usi@@Base+0x2c4>
    f540:	mov	w4, w26
    f544:	mov	w3, w25
    f548:	mov	x2, x21
    f54c:	mov	x1, x23
    f550:	mov	x0, x24
    f554:	bl	f118 <mpc_pow_si@@Base+0x30>
    f558:	mov	w19, w0
    f55c:	add	x0, sp, #0xe0
    f560:	bl	4a10 <mpc_clear@plt>
    f564:	cbnz	x28, f634 <mpc_pow_usi@@Base+0x47c>
    f568:	ldp	x27, x28, [sp, #80]
    f56c:	b	f31c <mpc_pow_usi@@Base+0x164>
    f570:	ldr	x0, [sp, #128]
    f574:	sub	x1, x0, x19
    f578:	add	x1, x1, #0x3
    f57c:	tbz	x19, #63, f4ac <mpc_pow_usi@@Base+0x2f4>
    f580:	add	x22, x27, #0x5
    f584:	b	f4b8 <mpc_pow_usi@@Base+0x300>
    f588:	ldr	x4, [x24, #32]
    f58c:	ldr	x0, [sp, #144]
    f590:	add	x4, x0, x4
    f594:	mov	w3, #0x1                   	// #1
    f598:	mov	w2, #0x0                   	// #0
    f59c:	ldr	x0, [sp, #120]
    f5a0:	sub	x1, x0, x22
    f5a4:	ldr	x0, [sp, #152]
    f5a8:	bl	5450 <mpfr_can_round@plt>
    f5ac:	cbz	w0, f4e0 <mpc_pow_usi@@Base+0x328>
    f5b0:	mov	w2, w26
    f5b4:	add	x1, sp, #0xe0
    f5b8:	mov	x0, x24
    f5bc:	bl	5580 <mpc_set@plt>
    f5c0:	mov	w19, w0
    f5c4:	b	f55c <mpc_pow_usi@@Base+0x3a4>
    f5c8:	ldr	x1, [x23]
    f5cc:	ldr	x0, [x23, #32]
    f5d0:	cmp	x0, x1
    f5d4:	csel	x0, x0, x1, ge  // ge = tcont
    f5d8:	ldr	x1, [sp, #120]
    f5dc:	add	x0, x1, x0
    f5e0:	str	x0, [sp, #120]
    f5e4:	mov	x1, x0
    f5e8:	mov	x0, x20
    f5ec:	bl	4c00 <mpc_set_prec@plt>
    f5f0:	cbnz	x28, f624 <mpc_pow_usi@@Base+0x46c>
    f5f4:	mov	w0, #0x1                   	// #1
    f5f8:	str	w0, [sp, #108]
    f5fc:	mov	w2, #0x0                   	// #0
    f600:	mov	x1, x23
    f604:	mov	x0, x20
    f608:	bl	4f30 <mpc_sqr@plt>
    f60c:	cbnz	x28, f3c4 <mpc_pow_usi@@Base+0x20c>
    f610:	ldr	x19, [sp, #112]
    f614:	cmp	x27, #0x0
    f618:	b.le	f478 <mpc_pow_usi@@Base+0x2c0>
    f61c:	mov	x22, x27
    f620:	b	f430 <mpc_pow_usi@@Base+0x278>
    f624:	ldr	x1, [sp, #120]
    f628:	ldr	x0, [sp, #96]
    f62c:	bl	4c00 <mpc_set_prec@plt>
    f630:	b	f5f4 <mpc_pow_usi@@Base+0x43c>
    f634:	add	x0, sp, #0xa0
    f638:	bl	4a10 <mpc_clear@plt>
    f63c:	ldp	x27, x28, [sp, #80]
    f640:	b	f31c <mpc_pow_usi@@Base+0x164>

000000000000f644 <mpc_pow_ui@@Base>:
    f644:	stp	x29, x30, [sp, #-16]!
    f648:	mov	x29, sp
    f64c:	mov	w4, w3
    f650:	mov	w3, #0x1                   	// #1
    f654:	bl	4df0 <mpc_pow_usi@plt>
    f658:	ldp	x29, x30, [sp], #16
    f65c:	ret

000000000000f660 <mpc_pow_z@@Base>:
    f660:	stp	x29, x30, [sp, #-128]!
    f664:	mov	x29, sp
    f668:	stp	x19, x20, [sp, #16]
    f66c:	stp	x21, x22, [sp, #32]
    f670:	stp	x23, x24, [sp, #48]
    f674:	mov	x22, x0
    f678:	mov	x23, x1
    f67c:	mov	x19, x2
    f680:	mov	w24, w3
    f684:	mov	w1, #0x2                   	// #2
    f688:	mov	x0, x2
    f68c:	bl	54b0 <__gmpz_sizeinbase@plt>
    f690:	mov	x21, x0
    f694:	ldr	w0, [x19, #4]
    f698:	tbnz	w0, #31, f734 <mpc_pow_z@@Base+0xd4>
    f69c:	sxtw	x1, w0
    f6a0:	cmp	x1, #0x1
    f6a4:	b.ls	f708 <mpc_pow_z@@Base+0xa8>  // b.plast
    f6a8:	mov	x2, #0x1                   	// #1
    f6ac:	cmp	x21, #0x0
    f6b0:	add	x20, sp, #0x40
    f6b4:	csel	x1, x21, x2, gt
    f6b8:	mov	x0, x20
    f6bc:	bl	53c0 <mpc_init3@plt>
    f6c0:	mov	w2, #0x0                   	// #0
    f6c4:	mov	x1, x19
    f6c8:	mov	x0, x20
    f6cc:	bl	50a0 <mpc_set_z@plt>
    f6d0:	mov	w3, w24
    f6d4:	mov	x2, x20
    f6d8:	mov	x1, x23
    f6dc:	mov	x0, x22
    f6e0:	bl	5240 <mpc_pow@plt>
    f6e4:	mov	w19, w0
    f6e8:	mov	x0, x20
    f6ec:	bl	4a10 <mpc_clear@plt>
    f6f0:	mov	w0, w19
    f6f4:	ldp	x19, x20, [sp, #16]
    f6f8:	ldp	x21, x22, [sp, #32]
    f6fc:	ldp	x23, x24, [sp, #48]
    f700:	ldp	x29, x30, [sp], #128
    f704:	ret
    f708:	ldr	x1, [x19, #8]
    f70c:	ldr	x2, [x1]
    f710:	cmp	w0, #0x0
    f714:	mov	w4, w24
    f718:	mov	w3, #0x1                   	// #1
    f71c:	csel	x2, x2, xzr, ne  // ne = any
    f720:	mov	x1, x23
    f724:	mov	x0, x22
    f728:	bl	4df0 <mpc_pow_usi@plt>
    f72c:	mov	w19, w0
    f730:	b	f6f0 <mpc_pow_z@@Base+0x90>
    f734:	mov	x0, x19
    f738:	bl	4c60 <__gmpz_fits_slong_p@plt>
    f73c:	cbz	w0, f6a8 <mpc_pow_z@@Base+0x48>
    f740:	mov	x0, x19
    f744:	bl	49a0 <__gmpz_get_si@plt>
    f748:	mov	w4, w24
    f74c:	mov	w3, #0xffffffff            	// #-1
    f750:	neg	x2, x0
    f754:	mov	x1, x23
    f758:	mov	x0, x22
    f75c:	bl	4df0 <mpc_pow_usi@plt>
    f760:	mov	w19, w0
    f764:	b	f6f0 <mpc_pow_z@@Base+0x90>

000000000000f768 <mpc_proj@@Base>:
    f768:	stp	x29, x30, [sp, #-32]!
    f76c:	mov	x29, sp
    f770:	stp	x19, x20, [sp, #16]
    f774:	mov	x20, x0
    f778:	mov	x19, x1
    f77c:	ldr	x1, [x1, #16]
    f780:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
    f784:	cmp	x1, x0
    f788:	b.eq	f798 <mpc_proj@@Base+0x30>  // b.none
    f78c:	ldr	x1, [x19, #48]
    f790:	cmp	x1, x0
    f794:	b.ne	f7cc <mpc_proj@@Base+0x64>  // b.any
    f798:	mov	w1, #0x1                   	// #1
    f79c:	mov	x0, x20
    f7a0:	bl	5120 <mpfr_set_inf@plt>
    f7a4:	ldr	w0, [x19, #40]
    f7a8:	mov	w1, #0x1                   	// #1
    f7ac:	cmp	w0, #0x0
    f7b0:	cneg	w1, w1, lt  // lt = tstop
    f7b4:	add	x0, x20, #0x20
    f7b8:	bl	4d10 <mpfr_set_zero@plt>
    f7bc:	mov	w0, #0x0                   	// #0
    f7c0:	ldp	x19, x20, [sp, #16]
    f7c4:	ldp	x29, x30, [sp], #32
    f7c8:	ret
    f7cc:	mov	x1, x19
    f7d0:	mov	x0, x20
    f7d4:	bl	5580 <mpc_set@plt>
    f7d8:	b	f7c0 <mpc_proj@@Base+0x58>

000000000000f7dc <mpc_real@@Base>:
    f7dc:	stp	x29, x30, [sp, #-16]!
    f7e0:	mov	x29, sp
    f7e4:	ldr	w3, [x1, #8]
    f7e8:	bl	51d0 <mpfr_set4@plt>
    f7ec:	ldp	x29, x30, [sp], #16
    f7f0:	ret
    f7f4:	cbnz	x1, f7fc <mpc_real@@Base+0x20>
    f7f8:	ret
    f7fc:	stp	x29, x30, [sp, #-16]!
    f800:	mov	x29, sp
    f804:	mov	x2, x1
    f808:	udiv	x1, x0, x1
    f80c:	msub	x1, x1, x2, x0
    f810:	mov	x0, x2
    f814:	bl	f7f4 <mpc_real@@Base+0x18>
    f818:	ldp	x29, x30, [sp], #16
    f81c:	ret

000000000000f820 <mpc_rootofunity@@Base>:
    f820:	stp	x29, x30, [sp, #-224]!
    f824:	mov	x29, sp
    f828:	stp	x19, x20, [sp, #16]
    f82c:	mov	x20, x0
    f830:	cbz	x1, f940 <mpc_rootofunity@@Base+0x120>
    f834:	stp	x21, x22, [sp, #32]
    f838:	mov	x19, x1
    f83c:	mov	w21, w3
    f840:	udiv	x22, x2, x1
    f844:	msub	x22, x22, x1, x2
    f848:	mov	x0, x22
    f84c:	bl	f7f4 <mpc_real@@Base+0x18>
    f850:	udiv	x19, x19, x0
    f854:	cmp	x19, #0x1
    f858:	b.eq	f95c <mpc_rootofunity@@Base+0x13c>  // b.none
    f85c:	udiv	x22, x22, x0
    f860:	cmp	x19, #0x2
    f864:	b.eq	f9bc <mpc_rootofunity@@Base+0x19c>  // b.none
    f868:	cmp	x19, #0x4
    f86c:	b.eq	fa1c <mpc_rootofunity@@Base+0x1fc>  // b.none
    f870:	cmp	x19, #0x3
    f874:	ccmp	x19, #0x6, #0x4, ne  // ne = any
    f878:	b.ne	fb04 <mpc_rootofunity@@Base+0x2e4>  // b.any
    f87c:	cmp	x19, #0x3
    f880:	b.eq	faa4 <mpc_rootofunity@@Base+0x284>  // b.none
    f884:	cmp	x19, #0x6
    f888:	b.ne	fab0 <mpc_rootofunity@@Base+0x290>  // b.any
    f88c:	and	x0, x22, #0xfffffffffffffffb
    f890:	cmp	x0, #0x1
    f894:	b.ne	fab0 <mpc_rootofunity@@Base+0x290>  // b.any
    f898:	stp	x23, x24, [sp, #48]
    f89c:	mov	x0, x20
    f8a0:	mov	x1, #0x1                   	// #1
    f8a4:	and	w3, w21, #0xf
    f8a8:	mov	x2, #0x0                   	// #0
    f8ac:	bl	49e0 <mpfr_set_si_2exp@plt>
    f8b0:	mov	w23, w0
    f8b4:	asr	w2, w21, #4
    f8b8:	cmp	x22, #0x1
    f8bc:	b.eq	ffd0 <mpc_rootofunity@@Base+0x7b0>  // b.none
    f8c0:	cmp	w2, #0x2
    f8c4:	b.eq	ffc8 <mpc_rootofunity@@Base+0x7a8>  // b.none
    f8c8:	cmp	w2, #0x3
    f8cc:	mov	w0, #0x2                   	// #2
    f8d0:	csel	w2, w2, w0, ne  // ne = any
    f8d4:	add	x21, x20, #0x20
    f8d8:	mov	x1, #0x3                   	// #3
    f8dc:	mov	x0, x21
    f8e0:	bl	5280 <mpfr_sqrt_ui@plt>
    f8e4:	mov	w19, w0
    f8e8:	mov	w3, #0x0                   	// #0
    f8ec:	mov	x2, #0x1                   	// #1
    f8f0:	mov	x1, x20
    f8f4:	mov	x0, x20
    f8f8:	bl	5530 <mpc_div_2ui@plt>
    f8fc:	mov	w2, #0x0                   	// #0
    f900:	mov	x1, x21
    f904:	mov	x0, x21
    f908:	bl	4b80 <mpfr_neg@plt>
    f90c:	neg	w19, w19
    f910:	mov	w1, #0x2                   	// #2
    f914:	tbnz	w23, #31, f920 <mpc_rootofunity@@Base+0x100>
    f918:	cmp	w23, #0x0
    f91c:	cset	w1, ne  // ne = any
    f920:	tbnz	w19, #31, fafc <mpc_rootofunity@@Base+0x2dc>
    f924:	cmp	w19, #0x0
    f928:	mov	w0, #0x4                   	// #4
    f92c:	csel	w19, w19, w0, eq  // eq = none
    f930:	orr	w0, w1, w19
    f934:	ldp	x21, x22, [sp, #32]
    f938:	ldp	x23, x24, [sp, #48]
    f93c:	b	f950 <mpc_rootofunity@@Base+0x130>
    f940:	bl	4a40 <mpfr_set_nan@plt>
    f944:	add	x0, x20, #0x20
    f948:	bl	4a40 <mpfr_set_nan@plt>
    f94c:	mov	w0, #0x0                   	// #0
    f950:	ldp	x19, x20, [sp, #16]
    f954:	ldp	x29, x30, [sp], #224
    f958:	ret
    f95c:	cmp	x22, x0
    f960:	b.cs	f980 <mpc_rootofunity@@Base+0x160>  // b.hs, b.nlast
    f964:	mov	w3, w21
    f968:	mov	x2, #0x0                   	// #0
    f96c:	mov	x1, #0x1                   	// #1
    f970:	mov	x0, x20
    f974:	bl	5040 <mpc_set_ui_ui@plt>
    f978:	ldp	x21, x22, [sp, #32]
    f97c:	b	f950 <mpc_rootofunity@@Base+0x130>
    f980:	stp	x23, x24, [sp, #48]
    f984:	stp	x25, x26, [sp, #64]
    f988:	str	x27, [sp, #80]
    f98c:	adrp	x4, 15000 <mpc_ui_ui_sub@@Base+0x1228>
    f990:	add	x4, x4, #0x4d0
    f994:	mov	w3, #0x40                  	// #64
    f998:	adrp	x2, 15000 <mpc_ui_ui_sub@@Base+0x1228>
    f99c:	add	x2, x2, #0x4d8
    f9a0:	adrp	x1, 15000 <mpc_ui_ui_sub@@Base+0x1228>
    f9a4:	add	x1, x1, #0x238
    f9a8:	adrp	x0, 27000 <mpc_ui_ui_sub@@Base+0x13228>
    f9ac:	ldr	x0, [x0, #4008]
    f9b0:	ldr	x0, [x0]
    f9b4:	bl	55a0 <fprintf@plt>
    f9b8:	bl	5000 <abort@plt>
    f9bc:	cmp	x22, #0x1
    f9c0:	b.ne	f9e0 <mpc_rootofunity@@Base+0x1c0>  // b.any
    f9c4:	mov	w3, w21
    f9c8:	mov	x2, #0x0                   	// #0
    f9cc:	mov	x1, #0xffffffffffffffff    	// #-1
    f9d0:	mov	x0, x20
    f9d4:	bl	52c0 <mpc_set_si_si@plt>
    f9d8:	ldp	x21, x22, [sp, #32]
    f9dc:	b	f950 <mpc_rootofunity@@Base+0x130>
    f9e0:	stp	x23, x24, [sp, #48]
    f9e4:	stp	x25, x26, [sp, #64]
    f9e8:	str	x27, [sp, #80]
    f9ec:	adrp	x4, 15000 <mpc_ui_ui_sub@@Base+0x1228>
    f9f0:	add	x4, x4, #0x4e8
    f9f4:	mov	w3, #0x46                  	// #70
    f9f8:	adrp	x2, 15000 <mpc_ui_ui_sub@@Base+0x1228>
    f9fc:	add	x2, x2, #0x4d8
    fa00:	adrp	x1, 15000 <mpc_ui_ui_sub@@Base+0x1228>
    fa04:	add	x1, x1, #0x238
    fa08:	adrp	x0, 27000 <mpc_ui_ui_sub@@Base+0x13228>
    fa0c:	ldr	x0, [x0, #4008]
    fa10:	ldr	x0, [x0]
    fa14:	bl	55a0 <fprintf@plt>
    fa18:	bl	5000 <abort@plt>
    fa1c:	and	x0, x22, #0xfffffffffffffffd
    fa20:	cmp	x0, #0x1
    fa24:	b.ne	fa4c <mpc_rootofunity@@Base+0x22c>  // b.any
    fa28:	cmp	x22, #0x1
    fa2c:	b.eq	fa88 <mpc_rootofunity@@Base+0x268>  // b.none
    fa30:	mov	w3, w21
    fa34:	mov	x2, #0xffffffffffffffff    	// #-1
    fa38:	mov	x1, #0x0                   	// #0
    fa3c:	mov	x0, x20
    fa40:	bl	52c0 <mpc_set_si_si@plt>
    fa44:	ldp	x21, x22, [sp, #32]
    fa48:	b	f950 <mpc_rootofunity@@Base+0x130>
    fa4c:	stp	x23, x24, [sp, #48]
    fa50:	stp	x25, x26, [sp, #64]
    fa54:	str	x27, [sp, #80]
    fa58:	adrp	x4, 15000 <mpc_ui_ui_sub@@Base+0x1228>
    fa5c:	add	x4, x4, #0x4f0
    fa60:	mov	w3, #0x4d                  	// #77
    fa64:	adrp	x2, 15000 <mpc_ui_ui_sub@@Base+0x1228>
    fa68:	add	x2, x2, #0x4d8
    fa6c:	adrp	x1, 15000 <mpc_ui_ui_sub@@Base+0x1228>
    fa70:	add	x1, x1, #0x238
    fa74:	adrp	x0, 27000 <mpc_ui_ui_sub@@Base+0x13228>
    fa78:	ldr	x0, [x0, #4008]
    fa7c:	ldr	x0, [x0]
    fa80:	bl	55a0 <fprintf@plt>
    fa84:	bl	5000 <abort@plt>
    fa88:	mov	w3, w21
    fa8c:	mov	x2, #0x1                   	// #1
    fa90:	mov	x1, #0x0                   	// #0
    fa94:	mov	x0, x20
    fa98:	bl	5040 <mpc_set_ui_ui@plt>
    fa9c:	ldp	x21, x22, [sp, #32]
    faa0:	b	f950 <mpc_rootofunity@@Base+0x130>
    faa4:	sub	x0, x22, #0x1
    faa8:	cmp	x0, #0x1
    faac:	b.ls	faec <mpc_rootofunity@@Base+0x2cc>  // b.plast
    fab0:	stp	x23, x24, [sp, #48]
    fab4:	stp	x25, x26, [sp, #64]
    fab8:	str	x27, [sp, #80]
    fabc:	adrp	x4, 15000 <mpc_ui_ui_sub@@Base+0x1228>
    fac0:	add	x4, x4, #0x508
    fac4:	mov	w3, #0x55                  	// #85
    fac8:	adrp	x2, 15000 <mpc_ui_ui_sub@@Base+0x1228>
    facc:	add	x2, x2, #0x4d8
    fad0:	adrp	x1, 15000 <mpc_ui_ui_sub@@Base+0x1228>
    fad4:	add	x1, x1, #0x238
    fad8:	adrp	x0, 27000 <mpc_ui_ui_sub@@Base+0x13228>
    fadc:	ldr	x0, [x0, #4008]
    fae0:	ldr	x0, [x0]
    fae4:	bl	55a0 <fprintf@plt>
    fae8:	bl	5000 <abort@plt>
    faec:	stp	x23, x24, [sp, #48]
    faf0:	mov	x0, x20
    faf4:	mov	x1, #0xffffffffffffffff    	// #-1
    faf8:	b	f8a4 <mpc_rootofunity@@Base+0x84>
    fafc:	mov	w19, #0x8                   	// #8
    fb00:	b	f930 <mpc_rootofunity@@Base+0x110>
    fb04:	cmp	x19, #0xc
    fb08:	b.eq	fbb0 <mpc_rootofunity@@Base+0x390>  // b.none
    fb0c:	cmp	x19, #0x8
    fb10:	b.ne	fde4 <mpc_rootofunity@@Base+0x5c4>  // b.any
    fb14:	and	x0, x22, #0xfffffffffffffffd
    fb18:	cmp	x0, #0x1
    fb1c:	b.eq	fb28 <mpc_rootofunity@@Base+0x308>  // b.none
    fb20:	cmp	x0, #0x5
    fb24:	b.ne	fd00 <mpc_rootofunity@@Base+0x4e0>  // b.any
    fb28:	stp	x23, x24, [sp, #48]
    fb2c:	and	w2, w21, #0xf
    fb30:	sub	x23, x22, #0x3
    fb34:	ands	x23, x23, #0xfffffffffffffffd
    fb38:	b.ne	1006c <mpc_rootofunity@@Base+0x84c>  // b.any
    fb3c:	cmp	w2, #0x2
    fb40:	b.eq	fd3c <mpc_rootofunity@@Base+0x51c>  // b.none
    fb44:	cmp	w2, #0x3
    fb48:	mov	w0, #0x2                   	// #2
    fb4c:	csel	w2, w2, w0, ne  // ne = any
    fb50:	asr	w21, w21, #4
    fb54:	cmp	x22, #0x4
    fb58:	b.hi	fd44 <mpc_rootofunity@@Base+0x524>  // b.pmore
    fb5c:	mov	x1, #0x2                   	// #2
    fb60:	mov	x0, x20
    fb64:	bl	5280 <mpfr_sqrt_ui@plt>
    fb68:	mov	w22, w0
    fb6c:	mov	w2, w21
    fb70:	mov	x1, #0x2                   	// #2
    fb74:	add	x0, x20, #0x20
    fb78:	bl	5280 <mpfr_sqrt_ui@plt>
    fb7c:	mov	w19, w0
    fb80:	mov	w3, #0x0                   	// #0
    fb84:	mov	x2, #0x1                   	// #1
    fb88:	mov	x1, x20
    fb8c:	mov	x0, x20
    fb90:	bl	5530 <mpc_div_2ui@plt>
    fb94:	cbnz	x23, fdac <mpc_rootofunity@@Base+0x58c>
    fb98:	mov	w2, #0x0                   	// #0
    fb9c:	mov	x1, x20
    fba0:	mov	x0, x20
    fba4:	bl	4b80 <mpfr_neg@plt>
    fba8:	neg	w22, w22
    fbac:	b	fdac <mpc_rootofunity@@Base+0x58c>
    fbb0:	and	x0, x22, #0xfffffffffffffffb
    fbb4:	cmp	x0, #0x1
    fbb8:	b.eq	fbc8 <mpc_rootofunity@@Base+0x3a8>  // b.none
    fbbc:	sub	x0, x22, #0x7
    fbc0:	tst	x0, #0xfffffffffffffffb
    fbc4:	b.ne	fc58 <mpc_rootofunity@@Base+0x438>  // b.any
    fbc8:	stp	x23, x24, [sp, #48]
    fbcc:	stp	x25, x26, [sp, #64]
    fbd0:	and	w2, w21, #0xf
    fbd4:	and	x24, x22, #0xfffffffffffffffd
    fbd8:	cmp	x24, #0x5
    fbdc:	b.ne	10008 <mpc_rootofunity@@Base+0x7e8>  // b.any
    fbe0:	cmp	w2, #0x2
    fbe4:	b.eq	10000 <mpc_rootofunity@@Base+0x7e0>  // b.none
    fbe8:	cmp	w2, #0x3
    fbec:	mov	w0, #0x2                   	// #2
    fbf0:	csel	w2, w2, w0, ne  // ne = any
    fbf4:	mov	x25, x20
    fbf8:	mov	x1, #0x3                   	// #3
    fbfc:	mov	x0, x20
    fc00:	bl	5280 <mpfr_sqrt_ui@plt>
    fc04:	mov	w23, w0
    fc08:	add	x0, x20, #0x20
    fc0c:	mov	x1, #0xffffffffffffffff    	// #-1
    fc10:	cmp	x22, #0x5
    fc14:	b.hi	fc98 <mpc_rootofunity@@Base+0x478>  // b.pmore
    fc18:	asr	w3, w21, #4
    fc1c:	mov	x2, #0x0                   	// #0
    fc20:	mov	x1, #0x1                   	// #1
    fc24:	bl	49e0 <mpfr_set_si_2exp@plt>
    fc28:	mov	w19, w0
    fc2c:	mov	w3, #0x0                   	// #0
    fc30:	mov	x2, #0x1                   	// #1
    fc34:	mov	x1, x20
    fc38:	mov	x0, x20
    fc3c:	bl	5530 <mpc_div_2ui@plt>
    fc40:	mov	w2, #0x0                   	// #0
    fc44:	mov	x1, x25
    fc48:	mov	x0, x25
    fc4c:	bl	4b80 <mpfr_neg@plt>
    fc50:	neg	w23, w23
    fc54:	b	fcc4 <mpc_rootofunity@@Base+0x4a4>
    fc58:	stp	x23, x24, [sp, #48]
    fc5c:	stp	x25, x26, [sp, #64]
    fc60:	str	x27, [sp, #80]
    fc64:	adrp	x4, 15000 <mpc_ui_ui_sub@@Base+0x1228>
    fc68:	add	x4, x4, #0x550
    fc6c:	mov	w3, #0x6f                  	// #111
    fc70:	adrp	x2, 15000 <mpc_ui_ui_sub@@Base+0x1228>
    fc74:	add	x2, x2, #0x4d8
    fc78:	adrp	x1, 15000 <mpc_ui_ui_sub@@Base+0x1228>
    fc7c:	add	x1, x1, #0x238
    fc80:	adrp	x0, 27000 <mpc_ui_ui_sub@@Base+0x13228>
    fc84:	ldr	x0, [x0, #4008]
    fc88:	ldr	x0, [x0]
    fc8c:	bl	55a0 <fprintf@plt>
    fc90:	bl	5000 <abort@plt>
    fc94:	mov	x1, #0x1                   	// #1
    fc98:	asr	w3, w21, #4
    fc9c:	mov	x2, #0x0                   	// #0
    fca0:	bl	49e0 <mpfr_set_si_2exp@plt>
    fca4:	mov	w19, w0
    fca8:	mov	w3, #0x0                   	// #0
    fcac:	mov	x2, #0x1                   	// #1
    fcb0:	mov	x1, x20
    fcb4:	mov	x0, x20
    fcb8:	bl	5530 <mpc_div_2ui@plt>
    fcbc:	cmp	x24, #0x5
    fcc0:	b.eq	fc40 <mpc_rootofunity@@Base+0x420>  // b.none
    fcc4:	mov	w1, #0x2                   	// #2
    fcc8:	tbnz	w23, #31, fcd4 <mpc_rootofunity@@Base+0x4b4>
    fccc:	cmp	w23, #0x0
    fcd0:	cset	w1, ne  // ne = any
    fcd4:	tbnz	w19, #31, fcf8 <mpc_rootofunity@@Base+0x4d8>
    fcd8:	cmp	w19, #0x0
    fcdc:	mov	w0, #0x4                   	// #4
    fce0:	csel	w19, w19, w0, eq  // eq = none
    fce4:	orr	w0, w1, w19
    fce8:	ldp	x21, x22, [sp, #32]
    fcec:	ldp	x23, x24, [sp, #48]
    fcf0:	ldp	x25, x26, [sp, #64]
    fcf4:	b	f950 <mpc_rootofunity@@Base+0x130>
    fcf8:	mov	w19, #0x8                   	// #8
    fcfc:	b	fce4 <mpc_rootofunity@@Base+0x4c4>
    fd00:	stp	x23, x24, [sp, #48]
    fd04:	stp	x25, x26, [sp, #64]
    fd08:	str	x27, [sp, #80]
    fd0c:	adrp	x4, 15000 <mpc_ui_ui_sub@@Base+0x1228>
    fd10:	add	x4, x4, #0x578
    fd14:	mov	w3, #0x86                  	// #134
    fd18:	adrp	x2, 15000 <mpc_ui_ui_sub@@Base+0x1228>
    fd1c:	add	x2, x2, #0x4d8
    fd20:	adrp	x1, 15000 <mpc_ui_ui_sub@@Base+0x1228>
    fd24:	add	x1, x1, #0x238
    fd28:	adrp	x0, 27000 <mpc_ui_ui_sub@@Base+0x13228>
    fd2c:	ldr	x0, [x0, #4008]
    fd30:	ldr	x0, [x0]
    fd34:	bl	55a0 <fprintf@plt>
    fd38:	bl	5000 <abort@plt>
    fd3c:	mov	w2, #0x3                   	// #3
    fd40:	b	fb50 <mpc_rootofunity@@Base+0x330>
    fd44:	cmp	w21, #0x2
    fd48:	b.eq	fff8 <mpc_rootofunity@@Base+0x7d8>  // b.none
    fd4c:	cmp	w21, #0x3
    fd50:	mov	w0, #0x2                   	// #2
    fd54:	csel	w21, w21, w0, ne  // ne = any
    fd58:	mov	x1, #0x2                   	// #2
    fd5c:	mov	x0, x20
    fd60:	bl	5280 <mpfr_sqrt_ui@plt>
    fd64:	mov	w22, w0
    fd68:	add	x24, x20, #0x20
    fd6c:	mov	w2, w21
    fd70:	mov	x1, #0x2                   	// #2
    fd74:	mov	x0, x24
    fd78:	bl	5280 <mpfr_sqrt_ui@plt>
    fd7c:	mov	w19, w0
    fd80:	mov	w3, #0x0                   	// #0
    fd84:	mov	x2, #0x1                   	// #1
    fd88:	mov	x1, x20
    fd8c:	mov	x0, x20
    fd90:	bl	5530 <mpc_div_2ui@plt>
    fd94:	cbz	x23, 10054 <mpc_rootofunity@@Base+0x834>
    fd98:	mov	w2, #0x0                   	// #0
    fd9c:	mov	x1, x24
    fda0:	mov	x0, x24
    fda4:	bl	4b80 <mpfr_neg@plt>
    fda8:	neg	w19, w19
    fdac:	mov	w1, #0x2                   	// #2
    fdb0:	tbnz	w22, #31, fdbc <mpc_rootofunity@@Base+0x59c>
    fdb4:	cmp	w22, #0x0
    fdb8:	cset	w1, ne  // ne = any
    fdbc:	tbnz	w19, #31, fddc <mpc_rootofunity@@Base+0x5bc>
    fdc0:	cmp	w19, #0x0
    fdc4:	mov	w0, #0x4                   	// #4
    fdc8:	csel	w19, w19, w0, eq  // eq = none
    fdcc:	orr	w0, w1, w19
    fdd0:	ldp	x21, x22, [sp, #32]
    fdd4:	ldp	x23, x24, [sp, #48]
    fdd8:	b	f950 <mpc_rootofunity@@Base+0x130>
    fddc:	mov	w19, #0x8                   	// #8
    fde0:	b	fdcc <mpc_rootofunity@@Base+0x5ac>
    fde4:	stp	x23, x24, [sp, #48]
    fde8:	stp	x25, x26, [sp, #64]
    fdec:	str	x27, [sp, #80]
    fdf0:	ldr	x0, [x20]
    fdf4:	ldr	x23, [x20, #32]
    fdf8:	cmp	x23, x0
    fdfc:	csel	x23, x23, x0, ge  // ge = tcont
    fe00:	mov	x1, #0x43                  	// #67
    fe04:	add	x0, sp, #0xa0
    fe08:	bl	5440 <mpfr_init2@plt>
    fe0c:	mov	x1, #0x43                  	// #67
    fe10:	add	x0, sp, #0x80
    fe14:	bl	5440 <mpfr_init2@plt>
    fe18:	mov	x1, #0x43                  	// #67
    fe1c:	add	x0, sp, #0x60
    fe20:	bl	5440 <mpfr_init2@plt>
    fe24:	add	x24, sp, #0xc0
    fe28:	mov	x0, x24
    fe2c:	bl	52b0 <__gmpq_init@plt>
    fe30:	mov	x2, x19
    fe34:	mov	x1, x22
    fe38:	mov	x0, x24
    fe3c:	bl	5100 <__gmpq_set_ui@plt>
    fe40:	mov	x2, #0x1                   	// #1
    fe44:	mov	x1, x24
    fe48:	mov	x0, x24
    fe4c:	bl	5570 <__gmpq_mul_2exp@plt>
    fe50:	asr	w27, w21, #4
    fe54:	cmp	w27, #0x0
    fe58:	cset	x26, eq  // eq = none
    fe5c:	add	x19, sp, #0xa0
    fe60:	add	x24, sp, #0x80
    fe64:	add	x22, sp, #0x60
    fe68:	add	x25, sp, #0xc0
    fe6c:	and	w21, w21, #0xf
    fe70:	mov	x0, x23
    fe74:	bl	4d20 <mpc_ceil_log2@plt>
    fe78:	add	x0, x0, #0x5
    fe7c:	add	x23, x23, x0
    fe80:	mov	x1, x23
    fe84:	mov	x0, x19
    fe88:	bl	4c80 <mpfr_set_prec@plt>
    fe8c:	mov	x1, x23
    fe90:	mov	x0, x24
    fe94:	bl	4c80 <mpfr_set_prec@plt>
    fe98:	mov	x1, x23
    fe9c:	mov	x0, x22
    fea0:	bl	4c80 <mpfr_set_prec@plt>
    fea4:	mov	w1, #0x0                   	// #0
    fea8:	mov	x0, x19
    feac:	bl	4a80 <mpfr_const_pi@plt>
    feb0:	mov	w3, #0x0                   	// #0
    feb4:	mov	x2, x25
    feb8:	mov	x1, x19
    febc:	mov	x0, x19
    fec0:	bl	49d0 <mpfr_mul_q@plt>
    fec4:	mov	w3, #0x0                   	// #0
    fec8:	mov	x2, x19
    fecc:	mov	x1, x22
    fed0:	mov	x0, x24
    fed4:	bl	5520 <mpfr_sin_cos@plt>
    fed8:	cmp	w21, #0x0
    fedc:	ldr	x4, [x20]
    fee0:	ldr	x1, [sp, #112]
    fee4:	add	x1, x23, x1
    fee8:	cinc	x4, x4, eq  // eq = none
    feec:	mov	w3, #0x1                   	// #1
    fef0:	mov	w2, #0x0                   	// #0
    fef4:	sub	x1, x1, #0x4
    fef8:	mov	x0, x22
    fefc:	bl	5450 <mpfr_can_round@plt>
    ff00:	cbz	w0, fe70 <mpc_rootofunity@@Base+0x650>
    ff04:	ldr	x4, [x20, #32]
    ff08:	ldr	x1, [sp, #144]
    ff0c:	add	x1, x23, x1
    ff10:	add	x4, x26, x4
    ff14:	mov	w3, #0x1                   	// #1
    ff18:	mov	w2, #0x0                   	// #0
    ff1c:	sub	x1, x1, #0x4
    ff20:	mov	x0, x24
    ff24:	bl	5450 <mpfr_can_round@plt>
    ff28:	cbz	w0, fe70 <mpc_rootofunity@@Base+0x650>
    ff2c:	add	x0, sp, #0x60
    ff30:	ldr	w3, [sp, #104]
    ff34:	mov	w2, w21
    ff38:	mov	x21, x0
    ff3c:	mov	x1, x0
    ff40:	mov	x0, x20
    ff44:	bl	51d0 <mpfr_set4@plt>
    ff48:	mov	w23, w0
    ff4c:	add	x22, sp, #0x80
    ff50:	ldr	w3, [sp, #136]
    ff54:	mov	w2, w27
    ff58:	mov	x1, x22
    ff5c:	add	x0, x20, #0x20
    ff60:	bl	51d0 <mpfr_set4@plt>
    ff64:	mov	w19, w0
    ff68:	add	x0, sp, #0xa0
    ff6c:	bl	4d60 <mpfr_clear@plt>
    ff70:	mov	x0, x22
    ff74:	bl	4d60 <mpfr_clear@plt>
    ff78:	mov	x0, x21
    ff7c:	bl	4d60 <mpfr_clear@plt>
    ff80:	add	x0, sp, #0xc0
    ff84:	bl	4fb0 <__gmpq_clear@plt>
    ff88:	mov	w1, #0x2                   	// #2
    ff8c:	tbnz	w23, #31, ff98 <mpc_rootofunity@@Base+0x778>
    ff90:	cmp	w23, #0x0
    ff94:	cset	w1, ne  // ne = any
    ff98:	tbnz	w19, #31, ffc0 <mpc_rootofunity@@Base+0x7a0>
    ff9c:	cmp	w19, #0x0
    ffa0:	mov	w0, #0x4                   	// #4
    ffa4:	csel	w19, w19, w0, eq  // eq = none
    ffa8:	orr	w0, w1, w19
    ffac:	ldp	x21, x22, [sp, #32]
    ffb0:	ldp	x23, x24, [sp, #48]
    ffb4:	ldp	x25, x26, [sp, #64]
    ffb8:	ldr	x27, [sp, #80]
    ffbc:	b	f950 <mpc_rootofunity@@Base+0x130>
    ffc0:	mov	w19, #0x8                   	// #8
    ffc4:	b	ffa8 <mpc_rootofunity@@Base+0x788>
    ffc8:	mov	w2, #0x3                   	// #3
    ffcc:	b	f8d4 <mpc_rootofunity@@Base+0xb4>
    ffd0:	mov	x1, #0x3                   	// #3
    ffd4:	add	x0, x20, #0x20
    ffd8:	bl	5280 <mpfr_sqrt_ui@plt>
    ffdc:	mov	w19, w0
    ffe0:	mov	w3, #0x0                   	// #0
    ffe4:	mov	x2, #0x1                   	// #1
    ffe8:	mov	x1, x20
    ffec:	mov	x0, x20
    fff0:	bl	5530 <mpc_div_2ui@plt>
    fff4:	b	f910 <mpc_rootofunity@@Base+0xf0>
    fff8:	mov	w21, #0x3                   	// #3
    fffc:	b	fd58 <mpc_rootofunity@@Base+0x538>
   10000:	mov	w2, #0x3                   	// #3
   10004:	b	fbf4 <mpc_rootofunity@@Base+0x3d4>
   10008:	mov	x25, x20
   1000c:	mov	x1, #0x3                   	// #3
   10010:	mov	x0, x20
   10014:	bl	5280 <mpfr_sqrt_ui@plt>
   10018:	mov	w23, w0
   1001c:	add	x0, x20, #0x20
   10020:	cmp	x22, #0x5
   10024:	b.ls	fc94 <mpc_rootofunity@@Base+0x474>  // b.plast
   10028:	asr	w3, w21, #4
   1002c:	mov	x2, #0x0                   	// #0
   10030:	mov	x1, #0xffffffffffffffff    	// #-1
   10034:	bl	49e0 <mpfr_set_si_2exp@plt>
   10038:	mov	w19, w0
   1003c:	mov	w3, #0x0                   	// #0
   10040:	mov	x2, #0x1                   	// #1
   10044:	mov	x1, x20
   10048:	mov	x0, x20
   1004c:	bl	5530 <mpc_div_2ui@plt>
   10050:	b	fcc4 <mpc_rootofunity@@Base+0x4a4>
   10054:	mov	w2, #0x0                   	// #0
   10058:	mov	x1, x20
   1005c:	mov	x0, x20
   10060:	bl	4b80 <mpfr_neg@plt>
   10064:	neg	w22, w22
   10068:	b	fd98 <mpc_rootofunity@@Base+0x578>
   1006c:	asr	w21, w21, #4
   10070:	cmp	x22, #0x4
   10074:	b.hi	fd44 <mpc_rootofunity@@Base+0x524>  // b.pmore
   10078:	mov	x1, #0x2                   	// #2
   1007c:	mov	x0, x20
   10080:	bl	5280 <mpfr_sqrt_ui@plt>
   10084:	mov	w22, w0
   10088:	mov	w2, w21
   1008c:	mov	x1, #0x2                   	// #2
   10090:	add	x0, x20, #0x20
   10094:	bl	5280 <mpfr_sqrt_ui@plt>
   10098:	mov	w19, w0
   1009c:	mov	w3, #0x0                   	// #0
   100a0:	mov	x2, #0x1                   	// #1
   100a4:	mov	x1, x20
   100a8:	mov	x0, x20
   100ac:	bl	5530 <mpc_div_2ui@plt>
   100b0:	b	fdac <mpc_rootofunity@@Base+0x58c>

00000000000100b4 <mpc_urandom@@Base>:
   100b4:	stp	x29, x30, [sp, #-48]!
   100b8:	mov	x29, sp
   100bc:	stp	x19, x20, [sp, #16]
   100c0:	str	x21, [sp, #32]
   100c4:	mov	x20, x0
   100c8:	mov	x21, x1
   100cc:	bl	5500 <mpfr_urandomb@plt>
   100d0:	mov	w19, w0
   100d4:	mov	x1, x21
   100d8:	add	x0, x20, #0x20
   100dc:	bl	5500 <mpfr_urandomb@plt>
   100e0:	cmp	w19, #0x0
   100e4:	ccmp	w0, #0x0, #0x4, ne  // ne = any
   100e8:	cset	w0, ne  // ne = any
   100ec:	ldp	x19, x20, [sp, #16]
   100f0:	ldr	x21, [sp, #32]
   100f4:	ldp	x29, x30, [sp], #48
   100f8:	ret

00000000000100fc <mpc_set@@Base>:
   100fc:	stp	x29, x30, [sp, #-48]!
   10100:	mov	x29, sp
   10104:	stp	x19, x20, [sp, #16]
   10108:	stp	x21, x22, [sp, #32]
   1010c:	mov	x22, x0
   10110:	mov	x19, x1
   10114:	mov	w20, w2
   10118:	ldr	w3, [x1, #8]
   1011c:	and	w2, w2, #0xf
   10120:	bl	51d0 <mpfr_set4@plt>
   10124:	mov	w21, w0
   10128:	ldr	w3, [x19, #40]
   1012c:	asr	w2, w20, #4
   10130:	add	x1, x19, #0x20
   10134:	add	x0, x22, #0x20
   10138:	bl	51d0 <mpfr_set4@plt>
   1013c:	mov	w1, #0x2                   	// #2
   10140:	tbnz	w21, #31, 1014c <mpc_set@@Base+0x50>
   10144:	cmp	w21, #0x0
   10148:	cset	w1, ne  // ne = any
   1014c:	tbnz	w0, #31, 10170 <mpc_set@@Base+0x74>
   10150:	cmp	w0, #0x0
   10154:	mov	w2, #0x4                   	// #4
   10158:	csel	w0, w0, w2, eq  // eq = none
   1015c:	orr	w0, w1, w0
   10160:	ldp	x19, x20, [sp, #16]
   10164:	ldp	x21, x22, [sp, #32]
   10168:	ldp	x29, x30, [sp], #48
   1016c:	ret
   10170:	mov	w0, #0x8                   	// #8
   10174:	b	1015c <mpc_set@@Base+0x60>

0000000000010178 <mpc_set_prec@@Base>:
   10178:	stp	x29, x30, [sp, #-32]!
   1017c:	mov	x29, sp
   10180:	stp	x19, x20, [sp, #16]
   10184:	mov	x19, x0
   10188:	mov	x20, x1
   1018c:	bl	4c80 <mpfr_set_prec@plt>
   10190:	mov	x1, x20
   10194:	add	x0, x19, #0x20
   10198:	bl	4c80 <mpfr_set_prec@plt>
   1019c:	ldp	x19, x20, [sp, #16]
   101a0:	ldp	x29, x30, [sp], #32
   101a4:	ret

00000000000101a8 <mpc_set_str@@Base>:
   101a8:	stp	x29, x30, [sp, #-48]!
   101ac:	mov	x29, sp
   101b0:	stp	x19, x20, [sp, #16]
   101b4:	mov	x20, x0
   101b8:	mov	w4, w3
   101bc:	mov	w3, w2
   101c0:	add	x2, sp, #0x28
   101c4:	bl	4f00 <mpc_strtoc@plt>
   101c8:	cmn	w0, #0x1
   101cc:	b.eq	10210 <mpc_set_str@@Base+0x68>  // b.none
   101d0:	mov	w19, w0
   101d4:	bl	5170 <__ctype_b_loc@plt>
   101d8:	ldr	x4, [x0]
   101dc:	ldr	x1, [sp, #40]
   101e0:	ldrb	w2, [x1]
   101e4:	and	x3, x2, #0xff
   101e8:	ldrh	w3, [x4, x3, lsl #1]
   101ec:	tbz	w3, #13, 101fc <mpc_set_str@@Base+0x54>
   101f0:	add	x1, x1, #0x1
   101f4:	str	x1, [sp, #40]
   101f8:	b	101dc <mpc_set_str@@Base+0x34>
   101fc:	cbnz	w2, 10210 <mpc_set_str@@Base+0x68>
   10200:	mov	w0, w19
   10204:	ldp	x19, x20, [sp, #16]
   10208:	ldp	x29, x30, [sp], #48
   1020c:	ret
   10210:	mov	x0, x20
   10214:	bl	4a40 <mpfr_set_nan@plt>
   10218:	add	x0, x20, #0x20
   1021c:	bl	4a40 <mpfr_set_nan@plt>
   10220:	mov	w19, #0xffffffff            	// #-1
   10224:	b	10200 <mpc_set_str@@Base+0x58>

0000000000010228 <mpc_set_fr@@Base>:
   10228:	stp	x29, x30, [sp, #-32]!
   1022c:	mov	x29, sp
   10230:	str	x19, [sp, #16]
   10234:	mov	x19, x0
   10238:	and	w2, w2, #0xf
   1023c:	bl	4e80 <mpfr_set@plt>
   10240:	mov	w2, #0x1                   	// #1
   10244:	str	w2, [x19, #40]
   10248:	mov	x2, #0x8000000000000001    	// #-9223372036854775807
   1024c:	str	x2, [x19, #48]
   10250:	tbnz	w0, #31, 10268 <mpc_set_fr@@Base+0x40>
   10254:	cmp	w0, #0x0
   10258:	cset	w0, ne  // ne = any
   1025c:	ldr	x19, [sp, #16]
   10260:	ldp	x29, x30, [sp], #32
   10264:	ret
   10268:	mov	w0, #0x2                   	// #2
   1026c:	b	1025c <mpc_set_fr@@Base+0x34>

0000000000010270 <mpc_set_d@@Base>:
   10270:	stp	x29, x30, [sp, #-32]!
   10274:	mov	x29, sp
   10278:	str	x19, [sp, #16]
   1027c:	mov	x19, x0
   10280:	and	w1, w1, #0xf
   10284:	bl	4c30 <mpfr_set_d@plt>
   10288:	mov	w2, #0x1                   	// #1
   1028c:	str	w2, [x19, #40]
   10290:	mov	x2, #0x8000000000000001    	// #-9223372036854775807
   10294:	str	x2, [x19, #48]
   10298:	tbnz	w0, #31, 102b0 <mpc_set_d@@Base+0x40>
   1029c:	cmp	w0, #0x0
   102a0:	cset	w0, ne  // ne = any
   102a4:	ldr	x19, [sp, #16]
   102a8:	ldp	x29, x30, [sp], #32
   102ac:	ret
   102b0:	mov	w0, #0x2                   	// #2
   102b4:	b	102a4 <mpc_set_d@@Base+0x34>

00000000000102b8 <mpc_set_ld@@Base>:
   102b8:	stp	x29, x30, [sp, #-32]!
   102bc:	mov	x29, sp
   102c0:	str	x19, [sp, #16]
   102c4:	mov	x19, x0
   102c8:	and	w1, w1, #0xf
   102cc:	bl	49b0 <mpfr_set_ld@plt>
   102d0:	mov	w2, #0x1                   	// #1
   102d4:	str	w2, [x19, #40]
   102d8:	mov	x2, #0x8000000000000001    	// #-9223372036854775807
   102dc:	str	x2, [x19, #48]
   102e0:	tbnz	w0, #31, 102f8 <mpc_set_ld@@Base+0x40>
   102e4:	cmp	w0, #0x0
   102e8:	cset	w0, ne  // ne = any
   102ec:	ldr	x19, [sp, #16]
   102f0:	ldp	x29, x30, [sp], #32
   102f4:	ret
   102f8:	mov	w0, #0x2                   	// #2
   102fc:	b	102ec <mpc_set_ld@@Base+0x34>

0000000000010300 <mpc_set_ui@@Base>:
   10300:	stp	x29, x30, [sp, #-32]!
   10304:	mov	x29, sp
   10308:	str	x19, [sp, #16]
   1030c:	mov	x19, x0
   10310:	and	w2, w2, #0xf
   10314:	bl	5510 <mpfr_set_ui@plt>
   10318:	mov	w2, #0x1                   	// #1
   1031c:	str	w2, [x19, #40]
   10320:	mov	x2, #0x8000000000000001    	// #-9223372036854775807
   10324:	str	x2, [x19, #48]
   10328:	tbnz	w0, #31, 10340 <mpc_set_ui@@Base+0x40>
   1032c:	cmp	w0, #0x0
   10330:	cset	w0, ne  // ne = any
   10334:	ldr	x19, [sp, #16]
   10338:	ldp	x29, x30, [sp], #32
   1033c:	ret
   10340:	mov	w0, #0x2                   	// #2
   10344:	b	10334 <mpc_set_ui@@Base+0x34>

0000000000010348 <mpc_set_si@@Base>:
   10348:	stp	x29, x30, [sp, #-32]!
   1034c:	mov	x29, sp
   10350:	str	x19, [sp, #16]
   10354:	mov	x19, x0
   10358:	and	w2, w2, #0xf
   1035c:	bl	5270 <mpfr_set_si@plt>
   10360:	mov	w2, #0x1                   	// #1
   10364:	str	w2, [x19, #40]
   10368:	mov	x2, #0x8000000000000001    	// #-9223372036854775807
   1036c:	str	x2, [x19, #48]
   10370:	tbnz	w0, #31, 10388 <mpc_set_si@@Base+0x40>
   10374:	cmp	w0, #0x0
   10378:	cset	w0, ne  // ne = any
   1037c:	ldr	x19, [sp, #16]
   10380:	ldp	x29, x30, [sp], #32
   10384:	ret
   10388:	mov	w0, #0x2                   	// #2
   1038c:	b	1037c <mpc_set_si@@Base+0x34>

0000000000010390 <mpc_set_z@@Base>:
   10390:	stp	x29, x30, [sp, #-32]!
   10394:	mov	x29, sp
   10398:	str	x19, [sp, #16]
   1039c:	mov	x19, x0
   103a0:	and	w2, w2, #0xf
   103a4:	bl	4ec0 <mpfr_set_z@plt>
   103a8:	mov	w2, #0x1                   	// #1
   103ac:	str	w2, [x19, #40]
   103b0:	mov	x2, #0x8000000000000001    	// #-9223372036854775807
   103b4:	str	x2, [x19, #48]
   103b8:	tbnz	w0, #31, 103d0 <mpc_set_z@@Base+0x40>
   103bc:	cmp	w0, #0x0
   103c0:	cset	w0, ne  // ne = any
   103c4:	ldr	x19, [sp, #16]
   103c8:	ldp	x29, x30, [sp], #32
   103cc:	ret
   103d0:	mov	w0, #0x2                   	// #2
   103d4:	b	103c4 <mpc_set_z@@Base+0x34>

00000000000103d8 <mpc_set_q@@Base>:
   103d8:	stp	x29, x30, [sp, #-32]!
   103dc:	mov	x29, sp
   103e0:	str	x19, [sp, #16]
   103e4:	mov	x19, x0
   103e8:	and	w2, w2, #0xf
   103ec:	bl	5290 <mpfr_set_q@plt>
   103f0:	mov	w2, #0x1                   	// #1
   103f4:	str	w2, [x19, #40]
   103f8:	mov	x2, #0x8000000000000001    	// #-9223372036854775807
   103fc:	str	x2, [x19, #48]
   10400:	tbnz	w0, #31, 10418 <mpc_set_q@@Base+0x40>
   10404:	cmp	w0, #0x0
   10408:	cset	w0, ne  // ne = any
   1040c:	ldr	x19, [sp, #16]
   10410:	ldp	x29, x30, [sp], #32
   10414:	ret
   10418:	mov	w0, #0x2                   	// #2
   1041c:	b	1040c <mpc_set_q@@Base+0x34>

0000000000010420 <mpc_set_f@@Base>:
   10420:	stp	x29, x30, [sp, #-32]!
   10424:	mov	x29, sp
   10428:	str	x19, [sp, #16]
   1042c:	mov	x19, x0
   10430:	and	w2, w2, #0xf
   10434:	bl	4b60 <mpfr_set_f@plt>
   10438:	mov	w2, #0x1                   	// #1
   1043c:	str	w2, [x19, #40]
   10440:	mov	x2, #0x8000000000000001    	// #-9223372036854775807
   10444:	str	x2, [x19, #48]
   10448:	tbnz	w0, #31, 10460 <mpc_set_f@@Base+0x40>
   1044c:	cmp	w0, #0x0
   10450:	cset	w0, ne  // ne = any
   10454:	ldr	x19, [sp, #16]
   10458:	ldp	x29, x30, [sp], #32
   1045c:	ret
   10460:	mov	w0, #0x2                   	// #2
   10464:	b	10454 <mpc_set_f@@Base+0x34>

0000000000010468 <mpc_set_uj@@Base>:
   10468:	stp	x29, x30, [sp, #-32]!
   1046c:	mov	x29, sp
   10470:	str	x19, [sp, #16]
   10474:	mov	x19, x0
   10478:	and	w2, w2, #0xf
   1047c:	bl	5400 <__gmpfr_set_uj@plt>
   10480:	mov	w2, #0x1                   	// #1
   10484:	str	w2, [x19, #40]
   10488:	mov	x2, #0x8000000000000001    	// #-9223372036854775807
   1048c:	str	x2, [x19, #48]
   10490:	tbnz	w0, #31, 104a8 <mpc_set_uj@@Base+0x40>
   10494:	cmp	w0, #0x0
   10498:	cset	w0, ne  // ne = any
   1049c:	ldr	x19, [sp, #16]
   104a0:	ldp	x29, x30, [sp], #32
   104a4:	ret
   104a8:	mov	w0, #0x2                   	// #2
   104ac:	b	1049c <mpc_set_uj@@Base+0x34>

00000000000104b0 <mpc_set_sj@@Base>:
   104b0:	stp	x29, x30, [sp, #-32]!
   104b4:	mov	x29, sp
   104b8:	str	x19, [sp, #16]
   104bc:	mov	x19, x0
   104c0:	and	w2, w2, #0xf
   104c4:	bl	4d70 <__gmpfr_set_sj@plt>
   104c8:	mov	w2, #0x1                   	// #1
   104cc:	str	w2, [x19, #40]
   104d0:	mov	x2, #0x8000000000000001    	// #-9223372036854775807
   104d4:	str	x2, [x19, #48]
   104d8:	tbnz	w0, #31, 104f0 <mpc_set_sj@@Base+0x40>
   104dc:	cmp	w0, #0x0
   104e0:	cset	w0, ne  // ne = any
   104e4:	ldr	x19, [sp, #16]
   104e8:	ldp	x29, x30, [sp], #32
   104ec:	ret
   104f0:	mov	w0, #0x2                   	// #2
   104f4:	b	104e4 <mpc_set_sj@@Base+0x34>

00000000000104f8 <mpc_set_dc@@Base>:
   104f8:	stp	x29, x30, [sp, #-16]!
   104fc:	mov	x29, sp
   10500:	bl	4f90 <mpc_set_d_d@plt>
   10504:	ldp	x29, x30, [sp], #16
   10508:	ret

000000000001050c <mpc_set_ldc@@Base>:
   1050c:	stp	x29, x30, [sp, #-16]!
   10510:	mov	x29, sp
   10514:	bl	4d50 <mpc_set_ld_ld@plt>
   10518:	ldp	x29, x30, [sp], #16
   1051c:	ret

0000000000010520 <mpc_set_nan@@Base>:
   10520:	stp	x29, x30, [sp, #-32]!
   10524:	mov	x29, sp
   10528:	str	x19, [sp, #16]
   1052c:	mov	x19, x0
   10530:	bl	4a40 <mpfr_set_nan@plt>
   10534:	add	x0, x19, #0x20
   10538:	bl	4a40 <mpfr_set_nan@plt>
   1053c:	ldr	x19, [sp, #16]
   10540:	ldp	x29, x30, [sp], #32
   10544:	ret

0000000000010548 <mpc_set_d_d@@Base>:
   10548:	stp	x29, x30, [sp, #-48]!
   1054c:	mov	x29, sp
   10550:	stp	x19, x20, [sp, #16]
   10554:	str	x21, [sp, #32]
   10558:	str	d8, [sp, #40]
   1055c:	mov	x21, x0
   10560:	fmov	d8, d1
   10564:	mov	w19, w1
   10568:	and	w1, w1, #0xf
   1056c:	bl	4c30 <mpfr_set_d@plt>
   10570:	mov	w20, w0
   10574:	asr	w1, w19, #4
   10578:	fmov	d0, d8
   1057c:	add	x0, x21, #0x20
   10580:	bl	4c30 <mpfr_set_d@plt>
   10584:	mov	w1, #0x2                   	// #2
   10588:	tbnz	w20, #31, 10594 <mpc_set_d_d@@Base+0x4c>
   1058c:	cmp	w20, #0x0
   10590:	cset	w1, ne  // ne = any
   10594:	tbnz	w0, #31, 105bc <mpc_set_d_d@@Base+0x74>
   10598:	cmp	w0, #0x0
   1059c:	mov	w2, #0x4                   	// #4
   105a0:	csel	w0, w0, w2, eq  // eq = none
   105a4:	orr	w0, w1, w0
   105a8:	ldp	x19, x20, [sp, #16]
   105ac:	ldr	x21, [sp, #32]
   105b0:	ldr	d8, [sp, #40]
   105b4:	ldp	x29, x30, [sp], #48
   105b8:	ret
   105bc:	mov	w0, #0x8                   	// #8
   105c0:	b	105a4 <mpc_set_d_d@@Base+0x5c>

00000000000105c4 <mpc_set_f_f@@Base>:
   105c4:	stp	x29, x30, [sp, #-48]!
   105c8:	mov	x29, sp
   105cc:	stp	x19, x20, [sp, #16]
   105d0:	stp	x21, x22, [sp, #32]
   105d4:	mov	x21, x0
   105d8:	mov	x22, x2
   105dc:	mov	w19, w3
   105e0:	and	w2, w3, #0xf
   105e4:	bl	4b60 <mpfr_set_f@plt>
   105e8:	mov	w20, w0
   105ec:	asr	w2, w19, #4
   105f0:	mov	x1, x22
   105f4:	add	x0, x21, #0x20
   105f8:	bl	4b60 <mpfr_set_f@plt>
   105fc:	mov	w1, #0x2                   	// #2
   10600:	tbnz	w20, #31, 1060c <mpc_set_f_f@@Base+0x48>
   10604:	cmp	w20, #0x0
   10608:	cset	w1, ne  // ne = any
   1060c:	tbnz	w0, #31, 10630 <mpc_set_f_f@@Base+0x6c>
   10610:	cmp	w0, #0x0
   10614:	mov	w2, #0x4                   	// #4
   10618:	csel	w0, w0, w2, eq  // eq = none
   1061c:	orr	w0, w1, w0
   10620:	ldp	x19, x20, [sp, #16]
   10624:	ldp	x21, x22, [sp, #32]
   10628:	ldp	x29, x30, [sp], #48
   1062c:	ret
   10630:	mov	w0, #0x8                   	// #8
   10634:	b	1061c <mpc_set_f_f@@Base+0x58>

0000000000010638 <mpc_set_fr_fr@@Base>:
   10638:	stp	x29, x30, [sp, #-48]!
   1063c:	mov	x29, sp
   10640:	stp	x19, x20, [sp, #16]
   10644:	stp	x21, x22, [sp, #32]
   10648:	mov	x21, x0
   1064c:	mov	x22, x2
   10650:	mov	w19, w3
   10654:	and	w2, w3, #0xf
   10658:	bl	4e80 <mpfr_set@plt>
   1065c:	mov	w20, w0
   10660:	asr	w2, w19, #4
   10664:	mov	x1, x22
   10668:	add	x0, x21, #0x20
   1066c:	bl	4e80 <mpfr_set@plt>
   10670:	mov	w1, #0x2                   	// #2
   10674:	tbnz	w20, #31, 10680 <mpc_set_fr_fr@@Base+0x48>
   10678:	cmp	w20, #0x0
   1067c:	cset	w1, ne  // ne = any
   10680:	tbnz	w0, #31, 106a4 <mpc_set_fr_fr@@Base+0x6c>
   10684:	cmp	w0, #0x0
   10688:	mov	w2, #0x4                   	// #4
   1068c:	csel	w0, w0, w2, eq  // eq = none
   10690:	orr	w0, w1, w0
   10694:	ldp	x19, x20, [sp, #16]
   10698:	ldp	x21, x22, [sp, #32]
   1069c:	ldp	x29, x30, [sp], #48
   106a0:	ret
   106a4:	mov	w0, #0x8                   	// #8
   106a8:	b	10690 <mpc_set_fr_fr@@Base+0x58>

00000000000106ac <mpc_set_ld_ld@@Base>:
   106ac:	stp	x29, x30, [sp, #-64]!
   106b0:	mov	x29, sp
   106b4:	stp	x19, x20, [sp, #16]
   106b8:	str	x21, [sp, #32]
   106bc:	mov	x21, x0
   106c0:	str	q1, [sp, #48]
   106c4:	mov	w19, w1
   106c8:	and	w1, w1, #0xf
   106cc:	bl	49b0 <mpfr_set_ld@plt>
   106d0:	mov	w20, w0
   106d4:	asr	w1, w19, #4
   106d8:	ldr	q0, [sp, #48]
   106dc:	add	x0, x21, #0x20
   106e0:	bl	49b0 <mpfr_set_ld@plt>
   106e4:	mov	w1, #0x2                   	// #2
   106e8:	tbnz	w20, #31, 106f4 <mpc_set_ld_ld@@Base+0x48>
   106ec:	cmp	w20, #0x0
   106f0:	cset	w1, ne  // ne = any
   106f4:	tbnz	w0, #31, 10718 <mpc_set_ld_ld@@Base+0x6c>
   106f8:	cmp	w0, #0x0
   106fc:	mov	w2, #0x4                   	// #4
   10700:	csel	w0, w0, w2, eq  // eq = none
   10704:	orr	w0, w1, w0
   10708:	ldp	x19, x20, [sp, #16]
   1070c:	ldr	x21, [sp, #32]
   10710:	ldp	x29, x30, [sp], #64
   10714:	ret
   10718:	mov	w0, #0x8                   	// #8
   1071c:	b	10704 <mpc_set_ld_ld@@Base+0x58>

0000000000010720 <mpc_set_q_q@@Base>:
   10720:	stp	x29, x30, [sp, #-48]!
   10724:	mov	x29, sp
   10728:	stp	x19, x20, [sp, #16]
   1072c:	stp	x21, x22, [sp, #32]
   10730:	mov	x21, x0
   10734:	mov	x22, x2
   10738:	mov	w19, w3
   1073c:	and	w2, w3, #0xf
   10740:	bl	5290 <mpfr_set_q@plt>
   10744:	mov	w20, w0
   10748:	asr	w2, w19, #4
   1074c:	mov	x1, x22
   10750:	add	x0, x21, #0x20
   10754:	bl	5290 <mpfr_set_q@plt>
   10758:	mov	w1, #0x2                   	// #2
   1075c:	tbnz	w20, #31, 10768 <mpc_set_q_q@@Base+0x48>
   10760:	cmp	w20, #0x0
   10764:	cset	w1, ne  // ne = any
   10768:	tbnz	w0, #31, 1078c <mpc_set_q_q@@Base+0x6c>
   1076c:	cmp	w0, #0x0
   10770:	mov	w2, #0x4                   	// #4
   10774:	csel	w0, w0, w2, eq  // eq = none
   10778:	orr	w0, w1, w0
   1077c:	ldp	x19, x20, [sp, #16]
   10780:	ldp	x21, x22, [sp, #32]
   10784:	ldp	x29, x30, [sp], #48
   10788:	ret
   1078c:	mov	w0, #0x8                   	// #8
   10790:	b	10778 <mpc_set_q_q@@Base+0x58>

0000000000010794 <mpc_set_si_si@@Base>:
   10794:	stp	x29, x30, [sp, #-48]!
   10798:	mov	x29, sp
   1079c:	stp	x19, x20, [sp, #16]
   107a0:	stp	x21, x22, [sp, #32]
   107a4:	mov	x21, x0
   107a8:	mov	x22, x2
   107ac:	mov	w19, w3
   107b0:	and	w2, w3, #0xf
   107b4:	bl	5270 <mpfr_set_si@plt>
   107b8:	mov	w20, w0
   107bc:	asr	w2, w19, #4
   107c0:	mov	x1, x22
   107c4:	add	x0, x21, #0x20
   107c8:	bl	5270 <mpfr_set_si@plt>
   107cc:	mov	w1, #0x2                   	// #2
   107d0:	tbnz	w20, #31, 107dc <mpc_set_si_si@@Base+0x48>
   107d4:	cmp	w20, #0x0
   107d8:	cset	w1, ne  // ne = any
   107dc:	tbnz	w0, #31, 10800 <mpc_set_si_si@@Base+0x6c>
   107e0:	cmp	w0, #0x0
   107e4:	mov	w2, #0x4                   	// #4
   107e8:	csel	w0, w0, w2, eq  // eq = none
   107ec:	orr	w0, w1, w0
   107f0:	ldp	x19, x20, [sp, #16]
   107f4:	ldp	x21, x22, [sp, #32]
   107f8:	ldp	x29, x30, [sp], #48
   107fc:	ret
   10800:	mov	w0, #0x8                   	// #8
   10804:	b	107ec <mpc_set_si_si@@Base+0x58>

0000000000010808 <mpc_set_ui_ui@@Base>:
   10808:	stp	x29, x30, [sp, #-48]!
   1080c:	mov	x29, sp
   10810:	stp	x19, x20, [sp, #16]
   10814:	stp	x21, x22, [sp, #32]
   10818:	mov	x21, x0
   1081c:	mov	x22, x2
   10820:	mov	w19, w3
   10824:	and	w2, w3, #0xf
   10828:	bl	5510 <mpfr_set_ui@plt>
   1082c:	mov	w20, w0
   10830:	asr	w2, w19, #4
   10834:	mov	x1, x22
   10838:	add	x0, x21, #0x20
   1083c:	bl	5510 <mpfr_set_ui@plt>
   10840:	mov	w1, #0x2                   	// #2
   10844:	tbnz	w20, #31, 10850 <mpc_set_ui_ui@@Base+0x48>
   10848:	cmp	w20, #0x0
   1084c:	cset	w1, ne  // ne = any
   10850:	tbnz	w0, #31, 10874 <mpc_set_ui_ui@@Base+0x6c>
   10854:	cmp	w0, #0x0
   10858:	mov	w2, #0x4                   	// #4
   1085c:	csel	w0, w0, w2, eq  // eq = none
   10860:	orr	w0, w1, w0
   10864:	ldp	x19, x20, [sp, #16]
   10868:	ldp	x21, x22, [sp, #32]
   1086c:	ldp	x29, x30, [sp], #48
   10870:	ret
   10874:	mov	w0, #0x8                   	// #8
   10878:	b	10860 <mpc_set_ui_ui@@Base+0x58>

000000000001087c <mpc_set_z_z@@Base>:
   1087c:	stp	x29, x30, [sp, #-48]!
   10880:	mov	x29, sp
   10884:	stp	x19, x20, [sp, #16]
   10888:	stp	x21, x22, [sp, #32]
   1088c:	mov	x21, x0
   10890:	mov	x22, x2
   10894:	mov	w19, w3
   10898:	and	w2, w3, #0xf
   1089c:	bl	4ec0 <mpfr_set_z@plt>
   108a0:	mov	w20, w0
   108a4:	asr	w2, w19, #4
   108a8:	mov	x1, x22
   108ac:	add	x0, x21, #0x20
   108b0:	bl	4ec0 <mpfr_set_z@plt>
   108b4:	mov	w1, #0x2                   	// #2
   108b8:	tbnz	w20, #31, 108c4 <mpc_set_z_z@@Base+0x48>
   108bc:	cmp	w20, #0x0
   108c0:	cset	w1, ne  // ne = any
   108c4:	tbnz	w0, #31, 108e8 <mpc_set_z_z@@Base+0x6c>
   108c8:	cmp	w0, #0x0
   108cc:	mov	w2, #0x4                   	// #4
   108d0:	csel	w0, w0, w2, eq  // eq = none
   108d4:	orr	w0, w1, w0
   108d8:	ldp	x19, x20, [sp, #16]
   108dc:	ldp	x21, x22, [sp, #32]
   108e0:	ldp	x29, x30, [sp], #48
   108e4:	ret
   108e8:	mov	w0, #0x8                   	// #8
   108ec:	b	108d4 <mpc_set_z_z@@Base+0x58>

00000000000108f0 <mpc_set_uj_uj@@Base>:
   108f0:	stp	x29, x30, [sp, #-48]!
   108f4:	mov	x29, sp
   108f8:	stp	x19, x20, [sp, #16]
   108fc:	stp	x21, x22, [sp, #32]
   10900:	mov	x21, x0
   10904:	mov	x22, x2
   10908:	mov	w19, w3
   1090c:	and	w2, w3, #0xf
   10910:	bl	5400 <__gmpfr_set_uj@plt>
   10914:	mov	w20, w0
   10918:	asr	w2, w19, #4
   1091c:	mov	x1, x22
   10920:	add	x0, x21, #0x20
   10924:	bl	5400 <__gmpfr_set_uj@plt>
   10928:	mov	w1, #0x2                   	// #2
   1092c:	tbnz	w20, #31, 10938 <mpc_set_uj_uj@@Base+0x48>
   10930:	cmp	w20, #0x0
   10934:	cset	w1, ne  // ne = any
   10938:	tbnz	w0, #31, 1095c <mpc_set_uj_uj@@Base+0x6c>
   1093c:	cmp	w0, #0x0
   10940:	mov	w2, #0x4                   	// #4
   10944:	csel	w0, w0, w2, eq  // eq = none
   10948:	orr	w0, w1, w0
   1094c:	ldp	x19, x20, [sp, #16]
   10950:	ldp	x21, x22, [sp, #32]
   10954:	ldp	x29, x30, [sp], #48
   10958:	ret
   1095c:	mov	w0, #0x8                   	// #8
   10960:	b	10948 <mpc_set_uj_uj@@Base+0x58>

0000000000010964 <mpc_set_sj_sj@@Base>:
   10964:	stp	x29, x30, [sp, #-48]!
   10968:	mov	x29, sp
   1096c:	stp	x19, x20, [sp, #16]
   10970:	stp	x21, x22, [sp, #32]
   10974:	mov	x21, x0
   10978:	mov	x22, x2
   1097c:	mov	w19, w3
   10980:	and	w2, w3, #0xf
   10984:	bl	4d70 <__gmpfr_set_sj@plt>
   10988:	mov	w20, w0
   1098c:	asr	w2, w19, #4
   10990:	mov	x1, x22
   10994:	add	x0, x21, #0x20
   10998:	bl	4d70 <__gmpfr_set_sj@plt>
   1099c:	mov	w1, #0x2                   	// #2
   109a0:	tbnz	w20, #31, 109ac <mpc_set_sj_sj@@Base+0x48>
   109a4:	cmp	w20, #0x0
   109a8:	cset	w1, ne  // ne = any
   109ac:	tbnz	w0, #31, 109d0 <mpc_set_sj_sj@@Base+0x6c>
   109b0:	cmp	w0, #0x0
   109b4:	mov	w2, #0x4                   	// #4
   109b8:	csel	w0, w0, w2, eq  // eq = none
   109bc:	orr	w0, w1, w0
   109c0:	ldp	x19, x20, [sp, #16]
   109c4:	ldp	x21, x22, [sp, #32]
   109c8:	ldp	x29, x30, [sp], #48
   109cc:	ret
   109d0:	mov	w0, #0x8                   	// #8
   109d4:	b	109bc <mpc_set_sj_sj@@Base+0x58>

00000000000109d8 <mpc_sin@@Base>:
   109d8:	stp	x29, x30, [sp, #-16]!
   109dc:	mov	x29, sp
   109e0:	mov	w4, #0x0                   	// #0
   109e4:	mov	w3, w2
   109e8:	mov	x2, x1
   109ec:	mov	x1, #0x0                   	// #0
   109f0:	bl	5140 <mpc_sin_cos@plt>
   109f4:	and	w0, w0, #0xf
   109f8:	ldp	x29, x30, [sp], #16
   109fc:	ret

0000000000010a00 <mpc_fix_inf@@Base>:
   10a00:	stp	x29, x30, [sp, #-32]!
   10a04:	mov	x29, sp
   10a08:	str	x19, [sp, #16]
   10a0c:	mov	x19, x0
   10a10:	ldr	x2, [x0, #16]
   10a14:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   10a18:	cmp	x2, x0
   10a1c:	b.ne	10a54 <mpc_fix_inf@@Base+0x54>  // b.any
   10a20:	cmp	w1, #0x1
   10a24:	b.eq	10a84 <mpc_fix_inf@@Base+0x84>  // b.none
   10a28:	ldr	w0, [x19, #8]
   10a2c:	cmp	w0, #0x0
   10a30:	ccmp	w1, #0x2, #0x0, lt  // lt = tstop
   10a34:	b.eq	10a98 <mpc_fix_inf@@Base+0x98>  // b.none
   10a38:	cmp	w1, #0x3
   10a3c:	cset	w1, ne  // ne = any
   10a40:	orr	w1, w1, w0, lsr #31
   10a44:	cbz	w1, 10a84 <mpc_fix_inf@@Base+0x84>
   10a48:	ldr	x19, [sp, #16]
   10a4c:	ldp	x29, x30, [sp], #32
   10a50:	ret
   10a54:	adrp	x4, 15000 <mpc_ui_ui_sub@@Base+0x1228>
   10a58:	add	x4, x4, #0x5a0
   10a5c:	mov	w3, #0x115                 	// #277
   10a60:	adrp	x2, 15000 <mpc_ui_ui_sub@@Base+0x1228>
   10a64:	add	x2, x2, #0x5b0
   10a68:	adrp	x1, 15000 <mpc_ui_ui_sub@@Base+0x1228>
   10a6c:	add	x1, x1, #0x238
   10a70:	adrp	x0, 27000 <mpc_ui_ui_sub@@Base+0x13228>
   10a74:	ldr	x0, [x0, #4008]
   10a78:	ldr	x0, [x0]
   10a7c:	bl	55a0 <fprintf@plt>
   10a80:	bl	5000 <abort@plt>
   10a84:	ldr	w0, [x19, #8]
   10a88:	tbnz	w0, #31, 10a98 <mpc_fix_inf@@Base+0x98>
   10a8c:	mov	x0, x19
   10a90:	bl	4bb0 <mpfr_nextbelow@plt>
   10a94:	b	10aa0 <mpc_fix_inf@@Base+0xa0>
   10a98:	mov	x0, x19
   10a9c:	bl	4e00 <mpfr_nextabove@plt>
   10aa0:	ldr	x1, [x19, #16]
   10aa4:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   10aa8:	cmp	x1, x0
   10aac:	b.ge	10ad0 <mpc_fix_inf@@Base+0xd0>  // b.tcont
   10ab0:	mov	w0, #0x0                   	// #0
   10ab4:	mov	x2, #0x2                   	// #2
   10ab8:	movk	x2, #0x8000, lsl #48
   10abc:	cmp	x1, x2
   10ac0:	b.ne	10a48 <mpc_fix_inf@@Base+0x48>  // b.any
   10ac4:	bl	4b00 <mpfr_set_erangeflag@plt>
   10ac8:	mov	w0, #0x0                   	// #0
   10acc:	b	10a48 <mpc_fix_inf@@Base+0x48>
   10ad0:	ldr	w0, [x19, #8]
   10ad4:	neg	w0, w0
   10ad8:	b	10a48 <mpc_fix_inf@@Base+0x48>

0000000000010adc <mpc_fix_zero@@Base>:
   10adc:	stp	x29, x30, [sp, #-16]!
   10ae0:	mov	x29, sp
   10ae4:	ldr	w2, [x0, #8]
   10ae8:	cmp	w2, #0x0
   10aec:	ccmp	w1, #0x3, #0x0, lt  // lt = tstop
   10af0:	b.eq	10b28 <mpc_fix_zero@@Base+0x4c>  // b.none
   10af4:	cmp	w1, #0x2
   10af8:	cset	w1, ne  // ne = any
   10afc:	orr	w1, w1, w2, lsr #31
   10b00:	cbz	w1, 10b18 <mpc_fix_zero@@Base+0x3c>
   10b04:	mov	w0, #0x1                   	// #1
   10b08:	cmn	w2, #0x1
   10b0c:	cneg	w0, w0, gt
   10b10:	ldp	x29, x30, [sp], #16
   10b14:	ret
   10b18:	tbnz	w2, #31, 10b28 <mpc_fix_zero@@Base+0x4c>
   10b1c:	bl	4e00 <mpfr_nextabove@plt>
   10b20:	mov	w0, #0x1                   	// #1
   10b24:	b	10b10 <mpc_fix_zero@@Base+0x34>
   10b28:	bl	4bb0 <mpfr_nextbelow@plt>
   10b2c:	mov	w0, #0xffffffff            	// #-1
   10b30:	b	10b10 <mpc_fix_zero@@Base+0x34>

0000000000010b34 <mpc_sin_cos@@Base>:
   10b34:	stp	x29, x30, [sp, #-384]!
   10b38:	mov	x29, sp
   10b3c:	stp	x19, x20, [sp, #16]
   10b40:	stp	x25, x26, [sp, #64]
   10b44:	stp	x27, x28, [sp, #80]
   10b48:	mov	x25, x0
   10b4c:	mov	x27, x1
   10b50:	mov	x20, x2
   10b54:	str	w3, [sp, #120]
   10b58:	str	w4, [sp, #128]
   10b5c:	str	x2, [sp, #104]
   10b60:	mov	x0, x2
   10b64:	bl	54d0 <mpfr_number_p@plt>
   10b68:	cbz	w0, 10c9c <mpc_sin_cos@@Base+0x168>
   10b6c:	add	x0, x20, #0x20
   10b70:	str	x0, [sp, #112]
   10b74:	bl	54d0 <mpfr_number_p@plt>
   10b78:	cbz	w0, 10c9c <mpc_sin_cos@@Base+0x168>
   10b7c:	stp	x21, x22, [sp, #32]
   10b80:	ldr	x0, [x20, #48]
   10b84:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   10b88:	cmp	x0, x1
   10b8c:	b.eq	11134 <mpc_sin_cos@@Base+0x600>  // b.none
   10b90:	ldr	x2, [x20, #16]
   10b94:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   10b98:	cmp	x2, x1
   10b9c:	b.eq	11284 <mpc_sin_cos@@Base+0x750>  // b.none
   10ba0:	stp	x23, x24, [sp, #48]
   10ba4:	mov	x19, #0x2                   	// #2
   10ba8:	cbz	x25, 10bec <mpc_sin_cos@@Base+0xb8>
   10bac:	ldr	x1, [x25]
   10bb0:	ldr	x19, [x25, #32]
   10bb4:	cmp	x19, x1
   10bb8:	csel	x19, x19, x1, ge  // ge = tcont
   10bbc:	cmp	x19, #0x2
   10bc0:	mov	x1, #0x2                   	// #2
   10bc4:	csel	x19, x19, x1, ge  // ge = tcont
   10bc8:	ldr	x3, [x20]
   10bcc:	ldr	x1, [x20, #32]
   10bd0:	cmp	x1, x3
   10bd4:	csel	x1, x1, x3, ge  // ge = tcont
   10bd8:	cmp	x1, x19
   10bdc:	b.gt	10bec <mpc_sin_cos@@Base+0xb8>
   10be0:	cmp	x0, x2
   10be4:	csel	x0, x0, x2, ge  // ge = tcont
   10be8:	tbnz	x0, #63, 113c0 <mpc_sin_cos@@Base+0x88c>
   10bec:	cbz	x27, 10c08 <mpc_sin_cos@@Base+0xd4>
   10bf0:	ldr	x1, [x27]
   10bf4:	ldr	x0, [x27, #32]
   10bf8:	cmp	x0, x1
   10bfc:	csel	x0, x0, x1, ge  // ge = tcont
   10c00:	cmp	x19, x0
   10c04:	csel	x19, x19, x0, ge  // ge = tcont
   10c08:	mov	x1, #0x2                   	// #2
   10c0c:	add	x0, sp, #0xa0
   10c10:	bl	5440 <mpfr_init2@plt>
   10c14:	mov	x1, #0x2                   	// #2
   10c18:	add	x0, sp, #0xc0
   10c1c:	bl	5440 <mpfr_init2@plt>
   10c20:	mov	x1, #0x2                   	// #2
   10c24:	add	x0, sp, #0xe0
   10c28:	bl	5440 <mpfr_init2@plt>
   10c2c:	mov	x1, #0x2                   	// #2
   10c30:	add	x0, sp, #0x100
   10c34:	bl	5440 <mpfr_init2@plt>
   10c38:	mov	x1, #0x2                   	// #2
   10c3c:	add	x0, sp, #0x120
   10c40:	bl	5440 <mpfr_init2@plt>
   10c44:	mov	x1, #0x2                   	// #2
   10c48:	add	x0, sp, #0x140
   10c4c:	bl	5440 <mpfr_init2@plt>
   10c50:	ldr	w0, [sp, #120]
   10c54:	asr	w0, w0, #4
   10c58:	str	w0, [sp, #152]
   10c5c:	cmp	w0, #0x0
   10c60:	cset	x0, eq  // eq = none
   10c64:	str	x0, [sp, #144]
   10c68:	ldr	w0, [sp, #128]
   10c6c:	asr	w0, w0, #4
   10c70:	str	w0, [sp, #156]
   10c74:	cmp	w0, #0x0
   10c78:	cset	x0, eq  // eq = none
   10c7c:	str	x0, [sp, #136]
   10c80:	mov	w22, #0x0                   	// #0
   10c84:	add	x20, sp, #0xa0
   10c88:	add	x21, sp, #0xc0
   10c8c:	add	x24, sp, #0xe0
   10c90:	add	x23, sp, #0x100
   10c94:	add	x26, sp, #0x120
   10c98:	b	1141c <mpc_sin_cos@@Base+0x8e8>
   10c9c:	cmp	x20, x25
   10ca0:	cset	w19, eq  // eq = none
   10ca4:	cmp	x20, x27
   10ca8:	csinc	w19, w19, wzr, ne  // ne = any
   10cac:	cbnz	w19, 10dfc <mpc_sin_cos@@Base+0x2c8>
   10cb0:	ldp	x0, x1, [x20]
   10cb4:	stp	x0, x1, [sp, #320]
   10cb8:	ldp	x0, x1, [x20, #16]
   10cbc:	stp	x0, x1, [sp, #336]
   10cc0:	ldp	x0, x1, [x20, #32]
   10cc4:	stp	x0, x1, [sp, #352]
   10cc8:	ldp	x0, x1, [x20, #48]
   10ccc:	stp	x0, x1, [sp, #368]
   10cd0:	cbz	x25, 10d78 <mpc_sin_cos@@Base+0x244>
   10cd4:	ldr	x0, [sp, #336]
   10cd8:	mov	x1, #0x2                   	// #2
   10cdc:	movk	x1, #0x8000, lsl #48
   10ce0:	cmp	x0, x1
   10ce4:	b.eq	10e2c <mpc_sin_cos@@Base+0x2f8>  // b.none
   10ce8:	ldr	x2, [sp, #368]
   10cec:	cmp	x2, x1
   10cf0:	b.eq	10e2c <mpc_sin_cos@@Base+0x2f8>  // b.none
   10cf4:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   10cf8:	cmp	x0, x1
   10cfc:	b.eq	10ea8 <mpc_sin_cos@@Base+0x374>  // b.none
   10d00:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   10d04:	cmp	x0, x1
   10d08:	b.eq	10eec <mpc_sin_cos@@Base+0x3b8>  // b.none
   10d0c:	stp	x21, x22, [sp, #32]
   10d10:	add	x21, sp, #0x100
   10d14:	mov	x1, #0x2                   	// #2
   10d18:	mov	x0, x21
   10d1c:	bl	5440 <mpfr_init2@plt>
   10d20:	add	x20, sp, #0x120
   10d24:	mov	x1, #0x2                   	// #2
   10d28:	mov	x0, x20
   10d2c:	bl	5440 <mpfr_init2@plt>
   10d30:	mov	w3, #0x1                   	// #1
   10d34:	add	x2, sp, #0x140
   10d38:	mov	x1, x20
   10d3c:	mov	x0, x21
   10d40:	bl	5520 <mpfr_sin_cos@plt>
   10d44:	ldr	w1, [sp, #264]
   10d48:	mov	x0, x25
   10d4c:	bl	5120 <mpfr_set_inf@plt>
   10d50:	ldr	w1, [sp, #296]
   10d54:	ldr	w0, [sp, #360]
   10d58:	mul	w1, w1, w0
   10d5c:	add	x0, x25, #0x20
   10d60:	bl	5120 <mpfr_set_inf@plt>
   10d64:	mov	x0, x21
   10d68:	bl	4d60 <mpfr_clear@plt>
   10d6c:	mov	x0, x20
   10d70:	bl	4d60 <mpfr_clear@plt>
   10d74:	ldp	x21, x22, [sp, #32]
   10d78:	cbz	x27, 10f30 <mpc_sin_cos@@Base+0x3fc>
   10d7c:	ldr	x0, [sp, #336]
   10d80:	mov	x1, #0x2                   	// #2
   10d84:	movk	x1, #0x8000, lsl #48
   10d88:	cmp	x0, x1
   10d8c:	b.eq	10f00 <mpc_sin_cos@@Base+0x3cc>  // b.none
   10d90:	ldr	x1, [sp, #368]
   10d94:	mov	x2, #0x2                   	// #2
   10d98:	movk	x2, #0x8000, lsl #48
   10d9c:	cmp	x1, x2
   10da0:	b.eq	10f78 <mpc_sin_cos@@Base+0x444>  // b.none
   10da4:	mov	x2, #0x8000000000000003    	// #-9223372036854775805
   10da8:	cmp	x0, x2
   10dac:	b.eq	10f98 <mpc_sin_cos@@Base+0x464>  // b.none
   10db0:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   10db4:	cmp	x0, x1
   10db8:	b.ne	11020 <mpc_sin_cos@@Base+0x4ec>  // b.any
   10dbc:	ldr	w1, [sp, #328]
   10dc0:	mvn	w1, w1
   10dc4:	ldr	w0, [sp, #360]
   10dc8:	lsr	w0, w0, #31
   10dcc:	mov	w3, #0x1                   	// #1
   10dd0:	cmp	w0, w1, lsr #31
   10dd4:	cneg	w3, w3, ne  // ne = any
   10dd8:	ldr	w0, [sp, #128]
   10ddc:	asr	w2, w0, #4
   10de0:	add	x1, sp, #0x140
   10de4:	add	x0, x27, #0x20
   10de8:	bl	51d0 <mpfr_set4@plt>
   10dec:	mov	w1, #0x1                   	// #1
   10df0:	mov	x0, x27
   10df4:	bl	5120 <mpfr_set_inf@plt>
   10df8:	b	10f30 <mpc_sin_cos@@Base+0x3fc>
   10dfc:	stp	x21, x22, [sp, #32]
   10e00:	add	x21, sp, #0x140
   10e04:	ldr	x2, [x20, #32]
   10e08:	ldr	x1, [x20]
   10e0c:	mov	x0, x21
   10e10:	bl	53c0 <mpc_init3@plt>
   10e14:	mov	w2, #0x0                   	// #0
   10e18:	mov	x1, x20
   10e1c:	mov	x0, x21
   10e20:	bl	5580 <mpc_set@plt>
   10e24:	ldp	x21, x22, [sp, #32]
   10e28:	b	10cd0 <mpc_sin_cos@@Base+0x19c>
   10e2c:	ldr	w2, [sp, #120]
   10e30:	add	x1, sp, #0x140
   10e34:	mov	x0, x25
   10e38:	bl	5580 <mpc_set@plt>
   10e3c:	ldr	x0, [sp, #368]
   10e40:	mov	x1, #0x2                   	// #2
   10e44:	movk	x1, #0x8000, lsl #48
   10e48:	cmp	x0, x1
   10e4c:	b.eq	10e6c <mpc_sin_cos@@Base+0x338>  // b.none
   10e50:	and	x0, x0, #0xfffffffffffffffd
   10e54:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   10e58:	cmp	x0, x1
   10e5c:	b.eq	10d78 <mpc_sin_cos@@Base+0x244>  // b.none
   10e60:	add	x0, x25, #0x20
   10e64:	bl	4a40 <mpfr_set_nan@plt>
   10e68:	b	10d78 <mpc_sin_cos@@Base+0x244>
   10e6c:	ldr	x1, [sp, #336]
   10e70:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   10e74:	cmp	x1, x0
   10e78:	b.ne	10e9c <mpc_sin_cos@@Base+0x368>  // b.any
   10e7c:	cbz	x27, 10f30 <mpc_sin_cos@@Base+0x3fc>
   10e80:	ldr	w3, [sp, #328]
   10e84:	ldr	w0, [sp, #128]
   10e88:	asr	w2, w0, #4
   10e8c:	add	x1, sp, #0x140
   10e90:	add	x0, x27, #0x20
   10e94:	bl	51d0 <mpfr_set4@plt>
   10e98:	b	10f8c <mpc_sin_cos@@Base+0x458>
   10e9c:	mov	x0, x25
   10ea0:	bl	4a40 <mpfr_set_nan@plt>
   10ea4:	b	10d78 <mpc_sin_cos@@Base+0x244>
   10ea8:	mov	x0, x25
   10eac:	bl	4a40 <mpfr_set_nan@plt>
   10eb0:	ldr	x0, [sp, #368]
   10eb4:	and	x0, x0, #0xfffffffffffffffd
   10eb8:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   10ebc:	cmp	x0, x1
   10ec0:	b.eq	10ed0 <mpc_sin_cos@@Base+0x39c>  // b.none
   10ec4:	add	x0, x25, #0x20
   10ec8:	bl	4a40 <mpfr_set_nan@plt>
   10ecc:	b	10d78 <mpc_sin_cos@@Base+0x244>
   10ed0:	ldr	w3, [sp, #360]
   10ed4:	ldr	w0, [sp, #120]
   10ed8:	asr	w2, w0, #4
   10edc:	add	x1, sp, #0x160
   10ee0:	add	x0, x25, #0x20
   10ee4:	bl	51d0 <mpfr_set4@plt>
   10ee8:	b	10d78 <mpc_sin_cos@@Base+0x244>
   10eec:	ldr	w2, [sp, #120]
   10ef0:	add	x1, sp, #0x140
   10ef4:	mov	x0, x25
   10ef8:	bl	5580 <mpc_set@plt>
   10efc:	b	10d78 <mpc_sin_cos@@Base+0x244>
   10f00:	ldr	x1, [sp, #368]
   10f04:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   10f08:	cmp	x1, x0
   10f0c:	b.eq	10f4c <mpc_sin_cos@@Base+0x418>  // b.none
   10f10:	mov	x0, x27
   10f14:	bl	4a40 <mpfr_set_nan@plt>
   10f18:	ldr	x1, [sp, #368]
   10f1c:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   10f20:	cmp	x1, x0
   10f24:	b.eq	10f5c <mpc_sin_cos@@Base+0x428>  // b.none
   10f28:	add	x0, x27, #0x20
   10f2c:	bl	4a40 <mpfr_set_nan@plt>
   10f30:	cbnz	w19, 11128 <mpc_sin_cos@@Base+0x5f4>
   10f34:	mov	w0, #0x0                   	// #0
   10f38:	ldp	x19, x20, [sp, #16]
   10f3c:	ldp	x25, x26, [sp, #64]
   10f40:	ldp	x27, x28, [sp, #80]
   10f44:	ldp	x29, x30, [sp], #384
   10f48:	ret
   10f4c:	mov	w1, #0x1                   	// #1
   10f50:	mov	x0, x27
   10f54:	bl	5120 <mpfr_set_inf@plt>
   10f58:	b	10f18 <mpc_sin_cos@@Base+0x3e4>
   10f5c:	ldr	w3, [sp, #360]
   10f60:	ldr	w0, [sp, #128]
   10f64:	asr	w2, w0, #4
   10f68:	add	x1, sp, #0x160
   10f6c:	add	x0, x27, #0x20
   10f70:	bl	51d0 <mpfr_set4@plt>
   10f74:	b	10f30 <mpc_sin_cos@@Base+0x3fc>
   10f78:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   10f7c:	cmp	x0, x1
   10f80:	b.eq	10e80 <mpc_sin_cos@@Base+0x34c>  // b.none
   10f84:	add	x0, x27, #0x20
   10f88:	bl	4a40 <mpfr_set_nan@plt>
   10f8c:	mov	x0, x27
   10f90:	bl	4a40 <mpfr_set_nan@plt>
   10f94:	b	10f30 <mpc_sin_cos@@Base+0x3fc>
   10f98:	stp	x21, x22, [sp, #32]
   10f9c:	ldr	w20, [sp, #328]
   10fa0:	mvn	w20, w20
   10fa4:	lsr	w20, w20, #31
   10fa8:	ldr	w21, [sp, #360]
   10fac:	lsr	w21, w21, #31
   10fb0:	cmp	x1, x2
   10fb4:	b.ne	11004 <mpc_sin_cos@@Base+0x4d0>  // b.any
   10fb8:	mov	w1, #0x1                   	// #1
   10fbc:	cmp	w20, w21
   10fc0:	cneg	w1, w1, ne  // ne = any
   10fc4:	mov	x0, x27
   10fc8:	bl	5120 <mpfr_set_inf@plt>
   10fcc:	ldr	x1, [sp, #368]
   10fd0:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   10fd4:	cmp	x1, x0
   10fd8:	b.ne	11010 <mpc_sin_cos@@Base+0x4dc>  // b.any
   10fdc:	mov	w3, #0x1                   	// #1
   10fe0:	cmp	w20, w21
   10fe4:	cneg	w3, w3, ne  // ne = any
   10fe8:	ldr	w0, [sp, #128]
   10fec:	asr	w2, w0, #4
   10ff0:	add	x1, sp, #0x160
   10ff4:	add	x0, x27, #0x20
   10ff8:	bl	51d0 <mpfr_set4@plt>
   10ffc:	ldp	x21, x22, [sp, #32]
   11000:	b	10f30 <mpc_sin_cos@@Base+0x3fc>
   11004:	mov	x0, x27
   11008:	bl	4a40 <mpfr_set_nan@plt>
   1100c:	b	10fcc <mpc_sin_cos@@Base+0x498>
   11010:	add	x0, x27, #0x20
   11014:	bl	4a40 <mpfr_set_nan@plt>
   11018:	ldp	x21, x22, [sp, #32]
   1101c:	b	10f30 <mpc_sin_cos@@Base+0x3fc>
   11020:	stp	x21, x22, [sp, #32]
   11024:	add	x21, sp, #0x120
   11028:	mov	x1, #0x2                   	// #2
   1102c:	mov	x0, x21
   11030:	bl	5440 <mpfr_init2@plt>
   11034:	add	x20, sp, #0x100
   11038:	mov	x1, #0x2                   	// #2
   1103c:	mov	x0, x20
   11040:	bl	5440 <mpfr_init2@plt>
   11044:	mov	w3, #0x0                   	// #0
   11048:	add	x2, sp, #0x140
   1104c:	mov	x1, x21
   11050:	mov	x0, x20
   11054:	bl	5520 <mpfr_sin_cos@plt>
   11058:	ldr	x0, [sp, #304]
   1105c:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   11060:	cmp	x0, x1
   11064:	b.ge	11088 <mpc_sin_cos@@Base+0x554>  // b.tcont
   11068:	mov	w1, #0x0                   	// #0
   1106c:	mov	x2, #0x2                   	// #2
   11070:	movk	x2, #0x8000, lsl #48
   11074:	cmp	x0, x2
   11078:	b.ne	1108c <mpc_sin_cos@@Base+0x558>  // b.any
   1107c:	bl	4b00 <mpfr_set_erangeflag@plt>
   11080:	mov	w1, #0x0                   	// #0
   11084:	b	1108c <mpc_sin_cos@@Base+0x558>
   11088:	ldr	w1, [sp, #296]
   1108c:	mov	x0, x27
   11090:	bl	5120 <mpfr_set_inf@plt>
   11094:	add	x27, x27, #0x20
   11098:	ldr	x0, [sp, #368]
   1109c:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   110a0:	cmp	x0, x1
   110a4:	b.ge	110c4 <mpc_sin_cos@@Base+0x590>  // b.tcont
   110a8:	mov	w20, #0x0                   	// #0
   110ac:	mov	x1, #0x2                   	// #2
   110b0:	movk	x1, #0x8000, lsl #48
   110b4:	cmp	x0, x1
   110b8:	b.ne	110c8 <mpc_sin_cos@@Base+0x594>  // b.any
   110bc:	bl	4b00 <mpfr_set_erangeflag@plt>
   110c0:	b	110c8 <mpc_sin_cos@@Base+0x594>
   110c4:	ldr	w20, [sp, #360]
   110c8:	ldr	x0, [sp, #272]
   110cc:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   110d0:	cmp	x0, x1
   110d4:	b.ge	110f8 <mpc_sin_cos@@Base+0x5c4>  // b.tcont
   110d8:	mov	w2, #0x0                   	// #0
   110dc:	mov	x1, #0x2                   	// #2
   110e0:	movk	x1, #0x8000, lsl #48
   110e4:	cmp	x0, x1
   110e8:	b.ne	110fc <mpc_sin_cos@@Base+0x5c8>  // b.any
   110ec:	bl	4b00 <mpfr_set_erangeflag@plt>
   110f0:	mov	w2, #0x0                   	// #0
   110f4:	b	110fc <mpc_sin_cos@@Base+0x5c8>
   110f8:	ldr	w2, [sp, #264]
   110fc:	mov	w1, #0x1                   	// #1
   11100:	cmp	w20, w2
   11104:	cneg	w1, w1, eq  // eq = none
   11108:	mov	x0, x27
   1110c:	bl	5120 <mpfr_set_inf@plt>
   11110:	add	x0, sp, #0x100
   11114:	bl	4d60 <mpfr_clear@plt>
   11118:	add	x0, sp, #0x120
   1111c:	bl	4d60 <mpfr_clear@plt>
   11120:	ldp	x21, x22, [sp, #32]
   11124:	b	10f30 <mpc_sin_cos@@Base+0x3fc>
   11128:	add	x0, sp, #0x140
   1112c:	bl	4a10 <mpc_clear@plt>
   11130:	b	10f34 <mpc_sin_cos@@Base+0x400>
   11134:	ldr	w22, [x20, #40]
   11138:	cbz	x25, 11224 <mpc_sin_cos@@Base+0x6f0>
   1113c:	ldr	x1, [x25]
   11140:	add	x0, sp, #0x120
   11144:	bl	5440 <mpfr_init2@plt>
   11148:	cbz	x27, 11234 <mpc_sin_cos@@Base+0x700>
   1114c:	ldr	x1, [x27]
   11150:	add	x0, sp, #0x140
   11154:	bl	5440 <mpfr_init2@plt>
   11158:	ldr	w0, [sp, #120]
   1115c:	and	w2, w0, #0xf
   11160:	mov	x1, x20
   11164:	add	x0, sp, #0x120
   11168:	bl	5080 <mpfr_sin@plt>
   1116c:	mov	w21, w0
   11170:	ldr	w0, [sp, #128]
   11174:	and	w2, w0, #0xf
   11178:	mov	x1, x20
   1117c:	add	x0, sp, #0x140
   11180:	bl	5050 <mpfr_cos@plt>
   11184:	mov	w19, w0
   11188:	cbz	x25, 11794 <mpc_sin_cos@@Base+0xc60>
   1118c:	ldr	w3, [sp, #296]
   11190:	mov	w2, #0x0                   	// #0
   11194:	add	x1, sp, #0x120
   11198:	mov	x0, x25
   1119c:	bl	51d0 <mpfr_set4@plt>
   111a0:	add	x0, x25, #0x20
   111a4:	tbnz	w22, #31, 11244 <mpc_sin_cos@@Base+0x710>
   111a8:	mov	w1, #0x1                   	// #1
   111ac:	ldr	w2, [sp, #328]
   111b0:	cmp	w2, #0x0
   111b4:	cneg	w1, w1, lt  // lt = tstop
   111b8:	bl	4d10 <mpfr_set_zero@plt>
   111bc:	cbz	x27, 11620 <mpc_sin_cos@@Base+0xaec>
   111c0:	ldr	w3, [sp, #328]
   111c4:	mov	w2, #0x0                   	// #0
   111c8:	add	x1, sp, #0x140
   111cc:	mov	x0, x27
   111d0:	bl	51d0 <mpfr_set4@plt>
   111d4:	add	x0, x27, #0x20
   111d8:	tbnz	w22, #31, 11258 <mpc_sin_cos@@Base+0x724>
   111dc:	mov	w1, #0x1                   	// #1
   111e0:	ldr	w2, [sp, #296]
   111e4:	cmn	w2, #0x1
   111e8:	cneg	w1, w1, gt
   111ec:	bl	4d10 <mpfr_set_zero@plt>
   111f0:	add	x0, sp, #0x120
   111f4:	bl	4d60 <mpfr_clear@plt>
   111f8:	add	x0, sp, #0x140
   111fc:	bl	4d60 <mpfr_clear@plt>
   11200:	mov	w0, #0x2                   	// #2
   11204:	tbnz	w21, #31, 11210 <mpc_sin_cos@@Base+0x6dc>
   11208:	cmp	w21, #0x0
   1120c:	cset	w0, ne  // ne = any
   11210:	tbz	w19, #31, 11274 <mpc_sin_cos@@Base+0x740>
   11214:	mov	w19, #0x20                  	// #32
   11218:	orr	w0, w19, w0
   1121c:	ldp	x21, x22, [sp, #32]
   11220:	b	10f38 <mpc_sin_cos@@Base+0x404>
   11224:	mov	x1, #0x2                   	// #2
   11228:	add	x0, sp, #0x120
   1122c:	bl	5440 <mpfr_init2@plt>
   11230:	b	11148 <mpc_sin_cos@@Base+0x614>
   11234:	mov	x1, #0x2                   	// #2
   11238:	add	x0, sp, #0x140
   1123c:	bl	5440 <mpfr_init2@plt>
   11240:	b	11158 <mpc_sin_cos@@Base+0x624>
   11244:	mov	w1, #0x1                   	// #1
   11248:	ldr	w2, [sp, #328]
   1124c:	cmn	w2, #0x1
   11250:	cneg	w1, w1, gt
   11254:	b	111b8 <mpc_sin_cos@@Base+0x684>
   11258:	mov	w1, #0x1                   	// #1
   1125c:	ldr	w2, [sp, #296]
   11260:	cmp	w2, #0x0
   11264:	cneg	w1, w1, lt  // lt = tstop
   11268:	b	111ec <mpc_sin_cos@@Base+0x6b8>
   1126c:	mov	w19, #0x0                   	// #0
   11270:	b	11208 <mpc_sin_cos@@Base+0x6d4>
   11274:	cmp	w19, #0x0
   11278:	mov	w1, #0x10                  	// #16
   1127c:	csel	w19, w19, w1, eq  // eq = none
   11280:	b	11218 <mpc_sin_cos@@Base+0x6e4>
   11284:	cmp	x20, x25
   11288:	cset	w21, eq  // eq = none
   1128c:	cmp	x20, x27
   11290:	csinc	w21, w21, wzr, ne  // ne = any
   11294:	cbnz	w21, 11368 <mpc_sin_cos@@Base+0x834>
   11298:	ldp	x0, x1, [x20]
   1129c:	stp	x0, x1, [sp, #320]
   112a0:	ldp	x0, x1, [x20, #16]
   112a4:	stp	x0, x1, [sp, #336]
   112a8:	ldp	x0, x1, [x20, #32]
   112ac:	stp	x0, x1, [sp, #352]
   112b0:	ldp	x0, x1, [x20, #48]
   112b4:	stp	x0, x1, [sp, #368]
   112b8:	mov	w19, #0x0                   	// #0
   112bc:	cbz	x25, 112f0 <mpc_sin_cos@@Base+0x7bc>
   112c0:	add	x19, sp, #0x140
   112c4:	ldr	w3, [sp, #328]
   112c8:	mov	w2, #0x0                   	// #0
   112cc:	mov	x1, x19
   112d0:	mov	x0, x25
   112d4:	bl	51d0 <mpfr_set4@plt>
   112d8:	ldr	w0, [sp, #120]
   112dc:	asr	w2, w0, #4
   112e0:	add	x1, x19, #0x20
   112e4:	add	x0, x25, #0x20
   112e8:	bl	4f80 <mpfr_sinh@plt>
   112ec:	mov	w19, w0
   112f0:	mov	w20, #0x0                   	// #0
   112f4:	cbz	x27, 11338 <mpc_sin_cos@@Base+0x804>
   112f8:	ldr	w0, [sp, #128]
   112fc:	and	w2, w0, #0xf
   11300:	add	x1, sp, #0x160
   11304:	mov	x0, x27
   11308:	bl	4a20 <mpfr_cosh@plt>
   1130c:	mov	w20, w0
   11310:	mov	w1, #0x1                   	// #1
   11314:	str	w1, [x27, #40]
   11318:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   1131c:	str	x1, [x27, #48]
   11320:	ldr	w1, [sp, #328]
   11324:	mvn	w1, w1
   11328:	ldr	w0, [sp, #360]
   1132c:	lsr	w0, w0, #31
   11330:	cmp	w0, w1, lsr #31
   11334:	b.ne	11390 <mpc_sin_cos@@Base+0x85c>  // b.any
   11338:	cbnz	w21, 113a4 <mpc_sin_cos@@Base+0x870>
   1133c:	tbnz	w19, #31, 113b0 <mpc_sin_cos@@Base+0x87c>
   11340:	cmp	w19, #0x0
   11344:	mov	w0, #0x4                   	// #4
   11348:	csel	w19, w19, w0, eq  // eq = none
   1134c:	tbnz	w20, #31, 113b8 <mpc_sin_cos@@Base+0x884>
   11350:	cmp	w20, #0x0
   11354:	mov	w0, #0x10                  	// #16
   11358:	csel	w20, w20, w0, eq  // eq = none
   1135c:	orr	w0, w19, w20
   11360:	ldp	x21, x22, [sp, #32]
   11364:	b	10f38 <mpc_sin_cos@@Base+0x404>
   11368:	add	x19, sp, #0x140
   1136c:	ldr	x2, [x20, #32]
   11370:	ldr	x1, [x20]
   11374:	mov	x0, x19
   11378:	bl	53c0 <mpc_init3@plt>
   1137c:	mov	w2, #0x0                   	// #0
   11380:	mov	x1, x20
   11384:	mov	x0, x19
   11388:	bl	5580 <mpc_set@plt>
   1138c:	b	112b8 <mpc_sin_cos@@Base+0x784>
   11390:	add	x0, x27, #0x20
   11394:	mov	w2, #0x0                   	// #0
   11398:	mov	x1, x0
   1139c:	bl	4b80 <mpfr_neg@plt>
   113a0:	b	11338 <mpc_sin_cos@@Base+0x804>
   113a4:	add	x0, sp, #0x140
   113a8:	bl	4a10 <mpc_clear@plt>
   113ac:	b	1133c <mpc_sin_cos@@Base+0x808>
   113b0:	mov	w19, #0x8                   	// #8
   113b4:	b	1134c <mpc_sin_cos@@Base+0x818>
   113b8:	mov	w20, #0x20                  	// #32
   113bc:	b	1135c <mpc_sin_cos@@Base+0x828>
   113c0:	neg	x0, x0, lsl #1
   113c4:	add	x1, x0, #0x2
   113c8:	add	x0, x0, #0x3
   113cc:	cmp	x1, x19
   113d0:	csel	x19, x0, x19, ge  // ge = tcont
   113d4:	b	10bec <mpc_sin_cos@@Base+0xb8>
   113d8:	mov	x0, #0x2                   	// #2
   113dc:	sdiv	x0, x19, x0
   113e0:	b	11434 <mpc_sin_cos@@Base+0x900>
   113e4:	ldr	x4, [x25, #32]
   113e8:	ldr	x0, [sp, #144]
   113ec:	add	x4, x0, x4
   113f0:	mov	w3, #0x1                   	// #1
   113f4:	mov	w2, #0x0                   	// #0
   113f8:	sub	x1, x19, #0x2
   113fc:	add	x0, sp, #0x140
   11400:	bl	5450 <mpfr_can_round@plt>
   11404:	cmp	x27, #0x0
   11408:	cset	w28, ne  // ne = any
   1140c:	cmp	w0, #0x0
   11410:	ccmp	w28, #0x0, #0x4, ne  // ne = any
   11414:	b.ne	1151c <mpc_sin_cos@@Base+0x9e8>  // b.any
   11418:	cbnz	w0, 11648 <mpc_sin_cos@@Base+0xb14>
   1141c:	add	w22, w22, #0x1
   11420:	cmp	w22, #0x2
   11424:	b.gt	113d8 <mpc_sin_cos@@Base+0x8a4>
   11428:	mov	x0, x19
   1142c:	bl	4d20 <mpc_ceil_log2@plt>
   11430:	add	x0, x0, #0x5
   11434:	add	x19, x19, x0
   11438:	mov	x1, x19
   1143c:	mov	x0, x20
   11440:	bl	4c80 <mpfr_set_prec@plt>
   11444:	mov	x1, x19
   11448:	mov	x0, x21
   1144c:	bl	4c80 <mpfr_set_prec@plt>
   11450:	mov	x1, x19
   11454:	mov	x0, x24
   11458:	bl	4c80 <mpfr_set_prec@plt>
   1145c:	mov	x1, x19
   11460:	mov	x0, x23
   11464:	bl	4c80 <mpfr_set_prec@plt>
   11468:	mov	x1, x19
   1146c:	mov	x0, x26
   11470:	bl	4c80 <mpfr_set_prec@plt>
   11474:	mov	x1, x19
   11478:	add	x0, sp, #0x140
   1147c:	bl	4c80 <mpfr_set_prec@plt>
   11480:	mov	w3, #0x0                   	// #0
   11484:	ldr	x2, [sp, #104]
   11488:	mov	x1, x21
   1148c:	mov	x0, x20
   11490:	bl	5520 <mpfr_sin_cos@plt>
   11494:	mov	w3, #0x0                   	// #0
   11498:	ldr	x2, [sp, #112]
   1149c:	mov	x1, x23
   114a0:	mov	x0, x24
   114a4:	bl	4be0 <mpfr_sinh_cosh@plt>
   114a8:	cbz	x25, 11518 <mpc_sin_cos@@Base+0x9e4>
   114ac:	mov	w3, #0x0                   	// #0
   114b0:	mov	x2, x23
   114b4:	mov	x1, x20
   114b8:	mov	x0, x26
   114bc:	bl	4b70 <mpfr_mul@plt>
   114c0:	mov	x0, x26
   114c4:	bl	54d0 <mpfr_number_p@plt>
   114c8:	cbz	w0, 114f4 <mpc_sin_cos@@Base+0x9c0>
   114cc:	ldr	x0, [sp, #120]
   114d0:	tst	x0, #0xf
   114d4:	ldr	x4, [x25]
   114d8:	cinc	x4, x4, eq  // eq = none
   114dc:	mov	w3, #0x1                   	// #1
   114e0:	mov	w2, #0x0                   	// #0
   114e4:	sub	x1, x19, #0x2
   114e8:	mov	x0, x26
   114ec:	bl	5450 <mpfr_can_round@plt>
   114f0:	cbz	w0, 1141c <mpc_sin_cos@@Base+0x8e8>
   114f4:	add	x28, sp, #0x140
   114f8:	mov	w3, #0x0                   	// #0
   114fc:	mov	x2, x24
   11500:	mov	x1, x21
   11504:	mov	x0, x28
   11508:	bl	4b70 <mpfr_mul@plt>
   1150c:	mov	x0, x28
   11510:	bl	54d0 <mpfr_number_p@plt>
   11514:	cbnz	w0, 113e4 <mpc_sin_cos@@Base+0x8b0>
   11518:	cbz	x27, 11640 <mpc_sin_cos@@Base+0xb0c>
   1151c:	mov	w3, #0x0                   	// #0
   11520:	mov	x2, x23
   11524:	mov	x1, x21
   11528:	mov	x0, x21
   1152c:	bl	4b70 <mpfr_mul@plt>
   11530:	mov	x0, x21
   11534:	bl	54d0 <mpfr_number_p@plt>
   11538:	cbz	w0, 11564 <mpc_sin_cos@@Base+0xa30>
   1153c:	ldr	x0, [sp, #128]
   11540:	tst	x0, #0xf
   11544:	ldr	x4, [x27]
   11548:	cinc	x4, x4, eq  // eq = none
   1154c:	mov	w3, #0x1                   	// #1
   11550:	mov	w2, #0x0                   	// #0
   11554:	sub	x1, x19, #0x2
   11558:	mov	x0, x21
   1155c:	bl	5450 <mpfr_can_round@plt>
   11560:	cbz	w0, 1141c <mpc_sin_cos@@Base+0x8e8>
   11564:	mov	w3, #0x0                   	// #0
   11568:	mov	x2, x24
   1156c:	mov	x1, x20
   11570:	mov	x0, x20
   11574:	bl	4b70 <mpfr_mul@plt>
   11578:	mov	w2, #0x0                   	// #0
   1157c:	mov	x1, x20
   11580:	mov	x0, x20
   11584:	bl	4b80 <mpfr_neg@plt>
   11588:	mov	x0, x20
   1158c:	bl	54d0 <mpfr_number_p@plt>
   11590:	cbz	w0, 115b8 <mpc_sin_cos@@Base+0xa84>
   11594:	ldr	x4, [x27, #32]
   11598:	ldr	x0, [sp, #136]
   1159c:	add	x4, x0, x4
   115a0:	mov	w3, #0x1                   	// #1
   115a4:	mov	w2, #0x0                   	// #0
   115a8:	sub	x1, x19, #0x2
   115ac:	mov	x0, x20
   115b0:	bl	5450 <mpfr_can_round@plt>
   115b4:	cbz	w0, 1141c <mpc_sin_cos@@Base+0x8e8>
   115b8:	mov	w28, #0x1                   	// #1
   115bc:	mov	w20, #0x0                   	// #0
   115c0:	cbnz	x25, 11648 <mpc_sin_cos@@Base+0xb14>
   115c4:	b	116cc <mpc_sin_cos@@Base+0xb98>
   115c8:	mov	w1, w20
   115cc:	mov	x0, x25
   115d0:	bl	4dd0 <mpc_fix_inf@plt>
   115d4:	mov	w19, w0
   115d8:	b	11678 <mpc_sin_cos@@Base+0xb44>
   115dc:	ldr	w1, [sp, #152]
   115e0:	mov	x0, x25
   115e4:	bl	4dd0 <mpc_fix_inf@plt>
   115e8:	b	116a0 <mpc_sin_cos@@Base+0xb6c>
   115ec:	mov	w0, #0x8                   	// #8
   115f0:	b	116c0 <mpc_sin_cos@@Base+0xb8c>
   115f4:	mov	w1, w19
   115f8:	mov	x0, x27
   115fc:	bl	4dd0 <mpc_fix_inf@plt>
   11600:	mov	w21, w0
   11604:	b	116fc <mpc_sin_cos@@Base+0xbc8>
   11608:	ldr	w1, [sp, #156]
   1160c:	mov	x0, x27
   11610:	bl	4dd0 <mpc_fix_inf@plt>
   11614:	b	11724 <mpc_sin_cos@@Base+0xbf0>
   11618:	mov	w0, #0x8                   	// #8
   1161c:	b	11744 <mpc_sin_cos@@Base+0xc10>
   11620:	add	x0, sp, #0x120
   11624:	bl	4d60 <mpfr_clear@plt>
   11628:	add	x0, sp, #0x140
   1162c:	bl	4d60 <mpfr_clear@plt>
   11630:	tbz	w21, #31, 1126c <mpc_sin_cos@@Base+0x738>
   11634:	mov	w0, #0x2                   	// #2
   11638:	mov	w19, #0x0                   	// #0
   1163c:	b	11218 <mpc_sin_cos@@Base+0x6e4>
   11640:	mov	w28, #0x0                   	// #0
   11644:	cbz	x25, 11788 <mpc_sin_cos@@Base+0xc54>
   11648:	ldr	w0, [sp, #120]
   1164c:	and	w20, w0, #0xf
   11650:	ldr	w3, [sp, #296]
   11654:	mov	w2, w20
   11658:	add	x1, sp, #0x120
   1165c:	mov	x0, x25
   11660:	bl	51d0 <mpfr_set4@plt>
   11664:	mov	w19, w0
   11668:	ldr	x1, [sp, #304]
   1166c:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   11670:	cmp	x1, x0
   11674:	b.eq	115c8 <mpc_sin_cos@@Base+0xa94>  // b.none
   11678:	add	x25, x25, #0x20
   1167c:	ldr	w3, [sp, #328]
   11680:	ldr	w2, [sp, #152]
   11684:	add	x1, sp, #0x140
   11688:	mov	x0, x25
   1168c:	bl	51d0 <mpfr_set4@plt>
   11690:	ldr	x2, [sp, #336]
   11694:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   11698:	cmp	x2, x1
   1169c:	b.eq	115dc <mpc_sin_cos@@Base+0xaa8>  // b.none
   116a0:	mov	w20, #0x2                   	// #2
   116a4:	tbnz	w19, #31, 116b0 <mpc_sin_cos@@Base+0xb7c>
   116a8:	cmp	w19, #0x0
   116ac:	cset	w20, ne  // ne = any
   116b0:	tbnz	w0, #31, 115ec <mpc_sin_cos@@Base+0xab8>
   116b4:	cmp	w0, #0x0
   116b8:	mov	w1, #0x4                   	// #4
   116bc:	csel	w0, w0, w1, eq  // eq = none
   116c0:	orr	w20, w20, w0
   116c4:	mov	w19, #0x0                   	// #0
   116c8:	cbz	w28, 11748 <mpc_sin_cos@@Base+0xc14>
   116cc:	ldr	w0, [sp, #128]
   116d0:	and	w19, w0, #0xf
   116d4:	ldr	w3, [sp, #200]
   116d8:	mov	w2, w19
   116dc:	add	x1, sp, #0xc0
   116e0:	mov	x0, x27
   116e4:	bl	51d0 <mpfr_set4@plt>
   116e8:	mov	w21, w0
   116ec:	ldr	x1, [sp, #208]
   116f0:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   116f4:	cmp	x1, x0
   116f8:	b.eq	115f4 <mpc_sin_cos@@Base+0xac0>  // b.none
   116fc:	add	x27, x27, #0x20
   11700:	ldr	w3, [sp, #168]
   11704:	ldr	w2, [sp, #156]
   11708:	add	x1, sp, #0xa0
   1170c:	mov	x0, x27
   11710:	bl	51d0 <mpfr_set4@plt>
   11714:	ldr	x2, [sp, #176]
   11718:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   1171c:	cmp	x2, x1
   11720:	b.eq	11608 <mpc_sin_cos@@Base+0xad4>  // b.none
   11724:	mov	w19, #0x2                   	// #2
   11728:	tbnz	w21, #31, 11734 <mpc_sin_cos@@Base+0xc00>
   1172c:	cmp	w21, #0x0
   11730:	cset	w19, ne  // ne = any
   11734:	tbnz	w0, #31, 11618 <mpc_sin_cos@@Base+0xae4>
   11738:	cmp	w0, #0x0
   1173c:	mov	w1, #0x4                   	// #4
   11740:	csel	w0, w0, w1, eq  // eq = none
   11744:	orr	w19, w19, w0
   11748:	add	x0, sp, #0xa0
   1174c:	bl	4d60 <mpfr_clear@plt>
   11750:	add	x0, sp, #0xc0
   11754:	bl	4d60 <mpfr_clear@plt>
   11758:	add	x0, sp, #0xe0
   1175c:	bl	4d60 <mpfr_clear@plt>
   11760:	add	x0, sp, #0x100
   11764:	bl	4d60 <mpfr_clear@plt>
   11768:	add	x0, sp, #0x120
   1176c:	bl	4d60 <mpfr_clear@plt>
   11770:	add	x0, sp, #0x140
   11774:	bl	4d60 <mpfr_clear@plt>
   11778:	orr	w0, w20, w19, lsl #4
   1177c:	ldp	x21, x22, [sp, #32]
   11780:	ldp	x23, x24, [sp, #48]
   11784:	b	10f38 <mpc_sin_cos@@Base+0x404>
   11788:	mov	w20, #0x0                   	// #0
   1178c:	mov	w19, #0x0                   	// #0
   11790:	b	11748 <mpc_sin_cos@@Base+0xc14>
   11794:	mov	w21, #0x0                   	// #0
   11798:	cbnz	x27, 111c0 <mpc_sin_cos@@Base+0x68c>
   1179c:	add	x0, sp, #0x120
   117a0:	bl	4d60 <mpfr_clear@plt>
   117a4:	add	x0, sp, #0x140
   117a8:	bl	4d60 <mpfr_clear@plt>
   117ac:	mov	w21, #0x0                   	// #0
   117b0:	mov	w19, #0x0                   	// #0
   117b4:	b	11208 <mpc_sin_cos@@Base+0x6d4>

00000000000117b8 <mpc_sinh@@Base>:
   117b8:	stp	x29, x30, [sp, #-160]!
   117bc:	mov	x29, sp
   117c0:	stp	x19, x20, [sp, #16]
   117c4:	mov	x19, x0
   117c8:	ldp	x4, x5, [x1, #32]
   117cc:	stp	x4, x5, [sp, #96]
   117d0:	ldp	x4, x5, [x1, #48]
   117d4:	stp	x4, x5, [sp, #112]
   117d8:	ldp	x4, x5, [x1]
   117dc:	stp	x4, x5, [sp, #128]
   117e0:	ldp	x0, x1, [x1, #16]
   117e4:	stp	x0, x1, [sp, #144]
   117e8:	ldp	x0, x1, [x19, #32]
   117ec:	stp	x0, x1, [sp, #32]
   117f0:	ldp	x0, x1, [x19, #48]
   117f4:	stp	x0, x1, [sp, #48]
   117f8:	ldp	x0, x1, [x19]
   117fc:	stp	x0, x1, [sp, #64]
   11800:	ldp	x0, x1, [x19, #16]
   11804:	stp	x0, x1, [sp, #80]
   11808:	ubfiz	w0, w2, #4, #4
   1180c:	add	w2, w0, w2, asr #4
   11810:	add	x1, sp, #0x60
   11814:	add	x0, sp, #0x20
   11818:	bl	4f50 <mpc_sin@plt>
   1181c:	ldp	x2, x3, [sp, #64]
   11820:	stp	x2, x3, [x19]
   11824:	ldp	x2, x3, [sp, #80]
   11828:	stp	x2, x3, [x19, #16]
   1182c:	ldp	x2, x3, [sp, #32]
   11830:	stp	x2, x3, [x19, #32]
   11834:	ldp	x2, x3, [sp, #48]
   11838:	stp	x2, x3, [x19, #48]
   1183c:	asr	w1, w0, #2
   11840:	cmp	w1, #0x2
   11844:	b.eq	11850 <mpc_sinh@@Base+0x98>  // b.none
   11848:	cmp	w1, #0x0
   1184c:	cset	w1, ne  // ne = any
   11850:	and	w0, w0, #0x3
   11854:	cmp	w0, #0x2
   11858:	b.eq	11878 <mpc_sinh@@Base+0xc0>  // b.none
   1185c:	cmp	w0, #0x0
   11860:	mov	w2, #0x4                   	// #4
   11864:	csel	w0, w0, w2, eq  // eq = none
   11868:	orr	w0, w1, w0
   1186c:	ldp	x19, x20, [sp, #16]
   11870:	ldp	x29, x30, [sp], #160
   11874:	ret
   11878:	mov	w0, #0x8                   	// #8
   1187c:	b	11868 <mpc_sinh@@Base+0xb0>
   11880:	stp	x29, x30, [sp, #-192]!
   11884:	mov	x29, sp
   11888:	stp	x19, x20, [sp, #16]
   1188c:	stp	x21, x22, [sp, #32]
   11890:	stp	x23, x24, [sp, #48]
   11894:	mov	x19, x0
   11898:	mov	x23, x1
   1189c:	mov	x22, x2
   118a0:	mov	w24, w3
   118a4:	ldr	x1, [x1]
   118a8:	add	x20, sp, #0xa0
   118ac:	lsl	x1, x1, #1
   118b0:	mov	x0, x20
   118b4:	bl	5440 <mpfr_init2@plt>
   118b8:	ldr	x1, [x22]
   118bc:	add	x21, sp, #0x80
   118c0:	lsl	x1, x1, #1
   118c4:	mov	x0, x21
   118c8:	bl	5440 <mpfr_init2@plt>
   118cc:	mov	w2, #0x0                   	// #0
   118d0:	mov	x1, x23
   118d4:	mov	x0, x20
   118d8:	bl	5010 <mpfr_sqr@plt>
   118dc:	mov	w2, #0x0                   	// #0
   118e0:	mov	x1, x22
   118e4:	mov	x0, x21
   118e8:	bl	5010 <mpfr_sqr@plt>
   118ec:	mov	w3, w24
   118f0:	mov	x2, x21
   118f4:	mov	x1, x20
   118f8:	mov	x0, x19
   118fc:	bl	4a60 <mpfr_sub@plt>
   11900:	mov	w20, w0
   11904:	ldr	x0, [x19, #16]
   11908:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   1190c:	cmp	x0, x1
   11910:	b.eq	11b3c <mpc_sinh@@Base+0x384>  // b.none
   11914:	ldr	x1, [sp, #176]
   11918:	mov	x2, #0x8000000000000001    	// #-9223372036854775807
   1191c:	cmp	x1, x2
   11920:	b.eq	11ba0 <mpc_sinh@@Base+0x3e8>  // b.none
   11924:	mov	w4, #0x0                   	// #0
   11928:	ldr	x3, [sp, #144]
   1192c:	mov	x2, #0x8000000000000001    	// #-9223372036854775807
   11930:	cmp	x3, x2
   11934:	b.eq	11bc0 <mpc_sinh@@Base+0x408>  // b.none
   11938:	mov	x2, #0x2                   	// #2
   1193c:	movk	x2, #0x8000, lsl #48
   11940:	cmp	x0, x2
   11944:	b.eq	11958 <mpc_sinh@@Base+0x1a0>  // b.none
   11948:	cmp	w4, #0x0
   1194c:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   11950:	ccmp	x1, x0, #0x0, ne  // ne = any
   11954:	b.ne	11b78 <mpc_sinh@@Base+0x3c0>  // b.any
   11958:	stp	x25, x26, [sp, #64]
   1195c:	str	x27, [sp, #80]
   11960:	ldr	x26, [x23, #16]
   11964:	ldr	x25, [x22, #16]
   11968:	mov	x1, #0x0                   	// #0
   1196c:	mov	x0, x23
   11970:	bl	4c10 <mpfr_set_exp@plt>
   11974:	mov	x1, #0x0                   	// #0
   11978:	mov	x0, x22
   1197c:	bl	4c10 <mpfr_set_exp@plt>
   11980:	add	x21, sp, #0x60
   11984:	mov	x0, x21
   11988:	bl	54a0 <__gmpz_init@plt>
   1198c:	add	x20, sp, #0x70
   11990:	mov	x0, x20
   11994:	bl	54a0 <__gmpz_init@plt>
   11998:	mov	x1, x26
   1199c:	mov	x0, x21
   119a0:	bl	54c0 <__gmpz_set_si@plt>
   119a4:	mov	x2, #0x1                   	// #1
   119a8:	mov	x1, x21
   119ac:	mov	x0, x21
   119b0:	bl	4e90 <__gmpz_mul_2exp@plt>
   119b4:	mov	x1, x25
   119b8:	mov	x0, x20
   119bc:	bl	54c0 <__gmpz_set_si@plt>
   119c0:	mov	x2, #0x1                   	// #1
   119c4:	mov	x1, x20
   119c8:	mov	x0, x20
   119cc:	bl	4e90 <__gmpz_mul_2exp@plt>
   119d0:	add	x27, sp, #0xa0
   119d4:	mov	w2, #0x0                   	// #0
   119d8:	mov	x1, x23
   119dc:	mov	x0, x27
   119e0:	bl	5010 <mpfr_sqr@plt>
   119e4:	ldr	x2, [sp, #176]
   119e8:	neg	x2, x2
   119ec:	mov	x1, x21
   119f0:	mov	x0, x21
   119f4:	bl	4ad0 <__gmpz_sub_ui@plt>
   119f8:	mov	x1, #0x0                   	// #0
   119fc:	mov	x0, x27
   11a00:	bl	4c10 <mpfr_set_exp@plt>
   11a04:	add	x21, sp, #0x80
   11a08:	mov	w2, #0x0                   	// #0
   11a0c:	mov	x1, x22
   11a10:	mov	x0, x21
   11a14:	bl	5010 <mpfr_sqr@plt>
   11a18:	ldr	x2, [sp, #144]
   11a1c:	neg	x2, x2
   11a20:	mov	x1, x20
   11a24:	mov	x0, x20
   11a28:	bl	4ad0 <__gmpz_sub_ui@plt>
   11a2c:	mov	x1, #0x0                   	// #0
   11a30:	mov	x0, x21
   11a34:	bl	4c10 <mpfr_set_exp@plt>
   11a38:	ldr	x1, [x19, #16]
   11a3c:	mov	x0, #0x2                   	// #2
   11a40:	movk	x0, #0x8000, lsl #48
   11a44:	cmp	x1, x0
   11a48:	b.eq	11bdc <mpc_sinh@@Base+0x424>  // b.none
   11a4c:	bl	5060 <mpfr_get_emin@plt>
   11a50:	mov	x20, x0
   11a54:	add	x1, sp, #0x70
   11a58:	add	x0, sp, #0x60
   11a5c:	bl	5300 <__gmpz_cmp@plt>
   11a60:	cmp	w0, #0x0
   11a64:	b.le	11ce4 <mpc_sinh@@Base+0x52c>
   11a68:	mov	x1, x20
   11a6c:	add	x0, sp, #0x80
   11a70:	bl	4c10 <mpfr_set_exp@plt>
   11a74:	add	x21, sp, #0x70
   11a78:	neg	x2, x20
   11a7c:	mov	x1, x21
   11a80:	mov	x0, x21
   11a84:	bl	4fa0 <__gmpz_add_ui@plt>
   11a88:	add	x20, sp, #0x60
   11a8c:	mov	x2, x21
   11a90:	mov	x1, x20
   11a94:	mov	x0, x20
   11a98:	bl	4bc0 <__gmpz_sub@plt>
   11a9c:	mov	x0, x20
   11aa0:	bl	49a0 <__gmpz_get_si@plt>
   11aa4:	mov	x1, x0
   11aa8:	add	x0, sp, #0xa0
   11aac:	bl	4c10 <mpfr_set_exp@plt>
   11ab0:	mov	x1, x21
   11ab4:	mov	x0, x20
   11ab8:	bl	4d00 <__gmpz_set@plt>
   11abc:	mov	w3, w24
   11ac0:	add	x2, sp, #0x80
   11ac4:	add	x1, sp, #0xa0
   11ac8:	mov	x0, x19
   11acc:	bl	4a60 <mpfr_sub@plt>
   11ad0:	mov	w20, w0
   11ad4:	ldr	w0, [sp, #100]
   11ad8:	neg	w1, w0
   11adc:	str	w1, [sp, #100]
   11ae0:	ldr	x1, [sp, #104]
   11ae4:	ldr	x2, [x1]
   11ae8:	cmp	w0, #0x0
   11aec:	mov	w3, w24
   11af0:	csel	x2, x2, xzr, ne  // ne = any
   11af4:	mov	x1, x19
   11af8:	mov	x0, x19
   11afc:	bl	5320 <mpfr_div_2ui@plt>
   11b00:	cmp	w0, #0x0
   11b04:	csel	w20, w20, w0, eq  // eq = none
   11b08:	add	x0, sp, #0x60
   11b0c:	bl	5180 <__gmpz_clear@plt>
   11b10:	add	x0, sp, #0x70
   11b14:	bl	5180 <__gmpz_clear@plt>
   11b18:	mov	x1, x26
   11b1c:	mov	x0, x23
   11b20:	bl	4c10 <mpfr_set_exp@plt>
   11b24:	mov	x1, x25
   11b28:	mov	x0, x22
   11b2c:	bl	4c10 <mpfr_set_exp@plt>
   11b30:	ldp	x25, x26, [sp, #64]
   11b34:	ldr	x27, [sp, #80]
   11b38:	b	11b78 <mpc_sinh@@Base+0x3c0>
   11b3c:	ldr	w0, [x19, #8]
   11b40:	mov	x1, #0x1                   	// #1
   11b44:	cmp	w0, #0x0
   11b48:	mov	w3, #0x0                   	// #0
   11b4c:	mov	x2, #0x0                   	// #0
   11b50:	cneg	x1, x1, lt  // lt = tstop
   11b54:	mov	x0, x19
   11b58:	bl	49e0 <mpfr_set_si_2exp@plt>
   11b5c:	bl	5200 <mpfr_get_emax@plt>
   11b60:	mov	w3, w24
   11b64:	mov	x2, x0
   11b68:	mov	x1, x19
   11b6c:	mov	x0, x19
   11b70:	bl	4f40 <mpfr_mul_2ui@plt>
   11b74:	mov	w20, w0
   11b78:	add	x0, sp, #0xa0
   11b7c:	bl	4d60 <mpfr_clear@plt>
   11b80:	add	x0, sp, #0x80
   11b84:	bl	4d60 <mpfr_clear@plt>
   11b88:	mov	w0, w20
   11b8c:	ldp	x19, x20, [sp, #16]
   11b90:	ldp	x21, x22, [sp, #32]
   11b94:	ldp	x23, x24, [sp, #48]
   11b98:	ldp	x29, x30, [sp], #192
   11b9c:	ret
   11ba0:	ldr	x3, [sp, #144]
   11ba4:	cmp	x3, x2
   11ba8:	b.eq	11bd4 <mpc_sinh@@Base+0x41c>  // b.none
   11bac:	mov	w0, #0xffffffff            	// #-1
   11bb0:	ldr	w1, [sp, #168]
   11bb4:	cmp	w1, #0x0
   11bb8:	cneg	w20, w0, lt  // lt = tstop
   11bbc:	b	11b78 <mpc_sinh@@Base+0x3c0>
   11bc0:	mov	w0, #0x1                   	// #1
   11bc4:	ldr	w1, [sp, #136]
   11bc8:	cmp	w1, #0x0
   11bcc:	cneg	w20, w0, lt  // lt = tstop
   11bd0:	b	11b78 <mpc_sinh@@Base+0x3c0>
   11bd4:	mov	w4, #0x1                   	// #1
   11bd8:	b	11938 <mpc_sinh@@Base+0x180>
   11bdc:	bl	5200 <mpfr_get_emax@plt>
   11be0:	mov	x20, x0
   11be4:	add	x1, sp, #0x70
   11be8:	add	x0, sp, #0x60
   11bec:	bl	5300 <__gmpz_cmp@plt>
   11bf0:	tbnz	w0, #31, 11c88 <mpc_sinh@@Base+0x4d0>
   11bf4:	mov	x1, x20
   11bf8:	add	x0, sp, #0xa0
   11bfc:	bl	4c10 <mpfr_set_exp@plt>
   11c00:	add	x0, sp, #0x60
   11c04:	mov	x2, x20
   11c08:	mov	x20, x0
   11c0c:	mov	x1, x0
   11c10:	bl	4ad0 <__gmpz_sub_ui@plt>
   11c14:	add	x0, sp, #0x70
   11c18:	mov	x2, x20
   11c1c:	mov	x1, x0
   11c20:	bl	4bc0 <__gmpz_sub@plt>
   11c24:	ldr	x0, [sp, #120]
   11c28:	ldr	x1, [x0]
   11c2c:	ldr	w0, [sp, #116]
   11c30:	cmp	w0, #0x0
   11c34:	csel	x1, x1, xzr, ne  // ne = any
   11c38:	add	x0, sp, #0x80
   11c3c:	bl	4c10 <mpfr_set_exp@plt>
   11c40:	mov	w3, w24
   11c44:	add	x2, sp, #0x80
   11c48:	add	x1, sp, #0xa0
   11c4c:	mov	x0, x19
   11c50:	bl	4a60 <mpfr_sub@plt>
   11c54:	mov	w20, w0
   11c58:	ldr	x0, [sp, #104]
   11c5c:	ldr	x2, [x0]
   11c60:	ldr	w0, [sp, #100]
   11c64:	cmp	w0, #0x0
   11c68:	mov	w3, w24
   11c6c:	csel	x2, x2, xzr, ne  // ne = any
   11c70:	mov	x1, x19
   11c74:	mov	x0, x19
   11c78:	bl	4f40 <mpfr_mul_2ui@plt>
   11c7c:	cmp	w0, #0x0
   11c80:	csel	w20, w20, w0, eq  // eq = none
   11c84:	b	11b08 <mpc_sinh@@Base+0x350>
   11c88:	mov	x1, x20
   11c8c:	add	x0, sp, #0x80
   11c90:	bl	4c10 <mpfr_set_exp@plt>
   11c94:	add	x0, sp, #0x70
   11c98:	mov	x2, x20
   11c9c:	mov	x20, x0
   11ca0:	mov	x1, x0
   11ca4:	bl	4ad0 <__gmpz_sub_ui@plt>
   11ca8:	add	x0, sp, #0x60
   11cac:	mov	x2, x20
   11cb0:	mov	x1, x0
   11cb4:	bl	4bc0 <__gmpz_sub@plt>
   11cb8:	ldr	x0, [sp, #104]
   11cbc:	ldr	x1, [x0]
   11cc0:	ldr	w0, [sp, #100]
   11cc4:	cmp	w0, #0x0
   11cc8:	csel	x1, x1, xzr, ne  // ne = any
   11ccc:	add	x0, sp, #0xa0
   11cd0:	bl	4c10 <mpfr_set_exp@plt>
   11cd4:	add	x1, sp, #0x70
   11cd8:	add	x0, sp, #0x60
   11cdc:	bl	4d00 <__gmpz_set@plt>
   11ce0:	b	11c40 <mpc_sinh@@Base+0x488>
   11ce4:	mov	x1, x20
   11ce8:	add	x0, sp, #0xa0
   11cec:	bl	4c10 <mpfr_set_exp@plt>
   11cf0:	add	x21, sp, #0x60
   11cf4:	neg	x2, x20
   11cf8:	mov	x1, x21
   11cfc:	mov	x0, x21
   11d00:	bl	4fa0 <__gmpz_add_ui@plt>
   11d04:	add	x20, sp, #0x70
   11d08:	mov	x2, x21
   11d0c:	mov	x1, x20
   11d10:	mov	x0, x20
   11d14:	bl	4bc0 <__gmpz_sub@plt>
   11d18:	mov	x0, x20
   11d1c:	bl	49a0 <__gmpz_get_si@plt>
   11d20:	mov	x1, x0
   11d24:	add	x0, sp, #0x80
   11d28:	bl	4c10 <mpfr_set_exp@plt>
   11d2c:	b	11abc <mpc_sinh@@Base+0x304>

0000000000011d30 <mpc_sqr@@Base>:
   11d30:	stp	x29, x30, [sp, #-224]!
   11d34:	mov	x29, sp
   11d38:	stp	x19, x20, [sp, #16]
   11d3c:	stp	x21, x22, [sp, #32]
   11d40:	mov	x20, x0
   11d44:	mov	x19, x1
   11d48:	mov	w21, w2
   11d4c:	mov	x0, x1
   11d50:	bl	54d0 <mpfr_number_p@plt>
   11d54:	cbnz	w0, 11dc0 <mpc_sqr@@Base+0x90>
   11d58:	ldr	x0, [x19, #16]
   11d5c:	mov	x1, #0x2                   	// #2
   11d60:	movk	x1, #0x8000, lsl #48
   11d64:	cmp	x0, x1
   11d68:	b.eq	11ed4 <mpc_sqr@@Base+0x1a4>  // b.none
   11d6c:	ldr	x1, [x19, #48]
   11d70:	mov	x2, #0x2                   	// #2
   11d74:	movk	x2, #0x8000, lsl #48
   11d78:	cmp	x1, x2
   11d7c:	b.eq	11ed4 <mpc_sqr@@Base+0x1a4>  // b.none
   11d80:	mov	x2, #0x8000000000000003    	// #-9223372036854775805
   11d84:	cmp	x0, x2
   11d88:	b.eq	11ef8 <mpc_sqr@@Base+0x1c8>  // b.none
   11d8c:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   11d90:	cmp	x0, x1
   11d94:	b.eq	11f64 <mpc_sqr@@Base+0x234>  // b.none
   11d98:	ldr	w1, [x19, #8]
   11d9c:	ldr	w0, [x19, #40]
   11da0:	mul	w1, w1, w0
   11da4:	add	x0, x20, #0x20
   11da8:	bl	5120 <mpfr_set_inf@plt>
   11dac:	mov	w1, #0xffffffff            	// #-1
   11db0:	mov	x0, x20
   11db4:	bl	5120 <mpfr_set_inf@plt>
   11db8:	mov	w0, #0x0                   	// #0
   11dbc:	b	11ee8 <mpc_sqr@@Base+0x1b8>
   11dc0:	stp	x25, x26, [sp, #64]
   11dc4:	add	x26, x19, #0x20
   11dc8:	mov	x0, x26
   11dcc:	bl	54d0 <mpfr_number_p@plt>
   11dd0:	cbz	w0, 11ecc <mpc_sqr@@Base+0x19c>
   11dd4:	stp	x23, x24, [sp, #48]
   11dd8:	ldr	x1, [x19, #48]
   11ddc:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   11de0:	cmp	x1, x0
   11de4:	b.eq	11f70 <mpc_sqr@@Base+0x240>  // b.none
   11de8:	ldr	x1, [x19, #16]
   11dec:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   11df0:	cmp	x1, x0
   11df4:	b.eq	11fe0 <mpc_sqr@@Base+0x2b0>  // b.none
   11df8:	ldr	x23, [x20, #32]
   11dfc:	ldr	x22, [x20]
   11e00:	cmp	x19, x20
   11e04:	b.eq	12088 <mpc_sqr@@Base+0x358>  // b.none
   11e08:	ldp	x0, x1, [x19]
   11e0c:	stp	x0, x1, [sp, #128]
   11e10:	ldp	x0, x1, [x19, #16]
   11e14:	stp	x0, x1, [sp, #144]
   11e18:	ldr	x0, [x19, #16]
   11e1c:	ldr	x1, [x19, #48]
   11e20:	subs	x0, x0, x1
   11e24:	cneg	x0, x0, mi  // mi = first
   11e28:	ldr	x2, [x19]
   11e2c:	ldr	x1, [x19, #32]
   11e30:	cmp	x1, x2
   11e34:	csel	x1, x1, x2, ge  // ge = tcont
   11e38:	add	x1, x1, x1, lsr #63
   11e3c:	cmp	x0, x1, asr #1
   11e40:	b.le	120b0 <mpc_sqr@@Base+0x380>
   11e44:	and	w3, w21, #0xf
   11e48:	mov	x2, x26
   11e4c:	add	x1, sp, #0x80
   11e50:	mov	x0, x20
   11e54:	bl	11880 <mpc_sinh@@Base+0xc8>
   11e58:	mov	w22, w0
   11e5c:	bl	52f0 <mpfr_underflow_p@plt>
   11e60:	mov	w24, w0
   11e64:	bl	4e20 <mpfr_clear_underflow@plt>
   11e68:	add	x25, x20, #0x20
   11e6c:	asr	w21, w21, #4
   11e70:	mov	w3, w21
   11e74:	mov	x2, x26
   11e78:	add	x1, sp, #0x80
   11e7c:	mov	x0, x25
   11e80:	bl	4b70 <mpfr_mul@plt>
   11e84:	mov	w23, w0
   11e88:	bl	52f0 <mpfr_underflow_p@plt>
   11e8c:	cbz	w0, 12264 <mpc_sqr@@Base+0x534>
   11e90:	cbnz	w24, 12280 <mpc_sqr@@Base+0x550>
   11e94:	cmp	x19, x20
   11e98:	b.eq	12288 <mpc_sqr@@Base+0x558>  // b.none
   11e9c:	mov	w1, #0x2                   	// #2
   11ea0:	tbnz	w22, #31, 11eac <mpc_sqr@@Base+0x17c>
   11ea4:	cmp	w22, #0x0
   11ea8:	cset	w1, ne  // ne = any
   11eac:	tbnz	w23, #31, 12294 <mpc_sqr@@Base+0x564>
   11eb0:	cmp	w23, #0x0
   11eb4:	mov	w0, #0x4                   	// #4
   11eb8:	csel	w23, w23, w0, eq  // eq = none
   11ebc:	orr	w0, w1, w23
   11ec0:	ldp	x23, x24, [sp, #48]
   11ec4:	ldp	x25, x26, [sp, #64]
   11ec8:	b	11ee8 <mpc_sqr@@Base+0x1b8>
   11ecc:	ldp	x25, x26, [sp, #64]
   11ed0:	b	11d58 <mpc_sqr@@Base+0x28>
   11ed4:	mov	x0, x20
   11ed8:	bl	4a40 <mpfr_set_nan@plt>
   11edc:	add	x0, x20, #0x20
   11ee0:	bl	4a40 <mpfr_set_nan@plt>
   11ee4:	mov	w0, #0x0                   	// #0
   11ee8:	ldp	x19, x20, [sp, #16]
   11eec:	ldp	x21, x22, [sp, #32]
   11ef0:	ldp	x29, x30, [sp], #224
   11ef4:	ret
   11ef8:	cmp	x1, x2
   11efc:	b.eq	11f34 <mpc_sqr@@Base+0x204>  // b.none
   11f00:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   11f04:	cmp	x1, x0
   11f08:	b.eq	11f58 <mpc_sqr@@Base+0x228>  // b.none
   11f0c:	ldr	w1, [x19, #8]
   11f10:	ldr	w0, [x19, #40]
   11f14:	mul	w1, w1, w0
   11f18:	add	x0, x20, #0x20
   11f1c:	bl	5120 <mpfr_set_inf@plt>
   11f20:	mov	w1, #0x1                   	// #1
   11f24:	mov	x0, x20
   11f28:	bl	5120 <mpfr_set_inf@plt>
   11f2c:	mov	w0, #0x0                   	// #0
   11f30:	b	11ee8 <mpc_sqr@@Base+0x1b8>
   11f34:	ldr	w1, [x19, #8]
   11f38:	ldr	w0, [x19, #40]
   11f3c:	mul	w1, w1, w0
   11f40:	add	x0, x20, #0x20
   11f44:	bl	5120 <mpfr_set_inf@plt>
   11f48:	mov	x0, x20
   11f4c:	bl	4a40 <mpfr_set_nan@plt>
   11f50:	mov	w0, #0x0                   	// #0
   11f54:	b	11ee8 <mpc_sqr@@Base+0x1b8>
   11f58:	add	x0, x20, #0x20
   11f5c:	bl	4a40 <mpfr_set_nan@plt>
   11f60:	b	11f20 <mpc_sqr@@Base+0x1f0>
   11f64:	add	x0, x20, #0x20
   11f68:	bl	4a40 <mpfr_set_nan@plt>
   11f6c:	b	11dac <mpc_sqr@@Base+0x7c>
   11f70:	ldr	w22, [x19, #8]
   11f74:	mvn	w22, w22
   11f78:	lsr	w22, w22, #31
   11f7c:	ldr	w23, [x19, #40]
   11f80:	lsr	w23, w23, #31
   11f84:	and	w2, w21, #0xf
   11f88:	mov	x1, x19
   11f8c:	mov	x0, x20
   11f90:	bl	5010 <mpfr_sqr@plt>
   11f94:	mov	w19, w0
   11f98:	mov	w0, #0x1                   	// #1
   11f9c:	str	w0, [x20, #40]
   11fa0:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   11fa4:	str	x0, [x20, #48]
   11fa8:	cmp	w22, w23
   11fac:	b.eq	11fcc <mpc_sqr@@Base+0x29c>  // b.none
   11fb0:	mov	w0, #0x2                   	// #2
   11fb4:	tbnz	w19, #31, 1229c <mpc_sqr@@Base+0x56c>
   11fb8:	cmp	w19, #0x0
   11fbc:	cset	w0, ne  // ne = any
   11fc0:	ldp	x23, x24, [sp, #48]
   11fc4:	ldp	x25, x26, [sp, #64]
   11fc8:	b	11ee8 <mpc_sqr@@Base+0x1b8>
   11fcc:	mov	w2, #0x0                   	// #0
   11fd0:	mov	x1, x20
   11fd4:	mov	x0, x20
   11fd8:	bl	4f60 <mpc_conj@plt>
   11fdc:	b	11fb0 <mpc_sqr@@Base+0x280>
   11fe0:	ldr	w22, [x19, #8]
   11fe4:	mvn	w22, w22
   11fe8:	lsr	w22, w22, #31
   11fec:	ldr	w23, [x19, #40]
   11ff0:	lsr	w23, w23, #31
   11ff4:	and	w2, w21, #0xf
   11ff8:	cmp	w2, #0x2
   11ffc:	b.eq	1205c <mpc_sqr@@Base+0x32c>  // b.none
   12000:	cmp	w2, #0x3
   12004:	mov	w0, #0x2                   	// #2
   12008:	csel	w2, w2, w0, ne  // ne = any
   1200c:	mov	x1, x26
   12010:	mov	x0, x20
   12014:	bl	5010 <mpfr_sqr@plt>
   12018:	mov	w19, w0
   1201c:	mov	w2, #0x0                   	// #0
   12020:	mov	x1, x20
   12024:	mov	x0, x20
   12028:	bl	4b80 <mpfr_neg@plt>
   1202c:	mov	w0, #0x1                   	// #1
   12030:	str	w0, [x20, #40]
   12034:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   12038:	str	x0, [x20, #48]
   1203c:	cmp	w22, w23
   12040:	b.eq	12064 <mpc_sqr@@Base+0x334>  // b.none
   12044:	mov	w0, #0x2                   	// #2
   12048:	cmp	w19, #0x0
   1204c:	b.le	12078 <mpc_sqr@@Base+0x348>
   12050:	ldp	x23, x24, [sp, #48]
   12054:	ldp	x25, x26, [sp, #64]
   12058:	b	11ee8 <mpc_sqr@@Base+0x1b8>
   1205c:	mov	w2, #0x3                   	// #3
   12060:	b	1200c <mpc_sqr@@Base+0x2dc>
   12064:	mov	w2, #0x0                   	// #0
   12068:	mov	x1, x20
   1206c:	mov	x0, x20
   12070:	bl	4f60 <mpc_conj@plt>
   12074:	b	12044 <mpc_sqr@@Base+0x314>
   12078:	cset	w0, ne  // ne = any
   1207c:	ldp	x23, x24, [sp, #48]
   12080:	ldp	x25, x26, [sp, #64]
   12084:	b	11ee8 <mpc_sqr@@Base+0x1b8>
   12088:	add	x24, sp, #0x80
   1208c:	ldr	x1, [x19]
   12090:	mov	x0, x24
   12094:	bl	5440 <mpfr_init2@plt>
   12098:	ldr	w3, [x19, #8]
   1209c:	mov	w2, #0x0                   	// #0
   120a0:	mov	x1, x19
   120a4:	mov	x0, x24
   120a8:	bl	51d0 <mpfr_set4@plt>
   120ac:	b	11e18 <mpc_sqr@@Base+0xe8>
   120b0:	stp	x27, x28, [sp, #80]
   120b4:	cmp	x23, x22
   120b8:	csel	x22, x23, x22, ge  // ge = tcont
   120bc:	add	x0, sp, #0xc0
   120c0:	bl	4aa0 <mpfr_init@plt>
   120c4:	add	x0, sp, #0xa0
   120c8:	bl	4aa0 <mpfr_init@plt>
   120cc:	bl	5060 <mpfr_get_emin@plt>
   120d0:	str	x0, [sp, #120]
   120d4:	add	x23, sp, #0xc0
   120d8:	add	x27, sp, #0xa0
   120dc:	add	x0, sp, #0x80
   120e0:	str	x0, [sp, #104]
   120e4:	mov	w25, #0x4                   	// #4
   120e8:	mov	x28, #0x8000000000000003    	// #-9223372036854775805
   120ec:	mov	x0, x22
   120f0:	bl	4d20 <mpc_ceil_log2@plt>
   120f4:	add	x0, x0, #0x5
   120f8:	add	x22, x22, x0
   120fc:	mov	x1, x22
   12100:	mov	x0, x23
   12104:	bl	4c80 <mpfr_set_prec@plt>
   12108:	mov	x1, x22
   1210c:	mov	x0, x27
   12110:	bl	4c80 <mpfr_set_prec@plt>
   12114:	mov	w3, w25
   12118:	mov	x2, x26
   1211c:	ldr	x1, [sp, #104]
   12120:	mov	x0, x23
   12124:	bl	4e60 <mpfr_add@plt>
   12128:	mov	w24, w0
   1212c:	mov	w3, w25
   12130:	mov	x2, x26
   12134:	ldr	x1, [sp, #104]
   12138:	mov	x0, x27
   1213c:	bl	4a60 <mpfr_sub@plt>
   12140:	orr	w24, w24, w0
   12144:	ldr	x0, [sp, #208]
   12148:	cmp	x0, x28
   1214c:	b.lt	12200 <mpc_sqr@@Base+0x4d0>  // b.tstop
   12150:	ldr	w0, [sp, #200]
   12154:	cbz	w0, 12210 <mpc_sqr@@Base+0x4e0>
   12158:	ldr	x0, [sp, #176]
   1215c:	cmp	x0, x28
   12160:	b.lt	12230 <mpc_sqr@@Base+0x500>  // b.tstop
   12164:	ldr	w0, [sp, #168]
   12168:	cbz	w0, 12210 <mpc_sqr@@Base+0x4e0>
   1216c:	mov	w3, w25
   12170:	mov	x2, x27
   12174:	mov	x1, x23
   12178:	mov	x0, x23
   1217c:	bl	4b70 <mpfr_mul@plt>
   12180:	orr	w24, w24, w0
   12184:	ldr	x0, [sp, #208]
   12188:	ldr	x1, [sp, #120]
   1218c:	cmp	x0, x1
   12190:	ccmp	x0, x28, #0x4, ne  // ne = any
   12194:	b.eq	12248 <mpc_sqr@@Base+0x518>  // b.none
   12198:	ands	w0, w21, #0xf
   1219c:	str	w0, [sp, #116]
   121a0:	ldr	x4, [x20]
   121a4:	cinc	x4, x4, eq  // eq = none
   121a8:	mov	w3, #0x1                   	// #1
   121ac:	mov	w2, w25
   121b0:	sub	x1, x22, #0x3
   121b4:	mov	x0, x23
   121b8:	bl	5450 <mpfr_can_round@plt>
   121bc:	cmp	w24, #0x0
   121c0:	cset	w1, eq  // eq = none
   121c4:	orr	w1, w1, w0
   121c8:	cbz	w1, 120ec <mpc_sqr@@Base+0x3bc>
   121cc:	ldr	w3, [sp, #200]
   121d0:	ldr	w2, [sp, #116]
   121d4:	add	x1, sp, #0xc0
   121d8:	mov	x0, x20
   121dc:	bl	51d0 <mpfr_set4@plt>
   121e0:	cmp	w0, #0x0
   121e4:	csel	w22, w0, w24, ne  // ne = any
   121e8:	add	x0, sp, #0xc0
   121ec:	bl	4d60 <mpfr_clear@plt>
   121f0:	add	x0, sp, #0xa0
   121f4:	bl	4d60 <mpfr_clear@plt>
   121f8:	ldp	x27, x28, [sp, #80]
   121fc:	b	11e5c <mpc_sqr@@Base+0x12c>
   12200:	mov	x1, #0x2                   	// #2
   12204:	movk	x1, #0x8000, lsl #48
   12208:	cmp	x0, x1
   1220c:	b.eq	12228 <mpc_sqr@@Base+0x4f8>  // b.none
   12210:	mov	w0, #0x1                   	// #1
   12214:	str	w0, [x20, #8]
   12218:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   1221c:	str	x0, [x20, #16]
   12220:	mov	w22, #0x0                   	// #0
   12224:	b	121e8 <mpc_sqr@@Base+0x4b8>
   12228:	bl	4b00 <mpfr_set_erangeflag@plt>
   1222c:	b	12210 <mpc_sqr@@Base+0x4e0>
   12230:	mov	x1, #0x2                   	// #2
   12234:	movk	x1, #0x8000, lsl #48
   12238:	cmp	x0, x1
   1223c:	b.ne	12210 <mpc_sqr@@Base+0x4e0>  // b.any
   12240:	bl	4b00 <mpfr_set_erangeflag@plt>
   12244:	b	12210 <mpc_sqr@@Base+0x4e0>
   12248:	and	w3, w21, #0xf
   1224c:	mov	x2, x26
   12250:	add	x1, sp, #0x80
   12254:	mov	x0, x20
   12258:	bl	11880 <mpc_sinh@@Base+0xc8>
   1225c:	mov	w22, w0
   12260:	b	121e8 <mpc_sqr@@Base+0x4b8>
   12264:	mov	w3, w21
   12268:	mov	x2, #0x1                   	// #1
   1226c:	mov	x1, x25
   12270:	mov	x0, x25
   12274:	bl	4f40 <mpfr_mul_2ui@plt>
   12278:	orr	w23, w23, w0
   1227c:	b	11e90 <mpc_sqr@@Base+0x160>
   12280:	bl	4990 <mpfr_set_underflow@plt>
   12284:	b	11e94 <mpc_sqr@@Base+0x164>
   12288:	add	x0, sp, #0x80
   1228c:	bl	4d60 <mpfr_clear@plt>
   12290:	b	11e9c <mpc_sqr@@Base+0x16c>
   12294:	mov	w23, #0x8                   	// #8
   12298:	b	11ebc <mpc_sqr@@Base+0x18c>
   1229c:	ldp	x23, x24, [sp, #48]
   122a0:	ldp	x25, x26, [sp, #64]
   122a4:	b	11ee8 <mpc_sqr@@Base+0x1b8>

00000000000122a8 <mpc_sqrt@@Base>:
   122a8:	stp	x29, x30, [sp, #-272]!
   122ac:	mov	x29, sp
   122b0:	stp	x23, x24, [sp, #48]
   122b4:	str	x0, [sp, #128]
   122b8:	mov	x24, x1
   122bc:	str	w2, [sp, #160]
   122c0:	str	x1, [sp, #104]
   122c4:	mov	x0, x1
   122c8:	bl	51f0 <mpfr_sgn@plt>
   122cc:	str	w0, [sp, #96]
   122d0:	add	x0, x24, #0x20
   122d4:	str	x0, [sp, #136]
   122d8:	bl	51f0 <mpfr_sgn@plt>
   122dc:	str	w0, [sp, #156]
   122e0:	ldr	w0, [x24, #40]
   122e4:	cmp	w0, #0x0
   122e8:	csetm	w1, lt  // lt = tstop
   122ec:	str	w1, [sp, #100]
   122f0:	mov	w1, #0x2                   	// #2
   122f4:	mov	w0, #0x3                   	// #3
   122f8:	csel	w0, w1, w0, ge  // ge = tcont
   122fc:	str	w0, [sp, #112]
   12300:	mov	x0, x24
   12304:	bl	54d0 <mpfr_number_p@plt>
   12308:	cbnz	w0, 123b4 <mpc_sqrt@@Base+0x10c>
   1230c:	ldr	x0, [x24, #48]
   12310:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   12314:	cmp	x0, x1
   12318:	b.eq	123c4 <mpc_sqrt@@Base+0x11c>  // b.none
   1231c:	ldr	x1, [x24, #16]
   12320:	mov	x2, #0x8000000000000003    	// #-9223372036854775805
   12324:	cmp	x1, x2
   12328:	b.eq	123f0 <mpc_sqrt@@Base+0x148>  // b.none
   1232c:	mov	x2, #0x2                   	// #2
   12330:	movk	x2, #0x8000, lsl #48
   12334:	cmp	x1, x2
   12338:	ccmp	x0, x2, #0x4, ne  // ne = any
   1233c:	b.eq	124d0 <mpc_sqrt@@Base+0x228>  // b.none
   12340:	ldr	w0, [sp, #156]
   12344:	cbnz	w0, 12614 <mpc_sqrt@@Base+0x36c>
   12348:	ldr	w0, [sp, #96]
   1234c:	cbz	w0, 124f4 <mpc_sqrt@@Base+0x24c>
   12350:	stp	x19, x20, [sp, #16]
   12354:	ldr	w0, [sp, #96]
   12358:	cmp	w0, #0x0
   1235c:	b.le	12540 <mpc_sqrt@@Base+0x298>
   12360:	ldr	w0, [sp, #160]
   12364:	and	w2, w0, #0xf
   12368:	mov	x1, x24
   1236c:	ldr	x20, [sp, #128]
   12370:	mov	x0, x20
   12374:	bl	5350 <mpfr_sqrt@plt>
   12378:	mov	w19, w0
   1237c:	mov	w0, #0x1                   	// #1
   12380:	str	w0, [x20, #40]
   12384:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   12388:	str	x0, [x20, #48]
   1238c:	ldr	w0, [sp, #100]
   12390:	cbnz	w0, 1252c <mpc_sqrt@@Base+0x284>
   12394:	mov	w0, #0x2                   	// #2
   12398:	str	w0, [sp, #100]
   1239c:	tbnz	w19, #31, 12f80 <mpc_sqrt@@Base+0xcd8>
   123a0:	cmp	w19, #0x0
   123a4:	cset	w0, ne  // ne = any
   123a8:	str	w0, [sp, #100]
   123ac:	ldp	x19, x20, [sp, #16]
   123b0:	b	12e24 <mpc_sqrt@@Base+0xb7c>
   123b4:	ldr	x0, [sp, #136]
   123b8:	bl	54d0 <mpfr_number_p@plt>
   123bc:	cbnz	w0, 12340 <mpc_sqrt@@Base+0x98>
   123c0:	b	1230c <mpc_sqrt@@Base+0x64>
   123c4:	stp	x19, x20, [sp, #16]
   123c8:	mov	w1, #0x1                   	// #1
   123cc:	ldr	x19, [sp, #128]
   123d0:	mov	x0, x19
   123d4:	bl	5120 <mpfr_set_inf@plt>
   123d8:	ldr	w1, [sp, #100]
   123dc:	add	x0, x19, #0x20
   123e0:	bl	5120 <mpfr_set_inf@plt>
   123e4:	str	wzr, [sp, #100]
   123e8:	ldp	x19, x20, [sp, #16]
   123ec:	b	12e24 <mpc_sqrt@@Base+0xb7c>
   123f0:	ldr	w0, [x24, #8]
   123f4:	tbnz	w0, #31, 12438 <mpc_sqrt@@Base+0x190>
   123f8:	ldr	x0, [sp, #136]
   123fc:	bl	54d0 <mpfr_number_p@plt>
   12400:	cbz	w0, 124b8 <mpc_sqrt@@Base+0x210>
   12404:	stp	x19, x20, [sp, #16]
   12408:	mov	w1, #0x1                   	// #1
   1240c:	ldr	x19, [sp, #128]
   12410:	mov	x0, x19
   12414:	bl	5120 <mpfr_set_inf@plt>
   12418:	mov	w1, #0x1                   	// #1
   1241c:	str	w1, [x19, #40]
   12420:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   12424:	str	x1, [x19, #48]
   12428:	ldr	w0, [sp, #100]
   1242c:	cbnz	w0, 1249c <mpc_sqrt@@Base+0x1f4>
   12430:	ldp	x19, x20, [sp, #16]
   12434:	b	12e24 <mpc_sqrt@@Base+0xb7c>
   12438:	stp	x19, x20, [sp, #16]
   1243c:	ldr	x0, [sp, #136]
   12440:	bl	54d0 <mpfr_number_p@plt>
   12444:	mov	w19, w0
   12448:	cbz	w0, 12478 <mpc_sqrt@@Base+0x1d0>
   1244c:	mov	w0, #0x1                   	// #1
   12450:	ldr	x2, [sp, #128]
   12454:	str	w0, [x2, #8]
   12458:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   1245c:	str	x0, [x2, #16]
   12460:	ldr	w1, [sp, #100]
   12464:	add	x0, x2, #0x20
   12468:	bl	5120 <mpfr_set_inf@plt>
   1246c:	str	wzr, [sp, #100]
   12470:	ldp	x19, x20, [sp, #16]
   12474:	b	12e24 <mpc_sqrt@@Base+0xb7c>
   12478:	ldr	x20, [sp, #128]
   1247c:	mov	x0, x20
   12480:	bl	4a40 <mpfr_set_nan@plt>
   12484:	ldr	w1, [sp, #100]
   12488:	add	x0, x20, #0x20
   1248c:	bl	5120 <mpfr_set_inf@plt>
   12490:	str	w19, [sp, #100]
   12494:	ldp	x19, x20, [sp, #16]
   12498:	b	12e24 <mpc_sqrt@@Base+0xb7c>
   1249c:	mov	w2, #0x0                   	// #0
   124a0:	ldr	x0, [sp, #128]
   124a4:	mov	x1, x0
   124a8:	bl	4f60 <mpc_conj@plt>
   124ac:	str	wzr, [sp, #100]
   124b0:	ldp	x19, x20, [sp, #16]
   124b4:	b	12e24 <mpc_sqrt@@Base+0xb7c>
   124b8:	ldr	w2, [sp, #160]
   124bc:	mov	x1, x24
   124c0:	ldr	x0, [sp, #128]
   124c4:	bl	5580 <mpc_set@plt>
   124c8:	str	w0, [sp, #100]
   124cc:	b	12e24 <mpc_sqrt@@Base+0xb7c>
   124d0:	stp	x19, x20, [sp, #16]
   124d4:	ldr	x19, [sp, #128]
   124d8:	mov	x0, x19
   124dc:	bl	4a40 <mpfr_set_nan@plt>
   124e0:	add	x0, x19, #0x20
   124e4:	bl	4a40 <mpfr_set_nan@plt>
   124e8:	str	wzr, [sp, #100]
   124ec:	ldp	x19, x20, [sp, #16]
   124f0:	b	12e24 <mpc_sqrt@@Base+0xb7c>
   124f4:	mov	w3, #0x0                   	// #0
   124f8:	mov	x2, #0x0                   	// #0
   124fc:	mov	x1, #0x0                   	// #0
   12500:	ldr	x0, [sp, #128]
   12504:	bl	5040 <mpc_set_ui_ui@plt>
   12508:	ldr	w0, [sp, #100]
   1250c:	cbz	w0, 12e24 <mpc_sqrt@@Base+0xb7c>
   12510:	mov	w2, #0x0                   	// #0
   12514:	ldr	x0, [sp, #128]
   12518:	mov	x1, x0
   1251c:	bl	4f60 <mpc_conj@plt>
   12520:	ldr	w0, [sp, #96]
   12524:	str	w0, [sp, #100]
   12528:	b	12e24 <mpc_sqrt@@Base+0xb7c>
   1252c:	mov	w2, #0x0                   	// #0
   12530:	ldr	x0, [sp, #128]
   12534:	mov	x1, x0
   12538:	bl	4f60 <mpc_conj@plt>
   1253c:	b	12394 <mpc_sqrt@@Base+0xec>
   12540:	add	x19, sp, #0xf0
   12544:	ldr	x1, [x24]
   12548:	mov	x0, x19
   1254c:	bl	5440 <mpfr_init2@plt>
   12550:	mov	w2, #0x0                   	// #0
   12554:	mov	x1, x24
   12558:	mov	x0, x19
   1255c:	bl	4b80 <mpfr_neg@plt>
   12560:	ldr	w0, [sp, #100]
   12564:	cbz	w0, 125f4 <mpc_sqrt@@Base+0x34c>
   12568:	ldr	x0, [sp, #128]
   1256c:	add	x19, x0, #0x20
   12570:	ldr	w0, [sp, #160]
   12574:	asr	w2, w0, #4
   12578:	cmp	w2, #0x2
   1257c:	b.eq	125ec <mpc_sqrt@@Base+0x344>  // b.none
   12580:	cmp	w2, #0x3
   12584:	mov	w0, #0x2                   	// #2
   12588:	csel	w2, w2, w0, ne  // ne = any
   1258c:	add	x1, sp, #0xf0
   12590:	mov	x0, x19
   12594:	bl	5350 <mpfr_sqrt@plt>
   12598:	neg	w0, w0
   1259c:	str	w0, [sp, #100]
   125a0:	mov	w2, #0x0                   	// #0
   125a4:	mov	x1, x19
   125a8:	mov	x0, x19
   125ac:	bl	4b80 <mpfr_neg@plt>
   125b0:	mov	w0, #0x1                   	// #1
   125b4:	ldr	x1, [sp, #128]
   125b8:	str	w0, [x1, #8]
   125bc:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   125c0:	str	x0, [x1, #16]
   125c4:	add	x0, sp, #0xf0
   125c8:	bl	4d60 <mpfr_clear@plt>
   125cc:	ldr	w1, [sp, #100]
   125d0:	tbnz	w1, #31, 12f5c <mpc_sqrt@@Base+0xcb4>
   125d4:	cmp	w1, #0x0
   125d8:	mov	w0, #0x4                   	// #4
   125dc:	csel	w0, w1, w0, eq  // eq = none
   125e0:	str	w0, [sp, #100]
   125e4:	ldp	x19, x20, [sp, #16]
   125e8:	b	12e24 <mpc_sqrt@@Base+0xb7c>
   125ec:	mov	w2, #0x3                   	// #3
   125f0:	b	1258c <mpc_sqrt@@Base+0x2e4>
   125f4:	ldr	w0, [sp, #160]
   125f8:	asr	w2, w0, #4
   125fc:	add	x1, sp, #0xf0
   12600:	ldr	x0, [sp, #128]
   12604:	add	x0, x0, #0x20
   12608:	bl	5350 <mpfr_sqrt@plt>
   1260c:	str	w0, [sp, #100]
   12610:	b	125b0 <mpc_sqrt@@Base+0x308>
   12614:	stp	x19, x20, [sp, #16]
   12618:	stp	x21, x22, [sp, #32]
   1261c:	ldr	w0, [sp, #96]
   12620:	cbz	w0, 1269c <mpc_sqrt@@Base+0x3f4>
   12624:	stp	x25, x26, [sp, #64]
   12628:	stp	x27, x28, [sp, #80]
   1262c:	ldr	x19, [sp, #128]
   12630:	ldr	x0, [x19]
   12634:	ldr	x20, [x19, #32]
   12638:	cmp	x20, x0
   1263c:	csel	x20, x20, x0, ge  // ge = tcont
   12640:	add	x0, sp, #0xf0
   12644:	bl	4aa0 <mpfr_init@plt>
   12648:	add	x0, sp, #0xd0
   1264c:	bl	4aa0 <mpfr_init@plt>
   12650:	ldr	w0, [sp, #96]
   12654:	cmp	w0, #0x0
   12658:	b.le	127cc <mpc_sqrt@@Base+0x524>
   1265c:	ldr	w0, [sp, #160]
   12660:	and	w1, w0, #0xf
   12664:	str	w1, [sp, #116]
   12668:	ldr	x28, [x19]
   1266c:	asr	w0, w0, #4
   12670:	str	w0, [sp, #164]
   12674:	cmp	w0, #0x1
   12678:	b.eq	127b4 <mpc_sqrt@@Base+0x50c>  // b.none
   1267c:	ldr	x0, [sp, #128]
   12680:	ldr	x0, [x0, #32]
   12684:	str	x0, [sp, #144]
   12688:	mov	w25, #0x0                   	// #0
   1268c:	add	x19, sp, #0xf0
   12690:	add	x26, sp, #0xd0
   12694:	mov	w22, #0x3                   	// #3
   12698:	b	128e8 <mpc_sqrt@@Base+0x640>
   1269c:	add	x0, sp, #0xb0
   126a0:	ldp	x2, x3, [x24, #32]
   126a4:	stp	x2, x3, [sp, #176]
   126a8:	ldp	x2, x3, [x24, #48]
   126ac:	stp	x2, x3, [sp, #192]
   126b0:	mov	w3, #0x0                   	// #0
   126b4:	mov	x2, #0x1                   	// #1
   126b8:	mov	x1, x0
   126bc:	bl	5320 <mpfr_div_2ui@plt>
   126c0:	ldr	w0, [sp, #156]
   126c4:	cmp	w0, #0x0
   126c8:	b.le	12734 <mpc_sqrt@@Base+0x48c>
   126cc:	add	x19, sp, #0xb0
   126d0:	ldr	w21, [sp, #160]
   126d4:	and	w2, w21, #0xf
   126d8:	mov	x1, x19
   126dc:	ldr	x22, [sp, #128]
   126e0:	mov	x0, x22
   126e4:	bl	5350 <mpfr_sqrt@plt>
   126e8:	mov	w20, w0
   126ec:	asr	w2, w21, #4
   126f0:	mov	x1, x19
   126f4:	add	x0, x22, #0x20
   126f8:	bl	5350 <mpfr_sqrt@plt>
   126fc:	mov	w19, w0
   12700:	mov	w0, #0x2                   	// #2
   12704:	tbnz	w20, #31, 12710 <mpc_sqrt@@Base+0x468>
   12708:	cmp	w20, #0x0
   1270c:	cset	w0, ne  // ne = any
   12710:	tbnz	w19, #31, 127ac <mpc_sqrt@@Base+0x504>
   12714:	cmp	w19, #0x0
   12718:	mov	w1, #0x4                   	// #4
   1271c:	csel	w19, w19, w1, eq  // eq = none
   12720:	orr	w0, w0, w19
   12724:	str	w0, [sp, #100]
   12728:	ldp	x19, x20, [sp, #16]
   1272c:	ldp	x21, x22, [sp, #32]
   12730:	b	12e24 <mpc_sqrt@@Base+0xb7c>
   12734:	add	x19, sp, #0xb0
   12738:	mov	w2, #0x0                   	// #0
   1273c:	mov	x1, x19
   12740:	mov	x0, x19
   12744:	bl	4b80 <mpfr_neg@plt>
   12748:	ldr	w22, [sp, #160]
   1274c:	and	w2, w22, #0xf
   12750:	mov	x1, x19
   12754:	ldr	x19, [sp, #128]
   12758:	mov	x0, x19
   1275c:	bl	5350 <mpfr_sqrt@plt>
   12760:	mov	w20, w0
   12764:	add	x21, x19, #0x20
   12768:	asr	w2, w22, #4
   1276c:	cmp	w2, #0x2
   12770:	b.eq	127a4 <mpc_sqrt@@Base+0x4fc>  // b.none
   12774:	cmp	w2, #0x3
   12778:	mov	w0, #0x2                   	// #2
   1277c:	csel	w2, w2, w0, ne  // ne = any
   12780:	add	x1, sp, #0xb0
   12784:	mov	x0, x21
   12788:	bl	5350 <mpfr_sqrt@plt>
   1278c:	neg	w19, w0
   12790:	mov	w2, #0x0                   	// #0
   12794:	mov	x1, x21
   12798:	mov	x0, x21
   1279c:	bl	4b80 <mpfr_neg@plt>
   127a0:	b	12700 <mpc_sqrt@@Base+0x458>
   127a4:	mov	w2, #0x3                   	// #3
   127a8:	b	12780 <mpc_sqrt@@Base+0x4d8>
   127ac:	mov	w19, #0x8                   	// #8
   127b0:	b	12720 <mpc_sqrt@@Base+0x478>
   127b4:	ldr	w0, [sp, #156]
   127b8:	cmp	w0, #0x0
   127bc:	cset	w0, gt
   127c0:	add	w0, w0, #0x2
   127c4:	str	w0, [sp, #164]
   127c8:	b	1267c <mpc_sqrt@@Base+0x3d4>
   127cc:	ldr	x0, [sp, #128]
   127d0:	ldr	x28, [x0, #32]
   127d4:	ldr	x0, [x0]
   127d8:	str	x0, [sp, #144]
   127dc:	ldr	w0, [sp, #156]
   127e0:	cmp	w0, #0x0
   127e4:	b.le	1280c <mpc_sqrt@@Base+0x564>
   127e8:	ldr	w0, [sp, #160]
   127ec:	asr	w1, w0, #4
   127f0:	str	w1, [sp, #116]
   127f4:	and	w1, w0, #0xf
   127f8:	cmp	w1, #0x1
   127fc:	mov	w0, #0x3                   	// #3
   12800:	csel	w0, w1, w0, ne  // ne = any
   12804:	str	w0, [sp, #164]
   12808:	b	12688 <mpc_sqrt@@Base+0x3e0>
   1280c:	ldr	w0, [sp, #160]
   12810:	asr	w1, w0, #4
   12814:	cmp	w1, #0x2
   12818:	b.eq	12858 <mpc_sqrt@@Base+0x5b0>  // b.none
   1281c:	cmp	w1, #0x3
   12820:	mov	w0, #0x2                   	// #2
   12824:	csel	w0, w1, w0, ne  // ne = any
   12828:	str	w0, [sp, #116]
   1282c:	ldr	w2, [sp, #160]
   12830:	and	w1, w2, #0xf
   12834:	cmp	w1, #0x2
   12838:	b.eq	12864 <mpc_sqrt@@Base+0x5bc>  // b.none
   1283c:	mov	w0, #0xd                   	// #13
   12840:	and	w0, w2, w0
   12844:	cmp	w0, #0x1
   12848:	mov	w0, #0x2                   	// #2
   1284c:	csel	w0, w1, w0, ne  // ne = any
   12850:	str	w0, [sp, #164]
   12854:	b	12688 <mpc_sqrt@@Base+0x3e0>
   12858:	mov	w0, #0x3                   	// #3
   1285c:	str	w0, [sp, #116]
   12860:	b	1282c <mpc_sqrt@@Base+0x584>
   12864:	mov	w0, #0x3                   	// #3
   12868:	str	w0, [sp, #164]
   1286c:	b	12688 <mpc_sqrt@@Base+0x3e0>
   12870:	mov	x0, #0x2                   	// #2
   12874:	sdiv	x0, x20, x0
   12878:	b	12900 <mpc_sqrt@@Base+0x658>
   1287c:	mov	w3, w22
   12880:	ldr	x2, [sp, #104]
   12884:	mov	x1, x19
   12888:	mov	x0, x19
   1288c:	bl	4a60 <mpfr_sub@plt>
   12890:	orr	w21, w21, w0
   12894:	b	12950 <mpc_sqrt@@Base+0x6a8>
   12898:	ldr	w0, [sp, #116]
   1289c:	cmp	w0, #0x0
   128a0:	cinc	x4, x28, eq  // eq = none
   128a4:	mov	w3, #0x2                   	// #2
   128a8:	mov	w2, w22
   128ac:	sub	x1, x20, #0x2
   128b0:	mov	x0, x19
   128b4:	bl	5450 <mpfr_can_round@plt>
   128b8:	mov	w23, w0
   128bc:	b	128dc <mpc_sqrt@@Base+0x634>
   128c0:	mov	x4, x28
   128c4:	mov	w3, w22
   128c8:	mov	w2, w22
   128cc:	sub	x1, x20, #0x2
   128d0:	mov	x0, x19
   128d4:	bl	5450 <mpfr_can_round@plt>
   128d8:	mov	w23, w0
   128dc:	cmp	w21, #0x0
   128e0:	ccmp	w23, #0x0, #0x0, ne  // ne = any
   128e4:	b.ne	129b8 <mpc_sqrt@@Base+0x710>  // b.any
   128e8:	add	w25, w25, #0x1
   128ec:	cmp	w25, #0x2
   128f0:	b.gt	12870 <mpc_sqrt@@Base+0x5c8>
   128f4:	mov	x0, x20
   128f8:	bl	4d20 <mpc_ceil_log2@plt>
   128fc:	add	x0, x0, #0x4
   12900:	add	x20, x20, x0
   12904:	mov	x1, x20
   12908:	mov	x0, x19
   1290c:	bl	4c80 <mpfr_set_prec@plt>
   12910:	mov	x1, x20
   12914:	mov	x0, x26
   12918:	bl	4c80 <mpfr_set_prec@plt>
   1291c:	mov	w2, w22
   12920:	mov	x1, x24
   12924:	mov	x0, x19
   12928:	bl	51a0 <mpc_abs@plt>
   1292c:	mov	w21, w0
   12930:	ldr	w0, [sp, #96]
   12934:	tbnz	w0, #31, 1287c <mpc_sqrt@@Base+0x5d4>
   12938:	mov	w3, w22
   1293c:	ldr	x2, [sp, #104]
   12940:	mov	x1, x19
   12944:	mov	x0, x19
   12948:	bl	4e60 <mpfr_add@plt>
   1294c:	orr	w21, w21, w0
   12950:	mov	w3, w22
   12954:	mov	x2, #0x1                   	// #1
   12958:	mov	x1, x19
   1295c:	mov	x0, x19
   12960:	bl	5320 <mpfr_div_2ui@plt>
   12964:	orr	w21, w21, w0
   12968:	mov	w2, w22
   1296c:	mov	x1, x19
   12970:	mov	x0, x19
   12974:	bl	5350 <mpfr_sqrt@plt>
   12978:	orr	w21, w21, w0
   1297c:	mov	x0, x19
   12980:	bl	5390 <mpfr_min_prec@plt>
   12984:	str	x0, [sp, #120]
   12988:	cmp	x0, x28
   1298c:	b.gt	12898 <mpc_sqrt@@Base+0x5f0>
   12990:	ldr	w0, [sp, #116]
   12994:	cbnz	w0, 128c0 <mpc_sqrt@@Base+0x618>
   12998:	mov	x4, x28
   1299c:	mov	w3, #0x0                   	// #0
   129a0:	mov	w2, w22
   129a4:	sub	x1, x20, #0x2
   129a8:	mov	x0, x19
   129ac:	bl	5450 <mpfr_can_round@plt>
   129b0:	mov	w23, w0
   129b4:	b	128dc <mpc_sqrt@@Base+0x634>
   129b8:	ldr	w3, [sp, #112]
   129bc:	mov	x2, x19
   129c0:	ldr	x1, [sp, #136]
   129c4:	mov	x0, x26
   129c8:	bl	5150 <mpfr_div@plt>
   129cc:	mov	w27, w0
   129d0:	cmp	w21, #0x0
   129d4:	cset	w0, ne  // ne = any
   129d8:	str	w0, [sp, #152]
   129dc:	cmp	w27, #0x0
   129e0:	ccmp	w0, #0x0, #0x4, eq  // eq = none
   129e4:	b.eq	129f8 <mpc_sqrt@@Base+0x750>  // b.none
   129e8:	mov	w27, #0x1                   	// #1
   129ec:	ldr	w0, [sp, #100]
   129f0:	cmp	w0, #0x0
   129f4:	cneg	w27, w27, ne  // ne = any
   129f8:	ldr	w3, [sp, #112]
   129fc:	mov	x2, #0x1                   	// #1
   12a00:	mov	x1, x26
   12a04:	mov	x0, x26
   12a08:	bl	5320 <mpfr_div_2ui@plt>
   12a0c:	orr	w27, w27, w0
   12a10:	mov	x0, x26
   12a14:	bl	5390 <mpfr_min_prec@plt>
   12a18:	str	x0, [sp, #168]
   12a1c:	ldr	x1, [sp, #144]
   12a20:	cmp	x0, x1
   12a24:	b.gt	12ac0 <mpc_sqrt@@Base+0x818>
   12a28:	ldr	w0, [sp, #164]
   12a2c:	cbnz	w0, 12ae4 <mpc_sqrt@@Base+0x83c>
   12a30:	ldr	x4, [sp, #144]
   12a34:	mov	w3, #0x0                   	// #0
   12a38:	ldr	w2, [sp, #112]
   12a3c:	sub	x1, x20, #0x3
   12a40:	mov	x0, x26
   12a44:	bl	5450 <mpfr_can_round@plt>
   12a48:	cmp	w23, #0x0
   12a4c:	ldr	w1, [sp, #152]
   12a50:	ccmp	w1, #0x0, #0x4, eq  // eq = none
   12a54:	b.ne	128e8 <mpc_sqrt@@Base+0x640>  // b.any
   12a58:	cmp	w27, #0x0
   12a5c:	cset	w23, ne  // ne = any
   12a60:	cmp	w0, #0x0
   12a64:	ccmp	w23, #0x0, #0x4, eq  // eq = none
   12a68:	b.ne	128e8 <mpc_sqrt@@Base+0x640>  // b.any
   12a6c:	ldr	w0, [sp, #96]
   12a70:	cmp	w0, #0x0
   12a74:	b.gt	12b00 <mpc_sqrt@@Base+0x858>
   12a78:	ldr	w0, [sp, #156]
   12a7c:	cmp	w0, #0x0
   12a80:	b.le	12be0 <mpc_sqrt@@Base+0x938>
   12a84:	ldr	w3, [sp, #216]
   12a88:	ldr	w19, [sp, #160]
   12a8c:	and	w2, w19, #0xf
   12a90:	add	x1, sp, #0xd0
   12a94:	ldr	x22, [sp, #128]
   12a98:	mov	x0, x22
   12a9c:	bl	51d0 <mpfr_set4@plt>
   12aa0:	mov	w20, w0
   12aa4:	ldr	w3, [sp, #248]
   12aa8:	asr	w2, w19, #4
   12aac:	add	x1, sp, #0xf0
   12ab0:	add	x0, x22, #0x20
   12ab4:	bl	51d0 <mpfr_set4@plt>
   12ab8:	mov	w19, w0
   12abc:	b	12b38 <mpc_sqrt@@Base+0x890>
   12ac0:	ldr	w0, [sp, #164]
   12ac4:	cmp	w0, #0x0
   12ac8:	cinc	x4, x1, eq  // eq = none
   12acc:	mov	w3, #0x1                   	// #1
   12ad0:	ldr	w2, [sp, #112]
   12ad4:	sub	x1, x20, #0x3
   12ad8:	mov	x0, x26
   12adc:	bl	5450 <mpfr_can_round@plt>
   12ae0:	b	12a48 <mpc_sqrt@@Base+0x7a0>
   12ae4:	ldr	x4, [sp, #144]
   12ae8:	ldr	w2, [sp, #112]
   12aec:	mov	w3, w2
   12af0:	sub	x1, x20, #0x3
   12af4:	mov	x0, x26
   12af8:	bl	5450 <mpfr_can_round@plt>
   12afc:	b	12a48 <mpc_sqrt@@Base+0x7a0>
   12b00:	ldr	w3, [sp, #248]
   12b04:	ldr	w19, [sp, #160]
   12b08:	and	w2, w19, #0xf
   12b0c:	add	x1, sp, #0xf0
   12b10:	ldr	x22, [sp, #128]
   12b14:	mov	x0, x22
   12b18:	bl	51d0 <mpfr_set4@plt>
   12b1c:	mov	w20, w0
   12b20:	ldr	w3, [sp, #216]
   12b24:	asr	w2, w19, #4
   12b28:	add	x1, sp, #0xd0
   12b2c:	add	x0, x22, #0x20
   12b30:	bl	51d0 <mpfr_set4@plt>
   12b34:	mov	w19, w0
   12b38:	ldr	x0, [sp, #168]
   12b3c:	ldr	x1, [sp, #144]
   12b40:	cmp	x0, x1
   12b44:	cset	w22, le
   12b48:	ldr	w0, [sp, #152]
   12b4c:	cmp	w0, #0x0
   12b50:	ldr	x0, [sp, #120]
   12b54:	ccmp	x0, x28, #0x0, ne  // ne = any
   12b58:	b.gt	12b74 <mpc_sqrt@@Base+0x8cc>
   12b5c:	ldr	w0, [sp, #116]
   12b60:	cbnz	w0, 12c24 <mpc_sqrt@@Base+0x97c>
   12b64:	ldr	w0, [sp, #96]
   12b68:	cmp	w0, #0x0
   12b6c:	b.le	12c14 <mpc_sqrt@@Base+0x96c>
   12b70:	mov	w20, w21
   12b74:	cmp	w22, #0x0
   12b78:	ccmp	w23, #0x0, #0x4, ne  // ne = any
   12b7c:	b.eq	12ddc <mpc_sqrt@@Base+0xb34>  // b.none
   12b80:	ldr	w0, [sp, #164]
   12b84:	cbz	w0, 12dcc <mpc_sqrt@@Base+0xb24>
   12b88:	ldr	w0, [sp, #96]
   12b8c:	cmp	w0, #0x0
   12b90:	b.le	12e6c <mpc_sqrt@@Base+0xbc4>
   12b94:	mov	w19, w27
   12b98:	ldr	w0, [sp, #112]
   12b9c:	ldr	w1, [sp, #164]
   12ba0:	cmp	w0, w1
   12ba4:	b.eq	12ddc <mpc_sqrt@@Base+0xb34>  // b.none
   12ba8:	neg	w19, w27
   12bac:	ldr	x0, [sp, #128]
   12bb0:	ldr	x0, [x0, #48]
   12bb4:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   12bb8:	cmp	x0, x1
   12bbc:	b.ge	12e4c <mpc_sqrt@@Base+0xba4>  // b.tcont
   12bc0:	mov	x1, #0x2                   	// #2
   12bc4:	movk	x1, #0x8000, lsl #48
   12bc8:	cmp	x0, x1
   12bcc:	b.eq	12e44 <mpc_sqrt@@Base+0xb9c>  // b.none
   12bd0:	ldr	x0, [sp, #128]
   12bd4:	add	x0, x0, #0x20
   12bd8:	bl	4e00 <mpfr_nextabove@plt>
   12bdc:	b	12ddc <mpc_sqrt@@Base+0xb34>
   12be0:	ldr	w19, [sp, #160]
   12be4:	and	w2, w19, #0xf
   12be8:	add	x1, sp, #0xd0
   12bec:	ldr	x22, [sp, #128]
   12bf0:	mov	x0, x22
   12bf4:	bl	4b80 <mpfr_neg@plt>
   12bf8:	mov	w20, w0
   12bfc:	asr	w2, w19, #4
   12c00:	add	x1, sp, #0xf0
   12c04:	add	x0, x22, #0x20
   12c08:	bl	4b80 <mpfr_neg@plt>
   12c0c:	mov	w19, w0
   12c10:	b	12b38 <mpc_sqrt@@Base+0x890>
   12c14:	ldr	w0, [sp, #156]
   12c18:	cmp	w0, #0x0
   12c1c:	cneg	w19, w21, le
   12c20:	b	12b74 <mpc_sqrt@@Base+0x8cc>
   12c24:	ldr	w0, [sp, #96]
   12c28:	cmp	w0, #0x0
   12c2c:	b.le	12cd8 <mpc_sqrt@@Base+0xa30>
   12c30:	ldr	w0, [sp, #116]
   12c34:	cmp	w0, #0x2
   12c38:	b.eq	12c64 <mpc_sqrt@@Base+0x9bc>  // b.none
   12c3c:	cmp	w22, #0x0
   12c40:	ccmp	w23, #0x0, #0x4, ne  // ne = any
   12c44:	mov	w20, #0xffffffff            	// #-1
   12c48:	b.ne	12f70 <mpc_sqrt@@Base+0xcc8>  // b.any
   12c4c:	add	x0, sp, #0xf0
   12c50:	bl	4d60 <mpfr_clear@plt>
   12c54:	add	x0, sp, #0xd0
   12c58:	bl	4d60 <mpfr_clear@plt>
   12c5c:	mov	w0, #0x2                   	// #2
   12c60:	b	12dfc <mpc_sqrt@@Base+0xb54>
   12c64:	ldr	x0, [sp, #128]
   12c68:	ldr	x0, [x0, #16]
   12c6c:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   12c70:	cmp	x0, x1
   12c74:	b.ge	12cbc <mpc_sqrt@@Base+0xa14>  // b.tcont
   12c78:	mov	x1, #0x2                   	// #2
   12c7c:	movk	x1, #0x8000, lsl #48
   12c80:	cmp	x0, x1
   12c84:	b.eq	12cb4 <mpc_sqrt@@Base+0xa0c>  // b.none
   12c88:	ldr	x0, [sp, #128]
   12c8c:	bl	4bb0 <mpfr_nextbelow@plt>
   12c90:	cmp	w22, #0x0
   12c94:	ccmp	w23, #0x0, #0x4, ne  // ne = any
   12c98:	b.ne	12f6c <mpc_sqrt@@Base+0xcc4>  // b.any
   12c9c:	add	x0, sp, #0xf0
   12ca0:	bl	4d60 <mpfr_clear@plt>
   12ca4:	add	x0, sp, #0xd0
   12ca8:	bl	4d60 <mpfr_clear@plt>
   12cac:	mov	w20, #0x1                   	// #1
   12cb0:	b	12df4 <mpc_sqrt@@Base+0xb4c>
   12cb4:	bl	4b00 <mpfr_set_erangeflag@plt>
   12cb8:	b	12c88 <mpc_sqrt@@Base+0x9e0>
   12cbc:	ldr	x0, [sp, #128]
   12cc0:	ldr	w0, [x0, #8]
   12cc4:	cmp	w0, #0x0
   12cc8:	b.le	12c88 <mpc_sqrt@@Base+0x9e0>
   12ccc:	ldr	x0, [sp, #128]
   12cd0:	bl	4e00 <mpfr_nextabove@plt>
   12cd4:	b	12c90 <mpc_sqrt@@Base+0x9e8>
   12cd8:	ldr	w0, [sp, #156]
   12cdc:	cmp	w0, #0x0
   12ce0:	b.le	12d58 <mpc_sqrt@@Base+0xab0>
   12ce4:	mov	w19, #0xffffffff            	// #-1
   12ce8:	ldr	w0, [sp, #116]
   12cec:	cmp	w0, #0x2
   12cf0:	b.ne	12b74 <mpc_sqrt@@Base+0x8cc>  // b.any
   12cf4:	ldr	x0, [sp, #128]
   12cf8:	ldr	x0, [x0, #48]
   12cfc:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   12d00:	cmp	x0, x1
   12d04:	b.ge	12d34 <mpc_sqrt@@Base+0xa8c>  // b.tcont
   12d08:	mov	x1, #0x2                   	// #2
   12d0c:	movk	x1, #0x8000, lsl #48
   12d10:	cmp	x0, x1
   12d14:	b.eq	12d2c <mpc_sqrt@@Base+0xa84>  // b.none
   12d18:	ldr	x0, [sp, #128]
   12d1c:	add	x0, x0, #0x20
   12d20:	bl	4bb0 <mpfr_nextbelow@plt>
   12d24:	mov	w19, #0x1                   	// #1
   12d28:	b	12b74 <mpc_sqrt@@Base+0x8cc>
   12d2c:	bl	4b00 <mpfr_set_erangeflag@plt>
   12d30:	b	12d18 <mpc_sqrt@@Base+0xa70>
   12d34:	ldr	x0, [sp, #128]
   12d38:	ldr	w0, [x0, #40]
   12d3c:	cmp	w0, #0x0
   12d40:	b.le	12d18 <mpc_sqrt@@Base+0xa70>
   12d44:	ldr	x0, [sp, #128]
   12d48:	add	x0, x0, #0x20
   12d4c:	bl	4e00 <mpfr_nextabove@plt>
   12d50:	mov	w19, #0x1                   	// #1
   12d54:	b	12b74 <mpc_sqrt@@Base+0x8cc>
   12d58:	mov	w19, #0x1                   	// #1
   12d5c:	ldr	w0, [sp, #116]
   12d60:	cmp	w0, #0x2
   12d64:	b.ne	12b74 <mpc_sqrt@@Base+0x8cc>  // b.any
   12d68:	ldr	x0, [sp, #128]
   12d6c:	ldr	x0, [x0, #48]
   12d70:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   12d74:	cmp	x0, x1
   12d78:	b.ge	12da8 <mpc_sqrt@@Base+0xb00>  // b.tcont
   12d7c:	mov	x1, #0x2                   	// #2
   12d80:	movk	x1, #0x8000, lsl #48
   12d84:	cmp	x0, x1
   12d88:	b.eq	12da0 <mpc_sqrt@@Base+0xaf8>  // b.none
   12d8c:	ldr	x0, [sp, #128]
   12d90:	add	x0, x0, #0x20
   12d94:	bl	4bb0 <mpfr_nextbelow@plt>
   12d98:	mov	w19, #0xffffffff            	// #-1
   12d9c:	b	12b74 <mpc_sqrt@@Base+0x8cc>
   12da0:	bl	4b00 <mpfr_set_erangeflag@plt>
   12da4:	b	12d8c <mpc_sqrt@@Base+0xae4>
   12da8:	ldr	x0, [sp, #128]
   12dac:	ldr	w0, [x0, #40]
   12db0:	cmp	w0, #0x0
   12db4:	b.le	12d8c <mpc_sqrt@@Base+0xae4>
   12db8:	ldr	x0, [sp, #128]
   12dbc:	add	x0, x0, #0x20
   12dc0:	bl	4e00 <mpfr_nextabove@plt>
   12dc4:	mov	w19, #0xffffffff            	// #-1
   12dc8:	b	12b74 <mpc_sqrt@@Base+0x8cc>
   12dcc:	ldr	w0, [sp, #96]
   12dd0:	cmp	w0, #0x0
   12dd4:	b.le	12e34 <mpc_sqrt@@Base+0xb8c>
   12dd8:	mov	w19, w27
   12ddc:	add	x0, sp, #0xf0
   12de0:	bl	4d60 <mpfr_clear@plt>
   12de4:	add	x0, sp, #0xd0
   12de8:	bl	4d60 <mpfr_clear@plt>
   12dec:	mov	w0, #0x2                   	// #2
   12df0:	tbnz	w20, #31, 12dfc <mpc_sqrt@@Base+0xb54>
   12df4:	cmp	w20, #0x0
   12df8:	cset	w0, ne  // ne = any
   12dfc:	tbnz	w19, #31, 12f54 <mpc_sqrt@@Base+0xcac>
   12e00:	cmp	w19, #0x0
   12e04:	mov	w1, #0x4                   	// #4
   12e08:	csel	w19, w19, w1, eq  // eq = none
   12e0c:	orr	w0, w0, w19
   12e10:	str	w0, [sp, #100]
   12e14:	ldp	x19, x20, [sp, #16]
   12e18:	ldp	x21, x22, [sp, #32]
   12e1c:	ldp	x25, x26, [sp, #64]
   12e20:	ldp	x27, x28, [sp, #80]
   12e24:	ldr	w0, [sp, #100]
   12e28:	ldp	x23, x24, [sp, #48]
   12e2c:	ldp	x29, x30, [sp], #272
   12e30:	ret
   12e34:	ldr	w0, [sp, #156]
   12e38:	cmp	w0, #0x0
   12e3c:	cneg	w20, w27, le
   12e40:	b	12ddc <mpc_sqrt@@Base+0xb34>
   12e44:	bl	4b00 <mpfr_set_erangeflag@plt>
   12e48:	b	12bd0 <mpc_sqrt@@Base+0x928>
   12e4c:	ldr	x0, [sp, #128]
   12e50:	ldr	w0, [x0, #40]
   12e54:	cmp	w0, #0x0
   12e58:	b.le	12bd0 <mpc_sqrt@@Base+0x928>
   12e5c:	ldr	x0, [sp, #128]
   12e60:	add	x0, x0, #0x20
   12e64:	bl	4bb0 <mpfr_nextbelow@plt>
   12e68:	b	12ddc <mpc_sqrt@@Base+0xb34>
   12e6c:	ldr	w0, [sp, #156]
   12e70:	cmp	w0, #0x0
   12e74:	b.le	12ee4 <mpc_sqrt@@Base+0xc3c>
   12e78:	mov	w20, w27
   12e7c:	ldr	w0, [sp, #112]
   12e80:	ldr	w1, [sp, #164]
   12e84:	cmp	w0, w1
   12e88:	b.eq	12ddc <mpc_sqrt@@Base+0xb34>  // b.none
   12e8c:	neg	w20, w27
   12e90:	ldr	x0, [sp, #128]
   12e94:	ldr	x0, [x0, #16]
   12e98:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   12e9c:	cmp	x0, x1
   12ea0:	b.ge	12ec8 <mpc_sqrt@@Base+0xc20>  // b.tcont
   12ea4:	mov	x1, #0x2                   	// #2
   12ea8:	movk	x1, #0x8000, lsl #48
   12eac:	cmp	x0, x1
   12eb0:	b.eq	12ec0 <mpc_sqrt@@Base+0xc18>  // b.none
   12eb4:	ldr	x0, [sp, #128]
   12eb8:	bl	4e00 <mpfr_nextabove@plt>
   12ebc:	b	12ddc <mpc_sqrt@@Base+0xb34>
   12ec0:	bl	4b00 <mpfr_set_erangeflag@plt>
   12ec4:	b	12eb4 <mpc_sqrt@@Base+0xc0c>
   12ec8:	ldr	x0, [sp, #128]
   12ecc:	ldr	w0, [x0, #8]
   12ed0:	cmp	w0, #0x0
   12ed4:	b.le	12eb4 <mpc_sqrt@@Base+0xc0c>
   12ed8:	ldr	x0, [sp, #128]
   12edc:	bl	4bb0 <mpfr_nextbelow@plt>
   12ee0:	b	12ddc <mpc_sqrt@@Base+0xb34>
   12ee4:	ldr	w0, [sp, #112]
   12ee8:	ldr	w1, [sp, #164]
   12eec:	neg	w20, w27
   12ef0:	cmp	w0, w1
   12ef4:	b.eq	12ddc <mpc_sqrt@@Base+0xb34>  // b.none
   12ef8:	ldr	x0, [sp, #128]
   12efc:	ldr	x0, [x0, #16]
   12f00:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   12f04:	cmp	x0, x1
   12f08:	b.ge	12f34 <mpc_sqrt@@Base+0xc8c>  // b.tcont
   12f0c:	mov	x1, #0x2                   	// #2
   12f10:	movk	x1, #0x8000, lsl #48
   12f14:	cmp	x0, x1
   12f18:	b.eq	12f2c <mpc_sqrt@@Base+0xc84>  // b.none
   12f1c:	ldr	x0, [sp, #128]
   12f20:	bl	4e00 <mpfr_nextabove@plt>
   12f24:	mov	w20, w27
   12f28:	b	12ddc <mpc_sqrt@@Base+0xb34>
   12f2c:	bl	4b00 <mpfr_set_erangeflag@plt>
   12f30:	b	12f1c <mpc_sqrt@@Base+0xc74>
   12f34:	ldr	x0, [sp, #128]
   12f38:	ldr	w0, [x0, #8]
   12f3c:	cmp	w0, #0x0
   12f40:	b.le	12f1c <mpc_sqrt@@Base+0xc74>
   12f44:	ldr	x0, [sp, #128]
   12f48:	bl	4bb0 <mpfr_nextbelow@plt>
   12f4c:	mov	w20, w27
   12f50:	b	12ddc <mpc_sqrt@@Base+0xb34>
   12f54:	mov	w19, #0x8                   	// #8
   12f58:	b	12e0c <mpc_sqrt@@Base+0xb64>
   12f5c:	mov	w0, #0x8                   	// #8
   12f60:	str	w0, [sp, #100]
   12f64:	ldp	x19, x20, [sp, #16]
   12f68:	b	12e24 <mpc_sqrt@@Base+0xb7c>
   12f6c:	mov	w20, #0x1                   	// #1
   12f70:	ldr	w0, [sp, #164]
   12f74:	cbnz	w0, 12b88 <mpc_sqrt@@Base+0x8e0>
   12f78:	mov	w19, w27
   12f7c:	b	12ddc <mpc_sqrt@@Base+0xb34>
   12f80:	ldp	x19, x20, [sp, #16]
   12f84:	b	12e24 <mpc_sqrt@@Base+0xb7c>
   12f88:	stp	x29, x30, [sp, #-32]!
   12f8c:	mov	x29, sp
   12f90:	str	x19, [sp, #16]
   12f94:	mov	x19, x0
   12f98:	bl	5170 <__ctype_b_loc@plt>
   12f9c:	ldr	x1, [x19]
   12fa0:	ldrb	w3, [x1]
   12fa4:	ldr	x2, [x0]
   12fa8:	ldrh	w2, [x2, x3, lsl #1]
   12fac:	tbz	w2, #13, 12fbc <mpc_sqrt@@Base+0xd14>
   12fb0:	add	x1, x1, #0x1
   12fb4:	str	x1, [x19]
   12fb8:	b	12f9c <mpc_sqrt@@Base+0xcf4>
   12fbc:	ldr	x19, [sp, #16]
   12fc0:	ldp	x29, x30, [sp], #32
   12fc4:	ret

0000000000012fc8 <mpc_strtoc@@Base>:
   12fc8:	stp	x29, x30, [sp, #-96]!
   12fcc:	mov	x29, sp
   12fd0:	stp	x19, x20, [sp, #16]
   12fd4:	stp	x21, x22, [sp, #32]
   12fd8:	mov	x19, x0
   12fdc:	mov	x21, x1
   12fe0:	mov	x22, x2
   12fe4:	cmp	w3, #0x24
   12fe8:	ccmp	w3, #0x1, #0x4, le
   12fec:	ccmp	x1, #0x0, #0x4, ne  // ne = any
   12ff0:	b.eq	1317c <mpc_strtoc@@Base+0x1b4>  // b.none
   12ff4:	stp	x23, x24, [sp, #48]
   12ff8:	mov	w20, w3
   12ffc:	mov	w23, w4
   13000:	str	x1, [sp, #88]
   13004:	add	x0, sp, #0x58
   13008:	bl	12f88 <mpc_sqrt@@Base+0xce0>
   1300c:	ldr	x1, [sp, #88]
   13010:	ldrb	w0, [x1]
   13014:	cmp	w0, #0x28
   13018:	b.eq	130a0 <mpc_strtoc@@Base+0xd8>  // b.none
   1301c:	and	w4, w23, #0xf
   13020:	mov	w3, w20
   13024:	add	x2, sp, #0x50
   13028:	mov	x0, x19
   1302c:	bl	4ac0 <mpfr_strtofr@plt>
   13030:	mov	w24, w0
   13034:	ldr	x0, [sp, #80]
   13038:	ldr	x1, [sp, #88]
   1303c:	cmp	x0, x1
   13040:	b.eq	13178 <mpc_strtoc@@Base+0x1b0>  // b.none
   13044:	str	x0, [sp, #88]
   13048:	mov	w0, #0x1                   	// #1
   1304c:	str	w0, [x19, #40]
   13050:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   13054:	str	x0, [x19, #48]
   13058:	mov	w20, #0x0                   	// #0
   1305c:	cbz	x22, 13068 <mpc_strtoc@@Base+0xa0>
   13060:	ldr	x0, [sp, #88]
   13064:	str	x0, [x22]
   13068:	mov	w1, #0x2                   	// #2
   1306c:	tbnz	w24, #31, 13078 <mpc_strtoc@@Base+0xb0>
   13070:	cmp	w24, #0x0
   13074:	cset	w1, ne  // ne = any
   13078:	tbnz	w20, #31, 13158 <mpc_strtoc@@Base+0x190>
   1307c:	cmp	w20, #0x0
   13080:	mov	w0, #0x4                   	// #4
   13084:	csel	w20, w20, w0, eq  // eq = none
   13088:	orr	w0, w1, w20
   1308c:	ldp	x23, x24, [sp, #48]
   13090:	ldp	x19, x20, [sp, #16]
   13094:	ldp	x21, x22, [sp, #32]
   13098:	ldp	x29, x30, [sp], #96
   1309c:	ret
   130a0:	str	x25, [sp, #64]
   130a4:	add	x1, x1, #0x1
   130a8:	str	x1, [sp, #88]
   130ac:	and	w4, w23, #0xf
   130b0:	mov	w3, w20
   130b4:	add	x2, sp, #0x50
   130b8:	mov	x0, x19
   130bc:	bl	4ac0 <mpfr_strtofr@plt>
   130c0:	mov	w24, w0
   130c4:	ldr	x25, [sp, #80]
   130c8:	ldr	x0, [sp, #88]
   130cc:	cmp	x25, x0
   130d0:	b.eq	1314c <mpc_strtoc@@Base+0x184>  // b.none
   130d4:	str	x25, [sp, #88]
   130d8:	bl	5170 <__ctype_b_loc@plt>
   130dc:	ldrb	w1, [x25]
   130e0:	ldr	x0, [x0]
   130e4:	ldrh	w0, [x0, x1, lsl #1]
   130e8:	tbz	w0, #13, 1319c <mpc_strtoc@@Base+0x1d4>
   130ec:	add	x0, sp, #0x58
   130f0:	bl	12f88 <mpc_sqrt@@Base+0xce0>
   130f4:	asr	w4, w23, #4
   130f8:	mov	w3, w20
   130fc:	add	x2, sp, #0x50
   13100:	ldr	x1, [sp, #88]
   13104:	add	x0, x19, #0x20
   13108:	bl	4ac0 <mpfr_strtofr@plt>
   1310c:	mov	w20, w0
   13110:	ldr	x0, [sp, #80]
   13114:	ldr	x1, [sp, #88]
   13118:	cmp	x0, x1
   1311c:	b.eq	13160 <mpc_strtoc@@Base+0x198>  // b.none
   13120:	str	x0, [sp, #88]
   13124:	add	x0, sp, #0x58
   13128:	bl	12f88 <mpc_sqrt@@Base+0xce0>
   1312c:	ldr	x1, [sp, #88]
   13130:	ldrb	w0, [x1]
   13134:	cmp	w0, #0x29
   13138:	b.ne	1316c <mpc_strtoc@@Base+0x1a4>  // b.any
   1313c:	add	x1, x1, #0x1
   13140:	str	x1, [sp, #88]
   13144:	ldr	x25, [sp, #64]
   13148:	b	1305c <mpc_strtoc@@Base+0x94>
   1314c:	ldp	x23, x24, [sp, #48]
   13150:	ldr	x25, [sp, #64]
   13154:	b	1317c <mpc_strtoc@@Base+0x1b4>
   13158:	mov	w20, #0x8                   	// #8
   1315c:	b	13088 <mpc_strtoc@@Base+0xc0>
   13160:	ldp	x23, x24, [sp, #48]
   13164:	ldr	x25, [sp, #64]
   13168:	b	1317c <mpc_strtoc@@Base+0x1b4>
   1316c:	ldp	x23, x24, [sp, #48]
   13170:	ldr	x25, [sp, #64]
   13174:	b	1317c <mpc_strtoc@@Base+0x1b4>
   13178:	ldp	x23, x24, [sp, #48]
   1317c:	cbz	x22, 13184 <mpc_strtoc@@Base+0x1bc>
   13180:	str	x21, [x22]
   13184:	mov	x0, x19
   13188:	bl	4a40 <mpfr_set_nan@plt>
   1318c:	add	x0, x19, #0x20
   13190:	bl	4a40 <mpfr_set_nan@plt>
   13194:	mov	w0, #0xffffffff            	// #-1
   13198:	b	13090 <mpc_strtoc@@Base+0xc8>
   1319c:	ldp	x23, x24, [sp, #48]
   131a0:	ldr	x25, [sp, #64]
   131a4:	b	1317c <mpc_strtoc@@Base+0x1b4>

00000000000131a8 <mpc_sub@@Base>:
   131a8:	stp	x29, x30, [sp, #-64]!
   131ac:	mov	x29, sp
   131b0:	stp	x19, x20, [sp, #16]
   131b4:	stp	x21, x22, [sp, #32]
   131b8:	str	x23, [sp, #48]
   131bc:	mov	x21, x0
   131c0:	mov	x22, x1
   131c4:	mov	x23, x2
   131c8:	mov	w19, w3
   131cc:	and	w3, w3, #0xf
   131d0:	bl	4a60 <mpfr_sub@plt>
   131d4:	mov	w20, w0
   131d8:	asr	w3, w19, #4
   131dc:	add	x2, x23, #0x20
   131e0:	add	x1, x22, #0x20
   131e4:	add	x0, x21, #0x20
   131e8:	bl	4a60 <mpfr_sub@plt>
   131ec:	mov	w1, #0x2                   	// #2
   131f0:	tbnz	w20, #31, 131fc <mpc_sub@@Base+0x54>
   131f4:	cmp	w20, #0x0
   131f8:	cset	w1, ne  // ne = any
   131fc:	tbnz	w0, #31, 13224 <mpc_sub@@Base+0x7c>
   13200:	cmp	w0, #0x0
   13204:	mov	w2, #0x4                   	// #4
   13208:	csel	w0, w0, w2, eq  // eq = none
   1320c:	orr	w0, w1, w0
   13210:	ldp	x19, x20, [sp, #16]
   13214:	ldp	x21, x22, [sp, #32]
   13218:	ldr	x23, [sp, #48]
   1321c:	ldp	x29, x30, [sp], #64
   13220:	ret
   13224:	mov	w0, #0x8                   	// #8
   13228:	b	1320c <mpc_sub@@Base+0x64>

000000000001322c <mpc_sub_fr@@Base>:
   1322c:	stp	x29, x30, [sp, #-48]!
   13230:	mov	x29, sp
   13234:	stp	x19, x20, [sp, #16]
   13238:	stp	x21, x22, [sp, #32]
   1323c:	mov	x22, x0
   13240:	mov	x19, x1
   13244:	mov	w20, w3
   13248:	and	w3, w3, #0xf
   1324c:	bl	4a60 <mpfr_sub@plt>
   13250:	mov	w21, w0
   13254:	ldr	w3, [x19, #40]
   13258:	asr	w2, w20, #4
   1325c:	add	x1, x19, #0x20
   13260:	add	x0, x22, #0x20
   13264:	bl	51d0 <mpfr_set4@plt>
   13268:	mov	w1, #0x2                   	// #2
   1326c:	tbnz	w21, #31, 13278 <mpc_sub_fr@@Base+0x4c>
   13270:	cmp	w21, #0x0
   13274:	cset	w1, ne  // ne = any
   13278:	tbnz	w0, #31, 1329c <mpc_sub_fr@@Base+0x70>
   1327c:	cmp	w0, #0x0
   13280:	mov	w2, #0x4                   	// #4
   13284:	csel	w0, w0, w2, eq  // eq = none
   13288:	orr	w0, w1, w0
   1328c:	ldp	x19, x20, [sp, #16]
   13290:	ldp	x21, x22, [sp, #32]
   13294:	ldp	x29, x30, [sp], #48
   13298:	ret
   1329c:	mov	w0, #0x8                   	// #8
   132a0:	b	13288 <mpc_sub_fr@@Base+0x5c>

00000000000132a4 <mpc_sub_ui@@Base>:
   132a4:	stp	x29, x30, [sp, #-48]!
   132a8:	mov	x29, sp
   132ac:	stp	x19, x20, [sp, #16]
   132b0:	stp	x21, x22, [sp, #32]
   132b4:	mov	x22, x0
   132b8:	mov	x19, x1
   132bc:	mov	w20, w3
   132c0:	and	w3, w3, #0xf
   132c4:	bl	50f0 <mpfr_sub_ui@plt>
   132c8:	mov	w21, w0
   132cc:	ldr	w3, [x19, #40]
   132d0:	asr	w2, w20, #4
   132d4:	add	x1, x19, #0x20
   132d8:	add	x0, x22, #0x20
   132dc:	bl	51d0 <mpfr_set4@plt>
   132e0:	mov	w1, #0x2                   	// #2
   132e4:	tbnz	w21, #31, 132f0 <mpc_sub_ui@@Base+0x4c>
   132e8:	cmp	w21, #0x0
   132ec:	cset	w1, ne  // ne = any
   132f0:	tbnz	w0, #31, 13314 <mpc_sub_ui@@Base+0x70>
   132f4:	cmp	w0, #0x0
   132f8:	mov	w2, #0x4                   	// #4
   132fc:	csel	w0, w0, w2, eq  // eq = none
   13300:	orr	w0, w1, w0
   13304:	ldp	x19, x20, [sp, #16]
   13308:	ldp	x21, x22, [sp, #32]
   1330c:	ldp	x29, x30, [sp], #48
   13310:	ret
   13314:	mov	w0, #0x8                   	// #8
   13318:	b	13300 <mpc_sub_ui@@Base+0x5c>

000000000001331c <mpc_swap@@Base>:
   1331c:	stp	x29, x30, [sp, #-32]!
   13320:	mov	x29, sp
   13324:	stp	x19, x20, [sp, #16]
   13328:	mov	x19, x0
   1332c:	mov	x20, x1
   13330:	bl	5090 <mpfr_swap@plt>
   13334:	add	x1, x20, #0x20
   13338:	add	x0, x19, #0x20
   1333c:	bl	5090 <mpfr_swap@plt>
   13340:	ldp	x19, x20, [sp, #16]
   13344:	ldp	x29, x30, [sp], #32
   13348:	ret

000000000001334c <mpc_tan@@Base>:
   1334c:	stp	x29, x30, [sp, #-320]!
   13350:	mov	x29, sp
   13354:	stp	x19, x20, [sp, #16]
   13358:	stp	x25, x26, [sp, #64]
   1335c:	stp	x27, x28, [sp, #80]
   13360:	mov	x27, x0
   13364:	mov	x25, x1
   13368:	str	w2, [sp, #104]
   1336c:	mov	x0, x1
   13370:	bl	54d0 <mpfr_number_p@plt>
   13374:	cbnz	w0, 13420 <mpc_tan@@Base+0xd4>
   13378:	ldr	x0, [x25, #16]
   1337c:	mov	x1, #0x2                   	// #2
   13380:	movk	x1, #0x8000, lsl #48
   13384:	cmp	x0, x1
   13388:	b.eq	134b8 <mpc_tan@@Base+0x16c>  // b.none
   1338c:	ldr	x1, [x25, #48]
   13390:	mov	x2, #0x2                   	// #2
   13394:	movk	x2, #0x8000, lsl #48
   13398:	cmp	x1, x2
   1339c:	b.eq	13508 <mpc_tan@@Base+0x1bc>  // b.none
   133a0:	mov	x2, #0x8000000000000003    	// #-9223372036854775805
   133a4:	cmp	x0, x2
   133a8:	b.ne	1355c <mpc_tan@@Base+0x210>  // b.any
   133ac:	cmp	x1, x2
   133b0:	b.ne	13544 <mpc_tan@@Base+0x1f8>  // b.any
   133b4:	ldr	w0, [x25, #8]
   133b8:	mov	w1, #0x1                   	// #1
   133bc:	str	w1, [x27, #8]
   133c0:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   133c4:	str	x1, [x27, #16]
   133c8:	mov	w3, #0x1                   	// #1
   133cc:	cmp	w0, #0x0
   133d0:	cneg	w3, w3, lt  // lt = tstop
   133d4:	mov	w2, #0x0                   	// #0
   133d8:	mov	x1, x27
   133dc:	mov	x0, x27
   133e0:	bl	51d0 <mpfr_set4@plt>
   133e4:	ldr	w0, [x25, #40]
   133e8:	mov	x1, #0x1                   	// #1
   133ec:	cmp	w0, #0x0
   133f0:	ldr	w0, [sp, #104]
   133f4:	asr	w3, w0, #4
   133f8:	mov	x2, #0x0                   	// #0
   133fc:	cneg	x1, x1, lt  // lt = tstop
   13400:	add	x0, x27, #0x20
   13404:	bl	49e0 <mpfr_set_si_2exp@plt>
   13408:	mov	w19, w0
   1340c:	tbnz	w0, #31, 13b2c <mpc_tan@@Base+0x7e0>
   13410:	cmp	w0, #0x0
   13414:	mov	w0, #0x4                   	// #4
   13418:	csel	w19, w19, w0, eq  // eq = none
   1341c:	b	13870 <mpc_tan@@Base+0x524>
   13420:	add	x19, x25, #0x20
   13424:	mov	x0, x19
   13428:	bl	54d0 <mpfr_number_p@plt>
   1342c:	cbz	w0, 13378 <mpc_tan@@Base+0x2c>
   13430:	ldr	x1, [x25, #16]
   13434:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   13438:	cmp	x1, x0
   1343c:	b.eq	13614 <mpc_tan@@Base+0x2c8>  // b.none
   13440:	stp	x21, x22, [sp, #32]
   13444:	ldr	x1, [x25, #48]
   13448:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   1344c:	cmp	x1, x0
   13450:	b.eq	13654 <mpc_tan@@Base+0x308>  // b.none
   13454:	stp	x23, x24, [sp, #48]
   13458:	ldr	x0, [x27]
   1345c:	ldr	x21, [x27, #32]
   13460:	cmp	x21, x0
   13464:	csel	x21, x21, x0, ge  // ge = tcont
   13468:	mov	x1, #0x2                   	// #2
   1346c:	add	x0, sp, #0x100
   13470:	bl	4cf0 <mpc_init2@plt>
   13474:	mov	x1, #0x2                   	// #2
   13478:	add	x0, sp, #0xc0
   1347c:	bl	4cf0 <mpc_init2@plt>
   13480:	ldr	w0, [sp, #104]
   13484:	asr	w0, w0, #4
   13488:	str	w0, [sp, #124]
   1348c:	cmp	w0, #0x0
   13490:	cset	x0, eq  // eq = none
   13494:	str	x0, [sp, #112]
   13498:	mov	x20, #0x7                   	// #7
   1349c:	add	x22, sp, #0x100
   134a0:	add	x24, sp, #0xc0
   134a4:	mov	x19, #0x8000000000000003    	// #-9223372036854775805
   134a8:	add	x28, x22, #0x20
   134ac:	add	x0, x24, #0x20
   134b0:	str	x0, [sp, #96]
   134b4:	b	139ac <mpc_tan@@Base+0x660>
   134b8:	ldr	x1, [x25, #48]
   134bc:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   134c0:	cmp	x1, x0
   134c4:	b.ne	134f0 <mpc_tan@@Base+0x1a4>  // b.any
   134c8:	ldr	w0, [x25, #40]
   134cc:	mov	x2, #0x1                   	// #1
   134d0:	cmp	w0, #0x0
   134d4:	ldr	w3, [sp, #104]
   134d8:	cneg	x2, x2, lt  // lt = tstop
   134dc:	mov	x1, #0x0                   	// #0
   134e0:	mov	x0, x27
   134e4:	bl	52c0 <mpc_set_si_si@plt>
   134e8:	mov	w19, w0
   134ec:	b	13870 <mpc_tan@@Base+0x524>
   134f0:	mov	x0, x27
   134f4:	bl	4a40 <mpfr_set_nan@plt>
   134f8:	add	x0, x27, #0x20
   134fc:	bl	4a40 <mpfr_set_nan@plt>
   13500:	mov	w19, #0x0                   	// #0
   13504:	b	13870 <mpc_tan@@Base+0x524>
   13508:	mov	x0, x25
   1350c:	bl	51f0 <mpfr_sgn@plt>
   13510:	mov	w19, w0
   13514:	cbnz	w0, 1352c <mpc_tan@@Base+0x1e0>
   13518:	ldr	w2, [sp, #104]
   1351c:	mov	x1, x25
   13520:	mov	x0, x27
   13524:	bl	5580 <mpc_set@plt>
   13528:	b	13870 <mpc_tan@@Base+0x524>
   1352c:	mov	x0, x27
   13530:	bl	4a40 <mpfr_set_nan@plt>
   13534:	add	x0, x27, #0x20
   13538:	bl	4a40 <mpfr_set_nan@plt>
   1353c:	mov	w19, #0x0                   	// #0
   13540:	b	13870 <mpc_tan@@Base+0x524>
   13544:	mov	x0, x27
   13548:	bl	4a40 <mpfr_set_nan@plt>
   1354c:	add	x0, x27, #0x20
   13550:	bl	4a40 <mpfr_set_nan@plt>
   13554:	mov	w19, #0x0                   	// #0
   13558:	b	13870 <mpc_tan@@Base+0x524>
   1355c:	add	x20, sp, #0x80
   13560:	mov	x0, x20
   13564:	bl	4aa0 <mpfr_init@plt>
   13568:	add	x19, sp, #0xa0
   1356c:	mov	x0, x19
   13570:	bl	4aa0 <mpfr_init@plt>
   13574:	mov	w3, #0x0                   	// #0
   13578:	mov	x2, x25
   1357c:	mov	x1, x20
   13580:	mov	x0, x19
   13584:	bl	5520 <mpfr_sin_cos@plt>
   13588:	mov	w0, #0x1                   	// #1
   1358c:	str	w0, [x27, #8]
   13590:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   13594:	str	x0, [x27, #16]
   13598:	ldr	w0, [sp, #168]
   1359c:	lsr	w0, w0, #31
   135a0:	mov	w3, #0x1                   	// #1
   135a4:	ldr	w1, [sp, #136]
   135a8:	cmp	w0, w1, lsr #31
   135ac:	cneg	w3, w3, ne  // ne = any
   135b0:	mov	w2, #0x0                   	// #0
   135b4:	mov	x1, x27
   135b8:	mov	x0, x27
   135bc:	bl	51d0 <mpfr_set4@plt>
   135c0:	ldr	w0, [x25, #40]
   135c4:	mov	x1, #0x1                   	// #1
   135c8:	cmp	w0, #0x0
   135cc:	ldr	w0, [sp, #104]
   135d0:	asr	w3, w0, #4
   135d4:	mov	x2, #0x0                   	// #0
   135d8:	cneg	x1, x1, lt  // lt = tstop
   135dc:	add	x0, x27, #0x20
   135e0:	bl	49e0 <mpfr_set_si_2exp@plt>
   135e4:	mov	w19, w0
   135e8:	tbnz	w0, #31, 1360c <mpc_tan@@Base+0x2c0>
   135ec:	cmp	w0, #0x0
   135f0:	mov	w0, #0x4                   	// #4
   135f4:	csel	w19, w19, w0, eq  // eq = none
   135f8:	add	x0, sp, #0xa0
   135fc:	bl	4d60 <mpfr_clear@plt>
   13600:	add	x0, sp, #0x80
   13604:	bl	4d60 <mpfr_clear@plt>
   13608:	b	13870 <mpc_tan@@Base+0x524>
   1360c:	mov	w19, #0x8                   	// #8
   13610:	b	135f8 <mpc_tan@@Base+0x2ac>
   13614:	ldr	w3, [x25, #8]
   13618:	ldr	w20, [sp, #104]
   1361c:	and	w2, w20, #0xf
   13620:	mov	x1, x25
   13624:	mov	x0, x27
   13628:	bl	51d0 <mpfr_set4@plt>
   1362c:	asr	w2, w20, #4
   13630:	mov	x1, x19
   13634:	add	x0, x27, #0x20
   13638:	bl	4a30 <mpfr_tanh@plt>
   1363c:	mov	w19, w0
   13640:	tbnz	w0, #31, 13b34 <mpc_tan@@Base+0x7e8>
   13644:	cmp	w0, #0x0
   13648:	mov	w0, #0x4                   	// #4
   1364c:	csel	w19, w19, w0, eq  // eq = none
   13650:	b	13870 <mpc_tan@@Base+0x524>
   13654:	ldr	w21, [sp, #104]
   13658:	and	w2, w21, #0xf
   1365c:	mov	x1, x25
   13660:	mov	x0, x27
   13664:	bl	4ab0 <mpfr_tan@plt>
   13668:	mov	w20, w0
   1366c:	ldr	w3, [x25, #40]
   13670:	asr	w2, w21, #4
   13674:	mov	x1, x19
   13678:	add	x0, x27, #0x20
   1367c:	bl	51d0 <mpfr_set4@plt>
   13680:	mov	w19, #0x2                   	// #2
   13684:	tbnz	w20, #31, 13c54 <mpc_tan@@Base+0x908>
   13688:	cmp	w20, #0x0
   1368c:	cset	w19, ne  // ne = any
   13690:	ldp	x21, x22, [sp, #32]
   13694:	b	13870 <mpc_tan@@Base+0x524>
   13698:	mov	x20, x21
   1369c:	b	139ac <mpc_tan@@Base+0x660>
   136a0:	mov	x20, x21
   136a4:	b	139ac <mpc_tan@@Base+0x660>
   136a8:	bl	4b00 <mpfr_set_erangeflag@plt>
   136ac:	b	13a08 <mpc_tan@@Base+0x6bc>
   136b0:	ldr	w0, [sp, #264]
   136b4:	cmp	w0, #0x0
   136b8:	b.le	13a08 <mpc_tan@@Base+0x6bc>
   136bc:	mov	x0, x22
   136c0:	bl	4e00 <mpfr_nextabove@plt>
   136c4:	b	13a10 <mpc_tan@@Base+0x6c4>
   136c8:	bl	4b00 <mpfr_set_erangeflag@plt>
   136cc:	b	13a2c <mpc_tan@@Base+0x6e0>
   136d0:	ldr	w0, [sp, #296]
   136d4:	cmp	w0, #0x0
   136d8:	b.le	13a2c <mpc_tan@@Base+0x6e0>
   136dc:	mov	x0, x28
   136e0:	bl	4e00 <mpfr_nextabove@plt>
   136e4:	b	13a34 <mpc_tan@@Base+0x6e8>
   136e8:	bl	4b00 <mpfr_set_erangeflag@plt>
   136ec:	b	13a50 <mpc_tan@@Base+0x704>
   136f0:	ldr	w0, [sp, #200]
   136f4:	cmp	w0, #0x0
   136f8:	b.le	13a50 <mpc_tan@@Base+0x704>
   136fc:	mov	x0, x24
   13700:	bl	4e00 <mpfr_nextabove@plt>
   13704:	b	13a58 <mpc_tan@@Base+0x70c>
   13708:	bl	4b00 <mpfr_set_erangeflag@plt>
   1370c:	b	13a74 <mpc_tan@@Base+0x728>
   13710:	ldr	w0, [sp, #232]
   13714:	cmp	w0, #0x0
   13718:	b.le	13a74 <mpc_tan@@Base+0x728>
   1371c:	ldr	x0, [sp, #96]
   13720:	bl	4e00 <mpfr_nextabove@plt>
   13724:	b	13a7c <mpc_tan@@Base+0x730>
   13728:	adrp	x4, 15000 <mpc_ui_ui_sub@@Base+0x1228>
   1372c:	add	x4, x4, #0x5c0
   13730:	mov	w3, #0xc9                  	// #201
   13734:	adrp	x2, 15000 <mpc_ui_ui_sub@@Base+0x1228>
   13738:	add	x2, x2, #0x5e8
   1373c:	adrp	x1, 15000 <mpc_ui_ui_sub@@Base+0x1228>
   13740:	add	x1, x1, #0x238
   13744:	adrp	x0, 27000 <mpc_ui_ui_sub@@Base+0x13228>
   13748:	ldr	x0, [x0, #4008]
   1374c:	ldr	x0, [x0]
   13750:	bl	55a0 <fprintf@plt>
   13754:	bl	5000 <abort@plt>
   13758:	mov	x19, x27
   1375c:	mov	w0, #0x1                   	// #1
   13760:	str	w0, [x27, #8]
   13764:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   13768:	str	x0, [x27, #16]
   1376c:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   13770:	cmp	x26, x0
   13774:	b.ge	13b50 <mpc_tan@@Base+0x804>  // b.tcont
   13778:	mov	x0, #0x2                   	// #2
   1377c:	movk	x0, #0x8000, lsl #48
   13780:	cmp	x26, x0
   13784:	b.eq	13888 <mpc_tan@@Base+0x53c>  // b.none
   13788:	ldr	x0, [sp, #208]
   1378c:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   13790:	mov	w21, #0xffffffff            	// #-1
   13794:	cmp	x0, x1
   13798:	b.ge	137b0 <mpc_tan@@Base+0x464>  // b.tcont
   1379c:	mov	x1, #0x2                   	// #2
   137a0:	movk	x1, #0x8000, lsl #48
   137a4:	cmp	x0, x1
   137a8:	b.eq	13890 <mpc_tan@@Base+0x544>  // b.none
   137ac:	mov	w21, #0xffffffff            	// #-1
   137b0:	ldr	x0, [x25, #48]
   137b4:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   137b8:	cmp	x0, x1
   137bc:	b.ge	138a8 <mpc_tan@@Base+0x55c>  // b.tcont
   137c0:	mov	x1, #0x2                   	// #2
   137c4:	movk	x1, #0x8000, lsl #48
   137c8:	cmp	x0, x1
   137cc:	b.eq	138a0 <mpc_tan@@Base+0x554>  // b.none
   137d0:	mov	w3, #0x0                   	// #0
   137d4:	mov	x2, #0x0                   	// #0
   137d8:	mov	x1, #0xffffffffffffffff    	// #-1
   137dc:	add	x0, x27, #0x20
   137e0:	bl	49e0 <mpfr_set_si_2exp@plt>
   137e4:	mov	w20, #0xffffffff            	// #-1
   137e8:	ldr	w2, [sp, #124]
   137ec:	cmp	w2, #0x1
   137f0:	b.eq	138d0 <mpc_tan@@Base+0x584>  // b.none
   137f4:	ldr	w0, [x27, #40]
   137f8:	cmp	w2, #0x2
   137fc:	cset	w1, eq  // eq = none
   13800:	tst	w1, w0, lsr #31
   13804:	b.ne	138d0 <mpc_tan@@Base+0x584>  // b.any
   13808:	cmp	w0, #0x0
   1380c:	ccmp	w2, #0x3, #0x0, ge  // ge = tcont
   13810:	b.eq	138d0 <mpc_tan@@Base+0x584>  // b.none
   13814:	ldr	x1, [x27, #16]
   13818:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   1381c:	cmp	x1, x0
   13820:	b.eq	138e4 <mpc_tan@@Base+0x598>  // b.none
   13824:	ldr	x1, [x27, #48]
   13828:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   1382c:	cmp	x1, x0
   13830:	b.eq	138fc <mpc_tan@@Base+0x5b0>  // b.none
   13834:	mov	w19, #0x2                   	// #2
   13838:	tbnz	w21, #31, 13844 <mpc_tan@@Base+0x4f8>
   1383c:	cmp	w21, #0x0
   13840:	cset	w19, ne  // ne = any
   13844:	tbnz	w20, #31, 13910 <mpc_tan@@Base+0x5c4>
   13848:	cmp	w20, #0x0
   1384c:	mov	w0, #0x4                   	// #4
   13850:	csel	w20, w20, w0, eq  // eq = none
   13854:	orr	w19, w19, w20
   13858:	add	x0, sp, #0x100
   1385c:	bl	4a10 <mpc_clear@plt>
   13860:	add	x0, sp, #0xc0
   13864:	bl	4a10 <mpc_clear@plt>
   13868:	ldp	x21, x22, [sp, #32]
   1386c:	ldp	x23, x24, [sp, #48]
   13870:	mov	w0, w19
   13874:	ldp	x19, x20, [sp, #16]
   13878:	ldp	x25, x26, [sp, #64]
   1387c:	ldp	x27, x28, [sp, #80]
   13880:	ldp	x29, x30, [sp], #320
   13884:	ret
   13888:	bl	4b00 <mpfr_set_erangeflag@plt>
   1388c:	b	13788 <mpc_tan@@Base+0x43c>
   13890:	bl	4b00 <mpfr_set_erangeflag@plt>
   13894:	b	137ac <mpc_tan@@Base+0x460>
   13898:	mov	w21, #0xffffffff            	// #-1
   1389c:	b	137b0 <mpc_tan@@Base+0x464>
   138a0:	bl	4b00 <mpfr_set_erangeflag@plt>
   138a4:	b	137d0 <mpc_tan@@Base+0x484>
   138a8:	ldr	w0, [x25, #40]
   138ac:	cmp	w0, #0x0
   138b0:	b.le	137d0 <mpc_tan@@Base+0x484>
   138b4:	mov	w3, #0x0                   	// #0
   138b8:	mov	x2, #0x0                   	// #0
   138bc:	mov	x1, #0x1                   	// #1
   138c0:	add	x0, x27, #0x20
   138c4:	bl	5130 <mpfr_set_ui_2exp@plt>
   138c8:	mov	w20, #0x1                   	// #1
   138cc:	b	137e8 <mpc_tan@@Base+0x49c>
   138d0:	mov	x1, x19
   138d4:	add	x0, x27, #0x20
   138d8:	bl	51c0 <mpfr_nexttoward@plt>
   138dc:	neg	w20, w20
   138e0:	b	13814 <mpc_tan@@Base+0x4c8>
   138e4:	ldr	w0, [sp, #104]
   138e8:	and	w1, w0, #0xf
   138ec:	mov	x0, x19
   138f0:	bl	50d0 <mpc_fix_zero@plt>
   138f4:	mov	w21, w0
   138f8:	b	13824 <mpc_tan@@Base+0x4d8>
   138fc:	ldr	w1, [sp, #124]
   13900:	add	x0, x27, #0x20
   13904:	bl	50d0 <mpc_fix_zero@plt>
   13908:	mov	w20, w0
   1390c:	b	13834 <mpc_tan@@Base+0x4e8>
   13910:	mov	w20, #0x8                   	// #8
   13914:	b	13854 <mpc_tan@@Base+0x508>
   13918:	bl	4b00 <mpfr_set_erangeflag@plt>
   1391c:	b	13b14 <mpc_tan@@Base+0x7c8>
   13920:	ldr	w0, [sp, #264]
   13924:	cmp	w0, #0x0
   13928:	b.le	13b14 <mpc_tan@@Base+0x7c8>
   1392c:	mov	x0, x22
   13930:	bl	4e00 <mpfr_nextabove@plt>
   13934:	b	13b1c <mpc_tan@@Base+0x7d0>
   13938:	bl	4b00 <mpfr_set_erangeflag@plt>
   1393c:	b	13bb0 <mpc_tan@@Base+0x864>
   13940:	ldr	w0, [sp, #296]
   13944:	cmp	w0, #0x0
   13948:	b.le	13bb0 <mpc_tan@@Base+0x864>
   1394c:	mov	x0, x28
   13950:	bl	4e00 <mpfr_nextabove@plt>
   13954:	b	13bb8 <mpc_tan@@Base+0x86c>
   13958:	adrp	x4, 15000 <mpc_ui_ui_sub@@Base+0x1228>
   1395c:	add	x4, x4, #0x5c0
   13960:	mov	w3, #0x107                 	// #263
   13964:	adrp	x2, 15000 <mpc_ui_ui_sub@@Base+0x1228>
   13968:	add	x2, x2, #0x5e8
   1396c:	adrp	x1, 15000 <mpc_ui_ui_sub@@Base+0x1228>
   13970:	add	x1, x1, #0x238
   13974:	adrp	x0, 27000 <mpc_ui_ui_sub@@Base+0x13228>
   13978:	ldr	x0, [x0, #4008]
   1397c:	ldr	x0, [x0]
   13980:	bl	55a0 <fprintf@plt>
   13984:	bl	5000 <abort@plt>
   13988:	ldr	x4, [x27, #32]
   1398c:	ldr	x0, [sp, #112]
   13990:	add	x4, x0, x4
   13994:	mov	w3, #0x1                   	// #1
   13998:	mov	w2, #0x0                   	// #0
   1399c:	sub	x1, x21, #0x6
   139a0:	mov	x0, x28
   139a4:	bl	5450 <mpfr_can_round@plt>
   139a8:	cbnz	w0, 13c3c <mpc_tan@@Base+0x8f0>
   139ac:	mov	x0, x21
   139b0:	bl	4d20 <mpc_ceil_log2@plt>
   139b4:	add	x20, x0, x20
   139b8:	add	x21, x21, x20
   139bc:	mov	x1, x21
   139c0:	mov	x0, x22
   139c4:	bl	4c00 <mpc_set_prec@plt>
   139c8:	mov	x1, x21
   139cc:	mov	x0, x24
   139d0:	bl	4c00 <mpc_set_prec@plt>
   139d4:	mov	w4, #0x11                  	// #17
   139d8:	mov	w3, w4
   139dc:	mov	x2, x25
   139e0:	mov	x1, x24
   139e4:	mov	x0, x22
   139e8:	bl	5140 <mpc_sin_cos@plt>
   139ec:	ldr	x0, [sp, #272]
   139f0:	cmp	x0, x19
   139f4:	b.ge	136b0 <mpc_tan@@Base+0x364>  // b.tcont
   139f8:	mov	x1, #0x2                   	// #2
   139fc:	movk	x1, #0x8000, lsl #48
   13a00:	cmp	x0, x1
   13a04:	b.eq	136a8 <mpc_tan@@Base+0x35c>  // b.none
   13a08:	mov	x0, x22
   13a0c:	bl	4bb0 <mpfr_nextbelow@plt>
   13a10:	ldr	x0, [sp, #304]
   13a14:	cmp	x0, x19
   13a18:	b.ge	136d0 <mpc_tan@@Base+0x384>  // b.tcont
   13a1c:	mov	x1, #0x2                   	// #2
   13a20:	movk	x1, #0x8000, lsl #48
   13a24:	cmp	x0, x1
   13a28:	b.eq	136c8 <mpc_tan@@Base+0x37c>  // b.none
   13a2c:	mov	x0, x28
   13a30:	bl	4bb0 <mpfr_nextbelow@plt>
   13a34:	ldr	x0, [sp, #208]
   13a38:	cmp	x0, x19
   13a3c:	b.ge	136f0 <mpc_tan@@Base+0x3a4>  // b.tcont
   13a40:	mov	x1, #0x2                   	// #2
   13a44:	movk	x1, #0x8000, lsl #48
   13a48:	cmp	x0, x1
   13a4c:	b.eq	136e8 <mpc_tan@@Base+0x39c>  // b.none
   13a50:	mov	x0, x24
   13a54:	bl	4bb0 <mpfr_nextbelow@plt>
   13a58:	ldr	x0, [sp, #240]
   13a5c:	cmp	x0, x19
   13a60:	b.ge	13710 <mpc_tan@@Base+0x3c4>  // b.tcont
   13a64:	mov	x1, #0x2                   	// #2
   13a68:	movk	x1, #0x8000, lsl #48
   13a6c:	cmp	x0, x1
   13a70:	b.eq	13708 <mpc_tan@@Base+0x3bc>  // b.none
   13a74:	ldr	x0, [sp, #96]
   13a78:	bl	4bb0 <mpfr_nextbelow@plt>
   13a7c:	ldr	x26, [sp, #272]
   13a80:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   13a84:	cmp	x26, x0
   13a88:	b.eq	13728 <mpc_tan@@Base+0x3dc>  // b.none
   13a8c:	cmp	x26, x19
   13a90:	b.eq	13b3c <mpc_tan@@Base+0x7f0>  // b.none
   13a94:	ldr	x0, [sp, #304]
   13a98:	cmp	x0, x19
   13a9c:	b.eq	13758 <mpc_tan@@Base+0x40c>  // b.none
   13aa0:	ldr	x23, [sp, #208]
   13aa4:	cmp	x23, x19
   13aa8:	b.eq	13758 <mpc_tan@@Base+0x40c>  // b.none
   13aac:	ldr	x20, [sp, #240]
   13ab0:	cmp	x20, x19
   13ab4:	b.eq	13758 <mpc_tan@@Base+0x40c>  // b.none
   13ab8:	mov	w3, #0x11                  	// #17
   13abc:	mov	x2, x24
   13ac0:	mov	x1, x22
   13ac4:	mov	x0, x22
   13ac8:	bl	5250 <mpc_div@plt>
   13acc:	mov	w3, w0
   13ad0:	str	w0, [sp, #120]
   13ad4:	ldr	x0, [sp, #272]
   13ad8:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   13adc:	cmp	x0, x1
   13ae0:	b.eq	13698 <mpc_tan@@Base+0x34c>  // b.none
   13ae4:	ldr	x2, [sp, #304]
   13ae8:	cmp	x2, x1
   13aec:	b.eq	136a0 <mpc_tan@@Base+0x354>  // b.none
   13af0:	mov	x1, x3
   13af4:	tst	x1, #0x3
   13af8:	b.eq	13b88 <mpc_tan@@Base+0x83c>  // b.none
   13afc:	cmp	x0, x19
   13b00:	b.ge	13920 <mpc_tan@@Base+0x5d4>  // b.tcont
   13b04:	mov	x1, #0x2                   	// #2
   13b08:	movk	x1, #0x8000, lsl #48
   13b0c:	cmp	x0, x1
   13b10:	b.eq	13918 <mpc_tan@@Base+0x5cc>  // b.none
   13b14:	mov	x0, x22
   13b18:	bl	4bb0 <mpfr_nextbelow@plt>
   13b1c:	ldr	w0, [sp, #120]
   13b20:	cmp	wzr, w0, lsr #2
   13b24:	b.eq	13bb8 <mpc_tan@@Base+0x86c>  // b.none
   13b28:	b	13b94 <mpc_tan@@Base+0x848>
   13b2c:	mov	w19, #0x8                   	// #8
   13b30:	b	13870 <mpc_tan@@Base+0x524>
   13b34:	mov	w19, #0x8                   	// #8
   13b38:	b	13870 <mpc_tan@@Base+0x524>
   13b3c:	mov	x19, x27
   13b40:	mov	w0, #0x1                   	// #1
   13b44:	str	w0, [x27, #8]
   13b48:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   13b4c:	str	x0, [x27, #16]
   13b50:	ldr	w1, [sp, #264]
   13b54:	ldr	x0, [sp, #208]
   13b58:	mov	x2, #0x8000000000000003    	// #-9223372036854775805
   13b5c:	cmp	x0, x2
   13b60:	b.lt	1379c <mpc_tan@@Base+0x450>  // b.tstop
   13b64:	ldr	w0, [sp, #200]
   13b68:	mul	w1, w1, w0
   13b6c:	tbz	w1, #31, 13898 <mpc_tan@@Base+0x54c>
   13b70:	mov	w2, #0x0                   	// #0
   13b74:	mov	x1, x19
   13b78:	mov	x0, x19
   13b7c:	bl	4b80 <mpfr_neg@plt>
   13b80:	mov	w21, #0x1                   	// #1
   13b84:	b	137b0 <mpc_tan@@Base+0x464>
   13b88:	ldr	w1, [sp, #120]
   13b8c:	cmp	wzr, w1, lsr #2
   13b90:	b.eq	13bc8 <mpc_tan@@Base+0x87c>  // b.none
   13b94:	ldr	x0, [sp, #304]
   13b98:	cmp	x0, x19
   13b9c:	b.ge	13940 <mpc_tan@@Base+0x5f4>  // b.tcont
   13ba0:	mov	x1, #0x2                   	// #2
   13ba4:	movk	x1, #0x8000, lsl #48
   13ba8:	cmp	x0, x1
   13bac:	b.eq	13938 <mpc_tan@@Base+0x5ec>  // b.none
   13bb0:	mov	x0, x28
   13bb4:	bl	4bb0 <mpfr_nextbelow@plt>
   13bb8:	ldr	x0, [sp, #272]
   13bbc:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   13bc0:	cmp	x0, x1
   13bc4:	b.eq	13958 <mpc_tan@@Base+0x60c>  // b.none
   13bc8:	sub	x20, x23, x20, lsl #1
   13bcc:	neg	x23, x23
   13bd0:	cmp	x20, x23
   13bd4:	csel	x20, x20, x23, ge  // ge = tcont
   13bd8:	sub	x26, x26, x0
   13bdc:	add	x26, x20, x26
   13be0:	mov	x20, #0x7                   	// #7
   13be4:	cmp	x26, #0x1
   13be8:	b.le	13bfc <mpc_tan@@Base+0x8b0>
   13bec:	add	x20, x26, #0x5
   13bf0:	cmp	x26, #0x2
   13bf4:	mov	x0, #0x8                   	// #8
   13bf8:	csel	x20, x20, x0, ne  // ne = any
   13bfc:	mov	x0, x22
   13c00:	bl	54d0 <mpfr_number_p@plt>
   13c04:	cbz	w0, 13c30 <mpc_tan@@Base+0x8e4>
   13c08:	ldr	x0, [sp, #104]
   13c0c:	tst	x0, #0xf
   13c10:	ldr	x4, [x27]
   13c14:	cinc	x4, x4, eq  // eq = none
   13c18:	mov	w3, #0x1                   	// #1
   13c1c:	mov	w2, #0x0                   	// #0
   13c20:	sub	x1, x21, x20
   13c24:	mov	x0, x22
   13c28:	bl	5450 <mpfr_can_round@plt>
   13c2c:	cbz	w0, 139ac <mpc_tan@@Base+0x660>
   13c30:	mov	x0, x28
   13c34:	bl	54d0 <mpfr_number_p@plt>
   13c38:	cbnz	w0, 13988 <mpc_tan@@Base+0x63c>
   13c3c:	ldr	w2, [sp, #104]
   13c40:	add	x1, sp, #0x100
   13c44:	mov	x0, x27
   13c48:	bl	5580 <mpc_set@plt>
   13c4c:	mov	w19, w0
   13c50:	b	13858 <mpc_tan@@Base+0x50c>
   13c54:	ldp	x21, x22, [sp, #32]
   13c58:	b	13870 <mpc_tan@@Base+0x524>

0000000000013c5c <mpc_tanh@@Base>:
   13c5c:	stp	x29, x30, [sp, #-160]!
   13c60:	mov	x29, sp
   13c64:	stp	x19, x20, [sp, #16]
   13c68:	mov	x19, x0
   13c6c:	ldp	x4, x5, [x1, #32]
   13c70:	stp	x4, x5, [sp, #96]
   13c74:	ldp	x4, x5, [x1, #48]
   13c78:	stp	x4, x5, [sp, #112]
   13c7c:	ldp	x4, x5, [x1]
   13c80:	stp	x4, x5, [sp, #128]
   13c84:	ldp	x0, x1, [x1, #16]
   13c88:	stp	x0, x1, [sp, #144]
   13c8c:	ldp	x0, x1, [x19, #32]
   13c90:	stp	x0, x1, [sp, #32]
   13c94:	ldp	x0, x1, [x19, #48]
   13c98:	stp	x0, x1, [sp, #48]
   13c9c:	ldp	x0, x1, [x19]
   13ca0:	stp	x0, x1, [sp, #64]
   13ca4:	ldp	x0, x1, [x19, #16]
   13ca8:	stp	x0, x1, [sp, #80]
   13cac:	ubfiz	w0, w2, #4, #4
   13cb0:	add	w2, w0, w2, asr #4
   13cb4:	add	x1, sp, #0x60
   13cb8:	add	x0, sp, #0x20
   13cbc:	bl	4c20 <mpc_tan@plt>
   13cc0:	ldp	x2, x3, [sp, #64]
   13cc4:	stp	x2, x3, [x19]
   13cc8:	ldp	x2, x3, [sp, #80]
   13ccc:	stp	x2, x3, [x19, #16]
   13cd0:	ldp	x2, x3, [sp, #32]
   13cd4:	stp	x2, x3, [x19, #32]
   13cd8:	ldp	x2, x3, [sp, #48]
   13cdc:	stp	x2, x3, [x19, #48]
   13ce0:	asr	w1, w0, #2
   13ce4:	cmp	w1, #0x2
   13ce8:	b.eq	13cf4 <mpc_tanh@@Base+0x98>  // b.none
   13cec:	cmp	w1, #0x0
   13cf0:	cset	w1, ne  // ne = any
   13cf4:	and	w0, w0, #0x3
   13cf8:	cmp	w0, #0x2
   13cfc:	b.eq	13d1c <mpc_tanh@@Base+0xc0>  // b.none
   13d00:	cmp	w0, #0x0
   13d04:	mov	w2, #0x4                   	// #4
   13d08:	csel	w0, w0, w2, eq  // eq = none
   13d0c:	orr	w0, w1, w0
   13d10:	ldp	x19, x20, [sp, #16]
   13d14:	ldp	x29, x30, [sp], #160
   13d18:	ret
   13d1c:	mov	w0, #0x8                   	// #8
   13d20:	b	13d0c <mpc_tanh@@Base+0xb0>

0000000000013d24 <mpc_ceil_log2@@Base>:
   13d24:	mov	x2, x0
   13d28:	cmp	x0, #0x1
   13d2c:	b.le	13d54 <mpc_ceil_log2@@Base+0x30>
   13d30:	mov	x0, #0x0                   	// #0
   13d34:	add	x0, x0, #0x1
   13d38:	add	x1, x2, #0x1
   13d3c:	mov	x3, x2
   13d40:	add	x1, x1, x1, lsr #63
   13d44:	asr	x2, x1, #1
   13d48:	cmp	x3, #0x2
   13d4c:	b.gt	13d34 <mpc_ceil_log2@@Base+0x10>
   13d50:	ret
   13d54:	mov	x0, #0x0                   	// #0
   13d58:	b	13d50 <mpc_ceil_log2@@Base+0x2c>

0000000000013d5c <mpc_ui_div@@Base>:
   13d5c:	stp	x29, x30, [sp, #-128]!
   13d60:	mov	x29, sp
   13d64:	stp	x19, x20, [sp, #16]
   13d68:	stp	x21, x22, [sp, #32]
   13d6c:	str	x23, [sp, #48]
   13d70:	mov	x21, x0
   13d74:	mov	x23, x1
   13d78:	mov	x22, x2
   13d7c:	mov	w20, w3
   13d80:	add	x19, sp, #0x40
   13d84:	mov	x1, #0x40                  	// #64
   13d88:	mov	x0, x19
   13d8c:	bl	4cf0 <mpc_init2@plt>
   13d90:	mov	w2, w20
   13d94:	mov	x1, x23
   13d98:	mov	x0, x19
   13d9c:	bl	4ce0 <mpc_set_ui@plt>
   13da0:	mov	w3, w20
   13da4:	mov	x2, x22
   13da8:	mov	x1, x19
   13dac:	mov	x0, x21
   13db0:	bl	5250 <mpc_div@plt>
   13db4:	mov	w20, w0
   13db8:	mov	x0, x19
   13dbc:	bl	4a10 <mpc_clear@plt>
   13dc0:	mov	w0, w20
   13dc4:	ldp	x19, x20, [sp, #16]
   13dc8:	ldp	x21, x22, [sp, #32]
   13dcc:	ldr	x23, [sp, #48]
   13dd0:	ldp	x29, x30, [sp], #128
   13dd4:	ret

0000000000013dd8 <mpc_ui_ui_sub@@Base>:
   13dd8:	stp	x29, x30, [sp, #-64]!
   13ddc:	mov	x29, sp
   13de0:	stp	x19, x20, [sp, #16]
   13de4:	stp	x21, x22, [sp, #32]
   13de8:	str	x23, [sp, #48]
   13dec:	mov	x22, x0
   13df0:	mov	x23, x2
   13df4:	mov	x19, x3
   13df8:	mov	w20, w4
   13dfc:	and	w3, w4, #0xf
   13e00:	mov	x2, x19
   13e04:	bl	5430 <mpfr_ui_sub@plt>
   13e08:	mov	w21, w0
   13e0c:	asr	w3, w20, #4
   13e10:	add	x2, x19, #0x20
   13e14:	mov	x1, x23
   13e18:	add	x0, x22, #0x20
   13e1c:	bl	5430 <mpfr_ui_sub@plt>
   13e20:	mov	w1, #0x2                   	// #2
   13e24:	tbnz	w21, #31, 13e30 <mpc_ui_ui_sub@@Base+0x58>
   13e28:	cmp	w21, #0x0
   13e2c:	cset	w1, ne  // ne = any
   13e30:	tbnz	w0, #31, 13e58 <mpc_ui_ui_sub@@Base+0x80>
   13e34:	cmp	w0, #0x0
   13e38:	mov	w2, #0x4                   	// #4
   13e3c:	csel	w0, w0, w2, eq  // eq = none
   13e40:	orr	w0, w1, w0
   13e44:	ldp	x19, x20, [sp, #16]
   13e48:	ldp	x21, x22, [sp, #32]
   13e4c:	ldr	x23, [sp, #48]
   13e50:	ldp	x29, x30, [sp], #64
   13e54:	ret
   13e58:	mov	w0, #0x8                   	// #8
   13e5c:	b	13e40 <mpc_ui_ui_sub@@Base+0x68>
   13e60:	stp	x29, x30, [sp, #-48]!
   13e64:	mov	x29, sp
   13e68:	str	q0, [sp, #16]
   13e6c:	str	q1, [sp, #32]
   13e70:	ldp	x6, x1, [sp, #16]
   13e74:	ldp	x0, x3, [sp, #32]
   13e78:	mrs	x15, fpcr
   13e7c:	lsr	x7, x1, #63
   13e80:	mov	x10, x0
   13e84:	ubfiz	x4, x3, #3, #48
   13e88:	lsr	x5, x3, #63
   13e8c:	mov	x12, x7
   13e90:	ubfiz	x2, x1, #3, #48
   13e94:	orr	x4, x4, x0, lsr #61
   13e98:	ubfx	x8, x1, #48, #15
   13e9c:	ubfx	x0, x3, #48, #15
   13ea0:	and	w7, w7, #0xff
   13ea4:	mov	x16, x12
   13ea8:	cmp	x12, x5
   13eac:	and	w11, w5, #0xff
   13eb0:	orr	x2, x2, x6, lsr #61
   13eb4:	mov	x1, x8
   13eb8:	lsl	x9, x6, #3
   13ebc:	mov	x3, x0
   13ec0:	lsl	x13, x10, #3
   13ec4:	b.eq	14070 <mpc_ui_ui_sub@@Base+0x298>  // b.none
   13ec8:	sub	w0, w8, w0
   13ecc:	cmp	w0, #0x0
   13ed0:	b.le	1401c <mpc_ui_ui_sub@@Base+0x244>
   13ed4:	cbz	x3, 140d0 <mpc_ui_ui_sub@@Base+0x2f8>
   13ed8:	orr	x4, x4, #0x8000000000000
   13edc:	mov	x3, #0x7fff                	// #32767
   13ee0:	cmp	x1, x3
   13ee4:	b.eq	142d4 <mpc_ui_ui_sub@@Base+0x4fc>  // b.none
   13ee8:	cmp	w0, #0x74
   13eec:	b.gt	14358 <mpc_ui_ui_sub@@Base+0x580>
   13ef0:	cmp	w0, #0x3f
   13ef4:	b.gt	144b8 <mpc_ui_ui_sub@@Base+0x6e0>
   13ef8:	mov	w3, #0x40                  	// #64
   13efc:	sub	w3, w3, w0
   13f00:	lsr	x6, x13, x0
   13f04:	lsl	x13, x13, x3
   13f08:	cmp	x13, #0x0
   13f0c:	cset	x5, ne  // ne = any
   13f10:	lsl	x3, x4, x3
   13f14:	orr	x3, x3, x6
   13f18:	lsr	x0, x4, x0
   13f1c:	orr	x3, x3, x5
   13f20:	sub	x2, x2, x0
   13f24:	subs	x9, x9, x3
   13f28:	sbc	x2, x2, xzr
   13f2c:	and	x3, x2, #0x7ffffffffffff
   13f30:	tbz	x2, #51, 14110 <mpc_ui_ui_sub@@Base+0x338>
   13f34:	cbz	x3, 1433c <mpc_ui_ui_sub@@Base+0x564>
   13f38:	clz	x0, x3
   13f3c:	sub	w0, w0, #0xc
   13f40:	neg	w2, w0
   13f44:	lsl	x4, x3, x0
   13f48:	lsl	x3, x9, x0
   13f4c:	lsr	x9, x9, x2
   13f50:	orr	x2, x9, x4
   13f54:	cmp	x1, w0, sxtw
   13f58:	sxtw	x4, w0
   13f5c:	b.gt	1431c <mpc_ui_ui_sub@@Base+0x544>
   13f60:	sub	w1, w0, w1
   13f64:	add	w0, w1, #0x1
   13f68:	cmp	w0, #0x3f
   13f6c:	b.gt	14480 <mpc_ui_ui_sub@@Base+0x6a8>
   13f70:	mov	w1, #0x40                  	// #64
   13f74:	sub	w1, w1, w0
   13f78:	lsr	x4, x3, x0
   13f7c:	lsl	x3, x3, x1
   13f80:	cmp	x3, #0x0
   13f84:	lsl	x9, x2, x1
   13f88:	cset	x1, ne  // ne = any
   13f8c:	orr	x9, x9, x4
   13f90:	lsr	x2, x2, x0
   13f94:	orr	x9, x9, x1
   13f98:	orr	x8, x9, x2
   13f9c:	cbz	x8, 14124 <mpc_ui_ui_sub@@Base+0x34c>
   13fa0:	and	x0, x9, #0x7
   13fa4:	mov	x1, #0x0                   	// #0
   13fa8:	mov	w5, #0x1                   	// #1
   13fac:	cbz	x0, 14368 <mpc_ui_ui_sub@@Base+0x590>
   13fb0:	and	x3, x15, #0xc00000
   13fb4:	cmp	x3, #0x400, lsl #12
   13fb8:	b.eq	142ac <mpc_ui_ui_sub@@Base+0x4d4>  // b.none
   13fbc:	cmp	x3, #0x800, lsl #12
   13fc0:	b.eq	1428c <mpc_ui_ui_sub@@Base+0x4b4>  // b.none
   13fc4:	cbz	x3, 142b8 <mpc_ui_ui_sub@@Base+0x4e0>
   13fc8:	and	x3, x2, #0x8000000000000
   13fcc:	mov	w0, #0x10                  	// #16
   13fd0:	cbz	w5, 13fd8 <mpc_ui_ui_sub@@Base+0x200>
   13fd4:	orr	w0, w0, #0x8
   13fd8:	cbz	x3, 142f0 <mpc_ui_ui_sub@@Base+0x518>
   13fdc:	add	x1, x1, #0x1
   13fe0:	mov	x3, #0x7fff                	// #32767
   13fe4:	cmp	x1, x3
   13fe8:	b.eq	141d4 <mpc_ui_ui_sub@@Base+0x3fc>  // b.none
   13fec:	and	w1, w1, #0x7fff
   13ff0:	extr	x8, x2, x9, #3
   13ff4:	ubfx	x2, x2, #3, #48
   13ff8:	mov	x5, #0x0                   	// #0
   13ffc:	orr	w1, w1, w7, lsl #15
   14000:	bfxil	x5, x2, #0, #48
   14004:	fmov	d0, x8
   14008:	bfi	x5, x1, #48, #16
   1400c:	fmov	v0.d[1], x5
   14010:	cbnz	w0, 14230 <mpc_ui_ui_sub@@Base+0x458>
   14014:	ldp	x29, x30, [sp], #48
   14018:	ret
   1401c:	mov	x14, x5
   14020:	b.eq	1413c <mpc_ui_ui_sub@@Base+0x364>  // b.none
   14024:	cbnz	x8, 143c0 <mpc_ui_ui_sub@@Base+0x5e8>
   14028:	orr	x1, x2, x9
   1402c:	cbz	x1, 140ec <mpc_ui_ui_sub@@Base+0x314>
   14030:	cmn	w0, #0x1
   14034:	b.eq	147dc <mpc_ui_ui_sub@@Base+0xa04>  // b.none
   14038:	mov	x1, #0x7fff                	// #32767
   1403c:	mvn	w0, w0
   14040:	cmp	x3, x1
   14044:	b.ne	143d4 <mpc_ui_ui_sub@@Base+0x5fc>  // b.any
   14048:	orr	x0, x4, x13
   1404c:	cbnz	x0, 14734 <mpc_ui_ui_sub@@Base+0x95c>
   14050:	mov	x16, x14
   14054:	nop
   14058:	mov	x4, #0x0                   	// #0
   1405c:	fmov	d0, x4
   14060:	lsl	x16, x16, #63
   14064:	orr	x5, x16, #0x7fff000000000000
   14068:	fmov	v0.d[1], x5
   1406c:	b	14014 <mpc_ui_ui_sub@@Base+0x23c>
   14070:	sub	w5, w8, w0
   14074:	cmp	w5, #0x0
   14078:	b.le	14244 <mpc_ui_ui_sub@@Base+0x46c>
   1407c:	cbz	x0, 14184 <mpc_ui_ui_sub@@Base+0x3ac>
   14080:	orr	x4, x4, #0x8000000000000
   14084:	mov	x0, #0x7fff                	// #32767
   14088:	cmp	x1, x0
   1408c:	b.eq	142d4 <mpc_ui_ui_sub@@Base+0x4fc>  // b.none
   14090:	cmp	w5, #0x74
   14094:	b.gt	14468 <mpc_ui_ui_sub@@Base+0x690>
   14098:	cmp	w5, #0x3f
   1409c:	b.gt	14568 <mpc_ui_ui_sub@@Base+0x790>
   140a0:	mov	w0, #0x40                  	// #64
   140a4:	sub	w0, w0, w5
   140a8:	lsr	x6, x13, x5
   140ac:	lsl	x13, x13, x0
   140b0:	cmp	x13, #0x0
   140b4:	lsl	x0, x4, x0
   140b8:	cset	x3, ne  // ne = any
   140bc:	orr	x0, x0, x6
   140c0:	lsr	x4, x4, x5
   140c4:	orr	x0, x0, x3
   140c8:	add	x2, x2, x4
   140cc:	b	14474 <mpc_ui_ui_sub@@Base+0x69c>
   140d0:	orr	x3, x4, x13
   140d4:	cbz	x3, 14444 <mpc_ui_ui_sub@@Base+0x66c>
   140d8:	subs	w0, w0, #0x1
   140dc:	b.ne	13edc <mpc_ui_ui_sub@@Base+0x104>  // b.any
   140e0:	subs	x9, x9, x13
   140e4:	sbc	x2, x2, x4
   140e8:	b	13f2c <mpc_ui_ui_sub@@Base+0x154>
   140ec:	mov	x0, #0x7fff                	// #32767
   140f0:	cmp	x3, x0
   140f4:	b.eq	14828 <mpc_ui_ui_sub@@Base+0xa50>  // b.none
   140f8:	mov	w7, w11
   140fc:	mov	x2, x4
   14100:	mov	x9, x13
   14104:	mov	x1, x3
   14108:	mov	x12, x5
   1410c:	nop
   14110:	orr	x8, x9, x2
   14114:	and	x0, x9, #0x7
   14118:	mov	w5, #0x0                   	// #0
   1411c:	cbnz	x1, 13fac <mpc_ui_ui_sub@@Base+0x1d4>
   14120:	cbnz	x8, 13fa0 <mpc_ui_ui_sub@@Base+0x1c8>
   14124:	mov	x2, #0x0                   	// #0
   14128:	mov	x1, #0x0                   	// #0
   1412c:	mov	w0, #0x0                   	// #0
   14130:	and	x2, x2, #0xffffffffffff
   14134:	and	w1, w1, #0x7fff
   14138:	b	13ff8 <mpc_ui_ui_sub@@Base+0x220>
   1413c:	add	x5, x8, #0x1
   14140:	tst	x5, #0x7ffe
   14144:	b.ne	14414 <mpc_ui_ui_sub@@Base+0x63c>  // b.any
   14148:	orr	x5, x2, x9
   1414c:	orr	x8, x4, x13
   14150:	cbnz	x1, 145d4 <mpc_ui_ui_sub@@Base+0x7fc>
   14154:	cbz	x5, 1467c <mpc_ui_ui_sub@@Base+0x8a4>
   14158:	cbz	x8, 14690 <mpc_ui_ui_sub@@Base+0x8b8>
   1415c:	subs	x5, x9, x13
   14160:	cmp	x9, x13
   14164:	sbc	x3, x2, x4
   14168:	tbz	x3, #51, 1485c <mpc_ui_ui_sub@@Base+0xa84>
   1416c:	subs	x9, x13, x9
   14170:	mov	w7, w11
   14174:	sbc	x2, x4, x2
   14178:	mov	x12, x14
   1417c:	orr	x8, x9, x2
   14180:	b	13f9c <mpc_ui_ui_sub@@Base+0x1c4>
   14184:	orr	x0, x4, x13
   14188:	cbz	x0, 1465c <mpc_ui_ui_sub@@Base+0x884>
   1418c:	subs	w5, w5, #0x1
   14190:	b.ne	14084 <mpc_ui_ui_sub@@Base+0x2ac>  // b.any
   14194:	adds	x9, x9, x13
   14198:	adc	x2, x4, x2
   1419c:	nop
   141a0:	tbz	x2, #51, 14110 <mpc_ui_ui_sub@@Base+0x338>
   141a4:	add	x1, x1, #0x1
   141a8:	mov	x0, #0x7fff                	// #32767
   141ac:	cmp	x1, x0
   141b0:	b.eq	1469c <mpc_ui_ui_sub@@Base+0x8c4>  // b.none
   141b4:	and	x0, x9, #0x1
   141b8:	and	x3, x2, #0xfff7ffffffffffff
   141bc:	orr	x9, x0, x9, lsr #1
   141c0:	mov	w5, #0x0                   	// #0
   141c4:	orr	x9, x9, x2, lsl #63
   141c8:	lsr	x2, x3, #1
   141cc:	and	x0, x9, #0x7
   141d0:	b	13fac <mpc_ui_ui_sub@@Base+0x1d4>
   141d4:	and	x3, x15, #0xc00000
   141d8:	cbz	x3, 14210 <mpc_ui_ui_sub@@Base+0x438>
   141dc:	cmp	x3, #0x400, lsl #12
   141e0:	b.eq	14208 <mpc_ui_ui_sub@@Base+0x430>  // b.none
   141e4:	cmp	x3, #0x800, lsl #12
   141e8:	csel	w12, w12, wzr, eq  // eq = none
   141ec:	cbnz	w12, 14210 <mpc_ui_ui_sub@@Base+0x438>
   141f0:	mov	w1, #0x14                  	// #20
   141f4:	mov	x2, #0x1fffffffffffffff    	// #2305843009213693951
   141f8:	orr	w0, w0, w1
   141fc:	mov	x8, #0xffffffffffffffff    	// #-1
   14200:	mov	x1, #0x7ffe                	// #32766
   14204:	b	14130 <mpc_ui_ui_sub@@Base+0x358>
   14208:	cbnz	x12, 141f0 <mpc_ui_ui_sub@@Base+0x418>
   1420c:	nop
   14210:	mov	w1, #0x14                  	// #20
   14214:	and	x16, x7, #0xff
   14218:	orr	w0, w0, w1
   1421c:	mov	x4, #0x0                   	// #0
   14220:	fmov	d0, x4
   14224:	lsl	x16, x16, #63
   14228:	orr	x5, x16, #0x7fff000000000000
   1422c:	fmov	v0.d[1], x5
   14230:	str	q0, [sp, #16]
   14234:	bl	15170 <mpc_ui_ui_sub@@Base+0x1398>
   14238:	ldr	q0, [sp, #16]
   1423c:	ldp	x29, x30, [sp], #48
   14240:	ret
   14244:	b.eq	14384 <mpc_ui_ui_sub@@Base+0x5ac>  // b.none
   14248:	cbnz	x8, 14508 <mpc_ui_ui_sub@@Base+0x730>
   1424c:	orr	x0, x2, x9
   14250:	cbz	x0, 14774 <mpc_ui_ui_sub@@Base+0x99c>
   14254:	cmn	w5, #0x1
   14258:	b.eq	148d4 <mpc_ui_ui_sub@@Base+0xafc>  // b.none
   1425c:	mov	x0, #0x7fff                	// #32767
   14260:	mvn	w5, w5
   14264:	cmp	x3, x0
   14268:	b.ne	1451c <mpc_ui_ui_sub@@Base+0x744>  // b.any
   1426c:	orr	x0, x4, x13
   14270:	cbz	x0, 14058 <mpc_ui_ui_sub@@Base+0x280>
   14274:	lsr	x5, x4, #50
   14278:	mov	x9, x13
   1427c:	eor	x5, x5, #0x1
   14280:	mov	x2, x4
   14284:	and	w5, w5, #0x1
   14288:	b	142e8 <mpc_ui_ui_sub@@Base+0x510>
   1428c:	mov	w0, #0x10                  	// #16
   14290:	cbz	x12, 1429c <mpc_ui_ui_sub@@Base+0x4c4>
   14294:	adds	x9, x9, #0x8
   14298:	cinc	x2, x2, cs  // cs = hs, nlast
   1429c:	and	x3, x2, #0x8000000000000
   142a0:	cbz	w5, 13fd8 <mpc_ui_ui_sub@@Base+0x200>
   142a4:	orr	w0, w0, #0x8
   142a8:	b	13fd8 <mpc_ui_ui_sub@@Base+0x200>
   142ac:	mov	w0, #0x10                  	// #16
   142b0:	cbnz	x12, 1429c <mpc_ui_ui_sub@@Base+0x4c4>
   142b4:	b	14294 <mpc_ui_ui_sub@@Base+0x4bc>
   142b8:	and	x3, x9, #0xf
   142bc:	mov	w0, #0x10                  	// #16
   142c0:	cmp	x3, #0x4
   142c4:	b.eq	1429c <mpc_ui_ui_sub@@Base+0x4c4>  // b.none
   142c8:	adds	x9, x9, #0x4
   142cc:	cinc	x2, x2, cs  // cs = hs, nlast
   142d0:	b	1429c <mpc_ui_ui_sub@@Base+0x4c4>
   142d4:	orr	x0, x2, x9
   142d8:	cbz	x0, 14058 <mpc_ui_ui_sub@@Base+0x280>
   142dc:	lsr	x5, x2, #50
   142e0:	eor	x5, x5, #0x1
   142e4:	and	w5, w5, #0x1
   142e8:	mov	w0, w5
   142ec:	mov	x1, #0x7fff                	// #32767
   142f0:	mov	x3, #0x7fff                	// #32767
   142f4:	extr	x8, x2, x9, #3
   142f8:	cmp	x1, x3
   142fc:	lsr	x2, x2, #3
   14300:	b.ne	14130 <mpc_ui_ui_sub@@Base+0x358>  // b.any
   14304:	orr	x1, x8, x2
   14308:	cbz	x1, 14974 <mpc_ui_ui_sub@@Base+0xb9c>
   1430c:	orr	x2, x2, #0x800000000000
   14310:	mov	w1, #0x7fff                	// #32767
   14314:	and	x2, x2, #0xffffffffffff
   14318:	b	13ff8 <mpc_ui_ui_sub@@Base+0x220>
   1431c:	mov	x9, x3
   14320:	and	x2, x2, #0xfff7ffffffffffff
   14324:	sub	x1, x1, x4
   14328:	orr	x8, x9, x2
   1432c:	and	x0, x9, #0x7
   14330:	mov	w5, #0x0                   	// #0
   14334:	cbz	x1, 14120 <mpc_ui_ui_sub@@Base+0x348>
   14338:	b	13fac <mpc_ui_ui_sub@@Base+0x1d4>
   1433c:	clz	x2, x9
   14340:	add	w0, w2, #0x34
   14344:	cmp	w0, #0x3f
   14348:	b.le	13f40 <mpc_ui_ui_sub@@Base+0x168>
   1434c:	sub	w2, w2, #0xc
   14350:	lsl	x2, x9, x2
   14354:	b	13f54 <mpc_ui_ui_sub@@Base+0x17c>
   14358:	orr	x4, x4, x13
   1435c:	cmp	x4, #0x0
   14360:	cset	x3, ne  // ne = any
   14364:	b	13f24 <mpc_ui_ui_sub@@Base+0x14c>
   14368:	and	x3, x2, #0x8000000000000
   1436c:	mov	w0, #0x0                   	// #0
   14370:	cbz	w5, 13fd8 <mpc_ui_ui_sub@@Base+0x200>
   14374:	mov	w0, #0x0                   	// #0
   14378:	tbz	w15, #11, 13fd8 <mpc_ui_ui_sub@@Base+0x200>
   1437c:	orr	w0, w0, #0x8
   14380:	b	13fd8 <mpc_ui_ui_sub@@Base+0x200>
   14384:	add	x0, x8, #0x1
   14388:	tst	x0, #0x7ffe
   1438c:	b.ne	14594 <mpc_ui_ui_sub@@Base+0x7bc>  // b.any
   14390:	orr	x0, x2, x9
   14394:	cbnz	x8, 14750 <mpc_ui_ui_sub@@Base+0x978>
   14398:	orr	x8, x4, x13
   1439c:	cbz	x0, 147a4 <mpc_ui_ui_sub@@Base+0x9cc>
   143a0:	cbz	x8, 14690 <mpc_ui_ui_sub@@Base+0x8b8>
   143a4:	adds	x9, x9, x13
   143a8:	adc	x2, x4, x2
   143ac:	tbz	x2, #51, 1417c <mpc_ui_ui_sub@@Base+0x3a4>
   143b0:	and	x2, x2, #0xfff7ffffffffffff
   143b4:	and	x0, x9, #0x7
   143b8:	mov	x1, #0x1                   	// #1
   143bc:	b	13fac <mpc_ui_ui_sub@@Base+0x1d4>
   143c0:	mov	x1, #0x7fff                	// #32767
   143c4:	neg	w0, w0
   143c8:	orr	x2, x2, #0x8000000000000
   143cc:	cmp	x3, x1
   143d0:	b.eq	14048 <mpc_ui_ui_sub@@Base+0x270>  // b.none
   143d4:	cmp	w0, #0x74
   143d8:	b.gt	144e4 <mpc_ui_ui_sub@@Base+0x70c>
   143dc:	cmp	w0, #0x3f
   143e0:	b.gt	14700 <mpc_ui_ui_sub@@Base+0x928>
   143e4:	mov	w1, #0x40                  	// #64
   143e8:	sub	w1, w1, w0
   143ec:	lsr	x5, x9, x0
   143f0:	lsl	x9, x9, x1
   143f4:	cmp	x9, #0x0
   143f8:	lsl	x9, x2, x1
   143fc:	cset	x1, ne  // ne = any
   14400:	orr	x9, x9, x5
   14404:	lsr	x0, x2, x0
   14408:	orr	x9, x9, x1
   1440c:	sub	x4, x4, x0
   14410:	b	144f0 <mpc_ui_ui_sub@@Base+0x718>
   14414:	subs	x5, x9, x13
   14418:	cmp	x9, x13
   1441c:	sbc	x3, x2, x4
   14420:	tbnz	x3, #51, 145bc <mpc_ui_ui_sub@@Base+0x7e4>
   14424:	orr	x8, x5, x3
   14428:	cbnz	x8, 146e8 <mpc_ui_ui_sub@@Base+0x910>
   1442c:	and	x15, x15, #0xc00000
   14430:	mov	x2, #0x0                   	// #0
   14434:	cmp	x15, #0x800, lsl #12
   14438:	mov	x1, #0x0                   	// #0
   1443c:	cset	w7, eq  // eq = none
   14440:	b	14130 <mpc_ui_ui_sub@@Base+0x358>
   14444:	mov	x0, #0x7fff                	// #32767
   14448:	cmp	x8, x0
   1444c:	b.ne	14110 <mpc_ui_ui_sub@@Base+0x338>  // b.any
   14450:	orr	x0, x2, x9
   14454:	cbnz	x0, 142dc <mpc_ui_ui_sub@@Base+0x504>
   14458:	mov	x2, #0x0                   	// #0
   1445c:	mov	x8, #0x0                   	// #0
   14460:	mov	w0, #0x0                   	// #0
   14464:	b	14304 <mpc_ui_ui_sub@@Base+0x52c>
   14468:	orr	x4, x4, x13
   1446c:	cmp	x4, #0x0
   14470:	cset	x0, ne  // ne = any
   14474:	adds	x9, x0, x9
   14478:	cinc	x2, x2, cs  // cs = hs, nlast
   1447c:	b	141a0 <mpc_ui_ui_sub@@Base+0x3c8>
   14480:	mov	w4, #0x80                  	// #128
   14484:	sub	w4, w4, w0
   14488:	cmp	w0, #0x40
   1448c:	sub	w9, w1, #0x3f
   14490:	lsl	x0, x2, x4
   14494:	orr	x0, x3, x0
   14498:	csel	x3, x0, x3, ne  // ne = any
   1449c:	lsr	x9, x2, x9
   144a0:	cmp	x3, #0x0
   144a4:	mov	x2, #0x0                   	// #0
   144a8:	cset	x0, ne  // ne = any
   144ac:	orr	x9, x0, x9
   144b0:	mov	x8, x9
   144b4:	b	13f9c <mpc_ui_ui_sub@@Base+0x1c4>
   144b8:	mov	w5, #0x80                  	// #128
   144bc:	sub	w5, w5, w0
   144c0:	subs	w0, w0, #0x40
   144c4:	lsl	x5, x4, x5
   144c8:	orr	x5, x13, x5
   144cc:	csel	x13, x5, x13, ne  // ne = any
   144d0:	lsr	x4, x4, x0
   144d4:	cmp	x13, #0x0
   144d8:	cset	x3, ne  // ne = any
   144dc:	orr	x3, x3, x4
   144e0:	b	13f24 <mpc_ui_ui_sub@@Base+0x14c>
   144e4:	orr	x2, x2, x9
   144e8:	cmp	x2, #0x0
   144ec:	cset	x9, ne  // ne = any
   144f0:	subs	x9, x13, x9
   144f4:	mov	w7, w11
   144f8:	sbc	x2, x4, xzr
   144fc:	mov	x1, x3
   14500:	mov	x12, x14
   14504:	b	13f2c <mpc_ui_ui_sub@@Base+0x154>
   14508:	mov	x0, #0x7fff                	// #32767
   1450c:	neg	w5, w5
   14510:	orr	x2, x2, #0x8000000000000
   14514:	cmp	x3, x0
   14518:	b.eq	1426c <mpc_ui_ui_sub@@Base+0x494>  // b.none
   1451c:	cmp	w5, #0x74
   14520:	b.gt	146f0 <mpc_ui_ui_sub@@Base+0x918>
   14524:	cmp	w5, #0x3f
   14528:	b.gt	147b0 <mpc_ui_ui_sub@@Base+0x9d8>
   1452c:	mov	w1, #0x40                  	// #64
   14530:	sub	w1, w1, w5
   14534:	lsr	x6, x9, x5
   14538:	lsl	x9, x9, x1
   1453c:	cmp	x9, #0x0
   14540:	cset	x0, ne  // ne = any
   14544:	lsl	x9, x2, x1
   14548:	orr	x9, x9, x6
   1454c:	lsr	x5, x2, x5
   14550:	orr	x9, x9, x0
   14554:	add	x4, x4, x5
   14558:	adds	x9, x9, x13
   1455c:	mov	x1, x3
   14560:	cinc	x2, x4, cs  // cs = hs, nlast
   14564:	b	141a0 <mpc_ui_ui_sub@@Base+0x3c8>
   14568:	mov	w0, #0x80                  	// #128
   1456c:	sub	w0, w0, w5
   14570:	subs	w5, w5, #0x40
   14574:	lsl	x0, x4, x0
   14578:	orr	x0, x13, x0
   1457c:	csel	x13, x0, x13, ne  // ne = any
   14580:	lsr	x4, x4, x5
   14584:	cmp	x13, #0x0
   14588:	cset	x0, ne  // ne = any
   1458c:	orr	x0, x0, x4
   14590:	b	14474 <mpc_ui_ui_sub@@Base+0x69c>
   14594:	mov	x1, #0x7fff                	// #32767
   14598:	cmp	x0, x1
   1459c:	b.eq	147f8 <mpc_ui_ui_sub@@Base+0xa20>  // b.none
   145a0:	adds	x9, x9, x13
   145a4:	mov	x1, x0
   145a8:	adc	x2, x4, x2
   145ac:	ubfx	x0, x9, #1, #3
   145b0:	extr	x9, x2, x9, #1
   145b4:	lsr	x2, x2, #1
   145b8:	b	13fac <mpc_ui_ui_sub@@Base+0x1d4>
   145bc:	cmp	x13, x9
   145c0:	mov	w7, w11
   145c4:	sbc	x3, x4, x2
   145c8:	sub	x9, x13, x9
   145cc:	mov	x12, x14
   145d0:	b	13f34 <mpc_ui_ui_sub@@Base+0x15c>
   145d4:	mov	x12, #0x7fff                	// #32767
   145d8:	cmp	x1, x12
   145dc:	b.eq	14608 <mpc_ui_ui_sub@@Base+0x830>  // b.none
   145e0:	cmp	x3, x12
   145e4:	b.eq	14838 <mpc_ui_ui_sub@@Base+0xa60>  // b.none
   145e8:	cbnz	x5, 14620 <mpc_ui_ui_sub@@Base+0x848>
   145ec:	mov	w5, w0
   145f0:	cbnz	x8, 14918 <mpc_ui_ui_sub@@Base+0xb40>
   145f4:	mov	w7, #0x0                   	// #0
   145f8:	mov	x2, #0xffffffffffff        	// #281474976710655
   145fc:	mov	w0, #0x1                   	// #1
   14600:	mov	x8, #0xffffffffffffffff    	// #-1
   14604:	b	1430c <mpc_ui_ui_sub@@Base+0x534>
   14608:	cbz	x5, 14934 <mpc_ui_ui_sub@@Base+0xb5c>
   1460c:	lsr	x0, x2, #50
   14610:	cmp	x3, x1
   14614:	eor	x0, x0, #0x1
   14618:	and	w0, w0, #0x1
   1461c:	b.eq	14838 <mpc_ui_ui_sub@@Base+0xa60>  // b.none
   14620:	cbz	x8, 14854 <mpc_ui_ui_sub@@Base+0xa7c>
   14624:	bfi	x6, x2, #61, #3
   14628:	lsr	x3, x2, #3
   1462c:	tbz	x2, #50, 14648 <mpc_ui_ui_sub@@Base+0x870>
   14630:	lsr	x1, x4, #3
   14634:	tbnz	x4, #50, 14648 <mpc_ui_ui_sub@@Base+0x870>
   14638:	mov	x6, x10
   1463c:	mov	w7, w11
   14640:	bfi	x6, x4, #61, #3
   14644:	mov	x3, x1
   14648:	extr	x2, x3, x6, #61
   1464c:	bfi	x6, x2, #61, #3
   14650:	lsr	x2, x2, #3
   14654:	mov	x8, x6
   14658:	b	14304 <mpc_ui_ui_sub@@Base+0x52c>
   1465c:	mov	x0, #0x7fff                	// #32767
   14660:	cmp	x8, x0
   14664:	b.ne	14110 <mpc_ui_ui_sub@@Base+0x338>  // b.any
   14668:	orr	x0, x2, x9
   1466c:	cbz	x0, 14458 <mpc_ui_ui_sub@@Base+0x680>
   14670:	lsr	x5, x2, #50
   14674:	eor	w5, w5, #0x1
   14678:	b	142e8 <mpc_ui_ui_sub@@Base+0x510>
   1467c:	cbz	x8, 14790 <mpc_ui_ui_sub@@Base+0x9b8>
   14680:	mov	w7, w11
   14684:	mov	x2, x4
   14688:	mov	x9, x13
   1468c:	mov	x12, x14
   14690:	mov	x1, #0x0                   	// #0
   14694:	mov	x3, #0x0                   	// #0
   14698:	b	14374 <mpc_ui_ui_sub@@Base+0x59c>
   1469c:	ands	x3, x15, #0xc00000
   146a0:	b.eq	1472c <mpc_ui_ui_sub@@Base+0x954>  // b.none
   146a4:	cmp	x3, #0x400, lsl #12
   146a8:	eor	w0, w7, #0x1
   146ac:	cset	w1, eq  // eq = none
   146b0:	tst	w1, w0
   146b4:	b.ne	14950 <mpc_ui_ui_sub@@Base+0xb78>  // b.any
   146b8:	cmp	x3, #0x800, lsl #12
   146bc:	b.eq	148fc <mpc_ui_ui_sub@@Base+0xb24>  // b.none
   146c0:	cmp	x3, #0x400, lsl #12
   146c4:	mov	w0, #0x14                  	// #20
   146c8:	b.ne	141d8 <mpc_ui_ui_sub@@Base+0x400>  // b.any
   146cc:	mov	x2, #0xffffffffffffffff    	// #-1
   146d0:	mov	x1, #0x7ffe                	// #32766
   146d4:	mov	x9, x2
   146d8:	mov	w5, #0x0                   	// #0
   146dc:	mov	w0, #0x14                  	// #20
   146e0:	cbnz	x12, 1429c <mpc_ui_ui_sub@@Base+0x4c4>
   146e4:	b	14294 <mpc_ui_ui_sub@@Base+0x4bc>
   146e8:	mov	x9, x5
   146ec:	b	13f34 <mpc_ui_ui_sub@@Base+0x15c>
   146f0:	orr	x2, x2, x9
   146f4:	cmp	x2, #0x0
   146f8:	cset	x9, ne  // ne = any
   146fc:	b	14558 <mpc_ui_ui_sub@@Base+0x780>
   14700:	mov	w1, #0x80                  	// #128
   14704:	sub	w1, w1, w0
   14708:	subs	w0, w0, #0x40
   1470c:	lsl	x1, x2, x1
   14710:	orr	x1, x9, x1
   14714:	csel	x9, x1, x9, ne  // ne = any
   14718:	lsr	x2, x2, x0
   1471c:	cmp	x9, #0x0
   14720:	cset	x9, ne  // ne = any
   14724:	orr	x9, x9, x2
   14728:	b	144f0 <mpc_ui_ui_sub@@Base+0x718>
   1472c:	mov	w0, #0x14                  	// #20
   14730:	b	1421c <mpc_ui_ui_sub@@Base+0x444>
   14734:	lsr	x5, x4, #50
   14738:	mov	w7, w11
   1473c:	eor	x5, x5, #0x1
   14740:	mov	x9, x13
   14744:	and	w5, w5, #0x1
   14748:	mov	x2, x4
   1474c:	b	142e8 <mpc_ui_ui_sub@@Base+0x510>
   14750:	mov	x8, #0x7fff                	// #32767
   14754:	cmp	x1, x8
   14758:	b.eq	14878 <mpc_ui_ui_sub@@Base+0xaa0>  // b.none
   1475c:	cmp	x3, x8
   14760:	b.eq	148ec <mpc_ui_ui_sub@@Base+0xb14>  // b.none
   14764:	cbnz	x0, 14890 <mpc_ui_ui_sub@@Base+0xab8>
   14768:	mov	x2, x4
   1476c:	mov	x9, x13
   14770:	b	142e8 <mpc_ui_ui_sub@@Base+0x510>
   14774:	mov	x0, #0x7fff                	// #32767
   14778:	cmp	x3, x0
   1477c:	b.eq	14928 <mpc_ui_ui_sub@@Base+0xb50>  // b.none
   14780:	mov	x2, x4
   14784:	mov	x9, x13
   14788:	mov	x1, x3
   1478c:	b	14110 <mpc_ui_ui_sub@@Base+0x338>
   14790:	and	x15, x15, #0xc00000
   14794:	mov	x2, #0x0                   	// #0
   14798:	cmp	x15, #0x800, lsl #12
   1479c:	cset	w7, eq  // eq = none
   147a0:	b	14130 <mpc_ui_ui_sub@@Base+0x358>
   147a4:	mov	x2, x4
   147a8:	mov	x9, x13
   147ac:	b	13f9c <mpc_ui_ui_sub@@Base+0x1c4>
   147b0:	mov	w0, #0x80                  	// #128
   147b4:	sub	w0, w0, w5
   147b8:	subs	w5, w5, #0x40
   147bc:	lsl	x0, x2, x0
   147c0:	orr	x0, x9, x0
   147c4:	csel	x9, x0, x9, ne  // ne = any
   147c8:	lsr	x2, x2, x5
   147cc:	cmp	x9, #0x0
   147d0:	cset	x9, ne  // ne = any
   147d4:	orr	x9, x9, x2
   147d8:	b	14558 <mpc_ui_ui_sub@@Base+0x780>
   147dc:	cmp	x13, x9
   147e0:	mov	w7, w11
   147e4:	sbc	x2, x4, x2
   147e8:	sub	x9, x13, x9
   147ec:	mov	x1, x3
   147f0:	mov	x12, x5
   147f4:	b	13f2c <mpc_ui_ui_sub@@Base+0x154>
   147f8:	ands	x3, x15, #0xc00000
   147fc:	b.eq	1472c <mpc_ui_ui_sub@@Base+0x954>  // b.none
   14800:	cmp	x3, #0x400, lsl #12
   14804:	eor	w0, w7, #0x1
   14808:	csel	w0, w0, wzr, eq  // eq = none
   1480c:	cbnz	w0, 14950 <mpc_ui_ui_sub@@Base+0xb78>
   14810:	cmp	x3, #0x800, lsl #12
   14814:	b.ne	146c0 <mpc_ui_ui_sub@@Base+0x8e8>  // b.any
   14818:	cbz	x12, 14900 <mpc_ui_ui_sub@@Base+0xb28>
   1481c:	mov	w0, #0x14                  	// #20
   14820:	mov	x16, #0x1                   	// #1
   14824:	b	1421c <mpc_ui_ui_sub@@Base+0x444>
   14828:	orr	x0, x4, x13
   1482c:	cbnz	x0, 14734 <mpc_ui_ui_sub@@Base+0x95c>
   14830:	mov	w7, w11
   14834:	b	14458 <mpc_ui_ui_sub@@Base+0x680>
   14838:	cbz	x8, 14944 <mpc_ui_ui_sub@@Base+0xb6c>
   1483c:	tst	x4, #0x4000000000000
   14840:	csinc	w0, w0, wzr, ne  // ne = any
   14844:	cbnz	x5, 14624 <mpc_ui_ui_sub@@Base+0x84c>
   14848:	mov	w7, w11
   1484c:	mov	x2, x4
   14850:	mov	x9, x13
   14854:	mov	w5, w0
   14858:	b	142e8 <mpc_ui_ui_sub@@Base+0x510>
   1485c:	orr	x8, x5, x3
   14860:	cbz	x8, 14790 <mpc_ui_ui_sub@@Base+0x9b8>
   14864:	and	x0, x5, #0x7
   14868:	mov	x9, x5
   1486c:	mov	x2, x3
   14870:	mov	w5, #0x1                   	// #1
   14874:	b	13fac <mpc_ui_ui_sub@@Base+0x1d4>
   14878:	cbz	x0, 148e4 <mpc_ui_ui_sub@@Base+0xb0c>
   1487c:	lsr	x5, x2, #50
   14880:	cmp	x3, x1
   14884:	eor	x5, x5, #0x1
   14888:	and	w5, w5, #0x1
   1488c:	b.eq	1495c <mpc_ui_ui_sub@@Base+0xb84>  // b.none
   14890:	orr	x13, x4, x13
   14894:	cbz	x13, 142e8 <mpc_ui_ui_sub@@Base+0x510>
   14898:	bfi	x6, x2, #61, #3
   1489c:	lsr	x0, x2, #3
   148a0:	tbz	x2, #50, 148bc <mpc_ui_ui_sub@@Base+0xae4>
   148a4:	lsr	x1, x4, #3
   148a8:	tbnz	x4, #50, 148bc <mpc_ui_ui_sub@@Base+0xae4>
   148ac:	and	x6, x10, #0x1fffffffffffffff
   148b0:	mov	w7, w11
   148b4:	orr	x6, x6, x4, lsl #61
   148b8:	mov	x0, x1
   148bc:	extr	x2, x0, x6, #61
   148c0:	mov	w0, w5
   148c4:	bfi	x6, x2, #61, #3
   148c8:	lsr	x2, x2, #3
   148cc:	mov	x8, x6
   148d0:	b	14304 <mpc_ui_ui_sub@@Base+0x52c>
   148d4:	adds	x9, x9, x13
   148d8:	mov	x1, x3
   148dc:	adc	x2, x4, x2
   148e0:	b	141a0 <mpc_ui_ui_sub@@Base+0x3c8>
   148e4:	cmp	x3, x1
   148e8:	b.ne	14768 <mpc_ui_ui_sub@@Base+0x990>  // b.any
   148ec:	orr	x1, x4, x13
   148f0:	cbnz	x1, 14964 <mpc_ui_ui_sub@@Base+0xb8c>
   148f4:	cbz	x0, 14458 <mpc_ui_ui_sub@@Base+0x680>
   148f8:	b	142e8 <mpc_ui_ui_sub@@Base+0x510>
   148fc:	cbnz	x16, 1481c <mpc_ui_ui_sub@@Base+0xa44>
   14900:	mov	x2, #0xffffffffffffffff    	// #-1
   14904:	mov	w7, #0x0                   	// #0
   14908:	mov	x9, x2
   1490c:	mov	x1, #0x7ffe                	// #32766
   14910:	mov	w0, #0x14                  	// #20
   14914:	b	13fdc <mpc_ui_ui_sub@@Base+0x204>
   14918:	mov	w7, w11
   1491c:	mov	x2, x4
   14920:	mov	x9, x13
   14924:	b	142e8 <mpc_ui_ui_sub@@Base+0x510>
   14928:	orr	x0, x4, x13
   1492c:	cbz	x0, 14458 <mpc_ui_ui_sub@@Base+0x680>
   14930:	b	14274 <mpc_ui_ui_sub@@Base+0x49c>
   14934:	cmp	x3, x1
   14938:	b.eq	14838 <mpc_ui_ui_sub@@Base+0xa60>  // b.none
   1493c:	mov	w5, #0x0                   	// #0
   14940:	b	145f0 <mpc_ui_ui_sub@@Base+0x818>
   14944:	cbnz	x5, 14854 <mpc_ui_ui_sub@@Base+0xa7c>
   14948:	mov	w5, w0
   1494c:	b	145f0 <mpc_ui_ui_sub@@Base+0x818>
   14950:	mov	w0, #0x14                  	// #20
   14954:	mov	x16, #0x0                   	// #0
   14958:	b	1421c <mpc_ui_ui_sub@@Base+0x444>
   1495c:	orr	x1, x4, x13
   14960:	cbz	x1, 142e8 <mpc_ui_ui_sub@@Base+0x510>
   14964:	tst	x4, #0x4000000000000
   14968:	csinc	w5, w5, wzr, ne  // ne = any
   1496c:	cbnz	x0, 14898 <mpc_ui_ui_sub@@Base+0xac0>
   14970:	b	14768 <mpc_ui_ui_sub@@Base+0x990>
   14974:	mov	x8, #0x0                   	// #0
   14978:	mov	w1, #0x7fff                	// #32767
   1497c:	mov	x2, #0x0                   	// #0
   14980:	b	13ff8 <mpc_ui_ui_sub@@Base+0x220>
   14984:	nop
   14988:	stp	x29, x30, [sp, #-80]!
   1498c:	mov	x29, sp
   14990:	str	q0, [sp, #48]
   14994:	str	q1, [sp, #64]
   14998:	ldp	x1, x0, [sp, #48]
   1499c:	ldp	x6, x2, [sp, #64]
   149a0:	mrs	x11, fpcr
   149a4:	lsr	x3, x0, #63
   149a8:	ubfx	x7, x0, #0, #48
   149ac:	and	w12, w3, #0xff
   149b0:	mov	x14, x3
   149b4:	ubfx	x3, x0, #48, #15
   149b8:	cbz	w3, 14d60 <mpc_ui_ui_sub@@Base+0xf88>
   149bc:	mov	w4, #0x7fff                	// #32767
   149c0:	cmp	w3, w4
   149c4:	b.eq	14e04 <mpc_ui_ui_sub@@Base+0x102c>  // b.none
   149c8:	and	x3, x3, #0xffff
   149cc:	extr	x4, x7, x1, #61
   149d0:	mov	x18, #0xffffffffffffc001    	// #-16383
   149d4:	orr	x7, x4, #0x8000000000000
   149d8:	add	x3, x3, x18
   149dc:	lsl	x5, x1, #3
   149e0:	mov	x16, #0x0                   	// #0
   149e4:	mov	x1, #0x0                   	// #0
   149e8:	mov	w0, #0x0                   	// #0
   149ec:	lsr	x8, x2, #63
   149f0:	ubfx	x4, x2, #0, #48
   149f4:	and	w15, w8, #0xff
   149f8:	mov	x13, x8
   149fc:	ubfx	x9, x2, #48, #15
   14a00:	cbz	w9, 14dc0 <mpc_ui_ui_sub@@Base+0xfe8>
   14a04:	mov	w8, #0x7fff                	// #32767
   14a08:	cmp	w9, w8
   14a0c:	b.eq	14a90 <mpc_ui_ui_sub@@Base+0xcb8>  // b.none
   14a10:	and	x9, x9, #0xffff
   14a14:	mov	x17, #0xffffffffffffc001    	// #-16383
   14a18:	add	x9, x9, x17
   14a1c:	extr	x2, x4, x6, #61
   14a20:	add	x9, x9, x3
   14a24:	lsl	x6, x6, #3
   14a28:	orr	x4, x2, #0x8000000000000
   14a2c:	mov	x2, #0x0                   	// #0
   14a30:	eor	w8, w12, w15
   14a34:	cmp	x1, #0xa
   14a38:	and	w10, w8, #0xff
   14a3c:	add	x3, x9, #0x1
   14a40:	and	x8, x8, #0xff
   14a44:	b.le	14ac8 <mpc_ui_ui_sub@@Base+0xcf0>
   14a48:	cmp	x1, #0xb
   14a4c:	b.eq	15160 <mpc_ui_ui_sub@@Base+0x1388>  // b.none
   14a50:	mov	w15, w12
   14a54:	mov	x13, x14
   14a58:	mov	w10, w15
   14a5c:	cmp	x16, #0x2
   14a60:	b.eq	14e24 <mpc_ui_ui_sub@@Base+0x104c>  // b.none
   14a64:	mov	x4, x7
   14a68:	mov	x6, x5
   14a6c:	mov	x2, x16
   14a70:	mov	x8, x13
   14a74:	cmp	x2, #0x3
   14a78:	b.ne	14ae4 <mpc_ui_ui_sub@@Base+0xd0c>  // b.any
   14a7c:	orr	x4, x4, #0x800000000000
   14a80:	mov	x5, x6
   14a84:	and	x4, x4, #0xffffffffffff
   14a88:	mov	w1, #0x7fff                	// #32767
   14a8c:	b	14af8 <mpc_ui_ui_sub@@Base+0xd20>
   14a90:	mov	x8, #0x7fff                	// #32767
   14a94:	orr	x2, x4, x6
   14a98:	add	x9, x3, x8
   14a9c:	cbnz	x2, 14b1c <mpc_ui_ui_sub@@Base+0xd44>
   14aa0:	eor	w8, w12, w15
   14aa4:	orr	x1, x1, #0x2
   14aa8:	and	w10, w8, #0xff
   14aac:	cmp	x1, #0xa
   14ab0:	add	x3, x3, #0x8, lsl #12
   14ab4:	and	x8, x8, #0xff
   14ab8:	mov	x6, #0x0                   	// #0
   14abc:	b.gt	150d4 <mpc_ui_ui_sub@@Base+0x12fc>
   14ac0:	mov	x4, #0x0                   	// #0
   14ac4:	mov	x2, #0x2                   	// #2
   14ac8:	cmp	x1, #0x2
   14acc:	b.gt	14b44 <mpc_ui_ui_sub@@Base+0xd6c>
   14ad0:	sub	x1, x1, #0x1
   14ad4:	cmp	x1, #0x1
   14ad8:	b.hi	14b80 <mpc_ui_ui_sub@@Base+0xda8>  // b.pmore
   14adc:	cmp	x2, #0x2
   14ae0:	b.eq	14e24 <mpc_ui_ui_sub@@Base+0x104c>  // b.none
   14ae4:	cmp	x2, #0x1
   14ae8:	b.ne	14ce0 <mpc_ui_ui_sub@@Base+0xf08>  // b.any
   14aec:	mov	w1, #0x0                   	// #0
   14af0:	mov	x4, #0x0                   	// #0
   14af4:	mov	x5, #0x0                   	// #0
   14af8:	mov	x3, #0x0                   	// #0
   14afc:	orr	w1, w1, w10, lsl #15
   14b00:	bfxil	x3, x4, #0, #48
   14b04:	fmov	d0, x5
   14b08:	bfi	x3, x1, #48, #16
   14b0c:	fmov	v0.d[1], x3
   14b10:	cbnz	w0, 14f50 <mpc_ui_ui_sub@@Base+0x1178>
   14b14:	ldp	x29, x30, [sp], #80
   14b18:	ret
   14b1c:	tst	x4, #0x800000000000
   14b20:	eor	w8, w12, w15
   14b24:	orr	x1, x1, #0x3
   14b28:	csinc	w0, w0, wzr, ne  // ne = any
   14b2c:	and	w10, w8, #0xff
   14b30:	add	x3, x3, #0x8, lsl #12
   14b34:	cmp	x1, #0xa
   14b38:	and	x8, x8, #0xff
   14b3c:	mov	x2, #0x3                   	// #3
   14b40:	b.gt	15154 <mpc_ui_ui_sub@@Base+0x137c>
   14b44:	mov	x12, #0x1                   	// #1
   14b48:	mov	x14, #0x530                 	// #1328
   14b4c:	lsl	x1, x12, x1
   14b50:	tst	x1, x14
   14b54:	b.ne	14d54 <mpc_ui_ui_sub@@Base+0xf7c>  // b.any
   14b58:	mov	x14, #0x240                 	// #576
   14b5c:	tst	x1, x14
   14b60:	b.ne	14d3c <mpc_ui_ui_sub@@Base+0xf64>  // b.any
   14b64:	mov	x12, #0x88                  	// #136
   14b68:	tst	x1, x12
   14b6c:	b.eq	14b80 <mpc_ui_ui_sub@@Base+0xda8>  // b.none
   14b70:	mov	x7, x4
   14b74:	mov	x5, x6
   14b78:	mov	x16, x2
   14b7c:	b	14a58 <mpc_ui_ui_sub@@Base+0xc80>
   14b80:	lsr	x13, x5, #32
   14b84:	and	x12, x6, #0xffffffff
   14b88:	and	x15, x5, #0xffffffff
   14b8c:	lsr	x6, x6, #32
   14b90:	and	x18, x4, #0xffffffff
   14b94:	lsr	x2, x4, #32
   14b98:	mul	x4, x13, x12
   14b9c:	stp	x21, x22, [sp, #32]
   14ba0:	lsr	x22, x7, #32
   14ba4:	and	x5, x7, #0xffffffff
   14ba8:	mul	x16, x12, x15
   14bac:	madd	x7, x6, x15, x4
   14bb0:	stp	x19, x20, [sp, #16]
   14bb4:	mul	x1, x13, x18
   14bb8:	mul	x17, x15, x18
   14bbc:	and	x30, x16, #0xffffffff
   14bc0:	madd	x15, x2, x15, x1
   14bc4:	add	x16, x7, x16, lsr #32
   14bc8:	mul	x21, x22, x12
   14bcc:	cmp	x4, x16
   14bd0:	mul	x20, x22, x18
   14bd4:	mov	x14, #0x100000000           	// #4294967296
   14bd8:	mul	x19, x13, x6
   14bdc:	add	x15, x15, x17, lsr #32
   14be0:	mul	x12, x12, x5
   14be4:	and	x17, x17, #0xffffffff
   14be8:	mul	x18, x5, x18
   14bec:	add	x4, x19, x14
   14bf0:	madd	x7, x6, x5, x21
   14bf4:	csel	x19, x4, x19, hi  // hi = pmore
   14bf8:	madd	x5, x2, x5, x20
   14bfc:	cmp	x1, x15
   14c00:	mul	x13, x13, x2
   14c04:	add	x17, x17, x15, lsl #32
   14c08:	mul	x6, x6, x22
   14c0c:	add	x7, x7, x12, lsr #32
   14c10:	add	x5, x5, x18, lsr #32
   14c14:	add	x4, x13, x14
   14c18:	mul	x2, x2, x22
   14c1c:	csel	x13, x4, x13, hi  // hi = pmore
   14c20:	and	x1, x18, #0xffffffff
   14c24:	cmp	x21, x7
   14c28:	add	x4, x6, x14
   14c2c:	add	x30, x30, x16, lsl #32
   14c30:	csel	x6, x4, x6, hi  // hi = pmore
   14c34:	add	x13, x13, x15, lsr #32
   14c38:	cmp	x20, x5
   14c3c:	add	x1, x1, x5, lsl #32
   14c40:	add	x16, x17, x16, lsr #32
   14c44:	add	x14, x2, x14
   14c48:	csel	x2, x14, x2, hi  // hi = pmore
   14c4c:	add	x16, x19, x16
   14c50:	adds	x1, x1, x13
   14c54:	and	x12, x12, #0xffffffff
   14c58:	cset	x13, cs  // cs = hs, nlast
   14c5c:	cmp	x16, x17
   14c60:	cset	x4, cc  // cc = lo, ul, last
   14c64:	add	x12, x12, x7, lsl #32
   14c68:	adds	x1, x1, x4
   14c6c:	lsr	x5, x5, #32
   14c70:	cset	x4, cs  // cs = hs, nlast
   14c74:	cmp	x13, #0x0
   14c78:	ccmp	x4, #0x0, #0x0, eq  // eq = none
   14c7c:	add	x7, x6, x7, lsr #32
   14c80:	cinc	x5, x5, ne  // ne = any
   14c84:	adds	x6, x16, x12
   14c88:	cset	x4, cs  // cs = hs, nlast
   14c8c:	adds	x1, x1, x7
   14c90:	cset	x7, cs  // cs = hs, nlast
   14c94:	adds	x4, x1, x4
   14c98:	cset	x1, cs  // cs = hs, nlast
   14c9c:	cmp	x7, #0x0
   14ca0:	orr	x30, x30, x6, lsl #13
   14ca4:	ccmp	x1, #0x0, #0x0, eq  // eq = none
   14ca8:	cinc	x1, x2, ne  // ne = any
   14cac:	cmp	x30, #0x0
   14cb0:	add	x1, x1, x5
   14cb4:	cset	x2, ne  // ne = any
   14cb8:	orr	x6, x2, x6, lsr #51
   14cbc:	orr	x6, x6, x4, lsl #13
   14cc0:	extr	x4, x1, x4, #51
   14cc4:	tbz	x1, #39, 14fd8 <mpc_ui_ui_sub@@Base+0x1200>
   14cc8:	ldp	x19, x20, [sp, #16]
   14ccc:	and	x1, x6, #0x1
   14cd0:	ldp	x21, x22, [sp, #32]
   14cd4:	orr	x6, x1, x6, lsr #1
   14cd8:	orr	x6, x6, x4, lsl #63
   14cdc:	lsr	x4, x4, #1
   14ce0:	mov	x1, #0x3fff                	// #16383
   14ce4:	add	x2, x3, x1
   14ce8:	cmp	x2, #0x0
   14cec:	b.le	14e84 <mpc_ui_ui_sub@@Base+0x10ac>
   14cf0:	tst	x6, #0x7
   14cf4:	b.eq	14d14 <mpc_ui_ui_sub@@Base+0xf3c>  // b.none
   14cf8:	and	x1, x11, #0xc00000
   14cfc:	orr	w0, w0, #0x10
   14d00:	cmp	x1, #0x400, lsl #12
   14d04:	b.eq	150cc <mpc_ui_ui_sub@@Base+0x12f4>  // b.none
   14d08:	cmp	x1, #0x800, lsl #12
   14d0c:	b.eq	15074 <mpc_ui_ui_sub@@Base+0x129c>  // b.none
   14d10:	cbz	x1, 1505c <mpc_ui_ui_sub@@Base+0x1284>
   14d14:	tbz	x4, #52, 14d20 <mpc_ui_ui_sub@@Base+0xf48>
   14d18:	and	x4, x4, #0xffefffffffffffff
   14d1c:	add	x2, x3, #0x4, lsl #12
   14d20:	mov	x1, #0x7ffe                	// #32766
   14d24:	cmp	x2, x1
   14d28:	b.gt	14fac <mpc_ui_ui_sub@@Base+0x11d4>
   14d2c:	and	w1, w2, #0x7fff
   14d30:	extr	x5, x4, x6, #3
   14d34:	ubfx	x4, x4, #3, #48
   14d38:	b	14af8 <mpc_ui_ui_sub@@Base+0xd20>
   14d3c:	mov	w0, w12
   14d40:	mov	w10, #0x0                   	// #0
   14d44:	mov	x4, #0xffffffffffff        	// #281474976710655
   14d48:	mov	x5, #0xffffffffffffffff    	// #-1
   14d4c:	mov	w1, #0x7fff                	// #32767
   14d50:	b	14af8 <mpc_ui_ui_sub@@Base+0xd20>
   14d54:	mov	w15, w10
   14d58:	mov	x13, x8
   14d5c:	b	14a58 <mpc_ui_ui_sub@@Base+0xc80>
   14d60:	orr	x5, x7, x1
   14d64:	cbz	x5, 14e6c <mpc_ui_ui_sub@@Base+0x1094>
   14d68:	cbz	x7, 14f88 <mpc_ui_ui_sub@@Base+0x11b0>
   14d6c:	clz	x0, x7
   14d70:	sub	x4, x0, #0xf
   14d74:	add	w5, w4, #0x3
   14d78:	mov	w3, #0x3d                  	// #61
   14d7c:	sub	w3, w3, w4
   14d80:	lsl	x4, x7, x5
   14d84:	lsr	x3, x1, x3
   14d88:	orr	x7, x3, x4
   14d8c:	lsl	x5, x1, x5
   14d90:	lsr	x8, x2, #63
   14d94:	mov	x3, #0xffffffffffffc011    	// #-16367
   14d98:	ubfx	x4, x2, #0, #48
   14d9c:	sub	x3, x3, x0
   14da0:	and	w15, w8, #0xff
   14da4:	mov	x13, x8
   14da8:	ubfx	x9, x2, #48, #15
   14dac:	mov	x1, #0x0                   	// #0
   14db0:	mov	x16, #0x0                   	// #0
   14db4:	mov	w0, #0x0                   	// #0
   14db8:	cbnz	w9, 14a04 <mpc_ui_ui_sub@@Base+0xc2c>
   14dbc:	nop
   14dc0:	orr	x2, x4, x6
   14dc4:	cbz	x2, 14e34 <mpc_ui_ui_sub@@Base+0x105c>
   14dc8:	cbz	x4, 14f64 <mpc_ui_ui_sub@@Base+0x118c>
   14dcc:	clz	x9, x4
   14dd0:	sub	x2, x9, #0xf
   14dd4:	add	w10, w2, #0x3
   14dd8:	mov	w8, #0x3d                  	// #61
   14ddc:	sub	w8, w8, w2
   14de0:	lsl	x2, x4, x10
   14de4:	lsr	x8, x6, x8
   14de8:	orr	x4, x8, x2
   14dec:	lsl	x6, x6, x10
   14df0:	sub	x9, x3, x9
   14df4:	mov	x10, #0xffffffffffffc011    	// #-16367
   14df8:	mov	x2, #0x0                   	// #0
   14dfc:	add	x9, x9, x10
   14e00:	b	14a30 <mpc_ui_ui_sub@@Base+0xc58>
   14e04:	orr	x5, x7, x1
   14e08:	cbnz	x5, 14e4c <mpc_ui_ui_sub@@Base+0x1074>
   14e0c:	mov	x7, #0x0                   	// #0
   14e10:	mov	x1, #0x8                   	// #8
   14e14:	mov	x3, #0x7fff                	// #32767
   14e18:	mov	x16, #0x2                   	// #2
   14e1c:	mov	w0, #0x0                   	// #0
   14e20:	b	149ec <mpc_ui_ui_sub@@Base+0xc14>
   14e24:	mov	w1, #0x7fff                	// #32767
   14e28:	mov	x4, #0x0                   	// #0
   14e2c:	mov	x5, #0x0                   	// #0
   14e30:	b	14af8 <mpc_ui_ui_sub@@Base+0xd20>
   14e34:	orr	x1, x1, #0x1
   14e38:	mov	x9, x3
   14e3c:	mov	x4, #0x0                   	// #0
   14e40:	mov	x6, #0x0                   	// #0
   14e44:	mov	x2, #0x1                   	// #1
   14e48:	b	14a30 <mpc_ui_ui_sub@@Base+0xc58>
   14e4c:	lsr	x0, x7, #47
   14e50:	mov	x5, x1
   14e54:	eor	x0, x0, #0x1
   14e58:	mov	x1, #0xc                   	// #12
   14e5c:	and	w0, w0, #0x1
   14e60:	mov	x3, #0x7fff                	// #32767
   14e64:	mov	x16, #0x3                   	// #3
   14e68:	b	149ec <mpc_ui_ui_sub@@Base+0xc14>
   14e6c:	mov	x7, #0x0                   	// #0
   14e70:	mov	x1, #0x4                   	// #4
   14e74:	mov	x3, #0x0                   	// #0
   14e78:	mov	x16, #0x1                   	// #1
   14e7c:	mov	w0, #0x0                   	// #0
   14e80:	b	149ec <mpc_ui_ui_sub@@Base+0xc14>
   14e84:	mov	x1, #0x1                   	// #1
   14e88:	sub	x2, x1, x2
   14e8c:	cmp	x2, #0x74
   14e90:	b.gt	14f08 <mpc_ui_ui_sub@@Base+0x1130>
   14e94:	cmp	x2, #0x3f
   14e98:	b.le	14fe8 <mpc_ui_ui_sub@@Base+0x1210>
   14e9c:	mov	w1, #0x80                  	// #128
   14ea0:	sub	w1, w1, w2
   14ea4:	cmp	x2, #0x40
   14ea8:	sub	w2, w2, #0x40
   14eac:	lsl	x1, x4, x1
   14eb0:	orr	x1, x6, x1
   14eb4:	csel	x6, x1, x6, ne  // ne = any
   14eb8:	lsr	x2, x4, x2
   14ebc:	cmp	x6, #0x0
   14ec0:	cset	x5, ne  // ne = any
   14ec4:	orr	x5, x5, x2
   14ec8:	ands	x2, x5, #0x7
   14ecc:	b.eq	1501c <mpc_ui_ui_sub@@Base+0x1244>  // b.none
   14ed0:	mov	x2, #0x0                   	// #0
   14ed4:	and	x11, x11, #0xc00000
   14ed8:	orr	w0, w0, #0x10
   14edc:	cmp	x11, #0x400, lsl #12
   14ee0:	b.eq	1512c <mpc_ui_ui_sub@@Base+0x1354>  // b.none
   14ee4:	cmp	x11, #0x800, lsl #12
   14ee8:	b.eq	15140 <mpc_ui_ui_sub@@Base+0x1368>  // b.none
   14eec:	cbz	x11, 15084 <mpc_ui_ui_sub@@Base+0x12ac>
   14ef0:	tbnz	x2, #51, 1509c <mpc_ui_ui_sub@@Base+0x12c4>
   14ef4:	ubfx	x4, x2, #3, #48
   14ef8:	extr	x5, x2, x5, #3
   14efc:	orr	w0, w0, #0x8
   14f00:	mov	w1, #0x0                   	// #0
   14f04:	b	14f38 <mpc_ui_ui_sub@@Base+0x1160>
   14f08:	orr	x5, x6, x4
   14f0c:	cbz	x5, 14f2c <mpc_ui_ui_sub@@Base+0x1154>
   14f10:	and	x11, x11, #0xc00000
   14f14:	orr	w0, w0, #0x10
   14f18:	cmp	x11, #0x400, lsl #12
   14f1c:	sub	x5, x1, x8
   14f20:	b.eq	14f2c <mpc_ui_ui_sub@@Base+0x1154>  // b.none
   14f24:	cmp	x11, #0x800, lsl #12
   14f28:	csel	x5, x8, xzr, eq  // eq = none
   14f2c:	orr	w0, w0, #0x8
   14f30:	mov	w1, #0x0                   	// #0
   14f34:	mov	x4, #0x0                   	// #0
   14f38:	mov	x3, #0x0                   	// #0
   14f3c:	fmov	d0, x5
   14f40:	bfxil	x3, x4, #0, #48
   14f44:	bfi	x3, x1, #48, #15
   14f48:	bfi	x3, x10, #63, #1
   14f4c:	fmov	v0.d[1], x3
   14f50:	str	q0, [sp, #48]
   14f54:	bl	15170 <mpc_ui_ui_sub@@Base+0x1398>
   14f58:	ldr	q0, [sp, #48]
   14f5c:	ldp	x29, x30, [sp], #80
   14f60:	ret
   14f64:	clz	x9, x6
   14f68:	add	x2, x9, #0x31
   14f6c:	add	x9, x9, #0x40
   14f70:	cmp	x2, #0x3c
   14f74:	b.le	14dd4 <mpc_ui_ui_sub@@Base+0xffc>
   14f78:	sub	w2, w2, #0x3d
   14f7c:	lsl	x4, x6, x2
   14f80:	mov	x6, #0x0                   	// #0
   14f84:	b	14df0 <mpc_ui_ui_sub@@Base+0x1018>
   14f88:	clz	x3, x1
   14f8c:	add	x4, x3, #0x31
   14f90:	add	x0, x3, #0x40
   14f94:	cmp	x4, #0x3c
   14f98:	b.le	14d74 <mpc_ui_ui_sub@@Base+0xf9c>
   14f9c:	sub	w4, w4, #0x3d
   14fa0:	mov	x5, #0x0                   	// #0
   14fa4:	lsl	x7, x1, x4
   14fa8:	b	14d90 <mpc_ui_ui_sub@@Base+0xfb8>
   14fac:	and	x5, x11, #0xc00000
   14fb0:	cmp	x5, #0x400, lsl #12
   14fb4:	b.eq	150b0 <mpc_ui_ui_sub@@Base+0x12d8>  // b.none
   14fb8:	cmp	x5, #0x800, lsl #12
   14fbc:	b.eq	15040 <mpc_ui_ui_sub@@Base+0x1268>  // b.none
   14fc0:	cbz	x5, 15034 <mpc_ui_ui_sub@@Base+0x125c>
   14fc4:	mov	x4, #0xffffffffffff        	// #281474976710655
   14fc8:	mov	x5, #0xffffffffffffffff    	// #-1
   14fcc:	mov	w2, #0x14                  	// #20
   14fd0:	orr	w0, w0, w2
   14fd4:	b	14f38 <mpc_ui_ui_sub@@Base+0x1160>
   14fd8:	mov	x3, x9
   14fdc:	ldp	x19, x20, [sp, #16]
   14fe0:	ldp	x21, x22, [sp, #32]
   14fe4:	b	14ce0 <mpc_ui_ui_sub@@Base+0xf08>
   14fe8:	mov	w1, #0x40                  	// #64
   14fec:	sub	w1, w1, w2
   14ff0:	lsr	x3, x6, x2
   14ff4:	lsl	x6, x6, x1
   14ff8:	cmp	x6, #0x0
   14ffc:	lsl	x5, x4, x1
   15000:	cset	x1, ne  // ne = any
   15004:	orr	x5, x5, x3
   15008:	lsr	x2, x4, x2
   1500c:	orr	x5, x5, x1
   15010:	tst	x5, #0x7
   15014:	b.ne	14ed4 <mpc_ui_ui_sub@@Base+0x10fc>  // b.any
   15018:	tbnz	x2, #51, 1514c <mpc_ui_ui_sub@@Base+0x1374>
   1501c:	ubfx	x4, x2, #3, #48
   15020:	extr	x5, x2, x5, #3
   15024:	mov	w1, #0x0                   	// #0
   15028:	tbz	w11, #11, 14af8 <mpc_ui_ui_sub@@Base+0xd20>
   1502c:	orr	w0, w0, #0x8
   15030:	b	14f38 <mpc_ui_ui_sub@@Base+0x1160>
   15034:	mov	w1, #0x7fff                	// #32767
   15038:	mov	x4, #0x0                   	// #0
   1503c:	b	14fcc <mpc_ui_ui_sub@@Base+0x11f4>
   15040:	cmp	x8, #0x0
   15044:	mov	w2, #0x7fff                	// #32767
   15048:	mov	x4, #0xffffffffffff        	// #281474976710655
   1504c:	csel	w1, w1, w2, eq  // eq = none
   15050:	csel	x4, x4, xzr, eq  // eq = none
   15054:	csetm	x5, eq  // eq = none
   15058:	b	14fcc <mpc_ui_ui_sub@@Base+0x11f4>
   1505c:	and	x1, x6, #0xf
   15060:	cmp	x1, #0x4
   15064:	b.eq	14d14 <mpc_ui_ui_sub@@Base+0xf3c>  // b.none
   15068:	adds	x6, x6, #0x4
   1506c:	cinc	x4, x4, cs  // cs = hs, nlast
   15070:	b	14d14 <mpc_ui_ui_sub@@Base+0xf3c>
   15074:	cbz	x8, 14d14 <mpc_ui_ui_sub@@Base+0xf3c>
   15078:	adds	x6, x6, #0x8
   1507c:	cinc	x4, x4, cs  // cs = hs, nlast
   15080:	b	14d14 <mpc_ui_ui_sub@@Base+0xf3c>
   15084:	and	x1, x5, #0xf
   15088:	cmp	x1, #0x4
   1508c:	b.eq	15098 <mpc_ui_ui_sub@@Base+0x12c0>  // b.none
   15090:	adds	x5, x5, #0x4
   15094:	cinc	x2, x2, cs  // cs = hs, nlast
   15098:	tbz	x2, #51, 14ef4 <mpc_ui_ui_sub@@Base+0x111c>
   1509c:	orr	w0, w0, #0x8
   150a0:	mov	w1, #0x1                   	// #1
   150a4:	mov	x4, #0x0                   	// #0
   150a8:	mov	x5, #0x0                   	// #0
   150ac:	b	14f38 <mpc_ui_ui_sub@@Base+0x1160>
   150b0:	cmp	x8, #0x0
   150b4:	mov	w2, #0x7fff                	// #32767
   150b8:	mov	x4, #0xffffffffffff        	// #281474976710655
   150bc:	csel	w1, w1, w2, ne  // ne = any
   150c0:	csel	x4, x4, xzr, ne  // ne = any
   150c4:	csetm	x5, ne  // ne = any
   150c8:	b	14fcc <mpc_ui_ui_sub@@Base+0x11f4>
   150cc:	cbnz	x8, 14d14 <mpc_ui_ui_sub@@Base+0xf3c>
   150d0:	b	15078 <mpc_ui_ui_sub@@Base+0x12a0>
   150d4:	mov	x4, #0x2                   	// #2
   150d8:	cmp	x1, #0xf
   150dc:	b.ne	15100 <mpc_ui_ui_sub@@Base+0x1328>  // b.any
   150e0:	tbz	x7, #47, 15118 <mpc_ui_ui_sub@@Base+0x1340>
   150e4:	tbnz	x2, #47, 15118 <mpc_ui_ui_sub@@Base+0x1340>
   150e8:	orr	x4, x2, #0x800000000000
   150ec:	mov	w10, w15
   150f0:	and	x4, x4, #0xffffffffffff
   150f4:	mov	x5, x6
   150f8:	mov	w1, #0x7fff                	// #32767
   150fc:	b	14af8 <mpc_ui_ui_sub@@Base+0xd20>
   15100:	cmp	x1, #0xb
   15104:	b.ne	14a50 <mpc_ui_ui_sub@@Base+0xc78>  // b.any
   15108:	mov	x7, x2
   1510c:	mov	x5, x6
   15110:	mov	x16, x4
   15114:	b	14a58 <mpc_ui_ui_sub@@Base+0xc80>
   15118:	orr	x4, x7, #0x800000000000
   1511c:	mov	w10, w12
   15120:	and	x4, x4, #0xffffffffffff
   15124:	mov	w1, #0x7fff                	// #32767
   15128:	b	14af8 <mpc_ui_ui_sub@@Base+0xd20>
   1512c:	cbnz	x8, 15098 <mpc_ui_ui_sub@@Base+0x12c0>
   15130:	adds	x5, x5, #0x8
   15134:	cinc	x2, x2, cs  // cs = hs, nlast
   15138:	tbnz	x2, #51, 1509c <mpc_ui_ui_sub@@Base+0x12c4>
   1513c:	b	14ef4 <mpc_ui_ui_sub@@Base+0x111c>
   15140:	cbnz	x8, 15130 <mpc_ui_ui_sub@@Base+0x1358>
   15144:	tbnz	x2, #51, 1509c <mpc_ui_ui_sub@@Base+0x12c4>
   15148:	b	14ef4 <mpc_ui_ui_sub@@Base+0x111c>
   1514c:	orr	w0, w0, #0x10
   15150:	b	1509c <mpc_ui_ui_sub@@Base+0x12c4>
   15154:	mov	x2, x4
   15158:	mov	x4, #0x3                   	// #3
   1515c:	b	150d8 <mpc_ui_ui_sub@@Base+0x1300>
   15160:	mov	w10, w15
   15164:	mov	x8, x13
   15168:	b	14a74 <mpc_ui_ui_sub@@Base+0xc9c>
   1516c:	nop
   15170:	tbz	w0, #0, 15180 <mpc_ui_ui_sub@@Base+0x13a8>
   15174:	movi	v1.2s, #0x0
   15178:	fdiv	s0, s1, s1
   1517c:	mrs	x1, fpsr
   15180:	tbz	w0, #1, 15194 <mpc_ui_ui_sub@@Base+0x13bc>
   15184:	fmov	s1, #1.000000000000000000e+00
   15188:	movi	v2.2s, #0x0
   1518c:	fdiv	s0, s1, s2
   15190:	mrs	x1, fpsr
   15194:	tbz	w0, #2, 151b4 <mpc_ui_ui_sub@@Base+0x13dc>
   15198:	mov	w2, #0xc5ae                	// #50606
   1519c:	mov	w1, #0x7f7fffff            	// #2139095039
   151a0:	movk	w2, #0x749d, lsl #16
   151a4:	fmov	s1, w1
   151a8:	fmov	s2, w2
   151ac:	fadd	s0, s1, s2
   151b0:	mrs	x1, fpsr
   151b4:	tbz	w0, #3, 151c4 <mpc_ui_ui_sub@@Base+0x13ec>
   151b8:	movi	v1.2s, #0x80, lsl #16
   151bc:	fmul	s0, s1, s1
   151c0:	mrs	x1, fpsr
   151c4:	tbz	w0, #4, 151dc <mpc_ui_ui_sub@@Base+0x1404>
   151c8:	mov	w0, #0x7f7fffff            	// #2139095039
   151cc:	fmov	s2, #1.000000000000000000e+00
   151d0:	fmov	s1, w0
   151d4:	fsub	s0, s1, s2
   151d8:	mrs	x0, fpsr
   151dc:	ret

Disassembly of section .fini:

00000000000151e0 <.fini>:
   151e0:	stp	x29, x30, [sp, #-16]!
   151e4:	mov	x29, sp
   151e8:	ldp	x29, x30, [sp], #16
   151ec:	ret
