
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//fdflags_gcc_-O1:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000000be0 <_init>:
 be0:	stp	x29, x30, [sp, #-16]!
 be4:	mov	x29, sp
 be8:	bl	d30 <call_weak_fn>
 bec:	ldp	x29, x30, [sp], #16
 bf0:	ret

Disassembly of section .plt:

0000000000000c00 <.plt>:
 c00:	stp	x16, x30, [sp, #-16]!
 c04:	adrp	x16, 11000 <__FRAME_END__+0xf628>
 c08:	ldr	x17, [x16, #4088]
 c0c:	add	x16, x16, #0xff8
 c10:	br	x17
 c14:	nop
 c18:	nop
 c1c:	nop

0000000000000c20 <strtok@plt>:
 c20:	adrp	x16, 12000 <strtok@GLIBC_2.17>
 c24:	ldr	x17, [x16]
 c28:	add	x16, x16, #0x0
 c2c:	br	x17

0000000000000c30 <builtin_error@plt>:
 c30:	adrp	x16, 12000 <strtok@GLIBC_2.17>
 c34:	ldr	x17, [x16, #8]
 c38:	add	x16, x16, #0x8
 c3c:	br	x17

0000000000000c40 <__cxa_finalize@plt>:
 c40:	adrp	x16, 12000 <strtok@GLIBC_2.17>
 c44:	ldr	x17, [x16, #16]
 c48:	add	x16, x16, #0x10
 c4c:	br	x17

0000000000000c50 <putc@plt>:
 c50:	adrp	x16, 12000 <strtok@GLIBC_2.17>
 c54:	ldr	x17, [x16, #24]
 c58:	add	x16, x16, #0x18
 c5c:	br	x17

0000000000000c60 <builtin_help@plt>:
 c60:	adrp	x16, 12000 <strtok@GLIBC_2.17>
 c64:	ldr	x17, [x16, #32]
 c68:	add	x16, x16, #0x20
 c6c:	br	x17

0000000000000c70 <builtin_usage@plt>:
 c70:	adrp	x16, 12000 <strtok@GLIBC_2.17>
 c74:	ldr	x17, [x16, #40]
 c78:	add	x16, x16, #0x28
 c7c:	br	x17

0000000000000c80 <strerror@plt>:
 c80:	adrp	x16, 12000 <strtok@GLIBC_2.17>
 c84:	ldr	x17, [x16, #48]
 c88:	add	x16, x16, #0x30
 c8c:	br	x17

0000000000000c90 <__gmon_start__@plt>:
 c90:	adrp	x16, 12000 <strtok@GLIBC_2.17>
 c94:	ldr	x17, [x16, #56]
 c98:	add	x16, x16, #0x38
 c9c:	br	x17

0000000000000ca0 <strcmp@plt>:
 ca0:	adrp	x16, 12000 <strtok@GLIBC_2.17>
 ca4:	ldr	x17, [x16, #64]
 ca8:	add	x16, x16, #0x40
 cac:	br	x17

0000000000000cb0 <internal_getopt@plt>:
 cb0:	adrp	x16, 12000 <strtok@GLIBC_2.17>
 cb4:	ldr	x17, [x16, #72]
 cb8:	add	x16, x16, #0x48
 cbc:	br	x17

0000000000000cc0 <reset_internal_getopt@plt>:
 cc0:	adrp	x16, 12000 <strtok@GLIBC_2.17>
 cc4:	ldr	x17, [x16, #80]
 cc8:	add	x16, x16, #0x50
 ccc:	br	x17

0000000000000cd0 <fcntl@plt>:
 cd0:	adrp	x16, 12000 <strtok@GLIBC_2.17>
 cd4:	ldr	x17, [x16, #88]
 cd8:	add	x16, x16, #0x58
 cdc:	br	x17

0000000000000ce0 <legal_number@plt>:
 ce0:	adrp	x16, 12000 <strtok@GLIBC_2.17>
 ce4:	ldr	x17, [x16, #96]
 ce8:	add	x16, x16, #0x60
 cec:	br	x17

0000000000000cf0 <printf@plt>:
 cf0:	adrp	x16, 12000 <strtok@GLIBC_2.17>
 cf4:	ldr	x17, [x16, #104]
 cf8:	add	x16, x16, #0x68
 cfc:	br	x17

0000000000000d00 <__errno_location@plt>:
 d00:	adrp	x16, 12000 <strtok@GLIBC_2.17>
 d04:	ldr	x17, [x16, #112]
 d08:	add	x16, x16, #0x70
 d0c:	br	x17

0000000000000d10 <putchar@plt>:
 d10:	adrp	x16, 12000 <strtok@GLIBC_2.17>
 d14:	ldr	x17, [x16, #120]
 d18:	add	x16, x16, #0x78
 d1c:	br	x17

0000000000000d20 <getdtablesize@plt>:
 d20:	adrp	x16, 12000 <strtok@GLIBC_2.17>
 d24:	ldr	x17, [x16, #128]
 d28:	add	x16, x16, #0x80
 d2c:	br	x17

Disassembly of section .text:

0000000000000d30 <call_weak_fn>:
     d30:	adrp	x0, 11000 <__FRAME_END__+0xf628>
     d34:	ldr	x0, [x0, #4040]
     d38:	cbz	x0, d40 <call_weak_fn+0x10>
     d3c:	b	c90 <__gmon_start__@plt>
     d40:	ret

0000000000000d44 <deregister_tm_clones>:
     d44:	adrp	x0, 12000 <strtok@GLIBC_2.17>
     d48:	add	x0, x0, #0x130
     d4c:	adrp	x1, 12000 <strtok@GLIBC_2.17>
     d50:	add	x1, x1, #0x130
     d54:	cmp	x0, x1
     d58:	b.eq	d84 <deregister_tm_clones+0x40>  // b.none
     d5c:	adrp	x1, 11000 <__FRAME_END__+0xf628>
     d60:	ldr	x1, [x1, #4016]
     d64:	cbz	x1, d84 <deregister_tm_clones+0x40>
     d68:	stp	x29, x30, [sp, #-16]!
     d6c:	mov	x29, sp
     d70:	adrp	x0, 12000 <strtok@GLIBC_2.17>
     d74:	add	x0, x0, #0x130
     d78:	blr	x1
     d7c:	ldp	x29, x30, [sp], #16
     d80:	ret
     d84:	ret

0000000000000d88 <register_tm_clones>:
     d88:	adrp	x0, 12000 <strtok@GLIBC_2.17>
     d8c:	add	x0, x0, #0x130
     d90:	adrp	x1, 12000 <strtok@GLIBC_2.17>
     d94:	add	x1, x1, #0x130
     d98:	sub	x0, x0, x1
     d9c:	lsr	x1, x0, #63
     da0:	add	x0, x1, x0, asr #3
     da4:	cmp	xzr, x0, asr #1
     da8:	b.eq	dd8 <register_tm_clones+0x50>  // b.none
     dac:	asr	x1, x0, #1
     db0:	adrp	x2, 11000 <__FRAME_END__+0xf628>
     db4:	ldr	x2, [x2, #4064]
     db8:	cbz	x2, dd8 <register_tm_clones+0x50>
     dbc:	stp	x29, x30, [sp, #-16]!
     dc0:	mov	x29, sp
     dc4:	adrp	x0, 12000 <strtok@GLIBC_2.17>
     dc8:	add	x0, x0, #0x130
     dcc:	blr	x2
     dd0:	ldp	x29, x30, [sp], #16
     dd4:	ret
     dd8:	ret

0000000000000ddc <__do_global_dtors_aux>:
     ddc:	adrp	x0, 12000 <strtok@GLIBC_2.17>
     de0:	ldrb	w0, [x0, #304]
     de4:	cbnz	w0, e20 <__do_global_dtors_aux+0x44>
     de8:	stp	x29, x30, [sp, #-16]!
     dec:	mov	x29, sp
     df0:	adrp	x0, 11000 <__FRAME_END__+0xf628>
     df4:	ldr	x0, [x0, #4024]
     df8:	cbz	x0, e08 <__do_global_dtors_aux+0x2c>
     dfc:	adrp	x0, 12000 <strtok@GLIBC_2.17>
     e00:	ldr	x0, [x0, #136]
     e04:	bl	c40 <__cxa_finalize@plt>
     e08:	bl	d44 <deregister_tm_clones>
     e0c:	adrp	x0, 12000 <strtok@GLIBC_2.17>
     e10:	mov	w1, #0x1                   	// #1
     e14:	strb	w1, [x0, #304]
     e18:	ldp	x29, x30, [sp], #16
     e1c:	ret
     e20:	ret

0000000000000e24 <frame_dummy>:
     e24:	stp	x29, x30, [sp, #-16]!
     e28:	mov	x29, sp
     e2c:	bl	d88 <register_tm_clones>
     e30:	ldp	x29, x30, [sp], #16
     e34:	ret

0000000000000e38 <getflags>:
     e38:	stp	x29, x30, [sp, #-48]!
     e3c:	mov	x29, sp
     e40:	stp	x19, x20, [sp, #16]
     e44:	stp	x21, x22, [sp, #32]
     e48:	mov	w22, w0
     e4c:	mov	w21, w1
     e50:	mov	w1, #0x1                   	// #1
     e54:	bl	cd0 <fcntl@plt>
     e58:	mov	w19, w0
     e5c:	cmn	w0, #0x1
     e60:	b.eq	ea8 <getflags+0x70>  // b.none
     e64:	mov	w1, #0x3                   	// #3
     e68:	mov	w0, w22
     e6c:	bl	cd0 <fcntl@plt>
     e70:	mov	w20, w0
     e74:	cmn	w0, #0x1
     e78:	b.eq	ed0 <getflags+0x98>  // b.none
     e7c:	orr	w0, w0, #0x80000
     e80:	cmp	w19, #0x0
     e84:	csel	w20, w0, w20, ne  // ne = any
     e88:	mov	w19, #0x3c00                	// #15360
     e8c:	movk	w19, #0x1d, lsl #16
     e90:	and	w19, w20, w19
     e94:	mov	w0, w19
     e98:	ldp	x19, x20, [sp, #16]
     e9c:	ldp	x21, x22, [sp, #32]
     ea0:	ldp	x29, x30, [sp], #48
     ea4:	ret
     ea8:	cbz	w21, e94 <getflags+0x5c>
     eac:	bl	d00 <__errno_location@plt>
     eb0:	ldr	w0, [x0]
     eb4:	bl	c80 <strerror@plt>
     eb8:	mov	x2, x0
     ebc:	mov	w1, w22
     ec0:	adrp	x0, 1000 <printone+0x104>
     ec4:	add	x0, x0, #0x408
     ec8:	bl	c30 <builtin_error@plt>
     ecc:	b	e94 <getflags+0x5c>
     ed0:	mov	w19, w0
     ed4:	cbz	w21, e94 <getflags+0x5c>
     ed8:	bl	d00 <__errno_location@plt>
     edc:	ldr	w0, [x0]
     ee0:	bl	c80 <strerror@plt>
     ee4:	mov	x2, x0
     ee8:	mov	w1, w22
     eec:	adrp	x0, 1000 <printone+0x104>
     ef0:	add	x0, x0, #0x428
     ef4:	bl	c30 <builtin_error@plt>
     ef8:	b	e94 <getflags+0x5c>

0000000000000efc <printone>:
     efc:	stp	x29, x30, [sp, #-96]!
     f00:	mov	x29, sp
     f04:	stp	x19, x20, [sp, #16]
     f08:	stp	x23, x24, [sp, #48]
     f0c:	mov	w19, w0
     f10:	mov	w23, w2
     f14:	bl	e38 <getflags>
     f18:	cmn	w0, #0x1
     f1c:	b.eq	ff8 <printone+0xfc>  // b.none
     f20:	stp	x21, x22, [sp, #32]
     f24:	stp	x25, x26, [sp, #64]
     f28:	str	x27, [sp, #80]
     f2c:	mov	w21, w0
     f30:	mov	w1, w19
     f34:	adrp	x0, 1000 <printone+0x104>
     f38:	add	x0, x0, #0x448
     f3c:	bl	cf0 <printf@plt>
     f40:	cmp	w23, #0x0
     f44:	adrp	x24, 1000 <printone+0x104>
     f48:	add	x24, x24, #0x450
     f4c:	adrp	x0, 1000 <printone+0x104>
     f50:	add	x0, x0, #0x678
     f54:	csel	x24, x24, x0, ne  // ne = any
     f58:	adrp	x19, 11000 <__FRAME_END__+0xf628>
     f5c:	add	x19, x19, #0xd28
     f60:	mov	x20, #0x0                   	// #0
     f64:	adrp	x25, 11000 <__FRAME_END__+0xf628>
     f68:	ldr	x25, [x25, #4032]
     f6c:	mov	w26, #0x2c                  	// #44
     f70:	adrp	x27, 1000 <printone+0x104>
     f74:	add	x27, x27, #0x460
     f78:	b	fac <printone+0xb0>
     f7c:	cbz	w23, f9c <printone+0xa0>
     f80:	ldr	x1, [x19]
     f84:	mov	x0, x27
     f88:	bl	cf0 <printf@plt>
     f8c:	b	fd0 <printone+0xd4>
     f90:	ldr	x1, [x25]
     f94:	mov	w0, w26
     f98:	bl	c50 <putc@plt>
     f9c:	add	x20, x20, #0x1
     fa0:	add	x19, x19, #0x10
     fa4:	cmp	x20, #0xa
     fa8:	b.eq	fe4 <printone+0xe8>  // b.none
     fac:	ldr	w22, [x19, #8]
     fb0:	tst	w22, w21
     fb4:	b.eq	f7c <printone+0x80>  // b.none
     fb8:	ldr	x2, [x19]
     fbc:	mov	x1, x24
     fc0:	adrp	x0, 1000 <printone+0x104>
     fc4:	add	x0, x0, #0x458
     fc8:	bl	cf0 <printf@plt>
     fcc:	bic	w21, w21, w22
     fd0:	cbnz	w21, f90 <printone+0x94>
     fd4:	cmp	w23, #0x0
     fd8:	ccmp	x20, #0x9, #0x4, ne  // ne = any
     fdc:	b.eq	f9c <printone+0xa0>  // b.none
     fe0:	b	f90 <printone+0x94>
     fe4:	mov	w0, #0xa                   	// #10
     fe8:	bl	d10 <putchar@plt>
     fec:	ldp	x21, x22, [sp, #32]
     ff0:	ldp	x25, x26, [sp, #64]
     ff4:	ldr	x27, [sp, #80]
     ff8:	ldp	x19, x20, [sp, #16]
     ffc:	ldp	x23, x24, [sp, #48]
    1000:	ldp	x29, x30, [sp], #96
    1004:	ret

0000000000001008 <fdflags_builtin>:
    1008:	stp	x29, x30, [sp, #-176]!
    100c:	mov	x29, sp
    1010:	stp	x19, x20, [sp, #16]
    1014:	stp	x21, x22, [sp, #32]
    1018:	stp	x23, x24, [sp, #48]
    101c:	stp	x27, x28, [sp, #80]
    1020:	mov	x20, x0
    1024:	bl	cc0 <reset_internal_getopt@plt>
    1028:	mov	w24, #0x0                   	// #0
    102c:	mov	w23, #0x0                   	// #0
    1030:	adrp	x19, 1000 <printone+0x104>
    1034:	add	x19, x19, #0x468
    1038:	adrp	x0, 11000 <__FRAME_END__+0xf628>
    103c:	ldr	x21, [x0, #4048]
    1040:	mov	w22, #0x1                   	// #1
    1044:	mov	x1, x19
    1048:	mov	x0, x20
    104c:	bl	cb0 <internal_getopt@plt>
    1050:	cmn	w0, #0x1
    1054:	b.eq	10b4 <fdflags_builtin+0xac>  // b.none
    1058:	cmp	w0, #0x73
    105c:	b.eq	107c <fdflags_builtin+0x74>  // b.none
    1060:	cmp	w0, #0x76
    1064:	b.eq	10ac <fdflags_builtin+0xa4>  // b.none
    1068:	cmn	w0, #0x63
    106c:	b.eq	1088 <fdflags_builtin+0x80>  // b.none
    1070:	bl	c70 <builtin_usage@plt>
    1074:	mov	w22, #0x102                 	// #258
    1078:	b	1090 <fdflags_builtin+0x88>
    107c:	ldr	x28, [x21]
    1080:	mov	w24, w22
    1084:	b	1044 <fdflags_builtin+0x3c>
    1088:	bl	c60 <builtin_help@plt>
    108c:	mov	w22, #0x102                 	// #258
    1090:	mov	w0, w22
    1094:	ldp	x19, x20, [sp, #16]
    1098:	ldp	x21, x22, [sp, #32]
    109c:	ldp	x23, x24, [sp, #48]
    10a0:	ldp	x27, x28, [sp, #80]
    10a4:	ldp	x29, x30, [sp], #176
    10a8:	ret
    10ac:	mov	w23, w22
    10b0:	b	1044 <fdflags_builtin+0x3c>
    10b4:	stp	x25, x26, [sp, #64]
    10b8:	adrp	x0, 11000 <__FRAME_END__+0xf628>
    10bc:	ldr	x0, [x0, #4056]
    10c0:	ldr	x25, [x0]
    10c4:	cmp	x25, #0x0
    10c8:	mov	w22, #0x0                   	// #0
    10cc:	ccmp	w24, #0x0, #0x4, eq  // eq = none
    10d0:	b.ne	13ec <fdflags_builtin+0x3e4>  // b.any
    10d4:	cbz	x25, 10ec <fdflags_builtin+0xe4>
    10d8:	adrp	x21, 11000 <__FRAME_END__+0xf628>
    10dc:	add	x21, x21, #0xd28
    10e0:	add	x0, sp, #0x9c
    10e4:	str	x0, [sp, #128]
    10e8:	b	11c8 <fdflags_builtin+0x1c0>
    10ec:	bl	d20 <getdtablesize@plt>
    10f0:	cmp	w0, #0x0
    10f4:	b.le	115c <fdflags_builtin+0x154>
    10f8:	sub	w19, w0, #0x1
    10fc:	cmp	w19, #0x0
    1100:	b.le	134c <fdflags_builtin+0x344>
    1104:	add	x21, sp, #0xa4
    1108:	mov	w20, #0x1                   	// #1
    110c:	mov	x2, x21
    1110:	mov	w1, w20
    1114:	mov	w0, w19
    1118:	bl	cd0 <fcntl@plt>
    111c:	cmn	w0, #0x1
    1120:	b.ne	1164 <fdflags_builtin+0x15c>  // b.any
    1124:	sub	w19, w19, #0x1
    1128:	cmp	w19, #0x0
    112c:	b.gt	110c <fdflags_builtin+0x104>
    1130:	tbz	w19, #31, 1340 <fdflags_builtin+0x338>
    1134:	bl	d00 <__errno_location@plt>
    1138:	ldr	w0, [x0]
    113c:	bl	c80 <strerror@plt>
    1140:	mov	x1, x0
    1144:	adrp	x0, 1000 <printone+0x104>
    1148:	add	x0, x0, #0x470
    114c:	bl	c30 <builtin_error@plt>
    1150:	mov	w22, #0x1                   	// #1
    1154:	ldp	x25, x26, [sp, #64]
    1158:	b	1090 <fdflags_builtin+0x88>
    115c:	mov	w19, #0xff                  	// #255
    1160:	b	1104 <fdflags_builtin+0xfc>
    1164:	tbnz	w19, #31, 1134 <fdflags_builtin+0x12c>
    1168:	mov	w20, #0x0                   	// #0
    116c:	cmp	w19, #0x0
    1170:	b.le	119c <fdflags_builtin+0x194>
    1174:	mov	w2, w23
    1178:	mov	w1, #0x0                   	// #0
    117c:	mov	w0, w20
    1180:	bl	efc <printone>
    1184:	add	w20, w20, #0x1
    1188:	cmp	w20, w19
    118c:	b.ne	1174 <fdflags_builtin+0x16c>  // b.any
    1190:	mov	w22, #0x0                   	// #0
    1194:	ldp	x25, x26, [sp, #64]
    1198:	b	1090 <fdflags_builtin+0x88>
    119c:	mov	w22, #0x0                   	// #0
    11a0:	ldp	x25, x26, [sp, #64]
    11a4:	b	1090 <fdflags_builtin+0x88>
    11a8:	ldr	x0, [x25, #8]
    11ac:	ldr	x1, [x0]
    11b0:	adrp	x0, 1000 <printone+0x104>
    11b4:	add	x0, x0, #0x488
    11b8:	bl	c30 <builtin_error@plt>
    11bc:	mov	w22, #0x1                   	// #1
    11c0:	ldr	x25, [x25]
    11c4:	cbz	x25, 1338 <fdflags_builtin+0x330>
    11c8:	ldr	x0, [x25, #8]
    11cc:	add	x1, sp, #0xa8
    11d0:	ldr	x0, [x0]
    11d4:	bl	ce0 <legal_number@plt>
    11d8:	cbz	w0, 11a8 <fdflags_builtin+0x1a0>
    11dc:	ldr	x27, [sp, #168]
    11e0:	tbnz	x27, #63, 11a8 <fdflags_builtin+0x1a0>
    11e4:	cbz	w24, 1324 <fdflags_builtin+0x31c>
    11e8:	mov	w1, #0x1                   	// #1
    11ec:	mov	w0, w27
    11f0:	bl	e38 <getflags>
    11f4:	str	w0, [sp, #136]
    11f8:	cmn	w0, #0x1
    11fc:	b.eq	11c0 <fdflags_builtin+0x1b8>  // b.none
    1200:	str	wzr, [sp, #164]
    1204:	str	wzr, [sp, #160]
    1208:	str	wzr, [sp, #156]
    120c:	adrp	x1, 1000 <printone+0x104>
    1210:	add	x1, x1, #0x4a8
    1214:	mov	x0, x28
    1218:	bl	c20 <strtok@plt>
    121c:	mov	x20, x0
    1220:	cbz	x0, 12dc <fdflags_builtin+0x2d4>
    1224:	add	x0, sp, #0xa0
    1228:	str	x0, [sp, #120]
    122c:	add	x0, sp, #0xa4
    1230:	str	x0, [sp, #112]
    1234:	adrp	x0, 1000 <printone+0x104>
    1238:	add	x0, x0, #0x4a8
    123c:	str	x0, [sp, #104]
    1240:	b	128c <fdflags_builtin+0x284>
    1244:	add	x20, x20, #0x1
    1248:	ldr	x26, [sp, #128]
    124c:	b	12a4 <fdflags_builtin+0x29c>
    1250:	add	x20, x20, #0x1
    1254:	ldr	x26, [sp, #120]
    1258:	b	12a4 <fdflags_builtin+0x29c>
    125c:	add	x1, x21, x19, lsl #4
    1260:	ldr	w0, [x26]
    1264:	ldr	w1, [x1, #8]
    1268:	orr	w0, w0, w1
    126c:	str	w0, [x26]
    1270:	cmp	x19, #0xa
    1274:	b.eq	12c8 <fdflags_builtin+0x2c0>  // b.none
    1278:	ldr	x1, [sp, #104]
    127c:	mov	x0, #0x0                   	// #0
    1280:	bl	c20 <strtok@plt>
    1284:	mov	x20, x0
    1288:	cbz	x0, 12dc <fdflags_builtin+0x2d4>
    128c:	ldrb	w0, [x20]
    1290:	cmp	w0, #0x2b
    1294:	b.eq	1244 <fdflags_builtin+0x23c>  // b.none
    1298:	cmp	w0, #0x2d
    129c:	b.eq	1250 <fdflags_builtin+0x248>  // b.none
    12a0:	ldr	x26, [sp, #112]
    12a4:	mov	x19, #0x0                   	// #0
    12a8:	lsl	x0, x19, #4
    12ac:	ldr	x1, [x21, x0]
    12b0:	mov	x0, x20
    12b4:	bl	ca0 <strcmp@plt>
    12b8:	cbz	w0, 125c <fdflags_builtin+0x254>
    12bc:	add	x19, x19, #0x1
    12c0:	cmp	x19, #0xa
    12c4:	b.ne	12a8 <fdflags_builtin+0x2a0>  // b.any
    12c8:	mov	x1, x20
    12cc:	adrp	x0, 1000 <printone+0x104>
    12d0:	add	x0, x0, #0x4b0
    12d4:	bl	c30 <builtin_error@plt>
    12d8:	b	1278 <fdflags_builtin+0x270>
    12dc:	ldr	w20, [sp, #156]
    12e0:	and	w2, w20, #0x80000
    12e4:	tbz	w20, #19, 13d8 <fdflags_builtin+0x3d0>
    12e8:	ldr	x0, [sp, #136]
    12ec:	tbz	w0, #19, 1358 <fdflags_builtin+0x350>
    12f0:	ldr	w19, [sp, #160]
    12f4:	mov	w2, #0x0                   	// #0
    12f8:	tbnz	w19, #19, 1360 <fdflags_builtin+0x358>
    12fc:	b	1374 <fdflags_builtin+0x36c>
    1300:	bl	d00 <__errno_location@plt>
    1304:	ldr	w0, [x0]
    1308:	bl	c80 <strerror@plt>
    130c:	mov	x2, x0
    1310:	mov	w1, w27
    1314:	adrp	x0, 1000 <printone+0x104>
    1318:	add	x0, x0, #0x4c8
    131c:	bl	c30 <builtin_error@plt>
    1320:	b	1374 <fdflags_builtin+0x36c>
    1324:	mov	w2, w23
    1328:	mov	w1, #0x1                   	// #1
    132c:	mov	w0, w27
    1330:	bl	efc <printone>
    1334:	b	11c0 <fdflags_builtin+0x1b8>
    1338:	ldp	x25, x26, [sp, #64]
    133c:	b	1090 <fdflags_builtin+0x88>
    1340:	mov	w22, #0x0                   	// #0
    1344:	ldp	x25, x26, [sp, #64]
    1348:	b	1090 <fdflags_builtin+0x88>
    134c:	mov	w22, #0x0                   	// #0
    1350:	ldp	x25, x26, [sp, #64]
    1354:	b	1090 <fdflags_builtin+0x88>
    1358:	ldr	w19, [sp, #160]
    135c:	mov	w2, w24
    1360:	mov	w1, #0x2                   	// #2
    1364:	mov	w0, w27
    1368:	bl	cd0 <fcntl@plt>
    136c:	cmn	w0, #0x1
    1370:	b.eq	1300 <fdflags_builtin+0x2f8>  // b.none
    1374:	and	w0, w20, #0xfff7ffff
    1378:	str	w0, [sp, #156]
    137c:	and	w19, w19, #0xfff7ffff
    1380:	str	w19, [sp, #160]
    1384:	ldr	w0, [sp, #136]
    1388:	orr	w2, w0, w20
    138c:	bic	w19, w2, w19
    1390:	and	w2, w19, #0xfff7ffff
    1394:	and	w0, w0, #0xfff7ffff
    1398:	cmp	w0, w2
    139c:	b.eq	11c0 <fdflags_builtin+0x1b8>  // b.none
    13a0:	mov	w1, #0x4                   	// #4
    13a4:	mov	w0, w27
    13a8:	bl	cd0 <fcntl@plt>
    13ac:	cmn	w0, #0x1
    13b0:	b.ne	11c0 <fdflags_builtin+0x1b8>  // b.any
    13b4:	bl	d00 <__errno_location@plt>
    13b8:	ldr	w0, [x0]
    13bc:	bl	c80 <strerror@plt>
    13c0:	mov	x2, x0
    13c4:	mov	w1, w27
    13c8:	adrp	x0, 1000 <printone+0x104>
    13cc:	add	x0, x0, #0x4e8
    13d0:	bl	c30 <builtin_error@plt>
    13d4:	b	11c0 <fdflags_builtin+0x1b8>
    13d8:	ldr	w19, [sp, #160]
    13dc:	tbz	w19, #19, 1374 <fdflags_builtin+0x36c>
    13e0:	ldr	x0, [sp, #136]
    13e4:	tbz	w0, #19, 1374 <fdflags_builtin+0x36c>
    13e8:	b	1360 <fdflags_builtin+0x358>
    13ec:	ldp	x25, x26, [sp, #64]
    13f0:	b	1090 <fdflags_builtin+0x88>

Disassembly of section .fini:

00000000000013f4 <_fini>:
    13f4:	stp	x29, x30, [sp, #-16]!
    13f8:	mov	x29, sp
    13fc:	ldp	x29, x30, [sp], #16
    1400:	ret
