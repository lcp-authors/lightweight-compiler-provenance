
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//fdflags_clang_-Os:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000000b68 <_init>:
 b68:	stp	x29, x30, [sp, #-16]!
 b6c:	mov	x29, sp
 b70:	bl	ca0 <call_weak_fn>
 b74:	ldp	x29, x30, [sp], #16
 b78:	ret

Disassembly of section .plt:

0000000000000b80 <.plt>:
 b80:	stp	x16, x30, [sp, #-16]!
 b84:	adrp	x16, 11000 <__FRAME_END__+0xf90c>
 b88:	ldr	x17, [x16, #4088]
 b8c:	add	x16, x16, #0xff8
 b90:	br	x17
 b94:	nop
 b98:	nop
 b9c:	nop

0000000000000ba0 <strtok@plt>:
 ba0:	adrp	x16, 12000 <strtok@GLIBC_2.17>
 ba4:	ldr	x17, [x16]
 ba8:	add	x16, x16, #0x0
 bac:	br	x17

0000000000000bb0 <builtin_error@plt>:
 bb0:	adrp	x16, 12000 <strtok@GLIBC_2.17>
 bb4:	ldr	x17, [x16, #8]
 bb8:	add	x16, x16, #0x8
 bbc:	br	x17

0000000000000bc0 <__cxa_finalize@plt>:
 bc0:	adrp	x16, 12000 <strtok@GLIBC_2.17>
 bc4:	ldr	x17, [x16, #16]
 bc8:	add	x16, x16, #0x10
 bcc:	br	x17

0000000000000bd0 <builtin_help@plt>:
 bd0:	adrp	x16, 12000 <strtok@GLIBC_2.17>
 bd4:	ldr	x17, [x16, #24]
 bd8:	add	x16, x16, #0x18
 bdc:	br	x17

0000000000000be0 <builtin_usage@plt>:
 be0:	adrp	x16, 12000 <strtok@GLIBC_2.17>
 be4:	ldr	x17, [x16, #32]
 be8:	add	x16, x16, #0x20
 bec:	br	x17

0000000000000bf0 <strerror@plt>:
 bf0:	adrp	x16, 12000 <strtok@GLIBC_2.17>
 bf4:	ldr	x17, [x16, #40]
 bf8:	add	x16, x16, #0x28
 bfc:	br	x17

0000000000000c00 <__gmon_start__@plt>:
 c00:	adrp	x16, 12000 <strtok@GLIBC_2.17>
 c04:	ldr	x17, [x16, #48]
 c08:	add	x16, x16, #0x30
 c0c:	br	x17

0000000000000c10 <strcmp@plt>:
 c10:	adrp	x16, 12000 <strtok@GLIBC_2.17>
 c14:	ldr	x17, [x16, #56]
 c18:	add	x16, x16, #0x38
 c1c:	br	x17

0000000000000c20 <internal_getopt@plt>:
 c20:	adrp	x16, 12000 <strtok@GLIBC_2.17>
 c24:	ldr	x17, [x16, #64]
 c28:	add	x16, x16, #0x40
 c2c:	br	x17

0000000000000c30 <reset_internal_getopt@plt>:
 c30:	adrp	x16, 12000 <strtok@GLIBC_2.17>
 c34:	ldr	x17, [x16, #72]
 c38:	add	x16, x16, #0x48
 c3c:	br	x17

0000000000000c40 <fcntl@plt>:
 c40:	adrp	x16, 12000 <strtok@GLIBC_2.17>
 c44:	ldr	x17, [x16, #80]
 c48:	add	x16, x16, #0x50
 c4c:	br	x17

0000000000000c50 <legal_number@plt>:
 c50:	adrp	x16, 12000 <strtok@GLIBC_2.17>
 c54:	ldr	x17, [x16, #88]
 c58:	add	x16, x16, #0x58
 c5c:	br	x17

0000000000000c60 <printf@plt>:
 c60:	adrp	x16, 12000 <strtok@GLIBC_2.17>
 c64:	ldr	x17, [x16, #96]
 c68:	add	x16, x16, #0x60
 c6c:	br	x17

0000000000000c70 <__errno_location@plt>:
 c70:	adrp	x16, 12000 <strtok@GLIBC_2.17>
 c74:	ldr	x17, [x16, #104]
 c78:	add	x16, x16, #0x68
 c7c:	br	x17

0000000000000c80 <putchar@plt>:
 c80:	adrp	x16, 12000 <strtok@GLIBC_2.17>
 c84:	ldr	x17, [x16, #112]
 c88:	add	x16, x16, #0x70
 c8c:	br	x17

0000000000000c90 <getdtablesize@plt>:
 c90:	adrp	x16, 12000 <strtok@GLIBC_2.17>
 c94:	ldr	x17, [x16, #120]
 c98:	add	x16, x16, #0x78
 c9c:	br	x17

Disassembly of section .text:

0000000000000ca0 <call_weak_fn>:
     ca0:	adrp	x0, 11000 <__FRAME_END__+0xf90c>
     ca4:	ldr	x0, [x0, #4040]
     ca8:	cbz	x0, cb0 <call_weak_fn+0x10>
     cac:	b	c00 <__gmon_start__@plt>
     cb0:	ret
     cb4:	nop

0000000000000cb8 <deregister_tm_clones>:
     cb8:	adrp	x0, 12000 <strtok@GLIBC_2.17>
     cbc:	add	x0, x0, #0x128
     cc0:	adrp	x1, 12000 <strtok@GLIBC_2.17>
     cc4:	add	x1, x1, #0x128
     cc8:	cmp	x1, x0
     ccc:	b.eq	ce4 <deregister_tm_clones+0x2c>  // b.none
     cd0:	adrp	x1, 11000 <__FRAME_END__+0xf90c>
     cd4:	ldr	x1, [x1, #4024]
     cd8:	cbz	x1, ce4 <deregister_tm_clones+0x2c>
     cdc:	mov	x16, x1
     ce0:	br	x16
     ce4:	ret

0000000000000ce8 <register_tm_clones>:
     ce8:	adrp	x0, 12000 <strtok@GLIBC_2.17>
     cec:	add	x0, x0, #0x128
     cf0:	adrp	x1, 12000 <strtok@GLIBC_2.17>
     cf4:	add	x1, x1, #0x128
     cf8:	sub	x1, x1, x0
     cfc:	lsr	x2, x1, #63
     d00:	add	x1, x2, x1, asr #3
     d04:	cmp	xzr, x1, asr #1
     d08:	asr	x1, x1, #1
     d0c:	b.eq	d24 <register_tm_clones+0x3c>  // b.none
     d10:	adrp	x2, 11000 <__FRAME_END__+0xf90c>
     d14:	ldr	x2, [x2, #4064]
     d18:	cbz	x2, d24 <register_tm_clones+0x3c>
     d1c:	mov	x16, x2
     d20:	br	x16
     d24:	ret

0000000000000d28 <__do_global_dtors_aux>:
     d28:	stp	x29, x30, [sp, #-32]!
     d2c:	mov	x29, sp
     d30:	str	x19, [sp, #16]
     d34:	adrp	x19, 12000 <strtok@GLIBC_2.17>
     d38:	ldrb	w0, [x19, #296]
     d3c:	cbnz	w0, d64 <__do_global_dtors_aux+0x3c>
     d40:	adrp	x0, 11000 <__FRAME_END__+0xf90c>
     d44:	ldr	x0, [x0, #4032]
     d48:	cbz	x0, d58 <__do_global_dtors_aux+0x30>
     d4c:	adrp	x0, 12000 <strtok@GLIBC_2.17>
     d50:	ldr	x0, [x0, #128]
     d54:	bl	bc0 <__cxa_finalize@plt>
     d58:	bl	cb8 <deregister_tm_clones>
     d5c:	mov	w0, #0x1                   	// #1
     d60:	strb	w0, [x19, #296]
     d64:	ldr	x19, [sp, #16]
     d68:	ldp	x29, x30, [sp], #32
     d6c:	ret

0000000000000d70 <frame_dummy>:
     d70:	b	ce8 <register_tm_clones>

0000000000000d74 <fdflags_builtin>:
     d74:	sub	sp, sp, #0x80
     d78:	stp	x29, x30, [sp, #32]
     d7c:	stp	x28, x27, [sp, #48]
     d80:	stp	x26, x25, [sp, #64]
     d84:	stp	x24, x23, [sp, #80]
     d88:	stp	x22, x21, [sp, #96]
     d8c:	stp	x20, x19, [sp, #112]
     d90:	add	x29, sp, #0x20
     d94:	mov	x21, x0
     d98:	bl	c30 <reset_internal_getopt@plt>
     d9c:	adrp	x19, 11000 <__FRAME_END__+0xf90c>
     da0:	ldr	x19, [x19, #4048]
     da4:	adrp	x22, 1000 <fdflags_builtin+0x28c>
     da8:	mov	w24, wzr
     dac:	mov	w25, wzr
     db0:	add	x22, x22, #0x2a8
     db4:	mov	x0, x21
     db8:	mov	x1, x22
     dbc:	bl	c20 <internal_getopt@plt>
     dc0:	cmp	w0, #0x73
     dc4:	b.ne	dd4 <fdflags_builtin+0x60>  // b.any
     dc8:	ldr	x20, [x19]
     dcc:	mov	w25, #0x1                   	// #1
     dd0:	b	db4 <fdflags_builtin+0x40>
     dd4:	cmn	w0, #0x63
     dd8:	b.eq	df4 <fdflags_builtin+0x80>  // b.none
     ddc:	cmn	w0, #0x1
     de0:	b.eq	dfc <fdflags_builtin+0x88>  // b.none
     de4:	cmp	w0, #0x76
     de8:	b.ne	e18 <fdflags_builtin+0xa4>  // b.any
     dec:	mov	w24, #0x1                   	// #1
     df0:	b	db4 <fdflags_builtin+0x40>
     df4:	bl	bd0 <builtin_help@plt>
     df8:	b	e1c <fdflags_builtin+0xa8>
     dfc:	adrp	x8, 11000 <__FRAME_END__+0xf90c>
     e00:	ldr	x8, [x8, #4056]
     e04:	ldr	x22, [x8]
     e08:	cbz	w25, e44 <fdflags_builtin+0xd0>
     e0c:	cbnz	x22, e44 <fdflags_builtin+0xd0>
     e10:	mov	w21, wzr
     e14:	b	e20 <fdflags_builtin+0xac>
     e18:	bl	be0 <builtin_usage@plt>
     e1c:	mov	w21, #0x102                 	// #258
     e20:	mov	w0, w21
     e24:	ldp	x20, x19, [sp, #112]
     e28:	ldp	x22, x21, [sp, #96]
     e2c:	ldp	x24, x23, [sp, #80]
     e30:	ldp	x26, x25, [sp, #64]
     e34:	ldp	x28, x27, [sp, #48]
     e38:	ldp	x29, x30, [sp, #32]
     e3c:	add	sp, sp, #0x80
     e40:	ret
     e44:	cbz	x22, 1048 <fdflags_builtin+0x2d4>
     e48:	adrp	x23, 1000 <fdflags_builtin+0x28c>
     e4c:	adrp	x19, 11000 <__FRAME_END__+0xf90c>
     e50:	mov	w21, wzr
     e54:	add	x23, x23, #0x38a
     e58:	add	x19, x19, #0xd30
     e5c:	str	w24, [sp]
     e60:	ldr	x8, [x22, #8]
     e64:	add	x1, sp, #0x8
     e68:	ldr	x0, [x8]
     e6c:	bl	c50 <legal_number@plt>
     e70:	cbz	w0, f4c <fdflags_builtin+0x1d8>
     e74:	ldr	x27, [sp, #8]
     e78:	tbnz	x27, #63, f4c <fdflags_builtin+0x1d8>
     e7c:	cbz	w25, f68 <fdflags_builtin+0x1f4>
     e80:	mov	w1, #0x1                   	// #1
     e84:	mov	w0, w27
     e88:	str	w21, [sp, #4]
     e8c:	bl	11e4 <getflags>
     e90:	cmn	w0, #0x1
     e94:	b.eq	1038 <fdflags_builtin+0x2c4>  // b.none
     e98:	mov	w28, w0
     e9c:	mov	x0, x20
     ea0:	mov	x1, x23
     ea4:	stur	xzr, [x29, #-8]
     ea8:	stur	wzr, [x29, #-12]
     eac:	bl	ba0 <strtok@plt>
     eb0:	mov	x24, x0
     eb4:	cbz	x0, f7c <fdflags_builtin+0x208>
     eb8:	ldrb	w8, [x24]
     ebc:	cmp	w8, #0x2d
     ec0:	b.eq	ed8 <fdflags_builtin+0x164>  // b.none
     ec4:	cmp	w8, #0x2b
     ec8:	b.ne	ee4 <fdflags_builtin+0x170>  // b.any
     ecc:	add	x24, x24, #0x1
     ed0:	sub	x26, x29, #0x8
     ed4:	b	ee8 <fdflags_builtin+0x174>
     ed8:	add	x24, x24, #0x1
     edc:	sub	x26, x29, #0xc
     ee0:	b	ee8 <fdflags_builtin+0x174>
     ee4:	sub	x26, x29, #0x4
     ee8:	mov	x21, xzr
     eec:	ldr	x1, [x19, x21]
     ef0:	mov	x0, x24
     ef4:	bl	c10 <strcmp@plt>
     ef8:	cbz	w0, f1c <fdflags_builtin+0x1a8>
     efc:	add	x21, x21, #0x10
     f00:	cmp	x21, #0xa0
     f04:	b.ne	eec <fdflags_builtin+0x178>  // b.any
     f08:	adrp	x0, 1000 <fdflags_builtin+0x28c>
     f0c:	add	x0, x0, #0x63f
     f10:	mov	x1, x24
     f14:	bl	bb0 <builtin_error@plt>
     f18:	b	f30 <fdflags_builtin+0x1bc>
     f1c:	add	x8, x19, x21
     f20:	ldr	w8, [x8, #8]
     f24:	ldr	w9, [x26]
     f28:	orr	w8, w9, w8
     f2c:	str	w8, [x26]
     f30:	mov	x0, xzr
     f34:	mov	x1, x23
     f38:	bl	ba0 <strtok@plt>
     f3c:	mov	x24, x0
     f40:	cbnz	x0, eb8 <fdflags_builtin+0x144>
     f44:	ldp	w24, w26, [x29, #-12]
     f48:	b	f80 <fdflags_builtin+0x20c>
     f4c:	ldr	x8, [x22, #8]
     f50:	adrp	x0, 1000 <fdflags_builtin+0x28c>
     f54:	add	x0, x0, #0x2c1
     f58:	ldr	x1, [x8]
     f5c:	bl	bb0 <builtin_error@plt>
     f60:	mov	w21, #0x1                   	// #1
     f64:	b	103c <fdflags_builtin+0x2c8>
     f68:	mov	w1, #0x1                   	// #1
     f6c:	mov	w0, w27
     f70:	mov	w2, w24
     f74:	bl	10d4 <printone>
     f78:	b	103c <fdflags_builtin+0x2c8>
     f7c:	mov	w26, wzr
     f80:	tst	w28, #0x80000
     f84:	and	w8, w26, #0x80000
     f88:	cset	w10, eq  // eq = none
     f8c:	and	w9, w28, #0x80000
     f90:	tst	w10, w8, lsr #19
     f94:	mov	w8, #0x1                   	// #1
     f98:	cneg	w8, w8, eq  // eq = none
     f9c:	tst	w24, w9
     fa0:	csel	w2, w8, wzr, eq  // eq = none
     fa4:	cmn	w2, #0x1
     fa8:	b.eq	fe0 <fdflags_builtin+0x26c>  // b.none
     fac:	mov	w1, #0x2                   	// #2
     fb0:	mov	w0, w27
     fb4:	bl	c40 <fcntl@plt>
     fb8:	cmn	w0, #0x1
     fbc:	b.ne	fe0 <fdflags_builtin+0x26c>  // b.any
     fc0:	bl	c70 <__errno_location@plt>
     fc4:	ldr	w0, [x0]
     fc8:	bl	bf0 <strerror@plt>
     fcc:	mov	x2, x0
     fd0:	adrp	x0, 1000 <fdflags_builtin+0x28c>
     fd4:	add	x0, x0, #0x602
     fd8:	mov	w1, w27
     fdc:	bl	bb0 <builtin_error@plt>
     fe0:	and	w8, w26, #0xfff7ffff
     fe4:	and	w9, w24, #0xfff7ffff
     fe8:	and	w10, w28, #0xfff7ffff
     fec:	ldr	w24, [sp]
     ff0:	stp	w9, w8, [x29, #-12]
     ff4:	orr	w8, w8, w10
     ff8:	bic	w2, w8, w9
     ffc:	cmp	w2, w10
    1000:	b.eq	1038 <fdflags_builtin+0x2c4>  // b.none
    1004:	mov	w1, #0x4                   	// #4
    1008:	mov	w0, w27
    100c:	bl	c40 <fcntl@plt>
    1010:	cmn	w0, #0x1
    1014:	b.ne	1038 <fdflags_builtin+0x2c4>  // b.any
    1018:	bl	c70 <__errno_location@plt>
    101c:	ldr	w0, [x0]
    1020:	bl	bf0 <strerror@plt>
    1024:	mov	x2, x0
    1028:	adrp	x0, 1000 <fdflags_builtin+0x28c>
    102c:	add	x0, x0, #0x621
    1030:	mov	w1, w27
    1034:	bl	bb0 <builtin_error@plt>
    1038:	ldr	w21, [sp, #4]
    103c:	ldr	x22, [x22]
    1040:	cbnz	x22, e60 <fdflags_builtin+0xec>
    1044:	b	e20 <fdflags_builtin+0xac>
    1048:	bl	c90 <getdtablesize@plt>
    104c:	subs	w8, w0, #0x1
    1050:	mov	w9, #0xff                  	// #255
    1054:	csel	w20, w9, w8, lt  // lt = tstop
    1058:	cmp	w20, #0x1
    105c:	b.lt	1080 <fdflags_builtin+0x30c>  // b.tstop
    1060:	add	x2, sp, #0x8
    1064:	mov	w1, #0x1                   	// #1
    1068:	mov	w0, w20
    106c:	bl	c40 <fcntl@plt>
    1070:	cmn	w0, #0x1
    1074:	b.ne	1080 <fdflags_builtin+0x30c>  // b.any
    1078:	subs	w20, w20, #0x1
    107c:	b.gt	1060 <fdflags_builtin+0x2ec>
    1080:	tbnz	w20, #31, 10b0 <fdflags_builtin+0x33c>
    1084:	cbz	w20, e10 <fdflags_builtin+0x9c>
    1088:	mov	w22, wzr
    108c:	mov	w0, w22
    1090:	mov	w1, wzr
    1094:	mov	w2, w24
    1098:	bl	10d4 <printone>
    109c:	add	w22, w22, #0x1
    10a0:	cmp	w20, w22
    10a4:	mov	w21, wzr
    10a8:	b.ne	108c <fdflags_builtin+0x318>  // b.any
    10ac:	b	e20 <fdflags_builtin+0xac>
    10b0:	bl	c70 <__errno_location@plt>
    10b4:	ldr	w0, [x0]
    10b8:	bl	bf0 <strerror@plt>
    10bc:	mov	x1, x0
    10c0:	adrp	x0, 1000 <fdflags_builtin+0x28c>
    10c4:	add	x0, x0, #0x2ac
    10c8:	bl	bb0 <builtin_error@plt>
    10cc:	mov	w21, #0x1                   	// #1
    10d0:	b	e20 <fdflags_builtin+0xac>

00000000000010d4 <printone>:
    10d4:	stp	x29, x30, [sp, #-80]!
    10d8:	stp	x26, x25, [sp, #16]
    10dc:	stp	x24, x23, [sp, #32]
    10e0:	stp	x22, x21, [sp, #48]
    10e4:	stp	x20, x19, [sp, #64]
    10e8:	mov	x29, sp
    10ec:	mov	w19, w2
    10f0:	mov	w21, w0
    10f4:	bl	11e4 <getflags>
    10f8:	cmn	w0, #0x1
    10fc:	b.eq	11cc <printone+0xf8>  // b.none
    1100:	mov	w20, w0
    1104:	adrp	x0, 1000 <fdflags_builtin+0x28c>
    1108:	add	x0, x0, #0x577
    110c:	mov	w1, w21
    1110:	bl	c60 <printf@plt>
    1114:	adrp	x8, 1000 <fdflags_builtin+0x28c>
    1118:	adrp	x9, 1000 <fdflags_builtin+0x28c>
    111c:	add	x8, x8, #0x650
    1120:	add	x9, x9, #0x580
    1124:	cmp	w19, #0x0
    1128:	adrp	x25, 11000 <__FRAME_END__+0xf90c>
    112c:	adrp	x21, 1000 <fdflags_builtin+0x28c>
    1130:	adrp	x23, 1000 <fdflags_builtin+0x28c>
    1134:	mov	x24, xzr
    1138:	add	x25, x25, #0xd30
    113c:	add	x21, x21, #0x582
    1140:	csel	x22, x9, x8, ne  // ne = any
    1144:	add	x23, x23, #0x57b
    1148:	add	x8, x25, x24
    114c:	ldr	w26, [x8, #8]
    1150:	tst	w26, w20
    1154:	b.eq	1170 <printone+0x9c>  // b.none
    1158:	ldr	x2, [x25, x24]
    115c:	mov	x0, x23
    1160:	mov	x1, x22
    1164:	bl	c60 <printf@plt>
    1168:	bic	w20, w20, w26
    116c:	b	1180 <printone+0xac>
    1170:	cbz	w19, 11a4 <printone+0xd0>
    1174:	ldr	x1, [x25, x24]
    1178:	mov	x0, x21
    117c:	bl	c60 <printf@plt>
    1180:	cmp	w19, #0x0
    1184:	cset	w8, ne  // ne = any
    1188:	cmp	x24, #0x90
    118c:	cset	w9, ne  // ne = any
    1190:	and	w8, w8, w9
    1194:	tbnz	w8, #0, 119c <printone+0xc8>
    1198:	cbz	w20, 11a4 <printone+0xd0>
    119c:	mov	w0, #0x2c                  	// #44
    11a0:	bl	c80 <putchar@plt>
    11a4:	add	x24, x24, #0x10
    11a8:	cmp	x24, #0xa0
    11ac:	b.ne	1148 <printone+0x74>  // b.any
    11b0:	ldp	x20, x19, [sp, #64]
    11b4:	ldp	x22, x21, [sp, #48]
    11b8:	ldp	x24, x23, [sp, #32]
    11bc:	ldp	x26, x25, [sp, #16]
    11c0:	mov	w0, #0xa                   	// #10
    11c4:	ldp	x29, x30, [sp], #80
    11c8:	b	c80 <putchar@plt>
    11cc:	ldp	x20, x19, [sp, #64]
    11d0:	ldp	x22, x21, [sp, #48]
    11d4:	ldp	x24, x23, [sp, #32]
    11d8:	ldp	x26, x25, [sp, #16]
    11dc:	ldp	x29, x30, [sp], #80
    11e0:	ret

00000000000011e4 <getflags>:
    11e4:	stp	x29, x30, [sp, #-48]!
    11e8:	stp	x20, x19, [sp, #32]
    11ec:	mov	w20, w1
    11f0:	mov	w1, #0x1                   	// #1
    11f4:	str	x21, [sp, #16]
    11f8:	mov	x29, sp
    11fc:	mov	w19, w0
    1200:	bl	c40 <fcntl@plt>
    1204:	cmn	w0, #0x1
    1208:	b.eq	1240 <getflags+0x5c>  // b.none
    120c:	mov	w21, w0
    1210:	mov	w1, #0x3                   	// #3
    1214:	mov	w0, w19
    1218:	bl	c40 <fcntl@plt>
    121c:	cmn	w0, #0x1
    1220:	b.eq	1260 <getflags+0x7c>  // b.none
    1224:	orr	w8, w0, #0x80000
    1228:	cmp	w21, #0x0
    122c:	mov	w9, #0x3c00                	// #15360
    1230:	csel	w8, w0, w8, eq  // eq = none
    1234:	movk	w9, #0x1d, lsl #16
    1238:	and	w0, w8, w9
    123c:	b	1288 <getflags+0xa4>
    1240:	cbz	w20, 1284 <getflags+0xa0>
    1244:	bl	c70 <__errno_location@plt>
    1248:	ldr	w0, [x0]
    124c:	bl	bf0 <strerror@plt>
    1250:	mov	x2, x0
    1254:	adrp	x0, 1000 <fdflags_builtin+0x28c>
    1258:	add	x0, x0, #0x586
    125c:	b	127c <getflags+0x98>
    1260:	cbz	w20, 1284 <getflags+0xa0>
    1264:	bl	c70 <__errno_location@plt>
    1268:	ldr	w0, [x0]
    126c:	bl	bf0 <strerror@plt>
    1270:	mov	x2, x0
    1274:	adrp	x0, 1000 <fdflags_builtin+0x28c>
    1278:	add	x0, x0, #0x5a5
    127c:	mov	w1, w19
    1280:	bl	bb0 <builtin_error@plt>
    1284:	mov	w0, #0xffffffff            	// #-1
    1288:	ldp	x20, x19, [sp, #32]
    128c:	ldr	x21, [sp, #16]
    1290:	ldp	x29, x30, [sp], #48
    1294:	ret

Disassembly of section .fini:

0000000000001298 <_fini>:
    1298:	stp	x29, x30, [sp, #-16]!
    129c:	mov	x29, sp
    12a0:	ldp	x29, x30, [sp], #16
    12a4:	ret
