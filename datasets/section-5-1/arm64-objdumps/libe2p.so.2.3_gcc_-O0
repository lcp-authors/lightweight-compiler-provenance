
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libe2p.so.2.3_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000002348 <.init>:
    2348:	stp	x29, x30, [sp, #-16]!
    234c:	mov	x29, sp
    2350:	bl	26e0 <ioctl@plt+0x10>
    2354:	ldp	x29, x30, [sp], #16
    2358:	ret

Disassembly of section .plt:

0000000000002360 <memcpy@plt-0x20>:
    2360:	stp	x16, x30, [sp, #-16]!
    2364:	adrp	x16, 19000 <e2p_str2encoding_flags@@Base+0x12424>
    2368:	ldr	x17, [x16, #4088]
    236c:	add	x16, x16, #0xff8
    2370:	br	x17
    2374:	nop
    2378:	nop
    237c:	nop

0000000000002380 <memcpy@plt>:
    2380:	adrp	x16, 1a000 <memcpy@GLIBC_2.17>
    2384:	ldr	x17, [x16]
    2388:	add	x16, x16, #0x0
    238c:	br	x17

0000000000002390 <strtok@plt>:
    2390:	adrp	x16, 1a000 <memcpy@GLIBC_2.17>
    2394:	ldr	x17, [x16, #8]
    2398:	add	x16, x16, #0x8
    239c:	br	x17

00000000000023a0 <strlen@plt>:
    23a0:	adrp	x16, 1a000 <memcpy@GLIBC_2.17>
    23a4:	ldr	x17, [x16, #16]
    23a8:	add	x16, x16, #0x10
    23ac:	br	x17

00000000000023b0 <fputs@plt>:
    23b0:	adrp	x16, 1a000 <memcpy@GLIBC_2.17>
    23b4:	ldr	x17, [x16, #24]
    23b8:	add	x16, x16, #0x18
    23bc:	br	x17

00000000000023c0 <e2p_string2feature@plt>:
    23c0:	adrp	x16, 1a000 <memcpy@GLIBC_2.17>
    23c4:	ldr	x17, [x16, #32]
    23c8:	add	x16, x16, #0x20
    23cc:	br	x17

00000000000023d0 <ntohl@plt>:
    23d0:	adrp	x16, 1a000 <memcpy@GLIBC_2.17>
    23d4:	ldr	x17, [x16, #40]
    23d8:	add	x16, x16, #0x28
    23dc:	br	x17

00000000000023e0 <__cxa_finalize@plt>:
    23e0:	adrp	x16, 1a000 <memcpy@GLIBC_2.17>
    23e4:	ldr	x17, [x16, #48]
    23e8:	add	x16, x16, #0x30
    23ec:	br	x17

00000000000023f0 <sprintf@plt>:
    23f0:	adrp	x16, 1a000 <memcpy@GLIBC_2.17>
    23f4:	ldr	x17, [x16, #56]
    23f8:	add	x16, x16, #0x38
    23fc:	br	x17

0000000000002400 <e2p_is_null_uuid@plt>:
    2400:	adrp	x16, 1a000 <memcpy@GLIBC_2.17>
    2404:	ldr	x17, [x16, #64]
    2408:	add	x16, x16, #0x40
    240c:	br	x17

0000000000002410 <opendir@plt>:
    2410:	adrp	x16, 1a000 <memcpy@GLIBC_2.17>
    2414:	ldr	x17, [x16, #72]
    2418:	add	x16, x16, #0x48
    241c:	br	x17

0000000000002420 <fputc@plt>:
    2420:	adrp	x16, 1a000 <memcpy@GLIBC_2.17>
    2424:	ldr	x17, [x16, #80]
    2428:	add	x16, x16, #0x50
    242c:	br	x17

0000000000002430 <ctime@plt>:
    2430:	adrp	x16, 1a000 <memcpy@GLIBC_2.17>
    2434:	ldr	x17, [x16, #88]
    2438:	add	x16, x16, #0x58
    243c:	br	x17

0000000000002440 <pathconf@plt>:
    2440:	adrp	x16, 1a000 <memcpy@GLIBC_2.17>
    2444:	ldr	x17, [x16, #96]
    2448:	add	x16, x16, #0x60
    244c:	br	x17

0000000000002450 <parse_num_blocks2@plt>:
    2450:	adrp	x16, 1a000 <memcpy@GLIBC_2.17>
    2454:	ldr	x17, [x16, #104]
    2458:	add	x16, x16, #0x68
    245c:	br	x17

0000000000002460 <malloc@plt>:
    2460:	adrp	x16, 1a000 <memcpy@GLIBC_2.17>
    2464:	ldr	x17, [x16, #112]
    2468:	add	x16, x16, #0x70
    246c:	br	x17

0000000000002470 <open@plt>:
    2470:	adrp	x16, 1a000 <memcpy@GLIBC_2.17>
    2474:	ldr	x17, [x16, #120]
    2478:	add	x16, x16, #0x78
    247c:	br	x17

0000000000002480 <strncmp@plt>:
    2480:	adrp	x16, 1a000 <memcpy@GLIBC_2.17>
    2484:	ldr	x17, [x16, #128]
    2488:	add	x16, x16, #0x80
    248c:	br	x17

0000000000002490 <strcat@plt>:
    2490:	adrp	x16, 1a000 <memcpy@GLIBC_2.17>
    2494:	ldr	x17, [x16, #136]
    2498:	add	x16, x16, #0x88
    249c:	br	x17

00000000000024a0 <e2p_string2mntopt@plt>:
    24a0:	adrp	x16, 1a000 <memcpy@GLIBC_2.17>
    24a4:	ldr	x17, [x16, #144]
    24a8:	add	x16, x16, #0x90
    24ac:	br	x17

00000000000024b0 <memset@plt>:
    24b0:	adrp	x16, 1a000 <memcpy@GLIBC_2.17>
    24b4:	ldr	x17, [x16, #152]
    24b8:	add	x16, x16, #0x98
    24bc:	br	x17

00000000000024c0 <e2p_feature2string@plt>:
    24c0:	adrp	x16, 1a000 <memcpy@GLIBC_2.17>
    24c4:	ldr	x17, [x16, #160]
    24c8:	add	x16, x16, #0xa0
    24cc:	br	x17

00000000000024d0 <e2p_uuid2str@plt>:
    24d0:	adrp	x16, 1a000 <memcpy@GLIBC_2.17>
    24d4:	ldr	x17, [x16, #168]
    24d8:	add	x16, x16, #0xa8
    24dc:	br	x17

00000000000024e0 <strcasecmp@plt>:
    24e0:	adrp	x16, 1a000 <memcpy@GLIBC_2.17>
    24e4:	ldr	x17, [x16, #176]
    24e8:	add	x16, x16, #0xb0
    24ec:	br	x17

00000000000024f0 <readdir@plt>:
    24f0:	adrp	x16, 1a000 <memcpy@GLIBC_2.17>
    24f4:	ldr	x17, [x16, #184]
    24f8:	add	x16, x16, #0xb8
    24fc:	br	x17

0000000000002500 <closedir@plt>:
    2500:	adrp	x16, 1a000 <memcpy@GLIBC_2.17>
    2504:	ldr	x17, [x16, #192]
    2508:	add	x16, x16, #0xc0
    250c:	br	x17

0000000000002510 <close@plt>:
    2510:	adrp	x16, 1a000 <memcpy@GLIBC_2.17>
    2514:	ldr	x17, [x16, #200]
    2518:	add	x16, x16, #0xc8
    251c:	br	x17

0000000000002520 <__gmon_start__@plt>:
    2520:	adrp	x16, 1a000 <memcpy@GLIBC_2.17>
    2524:	ldr	x17, [x16, #208]
    2528:	add	x16, x16, #0xd0
    252c:	br	x17

0000000000002530 <e2p_os2string@plt>:
    2530:	adrp	x16, 1a000 <memcpy@GLIBC_2.17>
    2534:	ldr	x17, [x16, #216]
    2538:	add	x16, x16, #0xd8
    253c:	br	x17

0000000000002540 <e2p_uuid_to_str@plt>:
    2540:	adrp	x16, 1a000 <memcpy@GLIBC_2.17>
    2544:	ldr	x17, [x16, #224]
    2548:	add	x16, x16, #0xe0
    254c:	br	x17

0000000000002550 <strcmp@plt>:
    2550:	adrp	x16, 1a000 <memcpy@GLIBC_2.17>
    2554:	ldr	x17, [x16, #232]
    2558:	add	x16, x16, #0xe8
    255c:	br	x17

0000000000002560 <getpwuid@plt>:
    2560:	adrp	x16, 1a000 <memcpy@GLIBC_2.17>
    2564:	ldr	x17, [x16, #240]
    2568:	add	x16, x16, #0xf0
    256c:	br	x17

0000000000002570 <__ctype_b_loc@plt>:
    2570:	adrp	x16, 1a000 <memcpy@GLIBC_2.17>
    2574:	ldr	x17, [x16, #248]
    2578:	add	x16, x16, #0xf8
    257c:	br	x17

0000000000002580 <strtol@plt>:
    2580:	adrp	x16, 1a000 <memcpy@GLIBC_2.17>
    2584:	ldr	x17, [x16, #256]
    2588:	add	x16, x16, #0x100
    258c:	br	x17

0000000000002590 <e2p_jrnl_feature2string@plt>:
    2590:	adrp	x16, 1a000 <memcpy@GLIBC_2.17>
    2594:	ldr	x17, [x16, #264]
    2598:	add	x16, x16, #0x108
    259c:	br	x17

00000000000025a0 <free@plt>:
    25a0:	adrp	x16, 1a000 <memcpy@GLIBC_2.17>
    25a4:	ldr	x17, [x16, #272]
    25a8:	add	x16, x16, #0x110
    25ac:	br	x17

00000000000025b0 <strncasecmp@plt>:
    25b0:	adrp	x16, 1a000 <memcpy@GLIBC_2.17>
    25b4:	ldr	x17, [x16, #280]
    25b8:	add	x16, x16, #0x118
    25bc:	br	x17

00000000000025c0 <strtoull@plt>:
    25c0:	adrp	x16, 1a000 <memcpy@GLIBC_2.17>
    25c4:	ldr	x17, [x16, #288]
    25c8:	add	x16, x16, #0x120
    25cc:	br	x17

00000000000025d0 <fwrite@plt>:
    25d0:	adrp	x16, 1a000 <memcpy@GLIBC_2.17>
    25d4:	ldr	x17, [x16, #296]
    25d8:	add	x16, x16, #0x128
    25dc:	br	x17

00000000000025e0 <e2p_edit_feature2@plt>:
    25e0:	adrp	x16, 1a000 <memcpy@GLIBC_2.17>
    25e4:	ldr	x17, [x16, #304]
    25e8:	add	x16, x16, #0x130
    25ec:	br	x17

00000000000025f0 <list_super2@plt>:
    25f0:	adrp	x16, 1a000 <memcpy@GLIBC_2.17>
    25f4:	ldr	x17, [x16, #312]
    25f8:	add	x16, x16, #0x138
    25fc:	br	x17

0000000000002600 <strcpy@plt>:
    2600:	adrp	x16, 1a000 <memcpy@GLIBC_2.17>
    2604:	ldr	x17, [x16, #320]
    2608:	add	x16, x16, #0x140
    260c:	br	x17

0000000000002610 <e2p_hash2string@plt>:
    2610:	adrp	x16, 1a000 <memcpy@GLIBC_2.17>
    2614:	ldr	x17, [x16, #328]
    2618:	add	x16, x16, #0x148
    261c:	br	x17

0000000000002620 <__lxstat@plt>:
    2620:	adrp	x16, 1a000 <memcpy@GLIBC_2.17>
    2624:	ldr	x17, [x16, #336]
    2628:	add	x16, x16, #0x150
    262c:	br	x17

0000000000002630 <print_fs_errors@plt>:
    2630:	adrp	x16, 1a000 <memcpy@GLIBC_2.17>
    2634:	ldr	x17, [x16, #344]
    2638:	add	x16, x16, #0x158
    263c:	br	x17

0000000000002640 <__fxstat@plt>:
    2640:	adrp	x16, 1a000 <memcpy@GLIBC_2.17>
    2644:	ldr	x17, [x16, #352]
    2648:	add	x16, x16, #0x160
    264c:	br	x17

0000000000002650 <print_fs_state@plt>:
    2650:	adrp	x16, 1a000 <memcpy@GLIBC_2.17>
    2654:	ldr	x17, [x16, #360]
    2658:	add	x16, x16, #0x168
    265c:	br	x17

0000000000002660 <strncpy@plt>:
    2660:	adrp	x16, 1a000 <memcpy@GLIBC_2.17>
    2664:	ldr	x17, [x16, #368]
    2668:	add	x16, x16, #0x170
    266c:	br	x17

0000000000002670 <printf@plt>:
    2670:	adrp	x16, 1a000 <memcpy@GLIBC_2.17>
    2674:	ldr	x17, [x16, #376]
    2678:	add	x16, x16, #0x178
    267c:	br	x17

0000000000002680 <__errno_location@plt>:
    2680:	adrp	x16, 1a000 <memcpy@GLIBC_2.17>
    2684:	ldr	x17, [x16, #384]
    2688:	add	x16, x16, #0x180
    268c:	br	x17

0000000000002690 <getgrgid@plt>:
    2690:	adrp	x16, 1a000 <memcpy@GLIBC_2.17>
    2694:	ldr	x17, [x16, #392]
    2698:	add	x16, x16, #0x188
    269c:	br	x17

00000000000026a0 <e2p_encoding2str@plt>:
    26a0:	adrp	x16, 1a000 <memcpy@GLIBC_2.17>
    26a4:	ldr	x17, [x16, #400]
    26a8:	add	x16, x16, #0x190
    26ac:	br	x17

00000000000026b0 <e2p_mntopt2string@plt>:
    26b0:	adrp	x16, 1a000 <memcpy@GLIBC_2.17>
    26b4:	ldr	x17, [x16, #408]
    26b8:	add	x16, x16, #0x198
    26bc:	br	x17

00000000000026c0 <fprintf@plt>:
    26c0:	adrp	x16, 1a000 <memcpy@GLIBC_2.17>
    26c4:	ldr	x17, [x16, #416]
    26c8:	add	x16, x16, #0x1a0
    26cc:	br	x17

00000000000026d0 <ioctl@plt>:
    26d0:	adrp	x16, 1a000 <memcpy@GLIBC_2.17>
    26d4:	ldr	x17, [x16, #424]
    26d8:	add	x16, x16, #0x1a8
    26dc:	br	x17

Disassembly of section .text:

00000000000026e0 <e2p_feature2string@@Base-0x190>:
    26e0:	adrp	x0, 19000 <e2p_str2encoding_flags@@Base+0x12424>
    26e4:	ldr	x0, [x0, #4056]
    26e8:	cbz	x0, 26f0 <ioctl@plt+0x20>
    26ec:	b	2520 <__gmon_start__@plt>
    26f0:	ret
    26f4:	stp	x29, x30, [sp, #-32]!
    26f8:	mov	x29, sp
    26fc:	adrp	x0, 1a000 <e2p_str2encoding_flags@@Base+0x13424>
    2700:	add	x0, x0, #0x888
    2704:	str	x0, [sp, #24]
    2708:	ldr	x0, [sp, #24]
    270c:	str	x0, [sp, #24]
    2710:	ldr	x1, [sp, #24]
    2714:	adrp	x0, 1a000 <e2p_str2encoding_flags@@Base+0x13424>
    2718:	add	x0, x0, #0x888
    271c:	cmp	x1, x0
    2720:	b.eq	2758 <ioctl@plt+0x88>  // b.none
    2724:	adrp	x0, 19000 <e2p_str2encoding_flags@@Base+0x12424>
    2728:	ldr	x0, [x0, #4032]
    272c:	str	x0, [sp, #16]
    2730:	ldr	x0, [sp, #16]
    2734:	str	x0, [sp, #16]
    2738:	ldr	x0, [sp, #16]
    273c:	cmp	x0, #0x0
    2740:	b.eq	275c <ioctl@plt+0x8c>  // b.none
    2744:	ldr	x1, [sp, #16]
    2748:	adrp	x0, 1a000 <e2p_str2encoding_flags@@Base+0x13424>
    274c:	add	x0, x0, #0x888
    2750:	blr	x1
    2754:	b	275c <ioctl@plt+0x8c>
    2758:	nop
    275c:	ldp	x29, x30, [sp], #32
    2760:	ret
    2764:	stp	x29, x30, [sp, #-48]!
    2768:	mov	x29, sp
    276c:	adrp	x0, 1a000 <e2p_str2encoding_flags@@Base+0x13424>
    2770:	add	x0, x0, #0x888
    2774:	str	x0, [sp, #40]
    2778:	ldr	x0, [sp, #40]
    277c:	str	x0, [sp, #40]
    2780:	ldr	x1, [sp, #40]
    2784:	adrp	x0, 1a000 <e2p_str2encoding_flags@@Base+0x13424>
    2788:	add	x0, x0, #0x888
    278c:	sub	x0, x1, x0
    2790:	asr	x0, x0, #3
    2794:	lsr	x1, x0, #63
    2798:	add	x0, x1, x0
    279c:	asr	x0, x0, #1
    27a0:	str	x0, [sp, #32]
    27a4:	ldr	x0, [sp, #32]
    27a8:	cmp	x0, #0x0
    27ac:	b.eq	27e8 <ioctl@plt+0x118>  // b.none
    27b0:	adrp	x0, 19000 <e2p_str2encoding_flags@@Base+0x12424>
    27b4:	ldr	x0, [x0, #4064]
    27b8:	str	x0, [sp, #24]
    27bc:	ldr	x0, [sp, #24]
    27c0:	str	x0, [sp, #24]
    27c4:	ldr	x0, [sp, #24]
    27c8:	cmp	x0, #0x0
    27cc:	b.eq	27ec <ioctl@plt+0x11c>  // b.none
    27d0:	ldr	x2, [sp, #24]
    27d4:	ldr	x1, [sp, #32]
    27d8:	adrp	x0, 1a000 <e2p_str2encoding_flags@@Base+0x13424>
    27dc:	add	x0, x0, #0x888
    27e0:	blr	x2
    27e4:	b	27ec <ioctl@plt+0x11c>
    27e8:	nop
    27ec:	ldp	x29, x30, [sp], #48
    27f0:	ret
    27f4:	stp	x29, x30, [sp, #-16]!
    27f8:	mov	x29, sp
    27fc:	adrp	x0, 1a000 <e2p_str2encoding_flags@@Base+0x13424>
    2800:	add	x0, x0, #0x888
    2804:	ldrb	w0, [x0]
    2808:	and	x0, x0, #0xff
    280c:	cmp	x0, #0x0
    2810:	b.ne	284c <ioctl@plt+0x17c>  // b.any
    2814:	adrp	x0, 19000 <e2p_str2encoding_flags@@Base+0x12424>
    2818:	ldr	x0, [x0, #4040]
    281c:	cmp	x0, #0x0
    2820:	b.eq	2834 <ioctl@plt+0x164>  // b.none
    2824:	adrp	x0, 1a000 <e2p_str2encoding_flags@@Base+0x13424>
    2828:	add	x0, x0, #0x1b0
    282c:	ldr	x0, [x0]
    2830:	bl	23e0 <__cxa_finalize@plt>
    2834:	bl	26f4 <ioctl@plt+0x24>
    2838:	adrp	x0, 1a000 <e2p_str2encoding_flags@@Base+0x13424>
    283c:	add	x0, x0, #0x888
    2840:	mov	w1, #0x1                   	// #1
    2844:	strb	w1, [x0]
    2848:	b	2850 <ioctl@plt+0x180>
    284c:	nop
    2850:	ldp	x29, x30, [sp], #16
    2854:	ret
    2858:	stp	x29, x30, [sp, #-16]!
    285c:	mov	x29, sp
    2860:	bl	2764 <ioctl@plt+0x94>
    2864:	nop
    2868:	ldp	x29, x30, [sp], #16
    286c:	ret

0000000000002870 <e2p_feature2string@@Base>:
    2870:	stp	x29, x30, [sp, #-48]!
    2874:	mov	x29, sp
    2878:	str	w0, [sp, #28]
    287c:	str	w1, [sp, #24]
    2880:	adrp	x0, 1a000 <e2p_str2encoding_flags@@Base+0x13424>
    2884:	add	x0, x0, #0x1b8
    2888:	str	x0, [sp, #40]
    288c:	b	28d0 <e2p_feature2string@@Base+0x60>
    2890:	ldr	x0, [sp, #40]
    2894:	ldr	w0, [x0]
    2898:	ldr	w1, [sp, #28]
    289c:	cmp	w1, w0
    28a0:	b.ne	28c4 <e2p_feature2string@@Base+0x54>  // b.any
    28a4:	ldr	x0, [sp, #40]
    28a8:	ldr	w0, [x0, #4]
    28ac:	ldr	w1, [sp, #24]
    28b0:	cmp	w1, w0
    28b4:	b.ne	28c4 <e2p_feature2string@@Base+0x54>  // b.any
    28b8:	ldr	x0, [sp, #40]
    28bc:	ldr	x0, [x0, #8]
    28c0:	b	2998 <e2p_feature2string@@Base+0x128>
    28c4:	ldr	x0, [sp, #40]
    28c8:	add	x0, x0, #0x10
    28cc:	str	x0, [sp, #40]
    28d0:	ldr	x0, [sp, #40]
    28d4:	ldr	x0, [x0, #8]
    28d8:	cmp	x0, #0x0
    28dc:	b.ne	2890 <e2p_feature2string@@Base+0x20>  // b.any
    28e0:	ldr	w0, [sp, #28]
    28e4:	cmp	w0, #0x2
    28e8:	b.eq	292c <e2p_feature2string@@Base+0xbc>  // b.none
    28ec:	ldr	w0, [sp, #28]
    28f0:	cmp	w0, #0x2
    28f4:	b.gt	2938 <e2p_feature2string@@Base+0xc8>
    28f8:	ldr	w0, [sp, #28]
    28fc:	cmp	w0, #0x0
    2900:	b.eq	2914 <e2p_feature2string@@Base+0xa4>  // b.none
    2904:	ldr	w0, [sp, #28]
    2908:	cmp	w0, #0x1
    290c:	b.eq	2920 <e2p_feature2string@@Base+0xb0>  // b.none
    2910:	b	2938 <e2p_feature2string@@Base+0xc8>
    2914:	mov	w0, #0x43                  	// #67
    2918:	strb	w0, [sp, #39]
    291c:	b	2944 <e2p_feature2string@@Base+0xd4>
    2920:	mov	w0, #0x49                  	// #73
    2924:	strb	w0, [sp, #39]
    2928:	b	2944 <e2p_feature2string@@Base+0xd4>
    292c:	mov	w0, #0x52                  	// #82
    2930:	strb	w0, [sp, #39]
    2934:	b	2944 <e2p_feature2string@@Base+0xd4>
    2938:	mov	w0, #0x3f                  	// #63
    293c:	strb	w0, [sp, #39]
    2940:	nop
    2944:	str	wzr, [sp, #32]
    2948:	b	2958 <e2p_feature2string@@Base+0xe8>
    294c:	ldr	w0, [sp, #32]
    2950:	add	w0, w0, #0x1
    2954:	str	w0, [sp, #32]
    2958:	ldr	w0, [sp, #24]
    295c:	lsr	w0, w0, #1
    2960:	str	w0, [sp, #24]
    2964:	ldr	w0, [sp, #24]
    2968:	cmp	w0, #0x0
    296c:	b.ne	294c <e2p_feature2string@@Base+0xdc>  // b.any
    2970:	ldrb	w0, [sp, #39]
    2974:	ldr	w3, [sp, #32]
    2978:	mov	w2, w0
    297c:	adrp	x0, 7000 <e2p_str2encoding_flags@@Base+0x424>
    2980:	add	x1, x0, #0x48
    2984:	adrp	x0, 1a000 <e2p_str2encoding_flags@@Base+0x13424>
    2988:	add	x0, x0, #0x890
    298c:	bl	23f0 <sprintf@plt>
    2990:	adrp	x0, 1a000 <e2p_str2encoding_flags@@Base+0x13424>
    2994:	add	x0, x0, #0x890
    2998:	ldp	x29, x30, [sp], #48
    299c:	ret

00000000000029a0 <e2p_string2feature@@Base>:
    29a0:	stp	x29, x30, [sp, #-80]!
    29a4:	mov	x29, sp
    29a8:	str	x0, [sp, #40]
    29ac:	str	x1, [sp, #32]
    29b0:	str	x2, [sp, #24]
    29b4:	adrp	x0, 1a000 <e2p_str2encoding_flags@@Base+0x13424>
    29b8:	add	x0, x0, #0x1b8
    29bc:	str	x0, [sp, #72]
    29c0:	b	2a14 <e2p_string2feature@@Base+0x74>
    29c4:	ldr	x0, [sp, #72]
    29c8:	ldr	x0, [x0, #8]
    29cc:	mov	x1, x0
    29d0:	ldr	x0, [sp, #40]
    29d4:	bl	24e0 <strcasecmp@plt>
    29d8:	cmp	w0, #0x0
    29dc:	b.ne	2a08 <e2p_string2feature@@Base+0x68>  // b.any
    29e0:	ldr	x0, [sp, #72]
    29e4:	ldr	w1, [x0]
    29e8:	ldr	x0, [sp, #32]
    29ec:	str	w1, [x0]
    29f0:	ldr	x0, [sp, #72]
    29f4:	ldr	w1, [x0, #4]
    29f8:	ldr	x0, [sp, #24]
    29fc:	str	w1, [x0]
    2a00:	mov	w0, #0x0                   	// #0
    2a04:	b	2b78 <e2p_string2feature@@Base+0x1d8>
    2a08:	ldr	x0, [sp, #72]
    2a0c:	add	x0, x0, #0x10
    2a10:	str	x0, [sp, #72]
    2a14:	ldr	x0, [sp, #72]
    2a18:	ldr	x0, [x0, #8]
    2a1c:	cmp	x0, #0x0
    2a20:	b.ne	29c4 <e2p_string2feature@@Base+0x24>  // b.any
    2a24:	mov	x2, #0x8                   	// #8
    2a28:	adrp	x0, 7000 <e2p_str2encoding_flags@@Base+0x424>
    2a2c:	add	x1, x0, #0x58
    2a30:	ldr	x0, [sp, #40]
    2a34:	bl	25b0 <strncasecmp@plt>
    2a38:	cmp	w0, #0x0
    2a3c:	b.eq	2a48 <e2p_string2feature@@Base+0xa8>  // b.none
    2a40:	mov	w0, #0x1                   	// #1
    2a44:	b	2b78 <e2p_string2feature@@Base+0x1d8>
    2a48:	ldr	x0, [sp, #40]
    2a4c:	add	x0, x0, #0x8
    2a50:	ldrb	w0, [x0]
    2a54:	sub	w0, w0, #0x43
    2a58:	cmp	w0, #0x2f
    2a5c:	cset	w1, hi  // hi = pmore
    2a60:	and	w1, w1, #0xff
    2a64:	cmp	w1, #0x0
    2a68:	b.ne	2ae8 <e2p_string2feature@@Base+0x148>  // b.any
    2a6c:	mov	x1, #0x1                   	// #1
    2a70:	lsl	x0, x1, x0
    2a74:	and	x1, x0, #0x800000008000
    2a78:	cmp	x1, #0x0
    2a7c:	cset	w1, ne  // ne = any
    2a80:	and	w1, w1, #0xff
    2a84:	cmp	w1, #0x0
    2a88:	b.ne	2ad8 <e2p_string2feature@@Base+0x138>  // b.any
    2a8c:	and	x1, x0, #0x4000000040
    2a90:	cmp	x1, #0x0
    2a94:	cset	w1, ne  // ne = any
    2a98:	and	w1, w1, #0xff
    2a9c:	cmp	w1, #0x0
    2aa0:	b.ne	2ac8 <e2p_string2feature@@Base+0x128>  // b.any
    2aa4:	and	x0, x0, #0x100000001
    2aa8:	cmp	x0, #0x0
    2aac:	cset	w0, ne  // ne = any
    2ab0:	and	w0, w0, #0xff
    2ab4:	cmp	w0, #0x0
    2ab8:	b.eq	2ae8 <e2p_string2feature@@Base+0x148>  // b.none
    2abc:	ldr	x0, [sp, #32]
    2ac0:	str	wzr, [x0]
    2ac4:	b	2af0 <e2p_string2feature@@Base+0x150>
    2ac8:	ldr	x0, [sp, #32]
    2acc:	mov	w1, #0x1                   	// #1
    2ad0:	str	w1, [x0]
    2ad4:	b	2af0 <e2p_string2feature@@Base+0x150>
    2ad8:	ldr	x0, [sp, #32]
    2adc:	mov	w1, #0x2                   	// #2
    2ae0:	str	w1, [x0]
    2ae4:	b	2af0 <e2p_string2feature@@Base+0x150>
    2ae8:	mov	w0, #0x1                   	// #1
    2aec:	b	2b78 <e2p_string2feature@@Base+0x1d8>
    2af0:	ldr	x0, [sp, #40]
    2af4:	add	x0, x0, #0x9
    2af8:	ldrb	w0, [x0]
    2afc:	cmp	w0, #0x0
    2b00:	b.ne	2b0c <e2p_string2feature@@Base+0x16c>  // b.any
    2b04:	mov	w0, #0x1                   	// #1
    2b08:	b	2b78 <e2p_string2feature@@Base+0x1d8>
    2b0c:	ldr	x0, [sp, #40]
    2b10:	add	x0, x0, #0x9
    2b14:	add	x1, sp, #0x38
    2b18:	mov	w2, #0xa                   	// #10
    2b1c:	bl	2580 <strtol@plt>
    2b20:	str	w0, [sp, #68]
    2b24:	ldr	w0, [sp, #68]
    2b28:	cmp	w0, #0x1f
    2b2c:	b.gt	2b3c <e2p_string2feature@@Base+0x19c>
    2b30:	ldr	w0, [sp, #68]
    2b34:	cmp	w0, #0x0
    2b38:	b.ge	2b44 <e2p_string2feature@@Base+0x1a4>  // b.tcont
    2b3c:	mov	w0, #0x1                   	// #1
    2b40:	b	2b78 <e2p_string2feature@@Base+0x1d8>
    2b44:	ldr	x0, [sp, #56]
    2b48:	ldrb	w0, [x0]
    2b4c:	cmp	w0, #0x0
    2b50:	b.eq	2b5c <e2p_string2feature@@Base+0x1bc>  // b.none
    2b54:	mov	w0, #0x1                   	// #1
    2b58:	b	2b78 <e2p_string2feature@@Base+0x1d8>
    2b5c:	ldr	w0, [sp, #68]
    2b60:	mov	w1, #0x1                   	// #1
    2b64:	lsl	w0, w1, w0
    2b68:	mov	w1, w0
    2b6c:	ldr	x0, [sp, #24]
    2b70:	str	w1, [x0]
    2b74:	mov	w0, #0x0                   	// #0
    2b78:	ldp	x29, x30, [sp], #80
    2b7c:	ret

0000000000002b80 <e2p_jrnl_feature2string@@Base>:
    2b80:	stp	x29, x30, [sp, #-48]!
    2b84:	mov	x29, sp
    2b88:	str	w0, [sp, #28]
    2b8c:	str	w1, [sp, #24]
    2b90:	adrp	x0, 1a000 <e2p_str2encoding_flags@@Base+0x13424>
    2b94:	add	x0, x0, #0x478
    2b98:	str	x0, [sp, #40]
    2b9c:	b	2be0 <e2p_jrnl_feature2string@@Base+0x60>
    2ba0:	ldr	x0, [sp, #40]
    2ba4:	ldr	w0, [x0]
    2ba8:	ldr	w1, [sp, #28]
    2bac:	cmp	w1, w0
    2bb0:	b.ne	2bd4 <e2p_jrnl_feature2string@@Base+0x54>  // b.any
    2bb4:	ldr	x0, [sp, #40]
    2bb8:	ldr	w0, [x0, #4]
    2bbc:	ldr	w1, [sp, #24]
    2bc0:	cmp	w1, w0
    2bc4:	b.ne	2bd4 <e2p_jrnl_feature2string@@Base+0x54>  // b.any
    2bc8:	ldr	x0, [sp, #40]
    2bcc:	ldr	x0, [x0, #8]
    2bd0:	b	2ca8 <e2p_jrnl_feature2string@@Base+0x128>
    2bd4:	ldr	x0, [sp, #40]
    2bd8:	add	x0, x0, #0x10
    2bdc:	str	x0, [sp, #40]
    2be0:	ldr	x0, [sp, #40]
    2be4:	ldr	x0, [x0, #8]
    2be8:	cmp	x0, #0x0
    2bec:	b.ne	2ba0 <e2p_jrnl_feature2string@@Base+0x20>  // b.any
    2bf0:	ldr	w0, [sp, #28]
    2bf4:	cmp	w0, #0x2
    2bf8:	b.eq	2c3c <e2p_jrnl_feature2string@@Base+0xbc>  // b.none
    2bfc:	ldr	w0, [sp, #28]
    2c00:	cmp	w0, #0x2
    2c04:	b.gt	2c48 <e2p_jrnl_feature2string@@Base+0xc8>
    2c08:	ldr	w0, [sp, #28]
    2c0c:	cmp	w0, #0x0
    2c10:	b.eq	2c24 <e2p_jrnl_feature2string@@Base+0xa4>  // b.none
    2c14:	ldr	w0, [sp, #28]
    2c18:	cmp	w0, #0x1
    2c1c:	b.eq	2c30 <e2p_jrnl_feature2string@@Base+0xb0>  // b.none
    2c20:	b	2c48 <e2p_jrnl_feature2string@@Base+0xc8>
    2c24:	mov	w0, #0x43                  	// #67
    2c28:	strb	w0, [sp, #39]
    2c2c:	b	2c54 <e2p_jrnl_feature2string@@Base+0xd4>
    2c30:	mov	w0, #0x49                  	// #73
    2c34:	strb	w0, [sp, #39]
    2c38:	b	2c54 <e2p_jrnl_feature2string@@Base+0xd4>
    2c3c:	mov	w0, #0x52                  	// #82
    2c40:	strb	w0, [sp, #39]
    2c44:	b	2c54 <e2p_jrnl_feature2string@@Base+0xd4>
    2c48:	mov	w0, #0x3f                  	// #63
    2c4c:	strb	w0, [sp, #39]
    2c50:	nop
    2c54:	str	wzr, [sp, #32]
    2c58:	b	2c68 <e2p_jrnl_feature2string@@Base+0xe8>
    2c5c:	ldr	w0, [sp, #32]
    2c60:	add	w0, w0, #0x1
    2c64:	str	w0, [sp, #32]
    2c68:	ldr	w0, [sp, #24]
    2c6c:	lsr	w0, w0, #1
    2c70:	str	w0, [sp, #24]
    2c74:	ldr	w0, [sp, #24]
    2c78:	cmp	w0, #0x0
    2c7c:	b.ne	2c5c <e2p_jrnl_feature2string@@Base+0xdc>  // b.any
    2c80:	ldrb	w0, [sp, #39]
    2c84:	ldr	w3, [sp, #32]
    2c88:	mov	w2, w0
    2c8c:	adrp	x0, 7000 <e2p_str2encoding_flags@@Base+0x424>
    2c90:	add	x1, x0, #0x48
    2c94:	adrp	x0, 1a000 <e2p_str2encoding_flags@@Base+0x13424>
    2c98:	add	x0, x0, #0x8a8
    2c9c:	bl	23f0 <sprintf@plt>
    2ca0:	adrp	x0, 1a000 <e2p_str2encoding_flags@@Base+0x13424>
    2ca4:	add	x0, x0, #0x8a8
    2ca8:	ldp	x29, x30, [sp], #48
    2cac:	ret

0000000000002cb0 <e2p_jrnl_string2feature@@Base>:
    2cb0:	stp	x29, x30, [sp, #-80]!
    2cb4:	mov	x29, sp
    2cb8:	str	x0, [sp, #40]
    2cbc:	str	x1, [sp, #32]
    2cc0:	str	x2, [sp, #24]
    2cc4:	adrp	x0, 1a000 <e2p_str2encoding_flags@@Base+0x13424>
    2cc8:	add	x0, x0, #0x478
    2ccc:	str	x0, [sp, #72]
    2cd0:	b	2d24 <e2p_jrnl_string2feature@@Base+0x74>
    2cd4:	ldr	x0, [sp, #72]
    2cd8:	ldr	x0, [x0, #8]
    2cdc:	mov	x1, x0
    2ce0:	ldr	x0, [sp, #40]
    2ce4:	bl	24e0 <strcasecmp@plt>
    2ce8:	cmp	w0, #0x0
    2cec:	b.ne	2d18 <e2p_jrnl_string2feature@@Base+0x68>  // b.any
    2cf0:	ldr	x0, [sp, #72]
    2cf4:	ldr	w1, [x0]
    2cf8:	ldr	x0, [sp, #32]
    2cfc:	str	w1, [x0]
    2d00:	ldr	x0, [sp, #72]
    2d04:	ldr	w1, [x0, #4]
    2d08:	ldr	x0, [sp, #24]
    2d0c:	str	w1, [x0]
    2d10:	mov	w0, #0x0                   	// #0
    2d14:	b	2e88 <e2p_jrnl_string2feature@@Base+0x1d8>
    2d18:	ldr	x0, [sp, #72]
    2d1c:	add	x0, x0, #0x10
    2d20:	str	x0, [sp, #72]
    2d24:	ldr	x0, [sp, #72]
    2d28:	ldr	x0, [x0, #8]
    2d2c:	cmp	x0, #0x0
    2d30:	b.ne	2cd4 <e2p_jrnl_string2feature@@Base+0x24>  // b.any
    2d34:	mov	x2, #0x8                   	// #8
    2d38:	adrp	x0, 7000 <e2p_str2encoding_flags@@Base+0x424>
    2d3c:	add	x1, x0, #0x58
    2d40:	ldr	x0, [sp, #40]
    2d44:	bl	25b0 <strncasecmp@plt>
    2d48:	cmp	w0, #0x0
    2d4c:	b.eq	2d58 <e2p_jrnl_string2feature@@Base+0xa8>  // b.none
    2d50:	mov	w0, #0x1                   	// #1
    2d54:	b	2e88 <e2p_jrnl_string2feature@@Base+0x1d8>
    2d58:	ldr	x0, [sp, #40]
    2d5c:	add	x0, x0, #0x8
    2d60:	ldrb	w0, [x0]
    2d64:	sub	w0, w0, #0x43
    2d68:	cmp	w0, #0x2f
    2d6c:	cset	w1, hi  // hi = pmore
    2d70:	and	w1, w1, #0xff
    2d74:	cmp	w1, #0x0
    2d78:	b.ne	2df8 <e2p_jrnl_string2feature@@Base+0x148>  // b.any
    2d7c:	mov	x1, #0x1                   	// #1
    2d80:	lsl	x0, x1, x0
    2d84:	and	x1, x0, #0x800000008000
    2d88:	cmp	x1, #0x0
    2d8c:	cset	w1, ne  // ne = any
    2d90:	and	w1, w1, #0xff
    2d94:	cmp	w1, #0x0
    2d98:	b.ne	2de8 <e2p_jrnl_string2feature@@Base+0x138>  // b.any
    2d9c:	and	x1, x0, #0x4000000040
    2da0:	cmp	x1, #0x0
    2da4:	cset	w1, ne  // ne = any
    2da8:	and	w1, w1, #0xff
    2dac:	cmp	w1, #0x0
    2db0:	b.ne	2dd8 <e2p_jrnl_string2feature@@Base+0x128>  // b.any
    2db4:	and	x0, x0, #0x100000001
    2db8:	cmp	x0, #0x0
    2dbc:	cset	w0, ne  // ne = any
    2dc0:	and	w0, w0, #0xff
    2dc4:	cmp	w0, #0x0
    2dc8:	b.eq	2df8 <e2p_jrnl_string2feature@@Base+0x148>  // b.none
    2dcc:	ldr	x0, [sp, #32]
    2dd0:	str	wzr, [x0]
    2dd4:	b	2e00 <e2p_jrnl_string2feature@@Base+0x150>
    2dd8:	ldr	x0, [sp, #32]
    2ddc:	mov	w1, #0x1                   	// #1
    2de0:	str	w1, [x0]
    2de4:	b	2e00 <e2p_jrnl_string2feature@@Base+0x150>
    2de8:	ldr	x0, [sp, #32]
    2dec:	mov	w1, #0x2                   	// #2
    2df0:	str	w1, [x0]
    2df4:	b	2e00 <e2p_jrnl_string2feature@@Base+0x150>
    2df8:	mov	w0, #0x1                   	// #1
    2dfc:	b	2e88 <e2p_jrnl_string2feature@@Base+0x1d8>
    2e00:	ldr	x0, [sp, #40]
    2e04:	add	x0, x0, #0x9
    2e08:	ldrb	w0, [x0]
    2e0c:	cmp	w0, #0x0
    2e10:	b.ne	2e1c <e2p_jrnl_string2feature@@Base+0x16c>  // b.any
    2e14:	mov	w0, #0x1                   	// #1
    2e18:	b	2e88 <e2p_jrnl_string2feature@@Base+0x1d8>
    2e1c:	ldr	x0, [sp, #40]
    2e20:	add	x0, x0, #0x9
    2e24:	add	x1, sp, #0x38
    2e28:	mov	w2, #0xa                   	// #10
    2e2c:	bl	2580 <strtol@plt>
    2e30:	str	w0, [sp, #68]
    2e34:	ldr	w0, [sp, #68]
    2e38:	cmp	w0, #0x1f
    2e3c:	b.gt	2e4c <e2p_jrnl_string2feature@@Base+0x19c>
    2e40:	ldr	w0, [sp, #68]
    2e44:	cmp	w0, #0x0
    2e48:	b.ge	2e54 <e2p_jrnl_string2feature@@Base+0x1a4>  // b.tcont
    2e4c:	mov	w0, #0x1                   	// #1
    2e50:	b	2e88 <e2p_jrnl_string2feature@@Base+0x1d8>
    2e54:	ldr	x0, [sp, #56]
    2e58:	ldrb	w0, [x0]
    2e5c:	cmp	w0, #0x0
    2e60:	b.eq	2e6c <e2p_jrnl_string2feature@@Base+0x1bc>  // b.none
    2e64:	mov	w0, #0x1                   	// #1
    2e68:	b	2e88 <e2p_jrnl_string2feature@@Base+0x1d8>
    2e6c:	ldr	w0, [sp, #68]
    2e70:	mov	w1, #0x1                   	// #1
    2e74:	lsl	w0, w1, w0
    2e78:	mov	w1, w0
    2e7c:	ldr	x0, [sp, #24]
    2e80:	str	w1, [x0]
    2e84:	mov	w0, #0x0                   	// #0
    2e88:	ldp	x29, x30, [sp], #80
    2e8c:	ret
    2e90:	stp	x29, x30, [sp, #-32]!
    2e94:	mov	x29, sp
    2e98:	str	x0, [sp, #24]
    2e9c:	b	2eac <e2p_jrnl_string2feature@@Base+0x1fc>
    2ea0:	ldr	x0, [sp, #24]
    2ea4:	add	x0, x0, #0x1
    2ea8:	str	x0, [sp, #24]
    2eac:	ldr	x0, [sp, #24]
    2eb0:	ldrb	w0, [x0]
    2eb4:	cmp	w0, #0x0
    2eb8:	b.eq	2ee8 <e2p_jrnl_string2feature@@Base+0x238>  // b.none
    2ebc:	bl	2570 <__ctype_b_loc@plt>
    2ec0:	ldr	x1, [x0]
    2ec4:	ldr	x0, [sp, #24]
    2ec8:	ldrb	w0, [x0]
    2ecc:	and	x0, x0, #0xff
    2ed0:	lsl	x0, x0, #1
    2ed4:	add	x0, x1, x0
    2ed8:	ldrh	w0, [x0]
    2edc:	and	w0, w0, #0x2000
    2ee0:	cmp	w0, #0x0
    2ee4:	b.ne	2ea0 <e2p_jrnl_string2feature@@Base+0x1f0>  // b.any
    2ee8:	ldr	x0, [sp, #24]
    2eec:	ldp	x29, x30, [sp], #32
    2ef0:	ret
    2ef4:	stp	x29, x30, [sp, #-32]!
    2ef8:	mov	x29, sp
    2efc:	str	x0, [sp, #24]
    2f00:	b	2f10 <e2p_jrnl_string2feature@@Base+0x260>
    2f04:	ldr	x0, [sp, #24]
    2f08:	add	x0, x0, #0x1
    2f0c:	str	x0, [sp, #24]
    2f10:	ldr	x0, [sp, #24]
    2f14:	ldrb	w0, [x0]
    2f18:	cmp	w0, #0x0
    2f1c:	b.eq	2f5c <e2p_jrnl_string2feature@@Base+0x2ac>  // b.none
    2f20:	bl	2570 <__ctype_b_loc@plt>
    2f24:	ldr	x1, [x0]
    2f28:	ldr	x0, [sp, #24]
    2f2c:	ldrb	w0, [x0]
    2f30:	and	x0, x0, #0xff
    2f34:	lsl	x0, x0, #1
    2f38:	add	x0, x1, x0
    2f3c:	ldrh	w0, [x0]
    2f40:	and	w0, w0, #0x2000
    2f44:	cmp	w0, #0x0
    2f48:	b.ne	2f5c <e2p_jrnl_string2feature@@Base+0x2ac>  // b.any
    2f4c:	ldr	x0, [sp, #24]
    2f50:	ldrb	w0, [x0]
    2f54:	cmp	w0, #0x2c
    2f58:	b.ne	2f04 <e2p_jrnl_string2feature@@Base+0x254>  // b.any
    2f5c:	ldr	x0, [sp, #24]
    2f60:	ldp	x29, x30, [sp], #32
    2f64:	ret

0000000000002f68 <e2p_edit_feature2@@Base>:
    2f68:	stp	x29, x30, [sp, #-112]!
    2f6c:	mov	x29, sp
    2f70:	str	x0, [sp, #56]
    2f74:	str	x1, [sp, #48]
    2f78:	str	x2, [sp, #40]
    2f7c:	str	x3, [sp, #32]
    2f80:	str	x4, [sp, #24]
    2f84:	str	x5, [sp, #16]
    2f88:	str	wzr, [sp, #88]
    2f8c:	ldr	x0, [sp, #32]
    2f90:	cmp	x0, #0x0
    2f94:	b.ne	2fa0 <e2p_edit_feature2@@Base+0x38>  // b.any
    2f98:	ldr	x0, [sp, #40]
    2f9c:	str	x0, [sp, #32]
    2fa0:	ldr	x0, [sp, #24]
    2fa4:	cmp	x0, #0x0
    2fa8:	b.eq	2fb4 <e2p_edit_feature2@@Base+0x4c>  // b.none
    2fac:	ldr	x0, [sp, #24]
    2fb0:	str	wzr, [x0]
    2fb4:	ldr	x0, [sp, #16]
    2fb8:	cmp	x0, #0x0
    2fbc:	b.eq	2fc8 <e2p_edit_feature2@@Base+0x60>  // b.none
    2fc0:	ldr	x0, [sp, #16]
    2fc4:	str	wzr, [x0]
    2fc8:	ldr	x0, [sp, #56]
    2fcc:	bl	23a0 <strlen@plt>
    2fd0:	add	x0, x0, #0x1
    2fd4:	bl	2460 <malloc@plt>
    2fd8:	str	x0, [sp, #80]
    2fdc:	ldr	x0, [sp, #80]
    2fe0:	cmp	x0, #0x0
    2fe4:	b.ne	2ff0 <e2p_edit_feature2@@Base+0x88>  // b.any
    2fe8:	mov	w0, #0x1                   	// #1
    2fec:	b	32c8 <e2p_edit_feature2@@Base+0x360>
    2ff0:	ldr	x1, [sp, #56]
    2ff4:	ldr	x0, [sp, #80]
    2ff8:	bl	2600 <strcpy@plt>
    2ffc:	ldr	x0, [sp, #80]
    3000:	str	x0, [sp, #104]
    3004:	b	3290 <e2p_edit_feature2@@Base+0x328>
    3008:	str	wzr, [sp, #92]
    300c:	ldr	x0, [sp, #104]
    3010:	bl	2e90 <e2p_jrnl_string2feature@@Base+0x1e0>
    3014:	str	x0, [sp, #104]
    3018:	ldr	x0, [sp, #104]
    301c:	bl	2ef4 <e2p_jrnl_string2feature@@Base+0x244>
    3020:	str	x0, [sp, #96]
    3024:	ldr	x0, [sp, #96]
    3028:	ldrb	w0, [x0]
    302c:	cmp	w0, #0x0
    3030:	b.ne	303c <e2p_edit_feature2@@Base+0xd4>  // b.any
    3034:	str	xzr, [sp, #96]
    3038:	b	3044 <e2p_edit_feature2@@Base+0xdc>
    303c:	ldr	x0, [sp, #96]
    3040:	strb	wzr, [x0]
    3044:	adrp	x0, 7000 <e2p_str2encoding_flags@@Base+0x424>
    3048:	add	x1, x0, #0x68
    304c:	ldr	x0, [sp, #104]
    3050:	bl	24e0 <strcasecmp@plt>
    3054:	cmp	w0, #0x0
    3058:	b.eq	3074 <e2p_edit_feature2@@Base+0x10c>  // b.none
    305c:	adrp	x0, 7000 <e2p_str2encoding_flags@@Base+0x424>
    3060:	add	x1, x0, #0x70
    3064:	ldr	x0, [sp, #104]
    3068:	bl	24e0 <strcasecmp@plt>
    306c:	cmp	w0, #0x0
    3070:	b.ne	3098 <e2p_edit_feature2@@Base+0x130>  // b.any
    3074:	ldr	x0, [sp, #48]
    3078:	str	wzr, [x0]
    307c:	ldr	x0, [sp, #48]
    3080:	add	x0, x0, #0x4
    3084:	str	wzr, [x0]
    3088:	ldr	x0, [sp, #48]
    308c:	add	x0, x0, #0x8
    3090:	str	wzr, [x0]
    3094:	b	3270 <e2p_edit_feature2@@Base+0x308>
    3098:	ldr	x0, [sp, #104]
    309c:	ldrb	w0, [x0]
    30a0:	cmp	w0, #0x5e
    30a4:	b.eq	30c0 <e2p_edit_feature2@@Base+0x158>  // b.none
    30a8:	cmp	w0, #0x5e
    30ac:	b.gt	30dc <e2p_edit_feature2@@Base+0x174>
    30b0:	cmp	w0, #0x2b
    30b4:	b.eq	30cc <e2p_edit_feature2@@Base+0x164>  // b.none
    30b8:	cmp	w0, #0x2d
    30bc:	b.ne	30dc <e2p_edit_feature2@@Base+0x174>  // b.any
    30c0:	ldr	w0, [sp, #92]
    30c4:	add	w0, w0, #0x1
    30c8:	str	w0, [sp, #92]
    30cc:	ldr	x0, [sp, #104]
    30d0:	add	x0, x0, #0x1
    30d4:	str	x0, [sp, #104]
    30d8:	nop
    30dc:	add	x1, sp, #0x4c
    30e0:	add	x0, sp, #0x48
    30e4:	mov	x2, x1
    30e8:	mov	x1, x0
    30ec:	ldr	x0, [sp, #104]
    30f0:	bl	23c0 <e2p_string2feature@plt>
    30f4:	cmp	w0, #0x0
    30f8:	b.eq	3108 <e2p_edit_feature2@@Base+0x1a0>  // b.none
    30fc:	mov	w0, #0x1                   	// #1
    3100:	str	w0, [sp, #88]
    3104:	b	32bc <e2p_edit_feature2@@Base+0x354>
    3108:	ldr	w0, [sp, #92]
    310c:	cmp	w0, #0x0
    3110:	b.eq	31c8 <e2p_edit_feature2@@Base+0x260>  // b.none
    3114:	ldr	x0, [sp, #32]
    3118:	cmp	x0, #0x0
    311c:	b.eq	3188 <e2p_edit_feature2@@Base+0x220>  // b.none
    3120:	ldr	w0, [sp, #72]
    3124:	sxtw	x0, w0
    3128:	lsl	x0, x0, #2
    312c:	ldr	x1, [sp, #32]
    3130:	add	x0, x1, x0
    3134:	ldr	w1, [x0]
    3138:	ldr	w0, [sp, #76]
    313c:	and	w0, w1, w0
    3140:	cmp	w0, #0x0
    3144:	b.ne	3188 <e2p_edit_feature2@@Base+0x220>  // b.any
    3148:	mov	w0, #0x1                   	// #1
    314c:	str	w0, [sp, #88]
    3150:	ldr	x0, [sp, #24]
    3154:	cmp	x0, #0x0
    3158:	b.eq	316c <e2p_edit_feature2@@Base+0x204>  // b.none
    315c:	ldr	w0, [sp, #72]
    3160:	orr	w1, w0, #0x80
    3164:	ldr	x0, [sp, #24]
    3168:	str	w1, [x0]
    316c:	ldr	x0, [sp, #16]
    3170:	cmp	x0, #0x0
    3174:	b.eq	32b0 <e2p_edit_feature2@@Base+0x348>  // b.none
    3178:	ldr	w1, [sp, #76]
    317c:	ldr	x0, [sp, #16]
    3180:	str	w1, [x0]
    3184:	b	32b0 <e2p_edit_feature2@@Base+0x348>
    3188:	ldr	w0, [sp, #72]
    318c:	sxtw	x0, w0
    3190:	lsl	x0, x0, #2
    3194:	ldr	x1, [sp, #48]
    3198:	add	x0, x1, x0
    319c:	ldr	w2, [x0]
    31a0:	ldr	w0, [sp, #76]
    31a4:	mvn	w1, w0
    31a8:	ldr	w0, [sp, #72]
    31ac:	sxtw	x0, w0
    31b0:	lsl	x0, x0, #2
    31b4:	ldr	x3, [sp, #48]
    31b8:	add	x0, x3, x0
    31bc:	and	w1, w2, w1
    31c0:	str	w1, [x0]
    31c4:	b	3270 <e2p_edit_feature2@@Base+0x308>
    31c8:	ldr	x0, [sp, #40]
    31cc:	cmp	x0, #0x0
    31d0:	b.eq	3238 <e2p_edit_feature2@@Base+0x2d0>  // b.none
    31d4:	ldr	w0, [sp, #72]
    31d8:	sxtw	x0, w0
    31dc:	lsl	x0, x0, #2
    31e0:	ldr	x1, [sp, #40]
    31e4:	add	x0, x1, x0
    31e8:	ldr	w1, [x0]
    31ec:	ldr	w0, [sp, #76]
    31f0:	and	w0, w1, w0
    31f4:	cmp	w0, #0x0
    31f8:	b.ne	3238 <e2p_edit_feature2@@Base+0x2d0>  // b.any
    31fc:	mov	w0, #0x1                   	// #1
    3200:	str	w0, [sp, #88]
    3204:	ldr	x0, [sp, #24]
    3208:	cmp	x0, #0x0
    320c:	b.eq	321c <e2p_edit_feature2@@Base+0x2b4>  // b.none
    3210:	ldr	w1, [sp, #72]
    3214:	ldr	x0, [sp, #24]
    3218:	str	w1, [x0]
    321c:	ldr	x0, [sp, #16]
    3220:	cmp	x0, #0x0
    3224:	b.eq	32b8 <e2p_edit_feature2@@Base+0x350>  // b.none
    3228:	ldr	w1, [sp, #76]
    322c:	ldr	x0, [sp, #16]
    3230:	str	w1, [x0]
    3234:	b	32b8 <e2p_edit_feature2@@Base+0x350>
    3238:	ldr	w0, [sp, #72]
    323c:	sxtw	x0, w0
    3240:	lsl	x0, x0, #2
    3244:	ldr	x1, [sp, #48]
    3248:	add	x0, x1, x0
    324c:	ldr	w2, [x0]
    3250:	ldr	w1, [sp, #76]
    3254:	ldr	w0, [sp, #72]
    3258:	sxtw	x0, w0
    325c:	lsl	x0, x0, #2
    3260:	ldr	x3, [sp, #48]
    3264:	add	x0, x3, x0
    3268:	orr	w1, w2, w1
    326c:	str	w1, [x0]
    3270:	ldr	x0, [sp, #96]
    3274:	cmp	x0, #0x0
    3278:	b.eq	3288 <e2p_edit_feature2@@Base+0x320>  // b.none
    327c:	ldr	x0, [sp, #96]
    3280:	add	x0, x0, #0x1
    3284:	b	328c <e2p_edit_feature2@@Base+0x324>
    3288:	mov	x0, #0x0                   	// #0
    328c:	str	x0, [sp, #104]
    3290:	ldr	x0, [sp, #104]
    3294:	cmp	x0, #0x0
    3298:	b.eq	32bc <e2p_edit_feature2@@Base+0x354>  // b.none
    329c:	ldr	x0, [sp, #104]
    32a0:	ldrb	w0, [x0]
    32a4:	cmp	w0, #0x0
    32a8:	b.ne	3008 <e2p_edit_feature2@@Base+0xa0>  // b.any
    32ac:	b	32bc <e2p_edit_feature2@@Base+0x354>
    32b0:	nop
    32b4:	b	32bc <e2p_edit_feature2@@Base+0x354>
    32b8:	nop
    32bc:	ldr	x0, [sp, #80]
    32c0:	bl	25a0 <free@plt>
    32c4:	ldr	w0, [sp, #88]
    32c8:	ldp	x29, x30, [sp], #112
    32cc:	ret

00000000000032d0 <e2p_edit_feature@@Base>:
    32d0:	stp	x29, x30, [sp, #-48]!
    32d4:	mov	x29, sp
    32d8:	str	x0, [sp, #40]
    32dc:	str	x1, [sp, #32]
    32e0:	str	x2, [sp, #24]
    32e4:	mov	x5, #0x0                   	// #0
    32e8:	mov	x4, #0x0                   	// #0
    32ec:	mov	x3, #0x0                   	// #0
    32f0:	ldr	x2, [sp, #24]
    32f4:	ldr	x1, [sp, #32]
    32f8:	ldr	x0, [sp, #40]
    32fc:	bl	25e0 <e2p_edit_feature2@plt>
    3300:	ldp	x29, x30, [sp], #48
    3304:	ret

0000000000003308 <fgetflags@@Base>:
    3308:	stp	x29, x30, [sp, #-192]!
    330c:	mov	x29, sp
    3310:	str	x0, [sp, #24]
    3314:	str	x1, [sp, #16]
    3318:	str	wzr, [sp, #188]
    331c:	add	x0, sp, #0x30
    3320:	mov	x1, x0
    3324:	ldr	x0, [sp, #24]
    3328:	bl	6d50 <e2p_str2encoding_flags@@Base+0x174>
    332c:	cmp	w0, #0x0
    3330:	b.ne	3354 <fgetflags@@Base+0x4c>  // b.any
    3334:	ldr	w0, [sp, #64]
    3338:	and	w0, w0, #0xf000
    333c:	cmp	w0, #0x8, lsl #12
    3340:	b.eq	3354 <fgetflags@@Base+0x4c>  // b.none
    3344:	ldr	w0, [sp, #64]
    3348:	and	w0, w0, #0xf000
    334c:	cmp	w0, #0x4, lsl #12
    3350:	b.ne	33e8 <fgetflags@@Base+0xe0>  // b.any
    3354:	mov	w1, #0x800                 	// #2048
    3358:	ldr	x0, [sp, #24]
    335c:	bl	2470 <open@plt>
    3360:	str	w0, [sp, #184]
    3364:	ldr	w0, [sp, #184]
    3368:	cmn	w0, #0x1
    336c:	b.ne	3378 <fgetflags@@Base+0x70>  // b.any
    3370:	mov	w0, #0xffffffff            	// #-1
    3374:	b	3400 <fgetflags@@Base+0xf8>
    3378:	add	x0, sp, #0x2c
    337c:	mov	x2, x0
    3380:	mov	x1, #0x6601                	// #26113
    3384:	movk	x1, #0x8008, lsl #16
    3388:	ldr	w0, [sp, #184]
    338c:	bl	26d0 <ioctl@plt>
    3390:	str	w0, [sp, #180]
    3394:	ldr	w0, [sp, #180]
    3398:	cmn	w0, #0x1
    339c:	b.ne	33ac <fgetflags@@Base+0xa4>  // b.any
    33a0:	bl	2680 <__errno_location@plt>
    33a4:	ldr	w0, [x0]
    33a8:	str	w0, [sp, #188]
    33ac:	ldr	w0, [sp, #44]
    33b0:	sxtw	x1, w0
    33b4:	ldr	x0, [sp, #16]
    33b8:	str	x1, [x0]
    33bc:	ldr	w0, [sp, #184]
    33c0:	bl	2510 <close@plt>
    33c4:	ldr	w0, [sp, #188]
    33c8:	cmp	w0, #0x0
    33cc:	b.eq	33e0 <fgetflags@@Base+0xd8>  // b.none
    33d0:	bl	2680 <__errno_location@plt>
    33d4:	mov	x1, x0
    33d8:	ldr	w0, [sp, #188]
    33dc:	str	w0, [x1]
    33e0:	ldr	w0, [sp, #180]
    33e4:	b	3400 <fgetflags@@Base+0xf8>
    33e8:	nop
    33ec:	bl	2680 <__errno_location@plt>
    33f0:	mov	x1, x0
    33f4:	mov	w0, #0x5f                  	// #95
    33f8:	str	w0, [x1]
    33fc:	mov	w0, #0xffffffff            	// #-1
    3400:	ldp	x29, x30, [sp], #192
    3404:	ret

0000000000003408 <fsetflags@@Base>:
    3408:	stp	x29, x30, [sp, #-176]!
    340c:	mov	x29, sp
    3410:	str	x0, [sp, #24]
    3414:	str	x1, [sp, #16]
    3418:	str	wzr, [sp, #172]
    341c:	add	x0, sp, #0x20
    3420:	mov	x1, x0
    3424:	ldr	x0, [sp, #24]
    3428:	bl	6d50 <e2p_str2encoding_flags@@Base+0x174>
    342c:	cmp	w0, #0x0
    3430:	b.ne	3454 <fsetflags@@Base+0x4c>  // b.any
    3434:	ldr	w0, [sp, #48]
    3438:	and	w0, w0, #0xf000
    343c:	cmp	w0, #0x8, lsl #12
    3440:	b.eq	3454 <fsetflags@@Base+0x4c>  // b.none
    3444:	ldr	w0, [sp, #48]
    3448:	and	w0, w0, #0xf000
    344c:	cmp	w0, #0x4, lsl #12
    3450:	b.ne	34e0 <fsetflags@@Base+0xd8>  // b.any
    3454:	mov	w1, #0x800                 	// #2048
    3458:	ldr	x0, [sp, #24]
    345c:	bl	2470 <open@plt>
    3460:	str	w0, [sp, #168]
    3464:	ldr	w0, [sp, #168]
    3468:	cmn	w0, #0x1
    346c:	b.ne	3478 <fsetflags@@Base+0x70>  // b.any
    3470:	mov	w0, #0xffffffff            	// #-1
    3474:	b	34f8 <fsetflags@@Base+0xf0>
    3478:	ldr	x0, [sp, #16]
    347c:	str	w0, [sp, #160]
    3480:	add	x0, sp, #0xa0
    3484:	mov	x2, x0
    3488:	mov	x1, #0x6602                	// #26114
    348c:	movk	x1, #0x4008, lsl #16
    3490:	ldr	w0, [sp, #168]
    3494:	bl	26d0 <ioctl@plt>
    3498:	str	w0, [sp, #164]
    349c:	ldr	w0, [sp, #164]
    34a0:	cmn	w0, #0x1
    34a4:	b.ne	34b4 <fsetflags@@Base+0xac>  // b.any
    34a8:	bl	2680 <__errno_location@plt>
    34ac:	ldr	w0, [x0]
    34b0:	str	w0, [sp, #172]
    34b4:	ldr	w0, [sp, #168]
    34b8:	bl	2510 <close@plt>
    34bc:	ldr	w0, [sp, #172]
    34c0:	cmp	w0, #0x0
    34c4:	b.eq	34d8 <fsetflags@@Base+0xd0>  // b.none
    34c8:	bl	2680 <__errno_location@plt>
    34cc:	mov	x1, x0
    34d0:	ldr	w0, [sp, #172]
    34d4:	str	w0, [x1]
    34d8:	ldr	w0, [sp, #164]
    34dc:	b	34f8 <fsetflags@@Base+0xf0>
    34e0:	nop
    34e4:	bl	2680 <__errno_location@plt>
    34e8:	mov	x1, x0
    34ec:	mov	w0, #0x5f                  	// #95
    34f0:	str	w0, [x1]
    34f4:	mov	w0, #0xffffffff            	// #-1
    34f8:	ldp	x29, x30, [sp], #176
    34fc:	ret

0000000000003500 <fgetversion@@Base>:
    3500:	stp	x29, x30, [sp, #-48]!
    3504:	mov	x29, sp
    3508:	str	x0, [sp, #24]
    350c:	str	x1, [sp, #16]
    3510:	mov	w0, #0xffffffff            	// #-1
    3514:	str	w0, [sp, #32]
    3518:	mov	w0, #0xffffffff            	// #-1
    351c:	str	w0, [sp, #40]
    3520:	str	wzr, [sp, #44]
    3524:	mov	w1, #0x800                 	// #2048
    3528:	ldr	x0, [sp, #24]
    352c:	bl	2470 <open@plt>
    3530:	str	w0, [sp, #36]
    3534:	ldr	w0, [sp, #36]
    3538:	cmn	w0, #0x1
    353c:	b.ne	3548 <fgetversion@@Base+0x48>  // b.any
    3540:	mov	w0, #0xffffffff            	// #-1
    3544:	b	35c0 <fgetversion@@Base+0xc0>
    3548:	add	x0, sp, #0x20
    354c:	mov	x2, x0
    3550:	mov	x1, #0x7601                	// #30209
    3554:	movk	x1, #0x8008, lsl #16
    3558:	ldr	w0, [sp, #36]
    355c:	bl	26d0 <ioctl@plt>
    3560:	str	w0, [sp, #40]
    3564:	ldr	w0, [sp, #40]
    3568:	cmn	w0, #0x1
    356c:	b.ne	357c <fgetversion@@Base+0x7c>  // b.any
    3570:	bl	2680 <__errno_location@plt>
    3574:	ldr	w0, [x0]
    3578:	str	w0, [sp, #44]
    357c:	ldr	w0, [sp, #36]
    3580:	bl	2510 <close@plt>
    3584:	ldr	w0, [sp, #40]
    3588:	cmn	w0, #0x1
    358c:	b.ne	35a0 <fgetversion@@Base+0xa0>  // b.any
    3590:	bl	2680 <__errno_location@plt>
    3594:	mov	x1, x0
    3598:	ldr	w0, [sp, #44]
    359c:	str	w0, [x1]
    35a0:	ldr	w0, [sp, #40]
    35a4:	cmp	w0, #0x0
    35a8:	b.ne	35bc <fgetversion@@Base+0xbc>  // b.any
    35ac:	ldr	w0, [sp, #32]
    35b0:	mov	w1, w0
    35b4:	ldr	x0, [sp, #16]
    35b8:	str	x1, [x0]
    35bc:	ldr	w0, [sp, #40]
    35c0:	ldp	x29, x30, [sp], #48
    35c4:	ret

00000000000035c8 <fsetversion@@Base>:
    35c8:	stp	x29, x30, [sp, #-48]!
    35cc:	mov	x29, sp
    35d0:	str	x0, [sp, #24]
    35d4:	str	x1, [sp, #16]
    35d8:	str	wzr, [sp, #44]
    35dc:	mov	w1, #0x800                 	// #2048
    35e0:	ldr	x0, [sp, #24]
    35e4:	bl	2470 <open@plt>
    35e8:	str	w0, [sp, #40]
    35ec:	ldr	w0, [sp, #40]
    35f0:	cmn	w0, #0x1
    35f4:	b.ne	3600 <fsetversion@@Base+0x38>  // b.any
    35f8:	mov	w0, #0xffffffff            	// #-1
    35fc:	b	3664 <fsetversion@@Base+0x9c>
    3600:	ldr	x0, [sp, #16]
    3604:	str	w0, [sp, #32]
    3608:	add	x0, sp, #0x20
    360c:	mov	x2, x0
    3610:	mov	x1, #0x7602                	// #30210
    3614:	movk	x1, #0x4008, lsl #16
    3618:	ldr	w0, [sp, #40]
    361c:	bl	26d0 <ioctl@plt>
    3620:	str	w0, [sp, #36]
    3624:	ldr	w0, [sp, #36]
    3628:	cmn	w0, #0x1
    362c:	b.ne	363c <fsetversion@@Base+0x74>  // b.any
    3630:	bl	2680 <__errno_location@plt>
    3634:	ldr	w0, [x0]
    3638:	str	w0, [sp, #44]
    363c:	ldr	w0, [sp, #40]
    3640:	bl	2510 <close@plt>
    3644:	ldr	w0, [sp, #44]
    3648:	cmp	w0, #0x0
    364c:	b.eq	3660 <fsetversion@@Base+0x98>  // b.none
    3650:	bl	2680 <__errno_location@plt>
    3654:	mov	x1, x0
    3658:	ldr	w0, [sp, #44]
    365c:	str	w0, [x1]
    3660:	ldr	w0, [sp, #36]
    3664:	ldp	x29, x30, [sp], #48
    3668:	ret

000000000000366c <getflags@@Base>:
    366c:	stp	x29, x30, [sp, #-176]!
    3670:	mov	x29, sp
    3674:	str	w0, [sp, #28]
    3678:	str	x1, [sp, #16]
    367c:	add	x0, sp, #0x28
    3680:	mov	x1, x0
    3684:	ldr	w0, [sp, #28]
    3688:	bl	6d40 <e2p_str2encoding_flags@@Base+0x164>
    368c:	cmp	w0, #0x0
    3690:	b.ne	36b4 <getflags@@Base+0x48>  // b.any
    3694:	ldr	w0, [sp, #56]
    3698:	and	w0, w0, #0xf000
    369c:	cmp	w0, #0x8, lsl #12
    36a0:	b.eq	36b4 <getflags@@Base+0x48>  // b.none
    36a4:	ldr	w0, [sp, #56]
    36a8:	and	w0, w0, #0xf000
    36ac:	cmp	w0, #0x4, lsl #12
    36b0:	b.ne	36e8 <getflags@@Base+0x7c>  // b.any
    36b4:	add	x0, sp, #0x24
    36b8:	mov	x2, x0
    36bc:	mov	x1, #0x6601                	// #26113
    36c0:	movk	x1, #0x8008, lsl #16
    36c4:	ldr	w0, [sp, #28]
    36c8:	bl	26d0 <ioctl@plt>
    36cc:	str	w0, [sp, #172]
    36d0:	ldr	w0, [sp, #36]
    36d4:	sxtw	x1, w0
    36d8:	ldr	x0, [sp, #16]
    36dc:	str	x1, [x0]
    36e0:	ldr	w0, [sp, #172]
    36e4:	b	3700 <getflags@@Base+0x94>
    36e8:	nop
    36ec:	bl	2680 <__errno_location@plt>
    36f0:	mov	x1, x0
    36f4:	mov	w0, #0x5f                  	// #95
    36f8:	str	w0, [x1]
    36fc:	mov	w0, #0xffffffff            	// #-1
    3700:	ldp	x29, x30, [sp], #176
    3704:	ret

0000000000003708 <getversion@@Base>:
    3708:	stp	x29, x30, [sp, #-48]!
    370c:	mov	x29, sp
    3710:	str	w0, [sp, #28]
    3714:	str	x1, [sp, #16]
    3718:	add	x0, sp, #0x28
    371c:	mov	x2, x0
    3720:	mov	x1, #0x7601                	// #30209
    3724:	movk	x1, #0x8008, lsl #16
    3728:	ldr	w0, [sp, #28]
    372c:	bl	26d0 <ioctl@plt>
    3730:	str	w0, [sp, #44]
    3734:	ldr	w0, [sp, #40]
    3738:	sxtw	x1, w0
    373c:	ldr	x0, [sp, #16]
    3740:	str	x1, [x0]
    3744:	ldr	w0, [sp, #44]
    3748:	ldp	x29, x30, [sp], #48
    374c:	ret

0000000000003750 <e2p_hash2string@@Base>:
    3750:	stp	x29, x30, [sp, #-48]!
    3754:	mov	x29, sp
    3758:	str	w0, [sp, #28]
    375c:	adrp	x0, 1a000 <e2p_str2encoding_flags@@Base+0x13424>
    3760:	add	x0, x0, #0x4e8
    3764:	str	x0, [sp, #40]
    3768:	b	3798 <e2p_hash2string@@Base+0x48>
    376c:	ldr	x0, [sp, #40]
    3770:	ldr	w0, [x0]
    3774:	ldr	w1, [sp, #28]
    3778:	cmp	w1, w0
    377c:	b.ne	378c <e2p_hash2string@@Base+0x3c>  // b.any
    3780:	ldr	x0, [sp, #40]
    3784:	ldr	x0, [x0, #8]
    3788:	b	37c8 <e2p_hash2string@@Base+0x78>
    378c:	ldr	x0, [sp, #40]
    3790:	add	x0, x0, #0x10
    3794:	str	x0, [sp, #40]
    3798:	ldr	x0, [sp, #40]
    379c:	ldr	x0, [x0, #8]
    37a0:	cmp	x0, #0x0
    37a4:	b.ne	376c <e2p_hash2string@@Base+0x1c>  // b.any
    37a8:	ldr	w2, [sp, #28]
    37ac:	adrp	x0, 7000 <e2p_str2encoding_flags@@Base+0x424>
    37b0:	add	x1, x0, #0x98
    37b4:	adrp	x0, 1a000 <e2p_str2encoding_flags@@Base+0x13424>
    37b8:	add	x0, x0, #0x8c0
    37bc:	bl	23f0 <sprintf@plt>
    37c0:	adrp	x0, 1a000 <e2p_str2encoding_flags@@Base+0x13424>
    37c4:	add	x0, x0, #0x8c0
    37c8:	ldp	x29, x30, [sp], #48
    37cc:	ret

00000000000037d0 <e2p_string2hash@@Base>:
    37d0:	stp	x29, x30, [sp, #-64]!
    37d4:	mov	x29, sp
    37d8:	str	x0, [sp, #24]
    37dc:	adrp	x0, 1a000 <e2p_str2encoding_flags@@Base+0x13424>
    37e0:	add	x0, x0, #0x4e8
    37e4:	str	x0, [sp, #56]
    37e8:	b	3820 <e2p_string2hash@@Base+0x50>
    37ec:	ldr	x0, [sp, #56]
    37f0:	ldr	x0, [x0, #8]
    37f4:	mov	x1, x0
    37f8:	ldr	x0, [sp, #24]
    37fc:	bl	24e0 <strcasecmp@plt>
    3800:	cmp	w0, #0x0
    3804:	b.ne	3814 <e2p_string2hash@@Base+0x44>  // b.any
    3808:	ldr	x0, [sp, #56]
    380c:	ldr	w0, [x0]
    3810:	b	38c4 <e2p_string2hash@@Base+0xf4>
    3814:	ldr	x0, [sp, #56]
    3818:	add	x0, x0, #0x10
    381c:	str	x0, [sp, #56]
    3820:	ldr	x0, [sp, #56]
    3824:	ldr	x0, [x0, #8]
    3828:	cmp	x0, #0x0
    382c:	b.ne	37ec <e2p_string2hash@@Base+0x1c>  // b.any
    3830:	mov	x2, #0x8                   	// #8
    3834:	adrp	x0, 7000 <e2p_str2encoding_flags@@Base+0x424>
    3838:	add	x1, x0, #0xa8
    383c:	ldr	x0, [sp, #24]
    3840:	bl	25b0 <strncasecmp@plt>
    3844:	cmp	w0, #0x0
    3848:	b.eq	3854 <e2p_string2hash@@Base+0x84>  // b.none
    384c:	mov	w0, #0xffffffff            	// #-1
    3850:	b	38c4 <e2p_string2hash@@Base+0xf4>
    3854:	ldr	x0, [sp, #24]
    3858:	add	x0, x0, #0x8
    385c:	ldrb	w0, [x0]
    3860:	cmp	w0, #0x0
    3864:	b.ne	3870 <e2p_string2hash@@Base+0xa0>  // b.any
    3868:	mov	w0, #0xffffffff            	// #-1
    386c:	b	38c4 <e2p_string2hash@@Base+0xf4>
    3870:	ldr	x0, [sp, #24]
    3874:	add	x0, x0, #0x8
    3878:	add	x1, sp, #0x28
    387c:	mov	w2, #0xa                   	// #10
    3880:	bl	2580 <strtol@plt>
    3884:	str	w0, [sp, #52]
    3888:	ldr	w0, [sp, #52]
    388c:	cmp	w0, #0xff
    3890:	b.gt	38a0 <e2p_string2hash@@Base+0xd0>
    3894:	ldr	w0, [sp, #52]
    3898:	cmp	w0, #0x0
    389c:	b.ge	38a8 <e2p_string2hash@@Base+0xd8>  // b.tcont
    38a0:	mov	w0, #0xffffffff            	// #-1
    38a4:	b	38c4 <e2p_string2hash@@Base+0xf4>
    38a8:	ldr	x0, [sp, #40]
    38ac:	ldrb	w0, [x0]
    38b0:	cmp	w0, #0x0
    38b4:	b.eq	38c0 <e2p_string2hash@@Base+0xf0>  // b.none
    38b8:	mov	w0, #0xffffffff            	// #-1
    38bc:	b	38c4 <e2p_string2hash@@Base+0xf4>
    38c0:	ldr	w0, [sp, #52]
    38c4:	ldp	x29, x30, [sp], #64
    38c8:	ret

00000000000038cc <iterate_on_dir@@Base>:
    38cc:	stp	x29, x30, [sp, #-96]!
    38d0:	mov	x29, sp
    38d4:	str	x0, [sp, #40]
    38d8:	str	x1, [sp, #32]
    38dc:	str	x2, [sp, #24]
    38e0:	mov	w0, #0xffffffff            	// #-1
    38e4:	str	w0, [sp, #92]
    38e8:	str	wzr, [sp, #84]
    38ec:	mov	w1, #0x3                   	// #3
    38f0:	ldr	x0, [sp, #40]
    38f4:	bl	2440 <pathconf@plt>
    38f8:	str	w0, [sp, #92]
    38fc:	ldr	w0, [sp, #92]
    3900:	cmn	w0, #0x1
    3904:	b.ne	3910 <iterate_on_dir@@Base+0x44>  // b.any
    3908:	mov	w0, #0xe                   	// #14
    390c:	str	w0, [sp, #92]
    3910:	ldr	w0, [sp, #92]
    3914:	add	w0, w0, #0x118
    3918:	str	w0, [sp, #92]
    391c:	ldr	w0, [sp, #92]
    3920:	add	w0, w0, #0x1
    3924:	sxtw	x0, w0
    3928:	bl	2460 <malloc@plt>
    392c:	str	x0, [sp, #72]
    3930:	ldr	x0, [sp, #72]
    3934:	cmp	x0, #0x0
    3938:	b.ne	3944 <iterate_on_dir@@Base+0x78>  // b.any
    393c:	mov	w0, #0xffffffff            	// #-1
    3940:	b	3a14 <iterate_on_dir@@Base+0x148>
    3944:	ldr	w0, [sp, #92]
    3948:	add	w0, w0, #0x1
    394c:	sxtw	x0, w0
    3950:	mov	x2, x0
    3954:	mov	w1, #0x0                   	// #0
    3958:	ldr	x0, [sp, #72]
    395c:	bl	24b0 <memset@plt>
    3960:	ldr	x0, [sp, #40]
    3964:	bl	2410 <opendir@plt>
    3968:	str	x0, [sp, #64]
    396c:	ldr	x0, [sp, #64]
    3970:	cmp	x0, #0x0
    3974:	b.ne	39e8 <iterate_on_dir@@Base+0x11c>  // b.any
    3978:	ldr	x0, [sp, #72]
    397c:	bl	25a0 <free@plt>
    3980:	mov	w0, #0xffffffff            	// #-1
    3984:	b	3a14 <iterate_on_dir@@Base+0x148>
    3988:	ldr	x0, [sp, #56]
    398c:	ldrh	w0, [x0, #16]
    3990:	str	w0, [sp, #88]
    3994:	ldr	w1, [sp, #88]
    3998:	ldr	w0, [sp, #92]
    399c:	cmp	w1, w0
    39a0:	b.le	39ac <iterate_on_dir@@Base+0xe0>
    39a4:	ldr	w0, [sp, #92]
    39a8:	str	w0, [sp, #88]
    39ac:	ldrsw	x0, [sp, #88]
    39b0:	mov	x2, x0
    39b4:	ldr	x1, [sp, #56]
    39b8:	ldr	x0, [sp, #72]
    39bc:	bl	2380 <memcpy@plt>
    39c0:	ldr	x3, [sp, #32]
    39c4:	ldr	x2, [sp, #24]
    39c8:	ldr	x1, [sp, #72]
    39cc:	ldr	x0, [sp, #40]
    39d0:	blr	x3
    39d4:	cmp	w0, #0x0
    39d8:	b.eq	39e8 <iterate_on_dir@@Base+0x11c>  // b.none
    39dc:	ldr	w0, [sp, #84]
    39e0:	add	w0, w0, #0x1
    39e4:	str	w0, [sp, #84]
    39e8:	ldr	x0, [sp, #64]
    39ec:	bl	24f0 <readdir@plt>
    39f0:	str	x0, [sp, #56]
    39f4:	ldr	x0, [sp, #56]
    39f8:	cmp	x0, #0x0
    39fc:	b.ne	3988 <iterate_on_dir@@Base+0xbc>  // b.any
    3a00:	ldr	x0, [sp, #72]
    3a04:	bl	25a0 <free@plt>
    3a08:	ldr	x0, [sp, #64]
    3a0c:	bl	2500 <closedir@plt>
    3a10:	ldr	w0, [sp, #84]
    3a14:	ldp	x29, x30, [sp], #96
    3a18:	ret
    3a1c:	sub	sp, sp, #0x10
    3a20:	str	x0, [sp, #8]
    3a24:	ldr	x0, [sp, #8]
    3a28:	ldr	w0, [x0, #92]
    3a2c:	and	w0, w0, #0x20
    3a30:	cmp	w0, #0x0
    3a34:	cset	w0, ne  // ne = any
    3a38:	and	w0, w0, #0xff
    3a3c:	add	sp, sp, #0x10
    3a40:	ret
    3a44:	sub	sp, sp, #0x10
    3a48:	str	x0, [sp, #8]
    3a4c:	ldr	x0, [sp, #8]
    3a50:	ldr	w0, [x0, #100]
    3a54:	and	w0, w0, #0x200
    3a58:	cmp	w0, #0x0
    3a5c:	cset	w0, ne  // ne = any
    3a60:	and	w0, w0, #0xff
    3a64:	add	sp, sp, #0x10
    3a68:	ret
    3a6c:	sub	sp, sp, #0x10
    3a70:	str	x0, [sp, #8]
    3a74:	ldr	x0, [sp, #8]
    3a78:	ldr	w0, [x0, #100]
    3a7c:	and	w0, w0, #0x400
    3a80:	cmp	w0, #0x0
    3a84:	cset	w0, ne  // ne = any
    3a88:	and	w0, w0, #0xff
    3a8c:	add	sp, sp, #0x10
    3a90:	ret
    3a94:	sub	sp, sp, #0x10
    3a98:	str	x0, [sp, #8]
    3a9c:	ldr	x0, [sp, #8]
    3aa0:	ldr	w0, [x0, #96]
    3aa4:	and	w0, w0, #0x80
    3aa8:	cmp	w0, #0x0
    3aac:	cset	w0, ne  // ne = any
    3ab0:	and	w0, w0, #0xff
    3ab4:	add	sp, sp, #0x10
    3ab8:	ret
    3abc:	sub	sp, sp, #0x10
    3ac0:	str	x0, [sp, #8]
    3ac4:	ldr	x0, [sp, #8]
    3ac8:	ldr	w0, [x0, #96]
    3acc:	and	w0, w0, #0x100
    3ad0:	cmp	w0, #0x0
    3ad4:	cset	w0, ne  // ne = any
    3ad8:	and	w0, w0, #0xff
    3adc:	add	sp, sp, #0x10
    3ae0:	ret
    3ae4:	sub	sp, sp, #0x10
    3ae8:	str	x0, [sp, #8]
    3aec:	ldr	x0, [sp, #8]
    3af0:	ldr	w0, [x0, #96]
    3af4:	and	w0, w0, #0x2000
    3af8:	cmp	w0, #0x0
    3afc:	cset	w0, ne  // ne = any
    3b00:	and	w0, w0, #0xff
    3b04:	add	sp, sp, #0x10
    3b08:	ret
    3b0c:	sub	sp, sp, #0x10
    3b10:	str	x0, [sp, #8]
    3b14:	ldr	x0, [sp, #8]
    3b18:	ldr	w0, [x0, #96]
    3b1c:	and	w0, w0, #0x20000
    3b20:	cmp	w0, #0x0
    3b24:	cset	w0, ne  // ne = any
    3b28:	and	w0, w0, #0xff
    3b2c:	add	sp, sp, #0x10
    3b30:	ret
    3b34:	sub	sp, sp, #0x10
    3b38:	str	x0, [sp, #8]
    3b3c:	str	w1, [sp, #4]
    3b40:	ldr	w0, [sp, #4]
    3b44:	cmp	w0, #0x2
    3b48:	b.eq	3b8c <iterate_on_dir@@Base+0x2c0>  // b.none
    3b4c:	ldr	w0, [sp, #4]
    3b50:	cmp	w0, #0x2
    3b54:	b.hi	3b98 <iterate_on_dir@@Base+0x2cc>  // b.pmore
    3b58:	ldr	w0, [sp, #4]
    3b5c:	cmp	w0, #0x0
    3b60:	b.eq	3b74 <iterate_on_dir@@Base+0x2a8>  // b.none
    3b64:	ldr	w0, [sp, #4]
    3b68:	cmp	w0, #0x1
    3b6c:	b.eq	3b80 <iterate_on_dir@@Base+0x2b4>  // b.none
    3b70:	b	3b98 <iterate_on_dir@@Base+0x2cc>
    3b74:	ldr	x0, [sp, #8]
    3b78:	add	x0, x0, #0x240
    3b7c:	b	3b9c <iterate_on_dir@@Base+0x2d0>
    3b80:	ldr	x0, [sp, #8]
    3b84:	add	x0, x0, #0x244
    3b88:	b	3b9c <iterate_on_dir@@Base+0x2d0>
    3b8c:	ldr	x0, [sp, #8]
    3b90:	add	x0, x0, #0x26c
    3b94:	b	3b9c <iterate_on_dir@@Base+0x2d0>
    3b98:	mov	x0, #0x0                   	// #0
    3b9c:	add	sp, sp, #0x10
    3ba0:	ret
    3ba4:	stp	x29, x30, [sp, #-48]!
    3ba8:	mov	x29, sp
    3bac:	strh	w0, [sp, #30]
    3bb0:	str	x1, [sp, #16]
    3bb4:	ldrh	w0, [sp, #30]
    3bb8:	mov	w2, w0
    3bbc:	adrp	x0, 7000 <e2p_str2encoding_flags@@Base+0x424>
    3bc0:	add	x1, x0, #0xb8
    3bc4:	ldr	x0, [sp, #16]
    3bc8:	bl	26c0 <fprintf@plt>
    3bcc:	ldrh	w0, [sp, #30]
    3bd0:	bl	2560 <getpwuid@plt>
    3bd4:	str	x0, [sp, #40]
    3bd8:	ldr	x0, [sp, #40]
    3bdc:	cmp	x0, #0x0
    3be0:	b.ne	3c00 <iterate_on_dir@@Base+0x334>  // b.any
    3be4:	ldr	x3, [sp, #16]
    3be8:	mov	x2, #0xf                   	// #15
    3bec:	mov	x1, #0x1                   	// #1
    3bf0:	adrp	x0, 7000 <e2p_str2encoding_flags@@Base+0x424>
    3bf4:	add	x0, x0, #0xc0
    3bf8:	bl	25d0 <fwrite@plt>
    3bfc:	b	3c1c <iterate_on_dir@@Base+0x350>
    3c00:	ldr	x0, [sp, #40]
    3c04:	ldr	x0, [x0]
    3c08:	mov	x2, x0
    3c0c:	adrp	x0, 7000 <e2p_str2encoding_flags@@Base+0x424>
    3c10:	add	x1, x0, #0xd0
    3c14:	ldr	x0, [sp, #16]
    3c18:	bl	26c0 <fprintf@plt>
    3c1c:	nop
    3c20:	ldp	x29, x30, [sp], #48
    3c24:	ret
    3c28:	stp	x29, x30, [sp, #-48]!
    3c2c:	mov	x29, sp
    3c30:	strh	w0, [sp, #30]
    3c34:	str	x1, [sp, #16]
    3c38:	ldrh	w0, [sp, #30]
    3c3c:	mov	w2, w0
    3c40:	adrp	x0, 7000 <e2p_str2encoding_flags@@Base+0x424>
    3c44:	add	x1, x0, #0xb8
    3c48:	ldr	x0, [sp, #16]
    3c4c:	bl	26c0 <fprintf@plt>
    3c50:	ldrh	w0, [sp, #30]
    3c54:	bl	2690 <getgrgid@plt>
    3c58:	str	x0, [sp, #40]
    3c5c:	ldr	x0, [sp, #40]
    3c60:	cmp	x0, #0x0
    3c64:	b.ne	3c84 <iterate_on_dir@@Base+0x3b8>  // b.any
    3c68:	ldr	x3, [sp, #16]
    3c6c:	mov	x2, #0x10                  	// #16
    3c70:	mov	x1, #0x1                   	// #1
    3c74:	adrp	x0, 7000 <e2p_str2encoding_flags@@Base+0x424>
    3c78:	add	x0, x0, #0xe0
    3c7c:	bl	25d0 <fwrite@plt>
    3c80:	b	3ca0 <iterate_on_dir@@Base+0x3d4>
    3c84:	ldr	x0, [sp, #40]
    3c88:	ldr	x0, [x0]
    3c8c:	mov	x2, x0
    3c90:	adrp	x0, 7000 <e2p_str2encoding_flags@@Base+0x424>
    3c94:	add	x1, x0, #0xf8
    3c98:	ldr	x0, [sp, #16]
    3c9c:	bl	26c0 <fprintf@plt>
    3ca0:	nop
    3ca4:	ldp	x29, x30, [sp], #48
    3ca8:	ret
    3cac:	stp	x29, x30, [sp, #-48]!
    3cb0:	mov	x29, sp
    3cb4:	str	w0, [sp, #28]
    3cb8:	adrp	x0, 1a000 <e2p_str2encoding_flags@@Base+0x13424>
    3cbc:	add	x0, x0, #0x8d8
    3cc0:	strb	wzr, [x0]
    3cc4:	ldr	w0, [sp, #28]
    3cc8:	cmp	w0, #0x0
    3ccc:	b.ne	3cdc <iterate_on_dir@@Base+0x410>  // b.any
    3cd0:	adrp	x0, 7000 <e2p_str2encoding_flags@@Base+0x424>
    3cd4:	add	x0, x0, #0x108
    3cd8:	b	3fec <iterate_on_dir@@Base+0x720>
    3cdc:	ldr	w1, [sp, #28]
    3ce0:	mov	w0, #0x8cff                	// #36095
    3ce4:	movk	w0, #0x27, lsl #16
    3ce8:	cmp	w1, w0
    3cec:	b.ls	3d68 <iterate_on_dir@@Base+0x49c>  // b.plast
    3cf0:	ldr	w1, [sp, #28]
    3cf4:	mov	w0, #0x49a1                	// #18849
    3cf8:	movk	w0, #0xcf20, lsl #16
    3cfc:	umull	x0, w1, w0
    3d00:	lsr	x0, x0, #32
    3d04:	lsr	w0, w0, #21
    3d08:	str	w0, [sp, #44]
    3d0c:	ldr	w1, [sp, #44]
    3d10:	mov	w0, #0x8d00                	// #36096
    3d14:	movk	w0, #0x27, lsl #16
    3d18:	mul	w0, w1, w0
    3d1c:	mov	w1, w0
    3d20:	ldr	w0, [sp, #28]
    3d24:	sub	w0, w0, w1
    3d28:	str	w0, [sp, #28]
    3d2c:	ldr	w0, [sp, #44]
    3d30:	cmp	w0, #0x1
    3d34:	b.le	3d44 <iterate_on_dir@@Base+0x478>
    3d38:	adrp	x0, 7000 <e2p_str2encoding_flags@@Base+0x424>
    3d3c:	add	x0, x0, #0x110
    3d40:	b	3d4c <iterate_on_dir@@Base+0x480>
    3d44:	adrp	x0, 7000 <e2p_str2encoding_flags@@Base+0x424>
    3d48:	add	x0, x0, #0x118
    3d4c:	mov	x3, x0
    3d50:	ldr	w2, [sp, #44]
    3d54:	adrp	x0, 7000 <e2p_str2encoding_flags@@Base+0x424>
    3d58:	add	x1, x0, #0x120
    3d5c:	adrp	x0, 1a000 <e2p_str2encoding_flags@@Base+0x13424>
    3d60:	add	x0, x0, #0x8d8
    3d64:	bl	23f0 <sprintf@plt>
    3d68:	ldr	w1, [sp, #28]
    3d6c:	mov	w0, #0x3a7f                	// #14975
    3d70:	movk	w0, #0x9, lsl #16
    3d74:	cmp	w1, w0
    3d78:	b.ls	3e34 <iterate_on_dir@@Base+0x568>  // b.plast
    3d7c:	ldr	w1, [sp, #28]
    3d80:	mov	w0, #0xde4d                	// #56909
    3d84:	movk	w0, #0x6ef5, lsl #16
    3d88:	umull	x0, w1, w0
    3d8c:	lsr	x0, x0, #32
    3d90:	lsr	w0, w0, #18
    3d94:	str	w0, [sp, #44]
    3d98:	ldr	w1, [sp, #44]
    3d9c:	mov	w0, #0x3a80                	// #14976
    3da0:	movk	w0, #0x9, lsl #16
    3da4:	mul	w0, w1, w0
    3da8:	mov	w1, w0
    3dac:	ldr	w0, [sp, #28]
    3db0:	sub	w0, w0, w1
    3db4:	str	w0, [sp, #28]
    3db8:	adrp	x0, 1a000 <e2p_str2encoding_flags@@Base+0x13424>
    3dbc:	add	x0, x0, #0x8d8
    3dc0:	ldrb	w0, [x0]
    3dc4:	cmp	w0, #0x0
    3dc8:	b.eq	3dd8 <iterate_on_dir@@Base+0x50c>  // b.none
    3dcc:	adrp	x0, 7000 <e2p_str2encoding_flags@@Base+0x424>
    3dd0:	add	x0, x0, #0x130
    3dd4:	b	3de0 <iterate_on_dir@@Base+0x514>
    3dd8:	adrp	x0, 7000 <e2p_str2encoding_flags@@Base+0x424>
    3ddc:	add	x0, x0, #0x118
    3de0:	ldr	w1, [sp, #44]
    3de4:	cmp	w1, #0x1
    3de8:	b.le	3df8 <iterate_on_dir@@Base+0x52c>
    3dec:	adrp	x1, 7000 <e2p_str2encoding_flags@@Base+0x424>
    3df0:	add	x1, x1, #0x110
    3df4:	b	3e00 <iterate_on_dir@@Base+0x534>
    3df8:	adrp	x1, 7000 <e2p_str2encoding_flags@@Base+0x424>
    3dfc:	add	x1, x1, #0x118
    3e00:	mov	x4, x1
    3e04:	ldr	w3, [sp, #44]
    3e08:	mov	x2, x0
    3e0c:	adrp	x0, 7000 <e2p_str2encoding_flags@@Base+0x424>
    3e10:	add	x1, x0, #0x138
    3e14:	adrp	x0, 1a000 <e2p_str2encoding_flags@@Base+0x13424>
    3e18:	add	x0, x0, #0x9d8
    3e1c:	bl	23f0 <sprintf@plt>
    3e20:	adrp	x0, 1a000 <e2p_str2encoding_flags@@Base+0x13424>
    3e24:	add	x1, x0, #0x9d8
    3e28:	adrp	x0, 1a000 <e2p_str2encoding_flags@@Base+0x13424>
    3e2c:	add	x0, x0, #0x8d8
    3e30:	bl	2490 <strcat@plt>
    3e34:	ldr	w1, [sp, #28]
    3e38:	mov	w0, #0x517f                	// #20863
    3e3c:	movk	w0, #0x1, lsl #16
    3e40:	cmp	w1, w0
    3e44:	b.ls	3f00 <iterate_on_dir@@Base+0x634>  // b.plast
    3e48:	ldr	w1, [sp, #28]
    3e4c:	mov	w0, #0x4507                	// #17671
    3e50:	movk	w0, #0xc22e, lsl #16
    3e54:	umull	x0, w1, w0
    3e58:	lsr	x0, x0, #32
    3e5c:	lsr	w0, w0, #16
    3e60:	str	w0, [sp, #44]
    3e64:	ldr	w1, [sp, #44]
    3e68:	mov	w0, #0x5180                	// #20864
    3e6c:	movk	w0, #0x1, lsl #16
    3e70:	mul	w0, w1, w0
    3e74:	mov	w1, w0
    3e78:	ldr	w0, [sp, #28]
    3e7c:	sub	w0, w0, w1
    3e80:	str	w0, [sp, #28]
    3e84:	adrp	x0, 1a000 <e2p_str2encoding_flags@@Base+0x13424>
    3e88:	add	x0, x0, #0x8d8
    3e8c:	ldrb	w0, [x0]
    3e90:	cmp	w0, #0x0
    3e94:	b.eq	3ea4 <iterate_on_dir@@Base+0x5d8>  // b.none
    3e98:	adrp	x0, 7000 <e2p_str2encoding_flags@@Base+0x424>
    3e9c:	add	x0, x0, #0x130
    3ea0:	b	3eac <iterate_on_dir@@Base+0x5e0>
    3ea4:	adrp	x0, 7000 <e2p_str2encoding_flags@@Base+0x424>
    3ea8:	add	x0, x0, #0x118
    3eac:	ldr	w1, [sp, #44]
    3eb0:	cmp	w1, #0x1
    3eb4:	b.le	3ec4 <iterate_on_dir@@Base+0x5f8>
    3eb8:	adrp	x1, 7000 <e2p_str2encoding_flags@@Base+0x424>
    3ebc:	add	x1, x1, #0x110
    3ec0:	b	3ecc <iterate_on_dir@@Base+0x600>
    3ec4:	adrp	x1, 7000 <e2p_str2encoding_flags@@Base+0x424>
    3ec8:	add	x1, x1, #0x118
    3ecc:	mov	x4, x1
    3ed0:	ldr	w3, [sp, #44]
    3ed4:	mov	x2, x0
    3ed8:	adrp	x0, 7000 <e2p_str2encoding_flags@@Base+0x424>
    3edc:	add	x1, x0, #0x148
    3ee0:	adrp	x0, 1a000 <e2p_str2encoding_flags@@Base+0x13424>
    3ee4:	add	x0, x0, #0x9d8
    3ee8:	bl	23f0 <sprintf@plt>
    3eec:	adrp	x0, 1a000 <e2p_str2encoding_flags@@Base+0x13424>
    3ef0:	add	x1, x0, #0x9d8
    3ef4:	adrp	x0, 1a000 <e2p_str2encoding_flags@@Base+0x13424>
    3ef8:	add	x0, x0, #0x8d8
    3efc:	bl	2490 <strcat@plt>
    3f00:	ldr	w0, [sp, #28]
    3f04:	cmp	w0, #0x0
    3f08:	b.eq	3fe4 <iterate_on_dir@@Base+0x718>  // b.none
    3f0c:	ldr	w1, [sp, #28]
    3f10:	mov	w0, #0xb3c5                	// #46021
    3f14:	movk	w0, #0x91a2, lsl #16
    3f18:	umull	x0, w1, w0
    3f1c:	lsr	x0, x0, #32
    3f20:	lsr	w0, w0, #11
    3f24:	str	w0, [sp, #40]
    3f28:	ldr	w1, [sp, #40]
    3f2c:	mov	w0, #0xe10                 	// #3600
    3f30:	mul	w0, w1, w0
    3f34:	mov	w1, w0
    3f38:	ldr	w0, [sp, #28]
    3f3c:	sub	w0, w0, w1
    3f40:	str	w0, [sp, #28]
    3f44:	ldr	w1, [sp, #28]
    3f48:	mov	w0, #0x8889                	// #34953
    3f4c:	movk	w0, #0x8888, lsl #16
    3f50:	umull	x0, w1, w0
    3f54:	lsr	x0, x0, #32
    3f58:	lsr	w0, w0, #5
    3f5c:	str	w0, [sp, #36]
    3f60:	ldr	w1, [sp, #36]
    3f64:	mov	w0, w1
    3f68:	lsl	w0, w0, #4
    3f6c:	sub	w0, w0, w1
    3f70:	lsl	w0, w0, #2
    3f74:	mov	w1, w0
    3f78:	ldr	w0, [sp, #28]
    3f7c:	sub	w0, w0, w1
    3f80:	str	w0, [sp, #28]
    3f84:	adrp	x0, 1a000 <e2p_str2encoding_flags@@Base+0x13424>
    3f88:	add	x0, x0, #0x8d8
    3f8c:	ldrb	w0, [x0]
    3f90:	cmp	w0, #0x0
    3f94:	b.eq	3fa4 <iterate_on_dir@@Base+0x6d8>  // b.none
    3f98:	adrp	x0, 7000 <e2p_str2encoding_flags@@Base+0x424>
    3f9c:	add	x0, x0, #0x130
    3fa0:	b	3fac <iterate_on_dir@@Base+0x6e0>
    3fa4:	adrp	x0, 7000 <e2p_str2encoding_flags@@Base+0x424>
    3fa8:	add	x0, x0, #0x118
    3fac:	ldr	w5, [sp, #28]
    3fb0:	ldr	w4, [sp, #36]
    3fb4:	ldr	w3, [sp, #40]
    3fb8:	mov	x2, x0
    3fbc:	adrp	x0, 7000 <e2p_str2encoding_flags@@Base+0x424>
    3fc0:	add	x1, x0, #0x158
    3fc4:	adrp	x0, 1a000 <e2p_str2encoding_flags@@Base+0x13424>
    3fc8:	add	x0, x0, #0x9d8
    3fcc:	bl	23f0 <sprintf@plt>
    3fd0:	adrp	x0, 1a000 <e2p_str2encoding_flags@@Base+0x13424>
    3fd4:	add	x1, x0, #0x9d8
    3fd8:	adrp	x0, 1a000 <e2p_str2encoding_flags@@Base+0x13424>
    3fdc:	add	x0, x0, #0x8d8
    3fe0:	bl	2490 <strcat@plt>
    3fe4:	adrp	x0, 1a000 <e2p_str2encoding_flags@@Base+0x13424>
    3fe8:	add	x0, x0, #0x8d8
    3fec:	ldp	x29, x30, [sp], #48
    3ff0:	ret
    3ff4:	stp	x29, x30, [sp, #-64]!
    3ff8:	mov	x29, sp
    3ffc:	str	x0, [sp, #24]
    4000:	str	x1, [sp, #16]
    4004:	str	wzr, [sp, #52]
    4008:	ldr	x0, [sp, #24]
    400c:	add	x0, x0, #0x5c
    4010:	str	x0, [sp, #40]
    4014:	ldr	x3, [sp, #16]
    4018:	mov	x2, #0x19                  	// #25
    401c:	mov	x1, #0x1                   	// #1
    4020:	adrp	x0, 7000 <e2p_str2encoding_flags@@Base+0x424>
    4024:	add	x0, x0, #0x168
    4028:	bl	25d0 <fwrite@plt>
    402c:	str	wzr, [sp, #60]
    4030:	b	40c4 <iterate_on_dir@@Base+0x7f8>
    4034:	str	wzr, [sp, #56]
    4038:	mov	w0, #0x1                   	// #1
    403c:	str	w0, [sp, #36]
    4040:	b	40a0 <iterate_on_dir@@Base+0x7d4>
    4044:	ldr	x0, [sp, #40]
    4048:	ldr	w1, [x0]
    404c:	ldr	w0, [sp, #36]
    4050:	and	w0, w1, w0
    4054:	cmp	w0, #0x0
    4058:	b.eq	4088 <iterate_on_dir@@Base+0x7bc>  // b.none
    405c:	ldr	w1, [sp, #36]
    4060:	ldr	w0, [sp, #60]
    4064:	bl	24c0 <e2p_feature2string@plt>
    4068:	mov	x2, x0
    406c:	adrp	x0, 7000 <e2p_str2encoding_flags@@Base+0x424>
    4070:	add	x1, x0, #0x188
    4074:	ldr	x0, [sp, #16]
    4078:	bl	26c0 <fprintf@plt>
    407c:	ldr	w0, [sp, #52]
    4080:	add	w0, w0, #0x1
    4084:	str	w0, [sp, #52]
    4088:	ldr	w0, [sp, #56]
    408c:	add	w0, w0, #0x1
    4090:	str	w0, [sp, #56]
    4094:	ldr	w0, [sp, #36]
    4098:	lsl	w0, w0, #1
    409c:	str	w0, [sp, #36]
    40a0:	ldr	w0, [sp, #56]
    40a4:	cmp	w0, #0x1f
    40a8:	b.le	4044 <iterate_on_dir@@Base+0x778>
    40ac:	ldr	w0, [sp, #60]
    40b0:	add	w0, w0, #0x1
    40b4:	str	w0, [sp, #60]
    40b8:	ldr	x0, [sp, #40]
    40bc:	add	x0, x0, #0x4
    40c0:	str	x0, [sp, #40]
    40c4:	ldr	w0, [sp, #60]
    40c8:	cmp	w0, #0x2
    40cc:	b.le	4034 <iterate_on_dir@@Base+0x768>
    40d0:	ldr	w0, [sp, #52]
    40d4:	cmp	w0, #0x0
    40d8:	b.ne	40f4 <iterate_on_dir@@Base+0x828>  // b.any
    40dc:	ldr	x3, [sp, #16]
    40e0:	mov	x2, #0x7                   	// #7
    40e4:	mov	x1, #0x1                   	// #1
    40e8:	adrp	x0, 7000 <e2p_str2encoding_flags@@Base+0x424>
    40ec:	add	x0, x0, #0x190
    40f0:	bl	25d0 <fwrite@plt>
    40f4:	ldr	x1, [sp, #16]
    40f8:	mov	w0, #0xa                   	// #10
    40fc:	bl	2420 <fputc@plt>
    4100:	nop
    4104:	ldp	x29, x30, [sp], #64
    4108:	ret
    410c:	stp	x29, x30, [sp, #-48]!
    4110:	mov	x29, sp
    4114:	str	x0, [sp, #24]
    4118:	str	x1, [sp, #16]
    411c:	str	wzr, [sp, #40]
    4120:	ldr	x0, [sp, #24]
    4124:	ldr	w0, [x0, #256]
    4128:	str	w0, [sp, #32]
    412c:	ldr	x3, [sp, #16]
    4130:	mov	x2, #0x19                  	// #25
    4134:	mov	x1, #0x1                   	// #1
    4138:	adrp	x0, 7000 <e2p_str2encoding_flags@@Base+0x424>
    413c:	add	x0, x0, #0x198
    4140:	bl	25d0 <fwrite@plt>
    4144:	ldr	w0, [sp, #32]
    4148:	and	w0, w0, #0x60
    414c:	cmp	w0, #0x0
    4150:	b.eq	4180 <iterate_on_dir@@Base+0x8b4>  // b.none
    4154:	ldr	w0, [sp, #32]
    4158:	and	w0, w0, #0x60
    415c:	bl	26b0 <e2p_mntopt2string@plt>
    4160:	mov	x2, x0
    4164:	adrp	x0, 7000 <e2p_str2encoding_flags@@Base+0x424>
    4168:	add	x1, x0, #0x188
    416c:	ldr	x0, [sp, #16]
    4170:	bl	26c0 <fprintf@plt>
    4174:	ldr	w0, [sp, #40]
    4178:	add	w0, w0, #0x1
    417c:	str	w0, [sp, #40]
    4180:	str	wzr, [sp, #44]
    4184:	mov	w0, #0x1                   	// #1
    4188:	str	w0, [sp, #36]
    418c:	b	41fc <iterate_on_dir@@Base+0x930>
    4190:	ldr	w0, [sp, #36]
    4194:	and	w0, w0, #0x60
    4198:	cmp	w0, #0x0
    419c:	b.ne	41e0 <iterate_on_dir@@Base+0x914>  // b.any
    41a0:	ldr	w1, [sp, #32]
    41a4:	ldr	w0, [sp, #36]
    41a8:	and	w0, w1, w0
    41ac:	cmp	w0, #0x0
    41b0:	b.eq	41e4 <iterate_on_dir@@Base+0x918>  // b.none
    41b4:	ldr	w0, [sp, #36]
    41b8:	bl	26b0 <e2p_mntopt2string@plt>
    41bc:	mov	x2, x0
    41c0:	adrp	x0, 7000 <e2p_str2encoding_flags@@Base+0x424>
    41c4:	add	x1, x0, #0x188
    41c8:	ldr	x0, [sp, #16]
    41cc:	bl	26c0 <fprintf@plt>
    41d0:	ldr	w0, [sp, #40]
    41d4:	add	w0, w0, #0x1
    41d8:	str	w0, [sp, #40]
    41dc:	b	41e4 <iterate_on_dir@@Base+0x918>
    41e0:	nop
    41e4:	ldr	w0, [sp, #44]
    41e8:	add	w0, w0, #0x1
    41ec:	str	w0, [sp, #44]
    41f0:	ldr	w0, [sp, #36]
    41f4:	lsl	w0, w0, #1
    41f8:	str	w0, [sp, #36]
    41fc:	ldr	w0, [sp, #44]
    4200:	cmp	w0, #0x1f
    4204:	b.le	4190 <iterate_on_dir@@Base+0x8c4>
    4208:	ldr	w0, [sp, #40]
    420c:	cmp	w0, #0x0
    4210:	b.ne	422c <iterate_on_dir@@Base+0x960>  // b.any
    4214:	ldr	x3, [sp, #16]
    4218:	mov	x2, #0x7                   	// #7
    421c:	mov	x1, #0x1                   	// #1
    4220:	adrp	x0, 7000 <e2p_str2encoding_flags@@Base+0x424>
    4224:	add	x0, x0, #0x190
    4228:	bl	25d0 <fwrite@plt>
    422c:	ldr	x1, [sp, #16]
    4230:	mov	w0, #0xa                   	// #10
    4234:	bl	2420 <fputc@plt>
    4238:	nop
    423c:	ldp	x29, x30, [sp], #48
    4240:	ret
    4244:	stp	x29, x30, [sp, #-48]!
    4248:	mov	x29, sp
    424c:	str	x0, [sp, #24]
    4250:	str	x1, [sp, #16]
    4254:	str	wzr, [sp, #44]
    4258:	ldr	x0, [sp, #24]
    425c:	ldr	w0, [x0, #352]
    4260:	cmp	w0, #0x0
    4264:	b.eq	4360 <iterate_on_dir@@Base+0xa94>  // b.none
    4268:	ldr	x3, [sp, #16]
    426c:	mov	x2, #0x1a                  	// #26
    4270:	mov	x1, #0x1                   	// #1
    4274:	adrp	x0, 7000 <e2p_str2encoding_flags@@Base+0x424>
    4278:	add	x0, x0, #0x1b8
    427c:	bl	25d0 <fwrite@plt>
    4280:	ldr	x0, [sp, #24]
    4284:	ldr	w0, [x0, #352]
    4288:	and	w0, w0, #0x1
    428c:	cmp	w0, #0x0
    4290:	b.eq	42b8 <iterate_on_dir@@Base+0x9ec>  // b.none
    4294:	ldr	x3, [sp, #16]
    4298:	mov	x2, #0x16                  	// #22
    429c:	mov	x1, #0x1                   	// #1
    42a0:	adrp	x0, 7000 <e2p_str2encoding_flags@@Base+0x424>
    42a4:	add	x0, x0, #0x1d8
    42a8:	bl	25d0 <fwrite@plt>
    42ac:	ldr	w0, [sp, #44]
    42b0:	add	w0, w0, #0x1
    42b4:	str	w0, [sp, #44]
    42b8:	ldr	x0, [sp, #24]
    42bc:	ldr	w0, [x0, #352]
    42c0:	and	w0, w0, #0x2
    42c4:	cmp	w0, #0x0
    42c8:	b.eq	42f0 <iterate_on_dir@@Base+0xa24>  // b.none
    42cc:	ldr	x3, [sp, #16]
    42d0:	mov	x2, #0x18                  	// #24
    42d4:	mov	x1, #0x1                   	// #1
    42d8:	adrp	x0, 7000 <e2p_str2encoding_flags@@Base+0x424>
    42dc:	add	x0, x0, #0x1f0
    42e0:	bl	25d0 <fwrite@plt>
    42e4:	ldr	w0, [sp, #44]
    42e8:	add	w0, w0, #0x1
    42ec:	str	w0, [sp, #44]
    42f0:	ldr	x0, [sp, #24]
    42f4:	ldr	w0, [x0, #352]
    42f8:	and	w0, w0, #0x4
    42fc:	cmp	w0, #0x0
    4300:	b.eq	4328 <iterate_on_dir@@Base+0xa5c>  // b.none
    4304:	ldr	x3, [sp, #16]
    4308:	mov	x2, #0x10                  	// #16
    430c:	mov	x1, #0x1                   	// #1
    4310:	adrp	x0, 7000 <e2p_str2encoding_flags@@Base+0x424>
    4314:	add	x0, x0, #0x210
    4318:	bl	25d0 <fwrite@plt>
    431c:	ldr	w0, [sp, #44]
    4320:	add	w0, w0, #0x1
    4324:	str	w0, [sp, #44]
    4328:	ldr	w0, [sp, #44]
    432c:	cmp	w0, #0x0
    4330:	b.eq	4344 <iterate_on_dir@@Base+0xa78>  // b.none
    4334:	ldr	x1, [sp, #16]
    4338:	mov	w0, #0xa                   	// #10
    433c:	bl	2420 <fputc@plt>
    4340:	b	4364 <iterate_on_dir@@Base+0xa98>
    4344:	ldr	x3, [sp, #16]
    4348:	mov	x2, #0x7                   	// #7
    434c:	mov	x1, #0x1                   	// #1
    4350:	adrp	x0, 7000 <e2p_str2encoding_flags@@Base+0x424>
    4354:	add	x0, x0, #0x228
    4358:	bl	25d0 <fwrite@plt>
    435c:	b	4364 <iterate_on_dir@@Base+0xa98>
    4360:	nop
    4364:	ldp	x29, x30, [sp], #48
    4368:	ret
    436c:	stp	x29, x30, [sp, #-48]!
    4370:	mov	x29, sp
    4374:	str	x19, [sp, #16]
    4378:	str	x0, [sp, #40]
    437c:	ldr	x0, [sp, #40]
    4380:	ldr	w0, [x0, #4]
    4384:	mov	w19, w0
    4388:	ldr	x0, [sp, #40]
    438c:	bl	3a94 <iterate_on_dir@@Base+0x1c8>
    4390:	cmp	w0, #0x0
    4394:	b.eq	43ac <iterate_on_dir@@Base+0xae0>  // b.none
    4398:	ldr	x0, [sp, #40]
    439c:	ldr	w0, [x0, #336]
    43a0:	mov	w0, w0
    43a4:	lsl	x0, x0, #32
    43a8:	b	43b0 <iterate_on_dir@@Base+0xae4>
    43ac:	mov	x0, #0x0                   	// #0
    43b0:	orr	x0, x0, x19
    43b4:	ldr	x19, [sp, #16]
    43b8:	ldp	x29, x30, [sp], #48
    43bc:	ret
    43c0:	stp	x29, x30, [sp, #-48]!
    43c4:	mov	x29, sp
    43c8:	str	x19, [sp, #16]
    43cc:	str	x0, [sp, #40]
    43d0:	ldr	x0, [sp, #40]
    43d4:	ldr	w0, [x0, #8]
    43d8:	mov	w19, w0
    43dc:	ldr	x0, [sp, #40]
    43e0:	bl	3a94 <iterate_on_dir@@Base+0x1c8>
    43e4:	cmp	w0, #0x0
    43e8:	b.eq	4400 <iterate_on_dir@@Base+0xb34>  // b.none
    43ec:	ldr	x0, [sp, #40]
    43f0:	ldr	w0, [x0, #340]
    43f4:	mov	w0, w0
    43f8:	lsl	x0, x0, #32
    43fc:	b	4404 <iterate_on_dir@@Base+0xb38>
    4400:	mov	x0, #0x0                   	// #0
    4404:	orr	x0, x0, x19
    4408:	ldr	x19, [sp, #16]
    440c:	ldp	x29, x30, [sp], #48
    4410:	ret
    4414:	stp	x29, x30, [sp, #-48]!
    4418:	mov	x29, sp
    441c:	str	x19, [sp, #16]
    4420:	str	x0, [sp, #40]
    4424:	ldr	x0, [sp, #40]
    4428:	ldr	w0, [x0, #12]
    442c:	mov	w19, w0
    4430:	ldr	x0, [sp, #40]
    4434:	bl	3a94 <iterate_on_dir@@Base+0x1c8>
    4438:	cmp	w0, #0x0
    443c:	b.eq	4454 <iterate_on_dir@@Base+0xb88>  // b.none
    4440:	ldr	x0, [sp, #40]
    4444:	ldr	w0, [x0, #344]
    4448:	mov	w0, w0
    444c:	lsl	x0, x0, #32
    4450:	b	4458 <iterate_on_dir@@Base+0xb8c>
    4454:	mov	x0, #0x0                   	// #0
    4458:	orr	x0, x0, x19
    445c:	ldr	x19, [sp, #16]
    4460:	ldp	x29, x30, [sp], #48
    4464:	ret
    4468:	sub	sp, sp, #0x10
    446c:	strb	w0, [sp, #15]
    4470:	ldrb	w0, [sp, #15]
    4474:	cmp	w0, #0x1
    4478:	b.ne	4488 <iterate_on_dir@@Base+0xbbc>  // b.any
    447c:	adrp	x0, 7000 <e2p_str2encoding_flags@@Base+0x424>
    4480:	add	x0, x0, #0x230
    4484:	b	4490 <iterate_on_dir@@Base+0xbc4>
    4488:	adrp	x0, 7000 <e2p_str2encoding_flags@@Base+0x424>
    448c:	add	x0, x0, #0x238
    4490:	add	sp, sp, #0x10
    4494:	ret
    4498:	sub	sp, sp, #0x10
    449c:	str	w0, [sp, #12]
    44a0:	adrp	x0, 1a000 <e2p_str2encoding_flags@@Base+0x13424>
    44a4:	add	x0, x0, #0x528
    44a8:	ldr	w1, [sp, #12]
    44ac:	ldr	x0, [x0, x1, lsl #3]
    44b0:	add	sp, sp, #0x10
    44b4:	ret

00000000000044b8 <list_super2@@Base>:
    44b8:	stp	x29, x30, [sp, #-160]!
    44bc:	mov	x29, sp
    44c0:	str	x19, [sp, #16]
    44c4:	str	x0, [sp, #40]
    44c8:	str	x1, [sp, #32]
    44cc:	ldr	x0, [sp, #40]
    44d0:	ldr	w1, [x0, #40]
    44d4:	ldr	x0, [sp, #40]
    44d8:	ldr	w0, [x0, #76]
    44dc:	cmp	w0, #0x0
    44e0:	b.eq	44f0 <list_super2@@Base+0x38>  // b.none
    44e4:	ldr	x0, [sp, #40]
    44e8:	ldrh	w0, [x0, #88]
    44ec:	b	44f4 <list_super2@@Base+0x3c>
    44f0:	mov	w0, #0x80                  	// #128
    44f4:	mul	w0, w0, w1
    44f8:	ldr	x1, [sp, #40]
    44fc:	ldr	w1, [x1, #24]
    4500:	mov	w2, #0x400                 	// #1024
    4504:	lsl	w1, w2, w1
    4508:	add	w0, w0, w1
    450c:	sub	w1, w0, #0x1
    4510:	ldr	x0, [sp, #40]
    4514:	ldr	w0, [x0, #24]
    4518:	add	w0, w0, #0xa
    451c:	lsr	w0, w1, w0
    4520:	str	w0, [sp, #152]
    4524:	ldr	x0, [sp, #40]
    4528:	ldrb	w0, [x0, #120]
    452c:	cmp	w0, #0x0
    4530:	b.eq	455c <list_super2@@Base+0xa4>  // b.none
    4534:	add	x0, sp, #0x40
    4538:	mov	x2, #0x50                  	// #80
    453c:	mov	w1, #0x0                   	// #0
    4540:	bl	24b0 <memset@plt>
    4544:	ldr	x0, [sp, #40]
    4548:	add	x1, x0, #0x78
    454c:	add	x0, sp, #0x40
    4550:	mov	x2, #0x10                  	// #16
    4554:	bl	2660 <strncpy@plt>
    4558:	b	457c <list_super2@@Base+0xc4>
    455c:	add	x2, sp, #0x40
    4560:	adrp	x0, 7000 <e2p_str2encoding_flags@@Base+0x424>
    4564:	add	x1, x0, #0x108
    4568:	mov	x0, x2
    456c:	ldr	w2, [x1]
    4570:	str	w2, [x0]
    4574:	ldur	w1, [x1, #3]
    4578:	stur	w1, [x0, #3]
    457c:	add	x0, sp, #0x40
    4580:	mov	x2, x0
    4584:	adrp	x0, 7000 <e2p_str2encoding_flags@@Base+0x424>
    4588:	add	x1, x0, #0x288
    458c:	ldr	x0, [sp, #32]
    4590:	bl	26c0 <fprintf@plt>
    4594:	ldr	x0, [sp, #40]
    4598:	ldrb	w0, [x0, #136]
    459c:	cmp	w0, #0x0
    45a0:	b.eq	45cc <list_super2@@Base+0x114>  // b.none
    45a4:	add	x0, sp, #0x40
    45a8:	mov	x2, #0x50                  	// #80
    45ac:	mov	w1, #0x0                   	// #0
    45b0:	bl	24b0 <memset@plt>
    45b4:	ldr	x0, [sp, #40]
    45b8:	add	x1, x0, #0x88
    45bc:	add	x0, sp, #0x40
    45c0:	mov	x2, #0x40                  	// #64
    45c4:	bl	2660 <strncpy@plt>
    45c8:	b	45e0 <list_super2@@Base+0x128>
    45cc:	add	x2, sp, #0x40
    45d0:	adrp	x0, 7000 <e2p_str2encoding_flags@@Base+0x424>
    45d4:	add	x0, x0, #0x2a8
    45d8:	ldp	x0, x1, [x0]
    45dc:	stp	x0, x1, [x2]
    45e0:	add	x0, sp, #0x40
    45e4:	mov	x2, x0
    45e8:	adrp	x0, 7000 <e2p_str2encoding_flags@@Base+0x424>
    45ec:	add	x1, x0, #0x2b8
    45f0:	ldr	x0, [sp, #32]
    45f4:	bl	26c0 <fprintf@plt>
    45f8:	ldr	x0, [sp, #40]
    45fc:	add	x0, x0, #0x68
    4600:	bl	24d0 <e2p_uuid2str@plt>
    4604:	mov	x2, x0
    4608:	adrp	x0, 7000 <e2p_str2encoding_flags@@Base+0x424>
    460c:	add	x1, x0, #0x2d8
    4610:	ldr	x0, [sp, #32]
    4614:	bl	26c0 <fprintf@plt>
    4618:	ldr	x0, [sp, #40]
    461c:	ldrh	w0, [x0, #56]
    4620:	mov	w2, w0
    4624:	adrp	x0, 7000 <e2p_str2encoding_flags@@Base+0x424>
    4628:	add	x1, x0, #0x2f8
    462c:	ldr	x0, [sp, #32]
    4630:	bl	26c0 <fprintf@plt>
    4634:	ldr	x0, [sp, #40]
    4638:	ldr	w0, [x0, #76]
    463c:	mov	w2, w0
    4640:	adrp	x0, 7000 <e2p_str2encoding_flags@@Base+0x424>
    4644:	add	x1, x0, #0x320
    4648:	ldr	x0, [sp, #32]
    464c:	bl	26c0 <fprintf@plt>
    4650:	ldr	x0, [sp, #40]
    4654:	ldr	w0, [x0, #76]
    4658:	cmp	w0, #0x0
    465c:	b.ne	467c <list_super2@@Base+0x1c4>  // b.any
    4660:	ldr	x3, [sp, #32]
    4664:	mov	x2, #0xc                   	// #12
    4668:	mov	x1, #0x1                   	// #1
    466c:	adrp	x0, 7000 <e2p_str2encoding_flags@@Base+0x424>
    4670:	add	x0, x0, #0x340
    4674:	bl	25d0 <fwrite@plt>
    4678:	b	46c0 <list_super2@@Base+0x208>
    467c:	ldr	x0, [sp, #40]
    4680:	ldr	w0, [x0, #76]
    4684:	cmp	w0, #0x1
    4688:	b.ne	46a8 <list_super2@@Base+0x1f0>  // b.any
    468c:	ldr	x3, [sp, #32]
    4690:	mov	x2, #0xb                   	// #11
    4694:	mov	x1, #0x1                   	// #1
    4698:	adrp	x0, 7000 <e2p_str2encoding_flags@@Base+0x424>
    469c:	add	x0, x0, #0x350
    46a0:	bl	25d0 <fwrite@plt>
    46a4:	b	46c0 <list_super2@@Base+0x208>
    46a8:	ldr	x3, [sp, #32]
    46ac:	mov	x2, #0xb                   	// #11
    46b0:	mov	x1, #0x1                   	// #1
    46b4:	adrp	x0, 7000 <e2p_str2encoding_flags@@Base+0x424>
    46b8:	add	x0, x0, #0x360
    46bc:	bl	25d0 <fwrite@plt>
    46c0:	ldr	x1, [sp, #32]
    46c4:	ldr	x0, [sp, #40]
    46c8:	bl	3ff4 <iterate_on_dir@@Base+0x728>
    46cc:	ldr	x1, [sp, #32]
    46d0:	ldr	x0, [sp, #40]
    46d4:	bl	4244 <iterate_on_dir@@Base+0x978>
    46d8:	ldr	x1, [sp, #32]
    46dc:	ldr	x0, [sp, #40]
    46e0:	bl	410c <iterate_on_dir@@Base+0x840>
    46e4:	ldr	x0, [sp, #40]
    46e8:	ldrb	w0, [x0, #512]
    46ec:	cmp	w0, #0x0
    46f0:	b.eq	4710 <list_super2@@Base+0x258>  // b.none
    46f4:	ldr	x0, [sp, #40]
    46f8:	add	x0, x0, #0x200
    46fc:	mov	x2, x0
    4700:	adrp	x0, 7000 <e2p_str2encoding_flags@@Base+0x424>
    4704:	add	x1, x0, #0x370
    4708:	ldr	x0, [sp, #32]
    470c:	bl	26c0 <fprintf@plt>
    4710:	ldr	x3, [sp, #32]
    4714:	mov	x2, #0x19                  	// #25
    4718:	mov	x1, #0x1                   	// #1
    471c:	adrp	x0, 7000 <e2p_str2encoding_flags@@Base+0x424>
    4720:	add	x0, x0, #0x390
    4724:	bl	25d0 <fwrite@plt>
    4728:	ldr	x0, [sp, #40]
    472c:	ldrh	w0, [x0, #58]
    4730:	mov	w1, w0
    4734:	ldr	x0, [sp, #32]
    4738:	bl	2650 <print_fs_state@plt>
    473c:	ldr	x1, [sp, #32]
    4740:	mov	w0, #0xa                   	// #10
    4744:	bl	2420 <fputc@plt>
    4748:	ldr	x3, [sp, #32]
    474c:	mov	x2, #0x1a                  	// #26
    4750:	mov	x1, #0x1                   	// #1
    4754:	adrp	x0, 7000 <e2p_str2encoding_flags@@Base+0x424>
    4758:	add	x0, x0, #0x3b0
    475c:	bl	25d0 <fwrite@plt>
    4760:	ldr	x0, [sp, #40]
    4764:	ldrh	w0, [x0, #60]
    4768:	mov	w1, w0
    476c:	ldr	x0, [sp, #32]
    4770:	bl	2630 <print_fs_errors@plt>
    4774:	ldr	x1, [sp, #32]
    4778:	mov	w0, #0xa                   	// #10
    477c:	bl	2420 <fputc@plt>
    4780:	ldr	x0, [sp, #40]
    4784:	ldr	w0, [x0, #72]
    4788:	bl	2530 <e2p_os2string@plt>
    478c:	str	x0, [sp, #144]
    4790:	ldr	x2, [sp, #144]
    4794:	adrp	x0, 7000 <e2p_str2encoding_flags@@Base+0x424>
    4798:	add	x1, x0, #0x3d0
    479c:	ldr	x0, [sp, #32]
    47a0:	bl	26c0 <fprintf@plt>
    47a4:	ldr	x0, [sp, #144]
    47a8:	bl	25a0 <free@plt>
    47ac:	ldr	x0, [sp, #40]
    47b0:	ldr	w0, [x0]
    47b4:	mov	w2, w0
    47b8:	adrp	x0, 7000 <e2p_str2encoding_flags@@Base+0x424>
    47bc:	add	x1, x0, #0x3f0
    47c0:	ldr	x0, [sp, #32]
    47c4:	bl	26c0 <fprintf@plt>
    47c8:	ldr	x0, [sp, #40]
    47cc:	bl	436c <iterate_on_dir@@Base+0xaa0>
    47d0:	mov	x2, x0
    47d4:	adrp	x0, 7000 <e2p_str2encoding_flags@@Base+0x424>
    47d8:	add	x1, x0, #0x410
    47dc:	ldr	x0, [sp, #32]
    47e0:	bl	26c0 <fprintf@plt>
    47e4:	ldr	x0, [sp, #40]
    47e8:	bl	43c0 <iterate_on_dir@@Base+0xaf4>
    47ec:	mov	x2, x0
    47f0:	adrp	x0, 7000 <e2p_str2encoding_flags@@Base+0x424>
    47f4:	add	x1, x0, #0x430
    47f8:	ldr	x0, [sp, #32]
    47fc:	bl	26c0 <fprintf@plt>
    4800:	ldr	x0, [sp, #40]
    4804:	ldr	w0, [x0, #584]
    4808:	cmp	w0, #0x0
    480c:	b.eq	482c <list_super2@@Base+0x374>  // b.none
    4810:	ldr	x0, [sp, #40]
    4814:	ldr	w0, [x0, #584]
    4818:	mov	w2, w0
    481c:	adrp	x0, 7000 <e2p_str2encoding_flags@@Base+0x424>
    4820:	add	x1, x0, #0x450
    4824:	ldr	x0, [sp, #32]
    4828:	bl	26c0 <fprintf@plt>
    482c:	ldr	x0, [sp, #40]
    4830:	bl	4414 <iterate_on_dir@@Base+0xb48>
    4834:	mov	x2, x0
    4838:	adrp	x0, 7000 <e2p_str2encoding_flags@@Base+0x424>
    483c:	add	x1, x0, #0x470
    4840:	ldr	x0, [sp, #32]
    4844:	bl	26c0 <fprintf@plt>
    4848:	ldr	x0, [sp, #40]
    484c:	ldr	w0, [x0, #16]
    4850:	mov	w2, w0
    4854:	adrp	x0, 7000 <e2p_str2encoding_flags@@Base+0x424>
    4858:	add	x1, x0, #0x490
    485c:	ldr	x0, [sp, #32]
    4860:	bl	26c0 <fprintf@plt>
    4864:	ldr	x0, [sp, #40]
    4868:	ldr	w0, [x0, #20]
    486c:	mov	w2, w0
    4870:	adrp	x0, 7000 <e2p_str2encoding_flags@@Base+0x424>
    4874:	add	x1, x0, #0x4b0
    4878:	ldr	x0, [sp, #32]
    487c:	bl	26c0 <fprintf@plt>
    4880:	ldr	x0, [sp, #40]
    4884:	ldr	w0, [x0, #24]
    4888:	mov	w1, #0x400                 	// #1024
    488c:	lsl	w0, w1, w0
    4890:	mov	w2, w0
    4894:	adrp	x0, 7000 <e2p_str2encoding_flags@@Base+0x424>
    4898:	add	x1, x0, #0x4d0
    489c:	ldr	x0, [sp, #32]
    48a0:	bl	26c0 <fprintf@plt>
    48a4:	ldr	x0, [sp, #40]
    48a8:	bl	3a44 <iterate_on_dir@@Base+0x178>
    48ac:	cmp	w0, #0x0
    48b0:	b.eq	48dc <list_super2@@Base+0x424>  // b.none
    48b4:	ldr	x0, [sp, #40]
    48b8:	ldr	w0, [x0, #28]
    48bc:	mov	w1, #0x400                 	// #1024
    48c0:	lsl	w0, w1, w0
    48c4:	mov	w2, w0
    48c8:	adrp	x0, 7000 <e2p_str2encoding_flags@@Base+0x424>
    48cc:	add	x1, x0, #0x4f0
    48d0:	ldr	x0, [sp, #32]
    48d4:	bl	26c0 <fprintf@plt>
    48d8:	b	4900 <list_super2@@Base+0x448>
    48dc:	ldr	x0, [sp, #40]
    48e0:	ldr	w0, [x0, #28]
    48e4:	mov	w1, #0x400                 	// #1024
    48e8:	lsl	w0, w1, w0
    48ec:	mov	w2, w0
    48f0:	adrp	x0, 7000 <e2p_str2encoding_flags@@Base+0x424>
    48f4:	add	x1, x0, #0x510
    48f8:	ldr	x0, [sp, #32]
    48fc:	bl	26c0 <fprintf@plt>
    4900:	ldr	x0, [sp, #40]
    4904:	bl	3a94 <iterate_on_dir@@Base+0x1c8>
    4908:	cmp	w0, #0x0
    490c:	b.eq	492c <list_super2@@Base+0x474>  // b.none
    4910:	ldr	x0, [sp, #40]
    4914:	ldrh	w0, [x0, #254]
    4918:	mov	w2, w0
    491c:	adrp	x0, 7000 <e2p_str2encoding_flags@@Base+0x424>
    4920:	add	x1, x0, #0x530
    4924:	ldr	x0, [sp, #32]
    4928:	bl	26c0 <fprintf@plt>
    492c:	ldr	x0, [sp, #40]
    4930:	ldrh	w0, [x0, #206]
    4934:	cmp	w0, #0x0
    4938:	b.eq	4958 <list_super2@@Base+0x4a0>  // b.none
    493c:	ldr	x0, [sp, #40]
    4940:	ldrh	w0, [x0, #206]
    4944:	mov	w2, w0
    4948:	adrp	x0, 7000 <e2p_str2encoding_flags@@Base+0x424>
    494c:	add	x1, x0, #0x550
    4950:	ldr	x0, [sp, #32]
    4954:	bl	26c0 <fprintf@plt>
    4958:	ldr	x0, [sp, #40]
    495c:	ldr	w0, [x0, #32]
    4960:	mov	w2, w0
    4964:	adrp	x0, 7000 <e2p_str2encoding_flags@@Base+0x424>
    4968:	add	x1, x0, #0x570
    496c:	ldr	x0, [sp, #32]
    4970:	bl	26c0 <fprintf@plt>
    4974:	ldr	x0, [sp, #40]
    4978:	bl	3a44 <iterate_on_dir@@Base+0x178>
    497c:	cmp	w0, #0x0
    4980:	b.eq	49a4 <list_super2@@Base+0x4ec>  // b.none
    4984:	ldr	x0, [sp, #40]
    4988:	ldr	w0, [x0, #36]
    498c:	mov	w2, w0
    4990:	adrp	x0, 7000 <e2p_str2encoding_flags@@Base+0x424>
    4994:	add	x1, x0, #0x590
    4998:	ldr	x0, [sp, #32]
    499c:	bl	26c0 <fprintf@plt>
    49a0:	b	49c0 <list_super2@@Base+0x508>
    49a4:	ldr	x0, [sp, #40]
    49a8:	ldr	w0, [x0, #36]
    49ac:	mov	w2, w0
    49b0:	adrp	x0, 7000 <e2p_str2encoding_flags@@Base+0x424>
    49b4:	add	x1, x0, #0x5b0
    49b8:	ldr	x0, [sp, #32]
    49bc:	bl	26c0 <fprintf@plt>
    49c0:	ldr	x0, [sp, #40]
    49c4:	ldr	w0, [x0, #40]
    49c8:	mov	w2, w0
    49cc:	adrp	x0, 7000 <e2p_str2encoding_flags@@Base+0x424>
    49d0:	add	x1, x0, #0x5d0
    49d4:	ldr	x0, [sp, #32]
    49d8:	bl	26c0 <fprintf@plt>
    49dc:	ldr	w2, [sp, #152]
    49e0:	adrp	x0, 7000 <e2p_str2encoding_flags@@Base+0x424>
    49e4:	add	x1, x0, #0x5f0
    49e8:	ldr	x0, [sp, #32]
    49ec:	bl	26c0 <fprintf@plt>
    49f0:	ldr	x0, [sp, #40]
    49f4:	ldrh	w0, [x0, #356]
    49f8:	cmp	w0, #0x0
    49fc:	b.eq	4a1c <list_super2@@Base+0x564>  // b.none
    4a00:	ldr	x0, [sp, #40]
    4a04:	ldrh	w0, [x0, #356]
    4a08:	mov	w2, w0
    4a0c:	adrp	x0, 7000 <e2p_str2encoding_flags@@Base+0x424>
    4a10:	add	x1, x0, #0x610
    4a14:	ldr	x0, [sp, #32]
    4a18:	bl	26c0 <fprintf@plt>
    4a1c:	ldr	x0, [sp, #40]
    4a20:	ldr	w0, [x0, #368]
    4a24:	cmp	w0, #0x0
    4a28:	b.eq	4a48 <list_super2@@Base+0x590>  // b.none
    4a2c:	ldr	x0, [sp, #40]
    4a30:	ldr	w0, [x0, #368]
    4a34:	mov	w2, w0
    4a38:	adrp	x0, 7000 <e2p_str2encoding_flags@@Base+0x424>
    4a3c:	add	x1, x0, #0x630
    4a40:	ldr	x0, [sp, #32]
    4a44:	bl	26c0 <fprintf@plt>
    4a48:	ldr	x0, [sp, #40]
    4a4c:	ldr	w0, [x0, #260]
    4a50:	cmp	w0, #0x0
    4a54:	b.eq	4a74 <list_super2@@Base+0x5bc>  // b.none
    4a58:	ldr	x0, [sp, #40]
    4a5c:	ldr	w0, [x0, #260]
    4a60:	mov	w2, w0
    4a64:	adrp	x0, 7000 <e2p_str2encoding_flags@@Base+0x424>
    4a68:	add	x1, x0, #0x650
    4a6c:	ldr	x0, [sp, #32]
    4a70:	bl	26c0 <fprintf@plt>
    4a74:	ldr	x0, [sp, #40]
    4a78:	ldrb	w0, [x0, #372]
    4a7c:	cmp	w0, #0x0
    4a80:	b.eq	4aac <list_super2@@Base+0x5f4>  // b.none
    4a84:	ldr	x0, [sp, #40]
    4a88:	ldrb	w0, [x0, #372]
    4a8c:	mov	w1, w0
    4a90:	mov	w0, #0x1                   	// #1
    4a94:	lsl	w0, w0, w1
    4a98:	mov	w2, w0
    4a9c:	adrp	x0, 7000 <e2p_str2encoding_flags@@Base+0x424>
    4aa0:	add	x1, x0, #0x670
    4aa4:	ldr	x0, [sp, #32]
    4aa8:	bl	26c0 <fprintf@plt>
    4aac:	ldr	x0, [sp, #40]
    4ab0:	ldr	w0, [x0, #264]
    4ab4:	cmp	w0, #0x0
    4ab8:	b.eq	4ae8 <list_super2@@Base+0x630>  // b.none
    4abc:	ldr	x0, [sp, #40]
    4ac0:	ldr	w0, [x0, #264]
    4ac4:	mov	w0, w0
    4ac8:	str	x0, [sp, #56]
    4acc:	add	x0, sp, #0x38
    4ad0:	bl	2430 <ctime@plt>
    4ad4:	mov	x2, x0
    4ad8:	adrp	x0, 7000 <e2p_str2encoding_flags@@Base+0x424>
    4adc:	add	x1, x0, #0x690
    4ae0:	ldr	x0, [sp, #32]
    4ae4:	bl	26c0 <fprintf@plt>
    4ae8:	ldr	x0, [sp, #40]
    4aec:	ldr	w0, [x0, #44]
    4af0:	mov	w0, w0
    4af4:	str	x0, [sp, #56]
    4af8:	ldr	x0, [sp, #40]
    4afc:	ldr	w0, [x0, #44]
    4b00:	cmp	w0, #0x0
    4b04:	b.eq	4b14 <list_super2@@Base+0x65c>  // b.none
    4b08:	add	x0, sp, #0x38
    4b0c:	bl	2430 <ctime@plt>
    4b10:	b	4b1c <list_super2@@Base+0x664>
    4b14:	adrp	x0, 7000 <e2p_str2encoding_flags@@Base+0x424>
    4b18:	add	x0, x0, #0x6b0
    4b1c:	mov	x2, x0
    4b20:	adrp	x0, 7000 <e2p_str2encoding_flags@@Base+0x424>
    4b24:	add	x1, x0, #0x6b8
    4b28:	ldr	x0, [sp, #32]
    4b2c:	bl	26c0 <fprintf@plt>
    4b30:	ldr	x0, [sp, #40]
    4b34:	ldr	w0, [x0, #48]
    4b38:	mov	w0, w0
    4b3c:	str	x0, [sp, #56]
    4b40:	add	x0, sp, #0x38
    4b44:	bl	2430 <ctime@plt>
    4b48:	mov	x2, x0
    4b4c:	adrp	x0, 7000 <e2p_str2encoding_flags@@Base+0x424>
    4b50:	add	x1, x0, #0x6d8
    4b54:	ldr	x0, [sp, #32]
    4b58:	bl	26c0 <fprintf@plt>
    4b5c:	ldr	x0, [sp, #40]
    4b60:	ldrh	w0, [x0, #52]
    4b64:	mov	w2, w0
    4b68:	adrp	x0, 7000 <e2p_str2encoding_flags@@Base+0x424>
    4b6c:	add	x1, x0, #0x6f8
    4b70:	ldr	x0, [sp, #32]
    4b74:	bl	26c0 <fprintf@plt>
    4b78:	ldr	x0, [sp, #40]
    4b7c:	ldrsh	w0, [x0, #54]
    4b80:	mov	w2, w0
    4b84:	adrp	x0, 7000 <e2p_str2encoding_flags@@Base+0x424>
    4b88:	add	x1, x0, #0x718
    4b8c:	ldr	x0, [sp, #32]
    4b90:	bl	26c0 <fprintf@plt>
    4b94:	ldr	x0, [sp, #40]
    4b98:	ldr	w0, [x0, #64]
    4b9c:	mov	w0, w0
    4ba0:	str	x0, [sp, #56]
    4ba4:	add	x0, sp, #0x38
    4ba8:	bl	2430 <ctime@plt>
    4bac:	mov	x2, x0
    4bb0:	adrp	x0, 7000 <e2p_str2encoding_flags@@Base+0x424>
    4bb4:	add	x1, x0, #0x738
    4bb8:	ldr	x0, [sp, #32]
    4bbc:	bl	26c0 <fprintf@plt>
    4bc0:	ldr	x0, [sp, #40]
    4bc4:	ldr	w19, [x0, #68]
    4bc8:	ldr	x0, [sp, #40]
    4bcc:	ldr	w0, [x0, #68]
    4bd0:	bl	3cac <iterate_on_dir@@Base+0x3e0>
    4bd4:	mov	x3, x0
    4bd8:	mov	w2, w19
    4bdc:	adrp	x0, 7000 <e2p_str2encoding_flags@@Base+0x424>
    4be0:	add	x1, x0, #0x758
    4be4:	ldr	x0, [sp, #32]
    4be8:	bl	26c0 <fprintf@plt>
    4bec:	ldr	x0, [sp, #40]
    4bf0:	ldr	w0, [x0, #68]
    4bf4:	cmp	w0, #0x0
    4bf8:	b.eq	4c34 <list_super2@@Base+0x77c>  // b.none
    4bfc:	ldr	x0, [sp, #40]
    4c00:	ldr	w1, [x0, #64]
    4c04:	ldr	x0, [sp, #40]
    4c08:	ldr	w0, [x0, #68]
    4c0c:	add	w0, w1, w0
    4c10:	mov	w0, w0
    4c14:	str	x0, [sp, #48]
    4c18:	add	x0, sp, #0x30
    4c1c:	bl	2430 <ctime@plt>
    4c20:	mov	x2, x0
    4c24:	adrp	x0, 7000 <e2p_str2encoding_flags@@Base+0x424>
    4c28:	add	x1, x0, #0x780
    4c2c:	ldr	x0, [sp, #32]
    4c30:	bl	26c0 <fprintf@plt>
    4c34:	ldr	x0, [sp, #40]
    4c38:	ldr	x0, [x0, #376]
    4c3c:	cmp	x0, #0x0
    4c40:	b.eq	4d70 <list_super2@@Base+0x8b8>  // b.none
    4c44:	ldr	x3, [sp, #32]
    4c48:	mov	x2, #0x1a                  	// #26
    4c4c:	mov	x1, #0x1                   	// #1
    4c50:	adrp	x0, 7000 <e2p_str2encoding_flags@@Base+0x424>
    4c54:	add	x0, x0, #0x7a0
    4c58:	bl	25d0 <fwrite@plt>
    4c5c:	ldr	x0, [sp, #40]
    4c60:	ldr	x1, [x0, #376]
    4c64:	mov	x0, #0x1fff                	// #8191
    4c68:	cmp	x1, x0
    4c6c:	b.hi	4c90 <list_super2@@Base+0x7d8>  // b.pmore
    4c70:	ldr	x0, [sp, #40]
    4c74:	ldr	x0, [x0, #376]
    4c78:	mov	x2, x0
    4c7c:	adrp	x0, 7000 <e2p_str2encoding_flags@@Base+0x424>
    4c80:	add	x1, x0, #0x7c0
    4c84:	ldr	x0, [sp, #32]
    4c88:	bl	26c0 <fprintf@plt>
    4c8c:	b	4d70 <list_super2@@Base+0x8b8>
    4c90:	ldr	x0, [sp, #40]
    4c94:	ldr	x1, [x0, #376]
    4c98:	mov	x0, #0x7fffff              	// #8388607
    4c9c:	cmp	x1, x0
    4ca0:	b.hi	4ccc <list_super2@@Base+0x814>  // b.pmore
    4ca4:	ldr	x0, [sp, #40]
    4ca8:	ldr	x0, [x0, #376]
    4cac:	add	x0, x0, #0x200
    4cb0:	lsr	x0, x0, #10
    4cb4:	mov	x2, x0
    4cb8:	adrp	x0, 7000 <e2p_str2encoding_flags@@Base+0x424>
    4cbc:	add	x1, x0, #0x7d0
    4cc0:	ldr	x0, [sp, #32]
    4cc4:	bl	26c0 <fprintf@plt>
    4cc8:	b	4d70 <list_super2@@Base+0x8b8>
    4ccc:	ldr	x0, [sp, #40]
    4cd0:	ldr	x1, [x0, #376]
    4cd4:	mov	x0, #0x1ffffffff           	// #8589934591
    4cd8:	cmp	x1, x0
    4cdc:	b.hi	4d08 <list_super2@@Base+0x850>  // b.pmore
    4ce0:	ldr	x0, [sp, #40]
    4ce4:	ldr	x0, [x0, #376]
    4ce8:	add	x0, x0, #0x80, lsl #12
    4cec:	lsr	x0, x0, #20
    4cf0:	mov	x2, x0
    4cf4:	adrp	x0, 7000 <e2p_str2encoding_flags@@Base+0x424>
    4cf8:	add	x1, x0, #0x7e0
    4cfc:	ldr	x0, [sp, #32]
    4d00:	bl	26c0 <fprintf@plt>
    4d04:	b	4d70 <list_super2@@Base+0x8b8>
    4d08:	ldr	x0, [sp, #40]
    4d0c:	ldr	x1, [x0, #376]
    4d10:	mov	x0, #0x7ffffffffff         	// #8796093022207
    4d14:	cmp	x1, x0
    4d18:	b.hi	4d48 <list_super2@@Base+0x890>  // b.pmore
    4d1c:	ldr	x0, [sp, #40]
    4d20:	ldr	x1, [x0, #376]
    4d24:	mov	x0, #0x20000000            	// #536870912
    4d28:	add	x0, x1, x0
    4d2c:	lsr	x0, x0, #30
    4d30:	mov	x2, x0
    4d34:	adrp	x0, 7000 <e2p_str2encoding_flags@@Base+0x424>
    4d38:	add	x1, x0, #0x7f0
    4d3c:	ldr	x0, [sp, #32]
    4d40:	bl	26c0 <fprintf@plt>
    4d44:	b	4d70 <list_super2@@Base+0x8b8>
    4d48:	ldr	x0, [sp, #40]
    4d4c:	ldr	x1, [x0, #376]
    4d50:	mov	x0, #0x8000000000          	// #549755813888
    4d54:	add	x0, x1, x0
    4d58:	lsr	x0, x0, #40
    4d5c:	mov	x2, x0
    4d60:	adrp	x0, 7000 <e2p_str2encoding_flags@@Base+0x424>
    4d64:	add	x1, x0, #0x800
    4d68:	ldr	x0, [sp, #32]
    4d6c:	bl	26c0 <fprintf@plt>
    4d70:	ldr	x3, [sp, #32]
    4d74:	mov	x2, #0x1a                  	// #26
    4d78:	mov	x1, #0x1                   	// #1
    4d7c:	adrp	x0, 7000 <e2p_str2encoding_flags@@Base+0x424>
    4d80:	add	x0, x0, #0x810
    4d84:	bl	25d0 <fwrite@plt>
    4d88:	ldr	x0, [sp, #40]
    4d8c:	ldrh	w0, [x0, #80]
    4d90:	ldr	x1, [sp, #32]
    4d94:	bl	3ba4 <iterate_on_dir@@Base+0x2d8>
    4d98:	ldr	x3, [sp, #32]
    4d9c:	mov	x2, #0x1a                  	// #26
    4da0:	mov	x1, #0x1                   	// #1
    4da4:	adrp	x0, 7000 <e2p_str2encoding_flags@@Base+0x424>
    4da8:	add	x0, x0, #0x830
    4dac:	bl	25d0 <fwrite@plt>
    4db0:	ldr	x0, [sp, #40]
    4db4:	ldrh	w0, [x0, #82]
    4db8:	ldr	x1, [sp, #32]
    4dbc:	bl	3c28 <iterate_on_dir@@Base+0x35c>
    4dc0:	ldr	x0, [sp, #40]
    4dc4:	ldr	w0, [x0, #76]
    4dc8:	cmp	w0, #0x0
    4dcc:	b.eq	4e60 <list_super2@@Base+0x9a8>  // b.none
    4dd0:	ldr	x0, [sp, #40]
    4dd4:	ldr	w0, [x0, #84]
    4dd8:	mov	w2, w0
    4ddc:	adrp	x0, 7000 <e2p_str2encoding_flags@@Base+0x424>
    4de0:	add	x1, x0, #0x850
    4de4:	ldr	x0, [sp, #32]
    4de8:	bl	26c0 <fprintf@plt>
    4dec:	ldr	x0, [sp, #40]
    4df0:	ldrh	w0, [x0, #88]
    4df4:	mov	w2, w0
    4df8:	adrp	x0, 7000 <e2p_str2encoding_flags@@Base+0x424>
    4dfc:	add	x1, x0, #0x870
    4e00:	ldr	x0, [sp, #32]
    4e04:	bl	26c0 <fprintf@plt>
    4e08:	ldr	x0, [sp, #40]
    4e0c:	ldrh	w0, [x0, #348]
    4e10:	cmp	w0, #0x0
    4e14:	b.eq	4e34 <list_super2@@Base+0x97c>  // b.none
    4e18:	ldr	x0, [sp, #40]
    4e1c:	ldrh	w0, [x0, #348]
    4e20:	mov	w2, w0
    4e24:	adrp	x0, 7000 <e2p_str2encoding_flags@@Base+0x424>
    4e28:	add	x1, x0, #0x890
    4e2c:	ldr	x0, [sp, #32]
    4e30:	bl	26c0 <fprintf@plt>
    4e34:	ldr	x0, [sp, #40]
    4e38:	ldrh	w0, [x0, #350]
    4e3c:	cmp	w0, #0x0
    4e40:	b.eq	4e60 <list_super2@@Base+0x9a8>  // b.none
    4e44:	ldr	x0, [sp, #40]
    4e48:	ldrh	w0, [x0, #350]
    4e4c:	mov	w2, w0
    4e50:	adrp	x0, 7000 <e2p_str2encoding_flags@@Base+0x424>
    4e54:	add	x1, x0, #0x8b0
    4e58:	ldr	x0, [sp, #32]
    4e5c:	bl	26c0 <fprintf@plt>
    4e60:	ldr	x0, [sp, #40]
    4e64:	add	x0, x0, #0xd0
    4e68:	bl	2400 <e2p_is_null_uuid@plt>
    4e6c:	cmp	w0, #0x0
    4e70:	b.ne	4e94 <list_super2@@Base+0x9dc>  // b.any
    4e74:	ldr	x0, [sp, #40]
    4e78:	add	x0, x0, #0xd0
    4e7c:	bl	24d0 <e2p_uuid2str@plt>
    4e80:	mov	x2, x0
    4e84:	adrp	x0, 7000 <e2p_str2encoding_flags@@Base+0x424>
    4e88:	add	x1, x0, #0x8d0
    4e8c:	ldr	x0, [sp, #32]
    4e90:	bl	26c0 <fprintf@plt>
    4e94:	ldr	x0, [sp, #40]
    4e98:	ldr	w0, [x0, #224]
    4e9c:	cmp	w0, #0x0
    4ea0:	b.eq	4ec0 <list_super2@@Base+0xa08>  // b.none
    4ea4:	ldr	x0, [sp, #40]
    4ea8:	ldr	w0, [x0, #224]
    4eac:	mov	w2, w0
    4eb0:	adrp	x0, 7000 <e2p_str2encoding_flags@@Base+0x424>
    4eb4:	add	x1, x0, #0x8f0
    4eb8:	ldr	x0, [sp, #32]
    4ebc:	bl	26c0 <fprintf@plt>
    4ec0:	ldr	x0, [sp, #40]
    4ec4:	ldr	w0, [x0, #228]
    4ec8:	cmp	w0, #0x0
    4ecc:	b.eq	4eec <list_super2@@Base+0xa34>  // b.none
    4ed0:	ldr	x0, [sp, #40]
    4ed4:	ldr	w0, [x0, #228]
    4ed8:	mov	w2, w0
    4edc:	adrp	x0, 7000 <e2p_str2encoding_flags@@Base+0x424>
    4ee0:	add	x1, x0, #0x910
    4ee4:	ldr	x0, [sp, #32]
    4ee8:	bl	26c0 <fprintf@plt>
    4eec:	ldr	x0, [sp, #40]
    4ef0:	ldr	w0, [x0, #232]
    4ef4:	cmp	w0, #0x0
    4ef8:	b.eq	4f18 <list_super2@@Base+0xa60>  // b.none
    4efc:	ldr	x0, [sp, #40]
    4f00:	ldr	w0, [x0, #232]
    4f04:	mov	w2, w0
    4f08:	adrp	x0, 7000 <e2p_str2encoding_flags@@Base+0x424>
    4f0c:	add	x1, x0, #0x938
    4f10:	ldr	x0, [sp, #32]
    4f14:	bl	26c0 <fprintf@plt>
    4f18:	ldr	x0, [sp, #40]
    4f1c:	bl	3a1c <iterate_on_dir@@Base+0x150>
    4f20:	cmp	w0, #0x0
    4f24:	b.ne	4f38 <list_super2@@Base+0xa80>  // b.any
    4f28:	ldr	x0, [sp, #40]
    4f2c:	ldrb	w0, [x0, #252]
    4f30:	cmp	w0, #0x0
    4f34:	b.eq	4f58 <list_super2@@Base+0xaa0>  // b.none
    4f38:	ldr	x0, [sp, #40]
    4f3c:	ldrb	w0, [x0, #252]
    4f40:	bl	2610 <e2p_hash2string@plt>
    4f44:	mov	x2, x0
    4f48:	adrp	x0, 7000 <e2p_str2encoding_flags@@Base+0x424>
    4f4c:	add	x1, x0, #0x958
    4f50:	ldr	x0, [sp, #32]
    4f54:	bl	26c0 <fprintf@plt>
    4f58:	ldr	x0, [sp, #40]
    4f5c:	add	x0, x0, #0xec
    4f60:	bl	2400 <e2p_is_null_uuid@plt>
    4f64:	cmp	w0, #0x0
    4f68:	b.ne	4f8c <list_super2@@Base+0xad4>  // b.any
    4f6c:	ldr	x0, [sp, #40]
    4f70:	add	x0, x0, #0xec
    4f74:	bl	24d0 <e2p_uuid2str@plt>
    4f78:	mov	x2, x0
    4f7c:	adrp	x0, 7000 <e2p_str2encoding_flags@@Base+0x424>
    4f80:	add	x1, x0, #0x978
    4f84:	ldr	x0, [sp, #32]
    4f88:	bl	26c0 <fprintf@plt>
    4f8c:	ldr	x0, [sp, #40]
    4f90:	ldrb	w0, [x0, #253]
    4f94:	cmp	w0, #0x0
    4f98:	b.eq	5000 <list_super2@@Base+0xb48>  // b.none
    4f9c:	ldr	x3, [sp, #32]
    4fa0:	mov	x2, #0x1a                  	// #26
    4fa4:	mov	x1, #0x1                   	// #1
    4fa8:	adrp	x0, 7000 <e2p_str2encoding_flags@@Base+0x424>
    4fac:	add	x0, x0, #0x998
    4fb0:	bl	25d0 <fwrite@plt>
    4fb4:	ldr	x0, [sp, #40]
    4fb8:	ldrb	w0, [x0, #253]
    4fbc:	cmp	w0, #0x1
    4fc0:	b.ne	4fe0 <list_super2@@Base+0xb28>  // b.any
    4fc4:	ldr	x3, [sp, #32]
    4fc8:	mov	x2, #0xd                   	// #13
    4fcc:	mov	x1, #0x1                   	// #1
    4fd0:	adrp	x0, 7000 <e2p_str2encoding_flags@@Base+0x424>
    4fd4:	add	x0, x0, #0x9b8
    4fd8:	bl	25d0 <fwrite@plt>
    4fdc:	b	5004 <list_super2@@Base+0xb4c>
    4fe0:	ldr	x0, [sp, #40]
    4fe4:	ldrb	w0, [x0, #253]
    4fe8:	mov	w2, w0
    4fec:	adrp	x0, 7000 <e2p_str2encoding_flags@@Base+0x424>
    4ff0:	add	x1, x0, #0x9c8
    4ff4:	ldr	x0, [sp, #32]
    4ff8:	bl	26c0 <fprintf@plt>
    4ffc:	b	5004 <list_super2@@Base+0xb4c>
    5000:	nop
    5004:	ldr	x0, [sp, #40]
    5008:	ldr	w0, [x0, #588]
    500c:	cmp	w0, #0x0
    5010:	b.ne	5024 <list_super2@@Base+0xb6c>  // b.any
    5014:	ldr	x0, [sp, #40]
    5018:	ldr	w0, [x0, #592]
    501c:	cmp	w0, #0x0
    5020:	b.eq	50a0 <list_super2@@Base+0xbe8>  // b.none
    5024:	ldr	x3, [sp, #32]
    5028:	mov	x2, #0x1a                  	// #26
    502c:	mov	x1, #0x1                   	// #1
    5030:	adrp	x0, 7000 <e2p_str2encoding_flags@@Base+0x424>
    5034:	add	x0, x0, #0x9d8
    5038:	bl	25d0 <fwrite@plt>
    503c:	ldr	x0, [sp, #40]
    5040:	ldr	w0, [x0, #588]
    5044:	cmp	w0, #0x0
    5048:	b.eq	5068 <list_super2@@Base+0xbb0>  // b.none
    504c:	ldr	x0, [sp, #40]
    5050:	ldr	w0, [x0, #588]
    5054:	mov	w2, w0
    5058:	adrp	x0, 7000 <e2p_str2encoding_flags@@Base+0x424>
    505c:	add	x1, x0, #0xb8
    5060:	ldr	x0, [sp, #32]
    5064:	bl	26c0 <fprintf@plt>
    5068:	ldr	x0, [sp, #40]
    506c:	ldr	w0, [x0, #592]
    5070:	cmp	w0, #0x0
    5074:	b.eq	5094 <list_super2@@Base+0xbdc>  // b.none
    5078:	ldr	x0, [sp, #40]
    507c:	ldr	w0, [x0, #592]
    5080:	mov	w2, w0
    5084:	adrp	x0, 7000 <e2p_str2encoding_flags@@Base+0x424>
    5088:	add	x1, x0, #0xb8
    508c:	ldr	x0, [sp, #32]
    5090:	bl	26c0 <fprintf@plt>
    5094:	ldr	x1, [sp, #32]
    5098:	mov	w0, #0xa                   	// #10
    509c:	bl	2420 <fputc@plt>
    50a0:	ldr	x0, [sp, #40]
    50a4:	ldr	w0, [x0, #384]
    50a8:	cmp	w0, #0x0
    50ac:	b.eq	5104 <list_super2@@Base+0xc4c>  // b.none
    50b0:	ldr	x0, [sp, #40]
    50b4:	ldr	w0, [x0, #384]
    50b8:	mov	w2, w0
    50bc:	adrp	x0, 7000 <e2p_str2encoding_flags@@Base+0x424>
    50c0:	add	x1, x0, #0x9f8
    50c4:	ldr	x0, [sp, #32]
    50c8:	bl	26c0 <fprintf@plt>
    50cc:	ldr	x0, [sp, #40]
    50d0:	ldr	w0, [x0, #388]
    50d4:	mov	w2, w0
    50d8:	adrp	x0, 7000 <e2p_str2encoding_flags@@Base+0x424>
    50dc:	add	x1, x0, #0xa18
    50e0:	ldr	x0, [sp, #32]
    50e4:	bl	26c0 <fprintf@plt>
    50e8:	ldr	x0, [sp, #40]
    50ec:	ldr	x0, [x0, #392]
    50f0:	mov	x2, x0
    50f4:	adrp	x0, 7000 <e2p_str2encoding_flags@@Base+0x424>
    50f8:	add	x1, x0, #0xa38
    50fc:	ldr	x0, [sp, #32]
    5100:	bl	26c0 <fprintf@plt>
    5104:	ldr	x0, [sp, #40]
    5108:	ldr	w0, [x0, #400]
    510c:	cmp	w0, #0x0
    5110:	b.eq	5130 <list_super2@@Base+0xc78>  // b.none
    5114:	ldr	x0, [sp, #40]
    5118:	ldr	w0, [x0, #400]
    511c:	mov	w2, w0
    5120:	adrp	x0, 7000 <e2p_str2encoding_flags@@Base+0x424>
    5124:	add	x1, x0, #0xa58
    5128:	ldr	x0, [sp, #32]
    512c:	bl	26c0 <fprintf@plt>
    5130:	ldr	x0, [sp, #40]
    5134:	ldr	w0, [x0, #404]
    5138:	cmp	w0, #0x0
    513c:	b.eq	515c <list_super2@@Base+0xca4>  // b.none
    5140:	ldr	x0, [sp, #40]
    5144:	ldr	w0, [x0, #404]
    5148:	mov	w2, w0
    514c:	adrp	x0, 7000 <e2p_str2encoding_flags@@Base+0x424>
    5150:	add	x1, x0, #0xa78
    5154:	ldr	x0, [sp, #32]
    5158:	bl	26c0 <fprintf@plt>
    515c:	ldr	x0, [sp, #40]
    5160:	ldr	w0, [x0, #408]
    5164:	cmp	w0, #0x0
    5168:	b.eq	5228 <list_super2@@Base+0xd70>  // b.none
    516c:	ldr	x0, [sp, #40]
    5170:	ldr	w0, [x0, #408]
    5174:	mov	w0, w0
    5178:	str	x0, [sp, #56]
    517c:	add	x0, sp, #0x38
    5180:	bl	2430 <ctime@plt>
    5184:	mov	x2, x0
    5188:	adrp	x0, 7000 <e2p_str2encoding_flags@@Base+0x424>
    518c:	add	x1, x0, #0xa98
    5190:	ldr	x0, [sp, #32]
    5194:	bl	26c0 <fprintf@plt>
    5198:	add	x0, sp, #0x40
    519c:	mov	x2, #0x50                  	// #80
    51a0:	mov	w1, #0x0                   	// #0
    51a4:	bl	24b0 <memset@plt>
    51a8:	ldr	x0, [sp, #40]
    51ac:	add	x1, x0, #0x1a8
    51b0:	add	x0, sp, #0x40
    51b4:	mov	x2, #0x20                  	// #32
    51b8:	bl	2660 <strncpy@plt>
    51bc:	add	x0, sp, #0x40
    51c0:	mov	x2, x0
    51c4:	adrp	x0, 7000 <e2p_str2encoding_flags@@Base+0x424>
    51c8:	add	x1, x0, #0xab8
    51cc:	ldr	x0, [sp, #32]
    51d0:	bl	26c0 <fprintf@plt>
    51d4:	ldr	x0, [sp, #40]
    51d8:	ldr	w0, [x0, #456]
    51dc:	mov	w2, w0
    51e0:	adrp	x0, 7000 <e2p_str2encoding_flags@@Base+0x424>
    51e4:	add	x1, x0, #0xad8
    51e8:	ldr	x0, [sp, #32]
    51ec:	bl	26c0 <fprintf@plt>
    51f0:	ldr	x0, [sp, #40]
    51f4:	ldr	w0, [x0, #412]
    51f8:	mov	w2, w0
    51fc:	adrp	x0, 7000 <e2p_str2encoding_flags@@Base+0x424>
    5200:	add	x1, x0, #0xaf8
    5204:	ldr	x0, [sp, #32]
    5208:	bl	26c0 <fprintf@plt>
    520c:	ldr	x0, [sp, #40]
    5210:	ldr	x0, [x0, #416]
    5214:	mov	x2, x0
    5218:	adrp	x0, 7000 <e2p_str2encoding_flags@@Base+0x424>
    521c:	add	x1, x0, #0xb18
    5220:	ldr	x0, [sp, #32]
    5224:	bl	26c0 <fprintf@plt>
    5228:	ldr	x0, [sp, #40]
    522c:	ldr	w0, [x0, #460]
    5230:	cmp	w0, #0x0
    5234:	b.eq	52f4 <list_super2@@Base+0xe3c>  // b.none
    5238:	ldr	x0, [sp, #40]
    523c:	ldr	w0, [x0, #460]
    5240:	mov	w0, w0
    5244:	str	x0, [sp, #56]
    5248:	add	x0, sp, #0x38
    524c:	bl	2430 <ctime@plt>
    5250:	mov	x2, x0
    5254:	adrp	x0, 7000 <e2p_str2encoding_flags@@Base+0x424>
    5258:	add	x1, x0, #0xb38
    525c:	ldr	x0, [sp, #32]
    5260:	bl	26c0 <fprintf@plt>
    5264:	add	x0, sp, #0x40
    5268:	mov	x2, #0x50                  	// #80
    526c:	mov	w1, #0x0                   	// #0
    5270:	bl	24b0 <memset@plt>
    5274:	ldr	x0, [sp, #40]
    5278:	add	x1, x0, #0x1e0
    527c:	add	x0, sp, #0x40
    5280:	mov	x2, #0x20                  	// #32
    5284:	bl	2660 <strncpy@plt>
    5288:	add	x0, sp, #0x40
    528c:	mov	x2, x0
    5290:	adrp	x0, 7000 <e2p_str2encoding_flags@@Base+0x424>
    5294:	add	x1, x0, #0xb58
    5298:	ldr	x0, [sp, #32]
    529c:	bl	26c0 <fprintf@plt>
    52a0:	ldr	x0, [sp, #40]
    52a4:	ldr	w0, [x0, #468]
    52a8:	mov	w2, w0
    52ac:	adrp	x0, 7000 <e2p_str2encoding_flags@@Base+0x424>
    52b0:	add	x1, x0, #0xb78
    52b4:	ldr	x0, [sp, #32]
    52b8:	bl	26c0 <fprintf@plt>
    52bc:	ldr	x0, [sp, #40]
    52c0:	ldr	w0, [x0, #464]
    52c4:	mov	w2, w0
    52c8:	adrp	x0, 7000 <e2p_str2encoding_flags@@Base+0x424>
    52cc:	add	x1, x0, #0xb98
    52d0:	ldr	x0, [sp, #32]
    52d4:	bl	26c0 <fprintf@plt>
    52d8:	ldr	x0, [sp, #40]
    52dc:	ldr	x0, [x0, #472]
    52e0:	mov	x2, x0
    52e4:	adrp	x0, 7000 <e2p_str2encoding_flags@@Base+0x424>
    52e8:	add	x1, x0, #0xbb8
    52ec:	ldr	x0, [sp, #32]
    52f0:	bl	26c0 <fprintf@plt>
    52f4:	ldr	x0, [sp, #40]
    52f8:	bl	3abc <iterate_on_dir@@Base+0x1f0>
    52fc:	cmp	w0, #0x0
    5300:	b.eq	533c <list_super2@@Base+0xe84>  // b.none
    5304:	ldr	x0, [sp, #40]
    5308:	ldr	x0, [x0, #360]
    530c:	mov	x2, x0
    5310:	adrp	x0, 7000 <e2p_str2encoding_flags@@Base+0x424>
    5314:	add	x1, x0, #0xbd8
    5318:	ldr	x0, [sp, #32]
    531c:	bl	26c0 <fprintf@plt>
    5320:	ldr	x0, [sp, #40]
    5324:	ldrh	w0, [x0, #358]
    5328:	mov	w2, w0
    532c:	adrp	x0, 7000 <e2p_str2encoding_flags@@Base+0x424>
    5330:	add	x1, x0, #0xbf8
    5334:	ldr	x0, [sp, #32]
    5338:	bl	26c0 <fprintf@plt>
    533c:	str	wzr, [sp, #156]
    5340:	b	539c <list_super2@@Base+0xee4>
    5344:	ldr	w1, [sp, #156]
    5348:	ldr	x0, [sp, #40]
    534c:	bl	3b34 <iterate_on_dir@@Base+0x268>
    5350:	ldr	w0, [x0]
    5354:	cmp	w0, #0x0
    5358:	b.eq	5390 <list_super2@@Base+0xed8>  // b.none
    535c:	ldr	w0, [sp, #156]
    5360:	bl	4498 <iterate_on_dir@@Base+0xbcc>
    5364:	mov	x19, x0
    5368:	ldr	w1, [sp, #156]
    536c:	ldr	x0, [sp, #40]
    5370:	bl	3b34 <iterate_on_dir@@Base+0x268>
    5374:	ldr	w0, [x0]
    5378:	mov	w3, w0
    537c:	mov	x2, x19
    5380:	adrp	x0, 7000 <e2p_str2encoding_flags@@Base+0x424>
    5384:	add	x1, x0, #0xc18
    5388:	ldr	x0, [sp, #32]
    538c:	bl	26c0 <fprintf@plt>
    5390:	ldr	w0, [sp, #156]
    5394:	add	w0, w0, #0x1
    5398:	str	w0, [sp, #156]
    539c:	ldr	w0, [sp, #156]
    53a0:	cmp	w0, #0x2
    53a4:	b.ls	5344 <list_super2@@Base+0xe8c>  // b.plast
    53a8:	ldr	x0, [sp, #40]
    53ac:	bl	3a6c <iterate_on_dir@@Base+0x1a0>
    53b0:	cmp	w0, #0x0
    53b4:	b.eq	53f4 <list_super2@@Base+0xf3c>  // b.none
    53b8:	ldr	x0, [sp, #40]
    53bc:	ldrb	w0, [x0, #373]
    53c0:	bl	4468 <iterate_on_dir@@Base+0xb9c>
    53c4:	mov	x2, x0
    53c8:	adrp	x0, 7000 <e2p_str2encoding_flags@@Base+0x424>
    53cc:	add	x1, x0, #0xc28
    53d0:	ldr	x0, [sp, #32]
    53d4:	bl	26c0 <fprintf@plt>
    53d8:	ldr	x0, [sp, #40]
    53dc:	ldr	w0, [x0, #1020]
    53e0:	mov	w2, w0
    53e4:	adrp	x0, 7000 <e2p_str2encoding_flags@@Base+0x424>
    53e8:	add	x1, x0, #0xc48
    53ec:	ldr	x0, [sp, #32]
    53f0:	bl	26c0 <fprintf@plt>
    53f4:	ldr	x0, [sp, #40]
    53f8:	add	x0, x0, #0x258
    53fc:	bl	2400 <e2p_is_null_uuid@plt>
    5400:	cmp	w0, #0x0
    5404:	b.ne	5428 <list_super2@@Base+0xf70>  // b.any
    5408:	ldr	x0, [sp, #40]
    540c:	add	x0, x0, #0x258
    5410:	bl	24d0 <e2p_uuid2str@plt>
    5414:	mov	x2, x0
    5418:	adrp	x0, 7000 <e2p_str2encoding_flags@@Base+0x424>
    541c:	add	x1, x0, #0xc70
    5420:	ldr	x0, [sp, #32]
    5424:	bl	26c0 <fprintf@plt>
    5428:	ldr	x0, [sp, #40]
    542c:	bl	3ae4 <iterate_on_dir@@Base+0x218>
    5430:	cmp	w0, #0x0
    5434:	b.eq	5454 <list_super2@@Base+0xf9c>  // b.none
    5438:	ldr	x0, [sp, #40]
    543c:	ldr	w0, [x0, #624]
    5440:	mov	w2, w0
    5444:	adrp	x0, 7000 <e2p_str2encoding_flags@@Base+0x424>
    5448:	add	x1, x0, #0xc90
    544c:	ldr	x0, [sp, #32]
    5450:	bl	26c0 <fprintf@plt>
    5454:	ldr	x0, [sp, #40]
    5458:	bl	3b0c <iterate_on_dir@@Base+0x240>
    545c:	cmp	w0, #0x0
    5460:	b.eq	5484 <list_super2@@Base+0xfcc>  // b.none
    5464:	ldr	x0, [sp, #40]
    5468:	ldrh	w0, [x0, #636]
    546c:	bl	26a0 <e2p_encoding2str@plt>
    5470:	mov	x2, x0
    5474:	adrp	x0, 7000 <e2p_str2encoding_flags@@Base+0x424>
    5478:	add	x1, x0, #0xcb8
    547c:	ldr	x0, [sp, #32]
    5480:	bl	26c0 <fprintf@plt>
    5484:	nop
    5488:	ldr	x19, [sp, #16]
    548c:	ldp	x29, x30, [sp], #160
    5490:	ret

0000000000005494 <list_super@@Base>:
    5494:	stp	x29, x30, [sp, #-32]!
    5498:	mov	x29, sp
    549c:	str	x0, [sp, #24]
    54a0:	adrp	x0, 19000 <e2p_str2encoding_flags@@Base+0x12424>
    54a4:	ldr	x0, [x0, #4048]
    54a8:	ldr	x0, [x0]
    54ac:	mov	x1, x0
    54b0:	ldr	x0, [sp, #24]
    54b4:	bl	25f0 <list_super2@plt>
    54b8:	nop
    54bc:	ldp	x29, x30, [sp], #32
    54c0:	ret
    54c4:	sub	sp, sp, #0x10
    54c8:	str	w0, [sp, #12]
    54cc:	ldr	w0, [sp, #12]
    54d0:	lsr	w1, w0, #24
    54d4:	ldr	w0, [sp, #12]
    54d8:	lsr	w0, w0, #8
    54dc:	and	w0, w0, #0xff00
    54e0:	orr	w1, w1, w0
    54e4:	ldr	w0, [sp, #12]
    54e8:	lsl	w0, w0, #8
    54ec:	and	w0, w0, #0xff0000
    54f0:	orr	w1, w1, w0
    54f4:	ldr	w0, [sp, #12]
    54f8:	lsl	w0, w0, #24
    54fc:	orr	w0, w1, w0
    5500:	add	sp, sp, #0x10
    5504:	ret
    5508:	sub	sp, sp, #0x10
    550c:	strb	w0, [sp, #15]
    5510:	ldrb	w0, [sp, #15]
    5514:	cmp	w0, #0x4
    5518:	b.ne	5528 <list_super@@Base+0x94>  // b.any
    551c:	adrp	x0, 7000 <e2p_str2encoding_flags@@Base+0x424>
    5520:	add	x0, x0, #0xcd8
    5524:	b	5530 <list_super@@Base+0x9c>
    5528:	adrp	x0, 7000 <e2p_str2encoding_flags@@Base+0x424>
    552c:	add	x0, x0, #0xce0
    5530:	add	sp, sp, #0x10
    5534:	ret

0000000000005538 <e2p_list_journal_super@@Base>:
    5538:	stp	x29, x30, [sp, #-112]!
    553c:	mov	x29, sp
    5540:	str	x19, [sp, #16]
    5544:	str	x0, [sp, #56]
    5548:	str	x1, [sp, #48]
    554c:	str	w2, [sp, #44]
    5550:	str	w3, [sp, #40]
    5554:	ldr	x0, [sp, #48]
    5558:	str	x0, [sp, #80]
    555c:	str	wzr, [sp, #92]
    5560:	ldr	x3, [sp, #56]
    5564:	mov	x2, #0x19                  	// #25
    5568:	mov	x1, #0x1                   	// #1
    556c:	adrp	x0, 7000 <e2p_str2encoding_flags@@Base+0x424>
    5570:	add	x0, x0, #0xce8
    5574:	bl	25d0 <fwrite@plt>
    5578:	str	wzr, [sp, #88]
    557c:	ldr	x0, [sp, #80]
    5580:	add	x0, x0, #0x24
    5584:	str	x0, [sp, #104]
    5588:	b	5628 <e2p_list_journal_super@@Base+0xf0>
    558c:	ldr	x0, [sp, #104]
    5590:	ldr	w0, [x0]
    5594:	bl	54c4 <list_super@@Base+0x30>
    5598:	str	w0, [sp, #68]
    559c:	str	wzr, [sp, #96]
    55a0:	mov	w0, #0x1                   	// #1
    55a4:	str	w0, [sp, #100]
    55a8:	b	5604 <e2p_list_journal_super@@Base+0xcc>
    55ac:	ldr	w1, [sp, #68]
    55b0:	ldr	w0, [sp, #100]
    55b4:	and	w0, w1, w0
    55b8:	cmp	w0, #0x0
    55bc:	b.eq	55ec <e2p_list_journal_super@@Base+0xb4>  // b.none
    55c0:	ldr	w0, [sp, #88]
    55c4:	ldr	w1, [sp, #100]
    55c8:	bl	2590 <e2p_jrnl_feature2string@plt>
    55cc:	mov	x2, x0
    55d0:	adrp	x0, 7000 <e2p_str2encoding_flags@@Base+0x424>
    55d4:	add	x1, x0, #0xd08
    55d8:	ldr	x0, [sp, #56]
    55dc:	bl	26c0 <fprintf@plt>
    55e0:	ldr	w0, [sp, #92]
    55e4:	add	w0, w0, #0x1
    55e8:	str	w0, [sp, #92]
    55ec:	ldr	w0, [sp, #96]
    55f0:	add	w0, w0, #0x1
    55f4:	str	w0, [sp, #96]
    55f8:	ldr	w0, [sp, #100]
    55fc:	lsl	w0, w0, #1
    5600:	str	w0, [sp, #100]
    5604:	ldr	w0, [sp, #96]
    5608:	cmp	w0, #0x1f
    560c:	b.le	55ac <e2p_list_journal_super@@Base+0x74>
    5610:	ldr	w0, [sp, #88]
    5614:	add	w0, w0, #0x1
    5618:	str	w0, [sp, #88]
    561c:	ldr	x0, [sp, #104]
    5620:	add	x0, x0, #0x4
    5624:	str	x0, [sp, #104]
    5628:	ldr	w0, [sp, #88]
    562c:	cmp	w0, #0x2
    5630:	b.ls	558c <e2p_list_journal_super@@Base+0x54>  // b.plast
    5634:	ldr	w0, [sp, #92]
    5638:	cmp	w0, #0x0
    563c:	b.ne	5658 <e2p_list_journal_super@@Base+0x120>  // b.any
    5640:	ldr	x3, [sp, #56]
    5644:	mov	x2, #0x7                   	// #7
    5648:	mov	x1, #0x1                   	// #1
    564c:	adrp	x0, 7000 <e2p_str2encoding_flags@@Base+0x424>
    5650:	add	x0, x0, #0xd10
    5654:	bl	25d0 <fwrite@plt>
    5658:	ldr	x1, [sp, #56]
    565c:	mov	w0, #0xa                   	// #10
    5660:	bl	2420 <fputc@plt>
    5664:	ldr	x3, [sp, #56]
    5668:	mov	x2, #0x1a                  	// #26
    566c:	mov	x1, #0x1                   	// #1
    5670:	adrp	x0, 7000 <e2p_str2encoding_flags@@Base+0x424>
    5674:	add	x0, x0, #0xd18
    5678:	bl	25d0 <fwrite@plt>
    567c:	ldr	x0, [sp, #80]
    5680:	ldr	w0, [x0, #12]
    5684:	bl	23d0 <ntohl@plt>
    5688:	lsr	w19, w0, #10
    568c:	ldr	x0, [sp, #80]
    5690:	ldr	w0, [x0, #16]
    5694:	bl	23d0 <ntohl@plt>
    5698:	mul	w0, w19, w0
    569c:	str	w0, [sp, #76]
    56a0:	ldr	w1, [sp, #76]
    56a4:	mov	w0, #0x1fff                	// #8191
    56a8:	cmp	w1, w0
    56ac:	b.hi	56c8 <e2p_list_journal_super@@Base+0x190>  // b.pmore
    56b0:	ldr	w2, [sp, #76]
    56b4:	adrp	x0, 7000 <e2p_str2encoding_flags@@Base+0x424>
    56b8:	add	x1, x0, #0xd38
    56bc:	ldr	x0, [sp, #56]
    56c0:	bl	26c0 <fprintf@plt>
    56c4:	b	56e4 <e2p_list_journal_super@@Base+0x1ac>
    56c8:	ldr	w0, [sp, #76]
    56cc:	lsr	w0, w0, #10
    56d0:	mov	w2, w0
    56d4:	adrp	x0, 7000 <e2p_str2encoding_flags@@Base+0x424>
    56d8:	add	x1, x0, #0xd40
    56dc:	ldr	x0, [sp, #56]
    56e0:	bl	26c0 <fprintf@plt>
    56e4:	ldr	x0, [sp, #80]
    56e8:	ldr	w0, [x0, #64]
    56ec:	bl	23d0 <ntohl@plt>
    56f0:	str	w0, [sp, #72]
    56f4:	ldr	x0, [sp, #80]
    56f8:	ldr	w0, [x0, #12]
    56fc:	bl	23d0 <ntohl@plt>
    5700:	mov	w1, w0
    5704:	ldr	w0, [sp, #44]
    5708:	cmp	w0, w1
    570c:	b.eq	5730 <e2p_list_journal_super@@Base+0x1f8>  // b.none
    5710:	ldr	x0, [sp, #80]
    5714:	ldr	w0, [x0, #12]
    5718:	bl	23d0 <ntohl@plt>
    571c:	mov	w2, w0
    5720:	adrp	x0, 7000 <e2p_str2encoding_flags@@Base+0x424>
    5724:	add	x1, x0, #0xd48
    5728:	ldr	x0, [sp, #56]
    572c:	bl	26c0 <fprintf@plt>
    5730:	ldr	x0, [sp, #80]
    5734:	ldr	w0, [x0, #16]
    5738:	bl	23d0 <ntohl@plt>
    573c:	mov	w2, w0
    5740:	adrp	x0, 7000 <e2p_str2encoding_flags@@Base+0x424>
    5744:	add	x1, x0, #0xd68
    5748:	ldr	x0, [sp, #56]
    574c:	bl	26c0 <fprintf@plt>
    5750:	ldr	x0, [sp, #80]
    5754:	ldr	w0, [x0, #20]
    5758:	bl	23d0 <ntohl@plt>
    575c:	cmp	w0, #0x1
    5760:	b.eq	5784 <e2p_list_journal_super@@Base+0x24c>  // b.none
    5764:	ldr	x0, [sp, #80]
    5768:	ldr	w0, [x0, #20]
    576c:	bl	23d0 <ntohl@plt>
    5770:	mov	w2, w0
    5774:	adrp	x0, 7000 <e2p_str2encoding_flags@@Base+0x424>
    5778:	add	x1, x0, #0xd88
    577c:	ldr	x0, [sp, #56]
    5780:	bl	26c0 <fprintf@plt>
    5784:	ldr	x0, [sp, #80]
    5788:	ldr	w0, [x0, #24]
    578c:	bl	23d0 <ntohl@plt>
    5790:	mov	w19, w0
    5794:	ldr	x0, [sp, #80]
    5798:	ldr	w0, [x0, #28]
    579c:	bl	23d0 <ntohl@plt>
    57a0:	mov	w3, w0
    57a4:	mov	w2, w19
    57a8:	adrp	x0, 7000 <e2p_str2encoding_flags@@Base+0x424>
    57ac:	add	x1, x0, #0xda8
    57b0:	ldr	x0, [sp, #56]
    57b4:	bl	26c0 <fprintf@plt>
    57b8:	ldr	w0, [sp, #72]
    57bc:	cmp	w0, #0x1
    57c0:	b.eq	57d8 <e2p_list_journal_super@@Base+0x2a0>  // b.none
    57c4:	ldr	w2, [sp, #72]
    57c8:	adrp	x0, 7000 <e2p_str2encoding_flags@@Base+0x424>
    57cc:	add	x1, x0, #0xde8
    57d0:	ldr	x0, [sp, #56]
    57d4:	bl	26c0 <fprintf@plt>
    57d8:	ldr	x0, [sp, #80]
    57dc:	ldr	w19, [x0, #36]
    57e0:	mov	w0, #0x1                   	// #1
    57e4:	bl	54c4 <list_super@@Base+0x30>
    57e8:	and	w0, w19, w0
    57ec:	cmp	w0, #0x0
    57f0:	b.eq	580c <e2p_list_journal_super@@Base+0x2d4>  // b.none
    57f4:	ldr	x3, [sp, #56]
    57f8:	mov	x2, #0x20                  	// #32
    57fc:	mov	x1, #0x1                   	// #1
    5800:	adrp	x0, 7000 <e2p_str2encoding_flags@@Base+0x424>
    5804:	add	x0, x0, #0xe08
    5808:	bl	25d0 <fwrite@plt>
    580c:	ldr	x0, [sp, #80]
    5810:	ldr	w19, [x0, #40]
    5814:	mov	w0, #0x10                  	// #16
    5818:	bl	54c4 <list_super@@Base+0x30>
    581c:	and	w0, w19, w0
    5820:	cmp	w0, #0x0
    5824:	b.ne	5844 <e2p_list_journal_super@@Base+0x30c>  // b.any
    5828:	ldr	x0, [sp, #80]
    582c:	ldr	w19, [x0, #40]
    5830:	mov	w0, #0x8                   	// #8
    5834:	bl	54c4 <list_super@@Base+0x30>
    5838:	and	w0, w19, w0
    583c:	cmp	w0, #0x0
    5840:	b.eq	5878 <e2p_list_journal_super@@Base+0x340>  // b.none
    5844:	ldr	x0, [sp, #80]
    5848:	ldrb	w0, [x0, #80]
    584c:	bl	5508 <list_super@@Base+0x74>
    5850:	mov	x19, x0
    5854:	ldr	x0, [sp, #80]
    5858:	ldr	w0, [x0, #252]
    585c:	bl	54c4 <list_super@@Base+0x30>
    5860:	mov	w3, w0
    5864:	mov	x2, x19
    5868:	adrp	x0, 7000 <e2p_str2encoding_flags@@Base+0x424>
    586c:	add	x1, x0, #0xe30
    5870:	ldr	x0, [sp, #56]
    5874:	bl	26c0 <fprintf@plt>
    5878:	ldr	w0, [sp, #72]
    587c:	cmp	w0, #0x1
    5880:	b.hi	5898 <e2p_list_journal_super@@Base+0x360>  // b.pmore
    5884:	ldr	x0, [sp, #80]
    5888:	add	x0, x0, #0x100
    588c:	bl	2400 <e2p_is_null_uuid@plt>
    5890:	cmp	w0, #0x0
    5894:	b.ne	5910 <e2p_list_journal_super@@Base+0x3d8>  // b.any
    5898:	str	wzr, [sp, #88]
    589c:	b	58f4 <e2p_list_journal_super@@Base+0x3bc>
    58a0:	ldr	w0, [sp, #88]
    58a4:	cmp	w0, #0x0
    58a8:	b.eq	58b8 <e2p_list_journal_super@@Base+0x380>  // b.none
    58ac:	adrp	x0, 7000 <e2p_str2encoding_flags@@Base+0x424>
    58b0:	add	x19, x0, #0xe70
    58b4:	b	58c0 <e2p_list_journal_super@@Base+0x388>
    58b8:	adrp	x0, 7000 <e2p_str2encoding_flags@@Base+0x424>
    58bc:	add	x19, x0, #0xe90
    58c0:	ldr	w0, [sp, #88]
    58c4:	lsl	w0, w0, #4
    58c8:	mov	w0, w0
    58cc:	add	x0, x0, #0x100
    58d0:	ldr	x1, [sp, #80]
    58d4:	add	x0, x1, x0
    58d8:	bl	24d0 <e2p_uuid2str@plt>
    58dc:	mov	x1, x0
    58e0:	mov	x0, x19
    58e4:	bl	2670 <printf@plt>
    58e8:	ldr	w0, [sp, #88]
    58ec:	add	w0, w0, #0x1
    58f0:	str	w0, [sp, #88]
    58f4:	ldr	w1, [sp, #88]
    58f8:	ldr	w0, [sp, #72]
    58fc:	cmp	w1, w0
    5900:	b.cs	5910 <e2p_list_journal_super@@Base+0x3d8>  // b.hs, b.nlast
    5904:	ldr	w0, [sp, #88]
    5908:	cmp	w0, #0x2f
    590c:	b.ls	58a0 <e2p_list_journal_super@@Base+0x368>  // b.plast
    5910:	ldr	x0, [sp, #80]
    5914:	ldr	w0, [x0, #32]
    5918:	cmp	w0, #0x0
    591c:	b.eq	5940 <e2p_list_journal_super@@Base+0x408>  // b.none
    5920:	ldr	x0, [sp, #80]
    5924:	ldr	w0, [x0, #32]
    5928:	bl	23d0 <ntohl@plt>
    592c:	mov	w2, w0
    5930:	adrp	x0, 7000 <e2p_str2encoding_flags@@Base+0x424>
    5934:	add	x1, x0, #0xeb0
    5938:	ldr	x0, [sp, #56]
    593c:	bl	26c0 <fprintf@plt>
    5940:	nop
    5944:	ldr	x19, [sp, #16]
    5948:	ldp	x29, x30, [sp], #112
    594c:	ret

0000000000005950 <e2p_mntopt2string@@Base>:
    5950:	stp	x29, x30, [sp, #-48]!
    5954:	mov	x29, sp
    5958:	str	w0, [sp, #28]
    595c:	adrp	x0, 1a000 <e2p_str2encoding_flags@@Base+0x13424>
    5960:	add	x0, x0, #0x540
    5964:	str	x0, [sp, #40]
    5968:	b	5998 <e2p_mntopt2string@@Base+0x48>
    596c:	ldr	x0, [sp, #40]
    5970:	ldr	w0, [x0]
    5974:	ldr	w1, [sp, #28]
    5978:	cmp	w1, w0
    597c:	b.ne	598c <e2p_mntopt2string@@Base+0x3c>  // b.any
    5980:	ldr	x0, [sp, #40]
    5984:	ldr	x0, [x0, #8]
    5988:	b	59f4 <e2p_mntopt2string@@Base+0xa4>
    598c:	ldr	x0, [sp, #40]
    5990:	add	x0, x0, #0x10
    5994:	str	x0, [sp, #40]
    5998:	ldr	x0, [sp, #40]
    599c:	ldr	x0, [x0, #8]
    59a0:	cmp	x0, #0x0
    59a4:	b.ne	596c <e2p_mntopt2string@@Base+0x1c>  // b.any
    59a8:	str	wzr, [sp, #36]
    59ac:	b	59bc <e2p_mntopt2string@@Base+0x6c>
    59b0:	ldr	w0, [sp, #36]
    59b4:	add	w0, w0, #0x1
    59b8:	str	w0, [sp, #36]
    59bc:	ldr	w0, [sp, #28]
    59c0:	lsr	w0, w0, #1
    59c4:	str	w0, [sp, #28]
    59c8:	ldr	w0, [sp, #28]
    59cc:	cmp	w0, #0x0
    59d0:	b.ne	59b0 <e2p_mntopt2string@@Base+0x60>  // b.any
    59d4:	ldr	w2, [sp, #36]
    59d8:	adrp	x0, 7000 <e2p_str2encoding_flags@@Base+0x424>
    59dc:	add	x1, x0, #0xf80
    59e0:	adrp	x0, 1a000 <e2p_str2encoding_flags@@Base+0x13424>
    59e4:	add	x0, x0, #0xa28
    59e8:	bl	23f0 <sprintf@plt>
    59ec:	adrp	x0, 1a000 <e2p_str2encoding_flags@@Base+0x13424>
    59f0:	add	x0, x0, #0xa28
    59f4:	ldp	x29, x30, [sp], #48
    59f8:	ret

00000000000059fc <e2p_string2mntopt@@Base>:
    59fc:	stp	x29, x30, [sp, #-64]!
    5a00:	mov	x29, sp
    5a04:	str	x0, [sp, #24]
    5a08:	str	x1, [sp, #16]
    5a0c:	adrp	x0, 1a000 <e2p_str2encoding_flags@@Base+0x13424>
    5a10:	add	x0, x0, #0x540
    5a14:	str	x0, [sp, #56]
    5a18:	b	5a5c <e2p_string2mntopt@@Base+0x60>
    5a1c:	ldr	x0, [sp, #56]
    5a20:	ldr	x0, [x0, #8]
    5a24:	mov	x1, x0
    5a28:	ldr	x0, [sp, #24]
    5a2c:	bl	24e0 <strcasecmp@plt>
    5a30:	cmp	w0, #0x0
    5a34:	b.ne	5a50 <e2p_string2mntopt@@Base+0x54>  // b.any
    5a38:	ldr	x0, [sp, #56]
    5a3c:	ldr	w1, [x0]
    5a40:	ldr	x0, [sp, #16]
    5a44:	str	w1, [x0]
    5a48:	mov	w0, #0x0                   	// #0
    5a4c:	b	5b18 <e2p_string2mntopt@@Base+0x11c>
    5a50:	ldr	x0, [sp, #56]
    5a54:	add	x0, x0, #0x10
    5a58:	str	x0, [sp, #56]
    5a5c:	ldr	x0, [sp, #56]
    5a60:	ldr	x0, [x0, #8]
    5a64:	cmp	x0, #0x0
    5a68:	b.ne	5a1c <e2p_string2mntopt@@Base+0x20>  // b.any
    5a6c:	mov	x2, #0x7                   	// #7
    5a70:	adrp	x0, 7000 <e2p_str2encoding_flags@@Base+0x424>
    5a74:	add	x1, x0, #0xf90
    5a78:	ldr	x0, [sp, #24]
    5a7c:	bl	25b0 <strncasecmp@plt>
    5a80:	cmp	w0, #0x0
    5a84:	b.eq	5a90 <e2p_string2mntopt@@Base+0x94>  // b.none
    5a88:	mov	w0, #0x1                   	// #1
    5a8c:	b	5b18 <e2p_string2mntopt@@Base+0x11c>
    5a90:	ldr	x0, [sp, #24]
    5a94:	add	x0, x0, #0x8
    5a98:	ldrb	w0, [x0]
    5a9c:	cmp	w0, #0x0
    5aa0:	b.ne	5aac <e2p_string2mntopt@@Base+0xb0>  // b.any
    5aa4:	mov	w0, #0x1                   	// #1
    5aa8:	b	5b18 <e2p_string2mntopt@@Base+0x11c>
    5aac:	ldr	x0, [sp, #24]
    5ab0:	add	x0, x0, #0x8
    5ab4:	add	x1, sp, #0x28
    5ab8:	mov	w2, #0xa                   	// #10
    5abc:	bl	2580 <strtol@plt>
    5ac0:	str	w0, [sp, #52]
    5ac4:	ldr	w0, [sp, #52]
    5ac8:	cmp	w0, #0x1f
    5acc:	b.gt	5adc <e2p_string2mntopt@@Base+0xe0>
    5ad0:	ldr	w0, [sp, #52]
    5ad4:	cmp	w0, #0x0
    5ad8:	b.ge	5ae4 <e2p_string2mntopt@@Base+0xe8>  // b.tcont
    5adc:	mov	w0, #0x1                   	// #1
    5ae0:	b	5b18 <e2p_string2mntopt@@Base+0x11c>
    5ae4:	ldr	x0, [sp, #40]
    5ae8:	ldrb	w0, [x0]
    5aec:	cmp	w0, #0x0
    5af0:	b.eq	5afc <e2p_string2mntopt@@Base+0x100>  // b.none
    5af4:	mov	w0, #0x1                   	// #1
    5af8:	b	5b18 <e2p_string2mntopt@@Base+0x11c>
    5afc:	ldr	w0, [sp, #52]
    5b00:	mov	w1, #0x1                   	// #1
    5b04:	lsl	w0, w1, w0
    5b08:	mov	w1, w0
    5b0c:	ldr	x0, [sp, #16]
    5b10:	str	w1, [x0]
    5b14:	mov	w0, #0x0                   	// #0
    5b18:	ldp	x29, x30, [sp], #64
    5b1c:	ret
    5b20:	stp	x29, x30, [sp, #-32]!
    5b24:	mov	x29, sp
    5b28:	str	x0, [sp, #24]
    5b2c:	b	5b3c <e2p_string2mntopt@@Base+0x140>
    5b30:	ldr	x0, [sp, #24]
    5b34:	add	x0, x0, #0x1
    5b38:	str	x0, [sp, #24]
    5b3c:	ldr	x0, [sp, #24]
    5b40:	ldrb	w0, [x0]
    5b44:	cmp	w0, #0x0
    5b48:	b.eq	5b78 <e2p_string2mntopt@@Base+0x17c>  // b.none
    5b4c:	bl	2570 <__ctype_b_loc@plt>
    5b50:	ldr	x1, [x0]
    5b54:	ldr	x0, [sp, #24]
    5b58:	ldrb	w0, [x0]
    5b5c:	and	x0, x0, #0xff
    5b60:	lsl	x0, x0, #1
    5b64:	add	x0, x1, x0
    5b68:	ldrh	w0, [x0]
    5b6c:	and	w0, w0, #0x2000
    5b70:	cmp	w0, #0x0
    5b74:	b.ne	5b30 <e2p_string2mntopt@@Base+0x134>  // b.any
    5b78:	ldr	x0, [sp, #24]
    5b7c:	ldp	x29, x30, [sp], #32
    5b80:	ret
    5b84:	stp	x29, x30, [sp, #-32]!
    5b88:	mov	x29, sp
    5b8c:	str	x0, [sp, #24]
    5b90:	b	5ba0 <e2p_string2mntopt@@Base+0x1a4>
    5b94:	ldr	x0, [sp, #24]
    5b98:	add	x0, x0, #0x1
    5b9c:	str	x0, [sp, #24]
    5ba0:	ldr	x0, [sp, #24]
    5ba4:	ldrb	w0, [x0]
    5ba8:	cmp	w0, #0x0
    5bac:	b.eq	5bec <e2p_string2mntopt@@Base+0x1f0>  // b.none
    5bb0:	bl	2570 <__ctype_b_loc@plt>
    5bb4:	ldr	x1, [x0]
    5bb8:	ldr	x0, [sp, #24]
    5bbc:	ldrb	w0, [x0]
    5bc0:	and	x0, x0, #0xff
    5bc4:	lsl	x0, x0, #1
    5bc8:	add	x0, x1, x0
    5bcc:	ldrh	w0, [x0]
    5bd0:	and	w0, w0, #0x2000
    5bd4:	cmp	w0, #0x0
    5bd8:	b.ne	5bec <e2p_string2mntopt@@Base+0x1f0>  // b.any
    5bdc:	ldr	x0, [sp, #24]
    5be0:	ldrb	w0, [x0]
    5be4:	cmp	w0, #0x2c
    5be8:	b.ne	5b94 <e2p_string2mntopt@@Base+0x198>  // b.any
    5bec:	ldr	x0, [sp, #24]
    5bf0:	ldp	x29, x30, [sp], #32
    5bf4:	ret

0000000000005bf8 <e2p_edit_mntopts@@Base>:
    5bf8:	stp	x29, x30, [sp, #-96]!
    5bfc:	mov	x29, sp
    5c00:	str	x0, [sp, #40]
    5c04:	str	x1, [sp, #32]
    5c08:	str	w2, [sp, #28]
    5c0c:	str	wzr, [sp, #72]
    5c10:	ldr	x0, [sp, #40]
    5c14:	bl	23a0 <strlen@plt>
    5c18:	add	x0, x0, #0x1
    5c1c:	bl	2460 <malloc@plt>
    5c20:	str	x0, [sp, #64]
    5c24:	ldr	x0, [sp, #64]
    5c28:	cmp	x0, #0x0
    5c2c:	b.ne	5c38 <e2p_edit_mntopts@@Base+0x40>  // b.any
    5c30:	mov	w0, #0x1                   	// #1
    5c34:	b	5dd0 <e2p_edit_mntopts@@Base+0x1d8>
    5c38:	ldr	x1, [sp, #40]
    5c3c:	ldr	x0, [sp, #64]
    5c40:	bl	2600 <strcpy@plt>
    5c44:	ldr	x0, [sp, #64]
    5c48:	str	x0, [sp, #88]
    5c4c:	b	5da8 <e2p_edit_mntopts@@Base+0x1b0>
    5c50:	str	wzr, [sp, #76]
    5c54:	ldr	x0, [sp, #88]
    5c58:	bl	5b20 <e2p_string2mntopt@@Base+0x124>
    5c5c:	str	x0, [sp, #88]
    5c60:	ldr	x0, [sp, #88]
    5c64:	bl	5b84 <e2p_string2mntopt@@Base+0x188>
    5c68:	str	x0, [sp, #80]
    5c6c:	ldr	x0, [sp, #80]
    5c70:	ldrb	w0, [x0]
    5c74:	cmp	w0, #0x0
    5c78:	b.ne	5c84 <e2p_edit_mntopts@@Base+0x8c>  // b.any
    5c7c:	str	xzr, [sp, #80]
    5c80:	b	5c8c <e2p_edit_mntopts@@Base+0x94>
    5c84:	ldr	x0, [sp, #80]
    5c88:	strb	wzr, [x0]
    5c8c:	ldr	x0, [sp, #88]
    5c90:	ldrb	w0, [x0]
    5c94:	cmp	w0, #0x5e
    5c98:	b.eq	5cb4 <e2p_edit_mntopts@@Base+0xbc>  // b.none
    5c9c:	cmp	w0, #0x5e
    5ca0:	b.gt	5cd0 <e2p_edit_mntopts@@Base+0xd8>
    5ca4:	cmp	w0, #0x2b
    5ca8:	b.eq	5cc0 <e2p_edit_mntopts@@Base+0xc8>  // b.none
    5cac:	cmp	w0, #0x2d
    5cb0:	b.ne	5cd0 <e2p_edit_mntopts@@Base+0xd8>  // b.any
    5cb4:	ldr	w0, [sp, #76]
    5cb8:	add	w0, w0, #0x1
    5cbc:	str	w0, [sp, #76]
    5cc0:	ldr	x0, [sp, #88]
    5cc4:	add	x0, x0, #0x1
    5cc8:	str	x0, [sp, #88]
    5ccc:	nop
    5cd0:	add	x0, sp, #0x3c
    5cd4:	mov	x1, x0
    5cd8:	ldr	x0, [sp, #88]
    5cdc:	bl	24a0 <e2p_string2mntopt@plt>
    5ce0:	cmp	w0, #0x0
    5ce4:	b.eq	5cf4 <e2p_edit_mntopts@@Base+0xfc>  // b.none
    5ce8:	mov	w0, #0x1                   	// #1
    5cec:	str	w0, [sp, #72]
    5cf0:	b	5dc4 <e2p_edit_mntopts@@Base+0x1cc>
    5cf4:	ldr	w0, [sp, #28]
    5cf8:	cmp	w0, #0x0
    5cfc:	b.eq	5d20 <e2p_edit_mntopts@@Base+0x128>  // b.none
    5d00:	ldr	w1, [sp, #60]
    5d04:	ldr	w0, [sp, #28]
    5d08:	and	w0, w1, w0
    5d0c:	cmp	w0, #0x0
    5d10:	b.ne	5d20 <e2p_edit_mntopts@@Base+0x128>  // b.any
    5d14:	mov	w0, #0x1                   	// #1
    5d18:	str	w0, [sp, #72]
    5d1c:	b	5dc4 <e2p_edit_mntopts@@Base+0x1cc>
    5d20:	ldr	w0, [sp, #60]
    5d24:	and	w0, w0, #0x60
    5d28:	cmp	w0, #0x0
    5d2c:	b.eq	5d44 <e2p_edit_mntopts@@Base+0x14c>  // b.none
    5d30:	ldr	x0, [sp, #32]
    5d34:	ldr	w0, [x0]
    5d38:	and	w1, w0, #0xffffff9f
    5d3c:	ldr	x0, [sp, #32]
    5d40:	str	w1, [x0]
    5d44:	ldr	w0, [sp, #76]
    5d48:	cmp	w0, #0x0
    5d4c:	b.eq	5d70 <e2p_edit_mntopts@@Base+0x178>  // b.none
    5d50:	ldr	x0, [sp, #32]
    5d54:	ldr	w1, [x0]
    5d58:	ldr	w0, [sp, #60]
    5d5c:	mvn	w0, w0
    5d60:	and	w1, w1, w0
    5d64:	ldr	x0, [sp, #32]
    5d68:	str	w1, [x0]
    5d6c:	b	5d88 <e2p_edit_mntopts@@Base+0x190>
    5d70:	ldr	x0, [sp, #32]
    5d74:	ldr	w1, [x0]
    5d78:	ldr	w0, [sp, #60]
    5d7c:	orr	w1, w1, w0
    5d80:	ldr	x0, [sp, #32]
    5d84:	str	w1, [x0]
    5d88:	ldr	x0, [sp, #80]
    5d8c:	cmp	x0, #0x0
    5d90:	b.eq	5da0 <e2p_edit_mntopts@@Base+0x1a8>  // b.none
    5d94:	ldr	x0, [sp, #80]
    5d98:	add	x0, x0, #0x1
    5d9c:	b	5da4 <e2p_edit_mntopts@@Base+0x1ac>
    5da0:	mov	x0, #0x0                   	// #0
    5da4:	str	x0, [sp, #88]
    5da8:	ldr	x0, [sp, #88]
    5dac:	cmp	x0, #0x0
    5db0:	b.eq	5dc4 <e2p_edit_mntopts@@Base+0x1cc>  // b.none
    5db4:	ldr	x0, [sp, #88]
    5db8:	ldrb	w0, [x0]
    5dbc:	cmp	w0, #0x0
    5dc0:	b.ne	5c50 <e2p_edit_mntopts@@Base+0x58>  // b.any
    5dc4:	ldr	x0, [sp, #64]
    5dc8:	bl	25a0 <free@plt>
    5dcc:	ldr	w0, [sp, #72]
    5dd0:	ldp	x29, x30, [sp], #96
    5dd4:	ret

0000000000005dd8 <parse_num_blocks2@@Base>:
    5dd8:	stp	x29, x30, [sp, #-48]!
    5ddc:	mov	x29, sp
    5de0:	str	x0, [sp, #24]
    5de4:	str	w1, [sp, #20]
    5de8:	add	x0, sp, #0x20
    5dec:	mov	w2, #0x0                   	// #0
    5df0:	mov	x1, x0
    5df4:	ldr	x0, [sp, #24]
    5df8:	bl	25c0 <strtoull@plt>
    5dfc:	str	x0, [sp, #40]
    5e00:	ldr	x0, [sp, #32]
    5e04:	ldrb	w0, [x0]
    5e08:	cmp	w0, #0x0
    5e0c:	b.eq	5e2c <parse_num_blocks2@@Base+0x54>  // b.none
    5e10:	ldr	x0, [sp, #32]
    5e14:	add	x0, x0, #0x1
    5e18:	ldrb	w0, [x0]
    5e1c:	cmp	w0, #0x0
    5e20:	b.eq	5e2c <parse_num_blocks2@@Base+0x54>  // b.none
    5e24:	mov	x0, #0x0                   	// #0
    5e28:	b	5f60 <parse_num_blocks2@@Base+0x188>
    5e2c:	ldr	x0, [sp, #32]
    5e30:	ldrb	w0, [x0]
    5e34:	cmp	w0, #0x74
    5e38:	b.eq	5ec8 <parse_num_blocks2@@Base+0xf0>  // b.none
    5e3c:	cmp	w0, #0x74
    5e40:	b.gt	5f50 <parse_num_blocks2@@Base+0x178>
    5e44:	cmp	w0, #0x73
    5e48:	b.eq	5f1c <parse_num_blocks2@@Base+0x144>  // b.none
    5e4c:	cmp	w0, #0x73
    5e50:	b.gt	5f50 <parse_num_blocks2@@Base+0x178>
    5e54:	cmp	w0, #0x6d
    5e58:	b.eq	5ee0 <parse_num_blocks2@@Base+0x108>  // b.none
    5e5c:	cmp	w0, #0x6d
    5e60:	b.gt	5f50 <parse_num_blocks2@@Base+0x178>
    5e64:	cmp	w0, #0x6b
    5e68:	b.eq	5eec <parse_num_blocks2@@Base+0x114>  // b.none
    5e6c:	cmp	w0, #0x6b
    5e70:	b.gt	5f50 <parse_num_blocks2@@Base+0x178>
    5e74:	cmp	w0, #0x67
    5e78:	b.eq	5ed4 <parse_num_blocks2@@Base+0xfc>  // b.none
    5e7c:	cmp	w0, #0x67
    5e80:	b.gt	5f50 <parse_num_blocks2@@Base+0x178>
    5e84:	cmp	w0, #0x54
    5e88:	b.eq	5ec8 <parse_num_blocks2@@Base+0xf0>  // b.none
    5e8c:	cmp	w0, #0x54
    5e90:	b.gt	5f50 <parse_num_blocks2@@Base+0x178>
    5e94:	cmp	w0, #0x4d
    5e98:	b.eq	5ee0 <parse_num_blocks2@@Base+0x108>  // b.none
    5e9c:	cmp	w0, #0x4d
    5ea0:	b.gt	5f50 <parse_num_blocks2@@Base+0x178>
    5ea4:	cmp	w0, #0x4b
    5ea8:	b.eq	5eec <parse_num_blocks2@@Base+0x114>  // b.none
    5eac:	cmp	w0, #0x4b
    5eb0:	b.gt	5f50 <parse_num_blocks2@@Base+0x178>
    5eb4:	cmp	w0, #0x0
    5eb8:	b.eq	5f58 <parse_num_blocks2@@Base+0x180>  // b.none
    5ebc:	cmp	w0, #0x47
    5ec0:	b.eq	5ed4 <parse_num_blocks2@@Base+0xfc>  // b.none
    5ec4:	b	5f50 <parse_num_blocks2@@Base+0x178>
    5ec8:	ldr	x0, [sp, #40]
    5ecc:	lsl	x0, x0, #10
    5ed0:	str	x0, [sp, #40]
    5ed4:	ldr	x0, [sp, #40]
    5ed8:	lsl	x0, x0, #10
    5edc:	str	x0, [sp, #40]
    5ee0:	ldr	x0, [sp, #40]
    5ee4:	lsl	x0, x0, #10
    5ee8:	str	x0, [sp, #40]
    5eec:	ldr	w0, [sp, #20]
    5ef0:	cmp	w0, #0x0
    5ef4:	b.ge	5f08 <parse_num_blocks2@@Base+0x130>  // b.tcont
    5ef8:	ldr	x0, [sp, #40]
    5efc:	lsl	x0, x0, #10
    5f00:	str	x0, [sp, #40]
    5f04:	b	5f5c <parse_num_blocks2@@Base+0x184>
    5f08:	ldr	w0, [sp, #20]
    5f0c:	ldr	x1, [sp, #40]
    5f10:	lsr	x0, x1, x0
    5f14:	str	x0, [sp, #40]
    5f18:	b	5f5c <parse_num_blocks2@@Base+0x184>
    5f1c:	ldr	w0, [sp, #20]
    5f20:	cmp	w0, #0x0
    5f24:	b.ge	5f38 <parse_num_blocks2@@Base+0x160>  // b.tcont
    5f28:	ldr	x0, [sp, #40]
    5f2c:	lsl	x0, x0, #9
    5f30:	str	x0, [sp, #40]
    5f34:	b	5f5c <parse_num_blocks2@@Base+0x184>
    5f38:	ldr	w0, [sp, #20]
    5f3c:	add	w0, w0, #0x1
    5f40:	ldr	x1, [sp, #40]
    5f44:	lsr	x0, x1, x0
    5f48:	str	x0, [sp, #40]
    5f4c:	b	5f5c <parse_num_blocks2@@Base+0x184>
    5f50:	mov	x0, #0x0                   	// #0
    5f54:	b	5f60 <parse_num_blocks2@@Base+0x188>
    5f58:	nop
    5f5c:	ldr	x0, [sp, #40]
    5f60:	ldp	x29, x30, [sp], #48
    5f64:	ret

0000000000005f68 <parse_num_blocks@@Base>:
    5f68:	stp	x29, x30, [sp, #-32]!
    5f6c:	mov	x29, sp
    5f70:	str	x0, [sp, #24]
    5f74:	str	w1, [sp, #20]
    5f78:	ldr	w1, [sp, #20]
    5f7c:	ldr	x0, [sp, #24]
    5f80:	bl	2450 <parse_num_blocks2@plt>
    5f84:	ldp	x29, x30, [sp], #32
    5f88:	ret

0000000000005f8c <print_fs_errors@@Base>:
    5f8c:	stp	x29, x30, [sp, #-32]!
    5f90:	mov	x29, sp
    5f94:	str	x0, [sp, #24]
    5f98:	strh	w1, [sp, #22]
    5f9c:	ldrh	w0, [sp, #22]
    5fa0:	cmp	w0, #0x3
    5fa4:	b.eq	5ffc <print_fs_errors@@Base+0x70>  // b.none
    5fa8:	cmp	w0, #0x3
    5fac:	b.gt	6018 <print_fs_errors@@Base+0x8c>
    5fb0:	cmp	w0, #0x1
    5fb4:	b.eq	5fc4 <print_fs_errors@@Base+0x38>  // b.none
    5fb8:	cmp	w0, #0x2
    5fbc:	b.eq	5fe0 <print_fs_errors@@Base+0x54>  // b.none
    5fc0:	b	6018 <print_fs_errors@@Base+0x8c>
    5fc4:	ldr	x3, [sp, #24]
    5fc8:	mov	x2, #0x8                   	// #8
    5fcc:	mov	x1, #0x1                   	// #1
    5fd0:	adrp	x0, 7000 <e2p_str2encoding_flags@@Base+0x424>
    5fd4:	add	x0, x0, #0xf98
    5fd8:	bl	25d0 <fwrite@plt>
    5fdc:	b	6034 <print_fs_errors@@Base+0xa8>
    5fe0:	ldr	x3, [sp, #24]
    5fe4:	mov	x2, #0x11                  	// #17
    5fe8:	mov	x1, #0x1                   	// #1
    5fec:	adrp	x0, 7000 <e2p_str2encoding_flags@@Base+0x424>
    5ff0:	add	x0, x0, #0xfa8
    5ff4:	bl	25d0 <fwrite@plt>
    5ff8:	b	6034 <print_fs_errors@@Base+0xa8>
    5ffc:	ldr	x3, [sp, #24]
    6000:	mov	x2, #0x5                   	// #5
    6004:	mov	x1, #0x1                   	// #1
    6008:	adrp	x0, 7000 <e2p_str2encoding_flags@@Base+0x424>
    600c:	add	x0, x0, #0xfc0
    6010:	bl	25d0 <fwrite@plt>
    6014:	b	6034 <print_fs_errors@@Base+0xa8>
    6018:	ldr	x3, [sp, #24]
    601c:	mov	x2, #0x12                  	// #18
    6020:	mov	x1, #0x1                   	// #1
    6024:	adrp	x0, 7000 <e2p_str2encoding_flags@@Base+0x424>
    6028:	add	x0, x0, #0xfc8
    602c:	bl	25d0 <fwrite@plt>
    6030:	nop
    6034:	nop
    6038:	ldp	x29, x30, [sp], #32
    603c:	ret

0000000000006040 <print_flags@@Base>:
    6040:	stp	x29, x30, [sp, #-64]!
    6044:	mov	x29, sp
    6048:	str	x0, [sp, #40]
    604c:	str	x1, [sp, #32]
    6050:	str	w2, [sp, #28]
    6054:	ldr	w0, [sp, #28]
    6058:	and	w0, w0, #0x1
    605c:	str	w0, [sp, #48]
    6060:	mov	w0, #0x1                   	// #1
    6064:	str	w0, [sp, #52]
    6068:	adrp	x0, 1a000 <e2p_str2encoding_flags@@Base+0x13424>
    606c:	add	x0, x0, #0x610
    6070:	str	x0, [sp, #56]
    6074:	b	6114 <print_flags@@Base+0xd4>
    6078:	ldr	x0, [sp, #56]
    607c:	ldr	x1, [x0]
    6080:	ldr	x0, [sp, #32]
    6084:	and	x0, x1, x0
    6088:	cmp	x0, #0x0
    608c:	b.eq	60f0 <print_flags@@Base+0xb0>  // b.none
    6090:	ldr	w0, [sp, #48]
    6094:	cmp	w0, #0x0
    6098:	b.eq	60dc <print_flags@@Base+0x9c>  // b.none
    609c:	ldr	w0, [sp, #52]
    60a0:	cmp	w0, #0x0
    60a4:	b.eq	60b0 <print_flags@@Base+0x70>  // b.none
    60a8:	str	wzr, [sp, #52]
    60ac:	b	60c8 <print_flags@@Base+0x88>
    60b0:	ldr	x3, [sp, #40]
    60b4:	mov	x2, #0x2                   	// #2
    60b8:	mov	x1, #0x1                   	// #1
    60bc:	adrp	x0, 8000 <e2p_str2encoding_flags@@Base+0x1424>
    60c0:	add	x0, x0, #0x1e0
    60c4:	bl	25d0 <fwrite@plt>
    60c8:	ldr	x0, [sp, #56]
    60cc:	ldr	x0, [x0, #16]
    60d0:	ldr	x1, [sp, #40]
    60d4:	bl	23b0 <fputs@plt>
    60d8:	b	6108 <print_flags@@Base+0xc8>
    60dc:	ldr	x0, [sp, #56]
    60e0:	ldr	x0, [x0, #8]
    60e4:	ldr	x1, [sp, #40]
    60e8:	bl	23b0 <fputs@plt>
    60ec:	b	6108 <print_flags@@Base+0xc8>
    60f0:	ldr	w0, [sp, #48]
    60f4:	cmp	w0, #0x0
    60f8:	b.ne	6108 <print_flags@@Base+0xc8>  // b.any
    60fc:	ldr	x1, [sp, #40]
    6100:	mov	w0, #0x2d                  	// #45
    6104:	bl	2420 <fputc@plt>
    6108:	ldr	x0, [sp, #56]
    610c:	add	x0, x0, #0x18
    6110:	str	x0, [sp, #56]
    6114:	ldr	x0, [sp, #56]
    6118:	ldr	x0, [x0]
    611c:	cmp	x0, #0x0
    6120:	b.ne	6078 <print_flags@@Base+0x38>  // b.any
    6124:	ldr	w0, [sp, #48]
    6128:	cmp	w0, #0x0
    612c:	b.eq	6154 <print_flags@@Base+0x114>  // b.none
    6130:	ldr	w0, [sp, #52]
    6134:	cmp	w0, #0x0
    6138:	b.eq	6154 <print_flags@@Base+0x114>  // b.none
    613c:	ldr	x3, [sp, #40]
    6140:	mov	x2, #0x3                   	// #3
    6144:	mov	x1, #0x1                   	// #1
    6148:	adrp	x0, 8000 <e2p_str2encoding_flags@@Base+0x1424>
    614c:	add	x0, x0, #0x1e8
    6150:	bl	25d0 <fwrite@plt>
    6154:	nop
    6158:	ldp	x29, x30, [sp], #64
    615c:	ret

0000000000006160 <print_fs_state@@Base>:
    6160:	stp	x29, x30, [sp, #-32]!
    6164:	mov	x29, sp
    6168:	str	x0, [sp, #24]
    616c:	strh	w1, [sp, #22]
    6170:	ldrh	w0, [sp, #22]
    6174:	and	w0, w0, #0x1
    6178:	cmp	w0, #0x0
    617c:	b.eq	619c <print_fs_state@@Base+0x3c>  // b.none
    6180:	ldr	x3, [sp, #24]
    6184:	mov	x2, #0x6                   	// #6
    6188:	mov	x1, #0x1                   	// #1
    618c:	adrp	x0, 8000 <e2p_str2encoding_flags@@Base+0x1424>
    6190:	add	x0, x0, #0x1f0
    6194:	bl	25d0 <fwrite@plt>
    6198:	b	61b4 <print_fs_state@@Base+0x54>
    619c:	ldr	x3, [sp, #24]
    61a0:	mov	x2, #0xa                   	// #10
    61a4:	mov	x1, #0x1                   	// #1
    61a8:	adrp	x0, 8000 <e2p_str2encoding_flags@@Base+0x1424>
    61ac:	add	x0, x0, #0x1f8
    61b0:	bl	25d0 <fwrite@plt>
    61b4:	ldrh	w0, [sp, #22]
    61b8:	and	w0, w0, #0x2
    61bc:	cmp	w0, #0x0
    61c0:	b.eq	61dc <print_fs_state@@Base+0x7c>  // b.none
    61c4:	ldr	x3, [sp, #24]
    61c8:	mov	x2, #0xc                   	// #12
    61cc:	mov	x1, #0x1                   	// #1
    61d0:	adrp	x0, 8000 <e2p_str2encoding_flags@@Base+0x1424>
    61d4:	add	x0, x0, #0x208
    61d8:	bl	25d0 <fwrite@plt>
    61dc:	nop
    61e0:	ldp	x29, x30, [sp], #32
    61e4:	ret

00000000000061e8 <setflags@@Base>:
    61e8:	stp	x29, x30, [sp, #-176]!
    61ec:	mov	x29, sp
    61f0:	str	w0, [sp, #28]
    61f4:	str	x1, [sp, #16]
    61f8:	add	x0, sp, #0x30
    61fc:	mov	x1, x0
    6200:	ldr	w0, [sp, #28]
    6204:	bl	6d40 <e2p_str2encoding_flags@@Base+0x164>
    6208:	cmp	w0, #0x0
    620c:	b.ne	6248 <setflags@@Base+0x60>  // b.any
    6210:	ldr	w0, [sp, #64]
    6214:	and	w0, w0, #0xf000
    6218:	cmp	w0, #0x8, lsl #12
    621c:	b.eq	6248 <setflags@@Base+0x60>  // b.none
    6220:	ldr	w0, [sp, #64]
    6224:	and	w0, w0, #0xf000
    6228:	cmp	w0, #0x4, lsl #12
    622c:	b.eq	6248 <setflags@@Base+0x60>  // b.none
    6230:	bl	2680 <__errno_location@plt>
    6234:	mov	x1, x0
    6238:	mov	w0, #0x5f                  	// #95
    623c:	str	w0, [x1]
    6240:	mov	w0, #0xffffffff            	// #-1
    6244:	b	6268 <setflags@@Base+0x80>
    6248:	ldr	x0, [sp, #16]
    624c:	str	w0, [sp, #44]
    6250:	add	x0, sp, #0x2c
    6254:	mov	x2, x0
    6258:	mov	x1, #0x6602                	// #26114
    625c:	movk	x1, #0x4008, lsl #16
    6260:	ldr	w0, [sp, #28]
    6264:	bl	26d0 <ioctl@plt>
    6268:	ldp	x29, x30, [sp], #176
    626c:	ret

0000000000006270 <setversion@@Base>:
    6270:	stp	x29, x30, [sp, #-48]!
    6274:	mov	x29, sp
    6278:	str	w0, [sp, #28]
    627c:	str	x1, [sp, #16]
    6280:	ldr	x0, [sp, #16]
    6284:	str	w0, [sp, #44]
    6288:	add	x0, sp, #0x2c
    628c:	mov	x2, x0
    6290:	mov	x1, #0x7602                	// #30210
    6294:	movk	x1, #0x4008, lsl #16
    6298:	ldr	w0, [sp, #28]
    629c:	bl	26d0 <ioctl@plt>
    62a0:	ldp	x29, x30, [sp], #48
    62a4:	ret

00000000000062a8 <e2p_is_null_uuid@@Base>:
    62a8:	sub	sp, sp, #0x20
    62ac:	str	x0, [sp, #8]
    62b0:	str	wzr, [sp, #20]
    62b4:	ldr	x0, [sp, #8]
    62b8:	str	x0, [sp, #24]
    62bc:	b	62ec <e2p_is_null_uuid@@Base+0x44>
    62c0:	ldr	x0, [sp, #24]
    62c4:	add	x1, x0, #0x1
    62c8:	str	x1, [sp, #24]
    62cc:	ldrb	w0, [x0]
    62d0:	cmp	w0, #0x0
    62d4:	b.eq	62e0 <e2p_is_null_uuid@@Base+0x38>  // b.none
    62d8:	mov	w0, #0x0                   	// #0
    62dc:	b	62fc <e2p_is_null_uuid@@Base+0x54>
    62e0:	ldr	w0, [sp, #20]
    62e4:	add	w0, w0, #0x1
    62e8:	str	w0, [sp, #20]
    62ec:	ldr	w0, [sp, #20]
    62f0:	cmp	w0, #0xf
    62f4:	b.le	62c0 <e2p_is_null_uuid@@Base+0x18>
    62f8:	mov	w0, #0x1                   	// #1
    62fc:	add	sp, sp, #0x20
    6300:	ret
    6304:	stp	x29, x30, [sp, #-48]!
    6308:	mov	x29, sp
    630c:	str	x0, [sp, #24]
    6310:	str	x1, [sp, #16]
    6314:	ldr	x0, [sp, #24]
    6318:	str	x0, [sp, #40]
    631c:	ldr	x0, [sp, #40]
    6320:	add	x1, x0, #0x1
    6324:	str	x1, [sp, #40]
    6328:	ldrb	w0, [x0]
    632c:	str	w0, [sp, #36]
    6330:	ldr	w0, [sp, #36]
    6334:	lsl	w1, w0, #8
    6338:	ldr	x0, [sp, #40]
    633c:	add	x2, x0, #0x1
    6340:	str	x2, [sp, #40]
    6344:	ldrb	w0, [x0]
    6348:	orr	w0, w1, w0
    634c:	str	w0, [sp, #36]
    6350:	ldr	w0, [sp, #36]
    6354:	lsl	w1, w0, #8
    6358:	ldr	x0, [sp, #40]
    635c:	add	x2, x0, #0x1
    6360:	str	x2, [sp, #40]
    6364:	ldrb	w0, [x0]
    6368:	orr	w0, w1, w0
    636c:	str	w0, [sp, #36]
    6370:	ldr	w0, [sp, #36]
    6374:	lsl	w1, w0, #8
    6378:	ldr	x0, [sp, #40]
    637c:	add	x2, x0, #0x1
    6380:	str	x2, [sp, #40]
    6384:	ldrb	w0, [x0]
    6388:	orr	w0, w1, w0
    638c:	str	w0, [sp, #36]
    6390:	ldr	x0, [sp, #16]
    6394:	ldr	w1, [sp, #36]
    6398:	str	w1, [x0]
    639c:	ldr	x0, [sp, #40]
    63a0:	add	x1, x0, #0x1
    63a4:	str	x1, [sp, #40]
    63a8:	ldrb	w0, [x0]
    63ac:	str	w0, [sp, #36]
    63b0:	ldr	w0, [sp, #36]
    63b4:	lsl	w1, w0, #8
    63b8:	ldr	x0, [sp, #40]
    63bc:	add	x2, x0, #0x1
    63c0:	str	x2, [sp, #40]
    63c4:	ldrb	w0, [x0]
    63c8:	orr	w0, w1, w0
    63cc:	str	w0, [sp, #36]
    63d0:	ldr	w0, [sp, #36]
    63d4:	and	w1, w0, #0xffff
    63d8:	ldr	x0, [sp, #16]
    63dc:	strh	w1, [x0, #4]
    63e0:	ldr	x0, [sp, #40]
    63e4:	add	x1, x0, #0x1
    63e8:	str	x1, [sp, #40]
    63ec:	ldrb	w0, [x0]
    63f0:	str	w0, [sp, #36]
    63f4:	ldr	w0, [sp, #36]
    63f8:	lsl	w1, w0, #8
    63fc:	ldr	x0, [sp, #40]
    6400:	add	x2, x0, #0x1
    6404:	str	x2, [sp, #40]
    6408:	ldrb	w0, [x0]
    640c:	orr	w0, w1, w0
    6410:	str	w0, [sp, #36]
    6414:	ldr	w0, [sp, #36]
    6418:	and	w1, w0, #0xffff
    641c:	ldr	x0, [sp, #16]
    6420:	strh	w1, [x0, #6]
    6424:	ldr	x0, [sp, #40]
    6428:	add	x1, x0, #0x1
    642c:	str	x1, [sp, #40]
    6430:	ldrb	w0, [x0]
    6434:	str	w0, [sp, #36]
    6438:	ldr	w0, [sp, #36]
    643c:	lsl	w1, w0, #8
    6440:	ldr	x0, [sp, #40]
    6444:	add	x2, x0, #0x1
    6448:	str	x2, [sp, #40]
    644c:	ldrb	w0, [x0]
    6450:	orr	w0, w1, w0
    6454:	str	w0, [sp, #36]
    6458:	ldr	w0, [sp, #36]
    645c:	and	w1, w0, #0xffff
    6460:	ldr	x0, [sp, #16]
    6464:	strh	w1, [x0, #8]
    6468:	ldr	x0, [sp, #16]
    646c:	add	x0, x0, #0xa
    6470:	mov	x2, #0x6                   	// #6
    6474:	ldr	x1, [sp, #40]
    6478:	bl	2380 <memcpy@plt>
    647c:	nop
    6480:	ldp	x29, x30, [sp], #48
    6484:	ret

0000000000006488 <e2p_uuid_to_str@@Base>:
    6488:	sub	sp, sp, #0x60
    648c:	stp	x29, x30, [sp, #48]
    6490:	add	x29, sp, #0x30
    6494:	str	x0, [sp, #72]
    6498:	str	x1, [sp, #64]
    649c:	add	x0, sp, #0x50
    64a0:	mov	x1, x0
    64a4:	ldr	x0, [sp, #72]
    64a8:	bl	6304 <e2p_is_null_uuid@@Base+0x5c>
    64ac:	ldr	w1, [sp, #80]
    64b0:	ldrh	w0, [sp, #84]
    64b4:	mov	w8, w0
    64b8:	ldrh	w0, [sp, #86]
    64bc:	mov	w9, w0
    64c0:	ldrh	w0, [sp, #88]
    64c4:	lsr	w0, w0, #8
    64c8:	and	w0, w0, #0xffff
    64cc:	mov	w10, w0
    64d0:	ldrh	w0, [sp, #88]
    64d4:	and	w0, w0, #0xff
    64d8:	ldrb	w2, [sp, #90]
    64dc:	mov	w7, w2
    64e0:	ldrb	w2, [sp, #91]
    64e4:	ldrb	w3, [sp, #92]
    64e8:	ldrb	w4, [sp, #93]
    64ec:	ldrb	w5, [sp, #94]
    64f0:	ldrb	w6, [sp, #95]
    64f4:	str	w6, [sp, #32]
    64f8:	str	w5, [sp, #24]
    64fc:	str	w4, [sp, #16]
    6500:	str	w3, [sp, #8]
    6504:	str	w2, [sp]
    6508:	mov	w6, w0
    650c:	mov	w5, w10
    6510:	mov	w4, w9
    6514:	mov	w3, w8
    6518:	mov	w2, w1
    651c:	adrp	x0, 8000 <e2p_str2encoding_flags@@Base+0x1424>
    6520:	add	x1, x0, #0x218
    6524:	ldr	x0, [sp, #64]
    6528:	bl	23f0 <sprintf@plt>
    652c:	nop
    6530:	ldp	x29, x30, [sp, #48]
    6534:	add	sp, sp, #0x60
    6538:	ret

000000000000653c <e2p_uuid2str@@Base>:
    653c:	stp	x29, x30, [sp, #-32]!
    6540:	mov	x29, sp
    6544:	str	x0, [sp, #24]
    6548:	ldr	x0, [sp, #24]
    654c:	bl	2400 <e2p_is_null_uuid@plt>
    6550:	cmp	w0, #0x0
    6554:	b.eq	6564 <e2p_uuid2str@@Base+0x28>  // b.none
    6558:	adrp	x0, 8000 <e2p_str2encoding_flags@@Base+0x1424>
    655c:	add	x0, x0, #0x250
    6560:	b	657c <e2p_uuid2str@@Base+0x40>
    6564:	adrp	x0, 1a000 <e2p_str2encoding_flags@@Base+0x13424>
    6568:	add	x1, x0, #0xa40
    656c:	ldr	x0, [sp, #24]
    6570:	bl	2540 <e2p_uuid_to_str@plt>
    6574:	adrp	x0, 1a000 <e2p_str2encoding_flags@@Base+0x13424>
    6578:	add	x0, x0, #0xa40
    657c:	ldp	x29, x30, [sp], #32
    6580:	ret

0000000000006584 <e2p_os2string@@Base>:
    6584:	stp	x29, x30, [sp, #-48]!
    6588:	mov	x29, sp
    658c:	str	w0, [sp, #28]
    6590:	ldr	w0, [sp, #28]
    6594:	cmp	w0, #0x0
    6598:	b.lt	65c0 <e2p_os2string@@Base+0x3c>  // b.tstop
    659c:	ldr	w0, [sp, #28]
    65a0:	cmp	w0, #0x4
    65a4:	b.gt	65c0 <e2p_os2string@@Base+0x3c>
    65a8:	adrp	x0, 1a000 <e2p_str2encoding_flags@@Base+0x13424>
    65ac:	add	x0, x0, #0x808
    65b0:	ldrsw	x1, [sp, #28]
    65b4:	ldr	x0, [x0, x1, lsl #3]
    65b8:	str	x0, [sp, #40]
    65bc:	b	65cc <e2p_os2string@@Base+0x48>
    65c0:	adrp	x0, 8000 <e2p_str2encoding_flags@@Base+0x1424>
    65c4:	add	x0, x0, #0x280
    65c8:	str	x0, [sp, #40]
    65cc:	ldr	x0, [sp, #40]
    65d0:	bl	23a0 <strlen@plt>
    65d4:	add	x0, x0, #0x1
    65d8:	bl	2460 <malloc@plt>
    65dc:	str	x0, [sp, #32]
    65e0:	ldr	x0, [sp, #32]
    65e4:	cmp	x0, #0x0
    65e8:	b.eq	65f8 <e2p_os2string@@Base+0x74>  // b.none
    65ec:	ldr	x1, [sp, #40]
    65f0:	ldr	x0, [sp, #32]
    65f4:	bl	2600 <strcpy@plt>
    65f8:	ldr	x0, [sp, #32]
    65fc:	ldp	x29, x30, [sp], #48
    6600:	ret

0000000000006604 <e2p_string2os@@Base>:
    6604:	stp	x29, x30, [sp, #-48]!
    6608:	mov	x29, sp
    660c:	str	x0, [sp, #24]
    6610:	str	wzr, [sp, #36]
    6614:	adrp	x0, 1a000 <e2p_str2encoding_flags@@Base+0x13424>
    6618:	add	x0, x0, #0x808
    661c:	str	x0, [sp, #40]
    6620:	b	6660 <e2p_string2os@@Base+0x5c>
    6624:	ldr	x0, [sp, #40]
    6628:	ldr	x0, [x0]
    662c:	mov	x1, x0
    6630:	ldr	x0, [sp, #24]
    6634:	bl	24e0 <strcasecmp@plt>
    6638:	cmp	w0, #0x0
    663c:	b.ne	6648 <e2p_string2os@@Base+0x44>  // b.any
    6640:	ldr	w0, [sp, #36]
    6644:	b	6674 <e2p_string2os@@Base+0x70>
    6648:	ldr	x0, [sp, #40]
    664c:	add	x0, x0, #0x8
    6650:	str	x0, [sp, #40]
    6654:	ldr	w0, [sp, #36]
    6658:	add	w0, w0, #0x1
    665c:	str	w0, [sp, #36]
    6660:	ldr	x0, [sp, #40]
    6664:	ldr	x0, [x0]
    6668:	cmp	x0, #0x0
    666c:	b.ne	6624 <e2p_string2os@@Base+0x20>  // b.any
    6670:	mov	w0, #0xffffffff            	// #-1
    6674:	ldp	x29, x30, [sp], #48
    6678:	ret

000000000000667c <e2p_percent@@Base>:
    667c:	sub	sp, sp, #0x20
    6680:	str	w0, [sp, #12]
    6684:	str	w1, [sp, #8]
    6688:	mov	w0, #0xff000000            	// #-16777216
    668c:	str	w0, [sp, #28]
    6690:	ldr	w0, [sp, #12]
    6694:	cmp	w0, #0x0
    6698:	b.ne	66a4 <e2p_percent@@Base+0x28>  // b.any
    669c:	mov	w0, #0x0                   	// #0
    66a0:	b	6738 <e2p_percent@@Base+0xbc>
    66a4:	mov	w0, #0x64                  	// #100
    66a8:	ldr	w1, [sp, #12]
    66ac:	sdiv	w2, w0, w1
    66b0:	ldr	w1, [sp, #12]
    66b4:	mul	w1, w2, w1
    66b8:	sub	w0, w0, w1
    66bc:	cmp	w0, #0x0
    66c0:	b.ne	66e0 <e2p_percent@@Base+0x64>  // b.any
    66c4:	mov	w1, #0x64                  	// #100
    66c8:	ldr	w0, [sp, #12]
    66cc:	sdiv	w0, w1, w0
    66d0:	mov	w1, w0
    66d4:	ldr	w0, [sp, #8]
    66d8:	udiv	w0, w0, w1
    66dc:	b	6738 <e2p_percent@@Base+0xbc>
    66e0:	ldr	w1, [sp, #28]
    66e4:	ldr	w0, [sp, #8]
    66e8:	and	w0, w1, w0
    66ec:	cmp	w0, #0x0
    66f0:	b.eq	6718 <e2p_percent@@Base+0x9c>  // b.none
    66f4:	ldr	w1, [sp, #8]
    66f8:	mov	w0, #0x851f                	// #34079
    66fc:	movk	w0, #0x51eb, lsl #16
    6700:	umull	x0, w1, w0
    6704:	lsr	x0, x0, #32
    6708:	lsr	w1, w0, #5
    670c:	ldr	w0, [sp, #12]
    6710:	mul	w0, w1, w0
    6714:	b	6738 <e2p_percent@@Base+0xbc>
    6718:	ldr	w1, [sp, #12]
    671c:	ldr	w0, [sp, #8]
    6720:	mul	w1, w1, w0
    6724:	mov	w0, #0x851f                	// #34079
    6728:	movk	w0, #0x51eb, lsl #16
    672c:	umull	x0, w1, w0
    6730:	lsr	x0, x0, #32
    6734:	lsr	w0, w0, #5
    6738:	add	sp, sp, #0x20
    673c:	ret

0000000000006740 <e2p_encmode2string@@Base>:
    6740:	stp	x29, x30, [sp, #-48]!
    6744:	mov	x29, sp
    6748:	str	w0, [sp, #28]
    674c:	adrp	x0, 1a000 <e2p_str2encoding_flags@@Base+0x13424>
    6750:	add	x0, x0, #0x838
    6754:	str	x0, [sp, #40]
    6758:	b	6788 <e2p_encmode2string@@Base+0x48>
    675c:	ldr	x0, [sp, #40]
    6760:	ldr	w0, [x0]
    6764:	ldr	w1, [sp, #28]
    6768:	cmp	w1, w0
    676c:	b.ne	677c <e2p_encmode2string@@Base+0x3c>  // b.any
    6770:	ldr	x0, [sp, #40]
    6774:	ldr	x0, [x0, #8]
    6778:	b	67b8 <e2p_encmode2string@@Base+0x78>
    677c:	ldr	x0, [sp, #40]
    6780:	add	x0, x0, #0x10
    6784:	str	x0, [sp, #40]
    6788:	ldr	x0, [sp, #40]
    678c:	ldr	x0, [x0, #8]
    6790:	cmp	x0, #0x0
    6794:	b.ne	675c <e2p_encmode2string@@Base+0x1c>  // b.any
    6798:	ldr	w2, [sp, #28]
    679c:	adrp	x0, 8000 <e2p_str2encoding_flags@@Base+0x1424>
    67a0:	add	x1, x0, #0x2c8
    67a4:	adrp	x0, 1a000 <e2p_str2encoding_flags@@Base+0x13424>
    67a8:	add	x0, x0, #0xa90
    67ac:	bl	23f0 <sprintf@plt>
    67b0:	adrp	x0, 1a000 <e2p_str2encoding_flags@@Base+0x13424>
    67b4:	add	x0, x0, #0xa90
    67b8:	ldp	x29, x30, [sp], #48
    67bc:	ret

00000000000067c0 <e2p_string2encmode@@Base>:
    67c0:	stp	x29, x30, [sp, #-64]!
    67c4:	mov	x29, sp
    67c8:	str	x0, [sp, #24]
    67cc:	adrp	x0, 1a000 <e2p_str2encoding_flags@@Base+0x13424>
    67d0:	add	x0, x0, #0x838
    67d4:	str	x0, [sp, #56]
    67d8:	b	6810 <e2p_string2encmode@@Base+0x50>
    67dc:	ldr	x0, [sp, #56]
    67e0:	ldr	x0, [x0, #8]
    67e4:	mov	x1, x0
    67e8:	ldr	x0, [sp, #24]
    67ec:	bl	24e0 <strcasecmp@plt>
    67f0:	cmp	w0, #0x0
    67f4:	b.ne	6804 <e2p_string2encmode@@Base+0x44>  // b.any
    67f8:	ldr	x0, [sp, #56]
    67fc:	ldr	w0, [x0]
    6800:	b	68b4 <e2p_string2encmode@@Base+0xf4>
    6804:	ldr	x0, [sp, #56]
    6808:	add	x0, x0, #0x10
    680c:	str	x0, [sp, #56]
    6810:	ldr	x0, [sp, #56]
    6814:	ldr	x0, [x0, #8]
    6818:	cmp	x0, #0x0
    681c:	b.ne	67dc <e2p_string2encmode@@Base+0x1c>  // b.any
    6820:	mov	x2, #0x9                   	// #9
    6824:	adrp	x0, 8000 <e2p_str2encoding_flags@@Base+0x1424>
    6828:	add	x1, x0, #0x2d8
    682c:	ldr	x0, [sp, #24]
    6830:	bl	25b0 <strncasecmp@plt>
    6834:	cmp	w0, #0x0
    6838:	b.eq	6844 <e2p_string2encmode@@Base+0x84>  // b.none
    683c:	mov	w0, #0xffffffff            	// #-1
    6840:	b	68b4 <e2p_string2encmode@@Base+0xf4>
    6844:	ldr	x0, [sp, #24]
    6848:	add	x0, x0, #0x9
    684c:	ldrb	w0, [x0]
    6850:	cmp	w0, #0x0
    6854:	b.ne	6860 <e2p_string2encmode@@Base+0xa0>  // b.any
    6858:	mov	w0, #0xffffffff            	// #-1
    685c:	b	68b4 <e2p_string2encmode@@Base+0xf4>
    6860:	ldr	x0, [sp, #24]
    6864:	add	x0, x0, #0x9
    6868:	add	x1, sp, #0x28
    686c:	mov	w2, #0xa                   	// #10
    6870:	bl	2580 <strtol@plt>
    6874:	str	w0, [sp, #52]
    6878:	ldr	w0, [sp, #52]
    687c:	cmp	w0, #0xff
    6880:	b.gt	6890 <e2p_string2encmode@@Base+0xd0>
    6884:	ldr	w0, [sp, #52]
    6888:	cmp	w0, #0x0
    688c:	b.ge	6898 <e2p_string2encmode@@Base+0xd8>  // b.tcont
    6890:	mov	w0, #0xffffffff            	// #-1
    6894:	b	68b4 <e2p_string2encmode@@Base+0xf4>
    6898:	ldr	x0, [sp, #40]
    689c:	ldrb	w0, [x0]
    68a0:	cmp	w0, #0x0
    68a4:	b.eq	68b0 <e2p_string2encmode@@Base+0xf0>  // b.none
    68a8:	mov	w0, #0xffffffff            	// #-1
    68ac:	b	68b4 <e2p_string2encmode@@Base+0xf4>
    68b0:	ldr	w0, [sp, #52]
    68b4:	ldp	x29, x30, [sp], #64
    68b8:	ret

00000000000068bc <fgetproject@@Base>:
    68bc:	stp	x29, x30, [sp, #-80]!
    68c0:	mov	x29, sp
    68c4:	str	x0, [sp, #24]
    68c8:	str	x1, [sp, #16]
    68cc:	str	wzr, [sp, #76]
    68d0:	mov	w1, #0x800                 	// #2048
    68d4:	ldr	x0, [sp, #24]
    68d8:	bl	2470 <open@plt>
    68dc:	str	w0, [sp, #72]
    68e0:	ldr	w0, [sp, #72]
    68e4:	cmn	w0, #0x1
    68e8:	b.ne	68f4 <fgetproject@@Base+0x38>  // b.any
    68ec:	mov	w0, #0xffffffff            	// #-1
    68f0:	b	6960 <fgetproject@@Base+0xa4>
    68f4:	add	x0, sp, #0x28
    68f8:	mov	x2, x0
    68fc:	mov	x1, #0x581f                	// #22559
    6900:	movk	x1, #0x801c, lsl #16
    6904:	ldr	w0, [sp, #72]
    6908:	bl	26d0 <ioctl@plt>
    690c:	str	w0, [sp, #68]
    6910:	ldr	w0, [sp, #68]
    6914:	cmp	w0, #0x0
    6918:	b.ne	692c <fgetproject@@Base+0x70>  // b.any
    691c:	ldr	w0, [sp, #52]
    6920:	mov	w1, w0
    6924:	ldr	x0, [sp, #16]
    6928:	str	x1, [x0]
    692c:	bl	2680 <__errno_location@plt>
    6930:	ldr	w0, [x0]
    6934:	str	w0, [sp, #76]
    6938:	ldr	w0, [sp, #72]
    693c:	bl	2510 <close@plt>
    6940:	ldr	w0, [sp, #76]
    6944:	cmp	w0, #0x0
    6948:	b.eq	695c <fgetproject@@Base+0xa0>  // b.none
    694c:	bl	2680 <__errno_location@plt>
    6950:	mov	x1, x0
    6954:	ldr	w0, [sp, #76]
    6958:	str	w0, [x1]
    695c:	ldr	w0, [sp, #68]
    6960:	ldp	x29, x30, [sp], #80
    6964:	ret

0000000000006968 <fsetproject@@Base>:
    6968:	stp	x29, x30, [sp, #-80]!
    696c:	mov	x29, sp
    6970:	str	x0, [sp, #24]
    6974:	str	x1, [sp, #16]
    6978:	str	wzr, [sp, #72]
    697c:	mov	w1, #0x800                 	// #2048
    6980:	ldr	x0, [sp, #24]
    6984:	bl	2470 <open@plt>
    6988:	str	w0, [sp, #68]
    698c:	ldr	w0, [sp, #68]
    6990:	cmn	w0, #0x1
    6994:	b.ne	69a0 <fsetproject@@Base+0x38>  // b.any
    6998:	mov	w0, #0xffffffff            	// #-1
    699c:	b	6a44 <fsetproject@@Base+0xdc>
    69a0:	add	x0, sp, #0x28
    69a4:	mov	x2, x0
    69a8:	mov	x1, #0x581f                	// #22559
    69ac:	movk	x1, #0x801c, lsl #16
    69b0:	ldr	w0, [sp, #68]
    69b4:	bl	26d0 <ioctl@plt>
    69b8:	str	w0, [sp, #76]
    69bc:	ldr	w0, [sp, #76]
    69c0:	cmn	w0, #0x1
    69c4:	b.ne	69d8 <fsetproject@@Base+0x70>  // b.any
    69c8:	bl	2680 <__errno_location@plt>
    69cc:	ldr	w0, [x0]
    69d0:	str	w0, [sp, #72]
    69d4:	b	6a1c <fsetproject@@Base+0xb4>
    69d8:	ldr	x0, [sp, #16]
    69dc:	str	w0, [sp, #52]
    69e0:	add	x0, sp, #0x28
    69e4:	mov	x2, x0
    69e8:	mov	x1, #0x5820                	// #22560
    69ec:	movk	x1, #0x401c, lsl #16
    69f0:	ldr	w0, [sp, #68]
    69f4:	bl	26d0 <ioctl@plt>
    69f8:	str	w0, [sp, #76]
    69fc:	ldr	w0, [sp, #76]
    6a00:	cmn	w0, #0x1
    6a04:	b.ne	6a18 <fsetproject@@Base+0xb0>  // b.any
    6a08:	bl	2680 <__errno_location@plt>
    6a0c:	ldr	w0, [x0]
    6a10:	str	w0, [sp, #72]
    6a14:	b	6a1c <fsetproject@@Base+0xb4>
    6a18:	nop
    6a1c:	ldr	w0, [sp, #68]
    6a20:	bl	2510 <close@plt>
    6a24:	ldr	w0, [sp, #72]
    6a28:	cmp	w0, #0x0
    6a2c:	b.eq	6a40 <fsetproject@@Base+0xd8>  // b.none
    6a30:	bl	2680 <__errno_location@plt>
    6a34:	mov	x1, x0
    6a38:	ldr	w0, [sp, #72]
    6a3c:	str	w0, [x1]
    6a40:	ldr	w0, [sp, #76]
    6a44:	ldp	x29, x30, [sp], #80
    6a48:	ret

0000000000006a4c <e2p_str2encoding@@Base>:
    6a4c:	stp	x29, x30, [sp, #-48]!
    6a50:	mov	x29, sp
    6a54:	str	x0, [sp, #24]
    6a58:	str	wzr, [sp, #44]
    6a5c:	b	6ab4 <e2p_str2encoding@@Base+0x68>
    6a60:	adrp	x0, 19000 <e2p_str2encoding_flags@@Base+0x12424>
    6a64:	add	x1, x0, #0xda8
    6a68:	ldr	w0, [sp, #44]
    6a6c:	lsl	x0, x0, #4
    6a70:	add	x0, x1, x0
    6a74:	ldr	x0, [x0]
    6a78:	mov	x1, x0
    6a7c:	ldr	x0, [sp, #24]
    6a80:	bl	2550 <strcmp@plt>
    6a84:	cmp	w0, #0x0
    6a88:	b.ne	6aa8 <e2p_str2encoding@@Base+0x5c>  // b.any
    6a8c:	adrp	x0, 19000 <e2p_str2encoding_flags@@Base+0x12424>
    6a90:	add	x1, x0, #0xda8
    6a94:	ldr	w0, [sp, #44]
    6a98:	lsl	x0, x0, #4
    6a9c:	add	x0, x1, x0
    6aa0:	ldrh	w0, [x0, #8]
    6aa4:	b	6ac4 <e2p_str2encoding@@Base+0x78>
    6aa8:	ldr	w0, [sp, #44]
    6aac:	add	w0, w0, #0x1
    6ab0:	str	w0, [sp, #44]
    6ab4:	ldr	w0, [sp, #44]
    6ab8:	cmp	w0, #0x1
    6abc:	b.ls	6a60 <e2p_str2encoding@@Base+0x14>  // b.plast
    6ac0:	mov	w0, #0xffffffea            	// #-22
    6ac4:	ldp	x29, x30, [sp], #48
    6ac8:	ret

0000000000006acc <e2p_encoding2str@@Base>:
    6acc:	stp	x29, x30, [sp, #-48]!
    6ad0:	mov	x29, sp
    6ad4:	str	w0, [sp, #28]
    6ad8:	str	wzr, [sp, #44]
    6adc:	b	6b30 <e2p_encoding2str@@Base+0x64>
    6ae0:	adrp	x0, 19000 <e2p_str2encoding_flags@@Base+0x12424>
    6ae4:	add	x1, x0, #0xda8
    6ae8:	ldr	w0, [sp, #44]
    6aec:	lsl	x0, x0, #4
    6af0:	add	x0, x1, x0
    6af4:	ldrh	w0, [x0, #8]
    6af8:	mov	w1, w0
    6afc:	ldr	w0, [sp, #28]
    6b00:	cmp	w0, w1
    6b04:	b.ne	6b24 <e2p_encoding2str@@Base+0x58>  // b.any
    6b08:	adrp	x0, 19000 <e2p_str2encoding_flags@@Base+0x12424>
    6b0c:	add	x1, x0, #0xda8
    6b10:	ldr	w0, [sp, #44]
    6b14:	lsl	x0, x0, #4
    6b18:	add	x0, x1, x0
    6b1c:	ldr	x0, [x0]
    6b20:	b	6b5c <e2p_encoding2str@@Base+0x90>
    6b24:	ldr	w0, [sp, #44]
    6b28:	add	w0, w0, #0x1
    6b2c:	str	w0, [sp, #44]
    6b30:	ldr	w0, [sp, #44]
    6b34:	cmp	w0, #0x1
    6b38:	b.ls	6ae0 <e2p_encoding2str@@Base+0x14>  // b.plast
    6b3c:	ldr	w2, [sp, #28]
    6b40:	adrp	x0, 8000 <e2p_str2encoding_flags@@Base+0x1424>
    6b44:	add	x1, x0, #0x308
    6b48:	adrp	x0, 1a000 <e2p_str2encoding_flags@@Base+0x13424>
    6b4c:	add	x0, x0, #0xaa8
    6b50:	bl	23f0 <sprintf@plt>
    6b54:	adrp	x0, 1a000 <e2p_str2encoding_flags@@Base+0x13424>
    6b58:	add	x0, x0, #0xaa8
    6b5c:	ldp	x29, x30, [sp], #48
    6b60:	ret

0000000000006b64 <e2p_get_encoding_flags@@Base>:
    6b64:	sub	sp, sp, #0x20
    6b68:	str	w0, [sp, #12]
    6b6c:	str	wzr, [sp, #28]
    6b70:	b	6bc4 <e2p_get_encoding_flags@@Base+0x60>
    6b74:	adrp	x0, 19000 <e2p_str2encoding_flags@@Base+0x12424>
    6b78:	add	x1, x0, #0xda8
    6b7c:	ldr	w0, [sp, #28]
    6b80:	lsl	x0, x0, #4
    6b84:	add	x0, x1, x0
    6b88:	ldrh	w0, [x0, #8]
    6b8c:	mov	w1, w0
    6b90:	ldr	w0, [sp, #12]
    6b94:	cmp	w0, w1
    6b98:	b.ne	6bb8 <e2p_get_encoding_flags@@Base+0x54>  // b.any
    6b9c:	adrp	x0, 19000 <e2p_str2encoding_flags@@Base+0x12424>
    6ba0:	add	x1, x0, #0xda8
    6ba4:	ldr	w0, [sp, #28]
    6ba8:	lsl	x0, x0, #4
    6bac:	add	x0, x1, x0
    6bb0:	ldrh	w0, [x0, #10]
    6bb4:	b	6bd4 <e2p_get_encoding_flags@@Base+0x70>
    6bb8:	ldr	w0, [sp, #28]
    6bbc:	add	w0, w0, #0x1
    6bc0:	str	w0, [sp, #28]
    6bc4:	ldr	w0, [sp, #28]
    6bc8:	cmp	w0, #0x1
    6bcc:	b.ls	6b74 <e2p_get_encoding_flags@@Base+0x10>  // b.plast
    6bd0:	mov	w0, #0x0                   	// #0
    6bd4:	add	sp, sp, #0x20
    6bd8:	ret

0000000000006bdc <e2p_str2encoding_flags@@Base>:
    6bdc:	stp	x29, x30, [sp, #-80]!
    6be0:	mov	x29, sp
    6be4:	str	w0, [sp, #44]
    6be8:	str	x1, [sp, #32]
    6bec:	str	x2, [sp, #24]
    6bf0:	adrp	x0, 8000 <e2p_str2encoding_flags@@Base+0x1424>
    6bf4:	add	x1, x0, #0x320
    6bf8:	ldr	x0, [sp, #32]
    6bfc:	bl	2390 <strtok@plt>
    6c00:	str	x0, [sp, #72]
    6c04:	str	wzr, [sp, #64]
    6c08:	ldr	w0, [sp, #44]
    6c0c:	cmp	w0, #0x1
    6c10:	b.eq	6d24 <e2p_str2encoding_flags@@Base+0x148>  // b.none
    6c14:	mov	w0, #0xffffffea            	// #-22
    6c18:	b	6d34 <e2p_str2encoding_flags@@Base+0x158>
    6c1c:	str	wzr, [sp, #64]
    6c20:	mov	x2, #0x2                   	// #2
    6c24:	ldr	x1, [sp, #72]
    6c28:	adrp	x0, 8000 <e2p_str2encoding_flags@@Base+0x1424>
    6c2c:	add	x0, x0, #0x328
    6c30:	bl	2480 <strncmp@plt>
    6c34:	cmp	w0, #0x0
    6c38:	b.ne	6c50 <e2p_str2encoding_flags@@Base+0x74>  // b.any
    6c3c:	mov	w0, #0x1                   	// #1
    6c40:	str	w0, [sp, #64]
    6c44:	ldr	x0, [sp, #72]
    6c48:	add	x0, x0, #0x2
    6c4c:	str	x0, [sp, #72]
    6c50:	str	wzr, [sp, #68]
    6c54:	b	6cfc <e2p_str2encoding_flags@@Base+0x120>
    6c58:	ldr	w0, [sp, #68]
    6c5c:	lsl	x1, x0, #4
    6c60:	adrp	x0, 19000 <e2p_str2encoding_flags@@Base+0x12424>
    6c64:	add	x0, x0, #0xdc8
    6c68:	add	x0, x1, x0
    6c6c:	str	x0, [sp, #56]
    6c70:	ldr	x0, [sp, #56]
    6c74:	ldr	x0, [x0, #8]
    6c78:	ldr	x1, [sp, #72]
    6c7c:	bl	2550 <strcmp@plt>
    6c80:	cmp	w0, #0x0
    6c84:	b.ne	6cf0 <e2p_str2encoding_flags@@Base+0x114>  // b.any
    6c88:	ldr	w0, [sp, #64]
    6c8c:	cmp	w0, #0x0
    6c90:	b.eq	6ccc <e2p_str2encoding_flags@@Base+0xf0>  // b.none
    6c94:	ldr	x0, [sp, #24]
    6c98:	ldrh	w0, [x0]
    6c9c:	sxth	w1, w0
    6ca0:	ldr	x0, [sp, #56]
    6ca4:	ldrh	w0, [x0]
    6ca8:	sxth	w0, w0
    6cac:	mvn	w0, w0
    6cb0:	sxth	w0, w0
    6cb4:	and	w0, w1, w0
    6cb8:	sxth	w0, w0
    6cbc:	and	w1, w0, #0xffff
    6cc0:	ldr	x0, [sp, #24]
    6cc4:	strh	w1, [x0]
    6cc8:	b	6d10 <e2p_str2encoding_flags@@Base+0x134>
    6ccc:	ldr	x0, [sp, #24]
    6cd0:	ldrh	w1, [x0]
    6cd4:	ldr	x0, [sp, #56]
    6cd8:	ldrh	w0, [x0]
    6cdc:	orr	w0, w1, w0
    6ce0:	and	w1, w0, #0xffff
    6ce4:	ldr	x0, [sp, #24]
    6ce8:	strh	w1, [x0]
    6cec:	b	6d10 <e2p_str2encoding_flags@@Base+0x134>
    6cf0:	ldr	w0, [sp, #68]
    6cf4:	add	w0, w0, #0x1
    6cf8:	str	w0, [sp, #68]
    6cfc:	ldr	w0, [sp, #68]
    6d00:	cmp	w0, #0x0
    6d04:	b.eq	6c58 <e2p_str2encoding_flags@@Base+0x7c>  // b.none
    6d08:	mov	w0, #0xffffffea            	// #-22
    6d0c:	b	6d34 <e2p_str2encoding_flags@@Base+0x158>
    6d10:	adrp	x0, 8000 <e2p_str2encoding_flags@@Base+0x1424>
    6d14:	add	x1, x0, #0x320
    6d18:	mov	x0, #0x0                   	// #0
    6d1c:	bl	2390 <strtok@plt>
    6d20:	str	x0, [sp, #72]
    6d24:	ldr	x0, [sp, #72]
    6d28:	cmp	x0, #0x0
    6d2c:	b.ne	6c1c <e2p_str2encoding_flags@@Base+0x40>  // b.any
    6d30:	mov	w0, #0x0                   	// #0
    6d34:	ldp	x29, x30, [sp], #80
    6d38:	ret
    6d3c:	nop
    6d40:	mov	x2, x1
    6d44:	mov	w1, w0
    6d48:	mov	w0, #0x0                   	// #0
    6d4c:	b	2640 <__fxstat@plt>
    6d50:	mov	x2, x1
    6d54:	mov	x1, x0
    6d58:	mov	w0, #0x0                   	// #0
    6d5c:	b	2620 <__lxstat@plt>

Disassembly of section .fini:

0000000000006d60 <.fini>:
    6d60:	stp	x29, x30, [sp, #-16]!
    6d64:	mov	x29, sp
    6d68:	ldp	x29, x30, [sp], #16
    6d6c:	ret
