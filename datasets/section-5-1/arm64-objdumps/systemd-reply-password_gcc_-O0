
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//systemd-reply-password_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000400d50 <_init>:
  400d50:	stp	x29, x30, [sp, #-16]!
  400d54:	mov	x29, sp
  400d58:	bl	400f80 <call_weak_fn>
  400d5c:	ldp	x29, x30, [sp], #16
  400d60:	ret

Disassembly of section .plt:

0000000000400d70 <.plt>:
  400d70:	stp	x16, x30, [sp, #-16]!
  400d74:	adrp	x16, 412000 <__FRAME_END__+0x10060>
  400d78:	ldr	x17, [x16, #3864]
  400d7c:	add	x16, x16, #0xf18
  400d80:	br	x17
  400d84:	nop
  400d88:	nop
  400d8c:	nop

0000000000400d90 <read_line_full@plt>:
  400d90:	adrp	x16, 412000 <__FRAME_END__+0x10060>
  400d94:	ldr	x17, [x16, #3872]
  400d98:	add	x16, x16, #0xf20
  400d9c:	br	x17

0000000000400da0 <sendto@plt>:
  400da0:	adrp	x16, 412000 <__FRAME_END__+0x10060>
  400da4:	ldr	x17, [x16, #3880]
  400da8:	add	x16, x16, #0xf28
  400dac:	br	x17

0000000000400db0 <__libc_start_main@plt>:
  400db0:	adrp	x16, 412000 <__FRAME_END__+0x10060>
  400db4:	ldr	x17, [x16, #3888]
  400db8:	add	x16, x16, #0xf30
  400dbc:	br	x17

0000000000400dc0 <__gmon_start__@plt>:
  400dc0:	adrp	x16, 412000 <__FRAME_END__+0x10060>
  400dc4:	ldr	x17, [x16, #3896]
  400dc8:	add	x16, x16, #0xf38
  400dcc:	br	x17

0000000000400dd0 <polkit_agent_close@plt>:
  400dd0:	adrp	x16, 412000 <__FRAME_END__+0x10060>
  400dd4:	ldr	x17, [x16, #3904]
  400dd8:	add	x16, x16, #0xf40
  400ddc:	br	x17

0000000000400de0 <socket@plt>:
  400de0:	adrp	x16, 412000 <__FRAME_END__+0x10060>
  400de4:	ldr	x17, [x16, #3912]
  400de8:	add	x16, x16, #0xf48
  400dec:	br	x17

0000000000400df0 <log_setup_service@plt>:
  400df0:	adrp	x16, 412000 <__FRAME_END__+0x10060>
  400df4:	ldr	x17, [x16, #3920]
  400df8:	add	x16, x16, #0xf50
  400dfc:	br	x17

0000000000400e00 <strjoin_real@plt>:
  400e00:	adrp	x16, 412000 <__FRAME_END__+0x10060>
  400e04:	ldr	x17, [x16, #3928]
  400e08:	add	x16, x16, #0xf58
  400e0c:	br	x17

0000000000400e10 <safe_close@plt>:
  400e10:	adrp	x16, 412000 <__FRAME_END__+0x10060>
  400e14:	ldr	x17, [x16, #3936]
  400e18:	add	x16, x16, #0xf60
  400e1c:	br	x17

0000000000400e20 <log_assert_failed_realm@plt>:
  400e20:	adrp	x16, 412000 <__FRAME_END__+0x10060>
  400e24:	ldr	x17, [x16, #3944]
  400e28:	add	x16, x16, #0xf68
  400e2c:	br	x17

0000000000400e30 <malloc_usable_size@plt>:
  400e30:	adrp	x16, 412000 <__FRAME_END__+0x10060>
  400e34:	ldr	x17, [x16, #3952]
  400e38:	add	x16, x16, #0xf70
  400e3c:	br	x17

0000000000400e40 <abort@plt>:
  400e40:	adrp	x16, 412000 <__FRAME_END__+0x10060>
  400e44:	ldr	x17, [x16, #3960]
  400e48:	add	x16, x16, #0xf78
  400e4c:	br	x17

0000000000400e50 <__errno_location@plt>:
  400e50:	adrp	x16, 412000 <__FRAME_END__+0x10060>
  400e54:	ldr	x17, [x16, #3968]
  400e58:	add	x16, x16, #0xf80
  400e5c:	br	x17

0000000000400e60 <__stack_chk_fail@plt>:
  400e60:	adrp	x16, 412000 <__FRAME_END__+0x10060>
  400e64:	ldr	x17, [x16, #3976]
  400e68:	add	x16, x16, #0xf88
  400e6c:	br	x17

0000000000400e70 <explicit_bzero@plt>:
  400e70:	adrp	x16, 412000 <__FRAME_END__+0x10060>
  400e74:	ldr	x17, [x16, #3984]
  400e78:	add	x16, x16, #0xf90
  400e7c:	br	x17

0000000000400e80 <ask_password_agent_close@plt>:
  400e80:	adrp	x16, 412000 <__FRAME_END__+0x10060>
  400e84:	ldr	x17, [x16, #3992]
  400e88:	add	x16, x16, #0xf98
  400e8c:	br	x17

0000000000400e90 <pager_close@plt>:
  400e90:	adrp	x16, 412000 <__FRAME_END__+0x10060>
  400e94:	ldr	x17, [x16, #4000]
  400e98:	add	x16, x16, #0xfa0
  400e9c:	br	x17

0000000000400ea0 <log_internal_realm@plt>:
  400ea0:	adrp	x16, 412000 <__FRAME_END__+0x10060>
  400ea4:	ldr	x17, [x16, #4008]
  400ea8:	add	x16, x16, #0xfa8
  400eac:	br	x17

0000000000400eb0 <strcmp@plt>:
  400eb0:	adrp	x16, 412000 <__FRAME_END__+0x10060>
  400eb4:	ldr	x17, [x16, #4016]
  400eb8:	add	x16, x16, #0xfb0
  400ebc:	br	x17

0000000000400ec0 <strdup@plt>:
  400ec0:	adrp	x16, 412000 <__FRAME_END__+0x10060>
  400ec4:	ldr	x17, [x16, #4024]
  400ec8:	add	x16, x16, #0xfb8
  400ecc:	br	x17

0000000000400ed0 <sockaddr_un_set_path@plt>:
  400ed0:	adrp	x16, 412000 <__FRAME_END__+0x10060>
  400ed4:	ldr	x17, [x16, #4032]
  400ed8:	add	x16, x16, #0xfc0
  400edc:	br	x17

0000000000400ee0 <free@plt>:
  400ee0:	adrp	x16, 412000 <__FRAME_END__+0x10060>
  400ee4:	ldr	x17, [x16, #4040]
  400ee8:	add	x16, x16, #0xfc8
  400eec:	br	x17

0000000000400ef0 <mac_selinux_finish@plt>:
  400ef0:	adrp	x16, 412000 <__FRAME_END__+0x10060>
  400ef4:	ldr	x17, [x16, #4048]
  400ef8:	add	x16, x16, #0xfd0
  400efc:	br	x17

0000000000400f00 <strlen@plt>:
  400f00:	adrp	x16, 412000 <__FRAME_END__+0x10060>
  400f04:	ldr	x17, [x16, #4056]
  400f08:	add	x16, x16, #0xfd8
  400f0c:	br	x17

0000000000400f10 <log_oom_internal@plt>:
  400f10:	adrp	x16, 412000 <__FRAME_END__+0x10060>
  400f14:	ldr	x17, [x16, #4064]
  400f18:	add	x16, x16, #0xfe0
  400f1c:	br	x17

0000000000400f20 <log_get_max_level_realm@plt>:
  400f20:	adrp	x16, 412000 <__FRAME_END__+0x10060>
  400f24:	ldr	x17, [x16, #4072]
  400f28:	add	x16, x16, #0xfe8
  400f2c:	br	x17

Disassembly of section .text:

0000000000400f30 <_start>:
  400f30:	mov	x29, #0x0                   	// #0
  400f34:	mov	x30, #0x0                   	// #0
  400f38:	mov	x5, x0
  400f3c:	ldr	x1, [sp]
  400f40:	add	x2, sp, #0x8
  400f44:	mov	x6, sp
  400f48:	movz	x0, #0x0, lsl #48
  400f4c:	movk	x0, #0x0, lsl #32
  400f50:	movk	x0, #0x40, lsl #16
  400f54:	movk	x0, #0x1a74
  400f58:	movz	x3, #0x0, lsl #48
  400f5c:	movk	x3, #0x0, lsl #32
  400f60:	movk	x3, #0x40, lsl #16
  400f64:	movk	x3, #0x1ac8
  400f68:	movz	x4, #0x0, lsl #48
  400f6c:	movk	x4, #0x0, lsl #32
  400f70:	movk	x4, #0x40, lsl #16
  400f74:	movk	x4, #0x1b48
  400f78:	bl	400db0 <__libc_start_main@plt>
  400f7c:	bl	400e40 <abort@plt>

0000000000400f80 <call_weak_fn>:
  400f80:	adrp	x0, 412000 <__FRAME_END__+0x10060>
  400f84:	ldr	x0, [x0, #4088]
  400f88:	cbz	x0, 400f90 <call_weak_fn+0x10>
  400f8c:	b	400dc0 <__gmon_start__@plt>
  400f90:	ret

0000000000400f94 <deregister_tm_clones>:
  400f94:	stp	x29, x30, [sp, #-32]!
  400f98:	mov	x29, sp
  400f9c:	adrp	x0, 413000 <saved_argv@@SD_SHARED>
  400fa0:	add	x0, x0, #0x0
  400fa4:	str	x0, [sp, #24]
  400fa8:	ldr	x0, [sp, #24]
  400fac:	str	x0, [sp, #24]
  400fb0:	ldr	x1, [sp, #24]
  400fb4:	adrp	x0, 413000 <saved_argv@@SD_SHARED>
  400fb8:	add	x0, x0, #0x0
  400fbc:	cmp	x1, x0
  400fc0:	b.eq	400ffc <deregister_tm_clones+0x68>  // b.none
  400fc4:	adrp	x0, 401000 <deregister_tm_clones+0x6c>
  400fc8:	add	x0, x0, #0xb60
  400fcc:	ldr	x0, [x0]
  400fd0:	str	x0, [sp, #16]
  400fd4:	ldr	x0, [sp, #16]
  400fd8:	str	x0, [sp, #16]
  400fdc:	ldr	x0, [sp, #16]
  400fe0:	cmp	x0, #0x0
  400fe4:	b.eq	401000 <deregister_tm_clones+0x6c>  // b.none
  400fe8:	ldr	x1, [sp, #16]
  400fec:	adrp	x0, 413000 <saved_argv@@SD_SHARED>
  400ff0:	add	x0, x0, #0x0
  400ff4:	blr	x1
  400ff8:	b	401000 <deregister_tm_clones+0x6c>
  400ffc:	nop
  401000:	ldp	x29, x30, [sp], #32
  401004:	ret

0000000000401008 <register_tm_clones>:
  401008:	stp	x29, x30, [sp, #-48]!
  40100c:	mov	x29, sp
  401010:	adrp	x0, 413000 <saved_argv@@SD_SHARED>
  401014:	add	x0, x0, #0x0
  401018:	str	x0, [sp, #40]
  40101c:	ldr	x0, [sp, #40]
  401020:	str	x0, [sp, #40]
  401024:	ldr	x1, [sp, #40]
  401028:	adrp	x0, 413000 <saved_argv@@SD_SHARED>
  40102c:	add	x0, x0, #0x0
  401030:	sub	x0, x1, x0
  401034:	asr	x0, x0, #3
  401038:	lsr	x1, x0, #63
  40103c:	add	x0, x1, x0
  401040:	asr	x0, x0, #1
  401044:	str	x0, [sp, #32]
  401048:	ldr	x0, [sp, #32]
  40104c:	cmp	x0, #0x0
  401050:	b.eq	401090 <register_tm_clones+0x88>  // b.none
  401054:	adrp	x0, 401000 <deregister_tm_clones+0x6c>
  401058:	add	x0, x0, #0xb68
  40105c:	ldr	x0, [x0]
  401060:	str	x0, [sp, #24]
  401064:	ldr	x0, [sp, #24]
  401068:	str	x0, [sp, #24]
  40106c:	ldr	x0, [sp, #24]
  401070:	cmp	x0, #0x0
  401074:	b.eq	401094 <register_tm_clones+0x8c>  // b.none
  401078:	ldr	x2, [sp, #24]
  40107c:	ldr	x1, [sp, #32]
  401080:	adrp	x0, 413000 <saved_argv@@SD_SHARED>
  401084:	add	x0, x0, #0x0
  401088:	blr	x2
  40108c:	b	401094 <register_tm_clones+0x8c>
  401090:	nop
  401094:	ldp	x29, x30, [sp], #48
  401098:	ret

000000000040109c <__do_global_dtors_aux>:
  40109c:	stp	x29, x30, [sp, #-16]!
  4010a0:	mov	x29, sp
  4010a4:	adrp	x0, 413000 <saved_argv@@SD_SHARED>
  4010a8:	add	x0, x0, #0x14
  4010ac:	ldrb	w0, [x0]
  4010b0:	and	x0, x0, #0xff
  4010b4:	cmp	x0, #0x0
  4010b8:	b.ne	4010d4 <__do_global_dtors_aux+0x38>  // b.any
  4010bc:	bl	400f94 <deregister_tm_clones>
  4010c0:	adrp	x0, 413000 <saved_argv@@SD_SHARED>
  4010c4:	add	x0, x0, #0x14
  4010c8:	mov	w1, #0x1                   	// #1
  4010cc:	strb	w1, [x0]
  4010d0:	b	4010d8 <__do_global_dtors_aux+0x3c>
  4010d4:	nop
  4010d8:	ldp	x29, x30, [sp], #16
  4010dc:	ret

00000000004010e0 <frame_dummy>:
  4010e0:	stp	x29, x30, [sp, #-16]!
  4010e4:	mov	x29, sp
  4010e8:	bl	401008 <register_tm_clones>
  4010ec:	nop
  4010f0:	ldp	x29, x30, [sp], #16
  4010f4:	ret

00000000004010f8 <ALIGN_TO>:
  4010f8:	sub	sp, sp, #0x10
  4010fc:	str	x0, [sp, #8]
  401100:	str	x1, [sp]
  401104:	ldr	x1, [sp, #8]
  401108:	ldr	x0, [sp]
  40110c:	add	x0, x1, x0
  401110:	sub	x1, x0, #0x1
  401114:	ldr	x0, [sp]
  401118:	neg	x0, x0
  40111c:	and	x0, x1, x0
  401120:	add	sp, sp, #0x10
  401124:	ret

0000000000401128 <save_argc_argv>:
  401128:	sub	sp, sp, #0x10
  40112c:	str	w0, [sp, #12]
  401130:	str	x1, [sp]
  401134:	adrp	x0, 413000 <saved_argv@@SD_SHARED>
  401138:	add	x0, x0, #0x10
  40113c:	ldr	w1, [sp, #12]
  401140:	str	w1, [x0]
  401144:	adrp	x0, 413000 <saved_argv@@SD_SHARED>
  401148:	add	x0, x0, #0x0
  40114c:	ldr	x1, [sp]
  401150:	str	x1, [x0]
  401154:	nop
  401158:	add	sp, sp, #0x10
  40115c:	ret

0000000000401160 <static_destruct>:
  401160:	stp	x29, x30, [sp, #-32]!
  401164:	mov	x29, sp
  401168:	adrp	x0, 401000 <deregister_tm_clones+0x6c>
  40116c:	add	x0, x0, #0xcc8
  401170:	ldr	x0, [x0]
  401174:	cmp	x0, #0x0
  401178:	b.eq	4011dc <static_destruct+0x7c>  // b.none
  40117c:	adrp	x0, 401000 <deregister_tm_clones+0x6c>
  401180:	add	x0, x0, #0xcc8
  401184:	ldr	x0, [x0]
  401188:	mov	x1, #0x8                   	// #8
  40118c:	bl	4010f8 <ALIGN_TO>
  401190:	str	x0, [sp, #24]
  401194:	b	4011c0 <static_destruct+0x60>
  401198:	ldr	x0, [sp, #24]
  40119c:	ldr	x1, [x0, #8]
  4011a0:	ldr	x0, [sp, #24]
  4011a4:	ldr	x0, [x0]
  4011a8:	blr	x1
  4011ac:	ldr	x0, [sp, #24]
  4011b0:	add	x0, x0, #0x10
  4011b4:	mov	x1, #0x8                   	// #8
  4011b8:	bl	4010f8 <ALIGN_TO>
  4011bc:	str	x0, [sp, #24]
  4011c0:	ldr	x1, [sp, #24]
  4011c4:	adrp	x0, 401000 <deregister_tm_clones+0x6c>
  4011c8:	add	x0, x0, #0xcd0
  4011cc:	ldr	x0, [x0]
  4011d0:	cmp	x1, x0
  4011d4:	b.cc	401198 <static_destruct+0x38>  // b.lo, b.ul, b.last
  4011d8:	b	4011e0 <static_destruct+0x80>
  4011dc:	nop
  4011e0:	ldp	x29, x30, [sp], #32
  4011e4:	ret

00000000004011e8 <closep>:
  4011e8:	stp	x29, x30, [sp, #-32]!
  4011ec:	mov	x29, sp
  4011f0:	str	x0, [sp, #24]
  4011f4:	ldr	x0, [sp, #24]
  4011f8:	ldr	w0, [x0]
  4011fc:	bl	400e10 <safe_close@plt>
  401200:	nop
  401204:	ldp	x29, x30, [sp], #32
  401208:	ret

000000000040120c <read_line>:
  40120c:	stp	x29, x30, [sp, #-48]!
  401210:	mov	x29, sp
  401214:	str	x0, [sp, #40]
  401218:	str	x1, [sp, #32]
  40121c:	str	x2, [sp, #24]
  401220:	ldr	x3, [sp, #24]
  401224:	mov	w2, #0x0                   	// #0
  401228:	ldr	x1, [sp, #32]
  40122c:	ldr	x0, [sp, #40]
  401230:	bl	400d90 <read_line_full@plt>
  401234:	ldp	x29, x30, [sp], #48
  401238:	ret

000000000040123c <explicit_bzero_safe>:
  40123c:	stp	x29, x30, [sp, #-32]!
  401240:	mov	x29, sp
  401244:	str	x0, [sp, #24]
  401248:	str	x1, [sp, #16]
  40124c:	ldr	x0, [sp, #16]
  401250:	cmp	x0, #0x0
  401254:	b.eq	401264 <explicit_bzero_safe+0x28>  // b.none
  401258:	ldr	x1, [sp, #16]
  40125c:	ldr	x0, [sp, #24]
  401260:	bl	400e70 <explicit_bzero@plt>
  401264:	ldr	x0, [sp, #24]
  401268:	ldp	x29, x30, [sp], #32
  40126c:	ret

0000000000401270 <erase_and_freep>:
  401270:	stp	x29, x30, [sp, #-48]!
  401274:	mov	x29, sp
  401278:	str	x0, [sp, #24]
  40127c:	ldr	x0, [sp, #24]
  401280:	ldr	x0, [x0]
  401284:	str	x0, [sp, #32]
  401288:	ldr	x0, [sp, #32]
  40128c:	cmp	x0, #0x0
  401290:	b.eq	4012b4 <erase_and_freep+0x44>  // b.none
  401294:	ldr	x0, [sp, #32]
  401298:	bl	400e30 <malloc_usable_size@plt>
  40129c:	str	x0, [sp, #40]
  4012a0:	ldr	x1, [sp, #40]
  4012a4:	ldr	x0, [sp, #32]
  4012a8:	bl	40123c <explicit_bzero_safe>
  4012ac:	ldr	x0, [sp, #32]
  4012b0:	bl	400ee0 <free@plt>
  4012b4:	nop
  4012b8:	ldp	x29, x30, [sp], #48
  4012bc:	ret

00000000004012c0 <send_on_socket>:
  4012c0:	stp	x29, x30, [sp, #-224]!
  4012c4:	mov	x29, sp
  4012c8:	str	w0, [sp, #44]
  4012cc:	str	x1, [sp, #32]
  4012d0:	str	x2, [sp, #24]
  4012d4:	str	x3, [sp, #16]
  4012d8:	adrp	x0, 412000 <__FRAME_END__+0x10060>
  4012dc:	add	x0, x0, #0xcd0
  4012e0:	ldr	x1, [x0]
  4012e4:	str	x1, [sp, #216]
  4012e8:	mov	x1, #0x0                   	// #0
  4012ec:	stp	xzr, xzr, [sp, #88]
  4012f0:	stp	xzr, xzr, [sp, #104]
  4012f4:	stp	xzr, xzr, [sp, #120]
  4012f8:	stp	xzr, xzr, [sp, #136]
  4012fc:	stp	xzr, xzr, [sp, #152]
  401300:	stp	xzr, xzr, [sp, #168]
  401304:	stp	xzr, xzr, [sp, #184]
  401308:	stp	xzr, xzr, [sp, #200]
  40130c:	ldr	w0, [sp, #44]
  401310:	lsr	w0, w0, #31
  401314:	and	w0, w0, #0xff
  401318:	and	x0, x0, #0xff
  40131c:	cmp	x0, #0x0
  401320:	b.eq	40134c <send_on_socket+0x8c>  // b.none
  401324:	adrp	x0, 401000 <deregister_tm_clones+0x6c>
  401328:	add	x1, x0, #0xb73
  40132c:	adrp	x0, 401000 <deregister_tm_clones+0x6c>
  401330:	add	x4, x0, #0xcd8
  401334:	mov	w3, #0x16                  	// #22
  401338:	mov	x2, x1
  40133c:	adrp	x0, 401000 <deregister_tm_clones+0x6c>
  401340:	add	x1, x0, #0xb98
  401344:	mov	w0, #0x0                   	// #0
  401348:	bl	400e20 <log_assert_failed_realm@plt>
  40134c:	ldr	x0, [sp, #32]
  401350:	cmp	x0, #0x0
  401354:	cset	w0, eq  // eq = none
  401358:	and	w0, w0, #0xff
  40135c:	and	x0, x0, #0xff
  401360:	cmp	x0, #0x0
  401364:	b.eq	401390 <send_on_socket+0xd0>  // b.none
  401368:	adrp	x0, 401000 <deregister_tm_clones+0x6c>
  40136c:	add	x1, x0, #0xb73
  401370:	adrp	x0, 401000 <deregister_tm_clones+0x6c>
  401374:	add	x4, x0, #0xcd8
  401378:	mov	w3, #0x17                  	// #23
  40137c:	mov	x2, x1
  401380:	adrp	x0, 401000 <deregister_tm_clones+0x6c>
  401384:	add	x1, x0, #0xba0
  401388:	mov	w0, #0x0                   	// #0
  40138c:	bl	400e20 <log_assert_failed_realm@plt>
  401390:	ldr	x0, [sp, #24]
  401394:	cmp	x0, #0x0
  401398:	cset	w0, eq  // eq = none
  40139c:	and	w0, w0, #0xff
  4013a0:	and	x0, x0, #0xff
  4013a4:	cmp	x0, #0x0
  4013a8:	b.eq	4013d4 <send_on_socket+0x114>  // b.none
  4013ac:	adrp	x0, 401000 <deregister_tm_clones+0x6c>
  4013b0:	add	x1, x0, #0xb73
  4013b4:	adrp	x0, 401000 <deregister_tm_clones+0x6c>
  4013b8:	add	x4, x0, #0xcd8
  4013bc:	mov	w3, #0x18                  	// #24
  4013c0:	mov	x2, x1
  4013c4:	adrp	x0, 401000 <deregister_tm_clones+0x6c>
  4013c8:	add	x1, x0, #0xbb0
  4013cc:	mov	w0, #0x0                   	// #0
  4013d0:	bl	400e20 <log_assert_failed_realm@plt>
  4013d4:	add	x0, sp, #0x58
  4013d8:	ldr	x1, [sp, #32]
  4013dc:	bl	400ed0 <sockaddr_un_set_path@plt>
  4013e0:	str	w0, [sp, #60]
  4013e4:	ldr	w0, [sp, #60]
  4013e8:	cmp	w0, #0x0
  4013ec:	b.ge	40147c <send_on_socket+0x1bc>  // b.tcont
  4013f0:	mov	w0, #0x3                   	// #3
  4013f4:	str	w0, [sp, #76]
  4013f8:	ldr	w0, [sp, #60]
  4013fc:	str	w0, [sp, #80]
  401400:	str	wzr, [sp, #84]
  401404:	ldr	w0, [sp, #84]
  401408:	bl	400f20 <log_get_max_level_realm@plt>
  40140c:	mov	w1, w0
  401410:	ldr	w0, [sp, #76]
  401414:	and	w0, w0, #0x7
  401418:	cmp	w1, w0
  40141c:	b.lt	401464 <send_on_socket+0x1a4>  // b.tstop
  401420:	ldr	w0, [sp, #84]
  401424:	lsl	w1, w0, #10
  401428:	ldr	w0, [sp, #76]
  40142c:	orr	w7, w1, w0
  401430:	adrp	x0, 401000 <deregister_tm_clones+0x6c>
  401434:	add	x1, x0, #0xb73
  401438:	ldr	x6, [sp, #32]
  40143c:	adrp	x0, 401000 <deregister_tm_clones+0x6c>
  401440:	add	x5, x0, #0xbb8
  401444:	adrp	x0, 401000 <deregister_tm_clones+0x6c>
  401448:	add	x4, x0, #0xce8
  40144c:	mov	w3, #0x1c                  	// #28
  401450:	mov	x2, x1
  401454:	ldr	w1, [sp, #80]
  401458:	mov	w0, w7
  40145c:	bl	400ea0 <log_internal_realm@plt>
  401460:	b	40153c <send_on_socket+0x27c>
  401464:	ldr	w0, [sp, #80]
  401468:	cmp	w0, #0x0
  40146c:	cneg	w0, w0, lt  // lt = tstop
  401470:	and	w0, w0, #0xff
  401474:	neg	w0, w0
  401478:	b	40153c <send_on_socket+0x27c>
  40147c:	add	x0, sp, #0x58
  401480:	mov	x1, x0
  401484:	ldr	w0, [sp, #60]
  401488:	mov	w5, w0
  40148c:	mov	x4, x1
  401490:	mov	w3, #0x4000                	// #16384
  401494:	ldr	x2, [sp, #16]
  401498:	ldr	x1, [sp, #24]
  40149c:	ldr	w0, [sp, #44]
  4014a0:	bl	400da0 <sendto@plt>
  4014a4:	cmp	x0, #0x0
  4014a8:	b.ge	401538 <send_on_socket+0x278>  // b.tcont
  4014ac:	mov	w0, #0x3                   	// #3
  4014b0:	str	w0, [sp, #64]
  4014b4:	bl	400e50 <__errno_location@plt>
  4014b8:	ldr	w0, [x0]
  4014bc:	str	w0, [sp, #68]
  4014c0:	str	wzr, [sp, #72]
  4014c4:	ldr	w0, [sp, #72]
  4014c8:	bl	400f20 <log_get_max_level_realm@plt>
  4014cc:	mov	w1, w0
  4014d0:	ldr	w0, [sp, #64]
  4014d4:	and	w0, w0, #0x7
  4014d8:	cmp	w1, w0
  4014dc:	b.lt	401520 <send_on_socket+0x260>  // b.tstop
  4014e0:	ldr	w0, [sp, #72]
  4014e4:	lsl	w1, w0, #10
  4014e8:	ldr	w0, [sp, #64]
  4014ec:	orr	w6, w1, w0
  4014f0:	adrp	x0, 401000 <deregister_tm_clones+0x6c>
  4014f4:	add	x1, x0, #0xb73
  4014f8:	adrp	x0, 401000 <deregister_tm_clones+0x6c>
  4014fc:	add	x5, x0, #0xbf8
  401500:	adrp	x0, 401000 <deregister_tm_clones+0x6c>
  401504:	add	x4, x0, #0xce8
  401508:	mov	w3, #0x1f                  	// #31
  40150c:	mov	x2, x1
  401510:	ldr	w1, [sp, #68]
  401514:	mov	w0, w6
  401518:	bl	400ea0 <log_internal_realm@plt>
  40151c:	b	40153c <send_on_socket+0x27c>
  401520:	ldr	w0, [sp, #68]
  401524:	cmp	w0, #0x0
  401528:	cneg	w0, w0, lt  // lt = tstop
  40152c:	and	w0, w0, #0xff
  401530:	neg	w0, w0
  401534:	b	40153c <send_on_socket+0x27c>
  401538:	mov	w0, #0x0                   	// #0
  40153c:	mov	w1, w0
  401540:	adrp	x0, 412000 <__FRAME_END__+0x10060>
  401544:	add	x0, x0, #0xcd0
  401548:	ldr	x2, [sp, #216]
  40154c:	ldr	x0, [x0]
  401550:	eor	x0, x2, x0
  401554:	cmp	x0, #0x0
  401558:	b.eq	401560 <send_on_socket+0x2a0>  // b.none
  40155c:	bl	400e60 <__stack_chk_fail@plt>
  401560:	mov	w0, w1
  401564:	ldp	x29, x30, [sp], #224
  401568:	ret

000000000040156c <run>:
  40156c:	stp	x29, x30, [sp, #-160]!
  401570:	mov	x29, sp
  401574:	stp	x19, x20, [sp, #16]
  401578:	str	w0, [sp, #44]
  40157c:	str	x1, [sp, #32]
  401580:	adrp	x0, 412000 <__FRAME_END__+0x10060>
  401584:	add	x0, x0, #0xcd0
  401588:	ldr	x1, [x0]
  40158c:	str	x1, [sp, #152]
  401590:	mov	x1, #0x0                   	// #0
  401594:	str	xzr, [sp, #128]
  401598:	mov	w0, #0xffffffff            	// #-1
  40159c:	str	w0, [sp, #60]
  4015a0:	str	xzr, [sp, #144]
  4015a4:	bl	400df0 <log_setup_service@plt>
  4015a8:	ldr	w0, [sp, #44]
  4015ac:	cmp	w0, #0x3
  4015b0:	b.eq	401644 <run+0xd8>  // b.none
  4015b4:	mov	w0, #0x3                   	// #3
  4015b8:	str	w0, [sp, #116]
  4015bc:	mov	w0, #0x16                  	// #22
  4015c0:	movk	w0, #0x4000, lsl #16
  4015c4:	str	w0, [sp, #120]
  4015c8:	str	wzr, [sp, #124]
  4015cc:	ldr	w0, [sp, #124]
  4015d0:	bl	400f20 <log_get_max_level_realm@plt>
  4015d4:	mov	w1, w0
  4015d8:	ldr	w0, [sp, #116]
  4015dc:	and	w0, w0, #0x7
  4015e0:	cmp	w1, w0
  4015e4:	b.lt	40162c <run+0xc0>  // b.tstop
  4015e8:	ldr	w0, [sp, #124]
  4015ec:	lsl	w1, w0, #10
  4015f0:	ldr	w0, [sp, #116]
  4015f4:	orr	w6, w1, w0
  4015f8:	adrp	x0, 401000 <deregister_tm_clones+0x6c>
  4015fc:	add	x1, x0, #0xb73
  401600:	adrp	x0, 401000 <deregister_tm_clones+0x6c>
  401604:	add	x5, x0, #0xc10
  401608:	adrp	x0, 401000 <deregister_tm_clones+0x6c>
  40160c:	add	x4, x0, #0xcf8
  401610:	mov	w3, #0x2d                  	// #45
  401614:	mov	x2, x1
  401618:	ldr	w1, [sp, #120]
  40161c:	mov	w0, w6
  401620:	bl	400ea0 <log_internal_realm@plt>
  401624:	mov	w19, w0
  401628:	b	401a30 <run+0x4c4>
  40162c:	ldr	w0, [sp, #120]
  401630:	cmp	w0, #0x0
  401634:	cneg	w0, w0, lt  // lt = tstop
  401638:	and	w0, w0, #0xff
  40163c:	neg	w19, w0
  401640:	b	401a30 <run+0x4c4>
  401644:	ldr	x0, [sp, #32]
  401648:	add	x0, x0, #0x8
  40164c:	ldr	x2, [x0]
  401650:	adrp	x0, 401000 <deregister_tm_clones+0x6c>
  401654:	add	x1, x0, #0xc30
  401658:	mov	x0, x2
  40165c:	bl	400eb0 <strcmp@plt>
  401660:	cmp	w0, #0x0
  401664:	b.ne	401840 <run+0x2d4>  // b.any
  401668:	str	xzr, [sp, #136]
  40166c:	adrp	x0, 413000 <saved_argv@@SD_SHARED>
  401670:	add	x0, x0, #0x8
  401674:	ldr	x0, [x0]
  401678:	add	x1, sp, #0x88
  40167c:	mov	x2, x1
  401680:	mov	x1, #0x100000              	// #1048576
  401684:	bl	40120c <read_line>
  401688:	str	w0, [sp, #76]
  40168c:	ldr	w0, [sp, #76]
  401690:	cmp	w0, #0x0
  401694:	b.ge	401728 <run+0x1bc>  // b.tcont
  401698:	mov	w0, #0x3                   	// #3
  40169c:	str	w0, [sp, #92]
  4016a0:	ldr	w0, [sp, #76]
  4016a4:	str	w0, [sp, #96]
  4016a8:	str	wzr, [sp, #100]
  4016ac:	ldr	w0, [sp, #100]
  4016b0:	bl	400f20 <log_get_max_level_realm@plt>
  4016b4:	mov	w1, w0
  4016b8:	ldr	w0, [sp, #92]
  4016bc:	and	w0, w0, #0x7
  4016c0:	cmp	w1, w0
  4016c4:	b.lt	40170c <run+0x1a0>  // b.tstop
  4016c8:	ldr	w0, [sp, #100]
  4016cc:	lsl	w1, w0, #10
  4016d0:	ldr	w0, [sp, #92]
  4016d4:	orr	w6, w1, w0
  4016d8:	adrp	x0, 401000 <deregister_tm_clones+0x6c>
  4016dc:	add	x1, x0, #0xb73
  4016e0:	adrp	x0, 401000 <deregister_tm_clones+0x6c>
  4016e4:	add	x5, x0, #0xc38
  4016e8:	adrp	x0, 401000 <deregister_tm_clones+0x6c>
  4016ec:	add	x4, x0, #0xcf8
  4016f0:	mov	w3, #0x34                  	// #52
  4016f4:	mov	x2, x1
  4016f8:	ldr	w1, [sp, #96]
  4016fc:	mov	w0, w6
  401700:	bl	400ea0 <log_internal_realm@plt>
  401704:	mov	w19, w0
  401708:	b	401720 <run+0x1b4>
  40170c:	ldr	w0, [sp, #96]
  401710:	cmp	w0, #0x0
  401714:	cneg	w0, w0, lt  // lt = tstop
  401718:	and	w0, w0, #0xff
  40171c:	neg	w19, w0
  401720:	mov	w20, #0x0                   	// #0
  401724:	b	40182c <run+0x2c0>
  401728:	ldr	w0, [sp, #76]
  40172c:	cmp	w0, #0x0
  401730:	b.ne	4017c8 <run+0x25c>  // b.any
  401734:	mov	w0, #0x3                   	// #3
  401738:	str	w0, [sp, #80]
  40173c:	mov	w0, #0x5                   	// #5
  401740:	movk	w0, #0x4000, lsl #16
  401744:	str	w0, [sp, #84]
  401748:	str	wzr, [sp, #88]
  40174c:	ldr	w0, [sp, #88]
  401750:	bl	400f20 <log_get_max_level_realm@plt>
  401754:	mov	w1, w0
  401758:	ldr	w0, [sp, #80]
  40175c:	and	w0, w0, #0x7
  401760:	cmp	w1, w0
  401764:	b.lt	4017ac <run+0x240>  // b.tstop
  401768:	ldr	w0, [sp, #88]
  40176c:	lsl	w1, w0, #10
  401770:	ldr	w0, [sp, #80]
  401774:	orr	w6, w1, w0
  401778:	adrp	x0, 401000 <deregister_tm_clones+0x6c>
  40177c:	add	x1, x0, #0xb73
  401780:	adrp	x0, 401000 <deregister_tm_clones+0x6c>
  401784:	add	x5, x0, #0xc58
  401788:	adrp	x0, 401000 <deregister_tm_clones+0x6c>
  40178c:	add	x4, x0, #0xcf8
  401790:	mov	w3, #0x36                  	// #54
  401794:	mov	x2, x1
  401798:	ldr	w1, [sp, #84]
  40179c:	mov	w0, w6
  4017a0:	bl	400ea0 <log_internal_realm@plt>
  4017a4:	mov	w19, w0
  4017a8:	b	4017c0 <run+0x254>
  4017ac:	ldr	w0, [sp, #84]
  4017b0:	cmp	w0, #0x0
  4017b4:	cneg	w0, w0, lt  // lt = tstop
  4017b8:	and	w0, w0, #0xff
  4017bc:	neg	w19, w0
  4017c0:	mov	w20, #0x0                   	// #0
  4017c4:	b	40182c <run+0x2c0>
  4017c8:	ldr	x0, [sp, #136]
  4017cc:	mov	x2, #0x0                   	// #0
  4017d0:	mov	x1, x0
  4017d4:	adrp	x0, 401000 <deregister_tm_clones+0x6c>
  4017d8:	add	x0, x0, #0xc78
  4017dc:	bl	400e00 <strjoin_real@plt>
  4017e0:	str	x0, [sp, #128]
  4017e4:	ldr	x0, [sp, #128]
  4017e8:	cmp	x0, #0x0
  4017ec:	b.ne	401818 <run+0x2ac>  // b.any
  4017f0:	adrp	x0, 401000 <deregister_tm_clones+0x6c>
  4017f4:	add	x1, x0, #0xb73
  4017f8:	adrp	x0, 401000 <deregister_tm_clones+0x6c>
  4017fc:	add	x3, x0, #0xcf8
  401800:	mov	w2, #0x3b                  	// #59
  401804:	mov	w0, #0x0                   	// #0
  401808:	bl	400f10 <log_oom_internal@plt>
  40180c:	mov	w19, w0
  401810:	mov	w20, #0x0                   	// #0
  401814:	b	40182c <run+0x2c0>
  401818:	ldr	x0, [sp, #136]
  40181c:	bl	400f00 <strlen@plt>
  401820:	add	x0, x0, #0x2
  401824:	str	x0, [sp, #144]
  401828:	mov	w20, #0x1                   	// #1
  40182c:	add	x0, sp, #0x88
  401830:	bl	401270 <erase_and_freep>
  401834:	cmp	w20, #0x1
  401838:	b.ne	401a30 <run+0x4c4>  // b.any
  40183c:	b	401950 <run+0x3e4>
  401840:	ldr	x0, [sp, #32]
  401844:	add	x0, x0, #0x8
  401848:	ldr	x2, [x0]
  40184c:	adrp	x0, 401000 <deregister_tm_clones+0x6c>
  401850:	add	x1, x0, #0xc80
  401854:	mov	x0, x2
  401858:	bl	400eb0 <strcmp@plt>
  40185c:	cmp	w0, #0x0
  401860:	b.ne	4018b0 <run+0x344>  // b.any
  401864:	adrp	x0, 401000 <deregister_tm_clones+0x6c>
  401868:	add	x0, x0, #0xc88
  40186c:	bl	400ec0 <strdup@plt>
  401870:	str	x0, [sp, #128]
  401874:	ldr	x0, [sp, #128]
  401878:	cmp	x0, #0x0
  40187c:	b.ne	4018a4 <run+0x338>  // b.any
  401880:	adrp	x0, 401000 <deregister_tm_clones+0x6c>
  401884:	add	x1, x0, #0xb73
  401888:	adrp	x0, 401000 <deregister_tm_clones+0x6c>
  40188c:	add	x3, x0, #0xcf8
  401890:	mov	w2, #0x42                  	// #66
  401894:	mov	w0, #0x0                   	// #0
  401898:	bl	400f10 <log_oom_internal@plt>
  40189c:	mov	w19, w0
  4018a0:	b	401a30 <run+0x4c4>
  4018a4:	mov	x0, #0x1                   	// #1
  4018a8:	str	x0, [sp, #144]
  4018ac:	b	401950 <run+0x3e4>
  4018b0:	mov	w0, #0x3                   	// #3
  4018b4:	str	w0, [sp, #64]
  4018b8:	mov	w0, #0x16                  	// #22
  4018bc:	movk	w0, #0x4000, lsl #16
  4018c0:	str	w0, [sp, #68]
  4018c4:	str	wzr, [sp, #72]
  4018c8:	ldr	w0, [sp, #72]
  4018cc:	bl	400f20 <log_get_max_level_realm@plt>
  4018d0:	mov	w1, w0
  4018d4:	ldr	w0, [sp, #64]
  4018d8:	and	w0, w0, #0x7
  4018dc:	cmp	w1, w0
  4018e0:	b.lt	401938 <run+0x3cc>  // b.tstop
  4018e4:	ldr	w0, [sp, #72]
  4018e8:	lsl	w1, w0, #10
  4018ec:	ldr	w0, [sp, #64]
  4018f0:	orr	w7, w1, w0
  4018f4:	adrp	x0, 401000 <deregister_tm_clones+0x6c>
  4018f8:	add	x1, x0, #0xb73
  4018fc:	ldr	x0, [sp, #32]
  401900:	add	x0, x0, #0x8
  401904:	ldr	x0, [x0]
  401908:	mov	x6, x0
  40190c:	adrp	x0, 401000 <deregister_tm_clones+0x6c>
  401910:	add	x5, x0, #0xc90
  401914:	adrp	x0, 401000 <deregister_tm_clones+0x6c>
  401918:	add	x4, x0, #0xcf8
  40191c:	mov	w3, #0x47                  	// #71
  401920:	mov	x2, x1
  401924:	ldr	w1, [sp, #68]
  401928:	mov	w0, w7
  40192c:	bl	400ea0 <log_internal_realm@plt>
  401930:	mov	w19, w0
  401934:	b	401a30 <run+0x4c4>
  401938:	ldr	w0, [sp, #68]
  40193c:	cmp	w0, #0x0
  401940:	cneg	w0, w0, lt  // lt = tstop
  401944:	and	w0, w0, #0xff
  401948:	neg	w19, w0
  40194c:	b	401a30 <run+0x4c4>
  401950:	mov	w2, #0x0                   	// #0
  401954:	mov	w1, #0x802                 	// #2050
  401958:	movk	w1, #0x8, lsl #16
  40195c:	mov	w0, #0x1                   	// #1
  401960:	bl	400de0 <socket@plt>
  401964:	str	w0, [sp, #60]
  401968:	ldr	w0, [sp, #60]
  40196c:	cmp	w0, #0x0
  401970:	b.ge	401a04 <run+0x498>  // b.tcont
  401974:	mov	w0, #0x3                   	// #3
  401978:	str	w0, [sp, #104]
  40197c:	bl	400e50 <__errno_location@plt>
  401980:	ldr	w0, [x0]
  401984:	str	w0, [sp, #108]
  401988:	str	wzr, [sp, #112]
  40198c:	ldr	w0, [sp, #112]
  401990:	bl	400f20 <log_get_max_level_realm@plt>
  401994:	mov	w1, w0
  401998:	ldr	w0, [sp, #104]
  40199c:	and	w0, w0, #0x7
  4019a0:	cmp	w1, w0
  4019a4:	b.lt	4019ec <run+0x480>  // b.tstop
  4019a8:	ldr	w0, [sp, #112]
  4019ac:	lsl	w1, w0, #10
  4019b0:	ldr	w0, [sp, #104]
  4019b4:	orr	w6, w1, w0
  4019b8:	adrp	x0, 401000 <deregister_tm_clones+0x6c>
  4019bc:	add	x1, x0, #0xb73
  4019c0:	adrp	x0, 401000 <deregister_tm_clones+0x6c>
  4019c4:	add	x5, x0, #0xcb0
  4019c8:	adrp	x0, 401000 <deregister_tm_clones+0x6c>
  4019cc:	add	x4, x0, #0xcf8
  4019d0:	mov	w3, #0x4c                  	// #76
  4019d4:	mov	x2, x1
  4019d8:	ldr	w1, [sp, #108]
  4019dc:	mov	w0, w6
  4019e0:	bl	400ea0 <log_internal_realm@plt>
  4019e4:	mov	w19, w0
  4019e8:	b	401a30 <run+0x4c4>
  4019ec:	ldr	w0, [sp, #108]
  4019f0:	cmp	w0, #0x0
  4019f4:	cneg	w0, w0, lt  // lt = tstop
  4019f8:	and	w0, w0, #0xff
  4019fc:	neg	w19, w0
  401a00:	b	401a30 <run+0x4c4>
  401a04:	ldr	w4, [sp, #60]
  401a08:	ldr	x0, [sp, #32]
  401a0c:	add	x0, x0, #0x10
  401a10:	ldr	x0, [x0]
  401a14:	ldr	x1, [sp, #128]
  401a18:	ldr	x3, [sp, #144]
  401a1c:	mov	x2, x1
  401a20:	mov	x1, x0
  401a24:	mov	w0, w4
  401a28:	bl	4012c0 <send_on_socket>
  401a2c:	mov	w19, w0
  401a30:	add	x0, sp, #0x3c
  401a34:	bl	4011e8 <closep>
  401a38:	add	x0, sp, #0x80
  401a3c:	bl	401270 <erase_and_freep>
  401a40:	mov	w1, w19
  401a44:	adrp	x0, 412000 <__FRAME_END__+0x10060>
  401a48:	add	x0, x0, #0xcd0
  401a4c:	ldr	x2, [sp, #152]
  401a50:	ldr	x0, [x0]
  401a54:	eor	x0, x2, x0
  401a58:	cmp	x0, #0x0
  401a5c:	b.eq	401a64 <run+0x4f8>  // b.none
  401a60:	bl	400e60 <__stack_chk_fail@plt>
  401a64:	mov	w0, w1
  401a68:	ldp	x19, x20, [sp, #16]
  401a6c:	ldp	x29, x30, [sp], #160
  401a70:	ret

0000000000401a74 <main>:
  401a74:	stp	x29, x30, [sp, #-48]!
  401a78:	mov	x29, sp
  401a7c:	str	w0, [sp, #28]
  401a80:	str	x1, [sp, #16]
  401a84:	ldr	x1, [sp, #16]
  401a88:	ldr	w0, [sp, #28]
  401a8c:	bl	401128 <save_argc_argv>
  401a90:	ldr	x1, [sp, #16]
  401a94:	ldr	w0, [sp, #28]
  401a98:	bl	40156c <run>
  401a9c:	str	w0, [sp, #44]
  401aa0:	bl	400e80 <ask_password_agent_close@plt>
  401aa4:	bl	400dd0 <polkit_agent_close@plt>
  401aa8:	bl	400e90 <pager_close@plt>
  401aac:	bl	400ef0 <mac_selinux_finish@plt>
  401ab0:	bl	401160 <static_destruct>
  401ab4:	ldr	w0, [sp, #44]
  401ab8:	lsr	w0, w0, #31
  401abc:	ldp	x29, x30, [sp], #48
  401ac0:	ret
  401ac4:	nop

0000000000401ac8 <__libc_csu_init>:
  401ac8:	stp	x29, x30, [sp, #-64]!
  401acc:	mov	x29, sp
  401ad0:	stp	x19, x20, [sp, #16]
  401ad4:	adrp	x20, 412000 <__FRAME_END__+0x10060>
  401ad8:	add	x20, x20, #0xcc8
  401adc:	stp	x21, x22, [sp, #32]
  401ae0:	adrp	x21, 412000 <__FRAME_END__+0x10060>
  401ae4:	add	x21, x21, #0xcc0
  401ae8:	sub	x20, x20, x21
  401aec:	mov	w22, w0
  401af0:	stp	x23, x24, [sp, #48]
  401af4:	mov	x23, x1
  401af8:	mov	x24, x2
  401afc:	bl	400d50 <_init>
  401b00:	cmp	xzr, x20, asr #3
  401b04:	b.eq	401b30 <__libc_csu_init+0x68>  // b.none
  401b08:	asr	x20, x20, #3
  401b0c:	mov	x19, #0x0                   	// #0
  401b10:	ldr	x3, [x21, x19, lsl #3]
  401b14:	mov	x2, x24
  401b18:	add	x19, x19, #0x1
  401b1c:	mov	x1, x23
  401b20:	mov	w0, w22
  401b24:	blr	x3
  401b28:	cmp	x20, x19
  401b2c:	b.ne	401b10 <__libc_csu_init+0x48>  // b.any
  401b30:	ldp	x19, x20, [sp, #16]
  401b34:	ldp	x21, x22, [sp, #32]
  401b38:	ldp	x23, x24, [sp, #48]
  401b3c:	ldp	x29, x30, [sp], #64
  401b40:	ret
  401b44:	nop

0000000000401b48 <__libc_csu_fini>:
  401b48:	ret

Disassembly of section .fini:

0000000000401b4c <_fini>:
  401b4c:	stp	x29, x30, [sp, #-16]!
  401b50:	mov	x29, sp
  401b54:	ldp	x29, x30, [sp], #16
  401b58:	ret
