
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libcap.so.2.31_gcc_-O2:     file format elf64-littleaarch64


Disassembly of section .init:

00000000000019b0 <.init>:
    19b0:	stp	x29, x30, [sp, #-16]!
    19b4:	mov	x29, sp
    19b8:	bl	1d70 <cap_to_name@plt+0x90>
    19bc:	ldp	x29, x30, [sp], #16
    19c0:	ret

Disassembly of section .plt:

00000000000019d0 <memcpy@plt-0x20>:
    19d0:	stp	x16, x30, [sp, #-16]!
    19d4:	adrp	x16, 15000 <cap_set_nsowner@@Base+0x10e88>
    19d8:	ldr	x17, [x16, #4088]
    19dc:	add	x16, x16, #0xff8
    19e0:	br	x17
    19e4:	nop
    19e8:	nop
    19ec:	nop

00000000000019f0 <memcpy@plt>:
    19f0:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    19f4:	ldr	x17, [x16]
    19f8:	add	x16, x16, #0x0
    19fc:	br	x17

0000000000001a00 <removexattr@plt>:
    1a00:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    1a04:	ldr	x17, [x16, #8]
    1a08:	add	x16, x16, #0x8
    1a0c:	br	x17

0000000000001a10 <setuid@plt>:
    1a10:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    1a14:	ldr	x17, [x16, #16]
    1a18:	add	x16, x16, #0x10
    1a1c:	br	x17

0000000000001a20 <strtoul@plt>:
    1a20:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    1a24:	ldr	x17, [x16, #24]
    1a28:	add	x16, x16, #0x18
    1a2c:	br	x17

0000000000001a30 <strlen@plt>:
    1a30:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    1a34:	ldr	x17, [x16, #32]
    1a38:	add	x16, x16, #0x20
    1a3c:	br	x17

0000000000001a40 <psx_load_syscalls@plt>:
    1a40:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    1a44:	ldr	x17, [x16, #40]
    1a48:	add	x16, x16, #0x28
    1a4c:	br	x17

0000000000001a50 <cap_get_secbits@plt>:
    1a50:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    1a54:	ldr	x17, [x16, #48]
    1a58:	add	x16, x16, #0x30
    1a5c:	br	x17

0000000000001a60 <cap_clear_flag@plt>:
    1a60:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    1a64:	ldr	x17, [x16, #56]
    1a68:	add	x16, x16, #0x38
    1a6c:	br	x17

0000000000001a70 <cap_max_bits@plt>:
    1a70:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    1a74:	ldr	x17, [x16, #64]
    1a78:	add	x16, x16, #0x40
    1a7c:	br	x17

0000000000001a80 <_libcap_strdup@plt>:
    1a80:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    1a84:	ldr	x17, [x16, #72]
    1a88:	add	x16, x16, #0x48
    1a8c:	br	x17

0000000000001a90 <cap_get_ambient@plt>:
    1a90:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    1a94:	ldr	x17, [x16, #80]
    1a98:	add	x16, x16, #0x50
    1a9c:	br	x17

0000000000001aa0 <__cxa_finalize@plt>:
    1aa0:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    1aa4:	ldr	x17, [x16, #88]
    1aa8:	add	x16, x16, #0x58
    1aac:	br	x17

0000000000001ab0 <sprintf@plt>:
    1ab0:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    1ab4:	ldr	x17, [x16, #96]
    1ab8:	add	x16, x16, #0x60
    1abc:	br	x17

0000000000001ac0 <asprintf@plt>:
    1ac0:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    1ac4:	ldr	x17, [x16, #104]
    1ac8:	add	x16, x16, #0x68
    1acc:	br	x17

0000000000001ad0 <__ctype_tolower_loc@plt>:
    1ad0:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    1ad4:	ldr	x17, [x16, #112]
    1ad8:	add	x16, x16, #0x70
    1adc:	br	x17

0000000000001ae0 <capset@plt>:
    1ae0:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    1ae4:	ldr	x17, [x16, #120]
    1ae8:	add	x16, x16, #0x78
    1aec:	br	x17

0000000000001af0 <malloc@plt>:
    1af0:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    1af4:	ldr	x17, [x16, #128]
    1af8:	add	x16, x16, #0x80
    1afc:	br	x17

0000000000001b00 <cap_set_syscall@plt>:
    1b00:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    1b04:	ldr	x17, [x16, #136]
    1b08:	add	x16, x16, #0x88
    1b0c:	br	x17

0000000000001b10 <setxattr@plt>:
    1b10:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    1b14:	ldr	x17, [x16, #144]
    1b18:	add	x16, x16, #0x90
    1b1c:	br	x17

0000000000001b20 <cap_reset_ambient@plt>:
    1b20:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    1b24:	ldr	x17, [x16, #152]
    1b28:	add	x16, x16, #0x98
    1b2c:	br	x17

0000000000001b30 <cap_get_bound@plt>:
    1b30:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    1b34:	ldr	x17, [x16, #160]
    1b38:	add	x16, x16, #0xa0
    1b3c:	br	x17

0000000000001b40 <memset@plt>:
    1b40:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    1b44:	ldr	x17, [x16, #168]
    1b48:	add	x16, x16, #0xa8
    1b4c:	br	x17

0000000000001b50 <calloc@plt>:
    1b50:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    1b54:	ldr	x17, [x16, #176]
    1b58:	add	x16, x16, #0xb0
    1b5c:	br	x17

0000000000001b60 <cap_set_proc@plt>:
    1b60:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    1b64:	ldr	x17, [x16, #184]
    1b68:	add	x16, x16, #0xb8
    1b6c:	br	x17

0000000000001b70 <__gmon_start__@plt>:
    1b70:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    1b74:	ldr	x17, [x16, #192]
    1b78:	add	x16, x16, #0xc0
    1b7c:	br	x17

0000000000001b80 <fremovexattr@plt>:
    1b80:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    1b84:	ldr	x17, [x16, #200]
    1b88:	add	x16, x16, #0xc8
    1b8c:	br	x17

0000000000001b90 <setgid@plt>:
    1b90:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    1b94:	ldr	x17, [x16, #208]
    1b98:	add	x16, x16, #0xd0
    1b9c:	br	x17

0000000000001ba0 <cap_init@plt>:
    1ba0:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    1ba4:	ldr	x17, [x16, #216]
    1ba8:	add	x16, x16, #0xd8
    1bac:	br	x17

0000000000001bb0 <getxattr@plt>:
    1bb0:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    1bb4:	ldr	x17, [x16, #224]
    1bb8:	add	x16, x16, #0xe0
    1bbc:	br	x17

0000000000001bc0 <__ctype_b_loc@plt>:
    1bc0:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    1bc4:	ldr	x17, [x16, #232]
    1bc8:	add	x16, x16, #0xe8
    1bcc:	br	x17

0000000000001bd0 <cap_get_proc@plt>:
    1bd0:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    1bd4:	ldr	x17, [x16, #240]
    1bd8:	add	x16, x16, #0xf0
    1bdc:	br	x17

0000000000001be0 <__lxstat64@plt>:
    1be0:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    1be4:	ldr	x17, [x16, #248]
    1be8:	add	x16, x16, #0xf8
    1bec:	br	x17

0000000000001bf0 <cap_drop_bound@plt>:
    1bf0:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    1bf4:	ldr	x17, [x16, #256]
    1bf8:	add	x16, x16, #0x100
    1bfc:	br	x17

0000000000001c00 <free@plt>:
    1c00:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    1c04:	ldr	x17, [x16, #264]
    1c08:	add	x16, x16, #0x108
    1c0c:	br	x17

0000000000001c10 <__fxstat64@plt>:
    1c10:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    1c14:	ldr	x17, [x16, #272]
    1c18:	add	x16, x16, #0x110
    1c1c:	br	x17

0000000000001c20 <fgetxattr@plt>:
    1c20:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    1c24:	ldr	x17, [x16, #280]
    1c28:	add	x16, x16, #0x118
    1c2c:	br	x17

0000000000001c30 <setgroups@plt>:
    1c30:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    1c34:	ldr	x17, [x16, #288]
    1c38:	add	x16, x16, #0x120
    1c3c:	br	x17

0000000000001c40 <fsetxattr@plt>:
    1c40:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    1c44:	ldr	x17, [x16, #296]
    1c48:	add	x16, x16, #0x128
    1c4c:	br	x17

0000000000001c50 <capgetp@plt>:
    1c50:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    1c54:	ldr	x17, [x16, #304]
    1c58:	add	x16, x16, #0x130
    1c5c:	br	x17

0000000000001c60 <cap_free@plt>:
    1c60:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    1c64:	ldr	x17, [x16, #312]
    1c68:	add	x16, x16, #0x138
    1c6c:	br	x17

0000000000001c70 <cap_set_flag@plt>:
    1c70:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    1c74:	ldr	x17, [x16, #320]
    1c78:	add	x16, x16, #0x140
    1c7c:	br	x17

0000000000001c80 <cap_compare@plt>:
    1c80:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    1c84:	ldr	x17, [x16, #328]
    1c88:	add	x16, x16, #0x148
    1c8c:	br	x17

0000000000001c90 <capget@plt>:
    1c90:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    1c94:	ldr	x17, [x16, #336]
    1c98:	add	x16, x16, #0x150
    1c9c:	br	x17

0000000000001ca0 <cap_set_secbits@plt>:
    1ca0:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    1ca4:	ldr	x17, [x16, #344]
    1ca8:	add	x16, x16, #0x158
    1cac:	br	x17

0000000000001cb0 <__errno_location@plt>:
    1cb0:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    1cb4:	ldr	x17, [x16, #352]
    1cb8:	add	x16, x16, #0x160
    1cbc:	br	x17

0000000000001cc0 <prctl@plt>:
    1cc0:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    1cc4:	ldr	x17, [x16, #360]
    1cc8:	add	x16, x16, #0x168
    1ccc:	br	x17

0000000000001cd0 <syscall@plt>:
    1cd0:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    1cd4:	ldr	x17, [x16, #368]
    1cd8:	add	x16, x16, #0x170
    1cdc:	br	x17

0000000000001ce0 <cap_to_name@plt>:
    1ce0:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    1ce4:	ldr	x17, [x16, #376]
    1ce8:	add	x16, x16, #0x178
    1cec:	br	x17

Disassembly of section .text:

0000000000001cf0 <cap_max_bits@@Base-0x158>:
    1cf0:	stp	x29, x30, [sp, #-48]!
    1cf4:	mov	x29, sp
    1cf8:	stp	x21, x22, [sp, #32]
    1cfc:	adrp	x22, 16000 <cap_set_nsowner@@Base+0x11e88>
    1d00:	stp	x19, x20, [sp, #16]
    1d04:	ldr	w20, [x22, #724]
    1d08:	cbz	w20, 1d1c <cap_to_name@plt+0x3c>
    1d0c:	ldp	x19, x20, [sp, #16]
    1d10:	ldp	x21, x22, [sp, #32]
    1d14:	ldp	x29, x30, [sp], #48
    1d18:	ret
    1d1c:	mov	w21, #0x40                  	// #64
    1d20:	mov	x1, #0x0                   	// #0
    1d24:	mov	x0, #0x0                   	// #0
    1d28:	bl	1b00 <cap_set_syscall@plt>
    1d2c:	b	1d3c <cap_to_name@plt+0x5c>
    1d30:	add	w20, w19, #0x1
    1d34:	cmp	w20, w21
    1d38:	b.gt	1d5c <cap_to_name@plt+0x7c>
    1d3c:	add	w19, w20, w21
    1d40:	asr	w19, w19, #1
    1d44:	mov	w0, w19
    1d48:	bl	1b30 <cap_get_bound@plt>
    1d4c:	tbz	w0, #31, 1d30 <cap_to_name@plt+0x50>
    1d50:	sub	w21, w19, #0x1
    1d54:	cmp	w20, w21
    1d58:	b.le	1d3c <cap_to_name@plt+0x5c>
    1d5c:	cmp	w20, #0x0
    1d60:	mov	w0, #0x26                  	// #38
    1d64:	csel	w20, w20, w0, ne  // ne = any
    1d68:	str	w20, [x22, #724]
    1d6c:	b	1d0c <cap_to_name@plt+0x2c>
    1d70:	adrp	x0, 15000 <cap_set_nsowner@@Base+0x10e88>
    1d74:	ldr	x0, [x0, #4056]
    1d78:	cbz	x0, 1d80 <cap_to_name@plt+0xa0>
    1d7c:	b	1b70 <__gmon_start__@plt>
    1d80:	ret
    1d84:	nop
    1d88:	adrp	x0, 16000 <cap_set_nsowner@@Base+0x11e88>
    1d8c:	add	x0, x0, #0x2d0
    1d90:	adrp	x1, 16000 <cap_set_nsowner@@Base+0x11e88>
    1d94:	add	x1, x1, #0x2d0
    1d98:	cmp	x1, x0
    1d9c:	b.eq	1db4 <cap_to_name@plt+0xd4>  // b.none
    1da0:	adrp	x1, 15000 <cap_set_nsowner@@Base+0x10e88>
    1da4:	ldr	x1, [x1, #4040]
    1da8:	cbz	x1, 1db4 <cap_to_name@plt+0xd4>
    1dac:	mov	x16, x1
    1db0:	br	x16
    1db4:	ret
    1db8:	adrp	x0, 16000 <cap_set_nsowner@@Base+0x11e88>
    1dbc:	add	x0, x0, #0x2d0
    1dc0:	adrp	x1, 16000 <cap_set_nsowner@@Base+0x11e88>
    1dc4:	add	x1, x1, #0x2d0
    1dc8:	sub	x1, x1, x0
    1dcc:	lsr	x2, x1, #63
    1dd0:	add	x1, x2, x1, asr #3
    1dd4:	cmp	xzr, x1, asr #1
    1dd8:	asr	x1, x1, #1
    1ddc:	b.eq	1df4 <cap_to_name@plt+0x114>  // b.none
    1de0:	adrp	x2, 15000 <cap_set_nsowner@@Base+0x10e88>
    1de4:	ldr	x2, [x2, #4064]
    1de8:	cbz	x2, 1df4 <cap_to_name@plt+0x114>
    1dec:	mov	x16, x2
    1df0:	br	x16
    1df4:	ret
    1df8:	stp	x29, x30, [sp, #-32]!
    1dfc:	mov	x29, sp
    1e00:	str	x19, [sp, #16]
    1e04:	adrp	x19, 16000 <cap_set_nsowner@@Base+0x11e88>
    1e08:	ldrb	w0, [x19, #720]
    1e0c:	cbnz	w0, 1e34 <cap_to_name@plt+0x154>
    1e10:	adrp	x0, 15000 <cap_set_nsowner@@Base+0x10e88>
    1e14:	ldr	x0, [x0, #4048]
    1e18:	cbz	x0, 1e28 <cap_to_name@plt+0x148>
    1e1c:	adrp	x0, 16000 <cap_set_nsowner@@Base+0x11e88>
    1e20:	ldr	x0, [x0, #384]
    1e24:	bl	1aa0 <__cxa_finalize@plt>
    1e28:	bl	1d88 <cap_to_name@plt+0xa8>
    1e2c:	mov	w0, #0x1                   	// #1
    1e30:	strb	w0, [x19, #720]
    1e34:	ldr	x19, [sp, #16]
    1e38:	ldp	x29, x30, [sp], #32
    1e3c:	ret
    1e40:	b	1db8 <cap_to_name@plt+0xd8>
    1e44:	nop

0000000000001e48 <cap_max_bits@@Base>:
    1e48:	adrp	x0, 16000 <cap_set_nsowner@@Base+0x11e88>
    1e4c:	ldr	w0, [x0, #724]
    1e50:	ret
    1e54:	nop

0000000000001e58 <_libcap_strdup@@Base>:
    1e58:	stp	x29, x30, [sp, #-32]!
    1e5c:	mov	x29, sp
    1e60:	cbz	x0, 1eb4 <_libcap_strdup@@Base+0x5c>
    1e64:	stp	x19, x20, [sp, #16]
    1e68:	mov	x19, x0
    1e6c:	bl	1a30 <strlen@plt>
    1e70:	mov	x20, x0
    1e74:	add	x0, x0, #0x5
    1e78:	bl	1af0 <malloc@plt>
    1e7c:	mov	x3, x0
    1e80:	cbz	x0, 1ed0 <_libcap_strdup@@Base+0x78>
    1e84:	mov	w0, #0x95d0                	// #38352
    1e88:	add	x2, x20, #0x1
    1e8c:	movk	w0, #0xca, lsl #16
    1e90:	str	w0, [x3], #4
    1e94:	mov	x1, x19
    1e98:	mov	x0, x3
    1e9c:	bl	19f0 <memcpy@plt>
    1ea0:	ldp	x19, x20, [sp, #16]
    1ea4:	mov	x3, x0
    1ea8:	mov	x0, x3
    1eac:	ldp	x29, x30, [sp], #32
    1eb0:	ret
    1eb4:	bl	1cb0 <__errno_location@plt>
    1eb8:	mov	w1, #0x16                  	// #22
    1ebc:	str	w1, [x0]
    1ec0:	mov	x3, #0x0                   	// #0
    1ec4:	mov	x0, x3
    1ec8:	ldp	x29, x30, [sp], #32
    1ecc:	ret
    1ed0:	bl	1cb0 <__errno_location@plt>
    1ed4:	mov	w1, #0xc                   	// #12
    1ed8:	mov	x3, #0x0                   	// #0
    1edc:	ldp	x19, x20, [sp, #16]
    1ee0:	str	w1, [x0]
    1ee4:	b	1ea8 <_libcap_strdup@@Base+0x50>

0000000000001ee8 <cap_free@@Base>:
    1ee8:	cbz	x0, 1f50 <cap_free@@Base+0x68>
    1eec:	stp	x29, x30, [sp, #-32]!
    1ef0:	mov	w2, #0x90d0                	// #37072
    1ef4:	movk	w2, #0xca, lsl #16
    1ef8:	mov	x29, sp
    1efc:	ldur	w1, [x0, #-4]
    1f00:	str	x19, [sp, #16]
    1f04:	mov	x19, x0
    1f08:	cmp	w1, w2
    1f0c:	b.eq	1f70 <cap_free@@Base+0x88>  // b.none
    1f10:	mov	w2, #0x95d0                	// #38352
    1f14:	movk	w2, #0xca, lsl #16
    1f18:	cmp	w1, w2
    1f1c:	b.ne	1f58 <cap_free@@Base+0x70>  // b.any
    1f20:	bl	1a30 <strlen@plt>
    1f24:	add	x2, x0, #0x4
    1f28:	sub	x19, x19, #0x4
    1f2c:	mov	w1, #0x0                   	// #0
    1f30:	mov	x0, x19
    1f34:	bl	1b40 <memset@plt>
    1f38:	mov	x0, x19
    1f3c:	bl	1c00 <free@plt>
    1f40:	mov	w0, #0x0                   	// #0
    1f44:	ldr	x19, [sp, #16]
    1f48:	ldp	x29, x30, [sp], #32
    1f4c:	ret
    1f50:	mov	w0, #0x0                   	// #0
    1f54:	ret
    1f58:	bl	1cb0 <__errno_location@plt>
    1f5c:	mov	x1, x0
    1f60:	mov	w2, #0x16                  	// #22
    1f64:	mov	w0, #0xffffffff            	// #-1
    1f68:	str	w2, [x1]
    1f6c:	b	1f44 <cap_free@@Base+0x5c>
    1f70:	sub	x0, x0, #0x4
    1f74:	str	xzr, [x0, #32]
    1f78:	stp	xzr, xzr, [x0]
    1f7c:	stp	xzr, xzr, [x0, #16]
    1f80:	bl	1c00 <free@plt>
    1f84:	mov	w0, #0x0                   	// #0
    1f88:	b	1f44 <cap_free@@Base+0x5c>
    1f8c:	nop

0000000000001f90 <cap_init@@Base>:
    1f90:	stp	x29, x30, [sp, #-32]!
    1f94:	mov	x1, #0x28                  	// #40
    1f98:	mov	x0, #0x1                   	// #1
    1f9c:	mov	x29, sp
    1fa0:	stp	x19, x20, [sp, #16]
    1fa4:	bl	1b50 <calloc@plt>
    1fa8:	cbz	x0, 2024 <cap_init@@Base+0x94>
    1fac:	mov	x20, x0
    1fb0:	mov	x19, x0
    1fb4:	mov	x0, #0x90d0                	// #37072
    1fb8:	mov	x1, #0x0                   	// #0
    1fbc:	movk	x0, #0xca, lsl #16
    1fc0:	movk	x0, #0x522, lsl #32
    1fc4:	movk	x0, #0x2008, lsl #48
    1fc8:	str	x0, [x20], #4
    1fcc:	mov	x0, x20
    1fd0:	bl	1c90 <capget@plt>
    1fd4:	ldr	w0, [x19, #4]
    1fd8:	mov	w1, #0x1026                	// #4134
    1fdc:	movk	w1, #0x2007, lsl #16
    1fe0:	cmp	w0, w1
    1fe4:	b.eq	2014 <cap_init@@Base+0x84>  // b.none
    1fe8:	mov	w1, #0x522                 	// #1314
    1fec:	movk	w1, #0x2008, lsl #16
    1ff0:	cmp	w0, w1
    1ff4:	b.eq	2014 <cap_init@@Base+0x84>  // b.none
    1ff8:	mov	w1, #0x330                 	// #816
    1ffc:	movk	w1, #0x1998, lsl #16
    2000:	cmp	w0, w1
    2004:	b.eq	2014 <cap_init@@Base+0x84>  // b.none
    2008:	mov	x0, x20
    200c:	mov	x20, #0x0                   	// #0
    2010:	bl	1c60 <cap_free@plt>
    2014:	mov	x0, x20
    2018:	ldp	x19, x20, [sp, #16]
    201c:	ldp	x29, x30, [sp], #32
    2020:	ret
    2024:	bl	1cb0 <__errno_location@plt>
    2028:	mov	x20, #0x0                   	// #0
    202c:	mov	w1, #0xc                   	// #12
    2030:	str	w1, [x0]
    2034:	b	2014 <cap_init@@Base+0x84>

0000000000002038 <cap_dup@@Base>:
    2038:	stp	x29, x30, [sp, #-32]!
    203c:	mov	x29, sp
    2040:	cbz	x0, 2090 <cap_dup@@Base+0x58>
    2044:	str	x19, [sp, #16]
    2048:	mov	x19, x0
    204c:	mov	w0, #0x90d0                	// #37072
    2050:	movk	w0, #0xca, lsl #16
    2054:	ldur	w1, [x19, #-4]
    2058:	cmp	w1, w0
    205c:	b.ne	208c <cap_dup@@Base+0x54>  // b.any
    2060:	bl	1ba0 <cap_init@plt>
    2064:	cbz	x0, 20ac <cap_dup@@Base+0x74>
    2068:	ldp	x2, x3, [x19]
    206c:	stp	x2, x3, [x0]
    2070:	ldp	x2, x3, [x19, #16]
    2074:	stp	x2, x3, [x0, #16]
    2078:	ldr	w1, [x19, #32]
    207c:	str	w1, [x0, #32]
    2080:	ldr	x19, [sp, #16]
    2084:	ldp	x29, x30, [sp], #32
    2088:	ret
    208c:	ldr	x19, [sp, #16]
    2090:	bl	1cb0 <__errno_location@plt>
    2094:	mov	x1, x0
    2098:	mov	w2, #0x16                  	// #22
    209c:	mov	x0, #0x0                   	// #0
    20a0:	str	w2, [x1]
    20a4:	ldp	x29, x30, [sp], #32
    20a8:	ret
    20ac:	ldr	x19, [sp, #16]
    20b0:	b	2084 <cap_dup@@Base+0x4c>
    20b4:	nop
    20b8:	b	1cd0 <syscall@plt>
    20bc:	nop
    20c0:	b	1cd0 <syscall@plt>
    20c4:	nop

00000000000020c8 <psx_load_syscalls@@Base>:
    20c8:	adrp	x0, 16000 <cap_set_nsowner@@Base+0x11e88>
    20cc:	str	wzr, [x0, #392]
    20d0:	ret
    20d4:	nop

00000000000020d8 <cap_set_syscall@@Base>:
    20d8:	cbz	x0, 20f0 <cap_set_syscall@@Base+0x18>
    20dc:	adrp	x2, 16000 <cap_set_nsowner@@Base+0x11e88>
    20e0:	add	x3, x2, #0x190
    20e4:	str	x1, [x2, #400]
    20e8:	str	x0, [x3, #8]
    20ec:	ret
    20f0:	adrp	x1, 16000 <cap_set_nsowner@@Base+0x11e88>
    20f4:	add	x1, x1, #0x190
    20f8:	add	x0, x1, #0x8
    20fc:	b	1a40 <psx_load_syscalls@plt>

0000000000002100 <cap_get_proc@@Base>:
    2100:	stp	x29, x30, [sp, #-32]!
    2104:	mov	x29, sp
    2108:	str	x19, [sp, #16]
    210c:	bl	1ba0 <cap_init@plt>
    2110:	mov	x19, x0
    2114:	cbz	x0, 2124 <cap_get_proc@@Base+0x24>
    2118:	add	x1, x0, #0x8
    211c:	bl	1c90 <capget@plt>
    2120:	cbnz	w0, 2134 <cap_get_proc@@Base+0x34>
    2124:	mov	x0, x19
    2128:	ldr	x19, [sp, #16]
    212c:	ldp	x29, x30, [sp], #32
    2130:	ret
    2134:	mov	x0, x19
    2138:	mov	x19, #0x0                   	// #0
    213c:	bl	1c60 <cap_free@plt>
    2140:	b	2124 <cap_get_proc@@Base+0x24>
    2144:	nop

0000000000002148 <cap_set_proc@@Base>:
    2148:	stp	x29, x30, [sp, #-16]!
    214c:	mov	x29, sp
    2150:	cbz	x0, 218c <cap_set_proc@@Base+0x44>
    2154:	mov	x1, x0
    2158:	mov	w0, #0x90d0                	// #37072
    215c:	movk	w0, #0xca, lsl #16
    2160:	ldur	w2, [x1, #-4]
    2164:	cmp	w2, w0
    2168:	b.ne	218c <cap_set_proc@@Base+0x44>  // b.any
    216c:	adrp	x0, 16000 <cap_set_nsowner@@Base+0x11e88>
    2170:	add	x2, x1, #0x8
    2174:	mov	x3, #0x0                   	// #0
    2178:	ldr	x4, [x0, #408]
    217c:	mov	x0, #0x5b                  	// #91
    2180:	blr	x4
    2184:	ldp	x29, x30, [sp], #16
    2188:	ret
    218c:	bl	1cb0 <__errno_location@plt>
    2190:	mov	x1, x0
    2194:	mov	w2, #0x16                  	// #22
    2198:	mov	w0, #0xffffffff            	// #-1
    219c:	str	w2, [x1]
    21a0:	b	2184 <cap_set_proc@@Base+0x3c>
    21a4:	nop

00000000000021a8 <capgetp@@Base>:
    21a8:	stp	x29, x30, [sp, #-32]!
    21ac:	mov	x29, sp
    21b0:	cbz	x1, 21f4 <capgetp@@Base+0x4c>
    21b4:	str	x19, [sp, #16]
    21b8:	mov	x19, x1
    21bc:	mov	w1, #0x90d0                	// #37072
    21c0:	movk	w1, #0xca, lsl #16
    21c4:	ldur	w2, [x19, #-4]
    21c8:	cmp	w2, w1
    21cc:	b.ne	21f0 <capgetp@@Base+0x48>  // b.any
    21d0:	str	w0, [x19, #4]
    21d4:	add	x1, x19, #0x8
    21d8:	mov	x0, x19
    21dc:	bl	1c90 <capget@plt>
    21e0:	str	wzr, [x19, #4]
    21e4:	ldr	x19, [sp, #16]
    21e8:	ldp	x29, x30, [sp], #32
    21ec:	ret
    21f0:	ldr	x19, [sp, #16]
    21f4:	bl	1cb0 <__errno_location@plt>
    21f8:	mov	x1, x0
    21fc:	mov	w2, #0x16                  	// #22
    2200:	mov	w0, #0xffffffff            	// #-1
    2204:	str	w2, [x1]
    2208:	b	21e8 <capgetp@@Base+0x40>
    220c:	nop

0000000000002210 <cap_get_pid@@Base>:
    2210:	stp	x29, x30, [sp, #-48]!
    2214:	mov	x29, sp
    2218:	stp	x19, x20, [sp, #16]
    221c:	mov	w20, w0
    2220:	bl	1ba0 <cap_init@plt>
    2224:	mov	x19, x0
    2228:	cbz	x0, 223c <cap_get_pid@@Base+0x2c>
    222c:	mov	w0, w20
    2230:	mov	x1, x19
    2234:	bl	1c50 <capgetp@plt>
    2238:	cbnz	w0, 224c <cap_get_pid@@Base+0x3c>
    223c:	mov	x0, x19
    2240:	ldp	x19, x20, [sp, #16]
    2244:	ldp	x29, x30, [sp], #48
    2248:	ret
    224c:	str	x21, [sp, #32]
    2250:	bl	1cb0 <__errno_location@plt>
    2254:	mov	x20, x0
    2258:	mov	x0, x19
    225c:	mov	x19, #0x0                   	// #0
    2260:	ldr	w21, [x20]
    2264:	bl	1c60 <cap_free@plt>
    2268:	str	w21, [x20]
    226c:	ldr	x21, [sp, #32]
    2270:	b	223c <cap_get_pid@@Base+0x2c>
    2274:	nop

0000000000002278 <capsetp@@Base>:
    2278:	stp	x29, x30, [sp, #-32]!
    227c:	mov	x29, sp
    2280:	cbz	x1, 22cc <capsetp@@Base+0x54>
    2284:	str	x19, [sp, #16]
    2288:	mov	x19, x1
    228c:	mov	w1, #0x90d0                	// #37072
    2290:	movk	w1, #0xca, lsl #16
    2294:	ldur	w2, [x19, #-4]
    2298:	cmp	w2, w1
    229c:	b.ne	22c8 <capsetp@@Base+0x50>  // b.any
    22a0:	str	w0, [x19, #4]
    22a4:	add	x1, x19, #0x8
    22a8:	mov	x0, x19
    22ac:	bl	1ae0 <capset@plt>
    22b0:	mov	x1, #0x522                 	// #1314
    22b4:	movk	x1, #0x2008, lsl #16
    22b8:	str	x1, [x19]
    22bc:	ldr	x19, [sp, #16]
    22c0:	ldp	x29, x30, [sp], #32
    22c4:	ret
    22c8:	ldr	x19, [sp, #16]
    22cc:	bl	1cb0 <__errno_location@plt>
    22d0:	mov	x1, x0
    22d4:	mov	w2, #0x16                  	// #22
    22d8:	mov	w0, #0xffffffff            	// #-1
    22dc:	str	w2, [x1]
    22e0:	b	22c0 <capsetp@@Base+0x48>
    22e4:	nop

00000000000022e8 <cap_get_bound@@Base>:
    22e8:	stp	x29, x30, [sp, #-32]!
    22ec:	adrp	x4, 16000 <cap_set_nsowner@@Base+0x11e88>
    22f0:	sxtw	x2, w0
    22f4:	mov	x29, sp
    22f8:	ldr	x4, [x4, #408]
    22fc:	mov	x3, #0x0                   	// #0
    2300:	mov	x1, #0x17                  	// #23
    2304:	mov	x0, #0xa7                  	// #167
    2308:	blr	x4
    230c:	tbnz	w0, #31, 2318 <cap_get_bound@@Base+0x30>
    2310:	ldp	x29, x30, [sp], #32
    2314:	ret
    2318:	str	x19, [sp, #16]
    231c:	mov	x19, x0
    2320:	bl	1cb0 <__errno_location@plt>
    2324:	mov	x1, x0
    2328:	neg	w19, w19
    232c:	mov	w0, #0xffffffff            	// #-1
    2330:	str	w19, [x1]
    2334:	ldr	x19, [sp, #16]
    2338:	b	2310 <cap_get_bound@@Base+0x28>
    233c:	nop

0000000000002340 <cap_drop_bound@@Base>:
    2340:	stp	x29, x30, [sp, #-32]!
    2344:	adrp	x4, 16000 <cap_set_nsowner@@Base+0x11e88>
    2348:	sxtw	x2, w0
    234c:	mov	x29, sp
    2350:	ldr	x4, [x4, #408]
    2354:	mov	x3, #0x0                   	// #0
    2358:	mov	x1, #0x18                  	// #24
    235c:	mov	x0, #0xa7                  	// #167
    2360:	blr	x4
    2364:	tbnz	w0, #31, 2370 <cap_drop_bound@@Base+0x30>
    2368:	ldp	x29, x30, [sp], #32
    236c:	ret
    2370:	str	x19, [sp, #16]
    2374:	mov	x19, x0
    2378:	bl	1cb0 <__errno_location@plt>
    237c:	mov	x1, x0
    2380:	neg	w19, w19
    2384:	mov	w0, #0xffffffff            	// #-1
    2388:	str	w19, [x1]
    238c:	ldr	x19, [sp, #16]
    2390:	b	2368 <cap_drop_bound@@Base+0x28>
    2394:	nop

0000000000002398 <cap_get_ambient@@Base>:
    2398:	stp	x29, x30, [sp, #-32]!
    239c:	sxtw	x2, w0
    23a0:	mov	x4, #0x0                   	// #0
    23a4:	mov	x29, sp
    23a8:	mov	x3, #0x0                   	// #0
    23ac:	mov	x1, #0x1                   	// #1
    23b0:	mov	w0, #0x2f                  	// #47
    23b4:	str	x19, [sp, #16]
    23b8:	bl	1cc0 <prctl@plt>
    23bc:	mov	w19, w0
    23c0:	tbnz	w0, #31, 23d4 <cap_get_ambient@@Base+0x3c>
    23c4:	mov	w0, w19
    23c8:	ldr	x19, [sp, #16]
    23cc:	ldp	x29, x30, [sp], #32
    23d0:	ret
    23d4:	bl	1cb0 <__errno_location@plt>
    23d8:	neg	w1, w19
    23dc:	mov	w19, #0xffffffff            	// #-1
    23e0:	str	w1, [x0]
    23e4:	b	23c4 <cap_get_ambient@@Base+0x2c>

00000000000023e8 <cap_set_ambient@@Base>:
    23e8:	stp	x29, x30, [sp, #-32]!
    23ec:	mov	x29, sp
    23f0:	cbz	w1, 2458 <cap_set_ambient@@Base+0x70>
    23f4:	cmp	w1, #0x1
    23f8:	b.eq	2418 <cap_set_ambient@@Base+0x30>  // b.none
    23fc:	bl	1cb0 <__errno_location@plt>
    2400:	mov	x1, x0
    2404:	mov	w2, #0x16                  	// #22
    2408:	mov	w0, #0xffffffff            	// #-1
    240c:	str	w2, [x1]
    2410:	ldp	x29, x30, [sp], #32
    2414:	ret
    2418:	mov	x2, #0x2                   	// #2
    241c:	str	x19, [sp, #16]
    2420:	adrp	x1, 16000 <cap_set_nsowner@@Base+0x11e88>
    2424:	sxtw	x3, w0
    2428:	mov	x6, #0x0                   	// #0
    242c:	mov	x5, #0x0                   	// #0
    2430:	ldr	x7, [x1, #400]
    2434:	mov	x4, #0x0                   	// #0
    2438:	mov	x1, #0x2f                  	// #47
    243c:	mov	x0, #0xa7                  	// #167
    2440:	blr	x7
    2444:	mov	x19, x0
    2448:	tbnz	w0, #31, 2464 <cap_set_ambient@@Base+0x7c>
    244c:	ldr	x19, [sp, #16]
    2450:	ldp	x29, x30, [sp], #32
    2454:	ret
    2458:	mov	x2, #0x3                   	// #3
    245c:	str	x19, [sp, #16]
    2460:	b	2420 <cap_set_ambient@@Base+0x38>
    2464:	bl	1cb0 <__errno_location@plt>
    2468:	mov	x1, x0
    246c:	neg	w19, w19
    2470:	mov	w0, #0xffffffff            	// #-1
    2474:	str	w19, [x1]
    2478:	ldr	x19, [sp, #16]
    247c:	b	2410 <cap_set_ambient@@Base+0x28>

0000000000002480 <cap_reset_ambient@@Base>:
    2480:	stp	x29, x30, [sp, #-48]!
    2484:	mov	x29, sp
    2488:	stp	x19, x20, [sp, #16]
    248c:	mov	w19, #0x0                   	// #0
    2490:	str	x21, [sp, #32]
    2494:	bl	1cb0 <__errno_location@plt>
    2498:	ldr	w21, [x0]
    249c:	mov	x20, x0
    24a0:	mov	w0, w19
    24a4:	add	w19, w19, #0x1
    24a8:	bl	1a90 <cap_get_ambient@plt>
    24ac:	cmn	w0, #0x1
    24b0:	b.eq	24f4 <cap_reset_ambient@@Base+0x74>  // b.none
    24b4:	cbz	w0, 24a0 <cap_reset_ambient@@Base+0x20>
    24b8:	adrp	x0, 16000 <cap_set_nsowner@@Base+0x11e88>
    24bc:	mov	x6, #0x0                   	// #0
    24c0:	mov	x5, #0x0                   	// #0
    24c4:	mov	x4, #0x0                   	// #0
    24c8:	ldr	x7, [x0, #400]
    24cc:	mov	x3, #0x0                   	// #0
    24d0:	mov	x2, #0x4                   	// #4
    24d4:	mov	x1, #0x2f                  	// #47
    24d8:	mov	x0, #0xa7                  	// #167
    24dc:	blr	x7
    24e0:	tbnz	w0, #31, 250c <cap_reset_ambient@@Base+0x8c>
    24e4:	ldp	x19, x20, [sp, #16]
    24e8:	ldr	x21, [sp, #32]
    24ec:	ldp	x29, x30, [sp], #48
    24f0:	ret
    24f4:	str	w21, [x20]
    24f8:	mov	w0, #0x0                   	// #0
    24fc:	ldp	x19, x20, [sp, #16]
    2500:	ldr	x21, [sp, #32]
    2504:	ldp	x29, x30, [sp], #48
    2508:	ret
    250c:	neg	w1, w0
    2510:	mov	w0, #0xffffffff            	// #-1
    2514:	str	w1, [x20]
    2518:	b	24e4 <cap_reset_ambient@@Base+0x64>
    251c:	nop

0000000000002520 <cap_get_secbits@@Base>:
    2520:	mov	x2, #0x0                   	// #0
    2524:	mov	x1, #0x0                   	// #0
    2528:	mov	w0, #0x1b                  	// #27
    252c:	b	1cc0 <prctl@plt>

0000000000002530 <cap_set_secbits@@Base>:
    2530:	stp	x29, x30, [sp, #-16]!
    2534:	adrp	x1, 16000 <cap_set_nsowner@@Base+0x11e88>
    2538:	mov	w2, w0
    253c:	mov	x29, sp
    2540:	ldr	x4, [x1, #408]
    2544:	mov	x3, #0x0                   	// #0
    2548:	mov	x1, #0x1c                  	// #28
    254c:	mov	x0, #0xa7                  	// #167
    2550:	blr	x4
    2554:	ldp	x29, x30, [sp], #16
    2558:	ret
    255c:	nop

0000000000002560 <cap_set_mode@@Base>:
    2560:	stp	x29, x30, [sp, #-64]!
    2564:	mov	w1, #0x8                   	// #8
    2568:	mov	x29, sp
    256c:	stp	x19, x20, [sp, #16]
    2570:	str	x21, [sp, #32]
    2574:	mov	w21, w0
    2578:	str	w1, [sp, #56]
    257c:	bl	1bd0 <cap_get_proc@plt>
    2580:	mov	w4, #0x1                   	// #1
    2584:	add	x3, sp, #0x38
    2588:	mov	w2, w4
    258c:	mov	w1, #0x0                   	// #0
    2590:	mov	x19, x0
    2594:	bl	1c70 <cap_set_flag@plt>
    2598:	mov	w20, w0
    259c:	mov	x0, x19
    25a0:	bl	1b60 <cap_set_proc@plt>
    25a4:	orr	w20, w0, w20
    25a8:	cbnz	w20, 25d4 <cap_set_mode@@Base+0x74>
    25ac:	cmp	w21, #0x2
    25b0:	b.ls	2608 <cap_set_mode@@Base+0xa8>  // b.plast
    25b4:	cmp	w21, #0x3
    25b8:	b.ne	260c <cap_set_mode@@Base+0xac>  // b.any
    25bc:	mov	w0, #0x0                   	// #0
    25c0:	bl	1a90 <cap_get_ambient@plt>
    25c4:	tbz	w0, #31, 2638 <cap_set_mode@@Base+0xd8>
    25c8:	mov	w0, #0x2f                  	// #47
    25cc:	bl	1ca0 <cap_set_secbits@plt>
    25d0:	mov	w20, w0
    25d4:	mov	w1, #0x0                   	// #0
    25d8:	mov	x0, x19
    25dc:	bl	1a60 <cap_clear_flag@plt>
    25e0:	mov	x0, x19
    25e4:	bl	1b60 <cap_set_proc@plt>
    25e8:	orr	w20, w0, w20
    25ec:	mov	x0, x19
    25f0:	bl	1c60 <cap_free@plt>
    25f4:	mov	w0, w20
    25f8:	ldp	x19, x20, [sp, #16]
    25fc:	ldr	x21, [sp, #32]
    2600:	ldp	x29, x30, [sp], #64
    2604:	ret
    2608:	cbnz	w21, 2620 <cap_set_mode@@Base+0xc0>
    260c:	bl	1cb0 <__errno_location@plt>
    2610:	mov	w20, #0xffffffff            	// #-1
    2614:	mov	w1, #0x16                  	// #22
    2618:	str	w1, [x0]
    261c:	b	25d4 <cap_set_mode@@Base+0x74>
    2620:	mov	w1, #0x2                   	// #2
    2624:	mov	x0, x19
    2628:	bl	1a60 <cap_clear_flag@plt>
    262c:	mov	w0, #0x0                   	// #0
    2630:	bl	1a90 <cap_get_ambient@plt>
    2634:	tbnz	w0, #31, 268c <cap_set_mode@@Base+0x12c>
    2638:	bl	1b20 <cap_reset_ambient@plt>
    263c:	mov	w20, w0
    2640:	mov	w0, #0xef                  	// #239
    2644:	cbnz	w20, 25d4 <cap_set_mode@@Base+0x74>
    2648:	bl	1ca0 <cap_set_secbits@plt>
    264c:	mov	w20, w0
    2650:	cmp	w21, #0x1
    2654:	b.ne	25d4 <cap_set_mode@@Base+0x74>  // b.any
    2658:	mov	w21, #0x0                   	// #0
    265c:	b	2664 <cap_set_mode@@Base+0x104>
    2660:	bl	1bf0 <cap_drop_bound@plt>
    2664:	mov	w0, w21
    2668:	bl	1b30 <cap_get_bound@plt>
    266c:	mov	w1, w0
    2670:	mov	w0, w21
    2674:	add	w21, w21, #0x1
    2678:	tbz	w1, #31, 2660 <cap_set_mode@@Base+0x100>
    267c:	mov	x0, x19
    2680:	mov	w1, #0x1                   	// #1
    2684:	bl	1a60 <cap_clear_flag@plt>
    2688:	b	25d4 <cap_set_mode@@Base+0x74>
    268c:	mov	w0, #0x2f                  	// #47
    2690:	b	2648 <cap_set_mode@@Base+0xe8>
    2694:	nop

0000000000002698 <cap_get_mode@@Base>:
    2698:	stp	x29, x30, [sp, #-48]!
    269c:	mov	x29, sp
    26a0:	stp	x19, x20, [sp, #16]
    26a4:	bl	1a50 <cap_get_secbits@plt>
    26a8:	mov	w20, w0
    26ac:	mov	w0, #0x2f                  	// #47
    26b0:	and	w0, w20, w0
    26b4:	cmp	w0, #0x2f
    26b8:	b.ne	2768 <cap_get_mode@@Base+0xd0>  // b.any
    26bc:	mov	w19, #0x0                   	// #0
    26c0:	stp	x21, x22, [sp, #32]
    26c4:	bl	1cb0 <__errno_location@plt>
    26c8:	ldr	w22, [x0]
    26cc:	mov	x21, x0
    26d0:	b	26dc <cap_get_mode@@Base+0x44>
    26d4:	add	w19, w19, #0x1
    26d8:	cbnz	w0, 2764 <cap_get_mode@@Base+0xcc>
    26dc:	mov	w0, w19
    26e0:	bl	1a90 <cap_get_ambient@plt>
    26e4:	cmn	w0, #0x1
    26e8:	b.ne	26d4 <cap_get_mode@@Base+0x3c>  // b.any
    26ec:	str	w22, [x21]
    26f0:	cmp	w20, #0xef
    26f4:	ccmp	w19, #0x0, #0x4, ne  // ne = any
    26f8:	b.ne	2764 <cap_get_mode@@Base+0xcc>  // b.any
    26fc:	bl	1bd0 <cap_get_proc@plt>
    2700:	mov	x19, x0
    2704:	bl	1ba0 <cap_init@plt>
    2708:	mov	x21, x0
    270c:	mov	x1, x19
    2710:	bl	1c80 <cap_compare@plt>
    2714:	mov	w20, w0
    2718:	mov	x0, x21
    271c:	bl	1c60 <cap_free@plt>
    2720:	mov	x0, x19
    2724:	bl	1c60 <cap_free@plt>
    2728:	and	w19, w20, #0x4
    272c:	mov	w0, #0x3                   	// #3
    2730:	tbnz	w20, #2, 2784 <cap_get_mode@@Base+0xec>
    2734:	tst	x20, #0x3
    2738:	b.eq	2744 <cap_get_mode@@Base+0xac>  // b.none
    273c:	b	2778 <cap_get_mode@@Base+0xe0>
    2740:	cbnz	w0, 2778 <cap_get_mode@@Base+0xe0>
    2744:	mov	w0, w19
    2748:	add	w19, w19, #0x1
    274c:	bl	1b30 <cap_get_bound@plt>
    2750:	cmn	w0, #0x1
    2754:	b.ne	2740 <cap_get_mode@@Base+0xa8>  // b.any
    2758:	mov	w0, #0x1                   	// #1
    275c:	ldp	x21, x22, [sp, #32]
    2760:	b	276c <cap_get_mode@@Base+0xd4>
    2764:	ldp	x21, x22, [sp, #32]
    2768:	mov	w0, #0x0                   	// #0
    276c:	ldp	x19, x20, [sp, #16]
    2770:	ldp	x29, x30, [sp], #48
    2774:	ret
    2778:	mov	w0, #0x2                   	// #2
    277c:	ldp	x21, x22, [sp, #32]
    2780:	b	276c <cap_get_mode@@Base+0xd4>
    2784:	ldp	x21, x22, [sp, #32]
    2788:	b	276c <cap_get_mode@@Base+0xd4>
    278c:	nop

0000000000002790 <cap_setuid@@Base>:
    2790:	stp	x29, x30, [sp, #-80]!
    2794:	mov	w1, #0x7                   	// #7
    2798:	mov	x29, sp
    279c:	stp	x21, x22, [sp, #32]
    27a0:	adrp	x21, 16000 <cap_set_nsowner@@Base+0x11e88>
    27a4:	stp	x23, x24, [sp, #48]
    27a8:	add	x24, x21, #0x190
    27ac:	mov	w23, w0
    27b0:	stp	x19, x20, [sp, #16]
    27b4:	str	w1, [sp, #72]
    27b8:	bl	1bd0 <cap_get_proc@plt>
    27bc:	mov	w4, #0x1                   	// #1
    27c0:	mov	x19, x0
    27c4:	mov	w2, w4
    27c8:	add	x3, sp, #0x48
    27cc:	mov	w1, #0x0                   	// #0
    27d0:	bl	1c70 <cap_set_flag@plt>
    27d4:	ldr	x4, [x24, #8]
    27d8:	mov	x3, #0x0                   	// #0
    27dc:	mov	x2, #0x1                   	// #1
    27e0:	mov	x1, #0x8                   	// #8
    27e4:	mov	x0, #0xa7                  	// #167
    27e8:	blr	x4
    27ec:	mov	x0, x19
    27f0:	bl	1b60 <cap_set_proc@plt>
    27f4:	mov	w20, w0
    27f8:	bl	1cb0 <__errno_location@plt>
    27fc:	mov	x22, x0
    2800:	cbnz	w20, 2830 <cap_setuid@@Base+0xa0>
    2804:	adrp	x0, 16000 <cap_set_nsowner@@Base+0x11e88>
    2808:	ldr	w0, [x0, #392]
    280c:	cbz	w0, 2888 <cap_setuid@@Base+0xf8>
    2810:	ldr	x4, [x24, #8]
    2814:	mov	w1, w23
    2818:	mov	x3, #0x0                   	// #0
    281c:	mov	x2, #0x0                   	// #0
    2820:	mov	x0, #0x92                  	// #146
    2824:	blr	x4
    2828:	mov	w20, w0
    282c:	tbnz	w0, #31, 289c <cap_setuid@@Base+0x10c>
    2830:	ldr	w23, [x22]
    2834:	add	x21, x21, #0x190
    2838:	mov	x3, #0x0                   	// #0
    283c:	mov	x2, #0x0                   	// #0
    2840:	mov	x1, #0x8                   	// #8
    2844:	mov	x0, #0xa7                  	// #167
    2848:	ldr	x4, [x21, #8]
    284c:	blr	x4
    2850:	mov	w1, #0x0                   	// #0
    2854:	mov	x0, x19
    2858:	bl	1a60 <cap_clear_flag@plt>
    285c:	mov	x0, x19
    2860:	bl	1b60 <cap_set_proc@plt>
    2864:	mov	x0, x19
    2868:	bl	1c60 <cap_free@plt>
    286c:	mov	w0, w20
    2870:	ldp	x19, x20, [sp, #16]
    2874:	str	w23, [x22]
    2878:	ldp	x21, x22, [sp, #32]
    287c:	ldp	x23, x24, [sp, #48]
    2880:	ldp	x29, x30, [sp], #80
    2884:	ret
    2888:	mov	w0, w23
    288c:	bl	1a10 <setuid@plt>
    2890:	ldr	w23, [x22]
    2894:	mov	w20, w0
    2898:	b	2834 <cap_setuid@@Base+0xa4>
    289c:	neg	w23, w0
    28a0:	mov	w20, #0xffffffff            	// #-1
    28a4:	str	w23, [x22]
    28a8:	b	2834 <cap_setuid@@Base+0xa4>
    28ac:	nop

00000000000028b0 <cap_setgroups@@Base>:
    28b0:	stp	x29, x30, [sp, #-96]!
    28b4:	mov	x29, sp
    28b8:	stp	x23, x24, [sp, #48]
    28bc:	mov	w24, w0
    28c0:	mov	w0, #0x6                   	// #6
    28c4:	mov	x23, x2
    28c8:	stp	x19, x20, [sp, #16]
    28cc:	stp	x21, x22, [sp, #32]
    28d0:	mov	x22, x1
    28d4:	str	x25, [sp, #64]
    28d8:	str	w0, [sp, #88]
    28dc:	bl	1bd0 <cap_get_proc@plt>
    28e0:	mov	w4, #0x1                   	// #1
    28e4:	add	x3, sp, #0x58
    28e8:	mov	w2, w4
    28ec:	mov	w1, #0x0                   	// #0
    28f0:	mov	x20, x0
    28f4:	bl	1c70 <cap_set_flag@plt>
    28f8:	mov	x0, x20
    28fc:	bl	1b60 <cap_set_proc@plt>
    2900:	mov	w19, w0
    2904:	adrp	x1, 16000 <cap_set_nsowner@@Base+0x11e88>
    2908:	ldr	w25, [x1, #392]
    290c:	bl	1cb0 <__errno_location@plt>
    2910:	mov	x21, x0
    2914:	cbz	w25, 29a4 <cap_setgroups@@Base+0xf4>
    2918:	cbnz	w19, 2960 <cap_setgroups@@Base+0xb0>
    291c:	adrp	x25, 16000 <cap_set_nsowner@@Base+0x11e88>
    2920:	add	x25, x25, #0x190
    2924:	mov	w1, w24
    2928:	mov	x3, #0x0                   	// #0
    292c:	mov	x2, #0x0                   	// #0
    2930:	mov	x0, #0x90                  	// #144
    2934:	ldr	x4, [x25, #8]
    2938:	blr	x4
    293c:	mov	w19, w0
    2940:	cbnz	w0, 2960 <cap_setgroups@@Base+0xb0>
    2944:	ldr	x4, [x25, #8]
    2948:	mov	x2, x23
    294c:	mov	x1, x22
    2950:	mov	x3, #0x0                   	// #0
    2954:	mov	x0, #0x9f                  	// #159
    2958:	blr	x4
    295c:	mov	w19, w0
    2960:	tbnz	w19, #31, 29d0 <cap_setgroups@@Base+0x120>
    2964:	ldr	w22, [x21]
    2968:	mov	w1, #0x0                   	// #0
    296c:	mov	x0, x20
    2970:	bl	1a60 <cap_clear_flag@plt>
    2974:	mov	x0, x20
    2978:	bl	1b60 <cap_set_proc@plt>
    297c:	mov	x0, x20
    2980:	bl	1c60 <cap_free@plt>
    2984:	mov	w0, w19
    2988:	ldp	x19, x20, [sp, #16]
    298c:	ldp	x23, x24, [sp, #48]
    2990:	ldr	x25, [sp, #64]
    2994:	str	w22, [x21]
    2998:	ldp	x21, x22, [sp, #32]
    299c:	ldp	x29, x30, [sp], #96
    29a0:	ret
    29a4:	cbnz	w19, 2964 <cap_setgroups@@Base+0xb4>
    29a8:	mov	w0, w24
    29ac:	bl	1b90 <setgid@plt>
    29b0:	mov	w19, w0
    29b4:	cbnz	w0, 2964 <cap_setgroups@@Base+0xb4>
    29b8:	mov	x0, x22
    29bc:	mov	x1, x23
    29c0:	bl	1c30 <setgroups@plt>
    29c4:	ldr	w22, [x21]
    29c8:	mov	w19, w0
    29cc:	b	2968 <cap_setgroups@@Base+0xb8>
    29d0:	neg	w22, w19
    29d4:	mov	w19, #0xffffffff            	// #-1
    29d8:	str	w22, [x21]
    29dc:	b	2968 <cap_setgroups@@Base+0xb8>

00000000000029e0 <cap_size@@Base>:
    29e0:	mov	x0, #0x1d                  	// #29
    29e4:	ret

00000000000029e8 <cap_copy_ext@@Base>:
    29e8:	cbz	x1, 2a84 <cap_copy_ext@@Base+0x9c>
    29ec:	ldur	w4, [x1, #-4]
    29f0:	mov	w3, #0x90d0                	// #37072
    29f4:	movk	w3, #0xca, lsl #16
    29f8:	cmp	w4, w3
    29fc:	b.ne	2a84 <cap_copy_ext@@Base+0x9c>  // b.any
    2a00:	cmp	x0, #0x0
    2a04:	ccmp	x2, #0x1c, #0x4, ne  // ne = any
    2a08:	b.le	2a84 <cap_copy_ext@@Base+0x9c>
    2a0c:	add	x2, x1, #0x8
    2a10:	mov	w4, #0xc290                	// #49808
    2a14:	add	x1, x0, #0x5
    2a18:	add	x5, x0, #0x8
    2a1c:	movk	w4, #0x5101, lsl #16
    2a20:	mov	w3, #0x8                   	// #8
    2a24:	str	w4, [x0]
    2a28:	strb	w3, [x0, #4]
    2a2c:	ldr	w0, [x2]
    2a30:	add	x1, x1, #0x1
    2a34:	sturb	w0, [x1, #-1]
    2a38:	add	x2, x2, #0x4
    2a3c:	lsr	w4, w0, #8
    2a40:	lsr	w3, w0, #16
    2a44:	lsr	w0, w0, #24
    2a48:	strb	w4, [x1, #2]
    2a4c:	strb	w3, [x1, #5]
    2a50:	strb	w0, [x1, #8]
    2a54:	ldr	w0, [x2, #8]
    2a58:	strb	w0, [x1, #11]
    2a5c:	lsr	w4, w0, #8
    2a60:	lsr	w3, w0, #16
    2a64:	lsr	w0, w0, #24
    2a68:	strb	w4, [x1, #14]
    2a6c:	strb	w3, [x1, #17]
    2a70:	strb	w0, [x1, #20]
    2a74:	cmp	x1, x5
    2a78:	b.ne	2a2c <cap_copy_ext@@Base+0x44>  // b.any
    2a7c:	mov	x0, #0x1d                  	// #29
    2a80:	ret
    2a84:	stp	x29, x30, [sp, #-16]!
    2a88:	mov	x29, sp
    2a8c:	bl	1cb0 <__errno_location@plt>
    2a90:	mov	x1, x0
    2a94:	mov	w2, #0x16                  	// #22
    2a98:	mov	x0, #0xffffffffffffffff    	// #-1
    2a9c:	str	w2, [x1]
    2aa0:	ldp	x29, x30, [sp], #16
    2aa4:	ret

0000000000002aa8 <cap_copy_int@@Base>:
    2aa8:	stp	x29, x30, [sp, #-32]!
    2aac:	mov	x29, sp
    2ab0:	cbz	x0, 2bb8 <cap_copy_int@@Base+0x110>
    2ab4:	str	x19, [sp, #16]
    2ab8:	mov	x19, x0
    2abc:	mov	w0, #0xc290                	// #49808
    2ac0:	movk	w0, #0x5101, lsl #16
    2ac4:	ldr	w1, [x19]
    2ac8:	cmp	w1, w0
    2acc:	b.ne	2bb4 <cap_copy_int@@Base+0x10c>  // b.any
    2ad0:	bl	1ba0 <cap_init@plt>
    2ad4:	cbz	x0, 2ba0 <cap_copy_int@@Base+0xf8>
    2ad8:	ldrb	w11, [x19, #4]
    2adc:	mov	x14, x0
    2ae0:	mov	w12, #0x0                   	// #0
    2ae4:	mov	x10, x14
    2ae8:	sxtw	x7, w12
    2aec:	mov	w2, #0x0                   	// #0
    2af0:	mov	w13, #0x0                   	// #0
    2af4:	add	w9, w2, #0x1
    2af8:	add	w8, w2, #0x2
    2afc:	sbfiz	x1, x2, #1, #32
    2b00:	add	w15, w2, #0x3
    2b04:	sbfiz	x4, x9, #1, #32
    2b08:	sbfiz	x3, x8, #1, #32
    2b0c:	add	x1, x1, w2, sxtw
    2b10:	add	x4, x4, w9, sxtw
    2b14:	add	x3, x3, w8, sxtw
    2b18:	add	x1, x19, x1
    2b1c:	add	x4, x19, x4
    2b20:	add	x3, x19, x3
    2b24:	add	x4, x4, x7
    2b28:	add	x3, x3, x7
    2b2c:	add	x1, x1, x7
    2b30:	cmp	w11, w2
    2b34:	mov	w5, #0x0                   	// #0
    2b38:	b.eq	2b84 <cap_copy_int@@Base+0xdc>  // b.none
    2b3c:	sbfiz	x6, x15, #1, #32
    2b40:	ldrb	w5, [x1, #5]
    2b44:	add	x1, x6, w15, sxtw
    2b48:	cmp	w11, w9
    2b4c:	add	x1, x19, x1
    2b50:	b.eq	2bd4 <cap_copy_int@@Base+0x12c>  // b.none
    2b54:	ldrb	w4, [x4, #5]
    2b58:	add	x1, x1, x7
    2b5c:	cmp	w11, w8
    2b60:	orr	w5, w5, w4, lsl #8
    2b64:	b.eq	2bd4 <cap_copy_int@@Base+0x12c>  // b.none
    2b68:	ldrb	w3, [x3, #5]
    2b6c:	cmp	w11, w15
    2b70:	orr	w5, w5, w3, lsl #16
    2b74:	b.eq	2bd4 <cap_copy_int@@Base+0x12c>  // b.none
    2b78:	ldrb	w1, [x1, #5]
    2b7c:	add	w2, w2, #0x4
    2b80:	orr	w5, w5, w1, lsl #24
    2b84:	str	w5, [x10, #8]
    2b88:	add	x10, x10, #0xc
    2b8c:	cbz	w13, 2bac <cap_copy_int@@Base+0x104>
    2b90:	add	w12, w12, #0x1
    2b94:	add	x14, x14, #0x4
    2b98:	cmp	w12, #0x3
    2b9c:	b.ne	2ae4 <cap_copy_int@@Base+0x3c>  // b.any
    2ba0:	ldr	x19, [sp, #16]
    2ba4:	ldp	x29, x30, [sp], #32
    2ba8:	ret
    2bac:	mov	w13, #0x1                   	// #1
    2bb0:	b	2af4 <cap_copy_int@@Base+0x4c>
    2bb4:	ldr	x19, [sp, #16]
    2bb8:	bl	1cb0 <__errno_location@plt>
    2bbc:	mov	x1, x0
    2bc0:	mov	w2, #0x16                  	// #22
    2bc4:	mov	x0, #0x0                   	// #0
    2bc8:	str	w2, [x1]
    2bcc:	ldp	x29, x30, [sp], #32
    2bd0:	ret
    2bd4:	mov	w2, w11
    2bd8:	b	2b84 <cap_copy_int@@Base+0xdc>
    2bdc:	nop

0000000000002be0 <cap_get_flag@@Base>:
    2be0:	cmp	x3, #0x0
    2be4:	ccmp	x0, #0x0, #0x4, ne  // ne = any
    2be8:	b.eq	2c44 <cap_get_flag@@Base+0x64>  // b.none
    2bec:	mov	x4, x0
    2bf0:	mov	w0, #0x90d0                	// #37072
    2bf4:	movk	w0, #0xca, lsl #16
    2bf8:	ldur	w5, [x4, #-4]
    2bfc:	cmp	w5, w0
    2c00:	b.ne	2c44 <cap_get_flag@@Base+0x64>  // b.any
    2c04:	cmp	w1, #0x3f
    2c08:	ccmp	w2, #0x2, #0x2, ls  // ls = plast
    2c0c:	b.hi	2c44 <cap_get_flag@@Base+0x64>  // b.pmore
    2c10:	asr	w5, w1, #5
    2c14:	mov	w0, #0x1                   	// #1
    2c18:	lsl	w1, w0, w1
    2c1c:	mov	w0, #0x0                   	// #0
    2c20:	sbfiz	x6, x5, #1, #32
    2c24:	add	x5, x6, w5, sxtw
    2c28:	add	x2, x5, w2, uxtw
    2c2c:	add	x2, x4, x2, lsl #2
    2c30:	ldr	w2, [x2, #8]
    2c34:	tst	w1, w2
    2c38:	cset	w1, ne  // ne = any
    2c3c:	str	w1, [x3]
    2c40:	ret
    2c44:	stp	x29, x30, [sp, #-16]!
    2c48:	mov	x29, sp
    2c4c:	bl	1cb0 <__errno_location@plt>
    2c50:	mov	x1, x0
    2c54:	mov	w2, #0x16                  	// #22
    2c58:	mov	w0, #0xffffffff            	// #-1
    2c5c:	str	w2, [x1]
    2c60:	ldp	x29, x30, [sp], #16
    2c64:	ret

0000000000002c68 <cap_set_flag@@Base>:
    2c68:	cbz	x0, 2cf8 <cap_set_flag@@Base+0x90>
    2c6c:	ldur	w6, [x0, #-4]
    2c70:	mov	w5, #0x90d0                	// #37072
    2c74:	movk	w5, #0xca, lsl #16
    2c78:	cmp	w6, w5
    2c7c:	b.ne	2cf8 <cap_set_flag@@Base+0x90>  // b.any
    2c80:	sub	w5, w2, #0x1
    2c84:	cmp	w5, #0x3e
    2c88:	b.hi	2cf8 <cap_set_flag@@Base+0x90>  // b.pmore
    2c8c:	cmp	w1, #0x2
    2c90:	ccmp	w4, #0x1, #0x2, ls  // ls = plast
    2c94:	b.hi	2cf8 <cap_set_flag@@Base+0x90>  // b.pmore
    2c98:	mov	w8, w1
    2c9c:	mov	x6, #0x0                   	// #0
    2ca0:	mov	w10, #0x1                   	// #1
    2ca4:	nop
    2ca8:	ldr	w5, [x3, x6, lsl #2]
    2cac:	add	x6, x6, #0x1
    2cb0:	cmp	w5, #0x3f
    2cb4:	b.hi	2ce8 <cap_set_flag@@Base+0x80>  // b.pmore
    2cb8:	asr	w1, w5, #5
    2cbc:	cmp	w4, #0x1
    2cc0:	lsl	w5, w10, w5
    2cc4:	sbfiz	x7, x1, #1, #32
    2cc8:	add	x1, x7, w1, sxtw
    2ccc:	add	x1, x1, x8
    2cd0:	add	x1, x0, x1, lsl #2
    2cd4:	ldr	w7, [x1, #8]
    2cd8:	bic	w9, w7, w5
    2cdc:	orr	w5, w7, w5
    2ce0:	csel	w5, w5, w9, eq  // eq = none
    2ce4:	str	w5, [x1, #8]
    2ce8:	cmp	w2, w6
    2cec:	b.gt	2ca8 <cap_set_flag@@Base+0x40>
    2cf0:	mov	w0, #0x0                   	// #0
    2cf4:	ret
    2cf8:	stp	x29, x30, [sp, #-16]!
    2cfc:	mov	x29, sp
    2d00:	bl	1cb0 <__errno_location@plt>
    2d04:	mov	x1, x0
    2d08:	mov	w2, #0x16                  	// #22
    2d0c:	mov	w0, #0xffffffff            	// #-1
    2d10:	str	w2, [x1]
    2d14:	ldp	x29, x30, [sp], #16
    2d18:	ret
    2d1c:	nop

0000000000002d20 <cap_clear@@Base>:
    2d20:	cbz	x0, 2d4c <cap_clear@@Base+0x2c>
    2d24:	mov	x1, x0
    2d28:	mov	w0, #0x90d0                	// #37072
    2d2c:	movk	w0, #0xca, lsl #16
    2d30:	ldur	w2, [x1, #-4]
    2d34:	cmp	w2, w0
    2d38:	b.ne	2d4c <cap_clear@@Base+0x2c>  // b.any
    2d3c:	mov	w0, #0x0                   	// #0
    2d40:	stp	xzr, xzr, [x1, #8]
    2d44:	str	xzr, [x1, #24]
    2d48:	ret
    2d4c:	stp	x29, x30, [sp, #-16]!
    2d50:	mov	x29, sp
    2d54:	bl	1cb0 <__errno_location@plt>
    2d58:	mov	x1, x0
    2d5c:	mov	w2, #0x16                  	// #22
    2d60:	mov	w0, #0xffffffff            	// #-1
    2d64:	str	w2, [x1]
    2d68:	ldp	x29, x30, [sp], #16
    2d6c:	ret

0000000000002d70 <cap_clear_flag@@Base>:
    2d70:	cmp	x0, #0x0
    2d74:	ccmp	w1, #0x2, #0x2, ne  // ne = any
    2d78:	b.hi	2da4 <cap_clear_flag@@Base+0x34>  // b.pmore
    2d7c:	ldur	w3, [x0, #-4]
    2d80:	mov	w2, #0x90d0                	// #37072
    2d84:	movk	w2, #0xca, lsl #16
    2d88:	cmp	w3, w2
    2d8c:	b.ne	2da4 <cap_clear_flag@@Base+0x34>  // b.any
    2d90:	add	x1, x0, w1, uxtw #2
    2d94:	mov	w0, #0x0                   	// #0
    2d98:	str	wzr, [x1, #8]
    2d9c:	str	wzr, [x1, #20]
    2da0:	ret
    2da4:	stp	x29, x30, [sp, #-16]!
    2da8:	mov	x29, sp
    2dac:	bl	1cb0 <__errno_location@plt>
    2db0:	mov	x1, x0
    2db4:	mov	w2, #0x16                  	// #22
    2db8:	mov	w0, #0xffffffff            	// #-1
    2dbc:	str	w2, [x1]
    2dc0:	ldp	x29, x30, [sp], #16
    2dc4:	ret

0000000000002dc8 <cap_compare@@Base>:
    2dc8:	cbz	x0, 2e60 <cap_compare@@Base+0x98>
    2dcc:	ldur	w3, [x0, #-4]
    2dd0:	cmp	x1, #0x0
    2dd4:	mov	w2, #0x90d0                	// #37072
    2dd8:	movk	w2, #0xca, lsl #16
    2ddc:	ccmp	w3, w2, #0x0, ne  // ne = any
    2de0:	b.ne	2e60 <cap_compare@@Base+0x98>  // b.any
    2de4:	ldur	w3, [x1, #-4]
    2de8:	cmp	w3, w2
    2dec:	b.ne	2e60 <cap_compare@@Base+0x98>  // b.any
    2df0:	ldp	w2, w6, [x0, #8]
    2df4:	ldp	w3, w4, [x1, #8]
    2df8:	ldr	w5, [x0, #16]
    2dfc:	cmp	w3, w2
    2e00:	ldr	w3, [x1, #16]
    2e04:	cset	w2, ne  // ne = any
    2e08:	ldr	w8, [x0, #28]
    2e0c:	cmp	w5, w3
    2e10:	orr	w7, w2, #0x4
    2e14:	ldr	w5, [x0, #20]
    2e18:	csel	w2, w7, w2, ne  // ne = any
    2e1c:	ldr	w3, [x1, #20]
    2e20:	cmp	w6, w4
    2e24:	ldr	w7, [x1, #28]
    2e28:	cset	w4, ne  // ne = any
    2e2c:	cmp	w5, w3
    2e30:	ldr	w1, [x1, #24]
    2e34:	ldr	w5, [x0, #24]
    2e38:	cset	w3, ne  // ne = any
    2e3c:	orr	w6, w3, #0x4
    2e40:	cmp	w8, w7
    2e44:	csel	w3, w6, w3, ne  // ne = any
    2e48:	orr	w0, w2, w4, lsl #1
    2e4c:	cmp	w5, w1
    2e50:	orr	w2, w2, #0x2
    2e54:	csel	w0, w2, w0, ne  // ne = any
    2e58:	orr	w0, w3, w0
    2e5c:	ret
    2e60:	stp	x29, x30, [sp, #-16]!
    2e64:	mov	x29, sp
    2e68:	bl	1cb0 <__errno_location@plt>
    2e6c:	mov	x1, x0
    2e70:	mov	w2, #0x16                  	// #22
    2e74:	mov	w0, #0xffffffff            	// #-1
    2e78:	str	w2, [x1]
    2e7c:	ldp	x29, x30, [sp], #16
    2e80:	ret
    2e84:	nop
    2e88:	stp	x29, x30, [sp, #-48]!
    2e8c:	mov	x29, sp
    2e90:	stp	x19, x20, [sp, #16]
    2e94:	mov	x19, x0
    2e98:	ldrb	w20, [x1]
    2e9c:	cbz	w20, 2ee8 <cap_compare@@Base+0x120>
    2ea0:	str	x21, [sp, #32]
    2ea4:	mov	x21, x1
    2ea8:	bl	1ad0 <__ctype_tolower_loc@plt>
    2eac:	ldr	x1, [x0]
    2eb0:	b	2ebc <cap_compare@@Base+0xf4>
    2eb4:	ldrb	w20, [x21, #1]!
    2eb8:	cbz	w20, 2ee4 <cap_compare@@Base+0x11c>
    2ebc:	ldrb	w0, [x19]
    2ec0:	add	x19, x19, #0x1
    2ec4:	ldr	w0, [x1, x0, lsl #2]
    2ec8:	cmp	w0, w20
    2ecc:	b.eq	2eb4 <cap_compare@@Base+0xec>  // b.none
    2ed0:	mov	x0, #0x0                   	// #0
    2ed4:	ldp	x19, x20, [sp, #16]
    2ed8:	ldr	x21, [sp, #32]
    2edc:	ldp	x29, x30, [sp], #48
    2ee0:	ret
    2ee4:	ldr	x21, [sp, #32]
    2ee8:	bl	1bc0 <__ctype_b_loc@plt>
    2eec:	ldrb	w1, [x19]
    2ef0:	ldr	x2, [x0]
    2ef4:	cmp	w1, #0x5f
    2ef8:	ubfiz	x0, x1, #1, #8
    2efc:	ldrh	w0, [x2, x0]
    2f00:	and	w0, w0, #0x8
    2f04:	ccmp	w0, #0x0, #0x0, ne  // ne = any
    2f08:	csel	x0, x19, xzr, eq  // eq = none
    2f0c:	ldp	x19, x20, [sp, #16]
    2f10:	ldp	x29, x30, [sp], #48
    2f14:	ret
    2f18:	stp	x29, x30, [sp, #-80]!
    2f1c:	mov	x29, sp
    2f20:	stp	x19, x20, [sp, #16]
    2f24:	ldr	x19, [x0]
    2f28:	stp	x21, x22, [sp, #32]
    2f2c:	mov	x21, x0
    2f30:	str	x19, [sp, #72]
    2f34:	bl	1bc0 <__ctype_b_loc@plt>
    2f38:	ldrb	w1, [x19]
    2f3c:	ldr	x4, [x0]
    2f40:	ubfiz	x0, x1, #1, #8
    2f44:	ldrh	w2, [x4, x0]
    2f48:	tbnz	w2, #11, 2fe0 <cap_compare@@Base+0x218>
    2f4c:	mov	w3, #0x0                   	// #0
    2f50:	cbnz	w1, 2f5c <cap_compare@@Base+0x194>
    2f54:	b	2f7c <cap_compare@@Base+0x1b4>
    2f58:	ldrh	w2, [x4, x0]
    2f5c:	and	w2, w2, #0x400
    2f60:	cmp	w1, #0x5f
    2f64:	add	w3, w3, #0x1
    2f68:	ccmp	w2, #0x0, #0x0, ne  // ne = any
    2f6c:	b.eq	2f7c <cap_compare@@Base+0x1b4>  // b.none
    2f70:	ldrb	w1, [x19, w3, uxtw]
    2f74:	ubfiz	x0, x1, #1, #8
    2f78:	cbnz	w1, 2f58 <cap_compare@@Base+0x190>
    2f7c:	bl	1a70 <cap_max_bits@plt>
    2f80:	sub	w20, w0, #0x1
    2f84:	cbz	w0, 2fcc <cap_compare@@Base+0x204>
    2f88:	adrp	x22, 15000 <cap_set_nsowner@@Base+0x10e88>
    2f8c:	str	x23, [sp, #48]
    2f90:	ldr	x23, [sp, #72]
    2f94:	ldr	x22, [x22, #4032]
    2f98:	add	x19, x22, w20, uxtw #3
    2f9c:	nop
    2fa0:	ldr	x1, [x19]
    2fa4:	mov	x0, x23
    2fa8:	cbz	x1, 2fb8 <cap_compare@@Base+0x1f0>
    2fac:	bl	2e88 <cap_compare@@Base+0xc0>
    2fb0:	mov	x1, x0
    2fb4:	cbnz	x0, 3010 <cap_compare@@Base+0x248>
    2fb8:	cmp	x19, x22
    2fbc:	sub	w20, w20, #0x1
    2fc0:	sub	x19, x19, #0x8
    2fc4:	b.ne	2fa0 <cap_compare@@Base+0x1d8>  // b.any
    2fc8:	ldr	x23, [sp, #48]
    2fcc:	mov	w0, #0xffffffff            	// #-1
    2fd0:	ldp	x19, x20, [sp, #16]
    2fd4:	ldp	x21, x22, [sp, #32]
    2fd8:	ldp	x29, x30, [sp], #80
    2fdc:	ret
    2fe0:	mov	x0, x19
    2fe4:	add	x1, sp, #0x48
    2fe8:	mov	w2, #0x0                   	// #0
    2fec:	bl	1a20 <strtoul@plt>
    2ff0:	cmp	x0, #0x3f
    2ff4:	b.hi	2fcc <cap_compare@@Base+0x204>  // b.pmore
    2ff8:	ldr	x1, [sp, #72]
    2ffc:	str	x1, [x21]
    3000:	ldp	x19, x20, [sp, #16]
    3004:	ldp	x21, x22, [sp, #32]
    3008:	ldp	x29, x30, [sp], #80
    300c:	ret
    3010:	ldr	x23, [sp, #48]
    3014:	str	x1, [x21]
    3018:	mov	w0, w20
    301c:	ldp	x19, x20, [sp, #16]
    3020:	ldp	x21, x22, [sp, #32]
    3024:	ldp	x29, x30, [sp], #80
    3028:	ret
    302c:	nop
    3030:	stp	x29, x30, [sp, #-32]!
    3034:	mov	x29, sp
    3038:	stp	x19, x20, [sp, #16]
    303c:	mov	w19, w1
    3040:	mov	x20, x0
    3044:	bl	1a70 <cap_max_bits@plt>
    3048:	negs	w2, w0
    304c:	and	w1, w0, #0x1f
    3050:	and	w2, w2, #0x1f
    3054:	csneg	w2, w1, w2, mi  // mi = first
    3058:	sub	w4, w19, #0x1
    305c:	mov	x5, #0x1                   	// #1
    3060:	lsl	w1, w19, #5
    3064:	lsl	x5, x5, x2
    3068:	add	x4, x20, x4, lsl #2
    306c:	sub	w5, w5, #0x1
    3070:	sub	w2, w1, #0x20
    3074:	cmp	w1, w0
    3078:	mov	w3, #0xffffffff            	// #-1
    307c:	b.ls	3088 <cap_compare@@Base+0x2c0>  // b.plast
    3080:	cmp	w0, w2
    3084:	csel	w3, w5, wzr, hi  // hi = pmore
    3088:	str	w3, [x4], #-4
    308c:	mov	w1, w2
    3090:	cbnz	w2, 3070 <cap_compare@@Base+0x2a8>
    3094:	ldp	x19, x20, [sp, #16]
    3098:	ldp	x29, x30, [sp], #32
    309c:	ret

00000000000030a0 <cap_from_text@@Base>:
    30a0:	stp	x29, x30, [sp, #-128]!
    30a4:	mov	x29, sp
    30a8:	stp	x21, x22, [sp, #32]
    30ac:	str	x0, [sp, #104]
    30b0:	cbz	x0, 345c <cap_from_text@@Base+0x3bc>
    30b4:	bl	1ba0 <cap_init@plt>
    30b8:	mov	x21, x0
    30bc:	cbz	x0, 310c <cap_from_text@@Base+0x6c>
    30c0:	ldr	w0, [x0]
    30c4:	mov	w1, #0x1026                	// #4134
    30c8:	stp	x23, x24, [sp, #48]
    30cc:	movk	w1, #0x2007, lsl #16
    30d0:	cmp	w0, w1
    30d4:	b.eq	311c <cap_from_text@@Base+0x7c>  // b.none
    30d8:	mov	w1, #0x522                 	// #1314
    30dc:	movk	w1, #0x2008, lsl #16
    30e0:	cmp	w0, w1
    30e4:	b.eq	311c <cap_from_text@@Base+0x7c>  // b.none
    30e8:	mov	w1, #0x330                 	// #816
    30ec:	movk	w1, #0x1998, lsl #16
    30f0:	cmp	w0, w1
    30f4:	b.eq	31d4 <cap_from_text@@Base+0x134>  // b.none
    30f8:	bl	1cb0 <__errno_location@plt>
    30fc:	mov	x21, #0x0                   	// #0
    3100:	mov	w1, #0x16                  	// #22
    3104:	ldp	x23, x24, [sp, #48]
    3108:	str	w1, [x0]
    310c:	mov	x0, x21
    3110:	ldp	x21, x22, [sp, #32]
    3114:	ldp	x29, x30, [sp], #128
    3118:	ret
    311c:	mov	w23, #0x2                   	// #2
    3120:	stp	x19, x20, [sp, #16]
    3124:	stp	x25, x26, [sp, #64]
    3128:	stp	x27, x28, [sp, #80]
    312c:	mov	w25, #0xc                   	// #12
    3130:	bl	1bc0 <__ctype_b_loc@plt>
    3134:	add	x20, sp, #0x78
    3138:	umaddl	x25, w23, w25, x21
    313c:	mov	x22, x0
    3140:	ldr	x3, [x0]
    3144:	add	x27, sp, #0x68
    3148:	ldr	x19, [sp, #104]
    314c:	sub	w26, w23, #0x2
    3150:	mov	x1, x19
    3154:	str	xzr, [x20]
    3158:	b	3160 <cap_from_text@@Base+0xc0>
    315c:	str	x1, [sp, #104]
    3160:	ldrb	w0, [x1]
    3164:	mov	x19, x1
    3168:	add	x1, x1, #0x1
    316c:	ubfiz	x2, x0, #1, #8
    3170:	ldrh	w2, [x3, x2]
    3174:	tbnz	w2, #13, 315c <cap_from_text@@Base+0xbc>
    3178:	cbz	w0, 35fc <cap_from_text@@Base+0x55c>
    317c:	and	w2, w2, #0x8
    3180:	cmp	w0, #0x5f
    3184:	ccmp	w2, #0x0, #0x0, ne  // ne = any
    3188:	b.ne	31e8 <cap_from_text@@Base+0x148>  // b.any
    318c:	sub	w0, w0, #0x2b
    3190:	mov	w1, #0xfd                  	// #253
    3194:	tst	w0, w1
    3198:	b.ne	3590 <cap_from_text@@Base+0x4f0>  // b.any
    319c:	mov	x0, x21
    31a0:	bl	1c60 <cap_free@plt>
    31a4:	bl	1cb0 <__errno_location@plt>
    31a8:	mov	x21, #0x0                   	// #0
    31ac:	mov	w1, #0x16                  	// #22
    31b0:	ldp	x19, x20, [sp, #16]
    31b4:	ldp	x23, x24, [sp, #48]
    31b8:	ldp	x25, x26, [sp, #64]
    31bc:	ldp	x27, x28, [sp, #80]
    31c0:	str	w1, [x0]
    31c4:	mov	x0, x21
    31c8:	ldp	x21, x22, [sp, #32]
    31cc:	ldp	x29, x30, [sp], #128
    31d0:	ret
    31d4:	mov	w23, #0x1                   	// #1
    31d8:	stp	x19, x20, [sp, #16]
    31dc:	stp	x25, x26, [sp, #64]
    31e0:	stp	x27, x28, [sp, #80]
    31e4:	b	312c <cap_from_text@@Base+0x8c>
    31e8:	adrp	x24, 4000 <cap_set_fd@@Base+0x18>
    31ec:	mov	w28, #0x1                   	// #1
    31f0:	add	x24, x24, #0x198
    31f4:	b	3244 <cap_from_text@@Base+0x1a4>
    31f8:	add	x19, x19, #0x3
    31fc:	mov	w1, w23
    3200:	mov	x0, x20
    3204:	str	x19, [sp, #104]
    3208:	bl	3030 <cap_compare@@Base+0x268>
    320c:	ldr	x1, [sp, #104]
    3210:	mov	x19, x1
    3214:	ldrb	w0, [x19], #1
    3218:	cmp	w0, #0x2c
    321c:	b.ne	3290 <cap_from_text@@Base+0x1f0>  // b.any
    3220:	str	x19, [sp, #104]
    3224:	ldr	x2, [x22]
    3228:	ldrb	w0, [x1, #1]
    322c:	cmp	w0, #0x5f
    3230:	ubfiz	x0, x0, #1, #8
    3234:	ldrh	w0, [x2, x0]
    3238:	and	w0, w0, #0x8
    323c:	ccmp	w0, #0x0, #0x0, ne  // ne = any
    3240:	b.eq	319c <cap_from_text@@Base+0xfc>  // b.none
    3244:	mov	x1, x24
    3248:	mov	x0, x19
    324c:	bl	2e88 <cap_compare@@Base+0xc0>
    3250:	cbnz	x0, 31f8 <cap_from_text@@Base+0x158>
    3254:	mov	x0, x27
    3258:	bl	2f18 <cap_compare@@Base+0x150>
    325c:	cmn	w0, #0x1
    3260:	b.eq	319c <cap_from_text@@Base+0xfc>  // b.none
    3264:	asr	w1, w0, #5
    3268:	lsl	w0, w28, w0
    326c:	sxtw	x1, w1
    3270:	ldr	w2, [x20, x1, lsl #2]
    3274:	orr	w0, w0, w2
    3278:	str	w0, [x20, x1, lsl #2]
    327c:	ldr	x1, [sp, #104]
    3280:	mov	x19, x1
    3284:	ldrb	w0, [x19], #1
    3288:	cmp	w0, #0x2c
    328c:	b.eq	3220 <cap_from_text@@Base+0x180>  // b.none
    3290:	mov	w6, #0x1                   	// #1
    3294:	str	x19, [sp, #104]
    3298:	ldrb	w2, [x1]
    329c:	cmp	w2, #0x3d
    32a0:	b.eq	35bc <cap_from_text@@Base+0x51c>  // b.none
    32a4:	sub	w0, w2, #0x2b
    32a8:	mov	w3, #0xfd                  	// #253
    32ac:	tst	w0, w3
    32b0:	b.ne	319c <cap_from_text@@Base+0xfc>  // b.any
    32b4:	ldrb	w0, [x1, #1]
    32b8:	mov	w4, #0x0                   	// #0
    32bc:	cbz	w0, 3368 <cap_from_text@@Base+0x2c8>
    32c0:	ldr	x3, [x22]
    32c4:	ubfiz	x0, x0, #1, #8
    32c8:	ldrh	w0, [x3, x0]
    32cc:	tbnz	w0, #13, 3368 <cap_from_text@@Base+0x2c8>
    32d0:	add	x1, x19, #0x1
    32d4:	str	x1, [sp, #104]
    32d8:	ldrb	w0, [x19]
    32dc:	cmp	w0, #0x69
    32e0:	b.eq	35b4 <cap_from_text@@Base+0x514>  // b.none
    32e4:	cmp	w0, #0x70
    32e8:	b.eq	35ac <cap_from_text@@Base+0x50c>  // b.none
    32ec:	cmp	w0, #0x65
    32f0:	b.ne	319c <cap_from_text@@Base+0xfc>  // b.any
    32f4:	orr	w4, w4, #0x1
    32f8:	cmp	w2, #0x2d
    32fc:	b.eq	3400 <cap_from_text@@Base+0x360>  // b.none
    3300:	b.hi	356c <cap_from_text@@Base+0x4cc>  // b.pmore
    3304:	cmp	w2, #0x2b
    3308:	b.ne	3318 <cap_from_text@@Base+0x278>  // b.any
    330c:	tbnz	w4, #0, 34d8 <cap_from_text@@Base+0x438>
    3310:	tbnz	w4, #1, 347c <cap_from_text@@Base+0x3dc>
    3314:	tbnz	w4, #2, 34a8 <cap_from_text@@Base+0x408>
    3318:	ldrb	w0, [x1]
    331c:	mov	w3, #0xfd                  	// #253
    3320:	sub	w5, w0, #0x2b
    3324:	tst	w5, w3
    3328:	b.ne	3450 <cap_from_text@@Base+0x3b0>  // b.any
    332c:	cbz	w6, 319c <cap_from_text@@Base+0xfc>
    3330:	add	x19, x1, #0x1
    3334:	str	x19, [sp, #104]
    3338:	ldr	x3, [x22]
    333c:	ldrb	w0, [x1, #1]
    3340:	ldrb	w2, [x1]
    3344:	ubfiz	x1, x0, #1, #8
    3348:	ldrh	w1, [x3, x1]
    334c:	tbz	w1, #10, 319c <cap_from_text@@Base+0xfc>
    3350:	mov	w4, #0x0                   	// #0
    3354:	cbz	w0, 3150 <cap_from_text@@Base+0xb0>
    3358:	ubfiz	x1, x0, #1, #8
    335c:	ldrh	w1, [x3, x1]
    3360:	tbnz	w1, #13, 3150 <cap_from_text@@Base+0xb0>
    3364:	cbnz	w0, 32c0 <cap_from_text@@Base+0x220>
    3368:	cmp	w2, #0x3d
    336c:	b.ne	319c <cap_from_text@@Base+0xfc>  // b.any
    3370:	sxtw	x0, w26
    3374:	mov	x3, x25
    3378:	mov	x1, x0
    337c:	add	x5, x20, x1, lsl #2
    3380:	ldur	w7, [x3, #-4]
    3384:	sub	x1, x1, #0x1
    3388:	sub	x3, x3, #0xc
    338c:	cmn	w1, #0x2
    3390:	ldr	w5, [x5, #4]
    3394:	bic	w5, w7, w5
    3398:	str	w5, [x3, #8]
    339c:	b.ne	337c <cap_from_text@@Base+0x2dc>  // b.any
    33a0:	mov	x5, x25
    33a4:	mov	x1, x0
    33a8:	add	x3, x20, x1, lsl #2
    33ac:	ldr	w7, [x5]
    33b0:	sub	x1, x1, #0x1
    33b4:	cmn	w1, #0x2
    33b8:	ldr	w3, [x3, #4]
    33bc:	bic	w3, w7, w3
    33c0:	str	w3, [x5], #-12
    33c4:	b.ne	33a8 <cap_from_text@@Base+0x308>  // b.any
    33c8:	mov	x1, x25
    33cc:	add	x3, x20, x0, lsl #2
    33d0:	ldr	w5, [x1, #4]
    33d4:	sub	x0, x0, #0x1
    33d8:	sub	x1, x1, #0xc
    33dc:	cmn	w0, #0x2
    33e0:	ldr	w3, [x3, #4]
    33e4:	bic	w3, w5, w3
    33e8:	str	w3, [x1, #16]
    33ec:	b.ne	33cc <cap_from_text@@Base+0x32c>  // b.any
    33f0:	mov	x1, x19
    33f4:	cmp	w2, #0x4d
    33f8:	b.ne	330c <cap_from_text@@Base+0x26c>  // b.any
    33fc:	nop
    3400:	tbnz	w4, #0, 3538 <cap_from_text@@Base+0x498>
    3404:	tbnz	w4, #1, 350c <cap_from_text@@Base+0x46c>
    3408:	tbz	w4, #2, 3318 <cap_from_text@@Base+0x278>
    340c:	sxtw	x3, w26
    3410:	mov	x0, x25
    3414:	add	x5, x20, x3, lsl #2
    3418:	ldr	w7, [x0, #4]
    341c:	sub	x3, x3, #0x1
    3420:	sub	x0, x0, #0xc
    3424:	cmn	w3, #0x2
    3428:	ldr	w5, [x5, #4]
    342c:	bic	w5, w7, w5
    3430:	str	w5, [x0, #16]
    3434:	b.ne	3414 <cap_from_text@@Base+0x374>  // b.any
    3438:	ldrb	w0, [x1]
    343c:	mov	w3, #0xfd                  	// #253
    3440:	sub	w5, w0, #0x2b
    3444:	tst	w5, w3
    3448:	b.eq	332c <cap_from_text@@Base+0x28c>  // b.none
    344c:	nop
    3450:	mov	x19, x1
    3454:	ldr	x3, [x22]
    3458:	b	3354 <cap_from_text@@Base+0x2b4>
    345c:	mov	x21, x0
    3460:	bl	1cb0 <__errno_location@plt>
    3464:	mov	w1, #0x16                  	// #22
    3468:	str	w1, [x0]
    346c:	mov	x0, x21
    3470:	ldp	x21, x22, [sp, #32]
    3474:	ldp	x29, x30, [sp], #128
    3478:	ret
    347c:	sxtw	x0, w26
    3480:	mov	x5, x25
    3484:	add	x7, x20, x0, lsl #2
    3488:	ldr	w3, [x5]
    348c:	sub	x0, x0, #0x1
    3490:	cmn	w0, #0x2
    3494:	ldr	w7, [x7, #4]
    3498:	orr	w3, w3, w7
    349c:	str	w3, [x5], #-12
    34a0:	b.ne	3484 <cap_from_text@@Base+0x3e4>  // b.any
    34a4:	tbz	w4, #2, 3318 <cap_from_text@@Base+0x278>
    34a8:	sxtw	x3, w26
    34ac:	mov	x0, x25
    34b0:	add	x7, x20, x3, lsl #2
    34b4:	ldr	w5, [x0, #4]
    34b8:	sub	x3, x3, #0x1
    34bc:	sub	x0, x0, #0xc
    34c0:	cmn	w3, #0x2
    34c4:	ldr	w7, [x7, #4]
    34c8:	orr	w5, w5, w7
    34cc:	str	w5, [x0, #16]
    34d0:	b.ne	34b0 <cap_from_text@@Base+0x410>  // b.any
    34d4:	b	3318 <cap_from_text@@Base+0x278>
    34d8:	sxtw	x3, w26
    34dc:	mov	x0, x25
    34e0:	add	x7, x20, x3, lsl #2
    34e4:	ldur	w5, [x0, #-4]
    34e8:	sub	x3, x3, #0x1
    34ec:	sub	x0, x0, #0xc
    34f0:	cmn	w3, #0x2
    34f4:	ldr	w7, [x7, #4]
    34f8:	orr	w5, w5, w7
    34fc:	str	w5, [x0, #8]
    3500:	b.ne	34e0 <cap_from_text@@Base+0x440>  // b.any
    3504:	tbz	w4, #1, 3314 <cap_from_text@@Base+0x274>
    3508:	b	347c <cap_from_text@@Base+0x3dc>
    350c:	sxtw	x0, w26
    3510:	mov	x5, x25
    3514:	add	x3, x20, x0, lsl #2
    3518:	ldr	w7, [x5]
    351c:	sub	x0, x0, #0x1
    3520:	cmn	w0, #0x2
    3524:	ldr	w3, [x3, #4]
    3528:	bic	w3, w7, w3
    352c:	str	w3, [x5], #-12
    3530:	b.ne	3514 <cap_from_text@@Base+0x474>  // b.any
    3534:	b	3408 <cap_from_text@@Base+0x368>
    3538:	sxtw	x3, w26
    353c:	mov	x0, x25
    3540:	add	x5, x20, x3, lsl #2
    3544:	ldur	w7, [x0, #-4]
    3548:	sub	x3, x3, #0x1
    354c:	sub	x0, x0, #0xc
    3550:	cmn	w3, #0x2
    3554:	ldr	w5, [x5, #4]
    3558:	bic	w5, w7, w5
    355c:	str	w5, [x0, #8]
    3560:	b.ne	3540 <cap_from_text@@Base+0x4a0>  // b.any
    3564:	tbz	w4, #1, 3408 <cap_from_text@@Base+0x368>
    3568:	b	350c <cap_from_text@@Base+0x46c>
    356c:	cmp	w2, #0x50
    3570:	b.eq	3588 <cap_from_text@@Base+0x4e8>  // b.none
    3574:	b.hi	3318 <cap_from_text@@Base+0x278>  // b.pmore
    3578:	sub	w0, w2, #0x3d
    357c:	mov	w3, #0xef                  	// #239
    3580:	tst	w0, w3
    3584:	b.ne	3318 <cap_from_text@@Base+0x278>  // b.any
    3588:	mov	x19, x1
    358c:	b	3370 <cap_from_text@@Base+0x2d0>
    3590:	mov	w1, w23
    3594:	mov	x0, x20
    3598:	bl	3030 <cap_compare@@Base+0x268>
    359c:	ldr	x1, [sp, #104]
    35a0:	mov	w6, #0x0                   	// #0
    35a4:	add	x19, x1, #0x1
    35a8:	b	3294 <cap_from_text@@Base+0x1f4>
    35ac:	orr	w4, w4, #0x2
    35b0:	b	32f8 <cap_from_text@@Base+0x258>
    35b4:	orr	w4, w4, #0x4
    35b8:	b	32f8 <cap_from_text@@Base+0x258>
    35bc:	ldrb	w0, [x1, #1]
    35c0:	mov	w3, #0xfd                  	// #253
    35c4:	sub	w4, w0, #0x2b
    35c8:	tst	w4, w3
    35cc:	b.ne	32b8 <cap_from_text@@Base+0x218>  // b.any
    35d0:	cbz	w6, 319c <cap_from_text@@Base+0xfc>
    35d4:	add	x19, x1, #0x2
    35d8:	str	x19, [sp, #104]
    35dc:	mov	w2, #0x50                  	// #80
    35e0:	ldrb	w0, [x1, #1]
    35e4:	cmp	w0, #0x2b
    35e8:	ldrb	w0, [x1, #2]
    35ec:	b.eq	32b8 <cap_from_text@@Base+0x218>  // b.none
    35f0:	mov	w2, #0x4d                  	// #77
    35f4:	mov	w4, #0x0                   	// #0
    35f8:	b	32bc <cap_from_text@@Base+0x21c>
    35fc:	ldp	x19, x20, [sp, #16]
    3600:	ldp	x23, x24, [sp, #48]
    3604:	ldp	x25, x26, [sp, #64]
    3608:	ldp	x27, x28, [sp, #80]
    360c:	b	310c <cap_from_text@@Base+0x6c>

0000000000003610 <cap_from_name@@Base>:
    3610:	stp	x29, x30, [sp, #-48]!
    3614:	mov	x29, sp
    3618:	str	x19, [sp, #16]
    361c:	mov	x19, x1
    3620:	str	x0, [sp, #40]
    3624:	add	x0, sp, #0x28
    3628:	bl	2f18 <cap_compare@@Base+0x150>
    362c:	cmp	w0, #0x0
    3630:	ccmp	x19, #0x0, #0x4, ge  // ge = tcont
    3634:	b.eq	363c <cap_from_name@@Base+0x2c>  // b.none
    3638:	str	w0, [x19]
    363c:	asr	w0, w0, #31
    3640:	ldr	x19, [sp, #16]
    3644:	ldp	x29, x30, [sp], #48
    3648:	ret
    364c:	nop

0000000000003650 <cap_to_name@@Base>:
    3650:	stp	x29, x30, [sp, #-48]!
    3654:	mov	w2, w0
    3658:	cmp	w0, #0x25
    365c:	mov	x29, sp
    3660:	str	x19, [sp, #16]
    3664:	b.ls	369c <cap_to_name@@Base+0x4c>  // b.plast
    3668:	add	x0, sp, #0x28
    366c:	adrp	x1, 4000 <cap_set_fd@@Base+0x18>
    3670:	add	x1, x1, #0x1a0
    3674:	bl	1ac0 <asprintf@plt>
    3678:	ldr	x0, [sp, #40]
    367c:	bl	1a80 <_libcap_strdup@plt>
    3680:	mov	x19, x0
    3684:	ldr	x0, [sp, #40]
    3688:	bl	1c00 <free@plt>
    368c:	mov	x0, x19
    3690:	ldr	x19, [sp, #16]
    3694:	ldp	x29, x30, [sp], #48
    3698:	ret
    369c:	adrp	x0, 15000 <cap_set_nsowner@@Base+0x10e88>
    36a0:	ldr	x0, [x0, #4032]
    36a4:	ldr	x0, [x0, w2, sxtw #3]
    36a8:	bl	1a80 <_libcap_strdup@plt>
    36ac:	mov	x19, x0
    36b0:	mov	x0, x19
    36b4:	ldr	x19, [sp, #16]
    36b8:	ldp	x29, x30, [sp], #48
    36bc:	ret

00000000000036c0 <cap_to_text@@Base>:
    36c0:	sub	sp, sp, #0x650
    36c4:	stp	x29, x30, [sp]
    36c8:	mov	x29, sp
    36cc:	str	x1, [sp, #120]
    36d0:	cbz	x0, 39f0 <cap_to_text@@Base+0x330>
    36d4:	stp	x27, x28, [sp, #80]
    36d8:	mov	x27, x0
    36dc:	mov	w0, #0x90d0                	// #37072
    36e0:	movk	w0, #0xca, lsl #16
    36e4:	ldur	w1, [x27, #-4]
    36e8:	cmp	w1, w0
    36ec:	b.ne	39ec <cap_to_text@@Base+0x32c>  // b.any
    36f0:	stp	x19, x20, [sp, #16]
    36f4:	stp	x21, x22, [sp, #32]
    36f8:	stp	x23, x24, [sp, #48]
    36fc:	stp	x25, x26, [sp, #64]
    3700:	stp	xzr, xzr, [sp, #136]
    3704:	stp	xzr, xzr, [sp, #152]
    3708:	bl	1a70 <cap_max_bits@plt>
    370c:	mov	w19, w0
    3710:	cbz	w0, 3c2c <cap_to_text@@Base+0x56c>
    3714:	add	x3, sp, #0x88
    3718:	mov	w1, #0x0                   	// #0
    371c:	mov	w6, #0x1                   	// #1
    3720:	asr	w0, w1, #5
    3724:	lsl	w2, w6, w1
    3728:	add	w1, w1, #0x1
    372c:	sbfiz	x4, x0, #1, #32
    3730:	add	x0, x4, w0, sxtw
    3734:	add	x0, x27, x0, lsl #2
    3738:	ldp	w4, w5, [x0, #8]
    373c:	tst	w2, w4
    3740:	ldr	w4, [x0, #16]
    3744:	cset	w0, ne  // ne = any
    3748:	tst	w2, w5
    374c:	orr	w5, w0, #0x2
    3750:	csel	w0, w5, w0, ne  // ne = any
    3754:	tst	w2, w4
    3758:	orr	w2, w0, #0x4
    375c:	csel	w0, w2, w0, ne  // ne = any
    3760:	cmp	w1, w19
    3764:	sxtw	x0, w0
    3768:	ldr	w2, [x3, x0, lsl #2]
    376c:	add	w2, w2, #0x1
    3770:	str	w2, [x3, x0, lsl #2]
    3774:	b.ne	3720 <cap_to_text@@Base+0x60>  // b.any
    3778:	ldp	w2, w3, [sp, #160]
    377c:	add	x1, sp, #0x88
    3780:	mov	x0, #0x6                   	// #6
    3784:	mov	w25, #0x7                   	// #7
    3788:	b	3798 <cap_to_text@@Base+0xd8>
    378c:	ldr	w3, [x1, w25, sxtw #2]
    3790:	sub	x0, x0, #0x1
    3794:	ldur	w2, [x4, #-4]
    3798:	cmp	w2, w3
    379c:	add	x4, x1, x0, lsl #2
    37a0:	csel	w25, w25, w0, lt  // lt = tstop
    37a4:	cbnz	x0, 378c <cap_to_text@@Base+0xcc>
    37a8:	tst	x25, #0x1
    37ac:	adrp	x0, 4000 <cap_set_fd@@Base+0x18>
    37b0:	adrp	x2, 4000 <cap_set_fd@@Base+0x18>
    37b4:	add	x0, x0, #0x3c8
    37b8:	add	x2, x2, #0x410
    37bc:	adrp	x3, 4000 <cap_set_fd@@Base+0x18>
    37c0:	csel	x2, x2, x0, ne  // ne = any
    37c4:	add	x3, x3, #0x1a8
    37c8:	tst	x25, #0x4
    37cc:	add	x20, sp, #0xa8
    37d0:	csel	x3, x3, x0, ne  // ne = any
    37d4:	tst	x25, #0x2
    37d8:	adrp	x4, 4000 <cap_set_fd@@Base+0x18>
    37dc:	add	x4, x4, #0x1b0
    37e0:	csel	x4, x4, x0, ne  // ne = any
    37e4:	adrp	x1, 4000 <cap_set_fd@@Base+0x18>
    37e8:	mov	x0, x20
    37ec:	add	x1, x1, #0x1b8
    37f0:	bl	1ab0 <sprintf@plt>
    37f4:	adrp	x23, 4000 <cap_set_fd@@Base+0x18>
    37f8:	add	x1, sp, #0x88
    37fc:	add	x28, x20, w0, sxtw
    3800:	mov	x26, #0x7                   	// #7
    3804:	add	x0, x23, #0x1c0
    3808:	stp	x0, x1, [sp, #104]
    380c:	b	381c <cap_to_text@@Base+0x15c>
    3810:	sub	x26, x26, #0x1
    3814:	cmn	x26, #0x1
    3818:	b.eq	3a10 <cap_to_text@@Base+0x350>  // b.none
    381c:	stp	w26, w26, [sp, #96]
    3820:	cmp	w25, w26
    3824:	mov	w23, w26
    3828:	b.eq	3810 <cap_to_text@@Base+0x150>  // b.none
    382c:	ldr	x0, [sp, #112]
    3830:	ldr	w0, [x0, x26, lsl #2]
    3834:	cbz	w0, 3810 <cap_to_text@@Base+0x150>
    3838:	mov	x21, x28
    383c:	mov	w0, #0x20                  	// #32
    3840:	strb	w0, [x21], #1
    3844:	cbz	w19, 38fc <cap_to_text@@Base+0x23c>
    3848:	mov	w28, #0x0                   	// #0
    384c:	mov	w22, #0x1                   	// #1
    3850:	b	3860 <cap_to_text@@Base+0x1a0>
    3854:	add	w28, w28, #0x1
    3858:	cmp	w28, w19
    385c:	b.eq	38f8 <cap_to_text@@Base+0x238>  // b.none
    3860:	asr	w2, w28, #5
    3864:	lsl	w3, w22, w28
    3868:	sbfiz	x0, x2, #1, #32
    386c:	add	x2, x0, w2, sxtw
    3870:	add	x2, x27, x2, lsl #2
    3874:	ldp	w0, w9, [x2, #8]
    3878:	tst	w3, w0
    387c:	ldr	w0, [x2, #16]
    3880:	cset	w1, ne  // ne = any
    3884:	tst	w3, w9
    3888:	orr	w2, w1, #0x2
    388c:	csel	w1, w2, w1, ne  // ne = any
    3890:	tst	w3, w0
    3894:	orr	w0, w1, #0x4
    3898:	csel	w1, w0, w1, ne  // ne = any
    389c:	cmp	w1, w23
    38a0:	b.ne	3854 <cap_to_text@@Base+0x194>  // b.any
    38a4:	mov	w0, w28
    38a8:	bl	1ce0 <cap_to_name@plt>
    38ac:	mov	x24, x0
    38b0:	bl	1a30 <strlen@plt>
    38b4:	sub	x3, x21, x20
    38b8:	mov	x10, x0
    38bc:	add	x3, x3, x10
    38c0:	mov	x2, x24
    38c4:	mov	x0, x21
    38c8:	cmp	x3, #0x540
    38cc:	ldr	x1, [sp, #104]
    38d0:	b.hi	3c20 <cap_to_text@@Base+0x560>  // b.pmore
    38d4:	bl	1ab0 <sprintf@plt>
    38d8:	mov	w1, w0
    38dc:	add	w28, w28, #0x1
    38e0:	mov	x0, x24
    38e4:	add	x21, x21, w1, sxtw
    38e8:	bl	1c60 <cap_free@plt>
    38ec:	cmp	w28, w19
    38f0:	b.ne	3860 <cap_to_text@@Base+0x1a0>  // b.any
    38f4:	nop
    38f8:	sub	x28, x21, #0x1
    38fc:	ldr	w0, [sp, #96]
    3900:	bics	w22, w0, w25
    3904:	b.eq	3954 <cap_to_text@@Base+0x294>  // b.none
    3908:	tst	x22, #0x1
    390c:	adrp	x0, 4000 <cap_set_fd@@Base+0x18>
    3910:	adrp	x2, 4000 <cap_set_fd@@Base+0x18>
    3914:	add	x0, x0, #0x3c8
    3918:	add	x2, x2, #0x410
    391c:	adrp	x3, 4000 <cap_set_fd@@Base+0x18>
    3920:	csel	x2, x2, x0, ne  // ne = any
    3924:	add	x3, x3, #0x1a8
    3928:	tst	x22, #0x4
    392c:	adrp	x4, 4000 <cap_set_fd@@Base+0x18>
    3930:	csel	x3, x3, x0, ne  // ne = any
    3934:	tst	x22, #0x2
    3938:	add	x4, x4, #0x1b0
    393c:	adrp	x1, 4000 <cap_set_fd@@Base+0x18>
    3940:	csel	x4, x4, x0, ne  // ne = any
    3944:	add	x1, x1, #0x1c8
    3948:	mov	x0, x28
    394c:	bl	1ab0 <sprintf@plt>
    3950:	add	x28, x28, w0, sxtw
    3954:	ldr	w0, [sp, #100]
    3958:	bics	w21, w25, w0
    395c:	b.eq	39ac <cap_to_text@@Base+0x2ec>  // b.none
    3960:	tst	x21, #0x1
    3964:	adrp	x0, 4000 <cap_set_fd@@Base+0x18>
    3968:	adrp	x2, 4000 <cap_set_fd@@Base+0x18>
    396c:	add	x0, x0, #0x3c8
    3970:	add	x2, x2, #0x410
    3974:	adrp	x3, 4000 <cap_set_fd@@Base+0x18>
    3978:	csel	x2, x2, x0, ne  // ne = any
    397c:	add	x3, x3, #0x1a8
    3980:	tst	x21, #0x4
    3984:	adrp	x4, 4000 <cap_set_fd@@Base+0x18>
    3988:	csel	x3, x3, x0, ne  // ne = any
    398c:	tst	x21, #0x2
    3990:	add	x4, x4, #0x1b0
    3994:	adrp	x1, 4000 <cap_set_fd@@Base+0x18>
    3998:	csel	x4, x4, x0, ne  // ne = any
    399c:	add	x1, x1, #0x1d0
    39a0:	mov	x0, x28
    39a4:	bl	1ab0 <sprintf@plt>
    39a8:	add	x28, x28, w0, sxtw
    39ac:	sub	x0, x28, x20
    39b0:	cmp	x0, #0x540
    39b4:	b.le	3810 <cap_to_text@@Base+0x150>
    39b8:	bl	1cb0 <__errno_location@plt>
    39bc:	mov	x1, x0
    39c0:	mov	w2, #0x22                  	// #34
    39c4:	mov	x0, #0x0                   	// #0
    39c8:	str	w2, [x1]
    39cc:	ldp	x29, x30, [sp]
    39d0:	ldp	x19, x20, [sp, #16]
    39d4:	ldp	x21, x22, [sp, #32]
    39d8:	ldp	x23, x24, [sp, #48]
    39dc:	ldp	x25, x26, [sp, #64]
    39e0:	ldp	x27, x28, [sp, #80]
    39e4:	add	sp, sp, #0x650
    39e8:	ret
    39ec:	ldp	x27, x28, [sp, #80]
    39f0:	bl	1cb0 <__errno_location@plt>
    39f4:	mov	x1, x0
    39f8:	mov	w2, #0x16                  	// #22
    39fc:	mov	x0, #0x0                   	// #0
    3a00:	ldp	x29, x30, [sp]
    3a04:	str	w2, [x1]
    3a08:	add	sp, sp, #0x650
    3a0c:	ret
    3a10:	stp	xzr, xzr, [sp, #136]
    3a14:	cmp	w19, #0x3f
    3a18:	stp	xzr, xzr, [sp, #152]
    3a1c:	b.hi	3c38 <cap_to_text@@Base+0x578>  // b.pmore
    3a20:	mov	w0, w19
    3a24:	add	x3, sp, #0x88
    3a28:	mov	w6, #0x1                   	// #1
    3a2c:	nop
    3a30:	asr	w1, w0, #5
    3a34:	lsl	w2, w6, w0
    3a38:	add	w0, w0, #0x1
    3a3c:	sbfiz	x4, x1, #1, #32
    3a40:	add	x1, x4, w1, sxtw
    3a44:	add	x1, x27, x1, lsl #2
    3a48:	ldp	w4, w5, [x1, #8]
    3a4c:	tst	w2, w4
    3a50:	ldr	w4, [x1, #16]
    3a54:	cset	w1, ne  // ne = any
    3a58:	tst	w2, w5
    3a5c:	orr	w5, w1, #0x2
    3a60:	csel	w1, w5, w1, ne  // ne = any
    3a64:	tst	w2, w4
    3a68:	orr	w2, w1, #0x4
    3a6c:	csel	w1, w2, w1, ne  // ne = any
    3a70:	cmp	w0, #0x40
    3a74:	sxtw	x1, w1
    3a78:	ldr	w2, [x3, x1, lsl #2]
    3a7c:	add	w2, w2, #0x1
    3a80:	str	w2, [x3, x1, lsl #2]
    3a84:	b.ne	3a30 <cap_to_text@@Base+0x370>  // b.any
    3a88:	ldr	w0, [sp, #164]
    3a8c:	adrp	x22, 4000 <cap_set_fd@@Base+0x18>
    3a90:	adrp	x21, 4000 <cap_set_fd@@Base+0x18>
    3a94:	add	x22, x22, #0x3c8
    3a98:	add	x21, x21, #0x1c0
    3a9c:	mov	w25, #0x7                   	// #7
    3aa0:	cbnz	w0, 3abc <cap_to_text@@Base+0x3fc>
    3aa4:	subs	w1, w25, #0x1
    3aa8:	b.eq	3bd4 <cap_to_text@@Base+0x514>  // b.none
    3aac:	add	x0, sp, #0x88
    3ab0:	mov	w25, w1
    3ab4:	ldr	w0, [x0, w1, sxtw #2]
    3ab8:	cbz	w0, 3aa4 <cap_to_text@@Base+0x3e4>
    3abc:	mov	x26, x28
    3ac0:	mov	w0, #0x20                  	// #32
    3ac4:	cmp	w19, #0x3f
    3ac8:	strb	w0, [x26], #1
    3acc:	b.hi	3b84 <cap_to_text@@Base+0x4c4>  // b.pmore
    3ad0:	mov	w23, w19
    3ad4:	mov	w28, #0x1                   	// #1
    3ad8:	b	3ae8 <cap_to_text@@Base+0x428>
    3adc:	add	w23, w23, #0x1
    3ae0:	cmp	w23, #0x40
    3ae4:	b.eq	3b80 <cap_to_text@@Base+0x4c0>  // b.none
    3ae8:	asr	w1, w23, #5
    3aec:	lsl	w2, w28, w23
    3af0:	sbfiz	x0, x1, #1, #32
    3af4:	add	x1, x0, w1, sxtw
    3af8:	add	x1, x27, x1, lsl #2
    3afc:	ldp	w0, w3, [x1, #8]
    3b00:	ldr	w1, [x1, #16]
    3b04:	tst	w2, w0
    3b08:	cset	w0, ne  // ne = any
    3b0c:	tst	w2, w3
    3b10:	orr	w3, w0, #0x2
    3b14:	csel	w0, w3, w0, ne  // ne = any
    3b18:	tst	w2, w1
    3b1c:	orr	w1, w0, #0x4
    3b20:	csel	w0, w1, w0, ne  // ne = any
    3b24:	cmp	w0, w25
    3b28:	b.ne	3adc <cap_to_text@@Base+0x41c>  // b.any
    3b2c:	mov	w0, w23
    3b30:	bl	1ce0 <cap_to_name@plt>
    3b34:	mov	x24, x0
    3b38:	bl	1a30 <strlen@plt>
    3b3c:	sub	x3, x26, x20
    3b40:	mov	x5, x0
    3b44:	add	x3, x3, x5
    3b48:	mov	x2, x24
    3b4c:	mov	x1, x21
    3b50:	mov	x0, x26
    3b54:	cmp	x3, #0x540
    3b58:	b.hi	3c20 <cap_to_text@@Base+0x560>  // b.pmore
    3b5c:	bl	1ab0 <sprintf@plt>
    3b60:	mov	w1, w0
    3b64:	add	w23, w23, #0x1
    3b68:	mov	x0, x24
    3b6c:	add	x26, x26, w1, sxtw
    3b70:	bl	1c60 <cap_free@plt>
    3b74:	cmp	w23, #0x40
    3b78:	b.ne	3ae8 <cap_to_text@@Base+0x428>  // b.any
    3b7c:	nop
    3b80:	sub	x28, x26, #0x1
    3b84:	tst	x25, #0x1
    3b88:	adrp	x2, 4000 <cap_set_fd@@Base+0x18>
    3b8c:	add	x2, x2, #0x410
    3b90:	adrp	x3, 4000 <cap_set_fd@@Base+0x18>
    3b94:	csel	x2, x2, x22, ne  // ne = any
    3b98:	tst	x25, #0x4
    3b9c:	add	x3, x3, #0x1a8
    3ba0:	csel	x3, x3, x22, ne  // ne = any
    3ba4:	tbnz	w25, #1, 3bf0 <cap_to_text@@Base+0x530>
    3ba8:	mov	x0, x28
    3bac:	mov	x4, x22
    3bb0:	adrp	x1, 4000 <cap_set_fd@@Base+0x18>
    3bb4:	add	x1, x1, #0x1c8
    3bb8:	bl	1ab0 <sprintf@plt>
    3bbc:	add	x28, x28, w0, sxtw
    3bc0:	sub	x0, x28, x20
    3bc4:	cmp	x0, #0x540
    3bc8:	b.gt	39b8 <cap_to_text@@Base+0x2f8>
    3bcc:	subs	w1, w25, #0x1
    3bd0:	b.ne	3aac <cap_to_text@@Base+0x3ec>  // b.any
    3bd4:	ldr	x0, [sp, #120]
    3bd8:	cbz	x0, 3be4 <cap_to_text@@Base+0x524>
    3bdc:	sub	x28, x28, x20
    3be0:	str	x28, [x0]
    3be4:	mov	x0, x20
    3be8:	bl	1a80 <_libcap_strdup@plt>
    3bec:	b	39cc <cap_to_text@@Base+0x30c>
    3bf0:	mov	x0, x28
    3bf4:	adrp	x4, 4000 <cap_set_fd@@Base+0x18>
    3bf8:	adrp	x1, 4000 <cap_set_fd@@Base+0x18>
    3bfc:	add	x4, x4, #0x1b0
    3c00:	add	x1, x1, #0x1c8
    3c04:	bl	1ab0 <sprintf@plt>
    3c08:	add	x28, x28, w0, sxtw
    3c0c:	sub	x0, x28, x20
    3c10:	cmp	x0, #0x540
    3c14:	b.gt	39b8 <cap_to_text@@Base+0x2f8>
    3c18:	sub	w1, w25, #0x1
    3c1c:	b	3aac <cap_to_text@@Base+0x3ec>
    3c20:	mov	x0, x24
    3c24:	bl	1c60 <cap_free@plt>
    3c28:	b	39b8 <cap_to_text@@Base+0x2f8>
    3c2c:	mov	w2, #0x0                   	// #0
    3c30:	mov	w3, #0x0                   	// #0
    3c34:	b	377c <cap_to_text@@Base+0xbc>
    3c38:	mov	w0, #0x0                   	// #0
    3c3c:	b	3a8c <cap_to_text@@Base+0x3cc>

0000000000003c40 <cap_mode_name@@Base>:
    3c40:	cmp	w0, #0x2
    3c44:	b.eq	3c84 <cap_mode_name@@Base+0x44>  // b.none
    3c48:	b.hi	3c68 <cap_mode_name@@Base+0x28>  // b.pmore
    3c4c:	cmp	w0, #0x0
    3c50:	adrp	x1, 4000 <cap_set_fd@@Base+0x18>
    3c54:	adrp	x0, 4000 <cap_set_fd@@Base+0x18>
    3c58:	add	x1, x1, #0x1e8
    3c5c:	add	x0, x0, #0x1e0
    3c60:	csel	x0, x0, x1, ne  // ne = any
    3c64:	ret
    3c68:	cmp	w0, #0x3
    3c6c:	adrp	x1, 4000 <cap_set_fd@@Base+0x18>
    3c70:	adrp	x0, 4000 <cap_set_fd@@Base+0x18>
    3c74:	add	x1, x1, #0x208
    3c78:	add	x0, x0, #0x1d8
    3c7c:	csel	x0, x0, x1, ne  // ne = any
    3c80:	ret
    3c84:	adrp	x0, 4000 <cap_set_fd@@Base+0x18>
    3c88:	add	x0, x0, #0x1f8
    3c8c:	ret
    3c90:	mov	x3, x0
    3c94:	stp	x29, x30, [sp, #-16]!
    3c98:	mov	x0, x1
    3c9c:	mov	x29, sp
    3ca0:	ldr	w1, [x3]
    3ca4:	mov	w5, #0x2000000             	// #33554432
    3ca8:	and	w4, w1, #0xff000000
    3cac:	cmp	w4, w5
    3cb0:	b.eq	3cdc <cap_mode_name@@Base+0x9c>  // b.none
    3cb4:	mov	w5, #0x3000000             	// #50331648
    3cb8:	cmp	w4, w5
    3cbc:	b.eq	3d48 <cap_mode_name@@Base+0x108>  // b.none
    3cc0:	mov	w5, #0x1000000             	// #16777216
    3cc4:	cmp	w4, w5
    3cc8:	b.eq	3d3c <cap_mode_name@@Base+0xfc>  // b.none
    3ccc:	bl	1c60 <cap_free@plt>
    3cd0:	mov	x0, #0x0                   	// #0
    3cd4:	ldp	x29, x30, [sp], #16
    3cd8:	ret
    3cdc:	sub	w2, w2, #0x14
    3ce0:	mov	w6, #0x2                   	// #2
    3ce4:	cbnz	w2, 3ccc <cap_mode_name@@Base+0x8c>
    3ce8:	mov	x2, x3
    3cec:	add	x7, x3, w6, uxtw #3
    3cf0:	and	w4, w1, #0x1
    3cf4:	add	x3, x0, #0x8
    3cf8:	ldr	w1, [x2, #8]
    3cfc:	add	x2, x2, #0x8
    3d00:	str	w1, [x3, #8]
    3d04:	ldur	w5, [x2, #-4]
    3d08:	cmp	x2, x7
    3d0c:	str	w5, [x3, #4]
    3d10:	orr	w1, w1, w5
    3d14:	cbz	w4, 3d1c <cap_mode_name@@Base+0xdc>
    3d18:	str	w1, [x3]
    3d1c:	add	x3, x3, #0xc
    3d20:	b.ne	3cf8 <cap_mode_name@@Base+0xb8>  // b.any
    3d24:	cmp	w6, #0x1
    3d28:	b.ne	3cd4 <cap_mode_name@@Base+0x94>  // b.any
    3d2c:	stur	xzr, [x0, #20]
    3d30:	str	wzr, [x0, #28]
    3d34:	ldp	x29, x30, [sp], #16
    3d38:	ret
    3d3c:	sub	w2, w2, #0xc
    3d40:	mov	w6, #0x1                   	// #1
    3d44:	b	3ce4 <cap_mode_name@@Base+0xa4>
    3d48:	ldr	w4, [x3, #20]
    3d4c:	sub	w2, w2, #0x18
    3d50:	mov	w6, #0x2                   	// #2
    3d54:	str	w4, [x0, #32]
    3d58:	b	3ce4 <cap_mode_name@@Base+0xa4>
    3d5c:	nop
    3d60:	stp	x29, x30, [sp, #-16]!
    3d64:	mov	x29, sp
    3d68:	cbz	x1, 3db8 <cap_mode_name@@Base+0x178>
    3d6c:	ldur	w3, [x1, #-4]
    3d70:	mov	x4, x0
    3d74:	mov	w0, #0x90d0                	// #37072
    3d78:	movk	w0, #0xca, lsl #16
    3d7c:	cmp	w3, w0
    3d80:	b.ne	3db8 <cap_mode_name@@Base+0x178>  // b.any
    3d84:	ldr	w0, [x1]
    3d88:	mov	w3, #0x1026                	// #4134
    3d8c:	movk	w3, #0x2007, lsl #16
    3d90:	cmp	w0, w3
    3d94:	b.eq	3dd4 <cap_mode_name@@Base+0x194>  // b.none
    3d98:	mov	w3, #0x522                 	// #1314
    3d9c:	movk	w3, #0x2008, lsl #16
    3da0:	cmp	w0, w3
    3da4:	b.eq	3dd4 <cap_mode_name@@Base+0x194>  // b.none
    3da8:	mov	w3, #0x330                 	// #816
    3dac:	movk	w3, #0x1998, lsl #16
    3db0:	cmp	w0, w3
    3db4:	b.eq	3e78 <cap_mode_name@@Base+0x238>  // b.none
    3db8:	bl	1cb0 <__errno_location@plt>
    3dbc:	mov	x1, x0
    3dc0:	mov	w2, #0x16                  	// #22
    3dc4:	mov	w0, #0xffffffff            	// #-1
    3dc8:	str	w2, [x1]
    3dcc:	ldp	x29, x30, [sp], #16
    3dd0:	ret
    3dd4:	mov	w0, #0x14                  	// #20
    3dd8:	str	w0, [x2]
    3ddc:	ldr	w0, [x1, #32]
    3de0:	cbz	w0, 3eb0 <cap_mode_name@@Base+0x270>
    3de4:	ldr	w3, [x1]
    3de8:	mov	w0, #0x521                 	// #1313
    3dec:	movk	w0, #0x2008, lsl #16
    3df0:	cmp	w3, w0
    3df4:	b.ls	3db8 <cap_mode_name@@Base+0x178>  // b.plast
    3df8:	mov	w0, #0x18                  	// #24
    3dfc:	str	w0, [x2]
    3e00:	mov	w6, #0x3000000             	// #50331648
    3e04:	ldr	w0, [x1, #32]
    3e08:	ldr	w5, [x1, #8]
    3e0c:	str	w0, [x4, #20]
    3e10:	ldr	w0, [x1, #20]
    3e14:	mov	w2, #0x2                   	// #2
    3e18:	orr	w5, w5, w0
    3e1c:	nop
    3e20:	add	x1, x1, #0x8
    3e24:	add	x2, x4, w2, uxtw #3
    3e28:	mov	x3, x4
    3e2c:	ldr	w0, [x1, #4]
    3e30:	add	x3, x3, #0x8
    3e34:	stur	w0, [x3, #-4]
    3e38:	ldr	w7, [x1, #8]
    3e3c:	str	w7, [x3]
    3e40:	orr	w0, w0, w7
    3e44:	cbz	w5, 3e54 <cap_mode_name@@Base+0x214>
    3e48:	ldr	w7, [x1]
    3e4c:	bics	wzr, w0, w7
    3e50:	b.ne	3db8 <cap_mode_name@@Base+0x178>  // b.any
    3e54:	add	x1, x1, #0xc
    3e58:	cmp	x2, x3
    3e5c:	b.ne	3e2c <cap_mode_name@@Base+0x1ec>  // b.any
    3e60:	cbz	w5, 3e68 <cap_mode_name@@Base+0x228>
    3e64:	orr	w6, w6, #0x1
    3e68:	str	w6, [x4]
    3e6c:	mov	w0, #0x0                   	// #0
    3e70:	ldp	x29, x30, [sp], #16
    3e74:	ret
    3e78:	mov	w0, #0xc                   	// #12
    3e7c:	str	w0, [x2]
    3e80:	ldr	w0, [x1, #32]
    3e84:	cbnz	w0, 3de4 <cap_mode_name@@Base+0x1a4>
    3e88:	ldr	w0, [x1, #20]
    3e8c:	ldr	w5, [x1, #8]
    3e90:	cbnz	w0, 3db8 <cap_mode_name@@Base+0x178>
    3e94:	ldr	w0, [x1, #28]
    3e98:	cbnz	w0, 3db8 <cap_mode_name@@Base+0x178>
    3e9c:	ldr	w0, [x1, #24]
    3ea0:	mov	w6, #0x1000000             	// #16777216
    3ea4:	mov	w2, #0x1                   	// #1
    3ea8:	cbz	w0, 3e20 <cap_mode_name@@Base+0x1e0>
    3eac:	b	3db8 <cap_mode_name@@Base+0x178>
    3eb0:	ldr	w5, [x1, #8]
    3eb4:	mov	w6, #0x2000000             	// #33554432
    3eb8:	b	3e10 <cap_mode_name@@Base+0x1d0>
    3ebc:	nop

0000000000003ec0 <cap_get_fd@@Base>:
    3ec0:	stp	x29, x30, [sp, #-80]!
    3ec4:	mov	x29, sp
    3ec8:	stp	x19, x20, [sp, #16]
    3ecc:	mov	w20, w0
    3ed0:	bl	1ba0 <cap_init@plt>
    3ed4:	mov	x19, x0
    3ed8:	cbz	x0, 3f14 <cap_get_fd@@Base+0x54>
    3edc:	str	x21, [sp, #32]
    3ee0:	add	x21, sp, #0x38
    3ee4:	mov	w0, w20
    3ee8:	mov	x2, x21
    3eec:	adrp	x1, 4000 <cap_set_fd@@Base+0x18>
    3ef0:	mov	x3, #0x18                  	// #24
    3ef4:	add	x1, x1, #0x4c0
    3ef8:	bl	1c20 <fgetxattr@plt>
    3efc:	cmp	w0, #0x3
    3f00:	b.gt	3f24 <cap_get_fd@@Base+0x64>
    3f04:	mov	x0, x19
    3f08:	bl	1c60 <cap_free@plt>
    3f0c:	ldr	x21, [sp, #32]
    3f10:	mov	x19, #0x0                   	// #0
    3f14:	mov	x0, x19
    3f18:	ldp	x19, x20, [sp, #16]
    3f1c:	ldp	x29, x30, [sp], #80
    3f20:	ret
    3f24:	mov	w2, w0
    3f28:	mov	x1, x19
    3f2c:	mov	x0, x21
    3f30:	bl	3c90 <cap_mode_name@@Base+0x50>
    3f34:	mov	x19, x0
    3f38:	mov	x0, x19
    3f3c:	ldp	x19, x20, [sp, #16]
    3f40:	ldr	x21, [sp, #32]
    3f44:	ldp	x29, x30, [sp], #80
    3f48:	ret
    3f4c:	nop

0000000000003f50 <cap_get_file@@Base>:
    3f50:	stp	x29, x30, [sp, #-80]!
    3f54:	mov	x29, sp
    3f58:	stp	x19, x20, [sp, #16]
    3f5c:	mov	x20, x0
    3f60:	bl	1ba0 <cap_init@plt>
    3f64:	mov	x19, x0
    3f68:	cbz	x0, 3fa4 <cap_get_file@@Base+0x54>
    3f6c:	str	x21, [sp, #32]
    3f70:	add	x21, sp, #0x38
    3f74:	mov	x0, x20
    3f78:	mov	x2, x21
    3f7c:	adrp	x1, 4000 <cap_set_fd@@Base+0x18>
    3f80:	mov	x3, #0x18                  	// #24
    3f84:	add	x1, x1, #0x4c0
    3f88:	bl	1bb0 <getxattr@plt>
    3f8c:	cmp	w0, #0x3
    3f90:	b.gt	3fb4 <cap_get_file@@Base+0x64>
    3f94:	mov	x0, x19
    3f98:	bl	1c60 <cap_free@plt>
    3f9c:	ldr	x21, [sp, #32]
    3fa0:	mov	x19, #0x0                   	// #0
    3fa4:	mov	x0, x19
    3fa8:	ldp	x19, x20, [sp, #16]
    3fac:	ldp	x29, x30, [sp], #80
    3fb0:	ret
    3fb4:	mov	w2, w0
    3fb8:	mov	x1, x19
    3fbc:	mov	x0, x21
    3fc0:	bl	3c90 <cap_mode_name@@Base+0x50>
    3fc4:	mov	x19, x0
    3fc8:	mov	x0, x19
    3fcc:	ldp	x19, x20, [sp, #16]
    3fd0:	ldr	x21, [sp, #32]
    3fd4:	ldp	x29, x30, [sp], #80
    3fd8:	ret
    3fdc:	nop

0000000000003fe0 <cap_get_nsowner@@Base>:
    3fe0:	ldr	w0, [x0, #32]
    3fe4:	ret

0000000000003fe8 <cap_set_fd@@Base>:
    3fe8:	stp	x29, x30, [sp, #-208]!
    3fec:	mov	x29, sp
    3ff0:	add	x2, sp, #0x50
    3ff4:	stp	x19, x20, [sp, #16]
    3ff8:	mov	w19, w0
    3ffc:	mov	x20, x1
    4000:	mov	w1, w0
    4004:	mov	w0, #0x0                   	// #0
    4008:	bl	1c10 <__fxstat64@plt>
    400c:	cbnz	w0, 408c <cap_set_fd@@Base+0xa4>
    4010:	ldr	w0, [sp, #96]
    4014:	and	w0, w0, #0xf000
    4018:	cmp	w0, #0x8, lsl #12
    401c:	b.ne	4094 <cap_set_fd@@Base+0xac>  // b.any
    4020:	cbz	x20, 406c <cap_set_fd@@Base+0x84>
    4024:	str	x21, [sp, #32]
    4028:	add	x21, sp, #0x38
    402c:	mov	x1, x20
    4030:	add	x2, sp, #0x34
    4034:	mov	x0, x21
    4038:	bl	3d60 <cap_mode_name@@Base+0x120>
    403c:	cbnz	w0, 4088 <cap_set_fd@@Base+0xa0>
    4040:	ldrsw	x3, [sp, #52]
    4044:	mov	x2, x21
    4048:	mov	w0, w19
    404c:	adrp	x1, 4000 <cap_set_fd@@Base+0x18>
    4050:	mov	w4, #0x0                   	// #0
    4054:	add	x1, x1, #0x4c0
    4058:	bl	1c40 <fsetxattr@plt>
    405c:	ldr	x21, [sp, #32]
    4060:	ldp	x19, x20, [sp, #16]
    4064:	ldp	x29, x30, [sp], #208
    4068:	ret
    406c:	mov	w0, w19
    4070:	adrp	x1, 4000 <cap_set_fd@@Base+0x18>
    4074:	add	x1, x1, #0x4c0
    4078:	bl	1b80 <fremovexattr@plt>
    407c:	ldp	x19, x20, [sp, #16]
    4080:	ldp	x29, x30, [sp], #208
    4084:	ret
    4088:	ldr	x21, [sp, #32]
    408c:	mov	w0, #0xffffffff            	// #-1
    4090:	b	4060 <cap_set_fd@@Base+0x78>
    4094:	bl	1cb0 <__errno_location@plt>
    4098:	mov	x1, x0
    409c:	mov	w2, #0x16                  	// #22
    40a0:	mov	w0, #0xffffffff            	// #-1
    40a4:	str	w2, [x1]
    40a8:	b	4060 <cap_set_fd@@Base+0x78>
    40ac:	nop

00000000000040b0 <cap_set_file@@Base>:
    40b0:	stp	x29, x30, [sp, #-208]!
    40b4:	mov	x29, sp
    40b8:	add	x2, sp, #0x50
    40bc:	stp	x19, x20, [sp, #16]
    40c0:	mov	x19, x0
    40c4:	mov	x20, x1
    40c8:	mov	x1, x0
    40cc:	mov	w0, #0x0                   	// #0
    40d0:	bl	1be0 <__lxstat64@plt>
    40d4:	cbnz	w0, 4154 <cap_set_file@@Base+0xa4>
    40d8:	ldr	w0, [sp, #96]
    40dc:	and	w0, w0, #0xf000
    40e0:	cmp	w0, #0x8, lsl #12
    40e4:	b.ne	415c <cap_set_file@@Base+0xac>  // b.any
    40e8:	cbz	x20, 4134 <cap_set_file@@Base+0x84>
    40ec:	str	x21, [sp, #32]
    40f0:	add	x21, sp, #0x38
    40f4:	mov	x1, x20
    40f8:	add	x2, sp, #0x34
    40fc:	mov	x0, x21
    4100:	bl	3d60 <cap_mode_name@@Base+0x120>
    4104:	cbnz	w0, 4150 <cap_set_file@@Base+0xa0>
    4108:	ldrsw	x3, [sp, #52]
    410c:	mov	x2, x21
    4110:	mov	x0, x19
    4114:	adrp	x1, 4000 <cap_set_fd@@Base+0x18>
    4118:	mov	w4, #0x0                   	// #0
    411c:	add	x1, x1, #0x4c0
    4120:	bl	1b10 <setxattr@plt>
    4124:	ldr	x21, [sp, #32]
    4128:	ldp	x19, x20, [sp, #16]
    412c:	ldp	x29, x30, [sp], #208
    4130:	ret
    4134:	mov	x0, x19
    4138:	adrp	x1, 4000 <cap_set_fd@@Base+0x18>
    413c:	add	x1, x1, #0x4c0
    4140:	bl	1a00 <removexattr@plt>
    4144:	ldp	x19, x20, [sp, #16]
    4148:	ldp	x29, x30, [sp], #208
    414c:	ret
    4150:	ldr	x21, [sp, #32]
    4154:	mov	w0, #0xffffffff            	// #-1
    4158:	b	4128 <cap_set_file@@Base+0x78>
    415c:	bl	1cb0 <__errno_location@plt>
    4160:	mov	x1, x0
    4164:	mov	w2, #0x16                  	// #22
    4168:	mov	w0, #0xffffffff            	// #-1
    416c:	str	w2, [x1]
    4170:	b	4128 <cap_set_file@@Base+0x78>
    4174:	nop

0000000000004178 <cap_set_nsowner@@Base>:
    4178:	mov	x2, x0
    417c:	mov	w0, #0x0                   	// #0
    4180:	str	w1, [x2, #32]
    4184:	ret

Disassembly of section .fini:

0000000000004188 <.fini>:
    4188:	stp	x29, x30, [sp, #-16]!
    418c:	mov	x29, sp
    4190:	ldp	x29, x30, [sp], #16
    4194:	ret
