
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//SJIS.so_clang_-Os:     file format elf64-littleaarch64


Disassembly of section .init:

00000000000006b0 <.init>:
 6b0:	stp	x29, x30, [sp, #-16]!
 6b4:	mov	x29, sp
 6b8:	bl	760 <__assert_fail@plt+0x10>
 6bc:	ldp	x29, x30, [sp], #16
 6c0:	ret

Disassembly of section .plt:

00000000000006d0 <__cxa_finalize@plt-0x20>:
 6d0:	stp	x16, x30, [sp, #-16]!
 6d4:	adrp	x16, 25000 <gconv@@Base+0x246f0>
 6d8:	ldr	x17, [x16, #4088]
 6dc:	add	x16, x16, #0xff8
 6e0:	br	x17
 6e4:	nop
 6e8:	nop
 6ec:	nop

00000000000006f0 <__cxa_finalize@plt>:
 6f0:	adrp	x16, 26000 <__cxa_finalize@GLIBC_2.17>
 6f4:	ldr	x17, [x16]
 6f8:	add	x16, x16, #0x0
 6fc:	br	x17

0000000000000700 <__gconv_transliterate@plt>:
 700:	adrp	x16, 26000 <__cxa_finalize@GLIBC_2.17>
 704:	ldr	x17, [x16, #8]
 708:	add	x16, x16, #0x8
 70c:	br	x17

0000000000000710 <__stack_chk_fail@plt>:
 710:	adrp	x16, 26000 <__cxa_finalize@GLIBC_2.17>
 714:	ldr	x17, [x16, #16]
 718:	add	x16, x16, #0x10
 71c:	br	x17

0000000000000720 <__gmon_start__@plt>:
 720:	adrp	x16, 26000 <__cxa_finalize@GLIBC_2.17>
 724:	ldr	x17, [x16, #24]
 728:	add	x16, x16, #0x18
 72c:	br	x17

0000000000000730 <strcmp@plt>:
 730:	adrp	x16, 26000 <__cxa_finalize@GLIBC_2.17>
 734:	ldr	x17, [x16, #32]
 738:	add	x16, x16, #0x20
 73c:	br	x17

0000000000000740 <_dl_mcount_wrapper_check@plt>:
 740:	adrp	x16, 26000 <__cxa_finalize@GLIBC_2.17>
 744:	ldr	x17, [x16, #40]
 748:	add	x16, x16, #0x28
 74c:	br	x17

0000000000000750 <__assert_fail@plt>:
 750:	adrp	x16, 26000 <__cxa_finalize@GLIBC_2.17>
 754:	ldr	x17, [x16, #48]
 758:	add	x16, x16, #0x30
 75c:	br	x17

Disassembly of section .text:

0000000000000760 <gconv_init@@Base-0x120>:
     760:	adrp	x0, 25000 <gconv@@Base+0x246f0>
     764:	ldr	x0, [x0, #4048]
     768:	cbz	x0, 770 <__assert_fail@plt+0x20>
     76c:	b	720 <__gmon_start__@plt>
     770:	ret
     774:	nop
     778:	adrp	x0, 26000 <gconv@@Base+0x256f0>
     77c:	add	x0, x0, #0x40
     780:	adrp	x1, 26000 <gconv@@Base+0x256f0>
     784:	add	x1, x1, #0x40
     788:	cmp	x1, x0
     78c:	b.eq	7a4 <__assert_fail@plt+0x54>  // b.none
     790:	adrp	x1, 25000 <gconv@@Base+0x246f0>
     794:	ldr	x1, [x1, #4024]
     798:	cbz	x1, 7a4 <__assert_fail@plt+0x54>
     79c:	mov	x16, x1
     7a0:	br	x16
     7a4:	ret
     7a8:	adrp	x0, 26000 <gconv@@Base+0x256f0>
     7ac:	add	x0, x0, #0x40
     7b0:	adrp	x1, 26000 <gconv@@Base+0x256f0>
     7b4:	add	x1, x1, #0x40
     7b8:	sub	x1, x1, x0
     7bc:	lsr	x2, x1, #63
     7c0:	add	x1, x2, x1, asr #3
     7c4:	cmp	xzr, x1, asr #1
     7c8:	asr	x1, x1, #1
     7cc:	b.eq	7e4 <__assert_fail@plt+0x94>  // b.none
     7d0:	adrp	x2, 25000 <gconv@@Base+0x246f0>
     7d4:	ldr	x2, [x2, #4064]
     7d8:	cbz	x2, 7e4 <__assert_fail@plt+0x94>
     7dc:	mov	x16, x2
     7e0:	br	x16
     7e4:	ret
     7e8:	stp	x29, x30, [sp, #-32]!
     7ec:	mov	x29, sp
     7f0:	str	x19, [sp, #16]
     7f4:	adrp	x19, 26000 <gconv@@Base+0x256f0>
     7f8:	ldrb	w0, [x19, #64]
     7fc:	cbnz	w0, 824 <__assert_fail@plt+0xd4>
     800:	adrp	x0, 25000 <gconv@@Base+0x246f0>
     804:	ldr	x0, [x0, #4032]
     808:	cbz	x0, 818 <__assert_fail@plt+0xc8>
     80c:	adrp	x0, 26000 <gconv@@Base+0x256f0>
     810:	ldr	x0, [x0, #56]
     814:	bl	6f0 <__cxa_finalize@plt>
     818:	bl	778 <__assert_fail@plt+0x28>
     81c:	mov	w0, #0x1                   	// #1
     820:	strb	w0, [x19, #64]
     824:	ldr	x19, [sp, #16]
     828:	ldp	x29, x30, [sp], #32
     82c:	ret
     830:	b	7a8 <__assert_fail@plt+0x58>
     834:	nop
     838:	tst	w1, #0x80
     83c:	and	w1, w1, #0xff
     840:	b.ne	85c <__assert_fail@plt+0x10c>  // b.any
     844:	cmp	w1, #0x5c
     848:	b.eq	878 <__assert_fail@plt+0x128>  // b.none
     84c:	cmp	w1, #0x7e
     850:	mov	w0, #0x203e                	// #8254
     854:	csel	w0, w1, w0, ne  // ne = any
     858:	ret
     85c:	add	w0, w1, #0x5f
     860:	mov	w2, #0xfec0                	// #65216
     864:	and	w0, w0, #0xff
     868:	add	w1, w1, w2
     86c:	cmp	w0, #0x3f
     870:	csinv	w0, w1, wzr, cc  // cc = lo, ul, last
     874:	ret
     878:	mov	w0, #0xa5                  	// #165
     87c:	ret

0000000000000880 <gconv_init@@Base>:
     880:	stp	x29, x30, [sp, #-32]!
     884:	mov	x29, sp
     888:	stp	x19, x20, [sp, #16]
     88c:	mov	x19, x0
     890:	adrp	x20, 1000 <gconv@@Base+0x6f0>
     894:	ldr	x0, [x0, #24]
     898:	add	x20, x20, #0xcb8
     89c:	mov	x1, x20
     8a0:	bl	730 <strcmp@plt>
     8a4:	cbnz	w0, 8dc <gconv_init@@Base+0x5c>
     8a8:	mov	x2, #0x1                   	// #1
     8ac:	adrp	x0, 0 <__cxa_finalize@plt-0x6f0>
     8b0:	movk	x2, #0x2, lsl #32
     8b4:	add	x0, x0, #0x838
     8b8:	mov	x1, #0x400000004           	// #17179869188
     8bc:	str	x0, [x19, #48]
     8c0:	stp	x2, x1, [x19, #72]
     8c4:	str	xzr, [x19, #96]
     8c8:	mov	w0, #0x0                   	// #0
     8cc:	str	wzr, [x19, #88]
     8d0:	ldp	x19, x20, [sp, #16]
     8d4:	ldp	x29, x30, [sp], #32
     8d8:	ret
     8dc:	ldr	x0, [x19, #32]
     8e0:	mov	x1, x20
     8e4:	bl	730 <strcmp@plt>
     8e8:	cbnz	w0, 908 <gconv_init@@Base+0x88>
     8ec:	mov	x1, #0x1                   	// #1
     8f0:	mov	x0, #0xffffffffffffffff    	// #-1
     8f4:	mov	x2, #0x400000004           	// #17179869188
     8f8:	movk	x1, #0x2, lsl #32
     8fc:	stp	x2, x1, [x19, #72]
     900:	str	x0, [x19, #96]
     904:	b	8c8 <gconv_init@@Base+0x48>
     908:	mov	w0, #0x1                   	// #1
     90c:	b	8d0 <gconv_init@@Base+0x50>

0000000000000910 <gconv@@Base>:
     910:	stp	x29, x30, [sp, #-240]!
     914:	mov	x18, x2
     918:	mov	x29, sp
     91c:	stp	x21, x22, [sp, #32]
     920:	mov	x21, x1
     924:	adrp	x1, 25000 <gconv@@Base+0x246f0>
     928:	stp	x23, x24, [sp, #48]
     92c:	ldr	w24, [x21, #16]
     930:	ldr	x1, [x1, #4056]
     934:	stp	x27, x28, [sp, #80]
     938:	mov	x28, x0
     93c:	ldr	x0, [x1]
     940:	str	x0, [sp, #232]
     944:	mov	x0, #0x0                   	// #0
     948:	add	x1, x28, #0x68
     94c:	add	x0, x21, #0x30
     950:	stp	x19, x20, [sp, #16]
     954:	mov	x27, #0x0                   	// #0
     958:	str	x4, [sp, #96]
     95c:	mov	x20, x3
     960:	str	w7, [sp, #116]
     964:	stp	x5, x1, [sp, #120]
     968:	str	x0, [sp, #136]
     96c:	tbnz	w24, #0, 98c <gconv@@Base+0x7c>
     970:	ldr	x0, [x28, #104]
     974:	ldr	x27, [x28, #144]
     978:	cbz	x0, 98c <gconv@@Base+0x7c>
     97c:	adrp	x0, 25000 <gconv@@Base+0x246f0>
     980:	ldr	x0, [x0, #4040]
     984:	ldr	x0, [x0]
     988:	eor	x27, x27, x0
     98c:	cbnz	w6, 12c4 <gconv@@Base+0x9b4>
     990:	ldr	x2, [sp, #96]
     994:	add	x0, sp, #0xc0
     998:	ldr	x3, [sp, #120]
     99c:	cmp	x2, #0x0
     9a0:	csel	x1, x21, x2, eq  // eq = none
     9a4:	stp	x25, x26, [sp, #64]
     9a8:	cmp	x3, #0x0
     9ac:	csel	x0, x0, xzr, ne  // ne = any
     9b0:	ldr	x26, [x1]
     9b4:	str	x0, [sp, #152]
     9b8:	ldr	w0, [sp, #116]
     9bc:	str	xzr, [sp, #192]
     9c0:	ldr	x25, [x18]
     9c4:	ldr	x22, [x21, #8]
     9c8:	cbnz	w0, d8c <gconv@@Base+0x47c>
     9cc:	mov	w7, w24
     9d0:	mov	x24, x26
     9d4:	mov	x26, x28
     9d8:	adrp	x0, 2000 <gconv@@Base+0x16f0>
     9dc:	add	x0, x0, #0xf58
     9e0:	str	x0, [sp, #144]
     9e4:	add	x13, x0, #0x898
     9e8:	add	x0, sp, #0xd8
     9ec:	str	x0, [sp, #176]
     9f0:	mov	x28, x25
     9f4:	ldr	x0, [x26, #96]
     9f8:	mov	x23, x18
     9fc:	mov	x25, x13
     a00:	cbz	x0, b2c <gconv@@Base+0x21c>
     a04:	stp	x28, x24, [sp, #208]
     a08:	mov	x19, x24
     a0c:	cmp	x20, x28
     a10:	b.eq	1400 <gconv@@Base+0xaf0>  // b.none
     a14:	mov	x0, x28
     a18:	add	x3, sp, #0xd0
     a1c:	mov	w8, #0x4                   	// #4
     a20:	add	x5, x0, #0x4
     a24:	cmp	x20, x5
     a28:	b.cc	d58 <gconv@@Base+0x448>  // b.lo, b.ul, b.last
     a2c:	cmp	x22, x19
     a30:	b.ls	c9c <gconv@@Base+0x38c>  // b.plast
     a34:	ldr	w2, [x0]
     a38:	cmp	w2, #0xf7
     a3c:	b.ls	c3c <gconv@@Base+0x32c>  // b.plast
     a40:	sub	w4, w2, #0x391
     a44:	cmp	w4, #0xc0
     a48:	b.hi	c70 <gconv@@Base+0x360>  // b.pmore
     a4c:	ldr	x0, [sp, #144]
     a50:	ubfiz	x4, x4, #1, #32
     a54:	add	x2, x0, #0x510
     a58:	add	x1, x2, x4
     a5c:	ldrb	w5, [x2, x4]
     a60:	cbz	w5, c50 <gconv@@Base+0x340>
     a64:	strb	w5, [x19]
     a68:	ldrb	w2, [x1, #1]
     a6c:	cbz	w2, a88 <gconv@@Base+0x178>
     a70:	ldr	x19, [sp, #216]
     a74:	add	x1, x19, #0x1
     a78:	cmp	x22, x1
     a7c:	b.ls	c9c <gconv@@Base+0x38c>  // b.plast
     a80:	str	x1, [sp, #216]
     a84:	strb	w2, [x19, #1]
     a88:	ldp	x0, x19, [sp, #208]
     a8c:	add	x0, x0, #0x4
     a90:	add	x19, x19, #0x1
     a94:	stp	x0, x19, [sp, #208]
     a98:	cmp	x20, x0
     a9c:	b.ne	a20 <gconv@@Base+0x110>  // b.any
     aa0:	str	x0, [x23]
     aa4:	ldr	x0, [sp, #96]
     aa8:	cbnz	x0, bfc <gconv@@Base+0x2ec>
     aac:	ldp	w1, w0, [x21, #16]
     ab0:	add	w0, w0, #0x1
     ab4:	str	w0, [x21, #20]
     ab8:	tbnz	w1, #0, f5c <gconv@@Base+0x64c>
     abc:	cmp	x24, x19
     ac0:	b.cs	f94 <gconv@@Base+0x684>  // b.hs, b.nlast
     ac4:	ldr	x1, [x21]
     ac8:	mov	x0, x27
     acc:	str	w8, [sp, #104]
     ad0:	str	x1, [sp, #200]
     ad4:	bl	740 <_dl_mcount_wrapper_check@plt>
     ad8:	ldp	x5, x0, [sp, #120]
     adc:	mov	x3, x19
     ae0:	ldr	w7, [sp, #116]
     ae4:	add	x2, sp, #0xc8
     ae8:	ldr	x1, [sp, #136]
     aec:	mov	w6, #0x0                   	// #0
     af0:	mov	x4, #0x0                   	// #0
     af4:	blr	x27
     af8:	mov	w7, w0
     afc:	ldr	w8, [sp, #104]
     b00:	cmp	w0, #0x4
     b04:	b.eq	d64 <gconv@@Base+0x454>  // b.none
     b08:	ldr	x12, [sp, #200]
     b0c:	cmp	x12, x19
     b10:	b.ne	e8c <gconv@@Base+0x57c>  // b.any
     b14:	cbnz	w7, 1344 <gconv@@Base+0xa34>
     b18:	ldr	x0, [x26, #96]
     b1c:	ldr	w7, [x21, #16]
     b20:	ldr	x24, [x21]
     b24:	ldr	x28, [x23]
     b28:	cbnz	x0, a04 <gconv@@Base+0xf4>
     b2c:	cmp	x20, x28
     b30:	b.eq	1640 <gconv@@Base+0xd30>  // b.none
     b34:	add	x3, x24, #0x4
     b38:	cmp	x22, x3
     b3c:	b.cc	1264 <gconv@@Base+0x954>  // b.lo, b.ul, b.last
     b40:	adrp	x4, 1000 <gconv@@Base+0x6f0>
     b44:	add	x4, x4, #0xe58
     b48:	add	x1, x4, #0x640
     b4c:	mov	x2, x28
     b50:	mov	x19, x24
     b54:	str	x1, [sp, #160]
     b58:	add	x1, x4, #0x580
     b5c:	and	w0, w7, #0x2
     b60:	mov	w8, #0x4                   	// #4
     b64:	mov	w10, #0xea                  	// #234
     b68:	mov	x11, #0xffffffffffff7b41    	// #-33983
     b6c:	mov	x14, #0xffffffffffff7703    	// #-35069
     b70:	mov	x17, #0xffffffffffff6003    	// #-40957
     b74:	mov	x16, #0x4042                	// #16450
     b78:	mov	x15, #0xeaa4                	// #60068
     b7c:	mov	x30, #0x84be                	// #33982
     b80:	mov	x13, #0x88fc                	// #35068
     b84:	mov	x18, #0x9ffc                	// #40956
     b88:	mov	w9, #0xffff9f00            	// #-24832
     b8c:	mov	w7, #0xfec0                	// #65216
     b90:	str	x1, [sp, #104]
     b94:	adrp	x1, 13000 <gconv@@Base+0x126f0>
     b98:	add	x1, x1, #0x908
     b9c:	str	x1, [sp, #168]
     ba0:	ldrb	w1, [x2]
     ba4:	cmp	w1, #0x5c
     ba8:	b.eq	d74 <gconv@@Base+0x464>  // b.none
     bac:	cmp	w1, #0x7e
     bb0:	b.eq	d80 <gconv@@Base+0x470>  // b.none
     bb4:	cmp	w1, #0x7f
     bb8:	b.ls	bcc <gconv@@Base+0x2bc>  // b.plast
     bbc:	sub	w5, w1, #0xa1
     bc0:	cmp	w5, #0x3e
     bc4:	b.hi	ca8 <gconv@@Base+0x398>  // b.pmore
     bc8:	add	w1, w1, w7
     bcc:	add	x2, x2, #0x1
     bd0:	str	w1, [x19]
     bd4:	mov	x19, x3
     bd8:	cmp	x20, x2
     bdc:	b.eq	bf0 <gconv@@Base+0x2e0>  // b.none
     be0:	add	x3, x19, #0x4
     be4:	cmp	x22, x3
     be8:	b.cs	ba0 <gconv@@Base+0x290>  // b.hs, b.nlast
     bec:	mov	w8, #0x5                   	// #5
     bf0:	str	x2, [x23]
     bf4:	ldr	x0, [sp, #96]
     bf8:	cbz	x0, aac <gconv@@Base+0x19c>
     bfc:	mov	w23, w8
     c00:	ldp	x25, x26, [sp, #64]
     c04:	str	x19, [x0]
     c08:	adrp	x0, 25000 <gconv@@Base+0x246f0>
     c0c:	ldr	x0, [x0, #4056]
     c10:	ldr	x1, [sp, #232]
     c14:	ldr	x0, [x0]
     c18:	eor	x0, x1, x0
     c1c:	cbnz	x0, 1b60 <gconv@@Base+0x1250>
     c20:	mov	w0, w23
     c24:	ldp	x19, x20, [sp, #16]
     c28:	ldp	x21, x22, [sp, #32]
     c2c:	ldp	x23, x24, [sp, #48]
     c30:	ldp	x27, x28, [sp, #80]
     c34:	ldp	x29, x30, [sp], #240
     c38:	ret
     c3c:	ubfiz	x4, x2, #1, #32
     c40:	add	x1, x25, x4
     c44:	ldrb	w5, [x25, x4]
     c48:	cbnz	w5, a64 <gconv@@Base+0x154>
     c4c:	cbz	w2, a64 <gconv@@Base+0x154>
     c50:	ldr	x0, [sp, #152]
     c54:	cbz	x0, 17ec <gconv@@Base+0xedc>
     c58:	ldr	w0, [x21, #16]
     c5c:	tbnz	w0, #3, 121c <gconv@@Base+0x90c>
     c60:	ldr	x0, [sp, #208]
     c64:	tbnz	w7, #1, 1278 <gconv@@Base+0x968>
     c68:	mov	w8, #0x6                   	// #6
     c6c:	b	aa0 <gconv@@Base+0x190>
     c70:	mov	w10, #0xffffdff0            	// #-8208
     c74:	add	w1, w2, w10
     c78:	mov	w0, #0x7f90                	// #32656
     c7c:	cmp	w1, w0
     c80:	b.hi	d28 <gconv@@Base+0x418>  // b.pmore
     c84:	ubfiz	x2, x1, #1, #32
     c88:	adrp	x0, 3000 <gconv@@Base+0x26f0>
     c8c:	add	x0, x0, #0x9e0
     c90:	add	x1, x2, x0
     c94:	ldrb	w5, [x2, x0]
     c98:	b	a60 <gconv@@Base+0x150>
     c9c:	mov	w8, #0x5                   	// #5
     ca0:	ldr	x0, [sp, #208]
     ca4:	b	aa0 <gconv@@Base+0x190>
     ca8:	and	w5, w1, #0xffffffdf
     cac:	and	w5, w5, #0xff
     cb0:	cmp	w5, #0x80
     cb4:	ccmp	w1, w10, #0x2, ne  // ne = any
     cb8:	b.hi	f9c <gconv@@Base+0x68c>  // b.pmore
     cbc:	add	x12, x2, #0x1
     cc0:	cmp	x20, x12
     cc4:	b.ls	1314 <gconv@@Base+0xa04>  // b.plast
     cc8:	ldrb	w5, [x2, #1]
     ccc:	cmp	w5, #0x3f
     cd0:	add	w6, w5, w1, lsl #8
     cd4:	b.ls	1320 <gconv@@Base+0xa10>  // b.plast
     cd8:	add	x12, x6, x11
     cdc:	cmp	x12, #0x3df
     ce0:	b.ls	f44 <gconv@@Base+0x634>  // b.plast
     ce4:	add	x12, x6, x14
     ce8:	cmp	x12, #0x42
     cec:	b.ls	f44 <gconv@@Base+0x634>  // b.plast
     cf0:	add	x12, x6, x17
     cf4:	cmp	x12, x16
     cf8:	ccmp	x6, x15, #0x2, hi  // hi = pmore
     cfc:	b.hi	f44 <gconv@@Base+0x634>  // b.pmore
     d00:	add	w1, w1, w1, lsl #1
     d04:	cmp	x6, x30
     d08:	lsl	w1, w1, #6
     d0c:	b.hi	fc0 <gconv@@Base+0x6b0>  // b.pmore
     d10:	add	w5, w5, w9
     d14:	add	w1, w5, w1
     d18:	ldrh	w1, [x4, x1, lsl #1]
     d1c:	cbz	w1, f44 <gconv@@Base+0x634>
     d20:	add	x2, x2, #0x2
     d24:	b	bd0 <gconv@@Base+0x2c0>
     d28:	mov	w9, #0xffff00ff            	// #-65281
     d2c:	add	w0, w2, w9
     d30:	cmp	w0, #0xee
     d34:	b.hi	fe8 <gconv@@Base+0x6d8>  // b.pmore
     d38:	ldr	x0, [sp, #144]
     d3c:	mov	w6, #0xffff0100            	// #-65280
     d40:	add	w2, w2, w6
     d44:	add	x0, x0, #0x698
     d48:	lsl	x2, x2, #1
     d4c:	add	x1, x0, x2
     d50:	ldrb	w5, [x0, x2]
     d54:	b	a60 <gconv@@Base+0x150>
     d58:	mov	w8, #0x7                   	// #7
     d5c:	ldr	x0, [sp, #208]
     d60:	b	aa0 <gconv@@Base+0x190>
     d64:	mov	w7, w8
     d68:	cmp	w8, #0x5
     d6c:	b.ne	b14 <gconv@@Base+0x204>  // b.any
     d70:	b	b18 <gconv@@Base+0x208>
     d74:	add	x2, x2, #0x1
     d78:	mov	w1, #0xa5                  	// #165
     d7c:	b	bd0 <gconv@@Base+0x2c0>
     d80:	add	x2, x2, #0x1
     d84:	mov	w1, #0x203e                	// #8254
     d88:	b	bd0 <gconv@@Base+0x2c0>
     d8c:	ldr	x8, [x21, #32]
     d90:	ldr	w0, [x8]
     d94:	ands	w1, w0, #0x7
     d98:	b.eq	9cc <gconv@@Base+0xbc>  // b.none
     d9c:	cbnz	x2, 1b68 <gconv@@Base+0x1258>
     da0:	ldr	x2, [x28, #96]
     da4:	cbz	x2, 1030 <gconv@@Base+0x720>
     da8:	stp	x25, x26, [sp, #208]
     dac:	cmp	w1, #0x4
     db0:	b.hi	1b20 <gconv@@Base+0x1210>  // b.pmore
     db4:	mov	w19, w1
     db8:	cbz	w1, 161c <gconv@@Base+0xd0c>
     dbc:	add	x7, sp, #0xe0
     dc0:	add	x4, x8, #0x3
     dc4:	mov	x0, #0x1                   	// #1
     dc8:	add	x1, x7, x0
     dcc:	ldrb	w3, [x4, x0]
     dd0:	cmp	x0, x19
     dd4:	add	x0, x0, #0x1
     dd8:	sturb	w3, [x1, #-1]
     ddc:	b.ne	dc8 <gconv@@Base+0x4b8>  // b.any
     de0:	mov	x0, #0x4                   	// #4
     de4:	sub	x0, x0, x19
     de8:	add	x0, x25, x0
     dec:	cmp	x20, x0
     df0:	b.cc	1674 <gconv@@Base+0xd64>  // b.lo, b.ul, b.last
     df4:	add	x0, x25, #0x1
     df8:	add	x7, sp, #0xe0
     dfc:	cmp	x26, x22
     e00:	b.cs	1600 <gconv@@Base+0xcf0>  // b.hs, b.nlast
     e04:	add	x19, x19, #0x1
     e08:	str	x0, [sp, #208]
     e0c:	add	x1, x7, x19
     e10:	cmp	x19, #0x3
     e14:	ldurb	w2, [x0, #-1]
     e18:	ccmp	x20, x0, #0x0, ls  // ls = plast
     e1c:	add	x0, x0, #0x1
     e20:	sturb	w2, [x1, #-1]
     e24:	b.hi	e04 <gconv@@Base+0x4f4>  // b.pmore
     e28:	ldr	w0, [sp, #224]
     e2c:	str	x7, [sp, #208]
     e30:	cmp	w0, #0xf7
     e34:	b.ls	1424 <gconv@@Base+0xb14>  // b.plast
     e38:	sub	w1, w0, #0x391
     e3c:	cmp	w1, #0xc0
     e40:	b.ls	1514 <gconv@@Base+0xc04>  // b.plast
     e44:	mov	w15, #0xffffdff0            	// #-8208
     e48:	add	w1, w0, w15
     e4c:	mov	w2, #0x7f90                	// #32656
     e50:	cmp	w1, w2
     e54:	b.hi	16d0 <gconv@@Base+0xdc0>  // b.pmore
     e58:	ubfiz	x1, x1, #1, #32
     e5c:	adrp	x0, 3000 <gconv@@Base+0x26f0>
     e60:	add	x0, x0, #0x9e0
     e64:	add	x2, x1, x0
     e68:	ldrb	w1, [x1, x0]
     e6c:	cbnz	w1, 1440 <gconv@@Base+0xb30>
     e70:	ldr	x0, [sp, #152]
     e74:	cbz	x0, e80 <gconv@@Base+0x570>
     e78:	tbnz	w24, #3, 1a34 <gconv@@Base+0x1124>
     e7c:	tbnz	w24, #1, 1a0c <gconv@@Base+0x10fc>
     e80:	mov	w23, #0x6                   	// #6
     e84:	ldp	x25, x26, [sp, #64]
     e88:	b	c08 <gconv@@Base+0x2f8>
     e8c:	ldr	w19, [x21, #16]
     e90:	str	x28, [x23]
     e94:	ldr	x0, [x26, #96]
     e98:	cbz	x0, 10e0 <gconv@@Base+0x7d0>
     e9c:	stp	x28, x24, [sp, #208]
     ea0:	cmp	x20, x28
     ea4:	b.eq	18c4 <gconv@@Base+0xfb4>  // b.none
     ea8:	mov	x30, x24
     eac:	add	x3, sp, #0xd0
     eb0:	mov	w4, #0x4                   	// #4
     eb4:	add	x2, x28, #0x4
     eb8:	cmp	x20, x2
     ebc:	b.cc	14e4 <gconv@@Base+0xbd4>  // b.lo, b.ul, b.last
     ec0:	cmp	x12, x30
     ec4:	b.ls	1350 <gconv@@Base+0xa40>  // b.plast
     ec8:	ldr	w0, [x28]
     ecc:	cmp	w0, #0xf7
     ed0:	b.ls	11c0 <gconv@@Base+0x8b0>  // b.plast
     ed4:	sub	w1, w0, #0x391
     ed8:	cmp	w1, #0xc0
     edc:	b.hi	1298 <gconv@@Base+0x988>  // b.pmore
     ee0:	ldr	x0, [sp, #144]
     ee4:	ubfiz	x1, x1, #1, #32
     ee8:	add	x0, x0, #0x510
     eec:	add	x5, x0, x1
     ef0:	ldrb	w2, [x0, x1]
     ef4:	cbz	w2, 11d4 <gconv@@Base+0x8c4>
     ef8:	strb	w2, [x30]
     efc:	ldrb	w0, [x5, #1]
     f00:	cbz	w0, f1c <gconv@@Base+0x60c>
     f04:	ldr	x30, [sp, #216]
     f08:	add	x1, x30, #0x1
     f0c:	cmp	x12, x1
     f10:	b.ls	1350 <gconv@@Base+0xa40>  // b.plast
     f14:	str	x1, [sp, #216]
     f18:	strb	w0, [x30, #1]
     f1c:	ldp	x28, x30, [sp, #208]
     f20:	add	x28, x28, #0x4
     f24:	add	x30, x30, #0x1
     f28:	stp	x28, x30, [sp, #208]
     f2c:	cmp	x20, x28
     f30:	b.ne	eb4 <gconv@@Base+0x5a4>  // b.any
     f34:	sxtw	x2, w4
     f38:	str	x20, [x23]
     f3c:	ldr	x12, [sp, #200]
     f40:	b	11ac <gconv@@Base+0x89c>
     f44:	ldr	x3, [sp, #152]
     f48:	cbz	x3, f50 <gconv@@Base+0x640>
     f4c:	cbnz	w0, 1000 <gconv@@Base+0x6f0>
     f50:	mov	w8, #0x6                   	// #6
     f54:	str	x2, [x23]
     f58:	b	bf4 <gconv@@Base+0x2e4>
     f5c:	ldr	x2, [sp, #120]
     f60:	mov	x18, x23
     f64:	ldr	x1, [sp, #192]
     f68:	mov	w23, w8
     f6c:	ldr	x0, [x2]
     f70:	str	x19, [x21]
     f74:	add	x0, x0, x1
     f78:	str	x0, [x2]
     f7c:	ldr	w0, [sp, #116]
     f80:	cmp	w0, #0x0
     f84:	ccmp	w23, #0x7, #0x0, ne  // ne = any
     f88:	b.eq	1564 <gconv@@Base+0xc54>  // b.none
     f8c:	ldp	x25, x26, [sp, #64]
     f90:	b	c08 <gconv@@Base+0x2f8>
     f94:	mov	w7, w8
     f98:	b	b14 <gconv@@Base+0x204>
     f9c:	ldr	x3, [sp, #152]
     fa0:	cbz	x3, f50 <gconv@@Base+0x640>
     fa4:	cbz	w0, f50 <gconv@@Base+0x640>
     fa8:	ldr	x1, [x3]
     fac:	add	x2, x2, #0x1
     fb0:	mov	w8, #0x6                   	// #6
     fb4:	add	x1, x1, #0x1
     fb8:	str	x1, [x3]
     fbc:	b	bd8 <gconv@@Base+0x2c8>
     fc0:	cmp	x6, x13
     fc4:	b.ls	1018 <gconv@@Base+0x708>  // b.plast
     fc8:	cmp	x6, x18
     fcc:	b.hi	140c <gconv@@Base+0xafc>  // b.pmore
     fd0:	mov	w6, #0xffff9900            	// #-26368
     fd4:	add	w5, w5, w6
     fd8:	add	w1, w5, w1
     fdc:	ldr	x5, [sp, #168]
     fe0:	ldrh	w1, [x5, x1, lsl #1]
     fe4:	b	d1c <gconv@@Base+0x40c>
     fe8:	mov	w0, #0x1c00                	// #7168
     fec:	cmp	w0, w2, lsr #7
     ff0:	b.ne	c50 <gconv@@Base+0x340>  // b.any
     ff4:	mov	x0, x5
     ff8:	str	x5, [sp, #208]
     ffc:	b	a98 <gconv@@Base+0x188>
    1000:	ldr	x1, [x3]
    1004:	add	x2, x2, #0x2
    1008:	mov	w8, #0x6                   	// #6
    100c:	add	x1, x1, #0x1
    1010:	str	x1, [x3]
    1014:	b	bd8 <gconv@@Base+0x2c8>
    1018:	mov	w12, #0xffff9961            	// #-26271
    101c:	add	w5, w5, w12
    1020:	add	w1, w5, w1
    1024:	ldr	x5, [sp, #104]
    1028:	ldrh	w1, [x5, x1, lsl #1]
    102c:	b	d1c <gconv@@Base+0x40c>
    1030:	cmp	w1, #0x4
    1034:	b.hi	1bec <gconv@@Base+0x12dc>  // b.pmore
    1038:	add	x5, x26, #0x4
    103c:	cbz	w1, 1530 <gconv@@Base+0xc20>
    1040:	ldrb	w2, [x8, #4]
    1044:	tst	w0, #0x6
    1048:	strb	w2, [sp, #224]
    104c:	mov	x2, #0x1                   	// #1
    1050:	b.eq	1060 <gconv@@Base+0x750>  // b.none
    1054:	ldrb	w3, [x8, #5]
    1058:	mov	x2, #0x2                   	// #2
    105c:	strb	w3, [sp, #225]
    1060:	cmp	x22, x5
    1064:	b.cc	1600 <gconv@@Base+0xcf0>  // b.lo, b.ul, b.last
    1068:	add	x7, sp, #0xe0
    106c:	ldrb	w3, [x25]
    1070:	add	x6, x2, #0x1
    1074:	strb	w3, [x7, x2]
    1078:	ldrb	w2, [sp, #224]
    107c:	cmp	w2, #0x5c
    1080:	b.eq	1884 <gconv@@Base+0xf74>  // b.none
    1084:	cmp	w2, #0x7e
    1088:	b.eq	18b0 <gconv@@Base+0xfa0>  // b.none
    108c:	cmp	w2, #0x7f
    1090:	b.ls	1664 <gconv@@Base+0xd54>  // b.plast
    1094:	sub	w3, w2, #0xa1
    1098:	cmp	w3, #0x3e
    109c:	b.hi	1724 <gconv@@Base+0xe14>  // b.pmore
    10a0:	mov	w6, #0xfec0                	// #65216
    10a4:	add	w2, w2, w6
    10a8:	mov	x0, #0x1                   	// #1
    10ac:	str	w2, [x26]
    10b0:	mov	x26, x5
    10b4:	ldr	w1, [x8]
    10b8:	and	x2, x1, #0x7
    10bc:	cmp	x2, x0
    10c0:	b.ge	1bcc <gconv@@Base+0x12bc>  // b.tcont
    10c4:	sub	x0, x0, x2
    10c8:	ldr	w24, [x21, #16]
    10cc:	add	x25, x25, x0
    10d0:	str	x25, [x18]
    10d4:	and	w1, w1, #0xfffffff8
    10d8:	str	w1, [x8]
    10dc:	b	9cc <gconv@@Base+0xbc>
    10e0:	cmp	x20, x28
    10e4:	b.eq	18c4 <gconv@@Base+0xfb4>  // b.none
    10e8:	add	x1, x24, #0x4
    10ec:	mov	x30, x24
    10f0:	cmp	x12, x1
    10f4:	mov	x2, #0x4                   	// #4
    10f8:	b.cc	1878 <gconv@@Base+0xf68>  // b.lo, b.ul, b.last
    10fc:	adrp	x4, 1000 <gconv@@Base+0x6f0>
    1100:	add	x4, x4, #0xe58
    1104:	add	x0, x4, #0x640
    1108:	str	x0, [sp, #104]
    110c:	add	x0, x4, #0x580
    1110:	str	x4, [sp, #184]
    1114:	ldr	x4, [sp, #152]
    1118:	and	w19, w19, #0x2
    111c:	mov	w8, #0xea                  	// #234
    1120:	mov	x10, #0xffffffffffff7b41    	// #-33983
    1124:	mov	x14, #0xffffffffffff7703    	// #-35069
    1128:	mov	x15, #0xffffffffffff6003    	// #-40957
    112c:	mov	x16, #0x4042                	// #16450
    1130:	mov	x17, #0xeaa4                	// #60068
    1134:	mov	x9, #0x84be                	// #33982
    1138:	mov	w18, #0xffff9900            	// #-26368
    113c:	mov	w13, #0xffff9961            	// #-26271
    1140:	mov	w6, #0xfec0                	// #65216
    1144:	str	x0, [sp, #168]
    1148:	adrp	x0, 13000 <gconv@@Base+0x126f0>
    114c:	add	x0, x0, #0x908
    1150:	str	x0, [sp, #160]
    1154:	nop
    1158:	ldrb	w0, [x28]
    115c:	cmp	w0, #0x5c
    1160:	b.eq	1628 <gconv@@Base+0xd18>  // b.none
    1164:	cmp	w0, #0x7e
    1168:	b.eq	1634 <gconv@@Base+0xd24>  // b.none
    116c:	cmp	w0, #0x7f
    1170:	b.ls	1184 <gconv@@Base+0x874>  // b.plast
    1174:	sub	w3, w0, #0xa1
    1178:	cmp	w3, #0x3e
    117c:	b.hi	1378 <gconv@@Base+0xa68>  // b.pmore
    1180:	add	w0, w0, w6
    1184:	add	x28, x28, #0x1
    1188:	str	w0, [x30]
    118c:	mov	x30, x1
    1190:	cmp	x20, x28
    1194:	b.eq	11a8 <gconv@@Base+0x898>  // b.none
    1198:	add	x1, x30, #0x4
    119c:	cmp	x12, x1
    11a0:	b.cs	1158 <gconv@@Base+0x848>  // b.hs, b.nlast
    11a4:	mov	x2, #0x5                   	// #5
    11a8:	str	x28, [x23]
    11ac:	cmp	x12, x30
    11b0:	b.ne	11fc <gconv@@Base+0x8ec>  // b.any
    11b4:	cmp	x2, #0x5
    11b8:	b.eq	1360 <gconv@@Base+0xa50>  // b.none
    11bc:	b	14f4 <gconv@@Base+0xbe4>
    11c0:	ubfiz	x1, x0, #1, #32
    11c4:	add	x5, x25, x1
    11c8:	ldrb	w2, [x25, x1]
    11cc:	cbnz	w2, ef8 <gconv@@Base+0x5e8>
    11d0:	cbz	w0, ef8 <gconv@@Base+0x5e8>
    11d4:	ldr	x0, [sp, #152]
    11d8:	cbz	x0, 14e4 <gconv@@Base+0xbd4>
    11dc:	ldr	w0, [x21, #16]
    11e0:	tbnz	w0, #3, 17f8 <gconv@@Base+0xee8>
    11e4:	ldr	x1, [sp, #208]
    11e8:	tbnz	w19, #1, 1858 <gconv@@Base+0xf48>
    11ec:	ldr	x0, [sp, #200]
    11f0:	str	x1, [x23]
    11f4:	cmp	x30, x0
    11f8:	b.eq	14f4 <gconv@@Base+0xbe4>  // b.none
    11fc:	adrp	x3, 1000 <gconv@@Base+0x6f0>
    1200:	adrp	x1, 1000 <gconv@@Base+0x6f0>
    1204:	adrp	x0, 1000 <gconv@@Base+0x6f0>
    1208:	add	x3, x3, #0xe50
    120c:	add	x1, x1, #0xcc0
    1210:	add	x0, x0, #0xdd8
    1214:	mov	w2, #0x2ea                 	// #746
    1218:	bl	750 <__assert_fail@plt>
    121c:	ldr	x2, [x23]
    1220:	mov	x4, x20
    1224:	ldr	x6, [sp, #152]
    1228:	mov	x1, x21
    122c:	ldr	x5, [sp, #176]
    1230:	mov	x0, x26
    1234:	str	x3, [sp, #104]
    1238:	str	w7, [sp, #160]
    123c:	bl	700 <__gconv_transliterate@plt>
    1240:	mov	w8, w0
    1244:	ldr	w7, [sp, #160]
    1248:	cmp	w0, #0x6
    124c:	ldr	x3, [sp, #104]
    1250:	b.eq	1614 <gconv@@Base+0xd04>  // b.none
    1254:	cmp	w0, #0x5
    1258:	ldp	x0, x19, [sp, #208]
    125c:	b.ne	a98 <gconv@@Base+0x188>  // b.any
    1260:	b	aa0 <gconv@@Base+0x190>
    1264:	mov	x2, x28
    1268:	mov	x19, x24
    126c:	mov	w8, #0x5                   	// #5
    1270:	str	x2, [x23]
    1274:	b	bf4 <gconv@@Base+0x2e4>
    1278:	ldr	x2, [sp, #152]
    127c:	add	x0, x0, #0x4
    1280:	mov	w8, #0x6                   	// #6
    1284:	str	x0, [sp, #208]
    1288:	ldr	x1, [x2]
    128c:	add	x1, x1, #0x1
    1290:	str	x1, [x2]
    1294:	b	a98 <gconv@@Base+0x188>
    1298:	mov	w6, #0xffffdff0            	// #-8208
    129c:	add	w1, w0, w6
    12a0:	mov	w5, #0x7f90                	// #32656
    12a4:	cmp	w1, w5
    12a8:	b.hi	14b4 <gconv@@Base+0xba4>  // b.pmore
    12ac:	ubfiz	x1, x1, #1, #32
    12b0:	adrp	x0, 3000 <gconv@@Base+0x26f0>
    12b4:	add	x0, x0, #0x9e0
    12b8:	add	x5, x1, x0
    12bc:	ldrb	w2, [x1, x0]
    12c0:	b	ef4 <gconv@@Base+0x5e4>
    12c4:	ldr	x0, [sp, #96]
    12c8:	cbnz	x0, 1b88 <gconv@@Base+0x1278>
    12cc:	ldr	x0, [x21, #32]
    12d0:	mov	w23, #0x0                   	// #0
    12d4:	str	xzr, [x0]
    12d8:	ldr	w0, [x21, #16]
    12dc:	tbnz	w0, #0, c08 <gconv@@Base+0x2f8>
    12e0:	mov	x0, x27
    12e4:	str	w6, [sp, #96]
    12e8:	bl	740 <_dl_mcount_wrapper_check@plt>
    12ec:	ldp	x5, x0, [sp, #120]
    12f0:	mov	x4, #0x0                   	// #0
    12f4:	ldr	w6, [sp, #96]
    12f8:	mov	x3, #0x0                   	// #0
    12fc:	ldr	w7, [sp, #116]
    1300:	mov	x2, #0x0                   	// #0
    1304:	ldr	x1, [sp, #136]
    1308:	blr	x27
    130c:	mov	w23, w0
    1310:	b	c08 <gconv@@Base+0x2f8>
    1314:	mov	w8, #0x7                   	// #7
    1318:	str	x2, [x23]
    131c:	b	bf4 <gconv@@Base+0x2e4>
    1320:	ldr	x3, [sp, #152]
    1324:	cbz	x3, f50 <gconv@@Base+0x640>
    1328:	cbz	w0, f50 <gconv@@Base+0x640>
    132c:	ldr	x1, [x3]
    1330:	mov	x2, x12
    1334:	mov	w8, #0x6                   	// #6
    1338:	add	x1, x1, #0x1
    133c:	str	x1, [x3]
    1340:	b	be0 <gconv@@Base+0x2d0>
    1344:	mov	x18, x23
    1348:	mov	w23, w7
    134c:	b	f7c <gconv@@Base+0x66c>
    1350:	ldp	x0, x1, [sp, #200]
    1354:	str	x1, [x23]
    1358:	cmp	x30, x0
    135c:	b.ne	11fc <gconv@@Base+0x8ec>  // b.any
    1360:	cmp	x24, x30
    1364:	b.ne	b14 <gconv@@Base+0x204>  // b.any
    1368:	ldr	w0, [x21, #20]
    136c:	sub	w0, w0, #0x1
    1370:	str	w0, [x21, #20]
    1374:	b	b14 <gconv@@Base+0x204>
    1378:	and	w3, w0, #0xffffffdf
    137c:	and	w3, w3, #0xff
    1380:	cmp	w3, #0x80
    1384:	ccmp	w0, w8, #0x2, ne  // ne = any
    1388:	b.hi	15bc <gconv@@Base+0xcac>  // b.pmore
    138c:	add	x11, x28, #0x1
    1390:	cmp	x20, x11
    1394:	b.ls	18bc <gconv@@Base+0xfac>  // b.plast
    1398:	ldrb	w3, [x28, #1]
    139c:	cmp	w3, #0x3f
    13a0:	add	w5, w3, w0, lsl #8
    13a4:	b.ls	18d0 <gconv@@Base+0xfc0>  // b.plast
    13a8:	add	x11, x5, x10
    13ac:	cmp	x11, #0x3df
    13b0:	b.ls	16b0 <gconv@@Base+0xda0>  // b.plast
    13b4:	add	x11, x5, x14
    13b8:	cmp	x11, #0x42
    13bc:	b.ls	16b0 <gconv@@Base+0xda0>  // b.plast
    13c0:	add	x11, x5, x15
    13c4:	cmp	x11, x16
    13c8:	ccmp	x5, x17, #0x2, hi  // hi = pmore
    13cc:	b.hi	16b0 <gconv@@Base+0xda0>  // b.pmore
    13d0:	add	w0, w0, w0, lsl #1
    13d4:	cmp	x5, x9
    13d8:	lsl	w0, w0, #6
    13dc:	b.hi	1704 <gconv@@Base+0xdf4>  // b.pmore
    13e0:	mov	w5, #0xffff9f00            	// #-24832
    13e4:	add	w3, w3, w5
    13e8:	add	w0, w3, w0
    13ec:	ldr	x3, [sp, #184]
    13f0:	ldrh	w0, [x3, x0, lsl #1]
    13f4:	cbz	w0, 16b0 <gconv@@Base+0xda0>
    13f8:	add	x28, x28, #0x2
    13fc:	b	1188 <gconv@@Base+0x878>
    1400:	mov	x0, x20
    1404:	mov	w8, #0x4                   	// #4
    1408:	b	aa0 <gconv@@Base+0x190>
    140c:	mov	w12, #0xffff57c0            	// #-43072
    1410:	add	w5, w5, w12
    1414:	add	w1, w5, w1
    1418:	ldr	x5, [sp, #160]
    141c:	ldrh	w1, [x5, x1, lsl #1]
    1420:	b	d1c <gconv@@Base+0x40c>
    1424:	adrp	x1, 2000 <gconv@@Base+0x16f0>
    1428:	add	x1, x1, #0xf58
    142c:	add	x1, x1, #0x898
    1430:	ubfiz	x3, x0, #1, #32
    1434:	add	x2, x1, x3
    1438:	ldrb	w1, [x1, x3]
    143c:	cbz	w1, 160c <gconv@@Base+0xcfc>
    1440:	strb	w1, [x26]
    1444:	ldrb	w0, [x2, #1]
    1448:	cbz	w0, 1464 <gconv@@Base+0xb54>
    144c:	ldr	x1, [sp, #216]
    1450:	add	x2, x1, #0x1
    1454:	cmp	x22, x2
    1458:	b.ls	15f4 <gconv@@Base+0xce4>  // b.plast
    145c:	str	x2, [sp, #216]
    1460:	strb	w0, [x1, #1]
    1464:	ldp	x0, x1, [sp, #208]
    1468:	add	x0, x0, #0x4
    146c:	add	x1, x1, #0x1
    1470:	stp	x0, x1, [sp, #208]
    1474:	cmp	x0, x7
    1478:	b.eq	1658 <gconv@@Base+0xd48>  // b.none
    147c:	ldr	w1, [x8]
    1480:	sub	x0, x0, x7
    1484:	and	x2, x1, #0x7
    1488:	cmp	x0, x2
    148c:	b.le	1c68 <gconv@@Base+0x1358>
    1490:	ldr	x3, [x18]
    1494:	sub	x0, x0, x2
    1498:	ldr	w24, [x21, #16]
    149c:	and	w1, w1, #0xfffffff8
    14a0:	add	x25, x3, x0
    14a4:	str	x25, [x18]
    14a8:	ldr	x26, [sp, #216]
    14ac:	str	w1, [x8]
    14b0:	b	9cc <gconv@@Base+0xbc>
    14b4:	mov	w5, #0xffff00ff            	// #-65281
    14b8:	add	w1, w0, w5
    14bc:	cmp	w1, #0xee
    14c0:	b.hi	15dc <gconv@@Base+0xccc>  // b.pmore
    14c4:	mov	w1, #0xffff0100            	// #-65280
    14c8:	add	w0, w0, w1
    14cc:	ldr	x1, [sp, #144]
    14d0:	lsl	x0, x0, #1
    14d4:	add	x1, x1, #0x698
    14d8:	add	x5, x1, x0
    14dc:	ldrb	w2, [x1, x0]
    14e0:	b	ef4 <gconv@@Base+0x5e4>
    14e4:	ldp	x0, x1, [sp, #200]
    14e8:	str	x1, [x23]
    14ec:	cmp	x30, x0
    14f0:	b.ne	11fc <gconv@@Base+0x8ec>  // b.any
    14f4:	adrp	x3, 1000 <gconv@@Base+0x6f0>
    14f8:	adrp	x1, 1000 <gconv@@Base+0x6f0>
    14fc:	adrp	x0, 1000 <gconv@@Base+0x6f0>
    1500:	add	x3, x3, #0xe50
    1504:	add	x1, x1, #0xcc0
    1508:	add	x0, x0, #0xdf0
    150c:	mov	w2, #0x2eb                 	// #747
    1510:	bl	750 <__assert_fail@plt>
    1514:	adrp	x0, 2000 <gconv@@Base+0x16f0>
    1518:	add	x0, x0, #0xf58
    151c:	ubfiz	x1, x1, #1, #32
    1520:	add	x0, x0, #0x510
    1524:	add	x2, x0, x1
    1528:	ldrb	w1, [x0, x1]
    152c:	b	e6c <gconv@@Base+0x55c>
    1530:	cmp	x22, x5
    1534:	b.cc	1600 <gconv@@Base+0xcf0>  // b.lo, b.ul, b.last
    1538:	mov	x3, x25
    153c:	add	x7, sp, #0xe0
    1540:	mov	x2, #0x0                   	// #0
    1544:	ldrb	w4, [x3], #1
    1548:	add	x6, x2, #0x1
    154c:	strb	w4, [x7, x2]
    1550:	cmp	x6, #0x1
    1554:	ccmp	x20, x3, #0x0, ls  // ls = plast
    1558:	mov	x2, #0x1                   	// #1
    155c:	b.hi	1544 <gconv@@Base+0xc34>  // b.pmore
    1560:	b	1078 <gconv@@Base+0x768>
    1564:	ldr	x0, [x18]
    1568:	sub	x3, x20, x0
    156c:	cmp	x3, #0x3
    1570:	b.gt	1bac <gconv@@Base+0x129c>
    1574:	ldr	x4, [x21, #32]
    1578:	cmp	x0, x20
    157c:	add	x0, x0, #0x1
    1580:	add	x1, x4, #0x4
    1584:	b.cs	18f0 <gconv@@Base+0xfe0>  // b.hs, b.nlast
    1588:	str	x0, [x18]
    158c:	cmp	x20, x0
    1590:	add	x0, x0, #0x1
    1594:	ldurb	w2, [x0, #-2]
    1598:	strb	w2, [x1], #1
    159c:	b.ne	1588 <gconv@@Base+0xc78>  // b.any
    15a0:	mov	w1, w3
    15a4:	ldr	w0, [x4]
    15a8:	ldp	x25, x26, [sp, #64]
    15ac:	and	w0, w0, #0xfffffff8
    15b0:	orr	w0, w0, w1
    15b4:	str	w0, [x4]
    15b8:	b	c08 <gconv@@Base+0x2f8>
    15bc:	cbz	x4, 166c <gconv@@Base+0xd5c>
    15c0:	cbz	w19, 166c <gconv@@Base+0xd5c>
    15c4:	ldr	x0, [x4]
    15c8:	add	x28, x28, #0x1
    15cc:	mov	x2, #0x6                   	// #6
    15d0:	add	x0, x0, #0x1
    15d4:	str	x0, [x4]
    15d8:	b	1190 <gconv@@Base+0x880>
    15dc:	mov	w1, #0x1c00                	// #7168
    15e0:	cmp	w1, w0, lsr #7
    15e4:	b.ne	11d4 <gconv@@Base+0x8c4>  // b.any
    15e8:	mov	x28, x2
    15ec:	str	x2, [sp, #208]
    15f0:	b	f2c <gconv@@Base+0x61c>
    15f4:	ldr	x0, [sp, #208]
    15f8:	cmp	x0, x7
    15fc:	b.ne	147c <gconv@@Base+0xb6c>  // b.any
    1600:	mov	w23, #0x5                   	// #5
    1604:	ldp	x25, x26, [sp, #64]
    1608:	b	c08 <gconv@@Base+0x2f8>
    160c:	cbz	w0, 1440 <gconv@@Base+0xb30>
    1610:	b	e70 <gconv@@Base+0x560>
    1614:	ldr	x19, [sp, #216]
    1618:	b	c60 <gconv@@Base+0x350>
    161c:	mov	x0, #0x4                   	// #4
    1620:	mov	x19, #0x0                   	// #0
    1624:	b	de8 <gconv@@Base+0x4d8>
    1628:	add	x28, x28, #0x1
    162c:	mov	w0, #0xa5                  	// #165
    1630:	b	1188 <gconv@@Base+0x878>
    1634:	add	x28, x28, #0x1
    1638:	mov	w0, #0x203e                	// #8254
    163c:	b	1188 <gconv@@Base+0x878>
    1640:	mov	x2, x20
    1644:	mov	x19, x24
    1648:	mov	w8, #0x4                   	// #4
    164c:	str	x2, [x23]
    1650:	b	bf4 <gconv@@Base+0x2e4>
    1654:	cbnz	w23, f8c <gconv@@Base+0x67c>
    1658:	ldr	w24, [x21, #16]
    165c:	ldr	x25, [x18]
    1660:	b	9cc <gconv@@Base+0xbc>
    1664:	mov	x0, #0x1                   	// #1
    1668:	b	10ac <gconv@@Base+0x79c>
    166c:	mov	x2, #0x6                   	// #6
    1670:	b	11a8 <gconv@@Base+0x898>
    1674:	str	x20, [x18]
    1678:	cmp	x25, x20
    167c:	b.cs	16a4 <gconv@@Base+0xd94>  // b.hs, b.nlast
    1680:	add	x0, x25, #0x1
    1684:	add	x19, x8, x19
    1688:	str	x0, [sp, #208]
    168c:	cmp	x20, x0
    1690:	add	x19, x19, #0x1
    1694:	add	x0, x0, #0x1
    1698:	ldurb	w1, [x0, #-2]
    169c:	strb	w1, [x19, #3]
    16a0:	b.ne	1688 <gconv@@Base+0xd78>  // b.any
    16a4:	mov	w23, #0x7                   	// #7
    16a8:	ldp	x25, x26, [sp, #64]
    16ac:	b	c08 <gconv@@Base+0x2f8>
    16b0:	cbz	x4, 166c <gconv@@Base+0xd5c>
    16b4:	cbz	w19, 166c <gconv@@Base+0xd5c>
    16b8:	ldr	x0, [x4]
    16bc:	add	x28, x28, #0x2
    16c0:	mov	x2, #0x6                   	// #6
    16c4:	add	x0, x0, #0x1
    16c8:	str	x0, [x4]
    16cc:	b	1190 <gconv@@Base+0x880>
    16d0:	mov	w14, #0xffff00ff            	// #-65281
    16d4:	add	w1, w0, w14
    16d8:	cmp	w1, #0xee
    16dc:	b.hi	19b0 <gconv@@Base+0x10a0>  // b.pmore
    16e0:	mov	w13, #0xffff0100            	// #-65280
    16e4:	add	w1, w0, w13
    16e8:	adrp	x0, 2000 <gconv@@Base+0x16f0>
    16ec:	add	x0, x0, #0xf58
    16f0:	lsl	x1, x1, #1
    16f4:	add	x0, x0, #0x698
    16f8:	add	x2, x0, x1
    16fc:	ldrb	w1, [x0, x1]
    1700:	b	e6c <gconv@@Base+0x55c>
    1704:	mov	x11, #0x88fc                	// #35068
    1708:	cmp	x5, x11
    170c:	b.hi	1890 <gconv@@Base+0xf80>  // b.pmore
    1710:	add	w3, w3, w13
    1714:	add	w0, w3, w0
    1718:	ldr	x3, [sp, #168]
    171c:	ldrh	w0, [x3, x0, lsl #1]
    1720:	b	13f4 <gconv@@Base+0xae4>
    1724:	and	w3, w2, #0xffffffdf
    1728:	mov	w4, #0xea                  	// #234
    172c:	and	w3, w3, #0xff
    1730:	cmp	w3, #0x80
    1734:	ccmp	w2, w4, #0x2, ne  // ne = any
    1738:	b.hi	1910 <gconv@@Base+0x1000>  // b.pmore
    173c:	add	x3, x7, x6
    1740:	add	x4, x7, #0x1
    1744:	cmp	x3, x4
    1748:	b.ls	1938 <gconv@@Base+0x1028>  // b.plast
    174c:	ldrb	w0, [sp, #225]
    1750:	cmp	w0, #0x3f
    1754:	add	w3, w0, w2, lsl #8
    1758:	b.ls	19fc <gconv@@Base+0x10ec>  // b.plast
    175c:	mov	x4, #0xffffffffffff7b41    	// #-33983
    1760:	add	x1, x3, x4
    1764:	cmp	x1, #0x3df
    1768:	b.ls	1988 <gconv@@Base+0x1078>  // b.plast
    176c:	mov	x1, #0xffffffffffff7703    	// #-35069
    1770:	add	x1, x3, x1
    1774:	cmp	x1, #0x42
    1778:	b.ls	1988 <gconv@@Base+0x1078>  // b.plast
    177c:	mov	x30, #0xffffffffffff6003    	// #-40957
    1780:	add	x4, x3, x30
    1784:	mov	x1, #0x4042                	// #16450
    1788:	cmp	x4, x1
    178c:	mov	x1, #0xeaa4                	// #60068
    1790:	ccmp	x3, x1, #0x2, hi  // hi = pmore
    1794:	b.hi	1988 <gconv@@Base+0x1078>  // b.pmore
    1798:	add	w1, w2, w2, lsl #1
    179c:	mov	x2, #0x84be                	// #33982
    17a0:	cmp	x3, x2
    17a4:	lsl	w2, w1, #6
    17a8:	b.hi	19c8 <gconv@@Base+0x10b8>  // b.pmore
    17ac:	mov	w23, #0xffff9f00            	// #-24832
    17b0:	add	w1, w0, w23
    17b4:	add	w1, w1, w2
    17b8:	adrp	x0, 1000 <gconv@@Base+0x6f0>
    17bc:	add	x0, x0, #0xe58
    17c0:	ldrh	w2, [x0, x1, lsl #1]
    17c4:	mov	x0, #0x2                   	// #2
    17c8:	cbnz	w2, 10ac <gconv@@Base+0x79c>
    17cc:	ldr	x1, [sp, #152]
    17d0:	cbz	x1, e80 <gconv@@Base+0x570>
    17d4:	tbz	w24, #1, e80 <gconv@@Base+0x570>
    17d8:	mov	x2, x1
    17dc:	ldr	x1, [x1]
    17e0:	add	x1, x1, #0x1
    17e4:	str	x1, [x2]
    17e8:	b	10b4 <gconv@@Base+0x7a4>
    17ec:	mov	w8, #0x6                   	// #6
    17f0:	ldr	x0, [sp, #208]
    17f4:	b	aa0 <gconv@@Base+0x190>
    17f8:	ldr	x2, [x23]
    17fc:	mov	x4, x20
    1800:	ldr	x6, [sp, #152]
    1804:	mov	x1, x21
    1808:	ldr	x5, [sp, #176]
    180c:	mov	x0, x26
    1810:	str	x3, [sp, #104]
    1814:	str	x12, [sp, #160]
    1818:	str	w7, [sp, #168]
    181c:	bl	700 <__gconv_transliterate@plt>
    1820:	ldr	w7, [sp, #168]
    1824:	mov	w4, w0
    1828:	cmp	w0, #0x6
    182c:	ldr	x3, [sp, #104]
    1830:	ldr	x12, [sp, #160]
    1834:	b.eq	19f4 <gconv@@Base+0x10e4>  // b.none
    1838:	cmp	w0, #0x5
    183c:	ldp	x28, x30, [sp, #208]
    1840:	b.ne	f2c <gconv@@Base+0x61c>  // b.any
    1844:	ldr	x0, [sp, #200]
    1848:	str	x28, [x23]
    184c:	cmp	x30, x0
    1850:	b.eq	1360 <gconv@@Base+0xa50>  // b.none
    1854:	b	11fc <gconv@@Base+0x8ec>
    1858:	ldr	x2, [sp, #152]
    185c:	add	x28, x1, #0x4
    1860:	mov	w4, #0x6                   	// #6
    1864:	str	x28, [sp, #208]
    1868:	ldr	x0, [x2]
    186c:	add	x0, x0, #0x1
    1870:	str	x0, [x2]
    1874:	b	f2c <gconv@@Base+0x61c>
    1878:	cmp	x12, x24
    187c:	b.eq	1368 <gconv@@Base+0xa58>  // b.none
    1880:	b	11fc <gconv@@Base+0x8ec>
    1884:	mov	x0, #0x1                   	// #1
    1888:	mov	w2, #0xa5                  	// #165
    188c:	b	10ac <gconv@@Base+0x79c>
    1890:	mov	x11, #0x9ffc                	// #40956
    1894:	cmp	x5, x11
    1898:	b.hi	18f8 <gconv@@Base+0xfe8>  // b.pmore
    189c:	add	w3, w3, w18
    18a0:	add	w0, w3, w0
    18a4:	ldr	x3, [sp, #160]
    18a8:	ldrh	w0, [x3, x0, lsl #1]
    18ac:	b	13f4 <gconv@@Base+0xae4>
    18b0:	mov	x0, #0x1                   	// #1
    18b4:	mov	w2, #0x203e                	// #8254
    18b8:	b	10ac <gconv@@Base+0x79c>
    18bc:	mov	x2, #0x7                   	// #7
    18c0:	b	11a8 <gconv@@Base+0x898>
    18c4:	cmp	x12, x24
    18c8:	b.eq	14f4 <gconv@@Base+0xbe4>  // b.none
    18cc:	b	11fc <gconv@@Base+0x8ec>
    18d0:	cbz	x4, 166c <gconv@@Base+0xd5c>
    18d4:	cbz	w19, 166c <gconv@@Base+0xd5c>
    18d8:	ldr	x0, [x4]
    18dc:	mov	x28, x11
    18e0:	mov	x2, #0x6                   	// #6
    18e4:	add	x0, x0, #0x1
    18e8:	str	x0, [x4]
    18ec:	b	1198 <gconv@@Base+0x888>
    18f0:	mov	w1, #0x0                   	// #0
    18f4:	b	15a4 <gconv@@Base+0xc94>
    18f8:	mov	w11, #0xffff57c0            	// #-43072
    18fc:	add	w3, w3, w11
    1900:	add	w0, w3, w0
    1904:	ldr	x3, [sp, #104]
    1908:	ldrh	w0, [x3, x0, lsl #1]
    190c:	b	13f4 <gconv@@Base+0xae4>
    1910:	ldr	x0, [sp, #152]
    1914:	mov	w23, #0x6                   	// #6
    1918:	cbz	x0, f8c <gconv@@Base+0x67c>
    191c:	tbz	w24, #1, f8c <gconv@@Base+0x67c>
    1920:	mov	x2, x0
    1924:	mov	x0, #0x1                   	// #1
    1928:	ldr	x1, [x2]
    192c:	add	x1, x1, x0
    1930:	str	x1, [x2]
    1934:	b	10b4 <gconv@@Base+0x7a4>
    1938:	add	x4, x7, #0x2
    193c:	cmp	x3, x4
    1940:	b.eq	1c98 <gconv@@Base+0x1388>  // b.none
    1944:	mov	w1, w1
    1948:	and	w0, w0, #0xfffffff8
    194c:	sub	x1, x6, x1
    1950:	add	x1, x25, x1
    1954:	str	x1, [x18]
    1958:	cmp	x6, w0, sxtw
    195c:	b.le	1c88 <gconv@@Base+0x1378>
    1960:	cmp	x6, #0x4
    1964:	b.hi	1c78 <gconv@@Base+0x1368>  // b.pmore
    1968:	orr	w0, w0, w6
    196c:	str	w0, [x8]
    1970:	cmp	x3, x7
    1974:	mov	w23, #0x7                   	// #7
    1978:	b.ls	f8c <gconv@@Base+0x67c>  // b.plast
    197c:	strb	w2, [x8, #4]
    1980:	ldp	x25, x26, [sp, #64]
    1984:	b	c08 <gconv@@Base+0x2f8>
    1988:	ldr	x0, [sp, #152]
    198c:	mov	w23, #0x6                   	// #6
    1990:	cbz	x0, f8c <gconv@@Base+0x67c>
    1994:	tbz	w24, #1, f8c <gconv@@Base+0x67c>
    1998:	mov	x2, x0
    199c:	mov	x0, #0x2                   	// #2
    19a0:	ldr	x1, [x2]
    19a4:	add	x1, x1, #0x1
    19a8:	str	x1, [x2]
    19ac:	b	10b4 <gconv@@Base+0x7a4>
    19b0:	mov	w1, #0x1c00                	// #7168
    19b4:	cmp	w1, w0, lsr #7
    19b8:	b.ne	e70 <gconv@@Base+0x560>  // b.any
    19bc:	add	x0, x7, #0x4
    19c0:	str	x0, [sp, #208]
    19c4:	b	147c <gconv@@Base+0xb6c>
    19c8:	mov	x1, #0x88fc                	// #35068
    19cc:	cmp	x3, x1
    19d0:	b.hi	1af8 <gconv@@Base+0x11e8>  // b.pmore
    19d4:	mov	w19, #0xffff9961            	// #-26271
    19d8:	add	w1, w0, w19
    19dc:	adrp	x0, 1000 <gconv@@Base+0x6f0>
    19e0:	add	x0, x0, #0xe58
    19e4:	add	w1, w1, w2
    19e8:	add	x0, x0, #0x580
    19ec:	ldrh	w2, [x0, x1, lsl #1]
    19f0:	b	17c4 <gconv@@Base+0xeb4>
    19f4:	ldr	x30, [sp, #216]
    19f8:	b	11e4 <gconv@@Base+0x8d4>
    19fc:	ldr	x0, [sp, #152]
    1a00:	cbz	x0, e80 <gconv@@Base+0x570>
    1a04:	tbz	w24, #1, e80 <gconv@@Base+0x570>
    1a08:	b	1920 <gconv@@Base+0x1010>
    1a0c:	ldr	x2, [sp, #152]
    1a10:	ldr	x0, [sp, #208]
    1a14:	ldr	x1, [x2]
    1a18:	add	x0, x0, #0x4
    1a1c:	str	x0, [sp, #208]
    1a20:	add	x1, x1, #0x1
    1a24:	str	x1, [x2]
    1a28:	cmp	x0, x7
    1a2c:	b.ne	147c <gconv@@Base+0xb6c>  // b.any
    1a30:	b	e80 <gconv@@Base+0x570>
    1a34:	add	x4, x7, x19
    1a38:	mov	x6, x0
    1a3c:	mov	x2, x25
    1a40:	add	x5, sp, #0xd8
    1a44:	add	x3, sp, #0xd0
    1a48:	mov	x1, x21
    1a4c:	mov	x0, x28
    1a50:	str	x4, [sp, #104]
    1a54:	str	x7, [sp, #144]
    1a58:	stp	x8, x18, [sp, #160]
    1a5c:	bl	700 <__gconv_transliterate@plt>
    1a60:	mov	w23, w0
    1a64:	cmp	w0, #0x6
    1a68:	ldr	x7, [sp, #144]
    1a6c:	ldp	x8, x18, [sp, #160]
    1a70:	b.eq	1bfc <gconv@@Base+0x12ec>  // b.none
    1a74:	ldr	x0, [sp, #208]
    1a78:	ldr	x4, [sp, #104]
    1a7c:	cmp	x0, x7
    1a80:	b.ne	147c <gconv@@Base+0xb6c>  // b.any
    1a84:	cmp	w23, #0x7
    1a88:	b.ne	1654 <gconv@@Base+0xd44>  // b.any
    1a8c:	add	x0, x7, #0x4
    1a90:	cmp	x4, x0
    1a94:	b.eq	1c48 <gconv@@Base+0x1338>  // b.none
    1a98:	ldr	w0, [x8]
    1a9c:	ldr	x1, [x18]
    1aa0:	and	x2, x0, #0x7
    1aa4:	sub	x2, x19, x2
    1aa8:	and	w0, w0, #0xfffffff8
    1aac:	add	x1, x1, x2
    1ab0:	str	x1, [x18]
    1ab4:	cmp	x19, w0, sxtw
    1ab8:	b.le	1c28 <gconv@@Base+0x1318>
    1abc:	cmp	x19, #0x4
    1ac0:	b.hi	1c08 <gconv@@Base+0x12f8>  // b.pmore
    1ac4:	orr	w0, w0, w19
    1ac8:	str	w0, [x8]
    1acc:	cmp	x4, x7
    1ad0:	b.ls	16a4 <gconv@@Base+0xd94>  // b.plast
    1ad4:	add	x25, x7, #0x1
    1ad8:	add	x26, x8, #0x4
    1adc:	str	x25, [sp, #208]
    1ae0:	cmp	x4, x25
    1ae4:	add	x25, x25, #0x1
    1ae8:	ldurb	w0, [x25, #-2]
    1aec:	strb	w0, [x26], #1
    1af0:	b.ne	1adc <gconv@@Base+0x11cc>  // b.any
    1af4:	b	16a4 <gconv@@Base+0xd94>
    1af8:	mov	x1, #0x9ffc                	// #40956
    1afc:	cmp	x3, x1
    1b00:	b.hi	1b40 <gconv@@Base+0x1230>  // b.pmore
    1b04:	mov	w17, #0xffff9900            	// #-26368
    1b08:	add	w1, w0, w17
    1b0c:	add	w1, w1, w2
    1b10:	adrp	x0, 13000 <gconv@@Base+0x126f0>
    1b14:	add	x0, x0, #0x908
    1b18:	ldrh	w2, [x0, x1, lsl #1]
    1b1c:	b	17c4 <gconv@@Base+0xeb4>
    1b20:	adrp	x3, 1000 <gconv@@Base+0x6f0>
    1b24:	add	x3, x3, #0xe28
    1b28:	adrp	x1, 1000 <gconv@@Base+0x6f0>
    1b2c:	adrp	x0, 1000 <gconv@@Base+0x6f0>
    1b30:	add	x1, x1, #0xcf0
    1b34:	add	x0, x0, #0xd00
    1b38:	mov	w2, #0x18b                 	// #395
    1b3c:	bl	750 <__assert_fail@plt>
    1b40:	mov	w16, #0xffff57c0            	// #-43072
    1b44:	adrp	x1, 1000 <gconv@@Base+0x6f0>
    1b48:	add	w0, w0, w16
    1b4c:	add	x1, x1, #0xe58
    1b50:	add	w0, w0, w2
    1b54:	add	x1, x1, #0x640
    1b58:	ldrh	w2, [x1, x0, lsl #1]
    1b5c:	b	17c4 <gconv@@Base+0xeb4>
    1b60:	stp	x25, x26, [sp, #64]
    1b64:	bl	710 <__stack_chk_fail@plt>
    1b68:	adrp	x3, 1000 <gconv@@Base+0x6f0>
    1b6c:	adrp	x1, 1000 <gconv@@Base+0x6f0>
    1b70:	adrp	x0, 1000 <gconv@@Base+0x6f0>
    1b74:	add	x3, x3, #0xe50
    1b78:	add	x1, x1, #0xcc0
    1b7c:	add	x0, x0, #0xcd8
    1b80:	mov	w2, #0x234                 	// #564
    1b84:	bl	750 <__assert_fail@plt>
    1b88:	adrp	x3, 1000 <gconv@@Base+0x6f0>
    1b8c:	adrp	x1, 1000 <gconv@@Base+0x6f0>
    1b90:	adrp	x0, 1000 <gconv@@Base+0x6f0>
    1b94:	add	x3, x3, #0xe50
    1b98:	add	x1, x1, #0xcc0
    1b9c:	add	x0, x0, #0xcd8
    1ba0:	mov	w2, #0x1a4                 	// #420
    1ba4:	stp	x25, x26, [sp, #64]
    1ba8:	bl	750 <__assert_fail@plt>
    1bac:	adrp	x3, 1000 <gconv@@Base+0x6f0>
    1bb0:	adrp	x1, 1000 <gconv@@Base+0x6f0>
    1bb4:	adrp	x0, 1000 <gconv@@Base+0x6f0>
    1bb8:	add	x3, x3, #0xe50
    1bbc:	add	x1, x1, #0xcc0
    1bc0:	add	x0, x0, #0xe10
    1bc4:	mov	w2, #0x31e                 	// #798
    1bc8:	bl	750 <__assert_fail@plt>
    1bcc:	adrp	x3, 1000 <gconv@@Base+0x6f0>
    1bd0:	add	x3, x3, #0xe38
    1bd4:	adrp	x1, 1000 <gconv@@Base+0x6f0>
    1bd8:	adrp	x0, 1000 <gconv@@Base+0x6f0>
    1bdc:	add	x1, x1, #0xcf0
    1be0:	add	x0, x0, #0xd30
    1be4:	mov	w2, #0x1c9                 	// #457
    1be8:	bl	750 <__assert_fail@plt>
    1bec:	adrp	x3, 1000 <gconv@@Base+0x6f0>
    1bf0:	adrp	x1, 1000 <gconv@@Base+0x6f0>
    1bf4:	add	x3, x3, #0xe38
    1bf8:	b	1b2c <gconv@@Base+0x121c>
    1bfc:	tbnz	w24, #1, 1a0c <gconv@@Base+0x10fc>
    1c00:	ldr	x0, [sp, #208]
    1c04:	b	1a28 <gconv@@Base+0x1118>
    1c08:	adrp	x3, 1000 <gconv@@Base+0x6f0>
    1c0c:	add	x3, x3, #0xe28
    1c10:	adrp	x1, 1000 <gconv@@Base+0x6f0>
    1c14:	adrp	x0, 1000 <gconv@@Base+0x6f0>
    1c18:	add	x1, x1, #0xcf0
    1c1c:	add	x0, x0, #0xda8
    1c20:	mov	w2, #0x1e6                 	// #486
    1c24:	bl	750 <__assert_fail@plt>
    1c28:	adrp	x3, 1000 <gconv@@Base+0x6f0>
    1c2c:	add	x3, x3, #0xe28
    1c30:	adrp	x1, 1000 <gconv@@Base+0x6f0>
    1c34:	adrp	x0, 1000 <gconv@@Base+0x6f0>
    1c38:	add	x1, x1, #0xcf0
    1c3c:	add	x0, x0, #0xd80
    1c40:	mov	w2, #0x1e5                 	// #485
    1c44:	bl	750 <__assert_fail@plt>
    1c48:	adrp	x3, 1000 <gconv@@Base+0x6f0>
    1c4c:	add	x3, x3, #0xe28
    1c50:	adrp	x1, 1000 <gconv@@Base+0x6f0>
    1c54:	adrp	x0, 1000 <gconv@@Base+0x6f0>
    1c58:	add	x1, x1, #0xcf0
    1c5c:	add	x0, x0, #0xd58
    1c60:	mov	w2, #0x1db                 	// #475
    1c64:	bl	750 <__assert_fail@plt>
    1c68:	adrp	x3, 1000 <gconv@@Base+0x6f0>
    1c6c:	adrp	x1, 1000 <gconv@@Base+0x6f0>
    1c70:	add	x3, x3, #0xe28
    1c74:	b	1bd8 <gconv@@Base+0x12c8>
    1c78:	adrp	x3, 1000 <gconv@@Base+0x6f0>
    1c7c:	adrp	x1, 1000 <gconv@@Base+0x6f0>
    1c80:	add	x3, x3, #0xe38
    1c84:	b	1c14 <gconv@@Base+0x1304>
    1c88:	adrp	x3, 1000 <gconv@@Base+0x6f0>
    1c8c:	adrp	x1, 1000 <gconv@@Base+0x6f0>
    1c90:	add	x3, x3, #0xe38
    1c94:	b	1c34 <gconv@@Base+0x1324>
    1c98:	adrp	x3, 1000 <gconv@@Base+0x6f0>
    1c9c:	adrp	x1, 1000 <gconv@@Base+0x6f0>
    1ca0:	add	x3, x3, #0xe38
    1ca4:	b	1c54 <gconv@@Base+0x1344>

Disassembly of section .fini:

0000000000001ca8 <.fini>:
    1ca8:	stp	x29, x30, [sp, #-16]!
    1cac:	mov	x29, sp
    1cb0:	ldp	x29, x30, [sp], #16
    1cb4:	ret
