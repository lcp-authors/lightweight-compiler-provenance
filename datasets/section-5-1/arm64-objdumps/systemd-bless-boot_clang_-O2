
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//systemd-bless-boot_clang_-O2:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000401478 <_init>:
  401478:	stp	x29, x30, [sp, #-16]!
  40147c:	mov	x29, sp
  401480:	bl	401850 <call_weak_fn>
  401484:	ldp	x29, x30, [sp], #16
  401488:	ret

Disassembly of section .plt:

0000000000401490 <__libc_start_main@plt-0x20>:
  401490:	stp	x16, x30, [sp, #-16]!
  401494:	adrp	x16, 41f000 <__FRAME_END__+0x1b1a8>
  401498:	ldr	x17, [x16, #3664]
  40149c:	add	x16, x16, #0xe50
  4014a0:	br	x17
  4014a4:	nop
  4014a8:	nop
  4014ac:	nop

00000000004014b0 <__libc_start_main@plt>:
  4014b0:	adrp	x16, 41f000 <__FRAME_END__+0x1b1a8>
  4014b4:	ldr	x17, [x16, #3672]
  4014b8:	add	x16, x16, #0xe58
  4014bc:	br	x17

00000000004014c0 <abort@plt>:
  4014c0:	adrp	x16, 41f000 <__FRAME_END__+0x1b1a8>
  4014c4:	ldr	x17, [x16, #3680]
  4014c8:	add	x16, x16, #0xe60
  4014cc:	br	x17

00000000004014d0 <__gmon_start__@plt>:
  4014d0:	adrp	x16, 41f000 <__FRAME_END__+0x1b1a8>
  4014d4:	ldr	x17, [x16, #3688]
  4014d8:	add	x16, x16, #0xe68
  4014dc:	br	x17

00000000004014e0 <strv_free@plt>:
  4014e0:	adrp	x16, 41f000 <__FRAME_END__+0x1b1a8>
  4014e4:	ldr	x17, [x16, #3696]
  4014e8:	add	x16, x16, #0xe70
  4014ec:	br	x17

00000000004014f0 <log_parse_environment_realm@plt>:
  4014f0:	adrp	x16, 41f000 <__FRAME_END__+0x1b1a8>
  4014f4:	ldr	x17, [x16, #3704]
  4014f8:	add	x16, x16, #0xe78
  4014fc:	br	x17

0000000000401500 <log_open@plt>:
  401500:	adrp	x16, 41f000 <__FRAME_END__+0x1b1a8>
  401504:	ldr	x17, [x16, #3712]
  401508:	add	x16, x16, #0xe80
  40150c:	br	x17

0000000000401510 <getopt_long@plt>:
  401510:	adrp	x16, 41f000 <__FRAME_END__+0x1b1a8>
  401514:	ldr	x17, [x16, #3720]
  401518:	add	x16, x16, #0xe88
  40151c:	br	x17

0000000000401520 <strv_extend@plt>:
  401520:	adrp	x16, 41f000 <__FRAME_END__+0x1b1a8>
  401524:	ldr	x17, [x16, #3728]
  401528:	add	x16, x16, #0xe90
  40152c:	br	x17

0000000000401530 <log_oom_internal@plt>:
  401530:	adrp	x16, 41f000 <__FRAME_END__+0x1b1a8>
  401534:	ldr	x17, [x16, #3736]
  401538:	add	x16, x16, #0xe98
  40153c:	br	x17

0000000000401540 <version@plt>:
  401540:	adrp	x16, 41f000 <__FRAME_END__+0x1b1a8>
  401544:	ldr	x17, [x16, #3744]
  401548:	add	x16, x16, #0xea0
  40154c:	br	x17

0000000000401550 <detect_container@plt>:
  401550:	adrp	x16, 41f000 <__FRAME_END__+0x1b1a8>
  401554:	ldr	x17, [x16, #3752]
  401558:	add	x16, x16, #0xea8
  40155c:	br	x17

0000000000401560 <log_get_max_level_realm@plt>:
  401560:	adrp	x16, 41f000 <__FRAME_END__+0x1b1a8>
  401564:	ldr	x17, [x16, #3760]
  401568:	add	x16, x16, #0xeb0
  40156c:	br	x17

0000000000401570 <is_efi_boot@plt>:
  401570:	adrp	x16, 41f000 <__FRAME_END__+0x1b1a8>
  401574:	ldr	x17, [x16, #3768]
  401578:	add	x16, x16, #0xeb8
  40157c:	br	x17

0000000000401580 <dispatch_verb@plt>:
  401580:	adrp	x16, 41f000 <__FRAME_END__+0x1b1a8>
  401584:	ldr	x17, [x16, #3776]
  401588:	add	x16, x16, #0xec0
  40158c:	br	x17

0000000000401590 <log_internal_realm@plt>:
  401590:	adrp	x16, 41f000 <__FRAME_END__+0x1b1a8>
  401594:	ldr	x17, [x16, #3784]
  401598:	add	x16, x16, #0xec8
  40159c:	br	x17

00000000004015a0 <ask_password_agent_close@plt>:
  4015a0:	adrp	x16, 41f000 <__FRAME_END__+0x1b1a8>
  4015a4:	ldr	x17, [x16, #3792]
  4015a8:	add	x16, x16, #0xed0
  4015ac:	br	x17

00000000004015b0 <polkit_agent_close@plt>:
  4015b0:	adrp	x16, 41f000 <__FRAME_END__+0x1b1a8>
  4015b4:	ldr	x17, [x16, #3800]
  4015b8:	add	x16, x16, #0xed8
  4015bc:	br	x17

00000000004015c0 <pager_close@plt>:
  4015c0:	adrp	x16, 41f000 <__FRAME_END__+0x1b1a8>
  4015c4:	ldr	x17, [x16, #3808]
  4015c8:	add	x16, x16, #0xee0
  4015cc:	br	x17

00000000004015d0 <mac_selinux_finish@plt>:
  4015d0:	adrp	x16, 41f000 <__FRAME_END__+0x1b1a8>
  4015d4:	ldr	x17, [x16, #3816]
  4015d8:	add	x16, x16, #0xee8
  4015dc:	br	x17

00000000004015e0 <log_assert_failed_realm@plt>:
  4015e0:	adrp	x16, 41f000 <__FRAME_END__+0x1b1a8>
  4015e4:	ldr	x17, [x16, #3824]
  4015e8:	add	x16, x16, #0xef0
  4015ec:	br	x17

00000000004015f0 <log_assert_failed_unreachable_realm@plt>:
  4015f0:	adrp	x16, 41f000 <__FRAME_END__+0x1b1a8>
  4015f4:	ldr	x17, [x16, #3832]
  4015f8:	add	x16, x16, #0xef8
  4015fc:	br	x17

0000000000401600 <terminal_urlify_man@plt>:
  401600:	adrp	x16, 41f000 <__FRAME_END__+0x1b1a8>
  401604:	ldr	x17, [x16, #3840]
  401608:	add	x16, x16, #0xf00
  40160c:	br	x17

0000000000401610 <colors_enabled@plt>:
  401610:	adrp	x16, 41f000 <__FRAME_END__+0x1b1a8>
  401614:	ldr	x17, [x16, #3848]
  401618:	add	x16, x16, #0xf08
  40161c:	br	x17

0000000000401620 <printf@plt>:
  401620:	adrp	x16, 41f000 <__FRAME_END__+0x1b1a8>
  401624:	ldr	x17, [x16, #3856]
  401628:	add	x16, x16, #0xf10
  40162c:	br	x17

0000000000401630 <free@plt>:
  401630:	adrp	x16, 41f000 <__FRAME_END__+0x1b1a8>
  401634:	ldr	x17, [x16, #3864]
  401638:	add	x16, x16, #0xf18
  40163c:	br	x17

0000000000401640 <puts@plt>:
  401640:	adrp	x16, 41f000 <__FRAME_END__+0x1b1a8>
  401644:	ldr	x17, [x16, #3872]
  401648:	add	x16, x16, #0xf20
  40164c:	br	x17

0000000000401650 <strjoin_real@plt>:
  401650:	adrp	x16, 41f000 <__FRAME_END__+0x1b1a8>
  401654:	ldr	x17, [x16, #3880]
  401658:	add	x16, x16, #0xf28
  40165c:	br	x17

0000000000401660 <__errno_location@plt>:
  401660:	adrp	x16, 41f000 <__FRAME_END__+0x1b1a8>
  401664:	ldr	x17, [x16, #3888]
  401668:	add	x16, x16, #0xf30
  40166c:	br	x17

0000000000401670 <safe_close@plt>:
  401670:	adrp	x16, 41f000 <__FRAME_END__+0x1b1a8>
  401674:	ldr	x17, [x16, #3896]
  401678:	add	x16, x16, #0xf38
  40167c:	br	x17

0000000000401680 <open64@plt>:
  401680:	adrp	x16, 41f000 <__FRAME_END__+0x1b1a8>
  401684:	ldr	x17, [x16, #3904]
  401688:	add	x16, x16, #0xf40
  40168c:	br	x17

0000000000401690 <faccessat@plt>:
  401690:	adrp	x16, 41f000 <__FRAME_END__+0x1b1a8>
  401694:	ldr	x17, [x16, #3912]
  401698:	add	x16, x16, #0xf48
  40169c:	br	x17

00000000004016a0 <strcmp@plt>:
  4016a0:	adrp	x16, 41f000 <__FRAME_END__+0x1b1a8>
  4016a4:	ldr	x17, [x16, #3920]
  4016a8:	add	x16, x16, #0xf50
  4016ac:	br	x17

00000000004016b0 <rename_noreplace@plt>:
  4016b0:	adrp	x16, 41f000 <__FRAME_END__+0x1b1a8>
  4016b4:	ldr	x17, [x16, #3928]
  4016b8:	add	x16, x16, #0xf58
  4016bc:	br	x17

00000000004016c0 <dirname_malloc@plt>:
  4016c0:	adrp	x16, 41f000 <__FRAME_END__+0x1b1a8>
  4016c4:	ldr	x17, [x16, #3936]
  4016c8:	add	x16, x16, #0xf60
  4016cc:	br	x17

00000000004016d0 <fsync_path_at@plt>:
  4016d0:	adrp	x16, 41f000 <__FRAME_END__+0x1b1a8>
  4016d4:	ldr	x17, [x16, #3944]
  4016d8:	add	x16, x16, #0xf68
  4016dc:	br	x17

00000000004016e0 <syncfs@plt>:
  4016e0:	adrp	x16, 41f000 <__FRAME_END__+0x1b1a8>
  4016e4:	ldr	x17, [x16, #3952]
  4016e8:	add	x16, x16, #0xf70
  4016ec:	br	x17

00000000004016f0 <efi_get_variable_string@plt>:
  4016f0:	adrp	x16, 41f000 <__FRAME_END__+0x1b1a8>
  4016f4:	ldr	x17, [x16, #3960]
  4016f8:	add	x16, x16, #0xf78
  4016fc:	br	x17

0000000000401700 <efi_tilt_backslashes@plt>:
  401700:	adrp	x16, 41f000 <__FRAME_END__+0x1b1a8>
  401704:	ldr	x17, [x16, #3968]
  401708:	add	x16, x16, #0xf80
  40170c:	br	x17

0000000000401710 <path_is_normalized@plt>:
  401710:	adrp	x16, 41f000 <__FRAME_END__+0x1b1a8>
  401714:	ldr	x17, [x16, #3976]
  401718:	add	x16, x16, #0xf88
  40171c:	br	x17

0000000000401720 <path_is_absolute@plt>:
  401720:	adrp	x16, 41f000 <__FRAME_END__+0x1b1a8>
  401724:	ldr	x17, [x16, #3984]
  401728:	add	x16, x16, #0xf90
  40172c:	br	x17

0000000000401730 <last_path_component@plt>:
  401730:	adrp	x16, 41f000 <__FRAME_END__+0x1b1a8>
  401734:	ldr	x17, [x16, #3992]
  401738:	add	x16, x16, #0xf98
  40173c:	br	x17

0000000000401740 <strrchr@plt>:
  401740:	adrp	x16, 41f000 <__FRAME_END__+0x1b1a8>
  401744:	ldr	x17, [x16, #4000]
  401748:	add	x16, x16, #0xfa0
  40174c:	br	x17

0000000000401750 <strndup@plt>:
  401750:	adrp	x16, 41f000 <__FRAME_END__+0x1b1a8>
  401754:	ldr	x17, [x16, #4008]
  401758:	add	x16, x16, #0xfa8
  40175c:	br	x17

0000000000401760 <strdup@plt>:
  401760:	adrp	x16, 41f000 <__FRAME_END__+0x1b1a8>
  401764:	ldr	x17, [x16, #4016]
  401768:	add	x16, x16, #0xfb0
  40176c:	br	x17

0000000000401770 <find_esp_and_warn@plt>:
  401770:	adrp	x16, 41f000 <__FRAME_END__+0x1b1a8>
  401774:	ldr	x17, [x16, #4024]
  401778:	add	x16, x16, #0xfb8
  40177c:	br	x17

0000000000401780 <find_xbootldr_and_warn@plt>:
  401780:	adrp	x16, 41f000 <__FRAME_END__+0x1b1a8>
  401784:	ldr	x17, [x16, #4032]
  401788:	add	x16, x16, #0xfc0
  40178c:	br	x17

0000000000401790 <strv_new_internal@plt>:
  401790:	adrp	x16, 41f000 <__FRAME_END__+0x1b1a8>
  401794:	ldr	x17, [x16, #4040]
  401798:	add	x16, x16, #0xfc8
  40179c:	br	x17

00000000004017a0 <strv_join_prefix@plt>:
  4017a0:	adrp	x16, 41f000 <__FRAME_END__+0x1b1a8>
  4017a4:	ldr	x17, [x16, #4048]
  4017a8:	add	x16, x16, #0xfd0
  4017ac:	br	x17

00000000004017b0 <asprintf@plt>:
  4017b0:	adrp	x16, 41f000 <__FRAME_END__+0x1b1a8>
  4017b4:	ldr	x17, [x16, #4056]
  4017b8:	add	x16, x16, #0xfd8
  4017bc:	br	x17

00000000004017c0 <strspn@plt>:
  4017c0:	adrp	x16, 41f000 <__FRAME_END__+0x1b1a8>
  4017c4:	ldr	x17, [x16, #4064]
  4017c8:	add	x16, x16, #0xfe0
  4017cc:	br	x17

00000000004017d0 <strnlen@plt>:
  4017d0:	adrp	x16, 41f000 <__FRAME_END__+0x1b1a8>
  4017d4:	ldr	x17, [x16, #4072]
  4017d8:	add	x16, x16, #0xfe8
  4017dc:	br	x17

00000000004017e0 <memcpy@plt>:
  4017e0:	adrp	x16, 41f000 <__FRAME_END__+0x1b1a8>
  4017e4:	ldr	x17, [x16, #4080]
  4017e8:	add	x16, x16, #0xff0
  4017ec:	br	x17

00000000004017f0 <safe_atollu@plt>:
  4017f0:	adrp	x16, 41f000 <__FRAME_END__+0x1b1a8>
  4017f4:	ldr	x17, [x16, #4088]
  4017f8:	add	x16, x16, #0xff8
  4017fc:	br	x17

Disassembly of section .text:

0000000000401800 <_start>:
  401800:	mov	x29, #0x0                   	// #0
  401804:	mov	x30, #0x0                   	// #0
  401808:	mov	x5, x0
  40180c:	ldr	x1, [sp]
  401810:	add	x2, sp, #0x8
  401814:	mov	x6, sp
  401818:	movz	x0, #0x0, lsl #48
  40181c:	movk	x0, #0x0, lsl #32
  401820:	movk	x0, #0x40, lsl #16
  401824:	movk	x0, #0x191c
  401828:	movz	x3, #0x0, lsl #48
  40182c:	movk	x3, #0x0, lsl #32
  401830:	movk	x3, #0x40, lsl #16
  401834:	movk	x3, #0x3128
  401838:	movz	x4, #0x0, lsl #48
  40183c:	movk	x4, #0x0, lsl #32
  401840:	movk	x4, #0x40, lsl #16
  401844:	movk	x4, #0x31a8
  401848:	bl	4014b0 <__libc_start_main@plt>
  40184c:	bl	4014c0 <abort@plt>

0000000000401850 <call_weak_fn>:
  401850:	adrp	x0, 41f000 <__FRAME_END__+0x1b1a8>
  401854:	ldr	x0, [x0, #3624]
  401858:	cbz	x0, 401860 <call_weak_fn+0x10>
  40185c:	b	4014d0 <__gmon_start__@plt>
  401860:	ret
  401864:	udf	#0

0000000000401868 <deregister_tm_clones>:
  401868:	adrp	x0, 420000 <completed.8445>
  40186c:	add	x0, x0, #0x0
  401870:	adrp	x1, 420000 <completed.8445>
  401874:	add	x1, x1, #0x0
  401878:	cmp	x1, x0
  40187c:	b.eq	401894 <deregister_tm_clones+0x2c>  // b.none
  401880:	adrp	x1, 403000 <parse_counter+0x208>
  401884:	ldr	x1, [x1, #448]
  401888:	cbz	x1, 401894 <deregister_tm_clones+0x2c>
  40188c:	mov	x16, x1
  401890:	br	x16
  401894:	ret

0000000000401898 <register_tm_clones>:
  401898:	adrp	x0, 420000 <completed.8445>
  40189c:	add	x0, x0, #0x0
  4018a0:	adrp	x1, 420000 <completed.8445>
  4018a4:	add	x1, x1, #0x0
  4018a8:	sub	x1, x1, x0
  4018ac:	lsr	x2, x1, #63
  4018b0:	add	x1, x2, x1, asr #3
  4018b4:	cmp	xzr, x1, asr #1
  4018b8:	asr	x1, x1, #1
  4018bc:	b.eq	4018d4 <register_tm_clones+0x3c>  // b.none
  4018c0:	adrp	x2, 403000 <parse_counter+0x208>
  4018c4:	ldr	x2, [x2, #456]
  4018c8:	cbz	x2, 4018d4 <register_tm_clones+0x3c>
  4018cc:	mov	x16, x2
  4018d0:	br	x16
  4018d4:	ret

00000000004018d8 <__do_global_dtors_aux>:
  4018d8:	stp	x29, x30, [sp, #-32]!
  4018dc:	mov	x29, sp
  4018e0:	str	x19, [sp, #16]
  4018e4:	adrp	x19, 420000 <completed.8445>
  4018e8:	ldrb	w0, [x19]
  4018ec:	cbnz	w0, 4018fc <__do_global_dtors_aux+0x24>
  4018f0:	bl	401868 <deregister_tm_clones>
  4018f4:	mov	w0, #0x1                   	// #1
  4018f8:	strb	w0, [x19]
  4018fc:	ldr	x19, [sp, #16]
  401900:	ldp	x29, x30, [sp], #32
  401904:	ret

0000000000401908 <frame_dummy>:
  401908:	b	401898 <register_tm_clones>

000000000040190c <__unique_prefix_static_destructor_wrapper0>:
  40190c:	ldr	x0, [x0]
  401910:	cbz	x0, 401918 <__unique_prefix_static_destructor_wrapper0+0xc>
  401914:	b	4014e0 <strv_free@plt>
  401918:	ret

000000000040191c <main>:
  40191c:	stp	x29, x30, [sp, #-64]!
  401920:	adrp	x8, 420000 <completed.8445>
  401924:	stp	x20, x19, [sp, #48]
  401928:	mov	w20, w0
  40192c:	adrp	x9, 420000 <completed.8445>
  401930:	str	w0, [x8, #16]
  401934:	mov	w0, wzr
  401938:	stp	x24, x23, [sp, #16]
  40193c:	stp	x22, x21, [sp, #32]
  401940:	mov	x29, sp
  401944:	mov	x19, x1
  401948:	str	x1, [x9, #24]
  40194c:	bl	4014f0 <log_parse_environment_realm@plt>
  401950:	bl	401500 <log_open@plt>
  401954:	tbnz	w20, #31, 401b38 <main+0x21c>
  401958:	cbz	x19, 401b5c <main+0x240>
  40195c:	adrp	x21, 403000 <parse_counter+0x208>
  401960:	adrp	x22, 403000 <parse_counter+0x208>
  401964:	adrp	x23, 420000 <completed.8445>
  401968:	add	x21, x21, #0xd4e
  40196c:	add	x22, x22, #0x290
  401970:	adrp	x24, 420000 <completed.8445>
  401974:	add	x23, x23, #0x8
  401978:	mov	w0, w20
  40197c:	mov	x1, x19
  401980:	mov	x2, x21
  401984:	mov	x3, x22
  401988:	mov	x4, xzr
  40198c:	bl	401510 <getopt_long@plt>
  401990:	tbnz	w0, #31, 401a1c <main+0x100>
  401994:	cmp	w0, #0xff
  401998:	b.le	4019d4 <main+0xb8>
  40199c:	cmp	w0, #0x100
  4019a0:	b.ne	401a04 <main+0xe8>  // b.any
  4019a4:	ldr	x1, [x24, #32]
  4019a8:	mov	x0, x23
  4019ac:	bl	401520 <strv_extend@plt>
  4019b0:	tbz	w0, #31, 401978 <main+0x5c>
  4019b4:	adrp	x1, 403000 <parse_counter+0x208>
  4019b8:	adrp	x3, 403000 <parse_counter+0x208>
  4019bc:	add	x1, x1, #0x336
  4019c0:	add	x3, x3, #0xd50
  4019c4:	mov	w2, #0x55                  	// #85
  4019c8:	mov	w0, wzr
  4019cc:	bl	401530 <log_oom_internal@plt>
  4019d0:	b	401a10 <main+0xf4>
  4019d4:	cmp	w0, #0x3f
  4019d8:	b.ne	4019e4 <main+0xc8>  // b.any
  4019dc:	mov	w21, #0xffffffea            	// #-22
  4019e0:	b	401ad0 <main+0x1b4>
  4019e4:	cmp	w0, #0x68
  4019e8:	b.ne	401b80 <main+0x264>  // b.any
  4019ec:	mov	w0, wzr
  4019f0:	mov	x1, xzr
  4019f4:	mov	x2, xzr
  4019f8:	bl	401ba4 <help>
  4019fc:	mov	w21, wzr
  401a00:	b	401ad0 <main+0x1b4>
  401a04:	cmp	w0, #0x101
  401a08:	b.ne	401b80 <main+0x264>  // b.any
  401a0c:	bl	401540 <version@plt>
  401a10:	mov	w21, w0
  401a14:	cmp	w0, #0x1
  401a18:	b.lt	401ad0 <main+0x1b4>  // b.tstop
  401a1c:	bl	401550 <detect_container@plt>
  401a20:	cmp	w0, #0x1
  401a24:	b.lt	401a64 <main+0x148>  // b.tstop
  401a28:	mov	w0, wzr
  401a2c:	bl	401560 <log_get_max_level_realm@plt>
  401a30:	cmp	w0, #0x3
  401a34:	b.lt	401acc <main+0x1b0>  // b.tstop
  401a38:	adrp	x2, 403000 <parse_counter+0x208>
  401a3c:	adrp	x4, 403000 <parse_counter+0x208>
  401a40:	adrp	x5, 403000 <parse_counter+0x208>
  401a44:	mov	w1, #0x5f                  	// #95
  401a48:	add	x2, x2, #0x336
  401a4c:	add	x4, x4, #0x34c
  401a50:	add	x5, x5, #0x350
  401a54:	mov	w0, #0x3                   	// #3
  401a58:	movk	w1, #0x4000, lsl #16
  401a5c:	mov	w3, #0x204                 	// #516
  401a60:	b	401ac0 <main+0x1a4>
  401a64:	bl	401570 <is_efi_boot@plt>
  401a68:	tbz	w0, #0, 401a88 <main+0x16c>
  401a6c:	adrp	x2, 403000 <parse_counter+0x208>
  401a70:	add	x2, x2, #0x1d0
  401a74:	mov	w0, w20
  401a78:	mov	x1, x19
  401a7c:	mov	x3, xzr
  401a80:	bl	401580 <dispatch_verb@plt>
  401a84:	b	401ac4 <main+0x1a8>
  401a88:	mov	w0, wzr
  401a8c:	bl	401560 <log_get_max_level_realm@plt>
  401a90:	cmp	w0, #0x3
  401a94:	b.lt	401acc <main+0x1b0>  // b.tstop
  401a98:	adrp	x2, 403000 <parse_counter+0x208>
  401a9c:	adrp	x4, 403000 <parse_counter+0x208>
  401aa0:	adrp	x5, 403000 <parse_counter+0x208>
  401aa4:	mov	w1, #0x5f                  	// #95
  401aa8:	add	x2, x2, #0x336
  401aac:	add	x4, x4, #0x34c
  401ab0:	add	x5, x5, #0x37f
  401ab4:	mov	w0, #0x3                   	// #3
  401ab8:	movk	w1, #0x4000, lsl #16
  401abc:	mov	w3, #0x208                 	// #520
  401ac0:	bl	401590 <log_internal_realm@plt>
  401ac4:	mov	w21, w0
  401ac8:	b	401ad0 <main+0x1b4>
  401acc:	mov	w21, #0xffffffa1            	// #-95
  401ad0:	bl	4015a0 <ask_password_agent_close@plt>
  401ad4:	bl	4015b0 <polkit_agent_close@plt>
  401ad8:	bl	4015c0 <pager_close@plt>
  401adc:	bl	4015d0 <mac_selinux_finish@plt>
  401ae0:	adrp	x8, 41f000 <__FRAME_END__+0x1b1a8>
  401ae4:	ldr	x8, [x8, #3632]
  401ae8:	adrp	x19, 41f000 <__FRAME_END__+0x1b1a8>
  401aec:	ldr	x19, [x19, #3640]
  401af0:	add	x9, x8, #0x7
  401af4:	and	x20, x9, #0xfffffffffffffff8
  401af8:	cmp	x20, x19
  401afc:	cset	w9, cs  // cs = hs, nlast
  401b00:	cmp	x8, #0x0
  401b04:	cset	w8, eq  // eq = none
  401b08:	orr	w8, w8, w9
  401b0c:	tbnz	w8, #0, 401b20 <main+0x204>
  401b10:	ldp	x0, x8, [x20], #16
  401b14:	blr	x8
  401b18:	cmp	x20, x19
  401b1c:	b.cc	401b10 <main+0x1f4>  // b.lo, b.ul, b.last
  401b20:	lsr	w0, w21, #31
  401b24:	ldp	x20, x19, [sp, #48]
  401b28:	ldp	x22, x21, [sp, #32]
  401b2c:	ldp	x24, x23, [sp, #16]
  401b30:	ldp	x29, x30, [sp], #64
  401b34:	ret
  401b38:	adrp	x1, 403000 <parse_counter+0x208>
  401b3c:	adrp	x2, 403000 <parse_counter+0x208>
  401b40:	adrp	x4, 403000 <parse_counter+0x208>
  401b44:	add	x1, x1, #0xd22
  401b48:	add	x2, x2, #0x336
  401b4c:	add	x4, x4, #0xd2c
  401b50:	mov	w3, #0x45                  	// #69
  401b54:	mov	w0, wzr
  401b58:	bl	4015e0 <log_assert_failed_realm@plt>
  401b5c:	adrp	x1, 403000 <parse_counter+0x208>
  401b60:	adrp	x2, 403000 <parse_counter+0x208>
  401b64:	adrp	x4, 403000 <parse_counter+0x208>
  401b68:	add	x1, x1, #0xd49
  401b6c:	add	x2, x2, #0x336
  401b70:	add	x4, x4, #0xd2c
  401b74:	mov	w3, #0x46                  	// #70
  401b78:	mov	w0, wzr
  401b7c:	bl	4015e0 <log_assert_failed_realm@plt>
  401b80:	adrp	x1, 403000 <parse_counter+0x208>
  401b84:	adrp	x2, 403000 <parse_counter+0x208>
  401b88:	adrp	x4, 403000 <parse_counter+0x208>
  401b8c:	add	x1, x1, #0xd5b
  401b90:	add	x2, x2, #0x336
  401b94:	add	x4, x4, #0xd2c
  401b98:	mov	w3, #0x5c                  	// #92
  401b9c:	mov	w0, wzr
  401ba0:	bl	4015f0 <log_assert_failed_unreachable_realm@plt>

0000000000401ba4 <help>:
  401ba4:	stp	x29, x30, [sp, #-48]!
  401ba8:	mov	x29, sp
  401bac:	adrp	x0, 403000 <parse_counter+0x208>
  401bb0:	adrp	x1, 403000 <parse_counter+0x208>
  401bb4:	add	x0, x0, #0x3b0
  401bb8:	add	x1, x1, #0x3cb
  401bbc:	add	x2, x29, #0x18
  401bc0:	str	x21, [sp, #16]
  401bc4:	stp	x20, x19, [sp, #32]
  401bc8:	str	xzr, [x29, #24]
  401bcc:	bl	401600 <terminal_urlify_man@plt>
  401bd0:	tbnz	w0, #31, 401c2c <help+0x88>
  401bd4:	adrp	x8, 420000 <completed.8445>
  401bd8:	ldr	x19, [x8, #40]
  401bdc:	bl	401610 <colors_enabled@plt>
  401be0:	adrp	x21, 403000 <parse_counter+0x208>
  401be4:	adrp	x8, 403000 <parse_counter+0x208>
  401be8:	add	x21, x21, #0x56a
  401bec:	add	x8, x8, #0x560
  401bf0:	tst	w0, #0x1
  401bf4:	csel	x20, x8, x21, ne  // ne = any
  401bf8:	bl	401610 <colors_enabled@plt>
  401bfc:	ldr	x4, [x29, #24]
  401c00:	adrp	x8, 403000 <parse_counter+0x208>
  401c04:	add	x8, x8, #0x56b
  401c08:	tst	w0, #0x1
  401c0c:	adrp	x0, 403000 <parse_counter+0x208>
  401c10:	csel	x3, x8, x21, ne  // ne = any
  401c14:	add	x0, x0, #0x3cd
  401c18:	mov	x1, x19
  401c1c:	mov	x2, x20
  401c20:	bl	401620 <printf@plt>
  401c24:	mov	w19, wzr
  401c28:	b	401c4c <help+0xa8>
  401c2c:	adrp	x1, 403000 <parse_counter+0x208>
  401c30:	adrp	x3, 403000 <parse_counter+0x208>
  401c34:	add	x1, x1, #0x336
  401c38:	add	x3, x3, #0x310
  401c3c:	mov	w2, #0x20                  	// #32
  401c40:	mov	w0, wzr
  401c44:	bl	401530 <log_oom_internal@plt>
  401c48:	mov	w19, w0
  401c4c:	ldr	x0, [x29, #24]
  401c50:	bl	401630 <free@plt>
  401c54:	mov	w0, w19
  401c58:	ldp	x20, x19, [sp, #32]
  401c5c:	ldr	x21, [sp, #16]
  401c60:	ldp	x29, x30, [sp], #48
  401c64:	ret

0000000000401c68 <verb_status>:
  401c68:	sub	sp, sp, #0x80
  401c6c:	stp	x29, x30, [sp, #64]
  401c70:	add	x29, sp, #0x40
  401c74:	sub	x0, x29, #0x8
  401c78:	sub	x1, x29, #0x10
  401c7c:	add	x2, sp, #0x18
  401c80:	add	x3, sp, #0x10
  401c84:	sub	x4, x29, #0x18
  401c88:	stp	x24, x23, [sp, #80]
  401c8c:	stp	x22, x21, [sp, #96]
  401c90:	stp	x20, x19, [sp, #112]
  401c94:	stp	xzr, xzr, [x29, #-16]
  401c98:	stur	xzr, [x29, #-24]
  401c9c:	str	xzr, [sp, #32]
  401ca0:	bl	402848 <acquire_boot_count_path>
  401ca4:	cmn	w0, #0x31
  401ca8:	b.ne	401cc4 <verb_status+0x5c>  // b.any
  401cac:	adrp	x0, 403000 <parse_counter+0x208>
  401cb0:	add	x0, x0, #0x570
  401cb4:	bl	401640 <puts@plt>
  401cb8:	mov	x19, xzr
  401cbc:	mov	w21, wzr
  401cc0:	b	401f4c <verb_status+0x2e4>
  401cc4:	mov	w21, w0
  401cc8:	tbnz	w0, #31, 401dac <verb_status+0x144>
  401ccc:	bl	402b18 <acquire_path>
  401cd0:	tbnz	w0, #31, 401db4 <verb_status+0x14c>
  401cd4:	ldur	x0, [x29, #-16]
  401cd8:	cbz	x0, 4020f4 <verb_status+0x48c>
  401cdc:	ldur	x1, [x29, #-24]
  401ce0:	cbz	x1, 402114 <verb_status+0x4ac>
  401ce4:	mov	x2, xzr
  401ce8:	bl	401650 <strjoin_real@plt>
  401cec:	mov	x19, x0
  401cf0:	cbz	x0, 401ed4 <verb_status+0x26c>
  401cf4:	ldp	x2, x0, [x29, #-24]
  401cf8:	ldr	x1, [sp, #16]
  401cfc:	add	x3, sp, #0x20
  401d00:	bl	402cec <make_bad>
  401d04:	tbnz	w0, #31, 401f2c <verb_status+0x2c4>
  401d08:	mov	w0, wzr
  401d0c:	bl	401560 <log_get_max_level_realm@plt>
  401d10:	cmp	w0, #0x7
  401d14:	b.lt	401d50 <verb_status+0xe8>  // b.tstop
  401d18:	ldur	x6, [x29, #-8]
  401d1c:	ldr	x8, [sp, #32]
  401d20:	adrp	x2, 403000 <parse_counter+0x208>
  401d24:	adrp	x4, 403000 <parse_counter+0x208>
  401d28:	adrp	x5, 403000 <parse_counter+0x208>
  401d2c:	add	x2, x2, #0x336
  401d30:	add	x4, x4, #0x576
  401d34:	add	x5, x5, #0x582
  401d38:	mov	w0, #0x7                   	// #7
  401d3c:	mov	w3, #0x15e                 	// #350
  401d40:	mov	w1, wzr
  401d44:	mov	x7, x19
  401d48:	str	x8, [sp]
  401d4c:	bl	401590 <log_internal_realm@plt>
  401d50:	mov	w0, wzr
  401d54:	bl	401560 <log_get_max_level_realm@plt>
  401d58:	cmp	w0, #0x7
  401d5c:	b.lt	401d8c <verb_status+0x124>  // b.tstop
  401d60:	ldp	x7, x6, [sp, #16]
  401d64:	adrp	x2, 403000 <parse_counter+0x208>
  401d68:	adrp	x4, 403000 <parse_counter+0x208>
  401d6c:	adrp	x5, 403000 <parse_counter+0x208>
  401d70:	add	x2, x2, #0x336
  401d74:	add	x4, x4, #0x576
  401d78:	add	x5, x5, #0x5d5
  401d7c:	mov	w0, #0x7                   	// #7
  401d80:	mov	w3, #0x162                 	// #354
  401d84:	mov	w1, wzr
  401d88:	bl	401590 <log_internal_realm@plt>
  401d8c:	adrp	x8, 420000 <completed.8445>
  401d90:	ldr	x8, [x8, #8]
  401d94:	cbz	x8, 401eec <verb_status+0x284>
  401d98:	ldr	x0, [x8]
  401d9c:	cbz	x0, 401eec <verb_status+0x284>
  401da0:	add	x21, x19, #0x1
  401da4:	add	x24, x8, #0x8
  401da8:	b	401de0 <verb_status+0x178>
  401dac:	mov	x19, xzr
  401db0:	b	401f4c <verb_status+0x2e4>
  401db4:	mov	w21, w0
  401db8:	mov	x19, xzr
  401dbc:	b	401f4c <verb_status+0x2e4>
  401dc0:	bl	401660 <__errno_location@plt>
  401dc4:	ldr	w22, [x0]
  401dc8:	cmp	w22, #0x2
  401dcc:	b.ne	40204c <verb_status+0x3e4>  // b.any
  401dd0:	mov	w0, w20
  401dd4:	bl	401670 <safe_close@plt>
  401dd8:	ldr	x0, [x24], #8
  401ddc:	cbz	x0, 401eec <verb_status+0x284>
  401de0:	mov	w1, #0x4000                	// #16384
  401de4:	movk	w1, #0x8, lsl #16
  401de8:	bl	401680 <open64@plt>
  401dec:	mov	w20, w0
  401df0:	tbnz	w0, #31, 401dc0 <verb_status+0x158>
  401df4:	ldur	x8, [x29, #-8]
  401df8:	cbz	x8, 4020d0 <verb_status+0x468>
  401dfc:	ldrb	w9, [x8]
  401e00:	cmp	w9, #0x2f
  401e04:	b.ne	4020ac <verb_status+0x444>  // b.any
  401e08:	add	x1, x8, #0x1
  401e0c:	mov	w0, w20
  401e10:	mov	w2, wzr
  401e14:	mov	w3, wzr
  401e18:	bl	401690 <faccessat@plt>
  401e1c:	tbz	w0, #31, 401f98 <verb_status+0x330>
  401e20:	bl	401660 <__errno_location@plt>
  401e24:	ldr	w23, [x0]
  401e28:	cmp	w23, #0x2
  401e2c:	b.ne	401fa4 <verb_status+0x33c>  // b.any
  401e30:	ldrb	w8, [x19]
  401e34:	cmp	w8, #0x2f
  401e38:	b.ne	4020ac <verb_status+0x444>  // b.any
  401e3c:	mov	x22, x0
  401e40:	mov	w0, w20
  401e44:	mov	x1, x21
  401e48:	mov	w2, wzr
  401e4c:	mov	w3, wzr
  401e50:	bl	401690 <faccessat@plt>
  401e54:	tbz	w0, #31, 401fe0 <verb_status+0x378>
  401e58:	ldr	w23, [x22]
  401e5c:	cmp	w23, #0x2
  401e60:	b.ne	401fec <verb_status+0x384>  // b.any
  401e64:	ldr	x8, [sp, #32]
  401e68:	cbz	x8, 4020d0 <verb_status+0x468>
  401e6c:	ldrb	w9, [x8]
  401e70:	cmp	w9, #0x2f
  401e74:	b.ne	4020ac <verb_status+0x444>  // b.any
  401e78:	add	x1, x8, #0x1
  401e7c:	mov	w0, w20
  401e80:	mov	w2, wzr
  401e84:	mov	w3, wzr
  401e88:	bl	401690 <faccessat@plt>
  401e8c:	tbz	w0, #31, 402038 <verb_status+0x3d0>
  401e90:	ldr	w22, [x22]
  401e94:	cmp	w22, #0x2
  401e98:	b.eq	401dd0 <verb_status+0x168>  // b.none
  401e9c:	mov	w0, wzr
  401ea0:	bl	401560 <log_get_max_level_realm@plt>
  401ea4:	cmp	w0, #0x3
  401ea8:	b.lt	402090 <verb_status+0x428>  // b.tstop
  401eac:	ldr	x6, [sp, #32]
  401eb0:	adrp	x2, 403000 <parse_counter+0x208>
  401eb4:	adrp	x4, 403000 <parse_counter+0x208>
  401eb8:	adrp	x5, 403000 <parse_counter+0x208>
  401ebc:	add	x2, x2, #0x336
  401ec0:	add	x4, x4, #0x576
  401ec4:	add	x5, x5, #0x61e
  401ec8:	mov	w0, #0x3                   	// #3
  401ecc:	mov	w3, #0x183                 	// #387
  401ed0:	b	402080 <verb_status+0x418>
  401ed4:	adrp	x1, 403000 <parse_counter+0x208>
  401ed8:	adrp	x3, 403000 <parse_counter+0x208>
  401edc:	add	x1, x1, #0x336
  401ee0:	add	x3, x3, #0x576
  401ee4:	mov	w2, #0x153                 	// #339
  401ee8:	b	401f44 <verb_status+0x2dc>
  401eec:	mov	w0, wzr
  401ef0:	bl	401560 <log_get_max_level_realm@plt>
  401ef4:	cmp	w0, #0x3
  401ef8:	b.lt	401f90 <verb_status+0x328>  // b.tstop
  401efc:	adrp	x2, 403000 <parse_counter+0x208>
  401f00:	adrp	x4, 403000 <parse_counter+0x208>
  401f04:	adrp	x5, 403000 <parse_counter+0x208>
  401f08:	mov	w1, #0x10                  	// #16
  401f0c:	add	x2, x2, #0x336
  401f10:	add	x4, x4, #0x576
  401f14:	add	x5, x5, #0x641
  401f18:	mov	w0, #0x3                   	// #3
  401f1c:	movk	w1, #0x4000, lsl #16
  401f20:	mov	w3, #0x188                 	// #392
  401f24:	bl	401590 <log_internal_realm@plt>
  401f28:	b	401f48 <verb_status+0x2e0>
  401f2c:	adrp	x1, 403000 <parse_counter+0x208>
  401f30:	adrp	x3, 403000 <parse_counter+0x208>
  401f34:	add	x1, x1, #0x336
  401f38:	add	x3, x3, #0x576
  401f3c:	mov	w2, #0x157                 	// #343
  401f40:	mov	w0, wzr
  401f44:	bl	401530 <log_oom_internal@plt>
  401f48:	mov	w21, w0
  401f4c:	ldr	x0, [sp, #32]
  401f50:	bl	401630 <free@plt>
  401f54:	mov	x0, x19
  401f58:	bl	401630 <free@plt>
  401f5c:	ldur	x0, [x29, #-24]
  401f60:	bl	401630 <free@plt>
  401f64:	ldur	x0, [x29, #-16]
  401f68:	bl	401630 <free@plt>
  401f6c:	ldur	x0, [x29, #-8]
  401f70:	bl	401630 <free@plt>
  401f74:	mov	w0, w21
  401f78:	ldp	x20, x19, [sp, #112]
  401f7c:	ldp	x22, x21, [sp, #96]
  401f80:	ldp	x24, x23, [sp, #80]
  401f84:	ldp	x29, x30, [sp, #64]
  401f88:	add	sp, sp, #0x80
  401f8c:	ret
  401f90:	mov	w21, #0xfffffff0            	// #-16
  401f94:	b	401f4c <verb_status+0x2e4>
  401f98:	adrp	x0, 403000 <parse_counter+0x208>
  401f9c:	add	x0, x0, #0x325
  401fa0:	b	402040 <verb_status+0x3d8>
  401fa4:	mov	w0, wzr
  401fa8:	bl	401560 <log_get_max_level_realm@plt>
  401fac:	cmp	w0, #0x3
  401fb0:	b.lt	402028 <verb_status+0x3c0>  // b.tstop
  401fb4:	ldur	x6, [x29, #-8]
  401fb8:	adrp	x2, 403000 <parse_counter+0x208>
  401fbc:	adrp	x4, 403000 <parse_counter+0x208>
  401fc0:	adrp	x5, 403000 <parse_counter+0x208>
  401fc4:	add	x2, x2, #0x336
  401fc8:	add	x4, x4, #0x576
  401fcc:	add	x5, x5, #0x61e
  401fd0:	mov	w0, #0x3                   	// #3
  401fd4:	mov	w3, #0x174                 	// #372
  401fd8:	mov	w1, w23
  401fdc:	b	402084 <verb_status+0x41c>
  401fe0:	adrp	x0, 403000 <parse_counter+0x208>
  401fe4:	add	x0, x0, #0x31c
  401fe8:	b	402040 <verb_status+0x3d8>
  401fec:	mov	w0, wzr
  401ff0:	bl	401560 <log_get_max_level_realm@plt>
  401ff4:	cmp	w0, #0x3
  401ff8:	b.lt	402028 <verb_status+0x3c0>  // b.tstop
  401ffc:	adrp	x2, 403000 <parse_counter+0x208>
  402000:	adrp	x4, 403000 <parse_counter+0x208>
  402004:	adrp	x5, 403000 <parse_counter+0x208>
  402008:	add	x2, x2, #0x336
  40200c:	add	x4, x4, #0x576
  402010:	add	x5, x5, #0x61e
  402014:	mov	w0, #0x3                   	// #3
  402018:	mov	w3, #0x17c                 	// #380
  40201c:	mov	w1, w23
  402020:	mov	x6, x19
  402024:	b	402084 <verb_status+0x41c>
  402028:	cmp	w23, #0x0
  40202c:	mov	w8, wzr
  402030:	cneg	w9, w23, mi  // mi = first
  402034:	b	40209c <verb_status+0x434>
  402038:	adrp	x0, 403000 <parse_counter+0x208>
  40203c:	add	x0, x0, #0x321
  402040:	bl	401640 <puts@plt>
  402044:	mov	w21, wzr
  402048:	b	4020a0 <verb_status+0x438>
  40204c:	mov	w0, wzr
  402050:	bl	401560 <log_get_max_level_realm@plt>
  402054:	cmp	w0, #0x3
  402058:	b.lt	402090 <verb_status+0x428>  // b.tstop
  40205c:	ldur	x6, [x24, #-8]
  402060:	adrp	x2, 403000 <parse_counter+0x208>
  402064:	adrp	x4, 403000 <parse_counter+0x208>
  402068:	adrp	x5, 403000 <parse_counter+0x208>
  40206c:	add	x2, x2, #0x336
  402070:	add	x4, x4, #0x576
  402074:	add	x5, x5, #0x5f6
  402078:	mov	w0, #0x3                   	// #3
  40207c:	mov	w3, #0x16c                 	// #364
  402080:	mov	w1, w22
  402084:	bl	401590 <log_internal_realm@plt>
  402088:	mov	w21, w0
  40208c:	b	4020a0 <verb_status+0x438>
  402090:	cmp	w22, #0x0
  402094:	mov	w8, wzr
  402098:	cneg	w9, w22, mi  // mi = first
  40209c:	sub	w21, w8, w9, uxtb
  4020a0:	mov	w0, w20
  4020a4:	bl	401670 <safe_close@plt>
  4020a8:	b	401f4c <verb_status+0x2e4>
  4020ac:	adrp	x1, 403000 <parse_counter+0x208>
  4020b0:	adrp	x2, 403000 <parse_counter+0x208>
  4020b4:	adrp	x4, 403000 <parse_counter+0x208>
  4020b8:	add	x1, x1, #0xb1d
  4020bc:	add	x2, x2, #0x336
  4020c0:	add	x4, x4, #0xaf8
  4020c4:	mov	w3, #0x13a                 	// #314
  4020c8:	mov	w0, wzr
  4020cc:	bl	4015e0 <log_assert_failed_realm@plt>
  4020d0:	adrp	x1, 403000 <parse_counter+0x208>
  4020d4:	adrp	x2, 403000 <parse_counter+0x208>
  4020d8:	adrp	x4, 403000 <parse_counter+0x208>
  4020dc:	add	x1, x1, #0x793
  4020e0:	add	x2, x2, #0x336
  4020e4:	add	x4, x4, #0xaf8
  4020e8:	mov	w3, #0x139                 	// #313
  4020ec:	mov	w0, wzr
  4020f0:	bl	4015e0 <log_assert_failed_realm@plt>
  4020f4:	adrp	x1, 403000 <parse_counter+0x208>
  4020f8:	adrp	x2, 403000 <parse_counter+0x208>
  4020fc:	adrp	x4, 403000 <parse_counter+0x208>
  402100:	add	x1, x1, #0xa69
  402104:	add	x2, x2, #0x336
  402108:	add	x4, x4, #0xa70
  40210c:	mov	w3, #0x111                 	// #273
  402110:	bl	4015e0 <log_assert_failed_realm@plt>
  402114:	adrp	x1, 403000 <parse_counter+0x208>
  402118:	adrp	x2, 403000 <parse_counter+0x208>
  40211c:	adrp	x4, 403000 <parse_counter+0x208>
  402120:	add	x1, x1, #0xaa3
  402124:	add	x2, x2, #0x336
  402128:	add	x4, x4, #0xa70
  40212c:	mov	w3, #0x112                 	// #274
  402130:	mov	w0, wzr
  402134:	bl	4015e0 <log_assert_failed_realm@plt>

0000000000402138 <verb_set>:
  402138:	sub	sp, sp, #0xa0
  40213c:	stp	x29, x30, [sp, #64]
  402140:	add	x29, sp, #0x40
  402144:	stp	x24, x23, [sp, #112]
  402148:	mov	x23, x1
  40214c:	sub	x0, x29, #0x8
  402150:	sub	x1, x29, #0x10
  402154:	add	x3, sp, #0x18
  402158:	sub	x4, x29, #0x18
  40215c:	mov	x2, xzr
  402160:	stp	x28, x27, [sp, #80]
  402164:	stp	x26, x25, [sp, #96]
  402168:	stp	x22, x21, [sp, #128]
  40216c:	stp	x20, x19, [sp, #144]
  402170:	stp	xzr, xzr, [x29, #-16]
  402174:	stur	xzr, [x29, #-24]
  402178:	str	xzr, [sp, #32]
  40217c:	bl	402848 <acquire_boot_count_path>
  402180:	cmn	w0, #0x31
  402184:	b.ne	4021c4 <verb_set+0x8c>  // b.any
  402188:	mov	w0, wzr
  40218c:	bl	401560 <log_get_max_level_realm@plt>
  402190:	cmp	w0, #0x3
  402194:	b.lt	40228c <verb_set+0x154>  // b.tstop
  402198:	adrp	x2, 403000 <parse_counter+0x208>
  40219c:	adrp	x4, 403000 <parse_counter+0x208>
  4021a0:	adrp	x5, 403000 <parse_counter+0x208>
  4021a4:	add	x2, x2, #0x336
  4021a8:	add	x4, x4, #0xb2c
  4021ac:	add	x5, x5, #0xb35
  4021b0:	mov	w0, #0x3                   	// #3
  4021b4:	mov	w1, #0xffffffcf            	// #-49
  4021b8:	mov	w3, #0x194                 	// #404
  4021bc:	bl	401590 <log_internal_realm@plt>
  4021c0:	b	40227c <verb_set+0x144>
  4021c4:	mov	w21, w0
  4021c8:	tbnz	w0, #31, 402280 <verb_set+0x148>
  4021cc:	bl	402b18 <acquire_path>
  4021d0:	tbnz	w0, #31, 40227c <verb_set+0x144>
  4021d4:	ldur	x0, [x29, #-16]
  4021d8:	cbz	x0, 402804 <verb_set+0x6cc>
  4021dc:	ldur	x1, [x29, #-24]
  4021e0:	cbz	x1, 402824 <verb_set+0x6ec>
  4021e4:	mov	x2, xzr
  4021e8:	bl	401650 <strjoin_real@plt>
  4021ec:	mov	x19, x0
  4021f0:	cbz	x0, 4022ec <verb_set+0x1b4>
  4021f4:	ldp	x2, x0, [x29, #-24]
  4021f8:	ldr	x1, [sp, #24]
  4021fc:	add	x3, sp, #0x20
  402200:	bl	402cec <make_bad>
  402204:	tbnz	w0, #31, 402304 <verb_set+0x1cc>
  402208:	ldr	x20, [x23]
  40220c:	adrp	x1, 403000 <parse_counter+0x208>
  402210:	add	x1, x1, #0x31c
  402214:	mov	x0, x20
  402218:	bl	4016a0 <strcmp@plt>
  40221c:	ldur	x21, [x29, #-8]
  402220:	ldr	x22, [sp, #32]
  402224:	cbz	w0, 402328 <verb_set+0x1f0>
  402228:	adrp	x1, 403000 <parse_counter+0x208>
  40222c:	add	x1, x1, #0x321
  402230:	mov	x0, x20
  402234:	bl	4016a0 <strcmp@plt>
  402238:	cbz	w0, 402338 <verb_set+0x200>
  40223c:	adrp	x1, 403000 <parse_counter+0x208>
  402240:	add	x1, x1, #0x325
  402244:	mov	x0, x20
  402248:	bl	4016a0 <strcmp@plt>
  40224c:	mov	x24, x22
  402250:	mov	x25, x19
  402254:	cbz	w0, 402344 <verb_set+0x20c>
  402258:	adrp	x1, 403000 <parse_counter+0x208>
  40225c:	adrp	x2, 403000 <parse_counter+0x208>
  402260:	adrp	x4, 403000 <parse_counter+0x208>
  402264:	add	x1, x1, #0xb5e
  402268:	add	x2, x2, #0x336
  40226c:	add	x4, x4, #0xb7e
  402270:	mov	w3, #0x1ae                 	// #430
  402274:	mov	w0, wzr
  402278:	bl	4015e0 <log_assert_failed_realm@plt>
  40227c:	mov	w21, w0
  402280:	mov	x19, xzr
  402284:	mov	x20, xzr
  402288:	b	402298 <verb_set+0x160>
  40228c:	mov	x19, xzr
  402290:	mov	x20, xzr
  402294:	mov	w21, #0xffffffcf            	// #-49
  402298:	mov	x0, x20
  40229c:	bl	401630 <free@plt>
  4022a0:	ldr	x0, [sp, #32]
  4022a4:	bl	401630 <free@plt>
  4022a8:	mov	x0, x19
  4022ac:	bl	401630 <free@plt>
  4022b0:	ldur	x0, [x29, #-24]
  4022b4:	bl	401630 <free@plt>
  4022b8:	ldur	x0, [x29, #-16]
  4022bc:	bl	401630 <free@plt>
  4022c0:	ldur	x0, [x29, #-8]
  4022c4:	bl	401630 <free@plt>
  4022c8:	mov	w0, w21
  4022cc:	ldp	x20, x19, [sp, #144]
  4022d0:	ldp	x22, x21, [sp, #128]
  4022d4:	ldp	x24, x23, [sp, #112]
  4022d8:	ldp	x26, x25, [sp, #96]
  4022dc:	ldp	x28, x27, [sp, #80]
  4022e0:	ldp	x29, x30, [sp, #64]
  4022e4:	add	sp, sp, #0xa0
  4022e8:	ret
  4022ec:	adrp	x1, 403000 <parse_counter+0x208>
  4022f0:	adrp	x3, 403000 <parse_counter+0x208>
  4022f4:	add	x1, x1, #0x336
  4022f8:	add	x3, x3, #0xb2c
  4022fc:	mov	w2, #0x19e                 	// #414
  402300:	b	40231c <verb_set+0x1e4>
  402304:	adrp	x1, 403000 <parse_counter+0x208>
  402308:	adrp	x3, 403000 <parse_counter+0x208>
  40230c:	add	x1, x1, #0x336
  402310:	add	x3, x3, #0xb2c
  402314:	mov	w2, #0x1a2                 	// #418
  402318:	mov	w0, wzr
  40231c:	bl	401530 <log_oom_internal@plt>
  402320:	mov	w21, w0
  402324:	b	402284 <verb_set+0x14c>
  402328:	mov	x24, x22
  40232c:	mov	x25, x21
  402330:	mov	x21, x19
  402334:	b	402344 <verb_set+0x20c>
  402338:	mov	x24, x19
  40233c:	mov	x25, x21
  402340:	mov	x21, x22
  402344:	adrp	x8, 420000 <completed.8445>
  402348:	ldr	x8, [x8, #8]
  40234c:	cbz	x8, 402610 <verb_set+0x4d8>
  402350:	ldr	x0, [x8]
  402354:	cbz	x0, 402610 <verb_set+0x4d8>
  402358:	add	x9, x25, #0x1
  40235c:	mov	x20, xzr
  402360:	str	x9, [sp, #16]
  402364:	add	x27, x21, #0x1
  402368:	add	x9, x24, #0x1
  40236c:	add	x26, x8, #0x8
  402370:	str	x9, [sp, #8]
  402374:	b	402388 <verb_set+0x250>
  402378:	mov	w0, w22
  40237c:	bl	401670 <safe_close@plt>
  402380:	ldr	x0, [x26], #8
  402384:	cbz	x0, 402614 <verb_set+0x4dc>
  402388:	mov	w1, #0x4000                	// #16384
  40238c:	movk	w1, #0x8, lsl #16
  402390:	bl	401680 <open64@plt>
  402394:	mov	w22, w0
  402398:	tbnz	w0, #31, 4026a4 <verb_set+0x56c>
  40239c:	cbz	x25, 4027e0 <verb_set+0x6a8>
  4023a0:	ldrb	w8, [x25]
  4023a4:	cmp	w8, #0x2f
  4023a8:	b.ne	4027bc <verb_set+0x684>  // b.any
  4023ac:	cbz	x21, 4027e0 <verb_set+0x6a8>
  4023b0:	ldrb	w8, [x21]
  4023b4:	cmp	w8, #0x2f
  4023b8:	b.ne	4027bc <verb_set+0x684>  // b.any
  4023bc:	ldr	x1, [sp, #16]
  4023c0:	mov	w0, w22
  4023c4:	mov	w2, w22
  4023c8:	mov	x3, x27
  4023cc:	bl	4016b0 <rename_noreplace@plt>
  4023d0:	cmn	w0, #0x2
  4023d4:	b.eq	402424 <verb_set+0x2ec>  // b.none
  4023d8:	mov	w28, w0
  4023dc:	cmn	w0, #0x11
  4023e0:	b.eq	40265c <verb_set+0x524>  // b.none
  4023e4:	mov	w0, wzr
  4023e8:	bl	401560 <log_get_max_level_realm@plt>
  4023ec:	tbnz	w28, #31, 402720 <verb_set+0x5e8>
  4023f0:	cmp	w0, #0x7
  4023f4:	b.lt	4024ac <verb_set+0x374>  // b.tstop
  4023f8:	adrp	x2, 403000 <parse_counter+0x208>
  4023fc:	adrp	x4, 403000 <parse_counter+0x208>
  402400:	adrp	x5, 403000 <parse_counter+0x208>
  402404:	mov	w0, #0x7                   	// #7
  402408:	mov	w3, #0x1d5                 	// #469
  40240c:	mov	w1, wzr
  402410:	add	x2, x2, #0x336
  402414:	add	x4, x4, #0xb2c
  402418:	add	x5, x5, #0xbf0
  40241c:	mov	x6, x25
  402420:	b	4024a4 <verb_set+0x36c>
  402424:	cbz	x24, 4027e0 <verb_set+0x6a8>
  402428:	ldrb	w8, [x24]
  40242c:	cmp	w8, #0x2f
  402430:	b.ne	4027bc <verb_set+0x684>  // b.any
  402434:	ldrb	w8, [x21]
  402438:	cmp	w8, #0x2f
  40243c:	b.ne	4027bc <verb_set+0x684>  // b.any
  402440:	ldr	x1, [sp, #8]
  402444:	mov	w0, w22
  402448:	mov	w2, w22
  40244c:	mov	x3, x27
  402450:	bl	4016b0 <rename_noreplace@plt>
  402454:	cmn	w0, #0x2
  402458:	b.eq	4025a0 <verb_set+0x468>  // b.none
  40245c:	mov	w28, w0
  402460:	cmn	w0, #0x11
  402464:	b.eq	40265c <verb_set+0x524>  // b.none
  402468:	mov	w0, wzr
  40246c:	bl	401560 <log_get_max_level_realm@plt>
  402470:	tbnz	w28, #31, 402754 <verb_set+0x61c>
  402474:	cmp	w0, #0x7
  402478:	b.lt	4024ac <verb_set+0x374>  // b.tstop
  40247c:	adrp	x2, 403000 <parse_counter+0x208>
  402480:	adrp	x4, 403000 <parse_counter+0x208>
  402484:	adrp	x5, 403000 <parse_counter+0x208>
  402488:	mov	w0, #0x7                   	// #7
  40248c:	mov	w3, #0x1d0                 	// #464
  402490:	mov	w1, wzr
  402494:	add	x2, x2, #0x336
  402498:	add	x4, x4, #0xb2c
  40249c:	add	x5, x5, #0xbf0
  4024a0:	mov	x6, x24
  4024a4:	mov	x7, x21
  4024a8:	bl	401590 <log_internal_realm@plt>
  4024ac:	mov	x0, x21
  4024b0:	bl	4016c0 <dirname_malloc@plt>
  4024b4:	mov	x20, x0
  4024b8:	cbz	x0, 4026f0 <verb_set+0x5b8>
  4024bc:	ldrb	w8, [x20]
  4024c0:	cmp	w8, #0x2f
  4024c4:	b.ne	4027bc <verb_set+0x684>  // b.any
  4024c8:	add	x1, x20, #0x1
  4024cc:	mov	w0, w22
  4024d0:	bl	4016d0 <fsync_path_at@plt>
  4024d4:	tbz	w0, #31, 402514 <verb_set+0x3dc>
  4024d8:	mov	w0, wzr
  4024dc:	bl	401560 <log_get_max_level_realm@plt>
  4024e0:	cmp	w0, #0x7
  4024e4:	b.lt	402514 <verb_set+0x3dc>  // b.tstop
  4024e8:	bl	401660 <__errno_location@plt>
  4024ec:	ldr	w1, [x0]
  4024f0:	adrp	x2, 403000 <parse_counter+0x208>
  4024f4:	adrp	x4, 403000 <parse_counter+0x208>
  4024f8:	adrp	x5, 403000 <parse_counter+0x208>
  4024fc:	mov	w0, #0x7                   	// #7
  402500:	mov	w3, #0x1de                 	// #478
  402504:	add	x2, x2, #0x336
  402508:	add	x4, x4, #0xb2c
  40250c:	add	x5, x5, #0xc13
  402510:	bl	401590 <log_internal_realm@plt>
  402514:	mov	w0, w22
  402518:	bl	4016e0 <syncfs@plt>
  40251c:	tbz	w0, #31, 40255c <verb_set+0x424>
  402520:	mov	w0, wzr
  402524:	bl	401560 <log_get_max_level_realm@plt>
  402528:	cmp	w0, #0x6
  40252c:	b.le	40255c <verb_set+0x424>
  402530:	bl	401660 <__errno_location@plt>
  402534:	ldr	w1, [x0]
  402538:	adrp	x2, 403000 <parse_counter+0x208>
  40253c:	adrp	x4, 403000 <parse_counter+0x208>
  402540:	adrp	x5, 403000 <parse_counter+0x208>
  402544:	mov	w0, #0x7                   	// #7
  402548:	mov	w3, #0x1e2                 	// #482
  40254c:	add	x2, x2, #0x336
  402550:	add	x4, x4, #0xb2c
  402554:	add	x5, x5, #0xc47
  402558:	bl	401590 <log_internal_realm@plt>
  40255c:	mov	w0, wzr
  402560:	bl	401560 <log_get_max_level_realm@plt>
  402564:	cmp	w0, #0x6
  402568:	b.lt	402378 <verb_set+0x240>  // b.tstop
  40256c:	ldr	x6, [x23]
  402570:	ldr	x7, [sp, #24]
  402574:	adrp	x2, 403000 <parse_counter+0x208>
  402578:	adrp	x4, 403000 <parse_counter+0x208>
  40257c:	adrp	x5, 403000 <parse_counter+0x208>
  402580:	mov	w0, #0x6                   	// #6
  402584:	mov	w3, #0x1e4                 	// #484
  402588:	mov	w1, wzr
  40258c:	add	x2, x2, #0x336
  402590:	add	x4, x4, #0xb2c
  402594:	add	x5, x5, #0xc7b
  402598:	bl	401590 <log_internal_realm@plt>
  40259c:	b	402378 <verb_set+0x240>
  4025a0:	ldrb	w8, [x21]
  4025a4:	cmp	w8, #0x2f
  4025a8:	b.ne	4027bc <verb_set+0x684>  // b.any
  4025ac:	mov	w0, w22
  4025b0:	mov	x1, x27
  4025b4:	mov	w2, wzr
  4025b8:	mov	w3, wzr
  4025bc:	bl	401690 <faccessat@plt>
  4025c0:	tbz	w0, #31, 40265c <verb_set+0x524>
  4025c4:	bl	401660 <__errno_location@plt>
  4025c8:	ldr	w28, [x0]
  4025cc:	cmp	w28, #0x2
  4025d0:	b.eq	402378 <verb_set+0x240>  // b.none
  4025d4:	mov	w0, wzr
  4025d8:	bl	401560 <log_get_max_level_realm@plt>
  4025dc:	cmp	w0, #0x3
  4025e0:	b.lt	4027a0 <verb_set+0x668>  // b.tstop
  4025e4:	adrp	x2, 403000 <parse_counter+0x208>
  4025e8:	adrp	x4, 403000 <parse_counter+0x208>
  4025ec:	adrp	x5, 403000 <parse_counter+0x208>
  4025f0:	add	x2, x2, #0x336
  4025f4:	add	x4, x4, #0xb2c
  4025f8:	add	x5, x5, #0xba1
  4025fc:	mov	w0, #0x3                   	// #3
  402600:	mov	w3, #0x1c9                 	// #457
  402604:	mov	w1, w28
  402608:	mov	x6, x21
  40260c:	b	4026e4 <verb_set+0x5ac>
  402610:	mov	x20, xzr
  402614:	mov	w0, wzr
  402618:	bl	401560 <log_get_max_level_realm@plt>
  40261c:	cmp	w0, #0x3
  402620:	b.lt	402654 <verb_set+0x51c>  // b.tstop
  402624:	adrp	x2, 403000 <parse_counter+0x208>
  402628:	adrp	x4, 403000 <parse_counter+0x208>
  40262c:	adrp	x5, 403000 <parse_counter+0x208>
  402630:	mov	w1, #0x10                  	// #16
  402634:	add	x2, x2, #0x336
  402638:	add	x4, x4, #0xb2c
  40263c:	add	x5, x5, #0xcb2
  402640:	mov	w0, #0x3                   	// #3
  402644:	movk	w1, #0x4000, lsl #16
  402648:	mov	w3, #0x1e7                 	// #487
  40264c:	mov	x6, x21
  402650:	bl	401590 <log_internal_realm@plt>
  402654:	mov	w21, #0x1                   	// #1
  402658:	b	402298 <verb_set+0x160>
  40265c:	mov	w0, w22
  402660:	bl	401670 <safe_close@plt>
  402664:	mov	w0, wzr
  402668:	bl	401560 <log_get_max_level_realm@plt>
  40266c:	cmp	w0, #0x7
  402670:	b.lt	40269c <verb_set+0x564>  // b.tstop
  402674:	adrp	x2, 403000 <parse_counter+0x208>
  402678:	adrp	x4, 403000 <parse_counter+0x208>
  40267c:	adrp	x5, 403000 <parse_counter+0x208>
  402680:	add	x2, x2, #0x336
  402684:	add	x4, x4, #0xb2c
  402688:	add	x5, x5, #0xce3
  40268c:	mov	w0, #0x7                   	// #7
  402690:	mov	w3, #0x1eb                 	// #491
  402694:	mov	w1, wzr
  402698:	bl	401590 <log_internal_realm@plt>
  40269c:	mov	w21, wzr
  4026a0:	b	402298 <verb_set+0x160>
  4026a4:	bl	401660 <__errno_location@plt>
  4026a8:	ldr	w21, [x0]
  4026ac:	mov	w0, wzr
  4026b0:	bl	401560 <log_get_max_level_realm@plt>
  4026b4:	cmp	w0, #0x3
  4026b8:	b.lt	402710 <verb_set+0x5d8>  // b.tstop
  4026bc:	ldur	x6, [x26, #-8]
  4026c0:	adrp	x2, 403000 <parse_counter+0x208>
  4026c4:	adrp	x4, 403000 <parse_counter+0x208>
  4026c8:	adrp	x5, 403000 <parse_counter+0x208>
  4026cc:	add	x2, x2, #0x336
  4026d0:	add	x4, x4, #0xb2c
  4026d4:	add	x5, x5, #0x5f6
  4026d8:	mov	w0, #0x3                   	// #3
  4026dc:	mov	w3, #0x1b9                 	// #441
  4026e0:	mov	w1, w21
  4026e4:	bl	401590 <log_internal_realm@plt>
  4026e8:	mov	w21, w0
  4026ec:	b	4027b0 <verb_set+0x678>
  4026f0:	adrp	x1, 403000 <parse_counter+0x208>
  4026f4:	adrp	x3, 403000 <parse_counter+0x208>
  4026f8:	add	x1, x1, #0x336
  4026fc:	add	x3, x3, #0xb2c
  402700:	mov	w2, #0x1da                 	// #474
  402704:	bl	401530 <log_oom_internal@plt>
  402708:	mov	w21, w0
  40270c:	b	4027b0 <verb_set+0x678>
  402710:	cmp	w21, #0x0
  402714:	mov	w8, wzr
  402718:	cneg	w9, w21, mi  // mi = first
  40271c:	b	4027ac <verb_set+0x674>
  402720:	cmp	w0, #0x3
  402724:	b.lt	402794 <verb_set+0x65c>  // b.tstop
  402728:	adrp	x2, 403000 <parse_counter+0x208>
  40272c:	adrp	x4, 403000 <parse_counter+0x208>
  402730:	adrp	x5, 403000 <parse_counter+0x208>
  402734:	add	x2, x2, #0x336
  402738:	add	x4, x4, #0xb2c
  40273c:	add	x5, x5, #0xbce
  402740:	mov	w0, #0x3                   	// #3
  402744:	mov	w3, #0x1d3                 	// #467
  402748:	mov	w1, w28
  40274c:	mov	x6, x25
  402750:	b	402784 <verb_set+0x64c>
  402754:	cmp	w0, #0x3
  402758:	b.lt	402794 <verb_set+0x65c>  // b.tstop
  40275c:	adrp	x2, 403000 <parse_counter+0x208>
  402760:	adrp	x4, 403000 <parse_counter+0x208>
  402764:	adrp	x5, 403000 <parse_counter+0x208>
  402768:	add	x2, x2, #0x336
  40276c:	add	x4, x4, #0xb2c
  402770:	add	x5, x5, #0xbce
  402774:	mov	w0, #0x3                   	// #3
  402778:	mov	w3, #0x1ce                 	// #462
  40277c:	mov	w1, w28
  402780:	mov	x6, x24
  402784:	mov	x7, x21
  402788:	bl	401590 <log_internal_realm@plt>
  40278c:	mov	w21, w0
  402790:	b	4027b0 <verb_set+0x678>
  402794:	mov	w8, wzr
  402798:	neg	w9, w28
  40279c:	b	4027ac <verb_set+0x674>
  4027a0:	cmp	w28, #0x0
  4027a4:	mov	w8, wzr
  4027a8:	cneg	w9, w28, mi  // mi = first
  4027ac:	sub	w21, w8, w9, uxtb
  4027b0:	mov	w0, w22
  4027b4:	bl	401670 <safe_close@plt>
  4027b8:	b	402298 <verb_set+0x160>
  4027bc:	adrp	x1, 403000 <parse_counter+0x208>
  4027c0:	adrp	x2, 403000 <parse_counter+0x208>
  4027c4:	adrp	x4, 403000 <parse_counter+0x208>
  4027c8:	add	x1, x1, #0xb1d
  4027cc:	add	x2, x2, #0x336
  4027d0:	add	x4, x4, #0xaf8
  4027d4:	mov	w3, #0x13a                 	// #314
  4027d8:	mov	w0, wzr
  4027dc:	bl	4015e0 <log_assert_failed_realm@plt>
  4027e0:	adrp	x1, 403000 <parse_counter+0x208>
  4027e4:	adrp	x2, 403000 <parse_counter+0x208>
  4027e8:	adrp	x4, 403000 <parse_counter+0x208>
  4027ec:	add	x1, x1, #0x793
  4027f0:	add	x2, x2, #0x336
  4027f4:	add	x4, x4, #0xaf8
  4027f8:	mov	w3, #0x139                 	// #313
  4027fc:	mov	w0, wzr
  402800:	bl	4015e0 <log_assert_failed_realm@plt>
  402804:	adrp	x1, 403000 <parse_counter+0x208>
  402808:	adrp	x2, 403000 <parse_counter+0x208>
  40280c:	adrp	x4, 403000 <parse_counter+0x208>
  402810:	add	x1, x1, #0xa69
  402814:	add	x2, x2, #0x336
  402818:	add	x4, x4, #0xa70
  40281c:	mov	w3, #0x111                 	// #273
  402820:	bl	4015e0 <log_assert_failed_realm@plt>
  402824:	adrp	x1, 403000 <parse_counter+0x208>
  402828:	adrp	x2, 403000 <parse_counter+0x208>
  40282c:	adrp	x4, 403000 <parse_counter+0x208>
  402830:	add	x1, x1, #0xaa3
  402834:	add	x2, x2, #0x336
  402838:	add	x4, x4, #0xa70
  40283c:	mov	w3, #0x112                 	// #274
  402840:	mov	w0, wzr
  402844:	bl	4015e0 <log_assert_failed_realm@plt>

0000000000402848 <acquire_boot_count_path>:
  402848:	sub	sp, sp, #0x70
  40284c:	stp	x24, x23, [sp, #64]
  402850:	stp	x22, x21, [sp, #80]
  402854:	mov	x22, x1
  402858:	mov	x23, x0
  40285c:	mov	x0, #0x674a                	// #26442
  402860:	mov	x1, #0xc7b6                	// #51126
  402864:	movk	x0, #0x82b0, lsl #16
  402868:	movk	x1, #0xb44, lsl #16
  40286c:	stp	x29, x30, [sp, #32]
  402870:	add	x29, sp, #0x20
  402874:	mov	x21, x2
  402878:	adrp	x2, 403000 <parse_counter+0x208>
  40287c:	movk	x0, #0x4c0a, lsl #32
  402880:	movk	x1, #0xbb29, lsl #32
  402884:	stp	x20, x19, [sp, #96]
  402888:	mov	x20, x3
  40288c:	add	x2, x2, #0x663
  402890:	add	x3, x29, #0x18
  402894:	movk	x0, #0xcf41, lsl #48
  402898:	movk	x1, #0x4f8c, lsl #48
  40289c:	str	x25, [sp, #48]
  4028a0:	mov	x24, x4
  4028a4:	str	xzr, [x29, #24]
  4028a8:	bl	4016f0 <efi_get_variable_string@plt>
  4028ac:	cmn	w0, #0x2
  4028b0:	b.ne	4028c0 <acquire_boot_count_path+0x78>  // b.any
  4028b4:	mov	x19, xzr
  4028b8:	mov	w25, #0xffffffcf            	// #-49
  4028bc:	b	402a54 <acquire_boot_count_path+0x20c>
  4028c0:	mov	w25, w0
  4028c4:	tbnz	w0, #31, 402938 <acquire_boot_count_path+0xf0>
  4028c8:	ldr	x0, [x29, #24]
  4028cc:	bl	401700 <efi_tilt_backslashes@plt>
  4028d0:	ldr	x19, [x29, #24]
  4028d4:	mov	x0, x19
  4028d8:	bl	401710 <path_is_normalized@plt>
  4028dc:	tbz	w0, #0, 402974 <acquire_boot_count_path+0x12c>
  4028e0:	mov	x0, x19
  4028e4:	bl	401720 <path_is_absolute@plt>
  4028e8:	tbz	w0, #0, 4029c4 <acquire_boot_count_path+0x17c>
  4028ec:	mov	x0, x19
  4028f0:	bl	401730 <last_path_component@plt>
  4028f4:	mov	w1, #0x2b                  	// #43
  4028f8:	bl	401740 <strrchr@plt>
  4028fc:	stur	x0, [x29, #-8]
  402900:	cbz	x0, 402a10 <acquire_boot_count_path+0x1c8>
  402904:	cbz	x22, 402a84 <acquire_boot_count_path+0x23c>
  402908:	ldr	x8, [x29, #24]
  40290c:	sub	x1, x0, x8
  402910:	mov	x0, x8
  402914:	bl	401750 <strndup@plt>
  402918:	mov	x19, x0
  40291c:	cbnz	x0, 402a88 <acquire_boot_count_path+0x240>
  402920:	adrp	x1, 403000 <parse_counter+0x208>
  402924:	adrp	x3, 403000 <parse_counter+0x208>
  402928:	add	x1, x1, #0x336
  40292c:	add	x3, x3, #0x677
  402930:	mov	w2, #0xf3                  	// #243
  402934:	b	402b0c <acquire_boot_count_path+0x2c4>
  402938:	mov	w0, wzr
  40293c:	bl	401560 <log_get_max_level_realm@plt>
  402940:	cmp	w0, #0x3
  402944:	b.lt	4029b0 <acquire_boot_count_path+0x168>  // b.tstop
  402948:	adrp	x2, 403000 <parse_counter+0x208>
  40294c:	adrp	x4, 403000 <parse_counter+0x208>
  402950:	adrp	x5, 403000 <parse_counter+0x208>
  402954:	add	x2, x2, #0x336
  402958:	add	x4, x4, #0x677
  40295c:	add	x5, x5, #0x68f
  402960:	mov	w0, #0x3                   	// #3
  402964:	mov	w3, #0xdb                  	// #219
  402968:	mov	w1, w25
  40296c:	bl	401590 <log_internal_realm@plt>
  402970:	b	402a04 <acquire_boot_count_path+0x1bc>
  402974:	mov	w0, wzr
  402978:	bl	401560 <log_get_max_level_realm@plt>
  40297c:	cmp	w0, #0x3
  402980:	b.lt	402a4c <acquire_boot_count_path+0x204>  // b.tstop
  402984:	adrp	x2, 403000 <parse_counter+0x208>
  402988:	adrp	x4, 403000 <parse_counter+0x208>
  40298c:	adrp	x5, 403000 <parse_counter+0x208>
  402990:	mov	w1, #0x16                  	// #22
  402994:	add	x2, x2, #0x336
  402998:	add	x4, x4, #0x677
  40299c:	add	x5, x5, #0x6c3
  4029a0:	mov	w0, #0x3                   	// #3
  4029a4:	movk	w1, #0x4000, lsl #16
  4029a8:	mov	w3, #0xe2                  	// #226
  4029ac:	b	4029fc <acquire_boot_count_path+0x1b4>
  4029b0:	mov	w8, wzr
  4029b4:	neg	w9, w25
  4029b8:	mov	x19, xzr
  4029bc:	sub	w25, w8, w9, uxtb
  4029c0:	b	402a54 <acquire_boot_count_path+0x20c>
  4029c4:	mov	w0, wzr
  4029c8:	bl	401560 <log_get_max_level_realm@plt>
  4029cc:	cmp	w0, #0x3
  4029d0:	b.lt	402a4c <acquire_boot_count_path+0x204>  // b.tstop
  4029d4:	adrp	x2, 403000 <parse_counter+0x208>
  4029d8:	adrp	x4, 403000 <parse_counter+0x208>
  4029dc:	adrp	x5, 403000 <parse_counter+0x208>
  4029e0:	mov	w1, #0x16                  	// #22
  4029e4:	add	x2, x2, #0x336
  4029e8:	add	x4, x4, #0x677
  4029ec:	add	x5, x5, #0x706
  4029f0:	mov	w0, #0x3                   	// #3
  4029f4:	movk	w1, #0x4000, lsl #16
  4029f8:	mov	w3, #0xe7                  	// #231
  4029fc:	mov	x6, x19
  402a00:	bl	401590 <log_internal_realm@plt>
  402a04:	mov	w25, w0
  402a08:	mov	x19, xzr
  402a0c:	b	402a54 <acquire_boot_count_path+0x20c>
  402a10:	bl	401560 <log_get_max_level_realm@plt>
  402a14:	cmp	w0, #0x3
  402a18:	b.lt	402a4c <acquire_boot_count_path+0x204>  // b.tstop
  402a1c:	ldr	x6, [x29, #24]
  402a20:	adrp	x2, 403000 <parse_counter+0x208>
  402a24:	adrp	x4, 403000 <parse_counter+0x208>
  402a28:	adrp	x5, 403000 <parse_counter+0x208>
  402a2c:	mov	w1, #0x16                  	// #22
  402a30:	add	x2, x2, #0x336
  402a34:	add	x4, x4, #0x677
  402a38:	add	x5, x5, #0x747
  402a3c:	mov	w0, #0x3                   	// #3
  402a40:	movk	w1, #0x4000, lsl #16
  402a44:	mov	w3, #0xee                  	// #238
  402a48:	b	402a00 <acquire_boot_count_path+0x1b8>
  402a4c:	mov	x19, xzr
  402a50:	mov	w25, #0xffffffea            	// #-22
  402a54:	mov	x0, x19
  402a58:	bl	401630 <free@plt>
  402a5c:	ldr	x0, [x29, #24]
  402a60:	bl	401630 <free@plt>
  402a64:	mov	w0, w25
  402a68:	ldp	x20, x19, [sp, #96]
  402a6c:	ldp	x22, x21, [sp, #80]
  402a70:	ldp	x24, x23, [sp, #64]
  402a74:	ldr	x25, [sp, #48]
  402a78:	ldp	x29, x30, [sp, #32]
  402a7c:	add	sp, sp, #0x70
  402a80:	ret
  402a84:	mov	x19, xzr
  402a88:	ldr	x0, [x29, #24]
  402a8c:	sub	x1, x29, #0x8
  402a90:	add	x2, sp, #0x10
  402a94:	add	x3, sp, #0x8
  402a98:	bl	402df8 <parse_counter>
  402a9c:	tbnz	w0, #31, 402af0 <acquire_boot_count_path+0x2a8>
  402aa0:	cbz	x24, 402ab4 <acquire_boot_count_path+0x26c>
  402aa4:	ldur	x0, [x29, #-8]
  402aa8:	bl	401760 <strdup@plt>
  402aac:	cbz	x0, 402af8 <acquire_boot_count_path+0x2b0>
  402ab0:	str	x0, [x24]
  402ab4:	cbz	x23, 402ac4 <acquire_boot_count_path+0x27c>
  402ab8:	ldr	x8, [x29, #24]
  402abc:	str	xzr, [x29, #24]
  402ac0:	str	x8, [x23]
  402ac4:	cbz	x22, 402ad0 <acquire_boot_count_path+0x288>
  402ac8:	str	x19, [x22]
  402acc:	mov	x19, xzr
  402ad0:	cbz	x21, 402adc <acquire_boot_count_path+0x294>
  402ad4:	ldr	x8, [sp, #16]
  402ad8:	str	x8, [x21]
  402adc:	mov	w25, wzr
  402ae0:	cbz	x20, 402a54 <acquire_boot_count_path+0x20c>
  402ae4:	ldr	x8, [sp, #8]
  402ae8:	str	x8, [x20]
  402aec:	b	402a54 <acquire_boot_count_path+0x20c>
  402af0:	mov	w25, w0
  402af4:	b	402a54 <acquire_boot_count_path+0x20c>
  402af8:	adrp	x1, 403000 <parse_counter+0x208>
  402afc:	adrp	x3, 403000 <parse_counter+0x208>
  402b00:	add	x1, x1, #0x336
  402b04:	add	x3, x3, #0x677
  402b08:	mov	w2, #0xfd                  	// #253
  402b0c:	bl	401530 <log_oom_internal@plt>
  402b10:	mov	w25, w0
  402b14:	b	402a54 <acquire_boot_count_path+0x20c>

0000000000402b18 <acquire_path>:
  402b18:	sub	sp, sp, #0x40
  402b1c:	str	x21, [sp, #32]
  402b20:	adrp	x21, 420000 <completed.8445>
  402b24:	ldr	x8, [x21, #8]
  402b28:	stp	x29, x30, [sp, #16]
  402b2c:	add	x29, sp, #0x10
  402b30:	stp	x20, x19, [sp, #48]
  402b34:	str	xzr, [x29, #24]
  402b38:	str	xzr, [sp, #8]
  402b3c:	cbz	x8, 402b50 <acquire_path+0x38>
  402b40:	ldr	x8, [x8]
  402b44:	cbz	x8, 402b50 <acquire_path+0x38>
  402b48:	mov	w19, wzr
  402b4c:	b	402cc4 <acquire_path+0x1ac>
  402b50:	add	x2, x29, #0x18
  402b54:	mov	x0, xzr
  402b58:	mov	w1, wzr
  402b5c:	mov	x3, xzr
  402b60:	mov	x4, xzr
  402b64:	mov	x5, xzr
  402b68:	mov	x6, xzr
  402b6c:	bl	401770 <find_esp_and_warn@plt>
  402b70:	tbz	w0, #31, 402b80 <acquire_path+0x68>
  402b74:	mov	w19, w0
  402b78:	cmn	w0, #0x7e
  402b7c:	b.ne	402cc4 <acquire_path+0x1ac>  // b.any
  402b80:	add	x2, sp, #0x8
  402b84:	mov	x0, xzr
  402b88:	mov	w1, wzr
  402b8c:	mov	x3, xzr
  402b90:	bl	401780 <find_xbootldr_and_warn@plt>
  402b94:	tbz	w0, #31, 402ba4 <acquire_path+0x8c>
  402b98:	mov	w19, w0
  402b9c:	cmn	w0, #0x7e
  402ba0:	b.ne	402cc4 <acquire_path+0x1ac>  // b.any
  402ba4:	ldr	x0, [x29, #24]
  402ba8:	ldr	x1, [sp, #8]
  402bac:	orr	x8, x0, x1
  402bb0:	cbz	x8, 402c48 <acquire_path+0x130>
  402bb4:	cbz	x0, 402c90 <acquire_path+0x178>
  402bb8:	mov	x2, xzr
  402bbc:	bl	401790 <strv_new_internal@plt>
  402bc0:	mov	x20, x0
  402bc4:	cbz	x0, 402ca4 <acquire_path+0x18c>
  402bc8:	ldr	x0, [x21, #8]
  402bcc:	bl	4014e0 <strv_free@plt>
  402bd0:	mov	w0, wzr
  402bd4:	str	x20, [x21, #8]
  402bd8:	bl	401560 <log_get_max_level_realm@plt>
  402bdc:	cmp	w0, #0x7
  402be0:	mov	w19, wzr
  402be4:	b.lt	402cc4 <acquire_path+0x1ac>  // b.tstop
  402be8:	adrp	x1, 403000 <parse_counter+0x208>
  402bec:	add	x1, x1, #0xa3a
  402bf0:	mov	x0, x20
  402bf4:	mov	x2, xzr
  402bf8:	bl	4017a0 <strv_join_prefix@plt>
  402bfc:	mov	x19, x0
  402c00:	mov	w0, wzr
  402c04:	bl	401560 <log_get_max_level_realm@plt>
  402c08:	cmp	w0, #0x7
  402c0c:	b.lt	402c3c <acquire_path+0x124>  // b.tstop
  402c10:	adrp	x2, 403000 <parse_counter+0x208>
  402c14:	adrp	x4, 403000 <parse_counter+0x208>
  402c18:	adrp	x5, 403000 <parse_counter+0x208>
  402c1c:	add	x2, x2, #0x336
  402c20:	add	x4, x4, #0x9ab
  402c24:	add	x5, x5, #0xa3c
  402c28:	mov	w0, #0x7                   	// #7
  402c2c:	mov	w3, #0x84                  	// #132
  402c30:	mov	w1, wzr
  402c34:	mov	x6, x19
  402c38:	bl	401590 <log_internal_realm@plt>
  402c3c:	mov	x0, x19
  402c40:	bl	401630 <free@plt>
  402c44:	b	402b48 <acquire_path+0x30>
  402c48:	mov	w0, wzr
  402c4c:	bl	401560 <log_get_max_level_realm@plt>
  402c50:	cmp	w0, #0x3
  402c54:	b.lt	402c88 <acquire_path+0x170>  // b.tstop
  402c58:	adrp	x2, 403000 <parse_counter+0x208>
  402c5c:	adrp	x4, 403000 <parse_counter+0x208>
  402c60:	adrp	x5, 403000 <parse_counter+0x208>
  402c64:	mov	w1, #0x2                   	// #2
  402c68:	add	x2, x2, #0x336
  402c6c:	add	x4, x4, #0x9ab
  402c70:	add	x5, x5, #0x9b8
  402c74:	mov	w0, #0x3                   	// #3
  402c78:	movk	w1, #0x4000, lsl #16
  402c7c:	mov	w3, #0x75                  	// #117
  402c80:	bl	401590 <log_internal_realm@plt>
  402c84:	b	402cc0 <acquire_path+0x1a8>
  402c88:	mov	w19, #0xfffffffe            	// #-2
  402c8c:	b	402cc4 <acquire_path+0x1ac>
  402c90:	mov	x0, x1
  402c94:	mov	x1, xzr
  402c98:	bl	401790 <strv_new_internal@plt>
  402c9c:	mov	x20, x0
  402ca0:	cbnz	x0, 402bc8 <acquire_path+0xb0>
  402ca4:	adrp	x1, 403000 <parse_counter+0x208>
  402ca8:	adrp	x3, 403000 <parse_counter+0x208>
  402cac:	add	x1, x1, #0x336
  402cb0:	add	x3, x3, #0x9ab
  402cb4:	mov	w2, #0x7c                  	// #124
  402cb8:	mov	w0, wzr
  402cbc:	bl	401530 <log_oom_internal@plt>
  402cc0:	mov	w19, w0
  402cc4:	ldr	x0, [sp, #8]
  402cc8:	bl	401630 <free@plt>
  402ccc:	ldr	x0, [x29, #24]
  402cd0:	bl	401630 <free@plt>
  402cd4:	mov	w0, w19
  402cd8:	ldp	x20, x19, [sp, #48]
  402cdc:	ldr	x21, [sp, #32]
  402ce0:	ldp	x29, x30, [sp, #16]
  402ce4:	add	sp, sp, #0x40
  402ce8:	ret

0000000000402cec <make_bad>:
  402cec:	sub	sp, sp, #0x30
  402cf0:	stp	x29, x30, [sp, #16]
  402cf4:	stp	x20, x19, [sp, #32]
  402cf8:	add	x29, sp, #0x10
  402cfc:	str	xzr, [sp, #8]
  402d00:	cbz	x0, 402d90 <make_bad+0xa4>
  402d04:	mov	x4, x2
  402d08:	cbz	x2, 402db0 <make_bad+0xc4>
  402d0c:	mov	x19, x3
  402d10:	cbz	x3, 402dd4 <make_bad+0xe8>
  402d14:	mov	x3, x1
  402d18:	mov	x2, x0
  402d1c:	cbz	x1, 402d3c <make_bad+0x50>
  402d20:	adrp	x1, 403000 <parse_counter+0x208>
  402d24:	add	x1, x1, #0xaed
  402d28:	add	x0, sp, #0x8
  402d2c:	bl	4017b0 <asprintf@plt>
  402d30:	tbnz	w0, #31, 402d70 <make_bad+0x84>
  402d34:	ldr	x8, [sp, #8]
  402d38:	b	402d5c <make_bad+0x70>
  402d3c:	adrp	x1, 403000 <parse_counter+0x208>
  402d40:	add	x1, x1, #0xaea
  402d44:	mov	x0, x2
  402d48:	mov	x2, x4
  402d4c:	bl	401650 <strjoin_real@plt>
  402d50:	str	x0, [sp, #8]
  402d54:	cbz	x0, 402d74 <make_bad+0x88>
  402d58:	mov	x8, x0
  402d5c:	mov	x0, xzr
  402d60:	mov	w20, wzr
  402d64:	str	xzr, [sp, #8]
  402d68:	str	x8, [x19]
  402d6c:	b	402d78 <make_bad+0x8c>
  402d70:	ldr	x0, [sp, #8]
  402d74:	mov	w20, #0xfffffff4            	// #-12
  402d78:	bl	401630 <free@plt>
  402d7c:	mov	w0, w20
  402d80:	ldp	x20, x19, [sp, #32]
  402d84:	ldp	x29, x30, [sp, #16]
  402d88:	add	sp, sp, #0x30
  402d8c:	ret
  402d90:	adrp	x1, 403000 <parse_counter+0x208>
  402d94:	adrp	x2, 403000 <parse_counter+0x208>
  402d98:	adrp	x4, 403000 <parse_counter+0x208>
  402d9c:	add	x1, x1, #0xa69
  402da0:	add	x2, x2, #0x336
  402da4:	add	x4, x4, #0xaae
  402da8:	mov	w3, #0x124                 	// #292
  402dac:	bl	4015e0 <log_assert_failed_realm@plt>
  402db0:	adrp	x1, 403000 <parse_counter+0x208>
  402db4:	adrp	x2, 403000 <parse_counter+0x208>
  402db8:	adrp	x4, 403000 <parse_counter+0x208>
  402dbc:	add	x1, x1, #0xaa3
  402dc0:	add	x2, x2, #0x336
  402dc4:	add	x4, x4, #0xaae
  402dc8:	mov	w3, #0x125                 	// #293
  402dcc:	mov	w0, wzr
  402dd0:	bl	4015e0 <log_assert_failed_realm@plt>
  402dd4:	adrp	x1, 403000 <parse_counter+0x208>
  402dd8:	adrp	x2, 403000 <parse_counter+0x208>
  402ddc:	adrp	x4, 403000 <parse_counter+0x208>
  402de0:	add	x1, x1, #0xaaa
  402de4:	add	x2, x2, #0x336
  402de8:	add	x4, x4, #0xaae
  402dec:	mov	w3, #0x126                 	// #294
  402df0:	mov	w0, wzr
  402df4:	bl	4015e0 <log_assert_failed_realm@plt>

0000000000402df8 <parse_counter>:
  402df8:	stp	x29, x30, [sp, #-80]!
  402dfc:	str	x25, [sp, #16]
  402e00:	stp	x24, x23, [sp, #32]
  402e04:	stp	x22, x21, [sp, #48]
  402e08:	stp	x20, x19, [sp, #64]
  402e0c:	mov	x29, sp
  402e10:	sub	sp, sp, #0x10
  402e14:	cbz	x0, 40309c <parse_counter+0x2a4>
  402e18:	mov	x22, x1
  402e1c:	cbz	x1, 4030bc <parse_counter+0x2c4>
  402e20:	ldr	x8, [x22]
  402e24:	cbz	x8, 4030e0 <parse_counter+0x2e8>
  402e28:	ldrb	w9, [x8]
  402e2c:	cmp	w9, #0x2b
  402e30:	b.ne	403104 <parse_counter+0x30c>  // b.any
  402e34:	add	x23, x8, #0x1
  402e38:	adrp	x1, 403000 <parse_counter+0x208>
  402e3c:	mov	x19, x0
  402e40:	add	x1, x1, #0x7ed
  402e44:	mov	x0, x23
  402e48:	mov	x20, x3
  402e4c:	mov	x21, x2
  402e50:	bl	4017c0 <strspn@plt>
  402e54:	cbz	x0, 402f20 <parse_counter+0x128>
  402e58:	mov	x24, x0
  402e5c:	mov	x0, x23
  402e60:	mov	x1, x24
  402e64:	bl	4017d0 <strnlen@plt>
  402e68:	add	x8, x0, #0x10
  402e6c:	and	x8, x8, #0xfffffffffffffff0
  402e70:	mov	x9, sp
  402e74:	sub	x25, x9, x8
  402e78:	mov	x2, x0
  402e7c:	mov	sp, x25
  402e80:	strb	wzr, [x25, x0]
  402e84:	mov	x0, x25
  402e88:	mov	x1, x23
  402e8c:	bl	4017e0 <memcpy@plt>
  402e90:	add	x1, x29, #0x18
  402e94:	mov	x0, x25
  402e98:	bl	4017f0 <safe_atollu@plt>
  402e9c:	tbnz	w0, #31, 402f58 <parse_counter+0x160>
  402ea0:	add	x23, x23, x24
  402ea4:	ldrb	w8, [x23]
  402ea8:	cmp	w8, #0x2d
  402eac:	b.ne	402f94 <parse_counter+0x19c>  // b.any
  402eb0:	add	x23, x23, #0x1
  402eb4:	adrp	x1, 403000 <parse_counter+0x208>
  402eb8:	add	x1, x1, #0x7ed
  402ebc:	mov	x0, x23
  402ec0:	bl	4017c0 <strspn@plt>
  402ec4:	cbz	x0, 402ff4 <parse_counter+0x1fc>
  402ec8:	mov	x24, x0
  402ecc:	mov	x0, x23
  402ed0:	mov	x1, x24
  402ed4:	bl	4017d0 <strnlen@plt>
  402ed8:	add	x8, x0, #0x10
  402edc:	and	x8, x8, #0xfffffffffffffff0
  402ee0:	mov	x9, sp
  402ee4:	sub	x25, x9, x8
  402ee8:	mov	x2, x0
  402eec:	mov	sp, x25
  402ef0:	strb	wzr, [x25, x0]
  402ef4:	mov	x0, x25
  402ef8:	mov	x1, x23
  402efc:	bl	4017e0 <memcpy@plt>
  402f00:	sub	x1, x29, #0x8
  402f04:	mov	x0, x25
  402f08:	bl	4017f0 <safe_atollu@plt>
  402f0c:	tbnz	w0, #31, 40303c <parse_counter+0x244>
  402f10:	ldur	x8, [x29, #-8]
  402f14:	add	x23, x23, x24
  402f18:	cbnz	x8, 402fd0 <parse_counter+0x1d8>
  402f1c:	b	402f98 <parse_counter+0x1a0>
  402f20:	bl	401560 <log_get_max_level_realm@plt>
  402f24:	cmp	w0, #0x3
  402f28:	b.lt	403034 <parse_counter+0x23c>  // b.tstop
  402f2c:	adrp	x2, 403000 <parse_counter+0x208>
  402f30:	adrp	x4, 403000 <parse_counter+0x208>
  402f34:	adrp	x5, 403000 <parse_counter+0x208>
  402f38:	mov	w1, #0x16                  	// #22
  402f3c:	add	x2, x2, #0x336
  402f40:	add	x4, x4, #0x7f8
  402f44:	add	x5, x5, #0x806
  402f48:	mov	w0, #0x3                   	// #3
  402f4c:	movk	w1, #0x4000, lsl #16
  402f50:	mov	w3, #0xa2                  	// #162
  402f54:	b	403028 <parse_counter+0x230>
  402f58:	mov	w25, w0
  402f5c:	mov	w0, wzr
  402f60:	bl	401560 <log_get_max_level_realm@plt>
  402f64:	cmp	w0, #0x3
  402f68:	b.lt	403074 <parse_counter+0x27c>  // b.tstop
  402f6c:	adrp	x2, 403000 <parse_counter+0x208>
  402f70:	adrp	x4, 403000 <parse_counter+0x208>
  402f74:	adrp	x5, 403000 <parse_counter+0x208>
  402f78:	add	x2, x2, #0x336
  402f7c:	add	x4, x4, #0x7f8
  402f80:	add	x5, x5, #0x84a
  402f84:	mov	w0, #0x3                   	// #3
  402f88:	mov	w3, #0xa7                  	// #167
  402f8c:	mov	w1, w25
  402f90:	b	403028 <parse_counter+0x230>
  402f94:	stur	xzr, [x29, #-8]
  402f98:	mov	w0, wzr
  402f9c:	bl	401560 <log_get_max_level_realm@plt>
  402fa0:	cmp	w0, #0x4
  402fa4:	b.lt	402fd0 <parse_counter+0x1d8>  // b.tstop
  402fa8:	adrp	x2, 403000 <parse_counter+0x208>
  402fac:	adrp	x4, 403000 <parse_counter+0x208>
  402fb0:	adrp	x5, 403000 <parse_counter+0x208>
  402fb4:	add	x2, x2, #0x336
  402fb8:	add	x4, x4, #0x7f8
  402fbc:	add	x5, x5, #0x912
  402fc0:	mov	w0, #0x4                   	// #4
  402fc4:	mov	w3, #0xbe                  	// #190
  402fc8:	mov	w1, wzr
  402fcc:	bl	401590 <log_internal_realm@plt>
  402fd0:	str	x23, [x22]
  402fd4:	cbz	x21, 402fe0 <parse_counter+0x1e8>
  402fd8:	ldr	x8, [x29, #24]
  402fdc:	str	x8, [x21]
  402fe0:	mov	w0, wzr
  402fe4:	cbz	x20, 403080 <parse_counter+0x288>
  402fe8:	ldur	x8, [x29, #-8]
  402fec:	str	x8, [x20]
  402ff0:	b	403080 <parse_counter+0x288>
  402ff4:	bl	401560 <log_get_max_level_realm@plt>
  402ff8:	cmp	w0, #0x3
  402ffc:	b.lt	403034 <parse_counter+0x23c>  // b.tstop
  403000:	adrp	x2, 403000 <parse_counter+0x208>
  403004:	adrp	x4, 403000 <parse_counter+0x208>
  403008:	adrp	x5, 403000 <parse_counter+0x208>
  40300c:	mov	w1, #0x16                  	// #22
  403010:	add	x2, x2, #0x336
  403014:	add	x4, x4, #0x7f8
  403018:	add	x5, x5, #0x88c
  40301c:	mov	w0, #0x3                   	// #3
  403020:	movk	w1, #0x4000, lsl #16
  403024:	mov	w3, #0xb2                  	// #178
  403028:	mov	x6, x19
  40302c:	bl	401590 <log_internal_realm@plt>
  403030:	b	403080 <parse_counter+0x288>
  403034:	mov	w0, #0xffffffea            	// #-22
  403038:	b	403080 <parse_counter+0x288>
  40303c:	mov	w25, w0
  403040:	mov	w0, wzr
  403044:	bl	401560 <log_get_max_level_realm@plt>
  403048:	cmp	w0, #0x3
  40304c:	b.lt	403074 <parse_counter+0x27c>  // b.tstop
  403050:	adrp	x2, 403000 <parse_counter+0x208>
  403054:	adrp	x4, 403000 <parse_counter+0x208>
  403058:	adrp	x5, 403000 <parse_counter+0x208>
  40305c:	add	x2, x2, #0x336
  403060:	add	x4, x4, #0x7f8
  403064:	add	x5, x5, #0x8d0
  403068:	mov	w0, #0x3                   	// #3
  40306c:	mov	w3, #0xb7                  	// #183
  403070:	b	402f8c <parse_counter+0x194>
  403074:	mov	w8, wzr
  403078:	neg	w9, w25
  40307c:	sub	w0, w8, w9, uxtb
  403080:	mov	sp, x29
  403084:	ldp	x20, x19, [sp, #64]
  403088:	ldp	x22, x21, [sp, #48]
  40308c:	ldp	x24, x23, [sp, #32]
  403090:	ldr	x25, [sp, #16]
  403094:	ldp	x29, x30, [sp], #80
  403098:	ret
  40309c:	adrp	x1, 403000 <parse_counter+0x208>
  4030a0:	adrp	x2, 403000 <parse_counter+0x208>
  4030a4:	adrp	x4, 403000 <parse_counter+0x208>
  4030a8:	add	x1, x1, #0x793
  4030ac:	add	x2, x2, #0x336
  4030b0:	add	x4, x4, #0x798
  4030b4:	mov	w3, #0x95                  	// #149
  4030b8:	bl	4015e0 <log_assert_failed_realm@plt>
  4030bc:	adrp	x1, 403000 <parse_counter+0x208>
  4030c0:	adrp	x2, 403000 <parse_counter+0x208>
  4030c4:	adrp	x4, 403000 <parse_counter+0x208>
  4030c8:	add	x1, x1, #0x7df
  4030cc:	add	x2, x2, #0x336
  4030d0:	add	x4, x4, #0x798
  4030d4:	mov	w3, #0x96                  	// #150
  4030d8:	mov	w0, wzr
  4030dc:	bl	4015e0 <log_assert_failed_realm@plt>
  4030e0:	adrp	x1, 403000 <parse_counter+0x208>
  4030e4:	adrp	x2, 403000 <parse_counter+0x208>
  4030e8:	adrp	x4, 403000 <parse_counter+0x208>
  4030ec:	add	x1, x1, #0x7e1
  4030f0:	add	x2, x2, #0x336
  4030f4:	add	x4, x4, #0x798
  4030f8:	mov	w3, #0x99                  	// #153
  4030fc:	mov	w0, wzr
  403100:	bl	4015e0 <log_assert_failed_realm@plt>
  403104:	adrp	x1, 403000 <parse_counter+0x208>
  403108:	adrp	x2, 403000 <parse_counter+0x208>
  40310c:	adrp	x4, 403000 <parse_counter+0x208>
  403110:	add	x1, x1, #0x7e3
  403114:	add	x2, x2, #0x336
  403118:	add	x4, x4, #0x798
  40311c:	mov	w3, #0x9a                  	// #154
  403120:	mov	w0, wzr
  403124:	bl	4015e0 <log_assert_failed_realm@plt>

0000000000403128 <__libc_csu_init>:
  403128:	stp	x29, x30, [sp, #-64]!
  40312c:	mov	x29, sp
  403130:	stp	x19, x20, [sp, #16]
  403134:	adrp	x20, 41f000 <__FRAME_END__+0x1b1a8>
  403138:	add	x20, x20, #0xc00
  40313c:	stp	x21, x22, [sp, #32]
  403140:	adrp	x21, 41f000 <__FRAME_END__+0x1b1a8>
  403144:	add	x21, x21, #0xbf8
  403148:	sub	x20, x20, x21
  40314c:	mov	w22, w0
  403150:	stp	x23, x24, [sp, #48]
  403154:	mov	x23, x1
  403158:	mov	x24, x2
  40315c:	bl	401478 <_init>
  403160:	cmp	xzr, x20, asr #3
  403164:	b.eq	403190 <__libc_csu_init+0x68>  // b.none
  403168:	asr	x20, x20, #3
  40316c:	mov	x19, #0x0                   	// #0
  403170:	ldr	x3, [x21, x19, lsl #3]
  403174:	mov	x2, x24
  403178:	add	x19, x19, #0x1
  40317c:	mov	x1, x23
  403180:	mov	w0, w22
  403184:	blr	x3
  403188:	cmp	x20, x19
  40318c:	b.ne	403170 <__libc_csu_init+0x48>  // b.any
  403190:	ldp	x19, x20, [sp, #16]
  403194:	ldp	x21, x22, [sp, #32]
  403198:	ldp	x23, x24, [sp, #48]
  40319c:	ldp	x29, x30, [sp], #64
  4031a0:	ret
  4031a4:	nop

00000000004031a8 <__libc_csu_fini>:
  4031a8:	ret

Disassembly of section .fini:

00000000004031ac <_fini>:
  4031ac:	stp	x29, x30, [sp, #-16]!
  4031b0:	mov	x29, sp
  4031b4:	ldp	x29, x30, [sp], #16
  4031b8:	ret
