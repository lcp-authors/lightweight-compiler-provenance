
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//systemd-journald_clang_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

00000000004055d0 <_init>:
  4055d0:	stp	x29, x30, [sp, #-16]!
  4055d4:	mov	x29, sp
  4055d8:	bl	4067c8 <call_weak_fn>
  4055dc:	ldp	x29, x30, [sp], #16
  4055e0:	ret

Disassembly of section .plt:

00000000004055e8 <__libc_start_main@plt-0x20>:
  4055e8:	stp	x16, x30, [sp, #-16]!
  4055ec:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  4055f0:	ldr	x17, [x16, #1856]
  4055f4:	add	x16, x16, #0x740
  4055f8:	br	x17
  4055fc:	nop
  405600:	nop
  405604:	nop

0000000000405608 <__libc_start_main@plt>:
  405608:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  40560c:	ldr	x17, [x16, #1864]
  405610:	add	x16, x16, #0x748
  405614:	br	x17

0000000000405618 <abort@plt>:
  405618:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  40561c:	ldr	x17, [x16, #1872]
  405620:	add	x16, x16, #0x750
  405624:	br	x17

0000000000405628 <__gmon_start__@plt>:
  405628:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  40562c:	ldr	x17, [x16, #1880]
  405630:	add	x16, x16, #0x758
  405634:	br	x17

0000000000405638 <log_get_max_level_realm@plt>:
  405638:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  40563c:	ldr	x17, [x16, #1888]
  405640:	add	x16, x16, #0x760
  405644:	br	x17

0000000000405648 <log_internal_realm@plt>:
  405648:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  40564c:	ldr	x17, [x16, #1896]
  405650:	add	x16, x16, #0x768
  405654:	br	x17

0000000000405658 <abs@plt>:
  405658:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  40565c:	ldr	x17, [x16, #1904]
  405660:	add	x16, x16, #0x770
  405664:	br	x17

0000000000405668 <log_set_prohibit_ipc@plt>:
  405668:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  40566c:	ldr	x17, [x16, #1912]
  405670:	add	x16, x16, #0x778
  405674:	br	x17

0000000000405678 <log_set_target@plt>:
  405678:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  40567c:	ldr	x17, [x16, #1920]
  405680:	add	x16, x16, #0x780
  405684:	br	x17

0000000000405688 <log_set_facility@plt>:
  405688:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  40568c:	ldr	x17, [x16, #1928]
  405690:	add	x16, x16, #0x788
  405694:	br	x17

0000000000405698 <log_parse_environment_realm@plt>:
  405698:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  40569c:	ldr	x17, [x16, #1936]
  4056a0:	add	x16, x16, #0x790
  4056a4:	br	x17

00000000004056a8 <log_open@plt>:
  4056a8:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  4056ac:	ldr	x17, [x16, #1944]
  4056b0:	add	x16, x16, #0x798
  4056b4:	br	x17

00000000004056b8 <umask@plt>:
  4056b8:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  4056bc:	ldr	x17, [x16, #1952]
  4056c0:	add	x16, x16, #0x7a0
  4056c4:	br	x17

00000000004056c8 <sigbus_install@plt>:
  4056c8:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  4056cc:	ldr	x17, [x16, #1960]
  4056d0:	add	x16, x16, #0x7a8
  4056d4:	br	x17

00000000004056d8 <getpid_cached@plt>:
  4056d8:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  4056dc:	ldr	x17, [x16, #1968]
  4056e0:	add	x16, x16, #0x7b0
  4056e4:	br	x17

00000000004056e8 <sd_event_get_state@plt>:
  4056e8:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  4056ec:	ldr	x17, [x16, #1976]
  4056f0:	add	x16, x16, #0x7b8
  4056f4:	br	x17

00000000004056f8 <now@plt>:
  4056f8:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  4056fc:	ldr	x17, [x16, #1984]
  405700:	add	x16, x16, #0x7c0
  405704:	br	x17

0000000000405708 <sd_event_run@plt>:
  405708:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  40570c:	ldr	x17, [x16, #1992]
  405710:	add	x16, x16, #0x7c8
  405714:	br	x17

0000000000405718 <log_assert_failed_realm@plt>:
  405718:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  40571c:	ldr	x17, [x16, #2000]
  405720:	add	x16, x16, #0x7d0
  405724:	br	x17

0000000000405728 <snprintf@plt>:
  405728:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  40572c:	ldr	x17, [x16, #2008]
  405730:	add	x16, x16, #0x7d8
  405734:	br	x17

0000000000405738 <strlen@plt>:
  405738:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  40573c:	ldr	x17, [x16, #2016]
  405740:	add	x16, x16, #0x7e0
  405744:	br	x17

0000000000405748 <get_process_comm@plt>:
  405748:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  40574c:	ldr	x17, [x16, #2024]
  405750:	add	x16, x16, #0x7e8
  405754:	br	x17

0000000000405758 <writev@plt>:
  405758:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  40575c:	ldr	x17, [x16, #2032]
  405760:	add	x16, x16, #0x7f0
  405764:	br	x17

0000000000405768 <__errno_location@plt>:
  405768:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  40576c:	ldr	x17, [x16, #2040]
  405770:	add	x16, x16, #0x7f8
  405774:	br	x17

0000000000405778 <free@plt>:
  405778:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  40577c:	ldr	x17, [x16, #2048]
  405780:	add	x16, x16, #0x800
  405784:	br	x17

0000000000405788 <memchr@plt>:
  405788:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  40578c:	ldr	x17, [x16, #2056]
  405790:	add	x16, x16, #0x808
  405794:	br	x17

0000000000405798 <safe_atoi@plt>:
  405798:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  40579c:	ldr	x17, [x16, #2064]
  4057a0:	add	x16, x16, #0x810
  4057a4:	br	x17

00000000004057a8 <safe_atollu@plt>:
  4057a8:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  4057ac:	ldr	x17, [x16, #2072]
  4057b0:	add	x16, x16, #0x818
  4057b4:	br	x17

00000000004057b8 <cunescape_length_with_prefix@plt>:
  4057b8:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  4057bc:	ldr	x17, [x16, #2080]
  4057c0:	add	x16, x16, #0x820
  4057c4:	br	x17

00000000004057c8 <sd_device_new_from_device_id@plt>:
  4057c8:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  4057cc:	ldr	x17, [x16, #2088]
  4057d0:	add	x16, x16, #0x828
  4057d4:	br	x17

00000000004057d8 <sd_device_get_devname@plt>:
  4057d8:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  4057dc:	ldr	x17, [x16, #2096]
  4057e0:	add	x16, x16, #0x830
  4057e4:	br	x17

00000000004057e8 <strjoin_real@plt>:
  4057e8:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  4057ec:	ldr	x17, [x16, #2104]
  4057f0:	add	x16, x16, #0x838
  4057f4:	br	x17

00000000004057f8 <sd_device_get_sysname@plt>:
  4057f8:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  4057fc:	ldr	x17, [x16, #2112]
  405800:	add	x16, x16, #0x840
  405804:	br	x17

0000000000405808 <sd_device_get_devlink_first@plt>:
  405808:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  40580c:	ldr	x17, [x16, #2120]
  405810:	add	x16, x16, #0x848
  405814:	br	x17

0000000000405818 <sd_device_get_devlink_next@plt>:
  405818:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  40581c:	ldr	x17, [x16, #2128]
  405820:	add	x16, x16, #0x850
  405824:	br	x17

0000000000405828 <asprintf@plt>:
  405828:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  40582c:	ldr	x17, [x16, #2136]
  405830:	add	x16, x16, #0x858
  405834:	br	x17

0000000000405838 <strncmp@plt>:
  405838:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  40583c:	ldr	x17, [x16, #2144]
  405840:	add	x16, x16, #0x860
  405844:	br	x17

0000000000405848 <sd_device_unref@plt>:
  405848:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  40584c:	ldr	x17, [x16, #2152]
  405850:	add	x16, x16, #0x868
  405854:	br	x17

0000000000405858 <parse_pid@plt>:
  405858:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  40585c:	ldr	x17, [x16, #2160]
  405860:	add	x16, x16, #0x870
  405864:	br	x17

0000000000405868 <strcmp@plt>:
  405868:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  40586c:	ldr	x17, [x16, #2168]
  405870:	add	x16, x16, #0x878
  405874:	br	x17

0000000000405878 <read@plt>:
  405878:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  40587c:	ldr	x17, [x16, #2176]
  405880:	add	x16, x16, #0x880
  405884:	br	x17

0000000000405888 <sd_event_source_unref@plt>:
  405888:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  40588c:	ldr	x17, [x16, #2184]
  405890:	add	x16, x16, #0x888
  405894:	br	x17

0000000000405898 <open64@plt>:
  405898:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  40589c:	ldr	x17, [x16, #2192]
  4058a0:	add	x16, x16, #0x890
  4058a4:	br	x17

00000000004058a8 <sd_event_add_io@plt>:
  4058a8:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  4058ac:	ldr	x17, [x16, #2200]
  4058b0:	add	x16, x16, #0x898
  4058b4:	br	x17

00000000004058b8 <sd_event_source_set_priority@plt>:
  4058b8:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  4058bc:	ldr	x17, [x16, #2208]
  4058c0:	add	x16, x16, #0x8a0
  4058c4:	br	x17

00000000004058c8 <safe_close@plt>:
  4058c8:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  4058cc:	ldr	x17, [x16, #2216]
  4058d0:	add	x16, x16, #0x8a8
  4058d4:	br	x17

00000000004058d8 <posix_fallocate64@plt>:
  4058d8:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  4058dc:	ldr	x17, [x16, #2224]
  4058e0:	add	x16, x16, #0x8b0
  4058e4:	br	x17

00000000004058e8 <mmap64@plt>:
  4058e8:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  4058ec:	ldr	x17, [x16, #2232]
  4058f0:	add	x16, x16, #0x8b8
  4058f4:	br	x17

00000000004058f8 <format_bytes_full@plt>:
  4058f8:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  4058fc:	ldr	x17, [x16, #2240]
  405900:	add	x16, x16, #0x8c0
  405904:	br	x17

0000000000405908 <log_format_iovec@plt>:
  405908:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  40590c:	ldr	x17, [x16, #2248]
  405910:	add	x16, x16, #0x8c8
  405914:	br	x17

0000000000405918 <readdir64@plt>:
  405918:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  40591c:	ldr	x17, [x16, #2256]
  405920:	add	x16, x16, #0x8d0
  405924:	br	x17

0000000000405928 <hidden_or_backup_file@plt>:
  405928:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  40592c:	ldr	x17, [x16, #2264]
  405930:	add	x16, x16, #0x8d8
  405934:	br	x17

0000000000405938 <endswith@plt>:
  405938:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  40593c:	ldr	x17, [x16, #2272]
  405940:	add	x16, x16, #0x8e0
  405944:	br	x17

0000000000405948 <strndup@plt>:
  405948:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  40594c:	ldr	x17, [x16, #2280]
  405950:	add	x16, x16, #0x8e8
  405954:	br	x17

0000000000405958 <log_oom_internal@plt>:
  405958:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  40595c:	ldr	x17, [x16, #2288]
  405960:	add	x16, x16, #0x8f0
  405964:	br	x17

0000000000405968 <parse_uid@plt>:
  405968:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  40596c:	ldr	x17, [x16, #2296]
  405970:	add	x16, x16, #0x8f8
  405974:	br	x17

0000000000405978 <dirfd@plt>:
  405978:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  40597c:	ldr	x17, [x16, #2304]
  405980:	add	x16, x16, #0x900
  405984:	br	x17

0000000000405988 <openat64@plt>:
  405988:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  40598c:	ldr	x17, [x16, #2312]
  405990:	add	x16, x16, #0x908
  405994:	br	x17

0000000000405998 <journal_file_open@plt>:
  405998:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  40599c:	ldr	x17, [x16, #2320]
  4059a0:	add	x16, x16, #0x910
  4059a4:	br	x17

00000000004059a8 <journal_file_dispose@plt>:
  4059a8:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  4059ac:	ldr	x17, [x16, #2328]
  4059b0:	add	x16, x16, #0x918
  4059b4:	br	x17

00000000004059b8 <journal_file_archive@plt>:
  4059b8:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  4059bc:	ldr	x17, [x16, #2336]
  4059c0:	add	x16, x16, #0x920
  4059c4:	br	x17

00000000004059c8 <journal_initiate_close@plt>:
  4059c8:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  4059cc:	ldr	x17, [x16, #2344]
  4059d0:	add	x16, x16, #0x928
  4059d4:	br	x17

00000000004059d8 <closedir@plt>:
  4059d8:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  4059dc:	ldr	x17, [x16, #2352]
  4059e0:	add	x16, x16, #0x930
  4059e4:	br	x17

00000000004059e8 <journal_file_rotate@plt>:
  4059e8:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  4059ec:	ldr	x17, [x16, #2360]
  4059f0:	add	x16, x16, #0x938
  4059f4:	br	x17

00000000004059f8 <internal_hashmap_iterate@plt>:
  4059f8:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  4059fc:	ldr	x17, [x16, #2368]
  405a00:	add	x16, x16, #0x940
  405a04:	br	x17

0000000000405a08 <hashmap_replace@plt>:
  405a08:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  405a0c:	ldr	x17, [x16, #2376]
  405a10:	add	x16, x16, #0x948
  405a14:	br	x17

0000000000405a18 <internal_hashmap_remove@plt>:
  405a18:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  405a1c:	ldr	x17, [x16, #2384]
  405a20:	add	x16, x16, #0x950
  405a24:	br	x17

0000000000405a28 <sd_id128_get_machine@plt>:
  405a28:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  405a2c:	ldr	x17, [x16, #2392]
  405a30:	add	x16, x16, #0x958
  405a34:	br	x17

0000000000405a38 <opendir@plt>:
  405a38:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  405a3c:	ldr	x17, [x16, #2400]
  405a40:	add	x16, x16, #0x960
  405a44:	br	x17

0000000000405a48 <internal_hashmap_contains@plt>:
  405a48:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  405a4c:	ldr	x17, [x16, #2408]
  405a50:	add	x16, x16, #0x968
  405a54:	br	x17

0000000000405a58 <journal_file_close@plt>:
  405a58:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  405a5c:	ldr	x17, [x16, #2416]
  405a60:	add	x16, x16, #0x970
  405a64:	br	x17

0000000000405a68 <set_iterate@plt>:
  405a68:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  405a6c:	ldr	x17, [x16, #2424]
  405a70:	add	x16, x16, #0x978
  405a74:	br	x17

0000000000405a78 <journal_file_is_offlining@plt>:
  405a78:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  405a7c:	ldr	x17, [x16, #2432]
  405a80:	add	x16, x16, #0x980
  405a84:	br	x17

0000000000405a88 <journal_file_set_offline@plt>:
  405a88:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  405a8c:	ldr	x17, [x16, #2440]
  405a90:	add	x16, x16, #0x988
  405a94:	br	x17

0000000000405a98 <sd_event_source_set_enabled@plt>:
  405a98:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  405a9c:	ldr	x17, [x16, #2448]
  405aa0:	add	x16, x16, #0x990
  405aa4:	br	x17

0000000000405aa8 <journal_directory_vacuum@plt>:
  405aa8:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  405aac:	ldr	x17, [x16, #2456]
  405ab0:	add	x16, x16, #0x998
  405ab4:	br	x17

0000000000405ab8 <sprintf@plt>:
  405ab8:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  405abc:	ldr	x17, [x16, #2464]
  405ac0:	add	x16, x16, #0x9a0
  405ac4:	br	x17

0000000000405ac8 <uid_is_valid@plt>:
  405ac8:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  405acc:	ldr	x17, [x16, #2472]
  405ad0:	add	x16, x16, #0x9a8
  405ad4:	br	x17

0000000000405ad8 <stpcpy@plt>:
  405ad8:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  405adc:	ldr	x17, [x16, #2480]
  405ae0:	add	x16, x16, #0x9b0
  405ae4:	br	x17

0000000000405ae8 <set_iovec_string_field@plt>:
  405ae8:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  405aec:	ldr	x17, [x16, #2488]
  405af0:	add	x16, x16, #0x9b8
  405af4:	br	x17

0000000000405af8 <memcpy@plt>:
  405af8:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  405afc:	ldr	x17, [x16, #2496]
  405b00:	add	x16, x16, #0x9c0
  405b04:	br	x17

0000000000405b08 <sd_id128_to_string@plt>:
  405b08:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  405b0c:	ldr	x17, [x16, #2504]
  405b10:	add	x16, x16, #0x9c8
  405b14:	br	x17

0000000000405b18 <timeval_load@plt>:
  405b18:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  405b1c:	ldr	x17, [x16, #2512]
  405b20:	add	x16, x16, #0x9d0
  405b24:	br	x17

0000000000405b28 <strerror@plt>:
  405b28:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  405b2c:	ldr	x17, [x16, #2520]
  405b30:	add	x16, x16, #0x9d8
  405b34:	br	x17

0000000000405b38 <sd_journal_open@plt>:
  405b38:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  405b3c:	ldr	x17, [x16, #2528]
  405b40:	add	x16, x16, #0x9e0
  405b44:	br	x17

0000000000405b48 <sd_journal_set_data_threshold@plt>:
  405b48:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  405b4c:	ldr	x17, [x16, #2536]
  405b50:	add	x16, x16, #0x9e8
  405b54:	br	x17

0000000000405b58 <sd_journal_seek_head@plt>:
  405b58:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  405b5c:	ldr	x17, [x16, #2544]
  405b60:	add	x16, x16, #0x9f0
  405b64:	br	x17

0000000000405b68 <sd_journal_next@plt>:
  405b68:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  405b6c:	ldr	x17, [x16, #2552]
  405b70:	add	x16, x16, #0x9f8
  405b74:	br	x17

0000000000405b78 <journal_file_move_to_object@plt>:
  405b78:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  405b7c:	ldr	x17, [x16, #2560]
  405b80:	add	x16, x16, #0xa00
  405b84:	br	x17

0000000000405b88 <journal_file_copy_entry@plt>:
  405b88:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  405b8c:	ldr	x17, [x16, #2568]
  405b90:	add	x16, x16, #0xa08
  405b94:	br	x17

0000000000405b98 <journal_file_post_change@plt>:
  405b98:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  405b9c:	ldr	x17, [x16, #2576]
  405ba0:	add	x16, x16, #0xa10
  405ba4:	br	x17

0000000000405ba8 <rm_rf@plt>:
  405ba8:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  405bac:	ldr	x17, [x16, #2584]
  405bb0:	add	x16, x16, #0xa18
  405bb4:	br	x17

0000000000405bb8 <sd_journal_close@plt>:
  405bb8:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  405bbc:	ldr	x17, [x16, #2592]
  405bc0:	add	x16, x16, #0xa20
  405bc4:	br	x17

0000000000405bc8 <format_timespan@plt>:
  405bc8:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  405bcc:	ldr	x17, [x16, #2600]
  405bd0:	add	x16, x16, #0xa28
  405bd4:	br	x17

0000000000405bd8 <touch@plt>:
  405bd8:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  405bdc:	ldr	x17, [x16, #2608]
  405be0:	add	x16, x16, #0xa30
  405be4:	br	x17

0000000000405be8 <access@plt>:
  405be8:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  405bec:	ldr	x17, [x16, #2616]
  405bf0:	add	x16, x16, #0xa38
  405bf4:	br	x17

0000000000405bf8 <mkdir_p@plt>:
  405bf8:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  405bfc:	ldr	x17, [x16, #2624]
  405c00:	add	x16, x16, #0xa40
  405c04:	br	x17

0000000000405c08 <mkdir@plt>:
  405c08:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  405c0c:	ldr	x17, [x16, #2632]
  405c10:	add	x16, x16, #0xa48
  405c14:	br	x17

0000000000405c18 <mkdir_parents@plt>:
  405c18:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  405c1c:	ldr	x17, [x16, #2640]
  405c20:	add	x16, x16, #0xa50
  405c24:	br	x17

0000000000405c28 <memset@plt>:
  405c28:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  405c2c:	ldr	x17, [x16, #2648]
  405c30:	add	x16, x16, #0xa58
  405c34:	br	x17

0000000000405c38 <ioctl@plt>:
  405c38:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  405c3c:	ldr	x17, [x16, #2656]
  405c40:	add	x16, x16, #0xa60
  405c44:	br	x17

0000000000405c48 <page_size@plt>:
  405c48:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  405c4c:	ldr	x17, [x16, #2664]
  405c50:	add	x16, x16, #0xa68
  405c54:	br	x17

0000000000405c58 <greedy_realloc@plt>:
  405c58:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  405c5c:	ldr	x17, [x16, #2672]
  405c60:	add	x16, x16, #0xa70
  405c64:	br	x17

0000000000405c68 <recvmsg@plt>:
  405c68:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  405c6c:	ldr	x17, [x16, #2680]
  405c70:	add	x16, x16, #0xa78
  405c74:	br	x17

0000000000405c78 <__cmsg_nxthdr@plt>:
  405c78:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  405c7c:	ldr	x17, [x16, #2688]
  405c80:	add	x16, x16, #0xa80
  405c84:	br	x17

0000000000405c88 <close_many@plt>:
  405c88:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  405c8c:	ldr	x17, [x16, #2696]
  405c90:	add	x16, x16, #0xa88
  405c94:	br	x17

0000000000405c98 <sd_event_now@plt>:
  405c98:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  405c9c:	ldr	x17, [x16, #2704]
  405ca0:	add	x16, x16, #0xa90
  405ca4:	br	x17

0000000000405ca8 <sd_event_add_time@plt>:
  405ca8:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  405cac:	ldr	x17, [x16, #2712]
  405cb0:	add	x16, x16, #0xa98
  405cb4:	br	x17

0000000000405cb8 <sd_event_source_set_time@plt>:
  405cb8:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  405cbc:	ldr	x17, [x16, #2720]
  405cc0:	add	x16, x16, #0xaa0
  405cc4:	br	x17

0000000000405cc8 <journal_reset_metrics@plt>:
  405cc8:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  405ccc:	ldr	x17, [x16, #2728]
  405cd0:	add	x16, x16, #0xaa8
  405cd4:	br	x17

0000000000405cd8 <proc_cmdline_parse@plt>:
  405cd8:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  405cdc:	ldr	x17, [x16, #2736]
  405ce0:	add	x16, x16, #0xab0
  405ce4:	br	x17

0000000000405ce8 <internal_ordered_hashmap_new@plt>:
  405ce8:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  405cec:	ldr	x17, [x16, #2744]
  405cf0:	add	x16, x16, #0xab8
  405cf4:	br	x17

0000000000405cf8 <mmap_cache_new@plt>:
  405cf8:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  405cfc:	ldr	x17, [x16, #2752]
  405d00:	add	x16, x16, #0xac0
  405d04:	br	x17

0000000000405d08 <internal_set_new@plt>:
  405d08:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  405d0c:	ldr	x17, [x16, #2760]
  405d10:	add	x16, x16, #0xac8
  405d14:	br	x17

0000000000405d18 <sd_event_default@plt>:
  405d18:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  405d1c:	ldr	x17, [x16, #2768]
  405d20:	add	x16, x16, #0xad0
  405d24:	br	x17

0000000000405d28 <sd_listen_fds@plt>:
  405d28:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  405d2c:	ldr	x17, [x16, #2776]
  405d30:	add	x16, x16, #0xad8
  405d34:	br	x17

0000000000405d38 <sd_is_socket_unix@plt>:
  405d38:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  405d3c:	ldr	x17, [x16, #2784]
  405d40:	add	x16, x16, #0xae0
  405d44:	br	x17

0000000000405d48 <sd_is_socket@plt>:
  405d48:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  405d4c:	ldr	x17, [x16, #2792]
  405d50:	add	x16, x16, #0xae8
  405d54:	br	x17

0000000000405d58 <fdset_new@plt>:
  405d58:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  405d5c:	ldr	x17, [x16, #2800]
  405d60:	add	x16, x16, #0xaf0
  405d64:	br	x17

0000000000405d68 <fdset_put@plt>:
  405d68:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  405d6c:	ldr	x17, [x16, #2808]
  405d70:	add	x16, x16, #0xaf8
  405d74:	br	x17

0000000000405d78 <fdset_size@plt>:
  405d78:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  405d7c:	ldr	x17, [x16, #2816]
  405d80:	add	x16, x16, #0xb00
  405d84:	br	x17

0000000000405d88 <fdset_free@plt>:
  405d88:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  405d8c:	ldr	x17, [x16, #2824]
  405d90:	add	x16, x16, #0xb08
  405d94:	br	x17

0000000000405d98 <cg_get_root_path@plt>:
  405d98:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  405d9c:	ldr	x17, [x16, #2832]
  405da0:	add	x16, x16, #0xb10
  405da4:	br	x17

0000000000405da8 <path_join_internal@plt>:
  405da8:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  405dac:	ldr	x17, [x16, #2840]
  405db0:	add	x16, x16, #0xb18
  405db4:	br	x17

0000000000405db8 <config_parse_many_nulstr@plt>:
  405db8:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  405dbc:	ldr	x17, [x16, #2848]
  405dc0:	add	x16, x16, #0xb20
  405dc4:	br	x17

0000000000405dc8 <proc_cmdline_key_streq@plt>:
  405dc8:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  405dcc:	ldr	x17, [x16, #2856]
  405dd0:	add	x16, x16, #0xb28
  405dd4:	br	x17

0000000000405dd8 <parse_boolean@plt>:
  405dd8:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  405ddc:	ldr	x17, [x16, #2864]
  405de0:	add	x16, x16, #0xb30
  405de4:	br	x17

0000000000405de8 <log_level_from_string@plt>:
  405de8:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  405dec:	ldr	x17, [x16, #2872]
  405df0:	add	x16, x16, #0xb38
  405df4:	br	x17

0000000000405df8 <varlink_server_new@plt>:
  405df8:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  405dfc:	ldr	x17, [x16, #2880]
  405e00:	add	x16, x16, #0xb40
  405e04:	br	x17

0000000000405e08 <varlink_server_set_userdata@plt>:
  405e08:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  405e0c:	ldr	x17, [x16, #2888]
  405e10:	add	x16, x16, #0xb48
  405e14:	br	x17

0000000000405e18 <varlink_server_bind_method_many_internal@plt>:
  405e18:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  405e1c:	ldr	x17, [x16, #2896]
  405e20:	add	x16, x16, #0xb50
  405e24:	br	x17

0000000000405e28 <varlink_server_listen_address@plt>:
  405e28:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  405e2c:	ldr	x17, [x16, #2904]
  405e30:	add	x16, x16, #0xb58
  405e34:	br	x17

0000000000405e38 <varlink_server_attach_event@plt>:
  405e38:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  405e3c:	ldr	x17, [x16, #2912]
  405e40:	add	x16, x16, #0xb60
  405e44:	br	x17

0000000000405e48 <__libc_current_sigrtmin@plt>:
  405e48:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  405e4c:	ldr	x17, [x16, #2920]
  405e50:	add	x16, x16, #0xb68
  405e54:	br	x17

0000000000405e58 <sigprocmask_many@plt>:
  405e58:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  405e5c:	ldr	x17, [x16, #2928]
  405e60:	add	x16, x16, #0xb70
  405e64:	br	x17

0000000000405e68 <sd_event_add_signal@plt>:
  405e68:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  405e6c:	ldr	x17, [x16, #2936]
  405e70:	add	x16, x16, #0xb78
  405e74:	br	x17

0000000000405e78 <gethostname_malloc@plt>:
  405e78:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  405e7c:	ldr	x17, [x16, #2944]
  405e80:	add	x16, x16, #0xb80
  405e84:	br	x17

0000000000405e88 <sd_id128_get_boot@plt>:
  405e88:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  405e8c:	ldr	x17, [x16, #2952]
  405e90:	add	x16, x16, #0xb88
  405e94:	br	x17

0000000000405e98 <getenv@plt>:
  405e98:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  405e9c:	ldr	x17, [x16, #2960]
  405ea0:	add	x16, x16, #0xb90
  405ea4:	br	x17

0000000000405ea8 <sockaddr_un_set_path@plt>:
  405ea8:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  405eac:	ldr	x17, [x16, #2968]
  405eb0:	add	x16, x16, #0xb98
  405eb4:	br	x17

0000000000405eb8 <socket@plt>:
  405eb8:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  405ebc:	ldr	x17, [x16, #2976]
  405ec0:	add	x16, x16, #0xba0
  405ec4:	br	x17

0000000000405ec8 <fd_inc_sndbuf@plt>:
  405ec8:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  405ecc:	ldr	x17, [x16, #2984]
  405ed0:	add	x16, x16, #0xba8
  405ed4:	br	x17

0000000000405ed8 <connect@plt>:
  405ed8:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  405edc:	ldr	x17, [x16, #2992]
  405ee0:	add	x16, x16, #0xbb0
  405ee4:	br	x17

0000000000405ee8 <sd_watchdog_enabled@plt>:
  405ee8:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  405eec:	ldr	x17, [x16, #3000]
  405ef0:	add	x16, x16, #0xbb8
  405ef4:	br	x17

0000000000405ef8 <varlink_server_unref@plt>:
  405ef8:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  405efc:	ldr	x17, [x16, #3008]
  405f00:	add	x16, x16, #0xbc0
  405f04:	br	x17

0000000000405f08 <sd_event_unref@plt>:
  405f08:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  405f0c:	ldr	x17, [x16, #3016]
  405f10:	add	x16, x16, #0xbc8
  405f14:	br	x17

0000000000405f18 <munmap@plt>:
  405f18:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  405f1c:	ldr	x17, [x16, #3024]
  405f20:	add	x16, x16, #0xbd0
  405f24:	br	x17

0000000000405f28 <mmap_cache_unref@plt>:
  405f28:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  405f2c:	ldr	x17, [x16, #3032]
  405f30:	add	x16, x16, #0xbd8
  405f34:	br	x17

0000000000405f38 <internal_hashmap_first_key_and_value@plt>:
  405f38:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  405f3c:	ldr	x17, [x16, #3040]
  405f40:	add	x16, x16, #0xbe0
  405f44:	br	x17

0000000000405f48 <internal_hashmap_free@plt>:
  405f48:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  405f4c:	ldr	x17, [x16, #3048]
  405f50:	add	x16, x16, #0xbe8
  405f54:	br	x17

0000000000405f58 <string_table_lookup@plt>:
  405f58:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  405f5c:	ldr	x17, [x16, #3056]
  405f60:	add	x16, x16, #0xbf0
  405f64:	br	x17

0000000000405f68 <log_syntax_internal@plt>:
  405f68:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  405f6c:	ldr	x17, [x16, #3064]
  405f70:	add	x16, x16, #0xbf8
  405f74:	br	x17

0000000000405f78 <parse_size@plt>:
  405f78:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  405f7c:	ldr	x17, [x16, #3072]
  405f80:	add	x16, x16, #0xc00
  405f84:	br	x17

0000000000405f88 <fstatvfs64@plt>:
  405f88:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  405f8c:	ldr	x17, [x16, #3080]
  405f90:	add	x16, x16, #0xc08
  405f94:	br	x17

0000000000405f98 <add_acls_for_user@plt>:
  405f98:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  405f9c:	ldr	x17, [x16, #3088]
  405fa0:	add	x16, x16, #0xc10
  405fa4:	br	x17

0000000000405fa8 <internal_hashmap_size@plt>:
  405fa8:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  405fac:	ldr	x17, [x16, #3096]
  405fb0:	add	x16, x16, #0xc18
  405fb4:	br	x17

0000000000405fb8 <journal_file_rotate_suggested@plt>:
  405fb8:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  405fbc:	ldr	x17, [x16, #3104]
  405fc0:	add	x16, x16, #0xc20
  405fc4:	br	x17

0000000000405fc8 <journal_file_append_entry@plt>:
  405fc8:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  405fcc:	ldr	x17, [x16, #3112]
  405fd0:	add	x16, x16, #0xc28
  405fd4:	br	x17

0000000000405fd8 <internal_hashmap_get@plt>:
  405fd8:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  405fdc:	ldr	x17, [x16, #3120]
  405fe0:	add	x16, x16, #0xc30
  405fe4:	br	x17

0000000000405fe8 <journal_file_open_reliably@plt>:
  405fe8:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  405fec:	ldr	x17, [x16, #3128]
  405ff0:	add	x16, x16, #0xc38
  405ff4:	br	x17

0000000000405ff8 <journal_file_enable_post_change_timer@plt>:
  405ff8:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  405ffc:	ldr	x17, [x16, #3136]
  406000:	add	x16, x16, #0xc40
  406004:	br	x17

0000000000406008 <hashmap_put@plt>:
  406008:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  40600c:	ldr	x17, [x16, #3144]
  406010:	add	x16, x16, #0xc48
  406014:	br	x17

0000000000406018 <json_variant_elements@plt>:
  406018:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  40601c:	ldr	x17, [x16, #3152]
  406020:	add	x16, x16, #0xc50
  406024:	br	x17

0000000000406028 <varlink_error_invalid_parameter@plt>:
  406028:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  40602c:	ldr	x17, [x16, #3160]
  406030:	add	x16, x16, #0xc58
  406034:	br	x17

0000000000406038 <sd_event_add_defer@plt>:
  406038:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  40603c:	ldr	x17, [x16, #3168]
  406040:	add	x16, x16, #0xc60
  406044:	br	x17

0000000000406048 <sd_event_source_set_destroy_callback@plt>:
  406048:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  40604c:	ldr	x17, [x16, #3176]
  406050:	add	x16, x16, #0xc68
  406054:	br	x17

0000000000406058 <varlink_ref@plt>:
  406058:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  40605c:	ldr	x17, [x16, #3184]
  406060:	add	x16, x16, #0xc70
  406064:	br	x17

0000000000406068 <sd_event_source_set_floating@plt>:
  406068:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  40606c:	ldr	x17, [x16, #3192]
  406070:	add	x16, x16, #0xc78
  406074:	br	x17

0000000000406078 <sd_event_source_set_description@plt>:
  406078:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  40607c:	ldr	x17, [x16, #3200]
  406080:	add	x16, x16, #0xc80
  406084:	br	x17

0000000000406088 <varlink_reply@plt>:
  406088:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  40608c:	ldr	x17, [x16, #3208]
  406090:	add	x16, x16, #0xc88
  406094:	br	x17

0000000000406098 <varlink_get_userdata@plt>:
  406098:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  40609c:	ldr	x17, [x16, #3216]
  4060a0:	add	x16, x16, #0xc90
  4060a4:	br	x17

00000000004060a8 <varlink_unref@plt>:
  4060a8:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  4060ac:	ldr	x17, [x16, #3224]
  4060b0:	add	x16, x16, #0xc98
  4060b4:	br	x17

00000000004060b8 <write_timestamp_file_atomic@plt>:
  4060b8:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  4060bc:	ldr	x17, [x16, #3232]
  4060c0:	add	x16, x16, #0xca0
  4060c4:	br	x17

00000000004060c8 <unlink@plt>:
  4060c8:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  4060cc:	ldr	x17, [x16, #3240]
  4060d0:	add	x16, x16, #0xca8
  4060d4:	br	x17

00000000004060d8 <log_received_signal@plt>:
  4060d8:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  4060dc:	ldr	x17, [x16, #3248]
  4060e0:	add	x16, x16, #0xcb0
  4060e4:	br	x17

00000000004060e8 <sd_event_exit@plt>:
  4060e8:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  4060ec:	ldr	x17, [x16, #3256]
  4060f0:	add	x16, x16, #0xcb8
  4060f4:	br	x17

00000000004060f8 <send@plt>:
  4060f8:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  4060fc:	ldr	x17, [x16, #3264]
  406100:	add	x16, x16, #0xcc0
  406104:	br	x17

0000000000406108 <sd_id128_randomize@plt>:
  406108:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  40610c:	ldr	x17, [x16, #3272]
  406110:	add	x16, x16, #0xcc8
  406114:	br	x17

0000000000406118 <calloc@plt>:
  406118:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  40611c:	ldr	x17, [x16, #3280]
  406120:	add	x16, x16, #0xcd0
  406124:	br	x17

0000000000406128 <getpeercred@plt>:
  406128:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  40612c:	ldr	x17, [x16, #3288]
  406130:	add	x16, x16, #0xcd8
  406134:	br	x17

0000000000406138 <mac_selinux_use@plt>:
  406138:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  40613c:	ldr	x17, [x16, #3296]
  406140:	add	x16, x16, #0xce0
  406144:	br	x17

0000000000406148 <getpeersec@plt>:
  406148:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  40614c:	ldr	x17, [x16, #3304]
  406150:	add	x16, x16, #0xce8
  406154:	br	x17

0000000000406158 <shutdown@plt>:
  406158:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  40615c:	ldr	x17, [x16, #3312]
  406160:	add	x16, x16, #0xcf0
  406164:	br	x17

0000000000406168 <setsockopt@plt>:
  406168:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  40616c:	ldr	x17, [x16, #3320]
  406170:	add	x16, x16, #0xcf8
  406174:	br	x17

0000000000406178 <cmsg_close_all@plt>:
  406178:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  40617c:	ldr	x17, [x16, #3328]
  406180:	add	x16, x16, #0xd00
  406184:	br	x17

0000000000406188 <__isoc99_sscanf@plt>:
  406188:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  40618c:	ldr	x17, [x16, #3336]
  406190:	add	x16, x16, #0xd08
  406194:	br	x17

0000000000406198 <fdset_iterate@plt>:
  406198:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  40619c:	ldr	x17, [x16, #3344]
  4061a0:	add	x16, x16, #0xd10
  4061a4:	br	x17

00000000004061a8 <unlinkat@plt>:
  4061a8:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  4061ac:	ldr	x17, [x16, #3352]
  4061b0:	add	x16, x16, #0xd18
  4061b4:	br	x17

00000000004061b8 <fdset_remove@plt>:
  4061b8:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  4061bc:	ldr	x17, [x16, #3360]
  4061c0:	add	x16, x16, #0xd20
  4061c4:	br	x17

00000000004061c8 <sockaddr_un_unlink@plt>:
  4061c8:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  4061cc:	ldr	x17, [x16, #3368]
  4061d0:	add	x16, x16, #0xd28
  4061d4:	br	x17

00000000004061d8 <strnlen@plt>:
  4061d8:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  4061dc:	ldr	x17, [x16, #3376]
  4061e0:	add	x16, x16, #0xd30
  4061e4:	br	x17

00000000004061e8 <bind@plt>:
  4061e8:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  4061ec:	ldr	x17, [x16, #3384]
  4061f0:	add	x16, x16, #0xd38
  4061f4:	br	x17

00000000004061f8 <chmod@plt>:
  4061f8:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  4061fc:	ldr	x17, [x16, #3392]
  406200:	add	x16, x16, #0xd40
  406204:	br	x17

0000000000406208 <listen@plt>:
  406208:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  40620c:	ldr	x17, [x16, #3400]
  406210:	add	x16, x16, #0xd48
  406214:	br	x17

0000000000406218 <fd_nonblock@plt>:
  406218:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  40621c:	ldr	x17, [x16, #3408]
  406220:	add	x16, x16, #0xd50
  406224:	br	x17

0000000000406228 <accept4@plt>:
  406228:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  40622c:	ldr	x17, [x16, #3416]
  406230:	add	x16, x16, #0xd58
  406234:	br	x17

0000000000406238 <sendmsg@plt>:
  406238:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  40623c:	ldr	x17, [x16, #3424]
  406240:	add	x16, x16, #0xd60
  406244:	br	x17

0000000000406248 <memmove@plt>:
  406248:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  40624c:	ldr	x17, [x16, #3432]
  406250:	add	x16, x16, #0xd68
  406254:	br	x17

0000000000406258 <strstrip@plt>:
  406258:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  40625c:	ldr	x17, [x16, #3440]
  406260:	add	x16, x16, #0xd70
  406264:	br	x17

0000000000406268 <strdup@plt>:
  406268:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  40626c:	ldr	x17, [x16, #3448]
  406270:	add	x16, x16, #0xd78
  406274:	br	x17

0000000000406278 <unit_name_is_valid@plt>:
  406278:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  40627c:	ldr	x17, [x16, #3456]
  406280:	add	x16, x16, #0xd80
  406284:	br	x17

0000000000406288 <log_assert_failed_unreachable_realm@plt>:
  406288:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  40628c:	ldr	x17, [x16, #3464]
  406290:	add	x16, x16, #0xd88
  406294:	br	x17

0000000000406298 <fopen_temporary@plt>:
  406298:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  40629c:	ldr	x17, [x16, #3472]
  4062a0:	add	x16, x16, #0xd90
  4062a4:	br	x17

00000000004062a8 <fprintf@plt>:
  4062a8:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  4062ac:	ldr	x17, [x16, #3480]
  4062b0:	add	x16, x16, #0xd98
  4062b4:	br	x17

00000000004062b8 <cescape@plt>:
  4062b8:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  4062bc:	ldr	x17, [x16, #3488]
  4062c0:	add	x16, x16, #0xda0
  4062c4:	br	x17

00000000004062c8 <fflush_and_check@plt>:
  4062c8:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  4062cc:	ldr	x17, [x16, #3496]
  4062d0:	add	x16, x16, #0xda8
  4062d4:	br	x17

00000000004062d8 <rename@plt>:
  4062d8:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  4062dc:	ldr	x17, [x16, #3504]
  4062e0:	add	x16, x16, #0xdb0
  4062e4:	br	x17

00000000004062e8 <syslog_parse_priority@plt>:
  4062e8:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  4062ec:	ldr	x17, [x16, #3512]
  4062f0:	add	x16, x16, #0xdb8
  4062f4:	br	x17

00000000004062f8 <safe_fclose@plt>:
  4062f8:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  4062fc:	ldr	x17, [x16, #3520]
  406300:	add	x16, x16, #0xdc0
  406304:	br	x17

0000000000406308 <parse_env_file_sentinel@plt>:
  406308:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  40630c:	ldr	x17, [x16, #3528]
  406310:	add	x16, x16, #0xdc8
  406314:	br	x17

0000000000406318 <sd_id128_from_string@plt>:
  406318:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  40631c:	ldr	x17, [x16, #3536]
  406320:	add	x16, x16, #0xdd0
  406324:	br	x17

0000000000406328 <localtime_r@plt>:
  406328:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  40632c:	ldr	x17, [x16, #3544]
  406330:	add	x16, x16, #0xdd8
  406334:	br	x17

0000000000406338 <strftime@plt>:
  406338:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  40633c:	ldr	x17, [x16, #3552]
  406340:	add	x16, x16, #0xde0
  406344:	br	x17

0000000000406348 <strspn@plt>:
  406348:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  40634c:	ldr	x17, [x16, #3560]
  406350:	add	x16, x16, #0xde8
  406354:	br	x17

0000000000406358 <strcspn@plt>:
  406358:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  40635c:	ldr	x17, [x16, #3568]
  406360:	add	x16, x16, #0xdf0
  406364:	br	x17

0000000000406368 <strchr@plt>:
  406368:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  40636c:	ldr	x17, [x16, #3576]
  406370:	add	x16, x16, #0xdf8
  406374:	br	x17

0000000000406378 <malloc@plt>:
  406378:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  40637c:	ldr	x17, [x16, #3584]
  406380:	add	x16, x16, #0xe00
  406384:	br	x17

0000000000406388 <utmp_wall@plt>:
  406388:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  40638c:	ldr	x17, [x16, #3592]
  406390:	add	x16, x16, #0xe08
  406394:	br	x17

0000000000406398 <config_parse_bool@plt>:
  406398:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  40639c:	ldr	x17, [x16, #3600]
  4063a0:	add	x16, x16, #0xe10
  4063a4:	br	x17

00000000004063a8 <config_parse_sec@plt>:
  4063a8:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  4063ac:	ldr	x17, [x16, #3608]
  4063b0:	add	x16, x16, #0xe18
  4063b4:	br	x17

00000000004063b8 <config_parse_log_level@plt>:
  4063b8:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  4063bc:	ldr	x17, [x16, #3616]
  4063c0:	add	x16, x16, #0xe20
  4063c4:	br	x17

00000000004063c8 <config_parse_uint64@plt>:
  4063c8:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  4063cc:	ldr	x17, [x16, #3624]
  4063d0:	add	x16, x16, #0xe28
  4063d4:	br	x17

00000000004063d8 <config_parse_iec_uint64@plt>:
  4063d8:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  4063dc:	ldr	x17, [x16, #3632]
  4063e0:	add	x16, x16, #0xe30
  4063e4:	br	x17

00000000004063e8 <config_parse_unsigned@plt>:
  4063e8:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  4063ec:	ldr	x17, [x16, #3640]
  4063f0:	add	x16, x16, #0xe38
  4063f4:	br	x17

00000000004063f8 <config_parse_path@plt>:
  4063f8:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  4063fc:	ldr	x17, [x16, #3648]
  406400:	add	x16, x16, #0xe40
  406404:	br	x17

0000000000406408 <audit_type_to_string@plt>:
  406408:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  40640c:	ldr	x17, [x16, #3656]
  406410:	add	x16, x16, #0xe48
  406414:	br	x17

0000000000406418 <strcpy@plt>:
  406418:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  40641c:	ldr	x17, [x16, #3664]
  406420:	add	x16, x16, #0xe50
  406424:	br	x17

0000000000406428 <unhexchar@plt>:
  406428:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  40642c:	ldr	x17, [x16, #3672]
  406430:	add	x16, x16, #0xe58
  406434:	br	x17

0000000000406438 <clock_gettime@plt>:
  406438:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  40643c:	ldr	x17, [x16, #3680]
  406440:	add	x16, x16, #0xe60
  406444:	br	x17

0000000000406448 <open_terminal@plt>:
  406448:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  40644c:	ldr	x17, [x16, #3688]
  406450:	add	x16, x16, #0xe68
  406454:	br	x17

0000000000406458 <read_one_line_file@plt>:
  406458:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  40645c:	ldr	x17, [x16, #3696]
  406460:	add	x16, x16, #0xe70
  406464:	br	x17

0000000000406468 <memcmp@plt>:
  406468:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  40646c:	ldr	x17, [x16, #3704]
  406470:	add	x16, x16, #0xe78
  406474:	br	x17

0000000000406478 <audit_session_from_pid@plt>:
  406478:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  40647c:	ldr	x17, [x16, #3712]
  406480:	add	x16, x16, #0xe80
  406484:	br	x17

0000000000406488 <audit_loginuid_from_pid@plt>:
  406488:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  40648c:	ldr	x17, [x16, #3720]
  406490:	add	x16, x16, #0xe88
  406494:	br	x17

0000000000406498 <prioq_reshuffle@plt>:
  406498:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  40649c:	ldr	x17, [x16, #3728]
  4064a0:	add	x16, x16, #0xe90
  4064a4:	br	x17

00000000004064a8 <prioq_size@plt>:
  4064a8:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  4064ac:	ldr	x17, [x16, #3736]
  4064b0:	add	x16, x16, #0xe98
  4064b4:	br	x17

00000000004064b8 <prioq_free@plt>:
  4064b8:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  4064bc:	ldr	x17, [x16, #3744]
  4064c0:	add	x16, x16, #0xea0
  4064c4:	br	x17

00000000004064c8 <prioq_put@plt>:
  4064c8:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  4064cc:	ldr	x17, [x16, #3752]
  4064d0:	add	x16, x16, #0xea8
  4064d4:	br	x17

00000000004064d8 <prioq_peek_by_index@plt>:
  4064d8:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  4064dc:	ldr	x17, [x16, #3760]
  4064e0:	add	x16, x16, #0xeb0
  4064e4:	br	x17

00000000004064e8 <pid_is_unwaited@plt>:
  4064e8:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  4064ec:	ldr	x17, [x16, #3768]
  4064f0:	add	x16, x16, #0xeb8
  4064f4:	br	x17

00000000004064f8 <prioq_pop@plt>:
  4064f8:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  4064fc:	ldr	x17, [x16, #3776]
  406500:	add	x16, x16, #0xec0
  406504:	br	x17

0000000000406508 <prioq_remove@plt>:
  406508:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  40650c:	ldr	x17, [x16, #3784]
  406510:	add	x16, x16, #0xec8
  406514:	br	x17

0000000000406518 <getuid@plt>:
  406518:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  40651c:	ldr	x17, [x16, #3792]
  406520:	add	x16, x16, #0xed0
  406524:	br	x17

0000000000406528 <getgid@plt>:
  406528:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  40652c:	ldr	x17, [x16, #3800]
  406530:	add	x16, x16, #0xed8
  406534:	br	x17

0000000000406538 <get_process_uid@plt>:
  406538:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  40653c:	ldr	x17, [x16, #3808]
  406540:	add	x16, x16, #0xee0
  406544:	br	x17

0000000000406548 <get_process_gid@plt>:
  406548:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  40654c:	ldr	x17, [x16, #3816]
  406550:	add	x16, x16, #0xee8
  406554:	br	x17

0000000000406558 <get_process_exe@plt>:
  406558:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  40655c:	ldr	x17, [x16, #3824]
  406560:	add	x16, x16, #0xef0
  406564:	br	x17

0000000000406568 <get_process_cmdline@plt>:
  406568:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  40656c:	ldr	x17, [x16, #3832]
  406570:	add	x16, x16, #0xef8
  406574:	br	x17

0000000000406578 <get_process_capeff@plt>:
  406578:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  40657c:	ldr	x17, [x16, #3840]
  406580:	add	x16, x16, #0xf00
  406584:	br	x17

0000000000406588 <cg_pid_get_path_shifted@plt>:
  406588:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  40658c:	ldr	x17, [x16, #3848]
  406590:	add	x16, x16, #0xf08
  406594:	br	x17

0000000000406598 <empty_or_root@plt>:
  406598:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  40659c:	ldr	x17, [x16, #3856]
  4065a0:	add	x16, x16, #0xf10
  4065a4:	br	x17

00000000004065a8 <cg_path_get_session@plt>:
  4065a8:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  4065ac:	ldr	x17, [x16, #3864]
  4065b0:	add	x16, x16, #0xf18
  4065b4:	br	x17

00000000004065b8 <cg_path_get_owner_uid@plt>:
  4065b8:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  4065bc:	ldr	x17, [x16, #3872]
  4065c0:	add	x16, x16, #0xf20
  4065c4:	br	x17

00000000004065c8 <cg_path_get_unit@plt>:
  4065c8:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  4065cc:	ldr	x17, [x16, #3880]
  4065d0:	add	x16, x16, #0xf28
  4065d4:	br	x17

00000000004065d8 <cg_path_get_user_unit@plt>:
  4065d8:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  4065dc:	ldr	x17, [x16, #3888]
  4065e0:	add	x16, x16, #0xf30
  4065e4:	br	x17

00000000004065e8 <cg_path_get_slice@plt>:
  4065e8:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  4065ec:	ldr	x17, [x16, #3896]
  4065f0:	add	x16, x16, #0xf38
  4065f4:	br	x17

00000000004065f8 <cg_path_get_user_slice@plt>:
  4065f8:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  4065fc:	ldr	x17, [x16, #3904]
  406600:	add	x16, x16, #0xf40
  406604:	br	x17

0000000000406608 <readlink_malloc@plt>:
  406608:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  40660c:	ldr	x17, [x16, #3912]
  406610:	add	x16, x16, #0xf48
  406614:	br	x17

0000000000406618 <timespec_load_nsec@plt>:
  406618:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  40661c:	ldr	x17, [x16, #3920]
  406620:	add	x16, x16, #0xf50
  406624:	br	x17

0000000000406628 <fopen64@plt>:
  406628:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  40662c:	ldr	x17, [x16, #3928]
  406630:	add	x16, x16, #0xf58
  406634:	br	x17

0000000000406638 <fileno@plt>:
  406638:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  40663c:	ldr	x17, [x16, #3936]
  406640:	add	x16, x16, #0xf60
  406644:	br	x17

0000000000406648 <journal_field_valid@plt>:
  406648:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  40664c:	ldr	x17, [x16, #3944]
  406650:	add	x16, x16, #0xf68
  406654:	br	x17

0000000000406658 <memdup_suffix0@plt>:
  406658:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  40665c:	ldr	x17, [x16, #3952]
  406660:	add	x16, x16, #0xf70
  406664:	br	x17

0000000000406668 <strcmp_ptr@plt>:
  406668:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  40666c:	ldr	x17, [x16, #3960]
  406670:	add	x16, x16, #0xf78
  406674:	br	x17

0000000000406678 <read_full_stream_full@plt>:
  406678:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  40667c:	ldr	x17, [x16, #3968]
  406680:	add	x16, x16, #0xf80
  406684:	br	x17

0000000000406688 <safe_atou_full@plt>:
  406688:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  40668c:	ldr	x17, [x16, #3976]
  406690:	add	x16, x16, #0xf88
  406694:	br	x17

0000000000406698 <procfs_memory_get@plt>:
  406698:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  40669c:	ldr	x17, [x16, #3984]
  4066a0:	add	x16, x16, #0xf90
  4066a4:	br	x17

00000000004066a8 <internal_hashmap_ensure_allocated@plt>:
  4066a8:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  4066ac:	ldr	x17, [x16, #3992]
  4066b0:	add	x16, x16, #0xf98
  4066b4:	br	x17

00000000004066b8 <prioq_ensure_allocated@plt>:
  4066b8:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  4066bc:	ldr	x17, [x16, #4000]
  4066c0:	add	x16, x16, #0xfa0
  4066c4:	br	x17

00000000004066c8 <sysconf@plt>:
  4066c8:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  4066cc:	ldr	x17, [x16, #4008]
  4066d0:	add	x16, x16, #0xfa8
  4066d4:	br	x17

00000000004066d8 <memfd_get_sealed@plt>:
  4066d8:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  4066dc:	ldr	x17, [x16, #4016]
  4066e0:	add	x16, x16, #0xfb0
  4066e4:	br	x17

00000000004066e8 <fd_get_path@plt>:
  4066e8:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  4066ec:	ldr	x17, [x16, #4024]
  4066f0:	add	x16, x16, #0xfb8
  4066f4:	br	x17

00000000004066f8 <path_startswith_strv@plt>:
  4066f8:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  4066fc:	ldr	x17, [x16, #4032]
  406700:	add	x16, x16, #0xfc0
  406704:	br	x17

0000000000406708 <filename_is_valid@plt>:
  406708:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  40670c:	ldr	x17, [x16, #4040]
  406710:	add	x16, x16, #0xfc8
  406714:	br	x17

0000000000406718 <pread64@plt>:
  406718:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  40671c:	ldr	x17, [x16, #4048]
  406720:	add	x16, x16, #0xfd0
  406724:	br	x17

0000000000406728 <random_bytes@plt>:
  406728:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  40672c:	ldr	x17, [x16, #4056]
  406730:	add	x16, x16, #0xfd8
  406734:	br	x17

0000000000406738 <siphash24@plt>:
  406738:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  40673c:	ldr	x17, [x16, #4064]
  406740:	add	x16, x16, #0xfe0
  406744:	br	x17

0000000000406748 <__xstat64@plt>:
  406748:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  40674c:	ldr	x17, [x16, #4072]
  406750:	add	x16, x16, #0xfe8
  406754:	br	x17

0000000000406758 <__fxstat64@plt>:
  406758:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  40675c:	ldr	x17, [x16, #4080]
  406760:	add	x16, x16, #0xff0
  406764:	br	x17

0000000000406768 <__fxstatat64@plt>:
  406768:	adrp	x16, 44f000 <journald_gperf_lookup.wordlist+0x448>
  40676c:	ldr	x17, [x16, #4088]
  406770:	add	x16, x16, #0xff8
  406774:	br	x17

Disassembly of section .text:

0000000000406778 <_start>:
  406778:	mov	x29, #0x0                   	// #0
  40677c:	mov	x30, #0x0                   	// #0
  406780:	mov	x5, x0
  406784:	ldr	x1, [sp]
  406788:	add	x2, sp, #0x8
  40678c:	mov	x6, sp
  406790:	movz	x0, #0x0, lsl #48
  406794:	movk	x0, #0x0, lsl #32
  406798:	movk	x0, #0x40, lsl #16
  40679c:	movk	x0, #0x6940
  4067a0:	movz	x3, #0x0, lsl #48
  4067a4:	movk	x3, #0x0, lsl #32
  4067a8:	movk	x3, #0x42, lsl #16
  4067ac:	movk	x3, #0x9b90
  4067b0:	movz	x4, #0x0, lsl #48
  4067b4:	movk	x4, #0x0, lsl #32
  4067b8:	movk	x4, #0x42, lsl #16
  4067bc:	movk	x4, #0x9c10
  4067c0:	bl	405608 <__libc_start_main@plt>
  4067c4:	bl	405618 <abort@plt>

00000000004067c8 <call_weak_fn>:
  4067c8:	adrp	x0, 44f000 <journald_gperf_lookup.wordlist+0x448>
  4067cc:	ldr	x0, [x0, #1800]
  4067d0:	cbz	x0, 4067d8 <call_weak_fn+0x10>
  4067d4:	b	405628 <__gmon_start__@plt>
  4067d8:	ret

00000000004067dc <deregister_tm_clones>:
  4067dc:	stp	x29, x30, [sp, #-32]!
  4067e0:	mov	x29, sp
  4067e4:	adrp	x0, 450000 <prefix_timestamp.cached_printk_time>
  4067e8:	add	x0, x0, #0x0
  4067ec:	str	x0, [sp, #24]
  4067f0:	ldr	x0, [sp, #24]
  4067f4:	str	x0, [sp, #24]
  4067f8:	ldr	x1, [sp, #24]
  4067fc:	adrp	x0, 450000 <prefix_timestamp.cached_printk_time>
  406800:	add	x0, x0, #0x0
  406804:	cmp	x1, x0
  406808:	b.eq	406844 <deregister_tm_clones+0x68>  // b.none
  40680c:	adrp	x0, 429000 <journal_ratelimit_group_free+0x70>
  406810:	add	x0, x0, #0xc70
  406814:	ldr	x0, [x0]
  406818:	str	x0, [sp, #16]
  40681c:	ldr	x0, [sp, #16]
  406820:	str	x0, [sp, #16]
  406824:	ldr	x0, [sp, #16]
  406828:	cmp	x0, #0x0
  40682c:	b.eq	406848 <deregister_tm_clones+0x6c>  // b.none
  406830:	ldr	x1, [sp, #16]
  406834:	adrp	x0, 450000 <prefix_timestamp.cached_printk_time>
  406838:	add	x0, x0, #0x0
  40683c:	blr	x1
  406840:	b	406848 <deregister_tm_clones+0x6c>
  406844:	nop
  406848:	ldp	x29, x30, [sp], #32
  40684c:	ret

0000000000406850 <register_tm_clones>:
  406850:	stp	x29, x30, [sp, #-48]!
  406854:	mov	x29, sp
  406858:	adrp	x0, 450000 <prefix_timestamp.cached_printk_time>
  40685c:	add	x0, x0, #0x0
  406860:	str	x0, [sp, #40]
  406864:	ldr	x0, [sp, #40]
  406868:	str	x0, [sp, #40]
  40686c:	ldr	x1, [sp, #40]
  406870:	adrp	x0, 450000 <prefix_timestamp.cached_printk_time>
  406874:	add	x0, x0, #0x0
  406878:	sub	x0, x1, x0
  40687c:	asr	x0, x0, #3
  406880:	lsr	x1, x0, #63
  406884:	add	x0, x1, x0
  406888:	asr	x0, x0, #1
  40688c:	str	x0, [sp, #32]
  406890:	ldr	x0, [sp, #32]
  406894:	cmp	x0, #0x0
  406898:	b.eq	4068d8 <register_tm_clones+0x88>  // b.none
  40689c:	adrp	x0, 429000 <journal_ratelimit_group_free+0x70>
  4068a0:	add	x0, x0, #0xc78
  4068a4:	ldr	x0, [x0]
  4068a8:	str	x0, [sp, #24]
  4068ac:	ldr	x0, [sp, #24]
  4068b0:	str	x0, [sp, #24]
  4068b4:	ldr	x0, [sp, #24]
  4068b8:	cmp	x0, #0x0
  4068bc:	b.eq	4068dc <register_tm_clones+0x8c>  // b.none
  4068c0:	ldr	x2, [sp, #24]
  4068c4:	ldr	x1, [sp, #32]
  4068c8:	adrp	x0, 450000 <prefix_timestamp.cached_printk_time>
  4068cc:	add	x0, x0, #0x0
  4068d0:	blr	x2
  4068d4:	b	4068dc <register_tm_clones+0x8c>
  4068d8:	nop
  4068dc:	ldp	x29, x30, [sp], #48
  4068e0:	ret

00000000004068e4 <__do_global_dtors_aux>:
  4068e4:	stp	x29, x30, [sp, #-16]!
  4068e8:	mov	x29, sp
  4068ec:	adrp	x0, 450000 <prefix_timestamp.cached_printk_time>
  4068f0:	add	x0, x0, #0x30
  4068f4:	ldrb	w0, [x0]
  4068f8:	and	x0, x0, #0xff
  4068fc:	cmp	x0, #0x0
  406900:	b.ne	40691c <__do_global_dtors_aux+0x38>  // b.any
  406904:	bl	4067dc <deregister_tm_clones>
  406908:	adrp	x0, 450000 <prefix_timestamp.cached_printk_time>
  40690c:	add	x0, x0, #0x30
  406910:	mov	w1, #0x1                   	// #1
  406914:	strb	w1, [x0]
  406918:	b	406920 <__do_global_dtors_aux+0x3c>
  40691c:	nop
  406920:	ldp	x29, x30, [sp], #16
  406924:	ret

0000000000406928 <frame_dummy>:
  406928:	stp	x29, x30, [sp, #-16]!
  40692c:	mov	x29, sp
  406930:	bl	406850 <register_tm_clones>
  406934:	nop
  406938:	ldp	x29, x30, [sp], #16
  40693c:	ret

0000000000406940 <main>:
  406940:	stp	x29, x30, [sp, #-32]!
  406944:	str	x28, [sp, #16]
  406948:	mov	x29, sp
  40694c:	sub	sp, sp, #0x3f0
  406950:	adrp	x8, 429000 <journal_ratelimit_group_free+0x70>
  406954:	add	x8, x8, #0xc80
  406958:	add	x8, x8, #0x3
  40695c:	adrp	x9, 429000 <journal_ratelimit_group_free+0x70>
  406960:	add	x9, x9, #0xc9a
  406964:	stur	wzr, [x29, #-4]
  406968:	stur	w0, [x29, #-8]
  40696c:	stur	x1, [x29, #-16]
  406970:	ldur	w10, [x29, #-8]
  406974:	cmp	w10, #0x1
  406978:	str	x8, [sp, #112]
  40697c:	str	x9, [sp, #104]
  406980:	b.le	406a04 <main+0xc4>
  406984:	mov	w8, #0x3                   	// #3
  406988:	str	w8, [sp, #216]
  40698c:	str	wzr, [sp, #212]
  406990:	str	wzr, [sp, #208]
  406994:	ldr	w0, [sp, #208]
  406998:	bl	405638 <log_get_max_level_realm@plt>
  40699c:	ldr	w8, [sp, #216]
  4069a0:	and	w8, w8, #0x7
  4069a4:	cmp	w0, w8
  4069a8:	b.lt	4069dc <main+0x9c>  // b.tstop
  4069ac:	ldr	w8, [sp, #208]
  4069b0:	ldr	w9, [sp, #216]
  4069b4:	orr	w0, w9, w8, lsl #10
  4069b8:	ldr	w1, [sp, #212]
  4069bc:	ldr	x2, [sp, #112]
  4069c0:	mov	w3, #0x15                  	// #21
  4069c4:	ldr	x4, [sp, #104]
  4069c8:	adrp	x5, 429000 <journal_ratelimit_group_free+0x70>
  4069cc:	add	x5, x5, #0xc9f
  4069d0:	bl	405648 <log_internal_realm@plt>
  4069d4:	str	w0, [sp, #100]
  4069d8:	b	4069f0 <main+0xb0>
  4069dc:	ldr	w0, [sp, #212]
  4069e0:	bl	405658 <abs@plt>
  4069e4:	mov	w8, wzr
  4069e8:	subs	w8, w8, w0, uxtb
  4069ec:	str	w8, [sp, #100]
  4069f0:	ldr	w8, [sp, #100]
  4069f4:	str	w8, [sp, #204]
  4069f8:	mov	w8, #0x1                   	// #1
  4069fc:	stur	w8, [x29, #-4]
  406a00:	b	406e4c <main+0x50c>
  406a04:	mov	w8, #0x1                   	// #1
  406a08:	and	w0, w8, #0x1
  406a0c:	bl	405668 <log_set_prohibit_ipc@plt>
  406a10:	mov	w0, #0x7                   	// #7
  406a14:	bl	405678 <log_set_target@plt>
  406a18:	mov	w0, #0x28                  	// #40
  406a1c:	bl	405688 <log_set_facility@plt>
  406a20:	mov	w8, wzr
  406a24:	mov	w0, w8
  406a28:	bl	405698 <log_parse_environment_realm@plt>
  406a2c:	bl	4056a8 <log_open@plt>
  406a30:	mov	w8, #0x12                  	// #18
  406a34:	mov	w0, w8
  406a38:	bl	4056b8 <umask@plt>
  406a3c:	bl	4056c8 <sigbus_install@plt>
  406a40:	add	x9, sp, #0xe0
  406a44:	mov	x0, x9
  406a48:	bl	411e3c <server_init>
  406a4c:	str	w0, [sp, #220]
  406a50:	ldr	w8, [sp, #220]
  406a54:	cmp	w8, #0x0
  406a58:	cset	w8, ge  // ge = tcont
  406a5c:	tbnz	w8, #0, 406a64 <main+0x124>
  406a60:	b	406e2c <main+0x4ec>
  406a64:	add	x8, sp, #0xe0
  406a68:	mov	x0, x8
  406a6c:	mov	w9, #0x1                   	// #1
  406a70:	mov	w10, wzr
  406a74:	and	w1, w10, #0x1
  406a78:	str	x8, [sp, #88]
  406a7c:	str	w9, [sp, #84]
  406a80:	bl	40ad14 <server_vacuum>
  406a84:	ldr	x8, [sp, #88]
  406a88:	mov	x0, x8
  406a8c:	ldr	w9, [sp, #84]
  406a90:	and	w1, w9, #0x1
  406a94:	bl	40fa00 <server_flush_to_var>
  406a98:	ldr	x8, [sp, #88]
  406a9c:	mov	x0, x8
  406aa0:	bl	4080b0 <server_flush_dev_kmsg>
  406aa4:	mov	w9, #0x7                   	// #7
  406aa8:	str	w9, [sp, #200]
  406aac:	str	wzr, [sp, #196]
  406ab0:	str	wzr, [sp, #192]
  406ab4:	ldr	w9, [sp, #192]
  406ab8:	mov	w0, w9
  406abc:	bl	405638 <log_get_max_level_realm@plt>
  406ac0:	ldr	w9, [sp, #200]
  406ac4:	and	w9, w9, #0x7
  406ac8:	cmp	w0, w9
  406acc:	b.lt	406b20 <main+0x1e0>  // b.tstop
  406ad0:	ldr	w8, [sp, #192]
  406ad4:	ldr	w9, [sp, #200]
  406ad8:	orr	w0, w9, w8, lsl #10
  406adc:	ldr	w1, [sp, #196]
  406ae0:	str	w0, [sp, #80]
  406ae4:	str	w1, [sp, #76]
  406ae8:	bl	4056d8 <getpid_cached@plt>
  406aec:	ldr	w8, [sp, #80]
  406af0:	str	w0, [sp, #72]
  406af4:	mov	w0, w8
  406af8:	ldr	w1, [sp, #76]
  406afc:	ldr	x2, [sp, #112]
  406b00:	mov	w3, #0x2b                  	// #43
  406b04:	ldr	x4, [sp, #104]
  406b08:	adrp	x5, 429000 <journal_ratelimit_group_free+0x70>
  406b0c:	add	x5, x5, #0xcc5
  406b10:	ldr	w6, [sp, #72]
  406b14:	bl	405648 <log_internal_realm@plt>
  406b18:	str	w0, [sp, #68]
  406b1c:	b	406b34 <main+0x1f4>
  406b20:	ldr	w0, [sp, #196]
  406b24:	bl	405658 <abs@plt>
  406b28:	mov	w8, wzr
  406b2c:	subs	w8, w8, w0, uxtb
  406b30:	str	w8, [sp, #68]
  406b34:	ldr	w8, [sp, #68]
  406b38:	str	w8, [sp, #188]
  406b3c:	add	x9, sp, #0xe0
  406b40:	mov	x0, x9
  406b44:	mov	w8, wzr
  406b48:	mov	w1, w8
  406b4c:	adrp	x2, 429000 <journal_ratelimit_group_free+0x70>
  406b50:	add	x2, x2, #0xce8
  406b54:	adrp	x3, 429000 <journal_ratelimit_group_free+0x70>
  406b58:	add	x3, x3, #0xd14
  406b5c:	mov	x10, xzr
  406b60:	mov	x4, x10
  406b64:	str	x9, [sp, #56]
  406b68:	str	x10, [sp, #48]
  406b6c:	bl	409360 <server_driver_message>
  406b70:	ldr	x0, [sp, #56]
  406b74:	ldr	x9, [sp, #48]
  406b78:	mov	x1, x9
  406b7c:	bl	408d20 <server_space_usage_message>
  406b80:	mov	x8, #0xffffffffffffffff    	// #-1
  406b84:	str	x8, [sp, #176]
  406b88:	add	x8, sp, #0xe0
  406b8c:	ldr	x0, [x8, #32]
  406b90:	bl	4056e8 <sd_event_get_state@plt>
  406b94:	str	w0, [sp, #220]
  406b98:	ldr	w9, [sp, #220]
  406b9c:	cmp	w9, #0x0
  406ba0:	cset	w9, ge  // ge = tcont
  406ba4:	tbnz	w9, #0, 406bac <main+0x26c>
  406ba8:	b	406e2c <main+0x4ec>
  406bac:	ldr	w8, [sp, #220]
  406bb0:	cmp	w8, #0x5
  406bb4:	b.ne	406bbc <main+0x27c>  // b.any
  406bb8:	b	406d70 <main+0x430>
  406bbc:	mov	w8, wzr
  406bc0:	mov	w0, w8
  406bc4:	bl	4056f8 <now@plt>
  406bc8:	str	x0, [sp, #168]
  406bcc:	ldr	x9, [sp, #704]
  406bd0:	cmp	x9, #0x0
  406bd4:	cset	w8, ls  // ls = plast
  406bd8:	tbnz	w8, #0, 406cb4 <main+0x374>
  406bdc:	ldr	x8, [sp, #720]
  406be0:	cmp	x8, #0x0
  406be4:	cset	w9, ls  // ls = plast
  406be8:	tbnz	w9, #0, 406cb4 <main+0x374>
  406bec:	ldr	x8, [sp, #720]
  406bf0:	ldr	x9, [sp, #704]
  406bf4:	add	x8, x8, x9
  406bf8:	ldr	x9, [sp, #168]
  406bfc:	cmp	x8, x9
  406c00:	b.cs	406c9c <main+0x35c>  // b.hs, b.nlast
  406c04:	mov	w8, #0x6                   	// #6
  406c08:	str	w8, [sp, #164]
  406c0c:	str	wzr, [sp, #160]
  406c10:	str	wzr, [sp, #156]
  406c14:	ldr	w0, [sp, #156]
  406c18:	bl	405638 <log_get_max_level_realm@plt>
  406c1c:	ldr	w8, [sp, #164]
  406c20:	and	w8, w8, #0x7
  406c24:	cmp	w0, w8
  406c28:	b.lt	406c5c <main+0x31c>  // b.tstop
  406c2c:	ldr	w8, [sp, #156]
  406c30:	ldr	w9, [sp, #164]
  406c34:	orr	w0, w9, w8, lsl #10
  406c38:	ldr	w1, [sp, #160]
  406c3c:	ldr	x2, [sp, #112]
  406c40:	mov	w3, #0x45                  	// #69
  406c44:	ldr	x4, [sp, #104]
  406c48:	adrp	x5, 429000 <journal_ratelimit_group_free+0x70>
  406c4c:	add	x5, x5, #0xd2c
  406c50:	bl	405648 <log_internal_realm@plt>
  406c54:	str	w0, [sp, #44]
  406c58:	b	406c70 <main+0x330>
  406c5c:	ldr	w0, [sp, #160]
  406c60:	bl	405658 <abs@plt>
  406c64:	mov	w8, wzr
  406c68:	subs	w8, w8, w0, uxtb
  406c6c:	str	w8, [sp, #44]
  406c70:	ldr	w8, [sp, #44]
  406c74:	str	w8, [sp, #152]
  406c78:	add	x9, sp, #0xe0
  406c7c:	mov	x0, x9
  406c80:	str	x9, [sp, #32]
  406c84:	bl	409818 <server_rotate>
  406c88:	ldr	x0, [sp, #32]
  406c8c:	mov	w8, wzr
  406c90:	and	w1, w8, #0x1
  406c94:	bl	40ad14 <server_vacuum>
  406c98:	b	406b80 <main+0x240>
  406c9c:	ldr	x8, [sp, #720]
  406ca0:	ldr	x9, [sp, #704]
  406ca4:	add	x8, x8, x9
  406ca8:	ldr	x9, [sp, #168]
  406cac:	subs	x8, x8, x9
  406cb0:	str	x8, [sp, #176]
  406cb4:	add	x8, sp, #0xe0
  406cb8:	ldr	x0, [x8, #32]
  406cbc:	ldr	x1, [sp, #176]
  406cc0:	bl	405708 <sd_event_run@plt>
  406cc4:	str	w0, [sp, #220]
  406cc8:	ldr	w9, [sp, #220]
  406ccc:	cmp	w9, #0x0
  406cd0:	cset	w9, ge  // ge = tcont
  406cd4:	tbnz	w9, #0, 406d54 <main+0x414>
  406cd8:	mov	w8, #0x3                   	// #3
  406cdc:	str	w8, [sp, #148]
  406ce0:	ldr	w8, [sp, #220]
  406ce4:	str	w8, [sp, #144]
  406ce8:	str	wzr, [sp, #140]
  406cec:	ldr	w0, [sp, #140]
  406cf0:	bl	405638 <log_get_max_level_realm@plt>
  406cf4:	ldr	w8, [sp, #148]
  406cf8:	and	w8, w8, #0x7
  406cfc:	cmp	w0, w8
  406d00:	b.lt	406d34 <main+0x3f4>  // b.tstop
  406d04:	ldr	w8, [sp, #140]
  406d08:	ldr	w9, [sp, #148]
  406d0c:	orr	w0, w9, w8, lsl #10
  406d10:	ldr	w1, [sp, #144]
  406d14:	ldr	x2, [sp, #112]
  406d18:	mov	w3, #0x5e                  	// #94
  406d1c:	ldr	x4, [sp, #104]
  406d20:	adrp	x5, 429000 <journal_ratelimit_group_free+0x70>
  406d24:	add	x5, x5, #0xd44
  406d28:	bl	405648 <log_internal_realm@plt>
  406d2c:	str	w0, [sp, #28]
  406d30:	b	406d48 <main+0x408>
  406d34:	ldr	w0, [sp, #144]
  406d38:	bl	405658 <abs@plt>
  406d3c:	mov	w8, wzr
  406d40:	subs	w8, w8, w0, uxtb
  406d44:	str	w8, [sp, #28]
  406d48:	ldr	w8, [sp, #28]
  406d4c:	str	w8, [sp, #136]
  406d50:	b	406e2c <main+0x4ec>
  406d54:	add	x8, sp, #0xe0
  406d58:	mov	x0, x8
  406d5c:	str	x8, [sp, #16]
  406d60:	bl	41481c <server_maybe_append_tags>
  406d64:	ldr	x0, [sp, #16]
  406d68:	bl	41fe84 <server_maybe_warn_forward_syslog_missed>
  406d6c:	b	406b80 <main+0x240>
  406d70:	mov	w8, #0x7                   	// #7
  406d74:	str	w8, [sp, #132]
  406d78:	str	wzr, [sp, #128]
  406d7c:	str	wzr, [sp, #124]
  406d80:	ldr	w0, [sp, #124]
  406d84:	bl	405638 <log_get_max_level_realm@plt>
  406d88:	ldr	w8, [sp, #132]
  406d8c:	and	w8, w8, #0x7
  406d90:	cmp	w0, w8
  406d94:	b.lt	406de8 <main+0x4a8>  // b.tstop
  406d98:	ldr	w8, [sp, #124]
  406d9c:	ldr	w9, [sp, #132]
  406da0:	orr	w0, w9, w8, lsl #10
  406da4:	ldr	w1, [sp, #128]
  406da8:	str	w0, [sp, #12]
  406dac:	str	w1, [sp, #8]
  406db0:	bl	4056d8 <getpid_cached@plt>
  406db4:	ldr	w8, [sp, #12]
  406db8:	str	w0, [sp, #4]
  406dbc:	mov	w0, w8
  406dc0:	ldr	w1, [sp, #8]
  406dc4:	ldr	x2, [sp, #112]
  406dc8:	mov	w3, #0x66                  	// #102
  406dcc:	ldr	x4, [sp, #104]
  406dd0:	adrp	x5, 429000 <journal_ratelimit_group_free+0x70>
  406dd4:	add	x5, x5, #0xd61
  406dd8:	ldr	w6, [sp, #4]
  406ddc:	bl	405648 <log_internal_realm@plt>
  406de0:	str	w0, [sp]
  406de4:	b	406dfc <main+0x4bc>
  406de8:	ldr	w0, [sp, #128]
  406dec:	bl	405658 <abs@plt>
  406df0:	mov	w8, wzr
  406df4:	subs	w8, w8, w0, uxtb
  406df8:	str	w8, [sp]
  406dfc:	ldr	w8, [sp]
  406e00:	str	w8, [sp, #120]
  406e04:	add	x0, sp, #0xe0
  406e08:	mov	w8, wzr
  406e0c:	mov	w1, w8
  406e10:	adrp	x2, 429000 <journal_ratelimit_group_free+0x70>
  406e14:	add	x2, x2, #0xd84
  406e18:	adrp	x3, 429000 <journal_ratelimit_group_free+0x70>
  406e1c:	add	x3, x3, #0xdb0
  406e20:	mov	x9, xzr
  406e24:	mov	x4, x9
  406e28:	bl	409360 <server_driver_message>
  406e2c:	add	x0, sp, #0xe0
  406e30:	bl	41482c <server_done>
  406e34:	ldr	w8, [sp, #220]
  406e38:	mov	w9, wzr
  406e3c:	mov	w10, #0x1                   	// #1
  406e40:	cmp	w8, #0x0
  406e44:	csel	w8, w10, w9, lt  // lt = tstop
  406e48:	stur	w8, [x29, #-4]
  406e4c:	ldur	w0, [x29, #-4]
  406e50:	add	sp, sp, #0x3f0
  406e54:	ldr	x28, [sp, #16]
  406e58:	ldp	x29, x30, [sp], #32
  406e5c:	ret

0000000000406e60 <server_forward_kmsg>:
  406e60:	sub	sp, sp, #0x1b0
  406e64:	stp	x29, x30, [sp, #400]
  406e68:	str	x28, [sp, #416]
  406e6c:	add	x29, sp, #0x190
  406e70:	mov	x8, xzr
  406e74:	adrp	x9, 429000 <journal_ratelimit_group_free+0x70>
  406e78:	add	x9, x9, #0xdca
  406e7c:	add	x9, x9, #0x3
  406e80:	adrp	x10, 429000 <journal_ratelimit_group_free+0x70>
  406e84:	add	x10, x10, #0xde9
  406e88:	stur	x0, [x29, #-8]
  406e8c:	stur	w1, [x29, #-12]
  406e90:	stur	x2, [x29, #-24]
  406e94:	stur	x3, [x29, #-32]
  406e98:	stur	x4, [x29, #-40]
  406e9c:	stur	x8, [x29, #-48]
  406ea0:	stur	wzr, [x29, #-164]
  406ea4:	str	x9, [sp, #96]
  406ea8:	str	x10, [sp, #88]
  406eac:	ldur	x8, [x29, #-8]
  406eb0:	cmp	x8, #0x0
  406eb4:	cset	w9, ne  // ne = any
  406eb8:	mov	w10, #0x1                   	// #1
  406ebc:	eor	w9, w9, #0x1
  406ec0:	eor	w9, w9, w10
  406ec4:	eor	w9, w9, w10
  406ec8:	and	w9, w9, #0x1
  406ecc:	mov	w0, w9
  406ed0:	sxtw	x8, w0
  406ed4:	cbz	x8, 406ef8 <server_forward_kmsg+0x98>
  406ed8:	mov	w8, wzr
  406edc:	mov	w0, w8
  406ee0:	adrp	x1, 429000 <journal_ratelimit_group_free+0x70>
  406ee4:	add	x1, x1, #0xdc8
  406ee8:	ldr	x2, [sp, #96]
  406eec:	mov	w3, #0x27                  	// #39
  406ef0:	ldr	x4, [sp, #88]
  406ef4:	bl	405718 <log_assert_failed_realm@plt>
  406ef8:	ldur	w8, [x29, #-12]
  406efc:	cmp	w8, #0x0
  406f00:	cset	w8, ge  // ge = tcont
  406f04:	mov	w9, #0x1                   	// #1
  406f08:	eor	w8, w8, #0x1
  406f0c:	eor	w8, w8, w9
  406f10:	eor	w8, w8, w9
  406f14:	and	w8, w8, #0x1
  406f18:	mov	w0, w8
  406f1c:	sxtw	x10, w0
  406f20:	cbz	x10, 406f44 <server_forward_kmsg+0xe4>
  406f24:	mov	w8, wzr
  406f28:	mov	w0, w8
  406f2c:	adrp	x1, 429000 <journal_ratelimit_group_free+0x70>
  406f30:	add	x1, x1, #0xe43
  406f34:	ldr	x2, [sp, #96]
  406f38:	mov	w3, #0x28                  	// #40
  406f3c:	ldr	x4, [sp, #88]
  406f40:	bl	405718 <log_assert_failed_realm@plt>
  406f44:	ldur	w8, [x29, #-12]
  406f48:	cmp	w8, #0x3e7
  406f4c:	cset	w8, le
  406f50:	mov	w9, #0x1                   	// #1
  406f54:	eor	w8, w8, #0x1
  406f58:	eor	w8, w8, w9
  406f5c:	eor	w8, w8, w9
  406f60:	and	w8, w8, #0x1
  406f64:	mov	w0, w8
  406f68:	sxtw	x10, w0
  406f6c:	cbz	x10, 406f90 <server_forward_kmsg+0x130>
  406f70:	mov	w8, wzr
  406f74:	mov	w0, w8
  406f78:	adrp	x1, 429000 <journal_ratelimit_group_free+0x70>
  406f7c:	add	x1, x1, #0xe51
  406f80:	ldr	x2, [sp, #96]
  406f84:	mov	w3, #0x29                  	// #41
  406f88:	ldr	x4, [sp, #88]
  406f8c:	bl	405718 <log_assert_failed_realm@plt>
  406f90:	ldur	x8, [x29, #-32]
  406f94:	cmp	x8, #0x0
  406f98:	cset	w9, ne  // ne = any
  406f9c:	mov	w10, #0x1                   	// #1
  406fa0:	eor	w9, w9, #0x1
  406fa4:	eor	w9, w9, w10
  406fa8:	eor	w9, w9, w10
  406fac:	and	w9, w9, #0x1
  406fb0:	mov	w0, w9
  406fb4:	sxtw	x8, w0
  406fb8:	cbz	x8, 406fdc <server_forward_kmsg+0x17c>
  406fbc:	mov	w8, wzr
  406fc0:	mov	w0, w8
  406fc4:	adrp	x1, 429000 <journal_ratelimit_group_free+0x70>
  406fc8:	add	x1, x1, #0xe61
  406fcc:	ldr	x2, [sp, #96]
  406fd0:	mov	w3, #0x2a                  	// #42
  406fd4:	ldr	x4, [sp, #88]
  406fd8:	bl	405718 <log_assert_failed_realm@plt>
  406fdc:	ldur	w8, [x29, #-12]
  406fe0:	and	w8, w8, #0x7
  406fe4:	ldur	x9, [x29, #-8]
  406fe8:	ldr	w10, [x9, #544]
  406fec:	cmp	w8, w10
  406ff0:	cset	w8, gt
  406ff4:	mov	w10, #0x1                   	// #1
  406ff8:	eor	w8, w8, #0x1
  406ffc:	eor	w8, w8, w10
  407000:	and	w8, w8, #0x1
  407004:	mov	w0, w8
  407008:	sxtw	x9, w0
  40700c:	cbz	x9, 40701c <server_forward_kmsg+0x1bc>
  407010:	mov	w8, #0x1                   	// #1
  407014:	stur	w8, [x29, #-168]
  407018:	b	4073ac <server_forward_kmsg+0x54c>
  40701c:	ldur	x8, [x29, #-8]
  407020:	ldr	w9, [x8, #12]
  407024:	cmp	w9, #0x0
  407028:	cset	w9, lt  // lt = tstop
  40702c:	mov	w10, #0x1                   	// #1
  407030:	eor	w9, w9, #0x1
  407034:	eor	w9, w9, w10
  407038:	and	w9, w9, #0x1
  40703c:	mov	w0, w9
  407040:	sxtw	x8, w0
  407044:	cbz	x8, 407054 <server_forward_kmsg+0x1f4>
  407048:	mov	w8, #0x1                   	// #1
  40704c:	stur	w8, [x29, #-168]
  407050:	b	4073ac <server_forward_kmsg+0x54c>
  407054:	ldur	w0, [x29, #-12]
  407058:	bl	41e0a0 <syslog_fixup_facility>
  40705c:	stur	w0, [x29, #-12]
  407060:	ldur	w3, [x29, #-12]
  407064:	sub	x0, x29, #0x8f
  407068:	mov	x1, #0xf                   	// #15
  40706c:	adrp	x2, 429000 <journal_ratelimit_group_free+0x70>
  407070:	add	x2, x2, #0xe69
  407074:	bl	405728 <snprintf@plt>
  407078:	mov	w1, w0
  40707c:	sxtw	x8, w1
  407080:	cmp	x8, #0xf
  407084:	cset	w9, cc  // cc = lo, ul, last
  407088:	mov	w10, #0x1                   	// #1
  40708c:	eor	w9, w9, #0x1
  407090:	eor	w9, w9, w10
  407094:	eor	w9, w9, w10
  407098:	and	w9, w9, #0x1
  40709c:	mov	w1, w9
  4070a0:	sxtw	x8, w1
  4070a4:	cbz	x8, 4070c8 <server_forward_kmsg+0x268>
  4070a8:	mov	w8, wzr
  4070ac:	mov	w0, w8
  4070b0:	adrp	x1, 429000 <journal_ratelimit_group_free+0x70>
  4070b4:	add	x1, x1, #0xe6e
  4070b8:	ldr	x2, [sp, #96]
  4070bc:	mov	w3, #0x37                  	// #55
  4070c0:	ldr	x4, [sp, #88]
  4070c4:	bl	405718 <log_assert_failed_realm@plt>
  4070c8:	ldursw	x8, [x29, #-164]
  4070cc:	mov	w9, w8
  4070d0:	add	w9, w9, #0x1
  4070d4:	stur	w9, [x29, #-164]
  4070d8:	sub	x10, x29, #0x80
  4070dc:	sub	x11, x29, #0x8f
  4070e0:	stur	x11, [x29, #-184]
  4070e4:	mov	x0, x11
  4070e8:	str	x8, [sp, #80]
  4070ec:	str	x10, [sp, #72]
  4070f0:	bl	405738 <strlen@plt>
  4070f4:	stur	x0, [x29, #-176]
  4070f8:	ldur	q0, [x29, #-184]
  4070fc:	ldr	x8, [sp, #72]
  407100:	ldr	x10, [sp, #80]
  407104:	str	q0, [x8, x10, lsl #4]
  407108:	ldur	x11, [x29, #-40]
  40710c:	cbz	x11, 407228 <server_forward_kmsg+0x3c8>
  407110:	ldur	x8, [x29, #-24]
  407114:	cbnz	x8, 407130 <server_forward_kmsg+0x2d0>
  407118:	ldur	x8, [x29, #-40]
  40711c:	ldr	w0, [x8]
  407120:	sub	x1, x29, #0x30
  407124:	bl	405748 <get_process_comm@plt>
  407128:	ldur	x8, [x29, #-48]
  40712c:	stur	x8, [x29, #-24]
  407130:	ldur	x8, [x29, #-40]
  407134:	ldr	w3, [x8]
  407138:	sub	x0, x29, #0xa0
  40713c:	mov	x1, #0x11                  	// #17
  407140:	adrp	x2, 429000 <journal_ratelimit_group_free+0x70>
  407144:	add	x2, x2, #0xe9d
  407148:	bl	405728 <snprintf@plt>
  40714c:	mov	w1, w0
  407150:	sxtw	x8, w1
  407154:	cmp	x8, #0x11
  407158:	cset	w9, cc  // cc = lo, ul, last
  40715c:	mov	w10, #0x1                   	// #1
  407160:	eor	w9, w9, #0x1
  407164:	eor	w9, w9, w10
  407168:	eor	w9, w9, w10
  40716c:	and	w9, w9, #0x1
  407170:	mov	w1, w9
  407174:	sxtw	x8, w1
  407178:	cbz	x8, 40719c <server_forward_kmsg+0x33c>
  40717c:	mov	w8, wzr
  407180:	mov	w0, w8
  407184:	adrp	x1, 429000 <journal_ratelimit_group_free+0x70>
  407188:	add	x1, x1, #0xea4
  40718c:	ldr	x2, [sp, #96]
  407190:	mov	w3, #0x41                  	// #65
  407194:	ldr	x4, [sp, #88]
  407198:	bl	405718 <log_assert_failed_realm@plt>
  40719c:	ldur	x8, [x29, #-24]
  4071a0:	cbz	x8, 4071e4 <server_forward_kmsg+0x384>
  4071a4:	ldursw	x8, [x29, #-164]
  4071a8:	mov	w9, w8
  4071ac:	add	w9, w9, #0x1
  4071b0:	stur	w9, [x29, #-164]
  4071b4:	sub	x10, x29, #0x80
  4071b8:	ldur	x11, [x29, #-24]
  4071bc:	str	x11, [sp, #200]
  4071c0:	ldur	x0, [x29, #-24]
  4071c4:	str	x8, [sp, #64]
  4071c8:	str	x10, [sp, #56]
  4071cc:	bl	405738 <strlen@plt>
  4071d0:	str	x0, [sp, #208]
  4071d4:	ldur	q0, [sp, #200]
  4071d8:	ldr	x8, [sp, #56]
  4071dc:	ldr	x10, [sp, #64]
  4071e0:	str	q0, [x8, x10, lsl #4]
  4071e4:	ldursw	x8, [x29, #-164]
  4071e8:	mov	w9, w8
  4071ec:	add	w9, w9, #0x1
  4071f0:	stur	w9, [x29, #-164]
  4071f4:	sub	x10, x29, #0x80
  4071f8:	sub	x11, x29, #0xa0
  4071fc:	str	x11, [sp, #184]
  407200:	mov	x0, x11
  407204:	str	x8, [sp, #48]
  407208:	str	x10, [sp, #40]
  40720c:	bl	405738 <strlen@plt>
  407210:	str	x0, [sp, #192]
  407214:	ldur	q0, [sp, #184]
  407218:	ldr	x8, [sp, #40]
  40721c:	ldr	x10, [sp, #48]
  407220:	str	q0, [x8, x10, lsl #4]
  407224:	b	40729c <server_forward_kmsg+0x43c>
  407228:	ldur	x8, [x29, #-24]
  40722c:	cbz	x8, 40729c <server_forward_kmsg+0x43c>
  407230:	ldursw	x8, [x29, #-164]
  407234:	mov	w9, w8
  407238:	add	w9, w9, #0x1
  40723c:	stur	w9, [x29, #-164]
  407240:	sub	x10, x29, #0x80
  407244:	ldur	x11, [x29, #-24]
  407248:	str	x11, [sp, #168]
  40724c:	ldur	x0, [x29, #-24]
  407250:	str	x8, [sp, #32]
  407254:	str	x10, [sp, #24]
  407258:	bl	405738 <strlen@plt>
  40725c:	str	x0, [sp, #176]
  407260:	ldur	q0, [sp, #168]
  407264:	ldr	x8, [sp, #24]
  407268:	ldr	x10, [sp, #32]
  40726c:	str	q0, [x8, x10, lsl #4]
  407270:	ldursw	x11, [x29, #-164]
  407274:	mov	w9, w11
  407278:	add	w9, w9, #0x1
  40727c:	stur	w9, [x29, #-164]
  407280:	adrp	x12, 429000 <journal_ratelimit_group_free+0x70>
  407284:	add	x12, x12, #0xece
  407288:	str	x12, [sp, #152]
  40728c:	mov	x12, #0x2                   	// #2
  407290:	str	x12, [sp, #160]
  407294:	ldur	q0, [sp, #152]
  407298:	str	q0, [x8, x11, lsl #4]
  40729c:	ldursw	x8, [x29, #-164]
  4072a0:	mov	w9, w8
  4072a4:	add	w9, w9, #0x1
  4072a8:	stur	w9, [x29, #-164]
  4072ac:	sub	x10, x29, #0x80
  4072b0:	ldur	x11, [x29, #-32]
  4072b4:	str	x11, [sp, #136]
  4072b8:	ldur	x0, [x29, #-32]
  4072bc:	str	x8, [sp, #16]
  4072c0:	str	x10, [sp, #8]
  4072c4:	bl	405738 <strlen@plt>
  4072c8:	str	x0, [sp, #144]
  4072cc:	ldur	q0, [sp, #136]
  4072d0:	ldr	x8, [sp, #8]
  4072d4:	ldr	x10, [sp, #16]
  4072d8:	str	q0, [x8, x10, lsl #4]
  4072dc:	ldursw	x11, [x29, #-164]
  4072e0:	mov	w9, w11
  4072e4:	add	w9, w9, #0x1
  4072e8:	stur	w9, [x29, #-164]
  4072ec:	adrp	x12, 429000 <journal_ratelimit_group_free+0x70>
  4072f0:	add	x12, x12, #0xed1
  4072f4:	str	x12, [sp, #120]
  4072f8:	mov	x12, #0x1                   	// #1
  4072fc:	str	x12, [sp, #128]
  407300:	ldur	q0, [sp, #120]
  407304:	str	q0, [x8, x11, lsl #4]
  407308:	ldur	x11, [x29, #-8]
  40730c:	ldr	w0, [x11, #12]
  407310:	ldur	w2, [x29, #-164]
  407314:	mov	x1, x8
  407318:	bl	405758 <writev@plt>
  40731c:	cmp	x0, #0x0
  407320:	cset	w9, ge  // ge = tcont
  407324:	tbnz	w9, #0, 4073a8 <server_forward_kmsg+0x548>
  407328:	mov	w8, #0x7                   	// #7
  40732c:	str	w8, [sp, #116]
  407330:	bl	405768 <__errno_location@plt>
  407334:	ldr	w8, [x0]
  407338:	str	w8, [sp, #112]
  40733c:	str	wzr, [sp, #108]
  407340:	ldr	w0, [sp, #108]
  407344:	bl	405638 <log_get_max_level_realm@plt>
  407348:	ldr	w8, [sp, #116]
  40734c:	and	w8, w8, #0x7
  407350:	cmp	w0, w8
  407354:	b.lt	40738c <server_forward_kmsg+0x52c>  // b.tstop
  407358:	ldr	w8, [sp, #108]
  40735c:	ldr	w9, [sp, #116]
  407360:	orr	w0, w9, w8, lsl #10
  407364:	ldr	w1, [sp, #112]
  407368:	ldr	x2, [sp, #96]
  40736c:	mov	w3, #0x51                  	// #81
  407370:	adrp	x4, 429000 <journal_ratelimit_group_free+0x70>
  407374:	add	x4, x4, #0xed3
  407378:	adrp	x5, 429000 <journal_ratelimit_group_free+0x70>
  40737c:	add	x5, x5, #0xee7
  407380:	bl	405648 <log_internal_realm@plt>
  407384:	str	w0, [sp, #4]
  407388:	b	4073a0 <server_forward_kmsg+0x540>
  40738c:	ldr	w0, [sp, #112]
  407390:	bl	405658 <abs@plt>
  407394:	mov	w8, wzr
  407398:	subs	w8, w8, w0, uxtb
  40739c:	str	w8, [sp, #4]
  4073a0:	ldr	w8, [sp, #4]
  4073a4:	str	w8, [sp, #104]
  4073a8:	stur	wzr, [x29, #-168]
  4073ac:	sub	x0, x29, #0x30
  4073b0:	bl	4073c4 <freep>
  4073b4:	ldr	x28, [sp, #416]
  4073b8:	ldp	x29, x30, [sp, #400]
  4073bc:	add	sp, sp, #0x1b0
  4073c0:	ret

00000000004073c4 <freep>:
  4073c4:	sub	sp, sp, #0x20
  4073c8:	stp	x29, x30, [sp, #16]
  4073cc:	add	x29, sp, #0x10
  4073d0:	str	x0, [sp, #8]
  4073d4:	ldr	x8, [sp, #8]
  4073d8:	ldr	x0, [x8]
  4073dc:	bl	405778 <free@plt>
  4073e0:	ldp	x29, x30, [sp, #16]
  4073e4:	add	sp, sp, #0x20
  4073e8:	ret

00000000004073ec <dev_kmsg_record>:
  4073ec:	stp	x29, x30, [sp, #-32]!
  4073f0:	str	x28, [sp, #16]
  4073f4:	mov	x29, sp
  4073f8:	sub	sp, sp, #0xa40
  4073fc:	mov	x8, xzr
  407400:	adrp	x9, 429000 <journal_ratelimit_group_free+0x70>
  407404:	add	x9, x9, #0xdca
  407408:	add	x9, x9, #0x3
  40740c:	stur	x0, [x29, #-8]
  407410:	stur	x1, [x29, #-16]
  407414:	stur	x2, [x29, #-24]
  407418:	stur	x8, [x29, #-32]
  40741c:	stur	x8, [x29, #-40]
  407420:	stur	x8, [x29, #-48]
  407424:	stur	x8, [x29, #-56]
  407428:	stur	x8, [x29, #-64]
  40742c:	stur	x8, [x29, #-72]
  407430:	stur	x8, [x29, #-80]
  407434:	stur	x8, [x29, #-88]
  407438:	str	x8, [sp, #496]
  40743c:	str	xzr, [sp, #480]
  407440:	str	xzr, [sp, #472]
  407444:	str	x9, [sp, #176]
  407448:	ldur	x8, [x29, #-8]
  40744c:	cmp	x8, #0x0
  407450:	cset	w9, ne  // ne = any
  407454:	mov	w10, #0x1                   	// #1
  407458:	eor	w9, w9, #0x1
  40745c:	eor	w9, w9, w10
  407460:	eor	w9, w9, w10
  407464:	and	w9, w9, #0x1
  407468:	mov	w0, w9
  40746c:	sxtw	x8, w0
  407470:	cbz	x8, 407498 <dev_kmsg_record+0xac>
  407474:	mov	w8, wzr
  407478:	mov	w0, w8
  40747c:	adrp	x1, 429000 <journal_ratelimit_group_free+0x70>
  407480:	add	x1, x1, #0xdc8
  407484:	ldr	x2, [sp, #176]
  407488:	mov	w3, #0x6d                  	// #109
  40748c:	adrp	x4, 429000 <journal_ratelimit_group_free+0x70>
  407490:	add	x4, x4, #0xf14
  407494:	bl	405718 <log_assert_failed_realm@plt>
  407498:	ldur	x8, [x29, #-16]
  40749c:	cmp	x8, #0x0
  4074a0:	cset	w9, ne  // ne = any
  4074a4:	mov	w10, #0x1                   	// #1
  4074a8:	eor	w9, w9, #0x1
  4074ac:	eor	w9, w9, w10
  4074b0:	eor	w9, w9, w10
  4074b4:	and	w9, w9, #0x1
  4074b8:	mov	w0, w9
  4074bc:	sxtw	x8, w0
  4074c0:	cbz	x8, 4074e8 <dev_kmsg_record+0xfc>
  4074c4:	mov	w8, wzr
  4074c8:	mov	w0, w8
  4074cc:	adrp	x1, 429000 <journal_ratelimit_group_free+0x70>
  4074d0:	add	x1, x1, #0xf43
  4074d4:	ldr	x2, [sp, #176]
  4074d8:	mov	w3, #0x6e                  	// #110
  4074dc:	adrp	x4, 429000 <journal_ratelimit_group_free+0x70>
  4074e0:	add	x4, x4, #0xf14
  4074e4:	bl	405718 <log_assert_failed_realm@plt>
  4074e8:	ldur	x8, [x29, #-24]
  4074ec:	cmp	x8, #0x0
  4074f0:	cset	w9, hi  // hi = pmore
  4074f4:	tbnz	w9, #0, 407504 <dev_kmsg_record+0x118>
  4074f8:	mov	w8, #0x1                   	// #1
  4074fc:	str	w8, [sp, #412]
  407500:	b	407ee4 <dev_kmsg_record+0xaf8>
  407504:	ldur	x0, [x29, #-16]
  407508:	ldur	x2, [x29, #-24]
  40750c:	mov	w1, #0x2c                  	// #44
  407510:	bl	405788 <memchr@plt>
  407514:	str	x0, [sp, #448]
  407518:	ldr	x8, [sp, #448]
  40751c:	cbnz	x8, 40752c <dev_kmsg_record+0x140>
  407520:	mov	w8, #0x1                   	// #1
  407524:	str	w8, [sp, #412]
  407528:	b	407ee4 <dev_kmsg_record+0xaf8>
  40752c:	ldr	x8, [sp, #448]
  407530:	mov	w9, #0x0                   	// #0
  407534:	strb	w9, [x8]
  407538:	ldur	x0, [x29, #-16]
  40753c:	add	x1, sp, #0x1cc
  407540:	bl	405798 <safe_atoi@plt>
  407544:	str	w0, [sp, #456]
  407548:	ldr	w9, [sp, #456]
  40754c:	cmp	w9, #0x0
  407550:	cset	w9, lt  // lt = tstop
  407554:	tbnz	w9, #0, 407574 <dev_kmsg_record+0x188>
  407558:	ldr	w8, [sp, #460]
  40755c:	cmp	w8, #0x0
  407560:	cset	w8, lt  // lt = tstop
  407564:	tbnz	w8, #0, 407574 <dev_kmsg_record+0x188>
  407568:	ldr	w8, [sp, #460]
  40756c:	cmp	w8, #0x3e7
  407570:	b.le	407580 <dev_kmsg_record+0x194>
  407574:	mov	w8, #0x1                   	// #1
  407578:	str	w8, [sp, #412]
  40757c:	b	407ee4 <dev_kmsg_record+0xaf8>
  407580:	ldur	x8, [x29, #-8]
  407584:	ldrb	w9, [x8, #458]
  407588:	tbnz	w9, #0, 407590 <dev_kmsg_record+0x1a4>
  40758c:	b	4075ac <dev_kmsg_record+0x1c0>
  407590:	ldr	w8, [sp, #460]
  407594:	and	w8, w8, #0x3f8
  407598:	asr	w8, w8, #3
  40759c:	cbz	w8, 4075ac <dev_kmsg_record+0x1c0>
  4075a0:	mov	w8, #0x1                   	// #1
  4075a4:	str	w8, [sp, #412]
  4075a8:	b	407ee4 <dev_kmsg_record+0xaf8>
  4075ac:	ldr	x8, [sp, #448]
  4075b0:	ldur	x9, [x29, #-16]
  4075b4:	subs	x8, x8, x9
  4075b8:	add	x8, x8, #0x1
  4075bc:	ldur	x9, [x29, #-24]
  4075c0:	subs	x8, x9, x8
  4075c4:	stur	x8, [x29, #-24]
  4075c8:	ldr	x8, [sp, #448]
  4075cc:	add	x8, x8, #0x1
  4075d0:	stur	x8, [x29, #-16]
  4075d4:	ldur	x0, [x29, #-16]
  4075d8:	ldur	x2, [x29, #-24]
  4075dc:	mov	w1, #0x2c                  	// #44
  4075e0:	bl	405788 <memchr@plt>
  4075e4:	str	x0, [sp, #448]
  4075e8:	ldr	x8, [sp, #448]
  4075ec:	cbnz	x8, 4075fc <dev_kmsg_record+0x210>
  4075f0:	mov	w8, #0x1                   	// #1
  4075f4:	str	w8, [sp, #412]
  4075f8:	b	407ee4 <dev_kmsg_record+0xaf8>
  4075fc:	ldr	x8, [sp, #448]
  407600:	mov	w9, #0x0                   	// #0
  407604:	strb	w9, [x8]
  407608:	ldur	x0, [x29, #-16]
  40760c:	add	x1, sp, #0x1a8
  407610:	bl	407f34 <safe_atou64>
  407614:	str	w0, [sp, #456]
  407618:	ldr	w9, [sp, #456]
  40761c:	cmp	w9, #0x0
  407620:	cset	w9, ge  // ge = tcont
  407624:	tbnz	w9, #0, 407634 <dev_kmsg_record+0x248>
  407628:	mov	w8, #0x1                   	// #1
  40762c:	str	w8, [sp, #412]
  407630:	b	407ee4 <dev_kmsg_record+0xaf8>
  407634:	ldur	x8, [x29, #-8]
  407638:	ldr	x8, [x8, #584]
  40763c:	cbz	x8, 4076cc <dev_kmsg_record+0x2e0>
  407640:	ldr	x8, [sp, #424]
  407644:	ldur	x9, [x29, #-8]
  407648:	ldr	x9, [x9, #584]
  40764c:	ldr	x9, [x9]
  407650:	cmp	x8, x9
  407654:	b.cs	407664 <dev_kmsg_record+0x278>  // b.hs, b.nlast
  407658:	mov	w8, #0x1                   	// #1
  40765c:	str	w8, [sp, #412]
  407660:	b	407ee4 <dev_kmsg_record+0xaf8>
  407664:	ldr	x8, [sp, #424]
  407668:	ldur	x9, [x29, #-8]
  40766c:	ldr	x9, [x9, #584]
  407670:	ldr	x9, [x9]
  407674:	cmp	x8, x9
  407678:	b.ls	4076b8 <dev_kmsg_record+0x2cc>  // b.plast
  40767c:	ldur	x0, [x29, #-8]
  407680:	ldr	x8, [sp, #424]
  407684:	ldur	x9, [x29, #-8]
  407688:	ldr	x9, [x9, #584]
  40768c:	ldr	x9, [x9]
  407690:	subs	x4, x8, x9
  407694:	mov	w10, wzr
  407698:	mov	w1, w10
  40769c:	adrp	x2, 429000 <journal_ratelimit_group_free+0x70>
  4076a0:	add	x2, x2, #0xf45
  4076a4:	adrp	x3, 429000 <journal_ratelimit_group_free+0x70>
  4076a8:	add	x3, x3, #0xf71
  4076ac:	mov	x8, xzr
  4076b0:	mov	x5, x8
  4076b4:	bl	409360 <server_driver_message>
  4076b8:	ldr	x8, [sp, #424]
  4076bc:	add	x8, x8, #0x1
  4076c0:	ldur	x9, [x29, #-8]
  4076c4:	ldr	x9, [x9, #584]
  4076c8:	str	x8, [x9]
  4076cc:	ldr	x8, [sp, #448]
  4076d0:	ldur	x9, [x29, #-16]
  4076d4:	subs	x8, x8, x9
  4076d8:	add	x8, x8, #0x1
  4076dc:	ldur	x9, [x29, #-24]
  4076e0:	subs	x8, x9, x8
  4076e4:	stur	x8, [x29, #-24]
  4076e8:	ldr	x8, [sp, #448]
  4076ec:	add	x8, x8, #0x1
  4076f0:	stur	x8, [x29, #-16]
  4076f4:	ldur	x0, [x29, #-16]
  4076f8:	ldur	x2, [x29, #-24]
  4076fc:	mov	w1, #0x3b                  	// #59
  407700:	bl	405788 <memchr@plt>
  407704:	str	x0, [sp, #440]
  407708:	ldr	x8, [sp, #440]
  40770c:	cbnz	x8, 40771c <dev_kmsg_record+0x330>
  407710:	mov	w8, #0x1                   	// #1
  407714:	str	w8, [sp, #412]
  407718:	b	407ee4 <dev_kmsg_record+0xaf8>
  40771c:	ldur	x0, [x29, #-16]
  407720:	ldur	x2, [x29, #-24]
  407724:	mov	w1, #0x2c                  	// #44
  407728:	bl	405788 <memchr@plt>
  40772c:	str	x0, [sp, #448]
  407730:	ldr	x8, [sp, #448]
  407734:	cbz	x8, 407748 <dev_kmsg_record+0x35c>
  407738:	ldr	x8, [sp, #440]
  40773c:	ldr	x9, [sp, #448]
  407740:	cmp	x8, x9
  407744:	b.cs	407750 <dev_kmsg_record+0x364>  // b.hs, b.nlast
  407748:	ldr	x8, [sp, #440]
  40774c:	str	x8, [sp, #448]
  407750:	ldr	x8, [sp, #448]
  407754:	mov	w9, #0x0                   	// #0
  407758:	strb	w9, [x8]
  40775c:	ldur	x0, [x29, #-16]
  407760:	add	x1, sp, #0x1e8
  407764:	bl	4057a8 <safe_atollu@plt>
  407768:	str	w0, [sp, #456]
  40776c:	ldr	w9, [sp, #456]
  407770:	cmp	w9, #0x0
  407774:	cset	w9, ge  // ge = tcont
  407778:	tbnz	w9, #0, 407788 <dev_kmsg_record+0x39c>
  40777c:	mov	w8, #0x1                   	// #1
  407780:	str	w8, [sp, #412]
  407784:	b	407ee4 <dev_kmsg_record+0xaf8>
  407788:	ldr	x8, [sp, #440]
  40778c:	ldur	x9, [x29, #-16]
  407790:	subs	x8, x8, x9
  407794:	add	x8, x8, #0x1
  407798:	ldur	x9, [x29, #-24]
  40779c:	subs	x8, x9, x8
  4077a0:	stur	x8, [x29, #-24]
  4077a4:	ldr	x8, [sp, #440]
  4077a8:	add	x8, x8, #0x1
  4077ac:	stur	x8, [x29, #-16]
  4077b0:	ldur	x0, [x29, #-16]
  4077b4:	ldur	x2, [x29, #-24]
  4077b8:	mov	w1, #0xa                   	// #10
  4077bc:	bl	405788 <memchr@plt>
  4077c0:	str	x0, [sp, #448]
  4077c4:	ldr	x8, [sp, #448]
  4077c8:	cbnz	x8, 4077d8 <dev_kmsg_record+0x3ec>
  4077cc:	mov	w8, #0x1                   	// #1
  4077d0:	str	w8, [sp, #412]
  4077d4:	b	407ee4 <dev_kmsg_record+0xaf8>
  4077d8:	ldr	x8, [sp, #448]
  4077dc:	mov	w9, #0x0                   	// #0
  4077e0:	strb	w9, [x8]
  4077e4:	ldr	x8, [sp, #448]
  4077e8:	ldur	x10, [x29, #-16]
  4077ec:	subs	x8, x8, x10
  4077f0:	str	x8, [sp, #416]
  4077f4:	ldr	x8, [sp, #448]
  4077f8:	ldur	x10, [x29, #-16]
  4077fc:	subs	x8, x8, x10
  407800:	add	x8, x8, #0x1
  407804:	ldur	x10, [x29, #-24]
  407808:	subs	x8, x10, x8
  40780c:	stur	x8, [x29, #-24]
  407810:	ldr	x8, [sp, #448]
  407814:	add	x8, x8, #0x1
  407818:	str	x8, [sp, #432]
  40781c:	str	xzr, [sp, #464]
  407820:	ldur	x8, [x29, #-24]
  407824:	cmp	x8, #0x0
  407828:	cset	w9, ls  // ls = plast
  40782c:	mov	w10, #0x0                   	// #0
  407830:	str	w10, [sp, #172]
  407834:	tbnz	w9, #0, 407848 <dev_kmsg_record+0x45c>
  407838:	ldr	x8, [sp, #464]
  40783c:	cmp	x8, #0x40
  407840:	cset	w9, cc  // cc = lo, ul, last
  407844:	str	w9, [sp, #172]
  407848:	ldr	w8, [sp, #172]
  40784c:	tbnz	w8, #0, 407854 <dev_kmsg_record+0x468>
  407850:	b	407980 <dev_kmsg_record+0x594>
  407854:	ldr	x8, [sp, #432]
  407858:	ldrb	w9, [x8]
  40785c:	cmp	w9, #0x20
  407860:	b.eq	407868 <dev_kmsg_record+0x47c>  // b.none
  407864:	b	407980 <dev_kmsg_record+0x594>
  407868:	ldr	x8, [sp, #432]
  40786c:	add	x8, x8, #0x1
  407870:	str	x8, [sp, #432]
  407874:	ldur	x8, [x29, #-24]
  407878:	subs	x8, x8, #0x1
  40787c:	stur	x8, [x29, #-24]
  407880:	ldr	x0, [sp, #432]
  407884:	ldur	x2, [x29, #-24]
  407888:	mov	w1, #0xa                   	// #10
  40788c:	bl	405788 <memchr@plt>
  407890:	str	x0, [sp, #448]
  407894:	ldr	x8, [sp, #448]
  407898:	cbnz	x8, 4078a0 <dev_kmsg_record+0x4b4>
  40789c:	b	407ea0 <dev_kmsg_record+0xab4>
  4078a0:	ldr	x8, [sp, #448]
  4078a4:	mov	w9, #0x0                   	// #0
  4078a8:	strb	w9, [x8]
  4078ac:	ldr	x0, [sp, #432]
  4078b0:	ldr	x8, [sp, #448]
  4078b4:	ldr	x10, [sp, #432]
  4078b8:	subs	x1, x8, x10
  4078bc:	adrp	x2, 429000 <journal_ratelimit_group_free+0x70>
  4078c0:	add	x2, x2, #0xf94
  4078c4:	mov	w3, #0x1                   	// #1
  4078c8:	add	x4, sp, #0x190
  4078cc:	bl	4057b8 <cunescape_length_with_prefix@plt>
  4078d0:	cmp	w0, #0x0
  4078d4:	cset	w9, ge  // ge = tcont
  4078d8:	tbnz	w9, #0, 4078e0 <dev_kmsg_record+0x4f4>
  4078dc:	b	407980 <dev_kmsg_record+0x594>
  4078e0:	ldr	x0, [sp, #400]
  4078e4:	adrp	x1, 429000 <journal_ratelimit_group_free+0x70>
  4078e8:	add	x1, x1, #0xf9d
  4078ec:	bl	407f60 <startswith>
  4078f0:	cbz	x0, 407900 <dev_kmsg_record+0x514>
  4078f4:	ldr	x8, [sp, #400]
  4078f8:	add	x8, x8, #0xf
  4078fc:	str	x8, [sp, #496]
  407900:	ldr	x8, [sp, #480]
  407904:	add	x9, x8, #0x1
  407908:	str	x9, [sp, #480]
  40790c:	add	x9, sp, #0x1f8
  407910:	ldr	x10, [sp, #400]
  407914:	str	x10, [sp, #384]
  407918:	ldr	x0, [sp, #400]
  40791c:	str	x8, [sp, #160]
  407920:	str	x9, [sp, #152]
  407924:	bl	405738 <strlen@plt>
  407928:	str	x0, [sp, #392]
  40792c:	ldr	q0, [sp, #384]
  407930:	ldr	x8, [sp, #152]
  407934:	ldr	x9, [sp, #160]
  407938:	str	q0, [x8, x9, lsl #4]
  40793c:	ldr	x10, [sp, #472]
  407940:	add	x10, x10, #0x1
  407944:	str	x10, [sp, #472]
  407948:	ldr	x10, [sp, #448]
  40794c:	ldr	x11, [sp, #432]
  407950:	subs	x10, x10, x11
  407954:	add	x10, x10, #0x1
  407958:	ldur	x11, [x29, #-24]
  40795c:	subs	x10, x11, x10
  407960:	stur	x10, [x29, #-24]
  407964:	ldr	x10, [sp, #448]
  407968:	add	x10, x10, #0x1
  40796c:	str	x10, [sp, #432]
  407970:	ldr	x8, [sp, #464]
  407974:	add	x8, x8, #0x1
  407978:	str	x8, [sp, #464]
  40797c:	b	407820 <dev_kmsg_record+0x434>
  407980:	ldr	x8, [sp, #496]
  407984:	cbz	x8, 407b74 <dev_kmsg_record+0x788>
  407988:	add	x0, sp, #0x178
  40798c:	mov	x8, xzr
  407990:	str	x8, [sp, #376]
  407994:	ldr	x1, [sp, #496]
  407998:	bl	4057c8 <sd_device_new_from_device_id@plt>
  40799c:	cmp	w0, #0x0
  4079a0:	cset	w9, lt  // lt = tstop
  4079a4:	tbnz	w9, #0, 407b6c <dev_kmsg_record+0x780>
  4079a8:	ldr	x0, [sp, #376]
  4079ac:	add	x1, sp, #0x170
  4079b0:	bl	4057d8 <sd_device_get_devname@plt>
  4079b4:	cmp	w0, #0x0
  4079b8:	cset	w8, lt  // lt = tstop
  4079bc:	tbnz	w8, #0, 407a30 <dev_kmsg_record+0x644>
  4079c0:	ldr	x1, [sp, #368]
  4079c4:	adrp	x0, 429000 <journal_ratelimit_group_free+0x70>
  4079c8:	add	x0, x0, #0xfad
  4079cc:	mov	x8, xzr
  4079d0:	mov	x2, x8
  4079d4:	bl	4057e8 <strjoin_real@plt>
  4079d8:	str	x0, [sp, #360]
  4079dc:	ldr	x8, [sp, #360]
  4079e0:	cbz	x8, 407a30 <dev_kmsg_record+0x644>
  4079e4:	ldr	x8, [sp, #480]
  4079e8:	add	x9, x8, #0x1
  4079ec:	str	x9, [sp, #480]
  4079f0:	add	x9, sp, #0x1f8
  4079f4:	ldr	x10, [sp, #360]
  4079f8:	str	x10, [sp, #344]
  4079fc:	ldr	x0, [sp, #360]
  407a00:	str	x8, [sp, #144]
  407a04:	str	x9, [sp, #136]
  407a08:	bl	405738 <strlen@plt>
  407a0c:	str	x0, [sp, #352]
  407a10:	add	x8, sp, #0x59
  407a14:	ldur	q0, [x8, #255]
  407a18:	ldr	x8, [sp, #136]
  407a1c:	ldr	x9, [sp, #144]
  407a20:	str	q0, [x8, x9, lsl #4]
  407a24:	ldr	x10, [sp, #472]
  407a28:	add	x10, x10, #0x1
  407a2c:	str	x10, [sp, #472]
  407a30:	ldr	x0, [sp, #376]
  407a34:	add	x1, sp, #0x170
  407a38:	bl	4057f8 <sd_device_get_sysname@plt>
  407a3c:	cmp	w0, #0x0
  407a40:	cset	w8, lt  // lt = tstop
  407a44:	tbnz	w8, #0, 407ab8 <dev_kmsg_record+0x6cc>
  407a48:	ldr	x1, [sp, #368]
  407a4c:	adrp	x0, 429000 <journal_ratelimit_group_free+0x70>
  407a50:	add	x0, x0, #0xfbc
  407a54:	mov	x8, xzr
  407a58:	mov	x2, x8
  407a5c:	bl	4057e8 <strjoin_real@plt>
  407a60:	str	x0, [sp, #360]
  407a64:	ldr	x8, [sp, #360]
  407a68:	cbz	x8, 407ab8 <dev_kmsg_record+0x6cc>
  407a6c:	ldr	x8, [sp, #480]
  407a70:	add	x9, x8, #0x1
  407a74:	str	x9, [sp, #480]
  407a78:	add	x9, sp, #0x1f8
  407a7c:	ldr	x10, [sp, #360]
  407a80:	str	x10, [sp, #328]
  407a84:	ldr	x0, [sp, #360]
  407a88:	str	x8, [sp, #128]
  407a8c:	str	x9, [sp, #120]
  407a90:	bl	405738 <strlen@plt>
  407a94:	str	x0, [sp, #336]
  407a98:	add	x8, sp, #0x49
  407a9c:	ldur	q0, [x8, #255]
  407aa0:	ldr	x8, [sp, #120]
  407aa4:	ldr	x9, [sp, #128]
  407aa8:	str	q0, [x8, x9, lsl #4]
  407aac:	ldr	x10, [sp, #472]
  407ab0:	add	x10, x10, #0x1
  407ab4:	str	x10, [sp, #472]
  407ab8:	str	xzr, [sp, #464]
  407abc:	ldr	x0, [sp, #376]
  407ac0:	bl	405808 <sd_device_get_devlink_first@plt>
  407ac4:	str	x0, [sp, #368]
  407ac8:	ldr	x8, [sp, #368]
  407acc:	cbz	x8, 407b6c <dev_kmsg_record+0x780>
  407ad0:	ldr	x8, [sp, #464]
  407ad4:	cmp	x8, #0x20
  407ad8:	b.cc	407ae0 <dev_kmsg_record+0x6f4>  // b.lo, b.ul, b.last
  407adc:	b	407b6c <dev_kmsg_record+0x780>
  407ae0:	ldr	x1, [sp, #368]
  407ae4:	adrp	x0, 429000 <journal_ratelimit_group_free+0x70>
  407ae8:	add	x0, x0, #0xfcb
  407aec:	mov	x8, xzr
  407af0:	mov	x2, x8
  407af4:	bl	4057e8 <strjoin_real@plt>
  407af8:	str	x0, [sp, #360]
  407afc:	ldr	x8, [sp, #360]
  407b00:	cbz	x8, 407b50 <dev_kmsg_record+0x764>
  407b04:	ldr	x8, [sp, #480]
  407b08:	add	x9, x8, #0x1
  407b0c:	str	x9, [sp, #480]
  407b10:	add	x9, sp, #0x1f8
  407b14:	ldr	x10, [sp, #360]
  407b18:	str	x10, [sp, #312]
  407b1c:	ldr	x0, [sp, #360]
  407b20:	str	x8, [sp, #112]
  407b24:	str	x9, [sp, #104]
  407b28:	bl	405738 <strlen@plt>
  407b2c:	str	x0, [sp, #320]
  407b30:	add	x8, sp, #0x39
  407b34:	ldur	q0, [x8, #255]
  407b38:	ldr	x8, [sp, #104]
  407b3c:	ldr	x9, [sp, #112]
  407b40:	str	q0, [x8, x9, lsl #4]
  407b44:	ldr	x10, [sp, #472]
  407b48:	add	x10, x10, #0x1
  407b4c:	str	x10, [sp, #472]
  407b50:	ldr	x8, [sp, #464]
  407b54:	add	x8, x8, #0x1
  407b58:	str	x8, [sp, #464]
  407b5c:	ldr	x0, [sp, #376]
  407b60:	bl	405818 <sd_device_get_devlink_next@plt>
  407b64:	str	x0, [sp, #368]
  407b68:	b	407ac8 <dev_kmsg_record+0x6dc>
  407b6c:	add	x0, sp, #0x178
  407b70:	bl	407fc0 <sd_device_unrefp>
  407b74:	ldr	x2, [sp, #488]
  407b78:	sub	x0, x29, #0x48
  407b7c:	adrp	x1, 429000 <journal_ratelimit_group_free+0x70>
  407b80:	add	x1, x1, #0xfda
  407b84:	bl	405828 <asprintf@plt>
  407b88:	cmp	w0, #0x0
  407b8c:	cset	w8, lt  // lt = tstop
  407b90:	tbnz	w8, #0, 407bd4 <dev_kmsg_record+0x7e8>
  407b94:	ldr	x8, [sp, #480]
  407b98:	add	x9, x8, #0x1
  407b9c:	str	x9, [sp, #480]
  407ba0:	add	x9, sp, #0x1f8
  407ba4:	ldur	x10, [x29, #-72]
  407ba8:	str	x10, [sp, #296]
  407bac:	ldur	x0, [x29, #-72]
  407bb0:	str	x8, [sp, #96]
  407bb4:	str	x9, [sp, #88]
  407bb8:	bl	405738 <strlen@plt>
  407bbc:	str	x0, [sp, #304]
  407bc0:	add	x8, sp, #0x29
  407bc4:	ldur	q0, [x8, #255]
  407bc8:	ldr	x8, [sp, #88]
  407bcc:	ldr	x9, [sp, #96]
  407bd0:	str	q0, [x8, x9, lsl #4]
  407bd4:	ldr	x8, [sp, #480]
  407bd8:	add	x9, x8, #0x1
  407bdc:	str	x9, [sp, #480]
  407be0:	add	x9, sp, #0x1f8
  407be4:	adrp	x10, 429000 <journal_ratelimit_group_free+0x70>
  407be8:	add	x10, x10, #0xffb
  407bec:	str	x10, [sp, #280]
  407bf0:	mov	x10, #0x11                  	// #17
  407bf4:	str	x10, [sp, #288]
  407bf8:	add	x10, sp, #0x19
  407bfc:	ldur	q0, [x10, #255]
  407c00:	str	q0, [x9, x8, lsl #4]
  407c04:	ldr	w11, [sp, #460]
  407c08:	and	w2, w11, #0x7
  407c0c:	sub	x0, x29, #0x28
  407c10:	adrp	x1, 42a000 <_fini+0x3a8>
  407c14:	add	x1, x1, #0xd
  407c18:	bl	405828 <asprintf@plt>
  407c1c:	cmp	w0, #0x0
  407c20:	cset	w11, lt  // lt = tstop
  407c24:	tbnz	w11, #0, 407c68 <dev_kmsg_record+0x87c>
  407c28:	ldr	x8, [sp, #480]
  407c2c:	add	x9, x8, #0x1
  407c30:	str	x9, [sp, #480]
  407c34:	add	x9, sp, #0x1f8
  407c38:	ldur	x10, [x29, #-40]
  407c3c:	str	x10, [sp, #264]
  407c40:	ldur	x0, [x29, #-40]
  407c44:	str	x8, [sp, #80]
  407c48:	str	x9, [sp, #72]
  407c4c:	bl	405738 <strlen@plt>
  407c50:	str	x0, [sp, #272]
  407c54:	add	x8, sp, #0x9
  407c58:	ldur	q0, [x8, #255]
  407c5c:	ldr	x8, [sp, #72]
  407c60:	ldr	x9, [sp, #80]
  407c64:	str	q0, [x8, x9, lsl #4]
  407c68:	ldr	w8, [sp, #460]
  407c6c:	and	w8, w8, #0x3f8
  407c70:	asr	w2, w8, #3
  407c74:	sub	x0, x29, #0x38
  407c78:	adrp	x1, 42a000 <_fini+0x3a8>
  407c7c:	add	x1, x1, #0x19
  407c80:	bl	405828 <asprintf@plt>
  407c84:	cmp	w0, #0x0
  407c88:	cset	w8, lt  // lt = tstop
  407c8c:	tbnz	w8, #0, 407ccc <dev_kmsg_record+0x8e0>
  407c90:	ldr	x8, [sp, #480]
  407c94:	add	x9, x8, #0x1
  407c98:	str	x9, [sp, #480]
  407c9c:	add	x9, sp, #0x1f8
  407ca0:	ldur	x10, [x29, #-56]
  407ca4:	str	x10, [sp, #248]
  407ca8:	ldur	x0, [x29, #-56]
  407cac:	str	x8, [sp, #64]
  407cb0:	str	x9, [sp, #56]
  407cb4:	bl	405738 <strlen@plt>
  407cb8:	str	x0, [sp, #256]
  407cbc:	ldur	q0, [sp, #248]
  407cc0:	ldr	x8, [sp, #56]
  407cc4:	ldr	x9, [sp, #64]
  407cc8:	str	q0, [x8, x9, lsl #4]
  407ccc:	ldr	w8, [sp, #460]
  407cd0:	and	w8, w8, #0x3f8
  407cd4:	asr	w8, w8, #3
  407cd8:	cbnz	w8, 407d0c <dev_kmsg_record+0x920>
  407cdc:	ldr	x8, [sp, #480]
  407ce0:	add	x9, x8, #0x1
  407ce4:	str	x9, [sp, #480]
  407ce8:	add	x9, sp, #0x1f8
  407cec:	adrp	x10, 42a000 <_fini+0x3a8>
  407cf0:	add	x10, x10, #0x2c
  407cf4:	str	x10, [sp, #232]
  407cf8:	mov	x10, #0x18                  	// #24
  407cfc:	str	x10, [sp, #240]
  407d00:	ldur	q0, [sp, #232]
  407d04:	str	q0, [x9, x8, lsl #4]
  407d08:	b	407e10 <dev_kmsg_record+0xa24>
  407d0c:	sub	x0, x29, #0x10
  407d10:	sub	x1, x29, #0x50
  407d14:	sub	x2, x29, #0x58
  407d18:	bl	41e0dc <syslog_parse_identifier>
  407d1c:	ldr	x8, [sp, #416]
  407d20:	subs	x8, x8, x0
  407d24:	str	x8, [sp, #416]
  407d28:	ldur	x0, [x29, #-80]
  407d2c:	ldur	x1, [x29, #-88]
  407d30:	bl	407ff4 <is_us>
  407d34:	tbnz	w0, #0, 407d3c <dev_kmsg_record+0x950>
  407d38:	b	407d40 <dev_kmsg_record+0x954>
  407d3c:	b	407ea0 <dev_kmsg_record+0xab4>
  407d40:	ldur	x8, [x29, #-80]
  407d44:	cbz	x8, 407da8 <dev_kmsg_record+0x9bc>
  407d48:	ldur	x1, [x29, #-80]
  407d4c:	adrp	x0, 42a000 <_fini+0x3a8>
  407d50:	add	x0, x0, #0x45
  407d54:	mov	x8, xzr
  407d58:	mov	x2, x8
  407d5c:	bl	4057e8 <strjoin_real@plt>
  407d60:	stur	x0, [x29, #-64]
  407d64:	ldur	x8, [x29, #-64]
  407d68:	cbz	x8, 407da8 <dev_kmsg_record+0x9bc>
  407d6c:	ldr	x8, [sp, #480]
  407d70:	add	x9, x8, #0x1
  407d74:	str	x9, [sp, #480]
  407d78:	add	x9, sp, #0x1f8
  407d7c:	ldur	x10, [x29, #-64]
  407d80:	str	x10, [sp, #216]
  407d84:	ldur	x0, [x29, #-64]
  407d88:	str	x8, [sp, #48]
  407d8c:	str	x9, [sp, #40]
  407d90:	bl	405738 <strlen@plt>
  407d94:	str	x0, [sp, #224]
  407d98:	ldur	q0, [sp, #216]
  407d9c:	ldr	x8, [sp, #40]
  407da0:	ldr	x9, [sp, #48]
  407da4:	str	q0, [x8, x9, lsl #4]
  407da8:	ldur	x8, [x29, #-88]
  407dac:	cbz	x8, 407e10 <dev_kmsg_record+0xa24>
  407db0:	ldur	x1, [x29, #-88]
  407db4:	adrp	x0, 42a000 <_fini+0x3a8>
  407db8:	add	x0, x0, #0x58
  407dbc:	mov	x8, xzr
  407dc0:	mov	x2, x8
  407dc4:	bl	4057e8 <strjoin_real@plt>
  407dc8:	stur	x0, [x29, #-48]
  407dcc:	ldur	x8, [x29, #-48]
  407dd0:	cbz	x8, 407e10 <dev_kmsg_record+0xa24>
  407dd4:	ldr	x8, [sp, #480]
  407dd8:	add	x9, x8, #0x1
  407ddc:	str	x9, [sp, #480]
  407de0:	add	x9, sp, #0x1f8
  407de4:	ldur	x10, [x29, #-48]
  407de8:	str	x10, [sp, #200]
  407dec:	ldur	x0, [x29, #-48]
  407df0:	str	x8, [sp, #32]
  407df4:	str	x9, [sp, #24]
  407df8:	bl	405738 <strlen@plt>
  407dfc:	str	x0, [sp, #208]
  407e00:	ldur	q0, [sp, #200]
  407e04:	ldr	x8, [sp, #24]
  407e08:	ldr	x9, [sp, #32]
  407e0c:	str	q0, [x8, x9, lsl #4]
  407e10:	ldur	x0, [x29, #-16]
  407e14:	ldr	x1, [sp, #416]
  407e18:	adrp	x2, 42a000 <_fini+0x3a8>
  407e1c:	add	x2, x2, #0x64
  407e20:	mov	w3, #0x1                   	// #1
  407e24:	sub	x4, x29, #0x20
  407e28:	bl	4057b8 <cunescape_length_with_prefix@plt>
  407e2c:	cmp	w0, #0x0
  407e30:	cset	w8, lt  // lt = tstop
  407e34:	tbnz	w8, #0, 407e74 <dev_kmsg_record+0xa88>
  407e38:	ldr	x8, [sp, #480]
  407e3c:	add	x9, x8, #0x1
  407e40:	str	x9, [sp, #480]
  407e44:	add	x9, sp, #0x1f8
  407e48:	ldur	x10, [x29, #-32]
  407e4c:	str	x10, [sp, #184]
  407e50:	ldur	x0, [x29, #-32]
  407e54:	str	x8, [sp, #16]
  407e58:	str	x9, [sp, #8]
  407e5c:	bl	405738 <strlen@plt>
  407e60:	str	x0, [sp, #192]
  407e64:	ldur	q0, [sp, #184]
  407e68:	ldr	x8, [sp, #8]
  407e6c:	ldr	x9, [sp, #16]
  407e70:	str	q0, [x8, x9, lsl #4]
  407e74:	ldur	x0, [x29, #-8]
  407e78:	ldr	x2, [sp, #480]
  407e7c:	ldr	w6, [sp, #460]
  407e80:	add	x1, sp, #0x1f8
  407e84:	mov	x3, #0x7f                  	// #127
  407e88:	mov	x8, xzr
  407e8c:	mov	x4, x8
  407e90:	mov	x5, x8
  407e94:	mov	w9, wzr
  407e98:	mov	w7, w9
  407e9c:	bl	40f6d0 <server_dispatch_message>
  407ea0:	str	xzr, [sp, #464]
  407ea4:	ldr	x8, [sp, #464]
  407ea8:	ldr	x9, [sp, #472]
  407eac:	cmp	x8, x9
  407eb0:	b.cs	407ee0 <dev_kmsg_record+0xaf4>  // b.hs, b.nlast
  407eb4:	ldr	x8, [sp, #464]
  407eb8:	mov	x9, #0x10                  	// #16
  407ebc:	mul	x8, x9, x8
  407ec0:	add	x9, sp, #0x1f8
  407ec4:	add	x8, x9, x8
  407ec8:	ldr	x0, [x8]
  407ecc:	bl	405778 <free@plt>
  407ed0:	ldr	x8, [sp, #464]
  407ed4:	add	x8, x8, #0x1
  407ed8:	str	x8, [sp, #464]
  407edc:	b	407ea4 <dev_kmsg_record+0xab8>
  407ee0:	str	wzr, [sp, #412]
  407ee4:	sub	x0, x29, #0x58
  407ee8:	bl	4073c4 <freep>
  407eec:	sub	x0, x29, #0x50
  407ef0:	bl	4073c4 <freep>
  407ef4:	sub	x0, x29, #0x48
  407ef8:	bl	4073c4 <freep>
  407efc:	sub	x0, x29, #0x40
  407f00:	bl	4073c4 <freep>
  407f04:	sub	x0, x29, #0x38
  407f08:	bl	4073c4 <freep>
  407f0c:	sub	x0, x29, #0x30
  407f10:	bl	4073c4 <freep>
  407f14:	sub	x0, x29, #0x28
  407f18:	bl	4073c4 <freep>
  407f1c:	sub	x0, x29, #0x20
  407f20:	bl	4073c4 <freep>
  407f24:	add	sp, sp, #0xa40
  407f28:	ldr	x28, [sp, #16]
  407f2c:	ldp	x29, x30, [sp], #32
  407f30:	ret

0000000000407f34 <safe_atou64>:
  407f34:	sub	sp, sp, #0x20
  407f38:	stp	x29, x30, [sp, #16]
  407f3c:	add	x29, sp, #0x10
  407f40:	str	x0, [sp, #8]
  407f44:	str	x1, [sp]
  407f48:	ldr	x0, [sp, #8]
  407f4c:	ldr	x1, [sp]
  407f50:	bl	4057a8 <safe_atollu@plt>
  407f54:	ldp	x29, x30, [sp, #16]
  407f58:	add	sp, sp, #0x20
  407f5c:	ret

0000000000407f60 <startswith>:
  407f60:	sub	sp, sp, #0x30
  407f64:	stp	x29, x30, [sp, #32]
  407f68:	add	x29, sp, #0x20
  407f6c:	str	x0, [sp, #16]
  407f70:	str	x1, [sp, #8]
  407f74:	ldr	x0, [sp, #8]
  407f78:	bl	405738 <strlen@plt>
  407f7c:	str	x0, [sp]
  407f80:	ldr	x0, [sp, #16]
  407f84:	ldr	x1, [sp, #8]
  407f88:	ldr	x2, [sp]
  407f8c:	bl	405838 <strncmp@plt>
  407f90:	cbnz	w0, 407fa8 <startswith+0x48>
  407f94:	ldr	x8, [sp, #16]
  407f98:	ldr	x9, [sp]
  407f9c:	add	x8, x8, x9
  407fa0:	stur	x8, [x29, #-8]
  407fa4:	b	407fb0 <startswith+0x50>
  407fa8:	mov	x8, xzr
  407fac:	stur	x8, [x29, #-8]
  407fb0:	ldur	x0, [x29, #-8]
  407fb4:	ldp	x29, x30, [sp, #32]
  407fb8:	add	sp, sp, #0x30
  407fbc:	ret

0000000000407fc0 <sd_device_unrefp>:
  407fc0:	sub	sp, sp, #0x20
  407fc4:	stp	x29, x30, [sp, #16]
  407fc8:	add	x29, sp, #0x10
  407fcc:	str	x0, [sp, #8]
  407fd0:	ldr	x8, [sp, #8]
  407fd4:	ldr	x8, [x8]
  407fd8:	cbz	x8, 407fe8 <sd_device_unrefp+0x28>
  407fdc:	ldr	x8, [sp, #8]
  407fe0:	ldr	x0, [x8]
  407fe4:	bl	405848 <sd_device_unref@plt>
  407fe8:	ldp	x29, x30, [sp, #16]
  407fec:	add	sp, sp, #0x20
  407ff0:	ret

0000000000407ff4 <is_us>:
  407ff4:	sub	sp, sp, #0x40
  407ff8:	stp	x29, x30, [sp, #48]
  407ffc:	add	x29, sp, #0x30
  408000:	stur	x0, [x29, #-16]
  408004:	str	x1, [sp, #24]
  408008:	ldur	x8, [x29, #-16]
  40800c:	cbz	x8, 408018 <is_us+0x24>
  408010:	ldr	x8, [sp, #24]
  408014:	cbnz	x8, 408028 <is_us+0x34>
  408018:	mov	w8, wzr
  40801c:	and	w8, w8, #0x1
  408020:	sturb	w8, [x29, #-1]
  408024:	b	40809c <is_us+0xa8>
  408028:	ldr	x0, [sp, #24]
  40802c:	add	x1, sp, #0x14
  408030:	bl	405858 <parse_pid@plt>
  408034:	cmp	w0, #0x0
  408038:	cset	w8, ge  // ge = tcont
  40803c:	tbnz	w8, #0, 408050 <is_us+0x5c>
  408040:	mov	w8, wzr
  408044:	and	w8, w8, #0x1
  408048:	sturb	w8, [x29, #-1]
  40804c:	b	40809c <is_us+0xa8>
  408050:	ldr	w8, [sp, #20]
  408054:	str	w8, [sp, #16]
  408058:	bl	4056d8 <getpid_cached@plt>
  40805c:	mov	w8, #0x0                   	// #0
  408060:	ldr	w9, [sp, #16]
  408064:	cmp	w9, w0
  408068:	str	w8, [sp, #12]
  40806c:	b.ne	408090 <is_us+0x9c>  // b.any
  408070:	ldur	x0, [x29, #-16]
  408074:	adrp	x8, 44f000 <journald_gperf_lookup.wordlist+0x448>
  408078:	ldr	x8, [x8, #1808]
  40807c:	ldr	x1, [x8]
  408080:	bl	405868 <strcmp@plt>
  408084:	cmp	w0, #0x0
  408088:	cset	w9, eq  // eq = none
  40808c:	str	w9, [sp, #12]
  408090:	ldr	w8, [sp, #12]
  408094:	and	w8, w8, #0x1
  408098:	sturb	w8, [x29, #-1]
  40809c:	ldurb	w8, [x29, #-1]
  4080a0:	and	w0, w8, #0x1
  4080a4:	ldp	x29, x30, [sp, #48]
  4080a8:	add	sp, sp, #0x40
  4080ac:	ret

00000000004080b0 <server_flush_dev_kmsg>:
  4080b0:	sub	sp, sp, #0x50
  4080b4:	stp	x29, x30, [sp, #64]
  4080b8:	add	x29, sp, #0x40
  4080bc:	adrp	x8, 429000 <journal_ratelimit_group_free+0x70>
  4080c0:	add	x8, x8, #0xdca
  4080c4:	add	x8, x8, #0x3
  4080c8:	stur	x0, [x29, #-16]
  4080cc:	str	x8, [sp, #16]
  4080d0:	ldur	x8, [x29, #-16]
  4080d4:	cmp	x8, #0x0
  4080d8:	cset	w9, ne  // ne = any
  4080dc:	mov	w10, #0x1                   	// #1
  4080e0:	eor	w9, w9, #0x1
  4080e4:	eor	w9, w9, w10
  4080e8:	eor	w9, w9, w10
  4080ec:	and	w9, w9, #0x1
  4080f0:	mov	w0, w9
  4080f4:	sxtw	x8, w0
  4080f8:	cbz	x8, 408120 <server_flush_dev_kmsg+0x70>
  4080fc:	mov	w8, wzr
  408100:	mov	w0, w8
  408104:	adrp	x1, 429000 <journal_ratelimit_group_free+0x70>
  408108:	add	x1, x1, #0xdc8
  40810c:	ldr	x2, [sp, #16]
  408110:	mov	w3, #0x148                 	// #328
  408114:	adrp	x4, 42a000 <_fini+0x3a8>
  408118:	add	x4, x4, #0x6d
  40811c:	bl	405718 <log_assert_failed_realm@plt>
  408120:	ldur	x8, [x29, #-16]
  408124:	ldr	w9, [x8, #12]
  408128:	cmp	w9, #0x0
  40812c:	cset	w9, ge  // ge = tcont
  408130:	tbnz	w9, #0, 40813c <server_flush_dev_kmsg+0x8c>
  408134:	stur	wzr, [x29, #-4]
  408138:	b	408208 <server_flush_dev_kmsg+0x158>
  40813c:	ldur	x8, [x29, #-16]
  408140:	ldrb	w9, [x8, #592]
  408144:	and	w9, w9, #0x1
  408148:	tbnz	w9, #0, 408154 <server_flush_dev_kmsg+0xa4>
  40814c:	stur	wzr, [x29, #-4]
  408150:	b	408208 <server_flush_dev_kmsg+0x158>
  408154:	mov	w8, #0x7                   	// #7
  408158:	stur	w8, [x29, #-24]
  40815c:	stur	wzr, [x29, #-28]
  408160:	str	wzr, [sp, #32]
  408164:	ldr	w0, [sp, #32]
  408168:	bl	405638 <log_get_max_level_realm@plt>
  40816c:	ldur	w8, [x29, #-24]
  408170:	and	w8, w8, #0x7
  408174:	cmp	w0, w8
  408178:	b.lt	4081b0 <server_flush_dev_kmsg+0x100>  // b.tstop
  40817c:	ldr	w8, [sp, #32]
  408180:	ldur	w9, [x29, #-24]
  408184:	orr	w0, w9, w8, lsl #10
  408188:	ldur	w1, [x29, #-28]
  40818c:	ldr	x2, [sp, #16]
  408190:	mov	w3, #0x150                 	// #336
  408194:	adrp	x4, 42a000 <_fini+0x3a8>
  408198:	add	x4, x4, #0x91
  40819c:	adrp	x5, 42a000 <_fini+0x3a8>
  4081a0:	add	x5, x5, #0xa7
  4081a4:	bl	405648 <log_internal_realm@plt>
  4081a8:	str	w0, [sp, #12]
  4081ac:	b	4081c4 <server_flush_dev_kmsg+0x114>
  4081b0:	ldur	w0, [x29, #-28]
  4081b4:	bl	405658 <abs@plt>
  4081b8:	mov	w8, wzr
  4081bc:	subs	w8, w8, w0, uxtb
  4081c0:	str	w8, [sp, #12]
  4081c4:	ldr	w8, [sp, #12]
  4081c8:	str	w8, [sp, #28]
  4081cc:	ldur	x0, [x29, #-16]
  4081d0:	bl	408218 <server_read_dev_kmsg>
  4081d4:	stur	w0, [x29, #-20]
  4081d8:	ldur	w8, [x29, #-20]
  4081dc:	cmp	w8, #0x0
  4081e0:	cset	w8, ge  // ge = tcont
  4081e4:	tbnz	w8, #0, 4081f4 <server_flush_dev_kmsg+0x144>
  4081e8:	ldur	w8, [x29, #-20]
  4081ec:	stur	w8, [x29, #-4]
  4081f0:	b	408208 <server_flush_dev_kmsg+0x158>
  4081f4:	ldur	w8, [x29, #-20]
  4081f8:	cbnz	w8, 408200 <server_flush_dev_kmsg+0x150>
  4081fc:	b	408204 <server_flush_dev_kmsg+0x154>
  408200:	b	4081cc <server_flush_dev_kmsg+0x11c>
  408204:	stur	wzr, [x29, #-4]
  408208:	ldur	w0, [x29, #-4]
  40820c:	ldp	x29, x30, [sp, #64]
  408210:	add	sp, sp, #0x50
  408214:	ret

0000000000408218 <server_read_dev_kmsg>:
  408218:	stp	x29, x30, [sp, #-32]!
  40821c:	str	x28, [sp, #16]
  408220:	mov	x29, sp
  408224:	sub	sp, sp, #0x2, lsl #12
  408228:	sub	sp, sp, #0x50
  40822c:	sub	x8, x29, #0x10
  408230:	adrp	x9, 429000 <journal_ratelimit_group_free+0x70>
  408234:	add	x9, x9, #0xdca
  408238:	add	x9, x9, #0x3
  40823c:	str	x0, [x8]
  408240:	str	x8, [sp, #16]
  408244:	str	x9, [sp, #8]
  408248:	ldr	x8, [sp, #16]
  40824c:	ldr	x9, [x8]
  408250:	cmp	x9, #0x0
  408254:	cset	w10, ne  // ne = any
  408258:	mov	w11, #0x1                   	// #1
  40825c:	eor	w10, w10, #0x1
  408260:	eor	w10, w10, w11
  408264:	eor	w10, w10, w11
  408268:	and	w10, w10, #0x1
  40826c:	mov	w0, w10
  408270:	sxtw	x9, w0
  408274:	cbz	x9, 40829c <server_read_dev_kmsg+0x84>
  408278:	mov	w8, wzr
  40827c:	mov	w0, w8
  408280:	adrp	x1, 429000 <journal_ratelimit_group_free+0x70>
  408284:	add	x1, x1, #0xdc8
  408288:	ldr	x2, [sp, #8]
  40828c:	mov	w3, #0x12c                 	// #300
  408290:	adrp	x4, 42a000 <_fini+0x3a8>
  408294:	add	x4, x4, #0x296
  408298:	bl	405718 <log_assert_failed_realm@plt>
  40829c:	ldr	x8, [sp, #16]
  4082a0:	ldr	x9, [x8]
  4082a4:	ldr	w10, [x9, #12]
  4082a8:	cmp	w10, #0x0
  4082ac:	cset	w10, ge  // ge = tcont
  4082b0:	mov	w11, #0x1                   	// #1
  4082b4:	eor	w10, w10, #0x1
  4082b8:	eor	w10, w10, w11
  4082bc:	eor	w10, w10, w11
  4082c0:	and	w10, w10, #0x1
  4082c4:	mov	w0, w10
  4082c8:	sxtw	x9, w0
  4082cc:	cbz	x9, 4082f4 <server_read_dev_kmsg+0xdc>
  4082d0:	mov	w8, wzr
  4082d4:	mov	w0, w8
  4082d8:	adrp	x1, 42a000 <_fini+0x3a8>
  4082dc:	add	x1, x1, #0x2b9
  4082e0:	ldr	x2, [sp, #8]
  4082e4:	mov	w3, #0x12d                 	// #301
  4082e8:	adrp	x4, 42a000 <_fini+0x3a8>
  4082ec:	add	x4, x4, #0x296
  4082f0:	bl	405718 <log_assert_failed_realm@plt>
  4082f4:	ldr	x8, [sp, #16]
  4082f8:	ldr	x9, [x8]
  4082fc:	ldr	w0, [x9, #12]
  408300:	add	x1, sp, #0x3f
  408304:	mov	x2, #0x2000                	// #8192
  408308:	bl	405878 <read@plt>
  40830c:	str	x0, [sp, #48]
  408310:	ldr	x8, [sp, #48]
  408314:	cbnz	x8, 408320 <server_read_dev_kmsg+0x108>
  408318:	stur	wzr, [x29, #-4]
  40831c:	b	408480 <server_read_dev_kmsg+0x268>
  408320:	ldr	x8, [sp, #48]
  408324:	cmp	x8, #0x0
  408328:	cset	w9, ge  // ge = tcont
  40832c:	tbnz	w9, #0, 408464 <server_read_dev_kmsg+0x24c>
  408330:	bl	405768 <__errno_location@plt>
  408334:	ldr	w8, [x0]
  408338:	cmp	w8, #0x16
  40833c:	b.ne	408364 <server_read_dev_kmsg+0x14c>  // b.any
  408340:	ldr	x8, [sp, #16]
  408344:	ldr	x9, [x8]
  408348:	ldr	x0, [x9, #64]
  40834c:	bl	405888 <sd_event_source_unref@plt>
  408350:	ldr	x8, [sp, #16]
  408354:	ldr	x9, [x8]
  408358:	str	x0, [x9, #64]
  40835c:	stur	wzr, [x29, #-4]
  408360:	b	408480 <server_read_dev_kmsg+0x268>
  408364:	mov	w8, #0x0                   	// #0
  408368:	strb	w8, [sp, #47]
  40836c:	bl	405768 <__errno_location@plt>
  408370:	ldr	w8, [x0]
  408374:	cmp	w8, #0x4
  408378:	str	w8, [sp, #4]
  40837c:	b.eq	4083ac <server_read_dev_kmsg+0x194>  // b.none
  408380:	b	408384 <server_read_dev_kmsg+0x16c>
  408384:	ldr	w8, [sp, #4]
  408388:	cmp	w8, #0xb
  40838c:	b.eq	4083ac <server_read_dev_kmsg+0x194>  // b.none
  408390:	b	408394 <server_read_dev_kmsg+0x17c>
  408394:	ldr	w8, [sp, #4]
  408398:	cmp	w8, #0x20
  40839c:	cset	w9, eq  // eq = none
  4083a0:	eor	w9, w9, #0x1
  4083a4:	tbnz	w9, #0, 4083b8 <server_read_dev_kmsg+0x1a0>
  4083a8:	b	4083ac <server_read_dev_kmsg+0x194>
  4083ac:	mov	w8, #0x1                   	// #1
  4083b0:	strb	w8, [sp, #47]
  4083b4:	b	4083b8 <server_read_dev_kmsg+0x1a0>
  4083b8:	ldrb	w8, [sp, #47]
  4083bc:	and	w8, w8, #0x1
  4083c0:	strb	w8, [sp, #46]
  4083c4:	ldrb	w8, [sp, #46]
  4083c8:	tbnz	w8, #0, 4083d0 <server_read_dev_kmsg+0x1b8>
  4083cc:	b	4083d8 <server_read_dev_kmsg+0x1c0>
  4083d0:	stur	wzr, [x29, #-4]
  4083d4:	b	408480 <server_read_dev_kmsg+0x268>
  4083d8:	mov	w8, #0x3                   	// #3
  4083dc:	str	w8, [sp, #40]
  4083e0:	bl	405768 <__errno_location@plt>
  4083e4:	ldr	w8, [x0]
  4083e8:	str	w8, [sp, #36]
  4083ec:	str	wzr, [sp, #32]
  4083f0:	ldr	w0, [sp, #32]
  4083f4:	bl	405638 <log_get_max_level_realm@plt>
  4083f8:	ldr	w8, [sp, #40]
  4083fc:	and	w8, w8, #0x7
  408400:	cmp	w0, w8
  408404:	b.lt	40843c <server_read_dev_kmsg+0x224>  // b.tstop
  408408:	ldr	w8, [sp, #32]
  40840c:	ldr	w9, [sp, #40]
  408410:	orr	w0, w9, w8, lsl #10
  408414:	ldr	w1, [sp, #36]
  408418:	ldr	x2, [sp, #8]
  40841c:	mov	w3, #0x13e                 	// #318
  408420:	adrp	x4, 42a000 <_fini+0x3a8>
  408424:	add	x4, x4, #0x2cd
  408428:	adrp	x5, 42a000 <_fini+0x3a8>
  40842c:	add	x5, x5, #0x2e2
  408430:	bl	405648 <log_internal_realm@plt>
  408434:	str	w0, [sp]
  408438:	b	408450 <server_read_dev_kmsg+0x238>
  40843c:	ldr	w0, [sp, #36]
  408440:	bl	405658 <abs@plt>
  408444:	mov	w8, wzr
  408448:	subs	w8, w8, w0, uxtb
  40844c:	str	w8, [sp]
  408450:	ldr	w8, [sp]
  408454:	str	w8, [sp, #28]
  408458:	ldr	w8, [sp, #28]
  40845c:	stur	w8, [x29, #-4]
  408460:	b	408480 <server_read_dev_kmsg+0x268>
  408464:	ldr	x8, [sp, #16]
  408468:	ldr	x0, [x8]
  40846c:	ldr	x2, [sp, #48]
  408470:	add	x1, sp, #0x3f
  408474:	bl	4073ec <dev_kmsg_record>
  408478:	mov	w9, #0x1                   	// #1
  40847c:	stur	w9, [x29, #-4]
  408480:	ldur	w0, [x29, #-4]
  408484:	add	sp, sp, #0x2, lsl #12
  408488:	add	sp, sp, #0x50
  40848c:	ldr	x28, [sp, #16]
  408490:	ldp	x29, x30, [sp], #32
  408494:	ret

0000000000408498 <server_open_dev_kmsg>:
  408498:	sub	sp, sp, #0x80
  40849c:	stp	x29, x30, [sp, #112]
  4084a0:	add	x29, sp, #0x70
  4084a4:	adrp	x8, 429000 <journal_ratelimit_group_free+0x70>
  4084a8:	add	x8, x8, #0xdca
  4084ac:	add	x8, x8, #0x3
  4084b0:	adrp	x9, 42a000 <_fini+0x3a8>
  4084b4:	add	x9, x9, #0xea
  4084b8:	stur	x0, [x29, #-16]
  4084bc:	str	x8, [sp, #32]
  4084c0:	str	x9, [sp, #24]
  4084c4:	ldur	x8, [x29, #-16]
  4084c8:	cmp	x8, #0x0
  4084cc:	cset	w9, ne  // ne = any
  4084d0:	mov	w10, #0x1                   	// #1
  4084d4:	eor	w9, w9, #0x1
  4084d8:	eor	w9, w9, w10
  4084dc:	eor	w9, w9, w10
  4084e0:	and	w9, w9, #0x1
  4084e4:	mov	w0, w9
  4084e8:	sxtw	x8, w0
  4084ec:	cbz	x8, 408514 <server_open_dev_kmsg+0x7c>
  4084f0:	mov	w8, wzr
  4084f4:	mov	w0, w8
  4084f8:	adrp	x1, 429000 <journal_ratelimit_group_free+0x70>
  4084fc:	add	x1, x1, #0xdc8
  408500:	ldr	x2, [sp, #32]
  408504:	mov	w3, #0x172                 	// #370
  408508:	adrp	x4, 42a000 <_fini+0x3a8>
  40850c:	add	x4, x4, #0xbd
  408510:	bl	405718 <log_assert_failed_realm@plt>
  408514:	ldur	x8, [x29, #-16]
  408518:	ldrb	w9, [x8, #457]
  40851c:	tbnz	w9, #0, 408524 <server_open_dev_kmsg+0x8c>
  408520:	b	408534 <server_open_dev_kmsg+0x9c>
  408524:	mov	w8, #0x902                 	// #2306
  408528:	movk	w8, #0x8, lsl #16
  40852c:	stur	w8, [x29, #-20]
  408530:	b	408540 <server_open_dev_kmsg+0xa8>
  408534:	mov	w8, #0x901                 	// #2305
  408538:	movk	w8, #0x8, lsl #16
  40853c:	stur	w8, [x29, #-20]
  408540:	ldur	w1, [x29, #-20]
  408544:	adrp	x0, 42a000 <_fini+0x3a8>
  408548:	add	x0, x0, #0xe0
  40854c:	bl	405898 <open64@plt>
  408550:	ldur	x8, [x29, #-16]
  408554:	str	w0, [x8, #12]
  408558:	ldur	x8, [x29, #-16]
  40855c:	ldr	w9, [x8, #12]
  408560:	cmp	w9, #0x0
  408564:	cset	w9, ge  // ge = tcont
  408568:	tbnz	w9, #0, 4085fc <server_open_dev_kmsg+0x164>
  40856c:	bl	405768 <__errno_location@plt>
  408570:	ldr	w8, [x0]
  408574:	mov	w9, #0x4                   	// #4
  408578:	mov	w10, #0x7                   	// #7
  40857c:	cmp	w8, #0x2
  408580:	csel	w8, w10, w9, eq  // eq = none
  408584:	stur	w8, [x29, #-28]
  408588:	stur	wzr, [x29, #-32]
  40858c:	stur	wzr, [x29, #-36]
  408590:	ldur	w0, [x29, #-36]
  408594:	bl	405638 <log_get_max_level_realm@plt>
  408598:	ldur	w8, [x29, #-28]
  40859c:	and	w8, w8, #0x7
  4085a0:	cmp	w0, w8
  4085a4:	b.lt	4085d8 <server_open_dev_kmsg+0x140>  // b.tstop
  4085a8:	ldur	w8, [x29, #-36]
  4085ac:	ldur	w9, [x29, #-28]
  4085b0:	orr	w0, w9, w8, lsl #10
  4085b4:	ldur	w1, [x29, #-32]
  4085b8:	ldr	x2, [sp, #32]
  4085bc:	mov	w3, #0x17c                 	// #380
  4085c0:	ldr	x4, [sp, #24]
  4085c4:	adrp	x5, 42a000 <_fini+0x3a8>
  4085c8:	add	x5, x5, #0xff
  4085cc:	bl	405648 <log_internal_realm@plt>
  4085d0:	str	w0, [sp, #20]
  4085d4:	b	4085ec <server_open_dev_kmsg+0x154>
  4085d8:	ldur	w0, [x29, #-32]
  4085dc:	bl	405658 <abs@plt>
  4085e0:	mov	w8, wzr
  4085e4:	subs	w8, w8, w0, uxtb
  4085e8:	str	w8, [sp, #20]
  4085ec:	ldr	w8, [sp, #20]
  4085f0:	stur	w8, [x29, #-40]
  4085f4:	stur	wzr, [x29, #-4]
  4085f8:	b	4087d0 <server_open_dev_kmsg+0x338>
  4085fc:	ldur	x8, [x29, #-16]
  408600:	ldrb	w9, [x8, #457]
  408604:	tbnz	w9, #0, 408610 <server_open_dev_kmsg+0x178>
  408608:	stur	wzr, [x29, #-4]
  40860c:	b	4087d0 <server_open_dev_kmsg+0x338>
  408610:	ldur	x8, [x29, #-16]
  408614:	ldr	x0, [x8, #32]
  408618:	ldur	x8, [x29, #-16]
  40861c:	add	x1, x8, #0x40
  408620:	ldur	x8, [x29, #-16]
  408624:	ldr	w2, [x8, #12]
  408628:	ldur	x5, [x29, #-16]
  40862c:	mov	w3, #0x1                   	// #1
  408630:	adrp	x4, 408000 <is_us+0xc>
  408634:	add	x4, x4, #0x7e0
  408638:	bl	4058a8 <sd_event_add_io@plt>
  40863c:	stur	w0, [x29, #-24]
  408640:	ldur	w9, [x29, #-24]
  408644:	cmp	w9, #0x0
  408648:	cset	w9, ge  // ge = tcont
  40864c:	tbnz	w9, #0, 4086e4 <server_open_dev_kmsg+0x24c>
  408650:	ldur	w8, [x29, #-24]
  408654:	mov	w9, #0xffffffff            	// #-1
  408658:	cmp	w8, w9
  40865c:	b.ne	408668 <server_open_dev_kmsg+0x1d0>  // b.any
  408660:	stur	wzr, [x29, #-24]
  408664:	b	4087a0 <server_open_dev_kmsg+0x308>
  408668:	mov	w8, #0x3                   	// #3
  40866c:	stur	w8, [x29, #-44]
  408670:	ldur	w8, [x29, #-24]
  408674:	stur	w8, [x29, #-48]
  408678:	stur	wzr, [x29, #-52]
  40867c:	ldur	w0, [x29, #-52]
  408680:	bl	405638 <log_get_max_level_realm@plt>
  408684:	ldur	w8, [x29, #-44]
  408688:	and	w8, w8, #0x7
  40868c:	cmp	w0, w8
  408690:	b.lt	4086c4 <server_open_dev_kmsg+0x22c>  // b.tstop
  408694:	ldur	w8, [x29, #-52]
  408698:	ldur	w9, [x29, #-44]
  40869c:	orr	w0, w9, w8, lsl #10
  4086a0:	ldur	w1, [x29, #-48]
  4086a4:	ldr	x2, [sp, #32]
  4086a8:	mov	w3, #0x18d                 	// #397
  4086ac:	ldr	x4, [sp, #24]
  4086b0:	adrp	x5, 42a000 <_fini+0x3a8>
  4086b4:	add	x5, x5, #0x126
  4086b8:	bl	405648 <log_internal_realm@plt>
  4086bc:	str	w0, [sp, #16]
  4086c0:	b	4086d8 <server_open_dev_kmsg+0x240>
  4086c4:	ldur	w0, [x29, #-48]
  4086c8:	bl	405658 <abs@plt>
  4086cc:	mov	w8, wzr
  4086d0:	subs	w8, w8, w0, uxtb
  4086d4:	str	w8, [sp, #16]
  4086d8:	ldr	w8, [sp, #16]
  4086dc:	str	w8, [sp, #56]
  4086e0:	b	4087a0 <server_open_dev_kmsg+0x308>
  4086e4:	ldur	x8, [x29, #-16]
  4086e8:	ldr	x0, [x8, #64]
  4086ec:	mov	x1, #0xffffffffffffffa6    	// #-90
  4086f0:	bl	4058b8 <sd_event_source_set_priority@plt>
  4086f4:	stur	w0, [x29, #-24]
  4086f8:	ldur	w9, [x29, #-24]
  4086fc:	cmp	w9, #0x0
  408700:	cset	w9, ge  // ge = tcont
  408704:	tbnz	w9, #0, 408784 <server_open_dev_kmsg+0x2ec>
  408708:	mov	w8, #0x3                   	// #3
  40870c:	str	w8, [sp, #52]
  408710:	ldur	w8, [x29, #-24]
  408714:	str	w8, [sp, #48]
  408718:	str	wzr, [sp, #44]
  40871c:	ldr	w0, [sp, #44]
  408720:	bl	405638 <log_get_max_level_realm@plt>
  408724:	ldr	w8, [sp, #52]
  408728:	and	w8, w8, #0x7
  40872c:	cmp	w0, w8
  408730:	b.lt	408764 <server_open_dev_kmsg+0x2cc>  // b.tstop
  408734:	ldr	w8, [sp, #44]
  408738:	ldr	w9, [sp, #52]
  40873c:	orr	w0, w9, w8, lsl #10
  408740:	ldr	w1, [sp, #48]
  408744:	ldr	x2, [sp, #32]
  408748:	mov	w3, #0x193                 	// #403
  40874c:	ldr	x4, [sp, #24]
  408750:	adrp	x5, 42a000 <_fini+0x3a8>
  408754:	add	x5, x5, #0x153
  408758:	bl	405648 <log_internal_realm@plt>
  40875c:	str	w0, [sp, #12]
  408760:	b	408778 <server_open_dev_kmsg+0x2e0>
  408764:	ldr	w0, [sp, #48]
  408768:	bl	405658 <abs@plt>
  40876c:	mov	w8, wzr
  408770:	subs	w8, w8, w0, uxtb
  408774:	str	w8, [sp, #12]
  408778:	ldr	w8, [sp, #12]
  40877c:	str	w8, [sp, #40]
  408780:	b	4087a0 <server_open_dev_kmsg+0x308>
  408784:	ldur	x8, [x29, #-16]
  408788:	ldrb	w9, [x8, #592]
  40878c:	and	w9, w9, #0xfffffffe
  408790:	orr	w9, w9, #0x1
  408794:	strb	w9, [x8, #592]
  408798:	stur	wzr, [x29, #-4]
  40879c:	b	4087d0 <server_open_dev_kmsg+0x338>
  4087a0:	ldur	x8, [x29, #-16]
  4087a4:	ldr	x0, [x8, #64]
  4087a8:	bl	405888 <sd_event_source_unref@plt>
  4087ac:	ldur	x8, [x29, #-16]
  4087b0:	str	x0, [x8, #64]
  4087b4:	ldur	x8, [x29, #-16]
  4087b8:	ldr	w0, [x8, #12]
  4087bc:	bl	4058c8 <safe_close@plt>
  4087c0:	ldur	x8, [x29, #-16]
  4087c4:	str	w0, [x8, #12]
  4087c8:	ldur	w9, [x29, #-24]
  4087cc:	stur	w9, [x29, #-4]
  4087d0:	ldur	w0, [x29, #-4]
  4087d4:	ldp	x29, x30, [sp, #112]
  4087d8:	add	sp, sp, #0x80
  4087dc:	ret

00000000004087e0 <dispatch_dev_kmsg>:
  4087e0:	sub	sp, sp, #0x70
  4087e4:	stp	x29, x30, [sp, #96]
  4087e8:	add	x29, sp, #0x60
  4087ec:	adrp	x8, 429000 <journal_ratelimit_group_free+0x70>
  4087f0:	add	x8, x8, #0xdca
  4087f4:	add	x8, x8, #0x3
  4087f8:	adrp	x9, 42a000 <_fini+0x3a8>
  4087fc:	add	x9, x9, #0x304
  408800:	stur	x0, [x29, #-8]
  408804:	stur	w1, [x29, #-12]
  408808:	stur	w2, [x29, #-16]
  40880c:	stur	x3, [x29, #-24]
  408810:	ldur	x10, [x29, #-24]
  408814:	stur	x10, [x29, #-32]
  408818:	str	x8, [sp, #24]
  40881c:	str	x9, [sp, #16]
  408820:	ldur	x8, [x29, #-8]
  408824:	cmp	x8, #0x0
  408828:	cset	w9, ne  // ne = any
  40882c:	mov	w10, #0x1                   	// #1
  408830:	eor	w9, w9, #0x1
  408834:	eor	w9, w9, w10
  408838:	eor	w9, w9, w10
  40883c:	and	w9, w9, #0x1
  408840:	mov	w0, w9
  408844:	sxtw	x8, w0
  408848:	cbz	x8, 40886c <dispatch_dev_kmsg+0x8c>
  40884c:	mov	w8, wzr
  408850:	mov	w0, w8
  408854:	adrp	x1, 42a000 <_fini+0x3a8>
  408858:	add	x1, x1, #0x301
  40885c:	ldr	x2, [sp, #24]
  408860:	mov	w3, #0x161                 	// #353
  408864:	ldr	x4, [sp, #16]
  408868:	bl	405718 <log_assert_failed_realm@plt>
  40886c:	ldur	w8, [x29, #-12]
  408870:	ldur	x9, [x29, #-32]
  408874:	ldr	w10, [x9, #12]
  408878:	cmp	w8, w10
  40887c:	cset	w8, eq  // eq = none
  408880:	mov	w10, #0x1                   	// #1
  408884:	eor	w8, w8, #0x1
  408888:	eor	w8, w8, w10
  40888c:	eor	w8, w8, w10
  408890:	and	w8, w8, #0x1
  408894:	mov	w0, w8
  408898:	sxtw	x9, w0
  40889c:	cbz	x9, 4088c0 <dispatch_dev_kmsg+0xe0>
  4088a0:	mov	w8, wzr
  4088a4:	mov	w0, w8
  4088a8:	adrp	x1, 42a000 <_fini+0x3a8>
  4088ac:	add	x1, x1, #0x344
  4088b0:	ldr	x2, [sp, #24]
  4088b4:	mov	w3, #0x162                 	// #354
  4088b8:	ldr	x4, [sp, #16]
  4088bc:	bl	405718 <log_assert_failed_realm@plt>
  4088c0:	ldur	x8, [x29, #-32]
  4088c4:	cmp	x8, #0x0
  4088c8:	cset	w9, ne  // ne = any
  4088cc:	mov	w10, #0x1                   	// #1
  4088d0:	eor	w9, w9, #0x1
  4088d4:	eor	w9, w9, w10
  4088d8:	eor	w9, w9, w10
  4088dc:	and	w9, w9, #0x1
  4088e0:	mov	w0, w9
  4088e4:	sxtw	x8, w0
  4088e8:	cbz	x8, 40890c <dispatch_dev_kmsg+0x12c>
  4088ec:	mov	w8, wzr
  4088f0:	mov	w0, w8
  4088f4:	adrp	x1, 429000 <journal_ratelimit_group_free+0x70>
  4088f8:	add	x1, x1, #0xdc8
  4088fc:	ldr	x2, [sp, #24]
  408900:	mov	w3, #0x163                 	// #355
  408904:	ldr	x4, [sp, #16]
  408908:	bl	405718 <log_assert_failed_realm@plt>
  40890c:	ldur	w8, [x29, #-16]
  408910:	and	w8, w8, #0x8
  408914:	cbz	w8, 408990 <dispatch_dev_kmsg+0x1b0>
  408918:	mov	w8, #0x4                   	// #4
  40891c:	stur	w8, [x29, #-36]
  408920:	stur	wzr, [x29, #-40]
  408924:	stur	wzr, [x29, #-44]
  408928:	ldur	w0, [x29, #-44]
  40892c:	bl	405638 <log_get_max_level_realm@plt>
  408930:	ldur	w8, [x29, #-36]
  408934:	and	w8, w8, #0x7
  408938:	cmp	w0, w8
  40893c:	b.lt	408974 <dispatch_dev_kmsg+0x194>  // b.tstop
  408940:	ldur	w8, [x29, #-44]
  408944:	ldur	w9, [x29, #-36]
  408948:	orr	w0, w9, w8, lsl #10
  40894c:	ldur	w1, [x29, #-40]
  408950:	ldr	x2, [sp, #24]
  408954:	mov	w3, #0x166                 	// #358
  408958:	adrp	x4, 42a000 <_fini+0x3a8>
  40895c:	add	x4, x4, #0x359
  408960:	adrp	x5, 42a000 <_fini+0x3a8>
  408964:	add	x5, x5, #0x36b
  408968:	bl	405648 <log_internal_realm@plt>
  40896c:	str	w0, [sp, #12]
  408970:	b	408988 <dispatch_dev_kmsg+0x1a8>
  408974:	ldur	w0, [x29, #-40]
  408978:	bl	405658 <abs@plt>
  40897c:	mov	w8, wzr
  408980:	subs	w8, w8, w0, uxtb
  408984:	str	w8, [sp, #12]
  408988:	ldr	w8, [sp, #12]
  40898c:	str	w8, [sp, #48]
  408990:	ldur	w8, [x29, #-16]
  408994:	and	w8, w8, #0x1
  408998:	cbnz	w8, 408a18 <dispatch_dev_kmsg+0x238>
  40899c:	mov	w8, #0x3                   	// #3
  4089a0:	str	w8, [sp, #44]
  4089a4:	str	wzr, [sp, #40]
  4089a8:	str	wzr, [sp, #36]
  4089ac:	ldr	w0, [sp, #36]
  4089b0:	bl	405638 <log_get_max_level_realm@plt>
  4089b4:	ldr	w8, [sp, #44]
  4089b8:	and	w8, w8, #0x7
  4089bc:	cmp	w0, w8
  4089c0:	b.lt	4089fc <dispatch_dev_kmsg+0x21c>  // b.tstop
  4089c4:	ldr	w8, [sp, #36]
  4089c8:	ldr	w9, [sp, #44]
  4089cc:	orr	w0, w9, w8, lsl #10
  4089d0:	ldr	w1, [sp, #40]
  4089d4:	ldur	w6, [x29, #-16]
  4089d8:	ldr	x2, [sp, #24]
  4089dc:	mov	w3, #0x169                 	// #361
  4089e0:	adrp	x4, 42a000 <_fini+0x3a8>
  4089e4:	add	x4, x4, #0x359
  4089e8:	adrp	x5, 42a000 <_fini+0x3a8>
  4089ec:	add	x5, x5, #0x399
  4089f0:	bl	405648 <log_internal_realm@plt>
  4089f4:	str	w0, [sp, #8]
  4089f8:	b	408a10 <dispatch_dev_kmsg+0x230>
  4089fc:	ldr	w0, [sp, #40]
  408a00:	bl	405658 <abs@plt>
  408a04:	mov	w8, wzr
  408a08:	subs	w8, w8, w0, uxtb
  408a0c:	str	w8, [sp, #8]
  408a10:	ldr	w8, [sp, #8]
  408a14:	str	w8, [sp, #32]
  408a18:	ldur	x0, [x29, #-32]
  408a1c:	bl	408218 <server_read_dev_kmsg>
  408a20:	ldp	x29, x30, [sp, #96]
  408a24:	add	sp, sp, #0x70
  408a28:	ret

0000000000408a2c <server_open_kernel_seqnum>:
  408a2c:	sub	sp, sp, #0x90
  408a30:	stp	x29, x30, [sp, #128]
  408a34:	add	x29, sp, #0x80
  408a38:	adrp	x8, 429000 <journal_ratelimit_group_free+0x70>
  408a3c:	add	x8, x8, #0xdca
  408a40:	add	x8, x8, #0x3
  408a44:	adrp	x9, 42a000 <_fini+0x3a8>
  408a48:	add	x9, x9, #0x1d1
  408a4c:	stur	x0, [x29, #-16]
  408a50:	str	x8, [sp, #32]
  408a54:	str	x9, [sp, #24]
  408a58:	ldur	x8, [x29, #-16]
  408a5c:	cmp	x8, #0x0
  408a60:	cset	w9, ne  // ne = any
  408a64:	mov	w10, #0x1                   	// #1
  408a68:	eor	w9, w9, #0x1
  408a6c:	eor	w9, w9, w10
  408a70:	eor	w9, w9, w10
  408a74:	and	w9, w9, #0x1
  408a78:	mov	w0, w9
  408a7c:	sxtw	x8, w0
  408a80:	cbz	x8, 408aa8 <server_open_kernel_seqnum+0x7c>
  408a84:	mov	w8, wzr
  408a88:	mov	w0, w8
  408a8c:	adrp	x1, 429000 <journal_ratelimit_group_free+0x70>
  408a90:	add	x1, x1, #0xdc8
  408a94:	ldr	x2, [sp, #32]
  408a98:	mov	w3, #0x1a7                 	// #423
  408a9c:	adrp	x4, 42a000 <_fini+0x3a8>
  408aa0:	add	x4, x4, #0x186
  408aa4:	bl	405718 <log_assert_failed_realm@plt>
  408aa8:	adrp	x0, 42a000 <_fini+0x3a8>
  408aac:	add	x0, x0, #0x1ae
  408ab0:	mov	w1, #0x8142                	// #33090
  408ab4:	movk	w1, #0x8, lsl #16
  408ab8:	mov	w2, #0x1a4                 	// #420
  408abc:	bl	405898 <open64@plt>
  408ac0:	stur	w0, [x29, #-20]
  408ac4:	ldur	w8, [x29, #-20]
  408ac8:	cmp	w8, #0x0
  408acc:	cset	w8, ge  // ge = tcont
  408ad0:	tbnz	w8, #0, 408b60 <server_open_kernel_seqnum+0x134>
  408ad4:	mov	w8, #0x3                   	// #3
  408ad8:	stur	w8, [x29, #-40]
  408adc:	bl	405768 <__errno_location@plt>
  408ae0:	ldr	w8, [x0]
  408ae4:	stur	w8, [x29, #-44]
  408ae8:	stur	wzr, [x29, #-48]
  408aec:	ldur	w0, [x29, #-48]
  408af0:	bl	405638 <log_get_max_level_realm@plt>
  408af4:	ldur	w8, [x29, #-40]
  408af8:	and	w8, w8, #0x7
  408afc:	cmp	w0, w8
  408b00:	b.lt	408b34 <server_open_kernel_seqnum+0x108>  // b.tstop
  408b04:	ldur	w8, [x29, #-48]
  408b08:	ldur	w9, [x29, #-40]
  408b0c:	orr	w0, w9, w8, lsl #10
  408b10:	ldur	w1, [x29, #-44]
  408b14:	ldr	x2, [sp, #32]
  408b18:	mov	w3, #0x1af                 	// #431
  408b1c:	ldr	x4, [sp, #24]
  408b20:	adrp	x5, 42a000 <_fini+0x3a8>
  408b24:	add	x5, x5, #0x1eb
  408b28:	bl	405648 <log_internal_realm@plt>
  408b2c:	str	w0, [sp, #20]
  408b30:	b	408b48 <server_open_kernel_seqnum+0x11c>
  408b34:	ldur	w0, [x29, #-44]
  408b38:	bl	405658 <abs@plt>
  408b3c:	mov	w8, wzr
  408b40:	subs	w8, w8, w0, uxtb
  408b44:	str	w8, [sp, #20]
  408b48:	ldr	w8, [sp, #20]
  408b4c:	stur	w8, [x29, #-52]
  408b50:	stur	wzr, [x29, #-4]
  408b54:	mov	w8, #0x1                   	// #1
  408b58:	stur	w8, [x29, #-56]
  408b5c:	b	408ce0 <server_open_kernel_seqnum+0x2b4>
  408b60:	ldur	w0, [x29, #-20]
  408b64:	mov	x8, xzr
  408b68:	mov	x1, x8
  408b6c:	mov	x2, #0x8                   	// #8
  408b70:	bl	4058d8 <posix_fallocate64@plt>
  408b74:	stur	w0, [x29, #-36]
  408b78:	ldur	w9, [x29, #-36]
  408b7c:	cbz	w9, 408c08 <server_open_kernel_seqnum+0x1dc>
  408b80:	mov	w8, #0x3                   	// #3
  408b84:	stur	w8, [x29, #-60]
  408b88:	ldur	w8, [x29, #-36]
  408b8c:	str	w8, [sp, #64]
  408b90:	str	wzr, [sp, #60]
  408b94:	ldr	w0, [sp, #60]
  408b98:	bl	405638 <log_get_max_level_realm@plt>
  408b9c:	ldur	w8, [x29, #-60]
  408ba0:	and	w8, w8, #0x7
  408ba4:	cmp	w0, w8
  408ba8:	b.lt	408bdc <server_open_kernel_seqnum+0x1b0>  // b.tstop
  408bac:	ldr	w8, [sp, #60]
  408bb0:	ldur	w9, [x29, #-60]
  408bb4:	orr	w0, w9, w8, lsl #10
  408bb8:	ldr	w1, [sp, #64]
  408bbc:	ldr	x2, [sp, #32]
  408bc0:	mov	w3, #0x1b5                 	// #437
  408bc4:	ldr	x4, [sp, #24]
  408bc8:	adrp	x5, 42a000 <_fini+0x3a8>
  408bcc:	add	x5, x5, #0x22b
  408bd0:	bl	405648 <log_internal_realm@plt>
  408bd4:	str	w0, [sp, #16]
  408bd8:	b	408bf0 <server_open_kernel_seqnum+0x1c4>
  408bdc:	ldr	w0, [sp, #64]
  408be0:	bl	405658 <abs@plt>
  408be4:	mov	w8, wzr
  408be8:	subs	w8, w8, w0, uxtb
  408bec:	str	w8, [sp, #16]
  408bf0:	ldr	w8, [sp, #16]
  408bf4:	str	w8, [sp, #56]
  408bf8:	stur	wzr, [x29, #-4]
  408bfc:	mov	w8, #0x1                   	// #1
  408c00:	stur	w8, [x29, #-56]
  408c04:	b	408ce0 <server_open_kernel_seqnum+0x2b4>
  408c08:	ldur	w4, [x29, #-20]
  408c0c:	mov	x8, xzr
  408c10:	mov	x0, x8
  408c14:	mov	x1, #0x8                   	// #8
  408c18:	mov	w2, #0x3                   	// #3
  408c1c:	mov	w3, #0x1                   	// #1
  408c20:	mov	x5, x8
  408c24:	bl	4058e8 <mmap64@plt>
  408c28:	stur	x0, [x29, #-32]
  408c2c:	ldur	x8, [x29, #-32]
  408c30:	mov	x9, #0xffffffffffffffff    	// #-1
  408c34:	cmp	x8, x9
  408c38:	b.ne	408cc8 <server_open_kernel_seqnum+0x29c>  // b.any
  408c3c:	mov	w8, #0x3                   	// #3
  408c40:	str	w8, [sp, #52]
  408c44:	bl	405768 <__errno_location@plt>
  408c48:	ldr	w8, [x0]
  408c4c:	str	w8, [sp, #48]
  408c50:	str	wzr, [sp, #44]
  408c54:	ldr	w0, [sp, #44]
  408c58:	bl	405638 <log_get_max_level_realm@plt>
  408c5c:	ldr	w8, [sp, #52]
  408c60:	and	w8, w8, #0x7
  408c64:	cmp	w0, w8
  408c68:	b.lt	408c9c <server_open_kernel_seqnum+0x270>  // b.tstop
  408c6c:	ldr	w8, [sp, #44]
  408c70:	ldr	w9, [sp, #52]
  408c74:	orr	w0, w9, w8, lsl #10
  408c78:	ldr	w1, [sp, #48]
  408c7c:	ldr	x2, [sp, #32]
  408c80:	mov	w3, #0x1bb                 	// #443
  408c84:	ldr	x4, [sp, #24]
  408c88:	adrp	x5, 42a000 <_fini+0x3a8>
  408c8c:	add	x5, x5, #0x263
  408c90:	bl	405648 <log_internal_realm@plt>
  408c94:	str	w0, [sp, #12]
  408c98:	b	408cb0 <server_open_kernel_seqnum+0x284>
  408c9c:	ldr	w0, [sp, #48]
  408ca0:	bl	405658 <abs@plt>
  408ca4:	mov	w8, wzr
  408ca8:	subs	w8, w8, w0, uxtb
  408cac:	str	w8, [sp, #12]
  408cb0:	ldr	w8, [sp, #12]
  408cb4:	str	w8, [sp, #40]
  408cb8:	stur	wzr, [x29, #-4]
  408cbc:	mov	w8, #0x1                   	// #1
  408cc0:	stur	w8, [x29, #-56]
  408cc4:	b	408ce0 <server_open_kernel_seqnum+0x2b4>
  408cc8:	ldur	x8, [x29, #-32]
  408ccc:	ldur	x9, [x29, #-16]
  408cd0:	str	x8, [x9, #584]
  408cd4:	stur	wzr, [x29, #-4]
  408cd8:	mov	w10, #0x1                   	// #1
  408cdc:	stur	w10, [x29, #-56]
  408ce0:	sub	x0, x29, #0x14
  408ce4:	bl	408cf8 <closep>
  408ce8:	ldur	w0, [x29, #-4]
  408cec:	ldp	x29, x30, [sp, #128]
  408cf0:	add	sp, sp, #0x90
  408cf4:	ret

0000000000408cf8 <closep>:
  408cf8:	sub	sp, sp, #0x20
  408cfc:	stp	x29, x30, [sp, #16]
  408d00:	add	x29, sp, #0x10
  408d04:	str	x0, [sp, #8]
  408d08:	ldr	x8, [sp, #8]
  408d0c:	ldr	w0, [x8]
  408d10:	bl	4058c8 <safe_close@plt>
  408d14:	ldp	x29, x30, [sp, #16]
  408d18:	add	sp, sp, #0x20
  408d1c:	ret

0000000000408d20 <server_space_usage_message>:
  408d20:	sub	sp, sp, #0x1a0
  408d24:	stp	x29, x30, [sp, #384]
  408d28:	stp	x28, x19, [sp, #400]
  408d2c:	add	x29, sp, #0x180
  408d30:	adrp	x8, 42a000 <_fini+0x3a8>
  408d34:	add	x8, x8, #0x3c8
  408d38:	add	x2, x8, #0x3
  408d3c:	stur	x0, [x29, #-8]
  408d40:	stur	x1, [x29, #-16]
  408d44:	stur	x2, [x29, #-80]
  408d48:	ldur	x8, [x29, #-8]
  408d4c:	cmp	x8, #0x0
  408d50:	cset	w9, ne  // ne = any
  408d54:	mov	w10, #0x1                   	// #1
  408d58:	eor	w9, w9, #0x1
  408d5c:	eor	w9, w9, w10
  408d60:	eor	w9, w9, w10
  408d64:	and	w9, w9, #0x1
  408d68:	mov	w0, w9
  408d6c:	sxtw	x8, w0
  408d70:	cbz	x8, 408d98 <server_space_usage_message+0x78>
  408d74:	mov	w8, wzr
  408d78:	mov	w0, w8
  408d7c:	adrp	x1, 429000 <journal_ratelimit_group_free+0x70>
  408d80:	add	x1, x1, #0xdc8
  408d84:	ldur	x2, [x29, #-80]
  408d88:	mov	w3, #0xbd                  	// #189
  408d8c:	adrp	x4, 42a000 <_fini+0x3a8>
  408d90:	add	x4, x4, #0x3e9
  408d94:	bl	405718 <log_assert_failed_realm@plt>
  408d98:	ldur	x8, [x29, #-16]
  408d9c:	cbnz	x8, 408dd0 <server_space_usage_message+0xb0>
  408da0:	ldur	x8, [x29, #-8]
  408da4:	ldr	x8, [x8, #160]
  408da8:	cbz	x8, 408dbc <server_space_usage_message+0x9c>
  408dac:	ldur	x8, [x29, #-8]
  408db0:	add	x8, x8, #0x150
  408db4:	stur	x8, [x29, #-88]
  408db8:	b	408dc8 <server_space_usage_message+0xa8>
  408dbc:	ldur	x8, [x29, #-8]
  408dc0:	add	x8, x8, #0xe8
  408dc4:	stur	x8, [x29, #-88]
  408dc8:	ldur	x8, [x29, #-88]
  408dcc:	stur	x8, [x29, #-16]
  408dd0:	ldur	x0, [x29, #-8]
  408dd4:	ldur	x1, [x29, #-16]
  408dd8:	bl	4090b0 <cache_space_refresh>
  408ddc:	cmp	w0, #0x0
  408de0:	cset	w8, ge  // ge = tcont
  408de4:	tbnz	w8, #0, 408dec <server_space_usage_message+0xcc>
  408de8:	b	4090a0 <server_space_usage_message+0x380>
  408dec:	ldur	x8, [x29, #-16]
  408df0:	add	x8, x8, #0x10
  408df4:	stur	x8, [x29, #-72]
  408df8:	ldur	x8, [x29, #-16]
  408dfc:	ldr	x2, [x8, #88]
  408e00:	sub	x8, x29, #0x18
  408e04:	mov	x0, x8
  408e08:	mov	x9, #0x8                   	// #8
  408e0c:	mov	x1, x9
  408e10:	stur	x8, [x29, #-96]
  408e14:	stur	x9, [x29, #-104]
  408e18:	bl	409328 <format_bytes>
  408e1c:	ldur	x8, [x29, #-72]
  408e20:	ldr	x2, [x8, #16]
  408e24:	sub	x8, x29, #0x20
  408e28:	mov	x0, x8
  408e2c:	ldur	x1, [x29, #-104]
  408e30:	stur	x8, [x29, #-112]
  408e34:	bl	409328 <format_bytes>
  408e38:	ldur	x8, [x29, #-72]
  408e3c:	ldr	x2, [x8, #32]
  408e40:	sub	x8, x29, #0x28
  408e44:	mov	x0, x8
  408e48:	ldur	x1, [x29, #-104]
  408e4c:	stur	x8, [x29, #-120]
  408e50:	bl	409328 <format_bytes>
  408e54:	ldur	x8, [x29, #-16]
  408e58:	ldr	x2, [x8, #96]
  408e5c:	sub	x8, x29, #0x30
  408e60:	mov	x0, x8
  408e64:	ldur	x1, [x29, #-104]
  408e68:	stur	x8, [x29, #-128]
  408e6c:	bl	409328 <format_bytes>
  408e70:	ldur	x8, [x29, #-16]
  408e74:	ldr	x2, [x8, #80]
  408e78:	sub	x8, x29, #0x38
  408e7c:	mov	x0, x8
  408e80:	ldur	x1, [x29, #-104]
  408e84:	stur	x8, [x29, #-136]
  408e88:	bl	409328 <format_bytes>
  408e8c:	ldur	x8, [x29, #-16]
  408e90:	ldr	x2, [x8, #72]
  408e94:	sub	x8, x29, #0x40
  408e98:	mov	x0, x8
  408e9c:	ldur	x1, [x29, #-104]
  408ea0:	stur	x8, [x29, #-144]
  408ea4:	bl	409328 <format_bytes>
  408ea8:	ldur	x8, [x29, #-8]
  408eac:	ldur	x9, [x29, #-16]
  408eb0:	ldr	x4, [x9]
  408eb4:	ldur	x9, [x29, #-16]
  408eb8:	ldr	x5, [x9, #8]
  408ebc:	ldur	x9, [x29, #-16]
  408ec0:	ldr	x9, [x9]
  408ec4:	ldur	x10, [x29, #-16]
  408ec8:	ldr	x10, [x10, #8]
  408ecc:	ldur	x11, [x29, #-16]
  408ed0:	ldr	x11, [x11, #88]
  408ed4:	ldur	x12, [x29, #-72]
  408ed8:	ldr	x12, [x12, #16]
  408edc:	ldur	x13, [x29, #-72]
  408ee0:	ldr	x13, [x13, #32]
  408ee4:	ldur	x14, [x29, #-16]
  408ee8:	ldr	x14, [x14, #96]
  408eec:	ldur	x15, [x29, #-16]
  408ef0:	ldr	x15, [x15, #80]
  408ef4:	ldur	x16, [x29, #-16]
  408ef8:	ldr	x16, [x16, #72]
  408efc:	mov	x0, x8
  408f00:	mov	w17, wzr
  408f04:	mov	w1, w17
  408f08:	adrp	x2, 42a000 <_fini+0x3a8>
  408f0c:	add	x2, x2, #0x425
  408f10:	adrp	x3, 42a000 <_fini+0x3a8>
  408f14:	add	x3, x3, #0x451
  408f18:	ldur	x6, [x29, #-96]
  408f1c:	ldur	x7, [x29, #-136]
  408f20:	mov	x8, sp
  408f24:	ldur	x18, [x29, #-144]
  408f28:	str	x18, [x8]
  408f2c:	mov	x8, sp
  408f30:	adrp	x19, 42a000 <_fini+0x3a8>
  408f34:	add	x19, x19, #0x479
  408f38:	str	x19, [x8, #8]
  408f3c:	mov	x8, sp
  408f40:	str	x9, [x8, #16]
  408f44:	mov	x8, sp
  408f48:	adrp	x9, 42a000 <_fini+0x3a8>
  408f4c:	add	x9, x9, #0x489
  408f50:	str	x9, [x8, #24]
  408f54:	mov	x8, sp
  408f58:	str	x10, [x8, #32]
  408f5c:	mov	x8, sp
  408f60:	adrp	x9, 42a000 <_fini+0x3a8>
  408f64:	add	x9, x9, #0x499
  408f68:	str	x9, [x8, #40]
  408f6c:	mov	x8, sp
  408f70:	str	x11, [x8, #48]
  408f74:	mov	x8, sp
  408f78:	adrp	x9, 42a000 <_fini+0x3a8>
  408f7c:	add	x9, x9, #0x4a9
  408f80:	str	x9, [x8, #56]
  408f84:	mov	x8, sp
  408f88:	ldur	x9, [x29, #-96]
  408f8c:	str	x9, [x8, #64]
  408f90:	mov	x8, sp
  408f94:	adrp	x10, 42a000 <_fini+0x3a8>
  408f98:	add	x10, x10, #0x4bf
  408f9c:	str	x10, [x8, #72]
  408fa0:	mov	x8, sp
  408fa4:	str	x12, [x8, #80]
  408fa8:	mov	x8, sp
  408fac:	adrp	x10, 42a000 <_fini+0x3a8>
  408fb0:	add	x10, x10, #0x4cb
  408fb4:	str	x10, [x8, #88]
  408fb8:	mov	x8, sp
  408fbc:	ldur	x10, [x29, #-112]
  408fc0:	str	x10, [x8, #96]
  408fc4:	mov	x8, sp
  408fc8:	adrp	x11, 42a000 <_fini+0x3a8>
  408fcc:	add	x11, x11, #0x4dd
  408fd0:	str	x11, [x8, #104]
  408fd4:	mov	x8, sp
  408fd8:	str	x13, [x8, #112]
  408fdc:	mov	x8, sp
  408fe0:	adrp	x11, 42a000 <_fini+0x3a8>
  408fe4:	add	x11, x11, #0x4f0
  408fe8:	str	x11, [x8, #120]
  408fec:	mov	x8, sp
  408ff0:	ldur	x11, [x29, #-120]
  408ff4:	str	x11, [x8, #128]
  408ff8:	mov	x8, sp
  408ffc:	adrp	x12, 42a000 <_fini+0x3a8>
  409000:	add	x12, x12, #0x509
  409004:	str	x12, [x8, #136]
  409008:	mov	x8, sp
  40900c:	str	x14, [x8, #144]
  409010:	mov	x8, sp
  409014:	adrp	x12, 42a000 <_fini+0x3a8>
  409018:	add	x12, x12, #0x51c
  40901c:	str	x12, [x8, #152]
  409020:	mov	x8, sp
  409024:	ldur	x12, [x29, #-128]
  409028:	str	x12, [x8, #160]
  40902c:	mov	x8, sp
  409030:	adrp	x13, 42a000 <_fini+0x3a8>
  409034:	add	x13, x13, #0x535
  409038:	str	x13, [x8, #168]
  40903c:	mov	x8, sp
  409040:	str	x15, [x8, #176]
  409044:	mov	x8, sp
  409048:	adrp	x13, 42a000 <_fini+0x3a8>
  40904c:	add	x13, x13, #0x53f
  409050:	str	x13, [x8, #184]
  409054:	mov	x8, sp
  409058:	ldur	x13, [x29, #-136]
  40905c:	str	x13, [x8, #192]
  409060:	mov	x8, sp
  409064:	adrp	x14, 42a000 <_fini+0x3a8>
  409068:	add	x14, x14, #0x54f
  40906c:	str	x14, [x8, #200]
  409070:	mov	x8, sp
  409074:	str	x16, [x8, #208]
  409078:	mov	x8, sp
  40907c:	adrp	x14, 42a000 <_fini+0x3a8>
  409080:	add	x14, x14, #0x55d
  409084:	str	x14, [x8, #216]
  409088:	mov	x8, sp
  40908c:	str	x18, [x8, #224]
  409090:	mov	x8, sp
  409094:	mov	x14, xzr
  409098:	str	x14, [x8, #232]
  40909c:	bl	409360 <server_driver_message>
  4090a0:	ldp	x28, x19, [sp, #400]
  4090a4:	ldp	x29, x30, [sp, #384]
  4090a8:	add	sp, sp, #0x1a0
  4090ac:	ret

00000000004090b0 <cache_space_refresh>:
  4090b0:	sub	sp, sp, #0xf0
  4090b4:	stp	x29, x30, [sp, #224]
  4090b8:	add	x29, sp, #0xe0
  4090bc:	adrp	x8, 42a000 <_fini+0x3a8>
  4090c0:	add	x8, x8, #0x3c8
  4090c4:	add	x2, x8, #0x3
  4090c8:	stur	x0, [x29, #-16]
  4090cc:	stur	x1, [x29, #-24]
  4090d0:	str	x2, [sp, #40]
  4090d4:	ldur	x8, [x29, #-16]
  4090d8:	cmp	x8, #0x0
  4090dc:	cset	w9, ne  // ne = any
  4090e0:	mov	w10, #0x1                   	// #1
  4090e4:	eor	w9, w9, #0x1
  4090e8:	eor	w9, w9, w10
  4090ec:	eor	w9, w9, w10
  4090f0:	and	w9, w9, #0x1
  4090f4:	mov	w0, w9
  4090f8:	sxtw	x8, w0
  4090fc:	cbz	x8, 409124 <cache_space_refresh+0x74>
  409100:	mov	w8, wzr
  409104:	mov	w0, w8
  409108:	adrp	x1, 429000 <journal_ratelimit_group_free+0x70>
  40910c:	add	x1, x1, #0xdc8
  409110:	ldr	x2, [sp, #40]
  409114:	mov	w3, #0x81                  	// #129
  409118:	adrp	x4, 42b000 <_fini+0x13a8>
  40911c:	add	x4, x4, #0x3b8
  409120:	bl	405718 <log_assert_failed_realm@plt>
  409124:	ldur	x8, [x29, #-24]
  409128:	add	x8, x8, #0x10
  40912c:	stur	x8, [x29, #-40]
  409130:	ldur	x8, [x29, #-24]
  409134:	add	x8, x8, #0x40
  409138:	stur	x8, [x29, #-32]
  40913c:	mov	w0, #0x1                   	// #1
  409140:	bl	4056f8 <now@plt>
  409144:	stur	x0, [x29, #-72]
  409148:	ldur	x8, [x29, #-32]
  40914c:	ldr	x8, [x8]
  409150:	cbz	x8, 40917c <cache_space_refresh+0xcc>
  409154:	ldur	x8, [x29, #-32]
  409158:	ldr	x8, [x8]
  40915c:	mov	x9, #0xc380                	// #50048
  409160:	movk	x9, #0x1c9, lsl #16
  409164:	add	x8, x8, x9
  409168:	ldur	x9, [x29, #-72]
  40916c:	cmp	x8, x9
  409170:	b.ls	40917c <cache_space_refresh+0xcc>  // b.plast
  409174:	stur	wzr, [x29, #-4]
  409178:	b	409318 <cache_space_refresh+0x268>
  40917c:	ldur	x0, [x29, #-16]
  409180:	ldur	x8, [x29, #-24]
  409184:	ldr	x1, [x8, #8]
  409188:	sub	x2, x29, #0x30
  40918c:	sub	x3, x29, #0x38
  409190:	bl	415920 <determine_path_usage>
  409194:	stur	w0, [x29, #-76]
  409198:	ldur	w9, [x29, #-76]
  40919c:	cmp	w9, #0x0
  4091a0:	cset	w9, ge  // ge = tcont
  4091a4:	tbnz	w9, #0, 4091b4 <cache_space_refresh+0x104>
  4091a8:	ldur	w8, [x29, #-76]
  4091ac:	stur	w8, [x29, #-4]
  4091b0:	b	409318 <cache_space_refresh+0x268>
  4091b4:	ldur	x8, [x29, #-48]
  4091b8:	ldur	x9, [x29, #-32]
  4091bc:	str	x8, [x9, #24]
  4091c0:	ldur	x8, [x29, #-56]
  4091c4:	ldur	x9, [x29, #-32]
  4091c8:	str	x8, [x9, #32]
  4091cc:	ldur	x8, [x29, #-56]
  4091d0:	stur	x8, [x29, #-88]
  4091d4:	ldur	x8, [x29, #-40]
  4091d8:	ldr	x8, [x8, #32]
  4091dc:	stur	x8, [x29, #-96]
  4091e0:	ldur	x8, [x29, #-88]
  4091e4:	ldur	x9, [x29, #-96]
  4091e8:	cmp	x8, x9
  4091ec:	b.ls	409204 <cache_space_refresh+0x154>  // b.plast
  4091f0:	ldur	x8, [x29, #-88]
  4091f4:	ldur	x9, [x29, #-96]
  4091f8:	subs	x8, x8, x9
  4091fc:	str	x8, [sp, #32]
  409200:	b	40920c <cache_space_refresh+0x15c>
  409204:	mov	x8, xzr
  409208:	str	x8, [sp, #32]
  40920c:	ldr	x8, [sp, #32]
  409210:	stur	x8, [x29, #-104]
  409214:	ldur	x8, [x29, #-104]
  409218:	stur	x8, [x29, #-64]
  40921c:	ldur	x8, [x29, #-48]
  409220:	ldur	x9, [x29, #-64]
  409224:	add	x8, x8, x9
  409228:	str	x8, [sp, #104]
  40922c:	ldur	x8, [x29, #-40]
  409230:	ldr	x8, [x8, #24]
  409234:	str	x8, [sp, #96]
  409238:	ldr	x8, [sp, #104]
  40923c:	ldr	x9, [sp, #96]
  409240:	cmp	x8, x9
  409244:	b.ls	409254 <cache_space_refresh+0x1a4>  // b.plast
  409248:	ldr	x8, [sp, #104]
  40924c:	str	x8, [sp, #24]
  409250:	b	40925c <cache_space_refresh+0x1ac>
  409254:	ldr	x8, [sp, #96]
  409258:	str	x8, [sp, #24]
  40925c:	ldr	x8, [sp, #24]
  409260:	str	x8, [sp, #88]
  409264:	ldr	x8, [sp, #88]
  409268:	str	x8, [sp, #112]
  40926c:	ldur	x8, [x29, #-40]
  409270:	ldr	x8, [x8, #16]
  409274:	str	x8, [sp, #80]
  409278:	ldr	x8, [sp, #112]
  40927c:	ldr	x9, [sp, #80]
  409280:	cmp	x8, x9
  409284:	b.cs	409294 <cache_space_refresh+0x1e4>  // b.hs, b.nlast
  409288:	ldr	x8, [sp, #112]
  40928c:	str	x8, [sp, #16]
  409290:	b	40929c <cache_space_refresh+0x1ec>
  409294:	ldr	x8, [sp, #80]
  409298:	str	x8, [sp, #16]
  40929c:	ldr	x8, [sp, #16]
  4092a0:	str	x8, [sp, #72]
  4092a4:	ldr	x8, [sp, #72]
  4092a8:	ldur	x9, [x29, #-32]
  4092ac:	str	x8, [x9, #16]
  4092b0:	ldur	x8, [x29, #-32]
  4092b4:	ldr	x8, [x8, #16]
  4092b8:	str	x8, [sp, #64]
  4092bc:	ldur	x8, [x29, #-48]
  4092c0:	str	x8, [sp, #56]
  4092c4:	ldr	x8, [sp, #64]
  4092c8:	ldr	x9, [sp, #56]
  4092cc:	cmp	x8, x9
  4092d0:	b.ls	4092e8 <cache_space_refresh+0x238>  // b.plast
  4092d4:	ldr	x8, [sp, #64]
  4092d8:	ldr	x9, [sp, #56]
  4092dc:	subs	x8, x8, x9
  4092e0:	str	x8, [sp, #8]
  4092e4:	b	4092f0 <cache_space_refresh+0x240>
  4092e8:	mov	x8, xzr
  4092ec:	str	x8, [sp, #8]
  4092f0:	ldr	x8, [sp, #8]
  4092f4:	str	x8, [sp, #48]
  4092f8:	ldr	x8, [sp, #48]
  4092fc:	ldur	x9, [x29, #-32]
  409300:	str	x8, [x9, #8]
  409304:	ldur	x8, [x29, #-72]
  409308:	ldur	x9, [x29, #-32]
  40930c:	str	x8, [x9]
  409310:	mov	w10, #0x1                   	// #1
  409314:	stur	w10, [x29, #-4]
  409318:	ldur	w0, [x29, #-4]
  40931c:	ldp	x29, x30, [sp, #224]
  409320:	add	sp, sp, #0xf0
  409324:	ret

0000000000409328 <format_bytes>:
  409328:	sub	sp, sp, #0x30
  40932c:	stp	x29, x30, [sp, #32]
  409330:	add	x29, sp, #0x20
  409334:	mov	w3, #0x7                   	// #7
  409338:	stur	x0, [x29, #-8]
  40933c:	str	x1, [sp, #16]
  409340:	str	x2, [sp, #8]
  409344:	ldur	x0, [x29, #-8]
  409348:	ldr	x1, [sp, #16]
  40934c:	ldr	x2, [sp, #8]
  409350:	bl	4058f8 <format_bytes_full@plt>
  409354:	ldp	x29, x30, [sp, #32]
  409358:	add	sp, sp, #0x30
  40935c:	ret

0000000000409360 <server_driver_message>:
  409360:	stp	x29, x30, [sp, #-32]!
  409364:	stp	x28, x19, [sp, #16]
  409368:	mov	x29, sp
  40936c:	sub	sp, sp, #0xa00
  409370:	mov	x19, sp
  409374:	sub	x8, x29, #0xc8
  409378:	str	q7, [x19, #192]
  40937c:	str	q6, [x19, #176]
  409380:	str	q5, [x19, #160]
  409384:	str	q4, [x19, #144]
  409388:	str	q3, [x19, #128]
  40938c:	str	q2, [x19, #112]
  409390:	str	q1, [x19, #96]
  409394:	str	q0, [x19, #80]
  409398:	str	x7, [x19, #232]
  40939c:	str	x6, [x19, #224]
  4093a0:	str	x5, [x19, #216]
  4093a4:	str	x4, [x19, #208]
  4093a8:	stur	x0, [x29, #-8]
  4093ac:	stur	w1, [x29, #-12]
  4093b0:	stur	x2, [x29, #-24]
  4093b4:	stur	x3, [x29, #-32]
  4093b8:	mov	x9, xzr
  4093bc:	stur	x9, [x29, #-48]
  4093c0:	str	x8, [x19, #72]
  4093c4:	b	4093c8 <server_driver_message+0x68>
  4093c8:	ldur	x8, [x29, #-8]
  4093cc:	cbnz	x8, 4093f8 <server_driver_message+0x98>
  4093d0:	b	4093d4 <server_driver_message+0x74>
  4093d4:	adrp	x1, 429000 <journal_ratelimit_group_free+0x70>
  4093d8:	add	x1, x1, #0xdc8
  4093dc:	adrp	x2, 42a000 <_fini+0x3a8>
  4093e0:	add	x2, x2, #0x3cb
  4093e4:	adrp	x4, 42a000 <_fini+0x3a8>
  4093e8:	add	x4, x4, #0x7dc
  4093ec:	mov	w0, wzr
  4093f0:	mov	w3, #0x407                 	// #1031
  4093f4:	bl	405718 <log_assert_failed_realm@plt>
  4093f8:	b	4093fc <server_driver_message+0x9c>
  4093fc:	b	409400 <server_driver_message+0xa0>
  409400:	ldur	x8, [x29, #-32]
  409404:	cbnz	x8, 409430 <server_driver_message+0xd0>
  409408:	b	40940c <server_driver_message+0xac>
  40940c:	adrp	x1, 42a000 <_fini+0x3a8>
  409410:	add	x1, x1, #0x829
  409414:	adrp	x2, 42a000 <_fini+0x3a8>
  409418:	add	x2, x2, #0x3cb
  40941c:	adrp	x4, 42a000 <_fini+0x3a8>
  409420:	add	x4, x4, #0x7dc
  409424:	mov	w0, wzr
  409428:	mov	w3, #0x408                 	// #1032
  40942c:	bl	405718 <log_assert_failed_realm@plt>
  409430:	b	409434 <server_driver_message+0xd4>
  409434:	ldur	x8, [x29, #-8]
  409438:	ldr	x0, [x8, #744]
  40943c:	bl	40b04c <client_context_extra_fields_n_iovec>
  409440:	add	x8, x0, #0x3d
  409444:	stur	x8, [x29, #-64]
  409448:	ldur	x8, [x29, #-64]
  40944c:	stur	x8, [x29, #-112]
  409450:	b	409454 <server_driver_message+0xf4>
  409454:	ldur	x1, [x29, #-112]
  409458:	mov	w8, #0x10                  	// #16
  40945c:	mov	w0, w8
  409460:	bl	40b084 <size_multiply_overflow>
  409464:	tbz	w0, #0, 409490 <server_driver_message+0x130>
  409468:	b	40946c <server_driver_message+0x10c>
  40946c:	adrp	x1, 42a000 <_fini+0x3a8>
  409470:	add	x1, x1, #0x830
  409474:	adrp	x2, 42a000 <_fini+0x3a8>
  409478:	add	x2, x2, #0x3cb
  40947c:	adrp	x4, 42a000 <_fini+0x3a8>
  409480:	add	x4, x4, #0x7dc
  409484:	mov	w0, wzr
  409488:	mov	w3, #0x40b                 	// #1035
  40948c:	bl	405718 <log_assert_failed_realm@plt>
  409490:	b	409494 <server_driver_message+0x134>
  409494:	b	409498 <server_driver_message+0x138>
  409498:	ldur	x8, [x29, #-112]
  40949c:	lsl	x8, x8, #4
  4094a0:	subs	x8, x8, #0x400, lsl #12
  4094a4:	b.ls	4094d0 <server_driver_message+0x170>  // b.plast
  4094a8:	b	4094ac <server_driver_message+0x14c>
  4094ac:	adrp	x1, 42a000 <_fini+0x3a8>
  4094b0:	add	x1, x1, #0x863
  4094b4:	adrp	x2, 42a000 <_fini+0x3a8>
  4094b8:	add	x2, x2, #0x3cb
  4094bc:	adrp	x4, 42a000 <_fini+0x3a8>
  4094c0:	add	x4, x4, #0x7dc
  4094c4:	mov	w0, wzr
  4094c8:	mov	w3, #0x40b                 	// #1035
  4094cc:	bl	405718 <log_assert_failed_realm@plt>
  4094d0:	b	4094d4 <server_driver_message+0x174>
  4094d4:	ldur	x8, [x29, #-112]
  4094d8:	mov	x9, sp
  4094dc:	subs	x8, x9, x8, lsl #4
  4094e0:	mov	sp, x8
  4094e4:	stur	x8, [x29, #-120]
  4094e8:	ldur	x8, [x29, #-120]
  4094ec:	stur	x8, [x29, #-40]
  4094f0:	ldur	x8, [x29, #-40]
  4094f4:	ldur	x9, [x29, #-48]
  4094f8:	add	x10, x9, #0x1
  4094fc:	stur	x10, [x29, #-48]
  409500:	adrp	x10, 42a000 <_fini+0x3a8>
  409504:	add	x10, x10, #0x88a
  409508:	stur	x10, [x29, #-136]
  40950c:	mov	w11, #0x11                  	// #17
  409510:	mov	w10, w11
  409514:	stur	x10, [x29, #-128]
  409518:	ldr	x12, [x19, #72]
  40951c:	ldr	q0, [x12, #64]
  409520:	str	q0, [x8, x9, lsl #4]
  409524:	ldur	x8, [x29, #-40]
  409528:	ldur	x9, [x29, #-48]
  40952c:	add	x13, x9, #0x1
  409530:	stur	x13, [x29, #-48]
  409534:	adrp	x13, 42a000 <_fini+0x3a8>
  409538:	add	x13, x13, #0x89c
  40953c:	stur	x13, [x29, #-152]
  409540:	mov	w11, #0x22                  	// #34
  409544:	mov	w13, w11
  409548:	stur	x13, [x29, #-144]
  40954c:	ldr	q0, [x12, #48]
  409550:	str	q0, [x8, x9, lsl #4]
  409554:	ldur	x8, [x29, #-40]
  409558:	ldur	x9, [x29, #-48]
  40955c:	add	x13, x9, #0x1
  409560:	stur	x13, [x29, #-48]
  409564:	adrp	x13, 42a000 <_fini+0x3a8>
  409568:	add	x13, x13, #0x8bf
  40956c:	stur	x13, [x29, #-168]
  409570:	stur	x10, [x29, #-160]
  409574:	ldr	q0, [x12, #32]
  409578:	str	q0, [x8, x9, lsl #4]
  40957c:	ldur	x8, [x29, #-40]
  409580:	ldur	x9, [x29, #-48]
  409584:	add	x10, x9, #0x1
  409588:	stur	x10, [x29, #-48]
  40958c:	adrp	x10, 42a000 <_fini+0x3a8>
  409590:	add	x10, x10, #0x8d1
  409594:	stur	x10, [x29, #-184]
  409598:	mov	w11, #0xa                   	// #10
  40959c:	mov	w10, w11
  4095a0:	stur	x10, [x29, #-176]
  4095a4:	ldr	q0, [x12, #16]
  4095a8:	str	q0, [x8, x9, lsl #4]
  4095ac:	ldur	x8, [x29, #-24]
  4095b0:	cbz	x8, 4095fc <server_driver_message+0x29c>
  4095b4:	b	4095b8 <server_driver_message+0x258>
  4095b8:	ldur	x8, [x29, #-40]
  4095bc:	ldur	x9, [x29, #-48]
  4095c0:	add	x10, x9, #0x1
  4095c4:	stur	x10, [x29, #-48]
  4095c8:	ldur	x10, [x29, #-24]
  4095cc:	stur	x10, [x29, #-200]
  4095d0:	ldur	x0, [x29, #-24]
  4095d4:	str	x8, [x19, #64]
  4095d8:	str	x9, [x19, #56]
  4095dc:	bl	405738 <strlen@plt>
  4095e0:	stur	x0, [x29, #-192]
  4095e4:	ldr	x8, [x19, #72]
  4095e8:	ldr	q0, [x8]
  4095ec:	ldr	x9, [x19, #64]
  4095f0:	ldr	x10, [x19, #56]
  4095f4:	str	q0, [x9, x10, lsl #4]
  4095f8:	b	4095fc <server_driver_message+0x29c>
  4095fc:	ldur	x8, [x29, #-48]
  409600:	stur	x8, [x29, #-56]
  409604:	mov	w9, #0xffffff80            	// #-128
  409608:	stur	w9, [x29, #-68]
  40960c:	mov	w9, #0xffffffe0            	// #-32
  409610:	stur	w9, [x29, #-72]
  409614:	add	x8, x19, #0x50
  409618:	add	x8, x8, #0x80
  40961c:	stur	x8, [x29, #-80]
  409620:	add	x8, x19, #0xd0
  409624:	add	x8, x8, #0x20
  409628:	stur	x8, [x29, #-88]
  40962c:	add	x8, x29, #0x20
  409630:	stur	x8, [x29, #-96]
  409634:	ldur	x0, [x29, #-40]
  409638:	ldur	x1, [x29, #-64]
  40963c:	ldur	x5, [x29, #-32]
  409640:	ldur	q0, [x29, #-96]
  409644:	ldur	q1, [x29, #-80]
  409648:	stur	q1, [x29, #-224]
  40964c:	stur	q0, [x29, #-240]
  409650:	sub	x2, x29, #0x30
  409654:	mov	w3, wzr
  409658:	sub	x6, x29, #0xf0
  40965c:	str	w3, [x19, #52]
  409660:	ldr	w4, [x19, #52]
  409664:	bl	405908 <log_format_iovec@plt>
  409668:	stur	w0, [x29, #-100]
  40966c:	ldur	w9, [x29, #-100]
  409670:	tbnz	w9, #31, 4096ac <server_driver_message+0x34c>
  409674:	b	409678 <server_driver_message+0x318>
  409678:	ldur	x8, [x29, #-8]
  40967c:	ldur	x1, [x29, #-40]
  409680:	ldur	x2, [x29, #-48]
  409684:	ldur	x3, [x29, #-64]
  409688:	ldr	x4, [x8, #744]
  40968c:	ldur	w7, [x29, #-12]
  409690:	mov	x0, xzr
  409694:	mov	w6, #0x6                   	// #6
  409698:	str	x0, [x19, #40]
  40969c:	mov	x0, x8
  4096a0:	ldr	x5, [x19, #40]
  4096a4:	bl	40b0ec <dispatch_message_real>
  4096a8:	b	4096ac <server_driver_message+0x34c>
  4096ac:	b	4096b0 <server_driver_message+0x350>
  4096b0:	ldur	x8, [x29, #-56]
  4096b4:	ldur	x9, [x29, #-48]
  4096b8:	subs	x8, x8, x9
  4096bc:	b.cs	4096e4 <server_driver_message+0x384>  // b.hs, b.nlast
  4096c0:	b	4096c4 <server_driver_message+0x364>
  4096c4:	ldur	x8, [x29, #-40]
  4096c8:	ldur	x9, [x29, #-56]
  4096cc:	add	x10, x9, #0x1
  4096d0:	stur	x10, [x29, #-56]
  4096d4:	lsl	x9, x9, #4
  4096d8:	ldr	x0, [x8, x9]
  4096dc:	bl	405778 <free@plt>
  4096e0:	b	4096b0 <server_driver_message+0x350>
  4096e4:	ldur	w8, [x29, #-100]
  4096e8:	tbz	w8, #31, 409808 <server_driver_message+0x4a8>
  4096ec:	b	4096f0 <server_driver_message+0x390>
  4096f0:	b	4096f4 <server_driver_message+0x394>
  4096f4:	ldur	w0, [x29, #-100]
  4096f8:	bl	40f6a8 <strerror_safe>
  4096fc:	adrp	x2, 42a000 <_fini+0x3a8>
  409700:	add	x2, x2, #0x8dc
  409704:	mov	w8, #0x800                 	// #2048
  409708:	mov	w1, w8
  40970c:	add	x9, x19, #0x110
  409710:	str	x0, [x19, #32]
  409714:	mov	x0, x9
  409718:	ldr	x3, [x19, #32]
  40971c:	bl	405728 <snprintf@plt>
  409720:	mov	w1, w0
  409724:	sxtw	x9, w1
  409728:	subs	x9, x9, #0x800
  40972c:	b.cc	409758 <server_driver_message+0x3f8>  // b.lo, b.ul, b.last
  409730:	b	409734 <server_driver_message+0x3d4>
  409734:	adrp	x1, 42a000 <_fini+0x3a8>
  409738:	add	x1, x1, #0x8fe
  40973c:	adrp	x2, 42a000 <_fini+0x3a8>
  409740:	add	x2, x2, #0x3cb
  409744:	adrp	x4, 42a000 <_fini+0x3a8>
  409748:	add	x4, x4, #0x7dc
  40974c:	mov	w0, wzr
  409750:	mov	w3, #0x428                 	// #1064
  409754:	bl	405718 <log_assert_failed_realm@plt>
  409758:	b	40975c <server_driver_message+0x3fc>
  40975c:	mov	w8, #0x3                   	// #3
  409760:	mov	w9, w8
  409764:	stur	x9, [x29, #-48]
  409768:	ldur	x9, [x29, #-40]
  40976c:	ldur	x10, [x29, #-48]
  409770:	add	x11, x10, #0x1
  409774:	stur	x11, [x29, #-48]
  409778:	adrp	x11, 42a000 <_fini+0x3a8>
  40977c:	add	x11, x11, #0x921
  409780:	str	x11, [x19, #256]
  409784:	mov	w8, #0xa                   	// #10
  409788:	mov	w11, w8
  40978c:	str	x11, [x19, #264]
  409790:	ldr	q0, [x19, #256]
  409794:	str	q0, [x9, x10, lsl #4]
  409798:	ldur	x9, [x29, #-40]
  40979c:	ldur	x10, [x29, #-48]
  4097a0:	add	x11, x10, #0x1
  4097a4:	stur	x11, [x29, #-48]
  4097a8:	add	x11, x19, #0x110
  4097ac:	str	x11, [x19, #240]
  4097b0:	mov	x0, x11
  4097b4:	str	x9, [x19, #24]
  4097b8:	str	x10, [x19, #16]
  4097bc:	bl	405738 <strlen@plt>
  4097c0:	str	x0, [x19, #248]
  4097c4:	ldr	q0, [x19, #240]
  4097c8:	ldr	x9, [x19, #24]
  4097cc:	ldr	x10, [x19, #16]
  4097d0:	str	q0, [x9, x10, lsl #4]
  4097d4:	ldur	x9, [x29, #-8]
  4097d8:	ldur	x1, [x29, #-40]
  4097dc:	ldur	x2, [x29, #-48]
  4097e0:	ldur	x3, [x29, #-64]
  4097e4:	ldr	x4, [x9, #744]
  4097e8:	ldur	w7, [x29, #-12]
  4097ec:	mov	x0, xzr
  4097f0:	mov	w6, #0x6                   	// #6
  4097f4:	str	x0, [x19, #8]
  4097f8:	mov	x0, x9
  4097fc:	ldr	x5, [x19, #8]
  409800:	bl	40b0ec <dispatch_message_real>
  409804:	b	409808 <server_driver_message+0x4a8>
  409808:	mov	sp, x29
  40980c:	ldp	x28, x19, [sp, #16]
  409810:	ldp	x29, x30, [sp], #32
  409814:	ret

0000000000409818 <server_rotate>:
  409818:	sub	sp, sp, #0x1a0
  40981c:	stp	x29, x30, [sp, #384]
  409820:	str	x28, [sp, #400]
  409824:	add	x29, sp, #0x180
  409828:	sub	x8, x29, #0x88
  40982c:	mov	x9, xzr
  409830:	mov	w10, #0x7                   	// #7
  409834:	adrp	x11, 42a000 <_fini+0x3a8>
  409838:	add	x11, x11, #0x3c8
  40983c:	add	x11, x11, #0x3
  409840:	adrp	x12, 42a000 <_fini+0x3a8>
  409844:	add	x12, x12, #0x571
  409848:	str	x0, [x8, #128]
  40984c:	str	x9, [x8, #120]
  409850:	str	x9, [x8, #112]
  409854:	stur	w10, [x29, #-64]
  409858:	stur	wzr, [x29, #-68]
  40985c:	stur	wzr, [x29, #-72]
  409860:	ldur	w0, [x29, #-72]
  409864:	str	x8, [sp, #96]
  409868:	str	x11, [sp, #88]
  40986c:	str	x12, [sp, #80]
  409870:	bl	405638 <log_get_max_level_realm@plt>
  409874:	ldur	w10, [x29, #-64]
  409878:	and	w10, w10, #0x7
  40987c:	cmp	w0, w10
  409880:	b.lt	4098b4 <server_rotate+0x9c>  // b.tstop
  409884:	ldur	w8, [x29, #-72]
  409888:	ldur	w9, [x29, #-64]
  40988c:	orr	w0, w9, w8, lsl #10
  409890:	ldur	w1, [x29, #-68]
  409894:	ldr	x2, [sp, #88]
  409898:	mov	w3, #0x218                 	// #536
  40989c:	ldr	x4, [sp, #80]
  4098a0:	adrp	x5, 42a000 <_fini+0x3a8>
  4098a4:	add	x5, x5, #0x57f
  4098a8:	bl	405648 <log_internal_realm@plt>
  4098ac:	str	w0, [sp, #76]
  4098b0:	b	4098c8 <server_rotate+0xb0>
  4098b4:	ldur	w0, [x29, #-68]
  4098b8:	bl	405658 <abs@plt>
  4098bc:	mov	w8, wzr
  4098c0:	subs	w8, w8, w0, uxtb
  4098c4:	str	w8, [sp, #76]
  4098c8:	ldr	w8, [sp, #76]
  4098cc:	stur	w8, [x29, #-76]
  4098d0:	ldr	x9, [sp, #96]
  4098d4:	ldr	x0, [x9, #128]
  4098d8:	ldr	x10, [x9, #128]
  4098dc:	add	x1, x10, #0x98
  4098e0:	adrp	x2, 42a000 <_fini+0x3a8>
  4098e4:	add	x2, x2, #0x58b
  4098e8:	mov	w8, wzr
  4098ec:	and	w3, w8, #0x1
  4098f0:	mov	w8, wzr
  4098f4:	mov	w4, w8
  4098f8:	str	w8, [sp, #72]
  4098fc:	bl	40a234 <do_rotate>
  409900:	ldr	x9, [sp, #96]
  409904:	ldr	x10, [x9, #128]
  409908:	ldr	x11, [x9, #128]
  40990c:	add	x1, x11, #0xa0
  409910:	ldr	x11, [x9, #128]
  409914:	ldrb	w8, [x11, #456]
  409918:	mov	x0, x10
  40991c:	adrp	x2, 42a000 <_fini+0x3a8>
  409920:	add	x2, x2, #0x593
  409924:	and	w3, w8, #0x1
  409928:	ldr	w4, [sp, #72]
  40992c:	bl	40a234 <do_rotate>
  409930:	sub	x9, x29, #0x60
  409934:	mov	w8, #0xfffffffe            	// #-2
  409938:	stur	w8, [x29, #-96]
  40993c:	mov	x10, xzr
  409940:	str	x10, [x9, #8]
  409944:	ldr	x9, [sp, #96]
  409948:	ldur	q0, [x9, #40]
  40994c:	stur	q0, [x9, #88]
  409950:	ldr	x8, [sp, #96]
  409954:	ldr	x9, [x8, #128]
  409958:	ldr	x0, [x9, #168]
  40995c:	sub	x1, x29, #0x30
  409960:	sub	x2, x29, #0x20
  409964:	sub	x3, x29, #0x38
  409968:	bl	40a464 <ordered_hashmap_iterate>
  40996c:	tbnz	w0, #0, 409974 <server_rotate+0x15c>
  409970:	b	4099f8 <server_rotate+0x1e0>
  409974:	ldr	x8, [sp, #96]
  409978:	ldr	x0, [x8, #128]
  40997c:	ldr	x9, [x8, #128]
  409980:	ldrb	w10, [x9, #456]
  409984:	ldr	x9, [x8, #80]
  409988:	subs	x9, x9, #0x1
  40998c:	sub	x1, x29, #0x20
  409990:	adrp	x2, 42a000 <_fini+0x3a8>
  409994:	add	x2, x2, #0x59a
  409998:	and	w3, w10, #0x1
  40999c:	mov	w4, w9
  4099a0:	bl	40a234 <do_rotate>
  4099a4:	stur	w0, [x29, #-60]
  4099a8:	ldur	w9, [x29, #-60]
  4099ac:	cmp	w9, #0x0
  4099b0:	cset	w9, lt  // lt = tstop
  4099b4:	tbnz	w9, #0, 4099d4 <server_rotate+0x1bc>
  4099b8:	ldr	x8, [sp, #96]
  4099bc:	ldr	x9, [x8, #128]
  4099c0:	ldr	x0, [x9, #168]
  4099c4:	ldr	x1, [x8, #80]
  4099c8:	ldr	x2, [x8, #104]
  4099cc:	bl	40a4a4 <ordered_hashmap_replace>
  4099d0:	b	4099f4 <server_rotate+0x1dc>
  4099d4:	ldr	x8, [sp, #96]
  4099d8:	ldr	x9, [x8, #104]
  4099dc:	cbnz	x9, 4099f4 <server_rotate+0x1dc>
  4099e0:	ldr	x8, [sp, #96]
  4099e4:	ldr	x9, [x8, #128]
  4099e8:	ldr	x0, [x9, #168]
  4099ec:	ldr	x1, [x8, #80]
  4099f0:	bl	40a4d8 <ordered_hashmap_remove>
  4099f4:	b	409950 <server_rotate+0x138>
  4099f8:	ldr	x8, [sp, #96]
  4099fc:	ldr	x9, [x8, #128]
  409a00:	ldr	x9, [x9, #152]
  409a04:	cbnz	x9, 40a1ac <server_rotate+0x994>
  409a08:	ldr	x8, [sp, #96]
  409a0c:	ldr	x0, [x8, #128]
  409a10:	sub	x1, x29, #0x18
  409a14:	sub	x2, x29, #0x10
  409a18:	bl	40a504 <open_user_journal_directory>
  409a1c:	cmp	w0, #0x0
  409a20:	cset	w9, lt  // lt = tstop
  409a24:	tbnz	w9, #0, 40a1ac <server_rotate+0x994>
  409a28:	bl	405768 <__errno_location@plt>
  409a2c:	str	wzr, [x0]
  409a30:	ldr	x8, [sp, #96]
  409a34:	ldr	x0, [x8, #112]
  409a38:	bl	405918 <readdir64@plt>
  409a3c:	ldr	x8, [sp, #96]
  409a40:	str	x0, [x8, #32]
  409a44:	ldr	x8, [sp, #96]
  409a48:	ldr	x9, [x8, #32]
  409a4c:	cbnz	x9, 409aec <server_rotate+0x2d4>
  409a50:	bl	405768 <__errno_location@plt>
  409a54:	ldr	w8, [x0]
  409a58:	cmp	w8, #0x0
  409a5c:	cset	w8, le
  409a60:	tbnz	w8, #0, 409ae8 <server_rotate+0x2d0>
  409a64:	mov	w8, #0x4                   	// #4
  409a68:	stur	w8, [x29, #-108]
  409a6c:	bl	405768 <__errno_location@plt>
  409a70:	ldr	w8, [x0]
  409a74:	stur	w8, [x29, #-112]
  409a78:	stur	wzr, [x29, #-116]
  409a7c:	ldur	w0, [x29, #-116]
  409a80:	bl	405638 <log_get_max_level_realm@plt>
  409a84:	ldur	w8, [x29, #-108]
  409a88:	and	w8, w8, #0x7
  409a8c:	cmp	w0, w8
  409a90:	b.lt	409acc <server_rotate+0x2b4>  // b.tstop
  409a94:	ldur	w8, [x29, #-116]
  409a98:	ldur	w9, [x29, #-108]
  409a9c:	orr	w0, w9, w8, lsl #10
  409aa0:	ldur	w1, [x29, #-112]
  409aa4:	ldr	x10, [sp, #96]
  409aa8:	ldr	x6, [x10, #120]
  409aac:	ldr	x2, [sp, #88]
  409ab0:	mov	w3, #0x22f                 	// #559
  409ab4:	ldr	x4, [sp, #80]
  409ab8:	adrp	x5, 42a000 <_fini+0x3a8>
  409abc:	add	x5, x5, #0x59f
  409ac0:	bl	405648 <log_internal_realm@plt>
  409ac4:	str	w0, [sp, #68]
  409ac8:	b	409ae0 <server_rotate+0x2c8>
  409acc:	ldur	w0, [x29, #-112]
  409ad0:	bl	405658 <abs@plt>
  409ad4:	mov	w8, wzr
  409ad8:	subs	w8, w8, w0, uxtb
  409adc:	str	w8, [sp, #68]
  409ae0:	ldr	w8, [sp, #68]
  409ae4:	stur	w8, [x29, #-120]
  409ae8:	b	40a1ac <server_rotate+0x994>
  409aec:	ldr	x8, [sp, #96]
  409af0:	ldr	x9, [x8, #32]
  409af4:	add	x0, x9, #0x13
  409af8:	bl	405928 <hidden_or_backup_file@plt>
  409afc:	tbnz	w0, #0, 409b04 <server_rotate+0x2ec>
  409b00:	b	409b08 <server_rotate+0x2f0>
  409b04:	b	40a18c <server_rotate+0x974>
  409b08:	mov	x8, xzr
  409b0c:	ldr	x9, [sp, #96]
  409b10:	str	x8, [x9, #8]
  409b14:	str	x8, [x9]
  409b18:	mov	w10, #0xffffffff            	// #-1
  409b1c:	stur	w10, [x29, #-140]
  409b20:	ldr	x8, [x9, #32]
  409b24:	add	x0, x8, #0x13
  409b28:	adrp	x1, 42a000 <_fini+0x3a8>
  409b2c:	add	x1, x1, #0x5c4
  409b30:	bl	40a864 <startswith>
  409b34:	stur	x0, [x29, #-152]
  409b38:	ldur	x8, [x29, #-152]
  409b3c:	cbnz	x8, 409b4c <server_rotate+0x334>
  409b40:	mov	w8, #0x6                   	// #6
  409b44:	stur	w8, [x29, #-168]
  409b48:	b	40a150 <server_rotate+0x938>
  409b4c:	ldr	x8, [sp, #96]
  409b50:	ldr	x9, [x8, #32]
  409b54:	add	x0, x9, #0x13
  409b58:	adrp	x1, 42a000 <_fini+0x3a8>
  409b5c:	add	x1, x1, #0x5ca
  409b60:	bl	405938 <endswith@plt>
  409b64:	stur	x0, [x29, #-160]
  409b68:	ldur	x8, [x29, #-160]
  409b6c:	cbnz	x8, 409b7c <server_rotate+0x364>
  409b70:	mov	w8, #0x6                   	// #6
  409b74:	stur	w8, [x29, #-168]
  409b78:	b	40a150 <server_rotate+0x938>
  409b7c:	ldur	x0, [x29, #-152]
  409b80:	ldur	x8, [x29, #-160]
  409b84:	ldur	x9, [x29, #-152]
  409b88:	subs	x1, x8, x9
  409b8c:	bl	405948 <strndup@plt>
  409b90:	ldr	x8, [sp, #96]
  409b94:	str	x0, [x8, #8]
  409b98:	ldr	x9, [x8, #8]
  409b9c:	cbnz	x9, 409bc4 <server_rotate+0x3ac>
  409ba0:	mov	w8, wzr
  409ba4:	mov	w0, w8
  409ba8:	ldr	x1, [sp, #88]
  409bac:	mov	w2, #0x23e                 	// #574
  409bb0:	ldr	x3, [sp, #80]
  409bb4:	bl	405958 <log_oom_internal@plt>
  409bb8:	mov	w8, #0x4                   	// #4
  409bbc:	stur	w8, [x29, #-168]
  409bc0:	b	40a150 <server_rotate+0x938>
  409bc4:	ldr	x8, [sp, #96]
  409bc8:	ldr	x0, [x8, #8]
  409bcc:	sub	x1, x29, #0xa4
  409bd0:	bl	405968 <parse_uid@plt>
  409bd4:	stur	w0, [x29, #-60]
  409bd8:	ldur	w9, [x29, #-60]
  409bdc:	cmp	w9, #0x0
  409be0:	cset	w9, ge  // ge = tcont
  409be4:	tbnz	w9, #0, 409c78 <server_rotate+0x460>
  409be8:	mov	w8, #0x7                   	// #7
  409bec:	stur	w8, [x29, #-172]
  409bf0:	ldur	w8, [x29, #-60]
  409bf4:	stur	w8, [x29, #-176]
  409bf8:	stur	wzr, [x29, #-180]
  409bfc:	ldur	w0, [x29, #-180]
  409c00:	bl	405638 <log_get_max_level_realm@plt>
  409c04:	ldur	w8, [x29, #-172]
  409c08:	and	w8, w8, #0x7
  409c0c:	cmp	w0, w8
  409c10:	b.lt	409c50 <server_rotate+0x438>  // b.tstop
  409c14:	ldur	w8, [x29, #-180]
  409c18:	ldur	w9, [x29, #-172]
  409c1c:	orr	w0, w9, w8, lsl #10
  409c20:	ldur	w1, [x29, #-176]
  409c24:	ldr	x10, [sp, #96]
  409c28:	ldr	x11, [x10, #32]
  409c2c:	add	x6, x11, #0x13
  409c30:	ldr	x2, [sp, #88]
  409c34:	mov	w3, #0x244                 	// #580
  409c38:	ldr	x4, [sp, #80]
  409c3c:	adrp	x5, 42a000 <_fini+0x3a8>
  409c40:	add	x5, x5, #0x5d3
  409c44:	bl	405648 <log_internal_realm@plt>
  409c48:	str	w0, [sp, #64]
  409c4c:	b	409c64 <server_rotate+0x44c>
  409c50:	ldur	w0, [x29, #-176]
  409c54:	bl	405658 <abs@plt>
  409c58:	mov	w8, wzr
  409c5c:	subs	w8, w8, w0, uxtb
  409c60:	str	w8, [sp, #64]
  409c64:	ldr	w8, [sp, #64]
  409c68:	stur	w8, [x29, #-184]
  409c6c:	mov	w8, #0x6                   	// #6
  409c70:	stur	w8, [x29, #-168]
  409c74:	b	40a150 <server_rotate+0x938>
  409c78:	ldr	x8, [sp, #96]
  409c7c:	ldr	x9, [x8, #128]
  409c80:	ldr	x0, [x9, #168]
  409c84:	ldur	w10, [x29, #-164]
  409c88:	mov	w9, w10
  409c8c:	add	x9, x9, #0x1
  409c90:	mov	x1, x9
  409c94:	bl	40a8c4 <ordered_hashmap_contains>
  409c98:	tbnz	w0, #0, 409ca0 <server_rotate+0x488>
  409c9c:	b	409cac <server_rotate+0x494>
  409ca0:	mov	w8, #0x6                   	// #6
  409ca4:	stur	w8, [x29, #-168]
  409ca8:	b	40a150 <server_rotate+0x938>
  409cac:	ldr	x8, [sp, #96]
  409cb0:	ldr	x0, [x8, #120]
  409cb4:	ldr	x9, [x8, #32]
  409cb8:	add	x1, x9, #0x13
  409cbc:	mov	x9, xzr
  409cc0:	mov	x2, x9
  409cc4:	bl	4057e8 <strjoin_real@plt>
  409cc8:	ldr	x8, [sp, #96]
  409ccc:	str	x0, [x8]
  409cd0:	ldr	x9, [x8]
  409cd4:	cbnz	x9, 409cfc <server_rotate+0x4e4>
  409cd8:	mov	w8, wzr
  409cdc:	mov	w0, w8
  409ce0:	ldr	x1, [sp, #88]
  409ce4:	mov	w2, #0x24e                 	// #590
  409ce8:	ldr	x3, [sp, #80]
  409cec:	bl	405958 <log_oom_internal@plt>
  409cf0:	mov	w8, #0x4                   	// #4
  409cf4:	stur	w8, [x29, #-168]
  409cf8:	b	40a150 <server_rotate+0x938>
  409cfc:	ldr	x8, [sp, #96]
  409d00:	ldr	x0, [x8, #112]
  409d04:	bl	405978 <dirfd@plt>
  409d08:	ldr	x8, [sp, #96]
  409d0c:	ldr	x9, [x8, #32]
  409d10:	add	x1, x9, #0x13
  409d14:	mov	w2, #0x8902                	// #35074
  409d18:	movk	w2, #0x8, lsl #16
  409d1c:	bl	405988 <openat64@plt>
  409d20:	stur	w0, [x29, #-140]
  409d24:	ldur	w10, [x29, #-140]
  409d28:	cmp	w10, #0x0
  409d2c:	cset	w10, ge  // ge = tcont
  409d30:	tbnz	w10, #0, 409e24 <server_rotate+0x60c>
  409d34:	mov	w8, #0x0                   	// #0
  409d38:	sturb	w8, [x29, #-189]
  409d3c:	bl	405768 <__errno_location@plt>
  409d40:	ldr	w8, [x0]
  409d44:	cmp	w8, #0x2
  409d48:	str	w8, [sp, #60]
  409d4c:	b.eq	409d6c <server_rotate+0x554>  // b.none
  409d50:	b	409d54 <server_rotate+0x53c>
  409d54:	ldr	w8, [sp, #60]
  409d58:	cmp	w8, #0x28
  409d5c:	cset	w9, eq  // eq = none
  409d60:	eor	w9, w9, #0x1
  409d64:	tbnz	w9, #0, 409d78 <server_rotate+0x560>
  409d68:	b	409d6c <server_rotate+0x554>
  409d6c:	mov	w8, #0x1                   	// #1
  409d70:	sturb	w8, [x29, #-189]
  409d74:	b	409d78 <server_rotate+0x560>
  409d78:	ldurb	w8, [x29, #-189]
  409d7c:	and	w8, w8, #0x1
  409d80:	sturb	w8, [x29, #-190]
  409d84:	ldurb	w8, [x29, #-190]
  409d88:	mov	w9, #0x4                   	// #4
  409d8c:	mov	w10, #0x7                   	// #7
  409d90:	tst	w8, #0x1
  409d94:	csel	w8, w10, w9, ne  // ne = any
  409d98:	stur	w8, [x29, #-188]
  409d9c:	bl	405768 <__errno_location@plt>
  409da0:	ldr	w8, [x0]
  409da4:	str	w8, [sp, #188]
  409da8:	str	wzr, [sp, #184]
  409dac:	ldr	w0, [sp, #184]
  409db0:	bl	405638 <log_get_max_level_realm@plt>
  409db4:	ldur	w8, [x29, #-188]
  409db8:	and	w8, w8, #0x7
  409dbc:	cmp	w0, w8
  409dc0:	b.lt	409dfc <server_rotate+0x5e4>  // b.tstop
  409dc4:	ldr	w8, [sp, #184]
  409dc8:	ldur	w9, [x29, #-188]
  409dcc:	orr	w0, w9, w8, lsl #10
  409dd0:	ldr	w1, [sp, #188]
  409dd4:	ldr	x10, [sp, #96]
  409dd8:	ldr	x6, [x10]
  409ddc:	ldr	x2, [sp, #88]
  409de0:	mov	w3, #0x255                 	// #597
  409de4:	ldr	x4, [sp, #80]
  409de8:	adrp	x5, 42a000 <_fini+0x3a8>
  409dec:	add	x5, x5, #0x609
  409df0:	bl	405648 <log_internal_realm@plt>
  409df4:	str	w0, [sp, #56]
  409df8:	b	409e10 <server_rotate+0x5f8>
  409dfc:	ldr	w0, [sp, #188]
  409e00:	bl	405658 <abs@plt>
  409e04:	mov	w8, wzr
  409e08:	subs	w8, w8, w0, uxtb
  409e0c:	str	w8, [sp, #56]
  409e10:	ldr	w8, [sp, #56]
  409e14:	str	w8, [sp, #180]
  409e18:	mov	w8, #0x6                   	// #6
  409e1c:	stur	w8, [x29, #-168]
  409e20:	b	40a150 <server_rotate+0x938>
  409e24:	ldr	x8, [sp, #96]
  409e28:	ldr	x0, [x8, #128]
  409e2c:	bl	40a8f4 <server_vacuum_deferred_closes>
  409e30:	ldur	w0, [x29, #-140]
  409e34:	ldr	x8, [sp, #96]
  409e38:	ldr	x1, [x8]
  409e3c:	ldr	x9, [x8, #128]
  409e40:	ldrb	w10, [x9, #440]
  409e44:	ldr	x9, [x8, #128]
  409e48:	ldr	x5, [x9, #448]
  409e4c:	ldr	x9, [x8, #128]
  409e50:	ldrb	w11, [x9, #456]
  409e54:	ldr	x9, [x8, #128]
  409e58:	add	x7, x9, #0x160
  409e5c:	ldr	x9, [x8, #128]
  409e60:	ldr	x9, [x9, #568]
  409e64:	ldr	x12, [x8, #128]
  409e68:	ldr	x12, [x12, #576]
  409e6c:	mov	w2, #0x2                   	// #2
  409e70:	mov	w3, #0x1a0                 	// #416
  409e74:	and	w4, w10, #0x1
  409e78:	and	w6, w11, #0x1
  409e7c:	mov	x13, sp
  409e80:	str	x9, [x13]
  409e84:	mov	x9, sp
  409e88:	str	x12, [x9, #8]
  409e8c:	mov	x9, sp
  409e90:	mov	x12, xzr
  409e94:	str	x12, [x9, #16]
  409e98:	mov	x9, sp
  409e9c:	sub	x12, x29, #0x20
  409ea0:	str	x12, [x9, #24]
  409ea4:	bl	405998 <journal_file_open@plt>
  409ea8:	stur	w0, [x29, #-60]
  409eac:	ldur	w10, [x29, #-60]
  409eb0:	cmp	w10, #0x0
  409eb4:	cset	w10, ge  // ge = tcont
  409eb8:	tbnz	w10, #0, 40a078 <server_rotate+0x860>
  409ebc:	mov	w8, #0x4                   	// #4
  409ec0:	str	w8, [sp, #176]
  409ec4:	ldur	w8, [x29, #-60]
  409ec8:	str	w8, [sp, #172]
  409ecc:	str	wzr, [sp, #168]
  409ed0:	ldr	w0, [sp, #168]
  409ed4:	bl	405638 <log_get_max_level_realm@plt>
  409ed8:	ldr	w8, [sp, #176]
  409edc:	and	w8, w8, #0x7
  409ee0:	cmp	w0, w8
  409ee4:	b.lt	409f20 <server_rotate+0x708>  // b.tstop
  409ee8:	ldr	w8, [sp, #168]
  409eec:	ldr	w9, [sp, #176]
  409ef0:	orr	w0, w9, w8, lsl #10
  409ef4:	ldr	w1, [sp, #172]
  409ef8:	ldr	x10, [sp, #96]
  409efc:	ldr	x6, [x10]
  409f00:	ldr	x2, [sp, #88]
  409f04:	mov	w3, #0x26a                 	// #618
  409f08:	ldr	x4, [sp, #80]
  409f0c:	adrp	x5, 42a000 <_fini+0x3a8>
  409f10:	add	x5, x5, #0x63b
  409f14:	bl	405648 <log_internal_realm@plt>
  409f18:	str	w0, [sp, #52]
  409f1c:	b	409f34 <server_rotate+0x71c>
  409f20:	ldr	w0, [sp, #172]
  409f24:	bl	405658 <abs@plt>
  409f28:	mov	w8, wzr
  409f2c:	subs	w8, w8, w0, uxtb
  409f30:	str	w8, [sp, #52]
  409f34:	ldr	w8, [sp, #52]
  409f38:	str	w8, [sp, #164]
  409f3c:	ldr	x9, [sp, #96]
  409f40:	ldr	x0, [x9, #112]
  409f44:	bl	405978 <dirfd@plt>
  409f48:	ldr	x9, [sp, #96]
  409f4c:	ldr	x10, [x9, #32]
  409f50:	add	x1, x10, #0x13
  409f54:	bl	4059a8 <journal_file_dispose@plt>
  409f58:	stur	w0, [x29, #-60]
  409f5c:	ldur	w8, [x29, #-60]
  409f60:	cmp	w8, #0x0
  409f64:	cset	w8, ge  // ge = tcont
  409f68:	tbnz	w8, #0, 409ff0 <server_rotate+0x7d8>
  409f6c:	mov	w8, #0x4                   	// #4
  409f70:	str	w8, [sp, #160]
  409f74:	ldur	w8, [x29, #-60]
  409f78:	str	w8, [sp, #156]
  409f7c:	str	wzr, [sp, #152]
  409f80:	ldr	w0, [sp, #152]
  409f84:	bl	405638 <log_get_max_level_realm@plt>
  409f88:	ldr	w8, [sp, #160]
  409f8c:	and	w8, w8, #0x7
  409f90:	cmp	w0, w8
  409f94:	b.lt	409fd0 <server_rotate+0x7b8>  // b.tstop
  409f98:	ldr	w8, [sp, #152]
  409f9c:	ldr	w9, [sp, #160]
  409fa0:	orr	w0, w9, w8, lsl #10
  409fa4:	ldr	w1, [sp, #156]
  409fa8:	ldr	x10, [sp, #96]
  409fac:	ldr	x6, [x10]
  409fb0:	ldr	x2, [sp, #88]
  409fb4:	mov	w3, #0x26e                 	// #622
  409fb8:	ldr	x4, [sp, #80]
  409fbc:	adrp	x5, 42a000 <_fini+0x3a8>
  409fc0:	add	x5, x5, #0x68d
  409fc4:	bl	405648 <log_internal_realm@plt>
  409fc8:	str	w0, [sp, #48]
  409fcc:	b	409fe4 <server_rotate+0x7cc>
  409fd0:	ldr	w0, [sp, #156]
  409fd4:	bl	405658 <abs@plt>
  409fd8:	mov	w8, wzr
  409fdc:	subs	w8, w8, w0, uxtb
  409fe0:	str	w8, [sp, #48]
  409fe4:	ldr	w8, [sp, #48]
  409fe8:	str	w8, [sp, #148]
  409fec:	b	40a06c <server_rotate+0x854>
  409ff0:	mov	w8, #0x7                   	// #7
  409ff4:	str	w8, [sp, #144]
  409ff8:	str	wzr, [sp, #140]
  409ffc:	str	wzr, [sp, #136]
  40a000:	ldr	w0, [sp, #136]
  40a004:	bl	405638 <log_get_max_level_realm@plt>
  40a008:	ldr	w8, [sp, #144]
  40a00c:	and	w8, w8, #0x7
  40a010:	cmp	w0, w8
  40a014:	b.lt	40a050 <server_rotate+0x838>  // b.tstop
  40a018:	ldr	w8, [sp, #136]
  40a01c:	ldr	w9, [sp, #144]
  40a020:	orr	w0, w9, w8, lsl #10
  40a024:	ldr	w1, [sp, #140]
  40a028:	ldr	x10, [sp, #96]
  40a02c:	ldr	x6, [x10]
  40a030:	ldr	x2, [sp, #88]
  40a034:	mov	w3, #0x270                 	// #624
  40a038:	ldr	x4, [sp, #80]
  40a03c:	adrp	x5, 42a000 <_fini+0x3a8>
  40a040:	add	x5, x5, #0x6bc
  40a044:	bl	405648 <log_internal_realm@plt>
  40a048:	str	w0, [sp, #44]
  40a04c:	b	40a064 <server_rotate+0x84c>
  40a050:	ldr	w0, [sp, #140]
  40a054:	bl	405658 <abs@plt>
  40a058:	mov	w8, wzr
  40a05c:	subs	w8, w8, w0, uxtb
  40a060:	str	w8, [sp, #44]
  40a064:	ldr	w8, [sp, #44]
  40a068:	str	w8, [sp, #132]
  40a06c:	mov	w8, #0x6                   	// #6
  40a070:	stur	w8, [x29, #-168]
  40a074:	b	40a150 <server_rotate+0x938>
  40a078:	ldur	w8, [x29, #-140]
  40a07c:	str	w8, [sp, #128]
  40a080:	mov	w8, #0xffffffff            	// #-1
  40a084:	stur	w8, [x29, #-140]
  40a088:	ldr	w8, [sp, #128]
  40a08c:	str	w8, [sp, #124]
  40a090:	ldr	x9, [sp, #96]
  40a094:	ldr	x0, [x9, #104]
  40a098:	bl	4059b8 <journal_file_archive@plt>
  40a09c:	stur	w0, [x29, #-60]
  40a0a0:	ldur	w8, [x29, #-60]
  40a0a4:	cmp	w8, #0x0
  40a0a8:	cset	w8, ge  // ge = tcont
  40a0ac:	tbnz	w8, #0, 40a130 <server_rotate+0x918>
  40a0b0:	mov	w8, #0x7                   	// #7
  40a0b4:	str	w8, [sp, #120]
  40a0b8:	ldur	w8, [x29, #-60]
  40a0bc:	str	w8, [sp, #116]
  40a0c0:	str	wzr, [sp, #112]
  40a0c4:	ldr	w0, [sp, #112]
  40a0c8:	bl	405638 <log_get_max_level_realm@plt>
  40a0cc:	ldr	w8, [sp, #120]
  40a0d0:	and	w8, w8, #0x7
  40a0d4:	cmp	w0, w8
  40a0d8:	b.lt	40a114 <server_rotate+0x8fc>  // b.tstop
  40a0dc:	ldr	w8, [sp, #112]
  40a0e0:	ldr	w9, [sp, #120]
  40a0e4:	orr	w0, w9, w8, lsl #10
  40a0e8:	ldr	w1, [sp, #116]
  40a0ec:	ldr	x10, [sp, #96]
  40a0f0:	ldr	x6, [x10]
  40a0f4:	ldr	x2, [sp, #88]
  40a0f8:	mov	w3, #0x279                 	// #633
  40a0fc:	ldr	x4, [sp, #80]
  40a100:	adrp	x5, 42a000 <_fini+0x3a8>
  40a104:	add	x5, x5, #0x6e2
  40a108:	bl	405648 <log_internal_realm@plt>
  40a10c:	str	w0, [sp, #40]
  40a110:	b	40a128 <server_rotate+0x910>
  40a114:	ldr	w0, [sp, #116]
  40a118:	bl	405658 <abs@plt>
  40a11c:	mov	w8, wzr
  40a120:	subs	w8, w8, w0, uxtb
  40a124:	str	w8, [sp, #40]
  40a128:	ldr	w8, [sp, #40]
  40a12c:	str	w8, [sp, #108]
  40a130:	ldr	x8, [sp, #96]
  40a134:	ldr	x0, [x8, #104]
  40a138:	ldr	x9, [x8, #128]
  40a13c:	ldr	x1, [x9, #576]
  40a140:	bl	4059c8 <journal_initiate_close@plt>
  40a144:	ldr	x8, [sp, #96]
  40a148:	str	x0, [x8, #104]
  40a14c:	stur	wzr, [x29, #-168]
  40a150:	sub	x0, x29, #0x8c
  40a154:	bl	40a83c <closep>
  40a158:	sub	x0, x29, #0x88
  40a15c:	bl	40a1d8 <freep>
  40a160:	sub	x0, x29, #0x80
  40a164:	bl	40a1d8 <freep>
  40a168:	ldur	w8, [x29, #-168]
  40a16c:	str	w8, [sp, #36]
  40a170:	cbz	w8, 40a18c <server_rotate+0x974>
  40a174:	b	40a178 <server_rotate+0x960>
  40a178:	ldr	w8, [sp, #36]
  40a17c:	cmp	w8, #0x4
  40a180:	b.eq	40a1ac <server_rotate+0x994>  // b.none
  40a184:	b	40a188 <server_rotate+0x970>
  40a188:	b	40a18c <server_rotate+0x974>
  40a18c:	bl	405768 <__errno_location@plt>
  40a190:	str	wzr, [x0]
  40a194:	ldr	x8, [sp, #96]
  40a198:	ldr	x0, [x8, #112]
  40a19c:	bl	405918 <readdir64@plt>
  40a1a0:	ldr	x8, [sp, #96]
  40a1a4:	str	x0, [x8, #32]
  40a1a8:	b	409a44 <server_rotate+0x22c>
  40a1ac:	ldr	x8, [sp, #96]
  40a1b0:	ldr	x0, [x8, #128]
  40a1b4:	bl	40aa0c <server_process_deferred_closes>
  40a1b8:	sub	x0, x29, #0x18
  40a1bc:	bl	40a200 <closedirp>
  40a1c0:	sub	x0, x29, #0x10
  40a1c4:	bl	40a1d8 <freep>
  40a1c8:	ldr	x28, [sp, #400]
  40a1cc:	ldp	x29, x30, [sp, #384]
  40a1d0:	add	sp, sp, #0x1a0
  40a1d4:	ret

000000000040a1d8 <freep>:
  40a1d8:	sub	sp, sp, #0x20
  40a1dc:	stp	x29, x30, [sp, #16]
  40a1e0:	add	x29, sp, #0x10
  40a1e4:	str	x0, [sp, #8]
  40a1e8:	ldr	x8, [sp, #8]
  40a1ec:	ldr	x0, [x8]
  40a1f0:	bl	405778 <free@plt>
  40a1f4:	ldp	x29, x30, [sp, #16]
  40a1f8:	add	sp, sp, #0x20
  40a1fc:	ret

000000000040a200 <closedirp>:
  40a200:	sub	sp, sp, #0x20
  40a204:	stp	x29, x30, [sp, #16]
  40a208:	add	x29, sp, #0x10
  40a20c:	str	x0, [sp, #8]
  40a210:	ldr	x8, [sp, #8]
  40a214:	ldr	x8, [x8]
  40a218:	cbz	x8, 40a228 <closedirp+0x28>
  40a21c:	ldr	x8, [sp, #8]
  40a220:	ldr	x0, [x8]
  40a224:	bl	4059d8 <closedir@plt>
  40a228:	ldp	x29, x30, [sp, #16]
  40a22c:	add	sp, sp, #0x20
  40a230:	ret

000000000040a234 <do_rotate>:
  40a234:	sub	sp, sp, #0x70
  40a238:	stp	x29, x30, [sp, #96]
  40a23c:	add	x29, sp, #0x60
  40a240:	adrp	x8, 42a000 <_fini+0x3a8>
  40a244:	add	x8, x8, #0x3c8
  40a248:	add	x8, x8, #0x3
  40a24c:	stur	x0, [x29, #-16]
  40a250:	stur	x1, [x29, #-24]
  40a254:	stur	x2, [x29, #-32]
  40a258:	and	w9, w3, #0x1
  40a25c:	sturb	w9, [x29, #-33]
  40a260:	stur	w4, [x29, #-40]
  40a264:	str	x8, [sp, #8]
  40a268:	ldur	x8, [x29, #-16]
  40a26c:	cmp	x8, #0x0
  40a270:	cset	w9, ne  // ne = any
  40a274:	mov	w10, #0x1                   	// #1
  40a278:	eor	w9, w9, #0x1
  40a27c:	eor	w9, w9, w10
  40a280:	eor	w9, w9, w10
  40a284:	and	w9, w9, #0x1
  40a288:	mov	w0, w9
  40a28c:	sxtw	x8, w0
  40a290:	cbz	x8, 40a2b8 <do_rotate+0x84>
  40a294:	mov	w8, wzr
  40a298:	mov	w0, w8
  40a29c:	adrp	x1, 429000 <journal_ratelimit_group_free+0x70>
  40a2a0:	add	x1, x1, #0xdc8
  40a2a4:	ldr	x2, [sp, #8]
  40a2a8:	mov	w3, #0x1c2                 	// #450
  40a2ac:	adrp	x4, 42b000 <_fini+0x13a8>
  40a2b0:	add	x4, x4, #0x4ba
  40a2b4:	bl	405718 <log_assert_failed_realm@plt>
  40a2b8:	ldur	x8, [x29, #-24]
  40a2bc:	ldr	x8, [x8]
  40a2c0:	cbnz	x8, 40a2d0 <do_rotate+0x9c>
  40a2c4:	mov	w8, #0xffffffea            	// #-22
  40a2c8:	stur	w8, [x29, #-4]
  40a2cc:	b	40a454 <do_rotate+0x220>
  40a2d0:	ldur	x0, [x29, #-24]
  40a2d4:	ldur	x8, [x29, #-16]
  40a2d8:	ldrb	w9, [x8, #440]
  40a2dc:	ldur	x8, [x29, #-16]
  40a2e0:	ldr	x2, [x8, #448]
  40a2e4:	ldurb	w10, [x29, #-33]
  40a2e8:	ldur	x8, [x29, #-16]
  40a2ec:	ldr	x4, [x8, #576]
  40a2f0:	and	w1, w9, #0x1
  40a2f4:	and	w3, w10, #0x1
  40a2f8:	bl	4059e8 <journal_file_rotate@plt>
  40a2fc:	stur	w0, [x29, #-44]
  40a300:	ldur	w9, [x29, #-44]
  40a304:	cmp	w9, #0x0
  40a308:	cset	w9, ge  // ge = tcont
  40a30c:	tbnz	w9, #0, 40a43c <do_rotate+0x208>
  40a310:	ldur	x8, [x29, #-24]
  40a314:	ldr	x8, [x8]
  40a318:	cbz	x8, 40a3b0 <do_rotate+0x17c>
  40a31c:	mov	w8, #0x3                   	// #3
  40a320:	str	w8, [sp, #48]
  40a324:	ldur	w8, [x29, #-44]
  40a328:	str	w8, [sp, #44]
  40a32c:	str	wzr, [sp, #40]
  40a330:	ldr	w0, [sp, #40]
  40a334:	bl	405638 <log_get_max_level_realm@plt>
  40a338:	ldr	w8, [sp, #48]
  40a33c:	and	w8, w8, #0x7
  40a340:	cmp	w0, w8
  40a344:	b.lt	40a388 <do_rotate+0x154>  // b.tstop
  40a348:	ldr	w8, [sp, #40]
  40a34c:	ldr	w9, [sp, #48]
  40a350:	orr	w0, w9, w8, lsl #10
  40a354:	ldr	w1, [sp, #44]
  40a358:	ldur	x10, [x29, #-24]
  40a35c:	ldr	x10, [x10]
  40a360:	ldr	x6, [x10, #48]
  40a364:	ldr	x2, [sp, #8]
  40a368:	mov	w3, #0x1ca                 	// #458
  40a36c:	adrp	x4, 42b000 <_fini+0x13a8>
  40a370:	add	x4, x4, #0x501
  40a374:	adrp	x5, 42b000 <_fini+0x13a8>
  40a378:	add	x5, x5, #0x50b
  40a37c:	bl	405648 <log_internal_realm@plt>
  40a380:	str	w0, [sp, #4]
  40a384:	b	40a39c <do_rotate+0x168>
  40a388:	ldr	w0, [sp, #44]
  40a38c:	bl	405658 <abs@plt>
  40a390:	mov	w8, wzr
  40a394:	subs	w8, w8, w0, uxtb
  40a398:	str	w8, [sp, #4]
  40a39c:	ldr	w8, [sp, #4]
  40a3a0:	str	w8, [sp, #36]
  40a3a4:	ldr	w8, [sp, #36]
  40a3a8:	stur	w8, [x29, #-4]
  40a3ac:	b	40a454 <do_rotate+0x220>
  40a3b0:	mov	w8, #0x3                   	// #3
  40a3b4:	str	w8, [sp, #32]
  40a3b8:	ldur	w8, [x29, #-44]
  40a3bc:	str	w8, [sp, #28]
  40a3c0:	str	wzr, [sp, #24]
  40a3c4:	ldr	w0, [sp, #24]
  40a3c8:	bl	405638 <log_get_max_level_realm@plt>
  40a3cc:	ldr	w8, [sp, #32]
  40a3d0:	and	w8, w8, #0x7
  40a3d4:	cmp	w0, w8
  40a3d8:	b.lt	40a414 <do_rotate+0x1e0>  // b.tstop
  40a3dc:	ldr	w8, [sp, #24]
  40a3e0:	ldr	w9, [sp, #32]
  40a3e4:	orr	w0, w9, w8, lsl #10
  40a3e8:	ldr	w1, [sp, #28]
  40a3ec:	ldur	x6, [x29, #-32]
  40a3f0:	ldr	x2, [sp, #8]
  40a3f4:	mov	w3, #0x1cc                 	// #460
  40a3f8:	adrp	x4, 42b000 <_fini+0x13a8>
  40a3fc:	add	x4, x4, #0x501
  40a400:	adrp	x5, 42b000 <_fini+0x13a8>
  40a404:	add	x5, x5, #0x523
  40a408:	bl	405648 <log_internal_realm@plt>
  40a40c:	str	w0, [sp]
  40a410:	b	40a428 <do_rotate+0x1f4>
  40a414:	ldr	w0, [sp, #28]
  40a418:	bl	405658 <abs@plt>
  40a41c:	mov	w8, wzr
  40a420:	subs	w8, w8, w0, uxtb
  40a424:	str	w8, [sp]
  40a428:	ldr	w8, [sp]
  40a42c:	str	w8, [sp, #20]
  40a430:	ldr	w8, [sp, #20]
  40a434:	stur	w8, [x29, #-4]
  40a438:	b	40a454 <do_rotate+0x220>
  40a43c:	ldur	x8, [x29, #-24]
  40a440:	ldr	x0, [x8]
  40a444:	ldur	w1, [x29, #-40]
  40a448:	bl	415d1c <server_add_acls>
  40a44c:	ldur	w9, [x29, #-44]
  40a450:	stur	w9, [x29, #-4]
  40a454:	ldur	w0, [x29, #-4]
  40a458:	ldp	x29, x30, [sp, #96]
  40a45c:	add	sp, sp, #0x70
  40a460:	ret

000000000040a464 <ordered_hashmap_iterate>:
  40a464:	sub	sp, sp, #0x30
  40a468:	stp	x29, x30, [sp, #32]
  40a46c:	add	x29, sp, #0x20
  40a470:	stur	x0, [x29, #-8]
  40a474:	str	x1, [sp, #16]
  40a478:	str	x2, [sp, #8]
  40a47c:	str	x3, [sp]
  40a480:	ldur	x0, [x29, #-8]
  40a484:	ldr	x1, [sp, #16]
  40a488:	ldr	x2, [sp, #8]
  40a48c:	ldr	x3, [sp]
  40a490:	bl	4059f8 <internal_hashmap_iterate@plt>
  40a494:	and	w0, w0, #0x1
  40a498:	ldp	x29, x30, [sp, #32]
  40a49c:	add	sp, sp, #0x30
  40a4a0:	ret

000000000040a4a4 <ordered_hashmap_replace>:
  40a4a4:	sub	sp, sp, #0x30
  40a4a8:	stp	x29, x30, [sp, #32]
  40a4ac:	add	x29, sp, #0x20
  40a4b0:	stur	x0, [x29, #-8]
  40a4b4:	str	x1, [sp, #16]
  40a4b8:	str	x2, [sp, #8]
  40a4bc:	ldur	x0, [x29, #-8]
  40a4c0:	ldr	x1, [sp, #16]
  40a4c4:	ldr	x2, [sp, #8]
  40a4c8:	bl	405a08 <hashmap_replace@plt>
  40a4cc:	ldp	x29, x30, [sp, #32]
  40a4d0:	add	sp, sp, #0x30
  40a4d4:	ret

000000000040a4d8 <ordered_hashmap_remove>:
  40a4d8:	sub	sp, sp, #0x20
  40a4dc:	stp	x29, x30, [sp, #16]
  40a4e0:	add	x29, sp, #0x10
  40a4e4:	str	x0, [sp, #8]
  40a4e8:	str	x1, [sp]
  40a4ec:	ldr	x0, [sp, #8]
  40a4f0:	ldr	x1, [sp]
  40a4f4:	bl	405a18 <internal_hashmap_remove@plt>
  40a4f8:	ldp	x29, x30, [sp, #16]
  40a4fc:	add	sp, sp, #0x20
  40a500:	ret

000000000040a504 <open_user_journal_directory>:
  40a504:	sub	sp, sp, #0x100
  40a508:	stp	x29, x30, [sp, #240]
  40a50c:	add	x29, sp, #0xf0
  40a510:	mov	x8, xzr
  40a514:	adrp	x9, 42a000 <_fini+0x3a8>
  40a518:	add	x9, x9, #0x3c8
  40a51c:	add	x9, x9, #0x3
  40a520:	adrp	x10, 42b000 <_fini+0x13a8>
  40a524:	add	x10, x10, #0x5e5
  40a528:	stur	x0, [x29, #-16]
  40a52c:	stur	x1, [x29, #-24]
  40a530:	stur	x2, [x29, #-32]
  40a534:	stur	x8, [x29, #-40]
  40a538:	stur	x8, [x29, #-48]
  40a53c:	str	x9, [sp, #96]
  40a540:	str	x10, [sp, #88]
  40a544:	ldur	x8, [x29, #-16]
  40a548:	cmp	x8, #0x0
  40a54c:	cset	w9, ne  // ne = any
  40a550:	mov	w10, #0x1                   	// #1
  40a554:	eor	w9, w9, #0x1
  40a558:	eor	w9, w9, w10
  40a55c:	eor	w9, w9, w10
  40a560:	and	w9, w9, #0x1
  40a564:	mov	w0, w9
  40a568:	sxtw	x8, w0
  40a56c:	cbz	x8, 40a594 <open_user_journal_directory+0x90>
  40a570:	mov	w8, wzr
  40a574:	mov	w0, w8
  40a578:	adrp	x1, 429000 <journal_ratelimit_group_free+0x70>
  40a57c:	add	x1, x1, #0xdc8
  40a580:	ldr	x2, [sp, #96]
  40a584:	mov	w3, #0x1fb                 	// #507
  40a588:	adrp	x4, 42b000 <_fini+0x13a8>
  40a58c:	add	x4, x4, #0x5aa
  40a590:	bl	405718 <log_assert_failed_realm@plt>
  40a594:	sub	x0, x29, #0x40
  40a598:	bl	405a28 <sd_id128_get_machine@plt>
  40a59c:	stur	w0, [x29, #-68]
  40a5a0:	ldur	w8, [x29, #-68]
  40a5a4:	cmp	w8, #0x0
  40a5a8:	cset	w8, ge  // ge = tcont
  40a5ac:	tbnz	w8, #0, 40a63c <open_user_journal_directory+0x138>
  40a5b0:	mov	w8, #0x3                   	// #3
  40a5b4:	stur	w8, [x29, #-72]
  40a5b8:	ldur	w8, [x29, #-68]
  40a5bc:	stur	w8, [x29, #-76]
  40a5c0:	stur	wzr, [x29, #-80]
  40a5c4:	ldur	w0, [x29, #-80]
  40a5c8:	bl	405638 <log_get_max_level_realm@plt>
  40a5cc:	ldur	w8, [x29, #-72]
  40a5d0:	and	w8, w8, #0x7
  40a5d4:	cmp	w0, w8
  40a5d8:	b.lt	40a60c <open_user_journal_directory+0x108>  // b.tstop
  40a5dc:	ldur	w8, [x29, #-80]
  40a5e0:	ldur	w9, [x29, #-72]
  40a5e4:	orr	w0, w9, w8, lsl #10
  40a5e8:	ldur	w1, [x29, #-76]
  40a5ec:	ldr	x2, [sp, #96]
  40a5f0:	mov	w3, #0x1ff                 	// #511
  40a5f4:	ldr	x4, [sp, #88]
  40a5f8:	adrp	x5, 42b000 <_fini+0x13a8>
  40a5fc:	add	x5, x5, #0x601
  40a600:	bl	405648 <log_internal_realm@plt>
  40a604:	str	w0, [sp, #84]
  40a608:	b	40a620 <open_user_journal_directory+0x11c>
  40a60c:	ldur	w0, [x29, #-76]
  40a610:	bl	405658 <abs@plt>
  40a614:	mov	w8, wzr
  40a618:	subs	w8, w8, w0, uxtb
  40a61c:	str	w8, [sp, #84]
  40a620:	ldr	w8, [sp, #84]
  40a624:	stur	w8, [x29, #-84]
  40a628:	ldur	w8, [x29, #-84]
  40a62c:	stur	w8, [x29, #-4]
  40a630:	mov	w8, #0x1                   	// #1
  40a634:	stur	w8, [x29, #-88]
  40a638:	b	40a81c <open_user_journal_directory+0x318>
  40a63c:	ldurb	w2, [x29, #-64]
  40a640:	ldurb	w3, [x29, #-63]
  40a644:	ldurb	w4, [x29, #-62]
  40a648:	ldurb	w5, [x29, #-61]
  40a64c:	ldurb	w6, [x29, #-60]
  40a650:	ldurb	w7, [x29, #-59]
  40a654:	ldurb	w8, [x29, #-58]
  40a658:	ldurb	w9, [x29, #-57]
  40a65c:	ldurb	w10, [x29, #-56]
  40a660:	ldurb	w11, [x29, #-55]
  40a664:	ldurb	w12, [x29, #-54]
  40a668:	ldurb	w13, [x29, #-53]
  40a66c:	ldurb	w14, [x29, #-52]
  40a670:	ldurb	w15, [x29, #-51]
  40a674:	ldurb	w16, [x29, #-50]
  40a678:	ldurb	w17, [x29, #-49]
  40a67c:	sub	x0, x29, #0x30
  40a680:	adrp	x1, 42b000 <_fini+0x13a8>
  40a684:	add	x1, x1, #0x62e
  40a688:	mov	x18, sp
  40a68c:	str	w8, [x18]
  40a690:	mov	x18, sp
  40a694:	str	w9, [x18, #8]
  40a698:	mov	x18, sp
  40a69c:	str	w10, [x18, #16]
  40a6a0:	mov	x18, sp
  40a6a4:	str	w11, [x18, #24]
  40a6a8:	mov	x18, sp
  40a6ac:	str	w12, [x18, #32]
  40a6b0:	mov	x18, sp
  40a6b4:	str	w13, [x18, #40]
  40a6b8:	mov	x18, sp
  40a6bc:	str	w14, [x18, #48]
  40a6c0:	mov	x18, sp
  40a6c4:	str	w15, [x18, #56]
  40a6c8:	mov	x18, sp
  40a6cc:	str	w16, [x18, #64]
  40a6d0:	mov	x18, sp
  40a6d4:	str	w17, [x18, #72]
  40a6d8:	bl	405828 <asprintf@plt>
  40a6dc:	cmp	w0, #0x0
  40a6e0:	cset	w8, ge  // ge = tcont
  40a6e4:	tbnz	w8, #0, 40a710 <open_user_journal_directory+0x20c>
  40a6e8:	mov	w8, wzr
  40a6ec:	mov	w0, w8
  40a6f0:	ldr	x1, [sp, #96]
  40a6f4:	mov	w2, #0x202                 	// #514
  40a6f8:	ldr	x3, [sp, #88]
  40a6fc:	bl	405958 <log_oom_internal@plt>
  40a700:	stur	w0, [x29, #-4]
  40a704:	mov	w8, #0x1                   	// #1
  40a708:	stur	w8, [x29, #-88]
  40a70c:	b	40a81c <open_user_journal_directory+0x318>
  40a710:	ldur	x0, [x29, #-48]
  40a714:	bl	405a38 <opendir@plt>
  40a718:	stur	x0, [x29, #-40]
  40a71c:	ldur	x8, [x29, #-40]
  40a720:	cbnz	x8, 40a7b8 <open_user_journal_directory+0x2b4>
  40a724:	mov	w8, #0x3                   	// #3
  40a728:	stur	w8, [x29, #-92]
  40a72c:	bl	405768 <__errno_location@plt>
  40a730:	ldr	w8, [x0]
  40a734:	stur	w8, [x29, #-96]
  40a738:	stur	wzr, [x29, #-100]
  40a73c:	ldur	w0, [x29, #-100]
  40a740:	bl	405638 <log_get_max_level_realm@plt>
  40a744:	ldur	w8, [x29, #-92]
  40a748:	and	w8, w8, #0x7
  40a74c:	cmp	w0, w8
  40a750:	b.lt	40a788 <open_user_journal_directory+0x284>  // b.tstop
  40a754:	ldur	w8, [x29, #-100]
  40a758:	ldur	w9, [x29, #-92]
  40a75c:	orr	w0, w9, w8, lsl #10
  40a760:	ldur	w1, [x29, #-96]
  40a764:	ldur	x6, [x29, #-48]
  40a768:	ldr	x2, [sp, #96]
  40a76c:	mov	w3, #0x206                 	// #518
  40a770:	ldr	x4, [sp, #88]
  40a774:	adrp	x5, 42b000 <_fini+0x13a8>
  40a778:	add	x5, x5, #0x681
  40a77c:	bl	405648 <log_internal_realm@plt>
  40a780:	str	w0, [sp, #80]
  40a784:	b	40a79c <open_user_journal_directory+0x298>
  40a788:	ldur	w0, [x29, #-96]
  40a78c:	bl	405658 <abs@plt>
  40a790:	mov	w8, wzr
  40a794:	subs	w8, w8, w0, uxtb
  40a798:	str	w8, [sp, #80]
  40a79c:	ldr	w8, [sp, #80]
  40a7a0:	stur	w8, [x29, #-104]
  40a7a4:	ldur	w8, [x29, #-104]
  40a7a8:	stur	w8, [x29, #-4]
  40a7ac:	mov	w8, #0x1                   	// #1
  40a7b0:	stur	w8, [x29, #-88]
  40a7b4:	b	40a81c <open_user_journal_directory+0x318>
  40a7b8:	ldur	x8, [x29, #-24]
  40a7bc:	cbz	x8, 40a7e4 <open_user_journal_directory+0x2e0>
  40a7c0:	ldur	x8, [x29, #-40]
  40a7c4:	stur	x8, [x29, #-112]
  40a7c8:	mov	x8, xzr
  40a7cc:	stur	x8, [x29, #-40]
  40a7d0:	ldur	x8, [x29, #-112]
  40a7d4:	str	x8, [sp, #120]
  40a7d8:	ldr	x8, [sp, #120]
  40a7dc:	ldur	x9, [x29, #-24]
  40a7e0:	str	x8, [x9]
  40a7e4:	ldur	x8, [x29, #-32]
  40a7e8:	cbz	x8, 40a810 <open_user_journal_directory+0x30c>
  40a7ec:	ldur	x8, [x29, #-48]
  40a7f0:	str	x8, [sp, #112]
  40a7f4:	mov	x8, xzr
  40a7f8:	stur	x8, [x29, #-48]
  40a7fc:	ldr	x8, [sp, #112]
  40a800:	str	x8, [sp, #104]
  40a804:	ldr	x8, [sp, #104]
  40a808:	ldur	x9, [x29, #-32]
  40a80c:	str	x8, [x9]
  40a810:	stur	wzr, [x29, #-4]
  40a814:	mov	w8, #0x1                   	// #1
  40a818:	stur	w8, [x29, #-88]
  40a81c:	sub	x0, x29, #0x30
  40a820:	bl	40a1d8 <freep>
  40a824:	sub	x0, x29, #0x28
  40a828:	bl	40a200 <closedirp>
  40a82c:	ldur	w0, [x29, #-4]
  40a830:	ldp	x29, x30, [sp, #240]
  40a834:	add	sp, sp, #0x100
  40a838:	ret

000000000040a83c <closep>:
  40a83c:	sub	sp, sp, #0x20
  40a840:	stp	x29, x30, [sp, #16]
  40a844:	add	x29, sp, #0x10
  40a848:	str	x0, [sp, #8]
  40a84c:	ldr	x8, [sp, #8]
  40a850:	ldr	w0, [x8]
  40a854:	bl	4058c8 <safe_close@plt>
  40a858:	ldp	x29, x30, [sp, #16]
  40a85c:	add	sp, sp, #0x20
  40a860:	ret

000000000040a864 <startswith>:
  40a864:	sub	sp, sp, #0x30
  40a868:	stp	x29, x30, [sp, #32]
  40a86c:	add	x29, sp, #0x20
  40a870:	str	x0, [sp, #16]
  40a874:	str	x1, [sp, #8]
  40a878:	ldr	x0, [sp, #8]
  40a87c:	bl	405738 <strlen@plt>
  40a880:	str	x0, [sp]
  40a884:	ldr	x0, [sp, #16]
  40a888:	ldr	x1, [sp, #8]
  40a88c:	ldr	x2, [sp]
  40a890:	bl	405838 <strncmp@plt>
  40a894:	cbnz	w0, 40a8ac <startswith+0x48>
  40a898:	ldr	x8, [sp, #16]
  40a89c:	ldr	x9, [sp]
  40a8a0:	add	x8, x8, x9
  40a8a4:	stur	x8, [x29, #-8]
  40a8a8:	b	40a8b4 <startswith+0x50>
  40a8ac:	mov	x8, xzr
  40a8b0:	stur	x8, [x29, #-8]
  40a8b4:	ldur	x0, [x29, #-8]
  40a8b8:	ldp	x29, x30, [sp, #32]
  40a8bc:	add	sp, sp, #0x30
  40a8c0:	ret

000000000040a8c4 <ordered_hashmap_contains>:
  40a8c4:	sub	sp, sp, #0x20
  40a8c8:	stp	x29, x30, [sp, #16]
  40a8cc:	add	x29, sp, #0x10
  40a8d0:	str	x0, [sp, #8]
  40a8d4:	str	x1, [sp]
  40a8d8:	ldr	x0, [sp, #8]
  40a8dc:	ldr	x1, [sp]
  40a8e0:	bl	405a48 <internal_hashmap_contains@plt>
  40a8e4:	and	w0, w0, #0x1
  40a8e8:	ldp	x29, x30, [sp, #16]
  40a8ec:	add	sp, sp, #0x20
  40a8f0:	ret

000000000040a8f4 <server_vacuum_deferred_closes>:
  40a8f4:	sub	sp, sp, #0x30
  40a8f8:	stp	x29, x30, [sp, #32]
  40a8fc:	add	x29, sp, #0x20
  40a900:	adrp	x8, 42a000 <_fini+0x3a8>
  40a904:	add	x8, x8, #0x3c8
  40a908:	add	x8, x8, #0x3
  40a90c:	stur	x0, [x29, #-8]
  40a910:	str	x8, [sp, #8]
  40a914:	ldur	x8, [x29, #-8]
  40a918:	cmp	x8, #0x0
  40a91c:	cset	w9, ne  // ne = any
  40a920:	mov	w10, #0x1                   	// #1
  40a924:	eor	w9, w9, #0x1
  40a928:	eor	w9, w9, w10
  40a92c:	eor	w9, w9, w10
  40a930:	and	w9, w9, #0x1
  40a934:	mov	w0, w9
  40a938:	sxtw	x8, w0
  40a93c:	cbz	x8, 40a964 <server_vacuum_deferred_closes+0x70>
  40a940:	mov	w8, wzr
  40a944:	mov	w0, w8
  40a948:	adrp	x1, 429000 <journal_ratelimit_group_free+0x70>
  40a94c:	add	x1, x1, #0xdc8
  40a950:	ldr	x2, [sp, #8]
  40a954:	mov	w3, #0x1e3                 	// #483
  40a958:	adrp	x4, 42b000 <_fini+0x13a8>
  40a95c:	add	x4, x4, #0x6b0
  40a960:	bl	405718 <log_assert_failed_realm@plt>
  40a964:	ldur	x8, [x29, #-8]
  40a968:	ldr	x0, [x8, #576]
  40a96c:	bl	415f1c <set_size>
  40a970:	cmp	w0, #0x1, lsl #12
  40a974:	b.cs	40a97c <server_vacuum_deferred_closes+0x88>  // b.hs, b.nlast
  40a978:	b	40aa00 <server_vacuum_deferred_closes+0x10c>
  40a97c:	ldur	x0, [x29, #-8]
  40a980:	bl	40aa0c <server_process_deferred_closes>
  40a984:	ldur	x8, [x29, #-8]
  40a988:	ldr	x0, [x8, #576]
  40a98c:	bl	415f1c <set_size>
  40a990:	cmp	w0, #0x1, lsl #12
  40a994:	b.cc	40aa00 <server_vacuum_deferred_closes+0x10c>  // b.lo, b.ul, b.last
  40a998:	ldur	x8, [x29, #-8]
  40a99c:	ldr	x0, [x8, #576]
  40a9a0:	bl	414b3c <set_steal_first>
  40a9a4:	str	x0, [sp, #16]
  40a9a8:	cmp	x0, #0x0
  40a9ac:	cset	w9, ne  // ne = any
  40a9b0:	mov	w10, #0x1                   	// #1
  40a9b4:	eor	w9, w9, #0x1
  40a9b8:	eor	w9, w9, w10
  40a9bc:	eor	w9, w9, w10
  40a9c0:	and	w9, w9, #0x1
  40a9c4:	mov	w0, w9
  40a9c8:	sxtw	x8, w0
  40a9cc:	cbz	x8, 40a9f4 <server_vacuum_deferred_closes+0x100>
  40a9d0:	mov	w8, wzr
  40a9d4:	mov	w0, w8
  40a9d8:	adrp	x1, 42b000 <_fini+0x13a8>
  40a9dc:	add	x1, x1, #0x6dd
  40a9e0:	ldr	x2, [sp, #8]
  40a9e4:	mov	w3, #0x1f0                 	// #496
  40a9e8:	adrp	x4, 42b000 <_fini+0x13a8>
  40a9ec:	add	x4, x4, #0x6b0
  40a9f0:	bl	405718 <log_assert_failed_realm@plt>
  40a9f4:	ldr	x0, [sp, #16]
  40a9f8:	bl	405a58 <journal_file_close@plt>
  40a9fc:	b	40a984 <server_vacuum_deferred_closes+0x90>
  40aa00:	ldp	x29, x30, [sp, #32]
  40aa04:	add	sp, sp, #0x30
  40aa08:	ret

000000000040aa0c <server_process_deferred_closes>:
  40aa0c:	sub	sp, sp, #0x40
  40aa10:	stp	x29, x30, [sp, #48]
  40aa14:	add	x29, sp, #0x30
  40aa18:	mov	w8, #0xfffffffe            	// #-2
  40aa1c:	mov	x9, xzr
  40aa20:	mov	x10, sp
  40aa24:	stur	x0, [x29, #-8]
  40aa28:	str	w8, [sp]
  40aa2c:	str	x9, [x10, #8]
  40aa30:	ldr	q0, [sp]
  40aa34:	str	q0, [sp, #16]
  40aa38:	ldur	x8, [x29, #-8]
  40aa3c:	ldr	x0, [x8, #576]
  40aa40:	add	x1, sp, #0x10
  40aa44:	sub	x2, x29, #0x10
  40aa48:	bl	405a68 <set_iterate@plt>
  40aa4c:	tbnz	w0, #0, 40aa54 <server_process_deferred_closes+0x48>
  40aa50:	b	40aa88 <server_process_deferred_closes+0x7c>
  40aa54:	ldur	x0, [x29, #-16]
  40aa58:	bl	405a78 <journal_file_is_offlining@plt>
  40aa5c:	tbnz	w0, #0, 40aa64 <server_process_deferred_closes+0x58>
  40aa60:	b	40aa68 <server_process_deferred_closes+0x5c>
  40aa64:	b	40aa38 <server_process_deferred_closes+0x2c>
  40aa68:	ldur	x8, [x29, #-8]
  40aa6c:	ldr	x0, [x8, #576]
  40aa70:	ldur	x1, [x29, #-16]
  40aa74:	bl	415f40 <set_remove>
  40aa78:	ldur	x8, [x29, #-16]
  40aa7c:	mov	x0, x8
  40aa80:	bl	405a58 <journal_file_close@plt>
  40aa84:	b	40aa38 <server_process_deferred_closes+0x2c>
  40aa88:	ldp	x29, x30, [sp, #48]
  40aa8c:	add	sp, sp, #0x40
  40aa90:	ret

000000000040aa94 <server_sync>:
  40aa94:	sub	sp, sp, #0xa0
  40aa98:	stp	x29, x30, [sp, #144]
  40aa9c:	add	x29, sp, #0x90
  40aaa0:	adrp	x8, 42a000 <_fini+0x3a8>
  40aaa4:	add	x8, x8, #0x3c8
  40aaa8:	add	x8, x8, #0x3
  40aaac:	adrp	x9, 42a000 <_fini+0x3a8>
  40aab0:	add	x9, x9, #0x714
  40aab4:	stur	x0, [x29, #-8]
  40aab8:	ldur	x10, [x29, #-8]
  40aabc:	ldr	x10, [x10, #160]
  40aac0:	str	x8, [sp, #32]
  40aac4:	str	x9, [sp, #24]
  40aac8:	cbz	x10, 40ab6c <server_sync+0xd8>
  40aacc:	ldur	x8, [x29, #-8]
  40aad0:	ldr	x0, [x8, #160]
  40aad4:	mov	w9, wzr
  40aad8:	and	w1, w9, #0x1
  40aadc:	bl	405a88 <journal_file_set_offline@plt>
  40aae0:	stur	w0, [x29, #-36]
  40aae4:	ldur	w9, [x29, #-36]
  40aae8:	cmp	w9, #0x0
  40aaec:	cset	w9, ge  // ge = tcont
  40aaf0:	tbnz	w9, #0, 40ab6c <server_sync+0xd8>
  40aaf4:	mov	w8, #0x4                   	// #4
  40aaf8:	stur	w8, [x29, #-40]
  40aafc:	ldur	w8, [x29, #-36]
  40ab00:	stur	w8, [x29, #-44]
  40ab04:	stur	wzr, [x29, #-48]
  40ab08:	ldur	w0, [x29, #-48]
  40ab0c:	bl	405638 <log_get_max_level_realm@plt>
  40ab10:	ldur	w8, [x29, #-40]
  40ab14:	and	w8, w8, #0x7
  40ab18:	cmp	w0, w8
  40ab1c:	b.lt	40ab50 <server_sync+0xbc>  // b.tstop
  40ab20:	ldur	w8, [x29, #-48]
  40ab24:	ldur	w9, [x29, #-40]
  40ab28:	orr	w0, w9, w8, lsl #10
  40ab2c:	ldur	w1, [x29, #-44]
  40ab30:	ldr	x2, [sp, #32]
  40ab34:	mov	w3, #0x28a                 	// #650
  40ab38:	ldr	x4, [sp, #24]
  40ab3c:	adrp	x5, 42a000 <_fini+0x3a8>
  40ab40:	add	x5, x5, #0x720
  40ab44:	bl	405648 <log_internal_realm@plt>
  40ab48:	str	w0, [sp, #20]
  40ab4c:	b	40ab64 <server_sync+0xd0>
  40ab50:	ldur	w0, [x29, #-44]
  40ab54:	bl	405658 <abs@plt>
  40ab58:	mov	w8, wzr
  40ab5c:	subs	w8, w8, w0, uxtb
  40ab60:	str	w8, [sp, #20]
  40ab64:	ldr	w8, [sp, #20]
  40ab68:	stur	w8, [x29, #-52]
  40ab6c:	add	x8, sp, #0x48
  40ab70:	mov	w9, #0xfffffffe            	// #-2
  40ab74:	str	w9, [sp, #72]
  40ab78:	mov	x10, xzr
  40ab7c:	str	x10, [x8, #8]
  40ab80:	ldur	q0, [sp, #72]
  40ab84:	stur	q0, [x29, #-32]
  40ab88:	ldur	x8, [x29, #-8]
  40ab8c:	ldr	x0, [x8, #168]
  40ab90:	sub	x1, x29, #0x20
  40ab94:	sub	x2, x29, #0x10
  40ab98:	mov	x8, xzr
  40ab9c:	mov	x3, x8
  40aba0:	bl	40a464 <ordered_hashmap_iterate>
  40aba4:	tbnz	w0, #0, 40abac <server_sync+0x118>
  40aba8:	b	40ac4c <server_sync+0x1b8>
  40abac:	ldur	x0, [x29, #-16]
  40abb0:	mov	w8, wzr
  40abb4:	and	w1, w8, #0x1
  40abb8:	bl	405a88 <journal_file_set_offline@plt>
  40abbc:	stur	w0, [x29, #-36]
  40abc0:	ldur	w8, [x29, #-36]
  40abc4:	cmp	w8, #0x0
  40abc8:	cset	w8, ge  // ge = tcont
  40abcc:	tbnz	w8, #0, 40ac48 <server_sync+0x1b4>
  40abd0:	mov	w8, #0x4                   	// #4
  40abd4:	str	w8, [sp, #68]
  40abd8:	ldur	w8, [x29, #-36]
  40abdc:	str	w8, [sp, #64]
  40abe0:	str	wzr, [sp, #60]
  40abe4:	ldr	w0, [sp, #60]
  40abe8:	bl	405638 <log_get_max_level_realm@plt>
  40abec:	ldr	w8, [sp, #68]
  40abf0:	and	w8, w8, #0x7
  40abf4:	cmp	w0, w8
  40abf8:	b.lt	40ac2c <server_sync+0x198>  // b.tstop
  40abfc:	ldr	w8, [sp, #60]
  40ac00:	ldr	w9, [sp, #68]
  40ac04:	orr	w0, w9, w8, lsl #10
  40ac08:	ldr	w1, [sp, #64]
  40ac0c:	ldr	x2, [sp, #32]
  40ac10:	mov	w3, #0x290                 	// #656
  40ac14:	ldr	x4, [sp, #24]
  40ac18:	adrp	x5, 42a000 <_fini+0x3a8>
  40ac1c:	add	x5, x5, #0x74c
  40ac20:	bl	405648 <log_internal_realm@plt>
  40ac24:	str	w0, [sp, #16]
  40ac28:	b	40ac40 <server_sync+0x1ac>
  40ac2c:	ldr	w0, [sp, #64]
  40ac30:	bl	405658 <abs@plt>
  40ac34:	mov	w8, wzr
  40ac38:	subs	w8, w8, w0, uxtb
  40ac3c:	str	w8, [sp, #16]
  40ac40:	ldr	w8, [sp, #16]
  40ac44:	str	w8, [sp, #56]
  40ac48:	b	40ab88 <server_sync+0xf4>
  40ac4c:	ldur	x8, [x29, #-8]
  40ac50:	ldr	x8, [x8, #80]
  40ac54:	cbz	x8, 40acf8 <server_sync+0x264>
  40ac58:	ldur	x8, [x29, #-8]
  40ac5c:	ldr	x0, [x8, #80]
  40ac60:	mov	w9, wzr
  40ac64:	mov	w1, w9
  40ac68:	bl	405a98 <sd_event_source_set_enabled@plt>
  40ac6c:	stur	w0, [x29, #-36]
  40ac70:	ldur	w9, [x29, #-36]
  40ac74:	cmp	w9, #0x0
  40ac78:	cset	w9, ge  // ge = tcont
  40ac7c:	tbnz	w9, #0, 40acf8 <server_sync+0x264>
  40ac80:	mov	w8, #0x3                   	// #3
  40ac84:	str	w8, [sp, #52]
  40ac88:	ldur	w8, [x29, #-36]
  40ac8c:	str	w8, [sp, #48]
  40ac90:	str	wzr, [sp, #44]
  40ac94:	ldr	w0, [sp, #44]
  40ac98:	bl	405638 <log_get_max_level_realm@plt>
  40ac9c:	ldr	w8, [sp, #52]
  40aca0:	and	w8, w8, #0x7
  40aca4:	cmp	w0, w8
  40aca8:	b.lt	40acdc <server_sync+0x248>  // b.tstop
  40acac:	ldr	w8, [sp, #44]
  40acb0:	ldr	w9, [sp, #52]
  40acb4:	orr	w0, w9, w8, lsl #10
  40acb8:	ldr	w1, [sp, #48]
  40acbc:	ldr	x2, [sp, #32]
  40acc0:	mov	w3, #0x296                 	// #662
  40acc4:	ldr	x4, [sp, #24]
  40acc8:	adrp	x5, 42a000 <_fini+0x3a8>
  40accc:	add	x5, x5, #0x776
  40acd0:	bl	405648 <log_internal_realm@plt>
  40acd4:	str	w0, [sp, #12]
  40acd8:	b	40acf0 <server_sync+0x25c>
  40acdc:	ldr	w0, [sp, #48]
  40ace0:	bl	405658 <abs@plt>
  40ace4:	mov	w8, wzr
  40ace8:	subs	w8, w8, w0, uxtb
  40acec:	str	w8, [sp, #12]
  40acf0:	ldr	w8, [sp, #12]
  40acf4:	str	w8, [sp, #40]
  40acf8:	ldur	x8, [x29, #-8]
  40acfc:	ldrb	w9, [x8, #592]
  40ad00:	and	w9, w9, #0xfffffff7
  40ad04:	strb	w9, [x8, #592]
  40ad08:	ldp	x29, x30, [sp, #144]
  40ad0c:	add	sp, sp, #0xa0
  40ad10:	ret

000000000040ad14 <server_vacuum>:
  40ad14:	sub	sp, sp, #0x40
  40ad18:	stp	x29, x30, [sp, #48]
  40ad1c:	add	x29, sp, #0x30
  40ad20:	adrp	x8, 42a000 <_fini+0x3a8>
  40ad24:	add	x8, x8, #0x3c8
  40ad28:	add	x8, x8, #0x3
  40ad2c:	stur	x0, [x29, #-8]
  40ad30:	and	w9, w1, #0x1
  40ad34:	sturb	w9, [x29, #-9]
  40ad38:	str	x8, [sp, #8]
  40ad3c:	ldur	x8, [x29, #-8]
  40ad40:	cmp	x8, #0x0
  40ad44:	cset	w9, ne  // ne = any
  40ad48:	mov	w10, #0x1                   	// #1
  40ad4c:	eor	w9, w9, #0x1
  40ad50:	eor	w9, w9, w10
  40ad54:	eor	w9, w9, w10
  40ad58:	and	w9, w9, #0x1
  40ad5c:	mov	w0, w9
  40ad60:	sxtw	x8, w0
  40ad64:	cbz	x8, 40ad8c <server_vacuum+0x78>
  40ad68:	mov	w8, wzr
  40ad6c:	mov	w0, w8
  40ad70:	adrp	x1, 429000 <journal_ratelimit_group_free+0x70>
  40ad74:	add	x1, x1, #0xdc8
  40ad78:	ldr	x2, [sp, #8]
  40ad7c:	mov	w3, #0x2b2                 	// #690
  40ad80:	adrp	x4, 42a000 <_fini+0x3a8>
  40ad84:	add	x4, x4, #0x79e
  40ad88:	bl	405718 <log_assert_failed_realm@plt>
  40ad8c:	mov	w8, #0x7                   	// #7
  40ad90:	stur	w8, [x29, #-16]
  40ad94:	stur	wzr, [x29, #-20]
  40ad98:	str	wzr, [sp, #24]
  40ad9c:	ldr	w0, [sp, #24]
  40ada0:	bl	405638 <log_get_max_level_realm@plt>
  40ada4:	ldur	w8, [x29, #-16]
  40ada8:	and	w8, w8, #0x7
  40adac:	cmp	w0, w8
  40adb0:	b.lt	40ade8 <server_vacuum+0xd4>  // b.tstop
  40adb4:	ldr	w8, [sp, #24]
  40adb8:	ldur	w9, [x29, #-16]
  40adbc:	orr	w0, w9, w8, lsl #10
  40adc0:	ldur	w1, [x29, #-20]
  40adc4:	ldr	x2, [sp, #8]
  40adc8:	mov	w3, #0x2b4                 	// #692
  40adcc:	adrp	x4, 42a000 <_fini+0x3a8>
  40add0:	add	x4, x4, #0x7c1
  40add4:	adrp	x5, 42a000 <_fini+0x3a8>
  40add8:	add	x5, x5, #0x7cf
  40addc:	bl	405648 <log_internal_realm@plt>
  40ade0:	str	w0, [sp, #4]
  40ade4:	b	40adfc <server_vacuum+0xe8>
  40ade8:	ldur	w0, [x29, #-20]
  40adec:	bl	405658 <abs@plt>
  40adf0:	mov	w8, wzr
  40adf4:	subs	w8, w8, w0, uxtb
  40adf8:	str	w8, [sp, #4]
  40adfc:	ldr	w8, [sp, #4]
  40ae00:	str	w8, [sp, #20]
  40ae04:	ldur	x9, [x29, #-8]
  40ae08:	str	xzr, [x9, #496]
  40ae0c:	ldur	x9, [x29, #-8]
  40ae10:	ldr	x9, [x9, #160]
  40ae14:	cbz	x9, 40ae30 <server_vacuum+0x11c>
  40ae18:	ldur	x0, [x29, #-8]
  40ae1c:	ldur	x8, [x29, #-8]
  40ae20:	add	x1, x8, #0x150
  40ae24:	ldurb	w9, [x29, #-9]
  40ae28:	and	w2, w9, #0x1
  40ae2c:	bl	40ae68 <do_vacuum>
  40ae30:	ldur	x8, [x29, #-8]
  40ae34:	ldr	x8, [x8, #152]
  40ae38:	cbz	x8, 40ae54 <server_vacuum+0x140>
  40ae3c:	ldur	x0, [x29, #-8]
  40ae40:	ldur	x8, [x29, #-8]
  40ae44:	add	x1, x8, #0xe8
  40ae48:	ldurb	w9, [x29, #-9]
  40ae4c:	and	w2, w9, #0x1
  40ae50:	bl	40ae68 <do_vacuum>
  40ae54:	mov	w8, wzr
  40ae58:	mov	w0, w8
  40ae5c:	ldp	x29, x30, [sp, #48]
  40ae60:	add	sp, sp, #0x40
  40ae64:	ret

000000000040ae68 <do_vacuum>:
  40ae68:	sub	sp, sp, #0x50
  40ae6c:	stp	x29, x30, [sp, #64]
  40ae70:	add	x29, sp, #0x40
  40ae74:	adrp	x8, 42a000 <_fini+0x3a8>
  40ae78:	add	x8, x8, #0x3c8
  40ae7c:	add	x8, x8, #0x3
  40ae80:	stur	x0, [x29, #-8]
  40ae84:	stur	x1, [x29, #-16]
  40ae88:	and	w9, w2, #0x1
  40ae8c:	sturb	w9, [x29, #-17]
  40ae90:	str	x8, [sp, #16]
  40ae94:	ldur	x8, [x29, #-8]
  40ae98:	cmp	x8, #0x0
  40ae9c:	cset	w9, ne  // ne = any
  40aea0:	mov	w10, #0x1                   	// #1
  40aea4:	eor	w9, w9, #0x1
  40aea8:	eor	w9, w9, w10
  40aeac:	eor	w9, w9, w10
  40aeb0:	and	w9, w9, #0x1
  40aeb4:	mov	w0, w9
  40aeb8:	sxtw	x8, w0
  40aebc:	cbz	x8, 40aee4 <do_vacuum+0x7c>
  40aec0:	mov	w8, wzr
  40aec4:	mov	w0, w8
  40aec8:	adrp	x1, 429000 <journal_ratelimit_group_free+0x70>
  40aecc:	add	x1, x1, #0xdc8
  40aed0:	ldr	x2, [sp, #16]
  40aed4:	mov	w3, #0x2a0                 	// #672
  40aed8:	adrp	x4, 42b000 <_fini+0x13a8>
  40aedc:	add	x4, x4, #0x705
  40aee0:	bl	405718 <log_assert_failed_realm@plt>
  40aee4:	ldur	x8, [x29, #-16]
  40aee8:	cmp	x8, #0x0
  40aeec:	cset	w9, ne  // ne = any
  40aef0:	mov	w10, #0x1                   	// #1
  40aef4:	eor	w9, w9, #0x1
  40aef8:	eor	w9, w9, w10
  40aefc:	eor	w9, w9, w10
  40af00:	and	w9, w9, #0x1
  40af04:	mov	w0, w9
  40af08:	sxtw	x8, w0
  40af0c:	cbz	x8, 40af34 <do_vacuum+0xcc>
  40af10:	mov	w8, wzr
  40af14:	mov	w0, w8
  40af18:	adrp	x1, 42b000 <_fini+0x13a8>
  40af1c:	add	x1, x1, #0x737
  40af20:	ldr	x2, [sp, #16]
  40af24:	mov	w3, #0x2a1                 	// #673
  40af28:	adrp	x4, 42b000 <_fini+0x13a8>
  40af2c:	add	x4, x4, #0x705
  40af30:	bl	405718 <log_assert_failed_realm@plt>
  40af34:	ldur	x0, [x29, #-8]
  40af38:	ldur	x1, [x29, #-16]
  40af3c:	bl	4090b0 <cache_space_refresh>
  40af40:	ldurb	w8, [x29, #-17]
  40af44:	tbnz	w8, #0, 40af4c <do_vacuum+0xe4>
  40af48:	b	40af58 <do_vacuum+0xf0>
  40af4c:	ldur	x0, [x29, #-8]
  40af50:	ldur	x1, [x29, #-16]
  40af54:	bl	408d20 <server_space_usage_message>
  40af58:	ldur	x8, [x29, #-16]
  40af5c:	ldr	x0, [x8, #8]
  40af60:	ldur	x8, [x29, #-16]
  40af64:	ldr	x1, [x8, #80]
  40af68:	ldur	x8, [x29, #-16]
  40af6c:	ldr	x2, [x8, #56]
  40af70:	ldur	x8, [x29, #-8]
  40af74:	ldr	x3, [x8, #480]
  40af78:	ldur	x8, [x29, #-8]
  40af7c:	add	x4, x8, #0x1f0
  40af80:	ldurb	w9, [x29, #-17]
  40af84:	and	w5, w9, #0x1
  40af88:	bl	405aa8 <journal_directory_vacuum@plt>
  40af8c:	stur	w0, [x29, #-24]
  40af90:	ldur	w9, [x29, #-24]
  40af94:	cmp	w9, #0x0
  40af98:	cset	w9, ge  // ge = tcont
  40af9c:	tbnz	w9, #0, 40b034 <do_vacuum+0x1cc>
  40afa0:	ldur	w8, [x29, #-24]
  40afa4:	mov	w9, #0xfffffffe            	// #-2
  40afa8:	cmp	w8, w9
  40afac:	b.eq	40b034 <do_vacuum+0x1cc>  // b.none
  40afb0:	mov	w8, #0x4                   	// #4
  40afb4:	stur	w8, [x29, #-28]
  40afb8:	ldur	w8, [x29, #-24]
  40afbc:	str	w8, [sp, #32]
  40afc0:	str	wzr, [sp, #28]
  40afc4:	ldr	w0, [sp, #28]
  40afc8:	bl	405638 <log_get_max_level_realm@plt>
  40afcc:	ldur	w8, [x29, #-28]
  40afd0:	and	w8, w8, #0x7
  40afd4:	cmp	w0, w8
  40afd8:	b.lt	40b018 <do_vacuum+0x1b0>  // b.tstop
  40afdc:	ldr	w8, [sp, #28]
  40afe0:	ldur	w9, [x29, #-28]
  40afe4:	orr	w0, w9, w8, lsl #10
  40afe8:	ldr	w1, [sp, #32]
  40afec:	ldur	x10, [x29, #-16]
  40aff0:	ldr	x6, [x10, #8]
  40aff4:	ldr	x2, [sp, #16]
  40aff8:	mov	w3, #0x2ac                 	// #684
  40affc:	adrp	x4, 42b000 <_fini+0x13a8>
  40b000:	add	x4, x4, #0x73f
  40b004:	adrp	x5, 42b000 <_fini+0x13a8>
  40b008:	add	x5, x5, #0x749
  40b00c:	bl	405648 <log_internal_realm@plt>
  40b010:	str	w0, [sp, #12]
  40b014:	b	40b02c <do_vacuum+0x1c4>
  40b018:	ldr	w0, [sp, #32]
  40b01c:	bl	405658 <abs@plt>
  40b020:	mov	w8, wzr
  40b024:	subs	w8, w8, w0, uxtb
  40b028:	str	w8, [sp, #12]
  40b02c:	ldr	w8, [sp, #12]
  40b030:	str	w8, [sp, #24]
  40b034:	ldur	x8, [x29, #-16]
  40b038:	add	x0, x8, #0x40
  40b03c:	bl	415f6c <cache_space_invalidate>
  40b040:	ldp	x29, x30, [sp, #64]
  40b044:	add	sp, sp, #0x50
  40b048:	ret

000000000040b04c <client_context_extra_fields_n_iovec>:
  40b04c:	sub	sp, sp, #0x10
  40b050:	str	x0, [sp, #8]
  40b054:	ldr	x8, [sp, #8]
  40b058:	cbz	x8, 40b06c <client_context_extra_fields_n_iovec+0x20>
  40b05c:	ldr	x8, [sp, #8]
  40b060:	ldr	x8, [x8, #176]
  40b064:	str	x8, [sp]
  40b068:	b	40b074 <client_context_extra_fields_n_iovec+0x28>
  40b06c:	mov	x8, xzr
  40b070:	str	x8, [sp]
  40b074:	ldr	x8, [sp]
  40b078:	mov	x0, x8
  40b07c:	add	sp, sp, #0x10
  40b080:	ret

000000000040b084 <size_multiply_overflow>:
  40b084:	sub	sp, sp, #0x20
  40b088:	str	x0, [sp, #24]
  40b08c:	str	x1, [sp, #16]
  40b090:	ldr	x8, [sp, #16]
  40b094:	mov	w9, #0x0                   	// #0
  40b098:	str	w9, [sp, #12]
  40b09c:	cbz	x8, 40b0bc <size_multiply_overflow+0x38>
  40b0a0:	ldr	x8, [sp, #24]
  40b0a4:	ldr	x9, [sp, #16]
  40b0a8:	mov	x10, #0xffffffffffffffff    	// #-1
  40b0ac:	udiv	x9, x10, x9
  40b0b0:	cmp	x8, x9
  40b0b4:	cset	w11, hi  // hi = pmore
  40b0b8:	str	w11, [sp, #12]
  40b0bc:	ldr	w8, [sp, #12]
  40b0c0:	mov	w9, #0x1                   	// #1
  40b0c4:	eor	w8, w8, #0x1
  40b0c8:	eor	w8, w8, w9
  40b0cc:	and	w8, w8, #0x1
  40b0d0:	mov	w0, w8
  40b0d4:	sxtw	x10, w0
  40b0d8:	cmp	x10, #0x0
  40b0dc:	cset	w8, ne  // ne = any
  40b0e0:	and	w0, w8, #0x1
  40b0e4:	add	sp, sp, #0x20
  40b0e8:	ret

000000000040b0ec <dispatch_message_real>:
  40b0ec:	stp	x29, x30, [sp, #-32]!
  40b0f0:	stp	x28, x19, [sp, #16]
  40b0f4:	mov	x29, sp
  40b0f8:	sub	sp, sp, #0xda0
  40b0fc:	mov	x19, sp
  40b100:	add	x8, x19, #0x458
  40b104:	mov	x9, xzr
  40b108:	adrp	x10, 42b000 <_fini+0x13a8>
  40b10c:	add	x10, x10, #0x8a1
  40b110:	adrp	x11, 42a000 <_fini+0x3a8>
  40b114:	add	x11, x11, #0x3c8
  40b118:	add	x11, x11, #0x3
  40b11c:	adrp	x12, 42b000 <_fini+0x13a8>
  40b120:	add	x12, x12, #0x76b
  40b124:	adrp	x13, 42b000 <_fini+0x13a8>
  40b128:	add	x13, x13, #0x876
  40b12c:	adrp	x14, 42b000 <_fini+0x13a8>
  40b130:	add	x14, x14, #0x9cf
  40b134:	stur	x0, [x29, #-8]
  40b138:	stur	x1, [x29, #-16]
  40b13c:	stur	x2, [x29, #-24]
  40b140:	stur	x3, [x29, #-32]
  40b144:	stur	x4, [x29, #-40]
  40b148:	stur	x5, [x29, #-48]
  40b14c:	stur	w6, [x29, #-52]
  40b150:	stur	w7, [x29, #-56]
  40b154:	stur	x9, [x29, #-120]
  40b158:	stur	x9, [x29, #-128]
  40b15c:	str	x8, [x19, #904]
  40b160:	str	x10, [x19, #896]
  40b164:	str	x11, [x19, #888]
  40b168:	str	x12, [x19, #880]
  40b16c:	str	x13, [x19, #872]
  40b170:	str	x14, [x19, #864]
  40b174:	ldur	x8, [x29, #-8]
  40b178:	cmp	x8, #0x0
  40b17c:	cset	w9, ne  // ne = any
  40b180:	mov	w10, #0x1                   	// #1
  40b184:	eor	w9, w9, #0x1
  40b188:	eor	w9, w9, w10
  40b18c:	eor	w9, w9, w10
  40b190:	and	w9, w9, #0x1
  40b194:	mov	w0, w9
  40b198:	sxtw	x8, w0
  40b19c:	cbz	x8, 40b1c0 <dispatch_message_real+0xd4>
  40b1a0:	mov	w8, wzr
  40b1a4:	mov	w0, w8
  40b1a8:	adrp	x1, 429000 <journal_ratelimit_group_free+0x70>
  40b1ac:	add	x1, x1, #0xdc8
  40b1b0:	ldr	x2, [x19, #888]
  40b1b4:	mov	w3, #0x393                 	// #915
  40b1b8:	ldr	x4, [x19, #880]
  40b1bc:	bl	405718 <log_assert_failed_realm@plt>
  40b1c0:	ldur	x8, [x29, #-16]
  40b1c4:	cmp	x8, #0x0
  40b1c8:	cset	w9, ne  // ne = any
  40b1cc:	mov	w10, #0x1                   	// #1
  40b1d0:	eor	w9, w9, #0x1
  40b1d4:	eor	w9, w9, w10
  40b1d8:	eor	w9, w9, w10
  40b1dc:	and	w9, w9, #0x1
  40b1e0:	mov	w0, w9
  40b1e4:	sxtw	x8, w0
  40b1e8:	cbz	x8, 40b20c <dispatch_message_real+0x120>
  40b1ec:	mov	w8, wzr
  40b1f0:	mov	w0, w8
  40b1f4:	adrp	x1, 42b000 <_fini+0x13a8>
  40b1f8:	add	x1, x1, #0x7eb
  40b1fc:	ldr	x2, [x19, #888]
  40b200:	mov	w3, #0x394                 	// #916
  40b204:	ldr	x4, [x19, #880]
  40b208:	bl	405718 <log_assert_failed_realm@plt>
  40b20c:	ldur	x8, [x29, #-24]
  40b210:	cmp	x8, #0x0
  40b214:	cset	w9, hi  // hi = pmore
  40b218:	mov	w10, #0x1                   	// #1
  40b21c:	eor	w9, w9, #0x1
  40b220:	eor	w9, w9, w10
  40b224:	eor	w9, w9, w10
  40b228:	and	w9, w9, #0x1
  40b22c:	mov	w0, w9
  40b230:	sxtw	x8, w0
  40b234:	cbz	x8, 40b258 <dispatch_message_real+0x16c>
  40b238:	mov	w8, wzr
  40b23c:	mov	w0, w8
  40b240:	adrp	x1, 42b000 <_fini+0x13a8>
  40b244:	add	x1, x1, #0x7f1
  40b248:	ldr	x2, [x19, #888]
  40b24c:	mov	w3, #0x395                 	// #917
  40b250:	ldr	x4, [x19, #880]
  40b254:	bl	405718 <log_assert_failed_realm@plt>
  40b258:	ldur	x8, [x29, #-24]
  40b25c:	add	x8, x8, #0x16
  40b260:	ldur	w0, [x29, #-56]
  40b264:	str	x8, [x19, #856]
  40b268:	bl	415fb4 <pid_is_valid>
  40b26c:	mov	w9, wzr
  40b270:	mov	w10, #0x12                  	// #18
  40b274:	tst	w0, #0x1
  40b278:	csel	w9, w10, w9, ne  // ne = any
  40b27c:	ldr	x8, [x19, #856]
  40b280:	add	x11, x8, w9, sxtw
  40b284:	ldur	x0, [x29, #-40]
  40b288:	str	x11, [x19, #848]
  40b28c:	bl	40b04c <client_context_extra_fields_n_iovec>
  40b290:	ldr	x8, [x19, #848]
  40b294:	add	x11, x8, x0
  40b298:	ldur	x12, [x29, #-32]
  40b29c:	cmp	x11, x12
  40b2a0:	cset	w9, ls  // ls = plast
  40b2a4:	mov	w10, #0x1                   	// #1
  40b2a8:	eor	w9, w9, #0x1
  40b2ac:	eor	w9, w9, w10
  40b2b0:	eor	w9, w9, w10
  40b2b4:	and	w9, w9, #0x1
  40b2b8:	mov	w0, w9
  40b2bc:	sxtw	x11, w0
  40b2c0:	cbz	x11, 40b2e4 <dispatch_message_real+0x1f8>
  40b2c4:	mov	w8, wzr
  40b2c8:	mov	w0, w8
  40b2cc:	adrp	x1, 42b000 <_fini+0x13a8>
  40b2d0:	add	x1, x1, #0x7f7
  40b2d4:	ldr	x2, [x19, #888]
  40b2d8:	mov	w3, #0x399                 	// #921
  40b2dc:	ldr	x4, [x19, #880]
  40b2e0:	bl	405718 <log_assert_failed_realm@plt>
  40b2e4:	ldur	x8, [x29, #-40]
  40b2e8:	cbz	x8, 40d34c <dispatch_message_real+0x2260>
  40b2ec:	ldur	x8, [x29, #-40]
  40b2f0:	ldr	w0, [x8, #20]
  40b2f4:	bl	415fb4 <pid_is_valid>
  40b2f8:	tbnz	w0, #0, 40b300 <dispatch_message_real+0x214>
  40b2fc:	b	40b430 <dispatch_message_real+0x344>
  40b300:	mov	x8, #0x12                  	// #18
  40b304:	stur	x8, [x29, #-160]
  40b308:	ldur	x1, [x29, #-160]
  40b30c:	mov	x0, #0x1                   	// #1
  40b310:	bl	40b084 <size_multiply_overflow>
  40b314:	mov	w8, #0x1                   	// #1
  40b318:	eor	w9, w0, #0x1
  40b31c:	eor	w9, w9, w8
  40b320:	eor	w9, w9, w8
  40b324:	eor	w8, w9, w8
  40b328:	and	w8, w8, #0x1
  40b32c:	mov	w1, w8
  40b330:	sxtw	x10, w1
  40b334:	cbz	x10, 40b354 <dispatch_message_real+0x268>
  40b338:	mov	w8, wzr
  40b33c:	mov	w0, w8
  40b340:	ldr	x1, [x19, #872]
  40b344:	ldr	x2, [x19, #888]
  40b348:	mov	w3, #0x39c                 	// #924
  40b34c:	ldr	x4, [x19, #880]
  40b350:	bl	405718 <log_assert_failed_realm@plt>
  40b354:	ldur	x8, [x29, #-160]
  40b358:	mov	x9, #0x1                   	// #1
  40b35c:	mul	x8, x9, x8
  40b360:	cmp	x8, #0x400, lsl #12
  40b364:	cset	w10, ls  // ls = plast
  40b368:	mov	w11, #0x1                   	// #1
  40b36c:	eor	w10, w10, #0x1
  40b370:	eor	w10, w10, w11
  40b374:	eor	w10, w10, w11
  40b378:	and	w10, w10, #0x1
  40b37c:	mov	w0, w10
  40b380:	sxtw	x8, w0
  40b384:	cbz	x8, 40b3a4 <dispatch_message_real+0x2b8>
  40b388:	mov	w8, wzr
  40b38c:	mov	w0, w8
  40b390:	ldr	x1, [x19, #896]
  40b394:	ldr	x2, [x19, #888]
  40b398:	mov	w3, #0x39c                 	// #924
  40b39c:	ldr	x4, [x19, #880]
  40b3a0:	bl	405718 <log_assert_failed_realm@plt>
  40b3a4:	ldur	x8, [x29, #-160]
  40b3a8:	mov	x9, #0x1                   	// #1
  40b3ac:	mul	x8, x9, x8
  40b3b0:	mul	x8, x8, x9
  40b3b4:	add	x8, x8, #0xf
  40b3b8:	and	x8, x8, #0xfffffffffffffff0
  40b3bc:	mov	x9, sp
  40b3c0:	subs	x8, x9, x8
  40b3c4:	mov	sp, x8
  40b3c8:	stur	x8, [x29, #-168]
  40b3cc:	ldur	x8, [x29, #-168]
  40b3d0:	stur	x8, [x29, #-152]
  40b3d4:	ldur	x0, [x29, #-152]
  40b3d8:	ldur	x8, [x29, #-40]
  40b3dc:	ldr	w2, [x8, #20]
  40b3e0:	adrp	x1, 42b000 <_fini+0x13a8>
  40b3e4:	add	x1, x1, #0x8c0
  40b3e8:	bl	405ab8 <sprintf@plt>
  40b3ec:	ldur	x8, [x29, #-16]
  40b3f0:	ldur	x9, [x29, #-24]
  40b3f4:	add	x10, x9, #0x1
  40b3f8:	stur	x10, [x29, #-24]
  40b3fc:	ldur	x10, [x29, #-152]
  40b400:	stur	x10, [x29, #-184]
  40b404:	ldur	x10, [x29, #-152]
  40b408:	mov	x0, x10
  40b40c:	str	x8, [x19, #840]
  40b410:	str	x9, [x19, #832]
  40b414:	bl	405738 <strlen@plt>
  40b418:	stur	x0, [x29, #-176]
  40b41c:	ldr	x8, [x19, #904]
  40b420:	ldr	q0, [x8, #2192]
  40b424:	ldr	x9, [x19, #840]
  40b428:	ldr	x10, [x19, #832]
  40b42c:	str	q0, [x9, x10, lsl #4]
  40b430:	ldur	x8, [x29, #-40]
  40b434:	ldr	w0, [x8, #24]
  40b438:	bl	405ac8 <uid_is_valid@plt>
  40b43c:	tbnz	w0, #0, 40b444 <dispatch_message_real+0x358>
  40b440:	b	40b570 <dispatch_message_real+0x484>
  40b444:	mov	x8, #0x12                  	// #18
  40b448:	stur	x8, [x29, #-200]
  40b44c:	ldur	x1, [x29, #-200]
  40b450:	mov	x0, #0x1                   	// #1
  40b454:	bl	40b084 <size_multiply_overflow>
  40b458:	mov	w8, #0x1                   	// #1
  40b45c:	eor	w9, w0, #0x1
  40b460:	eor	w9, w9, w8
  40b464:	eor	w9, w9, w8
  40b468:	eor	w8, w9, w8
  40b46c:	and	w8, w8, #0x1
  40b470:	mov	w1, w8
  40b474:	sxtw	x10, w1
  40b478:	cbz	x10, 40b498 <dispatch_message_real+0x3ac>
  40b47c:	mov	w8, wzr
  40b480:	mov	w0, w8
  40b484:	ldr	x1, [x19, #872]
  40b488:	ldr	x2, [x19, #888]
  40b48c:	mov	w3, #0x39d                 	// #925
  40b490:	ldr	x4, [x19, #880]
  40b494:	bl	405718 <log_assert_failed_realm@plt>
  40b498:	ldur	x8, [x29, #-200]
  40b49c:	mov	x9, #0x1                   	// #1
  40b4a0:	mul	x8, x9, x8
  40b4a4:	cmp	x8, #0x400, lsl #12
  40b4a8:	cset	w10, ls  // ls = plast
  40b4ac:	mov	w11, #0x1                   	// #1
  40b4b0:	eor	w10, w10, #0x1
  40b4b4:	eor	w10, w10, w11
  40b4b8:	eor	w10, w10, w11
  40b4bc:	and	w10, w10, #0x1
  40b4c0:	mov	w0, w10
  40b4c4:	sxtw	x8, w0
  40b4c8:	cbz	x8, 40b4e8 <dispatch_message_real+0x3fc>
  40b4cc:	mov	w8, wzr
  40b4d0:	mov	w0, w8
  40b4d4:	ldr	x1, [x19, #896]
  40b4d8:	ldr	x2, [x19, #888]
  40b4dc:	mov	w3, #0x39d                 	// #925
  40b4e0:	ldr	x4, [x19, #880]
  40b4e4:	bl	405718 <log_assert_failed_realm@plt>
  40b4e8:	ldur	x8, [x29, #-200]
  40b4ec:	mov	x9, #0x1                   	// #1
  40b4f0:	mul	x8, x9, x8
  40b4f4:	mul	x8, x8, x9
  40b4f8:	add	x8, x8, #0xf
  40b4fc:	and	x8, x8, #0xfffffffffffffff0
  40b500:	mov	x9, sp
  40b504:	subs	x8, x9, x8
  40b508:	mov	sp, x8
  40b50c:	stur	x8, [x29, #-208]
  40b510:	ldur	x8, [x29, #-208]
  40b514:	stur	x8, [x29, #-192]
  40b518:	ldur	x0, [x29, #-192]
  40b51c:	ldur	x8, [x29, #-40]
  40b520:	ldr	w2, [x8, #24]
  40b524:	adrp	x1, 42b000 <_fini+0x13a8>
  40b528:	add	x1, x1, #0x8c8
  40b52c:	bl	405ab8 <sprintf@plt>
  40b530:	ldur	x8, [x29, #-16]
  40b534:	ldur	x9, [x29, #-24]
  40b538:	add	x10, x9, #0x1
  40b53c:	stur	x10, [x29, #-24]
  40b540:	ldur	x10, [x29, #-192]
  40b544:	stur	x10, [x29, #-224]
  40b548:	ldur	x10, [x29, #-192]
  40b54c:	mov	x0, x10
  40b550:	str	x8, [x19, #824]
  40b554:	str	x9, [x19, #816]
  40b558:	bl	405738 <strlen@plt>
  40b55c:	stur	x0, [x29, #-216]
  40b560:	ldur	q0, [x29, #-224]
  40b564:	ldr	x8, [x19, #824]
  40b568:	ldr	x9, [x19, #816]
  40b56c:	str	q0, [x8, x9, lsl #4]
  40b570:	ldur	x8, [x29, #-40]
  40b574:	ldr	w0, [x8, #28]
  40b578:	bl	415fd4 <gid_is_valid>
  40b57c:	tbnz	w0, #0, 40b584 <dispatch_message_real+0x498>
  40b580:	b	40b6b4 <dispatch_message_real+0x5c8>
  40b584:	mov	x8, #0x12                  	// #18
  40b588:	stur	x8, [x29, #-240]
  40b58c:	ldur	x1, [x29, #-240]
  40b590:	mov	x0, #0x1                   	// #1
  40b594:	bl	40b084 <size_multiply_overflow>
  40b598:	mov	w8, #0x1                   	// #1
  40b59c:	eor	w9, w0, #0x1
  40b5a0:	eor	w9, w9, w8
  40b5a4:	eor	w9, w9, w8
  40b5a8:	eor	w8, w9, w8
  40b5ac:	and	w8, w8, #0x1
  40b5b0:	mov	w1, w8
  40b5b4:	sxtw	x10, w1
  40b5b8:	cbz	x10, 40b5d8 <dispatch_message_real+0x4ec>
  40b5bc:	mov	w8, wzr
  40b5c0:	mov	w0, w8
  40b5c4:	ldr	x1, [x19, #872]
  40b5c8:	ldr	x2, [x19, #888]
  40b5cc:	mov	w3, #0x39e                 	// #926
  40b5d0:	ldr	x4, [x19, #880]
  40b5d4:	bl	405718 <log_assert_failed_realm@plt>
  40b5d8:	ldur	x8, [x29, #-240]
  40b5dc:	mov	x9, #0x1                   	// #1
  40b5e0:	mul	x8, x9, x8
  40b5e4:	cmp	x8, #0x400, lsl #12
  40b5e8:	cset	w10, ls  // ls = plast
  40b5ec:	mov	w11, #0x1                   	// #1
  40b5f0:	eor	w10, w10, #0x1
  40b5f4:	eor	w10, w10, w11
  40b5f8:	eor	w10, w10, w11
  40b5fc:	and	w10, w10, #0x1
  40b600:	mov	w0, w10
  40b604:	sxtw	x8, w0
  40b608:	cbz	x8, 40b628 <dispatch_message_real+0x53c>
  40b60c:	mov	w8, wzr
  40b610:	mov	w0, w8
  40b614:	ldr	x1, [x19, #896]
  40b618:	ldr	x2, [x19, #888]
  40b61c:	mov	w3, #0x39e                 	// #926
  40b620:	ldr	x4, [x19, #880]
  40b624:	bl	405718 <log_assert_failed_realm@plt>
  40b628:	ldur	x8, [x29, #-240]
  40b62c:	mov	x9, #0x1                   	// #1
  40b630:	mul	x8, x9, x8
  40b634:	mul	x8, x8, x9
  40b638:	add	x8, x8, #0xf
  40b63c:	and	x8, x8, #0xfffffffffffffff0
  40b640:	mov	x9, sp
  40b644:	subs	x8, x9, x8
  40b648:	mov	sp, x8
  40b64c:	stur	x8, [x29, #-248]
  40b650:	ldur	x8, [x29, #-248]
  40b654:	stur	x8, [x29, #-232]
  40b658:	ldur	x0, [x29, #-232]
  40b65c:	ldur	x8, [x29, #-40]
  40b660:	ldr	w2, [x8, #28]
  40b664:	adrp	x1, 42b000 <_fini+0x13a8>
  40b668:	add	x1, x1, #0x8d0
  40b66c:	bl	405ab8 <sprintf@plt>
  40b670:	ldur	x8, [x29, #-16]
  40b674:	ldur	x9, [x29, #-24]
  40b678:	add	x10, x9, #0x1
  40b67c:	stur	x10, [x29, #-24]
  40b680:	ldur	x10, [x29, #-232]
  40b684:	str	x10, [x19, #3224]
  40b688:	ldur	x10, [x29, #-232]
  40b68c:	mov	x0, x10
  40b690:	str	x8, [x19, #808]
  40b694:	str	x9, [x19, #800]
  40b698:	bl	405738 <strlen@plt>
  40b69c:	str	x0, [x19, #3232]
  40b6a0:	ldr	x8, [x19, #904]
  40b6a4:	ldr	q0, [x8, #2112]
  40b6a8:	ldr	x9, [x19, #808]
  40b6ac:	ldr	x10, [x19, #800]
  40b6b0:	str	q0, [x9, x10, lsl #4]
  40b6b4:	ldur	x8, [x29, #-40]
  40b6b8:	ldr	x0, [x8, #32]
  40b6bc:	bl	4155f8 <isempty>
  40b6c0:	tbnz	w0, #0, 40b918 <dispatch_message_real+0x82c>
  40b6c4:	add	x8, x19, #0xc80
  40b6c8:	adrp	x9, 42b000 <_fini+0x13a8>
  40b6cc:	add	x9, x9, #0x8d8
  40b6d0:	str	x9, [x19, #3200]
  40b6d4:	ldur	x9, [x29, #-40]
  40b6d8:	ldr	x9, [x9, #32]
  40b6dc:	str	x9, [x8, #8]
  40b6e0:	str	xzr, [x19, #3176]
  40b6e4:	str	xzr, [x19, #3168]
  40b6e8:	ldr	x8, [x19, #3168]
  40b6ec:	mov	w9, #0x0                   	// #0
  40b6f0:	cmp	x8, #0x2
  40b6f4:	str	w9, [x19, #796]
  40b6f8:	b.cs	40b720 <dispatch_message_real+0x634>  // b.hs, b.nlast
  40b6fc:	ldr	x8, [x19, #3168]
  40b700:	mov	x9, #0x8                   	// #8
  40b704:	mul	x8, x9, x8
  40b708:	add	x9, x19, #0xc80
  40b70c:	add	x8, x9, x8
  40b710:	ldr	x8, [x8]
  40b714:	cmp	x8, #0x0
  40b718:	cset	w10, ne  // ne = any
  40b71c:	str	w10, [x19, #796]
  40b720:	ldr	w8, [x19, #796]
  40b724:	tbnz	w8, #0, 40b72c <dispatch_message_real+0x640>
  40b728:	b	40b764 <dispatch_message_real+0x678>
  40b72c:	ldr	x8, [x19, #3168]
  40b730:	mov	x9, #0x8                   	// #8
  40b734:	mul	x8, x9, x8
  40b738:	add	x9, x19, #0xc80
  40b73c:	add	x8, x9, x8
  40b740:	ldr	x0, [x8]
  40b744:	bl	405738 <strlen@plt>
  40b748:	ldr	x8, [x19, #3176]
  40b74c:	add	x8, x8, x0
  40b750:	str	x8, [x19, #3176]
  40b754:	ldr	x8, [x19, #3168]
  40b758:	add	x8, x8, #0x1
  40b75c:	str	x8, [x19, #3168]
  40b760:	b	40b6e8 <dispatch_message_real+0x5fc>
  40b764:	ldr	x8, [x19, #3176]
  40b768:	add	x8, x8, #0x1
  40b76c:	str	x8, [x19, #3160]
  40b770:	ldr	x1, [x19, #3160]
  40b774:	mov	x0, #0x1                   	// #1
  40b778:	bl	40b084 <size_multiply_overflow>
  40b77c:	mov	w8, #0x1                   	// #1
  40b780:	eor	w9, w0, #0x1
  40b784:	eor	w9, w9, w8
  40b788:	eor	w9, w9, w8
  40b78c:	eor	w8, w9, w8
  40b790:	and	w8, w8, #0x1
  40b794:	mov	w1, w8
  40b798:	sxtw	x10, w1
  40b79c:	cbz	x10, 40b7bc <dispatch_message_real+0x6d0>
  40b7a0:	mov	w8, wzr
  40b7a4:	mov	w0, w8
  40b7a8:	ldr	x1, [x19, #872]
  40b7ac:	ldr	x2, [x19, #888]
  40b7b0:	mov	w3, #0x3a0                 	// #928
  40b7b4:	ldr	x4, [x19, #880]
  40b7b8:	bl	405718 <log_assert_failed_realm@plt>
  40b7bc:	ldr	x8, [x19, #3160]
  40b7c0:	mov	x9, #0x1                   	// #1
  40b7c4:	mul	x8, x9, x8
  40b7c8:	cmp	x8, #0x400, lsl #12
  40b7cc:	cset	w10, ls  // ls = plast
  40b7d0:	mov	w11, #0x1                   	// #1
  40b7d4:	eor	w10, w10, #0x1
  40b7d8:	eor	w10, w10, w11
  40b7dc:	eor	w10, w10, w11
  40b7e0:	and	w10, w10, #0x1
  40b7e4:	mov	w0, w10
  40b7e8:	sxtw	x8, w0
  40b7ec:	cbz	x8, 40b80c <dispatch_message_real+0x720>
  40b7f0:	mov	w8, wzr
  40b7f4:	mov	w0, w8
  40b7f8:	ldr	x1, [x19, #896]
  40b7fc:	ldr	x2, [x19, #888]
  40b800:	mov	w3, #0x3a0                 	// #928
  40b804:	ldr	x4, [x19, #880]
  40b808:	bl	405718 <log_assert_failed_realm@plt>
  40b80c:	ldr	x8, [x19, #3160]
  40b810:	mov	x9, #0x1                   	// #1
  40b814:	mul	x8, x9, x8
  40b818:	mul	x8, x8, x9
  40b81c:	add	x8, x8, #0xf
  40b820:	and	x8, x8, #0xfffffffffffffff0
  40b824:	mov	x9, sp
  40b828:	subs	x8, x9, x8
  40b82c:	mov	sp, x8
  40b830:	str	x8, [x19, #3152]
  40b834:	ldr	x8, [x19, #3152]
  40b838:	str	x8, [x19, #3192]
  40b83c:	str	x8, [x19, #3184]
  40b840:	str	xzr, [x19, #3168]
  40b844:	ldr	x8, [x19, #3168]
  40b848:	mov	w9, #0x0                   	// #0
  40b84c:	cmp	x8, #0x2
  40b850:	str	w9, [x19, #792]
  40b854:	b.cs	40b87c <dispatch_message_real+0x790>  // b.hs, b.nlast
  40b858:	ldr	x8, [x19, #3168]
  40b85c:	mov	x9, #0x8                   	// #8
  40b860:	mul	x8, x9, x8
  40b864:	add	x9, x19, #0xc80
  40b868:	add	x8, x9, x8
  40b86c:	ldr	x8, [x8]
  40b870:	cmp	x8, #0x0
  40b874:	cset	w10, ne  // ne = any
  40b878:	str	w10, [x19, #792]
  40b87c:	ldr	w8, [x19, #792]
  40b880:	tbnz	w8, #0, 40b888 <dispatch_message_real+0x79c>
  40b884:	b	40b8bc <dispatch_message_real+0x7d0>
  40b888:	ldr	x0, [x19, #3184]
  40b88c:	ldr	x8, [x19, #3168]
  40b890:	mov	x9, #0x8                   	// #8
  40b894:	mul	x8, x9, x8
  40b898:	add	x9, x19, #0xc80
  40b89c:	add	x8, x9, x8
  40b8a0:	ldr	x1, [x8]
  40b8a4:	bl	405ad8 <stpcpy@plt>
  40b8a8:	str	x0, [x19, #3184]
  40b8ac:	ldr	x8, [x19, #3168]
  40b8b0:	add	x8, x8, #0x1
  40b8b4:	str	x8, [x19, #3168]
  40b8b8:	b	40b844 <dispatch_message_real+0x758>
  40b8bc:	ldr	x8, [x19, #3184]
  40b8c0:	mov	w9, #0x0                   	// #0
  40b8c4:	strb	w9, [x8]
  40b8c8:	ldr	x8, [x19, #3192]
  40b8cc:	str	x8, [x19, #3144]
  40b8d0:	ldr	x8, [x19, #3144]
  40b8d4:	str	x8, [x19, #3216]
  40b8d8:	ldur	x8, [x29, #-16]
  40b8dc:	ldur	x10, [x29, #-24]
  40b8e0:	add	x11, x10, #0x1
  40b8e4:	stur	x11, [x29, #-24]
  40b8e8:	ldr	x11, [x19, #3216]
  40b8ec:	str	x11, [x19, #3128]
  40b8f0:	ldr	x0, [x19, #3216]
  40b8f4:	str	x8, [x19, #784]
  40b8f8:	str	x10, [x19, #776]
  40b8fc:	bl	405738 <strlen@plt>
  40b900:	str	x0, [x19, #3136]
  40b904:	ldr	x8, [x19, #904]
  40b908:	ldr	q0, [x8, #2016]
  40b90c:	ldr	x10, [x19, #784]
  40b910:	ldr	x11, [x19, #776]
  40b914:	str	q0, [x10, x11, lsl #4]
  40b918:	ldur	x8, [x29, #-40]
  40b91c:	ldr	x0, [x8, #40]
  40b920:	bl	4155f8 <isempty>
  40b924:	tbnz	w0, #0, 40bb7c <dispatch_message_real+0xa90>
  40b928:	add	x8, x19, #0xc20
  40b92c:	adrp	x9, 42b000 <_fini+0x13a8>
  40b930:	add	x9, x9, #0x8df
  40b934:	str	x9, [x19, #3104]
  40b938:	ldur	x9, [x29, #-40]
  40b93c:	ldr	x9, [x9, #40]
  40b940:	str	x9, [x8, #8]
  40b944:	str	xzr, [x19, #3080]
  40b948:	str	xzr, [x19, #3072]
  40b94c:	ldr	x8, [x19, #3072]
  40b950:	mov	w9, #0x0                   	// #0
  40b954:	cmp	x8, #0x2
  40b958:	str	w9, [x19, #772]
  40b95c:	b.cs	40b984 <dispatch_message_real+0x898>  // b.hs, b.nlast
  40b960:	ldr	x8, [x19, #3072]
  40b964:	mov	x9, #0x8                   	// #8
  40b968:	mul	x8, x9, x8
  40b96c:	add	x9, x19, #0xc20
  40b970:	add	x8, x9, x8
  40b974:	ldr	x8, [x8]
  40b978:	cmp	x8, #0x0
  40b97c:	cset	w10, ne  // ne = any
  40b980:	str	w10, [x19, #772]
  40b984:	ldr	w8, [x19, #772]
  40b988:	tbnz	w8, #0, 40b990 <dispatch_message_real+0x8a4>
  40b98c:	b	40b9c8 <dispatch_message_real+0x8dc>
  40b990:	ldr	x8, [x19, #3072]
  40b994:	mov	x9, #0x8                   	// #8
  40b998:	mul	x8, x9, x8
  40b99c:	add	x9, x19, #0xc20
  40b9a0:	add	x8, x9, x8
  40b9a4:	ldr	x0, [x8]
  40b9a8:	bl	405738 <strlen@plt>
  40b9ac:	ldr	x8, [x19, #3080]
  40b9b0:	add	x8, x8, x0
  40b9b4:	str	x8, [x19, #3080]
  40b9b8:	ldr	x8, [x19, #3072]
  40b9bc:	add	x8, x8, #0x1
  40b9c0:	str	x8, [x19, #3072]
  40b9c4:	b	40b94c <dispatch_message_real+0x860>
  40b9c8:	ldr	x8, [x19, #3080]
  40b9cc:	add	x8, x8, #0x1
  40b9d0:	str	x8, [x19, #3064]
  40b9d4:	ldr	x1, [x19, #3064]
  40b9d8:	mov	x0, #0x1                   	// #1
  40b9dc:	bl	40b084 <size_multiply_overflow>
  40b9e0:	mov	w8, #0x1                   	// #1
  40b9e4:	eor	w9, w0, #0x1
  40b9e8:	eor	w9, w9, w8
  40b9ec:	eor	w9, w9, w8
  40b9f0:	eor	w8, w9, w8
  40b9f4:	and	w8, w8, #0x1
  40b9f8:	mov	w1, w8
  40b9fc:	sxtw	x10, w1
  40ba00:	cbz	x10, 40ba20 <dispatch_message_real+0x934>
  40ba04:	mov	w8, wzr
  40ba08:	mov	w0, w8
  40ba0c:	ldr	x1, [x19, #872]
  40ba10:	ldr	x2, [x19, #888]
  40ba14:	mov	w3, #0x3a1                 	// #929
  40ba18:	ldr	x4, [x19, #880]
  40ba1c:	bl	405718 <log_assert_failed_realm@plt>
  40ba20:	ldr	x8, [x19, #3064]
  40ba24:	mov	x9, #0x1                   	// #1
  40ba28:	mul	x8, x9, x8
  40ba2c:	cmp	x8, #0x400, lsl #12
  40ba30:	cset	w10, ls  // ls = plast
  40ba34:	mov	w11, #0x1                   	// #1
  40ba38:	eor	w10, w10, #0x1
  40ba3c:	eor	w10, w10, w11
  40ba40:	eor	w10, w10, w11
  40ba44:	and	w10, w10, #0x1
  40ba48:	mov	w0, w10
  40ba4c:	sxtw	x8, w0
  40ba50:	cbz	x8, 40ba70 <dispatch_message_real+0x984>
  40ba54:	mov	w8, wzr
  40ba58:	mov	w0, w8
  40ba5c:	ldr	x1, [x19, #896]
  40ba60:	ldr	x2, [x19, #888]
  40ba64:	mov	w3, #0x3a1                 	// #929
  40ba68:	ldr	x4, [x19, #880]
  40ba6c:	bl	405718 <log_assert_failed_realm@plt>
  40ba70:	ldr	x8, [x19, #3064]
  40ba74:	mov	x9, #0x1                   	// #1
  40ba78:	mul	x8, x9, x8
  40ba7c:	mul	x8, x8, x9
  40ba80:	add	x8, x8, #0xf
  40ba84:	and	x8, x8, #0xfffffffffffffff0
  40ba88:	mov	x9, sp
  40ba8c:	subs	x8, x9, x8
  40ba90:	mov	sp, x8
  40ba94:	str	x8, [x19, #3056]
  40ba98:	ldr	x8, [x19, #3056]
  40ba9c:	str	x8, [x19, #3096]
  40baa0:	str	x8, [x19, #3088]
  40baa4:	str	xzr, [x19, #3072]
  40baa8:	ldr	x8, [x19, #3072]
  40baac:	mov	w9, #0x0                   	// #0
  40bab0:	cmp	x8, #0x2
  40bab4:	str	w9, [x19, #768]
  40bab8:	b.cs	40bae0 <dispatch_message_real+0x9f4>  // b.hs, b.nlast
  40babc:	ldr	x8, [x19, #3072]
  40bac0:	mov	x9, #0x8                   	// #8
  40bac4:	mul	x8, x9, x8
  40bac8:	add	x9, x19, #0xc20
  40bacc:	add	x8, x9, x8
  40bad0:	ldr	x8, [x8]
  40bad4:	cmp	x8, #0x0
  40bad8:	cset	w10, ne  // ne = any
  40badc:	str	w10, [x19, #768]
  40bae0:	ldr	w8, [x19, #768]
  40bae4:	tbnz	w8, #0, 40baec <dispatch_message_real+0xa00>
  40bae8:	b	40bb20 <dispatch_message_real+0xa34>
  40baec:	ldr	x0, [x19, #3088]
  40baf0:	ldr	x8, [x19, #3072]
  40baf4:	mov	x9, #0x8                   	// #8
  40baf8:	mul	x8, x9, x8
  40bafc:	add	x9, x19, #0xc20
  40bb00:	add	x8, x9, x8
  40bb04:	ldr	x1, [x8]
  40bb08:	bl	405ad8 <stpcpy@plt>
  40bb0c:	str	x0, [x19, #3088]
  40bb10:	ldr	x8, [x19, #3072]
  40bb14:	add	x8, x8, #0x1
  40bb18:	str	x8, [x19, #3072]
  40bb1c:	b	40baa8 <dispatch_message_real+0x9bc>
  40bb20:	ldr	x8, [x19, #3088]
  40bb24:	mov	w9, #0x0                   	// #0
  40bb28:	strb	w9, [x8]
  40bb2c:	ldr	x8, [x19, #3096]
  40bb30:	str	x8, [x19, #3048]
  40bb34:	ldr	x8, [x19, #3048]
  40bb38:	str	x8, [x19, #3120]
  40bb3c:	ldur	x8, [x29, #-16]
  40bb40:	ldur	x10, [x29, #-24]
  40bb44:	add	x11, x10, #0x1
  40bb48:	stur	x11, [x29, #-24]
  40bb4c:	ldr	x11, [x19, #3120]
  40bb50:	str	x11, [x19, #3032]
  40bb54:	ldr	x0, [x19, #3120]
  40bb58:	str	x8, [x19, #760]
  40bb5c:	str	x10, [x19, #752]
  40bb60:	bl	405738 <strlen@plt>
  40bb64:	str	x0, [x19, #3040]
  40bb68:	ldr	x8, [x19, #904]
  40bb6c:	ldr	q0, [x8, #1920]
  40bb70:	ldr	x10, [x19, #760]
  40bb74:	ldr	x11, [x19, #752]
  40bb78:	str	q0, [x10, x11, lsl #4]
  40bb7c:	ldur	x8, [x29, #-40]
  40bb80:	ldr	x8, [x8, #48]
  40bb84:	cbz	x8, 40bba8 <dispatch_message_real+0xabc>
  40bb88:	ldur	x0, [x29, #-16]
  40bb8c:	ldur	x8, [x29, #-40]
  40bb90:	ldr	x3, [x8, #48]
  40bb94:	sub	x1, x29, #0x18
  40bb98:	adrp	x2, 42b000 <_fini+0x13a8>
  40bb9c:	add	x2, x2, #0x8e5
  40bba0:	bl	405ae8 <set_iovec_string_field@plt>
  40bba4:	stur	x0, [x29, #-120]
  40bba8:	ldur	x8, [x29, #-40]
  40bbac:	ldr	x0, [x8, #56]
  40bbb0:	bl	4155f8 <isempty>
  40bbb4:	tbnz	w0, #0, 40be0c <dispatch_message_real+0xd20>
  40bbb8:	add	x8, x19, #0xbc0
  40bbbc:	adrp	x9, 42b000 <_fini+0x13a8>
  40bbc0:	add	x9, x9, #0x8ef
  40bbc4:	str	x9, [x19, #3008]
  40bbc8:	ldur	x9, [x29, #-40]
  40bbcc:	ldr	x9, [x9, #56]
  40bbd0:	str	x9, [x8, #8]
  40bbd4:	str	xzr, [x19, #2984]
  40bbd8:	str	xzr, [x19, #2976]
  40bbdc:	ldr	x8, [x19, #2976]
  40bbe0:	mov	w9, #0x0                   	// #0
  40bbe4:	cmp	x8, #0x2
  40bbe8:	str	w9, [x19, #748]
  40bbec:	b.cs	40bc14 <dispatch_message_real+0xb28>  // b.hs, b.nlast
  40bbf0:	ldr	x8, [x19, #2976]
  40bbf4:	mov	x9, #0x8                   	// #8
  40bbf8:	mul	x8, x9, x8
  40bbfc:	add	x9, x19, #0xbc0
  40bc00:	add	x8, x9, x8
  40bc04:	ldr	x8, [x8]
  40bc08:	cmp	x8, #0x0
  40bc0c:	cset	w10, ne  // ne = any
  40bc10:	str	w10, [x19, #748]
  40bc14:	ldr	w8, [x19, #748]
  40bc18:	tbnz	w8, #0, 40bc20 <dispatch_message_real+0xb34>
  40bc1c:	b	40bc58 <dispatch_message_real+0xb6c>
  40bc20:	ldr	x8, [x19, #2976]
  40bc24:	mov	x9, #0x8                   	// #8
  40bc28:	mul	x8, x9, x8
  40bc2c:	add	x9, x19, #0xbc0
  40bc30:	add	x8, x9, x8
  40bc34:	ldr	x0, [x8]
  40bc38:	bl	405738 <strlen@plt>
  40bc3c:	ldr	x8, [x19, #2984]
  40bc40:	add	x8, x8, x0
  40bc44:	str	x8, [x19, #2984]
  40bc48:	ldr	x8, [x19, #2976]
  40bc4c:	add	x8, x8, #0x1
  40bc50:	str	x8, [x19, #2976]
  40bc54:	b	40bbdc <dispatch_message_real+0xaf0>
  40bc58:	ldr	x8, [x19, #2984]
  40bc5c:	add	x8, x8, #0x1
  40bc60:	str	x8, [x19, #2968]
  40bc64:	ldr	x1, [x19, #2968]
  40bc68:	mov	x0, #0x1                   	// #1
  40bc6c:	bl	40b084 <size_multiply_overflow>
  40bc70:	mov	w8, #0x1                   	// #1
  40bc74:	eor	w9, w0, #0x1
  40bc78:	eor	w9, w9, w8
  40bc7c:	eor	w9, w9, w8
  40bc80:	eor	w8, w9, w8
  40bc84:	and	w8, w8, #0x1
  40bc88:	mov	w1, w8
  40bc8c:	sxtw	x10, w1
  40bc90:	cbz	x10, 40bcb0 <dispatch_message_real+0xbc4>
  40bc94:	mov	w8, wzr
  40bc98:	mov	w0, w8
  40bc9c:	ldr	x1, [x19, #872]
  40bca0:	ldr	x2, [x19, #888]
  40bca4:	mov	w3, #0x3a8                 	// #936
  40bca8:	ldr	x4, [x19, #880]
  40bcac:	bl	405718 <log_assert_failed_realm@plt>
  40bcb0:	ldr	x8, [x19, #2968]
  40bcb4:	mov	x9, #0x1                   	// #1
  40bcb8:	mul	x8, x9, x8
  40bcbc:	cmp	x8, #0x400, lsl #12
  40bcc0:	cset	w10, ls  // ls = plast
  40bcc4:	mov	w11, #0x1                   	// #1
  40bcc8:	eor	w10, w10, #0x1
  40bccc:	eor	w10, w10, w11
  40bcd0:	eor	w10, w10, w11
  40bcd4:	and	w10, w10, #0x1
  40bcd8:	mov	w0, w10
  40bcdc:	sxtw	x8, w0
  40bce0:	cbz	x8, 40bd00 <dispatch_message_real+0xc14>
  40bce4:	mov	w8, wzr
  40bce8:	mov	w0, w8
  40bcec:	ldr	x1, [x19, #896]
  40bcf0:	ldr	x2, [x19, #888]
  40bcf4:	mov	w3, #0x3a8                 	// #936
  40bcf8:	ldr	x4, [x19, #880]
  40bcfc:	bl	405718 <log_assert_failed_realm@plt>
  40bd00:	ldr	x8, [x19, #2968]
  40bd04:	mov	x9, #0x1                   	// #1
  40bd08:	mul	x8, x9, x8
  40bd0c:	mul	x8, x8, x9
  40bd10:	add	x8, x8, #0xf
  40bd14:	and	x8, x8, #0xfffffffffffffff0
  40bd18:	mov	x9, sp
  40bd1c:	subs	x8, x9, x8
  40bd20:	mov	sp, x8
  40bd24:	str	x8, [x19, #2960]
  40bd28:	ldr	x8, [x19, #2960]
  40bd2c:	str	x8, [x19, #3000]
  40bd30:	str	x8, [x19, #2992]
  40bd34:	str	xzr, [x19, #2976]
  40bd38:	ldr	x8, [x19, #2976]
  40bd3c:	mov	w9, #0x0                   	// #0
  40bd40:	cmp	x8, #0x2
  40bd44:	str	w9, [x19, #744]
  40bd48:	b.cs	40bd70 <dispatch_message_real+0xc84>  // b.hs, b.nlast
  40bd4c:	ldr	x8, [x19, #2976]
  40bd50:	mov	x9, #0x8                   	// #8
  40bd54:	mul	x8, x9, x8
  40bd58:	add	x9, x19, #0xbc0
  40bd5c:	add	x8, x9, x8
  40bd60:	ldr	x8, [x8]
  40bd64:	cmp	x8, #0x0
  40bd68:	cset	w10, ne  // ne = any
  40bd6c:	str	w10, [x19, #744]
  40bd70:	ldr	w8, [x19, #744]
  40bd74:	tbnz	w8, #0, 40bd7c <dispatch_message_real+0xc90>
  40bd78:	b	40bdb0 <dispatch_message_real+0xcc4>
  40bd7c:	ldr	x0, [x19, #2992]
  40bd80:	ldr	x8, [x19, #2976]
  40bd84:	mov	x9, #0x8                   	// #8
  40bd88:	mul	x8, x9, x8
  40bd8c:	add	x9, x19, #0xbc0
  40bd90:	add	x8, x9, x8
  40bd94:	ldr	x1, [x8]
  40bd98:	bl	405ad8 <stpcpy@plt>
  40bd9c:	str	x0, [x19, #2992]
  40bda0:	ldr	x8, [x19, #2976]
  40bda4:	add	x8, x8, #0x1
  40bda8:	str	x8, [x19, #2976]
  40bdac:	b	40bd38 <dispatch_message_real+0xc4c>
  40bdb0:	ldr	x8, [x19, #2992]
  40bdb4:	mov	w9, #0x0                   	// #0
  40bdb8:	strb	w9, [x8]
  40bdbc:	ldr	x8, [x19, #3000]
  40bdc0:	str	x8, [x19, #2952]
  40bdc4:	ldr	x8, [x19, #2952]
  40bdc8:	str	x8, [x19, #3024]
  40bdcc:	ldur	x8, [x29, #-16]
  40bdd0:	ldur	x10, [x29, #-24]
  40bdd4:	add	x11, x10, #0x1
  40bdd8:	stur	x11, [x29, #-24]
  40bddc:	ldr	x11, [x19, #3024]
  40bde0:	str	x11, [x19, #2936]
  40bde4:	ldr	x0, [x19, #3024]
  40bde8:	str	x8, [x19, #736]
  40bdec:	str	x10, [x19, #728]
  40bdf0:	bl	405738 <strlen@plt>
  40bdf4:	str	x0, [x19, #2944]
  40bdf8:	ldr	x8, [x19, #904]
  40bdfc:	ldr	q0, [x8, #1824]
  40be00:	ldr	x10, [x19, #736]
  40be04:	ldr	x11, [x19, #728]
  40be08:	str	q0, [x10, x11, lsl #4]
  40be0c:	ldur	x8, [x29, #-40]
  40be10:	ldr	x8, [x8, #152]
  40be14:	cmp	x8, #0x0
  40be18:	cset	w9, ls  // ls = plast
  40be1c:	tbnz	w9, #0, 40bf80 <dispatch_message_real+0xe94>
  40be20:	ldur	x8, [x29, #-40]
  40be24:	ldr	x8, [x8, #152]
  40be28:	add	x8, x8, #0x11
  40be2c:	add	x8, x8, #0x1
  40be30:	str	x8, [x19, #2920]
  40be34:	ldr	x1, [x19, #2920]
  40be38:	mov	x0, #0x1                   	// #1
  40be3c:	bl	40b084 <size_multiply_overflow>
  40be40:	mov	w8, #0x1                   	// #1
  40be44:	eor	w9, w0, #0x1
  40be48:	eor	w9, w9, w8
  40be4c:	eor	w9, w9, w8
  40be50:	eor	w8, w9, w8
  40be54:	and	w8, w8, #0x1
  40be58:	mov	w1, w8
  40be5c:	sxtw	x10, w1
  40be60:	cbz	x10, 40be80 <dispatch_message_real+0xd94>
  40be64:	mov	w8, wzr
  40be68:	mov	w0, w8
  40be6c:	ldr	x1, [x19, #872]
  40be70:	ldr	x2, [x19, #888]
  40be74:	mov	w3, #0x3a9                 	// #937
  40be78:	ldr	x4, [x19, #880]
  40be7c:	bl	405718 <log_assert_failed_realm@plt>
  40be80:	ldr	x8, [x19, #2920]
  40be84:	mov	x9, #0x1                   	// #1
  40be88:	mul	x8, x9, x8
  40be8c:	cmp	x8, #0x400, lsl #12
  40be90:	cset	w10, ls  // ls = plast
  40be94:	mov	w11, #0x1                   	// #1
  40be98:	eor	w10, w10, #0x1
  40be9c:	eor	w10, w10, w11
  40bea0:	eor	w10, w10, w11
  40bea4:	and	w10, w10, #0x1
  40bea8:	mov	w0, w10
  40beac:	sxtw	x8, w0
  40beb0:	cbz	x8, 40bed0 <dispatch_message_real+0xde4>
  40beb4:	mov	w8, wzr
  40beb8:	mov	w0, w8
  40bebc:	ldr	x1, [x19, #896]
  40bec0:	ldr	x2, [x19, #888]
  40bec4:	mov	w3, #0x3a9                 	// #937
  40bec8:	ldr	x4, [x19, #880]
  40becc:	bl	405718 <log_assert_failed_realm@plt>
  40bed0:	ldr	x8, [x19, #2920]
  40bed4:	mov	x9, #0x1                   	// #1
  40bed8:	mul	x8, x9, x8
  40bedc:	mul	x8, x8, x9
  40bee0:	add	x8, x8, #0xf
  40bee4:	and	x8, x8, #0xfffffffffffffff0
  40bee8:	mov	x9, sp
  40beec:	subs	x8, x9, x8
  40bef0:	mov	sp, x8
  40bef4:	str	x8, [x19, #2912]
  40bef8:	ldr	x8, [x19, #2912]
  40befc:	str	x8, [x19, #2928]
  40bf00:	ldr	x0, [x19, #2928]
  40bf04:	adrp	x1, 42b000 <_fini+0x13a8>
  40bf08:	add	x1, x1, #0x8ff
  40bf0c:	bl	405ad8 <stpcpy@plt>
  40bf10:	ldur	x8, [x29, #-40]
  40bf14:	ldr	x1, [x8, #144]
  40bf18:	ldur	x8, [x29, #-40]
  40bf1c:	ldr	x8, [x8, #152]
  40bf20:	str	x0, [x19, #720]
  40bf24:	mov	x2, x8
  40bf28:	str	x8, [x19, #712]
  40bf2c:	bl	405af8 <memcpy@plt>
  40bf30:	ldr	x8, [x19, #720]
  40bf34:	ldr	x9, [x19, #712]
  40bf38:	add	x10, x8, x9
  40bf3c:	mov	w11, #0x0                   	// #0
  40bf40:	strb	w11, [x10]
  40bf44:	ldur	x10, [x29, #-16]
  40bf48:	ldur	x12, [x29, #-24]
  40bf4c:	add	x13, x12, #0x1
  40bf50:	stur	x13, [x29, #-24]
  40bf54:	ldr	x13, [x19, #2928]
  40bf58:	str	x13, [x19, #2896]
  40bf5c:	ldr	x0, [x19, #2928]
  40bf60:	str	x10, [x19, #704]
  40bf64:	str	x12, [x19, #696]
  40bf68:	bl	405738 <strlen@plt>
  40bf6c:	str	x0, [x19, #2904]
  40bf70:	ldr	q0, [x19, #2896]
  40bf74:	ldr	x8, [x19, #704]
  40bf78:	ldr	x9, [x19, #696]
  40bf7c:	str	q0, [x8, x9, lsl #4]
  40bf80:	ldur	x8, [x29, #-40]
  40bf84:	ldr	w0, [x8, #64]
  40bf88:	bl	415ffc <audit_session_is_valid>
  40bf8c:	tbnz	w0, #0, 40bf94 <dispatch_message_real+0xea8>
  40bf90:	b	40c0c4 <dispatch_message_real+0xfd8>
  40bf94:	mov	x8, #0x1c                  	// #28
  40bf98:	str	x8, [x19, #2880]
  40bf9c:	ldr	x1, [x19, #2880]
  40bfa0:	mov	x0, #0x1                   	// #1
  40bfa4:	bl	40b084 <size_multiply_overflow>
  40bfa8:	mov	w8, #0x1                   	// #1
  40bfac:	eor	w9, w0, #0x1
  40bfb0:	eor	w9, w9, w8
  40bfb4:	eor	w9, w9, w8
  40bfb8:	eor	w8, w9, w8
  40bfbc:	and	w8, w8, #0x1
  40bfc0:	mov	w1, w8
  40bfc4:	sxtw	x10, w1
  40bfc8:	cbz	x10, 40bfe8 <dispatch_message_real+0xefc>
  40bfcc:	mov	w8, wzr
  40bfd0:	mov	w0, w8
  40bfd4:	ldr	x1, [x19, #872]
  40bfd8:	ldr	x2, [x19, #888]
  40bfdc:	mov	w3, #0x3aa                 	// #938
  40bfe0:	ldr	x4, [x19, #880]
  40bfe4:	bl	405718 <log_assert_failed_realm@plt>
  40bfe8:	ldr	x8, [x19, #2880]
  40bfec:	mov	x9, #0x1                   	// #1
  40bff0:	mul	x8, x9, x8
  40bff4:	cmp	x8, #0x400, lsl #12
  40bff8:	cset	w10, ls  // ls = plast
  40bffc:	mov	w11, #0x1                   	// #1
  40c000:	eor	w10, w10, #0x1
  40c004:	eor	w10, w10, w11
  40c008:	eor	w10, w10, w11
  40c00c:	and	w10, w10, #0x1
  40c010:	mov	w0, w10
  40c014:	sxtw	x8, w0
  40c018:	cbz	x8, 40c038 <dispatch_message_real+0xf4c>
  40c01c:	mov	w8, wzr
  40c020:	mov	w0, w8
  40c024:	ldr	x1, [x19, #896]
  40c028:	ldr	x2, [x19, #888]
  40c02c:	mov	w3, #0x3aa                 	// #938
  40c030:	ldr	x4, [x19, #880]
  40c034:	bl	405718 <log_assert_failed_realm@plt>
  40c038:	ldr	x8, [x19, #2880]
  40c03c:	mov	x9, #0x1                   	// #1
  40c040:	mul	x8, x9, x8
  40c044:	mul	x8, x8, x9
  40c048:	add	x8, x8, #0xf
  40c04c:	and	x8, x8, #0xfffffffffffffff0
  40c050:	mov	x9, sp
  40c054:	subs	x8, x9, x8
  40c058:	mov	sp, x8
  40c05c:	str	x8, [x19, #2872]
  40c060:	ldr	x8, [x19, #2872]
  40c064:	str	x8, [x19, #2888]
  40c068:	ldr	x0, [x19, #2888]
  40c06c:	ldur	x8, [x29, #-40]
  40c070:	ldr	w2, [x8, #64]
  40c074:	adrp	x1, 42b000 <_fini+0x13a8>
  40c078:	add	x1, x1, #0x911
  40c07c:	bl	405ab8 <sprintf@plt>
  40c080:	ldur	x8, [x29, #-16]
  40c084:	ldur	x9, [x29, #-24]
  40c088:	add	x10, x9, #0x1
  40c08c:	stur	x10, [x29, #-24]
  40c090:	ldr	x10, [x19, #2888]
  40c094:	str	x10, [x19, #2856]
  40c098:	ldr	x10, [x19, #2888]
  40c09c:	mov	x0, x10
  40c0a0:	str	x8, [x19, #688]
  40c0a4:	str	x9, [x19, #680]
  40c0a8:	bl	405738 <strlen@plt>
  40c0ac:	str	x0, [x19, #2864]
  40c0b0:	ldr	x8, [x19, #904]
  40c0b4:	ldr	q0, [x8, #1744]
  40c0b8:	ldr	x9, [x19, #688]
  40c0bc:	ldr	x10, [x19, #680]
  40c0c0:	str	q0, [x9, x10, lsl #4]
  40c0c4:	ldur	x8, [x29, #-40]
  40c0c8:	ldr	w0, [x8, #68]
  40c0cc:	bl	405ac8 <uid_is_valid@plt>
  40c0d0:	tbnz	w0, #0, 40c0d8 <dispatch_message_real+0xfec>
  40c0d4:	b	40c204 <dispatch_message_real+0x1118>
  40c0d8:	mov	x8, #0x1d                  	// #29
  40c0dc:	str	x8, [x19, #2840]
  40c0e0:	ldr	x1, [x19, #2840]
  40c0e4:	mov	x0, #0x1                   	// #1
  40c0e8:	bl	40b084 <size_multiply_overflow>
  40c0ec:	mov	w8, #0x1                   	// #1
  40c0f0:	eor	w9, w0, #0x1
  40c0f4:	eor	w9, w9, w8
  40c0f8:	eor	w9, w9, w8
  40c0fc:	eor	w8, w9, w8
  40c100:	and	w8, w8, #0x1
  40c104:	mov	w1, w8
  40c108:	sxtw	x10, w1
  40c10c:	cbz	x10, 40c12c <dispatch_message_real+0x1040>
  40c110:	mov	w8, wzr
  40c114:	mov	w0, w8
  40c118:	ldr	x1, [x19, #872]
  40c11c:	ldr	x2, [x19, #888]
  40c120:	mov	w3, #0x3ab                 	// #939
  40c124:	ldr	x4, [x19, #880]
  40c128:	bl	405718 <log_assert_failed_realm@plt>
  40c12c:	ldr	x8, [x19, #2840]
  40c130:	mov	x9, #0x1                   	// #1
  40c134:	mul	x8, x9, x8
  40c138:	cmp	x8, #0x400, lsl #12
  40c13c:	cset	w10, ls  // ls = plast
  40c140:	mov	w11, #0x1                   	// #1
  40c144:	eor	w10, w10, #0x1
  40c148:	eor	w10, w10, w11
  40c14c:	eor	w10, w10, w11
  40c150:	and	w10, w10, #0x1
  40c154:	mov	w0, w10
  40c158:	sxtw	x8, w0
  40c15c:	cbz	x8, 40c17c <dispatch_message_real+0x1090>
  40c160:	mov	w8, wzr
  40c164:	mov	w0, w8
  40c168:	ldr	x1, [x19, #896]
  40c16c:	ldr	x2, [x19, #888]
  40c170:	mov	w3, #0x3ab                 	// #939
  40c174:	ldr	x4, [x19, #880]
  40c178:	bl	405718 <log_assert_failed_realm@plt>
  40c17c:	ldr	x8, [x19, #2840]
  40c180:	mov	x9, #0x1                   	// #1
  40c184:	mul	x8, x9, x8
  40c188:	mul	x8, x8, x9
  40c18c:	add	x8, x8, #0xf
  40c190:	and	x8, x8, #0xfffffffffffffff0
  40c194:	mov	x9, sp
  40c198:	subs	x8, x9, x8
  40c19c:	mov	sp, x8
  40c1a0:	str	x8, [x19, #2832]
  40c1a4:	ldr	x8, [x19, #2832]
  40c1a8:	str	x8, [x19, #2848]
  40c1ac:	ldr	x0, [x19, #2848]
  40c1b0:	ldur	x8, [x29, #-40]
  40c1b4:	ldr	w2, [x8, #68]
  40c1b8:	adrp	x1, 42b000 <_fini+0x13a8>
  40c1bc:	add	x1, x1, #0x923
  40c1c0:	bl	405ab8 <sprintf@plt>
  40c1c4:	ldur	x8, [x29, #-16]
  40c1c8:	ldur	x9, [x29, #-24]
  40c1cc:	add	x10, x9, #0x1
  40c1d0:	stur	x10, [x29, #-24]
  40c1d4:	ldr	x10, [x19, #2848]
  40c1d8:	str	x10, [x19, #2816]
  40c1dc:	ldr	x10, [x19, #2848]
  40c1e0:	mov	x0, x10
  40c1e4:	str	x8, [x19, #672]
  40c1e8:	str	x9, [x19, #664]
  40c1ec:	bl	405738 <strlen@plt>
  40c1f0:	str	x0, [x19, #2824]
  40c1f4:	ldr	q0, [x19, #2816]
  40c1f8:	ldr	x8, [x19, #672]
  40c1fc:	ldr	x9, [x19, #664]
  40c200:	str	q0, [x8, x9, lsl #4]
  40c204:	ldur	x8, [x29, #-40]
  40c208:	ldr	x0, [x8, #72]
  40c20c:	bl	4155f8 <isempty>
  40c210:	tbnz	w0, #0, 40c464 <dispatch_message_real+0x1378>
  40c214:	add	x8, x19, #0xae8
  40c218:	adrp	x9, 42b000 <_fini+0x13a8>
  40c21c:	add	x9, x9, #0x936
  40c220:	str	x9, [x19, #2792]
  40c224:	ldur	x9, [x29, #-40]
  40c228:	ldr	x9, [x9, #72]
  40c22c:	str	x9, [x8, #8]
  40c230:	str	xzr, [x19, #2768]
  40c234:	str	xzr, [x19, #2760]
  40c238:	ldr	x8, [x19, #2760]
  40c23c:	mov	w9, #0x0                   	// #0
  40c240:	cmp	x8, #0x2
  40c244:	str	w9, [x19, #660]
  40c248:	b.cs	40c270 <dispatch_message_real+0x1184>  // b.hs, b.nlast
  40c24c:	ldr	x8, [x19, #2760]
  40c250:	mov	x9, #0x8                   	// #8
  40c254:	mul	x8, x9, x8
  40c258:	add	x9, x19, #0xae8
  40c25c:	add	x8, x9, x8
  40c260:	ldr	x8, [x8]
  40c264:	cmp	x8, #0x0
  40c268:	cset	w10, ne  // ne = any
  40c26c:	str	w10, [x19, #660]
  40c270:	ldr	w8, [x19, #660]
  40c274:	tbnz	w8, #0, 40c27c <dispatch_message_real+0x1190>
  40c278:	b	40c2b4 <dispatch_message_real+0x11c8>
  40c27c:	ldr	x8, [x19, #2760]
  40c280:	mov	x9, #0x8                   	// #8
  40c284:	mul	x8, x9, x8
  40c288:	add	x9, x19, #0xae8
  40c28c:	add	x8, x9, x8
  40c290:	ldr	x0, [x8]
  40c294:	bl	405738 <strlen@plt>
  40c298:	ldr	x8, [x19, #2768]
  40c29c:	add	x8, x8, x0
  40c2a0:	str	x8, [x19, #2768]
  40c2a4:	ldr	x8, [x19, #2760]
  40c2a8:	add	x8, x8, #0x1
  40c2ac:	str	x8, [x19, #2760]
  40c2b0:	b	40c238 <dispatch_message_real+0x114c>
  40c2b4:	ldr	x8, [x19, #2768]
  40c2b8:	add	x8, x8, #0x1
  40c2bc:	str	x8, [x19, #2752]
  40c2c0:	ldr	x1, [x19, #2752]
  40c2c4:	mov	x0, #0x1                   	// #1
  40c2c8:	bl	40b084 <size_multiply_overflow>
  40c2cc:	mov	w8, #0x1                   	// #1
  40c2d0:	eor	w9, w0, #0x1
  40c2d4:	eor	w9, w9, w8
  40c2d8:	eor	w9, w9, w8
  40c2dc:	eor	w8, w9, w8
  40c2e0:	and	w8, w8, #0x1
  40c2e4:	mov	w1, w8
  40c2e8:	sxtw	x10, w1
  40c2ec:	cbz	x10, 40c30c <dispatch_message_real+0x1220>
  40c2f0:	mov	w8, wzr
  40c2f4:	mov	w0, w8
  40c2f8:	ldr	x1, [x19, #872]
  40c2fc:	ldr	x2, [x19, #888]
  40c300:	mov	w3, #0x3ad                 	// #941
  40c304:	ldr	x4, [x19, #880]
  40c308:	bl	405718 <log_assert_failed_realm@plt>
  40c30c:	ldr	x8, [x19, #2752]
  40c310:	mov	x9, #0x1                   	// #1
  40c314:	mul	x8, x9, x8
  40c318:	cmp	x8, #0x400, lsl #12
  40c31c:	cset	w10, ls  // ls = plast
  40c320:	mov	w11, #0x1                   	// #1
  40c324:	eor	w10, w10, #0x1
  40c328:	eor	w10, w10, w11
  40c32c:	eor	w10, w10, w11
  40c330:	and	w10, w10, #0x1
  40c334:	mov	w0, w10
  40c338:	sxtw	x8, w0
  40c33c:	cbz	x8, 40c35c <dispatch_message_real+0x1270>
  40c340:	mov	w8, wzr
  40c344:	mov	w0, w8
  40c348:	ldr	x1, [x19, #896]
  40c34c:	ldr	x2, [x19, #888]
  40c350:	mov	w3, #0x3ad                 	// #941
  40c354:	ldr	x4, [x19, #880]
  40c358:	bl	405718 <log_assert_failed_realm@plt>
  40c35c:	ldr	x8, [x19, #2752]
  40c360:	mov	x9, #0x1                   	// #1
  40c364:	mul	x8, x9, x8
  40c368:	mul	x8, x8, x9
  40c36c:	add	x8, x8, #0xf
  40c370:	and	x8, x8, #0xfffffffffffffff0
  40c374:	mov	x9, sp
  40c378:	subs	x8, x9, x8
  40c37c:	mov	sp, x8
  40c380:	str	x8, [x19, #2744]
  40c384:	ldr	x8, [x19, #2744]
  40c388:	str	x8, [x19, #2784]
  40c38c:	str	x8, [x19, #2776]
  40c390:	str	xzr, [x19, #2760]
  40c394:	ldr	x8, [x19, #2760]
  40c398:	mov	w9, #0x0                   	// #0
  40c39c:	cmp	x8, #0x2
  40c3a0:	str	w9, [x19, #656]
  40c3a4:	b.cs	40c3cc <dispatch_message_real+0x12e0>  // b.hs, b.nlast
  40c3a8:	ldr	x8, [x19, #2760]
  40c3ac:	mov	x9, #0x8                   	// #8
  40c3b0:	mul	x8, x9, x8
  40c3b4:	add	x9, x19, #0xae8
  40c3b8:	add	x8, x9, x8
  40c3bc:	ldr	x8, [x8]
  40c3c0:	cmp	x8, #0x0
  40c3c4:	cset	w10, ne  // ne = any
  40c3c8:	str	w10, [x19, #656]
  40c3cc:	ldr	w8, [x19, #656]
  40c3d0:	tbnz	w8, #0, 40c3d8 <dispatch_message_real+0x12ec>
  40c3d4:	b	40c40c <dispatch_message_real+0x1320>
  40c3d8:	ldr	x0, [x19, #2776]
  40c3dc:	ldr	x8, [x19, #2760]
  40c3e0:	mov	x9, #0x8                   	// #8
  40c3e4:	mul	x8, x9, x8
  40c3e8:	add	x9, x19, #0xae8
  40c3ec:	add	x8, x9, x8
  40c3f0:	ldr	x1, [x8]
  40c3f4:	bl	405ad8 <stpcpy@plt>
  40c3f8:	str	x0, [x19, #2776]
  40c3fc:	ldr	x8, [x19, #2760]
  40c400:	add	x8, x8, #0x1
  40c404:	str	x8, [x19, #2760]
  40c408:	b	40c394 <dispatch_message_real+0x12a8>
  40c40c:	ldr	x8, [x19, #2776]
  40c410:	mov	w9, #0x0                   	// #0
  40c414:	strb	w9, [x8]
  40c418:	ldr	x8, [x19, #2784]
  40c41c:	str	x8, [x19, #2736]
  40c420:	ldr	x8, [x19, #2736]
  40c424:	str	x8, [x19, #2808]
  40c428:	ldur	x8, [x29, #-16]
  40c42c:	ldur	x10, [x29, #-24]
  40c430:	add	x11, x10, #0x1
  40c434:	stur	x11, [x29, #-24]
  40c438:	ldr	x11, [x19, #2808]
  40c43c:	str	x11, [x19, #2720]
  40c440:	ldr	x0, [x19, #2808]
  40c444:	str	x8, [x19, #648]
  40c448:	str	x10, [x19, #640]
  40c44c:	bl	405738 <strlen@plt>
  40c450:	str	x0, [x19, #2728]
  40c454:	ldr	q0, [x19, #2720]
  40c458:	ldr	x8, [x19, #648]
  40c45c:	ldr	x10, [x19, #640]
  40c460:	str	q0, [x8, x10, lsl #4]
  40c464:	ldur	x8, [x29, #-40]
  40c468:	ldr	x0, [x8, #80]
  40c46c:	bl	4155f8 <isempty>
  40c470:	tbnz	w0, #0, 40c6c4 <dispatch_message_real+0x15d8>
  40c474:	add	x8, x19, #0xa88
  40c478:	adrp	x9, 42b000 <_fini+0x13a8>
  40c47c:	add	x9, x9, #0x947
  40c480:	str	x9, [x19, #2696]
  40c484:	ldur	x9, [x29, #-40]
  40c488:	ldr	x9, [x9, #80]
  40c48c:	str	x9, [x8, #8]
  40c490:	str	xzr, [x19, #2672]
  40c494:	str	xzr, [x19, #2664]
  40c498:	ldr	x8, [x19, #2664]
  40c49c:	mov	w9, #0x0                   	// #0
  40c4a0:	cmp	x8, #0x2
  40c4a4:	str	w9, [x19, #636]
  40c4a8:	b.cs	40c4d0 <dispatch_message_real+0x13e4>  // b.hs, b.nlast
  40c4ac:	ldr	x8, [x19, #2664]
  40c4b0:	mov	x9, #0x8                   	// #8
  40c4b4:	mul	x8, x9, x8
  40c4b8:	add	x9, x19, #0xa88
  40c4bc:	add	x8, x9, x8
  40c4c0:	ldr	x8, [x8]
  40c4c4:	cmp	x8, #0x0
  40c4c8:	cset	w10, ne  // ne = any
  40c4cc:	str	w10, [x19, #636]
  40c4d0:	ldr	w8, [x19, #636]
  40c4d4:	tbnz	w8, #0, 40c4dc <dispatch_message_real+0x13f0>
  40c4d8:	b	40c514 <dispatch_message_real+0x1428>
  40c4dc:	ldr	x8, [x19, #2664]
  40c4e0:	mov	x9, #0x8                   	// #8
  40c4e4:	mul	x8, x9, x8
  40c4e8:	add	x9, x19, #0xa88
  40c4ec:	add	x8, x9, x8
  40c4f0:	ldr	x0, [x8]
  40c4f4:	bl	405738 <strlen@plt>
  40c4f8:	ldr	x8, [x19, #2672]
  40c4fc:	add	x8, x8, x0
  40c500:	str	x8, [x19, #2672]
  40c504:	ldr	x8, [x19, #2664]
  40c508:	add	x8, x8, #0x1
  40c50c:	str	x8, [x19, #2664]
  40c510:	b	40c498 <dispatch_message_real+0x13ac>
  40c514:	ldr	x8, [x19, #2672]
  40c518:	add	x8, x8, #0x1
  40c51c:	str	x8, [x19, #2656]
  40c520:	ldr	x1, [x19, #2656]
  40c524:	mov	x0, #0x1                   	// #1
  40c528:	bl	40b084 <size_multiply_overflow>
  40c52c:	mov	w8, #0x1                   	// #1
  40c530:	eor	w9, w0, #0x1
  40c534:	eor	w9, w9, w8
  40c538:	eor	w9, w9, w8
  40c53c:	eor	w8, w9, w8
  40c540:	and	w8, w8, #0x1
  40c544:	mov	w1, w8
  40c548:	sxtw	x10, w1
  40c54c:	cbz	x10, 40c56c <dispatch_message_real+0x1480>
  40c550:	mov	w8, wzr
  40c554:	mov	w0, w8
  40c558:	ldr	x1, [x19, #872]
  40c55c:	ldr	x2, [x19, #888]
  40c560:	mov	w3, #0x3ae                 	// #942
  40c564:	ldr	x4, [x19, #880]
  40c568:	bl	405718 <log_assert_failed_realm@plt>
  40c56c:	ldr	x8, [x19, #2656]
  40c570:	mov	x9, #0x1                   	// #1
  40c574:	mul	x8, x9, x8
  40c578:	cmp	x8, #0x400, lsl #12
  40c57c:	cset	w10, ls  // ls = plast
  40c580:	mov	w11, #0x1                   	// #1
  40c584:	eor	w10, w10, #0x1
  40c588:	eor	w10, w10, w11
  40c58c:	eor	w10, w10, w11
  40c590:	and	w10, w10, #0x1
  40c594:	mov	w0, w10
  40c598:	sxtw	x8, w0
  40c59c:	cbz	x8, 40c5bc <dispatch_message_real+0x14d0>
  40c5a0:	mov	w8, wzr
  40c5a4:	mov	w0, w8
  40c5a8:	ldr	x1, [x19, #896]
  40c5ac:	ldr	x2, [x19, #888]
  40c5b0:	mov	w3, #0x3ae                 	// #942
  40c5b4:	ldr	x4, [x19, #880]
  40c5b8:	bl	405718 <log_assert_failed_realm@plt>
  40c5bc:	ldr	x8, [x19, #2656]
  40c5c0:	mov	x9, #0x1                   	// #1
  40c5c4:	mul	x8, x9, x8
  40c5c8:	mul	x8, x8, x9
  40c5cc:	add	x8, x8, #0xf
  40c5d0:	and	x8, x8, #0xfffffffffffffff0
  40c5d4:	mov	x9, sp
  40c5d8:	subs	x8, x9, x8
  40c5dc:	mov	sp, x8
  40c5e0:	str	x8, [x19, #2648]
  40c5e4:	ldr	x8, [x19, #2648]
  40c5e8:	str	x8, [x19, #2688]
  40c5ec:	str	x8, [x19, #2680]
  40c5f0:	str	xzr, [x19, #2664]
  40c5f4:	ldr	x8, [x19, #2664]
  40c5f8:	mov	w9, #0x0                   	// #0
  40c5fc:	cmp	x8, #0x2
  40c600:	str	w9, [x19, #632]
  40c604:	b.cs	40c62c <dispatch_message_real+0x1540>  // b.hs, b.nlast
  40c608:	ldr	x8, [x19, #2664]
  40c60c:	mov	x9, #0x8                   	// #8
  40c610:	mul	x8, x9, x8
  40c614:	add	x9, x19, #0xa88
  40c618:	add	x8, x9, x8
  40c61c:	ldr	x8, [x8]
  40c620:	cmp	x8, #0x0
  40c624:	cset	w10, ne  // ne = any
  40c628:	str	w10, [x19, #632]
  40c62c:	ldr	w8, [x19, #632]
  40c630:	tbnz	w8, #0, 40c638 <dispatch_message_real+0x154c>
  40c634:	b	40c66c <dispatch_message_real+0x1580>
  40c638:	ldr	x0, [x19, #2680]
  40c63c:	ldr	x8, [x19, #2664]
  40c640:	mov	x9, #0x8                   	// #8
  40c644:	mul	x8, x9, x8
  40c648:	add	x9, x19, #0xa88
  40c64c:	add	x8, x9, x8
  40c650:	ldr	x1, [x8]
  40c654:	bl	405ad8 <stpcpy@plt>
  40c658:	str	x0, [x19, #2680]
  40c65c:	ldr	x8, [x19, #2664]
  40c660:	add	x8, x8, #0x1
  40c664:	str	x8, [x19, #2664]
  40c668:	b	40c5f4 <dispatch_message_real+0x1508>
  40c66c:	ldr	x8, [x19, #2680]
  40c670:	mov	w9, #0x0                   	// #0
  40c674:	strb	w9, [x8]
  40c678:	ldr	x8, [x19, #2688]
  40c67c:	str	x8, [x19, #2640]
  40c680:	ldr	x8, [x19, #2640]
  40c684:	str	x8, [x19, #2712]
  40c688:	ldur	x8, [x29, #-16]
  40c68c:	ldur	x10, [x29, #-24]
  40c690:	add	x11, x10, #0x1
  40c694:	stur	x11, [x29, #-24]
  40c698:	ldr	x11, [x19, #2712]
  40c69c:	str	x11, [x19, #2624]
  40c6a0:	ldr	x0, [x19, #2712]
  40c6a4:	str	x8, [x19, #624]
  40c6a8:	str	x10, [x19, #616]
  40c6ac:	bl	405738 <strlen@plt>
  40c6b0:	str	x0, [x19, #2632]
  40c6b4:	ldr	q0, [x19, #2624]
  40c6b8:	ldr	x8, [x19, #624]
  40c6bc:	ldr	x10, [x19, #616]
  40c6c0:	str	q0, [x8, x10, lsl #4]
  40c6c4:	ldur	x8, [x29, #-40]
  40c6c8:	ldr	w0, [x8, #88]
  40c6cc:	bl	405ac8 <uid_is_valid@plt>
  40c6d0:	tbnz	w0, #0, 40c6d8 <dispatch_message_real+0x15ec>
  40c6d4:	b	40c808 <dispatch_message_real+0x171c>
  40c6d8:	mov	x8, #0x20                  	// #32
  40c6dc:	str	x8, [x19, #2608]
  40c6e0:	ldr	x1, [x19, #2608]
  40c6e4:	mov	x0, #0x1                   	// #1
  40c6e8:	bl	40b084 <size_multiply_overflow>
  40c6ec:	mov	w8, #0x1                   	// #1
  40c6f0:	eor	w9, w0, #0x1
  40c6f4:	eor	w9, w9, w8
  40c6f8:	eor	w9, w9, w8
  40c6fc:	eor	w8, w9, w8
  40c700:	and	w8, w8, #0x1
  40c704:	mov	w1, w8
  40c708:	sxtw	x10, w1
  40c70c:	cbz	x10, 40c72c <dispatch_message_real+0x1640>
  40c710:	mov	w8, wzr
  40c714:	mov	w0, w8
  40c718:	ldr	x1, [x19, #872]
  40c71c:	ldr	x2, [x19, #888]
  40c720:	mov	w3, #0x3af                 	// #943
  40c724:	ldr	x4, [x19, #880]
  40c728:	bl	405718 <log_assert_failed_realm@plt>
  40c72c:	ldr	x8, [x19, #2608]
  40c730:	mov	x9, #0x1                   	// #1
  40c734:	mul	x8, x9, x8
  40c738:	cmp	x8, #0x400, lsl #12
  40c73c:	cset	w10, ls  // ls = plast
  40c740:	mov	w11, #0x1                   	// #1
  40c744:	eor	w10, w10, #0x1
  40c748:	eor	w10, w10, w11
  40c74c:	eor	w10, w10, w11
  40c750:	and	w10, w10, #0x1
  40c754:	mov	w0, w10
  40c758:	sxtw	x8, w0
  40c75c:	cbz	x8, 40c77c <dispatch_message_real+0x1690>
  40c760:	mov	w8, wzr
  40c764:	mov	w0, w8
  40c768:	ldr	x1, [x19, #896]
  40c76c:	ldr	x2, [x19, #888]
  40c770:	mov	w3, #0x3af                 	// #943
  40c774:	ldr	x4, [x19, #880]
  40c778:	bl	405718 <log_assert_failed_realm@plt>
  40c77c:	ldr	x8, [x19, #2608]
  40c780:	mov	x9, #0x1                   	// #1
  40c784:	mul	x8, x9, x8
  40c788:	mul	x8, x8, x9
  40c78c:	add	x8, x8, #0xf
  40c790:	and	x8, x8, #0xfffffffffffffff0
  40c794:	mov	x9, sp
  40c798:	subs	x8, x9, x8
  40c79c:	mov	sp, x8
  40c7a0:	str	x8, [x19, #2600]
  40c7a4:	ldr	x8, [x19, #2600]
  40c7a8:	str	x8, [x19, #2616]
  40c7ac:	ldr	x0, [x19, #2616]
  40c7b0:	ldur	x8, [x29, #-40]
  40c7b4:	ldr	w2, [x8, #88]
  40c7b8:	adrp	x1, 42b000 <_fini+0x13a8>
  40c7bc:	add	x1, x1, #0x959
  40c7c0:	bl	405ab8 <sprintf@plt>
  40c7c4:	ldur	x8, [x29, #-16]
  40c7c8:	ldur	x9, [x29, #-24]
  40c7cc:	add	x10, x9, #0x1
  40c7d0:	stur	x10, [x29, #-24]
  40c7d4:	ldr	x10, [x19, #2616]
  40c7d8:	str	x10, [x19, #2584]
  40c7dc:	ldr	x10, [x19, #2616]
  40c7e0:	mov	x0, x10
  40c7e4:	str	x8, [x19, #608]
  40c7e8:	str	x9, [x19, #600]
  40c7ec:	bl	405738 <strlen@plt>
  40c7f0:	str	x0, [x19, #2592]
  40c7f4:	ldr	x8, [x19, #904]
  40c7f8:	ldr	q0, [x8, #1472]
  40c7fc:	ldr	x9, [x19, #608]
  40c800:	ldr	x10, [x19, #600]
  40c804:	str	q0, [x9, x10, lsl #4]
  40c808:	ldur	x8, [x29, #-40]
  40c80c:	ldr	x0, [x8, #96]
  40c810:	bl	4155f8 <isempty>
  40c814:	tbnz	w0, #0, 40ca6c <dispatch_message_real+0x1980>
  40c818:	add	x8, x19, #0xa00
  40c81c:	adrp	x9, 42b000 <_fini+0x13a8>
  40c820:	add	x9, x9, #0x96f
  40c824:	str	x9, [x19, #2560]
  40c828:	ldur	x9, [x29, #-40]
  40c82c:	ldr	x9, [x9, #96]
  40c830:	str	x9, [x8, #8]
  40c834:	str	xzr, [x19, #2536]
  40c838:	str	xzr, [x19, #2528]
  40c83c:	ldr	x8, [x19, #2528]
  40c840:	mov	w9, #0x0                   	// #0
  40c844:	cmp	x8, #0x2
  40c848:	str	w9, [x19, #596]
  40c84c:	b.cs	40c874 <dispatch_message_real+0x1788>  // b.hs, b.nlast
  40c850:	ldr	x8, [x19, #2528]
  40c854:	mov	x9, #0x8                   	// #8
  40c858:	mul	x8, x9, x8
  40c85c:	add	x9, x19, #0xa00
  40c860:	add	x8, x9, x8
  40c864:	ldr	x8, [x8]
  40c868:	cmp	x8, #0x0
  40c86c:	cset	w10, ne  // ne = any
  40c870:	str	w10, [x19, #596]
  40c874:	ldr	w8, [x19, #596]
  40c878:	tbnz	w8, #0, 40c880 <dispatch_message_real+0x1794>
  40c87c:	b	40c8b8 <dispatch_message_real+0x17cc>
  40c880:	ldr	x8, [x19, #2528]
  40c884:	mov	x9, #0x8                   	// #8
  40c888:	mul	x8, x9, x8
  40c88c:	add	x9, x19, #0xa00
  40c890:	add	x8, x9, x8
  40c894:	ldr	x0, [x8]
  40c898:	bl	405738 <strlen@plt>
  40c89c:	ldr	x8, [x19, #2536]
  40c8a0:	add	x8, x8, x0
  40c8a4:	str	x8, [x19, #2536]
  40c8a8:	ldr	x8, [x19, #2528]
  40c8ac:	add	x8, x8, #0x1
  40c8b0:	str	x8, [x19, #2528]
  40c8b4:	b	40c83c <dispatch_message_real+0x1750>
  40c8b8:	ldr	x8, [x19, #2536]
  40c8bc:	add	x8, x8, #0x1
  40c8c0:	str	x8, [x19, #2520]
  40c8c4:	ldr	x1, [x19, #2520]
  40c8c8:	mov	x0, #0x1                   	// #1
  40c8cc:	bl	40b084 <size_multiply_overflow>
  40c8d0:	mov	w8, #0x1                   	// #1
  40c8d4:	eor	w9, w0, #0x1
  40c8d8:	eor	w9, w9, w8
  40c8dc:	eor	w9, w9, w8
  40c8e0:	eor	w8, w9, w8
  40c8e4:	and	w8, w8, #0x1
  40c8e8:	mov	w1, w8
  40c8ec:	sxtw	x10, w1
  40c8f0:	cbz	x10, 40c910 <dispatch_message_real+0x1824>
  40c8f4:	mov	w8, wzr
  40c8f8:	mov	w0, w8
  40c8fc:	ldr	x1, [x19, #872]
  40c900:	ldr	x2, [x19, #888]
  40c904:	mov	w3, #0x3b0                 	// #944
  40c908:	ldr	x4, [x19, #880]
  40c90c:	bl	405718 <log_assert_failed_realm@plt>
  40c910:	ldr	x8, [x19, #2520]
  40c914:	mov	x9, #0x1                   	// #1
  40c918:	mul	x8, x9, x8
  40c91c:	cmp	x8, #0x400, lsl #12
  40c920:	cset	w10, ls  // ls = plast
  40c924:	mov	w11, #0x1                   	// #1
  40c928:	eor	w10, w10, #0x1
  40c92c:	eor	w10, w10, w11
  40c930:	eor	w10, w10, w11
  40c934:	and	w10, w10, #0x1
  40c938:	mov	w0, w10
  40c93c:	sxtw	x8, w0
  40c940:	cbz	x8, 40c960 <dispatch_message_real+0x1874>
  40c944:	mov	w8, wzr
  40c948:	mov	w0, w8
  40c94c:	ldr	x1, [x19, #896]
  40c950:	ldr	x2, [x19, #888]
  40c954:	mov	w3, #0x3b0                 	// #944
  40c958:	ldr	x4, [x19, #880]
  40c95c:	bl	405718 <log_assert_failed_realm@plt>
  40c960:	ldr	x8, [x19, #2520]
  40c964:	mov	x9, #0x1                   	// #1
  40c968:	mul	x8, x9, x8
  40c96c:	mul	x8, x8, x9
  40c970:	add	x8, x8, #0xf
  40c974:	and	x8, x8, #0xfffffffffffffff0
  40c978:	mov	x9, sp
  40c97c:	subs	x8, x9, x8
  40c980:	mov	sp, x8
  40c984:	str	x8, [x19, #2512]
  40c988:	ldr	x8, [x19, #2512]
  40c98c:	str	x8, [x19, #2552]
  40c990:	str	x8, [x19, #2544]
  40c994:	str	xzr, [x19, #2528]
  40c998:	ldr	x8, [x19, #2528]
  40c99c:	mov	w9, #0x0                   	// #0
  40c9a0:	cmp	x8, #0x2
  40c9a4:	str	w9, [x19, #592]
  40c9a8:	b.cs	40c9d0 <dispatch_message_real+0x18e4>  // b.hs, b.nlast
  40c9ac:	ldr	x8, [x19, #2528]
  40c9b0:	mov	x9, #0x8                   	// #8
  40c9b4:	mul	x8, x9, x8
  40c9b8:	add	x9, x19, #0xa00
  40c9bc:	add	x8, x9, x8
  40c9c0:	ldr	x8, [x8]
  40c9c4:	cmp	x8, #0x0
  40c9c8:	cset	w10, ne  // ne = any
  40c9cc:	str	w10, [x19, #592]
  40c9d0:	ldr	w8, [x19, #592]
  40c9d4:	tbnz	w8, #0, 40c9dc <dispatch_message_real+0x18f0>
  40c9d8:	b	40ca10 <dispatch_message_real+0x1924>
  40c9dc:	ldr	x0, [x19, #2544]
  40c9e0:	ldr	x8, [x19, #2528]
  40c9e4:	mov	x9, #0x8                   	// #8
  40c9e8:	mul	x8, x9, x8
  40c9ec:	add	x9, x19, #0xa00
  40c9f0:	add	x8, x9, x8
  40c9f4:	ldr	x1, [x8]
  40c9f8:	bl	405ad8 <stpcpy@plt>
  40c9fc:	str	x0, [x19, #2544]
  40ca00:	ldr	x8, [x19, #2528]
  40ca04:	add	x8, x8, #0x1
  40ca08:	str	x8, [x19, #2528]
  40ca0c:	b	40c998 <dispatch_message_real+0x18ac>
  40ca10:	ldr	x8, [x19, #2544]
  40ca14:	mov	w9, #0x0                   	// #0
  40ca18:	strb	w9, [x8]
  40ca1c:	ldr	x8, [x19, #2552]
  40ca20:	str	x8, [x19, #2504]
  40ca24:	ldr	x8, [x19, #2504]
  40ca28:	str	x8, [x19, #2576]
  40ca2c:	ldur	x8, [x29, #-16]
  40ca30:	ldur	x10, [x29, #-24]
  40ca34:	add	x11, x10, #0x1
  40ca38:	stur	x11, [x29, #-24]
  40ca3c:	ldr	x11, [x19, #2576]
  40ca40:	str	x11, [x19, #2488]
  40ca44:	ldr	x0, [x19, #2576]
  40ca48:	str	x8, [x19, #584]
  40ca4c:	str	x10, [x19, #576]
  40ca50:	bl	405738 <strlen@plt>
  40ca54:	str	x0, [x19, #2496]
  40ca58:	ldr	x8, [x19, #904]
  40ca5c:	ldr	q0, [x8, #1376]
  40ca60:	ldr	x10, [x19, #584]
  40ca64:	ldr	x11, [x19, #576]
  40ca68:	str	q0, [x10, x11, lsl #4]
  40ca6c:	ldur	x8, [x29, #-40]
  40ca70:	ldr	x0, [x8, #104]
  40ca74:	bl	4155f8 <isempty>
  40ca78:	tbnz	w0, #0, 40ccd0 <dispatch_message_real+0x1be4>
  40ca7c:	add	x8, x19, #0x9a0
  40ca80:	adrp	x9, 42b000 <_fini+0x13a8>
  40ca84:	add	x9, x9, #0x97e
  40ca88:	str	x9, [x19, #2464]
  40ca8c:	ldur	x9, [x29, #-40]
  40ca90:	ldr	x9, [x9, #104]
  40ca94:	str	x9, [x8, #8]
  40ca98:	str	xzr, [x19, #2440]
  40ca9c:	str	xzr, [x19, #2432]
  40caa0:	ldr	x8, [x19, #2432]
  40caa4:	mov	w9, #0x0                   	// #0
  40caa8:	cmp	x8, #0x2
  40caac:	str	w9, [x19, #572]
  40cab0:	b.cs	40cad8 <dispatch_message_real+0x19ec>  // b.hs, b.nlast
  40cab4:	ldr	x8, [x19, #2432]
  40cab8:	mov	x9, #0x8                   	// #8
  40cabc:	mul	x8, x9, x8
  40cac0:	add	x9, x19, #0x9a0
  40cac4:	add	x8, x9, x8
  40cac8:	ldr	x8, [x8]
  40cacc:	cmp	x8, #0x0
  40cad0:	cset	w10, ne  // ne = any
  40cad4:	str	w10, [x19, #572]
  40cad8:	ldr	w8, [x19, #572]
  40cadc:	tbnz	w8, #0, 40cae4 <dispatch_message_real+0x19f8>
  40cae0:	b	40cb1c <dispatch_message_real+0x1a30>
  40cae4:	ldr	x8, [x19, #2432]
  40cae8:	mov	x9, #0x8                   	// #8
  40caec:	mul	x8, x9, x8
  40caf0:	add	x9, x19, #0x9a0
  40caf4:	add	x8, x9, x8
  40caf8:	ldr	x0, [x8]
  40cafc:	bl	405738 <strlen@plt>
  40cb00:	ldr	x8, [x19, #2440]
  40cb04:	add	x8, x8, x0
  40cb08:	str	x8, [x19, #2440]
  40cb0c:	ldr	x8, [x19, #2432]
  40cb10:	add	x8, x8, #0x1
  40cb14:	str	x8, [x19, #2432]
  40cb18:	b	40caa0 <dispatch_message_real+0x19b4>
  40cb1c:	ldr	x8, [x19, #2440]
  40cb20:	add	x8, x8, #0x1
  40cb24:	str	x8, [x19, #2424]
  40cb28:	ldr	x1, [x19, #2424]
  40cb2c:	mov	x0, #0x1                   	// #1
  40cb30:	bl	40b084 <size_multiply_overflow>
  40cb34:	mov	w8, #0x1                   	// #1
  40cb38:	eor	w9, w0, #0x1
  40cb3c:	eor	w9, w9, w8
  40cb40:	eor	w9, w9, w8
  40cb44:	eor	w8, w9, w8
  40cb48:	and	w8, w8, #0x1
  40cb4c:	mov	w1, w8
  40cb50:	sxtw	x10, w1
  40cb54:	cbz	x10, 40cb74 <dispatch_message_real+0x1a88>
  40cb58:	mov	w8, wzr
  40cb5c:	mov	w0, w8
  40cb60:	ldr	x1, [x19, #872]
  40cb64:	ldr	x2, [x19, #888]
  40cb68:	mov	w3, #0x3b1                 	// #945
  40cb6c:	ldr	x4, [x19, #880]
  40cb70:	bl	405718 <log_assert_failed_realm@plt>
  40cb74:	ldr	x8, [x19, #2424]
  40cb78:	mov	x9, #0x1                   	// #1
  40cb7c:	mul	x8, x9, x8
  40cb80:	cmp	x8, #0x400, lsl #12
  40cb84:	cset	w10, ls  // ls = plast
  40cb88:	mov	w11, #0x1                   	// #1
  40cb8c:	eor	w10, w10, #0x1
  40cb90:	eor	w10, w10, w11
  40cb94:	eor	w10, w10, w11
  40cb98:	and	w10, w10, #0x1
  40cb9c:	mov	w0, w10
  40cba0:	sxtw	x8, w0
  40cba4:	cbz	x8, 40cbc4 <dispatch_message_real+0x1ad8>
  40cba8:	mov	w8, wzr
  40cbac:	mov	w0, w8
  40cbb0:	ldr	x1, [x19, #896]
  40cbb4:	ldr	x2, [x19, #888]
  40cbb8:	mov	w3, #0x3b1                 	// #945
  40cbbc:	ldr	x4, [x19, #880]
  40cbc0:	bl	405718 <log_assert_failed_realm@plt>
  40cbc4:	ldr	x8, [x19, #2424]
  40cbc8:	mov	x9, #0x1                   	// #1
  40cbcc:	mul	x8, x9, x8
  40cbd0:	mul	x8, x8, x9
  40cbd4:	add	x8, x8, #0xf
  40cbd8:	and	x8, x8, #0xfffffffffffffff0
  40cbdc:	mov	x9, sp
  40cbe0:	subs	x8, x9, x8
  40cbe4:	mov	sp, x8
  40cbe8:	str	x8, [x19, #2416]
  40cbec:	ldr	x8, [x19, #2416]
  40cbf0:	str	x8, [x19, #2456]
  40cbf4:	str	x8, [x19, #2448]
  40cbf8:	str	xzr, [x19, #2432]
  40cbfc:	ldr	x8, [x19, #2432]
  40cc00:	mov	w9, #0x0                   	// #0
  40cc04:	cmp	x8, #0x2
  40cc08:	str	w9, [x19, #568]
  40cc0c:	b.cs	40cc34 <dispatch_message_real+0x1b48>  // b.hs, b.nlast
  40cc10:	ldr	x8, [x19, #2432]
  40cc14:	mov	x9, #0x8                   	// #8
  40cc18:	mul	x8, x9, x8
  40cc1c:	add	x9, x19, #0x9a0
  40cc20:	add	x8, x9, x8
  40cc24:	ldr	x8, [x8]
  40cc28:	cmp	x8, #0x0
  40cc2c:	cset	w10, ne  // ne = any
  40cc30:	str	w10, [x19, #568]
  40cc34:	ldr	w8, [x19, #568]
  40cc38:	tbnz	w8, #0, 40cc40 <dispatch_message_real+0x1b54>
  40cc3c:	b	40cc74 <dispatch_message_real+0x1b88>
  40cc40:	ldr	x0, [x19, #2448]
  40cc44:	ldr	x8, [x19, #2432]
  40cc48:	mov	x9, #0x8                   	// #8
  40cc4c:	mul	x8, x9, x8
  40cc50:	add	x9, x19, #0x9a0
  40cc54:	add	x8, x9, x8
  40cc58:	ldr	x1, [x8]
  40cc5c:	bl	405ad8 <stpcpy@plt>
  40cc60:	str	x0, [x19, #2448]
  40cc64:	ldr	x8, [x19, #2432]
  40cc68:	add	x8, x8, #0x1
  40cc6c:	str	x8, [x19, #2432]
  40cc70:	b	40cbfc <dispatch_message_real+0x1b10>
  40cc74:	ldr	x8, [x19, #2448]
  40cc78:	mov	w9, #0x0                   	// #0
  40cc7c:	strb	w9, [x8]
  40cc80:	ldr	x8, [x19, #2456]
  40cc84:	str	x8, [x19, #2408]
  40cc88:	ldr	x8, [x19, #2408]
  40cc8c:	str	x8, [x19, #2480]
  40cc90:	ldur	x8, [x29, #-16]
  40cc94:	ldur	x10, [x29, #-24]
  40cc98:	add	x11, x10, #0x1
  40cc9c:	stur	x11, [x29, #-24]
  40cca0:	ldr	x11, [x19, #2480]
  40cca4:	str	x11, [x19, #2392]
  40cca8:	ldr	x0, [x19, #2480]
  40ccac:	str	x8, [x19, #560]
  40ccb0:	str	x10, [x19, #552]
  40ccb4:	bl	405738 <strlen@plt>
  40ccb8:	str	x0, [x19, #2400]
  40ccbc:	ldr	x8, [x19, #904]
  40ccc0:	ldr	q0, [x8, #1280]
  40ccc4:	ldr	x10, [x19, #560]
  40ccc8:	ldr	x11, [x19, #552]
  40cccc:	str	q0, [x10, x11, lsl #4]
  40ccd0:	ldur	x8, [x29, #-40]
  40ccd4:	ldr	x0, [x8, #112]
  40ccd8:	bl	4155f8 <isempty>
  40ccdc:	tbnz	w0, #0, 40cf34 <dispatch_message_real+0x1e48>
  40cce0:	add	x8, x19, #0x940
  40cce4:	adrp	x9, 42b000 <_fini+0x13a8>
  40cce8:	add	x9, x9, #0x992
  40ccec:	str	x9, [x19, #2368]
  40ccf0:	ldur	x9, [x29, #-40]
  40ccf4:	ldr	x9, [x9, #112]
  40ccf8:	str	x9, [x8, #8]
  40ccfc:	str	xzr, [x19, #2344]
  40cd00:	str	xzr, [x19, #2336]
  40cd04:	ldr	x8, [x19, #2336]
  40cd08:	mov	w9, #0x0                   	// #0
  40cd0c:	cmp	x8, #0x2
  40cd10:	str	w9, [x19, #548]
  40cd14:	b.cs	40cd3c <dispatch_message_real+0x1c50>  // b.hs, b.nlast
  40cd18:	ldr	x8, [x19, #2336]
  40cd1c:	mov	x9, #0x8                   	// #8
  40cd20:	mul	x8, x9, x8
  40cd24:	add	x9, x19, #0x940
  40cd28:	add	x8, x9, x8
  40cd2c:	ldr	x8, [x8]
  40cd30:	cmp	x8, #0x0
  40cd34:	cset	w10, ne  // ne = any
  40cd38:	str	w10, [x19, #548]
  40cd3c:	ldr	w8, [x19, #548]
  40cd40:	tbnz	w8, #0, 40cd48 <dispatch_message_real+0x1c5c>
  40cd44:	b	40cd80 <dispatch_message_real+0x1c94>
  40cd48:	ldr	x8, [x19, #2336]
  40cd4c:	mov	x9, #0x8                   	// #8
  40cd50:	mul	x8, x9, x8
  40cd54:	add	x9, x19, #0x940
  40cd58:	add	x8, x9, x8
  40cd5c:	ldr	x0, [x8]
  40cd60:	bl	405738 <strlen@plt>
  40cd64:	ldr	x8, [x19, #2344]
  40cd68:	add	x8, x8, x0
  40cd6c:	str	x8, [x19, #2344]
  40cd70:	ldr	x8, [x19, #2336]
  40cd74:	add	x8, x8, #0x1
  40cd78:	str	x8, [x19, #2336]
  40cd7c:	b	40cd04 <dispatch_message_real+0x1c18>
  40cd80:	ldr	x8, [x19, #2344]
  40cd84:	add	x8, x8, #0x1
  40cd88:	str	x8, [x19, #2328]
  40cd8c:	ldr	x1, [x19, #2328]
  40cd90:	mov	x0, #0x1                   	// #1
  40cd94:	bl	40b084 <size_multiply_overflow>
  40cd98:	mov	w8, #0x1                   	// #1
  40cd9c:	eor	w9, w0, #0x1
  40cda0:	eor	w9, w9, w8
  40cda4:	eor	w9, w9, w8
  40cda8:	eor	w8, w9, w8
  40cdac:	and	w8, w8, #0x1
  40cdb0:	mov	w1, w8
  40cdb4:	sxtw	x10, w1
  40cdb8:	cbz	x10, 40cdd8 <dispatch_message_real+0x1cec>
  40cdbc:	mov	w8, wzr
  40cdc0:	mov	w0, w8
  40cdc4:	ldr	x1, [x19, #872]
  40cdc8:	ldr	x2, [x19, #888]
  40cdcc:	mov	w3, #0x3b2                 	// #946
  40cdd0:	ldr	x4, [x19, #880]
  40cdd4:	bl	405718 <log_assert_failed_realm@plt>
  40cdd8:	ldr	x8, [x19, #2328]
  40cddc:	mov	x9, #0x1                   	// #1
  40cde0:	mul	x8, x9, x8
  40cde4:	cmp	x8, #0x400, lsl #12
  40cde8:	cset	w10, ls  // ls = plast
  40cdec:	mov	w11, #0x1                   	// #1
  40cdf0:	eor	w10, w10, #0x1
  40cdf4:	eor	w10, w10, w11
  40cdf8:	eor	w10, w10, w11
  40cdfc:	and	w10, w10, #0x1
  40ce00:	mov	w0, w10
  40ce04:	sxtw	x8, w0
  40ce08:	cbz	x8, 40ce28 <dispatch_message_real+0x1d3c>
  40ce0c:	mov	w8, wzr
  40ce10:	mov	w0, w8
  40ce14:	ldr	x1, [x19, #896]
  40ce18:	ldr	x2, [x19, #888]
  40ce1c:	mov	w3, #0x3b2                 	// #946
  40ce20:	ldr	x4, [x19, #880]
  40ce24:	bl	405718 <log_assert_failed_realm@plt>
  40ce28:	ldr	x8, [x19, #2328]
  40ce2c:	mov	x9, #0x1                   	// #1
  40ce30:	mul	x8, x9, x8
  40ce34:	mul	x8, x8, x9
  40ce38:	add	x8, x8, #0xf
  40ce3c:	and	x8, x8, #0xfffffffffffffff0
  40ce40:	mov	x9, sp
  40ce44:	subs	x8, x9, x8
  40ce48:	mov	sp, x8
  40ce4c:	str	x8, [x19, #2320]
  40ce50:	ldr	x8, [x19, #2320]
  40ce54:	str	x8, [x19, #2360]
  40ce58:	str	x8, [x19, #2352]
  40ce5c:	str	xzr, [x19, #2336]
  40ce60:	ldr	x8, [x19, #2336]
  40ce64:	mov	w9, #0x0                   	// #0
  40ce68:	cmp	x8, #0x2
  40ce6c:	str	w9, [x19, #544]
  40ce70:	b.cs	40ce98 <dispatch_message_real+0x1dac>  // b.hs, b.nlast
  40ce74:	ldr	x8, [x19, #2336]
  40ce78:	mov	x9, #0x8                   	// #8
  40ce7c:	mul	x8, x9, x8
  40ce80:	add	x9, x19, #0x940
  40ce84:	add	x8, x9, x8
  40ce88:	ldr	x8, [x8]
  40ce8c:	cmp	x8, #0x0
  40ce90:	cset	w10, ne  // ne = any
  40ce94:	str	w10, [x19, #544]
  40ce98:	ldr	w8, [x19, #544]
  40ce9c:	tbnz	w8, #0, 40cea4 <dispatch_message_real+0x1db8>
  40cea0:	b	40ced8 <dispatch_message_real+0x1dec>
  40cea4:	ldr	x0, [x19, #2352]
  40cea8:	ldr	x8, [x19, #2336]
  40ceac:	mov	x9, #0x8                   	// #8
  40ceb0:	mul	x8, x9, x8
  40ceb4:	add	x9, x19, #0x940
  40ceb8:	add	x8, x9, x8
  40cebc:	ldr	x1, [x8]
  40cec0:	bl	405ad8 <stpcpy@plt>
  40cec4:	str	x0, [x19, #2352]
  40cec8:	ldr	x8, [x19, #2336]
  40cecc:	add	x8, x8, #0x1
  40ced0:	str	x8, [x19, #2336]
  40ced4:	b	40ce60 <dispatch_message_real+0x1d74>
  40ced8:	ldr	x8, [x19, #2352]
  40cedc:	mov	w9, #0x0                   	// #0
  40cee0:	strb	w9, [x8]
  40cee4:	ldr	x8, [x19, #2360]
  40cee8:	str	x8, [x19, #2312]
  40ceec:	ldr	x8, [x19, #2312]
  40cef0:	str	x8, [x19, #2384]
  40cef4:	ldur	x8, [x29, #-16]
  40cef8:	ldur	x10, [x29, #-24]
  40cefc:	add	x11, x10, #0x1
  40cf00:	stur	x11, [x29, #-24]
  40cf04:	ldr	x11, [x19, #2384]
  40cf08:	str	x11, [x19, #2296]
  40cf0c:	ldr	x0, [x19, #2384]
  40cf10:	str	x8, [x19, #536]
  40cf14:	str	x10, [x19, #528]
  40cf18:	bl	405738 <strlen@plt>
  40cf1c:	str	x0, [x19, #2304]
  40cf20:	ldr	x8, [x19, #904]
  40cf24:	ldr	q0, [x8, #1184]
  40cf28:	ldr	x10, [x19, #536]
  40cf2c:	ldr	x11, [x19, #528]
  40cf30:	str	q0, [x10, x11, lsl #4]
  40cf34:	ldur	x8, [x29, #-40]
  40cf38:	ldr	x0, [x8, #120]
  40cf3c:	bl	4155f8 <isempty>
  40cf40:	tbnz	w0, #0, 40d198 <dispatch_message_real+0x20ac>
  40cf44:	add	x8, x19, #0x8e0
  40cf48:	adrp	x9, 42b000 <_fini+0x13a8>
  40cf4c:	add	x9, x9, #0x9a2
  40cf50:	str	x9, [x19, #2272]
  40cf54:	ldur	x9, [x29, #-40]
  40cf58:	ldr	x9, [x9, #120]
  40cf5c:	str	x9, [x8, #8]
  40cf60:	str	xzr, [x19, #2248]
  40cf64:	str	xzr, [x19, #2240]
  40cf68:	ldr	x8, [x19, #2240]
  40cf6c:	mov	w9, #0x0                   	// #0
  40cf70:	cmp	x8, #0x2
  40cf74:	str	w9, [x19, #524]
  40cf78:	b.cs	40cfa0 <dispatch_message_real+0x1eb4>  // b.hs, b.nlast
  40cf7c:	ldr	x8, [x19, #2240]
  40cf80:	mov	x9, #0x8                   	// #8
  40cf84:	mul	x8, x9, x8
  40cf88:	add	x9, x19, #0x8e0
  40cf8c:	add	x8, x9, x8
  40cf90:	ldr	x8, [x8]
  40cf94:	cmp	x8, #0x0
  40cf98:	cset	w10, ne  // ne = any
  40cf9c:	str	w10, [x19, #524]
  40cfa0:	ldr	w8, [x19, #524]
  40cfa4:	tbnz	w8, #0, 40cfac <dispatch_message_real+0x1ec0>
  40cfa8:	b	40cfe4 <dispatch_message_real+0x1ef8>
  40cfac:	ldr	x8, [x19, #2240]
  40cfb0:	mov	x9, #0x8                   	// #8
  40cfb4:	mul	x8, x9, x8
  40cfb8:	add	x9, x19, #0x8e0
  40cfbc:	add	x8, x9, x8
  40cfc0:	ldr	x0, [x8]
  40cfc4:	bl	405738 <strlen@plt>
  40cfc8:	ldr	x8, [x19, #2248]
  40cfcc:	add	x8, x8, x0
  40cfd0:	str	x8, [x19, #2248]
  40cfd4:	ldr	x8, [x19, #2240]
  40cfd8:	add	x8, x8, #0x1
  40cfdc:	str	x8, [x19, #2240]
  40cfe0:	b	40cf68 <dispatch_message_real+0x1e7c>
  40cfe4:	ldr	x8, [x19, #2248]
  40cfe8:	add	x8, x8, #0x1
  40cfec:	str	x8, [x19, #2232]
  40cff0:	ldr	x1, [x19, #2232]
  40cff4:	mov	x0, #0x1                   	// #1
  40cff8:	bl	40b084 <size_multiply_overflow>
  40cffc:	mov	w8, #0x1                   	// #1
  40d000:	eor	w9, w0, #0x1
  40d004:	eor	w9, w9, w8
  40d008:	eor	w9, w9, w8
  40d00c:	eor	w8, w9, w8
  40d010:	and	w8, w8, #0x1
  40d014:	mov	w1, w8
  40d018:	sxtw	x10, w1
  40d01c:	cbz	x10, 40d03c <dispatch_message_real+0x1f50>
  40d020:	mov	w8, wzr
  40d024:	mov	w0, w8
  40d028:	ldr	x1, [x19, #872]
  40d02c:	ldr	x2, [x19, #888]
  40d030:	mov	w3, #0x3b3                 	// #947
  40d034:	ldr	x4, [x19, #880]
  40d038:	bl	405718 <log_assert_failed_realm@plt>
  40d03c:	ldr	x8, [x19, #2232]
  40d040:	mov	x9, #0x1                   	// #1
  40d044:	mul	x8, x9, x8
  40d048:	cmp	x8, #0x400, lsl #12
  40d04c:	cset	w10, ls  // ls = plast
  40d050:	mov	w11, #0x1                   	// #1
  40d054:	eor	w10, w10, #0x1
  40d058:	eor	w10, w10, w11
  40d05c:	eor	w10, w10, w11
  40d060:	and	w10, w10, #0x1
  40d064:	mov	w0, w10
  40d068:	sxtw	x8, w0
  40d06c:	cbz	x8, 40d08c <dispatch_message_real+0x1fa0>
  40d070:	mov	w8, wzr
  40d074:	mov	w0, w8
  40d078:	ldr	x1, [x19, #896]
  40d07c:	ldr	x2, [x19, #888]
  40d080:	mov	w3, #0x3b3                 	// #947
  40d084:	ldr	x4, [x19, #880]
  40d088:	bl	405718 <log_assert_failed_realm@plt>
  40d08c:	ldr	x8, [x19, #2232]
  40d090:	mov	x9, #0x1                   	// #1
  40d094:	mul	x8, x9, x8
  40d098:	mul	x8, x8, x9
  40d09c:	add	x8, x8, #0xf
  40d0a0:	and	x8, x8, #0xfffffffffffffff0
  40d0a4:	mov	x9, sp
  40d0a8:	subs	x8, x9, x8
  40d0ac:	mov	sp, x8
  40d0b0:	str	x8, [x19, #2224]
  40d0b4:	ldr	x8, [x19, #2224]
  40d0b8:	str	x8, [x19, #2264]
  40d0bc:	str	x8, [x19, #2256]
  40d0c0:	str	xzr, [x19, #2240]
  40d0c4:	ldr	x8, [x19, #2240]
  40d0c8:	mov	w9, #0x0                   	// #0
  40d0cc:	cmp	x8, #0x2
  40d0d0:	str	w9, [x19, #520]
  40d0d4:	b.cs	40d0fc <dispatch_message_real+0x2010>  // b.hs, b.nlast
  40d0d8:	ldr	x8, [x19, #2240]
  40d0dc:	mov	x9, #0x8                   	// #8
  40d0e0:	mul	x8, x9, x8
  40d0e4:	add	x9, x19, #0x8e0
  40d0e8:	add	x8, x9, x8
  40d0ec:	ldr	x8, [x8]
  40d0f0:	cmp	x8, #0x0
  40d0f4:	cset	w10, ne  // ne = any
  40d0f8:	str	w10, [x19, #520]
  40d0fc:	ldr	w8, [x19, #520]
  40d100:	tbnz	w8, #0, 40d108 <dispatch_message_real+0x201c>
  40d104:	b	40d13c <dispatch_message_real+0x2050>
  40d108:	ldr	x0, [x19, #2256]
  40d10c:	ldr	x8, [x19, #2240]
  40d110:	mov	x9, #0x8                   	// #8
  40d114:	mul	x8, x9, x8
  40d118:	add	x9, x19, #0x8e0
  40d11c:	add	x8, x9, x8
  40d120:	ldr	x1, [x8]
  40d124:	bl	405ad8 <stpcpy@plt>
  40d128:	str	x0, [x19, #2256]
  40d12c:	ldr	x8, [x19, #2240]
  40d130:	add	x8, x8, #0x1
  40d134:	str	x8, [x19, #2240]
  40d138:	b	40d0c4 <dispatch_message_real+0x1fd8>
  40d13c:	ldr	x8, [x19, #2256]
  40d140:	mov	w9, #0x0                   	// #0
  40d144:	strb	w9, [x8]
  40d148:	ldr	x8, [x19, #2264]
  40d14c:	str	x8, [x19, #2216]
  40d150:	ldr	x8, [x19, #2216]
  40d154:	str	x8, [x19, #2288]
  40d158:	ldur	x8, [x29, #-16]
  40d15c:	ldur	x10, [x29, #-24]
  40d160:	add	x11, x10, #0x1
  40d164:	stur	x11, [x29, #-24]
  40d168:	ldr	x11, [x19, #2288]
  40d16c:	str	x11, [x19, #2200]
  40d170:	ldr	x0, [x19, #2288]
  40d174:	str	x8, [x19, #512]
  40d178:	str	x10, [x19, #504]
  40d17c:	bl	405738 <strlen@plt>
  40d180:	str	x0, [x19, #2208]
  40d184:	ldr	x8, [x19, #904]
  40d188:	ldr	q0, [x8, #1088]
  40d18c:	ldr	x10, [x19, #512]
  40d190:	ldr	x11, [x19, #504]
  40d194:	str	q0, [x10, x11, lsl #4]
  40d198:	ldur	x8, [x29, #-40]
  40d19c:	ldr	x0, [x8, #128]
  40d1a0:	ldr	x1, [x8, #136]
  40d1a4:	bl	416040 <sd_id128_is_null>
  40d1a8:	cbnz	w0, 40d2f4 <dispatch_message_real+0x2208>
  40d1ac:	mov	x8, #0x38                  	// #56
  40d1b0:	str	x8, [x19, #2184]
  40d1b4:	ldr	x1, [x19, #2184]
  40d1b8:	mov	x0, #0x1                   	// #1
  40d1bc:	bl	40b084 <size_multiply_overflow>
  40d1c0:	mov	w8, #0x1                   	// #1
  40d1c4:	eor	w9, w0, #0x1
  40d1c8:	eor	w9, w9, w8
  40d1cc:	eor	w9, w9, w8
  40d1d0:	eor	w8, w9, w8
  40d1d4:	and	w8, w8, #0x1
  40d1d8:	mov	w1, w8
  40d1dc:	sxtw	x10, w1
  40d1e0:	cbz	x10, 40d200 <dispatch_message_real+0x2114>
  40d1e4:	mov	w8, wzr
  40d1e8:	mov	w0, w8
  40d1ec:	ldr	x1, [x19, #872]
  40d1f0:	ldr	x2, [x19, #888]
  40d1f4:	mov	w3, #0x3b5                 	// #949
  40d1f8:	ldr	x4, [x19, #880]
  40d1fc:	bl	405718 <log_assert_failed_realm@plt>
  40d200:	ldr	x8, [x19, #2184]
  40d204:	mov	x9, #0x1                   	// #1
  40d208:	mul	x8, x9, x8
  40d20c:	cmp	x8, #0x400, lsl #12
  40d210:	cset	w10, ls  // ls = plast
  40d214:	mov	w11, #0x1                   	// #1
  40d218:	eor	w10, w10, #0x1
  40d21c:	eor	w10, w10, w11
  40d220:	eor	w10, w10, w11
  40d224:	and	w10, w10, #0x1
  40d228:	mov	w0, w10
  40d22c:	sxtw	x8, w0
  40d230:	cbz	x8, 40d250 <dispatch_message_real+0x2164>
  40d234:	mov	w8, wzr
  40d238:	mov	w0, w8
  40d23c:	ldr	x1, [x19, #896]
  40d240:	ldr	x2, [x19, #888]
  40d244:	mov	w3, #0x3b5                 	// #949
  40d248:	ldr	x4, [x19, #880]
  40d24c:	bl	405718 <log_assert_failed_realm@plt>
  40d250:	ldr	x8, [x19, #2184]
  40d254:	mov	x9, #0x1                   	// #1
  40d258:	mul	x8, x9, x8
  40d25c:	mul	x8, x8, x9
  40d260:	add	x8, x8, #0xf
  40d264:	and	x8, x8, #0xfffffffffffffff0
  40d268:	mov	x9, sp
  40d26c:	subs	x8, x9, x8
  40d270:	mov	sp, x8
  40d274:	str	x8, [x19, #2176]
  40d278:	ldr	x8, [x19, #2176]
  40d27c:	str	x8, [x19, #2192]
  40d280:	ldur	x8, [x29, #-40]
  40d284:	ldr	x0, [x19, #2192]
  40d288:	adrp	x1, 42b000 <_fini+0x13a8>
  40d28c:	add	x1, x1, #0x9b7
  40d290:	str	x8, [x19, #496]
  40d294:	bl	405ad8 <stpcpy@plt>
  40d298:	ldr	x8, [x19, #496]
  40d29c:	ldr	x9, [x8, #128]
  40d2a0:	ldr	x1, [x8, #136]
  40d2a4:	str	x0, [x19, #488]
  40d2a8:	mov	x0, x9
  40d2ac:	ldr	x2, [x19, #488]
  40d2b0:	bl	405b08 <sd_id128_to_string@plt>
  40d2b4:	ldur	x8, [x29, #-16]
  40d2b8:	ldur	x9, [x29, #-24]
  40d2bc:	add	x10, x9, #0x1
  40d2c0:	stur	x10, [x29, #-24]
  40d2c4:	ldr	x10, [x19, #2192]
  40d2c8:	str	x10, [x19, #2160]
  40d2cc:	ldr	x10, [x19, #2192]
  40d2d0:	mov	x0, x10
  40d2d4:	str	x8, [x19, #480]
  40d2d8:	str	x9, [x19, #472]
  40d2dc:	bl	405738 <strlen@plt>
  40d2e0:	str	x0, [x19, #2168]
  40d2e4:	ldr	q0, [x19, #2160]
  40d2e8:	ldr	x8, [x19, #480]
  40d2ec:	ldr	x9, [x19, #472]
  40d2f0:	str	q0, [x8, x9, lsl #4]
  40d2f4:	ldur	x8, [x29, #-40]
  40d2f8:	ldr	x8, [x8, #176]
  40d2fc:	cmp	x8, #0x0
  40d300:	cset	w9, ls  // ls = plast
  40d304:	tbnz	w9, #0, 40d34c <dispatch_message_real+0x2260>
  40d308:	ldur	x8, [x29, #-16]
  40d30c:	ldur	x9, [x29, #-24]
  40d310:	mov	x10, #0x10                  	// #16
  40d314:	mul	x9, x10, x9
  40d318:	add	x0, x8, x9
  40d31c:	ldur	x8, [x29, #-40]
  40d320:	ldr	x1, [x8, #168]
  40d324:	ldur	x8, [x29, #-40]
  40d328:	ldr	x8, [x8, #176]
  40d32c:	mov	x9, #0x10                  	// #16
  40d330:	mul	x2, x8, x9
  40d334:	bl	405af8 <memcpy@plt>
  40d338:	ldur	x8, [x29, #-40]
  40d33c:	ldr	x8, [x8, #176]
  40d340:	ldur	x9, [x29, #-24]
  40d344:	add	x8, x9, x8
  40d348:	stur	x8, [x29, #-24]
  40d34c:	ldur	x8, [x29, #-24]
  40d350:	ldur	x9, [x29, #-32]
  40d354:	cmp	x8, x9
  40d358:	cset	w10, ls  // ls = plast
  40d35c:	mov	w11, #0x1                   	// #1
  40d360:	eor	w10, w10, #0x1
  40d364:	eor	w10, w10, w11
  40d368:	eor	w10, w10, w11
  40d36c:	and	w10, w10, #0x1
  40d370:	mov	w0, w10
  40d374:	sxtw	x8, w0
  40d378:	cbz	x8, 40d398 <dispatch_message_real+0x22ac>
  40d37c:	mov	w8, wzr
  40d380:	mov	w0, w8
  40d384:	ldr	x1, [x19, #864]
  40d388:	ldr	x2, [x19, #888]
  40d38c:	mov	w3, #0x3bd                 	// #957
  40d390:	ldr	x4, [x19, #880]
  40d394:	bl	405718 <log_assert_failed_realm@plt>
  40d398:	ldur	w0, [x29, #-56]
  40d39c:	bl	415fb4 <pid_is_valid>
  40d3a0:	tbnz	w0, #0, 40d3a8 <dispatch_message_real+0x22bc>
  40d3a4:	b	40f3e4 <dispatch_message_real+0x42f8>
  40d3a8:	ldur	x0, [x29, #-8]
  40d3ac:	ldur	w1, [x29, #-56]
  40d3b0:	mov	x8, xzr
  40d3b4:	mov	x2, x8
  40d3b8:	mov	x3, x8
  40d3bc:	str	x3, [x19, #464]
  40d3c0:	mov	x4, x8
  40d3c4:	ldr	x5, [x19, #464]
  40d3c8:	sub	x6, x29, #0x90
  40d3cc:	bl	4240bc <client_context_get>
  40d3d0:	cmp	w0, #0x0
  40d3d4:	cset	w9, lt  // lt = tstop
  40d3d8:	tbnz	w9, #0, 40f3e4 <dispatch_message_real+0x42f8>
  40d3dc:	ldur	x8, [x29, #-144]
  40d3e0:	ldr	w0, [x8, #20]
  40d3e4:	bl	415fb4 <pid_is_valid>
  40d3e8:	tbnz	w0, #0, 40d3f0 <dispatch_message_real+0x2304>
  40d3ec:	b	40d520 <dispatch_message_real+0x2434>
  40d3f0:	mov	x8, #0x18                  	// #24
  40d3f4:	str	x8, [x19, #2144]
  40d3f8:	ldr	x1, [x19, #2144]
  40d3fc:	mov	x0, #0x1                   	// #1
  40d400:	bl	40b084 <size_multiply_overflow>
  40d404:	mov	w8, #0x1                   	// #1
  40d408:	eor	w9, w0, #0x1
  40d40c:	eor	w9, w9, w8
  40d410:	eor	w9, w9, w8
  40d414:	eor	w8, w9, w8
  40d418:	and	w8, w8, #0x1
  40d41c:	mov	w1, w8
  40d420:	sxtw	x10, w1
  40d424:	cbz	x10, 40d444 <dispatch_message_real+0x2358>
  40d428:	mov	w8, wzr
  40d42c:	mov	w0, w8
  40d430:	ldr	x1, [x19, #872]
  40d434:	ldr	x2, [x19, #888]
  40d438:	mov	w3, #0x3c1                 	// #961
  40d43c:	ldr	x4, [x19, #880]
  40d440:	bl	405718 <log_assert_failed_realm@plt>
  40d444:	ldr	x8, [x19, #2144]
  40d448:	mov	x9, #0x1                   	// #1
  40d44c:	mul	x8, x9, x8
  40d450:	cmp	x8, #0x400, lsl #12
  40d454:	cset	w10, ls  // ls = plast
  40d458:	mov	w11, #0x1                   	// #1
  40d45c:	eor	w10, w10, #0x1
  40d460:	eor	w10, w10, w11
  40d464:	eor	w10, w10, w11
  40d468:	and	w10, w10, #0x1
  40d46c:	mov	w0, w10
  40d470:	sxtw	x8, w0
  40d474:	cbz	x8, 40d494 <dispatch_message_real+0x23a8>
  40d478:	mov	w8, wzr
  40d47c:	mov	w0, w8
  40d480:	ldr	x1, [x19, #896]
  40d484:	ldr	x2, [x19, #888]
  40d488:	mov	w3, #0x3c1                 	// #961
  40d48c:	ldr	x4, [x19, #880]
  40d490:	bl	405718 <log_assert_failed_realm@plt>
  40d494:	ldr	x8, [x19, #2144]
  40d498:	mov	x9, #0x1                   	// #1
  40d49c:	mul	x8, x9, x8
  40d4a0:	mul	x8, x8, x9
  40d4a4:	add	x8, x8, #0xf
  40d4a8:	and	x8, x8, #0xfffffffffffffff0
  40d4ac:	mov	x9, sp
  40d4b0:	subs	x8, x9, x8
  40d4b4:	mov	sp, x8
  40d4b8:	str	x8, [x19, #2136]
  40d4bc:	ldr	x8, [x19, #2136]
  40d4c0:	str	x8, [x19, #2152]
  40d4c4:	ldr	x0, [x19, #2152]
  40d4c8:	ldur	x8, [x29, #-144]
  40d4cc:	ldr	w2, [x8, #20]
  40d4d0:	adrp	x1, 42b000 <_fini+0x13a8>
  40d4d4:	add	x1, x1, #0x9d6
  40d4d8:	bl	405ab8 <sprintf@plt>
  40d4dc:	ldur	x8, [x29, #-16]
  40d4e0:	ldur	x9, [x29, #-24]
  40d4e4:	add	x10, x9, #0x1
  40d4e8:	stur	x10, [x29, #-24]
  40d4ec:	ldr	x10, [x19, #2152]
  40d4f0:	str	x10, [x19, #2120]
  40d4f4:	ldr	x10, [x19, #2152]
  40d4f8:	mov	x0, x10
  40d4fc:	str	x8, [x19, #456]
  40d500:	str	x9, [x19, #448]
  40d504:	bl	405738 <strlen@plt>
  40d508:	str	x0, [x19, #2128]
  40d50c:	ldr	x8, [x19, #904]
  40d510:	ldr	q0, [x8, #1008]
  40d514:	ldr	x9, [x19, #456]
  40d518:	ldr	x10, [x19, #448]
  40d51c:	str	q0, [x9, x10, lsl #4]
  40d520:	ldur	x8, [x29, #-144]
  40d524:	ldr	w0, [x8, #24]
  40d528:	bl	405ac8 <uid_is_valid@plt>
  40d52c:	tbnz	w0, #0, 40d534 <dispatch_message_real+0x2448>
  40d530:	b	40d660 <dispatch_message_real+0x2574>
  40d534:	mov	x8, #0x18                  	// #24
  40d538:	str	x8, [x19, #2104]
  40d53c:	ldr	x1, [x19, #2104]
  40d540:	mov	x0, #0x1                   	// #1
  40d544:	bl	40b084 <size_multiply_overflow>
  40d548:	mov	w8, #0x1                   	// #1
  40d54c:	eor	w9, w0, #0x1
  40d550:	eor	w9, w9, w8
  40d554:	eor	w9, w9, w8
  40d558:	eor	w8, w9, w8
  40d55c:	and	w8, w8, #0x1
  40d560:	mov	w1, w8
  40d564:	sxtw	x10, w1
  40d568:	cbz	x10, 40d588 <dispatch_message_real+0x249c>
  40d56c:	mov	w8, wzr
  40d570:	mov	w0, w8
  40d574:	ldr	x1, [x19, #872]
  40d578:	ldr	x2, [x19, #888]
  40d57c:	mov	w3, #0x3c2                 	// #962
  40d580:	ldr	x4, [x19, #880]
  40d584:	bl	405718 <log_assert_failed_realm@plt>
  40d588:	ldr	x8, [x19, #2104]
  40d58c:	mov	x9, #0x1                   	// #1
  40d590:	mul	x8, x9, x8
  40d594:	cmp	x8, #0x400, lsl #12
  40d598:	cset	w10, ls  // ls = plast
  40d59c:	mov	w11, #0x1                   	// #1
  40d5a0:	eor	w10, w10, #0x1
  40d5a4:	eor	w10, w10, w11
  40d5a8:	eor	w10, w10, w11
  40d5ac:	and	w10, w10, #0x1
  40d5b0:	mov	w0, w10
  40d5b4:	sxtw	x8, w0
  40d5b8:	cbz	x8, 40d5d8 <dispatch_message_real+0x24ec>
  40d5bc:	mov	w8, wzr
  40d5c0:	mov	w0, w8
  40d5c4:	ldr	x1, [x19, #896]
  40d5c8:	ldr	x2, [x19, #888]
  40d5cc:	mov	w3, #0x3c2                 	// #962
  40d5d0:	ldr	x4, [x19, #880]
  40d5d4:	bl	405718 <log_assert_failed_realm@plt>
  40d5d8:	ldr	x8, [x19, #2104]
  40d5dc:	mov	x9, #0x1                   	// #1
  40d5e0:	mul	x8, x9, x8
  40d5e4:	mul	x8, x8, x9
  40d5e8:	add	x8, x8, #0xf
  40d5ec:	and	x8, x8, #0xfffffffffffffff0
  40d5f0:	mov	x9, sp
  40d5f4:	subs	x8, x9, x8
  40d5f8:	mov	sp, x8
  40d5fc:	str	x8, [x19, #2096]
  40d600:	ldr	x8, [x19, #2096]
  40d604:	str	x8, [x19, #2112]
  40d608:	ldr	x0, [x19, #2112]
  40d60c:	ldur	x8, [x29, #-144]
  40d610:	ldr	w2, [x8, #24]
  40d614:	adrp	x1, 42b000 <_fini+0x13a8>
  40d618:	add	x1, x1, #0x9e4
  40d61c:	bl	405ab8 <sprintf@plt>
  40d620:	ldur	x8, [x29, #-16]
  40d624:	ldur	x9, [x29, #-24]
  40d628:	add	x10, x9, #0x1
  40d62c:	stur	x10, [x29, #-24]
  40d630:	ldr	x10, [x19, #2112]
  40d634:	str	x10, [x19, #2080]
  40d638:	ldr	x10, [x19, #2112]
  40d63c:	mov	x0, x10
  40d640:	str	x8, [x19, #440]
  40d644:	str	x9, [x19, #432]
  40d648:	bl	405738 <strlen@plt>
  40d64c:	str	x0, [x19, #2088]
  40d650:	ldr	q0, [x19, #2080]
  40d654:	ldr	x8, [x19, #440]
  40d658:	ldr	x9, [x19, #432]
  40d65c:	str	q0, [x8, x9, lsl #4]
  40d660:	ldur	x8, [x29, #-144]
  40d664:	ldr	w0, [x8, #28]
  40d668:	bl	415fd4 <gid_is_valid>
  40d66c:	tbnz	w0, #0, 40d674 <dispatch_message_real+0x2588>
  40d670:	b	40d7a4 <dispatch_message_real+0x26b8>
  40d674:	mov	x8, #0x18                  	// #24
  40d678:	str	x8, [x19, #2064]
  40d67c:	ldr	x1, [x19, #2064]
  40d680:	mov	x0, #0x1                   	// #1
  40d684:	bl	40b084 <size_multiply_overflow>
  40d688:	mov	w8, #0x1                   	// #1
  40d68c:	eor	w9, w0, #0x1
  40d690:	eor	w9, w9, w8
  40d694:	eor	w9, w9, w8
  40d698:	eor	w8, w9, w8
  40d69c:	and	w8, w8, #0x1
  40d6a0:	mov	w1, w8
  40d6a4:	sxtw	x10, w1
  40d6a8:	cbz	x10, 40d6c8 <dispatch_message_real+0x25dc>
  40d6ac:	mov	w8, wzr
  40d6b0:	mov	w0, w8
  40d6b4:	ldr	x1, [x19, #872]
  40d6b8:	ldr	x2, [x19, #888]
  40d6bc:	mov	w3, #0x3c3                 	// #963
  40d6c0:	ldr	x4, [x19, #880]
  40d6c4:	bl	405718 <log_assert_failed_realm@plt>
  40d6c8:	ldr	x8, [x19, #2064]
  40d6cc:	mov	x9, #0x1                   	// #1
  40d6d0:	mul	x8, x9, x8
  40d6d4:	cmp	x8, #0x400, lsl #12
  40d6d8:	cset	w10, ls  // ls = plast
  40d6dc:	mov	w11, #0x1                   	// #1
  40d6e0:	eor	w10, w10, #0x1
  40d6e4:	eor	w10, w10, w11
  40d6e8:	eor	w10, w10, w11
  40d6ec:	and	w10, w10, #0x1
  40d6f0:	mov	w0, w10
  40d6f4:	sxtw	x8, w0
  40d6f8:	cbz	x8, 40d718 <dispatch_message_real+0x262c>
  40d6fc:	mov	w8, wzr
  40d700:	mov	w0, w8
  40d704:	ldr	x1, [x19, #896]
  40d708:	ldr	x2, [x19, #888]
  40d70c:	mov	w3, #0x3c3                 	// #963
  40d710:	ldr	x4, [x19, #880]
  40d714:	bl	405718 <log_assert_failed_realm@plt>
  40d718:	ldr	x8, [x19, #2064]
  40d71c:	mov	x9, #0x1                   	// #1
  40d720:	mul	x8, x9, x8
  40d724:	mul	x8, x8, x9
  40d728:	add	x8, x8, #0xf
  40d72c:	and	x8, x8, #0xfffffffffffffff0
  40d730:	mov	x9, sp
  40d734:	subs	x8, x9, x8
  40d738:	mov	sp, x8
  40d73c:	str	x8, [x19, #2056]
  40d740:	ldr	x8, [x19, #2056]
  40d744:	str	x8, [x19, #2072]
  40d748:	ldr	x0, [x19, #2072]
  40d74c:	ldur	x8, [x29, #-144]
  40d750:	ldr	w2, [x8, #28]
  40d754:	adrp	x1, 42b000 <_fini+0x13a8>
  40d758:	add	x1, x1, #0x9f2
  40d75c:	bl	405ab8 <sprintf@plt>
  40d760:	ldur	x8, [x29, #-16]
  40d764:	ldur	x9, [x29, #-24]
  40d768:	add	x10, x9, #0x1
  40d76c:	stur	x10, [x29, #-24]
  40d770:	ldr	x10, [x19, #2072]
  40d774:	str	x10, [x19, #2040]
  40d778:	ldr	x10, [x19, #2072]
  40d77c:	mov	x0, x10
  40d780:	str	x8, [x19, #424]
  40d784:	str	x9, [x19, #416]
  40d788:	bl	405738 <strlen@plt>
  40d78c:	str	x0, [x19, #2048]
  40d790:	ldr	x8, [x19, #904]
  40d794:	ldr	q0, [x8, #928]
  40d798:	ldr	x9, [x19, #424]
  40d79c:	ldr	x10, [x19, #416]
  40d7a0:	str	q0, [x9, x10, lsl #4]
  40d7a4:	ldur	x8, [x29, #-144]
  40d7a8:	ldr	x0, [x8, #32]
  40d7ac:	bl	4155f8 <isempty>
  40d7b0:	tbnz	w0, #0, 40da08 <dispatch_message_real+0x291c>
  40d7b4:	add	x8, x19, #0x7e0
  40d7b8:	adrp	x9, 42b000 <_fini+0x13a8>
  40d7bc:	add	x9, x9, #0xa00
  40d7c0:	str	x9, [x19, #2016]
  40d7c4:	ldur	x9, [x29, #-144]
  40d7c8:	ldr	x9, [x9, #32]
  40d7cc:	str	x9, [x8, #8]
  40d7d0:	str	xzr, [x19, #1992]
  40d7d4:	str	xzr, [x19, #1984]
  40d7d8:	ldr	x8, [x19, #1984]
  40d7dc:	mov	w9, #0x0                   	// #0
  40d7e0:	cmp	x8, #0x2
  40d7e4:	str	w9, [x19, #412]
  40d7e8:	b.cs	40d810 <dispatch_message_real+0x2724>  // b.hs, b.nlast
  40d7ec:	ldr	x8, [x19, #1984]
  40d7f0:	mov	x9, #0x8                   	// #8
  40d7f4:	mul	x8, x9, x8
  40d7f8:	add	x9, x19, #0x7e0
  40d7fc:	add	x8, x9, x8
  40d800:	ldr	x8, [x8]
  40d804:	cmp	x8, #0x0
  40d808:	cset	w10, ne  // ne = any
  40d80c:	str	w10, [x19, #412]
  40d810:	ldr	w8, [x19, #412]
  40d814:	tbnz	w8, #0, 40d81c <dispatch_message_real+0x2730>
  40d818:	b	40d854 <dispatch_message_real+0x2768>
  40d81c:	ldr	x8, [x19, #1984]
  40d820:	mov	x9, #0x8                   	// #8
  40d824:	mul	x8, x9, x8
  40d828:	add	x9, x19, #0x7e0
  40d82c:	add	x8, x9, x8
  40d830:	ldr	x0, [x8]
  40d834:	bl	405738 <strlen@plt>
  40d838:	ldr	x8, [x19, #1992]
  40d83c:	add	x8, x8, x0
  40d840:	str	x8, [x19, #1992]
  40d844:	ldr	x8, [x19, #1984]
  40d848:	add	x8, x8, #0x1
  40d84c:	str	x8, [x19, #1984]
  40d850:	b	40d7d8 <dispatch_message_real+0x26ec>
  40d854:	ldr	x8, [x19, #1992]
  40d858:	add	x8, x8, #0x1
  40d85c:	str	x8, [x19, #1976]
  40d860:	ldr	x1, [x19, #1976]
  40d864:	mov	x0, #0x1                   	// #1
  40d868:	bl	40b084 <size_multiply_overflow>
  40d86c:	mov	w8, #0x1                   	// #1
  40d870:	eor	w9, w0, #0x1
  40d874:	eor	w9, w9, w8
  40d878:	eor	w9, w9, w8
  40d87c:	eor	w8, w9, w8
  40d880:	and	w8, w8, #0x1
  40d884:	mov	w1, w8
  40d888:	sxtw	x10, w1
  40d88c:	cbz	x10, 40d8ac <dispatch_message_real+0x27c0>
  40d890:	mov	w8, wzr
  40d894:	mov	w0, w8
  40d898:	ldr	x1, [x19, #872]
  40d89c:	ldr	x2, [x19, #888]
  40d8a0:	mov	w3, #0x3c6                 	// #966
  40d8a4:	ldr	x4, [x19, #880]
  40d8a8:	bl	405718 <log_assert_failed_realm@plt>
  40d8ac:	ldr	x8, [x19, #1976]
  40d8b0:	mov	x9, #0x1                   	// #1
  40d8b4:	mul	x8, x9, x8
  40d8b8:	cmp	x8, #0x400, lsl #12
  40d8bc:	cset	w10, ls  // ls = plast
  40d8c0:	mov	w11, #0x1                   	// #1
  40d8c4:	eor	w10, w10, #0x1
  40d8c8:	eor	w10, w10, w11
  40d8cc:	eor	w10, w10, w11
  40d8d0:	and	w10, w10, #0x1
  40d8d4:	mov	w0, w10
  40d8d8:	sxtw	x8, w0
  40d8dc:	cbz	x8, 40d8fc <dispatch_message_real+0x2810>
  40d8e0:	mov	w8, wzr
  40d8e4:	mov	w0, w8
  40d8e8:	ldr	x1, [x19, #896]
  40d8ec:	ldr	x2, [x19, #888]
  40d8f0:	mov	w3, #0x3c6                 	// #966
  40d8f4:	ldr	x4, [x19, #880]
  40d8f8:	bl	405718 <log_assert_failed_realm@plt>
  40d8fc:	ldr	x8, [x19, #1976]
  40d900:	mov	x9, #0x1                   	// #1
  40d904:	mul	x8, x9, x8
  40d908:	mul	x8, x8, x9
  40d90c:	add	x8, x8, #0xf
  40d910:	and	x8, x8, #0xfffffffffffffff0
  40d914:	mov	x9, sp
  40d918:	subs	x8, x9, x8
  40d91c:	mov	sp, x8
  40d920:	str	x8, [x19, #1968]
  40d924:	ldr	x8, [x19, #1968]
  40d928:	str	x8, [x19, #2008]
  40d92c:	str	x8, [x19, #2000]
  40d930:	str	xzr, [x19, #1984]
  40d934:	ldr	x8, [x19, #1984]
  40d938:	mov	w9, #0x0                   	// #0
  40d93c:	cmp	x8, #0x2
  40d940:	str	w9, [x19, #408]
  40d944:	b.cs	40d96c <dispatch_message_real+0x2880>  // b.hs, b.nlast
  40d948:	ldr	x8, [x19, #1984]
  40d94c:	mov	x9, #0x8                   	// #8
  40d950:	mul	x8, x9, x8
  40d954:	add	x9, x19, #0x7e0
  40d958:	add	x8, x9, x8
  40d95c:	ldr	x8, [x8]
  40d960:	cmp	x8, #0x0
  40d964:	cset	w10, ne  // ne = any
  40d968:	str	w10, [x19, #408]
  40d96c:	ldr	w8, [x19, #408]
  40d970:	tbnz	w8, #0, 40d978 <dispatch_message_real+0x288c>
  40d974:	b	40d9ac <dispatch_message_real+0x28c0>
  40d978:	ldr	x0, [x19, #2000]
  40d97c:	ldr	x8, [x19, #1984]
  40d980:	mov	x9, #0x8                   	// #8
  40d984:	mul	x8, x9, x8
  40d988:	add	x9, x19, #0x7e0
  40d98c:	add	x8, x9, x8
  40d990:	ldr	x1, [x8]
  40d994:	bl	405ad8 <stpcpy@plt>
  40d998:	str	x0, [x19, #2000]
  40d99c:	ldr	x8, [x19, #1984]
  40d9a0:	add	x8, x8, #0x1
  40d9a4:	str	x8, [x19, #1984]
  40d9a8:	b	40d934 <dispatch_message_real+0x2848>
  40d9ac:	ldr	x8, [x19, #2000]
  40d9b0:	mov	w9, #0x0                   	// #0
  40d9b4:	strb	w9, [x8]
  40d9b8:	ldr	x8, [x19, #2008]
  40d9bc:	str	x8, [x19, #1960]
  40d9c0:	ldr	x8, [x19, #1960]
  40d9c4:	str	x8, [x19, #2032]
  40d9c8:	ldur	x8, [x29, #-16]
  40d9cc:	ldur	x10, [x29, #-24]
  40d9d0:	add	x11, x10, #0x1
  40d9d4:	stur	x11, [x29, #-24]
  40d9d8:	ldr	x11, [x19, #2032]
  40d9dc:	str	x11, [x19, #1944]
  40d9e0:	ldr	x0, [x19, #2032]
  40d9e4:	str	x8, [x19, #400]
  40d9e8:	str	x10, [x19, #392]
  40d9ec:	bl	405738 <strlen@plt>
  40d9f0:	str	x0, [x19, #1952]
  40d9f4:	ldr	x8, [x19, #904]
  40d9f8:	ldr	q0, [x8, #832]
  40d9fc:	ldr	x10, [x19, #400]
  40da00:	ldr	x11, [x19, #392]
  40da04:	str	q0, [x10, x11, lsl #4]
  40da08:	ldur	x8, [x29, #-144]
  40da0c:	ldr	x0, [x8, #40]
  40da10:	bl	4155f8 <isempty>
  40da14:	tbnz	w0, #0, 40dc6c <dispatch_message_real+0x2b80>
  40da18:	add	x8, x19, #0x780
  40da1c:	adrp	x9, 42b000 <_fini+0x13a8>
  40da20:	add	x9, x9, #0xa0d
  40da24:	str	x9, [x19, #1920]
  40da28:	ldur	x9, [x29, #-144]
  40da2c:	ldr	x9, [x9, #40]
  40da30:	str	x9, [x8, #8]
  40da34:	str	xzr, [x19, #1896]
  40da38:	str	xzr, [x19, #1888]
  40da3c:	ldr	x8, [x19, #1888]
  40da40:	mov	w9, #0x0                   	// #0
  40da44:	cmp	x8, #0x2
  40da48:	str	w9, [x19, #388]
  40da4c:	b.cs	40da74 <dispatch_message_real+0x2988>  // b.hs, b.nlast
  40da50:	ldr	x8, [x19, #1888]
  40da54:	mov	x9, #0x8                   	// #8
  40da58:	mul	x8, x9, x8
  40da5c:	add	x9, x19, #0x780
  40da60:	add	x8, x9, x8
  40da64:	ldr	x8, [x8]
  40da68:	cmp	x8, #0x0
  40da6c:	cset	w10, ne  // ne = any
  40da70:	str	w10, [x19, #388]
  40da74:	ldr	w8, [x19, #388]
  40da78:	tbnz	w8, #0, 40da80 <dispatch_message_real+0x2994>
  40da7c:	b	40dab8 <dispatch_message_real+0x29cc>
  40da80:	ldr	x8, [x19, #1888]
  40da84:	mov	x9, #0x8                   	// #8
  40da88:	mul	x8, x9, x8
  40da8c:	add	x9, x19, #0x780
  40da90:	add	x8, x9, x8
  40da94:	ldr	x0, [x8]
  40da98:	bl	405738 <strlen@plt>
  40da9c:	ldr	x8, [x19, #1896]
  40daa0:	add	x8, x8, x0
  40daa4:	str	x8, [x19, #1896]
  40daa8:	ldr	x8, [x19, #1888]
  40daac:	add	x8, x8, #0x1
  40dab0:	str	x8, [x19, #1888]
  40dab4:	b	40da3c <dispatch_message_real+0x2950>
  40dab8:	ldr	x8, [x19, #1896]
  40dabc:	add	x8, x8, #0x1
  40dac0:	str	x8, [x19, #1880]
  40dac4:	ldr	x1, [x19, #1880]
  40dac8:	mov	x0, #0x1                   	// #1
  40dacc:	bl	40b084 <size_multiply_overflow>
  40dad0:	mov	w8, #0x1                   	// #1
  40dad4:	eor	w9, w0, #0x1
  40dad8:	eor	w9, w9, w8
  40dadc:	eor	w9, w9, w8
  40dae0:	eor	w8, w9, w8
  40dae4:	and	w8, w8, #0x1
  40dae8:	mov	w1, w8
  40daec:	sxtw	x10, w1
  40daf0:	cbz	x10, 40db10 <dispatch_message_real+0x2a24>
  40daf4:	mov	w8, wzr
  40daf8:	mov	w0, w8
  40dafc:	ldr	x1, [x19, #872]
  40db00:	ldr	x2, [x19, #888]
  40db04:	mov	w3, #0x3c7                 	// #967
  40db08:	ldr	x4, [x19, #880]
  40db0c:	bl	405718 <log_assert_failed_realm@plt>
  40db10:	ldr	x8, [x19, #1880]
  40db14:	mov	x9, #0x1                   	// #1
  40db18:	mul	x8, x9, x8
  40db1c:	cmp	x8, #0x400, lsl #12
  40db20:	cset	w10, ls  // ls = plast
  40db24:	mov	w11, #0x1                   	// #1
  40db28:	eor	w10, w10, #0x1
  40db2c:	eor	w10, w10, w11
  40db30:	eor	w10, w10, w11
  40db34:	and	w10, w10, #0x1
  40db38:	mov	w0, w10
  40db3c:	sxtw	x8, w0
  40db40:	cbz	x8, 40db60 <dispatch_message_real+0x2a74>
  40db44:	mov	w8, wzr
  40db48:	mov	w0, w8
  40db4c:	ldr	x1, [x19, #896]
  40db50:	ldr	x2, [x19, #888]
  40db54:	mov	w3, #0x3c7                 	// #967
  40db58:	ldr	x4, [x19, #880]
  40db5c:	bl	405718 <log_assert_failed_realm@plt>
  40db60:	ldr	x8, [x19, #1880]
  40db64:	mov	x9, #0x1                   	// #1
  40db68:	mul	x8, x9, x8
  40db6c:	mul	x8, x8, x9
  40db70:	add	x8, x8, #0xf
  40db74:	and	x8, x8, #0xfffffffffffffff0
  40db78:	mov	x9, sp
  40db7c:	subs	x8, x9, x8
  40db80:	mov	sp, x8
  40db84:	str	x8, [x19, #1872]
  40db88:	ldr	x8, [x19, #1872]
  40db8c:	str	x8, [x19, #1912]
  40db90:	str	x8, [x19, #1904]
  40db94:	str	xzr, [x19, #1888]
  40db98:	ldr	x8, [x19, #1888]
  40db9c:	mov	w9, #0x0                   	// #0
  40dba0:	cmp	x8, #0x2
  40dba4:	str	w9, [x19, #384]
  40dba8:	b.cs	40dbd0 <dispatch_message_real+0x2ae4>  // b.hs, b.nlast
  40dbac:	ldr	x8, [x19, #1888]
  40dbb0:	mov	x9, #0x8                   	// #8
  40dbb4:	mul	x8, x9, x8
  40dbb8:	add	x9, x19, #0x780
  40dbbc:	add	x8, x9, x8
  40dbc0:	ldr	x8, [x8]
  40dbc4:	cmp	x8, #0x0
  40dbc8:	cset	w10, ne  // ne = any
  40dbcc:	str	w10, [x19, #384]
  40dbd0:	ldr	w8, [x19, #384]
  40dbd4:	tbnz	w8, #0, 40dbdc <dispatch_message_real+0x2af0>
  40dbd8:	b	40dc10 <dispatch_message_real+0x2b24>
  40dbdc:	ldr	x0, [x19, #1904]
  40dbe0:	ldr	x8, [x19, #1888]
  40dbe4:	mov	x9, #0x8                   	// #8
  40dbe8:	mul	x8, x9, x8
  40dbec:	add	x9, x19, #0x780
  40dbf0:	add	x8, x9, x8
  40dbf4:	ldr	x1, [x8]
  40dbf8:	bl	405ad8 <stpcpy@plt>
  40dbfc:	str	x0, [x19, #1904]
  40dc00:	ldr	x8, [x19, #1888]
  40dc04:	add	x8, x8, #0x1
  40dc08:	str	x8, [x19, #1888]
  40dc0c:	b	40db98 <dispatch_message_real+0x2aac>
  40dc10:	ldr	x8, [x19, #1904]
  40dc14:	mov	w9, #0x0                   	// #0
  40dc18:	strb	w9, [x8]
  40dc1c:	ldr	x8, [x19, #1912]
  40dc20:	str	x8, [x19, #1864]
  40dc24:	ldr	x8, [x19, #1864]
  40dc28:	str	x8, [x19, #1936]
  40dc2c:	ldur	x8, [x29, #-16]
  40dc30:	ldur	x10, [x29, #-24]
  40dc34:	add	x11, x10, #0x1
  40dc38:	stur	x11, [x29, #-24]
  40dc3c:	ldr	x11, [x19, #1936]
  40dc40:	str	x11, [x19, #1848]
  40dc44:	ldr	x0, [x19, #1936]
  40dc48:	str	x8, [x19, #376]
  40dc4c:	str	x10, [x19, #368]
  40dc50:	bl	405738 <strlen@plt>
  40dc54:	str	x0, [x19, #1856]
  40dc58:	ldr	x8, [x19, #904]
  40dc5c:	ldr	q0, [x8, #736]
  40dc60:	ldr	x10, [x19, #376]
  40dc64:	ldr	x11, [x19, #368]
  40dc68:	str	q0, [x10, x11, lsl #4]
  40dc6c:	ldur	x8, [x29, #-144]
  40dc70:	ldr	x8, [x8, #48]
  40dc74:	cbz	x8, 40dc98 <dispatch_message_real+0x2bac>
  40dc78:	ldur	x0, [x29, #-16]
  40dc7c:	ldur	x8, [x29, #-144]
  40dc80:	ldr	x3, [x8, #48]
  40dc84:	sub	x1, x29, #0x18
  40dc88:	adrp	x2, 42b000 <_fini+0x13a8>
  40dc8c:	add	x2, x2, #0xa19
  40dc90:	bl	405ae8 <set_iovec_string_field@plt>
  40dc94:	stur	x0, [x29, #-128]
  40dc98:	ldur	x8, [x29, #-144]
  40dc9c:	ldr	x0, [x8, #56]
  40dca0:	bl	4155f8 <isempty>
  40dca4:	tbnz	w0, #0, 40defc <dispatch_message_real+0x2e10>
  40dca8:	add	x8, x19, #0x720
  40dcac:	adrp	x9, 42b000 <_fini+0x13a8>
  40dcb0:	add	x9, x9, #0xa29
  40dcb4:	str	x9, [x19, #1824]
  40dcb8:	ldur	x9, [x29, #-144]
  40dcbc:	ldr	x9, [x9, #56]
  40dcc0:	str	x9, [x8, #8]
  40dcc4:	str	xzr, [x19, #1800]
  40dcc8:	str	xzr, [x19, #1792]
  40dccc:	ldr	x8, [x19, #1792]
  40dcd0:	mov	w9, #0x0                   	// #0
  40dcd4:	cmp	x8, #0x2
  40dcd8:	str	w9, [x19, #364]
  40dcdc:	b.cs	40dd04 <dispatch_message_real+0x2c18>  // b.hs, b.nlast
  40dce0:	ldr	x8, [x19, #1792]
  40dce4:	mov	x9, #0x8                   	// #8
  40dce8:	mul	x8, x9, x8
  40dcec:	add	x9, x19, #0x720
  40dcf0:	add	x8, x9, x8
  40dcf4:	ldr	x8, [x8]
  40dcf8:	cmp	x8, #0x0
  40dcfc:	cset	w10, ne  // ne = any
  40dd00:	str	w10, [x19, #364]
  40dd04:	ldr	w8, [x19, #364]
  40dd08:	tbnz	w8, #0, 40dd10 <dispatch_message_real+0x2c24>
  40dd0c:	b	40dd48 <dispatch_message_real+0x2c5c>
  40dd10:	ldr	x8, [x19, #1792]
  40dd14:	mov	x9, #0x8                   	// #8
  40dd18:	mul	x8, x9, x8
  40dd1c:	add	x9, x19, #0x720
  40dd20:	add	x8, x9, x8
  40dd24:	ldr	x0, [x8]
  40dd28:	bl	405738 <strlen@plt>
  40dd2c:	ldr	x8, [x19, #1800]
  40dd30:	add	x8, x8, x0
  40dd34:	str	x8, [x19, #1800]
  40dd38:	ldr	x8, [x19, #1792]
  40dd3c:	add	x8, x8, #0x1
  40dd40:	str	x8, [x19, #1792]
  40dd44:	b	40dccc <dispatch_message_real+0x2be0>
  40dd48:	ldr	x8, [x19, #1800]
  40dd4c:	add	x8, x8, #0x1
  40dd50:	str	x8, [x19, #1784]
  40dd54:	ldr	x1, [x19, #1784]
  40dd58:	mov	x0, #0x1                   	// #1
  40dd5c:	bl	40b084 <size_multiply_overflow>
  40dd60:	mov	w8, #0x1                   	// #1
  40dd64:	eor	w9, w0, #0x1
  40dd68:	eor	w9, w9, w8
  40dd6c:	eor	w9, w9, w8
  40dd70:	eor	w8, w9, w8
  40dd74:	and	w8, w8, #0x1
  40dd78:	mov	w1, w8
  40dd7c:	sxtw	x10, w1
  40dd80:	cbz	x10, 40dda0 <dispatch_message_real+0x2cb4>
  40dd84:	mov	w8, wzr
  40dd88:	mov	w0, w8
  40dd8c:	ldr	x1, [x19, #872]
  40dd90:	ldr	x2, [x19, #888]
  40dd94:	mov	w3, #0x3cb                 	// #971
  40dd98:	ldr	x4, [x19, #880]
  40dd9c:	bl	405718 <log_assert_failed_realm@plt>
  40dda0:	ldr	x8, [x19, #1784]
  40dda4:	mov	x9, #0x1                   	// #1
  40dda8:	mul	x8, x9, x8
  40ddac:	cmp	x8, #0x400, lsl #12
  40ddb0:	cset	w10, ls  // ls = plast
  40ddb4:	mov	w11, #0x1                   	// #1
  40ddb8:	eor	w10, w10, #0x1
  40ddbc:	eor	w10, w10, w11
  40ddc0:	eor	w10, w10, w11
  40ddc4:	and	w10, w10, #0x1
  40ddc8:	mov	w0, w10
  40ddcc:	sxtw	x8, w0
  40ddd0:	cbz	x8, 40ddf0 <dispatch_message_real+0x2d04>
  40ddd4:	mov	w8, wzr
  40ddd8:	mov	w0, w8
  40dddc:	ldr	x1, [x19, #896]
  40dde0:	ldr	x2, [x19, #888]
  40dde4:	mov	w3, #0x3cb                 	// #971
  40dde8:	ldr	x4, [x19, #880]
  40ddec:	bl	405718 <log_assert_failed_realm@plt>
  40ddf0:	ldr	x8, [x19, #1784]
  40ddf4:	mov	x9, #0x1                   	// #1
  40ddf8:	mul	x8, x9, x8
  40ddfc:	mul	x8, x8, x9
  40de00:	add	x8, x8, #0xf
  40de04:	and	x8, x8, #0xfffffffffffffff0
  40de08:	mov	x9, sp
  40de0c:	subs	x8, x9, x8
  40de10:	mov	sp, x8
  40de14:	str	x8, [x19, #1776]
  40de18:	ldr	x8, [x19, #1776]
  40de1c:	str	x8, [x19, #1816]
  40de20:	str	x8, [x19, #1808]
  40de24:	str	xzr, [x19, #1792]
  40de28:	ldr	x8, [x19, #1792]
  40de2c:	mov	w9, #0x0                   	// #0
  40de30:	cmp	x8, #0x2
  40de34:	str	w9, [x19, #360]
  40de38:	b.cs	40de60 <dispatch_message_real+0x2d74>  // b.hs, b.nlast
  40de3c:	ldr	x8, [x19, #1792]
  40de40:	mov	x9, #0x8                   	// #8
  40de44:	mul	x8, x9, x8
  40de48:	add	x9, x19, #0x720
  40de4c:	add	x8, x9, x8
  40de50:	ldr	x8, [x8]
  40de54:	cmp	x8, #0x0
  40de58:	cset	w10, ne  // ne = any
  40de5c:	str	w10, [x19, #360]
  40de60:	ldr	w8, [x19, #360]
  40de64:	tbnz	w8, #0, 40de6c <dispatch_message_real+0x2d80>
  40de68:	b	40dea0 <dispatch_message_real+0x2db4>
  40de6c:	ldr	x0, [x19, #1808]
  40de70:	ldr	x8, [x19, #1792]
  40de74:	mov	x9, #0x8                   	// #8
  40de78:	mul	x8, x9, x8
  40de7c:	add	x9, x19, #0x720
  40de80:	add	x8, x9, x8
  40de84:	ldr	x1, [x8]
  40de88:	bl	405ad8 <stpcpy@plt>
  40de8c:	str	x0, [x19, #1808]
  40de90:	ldr	x8, [x19, #1792]
  40de94:	add	x8, x8, #0x1
  40de98:	str	x8, [x19, #1792]
  40de9c:	b	40de28 <dispatch_message_real+0x2d3c>
  40dea0:	ldr	x8, [x19, #1808]
  40dea4:	mov	w9, #0x0                   	// #0
  40dea8:	strb	w9, [x8]
  40deac:	ldr	x8, [x19, #1816]
  40deb0:	str	x8, [x19, #1768]
  40deb4:	ldr	x8, [x19, #1768]
  40deb8:	str	x8, [x19, #1840]
  40debc:	ldur	x8, [x29, #-16]
  40dec0:	ldur	x10, [x29, #-24]
  40dec4:	add	x11, x10, #0x1
  40dec8:	stur	x11, [x29, #-24]
  40decc:	ldr	x11, [x19, #1840]
  40ded0:	str	x11, [x19, #1752]
  40ded4:	ldr	x0, [x19, #1840]
  40ded8:	str	x8, [x19, #352]
  40dedc:	str	x10, [x19, #344]
  40dee0:	bl	405738 <strlen@plt>
  40dee4:	str	x0, [x19, #1760]
  40dee8:	ldr	x8, [x19, #904]
  40deec:	ldr	q0, [x8, #640]
  40def0:	ldr	x10, [x19, #352]
  40def4:	ldr	x11, [x19, #344]
  40def8:	str	q0, [x10, x11, lsl #4]
  40defc:	ldur	x8, [x29, #-144]
  40df00:	ldr	x8, [x8, #152]
  40df04:	cmp	x8, #0x0
  40df08:	cset	w9, ls  // ls = plast
  40df0c:	tbnz	w9, #0, 40e070 <dispatch_message_real+0x2f84>
  40df10:	ldur	x8, [x29, #-144]
  40df14:	ldr	x8, [x8, #152]
  40df18:	add	x8, x8, #0x17
  40df1c:	add	x8, x8, #0x1
  40df20:	str	x8, [x19, #1736]
  40df24:	ldr	x1, [x19, #1736]
  40df28:	mov	x0, #0x1                   	// #1
  40df2c:	bl	40b084 <size_multiply_overflow>
  40df30:	mov	w8, #0x1                   	// #1
  40df34:	eor	w9, w0, #0x1
  40df38:	eor	w9, w9, w8
  40df3c:	eor	w9, w9, w8
  40df40:	eor	w8, w9, w8
  40df44:	and	w8, w8, #0x1
  40df48:	mov	w1, w8
  40df4c:	sxtw	x10, w1
  40df50:	cbz	x10, 40df70 <dispatch_message_real+0x2e84>
  40df54:	mov	w8, wzr
  40df58:	mov	w0, w8
  40df5c:	ldr	x1, [x19, #872]
  40df60:	ldr	x2, [x19, #888]
  40df64:	mov	w3, #0x3cc                 	// #972
  40df68:	ldr	x4, [x19, #880]
  40df6c:	bl	405718 <log_assert_failed_realm@plt>
  40df70:	ldr	x8, [x19, #1736]
  40df74:	mov	x9, #0x1                   	// #1
  40df78:	mul	x8, x9, x8
  40df7c:	cmp	x8, #0x400, lsl #12
  40df80:	cset	w10, ls  // ls = plast
  40df84:	mov	w11, #0x1                   	// #1
  40df88:	eor	w10, w10, #0x1
  40df8c:	eor	w10, w10, w11
  40df90:	eor	w10, w10, w11
  40df94:	and	w10, w10, #0x1
  40df98:	mov	w0, w10
  40df9c:	sxtw	x8, w0
  40dfa0:	cbz	x8, 40dfc0 <dispatch_message_real+0x2ed4>
  40dfa4:	mov	w8, wzr
  40dfa8:	mov	w0, w8
  40dfac:	ldr	x1, [x19, #896]
  40dfb0:	ldr	x2, [x19, #888]
  40dfb4:	mov	w3, #0x3cc                 	// #972
  40dfb8:	ldr	x4, [x19, #880]
  40dfbc:	bl	405718 <log_assert_failed_realm@plt>
  40dfc0:	ldr	x8, [x19, #1736]
  40dfc4:	mov	x9, #0x1                   	// #1
  40dfc8:	mul	x8, x9, x8
  40dfcc:	mul	x8, x8, x9
  40dfd0:	add	x8, x8, #0xf
  40dfd4:	and	x8, x8, #0xfffffffffffffff0
  40dfd8:	mov	x9, sp
  40dfdc:	subs	x8, x9, x8
  40dfe0:	mov	sp, x8
  40dfe4:	str	x8, [x19, #1728]
  40dfe8:	ldr	x8, [x19, #1728]
  40dfec:	str	x8, [x19, #1744]
  40dff0:	ldr	x0, [x19, #1744]
  40dff4:	adrp	x1, 42b000 <_fini+0x13a8>
  40dff8:	add	x1, x1, #0xa3f
  40dffc:	bl	405ad8 <stpcpy@plt>
  40e000:	ldur	x8, [x29, #-144]
  40e004:	ldr	x1, [x8, #144]
  40e008:	ldur	x8, [x29, #-144]
  40e00c:	ldr	x8, [x8, #152]
  40e010:	str	x0, [x19, #336]
  40e014:	mov	x2, x8
  40e018:	str	x8, [x19, #328]
  40e01c:	bl	405af8 <memcpy@plt>
  40e020:	ldr	x8, [x19, #336]
  40e024:	ldr	x9, [x19, #328]
  40e028:	add	x10, x8, x9
  40e02c:	mov	w11, #0x0                   	// #0
  40e030:	strb	w11, [x10]
  40e034:	ldur	x10, [x29, #-16]
  40e038:	ldur	x12, [x29, #-24]
  40e03c:	add	x13, x12, #0x1
  40e040:	stur	x13, [x29, #-24]
  40e044:	ldr	x13, [x19, #1744]
  40e048:	str	x13, [x19, #1712]
  40e04c:	ldr	x0, [x19, #1744]
  40e050:	str	x10, [x19, #320]
  40e054:	str	x12, [x19, #312]
  40e058:	bl	405738 <strlen@plt>
  40e05c:	str	x0, [x19, #1720]
  40e060:	ldr	q0, [x19, #1712]
  40e064:	ldr	x8, [x19, #320]
  40e068:	ldr	x9, [x19, #312]
  40e06c:	str	q0, [x8, x9, lsl #4]
  40e070:	ldur	x8, [x29, #-144]
  40e074:	ldr	w0, [x8, #64]
  40e078:	bl	415ffc <audit_session_is_valid>
  40e07c:	tbnz	w0, #0, 40e084 <dispatch_message_real+0x2f98>
  40e080:	b	40e1b4 <dispatch_message_real+0x30c8>
  40e084:	mov	x8, #0x22                  	// #34
  40e088:	str	x8, [x19, #1696]
  40e08c:	ldr	x1, [x19, #1696]
  40e090:	mov	x0, #0x1                   	// #1
  40e094:	bl	40b084 <size_multiply_overflow>
  40e098:	mov	w8, #0x1                   	// #1
  40e09c:	eor	w9, w0, #0x1
  40e0a0:	eor	w9, w9, w8
  40e0a4:	eor	w9, w9, w8
  40e0a8:	eor	w8, w9, w8
  40e0ac:	and	w8, w8, #0x1
  40e0b0:	mov	w1, w8
  40e0b4:	sxtw	x10, w1
  40e0b8:	cbz	x10, 40e0d8 <dispatch_message_real+0x2fec>
  40e0bc:	mov	w8, wzr
  40e0c0:	mov	w0, w8
  40e0c4:	ldr	x1, [x19, #872]
  40e0c8:	ldr	x2, [x19, #888]
  40e0cc:	mov	w3, #0x3cd                 	// #973
  40e0d0:	ldr	x4, [x19, #880]
  40e0d4:	bl	405718 <log_assert_failed_realm@plt>
  40e0d8:	ldr	x8, [x19, #1696]
  40e0dc:	mov	x9, #0x1                   	// #1
  40e0e0:	mul	x8, x9, x8
  40e0e4:	cmp	x8, #0x400, lsl #12
  40e0e8:	cset	w10, ls  // ls = plast
  40e0ec:	mov	w11, #0x1                   	// #1
  40e0f0:	eor	w10, w10, #0x1
  40e0f4:	eor	w10, w10, w11
  40e0f8:	eor	w10, w10, w11
  40e0fc:	and	w10, w10, #0x1
  40e100:	mov	w0, w10
  40e104:	sxtw	x8, w0
  40e108:	cbz	x8, 40e128 <dispatch_message_real+0x303c>
  40e10c:	mov	w8, wzr
  40e110:	mov	w0, w8
  40e114:	ldr	x1, [x19, #896]
  40e118:	ldr	x2, [x19, #888]
  40e11c:	mov	w3, #0x3cd                 	// #973
  40e120:	ldr	x4, [x19, #880]
  40e124:	bl	405718 <log_assert_failed_realm@plt>
  40e128:	ldr	x8, [x19, #1696]
  40e12c:	mov	x9, #0x1                   	// #1
  40e130:	mul	x8, x9, x8
  40e134:	mul	x8, x8, x9
  40e138:	add	x8, x8, #0xf
  40e13c:	and	x8, x8, #0xfffffffffffffff0
  40e140:	mov	x9, sp
  40e144:	subs	x8, x9, x8
  40e148:	mov	sp, x8
  40e14c:	str	x8, [x19, #1688]
  40e150:	ldr	x8, [x19, #1688]
  40e154:	str	x8, [x19, #1704]
  40e158:	ldr	x0, [x19, #1704]
  40e15c:	ldur	x8, [x29, #-144]
  40e160:	ldr	w2, [x8, #64]
  40e164:	adrp	x1, 42b000 <_fini+0x13a8>
  40e168:	add	x1, x1, #0xa57
  40e16c:	bl	405ab8 <sprintf@plt>
  40e170:	ldur	x8, [x29, #-16]
  40e174:	ldur	x9, [x29, #-24]
  40e178:	add	x10, x9, #0x1
  40e17c:	stur	x10, [x29, #-24]
  40e180:	ldr	x10, [x19, #1704]
  40e184:	str	x10, [x19, #1672]
  40e188:	ldr	x10, [x19, #1704]
  40e18c:	mov	x0, x10
  40e190:	str	x8, [x19, #304]
  40e194:	str	x9, [x19, #296]
  40e198:	bl	405738 <strlen@plt>
  40e19c:	str	x0, [x19, #1680]
  40e1a0:	ldr	x8, [x19, #904]
  40e1a4:	ldr	q0, [x8, #560]
  40e1a8:	ldr	x9, [x19, #304]
  40e1ac:	ldr	x10, [x19, #296]
  40e1b0:	str	q0, [x9, x10, lsl #4]
  40e1b4:	ldur	x8, [x29, #-144]
  40e1b8:	ldr	w0, [x8, #68]
  40e1bc:	bl	405ac8 <uid_is_valid@plt>
  40e1c0:	tbnz	w0, #0, 40e1c8 <dispatch_message_real+0x30dc>
  40e1c4:	b	40e2f4 <dispatch_message_real+0x3208>
  40e1c8:	mov	x8, #0x23                  	// #35
  40e1cc:	str	x8, [x19, #1656]
  40e1d0:	ldr	x1, [x19, #1656]
  40e1d4:	mov	x0, #0x1                   	// #1
  40e1d8:	bl	40b084 <size_multiply_overflow>
  40e1dc:	mov	w8, #0x1                   	// #1
  40e1e0:	eor	w9, w0, #0x1
  40e1e4:	eor	w9, w9, w8
  40e1e8:	eor	w9, w9, w8
  40e1ec:	eor	w8, w9, w8
  40e1f0:	and	w8, w8, #0x1
  40e1f4:	mov	w1, w8
  40e1f8:	sxtw	x10, w1
  40e1fc:	cbz	x10, 40e21c <dispatch_message_real+0x3130>
  40e200:	mov	w8, wzr
  40e204:	mov	w0, w8
  40e208:	ldr	x1, [x19, #872]
  40e20c:	ldr	x2, [x19, #888]
  40e210:	mov	w3, #0x3ce                 	// #974
  40e214:	ldr	x4, [x19, #880]
  40e218:	bl	405718 <log_assert_failed_realm@plt>
  40e21c:	ldr	x8, [x19, #1656]
  40e220:	mov	x9, #0x1                   	// #1
  40e224:	mul	x8, x9, x8
  40e228:	cmp	x8, #0x400, lsl #12
  40e22c:	cset	w10, ls  // ls = plast
  40e230:	mov	w11, #0x1                   	// #1
  40e234:	eor	w10, w10, #0x1
  40e238:	eor	w10, w10, w11
  40e23c:	eor	w10, w10, w11
  40e240:	and	w10, w10, #0x1
  40e244:	mov	w0, w10
  40e248:	sxtw	x8, w0
  40e24c:	cbz	x8, 40e26c <dispatch_message_real+0x3180>
  40e250:	mov	w8, wzr
  40e254:	mov	w0, w8
  40e258:	ldr	x1, [x19, #896]
  40e25c:	ldr	x2, [x19, #888]
  40e260:	mov	w3, #0x3ce                 	// #974
  40e264:	ldr	x4, [x19, #880]
  40e268:	bl	405718 <log_assert_failed_realm@plt>
  40e26c:	ldr	x8, [x19, #1656]
  40e270:	mov	x9, #0x1                   	// #1
  40e274:	mul	x8, x9, x8
  40e278:	mul	x8, x8, x9
  40e27c:	add	x8, x8, #0xf
  40e280:	and	x8, x8, #0xfffffffffffffff0
  40e284:	mov	x9, sp
  40e288:	subs	x8, x9, x8
  40e28c:	mov	sp, x8
  40e290:	str	x8, [x19, #1648]
  40e294:	ldr	x8, [x19, #1648]
  40e298:	str	x8, [x19, #1664]
  40e29c:	ldr	x0, [x19, #1664]
  40e2a0:	ldur	x8, [x29, #-144]
  40e2a4:	ldr	w2, [x8, #68]
  40e2a8:	adrp	x1, 42b000 <_fini+0x13a8>
  40e2ac:	add	x1, x1, #0xa6f
  40e2b0:	bl	405ab8 <sprintf@plt>
  40e2b4:	ldur	x8, [x29, #-16]
  40e2b8:	ldur	x9, [x29, #-24]
  40e2bc:	add	x10, x9, #0x1
  40e2c0:	stur	x10, [x29, #-24]
  40e2c4:	ldr	x10, [x19, #1664]
  40e2c8:	str	x10, [x19, #1632]
  40e2cc:	ldr	x10, [x19, #1664]
  40e2d0:	mov	x0, x10
  40e2d4:	str	x8, [x19, #288]
  40e2d8:	str	x9, [x19, #280]
  40e2dc:	bl	405738 <strlen@plt>
  40e2e0:	str	x0, [x19, #1640]
  40e2e4:	ldr	q0, [x19, #1632]
  40e2e8:	ldr	x8, [x19, #288]
  40e2ec:	ldr	x9, [x19, #280]
  40e2f0:	str	q0, [x8, x9, lsl #4]
  40e2f4:	ldur	x8, [x29, #-144]
  40e2f8:	ldr	x0, [x8, #72]
  40e2fc:	bl	4155f8 <isempty>
  40e300:	tbnz	w0, #0, 40e554 <dispatch_message_real+0x3468>
  40e304:	add	x8, x19, #0x648
  40e308:	adrp	x9, 42b000 <_fini+0x13a8>
  40e30c:	add	x9, x9, #0xa88
  40e310:	str	x9, [x19, #1608]
  40e314:	ldur	x9, [x29, #-144]
  40e318:	ldr	x9, [x9, #72]
  40e31c:	str	x9, [x8, #8]
  40e320:	str	xzr, [x19, #1584]
  40e324:	str	xzr, [x19, #1576]
  40e328:	ldr	x8, [x19, #1576]
  40e32c:	mov	w9, #0x0                   	// #0
  40e330:	cmp	x8, #0x2
  40e334:	str	w9, [x19, #276]
  40e338:	b.cs	40e360 <dispatch_message_real+0x3274>  // b.hs, b.nlast
  40e33c:	ldr	x8, [x19, #1576]
  40e340:	mov	x9, #0x8                   	// #8
  40e344:	mul	x8, x9, x8
  40e348:	add	x9, x19, #0x648
  40e34c:	add	x8, x9, x8
  40e350:	ldr	x8, [x8]
  40e354:	cmp	x8, #0x0
  40e358:	cset	w10, ne  // ne = any
  40e35c:	str	w10, [x19, #276]
  40e360:	ldr	w8, [x19, #276]
  40e364:	tbnz	w8, #0, 40e36c <dispatch_message_real+0x3280>
  40e368:	b	40e3a4 <dispatch_message_real+0x32b8>
  40e36c:	ldr	x8, [x19, #1576]
  40e370:	mov	x9, #0x8                   	// #8
  40e374:	mul	x8, x9, x8
  40e378:	add	x9, x19, #0x648
  40e37c:	add	x8, x9, x8
  40e380:	ldr	x0, [x8]
  40e384:	bl	405738 <strlen@plt>
  40e388:	ldr	x8, [x19, #1584]
  40e38c:	add	x8, x8, x0
  40e390:	str	x8, [x19, #1584]
  40e394:	ldr	x8, [x19, #1576]
  40e398:	add	x8, x8, #0x1
  40e39c:	str	x8, [x19, #1576]
  40e3a0:	b	40e328 <dispatch_message_real+0x323c>
  40e3a4:	ldr	x8, [x19, #1584]
  40e3a8:	add	x8, x8, #0x1
  40e3ac:	str	x8, [x19, #1568]
  40e3b0:	ldr	x1, [x19, #1568]
  40e3b4:	mov	x0, #0x1                   	// #1
  40e3b8:	bl	40b084 <size_multiply_overflow>
  40e3bc:	mov	w8, #0x1                   	// #1
  40e3c0:	eor	w9, w0, #0x1
  40e3c4:	eor	w9, w9, w8
  40e3c8:	eor	w9, w9, w8
  40e3cc:	eor	w8, w9, w8
  40e3d0:	and	w8, w8, #0x1
  40e3d4:	mov	w1, w8
  40e3d8:	sxtw	x10, w1
  40e3dc:	cbz	x10, 40e3fc <dispatch_message_real+0x3310>
  40e3e0:	mov	w8, wzr
  40e3e4:	mov	w0, w8
  40e3e8:	ldr	x1, [x19, #872]
  40e3ec:	ldr	x2, [x19, #888]
  40e3f0:	mov	w3, #0x3d0                 	// #976
  40e3f4:	ldr	x4, [x19, #880]
  40e3f8:	bl	405718 <log_assert_failed_realm@plt>
  40e3fc:	ldr	x8, [x19, #1568]
  40e400:	mov	x9, #0x1                   	// #1
  40e404:	mul	x8, x9, x8
  40e408:	cmp	x8, #0x400, lsl #12
  40e40c:	cset	w10, ls  // ls = plast
  40e410:	mov	w11, #0x1                   	// #1
  40e414:	eor	w10, w10, #0x1
  40e418:	eor	w10, w10, w11
  40e41c:	eor	w10, w10, w11
  40e420:	and	w10, w10, #0x1
  40e424:	mov	w0, w10
  40e428:	sxtw	x8, w0
  40e42c:	cbz	x8, 40e44c <dispatch_message_real+0x3360>
  40e430:	mov	w8, wzr
  40e434:	mov	w0, w8
  40e438:	ldr	x1, [x19, #896]
  40e43c:	ldr	x2, [x19, #888]
  40e440:	mov	w3, #0x3d0                 	// #976
  40e444:	ldr	x4, [x19, #880]
  40e448:	bl	405718 <log_assert_failed_realm@plt>
  40e44c:	ldr	x8, [x19, #1568]
  40e450:	mov	x9, #0x1                   	// #1
  40e454:	mul	x8, x9, x8
  40e458:	mul	x8, x8, x9
  40e45c:	add	x8, x8, #0xf
  40e460:	and	x8, x8, #0xfffffffffffffff0
  40e464:	mov	x9, sp
  40e468:	subs	x8, x9, x8
  40e46c:	mov	sp, x8
  40e470:	str	x8, [x19, #1560]
  40e474:	ldr	x8, [x19, #1560]
  40e478:	str	x8, [x19, #1600]
  40e47c:	str	x8, [x19, #1592]
  40e480:	str	xzr, [x19, #1576]
  40e484:	ldr	x8, [x19, #1576]
  40e488:	mov	w9, #0x0                   	// #0
  40e48c:	cmp	x8, #0x2
  40e490:	str	w9, [x19, #272]
  40e494:	b.cs	40e4bc <dispatch_message_real+0x33d0>  // b.hs, b.nlast
  40e498:	ldr	x8, [x19, #1576]
  40e49c:	mov	x9, #0x8                   	// #8
  40e4a0:	mul	x8, x9, x8
  40e4a4:	add	x9, x19, #0x648
  40e4a8:	add	x8, x9, x8
  40e4ac:	ldr	x8, [x8]
  40e4b0:	cmp	x8, #0x0
  40e4b4:	cset	w10, ne  // ne = any
  40e4b8:	str	w10, [x19, #272]
  40e4bc:	ldr	w8, [x19, #272]
  40e4c0:	tbnz	w8, #0, 40e4c8 <dispatch_message_real+0x33dc>
  40e4c4:	b	40e4fc <dispatch_message_real+0x3410>
  40e4c8:	ldr	x0, [x19, #1592]
  40e4cc:	ldr	x8, [x19, #1576]
  40e4d0:	mov	x9, #0x8                   	// #8
  40e4d4:	mul	x8, x9, x8
  40e4d8:	add	x9, x19, #0x648
  40e4dc:	add	x8, x9, x8
  40e4e0:	ldr	x1, [x8]
  40e4e4:	bl	405ad8 <stpcpy@plt>
  40e4e8:	str	x0, [x19, #1592]
  40e4ec:	ldr	x8, [x19, #1576]
  40e4f0:	add	x8, x8, #0x1
  40e4f4:	str	x8, [x19, #1576]
  40e4f8:	b	40e484 <dispatch_message_real+0x3398>
  40e4fc:	ldr	x8, [x19, #1592]
  40e500:	mov	w9, #0x0                   	// #0
  40e504:	strb	w9, [x8]
  40e508:	ldr	x8, [x19, #1600]
  40e50c:	str	x8, [x19, #1552]
  40e510:	ldr	x8, [x19, #1552]
  40e514:	str	x8, [x19, #1624]
  40e518:	ldur	x8, [x29, #-16]
  40e51c:	ldur	x10, [x29, #-24]
  40e520:	add	x11, x10, #0x1
  40e524:	stur	x11, [x29, #-24]
  40e528:	ldr	x11, [x19, #1624]
  40e52c:	str	x11, [x19, #1536]
  40e530:	ldr	x0, [x19, #1624]
  40e534:	str	x8, [x19, #264]
  40e538:	str	x10, [x19, #256]
  40e53c:	bl	405738 <strlen@plt>
  40e540:	str	x0, [x19, #1544]
  40e544:	ldr	q0, [x19, #1536]
  40e548:	ldr	x8, [x19, #264]
  40e54c:	ldr	x10, [x19, #256]
  40e550:	str	q0, [x8, x10, lsl #4]
  40e554:	ldur	x8, [x29, #-144]
  40e558:	ldr	x0, [x8, #80]
  40e55c:	bl	4155f8 <isempty>
  40e560:	tbnz	w0, #0, 40e7b4 <dispatch_message_real+0x36c8>
  40e564:	add	x8, x19, #0x5e8
  40e568:	adrp	x9, 42b000 <_fini+0x13a8>
  40e56c:	add	x9, x9, #0xa9f
  40e570:	str	x9, [x19, #1512]
  40e574:	ldur	x9, [x29, #-144]
  40e578:	ldr	x9, [x9, #80]
  40e57c:	str	x9, [x8, #8]
  40e580:	str	xzr, [x19, #1488]
  40e584:	str	xzr, [x19, #1480]
  40e588:	ldr	x8, [x19, #1480]
  40e58c:	mov	w9, #0x0                   	// #0
  40e590:	cmp	x8, #0x2
  40e594:	str	w9, [x19, #252]
  40e598:	b.cs	40e5c0 <dispatch_message_real+0x34d4>  // b.hs, b.nlast
  40e59c:	ldr	x8, [x19, #1480]
  40e5a0:	mov	x9, #0x8                   	// #8
  40e5a4:	mul	x8, x9, x8
  40e5a8:	add	x9, x19, #0x5e8
  40e5ac:	add	x8, x9, x8
  40e5b0:	ldr	x8, [x8]
  40e5b4:	cmp	x8, #0x0
  40e5b8:	cset	w10, ne  // ne = any
  40e5bc:	str	w10, [x19, #252]
  40e5c0:	ldr	w8, [x19, #252]
  40e5c4:	tbnz	w8, #0, 40e5cc <dispatch_message_real+0x34e0>
  40e5c8:	b	40e604 <dispatch_message_real+0x3518>
  40e5cc:	ldr	x8, [x19, #1480]
  40e5d0:	mov	x9, #0x8                   	// #8
  40e5d4:	mul	x8, x9, x8
  40e5d8:	add	x9, x19, #0x5e8
  40e5dc:	add	x8, x9, x8
  40e5e0:	ldr	x0, [x8]
  40e5e4:	bl	405738 <strlen@plt>
  40e5e8:	ldr	x8, [x19, #1488]
  40e5ec:	add	x8, x8, x0
  40e5f0:	str	x8, [x19, #1488]
  40e5f4:	ldr	x8, [x19, #1480]
  40e5f8:	add	x8, x8, #0x1
  40e5fc:	str	x8, [x19, #1480]
  40e600:	b	40e588 <dispatch_message_real+0x349c>
  40e604:	ldr	x8, [x19, #1488]
  40e608:	add	x8, x8, #0x1
  40e60c:	str	x8, [x19, #1472]
  40e610:	ldr	x1, [x19, #1472]
  40e614:	mov	x0, #0x1                   	// #1
  40e618:	bl	40b084 <size_multiply_overflow>
  40e61c:	mov	w8, #0x1                   	// #1
  40e620:	eor	w9, w0, #0x1
  40e624:	eor	w9, w9, w8
  40e628:	eor	w9, w9, w8
  40e62c:	eor	w8, w9, w8
  40e630:	and	w8, w8, #0x1
  40e634:	mov	w1, w8
  40e638:	sxtw	x10, w1
  40e63c:	cbz	x10, 40e65c <dispatch_message_real+0x3570>
  40e640:	mov	w8, wzr
  40e644:	mov	w0, w8
  40e648:	ldr	x1, [x19, #872]
  40e64c:	ldr	x2, [x19, #888]
  40e650:	mov	w3, #0x3d1                 	// #977
  40e654:	ldr	x4, [x19, #880]
  40e658:	bl	405718 <log_assert_failed_realm@plt>
  40e65c:	ldr	x8, [x19, #1472]
  40e660:	mov	x9, #0x1                   	// #1
  40e664:	mul	x8, x9, x8
  40e668:	cmp	x8, #0x400, lsl #12
  40e66c:	cset	w10, ls  // ls = plast
  40e670:	mov	w11, #0x1                   	// #1
  40e674:	eor	w10, w10, #0x1
  40e678:	eor	w10, w10, w11
  40e67c:	eor	w10, w10, w11
  40e680:	and	w10, w10, #0x1
  40e684:	mov	w0, w10
  40e688:	sxtw	x8, w0
  40e68c:	cbz	x8, 40e6ac <dispatch_message_real+0x35c0>
  40e690:	mov	w8, wzr
  40e694:	mov	w0, w8
  40e698:	ldr	x1, [x19, #896]
  40e69c:	ldr	x2, [x19, #888]
  40e6a0:	mov	w3, #0x3d1                 	// #977
  40e6a4:	ldr	x4, [x19, #880]
  40e6a8:	bl	405718 <log_assert_failed_realm@plt>
  40e6ac:	ldr	x8, [x19, #1472]
  40e6b0:	mov	x9, #0x1                   	// #1
  40e6b4:	mul	x8, x9, x8
  40e6b8:	mul	x8, x8, x9
  40e6bc:	add	x8, x8, #0xf
  40e6c0:	and	x8, x8, #0xfffffffffffffff0
  40e6c4:	mov	x9, sp
  40e6c8:	subs	x8, x9, x8
  40e6cc:	mov	sp, x8
  40e6d0:	str	x8, [x19, #1464]
  40e6d4:	ldr	x8, [x19, #1464]
  40e6d8:	str	x8, [x19, #1504]
  40e6dc:	str	x8, [x19, #1496]
  40e6e0:	str	xzr, [x19, #1480]
  40e6e4:	ldr	x8, [x19, #1480]
  40e6e8:	mov	w9, #0x0                   	// #0
  40e6ec:	cmp	x8, #0x2
  40e6f0:	str	w9, [x19, #248]
  40e6f4:	b.cs	40e71c <dispatch_message_real+0x3630>  // b.hs, b.nlast
  40e6f8:	ldr	x8, [x19, #1480]
  40e6fc:	mov	x9, #0x8                   	// #8
  40e700:	mul	x8, x9, x8
  40e704:	add	x9, x19, #0x5e8
  40e708:	add	x8, x9, x8
  40e70c:	ldr	x8, [x8]
  40e710:	cmp	x8, #0x0
  40e714:	cset	w10, ne  // ne = any
  40e718:	str	w10, [x19, #248]
  40e71c:	ldr	w8, [x19, #248]
  40e720:	tbnz	w8, #0, 40e728 <dispatch_message_real+0x363c>
  40e724:	b	40e75c <dispatch_message_real+0x3670>
  40e728:	ldr	x0, [x19, #1496]
  40e72c:	ldr	x8, [x19, #1480]
  40e730:	mov	x9, #0x8                   	// #8
  40e734:	mul	x8, x9, x8
  40e738:	add	x9, x19, #0x5e8
  40e73c:	add	x8, x9, x8
  40e740:	ldr	x1, [x8]
  40e744:	bl	405ad8 <stpcpy@plt>
  40e748:	str	x0, [x19, #1496]
  40e74c:	ldr	x8, [x19, #1480]
  40e750:	add	x8, x8, #0x1
  40e754:	str	x8, [x19, #1480]
  40e758:	b	40e6e4 <dispatch_message_real+0x35f8>
  40e75c:	ldr	x8, [x19, #1496]
  40e760:	mov	w9, #0x0                   	// #0
  40e764:	strb	w9, [x8]
  40e768:	ldr	x8, [x19, #1504]
  40e76c:	str	x8, [x19, #1456]
  40e770:	ldr	x8, [x19, #1456]
  40e774:	str	x8, [x19, #1528]
  40e778:	ldur	x8, [x29, #-16]
  40e77c:	ldur	x10, [x29, #-24]
  40e780:	add	x11, x10, #0x1
  40e784:	stur	x11, [x29, #-24]
  40e788:	ldr	x11, [x19, #1528]
  40e78c:	str	x11, [x19, #1440]
  40e790:	ldr	x0, [x19, #1528]
  40e794:	str	x8, [x19, #240]
  40e798:	str	x10, [x19, #232]
  40e79c:	bl	405738 <strlen@plt>
  40e7a0:	str	x0, [x19, #1448]
  40e7a4:	ldr	q0, [x19, #1440]
  40e7a8:	ldr	x8, [x19, #240]
  40e7ac:	ldr	x10, [x19, #232]
  40e7b0:	str	q0, [x8, x10, lsl #4]
  40e7b4:	ldur	x8, [x29, #-144]
  40e7b8:	ldr	w0, [x8, #88]
  40e7bc:	bl	405ac8 <uid_is_valid@plt>
  40e7c0:	tbnz	w0, #0, 40e7c8 <dispatch_message_real+0x36dc>
  40e7c4:	b	40e8f8 <dispatch_message_real+0x380c>
  40e7c8:	mov	x8, #0x26                  	// #38
  40e7cc:	str	x8, [x19, #1424]
  40e7d0:	ldr	x1, [x19, #1424]
  40e7d4:	mov	x0, #0x1                   	// #1
  40e7d8:	bl	40b084 <size_multiply_overflow>
  40e7dc:	mov	w8, #0x1                   	// #1
  40e7e0:	eor	w9, w0, #0x1
  40e7e4:	eor	w9, w9, w8
  40e7e8:	eor	w9, w9, w8
  40e7ec:	eor	w8, w9, w8
  40e7f0:	and	w8, w8, #0x1
  40e7f4:	mov	w1, w8
  40e7f8:	sxtw	x10, w1
  40e7fc:	cbz	x10, 40e81c <dispatch_message_real+0x3730>
  40e800:	mov	w8, wzr
  40e804:	mov	w0, w8
  40e808:	ldr	x1, [x19, #872]
  40e80c:	ldr	x2, [x19, #888]
  40e810:	mov	w3, #0x3d2                 	// #978
  40e814:	ldr	x4, [x19, #880]
  40e818:	bl	405718 <log_assert_failed_realm@plt>
  40e81c:	ldr	x8, [x19, #1424]
  40e820:	mov	x9, #0x1                   	// #1
  40e824:	mul	x8, x9, x8
  40e828:	cmp	x8, #0x400, lsl #12
  40e82c:	cset	w10, ls  // ls = plast
  40e830:	mov	w11, #0x1                   	// #1
  40e834:	eor	w10, w10, #0x1
  40e838:	eor	w10, w10, w11
  40e83c:	eor	w10, w10, w11
  40e840:	and	w10, w10, #0x1
  40e844:	mov	w0, w10
  40e848:	sxtw	x8, w0
  40e84c:	cbz	x8, 40e86c <dispatch_message_real+0x3780>
  40e850:	mov	w8, wzr
  40e854:	mov	w0, w8
  40e858:	ldr	x1, [x19, #896]
  40e85c:	ldr	x2, [x19, #888]
  40e860:	mov	w3, #0x3d2                 	// #978
  40e864:	ldr	x4, [x19, #880]
  40e868:	bl	405718 <log_assert_failed_realm@plt>
  40e86c:	ldr	x8, [x19, #1424]
  40e870:	mov	x9, #0x1                   	// #1
  40e874:	mul	x8, x9, x8
  40e878:	mul	x8, x8, x9
  40e87c:	add	x8, x8, #0xf
  40e880:	and	x8, x8, #0xfffffffffffffff0
  40e884:	mov	x9, sp
  40e888:	subs	x8, x9, x8
  40e88c:	mov	sp, x8
  40e890:	str	x8, [x19, #1416]
  40e894:	ldr	x8, [x19, #1416]
  40e898:	str	x8, [x19, #1432]
  40e89c:	ldr	x0, [x19, #1432]
  40e8a0:	ldur	x8, [x29, #-144]
  40e8a4:	ldr	w2, [x8, #88]
  40e8a8:	adrp	x1, 42b000 <_fini+0x13a8>
  40e8ac:	add	x1, x1, #0xab7
  40e8b0:	bl	405ab8 <sprintf@plt>
  40e8b4:	ldur	x8, [x29, #-16]
  40e8b8:	ldur	x9, [x29, #-24]
  40e8bc:	add	x10, x9, #0x1
  40e8c0:	stur	x10, [x29, #-24]
  40e8c4:	ldr	x10, [x19, #1432]
  40e8c8:	str	x10, [x19, #1400]
  40e8cc:	ldr	x10, [x19, #1432]
  40e8d0:	mov	x0, x10
  40e8d4:	str	x8, [x19, #224]
  40e8d8:	str	x9, [x19, #216]
  40e8dc:	bl	405738 <strlen@plt>
  40e8e0:	str	x0, [x19, #1408]
  40e8e4:	ldr	x8, [x19, #904]
  40e8e8:	ldr	q0, [x8, #288]
  40e8ec:	ldr	x9, [x19, #224]
  40e8f0:	ldr	x10, [x19, #216]
  40e8f4:	str	q0, [x9, x10, lsl #4]
  40e8f8:	ldur	x8, [x29, #-144]
  40e8fc:	ldr	x0, [x8, #96]
  40e900:	bl	4155f8 <isempty>
  40e904:	tbnz	w0, #0, 40eb5c <dispatch_message_real+0x3a70>
  40e908:	add	x8, x19, #0x560
  40e90c:	adrp	x9, 42b000 <_fini+0x13a8>
  40e910:	add	x9, x9, #0xad3
  40e914:	str	x9, [x19, #1376]
  40e918:	ldur	x9, [x29, #-144]
  40e91c:	ldr	x9, [x9, #96]
  40e920:	str	x9, [x8, #8]
  40e924:	str	xzr, [x19, #1352]
  40e928:	str	xzr, [x19, #1344]
  40e92c:	ldr	x8, [x19, #1344]
  40e930:	mov	w9, #0x0                   	// #0
  40e934:	cmp	x8, #0x2
  40e938:	str	w9, [x19, #212]
  40e93c:	b.cs	40e964 <dispatch_message_real+0x3878>  // b.hs, b.nlast
  40e940:	ldr	x8, [x19, #1344]
  40e944:	mov	x9, #0x8                   	// #8
  40e948:	mul	x8, x9, x8
  40e94c:	add	x9, x19, #0x560
  40e950:	add	x8, x9, x8
  40e954:	ldr	x8, [x8]
  40e958:	cmp	x8, #0x0
  40e95c:	cset	w10, ne  // ne = any
  40e960:	str	w10, [x19, #212]
  40e964:	ldr	w8, [x19, #212]
  40e968:	tbnz	w8, #0, 40e970 <dispatch_message_real+0x3884>
  40e96c:	b	40e9a8 <dispatch_message_real+0x38bc>
  40e970:	ldr	x8, [x19, #1344]
  40e974:	mov	x9, #0x8                   	// #8
  40e978:	mul	x8, x9, x8
  40e97c:	add	x9, x19, #0x560
  40e980:	add	x8, x9, x8
  40e984:	ldr	x0, [x8]
  40e988:	bl	405738 <strlen@plt>
  40e98c:	ldr	x8, [x19, #1352]
  40e990:	add	x8, x8, x0
  40e994:	str	x8, [x19, #1352]
  40e998:	ldr	x8, [x19, #1344]
  40e99c:	add	x8, x8, #0x1
  40e9a0:	str	x8, [x19, #1344]
  40e9a4:	b	40e92c <dispatch_message_real+0x3840>
  40e9a8:	ldr	x8, [x19, #1352]
  40e9ac:	add	x8, x8, #0x1
  40e9b0:	str	x8, [x19, #1336]
  40e9b4:	ldr	x1, [x19, #1336]
  40e9b8:	mov	x0, #0x1                   	// #1
  40e9bc:	bl	40b084 <size_multiply_overflow>
  40e9c0:	mov	w8, #0x1                   	// #1
  40e9c4:	eor	w9, w0, #0x1
  40e9c8:	eor	w9, w9, w8
  40e9cc:	eor	w9, w9, w8
  40e9d0:	eor	w8, w9, w8
  40e9d4:	and	w8, w8, #0x1
  40e9d8:	mov	w1, w8
  40e9dc:	sxtw	x10, w1
  40e9e0:	cbz	x10, 40ea00 <dispatch_message_real+0x3914>
  40e9e4:	mov	w8, wzr
  40e9e8:	mov	w0, w8
  40e9ec:	ldr	x1, [x19, #872]
  40e9f0:	ldr	x2, [x19, #888]
  40e9f4:	mov	w3, #0x3d3                 	// #979
  40e9f8:	ldr	x4, [x19, #880]
  40e9fc:	bl	405718 <log_assert_failed_realm@plt>
  40ea00:	ldr	x8, [x19, #1336]
  40ea04:	mov	x9, #0x1                   	// #1
  40ea08:	mul	x8, x9, x8
  40ea0c:	cmp	x8, #0x400, lsl #12
  40ea10:	cset	w10, ls  // ls = plast
  40ea14:	mov	w11, #0x1                   	// #1
  40ea18:	eor	w10, w10, #0x1
  40ea1c:	eor	w10, w10, w11
  40ea20:	eor	w10, w10, w11
  40ea24:	and	w10, w10, #0x1
  40ea28:	mov	w0, w10
  40ea2c:	sxtw	x8, w0
  40ea30:	cbz	x8, 40ea50 <dispatch_message_real+0x3964>
  40ea34:	mov	w8, wzr
  40ea38:	mov	w0, w8
  40ea3c:	ldr	x1, [x19, #896]
  40ea40:	ldr	x2, [x19, #888]
  40ea44:	mov	w3, #0x3d3                 	// #979
  40ea48:	ldr	x4, [x19, #880]
  40ea4c:	bl	405718 <log_assert_failed_realm@plt>
  40ea50:	ldr	x8, [x19, #1336]
  40ea54:	mov	x9, #0x1                   	// #1
  40ea58:	mul	x8, x9, x8
  40ea5c:	mul	x8, x8, x9
  40ea60:	add	x8, x8, #0xf
  40ea64:	and	x8, x8, #0xfffffffffffffff0
  40ea68:	mov	x9, sp
  40ea6c:	subs	x8, x9, x8
  40ea70:	mov	sp, x8
  40ea74:	str	x8, [x19, #1328]
  40ea78:	ldr	x8, [x19, #1328]
  40ea7c:	str	x8, [x19, #1368]
  40ea80:	str	x8, [x19, #1360]
  40ea84:	str	xzr, [x19, #1344]
  40ea88:	ldr	x8, [x19, #1344]
  40ea8c:	mov	w9, #0x0                   	// #0
  40ea90:	cmp	x8, #0x2
  40ea94:	str	w9, [x19, #208]
  40ea98:	b.cs	40eac0 <dispatch_message_real+0x39d4>  // b.hs, b.nlast
  40ea9c:	ldr	x8, [x19, #1344]
  40eaa0:	mov	x9, #0x8                   	// #8
  40eaa4:	mul	x8, x9, x8
  40eaa8:	add	x9, x19, #0x560
  40eaac:	add	x8, x9, x8
  40eab0:	ldr	x8, [x8]
  40eab4:	cmp	x8, #0x0
  40eab8:	cset	w10, ne  // ne = any
  40eabc:	str	w10, [x19, #208]
  40eac0:	ldr	w8, [x19, #208]
  40eac4:	tbnz	w8, #0, 40eacc <dispatch_message_real+0x39e0>
  40eac8:	b	40eb00 <dispatch_message_real+0x3a14>
  40eacc:	ldr	x0, [x19, #1360]
  40ead0:	ldr	x8, [x19, #1344]
  40ead4:	mov	x9, #0x8                   	// #8
  40ead8:	mul	x8, x9, x8
  40eadc:	add	x9, x19, #0x560
  40eae0:	add	x8, x9, x8
  40eae4:	ldr	x1, [x8]
  40eae8:	bl	405ad8 <stpcpy@plt>
  40eaec:	str	x0, [x19, #1360]
  40eaf0:	ldr	x8, [x19, #1344]
  40eaf4:	add	x8, x8, #0x1
  40eaf8:	str	x8, [x19, #1344]
  40eafc:	b	40ea88 <dispatch_message_real+0x399c>
  40eb00:	ldr	x8, [x19, #1360]
  40eb04:	mov	w9, #0x0                   	// #0
  40eb08:	strb	w9, [x8]
  40eb0c:	ldr	x8, [x19, #1368]
  40eb10:	str	x8, [x19, #1320]
  40eb14:	ldr	x8, [x19, #1320]
  40eb18:	str	x8, [x19, #1392]
  40eb1c:	ldur	x8, [x29, #-16]
  40eb20:	ldur	x10, [x29, #-24]
  40eb24:	add	x11, x10, #0x1
  40eb28:	stur	x11, [x29, #-24]
  40eb2c:	ldr	x11, [x19, #1392]
  40eb30:	str	x11, [x19, #1304]
  40eb34:	ldr	x0, [x19, #1392]
  40eb38:	str	x8, [x19, #200]
  40eb3c:	str	x10, [x19, #192]
  40eb40:	bl	405738 <strlen@plt>
  40eb44:	str	x0, [x19, #1312]
  40eb48:	ldr	x8, [x19, #904]
  40eb4c:	ldr	q0, [x8, #192]
  40eb50:	ldr	x10, [x19, #200]
  40eb54:	ldr	x11, [x19, #192]
  40eb58:	str	q0, [x10, x11, lsl #4]
  40eb5c:	ldur	x8, [x29, #-144]
  40eb60:	ldr	x0, [x8, #104]
  40eb64:	bl	4155f8 <isempty>
  40eb68:	tbnz	w0, #0, 40edc0 <dispatch_message_real+0x3cd4>
  40eb6c:	add	x8, x19, #0x500
  40eb70:	adrp	x9, 42b000 <_fini+0x13a8>
  40eb74:	add	x9, x9, #0xae8
  40eb78:	str	x9, [x19, #1280]
  40eb7c:	ldur	x9, [x29, #-144]
  40eb80:	ldr	x9, [x9, #104]
  40eb84:	str	x9, [x8, #8]
  40eb88:	str	xzr, [x19, #1256]
  40eb8c:	str	xzr, [x19, #1248]
  40eb90:	ldr	x8, [x19, #1248]
  40eb94:	mov	w9, #0x0                   	// #0
  40eb98:	cmp	x8, #0x2
  40eb9c:	str	w9, [x19, #188]
  40eba0:	b.cs	40ebc8 <dispatch_message_real+0x3adc>  // b.hs, b.nlast
  40eba4:	ldr	x8, [x19, #1248]
  40eba8:	mov	x9, #0x8                   	// #8
  40ebac:	mul	x8, x9, x8
  40ebb0:	add	x9, x19, #0x500
  40ebb4:	add	x8, x9, x8
  40ebb8:	ldr	x8, [x8]
  40ebbc:	cmp	x8, #0x0
  40ebc0:	cset	w10, ne  // ne = any
  40ebc4:	str	w10, [x19, #188]
  40ebc8:	ldr	w8, [x19, #188]
  40ebcc:	tbnz	w8, #0, 40ebd4 <dispatch_message_real+0x3ae8>
  40ebd0:	b	40ec0c <dispatch_message_real+0x3b20>
  40ebd4:	ldr	x8, [x19, #1248]
  40ebd8:	mov	x9, #0x8                   	// #8
  40ebdc:	mul	x8, x9, x8
  40ebe0:	add	x9, x19, #0x500
  40ebe4:	add	x8, x9, x8
  40ebe8:	ldr	x0, [x8]
  40ebec:	bl	405738 <strlen@plt>
  40ebf0:	ldr	x8, [x19, #1256]
  40ebf4:	add	x8, x8, x0
  40ebf8:	str	x8, [x19, #1256]
  40ebfc:	ldr	x8, [x19, #1248]
  40ec00:	add	x8, x8, #0x1
  40ec04:	str	x8, [x19, #1248]
  40ec08:	b	40eb90 <dispatch_message_real+0x3aa4>
  40ec0c:	ldr	x8, [x19, #1256]
  40ec10:	add	x8, x8, #0x1
  40ec14:	str	x8, [x19, #1240]
  40ec18:	ldr	x1, [x19, #1240]
  40ec1c:	mov	x0, #0x1                   	// #1
  40ec20:	bl	40b084 <size_multiply_overflow>
  40ec24:	mov	w8, #0x1                   	// #1
  40ec28:	eor	w9, w0, #0x1
  40ec2c:	eor	w9, w9, w8
  40ec30:	eor	w9, w9, w8
  40ec34:	eor	w8, w9, w8
  40ec38:	and	w8, w8, #0x1
  40ec3c:	mov	w1, w8
  40ec40:	sxtw	x10, w1
  40ec44:	cbz	x10, 40ec64 <dispatch_message_real+0x3b78>
  40ec48:	mov	w8, wzr
  40ec4c:	mov	w0, w8
  40ec50:	ldr	x1, [x19, #872]
  40ec54:	ldr	x2, [x19, #888]
  40ec58:	mov	w3, #0x3d4                 	// #980
  40ec5c:	ldr	x4, [x19, #880]
  40ec60:	bl	405718 <log_assert_failed_realm@plt>
  40ec64:	ldr	x8, [x19, #1240]
  40ec68:	mov	x9, #0x1                   	// #1
  40ec6c:	mul	x8, x9, x8
  40ec70:	cmp	x8, #0x400, lsl #12
  40ec74:	cset	w10, ls  // ls = plast
  40ec78:	mov	w11, #0x1                   	// #1
  40ec7c:	eor	w10, w10, #0x1
  40ec80:	eor	w10, w10, w11
  40ec84:	eor	w10, w10, w11
  40ec88:	and	w10, w10, #0x1
  40ec8c:	mov	w0, w10
  40ec90:	sxtw	x8, w0
  40ec94:	cbz	x8, 40ecb4 <dispatch_message_real+0x3bc8>
  40ec98:	mov	w8, wzr
  40ec9c:	mov	w0, w8
  40eca0:	ldr	x1, [x19, #896]
  40eca4:	ldr	x2, [x19, #888]
  40eca8:	mov	w3, #0x3d4                 	// #980
  40ecac:	ldr	x4, [x19, #880]
  40ecb0:	bl	405718 <log_assert_failed_realm@plt>
  40ecb4:	ldr	x8, [x19, #1240]
  40ecb8:	mov	x9, #0x1                   	// #1
  40ecbc:	mul	x8, x9, x8
  40ecc0:	mul	x8, x8, x9
  40ecc4:	add	x8, x8, #0xf
  40ecc8:	and	x8, x8, #0xfffffffffffffff0
  40eccc:	mov	x9, sp
  40ecd0:	subs	x8, x9, x8
  40ecd4:	mov	sp, x8
  40ecd8:	str	x8, [x19, #1232]
  40ecdc:	ldr	x8, [x19, #1232]
  40ece0:	str	x8, [x19, #1272]
  40ece4:	str	x8, [x19, #1264]
  40ece8:	str	xzr, [x19, #1248]
  40ecec:	ldr	x8, [x19, #1248]
  40ecf0:	mov	w9, #0x0                   	// #0
  40ecf4:	cmp	x8, #0x2
  40ecf8:	str	w9, [x19, #184]
  40ecfc:	b.cs	40ed24 <dispatch_message_real+0x3c38>  // b.hs, b.nlast
  40ed00:	ldr	x8, [x19, #1248]
  40ed04:	mov	x9, #0x8                   	// #8
  40ed08:	mul	x8, x9, x8
  40ed0c:	add	x9, x19, #0x500
  40ed10:	add	x8, x9, x8
  40ed14:	ldr	x8, [x8]
  40ed18:	cmp	x8, #0x0
  40ed1c:	cset	w10, ne  // ne = any
  40ed20:	str	w10, [x19, #184]
  40ed24:	ldr	w8, [x19, #184]
  40ed28:	tbnz	w8, #0, 40ed30 <dispatch_message_real+0x3c44>
  40ed2c:	b	40ed64 <dispatch_message_real+0x3c78>
  40ed30:	ldr	x0, [x19, #1264]
  40ed34:	ldr	x8, [x19, #1248]
  40ed38:	mov	x9, #0x8                   	// #8
  40ed3c:	mul	x8, x9, x8
  40ed40:	add	x9, x19, #0x500
  40ed44:	add	x8, x9, x8
  40ed48:	ldr	x1, [x8]
  40ed4c:	bl	405ad8 <stpcpy@plt>
  40ed50:	str	x0, [x19, #1264]
  40ed54:	ldr	x8, [x19, #1248]
  40ed58:	add	x8, x8, #0x1
  40ed5c:	str	x8, [x19, #1248]
  40ed60:	b	40ecec <dispatch_message_real+0x3c00>
  40ed64:	ldr	x8, [x19, #1264]
  40ed68:	mov	w9, #0x0                   	// #0
  40ed6c:	strb	w9, [x8]
  40ed70:	ldr	x8, [x19, #1272]
  40ed74:	str	x8, [x19, #1224]
  40ed78:	ldr	x8, [x19, #1224]
  40ed7c:	str	x8, [x19, #1296]
  40ed80:	ldur	x8, [x29, #-16]
  40ed84:	ldur	x10, [x29, #-24]
  40ed88:	add	x11, x10, #0x1
  40ed8c:	stur	x11, [x29, #-24]
  40ed90:	ldr	x11, [x19, #1296]
  40ed94:	str	x11, [x19, #1208]
  40ed98:	ldr	x0, [x19, #1296]
  40ed9c:	str	x8, [x19, #176]
  40eda0:	str	x10, [x19, #168]
  40eda4:	bl	405738 <strlen@plt>
  40eda8:	str	x0, [x19, #1216]
  40edac:	ldr	x8, [x19, #904]
  40edb0:	ldr	q0, [x8, #96]
  40edb4:	ldr	x10, [x19, #176]
  40edb8:	ldr	x11, [x19, #168]
  40edbc:	str	q0, [x10, x11, lsl #4]
  40edc0:	ldur	x8, [x29, #-144]
  40edc4:	ldr	x0, [x8, #112]
  40edc8:	bl	4155f8 <isempty>
  40edcc:	tbnz	w0, #0, 40f024 <dispatch_message_real+0x3f38>
  40edd0:	add	x8, x19, #0x4a0
  40edd4:	adrp	x9, 42b000 <_fini+0x13a8>
  40edd8:	add	x9, x9, #0xb02
  40eddc:	str	x9, [x19, #1184]
  40ede0:	ldur	x9, [x29, #-144]
  40ede4:	ldr	x9, [x9, #112]
  40ede8:	str	x9, [x8, #8]
  40edec:	str	xzr, [x19, #1160]
  40edf0:	str	xzr, [x19, #1152]
  40edf4:	ldr	x8, [x19, #1152]
  40edf8:	mov	w9, #0x0                   	// #0
  40edfc:	cmp	x8, #0x2
  40ee00:	str	w9, [x19, #164]
  40ee04:	b.cs	40ee2c <dispatch_message_real+0x3d40>  // b.hs, b.nlast
  40ee08:	ldr	x8, [x19, #1152]
  40ee0c:	mov	x9, #0x8                   	// #8
  40ee10:	mul	x8, x9, x8
  40ee14:	add	x9, x19, #0x4a0
  40ee18:	add	x8, x9, x8
  40ee1c:	ldr	x8, [x8]
  40ee20:	cmp	x8, #0x0
  40ee24:	cset	w10, ne  // ne = any
  40ee28:	str	w10, [x19, #164]
  40ee2c:	ldr	w8, [x19, #164]
  40ee30:	tbnz	w8, #0, 40ee38 <dispatch_message_real+0x3d4c>
  40ee34:	b	40ee70 <dispatch_message_real+0x3d84>
  40ee38:	ldr	x8, [x19, #1152]
  40ee3c:	mov	x9, #0x8                   	// #8
  40ee40:	mul	x8, x9, x8
  40ee44:	add	x9, x19, #0x4a0
  40ee48:	add	x8, x9, x8
  40ee4c:	ldr	x0, [x8]
  40ee50:	bl	405738 <strlen@plt>
  40ee54:	ldr	x8, [x19, #1160]
  40ee58:	add	x8, x8, x0
  40ee5c:	str	x8, [x19, #1160]
  40ee60:	ldr	x8, [x19, #1152]
  40ee64:	add	x8, x8, #0x1
  40ee68:	str	x8, [x19, #1152]
  40ee6c:	b	40edf4 <dispatch_message_real+0x3d08>
  40ee70:	ldr	x8, [x19, #1160]
  40ee74:	add	x8, x8, #0x1
  40ee78:	str	x8, [x19, #1144]
  40ee7c:	ldr	x1, [x19, #1144]
  40ee80:	mov	x0, #0x1                   	// #1
  40ee84:	bl	40b084 <size_multiply_overflow>
  40ee88:	mov	w8, #0x1                   	// #1
  40ee8c:	eor	w9, w0, #0x1
  40ee90:	eor	w9, w9, w8
  40ee94:	eor	w9, w9, w8
  40ee98:	eor	w8, w9, w8
  40ee9c:	and	w8, w8, #0x1
  40eea0:	mov	w1, w8
  40eea4:	sxtw	x10, w1
  40eea8:	cbz	x10, 40eec8 <dispatch_message_real+0x3ddc>
  40eeac:	mov	w8, wzr
  40eeb0:	mov	w0, w8
  40eeb4:	ldr	x1, [x19, #872]
  40eeb8:	ldr	x2, [x19, #888]
  40eebc:	mov	w3, #0x3d5                 	// #981
  40eec0:	ldr	x4, [x19, #880]
  40eec4:	bl	405718 <log_assert_failed_realm@plt>
  40eec8:	ldr	x8, [x19, #1144]
  40eecc:	mov	x9, #0x1                   	// #1
  40eed0:	mul	x8, x9, x8
  40eed4:	cmp	x8, #0x400, lsl #12
  40eed8:	cset	w10, ls  // ls = plast
  40eedc:	mov	w11, #0x1                   	// #1
  40eee0:	eor	w10, w10, #0x1
  40eee4:	eor	w10, w10, w11
  40eee8:	eor	w10, w10, w11
  40eeec:	and	w10, w10, #0x1
  40eef0:	mov	w0, w10
  40eef4:	sxtw	x8, w0
  40eef8:	cbz	x8, 40ef18 <dispatch_message_real+0x3e2c>
  40eefc:	mov	w8, wzr
  40ef00:	mov	w0, w8
  40ef04:	ldr	x1, [x19, #896]
  40ef08:	ldr	x2, [x19, #888]
  40ef0c:	mov	w3, #0x3d5                 	// #981
  40ef10:	ldr	x4, [x19, #880]
  40ef14:	bl	405718 <log_assert_failed_realm@plt>
  40ef18:	ldr	x8, [x19, #1144]
  40ef1c:	mov	x9, #0x1                   	// #1
  40ef20:	mul	x8, x9, x8
  40ef24:	mul	x8, x8, x9
  40ef28:	add	x8, x8, #0xf
  40ef2c:	and	x8, x8, #0xfffffffffffffff0
  40ef30:	mov	x9, sp
  40ef34:	subs	x8, x9, x8
  40ef38:	mov	sp, x8
  40ef3c:	str	x8, [x19, #1136]
  40ef40:	ldr	x8, [x19, #1136]
  40ef44:	str	x8, [x19, #1176]
  40ef48:	str	x8, [x19, #1168]
  40ef4c:	str	xzr, [x19, #1152]
  40ef50:	ldr	x8, [x19, #1152]
  40ef54:	mov	w9, #0x0                   	// #0
  40ef58:	cmp	x8, #0x2
  40ef5c:	str	w9, [x19, #160]
  40ef60:	b.cs	40ef88 <dispatch_message_real+0x3e9c>  // b.hs, b.nlast
  40ef64:	ldr	x8, [x19, #1152]
  40ef68:	mov	x9, #0x8                   	// #8
  40ef6c:	mul	x8, x9, x8
  40ef70:	add	x9, x19, #0x4a0
  40ef74:	add	x8, x9, x8
  40ef78:	ldr	x8, [x8]
  40ef7c:	cmp	x8, #0x0
  40ef80:	cset	w10, ne  // ne = any
  40ef84:	str	w10, [x19, #160]
  40ef88:	ldr	w8, [x19, #160]
  40ef8c:	tbnz	w8, #0, 40ef94 <dispatch_message_real+0x3ea8>
  40ef90:	b	40efc8 <dispatch_message_real+0x3edc>
  40ef94:	ldr	x0, [x19, #1168]
  40ef98:	ldr	x8, [x19, #1152]
  40ef9c:	mov	x9, #0x8                   	// #8
  40efa0:	mul	x8, x9, x8
  40efa4:	add	x9, x19, #0x4a0
  40efa8:	add	x8, x9, x8
  40efac:	ldr	x1, [x8]
  40efb0:	bl	405ad8 <stpcpy@plt>
  40efb4:	str	x0, [x19, #1168]
  40efb8:	ldr	x8, [x19, #1152]
  40efbc:	add	x8, x8, #0x1
  40efc0:	str	x8, [x19, #1152]
  40efc4:	b	40ef50 <dispatch_message_real+0x3e64>
  40efc8:	ldr	x8, [x19, #1168]
  40efcc:	mov	w9, #0x0                   	// #0
  40efd0:	strb	w9, [x8]
  40efd4:	ldr	x8, [x19, #1176]
  40efd8:	str	x8, [x19, #1128]
  40efdc:	ldr	x8, [x19, #1128]
  40efe0:	str	x8, [x19, #1200]
  40efe4:	ldur	x8, [x29, #-16]
  40efe8:	ldur	x10, [x29, #-24]
  40efec:	add	x11, x10, #0x1
  40eff0:	stur	x11, [x29, #-24]
  40eff4:	ldr	x11, [x19, #1200]
  40eff8:	str	x11, [x19, #1112]
  40effc:	ldr	x0, [x19, #1200]
  40f000:	str	x8, [x19, #152]
  40f004:	str	x10, [x19, #144]
  40f008:	bl	405738 <strlen@plt>
  40f00c:	str	x0, [x19, #1120]
  40f010:	ldr	x8, [x19, #904]
  40f014:	ldr	q0, [x8]
  40f018:	ldr	x10, [x19, #152]
  40f01c:	ldr	x11, [x19, #144]
  40f020:	str	q0, [x10, x11, lsl #4]
  40f024:	ldur	x8, [x29, #-144]
  40f028:	ldr	x0, [x8, #120]
  40f02c:	bl	4155f8 <isempty>
  40f030:	tbnz	w0, #0, 40f288 <dispatch_message_real+0x419c>
  40f034:	add	x8, x19, #0x440
  40f038:	adrp	x9, 42b000 <_fini+0x13a8>
  40f03c:	add	x9, x9, #0xb18
  40f040:	str	x9, [x19, #1088]
  40f044:	ldur	x9, [x29, #-144]
  40f048:	ldr	x9, [x9, #120]
  40f04c:	str	x9, [x8, #8]
  40f050:	str	xzr, [x19, #1064]
  40f054:	str	xzr, [x19, #1056]
  40f058:	ldr	x8, [x19, #1056]
  40f05c:	mov	w9, #0x0                   	// #0
  40f060:	cmp	x8, #0x2
  40f064:	str	w9, [x19, #140]
  40f068:	b.cs	40f090 <dispatch_message_real+0x3fa4>  // b.hs, b.nlast
  40f06c:	ldr	x8, [x19, #1056]
  40f070:	mov	x9, #0x8                   	// #8
  40f074:	mul	x8, x9, x8
  40f078:	add	x9, x19, #0x440
  40f07c:	add	x8, x9, x8
  40f080:	ldr	x8, [x8]
  40f084:	cmp	x8, #0x0
  40f088:	cset	w10, ne  // ne = any
  40f08c:	str	w10, [x19, #140]
  40f090:	ldr	w8, [x19, #140]
  40f094:	tbnz	w8, #0, 40f09c <dispatch_message_real+0x3fb0>
  40f098:	b	40f0d4 <dispatch_message_real+0x3fe8>
  40f09c:	ldr	x8, [x19, #1056]
  40f0a0:	mov	x9, #0x8                   	// #8
  40f0a4:	mul	x8, x9, x8
  40f0a8:	add	x9, x19, #0x440
  40f0ac:	add	x8, x9, x8
  40f0b0:	ldr	x0, [x8]
  40f0b4:	bl	405738 <strlen@plt>
  40f0b8:	ldr	x8, [x19, #1064]
  40f0bc:	add	x8, x8, x0
  40f0c0:	str	x8, [x19, #1064]
  40f0c4:	ldr	x8, [x19, #1056]
  40f0c8:	add	x8, x8, #0x1
  40f0cc:	str	x8, [x19, #1056]
  40f0d0:	b	40f058 <dispatch_message_real+0x3f6c>
  40f0d4:	ldr	x8, [x19, #1064]
  40f0d8:	add	x8, x8, #0x1
  40f0dc:	str	x8, [x19, #1048]
  40f0e0:	ldr	x1, [x19, #1048]
  40f0e4:	mov	x0, #0x1                   	// #1
  40f0e8:	bl	40b084 <size_multiply_overflow>
  40f0ec:	mov	w8, #0x1                   	// #1
  40f0f0:	eor	w9, w0, #0x1
  40f0f4:	eor	w9, w9, w8
  40f0f8:	eor	w9, w9, w8
  40f0fc:	eor	w8, w9, w8
  40f100:	and	w8, w8, #0x1
  40f104:	mov	w1, w8
  40f108:	sxtw	x10, w1
  40f10c:	cbz	x10, 40f12c <dispatch_message_real+0x4040>
  40f110:	mov	w8, wzr
  40f114:	mov	w0, w8
  40f118:	ldr	x1, [x19, #872]
  40f11c:	ldr	x2, [x19, #888]
  40f120:	mov	w3, #0x3d6                 	// #982
  40f124:	ldr	x4, [x19, #880]
  40f128:	bl	405718 <log_assert_failed_realm@plt>
  40f12c:	ldr	x8, [x19, #1048]
  40f130:	mov	x9, #0x1                   	// #1
  40f134:	mul	x8, x9, x8
  40f138:	cmp	x8, #0x400, lsl #12
  40f13c:	cset	w10, ls  // ls = plast
  40f140:	mov	w11, #0x1                   	// #1
  40f144:	eor	w10, w10, #0x1
  40f148:	eor	w10, w10, w11
  40f14c:	eor	w10, w10, w11
  40f150:	and	w10, w10, #0x1
  40f154:	mov	w0, w10
  40f158:	sxtw	x8, w0
  40f15c:	cbz	x8, 40f17c <dispatch_message_real+0x4090>
  40f160:	mov	w8, wzr
  40f164:	mov	w0, w8
  40f168:	ldr	x1, [x19, #896]
  40f16c:	ldr	x2, [x19, #888]
  40f170:	mov	w3, #0x3d6                 	// #982
  40f174:	ldr	x4, [x19, #880]
  40f178:	bl	405718 <log_assert_failed_realm@plt>
  40f17c:	ldr	x8, [x19, #1048]
  40f180:	mov	x9, #0x1                   	// #1
  40f184:	mul	x8, x9, x8
  40f188:	mul	x8, x8, x9
  40f18c:	add	x8, x8, #0xf
  40f190:	and	x8, x8, #0xfffffffffffffff0
  40f194:	mov	x9, sp
  40f198:	subs	x8, x9, x8
  40f19c:	mov	sp, x8
  40f1a0:	str	x8, [x19, #1040]
  40f1a4:	ldr	x8, [x19, #1040]
  40f1a8:	str	x8, [x19, #1080]
  40f1ac:	str	x8, [x19, #1072]
  40f1b0:	str	xzr, [x19, #1056]
  40f1b4:	ldr	x8, [x19, #1056]
  40f1b8:	mov	w9, #0x0                   	// #0
  40f1bc:	cmp	x8, #0x2
  40f1c0:	str	w9, [x19, #136]
  40f1c4:	b.cs	40f1ec <dispatch_message_real+0x4100>  // b.hs, b.nlast
  40f1c8:	ldr	x8, [x19, #1056]
  40f1cc:	mov	x9, #0x8                   	// #8
  40f1d0:	mul	x8, x9, x8
  40f1d4:	add	x9, x19, #0x440
  40f1d8:	add	x8, x9, x8
  40f1dc:	ldr	x8, [x8]
  40f1e0:	cmp	x8, #0x0
  40f1e4:	cset	w10, ne  // ne = any
  40f1e8:	str	w10, [x19, #136]
  40f1ec:	ldr	w8, [x19, #136]
  40f1f0:	tbnz	w8, #0, 40f1f8 <dispatch_message_real+0x410c>
  40f1f4:	b	40f22c <dispatch_message_real+0x4140>
  40f1f8:	ldr	x0, [x19, #1072]
  40f1fc:	ldr	x8, [x19, #1056]
  40f200:	mov	x9, #0x8                   	// #8
  40f204:	mul	x8, x9, x8
  40f208:	add	x9, x19, #0x440
  40f20c:	add	x8, x9, x8
  40f210:	ldr	x1, [x8]
  40f214:	bl	405ad8 <stpcpy@plt>
  40f218:	str	x0, [x19, #1072]
  40f21c:	ldr	x8, [x19, #1056]
  40f220:	add	x8, x8, #0x1
  40f224:	str	x8, [x19, #1056]
  40f228:	b	40f1b4 <dispatch_message_real+0x40c8>
  40f22c:	ldr	x8, [x19, #1072]
  40f230:	mov	w9, #0x0                   	// #0
  40f234:	strb	w9, [x8]
  40f238:	ldr	x8, [x19, #1080]
  40f23c:	str	x8, [x19, #1032]
  40f240:	ldr	x8, [x19, #1032]
  40f244:	str	x8, [x19, #1104]
  40f248:	ldur	x8, [x29, #-16]
  40f24c:	ldur	x10, [x29, #-24]
  40f250:	add	x11, x10, #0x1
  40f254:	stur	x11, [x29, #-24]
  40f258:	ldr	x11, [x19, #1104]
  40f25c:	str	x11, [x19, #1016]
  40f260:	ldr	x0, [x19, #1104]
  40f264:	str	x8, [x19, #128]
  40f268:	str	x10, [x19, #120]
  40f26c:	bl	405738 <strlen@plt>
  40f270:	str	x0, [x19, #1024]
  40f274:	add	x8, x19, #0x2f9
  40f278:	ldur	q0, [x8, #255]
  40f27c:	ldr	x8, [x19, #128]
  40f280:	ldr	x10, [x19, #120]
  40f284:	str	q0, [x8, x10, lsl #4]
  40f288:	ldur	x8, [x29, #-144]
  40f28c:	ldr	x0, [x8, #128]
  40f290:	ldr	x1, [x8, #136]
  40f294:	bl	416040 <sd_id128_is_null>
  40f298:	cbnz	w0, 40f3e4 <dispatch_message_real+0x42f8>
  40f29c:	mov	x8, #0x3f                  	// #63
  40f2a0:	str	x8, [x19, #1000]
  40f2a4:	ldr	x1, [x19, #1000]
  40f2a8:	mov	x0, #0x1                   	// #1
  40f2ac:	bl	40b084 <size_multiply_overflow>
  40f2b0:	mov	w8, #0x1                   	// #1
  40f2b4:	eor	w9, w0, #0x1
  40f2b8:	eor	w9, w9, w8
  40f2bc:	eor	w9, w9, w8
  40f2c0:	eor	w8, w9, w8
  40f2c4:	and	w8, w8, #0x1
  40f2c8:	mov	w1, w8
  40f2cc:	sxtw	x10, w1
  40f2d0:	cbz	x10, 40f2f0 <dispatch_message_real+0x4204>
  40f2d4:	mov	w8, wzr
  40f2d8:	mov	w0, w8
  40f2dc:	ldr	x1, [x19, #872]
  40f2e0:	ldr	x2, [x19, #888]
  40f2e4:	mov	w3, #0x3d8                 	// #984
  40f2e8:	ldr	x4, [x19, #880]
  40f2ec:	bl	405718 <log_assert_failed_realm@plt>
  40f2f0:	ldr	x8, [x19, #1000]
  40f2f4:	mov	x9, #0x1                   	// #1
  40f2f8:	mul	x8, x9, x8
  40f2fc:	cmp	x8, #0x400, lsl #12
  40f300:	cset	w10, ls  // ls = plast
  40f304:	mov	w11, #0x1                   	// #1
  40f308:	eor	w10, w10, #0x1
  40f30c:	eor	w10, w10, w11
  40f310:	eor	w10, w10, w11
  40f314:	and	w10, w10, #0x1
  40f318:	mov	w0, w10
  40f31c:	sxtw	x8, w0
  40f320:	cbz	x8, 40f340 <dispatch_message_real+0x4254>
  40f324:	mov	w8, wzr
  40f328:	mov	w0, w8
  40f32c:	ldr	x1, [x19, #896]
  40f330:	ldr	x2, [x19, #888]
  40f334:	mov	w3, #0x3d8                 	// #984
  40f338:	ldr	x4, [x19, #880]
  40f33c:	bl	405718 <log_assert_failed_realm@plt>
  40f340:	ldr	x8, [x19, #1000]
  40f344:	mov	x9, #0x1                   	// #1
  40f348:	mul	x8, x9, x8
  40f34c:	mul	x8, x8, x9
  40f350:	add	x8, x8, #0xf
  40f354:	and	x8, x8, #0xfffffffffffffff0
  40f358:	mov	x9, sp
  40f35c:	subs	x8, x9, x8
  40f360:	mov	sp, x8
  40f364:	str	x8, [x19, #992]
  40f368:	ldr	x8, [x19, #992]
  40f36c:	str	x8, [x19, #1008]
  40f370:	ldur	x8, [x29, #-144]
  40f374:	ldr	x0, [x19, #1008]
  40f378:	adrp	x1, 42b000 <_fini+0x13a8>
  40f37c:	add	x1, x1, #0xb33
  40f380:	str	x8, [x19, #112]
  40f384:	bl	405ad8 <stpcpy@plt>
  40f388:	ldr	x8, [x19, #112]
  40f38c:	ldr	x9, [x8, #128]
  40f390:	ldr	x1, [x8, #136]
  40f394:	str	x0, [x19, #104]
  40f398:	mov	x0, x9
  40f39c:	ldr	x2, [x19, #104]
  40f3a0:	bl	405b08 <sd_id128_to_string@plt>
  40f3a4:	ldur	x8, [x29, #-16]
  40f3a8:	ldur	x9, [x29, #-24]
  40f3ac:	add	x10, x9, #0x1
  40f3b0:	stur	x10, [x29, #-24]
  40f3b4:	ldr	x10, [x19, #1008]
  40f3b8:	str	x10, [x19, #976]
  40f3bc:	ldr	x10, [x19, #1008]
  40f3c0:	mov	x0, x10
  40f3c4:	str	x8, [x19, #96]
  40f3c8:	str	x9, [x19, #88]
  40f3cc:	bl	405738 <strlen@plt>
  40f3d0:	str	x0, [x19, #984]
  40f3d4:	ldr	q0, [x19, #976]
  40f3d8:	ldr	x8, [x19, #96]
  40f3dc:	ldr	x9, [x19, #88]
  40f3e0:	str	q0, [x8, x9, lsl #4]
  40f3e4:	ldur	x8, [x29, #-24]
  40f3e8:	ldur	x9, [x29, #-32]
  40f3ec:	cmp	x8, x9
  40f3f0:	cset	w10, ls  // ls = plast
  40f3f4:	mov	w11, #0x1                   	// #1
  40f3f8:	eor	w10, w10, #0x1
  40f3fc:	eor	w10, w10, w11
  40f400:	eor	w10, w10, w11
  40f404:	and	w10, w10, #0x1
  40f408:	mov	w0, w10
  40f40c:	sxtw	x8, w0
  40f410:	cbz	x8, 40f430 <dispatch_message_real+0x4344>
  40f414:	mov	w8, wzr
  40f418:	mov	w0, w8
  40f41c:	ldr	x1, [x19, #864]
  40f420:	ldr	x2, [x19, #888]
  40f424:	mov	w3, #0x3db                 	// #987
  40f428:	ldr	x4, [x19, #880]
  40f42c:	bl	405718 <log_assert_failed_realm@plt>
  40f430:	ldur	x8, [x29, #-48]
  40f434:	cbz	x8, 40f49c <dispatch_message_real+0x43b0>
  40f438:	ldur	x0, [x29, #-48]
  40f43c:	bl	405b18 <timeval_load@plt>
  40f440:	sub	x8, x29, #0x6a
  40f444:	str	x0, [x19, #80]
  40f448:	mov	x0, x8
  40f44c:	adrp	x1, 42b000 <_fini+0x13a8>
  40f450:	add	x1, x1, #0xb52
  40f454:	ldr	x2, [x19, #80]
  40f458:	str	x8, [x19, #72]
  40f45c:	bl	405ab8 <sprintf@plt>
  40f460:	ldur	x8, [x29, #-16]
  40f464:	ldur	x9, [x29, #-24]
  40f468:	add	x10, x9, #0x1
  40f46c:	stur	x10, [x29, #-24]
  40f470:	ldr	x10, [x19, #72]
  40f474:	str	x10, [x19, #960]
  40f478:	mov	x0, x10
  40f47c:	str	x8, [x19, #64]
  40f480:	str	x9, [x19, #56]
  40f484:	bl	405738 <strlen@plt>
  40f488:	str	x0, [x19, #968]
  40f48c:	ldr	q0, [x19, #960]
  40f490:	ldr	x8, [x19, #64]
  40f494:	ldr	x9, [x19, #56]
  40f498:	str	q0, [x8, x9, lsl #4]
  40f49c:	ldur	x8, [x29, #-8]
  40f4a0:	add	x0, x8, #0x27e
  40f4a4:	bl	4155f8 <isempty>
  40f4a8:	tbnz	w0, #0, 40f4f0 <dispatch_message_real+0x4404>
  40f4ac:	ldur	x8, [x29, #-16]
  40f4b0:	ldur	x9, [x29, #-24]
  40f4b4:	add	x10, x9, #0x1
  40f4b8:	stur	x10, [x29, #-24]
  40f4bc:	ldur	x10, [x29, #-8]
  40f4c0:	add	x10, x10, #0x27e
  40f4c4:	str	x10, [x19, #944]
  40f4c8:	ldur	x10, [x29, #-8]
  40f4cc:	add	x0, x10, #0x27e
  40f4d0:	str	x8, [x19, #48]
  40f4d4:	str	x9, [x19, #40]
  40f4d8:	bl	405738 <strlen@plt>
  40f4dc:	str	x0, [x19, #952]
  40f4e0:	ldr	q0, [x19, #944]
  40f4e4:	ldr	x8, [x19, #48]
  40f4e8:	ldr	x9, [x19, #40]
  40f4ec:	str	q0, [x8, x9, lsl #4]
  40f4f0:	ldur	x8, [x29, #-8]
  40f4f4:	add	x0, x8, #0x251
  40f4f8:	bl	4155f8 <isempty>
  40f4fc:	tbnz	w0, #0, 40f544 <dispatch_message_real+0x4458>
  40f500:	ldur	x8, [x29, #-16]
  40f504:	ldur	x9, [x29, #-24]
  40f508:	add	x10, x9, #0x1
  40f50c:	stur	x10, [x29, #-24]
  40f510:	ldur	x10, [x29, #-8]
  40f514:	add	x10, x10, #0x251
  40f518:	str	x10, [x19, #928]
  40f51c:	ldur	x10, [x29, #-8]
  40f520:	add	x0, x10, #0x251
  40f524:	str	x8, [x19, #32]
  40f528:	str	x9, [x19, #24]
  40f52c:	bl	405738 <strlen@plt>
  40f530:	str	x0, [x19, #936]
  40f534:	ldr	q0, [x19, #928]
  40f538:	ldr	x8, [x19, #32]
  40f53c:	ldr	x9, [x19, #24]
  40f540:	str	q0, [x8, x9, lsl #4]
  40f544:	ldur	x8, [x29, #-8]
  40f548:	ldr	x0, [x8, #680]
  40f54c:	bl	4155f8 <isempty>
  40f550:	tbnz	w0, #0, 40f598 <dispatch_message_real+0x44ac>
  40f554:	ldur	x8, [x29, #-16]
  40f558:	ldur	x9, [x29, #-24]
  40f55c:	add	x10, x9, #0x1
  40f560:	stur	x10, [x29, #-24]
  40f564:	ldur	x10, [x29, #-8]
  40f568:	ldr	x10, [x10, #680]
  40f56c:	str	x10, [x19, #912]
  40f570:	ldur	x10, [x29, #-8]
  40f574:	ldr	x0, [x10, #680]
  40f578:	str	x8, [x19, #16]
  40f57c:	str	x9, [x19, #8]
  40f580:	bl	405738 <strlen@plt>
  40f584:	str	x0, [x19, #920]
  40f588:	ldr	q0, [x19, #912]
  40f58c:	ldr	x8, [x19, #16]
  40f590:	ldr	x9, [x19, #8]
  40f594:	str	q0, [x8, x9, lsl #4]
  40f598:	ldur	x8, [x29, #-24]
  40f59c:	ldur	x9, [x29, #-32]
  40f5a0:	cmp	x8, x9
  40f5a4:	cset	w10, ls  // ls = plast
  40f5a8:	mov	w11, #0x1                   	// #1
  40f5ac:	eor	w10, w10, #0x1
  40f5b0:	eor	w10, w10, w11
  40f5b4:	eor	w10, w10, w11
  40f5b8:	and	w10, w10, #0x1
  40f5bc:	mov	w0, w10
  40f5c0:	sxtw	x8, w0
  40f5c4:	cbz	x8, 40f5e4 <dispatch_message_real+0x44f8>
  40f5c8:	mov	w8, wzr
  40f5cc:	mov	w0, w8
  40f5d0:	ldr	x1, [x19, #864]
  40f5d4:	ldr	x2, [x19, #888]
  40f5d8:	mov	w3, #0x3ee                 	// #1006
  40f5dc:	ldr	x4, [x19, #880]
  40f5e0:	bl	405718 <log_assert_failed_realm@plt>
  40f5e4:	ldur	x8, [x29, #-8]
  40f5e8:	ldr	w9, [x8, #560]
  40f5ec:	cbnz	w9, 40f61c <dispatch_message_real+0x4530>
  40f5f0:	ldur	x8, [x29, #-40]
  40f5f4:	cbz	x8, 40f61c <dispatch_message_real+0x4530>
  40f5f8:	ldur	x8, [x29, #-40]
  40f5fc:	ldr	w0, [x8, #24]
  40f600:	bl	405ac8 <uid_is_valid@plt>
  40f604:	tbnz	w0, #0, 40f60c <dispatch_message_real+0x4520>
  40f608:	b	40f61c <dispatch_message_real+0x4530>
  40f60c:	ldur	x8, [x29, #-40]
  40f610:	ldr	w9, [x8, #24]
  40f614:	stur	w9, [x29, #-132]
  40f618:	b	40f670 <dispatch_message_real+0x4584>
  40f61c:	ldur	x8, [x29, #-8]
  40f620:	ldr	w9, [x8, #560]
  40f624:	cmp	w9, #0x1
  40f628:	b.ne	40f66c <dispatch_message_real+0x4580>  // b.any
  40f62c:	ldur	x8, [x29, #-40]
  40f630:	cbz	x8, 40f66c <dispatch_message_real+0x4580>
  40f634:	ldur	x8, [x29, #-40]
  40f638:	ldr	w9, [x8, #24]
  40f63c:	cmp	w9, #0x0
  40f640:	cset	w9, ls  // ls = plast
  40f644:	tbnz	w9, #0, 40f66c <dispatch_message_real+0x4580>
  40f648:	ldur	x8, [x29, #-40]
  40f64c:	ldr	w0, [x8, #88]
  40f650:	bl	405ac8 <uid_is_valid@plt>
  40f654:	tbnz	w0, #0, 40f65c <dispatch_message_real+0x4570>
  40f658:	b	40f66c <dispatch_message_real+0x4580>
  40f65c:	ldur	x8, [x29, #-40]
  40f660:	ldr	w9, [x8, #88]
  40f664:	stur	w9, [x29, #-132]
  40f668:	b	40f670 <dispatch_message_real+0x4584>
  40f66c:	stur	wzr, [x29, #-132]
  40f670:	ldur	x0, [x29, #-8]
  40f674:	ldur	w1, [x29, #-132]
  40f678:	ldur	x2, [x29, #-16]
  40f67c:	ldur	x3, [x29, #-24]
  40f680:	ldur	w4, [x29, #-52]
  40f684:	bl	41607c <write_to_journal>
  40f688:	sub	x0, x29, #0x80
  40f68c:	bl	40a1d8 <freep>
  40f690:	sub	x0, x29, #0x78
  40f694:	bl	40a1d8 <freep>
  40f698:	mov	sp, x29
  40f69c:	ldp	x28, x19, [sp, #16]
  40f6a0:	ldp	x29, x30, [sp], #32
  40f6a4:	ret

000000000040f6a8 <strerror_safe>:
  40f6a8:	sub	sp, sp, #0x20
  40f6ac:	stp	x29, x30, [sp, #16]
  40f6b0:	add	x29, sp, #0x10
  40f6b4:	stur	w0, [x29, #-4]
  40f6b8:	ldur	w0, [x29, #-4]
  40f6bc:	bl	405658 <abs@plt>
  40f6c0:	bl	405b28 <strerror@plt>
  40f6c4:	ldp	x29, x30, [sp, #16]
  40f6c8:	add	sp, sp, #0x20
  40f6cc:	ret

000000000040f6d0 <server_dispatch_message>:
  40f6d0:	sub	sp, sp, #0x70
  40f6d4:	stp	x29, x30, [sp, #96]
  40f6d8:	add	x29, sp, #0x60
  40f6dc:	adrp	x8, 42a000 <_fini+0x3a8>
  40f6e0:	add	x8, x8, #0x3c8
  40f6e4:	add	x8, x8, #0x3
  40f6e8:	stur	x0, [x29, #-8]
  40f6ec:	stur	x1, [x29, #-16]
  40f6f0:	stur	x2, [x29, #-24]
  40f6f4:	stur	x3, [x29, #-32]
  40f6f8:	stur	x4, [x29, #-40]
  40f6fc:	str	x5, [sp, #48]
  40f700:	str	w6, [sp, #44]
  40f704:	str	w7, [sp, #40]
  40f708:	str	xzr, [sp, #32]
  40f70c:	str	x8, [sp, #16]
  40f710:	ldur	x8, [x29, #-8]
  40f714:	cmp	x8, #0x0
  40f718:	cset	w9, ne  // ne = any
  40f71c:	mov	w10, #0x1                   	// #1
  40f720:	eor	w9, w9, #0x1
  40f724:	eor	w9, w9, w10
  40f728:	eor	w9, w9, w10
  40f72c:	and	w9, w9, #0x1
  40f730:	mov	w0, w9
  40f734:	sxtw	x8, w0
  40f738:	cbz	x8, 40f760 <server_dispatch_message+0x90>
  40f73c:	mov	w8, wzr
  40f740:	mov	w0, w8
  40f744:	adrp	x1, 429000 <journal_ratelimit_group_free+0x70>
  40f748:	add	x1, x1, #0xdc8
  40f74c:	ldr	x2, [sp, #16]
  40f750:	mov	w3, #0x43c                 	// #1084
  40f754:	adrp	x4, 42a000 <_fini+0x3a8>
  40f758:	add	x4, x4, #0x92c
  40f75c:	bl	405718 <log_assert_failed_realm@plt>
  40f760:	ldur	x8, [x29, #-16]
  40f764:	mov	w9, #0x1                   	// #1
  40f768:	str	w9, [sp, #12]
  40f76c:	cbnz	x8, 40f780 <server_dispatch_message+0xb0>
  40f770:	ldur	x8, [x29, #-24]
  40f774:	cmp	x8, #0x0
  40f778:	cset	w9, eq  // eq = none
  40f77c:	str	w9, [sp, #12]
  40f780:	ldr	w8, [sp, #12]
  40f784:	mov	w9, #0x1                   	// #1
  40f788:	eor	w8, w8, #0x1
  40f78c:	eor	w8, w8, w9
  40f790:	eor	w8, w8, w9
  40f794:	and	w8, w8, #0x1
  40f798:	mov	w0, w8
  40f79c:	sxtw	x10, w0
  40f7a0:	cbz	x10, 40f7c8 <server_dispatch_message+0xf8>
  40f7a4:	mov	w8, wzr
  40f7a8:	mov	w0, w8
  40f7ac:	adrp	x1, 42a000 <_fini+0x3a8>
  40f7b0:	add	x1, x1, #0x9a8
  40f7b4:	ldr	x2, [sp, #16]
  40f7b8:	mov	w3, #0x43d                 	// #1085
  40f7bc:	adrp	x4, 42a000 <_fini+0x3a8>
  40f7c0:	add	x4, x4, #0x92c
  40f7c4:	bl	405718 <log_assert_failed_realm@plt>
  40f7c8:	ldur	x8, [x29, #-24]
  40f7cc:	cbnz	x8, 40f7d4 <server_dispatch_message+0x104>
  40f7d0:	b	40f8ec <server_dispatch_message+0x21c>
  40f7d4:	ldr	w8, [sp, #44]
  40f7d8:	and	w8, w8, #0x7
  40f7dc:	ldur	x9, [x29, #-8]
  40f7e0:	ldr	w10, [x9, #536]
  40f7e4:	cmp	w8, w10
  40f7e8:	b.le	40f7f0 <server_dispatch_message+0x120>
  40f7ec:	b	40f8ec <server_dispatch_message+0x21c>
  40f7f0:	ldur	x8, [x29, #-8]
  40f7f4:	ldr	w9, [x8, #556]
  40f7f8:	cmp	w9, #0x3
  40f7fc:	b.ne	40f804 <server_dispatch_message+0x134>  // b.any
  40f800:	b	40f8ec <server_dispatch_message+0x21c>
  40f804:	ldur	x8, [x29, #-40]
  40f808:	cbz	x8, 40f8c8 <server_dispatch_message+0x1f8>
  40f80c:	ldur	x8, [x29, #-40]
  40f810:	ldr	x8, [x8, #96]
  40f814:	cbz	x8, 40f8c8 <server_dispatch_message+0x1f8>
  40f818:	ldur	x0, [x29, #-8]
  40f81c:	add	x1, sp, #0x20
  40f820:	mov	x8, xzr
  40f824:	mov	x2, x8
  40f828:	bl	40f8f8 <determine_space>
  40f82c:	ldur	x8, [x29, #-8]
  40f830:	ldr	x8, [x8, #200]
  40f834:	ldur	x9, [x29, #-40]
  40f838:	ldr	x1, [x9, #96]
  40f83c:	ldur	x9, [x29, #-40]
  40f840:	ldr	x2, [x9, #200]
  40f844:	ldur	x9, [x29, #-40]
  40f848:	ldr	w3, [x9, #208]
  40f84c:	ldr	w10, [sp, #44]
  40f850:	and	w4, w10, #0x7
  40f854:	ldr	x5, [sp, #32]
  40f858:	mov	x0, x8
  40f85c:	bl	429328 <journal_ratelimit_test>
  40f860:	str	w0, [sp, #28]
  40f864:	ldr	w10, [sp, #28]
  40f868:	cbnz	w10, 40f870 <server_dispatch_message+0x1a0>
  40f86c:	b	40f8ec <server_dispatch_message+0x21c>
  40f870:	ldr	w8, [sp, #28]
  40f874:	cmp	w8, #0x1
  40f878:	b.le	40f8c8 <server_dispatch_message+0x1f8>
  40f87c:	ldur	x0, [x29, #-8]
  40f880:	ldur	x8, [x29, #-40]
  40f884:	ldr	w1, [x8, #20]
  40f888:	ldr	w9, [sp, #28]
  40f88c:	subs	w4, w9, #0x1
  40f890:	ldur	x8, [x29, #-40]
  40f894:	ldr	x5, [x8, #96]
  40f898:	ldr	w9, [sp, #28]
  40f89c:	subs	w7, w9, #0x1
  40f8a0:	adrp	x2, 42a000 <_fini+0x3a8>
  40f8a4:	add	x2, x2, #0x9b8
  40f8a8:	adrp	x3, 42a000 <_fini+0x3a8>
  40f8ac:	add	x3, x3, #0x9e4
  40f8b0:	adrp	x6, 42a000 <_fini+0x3a8>
  40f8b4:	add	x6, x6, #0xa0b
  40f8b8:	mov	x8, sp
  40f8bc:	mov	x10, xzr
  40f8c0:	str	x10, [x8]
  40f8c4:	bl	409360 <server_driver_message>
  40f8c8:	ldur	x0, [x29, #-8]
  40f8cc:	ldur	x1, [x29, #-16]
  40f8d0:	ldur	x2, [x29, #-24]
  40f8d4:	ldur	x3, [x29, #-32]
  40f8d8:	ldur	x4, [x29, #-40]
  40f8dc:	ldr	x5, [sp, #48]
  40f8e0:	ldr	w6, [sp, #44]
  40f8e4:	ldr	w7, [sp, #40]
  40f8e8:	bl	40b0ec <dispatch_message_real>
  40f8ec:	ldp	x29, x30, [sp, #96]
  40f8f0:	add	sp, sp, #0x70
  40f8f4:	ret

000000000040f8f8 <determine_space>:
  40f8f8:	sub	sp, sp, #0x50
  40f8fc:	stp	x29, x30, [sp, #64]
  40f900:	add	x29, sp, #0x40
  40f904:	adrp	x8, 42a000 <_fini+0x3a8>
  40f908:	add	x8, x8, #0x3c8
  40f90c:	add	x8, x8, #0x3
  40f910:	stur	x0, [x29, #-8]
  40f914:	stur	x1, [x29, #-16]
  40f918:	stur	x2, [x29, #-24]
  40f91c:	str	x8, [sp, #16]
  40f920:	ldur	x8, [x29, #-8]
  40f924:	cmp	x8, #0x0
  40f928:	cset	w9, ne  // ne = any
  40f92c:	mov	w10, #0x1                   	// #1
  40f930:	eor	w9, w9, #0x1
  40f934:	eor	w9, w9, w10
  40f938:	eor	w9, w9, w10
  40f93c:	and	w9, w9, #0x1
  40f940:	mov	w0, w9
  40f944:	sxtw	x8, w0
  40f948:	cbz	x8, 40f970 <determine_space+0x78>
  40f94c:	mov	w8, wzr
  40f950:	mov	w0, w8
  40f954:	adrp	x1, 429000 <journal_ratelimit_group_free+0x70>
  40f958:	add	x1, x1, #0xdc8
  40f95c:	ldr	x2, [sp, #16]
  40f960:	mov	w3, #0xaa                  	// #170
  40f964:	adrp	x4, 42b000 <_fini+0x13a8>
  40f968:	add	x4, x4, #0xe5f
  40f96c:	bl	405718 <log_assert_failed_realm@plt>
  40f970:	ldur	x8, [x29, #-8]
  40f974:	ldr	x8, [x8, #160]
  40f978:	cbz	x8, 40f98c <determine_space+0x94>
  40f97c:	ldur	x8, [x29, #-8]
  40f980:	add	x8, x8, #0x150
  40f984:	str	x8, [sp, #8]
  40f988:	b	40f998 <determine_space+0xa0>
  40f98c:	ldur	x8, [x29, #-8]
  40f990:	add	x8, x8, #0xe8
  40f994:	str	x8, [sp, #8]
  40f998:	ldr	x8, [sp, #8]
  40f99c:	str	x8, [sp, #32]
  40f9a0:	ldur	x0, [x29, #-8]
  40f9a4:	ldr	x1, [sp, #32]
  40f9a8:	bl	4090b0 <cache_space_refresh>
  40f9ac:	str	w0, [sp, #28]
  40f9b0:	ldr	w9, [sp, #28]
  40f9b4:	cmp	w9, #0x0
  40f9b8:	cset	w9, lt  // lt = tstop
  40f9bc:	tbnz	w9, #0, 40f9f0 <determine_space+0xf8>
  40f9c0:	ldur	x8, [x29, #-16]
  40f9c4:	cbz	x8, 40f9d8 <determine_space+0xe0>
  40f9c8:	ldr	x8, [sp, #32]
  40f9cc:	ldr	x8, [x8, #72]
  40f9d0:	ldur	x9, [x29, #-16]
  40f9d4:	str	x8, [x9]
  40f9d8:	ldur	x8, [x29, #-24]
  40f9dc:	cbz	x8, 40f9f0 <determine_space+0xf8>
  40f9e0:	ldr	x8, [sp, #32]
  40f9e4:	ldr	x8, [x8, #80]
  40f9e8:	ldur	x9, [x29, #-24]
  40f9ec:	str	x8, [x9]
  40f9f0:	ldr	w0, [sp, #28]
  40f9f4:	ldp	x29, x30, [sp, #64]
  40f9f8:	add	sp, sp, #0x50
  40f9fc:	ret

000000000040fa00 <server_flush_to_var>:
  40fa00:	sub	sp, sp, #0x180
  40fa04:	stp	x29, x30, [sp, #352]
  40fa08:	str	x28, [sp, #368]
  40fa0c:	add	x29, sp, #0x160
  40fa10:	mov	x8, xzr
  40fa14:	adrp	x9, 42a000 <_fini+0x3a8>
  40fa18:	add	x9, x9, #0x3c8
  40fa1c:	add	x9, x9, #0x3
  40fa20:	adrp	x10, 42a000 <_fini+0x3a8>
  40fa24:	add	x10, x10, #0xa41
  40fa28:	mov	w11, #0x1                   	// #1
  40fa2c:	stur	x0, [x29, #-16]
  40fa30:	and	w11, w1, w11
  40fa34:	sturb	w11, [x29, #-17]
  40fa38:	stur	x8, [x29, #-32]
  40fa3c:	stur	wzr, [x29, #-108]
  40fa40:	str	x9, [sp, #80]
  40fa44:	str	x10, [sp, #72]
  40fa48:	ldur	x8, [x29, #-16]
  40fa4c:	cmp	x8, #0x0
  40fa50:	cset	w9, ne  // ne = any
  40fa54:	mov	w10, #0x1                   	// #1
  40fa58:	eor	w9, w9, #0x1
  40fa5c:	eor	w9, w9, w10
  40fa60:	eor	w9, w9, w10
  40fa64:	and	w9, w9, #0x1
  40fa68:	mov	w0, w9
  40fa6c:	sxtw	x8, w0
  40fa70:	cbz	x8, 40fa98 <server_flush_to_var+0x98>
  40fa74:	mov	w8, wzr
  40fa78:	mov	w0, w8
  40fa7c:	adrp	x1, 429000 <journal_ratelimit_group_free+0x70>
  40fa80:	add	x1, x1, #0xdc8
  40fa84:	ldr	x2, [sp, #80]
  40fa88:	mov	w3, #0x464                 	// #1124
  40fa8c:	adrp	x4, 42a000 <_fini+0x3a8>
  40fa90:	add	x4, x4, #0xa18
  40fa94:	bl	405718 <log_assert_failed_realm@plt>
  40fa98:	mov	w8, #0x0                   	// #0
  40fa9c:	sturb	w8, [x29, #-117]
  40faa0:	ldur	x9, [x29, #-16]
  40faa4:	ldr	w8, [x9, #556]
  40faa8:	str	w8, [sp, #68]
  40faac:	cbz	w8, 40facc <server_flush_to_var+0xcc>
  40fab0:	b	40fab4 <server_flush_to_var+0xb4>
  40fab4:	ldr	w8, [sp, #68]
  40fab8:	cmp	w8, #0x2
  40fabc:	cset	w9, eq  // eq = none
  40fac0:	eor	w9, w9, #0x1
  40fac4:	tbnz	w9, #0, 40fad8 <server_flush_to_var+0xd8>
  40fac8:	b	40facc <server_flush_to_var+0xcc>
  40facc:	mov	w8, #0x1                   	// #1
  40fad0:	sturb	w8, [x29, #-117]
  40fad4:	b	40fad8 <server_flush_to_var+0xd8>
  40fad8:	ldurb	w8, [x29, #-117]
  40fadc:	and	w8, w8, #0x1
  40fae0:	sturb	w8, [x29, #-118]
  40fae4:	ldurb	w8, [x29, #-118]
  40fae8:	tbnz	w8, #0, 40faf4 <server_flush_to_var+0xf4>
  40faec:	stur	wzr, [x29, #-4]
  40faf0:	b	4101d4 <server_flush_to_var+0x7d4>
  40faf4:	ldur	x8, [x29, #-16]
  40faf8:	ldr	x8, [x8, #152]
  40fafc:	cbnz	x8, 40fb08 <server_flush_to_var+0x108>
  40fb00:	stur	wzr, [x29, #-4]
  40fb04:	b	4101d4 <server_flush_to_var+0x7d4>
  40fb08:	ldurb	w8, [x29, #-17]
  40fb0c:	tbnz	w8, #0, 40fb14 <server_flush_to_var+0x114>
  40fb10:	b	40fb24 <server_flush_to_var+0x124>
  40fb14:	bl	4101e8 <flushed_flag_is_set>
  40fb18:	tbnz	w0, #0, 40fb24 <server_flush_to_var+0x124>
  40fb1c:	stur	wzr, [x29, #-4]
  40fb20:	b	4101d4 <server_flush_to_var+0x7d4>
  40fb24:	ldur	x0, [x29, #-16]
  40fb28:	mov	w8, #0x1                   	// #1
  40fb2c:	and	w1, w8, #0x1
  40fb30:	mov	w8, wzr
  40fb34:	and	w2, w8, #0x1
  40fb38:	bl	410218 <system_journal_open>
  40fb3c:	ldur	x9, [x29, #-16]
  40fb40:	ldr	x9, [x9, #160]
  40fb44:	cbnz	x9, 40fb50 <server_flush_to_var+0x150>
  40fb48:	stur	wzr, [x29, #-4]
  40fb4c:	b	4101d4 <server_flush_to_var+0x7d4>
  40fb50:	mov	w8, #0x7                   	// #7
  40fb54:	stur	w8, [x29, #-124]
  40fb58:	stur	wzr, [x29, #-128]
  40fb5c:	stur	wzr, [x29, #-132]
  40fb60:	ldur	w0, [x29, #-132]
  40fb64:	bl	405638 <log_get_max_level_realm@plt>
  40fb68:	ldur	w8, [x29, #-124]
  40fb6c:	and	w8, w8, #0x7
  40fb70:	cmp	w0, w8
  40fb74:	b.lt	40fba8 <server_flush_to_var+0x1a8>  // b.tstop
  40fb78:	ldur	w8, [x29, #-132]
  40fb7c:	ldur	w9, [x29, #-124]
  40fb80:	orr	w0, w9, w8, lsl #10
  40fb84:	ldur	w1, [x29, #-128]
  40fb88:	ldr	x2, [sp, #80]
  40fb8c:	mov	w3, #0x474                 	// #1140
  40fb90:	ldr	x4, [sp, #72]
  40fb94:	adrp	x5, 42a000 <_fini+0x3a8>
  40fb98:	add	x5, x5, #0xa55
  40fb9c:	bl	405648 <log_internal_realm@plt>
  40fba0:	str	w0, [sp, #64]
  40fba4:	b	40fbbc <server_flush_to_var+0x1bc>
  40fba8:	ldur	w0, [x29, #-128]
  40fbac:	bl	405658 <abs@plt>
  40fbb0:	mov	w8, wzr
  40fbb4:	subs	w8, w8, w0, uxtb
  40fbb8:	str	w8, [sp, #64]
  40fbbc:	ldr	w8, [sp, #64]
  40fbc0:	stur	w8, [x29, #-136]
  40fbc4:	mov	w0, #0x1                   	// #1
  40fbc8:	bl	4056f8 <now@plt>
  40fbcc:	stur	x0, [x29, #-104]
  40fbd0:	sub	x0, x29, #0x20
  40fbd4:	mov	w1, #0x2                   	// #2
  40fbd8:	bl	405b38 <sd_journal_open@plt>
  40fbdc:	stur	w0, [x29, #-112]
  40fbe0:	ldur	w8, [x29, #-112]
  40fbe4:	cmp	w8, #0x0
  40fbe8:	cset	w8, ge  // ge = tcont
  40fbec:	tbnz	w8, #0, 40fc74 <server_flush_to_var+0x274>
  40fbf0:	mov	w8, #0x3                   	// #3
  40fbf4:	stur	w8, [x29, #-140]
  40fbf8:	ldur	w8, [x29, #-112]
  40fbfc:	stur	w8, [x29, #-144]
  40fc00:	stur	wzr, [x29, #-148]
  40fc04:	ldur	w0, [x29, #-148]
  40fc08:	bl	405638 <log_get_max_level_realm@plt>
  40fc0c:	ldur	w8, [x29, #-140]
  40fc10:	and	w8, w8, #0x7
  40fc14:	cmp	w0, w8
  40fc18:	b.lt	40fc4c <server_flush_to_var+0x24c>  // b.tstop
  40fc1c:	ldur	w8, [x29, #-148]
  40fc20:	ldur	w9, [x29, #-140]
  40fc24:	orr	w0, w9, w8, lsl #10
  40fc28:	ldur	w1, [x29, #-144]
  40fc2c:	ldr	x2, [sp, #80]
  40fc30:	mov	w3, #0x47a                 	// #1146
  40fc34:	ldr	x4, [sp, #72]
  40fc38:	adrp	x5, 42a000 <_fini+0x3a8>
  40fc3c:	add	x5, x5, #0xa69
  40fc40:	bl	405648 <log_internal_realm@plt>
  40fc44:	str	w0, [sp, #60]
  40fc48:	b	40fc60 <server_flush_to_var+0x260>
  40fc4c:	ldur	w0, [x29, #-144]
  40fc50:	bl	405658 <abs@plt>
  40fc54:	mov	w8, wzr
  40fc58:	subs	w8, w8, w0, uxtb
  40fc5c:	str	w8, [sp, #60]
  40fc60:	ldr	w8, [sp, #60]
  40fc64:	stur	w8, [x29, #-152]
  40fc68:	ldur	w8, [x29, #-152]
  40fc6c:	stur	w8, [x29, #-4]
  40fc70:	b	4101d4 <server_flush_to_var+0x7d4>
  40fc74:	ldur	x0, [x29, #-32]
  40fc78:	mov	x8, xzr
  40fc7c:	mov	x1, x8
  40fc80:	bl	405b48 <sd_journal_set_data_threshold@plt>
  40fc84:	ldur	x8, [x29, #-32]
  40fc88:	mov	x0, x8
  40fc8c:	bl	405b58 <sd_journal_seek_head@plt>
  40fc90:	cmp	w0, #0x0
  40fc94:	cset	w9, ge  // ge = tcont
  40fc98:	tbnz	w9, #0, 40fca0 <server_flush_to_var+0x2a0>
  40fc9c:	b	410074 <server_flush_to_var+0x674>
  40fca0:	ldur	x0, [x29, #-32]
  40fca4:	bl	405b68 <sd_journal_next@plt>
  40fca8:	cmp	w0, #0x0
  40fcac:	cset	w8, le
  40fcb0:	tbnz	w8, #0, 410074 <server_flush_to_var+0x674>
  40fcb4:	mov	x8, xzr
  40fcb8:	stur	x8, [x29, #-160]
  40fcbc:	ldur	x8, [x29, #-32]
  40fcc0:	ldr	x8, [x8, #120]
  40fcc4:	stur	x8, [x29, #-168]
  40fcc8:	ldur	x8, [x29, #-168]
  40fccc:	mov	w9, #0x0                   	// #0
  40fcd0:	str	w9, [sp, #56]
  40fcd4:	cbz	x8, 40fcec <server_flush_to_var+0x2ec>
  40fcd8:	ldur	x8, [x29, #-168]
  40fcdc:	ldr	x8, [x8, #216]
  40fce0:	cmp	x8, #0x0
  40fce4:	cset	w9, hi  // hi = pmore
  40fce8:	str	w9, [sp, #56]
  40fcec:	ldr	w8, [sp, #56]
  40fcf0:	mov	w9, #0x1                   	// #1
  40fcf4:	eor	w8, w8, #0x1
  40fcf8:	eor	w8, w8, w9
  40fcfc:	eor	w8, w8, w9
  40fd00:	and	w8, w8, #0x1
  40fd04:	mov	w0, w8
  40fd08:	sxtw	x10, w0
  40fd0c:	cbz	x10, 40fd34 <server_flush_to_var+0x334>
  40fd10:	mov	w8, wzr
  40fd14:	mov	w0, w8
  40fd18:	adrp	x1, 42a000 <_fini+0x3a8>
  40fd1c:	add	x1, x1, #0xa8c
  40fd20:	ldr	x2, [sp, #80]
  40fd24:	mov	w3, #0x483                 	// #1155
  40fd28:	adrp	x4, 42a000 <_fini+0x3a8>
  40fd2c:	add	x4, x4, #0xa18
  40fd30:	bl	405718 <log_assert_failed_realm@plt>
  40fd34:	ldur	w8, [x29, #-108]
  40fd38:	add	w8, w8, #0x1
  40fd3c:	stur	w8, [x29, #-108]
  40fd40:	ldur	x0, [x29, #-168]
  40fd44:	ldur	x9, [x29, #-168]
  40fd48:	ldr	x2, [x9, #216]
  40fd4c:	mov	w1, #0x3                   	// #3
  40fd50:	sub	x3, x29, #0xa0
  40fd54:	bl	405b78 <journal_file_move_to_object@plt>
  40fd58:	stur	w0, [x29, #-112]
  40fd5c:	ldur	w8, [x29, #-112]
  40fd60:	cmp	w8, #0x0
  40fd64:	cset	w8, ge  // ge = tcont
  40fd68:	tbnz	w8, #0, 40fde8 <server_flush_to_var+0x3e8>
  40fd6c:	mov	w8, #0x3                   	// #3
  40fd70:	stur	w8, [x29, #-172]
  40fd74:	ldur	w8, [x29, #-112]
  40fd78:	str	w8, [sp, #176]
  40fd7c:	str	wzr, [sp, #172]
  40fd80:	ldr	w0, [sp, #172]
  40fd84:	bl	405638 <log_get_max_level_realm@plt>
  40fd88:	ldur	w8, [x29, #-172]
  40fd8c:	and	w8, w8, #0x7
  40fd90:	cmp	w0, w8
  40fd94:	b.lt	40fdc8 <server_flush_to_var+0x3c8>  // b.tstop
  40fd98:	ldr	w8, [sp, #172]
  40fd9c:	ldur	w9, [x29, #-172]
  40fda0:	orr	w0, w9, w8, lsl #10
  40fda4:	ldr	w1, [sp, #176]
  40fda8:	ldr	x2, [sp, #80]
  40fdac:	mov	w3, #0x489                 	// #1161
  40fdb0:	ldr	x4, [sp, #72]
  40fdb4:	adrp	x5, 42a000 <_fini+0x3a8>
  40fdb8:	add	x5, x5, #0xaa7
  40fdbc:	bl	405648 <log_internal_realm@plt>
  40fdc0:	str	w0, [sp, #52]
  40fdc4:	b	40fddc <server_flush_to_var+0x3dc>
  40fdc8:	ldr	w0, [sp, #176]
  40fdcc:	bl	405658 <abs@plt>
  40fdd0:	mov	w8, wzr
  40fdd4:	subs	w8, w8, w0, uxtb
  40fdd8:	str	w8, [sp, #52]
  40fddc:	ldr	w8, [sp, #52]
  40fde0:	str	w8, [sp, #168]
  40fde4:	b	410078 <server_flush_to_var+0x678>
  40fde8:	ldur	x0, [x29, #-168]
  40fdec:	ldur	x8, [x29, #-16]
  40fdf0:	ldr	x1, [x8, #160]
  40fdf4:	ldur	x2, [x29, #-160]
  40fdf8:	ldur	x8, [x29, #-168]
  40fdfc:	ldr	x3, [x8, #216]
  40fe00:	bl	405b88 <journal_file_copy_entry@plt>
  40fe04:	stur	w0, [x29, #-112]
  40fe08:	ldur	w9, [x29, #-112]
  40fe0c:	cmp	w9, #0x0
  40fe10:	cset	w9, lt  // lt = tstop
  40fe14:	tbnz	w9, #0, 40fe1c <server_flush_to_var+0x41c>
  40fe18:	b	40fca0 <server_flush_to_var+0x2a0>
  40fe1c:	ldur	x8, [x29, #-16]
  40fe20:	ldr	x0, [x8, #160]
  40fe24:	ldur	w1, [x29, #-112]
  40fe28:	bl	410ba8 <shall_try_append_again>
  40fe2c:	tbnz	w0, #0, 40feac <server_flush_to_var+0x4ac>
  40fe30:	mov	w8, #0x3                   	// #3
  40fe34:	str	w8, [sp, #164]
  40fe38:	ldur	w8, [x29, #-112]
  40fe3c:	str	w8, [sp, #160]
  40fe40:	str	wzr, [sp, #156]
  40fe44:	ldr	w0, [sp, #156]
  40fe48:	bl	405638 <log_get_max_level_realm@plt>
  40fe4c:	ldr	w8, [sp, #164]
  40fe50:	and	w8, w8, #0x7
  40fe54:	cmp	w0, w8
  40fe58:	b.lt	40fe8c <server_flush_to_var+0x48c>  // b.tstop
  40fe5c:	ldr	w8, [sp, #156]
  40fe60:	ldr	w9, [sp, #164]
  40fe64:	orr	w0, w9, w8, lsl #10
  40fe68:	ldr	w1, [sp, #160]
  40fe6c:	ldr	x2, [sp, #80]
  40fe70:	mov	w3, #0x492                 	// #1170
  40fe74:	ldr	x4, [sp, #72]
  40fe78:	adrp	x5, 42a000 <_fini+0x3a8>
  40fe7c:	add	x5, x5, #0xabc
  40fe80:	bl	405648 <log_internal_realm@plt>
  40fe84:	str	w0, [sp, #48]
  40fe88:	b	40fea0 <server_flush_to_var+0x4a0>
  40fe8c:	ldr	w0, [sp, #160]
  40fe90:	bl	405658 <abs@plt>
  40fe94:	mov	w8, wzr
  40fe98:	subs	w8, w8, w0, uxtb
  40fe9c:	str	w8, [sp, #48]
  40fea0:	ldr	w8, [sp, #48]
  40fea4:	str	w8, [sp, #152]
  40fea8:	b	410078 <server_flush_to_var+0x678>
  40feac:	ldur	x0, [x29, #-16]
  40feb0:	bl	409818 <server_rotate>
  40feb4:	ldur	x0, [x29, #-16]
  40feb8:	mov	w8, wzr
  40febc:	and	w1, w8, #0x1
  40fec0:	bl	40ad14 <server_vacuum>
  40fec4:	ldur	x9, [x29, #-16]
  40fec8:	ldr	x9, [x9, #160]
  40fecc:	cbnz	x9, 40ff50 <server_flush_to_var+0x550>
  40fed0:	mov	w8, #0x5                   	// #5
  40fed4:	str	w8, [sp, #148]
  40fed8:	str	wzr, [sp, #144]
  40fedc:	str	wzr, [sp, #140]
  40fee0:	ldr	w0, [sp, #140]
  40fee4:	bl	405638 <log_get_max_level_realm@plt>
  40fee8:	ldr	w8, [sp, #148]
  40feec:	and	w8, w8, #0x7
  40fef0:	cmp	w0, w8
  40fef4:	b.lt	40ff28 <server_flush_to_var+0x528>  // b.tstop
  40fef8:	ldr	w8, [sp, #140]
  40fefc:	ldr	w9, [sp, #148]
  40ff00:	orr	w0, w9, w8, lsl #10
  40ff04:	ldr	w1, [sp, #144]
  40ff08:	ldr	x2, [sp, #80]
  40ff0c:	mov	w3, #0x49a                 	// #1178
  40ff10:	ldr	x4, [sp, #72]
  40ff14:	adrp	x5, 42a000 <_fini+0x3a8>
  40ff18:	add	x5, x5, #0xad2
  40ff1c:	bl	405648 <log_internal_realm@plt>
  40ff20:	str	w0, [sp, #44]
  40ff24:	b	40ff3c <server_flush_to_var+0x53c>
  40ff28:	ldr	w0, [sp, #144]
  40ff2c:	bl	405658 <abs@plt>
  40ff30:	mov	w8, wzr
  40ff34:	subs	w8, w8, w0, uxtb
  40ff38:	str	w8, [sp, #44]
  40ff3c:	ldr	w8, [sp, #44]
  40ff40:	str	w8, [sp, #136]
  40ff44:	mov	w8, #0xfffffffb            	// #-5
  40ff48:	stur	w8, [x29, #-112]
  40ff4c:	b	410078 <server_flush_to_var+0x678>
  40ff50:	mov	w8, #0x7                   	// #7
  40ff54:	str	w8, [sp, #132]
  40ff58:	str	wzr, [sp, #128]
  40ff5c:	str	wzr, [sp, #124]
  40ff60:	ldr	w0, [sp, #124]
  40ff64:	bl	405638 <log_get_max_level_realm@plt>
  40ff68:	ldr	w8, [sp, #132]
  40ff6c:	and	w8, w8, #0x7
  40ff70:	cmp	w0, w8
  40ff74:	b.lt	40ffa8 <server_flush_to_var+0x5a8>  // b.tstop
  40ff78:	ldr	w8, [sp, #124]
  40ff7c:	ldr	w9, [sp, #132]
  40ff80:	orr	w0, w9, w8, lsl #10
  40ff84:	ldr	w1, [sp, #128]
  40ff88:	ldr	x2, [sp, #80]
  40ff8c:	mov	w3, #0x49f                 	// #1183
  40ff90:	ldr	x4, [sp, #72]
  40ff94:	adrp	x5, 42a000 <_fini+0x3a8>
  40ff98:	add	x5, x5, #0xb23
  40ff9c:	bl	405648 <log_internal_realm@plt>
  40ffa0:	str	w0, [sp, #40]
  40ffa4:	b	40ffbc <server_flush_to_var+0x5bc>
  40ffa8:	ldr	w0, [sp, #128]
  40ffac:	bl	405658 <abs@plt>
  40ffb0:	mov	w8, wzr
  40ffb4:	subs	w8, w8, w0, uxtb
  40ffb8:	str	w8, [sp, #40]
  40ffbc:	ldr	w8, [sp, #40]
  40ffc0:	str	w8, [sp, #120]
  40ffc4:	ldur	x0, [x29, #-168]
  40ffc8:	ldur	x9, [x29, #-16]
  40ffcc:	ldr	x1, [x9, #160]
  40ffd0:	ldur	x2, [x29, #-160]
  40ffd4:	ldur	x9, [x29, #-168]
  40ffd8:	ldr	x3, [x9, #216]
  40ffdc:	bl	405b88 <journal_file_copy_entry@plt>
  40ffe0:	stur	w0, [x29, #-112]
  40ffe4:	ldur	w8, [x29, #-112]
  40ffe8:	cmp	w8, #0x0
  40ffec:	cset	w8, ge  // ge = tcont
  40fff0:	tbnz	w8, #0, 410070 <server_flush_to_var+0x670>
  40fff4:	mov	w8, #0x3                   	// #3
  40fff8:	str	w8, [sp, #116]
  40fffc:	ldur	w8, [x29, #-112]
  410000:	str	w8, [sp, #112]
  410004:	str	wzr, [sp, #108]
  410008:	ldr	w0, [sp, #108]
  41000c:	bl	405638 <log_get_max_level_realm@plt>
  410010:	ldr	w8, [sp, #116]
  410014:	and	w8, w8, #0x7
  410018:	cmp	w0, w8
  41001c:	b.lt	410050 <server_flush_to_var+0x650>  // b.tstop
  410020:	ldr	w8, [sp, #108]
  410024:	ldr	w9, [sp, #116]
  410028:	orr	w0, w9, w8, lsl #10
  41002c:	ldr	w1, [sp, #112]
  410030:	ldr	x2, [sp, #80]
  410034:	mov	w3, #0x4a2                 	// #1186
  410038:	ldr	x4, [sp, #72]
  41003c:	adrp	x5, 42a000 <_fini+0x3a8>
  410040:	add	x5, x5, #0xabc
  410044:	bl	405648 <log_internal_realm@plt>
  410048:	str	w0, [sp, #36]
  41004c:	b	410064 <server_flush_to_var+0x664>
  410050:	ldr	w0, [sp, #112]
  410054:	bl	405658 <abs@plt>
  410058:	mov	w8, wzr
  41005c:	subs	w8, w8, w0, uxtb
  410060:	str	w8, [sp, #36]
  410064:	ldr	w8, [sp, #36]
  410068:	str	w8, [sp, #104]
  41006c:	b	410078 <server_flush_to_var+0x678>
  410070:	b	40fca0 <server_flush_to_var+0x2a0>
  410074:	stur	wzr, [x29, #-112]
  410078:	ldur	x8, [x29, #-16]
  41007c:	ldr	x8, [x8, #160]
  410080:	cbz	x8, 410090 <server_flush_to_var+0x690>
  410084:	ldur	x8, [x29, #-16]
  410088:	ldr	x0, [x8, #160]
  41008c:	bl	405b98 <journal_file_post_change@plt>
  410090:	ldur	x8, [x29, #-16]
  410094:	ldr	x0, [x8, #152]
  410098:	bl	405a58 <journal_file_close@plt>
  41009c:	ldur	x8, [x29, #-16]
  4100a0:	str	x0, [x8, #152]
  4100a4:	ldur	w9, [x29, #-112]
  4100a8:	cmp	w9, #0x0
  4100ac:	cset	w9, lt  // lt = tstop
  4100b0:	tbnz	w9, #0, 4100c4 <server_flush_to_var+0x6c4>
  4100b4:	adrp	x0, 42a000 <_fini+0x3a8>
  4100b8:	add	x0, x0, #0xb33
  4100bc:	mov	w1, #0x2                   	// #2
  4100c0:	bl	405ba8 <rm_rf@plt>
  4100c4:	ldur	x0, [x29, #-32]
  4100c8:	bl	405bb8 <sd_journal_close@plt>
  4100cc:	ldur	x0, [x29, #-16]
  4100d0:	mov	w8, #0x1                   	// #1
  4100d4:	str	x0, [sp, #24]
  4100d8:	mov	w0, w8
  4100dc:	bl	4056f8 <now@plt>
  4100e0:	ldur	x9, [x29, #-104]
  4100e4:	subs	x2, x0, x9
  4100e8:	sub	x0, x29, #0x60
  4100ec:	mov	x1, #0x40                  	// #64
  4100f0:	mov	x9, xzr
  4100f4:	mov	x3, x9
  4100f8:	str	x9, [sp, #16]
  4100fc:	bl	405bc8 <format_timespan@plt>
  410100:	ldur	w5, [x29, #-108]
  410104:	ldr	x9, [sp, #24]
  410108:	str	x0, [sp, #8]
  41010c:	mov	x0, x9
  410110:	mov	w8, wzr
  410114:	mov	w1, w8
  410118:	ldr	x10, [sp, #16]
  41011c:	mov	x2, x10
  410120:	adrp	x3, 42a000 <_fini+0x3a8>
  410124:	add	x3, x3, #0xb44
  410128:	ldr	x4, [sp, #8]
  41012c:	mov	x6, x10
  410130:	bl	409360 <server_driver_message>
  410134:	adrp	x0, 42a000 <_fini+0x3a8>
  410138:	add	x0, x0, #0xb81
  41013c:	bl	405bd8 <touch@plt>
  410140:	stur	w0, [x29, #-116]
  410144:	ldur	w8, [x29, #-116]
  410148:	cmp	w8, #0x0
  41014c:	cset	w8, ge  // ge = tcont
  410150:	tbnz	w8, #0, 4101cc <server_flush_to_var+0x7cc>
  410154:	mov	w8, #0x4                   	// #4
  410158:	str	w8, [sp, #100]
  41015c:	ldur	w8, [x29, #-116]
  410160:	str	w8, [sp, #96]
  410164:	str	wzr, [sp, #92]
  410168:	ldr	w0, [sp, #92]
  41016c:	bl	405638 <log_get_max_level_realm@plt>
  410170:	ldr	w8, [sp, #100]
  410174:	and	w8, w8, #0x7
  410178:	cmp	w0, w8
  41017c:	b.lt	4101b0 <server_flush_to_var+0x7b0>  // b.tstop
  410180:	ldr	w8, [sp, #92]
  410184:	ldr	w9, [sp, #100]
  410188:	orr	w0, w9, w8, lsl #10
  41018c:	ldr	w1, [sp, #96]
  410190:	ldr	x2, [sp, #80]
  410194:	mov	w3, #0x4bc                 	// #1212
  410198:	ldr	x4, [sp, #72]
  41019c:	adrp	x5, 42a000 <_fini+0x3a8>
  4101a0:	add	x5, x5, #0xb9e
  4101a4:	bl	405648 <log_internal_realm@plt>
  4101a8:	str	w0, [sp, #4]
  4101ac:	b	4101c4 <server_flush_to_var+0x7c4>
  4101b0:	ldr	w0, [sp, #96]
  4101b4:	bl	405658 <abs@plt>
  4101b8:	mov	w8, wzr
  4101bc:	subs	w8, w8, w0, uxtb
  4101c0:	str	w8, [sp, #4]
  4101c4:	ldr	w8, [sp, #4]
  4101c8:	str	w8, [sp, #88]
  4101cc:	ldur	w8, [x29, #-112]
  4101d0:	stur	w8, [x29, #-4]
  4101d4:	ldur	w0, [x29, #-4]
  4101d8:	ldr	x28, [sp, #368]
  4101dc:	ldp	x29, x30, [sp, #352]
  4101e0:	add	sp, sp, #0x180
  4101e4:	ret

00000000004101e8 <flushed_flag_is_set>:
  4101e8:	stp	x29, x30, [sp, #-16]!
  4101ec:	mov	x29, sp
  4101f0:	adrp	x0, 42a000 <_fini+0x3a8>
  4101f4:	add	x0, x0, #0xb81
  4101f8:	mov	w8, wzr
  4101fc:	mov	w1, w8
  410200:	bl	405be8 <access@plt>
  410204:	cmp	w0, #0x0
  410208:	cset	w8, ge  // ge = tcont
  41020c:	and	w0, w8, #0x1
  410210:	ldp	x29, x30, [sp], #16
  410214:	ret

0000000000410218 <system_journal_open>:
  410218:	stp	x29, x30, [sp, #-32]!
  41021c:	str	x28, [sp, #16]
  410220:	mov	x29, sp
  410224:	sub	sp, sp, #0x130
  410228:	adrp	x8, 42a000 <_fini+0x3a8>
  41022c:	add	x8, x8, #0x3c8
  410230:	add	x8, x8, #0x3
  410234:	adrp	x9, 42b000 <_fini+0x13a8>
  410238:	add	x9, x9, #0xee7
  41023c:	adrp	x10, 42b000 <_fini+0x13a8>
  410240:	add	x10, x10, #0xeb7
  410244:	stur	x0, [x29, #-16]
  410248:	mov	w11, #0x1                   	// #1
  41024c:	and	w11, w1, w11
  410250:	sturb	w11, [x29, #-17]
  410254:	and	w11, w2, #0x1
  410258:	sturb	w11, [x29, #-18]
  41025c:	stur	wzr, [x29, #-36]
  410260:	ldur	x12, [x29, #-16]
  410264:	ldr	x12, [x12, #160]
  410268:	stur	x8, [x29, #-248]
  41026c:	stur	x9, [x29, #-256]
  410270:	sub	x8, x29, #0x8
  410274:	stur	x10, [x8, #-256]
  410278:	cbnz	x12, 4106e8 <system_journal_open+0x4d0>
  41027c:	mov	w8, #0x0                   	// #0
  410280:	sturb	w8, [x29, #-37]
  410284:	ldur	x9, [x29, #-16]
  410288:	ldr	w8, [x9, #556]
  41028c:	sub	x9, x29, #0xc
  410290:	stur	w8, [x9, #-256]
  410294:	cbz	w8, 4102b8 <system_journal_open+0xa0>
  410298:	b	41029c <system_journal_open+0x84>
  41029c:	sub	x8, x29, #0xc
  4102a0:	ldur	w8, [x8, #-256]
  4102a4:	cmp	w8, #0x2
  4102a8:	cset	w9, eq  // eq = none
  4102ac:	eor	w9, w9, #0x1
  4102b0:	tbnz	w9, #0, 4102c4 <system_journal_open+0xac>
  4102b4:	b	4102b8 <system_journal_open+0xa0>
  4102b8:	mov	w8, #0x1                   	// #1
  4102bc:	sturb	w8, [x29, #-37]
  4102c0:	b	4102c4 <system_journal_open+0xac>
  4102c4:	ldurb	w8, [x29, #-37]
  4102c8:	and	w8, w8, #0x1
  4102cc:	sturb	w8, [x29, #-38]
  4102d0:	ldurb	w8, [x29, #-38]
  4102d4:	tbnz	w8, #0, 4102dc <system_journal_open+0xc4>
  4102d8:	b	4106e8 <system_journal_open+0x4d0>
  4102dc:	ldurb	w8, [x29, #-17]
  4102e0:	tbnz	w8, #0, 4102f0 <system_journal_open+0xd8>
  4102e4:	bl	4101e8 <flushed_flag_is_set>
  4102e8:	tbnz	w0, #0, 4102f0 <system_journal_open+0xd8>
  4102ec:	b	4106e8 <system_journal_open+0x4d0>
  4102f0:	ldurb	w8, [x29, #-18]
  4102f4:	tbnz	w8, #0, 4106e8 <system_journal_open+0x4d0>
  4102f8:	ldur	x8, [x29, #-16]
  4102fc:	ldr	w9, [x8, #556]
  410300:	cmp	w9, #0x2
  410304:	b.ne	410318 <system_journal_open+0x100>  // b.any
  410308:	adrp	x0, 42b000 <_fini+0x13a8>
  41030c:	add	x0, x0, #0xe95
  410310:	mov	w1, #0x1ed                 	// #493
  410314:	bl	405bf8 <mkdir_p@plt>
  410318:	ldur	x8, [x29, #-16]
  41031c:	ldr	x0, [x8, #344]
  410320:	mov	w1, #0x1ed                 	// #493
  410324:	bl	405c08 <mkdir@plt>
  410328:	ldur	x8, [x29, #-16]
  41032c:	ldr	x8, [x8, #344]
  410330:	sub	x9, x29, #0x38
  410334:	stur	x8, [x29, #-56]
  410338:	adrp	x8, 42b000 <_fini+0x13a8>
  41033c:	add	x8, x8, #0xea7
  410340:	str	x8, [x9, #8]
  410344:	stur	xzr, [x29, #-80]
  410348:	stur	xzr, [x29, #-88]
  41034c:	ldur	x8, [x29, #-88]
  410350:	mov	w9, #0x0                   	// #0
  410354:	cmp	x8, #0x2
  410358:	sub	x8, x29, #0x10
  41035c:	stur	w9, [x8, #-256]
  410360:	b.cs	41038c <system_journal_open+0x174>  // b.hs, b.nlast
  410364:	ldur	x8, [x29, #-88]
  410368:	mov	x9, #0x8                   	// #8
  41036c:	mul	x8, x9, x8
  410370:	sub	x9, x29, #0x38
  410374:	add	x8, x9, x8
  410378:	ldr	x8, [x8]
  41037c:	cmp	x8, #0x0
  410380:	cset	w10, ne  // ne = any
  410384:	sub	x8, x29, #0x10
  410388:	stur	w10, [x8, #-256]
  41038c:	sub	x8, x29, #0x10
  410390:	ldur	w8, [x8, #-256]
  410394:	tbnz	w8, #0, 41039c <system_journal_open+0x184>
  410398:	b	4103d4 <system_journal_open+0x1bc>
  41039c:	ldur	x8, [x29, #-88]
  4103a0:	mov	x9, #0x8                   	// #8
  4103a4:	mul	x8, x9, x8
  4103a8:	sub	x9, x29, #0x38
  4103ac:	add	x8, x9, x8
  4103b0:	ldr	x0, [x8]
  4103b4:	bl	405738 <strlen@plt>
  4103b8:	ldur	x8, [x29, #-80]
  4103bc:	add	x8, x8, x0
  4103c0:	stur	x8, [x29, #-80]
  4103c4:	ldur	x8, [x29, #-88]
  4103c8:	add	x8, x8, #0x1
  4103cc:	stur	x8, [x29, #-88]
  4103d0:	b	41034c <system_journal_open+0x134>
  4103d4:	ldur	x8, [x29, #-80]
  4103d8:	add	x8, x8, #0x1
  4103dc:	stur	x8, [x29, #-96]
  4103e0:	ldur	x1, [x29, #-96]
  4103e4:	mov	x0, #0x1                   	// #1
  4103e8:	bl	40b084 <size_multiply_overflow>
  4103ec:	mov	w8, #0x1                   	// #1
  4103f0:	eor	w9, w0, #0x1
  4103f4:	eor	w9, w9, w8
  4103f8:	eor	w9, w9, w8
  4103fc:	eor	w8, w9, w8
  410400:	and	w8, w8, #0x1
  410404:	mov	w1, w8
  410408:	sxtw	x10, w1
  41040c:	cbz	x10, 410434 <system_journal_open+0x21c>
  410410:	mov	w8, wzr
  410414:	mov	w0, w8
  410418:	adrp	x1, 42b000 <_fini+0x13a8>
  41041c:	add	x1, x1, #0x876
  410420:	ldur	x2, [x29, #-248]
  410424:	mov	w3, #0x133                 	// #307
  410428:	sub	x8, x29, #0x8
  41042c:	ldur	x4, [x8, #-256]
  410430:	bl	405718 <log_assert_failed_realm@plt>
  410434:	ldur	x8, [x29, #-96]
  410438:	mov	x9, #0x1                   	// #1
  41043c:	mul	x8, x9, x8
  410440:	cmp	x8, #0x400, lsl #12
  410444:	cset	w10, ls  // ls = plast
  410448:	mov	w11, #0x1                   	// #1
  41044c:	eor	w10, w10, #0x1
  410450:	eor	w10, w10, w11
  410454:	eor	w10, w10, w11
  410458:	and	w10, w10, #0x1
  41045c:	mov	w0, w10
  410460:	sxtw	x8, w0
  410464:	cbz	x8, 41048c <system_journal_open+0x274>
  410468:	mov	w8, wzr
  41046c:	mov	w0, w8
  410470:	adrp	x1, 42b000 <_fini+0x13a8>
  410474:	add	x1, x1, #0x8a1
  410478:	ldur	x2, [x29, #-248]
  41047c:	mov	w3, #0x133                 	// #307
  410480:	sub	x8, x29, #0x8
  410484:	ldur	x4, [x8, #-256]
  410488:	bl	405718 <log_assert_failed_realm@plt>
  41048c:	ldur	x8, [x29, #-96]
  410490:	mov	x9, #0x1                   	// #1
  410494:	mul	x8, x9, x8
  410498:	mul	x8, x8, x9
  41049c:	add	x8, x8, #0xf
  4104a0:	and	x8, x8, #0xfffffffffffffff0
  4104a4:	mov	x9, sp
  4104a8:	subs	x8, x9, x8
  4104ac:	mov	sp, x8
  4104b0:	stur	x8, [x29, #-104]
  4104b4:	ldur	x8, [x29, #-104]
  4104b8:	stur	x8, [x29, #-64]
  4104bc:	stur	x8, [x29, #-72]
  4104c0:	stur	xzr, [x29, #-88]
  4104c4:	ldur	x8, [x29, #-88]
  4104c8:	mov	w9, #0x0                   	// #0
  4104cc:	cmp	x8, #0x2
  4104d0:	sub	x8, x29, #0x14
  4104d4:	stur	w9, [x8, #-256]
  4104d8:	b.cs	410504 <system_journal_open+0x2ec>  // b.hs, b.nlast
  4104dc:	ldur	x8, [x29, #-88]
  4104e0:	mov	x9, #0x8                   	// #8
  4104e4:	mul	x8, x9, x8
  4104e8:	sub	x9, x29, #0x38
  4104ec:	add	x8, x9, x8
  4104f0:	ldr	x8, [x8]
  4104f4:	cmp	x8, #0x0
  4104f8:	cset	w10, ne  // ne = any
  4104fc:	sub	x8, x29, #0x14
  410500:	stur	w10, [x8, #-256]
  410504:	sub	x8, x29, #0x14
  410508:	ldur	w8, [x8, #-256]
  41050c:	tbnz	w8, #0, 410514 <system_journal_open+0x2fc>
  410510:	b	410548 <system_journal_open+0x330>
  410514:	ldur	x0, [x29, #-72]
  410518:	ldur	x8, [x29, #-88]
  41051c:	mov	x9, #0x8                   	// #8
  410520:	mul	x8, x9, x8
  410524:	sub	x9, x29, #0x38
  410528:	add	x8, x9, x8
  41052c:	ldr	x1, [x8]
  410530:	bl	405ad8 <stpcpy@plt>
  410534:	stur	x0, [x29, #-72]
  410538:	ldur	x8, [x29, #-88]
  41053c:	add	x8, x8, #0x1
  410540:	stur	x8, [x29, #-88]
  410544:	b	4104c4 <system_journal_open+0x2ac>
  410548:	ldur	x8, [x29, #-72]
  41054c:	mov	w9, #0x0                   	// #0
  410550:	strb	w9, [x8]
  410554:	ldur	x8, [x29, #-64]
  410558:	stur	x8, [x29, #-112]
  41055c:	ldur	x8, [x29, #-112]
  410560:	stur	x8, [x29, #-32]
  410564:	ldur	x0, [x29, #-16]
  410568:	ldur	x2, [x29, #-32]
  41056c:	ldur	x8, [x29, #-16]
  410570:	ldrb	w9, [x8, #456]
  410574:	ldur	x8, [x29, #-16]
  410578:	add	x5, x8, #0x160
  41057c:	ldur	x8, [x29, #-16]
  410580:	add	x6, x8, #0xa0
  410584:	mov	w10, #0x1                   	// #1
  410588:	and	w1, w10, #0x1
  41058c:	mov	w3, #0x42                  	// #66
  410590:	and	w4, w9, #0x1
  410594:	bl	416c20 <open_journal>
  410598:	stur	w0, [x29, #-36]
  41059c:	ldur	w9, [x29, #-36]
  4105a0:	cmp	w9, #0x0
  4105a4:	cset	w9, lt  // lt = tstop
  4105a8:	tbnz	w9, #0, 4105e4 <system_journal_open+0x3cc>
  4105ac:	ldur	x8, [x29, #-16]
  4105b0:	ldr	x0, [x8, #160]
  4105b4:	mov	w9, wzr
  4105b8:	mov	w1, w9
  4105bc:	bl	415d1c <server_add_acls>
  4105c0:	ldur	x0, [x29, #-16]
  4105c4:	ldur	x8, [x29, #-16]
  4105c8:	add	x1, x8, #0x150
  4105cc:	bl	4090b0 <cache_space_refresh>
  4105d0:	ldur	x8, [x29, #-16]
  4105d4:	add	x8, x8, #0x150
  4105d8:	mov	x0, x8
  4105dc:	bl	416f58 <patch_min_use>
  4105e0:	b	4106d0 <system_journal_open+0x4b8>
  4105e4:	mov	w8, #0x0                   	// #0
  4105e8:	sturb	w8, [x29, #-113]
  4105ec:	ldur	w8, [x29, #-36]
  4105f0:	mov	w9, #0xffffffe2            	// #-30
  4105f4:	cmp	w8, w9
  4105f8:	sub	x9, x29, #0x18
  4105fc:	stur	w8, [x9, #-256]
  410600:	b.eq	410628 <system_journal_open+0x410>  // b.none
  410604:	b	410608 <system_journal_open+0x3f0>
  410608:	mov	w8, #0xfffffffe            	// #-2
  41060c:	sub	x9, x29, #0x18
  410610:	ldur	w9, [x9, #-256]
  410614:	cmp	w9, w8
  410618:	cset	w8, eq  // eq = none
  41061c:	eor	w8, w8, #0x1
  410620:	tbnz	w8, #0, 410634 <system_journal_open+0x41c>
  410624:	b	410628 <system_journal_open+0x410>
  410628:	mov	w8, #0x1                   	// #1
  41062c:	sturb	w8, [x29, #-113]
  410630:	b	410634 <system_journal_open+0x41c>
  410634:	ldurb	w8, [x29, #-113]
  410638:	and	w8, w8, #0x1
  41063c:	sturb	w8, [x29, #-114]
  410640:	ldurb	w8, [x29, #-114]
  410644:	tbnz	w8, #0, 4106cc <system_journal_open+0x4b4>
  410648:	mov	w8, #0x4                   	// #4
  41064c:	stur	w8, [x29, #-120]
  410650:	ldur	w8, [x29, #-36]
  410654:	stur	w8, [x29, #-124]
  410658:	stur	wzr, [x29, #-128]
  41065c:	ldur	w0, [x29, #-128]
  410660:	bl	405638 <log_get_max_level_realm@plt>
  410664:	ldur	w8, [x29, #-120]
  410668:	and	w8, w8, #0x7
  41066c:	cmp	w0, w8
  410670:	b.lt	4106a8 <system_journal_open+0x490>  // b.tstop
  410674:	ldur	w8, [x29, #-128]
  410678:	ldur	w9, [x29, #-120]
  41067c:	orr	w0, w9, w8, lsl #10
  410680:	ldur	w1, [x29, #-124]
  410684:	ldur	x2, [x29, #-248]
  410688:	mov	w3, #0x13b                 	// #315
  41068c:	ldur	x4, [x29, #-256]
  410690:	adrp	x5, 42b000 <_fini+0x13a8>
  410694:	add	x5, x5, #0xefb
  410698:	bl	405648 <log_internal_realm@plt>
  41069c:	sub	x8, x29, #0x1c
  4106a0:	stur	w0, [x8, #-256]
  4106a4:	b	4106c0 <system_journal_open+0x4a8>
  4106a8:	ldur	w0, [x29, #-124]
  4106ac:	bl	405658 <abs@plt>
  4106b0:	mov	w8, wzr
  4106b4:	subs	w8, w8, w0, uxtb
  4106b8:	sub	x9, x29, #0x1c
  4106bc:	stur	w8, [x9, #-256]
  4106c0:	sub	x8, x29, #0x1c
  4106c4:	ldur	w8, [x8, #-256]
  4106c8:	stur	w8, [x29, #-132]
  4106cc:	stur	wzr, [x29, #-36]
  4106d0:	ldurb	w8, [x29, #-17]
  4106d4:	tbnz	w8, #0, 4106e8 <system_journal_open+0x4d0>
  4106d8:	ldur	x0, [x29, #-16]
  4106dc:	mov	w8, #0x1                   	// #1
  4106e0:	and	w1, w8, #0x1
  4106e4:	bl	40fa00 <server_flush_to_var>
  4106e8:	ldur	x8, [x29, #-16]
  4106ec:	ldr	x8, [x8, #152]
  4106f0:	cbnz	x8, 410b8c <system_journal_open+0x974>
  4106f4:	ldur	x8, [x29, #-16]
  4106f8:	ldr	w9, [x8, #556]
  4106fc:	cmp	w9, #0x3
  410700:	b.eq	410b8c <system_journal_open+0x974>  // b.none
  410704:	ldur	x8, [x29, #-16]
  410708:	ldr	x8, [x8, #240]
  41070c:	sub	x9, x29, #0x98
  410710:	stur	x8, [x29, #-152]
  410714:	adrp	x8, 42b000 <_fini+0x13a8>
  410718:	add	x8, x8, #0xea7
  41071c:	str	x8, [x9, #8]
  410720:	stur	xzr, [x29, #-176]
  410724:	stur	xzr, [x29, #-184]
  410728:	ldur	x8, [x29, #-184]
  41072c:	mov	w9, #0x0                   	// #0
  410730:	cmp	x8, #0x2
  410734:	sub	x8, x29, #0x20
  410738:	stur	w9, [x8, #-256]
  41073c:	b.cs	410768 <system_journal_open+0x550>  // b.hs, b.nlast
  410740:	ldur	x8, [x29, #-184]
  410744:	mov	x9, #0x8                   	// #8
  410748:	mul	x8, x9, x8
  41074c:	sub	x9, x29, #0x98
  410750:	add	x8, x9, x8
  410754:	ldr	x8, [x8]
  410758:	cmp	x8, #0x0
  41075c:	cset	w10, ne  // ne = any
  410760:	sub	x8, x29, #0x20
  410764:	stur	w10, [x8, #-256]
  410768:	sub	x8, x29, #0x20
  41076c:	ldur	w8, [x8, #-256]
  410770:	tbnz	w8, #0, 410778 <system_journal_open+0x560>
  410774:	b	4107b0 <system_journal_open+0x598>
  410778:	ldur	x8, [x29, #-184]
  41077c:	mov	x9, #0x8                   	// #8
  410780:	mul	x8, x9, x8
  410784:	sub	x9, x29, #0x98
  410788:	add	x8, x9, x8
  41078c:	ldr	x0, [x8]
  410790:	bl	405738 <strlen@plt>
  410794:	ldur	x8, [x29, #-176]
  410798:	add	x8, x8, x0
  41079c:	stur	x8, [x29, #-176]
  4107a0:	ldur	x8, [x29, #-184]
  4107a4:	add	x8, x8, #0x1
  4107a8:	stur	x8, [x29, #-184]
  4107ac:	b	410728 <system_journal_open+0x510>
  4107b0:	ldur	x8, [x29, #-176]
  4107b4:	add	x8, x8, #0x1
  4107b8:	stur	x8, [x29, #-192]
  4107bc:	ldur	x1, [x29, #-192]
  4107c0:	mov	x0, #0x1                   	// #1
  4107c4:	bl	40b084 <size_multiply_overflow>
  4107c8:	mov	w8, #0x1                   	// #1
  4107cc:	eor	w9, w0, #0x1
  4107d0:	eor	w9, w9, w8
  4107d4:	eor	w9, w9, w8
  4107d8:	eor	w8, w9, w8
  4107dc:	and	w8, w8, #0x1
  4107e0:	mov	w1, w8
  4107e4:	sxtw	x10, w1
  4107e8:	cbz	x10, 410810 <system_journal_open+0x5f8>
  4107ec:	mov	w8, wzr
  4107f0:	mov	w0, w8
  4107f4:	adrp	x1, 42b000 <_fini+0x13a8>
  4107f8:	add	x1, x1, #0x876
  4107fc:	ldur	x2, [x29, #-248]
  410800:	mov	w3, #0x14e                 	// #334
  410804:	sub	x8, x29, #0x8
  410808:	ldur	x4, [x8, #-256]
  41080c:	bl	405718 <log_assert_failed_realm@plt>
  410810:	ldur	x8, [x29, #-192]
  410814:	mov	x9, #0x1                   	// #1
  410818:	mul	x8, x9, x8
  41081c:	cmp	x8, #0x400, lsl #12
  410820:	cset	w10, ls  // ls = plast
  410824:	mov	w11, #0x1                   	// #1
  410828:	eor	w10, w10, #0x1
  41082c:	eor	w10, w10, w11
  410830:	eor	w10, w10, w11
  410834:	and	w10, w10, #0x1
  410838:	mov	w0, w10
  41083c:	sxtw	x8, w0
  410840:	cbz	x8, 410868 <system_journal_open+0x650>
  410844:	mov	w8, wzr
  410848:	mov	w0, w8
  41084c:	adrp	x1, 42b000 <_fini+0x13a8>
  410850:	add	x1, x1, #0x8a1
  410854:	ldur	x2, [x29, #-248]
  410858:	mov	w3, #0x14e                 	// #334
  41085c:	sub	x8, x29, #0x8
  410860:	ldur	x4, [x8, #-256]
  410864:	bl	405718 <log_assert_failed_realm@plt>
  410868:	ldur	x8, [x29, #-192]
  41086c:	mov	x9, #0x1                   	// #1
  410870:	mul	x8, x9, x8
  410874:	mul	x8, x8, x9
  410878:	add	x8, x8, #0xf
  41087c:	and	x8, x8, #0xfffffffffffffff0
  410880:	mov	x9, sp
  410884:	subs	x8, x9, x8
  410888:	mov	sp, x8
  41088c:	stur	x8, [x29, #-200]
  410890:	ldur	x8, [x29, #-200]
  410894:	stur	x8, [x29, #-160]
  410898:	stur	x8, [x29, #-168]
  41089c:	stur	xzr, [x29, #-184]
  4108a0:	ldur	x8, [x29, #-184]
  4108a4:	mov	w9, #0x0                   	// #0
  4108a8:	cmp	x8, #0x2
  4108ac:	sub	x8, x29, #0x24
  4108b0:	stur	w9, [x8, #-256]
  4108b4:	b.cs	4108e0 <system_journal_open+0x6c8>  // b.hs, b.nlast
  4108b8:	ldur	x8, [x29, #-184]
  4108bc:	mov	x9, #0x8                   	// #8
  4108c0:	mul	x8, x9, x8
  4108c4:	sub	x9, x29, #0x98
  4108c8:	add	x8, x9, x8
  4108cc:	ldr	x8, [x8]
  4108d0:	cmp	x8, #0x0
  4108d4:	cset	w10, ne  // ne = any
  4108d8:	sub	x8, x29, #0x24
  4108dc:	stur	w10, [x8, #-256]
  4108e0:	sub	x8, x29, #0x24
  4108e4:	ldur	w8, [x8, #-256]
  4108e8:	tbnz	w8, #0, 4108f0 <system_journal_open+0x6d8>
  4108ec:	b	410924 <system_journal_open+0x70c>
  4108f0:	ldur	x0, [x29, #-168]
  4108f4:	ldur	x8, [x29, #-184]
  4108f8:	mov	x9, #0x8                   	// #8
  4108fc:	mul	x8, x9, x8
  410900:	sub	x9, x29, #0x98
  410904:	add	x8, x9, x8
  410908:	ldr	x1, [x8]
  41090c:	bl	405ad8 <stpcpy@plt>
  410910:	stur	x0, [x29, #-168]
  410914:	ldur	x8, [x29, #-184]
  410918:	add	x8, x8, #0x1
  41091c:	stur	x8, [x29, #-184]
  410920:	b	4108a0 <system_journal_open+0x688>
  410924:	ldur	x8, [x29, #-168]
  410928:	mov	w9, #0x0                   	// #0
  41092c:	strb	w9, [x8]
  410930:	ldur	x8, [x29, #-160]
  410934:	stur	x8, [x29, #-208]
  410938:	ldur	x8, [x29, #-208]
  41093c:	stur	x8, [x29, #-32]
  410940:	ldur	x8, [x29, #-16]
  410944:	ldr	x8, [x8, #160]
  410948:	cbz	x8, 410a30 <system_journal_open+0x818>
  41094c:	ldurb	w8, [x29, #-18]
  410950:	tbnz	w8, #0, 410a30 <system_journal_open+0x818>
  410954:	ldur	x0, [x29, #-16]
  410958:	ldur	x2, [x29, #-32]
  41095c:	ldur	x8, [x29, #-16]
  410960:	add	x5, x8, #0xf8
  410964:	ldur	x8, [x29, #-16]
  410968:	add	x6, x8, #0x98
  41096c:	mov	w9, wzr
  410970:	and	w1, w9, #0x1
  410974:	mov	w3, #0x2                   	// #2
  410978:	and	w4, w9, #0x1
  41097c:	bl	416c20 <open_journal>
  410980:	stur	w0, [x29, #-36]
  410984:	ldur	w9, [x29, #-36]
  410988:	cmp	w9, #0x0
  41098c:	cset	w9, ge  // ge = tcont
  410990:	tbnz	w9, #0, 410a2c <system_journal_open+0x814>
  410994:	ldur	w8, [x29, #-36]
  410998:	mov	w9, #0xfffffffe            	// #-2
  41099c:	cmp	w8, w9
  4109a0:	b.eq	410a28 <system_journal_open+0x810>  // b.none
  4109a4:	mov	w8, #0x4                   	// #4
  4109a8:	stur	w8, [x29, #-212]
  4109ac:	ldur	w8, [x29, #-36]
  4109b0:	stur	w8, [x29, #-216]
  4109b4:	stur	wzr, [x29, #-220]
  4109b8:	ldur	w0, [x29, #-220]
  4109bc:	bl	405638 <log_get_max_level_realm@plt>
  4109c0:	ldur	w8, [x29, #-212]
  4109c4:	and	w8, w8, #0x7
  4109c8:	cmp	w0, w8
  4109cc:	b.lt	410a04 <system_journal_open+0x7ec>  // b.tstop
  4109d0:	ldur	w8, [x29, #-220]
  4109d4:	ldur	w9, [x29, #-212]
  4109d8:	orr	w0, w9, w8, lsl #10
  4109dc:	ldur	w1, [x29, #-216]
  4109e0:	ldur	x2, [x29, #-248]
  4109e4:	mov	w3, #0x159                 	// #345
  4109e8:	ldur	x4, [x29, #-256]
  4109ec:	adrp	x5, 42b000 <_fini+0x13a8>
  4109f0:	add	x5, x5, #0xf1d
  4109f4:	bl	405648 <log_internal_realm@plt>
  4109f8:	sub	x8, x29, #0x28
  4109fc:	stur	w0, [x8, #-256]
  410a00:	b	410a1c <system_journal_open+0x804>
  410a04:	ldur	w0, [x29, #-216]
  410a08:	bl	405658 <abs@plt>
  410a0c:	mov	w8, wzr
  410a10:	subs	w8, w8, w0, uxtb
  410a14:	sub	x9, x29, #0x28
  410a18:	stur	w8, [x9, #-256]
  410a1c:	sub	x8, x29, #0x28
  410a20:	ldur	w8, [x8, #-256]
  410a24:	stur	w8, [x29, #-224]
  410a28:	stur	wzr, [x29, #-36]
  410a2c:	b	410b4c <system_journal_open+0x934>
  410a30:	adrp	x0, 42b000 <_fini+0x13a8>
  410a34:	add	x0, x0, #0xf40
  410a38:	mov	w8, #0x1ed                 	// #493
  410a3c:	mov	w1, w8
  410a40:	sub	x9, x29, #0x2c
  410a44:	stur	w8, [x9, #-256]
  410a48:	bl	405c08 <mkdir@plt>
  410a4c:	adrp	x9, 42a000 <_fini+0x3a8>
  410a50:	add	x9, x9, #0xb33
  410a54:	mov	x0, x9
  410a58:	sub	x8, x29, #0x2c
  410a5c:	ldur	w1, [x8, #-256]
  410a60:	bl	405c08 <mkdir@plt>
  410a64:	ldur	x9, [x29, #-32]
  410a68:	mov	x0, x9
  410a6c:	mov	w1, #0x1e8                 	// #488
  410a70:	bl	405c18 <mkdir_parents@plt>
  410a74:	ldur	x9, [x29, #-16]
  410a78:	ldur	x2, [x29, #-32]
  410a7c:	ldur	x10, [x29, #-16]
  410a80:	add	x5, x10, #0xf8
  410a84:	ldur	x10, [x29, #-16]
  410a88:	add	x6, x10, #0x98
  410a8c:	mov	x0, x9
  410a90:	mov	w8, #0x1                   	// #1
  410a94:	and	w1, w8, #0x1
  410a98:	mov	w3, #0x42                  	// #66
  410a9c:	mov	w8, wzr
  410aa0:	and	w4, w8, #0x1
  410aa4:	bl	416c20 <open_journal>
  410aa8:	stur	w0, [x29, #-36]
  410aac:	ldur	w8, [x29, #-36]
  410ab0:	cmp	w8, #0x0
  410ab4:	cset	w8, ge  // ge = tcont
  410ab8:	tbnz	w8, #0, 410b4c <system_journal_open+0x934>
  410abc:	mov	w8, #0x3                   	// #3
  410ac0:	stur	w8, [x29, #-228]
  410ac4:	ldur	w8, [x29, #-36]
  410ac8:	stur	w8, [x29, #-232]
  410acc:	stur	wzr, [x29, #-236]
  410ad0:	ldur	w0, [x29, #-236]
  410ad4:	bl	405638 <log_get_max_level_realm@plt>
  410ad8:	ldur	w8, [x29, #-228]
  410adc:	and	w8, w8, #0x7
  410ae0:	cmp	w0, w8
  410ae4:	b.lt	410b1c <system_journal_open+0x904>  // b.tstop
  410ae8:	ldur	w8, [x29, #-236]
  410aec:	ldur	w9, [x29, #-228]
  410af0:	orr	w0, w9, w8, lsl #10
  410af4:	ldur	w1, [x29, #-232]
  410af8:	ldur	x2, [x29, #-248]
  410afc:	mov	w3, #0x169                 	// #361
  410b00:	ldur	x4, [x29, #-256]
  410b04:	adrp	x5, 42b000 <_fini+0x13a8>
  410b08:	add	x5, x5, #0xf1d
  410b0c:	bl	405648 <log_internal_realm@plt>
  410b10:	sub	x8, x29, #0x30
  410b14:	stur	w0, [x8, #-256]
  410b18:	b	410b34 <system_journal_open+0x91c>
  410b1c:	ldur	w0, [x29, #-232]
  410b20:	bl	405658 <abs@plt>
  410b24:	mov	w8, wzr
  410b28:	subs	w8, w8, w0, uxtb
  410b2c:	sub	x9, x29, #0x30
  410b30:	stur	w8, [x9, #-256]
  410b34:	sub	x8, x29, #0x30
  410b38:	ldur	w8, [x8, #-256]
  410b3c:	stur	w8, [x29, #-240]
  410b40:	ldur	w8, [x29, #-240]
  410b44:	stur	w8, [x29, #-4]
  410b48:	b	410b94 <system_journal_open+0x97c>
  410b4c:	ldur	x8, [x29, #-16]
  410b50:	ldr	x8, [x8, #152]
  410b54:	cbz	x8, 410b8c <system_journal_open+0x974>
  410b58:	ldur	x8, [x29, #-16]
  410b5c:	ldr	x0, [x8, #152]
  410b60:	mov	w9, wzr
  410b64:	mov	w1, w9
  410b68:	bl	415d1c <server_add_acls>
  410b6c:	ldur	x0, [x29, #-16]
  410b70:	ldur	x8, [x29, #-16]
  410b74:	add	x1, x8, #0xe8
  410b78:	bl	4090b0 <cache_space_refresh>
  410b7c:	ldur	x8, [x29, #-16]
  410b80:	add	x8, x8, #0xe8
  410b84:	mov	x0, x8
  410b88:	bl	416f58 <patch_min_use>
  410b8c:	ldur	w8, [x29, #-36]
  410b90:	stur	w8, [x29, #-4]
  410b94:	ldur	w0, [x29, #-4]
  410b98:	mov	sp, x29
  410b9c:	ldr	x28, [sp, #16]
  410ba0:	ldp	x29, x30, [sp], #32
  410ba4:	ret

0000000000410ba8 <shall_try_append_again>:
  410ba8:	sub	sp, sp, #0x100
  410bac:	stp	x29, x30, [sp, #240]
  410bb0:	add	x29, sp, #0xf0
  410bb4:	sub	x8, x29, #0x10
  410bb8:	adrp	x9, 42a000 <_fini+0x3a8>
  410bbc:	add	x9, x9, #0x3c8
  410bc0:	add	x9, x9, #0x3
  410bc4:	adrp	x10, 42b000 <_fini+0x13a8>
  410bc8:	add	x10, x10, #0xf6e
  410bcc:	str	x0, [x8]
  410bd0:	stur	w1, [x29, #-20]
  410bd4:	ldur	w11, [x29, #-20]
  410bd8:	add	w11, w11, #0x7a
  410bdc:	mov	w12, w11
  410be0:	ubfx	x12, x12, #0, #32
  410be4:	cmp	x12, #0x75
  410be8:	str	x8, [sp, #64]
  410bec:	str	x9, [sp, #56]
  410bf0:	str	x10, [sp, #48]
  410bf4:	str	x12, [sp, #40]
  410bf8:	b.hi	411124 <shall_try_append_again+0x57c>  // b.pmore
  410bfc:	adrp	x8, 430000 <_fini+0x63a8>
  410c00:	add	x8, x8, #0x1f0
  410c04:	ldr	x11, [sp, #40]
  410c08:	ldrsw	x10, [x8, x11, lsl #2]
  410c0c:	add	x9, x8, x10
  410c10:	br	x9
  410c14:	mov	w8, #0x7                   	// #7
  410c18:	stur	w8, [x29, #-24]
  410c1c:	stur	wzr, [x29, #-28]
  410c20:	stur	wzr, [x29, #-32]
  410c24:	ldur	w0, [x29, #-32]
  410c28:	bl	405638 <log_get_max_level_realm@plt>
  410c2c:	ldur	w8, [x29, #-24]
  410c30:	and	w8, w8, #0x7
  410c34:	cmp	w0, w8
  410c38:	b.lt	410c78 <shall_try_append_again+0xd0>  // b.tstop
  410c3c:	ldur	w8, [x29, #-32]
  410c40:	ldur	w9, [x29, #-24]
  410c44:	orr	w0, w9, w8, lsl #10
  410c48:	ldur	w1, [x29, #-28]
  410c4c:	ldr	x10, [sp, #64]
  410c50:	ldr	x11, [x10]
  410c54:	ldr	x6, [x11, #48]
  410c58:	ldr	x2, [sp, #56]
  410c5c:	mov	w3, #0x2f3                 	// #755
  410c60:	ldr	x4, [sp, #48]
  410c64:	adrp	x5, 42b000 <_fini+0x13a8>
  410c68:	add	x5, x5, #0xf85
  410c6c:	bl	405648 <log_internal_realm@plt>
  410c70:	str	w0, [sp, #36]
  410c74:	b	410c8c <shall_try_append_again+0xe4>
  410c78:	ldur	w0, [x29, #-28]
  410c7c:	bl	405658 <abs@plt>
  410c80:	mov	w8, wzr
  410c84:	subs	w8, w8, w0, uxtb
  410c88:	str	w8, [sp, #36]
  410c8c:	ldr	w8, [sp, #36]
  410c90:	stur	w8, [x29, #-36]
  410c94:	mov	w8, #0x1                   	// #1
  410c98:	and	w8, w8, #0x1
  410c9c:	sturb	w8, [x29, #-1]
  410ca0:	b	411130 <shall_try_append_again+0x588>
  410ca4:	mov	w8, #0x4                   	// #4
  410ca8:	stur	w8, [x29, #-40]
  410cac:	stur	wzr, [x29, #-44]
  410cb0:	stur	wzr, [x29, #-48]
  410cb4:	ldur	w0, [x29, #-48]
  410cb8:	bl	405638 <log_get_max_level_realm@plt>
  410cbc:	ldur	w8, [x29, #-40]
  410cc0:	and	w8, w8, #0x7
  410cc4:	cmp	w0, w8
  410cc8:	b.lt	410d08 <shall_try_append_again+0x160>  // b.tstop
  410ccc:	ldur	w8, [x29, #-48]
  410cd0:	ldur	w9, [x29, #-40]
  410cd4:	orr	w0, w9, w8, lsl #10
  410cd8:	ldur	w1, [x29, #-44]
  410cdc:	ldr	x10, [sp, #64]
  410ce0:	ldr	x11, [x10]
  410ce4:	ldr	x6, [x11, #48]
  410ce8:	ldr	x2, [sp, #56]
  410cec:	mov	w3, #0x2f7                 	// #759
  410cf0:	ldr	x4, [sp, #48]
  410cf4:	adrp	x5, 42b000 <_fini+0x13a8>
  410cf8:	add	x5, x5, #0xfad
  410cfc:	bl	405648 <log_internal_realm@plt>
  410d00:	str	w0, [sp, #32]
  410d04:	b	410d1c <shall_try_append_again+0x174>
  410d08:	ldur	w0, [x29, #-44]
  410d0c:	bl	405658 <abs@plt>
  410d10:	mov	w8, wzr
  410d14:	subs	w8, w8, w0, uxtb
  410d18:	str	w8, [sp, #32]
  410d1c:	ldr	w8, [sp, #32]
  410d20:	stur	w8, [x29, #-52]
  410d24:	mov	w8, #0x1                   	// #1
  410d28:	and	w8, w8, #0x1
  410d2c:	sturb	w8, [x29, #-1]
  410d30:	b	411130 <shall_try_append_again+0x588>
  410d34:	mov	w8, #0x6                   	// #6
  410d38:	stur	w8, [x29, #-56]
  410d3c:	stur	wzr, [x29, #-60]
  410d40:	stur	wzr, [x29, #-64]
  410d44:	ldur	w0, [x29, #-64]
  410d48:	bl	405638 <log_get_max_level_realm@plt>
  410d4c:	ldur	w8, [x29, #-56]
  410d50:	and	w8, w8, #0x7
  410d54:	cmp	w0, w8
  410d58:	b.lt	410d98 <shall_try_append_again+0x1f0>  // b.tstop
  410d5c:	ldur	w8, [x29, #-64]
  410d60:	ldur	w9, [x29, #-56]
  410d64:	orr	w0, w9, w8, lsl #10
  410d68:	ldur	w1, [x29, #-60]
  410d6c:	ldr	x10, [sp, #64]
  410d70:	ldr	x11, [x10]
  410d74:	ldr	x6, [x11, #48]
  410d78:	ldr	x2, [sp, #56]
  410d7c:	mov	w3, #0x2fb                 	// #763
  410d80:	ldr	x4, [sp, #48]
  410d84:	adrp	x5, 42b000 <_fini+0x13a8>
  410d88:	add	x5, x5, #0xfc5
  410d8c:	bl	405648 <log_internal_realm@plt>
  410d90:	str	w0, [sp, #28]
  410d94:	b	410dac <shall_try_append_again+0x204>
  410d98:	ldur	w0, [x29, #-60]
  410d9c:	bl	405658 <abs@plt>
  410da0:	mov	w8, wzr
  410da4:	subs	w8, w8, w0, uxtb
  410da8:	str	w8, [sp, #28]
  410dac:	ldr	w8, [sp, #28]
  410db0:	stur	w8, [x29, #-68]
  410db4:	mov	w8, #0x1                   	// #1
  410db8:	and	w8, w8, #0x1
  410dbc:	sturb	w8, [x29, #-1]
  410dc0:	b	411130 <shall_try_append_again+0x588>
  410dc4:	mov	w8, #0x6                   	// #6
  410dc8:	stur	w8, [x29, #-72]
  410dcc:	stur	wzr, [x29, #-76]
  410dd0:	stur	wzr, [x29, #-80]
  410dd4:	ldur	w0, [x29, #-80]
  410dd8:	bl	405638 <log_get_max_level_realm@plt>
  410ddc:	ldur	w8, [x29, #-72]
  410de0:	and	w8, w8, #0x7
  410de4:	cmp	w0, w8
  410de8:	b.lt	410e28 <shall_try_append_again+0x280>  // b.tstop
  410dec:	ldur	w8, [x29, #-80]
  410df0:	ldur	w9, [x29, #-72]
  410df4:	orr	w0, w9, w8, lsl #10
  410df8:	ldur	w1, [x29, #-76]
  410dfc:	ldr	x10, [sp, #64]
  410e00:	ldr	x11, [x10]
  410e04:	ldr	x6, [x11, #48]
  410e08:	ldr	x2, [sp, #56]
  410e0c:	mov	w3, #0x2ff                 	// #767
  410e10:	ldr	x4, [sp, #48]
  410e14:	adrp	x5, 42b000 <_fini+0x13a8>
  410e18:	add	x5, x5, #0xff4
  410e1c:	bl	405648 <log_internal_realm@plt>
  410e20:	str	w0, [sp, #24]
  410e24:	b	410e3c <shall_try_append_again+0x294>
  410e28:	ldur	w0, [x29, #-76]
  410e2c:	bl	405658 <abs@plt>
  410e30:	mov	w8, wzr
  410e34:	subs	w8, w8, w0, uxtb
  410e38:	str	w8, [sp, #24]
  410e3c:	ldr	w8, [sp, #24]
  410e40:	stur	w8, [x29, #-84]
  410e44:	mov	w8, #0x1                   	// #1
  410e48:	and	w8, w8, #0x1
  410e4c:	sturb	w8, [x29, #-1]
  410e50:	b	411130 <shall_try_append_again+0x588>
  410e54:	mov	w8, #0x6                   	// #6
  410e58:	stur	w8, [x29, #-88]
  410e5c:	stur	wzr, [x29, #-92]
  410e60:	stur	wzr, [x29, #-96]
  410e64:	ldur	w0, [x29, #-96]
  410e68:	bl	405638 <log_get_max_level_realm@plt>
  410e6c:	ldur	w8, [x29, #-88]
  410e70:	and	w8, w8, #0x7
  410e74:	cmp	w0, w8
  410e78:	b.lt	410eb8 <shall_try_append_again+0x310>  // b.tstop
  410e7c:	ldur	w8, [x29, #-96]
  410e80:	ldur	w9, [x29, #-88]
  410e84:	orr	w0, w9, w8, lsl #10
  410e88:	ldur	w1, [x29, #-92]
  410e8c:	ldr	x10, [sp, #64]
  410e90:	ldr	x11, [x10]
  410e94:	ldr	x6, [x11, #48]
  410e98:	ldr	x2, [sp, #56]
  410e9c:	mov	w3, #0x303                 	// #771
  410ea0:	ldr	x4, [sp, #48]
  410ea4:	adrp	x5, 42c000 <_fini+0x23a8>
  410ea8:	add	x5, x5, #0x14
  410eac:	bl	405648 <log_internal_realm@plt>
  410eb0:	str	w0, [sp, #20]
  410eb4:	b	410ecc <shall_try_append_again+0x324>
  410eb8:	ldur	w0, [x29, #-92]
  410ebc:	bl	405658 <abs@plt>
  410ec0:	mov	w8, wzr
  410ec4:	subs	w8, w8, w0, uxtb
  410ec8:	str	w8, [sp, #20]
  410ecc:	ldr	w8, [sp, #20]
  410ed0:	stur	w8, [x29, #-100]
  410ed4:	mov	w8, #0x1                   	// #1
  410ed8:	and	w8, w8, #0x1
  410edc:	sturb	w8, [x29, #-1]
  410ee0:	b	411130 <shall_try_append_again+0x588>
  410ee4:	mov	w8, #0x4                   	// #4
  410ee8:	stur	w8, [x29, #-104]
  410eec:	stur	wzr, [x29, #-108]
  410ef0:	stur	wzr, [x29, #-112]
  410ef4:	ldur	w0, [x29, #-112]
  410ef8:	bl	405638 <log_get_max_level_realm@plt>
  410efc:	ldur	w8, [x29, #-104]
  410f00:	and	w8, w8, #0x7
  410f04:	cmp	w0, w8
  410f08:	b.lt	410f48 <shall_try_append_again+0x3a0>  // b.tstop
  410f0c:	ldur	w8, [x29, #-112]
  410f10:	ldur	w9, [x29, #-104]
  410f14:	orr	w0, w9, w8, lsl #10
  410f18:	ldur	w1, [x29, #-108]
  410f1c:	ldr	x10, [sp, #64]
  410f20:	ldr	x11, [x10]
  410f24:	ldr	x6, [x11, #48]
  410f28:	ldr	x2, [sp, #56]
  410f2c:	mov	w3, #0x309                 	// #777
  410f30:	ldr	x4, [sp, #48]
  410f34:	adrp	x5, 42c000 <_fini+0x23a8>
  410f38:	add	x5, x5, #0x37
  410f3c:	bl	405648 <log_internal_realm@plt>
  410f40:	str	w0, [sp, #16]
  410f44:	b	410f5c <shall_try_append_again+0x3b4>
  410f48:	ldur	w0, [x29, #-108]
  410f4c:	bl	405658 <abs@plt>
  410f50:	mov	w8, wzr
  410f54:	subs	w8, w8, w0, uxtb
  410f58:	str	w8, [sp, #16]
  410f5c:	ldr	w8, [sp, #16]
  410f60:	stur	w8, [x29, #-116]
  410f64:	mov	w8, #0x1                   	// #1
  410f68:	and	w8, w8, #0x1
  410f6c:	sturb	w8, [x29, #-1]
  410f70:	b	411130 <shall_try_append_again+0x588>
  410f74:	mov	w8, #0x4                   	// #4
  410f78:	str	w8, [sp, #120]
  410f7c:	str	wzr, [sp, #116]
  410f80:	str	wzr, [sp, #112]
  410f84:	ldr	w0, [sp, #112]
  410f88:	bl	405638 <log_get_max_level_realm@plt>
  410f8c:	ldr	w8, [sp, #120]
  410f90:	and	w8, w8, #0x7
  410f94:	cmp	w0, w8
  410f98:	b.lt	410fd8 <shall_try_append_again+0x430>  // b.tstop
  410f9c:	ldr	w8, [sp, #112]
  410fa0:	ldr	w9, [sp, #120]
  410fa4:	orr	w0, w9, w8, lsl #10
  410fa8:	ldr	w1, [sp, #116]
  410fac:	ldr	x10, [sp, #64]
  410fb0:	ldr	x11, [x10]
  410fb4:	ldr	x6, [x11, #48]
  410fb8:	ldr	x2, [sp, #56]
  410fbc:	mov	w3, #0x30d                 	// #781
  410fc0:	ldr	x4, [sp, #48]
  410fc4:	adrp	x5, 42c000 <_fini+0x23a8>
  410fc8:	add	x5, x5, #0x5d
  410fcc:	bl	405648 <log_internal_realm@plt>
  410fd0:	str	w0, [sp, #12]
  410fd4:	b	410fec <shall_try_append_again+0x444>
  410fd8:	ldr	w0, [sp, #116]
  410fdc:	bl	405658 <abs@plt>
  410fe0:	mov	w8, wzr
  410fe4:	subs	w8, w8, w0, uxtb
  410fe8:	str	w8, [sp, #12]
  410fec:	ldr	w8, [sp, #12]
  410ff0:	str	w8, [sp, #108]
  410ff4:	mov	w8, #0x1                   	// #1
  410ff8:	and	w8, w8, #0x1
  410ffc:	sturb	w8, [x29, #-1]
  411000:	b	411130 <shall_try_append_again+0x588>
  411004:	mov	w8, #0x4                   	// #4
  411008:	str	w8, [sp, #104]
  41100c:	str	wzr, [sp, #100]
  411010:	str	wzr, [sp, #96]
  411014:	ldr	w0, [sp, #96]
  411018:	bl	405638 <log_get_max_level_realm@plt>
  41101c:	ldr	w8, [sp, #104]
  411020:	and	w8, w8, #0x7
  411024:	cmp	w0, w8
  411028:	b.lt	411068 <shall_try_append_again+0x4c0>  // b.tstop
  41102c:	ldr	w8, [sp, #96]
  411030:	ldr	w9, [sp, #104]
  411034:	orr	w0, w9, w8, lsl #10
  411038:	ldr	w1, [sp, #100]
  41103c:	ldr	x10, [sp, #64]
  411040:	ldr	x11, [x10]
  411044:	ldr	x6, [x11, #48]
  411048:	ldr	x2, [sp, #56]
  41104c:	mov	w3, #0x311                 	// #785
  411050:	ldr	x4, [sp, #48]
  411054:	adrp	x5, 42c000 <_fini+0x23a8>
  411058:	add	x5, x5, #0x8a
  41105c:	bl	405648 <log_internal_realm@plt>
  411060:	str	w0, [sp, #8]
  411064:	b	41107c <shall_try_append_again+0x4d4>
  411068:	ldr	w0, [sp, #100]
  41106c:	bl	405658 <abs@plt>
  411070:	mov	w8, wzr
  411074:	subs	w8, w8, w0, uxtb
  411078:	str	w8, [sp, #8]
  41107c:	ldr	w8, [sp, #8]
  411080:	str	w8, [sp, #92]
  411084:	mov	w8, #0x1                   	// #1
  411088:	and	w8, w8, #0x1
  41108c:	sturb	w8, [x29, #-1]
  411090:	b	411130 <shall_try_append_again+0x588>
  411094:	mov	w8, #0x4                   	// #4
  411098:	str	w8, [sp, #88]
  41109c:	str	wzr, [sp, #84]
  4110a0:	str	wzr, [sp, #80]
  4110a4:	ldr	w0, [sp, #80]
  4110a8:	bl	405638 <log_get_max_level_realm@plt>
  4110ac:	ldr	w8, [sp, #88]
  4110b0:	and	w8, w8, #0x7
  4110b4:	cmp	w0, w8
  4110b8:	b.lt	4110f8 <shall_try_append_again+0x550>  // b.tstop
  4110bc:	ldr	w8, [sp, #80]
  4110c0:	ldr	w9, [sp, #88]
  4110c4:	orr	w0, w9, w8, lsl #10
  4110c8:	ldr	w1, [sp, #84]
  4110cc:	ldr	x10, [sp, #64]
  4110d0:	ldr	x11, [x10]
  4110d4:	ldr	x6, [x11, #48]
  4110d8:	ldr	x2, [sp, #56]
  4110dc:	mov	w3, #0x315                 	// #789
  4110e0:	ldr	x4, [sp, #48]
  4110e4:	adrp	x5, 42c000 <_fini+0x23a8>
  4110e8:	add	x5, x5, #0xb9
  4110ec:	bl	405648 <log_internal_realm@plt>
  4110f0:	str	w0, [sp, #4]
  4110f4:	b	41110c <shall_try_append_again+0x564>
  4110f8:	ldr	w0, [sp, #84]
  4110fc:	bl	405658 <abs@plt>
  411100:	mov	w8, wzr
  411104:	subs	w8, w8, w0, uxtb
  411108:	str	w8, [sp, #4]
  41110c:	ldr	w8, [sp, #4]
  411110:	str	w8, [sp, #76]
  411114:	mov	w8, wzr
  411118:	and	w8, w8, #0x1
  41111c:	sturb	w8, [x29, #-1]
  411120:	b	411130 <shall_try_append_again+0x588>
  411124:	mov	w8, wzr
  411128:	and	w8, w8, #0x1
  41112c:	sturb	w8, [x29, #-1]
  411130:	ldurb	w8, [x29, #-1]
  411134:	and	w0, w8, #0x1
  411138:	ldp	x29, x30, [sp, #240]
  41113c:	add	sp, sp, #0x100
  411140:	ret

0000000000411144 <server_process_datagram>:
  411144:	stp	x29, x30, [sp, #-32]!
  411148:	str	x28, [sp, #16]
  41114c:	mov	x29, sp
  411150:	sub	sp, sp, #0x410
  411154:	add	x8, sp, #0x140
  411158:	mov	x9, xzr
  41115c:	mov	w10, wzr
  411160:	mov	x11, #0x168                 	// #360
  411164:	mov	x12, #0x80                  	// #128
  411168:	mov	w13, #0x80                  	// #128
  41116c:	mov	x14, #0x1                   	// #1
  411170:	adrp	x15, 42a000 <_fini+0x3a8>
  411174:	add	x15, x15, #0x3c8
  411178:	add	x15, x15, #0x3
  41117c:	adrp	x16, 42a000 <_fini+0x3a8>
  411180:	add	x16, x16, #0xc5d
  411184:	adrp	x17, 42a000 <_fini+0x3a8>
  411188:	add	x17, x17, #0xbd9
  41118c:	sub	x18, x29, #0x70
  411190:	add	x4, sp, #0x218
  411194:	add	x5, sp, #0x198
  411198:	add	x6, sp, #0x160
  41119c:	str	x0, [x8, #704]
  4111a0:	stur	w1, [x29, #-20]
  4111a4:	stur	w2, [x29, #-24]
  4111a8:	str	x3, [x8, #688]
  4111ac:	ldr	x0, [x8, #688]
  4111b0:	str	x0, [x8, #680]
  4111b4:	str	x9, [x8, #672]
  4111b8:	str	x9, [x8, #664]
  4111bc:	str	x9, [x8, #648]
  4111c0:	str	xzr, [x8, #640]
  4111c4:	str	x9, [x8, #592]
  4111c8:	stur	wzr, [x29, #-132]
  4111cc:	str	xzr, [x8, #576]
  4111d0:	mov	x0, x4
  4111d4:	mov	w1, w10
  4111d8:	mov	x2, x11
  4111dc:	str	x8, [sp, #176]
  4111e0:	str	w10, [sp, #172]
  4111e4:	str	x11, [sp, #160]
  4111e8:	str	x12, [sp, #152]
  4111ec:	str	w13, [sp, #148]
  4111f0:	str	x14, [sp, #136]
  4111f4:	str	x15, [sp, #128]
  4111f8:	str	x16, [sp, #120]
  4111fc:	str	x17, [sp, #112]
  411200:	str	x18, [sp, #104]
  411204:	str	x4, [sp, #96]
  411208:	str	x5, [sp, #88]
  41120c:	str	x6, [sp, #80]
  411210:	bl	405c28 <memset@plt>
  411214:	ldr	x0, [sp, #88]
  411218:	ldr	w10, [sp, #172]
  41121c:	mov	w1, w10
  411220:	ldr	x2, [sp, #152]
  411224:	bl	405c28 <memset@plt>
  411228:	ldr	x8, [sp, #88]
  41122c:	ldr	x9, [sp, #176]
  411230:	str	x8, [x9, #32]
  411234:	ldr	w10, [sp, #148]
  411238:	str	w10, [sp, #360]
  41123c:	ldr	x11, [sp, #104]
  411240:	ldr	x12, [sp, #80]
  411244:	str	x11, [x12, #16]
  411248:	ldr	x14, [sp, #136]
  41124c:	str	x14, [x9, #56]
  411250:	ldr	x15, [sp, #96]
  411254:	str	x15, [x12, #32]
  411258:	ldr	x16, [sp, #160]
  41125c:	str	x16, [x9, #72]
  411260:	str	wzr, [sp, #400]
  411264:	ldr	x8, [sp, #176]
  411268:	ldr	x9, [x8, #680]
  41126c:	cmp	x9, #0x0
  411270:	cset	w10, ne  // ne = any
  411274:	mov	w11, #0x1                   	// #1
  411278:	eor	w10, w10, #0x1
  41127c:	eor	w10, w10, w11
  411280:	eor	w10, w10, w11
  411284:	and	w10, w10, #0x1
  411288:	mov	w0, w10
  41128c:	sxtw	x9, w0
  411290:	cbz	x9, 4112b4 <server_process_datagram+0x170>
  411294:	mov	w8, wzr
  411298:	mov	w0, w8
  41129c:	adrp	x1, 429000 <journal_ratelimit_group_free+0x70>
  4112a0:	add	x1, x1, #0xdc8
  4112a4:	ldr	x2, [sp, #128]
  4112a8:	mov	w3, #0x4ff                 	// #1279
  4112ac:	ldr	x4, [sp, #112]
  4112b0:	bl	405718 <log_assert_failed_realm@plt>
  4112b4:	ldur	w8, [x29, #-20]
  4112b8:	ldr	x9, [sp, #176]
  4112bc:	ldr	x10, [x9, #680]
  4112c0:	ldr	w11, [x10, #4]
  4112c4:	mov	w12, #0x1                   	// #1
  4112c8:	cmp	w8, w11
  4112cc:	str	w12, [sp, #76]
  4112d0:	b.eq	411310 <server_process_datagram+0x1cc>  // b.none
  4112d4:	ldur	w8, [x29, #-20]
  4112d8:	ldr	x9, [sp, #176]
  4112dc:	ldr	x10, [x9, #680]
  4112e0:	ldr	w11, [x10]
  4112e4:	mov	w12, #0x1                   	// #1
  4112e8:	cmp	w8, w11
  4112ec:	str	w12, [sp, #76]
  4112f0:	b.eq	411310 <server_process_datagram+0x1cc>  // b.none
  4112f4:	ldur	w8, [x29, #-20]
  4112f8:	ldr	x9, [sp, #176]
  4112fc:	ldr	x10, [x9, #680]
  411300:	ldr	w11, [x10, #16]
  411304:	cmp	w8, w11
  411308:	cset	w8, eq  // eq = none
  41130c:	str	w8, [sp, #76]
  411310:	ldr	w8, [sp, #76]
  411314:	mov	w9, #0x1                   	// #1
  411318:	eor	w8, w8, #0x1
  41131c:	eor	w8, w8, w9
  411320:	eor	w8, w8, w9
  411324:	and	w8, w8, #0x1
  411328:	mov	w0, w8
  41132c:	sxtw	x10, w0
  411330:	cbz	x10, 411354 <server_process_datagram+0x210>
  411334:	mov	w8, wzr
  411338:	mov	w0, w8
  41133c:	adrp	x1, 42a000 <_fini+0x3a8>
  411340:	add	x1, x1, #0xc1f
  411344:	ldr	x2, [sp, #128]
  411348:	mov	w3, #0x500                 	// #1280
  41134c:	ldr	x4, [sp, #112]
  411350:	bl	405718 <log_assert_failed_realm@plt>
  411354:	ldur	w8, [x29, #-24]
  411358:	cmp	w8, #0x1
  41135c:	b.eq	4113ec <server_process_datagram+0x2a8>  // b.none
  411360:	mov	w8, #0x3                   	// #3
  411364:	str	w8, [sp, #348]
  411368:	mov	w8, #0x5                   	// #5
  41136c:	movk	w8, #0x4000, lsl #16
  411370:	str	w8, [sp, #344]
  411374:	str	wzr, [sp, #340]
  411378:	ldr	w0, [sp, #340]
  41137c:	bl	405638 <log_get_max_level_realm@plt>
  411380:	ldr	w8, [sp, #348]
  411384:	and	w8, w8, #0x7
  411388:	cmp	w0, w8
  41138c:	b.lt	4113c4 <server_process_datagram+0x280>  // b.tstop
  411390:	ldr	w8, [sp, #340]
  411394:	ldr	w9, [sp, #348]
  411398:	orr	w0, w9, w8, lsl #10
  41139c:	ldr	w1, [sp, #344]
  4113a0:	ldur	w6, [x29, #-24]
  4113a4:	ldr	x2, [sp, #128]
  4113a8:	mov	w3, #0x505                 	// #1285
  4113ac:	ldr	x4, [sp, #120]
  4113b0:	adrp	x5, 42a000 <_fini+0x3a8>
  4113b4:	add	x5, x5, #0xc75
  4113b8:	bl	405648 <log_internal_realm@plt>
  4113bc:	str	w0, [sp, #72]
  4113c0:	b	4113d8 <server_process_datagram+0x294>
  4113c4:	ldr	w0, [sp, #344]
  4113c8:	bl	405658 <abs@plt>
  4113cc:	mov	w8, wzr
  4113d0:	subs	w8, w8, w0, uxtb
  4113d4:	str	w8, [sp, #72]
  4113d8:	ldr	w8, [sp, #72]
  4113dc:	str	w8, [sp, #336]
  4113e0:	ldr	w8, [sp, #336]
  4113e4:	stur	w8, [x29, #-4]
  4113e8:	b	411b50 <server_process_datagram+0xa0c>
  4113ec:	ldur	w0, [x29, #-20]
  4113f0:	mov	x1, #0x541b                	// #21531
  4113f4:	sub	x2, x29, #0x84
  4113f8:	bl	405c38 <ioctl@plt>
  4113fc:	ldursw	x8, [x29, #-132]
  411400:	add	x8, x8, #0x1
  411404:	ldr	x9, [sp, #176]
  411408:	str	x8, [x9]
  41140c:	mov	x8, #0x800                 	// #2048
  411410:	str	x8, [sp, #312]
  411414:	ldr	x8, [x9]
  411418:	cmp	x8, #0x800
  41141c:	b.ls	411430 <server_process_datagram+0x2ec>  // b.plast
  411420:	ldr	x8, [sp, #176]
  411424:	ldr	x9, [x8]
  411428:	str	x9, [sp, #64]
  41142c:	b	411438 <server_process_datagram+0x2f4>
  411430:	mov	x8, #0x800                 	// #2048
  411434:	str	x8, [sp, #64]
  411438:	ldr	x8, [sp, #64]
  41143c:	str	x8, [sp, #304]
  411440:	ldr	x8, [sp, #304]
  411444:	ldr	x9, [sp, #176]
  411448:	str	x8, [x9, #8]
  41144c:	ldr	x8, [x9, #8]
  411450:	str	x8, [sp, #288]
  411454:	mov	x8, #0x2320                	// #8992
  411458:	str	x8, [sp, #280]
  41145c:	ldr	x10, [sp, #288]
  411460:	cmp	x10, x8
  411464:	b.ls	411474 <server_process_datagram+0x330>  // b.plast
  411468:	ldr	x8, [sp, #288]
  41146c:	str	x8, [sp, #56]
  411470:	b	41147c <server_process_datagram+0x338>
  411474:	mov	x8, #0x2320                	// #8992
  411478:	str	x8, [sp, #56]
  41147c:	ldr	x8, [sp, #56]
  411480:	str	x8, [sp, #272]
  411484:	ldr	x8, [sp, #272]
  411488:	str	x8, [sp, #296]
  41148c:	ldr	x8, [sp, #296]
  411490:	mov	x3, #0x1                   	// #1
  411494:	add	x0, x8, #0x1
  411498:	str	x3, [sp, #48]
  41149c:	str	x0, [sp, #40]
  4114a0:	bl	405c48 <page_size@plt>
  4114a4:	ldr	x8, [sp, #40]
  4114a8:	str	x0, [sp, #32]
  4114ac:	mov	x0, x8
  4114b0:	ldr	x1, [sp, #32]
  4114b4:	bl	411b64 <ALIGN_TO>
  4114b8:	ldr	x8, [sp, #176]
  4114bc:	str	x0, [x8, #632]
  4114c0:	ldr	x9, [x8, #680]
  4114c4:	add	x0, x9, #0xb8
  4114c8:	ldr	x9, [x8, #680]
  4114cc:	add	x1, x9, #0xc0
  4114d0:	ldr	x2, [x8, #632]
  4114d4:	ldr	x3, [sp, #48]
  4114d8:	bl	405c58 <greedy_realloc@plt>
  4114dc:	cbnz	x0, 411500 <server_process_datagram+0x3bc>
  4114e0:	mov	w8, wzr
  4114e4:	mov	w0, w8
  4114e8:	ldr	x1, [sp, #128]
  4114ec:	mov	w2, #0x511                 	// #1297
  4114f0:	ldr	x3, [sp, #120]
  4114f4:	bl	405958 <log_oom_internal@plt>
  4114f8:	stur	w0, [x29, #-4]
  4114fc:	b	411b50 <server_process_datagram+0xa0c>
  411500:	ldr	x8, [sp, #176]
  411504:	ldr	x9, [x8, #680]
  411508:	ldr	x9, [x9, #184]
  41150c:	str	x9, [sp, #256]
  411510:	ldr	x9, [x8, #680]
  411514:	ldr	x9, [x9, #192]
  411518:	subs	x9, x9, #0x1
  41151c:	str	x9, [sp, #264]
  411520:	ldr	q0, [sp, #256]
  411524:	str	q0, [x8, #608]
  411528:	ldur	w0, [x29, #-20]
  41152c:	add	x1, sp, #0x160
  411530:	mov	w2, #0x40                  	// #64
  411534:	movk	w2, #0x4000, lsl #16
  411538:	bl	405c68 <recvmsg@plt>
  41153c:	ldr	x8, [sp, #176]
  411540:	str	x0, [x8, #600]
  411544:	ldr	x9, [x8, #600]
  411548:	cmp	x9, #0x0
  41154c:	cset	w10, ge  // ge = tcont
  411550:	tbnz	w10, #0, 411640 <server_process_datagram+0x4fc>
  411554:	mov	w8, #0x0                   	// #0
  411558:	strb	w8, [sp, #255]
  41155c:	bl	405768 <__errno_location@plt>
  411560:	ldr	w8, [x0]
  411564:	cmp	w8, #0x4
  411568:	str	w8, [sp, #28]
  41156c:	b.eq	41158c <server_process_datagram+0x448>  // b.none
  411570:	b	411574 <server_process_datagram+0x430>
  411574:	ldr	w8, [sp, #28]
  411578:	cmp	w8, #0xb
  41157c:	cset	w9, eq  // eq = none
  411580:	eor	w9, w9, #0x1
  411584:	tbnz	w9, #0, 411598 <server_process_datagram+0x454>
  411588:	b	41158c <server_process_datagram+0x448>
  41158c:	mov	w8, #0x1                   	// #1
  411590:	strb	w8, [sp, #255]
  411594:	b	411598 <server_process_datagram+0x454>
  411598:	ldrb	w8, [sp, #255]
  41159c:	and	w8, w8, #0x1
  4115a0:	strb	w8, [sp, #254]
  4115a4:	ldrb	w8, [sp, #254]
  4115a8:	tbnz	w8, #0, 4115b0 <server_process_datagram+0x46c>
  4115ac:	b	4115b8 <server_process_datagram+0x474>
  4115b0:	stur	wzr, [x29, #-4]
  4115b4:	b	411b50 <server_process_datagram+0xa0c>
  4115b8:	mov	w8, #0x3                   	// #3
  4115bc:	str	w8, [sp, #248]
  4115c0:	bl	405768 <__errno_location@plt>
  4115c4:	ldr	w8, [x0]
  4115c8:	str	w8, [sp, #244]
  4115cc:	str	wzr, [sp, #240]
  4115d0:	ldr	w0, [sp, #240]
  4115d4:	bl	405638 <log_get_max_level_realm@plt>
  4115d8:	ldr	w8, [sp, #248]
  4115dc:	and	w8, w8, #0x7
  4115e0:	cmp	w0, w8
  4115e4:	b.lt	411618 <server_process_datagram+0x4d4>  // b.tstop
  4115e8:	ldr	w8, [sp, #240]
  4115ec:	ldr	w9, [sp, #248]
  4115f0:	orr	w0, w9, w8, lsl #10
  4115f4:	ldr	w1, [sp, #244]
  4115f8:	ldr	x2, [sp, #128]
  4115fc:	mov	w3, #0x51a                 	// #1306
  411600:	ldr	x4, [sp, #120]
  411604:	adrp	x5, 42a000 <_fini+0x3a8>
  411608:	add	x5, x5, #0xca6
  41160c:	bl	405648 <log_internal_realm@plt>
  411610:	str	w0, [sp, #24]
  411614:	b	41162c <server_process_datagram+0x4e8>
  411618:	ldr	w0, [sp, #244]
  41161c:	bl	405658 <abs@plt>
  411620:	mov	w8, wzr
  411624:	subs	w8, w8, w0, uxtb
  411628:	str	w8, [sp, #24]
  41162c:	ldr	w8, [sp, #24]
  411630:	str	w8, [sp, #236]
  411634:	ldr	w8, [sp, #236]
  411638:	stur	w8, [x29, #-4]
  41163c:	b	411b50 <server_process_datagram+0xa0c>
  411640:	ldr	x8, [sp, #176]
  411644:	ldr	x9, [x8, #72]
  411648:	cmp	x9, #0x10
  41164c:	b.cc	411660 <server_process_datagram+0x51c>  // b.lo, b.ul, b.last
  411650:	add	x8, sp, #0x160
  411654:	ldr	x8, [x8, #32]
  411658:	str	x8, [sp, #16]
  41165c:	b	411668 <server_process_datagram+0x524>
  411660:	mov	x8, xzr
  411664:	str	x8, [sp, #16]
  411668:	ldr	x8, [sp, #16]
  41166c:	ldr	x9, [sp, #176]
  411670:	str	x8, [x9, #656]
  411674:	ldr	x8, [sp, #176]
  411678:	ldr	x9, [x8, #656]
  41167c:	cbz	x9, 4117d8 <server_process_datagram+0x694>
  411680:	ldr	x8, [sp, #176]
  411684:	ldr	x9, [x8, #656]
  411688:	ldr	w10, [x9, #8]
  41168c:	cmp	w10, #0x1
  411690:	b.ne	4116d0 <server_process_datagram+0x58c>  // b.any
  411694:	ldr	x8, [sp, #176]
  411698:	ldr	x9, [x8, #656]
  41169c:	ldr	w10, [x9, #12]
  4116a0:	cmp	w10, #0x2
  4116a4:	b.ne	4116d0 <server_process_datagram+0x58c>  // b.any
  4116a8:	ldr	x8, [sp, #176]
  4116ac:	ldr	x9, [x8, #656]
  4116b0:	ldr	x9, [x9]
  4116b4:	cmp	x9, #0x1c
  4116b8:	b.ne	4116d0 <server_process_datagram+0x58c>  // b.any
  4116bc:	ldr	x8, [sp, #176]
  4116c0:	ldr	x9, [x8, #656]
  4116c4:	add	x9, x9, #0x10
  4116c8:	str	x9, [x8, #672]
  4116cc:	b	4117bc <server_process_datagram+0x678>
  4116d0:	ldr	x8, [sp, #176]
  4116d4:	ldr	x9, [x8, #656]
  4116d8:	ldr	w10, [x9, #8]
  4116dc:	cmp	w10, #0x1
  4116e0:	b.ne	41171c <server_process_datagram+0x5d8>  // b.any
  4116e4:	ldr	x8, [sp, #176]
  4116e8:	ldr	x9, [x8, #656]
  4116ec:	ldr	w10, [x9, #12]
  4116f0:	cmp	w10, #0x3
  4116f4:	b.ne	41171c <server_process_datagram+0x5d8>  // b.any
  4116f8:	ldr	x8, [sp, #176]
  4116fc:	ldr	x9, [x8, #656]
  411700:	add	x9, x9, #0x10
  411704:	str	x9, [x8, #648]
  411708:	ldr	x9, [x8, #656]
  41170c:	ldr	x9, [x9]
  411710:	subs	x9, x9, #0x10
  411714:	str	x9, [x8, #640]
  411718:	b	4117bc <server_process_datagram+0x678>
  41171c:	ldr	x8, [sp, #176]
  411720:	ldr	x9, [x8, #656]
  411724:	ldr	w10, [x9, #8]
  411728:	cmp	w10, #0x1
  41172c:	b.ne	41176c <server_process_datagram+0x628>  // b.any
  411730:	ldr	x8, [sp, #176]
  411734:	ldr	x9, [x8, #656]
  411738:	ldr	w10, [x9, #12]
  41173c:	cmp	w10, #0x1d
  411740:	b.ne	41176c <server_process_datagram+0x628>  // b.any
  411744:	ldr	x8, [sp, #176]
  411748:	ldr	x9, [x8, #656]
  41174c:	ldr	x9, [x9]
  411750:	cmp	x9, #0x20
  411754:	b.ne	41176c <server_process_datagram+0x628>  // b.any
  411758:	ldr	x8, [sp, #176]
  41175c:	ldr	x9, [x8, #656]
  411760:	add	x9, x9, #0x10
  411764:	str	x9, [x8, #664]
  411768:	b	4117bc <server_process_datagram+0x678>
  41176c:	ldr	x8, [sp, #176]
  411770:	ldr	x9, [x8, #656]
  411774:	ldr	w10, [x9, #8]
  411778:	cmp	w10, #0x1
  41177c:	b.ne	4117bc <server_process_datagram+0x678>  // b.any
  411780:	ldr	x8, [sp, #176]
  411784:	ldr	x9, [x8, #656]
  411788:	ldr	w10, [x9, #12]
  41178c:	cmp	w10, #0x1
  411790:	b.ne	4117bc <server_process_datagram+0x678>  // b.any
  411794:	ldr	x8, [sp, #176]
  411798:	ldr	x9, [x8, #656]
  41179c:	add	x9, x9, #0x10
  4117a0:	str	x9, [x8, #592]
  4117a4:	ldr	x9, [x8, #656]
  4117a8:	ldr	x9, [x9]
  4117ac:	subs	x9, x9, #0x10
  4117b0:	mov	x10, #0x4                   	// #4
  4117b4:	udiv	x9, x9, x10
  4117b8:	str	x9, [x8, #576]
  4117bc:	ldr	x8, [sp, #176]
  4117c0:	ldr	x1, [x8, #656]
  4117c4:	add	x0, sp, #0x160
  4117c8:	bl	405c78 <__cmsg_nxthdr@plt>
  4117cc:	ldr	x8, [sp, #176]
  4117d0:	str	x0, [x8, #656]
  4117d4:	b	411674 <server_process_datagram+0x530>
  4117d8:	ldr	x8, [sp, #176]
  4117dc:	ldr	x9, [x8, #680]
  4117e0:	ldr	x9, [x9, #184]
  4117e4:	ldr	x10, [x8, #600]
  4117e8:	add	x9, x9, x10
  4117ec:	mov	w11, #0x0                   	// #0
  4117f0:	strb	w11, [x9]
  4117f4:	ldur	w11, [x29, #-20]
  4117f8:	ldr	x9, [x8, #680]
  4117fc:	ldr	w12, [x9]
  411800:	cmp	w11, w12
  411804:	b.ne	4118e0 <server_process_datagram+0x79c>  // b.any
  411808:	ldr	x8, [sp, #176]
  41180c:	ldr	x9, [x8, #600]
  411810:	cmp	x9, #0x0
  411814:	cset	w10, le
  411818:	tbnz	w10, #0, 411854 <server_process_datagram+0x710>
  41181c:	ldr	x8, [sp, #176]
  411820:	ldr	x9, [x8, #576]
  411824:	cbnz	x9, 411854 <server_process_datagram+0x710>
  411828:	ldr	x8, [sp, #176]
  41182c:	ldr	x0, [x8, #680]
  411830:	ldr	x9, [x8, #680]
  411834:	ldr	x1, [x9, #184]
  411838:	ldr	x2, [x8, #600]
  41183c:	ldr	x3, [x8, #672]
  411840:	ldr	x4, [x8, #664]
  411844:	ldr	x5, [x8, #648]
  411848:	ldr	x6, [x8, #640]
  41184c:	bl	41e3c4 <server_process_syslog_message>
  411850:	b	4118dc <server_process_datagram+0x798>
  411854:	ldr	x8, [sp, #176]
  411858:	ldr	x9, [x8, #576]
  41185c:	cmp	x9, #0x0
  411860:	cset	w10, ls  // ls = plast
  411864:	tbnz	w10, #0, 4118dc <server_process_datagram+0x798>
  411868:	mov	w8, #0x4                   	// #4
  41186c:	str	w8, [sp, #232]
  411870:	str	wzr, [sp, #228]
  411874:	str	wzr, [sp, #224]
  411878:	ldr	w0, [sp, #224]
  41187c:	bl	405638 <log_get_max_level_realm@plt>
  411880:	ldr	w8, [sp, #232]
  411884:	and	w8, w8, #0x7
  411888:	cmp	w0, w8
  41188c:	b.lt	4118c0 <server_process_datagram+0x77c>  // b.tstop
  411890:	ldr	w8, [sp, #224]
  411894:	ldr	w9, [sp, #232]
  411898:	orr	w0, w9, w8, lsl #10
  41189c:	ldr	w1, [sp, #228]
  4118a0:	ldr	x2, [sp, #128]
  4118a4:	mov	w3, #0x537                 	// #1335
  4118a8:	ldr	x4, [sp, #120]
  4118ac:	adrp	x5, 42a000 <_fini+0x3a8>
  4118b0:	add	x5, x5, #0xcbb
  4118b4:	bl	405648 <log_internal_realm@plt>
  4118b8:	str	w0, [sp, #12]
  4118bc:	b	4118d4 <server_process_datagram+0x790>
  4118c0:	ldr	w0, [sp, #228]
  4118c4:	bl	405658 <abs@plt>
  4118c8:	mov	w8, wzr
  4118cc:	subs	w8, w8, w0, uxtb
  4118d0:	str	w8, [sp, #12]
  4118d4:	ldr	w8, [sp, #12]
  4118d8:	str	w8, [sp, #220]
  4118dc:	b	411b3c <server_process_datagram+0x9f8>
  4118e0:	ldur	w8, [x29, #-20]
  4118e4:	ldr	x9, [sp, #176]
  4118e8:	ldr	x10, [x9, #680]
  4118ec:	ldr	w11, [x10, #4]
  4118f0:	cmp	w8, w11
  4118f4:	b.ne	411a14 <server_process_datagram+0x8d0>  // b.any
  4118f8:	ldr	x8, [sp, #176]
  4118fc:	ldr	x9, [x8, #600]
  411900:	cmp	x9, #0x0
  411904:	cset	w10, le
  411908:	tbnz	w10, #0, 411944 <server_process_datagram+0x800>
  41190c:	ldr	x8, [sp, #176]
  411910:	ldr	x9, [x8, #576]
  411914:	cbnz	x9, 411944 <server_process_datagram+0x800>
  411918:	ldr	x8, [sp, #176]
  41191c:	ldr	x0, [x8, #680]
  411920:	ldr	x9, [x8, #680]
  411924:	ldr	x1, [x9, #184]
  411928:	ldr	x2, [x8, #600]
  41192c:	ldr	x3, [x8, #672]
  411930:	ldr	x4, [x8, #664]
  411934:	ldr	x5, [x8, #648]
  411938:	ldr	x6, [x8, #640]
  41193c:	bl	426bb0 <server_process_native_message>
  411940:	b	411a10 <server_process_datagram+0x8cc>
  411944:	ldr	x8, [sp, #176]
  411948:	ldr	x9, [x8, #600]
  41194c:	cbnz	x9, 411988 <server_process_datagram+0x844>
  411950:	ldr	x8, [sp, #176]
  411954:	ldr	x9, [x8, #576]
  411958:	cmp	x9, #0x1
  41195c:	b.ne	411988 <server_process_datagram+0x844>  // b.any
  411960:	ldr	x8, [sp, #176]
  411964:	ldr	x0, [x8, #680]
  411968:	ldr	x9, [x8, #592]
  41196c:	ldr	w1, [x9]
  411970:	ldr	x2, [x8, #672]
  411974:	ldr	x3, [x8, #664]
  411978:	ldr	x4, [x8, #648]
  41197c:	ldr	x5, [x8, #640]
  411980:	bl	427a08 <server_process_native_file>
  411984:	b	411a10 <server_process_datagram+0x8cc>
  411988:	ldr	x8, [sp, #176]
  41198c:	ldr	x9, [x8, #576]
  411990:	cmp	x9, #0x0
  411994:	cset	w10, ls  // ls = plast
  411998:	tbnz	w10, #0, 411a10 <server_process_datagram+0x8cc>
  41199c:	mov	w8, #0x4                   	// #4
  4119a0:	str	w8, [sp, #216]
  4119a4:	str	wzr, [sp, #212]
  4119a8:	str	wzr, [sp, #208]
  4119ac:	ldr	w0, [sp, #208]
  4119b0:	bl	405638 <log_get_max_level_realm@plt>
  4119b4:	ldr	w8, [sp, #216]
  4119b8:	and	w8, w8, #0x7
  4119bc:	cmp	w0, w8
  4119c0:	b.lt	4119f4 <server_process_datagram+0x8b0>  // b.tstop
  4119c4:	ldr	w8, [sp, #208]
  4119c8:	ldr	w9, [sp, #216]
  4119cc:	orr	w0, w9, w8, lsl #10
  4119d0:	ldr	w1, [sp, #212]
  4119d4:	ldr	x2, [sp, #128]
  4119d8:	mov	w3, #0x53f                 	// #1343
  4119dc:	ldr	x4, [sp, #120]
  4119e0:	adrp	x5, 42a000 <_fini+0x3a8>
  4119e4:	add	x5, x5, #0xced
  4119e8:	bl	405648 <log_internal_realm@plt>
  4119ec:	str	w0, [sp, #8]
  4119f0:	b	411a08 <server_process_datagram+0x8c4>
  4119f4:	ldr	w0, [sp, #212]
  4119f8:	bl	405658 <abs@plt>
  4119fc:	mov	w8, wzr
  411a00:	subs	w8, w8, w0, uxtb
  411a04:	str	w8, [sp, #8]
  411a08:	ldr	w8, [sp, #8]
  411a0c:	str	w8, [sp, #204]
  411a10:	b	411b3c <server_process_datagram+0x9f8>
  411a14:	ldur	w8, [x29, #-20]
  411a18:	ldr	x9, [sp, #176]
  411a1c:	ldr	x10, [x9, #680]
  411a20:	ldr	w11, [x10, #16]
  411a24:	cmp	w8, w11
  411a28:	cset	w8, eq  // eq = none
  411a2c:	mov	w11, #0x1                   	// #1
  411a30:	eor	w8, w8, #0x1
  411a34:	eor	w8, w8, w11
  411a38:	eor	w8, w8, w11
  411a3c:	and	w8, w8, #0x1
  411a40:	mov	w0, w8
  411a44:	sxtw	x10, w0
  411a48:	cbz	x10, 411a6c <server_process_datagram+0x928>
  411a4c:	mov	w8, wzr
  411a50:	mov	w0, w8
  411a54:	adrp	x1, 42a000 <_fini+0x3a8>
  411a58:	add	x1, x1, #0xd28
  411a5c:	ldr	x2, [sp, #128]
  411a60:	mov	w3, #0x542                 	// #1346
  411a64:	ldr	x4, [sp, #112]
  411a68:	bl	405718 <log_assert_failed_realm@plt>
  411a6c:	ldr	x8, [sp, #176]
  411a70:	ldr	x9, [x8, #600]
  411a74:	cmp	x9, #0x0
  411a78:	cset	w10, le
  411a7c:	tbnz	w10, #0, 411ab4 <server_process_datagram+0x970>
  411a80:	ldr	x8, [sp, #176]
  411a84:	ldr	x9, [x8, #576]
  411a88:	cbnz	x9, 411ab4 <server_process_datagram+0x970>
  411a8c:	ldr	x8, [sp, #176]
  411a90:	ldr	x0, [x8, #680]
  411a94:	ldr	x9, [x8, #680]
  411a98:	ldr	x1, [x9, #184]
  411a9c:	ldr	x2, [x8, #600]
  411aa0:	ldr	x3, [x8, #672]
  411aa4:	ldr	w5, [sp, #360]
  411aa8:	add	x4, sp, #0x198
  411aac:	bl	4214e4 <server_process_audit_message>
  411ab0:	b	411b3c <server_process_datagram+0x9f8>
  411ab4:	ldr	x8, [sp, #176]
  411ab8:	ldr	x9, [x8, #576]
  411abc:	cmp	x9, #0x0
  411ac0:	cset	w10, ls  // ls = plast
  411ac4:	tbnz	w10, #0, 411b3c <server_process_datagram+0x9f8>
  411ac8:	mov	w8, #0x4                   	// #4
  411acc:	str	w8, [sp, #200]
  411ad0:	str	wzr, [sp, #196]
  411ad4:	str	wzr, [sp, #192]
  411ad8:	ldr	w0, [sp, #192]
  411adc:	bl	405638 <log_get_max_level_realm@plt>
  411ae0:	ldr	w8, [sp, #200]
  411ae4:	and	w8, w8, #0x7
  411ae8:	cmp	w0, w8
  411aec:	b.lt	411b20 <server_process_datagram+0x9dc>  // b.tstop
  411af0:	ldr	w8, [sp, #192]
  411af4:	ldr	w9, [sp, #200]
  411af8:	orr	w0, w9, w8, lsl #10
  411afc:	ldr	w1, [sp, #196]
  411b00:	ldr	x2, [sp, #128]
  411b04:	mov	w3, #0x547                 	// #1351
  411b08:	ldr	x4, [sp, #120]
  411b0c:	adrp	x5, 42a000 <_fini+0x3a8>
  411b10:	add	x5, x5, #0xd3a
  411b14:	bl	405648 <log_internal_realm@plt>
  411b18:	str	w0, [sp, #4]
  411b1c:	b	411b34 <server_process_datagram+0x9f0>
  411b20:	ldr	w0, [sp, #196]
  411b24:	bl	405658 <abs@plt>
  411b28:	mov	w8, wzr
  411b2c:	subs	w8, w8, w0, uxtb
  411b30:	str	w8, [sp, #4]
  411b34:	ldr	w8, [sp, #4]
  411b38:	str	w8, [sp, #188]
  411b3c:	ldr	x8, [sp, #176]
  411b40:	ldr	x0, [x8, #592]
  411b44:	ldr	x1, [x8, #576]
  411b48:	bl	405c88 <close_many@plt>
  411b4c:	stur	wzr, [x29, #-4]
  411b50:	ldur	w0, [x29, #-4]
  411b54:	add	sp, sp, #0x410
  411b58:	ldr	x28, [sp, #16]
  411b5c:	ldp	x29, x30, [sp], #32
  411b60:	ret

0000000000411b64 <ALIGN_TO>:
  411b64:	sub	sp, sp, #0x10
  411b68:	str	x0, [sp, #8]
  411b6c:	str	x1, [sp]
  411b70:	ldr	x8, [sp, #8]
  411b74:	ldr	x9, [sp]
  411b78:	add	x8, x8, x9
  411b7c:	subs	x8, x8, #0x1
  411b80:	ldr	x9, [sp]
  411b84:	subs	x9, x9, #0x1
  411b88:	bic	x0, x8, x9
  411b8c:	add	sp, sp, #0x10
  411b90:	ret

0000000000411b94 <server_schedule_sync>:
  411b94:	sub	sp, sp, #0x40
  411b98:	stp	x29, x30, [sp, #48]
  411b9c:	add	x29, sp, #0x30
  411ba0:	adrp	x8, 42a000 <_fini+0x3a8>
  411ba4:	add	x8, x8, #0x3c8
  411ba8:	add	x2, x8, #0x3
  411bac:	stur	x0, [x29, #-16]
  411bb0:	stur	w1, [x29, #-20]
  411bb4:	str	x2, [sp, #8]
  411bb8:	ldur	x8, [x29, #-16]
  411bbc:	cmp	x8, #0x0
  411bc0:	cset	w9, ne  // ne = any
  411bc4:	mov	w10, #0x1                   	// #1
  411bc8:	eor	w9, w9, #0x1
  411bcc:	eor	w9, w9, w10
  411bd0:	eor	w9, w9, w10
  411bd4:	and	w9, w9, #0x1
  411bd8:	mov	w0, w9
  411bdc:	sxtw	x8, w0
  411be0:	cbz	x8, 411c08 <server_schedule_sync+0x74>
  411be4:	mov	w8, wzr
  411be8:	mov	w0, w8
  411bec:	adrp	x1, 429000 <journal_ratelimit_group_free+0x70>
  411bf0:	add	x1, x1, #0xdc8
  411bf4:	ldr	x2, [sp, #8]
  411bf8:	mov	w3, #0x650                 	// #1616
  411bfc:	adrp	x4, 42a000 <_fini+0x3a8>
  411c00:	add	x4, x4, #0xd6b
  411c04:	bl	405718 <log_assert_failed_realm@plt>
  411c08:	ldur	w8, [x29, #-20]
  411c0c:	cmp	w8, #0x2
  411c10:	b.gt	411c24 <server_schedule_sync+0x90>
  411c14:	ldur	x0, [x29, #-16]
  411c18:	bl	40aa94 <server_sync>
  411c1c:	stur	wzr, [x29, #-4]
  411c20:	b	411d90 <server_schedule_sync+0x1fc>
  411c24:	ldur	x8, [x29, #-16]
  411c28:	ldrb	w9, [x8, #592]
  411c2c:	mov	w10, #0x3                   	// #3
  411c30:	lsr	w9, w9, w10
  411c34:	and	w9, w9, #0x1
  411c38:	tbnz	w9, #0, 411c40 <server_schedule_sync+0xac>
  411c3c:	b	411c48 <server_schedule_sync+0xb4>
  411c40:	stur	wzr, [x29, #-4]
  411c44:	b	411d90 <server_schedule_sync+0x1fc>
  411c48:	ldur	x8, [x29, #-16]
  411c4c:	ldr	x8, [x8, #208]
  411c50:	cmp	x8, #0x0
  411c54:	cset	w9, ls  // ls = plast
  411c58:	tbnz	w9, #0, 411d8c <server_schedule_sync+0x1f8>
  411c5c:	ldur	x8, [x29, #-16]
  411c60:	ldr	x0, [x8, #32]
  411c64:	mov	w1, #0x1                   	// #1
  411c68:	add	x2, sp, #0x10
  411c6c:	bl	405c98 <sd_event_now@plt>
  411c70:	str	w0, [sp, #24]
  411c74:	ldr	w9, [sp, #24]
  411c78:	cmp	w9, #0x0
  411c7c:	cset	w9, ge  // ge = tcont
  411c80:	tbnz	w9, #0, 411c90 <server_schedule_sync+0xfc>
  411c84:	ldr	w8, [sp, #24]
  411c88:	stur	w8, [x29, #-4]
  411c8c:	b	411d90 <server_schedule_sync+0x1fc>
  411c90:	ldur	x8, [x29, #-16]
  411c94:	ldr	x8, [x8, #208]
  411c98:	ldr	x9, [sp, #16]
  411c9c:	add	x8, x9, x8
  411ca0:	str	x8, [sp, #16]
  411ca4:	ldur	x8, [x29, #-16]
  411ca8:	ldr	x8, [x8, #80]
  411cac:	cbnz	x8, 411d18 <server_schedule_sync+0x184>
  411cb0:	ldur	x8, [x29, #-16]
  411cb4:	ldr	x0, [x8, #32]
  411cb8:	ldur	x8, [x29, #-16]
  411cbc:	add	x1, x8, #0x50
  411cc0:	ldr	x3, [sp, #16]
  411cc4:	ldur	x6, [x29, #-16]
  411cc8:	mov	w2, #0x1                   	// #1
  411ccc:	mov	x8, xzr
  411cd0:	mov	x4, x8
  411cd4:	adrp	x5, 411000 <shall_try_append_again+0x458>
  411cd8:	add	x5, x5, #0xda0
  411cdc:	bl	405ca8 <sd_event_add_time@plt>
  411ce0:	str	w0, [sp, #24]
  411ce4:	ldr	w9, [sp, #24]
  411ce8:	cmp	w9, #0x0
  411cec:	cset	w9, ge  // ge = tcont
  411cf0:	tbnz	w9, #0, 411d00 <server_schedule_sync+0x16c>
  411cf4:	ldr	w8, [sp, #24]
  411cf8:	stur	w8, [x29, #-4]
  411cfc:	b	411d90 <server_schedule_sync+0x1fc>
  411d00:	ldur	x8, [x29, #-16]
  411d04:	ldr	x0, [x8, #80]
  411d08:	mov	x1, #0xffffffffffffff9c    	// #-100
  411d0c:	bl	4058b8 <sd_event_source_set_priority@plt>
  411d10:	str	w0, [sp, #24]
  411d14:	b	411d5c <server_schedule_sync+0x1c8>
  411d18:	ldur	x8, [x29, #-16]
  411d1c:	ldr	x0, [x8, #80]
  411d20:	ldr	x1, [sp, #16]
  411d24:	bl	405cb8 <sd_event_source_set_time@plt>
  411d28:	str	w0, [sp, #24]
  411d2c:	ldr	w9, [sp, #24]
  411d30:	cmp	w9, #0x0
  411d34:	cset	w9, ge  // ge = tcont
  411d38:	tbnz	w9, #0, 411d48 <server_schedule_sync+0x1b4>
  411d3c:	ldr	w8, [sp, #24]
  411d40:	stur	w8, [x29, #-4]
  411d44:	b	411d90 <server_schedule_sync+0x1fc>
  411d48:	ldur	x8, [x29, #-16]
  411d4c:	ldr	x0, [x8, #80]
  411d50:	mov	w1, #0xffffffff            	// #-1
  411d54:	bl	405a98 <sd_event_source_set_enabled@plt>
  411d58:	str	w0, [sp, #24]
  411d5c:	ldr	w8, [sp, #24]
  411d60:	cmp	w8, #0x0
  411d64:	cset	w8, ge  // ge = tcont
  411d68:	tbnz	w8, #0, 411d78 <server_schedule_sync+0x1e4>
  411d6c:	ldr	w8, [sp, #24]
  411d70:	stur	w8, [x29, #-4]
  411d74:	b	411d90 <server_schedule_sync+0x1fc>
  411d78:	ldur	x8, [x29, #-16]
  411d7c:	ldrb	w9, [x8, #592]
  411d80:	and	w9, w9, #0xfffffff7
  411d84:	orr	w9, w9, #0x8
  411d88:	strb	w9, [x8, #592]
  411d8c:	stur	wzr, [x29, #-4]
  411d90:	ldur	w0, [x29, #-4]
  411d94:	ldp	x29, x30, [sp, #48]
  411d98:	add	sp, sp, #0x40
  411d9c:	ret

0000000000411da0 <server_dispatch_sync>:
  411da0:	sub	sp, sp, #0x40
  411da4:	stp	x29, x30, [sp, #48]
  411da8:	add	x29, sp, #0x30
  411dac:	adrp	x8, 42a000 <_fini+0x3a8>
  411db0:	add	x8, x8, #0x3c8
  411db4:	add	x8, x8, #0x3
  411db8:	stur	x0, [x29, #-8]
  411dbc:	stur	x1, [x29, #-16]
  411dc0:	str	x2, [sp, #24]
  411dc4:	ldr	x9, [sp, #24]
  411dc8:	str	x9, [sp, #16]
  411dcc:	str	x8, [sp, #8]
  411dd0:	ldr	x8, [sp, #16]
  411dd4:	cmp	x8, #0x0
  411dd8:	cset	w9, ne  // ne = any
  411ddc:	mov	w10, #0x1                   	// #1
  411de0:	eor	w9, w9, #0x1
  411de4:	eor	w9, w9, w10
  411de8:	eor	w9, w9, w10
  411dec:	and	w9, w9, #0x1
  411df0:	mov	w0, w9
  411df4:	sxtw	x8, w0
  411df8:	cbz	x8, 411e20 <server_dispatch_sync+0x80>
  411dfc:	mov	w8, wzr
  411e00:	mov	w0, w8
  411e04:	adrp	x1, 429000 <journal_ratelimit_group_free+0x70>
  411e08:	add	x1, x1, #0xdc8
  411e0c:	ldr	x2, [sp, #8]
  411e10:	mov	w3, #0x647                 	// #1607
  411e14:	adrp	x4, 42c000 <_fini+0x23a8>
  411e18:	add	x4, x4, #0x11d
  411e1c:	bl	405718 <log_assert_failed_realm@plt>
  411e20:	ldr	x0, [sp, #16]
  411e24:	bl	40aa94 <server_sync>
  411e28:	mov	w8, wzr
  411e2c:	mov	w0, w8
  411e30:	ldp	x29, x30, [sp, #48]
  411e34:	add	sp, sp, #0x40
  411e38:	ret

0000000000411e3c <server_init>:
  411e3c:	stp	x29, x30, [sp, #-32]!
  411e40:	str	x28, [sp, #16]
  411e44:	mov	x29, sp
  411e48:	sub	sp, sp, #0x430
  411e4c:	add	x8, sp, #0x108
  411e50:	mov	x9, xzr
  411e54:	adrp	x10, 42a000 <_fini+0x3a8>
  411e58:	add	x10, x10, #0x3c8
  411e5c:	add	x10, x10, #0x3
  411e60:	adrp	x11, 42a000 <_fini+0x3a8>
  411e64:	add	x11, x11, #0xdcc
  411e68:	str	x0, [x8, #792]
  411e6c:	str	x9, [x8, #784]
  411e70:	str	x8, [sp, #104]
  411e74:	str	x10, [sp, #96]
  411e78:	str	x11, [sp, #88]
  411e7c:	ldr	x8, [sp, #104]
  411e80:	ldr	x9, [x8, #792]
  411e84:	cmp	x9, #0x0
  411e88:	cset	w10, ne  // ne = any
  411e8c:	mov	w11, #0x1                   	// #1
  411e90:	eor	w10, w10, #0x1
  411e94:	eor	w10, w10, w11
  411e98:	eor	w10, w10, w11
  411e9c:	and	w10, w10, #0x1
  411ea0:	mov	w0, w10
  411ea4:	sxtw	x9, w0
  411ea8:	cbz	x9, 411ed0 <server_init+0x94>
  411eac:	mov	w8, wzr
  411eb0:	mov	w0, w8
  411eb4:	adrp	x1, 429000 <journal_ratelimit_group_free+0x70>
  411eb8:	add	x1, x1, #0xdc8
  411ebc:	ldr	x2, [sp, #96]
  411ec0:	mov	w3, #0x7cd                 	// #1997
  411ec4:	adrp	x4, 42a000 <_fini+0x3a8>
  411ec8:	add	x4, x4, #0xd93
  411ecc:	bl	405718 <log_assert_failed_realm@plt>
  411ed0:	ldr	x8, [sp, #104]
  411ed4:	ldr	x0, [x8, #792]
  411ed8:	add	x9, sp, #0x108
  411edc:	str	x0, [sp, #80]
  411ee0:	mov	x0, x9
  411ee4:	mov	w10, wzr
  411ee8:	mov	w1, w10
  411eec:	mov	x11, #0x300                 	// #768
  411ef0:	mov	x2, x11
  411ef4:	str	x9, [sp, #72]
  411ef8:	str	x11, [sp, #64]
  411efc:	bl	405c28 <memset@plt>
  411f00:	mov	w10, #0xffffffff            	// #-1
  411f04:	str	w10, [sp, #264]
  411f08:	str	w10, [sp, #268]
  411f0c:	str	w10, [sp, #272]
  411f10:	str	w10, [sp, #276]
  411f14:	str	w10, [sp, #280]
  411f18:	str	w10, [sp, #284]
  411f1c:	str	w10, [sp, #288]
  411f20:	mov	x8, #0xa300                	// #41728
  411f24:	movk	x8, #0x11e1, lsl #16
  411f28:	ldr	x9, [sp, #104]
  411f2c:	str	x8, [x9, #208]
  411f30:	mov	x8, #0xc380                	// #50048
  411f34:	movk	x8, #0x1c9, lsl #16
  411f38:	str	x8, [x9, #216]
  411f3c:	mov	w10, #0x2710                	// #10000
  411f40:	str	w10, [sp, #488]
  411f44:	adrp	x8, 42a000 <_fini+0x3a8>
  411f48:	add	x8, x8, #0xdad
  411f4c:	ldr	x11, [sp, #72]
  411f50:	str	x8, [x11, #232]
  411f54:	adrp	x8, 42a000 <_fini+0x3a8>
  411f58:	add	x8, x8, #0xdbd
  411f5c:	str	x8, [x11, #336]
  411f60:	mov	w10, #0x1                   	// #1
  411f64:	strb	w10, [x11, #440]
  411f68:	mov	x8, #0xffffffffffffffff    	// #-1
  411f6c:	str	x8, [x9, #448]
  411f70:	strb	w10, [x11, #456]
  411f74:	strb	w10, [x11, #457]
  411f78:	strb	w10, [x11, #461]
  411f7c:	mov	x12, #0x7a00                	// #31232
  411f80:	movk	x12, #0x4c4b, lsl #16
  411f84:	movk	x12, #0x264, lsl #32
  411f88:	str	x12, [x9, #488]
  411f8c:	mov	w10, #0x7                   	// #7
  411f90:	str	w10, [sp, #800]
  411f94:	str	w10, [sp, #804]
  411f98:	mov	w10, #0x5                   	// #5
  411f9c:	str	w10, [sp, #808]
  411fa0:	mov	w10, #0x6                   	// #6
  411fa4:	str	w10, [sp, #812]
  411fa8:	ldrb	w10, [x11, #592]
  411fac:	and	w10, w10, #0xfffffff7
  411fb0:	strb	w10, [x11, #592]
  411fb4:	str	x8, [x9, #696]
  411fb8:	mov	x8, #0xc000                	// #49152
  411fbc:	str	x8, [x9, #712]
  411fc0:	ldr	x0, [sp, #80]
  411fc4:	mov	x1, x11
  411fc8:	ldr	x2, [sp, #64]
  411fcc:	bl	405af8 <memcpy@plt>
  411fd0:	ldr	x8, [sp, #104]
  411fd4:	ldr	x9, [x8, #792]
  411fd8:	add	x0, x9, #0x160
  411fdc:	bl	405cc8 <journal_reset_metrics@plt>
  411fe0:	ldr	x8, [sp, #104]
  411fe4:	ldr	x9, [x8, #792]
  411fe8:	add	x0, x9, #0xf8
  411fec:	bl	405cc8 <journal_reset_metrics@plt>
  411ff0:	ldr	x8, [sp, #104]
  411ff4:	ldr	x0, [x8, #792]
  411ff8:	bl	412d4c <server_parse_config_file>
  411ffc:	ldr	x8, [sp, #104]
  412000:	ldr	x1, [x8, #792]
  412004:	adrp	x9, 412000 <server_init+0x1c4>
  412008:	add	x9, x9, #0xdfc
  41200c:	mov	x0, x9
  412010:	mov	w2, #0x1                   	// #1
  412014:	bl	405cd8 <proc_cmdline_parse@plt>
  412018:	stur	w0, [x29, #-32]
  41201c:	ldur	w10, [x29, #-32]
  412020:	cmp	w10, #0x0
  412024:	cset	w10, ge  // ge = tcont
  412028:	tbnz	w10, #0, 4120a4 <server_init+0x268>
  41202c:	mov	w8, #0x4                   	// #4
  412030:	str	w8, [sp, #260]
  412034:	ldur	w8, [x29, #-32]
  412038:	str	w8, [sp, #256]
  41203c:	str	wzr, [sp, #252]
  412040:	ldr	w0, [sp, #252]
  412044:	bl	405638 <log_get_max_level_realm@plt>
  412048:	ldr	w8, [sp, #260]
  41204c:	and	w8, w8, #0x7
  412050:	cmp	w0, w8
  412054:	b.lt	412088 <server_init+0x24c>  // b.tstop
  412058:	ldr	w8, [sp, #252]
  41205c:	ldr	w9, [sp, #260]
  412060:	orr	w0, w9, w8, lsl #10
  412064:	ldr	w1, [sp, #256]
  412068:	ldr	x2, [sp, #96]
  41206c:	mov	w3, #0x7fc                 	// #2044
  412070:	ldr	x4, [sp, #88]
  412074:	adrp	x5, 42a000 <_fini+0x3a8>
  412078:	add	x5, x5, #0xdd8
  41207c:	bl	405648 <log_internal_realm@plt>
  412080:	str	w0, [sp, #60]
  412084:	b	41209c <server_init+0x260>
  412088:	ldr	w0, [sp, #256]
  41208c:	bl	405658 <abs@plt>
  412090:	mov	w8, wzr
  412094:	subs	w8, w8, w0, uxtb
  412098:	str	w8, [sp, #60]
  41209c:	ldr	w8, [sp, #60]
  4120a0:	str	w8, [sp, #248]
  4120a4:	ldr	x8, [sp, #104]
  4120a8:	ldr	x9, [x8, #792]
  4120ac:	ldr	x9, [x9, #216]
  4120b0:	cmp	x9, #0x0
  4120b4:	cset	w10, ne  // ne = any
  4120b8:	mov	w11, #0x1                   	// #1
  4120bc:	eor	w10, w10, #0x1
  4120c0:	eor	w10, w10, w11
  4120c4:	and	w10, w10, #0x1
  4120c8:	ldr	x9, [x8, #792]
  4120cc:	ldr	w12, [x9, #224]
  4120d0:	cmp	w12, #0x0
  4120d4:	cset	w12, ne  // ne = any
  4120d8:	eor	w12, w12, w11
  4120dc:	eor	w11, w12, w11
  4120e0:	and	w11, w11, #0x1
  4120e4:	eor	w10, w10, w11
  4120e8:	cbz	w10, 412188 <server_init+0x34c>
  4120ec:	mov	w8, #0x7                   	// #7
  4120f0:	str	w8, [sp, #244]
  4120f4:	str	wzr, [sp, #240]
  4120f8:	str	wzr, [sp, #236]
  4120fc:	ldr	w0, [sp, #236]
  412100:	bl	405638 <log_get_max_level_realm@plt>
  412104:	ldr	w8, [sp, #244]
  412108:	and	w8, w8, #0x7
  41210c:	cmp	w0, w8
  412110:	b.lt	412158 <server_init+0x31c>  // b.tstop
  412114:	ldr	w8, [sp, #236]
  412118:	ldr	w9, [sp, #244]
  41211c:	orr	w0, w9, w8, lsl #10
  412120:	ldr	w1, [sp, #240]
  412124:	ldr	x10, [sp, #104]
  412128:	ldr	x11, [x10, #792]
  41212c:	ldr	x6, [x11, #216]
  412130:	ldr	x11, [x10, #792]
  412134:	ldr	w7, [x11, #224]
  412138:	ldr	x2, [sp, #96]
  41213c:	mov	w3, #0x800                 	// #2048
  412140:	ldr	x4, [sp, #88]
  412144:	adrp	x5, 42a000 <_fini+0x3a8>
  412148:	add	x5, x5, #0xe0a
  41214c:	bl	405648 <log_internal_realm@plt>
  412150:	str	w0, [sp, #56]
  412154:	b	41216c <server_init+0x330>
  412158:	ldr	w0, [sp, #240]
  41215c:	bl	405658 <abs@plt>
  412160:	mov	w8, wzr
  412164:	subs	w8, w8, w0, uxtb
  412168:	str	w8, [sp, #56]
  41216c:	ldr	w8, [sp, #56]
  412170:	str	w8, [sp, #232]
  412174:	ldr	x9, [sp, #104]
  412178:	ldr	x10, [x9, #792]
  41217c:	str	wzr, [x10, #224]
  412180:	ldr	x10, [x9, #792]
  412184:	str	xzr, [x10, #216]
  412188:	adrp	x0, 42a000 <_fini+0x3a8>
  41218c:	add	x0, x0, #0xe48
  412190:	mov	w1, #0x1ed                 	// #493
  412194:	bl	405bf8 <mkdir_p@plt>
  412198:	mov	x8, xzr
  41219c:	mov	x0, x8
  4121a0:	bl	405ce8 <internal_ordered_hashmap_new@plt>
  4121a4:	ldr	x8, [sp, #104]
  4121a8:	ldr	x9, [x8, #792]
  4121ac:	str	x0, [x9, #168]
  4121b0:	ldr	x9, [x8, #792]
  4121b4:	ldr	x9, [x9, #168]
  4121b8:	cbnz	x9, 4121e4 <server_init+0x3a8>
  4121bc:	mov	w8, wzr
  4121c0:	mov	w0, w8
  4121c4:	ldr	x1, [sp, #96]
  4121c8:	mov	w2, #0x808                 	// #2056
  4121cc:	ldr	x3, [sp, #88]
  4121d0:	bl	405958 <log_oom_internal@plt>
  4121d4:	stur	w0, [x29, #-4]
  4121d8:	mov	w8, #0x1                   	// #1
  4121dc:	str	w8, [sp, #228]
  4121e0:	b	412cfc <server_init+0xec0>
  4121e4:	bl	405cf8 <mmap_cache_new@plt>
  4121e8:	ldr	x8, [sp, #104]
  4121ec:	ldr	x9, [x8, #792]
  4121f0:	str	x0, [x9, #568]
  4121f4:	ldr	x9, [x8, #792]
  4121f8:	ldr	x9, [x9, #568]
  4121fc:	cbnz	x9, 412228 <server_init+0x3ec>
  412200:	mov	w8, wzr
  412204:	mov	w0, w8
  412208:	ldr	x1, [sp, #96]
  41220c:	mov	w2, #0x80c                 	// #2060
  412210:	ldr	x3, [sp, #88]
  412214:	bl	405958 <log_oom_internal@plt>
  412218:	stur	w0, [x29, #-4]
  41221c:	mov	w8, #0x1                   	// #1
  412220:	str	w8, [sp, #228]
  412224:	b	412cfc <server_init+0xec0>
  412228:	mov	x8, xzr
  41222c:	mov	x0, x8
  412230:	bl	405d08 <internal_set_new@plt>
  412234:	ldr	x8, [sp, #104]
  412238:	ldr	x9, [x8, #792]
  41223c:	str	x0, [x9, #576]
  412240:	ldr	x9, [x8, #792]
  412244:	ldr	x9, [x9, #576]
  412248:	cbnz	x9, 412274 <server_init+0x438>
  41224c:	mov	w8, wzr
  412250:	mov	w0, w8
  412254:	ldr	x1, [sp, #96]
  412258:	mov	w2, #0x810                 	// #2064
  41225c:	ldr	x3, [sp, #88]
  412260:	bl	405958 <log_oom_internal@plt>
  412264:	stur	w0, [x29, #-4]
  412268:	mov	w8, #0x1                   	// #1
  41226c:	str	w8, [sp, #228]
  412270:	b	412cfc <server_init+0xec0>
  412274:	ldr	x8, [sp, #104]
  412278:	ldr	x9, [x8, #792]
  41227c:	add	x0, x9, #0x20
  412280:	bl	405d18 <sd_event_default@plt>
  412284:	stur	w0, [x29, #-32]
  412288:	ldur	w10, [x29, #-32]
  41228c:	cmp	w10, #0x0
  412290:	cset	w10, ge  // ge = tcont
  412294:	tbnz	w10, #0, 412324 <server_init+0x4e8>
  412298:	mov	w8, #0x3                   	// #3
  41229c:	str	w8, [sp, #224]
  4122a0:	ldur	w8, [x29, #-32]
  4122a4:	str	w8, [sp, #220]
  4122a8:	str	wzr, [sp, #216]
  4122ac:	ldr	w0, [sp, #216]
  4122b0:	bl	405638 <log_get_max_level_realm@plt>
  4122b4:	ldr	w8, [sp, #224]
  4122b8:	and	w8, w8, #0x7
  4122bc:	cmp	w0, w8
  4122c0:	b.lt	4122f4 <server_init+0x4b8>  // b.tstop
  4122c4:	ldr	w8, [sp, #216]
  4122c8:	ldr	w9, [sp, #224]
  4122cc:	orr	w0, w9, w8, lsl #10
  4122d0:	ldr	w1, [sp, #220]
  4122d4:	ldr	x2, [sp, #96]
  4122d8:	mov	w3, #0x814                 	// #2068
  4122dc:	ldr	x4, [sp, #88]
  4122e0:	adrp	x5, 42a000 <_fini+0x3a8>
  4122e4:	add	x5, x5, #0xe5d
  4122e8:	bl	405648 <log_internal_realm@plt>
  4122ec:	str	w0, [sp, #52]
  4122f0:	b	412308 <server_init+0x4cc>
  4122f4:	ldr	w0, [sp, #220]
  4122f8:	bl	405658 <abs@plt>
  4122fc:	mov	w8, wzr
  412300:	subs	w8, w8, w0, uxtb
  412304:	str	w8, [sp, #52]
  412308:	ldr	w8, [sp, #52]
  41230c:	str	w8, [sp, #212]
  412310:	ldr	w8, [sp, #212]
  412314:	stur	w8, [x29, #-4]
  412318:	mov	w8, #0x1                   	// #1
  41231c:	str	w8, [sp, #228]
  412320:	b	412cfc <server_init+0xec0>
  412324:	mov	w0, #0x1                   	// #1
  412328:	bl	405d28 <sd_listen_fds@plt>
  41232c:	stur	w0, [x29, #-28]
  412330:	ldur	w8, [x29, #-28]
  412334:	cmp	w8, #0x0
  412338:	cset	w8, ge  // ge = tcont
  41233c:	tbnz	w8, #0, 4123cc <server_init+0x590>
  412340:	mov	w8, #0x3                   	// #3
  412344:	str	w8, [sp, #208]
  412348:	ldur	w8, [x29, #-28]
  41234c:	str	w8, [sp, #204]
  412350:	str	wzr, [sp, #200]
  412354:	ldr	w0, [sp, #200]
  412358:	bl	405638 <log_get_max_level_realm@plt>
  41235c:	ldr	w8, [sp, #208]
  412360:	and	w8, w8, #0x7
  412364:	cmp	w0, w8
  412368:	b.lt	41239c <server_init+0x560>  // b.tstop
  41236c:	ldr	w8, [sp, #200]
  412370:	ldr	w9, [sp, #208]
  412374:	orr	w0, w9, w8, lsl #10
  412378:	ldr	w1, [sp, #204]
  41237c:	ldr	x2, [sp, #96]
  412380:	mov	w3, #0x818                 	// #2072
  412384:	ldr	x4, [sp, #88]
  412388:	adrp	x5, 42a000 <_fini+0x3a8>
  41238c:	add	x5, x5, #0xe7d
  412390:	bl	405648 <log_internal_realm@plt>
  412394:	str	w0, [sp, #48]
  412398:	b	4123b0 <server_init+0x574>
  41239c:	ldr	w0, [sp, #204]
  4123a0:	bl	405658 <abs@plt>
  4123a4:	mov	w8, wzr
  4123a8:	subs	w8, w8, w0, uxtb
  4123ac:	str	w8, [sp, #48]
  4123b0:	ldr	w8, [sp, #48]
  4123b4:	str	w8, [sp, #196]
  4123b8:	ldr	w8, [sp, #196]
  4123bc:	stur	w8, [x29, #-4]
  4123c0:	mov	w8, #0x1                   	// #1
  4123c4:	str	w8, [sp, #228]
  4123c8:	b	412cfc <server_init+0xec0>
  4123cc:	mov	w8, #0x3                   	// #3
  4123d0:	stur	w8, [x29, #-36]
  4123d4:	ldur	w8, [x29, #-36]
  4123d8:	ldur	w9, [x29, #-28]
  4123dc:	add	w9, w9, #0x3
  4123e0:	cmp	w8, w9
  4123e4:	b.ge	412850 <server_init+0xa14>  // b.tcont
  4123e8:	ldur	w0, [x29, #-36]
  4123ec:	mov	w1, #0x2                   	// #2
  4123f0:	mov	w2, #0xffffffff            	// #-1
  4123f4:	adrp	x3, 42a000 <_fini+0x3a8>
  4123f8:	add	x3, x3, #0xebc
  4123fc:	mov	x8, xzr
  412400:	mov	x4, x8
  412404:	bl	405d38 <sd_is_socket_unix@plt>
  412408:	cmp	w0, #0x0
  41240c:	cset	w9, le
  412410:	tbnz	w9, #0, 4124d0 <server_init+0x694>
  412414:	ldr	x8, [sp, #104]
  412418:	ldr	x9, [x8, #792]
  41241c:	ldr	w10, [x9, #4]
  412420:	cmp	w10, #0x0
  412424:	cset	w10, lt  // lt = tstop
  412428:	tbnz	w10, #0, 4124bc <server_init+0x680>
  41242c:	mov	w8, #0x3                   	// #3
  412430:	str	w8, [sp, #192]
  412434:	mov	w8, #0x16                  	// #22
  412438:	movk	w8, #0x4000, lsl #16
  41243c:	str	w8, [sp, #188]
  412440:	str	wzr, [sp, #184]
  412444:	ldr	w0, [sp, #184]
  412448:	bl	405638 <log_get_max_level_realm@plt>
  41244c:	ldr	w8, [sp, #192]
  412450:	and	w8, w8, #0x7
  412454:	cmp	w0, w8
  412458:	b.lt	41248c <server_init+0x650>  // b.tstop
  41245c:	ldr	w8, [sp, #184]
  412460:	ldr	w9, [sp, #192]
  412464:	orr	w0, w9, w8, lsl #10
  412468:	ldr	w1, [sp, #188]
  41246c:	ldr	x2, [sp, #96]
  412470:	mov	w3, #0x820                 	// #2080
  412474:	ldr	x4, [sp, #88]
  412478:	adrp	x5, 42a000 <_fini+0x3a8>
  41247c:	add	x5, x5, #0xed8
  412480:	bl	405648 <log_internal_realm@plt>
  412484:	str	w0, [sp, #44]
  412488:	b	4124a0 <server_init+0x664>
  41248c:	ldr	w0, [sp, #188]
  412490:	bl	405658 <abs@plt>
  412494:	mov	w8, wzr
  412498:	subs	w8, w8, w0, uxtb
  41249c:	str	w8, [sp, #44]
  4124a0:	ldr	w8, [sp, #44]
  4124a4:	str	w8, [sp, #180]
  4124a8:	ldr	w8, [sp, #180]
  4124ac:	stur	w8, [x29, #-4]
  4124b0:	mov	w8, #0x1                   	// #1
  4124b4:	str	w8, [sp, #228]
  4124b8:	b	412cfc <server_init+0xec0>
  4124bc:	ldur	w8, [x29, #-36]
  4124c0:	ldr	x9, [sp, #104]
  4124c4:	ldr	x10, [x9, #792]
  4124c8:	str	w8, [x10, #4]
  4124cc:	b	412840 <server_init+0xa04>
  4124d0:	ldur	w0, [x29, #-36]
  4124d4:	mov	w8, #0x1                   	// #1
  4124d8:	mov	w1, w8
  4124dc:	mov	w2, w8
  4124e0:	adrp	x3, 42a000 <_fini+0x3a8>
  4124e4:	add	x3, x3, #0xef8
  4124e8:	mov	x9, xzr
  4124ec:	mov	x4, x9
  4124f0:	bl	405d38 <sd_is_socket_unix@plt>
  4124f4:	cmp	w0, #0x0
  4124f8:	cset	w8, le
  4124fc:	tbnz	w8, #0, 4125bc <server_init+0x780>
  412500:	ldr	x8, [sp, #104]
  412504:	ldr	x9, [x8, #792]
  412508:	ldr	w10, [x9, #8]
  41250c:	cmp	w10, #0x0
  412510:	cset	w10, lt  // lt = tstop
  412514:	tbnz	w10, #0, 4125a8 <server_init+0x76c>
  412518:	mov	w8, #0x3                   	// #3
  41251c:	str	w8, [sp, #176]
  412520:	mov	w8, #0x16                  	// #22
  412524:	movk	w8, #0x4000, lsl #16
  412528:	str	w8, [sp, #172]
  41252c:	str	wzr, [sp, #168]
  412530:	ldr	w0, [sp, #168]
  412534:	bl	405638 <log_get_max_level_realm@plt>
  412538:	ldr	w8, [sp, #176]
  41253c:	and	w8, w8, #0x7
  412540:	cmp	w0, w8
  412544:	b.lt	412578 <server_init+0x73c>  // b.tstop
  412548:	ldr	w8, [sp, #168]
  41254c:	ldr	w9, [sp, #176]
  412550:	orr	w0, w9, w8, lsl #10
  412554:	ldr	w1, [sp, #172]
  412558:	ldr	x2, [sp, #96]
  41255c:	mov	w3, #0x828                 	// #2088
  412560:	ldr	x4, [sp, #88]
  412564:	adrp	x5, 42a000 <_fini+0x3a8>
  412568:	add	x5, x5, #0xf14
  41256c:	bl	405648 <log_internal_realm@plt>
  412570:	str	w0, [sp, #40]
  412574:	b	41258c <server_init+0x750>
  412578:	ldr	w0, [sp, #172]
  41257c:	bl	405658 <abs@plt>
  412580:	mov	w8, wzr
  412584:	subs	w8, w8, w0, uxtb
  412588:	str	w8, [sp, #40]
  41258c:	ldr	w8, [sp, #40]
  412590:	str	w8, [sp, #164]
  412594:	ldr	w8, [sp, #164]
  412598:	stur	w8, [x29, #-4]
  41259c:	mov	w8, #0x1                   	// #1
  4125a0:	str	w8, [sp, #228]
  4125a4:	b	412cfc <server_init+0xec0>
  4125a8:	ldur	w8, [x29, #-36]
  4125ac:	ldr	x9, [sp, #104]
  4125b0:	ldr	x10, [x9, #792]
  4125b4:	str	w8, [x10, #8]
  4125b8:	b	412840 <server_init+0xa04>
  4125bc:	ldur	w0, [x29, #-36]
  4125c0:	mov	w1, #0x2                   	// #2
  4125c4:	mov	w2, #0xffffffff            	// #-1
  4125c8:	adrp	x3, 42a000 <_fini+0x3a8>
  4125cc:	add	x3, x3, #0xf34
  4125d0:	mov	x8, xzr
  4125d4:	mov	x4, x8
  4125d8:	bl	405d38 <sd_is_socket_unix@plt>
  4125dc:	cmp	w0, #0x0
  4125e0:	cset	w9, gt
  4125e4:	tbnz	w9, #0, 412614 <server_init+0x7d8>
  4125e8:	ldur	w0, [x29, #-36]
  4125ec:	mov	w1, #0x2                   	// #2
  4125f0:	mov	w2, #0xffffffff            	// #-1
  4125f4:	adrp	x3, 42a000 <_fini+0x3a8>
  4125f8:	add	x3, x3, #0xf3d
  4125fc:	mov	x8, xzr
  412600:	mov	x4, x8
  412604:	bl	405d38 <sd_is_socket_unix@plt>
  412608:	cmp	w0, #0x0
  41260c:	cset	w9, le
  412610:	tbnz	w9, #0, 4126d0 <server_init+0x894>
  412614:	ldr	x8, [sp, #104]
  412618:	ldr	x9, [x8, #792]
  41261c:	ldr	w10, [x9]
  412620:	cmp	w10, #0x0
  412624:	cset	w10, lt  // lt = tstop
  412628:	tbnz	w10, #0, 4126bc <server_init+0x880>
  41262c:	mov	w8, #0x3                   	// #3
  412630:	str	w8, [sp, #160]
  412634:	mov	w8, #0x16                  	// #22
  412638:	movk	w8, #0x4000, lsl #16
  41263c:	str	w8, [sp, #156]
  412640:	str	wzr, [sp, #152]
  412644:	ldr	w0, [sp, #152]
  412648:	bl	405638 <log_get_max_level_realm@plt>
  41264c:	ldr	w8, [sp, #160]
  412650:	and	w8, w8, #0x7
  412654:	cmp	w0, w8
  412658:	b.lt	41268c <server_init+0x850>  // b.tstop
  41265c:	ldr	w8, [sp, #152]
  412660:	ldr	w9, [sp, #160]
  412664:	orr	w0, w9, w8, lsl #10
  412668:	ldr	w1, [sp, #156]
  41266c:	ldr	x2, [sp, #96]
  412670:	mov	w3, #0x831                 	// #2097
  412674:	ldr	x4, [sp, #88]
  412678:	adrp	x5, 42a000 <_fini+0x3a8>
  41267c:	add	x5, x5, #0xf5a
  412680:	bl	405648 <log_internal_realm@plt>
  412684:	str	w0, [sp, #36]
  412688:	b	4126a0 <server_init+0x864>
  41268c:	ldr	w0, [sp, #156]
  412690:	bl	405658 <abs@plt>
  412694:	mov	w8, wzr
  412698:	subs	w8, w8, w0, uxtb
  41269c:	str	w8, [sp, #36]
  4126a0:	ldr	w8, [sp, #36]
  4126a4:	str	w8, [sp, #148]
  4126a8:	ldr	w8, [sp, #148]
  4126ac:	stur	w8, [x29, #-4]
  4126b0:	mov	w8, #0x1                   	// #1
  4126b4:	str	w8, [sp, #228]
  4126b8:	b	412cfc <server_init+0xec0>
  4126bc:	ldur	w8, [x29, #-36]
  4126c0:	ldr	x9, [sp, #104]
  4126c4:	ldr	x10, [x9, #792]
  4126c8:	str	w8, [x10]
  4126cc:	b	412840 <server_init+0xa04>
  4126d0:	ldur	w0, [x29, #-36]
  4126d4:	mov	w1, #0x10                  	// #16
  4126d8:	mov	w2, #0x3                   	// #3
  4126dc:	mov	w3, #0xffffffff            	// #-1
  4126e0:	bl	405d48 <sd_is_socket@plt>
  4126e4:	cmp	w0, #0x0
  4126e8:	cset	w8, le
  4126ec:	tbnz	w8, #0, 4127ac <server_init+0x970>
  4126f0:	ldr	x8, [sp, #104]
  4126f4:	ldr	x9, [x8, #792]
  4126f8:	ldr	w10, [x9, #16]
  4126fc:	cmp	w10, #0x0
  412700:	cset	w10, lt  // lt = tstop
  412704:	tbnz	w10, #0, 412798 <server_init+0x95c>
  412708:	mov	w8, #0x3                   	// #3
  41270c:	str	w8, [sp, #144]
  412710:	mov	w8, #0x16                  	// #22
  412714:	movk	w8, #0x4000, lsl #16
  412718:	str	w8, [sp, #140]
  41271c:	str	wzr, [sp, #136]
  412720:	ldr	w0, [sp, #136]
  412724:	bl	405638 <log_get_max_level_realm@plt>
  412728:	ldr	w8, [sp, #144]
  41272c:	and	w8, w8, #0x7
  412730:	cmp	w0, w8
  412734:	b.lt	412768 <server_init+0x92c>  // b.tstop
  412738:	ldr	w8, [sp, #136]
  41273c:	ldr	w9, [sp, #144]
  412740:	orr	w0, w9, w8, lsl #10
  412744:	ldr	w1, [sp, #140]
  412748:	ldr	x2, [sp, #96]
  41274c:	mov	w3, #0x839                 	// #2105
  412750:	ldr	x4, [sp, #88]
  412754:	adrp	x5, 42a000 <_fini+0x3a8>
  412758:	add	x5, x5, #0xf7c
  41275c:	bl	405648 <log_internal_realm@plt>
  412760:	str	w0, [sp, #32]
  412764:	b	41277c <server_init+0x940>
  412768:	ldr	w0, [sp, #140]
  41276c:	bl	405658 <abs@plt>
  412770:	mov	w8, wzr
  412774:	subs	w8, w8, w0, uxtb
  412778:	str	w8, [sp, #32]
  41277c:	ldr	w8, [sp, #32]
  412780:	str	w8, [sp, #132]
  412784:	ldr	w8, [sp, #132]
  412788:	stur	w8, [x29, #-4]
  41278c:	mov	w8, #0x1                   	// #1
  412790:	str	w8, [sp, #228]
  412794:	b	412cfc <server_init+0xec0>
  412798:	ldur	w8, [x29, #-36]
  41279c:	ldr	x9, [sp, #104]
  4127a0:	ldr	x10, [x9, #792]
  4127a4:	str	w8, [x10, #16]
  4127a8:	b	412840 <server_init+0xa04>
  4127ac:	ldr	x8, [sp, #104]
  4127b0:	ldr	x9, [x8, #784]
  4127b4:	cbnz	x9, 4127f4 <server_init+0x9b8>
  4127b8:	bl	405d58 <fdset_new@plt>
  4127bc:	ldr	x8, [sp, #104]
  4127c0:	str	x0, [x8, #784]
  4127c4:	ldr	x9, [x8, #784]
  4127c8:	cbnz	x9, 4127f4 <server_init+0x9b8>
  4127cc:	mov	w8, wzr
  4127d0:	mov	w0, w8
  4127d4:	ldr	x1, [sp, #96]
  4127d8:	mov	w2, #0x842                 	// #2114
  4127dc:	ldr	x3, [sp, #88]
  4127e0:	bl	405958 <log_oom_internal@plt>
  4127e4:	stur	w0, [x29, #-4]
  4127e8:	mov	w8, #0x1                   	// #1
  4127ec:	str	w8, [sp, #228]
  4127f0:	b	412cfc <server_init+0xec0>
  4127f4:	ldr	x8, [sp, #104]
  4127f8:	ldr	x0, [x8, #784]
  4127fc:	ldur	w1, [x29, #-36]
  412800:	bl	405d68 <fdset_put@plt>
  412804:	stur	w0, [x29, #-32]
  412808:	ldur	w9, [x29, #-32]
  41280c:	cmp	w9, #0x0
  412810:	cset	w9, ge  // ge = tcont
  412814:	tbnz	w9, #0, 412840 <server_init+0xa04>
  412818:	mov	w8, wzr
  41281c:	mov	w0, w8
  412820:	ldr	x1, [sp, #96]
  412824:	mov	w2, #0x847                 	// #2119
  412828:	ldr	x3, [sp, #88]
  41282c:	bl	405958 <log_oom_internal@plt>
  412830:	stur	w0, [x29, #-4]
  412834:	mov	w8, #0x1                   	// #1
  412838:	str	w8, [sp, #228]
  41283c:	b	412cfc <server_init+0xec0>
  412840:	ldur	w8, [x29, #-36]
  412844:	add	w8, w8, #0x1
  412848:	stur	w8, [x29, #-36]
  41284c:	b	4123d4 <server_init+0x598>
  412850:	ldr	x8, [sp, #104]
  412854:	ldr	x0, [x8, #792]
  412858:	ldr	x1, [x8, #784]
  41285c:	bl	41a094 <server_restore_streams>
  412860:	ldr	x8, [sp, #104]
  412864:	ldr	x9, [x8, #784]
  412868:	mov	x0, x9
  41286c:	bl	405d78 <fdset_size@plt>
  412870:	cmp	w0, #0x0
  412874:	cset	w10, ls  // ls = plast
  412878:	tbnz	w10, #0, 412930 <server_init+0xaf4>
  41287c:	mov	w8, #0x4                   	// #4
  412880:	str	w8, [sp, #128]
  412884:	str	wzr, [sp, #124]
  412888:	str	wzr, [sp, #120]
  41288c:	ldr	w0, [sp, #120]
  412890:	bl	405638 <log_get_max_level_realm@plt>
  412894:	ldr	w8, [sp, #128]
  412898:	and	w8, w8, #0x7
  41289c:	cmp	w0, w8
  4128a0:	b.lt	412900 <server_init+0xac4>  // b.tstop
  4128a4:	ldr	w8, [sp, #120]
  4128a8:	ldr	w9, [sp, #128]
  4128ac:	orr	w0, w9, w8, lsl #10
  4128b0:	ldr	w1, [sp, #124]
  4128b4:	ldr	x10, [sp, #104]
  4128b8:	ldr	x11, [x10, #784]
  4128bc:	str	w0, [sp, #28]
  4128c0:	mov	x0, x11
  4128c4:	str	w1, [sp, #24]
  4128c8:	bl	405d78 <fdset_size@plt>
  4128cc:	ldr	w8, [sp, #28]
  4128d0:	str	w0, [sp, #20]
  4128d4:	mov	w0, w8
  4128d8:	ldr	w1, [sp, #24]
  4128dc:	ldr	x2, [sp, #96]
  4128e0:	mov	w3, #0x84f                 	// #2127
  4128e4:	ldr	x4, [sp, #88]
  4128e8:	adrp	x5, 42a000 <_fini+0x3a8>
  4128ec:	add	x5, x5, #0xf9b
  4128f0:	ldr	w6, [sp, #20]
  4128f4:	bl	405648 <log_internal_realm@plt>
  4128f8:	str	w0, [sp, #16]
  4128fc:	b	412914 <server_init+0xad8>
  412900:	ldr	w0, [sp, #124]
  412904:	bl	405658 <abs@plt>
  412908:	mov	w8, wzr
  41290c:	subs	w8, w8, w0, uxtb
  412910:	str	w8, [sp, #16]
  412914:	ldr	w8, [sp, #16]
  412918:	str	w8, [sp, #116]
  41291c:	ldr	x9, [sp, #104]
  412920:	ldr	x0, [x9, #784]
  412924:	bl	405d88 <fdset_free@plt>
  412928:	ldr	x9, [sp, #104]
  41292c:	str	x0, [x9, #784]
  412930:	ldr	x8, [sp, #104]
  412934:	ldr	x9, [x8, #792]
  412938:	ldr	w10, [x9, #4]
  41293c:	cmp	w10, #0x0
  412940:	cset	w10, ge  // ge = tcont
  412944:	mov	w11, #0x0                   	// #0
  412948:	str	w11, [sp, #12]
  41294c:	tbnz	w10, #0, 4129a8 <server_init+0xb6c>
  412950:	ldr	x8, [sp, #104]
  412954:	ldr	x9, [x8, #792]
  412958:	ldr	w10, [x9, #8]
  41295c:	cmp	w10, #0x0
  412960:	cset	w10, ge  // ge = tcont
  412964:	mov	w11, #0x0                   	// #0
  412968:	str	w11, [sp, #12]
  41296c:	tbnz	w10, #0, 4129a8 <server_init+0xb6c>
  412970:	ldr	x8, [sp, #104]
  412974:	ldr	x9, [x8, #792]
  412978:	ldr	w10, [x9]
  41297c:	cmp	w10, #0x0
  412980:	cset	w10, ge  // ge = tcont
  412984:	mov	w11, #0x0                   	// #0
  412988:	str	w11, [sp, #12]
  41298c:	tbnz	w10, #0, 4129a8 <server_init+0xb6c>
  412990:	ldr	x8, [sp, #104]
  412994:	ldr	x9, [x8, #792]
  412998:	ldr	w10, [x9, #16]
  41299c:	cmp	w10, #0x0
  4129a0:	cset	w10, lt  // lt = tstop
  4129a4:	str	w10, [sp, #12]
  4129a8:	ldr	w8, [sp, #12]
  4129ac:	and	w8, w8, #0x1
  4129b0:	sturb	w8, [x29, #-37]
  4129b4:	ldr	x9, [sp, #104]
  4129b8:	ldr	x0, [x9, #792]
  4129bc:	bl	41a7ec <server_open_stdout_socket>
  4129c0:	stur	w0, [x29, #-32]
  4129c4:	ldur	w8, [x29, #-32]
  4129c8:	cmp	w8, #0x0
  4129cc:	cset	w8, ge  // ge = tcont
  4129d0:	tbnz	w8, #0, 4129e8 <server_init+0xbac>
  4129d4:	ldur	w8, [x29, #-32]
  4129d8:	stur	w8, [x29, #-4]
  4129dc:	mov	w8, #0x1                   	// #1
  4129e0:	str	w8, [sp, #228]
  4129e4:	b	412cfc <server_init+0xec0>
  4129e8:	ldr	x8, [sp, #104]
  4129ec:	ldr	x0, [x8, #792]
  4129f0:	bl	41f834 <server_open_syslog_socket>
  4129f4:	stur	w0, [x29, #-32]
  4129f8:	ldur	w9, [x29, #-32]
  4129fc:	cmp	w9, #0x0
  412a00:	cset	w9, ge  // ge = tcont
  412a04:	tbnz	w9, #0, 412a1c <server_init+0xbe0>
  412a08:	ldur	w8, [x29, #-32]
  412a0c:	stur	w8, [x29, #-4]
  412a10:	mov	w8, #0x1                   	// #1
  412a14:	str	w8, [sp, #228]
  412a18:	b	412cfc <server_init+0xec0>
  412a1c:	ldr	x8, [sp, #104]
  412a20:	ldr	x0, [x8, #792]
  412a24:	bl	4283dc <server_open_native_socket>
  412a28:	stur	w0, [x29, #-32]
  412a2c:	ldur	w9, [x29, #-32]
  412a30:	cmp	w9, #0x0
  412a34:	cset	w9, ge  // ge = tcont
  412a38:	tbnz	w9, #0, 412a50 <server_init+0xc14>
  412a3c:	ldur	w8, [x29, #-32]
  412a40:	stur	w8, [x29, #-4]
  412a44:	mov	w8, #0x1                   	// #1
  412a48:	str	w8, [sp, #228]
  412a4c:	b	412cfc <server_init+0xec0>
  412a50:	ldr	x8, [sp, #104]
  412a54:	ldr	x0, [x8, #792]
  412a58:	bl	408498 <server_open_dev_kmsg>
  412a5c:	stur	w0, [x29, #-32]
  412a60:	ldur	w9, [x29, #-32]
  412a64:	cmp	w9, #0x0
  412a68:	cset	w9, ge  // ge = tcont
  412a6c:	tbnz	w9, #0, 412a84 <server_init+0xc48>
  412a70:	ldur	w8, [x29, #-32]
  412a74:	stur	w8, [x29, #-4]
  412a78:	mov	w8, #0x1                   	// #1
  412a7c:	str	w8, [sp, #228]
  412a80:	b	412cfc <server_init+0xec0>
  412a84:	ldr	x8, [sp, #104]
  412a88:	ldr	x9, [x8, #792]
  412a8c:	ldr	w10, [x9, #16]
  412a90:	cmp	w10, #0x0
  412a94:	cset	w10, ge  // ge = tcont
  412a98:	tbnz	w10, #0, 412aa8 <server_init+0xc6c>
  412a9c:	ldurb	w8, [x29, #-37]
  412aa0:	tbnz	w8, #0, 412aa8 <server_init+0xc6c>
  412aa4:	b	412adc <server_init+0xca0>
  412aa8:	ldr	x8, [sp, #104]
  412aac:	ldr	x0, [x8, #792]
  412ab0:	bl	421870 <server_open_audit>
  412ab4:	stur	w0, [x29, #-32]
  412ab8:	ldur	w9, [x29, #-32]
  412abc:	cmp	w9, #0x0
  412ac0:	cset	w9, ge  // ge = tcont
  412ac4:	tbnz	w9, #0, 412adc <server_init+0xca0>
  412ac8:	ldur	w8, [x29, #-32]
  412acc:	stur	w8, [x29, #-4]
  412ad0:	mov	w8, #0x1                   	// #1
  412ad4:	str	w8, [sp, #228]
  412ad8:	b	412cfc <server_init+0xec0>
  412adc:	ldr	x8, [sp, #104]
  412ae0:	ldr	x0, [x8, #792]
  412ae4:	bl	4137e4 <server_open_varlink>
  412ae8:	stur	w0, [x29, #-32]
  412aec:	ldur	w9, [x29, #-32]
  412af0:	cmp	w9, #0x0
  412af4:	cset	w9, ge  // ge = tcont
  412af8:	tbnz	w9, #0, 412b10 <server_init+0xcd4>
  412afc:	ldur	w8, [x29, #-32]
  412b00:	stur	w8, [x29, #-4]
  412b04:	mov	w8, #0x1                   	// #1
  412b08:	str	w8, [sp, #228]
  412b0c:	b	412cfc <server_init+0xec0>
  412b10:	ldr	x8, [sp, #104]
  412b14:	ldr	x0, [x8, #792]
  412b18:	bl	408a2c <server_open_kernel_seqnum>
  412b1c:	stur	w0, [x29, #-32]
  412b20:	ldur	w9, [x29, #-32]
  412b24:	cmp	w9, #0x0
  412b28:	cset	w9, ge  // ge = tcont
  412b2c:	tbnz	w9, #0, 412b44 <server_init+0xd08>
  412b30:	ldur	w8, [x29, #-32]
  412b34:	stur	w8, [x29, #-4]
  412b38:	mov	w8, #0x1                   	// #1
  412b3c:	str	w8, [sp, #228]
  412b40:	b	412cfc <server_init+0xec0>
  412b44:	ldr	x8, [sp, #104]
  412b48:	ldr	x0, [x8, #792]
  412b4c:	bl	4139a0 <server_open_hostname>
  412b50:	stur	w0, [x29, #-32]
  412b54:	ldur	w9, [x29, #-32]
  412b58:	cmp	w9, #0x0
  412b5c:	cset	w9, ge  // ge = tcont
  412b60:	tbnz	w9, #0, 412b78 <server_init+0xd3c>
  412b64:	ldur	w8, [x29, #-32]
  412b68:	stur	w8, [x29, #-4]
  412b6c:	mov	w8, #0x1                   	// #1
  412b70:	str	w8, [sp, #228]
  412b74:	b	412cfc <server_init+0xec0>
  412b78:	ldr	x8, [sp, #104]
  412b7c:	ldr	x0, [x8, #792]
  412b80:	bl	413cfc <setup_signals>
  412b84:	stur	w0, [x29, #-32]
  412b88:	ldur	w9, [x29, #-32]
  412b8c:	cmp	w9, #0x0
  412b90:	cset	w9, ge  // ge = tcont
  412b94:	tbnz	w9, #0, 412bac <server_init+0xd70>
  412b98:	ldur	w8, [x29, #-32]
  412b9c:	stur	w8, [x29, #-4]
  412ba0:	mov	w8, #0x1                   	// #1
  412ba4:	str	w8, [sp, #228]
  412ba8:	b	412cfc <server_init+0xec0>
  412bac:	bl	428e98 <journal_ratelimit_new>
  412bb0:	ldr	x8, [sp, #104]
  412bb4:	ldr	x9, [x8, #792]
  412bb8:	str	x0, [x9, #200]
  412bbc:	ldr	x9, [x8, #792]
  412bc0:	ldr	x9, [x9, #200]
  412bc4:	cbnz	x9, 412bdc <server_init+0xda0>
  412bc8:	mov	w8, #0xfffffff4            	// #-12
  412bcc:	stur	w8, [x29, #-4]
  412bd0:	mov	w8, #0x1                   	// #1
  412bd4:	str	w8, [sp, #228]
  412bd8:	b	412cfc <server_init+0xec0>
  412bdc:	ldr	x8, [sp, #104]
  412be0:	ldr	x9, [x8, #792]
  412be4:	add	x0, x9, #0x2b0
  412be8:	bl	405d98 <cg_get_root_path@plt>
  412bec:	stur	w0, [x29, #-32]
  412bf0:	ldur	w10, [x29, #-32]
  412bf4:	cmp	w10, #0x0
  412bf8:	cset	w10, ge  // ge = tcont
  412bfc:	tbnz	w10, #0, 412c14 <server_init+0xdd8>
  412c00:	ldur	w8, [x29, #-32]
  412c04:	stur	w8, [x29, #-4]
  412c08:	mov	w8, #0x1                   	// #1
  412c0c:	str	w8, [sp, #228]
  412c10:	b	412cfc <server_init+0xec0>
  412c14:	ldr	x8, [sp, #104]
  412c18:	ldr	x0, [x8, #792]
  412c1c:	bl	413ff4 <server_cache_hostname>
  412c20:	ldr	x8, [sp, #104]
  412c24:	ldr	x0, [x8, #792]
  412c28:	bl	4140e8 <server_cache_boot_id>
  412c2c:	ldr	x8, [sp, #104]
  412c30:	ldr	x0, [x8, #792]
  412c34:	bl	4141b0 <server_cache_machine_id>
  412c38:	ldr	x8, [sp, #104]
  412c3c:	ldr	x9, [x8, #792]
  412c40:	add	x1, x9, #0x25d
  412c44:	adrp	x0, 42a000 <_fini+0x3a8>
  412c48:	add	x0, x0, #0xb33
  412c4c:	mov	x9, #0xffffffffffffffff    	// #-1
  412c50:	mov	x2, x9
  412c54:	str	x9, [sp]
  412c58:	bl	405da8 <path_join_internal@plt>
  412c5c:	ldr	x8, [sp, #104]
  412c60:	ldr	x9, [x8, #792]
  412c64:	str	x0, [x9, #240]
  412c68:	ldr	x9, [x8, #792]
  412c6c:	add	x1, x9, #0x25d
  412c70:	adrp	x0, 42a000 <_fini+0x3a8>
  412c74:	add	x0, x0, #0xfc8
  412c78:	ldr	x2, [sp]
  412c7c:	bl	405da8 <path_join_internal@plt>
  412c80:	ldr	x8, [sp, #104]
  412c84:	ldr	x9, [x8, #792]
  412c88:	str	x0, [x9, #344]
  412c8c:	ldr	x9, [x8, #792]
  412c90:	ldr	x9, [x9, #240]
  412c94:	cbz	x9, 412ca8 <server_init+0xe6c>
  412c98:	ldr	x8, [sp, #104]
  412c9c:	ldr	x9, [x8, #792]
  412ca0:	ldr	x9, [x9, #344]
  412ca4:	cbnz	x9, 412cbc <server_init+0xe80>
  412ca8:	mov	w8, #0xfffffff4            	// #-12
  412cac:	stur	w8, [x29, #-4]
  412cb0:	mov	w8, #0x1                   	// #1
  412cb4:	str	w8, [sp, #228]
  412cb8:	b	412cfc <server_init+0xec0>
  412cbc:	ldr	x8, [sp, #104]
  412cc0:	ldr	x0, [x8, #792]
  412cc4:	bl	414278 <server_connect_notify>
  412cc8:	ldr	x8, [sp, #104]
  412ccc:	ldr	x9, [x8, #792]
  412cd0:	mov	x0, x9
  412cd4:	bl	424664 <client_context_acquire_default>
  412cd8:	ldr	x8, [sp, #104]
  412cdc:	ldr	x0, [x8, #792]
  412ce0:	mov	w10, wzr
  412ce4:	and	w1, w10, #0x1
  412ce8:	and	w2, w10, #0x1
  412cec:	bl	410218 <system_journal_open>
  412cf0:	stur	w0, [x29, #-4]
  412cf4:	mov	w10, #0x1                   	// #1
  412cf8:	str	w10, [sp, #228]
  412cfc:	sub	x0, x29, #0x18
  412d00:	bl	412d18 <fdset_freep>
  412d04:	ldur	w0, [x29, #-4]
  412d08:	add	sp, sp, #0x430
  412d0c:	ldr	x28, [sp, #16]
  412d10:	ldp	x29, x30, [sp], #32
  412d14:	ret

0000000000412d18 <fdset_freep>:
  412d18:	sub	sp, sp, #0x20
  412d1c:	stp	x29, x30, [sp, #16]
  412d20:	add	x29, sp, #0x10
  412d24:	str	x0, [sp, #8]
  412d28:	ldr	x8, [sp, #8]
  412d2c:	ldr	x8, [x8]
  412d30:	cbz	x8, 412d40 <fdset_freep+0x28>
  412d34:	ldr	x8, [sp, #8]
  412d38:	ldr	x0, [x8]
  412d3c:	bl	405d88 <fdset_free@plt>
  412d40:	ldp	x29, x30, [sp, #16]
  412d44:	add	sp, sp, #0x20
  412d48:	ret

0000000000412d4c <server_parse_config_file>:
  412d4c:	sub	sp, sp, #0x20
  412d50:	stp	x29, x30, [sp, #16]
  412d54:	add	x29, sp, #0x10
  412d58:	adrp	x8, 42a000 <_fini+0x3a8>
  412d5c:	add	x8, x8, #0x3c8
  412d60:	add	x2, x8, #0x3
  412d64:	str	x0, [sp, #8]
  412d68:	str	x2, [sp]
  412d6c:	ldr	x8, [sp, #8]
  412d70:	cmp	x8, #0x0
  412d74:	cset	w9, ne  // ne = any
  412d78:	mov	w10, #0x1                   	// #1
  412d7c:	eor	w9, w9, #0x1
  412d80:	eor	w9, w9, w10
  412d84:	eor	w9, w9, w10
  412d88:	and	w9, w9, #0x1
  412d8c:	mov	w0, w9
  412d90:	sxtw	x8, w0
  412d94:	cbz	x8, 412dbc <server_parse_config_file+0x70>
  412d98:	mov	w8, wzr
  412d9c:	mov	w0, w8
  412da0:	adrp	x1, 429000 <journal_ratelimit_group_free+0x70>
  412da4:	add	x1, x1, #0xdc8
  412da8:	ldr	x2, [sp]
  412dac:	mov	w3, #0x63b                 	// #1595
  412db0:	adrp	x4, 42c000 <_fini+0x23a8>
  412db4:	add	x4, x4, #0x159
  412db8:	bl	405718 <log_assert_failed_realm@plt>
  412dbc:	ldr	x6, [sp, #8]
  412dc0:	adrp	x0, 42c000 <_fini+0x23a8>
  412dc4:	add	x0, x0, #0x180
  412dc8:	adrp	x1, 430000 <_fini+0x63a8>
  412dcc:	add	x1, x1, #0x470
  412dd0:	adrp	x2, 430000 <_fini+0x63a8>
  412dd4:	add	x2, x2, #0x510
  412dd8:	adrp	x3, 44f000 <journald_gperf_lookup.wordlist+0x448>
  412ddc:	ldr	x3, [x3, #1816]
  412de0:	adrp	x4, 44f000 <journald_gperf_lookup.wordlist+0x448>
  412de4:	ldr	x4, [x4, #1824]
  412de8:	mov	w5, #0x4                   	// #4
  412dec:	bl	405db8 <config_parse_many_nulstr@plt>
  412df0:	ldp	x29, x30, [sp, #16]
  412df4:	add	sp, sp, #0x20
  412df8:	ret

0000000000412dfc <parse_proc_cmdline_item>:
  412dfc:	sub	sp, sp, #0x140
  412e00:	stp	x29, x30, [sp, #288]
  412e04:	str	x28, [sp, #304]
  412e08:	add	x29, sp, #0x120
  412e0c:	sub	x8, x29, #0x28
  412e10:	adrp	x9, 42a000 <_fini+0x3a8>
  412e14:	add	x9, x9, #0x3c8
  412e18:	add	x9, x9, #0x3
  412e1c:	adrp	x10, 42c000 <_fini+0x23a8>
  412e20:	add	x10, x10, #0x1fe
  412e24:	str	x0, [x8, #24]
  412e28:	str	x1, [x8, #16]
  412e2c:	str	x2, [x8, #8]
  412e30:	ldr	x11, [x8, #8]
  412e34:	str	x11, [x8]
  412e38:	str	x8, [sp, #72]
  412e3c:	str	x9, [sp, #64]
  412e40:	str	x10, [sp, #56]
  412e44:	ldr	x8, [sp, #72]
  412e48:	ldr	x9, [x8]
  412e4c:	cmp	x9, #0x0
  412e50:	cset	w10, ne  // ne = any
  412e54:	mov	w11, #0x1                   	// #1
  412e58:	eor	w10, w10, #0x1
  412e5c:	eor	w10, w10, w11
  412e60:	eor	w10, w10, w11
  412e64:	and	w10, w10, #0x1
  412e68:	mov	w0, w10
  412e6c:	sxtw	x9, w0
  412e70:	cbz	x9, 412e98 <parse_proc_cmdline_item+0x9c>
  412e74:	mov	w8, wzr
  412e78:	mov	w0, w8
  412e7c:	adrp	x1, 429000 <journal_ratelimit_group_free+0x70>
  412e80:	add	x1, x1, #0xdc8
  412e84:	ldr	x2, [sp, #64]
  412e88:	mov	w3, #0x5da                 	// #1498
  412e8c:	adrp	x4, 42c000 <_fini+0x23a8>
  412e90:	add	x4, x4, #0x19b
  412e94:	bl	405718 <log_assert_failed_realm@plt>
  412e98:	ldr	x8, [sp, #72]
  412e9c:	ldr	x0, [x8, #24]
  412ea0:	adrp	x1, 42c000 <_fini+0x23a8>
  412ea4:	add	x1, x1, #0x1db
  412ea8:	bl	405dc8 <proc_cmdline_key_streq@plt>
  412eac:	tbnz	w0, #0, 412eb4 <parse_proc_cmdline_item+0xb8>
  412eb0:	b	412f94 <parse_proc_cmdline_item+0x198>
  412eb4:	ldr	x8, [sp, #72]
  412eb8:	ldr	x9, [x8, #16]
  412ebc:	cbz	x9, 412ed4 <parse_proc_cmdline_item+0xd8>
  412ec0:	ldr	x8, [sp, #72]
  412ec4:	ldr	x0, [x8, #16]
  412ec8:	bl	405dd8 <parse_boolean@plt>
  412ecc:	str	w0, [sp, #52]
  412ed0:	b	412edc <parse_proc_cmdline_item+0xe0>
  412ed4:	mov	w8, #0x1                   	// #1
  412ed8:	str	w8, [sp, #52]
  412edc:	ldr	w8, [sp, #52]
  412ee0:	stur	w8, [x29, #-44]
  412ee4:	ldur	w8, [x29, #-44]
  412ee8:	cmp	w8, #0x0
  412eec:	cset	w8, ge  // ge = tcont
  412ef0:	tbnz	w8, #0, 412f74 <parse_proc_cmdline_item+0x178>
  412ef4:	mov	w8, #0x4                   	// #4
  412ef8:	stur	w8, [x29, #-48]
  412efc:	stur	wzr, [x29, #-52]
  412f00:	stur	wzr, [x29, #-56]
  412f04:	ldur	w0, [x29, #-56]
  412f08:	bl	405638 <log_get_max_level_realm@plt>
  412f0c:	ldur	w8, [x29, #-48]
  412f10:	and	w8, w8, #0x7
  412f14:	cmp	w0, w8
  412f18:	b.lt	412f54 <parse_proc_cmdline_item+0x158>  // b.tstop
  412f1c:	ldur	w8, [x29, #-56]
  412f20:	ldur	w9, [x29, #-48]
  412f24:	orr	w0, w9, w8, lsl #10
  412f28:	ldur	w1, [x29, #-52]
  412f2c:	ldr	x10, [sp, #72]
  412f30:	ldr	x6, [x10, #16]
  412f34:	ldr	x2, [sp, #64]
  412f38:	mov	w3, #0x5e0                 	// #1504
  412f3c:	ldr	x4, [sp, #56]
  412f40:	adrp	x5, 42c000 <_fini+0x23a8>
  412f44:	add	x5, x5, #0x216
  412f48:	bl	405648 <log_internal_realm@plt>
  412f4c:	str	w0, [sp, #48]
  412f50:	b	412f68 <parse_proc_cmdline_item+0x16c>
  412f54:	ldur	w0, [x29, #-52]
  412f58:	bl	405658 <abs@plt>
  412f5c:	mov	w8, wzr
  412f60:	subs	w8, w8, w0, uxtb
  412f64:	str	w8, [sp, #48]
  412f68:	ldr	w8, [sp, #48]
  412f6c:	stur	w8, [x29, #-60]
  412f70:	b	412f90 <parse_proc_cmdline_item+0x194>
  412f74:	ldur	w8, [x29, #-44]
  412f78:	cmp	w8, #0x0
  412f7c:	cset	w8, ne  // ne = any
  412f80:	ldr	x9, [sp, #72]
  412f84:	ldr	x10, [x9]
  412f88:	and	w8, w8, #0x1
  412f8c:	strb	w8, [x10, #459]
  412f90:	b	4137cc <parse_proc_cmdline_item+0x9d0>
  412f94:	ldr	x8, [sp, #72]
  412f98:	ldr	x0, [x8, #24]
  412f9c:	adrp	x1, 42c000 <_fini+0x23a8>
  412fa0:	add	x1, x1, #0x24f
  412fa4:	bl	405dc8 <proc_cmdline_key_streq@plt>
  412fa8:	tbnz	w0, #0, 412fb0 <parse_proc_cmdline_item+0x1b4>
  412fac:	b	413090 <parse_proc_cmdline_item+0x294>
  412fb0:	ldr	x8, [sp, #72]
  412fb4:	ldr	x9, [x8, #16]
  412fb8:	cbz	x9, 412fd0 <parse_proc_cmdline_item+0x1d4>
  412fbc:	ldr	x8, [sp, #72]
  412fc0:	ldr	x0, [x8, #16]
  412fc4:	bl	405dd8 <parse_boolean@plt>
  412fc8:	str	w0, [sp, #44]
  412fcc:	b	412fd8 <parse_proc_cmdline_item+0x1dc>
  412fd0:	mov	w8, #0x1                   	// #1
  412fd4:	str	w8, [sp, #44]
  412fd8:	ldr	w8, [sp, #44]
  412fdc:	stur	w8, [x29, #-44]
  412fe0:	ldur	w8, [x29, #-44]
  412fe4:	cmp	w8, #0x0
  412fe8:	cset	w8, ge  // ge = tcont
  412fec:	tbnz	w8, #0, 413070 <parse_proc_cmdline_item+0x274>
  412ff0:	mov	w8, #0x4                   	// #4
  412ff4:	stur	w8, [x29, #-64]
  412ff8:	stur	wzr, [x29, #-68]
  412ffc:	stur	wzr, [x29, #-72]
  413000:	ldur	w0, [x29, #-72]
  413004:	bl	405638 <log_get_max_level_realm@plt>
  413008:	ldur	w8, [x29, #-64]
  41300c:	and	w8, w8, #0x7
  413010:	cmp	w0, w8
  413014:	b.lt	413050 <parse_proc_cmdline_item+0x254>  // b.tstop
  413018:	ldur	w8, [x29, #-72]
  41301c:	ldur	w9, [x29, #-64]
  413020:	orr	w0, w9, w8, lsl #10
  413024:	ldur	w1, [x29, #-68]
  413028:	ldr	x10, [sp, #72]
  41302c:	ldr	x6, [x10, #16]
  413030:	ldr	x2, [sp, #64]
  413034:	mov	w3, #0x5e8                 	// #1512
  413038:	ldr	x4, [sp, #56]
  41303c:	adrp	x5, 42c000 <_fini+0x23a8>
  413040:	add	x5, x5, #0x270
  413044:	bl	405648 <log_internal_realm@plt>
  413048:	str	w0, [sp, #40]
  41304c:	b	413064 <parse_proc_cmdline_item+0x268>
  413050:	ldur	w0, [x29, #-68]
  413054:	bl	405658 <abs@plt>
  413058:	mov	w8, wzr
  41305c:	subs	w8, w8, w0, uxtb
  413060:	str	w8, [sp, #40]
  413064:	ldr	w8, [sp, #40]
  413068:	stur	w8, [x29, #-76]
  41306c:	b	41308c <parse_proc_cmdline_item+0x290>
  413070:	ldur	w8, [x29, #-44]
  413074:	cmp	w8, #0x0
  413078:	cset	w8, ne  // ne = any
  41307c:	ldr	x9, [sp, #72]
  413080:	ldr	x10, [x9]
  413084:	and	w8, w8, #0x1
  413088:	strb	w8, [x10, #458]
  41308c:	b	4137cc <parse_proc_cmdline_item+0x9d0>
  413090:	ldr	x8, [sp, #72]
  413094:	ldr	x0, [x8, #24]
  413098:	adrp	x1, 42c000 <_fini+0x23a8>
  41309c:	add	x1, x1, #0x2a7
  4130a0:	bl	405dc8 <proc_cmdline_key_streq@plt>
  4130a4:	tbnz	w0, #0, 4130ac <parse_proc_cmdline_item+0x2b0>
  4130a8:	b	41318c <parse_proc_cmdline_item+0x390>
  4130ac:	ldr	x8, [sp, #72]
  4130b0:	ldr	x9, [x8, #16]
  4130b4:	cbz	x9, 4130cc <parse_proc_cmdline_item+0x2d0>
  4130b8:	ldr	x8, [sp, #72]
  4130bc:	ldr	x0, [x8, #16]
  4130c0:	bl	405dd8 <parse_boolean@plt>
  4130c4:	str	w0, [sp, #36]
  4130c8:	b	4130d4 <parse_proc_cmdline_item+0x2d8>
  4130cc:	mov	w8, #0x1                   	// #1
  4130d0:	str	w8, [sp, #36]
  4130d4:	ldr	w8, [sp, #36]
  4130d8:	stur	w8, [x29, #-44]
  4130dc:	ldur	w8, [x29, #-44]
  4130e0:	cmp	w8, #0x0
  4130e4:	cset	w8, ge  // ge = tcont
  4130e8:	tbnz	w8, #0, 41316c <parse_proc_cmdline_item+0x370>
  4130ec:	mov	w8, #0x4                   	// #4
  4130f0:	stur	w8, [x29, #-80]
  4130f4:	stur	wzr, [x29, #-84]
  4130f8:	stur	wzr, [x29, #-88]
  4130fc:	ldur	w0, [x29, #-88]
  413100:	bl	405638 <log_get_max_level_realm@plt>
  413104:	ldur	w8, [x29, #-80]
  413108:	and	w8, w8, #0x7
  41310c:	cmp	w0, w8
  413110:	b.lt	41314c <parse_proc_cmdline_item+0x350>  // b.tstop
  413114:	ldur	w8, [x29, #-88]
  413118:	ldur	w9, [x29, #-80]
  41311c:	orr	w0, w9, w8, lsl #10
  413120:	ldur	w1, [x29, #-84]
  413124:	ldr	x10, [sp, #72]
  413128:	ldr	x6, [x10, #16]
  41312c:	ldr	x2, [sp, #64]
  413130:	mov	w3, #0x5f0                 	// #1520
  413134:	ldr	x4, [sp, #56]
  413138:	adrp	x5, 42c000 <_fini+0x23a8>
  41313c:	add	x5, x5, #0x2cb
  413140:	bl	405648 <log_internal_realm@plt>
  413144:	str	w0, [sp, #32]
  413148:	b	413160 <parse_proc_cmdline_item+0x364>
  41314c:	ldur	w0, [x29, #-84]
  413150:	bl	405658 <abs@plt>
  413154:	mov	w8, wzr
  413158:	subs	w8, w8, w0, uxtb
  41315c:	str	w8, [sp, #32]
  413160:	ldr	w8, [sp, #32]
  413164:	stur	w8, [x29, #-92]
  413168:	b	413188 <parse_proc_cmdline_item+0x38c>
  41316c:	ldur	w8, [x29, #-44]
  413170:	cmp	w8, #0x0
  413174:	cset	w8, ne  // ne = any
  413178:	ldr	x9, [sp, #72]
  41317c:	ldr	x10, [x9]
  413180:	and	w8, w8, #0x1
  413184:	strb	w8, [x10, #460]
  413188:	b	4137cc <parse_proc_cmdline_item+0x9d0>
  41318c:	ldr	x8, [sp, #72]
  413190:	ldr	x0, [x8, #24]
  413194:	adrp	x1, 42c000 <_fini+0x23a8>
  413198:	add	x1, x1, #0x305
  41319c:	bl	405dc8 <proc_cmdline_key_streq@plt>
  4131a0:	tbnz	w0, #0, 4131a8 <parse_proc_cmdline_item+0x3ac>
  4131a4:	b	413288 <parse_proc_cmdline_item+0x48c>
  4131a8:	ldr	x8, [sp, #72]
  4131ac:	ldr	x9, [x8, #16]
  4131b0:	cbz	x9, 4131c8 <parse_proc_cmdline_item+0x3cc>
  4131b4:	ldr	x8, [sp, #72]
  4131b8:	ldr	x0, [x8, #16]
  4131bc:	bl	405dd8 <parse_boolean@plt>
  4131c0:	str	w0, [sp, #28]
  4131c4:	b	4131d0 <parse_proc_cmdline_item+0x3d4>
  4131c8:	mov	w8, #0x1                   	// #1
  4131cc:	str	w8, [sp, #28]
  4131d0:	ldr	w8, [sp, #28]
  4131d4:	stur	w8, [x29, #-44]
  4131d8:	ldur	w8, [x29, #-44]
  4131dc:	cmp	w8, #0x0
  4131e0:	cset	w8, ge  // ge = tcont
  4131e4:	tbnz	w8, #0, 413268 <parse_proc_cmdline_item+0x46c>
  4131e8:	mov	w8, #0x4                   	// #4
  4131ec:	stur	w8, [x29, #-96]
  4131f0:	stur	wzr, [x29, #-100]
  4131f4:	stur	wzr, [x29, #-104]
  4131f8:	ldur	w0, [x29, #-104]
  4131fc:	bl	405638 <log_get_max_level_realm@plt>
  413200:	ldur	w8, [x29, #-96]
  413204:	and	w8, w8, #0x7
  413208:	cmp	w0, w8
  41320c:	b.lt	413248 <parse_proc_cmdline_item+0x44c>  // b.tstop
  413210:	ldur	w8, [x29, #-104]
  413214:	ldur	w9, [x29, #-96]
  413218:	orr	w0, w9, w8, lsl #10
  41321c:	ldur	w1, [x29, #-100]
  413220:	ldr	x10, [sp, #72]
  413224:	ldr	x6, [x10, #16]
  413228:	ldr	x2, [sp, #64]
  41322c:	mov	w3, #0x5f8                 	// #1528
  413230:	ldr	x4, [sp, #56]
  413234:	adrp	x5, 42c000 <_fini+0x23a8>
  413238:	add	x5, x5, #0x326
  41323c:	bl	405648 <log_internal_realm@plt>
  413240:	str	w0, [sp, #24]
  413244:	b	41325c <parse_proc_cmdline_item+0x460>
  413248:	ldur	w0, [x29, #-100]
  41324c:	bl	405658 <abs@plt>
  413250:	mov	w8, wzr
  413254:	subs	w8, w8, w0, uxtb
  413258:	str	w8, [sp, #24]
  41325c:	ldr	w8, [sp, #24]
  413260:	stur	w8, [x29, #-108]
  413264:	b	413284 <parse_proc_cmdline_item+0x488>
  413268:	ldur	w8, [x29, #-44]
  41326c:	cmp	w8, #0x0
  413270:	cset	w8, ne  // ne = any
  413274:	ldr	x9, [sp, #72]
  413278:	ldr	x10, [x9]
  41327c:	and	w8, w8, #0x1
  413280:	strb	w8, [x10, #461]
  413284:	b	4137cc <parse_proc_cmdline_item+0x9d0>
  413288:	ldr	x8, [sp, #72]
  41328c:	ldr	x0, [x8, #24]
  413290:	adrp	x1, 42c000 <_fini+0x23a8>
  413294:	add	x1, x1, #0x35d
  413298:	bl	405dc8 <proc_cmdline_key_streq@plt>
  41329c:	tbnz	w0, #0, 4132a4 <parse_proc_cmdline_item+0x4a8>
  4132a0:	b	413378 <parse_proc_cmdline_item+0x57c>
  4132a4:	ldr	x8, [sp, #72]
  4132a8:	ldr	x0, [x8, #24]
  4132ac:	ldr	x1, [x8, #16]
  4132b0:	bl	417024 <proc_cmdline_value_missing>
  4132b4:	tbnz	w0, #0, 4132bc <parse_proc_cmdline_item+0x4c0>
  4132b8:	b	4132c4 <parse_proc_cmdline_item+0x4c8>
  4132bc:	stur	wzr, [x29, #-4]
  4132c0:	b	4137d0 <parse_proc_cmdline_item+0x9d4>
  4132c4:	ldr	x8, [sp, #72]
  4132c8:	ldr	x0, [x8, #16]
  4132cc:	bl	405de8 <log_level_from_string@plt>
  4132d0:	stur	w0, [x29, #-44]
  4132d4:	ldur	w9, [x29, #-44]
  4132d8:	cmp	w9, #0x0
  4132dc:	cset	w9, ge  // ge = tcont
  4132e0:	tbnz	w9, #0, 413364 <parse_proc_cmdline_item+0x568>
  4132e4:	mov	w8, #0x4                   	// #4
  4132e8:	stur	w8, [x29, #-112]
  4132ec:	stur	wzr, [x29, #-116]
  4132f0:	stur	wzr, [x29, #-120]
  4132f4:	ldur	w0, [x29, #-120]
  4132f8:	bl	405638 <log_get_max_level_realm@plt>
  4132fc:	ldur	w8, [x29, #-112]
  413300:	and	w8, w8, #0x7
  413304:	cmp	w0, w8
  413308:	b.lt	413344 <parse_proc_cmdline_item+0x548>  // b.tstop
  41330c:	ldur	w8, [x29, #-120]
  413310:	ldur	w9, [x29, #-112]
  413314:	orr	w0, w9, w8, lsl #10
  413318:	ldur	w1, [x29, #-116]
  41331c:	ldr	x10, [sp, #72]
  413320:	ldr	x6, [x10, #16]
  413324:	ldr	x2, [sp, #64]
  413328:	mov	w3, #0x603                 	// #1539
  41332c:	ldr	x4, [sp, #56]
  413330:	adrp	x5, 42c000 <_fini+0x23a8>
  413334:	add	x5, x5, #0x380
  413338:	bl	405648 <log_internal_realm@plt>
  41333c:	str	w0, [sp, #20]
  413340:	b	413358 <parse_proc_cmdline_item+0x55c>
  413344:	ldur	w0, [x29, #-116]
  413348:	bl	405658 <abs@plt>
  41334c:	mov	w8, wzr
  413350:	subs	w8, w8, w0, uxtb
  413354:	str	w8, [sp, #20]
  413358:	ldr	w8, [sp, #20]
  41335c:	stur	w8, [x29, #-124]
  413360:	b	413374 <parse_proc_cmdline_item+0x578>
  413364:	ldur	w8, [x29, #-44]
  413368:	ldr	x9, [sp, #72]
  41336c:	ldr	x10, [x9]
  413370:	str	w8, [x10, #548]
  413374:	b	4137cc <parse_proc_cmdline_item+0x9d0>
  413378:	ldr	x8, [sp, #72]
  41337c:	ldr	x0, [x8, #24]
  413380:	adrp	x1, 42c000 <_fini+0x23a8>
  413384:	add	x1, x1, #0x3b8
  413388:	bl	405dc8 <proc_cmdline_key_streq@plt>
  41338c:	tbnz	w0, #0, 413394 <parse_proc_cmdline_item+0x598>
  413390:	b	413468 <parse_proc_cmdline_item+0x66c>
  413394:	ldr	x8, [sp, #72]
  413398:	ldr	x0, [x8, #24]
  41339c:	ldr	x1, [x8, #16]
  4133a0:	bl	417024 <proc_cmdline_value_missing>
  4133a4:	tbnz	w0, #0, 4133ac <parse_proc_cmdline_item+0x5b0>
  4133a8:	b	4133b4 <parse_proc_cmdline_item+0x5b8>
  4133ac:	stur	wzr, [x29, #-4]
  4133b0:	b	4137d0 <parse_proc_cmdline_item+0x9d4>
  4133b4:	ldr	x8, [sp, #72]
  4133b8:	ldr	x0, [x8, #16]
  4133bc:	bl	405de8 <log_level_from_string@plt>
  4133c0:	stur	w0, [x29, #-44]
  4133c4:	ldur	w9, [x29, #-44]
  4133c8:	cmp	w9, #0x0
  4133cc:	cset	w9, ge  // ge = tcont
  4133d0:	tbnz	w9, #0, 413454 <parse_proc_cmdline_item+0x658>
  4133d4:	mov	w8, #0x4                   	// #4
  4133d8:	stur	w8, [x29, #-128]
  4133dc:	stur	wzr, [x29, #-132]
  4133e0:	stur	wzr, [x29, #-136]
  4133e4:	ldur	w0, [x29, #-136]
  4133e8:	bl	405638 <log_get_max_level_realm@plt>
  4133ec:	ldur	w8, [x29, #-128]
  4133f0:	and	w8, w8, #0x7
  4133f4:	cmp	w0, w8
  4133f8:	b.lt	413434 <parse_proc_cmdline_item+0x638>  // b.tstop
  4133fc:	ldur	w8, [x29, #-136]
  413400:	ldur	w9, [x29, #-128]
  413404:	orr	w0, w9, w8, lsl #10
  413408:	ldur	w1, [x29, #-132]
  41340c:	ldr	x10, [sp, #72]
  413410:	ldr	x6, [x10, #16]
  413414:	ldr	x2, [sp, #64]
  413418:	mov	w3, #0x60e                 	// #1550
  41341c:	ldr	x4, [sp, #56]
  413420:	adrp	x5, 42c000 <_fini+0x23a8>
  413424:	add	x5, x5, #0x3d9
  413428:	bl	405648 <log_internal_realm@plt>
  41342c:	str	w0, [sp, #16]
  413430:	b	413448 <parse_proc_cmdline_item+0x64c>
  413434:	ldur	w0, [x29, #-132]
  413438:	bl	405658 <abs@plt>
  41343c:	mov	w8, wzr
  413440:	subs	w8, w8, w0, uxtb
  413444:	str	w8, [sp, #16]
  413448:	ldr	w8, [sp, #16]
  41344c:	stur	w8, [x29, #-140]
  413450:	b	413464 <parse_proc_cmdline_item+0x668>
  413454:	ldur	w8, [x29, #-44]
  413458:	ldr	x9, [sp, #72]
  41345c:	ldr	x10, [x9]
  413460:	str	w8, [x10, #536]
  413464:	b	4137cc <parse_proc_cmdline_item+0x9d0>
  413468:	ldr	x8, [sp, #72]
  41346c:	ldr	x0, [x8, #24]
  413470:	adrp	x1, 42c000 <_fini+0x23a8>
  413474:	add	x1, x1, #0x40f
  413478:	bl	405dc8 <proc_cmdline_key_streq@plt>
  41347c:	tbnz	w0, #0, 413484 <parse_proc_cmdline_item+0x688>
  413480:	b	413558 <parse_proc_cmdline_item+0x75c>
  413484:	ldr	x8, [sp, #72]
  413488:	ldr	x0, [x8, #24]
  41348c:	ldr	x1, [x8, #16]
  413490:	bl	417024 <proc_cmdline_value_missing>
  413494:	tbnz	w0, #0, 41349c <parse_proc_cmdline_item+0x6a0>
  413498:	b	4134a4 <parse_proc_cmdline_item+0x6a8>
  41349c:	stur	wzr, [x29, #-4]
  4134a0:	b	4137d0 <parse_proc_cmdline_item+0x9d4>
  4134a4:	ldr	x8, [sp, #72]
  4134a8:	ldr	x0, [x8, #16]
  4134ac:	bl	405de8 <log_level_from_string@plt>
  4134b0:	stur	w0, [x29, #-44]
  4134b4:	ldur	w9, [x29, #-44]
  4134b8:	cmp	w9, #0x0
  4134bc:	cset	w9, ge  // ge = tcont
  4134c0:	tbnz	w9, #0, 413544 <parse_proc_cmdline_item+0x748>
  4134c4:	mov	w8, #0x4                   	// #4
  4134c8:	str	w8, [sp, #144]
  4134cc:	str	wzr, [sp, #140]
  4134d0:	str	wzr, [sp, #136]
  4134d4:	ldr	w0, [sp, #136]
  4134d8:	bl	405638 <log_get_max_level_realm@plt>
  4134dc:	ldr	w8, [sp, #144]
  4134e0:	and	w8, w8, #0x7
  4134e4:	cmp	w0, w8
  4134e8:	b.lt	413524 <parse_proc_cmdline_item+0x728>  // b.tstop
  4134ec:	ldr	w8, [sp, #136]
  4134f0:	ldr	w9, [sp, #144]
  4134f4:	orr	w0, w9, w8, lsl #10
  4134f8:	ldr	w1, [sp, #140]
  4134fc:	ldr	x10, [sp, #72]
  413500:	ldr	x6, [x10, #16]
  413504:	ldr	x2, [sp, #64]
  413508:	mov	w3, #0x619                 	// #1561
  41350c:	ldr	x4, [sp, #56]
  413510:	adrp	x5, 42c000 <_fini+0x23a8>
  413514:	add	x5, x5, #0x431
  413518:	bl	405648 <log_internal_realm@plt>
  41351c:	str	w0, [sp, #12]
  413520:	b	413538 <parse_proc_cmdline_item+0x73c>
  413524:	ldr	w0, [sp, #140]
  413528:	bl	405658 <abs@plt>
  41352c:	mov	w8, wzr
  413530:	subs	w8, w8, w0, uxtb
  413534:	str	w8, [sp, #12]
  413538:	ldr	w8, [sp, #12]
  41353c:	str	w8, [sp, #132]
  413540:	b	413554 <parse_proc_cmdline_item+0x758>
  413544:	ldur	w8, [x29, #-44]
  413548:	ldr	x9, [sp, #72]
  41354c:	ldr	x10, [x9]
  413550:	str	w8, [x10, #540]
  413554:	b	4137cc <parse_proc_cmdline_item+0x9d0>
  413558:	ldr	x8, [sp, #72]
  41355c:	ldr	x0, [x8, #24]
  413560:	adrp	x1, 42c000 <_fini+0x23a8>
  413564:	add	x1, x1, #0x468
  413568:	bl	405dc8 <proc_cmdline_key_streq@plt>
  41356c:	tbnz	w0, #0, 413574 <parse_proc_cmdline_item+0x778>
  413570:	b	413648 <parse_proc_cmdline_item+0x84c>
  413574:	ldr	x8, [sp, #72]
  413578:	ldr	x0, [x8, #24]
  41357c:	ldr	x1, [x8, #16]
  413580:	bl	417024 <proc_cmdline_value_missing>
  413584:	tbnz	w0, #0, 41358c <parse_proc_cmdline_item+0x790>
  413588:	b	413594 <parse_proc_cmdline_item+0x798>
  41358c:	stur	wzr, [x29, #-4]
  413590:	b	4137d0 <parse_proc_cmdline_item+0x9d4>
  413594:	ldr	x8, [sp, #72]
  413598:	ldr	x0, [x8, #16]
  41359c:	bl	405de8 <log_level_from_string@plt>
  4135a0:	stur	w0, [x29, #-44]
  4135a4:	ldur	w9, [x29, #-44]
  4135a8:	cmp	w9, #0x0
  4135ac:	cset	w9, ge  // ge = tcont
  4135b0:	tbnz	w9, #0, 413634 <parse_proc_cmdline_item+0x838>
  4135b4:	mov	w8, #0x4                   	// #4
  4135b8:	str	w8, [sp, #128]
  4135bc:	str	wzr, [sp, #124]
  4135c0:	str	wzr, [sp, #120]
  4135c4:	ldr	w0, [sp, #120]
  4135c8:	bl	405638 <log_get_max_level_realm@plt>
  4135cc:	ldr	w8, [sp, #128]
  4135d0:	and	w8, w8, #0x7
  4135d4:	cmp	w0, w8
  4135d8:	b.lt	413614 <parse_proc_cmdline_item+0x818>  // b.tstop
  4135dc:	ldr	w8, [sp, #120]
  4135e0:	ldr	w9, [sp, #128]
  4135e4:	orr	w0, w9, w8, lsl #10
  4135e8:	ldr	w1, [sp, #124]
  4135ec:	ldr	x10, [sp, #72]
  4135f0:	ldr	x6, [x10, #16]
  4135f4:	ldr	x2, [sp, #64]
  4135f8:	mov	w3, #0x624                 	// #1572
  4135fc:	ldr	x4, [sp, #56]
  413600:	adrp	x5, 42c000 <_fini+0x23a8>
  413604:	add	x5, x5, #0x488
  413608:	bl	405648 <log_internal_realm@plt>
  41360c:	str	w0, [sp, #8]
  413610:	b	413628 <parse_proc_cmdline_item+0x82c>
  413614:	ldr	w0, [sp, #124]
  413618:	bl	405658 <abs@plt>
  41361c:	mov	w8, wzr
  413620:	subs	w8, w8, w0, uxtb
  413624:	str	w8, [sp, #8]
  413628:	ldr	w8, [sp, #8]
  41362c:	str	w8, [sp, #116]
  413630:	b	413644 <parse_proc_cmdline_item+0x848>
  413634:	ldur	w8, [x29, #-44]
  413638:	ldr	x9, [sp, #72]
  41363c:	ldr	x10, [x9]
  413640:	str	w8, [x10, #544]
  413644:	b	4137cc <parse_proc_cmdline_item+0x9d0>
  413648:	ldr	x8, [sp, #72]
  41364c:	ldr	x0, [x8, #24]
  413650:	adrp	x1, 42c000 <_fini+0x23a8>
  413654:	add	x1, x1, #0x4bd
  413658:	bl	405dc8 <proc_cmdline_key_streq@plt>
  41365c:	tbnz	w0, #0, 413664 <parse_proc_cmdline_item+0x868>
  413660:	b	413738 <parse_proc_cmdline_item+0x93c>
  413664:	ldr	x8, [sp, #72]
  413668:	ldr	x0, [x8, #24]
  41366c:	ldr	x1, [x8, #16]
  413670:	bl	417024 <proc_cmdline_value_missing>
  413674:	tbnz	w0, #0, 41367c <parse_proc_cmdline_item+0x880>
  413678:	b	413684 <parse_proc_cmdline_item+0x888>
  41367c:	stur	wzr, [x29, #-4]
  413680:	b	4137d0 <parse_proc_cmdline_item+0x9d4>
  413684:	ldr	x8, [sp, #72]
  413688:	ldr	x0, [x8, #16]
  41368c:	bl	405de8 <log_level_from_string@plt>
  413690:	stur	w0, [x29, #-44]
  413694:	ldur	w9, [x29, #-44]
  413698:	cmp	w9, #0x0
  41369c:	cset	w9, ge  // ge = tcont
  4136a0:	tbnz	w9, #0, 413724 <parse_proc_cmdline_item+0x928>
  4136a4:	mov	w8, #0x4                   	// #4
  4136a8:	str	w8, [sp, #112]
  4136ac:	str	wzr, [sp, #108]
  4136b0:	str	wzr, [sp, #104]
  4136b4:	ldr	w0, [sp, #104]
  4136b8:	bl	405638 <log_get_max_level_realm@plt>
  4136bc:	ldr	w8, [sp, #112]
  4136c0:	and	w8, w8, #0x7
  4136c4:	cmp	w0, w8
  4136c8:	b.lt	413704 <parse_proc_cmdline_item+0x908>  // b.tstop
  4136cc:	ldr	w8, [sp, #104]
  4136d0:	ldr	w9, [sp, #112]
  4136d4:	orr	w0, w9, w8, lsl #10
  4136d8:	ldr	w1, [sp, #108]
  4136dc:	ldr	x10, [sp, #72]
  4136e0:	ldr	x6, [x10, #16]
  4136e4:	ldr	x2, [sp, #64]
  4136e8:	mov	w3, #0x62f                 	// #1583
  4136ec:	ldr	x4, [sp, #56]
  4136f0:	adrp	x5, 42c000 <_fini+0x23a8>
  4136f4:	add	x5, x5, #0x4dd
  4136f8:	bl	405648 <log_internal_realm@plt>
  4136fc:	str	w0, [sp, #4]
  413700:	b	413718 <parse_proc_cmdline_item+0x91c>
  413704:	ldr	w0, [sp, #108]
  413708:	bl	405658 <abs@plt>
  41370c:	mov	w8, wzr
  413710:	subs	w8, w8, w0, uxtb
  413714:	str	w8, [sp, #4]
  413718:	ldr	w8, [sp, #4]
  41371c:	str	w8, [sp, #100]
  413720:	b	413734 <parse_proc_cmdline_item+0x938>
  413724:	ldur	w8, [x29, #-44]
  413728:	ldr	x9, [sp, #72]
  41372c:	ldr	x10, [x9]
  413730:	str	w8, [x10, #552]
  413734:	b	4137cc <parse_proc_cmdline_item+0x9d0>
  413738:	ldr	x8, [sp, #72]
  41373c:	ldr	x0, [x8, #24]
  413740:	adrp	x1, 42c000 <_fini+0x23a8>
  413744:	add	x1, x1, #0x512
  413748:	bl	40a864 <startswith>
  41374c:	cbz	x0, 4137cc <parse_proc_cmdline_item+0x9d0>
  413750:	mov	w8, #0x4                   	// #4
  413754:	str	w8, [sp, #96]
  413758:	str	wzr, [sp, #92]
  41375c:	str	wzr, [sp, #88]
  413760:	ldr	w0, [sp, #88]
  413764:	bl	405638 <log_get_max_level_realm@plt>
  413768:	ldr	w8, [sp, #96]
  41376c:	and	w8, w8, #0x7
  413770:	cmp	w0, w8
  413774:	b.lt	4137b0 <parse_proc_cmdline_item+0x9b4>  // b.tstop
  413778:	ldr	w8, [sp, #88]
  41377c:	ldr	w9, [sp, #96]
  413780:	orr	w0, w9, w8, lsl #10
  413784:	ldr	w1, [sp, #92]
  413788:	ldr	x10, [sp, #72]
  41378c:	ldr	x6, [x10, #24]
  413790:	ldr	x2, [sp, #64]
  413794:	mov	w3, #0x634                 	// #1588
  413798:	ldr	x4, [sp, #56]
  41379c:	adrp	x5, 42c000 <_fini+0x23a8>
  4137a0:	add	x5, x5, #0x523
  4137a4:	bl	405648 <log_internal_realm@plt>
  4137a8:	str	w0, [sp]
  4137ac:	b	4137c4 <parse_proc_cmdline_item+0x9c8>
  4137b0:	ldr	w0, [sp, #92]
  4137b4:	bl	405658 <abs@plt>
  4137b8:	mov	w8, wzr
  4137bc:	subs	w8, w8, w0, uxtb
  4137c0:	str	w8, [sp]
  4137c4:	ldr	w8, [sp]
  4137c8:	str	w8, [sp, #84]
  4137cc:	stur	wzr, [x29, #-4]
  4137d0:	ldur	w0, [x29, #-4]
  4137d4:	ldr	x28, [sp, #304]
  4137d8:	ldp	x29, x30, [sp, #288]
  4137dc:	add	sp, sp, #0x140
  4137e0:	ret

00000000004137e4 <server_open_varlink>:
  4137e4:	sub	sp, sp, #0x40
  4137e8:	stp	x29, x30, [sp, #48]
  4137ec:	add	x29, sp, #0x30
  4137f0:	adrp	x8, 42a000 <_fini+0x3a8>
  4137f4:	add	x8, x8, #0x3c8
  4137f8:	add	x2, x8, #0x3
  4137fc:	stur	x0, [x29, #-16]
  413800:	str	x2, [sp, #16]
  413804:	ldur	x8, [x29, #-16]
  413808:	cmp	x8, #0x0
  41380c:	cset	w9, ne  // ne = any
  413810:	mov	w10, #0x1                   	// #1
  413814:	eor	w9, w9, #0x1
  413818:	eor	w9, w9, w10
  41381c:	eor	w9, w9, w10
  413820:	and	w9, w9, #0x1
  413824:	mov	w0, w9
  413828:	sxtw	x8, w0
  41382c:	cbz	x8, 413854 <server_open_varlink+0x70>
  413830:	mov	w8, wzr
  413834:	mov	w0, w8
  413838:	adrp	x1, 429000 <journal_ratelimit_group_free+0x70>
  41383c:	add	x1, x1, #0xdc8
  413840:	ldr	x2, [sp, #16]
  413844:	mov	w3, #0x7ac                 	// #1964
  413848:	adrp	x4, 42c000 <_fini+0x23a8>
  41384c:	add	x4, x4, #0x5d5
  413850:	bl	405718 <log_assert_failed_realm@plt>
  413854:	ldur	x8, [x29, #-16]
  413858:	add	x0, x8, #0x2f8
  41385c:	mov	w1, #0x1                   	// #1
  413860:	bl	405df8 <varlink_server_new@plt>
  413864:	stur	w0, [x29, #-20]
  413868:	ldur	w9, [x29, #-20]
  41386c:	cmp	w9, #0x0
  413870:	cset	w9, ge  // ge = tcont
  413874:	tbnz	w9, #0, 413884 <server_open_varlink+0xa0>
  413878:	ldur	w8, [x29, #-20]
  41387c:	stur	w8, [x29, #-4]
  413880:	b	413990 <server_open_varlink+0x1ac>
  413884:	ldur	x8, [x29, #-16]
  413888:	ldr	x0, [x8, #760]
  41388c:	ldur	x1, [x29, #-16]
  413890:	bl	405e08 <varlink_server_set_userdata@plt>
  413894:	ldur	x8, [x29, #-16]
  413898:	ldr	x8, [x8, #760]
  41389c:	mov	x0, x8
  4138a0:	adrp	x1, 42c000 <_fini+0x23a8>
  4138a4:	add	x1, x1, #0x5f7
  4138a8:	adrp	x2, 417000 <patch_min_use+0xa8>
  4138ac:	add	x2, x2, #0xfc
  4138b0:	adrp	x3, 42c000 <_fini+0x23a8>
  4138b4:	add	x3, x3, #0x616
  4138b8:	adrp	x4, 417000 <patch_min_use+0xa8>
  4138bc:	add	x4, x4, #0x58c
  4138c0:	adrp	x5, 42c000 <_fini+0x23a8>
  4138c4:	add	x5, x5, #0x630
  4138c8:	adrp	x6, 417000 <patch_min_use+0xa8>
  4138cc:	add	x6, x6, #0x72c
  4138d0:	adrp	x7, 42c000 <_fini+0x23a8>
  4138d4:	add	x7, x7, #0x64e
  4138d8:	mov	x8, sp
  4138dc:	adrp	x9, 417000 <patch_min_use+0xa8>
  4138e0:	add	x9, x9, #0x8cc
  4138e4:	str	x9, [x8]
  4138e8:	mov	x8, sp
  4138ec:	mov	x9, xzr
  4138f0:	str	x9, [x8, #8]
  4138f4:	bl	405e18 <varlink_server_bind_method_many_internal@plt>
  4138f8:	stur	w0, [x29, #-20]
  4138fc:	ldur	w10, [x29, #-20]
  413900:	cmp	w10, #0x0
  413904:	cset	w10, ge  // ge = tcont
  413908:	tbnz	w10, #0, 413918 <server_open_varlink+0x134>
  41390c:	ldur	w8, [x29, #-20]
  413910:	stur	w8, [x29, #-4]
  413914:	b	413990 <server_open_varlink+0x1ac>
  413918:	ldur	x8, [x29, #-16]
  41391c:	ldr	x0, [x8, #760]
  413920:	adrp	x1, 42c000 <_fini+0x23a8>
  413924:	add	x1, x1, #0x66f
  413928:	mov	w2, #0x180                 	// #384
  41392c:	bl	405e28 <varlink_server_listen_address@plt>
  413930:	stur	w0, [x29, #-20]
  413934:	ldur	w9, [x29, #-20]
  413938:	cmp	w9, #0x0
  41393c:	cset	w9, ge  // ge = tcont
  413940:	tbnz	w9, #0, 413950 <server_open_varlink+0x16c>
  413944:	ldur	w8, [x29, #-20]
  413948:	stur	w8, [x29, #-4]
  41394c:	b	413990 <server_open_varlink+0x1ac>
  413950:	ldur	x8, [x29, #-16]
  413954:	ldr	x0, [x8, #760]
  413958:	ldur	x8, [x29, #-16]
  41395c:	ldr	x1, [x8, #32]
  413960:	mov	x8, xzr
  413964:	mov	x2, x8
  413968:	bl	405e38 <varlink_server_attach_event@plt>
  41396c:	stur	w0, [x29, #-20]
  413970:	ldur	w9, [x29, #-20]
  413974:	cmp	w9, #0x0
  413978:	cset	w9, ge  // ge = tcont
  41397c:	tbnz	w9, #0, 41398c <server_open_varlink+0x1a8>
  413980:	ldur	w8, [x29, #-20]
  413984:	stur	w8, [x29, #-4]
  413988:	b	413990 <server_open_varlink+0x1ac>
  41398c:	stur	wzr, [x29, #-4]
  413990:	ldur	w0, [x29, #-4]
  413994:	ldp	x29, x30, [sp, #48]
  413998:	add	sp, sp, #0x40
  41399c:	ret

00000000004139a0 <server_open_hostname>:
  4139a0:	sub	sp, sp, #0x90
  4139a4:	stp	x29, x30, [sp, #128]
  4139a8:	add	x29, sp, #0x80
  4139ac:	adrp	x8, 42a000 <_fini+0x3a8>
  4139b0:	add	x8, x8, #0x3c8
  4139b4:	add	x8, x8, #0x3
  4139b8:	adrp	x9, 42c000 <_fini+0x23a8>
  4139bc:	add	x9, x9, #0xc20
  4139c0:	stur	x0, [x29, #-16]
  4139c4:	str	x8, [sp, #32]
  4139c8:	str	x9, [sp, #24]
  4139cc:	ldur	x8, [x29, #-16]
  4139d0:	cmp	x8, #0x0
  4139d4:	cset	w9, ne  // ne = any
  4139d8:	mov	w10, #0x1                   	// #1
  4139dc:	eor	w9, w9, #0x1
  4139e0:	eor	w9, w9, w10
  4139e4:	eor	w9, w9, w10
  4139e8:	and	w9, w9, #0x1
  4139ec:	mov	w0, w9
  4139f0:	sxtw	x8, w0
  4139f4:	cbz	x8, 413a1c <server_open_hostname+0x7c>
  4139f8:	mov	w8, wzr
  4139fc:	mov	w0, w8
  413a00:	adrp	x1, 429000 <journal_ratelimit_group_free+0x70>
  413a04:	add	x1, x1, #0xdc8
  413a08:	ldr	x2, [sp, #32]
  413a0c:	mov	w3, #0x68b                 	// #1675
  413a10:	adrp	x4, 42c000 <_fini+0x23a8>
  413a14:	add	x4, x4, #0xbe3
  413a18:	bl	405718 <log_assert_failed_realm@plt>
  413a1c:	adrp	x0, 42c000 <_fini+0x23a8>
  413a20:	add	x0, x0, #0xc06
  413a24:	mov	w1, #0x900                 	// #2304
  413a28:	movk	w1, #0x8, lsl #16
  413a2c:	bl	405898 <open64@plt>
  413a30:	ldur	x8, [x29, #-16]
  413a34:	str	w0, [x8, #20]
  413a38:	ldur	x8, [x29, #-16]
  413a3c:	ldr	w9, [x8, #20]
  413a40:	cmp	w9, #0x0
  413a44:	cset	w9, ge  // ge = tcont
  413a48:	tbnz	w9, #0, 413ad4 <server_open_hostname+0x134>
  413a4c:	mov	w8, #0x3                   	// #3
  413a50:	stur	w8, [x29, #-24]
  413a54:	bl	405768 <__errno_location@plt>
  413a58:	ldr	w8, [x0]
  413a5c:	stur	w8, [x29, #-28]
  413a60:	stur	wzr, [x29, #-32]
  413a64:	ldur	w0, [x29, #-32]
  413a68:	bl	405638 <log_get_max_level_realm@plt>
  413a6c:	ldur	w8, [x29, #-24]
  413a70:	and	w8, w8, #0x7
  413a74:	cmp	w0, w8
  413a78:	b.lt	413aac <server_open_hostname+0x10c>  // b.tstop
  413a7c:	ldur	w8, [x29, #-32]
  413a80:	ldur	w9, [x29, #-24]
  413a84:	orr	w0, w9, w8, lsl #10
  413a88:	ldur	w1, [x29, #-28]
  413a8c:	ldr	x2, [sp, #32]
  413a90:	mov	w3, #0x690                 	// #1680
  413a94:	ldr	x4, [sp, #24]
  413a98:	adrp	x5, 42c000 <_fini+0x23a8>
  413a9c:	add	x5, x5, #0xc35
  413aa0:	bl	405648 <log_internal_realm@plt>
  413aa4:	str	w0, [sp, #20]
  413aa8:	b	413ac0 <server_open_hostname+0x120>
  413aac:	ldur	w0, [x29, #-28]
  413ab0:	bl	405658 <abs@plt>
  413ab4:	mov	w8, wzr
  413ab8:	subs	w8, w8, w0, uxtb
  413abc:	str	w8, [sp, #20]
  413ac0:	ldr	w8, [sp, #20]
  413ac4:	stur	w8, [x29, #-36]
  413ac8:	ldur	w8, [x29, #-36]
  413acc:	stur	w8, [x29, #-4]
  413ad0:	b	413cec <server_open_hostname+0x34c>
  413ad4:	ldur	x8, [x29, #-16]
  413ad8:	ldr	x0, [x8, #32]
  413adc:	ldur	x8, [x29, #-16]
  413ae0:	add	x1, x8, #0x80
  413ae4:	ldur	x8, [x29, #-16]
  413ae8:	ldr	w2, [x8, #20]
  413aec:	ldur	x5, [x29, #-16]
  413af0:	mov	w9, wzr
  413af4:	mov	w3, w9
  413af8:	adrp	x4, 418000 <server_relinquish_var+0x24>
  413afc:	add	x4, x4, #0x228
  413b00:	bl	4058a8 <sd_event_add_io@plt>
  413b04:	stur	w0, [x29, #-20]
  413b08:	ldur	w9, [x29, #-20]
  413b0c:	cmp	w9, #0x0
  413b10:	cset	w9, ge  // ge = tcont
  413b14:	tbnz	w9, #0, 413c40 <server_open_hostname+0x2a0>
  413b18:	ldur	w8, [x29, #-20]
  413b1c:	mov	w9, #0xffffffff            	// #-1
  413b20:	cmp	w8, w9
  413b24:	b.ne	413bbc <server_open_hostname+0x21c>  // b.any
  413b28:	mov	w8, #0x4                   	// #4
  413b2c:	stur	w8, [x29, #-40]
  413b30:	ldur	w8, [x29, #-20]
  413b34:	stur	w8, [x29, #-44]
  413b38:	stur	wzr, [x29, #-48]
  413b3c:	ldur	w0, [x29, #-48]
  413b40:	bl	405638 <log_get_max_level_realm@plt>
  413b44:	ldur	w8, [x29, #-40]
  413b48:	and	w8, w8, #0x7
  413b4c:	cmp	w0, w8
  413b50:	b.lt	413b84 <server_open_hostname+0x1e4>  // b.tstop
  413b54:	ldur	w8, [x29, #-48]
  413b58:	ldur	w9, [x29, #-40]
  413b5c:	orr	w0, w9, w8, lsl #10
  413b60:	ldur	w1, [x29, #-44]
  413b64:	ldr	x2, [sp, #32]
  413b68:	mov	w3, #0x697                 	// #1687
  413b6c:	ldr	x4, [sp, #24]
  413b70:	adrp	x5, 42c000 <_fini+0x23a8>
  413b74:	add	x5, x5, #0xc62
  413b78:	bl	405648 <log_internal_realm@plt>
  413b7c:	str	w0, [sp, #16]
  413b80:	b	413b98 <server_open_hostname+0x1f8>
  413b84:	ldur	w0, [x29, #-44]
  413b88:	bl	405658 <abs@plt>
  413b8c:	mov	w8, wzr
  413b90:	subs	w8, w8, w0, uxtb
  413b94:	str	w8, [sp, #16]
  413b98:	ldr	w8, [sp, #16]
  413b9c:	stur	w8, [x29, #-52]
  413ba0:	ldur	x9, [x29, #-16]
  413ba4:	ldr	w0, [x9, #20]
  413ba8:	bl	4058c8 <safe_close@plt>
  413bac:	ldur	x9, [x29, #-16]
  413bb0:	str	w0, [x9, #20]
  413bb4:	stur	wzr, [x29, #-4]
  413bb8:	b	413cec <server_open_hostname+0x34c>
  413bbc:	mov	w8, #0x3                   	// #3
  413bc0:	stur	w8, [x29, #-56]
  413bc4:	ldur	w8, [x29, #-20]
  413bc8:	stur	w8, [x29, #-60]
  413bcc:	str	wzr, [sp, #64]
  413bd0:	ldr	w0, [sp, #64]
  413bd4:	bl	405638 <log_get_max_level_realm@plt>
  413bd8:	ldur	w8, [x29, #-56]
  413bdc:	and	w8, w8, #0x7
  413be0:	cmp	w0, w8
  413be4:	b.lt	413c18 <server_open_hostname+0x278>  // b.tstop
  413be8:	ldr	w8, [sp, #64]
  413bec:	ldur	w9, [x29, #-56]
  413bf0:	orr	w0, w9, w8, lsl #10
  413bf4:	ldur	w1, [x29, #-60]
  413bf8:	ldr	x2, [sp, #32]
  413bfc:	mov	w3, #0x69c                 	// #1692
  413c00:	ldr	x4, [sp, #24]
  413c04:	adrp	x5, 42c000 <_fini+0x23a8>
  413c08:	add	x5, x5, #0xc9d
  413c0c:	bl	405648 <log_internal_realm@plt>
  413c10:	str	w0, [sp, #12]
  413c14:	b	413c2c <server_open_hostname+0x28c>
  413c18:	ldur	w0, [x29, #-60]
  413c1c:	bl	405658 <abs@plt>
  413c20:	mov	w8, wzr
  413c24:	subs	w8, w8, w0, uxtb
  413c28:	str	w8, [sp, #12]
  413c2c:	ldr	w8, [sp, #12]
  413c30:	str	w8, [sp, #60]
  413c34:	ldr	w8, [sp, #60]
  413c38:	stur	w8, [x29, #-4]
  413c3c:	b	413cec <server_open_hostname+0x34c>
  413c40:	ldur	x8, [x29, #-16]
  413c44:	ldr	x0, [x8, #128]
  413c48:	mov	x1, #0xffffffffffffff92    	// #-110
  413c4c:	bl	4058b8 <sd_event_source_set_priority@plt>
  413c50:	stur	w0, [x29, #-20]
  413c54:	ldur	w9, [x29, #-20]
  413c58:	cmp	w9, #0x0
  413c5c:	cset	w9, ge  // ge = tcont
  413c60:	tbnz	w9, #0, 413ce8 <server_open_hostname+0x348>
  413c64:	mov	w8, #0x3                   	// #3
  413c68:	str	w8, [sp, #56]
  413c6c:	ldur	w8, [x29, #-20]
  413c70:	str	w8, [sp, #52]
  413c74:	str	wzr, [sp, #48]
  413c78:	ldr	w0, [sp, #48]
  413c7c:	bl	405638 <log_get_max_level_realm@plt>
  413c80:	ldr	w8, [sp, #56]
  413c84:	and	w8, w8, #0x7
  413c88:	cmp	w0, w8
  413c8c:	b.lt	413cc0 <server_open_hostname+0x320>  // b.tstop
  413c90:	ldr	w8, [sp, #48]
  413c94:	ldr	w9, [sp, #56]
  413c98:	orr	w0, w9, w8, lsl #10
  413c9c:	ldr	w1, [sp, #52]
  413ca0:	ldr	x2, [sp, #32]
  413ca4:	mov	w3, #0x6a1                 	// #1697
  413ca8:	ldr	x4, [sp, #24]
  413cac:	adrp	x5, 42c000 <_fini+0x23a8>
  413cb0:	add	x5, x5, #0xcce
  413cb4:	bl	405648 <log_internal_realm@plt>
  413cb8:	str	w0, [sp, #8]
  413cbc:	b	413cd4 <server_open_hostname+0x334>
  413cc0:	ldr	w0, [sp, #52]
  413cc4:	bl	405658 <abs@plt>
  413cc8:	mov	w8, wzr
  413ccc:	subs	w8, w8, w0, uxtb
  413cd0:	str	w8, [sp, #8]
  413cd4:	ldr	w8, [sp, #8]
  413cd8:	str	w8, [sp, #44]
  413cdc:	ldr	w8, [sp, #44]
  413ce0:	stur	w8, [x29, #-4]
  413ce4:	b	413cec <server_open_hostname+0x34c>
  413ce8:	stur	wzr, [x29, #-4]
  413cec:	ldur	w0, [x29, #-4]
  413cf0:	ldp	x29, x30, [sp, #128]
  413cf4:	add	sp, sp, #0x90
  413cf8:	ret

0000000000413cfc <setup_signals>:
  413cfc:	sub	sp, sp, #0x40
  413d00:	stp	x29, x30, [sp, #48]
  413d04:	add	x29, sp, #0x30
  413d08:	adrp	x8, 42a000 <_fini+0x3a8>
  413d0c:	add	x8, x8, #0x3c8
  413d10:	add	x8, x8, #0x3
  413d14:	stur	x0, [x29, #-16]
  413d18:	str	x8, [sp, #16]
  413d1c:	ldur	x8, [x29, #-16]
  413d20:	cmp	x8, #0x0
  413d24:	cset	w9, ne  // ne = any
  413d28:	mov	w10, #0x1                   	// #1
  413d2c:	eor	w9, w9, #0x1
  413d30:	eor	w9, w9, w10
  413d34:	eor	w9, w9, w10
  413d38:	and	w9, w9, #0x1
  413d3c:	mov	w0, w9
  413d40:	sxtw	x8, w0
  413d44:	cbz	x8, 413d6c <setup_signals+0x70>
  413d48:	mov	w8, wzr
  413d4c:	mov	w0, w8
  413d50:	adrp	x1, 429000 <journal_ratelimit_group_free+0x70>
  413d54:	add	x1, x1, #0xdc8
  413d58:	ldr	x2, [sp, #16]
  413d5c:	mov	w3, #0x5a9                 	// #1449
  413d60:	adrp	x4, 42c000 <_fini+0x23a8>
  413d64:	add	x4, x4, #0xd4d
  413d68:	bl	405718 <log_assert_failed_realm@plt>
  413d6c:	bl	405e48 <__libc_current_sigrtmin@plt>
  413d70:	add	w6, w0, #0x1
  413d74:	mov	w8, #0x2                   	// #2
  413d78:	mov	w0, w8
  413d7c:	mov	x9, xzr
  413d80:	mov	x1, x9
  413d84:	mov	w2, w8
  413d88:	mov	w3, #0xf                   	// #15
  413d8c:	mov	w4, #0xa                   	// #10
  413d90:	mov	w5, #0xc                   	// #12
  413d94:	mov	w7, #0xffffffff            	// #-1
  413d98:	bl	405e58 <sigprocmask_many@plt>
  413d9c:	cmp	w0, #0x0
  413da0:	cset	w8, ge  // ge = tcont
  413da4:	mov	w10, #0x1                   	// #1
  413da8:	eor	w8, w8, #0x1
  413dac:	eor	w8, w8, w10
  413db0:	eor	w8, w8, w10
  413db4:	and	w8, w8, #0x1
  413db8:	mov	w1, w8
  413dbc:	sxtw	x9, w1
  413dc0:	cbz	x9, 413de8 <setup_signals+0xec>
  413dc4:	mov	w8, wzr
  413dc8:	mov	w0, w8
  413dcc:	adrp	x1, 42c000 <_fini+0x23a8>
  413dd0:	add	x1, x1, #0xd69
  413dd4:	ldr	x2, [sp, #16]
  413dd8:	mov	w3, #0x5ab                 	// #1451
  413ddc:	adrp	x4, 42c000 <_fini+0x23a8>
  413de0:	add	x4, x4, #0xd4d
  413de4:	bl	405718 <log_assert_failed_realm@plt>
  413de8:	ldur	x8, [x29, #-16]
  413dec:	ldr	x0, [x8, #32]
  413df0:	ldur	x8, [x29, #-16]
  413df4:	add	x1, x8, #0x58
  413df8:	ldur	x4, [x29, #-16]
  413dfc:	mov	w2, #0xa                   	// #10
  413e00:	adrp	x3, 418000 <server_relinquish_var+0x24>
  413e04:	add	x3, x3, #0x2c8
  413e08:	bl	405e68 <sd_event_add_signal@plt>
  413e0c:	stur	w0, [x29, #-20]
  413e10:	ldur	w9, [x29, #-20]
  413e14:	cmp	w9, #0x0
  413e18:	cset	w9, ge  // ge = tcont
  413e1c:	tbnz	w9, #0, 413e2c <setup_signals+0x130>
  413e20:	ldur	w8, [x29, #-20]
  413e24:	stur	w8, [x29, #-4]
  413e28:	b	413fe4 <setup_signals+0x2e8>
  413e2c:	ldur	x8, [x29, #-16]
  413e30:	ldr	x0, [x8, #32]
  413e34:	ldur	x8, [x29, #-16]
  413e38:	add	x1, x8, #0x60
  413e3c:	ldur	x4, [x29, #-16]
  413e40:	mov	w2, #0xc                   	// #12
  413e44:	adrp	x3, 418000 <server_relinquish_var+0x24>
  413e48:	add	x3, x3, #0x3e4
  413e4c:	bl	405e68 <sd_event_add_signal@plt>
  413e50:	stur	w0, [x29, #-20]
  413e54:	ldur	w9, [x29, #-20]
  413e58:	cmp	w9, #0x0
  413e5c:	cset	w9, ge  // ge = tcont
  413e60:	tbnz	w9, #0, 413e70 <setup_signals+0x174>
  413e64:	ldur	w8, [x29, #-20]
  413e68:	stur	w8, [x29, #-4]
  413e6c:	b	413fe4 <setup_signals+0x2e8>
  413e70:	ldur	x8, [x29, #-16]
  413e74:	ldr	x0, [x8, #32]
  413e78:	ldur	x8, [x29, #-16]
  413e7c:	add	x1, x8, #0x68
  413e80:	ldur	x4, [x29, #-16]
  413e84:	mov	w2, #0xf                   	// #15
  413e88:	adrp	x3, 418000 <server_relinquish_var+0x24>
  413e8c:	add	x3, x3, #0x500
  413e90:	bl	405e68 <sd_event_add_signal@plt>
  413e94:	stur	w0, [x29, #-20]
  413e98:	ldur	w9, [x29, #-20]
  413e9c:	cmp	w9, #0x0
  413ea0:	cset	w9, ge  // ge = tcont
  413ea4:	tbnz	w9, #0, 413eb4 <setup_signals+0x1b8>
  413ea8:	ldur	w8, [x29, #-20]
  413eac:	stur	w8, [x29, #-4]
  413eb0:	b	413fe4 <setup_signals+0x2e8>
  413eb4:	ldur	x8, [x29, #-16]
  413eb8:	ldr	x0, [x8, #104]
  413ebc:	mov	x1, #0x14                  	// #20
  413ec0:	bl	4058b8 <sd_event_source_set_priority@plt>
  413ec4:	stur	w0, [x29, #-20]
  413ec8:	ldur	w9, [x29, #-20]
  413ecc:	cmp	w9, #0x0
  413ed0:	cset	w9, ge  // ge = tcont
  413ed4:	tbnz	w9, #0, 413ee4 <setup_signals+0x1e8>
  413ed8:	ldur	w8, [x29, #-20]
  413edc:	stur	w8, [x29, #-4]
  413ee0:	b	413fe4 <setup_signals+0x2e8>
  413ee4:	ldur	x8, [x29, #-16]
  413ee8:	ldr	x0, [x8, #32]
  413eec:	ldur	x8, [x29, #-16]
  413ef0:	add	x1, x8, #0x70
  413ef4:	ldur	x4, [x29, #-16]
  413ef8:	mov	w2, #0x2                   	// #2
  413efc:	adrp	x3, 418000 <server_relinquish_var+0x24>
  413f00:	add	x3, x3, #0x500
  413f04:	bl	405e68 <sd_event_add_signal@plt>
  413f08:	stur	w0, [x29, #-20]
  413f0c:	ldur	w9, [x29, #-20]
  413f10:	cmp	w9, #0x0
  413f14:	cset	w9, ge  // ge = tcont
  413f18:	tbnz	w9, #0, 413f28 <setup_signals+0x22c>
  413f1c:	ldur	w8, [x29, #-20]
  413f20:	stur	w8, [x29, #-4]
  413f24:	b	413fe4 <setup_signals+0x2e8>
  413f28:	ldur	x8, [x29, #-16]
  413f2c:	ldr	x0, [x8, #112]
  413f30:	mov	x1, #0x14                  	// #20
  413f34:	bl	4058b8 <sd_event_source_set_priority@plt>
  413f38:	stur	w0, [x29, #-20]
  413f3c:	ldur	w9, [x29, #-20]
  413f40:	cmp	w9, #0x0
  413f44:	cset	w9, ge  // ge = tcont
  413f48:	tbnz	w9, #0, 413f58 <setup_signals+0x25c>
  413f4c:	ldur	w8, [x29, #-20]
  413f50:	stur	w8, [x29, #-4]
  413f54:	b	413fe4 <setup_signals+0x2e8>
  413f58:	ldur	x8, [x29, #-16]
  413f5c:	ldr	x0, [x8, #32]
  413f60:	ldur	x8, [x29, #-16]
  413f64:	add	x1, x8, #0x78
  413f68:	str	x0, [sp, #8]
  413f6c:	str	x1, [sp]
  413f70:	bl	405e48 <__libc_current_sigrtmin@plt>
  413f74:	add	w2, w0, #0x1
  413f78:	ldur	x4, [x29, #-16]
  413f7c:	ldr	x0, [sp, #8]
  413f80:	ldr	x1, [sp]
  413f84:	adrp	x3, 418000 <server_relinquish_var+0x24>
  413f88:	add	x3, x3, #0x5b8
  413f8c:	bl	405e68 <sd_event_add_signal@plt>
  413f90:	stur	w0, [x29, #-20]
  413f94:	ldur	w9, [x29, #-20]
  413f98:	cmp	w9, #0x0
  413f9c:	cset	w9, ge  // ge = tcont
  413fa0:	tbnz	w9, #0, 413fb0 <setup_signals+0x2b4>
  413fa4:	ldur	w8, [x29, #-20]
  413fa8:	stur	w8, [x29, #-4]
  413fac:	b	413fe4 <setup_signals+0x2e8>
  413fb0:	ldur	x8, [x29, #-16]
  413fb4:	ldr	x0, [x8, #120]
  413fb8:	mov	x1, #0xf                   	// #15
  413fbc:	bl	4058b8 <sd_event_source_set_priority@plt>
  413fc0:	stur	w0, [x29, #-20]
  413fc4:	ldur	w9, [x29, #-20]
  413fc8:	cmp	w9, #0x0
  413fcc:	cset	w9, ge  // ge = tcont
  413fd0:	tbnz	w9, #0, 413fe0 <setup_signals+0x2e4>
  413fd4:	ldur	w8, [x29, #-20]
  413fd8:	stur	w8, [x29, #-4]
  413fdc:	b	413fe4 <setup_signals+0x2e8>
  413fe0:	stur	wzr, [x29, #-4]
  413fe4:	ldur	w0, [x29, #-4]
  413fe8:	ldp	x29, x30, [sp, #48]
  413fec:	add	sp, sp, #0x40
  413ff0:	ret

0000000000413ff4 <server_cache_hostname>:
  413ff4:	sub	sp, sp, #0x40
  413ff8:	stp	x29, x30, [sp, #48]
  413ffc:	add	x29, sp, #0x30
  414000:	mov	x8, xzr
  414004:	adrp	x9, 42a000 <_fini+0x3a8>
  414008:	add	x9, x9, #0x3c8
  41400c:	add	x2, x9, #0x3
  414010:	stur	x0, [x29, #-8]
  414014:	stur	x8, [x29, #-16]
  414018:	str	x2, [sp, #8]
  41401c:	ldur	x8, [x29, #-8]
  414020:	cmp	x8, #0x0
  414024:	cset	w9, ne  // ne = any
  414028:	mov	w10, #0x1                   	// #1
  41402c:	eor	w9, w9, #0x1
  414030:	eor	w9, w9, w10
  414034:	eor	w9, w9, w10
  414038:	and	w9, w9, #0x1
  41403c:	mov	w0, w9
  414040:	sxtw	x8, w0
  414044:	cbz	x8, 41406c <server_cache_hostname+0x78>
  414048:	mov	w8, wzr
  41404c:	mov	w0, w8
  414050:	adrp	x1, 429000 <journal_ratelimit_group_free+0x70>
  414054:	add	x1, x1, #0xdc8
  414058:	ldr	x2, [sp, #8]
  41405c:	mov	w3, #0x2de                 	// #734
  414060:	adrp	x4, 42d000 <_fini+0x33a8>
  414064:	add	x4, x4, #0x8
  414068:	bl	405718 <log_assert_failed_realm@plt>
  41406c:	bl	405e78 <gethostname_malloc@plt>
  414070:	stur	x0, [x29, #-16]
  414074:	ldur	x8, [x29, #-16]
  414078:	cbnz	x8, 414088 <server_cache_hostname+0x94>
  41407c:	mov	w8, #0x1                   	// #1
  414080:	str	w8, [sp, #20]
  414084:	b	4140d4 <server_cache_hostname+0xe0>
  414088:	ldur	x1, [x29, #-16]
  41408c:	adrp	x0, 42d000 <_fini+0x33a8>
  414090:	add	x0, x0, #0x2d
  414094:	mov	x8, xzr
  414098:	mov	x2, x8
  41409c:	bl	4057e8 <strjoin_real@plt>
  4140a0:	str	x0, [sp, #24]
  4140a4:	ldr	x8, [sp, #24]
  4140a8:	cbnz	x8, 4140b8 <server_cache_hostname+0xc4>
  4140ac:	mov	w8, #0x1                   	// #1
  4140b0:	str	w8, [sp, #20]
  4140b4:	b	4140d4 <server_cache_hostname+0xe0>
  4140b8:	ldur	x8, [x29, #-8]
  4140bc:	ldr	x0, [x8, #680]
  4140c0:	bl	405778 <free@plt>
  4140c4:	ldr	x8, [sp, #24]
  4140c8:	ldur	x9, [x29, #-8]
  4140cc:	str	x8, [x9, #680]
  4140d0:	str	wzr, [sp, #20]
  4140d4:	sub	x0, x29, #0x10
  4140d8:	bl	40a1d8 <freep>
  4140dc:	ldp	x29, x30, [sp, #48]
  4140e0:	add	sp, sp, #0x40
  4140e4:	ret

00000000004140e8 <server_cache_boot_id>:
  4140e8:	sub	sp, sp, #0x40
  4140ec:	stp	x29, x30, [sp, #48]
  4140f0:	add	x29, sp, #0x30
  4140f4:	adrp	x8, 42a000 <_fini+0x3a8>
  4140f8:	add	x8, x8, #0x3c8
  4140fc:	add	x2, x8, #0x3
  414100:	stur	x0, [x29, #-8]
  414104:	str	x2, [sp, #8]
  414108:	ldur	x8, [x29, #-8]
  41410c:	cmp	x8, #0x0
  414110:	cset	w9, ne  // ne = any
  414114:	mov	w10, #0x1                   	// #1
  414118:	eor	w9, w9, #0x1
  41411c:	eor	w9, w9, w10
  414120:	eor	w9, w9, w10
  414124:	and	w9, w9, #0x1
  414128:	mov	w0, w9
  41412c:	sxtw	x8, w0
  414130:	cbz	x8, 414158 <server_cache_boot_id+0x70>
  414134:	mov	w8, wzr
  414138:	mov	w0, w8
  41413c:	adrp	x1, 429000 <journal_ratelimit_group_free+0x70>
  414140:	add	x1, x1, #0xdc8
  414144:	ldr	x2, [sp, #8]
  414148:	mov	w3, #0x2d1                 	// #721
  41414c:	adrp	x4, 42d000 <_fini+0x33a8>
  414150:	add	x4, x4, #0x38
  414154:	bl	405718 <log_assert_failed_realm@plt>
  414158:	add	x0, sp, #0x18
  41415c:	bl	405e88 <sd_id128_get_boot@plt>
  414160:	str	w0, [sp, #20]
  414164:	ldr	w8, [sp, #20]
  414168:	cmp	w8, #0x0
  41416c:	cset	w8, ge  // ge = tcont
  414170:	tbnz	w8, #0, 414178 <server_cache_boot_id+0x90>
  414174:	b	4141a4 <server_cache_boot_id+0xbc>
  414178:	ldur	x8, [x29, #-8]
  41417c:	add	x0, x8, #0x27e
  414180:	adrp	x1, 42d000 <_fini+0x33a8>
  414184:	add	x1, x1, #0x5c
  414188:	bl	405ad8 <stpcpy@plt>
  41418c:	ldr	x8, [sp, #24]
  414190:	ldr	x1, [sp, #32]
  414194:	str	x0, [sp]
  414198:	mov	x0, x8
  41419c:	ldr	x2, [sp]
  4141a0:	bl	405b08 <sd_id128_to_string@plt>
  4141a4:	ldp	x29, x30, [sp, #48]
  4141a8:	add	sp, sp, #0x40
  4141ac:	ret

00000000004141b0 <server_cache_machine_id>:
  4141b0:	sub	sp, sp, #0x40
  4141b4:	stp	x29, x30, [sp, #48]
  4141b8:	add	x29, sp, #0x30
  4141bc:	adrp	x8, 42a000 <_fini+0x3a8>
  4141c0:	add	x8, x8, #0x3c8
  4141c4:	add	x2, x8, #0x3
  4141c8:	stur	x0, [x29, #-8]
  4141cc:	str	x2, [sp, #8]
  4141d0:	ldur	x8, [x29, #-8]
  4141d4:	cmp	x8, #0x0
  4141d8:	cset	w9, ne  // ne = any
  4141dc:	mov	w10, #0x1                   	// #1
  4141e0:	eor	w9, w9, #0x1
  4141e4:	eor	w9, w9, w10
  4141e8:	eor	w9, w9, w10
  4141ec:	and	w9, w9, #0x1
  4141f0:	mov	w0, w9
  4141f4:	sxtw	x8, w0
  4141f8:	cbz	x8, 414220 <server_cache_machine_id+0x70>
  4141fc:	mov	w8, wzr
  414200:	mov	w0, w8
  414204:	adrp	x1, 429000 <journal_ratelimit_group_free+0x70>
  414208:	add	x1, x1, #0xdc8
  41420c:	ldr	x2, [sp, #8]
  414210:	mov	w3, #0x2c4                 	// #708
  414214:	adrp	x4, 42d000 <_fini+0x33a8>
  414218:	add	x4, x4, #0x66
  41421c:	bl	405718 <log_assert_failed_realm@plt>
  414220:	add	x0, sp, #0x18
  414224:	bl	405a28 <sd_id128_get_machine@plt>
  414228:	str	w0, [sp, #20]
  41422c:	ldr	w8, [sp, #20]
  414230:	cmp	w8, #0x0
  414234:	cset	w8, ge  // ge = tcont
  414238:	tbnz	w8, #0, 414240 <server_cache_machine_id+0x90>
  41423c:	b	41426c <server_cache_machine_id+0xbc>
  414240:	ldur	x8, [x29, #-8]
  414244:	add	x0, x8, #0x251
  414248:	adrp	x1, 42d000 <_fini+0x33a8>
  41424c:	add	x1, x1, #0x8d
  414250:	bl	405ad8 <stpcpy@plt>
  414254:	ldr	x8, [sp, #24]
  414258:	ldr	x1, [sp, #32]
  41425c:	str	x0, [sp]
  414260:	mov	x0, x8
  414264:	ldr	x2, [sp]
  414268:	bl	405b08 <sd_id128_to_string@plt>
  41426c:	ldp	x29, x30, [sp, #48]
  414270:	add	sp, sp, #0x40
  414274:	ret

0000000000414278 <server_connect_notify>:
  414278:	sub	sp, sp, #0x160
  41427c:	stp	x29, x30, [sp, #320]
  414280:	str	x28, [sp, #336]
  414284:	add	x29, sp, #0x140
  414288:	mov	x2, #0x80                  	// #128
  41428c:	mov	w8, wzr
  414290:	adrp	x9, 42a000 <_fini+0x3a8>
  414294:	add	x9, x9, #0x3c8
  414298:	add	x9, x9, #0x3
  41429c:	adrp	x10, 42d000 <_fini+0x33a8>
  4142a0:	add	x10, x10, #0xf5
  4142a4:	adrp	x11, 42d000 <_fini+0x33a8>
  4142a8:	add	x11, x11, #0x9a
  4142ac:	sub	x12, x29, #0x90
  4142b0:	stur	x0, [x29, #-16]
  4142b4:	mov	x0, x12
  4142b8:	mov	w1, w8
  4142bc:	str	x9, [sp, #64]
  4142c0:	str	x10, [sp, #56]
  4142c4:	str	x11, [sp, #48]
  4142c8:	bl	405c28 <memset@plt>
  4142cc:	ldur	x8, [x29, #-16]
  4142d0:	cmp	x8, #0x0
  4142d4:	cset	w9, ne  // ne = any
  4142d8:	mov	w10, #0x1                   	// #1
  4142dc:	eor	w9, w9, #0x1
  4142e0:	eor	w9, w9, w10
  4142e4:	eor	w9, w9, w10
  4142e8:	and	w9, w9, #0x1
  4142ec:	mov	w0, w9
  4142f0:	sxtw	x8, w0
  4142f4:	cbz	x8, 414318 <server_connect_notify+0xa0>
  4142f8:	mov	w8, wzr
  4142fc:	mov	w0, w8
  414300:	adrp	x1, 429000 <journal_ratelimit_group_free+0x70>
  414304:	add	x1, x1, #0xdc8
  414308:	ldr	x2, [sp, #64]
  41430c:	mov	w3, #0x703                 	// #1795
  414310:	ldr	x4, [sp, #48]
  414314:	bl	405718 <log_assert_failed_realm@plt>
  414318:	ldur	x8, [x29, #-16]
  41431c:	ldr	w9, [x8, #24]
  414320:	cmp	w9, #0x0
  414324:	cset	w9, lt  // lt = tstop
  414328:	mov	w10, #0x1                   	// #1
  41432c:	eor	w9, w9, #0x1
  414330:	eor	w9, w9, w10
  414334:	eor	w9, w9, w10
  414338:	and	w9, w9, #0x1
  41433c:	mov	w0, w9
  414340:	sxtw	x8, w0
  414344:	cbz	x8, 414368 <server_connect_notify+0xf0>
  414348:	mov	w8, wzr
  41434c:	mov	w0, w8
  414350:	adrp	x1, 42d000 <_fini+0x33a8>
  414354:	add	x1, x1, #0xbe
  414358:	ldr	x2, [sp, #64]
  41435c:	mov	w3, #0x704                 	// #1796
  414360:	ldr	x4, [sp, #48]
  414364:	bl	405718 <log_assert_failed_realm@plt>
  414368:	ldur	x8, [x29, #-16]
  41436c:	ldr	x8, [x8, #136]
  414370:	cmp	x8, #0x0
  414374:	cset	w9, ne  // ne = any
  414378:	mov	w10, #0x1                   	// #1
  41437c:	eor	w9, w9, #0x1
  414380:	eor	w9, w9, w10
  414384:	eor	w9, w9, w10
  414388:	eor	w9, w9, w10
  41438c:	and	w9, w9, #0x1
  414390:	mov	w0, w9
  414394:	sxtw	x8, w0
  414398:	cbz	x8, 4143bc <server_connect_notify+0x144>
  41439c:	mov	w8, wzr
  4143a0:	mov	w0, w8
  4143a4:	adrp	x1, 42d000 <_fini+0x33a8>
  4143a8:	add	x1, x1, #0xcf
  4143ac:	ldr	x2, [sp, #64]
  4143b0:	mov	w3, #0x705                 	// #1797
  4143b4:	ldr	x4, [sp, #48]
  4143b8:	bl	405718 <log_assert_failed_realm@plt>
  4143bc:	adrp	x0, 42d000 <_fini+0x33a8>
  4143c0:	add	x0, x0, #0xe7
  4143c4:	bl	405e98 <getenv@plt>
  4143c8:	stur	x0, [x29, #-152]
  4143cc:	ldur	x8, [x29, #-152]
  4143d0:	cbnz	x8, 4143dc <server_connect_notify+0x164>
  4143d4:	stur	wzr, [x29, #-4]
  4143d8:	b	414808 <server_connect_notify+0x590>
  4143dc:	ldur	x1, [x29, #-152]
  4143e0:	sub	x0, x29, #0x90
  4143e4:	bl	405ea8 <sockaddr_un_set_path@plt>
  4143e8:	str	w0, [sp, #160]
  4143ec:	ldr	w8, [sp, #160]
  4143f0:	cmp	w8, #0x0
  4143f4:	cset	w8, ge  // ge = tcont
  4143f8:	tbnz	w8, #0, 414484 <server_connect_notify+0x20c>
  4143fc:	mov	w8, #0x3                   	// #3
  414400:	str	w8, [sp, #156]
  414404:	ldr	w8, [sp, #160]
  414408:	str	w8, [sp, #152]
  41440c:	str	wzr, [sp, #148]
  414410:	ldr	w0, [sp, #148]
  414414:	bl	405638 <log_get_max_level_realm@plt>
  414418:	ldr	w8, [sp, #156]
  41441c:	and	w8, w8, #0x7
  414420:	cmp	w0, w8
  414424:	b.lt	41445c <server_connect_notify+0x1e4>  // b.tstop
  414428:	ldr	w8, [sp, #148]
  41442c:	ldr	w9, [sp, #156]
  414430:	orr	w0, w9, w8, lsl #10
  414434:	ldr	w1, [sp, #152]
  414438:	ldur	x6, [x29, #-152]
  41443c:	ldr	x2, [sp, #64]
  414440:	mov	w3, #0x71a                 	// #1818
  414444:	ldr	x4, [sp, #56]
  414448:	adrp	x5, 42d000 <_fini+0x33a8>
  41444c:	add	x5, x5, #0x10b
  414450:	bl	405648 <log_internal_realm@plt>
  414454:	str	w0, [sp, #44]
  414458:	b	414470 <server_connect_notify+0x1f8>
  41445c:	ldr	w0, [sp, #152]
  414460:	bl	405658 <abs@plt>
  414464:	mov	w8, wzr
  414468:	subs	w8, w8, w0, uxtb
  41446c:	str	w8, [sp, #44]
  414470:	ldr	w8, [sp, #44]
  414474:	str	w8, [sp, #144]
  414478:	ldr	w8, [sp, #144]
  41447c:	stur	w8, [x29, #-4]
  414480:	b	414808 <server_connect_notify+0x590>
  414484:	mov	w0, #0x1                   	// #1
  414488:	mov	w1, #0x802                 	// #2050
  41448c:	movk	w1, #0x8, lsl #16
  414490:	mov	w8, wzr
  414494:	mov	w2, w8
  414498:	bl	405eb8 <socket@plt>
  41449c:	ldur	x9, [x29, #-16]
  4144a0:	str	w0, [x9, #24]
  4144a4:	ldur	x9, [x29, #-16]
  4144a8:	ldr	w8, [x9, #24]
  4144ac:	cmp	w8, #0x0
  4144b0:	cset	w8, ge  // ge = tcont
  4144b4:	tbnz	w8, #0, 414540 <server_connect_notify+0x2c8>
  4144b8:	mov	w8, #0x3                   	// #3
  4144bc:	str	w8, [sp, #140]
  4144c0:	bl	405768 <__errno_location@plt>
  4144c4:	ldr	w8, [x0]
  4144c8:	str	w8, [sp, #136]
  4144cc:	str	wzr, [sp, #132]
  4144d0:	ldr	w0, [sp, #132]
  4144d4:	bl	405638 <log_get_max_level_realm@plt>
  4144d8:	ldr	w8, [sp, #140]
  4144dc:	and	w8, w8, #0x7
  4144e0:	cmp	w0, w8
  4144e4:	b.lt	414518 <server_connect_notify+0x2a0>  // b.tstop
  4144e8:	ldr	w8, [sp, #132]
  4144ec:	ldr	w9, [sp, #140]
  4144f0:	orr	w0, w9, w8, lsl #10
  4144f4:	ldr	w1, [sp, #136]
  4144f8:	ldr	x2, [sp, #64]
  4144fc:	mov	w3, #0x71e                 	// #1822
  414500:	ldr	x4, [sp, #56]
  414504:	adrp	x5, 42d000 <_fini+0x33a8>
  414508:	add	x5, x5, #0x137
  41450c:	bl	405648 <log_internal_realm@plt>
  414510:	str	w0, [sp, #40]
  414514:	b	41452c <server_connect_notify+0x2b4>
  414518:	ldr	w0, [sp, #136]
  41451c:	bl	405658 <abs@plt>
  414520:	mov	w8, wzr
  414524:	subs	w8, w8, w0, uxtb
  414528:	str	w8, [sp, #40]
  41452c:	ldr	w8, [sp, #40]
  414530:	str	w8, [sp, #128]
  414534:	ldr	w8, [sp, #128]
  414538:	stur	w8, [x29, #-4]
  41453c:	b	414808 <server_connect_notify+0x590>
  414540:	ldur	x8, [x29, #-16]
  414544:	ldr	w0, [x8, #24]
  414548:	mov	x1, #0x800000              	// #8388608
  41454c:	bl	405ec8 <fd_inc_sndbuf@plt>
  414550:	ldur	x8, [x29, #-16]
  414554:	ldr	w9, [x8, #24]
  414558:	sub	x8, x29, #0x90
  41455c:	str	x8, [sp, #120]
  414560:	ldr	w2, [sp, #160]
  414564:	ldr	x1, [sp, #120]
  414568:	mov	w0, w9
  41456c:	bl	405ed8 <connect@plt>
  414570:	stur	w0, [x29, #-156]
  414574:	ldur	w9, [x29, #-156]
  414578:	cmp	w9, #0x0
  41457c:	cset	w9, ge  // ge = tcont
  414580:	tbnz	w9, #0, 41460c <server_connect_notify+0x394>
  414584:	mov	w8, #0x3                   	// #3
  414588:	str	w8, [sp, #116]
  41458c:	bl	405768 <__errno_location@plt>
  414590:	ldr	w8, [x0]
  414594:	str	w8, [sp, #112]
  414598:	str	wzr, [sp, #108]
  41459c:	ldr	w0, [sp, #108]
  4145a0:	bl	405638 <log_get_max_level_realm@plt>
  4145a4:	ldr	w8, [sp, #116]
  4145a8:	and	w8, w8, #0x7
  4145ac:	cmp	w0, w8
  4145b0:	b.lt	4145e4 <server_connect_notify+0x36c>  // b.tstop
  4145b4:	ldr	w8, [sp, #108]
  4145b8:	ldr	w9, [sp, #116]
  4145bc:	orr	w0, w9, w8, lsl #10
  4145c0:	ldr	w1, [sp, #112]
  4145c4:	ldr	x2, [sp, #64]
  4145c8:	mov	w3, #0x724                 	// #1828
  4145cc:	ldr	x4, [sp, #56]
  4145d0:	adrp	x5, 42d000 <_fini+0x33a8>
  4145d4:	add	x5, x5, #0x15a
  4145d8:	bl	405648 <log_internal_realm@plt>
  4145dc:	str	w0, [sp, #36]
  4145e0:	b	4145f8 <server_connect_notify+0x380>
  4145e4:	ldr	w0, [sp, #112]
  4145e8:	bl	405658 <abs@plt>
  4145ec:	mov	w8, wzr
  4145f0:	subs	w8, w8, w0, uxtb
  4145f4:	str	w8, [sp, #36]
  4145f8:	ldr	w8, [sp, #36]
  4145fc:	str	w8, [sp, #104]
  414600:	ldr	w8, [sp, #104]
  414604:	stur	w8, [x29, #-4]
  414608:	b	414808 <server_connect_notify+0x590>
  41460c:	ldur	x8, [x29, #-16]
  414610:	ldr	x0, [x8, #32]
  414614:	ldur	x8, [x29, #-16]
  414618:	add	x1, x8, #0x88
  41461c:	ldur	x8, [x29, #-16]
  414620:	ldr	w2, [x8, #24]
  414624:	ldur	x5, [x29, #-16]
  414628:	mov	w3, #0x4                   	// #4
  41462c:	adrp	x4, 418000 <server_relinquish_var+0x24>
  414630:	add	x4, x4, #0x6d4
  414634:	bl	4058a8 <sd_event_add_io@plt>
  414638:	stur	w0, [x29, #-156]
  41463c:	ldur	w9, [x29, #-156]
  414640:	cmp	w9, #0x0
  414644:	cset	w9, ge  // ge = tcont
  414648:	tbnz	w9, #0, 4146d0 <server_connect_notify+0x458>
  41464c:	mov	w8, #0x3                   	// #3
  414650:	str	w8, [sp, #100]
  414654:	ldur	w8, [x29, #-156]
  414658:	str	w8, [sp, #96]
  41465c:	str	wzr, [sp, #92]
  414660:	ldr	w0, [sp, #92]
  414664:	bl	405638 <log_get_max_level_realm@plt>
  414668:	ldr	w8, [sp, #100]
  41466c:	and	w8, w8, #0x7
  414670:	cmp	w0, w8
  414674:	b.lt	4146a8 <server_connect_notify+0x430>  // b.tstop
  414678:	ldr	w8, [sp, #92]
  41467c:	ldr	w9, [sp, #100]
  414680:	orr	w0, w9, w8, lsl #10
  414684:	ldr	w1, [sp, #96]
  414688:	ldr	x2, [sp, #64]
  41468c:	mov	w3, #0x728                 	// #1832
  414690:	ldr	x4, [sp, #56]
  414694:	adrp	x5, 42d000 <_fini+0x33a8>
  414698:	add	x5, x5, #0x181
  41469c:	bl	405648 <log_internal_realm@plt>
  4146a0:	str	w0, [sp, #32]
  4146a4:	b	4146bc <server_connect_notify+0x444>
  4146a8:	ldr	w0, [sp, #96]
  4146ac:	bl	405658 <abs@plt>
  4146b0:	mov	w8, wzr
  4146b4:	subs	w8, w8, w0, uxtb
  4146b8:	str	w8, [sp, #32]
  4146bc:	ldr	w8, [sp, #32]
  4146c0:	str	w8, [sp, #88]
  4146c4:	ldr	w8, [sp, #88]
  4146c8:	stur	w8, [x29, #-4]
  4146cc:	b	414808 <server_connect_notify+0x590>
  4146d0:	ldur	x8, [x29, #-16]
  4146d4:	add	x1, x8, #0x2b8
  4146d8:	mov	w9, wzr
  4146dc:	mov	w0, w9
  4146e0:	bl	405ee8 <sd_watchdog_enabled@plt>
  4146e4:	cmp	w0, #0x0
  4146e8:	cset	w9, le
  4146ec:	tbnz	w9, #0, 414804 <server_connect_notify+0x58c>
  4146f0:	ldur	x8, [x29, #-16]
  4146f4:	ldrb	w9, [x8, #592]
  4146f8:	and	w9, w9, #0xfffffffd
  4146fc:	orr	w9, w9, #0x2
  414700:	strb	w9, [x8, #592]
  414704:	ldur	x8, [x29, #-16]
  414708:	ldr	x0, [x8, #32]
  41470c:	ldur	x8, [x29, #-16]
  414710:	add	x1, x8, #0x90
  414714:	mov	w9, #0x1                   	// #1
  414718:	str	x0, [sp, #24]
  41471c:	mov	w0, w9
  414720:	str	x1, [sp, #16]
  414724:	str	w9, [sp, #12]
  414728:	bl	4056f8 <now@plt>
  41472c:	ldur	x8, [x29, #-16]
  414730:	ldr	x8, [x8, #696]
  414734:	mov	x10, #0x2                   	// #2
  414738:	udiv	x8, x8, x10
  41473c:	add	x3, x0, x8
  414740:	ldur	x8, [x29, #-16]
  414744:	ldr	x8, [x8, #696]
  414748:	mov	x10, #0x4                   	// #4
  41474c:	udiv	x4, x8, x10
  414750:	ldur	x6, [x29, #-16]
  414754:	ldr	x0, [sp, #24]
  414758:	ldr	x1, [sp, #16]
  41475c:	ldr	w2, [sp, #12]
  414760:	adrp	x5, 418000 <server_relinquish_var+0x24>
  414764:	add	x5, x5, #0xc3c
  414768:	bl	405ca8 <sd_event_add_time@plt>
  41476c:	stur	w0, [x29, #-156]
  414770:	ldur	w9, [x29, #-156]
  414774:	cmp	w9, #0x0
  414778:	cset	w9, ge  // ge = tcont
  41477c:	tbnz	w9, #0, 414804 <server_connect_notify+0x58c>
  414780:	mov	w8, #0x3                   	// #3
  414784:	str	w8, [sp, #84]
  414788:	ldur	w8, [x29, #-156]
  41478c:	str	w8, [sp, #80]
  414790:	str	wzr, [sp, #76]
  414794:	ldr	w0, [sp, #76]
  414798:	bl	405638 <log_get_max_level_realm@plt>
  41479c:	ldr	w8, [sp, #84]
  4147a0:	and	w8, w8, #0x7
  4147a4:	cmp	w0, w8
  4147a8:	b.lt	4147dc <server_connect_notify+0x564>  // b.tstop
  4147ac:	ldr	w8, [sp, #76]
  4147b0:	ldr	w9, [sp, #84]
  4147b4:	orr	w0, w9, w8, lsl #10
  4147b8:	ldr	w1, [sp, #80]
  4147bc:	ldr	x2, [sp, #64]
  4147c0:	mov	w3, #0x72f                 	// #1839
  4147c4:	ldr	x4, [sp, #56]
  4147c8:	adrp	x5, 42d000 <_fini+0x33a8>
  4147cc:	add	x5, x5, #0x1a9
  4147d0:	bl	405648 <log_internal_realm@plt>
  4147d4:	str	w0, [sp, #8]
  4147d8:	b	4147f0 <server_connect_notify+0x578>
  4147dc:	ldr	w0, [sp, #80]
  4147e0:	bl	405658 <abs@plt>
  4147e4:	mov	w8, wzr
  4147e8:	subs	w8, w8, w0, uxtb
  4147ec:	str	w8, [sp, #8]
  4147f0:	ldr	w8, [sp, #8]
  4147f4:	str	w8, [sp, #72]
  4147f8:	ldr	w8, [sp, #72]
  4147fc:	stur	w8, [x29, #-4]
  414800:	b	414808 <server_connect_notify+0x590>
  414804:	stur	wzr, [x29, #-4]
  414808:	ldur	w0, [x29, #-4]
  41480c:	ldr	x28, [sp, #336]
  414810:	ldp	x29, x30, [sp, #320]
  414814:	add	sp, sp, #0x160
  414818:	ret

000000000041481c <server_maybe_append_tags>:
  41481c:	sub	sp, sp, #0x10
  414820:	str	x0, [sp, #8]
  414824:	add	sp, sp, #0x10
  414828:	ret

000000000041482c <server_done>:
  41482c:	sub	sp, sp, #0x40
  414830:	stp	x29, x30, [sp, #48]
  414834:	add	x29, sp, #0x30
  414838:	adrp	x8, 42a000 <_fini+0x3a8>
  41483c:	add	x8, x8, #0x3c8
  414840:	add	x2, x8, #0x3
  414844:	stur	x0, [x29, #-8]
  414848:	str	x2, [sp]
  41484c:	ldur	x8, [x29, #-8]
  414850:	cmp	x8, #0x0
  414854:	cset	w9, ne  // ne = any
  414858:	mov	w10, #0x1                   	// #1
  41485c:	eor	w9, w9, #0x1
  414860:	eor	w9, w9, w10
  414864:	eor	w9, w9, w10
  414868:	and	w9, w9, #0x1
  41486c:	mov	w0, w9
  414870:	sxtw	x8, w0
  414874:	cbz	x8, 41489c <server_done+0x70>
  414878:	mov	w8, wzr
  41487c:	mov	w0, w8
  414880:	adrp	x1, 429000 <journal_ratelimit_group_free+0x70>
  414884:	add	x1, x1, #0xdc8
  414888:	ldr	x2, [sp]
  41488c:	mov	w3, #0x8ab                 	// #2219
  414890:	adrp	x4, 42a000 <_fini+0x3a8>
  414894:	add	x4, x4, #0xfd9
  414898:	bl	405718 <log_assert_failed_realm@plt>
  41489c:	ldur	x8, [x29, #-8]
  4148a0:	ldr	x0, [x8, #576]
  4148a4:	bl	414b3c <set_steal_first>
  4148a8:	stur	x0, [x29, #-16]
  4148ac:	cbz	x0, 4148bc <server_done+0x90>
  4148b0:	ldur	x0, [x29, #-16]
  4148b4:	bl	405a58 <journal_file_close@plt>
  4148b8:	b	41489c <server_done+0x70>
  4148bc:	ldur	x8, [x29, #-8]
  4148c0:	ldr	x0, [x8, #576]
  4148c4:	bl	414b70 <set_free>
  4148c8:	str	x0, [sp, #24]
  4148cc:	ldur	x8, [x29, #-8]
  4148d0:	ldr	x8, [x8, #504]
  4148d4:	cbz	x8, 4148e8 <server_done+0xbc>
  4148d8:	ldur	x8, [x29, #-8]
  4148dc:	ldr	x0, [x8, #504]
  4148e0:	bl	418ef0 <stdout_stream_free>
  4148e4:	b	4148cc <server_done+0xa0>
  4148e8:	ldur	x0, [x29, #-8]
  4148ec:	bl	423aa8 <client_context_flush_all>
  4148f0:	ldur	x8, [x29, #-8]
  4148f4:	ldr	x0, [x8, #160]
  4148f8:	bl	405a58 <journal_file_close@plt>
  4148fc:	ldur	x8, [x29, #-8]
  414900:	ldr	x8, [x8, #152]
  414904:	mov	x0, x8
  414908:	bl	405a58 <journal_file_close@plt>
  41490c:	ldur	x8, [x29, #-8]
  414910:	ldr	x0, [x8, #168]
  414914:	bl	414ba0 <ordered_hashmap_steal_first>
  414918:	str	x0, [sp, #16]
  41491c:	cbz	x0, 41492c <server_done+0x100>
  414920:	ldr	x0, [sp, #16]
  414924:	bl	405a58 <journal_file_close@plt>
  414928:	b	41490c <server_done+0xe0>
  41492c:	ldur	x8, [x29, #-8]
  414930:	ldr	x0, [x8, #168]
  414934:	bl	414bd4 <ordered_hashmap_free>
  414938:	str	x0, [sp, #8]
  41493c:	ldur	x8, [x29, #-8]
  414940:	ldr	x0, [x8, #760]
  414944:	bl	405ef8 <varlink_server_unref@plt>
  414948:	ldur	x8, [x29, #-8]
  41494c:	ldr	x8, [x8, #40]
  414950:	mov	x0, x8
  414954:	bl	405888 <sd_event_source_unref@plt>
  414958:	ldur	x8, [x29, #-8]
  41495c:	ldr	x8, [x8, #48]
  414960:	mov	x0, x8
  414964:	bl	405888 <sd_event_source_unref@plt>
  414968:	ldur	x8, [x29, #-8]
  41496c:	ldr	x8, [x8, #56]
  414970:	mov	x0, x8
  414974:	bl	405888 <sd_event_source_unref@plt>
  414978:	ldur	x8, [x29, #-8]
  41497c:	ldr	x8, [x8, #64]
  414980:	mov	x0, x8
  414984:	bl	405888 <sd_event_source_unref@plt>
  414988:	ldur	x8, [x29, #-8]
  41498c:	ldr	x8, [x8, #72]
  414990:	mov	x0, x8
  414994:	bl	405888 <sd_event_source_unref@plt>
  414998:	ldur	x8, [x29, #-8]
  41499c:	ldr	x8, [x8, #80]
  4149a0:	mov	x0, x8
  4149a4:	bl	405888 <sd_event_source_unref@plt>
  4149a8:	ldur	x8, [x29, #-8]
  4149ac:	ldr	x8, [x8, #88]
  4149b0:	mov	x0, x8
  4149b4:	bl	405888 <sd_event_source_unref@plt>
  4149b8:	ldur	x8, [x29, #-8]
  4149bc:	ldr	x8, [x8, #96]
  4149c0:	mov	x0, x8
  4149c4:	bl	405888 <sd_event_source_unref@plt>
  4149c8:	ldur	x8, [x29, #-8]
  4149cc:	ldr	x8, [x8, #104]
  4149d0:	mov	x0, x8
  4149d4:	bl	405888 <sd_event_source_unref@plt>
  4149d8:	ldur	x8, [x29, #-8]
  4149dc:	ldr	x8, [x8, #112]
  4149e0:	mov	x0, x8
  4149e4:	bl	405888 <sd_event_source_unref@plt>
  4149e8:	ldur	x8, [x29, #-8]
  4149ec:	ldr	x8, [x8, #120]
  4149f0:	mov	x0, x8
  4149f4:	bl	405888 <sd_event_source_unref@plt>
  4149f8:	ldur	x8, [x29, #-8]
  4149fc:	ldr	x8, [x8, #128]
  414a00:	mov	x0, x8
  414a04:	bl	405888 <sd_event_source_unref@plt>
  414a08:	ldur	x8, [x29, #-8]
  414a0c:	ldr	x8, [x8, #136]
  414a10:	mov	x0, x8
  414a14:	bl	405888 <sd_event_source_unref@plt>
  414a18:	ldur	x8, [x29, #-8]
  414a1c:	ldr	x8, [x8, #144]
  414a20:	mov	x0, x8
  414a24:	bl	405888 <sd_event_source_unref@plt>
  414a28:	ldur	x8, [x29, #-8]
  414a2c:	ldr	x8, [x8, #32]
  414a30:	mov	x0, x8
  414a34:	bl	405f08 <sd_event_unref@plt>
  414a38:	ldur	x8, [x29, #-8]
  414a3c:	ldr	w9, [x8]
  414a40:	mov	w0, w9
  414a44:	bl	4058c8 <safe_close@plt>
  414a48:	ldur	x8, [x29, #-8]
  414a4c:	ldr	w9, [x8, #4]
  414a50:	mov	w0, w9
  414a54:	bl	4058c8 <safe_close@plt>
  414a58:	ldur	x8, [x29, #-8]
  414a5c:	ldr	w9, [x8, #8]
  414a60:	mov	w0, w9
  414a64:	bl	4058c8 <safe_close@plt>
  414a68:	ldur	x8, [x29, #-8]
  414a6c:	ldr	w9, [x8, #12]
  414a70:	mov	w0, w9
  414a74:	bl	4058c8 <safe_close@plt>
  414a78:	ldur	x8, [x29, #-8]
  414a7c:	ldr	w9, [x8, #16]
  414a80:	mov	w0, w9
  414a84:	bl	4058c8 <safe_close@plt>
  414a88:	ldur	x8, [x29, #-8]
  414a8c:	ldr	w9, [x8, #20]
  414a90:	mov	w0, w9
  414a94:	bl	4058c8 <safe_close@plt>
  414a98:	ldur	x8, [x29, #-8]
  414a9c:	ldr	w9, [x8, #24]
  414aa0:	mov	w0, w9
  414aa4:	bl	4058c8 <safe_close@plt>
  414aa8:	ldur	x8, [x29, #-8]
  414aac:	ldr	x8, [x8, #200]
  414ab0:	cbz	x8, 414ac0 <server_done+0x294>
  414ab4:	ldur	x8, [x29, #-8]
  414ab8:	ldr	x0, [x8, #200]
  414abc:	bl	428ef0 <journal_ratelimit_free>
  414ac0:	ldur	x8, [x29, #-8]
  414ac4:	ldr	x8, [x8, #584]
  414ac8:	cbz	x8, 414adc <server_done+0x2b0>
  414acc:	ldur	x8, [x29, #-8]
  414ad0:	ldr	x0, [x8, #584]
  414ad4:	mov	x1, #0x8                   	// #8
  414ad8:	bl	405f18 <munmap@plt>
  414adc:	ldur	x8, [x29, #-8]
  414ae0:	ldr	x0, [x8, #184]
  414ae4:	bl	405778 <free@plt>
  414ae8:	ldur	x8, [x29, #-8]
  414aec:	ldr	x0, [x8, #528]
  414af0:	bl	405778 <free@plt>
  414af4:	ldur	x8, [x29, #-8]
  414af8:	ldr	x0, [x8, #688]
  414afc:	bl	405778 <free@plt>
  414b00:	ldur	x8, [x29, #-8]
  414b04:	ldr	x0, [x8, #680]
  414b08:	bl	405778 <free@plt>
  414b0c:	ldur	x8, [x29, #-8]
  414b10:	ldr	x0, [x8, #240]
  414b14:	bl	405778 <free@plt>
  414b18:	ldur	x8, [x29, #-8]
  414b1c:	ldr	x0, [x8, #344]
  414b20:	bl	405778 <free@plt>
  414b24:	ldur	x8, [x29, #-8]
  414b28:	ldr	x0, [x8, #568]
  414b2c:	bl	405f28 <mmap_cache_unref@plt>
  414b30:	ldp	x29, x30, [sp, #48]
  414b34:	add	sp, sp, #0x40
  414b38:	ret

0000000000414b3c <set_steal_first>:
  414b3c:	sub	sp, sp, #0x20
  414b40:	stp	x29, x30, [sp, #16]
  414b44:	add	x29, sp, #0x10
  414b48:	mov	x8, xzr
  414b4c:	str	x0, [sp, #8]
  414b50:	ldr	x0, [sp, #8]
  414b54:	mov	w9, #0x1                   	// #1
  414b58:	and	w1, w9, #0x1
  414b5c:	mov	x2, x8
  414b60:	bl	405f38 <internal_hashmap_first_key_and_value@plt>
  414b64:	ldp	x29, x30, [sp, #16]
  414b68:	add	sp, sp, #0x20
  414b6c:	ret

0000000000414b70 <set_free>:
  414b70:	sub	sp, sp, #0x20
  414b74:	stp	x29, x30, [sp, #16]
  414b78:	add	x29, sp, #0x10
  414b7c:	mov	x8, xzr
  414b80:	str	x0, [sp, #8]
  414b84:	ldr	x0, [sp, #8]
  414b88:	mov	x1, x8
  414b8c:	mov	x2, x8
  414b90:	bl	405f48 <internal_hashmap_free@plt>
  414b94:	ldp	x29, x30, [sp, #16]
  414b98:	add	sp, sp, #0x20
  414b9c:	ret

0000000000414ba0 <ordered_hashmap_steal_first>:
  414ba0:	sub	sp, sp, #0x20
  414ba4:	stp	x29, x30, [sp, #16]
  414ba8:	add	x29, sp, #0x10
  414bac:	mov	x8, xzr
  414bb0:	str	x0, [sp, #8]
  414bb4:	ldr	x0, [sp, #8]
  414bb8:	mov	w9, #0x1                   	// #1
  414bbc:	and	w1, w9, #0x1
  414bc0:	mov	x2, x8
  414bc4:	bl	405f38 <internal_hashmap_first_key_and_value@plt>
  414bc8:	ldp	x29, x30, [sp, #16]
  414bcc:	add	sp, sp, #0x20
  414bd0:	ret

0000000000414bd4 <ordered_hashmap_free>:
  414bd4:	sub	sp, sp, #0x20
  414bd8:	stp	x29, x30, [sp, #16]
  414bdc:	add	x29, sp, #0x10
  414be0:	mov	x8, xzr
  414be4:	str	x0, [sp, #8]
  414be8:	ldr	x0, [sp, #8]
  414bec:	mov	x1, x8
  414bf0:	mov	x2, x8
  414bf4:	bl	405f48 <internal_hashmap_free@plt>
  414bf8:	ldp	x29, x30, [sp, #16]
  414bfc:	add	sp, sp, #0x20
  414c00:	ret

0000000000414c04 <storage_to_string>:
  414c04:	sub	sp, sp, #0x10
  414c08:	str	w0, [sp, #4]
  414c0c:	ldr	w8, [sp, #4]
  414c10:	cmp	w8, #0x0
  414c14:	cset	w8, lt  // lt = tstop
  414c18:	tbnz	w8, #0, 414c28 <storage_to_string+0x24>
  414c1c:	ldr	w8, [sp, #4]
  414c20:	cmp	w8, #0x4
  414c24:	b.lt	414c34 <storage_to_string+0x30>  // b.tstop
  414c28:	mov	x8, xzr
  414c2c:	str	x8, [sp, #8]
  414c30:	b	414c54 <storage_to_string+0x50>
  414c34:	ldrsw	x8, [sp, #4]
  414c38:	mov	x9, #0x8                   	// #8
  414c3c:	mul	x8, x9, x8
  414c40:	adrp	x9, 44e000 <__FRAME_END__+0x1d1c8>
  414c44:	add	x9, x9, #0xb70
  414c48:	add	x8, x9, x8
  414c4c:	ldr	x8, [x8]
  414c50:	str	x8, [sp, #8]
  414c54:	ldr	x0, [sp, #8]
  414c58:	add	sp, sp, #0x10
  414c5c:	ret

0000000000414c60 <storage_from_string>:
  414c60:	sub	sp, sp, #0x20
  414c64:	stp	x29, x30, [sp, #16]
  414c68:	add	x29, sp, #0x10
  414c6c:	adrp	x8, 44e000 <__FRAME_END__+0x1d1c8>
  414c70:	add	x8, x8, #0xb70
  414c74:	mov	x1, #0x4                   	// #4
  414c78:	str	x0, [sp, #8]
  414c7c:	ldr	x2, [sp, #8]
  414c80:	mov	x0, x8
  414c84:	bl	405f58 <string_table_lookup@plt>
  414c88:	ldp	x29, x30, [sp, #16]
  414c8c:	add	sp, sp, #0x20
  414c90:	ret

0000000000414c94 <config_parse_storage>:
  414c94:	sub	sp, sp, #0xb0
  414c98:	stp	x29, x30, [sp, #160]
  414c9c:	add	x29, sp, #0xa0
  414ca0:	ldr	x8, [x29, #16]
  414ca4:	ldr	x9, [x29, #24]
  414ca8:	adrp	x10, 42a000 <_fini+0x3a8>
  414cac:	add	x10, x10, #0x3c8
  414cb0:	add	x10, x10, #0x3
  414cb4:	adrp	x11, 42a000 <_fini+0x3a8>
  414cb8:	add	x11, x11, #0xffd
  414cbc:	stur	x0, [x29, #-16]
  414cc0:	stur	x1, [x29, #-24]
  414cc4:	stur	w2, [x29, #-28]
  414cc8:	stur	x3, [x29, #-40]
  414ccc:	stur	w4, [x29, #-44]
  414cd0:	stur	x5, [x29, #-56]
  414cd4:	stur	w6, [x29, #-60]
  414cd8:	stur	x7, [x29, #-72]
  414cdc:	str	x8, [sp, #80]
  414ce0:	str	x9, [sp, #72]
  414ce4:	ldr	x8, [sp, #80]
  414ce8:	str	x8, [sp, #64]
  414cec:	str	x10, [sp, #40]
  414cf0:	str	x11, [sp, #32]
  414cf4:	ldur	x8, [x29, #-24]
  414cf8:	cmp	x8, #0x0
  414cfc:	cset	w9, ne  // ne = any
  414d00:	mov	w10, #0x1                   	// #1
  414d04:	eor	w9, w9, #0x1
  414d08:	eor	w9, w9, w10
  414d0c:	eor	w9, w9, w10
  414d10:	and	w9, w9, #0x1
  414d14:	mov	w0, w9
  414d18:	sxtw	x8, w0
  414d1c:	cbz	x8, 414d40 <config_parse_storage+0xac>
  414d20:	mov	w8, wzr
  414d24:	mov	w0, w8
  414d28:	adrp	x1, 42a000 <_fini+0x3a8>
  414d2c:	add	x1, x1, #0xff4
  414d30:	ldr	x2, [sp, #40]
  414d34:	mov	w3, #0x8eb                 	// #2283
  414d38:	ldr	x4, [sp, #32]
  414d3c:	bl	405718 <log_assert_failed_realm@plt>
  414d40:	ldur	x8, [x29, #-56]
  414d44:	cmp	x8, #0x0
  414d48:	cset	w9, ne  // ne = any
  414d4c:	mov	w10, #0x1                   	// #1
  414d50:	eor	w9, w9, #0x1
  414d54:	eor	w9, w9, w10
  414d58:	eor	w9, w9, w10
  414d5c:	and	w9, w9, #0x1
  414d60:	mov	w0, w9
  414d64:	sxtw	x8, w0
  414d68:	cbz	x8, 414d8c <config_parse_storage+0xf8>
  414d6c:	mov	w8, wzr
  414d70:	mov	w0, w8
  414d74:	adrp	x1, 42b000 <_fini+0x13a8>
  414d78:	add	x1, x1, #0x8d
  414d7c:	ldr	x2, [sp, #40]
  414d80:	mov	w3, #0x8eb                 	// #2283
  414d84:	ldr	x4, [sp, #32]
  414d88:	bl	405718 <log_assert_failed_realm@plt>
  414d8c:	ldur	x8, [x29, #-72]
  414d90:	cmp	x8, #0x0
  414d94:	cset	w9, ne  // ne = any
  414d98:	mov	w10, #0x1                   	// #1
  414d9c:	eor	w9, w9, #0x1
  414da0:	eor	w9, w9, w10
  414da4:	eor	w9, w9, w10
  414da8:	and	w9, w9, #0x1
  414dac:	mov	w0, w9
  414db0:	sxtw	x8, w0
  414db4:	cbz	x8, 414dd8 <config_parse_storage+0x144>
  414db8:	mov	w8, wzr
  414dbc:	mov	w0, w8
  414dc0:	adrp	x1, 42b000 <_fini+0x13a8>
  414dc4:	add	x1, x1, #0x94
  414dc8:	ldr	x2, [sp, #40]
  414dcc:	mov	w3, #0x8eb                 	// #2283
  414dd0:	ldr	x4, [sp, #32]
  414dd4:	bl	405718 <log_assert_failed_realm@plt>
  414dd8:	ldr	x8, [sp, #80]
  414ddc:	cmp	x8, #0x0
  414de0:	cset	w9, ne  // ne = any
  414de4:	mov	w10, #0x1                   	// #1
  414de8:	eor	w9, w9, #0x1
  414dec:	eor	w9, w9, w10
  414df0:	eor	w9, w9, w10
  414df4:	and	w9, w9, #0x1
  414df8:	mov	w0, w9
  414dfc:	sxtw	x8, w0
  414e00:	cbz	x8, 414e24 <config_parse_storage+0x190>
  414e04:	mov	w8, wzr
  414e08:	mov	w0, w8
  414e0c:	adrp	x1, 42b000 <_fini+0x13a8>
  414e10:	add	x1, x1, #0x9b
  414e14:	ldr	x2, [sp, #40]
  414e18:	mov	w3, #0x8eb                 	// #2283
  414e1c:	ldr	x4, [sp, #32]
  414e20:	bl	405718 <log_assert_failed_realm@plt>
  414e24:	ldur	x0, [x29, #-72]
  414e28:	bl	414c60 <storage_from_string>
  414e2c:	str	w0, [sp, #60]
  414e30:	ldr	w8, [sp, #60]
  414e34:	cmp	w8, #0x0
  414e38:	cset	w8, ge  // ge = tcont
  414e3c:	tbnz	w8, #0, 414ed8 <config_parse_storage+0x244>
  414e40:	mov	w8, #0x3                   	// #3
  414e44:	str	w8, [sp, #56]
  414e48:	mov	w8, wzr
  414e4c:	str	wzr, [sp, #52]
  414e50:	mov	w0, w8
  414e54:	bl	405638 <log_get_max_level_realm@plt>
  414e58:	ldr	w8, [sp, #56]
  414e5c:	and	w8, w8, #0x7
  414e60:	cmp	w0, w8
  414e64:	b.lt	414eb4 <config_parse_storage+0x220>  // b.tstop
  414e68:	ldur	x0, [x29, #-16]
  414e6c:	ldr	w1, [sp, #56]
  414e70:	ldur	x2, [x29, #-24]
  414e74:	ldur	w3, [x29, #-28]
  414e78:	ldr	w4, [sp, #52]
  414e7c:	ldur	x8, [x29, #-72]
  414e80:	ldr	x5, [sp, #40]
  414e84:	mov	w6, #0x8eb                 	// #2283
  414e88:	adrp	x7, 42b000 <_fini+0x13a8>
  414e8c:	add	x7, x7, #0xa0
  414e90:	mov	x9, sp
  414e94:	adrp	x10, 42b000 <_fini+0x13a8>
  414e98:	add	x10, x10, #0xb5
  414e9c:	str	x10, [x9]
  414ea0:	mov	x9, sp
  414ea4:	str	x8, [x9, #8]
  414ea8:	bl	405f68 <log_syntax_internal@plt>
  414eac:	str	w0, [sp, #28]
  414eb0:	b	414ec8 <config_parse_storage+0x234>
  414eb4:	ldr	w0, [sp, #52]
  414eb8:	bl	405658 <abs@plt>
  414ebc:	mov	w8, wzr
  414ec0:	subs	w8, w8, w0, uxtb
  414ec4:	str	w8, [sp, #28]
  414ec8:	ldr	w8, [sp, #28]
  414ecc:	str	w8, [sp, #48]
  414ed0:	stur	wzr, [x29, #-4]
  414ed4:	b	414ee8 <config_parse_storage+0x254>
  414ed8:	ldr	w8, [sp, #60]
  414edc:	ldr	x9, [sp, #64]
  414ee0:	str	w8, [x9]
  414ee4:	stur	wzr, [x29, #-4]
  414ee8:	ldur	w0, [x29, #-4]
  414eec:	ldp	x29, x30, [sp, #160]
  414ef0:	add	sp, sp, #0xb0
  414ef4:	ret

0000000000414ef8 <split_mode_to_string>:
  414ef8:	sub	sp, sp, #0x10
  414efc:	str	w0, [sp, #4]
  414f00:	ldr	w8, [sp, #4]
  414f04:	cmp	w8, #0x0
  414f08:	cset	w8, lt  // lt = tstop
  414f0c:	tbnz	w8, #0, 414f1c <split_mode_to_string+0x24>
  414f10:	ldr	w8, [sp, #4]
  414f14:	cmp	w8, #0x3
  414f18:	b.lt	414f28 <split_mode_to_string+0x30>  // b.tstop
  414f1c:	mov	x8, xzr
  414f20:	str	x8, [sp, #8]
  414f24:	b	414f48 <split_mode_to_string+0x50>
  414f28:	ldrsw	x8, [sp, #4]
  414f2c:	mov	x9, #0x8                   	// #8
  414f30:	mul	x8, x9, x8
  414f34:	adrp	x9, 44e000 <__FRAME_END__+0x1d1c8>
  414f38:	add	x9, x9, #0xb90
  414f3c:	add	x8, x9, x8
  414f40:	ldr	x8, [x8]
  414f44:	str	x8, [sp, #8]
  414f48:	ldr	x0, [sp, #8]
  414f4c:	add	sp, sp, #0x10
  414f50:	ret

0000000000414f54 <split_mode_from_string>:
  414f54:	sub	sp, sp, #0x20
  414f58:	stp	x29, x30, [sp, #16]
  414f5c:	add	x29, sp, #0x10
  414f60:	adrp	x8, 44e000 <__FRAME_END__+0x1d1c8>
  414f64:	add	x8, x8, #0xb90
  414f68:	mov	x1, #0x3                   	// #3
  414f6c:	str	x0, [sp, #8]
  414f70:	ldr	x2, [sp, #8]
  414f74:	mov	x0, x8
  414f78:	bl	405f58 <string_table_lookup@plt>
  414f7c:	ldp	x29, x30, [sp, #16]
  414f80:	add	sp, sp, #0x20
  414f84:	ret

0000000000414f88 <config_parse_split_mode>:
  414f88:	sub	sp, sp, #0xb0
  414f8c:	stp	x29, x30, [sp, #160]
  414f90:	add	x29, sp, #0xa0
  414f94:	ldr	x8, [x29, #16]
  414f98:	ldr	x9, [x29, #24]
  414f9c:	adrp	x10, 42a000 <_fini+0x3a8>
  414fa0:	add	x10, x10, #0x3c8
  414fa4:	add	x10, x10, #0x3
  414fa8:	adrp	x11, 42b000 <_fini+0x13a8>
  414fac:	add	x11, x11, #0xe3
  414fb0:	stur	x0, [x29, #-16]
  414fb4:	stur	x1, [x29, #-24]
  414fb8:	stur	w2, [x29, #-28]
  414fbc:	stur	x3, [x29, #-40]
  414fc0:	stur	w4, [x29, #-44]
  414fc4:	stur	x5, [x29, #-56]
  414fc8:	stur	w6, [x29, #-60]
  414fcc:	stur	x7, [x29, #-72]
  414fd0:	str	x8, [sp, #80]
  414fd4:	str	x9, [sp, #72]
  414fd8:	ldr	x8, [sp, #80]
  414fdc:	str	x8, [sp, #64]
  414fe0:	str	x10, [sp, #40]
  414fe4:	str	x11, [sp, #32]
  414fe8:	ldur	x8, [x29, #-24]
  414fec:	cmp	x8, #0x0
  414ff0:	cset	w9, ne  // ne = any
  414ff4:	mov	w10, #0x1                   	// #1
  414ff8:	eor	w9, w9, #0x1
  414ffc:	eor	w9, w9, w10
  415000:	eor	w9, w9, w10
  415004:	and	w9, w9, #0x1
  415008:	mov	w0, w9
  41500c:	sxtw	x8, w0
  415010:	cbz	x8, 415034 <config_parse_split_mode+0xac>
  415014:	mov	w8, wzr
  415018:	mov	w0, w8
  41501c:	adrp	x1, 42a000 <_fini+0x3a8>
  415020:	add	x1, x1, #0xff4
  415024:	ldr	x2, [sp, #40]
  415028:	mov	w3, #0x8f4                 	// #2292
  41502c:	ldr	x4, [sp, #32]
  415030:	bl	405718 <log_assert_failed_realm@plt>
  415034:	ldur	x8, [x29, #-56]
  415038:	cmp	x8, #0x0
  41503c:	cset	w9, ne  // ne = any
  415040:	mov	w10, #0x1                   	// #1
  415044:	eor	w9, w9, #0x1
  415048:	eor	w9, w9, w10
  41504c:	eor	w9, w9, w10
  415050:	and	w9, w9, #0x1
  415054:	mov	w0, w9
  415058:	sxtw	x8, w0
  41505c:	cbz	x8, 415080 <config_parse_split_mode+0xf8>
  415060:	mov	w8, wzr
  415064:	mov	w0, w8
  415068:	adrp	x1, 42b000 <_fini+0x13a8>
  41506c:	add	x1, x1, #0x8d
  415070:	ldr	x2, [sp, #40]
  415074:	mov	w3, #0x8f4                 	// #2292
  415078:	ldr	x4, [sp, #32]
  41507c:	bl	405718 <log_assert_failed_realm@plt>
  415080:	ldur	x8, [x29, #-72]
  415084:	cmp	x8, #0x0
  415088:	cset	w9, ne  // ne = any
  41508c:	mov	w10, #0x1                   	// #1
  415090:	eor	w9, w9, #0x1
  415094:	eor	w9, w9, w10
  415098:	eor	w9, w9, w10
  41509c:	and	w9, w9, #0x1
  4150a0:	mov	w0, w9
  4150a4:	sxtw	x8, w0
  4150a8:	cbz	x8, 4150cc <config_parse_split_mode+0x144>
  4150ac:	mov	w8, wzr
  4150b0:	mov	w0, w8
  4150b4:	adrp	x1, 42b000 <_fini+0x13a8>
  4150b8:	add	x1, x1, #0x94
  4150bc:	ldr	x2, [sp, #40]
  4150c0:	mov	w3, #0x8f4                 	// #2292
  4150c4:	ldr	x4, [sp, #32]
  4150c8:	bl	405718 <log_assert_failed_realm@plt>
  4150cc:	ldr	x8, [sp, #80]
  4150d0:	cmp	x8, #0x0
  4150d4:	cset	w9, ne  // ne = any
  4150d8:	mov	w10, #0x1                   	// #1
  4150dc:	eor	w9, w9, #0x1
  4150e0:	eor	w9, w9, w10
  4150e4:	eor	w9, w9, w10
  4150e8:	and	w9, w9, #0x1
  4150ec:	mov	w0, w9
  4150f0:	sxtw	x8, w0
  4150f4:	cbz	x8, 415118 <config_parse_split_mode+0x190>
  4150f8:	mov	w8, wzr
  4150fc:	mov	w0, w8
  415100:	adrp	x1, 42b000 <_fini+0x13a8>
  415104:	add	x1, x1, #0x9b
  415108:	ldr	x2, [sp, #40]
  41510c:	mov	w3, #0x8f4                 	// #2292
  415110:	ldr	x4, [sp, #32]
  415114:	bl	405718 <log_assert_failed_realm@plt>
  415118:	ldur	x0, [x29, #-72]
  41511c:	bl	414f54 <split_mode_from_string>
  415120:	str	w0, [sp, #60]
  415124:	ldr	w8, [sp, #60]
  415128:	cmp	w8, #0x0
  41512c:	cset	w8, ge  // ge = tcont
  415130:	tbnz	w8, #0, 4151cc <config_parse_split_mode+0x244>
  415134:	mov	w8, #0x3                   	// #3
  415138:	str	w8, [sp, #56]
  41513c:	mov	w8, wzr
  415140:	str	wzr, [sp, #52]
  415144:	mov	w0, w8
  415148:	bl	405638 <log_get_max_level_realm@plt>
  41514c:	ldr	w8, [sp, #56]
  415150:	and	w8, w8, #0x7
  415154:	cmp	w0, w8
  415158:	b.lt	4151a8 <config_parse_split_mode+0x220>  // b.tstop
  41515c:	ldur	x0, [x29, #-16]
  415160:	ldr	w1, [sp, #56]
  415164:	ldur	x2, [x29, #-24]
  415168:	ldur	w3, [x29, #-28]
  41516c:	ldr	w4, [sp, #52]
  415170:	ldur	x8, [x29, #-72]
  415174:	ldr	x5, [sp, #40]
  415178:	mov	w6, #0x8f4                 	// #2292
  41517c:	adrp	x7, 42b000 <_fini+0x13a8>
  415180:	add	x7, x7, #0x176
  415184:	mov	x9, sp
  415188:	adrp	x10, 42b000 <_fini+0x13a8>
  41518c:	add	x10, x10, #0x18e
  415190:	str	x10, [x9]
  415194:	mov	x9, sp
  415198:	str	x8, [x9, #8]
  41519c:	bl	405f68 <log_syntax_internal@plt>
  4151a0:	str	w0, [sp, #28]
  4151a4:	b	4151bc <config_parse_split_mode+0x234>
  4151a8:	ldr	w0, [sp, #52]
  4151ac:	bl	405658 <abs@plt>
  4151b0:	mov	w8, wzr
  4151b4:	subs	w8, w8, w0, uxtb
  4151b8:	str	w8, [sp, #28]
  4151bc:	ldr	w8, [sp, #28]
  4151c0:	str	w8, [sp, #48]
  4151c4:	stur	wzr, [x29, #-4]
  4151c8:	b	4151dc <config_parse_split_mode+0x254>
  4151cc:	ldr	w8, [sp, #60]
  4151d0:	ldr	x9, [sp, #64]
  4151d4:	str	w8, [x9]
  4151d8:	stur	wzr, [x29, #-4]
  4151dc:	ldur	w0, [x29, #-4]
  4151e0:	ldp	x29, x30, [sp, #160]
  4151e4:	add	sp, sp, #0xb0
  4151e8:	ret

00000000004151ec <config_parse_line_max>:
  4151ec:	sub	sp, sp, #0xf0
  4151f0:	stp	x29, x30, [sp, #224]
  4151f4:	add	x29, sp, #0xe0
  4151f8:	sub	x8, x29, #0x10
  4151fc:	ldr	x9, [x29, #16]
  415200:	ldr	x10, [x29, #24]
  415204:	adrp	x11, 42a000 <_fini+0x3a8>
  415208:	add	x11, x11, #0x3c8
  41520c:	add	x11, x11, #0x3
  415210:	adrp	x12, 42b000 <_fini+0x13a8>
  415214:	add	x12, x12, #0x250
  415218:	adrp	x13, 42b000 <_fini+0x13a8>
  41521c:	add	x13, x13, #0x1bf
  415220:	str	x0, [x8]
  415224:	stur	x1, [x29, #-24]
  415228:	stur	w2, [x29, #-28]
  41522c:	stur	x3, [x29, #-40]
  415230:	stur	w4, [x29, #-44]
  415234:	stur	x5, [x29, #-56]
  415238:	stur	w6, [x29, #-60]
  41523c:	stur	x7, [x29, #-72]
  415240:	stur	x9, [x29, #-80]
  415244:	stur	x10, [x29, #-88]
  415248:	ldur	x9, [x29, #-80]
  41524c:	stur	x9, [x29, #-96]
  415250:	str	x8, [sp, #64]
  415254:	str	x11, [sp, #56]
  415258:	str	x12, [sp, #48]
  41525c:	str	x13, [sp, #40]
  415260:	ldur	x8, [x29, #-24]
  415264:	cmp	x8, #0x0
  415268:	cset	w9, ne  // ne = any
  41526c:	mov	w10, #0x1                   	// #1
  415270:	eor	w9, w9, #0x1
  415274:	eor	w9, w9, w10
  415278:	eor	w9, w9, w10
  41527c:	and	w9, w9, #0x1
  415280:	mov	w0, w9
  415284:	sxtw	x8, w0
  415288:	cbz	x8, 4152ac <config_parse_line_max+0xc0>
  41528c:	mov	w8, wzr
  415290:	mov	w0, w8
  415294:	adrp	x1, 42a000 <_fini+0x3a8>
  415298:	add	x1, x1, #0xff4
  41529c:	ldr	x2, [sp, #56]
  4152a0:	mov	w3, #0x905                 	// #2309
  4152a4:	ldr	x4, [sp, #40]
  4152a8:	bl	405718 <log_assert_failed_realm@plt>
  4152ac:	ldur	x8, [x29, #-56]
  4152b0:	cmp	x8, #0x0
  4152b4:	cset	w9, ne  // ne = any
  4152b8:	mov	w10, #0x1                   	// #1
  4152bc:	eor	w9, w9, #0x1
  4152c0:	eor	w9, w9, w10
  4152c4:	eor	w9, w9, w10
  4152c8:	and	w9, w9, #0x1
  4152cc:	mov	w0, w9
  4152d0:	sxtw	x8, w0
  4152d4:	cbz	x8, 4152f8 <config_parse_line_max+0x10c>
  4152d8:	mov	w8, wzr
  4152dc:	mov	w0, w8
  4152e0:	adrp	x1, 42b000 <_fini+0x13a8>
  4152e4:	add	x1, x1, #0x8d
  4152e8:	ldr	x2, [sp, #56]
  4152ec:	mov	w3, #0x906                 	// #2310
  4152f0:	ldr	x4, [sp, #40]
  4152f4:	bl	405718 <log_assert_failed_realm@plt>
  4152f8:	ldur	x8, [x29, #-72]
  4152fc:	cmp	x8, #0x0
  415300:	cset	w9, ne  // ne = any
  415304:	mov	w10, #0x1                   	// #1
  415308:	eor	w9, w9, #0x1
  41530c:	eor	w9, w9, w10
  415310:	eor	w9, w9, w10
  415314:	and	w9, w9, #0x1
  415318:	mov	w0, w9
  41531c:	sxtw	x8, w0
  415320:	cbz	x8, 415344 <config_parse_line_max+0x158>
  415324:	mov	w8, wzr
  415328:	mov	w0, w8
  41532c:	adrp	x1, 42b000 <_fini+0x13a8>
  415330:	add	x1, x1, #0x94
  415334:	ldr	x2, [sp, #56]
  415338:	mov	w3, #0x907                 	// #2311
  41533c:	ldr	x4, [sp, #40]
  415340:	bl	405718 <log_assert_failed_realm@plt>
  415344:	ldur	x8, [x29, #-80]
  415348:	cmp	x8, #0x0
  41534c:	cset	w9, ne  // ne = any
  415350:	mov	w10, #0x1                   	// #1
  415354:	eor	w9, w9, #0x1
  415358:	eor	w9, w9, w10
  41535c:	eor	w9, w9, w10
  415360:	and	w9, w9, #0x1
  415364:	mov	w0, w9
  415368:	sxtw	x8, w0
  41536c:	cbz	x8, 415390 <config_parse_line_max+0x1a4>
  415370:	mov	w8, wzr
  415374:	mov	w0, w8
  415378:	adrp	x1, 42b000 <_fini+0x13a8>
  41537c:	add	x1, x1, #0x9b
  415380:	ldr	x2, [sp, #56]
  415384:	mov	w3, #0x908                 	// #2312
  415388:	ldr	x4, [sp, #40]
  41538c:	bl	405718 <log_assert_failed_realm@plt>
  415390:	ldur	x0, [x29, #-72]
  415394:	bl	4155f8 <isempty>
  415398:	tbnz	w0, #0, 4153a0 <config_parse_line_max+0x1b4>
  41539c:	b	4153b0 <config_parse_line_max+0x1c4>
  4153a0:	ldur	x8, [x29, #-96]
  4153a4:	mov	x9, #0xc000                	// #49152
  4153a8:	str	x9, [x8]
  4153ac:	b	4155e4 <config_parse_line_max+0x3f8>
  4153b0:	ldur	x0, [x29, #-72]
  4153b4:	mov	x1, #0x400                 	// #1024
  4153b8:	add	x2, sp, #0x70
  4153bc:	bl	405f78 <parse_size@plt>
  4153c0:	stur	w0, [x29, #-100]
  4153c4:	ldur	w8, [x29, #-100]
  4153c8:	cmp	w8, #0x0
  4153cc:	cset	w8, ge  // ge = tcont
  4153d0:	tbnz	w8, #0, 415470 <config_parse_line_max+0x284>
  4153d4:	mov	w8, #0x3                   	// #3
  4153d8:	str	w8, [sp, #108]
  4153dc:	ldur	w8, [x29, #-100]
  4153e0:	str	w8, [sp, #104]
  4153e4:	mov	w8, wzr
  4153e8:	mov	w0, w8
  4153ec:	bl	405638 <log_get_max_level_realm@plt>
  4153f0:	ldr	w8, [sp, #108]
  4153f4:	and	w8, w8, #0x7
  4153f8:	cmp	w0, w8
  4153fc:	b.lt	41544c <config_parse_line_max+0x260>  // b.tstop
  415400:	ldr	x8, [sp, #64]
  415404:	ldr	x0, [x8]
  415408:	ldr	w1, [sp, #108]
  41540c:	ldur	x2, [x29, #-24]
  415410:	ldur	w3, [x29, #-28]
  415414:	ldr	w4, [sp, #104]
  415418:	ldur	x9, [x29, #-72]
  41541c:	ldr	x5, [sp, #56]
  415420:	mov	w6, #0x912                 	// #2322
  415424:	ldr	x7, [sp, #48]
  415428:	mov	x10, sp
  41542c:	adrp	x11, 42b000 <_fini+0x13a8>
  415430:	add	x11, x11, #0x266
  415434:	str	x11, [x10]
  415438:	mov	x10, sp
  41543c:	str	x9, [x10, #8]
  415440:	bl	405f68 <log_syntax_internal@plt>
  415444:	str	w0, [sp, #36]
  415448:	b	415460 <config_parse_line_max+0x274>
  41544c:	ldr	w0, [sp, #104]
  415450:	bl	405658 <abs@plt>
  415454:	mov	w8, wzr
  415458:	subs	w8, w8, w0, uxtb
  41545c:	str	w8, [sp, #36]
  415460:	ldr	w8, [sp, #36]
  415464:	str	w8, [sp, #100]
  415468:	stur	wzr, [x29, #-4]
  41546c:	b	4155e8 <config_parse_line_max+0x3fc>
  415470:	ldr	x8, [sp, #112]
  415474:	cmp	x8, #0x4f
  415478:	b.cs	41551c <config_parse_line_max+0x330>  // b.hs, b.nlast
  41547c:	mov	w8, #0x4                   	// #4
  415480:	str	w8, [sp, #96]
  415484:	mov	w8, wzr
  415488:	str	wzr, [sp, #92]
  41548c:	mov	w0, w8
  415490:	bl	405638 <log_get_max_level_realm@plt>
  415494:	ldr	w8, [sp, #96]
  415498:	and	w8, w8, #0x7
  41549c:	cmp	w0, w8
  4154a0:	b.lt	4154f0 <config_parse_line_max+0x304>  // b.tstop
  4154a4:	ldr	x8, [sp, #64]
  4154a8:	ldr	x0, [x8]
  4154ac:	ldr	w1, [sp, #96]
  4154b0:	ldur	x2, [x29, #-24]
  4154b4:	ldur	w3, [x29, #-28]
  4154b8:	ldr	w4, [sp, #92]
  4154bc:	ldur	x9, [x29, #-72]
  4154c0:	ldr	x5, [sp, #56]
  4154c4:	mov	w6, #0x91a                 	// #2330
  4154c8:	ldr	x7, [sp, #48]
  4154cc:	mov	x10, sp
  4154d0:	adrp	x11, 42b000 <_fini+0x13a8>
  4154d4:	add	x11, x11, #0x293
  4154d8:	str	x11, [x10]
  4154dc:	mov	x10, sp
  4154e0:	str	x9, [x10, #8]
  4154e4:	bl	405f68 <log_syntax_internal@plt>
  4154e8:	str	w0, [sp, #32]
  4154ec:	b	415504 <config_parse_line_max+0x318>
  4154f0:	ldr	w0, [sp, #92]
  4154f4:	bl	405658 <abs@plt>
  4154f8:	mov	w8, wzr
  4154fc:	subs	w8, w8, w0, uxtb
  415500:	str	w8, [sp, #32]
  415504:	ldr	w8, [sp, #32]
  415508:	str	w8, [sp, #88]
  41550c:	ldur	x9, [x29, #-96]
  415510:	mov	x10, #0x4f                  	// #79
  415514:	str	x10, [x9]
  415518:	b	4155e4 <config_parse_line_max+0x3f8>
  41551c:	ldr	x8, [sp, #112]
  415520:	mov	x9, #0x7ffffffffffffffe    	// #9223372036854775806
  415524:	cmp	x8, x9
  415528:	b.ls	4155d8 <config_parse_line_max+0x3ec>  // b.plast
  41552c:	mov	w8, #0x4                   	// #4
  415530:	str	w8, [sp, #84]
  415534:	mov	w8, wzr
  415538:	str	wzr, [sp, #80]
  41553c:	mov	w0, w8
  415540:	bl	405638 <log_get_max_level_realm@plt>
  415544:	ldr	w8, [sp, #84]
  415548:	and	w8, w8, #0x7
  41554c:	cmp	w0, w8
  415550:	b.lt	4155ac <config_parse_line_max+0x3c0>  // b.tstop
  415554:	ldr	x8, [sp, #64]
  415558:	ldr	x0, [x8]
  41555c:	ldr	w1, [sp, #84]
  415560:	ldur	x2, [x29, #-24]
  415564:	ldur	w3, [x29, #-28]
  415568:	ldr	w4, [sp, #80]
  41556c:	ldur	x9, [x29, #-72]
  415570:	ldr	x5, [sp, #56]
  415574:	mov	w6, #0x921                 	// #2337
  415578:	ldr	x7, [sp, #48]
  41557c:	mov	x10, sp
  415580:	adrp	x11, 42b000 <_fini+0x13a8>
  415584:	add	x11, x11, #0x2ba
  415588:	str	x11, [x10]
  41558c:	mov	x10, sp
  415590:	mov	x11, #0x7ffffffffffffffe    	// #9223372036854775806
  415594:	str	x11, [x10, #8]
  415598:	mov	x10, sp
  41559c:	str	x9, [x10, #16]
  4155a0:	bl	405f68 <log_syntax_internal@plt>
  4155a4:	str	w0, [sp, #28]
  4155a8:	b	4155c0 <config_parse_line_max+0x3d4>
  4155ac:	ldr	w0, [sp, #80]
  4155b0:	bl	405658 <abs@plt>
  4155b4:	mov	w8, wzr
  4155b8:	subs	w8, w8, w0, uxtb
  4155bc:	str	w8, [sp, #28]
  4155c0:	ldr	w8, [sp, #28]
  4155c4:	str	w8, [sp, #76]
  4155c8:	ldur	x9, [x29, #-96]
  4155cc:	mov	x10, #0x7ffffffffffffffe    	// #9223372036854775806
  4155d0:	str	x10, [x9]
  4155d4:	b	4155e4 <config_parse_line_max+0x3f8>
  4155d8:	ldr	x8, [sp, #112]
  4155dc:	ldur	x9, [x29, #-96]
  4155e0:	str	x8, [x9]
  4155e4:	stur	wzr, [x29, #-4]
  4155e8:	ldur	w0, [x29, #-4]
  4155ec:	ldp	x29, x30, [sp, #224]
  4155f0:	add	sp, sp, #0xf0
  4155f4:	ret

00000000004155f8 <isempty>:
  4155f8:	sub	sp, sp, #0x10
  4155fc:	str	x0, [sp, #8]
  415600:	ldr	x8, [sp, #8]
  415604:	mov	w9, #0x1                   	// #1
  415608:	str	w9, [sp, #4]
  41560c:	cbz	x8, 415628 <isempty+0x30>
  415610:	ldr	x8, [sp, #8]
  415614:	ldrb	w9, [x8]
  415618:	cmp	w9, #0x0
  41561c:	cset	w9, ne  // ne = any
  415620:	eor	w9, w9, #0x1
  415624:	str	w9, [sp, #4]
  415628:	ldr	w8, [sp, #4]
  41562c:	and	w0, w8, #0x1
  415630:	add	sp, sp, #0x10
  415634:	ret

0000000000415638 <config_parse_compress>:
  415638:	sub	sp, sp, #0xc0
  41563c:	stp	x29, x30, [sp, #176]
  415640:	add	x29, sp, #0xb0
  415644:	ldr	x8, [x29, #16]
  415648:	ldr	x9, [x29, #24]
  41564c:	adrp	x10, 42a000 <_fini+0x3a8>
  415650:	add	x10, x10, #0x3c8
  415654:	add	x10, x10, #0x3
  415658:	adrp	x11, 42b000 <_fini+0x13a8>
  41565c:	add	x11, x11, #0x2e4
  415660:	stur	x0, [x29, #-8]
  415664:	stur	x1, [x29, #-16]
  415668:	stur	w2, [x29, #-20]
  41566c:	stur	x3, [x29, #-32]
  415670:	stur	w4, [x29, #-36]
  415674:	stur	x5, [x29, #-48]
  415678:	stur	w6, [x29, #-52]
  41567c:	stur	x7, [x29, #-64]
  415680:	stur	x8, [x29, #-72]
  415684:	stur	x9, [x29, #-80]
  415688:	ldur	x8, [x29, #-72]
  41568c:	str	x8, [sp, #88]
  415690:	ldur	x0, [x29, #-64]
  415694:	str	x10, [sp, #40]
  415698:	str	x11, [sp, #32]
  41569c:	bl	4155f8 <isempty>
  4156a0:	tbnz	w0, #0, 4156a8 <config_parse_compress+0x70>
  4156a4:	b	4156c4 <config_parse_compress+0x8c>
  4156a8:	ldr	x8, [sp, #88]
  4156ac:	mov	w9, #0x1                   	// #1
  4156b0:	strb	w9, [x8]
  4156b4:	ldr	x8, [sp, #88]
  4156b8:	mov	x10, #0xffffffffffffffff    	// #-1
  4156bc:	str	x10, [x8, #8]
  4156c0:	b	41590c <config_parse_compress+0x2d4>
  4156c4:	ldur	x0, [x29, #-64]
  4156c8:	adrp	x1, 42b000 <_fini+0x13a8>
  4156cc:	add	x1, x1, #0x2e2
  4156d0:	bl	405868 <strcmp@plt>
  4156d4:	cbnz	w0, 415768 <config_parse_compress+0x130>
  4156d8:	mov	w8, #0x4                   	// #4
  4156dc:	str	w8, [sp, #80]
  4156e0:	mov	w8, wzr
  4156e4:	str	wzr, [sp, #76]
  4156e8:	mov	w0, w8
  4156ec:	bl	405638 <log_get_max_level_realm@plt>
  4156f0:	ldr	w8, [sp, #80]
  4156f4:	and	w8, w8, #0x7
  4156f8:	cmp	w0, w8
  4156fc:	b.lt	41573c <config_parse_compress+0x104>  // b.tstop
  415700:	ldur	x0, [x29, #-8]
  415704:	ldr	w1, [sp, #80]
  415708:	ldur	x2, [x29, #-16]
  41570c:	ldur	w3, [x29, #-20]
  415710:	ldr	w4, [sp, #76]
  415714:	ldr	x5, [sp, #40]
  415718:	mov	w6, #0x93e                 	// #2366
  41571c:	ldr	x7, [sp, #32]
  415720:	mov	x8, sp
  415724:	adrp	x9, 42b000 <_fini+0x13a8>
  415728:	add	x9, x9, #0x2fa
  41572c:	str	x9, [x8]
  415730:	bl	405f68 <log_syntax_internal@plt>
  415734:	str	w0, [sp, #28]
  415738:	b	415750 <config_parse_compress+0x118>
  41573c:	ldr	w0, [sp, #76]
  415740:	bl	405658 <abs@plt>
  415744:	mov	w8, wzr
  415748:	subs	w8, w8, w0, uxtb
  41574c:	str	w8, [sp, #28]
  415750:	ldr	w8, [sp, #28]
  415754:	str	w8, [sp, #72]
  415758:	ldr	x9, [sp, #88]
  41575c:	mov	w8, #0x1                   	// #1
  415760:	strb	w8, [x9]
  415764:	b	41590c <config_parse_compress+0x2d4>
  415768:	ldur	x0, [x29, #-64]
  41576c:	adrp	x1, 42b000 <_fini+0x13a8>
  415770:	add	x1, x1, #0x34c
  415774:	bl	405868 <strcmp@plt>
  415778:	cbnz	w0, 41580c <config_parse_compress+0x1d4>
  41577c:	mov	w8, #0x4                   	// #4
  415780:	str	w8, [sp, #68]
  415784:	mov	w8, wzr
  415788:	str	wzr, [sp, #64]
  41578c:	mov	w0, w8
  415790:	bl	405638 <log_get_max_level_realm@plt>
  415794:	ldr	w8, [sp, #68]
  415798:	and	w8, w8, #0x7
  41579c:	cmp	w0, w8
  4157a0:	b.lt	4157e0 <config_parse_compress+0x1a8>  // b.tstop
  4157a4:	ldur	x0, [x29, #-8]
  4157a8:	ldr	w1, [sp, #68]
  4157ac:	ldur	x2, [x29, #-16]
  4157b0:	ldur	w3, [x29, #-20]
  4157b4:	ldr	w4, [sp, #64]
  4157b8:	ldr	x5, [sp, #40]
  4157bc:	mov	w6, #0x942                 	// #2370
  4157c0:	ldr	x7, [sp, #32]
  4157c4:	mov	x8, sp
  4157c8:	adrp	x9, 42b000 <_fini+0x13a8>
  4157cc:	add	x9, x9, #0x34e
  4157d0:	str	x9, [x8]
  4157d4:	bl	405f68 <log_syntax_internal@plt>
  4157d8:	str	w0, [sp, #24]
  4157dc:	b	4157f4 <config_parse_compress+0x1bc>
  4157e0:	ldr	w0, [sp, #64]
  4157e4:	bl	405658 <abs@plt>
  4157e8:	mov	w8, wzr
  4157ec:	subs	w8, w8, w0, uxtb
  4157f0:	str	w8, [sp, #24]
  4157f4:	ldr	w8, [sp, #24]
  4157f8:	str	w8, [sp, #60]
  4157fc:	ldr	x9, [sp, #88]
  415800:	mov	w8, #0x0                   	// #0
  415804:	strb	w8, [x9]
  415808:	b	41590c <config_parse_compress+0x2d4>
  41580c:	ldur	x0, [x29, #-64]
  415810:	bl	405dd8 <parse_boolean@plt>
  415814:	str	w0, [sp, #84]
  415818:	ldr	w8, [sp, #84]
  41581c:	cmp	w8, #0x0
  415820:	cset	w8, ge  // ge = tcont
  415824:	tbnz	w8, #0, 4158f4 <config_parse_compress+0x2bc>
  415828:	ldur	x0, [x29, #-64]
  41582c:	ldr	x8, [sp, #88]
  415830:	add	x2, x8, #0x8
  415834:	mov	x1, #0x400                 	// #1024
  415838:	bl	405f78 <parse_size@plt>
  41583c:	str	w0, [sp, #84]
  415840:	ldr	w9, [sp, #84]
  415844:	cmp	w9, #0x0
  415848:	cset	w9, ge  // ge = tcont
  41584c:	tbnz	w9, #0, 4158e4 <config_parse_compress+0x2ac>
  415850:	mov	w8, #0x3                   	// #3
  415854:	str	w8, [sp, #56]
  415858:	ldr	w8, [sp, #84]
  41585c:	str	w8, [sp, #52]
  415860:	mov	w8, wzr
  415864:	mov	w0, w8
  415868:	bl	405638 <log_get_max_level_realm@plt>
  41586c:	ldr	w8, [sp, #56]
  415870:	and	w8, w8, #0x7
  415874:	cmp	w0, w8
  415878:	b.lt	4158c4 <config_parse_compress+0x28c>  // b.tstop
  41587c:	ldur	x0, [x29, #-8]
  415880:	ldr	w1, [sp, #56]
  415884:	ldur	x2, [x29, #-16]
  415888:	ldur	w3, [x29, #-20]
  41588c:	ldr	w4, [sp, #52]
  415890:	ldur	x8, [x29, #-64]
  415894:	ldr	x5, [sp, #40]
  415898:	mov	w6, #0x94a                 	// #2378
  41589c:	ldr	x7, [sp, #32]
  4158a0:	mov	x9, sp
  4158a4:	adrp	x10, 42b000 <_fini+0x13a8>
  4158a8:	add	x10, x10, #0x38a
  4158ac:	str	x10, [x9]
  4158b0:	mov	x9, sp
  4158b4:	str	x8, [x9, #8]
  4158b8:	bl	405f68 <log_syntax_internal@plt>
  4158bc:	str	w0, [sp, #20]
  4158c0:	b	4158d8 <config_parse_compress+0x2a0>
  4158c4:	ldr	w0, [sp, #52]
  4158c8:	bl	405658 <abs@plt>
  4158cc:	mov	w8, wzr
  4158d0:	subs	w8, w8, w0, uxtb
  4158d4:	str	w8, [sp, #20]
  4158d8:	ldr	w8, [sp, #20]
  4158dc:	str	w8, [sp, #48]
  4158e0:	b	4158f0 <config_parse_compress+0x2b8>
  4158e4:	ldr	x8, [sp, #88]
  4158e8:	mov	w9, #0x1                   	// #1
  4158ec:	strb	w9, [x8]
  4158f0:	b	41590c <config_parse_compress+0x2d4>
  4158f4:	ldr	w8, [sp, #84]
  4158f8:	cmp	w8, #0x0
  4158fc:	cset	w8, ne  // ne = any
  415900:	ldr	x9, [sp, #88]
  415904:	and	w8, w8, #0x1
  415908:	strb	w8, [x9]
  41590c:	mov	w8, wzr
  415910:	mov	w0, w8
  415914:	ldp	x29, x30, [sp, #176]
  415918:	add	sp, sp, #0xc0
  41591c:	ret

0000000000415920 <determine_path_usage>:
  415920:	sub	sp, sp, #0x1a0
  415924:	stp	x29, x30, [sp, #384]
  415928:	str	x28, [sp, #400]
  41592c:	add	x29, sp, #0x180
  415930:	mov	x8, xzr
  415934:	adrp	x9, 42a000 <_fini+0x3a8>
  415938:	add	x9, x9, #0x3c8
  41593c:	add	x9, x9, #0x3
  415940:	adrp	x10, 42b000 <_fini+0x13a8>
  415944:	add	x10, x10, #0x447
  415948:	stur	x0, [x29, #-16]
  41594c:	stur	x1, [x29, #-24]
  415950:	stur	x2, [x29, #-32]
  415954:	stur	x3, [x29, #-40]
  415958:	stur	x8, [x29, #-48]
  41595c:	str	x9, [sp, #24]
  415960:	str	x10, [sp, #16]
  415964:	ldur	x8, [x29, #-32]
  415968:	cmp	x8, #0x0
  41596c:	cset	w9, ne  // ne = any
  415970:	mov	w10, #0x1                   	// #1
  415974:	eor	w9, w9, #0x1
  415978:	eor	w9, w9, w10
  41597c:	eor	w9, w9, w10
  415980:	and	w9, w9, #0x1
  415984:	mov	w0, w9
  415988:	sxtw	x8, w0
  41598c:	cbz	x8, 4159b4 <determine_path_usage+0x94>
  415990:	mov	w8, wzr
  415994:	mov	w0, w8
  415998:	adrp	x1, 42b000 <_fini+0x13a8>
  41599c:	add	x1, x1, #0x3ec
  4159a0:	ldr	x2, [sp, #24]
  4159a4:	mov	w3, #0x54                  	// #84
  4159a8:	adrp	x4, 42b000 <_fini+0x13a8>
  4159ac:	add	x4, x4, #0x3f5
  4159b0:	bl	405718 <log_assert_failed_realm@plt>
  4159b4:	ldur	x8, [x29, #-40]
  4159b8:	cmp	x8, #0x0
  4159bc:	cset	w9, ne  // ne = any
  4159c0:	mov	w10, #0x1                   	// #1
  4159c4:	eor	w9, w9, #0x1
  4159c8:	eor	w9, w9, w10
  4159cc:	eor	w9, w9, w10
  4159d0:	and	w9, w9, #0x1
  4159d4:	mov	w0, w9
  4159d8:	sxtw	x8, w0
  4159dc:	cbz	x8, 415a04 <determine_path_usage+0xe4>
  4159e0:	mov	w8, wzr
  4159e4:	mov	w0, w8
  4159e8:	adrp	x1, 42b000 <_fini+0x13a8>
  4159ec:	add	x1, x1, #0x43e
  4159f0:	ldr	x2, [sp, #24]
  4159f4:	mov	w3, #0x55                  	// #85
  4159f8:	adrp	x4, 42b000 <_fini+0x13a8>
  4159fc:	add	x4, x4, #0x3f5
  415a00:	bl	405718 <log_assert_failed_realm@plt>
  415a04:	ldur	x0, [x29, #-24]
  415a08:	bl	405a38 <opendir@plt>
  415a0c:	stur	x0, [x29, #-48]
  415a10:	ldur	x8, [x29, #-48]
  415a14:	cbnz	x8, 415ac0 <determine_path_usage+0x1a0>
  415a18:	bl	405768 <__errno_location@plt>
  415a1c:	ldr	w8, [x0]
  415a20:	mov	w9, #0x3                   	// #3
  415a24:	mov	w10, #0x7                   	// #7
  415a28:	cmp	w8, #0x2
  415a2c:	csel	w8, w10, w9, eq  // eq = none
  415a30:	stur	w8, [x29, #-172]
  415a34:	bl	405768 <__errno_location@plt>
  415a38:	ldr	w8, [x0]
  415a3c:	stur	w8, [x29, #-176]
  415a40:	stur	wzr, [x29, #-180]
  415a44:	ldur	w0, [x29, #-180]
  415a48:	bl	405638 <log_get_max_level_realm@plt>
  415a4c:	ldur	w8, [x29, #-172]
  415a50:	and	w8, w8, #0x7
  415a54:	cmp	w0, w8
  415a58:	b.lt	415a90 <determine_path_usage+0x170>  // b.tstop
  415a5c:	ldur	w8, [x29, #-180]
  415a60:	ldur	w9, [x29, #-172]
  415a64:	orr	w0, w9, w8, lsl #10
  415a68:	ldur	w1, [x29, #-176]
  415a6c:	ldur	x6, [x29, #-24]
  415a70:	ldr	x2, [sp, #24]
  415a74:	mov	w3, #0x5a                  	// #90
  415a78:	ldr	x4, [sp, #16]
  415a7c:	adrp	x5, 42b000 <_fini+0x13a8>
  415a80:	add	x5, x5, #0x45c
  415a84:	bl	405648 <log_internal_realm@plt>
  415a88:	str	w0, [sp, #12]
  415a8c:	b	415aa4 <determine_path_usage+0x184>
  415a90:	ldur	w0, [x29, #-176]
  415a94:	bl	405658 <abs@plt>
  415a98:	mov	w8, wzr
  415a9c:	subs	w8, w8, w0, uxtb
  415aa0:	str	w8, [sp, #12]
  415aa4:	ldr	w8, [sp, #12]
  415aa8:	stur	w8, [x29, #-184]
  415aac:	ldur	w8, [x29, #-184]
  415ab0:	stur	w8, [x29, #-4]
  415ab4:	mov	w8, #0x1                   	// #1
  415ab8:	stur	w8, [x29, #-188]
  415abc:	b	415d00 <determine_path_usage+0x3e0>
  415ac0:	ldur	x0, [x29, #-48]
  415ac4:	bl	405978 <dirfd@plt>
  415ac8:	sub	x1, x29, #0xa8
  415acc:	bl	405f88 <fstatvfs64@plt>
  415ad0:	cmp	w0, #0x0
  415ad4:	cset	w8, ge  // ge = tcont
  415ad8:	tbnz	w8, #0, 415b70 <determine_path_usage+0x250>
  415adc:	mov	w8, #0x3                   	// #3
  415ae0:	str	w8, [sp, #192]
  415ae4:	bl	405768 <__errno_location@plt>
  415ae8:	ldr	w8, [x0]
  415aec:	str	w8, [sp, #188]
  415af0:	str	wzr, [sp, #184]
  415af4:	ldr	w0, [sp, #184]
  415af8:	bl	405638 <log_get_max_level_realm@plt>
  415afc:	ldr	w8, [sp, #192]
  415b00:	and	w8, w8, #0x7
  415b04:	cmp	w0, w8
  415b08:	b.lt	415b40 <determine_path_usage+0x220>  // b.tstop
  415b0c:	ldr	w8, [sp, #184]
  415b10:	ldr	w9, [sp, #192]
  415b14:	orr	w0, w9, w8, lsl #10
  415b18:	ldr	w1, [sp, #188]
  415b1c:	ldur	x6, [x29, #-24]
  415b20:	ldr	x2, [sp, #24]
  415b24:	mov	w3, #0x5d                  	// #93
  415b28:	ldr	x4, [sp, #16]
  415b2c:	adrp	x5, 42b000 <_fini+0x13a8>
  415b30:	add	x5, x5, #0x472
  415b34:	bl	405648 <log_internal_realm@plt>
  415b38:	str	w0, [sp, #8]
  415b3c:	b	415b54 <determine_path_usage+0x234>
  415b40:	ldr	w0, [sp, #188]
  415b44:	bl	405658 <abs@plt>
  415b48:	mov	w8, wzr
  415b4c:	subs	w8, w8, w0, uxtb
  415b50:	str	w8, [sp, #8]
  415b54:	ldr	w8, [sp, #8]
  415b58:	str	w8, [sp, #180]
  415b5c:	ldr	w8, [sp, #180]
  415b60:	stur	w8, [x29, #-4]
  415b64:	mov	w8, #0x1                   	// #1
  415b68:	stur	w8, [x29, #-188]
  415b6c:	b	415d00 <determine_path_usage+0x3e0>
  415b70:	ldur	x8, [x29, #-168]
  415b74:	ldur	x9, [x29, #-136]
  415b78:	mul	x8, x8, x9
  415b7c:	ldur	x9, [x29, #-40]
  415b80:	str	x8, [x9]
  415b84:	ldur	x8, [x29, #-32]
  415b88:	str	xzr, [x8]
  415b8c:	bl	405768 <__errno_location@plt>
  415b90:	str	wzr, [x0]
  415b94:	ldur	x0, [x29, #-48]
  415b98:	bl	405918 <readdir64@plt>
  415b9c:	stur	x0, [x29, #-56]
  415ba0:	ldur	x8, [x29, #-56]
  415ba4:	cbnz	x8, 415bc4 <determine_path_usage+0x2a4>
  415ba8:	bl	405768 <__errno_location@plt>
  415bac:	ldr	w8, [x0]
  415bb0:	cmp	w8, #0x0
  415bb4:	cset	w8, le
  415bb8:	tbnz	w8, #0, 415bc0 <determine_path_usage+0x2a0>
  415bbc:	b	415cf4 <determine_path_usage+0x3d4>
  415bc0:	b	415cf4 <determine_path_usage+0x3d4>
  415bc4:	ldur	x8, [x29, #-56]
  415bc8:	add	x0, x8, #0x13
  415bcc:	adrp	x1, 42a000 <_fini+0x3a8>
  415bd0:	add	x1, x1, #0x5ca
  415bd4:	bl	405938 <endswith@plt>
  415bd8:	cbnz	x0, 415bf8 <determine_path_usage+0x2d8>
  415bdc:	ldur	x8, [x29, #-56]
  415be0:	add	x0, x8, #0x13
  415be4:	adrp	x1, 42b000 <_fini+0x13a8>
  415be8:	add	x1, x1, #0x48d
  415bec:	bl	405938 <endswith@plt>
  415bf0:	cbnz	x0, 415bf8 <determine_path_usage+0x2d8>
  415bf4:	b	415cdc <determine_path_usage+0x3bc>
  415bf8:	ldur	x0, [x29, #-48]
  415bfc:	bl	405978 <dirfd@plt>
  415c00:	ldur	x8, [x29, #-56]
  415c04:	add	x1, x8, #0x13
  415c08:	add	x2, sp, #0x30
  415c0c:	mov	w3, #0x100                 	// #256
  415c10:	bl	429c38 <fstatat64>
  415c14:	cmp	w0, #0x0
  415c18:	cset	w9, ge  // ge = tcont
  415c1c:	tbnz	w9, #0, 415cac <determine_path_usage+0x38c>
  415c20:	mov	w8, #0x7                   	// #7
  415c24:	str	w8, [sp, #44]
  415c28:	bl	405768 <__errno_location@plt>
  415c2c:	ldr	w8, [x0]
  415c30:	str	w8, [sp, #40]
  415c34:	str	wzr, [sp, #36]
  415c38:	ldr	w0, [sp, #36]
  415c3c:	bl	405638 <log_get_max_level_realm@plt>
  415c40:	ldr	w8, [sp, #44]
  415c44:	and	w8, w8, #0x7
  415c48:	cmp	w0, w8
  415c4c:	b.lt	415c8c <determine_path_usage+0x36c>  // b.tstop
  415c50:	ldr	w8, [sp, #36]
  415c54:	ldr	w9, [sp, #44]
  415c58:	orr	w0, w9, w8, lsl #10
  415c5c:	ldr	w1, [sp, #40]
  415c60:	ldur	x6, [x29, #-24]
  415c64:	ldur	x10, [x29, #-56]
  415c68:	add	x7, x10, #0x13
  415c6c:	ldr	x2, [sp, #24]
  415c70:	mov	w3, #0x69                  	// #105
  415c74:	ldr	x4, [sp, #16]
  415c78:	adrp	x5, 42b000 <_fini+0x13a8>
  415c7c:	add	x5, x5, #0x497
  415c80:	bl	405648 <log_internal_realm@plt>
  415c84:	str	w0, [sp, #4]
  415c88:	b	415ca0 <determine_path_usage+0x380>
  415c8c:	ldr	w0, [sp, #40]
  415c90:	bl	405658 <abs@plt>
  415c94:	mov	w8, wzr
  415c98:	subs	w8, w8, w0, uxtb
  415c9c:	str	w8, [sp, #4]
  415ca0:	ldr	w8, [sp, #4]
  415ca4:	str	w8, [sp, #32]
  415ca8:	b	415cdc <determine_path_usage+0x3bc>
  415cac:	ldr	w8, [sp, #64]
  415cb0:	and	w8, w8, #0xf000
  415cb4:	cmp	w8, #0x8, lsl #12
  415cb8:	b.eq	415cc0 <determine_path_usage+0x3a0>  // b.none
  415cbc:	b	415cdc <determine_path_usage+0x3bc>
  415cc0:	ldr	x8, [sp, #112]
  415cc4:	mov	x9, #0x200                 	// #512
  415cc8:	mul	x8, x8, x9
  415ccc:	ldur	x9, [x29, #-32]
  415cd0:	ldr	x10, [x9]
  415cd4:	add	x8, x10, x8
  415cd8:	str	x8, [x9]
  415cdc:	bl	405768 <__errno_location@plt>
  415ce0:	str	wzr, [x0]
  415ce4:	ldur	x0, [x29, #-48]
  415ce8:	bl	405918 <readdir64@plt>
  415cec:	stur	x0, [x29, #-56]
  415cf0:	b	415ba0 <determine_path_usage+0x280>
  415cf4:	stur	wzr, [x29, #-4]
  415cf8:	mov	w8, #0x1                   	// #1
  415cfc:	stur	w8, [x29, #-188]
  415d00:	sub	x0, x29, #0x30
  415d04:	bl	40a200 <closedirp>
  415d08:	ldur	w0, [x29, #-4]
  415d0c:	ldr	x28, [sp, #400]
  415d10:	ldp	x29, x30, [sp, #384]
  415d14:	add	sp, sp, #0x1a0
  415d18:	ret

0000000000415d1c <server_add_acls>:
  415d1c:	sub	sp, sp, #0x40
  415d20:	stp	x29, x30, [sp, #48]
  415d24:	add	x29, sp, #0x30
  415d28:	adrp	x8, 42a000 <_fini+0x3a8>
  415d2c:	add	x8, x8, #0x3c8
  415d30:	add	x8, x8, #0x3
  415d34:	stur	x0, [x29, #-8]
  415d38:	stur	w1, [x29, #-12]
  415d3c:	str	x8, [sp, #8]
  415d40:	ldur	x8, [x29, #-8]
  415d44:	cmp	x8, #0x0
  415d48:	cset	w9, ne  // ne = any
  415d4c:	mov	w10, #0x1                   	// #1
  415d50:	eor	w9, w9, #0x1
  415d54:	eor	w9, w9, w10
  415d58:	eor	w9, w9, w10
  415d5c:	and	w9, w9, #0x1
  415d60:	mov	w0, w9
  415d64:	sxtw	x8, w0
  415d68:	cbz	x8, 415d90 <server_add_acls+0x74>
  415d6c:	mov	w8, wzr
  415d70:	mov	w0, w8
  415d74:	adrp	x1, 42b000 <_fini+0x13a8>
  415d78:	add	x1, x1, #0x547
  415d7c:	ldr	x2, [sp, #8]
  415d80:	mov	w3, #0xed                  	// #237
  415d84:	adrp	x4, 42b000 <_fini+0x13a8>
  415d88:	add	x4, x4, #0x549
  415d8c:	bl	405718 <log_assert_failed_realm@plt>
  415d90:	ldur	w0, [x29, #-12]
  415d94:	bl	415e58 <uid_for_system_journal>
  415d98:	tbnz	w0, #0, 415da0 <server_add_acls+0x84>
  415d9c:	b	415da4 <server_add_acls+0x88>
  415da0:	b	415e4c <server_add_acls+0x130>
  415da4:	ldur	x8, [x29, #-8]
  415da8:	ldr	w0, [x8]
  415dac:	ldur	w1, [x29, #-12]
  415db0:	bl	405f98 <add_acls_for_user@plt>
  415db4:	stur	w0, [x29, #-16]
  415db8:	ldur	w9, [x29, #-16]
  415dbc:	cmp	w9, #0x0
  415dc0:	cset	w9, ge  // ge = tcont
  415dc4:	tbnz	w9, #0, 415e4c <server_add_acls+0x130>
  415dc8:	mov	w8, #0x4                   	// #4
  415dcc:	stur	w8, [x29, #-20]
  415dd0:	ldur	w8, [x29, #-16]
  415dd4:	str	w8, [sp, #24]
  415dd8:	str	wzr, [sp, #20]
  415ddc:	ldr	w0, [sp, #20]
  415de0:	bl	405638 <log_get_max_level_realm@plt>
  415de4:	ldur	w8, [x29, #-20]
  415de8:	and	w8, w8, #0x7
  415dec:	cmp	w0, w8
  415df0:	b.lt	415e30 <server_add_acls+0x114>  // b.tstop
  415df4:	ldr	w8, [sp, #20]
  415df8:	ldur	w9, [x29, #-20]
  415dfc:	orr	w0, w9, w8, lsl #10
  415e00:	ldr	w1, [sp, #24]
  415e04:	ldur	x10, [x29, #-8]
  415e08:	ldr	x6, [x10, #48]
  415e0c:	ldr	x2, [sp, #8]
  415e10:	mov	w3, #0xf5                  	// #245
  415e14:	adrp	x4, 42b000 <_fini+0x13a8>
  415e18:	add	x4, x4, #0x574
  415e1c:	adrp	x5, 42b000 <_fini+0x13a8>
  415e20:	add	x5, x5, #0x584
  415e24:	bl	405648 <log_internal_realm@plt>
  415e28:	str	w0, [sp, #4]
  415e2c:	b	415e44 <server_add_acls+0x128>
  415e30:	ldr	w0, [sp, #24]
  415e34:	bl	405658 <abs@plt>
  415e38:	mov	w8, wzr
  415e3c:	subs	w8, w8, w0, uxtb
  415e40:	str	w8, [sp, #4]
  415e44:	ldr	w8, [sp, #4]
  415e48:	str	w8, [sp, #16]
  415e4c:	ldp	x29, x30, [sp, #48]
  415e50:	add	sp, sp, #0x40
  415e54:	ret

0000000000415e58 <uid_for_system_journal>:
  415e58:	sub	sp, sp, #0x20
  415e5c:	stp	x29, x30, [sp, #16]
  415e60:	add	x29, sp, #0x10
  415e64:	stur	w0, [x29, #-4]
  415e68:	ldur	w0, [x29, #-4]
  415e6c:	bl	415eb8 <uid_is_system>
  415e70:	mov	w8, #0x1                   	// #1
  415e74:	str	w8, [sp, #8]
  415e78:	tbnz	w0, #0, 415ea4 <uid_for_system_journal+0x4c>
  415e7c:	ldur	w0, [x29, #-4]
  415e80:	bl	415ed8 <uid_is_dynamic>
  415e84:	mov	w8, #0x1                   	// #1
  415e88:	str	w8, [sp, #8]
  415e8c:	tbnz	w0, #0, 415ea4 <uid_for_system_journal+0x4c>
  415e90:	ldur	w8, [x29, #-4]
  415e94:	mov	w9, #0xfffe                	// #65534
  415e98:	cmp	w8, w9
  415e9c:	cset	w8, eq  // eq = none
  415ea0:	str	w8, [sp, #8]
  415ea4:	ldr	w8, [sp, #8]
  415ea8:	and	w0, w8, #0x1
  415eac:	ldp	x29, x30, [sp, #16]
  415eb0:	add	sp, sp, #0x20
  415eb4:	ret

0000000000415eb8 <uid_is_system>:
  415eb8:	sub	sp, sp, #0x10
  415ebc:	str	w0, [sp, #12]
  415ec0:	ldr	w8, [sp, #12]
  415ec4:	cmp	w8, #0x3e7
  415ec8:	cset	w8, ls  // ls = plast
  415ecc:	and	w0, w8, #0x1
  415ed0:	add	sp, sp, #0x10
  415ed4:	ret

0000000000415ed8 <uid_is_dynamic>:
  415ed8:	sub	sp, sp, #0x10
  415edc:	mov	w8, #0xef00                	// #61184
  415ee0:	str	w0, [sp, #12]
  415ee4:	ldr	w9, [sp, #12]
  415ee8:	mov	w10, #0x0                   	// #0
  415eec:	cmp	w8, w9
  415ef0:	str	w10, [sp, #8]
  415ef4:	b.hi	415f0c <uid_is_dynamic+0x34>  // b.pmore
  415ef8:	ldr	w8, [sp, #12]
  415efc:	mov	w9, #0xffef                	// #65519
  415f00:	cmp	w8, w9
  415f04:	cset	w8, ls  // ls = plast
  415f08:	str	w8, [sp, #8]
  415f0c:	ldr	w8, [sp, #8]
  415f10:	and	w0, w8, #0x1
  415f14:	add	sp, sp, #0x10
  415f18:	ret

0000000000415f1c <set_size>:
  415f1c:	sub	sp, sp, #0x20
  415f20:	stp	x29, x30, [sp, #16]
  415f24:	add	x29, sp, #0x10
  415f28:	str	x0, [sp, #8]
  415f2c:	ldr	x0, [sp, #8]
  415f30:	bl	405fa8 <internal_hashmap_size@plt>
  415f34:	ldp	x29, x30, [sp, #16]
  415f38:	add	sp, sp, #0x20
  415f3c:	ret

0000000000415f40 <set_remove>:
  415f40:	sub	sp, sp, #0x20
  415f44:	stp	x29, x30, [sp, #16]
  415f48:	add	x29, sp, #0x10
  415f4c:	str	x0, [sp, #8]
  415f50:	str	x1, [sp]
  415f54:	ldr	x0, [sp, #8]
  415f58:	ldr	x1, [sp]
  415f5c:	bl	405a18 <internal_hashmap_remove@plt>
  415f60:	ldp	x29, x30, [sp, #16]
  415f64:	add	sp, sp, #0x20
  415f68:	ret

0000000000415f6c <cache_space_invalidate>:
  415f6c:	sub	sp, sp, #0x20
  415f70:	stp	x29, x30, [sp, #16]
  415f74:	add	x29, sp, #0x10
  415f78:	mov	x8, #0x28                  	// #40
  415f7c:	str	x0, [sp, #8]
  415f80:	str	x8, [sp]
  415f84:	ldr	x8, [sp]
  415f88:	cmp	x8, #0x0
  415f8c:	cset	w9, ls  // ls = plast
  415f90:	tbnz	w9, #0, 415fa8 <cache_space_invalidate+0x3c>
  415f94:	ldr	x0, [sp, #8]
  415f98:	ldr	x2, [sp]
  415f9c:	mov	w8, wzr
  415fa0:	mov	w1, w8
  415fa4:	bl	405c28 <memset@plt>
  415fa8:	ldp	x29, x30, [sp, #16]
  415fac:	add	sp, sp, #0x20
  415fb0:	ret

0000000000415fb4 <pid_is_valid>:
  415fb4:	sub	sp, sp, #0x10
  415fb8:	str	w0, [sp, #12]
  415fbc:	ldr	w8, [sp, #12]
  415fc0:	cmp	w8, #0x0
  415fc4:	cset	w8, gt
  415fc8:	and	w0, w8, #0x1
  415fcc:	add	sp, sp, #0x10
  415fd0:	ret

0000000000415fd4 <gid_is_valid>:
  415fd4:	sub	sp, sp, #0x20
  415fd8:	stp	x29, x30, [sp, #16]
  415fdc:	add	x29, sp, #0x10
  415fe0:	stur	w0, [x29, #-4]
  415fe4:	ldur	w0, [x29, #-4]
  415fe8:	bl	405ac8 <uid_is_valid@plt>
  415fec:	and	w0, w0, #0x1
  415ff0:	ldp	x29, x30, [sp, #16]
  415ff4:	add	sp, sp, #0x20
  415ff8:	ret

0000000000415ffc <audit_session_is_valid>:
  415ffc:	sub	sp, sp, #0x10
  416000:	str	w0, [sp, #12]
  416004:	ldr	w8, [sp, #12]
  416008:	cmp	w8, #0x0
  41600c:	cset	w8, ls  // ls = plast
  416010:	mov	w9, #0x0                   	// #0
  416014:	str	w9, [sp, #8]
  416018:	tbnz	w8, #0, 416030 <audit_session_is_valid+0x34>
  41601c:	ldr	w8, [sp, #12]
  416020:	mov	w9, #0xffffffff            	// #-1
  416024:	cmp	w8, w9
  416028:	cset	w8, ne  // ne = any
  41602c:	str	w8, [sp, #8]
  416030:	ldr	w8, [sp, #8]
  416034:	and	w0, w8, #0x1
  416038:	add	sp, sp, #0x10
  41603c:	ret

0000000000416040 <sd_id128_is_null>:
  416040:	sub	sp, sp, #0x20
  416044:	str	x0, [sp, #16]
  416048:	str	x1, [sp, #24]
  41604c:	ldr	x8, [sp, #16]
  416050:	mov	w9, #0x0                   	// #0
  416054:	str	w9, [sp, #12]
  416058:	cbnz	x8, 41606c <sd_id128_is_null+0x2c>
  41605c:	ldr	x8, [sp, #24]
  416060:	cmp	x8, #0x0
  416064:	cset	w9, eq  // eq = none
  416068:	str	w9, [sp, #12]
  41606c:	ldr	w8, [sp, #12]
  416070:	and	w0, w8, #0x1
  416074:	add	sp, sp, #0x20
  416078:	ret

000000000041607c <write_to_journal>:
  41607c:	sub	sp, sp, #0x120
  416080:	stp	x29, x30, [sp, #256]
  416084:	str	x28, [sp, #272]
  416088:	add	x29, sp, #0x100
  41608c:	sub	x8, x29, #0x8
  416090:	mov	w9, #0x0                   	// #0
  416094:	adrp	x10, 42a000 <_fini+0x3a8>
  416098:	add	x10, x10, #0x3c8
  41609c:	add	x10, x10, #0x3
  4160a0:	adrp	x11, 42b000 <_fini+0x13a8>
  4160a4:	add	x11, x11, #0xc2b
  4160a8:	adrp	x12, 42b000 <_fini+0x13a8>
  4160ac:	add	x12, x12, #0xb71
  4160b0:	str	x0, [x8]
  4160b4:	stur	w1, [x29, #-12]
  4160b8:	stur	x2, [x29, #-24]
  4160bc:	stur	x3, [x29, #-32]
  4160c0:	stur	w4, [x29, #-36]
  4160c4:	sturb	w9, [x29, #-37]
  4160c8:	sturb	w9, [x29, #-38]
  4160cc:	str	x8, [sp, #96]
  4160d0:	str	x10, [sp, #88]
  4160d4:	str	x11, [sp, #80]
  4160d8:	str	x12, [sp, #72]
  4160dc:	ldr	x8, [sp, #96]
  4160e0:	ldr	x9, [x8]
  4160e4:	cmp	x9, #0x0
  4160e8:	cset	w10, ne  // ne = any
  4160ec:	mov	w11, #0x1                   	// #1
  4160f0:	eor	w10, w10, #0x1
  4160f4:	eor	w10, w10, w11
  4160f8:	eor	w10, w10, w11
  4160fc:	and	w10, w10, #0x1
  416100:	mov	w0, w10
  416104:	sxtw	x9, w0
  416108:	cbz	x9, 41612c <write_to_journal+0xb0>
  41610c:	mov	w8, wzr
  416110:	mov	w0, w8
  416114:	adrp	x1, 429000 <journal_ratelimit_group_free+0x70>
  416118:	add	x1, x1, #0xdc8
  41611c:	ldr	x2, [sp, #88]
  416120:	mov	w3, #0x323                 	// #803
  416124:	ldr	x4, [sp, #72]
  416128:	bl	405718 <log_assert_failed_realm@plt>
  41612c:	ldur	x8, [x29, #-24]
  416130:	cmp	x8, #0x0
  416134:	cset	w9, ne  // ne = any
  416138:	mov	w10, #0x1                   	// #1
  41613c:	eor	w9, w9, #0x1
  416140:	eor	w9, w9, w10
  416144:	eor	w9, w9, w10
  416148:	and	w9, w9, #0x1
  41614c:	mov	w0, w9
  416150:	sxtw	x8, w0
  416154:	cbz	x8, 416178 <write_to_journal+0xfc>
  416158:	mov	w8, wzr
  41615c:	mov	w0, w8
  416160:	adrp	x1, 42b000 <_fini+0x13a8>
  416164:	add	x1, x1, #0x7eb
  416168:	ldr	x2, [sp, #88]
  41616c:	mov	w3, #0x324                 	// #804
  416170:	ldr	x4, [sp, #72]
  416174:	bl	405718 <log_assert_failed_realm@plt>
  416178:	ldur	x8, [x29, #-32]
  41617c:	cmp	x8, #0x0
  416180:	cset	w9, hi  // hi = pmore
  416184:	mov	w10, #0x1                   	// #1
  416188:	eor	w9, w9, #0x1
  41618c:	eor	w9, w9, w10
  416190:	eor	w9, w9, w10
  416194:	and	w9, w9, #0x1
  416198:	mov	w0, w9
  41619c:	sxtw	x8, w0
  4161a0:	cbz	x8, 4161c4 <write_to_journal+0x148>
  4161a4:	mov	w8, wzr
  4161a8:	mov	w0, w8
  4161ac:	adrp	x1, 42b000 <_fini+0x13a8>
  4161b0:	add	x1, x1, #0x7f1
  4161b4:	ldr	x2, [sp, #88]
  4161b8:	mov	w3, #0x325                 	// #805
  4161bc:	ldr	x4, [sp, #72]
  4161c0:	bl	405718 <log_assert_failed_realm@plt>
  4161c4:	ldr	x8, [sp, #96]
  4161c8:	ldr	x9, [x8]
  4161cc:	ldr	x0, [x9, #32]
  4161d0:	mov	w10, wzr
  4161d4:	mov	w1, w10
  4161d8:	sub	x2, x29, #0x38
  4161dc:	bl	405c98 <sd_event_now@plt>
  4161e0:	cmp	w0, #0x0
  4161e4:	cset	w10, ge  // ge = tcont
  4161e8:	mov	w11, #0x1                   	// #1
  4161ec:	eor	w10, w10, #0x1
  4161f0:	eor	w10, w10, w11
  4161f4:	eor	w10, w10, w11
  4161f8:	and	w10, w10, #0x1
  4161fc:	mov	w2, w10
  416200:	sxtw	x8, w2
  416204:	cbz	x8, 416228 <write_to_journal+0x1ac>
  416208:	mov	w8, wzr
  41620c:	mov	w0, w8
  416210:	adrp	x1, 42b000 <_fini+0x13a8>
  416214:	add	x1, x1, #0xbb5
  416218:	ldr	x2, [sp, #88]
  41621c:	mov	w3, #0x32a                 	// #810
  416220:	ldr	x4, [sp, #72]
  416224:	bl	405718 <log_assert_failed_realm@plt>
  416228:	ldr	x8, [sp, #96]
  41622c:	ldr	x9, [x8]
  416230:	ldr	x0, [x9, #32]
  416234:	sub	x9, x29, #0x38
  416238:	add	x2, x9, #0x8
  41623c:	mov	w1, #0x1                   	// #1
  416240:	bl	405c98 <sd_event_now@plt>
  416244:	cmp	w0, #0x0
  416248:	cset	w10, ge  // ge = tcont
  41624c:	mov	w11, #0x1                   	// #1
  416250:	eor	w10, w10, #0x1
  416254:	eor	w10, w10, w11
  416258:	eor	w10, w10, w11
  41625c:	and	w10, w10, #0x1
  416260:	mov	w2, w10
  416264:	sxtw	x8, w2
  416268:	cbz	x8, 41628c <write_to_journal+0x210>
  41626c:	mov	w8, wzr
  416270:	mov	w0, w8
  416274:	adrp	x1, 42b000 <_fini+0x13a8>
  416278:	add	x1, x1, #0xbef
  41627c:	ldr	x2, [sp, #88]
  416280:	mov	w3, #0x32b                 	// #811
  416284:	ldr	x4, [sp, #72]
  416288:	bl	405718 <log_assert_failed_realm@plt>
  41628c:	ldur	x8, [x29, #-56]
  416290:	ldr	x9, [sp, #96]
  416294:	ldr	x10, [x9]
  416298:	ldr	x10, [x10, #704]
  41629c:	cmp	x8, x10
  4162a0:	b.cs	416324 <write_to_journal+0x2a8>  // b.hs, b.nlast
  4162a4:	mov	w8, #0x7                   	// #7
  4162a8:	stur	w8, [x29, #-72]
  4162ac:	stur	wzr, [x29, #-76]
  4162b0:	stur	wzr, [x29, #-80]
  4162b4:	ldur	w0, [x29, #-80]
  4162b8:	bl	405638 <log_get_max_level_realm@plt>
  4162bc:	ldur	w8, [x29, #-72]
  4162c0:	and	w8, w8, #0x7
  4162c4:	cmp	w0, w8
  4162c8:	b.lt	4162fc <write_to_journal+0x280>  // b.tstop
  4162cc:	ldur	w8, [x29, #-80]
  4162d0:	ldur	w9, [x29, #-72]
  4162d4:	orr	w0, w9, w8, lsl #10
  4162d8:	ldur	w1, [x29, #-76]
  4162dc:	ldr	x2, [sp, #88]
  4162e0:	mov	w3, #0x333                 	// #819
  4162e4:	ldr	x4, [sp, #80]
  4162e8:	adrp	x5, 42b000 <_fini+0x13a8>
  4162ec:	add	x5, x5, #0xc3c
  4162f0:	bl	405648 <log_internal_realm@plt>
  4162f4:	str	w0, [sp, #68]
  4162f8:	b	416310 <write_to_journal+0x294>
  4162fc:	ldur	w0, [x29, #-76]
  416300:	bl	405658 <abs@plt>
  416304:	mov	w8, wzr
  416308:	subs	w8, w8, w0, uxtb
  41630c:	str	w8, [sp, #68]
  416310:	ldr	w8, [sp, #68]
  416314:	stur	w8, [x29, #-84]
  416318:	mov	w8, #0x1                   	// #1
  41631c:	sturb	w8, [x29, #-38]
  416320:	b	4163e4 <write_to_journal+0x368>
  416324:	ldr	x8, [sp, #96]
  416328:	ldr	x0, [x8]
  41632c:	ldur	w1, [x29, #-12]
  416330:	bl	41674c <find_journal>
  416334:	stur	x0, [x29, #-64]
  416338:	ldur	x8, [x29, #-64]
  41633c:	cbnz	x8, 416344 <write_to_journal+0x2c8>
  416340:	b	41673c <write_to_journal+0x6c0>
  416344:	ldur	x0, [x29, #-64]
  416348:	ldr	x8, [sp, #96]
  41634c:	ldr	x9, [x8]
  416350:	ldr	x1, [x9, #488]
  416354:	bl	405fb8 <journal_file_rotate_suggested@plt>
  416358:	tbnz	w0, #0, 416360 <write_to_journal+0x2e4>
  41635c:	b	4163e4 <write_to_journal+0x368>
  416360:	mov	w8, #0x7                   	// #7
  416364:	stur	w8, [x29, #-88]
  416368:	stur	wzr, [x29, #-92]
  41636c:	stur	wzr, [x29, #-96]
  416370:	ldur	w0, [x29, #-96]
  416374:	bl	405638 <log_get_max_level_realm@plt>
  416378:	ldur	w8, [x29, #-88]
  41637c:	and	w8, w8, #0x7
  416380:	cmp	w0, w8
  416384:	b.lt	4163c0 <write_to_journal+0x344>  // b.tstop
  416388:	ldur	w8, [x29, #-96]
  41638c:	ldur	w9, [x29, #-88]
  416390:	orr	w0, w9, w8, lsl #10
  416394:	ldur	w1, [x29, #-92]
  416398:	ldur	x10, [x29, #-64]
  41639c:	ldr	x6, [x10, #48]
  4163a0:	ldr	x2, [sp, #88]
  4163a4:	mov	w3, #0x33c                 	// #828
  4163a8:	ldr	x4, [sp, #80]
  4163ac:	adrp	x5, 42b000 <_fini+0x13a8>
  4163b0:	add	x5, x5, #0xc5d
  4163b4:	bl	405648 <log_internal_realm@plt>
  4163b8:	str	w0, [sp, #64]
  4163bc:	b	4163d4 <write_to_journal+0x358>
  4163c0:	ldur	w0, [x29, #-92]
  4163c4:	bl	405658 <abs@plt>
  4163c8:	mov	w8, wzr
  4163cc:	subs	w8, w8, w0, uxtb
  4163d0:	str	w8, [sp, #64]
  4163d4:	ldr	w8, [sp, #64]
  4163d8:	stur	w8, [x29, #-100]
  4163dc:	mov	w8, #0x1                   	// #1
  4163e0:	sturb	w8, [x29, #-38]
  4163e4:	ldurb	w8, [x29, #-38]
  4163e8:	tbnz	w8, #0, 4163f0 <write_to_journal+0x374>
  4163ec:	b	41643c <write_to_journal+0x3c0>
  4163f0:	ldr	x8, [sp, #96]
  4163f4:	ldr	x0, [x8]
  4163f8:	bl	409818 <server_rotate>
  4163fc:	ldr	x8, [sp, #96]
  416400:	ldr	x0, [x8]
  416404:	mov	w9, wzr
  416408:	and	w1, w9, #0x1
  41640c:	bl	40ad14 <server_vacuum>
  416410:	mov	w9, #0x1                   	// #1
  416414:	sturb	w9, [x29, #-37]
  416418:	ldr	x8, [sp, #96]
  41641c:	ldr	x10, [x8]
  416420:	ldur	w1, [x29, #-12]
  416424:	mov	x0, x10
  416428:	bl	41674c <find_journal>
  41642c:	stur	x0, [x29, #-64]
  416430:	ldur	x8, [x29, #-64]
  416434:	cbnz	x8, 41643c <write_to_journal+0x3c0>
  416438:	b	41673c <write_to_journal+0x6c0>
  41643c:	sub	x1, x29, #0x38
  416440:	ldur	x8, [x29, #-56]
  416444:	ldr	x9, [sp, #96]
  416448:	ldr	x10, [x9]
  41644c:	str	x8, [x10, #704]
  416450:	ldur	x0, [x29, #-64]
  416454:	ldur	x3, [x29, #-24]
  416458:	ldur	x8, [x29, #-32]
  41645c:	ldr	x10, [x9]
  416460:	add	x5, x10, #0xb0
  416464:	mov	x10, xzr
  416468:	mov	x2, x10
  41646c:	mov	w4, w8
  416470:	mov	x6, x10
  416474:	mov	x7, x10
  416478:	bl	405fc8 <journal_file_append_entry@plt>
  41647c:	stur	w0, [x29, #-68]
  416480:	ldur	w8, [x29, #-68]
  416484:	cmp	w8, #0x0
  416488:	cset	w8, lt  // lt = tstop
  41648c:	tbnz	w8, #0, 4164a4 <write_to_journal+0x428>
  416490:	ldr	x8, [sp, #96]
  416494:	ldr	x0, [x8]
  416498:	ldur	w1, [x29, #-36]
  41649c:	bl	411b94 <server_schedule_sync>
  4164a0:	b	41673c <write_to_journal+0x6c0>
  4164a4:	ldurb	w8, [x29, #-37]
  4164a8:	tbnz	w8, #0, 4164bc <write_to_journal+0x440>
  4164ac:	ldur	x0, [x29, #-64]
  4164b0:	ldur	w1, [x29, #-68]
  4164b4:	bl	410ba8 <shall_try_append_again>
  4164b8:	tbnz	w0, #0, 416574 <write_to_journal+0x4f8>
  4164bc:	mov	w8, #0x3                   	// #3
  4164c0:	stur	w8, [x29, #-104]
  4164c4:	ldur	w8, [x29, #-68]
  4164c8:	stur	w8, [x29, #-108]
  4164cc:	stur	wzr, [x29, #-112]
  4164d0:	ldur	w0, [x29, #-112]
  4164d4:	bl	405638 <log_get_max_level_realm@plt>
  4164d8:	ldur	w8, [x29, #-104]
  4164dc:	and	w8, w8, #0x7
  4164e0:	cmp	w0, w8
  4164e4:	b.lt	416554 <write_to_journal+0x4d8>  // b.tstop
  4164e8:	ldur	w8, [x29, #-112]
  4164ec:	ldur	w9, [x29, #-104]
  4164f0:	orr	w0, w9, w8, lsl #10
  4164f4:	ldur	w1, [x29, #-108]
  4164f8:	ldur	x6, [x29, #-32]
  4164fc:	ldur	x10, [x29, #-24]
  416500:	ldur	x11, [x29, #-32]
  416504:	str	w0, [sp, #60]
  416508:	mov	x0, x10
  41650c:	str	w1, [sp, #56]
  416510:	mov	x1, x11
  416514:	str	x6, [sp, #48]
  416518:	bl	416b6c <IOVEC_TOTAL_SIZE>
  41651c:	ldr	w8, [sp, #60]
  416520:	str	x0, [sp, #40]
  416524:	mov	w0, w8
  416528:	ldr	w1, [sp, #56]
  41652c:	ldr	x2, [sp, #88]
  416530:	mov	w3, #0x354                 	// #852
  416534:	ldr	x4, [sp, #80]
  416538:	adrp	x5, 42b000 <_fini+0x13a8>
  41653c:	add	x5, x5, #0xca0
  416540:	ldr	x6, [sp, #48]
  416544:	ldr	x7, [sp, #40]
  416548:	bl	405648 <log_internal_realm@plt>
  41654c:	str	w0, [sp, #36]
  416550:	b	416568 <write_to_journal+0x4ec>
  416554:	ldur	w0, [x29, #-108]
  416558:	bl	405658 <abs@plt>
  41655c:	mov	w8, wzr
  416560:	subs	w8, w8, w0, uxtb
  416564:	str	w8, [sp, #36]
  416568:	ldr	w8, [sp, #36]
  41656c:	stur	w8, [x29, #-116]
  416570:	b	41673c <write_to_journal+0x6c0>
  416574:	ldr	x8, [sp, #96]
  416578:	ldr	x0, [x8]
  41657c:	bl	409818 <server_rotate>
  416580:	ldr	x8, [sp, #96]
  416584:	ldr	x0, [x8]
  416588:	mov	w9, wzr
  41658c:	and	w1, w9, #0x1
  416590:	bl	40ad14 <server_vacuum>
  416594:	ldr	x8, [sp, #96]
  416598:	ldr	x10, [x8]
  41659c:	ldur	w1, [x29, #-12]
  4165a0:	mov	x0, x10
  4165a4:	bl	41674c <find_journal>
  4165a8:	stur	x0, [x29, #-64]
  4165ac:	ldur	x8, [x29, #-64]
  4165b0:	cbnz	x8, 4165b8 <write_to_journal+0x53c>
  4165b4:	b	41673c <write_to_journal+0x6c0>
  4165b8:	mov	w8, #0x7                   	// #7
  4165bc:	stur	w8, [x29, #-120]
  4165c0:	stur	wzr, [x29, #-124]
  4165c4:	str	wzr, [sp, #128]
  4165c8:	ldr	w0, [sp, #128]
  4165cc:	bl	405638 <log_get_max_level_realm@plt>
  4165d0:	ldur	w8, [x29, #-120]
  4165d4:	and	w8, w8, #0x7
  4165d8:	cmp	w0, w8
  4165dc:	b.lt	416610 <write_to_journal+0x594>  // b.tstop
  4165e0:	ldr	w8, [sp, #128]
  4165e4:	ldur	w9, [x29, #-120]
  4165e8:	orr	w0, w9, w8, lsl #10
  4165ec:	ldur	w1, [x29, #-124]
  4165f0:	ldr	x2, [sp, #88]
  4165f4:	mov	w3, #0x35f                 	// #863
  4165f8:	ldr	x4, [sp, #80]
  4165fc:	adrp	x5, 42a000 <_fini+0x3a8>
  416600:	add	x5, x5, #0xb23
  416604:	bl	405648 <log_internal_realm@plt>
  416608:	str	w0, [sp, #32]
  41660c:	b	416624 <write_to_journal+0x5a8>
  416610:	ldur	w0, [x29, #-124]
  416614:	bl	405658 <abs@plt>
  416618:	mov	w8, wzr
  41661c:	subs	w8, w8, w0, uxtb
  416620:	str	w8, [sp, #32]
  416624:	ldr	w8, [sp, #32]
  416628:	str	w8, [sp, #124]
  41662c:	ldur	x0, [x29, #-64]
  416630:	ldur	x3, [x29, #-24]
  416634:	ldur	x9, [x29, #-32]
  416638:	ldr	x10, [sp, #96]
  41663c:	ldr	x11, [x10]
  416640:	add	x5, x11, #0xb0
  416644:	sub	x1, x29, #0x38
  416648:	mov	x11, xzr
  41664c:	mov	x2, x11
  416650:	mov	w4, w9
  416654:	mov	x6, x11
  416658:	mov	x7, x11
  41665c:	bl	405fc8 <journal_file_append_entry@plt>
  416660:	stur	w0, [x29, #-68]
  416664:	ldur	w8, [x29, #-68]
  416668:	cmp	w8, #0x0
  41666c:	cset	w8, ge  // ge = tcont
  416670:	tbnz	w8, #0, 41672c <write_to_journal+0x6b0>
  416674:	mov	w8, #0x3                   	// #3
  416678:	str	w8, [sp, #120]
  41667c:	ldur	w8, [x29, #-68]
  416680:	str	w8, [sp, #116]
  416684:	str	wzr, [sp, #112]
  416688:	ldr	w0, [sp, #112]
  41668c:	bl	405638 <log_get_max_level_realm@plt>
  416690:	ldr	w8, [sp, #120]
  416694:	and	w8, w8, #0x7
  416698:	cmp	w0, w8
  41669c:	b.lt	41670c <write_to_journal+0x690>  // b.tstop
  4166a0:	ldr	w8, [sp, #112]
  4166a4:	ldr	w9, [sp, #120]
  4166a8:	orr	w0, w9, w8, lsl #10
  4166ac:	ldr	w1, [sp, #116]
  4166b0:	ldur	x6, [x29, #-32]
  4166b4:	ldur	x10, [x29, #-24]
  4166b8:	ldur	x11, [x29, #-32]
  4166bc:	str	w0, [sp, #28]
  4166c0:	mov	x0, x10
  4166c4:	str	w1, [sp, #24]
  4166c8:	mov	x1, x11
  4166cc:	str	x6, [sp, #16]
  4166d0:	bl	416b6c <IOVEC_TOTAL_SIZE>
  4166d4:	ldr	w8, [sp, #28]
  4166d8:	str	x0, [sp, #8]
  4166dc:	mov	w0, w8
  4166e0:	ldr	w1, [sp, #24]
  4166e4:	ldr	x2, [sp, #88]
  4166e8:	mov	w3, #0x362                 	// #866
  4166ec:	ldr	x4, [sp, #80]
  4166f0:	adrp	x5, 42b000 <_fini+0x13a8>
  4166f4:	add	x5, x5, #0xcdb
  4166f8:	ldr	x6, [sp, #16]
  4166fc:	ldr	x7, [sp, #8]
  416700:	bl	405648 <log_internal_realm@plt>
  416704:	str	w0, [sp, #4]
  416708:	b	416720 <write_to_journal+0x6a4>
  41670c:	ldr	w0, [sp, #116]
  416710:	bl	405658 <abs@plt>
  416714:	mov	w8, wzr
  416718:	subs	w8, w8, w0, uxtb
  41671c:	str	w8, [sp, #4]
  416720:	ldr	w8, [sp, #4]
  416724:	str	w8, [sp, #108]
  416728:	b	41673c <write_to_journal+0x6c0>
  41672c:	ldr	x8, [sp, #96]
  416730:	ldr	x0, [x8]
  416734:	ldur	w1, [x29, #-36]
  416738:	bl	411b94 <server_schedule_sync>
  41673c:	ldr	x28, [sp, #272]
  416740:	ldp	x29, x30, [sp, #256]
  416744:	add	sp, sp, #0x120
  416748:	ret

000000000041674c <find_journal>:
  41674c:	sub	sp, sp, #0xe0
  416750:	stp	x29, x30, [sp, #192]
  416754:	str	x19, [sp, #208]
  416758:	add	x29, sp, #0xc0
  41675c:	mov	x8, xzr
  416760:	adrp	x9, 42a000 <_fini+0x3a8>
  416764:	add	x9, x9, #0x3c8
  416768:	add	x9, x9, #0x3
  41676c:	stur	x0, [x29, #-16]
  416770:	stur	w1, [x29, #-20]
  416774:	stur	x8, [x29, #-32]
  416778:	str	x9, [sp, #96]
  41677c:	ldur	x8, [x29, #-16]
  416780:	cmp	x8, #0x0
  416784:	cset	w9, ne  // ne = any
  416788:	mov	w10, #0x1                   	// #1
  41678c:	eor	w9, w9, #0x1
  416790:	eor	w9, w9, w10
  416794:	eor	w9, w9, w10
  416798:	and	w9, w9, #0x1
  41679c:	mov	w0, w9
  4167a0:	sxtw	x8, w0
  4167a4:	cbz	x8, 4167cc <find_journal+0x80>
  4167a8:	mov	w8, wzr
  4167ac:	mov	w0, w8
  4167b0:	adrp	x1, 429000 <journal_ratelimit_group_free+0x70>
  4167b4:	add	x1, x1, #0xdc8
  4167b8:	ldr	x2, [sp, #96]
  4167bc:	mov	w3, #0x17c                 	// #380
  4167c0:	adrp	x4, 42b000 <_fini+0x13a8>
  4167c4:	add	x4, x4, #0xd28
  4167c8:	bl	405718 <log_assert_failed_realm@plt>
  4167cc:	ldur	x0, [x29, #-16]
  4167d0:	mov	w8, wzr
  4167d4:	and	w1, w8, #0x1
  4167d8:	and	w2, w8, #0x1
  4167dc:	bl	410218 <system_journal_open>
  4167e0:	ldur	x9, [x29, #-16]
  4167e4:	ldr	x9, [x9, #152]
  4167e8:	cbz	x9, 416804 <find_journal+0xb8>
  4167ec:	ldur	x8, [x29, #-16]
  4167f0:	ldr	x8, [x8, #152]
  4167f4:	stur	x8, [x29, #-8]
  4167f8:	mov	w9, #0x1                   	// #1
  4167fc:	stur	w9, [x29, #-68]
  416800:	b	416b50 <find_journal+0x404>
  416804:	ldur	w0, [x29, #-20]
  416808:	bl	415e58 <uid_for_system_journal>
  41680c:	tbnz	w0, #0, 416814 <find_journal+0xc8>
  416810:	b	41682c <find_journal+0xe0>
  416814:	ldur	x8, [x29, #-16]
  416818:	ldr	x8, [x8, #160]
  41681c:	stur	x8, [x29, #-8]
  416820:	mov	w9, #0x1                   	// #1
  416824:	stur	w9, [x29, #-68]
  416828:	b	416b50 <find_journal+0x404>
  41682c:	ldur	x8, [x29, #-16]
  416830:	ldr	x0, [x8, #168]
  416834:	ldur	w9, [x29, #-20]
  416838:	mov	w8, w9
  41683c:	add	x8, x8, #0x1
  416840:	mov	x1, x8
  416844:	bl	416bd0 <ordered_hashmap_get>
  416848:	stur	x0, [x29, #-48]
  41684c:	ldur	x8, [x29, #-48]
  416850:	cbz	x8, 416868 <find_journal+0x11c>
  416854:	ldur	x8, [x29, #-48]
  416858:	stur	x8, [x29, #-8]
  41685c:	mov	w9, #0x1                   	// #1
  416860:	stur	w9, [x29, #-68]
  416864:	b	416b50 <find_journal+0x404>
  416868:	sub	x0, x29, #0x40
  41686c:	bl	405a28 <sd_id128_get_machine@plt>
  416870:	stur	w0, [x29, #-36]
  416874:	ldur	w8, [x29, #-36]
  416878:	cmp	w8, #0x0
  41687c:	cset	w8, ge  // ge = tcont
  416880:	tbnz	w8, #0, 416918 <find_journal+0x1cc>
  416884:	mov	w8, #0x7                   	// #7
  416888:	stur	w8, [x29, #-72]
  41688c:	ldur	w8, [x29, #-36]
  416890:	stur	w8, [x29, #-76]
  416894:	stur	wzr, [x29, #-80]
  416898:	ldur	w0, [x29, #-80]
  41689c:	bl	405638 <log_get_max_level_realm@plt>
  4168a0:	ldur	w8, [x29, #-72]
  4168a4:	and	w8, w8, #0x7
  4168a8:	cmp	w0, w8
  4168ac:	b.lt	4168e4 <find_journal+0x198>  // b.tstop
  4168b0:	ldur	w8, [x29, #-80]
  4168b4:	ldur	w9, [x29, #-72]
  4168b8:	orr	w0, w9, w8, lsl #10
  4168bc:	ldur	w1, [x29, #-76]
  4168c0:	ldr	x2, [sp, #96]
  4168c4:	mov	w3, #0x19a                 	// #410
  4168c8:	adrp	x4, 42b000 <_fini+0x13a8>
  4168cc:	add	x4, x4, #0xd53
  4168d0:	adrp	x5, 42b000 <_fini+0x13a8>
  4168d4:	add	x5, x5, #0xd60
  4168d8:	bl	405648 <log_internal_realm@plt>
  4168dc:	str	w0, [sp, #92]
  4168e0:	b	4168f8 <find_journal+0x1ac>
  4168e4:	ldur	w0, [x29, #-76]
  4168e8:	bl	405658 <abs@plt>
  4168ec:	mov	w8, wzr
  4168f0:	subs	w8, w8, w0, uxtb
  4168f4:	str	w8, [sp, #92]
  4168f8:	ldr	w8, [sp, #92]
  4168fc:	stur	w8, [x29, #-84]
  416900:	ldur	x9, [x29, #-16]
  416904:	ldr	x9, [x9, #160]
  416908:	stur	x9, [x29, #-8]
  41690c:	mov	w8, #0x1                   	// #1
  416910:	stur	w8, [x29, #-68]
  416914:	b	416b50 <find_journal+0x404>
  416918:	ldurb	w2, [x29, #-64]
  41691c:	ldurb	w3, [x29, #-63]
  416920:	ldurb	w4, [x29, #-62]
  416924:	ldurb	w5, [x29, #-61]
  416928:	ldurb	w6, [x29, #-60]
  41692c:	ldurb	w7, [x29, #-59]
  416930:	ldurb	w8, [x29, #-58]
  416934:	ldurb	w9, [x29, #-57]
  416938:	ldurb	w10, [x29, #-56]
  41693c:	ldurb	w11, [x29, #-55]
  416940:	ldurb	w12, [x29, #-54]
  416944:	ldurb	w13, [x29, #-53]
  416948:	ldurb	w14, [x29, #-52]
  41694c:	ldurb	w15, [x29, #-51]
  416950:	ldurb	w16, [x29, #-50]
  416954:	ldurb	w17, [x29, #-49]
  416958:	ldur	w18, [x29, #-20]
  41695c:	sub	x0, x29, #0x20
  416960:	adrp	x1, 42b000 <_fini+0x13a8>
  416964:	add	x1, x1, #0xd95
  416968:	mov	x19, sp
  41696c:	str	w8, [x19]
  416970:	mov	x19, sp
  416974:	str	w9, [x19, #8]
  416978:	mov	x19, sp
  41697c:	str	w10, [x19, #16]
  416980:	mov	x19, sp
  416984:	str	w11, [x19, #24]
  416988:	mov	x19, sp
  41698c:	str	w12, [x19, #32]
  416990:	mov	x19, sp
  416994:	str	w13, [x19, #40]
  416998:	mov	x19, sp
  41699c:	str	w14, [x19, #48]
  4169a0:	mov	x19, sp
  4169a4:	str	w15, [x19, #56]
  4169a8:	mov	x19, sp
  4169ac:	str	w16, [x19, #64]
  4169b0:	mov	x19, sp
  4169b4:	str	w17, [x19, #72]
  4169b8:	mov	x19, sp
  4169bc:	str	w18, [x19, #80]
  4169c0:	bl	405828 <asprintf@plt>
  4169c4:	cmp	w0, #0x0
  4169c8:	cset	w8, ge  // ge = tcont
  4169cc:	tbnz	w8, #0, 416a04 <find_journal+0x2b8>
  4169d0:	mov	w8, wzr
  4169d4:	mov	w0, w8
  4169d8:	ldr	x1, [sp, #96]
  4169dc:	mov	w2, #0x1a0                 	// #416
  4169e0:	adrp	x3, 42b000 <_fini+0x13a8>
  4169e4:	add	x3, x3, #0xd53
  4169e8:	bl	405958 <log_oom_internal@plt>
  4169ec:	ldur	x9, [x29, #-16]
  4169f0:	ldr	x9, [x9, #160]
  4169f4:	stur	x9, [x29, #-8]
  4169f8:	mov	w8, #0x1                   	// #1
  4169fc:	stur	w8, [x29, #-68]
  416a00:	b	416b50 <find_journal+0x404>
  416a04:	ldur	x8, [x29, #-16]
  416a08:	ldr	x0, [x8, #168]
  416a0c:	bl	416bfc <ordered_hashmap_size>
  416a10:	cmp	w0, #0x400
  416a14:	b.cc	416a84 <find_journal+0x338>  // b.lo, b.ul, b.last
  416a18:	ldur	x8, [x29, #-16]
  416a1c:	ldr	x0, [x8, #168]
  416a20:	bl	414ba0 <ordered_hashmap_steal_first>
  416a24:	stur	x0, [x29, #-48]
  416a28:	ldur	x8, [x29, #-48]
  416a2c:	cmp	x8, #0x0
  416a30:	cset	w9, ne  // ne = any
  416a34:	mov	w10, #0x1                   	// #1
  416a38:	eor	w9, w9, #0x1
  416a3c:	eor	w9, w9, w10
  416a40:	eor	w9, w9, w10
  416a44:	and	w9, w9, #0x1
  416a48:	mov	w0, w9
  416a4c:	sxtw	x8, w0
  416a50:	cbz	x8, 416a78 <find_journal+0x32c>
  416a54:	mov	w8, wzr
  416a58:	mov	w0, w8
  416a5c:	adrp	x1, 42b000 <_fini+0x13a8>
  416a60:	add	x1, x1, #0x547
  416a64:	ldr	x2, [sp, #96]
  416a68:	mov	w3, #0x1a7                 	// #423
  416a6c:	adrp	x4, 42b000 <_fini+0x13a8>
  416a70:	add	x4, x4, #0xd28
  416a74:	bl	405718 <log_assert_failed_realm@plt>
  416a78:	ldur	x0, [x29, #-48]
  416a7c:	bl	405a58 <journal_file_close@plt>
  416a80:	b	416a04 <find_journal+0x2b8>
  416a84:	ldur	x0, [x29, #-16]
  416a88:	ldur	x2, [x29, #-32]
  416a8c:	ldur	x8, [x29, #-16]
  416a90:	ldrb	w9, [x8, #456]
  416a94:	ldur	x8, [x29, #-16]
  416a98:	add	x5, x8, #0x160
  416a9c:	mov	w10, #0x1                   	// #1
  416aa0:	and	w1, w10, #0x1
  416aa4:	mov	w3, #0x42                  	// #66
  416aa8:	and	w4, w9, #0x1
  416aac:	sub	x6, x29, #0x30
  416ab0:	bl	416c20 <open_journal>
  416ab4:	stur	w0, [x29, #-36]
  416ab8:	ldur	w9, [x29, #-36]
  416abc:	cmp	w9, #0x0
  416ac0:	cset	w9, ge  // ge = tcont
  416ac4:	tbnz	w9, #0, 416ae0 <find_journal+0x394>
  416ac8:	ldur	x8, [x29, #-16]
  416acc:	ldr	x8, [x8, #160]
  416ad0:	stur	x8, [x29, #-8]
  416ad4:	mov	w9, #0x1                   	// #1
  416ad8:	stur	w9, [x29, #-68]
  416adc:	b	416b50 <find_journal+0x404>
  416ae0:	ldur	x0, [x29, #-48]
  416ae4:	ldur	w1, [x29, #-20]
  416ae8:	bl	415d1c <server_add_acls>
  416aec:	ldur	x8, [x29, #-16]
  416af0:	ldr	x0, [x8, #168]
  416af4:	ldur	w9, [x29, #-20]
  416af8:	mov	w8, w9
  416afc:	add	x8, x8, #0x1
  416b00:	ldur	x2, [x29, #-48]
  416b04:	mov	x1, x8
  416b08:	bl	416ef0 <ordered_hashmap_put>
  416b0c:	stur	w0, [x29, #-36]
  416b10:	ldur	w9, [x29, #-36]
  416b14:	cmp	w9, #0x0
  416b18:	cset	w9, ge  // ge = tcont
  416b1c:	tbnz	w9, #0, 416b40 <find_journal+0x3f4>
  416b20:	ldur	x0, [x29, #-48]
  416b24:	bl	405a58 <journal_file_close@plt>
  416b28:	ldur	x8, [x29, #-16]
  416b2c:	ldr	x8, [x8, #160]
  416b30:	stur	x8, [x29, #-8]
  416b34:	mov	w9, #0x1                   	// #1
  416b38:	stur	w9, [x29, #-68]
  416b3c:	b	416b50 <find_journal+0x404>
  416b40:	ldur	x8, [x29, #-48]
  416b44:	stur	x8, [x29, #-8]
  416b48:	mov	w9, #0x1                   	// #1
  416b4c:	stur	w9, [x29, #-68]
  416b50:	sub	x0, x29, #0x20
  416b54:	bl	40a1d8 <freep>
  416b58:	ldur	x0, [x29, #-8]
  416b5c:	ldr	x19, [sp, #208]
  416b60:	ldp	x29, x30, [sp, #192]
  416b64:	add	sp, sp, #0xe0
  416b68:	ret

0000000000416b6c <IOVEC_TOTAL_SIZE>:
  416b6c:	sub	sp, sp, #0x20
  416b70:	str	x0, [sp, #24]
  416b74:	str	x1, [sp, #16]
  416b78:	str	xzr, [sp]
  416b7c:	str	xzr, [sp, #8]
  416b80:	ldr	x8, [sp, #8]
  416b84:	ldr	x9, [sp, #16]
  416b88:	cmp	x8, x9
  416b8c:	b.cs	416bc4 <IOVEC_TOTAL_SIZE+0x58>  // b.hs, b.nlast
  416b90:	ldr	x8, [sp, #24]
  416b94:	ldr	x9, [sp, #8]
  416b98:	mov	x10, #0x10                  	// #16
  416b9c:	mul	x9, x10, x9
  416ba0:	add	x8, x8, x9
  416ba4:	ldr	x8, [x8, #8]
  416ba8:	ldr	x9, [sp]
  416bac:	add	x8, x9, x8
  416bb0:	str	x8, [sp]
  416bb4:	ldr	x8, [sp, #8]
  416bb8:	add	x8, x8, #0x1
  416bbc:	str	x8, [sp, #8]
  416bc0:	b	416b80 <IOVEC_TOTAL_SIZE+0x14>
  416bc4:	ldr	x0, [sp]
  416bc8:	add	sp, sp, #0x20
  416bcc:	ret

0000000000416bd0 <ordered_hashmap_get>:
  416bd0:	sub	sp, sp, #0x20
  416bd4:	stp	x29, x30, [sp, #16]
  416bd8:	add	x29, sp, #0x10
  416bdc:	str	x0, [sp, #8]
  416be0:	str	x1, [sp]
  416be4:	ldr	x0, [sp, #8]
  416be8:	ldr	x1, [sp]
  416bec:	bl	405fd8 <internal_hashmap_get@plt>
  416bf0:	ldp	x29, x30, [sp, #16]
  416bf4:	add	sp, sp, #0x20
  416bf8:	ret

0000000000416bfc <ordered_hashmap_size>:
  416bfc:	sub	sp, sp, #0x20
  416c00:	stp	x29, x30, [sp, #16]
  416c04:	add	x29, sp, #0x10
  416c08:	str	x0, [sp, #8]
  416c0c:	ldr	x0, [sp, #8]
  416c10:	bl	405fa8 <internal_hashmap_size@plt>
  416c14:	ldp	x29, x30, [sp, #16]
  416c18:	add	sp, sp, #0x20
  416c1c:	ret

0000000000416c20 <open_journal>:
  416c20:	sub	sp, sp, #0xa0
  416c24:	stp	x29, x30, [sp, #144]
  416c28:	add	x29, sp, #0x90
  416c2c:	mov	x8, xzr
  416c30:	mov	w9, #0x1                   	// #1
  416c34:	adrp	x10, 42a000 <_fini+0x3a8>
  416c38:	add	x10, x10, #0x3c8
  416c3c:	add	x10, x10, #0x3
  416c40:	adrp	x11, 42b000 <_fini+0x13a8>
  416c44:	add	x11, x11, #0xdf7
  416c48:	stur	x0, [x29, #-16]
  416c4c:	and	w12, w1, w9
  416c50:	sturb	w12, [x29, #-17]
  416c54:	stur	x2, [x29, #-32]
  416c58:	stur	w3, [x29, #-36]
  416c5c:	and	w9, w4, w9
  416c60:	sturb	w9, [x29, #-37]
  416c64:	stur	x5, [x29, #-48]
  416c68:	stur	x6, [x29, #-56]
  416c6c:	stur	x8, [x29, #-64]
  416c70:	str	x10, [sp, #48]
  416c74:	str	x11, [sp, #40]
  416c78:	ldur	x8, [x29, #-16]
  416c7c:	cmp	x8, #0x0
  416c80:	cset	w9, ne  // ne = any
  416c84:	mov	w10, #0x1                   	// #1
  416c88:	eor	w9, w9, #0x1
  416c8c:	eor	w9, w9, w10
  416c90:	eor	w9, w9, w10
  416c94:	and	w9, w9, #0x1
  416c98:	mov	w0, w9
  416c9c:	sxtw	x8, w0
  416ca0:	cbz	x8, 416cc4 <open_journal+0xa4>
  416ca4:	mov	w8, wzr
  416ca8:	mov	w0, w8
  416cac:	adrp	x1, 429000 <journal_ratelimit_group_free+0x70>
  416cb0:	add	x1, x1, #0xdc8
  416cb4:	ldr	x2, [sp, #48]
  416cb8:	mov	w3, #0x105                 	// #261
  416cbc:	ldr	x4, [sp, #40]
  416cc0:	bl	405718 <log_assert_failed_realm@plt>
  416cc4:	ldur	x8, [x29, #-32]
  416cc8:	cmp	x8, #0x0
  416ccc:	cset	w9, ne  // ne = any
  416cd0:	mov	w10, #0x1                   	// #1
  416cd4:	eor	w9, w9, #0x1
  416cd8:	eor	w9, w9, w10
  416cdc:	eor	w9, w9, w10
  416ce0:	and	w9, w9, #0x1
  416ce4:	mov	w0, w9
  416ce8:	sxtw	x8, w0
  416cec:	cbz	x8, 416d10 <open_journal+0xf0>
  416cf0:	mov	w8, wzr
  416cf4:	mov	w0, w8
  416cf8:	adrp	x1, 42b000 <_fini+0x13a8>
  416cfc:	add	x1, x1, #0xe55
  416d00:	ldr	x2, [sp, #48]
  416d04:	mov	w3, #0x106                 	// #262
  416d08:	ldr	x4, [sp, #40]
  416d0c:	bl	405718 <log_assert_failed_realm@plt>
  416d10:	ldur	x8, [x29, #-56]
  416d14:	cmp	x8, #0x0
  416d18:	cset	w9, ne  // ne = any
  416d1c:	mov	w10, #0x1                   	// #1
  416d20:	eor	w9, w9, #0x1
  416d24:	eor	w9, w9, w10
  416d28:	eor	w9, w9, w10
  416d2c:	and	w9, w9, #0x1
  416d30:	mov	w0, w9
  416d34:	sxtw	x8, w0
  416d38:	cbz	x8, 416d5c <open_journal+0x13c>
  416d3c:	mov	w8, wzr
  416d40:	mov	w0, w8
  416d44:	adrp	x1, 42b000 <_fini+0x13a8>
  416d48:	add	x1, x1, #0xe5b
  416d4c:	ldr	x2, [sp, #48]
  416d50:	mov	w3, #0x107                 	// #263
  416d54:	ldr	x4, [sp, #40]
  416d58:	bl	405718 <log_assert_failed_realm@plt>
  416d5c:	ldurb	w8, [x29, #-17]
  416d60:	tbnz	w8, #0, 416d68 <open_journal+0x148>
  416d64:	b	416dd0 <open_journal+0x1b0>
  416d68:	ldur	x0, [x29, #-32]
  416d6c:	ldur	w1, [x29, #-36]
  416d70:	ldur	x8, [x29, #-16]
  416d74:	ldrb	w9, [x8, #440]
  416d78:	ldur	x8, [x29, #-16]
  416d7c:	ldr	x4, [x8, #448]
  416d80:	ldurb	w10, [x29, #-37]
  416d84:	ldur	x6, [x29, #-48]
  416d88:	ldur	x8, [x29, #-16]
  416d8c:	ldr	x7, [x8, #568]
  416d90:	ldur	x8, [x29, #-16]
  416d94:	ldr	x8, [x8, #576]
  416d98:	mov	w2, #0x1a0                 	// #416
  416d9c:	and	w3, w9, #0x1
  416da0:	and	w5, w10, #0x1
  416da4:	mov	x11, sp
  416da8:	str	x8, [x11]
  416dac:	mov	x8, sp
  416db0:	mov	x11, xzr
  416db4:	str	x11, [x8, #8]
  416db8:	mov	x8, sp
  416dbc:	sub	x11, x29, #0x40
  416dc0:	str	x11, [x8, #16]
  416dc4:	bl	405fe8 <journal_file_open_reliably@plt>
  416dc8:	stur	w0, [x29, #-68]
  416dcc:	b	416e40 <open_journal+0x220>
  416dd0:	ldur	x1, [x29, #-32]
  416dd4:	ldur	w2, [x29, #-36]
  416dd8:	ldur	x8, [x29, #-16]
  416ddc:	ldrb	w9, [x8, #440]
  416de0:	ldur	x8, [x29, #-16]
  416de4:	ldr	x5, [x8, #448]
  416de8:	ldurb	w10, [x29, #-37]
  416dec:	ldur	x7, [x29, #-48]
  416df0:	ldur	x8, [x29, #-16]
  416df4:	ldr	x8, [x8, #568]
  416df8:	ldur	x11, [x29, #-16]
  416dfc:	ldr	x11, [x11, #576]
  416e00:	mov	w0, #0xffffffff            	// #-1
  416e04:	mov	w3, #0x1a0                 	// #416
  416e08:	and	w4, w9, #0x1
  416e0c:	and	w6, w10, #0x1
  416e10:	mov	x12, sp
  416e14:	str	x8, [x12]
  416e18:	mov	x8, sp
  416e1c:	str	x11, [x8, #8]
  416e20:	mov	x8, sp
  416e24:	mov	x11, xzr
  416e28:	str	x11, [x8, #16]
  416e2c:	mov	x8, sp
  416e30:	sub	x11, x29, #0x40
  416e34:	str	x11, [x8, #24]
  416e38:	bl	405998 <journal_file_open@plt>
  416e3c:	stur	w0, [x29, #-68]
  416e40:	ldur	w8, [x29, #-68]
  416e44:	cmp	w8, #0x0
  416e48:	cset	w8, ge  // ge = tcont
  416e4c:	tbnz	w8, #0, 416e64 <open_journal+0x244>
  416e50:	ldur	w8, [x29, #-68]
  416e54:	stur	w8, [x29, #-4]
  416e58:	mov	w8, #0x1                   	// #1
  416e5c:	str	w8, [sp, #72]
  416e60:	b	416ed8 <open_journal+0x2b8>
  416e64:	ldur	x0, [x29, #-64]
  416e68:	ldur	x8, [x29, #-16]
  416e6c:	ldr	x1, [x8, #32]
  416e70:	mov	x2, #0xd090                	// #53392
  416e74:	movk	x2, #0x3, lsl #16
  416e78:	bl	405ff8 <journal_file_enable_post_change_timer@plt>
  416e7c:	stur	w0, [x29, #-68]
  416e80:	ldur	w9, [x29, #-68]
  416e84:	cmp	w9, #0x0
  416e88:	cset	w9, ge  // ge = tcont
  416e8c:	tbnz	w9, #0, 416ea4 <open_journal+0x284>
  416e90:	ldur	w8, [x29, #-68]
  416e94:	stur	w8, [x29, #-4]
  416e98:	mov	w8, #0x1                   	// #1
  416e9c:	str	w8, [sp, #72]
  416ea0:	b	416ed8 <open_journal+0x2b8>
  416ea4:	ldur	x8, [x29, #-64]
  416ea8:	str	x8, [sp, #64]
  416eac:	mov	x8, xzr
  416eb0:	stur	x8, [x29, #-64]
  416eb4:	ldr	x8, [sp, #64]
  416eb8:	str	x8, [sp, #56]
  416ebc:	ldr	x8, [sp, #56]
  416ec0:	ldur	x9, [x29, #-56]
  416ec4:	str	x8, [x9]
  416ec8:	ldur	w10, [x29, #-68]
  416ecc:	stur	w10, [x29, #-4]
  416ed0:	mov	w10, #0x1                   	// #1
  416ed4:	str	w10, [sp, #72]
  416ed8:	sub	x0, x29, #0x40
  416edc:	bl	416f24 <journal_file_closep>
  416ee0:	ldur	w0, [x29, #-4]
  416ee4:	ldp	x29, x30, [sp, #144]
  416ee8:	add	sp, sp, #0xa0
  416eec:	ret

0000000000416ef0 <ordered_hashmap_put>:
  416ef0:	sub	sp, sp, #0x30
  416ef4:	stp	x29, x30, [sp, #32]
  416ef8:	add	x29, sp, #0x20
  416efc:	stur	x0, [x29, #-8]
  416f00:	str	x1, [sp, #16]
  416f04:	str	x2, [sp, #8]
  416f08:	ldur	x0, [x29, #-8]
  416f0c:	ldr	x1, [sp, #16]
  416f10:	ldr	x2, [sp, #8]
  416f14:	bl	406008 <hashmap_put@plt>
  416f18:	ldp	x29, x30, [sp, #32]
  416f1c:	add	sp, sp, #0x30
  416f20:	ret

0000000000416f24 <journal_file_closep>:
  416f24:	sub	sp, sp, #0x20
  416f28:	stp	x29, x30, [sp, #16]
  416f2c:	add	x29, sp, #0x10
  416f30:	str	x0, [sp, #8]
  416f34:	ldr	x8, [sp, #8]
  416f38:	ldr	x8, [x8]
  416f3c:	cbz	x8, 416f4c <journal_file_closep+0x28>
  416f40:	ldr	x8, [sp, #8]
  416f44:	ldr	x0, [x8]
  416f48:	bl	405a58 <journal_file_close@plt>
  416f4c:	ldp	x29, x30, [sp, #16]
  416f50:	add	sp, sp, #0x20
  416f54:	ret

0000000000416f58 <patch_min_use>:
  416f58:	sub	sp, sp, #0x40
  416f5c:	stp	x29, x30, [sp, #48]
  416f60:	add	x29, sp, #0x30
  416f64:	adrp	x8, 42a000 <_fini+0x3a8>
  416f68:	add	x8, x8, #0x3c8
  416f6c:	add	x2, x8, #0x3
  416f70:	stur	x0, [x29, #-8]
  416f74:	str	x2, [sp, #8]
  416f78:	ldur	x8, [x29, #-8]
  416f7c:	cmp	x8, #0x0
  416f80:	cset	w9, ne  // ne = any
  416f84:	mov	w10, #0x1                   	// #1
  416f88:	eor	w9, w9, #0x1
  416f8c:	eor	w9, w9, w10
  416f90:	eor	w9, w9, w10
  416f94:	and	w9, w9, #0x1
  416f98:	mov	w0, w9
  416f9c:	sxtw	x8, w0
  416fa0:	cbz	x8, 416fc8 <patch_min_use+0x70>
  416fa4:	mov	w8, wzr
  416fa8:	mov	w0, w8
  416fac:	adrp	x1, 42b000 <_fini+0x13a8>
  416fb0:	add	x1, x1, #0x737
  416fb4:	ldr	x2, [sp, #8]
  416fb8:	mov	w3, #0x9b                  	// #155
  416fbc:	adrp	x4, 42b000 <_fini+0x13a8>
  416fc0:	add	x4, x4, #0xf49
  416fc4:	bl	405718 <log_assert_failed_realm@plt>
  416fc8:	ldur	x8, [x29, #-8]
  416fcc:	ldr	x8, [x8, #40]
  416fd0:	stur	x8, [x29, #-16]
  416fd4:	ldur	x8, [x29, #-8]
  416fd8:	ldr	x8, [x8, #88]
  416fdc:	str	x8, [sp, #24]
  416fe0:	ldur	x8, [x29, #-16]
  416fe4:	ldr	x9, [sp, #24]
  416fe8:	cmp	x8, x9
  416fec:	b.ls	416ffc <patch_min_use+0xa4>  // b.plast
  416ff0:	ldur	x8, [x29, #-16]
  416ff4:	str	x8, [sp]
  416ff8:	b	417004 <patch_min_use+0xac>
  416ffc:	ldr	x8, [sp, #24]
  417000:	str	x8, [sp]
  417004:	ldr	x8, [sp]
  417008:	str	x8, [sp, #16]
  41700c:	ldr	x8, [sp, #16]
  417010:	ldur	x9, [x29, #-8]
  417014:	str	x8, [x9, #40]
  417018:	ldp	x29, x30, [sp, #48]
  41701c:	add	sp, sp, #0x40
  417020:	ret

0000000000417024 <proc_cmdline_value_missing>:
  417024:	sub	sp, sp, #0x50
  417028:	stp	x29, x30, [sp, #64]
  41702c:	add	x29, sp, #0x40
  417030:	adrp	x8, 42c000 <_fini+0x23a8>
  417034:	add	x8, x8, #0x55f
  417038:	add	x2, x8, #0x3
  41703c:	stur	x0, [x29, #-16]
  417040:	stur	x1, [x29, #-24]
  417044:	ldur	x8, [x29, #-24]
  417048:	str	x2, [sp, #16]
  41704c:	cbnz	x8, 4170dc <proc_cmdline_value_missing+0xb8>
  417050:	mov	w8, #0x4                   	// #4
  417054:	stur	w8, [x29, #-28]
  417058:	str	wzr, [sp, #32]
  41705c:	str	wzr, [sp, #28]
  417060:	ldr	w0, [sp, #28]
  417064:	bl	405638 <log_get_max_level_realm@plt>
  417068:	ldur	w8, [x29, #-28]
  41706c:	and	w8, w8, #0x7
  417070:	cmp	w0, w8
  417074:	b.lt	4170b0 <proc_cmdline_value_missing+0x8c>  // b.tstop
  417078:	ldr	w8, [sp, #28]
  41707c:	ldur	w9, [x29, #-28]
  417080:	orr	w0, w9, w8, lsl #10
  417084:	ldr	w1, [sp, #32]
  417088:	ldur	x6, [x29, #-16]
  41708c:	ldr	x2, [sp, #16]
  417090:	mov	w3, #0x21                  	// #33
  417094:	adrp	x4, 42c000 <_fini+0x23a8>
  417098:	add	x4, x4, #0x57b
  41709c:	adrp	x5, 42c000 <_fini+0x23a8>
  4170a0:	add	x5, x5, #0x596
  4170a4:	bl	405648 <log_internal_realm@plt>
  4170a8:	str	w0, [sp, #12]
  4170ac:	b	4170c4 <proc_cmdline_value_missing+0xa0>
  4170b0:	ldr	w0, [sp, #32]
  4170b4:	bl	405658 <abs@plt>
  4170b8:	mov	w8, wzr
  4170bc:	subs	w8, w8, w0, uxtb
  4170c0:	str	w8, [sp, #12]
  4170c4:	ldr	w8, [sp, #12]
  4170c8:	str	w8, [sp, #24]
  4170cc:	mov	w8, #0x1                   	// #1
  4170d0:	and	w8, w8, #0x1
  4170d4:	sturb	w8, [x29, #-1]
  4170d8:	b	4170e8 <proc_cmdline_value_missing+0xc4>
  4170dc:	mov	w8, wzr
  4170e0:	and	w8, w8, #0x1
  4170e4:	sturb	w8, [x29, #-1]
  4170e8:	ldurb	w8, [x29, #-1]
  4170ec:	and	w0, w8, #0x1
  4170f0:	ldp	x29, x30, [sp, #64]
  4170f4:	add	sp, sp, #0x50
  4170f8:	ret

00000000004170fc <vl_method_synchronize>:
  4170fc:	sub	sp, sp, #0xd0
  417100:	stp	x29, x30, [sp, #192]
  417104:	add	x29, sp, #0xc0
  417108:	mov	x8, xzr
  41710c:	adrp	x9, 42a000 <_fini+0x3a8>
  417110:	add	x9, x9, #0x3c8
  417114:	add	x9, x9, #0x3
  417118:	adrp	x10, 42c000 <_fini+0x23a8>
  41711c:	add	x10, x10, #0x6ec
  417120:	stur	x0, [x29, #-16]
  417124:	stur	x1, [x29, #-24]
  417128:	stur	w2, [x29, #-28]
  41712c:	stur	x3, [x29, #-40]
  417130:	stur	x8, [x29, #-48]
  417134:	ldur	x8, [x29, #-40]
  417138:	stur	x8, [x29, #-56]
  41713c:	str	x9, [sp, #40]
  417140:	str	x10, [sp, #32]
  417144:	ldur	x8, [x29, #-16]
  417148:	cmp	x8, #0x0
  41714c:	cset	w9, ne  // ne = any
  417150:	mov	w10, #0x1                   	// #1
  417154:	eor	w9, w9, #0x1
  417158:	eor	w9, w9, w10
  41715c:	eor	w9, w9, w10
  417160:	and	w9, w9, #0x1
  417164:	mov	w0, w9
  417168:	sxtw	x8, w0
  41716c:	cbz	x8, 417194 <vl_method_synchronize+0x98>
  417170:	mov	w8, wzr
  417174:	mov	w0, w8
  417178:	adrp	x1, 42c000 <_fini+0x23a8>
  41717c:	add	x1, x1, #0x697
  417180:	ldr	x2, [sp, #40]
  417184:	mov	w3, #0x757                 	// #1879
  417188:	adrp	x4, 42c000 <_fini+0x23a8>
  41718c:	add	x4, x4, #0x69c
  417190:	bl	405718 <log_assert_failed_realm@plt>
  417194:	ldur	x8, [x29, #-56]
  417198:	cmp	x8, #0x0
  41719c:	cset	w9, ne  // ne = any
  4171a0:	mov	w10, #0x1                   	// #1
  4171a4:	eor	w9, w9, #0x1
  4171a8:	eor	w9, w9, w10
  4171ac:	eor	w9, w9, w10
  4171b0:	and	w9, w9, #0x1
  4171b4:	mov	w0, w9
  4171b8:	sxtw	x8, w0
  4171bc:	cbz	x8, 4171e4 <vl_method_synchronize+0xe8>
  4171c0:	mov	w8, wzr
  4171c4:	mov	w0, w8
  4171c8:	adrp	x1, 429000 <journal_ratelimit_group_free+0x70>
  4171cc:	add	x1, x1, #0xdc8
  4171d0:	ldr	x2, [sp, #40]
  4171d4:	mov	w3, #0x758                 	// #1880
  4171d8:	adrp	x4, 42c000 <_fini+0x23a8>
  4171dc:	add	x4, x4, #0x69c
  4171e0:	bl	405718 <log_assert_failed_realm@plt>
  4171e4:	ldur	x0, [x29, #-24]
  4171e8:	bl	406018 <json_variant_elements@plt>
  4171ec:	cmp	x0, #0x0
  4171f0:	cset	w8, ls  // ls = plast
  4171f4:	tbnz	w8, #0, 417214 <vl_method_synchronize+0x118>
  4171f8:	ldur	x0, [x29, #-16]
  4171fc:	ldur	x1, [x29, #-24]
  417200:	bl	406028 <varlink_error_invalid_parameter@plt>
  417204:	stur	w0, [x29, #-4]
  417208:	mov	w8, #0x1                   	// #1
  41720c:	stur	w8, [x29, #-64]
  417210:	b	417574 <vl_method_synchronize+0x478>
  417214:	mov	w8, #0x6                   	// #6
  417218:	stur	w8, [x29, #-68]
  41721c:	stur	wzr, [x29, #-72]
  417220:	stur	wzr, [x29, #-76]
  417224:	ldur	w0, [x29, #-76]
  417228:	bl	405638 <log_get_max_level_realm@plt>
  41722c:	ldur	w8, [x29, #-68]
  417230:	and	w8, w8, #0x7
  417234:	cmp	w0, w8
  417238:	b.lt	41726c <vl_method_synchronize+0x170>  // b.tstop
  41723c:	ldur	w8, [x29, #-76]
  417240:	ldur	w9, [x29, #-68]
  417244:	orr	w0, w9, w8, lsl #10
  417248:	ldur	w1, [x29, #-72]
  41724c:	ldr	x2, [sp, #40]
  417250:	mov	w3, #0x75d                 	// #1885
  417254:	ldr	x4, [sp, #32]
  417258:	adrp	x5, 42c000 <_fini+0x23a8>
  41725c:	add	x5, x5, #0x702
  417260:	bl	405648 <log_internal_realm@plt>
  417264:	str	w0, [sp, #28]
  417268:	b	417280 <vl_method_synchronize+0x184>
  41726c:	ldur	w0, [x29, #-72]
  417270:	bl	405658 <abs@plt>
  417274:	mov	w8, wzr
  417278:	subs	w8, w8, w0, uxtb
  41727c:	str	w8, [sp, #28]
  417280:	ldr	w8, [sp, #28]
  417284:	stur	w8, [x29, #-80]
  417288:	ldur	x9, [x29, #-56]
  41728c:	ldr	x0, [x9, #32]
  417290:	ldur	x3, [x29, #-16]
  417294:	sub	x1, x29, #0x30
  417298:	adrp	x2, 417000 <patch_min_use+0xa8>
  41729c:	add	x2, x2, #0xaa4
  4172a0:	bl	406038 <sd_event_add_defer@plt>
  4172a4:	stur	w0, [x29, #-60]
  4172a8:	ldur	w8, [x29, #-60]
  4172ac:	cmp	w8, #0x0
  4172b0:	cset	w8, ge  // ge = tcont
  4172b4:	tbnz	w8, #0, 417344 <vl_method_synchronize+0x248>
  4172b8:	mov	w8, #0x3                   	// #3
  4172bc:	stur	w8, [x29, #-84]
  4172c0:	ldur	w8, [x29, #-60]
  4172c4:	stur	w8, [x29, #-88]
  4172c8:	stur	wzr, [x29, #-92]
  4172cc:	ldur	w0, [x29, #-92]
  4172d0:	bl	405638 <log_get_max_level_realm@plt>
  4172d4:	ldur	w8, [x29, #-84]
  4172d8:	and	w8, w8, #0x7
  4172dc:	cmp	w0, w8
  4172e0:	b.lt	417314 <vl_method_synchronize+0x218>  // b.tstop
  4172e4:	ldur	w8, [x29, #-92]
  4172e8:	ldur	w9, [x29, #-84]
  4172ec:	orr	w0, w9, w8, lsl #10
  4172f0:	ldur	w1, [x29, #-88]
  4172f4:	ldr	x2, [sp, #40]
  4172f8:	mov	w3, #0x765                 	// #1893
  4172fc:	ldr	x4, [sp, #32]
  417300:	adrp	x5, 42c000 <_fini+0x23a8>
  417304:	add	x5, x5, #0x72d
  417308:	bl	405648 <log_internal_realm@plt>
  41730c:	str	w0, [sp, #24]
  417310:	b	417328 <vl_method_synchronize+0x22c>
  417314:	ldur	w0, [x29, #-88]
  417318:	bl	405658 <abs@plt>
  41731c:	mov	w8, wzr
  417320:	subs	w8, w8, w0, uxtb
  417324:	str	w8, [sp, #24]
  417328:	ldr	w8, [sp, #24]
  41732c:	str	w8, [sp, #96]
  417330:	ldr	w8, [sp, #96]
  417334:	stur	w8, [x29, #-4]
  417338:	mov	w8, #0x1                   	// #1
  41733c:	stur	w8, [x29, #-64]
  417340:	b	417574 <vl_method_synchronize+0x478>
  417344:	ldur	x0, [x29, #-48]
  417348:	adrp	x1, 417000 <patch_min_use+0xa8>
  41734c:	add	x1, x1, #0xc50
  417350:	bl	406048 <sd_event_source_set_destroy_callback@plt>
  417354:	stur	w0, [x29, #-60]
  417358:	ldur	w8, [x29, #-60]
  41735c:	cmp	w8, #0x0
  417360:	cset	w8, ge  // ge = tcont
  417364:	tbnz	w8, #0, 4173f4 <vl_method_synchronize+0x2f8>
  417368:	mov	w8, #0x3                   	// #3
  41736c:	str	w8, [sp, #92]
  417370:	ldur	w8, [x29, #-60]
  417374:	str	w8, [sp, #88]
  417378:	str	wzr, [sp, #84]
  41737c:	ldr	w0, [sp, #84]
  417380:	bl	405638 <log_get_max_level_realm@plt>
  417384:	ldr	w8, [sp, #92]
  417388:	and	w8, w8, #0x7
  41738c:	cmp	w0, w8
  417390:	b.lt	4173c4 <vl_method_synchronize+0x2c8>  // b.tstop
  417394:	ldr	w8, [sp, #84]
  417398:	ldr	w9, [sp, #92]
  41739c:	orr	w0, w9, w8, lsl #10
  4173a0:	ldr	w1, [sp, #88]
  4173a4:	ldr	x2, [sp, #40]
  4173a8:	mov	w3, #0x769                 	// #1897
  4173ac:	ldr	x4, [sp, #32]
  4173b0:	adrp	x5, 42c000 <_fini+0x23a8>
  4173b4:	add	x5, x5, #0x757
  4173b8:	bl	405648 <log_internal_realm@plt>
  4173bc:	str	w0, [sp, #20]
  4173c0:	b	4173d8 <vl_method_synchronize+0x2dc>
  4173c4:	ldr	w0, [sp, #88]
  4173c8:	bl	405658 <abs@plt>
  4173cc:	mov	w8, wzr
  4173d0:	subs	w8, w8, w0, uxtb
  4173d4:	str	w8, [sp, #20]
  4173d8:	ldr	w8, [sp, #20]
  4173dc:	str	w8, [sp, #80]
  4173e0:	ldr	w8, [sp, #80]
  4173e4:	stur	w8, [x29, #-4]
  4173e8:	mov	w8, #0x1                   	// #1
  4173ec:	stur	w8, [x29, #-64]
  4173f0:	b	417574 <vl_method_synchronize+0x478>
  4173f4:	ldur	x0, [x29, #-16]
  4173f8:	bl	406058 <varlink_ref@plt>
  4173fc:	ldur	x8, [x29, #-48]
  417400:	mov	x0, x8
  417404:	mov	x1, #0xf                   	// #15
  417408:	bl	4058b8 <sd_event_source_set_priority@plt>
  41740c:	stur	w0, [x29, #-60]
  417410:	ldur	w9, [x29, #-60]
  417414:	cmp	w9, #0x0
  417418:	cset	w9, ge  // ge = tcont
  41741c:	tbnz	w9, #0, 4174ac <vl_method_synchronize+0x3b0>
  417420:	mov	w8, #0x3                   	// #3
  417424:	str	w8, [sp, #76]
  417428:	ldur	w8, [x29, #-60]
  41742c:	str	w8, [sp, #72]
  417430:	str	wzr, [sp, #68]
  417434:	ldr	w0, [sp, #68]
  417438:	bl	405638 <log_get_max_level_realm@plt>
  41743c:	ldr	w8, [sp, #76]
  417440:	and	w8, w8, #0x7
  417444:	cmp	w0, w8
  417448:	b.lt	41747c <vl_method_synchronize+0x380>  // b.tstop
  41744c:	ldr	w8, [sp, #68]
  417450:	ldr	w9, [sp, #76]
  417454:	orr	w0, w9, w8, lsl #10
  417458:	ldr	w1, [sp, #72]
  41745c:	ldr	x2, [sp, #40]
  417460:	mov	w3, #0x76f                 	// #1903
  417464:	ldr	x4, [sp, #32]
  417468:	adrp	x5, 42c000 <_fini+0x23a8>
  41746c:	add	x5, x5, #0x787
  417470:	bl	405648 <log_internal_realm@plt>
  417474:	str	w0, [sp, #16]
  417478:	b	417490 <vl_method_synchronize+0x394>
  41747c:	ldr	w0, [sp, #72]
  417480:	bl	405658 <abs@plt>
  417484:	mov	w8, wzr
  417488:	subs	w8, w8, w0, uxtb
  41748c:	str	w8, [sp, #16]
  417490:	ldr	w8, [sp, #16]
  417494:	str	w8, [sp, #64]
  417498:	ldr	w8, [sp, #64]
  41749c:	stur	w8, [x29, #-4]
  4174a0:	mov	w8, #0x1                   	// #1
  4174a4:	stur	w8, [x29, #-64]
  4174a8:	b	417574 <vl_method_synchronize+0x478>
  4174ac:	ldur	x0, [x29, #-48]
  4174b0:	mov	w1, #0x1                   	// #1
  4174b4:	bl	406068 <sd_event_source_set_floating@plt>
  4174b8:	stur	w0, [x29, #-60]
  4174bc:	ldur	w8, [x29, #-60]
  4174c0:	cmp	w8, #0x0
  4174c4:	cset	w8, ge  // ge = tcont
  4174c8:	tbnz	w8, #0, 417558 <vl_method_synchronize+0x45c>
  4174cc:	mov	w8, #0x3                   	// #3
  4174d0:	str	w8, [sp, #60]
  4174d4:	ldur	w8, [x29, #-60]
  4174d8:	str	w8, [sp, #56]
  4174dc:	str	wzr, [sp, #52]
  4174e0:	ldr	w0, [sp, #52]
  4174e4:	bl	405638 <log_get_max_level_realm@plt>
  4174e8:	ldr	w8, [sp, #60]
  4174ec:	and	w8, w8, #0x7
  4174f0:	cmp	w0, w8
  4174f4:	b.lt	417528 <vl_method_synchronize+0x42c>  // b.tstop
  4174f8:	ldr	w8, [sp, #52]
  4174fc:	ldr	w9, [sp, #60]
  417500:	orr	w0, w9, w8, lsl #10
  417504:	ldr	w1, [sp, #56]
  417508:	ldr	x2, [sp, #40]
  41750c:	mov	w3, #0x775                 	// #1909
  417510:	ldr	x4, [sp, #32]
  417514:	adrp	x5, 42c000 <_fini+0x23a8>
  417518:	add	x5, x5, #0x7b5
  41751c:	bl	405648 <log_internal_realm@plt>
  417520:	str	w0, [sp, #12]
  417524:	b	41753c <vl_method_synchronize+0x440>
  417528:	ldr	w0, [sp, #56]
  41752c:	bl	405658 <abs@plt>
  417530:	mov	w8, wzr
  417534:	subs	w8, w8, w0, uxtb
  417538:	str	w8, [sp, #12]
  41753c:	ldr	w8, [sp, #12]
  417540:	str	w8, [sp, #48]
  417544:	ldr	w8, [sp, #48]
  417548:	stur	w8, [x29, #-4]
  41754c:	mov	w8, #0x1                   	// #1
  417550:	stur	w8, [x29, #-64]
  417554:	b	417574 <vl_method_synchronize+0x478>
  417558:	ldur	x0, [x29, #-48]
  41755c:	adrp	x1, 42c000 <_fini+0x23a8>
  417560:	add	x1, x1, #0x7e1
  417564:	bl	406078 <sd_event_source_set_description@plt>
  417568:	stur	wzr, [x29, #-4]
  41756c:	mov	w8, #0x1                   	// #1
  417570:	stur	w8, [x29, #-64]
  417574:	sub	x0, x29, #0x30
  417578:	bl	417a70 <sd_event_source_unrefp>
  41757c:	ldur	w0, [x29, #-4]
  417580:	ldp	x29, x30, [sp, #192]
  417584:	add	sp, sp, #0xd0
  417588:	ret

000000000041758c <vl_method_rotate>:
  41758c:	sub	sp, sp, #0x60
  417590:	stp	x29, x30, [sp, #80]
  417594:	add	x29, sp, #0x50
  417598:	adrp	x8, 42a000 <_fini+0x3a8>
  41759c:	add	x8, x8, #0x3c8
  4175a0:	add	x8, x8, #0x3
  4175a4:	stur	x0, [x29, #-16]
  4175a8:	stur	x1, [x29, #-24]
  4175ac:	stur	w2, [x29, #-28]
  4175b0:	str	x3, [sp, #40]
  4175b4:	ldr	x9, [sp, #40]
  4175b8:	str	x9, [sp, #32]
  4175bc:	str	x8, [sp, #8]
  4175c0:	ldur	x8, [x29, #-16]
  4175c4:	cmp	x8, #0x0
  4175c8:	cset	w9, ne  // ne = any
  4175cc:	mov	w10, #0x1                   	// #1
  4175d0:	eor	w9, w9, #0x1
  4175d4:	eor	w9, w9, w10
  4175d8:	eor	w9, w9, w10
  4175dc:	and	w9, w9, #0x1
  4175e0:	mov	w0, w9
  4175e4:	sxtw	x8, w0
  4175e8:	cbz	x8, 417610 <vl_method_rotate+0x84>
  4175ec:	mov	w8, wzr
  4175f0:	mov	w0, w8
  4175f4:	adrp	x1, 42c000 <_fini+0x23a8>
  4175f8:	add	x1, x1, #0x697
  4175fc:	ldr	x2, [sp, #8]
  417600:	mov	w3, #0x77f                 	// #1919
  417604:	adrp	x4, 42c000 <_fini+0x23a8>
  417608:	add	x4, x4, #0x914
  41760c:	bl	405718 <log_assert_failed_realm@plt>
  417610:	ldr	x8, [sp, #32]
  417614:	cmp	x8, #0x0
  417618:	cset	w9, ne  // ne = any
  41761c:	mov	w10, #0x1                   	// #1
  417620:	eor	w9, w9, #0x1
  417624:	eor	w9, w9, w10
  417628:	eor	w9, w9, w10
  41762c:	and	w9, w9, #0x1
  417630:	mov	w0, w9
  417634:	sxtw	x8, w0
  417638:	cbz	x8, 417660 <vl_method_rotate+0xd4>
  41763c:	mov	w8, wzr
  417640:	mov	w0, w8
  417644:	adrp	x1, 429000 <journal_ratelimit_group_free+0x70>
  417648:	add	x1, x1, #0xdc8
  41764c:	ldr	x2, [sp, #8]
  417650:	mov	w3, #0x780                 	// #1920
  417654:	adrp	x4, 42c000 <_fini+0x23a8>
  417658:	add	x4, x4, #0x914
  41765c:	bl	405718 <log_assert_failed_realm@plt>
  417660:	ldur	x0, [x29, #-24]
  417664:	bl	406018 <json_variant_elements@plt>
  417668:	cmp	x0, #0x0
  41766c:	cset	w8, ls  // ls = plast
  417670:	tbnz	w8, #0, 417688 <vl_method_rotate+0xfc>
  417674:	ldur	x0, [x29, #-16]
  417678:	ldur	x1, [x29, #-24]
  41767c:	bl	406028 <varlink_error_invalid_parameter@plt>
  417680:	stur	w0, [x29, #-4]
  417684:	b	41771c <vl_method_rotate+0x190>
  417688:	mov	w8, #0x6                   	// #6
  41768c:	str	w8, [sp, #28]
  417690:	str	wzr, [sp, #24]
  417694:	str	wzr, [sp, #20]
  417698:	ldr	w0, [sp, #20]
  41769c:	bl	405638 <log_get_max_level_realm@plt>
  4176a0:	ldr	w8, [sp, #28]
  4176a4:	and	w8, w8, #0x7
  4176a8:	cmp	w0, w8
  4176ac:	b.lt	4176e4 <vl_method_rotate+0x158>  // b.tstop
  4176b0:	ldr	w8, [sp, #20]
  4176b4:	ldr	w9, [sp, #28]
  4176b8:	orr	w0, w9, w8, lsl #10
  4176bc:	ldr	w1, [sp, #24]
  4176c0:	ldr	x2, [sp, #8]
  4176c4:	mov	w3, #0x785                 	// #1925
  4176c8:	adrp	x4, 42c000 <_fini+0x23a8>
  4176cc:	add	x4, x4, #0x95f
  4176d0:	adrp	x5, 42c000 <_fini+0x23a8>
  4176d4:	add	x5, x5, #0x702
  4176d8:	bl	405648 <log_internal_realm@plt>
  4176dc:	str	w0, [sp, #4]
  4176e0:	b	4176f8 <vl_method_rotate+0x16c>
  4176e4:	ldr	w0, [sp, #24]
  4176e8:	bl	405658 <abs@plt>
  4176ec:	mov	w8, wzr
  4176f0:	subs	w8, w8, w0, uxtb
  4176f4:	str	w8, [sp, #4]
  4176f8:	ldr	w8, [sp, #4]
  4176fc:	str	w8, [sp, #16]
  417700:	ldr	x0, [sp, #32]
  417704:	bl	417da8 <server_full_rotate>
  417708:	ldur	x0, [x29, #-16]
  41770c:	mov	x9, xzr
  417710:	mov	x1, x9
  417714:	bl	406088 <varlink_reply@plt>
  417718:	stur	w0, [x29, #-4]
  41771c:	ldur	w0, [x29, #-4]
  417720:	ldp	x29, x30, [sp, #80]
  417724:	add	sp, sp, #0x60
  417728:	ret

000000000041772c <vl_method_flush_to_var>:
  41772c:	sub	sp, sp, #0x60
  417730:	stp	x29, x30, [sp, #80]
  417734:	add	x29, sp, #0x50
  417738:	adrp	x8, 42a000 <_fini+0x3a8>
  41773c:	add	x8, x8, #0x3c8
  417740:	add	x8, x8, #0x3
  417744:	stur	x0, [x29, #-16]
  417748:	stur	x1, [x29, #-24]
  41774c:	stur	w2, [x29, #-28]
  417750:	str	x3, [sp, #40]
  417754:	ldr	x9, [sp, #40]
  417758:	str	x9, [sp, #32]
  41775c:	str	x8, [sp, #8]
  417760:	ldur	x8, [x29, #-16]
  417764:	cmp	x8, #0x0
  417768:	cset	w9, ne  // ne = any
  41776c:	mov	w10, #0x1                   	// #1
  417770:	eor	w9, w9, #0x1
  417774:	eor	w9, w9, w10
  417778:	eor	w9, w9, w10
  41777c:	and	w9, w9, #0x1
  417780:	mov	w0, w9
  417784:	sxtw	x8, w0
  417788:	cbz	x8, 4177b0 <vl_method_flush_to_var+0x84>
  41778c:	mov	w8, wzr
  417790:	mov	w0, w8
  417794:	adrp	x1, 42c000 <_fini+0x23a8>
  417798:	add	x1, x1, #0x697
  41779c:	ldr	x2, [sp, #8]
  4177a0:	mov	w3, #0x78e                 	// #1934
  4177a4:	adrp	x4, 42c000 <_fini+0x23a8>
  4177a8:	add	x4, x4, #0x9fd
  4177ac:	bl	405718 <log_assert_failed_realm@plt>
  4177b0:	ldr	x8, [sp, #32]
  4177b4:	cmp	x8, #0x0
  4177b8:	cset	w9, ne  // ne = any
  4177bc:	mov	w10, #0x1                   	// #1
  4177c0:	eor	w9, w9, #0x1
  4177c4:	eor	w9, w9, w10
  4177c8:	eor	w9, w9, w10
  4177cc:	and	w9, w9, #0x1
  4177d0:	mov	w0, w9
  4177d4:	sxtw	x8, w0
  4177d8:	cbz	x8, 417800 <vl_method_flush_to_var+0xd4>
  4177dc:	mov	w8, wzr
  4177e0:	mov	w0, w8
  4177e4:	adrp	x1, 429000 <journal_ratelimit_group_free+0x70>
  4177e8:	add	x1, x1, #0xdc8
  4177ec:	ldr	x2, [sp, #8]
  4177f0:	mov	w3, #0x78f                 	// #1935
  4177f4:	adrp	x4, 42c000 <_fini+0x23a8>
  4177f8:	add	x4, x4, #0x9fd
  4177fc:	bl	405718 <log_assert_failed_realm@plt>
  417800:	ldur	x0, [x29, #-24]
  417804:	bl	406018 <json_variant_elements@plt>
  417808:	cmp	x0, #0x0
  41780c:	cset	w8, ls  // ls = plast
  417810:	tbnz	w8, #0, 417828 <vl_method_flush_to_var+0xfc>
  417814:	ldur	x0, [x29, #-16]
  417818:	ldur	x1, [x29, #-24]
  41781c:	bl	406028 <varlink_error_invalid_parameter@plt>
  417820:	stur	w0, [x29, #-4]
  417824:	b	4178bc <vl_method_flush_to_var+0x190>
  417828:	mov	w8, #0x6                   	// #6
  41782c:	str	w8, [sp, #28]
  417830:	str	wzr, [sp, #24]
  417834:	str	wzr, [sp, #20]
  417838:	ldr	w0, [sp, #20]
  41783c:	bl	405638 <log_get_max_level_realm@plt>
  417840:	ldr	w8, [sp, #28]
  417844:	and	w8, w8, #0x7
  417848:	cmp	w0, w8
  41784c:	b.lt	417884 <vl_method_flush_to_var+0x158>  // b.tstop
  417850:	ldr	w8, [sp, #20]
  417854:	ldr	w9, [sp, #28]
  417858:	orr	w0, w9, w8, lsl #10
  41785c:	ldr	w1, [sp, #24]
  417860:	ldr	x2, [sp, #8]
  417864:	mov	w3, #0x794                 	// #1940
  417868:	adrp	x4, 42c000 <_fini+0x23a8>
  41786c:	add	x4, x4, #0xa4e
  417870:	adrp	x5, 42c000 <_fini+0x23a8>
  417874:	add	x5, x5, #0xa65
  417878:	bl	405648 <log_internal_realm@plt>
  41787c:	str	w0, [sp, #4]
  417880:	b	417898 <vl_method_flush_to_var+0x16c>
  417884:	ldr	w0, [sp, #24]
  417888:	bl	405658 <abs@plt>
  41788c:	mov	w8, wzr
  417890:	subs	w8, w8, w0, uxtb
  417894:	str	w8, [sp, #4]
  417898:	ldr	w8, [sp, #4]
  41789c:	str	w8, [sp, #16]
  4178a0:	ldr	x0, [sp, #32]
  4178a4:	bl	417f1c <server_full_flush>
  4178a8:	ldur	x0, [x29, #-16]
  4178ac:	mov	x9, xzr
  4178b0:	mov	x1, x9
  4178b4:	bl	406088 <varlink_reply@plt>
  4178b8:	stur	w0, [x29, #-4]
  4178bc:	ldur	w0, [x29, #-4]
  4178c0:	ldp	x29, x30, [sp, #80]
  4178c4:	add	sp, sp, #0x60
  4178c8:	ret

00000000004178cc <vl_method_relinquish_var>:
  4178cc:	sub	sp, sp, #0x60
  4178d0:	stp	x29, x30, [sp, #80]
  4178d4:	add	x29, sp, #0x50
  4178d8:	adrp	x8, 42a000 <_fini+0x3a8>
  4178dc:	add	x8, x8, #0x3c8
  4178e0:	add	x8, x8, #0x3
  4178e4:	stur	x0, [x29, #-16]
  4178e8:	stur	x1, [x29, #-24]
  4178ec:	stur	w2, [x29, #-28]
  4178f0:	str	x3, [sp, #40]
  4178f4:	ldr	x9, [sp, #40]
  4178f8:	str	x9, [sp, #32]
  4178fc:	str	x8, [sp, #8]
  417900:	ldur	x8, [x29, #-16]
  417904:	cmp	x8, #0x0
  417908:	cset	w9, ne  // ne = any
  41790c:	mov	w10, #0x1                   	// #1
  417910:	eor	w9, w9, #0x1
  417914:	eor	w9, w9, w10
  417918:	eor	w9, w9, w10
  41791c:	and	w9, w9, #0x1
  417920:	mov	w0, w9
  417924:	sxtw	x8, w0
  417928:	cbz	x8, 417950 <vl_method_relinquish_var+0x84>
  41792c:	mov	w8, wzr
  417930:	mov	w0, w8
  417934:	adrp	x1, 42c000 <_fini+0x23a8>
  417938:	add	x1, x1, #0x697
  41793c:	ldr	x2, [sp, #8]
  417940:	mov	w3, #0x79d                 	// #1949
  417944:	adrp	x4, 42c000 <_fini+0x23a8>
  417948:	add	x4, x4, #0xab8
  41794c:	bl	405718 <log_assert_failed_realm@plt>
  417950:	ldr	x8, [sp, #32]
  417954:	cmp	x8, #0x0
  417958:	cset	w9, ne  // ne = any
  41795c:	mov	w10, #0x1                   	// #1
  417960:	eor	w9, w9, #0x1
  417964:	eor	w9, w9, w10
  417968:	eor	w9, w9, w10
  41796c:	and	w9, w9, #0x1
  417970:	mov	w0, w9
  417974:	sxtw	x8, w0
  417978:	cbz	x8, 4179a0 <vl_method_relinquish_var+0xd4>
  41797c:	mov	w8, wzr
  417980:	mov	w0, w8
  417984:	adrp	x1, 429000 <journal_ratelimit_group_free+0x70>
  417988:	add	x1, x1, #0xdc8
  41798c:	ldr	x2, [sp, #8]
  417990:	mov	w3, #0x79e                 	// #1950
  417994:	adrp	x4, 42c000 <_fini+0x23a8>
  417998:	add	x4, x4, #0xab8
  41799c:	bl	405718 <log_assert_failed_realm@plt>
  4179a0:	ldur	x0, [x29, #-24]
  4179a4:	bl	406018 <json_variant_elements@plt>
  4179a8:	cmp	x0, #0x0
  4179ac:	cset	w8, ls  // ls = plast
  4179b0:	tbnz	w8, #0, 4179c8 <vl_method_relinquish_var+0xfc>
  4179b4:	ldur	x0, [x29, #-16]
  4179b8:	ldur	x1, [x29, #-24]
  4179bc:	bl	406028 <varlink_error_invalid_parameter@plt>
  4179c0:	stur	w0, [x29, #-4]
  4179c4:	b	417a60 <vl_method_relinquish_var+0x194>
  4179c8:	mov	w8, #0x6                   	// #6
  4179cc:	str	w8, [sp, #28]
  4179d0:	str	wzr, [sp, #24]
  4179d4:	str	wzr, [sp, #20]
  4179d8:	ldr	w0, [sp, #20]
  4179dc:	bl	405638 <log_get_max_level_realm@plt>
  4179e0:	ldr	w8, [sp, #28]
  4179e4:	and	w8, w8, #0x7
  4179e8:	cmp	w0, w8
  4179ec:	b.lt	417a24 <vl_method_relinquish_var+0x158>  // b.tstop
  4179f0:	ldr	w8, [sp, #20]
  4179f4:	ldr	w9, [sp, #28]
  4179f8:	orr	w0, w9, w8, lsl #10
  4179fc:	ldr	w1, [sp, #24]
  417a00:	ldr	x2, [sp, #8]
  417a04:	mov	w3, #0x7a3                 	// #1955
  417a08:	adrp	x4, 42c000 <_fini+0x23a8>
  417a0c:	add	x4, x4, #0xb0b
  417a10:	adrp	x5, 42c000 <_fini+0x23a8>
  417a14:	add	x5, x5, #0xb24
  417a18:	bl	405648 <log_internal_realm@plt>
  417a1c:	str	w0, [sp, #4]
  417a20:	b	417a38 <vl_method_relinquish_var+0x16c>
  417a24:	ldr	w0, [sp, #24]
  417a28:	bl	405658 <abs@plt>
  417a2c:	mov	w8, wzr
  417a30:	subs	w8, w8, w0, uxtb
  417a34:	str	w8, [sp, #4]
  417a38:	ldr	w8, [sp, #4]
  417a3c:	str	w8, [sp, #16]
  417a40:	ldr	x0, [sp, #32]
  417a44:	bl	417fdc <server_relinquish_var>
  417a48:	ldur	x9, [x29, #-16]
  417a4c:	mov	x0, x9
  417a50:	mov	x9, xzr
  417a54:	mov	x1, x9
  417a58:	bl	406088 <varlink_reply@plt>
  417a5c:	stur	w0, [x29, #-4]
  417a60:	ldur	w0, [x29, #-4]
  417a64:	ldp	x29, x30, [sp, #80]
  417a68:	add	sp, sp, #0x60
  417a6c:	ret

0000000000417a70 <sd_event_source_unrefp>:
  417a70:	sub	sp, sp, #0x20
  417a74:	stp	x29, x30, [sp, #16]
  417a78:	add	x29, sp, #0x10
  417a7c:	str	x0, [sp, #8]
  417a80:	ldr	x8, [sp, #8]
  417a84:	ldr	x8, [x8]
  417a88:	cbz	x8, 417a98 <sd_event_source_unrefp+0x28>
  417a8c:	ldr	x8, [sp, #8]
  417a90:	ldr	x0, [x8]
  417a94:	bl	405888 <sd_event_source_unref@plt>
  417a98:	ldp	x29, x30, [sp, #16]
  417a9c:	add	sp, sp, #0x20
  417aa0:	ret

0000000000417aa4 <synchronize_second_half>:
  417aa4:	sub	sp, sp, #0x60
  417aa8:	stp	x29, x30, [sp, #80]
  417aac:	add	x29, sp, #0x50
  417ab0:	adrp	x8, 42a000 <_fini+0x3a8>
  417ab4:	add	x8, x8, #0x3c8
  417ab8:	add	x8, x8, #0x3
  417abc:	stur	x0, [x29, #-16]
  417ac0:	stur	x1, [x29, #-24]
  417ac4:	ldur	x9, [x29, #-24]
  417ac8:	stur	x9, [x29, #-32]
  417acc:	str	x8, [sp, #8]
  417ad0:	ldur	x8, [x29, #-32]
  417ad4:	cmp	x8, #0x0
  417ad8:	cset	w9, ne  // ne = any
  417adc:	mov	w10, #0x1                   	// #1
  417ae0:	eor	w9, w9, #0x1
  417ae4:	eor	w9, w9, w10
  417ae8:	eor	w9, w9, w10
  417aec:	and	w9, w9, #0x1
  417af0:	mov	w0, w9
  417af4:	sxtw	x8, w0
  417af8:	cbz	x8, 417b20 <synchronize_second_half+0x7c>
  417afc:	mov	w8, wzr
  417b00:	mov	w0, w8
  417b04:	adrp	x1, 42c000 <_fini+0x23a8>
  417b08:	add	x1, x1, #0x697
  417b0c:	ldr	x2, [sp, #8]
  417b10:	mov	w3, #0x73c                 	// #1852
  417b14:	adrp	x4, 42c000 <_fini+0x23a8>
  417b18:	add	x4, x4, #0x7ef
  417b1c:	bl	405718 <log_assert_failed_realm@plt>
  417b20:	ldur	x0, [x29, #-32]
  417b24:	bl	406098 <varlink_get_userdata@plt>
  417b28:	str	x0, [sp, #40]
  417b2c:	cmp	x0, #0x0
  417b30:	cset	w8, ne  // ne = any
  417b34:	mov	w9, #0x1                   	// #1
  417b38:	eor	w8, w8, #0x1
  417b3c:	eor	w8, w8, w9
  417b40:	eor	w8, w8, w9
  417b44:	and	w8, w8, #0x1
  417b48:	mov	w0, w8
  417b4c:	sxtw	x10, w0
  417b50:	cbz	x10, 417b78 <synchronize_second_half+0xd4>
  417b54:	mov	w8, wzr
  417b58:	mov	w0, w8
  417b5c:	adrp	x1, 42c000 <_fini+0x23a8>
  417b60:	add	x1, x1, #0x826
  417b64:	ldr	x2, [sp, #8]
  417b68:	mov	w3, #0x73d                 	// #1853
  417b6c:	adrp	x4, 42c000 <_fini+0x23a8>
  417b70:	add	x4, x4, #0x7ef
  417b74:	bl	405718 <log_assert_failed_realm@plt>
  417b78:	ldr	x0, [sp, #40]
  417b7c:	bl	417c74 <server_full_sync>
  417b80:	ldur	x0, [x29, #-16]
  417b84:	mov	w8, wzr
  417b88:	mov	w1, w8
  417b8c:	bl	406068 <sd_event_source_set_floating@plt>
  417b90:	str	w0, [sp, #36]
  417b94:	ldr	w8, [sp, #36]
  417b98:	cmp	w8, #0x0
  417b9c:	cset	w8, ge  // ge = tcont
  417ba0:	tbnz	w8, #0, 417c2c <synchronize_second_half+0x188>
  417ba4:	mov	w8, #0x3                   	// #3
  417ba8:	str	w8, [sp, #32]
  417bac:	ldr	w8, [sp, #36]
  417bb0:	str	w8, [sp, #28]
  417bb4:	str	wzr, [sp, #24]
  417bb8:	ldr	w0, [sp, #24]
  417bbc:	bl	405638 <log_get_max_level_realm@plt>
  417bc0:	ldr	w8, [sp, #32]
  417bc4:	and	w8, w8, #0x7
  417bc8:	cmp	w0, w8
  417bcc:	b.lt	417c04 <synchronize_second_half+0x160>  // b.tstop
  417bd0:	ldr	w8, [sp, #24]
  417bd4:	ldr	w9, [sp, #32]
  417bd8:	orr	w0, w9, w8, lsl #10
  417bdc:	ldr	w1, [sp, #28]
  417be0:	ldr	x2, [sp, #8]
  417be4:	mov	w3, #0x749                 	// #1865
  417be8:	adrp	x4, 42c000 <_fini+0x23a8>
  417bec:	add	x4, x4, #0x845
  417bf0:	adrp	x5, 42c000 <_fini+0x23a8>
  417bf4:	add	x5, x5, #0x85d
  417bf8:	bl	405648 <log_internal_realm@plt>
  417bfc:	str	w0, [sp, #4]
  417c00:	b	417c18 <synchronize_second_half+0x174>
  417c04:	ldr	w0, [sp, #28]
  417c08:	bl	405658 <abs@plt>
  417c0c:	mov	w8, wzr
  417c10:	subs	w8, w8, w0, uxtb
  417c14:	str	w8, [sp, #4]
  417c18:	ldr	w8, [sp, #4]
  417c1c:	str	w8, [sp, #20]
  417c20:	ldr	w8, [sp, #20]
  417c24:	stur	w8, [x29, #-4]
  417c28:	b	417c40 <synchronize_second_half+0x19c>
  417c2c:	ldur	x0, [x29, #-32]
  417c30:	mov	x8, xzr
  417c34:	mov	x1, x8
  417c38:	bl	406088 <varlink_reply@plt>
  417c3c:	stur	w0, [x29, #-4]
  417c40:	ldur	w0, [x29, #-4]
  417c44:	ldp	x29, x30, [sp, #80]
  417c48:	add	sp, sp, #0x60
  417c4c:	ret

0000000000417c50 <synchronize_destroy>:
  417c50:	sub	sp, sp, #0x20
  417c54:	stp	x29, x30, [sp, #16]
  417c58:	add	x29, sp, #0x10
  417c5c:	str	x0, [sp, #8]
  417c60:	ldr	x0, [sp, #8]
  417c64:	bl	4060a8 <varlink_unref@plt>
  417c68:	ldp	x29, x30, [sp, #16]
  417c6c:	add	sp, sp, #0x20
  417c70:	ret

0000000000417c74 <server_full_sync>:
  417c74:	sub	sp, sp, #0x50
  417c78:	stp	x29, x30, [sp, #64]
  417c7c:	add	x29, sp, #0x40
  417c80:	adrp	x8, 42a000 <_fini+0x3a8>
  417c84:	add	x8, x8, #0x3c8
  417c88:	add	x8, x8, #0x3
  417c8c:	stur	x0, [x29, #-8]
  417c90:	str	x8, [sp, #24]
  417c94:	ldur	x8, [x29, #-8]
  417c98:	cmp	x8, #0x0
  417c9c:	cset	w9, ne  // ne = any
  417ca0:	mov	w10, #0x1                   	// #1
  417ca4:	eor	w9, w9, #0x1
  417ca8:	eor	w9, w9, w10
  417cac:	eor	w9, w9, w10
  417cb0:	and	w9, w9, #0x1
  417cb4:	mov	w0, w9
  417cb8:	sxtw	x8, w0
  417cbc:	cbz	x8, 417ce4 <server_full_sync+0x70>
  417cc0:	mov	w8, wzr
  417cc4:	mov	w0, w8
  417cc8:	adrp	x1, 429000 <journal_ratelimit_group_free+0x70>
  417ccc:	add	x1, x1, #0xdc8
  417cd0:	ldr	x2, [sp, #24]
  417cd4:	mov	w3, #0x58f                 	// #1423
  417cd8:	adrp	x4, 42c000 <_fini+0x23a8>
  417cdc:	add	x4, x4, #0x88d
  417ce0:	bl	405718 <log_assert_failed_realm@plt>
  417ce4:	ldur	x0, [x29, #-8]
  417ce8:	bl	40aa94 <server_sync>
  417cec:	mov	w0, #0x1                   	// #1
  417cf0:	bl	4056f8 <now@plt>
  417cf4:	adrp	x8, 42c000 <_fini+0x23a8>
  417cf8:	add	x8, x8, #0x8ad
  417cfc:	str	x0, [sp, #16]
  417d00:	mov	x0, x8
  417d04:	ldr	x1, [sp, #16]
  417d08:	bl	4060b8 <write_timestamp_file_atomic@plt>
  417d0c:	stur	w0, [x29, #-12]
  417d10:	ldur	w9, [x29, #-12]
  417d14:	cmp	w9, #0x0
  417d18:	cset	w9, ge  // ge = tcont
  417d1c:	tbnz	w9, #0, 417d9c <server_full_sync+0x128>
  417d20:	mov	w8, #0x4                   	// #4
  417d24:	stur	w8, [x29, #-16]
  417d28:	ldur	w8, [x29, #-12]
  417d2c:	stur	w8, [x29, #-20]
  417d30:	stur	wzr, [x29, #-24]
  417d34:	ldur	w0, [x29, #-24]
  417d38:	bl	405638 <log_get_max_level_realm@plt>
  417d3c:	ldur	w8, [x29, #-16]
  417d40:	and	w8, w8, #0x7
  417d44:	cmp	w0, w8
  417d48:	b.lt	417d80 <server_full_sync+0x10c>  // b.tstop
  417d4c:	ldur	w8, [x29, #-24]
  417d50:	ldur	w9, [x29, #-16]
  417d54:	orr	w0, w9, w8, lsl #10
  417d58:	ldur	w1, [x29, #-20]
  417d5c:	ldr	x2, [sp, #24]
  417d60:	mov	w3, #0x596                 	// #1430
  417d64:	adrp	x4, 42c000 <_fini+0x23a8>
  417d68:	add	x4, x4, #0x8c9
  417d6c:	adrp	x5, 42c000 <_fini+0x23a8>
  417d70:	add	x5, x5, #0x8da
  417d74:	bl	405648 <log_internal_realm@plt>
  417d78:	str	w0, [sp, #12]
  417d7c:	b	417d94 <server_full_sync+0x120>
  417d80:	ldur	w0, [x29, #-20]
  417d84:	bl	405658 <abs@plt>
  417d88:	mov	w8, wzr
  417d8c:	subs	w8, w8, w0, uxtb
  417d90:	str	w8, [sp, #12]
  417d94:	ldr	w8, [sp, #12]
  417d98:	stur	w8, [x29, #-28]
  417d9c:	ldp	x29, x30, [sp, #64]
  417da0:	add	sp, sp, #0x50
  417da4:	ret

0000000000417da8 <server_full_rotate>:
  417da8:	sub	sp, sp, #0x50
  417dac:	stp	x29, x30, [sp, #64]
  417db0:	add	x29, sp, #0x40
  417db4:	adrp	x8, 42a000 <_fini+0x3a8>
  417db8:	add	x8, x8, #0x3c8
  417dbc:	add	x8, x8, #0x3
  417dc0:	stur	x0, [x29, #-8]
  417dc4:	str	x8, [sp, #24]
  417dc8:	ldur	x8, [x29, #-8]
  417dcc:	cmp	x8, #0x0
  417dd0:	cset	w9, ne  // ne = any
  417dd4:	mov	w10, #0x1                   	// #1
  417dd8:	eor	w9, w9, #0x1
  417ddc:	eor	w9, w9, w10
  417de0:	eor	w9, w9, w10
  417de4:	and	w9, w9, #0x1
  417de8:	mov	w0, w9
  417dec:	sxtw	x8, w0
  417df0:	cbz	x8, 417e18 <server_full_rotate+0x70>
  417df4:	mov	w8, wzr
  417df8:	mov	w0, w8
  417dfc:	adrp	x1, 429000 <journal_ratelimit_group_free+0x70>
  417e00:	add	x1, x1, #0xdc8
  417e04:	ldr	x2, [sp, #24]
  417e08:	mov	w3, #0x566                 	// #1382
  417e0c:	adrp	x4, 42c000 <_fini+0x23a8>
  417e10:	add	x4, x4, #0x970
  417e14:	bl	405718 <log_assert_failed_realm@plt>
  417e18:	ldur	x0, [x29, #-8]
  417e1c:	bl	409818 <server_rotate>
  417e20:	ldur	x0, [x29, #-8]
  417e24:	mov	w8, #0x1                   	// #1
  417e28:	and	w1, w8, #0x1
  417e2c:	bl	40ad14 <server_vacuum>
  417e30:	ldur	x9, [x29, #-8]
  417e34:	ldr	x9, [x9, #160]
  417e38:	cbz	x9, 417e48 <server_full_rotate+0xa0>
  417e3c:	ldur	x8, [x29, #-8]
  417e40:	add	x0, x8, #0x150
  417e44:	bl	416f58 <patch_min_use>
  417e48:	ldur	x8, [x29, #-8]
  417e4c:	ldr	x8, [x8, #152]
  417e50:	cbz	x8, 417e60 <server_full_rotate+0xb8>
  417e54:	ldur	x8, [x29, #-8]
  417e58:	add	x0, x8, #0xe8
  417e5c:	bl	416f58 <patch_min_use>
  417e60:	mov	w0, #0x1                   	// #1
  417e64:	bl	4056f8 <now@plt>
  417e68:	adrp	x8, 42c000 <_fini+0x23a8>
  417e6c:	add	x8, x8, #0x992
  417e70:	str	x0, [sp, #16]
  417e74:	mov	x0, x8
  417e78:	ldr	x1, [sp, #16]
  417e7c:	bl	4060b8 <write_timestamp_file_atomic@plt>
  417e80:	stur	w0, [x29, #-12]
  417e84:	ldur	w9, [x29, #-12]
  417e88:	cmp	w9, #0x0
  417e8c:	cset	w9, ge  // ge = tcont
  417e90:	tbnz	w9, #0, 417f10 <server_full_rotate+0x168>
  417e94:	mov	w8, #0x4                   	// #4
  417e98:	stur	w8, [x29, #-16]
  417e9c:	ldur	w8, [x29, #-12]
  417ea0:	stur	w8, [x29, #-20]
  417ea4:	stur	wzr, [x29, #-24]
  417ea8:	ldur	w0, [x29, #-24]
  417eac:	bl	405638 <log_get_max_level_realm@plt>
  417eb0:	ldur	w8, [x29, #-16]
  417eb4:	and	w8, w8, #0x7
  417eb8:	cmp	w0, w8
  417ebc:	b.lt	417ef4 <server_full_rotate+0x14c>  // b.tstop
  417ec0:	ldur	w8, [x29, #-24]
  417ec4:	ldur	w9, [x29, #-16]
  417ec8:	orr	w0, w9, w8, lsl #10
  417ecc:	ldur	w1, [x29, #-20]
  417ed0:	ldr	x2, [sp, #24]
  417ed4:	mov	w3, #0x573                 	// #1395
  417ed8:	adrp	x4, 42c000 <_fini+0x23a8>
  417edc:	add	x4, x4, #0x9af
  417ee0:	adrp	x5, 42c000 <_fini+0x23a8>
  417ee4:	add	x5, x5, #0x9c2
  417ee8:	bl	405648 <log_internal_realm@plt>
  417eec:	str	w0, [sp, #12]
  417ef0:	b	417f08 <server_full_rotate+0x160>
  417ef4:	ldur	w0, [x29, #-20]
  417ef8:	bl	405658 <abs@plt>
  417efc:	mov	w8, wzr
  417f00:	subs	w8, w8, w0, uxtb
  417f04:	str	w8, [sp, #12]
  417f08:	ldr	w8, [sp, #12]
  417f0c:	stur	w8, [x29, #-28]
  417f10:	ldp	x29, x30, [sp, #64]
  417f14:	add	sp, sp, #0x50
  417f18:	ret

0000000000417f1c <server_full_flush>:
  417f1c:	sub	sp, sp, #0x30
  417f20:	stp	x29, x30, [sp, #32]
  417f24:	add	x29, sp, #0x20
  417f28:	adrp	x8, 42a000 <_fini+0x3a8>
  417f2c:	add	x8, x8, #0x3c8
  417f30:	add	x2, x8, #0x3
  417f34:	stur	x0, [x29, #-8]
  417f38:	str	x2, [sp, #16]
  417f3c:	ldur	x8, [x29, #-8]
  417f40:	cmp	x8, #0x0
  417f44:	cset	w9, ne  // ne = any
  417f48:	mov	w10, #0x1                   	// #1
  417f4c:	eor	w9, w9, #0x1
  417f50:	eor	w9, w9, w10
  417f54:	eor	w9, w9, w10
  417f58:	and	w9, w9, #0x1
  417f5c:	mov	w0, w9
  417f60:	sxtw	x8, w0
  417f64:	cbz	x8, 417f8c <server_full_flush+0x70>
  417f68:	mov	w8, wzr
  417f6c:	mov	w0, w8
  417f70:	adrp	x1, 429000 <journal_ratelimit_group_free+0x70>
  417f74:	add	x1, x1, #0xdc8
  417f78:	ldr	x2, [sp, #16]
  417f7c:	mov	w3, #0x54f                 	// #1359
  417f80:	adrp	x4, 42c000 <_fini+0x23a8>
  417f84:	add	x4, x4, #0xa97
  417f88:	bl	405718 <log_assert_failed_realm@plt>
  417f8c:	ldur	x0, [x29, #-8]
  417f90:	mov	w8, wzr
  417f94:	and	w1, w8, #0x1
  417f98:	str	w8, [sp, #12]
  417f9c:	bl	40fa00 <server_flush_to_var>
  417fa0:	ldur	x9, [x29, #-8]
  417fa4:	mov	x0, x9
  417fa8:	bl	40aa94 <server_sync>
  417fac:	ldur	x0, [x29, #-8]
  417fb0:	ldr	w8, [sp, #12]
  417fb4:	and	w1, w8, #0x1
  417fb8:	bl	40ad14 <server_vacuum>
  417fbc:	ldur	x9, [x29, #-8]
  417fc0:	mov	x0, x9
  417fc4:	mov	x9, xzr
  417fc8:	mov	x1, x9
  417fcc:	bl	408d20 <server_space_usage_message>
  417fd0:	ldp	x29, x30, [sp, #32]
  417fd4:	add	sp, sp, #0x30
  417fd8:	ret

0000000000417fdc <server_relinquish_var>:
  417fdc:	sub	sp, sp, #0x60
  417fe0:	stp	x29, x30, [sp, #80]
  417fe4:	add	x29, sp, #0x50
  417fe8:	adrp	x8, 42a000 <_fini+0x3a8>
  417fec:	add	x8, x8, #0x3c8
  417ff0:	add	x8, x8, #0x3
  417ff4:	stur	x0, [x29, #-16]
  417ff8:	str	x8, [sp, #8]
  417ffc:	ldur	x8, [x29, #-16]
  418000:	cmp	x8, #0x0
  418004:	cset	w9, ne  // ne = any
  418008:	mov	w10, #0x1                   	// #1
  41800c:	eor	w9, w9, #0x1
  418010:	eor	w9, w9, w10
  418014:	eor	w9, w9, w10
  418018:	and	w9, w9, #0x1
  41801c:	mov	w0, w9
  418020:	sxtw	x8, w0
  418024:	cbz	x8, 41804c <server_relinquish_var+0x70>
  418028:	mov	w8, wzr
  41802c:	mov	w0, w8
  418030:	adrp	x1, 429000 <journal_ratelimit_group_free+0x70>
  418034:	add	x1, x1, #0xdc8
  418038:	ldr	x2, [sp, #8]
  41803c:	mov	w3, #0x4c2                 	// #1218
  418040:	adrp	x4, 42c000 <_fini+0x23a8>
  418044:	add	x4, x4, #0xb57
  418048:	bl	405718 <log_assert_failed_realm@plt>
  41804c:	ldur	x8, [x29, #-16]
  418050:	ldr	w9, [x8, #556]
  418054:	cmp	w9, #0x3
  418058:	b.ne	418064 <server_relinquish_var+0x88>  // b.any
  41805c:	stur	wzr, [x29, #-4]
  418060:	b	418218 <server_relinquish_var+0x23c>
  418064:	ldur	x8, [x29, #-16]
  418068:	ldr	x8, [x8, #152]
  41806c:	cbz	x8, 418084 <server_relinquish_var+0xa8>
  418070:	ldur	x8, [x29, #-16]
  418074:	ldr	x8, [x8, #160]
  418078:	cbnz	x8, 418084 <server_relinquish_var+0xa8>
  41807c:	stur	wzr, [x29, #-4]
  418080:	b	418218 <server_relinquish_var+0x23c>
  418084:	mov	w8, #0x7                   	// #7
  418088:	stur	w8, [x29, #-20]
  41808c:	stur	wzr, [x29, #-24]
  418090:	stur	wzr, [x29, #-28]
  418094:	ldur	w0, [x29, #-28]
  418098:	bl	405638 <log_get_max_level_realm@plt>
  41809c:	ldur	w8, [x29, #-20]
  4180a0:	and	w8, w8, #0x7
  4180a4:	cmp	w0, w8
  4180a8:	b.lt	4180e0 <server_relinquish_var+0x104>  // b.tstop
  4180ac:	ldur	w8, [x29, #-28]
  4180b0:	ldur	w9, [x29, #-20]
  4180b4:	orr	w0, w9, w8, lsl #10
  4180b8:	ldur	w1, [x29, #-24]
  4180bc:	ldr	x2, [sp, #8]
  4180c0:	mov	w3, #0x4ca                 	// #1226
  4180c4:	adrp	x4, 42c000 <_fini+0x23a8>
  4180c8:	add	x4, x4, #0xb7b
  4180cc:	adrp	x5, 42c000 <_fini+0x23a8>
  4180d0:	add	x5, x5, #0xb91
  4180d4:	bl	405648 <log_internal_realm@plt>
  4180d8:	str	w0, [sp, #4]
  4180dc:	b	4180f4 <server_relinquish_var+0x118>
  4180e0:	ldur	w0, [x29, #-24]
  4180e4:	bl	405658 <abs@plt>
  4180e8:	mov	w8, wzr
  4180ec:	subs	w8, w8, w0, uxtb
  4180f0:	str	w8, [sp, #4]
  4180f4:	ldr	w8, [sp, #4]
  4180f8:	stur	w8, [x29, #-32]
  4180fc:	ldur	x0, [x29, #-16]
  418100:	mov	w8, #0x1                   	// #1
  418104:	mov	w9, wzr
  418108:	and	w1, w9, #0x1
  41810c:	and	w2, w8, #0x1
  418110:	bl	410218 <system_journal_open>
  418114:	ldur	x10, [x29, #-16]
  418118:	ldr	x10, [x10, #160]
  41811c:	mov	x0, x10
  418120:	bl	405a58 <journal_file_close@plt>
  418124:	ldur	x10, [x29, #-16]
  418128:	str	x0, [x10, #160]
  41812c:	ldur	x8, [x29, #-16]
  418130:	ldr	x0, [x8, #168]
  418134:	bl	414ba0 <ordered_hashmap_steal_first>
  418138:	str	x0, [sp, #40]
  41813c:	cbz	x0, 41814c <server_relinquish_var+0x170>
  418140:	ldr	x0, [sp, #40]
  418144:	bl	405a58 <journal_file_close@plt>
  418148:	b	41812c <server_relinquish_var+0x150>
  41814c:	ldur	x8, [x29, #-16]
  418150:	ldr	x0, [x8, #576]
  418154:	bl	414b3c <set_steal_first>
  418158:	str	x0, [sp, #32]
  41815c:	cbz	x0, 41816c <server_relinquish_var+0x190>
  418160:	ldr	x0, [sp, #32]
  418164:	bl	405a58 <journal_file_close@plt>
  418168:	b	41814c <server_relinquish_var+0x170>
  41816c:	adrp	x0, 42a000 <_fini+0x3a8>
  418170:	add	x0, x0, #0xb81
  418174:	bl	4060c8 <unlink@plt>
  418178:	cmp	w0, #0x0
  41817c:	cset	w8, ge  // ge = tcont
  418180:	tbnz	w8, #0, 418214 <server_relinquish_var+0x238>
  418184:	bl	405768 <__errno_location@plt>
  418188:	ldr	w8, [x0]
  41818c:	cmp	w8, #0x2
  418190:	b.eq	418214 <server_relinquish_var+0x238>  // b.none
  418194:	mov	w8, #0x4                   	// #4
  418198:	str	w8, [sp, #28]
  41819c:	bl	405768 <__errno_location@plt>
  4181a0:	ldr	w8, [x0]
  4181a4:	str	w8, [sp, #24]
  4181a8:	str	wzr, [sp, #20]
  4181ac:	ldr	w0, [sp, #20]
  4181b0:	bl	405638 <log_get_max_level_realm@plt>
  4181b4:	ldr	w8, [sp, #28]
  4181b8:	and	w8, w8, #0x7
  4181bc:	cmp	w0, w8
  4181c0:	b.lt	4181f8 <server_relinquish_var+0x21c>  // b.tstop
  4181c4:	ldr	w8, [sp, #20]
  4181c8:	ldr	w9, [sp, #28]
  4181cc:	orr	w0, w9, w8, lsl #10
  4181d0:	ldr	w1, [sp, #24]
  4181d4:	ldr	x2, [sp, #8]
  4181d8:	mov	w3, #0x4d3                 	// #1235
  4181dc:	adrp	x4, 42c000 <_fini+0x23a8>
  4181e0:	add	x4, x4, #0xb7b
  4181e4:	adrp	x5, 42c000 <_fini+0x23a8>
  4181e8:	add	x5, x5, #0xba7
  4181ec:	bl	405648 <log_internal_realm@plt>
  4181f0:	str	w0, [sp]
  4181f4:	b	41820c <server_relinquish_var+0x230>
  4181f8:	ldr	w0, [sp, #24]
  4181fc:	bl	405658 <abs@plt>
  418200:	mov	w8, wzr
  418204:	subs	w8, w8, w0, uxtb
  418208:	str	w8, [sp]
  41820c:	ldr	w8, [sp]
  418210:	str	w8, [sp, #16]
  418214:	stur	wzr, [x29, #-4]
  418218:	ldur	w0, [x29, #-4]
  41821c:	ldp	x29, x30, [sp, #80]
  418220:	add	sp, sp, #0x60
  418224:	ret

0000000000418228 <dispatch_hostname_change>:
  418228:	sub	sp, sp, #0x40
  41822c:	stp	x29, x30, [sp, #48]
  418230:	add	x29, sp, #0x30
  418234:	adrp	x8, 42a000 <_fini+0x3a8>
  418238:	add	x8, x8, #0x3c8
  41823c:	add	x8, x8, #0x3
  418240:	stur	x0, [x29, #-8]
  418244:	stur	w1, [x29, #-12]
  418248:	stur	w2, [x29, #-16]
  41824c:	str	x3, [sp, #24]
  418250:	ldr	x9, [sp, #24]
  418254:	str	x9, [sp, #16]
  418258:	str	x8, [sp, #8]
  41825c:	ldr	x8, [sp, #16]
  418260:	cmp	x8, #0x0
  418264:	cset	w9, ne  // ne = any
  418268:	mov	w10, #0x1                   	// #1
  41826c:	eor	w9, w9, #0x1
  418270:	eor	w9, w9, w10
  418274:	eor	w9, w9, w10
  418278:	and	w9, w9, #0x1
  41827c:	mov	w0, w9
  418280:	sxtw	x8, w0
  418284:	cbz	x8, 4182ac <dispatch_hostname_change+0x84>
  418288:	mov	w8, wzr
  41828c:	mov	w0, w8
  418290:	adrp	x1, 429000 <journal_ratelimit_group_free+0x70>
  418294:	add	x1, x1, #0xdc8
  418298:	ldr	x2, [sp, #8]
  41829c:	mov	w3, #0x682                 	// #1666
  4182a0:	adrp	x4, 42c000 <_fini+0x23a8>
  4182a4:	add	x4, x4, #0xd06
  4182a8:	bl	405718 <log_assert_failed_realm@plt>
  4182ac:	ldr	x0, [sp, #16]
  4182b0:	bl	413ff4 <server_cache_hostname>
  4182b4:	mov	w8, wzr
  4182b8:	mov	w0, w8
  4182bc:	ldp	x29, x30, [sp, #48]
  4182c0:	add	sp, sp, #0x40
  4182c4:	ret

00000000004182c8 <dispatch_sigusr1>:
  4182c8:	sub	sp, sp, #0x50
  4182cc:	stp	x29, x30, [sp, #64]
  4182d0:	add	x29, sp, #0x40
  4182d4:	adrp	x8, 42a000 <_fini+0x3a8>
  4182d8:	add	x8, x8, #0x3c8
  4182dc:	add	x8, x8, #0x3
  4182e0:	stur	x0, [x29, #-8]
  4182e4:	stur	x1, [x29, #-16]
  4182e8:	stur	x2, [x29, #-24]
  4182ec:	ldur	x9, [x29, #-24]
  4182f0:	str	x9, [sp, #32]
  4182f4:	str	x8, [sp, #8]
  4182f8:	ldr	x8, [sp, #32]
  4182fc:	cmp	x8, #0x0
  418300:	cset	w9, ne  // ne = any
  418304:	mov	w10, #0x1                   	// #1
  418308:	eor	w9, w9, #0x1
  41830c:	eor	w9, w9, w10
  418310:	eor	w9, w9, w10
  418314:	and	w9, w9, #0x1
  418318:	mov	w0, w9
  41831c:	sxtw	x8, w0
  418320:	cbz	x8, 418348 <dispatch_sigusr1+0x80>
  418324:	mov	w8, wzr
  418328:	mov	w0, w8
  41832c:	adrp	x1, 429000 <journal_ratelimit_group_free+0x70>
  418330:	add	x1, x1, #0xdc8
  418334:	ldr	x2, [sp, #8]
  418338:	mov	w3, #0x55b                 	// #1371
  41833c:	adrp	x4, 42c000 <_fini+0x23a8>
  418340:	add	x4, x4, #0xdc5
  418344:	bl	405718 <log_assert_failed_realm@plt>
  418348:	mov	w8, #0x6                   	// #6
  41834c:	str	w8, [sp, #28]
  418350:	str	wzr, [sp, #24]
  418354:	str	wzr, [sp, #20]
  418358:	ldr	w0, [sp, #20]
  41835c:	bl	405638 <log_get_max_level_realm@plt>
  418360:	ldr	w8, [sp, #28]
  418364:	and	w8, w8, #0x7
  418368:	cmp	w0, w8
  41836c:	b.lt	4183ac <dispatch_sigusr1+0xe4>  // b.tstop
  418370:	ldr	w8, [sp, #20]
  418374:	ldr	w9, [sp, #28]
  418378:	orr	w0, w9, w8, lsl #10
  41837c:	ldr	w1, [sp, #24]
  418380:	ldur	x10, [x29, #-16]
  418384:	ldr	w6, [x10, #12]
  418388:	ldr	x2, [sp, #8]
  41838c:	mov	w3, #0x55d                 	// #1373
  418390:	adrp	x4, 42c000 <_fini+0x23a8>
  418394:	add	x4, x4, #0xe16
  418398:	adrp	x5, 42c000 <_fini+0x23a8>
  41839c:	add	x5, x5, #0xe27
  4183a0:	bl	405648 <log_internal_realm@plt>
  4183a4:	str	w0, [sp, #4]
  4183a8:	b	4183c0 <dispatch_sigusr1+0xf8>
  4183ac:	ldr	w0, [sp, #24]
  4183b0:	bl	405658 <abs@plt>
  4183b4:	mov	w8, wzr
  4183b8:	subs	w8, w8, w0, uxtb
  4183bc:	str	w8, [sp, #4]
  4183c0:	ldr	w8, [sp, #4]
  4183c4:	str	w8, [sp, #16]
  4183c8:	ldr	x0, [sp, #32]
  4183cc:	bl	417f1c <server_full_flush>
  4183d0:	mov	w8, wzr
  4183d4:	mov	w0, w8
  4183d8:	ldp	x29, x30, [sp, #64]
  4183dc:	add	sp, sp, #0x50
  4183e0:	ret

00000000004183e4 <dispatch_sigusr2>:
  4183e4:	sub	sp, sp, #0x50
  4183e8:	stp	x29, x30, [sp, #64]
  4183ec:	add	x29, sp, #0x40
  4183f0:	adrp	x8, 42a000 <_fini+0x3a8>
  4183f4:	add	x8, x8, #0x3c8
  4183f8:	add	x8, x8, #0x3
  4183fc:	stur	x0, [x29, #-8]
  418400:	stur	x1, [x29, #-16]
  418404:	stur	x2, [x29, #-24]
  418408:	ldur	x9, [x29, #-24]
  41840c:	str	x9, [sp, #32]
  418410:	str	x8, [sp, #8]
  418414:	ldr	x8, [sp, #32]
  418418:	cmp	x8, #0x0
  41841c:	cset	w9, ne  // ne = any
  418420:	mov	w10, #0x1                   	// #1
  418424:	eor	w9, w9, #0x1
  418428:	eor	w9, w9, w10
  41842c:	eor	w9, w9, w10
  418430:	and	w9, w9, #0x1
  418434:	mov	w0, w9
  418438:	sxtw	x8, w0
  41843c:	cbz	x8, 418464 <dispatch_sigusr2+0x80>
  418440:	mov	w8, wzr
  418444:	mov	w0, w8
  418448:	adrp	x1, 429000 <journal_ratelimit_group_free+0x70>
  41844c:	add	x1, x1, #0xdc8
  418450:	ldr	x2, [sp, #8]
  418454:	mov	w3, #0x579                 	// #1401
  418458:	adrp	x4, 42c000 <_fini+0x23a8>
  41845c:	add	x4, x4, #0xe71
  418460:	bl	405718 <log_assert_failed_realm@plt>
  418464:	mov	w8, #0x6                   	// #6
  418468:	str	w8, [sp, #28]
  41846c:	str	wzr, [sp, #24]
  418470:	str	wzr, [sp, #20]
  418474:	ldr	w0, [sp, #20]
  418478:	bl	405638 <log_get_max_level_realm@plt>
  41847c:	ldr	w8, [sp, #28]
  418480:	and	w8, w8, #0x7
  418484:	cmp	w0, w8
  418488:	b.lt	4184c8 <dispatch_sigusr2+0xe4>  // b.tstop
  41848c:	ldr	w8, [sp, #20]
  418490:	ldr	w9, [sp, #28]
  418494:	orr	w0, w9, w8, lsl #10
  418498:	ldr	w1, [sp, #24]
  41849c:	ldur	x10, [x29, #-16]
  4184a0:	ldr	w6, [x10, #12]
  4184a4:	ldr	x2, [sp, #8]
  4184a8:	mov	w3, #0x57b                 	// #1403
  4184ac:	adrp	x4, 42c000 <_fini+0x23a8>
  4184b0:	add	x4, x4, #0xec2
  4184b4:	adrp	x5, 42c000 <_fini+0x23a8>
  4184b8:	add	x5, x5, #0xed3
  4184bc:	bl	405648 <log_internal_realm@plt>
  4184c0:	str	w0, [sp, #4]
  4184c4:	b	4184dc <dispatch_sigusr2+0xf8>
  4184c8:	ldr	w0, [sp, #24]
  4184cc:	bl	405658 <abs@plt>
  4184d0:	mov	w8, wzr
  4184d4:	subs	w8, w8, w0, uxtb
  4184d8:	str	w8, [sp, #4]
  4184dc:	ldr	w8, [sp, #4]
  4184e0:	str	w8, [sp, #16]
  4184e4:	ldr	x0, [sp, #32]
  4184e8:	bl	417da8 <server_full_rotate>
  4184ec:	mov	w8, wzr
  4184f0:	mov	w0, w8
  4184f4:	ldp	x29, x30, [sp, #64]
  4184f8:	add	sp, sp, #0x50
  4184fc:	ret

0000000000418500 <dispatch_sigterm>:
  418500:	sub	sp, sp, #0x40
  418504:	stp	x29, x30, [sp, #48]
  418508:	add	x29, sp, #0x30
  41850c:	adrp	x8, 42a000 <_fini+0x3a8>
  418510:	add	x8, x8, #0x3c8
  418514:	add	x8, x8, #0x3
  418518:	stur	x0, [x29, #-8]
  41851c:	stur	x1, [x29, #-16]
  418520:	str	x2, [sp, #24]
  418524:	ldr	x9, [sp, #24]
  418528:	str	x9, [sp, #16]
  41852c:	str	x8, [sp, #8]
  418530:	ldr	x8, [sp, #16]
  418534:	cmp	x8, #0x0
  418538:	cset	w9, ne  // ne = any
  41853c:	mov	w10, #0x1                   	// #1
  418540:	eor	w9, w9, #0x1
  418544:	eor	w9, w9, w10
  418548:	eor	w9, w9, w10
  41854c:	and	w9, w9, #0x1
  418550:	mov	w0, w9
  418554:	sxtw	x8, w0
  418558:	cbz	x8, 418580 <dispatch_sigterm+0x80>
  41855c:	mov	w8, wzr
  418560:	mov	w0, w8
  418564:	adrp	x1, 429000 <journal_ratelimit_group_free+0x70>
  418568:	add	x1, x1, #0xdc8
  41856c:	ldr	x2, [sp, #8]
  418570:	mov	w3, #0x584                 	// #1412
  418574:	adrp	x4, 42c000 <_fini+0x23a8>
  418578:	add	x4, x4, #0xf16
  41857c:	bl	405718 <log_assert_failed_realm@plt>
  418580:	ldur	x1, [x29, #-16]
  418584:	mov	w0, #0x6                   	// #6
  418588:	bl	4060d8 <log_received_signal@plt>
  41858c:	ldr	x8, [sp, #16]
  418590:	ldr	x0, [x8, #32]
  418594:	mov	w9, wzr
  418598:	mov	w1, w9
  41859c:	str	w9, [sp, #4]
  4185a0:	bl	4060e8 <sd_event_exit@plt>
  4185a4:	ldr	w9, [sp, #4]
  4185a8:	mov	w0, w9
  4185ac:	ldp	x29, x30, [sp, #48]
  4185b0:	add	sp, sp, #0x40
  4185b4:	ret

00000000004185b8 <dispatch_sigrtmin1>:
  4185b8:	sub	sp, sp, #0x50
  4185bc:	stp	x29, x30, [sp, #64]
  4185c0:	add	x29, sp, #0x40
  4185c4:	adrp	x8, 42a000 <_fini+0x3a8>
  4185c8:	add	x8, x8, #0x3c8
  4185cc:	add	x8, x8, #0x3
  4185d0:	stur	x0, [x29, #-8]
  4185d4:	stur	x1, [x29, #-16]
  4185d8:	stur	x2, [x29, #-24]
  4185dc:	ldur	x9, [x29, #-24]
  4185e0:	str	x9, [sp, #32]
  4185e4:	str	x8, [sp, #8]
  4185e8:	ldr	x8, [sp, #32]
  4185ec:	cmp	x8, #0x0
  4185f0:	cset	w9, ne  // ne = any
  4185f4:	mov	w10, #0x1                   	// #1
  4185f8:	eor	w9, w9, #0x1
  4185fc:	eor	w9, w9, w10
  418600:	eor	w9, w9, w10
  418604:	and	w9, w9, #0x1
  418608:	mov	w0, w9
  41860c:	sxtw	x8, w0
  418610:	cbz	x8, 418638 <dispatch_sigrtmin1+0x80>
  418614:	mov	w8, wzr
  418618:	mov	w0, w8
  41861c:	adrp	x1, 429000 <journal_ratelimit_group_free+0x70>
  418620:	add	x1, x1, #0xdc8
  418624:	ldr	x2, [sp, #8]
  418628:	mov	w3, #0x59e                 	// #1438
  41862c:	adrp	x4, 42c000 <_fini+0x23a8>
  418630:	add	x4, x4, #0xf67
  418634:	bl	405718 <log_assert_failed_realm@plt>
  418638:	mov	w8, #0x7                   	// #7
  41863c:	str	w8, [sp, #28]
  418640:	str	wzr, [sp, #24]
  418644:	str	wzr, [sp, #20]
  418648:	ldr	w0, [sp, #20]
  41864c:	bl	405638 <log_get_max_level_realm@plt>
  418650:	ldr	w8, [sp, #28]
  418654:	and	w8, w8, #0x7
  418658:	cmp	w0, w8
  41865c:	b.lt	41869c <dispatch_sigrtmin1+0xe4>  // b.tstop
  418660:	ldr	w8, [sp, #20]
  418664:	ldr	w9, [sp, #28]
  418668:	orr	w0, w9, w8, lsl #10
  41866c:	ldr	w1, [sp, #24]
  418670:	ldur	x10, [x29, #-16]
  418674:	ldr	w6, [x10, #12]
  418678:	ldr	x2, [sp, #8]
  41867c:	mov	w3, #0x5a0                 	// #1440
  418680:	adrp	x4, 42c000 <_fini+0x23a8>
  418684:	add	x4, x4, #0xfba
  418688:	adrp	x5, 42c000 <_fini+0x23a8>
  41868c:	add	x5, x5, #0xfcd
  418690:	bl	405648 <log_internal_realm@plt>
  418694:	str	w0, [sp, #4]
  418698:	b	4186b0 <dispatch_sigrtmin1+0xf8>
  41869c:	ldr	w0, [sp, #24]
  4186a0:	bl	405658 <abs@plt>
  4186a4:	mov	w8, wzr
  4186a8:	subs	w8, w8, w0, uxtb
  4186ac:	str	w8, [sp, #4]
  4186b0:	ldr	w8, [sp, #4]
  4186b4:	str	w8, [sp, #16]
  4186b8:	ldr	x0, [sp, #32]
  4186bc:	bl	417c74 <server_full_sync>
  4186c0:	mov	w8, wzr
  4186c4:	mov	w0, w8
  4186c8:	ldp	x29, x30, [sp, #64]
  4186cc:	add	sp, sp, #0x50
  4186d0:	ret

00000000004186d4 <dispatch_notify_event>:
  4186d4:	sub	sp, sp, #0x100
  4186d8:	stp	x29, x30, [sp, #240]
  4186dc:	add	x29, sp, #0xf0
  4186e0:	adrp	x8, 42a000 <_fini+0x3a8>
  4186e4:	add	x8, x8, #0x3c8
  4186e8:	add	x8, x8, #0x3
  4186ec:	adrp	x9, 42d000 <_fini+0x33a8>
  4186f0:	add	x9, x9, #0x243
  4186f4:	adrp	x10, 42d000 <_fini+0x33a8>
  4186f8:	add	x10, x10, #0x1cf
  4186fc:	stur	x0, [x29, #-16]
  418700:	stur	w1, [x29, #-20]
  418704:	stur	w2, [x29, #-24]
  418708:	stur	x3, [x29, #-32]
  41870c:	ldur	x11, [x29, #-32]
  418710:	stur	x11, [x29, #-40]
  418714:	str	x8, [sp, #88]
  418718:	str	x9, [sp, #80]
  41871c:	str	x10, [sp, #72]
  418720:	ldur	x8, [x29, #-40]
  418724:	cmp	x8, #0x0
  418728:	cset	w9, ne  // ne = any
  41872c:	mov	w10, #0x1                   	// #1
  418730:	eor	w9, w9, #0x1
  418734:	eor	w9, w9, w10
  418738:	eor	w9, w9, w10
  41873c:	and	w9, w9, #0x1
  418740:	mov	w0, w9
  418744:	sxtw	x8, w0
  418748:	cbz	x8, 41876c <dispatch_notify_event+0x98>
  41874c:	mov	w8, wzr
  418750:	mov	w0, w8
  418754:	adrp	x1, 429000 <journal_ratelimit_group_free+0x70>
  418758:	add	x1, x1, #0xdc8
  41875c:	ldr	x2, [sp, #88]
  418760:	mov	w3, #0x6aa                 	// #1706
  418764:	ldr	x4, [sp, #72]
  418768:	bl	405718 <log_assert_failed_realm@plt>
  41876c:	ldur	x8, [x29, #-40]
  418770:	ldr	x8, [x8, #136]
  418774:	ldur	x9, [x29, #-16]
  418778:	cmp	x8, x9
  41877c:	cset	w10, eq  // eq = none
  418780:	mov	w11, #0x1                   	// #1
  418784:	eor	w10, w10, #0x1
  418788:	eor	w10, w10, w11
  41878c:	eor	w10, w10, w11
  418790:	and	w10, w10, #0x1
  418794:	mov	w0, w10
  418798:	sxtw	x8, w0
  41879c:	cbz	x8, 4187c0 <dispatch_notify_event+0xec>
  4187a0:	mov	w8, wzr
  4187a4:	mov	w0, w8
  4187a8:	adrp	x1, 42d000 <_fini+0x33a8>
  4187ac:	add	x1, x1, #0x213
  4187b0:	ldr	x2, [sp, #88]
  4187b4:	mov	w3, #0x6ab                 	// #1707
  4187b8:	ldr	x4, [sp, #72]
  4187bc:	bl	405718 <log_assert_failed_realm@plt>
  4187c0:	ldur	x8, [x29, #-40]
  4187c4:	ldr	w9, [x8, #24]
  4187c8:	ldur	w10, [x29, #-20]
  4187cc:	cmp	w9, w10
  4187d0:	cset	w9, eq  // eq = none
  4187d4:	mov	w10, #0x1                   	// #1
  4187d8:	eor	w9, w9, #0x1
  4187dc:	eor	w9, w9, w10
  4187e0:	eor	w9, w9, w10
  4187e4:	and	w9, w9, #0x1
  4187e8:	mov	w0, w9
  4187ec:	sxtw	x8, w0
  4187f0:	cbz	x8, 418814 <dispatch_notify_event+0x140>
  4187f4:	mov	w8, wzr
  4187f8:	mov	w0, w8
  4187fc:	adrp	x1, 42d000 <_fini+0x33a8>
  418800:	add	x1, x1, #0x230
  418804:	ldr	x2, [sp, #88]
  418808:	mov	w3, #0x6ac                 	// #1708
  41880c:	ldr	x4, [sp, #72]
  418810:	bl	405718 <log_assert_failed_realm@plt>
  418814:	ldur	x8, [x29, #-40]
  418818:	ldrb	w9, [x8, #592]
  41881c:	mov	w10, #0x2                   	// #2
  418820:	lsr	w9, w9, w10
  418824:	and	w9, w9, #0x1
  418828:	tbnz	w9, #0, 4189a8 <dispatch_notify_event+0x2d4>
  41882c:	ldur	x8, [x29, #-40]
  418830:	ldr	w0, [x8, #24]
  418834:	adrp	x8, 430000 <_fini+0x63a8>
  418838:	add	x8, x8, #0x519
  41883c:	str	w0, [sp, #68]
  418840:	mov	x0, x8
  418844:	str	x8, [sp, #56]
  418848:	bl	405738 <strlen@plt>
  41884c:	ldr	w9, [sp, #68]
  418850:	str	x0, [sp, #48]
  418854:	mov	w0, w9
  418858:	ldr	x1, [sp, #56]
  41885c:	ldr	x2, [sp, #48]
  418860:	mov	w3, #0x40                  	// #64
  418864:	bl	4060f8 <send@plt>
  418868:	stur	x0, [x29, #-56]
  41886c:	ldur	x8, [x29, #-56]
  418870:	cmp	x8, #0x0
  418874:	cset	w9, ge  // ge = tcont
  418878:	tbnz	w9, #0, 41891c <dispatch_notify_event+0x248>
  41887c:	bl	405768 <__errno_location@plt>
  418880:	ldr	w8, [x0]
  418884:	cmp	w8, #0xb
  418888:	b.ne	418894 <dispatch_notify_event+0x1c0>  // b.any
  41888c:	stur	wzr, [x29, #-4]
  418890:	b	418c2c <dispatch_notify_event+0x558>
  418894:	mov	w8, #0x3                   	// #3
  418898:	stur	w8, [x29, #-60]
  41889c:	bl	405768 <__errno_location@plt>
  4188a0:	ldr	w8, [x0]
  4188a4:	stur	w8, [x29, #-64]
  4188a8:	stur	wzr, [x29, #-68]
  4188ac:	ldur	w0, [x29, #-68]
  4188b0:	bl	405638 <log_get_max_level_realm@plt>
  4188b4:	ldur	w8, [x29, #-60]
  4188b8:	and	w8, w8, #0x7
  4188bc:	cmp	w0, w8
  4188c0:	b.lt	4188f4 <dispatch_notify_event+0x220>  // b.tstop
  4188c4:	ldur	w8, [x29, #-68]
  4188c8:	ldur	w9, [x29, #-60]
  4188cc:	orr	w0, w9, w8, lsl #10
  4188d0:	ldur	w1, [x29, #-64]
  4188d4:	ldr	x2, [sp, #88]
  4188d8:	mov	w3, #0x6bf                 	// #1727
  4188dc:	ldr	x4, [sp, #80]
  4188e0:	adrp	x5, 42d000 <_fini+0x33a8>
  4188e4:	add	x5, x5, #0x259
  4188e8:	bl	405648 <log_internal_realm@plt>
  4188ec:	str	w0, [sp, #44]
  4188f0:	b	418908 <dispatch_notify_event+0x234>
  4188f4:	ldur	w0, [x29, #-64]
  4188f8:	bl	405658 <abs@plt>
  4188fc:	mov	w8, wzr
  418900:	subs	w8, w8, w0, uxtb
  418904:	str	w8, [sp, #44]
  418908:	ldr	w8, [sp, #44]
  41890c:	stur	w8, [x29, #-72]
  418910:	ldur	w8, [x29, #-72]
  418914:	stur	w8, [x29, #-4]
  418918:	b	418c2c <dispatch_notify_event+0x558>
  41891c:	ldur	x8, [x29, #-40]
  418920:	ldrb	w9, [x8, #592]
  418924:	and	w9, w9, #0xfffffffb
  418928:	orr	w9, w9, #0x4
  41892c:	strb	w9, [x8, #592]
  418930:	mov	w9, #0x7                   	// #7
  418934:	stur	w9, [x29, #-76]
  418938:	stur	wzr, [x29, #-80]
  41893c:	stur	wzr, [x29, #-84]
  418940:	ldur	w0, [x29, #-84]
  418944:	bl	405638 <log_get_max_level_realm@plt>
  418948:	ldur	w9, [x29, #-76]
  41894c:	and	w9, w9, #0x7
  418950:	cmp	w0, w9
  418954:	b.lt	418988 <dispatch_notify_event+0x2b4>  // b.tstop
  418958:	ldur	w8, [x29, #-84]
  41895c:	ldur	w9, [x29, #-76]
  418960:	orr	w0, w9, w8, lsl #10
  418964:	ldur	w1, [x29, #-80]
  418968:	ldr	x2, [sp, #88]
  41896c:	mov	w3, #0x6c3                 	// #1731
  418970:	ldr	x4, [sp, #80]
  418974:	adrp	x5, 42d000 <_fini+0x33a8>
  418978:	add	x5, x5, #0x289
  41897c:	bl	405648 <log_internal_realm@plt>
  418980:	str	w0, [sp, #40]
  418984:	b	41899c <dispatch_notify_event+0x2c8>
  418988:	ldur	w0, [x29, #-80]
  41898c:	bl	405658 <abs@plt>
  418990:	mov	w8, wzr
  418994:	subs	w8, w8, w0, uxtb
  418998:	str	w8, [sp, #40]
  41899c:	ldr	w8, [sp, #40]
  4189a0:	stur	w8, [x29, #-88]
  4189a4:	b	418b54 <dispatch_notify_event+0x480>
  4189a8:	ldur	x8, [x29, #-40]
  4189ac:	ldrb	w9, [x8, #592]
  4189b0:	mov	w10, #0x1                   	// #1
  4189b4:	lsr	w9, w9, w10
  4189b8:	and	w9, w9, w10
  4189bc:	tbnz	w9, #0, 4189c4 <dispatch_notify_event+0x2f0>
  4189c0:	b	418b3c <dispatch_notify_event+0x468>
  4189c4:	ldur	x8, [x29, #-40]
  4189c8:	ldr	w0, [x8, #24]
  4189cc:	adrp	x8, 430000 <_fini+0x63a8>
  4189d0:	add	x8, x8, #0x53f
  4189d4:	str	w0, [sp, #36]
  4189d8:	mov	x0, x8
  4189dc:	str	x8, [sp, #24]
  4189e0:	bl	405738 <strlen@plt>
  4189e4:	ldr	w9, [sp, #36]
  4189e8:	str	x0, [sp, #16]
  4189ec:	mov	w0, w9
  4189f0:	ldr	x1, [sp, #24]
  4189f4:	ldr	x2, [sp, #16]
  4189f8:	mov	w3, #0x40                  	// #64
  4189fc:	bl	4060f8 <send@plt>
  418a00:	stur	x0, [x29, #-96]
  418a04:	ldur	x8, [x29, #-96]
  418a08:	cmp	x8, #0x0
  418a0c:	cset	w9, ge  // ge = tcont
  418a10:	tbnz	w9, #0, 418ab4 <dispatch_notify_event+0x3e0>
  418a14:	bl	405768 <__errno_location@plt>
  418a18:	ldr	w8, [x0]
  418a1c:	cmp	w8, #0xb
  418a20:	b.ne	418a2c <dispatch_notify_event+0x358>  // b.any
  418a24:	stur	wzr, [x29, #-4]
  418a28:	b	418c2c <dispatch_notify_event+0x558>
  418a2c:	mov	w8, #0x3                   	// #3
  418a30:	stur	w8, [x29, #-100]
  418a34:	bl	405768 <__errno_location@plt>
  418a38:	ldr	w8, [x0]
  418a3c:	stur	w8, [x29, #-104]
  418a40:	stur	wzr, [x29, #-108]
  418a44:	ldur	w0, [x29, #-108]
  418a48:	bl	405638 <log_get_max_level_realm@plt>
  418a4c:	ldur	w8, [x29, #-100]
  418a50:	and	w8, w8, #0x7
  418a54:	cmp	w0, w8
  418a58:	b.lt	418a8c <dispatch_notify_event+0x3b8>  // b.tstop
  418a5c:	ldur	w8, [x29, #-108]
  418a60:	ldur	w9, [x29, #-100]
  418a64:	orr	w0, w9, w8, lsl #10
  418a68:	ldur	w1, [x29, #-104]
  418a6c:	ldr	x2, [sp, #88]
  418a70:	mov	w3, #0x6d1                 	// #1745
  418a74:	ldr	x4, [sp, #80]
  418a78:	adrp	x5, 42d000 <_fini+0x33a8>
  418a7c:	add	x5, x5, #0x2a4
  418a80:	bl	405648 <log_internal_realm@plt>
  418a84:	str	w0, [sp, #12]
  418a88:	b	418aa0 <dispatch_notify_event+0x3cc>
  418a8c:	ldur	w0, [x29, #-104]
  418a90:	bl	405658 <abs@plt>
  418a94:	mov	w8, wzr
  418a98:	subs	w8, w8, w0, uxtb
  418a9c:	str	w8, [sp, #12]
  418aa0:	ldr	w8, [sp, #12]
  418aa4:	stur	w8, [x29, #-112]
  418aa8:	ldur	w8, [x29, #-112]
  418aac:	stur	w8, [x29, #-4]
  418ab0:	b	418c2c <dispatch_notify_event+0x558>
  418ab4:	ldur	x8, [x29, #-40]
  418ab8:	ldrb	w9, [x8, #592]
  418abc:	and	w9, w9, #0xfffffffd
  418ac0:	strb	w9, [x8, #592]
  418ac4:	mov	w9, #0x7                   	// #7
  418ac8:	stur	w9, [x29, #-116]
  418acc:	str	wzr, [sp, #120]
  418ad0:	str	wzr, [sp, #116]
  418ad4:	ldr	w0, [sp, #116]
  418ad8:	bl	405638 <log_get_max_level_realm@plt>
  418adc:	ldur	w9, [x29, #-116]
  418ae0:	and	w9, w9, #0x7
  418ae4:	cmp	w0, w9
  418ae8:	b.lt	418b1c <dispatch_notify_event+0x448>  // b.tstop
  418aec:	ldr	w8, [sp, #116]
  418af0:	ldur	w9, [x29, #-116]
  418af4:	orr	w0, w9, w8, lsl #10
  418af8:	ldr	w1, [sp, #120]
  418afc:	ldr	x2, [sp, #88]
  418b00:	mov	w3, #0x6d5                 	// #1749
  418b04:	ldr	x4, [sp, #80]
  418b08:	adrp	x5, 42d000 <_fini+0x33a8>
  418b0c:	add	x5, x5, #0x2d7
  418b10:	bl	405648 <log_internal_realm@plt>
  418b14:	str	w0, [sp, #8]
  418b18:	b	418b30 <dispatch_notify_event+0x45c>
  418b1c:	ldr	w0, [sp, #120]
  418b20:	bl	405658 <abs@plt>
  418b24:	mov	w8, wzr
  418b28:	subs	w8, w8, w0, uxtb
  418b2c:	str	w8, [sp, #8]
  418b30:	ldr	w8, [sp, #8]
  418b34:	str	w8, [sp, #112]
  418b38:	b	418b54 <dispatch_notify_event+0x480>
  418b3c:	ldur	x8, [x29, #-40]
  418b40:	ldr	x8, [x8, #512]
  418b44:	cbz	x8, 418b54 <dispatch_notify_event+0x480>
  418b48:	ldur	x8, [x29, #-40]
  418b4c:	ldr	x0, [x8, #512]
  418b50:	bl	41b024 <stdout_stream_send_notify>
  418b54:	ldur	x8, [x29, #-40]
  418b58:	ldrb	w9, [x8, #592]
  418b5c:	mov	w10, #0x1                   	// #1
  418b60:	lsr	w9, w9, w10
  418b64:	and	w9, w9, w10
  418b68:	tbnz	w9, #0, 418b78 <dispatch_notify_event+0x4a4>
  418b6c:	ldur	x8, [x29, #-40]
  418b70:	ldr	x8, [x8, #512]
  418b74:	cbz	x8, 418b80 <dispatch_notify_event+0x4ac>
  418b78:	stur	wzr, [x29, #-4]
  418b7c:	b	418c2c <dispatch_notify_event+0x558>
  418b80:	ldur	x0, [x29, #-16]
  418b84:	mov	w8, wzr
  418b88:	mov	w1, w8
  418b8c:	bl	405a98 <sd_event_source_set_enabled@plt>
  418b90:	stur	w0, [x29, #-44]
  418b94:	ldur	w8, [x29, #-44]
  418b98:	cmp	w8, #0x0
  418b9c:	cset	w8, ge  // ge = tcont
  418ba0:	tbnz	w8, #0, 418c28 <dispatch_notify_event+0x554>
  418ba4:	mov	w8, #0x3                   	// #3
  418ba8:	str	w8, [sp, #108]
  418bac:	ldur	w8, [x29, #-44]
  418bb0:	str	w8, [sp, #104]
  418bb4:	str	wzr, [sp, #100]
  418bb8:	ldr	w0, [sp, #100]
  418bbc:	bl	405638 <log_get_max_level_realm@plt>
  418bc0:	ldr	w8, [sp, #108]
  418bc4:	and	w8, w8, #0x7
  418bc8:	cmp	w0, w8
  418bcc:	b.lt	418c00 <dispatch_notify_event+0x52c>  // b.tstop
  418bd0:	ldr	w8, [sp, #100]
  418bd4:	ldr	w9, [sp, #108]
  418bd8:	orr	w0, w9, w8, lsl #10
  418bdc:	ldr	w1, [sp, #104]
  418be0:	ldr	x2, [sp, #88]
  418be4:	mov	w3, #0x6e2                 	// #1762
  418be8:	ldr	x4, [sp, #80]
  418bec:	adrp	x5, 42d000 <_fini+0x33a8>
  418bf0:	add	x5, x5, #0x2f5
  418bf4:	bl	405648 <log_internal_realm@plt>
  418bf8:	str	w0, [sp, #4]
  418bfc:	b	418c14 <dispatch_notify_event+0x540>
  418c00:	ldr	w0, [sp, #104]
  418c04:	bl	405658 <abs@plt>
  418c08:	mov	w8, wzr
  418c0c:	subs	w8, w8, w0, uxtb
  418c10:	str	w8, [sp, #4]
  418c14:	ldr	w8, [sp, #4]
  418c18:	str	w8, [sp, #96]
  418c1c:	ldr	w8, [sp, #96]
  418c20:	stur	w8, [x29, #-4]
  418c24:	b	418c2c <dispatch_notify_event+0x558>
  418c28:	stur	wzr, [x29, #-4]
  418c2c:	ldur	w0, [x29, #-4]
  418c30:	ldp	x29, x30, [sp, #240]
  418c34:	add	sp, sp, #0x100
  418c38:	ret

0000000000418c3c <dispatch_watchdog>:
  418c3c:	sub	sp, sp, #0x90
  418c40:	stp	x29, x30, [sp, #128]
  418c44:	add	x29, sp, #0x80
  418c48:	adrp	x8, 42a000 <_fini+0x3a8>
  418c4c:	add	x8, x8, #0x3c8
  418c50:	add	x8, x8, #0x3
  418c54:	adrp	x9, 42d000 <_fini+0x33a8>
  418c58:	add	x9, x9, #0x35b
  418c5c:	stur	x0, [x29, #-16]
  418c60:	stur	x1, [x29, #-24]
  418c64:	stur	x2, [x29, #-32]
  418c68:	ldur	x10, [x29, #-32]
  418c6c:	stur	x10, [x29, #-40]
  418c70:	str	x8, [sp, #24]
  418c74:	str	x9, [sp, #16]
  418c78:	ldur	x8, [x29, #-40]
  418c7c:	cmp	x8, #0x0
  418c80:	cset	w9, ne  // ne = any
  418c84:	mov	w10, #0x1                   	// #1
  418c88:	eor	w9, w9, #0x1
  418c8c:	eor	w9, w9, w10
  418c90:	eor	w9, w9, w10
  418c94:	and	w9, w9, #0x1
  418c98:	mov	w0, w9
  418c9c:	sxtw	x8, w0
  418ca0:	cbz	x8, 418cc8 <dispatch_watchdog+0x8c>
  418ca4:	mov	w8, wzr
  418ca8:	mov	w0, w8
  418cac:	adrp	x1, 429000 <journal_ratelimit_group_free+0x70>
  418cb0:	add	x1, x1, #0xdc8
  418cb4:	ldr	x2, [sp, #24]
  418cb8:	mov	w3, #0x6eb                 	// #1771
  418cbc:	adrp	x4, 42d000 <_fini+0x33a8>
  418cc0:	add	x4, x4, #0x320
  418cc4:	bl	405718 <log_assert_failed_realm@plt>
  418cc8:	ldur	x8, [x29, #-40]
  418ccc:	ldrb	w9, [x8, #592]
  418cd0:	and	w9, w9, #0xfffffffd
  418cd4:	orr	w9, w9, #0x2
  418cd8:	strb	w9, [x8, #592]
  418cdc:	ldur	x8, [x29, #-40]
  418ce0:	ldr	x0, [x8, #136]
  418ce4:	mov	w1, #0x1                   	// #1
  418ce8:	bl	405a98 <sd_event_source_set_enabled@plt>
  418cec:	stur	w0, [x29, #-44]
  418cf0:	ldur	w9, [x29, #-44]
  418cf4:	cmp	w9, #0x0
  418cf8:	cset	w9, ge  // ge = tcont
  418cfc:	tbnz	w9, #0, 418d78 <dispatch_watchdog+0x13c>
  418d00:	mov	w8, #0x4                   	// #4
  418d04:	stur	w8, [x29, #-48]
  418d08:	ldur	w8, [x29, #-44]
  418d0c:	stur	w8, [x29, #-52]
  418d10:	stur	wzr, [x29, #-56]
  418d14:	ldur	w0, [x29, #-56]
  418d18:	bl	405638 <log_get_max_level_realm@plt>
  418d1c:	ldur	w8, [x29, #-48]
  418d20:	and	w8, w8, #0x7
  418d24:	cmp	w0, w8
  418d28:	b.lt	418d5c <dispatch_watchdog+0x120>  // b.tstop
  418d2c:	ldur	w8, [x29, #-56]
  418d30:	ldur	w9, [x29, #-48]
  418d34:	orr	w0, w9, w8, lsl #10
  418d38:	ldur	w1, [x29, #-52]
  418d3c:	ldr	x2, [sp, #24]
  418d40:	mov	w3, #0x6f1                 	// #1777
  418d44:	ldr	x4, [sp, #16]
  418d48:	adrp	x5, 42d000 <_fini+0x33a8>
  418d4c:	add	x5, x5, #0x36d
  418d50:	bl	405648 <log_internal_realm@plt>
  418d54:	str	w0, [sp, #12]
  418d58:	b	418d70 <dispatch_watchdog+0x134>
  418d5c:	ldur	w0, [x29, #-52]
  418d60:	bl	405658 <abs@plt>
  418d64:	mov	w8, wzr
  418d68:	subs	w8, w8, w0, uxtb
  418d6c:	str	w8, [sp, #12]
  418d70:	ldr	w8, [sp, #12]
  418d74:	stur	w8, [x29, #-60]
  418d78:	ldur	x8, [x29, #-40]
  418d7c:	ldr	x0, [x8, #144]
  418d80:	ldur	x8, [x29, #-24]
  418d84:	ldur	x9, [x29, #-40]
  418d88:	ldr	x9, [x9, #696]
  418d8c:	mov	x10, #0x2                   	// #2
  418d90:	udiv	x9, x9, x10
  418d94:	add	x1, x8, x9
  418d98:	bl	405cb8 <sd_event_source_set_time@plt>
  418d9c:	stur	w0, [x29, #-44]
  418da0:	ldur	w11, [x29, #-44]
  418da4:	cmp	w11, #0x0
  418da8:	cset	w11, ge  // ge = tcont
  418dac:	tbnz	w11, #0, 418e34 <dispatch_watchdog+0x1f8>
  418db0:	mov	w8, #0x3                   	// #3
  418db4:	str	w8, [sp, #64]
  418db8:	ldur	w8, [x29, #-44]
  418dbc:	str	w8, [sp, #60]
  418dc0:	str	wzr, [sp, #56]
  418dc4:	ldr	w0, [sp, #56]
  418dc8:	bl	405638 <log_get_max_level_realm@plt>
  418dcc:	ldr	w8, [sp, #64]
  418dd0:	and	w8, w8, #0x7
  418dd4:	cmp	w0, w8
  418dd8:	b.lt	418e0c <dispatch_watchdog+0x1d0>  // b.tstop
  418ddc:	ldr	w8, [sp, #56]
  418de0:	ldr	w9, [sp, #64]
  418de4:	orr	w0, w9, w8, lsl #10
  418de8:	ldr	w1, [sp, #60]
  418dec:	ldr	x2, [sp, #24]
  418df0:	mov	w3, #0x6f5                 	// #1781
  418df4:	ldr	x4, [sp, #16]
  418df8:	adrp	x5, 42d000 <_fini+0x33a8>
  418dfc:	add	x5, x5, #0x397
  418e00:	bl	405648 <log_internal_realm@plt>
  418e04:	str	w0, [sp, #8]
  418e08:	b	418e20 <dispatch_watchdog+0x1e4>
  418e0c:	ldr	w0, [sp, #60]
  418e10:	bl	405658 <abs@plt>
  418e14:	mov	w8, wzr
  418e18:	subs	w8, w8, w0, uxtb
  418e1c:	str	w8, [sp, #8]
  418e20:	ldr	w8, [sp, #8]
  418e24:	str	w8, [sp, #52]
  418e28:	ldr	w8, [sp, #52]
  418e2c:	stur	w8, [x29, #-4]
  418e30:	b	418ee0 <dispatch_watchdog+0x2a4>
  418e34:	ldur	x8, [x29, #-40]
  418e38:	ldr	x0, [x8, #144]
  418e3c:	mov	w1, #0x1                   	// #1
  418e40:	bl	405a98 <sd_event_source_set_enabled@plt>
  418e44:	stur	w0, [x29, #-44]
  418e48:	ldur	w9, [x29, #-44]
  418e4c:	cmp	w9, #0x0
  418e50:	cset	w9, ge  // ge = tcont
  418e54:	tbnz	w9, #0, 418edc <dispatch_watchdog+0x2a0>
  418e58:	mov	w8, #0x3                   	// #3
  418e5c:	str	w8, [sp, #48]
  418e60:	ldur	w8, [x29, #-44]
  418e64:	str	w8, [sp, #44]
  418e68:	str	wzr, [sp, #40]
  418e6c:	ldr	w0, [sp, #40]
  418e70:	bl	405638 <log_get_max_level_realm@plt>
  418e74:	ldr	w8, [sp, #48]
  418e78:	and	w8, w8, #0x7
  418e7c:	cmp	w0, w8
  418e80:	b.lt	418eb4 <dispatch_watchdog+0x278>  // b.tstop
  418e84:	ldr	w8, [sp, #40]
  418e88:	ldr	w9, [sp, #48]
  418e8c:	orr	w0, w9, w8, lsl #10
  418e90:	ldr	w1, [sp, #44]
  418e94:	ldr	x2, [sp, #24]
  418e98:	mov	w3, #0x6f9                 	// #1785
  418e9c:	ldr	x4, [sp, #16]
  418ea0:	adrp	x5, 42d000 <_fini+0x33a8>
  418ea4:	add	x5, x5, #0x3c3
  418ea8:	bl	405648 <log_internal_realm@plt>
  418eac:	str	w0, [sp, #4]
  418eb0:	b	418ec8 <dispatch_watchdog+0x28c>
  418eb4:	ldr	w0, [sp, #44]
  418eb8:	bl	405658 <abs@plt>
  418ebc:	mov	w8, wzr
  418ec0:	subs	w8, w8, w0, uxtb
  418ec4:	str	w8, [sp, #4]
  418ec8:	ldr	w8, [sp, #4]
  418ecc:	str	w8, [sp, #36]
  418ed0:	ldr	w8, [sp, #36]
  418ed4:	stur	w8, [x29, #-4]
  418ed8:	b	418ee0 <dispatch_watchdog+0x2a4>
  418edc:	stur	wzr, [x29, #-4]
  418ee0:	ldur	w0, [x29, #-4]
  418ee4:	ldp	x29, x30, [sp, #128]
  418ee8:	add	sp, sp, #0x90
  418eec:	ret

0000000000418ef0 <stdout_stream_free>:
  418ef0:	sub	sp, sp, #0x50
  418ef4:	stp	x29, x30, [sp, #64]
  418ef8:	add	x29, sp, #0x40
  418efc:	adrp	x8, 42d000 <_fini+0x33a8>
  418f00:	add	x8, x8, #0x436
  418f04:	add	x8, x8, #0x3
  418f08:	adrp	x9, 42d000 <_fini+0x33a8>
  418f0c:	add	x9, x9, #0x457
  418f10:	stur	x0, [x29, #-8]
  418f14:	ldur	x10, [x29, #-8]
  418f18:	str	x8, [sp, #16]
  418f1c:	str	x9, [sp, #8]
  418f20:	cbnz	x10, 418f28 <stdout_stream_free+0x38>
  418f24:	b	4192a4 <stdout_stream_free+0x3b4>
  418f28:	ldur	x8, [x29, #-8]
  418f2c:	ldr	x8, [x8]
  418f30:	cbz	x8, 419218 <stdout_stream_free+0x328>
  418f34:	ldur	x8, [x29, #-8]
  418f38:	ldr	x8, [x8, #104]
  418f3c:	cbz	x8, 418f54 <stdout_stream_free+0x64>
  418f40:	ldur	x8, [x29, #-8]
  418f44:	ldr	x0, [x8]
  418f48:	ldur	x8, [x29, #-8]
  418f4c:	ldr	x1, [x8, #104]
  418f50:	bl	423c3c <client_context_release>
  418f54:	ldur	x8, [x29, #-8]
  418f58:	ldr	x8, [x8]
  418f5c:	ldr	w9, [x8, #520]
  418f60:	cmp	w9, #0x0
  418f64:	cset	w9, hi  // hi = pmore
  418f68:	mov	w10, #0x1                   	// #1
  418f6c:	eor	w9, w9, #0x1
  418f70:	eor	w9, w9, w10
  418f74:	eor	w9, w9, w10
  418f78:	and	w9, w9, #0x1
  418f7c:	mov	w0, w9
  418f80:	sxtw	x8, w0
  418f84:	cbz	x8, 418fa8 <stdout_stream_free+0xb8>
  418f88:	mov	w8, wzr
  418f8c:	mov	w0, w8
  418f90:	adrp	x1, 42d000 <_fini+0x33a8>
  418f94:	add	x1, x1, #0x416
  418f98:	ldr	x2, [sp, #16]
  418f9c:	mov	w3, #0x6a                  	// #106
  418fa0:	ldr	x4, [sp, #8]
  418fa4:	bl	405718 <log_assert_failed_realm@plt>
  418fa8:	ldur	x8, [x29, #-8]
  418fac:	ldr	x8, [x8]
  418fb0:	ldr	w9, [x8, #520]
  418fb4:	subs	w9, w9, #0x1
  418fb8:	str	w9, [x8, #520]
  418fbc:	ldur	x8, [x29, #-8]
  418fc0:	ldr	x8, [x8]
  418fc4:	add	x8, x8, #0x1f8
  418fc8:	stur	x8, [x29, #-16]
  418fcc:	ldur	x8, [x29, #-8]
  418fd0:	stur	x8, [x29, #-24]
  418fd4:	ldur	x8, [x29, #-24]
  418fd8:	cmp	x8, #0x0
  418fdc:	cset	w9, ne  // ne = any
  418fe0:	mov	w10, #0x1                   	// #1
  418fe4:	eor	w9, w9, #0x1
  418fe8:	eor	w9, w9, w10
  418fec:	eor	w9, w9, w10
  418ff0:	and	w9, w9, #0x1
  418ff4:	mov	w0, w9
  418ff8:	sxtw	x8, w0
  418ffc:	cbz	x8, 419020 <stdout_stream_free+0x130>
  419000:	mov	w8, wzr
  419004:	mov	w0, w8
  419008:	adrp	x1, 42d000 <_fini+0x33a8>
  41900c:	add	x1, x1, #0x47f
  419010:	ldr	x2, [sp, #16]
  419014:	mov	w3, #0x6c                  	// #108
  419018:	ldr	x4, [sp, #8]
  41901c:	bl	405718 <log_assert_failed_realm@plt>
  419020:	ldur	x8, [x29, #-24]
  419024:	ldr	x8, [x8, #112]
  419028:	cbz	x8, 419040 <stdout_stream_free+0x150>
  41902c:	ldur	x8, [x29, #-24]
  419030:	ldr	x8, [x8, #120]
  419034:	ldur	x9, [x29, #-24]
  419038:	ldr	x9, [x9, #112]
  41903c:	str	x8, [x9, #120]
  419040:	ldur	x8, [x29, #-24]
  419044:	ldr	x8, [x8, #120]
  419048:	cbz	x8, 419064 <stdout_stream_free+0x174>
  41904c:	ldur	x8, [x29, #-24]
  419050:	ldr	x8, [x8, #112]
  419054:	ldur	x9, [x29, #-24]
  419058:	ldr	x9, [x9, #120]
  41905c:	str	x8, [x9, #112]
  419060:	b	4190c8 <stdout_stream_free+0x1d8>
  419064:	ldur	x8, [x29, #-16]
  419068:	ldr	x8, [x8]
  41906c:	ldur	x9, [x29, #-24]
  419070:	cmp	x8, x9
  419074:	cset	w10, eq  // eq = none
  419078:	mov	w11, #0x1                   	// #1
  41907c:	eor	w10, w10, #0x1
  419080:	eor	w10, w10, w11
  419084:	eor	w10, w10, w11
  419088:	and	w10, w10, #0x1
  41908c:	mov	w0, w10
  419090:	sxtw	x8, w0
  419094:	cbz	x8, 4190b8 <stdout_stream_free+0x1c8>
  419098:	mov	w8, wzr
  41909c:	mov	w0, w8
  4190a0:	adrp	x1, 42d000 <_fini+0x33a8>
  4190a4:	add	x1, x1, #0x485
  4190a8:	ldr	x2, [sp, #16]
  4190ac:	mov	w3, #0x6c                  	// #108
  4190b0:	ldr	x4, [sp, #8]
  4190b4:	bl	405718 <log_assert_failed_realm@plt>
  4190b8:	ldur	x8, [x29, #-24]
  4190bc:	ldr	x8, [x8, #112]
  4190c0:	ldur	x9, [x29, #-16]
  4190c4:	str	x8, [x9]
  4190c8:	ldur	x8, [x29, #-24]
  4190cc:	mov	x9, xzr
  4190d0:	str	x9, [x8, #120]
  4190d4:	ldur	x8, [x29, #-24]
  4190d8:	str	x9, [x8, #112]
  4190dc:	ldur	x8, [x29, #-8]
  4190e0:	ldrb	w9, [x8, #60]
  4190e4:	mov	w10, #0x5                   	// #5
  4190e8:	lsr	w9, w9, w10
  4190ec:	and	w9, w9, #0x1
  4190f0:	tbnz	w9, #0, 4190f8 <stdout_stream_free+0x208>
  4190f4:	b	419218 <stdout_stream_free+0x328>
  4190f8:	ldur	x8, [x29, #-8]
  4190fc:	ldr	x8, [x8]
  419100:	add	x8, x8, #0x200
  419104:	str	x8, [sp, #32]
  419108:	ldur	x8, [x29, #-8]
  41910c:	str	x8, [sp, #24]
  419110:	ldr	x8, [sp, #24]
  419114:	cmp	x8, #0x0
  419118:	cset	w9, ne  // ne = any
  41911c:	mov	w10, #0x1                   	// #1
  419120:	eor	w9, w9, #0x1
  419124:	eor	w9, w9, w10
  419128:	eor	w9, w9, w10
  41912c:	and	w9, w9, #0x1
  419130:	mov	w0, w9
  419134:	sxtw	x8, w0
  419138:	cbz	x8, 41915c <stdout_stream_free+0x26c>
  41913c:	mov	w8, wzr
  419140:	mov	w0, w8
  419144:	adrp	x1, 42d000 <_fini+0x33a8>
  419148:	add	x1, x1, #0x47f
  41914c:	ldr	x2, [sp, #16]
  419150:	mov	w3, #0x6f                  	// #111
  419154:	ldr	x4, [sp, #8]
  419158:	bl	405718 <log_assert_failed_realm@plt>
  41915c:	ldr	x8, [sp, #24]
  419160:	ldr	x8, [x8, #128]
  419164:	cbz	x8, 41917c <stdout_stream_free+0x28c>
  419168:	ldr	x8, [sp, #24]
  41916c:	ldr	x8, [x8, #136]
  419170:	ldr	x9, [sp, #24]
  419174:	ldr	x9, [x9, #128]
  419178:	str	x8, [x9, #136]
  41917c:	ldr	x8, [sp, #24]
  419180:	ldr	x8, [x8, #136]
  419184:	cbz	x8, 4191a0 <stdout_stream_free+0x2b0>
  419188:	ldr	x8, [sp, #24]
  41918c:	ldr	x8, [x8, #128]
  419190:	ldr	x9, [sp, #24]
  419194:	ldr	x9, [x9, #136]
  419198:	str	x8, [x9, #128]
  41919c:	b	419204 <stdout_stream_free+0x314>
  4191a0:	ldr	x8, [sp, #32]
  4191a4:	ldr	x8, [x8]
  4191a8:	ldr	x9, [sp, #24]
  4191ac:	cmp	x8, x9
  4191b0:	cset	w10, eq  // eq = none
  4191b4:	mov	w11, #0x1                   	// #1
  4191b8:	eor	w10, w10, #0x1
  4191bc:	eor	w10, w10, w11
  4191c0:	eor	w10, w10, w11
  4191c4:	and	w10, w10, #0x1
  4191c8:	mov	w0, w10
  4191cc:	sxtw	x8, w0
  4191d0:	cbz	x8, 4191f4 <stdout_stream_free+0x304>
  4191d4:	mov	w8, wzr
  4191d8:	mov	w0, w8
  4191dc:	adrp	x1, 42d000 <_fini+0x33a8>
  4191e0:	add	x1, x1, #0x485
  4191e4:	ldr	x2, [sp, #16]
  4191e8:	mov	w3, #0x6f                  	// #111
  4191ec:	ldr	x4, [sp, #8]
  4191f0:	bl	405718 <log_assert_failed_realm@plt>
  4191f4:	ldr	x8, [sp, #24]
  4191f8:	ldr	x8, [x8, #128]
  4191fc:	ldr	x9, [sp, #32]
  419200:	str	x8, [x9]
  419204:	ldr	x8, [sp, #24]
  419208:	mov	x9, xzr
  41920c:	str	x9, [x8, #136]
  419210:	ldr	x8, [sp, #24]
  419214:	str	x9, [x8, #128]
  419218:	ldur	x8, [x29, #-8]
  41921c:	ldr	x8, [x8, #88]
  419220:	cbz	x8, 419250 <stdout_stream_free+0x360>
  419224:	ldur	x8, [x29, #-8]
  419228:	ldr	x0, [x8, #88]
  41922c:	mov	w9, wzr
  419230:	mov	w1, w9
  419234:	bl	405a98 <sd_event_source_set_enabled@plt>
  419238:	ldur	x8, [x29, #-8]
  41923c:	ldr	x8, [x8, #88]
  419240:	mov	x0, x8
  419244:	bl	405888 <sd_event_source_unref@plt>
  419248:	ldur	x8, [x29, #-8]
  41924c:	str	x0, [x8, #88]
  419250:	ldur	x8, [x29, #-8]
  419254:	ldr	w0, [x8, #12]
  419258:	bl	4058c8 <safe_close@plt>
  41925c:	ldur	x8, [x29, #-8]
  419260:	ldr	x8, [x8, #32]
  419264:	mov	x0, x8
  419268:	bl	405778 <free@plt>
  41926c:	ldur	x8, [x29, #-8]
  419270:	ldr	x0, [x8, #40]
  419274:	bl	405778 <free@plt>
  419278:	ldur	x8, [x29, #-8]
  41927c:	ldr	x0, [x8, #48]
  419280:	bl	405778 <free@plt>
  419284:	ldur	x8, [x29, #-8]
  419288:	ldr	x0, [x8, #96]
  41928c:	bl	405778 <free@plt>
  419290:	ldur	x8, [x29, #-8]
  419294:	ldr	x0, [x8, #64]
  419298:	bl	405778 <free@plt>
  41929c:	ldur	x0, [x29, #-8]
  4192a0:	bl	405778 <free@plt>
  4192a4:	ldp	x29, x30, [sp, #64]
  4192a8:	add	sp, sp, #0x50
  4192ac:	ret

00000000004192b0 <stdout_stream_destroy>:
  4192b0:	sub	sp, sp, #0x20
  4192b4:	stp	x29, x30, [sp, #16]
  4192b8:	add	x29, sp, #0x10
  4192bc:	str	x0, [sp, #8]
  4192c0:	ldr	x8, [sp, #8]
  4192c4:	cbnz	x8, 4192cc <stdout_stream_destroy+0x1c>
  4192c8:	b	4192ec <stdout_stream_destroy+0x3c>
  4192cc:	ldr	x8, [sp, #8]
  4192d0:	ldr	x8, [x8, #96]
  4192d4:	cbz	x8, 4192e4 <stdout_stream_destroy+0x34>
  4192d8:	ldr	x8, [sp, #8]
  4192dc:	ldr	x0, [x8, #96]
  4192e0:	bl	4060c8 <unlink@plt>
  4192e4:	ldr	x0, [sp, #8]
  4192e8:	bl	418ef0 <stdout_stream_free>
  4192ec:	ldp	x29, x30, [sp, #16]
  4192f0:	add	sp, sp, #0x20
  4192f4:	ret

00000000004192f8 <stdout_stream_install>:
  4192f8:	sub	sp, sp, #0x160
  4192fc:	stp	x29, x30, [sp, #320]
  419300:	str	x28, [sp, #336]
  419304:	add	x29, sp, #0x140
  419308:	mov	x8, xzr
  41930c:	adrp	x9, 42d000 <_fini+0x33a8>
  419310:	add	x9, x9, #0x436
  419314:	add	x9, x9, #0x3
  419318:	adrp	x10, 42d000 <_fini+0x33a8>
  41931c:	add	x10, x10, #0x4d7
  419320:	adrp	x11, 42d000 <_fini+0x33a8>
  419324:	add	x11, x11, #0x495
  419328:	stur	x0, [x29, #-16]
  41932c:	stur	w1, [x29, #-20]
  419330:	stur	x2, [x29, #-32]
  419334:	stur	x8, [x29, #-40]
  419338:	str	x9, [sp, #136]
  41933c:	str	x10, [sp, #128]
  419340:	str	x11, [sp, #120]
  419344:	ldur	x8, [x29, #-16]
  419348:	cmp	x8, #0x0
  41934c:	cset	w9, ne  // ne = any
  419350:	mov	w10, #0x1                   	// #1
  419354:	eor	w9, w9, #0x1
  419358:	eor	w9, w9, w10
  41935c:	eor	w9, w9, w10
  419360:	and	w9, w9, #0x1
  419364:	mov	w0, w9
  419368:	sxtw	x8, w0
  41936c:	cbz	x8, 419390 <stdout_stream_install+0x98>
  419370:	mov	w8, wzr
  419374:	mov	w0, w8
  419378:	adrp	x1, 429000 <journal_ratelimit_group_free+0x70>
  41937c:	add	x1, x1, #0xdc8
  419380:	ldr	x2, [sp, #136]
  419384:	mov	w3, #0x24a                 	// #586
  419388:	ldr	x4, [sp, #120]
  41938c:	bl	405718 <log_assert_failed_realm@plt>
  419390:	ldur	w8, [x29, #-20]
  419394:	cmp	w8, #0x0
  419398:	cset	w8, ge  // ge = tcont
  41939c:	mov	w9, #0x1                   	// #1
  4193a0:	eor	w8, w8, #0x1
  4193a4:	eor	w8, w8, w9
  4193a8:	eor	w8, w8, w9
  4193ac:	and	w8, w8, #0x1
  4193b0:	mov	w0, w8
  4193b4:	sxtw	x10, w0
  4193b8:	cbz	x10, 4193dc <stdout_stream_install+0xe4>
  4193bc:	mov	w8, wzr
  4193c0:	mov	w0, w8
  4193c4:	adrp	x1, 42d000 <_fini+0x33a8>
  4193c8:	add	x1, x1, #0x4cf
  4193cc:	ldr	x2, [sp, #136]
  4193d0:	mov	w3, #0x24b                 	// #587
  4193d4:	ldr	x4, [sp, #120]
  4193d8:	bl	405718 <log_assert_failed_realm@plt>
  4193dc:	sub	x0, x29, #0x38
  4193e0:	bl	406108 <sd_id128_randomize@plt>
  4193e4:	stur	w0, [x29, #-60]
  4193e8:	ldur	w8, [x29, #-60]
  4193ec:	cmp	w8, #0x0
  4193f0:	cset	w8, ge  // ge = tcont
  4193f4:	tbnz	w8, #0, 419484 <stdout_stream_install+0x18c>
  4193f8:	mov	w8, #0x3                   	// #3
  4193fc:	stur	w8, [x29, #-64]
  419400:	ldur	w8, [x29, #-60]
  419404:	stur	w8, [x29, #-68]
  419408:	stur	wzr, [x29, #-72]
  41940c:	ldur	w0, [x29, #-72]
  419410:	bl	405638 <log_get_max_level_realm@plt>
  419414:	ldur	w8, [x29, #-64]
  419418:	and	w8, w8, #0x7
  41941c:	cmp	w0, w8
  419420:	b.lt	419454 <stdout_stream_install+0x15c>  // b.tstop
  419424:	ldur	w8, [x29, #-72]
  419428:	ldur	w9, [x29, #-64]
  41942c:	orr	w0, w9, w8, lsl #10
  419430:	ldur	w1, [x29, #-68]
  419434:	ldr	x2, [sp, #136]
  419438:	mov	w3, #0x24f                 	// #591
  41943c:	ldr	x4, [sp, #128]
  419440:	adrp	x5, 42d000 <_fini+0x33a8>
  419444:	add	x5, x5, #0x4ed
  419448:	bl	405648 <log_internal_realm@plt>
  41944c:	str	w0, [sp, #116]
  419450:	b	419468 <stdout_stream_install+0x170>
  419454:	ldur	w0, [x29, #-68]
  419458:	bl	405658 <abs@plt>
  41945c:	mov	w8, wzr
  419460:	subs	w8, w8, w0, uxtb
  419464:	str	w8, [sp, #116]
  419468:	ldr	w8, [sp, #116]
  41946c:	stur	w8, [x29, #-76]
  419470:	ldur	w8, [x29, #-76]
  419474:	stur	w8, [x29, #-4]
  419478:	mov	w8, #0x1                   	// #1
  41947c:	stur	w8, [x29, #-80]
  419480:	b	419a84 <stdout_stream_install+0x78c>
  419484:	mov	x0, #0x1                   	// #1
  419488:	mov	x1, #0xc0                  	// #192
  41948c:	bl	406118 <calloc@plt>
  419490:	stur	x0, [x29, #-40]
  419494:	ldur	x8, [x29, #-40]
  419498:	cbnz	x8, 4194c4 <stdout_stream_install+0x1cc>
  41949c:	mov	w8, wzr
  4194a0:	mov	w0, w8
  4194a4:	ldr	x1, [sp, #136]
  4194a8:	mov	w2, #0x253                 	// #595
  4194ac:	ldr	x3, [sp, #128]
  4194b0:	bl	405958 <log_oom_internal@plt>
  4194b4:	stur	w0, [x29, #-4]
  4194b8:	mov	w8, #0x1                   	// #1
  4194bc:	stur	w8, [x29, #-80]
  4194c0:	b	419a84 <stdout_stream_install+0x78c>
  4194c4:	ldur	x8, [x29, #-40]
  4194c8:	mov	w9, #0xffffffff            	// #-1
  4194cc:	str	w9, [x8, #12]
  4194d0:	ldur	x8, [x29, #-40]
  4194d4:	mov	w9, #0x6                   	// #6
  4194d8:	str	w9, [x8, #56]
  4194dc:	ldur	x8, [x29, #-40]
  4194e0:	add	x0, x8, #0x90
  4194e4:	ldurb	w3, [x29, #-56]
  4194e8:	ldurb	w4, [x29, #-55]
  4194ec:	ldurb	w5, [x29, #-54]
  4194f0:	ldurb	w6, [x29, #-53]
  4194f4:	ldurb	w7, [x29, #-52]
  4194f8:	ldurb	w9, [x29, #-51]
  4194fc:	ldurb	w10, [x29, #-50]
  419500:	ldurb	w11, [x29, #-49]
  419504:	ldurb	w12, [x29, #-48]
  419508:	ldurb	w13, [x29, #-47]
  41950c:	ldurb	w14, [x29, #-46]
  419510:	ldurb	w15, [x29, #-45]
  419514:	ldurb	w16, [x29, #-44]
  419518:	ldurb	w17, [x29, #-43]
  41951c:	ldurb	w18, [x29, #-42]
  419520:	ldurb	w1, [x29, #-41]
  419524:	mov	x8, #0x2c                  	// #44
  419528:	str	w1, [sp, #112]
  41952c:	mov	x1, x8
  419530:	adrp	x2, 42d000 <_fini+0x33a8>
  419534:	add	x2, x2, #0x50e
  419538:	mov	x8, sp
  41953c:	str	w9, [x8]
  419540:	mov	x8, sp
  419544:	str	w10, [x8, #8]
  419548:	mov	x8, sp
  41954c:	str	w11, [x8, #16]
  419550:	mov	x8, sp
  419554:	str	w12, [x8, #24]
  419558:	mov	x8, sp
  41955c:	str	w13, [x8, #32]
  419560:	mov	x8, sp
  419564:	str	w14, [x8, #40]
  419568:	mov	x8, sp
  41956c:	str	w15, [x8, #48]
  419570:	mov	x8, sp
  419574:	str	w16, [x8, #56]
  419578:	mov	x8, sp
  41957c:	str	w17, [x8, #64]
  419580:	mov	x8, sp
  419584:	str	w18, [x8, #72]
  419588:	mov	x8, sp
  41958c:	ldr	w9, [sp, #112]
  419590:	str	w9, [x8, #80]
  419594:	bl	405728 <snprintf@plt>
  419598:	mov	w1, w0
  41959c:	sxtw	x8, w1
  4195a0:	cmp	x8, #0x2c
  4195a4:	cset	w9, cc  // cc = lo, ul, last
  4195a8:	mov	w10, #0x1                   	// #1
  4195ac:	eor	w9, w9, #0x1
  4195b0:	eor	w9, w9, w10
  4195b4:	eor	w9, w9, w10
  4195b8:	and	w9, w9, #0x1
  4195bc:	mov	w1, w9
  4195c0:	sxtw	x8, w1
  4195c4:	cbz	x8, 4195e8 <stdout_stream_install+0x2f0>
  4195c8:	mov	w8, wzr
  4195cc:	mov	w0, w8
  4195d0:	adrp	x1, 42d000 <_fini+0x33a8>
  4195d4:	add	x1, x1, #0x55a
  4195d8:	ldr	x2, [sp, #136]
  4195dc:	mov	w3, #0x258                 	// #600
  4195e0:	ldr	x4, [sp, #120]
  4195e4:	bl	405718 <log_assert_failed_realm@plt>
  4195e8:	ldur	w0, [x29, #-20]
  4195ec:	ldur	x8, [x29, #-40]
  4195f0:	add	x1, x8, #0x10
  4195f4:	bl	406128 <getpeercred@plt>
  4195f8:	stur	w0, [x29, #-60]
  4195fc:	ldur	w9, [x29, #-60]
  419600:	cmp	w9, #0x0
  419604:	cset	w9, ge  // ge = tcont
  419608:	tbnz	w9, #0, 419698 <stdout_stream_install+0x3a0>
  41960c:	mov	w8, #0x3                   	// #3
  419610:	stur	w8, [x29, #-84]
  419614:	ldur	w8, [x29, #-60]
  419618:	stur	w8, [x29, #-88]
  41961c:	stur	wzr, [x29, #-92]
  419620:	ldur	w0, [x29, #-92]
  419624:	bl	405638 <log_get_max_level_realm@plt>
  419628:	ldur	w8, [x29, #-84]
  41962c:	and	w8, w8, #0x7
  419630:	cmp	w0, w8
  419634:	b.lt	419668 <stdout_stream_install+0x370>  // b.tstop
  419638:	ldur	w8, [x29, #-92]
  41963c:	ldur	w9, [x29, #-84]
  419640:	orr	w0, w9, w8, lsl #10
  419644:	ldur	w1, [x29, #-88]
  419648:	ldr	x2, [sp, #136]
  41964c:	mov	w3, #0x25c                 	// #604
  419650:	ldr	x4, [sp, #128]
  419654:	adrp	x5, 42d000 <_fini+0x33a8>
  419658:	add	x5, x5, #0x58a
  41965c:	bl	405648 <log_internal_realm@plt>
  419660:	str	w0, [sp, #108]
  419664:	b	41967c <stdout_stream_install+0x384>
  419668:	ldur	w0, [x29, #-88]
  41966c:	bl	405658 <abs@plt>
  419670:	mov	w8, wzr
  419674:	subs	w8, w8, w0, uxtb
  419678:	str	w8, [sp, #108]
  41967c:	ldr	w8, [sp, #108]
  419680:	stur	w8, [x29, #-96]
  419684:	ldur	w8, [x29, #-96]
  419688:	stur	w8, [x29, #-4]
  41968c:	mov	w8, #0x1                   	// #1
  419690:	stur	w8, [x29, #-80]
  419694:	b	419a84 <stdout_stream_install+0x78c>
  419698:	ldur	w0, [x29, #-20]
  41969c:	mov	w8, #0x1                   	// #1
  4196a0:	mov	w1, w8
  4196a4:	mov	w2, #0x10                  	// #16
  4196a8:	mov	w3, w8
  4196ac:	bl	419ad4 <setsockopt_int>
  4196b0:	stur	w0, [x29, #-60]
  4196b4:	ldur	w8, [x29, #-60]
  4196b8:	cmp	w8, #0x0
  4196bc:	cset	w8, ge  // ge = tcont
  4196c0:	tbnz	w8, #0, 419750 <stdout_stream_install+0x458>
  4196c4:	mov	w8, #0x3                   	// #3
  4196c8:	stur	w8, [x29, #-100]
  4196cc:	ldur	w8, [x29, #-60]
  4196d0:	stur	w8, [x29, #-104]
  4196d4:	stur	wzr, [x29, #-108]
  4196d8:	ldur	w0, [x29, #-108]
  4196dc:	bl	405638 <log_get_max_level_realm@plt>
  4196e0:	ldur	w8, [x29, #-100]
  4196e4:	and	w8, w8, #0x7
  4196e8:	cmp	w0, w8
  4196ec:	b.lt	419720 <stdout_stream_install+0x428>  // b.tstop
  4196f0:	ldur	w8, [x29, #-108]
  4196f4:	ldur	w9, [x29, #-100]
  4196f8:	orr	w0, w9, w8, lsl #10
  4196fc:	ldur	w1, [x29, #-104]
  419700:	ldr	x2, [sp, #136]
  419704:	mov	w3, #0x260                 	// #608
  419708:	ldr	x4, [sp, #128]
  41970c:	adrp	x5, 42d000 <_fini+0x33a8>
  419710:	add	x5, x5, #0x5b3
  419714:	bl	405648 <log_internal_realm@plt>
  419718:	str	w0, [sp, #104]
  41971c:	b	419734 <stdout_stream_install+0x43c>
  419720:	ldur	w0, [x29, #-104]
  419724:	bl	405658 <abs@plt>
  419728:	mov	w8, wzr
  41972c:	subs	w8, w8, w0, uxtb
  419730:	str	w8, [sp, #104]
  419734:	ldr	w8, [sp, #104]
  419738:	stur	w8, [x29, #-112]
  41973c:	ldur	w8, [x29, #-112]
  419740:	stur	w8, [x29, #-4]
  419744:	mov	w8, #0x1                   	// #1
  419748:	stur	w8, [x29, #-80]
  41974c:	b	419a84 <stdout_stream_install+0x78c>
  419750:	bl	406138 <mac_selinux_use@plt>
  419754:	tbnz	w0, #0, 41975c <stdout_stream_install+0x464>
  419758:	b	419808 <stdout_stream_install+0x510>
  41975c:	ldur	w0, [x29, #-20]
  419760:	ldur	x8, [x29, #-40]
  419764:	add	x1, x8, #0x20
  419768:	bl	406148 <getpeersec@plt>
  41976c:	stur	w0, [x29, #-60]
  419770:	ldur	w9, [x29, #-60]
  419774:	cmp	w9, #0x0
  419778:	cset	w9, ge  // ge = tcont
  41977c:	tbnz	w9, #0, 419808 <stdout_stream_install+0x510>
  419780:	ldur	w8, [x29, #-60]
  419784:	mov	w9, #0xffffffa1            	// #-95
  419788:	cmp	w8, w9
  41978c:	b.eq	419808 <stdout_stream_install+0x510>  // b.none
  419790:	mov	w8, #0x4                   	// #4
  419794:	stur	w8, [x29, #-116]
  419798:	ldur	w8, [x29, #-60]
  41979c:	stur	w8, [x29, #-120]
  4197a0:	stur	wzr, [x29, #-124]
  4197a4:	ldur	w0, [x29, #-124]
  4197a8:	bl	405638 <log_get_max_level_realm@plt>
  4197ac:	ldur	w8, [x29, #-116]
  4197b0:	and	w8, w8, #0x7
  4197b4:	cmp	w0, w8
  4197b8:	b.lt	4197ec <stdout_stream_install+0x4f4>  // b.tstop
  4197bc:	ldur	w8, [x29, #-124]
  4197c0:	ldur	w9, [x29, #-116]
  4197c4:	orr	w0, w9, w8, lsl #10
  4197c8:	ldur	w1, [x29, #-120]
  4197cc:	ldr	x2, [sp, #136]
  4197d0:	mov	w3, #0x265                 	// #613
  4197d4:	ldr	x4, [sp, #128]
  4197d8:	adrp	x5, 42d000 <_fini+0x33a8>
  4197dc:	add	x5, x5, #0x5ca
  4197e0:	bl	405648 <log_internal_realm@plt>
  4197e4:	str	w0, [sp, #100]
  4197e8:	b	419800 <stdout_stream_install+0x508>
  4197ec:	ldur	w0, [x29, #-120]
  4197f0:	bl	405658 <abs@plt>
  4197f4:	mov	w8, wzr
  4197f8:	subs	w8, w8, w0, uxtb
  4197fc:	str	w8, [sp, #100]
  419800:	ldr	w8, [sp, #100]
  419804:	stur	w8, [x29, #-128]
  419808:	ldur	w0, [x29, #-20]
  41980c:	mov	w8, #0x1                   	// #1
  419810:	mov	w1, w8
  419814:	str	w8, [sp, #96]
  419818:	bl	406158 <shutdown@plt>
  41981c:	ldur	x9, [x29, #-16]
  419820:	ldr	x9, [x9, #32]
  419824:	ldur	x10, [x29, #-40]
  419828:	add	x1, x10, #0x58
  41982c:	ldur	w2, [x29, #-20]
  419830:	ldur	x5, [x29, #-40]
  419834:	mov	x0, x9
  419838:	ldr	w3, [sp, #96]
  41983c:	adrp	x4, 419000 <stdout_stream_free+0x110>
  419840:	add	x4, x4, #0xb44
  419844:	bl	4058a8 <sd_event_add_io@plt>
  419848:	stur	w0, [x29, #-60]
  41984c:	ldur	w8, [x29, #-60]
  419850:	cmp	w8, #0x0
  419854:	cset	w8, ge  // ge = tcont
  419858:	tbnz	w8, #0, 4198e8 <stdout_stream_install+0x5f0>
  41985c:	mov	w8, #0x3                   	// #3
  419860:	stur	w8, [x29, #-132]
  419864:	ldur	w8, [x29, #-60]
  419868:	stur	w8, [x29, #-136]
  41986c:	stur	wzr, [x29, #-140]
  419870:	ldur	w0, [x29, #-140]
  419874:	bl	405638 <log_get_max_level_realm@plt>
  419878:	ldur	w8, [x29, #-132]
  41987c:	and	w8, w8, #0x7
  419880:	cmp	w0, w8
  419884:	b.lt	4198b8 <stdout_stream_install+0x5c0>  // b.tstop
  419888:	ldur	w8, [x29, #-140]
  41988c:	ldur	w9, [x29, #-132]
  419890:	orr	w0, w9, w8, lsl #10
  419894:	ldur	w1, [x29, #-136]
  419898:	ldr	x2, [sp, #136]
  41989c:	mov	w3, #0x26c                 	// #620
  4198a0:	ldr	x4, [sp, #128]
  4198a4:	adrp	x5, 42d000 <_fini+0x33a8>
  4198a8:	add	x5, x5, #0x5f8
  4198ac:	bl	405648 <log_internal_realm@plt>
  4198b0:	str	w0, [sp, #92]
  4198b4:	b	4198cc <stdout_stream_install+0x5d4>
  4198b8:	ldur	w0, [x29, #-136]
  4198bc:	bl	405658 <abs@plt>
  4198c0:	mov	w8, wzr
  4198c4:	subs	w8, w8, w0, uxtb
  4198c8:	str	w8, [sp, #92]
  4198cc:	ldr	w8, [sp, #92]
  4198d0:	stur	w8, [x29, #-144]
  4198d4:	ldur	w8, [x29, #-144]
  4198d8:	stur	w8, [x29, #-4]
  4198dc:	mov	w8, #0x1                   	// #1
  4198e0:	stur	w8, [x29, #-80]
  4198e4:	b	419a84 <stdout_stream_install+0x78c>
  4198e8:	ldur	x8, [x29, #-40]
  4198ec:	ldr	x0, [x8, #88]
  4198f0:	mov	x1, #0x5                   	// #5
  4198f4:	bl	4058b8 <sd_event_source_set_priority@plt>
  4198f8:	stur	w0, [x29, #-60]
  4198fc:	ldur	w9, [x29, #-60]
  419900:	cmp	w9, #0x0
  419904:	cset	w9, ge  // ge = tcont
  419908:	tbnz	w9, #0, 419998 <stdout_stream_install+0x6a0>
  41990c:	mov	w8, #0x3                   	// #3
  419910:	stur	w8, [x29, #-148]
  419914:	ldur	w8, [x29, #-60]
  419918:	stur	w8, [x29, #-152]
  41991c:	stur	wzr, [x29, #-156]
  419920:	ldur	w0, [x29, #-156]
  419924:	bl	405638 <log_get_max_level_realm@plt>
  419928:	ldur	w8, [x29, #-148]
  41992c:	and	w8, w8, #0x7
  419930:	cmp	w0, w8
  419934:	b.lt	419968 <stdout_stream_install+0x670>  // b.tstop
  419938:	ldur	w8, [x29, #-156]
  41993c:	ldur	w9, [x29, #-148]
  419940:	orr	w0, w9, w8, lsl #10
  419944:	ldur	w1, [x29, #-152]
  419948:	ldr	x2, [sp, #136]
  41994c:	mov	w3, #0x270                 	// #624
  419950:	ldr	x4, [sp, #128]
  419954:	adrp	x5, 42d000 <_fini+0x33a8>
  419958:	add	x5, x5, #0x61f
  41995c:	bl	405648 <log_internal_realm@plt>
  419960:	str	w0, [sp, #88]
  419964:	b	41997c <stdout_stream_install+0x684>
  419968:	ldur	w0, [x29, #-152]
  41996c:	bl	405658 <abs@plt>
  419970:	mov	w8, wzr
  419974:	subs	w8, w8, w0, uxtb
  419978:	str	w8, [sp, #88]
  41997c:	ldr	w8, [sp, #88]
  419980:	str	w8, [sp, #160]
  419984:	ldr	w8, [sp, #160]
  419988:	stur	w8, [x29, #-4]
  41998c:	mov	w8, #0x1                   	// #1
  419990:	stur	w8, [x29, #-80]
  419994:	b	419a84 <stdout_stream_install+0x78c>
  419998:	ldur	w8, [x29, #-20]
  41999c:	ldur	x9, [x29, #-40]
  4199a0:	str	w8, [x9, #12]
  4199a4:	ldur	x9, [x29, #-16]
  4199a8:	ldur	x10, [x29, #-40]
  4199ac:	str	x9, [x10]
  4199b0:	ldur	x8, [x29, #-16]
  4199b4:	add	x8, x8, #0x1f8
  4199b8:	str	x8, [sp, #152]
  4199bc:	ldur	x8, [x29, #-40]
  4199c0:	str	x8, [sp, #144]
  4199c4:	ldr	x8, [sp, #144]
  4199c8:	cmp	x8, #0x0
  4199cc:	cset	w9, ne  // ne = any
  4199d0:	mov	w10, #0x1                   	// #1
  4199d4:	eor	w9, w9, #0x1
  4199d8:	eor	w9, w9, w10
  4199dc:	eor	w9, w9, w10
  4199e0:	and	w9, w9, #0x1
  4199e4:	mov	w0, w9
  4199e8:	sxtw	x8, w0
  4199ec:	cbz	x8, 419a10 <stdout_stream_install+0x718>
  4199f0:	mov	w8, wzr
  4199f4:	mov	w0, w8
  4199f8:	adrp	x1, 42d000 <_fini+0x33a8>
  4199fc:	add	x1, x1, #0x47f
  419a00:	ldr	x2, [sp, #136]
  419a04:	mov	w3, #0x275                 	// #629
  419a08:	ldr	x4, [sp, #120]
  419a0c:	bl	405718 <log_assert_failed_realm@plt>
  419a10:	ldr	x8, [sp, #152]
  419a14:	ldr	x8, [x8]
  419a18:	ldr	x9, [sp, #144]
  419a1c:	str	x8, [x9, #112]
  419a20:	cbz	x8, 419a34 <stdout_stream_install+0x73c>
  419a24:	ldr	x8, [sp, #144]
  419a28:	ldr	x9, [sp, #144]
  419a2c:	ldr	x9, [x9, #112]
  419a30:	str	x8, [x9, #120]
  419a34:	ldr	x8, [sp, #144]
  419a38:	mov	x9, xzr
  419a3c:	str	x9, [x8, #120]
  419a40:	ldr	x8, [sp, #144]
  419a44:	ldr	x9, [sp, #152]
  419a48:	str	x8, [x9]
  419a4c:	ldur	x8, [x29, #-16]
  419a50:	ldr	w9, [x8, #520]
  419a54:	add	w9, w9, #0x1
  419a58:	str	w9, [x8, #520]
  419a5c:	ldur	x8, [x29, #-32]
  419a60:	cbz	x8, 419a70 <stdout_stream_install+0x778>
  419a64:	ldur	x8, [x29, #-40]
  419a68:	ldur	x9, [x29, #-32]
  419a6c:	str	x8, [x9]
  419a70:	mov	x8, xzr
  419a74:	stur	x8, [x29, #-40]
  419a78:	stur	wzr, [x29, #-4]
  419a7c:	mov	w9, #0x1                   	// #1
  419a80:	stur	w9, [x29, #-80]
  419a84:	sub	x0, x29, #0x28
  419a88:	bl	419aa0 <stdout_stream_freep>
  419a8c:	ldur	w0, [x29, #-4]
  419a90:	ldr	x28, [sp, #336]
  419a94:	ldp	x29, x30, [sp, #320]
  419a98:	add	sp, sp, #0x160
  419a9c:	ret

0000000000419aa0 <stdout_stream_freep>:
  419aa0:	sub	sp, sp, #0x20
  419aa4:	stp	x29, x30, [sp, #16]
  419aa8:	add	x29, sp, #0x10
  419aac:	str	x0, [sp, #8]
  419ab0:	ldr	x8, [sp, #8]
  419ab4:	ldr	x8, [x8]
  419ab8:	cbz	x8, 419ac8 <stdout_stream_freep+0x28>
  419abc:	ldr	x8, [sp, #8]
  419ac0:	ldr	x0, [x8]
  419ac4:	bl	418ef0 <stdout_stream_free>
  419ac8:	ldp	x29, x30, [sp, #16]
  419acc:	add	sp, sp, #0x20
  419ad0:	ret

0000000000419ad4 <setsockopt_int>:
  419ad4:	sub	sp, sp, #0x30
  419ad8:	stp	x29, x30, [sp, #32]
  419adc:	add	x29, sp, #0x20
  419ae0:	mov	w4, #0x4                   	// #4
  419ae4:	add	x8, sp, #0xc
  419ae8:	stur	w0, [x29, #-8]
  419aec:	stur	w1, [x29, #-12]
  419af0:	str	w2, [sp, #16]
  419af4:	str	w3, [sp, #12]
  419af8:	ldur	w0, [x29, #-8]
  419afc:	ldur	w1, [x29, #-12]
  419b00:	ldr	w2, [sp, #16]
  419b04:	mov	x3, x8
  419b08:	bl	406168 <setsockopt@plt>
  419b0c:	cmp	w0, #0x0
  419b10:	cset	w9, ge  // ge = tcont
  419b14:	tbnz	w9, #0, 419b30 <setsockopt_int+0x5c>
  419b18:	bl	405768 <__errno_location@plt>
  419b1c:	ldr	w8, [x0]
  419b20:	mov	w9, wzr
  419b24:	subs	w8, w9, w8
  419b28:	stur	w8, [x29, #-4]
  419b2c:	b	419b34 <setsockopt_int+0x60>
  419b30:	stur	wzr, [x29, #-4]
  419b34:	ldur	w0, [x29, #-4]
  419b38:	ldp	x29, x30, [sp, #32]
  419b3c:	add	sp, sp, #0x30
  419b40:	ret

0000000000419b44 <stdout_stream_process>:
  419b44:	sub	sp, sp, #0x170
  419b48:	stp	x29, x30, [sp, #336]
  419b4c:	str	x28, [sp, #352]
  419b50:	add	x29, sp, #0x150
  419b54:	sub	x8, x29, #0x80
  419b58:	mov	x9, xzr
  419b5c:	mov	x10, #0x1                   	// #1
  419b60:	mov	x11, #0x20                  	// #32
  419b64:	adrp	x12, 42d000 <_fini+0x33a8>
  419b68:	add	x12, x12, #0x436
  419b6c:	add	x12, x12, #0x3
  419b70:	adrp	x13, 42d000 <_fini+0x33a8>
  419b74:	add	x13, x13, #0x9c2
  419b78:	sub	x14, x29, #0x40
  419b7c:	sub	x15, x29, #0x70
  419b80:	add	x16, sp, #0x90
  419b84:	str	x0, [x8, #112]
  419b88:	stur	w1, [x29, #-20]
  419b8c:	stur	w2, [x29, #-24]
  419b90:	str	x3, [x8, #96]
  419b94:	ldr	x17, [x8, #96]
  419b98:	str	x17, [x8, #56]
  419b9c:	str	x9, [x8, #48]
  419ba0:	str	x9, [sp, #144]
  419ba4:	str	wzr, [sp, #152]
  419ba8:	str	x15, [x16, #16]
  419bac:	str	x10, [sp, #168]
  419bb0:	str	x14, [x16, #32]
  419bb4:	str	x11, [sp, #184]
  419bb8:	str	wzr, [sp, #192]
  419bbc:	str	x8, [sp, #56]
  419bc0:	str	x12, [sp, #48]
  419bc4:	str	x13, [sp, #40]
  419bc8:	ldr	x8, [sp, #56]
  419bcc:	ldr	x9, [x8, #56]
  419bd0:	cmp	x9, #0x0
  419bd4:	cset	w10, ne  // ne = any
  419bd8:	mov	w11, #0x1                   	// #1
  419bdc:	eor	w10, w10, #0x1
  419be0:	eor	w10, w10, w11
  419be4:	eor	w10, w10, w11
  419be8:	and	w10, w10, #0x1
  419bec:	mov	w0, w10
  419bf0:	sxtw	x9, w0
  419bf4:	cbz	x9, 419c1c <stdout_stream_process+0xd8>
  419bf8:	mov	w8, wzr
  419bfc:	mov	w0, w8
  419c00:	adrp	x1, 429000 <journal_ratelimit_group_free+0x70>
  419c04:	add	x1, x1, #0xdc8
  419c08:	ldr	x2, [sp, #48]
  419c0c:	mov	w3, #0x1fa                 	// #506
  419c10:	adrp	x4, 42d000 <_fini+0x33a8>
  419c14:	add	x4, x4, #0x97e
  419c18:	bl	405718 <log_assert_failed_realm@plt>
  419c1c:	ldur	w8, [x29, #-24]
  419c20:	orr	w8, w8, #0x1
  419c24:	orr	w8, w8, #0x10
  419c28:	cmp	w8, #0x11
  419c2c:	b.eq	419cac <stdout_stream_process+0x168>  // b.none
  419c30:	mov	w8, #0x3                   	// #3
  419c34:	str	w8, [sp, #140]
  419c38:	str	wzr, [sp, #136]
  419c3c:	str	wzr, [sp, #132]
  419c40:	ldr	w0, [sp, #132]
  419c44:	bl	405638 <log_get_max_level_realm@plt>
  419c48:	ldr	w8, [sp, #140]
  419c4c:	and	w8, w8, #0x7
  419c50:	cmp	w0, w8
  419c54:	b.lt	419c8c <stdout_stream_process+0x148>  // b.tstop
  419c58:	ldr	w8, [sp, #132]
  419c5c:	ldr	w9, [sp, #140]
  419c60:	orr	w0, w9, w8, lsl #10
  419c64:	ldr	w1, [sp, #136]
  419c68:	ldur	w6, [x29, #-24]
  419c6c:	ldr	x2, [sp, #48]
  419c70:	mov	w3, #0x1fd                 	// #509
  419c74:	ldr	x4, [sp, #40]
  419c78:	adrp	x5, 42d000 <_fini+0x33a8>
  419c7c:	add	x5, x5, #0x9d8
  419c80:	bl	405648 <log_internal_realm@plt>
  419c84:	str	w0, [sp, #36]
  419c88:	b	419ca0 <stdout_stream_process+0x15c>
  419c8c:	ldr	w0, [sp, #136]
  419c90:	bl	405658 <abs@plt>
  419c94:	mov	w8, wzr
  419c98:	subs	w8, w8, w0, uxtb
  419c9c:	str	w8, [sp, #36]
  419ca0:	ldr	w8, [sp, #36]
  419ca4:	str	w8, [sp, #128]
  419ca8:	b	41a070 <stdout_stream_process+0x52c>
  419cac:	ldr	x8, [sp, #56]
  419cb0:	ldr	x9, [x8, #56]
  419cb4:	ldr	x9, [x9, #72]
  419cb8:	add	x9, x9, #0x1
  419cbc:	ldr	x10, [x8, #56]
  419cc0:	ldr	x10, [x10, #80]
  419cc4:	cmp	x9, x10
  419cc8:	b.cc	419d18 <stdout_stream_process+0x1d4>  // b.lo, b.ul, b.last
  419ccc:	ldr	x8, [sp, #56]
  419cd0:	ldr	x9, [x8, #56]
  419cd4:	add	x0, x9, #0x40
  419cd8:	ldr	x9, [x8, #56]
  419cdc:	add	x1, x9, #0x50
  419ce0:	ldr	x9, [x8, #56]
  419ce4:	ldr	x9, [x9, #72]
  419ce8:	mov	x3, #0x1                   	// #1
  419cec:	add	x9, x9, #0x1
  419cf0:	add	x2, x9, #0x400
  419cf4:	bl	405c58 <greedy_realloc@plt>
  419cf8:	cbnz	x0, 419d18 <stdout_stream_process+0x1d4>
  419cfc:	mov	w8, wzr
  419d00:	mov	w0, w8
  419d04:	ldr	x1, [sp, #48]
  419d08:	mov	w2, #0x204                 	// #516
  419d0c:	ldr	x3, [sp, #40]
  419d10:	bl	405958 <log_oom_internal@plt>
  419d14:	b	41a070 <stdout_stream_process+0x52c>
  419d18:	ldr	x8, [sp, #56]
  419d1c:	ldr	x9, [x8, #56]
  419d20:	ldr	x9, [x9, #80]
  419d24:	subs	x9, x9, #0x1
  419d28:	str	x9, [sp, #120]
  419d2c:	ldr	x9, [x8, #56]
  419d30:	ldr	x9, [x9]
  419d34:	ldr	x9, [x9, #712]
  419d38:	str	x9, [sp, #112]
  419d3c:	ldr	x9, [sp, #120]
  419d40:	ldr	x10, [sp, #112]
  419d44:	cmp	x9, x10
  419d48:	b.cs	419d58 <stdout_stream_process+0x214>  // b.hs, b.nlast
  419d4c:	ldr	x8, [sp, #120]
  419d50:	str	x8, [sp, #24]
  419d54:	b	419d60 <stdout_stream_process+0x21c>
  419d58:	ldr	x8, [sp, #112]
  419d5c:	str	x8, [sp, #24]
  419d60:	ldr	x8, [sp, #24]
  419d64:	str	x8, [sp, #104]
  419d68:	ldr	x8, [sp, #104]
  419d6c:	ldr	x9, [sp, #56]
  419d70:	str	x8, [x9, #8]
  419d74:	ldr	x8, [x9, #56]
  419d78:	ldr	x8, [x8, #64]
  419d7c:	ldr	x10, [x9, #56]
  419d80:	ldr	x10, [x10, #72]
  419d84:	add	x8, x8, x10
  419d88:	str	x8, [sp, #88]
  419d8c:	ldr	x8, [x9, #8]
  419d90:	ldr	x10, [x9, #56]
  419d94:	ldr	x10, [x10, #72]
  419d98:	subs	x8, x8, x10
  419d9c:	str	x8, [sp, #96]
  419da0:	ldur	q0, [sp, #88]
  419da4:	str	q0, [x9, #16]
  419da8:	ldr	x8, [x9, #56]
  419dac:	ldr	w0, [x8, #12]
  419db0:	add	x1, sp, #0x90
  419db4:	mov	w2, #0x40                  	// #64
  419db8:	movk	w2, #0x4000, lsl #16
  419dbc:	bl	405c68 <recvmsg@plt>
  419dc0:	ldr	x8, [sp, #56]
  419dc4:	str	x0, [x8]
  419dc8:	ldr	x9, [x8]
  419dcc:	cmp	x9, #0x0
  419dd0:	cset	w11, ge  // ge = tcont
  419dd4:	tbnz	w11, #0, 419ebc <stdout_stream_process+0x378>
  419dd8:	mov	w8, #0x0                   	// #0
  419ddc:	strb	w8, [sp, #87]
  419de0:	bl	405768 <__errno_location@plt>
  419de4:	ldr	w8, [x0]
  419de8:	cmp	w8, #0x4
  419dec:	str	w8, [sp, #20]
  419df0:	b.eq	419e10 <stdout_stream_process+0x2cc>  // b.none
  419df4:	b	419df8 <stdout_stream_process+0x2b4>
  419df8:	ldr	w8, [sp, #20]
  419dfc:	cmp	w8, #0xb
  419e00:	cset	w9, eq  // eq = none
  419e04:	eor	w9, w9, #0x1
  419e08:	tbnz	w9, #0, 419e1c <stdout_stream_process+0x2d8>
  419e0c:	b	419e10 <stdout_stream_process+0x2cc>
  419e10:	mov	w8, #0x1                   	// #1
  419e14:	strb	w8, [sp, #87]
  419e18:	b	419e1c <stdout_stream_process+0x2d8>
  419e1c:	ldrb	w8, [sp, #87]
  419e20:	and	w8, w8, #0x1
  419e24:	strb	w8, [sp, #86]
  419e28:	ldrb	w8, [sp, #86]
  419e2c:	tbnz	w8, #0, 419e34 <stdout_stream_process+0x2f0>
  419e30:	b	419e3c <stdout_stream_process+0x2f8>
  419e34:	stur	wzr, [x29, #-4]
  419e38:	b	41a080 <stdout_stream_process+0x53c>
  419e3c:	mov	w8, #0x4                   	// #4
  419e40:	str	w8, [sp, #80]
  419e44:	bl	405768 <__errno_location@plt>
  419e48:	ldr	w8, [x0]
  419e4c:	str	w8, [sp, #76]
  419e50:	str	wzr, [sp, #72]
  419e54:	ldr	w0, [sp, #72]
  419e58:	bl	405638 <log_get_max_level_realm@plt>
  419e5c:	ldr	w8, [sp, #80]
  419e60:	and	w8, w8, #0x7
  419e64:	cmp	w0, w8
  419e68:	b.lt	419e9c <stdout_stream_process+0x358>  // b.tstop
  419e6c:	ldr	w8, [sp, #72]
  419e70:	ldr	w9, [sp, #80]
  419e74:	orr	w0, w9, w8, lsl #10
  419e78:	ldr	w1, [sp, #76]
  419e7c:	ldr	x2, [sp, #48]
  419e80:	mov	w3, #0x214                 	// #532
  419e84:	ldr	x4, [sp, #40]
  419e88:	adrp	x5, 42d000 <_fini+0x33a8>
  419e8c:	add	x5, x5, #0xa0b
  419e90:	bl	405648 <log_internal_realm@plt>
  419e94:	str	w0, [sp, #16]
  419e98:	b	419eb0 <stdout_stream_process+0x36c>
  419e9c:	ldr	w0, [sp, #76]
  419ea0:	bl	405658 <abs@plt>
  419ea4:	mov	w8, wzr
  419ea8:	subs	w8, w8, w0, uxtb
  419eac:	str	w8, [sp, #16]
  419eb0:	ldr	w8, [sp, #16]
  419eb4:	str	w8, [sp, #68]
  419eb8:	b	41a070 <stdout_stream_process+0x52c>
  419ebc:	add	x0, sp, #0x90
  419ec0:	bl	406178 <cmsg_close_all@plt>
  419ec4:	ldr	x8, [sp, #56]
  419ec8:	ldr	x9, [x8]
  419ecc:	cbnz	x9, 419ee8 <stdout_stream_process+0x3a4>
  419ed0:	ldr	x8, [sp, #56]
  419ed4:	ldr	x0, [x8, #56]
  419ed8:	mov	w9, #0x1                   	// #1
  419edc:	and	w1, w9, #0x1
  419ee0:	bl	41b5c0 <stdout_stream_scan>
  419ee4:	b	41a070 <stdout_stream_process+0x52c>
  419ee8:	ldr	x8, [sp, #184]
  419eec:	cmp	x8, #0x10
  419ef0:	b.cc	419f04 <stdout_stream_process+0x3c0>  // b.lo, b.ul, b.last
  419ef4:	add	x8, sp, #0x90
  419ef8:	ldr	x8, [x8, #32]
  419efc:	str	x8, [sp, #8]
  419f00:	b	419f0c <stdout_stream_process+0x3c8>
  419f04:	mov	x8, xzr
  419f08:	str	x8, [sp, #8]
  419f0c:	ldr	x8, [sp, #8]
  419f10:	ldr	x9, [sp, #56]
  419f14:	str	x8, [x9, #40]
  419f18:	ldr	x8, [sp, #56]
  419f1c:	ldr	x9, [x8, #40]
  419f20:	cbz	x9, 419f90 <stdout_stream_process+0x44c>
  419f24:	ldr	x8, [sp, #56]
  419f28:	ldr	x9, [x8, #40]
  419f2c:	ldr	w10, [x9, #8]
  419f30:	cmp	w10, #0x1
  419f34:	b.ne	419f74 <stdout_stream_process+0x430>  // b.any
  419f38:	ldr	x8, [sp, #56]
  419f3c:	ldr	x9, [x8, #40]
  419f40:	ldr	w10, [x9, #12]
  419f44:	cmp	w10, #0x2
  419f48:	b.ne	419f74 <stdout_stream_process+0x430>  // b.any
  419f4c:	ldr	x8, [sp, #56]
  419f50:	ldr	x9, [x8, #40]
  419f54:	ldr	x9, [x9]
  419f58:	cmp	x9, #0x1c
  419f5c:	b.ne	419f74 <stdout_stream_process+0x430>  // b.any
  419f60:	ldr	x8, [sp, #56]
  419f64:	ldr	x9, [x8, #40]
  419f68:	add	x9, x9, #0x10
  419f6c:	str	x9, [x8, #48]
  419f70:	b	419f90 <stdout_stream_process+0x44c>
  419f74:	ldr	x8, [sp, #56]
  419f78:	ldr	x1, [x8, #40]
  419f7c:	add	x0, sp, #0x90
  419f80:	bl	405c78 <__cmsg_nxthdr@plt>
  419f84:	ldr	x8, [sp, #56]
  419f88:	str	x0, [x8, #40]
  419f8c:	b	419f18 <stdout_stream_process+0x3d4>
  419f90:	ldr	x8, [sp, #56]
  419f94:	ldr	x9, [x8, #48]
  419f98:	cbz	x9, 41a024 <stdout_stream_process+0x4e0>
  419f9c:	ldr	x8, [sp, #56]
  419fa0:	ldr	x9, [x8, #48]
  419fa4:	ldr	w10, [x9]
  419fa8:	ldr	x9, [x8, #56]
  419fac:	ldr	w11, [x9, #16]
  419fb0:	cmp	w10, w11
  419fb4:	b.eq	41a024 <stdout_stream_process+0x4e0>  // b.none
  419fb8:	ldr	x8, [sp, #56]
  419fbc:	ldr	x0, [x8, #56]
  419fc0:	mov	w9, #0x1                   	// #1
  419fc4:	and	w1, w9, #0x1
  419fc8:	bl	41b5c0 <stdout_stream_scan>
  419fcc:	stur	w0, [x29, #-132]
  419fd0:	ldur	w9, [x29, #-132]
  419fd4:	cmp	w9, #0x0
  419fd8:	cset	w9, ge  // ge = tcont
  419fdc:	tbnz	w9, #0, 419fe4 <stdout_stream_process+0x4a0>
  419fe0:	b	41a070 <stdout_stream_process+0x52c>
  419fe4:	ldr	x8, [sp, #56]
  419fe8:	ldr	x9, [x8, #56]
  419fec:	ldr	x10, [x8, #48]
  419ff0:	ldr	x11, [x10]
  419ff4:	str	x11, [x9, #16]
  419ff8:	ldr	w12, [x10, #8]
  419ffc:	str	w12, [x9, #24]
  41a000:	ldr	x9, [x8, #56]
  41a004:	ldr	x0, [x9]
  41a008:	ldr	x9, [x8, #56]
  41a00c:	ldr	x1, [x9, #104]
  41a010:	bl	423c3c <client_context_release>
  41a014:	ldr	x8, [sp, #56]
  41a018:	ldr	x9, [x8, #56]
  41a01c:	mov	x10, xzr
  41a020:	str	x10, [x9, #104]
  41a024:	ldr	x8, [sp, #56]
  41a028:	ldr	x9, [x8]
  41a02c:	ldr	x10, [x8, #56]
  41a030:	ldr	x11, [x10, #72]
  41a034:	add	x9, x11, x9
  41a038:	str	x9, [x10, #72]
  41a03c:	ldr	x0, [x8, #56]
  41a040:	mov	w12, wzr
  41a044:	and	w1, w12, #0x1
  41a048:	bl	41b5c0 <stdout_stream_scan>
  41a04c:	stur	w0, [x29, #-132]
  41a050:	ldur	w12, [x29, #-132]
  41a054:	cmp	w12, #0x0
  41a058:	cset	w12, ge  // ge = tcont
  41a05c:	tbnz	w12, #0, 41a064 <stdout_stream_process+0x520>
  41a060:	b	41a070 <stdout_stream_process+0x52c>
  41a064:	mov	w8, #0x1                   	// #1
  41a068:	stur	w8, [x29, #-4]
  41a06c:	b	41a080 <stdout_stream_process+0x53c>
  41a070:	ldr	x8, [sp, #56]
  41a074:	ldr	x0, [x8, #56]
  41a078:	bl	4192b0 <stdout_stream_destroy>
  41a07c:	stur	wzr, [x29, #-4]
  41a080:	ldur	w0, [x29, #-4]
  41a084:	ldr	x28, [sp, #352]
  41a088:	ldp	x29, x30, [sp, #336]
  41a08c:	add	sp, sp, #0x170
  41a090:	ret

000000000041a094 <server_restore_streams>:
  41a094:	sub	sp, sp, #0x190
  41a098:	stp	x29, x30, [sp, #368]
  41a09c:	str	x28, [sp, #384]
  41a0a0:	add	x29, sp, #0x170
  41a0a4:	mov	x8, xzr
  41a0a8:	adrp	x9, 42d000 <_fini+0x33a8>
  41a0ac:	add	x9, x9, #0x651
  41a0b0:	adrp	x10, 42d000 <_fini+0x33a8>
  41a0b4:	add	x10, x10, #0x436
  41a0b8:	add	x10, x10, #0x3
  41a0bc:	adrp	x11, 42d000 <_fini+0x33a8>
  41a0c0:	add	x11, x11, #0x66e
  41a0c4:	stur	x0, [x29, #-16]
  41a0c8:	stur	x1, [x29, #-24]
  41a0cc:	stur	x8, [x29, #-32]
  41a0d0:	mov	x0, x9
  41a0d4:	str	x10, [sp, #32]
  41a0d8:	str	x11, [sp, #24]
  41a0dc:	bl	405a38 <opendir@plt>
  41a0e0:	stur	x0, [x29, #-32]
  41a0e4:	ldur	x8, [x29, #-32]
  41a0e8:	cbnz	x8, 41a19c <server_restore_streams+0x108>
  41a0ec:	bl	405768 <__errno_location@plt>
  41a0f0:	ldr	w8, [x0]
  41a0f4:	cmp	w8, #0x2
  41a0f8:	b.ne	41a10c <server_restore_streams+0x78>  // b.any
  41a0fc:	stur	wzr, [x29, #-4]
  41a100:	mov	w8, #0x1                   	// #1
  41a104:	stur	w8, [x29, #-48]
  41a108:	b	41a580 <server_restore_streams+0x4ec>
  41a10c:	mov	w8, #0x4                   	// #4
  41a110:	stur	w8, [x29, #-52]
  41a114:	bl	405768 <__errno_location@plt>
  41a118:	ldr	w8, [x0]
  41a11c:	stur	w8, [x29, #-56]
  41a120:	stur	wzr, [x29, #-60]
  41a124:	ldur	w0, [x29, #-60]
  41a128:	bl	405638 <log_get_max_level_realm@plt>
  41a12c:	ldur	w8, [x29, #-52]
  41a130:	and	w8, w8, #0x7
  41a134:	cmp	w0, w8
  41a138:	b.lt	41a16c <server_restore_streams+0xd8>  // b.tstop
  41a13c:	ldur	w8, [x29, #-60]
  41a140:	ldur	w9, [x29, #-52]
  41a144:	orr	w0, w9, w8, lsl #10
  41a148:	ldur	w1, [x29, #-56]
  41a14c:	ldr	x2, [sp, #32]
  41a150:	mov	w3, #0x319                 	// #793
  41a154:	ldr	x4, [sp, #24]
  41a158:	adrp	x5, 42d000 <_fini+0x33a8>
  41a15c:	add	x5, x5, #0x685
  41a160:	bl	405648 <log_internal_realm@plt>
  41a164:	str	w0, [sp, #20]
  41a168:	b	41a180 <server_restore_streams+0xec>
  41a16c:	ldur	w0, [x29, #-56]
  41a170:	bl	405658 <abs@plt>
  41a174:	mov	w8, wzr
  41a178:	subs	w8, w8, w0, uxtb
  41a17c:	str	w8, [sp, #20]
  41a180:	ldr	w8, [sp, #20]
  41a184:	stur	w8, [x29, #-64]
  41a188:	ldur	w8, [x29, #-64]
  41a18c:	stur	w8, [x29, #-4]
  41a190:	mov	w8, #0x1                   	// #1
  41a194:	stur	w8, [x29, #-48]
  41a198:	b	41a580 <server_restore_streams+0x4ec>
  41a19c:	bl	405768 <__errno_location@plt>
  41a1a0:	str	wzr, [x0]
  41a1a4:	ldur	x0, [x29, #-32]
  41a1a8:	bl	405918 <readdir64@plt>
  41a1ac:	stur	x0, [x29, #-40]
  41a1b0:	ldur	x8, [x29, #-40]
  41a1b4:	cbnz	x8, 41a1d4 <server_restore_streams+0x140>
  41a1b8:	bl	405768 <__errno_location@plt>
  41a1bc:	ldr	w8, [x0]
  41a1c0:	cmp	w8, #0x0
  41a1c4:	cset	w8, le
  41a1c8:	tbnz	w8, #0, 41a1d0 <server_restore_streams+0x13c>
  41a1cc:	b	41a4f4 <server_restore_streams+0x460>
  41a1d0:	b	41a4e4 <server_restore_streams+0x450>
  41a1d4:	ldur	x8, [x29, #-40]
  41a1d8:	add	x0, x8, #0x13
  41a1dc:	bl	405928 <hidden_or_backup_file@plt>
  41a1e0:	tbnz	w0, #0, 41a1e8 <server_restore_streams+0x154>
  41a1e4:	b	41a1ec <server_restore_streams+0x158>
  41a1e8:	b	41a4cc <server_restore_streams+0x438>
  41a1ec:	mov	w8, #0x0                   	// #0
  41a1f0:	sturb	w8, [x29, #-81]
  41a1f4:	ldur	x9, [x29, #-40]
  41a1f8:	add	x0, x9, #0x13
  41a1fc:	adrp	x1, 42d000 <_fini+0x33a8>
  41a200:	add	x1, x1, #0x6ba
  41a204:	sub	x2, x29, #0x48
  41a208:	sub	x3, x29, #0x50
  41a20c:	bl	406188 <__isoc99_sscanf@plt>
  41a210:	cmp	w0, #0x2
  41a214:	b.eq	41a21c <server_restore_streams+0x188>  // b.none
  41a218:	b	41a4cc <server_restore_streams+0x438>
  41a21c:	sub	x8, x29, #0x88
  41a220:	mov	w9, #0xfffffffe            	// #-2
  41a224:	stur	w9, [x29, #-136]
  41a228:	mov	x10, xzr
  41a22c:	str	x10, [x8, #8]
  41a230:	ldur	q0, [x29, #-136]
  41a234:	sub	x1, x29, #0x70
  41a238:	stur	q0, [x29, #-112]
  41a23c:	ldur	x0, [x29, #-24]
  41a240:	bl	406198 <fdset_iterate@plt>
  41a244:	stur	w0, [x29, #-116]
  41a248:	ldur	w8, [x29, #-116]
  41a24c:	cmp	w8, #0x0
  41a250:	cset	w8, lt  // lt = tstop
  41a254:	tbnz	w8, #0, 41a358 <server_restore_streams+0x2c4>
  41a258:	ldur	w0, [x29, #-116]
  41a25c:	add	x1, sp, #0x68
  41a260:	bl	429c28 <fstat64>
  41a264:	cmp	w0, #0x0
  41a268:	cset	w8, ge  // ge = tcont
  41a26c:	tbnz	w8, #0, 41a308 <server_restore_streams+0x274>
  41a270:	mov	w8, #0x3                   	// #3
  41a274:	str	w8, [sp, #100]
  41a278:	bl	405768 <__errno_location@plt>
  41a27c:	ldr	w8, [x0]
  41a280:	str	w8, [sp, #96]
  41a284:	str	wzr, [sp, #92]
  41a288:	ldr	w0, [sp, #92]
  41a28c:	bl	405638 <log_get_max_level_realm@plt>
  41a290:	ldr	w8, [sp, #100]
  41a294:	and	w8, w8, #0x7
  41a298:	cmp	w0, w8
  41a29c:	b.lt	41a2d8 <server_restore_streams+0x244>  // b.tstop
  41a2a0:	ldr	w8, [sp, #92]
  41a2a4:	ldr	w9, [sp, #100]
  41a2a8:	orr	w0, w9, w8, lsl #10
  41a2ac:	ldr	w1, [sp, #96]
  41a2b0:	ldur	x10, [x29, #-40]
  41a2b4:	add	x6, x10, #0x13
  41a2b8:	ldr	x2, [sp, #32]
  41a2bc:	mov	w3, #0x329                 	// #809
  41a2c0:	ldr	x4, [sp, #24]
  41a2c4:	adrp	x5, 42d000 <_fini+0x33a8>
  41a2c8:	add	x5, x5, #0x6c2
  41a2cc:	bl	405648 <log_internal_realm@plt>
  41a2d0:	str	w0, [sp, #16]
  41a2d4:	b	41a2ec <server_restore_streams+0x258>
  41a2d8:	ldr	w0, [sp, #96]
  41a2dc:	bl	405658 <abs@plt>
  41a2e0:	mov	w8, wzr
  41a2e4:	subs	w8, w8, w0, uxtb
  41a2e8:	str	w8, [sp, #16]
  41a2ec:	ldr	w8, [sp, #16]
  41a2f0:	str	w8, [sp, #88]
  41a2f4:	ldr	w8, [sp, #88]
  41a2f8:	stur	w8, [x29, #-4]
  41a2fc:	mov	w8, #0x1                   	// #1
  41a300:	stur	w8, [x29, #-48]
  41a304:	b	41a580 <server_restore_streams+0x4ec>
  41a308:	ldr	w8, [sp, #120]
  41a30c:	and	w8, w8, #0xf000
  41a310:	cmp	w8, #0xc, lsl #12
  41a314:	b.ne	41a344 <server_restore_streams+0x2b0>  // b.any
  41a318:	ldr	x8, [sp, #104]
  41a31c:	ldur	x9, [x29, #-72]
  41a320:	cmp	x8, x9
  41a324:	b.ne	41a344 <server_restore_streams+0x2b0>  // b.any
  41a328:	ldr	x8, [sp, #112]
  41a32c:	ldur	x9, [x29, #-80]
  41a330:	cmp	x8, x9
  41a334:	b.ne	41a344 <server_restore_streams+0x2b0>  // b.any
  41a338:	mov	w8, #0x1                   	// #1
  41a33c:	sturb	w8, [x29, #-81]
  41a340:	b	41a358 <server_restore_streams+0x2c4>
  41a344:	ldur	x0, [x29, #-24]
  41a348:	sub	x1, x29, #0x70
  41a34c:	bl	406198 <fdset_iterate@plt>
  41a350:	stur	w0, [x29, #-116]
  41a354:	b	41a248 <server_restore_streams+0x1b4>
  41a358:	ldurb	w8, [x29, #-81]
  41a35c:	tbnz	w8, #0, 41a48c <server_restore_streams+0x3f8>
  41a360:	mov	w8, #0x7                   	// #7
  41a364:	str	w8, [sp, #84]
  41a368:	str	wzr, [sp, #80]
  41a36c:	str	wzr, [sp, #76]
  41a370:	ldr	w0, [sp, #76]
  41a374:	bl	405638 <log_get_max_level_realm@plt>
  41a378:	ldr	w8, [sp, #84]
  41a37c:	and	w8, w8, #0x7
  41a380:	cmp	w0, w8
  41a384:	b.lt	41a3c0 <server_restore_streams+0x32c>  // b.tstop
  41a388:	ldr	w8, [sp, #76]
  41a38c:	ldr	w9, [sp, #84]
  41a390:	orr	w0, w9, w8, lsl #10
  41a394:	ldr	w1, [sp, #80]
  41a398:	ldur	x10, [x29, #-40]
  41a39c:	add	x6, x10, #0x13
  41a3a0:	ldr	x2, [sp, #32]
  41a3a4:	mov	w3, #0x333                 	// #819
  41a3a8:	ldr	x4, [sp, #24]
  41a3ac:	adrp	x5, 42d000 <_fini+0x33a8>
  41a3b0:	add	x5, x5, #0x6d8
  41a3b4:	bl	405648 <log_internal_realm@plt>
  41a3b8:	str	w0, [sp, #12]
  41a3bc:	b	41a3d4 <server_restore_streams+0x340>
  41a3c0:	ldr	w0, [sp, #80]
  41a3c4:	bl	405658 <abs@plt>
  41a3c8:	mov	w8, wzr
  41a3cc:	subs	w8, w8, w0, uxtb
  41a3d0:	str	w8, [sp, #12]
  41a3d4:	ldr	w8, [sp, #12]
  41a3d8:	str	w8, [sp, #72]
  41a3dc:	ldur	x0, [x29, #-32]
  41a3e0:	bl	405978 <dirfd@plt>
  41a3e4:	ldur	x9, [x29, #-40]
  41a3e8:	add	x1, x9, #0x13
  41a3ec:	mov	w8, wzr
  41a3f0:	mov	w2, w8
  41a3f4:	bl	4061a8 <unlinkat@plt>
  41a3f8:	cmp	w0, #0x0
  41a3fc:	cset	w8, ge  // ge = tcont
  41a400:	tbnz	w8, #0, 41a488 <server_restore_streams+0x3f4>
  41a404:	mov	w8, #0x4                   	// #4
  41a408:	str	w8, [sp, #68]
  41a40c:	bl	405768 <__errno_location@plt>
  41a410:	ldr	w8, [x0]
  41a414:	str	w8, [sp, #64]
  41a418:	str	wzr, [sp, #60]
  41a41c:	ldr	w0, [sp, #60]
  41a420:	bl	405638 <log_get_max_level_realm@plt>
  41a424:	ldr	w8, [sp, #68]
  41a428:	and	w8, w8, #0x7
  41a42c:	cmp	w0, w8
  41a430:	b.lt	41a46c <server_restore_streams+0x3d8>  // b.tstop
  41a434:	ldr	w8, [sp, #60]
  41a438:	ldr	w9, [sp, #68]
  41a43c:	orr	w0, w9, w8, lsl #10
  41a440:	ldr	w1, [sp, #64]
  41a444:	ldur	x10, [x29, #-40]
  41a448:	add	x6, x10, #0x13
  41a44c:	ldr	x2, [sp, #32]
  41a450:	mov	w3, #0x336                 	// #822
  41a454:	ldr	x4, [sp, #24]
  41a458:	adrp	x5, 42d000 <_fini+0x33a8>
  41a45c:	add	x5, x5, #0x6f6
  41a460:	bl	405648 <log_internal_realm@plt>
  41a464:	str	w0, [sp, #8]
  41a468:	b	41a480 <server_restore_streams+0x3ec>
  41a46c:	ldr	w0, [sp, #64]
  41a470:	bl	405658 <abs@plt>
  41a474:	mov	w8, wzr
  41a478:	subs	w8, w8, w0, uxtb
  41a47c:	str	w8, [sp, #8]
  41a480:	ldr	w8, [sp, #8]
  41a484:	str	w8, [sp, #56]
  41a488:	b	41a4cc <server_restore_streams+0x438>
  41a48c:	ldur	x0, [x29, #-24]
  41a490:	ldur	w1, [x29, #-116]
  41a494:	bl	4061b8 <fdset_remove@plt>
  41a498:	ldur	x8, [x29, #-16]
  41a49c:	ldur	x9, [x29, #-40]
  41a4a0:	add	x1, x9, #0x13
  41a4a4:	ldur	w2, [x29, #-116]
  41a4a8:	mov	x0, x8
  41a4ac:	bl	41a5d0 <stdout_stream_restore>
  41a4b0:	stur	w0, [x29, #-44]
  41a4b4:	ldur	w10, [x29, #-44]
  41a4b8:	cmp	w10, #0x0
  41a4bc:	cset	w10, ge  // ge = tcont
  41a4c0:	tbnz	w10, #0, 41a4cc <server_restore_streams+0x438>
  41a4c4:	ldur	w0, [x29, #-116]
  41a4c8:	bl	4058c8 <safe_close@plt>
  41a4cc:	bl	405768 <__errno_location@plt>
  41a4d0:	str	wzr, [x0]
  41a4d4:	ldur	x0, [x29, #-32]
  41a4d8:	bl	405918 <readdir64@plt>
  41a4dc:	stur	x0, [x29, #-40]
  41a4e0:	b	41a1b0 <server_restore_streams+0x11c>
  41a4e4:	stur	wzr, [x29, #-4]
  41a4e8:	mov	w8, #0x1                   	// #1
  41a4ec:	stur	w8, [x29, #-48]
  41a4f0:	b	41a580 <server_restore_streams+0x4ec>
  41a4f4:	mov	w8, #0x3                   	// #3
  41a4f8:	str	w8, [sp, #52]
  41a4fc:	bl	405768 <__errno_location@plt>
  41a500:	ldr	w8, [x0]
  41a504:	str	w8, [sp, #48]
  41a508:	str	wzr, [sp, #44]
  41a50c:	ldr	w0, [sp, #44]
  41a510:	bl	405638 <log_get_max_level_realm@plt>
  41a514:	ldr	w8, [sp, #52]
  41a518:	and	w8, w8, #0x7
  41a51c:	cmp	w0, w8
  41a520:	b.lt	41a554 <server_restore_streams+0x4c0>  // b.tstop
  41a524:	ldr	w8, [sp, #44]
  41a528:	ldr	w9, [sp, #52]
  41a52c:	orr	w0, w9, w8, lsl #10
  41a530:	ldr	w1, [sp, #48]
  41a534:	ldr	x2, [sp, #32]
  41a538:	mov	w3, #0x344                 	// #836
  41a53c:	ldr	x4, [sp, #24]
  41a540:	adrp	x5, 42d000 <_fini+0x33a8>
  41a544:	add	x5, x5, #0x72b
  41a548:	bl	405648 <log_internal_realm@plt>
  41a54c:	str	w0, [sp, #4]
  41a550:	b	41a568 <server_restore_streams+0x4d4>
  41a554:	ldr	w0, [sp, #48]
  41a558:	bl	405658 <abs@plt>
  41a55c:	mov	w8, wzr
  41a560:	subs	w8, w8, w0, uxtb
  41a564:	str	w8, [sp, #4]
  41a568:	ldr	w8, [sp, #4]
  41a56c:	str	w8, [sp, #40]
  41a570:	ldr	w8, [sp, #40]
  41a574:	stur	w8, [x29, #-4]
  41a578:	mov	w8, #0x1                   	// #1
  41a57c:	stur	w8, [x29, #-48]
  41a580:	sub	x0, x29, #0x20
  41a584:	bl	41a59c <closedirp>
  41a588:	ldur	w0, [x29, #-4]
  41a58c:	ldr	x28, [sp, #384]
  41a590:	ldp	x29, x30, [sp, #368]
  41a594:	add	sp, sp, #0x190
  41a598:	ret

000000000041a59c <closedirp>:
  41a59c:	sub	sp, sp, #0x20
  41a5a0:	stp	x29, x30, [sp, #16]
  41a5a4:	add	x29, sp, #0x10
  41a5a8:	str	x0, [sp, #8]
  41a5ac:	ldr	x8, [sp, #8]
  41a5b0:	ldr	x8, [x8]
  41a5b4:	cbz	x8, 41a5c4 <closedirp+0x28>
  41a5b8:	ldr	x8, [sp, #8]
  41a5bc:	ldr	x0, [x8]
  41a5c0:	bl	4059d8 <closedir@plt>
  41a5c4:	ldp	x29, x30, [sp, #16]
  41a5c8:	add	sp, sp, #0x20
  41a5cc:	ret

000000000041a5d0 <stdout_stream_restore>:
  41a5d0:	sub	sp, sp, #0x70
  41a5d4:	stp	x29, x30, [sp, #96]
  41a5d8:	add	x29, sp, #0x60
  41a5dc:	adrp	x8, 42d000 <_fini+0x33a8>
  41a5e0:	add	x8, x8, #0x436
  41a5e4:	add	x8, x8, #0x3
  41a5e8:	adrp	x9, 42d000 <_fini+0x33a8>
  41a5ec:	add	x9, x9, #0xe09
  41a5f0:	stur	x0, [x29, #-16]
  41a5f4:	stur	x1, [x29, #-24]
  41a5f8:	stur	w2, [x29, #-28]
  41a5fc:	str	x8, [sp, #24]
  41a600:	str	x9, [sp, #16]
  41a604:	ldur	x8, [x29, #-16]
  41a608:	cmp	x8, #0x0
  41a60c:	cset	w9, ne  // ne = any
  41a610:	mov	w10, #0x1                   	// #1
  41a614:	eor	w9, w9, #0x1
  41a618:	eor	w9, w9, w10
  41a61c:	eor	w9, w9, w10
  41a620:	and	w9, w9, #0x1
  41a624:	mov	w0, w9
  41a628:	sxtw	x8, w0
  41a62c:	cbz	x8, 41a650 <stdout_stream_restore+0x80>
  41a630:	mov	w8, wzr
  41a634:	mov	w0, w8
  41a638:	adrp	x1, 429000 <journal_ratelimit_group_free+0x70>
  41a63c:	add	x1, x1, #0xdc8
  41a640:	ldr	x2, [sp, #24]
  41a644:	mov	w3, #0x2f9                 	// #761
  41a648:	ldr	x4, [sp, #16]
  41a64c:	bl	405718 <log_assert_failed_realm@plt>
  41a650:	ldur	x8, [x29, #-24]
  41a654:	cmp	x8, #0x0
  41a658:	cset	w9, ne  // ne = any
  41a65c:	mov	w10, #0x1                   	// #1
  41a660:	eor	w9, w9, #0x1
  41a664:	eor	w9, w9, w10
  41a668:	eor	w9, w9, w10
  41a66c:	and	w9, w9, #0x1
  41a670:	mov	w0, w9
  41a674:	sxtw	x8, w0
  41a678:	cbz	x8, 41a69c <stdout_stream_restore+0xcc>
  41a67c:	mov	w8, wzr
  41a680:	mov	w0, w8
  41a684:	adrp	x1, 42b000 <_fini+0x13a8>
  41a688:	add	x1, x1, #0xe55
  41a68c:	ldr	x2, [sp, #24]
  41a690:	mov	w3, #0x2fa                 	// #762
  41a694:	ldr	x4, [sp, #16]
  41a698:	bl	405718 <log_assert_failed_realm@plt>
  41a69c:	ldur	w8, [x29, #-28]
  41a6a0:	cmp	w8, #0x0
  41a6a4:	cset	w8, ge  // ge = tcont
  41a6a8:	mov	w9, #0x1                   	// #1
  41a6ac:	eor	w8, w8, #0x1
  41a6b0:	eor	w8, w8, w9
  41a6b4:	eor	w8, w8, w9
  41a6b8:	and	w8, w8, #0x1
  41a6bc:	mov	w0, w8
  41a6c0:	sxtw	x10, w0
  41a6c4:	cbz	x10, 41a6e8 <stdout_stream_restore+0x118>
  41a6c8:	mov	w8, wzr
  41a6cc:	mov	w0, w8
  41a6d0:	adrp	x1, 42d000 <_fini+0x33a8>
  41a6d4:	add	x1, x1, #0x4cf
  41a6d8:	ldr	x2, [sp, #24]
  41a6dc:	mov	w3, #0x2fb                 	// #763
  41a6e0:	ldr	x4, [sp, #16]
  41a6e4:	bl	405718 <log_assert_failed_realm@plt>
  41a6e8:	ldur	x8, [x29, #-16]
  41a6ec:	ldr	w9, [x8, #520]
  41a6f0:	cmp	w9, #0x1, lsl #12
  41a6f4:	b.cc	41a77c <stdout_stream_restore+0x1ac>  // b.lo, b.ul, b.last
  41a6f8:	mov	w8, #0x4                   	// #4
  41a6fc:	str	w8, [sp, #48]
  41a700:	str	wzr, [sp, #44]
  41a704:	str	wzr, [sp, #40]
  41a708:	ldr	w0, [sp, #40]
  41a70c:	bl	405638 <log_get_max_level_realm@plt>
  41a710:	ldr	w8, [sp, #48]
  41a714:	and	w8, w8, #0x7
  41a718:	cmp	w0, w8
  41a71c:	b.lt	41a754 <stdout_stream_restore+0x184>  // b.tstop
  41a720:	ldr	w8, [sp, #40]
  41a724:	ldr	w9, [sp, #48]
  41a728:	orr	w0, w9, w8, lsl #10
  41a72c:	ldr	w1, [sp, #44]
  41a730:	ldr	x2, [sp, #24]
  41a734:	mov	w3, #0x2fe                 	// #766
  41a738:	adrp	x4, 42d000 <_fini+0x33a8>
  41a73c:	add	x4, x4, #0xe40
  41a740:	adrp	x5, 42d000 <_fini+0x33a8>
  41a744:	add	x5, x5, #0xe56
  41a748:	bl	405648 <log_internal_realm@plt>
  41a74c:	str	w0, [sp, #12]
  41a750:	b	41a768 <stdout_stream_restore+0x198>
  41a754:	ldr	w0, [sp, #44]
  41a758:	bl	405658 <abs@plt>
  41a75c:	mov	w8, wzr
  41a760:	subs	w8, w8, w0, uxtb
  41a764:	str	w8, [sp, #12]
  41a768:	ldr	w8, [sp, #12]
  41a76c:	str	w8, [sp, #36]
  41a770:	mov	w8, #0xffffff97            	// #-105
  41a774:	stur	w8, [x29, #-4]
  41a778:	b	41a7dc <stdout_stream_restore+0x20c>
  41a77c:	ldur	x0, [x29, #-16]
  41a780:	ldur	w1, [x29, #-28]
  41a784:	sub	x2, x29, #0x28
  41a788:	bl	4192f8 <stdout_stream_install>
  41a78c:	stur	w0, [x29, #-44]
  41a790:	ldur	w8, [x29, #-44]
  41a794:	cmp	w8, #0x0
  41a798:	cset	w8, ge  // ge = tcont
  41a79c:	tbnz	w8, #0, 41a7ac <stdout_stream_restore+0x1dc>
  41a7a0:	ldur	w8, [x29, #-44]
  41a7a4:	stur	w8, [x29, #-4]
  41a7a8:	b	41a7dc <stdout_stream_restore+0x20c>
  41a7ac:	ldur	x8, [x29, #-40]
  41a7b0:	mov	w9, #0x7                   	// #7
  41a7b4:	str	w9, [x8, #8]
  41a7b8:	ldur	x8, [x29, #-40]
  41a7bc:	ldrb	w9, [x8, #60]
  41a7c0:	and	w9, w9, #0xffffffef
  41a7c4:	orr	w9, w9, #0x10
  41a7c8:	strb	w9, [x8, #60]
  41a7cc:	ldur	x0, [x29, #-40]
  41a7d0:	ldur	x1, [x29, #-24]
  41a7d4:	bl	41cff4 <stdout_stream_load>
  41a7d8:	stur	wzr, [x29, #-4]
  41a7dc:	ldur	w0, [x29, #-4]
  41a7e0:	ldp	x29, x30, [sp, #96]
  41a7e4:	add	sp, sp, #0x70
  41a7e8:	ret

000000000041a7ec <server_open_stdout_socket>:
  41a7ec:	sub	sp, sp, #0xd0
  41a7f0:	stp	x29, x30, [sp, #192]
  41a7f4:	add	x29, sp, #0xc0
  41a7f8:	adrp	x8, 430000 <_fini+0x63a8>
  41a7fc:	add	x8, x8, #0x6b8
  41a800:	add	x9, x8, #0x2
  41a804:	adrp	x10, 42d000 <_fini+0x33a8>
  41a808:	add	x10, x10, #0x436
  41a80c:	add	x10, x10, #0x3
  41a810:	adrp	x11, 42d000 <_fini+0x33a8>
  41a814:	add	x11, x11, #0x778
  41a818:	stur	x0, [x29, #-16]
  41a81c:	str	x8, [sp, #56]
  41a820:	str	x9, [sp, #48]
  41a824:	str	x10, [sp, #40]
  41a828:	str	x11, [sp, #32]
  41a82c:	ldur	x8, [x29, #-16]
  41a830:	cmp	x8, #0x0
  41a834:	cset	w9, ne  // ne = any
  41a838:	mov	w10, #0x1                   	// #1
  41a83c:	eor	w9, w9, #0x1
  41a840:	eor	w9, w9, w10
  41a844:	eor	w9, w9, w10
  41a848:	and	w9, w9, #0x1
  41a84c:	mov	w0, w9
  41a850:	sxtw	x8, w0
  41a854:	cbz	x8, 41a87c <server_open_stdout_socket+0x90>
  41a858:	mov	w8, wzr
  41a85c:	mov	w0, w8
  41a860:	adrp	x1, 429000 <journal_ratelimit_group_free+0x70>
  41a864:	add	x1, x1, #0xdc8
  41a868:	ldr	x2, [sp, #40]
  41a86c:	mov	w3, #0x34e                 	// #846
  41a870:	adrp	x4, 42d000 <_fini+0x33a8>
  41a874:	add	x4, x4, #0x750
  41a878:	bl	405718 <log_assert_failed_realm@plt>
  41a87c:	ldur	x8, [x29, #-16]
  41a880:	ldr	w9, [x8, #8]
  41a884:	cmp	w9, #0x0
  41a888:	cset	w9, ge  // ge = tcont
  41a88c:	tbnz	w9, #0, 41ab7c <server_open_stdout_socket+0x390>
  41a890:	mov	w0, #0x1                   	// #1
  41a894:	mov	w1, #0x801                 	// #2049
  41a898:	movk	w1, #0x8, lsl #16
  41a89c:	mov	w8, wzr
  41a8a0:	mov	w2, w8
  41a8a4:	bl	405eb8 <socket@plt>
  41a8a8:	ldur	x9, [x29, #-16]
  41a8ac:	str	w0, [x9, #8]
  41a8b0:	ldur	x9, [x29, #-16]
  41a8b4:	ldr	w8, [x9, #8]
  41a8b8:	cmp	w8, #0x0
  41a8bc:	cset	w8, ge  // ge = tcont
  41a8c0:	tbnz	w8, #0, 41a94c <server_open_stdout_socket+0x160>
  41a8c4:	mov	w8, #0x3                   	// #3
  41a8c8:	stur	w8, [x29, #-24]
  41a8cc:	bl	405768 <__errno_location@plt>
  41a8d0:	ldr	w8, [x0]
  41a8d4:	stur	w8, [x29, #-28]
  41a8d8:	stur	wzr, [x29, #-32]
  41a8dc:	ldur	w0, [x29, #-32]
  41a8e0:	bl	405638 <log_get_max_level_realm@plt>
  41a8e4:	ldur	w8, [x29, #-24]
  41a8e8:	and	w8, w8, #0x7
  41a8ec:	cmp	w0, w8
  41a8f0:	b.lt	41a924 <server_open_stdout_socket+0x138>  // b.tstop
  41a8f4:	ldur	w8, [x29, #-32]
  41a8f8:	ldur	w9, [x29, #-24]
  41a8fc:	orr	w0, w9, w8, lsl #10
  41a900:	ldur	w1, [x29, #-28]
  41a904:	ldr	x2, [sp, #40]
  41a908:	mov	w3, #0x353                 	// #851
  41a90c:	ldr	x4, [sp, #32]
  41a910:	adrp	x5, 42d000 <_fini+0x33a8>
  41a914:	add	x5, x5, #0x792
  41a918:	bl	405648 <log_internal_realm@plt>
  41a91c:	str	w0, [sp, #28]
  41a920:	b	41a938 <server_open_stdout_socket+0x14c>
  41a924:	ldur	w0, [x29, #-28]
  41a928:	bl	405658 <abs@plt>
  41a92c:	mov	w8, wzr
  41a930:	subs	w8, w8, w0, uxtb
  41a934:	str	w8, [sp, #28]
  41a938:	ldr	w8, [sp, #28]
  41a93c:	stur	w8, [x29, #-36]
  41a940:	ldur	w8, [x29, #-36]
  41a944:	stur	w8, [x29, #-4]
  41a948:	b	41ad00 <server_open_stdout_socket+0x514>
  41a94c:	ldr	x0, [sp, #56]
  41a950:	bl	4061c8 <sockaddr_un_unlink@plt>
  41a954:	ldur	x8, [x29, #-16]
  41a958:	ldr	w9, [x8, #8]
  41a95c:	ldr	x8, [sp, #56]
  41a960:	stur	x8, [x29, #-48]
  41a964:	stur	x8, [x29, #-56]
  41a968:	str	w9, [sp, #24]
  41a96c:	ldur	x8, [x29, #-56]
  41a970:	ldrh	w9, [x8]
  41a974:	cmp	w9, #0x1
  41a978:	cset	w9, eq  // eq = none
  41a97c:	mov	w10, #0x1                   	// #1
  41a980:	eor	w9, w9, #0x1
  41a984:	eor	w9, w9, w10
  41a988:	eor	w9, w9, w10
  41a98c:	and	w9, w9, #0x1
  41a990:	mov	w0, w9
  41a994:	sxtw	x8, w0
  41a998:	cbz	x8, 41a9c0 <server_open_stdout_socket+0x1d4>
  41a99c:	mov	w8, wzr
  41a9a0:	mov	w0, w8
  41a9a4:	adrp	x1, 42d000 <_fini+0x33a8>
  41a9a8:	add	x1, x1, #0x7a6
  41a9ac:	ldr	x2, [sp, #40]
  41a9b0:	mov	w3, #0x357                 	// #855
  41a9b4:	adrp	x4, 42d000 <_fini+0x33a8>
  41a9b8:	add	x4, x4, #0x750
  41a9bc:	bl	405718 <log_assert_failed_realm@plt>
  41a9c0:	ldur	x8, [x29, #-56]
  41a9c4:	ldrb	w9, [x8, #2]
  41a9c8:	cbnz	w9, 41a9e8 <server_open_stdout_socket+0x1fc>
  41a9cc:	ldur	x8, [x29, #-56]
  41a9d0:	add	x0, x8, #0x3
  41a9d4:	mov	x1, #0x6b                  	// #107
  41a9d8:	bl	4061d8 <strnlen@plt>
  41a9dc:	add	x8, x0, #0x1
  41a9e0:	str	x8, [sp, #16]
  41a9e4:	b	41aa00 <server_open_stdout_socket+0x214>
  41a9e8:	ldur	x8, [x29, #-56]
  41a9ec:	add	x0, x8, #0x2
  41a9f0:	mov	x1, #0x6c                  	// #108
  41a9f4:	bl	4061d8 <strnlen@plt>
  41a9f8:	add	x8, x0, #0x1
  41a9fc:	str	x8, [sp, #16]
  41aa00:	ldr	x8, [sp, #16]
  41aa04:	add	x8, x8, #0x2
  41aa08:	stur	x8, [x29, #-64]
  41aa0c:	ldur	x8, [x29, #-64]
  41aa10:	ldur	x1, [x29, #-48]
  41aa14:	ldr	w0, [sp, #24]
  41aa18:	mov	w2, w8
  41aa1c:	bl	4061e8 <bind@plt>
  41aa20:	stur	w0, [x29, #-20]
  41aa24:	ldur	w8, [x29, #-20]
  41aa28:	cmp	w8, #0x0
  41aa2c:	cset	w8, ge  // ge = tcont
  41aa30:	tbnz	w8, #0, 41aac0 <server_open_stdout_socket+0x2d4>
  41aa34:	mov	w8, #0x3                   	// #3
  41aa38:	stur	w8, [x29, #-68]
  41aa3c:	bl	405768 <__errno_location@plt>
  41aa40:	ldr	w8, [x0]
  41aa44:	stur	w8, [x29, #-72]
  41aa48:	stur	wzr, [x29, #-76]
  41aa4c:	ldur	w0, [x29, #-76]
  41aa50:	bl	405638 <log_get_max_level_realm@plt>
  41aa54:	ldur	w8, [x29, #-68]
  41aa58:	and	w8, w8, #0x7
  41aa5c:	cmp	w0, w8
  41aa60:	b.lt	41aa98 <server_open_stdout_socket+0x2ac>  // b.tstop
  41aa64:	ldur	w8, [x29, #-76]
  41aa68:	ldur	w9, [x29, #-68]
  41aa6c:	orr	w0, w9, w8, lsl #10
  41aa70:	ldur	w1, [x29, #-72]
  41aa74:	ldr	x2, [sp, #40]
  41aa78:	mov	w3, #0x359                 	// #857
  41aa7c:	ldr	x4, [sp, #32]
  41aa80:	adrp	x5, 42d000 <_fini+0x33a8>
  41aa84:	add	x5, x5, #0x7c1
  41aa88:	ldr	x6, [sp, #48]
  41aa8c:	bl	405648 <log_internal_realm@plt>
  41aa90:	str	w0, [sp, #12]
  41aa94:	b	41aaac <server_open_stdout_socket+0x2c0>
  41aa98:	ldur	w0, [x29, #-72]
  41aa9c:	bl	405658 <abs@plt>
  41aaa0:	mov	w8, wzr
  41aaa4:	subs	w8, w8, w0, uxtb
  41aaa8:	str	w8, [sp, #12]
  41aaac:	ldr	w8, [sp, #12]
  41aab0:	stur	w8, [x29, #-80]
  41aab4:	ldur	w8, [x29, #-80]
  41aab8:	stur	w8, [x29, #-4]
  41aabc:	b	41ad00 <server_open_stdout_socket+0x514>
  41aac0:	ldr	x0, [sp, #48]
  41aac4:	mov	w1, #0x1b6                 	// #438
  41aac8:	bl	4061f8 <chmod@plt>
  41aacc:	ldur	x8, [x29, #-16]
  41aad0:	ldr	w9, [x8, #8]
  41aad4:	mov	w0, w9
  41aad8:	mov	w1, #0x1000                	// #4096
  41aadc:	bl	406208 <listen@plt>
  41aae0:	cmp	w0, #0x0
  41aae4:	cset	w9, ge  // ge = tcont
  41aae8:	tbnz	w9, #0, 41ab78 <server_open_stdout_socket+0x38c>
  41aaec:	mov	w8, #0x3                   	// #3
  41aaf0:	stur	w8, [x29, #-84]
  41aaf4:	bl	405768 <__errno_location@plt>
  41aaf8:	ldr	w8, [x0]
  41aafc:	stur	w8, [x29, #-88]
  41ab00:	stur	wzr, [x29, #-92]
  41ab04:	ldur	w0, [x29, #-92]
  41ab08:	bl	405638 <log_get_max_level_realm@plt>
  41ab0c:	ldur	w8, [x29, #-84]
  41ab10:	and	w8, w8, #0x7
  41ab14:	cmp	w0, w8
  41ab18:	b.lt	41ab50 <server_open_stdout_socket+0x364>  // b.tstop
  41ab1c:	ldur	w8, [x29, #-92]
  41ab20:	ldur	w9, [x29, #-84]
  41ab24:	orr	w0, w9, w8, lsl #10
  41ab28:	ldur	w1, [x29, #-88]
  41ab2c:	ldr	x2, [sp, #40]
  41ab30:	mov	w3, #0x35e                 	// #862
  41ab34:	ldr	x4, [sp, #32]
  41ab38:	adrp	x5, 42d000 <_fini+0x33a8>
  41ab3c:	add	x5, x5, #0x7d5
  41ab40:	ldr	x6, [sp, #48]
  41ab44:	bl	405648 <log_internal_realm@plt>
  41ab48:	str	w0, [sp, #8]
  41ab4c:	b	41ab64 <server_open_stdout_socket+0x378>
  41ab50:	ldur	w0, [x29, #-88]
  41ab54:	bl	405658 <abs@plt>
  41ab58:	mov	w8, wzr
  41ab5c:	subs	w8, w8, w0, uxtb
  41ab60:	str	w8, [sp, #8]
  41ab64:	ldr	w8, [sp, #8]
  41ab68:	str	w8, [sp, #96]
  41ab6c:	ldr	w8, [sp, #96]
  41ab70:	stur	w8, [x29, #-4]
  41ab74:	b	41ad00 <server_open_stdout_socket+0x514>
  41ab78:	b	41ab90 <server_open_stdout_socket+0x3a4>
  41ab7c:	ldur	x8, [x29, #-16]
  41ab80:	ldr	w0, [x8, #8]
  41ab84:	mov	w9, #0x1                   	// #1
  41ab88:	and	w1, w9, #0x1
  41ab8c:	bl	406218 <fd_nonblock@plt>
  41ab90:	ldur	x8, [x29, #-16]
  41ab94:	ldr	x0, [x8, #32]
  41ab98:	ldur	x8, [x29, #-16]
  41ab9c:	add	x1, x8, #0x38
  41aba0:	ldur	x8, [x29, #-16]
  41aba4:	ldr	w2, [x8, #8]
  41aba8:	ldur	x5, [x29, #-16]
  41abac:	mov	w3, #0x1                   	// #1
  41abb0:	adrp	x4, 41a000 <stdout_stream_process+0x4bc>
  41abb4:	add	x4, x4, #0xd10
  41abb8:	bl	4058a8 <sd_event_add_io@plt>
  41abbc:	stur	w0, [x29, #-20]
  41abc0:	ldur	w9, [x29, #-20]
  41abc4:	cmp	w9, #0x0
  41abc8:	cset	w9, ge  // ge = tcont
  41abcc:	tbnz	w9, #0, 41ac54 <server_open_stdout_socket+0x468>
  41abd0:	mov	w8, #0x3                   	// #3
  41abd4:	str	w8, [sp, #92]
  41abd8:	ldur	w8, [x29, #-20]
  41abdc:	str	w8, [sp, #88]
  41abe0:	str	wzr, [sp, #84]
  41abe4:	ldr	w0, [sp, #84]
  41abe8:	bl	405638 <log_get_max_level_realm@plt>
  41abec:	ldr	w8, [sp, #92]
  41abf0:	and	w8, w8, #0x7
  41abf4:	cmp	w0, w8
  41abf8:	b.lt	41ac2c <server_open_stdout_socket+0x440>  // b.tstop
  41abfc:	ldr	w8, [sp, #84]
  41ac00:	ldr	w9, [sp, #92]
  41ac04:	orr	w0, w9, w8, lsl #10
  41ac08:	ldr	w1, [sp, #88]
  41ac0c:	ldr	x2, [sp, #40]
  41ac10:	mov	w3, #0x364                 	// #868
  41ac14:	ldr	x4, [sp, #32]
  41ac18:	adrp	x5, 42d000 <_fini+0x33a8>
  41ac1c:	add	x5, x5, #0x7eb
  41ac20:	bl	405648 <log_internal_realm@plt>
  41ac24:	str	w0, [sp, #4]
  41ac28:	b	41ac40 <server_open_stdout_socket+0x454>
  41ac2c:	ldr	w0, [sp, #88]
  41ac30:	bl	405658 <abs@plt>
  41ac34:	mov	w8, wzr
  41ac38:	subs	w8, w8, w0, uxtb
  41ac3c:	str	w8, [sp, #4]
  41ac40:	ldr	w8, [sp, #4]
  41ac44:	str	w8, [sp, #80]
  41ac48:	ldr	w8, [sp, #80]
  41ac4c:	stur	w8, [x29, #-4]
  41ac50:	b	41ad00 <server_open_stdout_socket+0x514>
  41ac54:	ldur	x8, [x29, #-16]
  41ac58:	ldr	x0, [x8, #56]
  41ac5c:	mov	x1, #0x5                   	// #5
  41ac60:	bl	4058b8 <sd_event_source_set_priority@plt>
  41ac64:	stur	w0, [x29, #-20]
  41ac68:	ldur	w9, [x29, #-20]
  41ac6c:	cmp	w9, #0x0
  41ac70:	cset	w9, ge  // ge = tcont
  41ac74:	tbnz	w9, #0, 41acfc <server_open_stdout_socket+0x510>
  41ac78:	mov	w8, #0x3                   	// #3
  41ac7c:	str	w8, [sp, #76]
  41ac80:	ldur	w8, [x29, #-20]
  41ac84:	str	w8, [sp, #72]
  41ac88:	str	wzr, [sp, #68]
  41ac8c:	ldr	w0, [sp, #68]
  41ac90:	bl	405638 <log_get_max_level_realm@plt>
  41ac94:	ldr	w8, [sp, #76]
  41ac98:	and	w8, w8, #0x7
  41ac9c:	cmp	w0, w8
  41aca0:	b.lt	41acd4 <server_open_stdout_socket+0x4e8>  // b.tstop
  41aca4:	ldr	w8, [sp, #68]
  41aca8:	ldr	w9, [sp, #76]
  41acac:	orr	w0, w9, w8, lsl #10
  41acb0:	ldr	w1, [sp, #72]
  41acb4:	ldr	x2, [sp, #40]
  41acb8:	mov	w3, #0x368                 	// #872
  41acbc:	ldr	x4, [sp, #32]
  41acc0:	adrp	x5, 42d000 <_fini+0x33a8>
  41acc4:	add	x5, x5, #0x81e
  41acc8:	bl	405648 <log_internal_realm@plt>
  41accc:	str	w0, [sp]
  41acd0:	b	41ace8 <server_open_stdout_socket+0x4fc>
  41acd4:	ldr	w0, [sp, #72]
  41acd8:	bl	405658 <abs@plt>
  41acdc:	mov	w8, wzr
  41ace0:	subs	w8, w8, w0, uxtb
  41ace4:	str	w8, [sp]
  41ace8:	ldr	w8, [sp]
  41acec:	str	w8, [sp, #64]
  41acf0:	ldr	w8, [sp, #64]
  41acf4:	stur	w8, [x29, #-4]
  41acf8:	b	41ad00 <server_open_stdout_socket+0x514>
  41acfc:	stur	wzr, [x29, #-4]
  41ad00:	ldur	w0, [x29, #-4]
  41ad04:	ldp	x29, x30, [sp, #192]
  41ad08:	add	sp, sp, #0xd0
  41ad0c:	ret

000000000041ad10 <stdout_stream_new>:
  41ad10:	sub	sp, sp, #0xa0
  41ad14:	stp	x29, x30, [sp, #144]
  41ad18:	add	x29, sp, #0x90
  41ad1c:	mov	w8, #0xffffffff            	// #-1
  41ad20:	adrp	x9, 42d000 <_fini+0x33a8>
  41ad24:	add	x9, x9, #0x436
  41ad28:	add	x9, x9, #0x3
  41ad2c:	stur	x0, [x29, #-16]
  41ad30:	stur	w1, [x29, #-20]
  41ad34:	stur	w2, [x29, #-24]
  41ad38:	stur	x3, [x29, #-32]
  41ad3c:	stur	w8, [x29, #-36]
  41ad40:	ldur	x10, [x29, #-32]
  41ad44:	stur	x10, [x29, #-48]
  41ad48:	str	x9, [sp, #24]
  41ad4c:	ldur	x8, [x29, #-48]
  41ad50:	cmp	x8, #0x0
  41ad54:	cset	w9, ne  // ne = any
  41ad58:	mov	w10, #0x1                   	// #1
  41ad5c:	eor	w9, w9, #0x1
  41ad60:	eor	w9, w9, w10
  41ad64:	eor	w9, w9, w10
  41ad68:	and	w9, w9, #0x1
  41ad6c:	mov	w0, w9
  41ad70:	sxtw	x8, w0
  41ad74:	cbz	x8, 41ad9c <stdout_stream_new+0x8c>
  41ad78:	mov	w8, wzr
  41ad7c:	mov	w0, w8
  41ad80:	adrp	x1, 429000 <journal_ratelimit_group_free+0x70>
  41ad84:	add	x1, x1, #0xdc8
  41ad88:	ldr	x2, [sp, #24]
  41ad8c:	mov	w3, #0x285                 	// #645
  41ad90:	adrp	x4, 42d000 <_fini+0x33a8>
  41ad94:	add	x4, x4, #0xf54
  41ad98:	bl	405718 <log_assert_failed_realm@plt>
  41ad9c:	ldur	w8, [x29, #-24]
  41ada0:	cmp	w8, #0x1
  41ada4:	b.eq	41ae40 <stdout_stream_new+0x130>  // b.none
  41ada8:	mov	w8, #0x3                   	// #3
  41adac:	stur	w8, [x29, #-56]
  41adb0:	mov	w8, #0x5                   	// #5
  41adb4:	movk	w8, #0x4000, lsl #16
  41adb8:	stur	w8, [x29, #-60]
  41adbc:	stur	wzr, [x29, #-64]
  41adc0:	ldur	w0, [x29, #-64]
  41adc4:	bl	405638 <log_get_max_level_realm@plt>
  41adc8:	ldur	w8, [x29, #-56]
  41adcc:	and	w8, w8, #0x7
  41add0:	cmp	w0, w8
  41add4:	b.lt	41ae10 <stdout_stream_new+0x100>  // b.tstop
  41add8:	ldur	w8, [x29, #-64]
  41addc:	ldur	w9, [x29, #-56]
  41ade0:	orr	w0, w9, w8, lsl #10
  41ade4:	ldur	w1, [x29, #-60]
  41ade8:	ldur	w6, [x29, #-24]
  41adec:	ldr	x2, [sp, #24]
  41adf0:	mov	w3, #0x28a                 	// #650
  41adf4:	adrp	x4, 42d000 <_fini+0x33a8>
  41adf8:	add	x4, x4, #0xf94
  41adfc:	adrp	x5, 42d000 <_fini+0x33a8>
  41ae00:	add	x5, x5, #0xfa6
  41ae04:	bl	405648 <log_internal_realm@plt>
  41ae08:	str	w0, [sp, #20]
  41ae0c:	b	41ae24 <stdout_stream_new+0x114>
  41ae10:	ldur	w0, [x29, #-60]
  41ae14:	bl	405658 <abs@plt>
  41ae18:	mov	w8, wzr
  41ae1c:	subs	w8, w8, w0, uxtb
  41ae20:	str	w8, [sp, #20]
  41ae24:	ldr	w8, [sp, #20]
  41ae28:	stur	w8, [x29, #-68]
  41ae2c:	ldur	w8, [x29, #-68]
  41ae30:	stur	w8, [x29, #-4]
  41ae34:	mov	w8, #0x1                   	// #1
  41ae38:	str	w8, [sp, #72]
  41ae3c:	b	41b00c <stdout_stream_new+0x2fc>
  41ae40:	ldur	x8, [x29, #-48]
  41ae44:	ldr	w0, [x8, #8]
  41ae48:	mov	x8, xzr
  41ae4c:	str	x8, [sp, #64]
  41ae50:	ldr	x1, [sp, #64]
  41ae54:	mov	x2, x8
  41ae58:	mov	w3, #0x800                 	// #2048
  41ae5c:	movk	w3, #0x8, lsl #16
  41ae60:	bl	406228 <accept4@plt>
  41ae64:	stur	w0, [x29, #-36]
  41ae68:	ldur	w9, [x29, #-36]
  41ae6c:	cmp	w9, #0x0
  41ae70:	cset	w9, ge  // ge = tcont
  41ae74:	tbnz	w9, #0, 41af30 <stdout_stream_new+0x220>
  41ae78:	bl	405768 <__errno_location@plt>
  41ae7c:	ldr	w0, [x0]
  41ae80:	bl	41d5c4 <ERRNO_IS_ACCEPT_AGAIN>
  41ae84:	tbnz	w0, #0, 41ae8c <stdout_stream_new+0x17c>
  41ae88:	b	41ae9c <stdout_stream_new+0x18c>
  41ae8c:	stur	wzr, [x29, #-4]
  41ae90:	mov	w8, #0x1                   	// #1
  41ae94:	str	w8, [sp, #72]
  41ae98:	b	41b00c <stdout_stream_new+0x2fc>
  41ae9c:	mov	w8, #0x3                   	// #3
  41aea0:	str	w8, [sp, #60]
  41aea4:	bl	405768 <__errno_location@plt>
  41aea8:	ldr	w8, [x0]
  41aeac:	str	w8, [sp, #56]
  41aeb0:	str	wzr, [sp, #52]
  41aeb4:	ldr	w0, [sp, #52]
  41aeb8:	bl	405638 <log_get_max_level_realm@plt>
  41aebc:	ldr	w8, [sp, #60]
  41aec0:	and	w8, w8, #0x7
  41aec4:	cmp	w0, w8
  41aec8:	b.lt	41af00 <stdout_stream_new+0x1f0>  // b.tstop
  41aecc:	ldr	w8, [sp, #52]
  41aed0:	ldr	w9, [sp, #60]
  41aed4:	orr	w0, w9, w8, lsl #10
  41aed8:	ldr	w1, [sp, #56]
  41aedc:	ldr	x2, [sp, #24]
  41aee0:	mov	w3, #0x291                 	// #657
  41aee4:	adrp	x4, 42d000 <_fini+0x33a8>
  41aee8:	add	x4, x4, #0xf94
  41aeec:	adrp	x5, 42d000 <_fini+0x33a8>
  41aef0:	add	x5, x5, #0xfdc
  41aef4:	bl	405648 <log_internal_realm@plt>
  41aef8:	str	w0, [sp, #16]
  41aefc:	b	41af14 <stdout_stream_new+0x204>
  41af00:	ldr	w0, [sp, #56]
  41af04:	bl	405658 <abs@plt>
  41af08:	mov	w8, wzr
  41af0c:	subs	w8, w8, w0, uxtb
  41af10:	str	w8, [sp, #16]
  41af14:	ldr	w8, [sp, #16]
  41af18:	str	w8, [sp, #48]
  41af1c:	ldr	w8, [sp, #48]
  41af20:	stur	w8, [x29, #-4]
  41af24:	mov	w8, #0x1                   	// #1
  41af28:	str	w8, [sp, #72]
  41af2c:	b	41b00c <stdout_stream_new+0x2fc>
  41af30:	ldur	x8, [x29, #-48]
  41af34:	ldr	w9, [x8, #520]
  41af38:	cmp	w9, #0x1, lsl #12
  41af3c:	b.cc	41afbc <stdout_stream_new+0x2ac>  // b.lo, b.ul, b.last
  41af40:	ldur	w0, [x29, #-36]
  41af44:	add	x1, sp, #0x24
  41af48:	bl	406128 <getpeercred@plt>
  41af4c:	stur	w0, [x29, #-52]
  41af50:	ldur	w0, [x29, #-36]
  41af54:	bl	4058c8 <safe_close@plt>
  41af58:	stur	w0, [x29, #-36]
  41af5c:	ldur	x0, [x29, #-48]
  41af60:	ldur	w8, [x29, #-52]
  41af64:	cmp	w8, #0x0
  41af68:	cset	w8, ge  // ge = tcont
  41af6c:	str	x0, [sp, #8]
  41af70:	tbnz	w8, #0, 41af80 <stdout_stream_new+0x270>
  41af74:	mov	w8, wzr
  41af78:	str	w8, [sp, #4]
  41af7c:	b	41af88 <stdout_stream_new+0x278>
  41af80:	ldr	w8, [sp, #36]
  41af84:	str	w8, [sp, #4]
  41af88:	ldr	w8, [sp, #4]
  41af8c:	ldr	x0, [sp, #8]
  41af90:	mov	w1, w8
  41af94:	mov	x9, xzr
  41af98:	mov	x2, x9
  41af9c:	adrp	x3, 42e000 <_fini+0x43a8>
  41afa0:	add	x3, x3, #0x3
  41afa4:	mov	x4, x9
  41afa8:	bl	409360 <server_driver_message>
  41afac:	stur	wzr, [x29, #-4]
  41afb0:	mov	w8, #0x1                   	// #1
  41afb4:	str	w8, [sp, #72]
  41afb8:	b	41b00c <stdout_stream_new+0x2fc>
  41afbc:	ldur	x0, [x29, #-48]
  41afc0:	ldur	w1, [x29, #-36]
  41afc4:	mov	x8, xzr
  41afc8:	mov	x2, x8
  41afcc:	bl	4192f8 <stdout_stream_install>
  41afd0:	stur	w0, [x29, #-52]
  41afd4:	ldur	w9, [x29, #-52]
  41afd8:	cmp	w9, #0x0
  41afdc:	cset	w9, ge  // ge = tcont
  41afe0:	tbnz	w9, #0, 41aff8 <stdout_stream_new+0x2e8>
  41afe4:	ldur	w8, [x29, #-52]
  41afe8:	stur	w8, [x29, #-4]
  41afec:	mov	w8, #0x1                   	// #1
  41aff0:	str	w8, [sp, #72]
  41aff4:	b	41b00c <stdout_stream_new+0x2fc>
  41aff8:	mov	w8, #0xffffffff            	// #-1
  41affc:	stur	w8, [x29, #-36]
  41b000:	stur	wzr, [x29, #-4]
  41b004:	mov	w8, #0x1                   	// #1
  41b008:	str	w8, [sp, #72]
  41b00c:	sub	x0, x29, #0x24
  41b010:	bl	41d59c <closep>
  41b014:	ldur	w0, [x29, #-4]
  41b018:	ldp	x29, x30, [sp, #144]
  41b01c:	add	sp, sp, #0xa0
  41b020:	ret

000000000041b024 <stdout_stream_send_notify>:
  41b024:	stp	x29, x30, [sp, #-16]!
  41b028:	mov	x29, sp
  41b02c:	sub	sp, sp, #0xe0
  41b030:	adrp	x8, 44e000 <__FRAME_END__+0x1d1c8>
  41b034:	add	x8, x8, #0xba8
  41b038:	mov	x9, xzr
  41b03c:	mov	x10, #0x1                   	// #1
  41b040:	adrp	x11, 42d000 <_fini+0x33a8>
  41b044:	add	x11, x11, #0x436
  41b048:	add	x11, x11, #0x3
  41b04c:	adrp	x12, 42d000 <_fini+0x33a8>
  41b050:	add	x12, x12, #0x864
  41b054:	sub	x13, x29, #0x20
  41b058:	sub	x14, x29, #0x58
  41b05c:	stur	x0, [x29, #-8]
  41b060:	ldr	q0, [x8]
  41b064:	stur	q0, [x29, #-32]
  41b068:	stur	x9, [x29, #-88]
  41b06c:	stur	wzr, [x29, #-80]
  41b070:	str	x13, [x14, #16]
  41b074:	stur	x10, [x29, #-64]
  41b078:	str	x9, [x14, #32]
  41b07c:	stur	xzr, [x29, #-48]
  41b080:	stur	wzr, [x29, #-40]
  41b084:	stur	x11, [x29, #-184]
  41b088:	stur	x12, [x29, #-192]
  41b08c:	ldur	x8, [x29, #-8]
  41b090:	cmp	x8, #0x0
  41b094:	cset	w9, ne  // ne = any
  41b098:	mov	w10, #0x1                   	// #1
  41b09c:	eor	w9, w9, #0x1
  41b0a0:	eor	w9, w9, w10
  41b0a4:	eor	w9, w9, w10
  41b0a8:	and	w9, w9, #0x1
  41b0ac:	mov	w0, w9
  41b0b0:	sxtw	x8, w0
  41b0b4:	cbz	x8, 41b0d8 <stdout_stream_send_notify+0xb4>
  41b0b8:	mov	w8, wzr
  41b0bc:	mov	w0, w8
  41b0c0:	adrp	x1, 429000 <journal_ratelimit_group_free+0x70>
  41b0c4:	add	x1, x1, #0xdc8
  41b0c8:	ldur	x2, [x29, #-184]
  41b0cc:	mov	w3, #0x379                 	// #889
  41b0d0:	ldur	x4, [x29, #-192]
  41b0d4:	bl	405718 <log_assert_failed_realm@plt>
  41b0d8:	ldur	x8, [x29, #-8]
  41b0dc:	ldrb	w9, [x8, #60]
  41b0e0:	mov	w10, #0x4                   	// #4
  41b0e4:	lsr	w9, w9, w10
  41b0e8:	mov	w10, #0x1                   	// #1
  41b0ec:	and	w9, w9, #0x1
  41b0f0:	eor	w9, w9, w10
  41b0f4:	eor	w9, w9, w10
  41b0f8:	eor	w9, w9, w10
  41b0fc:	eor	w9, w9, w10
  41b100:	and	w9, w9, #0x1
  41b104:	mov	w0, w9
  41b108:	sxtw	x8, w0
  41b10c:	cbz	x8, 41b130 <stdout_stream_send_notify+0x10c>
  41b110:	mov	w8, wzr
  41b114:	mov	w0, w8
  41b118:	adrp	x1, 42d000 <_fini+0x33a8>
  41b11c:	add	x1, x1, #0x893
  41b120:	ldur	x2, [x29, #-184]
  41b124:	mov	w3, #0x37a                 	// #890
  41b128:	ldur	x4, [x29, #-192]
  41b12c:	bl	405718 <log_assert_failed_realm@plt>
  41b130:	ldur	x8, [x29, #-8]
  41b134:	ldrb	w9, [x8, #60]
  41b138:	mov	w10, #0x5                   	// #5
  41b13c:	lsr	w9, w9, w10
  41b140:	mov	w10, #0x1                   	// #1
  41b144:	and	w9, w9, #0x1
  41b148:	eor	w9, w9, w10
  41b14c:	eor	w9, w9, w10
  41b150:	eor	w9, w9, w10
  41b154:	and	w9, w9, #0x1
  41b158:	mov	w0, w9
  41b15c:	sxtw	x8, w0
  41b160:	cbz	x8, 41b184 <stdout_stream_send_notify+0x160>
  41b164:	mov	w8, wzr
  41b168:	mov	w0, w8
  41b16c:	adrp	x1, 42d000 <_fini+0x33a8>
  41b170:	add	x1, x1, #0x89f
  41b174:	ldur	x2, [x29, #-184]
  41b178:	mov	w3, #0x37b                 	// #891
  41b17c:	ldur	x4, [x29, #-192]
  41b180:	bl	405718 <log_assert_failed_realm@plt>
  41b184:	ldur	x8, [x29, #-8]
  41b188:	ldr	x8, [x8]
  41b18c:	cmp	x8, #0x0
  41b190:	cset	w9, ne  // ne = any
  41b194:	mov	w10, #0x1                   	// #1
  41b198:	eor	w9, w9, #0x1
  41b19c:	eor	w9, w9, w10
  41b1a0:	eor	w9, w9, w10
  41b1a4:	and	w9, w9, #0x1
  41b1a8:	mov	w0, w9
  41b1ac:	sxtw	x8, w0
  41b1b0:	cbz	x8, 41b1d4 <stdout_stream_send_notify+0x1b0>
  41b1b4:	mov	w8, wzr
  41b1b8:	mov	w0, w8
  41b1bc:	adrp	x1, 42d000 <_fini+0x33a8>
  41b1c0:	add	x1, x1, #0x8b2
  41b1c4:	ldur	x2, [x29, #-184]
  41b1c8:	mov	w3, #0x37c                 	// #892
  41b1cc:	ldur	x4, [x29, #-192]
  41b1d0:	bl	405718 <log_assert_failed_realm@plt>
  41b1d4:	ldur	x8, [x29, #-8]
  41b1d8:	ldr	x8, [x8]
  41b1dc:	ldr	w9, [x8, #24]
  41b1e0:	cmp	w9, #0x0
  41b1e4:	cset	w9, ge  // ge = tcont
  41b1e8:	mov	w10, #0x1                   	// #1
  41b1ec:	eor	w9, w9, #0x1
  41b1f0:	eor	w9, w9, w10
  41b1f4:	eor	w9, w9, w10
  41b1f8:	and	w9, w9, #0x1
  41b1fc:	mov	w0, w9
  41b200:	sxtw	x8, w0
  41b204:	cbz	x8, 41b228 <stdout_stream_send_notify+0x204>
  41b208:	mov	w8, wzr
  41b20c:	mov	w0, w8
  41b210:	adrp	x1, 42d000 <_fini+0x33a8>
  41b214:	add	x1, x1, #0x8bc
  41b218:	ldur	x2, [x29, #-184]
  41b21c:	mov	w3, #0x37d                 	// #893
  41b220:	ldur	x4, [x29, #-192]
  41b224:	bl	405718 <log_assert_failed_realm@plt>
  41b228:	mov	x8, #0x18                  	// #24
  41b22c:	stur	x8, [x29, #-48]
  41b230:	ldur	x8, [x29, #-48]
  41b234:	stur	x8, [x29, #-120]
  41b238:	ldur	x8, [x29, #-120]
  41b23c:	cmp	x8, #0x400, lsl #12
  41b240:	cset	w9, ls  // ls = plast
  41b244:	mov	w10, #0x1                   	// #1
  41b248:	eor	w9, w9, #0x1
  41b24c:	eor	w9, w9, w10
  41b250:	eor	w9, w9, w10
  41b254:	and	w9, w9, #0x1
  41b258:	mov	w0, w9
  41b25c:	sxtw	x8, w0
  41b260:	cbz	x8, 41b284 <stdout_stream_send_notify+0x260>
  41b264:	mov	w8, wzr
  41b268:	mov	w0, w8
  41b26c:	adrp	x1, 42d000 <_fini+0x33a8>
  41b270:	add	x1, x1, #0x8d6
  41b274:	ldur	x2, [x29, #-184]
  41b278:	mov	w3, #0x383                 	// #899
  41b27c:	ldur	x4, [x29, #-192]
  41b280:	bl	405718 <log_assert_failed_realm@plt>
  41b284:	ldur	x8, [x29, #-120]
  41b288:	mov	x9, #0x1                   	// #1
  41b28c:	mul	x8, x8, x9
  41b290:	add	x8, x8, #0xf
  41b294:	and	x8, x8, #0xfffffffffffffff0
  41b298:	mov	x9, sp
  41b29c:	subs	x8, x9, x8
  41b2a0:	mov	sp, x8
  41b2a4:	stur	x8, [x29, #-112]
  41b2a8:	ldur	x8, [x29, #-112]
  41b2ac:	ldur	x2, [x29, #-120]
  41b2b0:	mov	x0, x8
  41b2b4:	mov	w10, wzr
  41b2b8:	mov	w1, w10
  41b2bc:	stur	x8, [x29, #-200]
  41b2c0:	bl	405c28 <memset@plt>
  41b2c4:	ldur	x8, [x29, #-200]
  41b2c8:	stur	x8, [x29, #-128]
  41b2cc:	ldur	x9, [x29, #-128]
  41b2d0:	sub	x11, x29, #0x58
  41b2d4:	str	x9, [x11, #32]
  41b2d8:	ldur	x9, [x29, #-48]
  41b2dc:	cmp	x9, #0x10
  41b2e0:	b.cc	41b2f4 <stdout_stream_send_notify+0x2d0>  // b.lo, b.ul, b.last
  41b2e4:	sub	x8, x29, #0x58
  41b2e8:	ldr	x8, [x8, #32]
  41b2ec:	stur	x8, [x29, #-208]
  41b2f0:	b	41b2fc <stdout_stream_send_notify+0x2d8>
  41b2f4:	mov	x8, xzr
  41b2f8:	stur	x8, [x29, #-208]
  41b2fc:	ldur	x8, [x29, #-208]
  41b300:	stur	x8, [x29, #-96]
  41b304:	ldur	x8, [x29, #-96]
  41b308:	mov	w9, #0x1                   	// #1
  41b30c:	str	w9, [x8, #8]
  41b310:	ldur	x8, [x29, #-96]
  41b314:	str	w9, [x8, #12]
  41b318:	ldur	x8, [x29, #-96]
  41b31c:	mov	x10, #0x14                  	// #20
  41b320:	str	x10, [x8]
  41b324:	ldur	x8, [x29, #-96]
  41b328:	ldur	x10, [x29, #-8]
  41b32c:	ldr	w9, [x10, #12]
  41b330:	str	w9, [x8, #16]
  41b334:	ldur	x8, [x29, #-8]
  41b338:	ldr	x8, [x8]
  41b33c:	ldr	w0, [x8, #24]
  41b340:	sub	x1, x29, #0x58
  41b344:	mov	w2, #0x4040                	// #16448
  41b348:	bl	406238 <sendmsg@plt>
  41b34c:	stur	x0, [x29, #-104]
  41b350:	ldur	x8, [x29, #-104]
  41b354:	cmp	x8, #0x0
  41b358:	cset	w9, ge  // ge = tcont
  41b35c:	tbnz	w9, #0, 41b3f8 <stdout_stream_send_notify+0x3d4>
  41b360:	bl	405768 <__errno_location@plt>
  41b364:	ldr	w8, [x0]
  41b368:	cmp	w8, #0xb
  41b36c:	b.ne	41b374 <stdout_stream_send_notify+0x350>  // b.any
  41b370:	b	41b5b4 <stdout_stream_send_notify+0x590>
  41b374:	mov	w8, #0x3                   	// #3
  41b378:	stur	w8, [x29, #-132]
  41b37c:	bl	405768 <__errno_location@plt>
  41b380:	ldr	w8, [x0]
  41b384:	stur	w8, [x29, #-136]
  41b388:	stur	wzr, [x29, #-140]
  41b38c:	ldur	w0, [x29, #-140]
  41b390:	bl	405638 <log_get_max_level_realm@plt>
  41b394:	ldur	w8, [x29, #-132]
  41b398:	and	w8, w8, #0x7
  41b39c:	cmp	w0, w8
  41b3a0:	b.lt	41b3d8 <stdout_stream_send_notify+0x3b4>  // b.tstop
  41b3a4:	ldur	w8, [x29, #-140]
  41b3a8:	ldur	w9, [x29, #-132]
  41b3ac:	orr	w0, w9, w8, lsl #10
  41b3b0:	ldur	w1, [x29, #-136]
  41b3b4:	ldur	x2, [x29, #-184]
  41b3b8:	mov	w3, #0x391                 	// #913
  41b3bc:	adrp	x4, 42d000 <_fini+0x33a8>
  41b3c0:	add	x4, x4, #0x8ea
  41b3c4:	adrp	x5, 42d000 <_fini+0x33a8>
  41b3c8:	add	x5, x5, #0x904
  41b3cc:	bl	405648 <log_internal_realm@plt>
  41b3d0:	stur	w0, [x29, #-212]
  41b3d4:	b	41b3ec <stdout_stream_send_notify+0x3c8>
  41b3d8:	ldur	w0, [x29, #-136]
  41b3dc:	bl	405658 <abs@plt>
  41b3e0:	mov	w8, wzr
  41b3e4:	subs	w8, w8, w0, uxtb
  41b3e8:	stur	w8, [x29, #-212]
  41b3ec:	ldur	w8, [x29, #-212]
  41b3f0:	stur	w8, [x29, #-144]
  41b3f4:	b	41b484 <stdout_stream_send_notify+0x460>
  41b3f8:	mov	w8, #0x7                   	// #7
  41b3fc:	stur	w8, [x29, #-148]
  41b400:	stur	wzr, [x29, #-152]
  41b404:	stur	wzr, [x29, #-156]
  41b408:	ldur	w0, [x29, #-156]
  41b40c:	bl	405638 <log_get_max_level_realm@plt>
  41b410:	ldur	w8, [x29, #-148]
  41b414:	and	w8, w8, #0x7
  41b418:	cmp	w0, w8
  41b41c:	b.lt	41b454 <stdout_stream_send_notify+0x430>  // b.tstop
  41b420:	ldur	w8, [x29, #-156]
  41b424:	ldur	w9, [x29, #-148]
  41b428:	orr	w0, w9, w8, lsl #10
  41b42c:	ldur	w1, [x29, #-152]
  41b430:	ldur	x2, [x29, #-184]
  41b434:	mov	w3, #0x393                 	// #915
  41b438:	adrp	x4, 42d000 <_fini+0x33a8>
  41b43c:	add	x4, x4, #0x8ea
  41b440:	adrp	x5, 42d000 <_fini+0x33a8>
  41b444:	add	x5, x5, #0x941
  41b448:	bl	405648 <log_internal_realm@plt>
  41b44c:	stur	w0, [x29, #-216]
  41b450:	b	41b468 <stdout_stream_send_notify+0x444>
  41b454:	ldur	w0, [x29, #-152]
  41b458:	bl	405658 <abs@plt>
  41b45c:	mov	w8, wzr
  41b460:	subs	w8, w8, w0, uxtb
  41b464:	stur	w8, [x29, #-216]
  41b468:	ldur	w8, [x29, #-216]
  41b46c:	stur	w8, [x29, #-160]
  41b470:	ldur	x9, [x29, #-8]
  41b474:	ldrb	w8, [x9, #60]
  41b478:	and	w8, w8, #0xffffffef
  41b47c:	orr	w8, w8, #0x10
  41b480:	strb	w8, [x9, #60]
  41b484:	ldur	x8, [x29, #-8]
  41b488:	ldr	x8, [x8]
  41b48c:	add	x8, x8, #0x200
  41b490:	stur	x8, [x29, #-168]
  41b494:	ldur	x8, [x29, #-8]
  41b498:	stur	x8, [x29, #-176]
  41b49c:	ldur	x8, [x29, #-176]
  41b4a0:	cmp	x8, #0x0
  41b4a4:	cset	w9, ne  // ne = any
  41b4a8:	mov	w10, #0x1                   	// #1
  41b4ac:	eor	w9, w9, #0x1
  41b4b0:	eor	w9, w9, w10
  41b4b4:	eor	w9, w9, w10
  41b4b8:	and	w9, w9, #0x1
  41b4bc:	mov	w0, w9
  41b4c0:	sxtw	x8, w0
  41b4c4:	cbz	x8, 41b4e8 <stdout_stream_send_notify+0x4c4>
  41b4c8:	mov	w8, wzr
  41b4cc:	mov	w0, w8
  41b4d0:	adrp	x1, 42d000 <_fini+0x33a8>
  41b4d4:	add	x1, x1, #0x47f
  41b4d8:	ldur	x2, [x29, #-184]
  41b4dc:	mov	w3, #0x397                 	// #919
  41b4e0:	ldur	x4, [x29, #-192]
  41b4e4:	bl	405718 <log_assert_failed_realm@plt>
  41b4e8:	ldur	x8, [x29, #-176]
  41b4ec:	ldr	x8, [x8, #128]
  41b4f0:	cbz	x8, 41b508 <stdout_stream_send_notify+0x4e4>
  41b4f4:	ldur	x8, [x29, #-176]
  41b4f8:	ldr	x8, [x8, #136]
  41b4fc:	ldur	x9, [x29, #-176]
  41b500:	ldr	x9, [x9, #128]
  41b504:	str	x8, [x9, #136]
  41b508:	ldur	x8, [x29, #-176]
  41b50c:	ldr	x8, [x8, #136]
  41b510:	cbz	x8, 41b52c <stdout_stream_send_notify+0x508>
  41b514:	ldur	x8, [x29, #-176]
  41b518:	ldr	x8, [x8, #128]
  41b51c:	ldur	x9, [x29, #-176]
  41b520:	ldr	x9, [x9, #136]
  41b524:	str	x8, [x9, #128]
  41b528:	b	41b590 <stdout_stream_send_notify+0x56c>
  41b52c:	ldur	x8, [x29, #-168]
  41b530:	ldr	x8, [x8]
  41b534:	ldur	x9, [x29, #-176]
  41b538:	cmp	x8, x9
  41b53c:	cset	w10, eq  // eq = none
  41b540:	mov	w11, #0x1                   	// #1
  41b544:	eor	w10, w10, #0x1
  41b548:	eor	w10, w10, w11
  41b54c:	eor	w10, w10, w11
  41b550:	and	w10, w10, #0x1
  41b554:	mov	w0, w10
  41b558:	sxtw	x8, w0
  41b55c:	cbz	x8, 41b580 <stdout_stream_send_notify+0x55c>
  41b560:	mov	w8, wzr
  41b564:	mov	w0, w8
  41b568:	adrp	x1, 42d000 <_fini+0x33a8>
  41b56c:	add	x1, x1, #0x485
  41b570:	ldur	x2, [x29, #-184]
  41b574:	mov	w3, #0x397                 	// #919
  41b578:	ldur	x4, [x29, #-192]
  41b57c:	bl	405718 <log_assert_failed_realm@plt>
  41b580:	ldur	x8, [x29, #-176]
  41b584:	ldr	x8, [x8, #128]
  41b588:	ldur	x9, [x29, #-168]
  41b58c:	str	x8, [x9]
  41b590:	ldur	x8, [x29, #-176]
  41b594:	mov	x9, xzr
  41b598:	str	x9, [x8, #136]
  41b59c:	ldur	x8, [x29, #-176]
  41b5a0:	str	x9, [x8, #128]
  41b5a4:	ldur	x8, [x29, #-8]
  41b5a8:	ldrb	w9, [x8, #60]
  41b5ac:	and	w9, w9, #0xffffffdf
  41b5b0:	strb	w9, [x8, #60]
  41b5b4:	mov	sp, x29
  41b5b8:	ldp	x29, x30, [sp], #16
  41b5bc:	ret

000000000041b5c0 <stdout_stream_scan>:
  41b5c0:	sub	sp, sp, #0x70
  41b5c4:	stp	x29, x30, [sp, #96]
  41b5c8:	add	x29, sp, #0x60
  41b5cc:	mov	w8, #0x1                   	// #1
  41b5d0:	adrp	x9, 42d000 <_fini+0x33a8>
  41b5d4:	add	x9, x9, #0x436
  41b5d8:	add	x2, x9, #0x3
  41b5dc:	stur	x0, [x29, #-16]
  41b5e0:	and	w8, w1, w8
  41b5e4:	sturb	w8, [x29, #-17]
  41b5e8:	str	x2, [sp, #16]
  41b5ec:	ldur	x8, [x29, #-16]
  41b5f0:	cmp	x8, #0x0
  41b5f4:	cset	w9, ne  // ne = any
  41b5f8:	mov	w10, #0x1                   	// #1
  41b5fc:	eor	w9, w9, #0x1
  41b600:	eor	w9, w9, w10
  41b604:	eor	w9, w9, w10
  41b608:	and	w9, w9, #0x1
  41b60c:	mov	w0, w9
  41b610:	sxtw	x8, w0
  41b614:	cbz	x8, 41b63c <stdout_stream_scan+0x7c>
  41b618:	mov	w8, wzr
  41b61c:	mov	w0, w8
  41b620:	adrp	x1, 429000 <journal_ratelimit_group_free+0x70>
  41b624:	add	x1, x1, #0xdc8
  41b628:	ldr	x2, [sp, #16]
  41b62c:	mov	w3, #0x1af                 	// #431
  41b630:	adrp	x4, 42d000 <_fini+0x33a8>
  41b634:	add	x4, x4, #0xa2a
  41b638:	bl	405718 <log_assert_failed_realm@plt>
  41b63c:	ldur	x8, [x29, #-16]
  41b640:	ldr	x8, [x8, #64]
  41b644:	stur	x8, [x29, #-32]
  41b648:	ldur	x8, [x29, #-16]
  41b64c:	ldr	x8, [x8, #72]
  41b650:	stur	x8, [x29, #-40]
  41b654:	ldur	x0, [x29, #-32]
  41b658:	ldur	x2, [x29, #-40]
  41b65c:	mov	w1, #0xa                   	// #10
  41b660:	bl	405788 <memchr@plt>
  41b664:	str	x0, [sp, #32]
  41b668:	ldur	x0, [x29, #-32]
  41b66c:	ldr	x8, [sp, #32]
  41b670:	str	x0, [sp, #8]
  41b674:	cbz	x8, 41b68c <stdout_stream_scan+0xcc>
  41b678:	ldr	x8, [sp, #32]
  41b67c:	ldur	x9, [x29, #-32]
  41b680:	subs	x8, x8, x9
  41b684:	str	x8, [sp]
  41b688:	b	41b694 <stdout_stream_scan+0xd4>
  41b68c:	ldur	x8, [x29, #-40]
  41b690:	str	x8, [sp]
  41b694:	ldr	x8, [sp]
  41b698:	ldr	x0, [sp, #8]
  41b69c:	mov	w9, wzr
  41b6a0:	mov	w1, w9
  41b6a4:	mov	x2, x8
  41b6a8:	bl	405788 <memchr@plt>
  41b6ac:	str	x0, [sp, #24]
  41b6b0:	ldr	x8, [sp, #24]
  41b6b4:	cbz	x8, 41b6d8 <stdout_stream_scan+0x118>
  41b6b8:	ldr	x8, [sp, #24]
  41b6bc:	ldur	x9, [x29, #-32]
  41b6c0:	subs	x8, x8, x9
  41b6c4:	add	x8, x8, #0x1
  41b6c8:	str	x8, [sp, #40]
  41b6cc:	mov	w10, #0x1                   	// #1
  41b6d0:	str	w10, [sp, #48]
  41b6d4:	b	41b754 <stdout_stream_scan+0x194>
  41b6d8:	ldr	x8, [sp, #32]
  41b6dc:	cbz	x8, 41b708 <stdout_stream_scan+0x148>
  41b6e0:	ldr	x8, [sp, #32]
  41b6e4:	mov	w9, #0x0                   	// #0
  41b6e8:	strb	w9, [x8]
  41b6ec:	ldr	x8, [sp, #32]
  41b6f0:	ldur	x10, [x29, #-32]
  41b6f4:	subs	x8, x8, x10
  41b6f8:	add	x8, x8, #0x1
  41b6fc:	str	x8, [sp, #40]
  41b700:	str	wzr, [sp, #48]
  41b704:	b	41b754 <stdout_stream_scan+0x194>
  41b708:	ldur	x8, [x29, #-40]
  41b70c:	ldur	x9, [x29, #-16]
  41b710:	ldr	x9, [x9]
  41b714:	ldr	x9, [x9, #712]
  41b718:	cmp	x8, x9
  41b71c:	b.cc	41b750 <stdout_stream_scan+0x190>  // b.lo, b.ul, b.last
  41b720:	ldur	x8, [x29, #-32]
  41b724:	ldur	x9, [x29, #-16]
  41b728:	ldr	x9, [x9]
  41b72c:	ldr	x9, [x9, #712]
  41b730:	add	x8, x8, x9
  41b734:	mov	w10, #0x0                   	// #0
  41b738:	strb	w10, [x8]
  41b73c:	ldur	x8, [x29, #-40]
  41b740:	str	x8, [sp, #40]
  41b744:	mov	w10, #0x2                   	// #2
  41b748:	str	w10, [sp, #48]
  41b74c:	b	41b754 <stdout_stream_scan+0x194>
  41b750:	b	41b7a8 <stdout_stream_scan+0x1e8>
  41b754:	ldur	x0, [x29, #-16]
  41b758:	ldur	x1, [x29, #-32]
  41b75c:	ldr	w2, [sp, #48]
  41b760:	bl	41b864 <stdout_stream_line>
  41b764:	stur	w0, [x29, #-44]
  41b768:	ldur	w8, [x29, #-44]
  41b76c:	cmp	w8, #0x0
  41b770:	cset	w8, ge  // ge = tcont
  41b774:	tbnz	w8, #0, 41b784 <stdout_stream_scan+0x1c4>
  41b778:	ldur	w8, [x29, #-44]
  41b77c:	stur	w8, [x29, #-4]
  41b780:	b	41b854 <stdout_stream_scan+0x294>
  41b784:	ldr	x8, [sp, #40]
  41b788:	ldur	x9, [x29, #-40]
  41b78c:	subs	x8, x9, x8
  41b790:	stur	x8, [x29, #-40]
  41b794:	ldr	x8, [sp, #40]
  41b798:	ldur	x9, [x29, #-32]
  41b79c:	add	x8, x9, x8
  41b7a0:	stur	x8, [x29, #-32]
  41b7a4:	b	41b654 <stdout_stream_scan+0x94>
  41b7a8:	ldurb	w8, [x29, #-17]
  41b7ac:	tbnz	w8, #0, 41b7b4 <stdout_stream_scan+0x1f4>
  41b7b0:	b	41b81c <stdout_stream_scan+0x25c>
  41b7b4:	ldur	x8, [x29, #-40]
  41b7b8:	cmp	x8, #0x0
  41b7bc:	cset	w9, ls  // ls = plast
  41b7c0:	tbnz	w9, #0, 41b81c <stdout_stream_scan+0x25c>
  41b7c4:	ldur	x8, [x29, #-32]
  41b7c8:	ldur	x9, [x29, #-40]
  41b7cc:	add	x8, x8, x9
  41b7d0:	mov	w10, #0x0                   	// #0
  41b7d4:	strb	w10, [x8]
  41b7d8:	ldur	x0, [x29, #-16]
  41b7dc:	ldur	x1, [x29, #-32]
  41b7e0:	mov	w2, #0x3                   	// #3
  41b7e4:	bl	41b864 <stdout_stream_line>
  41b7e8:	stur	w0, [x29, #-44]
  41b7ec:	ldur	w10, [x29, #-44]
  41b7f0:	cmp	w10, #0x0
  41b7f4:	cset	w10, ge  // ge = tcont
  41b7f8:	tbnz	w10, #0, 41b808 <stdout_stream_scan+0x248>
  41b7fc:	ldur	w8, [x29, #-44]
  41b800:	stur	w8, [x29, #-4]
  41b804:	b	41b854 <stdout_stream_scan+0x294>
  41b808:	ldur	x8, [x29, #-40]
  41b80c:	ldur	x9, [x29, #-32]
  41b810:	add	x8, x9, x8
  41b814:	stur	x8, [x29, #-32]
  41b818:	stur	xzr, [x29, #-40]
  41b81c:	ldur	x8, [x29, #-32]
  41b820:	ldur	x9, [x29, #-16]
  41b824:	ldr	x9, [x9, #64]
  41b828:	cmp	x8, x9
  41b82c:	b.ls	41b850 <stdout_stream_scan+0x290>  // b.plast
  41b830:	ldur	x8, [x29, #-16]
  41b834:	ldr	x0, [x8, #64]
  41b838:	ldur	x1, [x29, #-32]
  41b83c:	ldur	x2, [x29, #-40]
  41b840:	bl	406248 <memmove@plt>
  41b844:	ldur	x8, [x29, #-40]
  41b848:	ldur	x9, [x29, #-16]
  41b84c:	str	x8, [x9, #72]
  41b850:	stur	wzr, [x29, #-4]
  41b854:	ldur	w0, [x29, #-4]
  41b858:	ldp	x29, x30, [sp, #96]
  41b85c:	add	sp, sp, #0x70
  41b860:	ret

000000000041b864 <stdout_stream_line>:
  41b864:	sub	sp, sp, #0xe0
  41b868:	stp	x29, x30, [sp, #208]
  41b86c:	add	x29, sp, #0xd0
  41b870:	adrp	x8, 42d000 <_fini+0x33a8>
  41b874:	add	x8, x8, #0x436
  41b878:	add	x8, x8, #0x3
  41b87c:	adrp	x9, 42d000 <_fini+0x33a8>
  41b880:	add	x9, x9, #0xa92
  41b884:	adrp	x10, 42d000 <_fini+0x33a8>
  41b888:	add	x10, x10, #0xa58
  41b88c:	stur	x0, [x29, #-16]
  41b890:	stur	x1, [x29, #-24]
  41b894:	stur	w2, [x29, #-28]
  41b898:	str	x8, [sp, #64]
  41b89c:	str	x9, [sp, #56]
  41b8a0:	str	x10, [sp, #48]
  41b8a4:	ldur	x8, [x29, #-16]
  41b8a8:	cmp	x8, #0x0
  41b8ac:	cset	w9, ne  // ne = any
  41b8b0:	mov	w10, #0x1                   	// #1
  41b8b4:	eor	w9, w9, #0x1
  41b8b8:	eor	w9, w9, w10
  41b8bc:	eor	w9, w9, w10
  41b8c0:	and	w9, w9, #0x1
  41b8c4:	mov	w0, w9
  41b8c8:	sxtw	x8, w0
  41b8cc:	cbz	x8, 41b8f0 <stdout_stream_line+0x8c>
  41b8d0:	mov	w8, wzr
  41b8d4:	mov	w0, w8
  41b8d8:	adrp	x1, 429000 <journal_ratelimit_group_free+0x70>
  41b8dc:	add	x1, x1, #0xdc8
  41b8e0:	ldr	x2, [sp, #64]
  41b8e4:	mov	w3, #0x146                 	// #326
  41b8e8:	ldr	x4, [sp, #48]
  41b8ec:	bl	405718 <log_assert_failed_realm@plt>
  41b8f0:	ldur	x8, [x29, #-24]
  41b8f4:	cmp	x8, #0x0
  41b8f8:	cset	w9, ne  // ne = any
  41b8fc:	mov	w10, #0x1                   	// #1
  41b900:	eor	w9, w9, #0x1
  41b904:	eor	w9, w9, w10
  41b908:	eor	w9, w9, w10
  41b90c:	and	w9, w9, #0x1
  41b910:	mov	w0, w9
  41b914:	sxtw	x8, w0
  41b918:	cbz	x8, 41b93c <stdout_stream_line+0xd8>
  41b91c:	mov	w8, wzr
  41b920:	mov	w0, w8
  41b924:	adrp	x1, 429000 <journal_ratelimit_group_free+0x70>
  41b928:	add	x1, x1, #0xf43
  41b92c:	ldr	x2, [sp, #64]
  41b930:	mov	w3, #0x147                 	// #327
  41b934:	ldr	x4, [sp, #48]
  41b938:	bl	405718 <log_assert_failed_realm@plt>
  41b93c:	ldur	x8, [x29, #-24]
  41b940:	stur	x8, [x29, #-40]
  41b944:	ldur	x0, [x29, #-24]
  41b948:	bl	406258 <strstrip@plt>
  41b94c:	stur	x0, [x29, #-24]
  41b950:	ldur	w9, [x29, #-28]
  41b954:	cbz	w9, 41b9e8 <stdout_stream_line+0x184>
  41b958:	ldur	x8, [x29, #-16]
  41b95c:	ldr	w9, [x8, #8]
  41b960:	cmp	w9, #0x7
  41b964:	b.eq	41b9e8 <stdout_stream_line+0x184>  // b.none
  41b968:	mov	w8, #0x4                   	// #4
  41b96c:	stur	w8, [x29, #-44]
  41b970:	stur	wzr, [x29, #-48]
  41b974:	stur	wzr, [x29, #-52]
  41b978:	ldur	w0, [x29, #-52]
  41b97c:	bl	405638 <log_get_max_level_realm@plt>
  41b980:	ldur	w8, [x29, #-44]
  41b984:	and	w8, w8, #0x7
  41b988:	cmp	w0, w8
  41b98c:	b.lt	41b9c0 <stdout_stream_line+0x15c>  // b.tstop
  41b990:	ldur	w8, [x29, #-52]
  41b994:	ldur	w9, [x29, #-44]
  41b998:	orr	w0, w9, w8, lsl #10
  41b99c:	ldur	w1, [x29, #-48]
  41b9a0:	ldr	x2, [sp, #64]
  41b9a4:	mov	w3, #0x14e                 	// #334
  41b9a8:	ldr	x4, [sp, #56]
  41b9ac:	adrp	x5, 42d000 <_fini+0x33a8>
  41b9b0:	add	x5, x5, #0xaa5
  41b9b4:	bl	405648 <log_internal_realm@plt>
  41b9b8:	str	w0, [sp, #44]
  41b9bc:	b	41b9d4 <stdout_stream_line+0x170>
  41b9c0:	ldur	w0, [x29, #-48]
  41b9c4:	bl	405658 <abs@plt>
  41b9c8:	mov	w8, wzr
  41b9cc:	subs	w8, w8, w0, uxtb
  41b9d0:	str	w8, [sp, #44]
  41b9d4:	ldr	w8, [sp, #44]
  41b9d8:	stur	w8, [x29, #-56]
  41b9dc:	mov	w8, #0xffffffea            	// #-22
  41b9e0:	stur	w8, [x29, #-4]
  41b9e4:	b	41bf68 <stdout_stream_line+0x704>
  41b9e8:	ldur	x8, [x29, #-16]
  41b9ec:	ldr	w9, [x8, #8]
  41b9f0:	subs	w9, w9, #0x0
  41b9f4:	mov	w8, w9
  41b9f8:	ubfx	x8, x8, #0, #32
  41b9fc:	cmp	x8, #0x7
  41ba00:	str	x8, [sp, #32]
  41ba04:	b.hi	41bf48 <stdout_stream_line+0x6e4>  // b.pmore
  41ba08:	adrp	x8, 430000 <_fini+0x63a8>
  41ba0c:	add	x8, x8, #0x550
  41ba10:	ldr	x11, [sp, #32]
  41ba14:	ldrsw	x10, [x8, x11, lsl #2]
  41ba18:	add	x9, x8, x10
  41ba1c:	br	x9
  41ba20:	ldur	x0, [x29, #-24]
  41ba24:	bl	41bf78 <isempty>
  41ba28:	tbnz	w0, #0, 41ba68 <stdout_stream_line+0x204>
  41ba2c:	ldur	x0, [x29, #-24]
  41ba30:	bl	406268 <strdup@plt>
  41ba34:	ldur	x8, [x29, #-16]
  41ba38:	str	x0, [x8, #40]
  41ba3c:	ldur	x8, [x29, #-16]
  41ba40:	ldr	x8, [x8, #40]
  41ba44:	cbnz	x8, 41ba68 <stdout_stream_line+0x204>
  41ba48:	mov	w8, wzr
  41ba4c:	mov	w0, w8
  41ba50:	ldr	x1, [sp, #64]
  41ba54:	mov	w2, #0x158                 	// #344
  41ba58:	ldr	x3, [sp, #56]
  41ba5c:	bl	405958 <log_oom_internal@plt>
  41ba60:	stur	w0, [x29, #-4]
  41ba64:	b	41bf68 <stdout_stream_line+0x704>
  41ba68:	ldur	x8, [x29, #-16]
  41ba6c:	mov	w9, #0x1                   	// #1
  41ba70:	str	w9, [x8, #8]
  41ba74:	stur	wzr, [x29, #-4]
  41ba78:	b	41bf68 <stdout_stream_line+0x704>
  41ba7c:	ldur	x8, [x29, #-16]
  41ba80:	ldr	w9, [x8, #20]
  41ba84:	cbnz	w9, 41bad8 <stdout_stream_line+0x274>
  41ba88:	ldur	x0, [x29, #-24]
  41ba8c:	mov	w1, #0x5                   	// #5
  41ba90:	bl	406278 <unit_name_is_valid@plt>
  41ba94:	tbnz	w0, #0, 41ba9c <stdout_stream_line+0x238>
  41ba98:	b	41bad8 <stdout_stream_line+0x274>
  41ba9c:	ldur	x0, [x29, #-24]
  41baa0:	bl	406268 <strdup@plt>
  41baa4:	ldur	x8, [x29, #-16]
  41baa8:	str	x0, [x8, #48]
  41baac:	ldur	x8, [x29, #-16]
  41bab0:	ldr	x8, [x8, #48]
  41bab4:	cbnz	x8, 41bad8 <stdout_stream_line+0x274>
  41bab8:	mov	w8, wzr
  41babc:	mov	w0, w8
  41bac0:	ldr	x1, [sp, #64]
  41bac4:	mov	w2, #0x164                 	// #356
  41bac8:	ldr	x3, [sp, #56]
  41bacc:	bl	405958 <log_oom_internal@plt>
  41bad0:	stur	w0, [x29, #-4]
  41bad4:	b	41bf68 <stdout_stream_line+0x704>
  41bad8:	ldur	x8, [x29, #-16]
  41badc:	mov	w9, #0x2                   	// #2
  41bae0:	str	w9, [x8, #8]
  41bae4:	stur	wzr, [x29, #-4]
  41bae8:	b	41bf68 <stdout_stream_line+0x704>
  41baec:	ldur	x0, [x29, #-24]
  41baf0:	ldur	x8, [x29, #-16]
  41baf4:	add	x1, x8, #0x38
  41baf8:	bl	405798 <safe_atoi@plt>
  41bafc:	stur	w0, [x29, #-32]
  41bb00:	ldur	w9, [x29, #-32]
  41bb04:	cmp	w9, #0x0
  41bb08:	cset	w9, lt  // lt = tstop
  41bb0c:	tbnz	w9, #0, 41bb34 <stdout_stream_line+0x2d0>
  41bb10:	ldur	x8, [x29, #-16]
  41bb14:	ldr	w9, [x8, #56]
  41bb18:	cmp	w9, #0x0
  41bb1c:	cset	w9, lt  // lt = tstop
  41bb20:	tbnz	w9, #0, 41bb34 <stdout_stream_line+0x2d0>
  41bb24:	ldur	x8, [x29, #-16]
  41bb28:	ldr	w9, [x8, #56]
  41bb2c:	cmp	w9, #0x3e7
  41bb30:	b.le	41bbb4 <stdout_stream_line+0x350>
  41bb34:	mov	w8, #0x4                   	// #4
  41bb38:	stur	w8, [x29, #-60]
  41bb3c:	stur	wzr, [x29, #-64]
  41bb40:	stur	wzr, [x29, #-68]
  41bb44:	ldur	w0, [x29, #-68]
  41bb48:	bl	405638 <log_get_max_level_realm@plt>
  41bb4c:	ldur	w8, [x29, #-60]
  41bb50:	and	w8, w8, #0x7
  41bb54:	cmp	w0, w8
  41bb58:	b.lt	41bb8c <stdout_stream_line+0x328>  // b.tstop
  41bb5c:	ldur	w8, [x29, #-68]
  41bb60:	ldur	w9, [x29, #-60]
  41bb64:	orr	w0, w9, w8, lsl #10
  41bb68:	ldur	w1, [x29, #-64]
  41bb6c:	ldr	x2, [sp, #64]
  41bb70:	mov	w3, #0x16d                 	// #365
  41bb74:	ldr	x4, [sp, #56]
  41bb78:	adrp	x5, 42d000 <_fini+0x33a8>
  41bb7c:	add	x5, x5, #0xad4
  41bb80:	bl	405648 <log_internal_realm@plt>
  41bb84:	str	w0, [sp, #28]
  41bb88:	b	41bba0 <stdout_stream_line+0x33c>
  41bb8c:	ldur	w0, [x29, #-64]
  41bb90:	bl	405658 <abs@plt>
  41bb94:	mov	w8, wzr
  41bb98:	subs	w8, w8, w0, uxtb
  41bb9c:	str	w8, [sp, #28]
  41bba0:	ldr	w8, [sp, #28]
  41bba4:	stur	w8, [x29, #-72]
  41bba8:	mov	w8, #0xffffffea            	// #-22
  41bbac:	stur	w8, [x29, #-4]
  41bbb0:	b	41bf68 <stdout_stream_line+0x704>
  41bbb4:	ldur	x8, [x29, #-16]
  41bbb8:	mov	w9, #0x3                   	// #3
  41bbbc:	str	w9, [x8, #8]
  41bbc0:	stur	wzr, [x29, #-4]
  41bbc4:	b	41bf68 <stdout_stream_line+0x704>
  41bbc8:	ldur	x0, [x29, #-24]
  41bbcc:	bl	405dd8 <parse_boolean@plt>
  41bbd0:	stur	w0, [x29, #-32]
  41bbd4:	ldur	w8, [x29, #-32]
  41bbd8:	cmp	w8, #0x0
  41bbdc:	cset	w8, ge  // ge = tcont
  41bbe0:	tbnz	w8, #0, 41bc64 <stdout_stream_line+0x400>
  41bbe4:	mov	w8, #0x4                   	// #4
  41bbe8:	stur	w8, [x29, #-76]
  41bbec:	stur	wzr, [x29, #-80]
  41bbf0:	stur	wzr, [x29, #-84]
  41bbf4:	ldur	w0, [x29, #-84]
  41bbf8:	bl	405638 <log_get_max_level_realm@plt>
  41bbfc:	ldur	w8, [x29, #-76]
  41bc00:	and	w8, w8, #0x7
  41bc04:	cmp	w0, w8
  41bc08:	b.lt	41bc3c <stdout_stream_line+0x3d8>  // b.tstop
  41bc0c:	ldur	w8, [x29, #-84]
  41bc10:	ldur	w9, [x29, #-76]
  41bc14:	orr	w0, w9, w8, lsl #10
  41bc18:	ldur	w1, [x29, #-80]
  41bc1c:	ldr	x2, [sp, #64]
  41bc20:	mov	w3, #0x177                 	// #375
  41bc24:	ldr	x4, [sp, #56]
  41bc28:	adrp	x5, 42d000 <_fini+0x33a8>
  41bc2c:	add	x5, x5, #0xaf7
  41bc30:	bl	405648 <log_internal_realm@plt>
  41bc34:	str	w0, [sp, #24]
  41bc38:	b	41bc50 <stdout_stream_line+0x3ec>
  41bc3c:	ldur	w0, [x29, #-80]
  41bc40:	bl	405658 <abs@plt>
  41bc44:	mov	w8, wzr
  41bc48:	subs	w8, w8, w0, uxtb
  41bc4c:	str	w8, [sp, #24]
  41bc50:	ldr	w8, [sp, #24]
  41bc54:	stur	w8, [x29, #-88]
  41bc58:	mov	w8, #0xffffffea            	// #-22
  41bc5c:	stur	w8, [x29, #-4]
  41bc60:	b	41bf68 <stdout_stream_line+0x704>
  41bc64:	ldur	w8, [x29, #-32]
  41bc68:	cmp	w8, #0x0
  41bc6c:	cset	w8, ne  // ne = any
  41bc70:	ldur	x9, [x29, #-16]
  41bc74:	ldrb	w10, [x9, #60]
  41bc78:	and	w10, w10, #0xfffffffe
  41bc7c:	and	w8, w8, #0x1
  41bc80:	orr	w8, w10, w8
  41bc84:	strb	w8, [x9, #60]
  41bc88:	ldur	x9, [x29, #-16]
  41bc8c:	mov	w8, #0x4                   	// #4
  41bc90:	str	w8, [x9, #8]
  41bc94:	stur	wzr, [x29, #-4]
  41bc98:	b	41bf68 <stdout_stream_line+0x704>
  41bc9c:	ldur	x0, [x29, #-24]
  41bca0:	bl	405dd8 <parse_boolean@plt>
  41bca4:	stur	w0, [x29, #-32]
  41bca8:	ldur	w8, [x29, #-32]
  41bcac:	cmp	w8, #0x0
  41bcb0:	cset	w8, ge  // ge = tcont
  41bcb4:	tbnz	w8, #0, 41bd38 <stdout_stream_line+0x4d4>
  41bcb8:	mov	w8, #0x4                   	// #4
  41bcbc:	stur	w8, [x29, #-92]
  41bcc0:	stur	wzr, [x29, #-96]
  41bcc4:	stur	wzr, [x29, #-100]
  41bcc8:	ldur	w0, [x29, #-100]
  41bccc:	bl	405638 <log_get_max_level_realm@plt>
  41bcd0:	ldur	w8, [x29, #-92]
  41bcd4:	and	w8, w8, #0x7
  41bcd8:	cmp	w0, w8
  41bcdc:	b.lt	41bd10 <stdout_stream_line+0x4ac>  // b.tstop
  41bce0:	ldur	w8, [x29, #-100]
  41bce4:	ldur	w9, [x29, #-92]
  41bce8:	orr	w0, w9, w8, lsl #10
  41bcec:	ldur	w1, [x29, #-96]
  41bcf0:	ldr	x2, [sp, #64]
  41bcf4:	mov	w3, #0x182                 	// #386
  41bcf8:	ldr	x4, [sp, #56]
  41bcfc:	adrp	x5, 42d000 <_fini+0x33a8>
  41bd00:	add	x5, x5, #0xb1a
  41bd04:	bl	405648 <log_internal_realm@plt>
  41bd08:	str	w0, [sp, #20]
  41bd0c:	b	41bd24 <stdout_stream_line+0x4c0>
  41bd10:	ldur	w0, [x29, #-96]
  41bd14:	bl	405658 <abs@plt>
  41bd18:	mov	w8, wzr
  41bd1c:	subs	w8, w8, w0, uxtb
  41bd20:	str	w8, [sp, #20]
  41bd24:	ldr	w8, [sp, #20]
  41bd28:	str	w8, [sp, #104]
  41bd2c:	mov	w8, #0xffffffea            	// #-22
  41bd30:	stur	w8, [x29, #-4]
  41bd34:	b	41bf68 <stdout_stream_line+0x704>
  41bd38:	ldur	w8, [x29, #-32]
  41bd3c:	cmp	w8, #0x0
  41bd40:	cset	w8, ne  // ne = any
  41bd44:	ldur	x9, [x29, #-16]
  41bd48:	ldrb	w10, [x9, #60]
  41bd4c:	mov	w11, #0x1                   	// #1
  41bd50:	and	w8, w8, #0x1
  41bd54:	lsl	w8, w8, w11
  41bd58:	and	w10, w10, #0xfffffffd
  41bd5c:	orr	w8, w10, w8
  41bd60:	strb	w8, [x9, #60]
  41bd64:	ldur	x9, [x29, #-16]
  41bd68:	mov	w8, #0x5                   	// #5
  41bd6c:	str	w8, [x9, #8]
  41bd70:	stur	wzr, [x29, #-4]
  41bd74:	b	41bf68 <stdout_stream_line+0x704>
  41bd78:	ldur	x0, [x29, #-24]
  41bd7c:	bl	405dd8 <parse_boolean@plt>
  41bd80:	stur	w0, [x29, #-32]
  41bd84:	ldur	w8, [x29, #-32]
  41bd88:	cmp	w8, #0x0
  41bd8c:	cset	w8, ge  // ge = tcont
  41bd90:	tbnz	w8, #0, 41be14 <stdout_stream_line+0x5b0>
  41bd94:	mov	w8, #0x4                   	// #4
  41bd98:	str	w8, [sp, #100]
  41bd9c:	str	wzr, [sp, #96]
  41bda0:	str	wzr, [sp, #92]
  41bda4:	ldr	w0, [sp, #92]
  41bda8:	bl	405638 <log_get_max_level_realm@plt>
  41bdac:	ldr	w8, [sp, #100]
  41bdb0:	and	w8, w8, #0x7
  41bdb4:	cmp	w0, w8
  41bdb8:	b.lt	41bdec <stdout_stream_line+0x588>  // b.tstop
  41bdbc:	ldr	w8, [sp, #92]
  41bdc0:	ldr	w9, [sp, #100]
  41bdc4:	orr	w0, w9, w8, lsl #10
  41bdc8:	ldr	w1, [sp, #96]
  41bdcc:	ldr	x2, [sp, #64]
  41bdd0:	mov	w3, #0x18d                 	// #397
  41bdd4:	ldr	x4, [sp, #56]
  41bdd8:	adrp	x5, 42d000 <_fini+0x33a8>
  41bddc:	add	x5, x5, #0xb42
  41bde0:	bl	405648 <log_internal_realm@plt>
  41bde4:	str	w0, [sp, #16]
  41bde8:	b	41be00 <stdout_stream_line+0x59c>
  41bdec:	ldr	w0, [sp, #96]
  41bdf0:	bl	405658 <abs@plt>
  41bdf4:	mov	w8, wzr
  41bdf8:	subs	w8, w8, w0, uxtb
  41bdfc:	str	w8, [sp, #16]
  41be00:	ldr	w8, [sp, #16]
  41be04:	str	w8, [sp, #88]
  41be08:	mov	w8, #0xffffffea            	// #-22
  41be0c:	stur	w8, [x29, #-4]
  41be10:	b	41bf68 <stdout_stream_line+0x704>
  41be14:	ldur	w8, [x29, #-32]
  41be18:	cmp	w8, #0x0
  41be1c:	cset	w8, ne  // ne = any
  41be20:	ldur	x9, [x29, #-16]
  41be24:	ldrb	w10, [x9, #60]
  41be28:	and	w8, w8, #0x1
  41be2c:	lsl	w8, w8, #2
  41be30:	and	w10, w10, #0xfffffffb
  41be34:	orr	w8, w10, w8
  41be38:	strb	w8, [x9, #60]
  41be3c:	ldur	x9, [x29, #-16]
  41be40:	mov	w8, #0x6                   	// #6
  41be44:	str	w8, [x9, #8]
  41be48:	stur	wzr, [x29, #-4]
  41be4c:	b	41bf68 <stdout_stream_line+0x704>
  41be50:	ldur	x0, [x29, #-24]
  41be54:	bl	405dd8 <parse_boolean@plt>
  41be58:	stur	w0, [x29, #-32]
  41be5c:	ldur	w8, [x29, #-32]
  41be60:	cmp	w8, #0x0
  41be64:	cset	w8, ge  // ge = tcont
  41be68:	tbnz	w8, #0, 41beec <stdout_stream_line+0x688>
  41be6c:	mov	w8, #0x4                   	// #4
  41be70:	str	w8, [sp, #84]
  41be74:	str	wzr, [sp, #80]
  41be78:	str	wzr, [sp, #76]
  41be7c:	ldr	w0, [sp, #76]
  41be80:	bl	405638 <log_get_max_level_realm@plt>
  41be84:	ldr	w8, [sp, #84]
  41be88:	and	w8, w8, #0x7
  41be8c:	cmp	w0, w8
  41be90:	b.lt	41bec4 <stdout_stream_line+0x660>  // b.tstop
  41be94:	ldr	w8, [sp, #76]
  41be98:	ldr	w9, [sp, #84]
  41be9c:	orr	w0, w9, w8, lsl #10
  41bea0:	ldr	w1, [sp, #80]
  41bea4:	ldr	x2, [sp, #64]
  41bea8:	mov	w3, #0x198                 	// #408
  41beac:	ldr	x4, [sp, #56]
  41beb0:	adrp	x5, 42d000 <_fini+0x33a8>
  41beb4:	add	x5, x5, #0xb65
  41beb8:	bl	405648 <log_internal_realm@plt>
  41bebc:	str	w0, [sp, #12]
  41bec0:	b	41bed8 <stdout_stream_line+0x674>
  41bec4:	ldr	w0, [sp, #80]
  41bec8:	bl	405658 <abs@plt>
  41becc:	mov	w8, wzr
  41bed0:	subs	w8, w8, w0, uxtb
  41bed4:	str	w8, [sp, #12]
  41bed8:	ldr	w8, [sp, #12]
  41bedc:	str	w8, [sp, #72]
  41bee0:	mov	w8, #0xffffffea            	// #-22
  41bee4:	stur	w8, [x29, #-4]
  41bee8:	b	41bf68 <stdout_stream_line+0x704>
  41beec:	ldur	w8, [x29, #-32]
  41bef0:	cmp	w8, #0x0
  41bef4:	cset	w8, ne  // ne = any
  41bef8:	ldur	x9, [x29, #-16]
  41befc:	ldrb	w10, [x9, #60]
  41bf00:	and	w8, w8, #0x1
  41bf04:	lsl	w8, w8, #3
  41bf08:	and	w10, w10, #0xfffffff7
  41bf0c:	orr	w8, w10, w8
  41bf10:	strb	w8, [x9, #60]
  41bf14:	ldur	x9, [x29, #-16]
  41bf18:	mov	w8, #0x7                   	// #7
  41bf1c:	str	w8, [x9, #8]
  41bf20:	ldur	x0, [x29, #-16]
  41bf24:	bl	41bfb8 <stdout_stream_save>
  41bf28:	stur	wzr, [x29, #-4]
  41bf2c:	b	41bf68 <stdout_stream_line+0x704>
  41bf30:	ldur	x0, [x29, #-16]
  41bf34:	ldur	x1, [x29, #-40]
  41bf38:	ldur	w2, [x29, #-28]
  41bf3c:	bl	41c5f4 <stdout_stream_log>
  41bf40:	stur	w0, [x29, #-4]
  41bf44:	b	41bf68 <stdout_stream_line+0x704>
  41bf48:	mov	w8, wzr
  41bf4c:	mov	w0, w8
  41bf50:	adrp	x1, 42d000 <_fini+0x33a8>
  41bf54:	add	x1, x1, #0xb8b
  41bf58:	ldr	x2, [sp, #64]
  41bf5c:	mov	w3, #0x1a7                 	// #423
  41bf60:	ldr	x4, [sp, #48]
  41bf64:	bl	406288 <log_assert_failed_unreachable_realm@plt>
  41bf68:	ldur	w0, [x29, #-4]
  41bf6c:	ldp	x29, x30, [sp, #208]
  41bf70:	add	sp, sp, #0xe0
  41bf74:	ret

000000000041bf78 <isempty>:
  41bf78:	sub	sp, sp, #0x10
  41bf7c:	str	x0, [sp, #8]
  41bf80:	ldr	x8, [sp, #8]
  41bf84:	mov	w9, #0x1                   	// #1
  41bf88:	str	w9, [sp, #4]
  41bf8c:	cbz	x8, 41bfa8 <isempty+0x30>
  41bf90:	ldr	x8, [sp, #8]
  41bf94:	ldrb	w9, [x8]
  41bf98:	cmp	w9, #0x0
  41bf9c:	cset	w9, ne  // ne = any
  41bfa0:	eor	w9, w9, #0x1
  41bfa4:	str	w9, [sp, #4]
  41bfa8:	ldr	w8, [sp, #4]
  41bfac:	and	w0, w8, #0x1
  41bfb0:	add	sp, sp, #0x10
  41bfb4:	ret

000000000041bfb8 <stdout_stream_save>:
  41bfb8:	sub	sp, sp, #0x140
  41bfbc:	stp	x29, x30, [sp, #288]
  41bfc0:	str	x28, [sp, #304]
  41bfc4:	add	x29, sp, #0x120
  41bfc8:	mov	x8, xzr
  41bfcc:	adrp	x9, 42d000 <_fini+0x33a8>
  41bfd0:	add	x9, x9, #0x436
  41bfd4:	add	x9, x9, #0x3
  41bfd8:	adrp	x10, 42d000 <_fini+0x33a8>
  41bfdc:	add	x10, x10, #0xbc7
  41bfe0:	stur	x0, [x29, #-16]
  41bfe4:	stur	x8, [x29, #-24]
  41bfe8:	stur	x8, [x29, #-32]
  41bfec:	str	x9, [sp, #32]
  41bff0:	str	x10, [sp, #24]
  41bff4:	ldur	x8, [x29, #-16]
  41bff8:	cmp	x8, #0x0
  41bffc:	cset	w9, ne  // ne = any
  41c000:	mov	w10, #0x1                   	// #1
  41c004:	eor	w9, w9, #0x1
  41c008:	eor	w9, w9, w10
  41c00c:	eor	w9, w9, w10
  41c010:	and	w9, w9, #0x1
  41c014:	mov	w0, w9
  41c018:	sxtw	x8, w0
  41c01c:	cbz	x8, 41c044 <stdout_stream_save+0x8c>
  41c020:	mov	w8, wzr
  41c024:	mov	w0, w8
  41c028:	adrp	x1, 429000 <journal_ratelimit_group_free+0x70>
  41c02c:	add	x1, x1, #0xdc8
  41c030:	ldr	x2, [sp, #32]
  41c034:	mov	w3, #0x92                  	// #146
  41c038:	adrp	x4, 42d000 <_fini+0x33a8>
  41c03c:	add	x4, x4, #0xba0
  41c040:	bl	405718 <log_assert_failed_realm@plt>
  41c044:	ldur	x8, [x29, #-16]
  41c048:	ldr	w9, [x8, #8]
  41c04c:	cmp	w9, #0x7
  41c050:	b.eq	41c064 <stdout_stream_save+0xac>  // b.none
  41c054:	stur	wzr, [x29, #-4]
  41c058:	mov	w8, #0x1                   	// #1
  41c05c:	stur	w8, [x29, #-40]
  41c060:	b	41c5d0 <stdout_stream_save+0x618>
  41c064:	ldur	x8, [x29, #-16]
  41c068:	ldr	x8, [x8, #96]
  41c06c:	cbnz	x8, 41c174 <stdout_stream_save+0x1bc>
  41c070:	ldur	x8, [x29, #-16]
  41c074:	ldr	w0, [x8, #12]
  41c078:	add	x1, sp, #0x78
  41c07c:	bl	429c28 <fstat64>
  41c080:	stur	w0, [x29, #-36]
  41c084:	ldur	w9, [x29, #-36]
  41c088:	cmp	w9, #0x0
  41c08c:	cset	w9, ge  // ge = tcont
  41c090:	tbnz	w9, #0, 41c124 <stdout_stream_save+0x16c>
  41c094:	mov	w8, #0x4                   	// #4
  41c098:	str	w8, [sp, #116]
  41c09c:	bl	405768 <__errno_location@plt>
  41c0a0:	ldr	w8, [x0]
  41c0a4:	str	w8, [sp, #112]
  41c0a8:	str	wzr, [sp, #108]
  41c0ac:	ldr	w0, [sp, #108]
  41c0b0:	bl	405638 <log_get_max_level_realm@plt>
  41c0b4:	ldr	w8, [sp, #116]
  41c0b8:	and	w8, w8, #0x7
  41c0bc:	cmp	w0, w8
  41c0c0:	b.lt	41c0f4 <stdout_stream_save+0x13c>  // b.tstop
  41c0c4:	ldr	w8, [sp, #108]
  41c0c8:	ldr	w9, [sp, #116]
  41c0cc:	orr	w0, w9, w8, lsl #10
  41c0d0:	ldr	w1, [sp, #112]
  41c0d4:	ldr	x2, [sp, #32]
  41c0d8:	mov	w3, #0x9c                  	// #156
  41c0dc:	ldr	x4, [sp, #24]
  41c0e0:	adrp	x5, 42d000 <_fini+0x33a8>
  41c0e4:	add	x5, x5, #0xbda
  41c0e8:	bl	405648 <log_internal_realm@plt>
  41c0ec:	str	w0, [sp, #20]
  41c0f0:	b	41c108 <stdout_stream_save+0x150>
  41c0f4:	ldr	w0, [sp, #112]
  41c0f8:	bl	405658 <abs@plt>
  41c0fc:	mov	w8, wzr
  41c100:	subs	w8, w8, w0, uxtb
  41c104:	str	w8, [sp, #20]
  41c108:	ldr	w8, [sp, #20]
  41c10c:	str	w8, [sp, #104]
  41c110:	ldr	w8, [sp, #104]
  41c114:	stur	w8, [x29, #-4]
  41c118:	mov	w8, #0x1                   	// #1
  41c11c:	stur	w8, [x29, #-40]
  41c120:	b	41c5d0 <stdout_stream_save+0x618>
  41c124:	ldur	x8, [x29, #-16]
  41c128:	add	x0, x8, #0x60
  41c12c:	ldr	x2, [sp, #120]
  41c130:	ldr	x3, [sp, #128]
  41c134:	adrp	x1, 42d000 <_fini+0x33a8>
  41c138:	add	x1, x1, #0xbfe
  41c13c:	bl	405828 <asprintf@plt>
  41c140:	cmp	w0, #0x0
  41c144:	cset	w9, ge  // ge = tcont
  41c148:	tbnz	w9, #0, 41c174 <stdout_stream_save+0x1bc>
  41c14c:	mov	w8, wzr
  41c150:	mov	w0, w8
  41c154:	ldr	x1, [sp, #32]
  41c158:	mov	w2, #0xa0                  	// #160
  41c15c:	ldr	x3, [sp, #24]
  41c160:	bl	405958 <log_oom_internal@plt>
  41c164:	stur	w0, [x29, #-4]
  41c168:	mov	w8, #0x1                   	// #1
  41c16c:	stur	w8, [x29, #-40]
  41c170:	b	41c5d0 <stdout_stream_save+0x618>
  41c174:	adrp	x0, 42d000 <_fini+0x33a8>
  41c178:	add	x0, x0, #0x651
  41c17c:	mov	w1, #0x1ed                 	// #493
  41c180:	bl	405bf8 <mkdir_p@plt>
  41c184:	ldur	x8, [x29, #-16]
  41c188:	ldr	x8, [x8, #96]
  41c18c:	mov	x0, x8
  41c190:	sub	x1, x29, #0x20
  41c194:	sub	x2, x29, #0x18
  41c198:	bl	406298 <fopen_temporary@plt>
  41c19c:	stur	w0, [x29, #-36]
  41c1a0:	ldur	w9, [x29, #-36]
  41c1a4:	cmp	w9, #0x0
  41c1a8:	cset	w9, ge  // ge = tcont
  41c1ac:	tbnz	w9, #0, 41c1b4 <stdout_stream_save+0x1fc>
  41c1b0:	b	41c524 <stdout_stream_save+0x56c>
  41c1b4:	ldur	x0, [x29, #-32]
  41c1b8:	ldur	x8, [x29, #-16]
  41c1bc:	ldr	w2, [x8, #56]
  41c1c0:	ldur	x8, [x29, #-16]
  41c1c4:	ldrb	w9, [x8, #60]
  41c1c8:	mov	w10, #0x1                   	// #1
  41c1cc:	and	w9, w9, #0x1
  41c1d0:	and	w3, w9, #0x1
  41c1d4:	ldur	x8, [x29, #-16]
  41c1d8:	ldrb	w9, [x8, #60]
  41c1dc:	lsr	w9, w9, w10
  41c1e0:	and	w9, w9, w10
  41c1e4:	and	w4, w9, #0x1
  41c1e8:	ldur	x8, [x29, #-16]
  41c1ec:	ldrb	w9, [x8, #60]
  41c1f0:	mov	w11, #0x2                   	// #2
  41c1f4:	lsr	w9, w9, w11
  41c1f8:	and	w9, w9, w10
  41c1fc:	and	w5, w9, #0x1
  41c200:	ldur	x8, [x29, #-16]
  41c204:	ldrb	w9, [x8, #60]
  41c208:	mov	w11, #0x3                   	// #3
  41c20c:	lsr	w9, w9, w11
  41c210:	and	w9, w9, w10
  41c214:	and	w6, w9, #0x1
  41c218:	ldur	x8, [x29, #-16]
  41c21c:	add	x7, x8, #0x9b
  41c220:	adrp	x1, 42d000 <_fini+0x33a8>
  41c224:	add	x1, x1, #0xc23
  41c228:	bl	4062a8 <fprintf@plt>
  41c22c:	ldur	x8, [x29, #-16]
  41c230:	ldr	x8, [x8, #40]
  41c234:	mov	x0, x8
  41c238:	bl	41bf78 <isempty>
  41c23c:	tbnz	w0, #0, 41c2ac <stdout_stream_save+0x2f4>
  41c240:	ldur	x8, [x29, #-16]
  41c244:	ldr	x0, [x8, #40]
  41c248:	bl	4062b8 <cescape@plt>
  41c24c:	str	x0, [sp, #96]
  41c250:	ldr	x8, [sp, #96]
  41c254:	cbnz	x8, 41c26c <stdout_stream_save+0x2b4>
  41c258:	mov	w8, #0xfffffff4            	// #-12
  41c25c:	stur	w8, [x29, #-36]
  41c260:	mov	w8, #0x4                   	// #4
  41c264:	stur	w8, [x29, #-40]
  41c268:	b	41c284 <stdout_stream_save+0x2cc>
  41c26c:	ldur	x0, [x29, #-32]
  41c270:	ldr	x2, [sp, #96]
  41c274:	adrp	x1, 42d000 <_fini+0x33a8>
  41c278:	add	x1, x1, #0xcb0
  41c27c:	bl	4062a8 <fprintf@plt>
  41c280:	stur	wzr, [x29, #-40]
  41c284:	add	x0, sp, #0x60
  41c288:	bl	41ce30 <freep>
  41c28c:	ldur	w8, [x29, #-40]
  41c290:	str	w8, [sp, #16]
  41c294:	cbz	w8, 41c2ac <stdout_stream_save+0x2f4>
  41c298:	b	41c29c <stdout_stream_save+0x2e4>
  41c29c:	ldr	w8, [sp, #16]
  41c2a0:	cmp	w8, #0x4
  41c2a4:	b.eq	41c524 <stdout_stream_save+0x56c>  // b.none
  41c2a8:	b	41c5d0 <stdout_stream_save+0x618>
  41c2ac:	ldur	x8, [x29, #-16]
  41c2b0:	ldr	x0, [x8, #48]
  41c2b4:	bl	41bf78 <isempty>
  41c2b8:	tbnz	w0, #0, 41c328 <stdout_stream_save+0x370>
  41c2bc:	ldur	x8, [x29, #-16]
  41c2c0:	ldr	x0, [x8, #48]
  41c2c4:	bl	4062b8 <cescape@plt>
  41c2c8:	str	x0, [sp, #88]
  41c2cc:	ldr	x8, [sp, #88]
  41c2d0:	cbnz	x8, 41c2e8 <stdout_stream_save+0x330>
  41c2d4:	mov	w8, #0xfffffff4            	// #-12
  41c2d8:	stur	w8, [x29, #-36]
  41c2dc:	mov	w8, #0x4                   	// #4
  41c2e0:	stur	w8, [x29, #-40]
  41c2e4:	b	41c300 <stdout_stream_save+0x348>
  41c2e8:	ldur	x0, [x29, #-32]
  41c2ec:	ldr	x2, [sp, #88]
  41c2f0:	adrp	x1, 42d000 <_fini+0x33a8>
  41c2f4:	add	x1, x1, #0xcbf
  41c2f8:	bl	4062a8 <fprintf@plt>
  41c2fc:	stur	wzr, [x29, #-40]
  41c300:	add	x0, sp, #0x58
  41c304:	bl	41ce30 <freep>
  41c308:	ldur	w8, [x29, #-40]
  41c30c:	str	w8, [sp, #12]
  41c310:	cbz	w8, 41c328 <stdout_stream_save+0x370>
  41c314:	b	41c318 <stdout_stream_save+0x360>
  41c318:	ldr	w8, [sp, #12]
  41c31c:	cmp	w8, #0x4
  41c320:	b.eq	41c524 <stdout_stream_save+0x56c>  // b.none
  41c324:	b	41c5d0 <stdout_stream_save+0x618>
  41c328:	ldur	x0, [x29, #-32]
  41c32c:	bl	4062c8 <fflush_and_check@plt>
  41c330:	stur	w0, [x29, #-36]
  41c334:	ldur	w8, [x29, #-36]
  41c338:	cmp	w8, #0x0
  41c33c:	cset	w8, ge  // ge = tcont
  41c340:	tbnz	w8, #0, 41c348 <stdout_stream_save+0x390>
  41c344:	b	41c524 <stdout_stream_save+0x56c>
  41c348:	ldur	x0, [x29, #-24]
  41c34c:	ldur	x8, [x29, #-16]
  41c350:	ldr	x1, [x8, #96]
  41c354:	bl	4062d8 <rename@plt>
  41c358:	cmp	w0, #0x0
  41c35c:	cset	w9, ge  // ge = tcont
  41c360:	tbnz	w9, #0, 41c37c <stdout_stream_save+0x3c4>
  41c364:	bl	405768 <__errno_location@plt>
  41c368:	ldr	w8, [x0]
  41c36c:	mov	w9, wzr
  41c370:	subs	w8, w9, w8
  41c374:	stur	w8, [x29, #-36]
  41c378:	b	41c524 <stdout_stream_save+0x56c>
  41c37c:	ldur	x8, [x29, #-16]
  41c380:	ldrb	w9, [x8, #60]
  41c384:	mov	w10, #0x4                   	// #4
  41c388:	lsr	w9, w9, w10
  41c38c:	and	w9, w9, #0x1
  41c390:	tbnz	w9, #0, 41c514 <stdout_stream_save+0x55c>
  41c394:	ldur	x8, [x29, #-16]
  41c398:	ldrb	w9, [x8, #60]
  41c39c:	mov	w10, #0x5                   	// #5
  41c3a0:	lsr	w9, w9, w10
  41c3a4:	and	w9, w9, #0x1
  41c3a8:	tbnz	w9, #0, 41c514 <stdout_stream_save+0x55c>
  41c3ac:	ldur	x8, [x29, #-16]
  41c3b0:	ldr	x8, [x8]
  41c3b4:	add	x8, x8, #0x200
  41c3b8:	str	x8, [sp, #80]
  41c3bc:	ldur	x8, [x29, #-16]
  41c3c0:	str	x8, [sp, #72]
  41c3c4:	ldr	x8, [sp, #72]
  41c3c8:	cmp	x8, #0x0
  41c3cc:	cset	w9, ne  // ne = any
  41c3d0:	mov	w10, #0x1                   	// #1
  41c3d4:	eor	w9, w9, #0x1
  41c3d8:	eor	w9, w9, w10
  41c3dc:	eor	w9, w9, w10
  41c3e0:	and	w9, w9, #0x1
  41c3e4:	mov	w0, w9
  41c3e8:	sxtw	x8, w0
  41c3ec:	cbz	x8, 41c414 <stdout_stream_save+0x45c>
  41c3f0:	mov	w8, wzr
  41c3f4:	mov	w0, w8
  41c3f8:	adrp	x1, 42d000 <_fini+0x33a8>
  41c3fc:	add	x1, x1, #0x47f
  41c400:	ldr	x2, [sp, #32]
  41c404:	mov	w3, #0xda                  	// #218
  41c408:	adrp	x4, 42d000 <_fini+0x33a8>
  41c40c:	add	x4, x4, #0xba0
  41c410:	bl	405718 <log_assert_failed_realm@plt>
  41c414:	ldr	x8, [sp, #80]
  41c418:	ldr	x8, [x8]
  41c41c:	ldr	x9, [sp, #72]
  41c420:	str	x8, [x9, #128]
  41c424:	cbz	x8, 41c438 <stdout_stream_save+0x480>
  41c428:	ldr	x8, [sp, #72]
  41c42c:	ldr	x9, [sp, #72]
  41c430:	ldr	x9, [x9, #128]
  41c434:	str	x8, [x9, #136]
  41c438:	ldr	x8, [sp, #72]
  41c43c:	mov	x9, xzr
  41c440:	str	x9, [x8, #136]
  41c444:	ldr	x8, [sp, #72]
  41c448:	ldr	x9, [sp, #80]
  41c44c:	str	x8, [x9]
  41c450:	ldur	x8, [x29, #-16]
  41c454:	ldrb	w9, [x8, #60]
  41c458:	and	w9, w9, #0xffffffdf
  41c45c:	orr	w9, w9, #0x20
  41c460:	strb	w9, [x8, #60]
  41c464:	ldur	x8, [x29, #-16]
  41c468:	ldr	x8, [x8]
  41c46c:	ldr	x8, [x8, #136]
  41c470:	cbz	x8, 41c514 <stdout_stream_save+0x55c>
  41c474:	ldur	x8, [x29, #-16]
  41c478:	ldr	x8, [x8]
  41c47c:	ldr	x0, [x8, #136]
  41c480:	mov	w1, #0x1                   	// #1
  41c484:	bl	405a98 <sd_event_source_set_enabled@plt>
  41c488:	stur	w0, [x29, #-36]
  41c48c:	ldur	w9, [x29, #-36]
  41c490:	cmp	w9, #0x0
  41c494:	cset	w9, ge  // ge = tcont
  41c498:	tbnz	w9, #0, 41c514 <stdout_stream_save+0x55c>
  41c49c:	mov	w8, #0x4                   	// #4
  41c4a0:	str	w8, [sp, #68]
  41c4a4:	ldur	w8, [x29, #-36]
  41c4a8:	str	w8, [sp, #64]
  41c4ac:	str	wzr, [sp, #60]
  41c4b0:	ldr	w0, [sp, #60]
  41c4b4:	bl	405638 <log_get_max_level_realm@plt>
  41c4b8:	ldr	w8, [sp, #68]
  41c4bc:	and	w8, w8, #0x7
  41c4c0:	cmp	w0, w8
  41c4c4:	b.lt	41c4f8 <stdout_stream_save+0x540>  // b.tstop
  41c4c8:	ldr	w8, [sp, #60]
  41c4cc:	ldr	w9, [sp, #68]
  41c4d0:	orr	w0, w9, w8, lsl #10
  41c4d4:	ldr	w1, [sp, #64]
  41c4d8:	ldr	x2, [sp, #32]
  41c4dc:	mov	w3, #0xe0                  	// #224
  41c4e0:	ldr	x4, [sp, #24]
  41c4e4:	adrp	x5, 42d000 <_fini+0x33a8>
  41c4e8:	add	x5, x5, #0xcc8
  41c4ec:	bl	405648 <log_internal_realm@plt>
  41c4f0:	str	w0, [sp, #8]
  41c4f4:	b	41c50c <stdout_stream_save+0x554>
  41c4f8:	ldr	w0, [sp, #64]
  41c4fc:	bl	405658 <abs@plt>
  41c500:	mov	w8, wzr
  41c504:	subs	w8, w8, w0, uxtb
  41c508:	str	w8, [sp, #8]
  41c50c:	ldr	w8, [sp, #8]
  41c510:	str	w8, [sp, #56]
  41c514:	stur	wzr, [x29, #-4]
  41c518:	mov	w8, #0x1                   	// #1
  41c51c:	stur	w8, [x29, #-40]
  41c520:	b	41c5d0 <stdout_stream_save+0x618>
  41c524:	ldur	x8, [x29, #-16]
  41c528:	ldr	x0, [x8, #96]
  41c52c:	bl	4060c8 <unlink@plt>
  41c530:	ldur	x8, [x29, #-24]
  41c534:	cbz	x8, 41c540 <stdout_stream_save+0x588>
  41c538:	ldur	x0, [x29, #-24]
  41c53c:	bl	4060c8 <unlink@plt>
  41c540:	mov	w8, #0x3                   	// #3
  41c544:	str	w8, [sp, #52]
  41c548:	ldur	w8, [x29, #-36]
  41c54c:	str	w8, [sp, #48]
  41c550:	str	wzr, [sp, #44]
  41c554:	ldr	w0, [sp, #44]
  41c558:	bl	405638 <log_get_max_level_realm@plt>
  41c55c:	ldr	w8, [sp, #52]
  41c560:	and	w8, w8, #0x7
  41c564:	cmp	w0, w8
  41c568:	b.lt	41c5a4 <stdout_stream_save+0x5ec>  // b.tstop
  41c56c:	ldr	w8, [sp, #44]
  41c570:	ldr	w9, [sp, #52]
  41c574:	orr	w0, w9, w8, lsl #10
  41c578:	ldr	w1, [sp, #48]
  41c57c:	ldur	x10, [x29, #-16]
  41c580:	ldr	x6, [x10, #96]
  41c584:	ldr	x2, [sp, #32]
  41c588:	mov	w3, #0xec                  	// #236
  41c58c:	ldr	x4, [sp, #24]
  41c590:	adrp	x5, 42d000 <_fini+0x33a8>
  41c594:	add	x5, x5, #0xcf1
  41c598:	bl	405648 <log_internal_realm@plt>
  41c59c:	str	w0, [sp, #4]
  41c5a0:	b	41c5b8 <stdout_stream_save+0x600>
  41c5a4:	ldr	w0, [sp, #48]
  41c5a8:	bl	405658 <abs@plt>
  41c5ac:	mov	w8, wzr
  41c5b0:	subs	w8, w8, w0, uxtb
  41c5b4:	str	w8, [sp, #4]
  41c5b8:	ldr	w8, [sp, #4]
  41c5bc:	str	w8, [sp, #40]
  41c5c0:	ldr	w8, [sp, #40]
  41c5c4:	stur	w8, [x29, #-4]
  41c5c8:	mov	w8, #0x1                   	// #1
  41c5cc:	stur	w8, [x29, #-40]
  41c5d0:	sub	x0, x29, #0x20
  41c5d4:	bl	41ce58 <fclosep>
  41c5d8:	sub	x0, x29, #0x18
  41c5dc:	bl	41ce30 <freep>
  41c5e0:	ldur	w0, [x29, #-4]
  41c5e4:	ldr	x28, [sp, #304]
  41c5e8:	ldp	x29, x30, [sp, #288]
  41c5ec:	add	sp, sp, #0x140
  41c5f0:	ret

000000000041c5f4 <stdout_stream_log>:
  41c5f4:	stp	x29, x30, [sp, #-32]!
  41c5f8:	stp	x28, x19, [sp, #16]
  41c5fc:	mov	x29, sp
  41c600:	sub	sp, sp, #0x1e0
  41c604:	mov	x19, sp
  41c608:	adrp	x8, 430000 <_fini+0x63a8>
  41c60c:	add	x8, x8, #0x760
  41c610:	mov	x9, xzr
  41c614:	adrp	x10, 42d000 <_fini+0x33a8>
  41c618:	add	x10, x10, #0x436
  41c61c:	add	x10, x10, #0x3
  41c620:	adrp	x11, 42d000 <_fini+0x33a8>
  41c624:	add	x11, x11, #0xd13
  41c628:	sub	x12, x29, #0x38
  41c62c:	stur	x0, [x29, #-16]
  41c630:	stur	x1, [x29, #-24]
  41c634:	stur	w2, [x29, #-28]
  41c638:	ldr	x13, [x8]
  41c63c:	stur	x13, [x29, #-56]
  41c640:	ldur	w14, [x8, #7]
  41c644:	stur	w14, [x12, #7]
  41c648:	stur	x9, [x29, #-96]
  41c64c:	stur	x9, [x29, #-104]
  41c650:	stur	xzr, [x29, #-112]
  41c654:	str	x10, [x19, #192]
  41c658:	str	x11, [x19, #184]
  41c65c:	ldur	x8, [x29, #-16]
  41c660:	cmp	x8, #0x0
  41c664:	cset	w9, ne  // ne = any
  41c668:	mov	w10, #0x1                   	// #1
  41c66c:	eor	w9, w9, #0x1
  41c670:	eor	w9, w9, w10
  41c674:	eor	w9, w9, w10
  41c678:	and	w9, w9, #0x1
  41c67c:	mov	w0, w9
  41c680:	sxtw	x8, w0
  41c684:	cbz	x8, 41c6a8 <stdout_stream_log+0xb4>
  41c688:	mov	w8, wzr
  41c68c:	mov	w0, w8
  41c690:	adrp	x1, 429000 <journal_ratelimit_group_free+0x70>
  41c694:	add	x1, x1, #0xdc8
  41c698:	ldr	x2, [x19, #192]
  41c69c:	mov	w3, #0xf8                  	// #248
  41c6a0:	ldr	x4, [x19, #184]
  41c6a4:	bl	405718 <log_assert_failed_realm@plt>
  41c6a8:	ldur	x8, [x29, #-24]
  41c6ac:	cmp	x8, #0x0
  41c6b0:	cset	w9, ne  // ne = any
  41c6b4:	mov	w10, #0x1                   	// #1
  41c6b8:	eor	w9, w9, #0x1
  41c6bc:	eor	w9, w9, w10
  41c6c0:	eor	w9, w9, w10
  41c6c4:	and	w9, w9, #0x1
  41c6c8:	mov	w0, w9
  41c6cc:	sxtw	x8, w0
  41c6d0:	cbz	x8, 41c6f4 <stdout_stream_log+0x100>
  41c6d4:	mov	w8, wzr
  41c6d8:	mov	w0, w8
  41c6dc:	adrp	x1, 429000 <journal_ratelimit_group_free+0x70>
  41c6e0:	add	x1, x1, #0xf43
  41c6e4:	ldr	x2, [x19, #192]
  41c6e8:	mov	w3, #0xf9                  	// #249
  41c6ec:	ldr	x4, [x19, #184]
  41c6f0:	bl	405718 <log_assert_failed_realm@plt>
  41c6f4:	ldur	x8, [x29, #-16]
  41c6f8:	ldr	x8, [x8, #104]
  41c6fc:	cbz	x8, 41c734 <stdout_stream_log+0x140>
  41c700:	ldur	x8, [x29, #-16]
  41c704:	ldr	x0, [x8]
  41c708:	ldur	x8, [x29, #-16]
  41c70c:	ldr	x1, [x8, #104]
  41c710:	mov	x8, xzr
  41c714:	mov	x2, x8
  41c718:	mov	x3, x8
  41c71c:	str	x3, [x19, #176]
  41c720:	mov	x4, x8
  41c724:	ldr	x5, [x19, #176]
  41c728:	mov	x6, #0xffffffffffffffff    	// #-1
  41c72c:	bl	4232f0 <client_context_maybe_refresh>
  41c730:	b	41c848 <stdout_stream_log+0x254>
  41c734:	ldur	x8, [x29, #-16]
  41c738:	ldr	w0, [x8, #16]
  41c73c:	bl	41ce80 <pid_is_valid>
  41c740:	tbnz	w0, #0, 41c748 <stdout_stream_log+0x154>
  41c744:	b	41c848 <stdout_stream_log+0x254>
  41c748:	ldur	x8, [x29, #-16]
  41c74c:	ldr	x0, [x8]
  41c750:	ldur	x8, [x29, #-16]
  41c754:	ldr	w1, [x8, #16]
  41c758:	ldur	x8, [x29, #-16]
  41c75c:	add	x2, x8, #0x10
  41c760:	ldur	x8, [x29, #-16]
  41c764:	ldr	x3, [x8, #32]
  41c768:	ldur	x8, [x29, #-16]
  41c76c:	ldr	x8, [x8, #32]
  41c770:	str	x0, [x19, #168]
  41c774:	mov	x0, x8
  41c778:	str	w1, [x19, #164]
  41c77c:	str	x2, [x19, #152]
  41c780:	str	x3, [x19, #144]
  41c784:	bl	41cea0 <strlen_ptr>
  41c788:	ldur	x8, [x29, #-16]
  41c78c:	ldr	x5, [x8, #48]
  41c790:	ldur	x8, [x29, #-16]
  41c794:	add	x6, x8, #0x68
  41c798:	ldr	x8, [x19, #168]
  41c79c:	str	x0, [x19, #136]
  41c7a0:	mov	x0, x8
  41c7a4:	ldr	w1, [x19, #164]
  41c7a8:	ldr	x2, [x19, #152]
  41c7ac:	ldr	x3, [x19, #144]
  41c7b0:	ldr	x4, [x19, #136]
  41c7b4:	bl	424464 <client_context_acquire>
  41c7b8:	stur	w0, [x29, #-124]
  41c7bc:	ldur	w9, [x29, #-124]
  41c7c0:	cmp	w9, #0x0
  41c7c4:	cset	w9, ge  // ge = tcont
  41c7c8:	tbnz	w9, #0, 41c848 <stdout_stream_log+0x254>
  41c7cc:	mov	w8, #0x4                   	// #4
  41c7d0:	stur	w8, [x29, #-128]
  41c7d4:	ldur	w8, [x29, #-124]
  41c7d8:	stur	w8, [x29, #-132]
  41c7dc:	stur	wzr, [x29, #-136]
  41c7e0:	ldur	w0, [x29, #-136]
  41c7e4:	bl	405638 <log_get_max_level_realm@plt>
  41c7e8:	ldur	w8, [x29, #-128]
  41c7ec:	and	w8, w8, #0x7
  41c7f0:	cmp	w0, w8
  41c7f4:	b.lt	41c82c <stdout_stream_log+0x238>  // b.tstop
  41c7f8:	ldur	w8, [x29, #-136]
  41c7fc:	ldur	w9, [x29, #-128]
  41c800:	orr	w0, w9, w8, lsl #10
  41c804:	ldur	w1, [x29, #-132]
  41c808:	ldr	x2, [x19, #192]
  41c80c:	mov	w3, #0x100                 	// #256
  41c810:	adrp	x4, 42d000 <_fini+0x33a8>
  41c814:	add	x4, x4, #0xd52
  41c818:	adrp	x5, 42d000 <_fini+0x33a8>
  41c81c:	add	x5, x5, #0xd64
  41c820:	bl	405648 <log_internal_realm@plt>
  41c824:	str	w0, [x19, #132]
  41c828:	b	41c840 <stdout_stream_log+0x24c>
  41c82c:	ldur	w0, [x29, #-132]
  41c830:	bl	405658 <abs@plt>
  41c834:	mov	w8, wzr
  41c838:	subs	w8, w8, w0, uxtb
  41c83c:	str	w8, [x19, #132]
  41c840:	ldr	w8, [x19, #132]
  41c844:	stur	w8, [x29, #-140]
  41c848:	ldur	x8, [x29, #-16]
  41c84c:	ldr	w9, [x8, #56]
  41c850:	stur	w9, [x29, #-44]
  41c854:	ldur	x8, [x29, #-16]
  41c858:	ldrb	w9, [x8, #60]
  41c85c:	and	w9, w9, #0x1
  41c860:	tbnz	w9, #0, 41c868 <stdout_stream_log+0x274>
  41c864:	b	41c87c <stdout_stream_log+0x288>
  41c868:	sub	x0, x29, #0x18
  41c86c:	sub	x1, x29, #0x2c
  41c870:	mov	w8, wzr
  41c874:	and	w2, w8, #0x1
  41c878:	bl	4062e8 <syslog_parse_priority@plt>
  41c87c:	ldur	x8, [x29, #-16]
  41c880:	ldr	x0, [x8, #104]
  41c884:	ldur	w1, [x29, #-44]
  41c888:	bl	41cedc <client_context_test_priority>
  41c88c:	tbnz	w0, #0, 41c8a0 <stdout_stream_log+0x2ac>
  41c890:	stur	wzr, [x29, #-4]
  41c894:	mov	w8, #0x1                   	// #1
  41c898:	stur	w8, [x29, #-144]
  41c89c:	b	41ce0c <stdout_stream_log+0x818>
  41c8a0:	ldur	x0, [x29, #-24]
  41c8a4:	bl	41bf78 <isempty>
  41c8a8:	tbnz	w0, #0, 41c8b0 <stdout_stream_log+0x2bc>
  41c8ac:	b	41c8c0 <stdout_stream_log+0x2cc>
  41c8b0:	stur	wzr, [x29, #-4]
  41c8b4:	mov	w8, #0x1                   	// #1
  41c8b8:	stur	w8, [x29, #-144]
  41c8bc:	b	41ce0c <stdout_stream_log+0x818>
  41c8c0:	ldur	x8, [x29, #-16]
  41c8c4:	ldrb	w9, [x8, #60]
  41c8c8:	mov	w10, #0x1                   	// #1
  41c8cc:	lsr	w9, w9, w10
  41c8d0:	and	w9, w9, w10
  41c8d4:	tbnz	w9, #0, 41c8ec <stdout_stream_log+0x2f8>
  41c8d8:	ldur	x8, [x29, #-16]
  41c8dc:	ldr	x8, [x8]
  41c8e0:	ldrb	w9, [x8, #459]
  41c8e4:	tbnz	w9, #0, 41c8ec <stdout_stream_log+0x2f8>
  41c8e8:	b	41c934 <stdout_stream_log+0x340>
  41c8ec:	ldur	x8, [x29, #-16]
  41c8f0:	ldr	x0, [x8]
  41c8f4:	ldur	w9, [x29, #-44]
  41c8f8:	str	x0, [x19, #120]
  41c8fc:	mov	w0, w9
  41c900:	bl	41e0a0 <syslog_fixup_facility>
  41c904:	ldur	x8, [x29, #-16]
  41c908:	ldr	x2, [x8, #40]
  41c90c:	ldur	x3, [x29, #-24]
  41c910:	ldur	x8, [x29, #-16]
  41c914:	add	x4, x8, #0x10
  41c918:	ldr	x8, [x19, #120]
  41c91c:	str	w0, [x19, #116]
  41c920:	mov	x0, x8
  41c924:	ldr	w1, [x19, #116]
  41c928:	mov	x10, xzr
  41c92c:	mov	x5, x10
  41c930:	bl	41d6e4 <server_forward_syslog>
  41c934:	ldur	x8, [x29, #-16]
  41c938:	ldrb	w9, [x8, #60]
  41c93c:	mov	w10, #0x2                   	// #2
  41c940:	lsr	w9, w9, w10
  41c944:	and	w9, w9, #0x1
  41c948:	tbnz	w9, #0, 41c960 <stdout_stream_log+0x36c>
  41c94c:	ldur	x8, [x29, #-16]
  41c950:	ldr	x8, [x8]
  41c954:	ldrb	w9, [x8, #458]
  41c958:	tbnz	w9, #0, 41c960 <stdout_stream_log+0x36c>
  41c95c:	b	41c984 <stdout_stream_log+0x390>
  41c960:	ldur	x8, [x29, #-16]
  41c964:	ldr	x0, [x8]
  41c968:	ldur	w1, [x29, #-44]
  41c96c:	ldur	x8, [x29, #-16]
  41c970:	ldr	x2, [x8, #40]
  41c974:	ldur	x3, [x29, #-24]
  41c978:	ldur	x8, [x29, #-16]
  41c97c:	add	x4, x8, #0x10
  41c980:	bl	406e60 <server_forward_kmsg>
  41c984:	ldur	x8, [x29, #-16]
  41c988:	ldrb	w9, [x8, #60]
  41c98c:	mov	w10, #0x3                   	// #3
  41c990:	lsr	w9, w9, w10
  41c994:	and	w9, w9, #0x1
  41c998:	tbnz	w9, #0, 41c9b0 <stdout_stream_log+0x3bc>
  41c99c:	ldur	x8, [x29, #-16]
  41c9a0:	ldr	x8, [x8]
  41c9a4:	ldrb	w9, [x8, #460]
  41c9a8:	tbnz	w9, #0, 41c9b0 <stdout_stream_log+0x3bc>
  41c9ac:	b	41c9d4 <stdout_stream_log+0x3e0>
  41c9b0:	ldur	x8, [x29, #-16]
  41c9b4:	ldr	x0, [x8]
  41c9b8:	ldur	w1, [x29, #-44]
  41c9bc:	ldur	x8, [x29, #-16]
  41c9c0:	ldr	x2, [x8, #40]
  41c9c4:	ldur	x3, [x29, #-24]
  41c9c8:	ldur	x8, [x29, #-16]
  41c9cc:	add	x4, x8, #0x10
  41c9d0:	bl	422c20 <server_forward_console>
  41c9d4:	ldur	x8, [x29, #-16]
  41c9d8:	ldr	x8, [x8]
  41c9dc:	ldrb	w9, [x8, #461]
  41c9e0:	tbnz	w9, #0, 41c9e8 <stdout_stream_log+0x3f4>
  41c9e4:	b	41ca0c <stdout_stream_log+0x418>
  41c9e8:	ldur	x8, [x29, #-16]
  41c9ec:	ldr	x0, [x8]
  41c9f0:	ldur	w1, [x29, #-44]
  41c9f4:	ldur	x8, [x29, #-16]
  41c9f8:	ldr	x2, [x8, #40]
  41c9fc:	ldur	x3, [x29, #-24]
  41ca00:	ldur	x8, [x29, #-16]
  41ca04:	add	x4, x8, #0x10
  41ca08:	bl	41ff8c <server_forward_wall>
  41ca0c:	ldur	x8, [x29, #-16]
  41ca10:	ldr	x0, [x8, #104]
  41ca14:	bl	41cf54 <client_context_extra_fields_n_iovec>
  41ca18:	add	x8, x0, #0x1d
  41ca1c:	stur	x8, [x29, #-120]
  41ca20:	ldur	x8, [x29, #-120]
  41ca24:	stur	x8, [x29, #-152]
  41ca28:	ldur	x1, [x29, #-152]
  41ca2c:	mov	x0, #0x10                  	// #16
  41ca30:	bl	41cf8c <size_multiply_overflow>
  41ca34:	mov	w8, #0x1                   	// #1
  41ca38:	eor	w9, w0, #0x1
  41ca3c:	eor	w9, w9, w8
  41ca40:	eor	w9, w9, w8
  41ca44:	eor	w8, w9, w8
  41ca48:	and	w8, w8, #0x1
  41ca4c:	mov	w1, w8
  41ca50:	sxtw	x10, w1
  41ca54:	cbz	x10, 41ca78 <stdout_stream_log+0x484>
  41ca58:	mov	w8, wzr
  41ca5c:	mov	w0, w8
  41ca60:	adrp	x1, 42a000 <_fini+0x3a8>
  41ca64:	add	x1, x1, #0x830
  41ca68:	ldr	x2, [x19, #192]
  41ca6c:	mov	w3, #0x11b                 	// #283
  41ca70:	ldr	x4, [x19, #184]
  41ca74:	bl	405718 <log_assert_failed_realm@plt>
  41ca78:	ldur	x8, [x29, #-152]
  41ca7c:	mov	x9, #0x10                  	// #16
  41ca80:	mul	x8, x9, x8
  41ca84:	cmp	x8, #0x400, lsl #12
  41ca88:	cset	w10, ls  // ls = plast
  41ca8c:	mov	w11, #0x1                   	// #1
  41ca90:	eor	w10, w10, #0x1
  41ca94:	eor	w10, w10, w11
  41ca98:	eor	w10, w10, w11
  41ca9c:	and	w10, w10, #0x1
  41caa0:	mov	w0, w10
  41caa4:	sxtw	x8, w0
  41caa8:	cbz	x8, 41cacc <stdout_stream_log+0x4d8>
  41caac:	mov	w8, wzr
  41cab0:	mov	w0, w8
  41cab4:	adrp	x1, 42a000 <_fini+0x3a8>
  41cab8:	add	x1, x1, #0x863
  41cabc:	ldr	x2, [x19, #192]
  41cac0:	mov	w3, #0x11b                 	// #283
  41cac4:	ldr	x4, [x19, #184]
  41cac8:	bl	405718 <log_assert_failed_realm@plt>
  41cacc:	ldur	x8, [x29, #-152]
  41cad0:	mov	x9, #0x10                  	// #16
  41cad4:	mul	x8, x9, x8
  41cad8:	mov	x9, #0x1                   	// #1
  41cadc:	mul	x8, x8, x9
  41cae0:	add	x8, x8, #0xf
  41cae4:	and	x8, x8, #0xfffffffffffffff0
  41cae8:	mov	x9, sp
  41caec:	subs	x8, x9, x8
  41caf0:	mov	sp, x8
  41caf4:	stur	x8, [x29, #-160]
  41caf8:	ldur	x8, [x29, #-160]
  41cafc:	stur	x8, [x29, #-40]
  41cb00:	ldur	x8, [x29, #-40]
  41cb04:	ldur	x9, [x29, #-112]
  41cb08:	add	x10, x9, #0x1
  41cb0c:	stur	x10, [x29, #-112]
  41cb10:	adrp	x10, 42d000 <_fini+0x33a8>
  41cb14:	add	x10, x10, #0xd93
  41cb18:	stur	x10, [x29, #-176]
  41cb1c:	mov	x10, #0x11                  	// #17
  41cb20:	stur	x10, [x29, #-168]
  41cb24:	ldur	q0, [x29, #-176]
  41cb28:	str	q0, [x8, x9, lsl #4]
  41cb2c:	ldur	x8, [x29, #-40]
  41cb30:	ldur	x9, [x29, #-112]
  41cb34:	add	x10, x9, #0x1
  41cb38:	stur	x10, [x29, #-112]
  41cb3c:	ldur	x10, [x29, #-16]
  41cb40:	add	x10, x10, #0x90
  41cb44:	stur	x10, [x29, #-192]
  41cb48:	ldur	x10, [x29, #-16]
  41cb4c:	add	x0, x10, #0x90
  41cb50:	str	x8, [x19, #104]
  41cb54:	str	x9, [x19, #96]
  41cb58:	bl	405738 <strlen@plt>
  41cb5c:	stur	x0, [x29, #-184]
  41cb60:	ldur	q0, [x29, #-192]
  41cb64:	ldr	x8, [x19, #104]
  41cb68:	ldr	x9, [x19, #96]
  41cb6c:	str	q0, [x8, x9, lsl #4]
  41cb70:	ldur	w11, [x29, #-44]
  41cb74:	and	w11, w11, #0x7
  41cb78:	add	w11, w11, #0x30
  41cb7c:	sub	x10, x29, #0x38
  41cb80:	strb	w11, [x10, #9]
  41cb84:	ldur	x12, [x29, #-40]
  41cb88:	ldur	x13, [x29, #-112]
  41cb8c:	add	x14, x13, #0x1
  41cb90:	stur	x14, [x29, #-112]
  41cb94:	stur	x10, [x29, #-208]
  41cb98:	mov	x0, x10
  41cb9c:	str	x12, [x19, #88]
  41cba0:	str	x13, [x19, #80]
  41cba4:	bl	405738 <strlen@plt>
  41cba8:	stur	x0, [x29, #-200]
  41cbac:	ldur	q0, [x29, #-208]
  41cbb0:	ldr	x8, [x19, #88]
  41cbb4:	ldr	x9, [x19, #80]
  41cbb8:	str	q0, [x8, x9, lsl #4]
  41cbbc:	ldur	w11, [x29, #-44]
  41cbc0:	and	w11, w11, #0x3f8
  41cbc4:	cbz	w11, 41cc74 <stdout_stream_log+0x680>
  41cbc8:	ldur	w8, [x29, #-44]
  41cbcc:	and	w8, w8, #0x3f8
  41cbd0:	asr	w3, w8, #3
  41cbd4:	sub	x0, x29, #0x55
  41cbd8:	mov	x1, #0x1d                  	// #29
  41cbdc:	adrp	x2, 42a000 <_fini+0x3a8>
  41cbe0:	add	x2, x2, #0x19
  41cbe4:	bl	405728 <snprintf@plt>
  41cbe8:	mov	w1, w0
  41cbec:	sxtw	x9, w1
  41cbf0:	cmp	x9, #0x1d
  41cbf4:	cset	w8, cc  // cc = lo, ul, last
  41cbf8:	mov	w10, #0x1                   	// #1
  41cbfc:	eor	w8, w8, #0x1
  41cc00:	eor	w8, w8, w10
  41cc04:	eor	w8, w8, w10
  41cc08:	and	w8, w8, #0x1
  41cc0c:	mov	w1, w8
  41cc10:	sxtw	x9, w1
  41cc14:	cbz	x9, 41cc38 <stdout_stream_log+0x644>
  41cc18:	mov	w8, wzr
  41cc1c:	mov	w0, w8
  41cc20:	adrp	x1, 42d000 <_fini+0x33a8>
  41cc24:	add	x1, x1, #0xda5
  41cc28:	ldr	x2, [x19, #192]
  41cc2c:	mov	w3, #0x124                 	// #292
  41cc30:	ldr	x4, [x19, #184]
  41cc34:	bl	405718 <log_assert_failed_realm@plt>
  41cc38:	ldur	x8, [x29, #-40]
  41cc3c:	ldur	x9, [x29, #-112]
  41cc40:	add	x10, x9, #0x1
  41cc44:	stur	x10, [x29, #-112]
  41cc48:	sub	x10, x29, #0x55
  41cc4c:	stur	x10, [x29, #-224]
  41cc50:	mov	x0, x10
  41cc54:	str	x8, [x19, #72]
  41cc58:	str	x9, [x19, #64]
  41cc5c:	bl	405738 <strlen@plt>
  41cc60:	stur	x0, [x29, #-216]
  41cc64:	ldur	q0, [x29, #-224]
  41cc68:	ldr	x8, [x19, #72]
  41cc6c:	ldr	x9, [x19, #64]
  41cc70:	str	q0, [x8, x9, lsl #4]
  41cc74:	ldur	x8, [x29, #-16]
  41cc78:	ldr	x8, [x8, #40]
  41cc7c:	cbz	x8, 41cce4 <stdout_stream_log+0x6f0>
  41cc80:	ldur	x8, [x29, #-16]
  41cc84:	ldr	x1, [x8, #40]
  41cc88:	adrp	x0, 42a000 <_fini+0x3a8>
  41cc8c:	add	x0, x0, #0x45
  41cc90:	mov	x8, xzr
  41cc94:	mov	x2, x8
  41cc98:	bl	4057e8 <strjoin_real@plt>
  41cc9c:	stur	x0, [x29, #-104]
  41cca0:	ldur	x8, [x29, #-104]
  41cca4:	cbz	x8, 41cce4 <stdout_stream_log+0x6f0>
  41cca8:	ldur	x8, [x29, #-40]
  41ccac:	ldur	x9, [x29, #-112]
  41ccb0:	add	x10, x9, #0x1
  41ccb4:	stur	x10, [x29, #-112]
  41ccb8:	ldur	x10, [x29, #-104]
  41ccbc:	str	x10, [x19, #240]
  41ccc0:	ldur	x0, [x29, #-104]
  41ccc4:	str	x8, [x19, #56]
  41ccc8:	str	x9, [x19, #48]
  41cccc:	bl	405738 <strlen@plt>
  41ccd0:	str	x0, [x19, #248]
  41ccd4:	ldr	q0, [x19, #240]
  41ccd8:	ldr	x8, [x19, #56]
  41ccdc:	ldr	x9, [x19, #48]
  41cce0:	str	q0, [x8, x9, lsl #4]
  41cce4:	ldur	w8, [x29, #-28]
  41cce8:	cbz	w8, 41cd6c <stdout_stream_log+0x778>
  41ccec:	ldur	w8, [x29, #-28]
  41ccf0:	cmp	w8, #0x1
  41ccf4:	b.ne	41cd08 <stdout_stream_log+0x714>  // b.any
  41ccf8:	adrp	x8, 42d000 <_fini+0x33a8>
  41ccfc:	add	x8, x8, #0xdd4
  41cd00:	str	x8, [x19, #40]
  41cd04:	b	41cd28 <stdout_stream_log+0x734>
  41cd08:	ldur	w8, [x29, #-28]
  41cd0c:	adrp	x9, 42d000 <_fini+0x33a8>
  41cd10:	add	x9, x9, #0xdf9
  41cd14:	adrp	x10, 42d000 <_fini+0x33a8>
  41cd18:	add	x10, x10, #0xde4
  41cd1c:	cmp	w8, #0x2
  41cd20:	csel	x9, x10, x9, eq  // eq = none
  41cd24:	str	x9, [x19, #40]
  41cd28:	ldr	x8, [x19, #40]
  41cd2c:	str	x8, [x19, #232]
  41cd30:	ldur	x8, [x29, #-40]
  41cd34:	ldur	x9, [x29, #-112]
  41cd38:	add	x10, x9, #0x1
  41cd3c:	stur	x10, [x29, #-112]
  41cd40:	ldr	x10, [x19, #232]
  41cd44:	str	x10, [x19, #216]
  41cd48:	ldr	x0, [x19, #232]
  41cd4c:	str	x8, [x19, #32]
  41cd50:	str	x9, [x19, #24]
  41cd54:	bl	405738 <strlen@plt>
  41cd58:	str	x0, [x19, #224]
  41cd5c:	ldur	q0, [x19, #216]
  41cd60:	ldr	x8, [x19, #32]
  41cd64:	ldr	x9, [x19, #24]
  41cd68:	str	q0, [x8, x9, lsl #4]
  41cd6c:	ldur	x1, [x29, #-24]
  41cd70:	adrp	x0, 42a000 <_fini+0x3a8>
  41cd74:	add	x0, x0, #0x64
  41cd78:	mov	x8, xzr
  41cd7c:	mov	x2, x8
  41cd80:	bl	4057e8 <strjoin_real@plt>
  41cd84:	stur	x0, [x29, #-96]
  41cd88:	ldur	x8, [x29, #-96]
  41cd8c:	cbz	x8, 41cdcc <stdout_stream_log+0x7d8>
  41cd90:	ldur	x8, [x29, #-40]
  41cd94:	ldur	x9, [x29, #-112]
  41cd98:	add	x10, x9, #0x1
  41cd9c:	stur	x10, [x29, #-112]
  41cda0:	ldur	x10, [x29, #-96]
  41cda4:	str	x10, [x19, #200]
  41cda8:	ldur	x0, [x29, #-96]
  41cdac:	str	x8, [x19, #16]
  41cdb0:	str	x9, [x19, #8]
  41cdb4:	bl	405738 <strlen@plt>
  41cdb8:	str	x0, [x19, #208]
  41cdbc:	ldur	q0, [x19, #200]
  41cdc0:	ldr	x8, [x19, #16]
  41cdc4:	ldr	x9, [x19, #8]
  41cdc8:	str	q0, [x8, x9, lsl #4]
  41cdcc:	ldur	x8, [x29, #-16]
  41cdd0:	ldr	x0, [x8]
  41cdd4:	ldur	x1, [x29, #-40]
  41cdd8:	ldur	x2, [x29, #-112]
  41cddc:	ldur	x3, [x29, #-120]
  41cde0:	ldur	x8, [x29, #-16]
  41cde4:	ldr	x4, [x8, #104]
  41cde8:	ldur	w6, [x29, #-44]
  41cdec:	mov	x8, xzr
  41cdf0:	mov	x5, x8
  41cdf4:	mov	w9, wzr
  41cdf8:	mov	w7, w9
  41cdfc:	bl	40f6d0 <server_dispatch_message>
  41ce00:	stur	wzr, [x29, #-4]
  41ce04:	mov	w9, #0x1                   	// #1
  41ce08:	stur	w9, [x29, #-144]
  41ce0c:	sub	x0, x29, #0x68
  41ce10:	bl	41ce30 <freep>
  41ce14:	sub	x0, x29, #0x60
  41ce18:	bl	41ce30 <freep>
  41ce1c:	ldur	w0, [x29, #-4]
  41ce20:	mov	sp, x29
  41ce24:	ldp	x28, x19, [sp, #16]
  41ce28:	ldp	x29, x30, [sp], #32
  41ce2c:	ret

000000000041ce30 <freep>:
  41ce30:	sub	sp, sp, #0x20
  41ce34:	stp	x29, x30, [sp, #16]
  41ce38:	add	x29, sp, #0x10
  41ce3c:	str	x0, [sp, #8]
  41ce40:	ldr	x8, [sp, #8]
  41ce44:	ldr	x0, [x8]
  41ce48:	bl	405778 <free@plt>
  41ce4c:	ldp	x29, x30, [sp, #16]
  41ce50:	add	sp, sp, #0x20
  41ce54:	ret

000000000041ce58 <fclosep>:
  41ce58:	sub	sp, sp, #0x20
  41ce5c:	stp	x29, x30, [sp, #16]
  41ce60:	add	x29, sp, #0x10
  41ce64:	str	x0, [sp, #8]
  41ce68:	ldr	x8, [sp, #8]
  41ce6c:	ldr	x0, [x8]
  41ce70:	bl	4062f8 <safe_fclose@plt>
  41ce74:	ldp	x29, x30, [sp, #16]
  41ce78:	add	sp, sp, #0x20
  41ce7c:	ret

000000000041ce80 <pid_is_valid>:
  41ce80:	sub	sp, sp, #0x10
  41ce84:	str	w0, [sp, #12]
  41ce88:	ldr	w8, [sp, #12]
  41ce8c:	cmp	w8, #0x0
  41ce90:	cset	w8, gt
  41ce94:	and	w0, w8, #0x1
  41ce98:	add	sp, sp, #0x10
  41ce9c:	ret

000000000041cea0 <strlen_ptr>:
  41cea0:	sub	sp, sp, #0x20
  41cea4:	stp	x29, x30, [sp, #16]
  41cea8:	add	x29, sp, #0x10
  41ceac:	str	x0, [sp]
  41ceb0:	ldr	x8, [sp]
  41ceb4:	cbnz	x8, 41cec0 <strlen_ptr+0x20>
  41ceb8:	str	xzr, [sp, #8]
  41cebc:	b	41cecc <strlen_ptr+0x2c>
  41cec0:	ldr	x0, [sp]
  41cec4:	bl	405738 <strlen@plt>
  41cec8:	str	x0, [sp, #8]
  41cecc:	ldr	x0, [sp, #8]
  41ced0:	ldp	x29, x30, [sp, #16]
  41ced4:	add	sp, sp, #0x20
  41ced8:	ret

000000000041cedc <client_context_test_priority>:
  41cedc:	sub	sp, sp, #0x20
  41cee0:	str	x0, [sp, #16]
  41cee4:	str	w1, [sp, #12]
  41cee8:	ldr	x8, [sp, #16]
  41ceec:	cbnz	x8, 41cf00 <client_context_test_priority+0x24>
  41cef0:	mov	w8, #0x1                   	// #1
  41cef4:	and	w8, w8, #0x1
  41cef8:	strb	w8, [sp, #31]
  41cefc:	b	41cf44 <client_context_test_priority+0x68>
  41cf00:	ldr	x8, [sp, #16]
  41cf04:	ldr	w9, [x8, #160]
  41cf08:	cmp	w9, #0x0
  41cf0c:	cset	w9, ge  // ge = tcont
  41cf10:	tbnz	w9, #0, 41cf24 <client_context_test_priority+0x48>
  41cf14:	mov	w8, #0x1                   	// #1
  41cf18:	and	w8, w8, #0x1
  41cf1c:	strb	w8, [sp, #31]
  41cf20:	b	41cf44 <client_context_test_priority+0x68>
  41cf24:	ldr	w8, [sp, #12]
  41cf28:	and	w8, w8, #0x7
  41cf2c:	ldr	x9, [sp, #16]
  41cf30:	ldr	w10, [x9, #160]
  41cf34:	cmp	w8, w10
  41cf38:	cset	w8, le
  41cf3c:	and	w8, w8, #0x1
  41cf40:	strb	w8, [sp, #31]
  41cf44:	ldrb	w8, [sp, #31]
  41cf48:	and	w0, w8, #0x1
  41cf4c:	add	sp, sp, #0x20
  41cf50:	ret

000000000041cf54 <client_context_extra_fields_n_iovec>:
  41cf54:	sub	sp, sp, #0x10
  41cf58:	str	x0, [sp, #8]
  41cf5c:	ldr	x8, [sp, #8]
  41cf60:	cbz	x8, 41cf74 <client_context_extra_fields_n_iovec+0x20>
  41cf64:	ldr	x8, [sp, #8]
  41cf68:	ldr	x8, [x8, #176]
  41cf6c:	str	x8, [sp]
  41cf70:	b	41cf7c <client_context_extra_fields_n_iovec+0x28>
  41cf74:	mov	x8, xzr
  41cf78:	str	x8, [sp]
  41cf7c:	ldr	x8, [sp]
  41cf80:	mov	x0, x8
  41cf84:	add	sp, sp, #0x10
  41cf88:	ret

000000000041cf8c <size_multiply_overflow>:
  41cf8c:	sub	sp, sp, #0x20
  41cf90:	str	x0, [sp, #24]
  41cf94:	str	x1, [sp, #16]
  41cf98:	ldr	x8, [sp, #16]
  41cf9c:	mov	w9, #0x0                   	// #0
  41cfa0:	str	w9, [sp, #12]
  41cfa4:	cbz	x8, 41cfc4 <size_multiply_overflow+0x38>
  41cfa8:	ldr	x8, [sp, #24]
  41cfac:	ldr	x9, [sp, #16]
  41cfb0:	mov	x10, #0xffffffffffffffff    	// #-1
  41cfb4:	udiv	x9, x10, x9
  41cfb8:	cmp	x8, x9
  41cfbc:	cset	w11, hi  // hi = pmore
  41cfc0:	str	w11, [sp, #12]
  41cfc4:	ldr	w8, [sp, #12]
  41cfc8:	mov	w9, #0x1                   	// #1
  41cfcc:	eor	w8, w8, #0x1
  41cfd0:	eor	w8, w8, w9
  41cfd4:	and	w8, w8, #0x1
  41cfd8:	mov	w0, w8
  41cfdc:	sxtw	x10, w0
  41cfe0:	cmp	x10, #0x0
  41cfe4:	cset	w8, ne  // ne = any
  41cfe8:	and	w0, w8, #0x1
  41cfec:	add	sp, sp, #0x20
  41cff0:	ret

000000000041cff4 <stdout_stream_load>:
  41cff4:	sub	sp, sp, #0x100
  41cff8:	stp	x29, x30, [sp, #240]
  41cffc:	add	x29, sp, #0xf0
  41d000:	mov	x8, xzr
  41d004:	adrp	x9, 42d000 <_fini+0x33a8>
  41d008:	add	x9, x9, #0x436
  41d00c:	add	x9, x9, #0x3
  41d010:	adrp	x10, 42d000 <_fini+0x33a8>
  41d014:	add	x10, x10, #0xe94
  41d018:	stur	x0, [x29, #-16]
  41d01c:	stur	x1, [x29, #-24]
  41d020:	stur	x8, [x29, #-32]
  41d024:	stur	x8, [x29, #-40]
  41d028:	stur	x8, [x29, #-48]
  41d02c:	stur	x8, [x29, #-56]
  41d030:	stur	x8, [x29, #-64]
  41d034:	stur	x8, [x29, #-72]
  41d038:	str	x9, [sp, #112]
  41d03c:	str	x10, [sp, #104]
  41d040:	ldur	x8, [x29, #-16]
  41d044:	cmp	x8, #0x0
  41d048:	cset	w9, ne  // ne = any
  41d04c:	mov	w10, #0x1                   	// #1
  41d050:	eor	w9, w9, #0x1
  41d054:	eor	w9, w9, w10
  41d058:	eor	w9, w9, w10
  41d05c:	and	w9, w9, #0x1
  41d060:	mov	w0, w9
  41d064:	sxtw	x8, w0
  41d068:	cbz	x8, 41d08c <stdout_stream_load+0x98>
  41d06c:	mov	w8, wzr
  41d070:	mov	w0, w8
  41d074:	adrp	x1, 42d000 <_fini+0x33a8>
  41d078:	add	x1, x1, #0xe8d
  41d07c:	ldr	x2, [sp, #112]
  41d080:	mov	w3, #0x2b5                 	// #693
  41d084:	ldr	x4, [sp, #104]
  41d088:	bl	405718 <log_assert_failed_realm@plt>
  41d08c:	ldur	x8, [x29, #-24]
  41d090:	cmp	x8, #0x0
  41d094:	cset	w9, ne  // ne = any
  41d098:	mov	w10, #0x1                   	// #1
  41d09c:	eor	w9, w9, #0x1
  41d0a0:	eor	w9, w9, w10
  41d0a4:	eor	w9, w9, w10
  41d0a8:	and	w9, w9, #0x1
  41d0ac:	mov	w0, w9
  41d0b0:	sxtw	x8, w0
  41d0b4:	cbz	x8, 41d0d8 <stdout_stream_load+0xe4>
  41d0b8:	mov	w8, wzr
  41d0bc:	mov	w0, w8
  41d0c0:	adrp	x1, 42b000 <_fini+0x13a8>
  41d0c4:	add	x1, x1, #0xe55
  41d0c8:	ldr	x2, [sp, #112]
  41d0cc:	mov	w3, #0x2b6                 	// #694
  41d0d0:	ldr	x4, [sp, #104]
  41d0d4:	bl	405718 <log_assert_failed_realm@plt>
  41d0d8:	ldur	x8, [x29, #-16]
  41d0dc:	ldr	x8, [x8, #96]
  41d0e0:	cbnz	x8, 41d13c <stdout_stream_load+0x148>
  41d0e4:	ldur	x1, [x29, #-24]
  41d0e8:	adrp	x0, 42d000 <_fini+0x33a8>
  41d0ec:	add	x0, x0, #0x651
  41d0f0:	mov	x8, #0xffffffffffffffff    	// #-1
  41d0f4:	mov	x2, x8
  41d0f8:	bl	405da8 <path_join_internal@plt>
  41d0fc:	ldur	x8, [x29, #-16]
  41d100:	str	x0, [x8, #96]
  41d104:	ldur	x8, [x29, #-16]
  41d108:	ldr	x8, [x8, #96]
  41d10c:	cbnz	x8, 41d13c <stdout_stream_load+0x148>
  41d110:	mov	w8, wzr
  41d114:	mov	w0, w8
  41d118:	ldr	x1, [sp, #112]
  41d11c:	mov	w2, #0x2bb                 	// #699
  41d120:	adrp	x3, 42d000 <_fini+0x33a8>
  41d124:	add	x3, x3, #0xec9
  41d128:	bl	405958 <log_oom_internal@plt>
  41d12c:	stur	w0, [x29, #-4]
  41d130:	mov	w8, #0x1                   	// #1
  41d134:	stur	w8, [x29, #-80]
  41d138:	b	41d55c <stdout_stream_load+0x568>
  41d13c:	ldur	x8, [x29, #-16]
  41d140:	ldr	x1, [x8, #96]
  41d144:	ldur	x8, [x29, #-16]
  41d148:	add	x8, x8, #0x28
  41d14c:	ldur	x9, [x29, #-16]
  41d150:	add	x9, x9, #0x30
  41d154:	mov	x10, xzr
  41d158:	mov	x0, x10
  41d15c:	adrp	x2, 42d000 <_fini+0x33a8>
  41d160:	add	x2, x2, #0xedc
  41d164:	sub	x3, x29, #0x20
  41d168:	adrp	x4, 42d000 <_fini+0x33a8>
  41d16c:	add	x4, x4, #0xee5
  41d170:	sub	x5, x29, #0x28
  41d174:	adrp	x6, 42d000 <_fini+0x33a8>
  41d178:	add	x6, x6, #0xef2
  41d17c:	sub	x7, x29, #0x30
  41d180:	mov	x11, sp
  41d184:	adrp	x12, 42d000 <_fini+0x33a8>
  41d188:	add	x12, x12, #0xf04
  41d18c:	str	x12, [x11]
  41d190:	mov	x11, sp
  41d194:	sub	x12, x29, #0x38
  41d198:	str	x12, [x11, #8]
  41d19c:	mov	x11, sp
  41d1a0:	adrp	x12, 42d000 <_fini+0x33a8>
  41d1a4:	add	x12, x12, #0xf14
  41d1a8:	str	x12, [x11, #16]
  41d1ac:	mov	x11, sp
  41d1b0:	sub	x12, x29, #0x40
  41d1b4:	str	x12, [x11, #24]
  41d1b8:	mov	x11, sp
  41d1bc:	adrp	x12, 42d000 <_fini+0x33a8>
  41d1c0:	add	x12, x12, #0xf27
  41d1c4:	str	x12, [x11, #32]
  41d1c8:	mov	x11, sp
  41d1cc:	str	x8, [x11, #40]
  41d1d0:	mov	x8, sp
  41d1d4:	adrp	x11, 42d000 <_fini+0x33a8>
  41d1d8:	add	x11, x11, #0xf32
  41d1dc:	str	x11, [x8, #48]
  41d1e0:	mov	x8, sp
  41d1e4:	str	x9, [x8, #56]
  41d1e8:	mov	x8, sp
  41d1ec:	adrp	x9, 42d000 <_fini+0x33a8>
  41d1f0:	add	x9, x9, #0xf37
  41d1f4:	str	x9, [x8, #64]
  41d1f8:	mov	x8, sp
  41d1fc:	sub	x9, x29, #0x48
  41d200:	str	x9, [x8, #72]
  41d204:	mov	x8, sp
  41d208:	str	x10, [x8, #80]
  41d20c:	bl	406308 <parse_env_file_sentinel@plt>
  41d210:	stur	w0, [x29, #-76]
  41d214:	ldur	w13, [x29, #-76]
  41d218:	cmp	w13, #0x0
  41d21c:	cset	w13, ge  // ge = tcont
  41d220:	tbnz	w13, #0, 41d2bc <stdout_stream_load+0x2c8>
  41d224:	mov	w8, #0x3                   	// #3
  41d228:	stur	w8, [x29, #-84]
  41d22c:	ldur	w8, [x29, #-76]
  41d230:	stur	w8, [x29, #-88]
  41d234:	stur	wzr, [x29, #-92]
  41d238:	ldur	w0, [x29, #-92]
  41d23c:	bl	405638 <log_get_max_level_realm@plt>
  41d240:	ldur	w8, [x29, #-84]
  41d244:	and	w8, w8, #0x7
  41d248:	cmp	w0, w8
  41d24c:	b.lt	41d28c <stdout_stream_load+0x298>  // b.tstop
  41d250:	ldur	w8, [x29, #-92]
  41d254:	ldur	w9, [x29, #-84]
  41d258:	orr	w0, w9, w8, lsl #10
  41d25c:	ldur	w1, [x29, #-88]
  41d260:	ldur	x10, [x29, #-16]
  41d264:	ldr	x6, [x10, #96]
  41d268:	ldr	x2, [sp, #112]
  41d26c:	mov	w3, #0x2c8                 	// #712
  41d270:	adrp	x4, 42d000 <_fini+0x33a8>
  41d274:	add	x4, x4, #0xec9
  41d278:	adrp	x5, 42d000 <_fini+0x33a8>
  41d27c:	add	x5, x5, #0xf41
  41d280:	bl	405648 <log_internal_realm@plt>
  41d284:	str	w0, [sp, #100]
  41d288:	b	41d2a0 <stdout_stream_load+0x2ac>
  41d28c:	ldur	w0, [x29, #-88]
  41d290:	bl	405658 <abs@plt>
  41d294:	mov	w8, wzr
  41d298:	subs	w8, w8, w0, uxtb
  41d29c:	str	w8, [sp, #100]
  41d2a0:	ldr	w8, [sp, #100]
  41d2a4:	stur	w8, [x29, #-96]
  41d2a8:	ldur	w8, [x29, #-96]
  41d2ac:	stur	w8, [x29, #-4]
  41d2b0:	mov	w8, #0x1                   	// #1
  41d2b4:	stur	w8, [x29, #-80]
  41d2b8:	b	41d55c <stdout_stream_load+0x568>
  41d2bc:	ldur	x8, [x29, #-32]
  41d2c0:	cbz	x8, 41d2ec <stdout_stream_load+0x2f8>
  41d2c4:	ldur	x0, [x29, #-32]
  41d2c8:	bl	405de8 <log_level_from_string@plt>
  41d2cc:	stur	w0, [x29, #-100]
  41d2d0:	ldur	w8, [x29, #-100]
  41d2d4:	cmp	w8, #0x0
  41d2d8:	cset	w8, lt  // lt = tstop
  41d2dc:	tbnz	w8, #0, 41d2ec <stdout_stream_load+0x2f8>
  41d2e0:	ldur	w8, [x29, #-100]
  41d2e4:	ldur	x9, [x29, #-16]
  41d2e8:	str	w8, [x9, #56]
  41d2ec:	ldur	x8, [x29, #-40]
  41d2f0:	cbz	x8, 41d334 <stdout_stream_load+0x340>
  41d2f4:	ldur	x0, [x29, #-40]
  41d2f8:	bl	405dd8 <parse_boolean@plt>
  41d2fc:	stur	w0, [x29, #-76]
  41d300:	ldur	w8, [x29, #-76]
  41d304:	cmp	w8, #0x0
  41d308:	cset	w8, lt  // lt = tstop
  41d30c:	tbnz	w8, #0, 41d334 <stdout_stream_load+0x340>
  41d310:	ldur	w8, [x29, #-76]
  41d314:	cmp	w8, #0x0
  41d318:	cset	w8, ne  // ne = any
  41d31c:	ldur	x9, [x29, #-16]
  41d320:	ldrb	w10, [x9, #60]
  41d324:	and	w10, w10, #0xfffffffe
  41d328:	and	w8, w8, #0x1
  41d32c:	orr	w8, w10, w8
  41d330:	strb	w8, [x9, #60]
  41d334:	ldur	x8, [x29, #-48]
  41d338:	cbz	x8, 41d384 <stdout_stream_load+0x390>
  41d33c:	ldur	x0, [x29, #-48]
  41d340:	bl	405dd8 <parse_boolean@plt>
  41d344:	stur	w0, [x29, #-76]
  41d348:	ldur	w8, [x29, #-76]
  41d34c:	cmp	w8, #0x0
  41d350:	cset	w8, lt  // lt = tstop
  41d354:	tbnz	w8, #0, 41d384 <stdout_stream_load+0x390>
  41d358:	ldur	w8, [x29, #-76]
  41d35c:	cmp	w8, #0x0
  41d360:	cset	w8, ne  // ne = any
  41d364:	ldur	x9, [x29, #-16]
  41d368:	ldrb	w10, [x9, #60]
  41d36c:	mov	w11, #0x1                   	// #1
  41d370:	and	w8, w8, #0x1
  41d374:	lsl	w8, w8, w11
  41d378:	and	w10, w10, #0xfffffffd
  41d37c:	orr	w8, w10, w8
  41d380:	strb	w8, [x9, #60]
  41d384:	ldur	x8, [x29, #-56]
  41d388:	cbz	x8, 41d3d0 <stdout_stream_load+0x3dc>
  41d38c:	ldur	x0, [x29, #-56]
  41d390:	bl	405dd8 <parse_boolean@plt>
  41d394:	stur	w0, [x29, #-76]
  41d398:	ldur	w8, [x29, #-76]
  41d39c:	cmp	w8, #0x0
  41d3a0:	cset	w8, lt  // lt = tstop
  41d3a4:	tbnz	w8, #0, 41d3d0 <stdout_stream_load+0x3dc>
  41d3a8:	ldur	w8, [x29, #-76]
  41d3ac:	cmp	w8, #0x0
  41d3b0:	cset	w8, ne  // ne = any
  41d3b4:	ldur	x9, [x29, #-16]
  41d3b8:	ldrb	w10, [x9, #60]
  41d3bc:	and	w8, w8, #0x1
  41d3c0:	lsl	w8, w8, #2
  41d3c4:	and	w10, w10, #0xfffffffb
  41d3c8:	orr	w8, w10, w8
  41d3cc:	strb	w8, [x9, #60]
  41d3d0:	ldur	x8, [x29, #-64]
  41d3d4:	cbz	x8, 41d41c <stdout_stream_load+0x428>
  41d3d8:	ldur	x0, [x29, #-64]
  41d3dc:	bl	405dd8 <parse_boolean@plt>
  41d3e0:	stur	w0, [x29, #-76]
  41d3e4:	ldur	w8, [x29, #-76]
  41d3e8:	cmp	w8, #0x0
  41d3ec:	cset	w8, lt  // lt = tstop
  41d3f0:	tbnz	w8, #0, 41d41c <stdout_stream_load+0x428>
  41d3f4:	ldur	w8, [x29, #-76]
  41d3f8:	cmp	w8, #0x0
  41d3fc:	cset	w8, ne  // ne = any
  41d400:	ldur	x9, [x29, #-16]
  41d404:	ldrb	w10, [x9, #60]
  41d408:	and	w8, w8, #0x1
  41d40c:	lsl	w8, w8, #3
  41d410:	and	w10, w10, #0xfffffff7
  41d414:	orr	w8, w10, w8
  41d418:	strb	w8, [x9, #60]
  41d41c:	ldur	x8, [x29, #-72]
  41d420:	cbz	x8, 41d550 <stdout_stream_load+0x55c>
  41d424:	ldur	x0, [x29, #-72]
  41d428:	add	x1, sp, #0x78
  41d42c:	bl	406318 <sd_id128_from_string@plt>
  41d430:	stur	w0, [x29, #-76]
  41d434:	ldur	w8, [x29, #-76]
  41d438:	cmp	w8, #0x0
  41d43c:	cset	w8, lt  // lt = tstop
  41d440:	tbnz	w8, #0, 41d550 <stdout_stream_load+0x55c>
  41d444:	ldur	x8, [x29, #-16]
  41d448:	add	x0, x8, #0x90
  41d44c:	ldrb	w3, [sp, #120]
  41d450:	ldrb	w4, [sp, #121]
  41d454:	ldrb	w5, [sp, #122]
  41d458:	ldrb	w6, [sp, #123]
  41d45c:	ldrb	w7, [sp, #124]
  41d460:	ldrb	w9, [sp, #125]
  41d464:	ldrb	w10, [sp, #126]
  41d468:	ldrb	w11, [sp, #127]
  41d46c:	ldrb	w12, [sp, #128]
  41d470:	ldrb	w13, [sp, #129]
  41d474:	ldrb	w14, [sp, #130]
  41d478:	ldrb	w15, [sp, #131]
  41d47c:	ldrb	w16, [sp, #132]
  41d480:	ldrb	w17, [sp, #133]
  41d484:	ldrb	w18, [sp, #134]
  41d488:	ldrb	w1, [sp, #135]
  41d48c:	mov	x8, #0x2c                  	// #44
  41d490:	str	w1, [sp, #96]
  41d494:	mov	x1, x8
  41d498:	adrp	x2, 42d000 <_fini+0x33a8>
  41d49c:	add	x2, x2, #0x50e
  41d4a0:	mov	x8, sp
  41d4a4:	str	w9, [x8]
  41d4a8:	mov	x8, sp
  41d4ac:	str	w10, [x8, #8]
  41d4b0:	mov	x8, sp
  41d4b4:	str	w11, [x8, #16]
  41d4b8:	mov	x8, sp
  41d4bc:	str	w12, [x8, #24]
  41d4c0:	mov	x8, sp
  41d4c4:	str	w13, [x8, #32]
  41d4c8:	mov	x8, sp
  41d4cc:	str	w14, [x8, #40]
  41d4d0:	mov	x8, sp
  41d4d4:	str	w15, [x8, #48]
  41d4d8:	mov	x8, sp
  41d4dc:	str	w16, [x8, #56]
  41d4e0:	mov	x8, sp
  41d4e4:	str	w17, [x8, #64]
  41d4e8:	mov	x8, sp
  41d4ec:	str	w18, [x8, #72]
  41d4f0:	mov	x8, sp
  41d4f4:	ldr	w9, [sp, #96]
  41d4f8:	str	w9, [x8, #80]
  41d4fc:	bl	405728 <snprintf@plt>
  41d500:	mov	w1, w0
  41d504:	sxtw	x8, w1
  41d508:	cmp	x8, #0x2c
  41d50c:	cset	w9, cc  // cc = lo, ul, last
  41d510:	mov	w10, #0x1                   	// #1
  41d514:	eor	w9, w9, #0x1
  41d518:	eor	w9, w9, w10
  41d51c:	eor	w9, w9, w10
  41d520:	and	w9, w9, #0x1
  41d524:	mov	w1, w9
  41d528:	sxtw	x8, w1
  41d52c:	cbz	x8, 41d550 <stdout_stream_load+0x55c>
  41d530:	mov	w8, wzr
  41d534:	mov	w0, w8
  41d538:	adrp	x1, 42d000 <_fini+0x33a8>
  41d53c:	add	x1, x1, #0x55a
  41d540:	ldr	x2, [sp, #112]
  41d544:	mov	w3, #0x2ef                 	// #751
  41d548:	ldr	x4, [sp, #104]
  41d54c:	bl	405718 <log_assert_failed_realm@plt>
  41d550:	stur	wzr, [x29, #-4]
  41d554:	mov	w8, #0x1                   	// #1
  41d558:	stur	w8, [x29, #-80]
  41d55c:	sub	x0, x29, #0x48
  41d560:	bl	41ce30 <freep>
  41d564:	sub	x0, x29, #0x40
  41d568:	bl	41ce30 <freep>
  41d56c:	sub	x0, x29, #0x38
  41d570:	bl	41ce30 <freep>
  41d574:	sub	x0, x29, #0x30
  41d578:	bl	41ce30 <freep>
  41d57c:	sub	x0, x29, #0x28
  41d580:	bl	41ce30 <freep>
  41d584:	sub	x0, x29, #0x20
  41d588:	bl	41ce30 <freep>
  41d58c:	ldur	w0, [x29, #-4]
  41d590:	ldp	x29, x30, [sp, #240]
  41d594:	add	sp, sp, #0x100
  41d598:	ret

000000000041d59c <closep>:
  41d59c:	sub	sp, sp, #0x20
  41d5a0:	stp	x29, x30, [sp, #16]
  41d5a4:	add	x29, sp, #0x10
  41d5a8:	str	x0, [sp, #8]
  41d5ac:	ldr	x8, [sp, #8]
  41d5b0:	ldr	w0, [x8]
  41d5b4:	bl	4058c8 <safe_close@plt>
  41d5b8:	ldp	x29, x30, [sp, #16]
  41d5bc:	add	sp, sp, #0x20
  41d5c0:	ret

000000000041d5c4 <ERRNO_IS_ACCEPT_AGAIN>:
  41d5c4:	sub	sp, sp, #0x20
  41d5c8:	stp	x29, x30, [sp, #16]
  41d5cc:	add	x29, sp, #0x10
  41d5d0:	stur	w0, [x29, #-4]
  41d5d4:	ldur	w0, [x29, #-4]
  41d5d8:	bl	41d664 <ERRNO_IS_DISCONNECT>
  41d5dc:	mov	w8, #0x1                   	// #1
  41d5e0:	str	w8, [sp, #4]
  41d5e4:	tbnz	w0, #0, 41d650 <ERRNO_IS_ACCEPT_AGAIN+0x8c>
  41d5e8:	mov	w8, #0x0                   	// #0
  41d5ec:	sturb	w8, [x29, #-5]
  41d5f0:	ldur	w0, [x29, #-4]
  41d5f4:	bl	405658 <abs@plt>
  41d5f8:	cmp	w0, #0x4
  41d5fc:	str	w0, [sp]
  41d600:	b.eq	41d630 <ERRNO_IS_ACCEPT_AGAIN+0x6c>  // b.none
  41d604:	b	41d608 <ERRNO_IS_ACCEPT_AGAIN+0x44>
  41d608:	ldr	w8, [sp]
  41d60c:	cmp	w8, #0xb
  41d610:	b.eq	41d630 <ERRNO_IS_ACCEPT_AGAIN+0x6c>  // b.none
  41d614:	b	41d618 <ERRNO_IS_ACCEPT_AGAIN+0x54>
  41d618:	ldr	w8, [sp]
  41d61c:	cmp	w8, #0x5f
  41d620:	cset	w9, eq  // eq = none
  41d624:	eor	w9, w9, #0x1
  41d628:	tbnz	w9, #0, 41d63c <ERRNO_IS_ACCEPT_AGAIN+0x78>
  41d62c:	b	41d630 <ERRNO_IS_ACCEPT_AGAIN+0x6c>
  41d630:	mov	w8, #0x1                   	// #1
  41d634:	sturb	w8, [x29, #-5]
  41d638:	b	41d63c <ERRNO_IS_ACCEPT_AGAIN+0x78>
  41d63c:	ldurb	w8, [x29, #-5]
  41d640:	and	w8, w8, #0x1
  41d644:	sturb	w8, [x29, #-6]
  41d648:	ldurb	w8, [x29, #-6]
  41d64c:	str	w8, [sp, #4]
  41d650:	ldr	w8, [sp, #4]
  41d654:	and	w0, w8, #0x1
  41d658:	ldp	x29, x30, [sp, #16]
  41d65c:	add	sp, sp, #0x20
  41d660:	ret

000000000041d664 <ERRNO_IS_DISCONNECT>:
  41d664:	sub	sp, sp, #0x20
  41d668:	stp	x29, x30, [sp, #16]
  41d66c:	add	x29, sp, #0x10
  41d670:	mov	w8, #0x0                   	// #0
  41d674:	stur	w0, [x29, #-4]
  41d678:	sturb	w8, [x29, #-5]
  41d67c:	ldur	w0, [x29, #-4]
  41d680:	bl	405658 <abs@plt>
  41d684:	subs	w8, w0, #0x20
  41d688:	mov	w9, w8
  41d68c:	ubfx	x9, x9, #0, #32
  41d690:	cmp	x9, #0x51
  41d694:	str	x9, [sp]
  41d698:	b.hi	41d6c0 <ERRNO_IS_DISCONNECT+0x5c>  // b.pmore
  41d69c:	adrp	x8, 430000 <_fini+0x63a8>
  41d6a0:	add	x8, x8, #0x570
  41d6a4:	ldr	x11, [sp]
  41d6a8:	ldrsw	x10, [x8, x11, lsl #2]
  41d6ac:	add	x9, x8, x10
  41d6b0:	br	x9
  41d6b4:	mov	w8, #0x1                   	// #1
  41d6b8:	sturb	w8, [x29, #-5]
  41d6bc:	b	41d6c0 <ERRNO_IS_DISCONNECT+0x5c>
  41d6c0:	ldurb	w8, [x29, #-5]
  41d6c4:	mov	w9, #0x1                   	// #1
  41d6c8:	and	w8, w8, w9
  41d6cc:	sturb	w8, [x29, #-6]
  41d6d0:	ldurb	w8, [x29, #-6]
  41d6d4:	and	w0, w8, #0x1
  41d6d8:	ldp	x29, x30, [sp, #16]
  41d6dc:	add	sp, sp, #0x20
  41d6e0:	ret

000000000041d6e4 <server_forward_syslog>:
  41d6e4:	stp	x29, x30, [sp, #-32]!
  41d6e8:	str	x28, [sp, #16]
  41d6ec:	mov	x29, sp
  41d6f0:	sub	sp, sp, #0x220
  41d6f4:	mov	x8, xzr
  41d6f8:	adrp	x9, 42e000 <_fini+0x43a8>
  41d6fc:	add	x9, x9, #0x39
  41d700:	add	x9, x9, #0x3
  41d704:	adrp	x10, 42e000 <_fini+0x43a8>
  41d708:	add	x10, x10, #0x5a
  41d70c:	stur	x0, [x29, #-8]
  41d710:	stur	w1, [x29, #-12]
  41d714:	stur	x2, [x29, #-24]
  41d718:	stur	x3, [x29, #-32]
  41d71c:	stur	x4, [x29, #-40]
  41d720:	stur	x5, [x29, #-48]
  41d724:	stur	wzr, [x29, #-228]
  41d728:	str	x8, [sp, #240]
  41d72c:	str	x9, [sp, #112]
  41d730:	str	x10, [sp, #104]
  41d734:	ldur	x8, [x29, #-8]
  41d738:	cmp	x8, #0x0
  41d73c:	cset	w9, ne  // ne = any
  41d740:	mov	w10, #0x1                   	// #1
  41d744:	eor	w9, w9, #0x1
  41d748:	eor	w9, w9, w10
  41d74c:	eor	w9, w9, w10
  41d750:	and	w9, w9, #0x1
  41d754:	mov	w0, w9
  41d758:	sxtw	x8, w0
  41d75c:	cbz	x8, 41d780 <server_forward_syslog+0x9c>
  41d760:	mov	w8, wzr
  41d764:	mov	w0, w8
  41d768:	adrp	x1, 429000 <journal_ratelimit_group_free+0x70>
  41d76c:	add	x1, x1, #0xdc8
  41d770:	ldr	x2, [sp, #112]
  41d774:	mov	w3, #0x7b                  	// #123
  41d778:	ldr	x4, [sp, #104]
  41d77c:	bl	405718 <log_assert_failed_realm@plt>
  41d780:	ldur	w8, [x29, #-12]
  41d784:	cmp	w8, #0x0
  41d788:	cset	w8, ge  // ge = tcont
  41d78c:	mov	w9, #0x1                   	// #1
  41d790:	eor	w8, w8, #0x1
  41d794:	eor	w8, w8, w9
  41d798:	eor	w8, w8, w9
  41d79c:	and	w8, w8, #0x1
  41d7a0:	mov	w0, w8
  41d7a4:	sxtw	x10, w0
  41d7a8:	cbz	x10, 41d7cc <server_forward_syslog+0xe8>
  41d7ac:	mov	w8, wzr
  41d7b0:	mov	w0, w8
  41d7b4:	adrp	x1, 429000 <journal_ratelimit_group_free+0x70>
  41d7b8:	add	x1, x1, #0xe43
  41d7bc:	ldr	x2, [sp, #112]
  41d7c0:	mov	w3, #0x7c                  	// #124
  41d7c4:	ldr	x4, [sp, #104]
  41d7c8:	bl	405718 <log_assert_failed_realm@plt>
  41d7cc:	ldur	w8, [x29, #-12]
  41d7d0:	cmp	w8, #0x3e7
  41d7d4:	cset	w8, le
  41d7d8:	mov	w9, #0x1                   	// #1
  41d7dc:	eor	w8, w8, #0x1
  41d7e0:	eor	w8, w8, w9
  41d7e4:	eor	w8, w8, w9
  41d7e8:	and	w8, w8, #0x1
  41d7ec:	mov	w0, w8
  41d7f0:	sxtw	x10, w0
  41d7f4:	cbz	x10, 41d818 <server_forward_syslog+0x134>
  41d7f8:	mov	w8, wzr
  41d7fc:	mov	w0, w8
  41d800:	adrp	x1, 429000 <journal_ratelimit_group_free+0x70>
  41d804:	add	x1, x1, #0xe51
  41d808:	ldr	x2, [sp, #112]
  41d80c:	mov	w3, #0x7d                  	// #125
  41d810:	ldr	x4, [sp, #104]
  41d814:	bl	405718 <log_assert_failed_realm@plt>
  41d818:	ldur	x8, [x29, #-32]
  41d81c:	cmp	x8, #0x0
  41d820:	cset	w9, ne  // ne = any
  41d824:	mov	w10, #0x1                   	// #1
  41d828:	eor	w9, w9, #0x1
  41d82c:	eor	w9, w9, w10
  41d830:	eor	w9, w9, w10
  41d834:	and	w9, w9, #0x1
  41d838:	mov	w0, w9
  41d83c:	sxtw	x8, w0
  41d840:	cbz	x8, 41d864 <server_forward_syslog+0x180>
  41d844:	mov	w8, wzr
  41d848:	mov	w0, w8
  41d84c:	adrp	x1, 429000 <journal_ratelimit_group_free+0x70>
  41d850:	add	x1, x1, #0xe61
  41d854:	ldr	x2, [sp, #112]
  41d858:	mov	w3, #0x7e                  	// #126
  41d85c:	ldr	x4, [sp, #104]
  41d860:	bl	405718 <log_assert_failed_realm@plt>
  41d864:	ldur	w8, [x29, #-12]
  41d868:	and	w8, w8, #0x7
  41d86c:	ldur	x9, [x29, #-8]
  41d870:	ldr	w10, [x9, #540]
  41d874:	cmp	w8, w10
  41d878:	b.le	41d888 <server_forward_syslog+0x1a4>
  41d87c:	mov	w8, #0x1                   	// #1
  41d880:	str	w8, [sp, #236]
  41d884:	b	41dbe8 <server_forward_syslog+0x504>
  41d888:	ldur	w3, [x29, #-12]
  41d88c:	sub	x0, x29, #0x8f
  41d890:	mov	x1, #0xf                   	// #15
  41d894:	adrp	x2, 429000 <journal_ratelimit_group_free+0x70>
  41d898:	add	x2, x2, #0xe69
  41d89c:	bl	405728 <snprintf@plt>
  41d8a0:	mov	w1, w0
  41d8a4:	sxtw	x8, w1
  41d8a8:	cmp	x8, #0xf
  41d8ac:	cset	w9, cc  // cc = lo, ul, last
  41d8b0:	mov	w10, #0x1                   	// #1
  41d8b4:	eor	w9, w9, #0x1
  41d8b8:	eor	w9, w9, w10
  41d8bc:	eor	w9, w9, w10
  41d8c0:	and	w9, w9, #0x1
  41d8c4:	mov	w1, w9
  41d8c8:	sxtw	x8, w1
  41d8cc:	cbz	x8, 41d8f0 <server_forward_syslog+0x20c>
  41d8d0:	mov	w8, wzr
  41d8d4:	mov	w0, w8
  41d8d8:	adrp	x1, 429000 <journal_ratelimit_group_free+0x70>
  41d8dc:	add	x1, x1, #0xe6e
  41d8e0:	ldr	x2, [sp, #112]
  41d8e4:	mov	w3, #0x84                  	// #132
  41d8e8:	ldr	x4, [sp, #104]
  41d8ec:	bl	405718 <log_assert_failed_realm@plt>
  41d8f0:	ldursw	x8, [x29, #-228]
  41d8f4:	mov	w9, w8
  41d8f8:	add	w9, w9, #0x1
  41d8fc:	stur	w9, [x29, #-228]
  41d900:	sub	x10, x29, #0x80
  41d904:	sub	x11, x29, #0x8f
  41d908:	str	x11, [sp, #216]
  41d90c:	mov	x0, x11
  41d910:	str	x8, [sp, #96]
  41d914:	str	x10, [sp, #88]
  41d918:	bl	405738 <strlen@plt>
  41d91c:	str	x0, [sp, #224]
  41d920:	ldur	q0, [sp, #216]
  41d924:	ldr	x8, [sp, #88]
  41d928:	ldr	x10, [sp, #96]
  41d92c:	str	q0, [x8, x10, lsl #4]
  41d930:	ldur	x11, [x29, #-48]
  41d934:	cbz	x11, 41d948 <server_forward_syslog+0x264>
  41d938:	ldur	x8, [x29, #-48]
  41d93c:	ldr	x8, [x8]
  41d940:	str	x8, [sp, #80]
  41d944:	b	41d964 <server_forward_syslog+0x280>
  41d948:	mov	w8, wzr
  41d94c:	mov	w0, w8
  41d950:	bl	4056f8 <now@plt>
  41d954:	mov	x9, #0x4240                	// #16960
  41d958:	movk	x9, #0xf, lsl #16
  41d95c:	udiv	x9, x0, x9
  41d960:	str	x9, [sp, #80]
  41d964:	ldr	x8, [sp, #80]
  41d968:	sub	x0, x29, #0xf0
  41d96c:	stur	x8, [x29, #-240]
  41d970:	add	x1, sp, #0xf8
  41d974:	bl	406328 <localtime_r@plt>
  41d978:	cbnz	x0, 41d988 <server_forward_syslog+0x2a4>
  41d97c:	mov	w8, #0x1                   	// #1
  41d980:	str	w8, [sp, #236]
  41d984:	b	41dbe8 <server_forward_syslog+0x504>
  41d988:	sub	x0, x29, #0xcf
  41d98c:	mov	x1, #0x40                  	// #64
  41d990:	adrp	x2, 42e000 <_fini+0x43a8>
  41d994:	add	x2, x2, #0xce
  41d998:	add	x3, sp, #0xf8
  41d99c:	bl	406338 <strftime@plt>
  41d9a0:	cmp	x0, #0x0
  41d9a4:	cset	w8, hi  // hi = pmore
  41d9a8:	tbnz	w8, #0, 41d9b8 <server_forward_syslog+0x2d4>
  41d9ac:	mov	w8, #0x1                   	// #1
  41d9b0:	str	w8, [sp, #236]
  41d9b4:	b	41dbe8 <server_forward_syslog+0x504>
  41d9b8:	ldursw	x8, [x29, #-228]
  41d9bc:	mov	w9, w8
  41d9c0:	add	w9, w9, #0x1
  41d9c4:	stur	w9, [x29, #-228]
  41d9c8:	sub	x10, x29, #0x80
  41d9cc:	sub	x11, x29, #0xcf
  41d9d0:	str	x11, [sp, #200]
  41d9d4:	mov	x0, x11
  41d9d8:	str	x8, [sp, #72]
  41d9dc:	str	x10, [sp, #64]
  41d9e0:	bl	405738 <strlen@plt>
  41d9e4:	str	x0, [sp, #208]
  41d9e8:	ldur	q0, [sp, #200]
  41d9ec:	ldr	x8, [sp, #64]
  41d9f0:	ldr	x10, [sp, #72]
  41d9f4:	str	q0, [x8, x10, lsl #4]
  41d9f8:	ldur	x11, [x29, #-40]
  41d9fc:	cbz	x11, 41db18 <server_forward_syslog+0x434>
  41da00:	ldur	x8, [x29, #-24]
  41da04:	cbnz	x8, 41da20 <server_forward_syslog+0x33c>
  41da08:	ldur	x8, [x29, #-40]
  41da0c:	ldr	w0, [x8]
  41da10:	add	x1, sp, #0xf0
  41da14:	bl	405748 <get_process_comm@plt>
  41da18:	ldr	x8, [sp, #240]
  41da1c:	stur	x8, [x29, #-24]
  41da20:	ldur	x8, [x29, #-40]
  41da24:	ldr	w3, [x8]
  41da28:	sub	x0, x29, #0xe0
  41da2c:	mov	x1, #0x11                  	// #17
  41da30:	adrp	x2, 429000 <journal_ratelimit_group_free+0x70>
  41da34:	add	x2, x2, #0xe9d
  41da38:	bl	405728 <snprintf@plt>
  41da3c:	mov	w1, w0
  41da40:	sxtw	x8, w1
  41da44:	cmp	x8, #0x11
  41da48:	cset	w9, cc  // cc = lo, ul, last
  41da4c:	mov	w10, #0x1                   	// #1
  41da50:	eor	w9, w9, #0x1
  41da54:	eor	w9, w9, w10
  41da58:	eor	w9, w9, w10
  41da5c:	and	w9, w9, #0x1
  41da60:	mov	w1, w9
  41da64:	sxtw	x8, w1
  41da68:	cbz	x8, 41da8c <server_forward_syslog+0x3a8>
  41da6c:	mov	w8, wzr
  41da70:	mov	w0, w8
  41da74:	adrp	x1, 429000 <journal_ratelimit_group_free+0x70>
  41da78:	add	x1, x1, #0xea4
  41da7c:	ldr	x2, [sp, #112]
  41da80:	mov	w3, #0x96                  	// #150
  41da84:	ldr	x4, [sp, #104]
  41da88:	bl	405718 <log_assert_failed_realm@plt>
  41da8c:	ldur	x8, [x29, #-24]
  41da90:	cbz	x8, 41dad4 <server_forward_syslog+0x3f0>
  41da94:	ldursw	x8, [x29, #-228]
  41da98:	mov	w9, w8
  41da9c:	add	w9, w9, #0x1
  41daa0:	stur	w9, [x29, #-228]
  41daa4:	sub	x10, x29, #0x80
  41daa8:	ldur	x11, [x29, #-24]
  41daac:	str	x11, [sp, #184]
  41dab0:	ldur	x0, [x29, #-24]
  41dab4:	str	x8, [sp, #56]
  41dab8:	str	x10, [sp, #48]
  41dabc:	bl	405738 <strlen@plt>
  41dac0:	str	x0, [sp, #192]
  41dac4:	ldur	q0, [sp, #184]
  41dac8:	ldr	x8, [sp, #48]
  41dacc:	ldr	x10, [sp, #56]
  41dad0:	str	q0, [x8, x10, lsl #4]
  41dad4:	ldursw	x8, [x29, #-228]
  41dad8:	mov	w9, w8
  41dadc:	add	w9, w9, #0x1
  41dae0:	stur	w9, [x29, #-228]
  41dae4:	sub	x10, x29, #0x80
  41dae8:	sub	x11, x29, #0xe0
  41daec:	str	x11, [sp, #168]
  41daf0:	mov	x0, x11
  41daf4:	str	x8, [sp, #40]
  41daf8:	str	x10, [sp, #32]
  41dafc:	bl	405738 <strlen@plt>
  41db00:	str	x0, [sp, #176]
  41db04:	ldur	q0, [sp, #168]
  41db08:	ldr	x8, [sp, #32]
  41db0c:	ldr	x10, [sp, #40]
  41db10:	str	q0, [x8, x10, lsl #4]
  41db14:	b	41db8c <server_forward_syslog+0x4a8>
  41db18:	ldur	x8, [x29, #-24]
  41db1c:	cbz	x8, 41db8c <server_forward_syslog+0x4a8>
  41db20:	ldursw	x8, [x29, #-228]
  41db24:	mov	w9, w8
  41db28:	add	w9, w9, #0x1
  41db2c:	stur	w9, [x29, #-228]
  41db30:	sub	x10, x29, #0x80
  41db34:	ldur	x11, [x29, #-24]
  41db38:	str	x11, [sp, #152]
  41db3c:	ldur	x0, [x29, #-24]
  41db40:	str	x8, [sp, #24]
  41db44:	str	x10, [sp, #16]
  41db48:	bl	405738 <strlen@plt>
  41db4c:	str	x0, [sp, #160]
  41db50:	ldur	q0, [sp, #152]
  41db54:	ldr	x8, [sp, #16]
  41db58:	ldr	x10, [sp, #24]
  41db5c:	str	q0, [x8, x10, lsl #4]
  41db60:	ldursw	x11, [x29, #-228]
  41db64:	mov	w9, w11
  41db68:	add	w9, w9, #0x1
  41db6c:	stur	w9, [x29, #-228]
  41db70:	adrp	x12, 429000 <journal_ratelimit_group_free+0x70>
  41db74:	add	x12, x12, #0xece
  41db78:	str	x12, [sp, #136]
  41db7c:	mov	x12, #0x2                   	// #2
  41db80:	str	x12, [sp, #144]
  41db84:	ldur	q0, [sp, #136]
  41db88:	str	q0, [x8, x11, lsl #4]
  41db8c:	ldursw	x8, [x29, #-228]
  41db90:	mov	w9, w8
  41db94:	add	w9, w9, #0x1
  41db98:	stur	w9, [x29, #-228]
  41db9c:	sub	x10, x29, #0x80
  41dba0:	ldur	x11, [x29, #-32]
  41dba4:	str	x11, [sp, #120]
  41dba8:	ldur	x0, [x29, #-32]
  41dbac:	str	x8, [sp, #8]
  41dbb0:	str	x10, [sp]
  41dbb4:	bl	405738 <strlen@plt>
  41dbb8:	str	x0, [sp, #128]
  41dbbc:	ldur	q0, [sp, #120]
  41dbc0:	ldr	x8, [sp]
  41dbc4:	ldr	x10, [sp, #8]
  41dbc8:	str	q0, [x8, x10, lsl #4]
  41dbcc:	ldur	x0, [x29, #-8]
  41dbd0:	ldur	w2, [x29, #-228]
  41dbd4:	ldur	x3, [x29, #-40]
  41dbd8:	ldur	x4, [x29, #-48]
  41dbdc:	mov	x1, x8
  41dbe0:	bl	41dc28 <forward_syslog_iovec>
  41dbe4:	str	wzr, [sp, #236]
  41dbe8:	add	x0, sp, #0xf0
  41dbec:	bl	41dc00 <freep>
  41dbf0:	add	sp, sp, #0x220
  41dbf4:	ldr	x28, [sp, #16]
  41dbf8:	ldp	x29, x30, [sp], #32
  41dbfc:	ret

000000000041dc00 <freep>:
  41dc00:	sub	sp, sp, #0x20
  41dc04:	stp	x29, x30, [sp, #16]
  41dc08:	add	x29, sp, #0x10
  41dc0c:	str	x0, [sp, #8]
  41dc10:	ldr	x8, [sp, #8]
  41dc14:	ldr	x0, [x8]
  41dc18:	bl	405778 <free@plt>
  41dc1c:	ldp	x29, x30, [sp, #16]
  41dc20:	add	sp, sp, #0x20
  41dc24:	ret

000000000041dc28 <forward_syslog_iovec>:
  41dc28:	sub	sp, sp, #0x100
  41dc2c:	stp	x29, x30, [sp, #240]
  41dc30:	add	x29, sp, #0xf0
  41dc34:	adrp	x8, 430000 <_fini+0x63a8>
  41dc38:	add	x8, x8, #0x918
  41dc3c:	adrp	x9, 42e000 <_fini+0x43a8>
  41dc40:	add	x9, x9, #0x39
  41dc44:	add	x9, x9, #0x3
  41dc48:	adrp	x10, 42e000 <_fini+0x43a8>
  41dc4c:	add	x10, x10, #0x3de
  41dc50:	stur	x0, [x29, #-8]
  41dc54:	stur	x1, [x29, #-16]
  41dc58:	stur	w2, [x29, #-20]
  41dc5c:	stur	x3, [x29, #-32]
  41dc60:	stur	x4, [x29, #-40]
  41dc64:	stur	x8, [x29, #-96]
  41dc68:	stur	x8, [x29, #-104]
  41dc6c:	str	x9, [sp, #40]
  41dc70:	str	x10, [sp, #32]
  41dc74:	ldur	x8, [x29, #-104]
  41dc78:	ldrh	w9, [x8]
  41dc7c:	cmp	w9, #0x1
  41dc80:	cset	w9, eq  // eq = none
  41dc84:	mov	w10, #0x1                   	// #1
  41dc88:	eor	w9, w9, #0x1
  41dc8c:	eor	w9, w9, w10
  41dc90:	eor	w9, w9, w10
  41dc94:	and	w9, w9, #0x1
  41dc98:	mov	w0, w9
  41dc9c:	sxtw	x8, w0
  41dca0:	cbz	x8, 41dcc4 <forward_syslog_iovec+0x9c>
  41dca4:	mov	w8, wzr
  41dca8:	mov	w0, w8
  41dcac:	adrp	x1, 42d000 <_fini+0x33a8>
  41dcb0:	add	x1, x1, #0x7a6
  41dcb4:	ldr	x2, [sp, #40]
  41dcb8:	mov	w3, #0x26                  	// #38
  41dcbc:	ldr	x4, [sp, #32]
  41dcc0:	bl	405718 <log_assert_failed_realm@plt>
  41dcc4:	ldur	x8, [x29, #-104]
  41dcc8:	ldrb	w9, [x8, #2]
  41dccc:	cbnz	w9, 41dcec <forward_syslog_iovec+0xc4>
  41dcd0:	ldur	x8, [x29, #-104]
  41dcd4:	add	x0, x8, #0x3
  41dcd8:	mov	x1, #0x6b                  	// #107
  41dcdc:	bl	4061d8 <strnlen@plt>
  41dce0:	add	x8, x0, #0x1
  41dce4:	str	x8, [sp, #24]
  41dce8:	b	41dd04 <forward_syslog_iovec+0xdc>
  41dcec:	ldur	x8, [x29, #-104]
  41dcf0:	add	x0, x8, #0x2
  41dcf4:	mov	x1, #0x6c                  	// #108
  41dcf8:	bl	4061d8 <strnlen@plt>
  41dcfc:	add	x8, x0, #0x1
  41dd00:	str	x8, [sp, #24]
  41dd04:	ldr	x8, [sp, #24]
  41dd08:	add	x8, x8, #0x2
  41dd0c:	stur	x8, [x29, #-112]
  41dd10:	ldur	x8, [x29, #-112]
  41dd14:	stur	w8, [x29, #-88]
  41dd18:	sub	x9, x29, #0x60
  41dd1c:	ldur	x10, [x29, #-16]
  41dd20:	str	x10, [x9, #16]
  41dd24:	ldur	w8, [x29, #-20]
  41dd28:	mov	w10, w8
  41dd2c:	stur	x10, [x29, #-72]
  41dd30:	mov	x10, xzr
  41dd34:	str	x10, [x9, #32]
  41dd38:	stur	xzr, [x29, #-56]
  41dd3c:	stur	wzr, [x29, #-48]
  41dd40:	ldur	x8, [x29, #-8]
  41dd44:	cmp	x8, #0x0
  41dd48:	cset	w9, ne  // ne = any
  41dd4c:	mov	w10, #0x1                   	// #1
  41dd50:	eor	w9, w9, #0x1
  41dd54:	eor	w9, w9, w10
  41dd58:	eor	w9, w9, w10
  41dd5c:	and	w9, w9, #0x1
  41dd60:	mov	w0, w9
  41dd64:	sxtw	x8, w0
  41dd68:	cbz	x8, 41dd8c <forward_syslog_iovec+0x164>
  41dd6c:	mov	w8, wzr
  41dd70:	mov	w0, w8
  41dd74:	adrp	x1, 429000 <journal_ratelimit_group_free+0x70>
  41dd78:	add	x1, x1, #0xdc8
  41dd7c:	ldr	x2, [sp, #40]
  41dd80:	mov	w3, #0x2e                  	// #46
  41dd84:	ldr	x4, [sp, #32]
  41dd88:	bl	405718 <log_assert_failed_realm@plt>
  41dd8c:	ldur	x8, [x29, #-16]
  41dd90:	cmp	x8, #0x0
  41dd94:	cset	w9, ne  // ne = any
  41dd98:	mov	w10, #0x1                   	// #1
  41dd9c:	eor	w9, w9, #0x1
  41dda0:	eor	w9, w9, w10
  41dda4:	eor	w9, w9, w10
  41dda8:	and	w9, w9, #0x1
  41ddac:	mov	w0, w9
  41ddb0:	sxtw	x8, w0
  41ddb4:	cbz	x8, 41ddd8 <forward_syslog_iovec+0x1b0>
  41ddb8:	mov	w8, wzr
  41ddbc:	mov	w0, w8
  41ddc0:	adrp	x1, 42b000 <_fini+0x13a8>
  41ddc4:	add	x1, x1, #0x7eb
  41ddc8:	ldr	x2, [sp, #40]
  41ddcc:	mov	w3, #0x2f                  	// #47
  41ddd0:	ldr	x4, [sp, #32]
  41ddd4:	bl	405718 <log_assert_failed_realm@plt>
  41ddd8:	ldur	w8, [x29, #-20]
  41dddc:	cmp	w8, #0x0
  41dde0:	cset	w8, hi  // hi = pmore
  41dde4:	mov	w9, #0x1                   	// #1
  41dde8:	eor	w8, w8, #0x1
  41ddec:	eor	w8, w8, w9
  41ddf0:	eor	w8, w8, w9
  41ddf4:	and	w8, w8, #0x1
  41ddf8:	mov	w0, w8
  41ddfc:	sxtw	x10, w0
  41de00:	cbz	x10, 41de24 <forward_syslog_iovec+0x1fc>
  41de04:	mov	w8, wzr
  41de08:	mov	w0, w8
  41de0c:	adrp	x1, 42e000 <_fini+0x43a8>
  41de10:	add	x1, x1, #0x454
  41de14:	ldr	x2, [sp, #40]
  41de18:	mov	w3, #0x30                  	// #48
  41de1c:	ldr	x4, [sp, #32]
  41de20:	bl	405718 <log_assert_failed_realm@plt>
  41de24:	ldur	x8, [x29, #-32]
  41de28:	cbz	x8, 41dee0 <forward_syslog_iovec+0x2b8>
  41de2c:	mov	x8, #0x20                  	// #32
  41de30:	str	x8, [sp, #80]
  41de34:	ldr	x8, [sp, #80]
  41de38:	cmp	x8, #0x0
  41de3c:	cset	w9, ls  // ls = plast
  41de40:	tbnz	w9, #0, 41de58 <forward_syslog_iovec+0x230>
  41de44:	ldr	x2, [sp, #80]
  41de48:	add	x0, sp, #0x58
  41de4c:	mov	w8, wzr
  41de50:	mov	w1, w8
  41de54:	bl	405c28 <memset@plt>
  41de58:	sub	x8, x29, #0x60
  41de5c:	add	x9, sp, #0x58
  41de60:	str	x9, [x8, #32]
  41de64:	mov	x8, #0x20                  	// #32
  41de68:	stur	x8, [x29, #-56]
  41de6c:	ldur	x8, [x29, #-56]
  41de70:	cmp	x8, #0x10
  41de74:	b.cc	41de88 <forward_syslog_iovec+0x260>  // b.lo, b.ul, b.last
  41de78:	sub	x8, x29, #0x60
  41de7c:	ldr	x8, [x8, #32]
  41de80:	str	x8, [sp, #16]
  41de84:	b	41de90 <forward_syslog_iovec+0x268>
  41de88:	mov	x8, xzr
  41de8c:	str	x8, [sp, #16]
  41de90:	ldr	x8, [sp, #16]
  41de94:	str	x8, [sp, #120]
  41de98:	ldr	x8, [sp, #120]
  41de9c:	mov	w9, #0x1                   	// #1
  41dea0:	str	w9, [x8, #8]
  41dea4:	ldr	x8, [sp, #120]
  41dea8:	mov	w9, #0x2                   	// #2
  41deac:	str	w9, [x8, #12]
  41deb0:	ldr	x8, [sp, #120]
  41deb4:	mov	x10, #0x1c                  	// #28
  41deb8:	str	x10, [x8]
  41debc:	ldr	x8, [sp, #120]
  41dec0:	ldur	x10, [x29, #-32]
  41dec4:	ldr	x11, [x10]
  41dec8:	str	x11, [x8, #16]
  41decc:	ldr	w9, [x10, #8]
  41ded0:	str	w9, [x8, #24]
  41ded4:	ldr	x8, [sp, #120]
  41ded8:	ldr	x8, [x8]
  41dedc:	stur	x8, [x29, #-56]
  41dee0:	ldur	x8, [x29, #-8]
  41dee4:	ldr	w0, [x8]
  41dee8:	sub	x1, x29, #0x60
  41deec:	mov	w2, #0x4000                	// #16384
  41def0:	bl	406238 <sendmsg@plt>
  41def4:	cmp	x0, #0x0
  41def8:	cset	w9, lt  // lt = tstop
  41defc:	tbnz	w9, #0, 41df04 <forward_syslog_iovec+0x2dc>
  41df00:	b	41e094 <forward_syslog_iovec+0x46c>
  41df04:	bl	405768 <__errno_location@plt>
  41df08:	ldr	w8, [x0]
  41df0c:	cmp	w8, #0xb
  41df10:	b.ne	41df28 <forward_syslog_iovec+0x300>  // b.any
  41df14:	ldur	x8, [x29, #-8]
  41df18:	ldr	w9, [x8, #464]
  41df1c:	add	w9, w9, #0x1
  41df20:	str	w9, [x8, #464]
  41df24:	b	41e094 <forward_syslog_iovec+0x46c>
  41df28:	ldur	x8, [x29, #-32]
  41df2c:	cbz	x8, 41e004 <forward_syslog_iovec+0x3dc>
  41df30:	mov	w8, #0x0                   	// #0
  41df34:	strb	w8, [sp, #79]
  41df38:	bl	405768 <__errno_location@plt>
  41df3c:	ldr	w8, [x0]
  41df40:	cmp	w8, #0x1
  41df44:	str	w8, [sp, #12]
  41df48:	b.eq	41df68 <forward_syslog_iovec+0x340>  // b.none
  41df4c:	b	41df50 <forward_syslog_iovec+0x328>
  41df50:	ldr	w8, [sp, #12]
  41df54:	cmp	w8, #0x3
  41df58:	cset	w9, eq  // eq = none
  41df5c:	eor	w9, w9, #0x1
  41df60:	tbnz	w9, #0, 41df74 <forward_syslog_iovec+0x34c>
  41df64:	b	41df68 <forward_syslog_iovec+0x340>
  41df68:	mov	w8, #0x1                   	// #1
  41df6c:	strb	w8, [sp, #79]
  41df70:	b	41df74 <forward_syslog_iovec+0x34c>
  41df74:	ldrb	w8, [sp, #79]
  41df78:	and	w8, w8, #0x1
  41df7c:	strb	w8, [sp, #78]
  41df80:	ldrb	w8, [sp, #78]
  41df84:	tbnz	w8, #0, 41df8c <forward_syslog_iovec+0x364>
  41df88:	b	41e004 <forward_syslog_iovec+0x3dc>
  41df8c:	ldur	x8, [x29, #-32]
  41df90:	ldr	x9, [x8]
  41df94:	str	x9, [sp, #64]
  41df98:	ldr	w10, [x8, #8]
  41df9c:	str	w10, [sp, #72]
  41dfa0:	bl	4056d8 <getpid_cached@plt>
  41dfa4:	str	w0, [sp, #64]
  41dfa8:	ldr	x8, [sp, #120]
  41dfac:	ldr	x9, [sp, #64]
  41dfb0:	str	x9, [x8, #16]
  41dfb4:	ldr	w10, [sp, #72]
  41dfb8:	str	w10, [x8, #24]
  41dfbc:	ldur	x8, [x29, #-8]
  41dfc0:	ldr	w0, [x8]
  41dfc4:	sub	x1, x29, #0x60
  41dfc8:	mov	w2, #0x4000                	// #16384
  41dfcc:	bl	406238 <sendmsg@plt>
  41dfd0:	cmp	x0, #0x0
  41dfd4:	cset	w10, lt  // lt = tstop
  41dfd8:	tbnz	w10, #0, 41dfe0 <forward_syslog_iovec+0x3b8>
  41dfdc:	b	41e094 <forward_syslog_iovec+0x46c>
  41dfe0:	bl	405768 <__errno_location@plt>
  41dfe4:	ldr	w8, [x0]
  41dfe8:	cmp	w8, #0xb
  41dfec:	b.ne	41e004 <forward_syslog_iovec+0x3dc>  // b.any
  41dff0:	ldur	x8, [x29, #-8]
  41dff4:	ldr	w9, [x8, #464]
  41dff8:	add	w9, w9, #0x1
  41dffc:	str	w9, [x8, #464]
  41e000:	b	41e094 <forward_syslog_iovec+0x46c>
  41e004:	bl	405768 <__errno_location@plt>
  41e008:	ldr	w8, [x0]
  41e00c:	cmp	w8, #0x2
  41e010:	b.eq	41e094 <forward_syslog_iovec+0x46c>  // b.none
  41e014:	mov	w8, #0x7                   	// #7
  41e018:	str	w8, [sp, #60]
  41e01c:	bl	405768 <__errno_location@plt>
  41e020:	ldr	w8, [x0]
  41e024:	str	w8, [sp, #56]
  41e028:	str	wzr, [sp, #52]
  41e02c:	ldr	w0, [sp, #52]
  41e030:	bl	405638 <log_get_max_level_realm@plt>
  41e034:	ldr	w8, [sp, #60]
  41e038:	and	w8, w8, #0x7
  41e03c:	cmp	w0, w8
  41e040:	b.lt	41e078 <forward_syslog_iovec+0x450>  // b.tstop
  41e044:	ldr	w8, [sp, #52]
  41e048:	ldr	w9, [sp, #60]
  41e04c:	orr	w0, w9, w8, lsl #10
  41e050:	ldr	w1, [sp, #56]
  41e054:	ldr	x2, [sp, #40]
  41e058:	mov	w3, #0x62                  	// #98
  41e05c:	adrp	x4, 42e000 <_fini+0x43a8>
  41e060:	add	x4, x4, #0x460
  41e064:	adrp	x5, 42e000 <_fini+0x43a8>
  41e068:	add	x5, x5, #0x475
  41e06c:	bl	405648 <log_internal_realm@plt>
  41e070:	str	w0, [sp, #8]
  41e074:	b	41e08c <forward_syslog_iovec+0x464>
  41e078:	ldr	w0, [sp, #56]
  41e07c:	bl	405658 <abs@plt>
  41e080:	mov	w8, wzr
  41e084:	subs	w8, w8, w0, uxtb
  41e088:	str	w8, [sp, #8]
  41e08c:	ldr	w8, [sp, #8]
  41e090:	str	w8, [sp, #48]
  41e094:	ldp	x29, x30, [sp, #240]
  41e098:	add	sp, sp, #0x100
  41e09c:	ret

000000000041e0a0 <syslog_fixup_facility>:
  41e0a0:	sub	sp, sp, #0x10
  41e0a4:	str	w0, [sp, #8]
  41e0a8:	ldr	w8, [sp, #8]
  41e0ac:	and	w8, w8, #0x3f8
  41e0b0:	cbnz	w8, 41e0c8 <syslog_fixup_facility+0x28>
  41e0b4:	ldr	w8, [sp, #8]
  41e0b8:	and	w8, w8, #0x7
  41e0bc:	orr	w8, w8, #0x8
  41e0c0:	str	w8, [sp, #12]
  41e0c4:	b	41e0d0 <syslog_fixup_facility+0x30>
  41e0c8:	ldr	w8, [sp, #8]
  41e0cc:	str	w8, [sp, #12]
  41e0d0:	ldr	w0, [sp, #12]
  41e0d4:	add	sp, sp, #0x10
  41e0d8:	ret

000000000041e0dc <syslog_parse_identifier>:
  41e0dc:	sub	sp, sp, #0x70
  41e0e0:	stp	x29, x30, [sp, #96]
  41e0e4:	add	x29, sp, #0x60
  41e0e8:	adrp	x8, 42e000 <_fini+0x43a8>
  41e0ec:	add	x8, x8, #0x12b
  41e0f0:	adrp	x9, 42e000 <_fini+0x43a8>
  41e0f4:	add	x9, x9, #0x39
  41e0f8:	add	x9, x9, #0x3
  41e0fc:	adrp	x10, 42e000 <_fini+0x43a8>
  41e100:	add	x10, x10, #0xdc
  41e104:	stur	x0, [x29, #-16]
  41e108:	stur	x1, [x29, #-24]
  41e10c:	stur	x2, [x29, #-32]
  41e110:	str	x8, [sp, #16]
  41e114:	str	x9, [sp, #8]
  41e118:	str	x10, [sp]
  41e11c:	ldur	x8, [x29, #-16]
  41e120:	cmp	x8, #0x0
  41e124:	cset	w9, ne  // ne = any
  41e128:	mov	w10, #0x1                   	// #1
  41e12c:	eor	w9, w9, #0x1
  41e130:	eor	w9, w9, w10
  41e134:	eor	w9, w9, w10
  41e138:	and	w9, w9, #0x1
  41e13c:	mov	w0, w9
  41e140:	sxtw	x8, w0
  41e144:	cbz	x8, 41e168 <syslog_parse_identifier+0x8c>
  41e148:	mov	w8, wzr
  41e14c:	mov	w0, w8
  41e150:	adrp	x1, 42e000 <_fini+0x43a8>
  41e154:	add	x1, x1, #0xd8
  41e158:	ldr	x2, [sp, #8]
  41e15c:	mov	w3, #0xb4                  	// #180
  41e160:	ldr	x4, [sp]
  41e164:	bl	405718 <log_assert_failed_realm@plt>
  41e168:	ldur	x8, [x29, #-24]
  41e16c:	cmp	x8, #0x0
  41e170:	cset	w9, ne  // ne = any
  41e174:	mov	w10, #0x1                   	// #1
  41e178:	eor	w9, w9, #0x1
  41e17c:	eor	w9, w9, w10
  41e180:	eor	w9, w9, w10
  41e184:	and	w9, w9, #0x1
  41e188:	mov	w0, w9
  41e18c:	sxtw	x8, w0
  41e190:	cbz	x8, 41e1b4 <syslog_parse_identifier+0xd8>
  41e194:	mov	w8, wzr
  41e198:	mov	w0, w8
  41e19c:	adrp	x1, 42e000 <_fini+0x43a8>
  41e1a0:	add	x1, x1, #0x11c
  41e1a4:	ldr	x2, [sp, #8]
  41e1a8:	mov	w3, #0xb5                  	// #181
  41e1ac:	ldr	x4, [sp]
  41e1b0:	bl	405718 <log_assert_failed_realm@plt>
  41e1b4:	ldur	x8, [x29, #-32]
  41e1b8:	cmp	x8, #0x0
  41e1bc:	cset	w9, ne  // ne = any
  41e1c0:	mov	w10, #0x1                   	// #1
  41e1c4:	eor	w9, w9, #0x1
  41e1c8:	eor	w9, w9, w10
  41e1cc:	eor	w9, w9, w10
  41e1d0:	and	w9, w9, #0x1
  41e1d4:	mov	w0, w9
  41e1d8:	sxtw	x8, w0
  41e1dc:	cbz	x8, 41e200 <syslog_parse_identifier+0x124>
  41e1e0:	mov	w8, wzr
  41e1e4:	mov	w0, w8
  41e1e8:	adrp	x1, 42e000 <_fini+0x43a8>
  41e1ec:	add	x1, x1, #0x127
  41e1f0:	ldr	x2, [sp, #8]
  41e1f4:	mov	w3, #0xb6                  	// #182
  41e1f8:	ldr	x4, [sp]
  41e1fc:	bl	405718 <log_assert_failed_realm@plt>
  41e200:	ldur	x8, [x29, #-16]
  41e204:	ldr	x8, [x8]
  41e208:	stur	x8, [x29, #-40]
  41e20c:	ldur	x0, [x29, #-40]
  41e210:	ldr	x1, [sp, #16]
  41e214:	bl	406348 <strspn@plt>
  41e218:	ldur	x8, [x29, #-40]
  41e21c:	add	x8, x8, x0
  41e220:	stur	x8, [x29, #-40]
  41e224:	ldur	x0, [x29, #-40]
  41e228:	ldr	x1, [sp, #16]
  41e22c:	bl	406358 <strcspn@plt>
  41e230:	str	x0, [sp, #40]
  41e234:	ldr	x8, [sp, #40]
  41e238:	cmp	x8, #0x0
  41e23c:	cset	w9, ls  // ls = plast
  41e240:	tbnz	w9, #0, 41e25c <syslog_parse_identifier+0x180>
  41e244:	ldur	x8, [x29, #-40]
  41e248:	ldr	x9, [sp, #40]
  41e24c:	subs	x9, x9, #0x1
  41e250:	ldrb	w10, [x8, x9]
  41e254:	cmp	w10, #0x3a
  41e258:	b.eq	41e264 <syslog_parse_identifier+0x188>  // b.none
  41e25c:	stur	xzr, [x29, #-8]
  41e260:	b	41e3b4 <syslog_parse_identifier+0x2d8>
  41e264:	ldr	x8, [sp, #40]
  41e268:	str	x8, [sp, #32]
  41e26c:	ldr	x8, [sp, #40]
  41e270:	subs	x8, x8, #0x1
  41e274:	str	x8, [sp, #40]
  41e278:	ldr	x8, [sp, #40]
  41e27c:	cmp	x8, #0x0
  41e280:	cset	w9, ls  // ls = plast
  41e284:	tbnz	w9, #0, 41e324 <syslog_parse_identifier+0x248>
  41e288:	ldur	x8, [x29, #-40]
  41e28c:	ldr	x9, [sp, #40]
  41e290:	subs	x9, x9, #0x1
  41e294:	ldrb	w10, [x8, x9]
  41e298:	cmp	w10, #0x5d
  41e29c:	b.ne	41e324 <syslog_parse_identifier+0x248>  // b.any
  41e2a0:	ldr	x8, [sp, #40]
  41e2a4:	subs	x8, x8, #0x1
  41e2a8:	str	x8, [sp, #24]
  41e2ac:	ldur	x8, [x29, #-40]
  41e2b0:	ldr	x9, [sp, #24]
  41e2b4:	ldrb	w10, [x8, x9]
  41e2b8:	cmp	w10, #0x5b
  41e2bc:	b.ne	41e308 <syslog_parse_identifier+0x22c>  // b.any
  41e2c0:	ldur	x8, [x29, #-40]
  41e2c4:	ldr	x9, [sp, #24]
  41e2c8:	add	x8, x8, x9
  41e2cc:	add	x0, x8, #0x1
  41e2d0:	ldr	x8, [sp, #40]
  41e2d4:	ldr	x9, [sp, #24]
  41e2d8:	subs	x8, x8, x9
  41e2dc:	subs	x1, x8, #0x2
  41e2e0:	bl	405948 <strndup@plt>
  41e2e4:	str	x0, [sp, #48]
  41e2e8:	ldr	x8, [sp, #48]
  41e2ec:	cbz	x8, 41e2fc <syslog_parse_identifier+0x220>
  41e2f0:	ldr	x8, [sp, #48]
  41e2f4:	ldur	x9, [x29, #-32]
  41e2f8:	str	x8, [x9]
  41e2fc:	ldr	x8, [sp, #24]
  41e300:	str	x8, [sp, #40]
  41e304:	b	41e324 <syslog_parse_identifier+0x248>
  41e308:	ldr	x8, [sp, #24]
  41e30c:	cbnz	x8, 41e314 <syslog_parse_identifier+0x238>
  41e310:	b	41e324 <syslog_parse_identifier+0x248>
  41e314:	ldr	x8, [sp, #24]
  41e318:	subs	x8, x8, #0x1
  41e31c:	str	x8, [sp, #24]
  41e320:	b	41e2ac <syslog_parse_identifier+0x1d0>
  41e324:	ldur	x0, [x29, #-40]
  41e328:	ldr	x1, [sp, #40]
  41e32c:	bl	405948 <strndup@plt>
  41e330:	str	x0, [sp, #48]
  41e334:	ldr	x8, [sp, #48]
  41e338:	cbz	x8, 41e348 <syslog_parse_identifier+0x26c>
  41e33c:	ldr	x8, [sp, #48]
  41e340:	ldur	x9, [x29, #-24]
  41e344:	str	x8, [x9]
  41e348:	ldur	x8, [x29, #-40]
  41e34c:	ldr	x9, [sp, #32]
  41e350:	ldrb	w10, [x8, x9]
  41e354:	cbz	w10, 41e37c <syslog_parse_identifier+0x2a0>
  41e358:	ldur	x8, [x29, #-40]
  41e35c:	ldr	x9, [sp, #32]
  41e360:	ldrb	w1, [x8, x9]
  41e364:	ldr	x0, [sp, #16]
  41e368:	bl	406368 <strchr@plt>
  41e36c:	cbz	x0, 41e37c <syslog_parse_identifier+0x2a0>
  41e370:	ldr	x8, [sp, #32]
  41e374:	add	x8, x8, #0x1
  41e378:	str	x8, [sp, #32]
  41e37c:	ldur	x8, [x29, #-40]
  41e380:	ldur	x9, [x29, #-16]
  41e384:	ldr	x9, [x9]
  41e388:	subs	x8, x8, x9
  41e38c:	ldr	x9, [sp, #32]
  41e390:	add	x8, x8, x9
  41e394:	str	x8, [sp, #40]
  41e398:	ldur	x8, [x29, #-40]
  41e39c:	ldr	x9, [sp, #32]
  41e3a0:	add	x8, x8, x9
  41e3a4:	ldur	x9, [x29, #-16]
  41e3a8:	str	x8, [x9]
  41e3ac:	ldr	x8, [sp, #40]
  41e3b0:	stur	x8, [x29, #-8]
  41e3b4:	ldur	x0, [x29, #-8]
  41e3b8:	ldp	x29, x30, [sp, #96]
  41e3bc:	add	sp, sp, #0x70
  41e3c0:	ret

000000000041e3c4 <server_process_syslog_message>:
  41e3c4:	stp	x29, x30, [sp, #-32]!
  41e3c8:	stp	x28, x19, [sp, #16]
  41e3cc:	mov	x29, sp
  41e3d0:	sub	sp, sp, #0x2e0
  41e3d4:	mov	x19, sp
  41e3d8:	mov	x8, xzr
  41e3dc:	mov	w9, #0xe                   	// #14
  41e3e0:	adrp	x10, 42e000 <_fini+0x43a8>
  41e3e4:	add	x10, x10, #0x39
  41e3e8:	add	x10, x10, #0x3
  41e3ec:	adrp	x11, 42e000 <_fini+0x43a8>
  41e3f0:	add	x11, x11, #0x1d8
  41e3f4:	adrp	x12, 42b000 <_fini+0x13a8>
  41e3f8:	add	x12, x12, #0x8a1
  41e3fc:	adrp	x13, 42e000 <_fini+0x43a8>
  41e400:	add	x13, x13, #0x130
  41e404:	adrp	x14, 42b000 <_fini+0x13a8>
  41e408:	add	x14, x14, #0x876
  41e40c:	stur	x0, [x29, #-8]
  41e410:	stur	x1, [x29, #-16]
  41e414:	stur	x2, [x29, #-24]
  41e418:	stur	x3, [x29, #-32]
  41e41c:	stur	x4, [x29, #-40]
  41e420:	stur	x5, [x29, #-48]
  41e424:	stur	x6, [x29, #-56]
  41e428:	stur	x8, [x29, #-152]
  41e42c:	stur	x8, [x29, #-160]
  41e430:	stur	x8, [x29, #-168]
  41e434:	stur	x8, [x29, #-176]
  41e438:	stur	x8, [x29, #-184]
  41e43c:	stur	w9, [x29, #-188]
  41e440:	stur	x8, [x29, #-200]
  41e444:	stur	xzr, [x29, #-216]
  41e448:	str	x10, [x19, #136]
  41e44c:	str	x11, [x19, #128]
  41e450:	str	x12, [x19, #120]
  41e454:	str	x13, [x19, #112]
  41e458:	str	x14, [x19, #104]
  41e45c:	ldur	x8, [x29, #-8]
  41e460:	cmp	x8, #0x0
  41e464:	cset	w9, ne  // ne = any
  41e468:	mov	w10, #0x1                   	// #1
  41e46c:	eor	w9, w9, #0x1
  41e470:	eor	w9, w9, w10
  41e474:	eor	w9, w9, w10
  41e478:	and	w9, w9, #0x1
  41e47c:	mov	w0, w9
  41e480:	sxtw	x8, w0
  41e484:	cbz	x8, 41e4a8 <server_process_syslog_message+0xe4>
  41e488:	mov	w8, wzr
  41e48c:	mov	w0, w8
  41e490:	adrp	x1, 429000 <journal_ratelimit_group_free+0x70>
  41e494:	add	x1, x1, #0xdc8
  41e498:	ldr	x2, [x19, #136]
  41e49c:	mov	w3, #0x13e                 	// #318
  41e4a0:	ldr	x4, [x19, #112]
  41e4a4:	bl	405718 <log_assert_failed_realm@plt>
  41e4a8:	ldur	x8, [x29, #-16]
  41e4ac:	cmp	x8, #0x0
  41e4b0:	cset	w9, ne  // ne = any
  41e4b4:	mov	w10, #0x1                   	// #1
  41e4b8:	eor	w9, w9, #0x1
  41e4bc:	eor	w9, w9, w10
  41e4c0:	eor	w9, w9, w10
  41e4c4:	and	w9, w9, #0x1
  41e4c8:	mov	w0, w9
  41e4cc:	sxtw	x8, w0
  41e4d0:	cbz	x8, 41e4f4 <server_process_syslog_message+0x130>
  41e4d4:	mov	w8, wzr
  41e4d8:	mov	w0, w8
  41e4dc:	adrp	x1, 42e000 <_fini+0x43a8>
  41e4e0:	add	x1, x1, #0xd8
  41e4e4:	ldr	x2, [x19, #136]
  41e4e8:	mov	w3, #0x13f                 	// #319
  41e4ec:	ldr	x4, [x19, #112]
  41e4f0:	bl	405718 <log_assert_failed_realm@plt>
  41e4f4:	ldur	x8, [x29, #-24]
  41e4f8:	cmp	x8, #0x0
  41e4fc:	cset	w9, hi  // hi = pmore
  41e500:	mov	w10, #0x1                   	// #1
  41e504:	eor	w9, w9, #0x1
  41e508:	eor	w9, w9, w10
  41e50c:	eor	w9, w9, w10
  41e510:	and	w9, w9, #0x1
  41e514:	mov	w0, w9
  41e518:	sxtw	x8, w0
  41e51c:	cbz	x8, 41e540 <server_process_syslog_message+0x17c>
  41e520:	mov	w8, wzr
  41e524:	mov	w0, w8
  41e528:	adrp	x1, 42e000 <_fini+0x43a8>
  41e52c:	add	x1, x1, #0x1b7
  41e530:	ldr	x2, [x19, #136]
  41e534:	mov	w3, #0x141                 	// #321
  41e538:	ldr	x4, [x19, #112]
  41e53c:	bl	405718 <log_assert_failed_realm@plt>
  41e540:	ldur	x8, [x29, #-16]
  41e544:	ldur	x9, [x29, #-24]
  41e548:	ldrb	w10, [x8, x9]
  41e54c:	cmp	w10, #0x0
  41e550:	cset	w10, eq  // eq = none
  41e554:	mov	w11, #0x1                   	// #1
  41e558:	eor	w10, w10, #0x1
  41e55c:	eor	w10, w10, w11
  41e560:	eor	w10, w10, w11
  41e564:	and	w10, w10, #0x1
  41e568:	mov	w0, w10
  41e56c:	sxtw	x8, w0
  41e570:	cbz	x8, 41e594 <server_process_syslog_message+0x1d0>
  41e574:	mov	w8, wzr
  41e578:	mov	w0, w8
  41e57c:	adrp	x1, 42e000 <_fini+0x43a8>
  41e580:	add	x1, x1, #0x1c3
  41e584:	ldr	x2, [x19, #136]
  41e588:	mov	w3, #0x144                 	// #324
  41e58c:	ldr	x4, [x19, #112]
  41e590:	bl	405718 <log_assert_failed_realm@plt>
  41e594:	ldur	x8, [x29, #-32]
  41e598:	cbz	x8, 41e66c <server_process_syslog_message+0x2a8>
  41e59c:	ldur	x8, [x29, #-32]
  41e5a0:	ldr	w0, [x8]
  41e5a4:	bl	41f2f0 <pid_is_valid>
  41e5a8:	tbnz	w0, #0, 41e5b0 <server_process_syslog_message+0x1ec>
  41e5ac:	b	41e66c <server_process_syslog_message+0x2a8>
  41e5b0:	ldur	x0, [x29, #-8]
  41e5b4:	ldur	x8, [x29, #-32]
  41e5b8:	ldr	w1, [x8]
  41e5bc:	ldur	x2, [x29, #-32]
  41e5c0:	ldur	x3, [x29, #-48]
  41e5c4:	ldur	x4, [x29, #-56]
  41e5c8:	mov	x8, xzr
  41e5cc:	mov	x5, x8
  41e5d0:	sub	x6, x29, #0xc8
  41e5d4:	bl	4240bc <client_context_get>
  41e5d8:	stur	w0, [x29, #-192]
  41e5dc:	ldur	w9, [x29, #-192]
  41e5e0:	cmp	w9, #0x0
  41e5e4:	cset	w9, ge  // ge = tcont
  41e5e8:	tbnz	w9, #0, 41e66c <server_process_syslog_message+0x2a8>
  41e5ec:	mov	w8, #0x4                   	// #4
  41e5f0:	stur	w8, [x29, #-256]
  41e5f4:	ldur	w8, [x29, #-192]
  41e5f8:	str	w8, [x19, #476]
  41e5fc:	str	wzr, [x19, #472]
  41e600:	ldr	w0, [x19, #472]
  41e604:	bl	405638 <log_get_max_level_realm@plt>
  41e608:	ldur	w8, [x29, #-256]
  41e60c:	and	w8, w8, #0x7
  41e610:	cmp	w0, w8
  41e614:	b.lt	41e650 <server_process_syslog_message+0x28c>  // b.tstop
  41e618:	ldr	w8, [x19, #472]
  41e61c:	ldur	w9, [x29, #-256]
  41e620:	orr	w0, w9, w8, lsl #10
  41e624:	ldr	w1, [x19, #476]
  41e628:	ldur	x10, [x29, #-32]
  41e62c:	ldr	w6, [x10]
  41e630:	ldr	x2, [x19, #136]
  41e634:	mov	w3, #0x149                 	// #329
  41e638:	ldr	x4, [x19, #128]
  41e63c:	adrp	x5, 42e000 <_fini+0x43a8>
  41e640:	add	x5, x5, #0x1f6
  41e644:	bl	405648 <log_internal_realm@plt>
  41e648:	str	w0, [x19, #100]
  41e64c:	b	41e664 <server_process_syslog_message+0x2a0>
  41e650:	ldr	w0, [x19, #476]
  41e654:	bl	405658 <abs@plt>
  41e658:	mov	w8, wzr
  41e65c:	subs	w8, w8, w0, uxtb
  41e660:	str	w8, [x19, #100]
  41e664:	ldr	w8, [x19, #100]
  41e668:	str	w8, [x19, #468]
  41e66c:	ldur	x8, [x29, #-24]
  41e670:	stur	x8, [x29, #-232]
  41e674:	ldur	x8, [x29, #-232]
  41e678:	cmp	x8, #0x0
  41e67c:	cset	w9, ls  // ls = plast
  41e680:	tbnz	w9, #0, 41e6b8 <server_process_syslog_message+0x2f4>
  41e684:	ldur	x8, [x29, #-16]
  41e688:	ldur	x9, [x29, #-232]
  41e68c:	subs	x9, x9, #0x1
  41e690:	ldrb	w1, [x8, x9]
  41e694:	adrp	x0, 42e000 <_fini+0x43a8>
  41e698:	add	x0, x0, #0x12b
  41e69c:	bl	406368 <strchr@plt>
  41e6a0:	cbnz	x0, 41e6a8 <server_process_syslog_message+0x2e4>
  41e6a4:	b	41e6b8 <server_process_syslog_message+0x2f4>
  41e6a8:	ldur	x8, [x29, #-232]
  41e6ac:	subs	x8, x8, #0x1
  41e6b0:	stur	x8, [x29, #-232]
  41e6b4:	b	41e674 <server_process_syslog_message+0x2b0>
  41e6b8:	ldur	x0, [x29, #-16]
  41e6bc:	adrp	x1, 42e000 <_fini+0x43a8>
  41e6c0:	add	x1, x1, #0x12b
  41e6c4:	bl	406348 <strspn@plt>
  41e6c8:	stur	x0, [x29, #-240]
  41e6cc:	ldur	x8, [x29, #-232]
  41e6d0:	cbnz	x8, 41e6e8 <server_process_syslog_message+0x324>
  41e6d4:	ldur	x8, [x29, #-16]
  41e6d8:	ldur	x9, [x29, #-24]
  41e6dc:	add	x8, x8, x9
  41e6e0:	stur	x8, [x29, #-128]
  41e6e4:	b	41e794 <server_process_syslog_message+0x3d0>
  41e6e8:	ldur	x8, [x29, #-232]
  41e6ec:	ldur	x9, [x29, #-24]
  41e6f0:	cmp	x8, x9
  41e6f4:	b.ne	41e70c <server_process_syslog_message+0x348>  // b.any
  41e6f8:	ldur	x8, [x29, #-16]
  41e6fc:	ldur	x9, [x29, #-240]
  41e700:	add	x8, x8, x9
  41e704:	stur	x8, [x29, #-128]
  41e708:	b	41e794 <server_process_syslog_message+0x3d0>
  41e70c:	ldur	x8, [x29, #-232]
  41e710:	ldur	x9, [x29, #-240]
  41e714:	subs	x8, x8, x9
  41e718:	mov	x0, #0x1                   	// #1
  41e71c:	add	x1, x8, #0x1
  41e720:	bl	41f310 <malloc_multiply>
  41e724:	stur	x0, [x29, #-168]
  41e728:	stur	x0, [x29, #-128]
  41e72c:	ldur	x8, [x29, #-168]
  41e730:	cbnz	x8, 41e758 <server_process_syslog_message+0x394>
  41e734:	mov	w8, wzr
  41e738:	mov	w0, w8
  41e73c:	ldr	x1, [x19, #136]
  41e740:	mov	w2, #0x15d                 	// #349
  41e744:	ldr	x3, [x19, #128]
  41e748:	bl	405958 <log_oom_internal@plt>
  41e74c:	mov	w8, #0x1                   	// #1
  41e750:	str	w8, [x19, #464]
  41e754:	b	41f2b8 <server_process_syslog_message+0xef4>
  41e758:	ldur	x0, [x29, #-168]
  41e75c:	ldur	x8, [x29, #-16]
  41e760:	ldur	x9, [x29, #-240]
  41e764:	add	x1, x8, x9
  41e768:	ldur	x8, [x29, #-232]
  41e76c:	ldur	x9, [x29, #-240]
  41e770:	subs	x2, x8, x9
  41e774:	bl	405af8 <memcpy@plt>
  41e778:	ldur	x8, [x29, #-168]
  41e77c:	ldur	x9, [x29, #-232]
  41e780:	ldur	x10, [x29, #-240]
  41e784:	subs	x9, x9, x10
  41e788:	add	x8, x8, x9
  41e78c:	mov	w11, #0x0                   	// #0
  41e790:	strb	w11, [x8]
  41e794:	ldur	x8, [x29, #-128]
  41e798:	ldur	x9, [x29, #-16]
  41e79c:	mov	w10, #0x1                   	// #1
  41e7a0:	cmp	x8, x9
  41e7a4:	str	w10, [x19, #96]
  41e7a8:	b.ne	41e7c4 <server_process_syslog_message+0x400>  // b.any
  41e7ac:	ldur	x0, [x29, #-128]
  41e7b0:	bl	405738 <strlen@plt>
  41e7b4:	ldur	x8, [x29, #-24]
  41e7b8:	cmp	x0, x8
  41e7bc:	cset	w9, ne  // ne = any
  41e7c0:	str	w9, [x19, #96]
  41e7c4:	ldr	w8, [x19, #96]
  41e7c8:	mov	w9, #0x1                   	// #1
  41e7cc:	and	w8, w8, w9
  41e7d0:	sturb	w8, [x29, #-249]
  41e7d4:	sub	x0, x29, #0x80
  41e7d8:	sub	x1, x29, #0xbc
  41e7dc:	and	w2, w9, #0x1
  41e7e0:	bl	4062e8 <syslog_parse_priority@plt>
  41e7e4:	ldur	x10, [x29, #-200]
  41e7e8:	ldur	w1, [x29, #-188]
  41e7ec:	mov	x0, x10
  41e7f0:	bl	41f38c <client_context_test_priority>
  41e7f4:	tbnz	w0, #0, 41e804 <server_process_syslog_message+0x440>
  41e7f8:	mov	w8, #0x1                   	// #1
  41e7fc:	str	w8, [x19, #464]
  41e800:	b	41f2b8 <server_process_syslog_message+0xef4>
  41e804:	sub	x0, x29, #0x80
  41e808:	ldur	x8, [x29, #-128]
  41e80c:	stur	x8, [x29, #-136]
  41e810:	bl	41f404 <syslog_skip_timestamp>
  41e814:	mov	w1, w0
  41e818:	sxtw	x8, w1
  41e81c:	stur	x8, [x29, #-248]
  41e820:	ldur	x8, [x29, #-248]
  41e824:	cbnz	x8, 41e830 <server_process_syslog_message+0x46c>
  41e828:	mov	w8, #0x1                   	// #1
  41e82c:	sturb	w8, [x29, #-249]
  41e830:	sub	x0, x29, #0x80
  41e834:	sub	x1, x29, #0x98
  41e838:	sub	x2, x29, #0xa0
  41e83c:	bl	41e0dc <syslog_parse_identifier>
  41e840:	ldur	x8, [x29, #-8]
  41e844:	ldrb	w9, [x8, #459]
  41e848:	tbnz	w9, #0, 41e850 <server_process_syslog_message+0x48c>
  41e84c:	b	41e86c <server_process_syslog_message+0x4a8>
  41e850:	ldur	x0, [x29, #-8]
  41e854:	ldur	w1, [x29, #-188]
  41e858:	ldur	x2, [x29, #-16]
  41e85c:	ldur	x3, [x29, #-24]
  41e860:	ldur	x4, [x29, #-32]
  41e864:	ldur	x5, [x29, #-40]
  41e868:	bl	41f668 <forward_syslog_raw>
  41e86c:	ldur	x8, [x29, #-8]
  41e870:	ldrb	w9, [x8, #458]
  41e874:	tbnz	w9, #0, 41e87c <server_process_syslog_message+0x4b8>
  41e878:	b	41e894 <server_process_syslog_message+0x4d0>
  41e87c:	ldur	x0, [x29, #-8]
  41e880:	ldur	w1, [x29, #-188]
  41e884:	ldur	x2, [x29, #-152]
  41e888:	ldur	x3, [x29, #-128]
  41e88c:	ldur	x4, [x29, #-32]
  41e890:	bl	406e60 <server_forward_kmsg>
  41e894:	ldur	x8, [x29, #-8]
  41e898:	ldrb	w9, [x8, #460]
  41e89c:	tbnz	w9, #0, 41e8a4 <server_process_syslog_message+0x4e0>
  41e8a0:	b	41e8bc <server_process_syslog_message+0x4f8>
  41e8a4:	ldur	x0, [x29, #-8]
  41e8a8:	ldur	w1, [x29, #-188]
  41e8ac:	ldur	x2, [x29, #-152]
  41e8b0:	ldur	x3, [x29, #-128]
  41e8b4:	ldur	x4, [x29, #-32]
  41e8b8:	bl	422c20 <server_forward_console>
  41e8bc:	ldur	x8, [x29, #-8]
  41e8c0:	ldrb	w9, [x8, #461]
  41e8c4:	tbnz	w9, #0, 41e8cc <server_process_syslog_message+0x508>
  41e8c8:	b	41e8e4 <server_process_syslog_message+0x520>
  41e8cc:	ldur	x0, [x29, #-8]
  41e8d0:	ldur	w1, [x29, #-188]
  41e8d4:	ldur	x2, [x29, #-152]
  41e8d8:	ldur	x3, [x29, #-128]
  41e8dc:	ldur	x4, [x29, #-32]
  41e8e0:	bl	41ff8c <server_forward_wall>
  41e8e4:	ldur	x0, [x29, #-200]
  41e8e8:	bl	41f794 <client_context_extra_fields_n_iovec>
  41e8ec:	add	x8, x0, #0x1e
  41e8f0:	stur	x8, [x29, #-224]
  41e8f4:	ldur	x8, [x29, #-224]
  41e8f8:	str	x8, [x19, #456]
  41e8fc:	ldr	x1, [x19, #456]
  41e900:	mov	x0, #0x10                  	// #16
  41e904:	bl	41f7cc <size_multiply_overflow>
  41e908:	mov	w8, #0x1                   	// #1
  41e90c:	eor	w9, w0, #0x1
  41e910:	eor	w9, w9, w8
  41e914:	eor	w9, w9, w8
  41e918:	eor	w8, w9, w8
  41e91c:	and	w8, w8, #0x1
  41e920:	mov	w1, w8
  41e924:	sxtw	x10, w1
  41e928:	cbz	x10, 41e94c <server_process_syslog_message+0x588>
  41e92c:	mov	w8, wzr
  41e930:	mov	w0, w8
  41e934:	adrp	x1, 42a000 <_fini+0x3a8>
  41e938:	add	x1, x1, #0x830
  41e93c:	ldr	x2, [x19, #136]
  41e940:	mov	w3, #0x183                 	// #387
  41e944:	ldr	x4, [x19, #112]
  41e948:	bl	405718 <log_assert_failed_realm@plt>
  41e94c:	ldr	x8, [x19, #456]
  41e950:	mov	x9, #0x10                  	// #16
  41e954:	mul	x8, x9, x8
  41e958:	cmp	x8, #0x400, lsl #12
  41e95c:	cset	w10, ls  // ls = plast
  41e960:	mov	w11, #0x1                   	// #1
  41e964:	eor	w10, w10, #0x1
  41e968:	eor	w10, w10, w11
  41e96c:	eor	w10, w10, w11
  41e970:	and	w10, w10, #0x1
  41e974:	mov	w0, w10
  41e978:	sxtw	x8, w0
  41e97c:	cbz	x8, 41e9a0 <server_process_syslog_message+0x5dc>
  41e980:	mov	w8, wzr
  41e984:	mov	w0, w8
  41e988:	adrp	x1, 42a000 <_fini+0x3a8>
  41e98c:	add	x1, x1, #0x863
  41e990:	ldr	x2, [x19, #136]
  41e994:	mov	w3, #0x183                 	// #387
  41e998:	ldr	x4, [x19, #112]
  41e99c:	bl	405718 <log_assert_failed_realm@plt>
  41e9a0:	ldr	x8, [x19, #456]
  41e9a4:	mov	x9, #0x10                  	// #16
  41e9a8:	mul	x8, x9, x8
  41e9ac:	mov	x9, #0x1                   	// #1
  41e9b0:	mul	x8, x8, x9
  41e9b4:	add	x8, x8, #0xf
  41e9b8:	and	x8, x8, #0xfffffffffffffff0
  41e9bc:	mov	x9, sp
  41e9c0:	subs	x8, x9, x8
  41e9c4:	mov	sp, x8
  41e9c8:	str	x8, [x19, #448]
  41e9cc:	ldr	x8, [x19, #448]
  41e9d0:	stur	x8, [x29, #-208]
  41e9d4:	ldur	x8, [x29, #-208]
  41e9d8:	ldur	x9, [x29, #-216]
  41e9dc:	add	x10, x9, #0x1
  41e9e0:	stur	x10, [x29, #-216]
  41e9e4:	adrp	x10, 42e000 <_fini+0x43a8>
  41e9e8:	add	x10, x10, #0x22e
  41e9ec:	str	x10, [x19, #432]
  41e9f0:	mov	x10, #0x11                  	// #17
  41e9f4:	str	x10, [x19, #440]
  41e9f8:	ldr	q0, [x19, #432]
  41e9fc:	str	q0, [x8, x9, lsl #4]
  41ea00:	ldur	w8, [x29, #-188]
  41ea04:	and	w3, w8, #0x7
  41ea08:	sub	x0, x29, #0x56
  41ea0c:	mov	x1, #0x16                  	// #22
  41ea10:	adrp	x2, 42a000 <_fini+0x3a8>
  41ea14:	add	x2, x2, #0xd
  41ea18:	bl	405728 <snprintf@plt>
  41ea1c:	mov	w1, w0
  41ea20:	sxtw	x9, w1
  41ea24:	cmp	x9, #0x16
  41ea28:	cset	w8, cc  // cc = lo, ul, last
  41ea2c:	mov	w10, #0x1                   	// #1
  41ea30:	eor	w8, w8, #0x1
  41ea34:	eor	w8, w8, w10
  41ea38:	eor	w8, w8, w10
  41ea3c:	and	w8, w8, #0x1
  41ea40:	mov	w1, w8
  41ea44:	sxtw	x9, w1
  41ea48:	cbz	x9, 41ea6c <server_process_syslog_message+0x6a8>
  41ea4c:	mov	w8, wzr
  41ea50:	mov	w0, w8
  41ea54:	adrp	x1, 42e000 <_fini+0x43a8>
  41ea58:	add	x1, x1, #0x240
  41ea5c:	ldr	x2, [x19, #136]
  41ea60:	mov	w3, #0x187                 	// #391
  41ea64:	ldr	x4, [x19, #112]
  41ea68:	bl	405718 <log_assert_failed_realm@plt>
  41ea6c:	ldur	x8, [x29, #-208]
  41ea70:	ldur	x9, [x29, #-216]
  41ea74:	add	x10, x9, #0x1
  41ea78:	stur	x10, [x29, #-216]
  41ea7c:	sub	x10, x29, #0x56
  41ea80:	str	x10, [x19, #416]
  41ea84:	mov	x0, x10
  41ea88:	str	x8, [x19, #88]
  41ea8c:	str	x9, [x19, #80]
  41ea90:	bl	405738 <strlen@plt>
  41ea94:	str	x0, [x19, #424]
  41ea98:	ldr	q0, [x19, #416]
  41ea9c:	ldr	x8, [x19, #88]
  41eaa0:	ldr	x9, [x19, #80]
  41eaa4:	str	q0, [x8, x9, lsl #4]
  41eaa8:	ldur	w11, [x29, #-188]
  41eaac:	and	w11, w11, #0x3f8
  41eab0:	cbz	w11, 41eb60 <server_process_syslog_message+0x79c>
  41eab4:	ldur	w8, [x29, #-188]
  41eab8:	and	w8, w8, #0x3f8
  41eabc:	asr	w3, w8, #3
  41eac0:	sub	x0, x29, #0x73
  41eac4:	mov	x1, #0x1d                  	// #29
  41eac8:	adrp	x2, 42a000 <_fini+0x3a8>
  41eacc:	add	x2, x2, #0x19
  41ead0:	bl	405728 <snprintf@plt>
  41ead4:	mov	w1, w0
  41ead8:	sxtw	x9, w1
  41eadc:	cmp	x9, #0x1d
  41eae0:	cset	w8, cc  // cc = lo, ul, last
  41eae4:	mov	w10, #0x1                   	// #1
  41eae8:	eor	w8, w8, #0x1
  41eaec:	eor	w8, w8, w10
  41eaf0:	eor	w8, w8, w10
  41eaf4:	and	w8, w8, #0x1
  41eaf8:	mov	w1, w8
  41eafc:	sxtw	x9, w1
  41eb00:	cbz	x9, 41eb24 <server_process_syslog_message+0x760>
  41eb04:	mov	w8, wzr
  41eb08:	mov	w0, w8
  41eb0c:	adrp	x1, 42d000 <_fini+0x33a8>
  41eb10:	add	x1, x1, #0xda5
  41eb14:	ldr	x2, [x19, #136]
  41eb18:	mov	w3, #0x18b                 	// #395
  41eb1c:	ldr	x4, [x19, #112]
  41eb20:	bl	405718 <log_assert_failed_realm@plt>
  41eb24:	ldur	x8, [x29, #-208]
  41eb28:	ldur	x9, [x29, #-216]
  41eb2c:	add	x10, x9, #0x1
  41eb30:	stur	x10, [x29, #-216]
  41eb34:	sub	x10, x29, #0x73
  41eb38:	str	x10, [x19, #400]
  41eb3c:	mov	x0, x10
  41eb40:	str	x8, [x19, #72]
  41eb44:	str	x9, [x19, #64]
  41eb48:	bl	405738 <strlen@plt>
  41eb4c:	str	x0, [x19, #408]
  41eb50:	ldr	q0, [x19, #400]
  41eb54:	ldr	x8, [x19, #72]
  41eb58:	ldr	x9, [x19, #64]
  41eb5c:	str	q0, [x8, x9, lsl #4]
  41eb60:	ldur	x8, [x29, #-152]
  41eb64:	cbz	x8, 41edb8 <server_process_syslog_message+0x9f4>
  41eb68:	add	x8, x19, #0x180
  41eb6c:	adrp	x9, 42a000 <_fini+0x3a8>
  41eb70:	add	x9, x9, #0x45
  41eb74:	str	x9, [x19, #384]
  41eb78:	ldur	x9, [x29, #-152]
  41eb7c:	str	x9, [x8, #8]
  41eb80:	str	xzr, [x19, #360]
  41eb84:	str	xzr, [x19, #352]
  41eb88:	ldr	x8, [x19, #352]
  41eb8c:	mov	w9, #0x0                   	// #0
  41eb90:	cmp	x8, #0x2
  41eb94:	str	w9, [x19, #60]
  41eb98:	b.cs	41ebc0 <server_process_syslog_message+0x7fc>  // b.hs, b.nlast
  41eb9c:	ldr	x8, [x19, #352]
  41eba0:	mov	x9, #0x8                   	// #8
  41eba4:	mul	x8, x9, x8
  41eba8:	add	x9, x19, #0x180
  41ebac:	add	x8, x9, x8
  41ebb0:	ldr	x8, [x8]
  41ebb4:	cmp	x8, #0x0
  41ebb8:	cset	w10, ne  // ne = any
  41ebbc:	str	w10, [x19, #60]
  41ebc0:	ldr	w8, [x19, #60]
  41ebc4:	tbnz	w8, #0, 41ebcc <server_process_syslog_message+0x808>
  41ebc8:	b	41ec04 <server_process_syslog_message+0x840>
  41ebcc:	ldr	x8, [x19, #352]
  41ebd0:	mov	x9, #0x8                   	// #8
  41ebd4:	mul	x8, x9, x8
  41ebd8:	add	x9, x19, #0x180
  41ebdc:	add	x8, x9, x8
  41ebe0:	ldr	x0, [x8]
  41ebe4:	bl	405738 <strlen@plt>
  41ebe8:	ldr	x8, [x19, #360]
  41ebec:	add	x8, x8, x0
  41ebf0:	str	x8, [x19, #360]
  41ebf4:	ldr	x8, [x19, #352]
  41ebf8:	add	x8, x8, #0x1
  41ebfc:	str	x8, [x19, #352]
  41ec00:	b	41eb88 <server_process_syslog_message+0x7c4>
  41ec04:	ldr	x8, [x19, #360]
  41ec08:	add	x8, x8, #0x1
  41ec0c:	str	x8, [x19, #344]
  41ec10:	ldr	x1, [x19, #344]
  41ec14:	mov	x0, #0x1                   	// #1
  41ec18:	bl	41f7cc <size_multiply_overflow>
  41ec1c:	mov	w8, #0x1                   	// #1
  41ec20:	eor	w9, w0, #0x1
  41ec24:	eor	w9, w9, w8
  41ec28:	eor	w9, w9, w8
  41ec2c:	eor	w8, w9, w8
  41ec30:	and	w8, w8, #0x1
  41ec34:	mov	w1, w8
  41ec38:	sxtw	x10, w1
  41ec3c:	cbz	x10, 41ec5c <server_process_syslog_message+0x898>
  41ec40:	mov	w8, wzr
  41ec44:	mov	w0, w8
  41ec48:	ldr	x1, [x19, #104]
  41ec4c:	ldr	x2, [x19, #136]
  41ec50:	mov	w3, #0x190                 	// #400
  41ec54:	ldr	x4, [x19, #112]
  41ec58:	bl	405718 <log_assert_failed_realm@plt>
  41ec5c:	ldr	x8, [x19, #344]
  41ec60:	mov	x9, #0x1                   	// #1
  41ec64:	mul	x8, x9, x8
  41ec68:	cmp	x8, #0x400, lsl #12
  41ec6c:	cset	w10, ls  // ls = plast
  41ec70:	mov	w11, #0x1                   	// #1
  41ec74:	eor	w10, w10, #0x1
  41ec78:	eor	w10, w10, w11
  41ec7c:	eor	w10, w10, w11
  41ec80:	and	w10, w10, #0x1
  41ec84:	mov	w0, w10
  41ec88:	sxtw	x8, w0
  41ec8c:	cbz	x8, 41ecac <server_process_syslog_message+0x8e8>
  41ec90:	mov	w8, wzr
  41ec94:	mov	w0, w8
  41ec98:	ldr	x1, [x19, #120]
  41ec9c:	ldr	x2, [x19, #136]
  41eca0:	mov	w3, #0x190                 	// #400
  41eca4:	ldr	x4, [x19, #112]
  41eca8:	bl	405718 <log_assert_failed_realm@plt>
  41ecac:	ldr	x8, [x19, #344]
  41ecb0:	mov	x9, #0x1                   	// #1
  41ecb4:	mul	x8, x9, x8
  41ecb8:	mul	x8, x8, x9
  41ecbc:	add	x8, x8, #0xf
  41ecc0:	and	x8, x8, #0xfffffffffffffff0
  41ecc4:	mov	x9, sp
  41ecc8:	subs	x8, x9, x8
  41eccc:	mov	sp, x8
  41ecd0:	str	x8, [x19, #336]
  41ecd4:	ldr	x8, [x19, #336]
  41ecd8:	str	x8, [x19, #376]
  41ecdc:	str	x8, [x19, #368]
  41ece0:	str	xzr, [x19, #352]
  41ece4:	ldr	x8, [x19, #352]
  41ece8:	mov	w9, #0x0                   	// #0
  41ecec:	cmp	x8, #0x2
  41ecf0:	str	w9, [x19, #56]
  41ecf4:	b.cs	41ed1c <server_process_syslog_message+0x958>  // b.hs, b.nlast
  41ecf8:	ldr	x8, [x19, #352]
  41ecfc:	mov	x9, #0x8                   	// #8
  41ed00:	mul	x8, x9, x8
  41ed04:	add	x9, x19, #0x180
  41ed08:	add	x8, x9, x8
  41ed0c:	ldr	x8, [x8]
  41ed10:	cmp	x8, #0x0
  41ed14:	cset	w10, ne  // ne = any
  41ed18:	str	w10, [x19, #56]
  41ed1c:	ldr	w8, [x19, #56]
  41ed20:	tbnz	w8, #0, 41ed28 <server_process_syslog_message+0x964>
  41ed24:	b	41ed5c <server_process_syslog_message+0x998>
  41ed28:	ldr	x0, [x19, #368]
  41ed2c:	ldr	x8, [x19, #352]
  41ed30:	mov	x9, #0x8                   	// #8
  41ed34:	mul	x8, x9, x8
  41ed38:	add	x9, x19, #0x180
  41ed3c:	add	x8, x9, x8
  41ed40:	ldr	x1, [x8]
  41ed44:	bl	405ad8 <stpcpy@plt>
  41ed48:	str	x0, [x19, #368]
  41ed4c:	ldr	x8, [x19, #352]
  41ed50:	add	x8, x8, #0x1
  41ed54:	str	x8, [x19, #352]
  41ed58:	b	41ece4 <server_process_syslog_message+0x920>
  41ed5c:	ldr	x8, [x19, #368]
  41ed60:	mov	w9, #0x0                   	// #0
  41ed64:	strb	w9, [x8]
  41ed68:	ldr	x8, [x19, #376]
  41ed6c:	str	x8, [x19, #328]
  41ed70:	ldr	x8, [x19, #328]
  41ed74:	stur	x8, [x29, #-144]
  41ed78:	ldur	x8, [x29, #-208]
  41ed7c:	ldur	x10, [x29, #-216]
  41ed80:	add	x11, x10, #0x1
  41ed84:	stur	x11, [x29, #-216]
  41ed88:	ldur	x11, [x29, #-144]
  41ed8c:	str	x11, [x19, #312]
  41ed90:	ldur	x0, [x29, #-144]
  41ed94:	str	x8, [x19, #48]
  41ed98:	str	x10, [x19, #40]
  41ed9c:	bl	405738 <strlen@plt>
  41eda0:	str	x0, [x19, #320]
  41eda4:	add	x8, x19, #0x39
  41eda8:	ldur	q0, [x8, #255]
  41edac:	ldr	x8, [x19, #48]
  41edb0:	ldr	x10, [x19, #40]
  41edb4:	str	q0, [x8, x10, lsl #4]
  41edb8:	ldur	x8, [x29, #-160]
  41edbc:	cbz	x8, 41f00c <server_process_syslog_message+0xc48>
  41edc0:	add	x8, x19, #0x128
  41edc4:	adrp	x9, 42a000 <_fini+0x3a8>
  41edc8:	add	x9, x9, #0x58
  41edcc:	str	x9, [x19, #296]
  41edd0:	ldur	x9, [x29, #-160]
  41edd4:	str	x9, [x8, #8]
  41edd8:	str	xzr, [x19, #272]
  41eddc:	str	xzr, [x19, #264]
  41ede0:	ldr	x8, [x19, #264]
  41ede4:	mov	w9, #0x0                   	// #0
  41ede8:	cmp	x8, #0x2
  41edec:	str	w9, [x19, #36]
  41edf0:	b.cs	41ee18 <server_process_syslog_message+0xa54>  // b.hs, b.nlast
  41edf4:	ldr	x8, [x19, #264]
  41edf8:	mov	x9, #0x8                   	// #8
  41edfc:	mul	x8, x9, x8
  41ee00:	add	x9, x19, #0x128
  41ee04:	add	x8, x9, x8
  41ee08:	ldr	x8, [x8]
  41ee0c:	cmp	x8, #0x0
  41ee10:	cset	w10, ne  // ne = any
  41ee14:	str	w10, [x19, #36]
  41ee18:	ldr	w8, [x19, #36]
  41ee1c:	tbnz	w8, #0, 41ee24 <server_process_syslog_message+0xa60>
  41ee20:	b	41ee5c <server_process_syslog_message+0xa98>
  41ee24:	ldr	x8, [x19, #264]
  41ee28:	mov	x9, #0x8                   	// #8
  41ee2c:	mul	x8, x9, x8
  41ee30:	add	x9, x19, #0x128
  41ee34:	add	x8, x9, x8
  41ee38:	ldr	x0, [x8]
  41ee3c:	bl	405738 <strlen@plt>
  41ee40:	ldr	x8, [x19, #272]
  41ee44:	add	x8, x8, x0
  41ee48:	str	x8, [x19, #272]
  41ee4c:	ldr	x8, [x19, #264]
  41ee50:	add	x8, x8, #0x1
  41ee54:	str	x8, [x19, #264]
  41ee58:	b	41ede0 <server_process_syslog_message+0xa1c>
  41ee5c:	ldr	x8, [x19, #272]
  41ee60:	add	x8, x8, #0x1
  41ee64:	str	x8, [x19, #256]
  41ee68:	ldr	x1, [x19, #256]
  41ee6c:	mov	x0, #0x1                   	// #1
  41ee70:	bl	41f7cc <size_multiply_overflow>
  41ee74:	mov	w8, #0x1                   	// #1
  41ee78:	eor	w9, w0, #0x1
  41ee7c:	eor	w9, w9, w8
  41ee80:	eor	w9, w9, w8
  41ee84:	eor	w8, w9, w8
  41ee88:	and	w8, w8, #0x1
  41ee8c:	mov	w1, w8
  41ee90:	sxtw	x10, w1
  41ee94:	cbz	x10, 41eeb4 <server_process_syslog_message+0xaf0>
  41ee98:	mov	w8, wzr
  41ee9c:	mov	w0, w8
  41eea0:	ldr	x1, [x19, #104]
  41eea4:	ldr	x2, [x19, #136]
  41eea8:	mov	w3, #0x195                 	// #405
  41eeac:	ldr	x4, [x19, #112]
  41eeb0:	bl	405718 <log_assert_failed_realm@plt>
  41eeb4:	ldr	x8, [x19, #256]
  41eeb8:	mov	x9, #0x1                   	// #1
  41eebc:	mul	x8, x9, x8
  41eec0:	cmp	x8, #0x400, lsl #12
  41eec4:	cset	w10, ls  // ls = plast
  41eec8:	mov	w11, #0x1                   	// #1
  41eecc:	eor	w10, w10, #0x1
  41eed0:	eor	w10, w10, w11
  41eed4:	eor	w10, w10, w11
  41eed8:	and	w10, w10, #0x1
  41eedc:	mov	w0, w10
  41eee0:	sxtw	x8, w0
  41eee4:	cbz	x8, 41ef04 <server_process_syslog_message+0xb40>
  41eee8:	mov	w8, wzr
  41eeec:	mov	w0, w8
  41eef0:	ldr	x1, [x19, #120]
  41eef4:	ldr	x2, [x19, #136]
  41eef8:	mov	w3, #0x195                 	// #405
  41eefc:	ldr	x4, [x19, #112]
  41ef00:	bl	405718 <log_assert_failed_realm@plt>
  41ef04:	ldr	x8, [x19, #256]
  41ef08:	mov	x9, #0x1                   	// #1
  41ef0c:	mul	x8, x9, x8
  41ef10:	mul	x8, x8, x9
  41ef14:	add	x8, x8, #0xf
  41ef18:	and	x8, x8, #0xfffffffffffffff0
  41ef1c:	mov	x9, sp
  41ef20:	subs	x8, x9, x8
  41ef24:	mov	sp, x8
  41ef28:	str	x8, [x19, #248]
  41ef2c:	ldr	x8, [x19, #248]
  41ef30:	str	x8, [x19, #288]
  41ef34:	str	x8, [x19, #280]
  41ef38:	str	xzr, [x19, #264]
  41ef3c:	ldr	x8, [x19, #264]
  41ef40:	mov	w9, #0x0                   	// #0
  41ef44:	cmp	x8, #0x2
  41ef48:	str	w9, [x19, #32]
  41ef4c:	b.cs	41ef74 <server_process_syslog_message+0xbb0>  // b.hs, b.nlast
  41ef50:	ldr	x8, [x19, #264]
  41ef54:	mov	x9, #0x8                   	// #8
  41ef58:	mul	x8, x9, x8
  41ef5c:	add	x9, x19, #0x128
  41ef60:	add	x8, x9, x8
  41ef64:	ldr	x8, [x8]
  41ef68:	cmp	x8, #0x0
  41ef6c:	cset	w10, ne  // ne = any
  41ef70:	str	w10, [x19, #32]
  41ef74:	ldr	w8, [x19, #32]
  41ef78:	tbnz	w8, #0, 41ef80 <server_process_syslog_message+0xbbc>
  41ef7c:	b	41efb4 <server_process_syslog_message+0xbf0>
  41ef80:	ldr	x0, [x19, #280]
  41ef84:	ldr	x8, [x19, #264]
  41ef88:	mov	x9, #0x8                   	// #8
  41ef8c:	mul	x8, x9, x8
  41ef90:	add	x9, x19, #0x128
  41ef94:	add	x8, x9, x8
  41ef98:	ldr	x1, [x8]
  41ef9c:	bl	405ad8 <stpcpy@plt>
  41efa0:	str	x0, [x19, #280]
  41efa4:	ldr	x8, [x19, #264]
  41efa8:	add	x8, x8, #0x1
  41efac:	str	x8, [x19, #264]
  41efb0:	b	41ef3c <server_process_syslog_message+0xb78>
  41efb4:	ldr	x8, [x19, #280]
  41efb8:	mov	w9, #0x0                   	// #0
  41efbc:	strb	w9, [x8]
  41efc0:	ldr	x8, [x19, #288]
  41efc4:	str	x8, [x19, #240]
  41efc8:	ldr	x8, [x19, #240]
  41efcc:	stur	x8, [x29, #-144]
  41efd0:	ldur	x8, [x29, #-208]
  41efd4:	ldur	x10, [x29, #-216]
  41efd8:	add	x11, x10, #0x1
  41efdc:	stur	x11, [x29, #-216]
  41efe0:	ldur	x11, [x29, #-144]
  41efe4:	str	x11, [x19, #224]
  41efe8:	ldur	x0, [x29, #-144]
  41efec:	str	x8, [x19, #24]
  41eff0:	str	x10, [x19, #16]
  41eff4:	bl	405738 <strlen@plt>
  41eff8:	str	x0, [x19, #232]
  41effc:	ldr	q0, [x19, #224]
  41f000:	ldr	x8, [x19, #24]
  41f004:	ldr	x10, [x19, #16]
  41f008:	str	q0, [x8, x10, lsl #4]
  41f00c:	ldur	x8, [x29, #-248]
  41f010:	cmp	x8, #0x0
  41f014:	cset	w9, ls  // ls = plast
  41f018:	tbnz	w9, #0, 41f158 <server_process_syslog_message+0xd94>
  41f01c:	mov	x8, #0x11                  	// #17
  41f020:	str	x8, [x19, #216]
  41f024:	ldur	x8, [x29, #-248]
  41f028:	add	x8, x8, #0x11
  41f02c:	str	x8, [x19, #208]
  41f030:	ldr	x1, [x19, #208]
  41f034:	mov	x0, #0x1                   	// #1
  41f038:	bl	41f7cc <size_multiply_overflow>
  41f03c:	mov	w8, #0x1                   	// #1
  41f040:	eor	w9, w0, #0x1
  41f044:	eor	w9, w9, w8
  41f048:	eor	w9, w9, w8
  41f04c:	eor	w8, w9, w8
  41f050:	and	w8, w8, #0x1
  41f054:	mov	w1, w8
  41f058:	sxtw	x10, w1
  41f05c:	cbz	x10, 41f07c <server_process_syslog_message+0xcb8>
  41f060:	mov	w8, wzr
  41f064:	mov	w0, w8
  41f068:	ldr	x1, [x19, #104]
  41f06c:	ldr	x2, [x19, #136]
  41f070:	mov	w3, #0x19c                 	// #412
  41f074:	ldr	x4, [x19, #112]
  41f078:	bl	405718 <log_assert_failed_realm@plt>
  41f07c:	ldr	x8, [x19, #208]
  41f080:	mov	x9, #0x1                   	// #1
  41f084:	mul	x8, x9, x8
  41f088:	cmp	x8, #0x400, lsl #12
  41f08c:	cset	w10, ls  // ls = plast
  41f090:	mov	w11, #0x1                   	// #1
  41f094:	eor	w10, w10, #0x1
  41f098:	eor	w10, w10, w11
  41f09c:	eor	w10, w10, w11
  41f0a0:	and	w10, w10, #0x1
  41f0a4:	mov	w0, w10
  41f0a8:	sxtw	x8, w0
  41f0ac:	cbz	x8, 41f0cc <server_process_syslog_message+0xd08>
  41f0b0:	mov	w8, wzr
  41f0b4:	mov	w0, w8
  41f0b8:	ldr	x1, [x19, #120]
  41f0bc:	ldr	x2, [x19, #136]
  41f0c0:	mov	w3, #0x19c                 	// #412
  41f0c4:	ldr	x4, [x19, #112]
  41f0c8:	bl	405718 <log_assert_failed_realm@plt>
  41f0cc:	ldr	x8, [x19, #208]
  41f0d0:	mov	x9, #0x1                   	// #1
  41f0d4:	mul	x8, x9, x8
  41f0d8:	mul	x8, x8, x9
  41f0dc:	add	x8, x8, #0xf
  41f0e0:	and	x8, x8, #0xfffffffffffffff0
  41f0e4:	mov	x9, sp
  41f0e8:	subs	x8, x9, x8
  41f0ec:	mov	sp, x8
  41f0f0:	str	x8, [x19, #200]
  41f0f4:	ldr	x8, [x19, #200]
  41f0f8:	stur	x8, [x29, #-64]
  41f0fc:	ldur	x8, [x29, #-64]
  41f100:	adrp	x9, 42e000 <_fini+0x43a8>
  41f104:	add	x9, x9, #0x26f
  41f108:	ldr	q0, [x9]
  41f10c:	str	q0, [x8]
  41f110:	ldrb	w10, [x9, #16]
  41f114:	strb	w10, [x8, #16]
  41f118:	ldur	x8, [x29, #-64]
  41f11c:	add	x0, x8, #0x11
  41f120:	ldur	x1, [x29, #-136]
  41f124:	ldur	x2, [x29, #-248]
  41f128:	bl	405af8 <memcpy@plt>
  41f12c:	ldur	x8, [x29, #-208]
  41f130:	ldur	x9, [x29, #-216]
  41f134:	add	x11, x9, #0x1
  41f138:	stur	x11, [x29, #-216]
  41f13c:	ldur	x11, [x29, #-64]
  41f140:	str	x11, [x19, #184]
  41f144:	ldur	x11, [x29, #-248]
  41f148:	add	x11, x11, #0x11
  41f14c:	str	x11, [x19, #192]
  41f150:	ldur	q0, [x19, #184]
  41f154:	str	q0, [x8, x9, lsl #4]
  41f158:	ldur	x1, [x29, #-128]
  41f15c:	adrp	x0, 42a000 <_fini+0x3a8>
  41f160:	add	x0, x0, #0x64
  41f164:	mov	x8, xzr
  41f168:	mov	x2, x8
  41f16c:	bl	4057e8 <strjoin_real@plt>
  41f170:	stur	x0, [x29, #-176]
  41f174:	ldur	x8, [x29, #-176]
  41f178:	cbnz	x8, 41f1a0 <server_process_syslog_message+0xddc>
  41f17c:	mov	w8, wzr
  41f180:	mov	w0, w8
  41f184:	ldr	x1, [x19, #136]
  41f188:	mov	w2, #0x1a5                 	// #421
  41f18c:	ldr	x3, [x19, #128]
  41f190:	bl	405958 <log_oom_internal@plt>
  41f194:	mov	w8, #0x1                   	// #1
  41f198:	str	w8, [x19, #464]
  41f19c:	b	41f2b8 <server_process_syslog_message+0xef4>
  41f1a0:	ldur	x8, [x29, #-208]
  41f1a4:	ldur	x9, [x29, #-216]
  41f1a8:	add	x10, x9, #0x1
  41f1ac:	stur	x10, [x29, #-216]
  41f1b0:	ldur	x10, [x29, #-176]
  41f1b4:	str	x10, [x19, #168]
  41f1b8:	ldur	x0, [x29, #-176]
  41f1bc:	str	x8, [x19, #8]
  41f1c0:	str	x9, [x19]
  41f1c4:	bl	405738 <strlen@plt>
  41f1c8:	str	x0, [x19, #176]
  41f1cc:	ldur	q0, [x19, #168]
  41f1d0:	ldr	x8, [x19, #8]
  41f1d4:	ldr	x9, [x19]
  41f1d8:	str	q0, [x8, x9, lsl #4]
  41f1dc:	ldurb	w11, [x29, #-249]
  41f1e0:	tbnz	w11, #0, 41f1e8 <server_process_syslog_message+0xe24>
  41f1e4:	b	41f28c <server_process_syslog_message+0xec8>
  41f1e8:	mov	x8, #0xb                   	// #11
  41f1ec:	str	x8, [x19, #160]
  41f1f0:	ldur	x8, [x29, #-24]
  41f1f4:	add	x1, x8, #0xb
  41f1f8:	mov	x0, #0x1                   	// #1
  41f1fc:	bl	41f310 <malloc_multiply>
  41f200:	stur	x0, [x29, #-184]
  41f204:	ldur	x8, [x29, #-184]
  41f208:	cbnz	x8, 41f230 <server_process_syslog_message+0xe6c>
  41f20c:	mov	w8, wzr
  41f210:	mov	w0, w8
  41f214:	ldr	x1, [x19, #136]
  41f218:	mov	w2, #0x1af                 	// #431
  41f21c:	ldr	x3, [x19, #128]
  41f220:	bl	405958 <log_oom_internal@plt>
  41f224:	mov	w8, #0x1                   	// #1
  41f228:	str	w8, [x19, #464]
  41f22c:	b	41f2b8 <server_process_syslog_message+0xef4>
  41f230:	ldur	x8, [x29, #-184]
  41f234:	adrp	x9, 42e000 <_fini+0x43a8>
  41f238:	add	x9, x9, #0x281
  41f23c:	ldr	x10, [x9]
  41f240:	str	x10, [x8]
  41f244:	ldur	w11, [x9, #7]
  41f248:	stur	w11, [x8, #7]
  41f24c:	ldur	x8, [x29, #-184]
  41f250:	add	x0, x8, #0xb
  41f254:	ldur	x1, [x29, #-16]
  41f258:	ldur	x2, [x29, #-24]
  41f25c:	bl	405af8 <memcpy@plt>
  41f260:	ldur	x8, [x29, #-208]
  41f264:	ldur	x9, [x29, #-216]
  41f268:	add	x10, x9, #0x1
  41f26c:	stur	x10, [x29, #-216]
  41f270:	ldur	x10, [x29, #-184]
  41f274:	str	x10, [x19, #144]
  41f278:	ldur	x10, [x29, #-24]
  41f27c:	add	x10, x10, #0xb
  41f280:	str	x10, [x19, #152]
  41f284:	ldr	q0, [x19, #144]
  41f288:	str	q0, [x8, x9, lsl #4]
  41f28c:	ldur	x0, [x29, #-8]
  41f290:	ldur	x1, [x29, #-208]
  41f294:	ldur	x2, [x29, #-216]
  41f298:	ldur	x3, [x29, #-224]
  41f29c:	ldur	x4, [x29, #-200]
  41f2a0:	ldur	x5, [x29, #-40]
  41f2a4:	ldur	w6, [x29, #-188]
  41f2a8:	mov	w8, wzr
  41f2ac:	mov	w7, w8
  41f2b0:	bl	40f6d0 <server_dispatch_message>
  41f2b4:	str	wzr, [x19, #464]
  41f2b8:	sub	x0, x29, #0xb8
  41f2bc:	bl	41dc00 <freep>
  41f2c0:	sub	x0, x29, #0xb0
  41f2c4:	bl	41dc00 <freep>
  41f2c8:	sub	x0, x29, #0xa8
  41f2cc:	bl	41dc00 <freep>
  41f2d0:	sub	x0, x29, #0xa0
  41f2d4:	bl	41dc00 <freep>
  41f2d8:	sub	x0, x29, #0x98
  41f2dc:	bl	41dc00 <freep>
  41f2e0:	mov	sp, x29
  41f2e4:	ldp	x28, x19, [sp, #16]
  41f2e8:	ldp	x29, x30, [sp], #32
  41f2ec:	ret

000000000041f2f0 <pid_is_valid>:
  41f2f0:	sub	sp, sp, #0x10
  41f2f4:	str	w0, [sp, #12]
  41f2f8:	ldr	w8, [sp, #12]
  41f2fc:	cmp	w8, #0x0
  41f300:	cset	w8, gt
  41f304:	and	w0, w8, #0x1
  41f308:	add	sp, sp, #0x10
  41f30c:	ret

000000000041f310 <malloc_multiply>:
  41f310:	sub	sp, sp, #0x40
  41f314:	stp	x29, x30, [sp, #48]
  41f318:	add	x29, sp, #0x30
  41f31c:	stur	x0, [x29, #-16]
  41f320:	str	x1, [sp, #24]
  41f324:	ldur	x0, [x29, #-16]
  41f328:	ldr	x1, [sp, #24]
  41f32c:	bl	41f7cc <size_multiply_overflow>
  41f330:	tbnz	w0, #0, 41f338 <malloc_multiply+0x28>
  41f334:	b	41f344 <malloc_multiply+0x34>
  41f338:	mov	x8, xzr
  41f33c:	stur	x8, [x29, #-8]
  41f340:	b	41f37c <malloc_multiply+0x6c>
  41f344:	ldur	x8, [x29, #-16]
  41f348:	ldr	x9, [sp, #24]
  41f34c:	mul	x8, x8, x9
  41f350:	str	x8, [sp, #16]
  41f354:	cbz	x8, 41f364 <malloc_multiply+0x54>
  41f358:	ldr	x8, [sp, #16]
  41f35c:	str	x8, [sp, #8]
  41f360:	b	41f36c <malloc_multiply+0x5c>
  41f364:	mov	x8, #0x1                   	// #1
  41f368:	str	x8, [sp, #8]
  41f36c:	ldr	x8, [sp, #8]
  41f370:	mov	x0, x8
  41f374:	bl	406378 <malloc@plt>
  41f378:	stur	x0, [x29, #-8]
  41f37c:	ldur	x0, [x29, #-8]
  41f380:	ldp	x29, x30, [sp, #48]
  41f384:	add	sp, sp, #0x40
  41f388:	ret

000000000041f38c <client_context_test_priority>:
  41f38c:	sub	sp, sp, #0x20
  41f390:	str	x0, [sp, #16]
  41f394:	str	w1, [sp, #12]
  41f398:	ldr	x8, [sp, #16]
  41f39c:	cbnz	x8, 41f3b0 <client_context_test_priority+0x24>
  41f3a0:	mov	w8, #0x1                   	// #1
  41f3a4:	and	w8, w8, #0x1
  41f3a8:	strb	w8, [sp, #31]
  41f3ac:	b	41f3f4 <client_context_test_priority+0x68>
  41f3b0:	ldr	x8, [sp, #16]
  41f3b4:	ldr	w9, [x8, #160]
  41f3b8:	cmp	w9, #0x0
  41f3bc:	cset	w9, ge  // ge = tcont
  41f3c0:	tbnz	w9, #0, 41f3d4 <client_context_test_priority+0x48>
  41f3c4:	mov	w8, #0x1                   	// #1
  41f3c8:	and	w8, w8, #0x1
  41f3cc:	strb	w8, [sp, #31]
  41f3d0:	b	41f3f4 <client_context_test_priority+0x68>
  41f3d4:	ldr	w8, [sp, #12]
  41f3d8:	and	w8, w8, #0x7
  41f3dc:	ldr	x9, [sp, #16]
  41f3e0:	ldr	w10, [x9, #160]
  41f3e4:	cmp	w8, w10
  41f3e8:	cset	w8, le
  41f3ec:	and	w8, w8, #0x1
  41f3f0:	strb	w8, [sp, #31]
  41f3f4:	ldrb	w8, [sp, #31]
  41f3f8:	and	w0, w8, #0x1
  41f3fc:	add	sp, sp, #0x20
  41f400:	ret

000000000041f404 <syslog_skip_timestamp>:
  41f404:	sub	sp, sp, #0x90
  41f408:	stp	x29, x30, [sp, #128]
  41f40c:	add	x29, sp, #0x80
  41f410:	adrp	x1, 430000 <_fini+0x63a8>
  41f414:	add	x1, x1, #0x9c0
  41f418:	mov	x2, #0x40                  	// #64
  41f41c:	adrp	x8, 42e000 <_fini+0x43a8>
  41f420:	add	x8, x8, #0x39
  41f424:	add	x8, x8, #0x3
  41f428:	add	x9, sp, #0x30
  41f42c:	stur	x0, [x29, #-16]
  41f430:	mov	x0, x9
  41f434:	str	x8, [sp, #16]
  41f438:	bl	405af8 <memcpy@plt>
  41f43c:	ldur	x8, [x29, #-16]
  41f440:	cmp	x8, #0x0
  41f444:	cset	w9, ne  // ne = any
  41f448:	mov	w10, #0x1                   	// #1
  41f44c:	eor	w9, w9, #0x1
  41f450:	eor	w9, w9, w10
  41f454:	eor	w9, w9, w10
  41f458:	and	w9, w9, #0x1
  41f45c:	mov	w0, w9
  41f460:	sxtw	x8, w0
  41f464:	cbz	x8, 41f48c <syslog_skip_timestamp+0x88>
  41f468:	mov	w8, wzr
  41f46c:	mov	w0, w8
  41f470:	adrp	x1, 42e000 <_fini+0x43a8>
  41f474:	add	x1, x1, #0xd8
  41f478:	ldr	x2, [sp, #16]
  41f47c:	mov	w3, #0xfd                  	// #253
  41f480:	adrp	x4, 42e000 <_fini+0x43a8>
  41f484:	add	x4, x4, #0x49a
  41f488:	bl	405718 <log_assert_failed_realm@plt>
  41f48c:	ldur	x8, [x29, #-16]
  41f490:	ldr	x8, [x8]
  41f494:	cmp	x8, #0x0
  41f498:	cset	w9, ne  // ne = any
  41f49c:	mov	w10, #0x1                   	// #1
  41f4a0:	eor	w9, w9, #0x1
  41f4a4:	eor	w9, w9, w10
  41f4a8:	eor	w9, w9, w10
  41f4ac:	and	w9, w9, #0x1
  41f4b0:	mov	w0, w9
  41f4b4:	sxtw	x8, w0
  41f4b8:	cbz	x8, 41f4e0 <syslog_skip_timestamp+0xdc>
  41f4bc:	mov	w8, wzr
  41f4c0:	mov	w0, w8
  41f4c4:	adrp	x1, 42e000 <_fini+0x43a8>
  41f4c8:	add	x1, x1, #0x4c3
  41f4cc:	ldr	x2, [sp, #16]
  41f4d0:	mov	w3, #0xfe                  	// #254
  41f4d4:	adrp	x4, 42e000 <_fini+0x43a8>
  41f4d8:	add	x4, x4, #0x49a
  41f4dc:	bl	405718 <log_assert_failed_realm@plt>
  41f4e0:	str	wzr, [sp, #28]
  41f4e4:	ldur	x8, [x29, #-16]
  41f4e8:	ldr	x8, [x8]
  41f4ec:	str	x8, [sp, #40]
  41f4f0:	ldr	w8, [sp, #28]
  41f4f4:	mov	w9, w8
  41f4f8:	cmp	x9, #0x10
  41f4fc:	b.cs	41f630 <syslog_skip_timestamp+0x22c>  // b.hs, b.nlast
  41f500:	ldr	x8, [sp, #40]
  41f504:	ldrb	w9, [x8]
  41f508:	cbnz	w9, 41f514 <syslog_skip_timestamp+0x110>
  41f50c:	stur	wzr, [x29, #-4]
  41f510:	b	41f658 <syslog_skip_timestamp+0x254>
  41f514:	ldr	w8, [sp, #28]
  41f518:	mov	w9, w8
  41f51c:	add	x10, sp, #0x30
  41f520:	ldr	w8, [x10, x9, lsl #2]
  41f524:	subs	w8, w8, #0x0
  41f528:	mov	w9, w8
  41f52c:	ubfx	x9, x9, #0, #32
  41f530:	cmp	x9, #0x4
  41f534:	str	x9, [sp, #8]
  41f538:	b.hi	41f614 <syslog_skip_timestamp+0x210>  // b.pmore
  41f53c:	adrp	x8, 430000 <_fini+0x63a8>
  41f540:	add	x8, x8, #0x880
  41f544:	ldr	x11, [sp, #8]
  41f548:	ldrsw	x10, [x8, x11, lsl #2]
  41f54c:	add	x9, x8, x10
  41f550:	br	x9
  41f554:	ldr	x8, [sp, #40]
  41f558:	ldrb	w9, [x8]
  41f55c:	cmp	w9, #0x20
  41f560:	b.eq	41f56c <syslog_skip_timestamp+0x168>  // b.none
  41f564:	stur	wzr, [x29, #-4]
  41f568:	b	41f658 <syslog_skip_timestamp+0x254>
  41f56c:	b	41f614 <syslog_skip_timestamp+0x210>
  41f570:	ldr	x8, [sp, #40]
  41f574:	ldrb	w9, [x8]
  41f578:	cmp	w9, #0x20
  41f57c:	b.ne	41f584 <syslog_skip_timestamp+0x180>  // b.any
  41f580:	b	41f614 <syslog_skip_timestamp+0x210>
  41f584:	ldr	x8, [sp, #40]
  41f588:	ldrb	w9, [x8]
  41f58c:	cmp	w9, #0x30
  41f590:	b.lt	41f5a4 <syslog_skip_timestamp+0x1a0>  // b.tstop
  41f594:	ldr	x8, [sp, #40]
  41f598:	ldrb	w9, [x8]
  41f59c:	cmp	w9, #0x39
  41f5a0:	b.le	41f5ac <syslog_skip_timestamp+0x1a8>
  41f5a4:	stur	wzr, [x29, #-4]
  41f5a8:	b	41f658 <syslog_skip_timestamp+0x254>
  41f5ac:	b	41f614 <syslog_skip_timestamp+0x210>
  41f5b0:	ldr	x8, [sp, #40]
  41f5b4:	ldrb	w9, [x8]
  41f5b8:	cmp	w9, #0x41
  41f5bc:	b.lt	41f5d0 <syslog_skip_timestamp+0x1cc>  // b.tstop
  41f5c0:	ldr	x8, [sp, #40]
  41f5c4:	ldrb	w9, [x8]
  41f5c8:	cmp	w9, #0x5a
  41f5cc:	b.le	41f5f8 <syslog_skip_timestamp+0x1f4>
  41f5d0:	ldr	x8, [sp, #40]
  41f5d4:	ldrb	w9, [x8]
  41f5d8:	cmp	w9, #0x61
  41f5dc:	b.lt	41f5f0 <syslog_skip_timestamp+0x1ec>  // b.tstop
  41f5e0:	ldr	x8, [sp, #40]
  41f5e4:	ldrb	w9, [x8]
  41f5e8:	cmp	w9, #0x7a
  41f5ec:	b.le	41f5f8 <syslog_skip_timestamp+0x1f4>
  41f5f0:	stur	wzr, [x29, #-4]
  41f5f4:	b	41f658 <syslog_skip_timestamp+0x254>
  41f5f8:	b	41f614 <syslog_skip_timestamp+0x210>
  41f5fc:	ldr	x8, [sp, #40]
  41f600:	ldrb	w9, [x8]
  41f604:	cmp	w9, #0x3a
  41f608:	b.eq	41f614 <syslog_skip_timestamp+0x210>  // b.none
  41f60c:	stur	wzr, [x29, #-4]
  41f610:	b	41f658 <syslog_skip_timestamp+0x254>
  41f614:	ldr	w8, [sp, #28]
  41f618:	add	w8, w8, #0x1
  41f61c:	str	w8, [sp, #28]
  41f620:	ldr	x9, [sp, #40]
  41f624:	add	x9, x9, #0x1
  41f628:	str	x9, [sp, #40]
  41f62c:	b	41f4f0 <syslog_skip_timestamp+0xec>
  41f630:	ldur	x8, [x29, #-16]
  41f634:	ldr	x8, [x8]
  41f638:	str	x8, [sp, #32]
  41f63c:	ldr	x8, [sp, #40]
  41f640:	ldur	x9, [x29, #-16]
  41f644:	str	x8, [x9]
  41f648:	ldr	x8, [sp, #40]
  41f64c:	ldr	x9, [sp, #32]
  41f650:	subs	x8, x8, x9
  41f654:	stur	w8, [x29, #-4]
  41f658:	ldur	w0, [x29, #-4]
  41f65c:	ldp	x29, x30, [sp, #128]
  41f660:	add	sp, sp, #0x90
  41f664:	ret

000000000041f668 <forward_syslog_raw>:
  41f668:	sub	sp, sp, #0x70
  41f66c:	stp	x29, x30, [sp, #96]
  41f670:	add	x29, sp, #0x60
  41f674:	adrp	x8, 42e000 <_fini+0x43a8>
  41f678:	add	x8, x8, #0x39
  41f67c:	add	x8, x8, #0x3
  41f680:	stur	x0, [x29, #-8]
  41f684:	stur	w1, [x29, #-12]
  41f688:	stur	x2, [x29, #-24]
  41f68c:	stur	x3, [x29, #-32]
  41f690:	stur	x4, [x29, #-40]
  41f694:	str	x5, [sp, #48]
  41f698:	str	x8, [sp, #8]
  41f69c:	ldur	x8, [x29, #-8]
  41f6a0:	cmp	x8, #0x0
  41f6a4:	cset	w9, ne  // ne = any
  41f6a8:	mov	w10, #0x1                   	// #1
  41f6ac:	eor	w9, w9, #0x1
  41f6b0:	eor	w9, w9, w10
  41f6b4:	eor	w9, w9, w10
  41f6b8:	and	w9, w9, #0x1
  41f6bc:	mov	w0, w9
  41f6c0:	sxtw	x8, w0
  41f6c4:	cbz	x8, 41f6ec <forward_syslog_raw+0x84>
  41f6c8:	mov	w8, wzr
  41f6cc:	mov	w0, w8
  41f6d0:	adrp	x1, 429000 <journal_ratelimit_group_free+0x70>
  41f6d4:	add	x1, x1, #0xdc8
  41f6d8:	ldr	x2, [sp, #8]
  41f6dc:	mov	w3, #0x68                  	// #104
  41f6e0:	adrp	x4, 42e000 <_fini+0x43a8>
  41f6e4:	add	x4, x4, #0x4c8
  41f6e8:	bl	405718 <log_assert_failed_realm@plt>
  41f6ec:	ldur	x8, [x29, #-24]
  41f6f0:	cmp	x8, #0x0
  41f6f4:	cset	w9, ne  // ne = any
  41f6f8:	mov	w10, #0x1                   	// #1
  41f6fc:	eor	w9, w9, #0x1
  41f700:	eor	w9, w9, w10
  41f704:	eor	w9, w9, w10
  41f708:	and	w9, w9, #0x1
  41f70c:	mov	w0, w9
  41f710:	sxtw	x8, w0
  41f714:	cbz	x8, 41f73c <forward_syslog_raw+0xd4>
  41f718:	mov	w8, wzr
  41f71c:	mov	w0, w8
  41f720:	adrp	x1, 42e000 <_fini+0x43a8>
  41f724:	add	x1, x1, #0x533
  41f728:	ldr	x2, [sp, #8]
  41f72c:	mov	w3, #0x69                  	// #105
  41f730:	adrp	x4, 42e000 <_fini+0x43a8>
  41f734:	add	x4, x4, #0x4c8
  41f738:	bl	405718 <log_assert_failed_realm@plt>
  41f73c:	ldur	w8, [x29, #-12]
  41f740:	and	w8, w8, #0x7
  41f744:	ldur	x9, [x29, #-8]
  41f748:	ldr	w10, [x9, #540]
  41f74c:	cmp	w8, w10
  41f750:	b.le	41f758 <forward_syslog_raw+0xf0>
  41f754:	b	41f788 <forward_syslog_raw+0x120>
  41f758:	ldur	x8, [x29, #-24]
  41f75c:	str	x8, [sp, #16]
  41f760:	ldur	x8, [x29, #-32]
  41f764:	str	x8, [sp, #24]
  41f768:	ldr	q0, [sp, #16]
  41f76c:	add	x1, sp, #0x20
  41f770:	str	q0, [sp, #32]
  41f774:	ldur	x0, [x29, #-8]
  41f778:	ldur	x3, [x29, #-40]
  41f77c:	ldr	x4, [sp, #48]
  41f780:	mov	w2, #0x1                   	// #1
  41f784:	bl	41dc28 <forward_syslog_iovec>
  41f788:	ldp	x29, x30, [sp, #96]
  41f78c:	add	sp, sp, #0x70
  41f790:	ret

000000000041f794 <client_context_extra_fields_n_iovec>:
  41f794:	sub	sp, sp, #0x10
  41f798:	str	x0, [sp, #8]
  41f79c:	ldr	x8, [sp, #8]
  41f7a0:	cbz	x8, 41f7b4 <client_context_extra_fields_n_iovec+0x20>
  41f7a4:	ldr	x8, [sp, #8]
  41f7a8:	ldr	x8, [x8, #176]
  41f7ac:	str	x8, [sp]
  41f7b0:	b	41f7bc <client_context_extra_fields_n_iovec+0x28>
  41f7b4:	mov	x8, xzr
  41f7b8:	str	x8, [sp]
  41f7bc:	ldr	x8, [sp]
  41f7c0:	mov	x0, x8
  41f7c4:	add	sp, sp, #0x10
  41f7c8:	ret

000000000041f7cc <size_multiply_overflow>:
  41f7cc:	sub	sp, sp, #0x20
  41f7d0:	str	x0, [sp, #24]
  41f7d4:	str	x1, [sp, #16]
  41f7d8:	ldr	x8, [sp, #16]
  41f7dc:	mov	w9, #0x0                   	// #0
  41f7e0:	str	w9, [sp, #12]
  41f7e4:	cbz	x8, 41f804 <size_multiply_overflow+0x38>
  41f7e8:	ldr	x8, [sp, #24]
  41f7ec:	ldr	x9, [sp, #16]
  41f7f0:	mov	x10, #0xffffffffffffffff    	// #-1
  41f7f4:	udiv	x9, x10, x9
  41f7f8:	cmp	x8, x9
  41f7fc:	cset	w11, hi  // hi = pmore
  41f800:	str	w11, [sp, #12]
  41f804:	ldr	w8, [sp, #12]
  41f808:	mov	w9, #0x1                   	// #1
  41f80c:	eor	w8, w8, #0x1
  41f810:	eor	w8, w8, w9
  41f814:	and	w8, w8, #0x1
  41f818:	mov	w0, w8
  41f81c:	sxtw	x10, w0
  41f820:	cmp	x10, #0x0
  41f824:	cset	w8, ne  // ne = any
  41f828:	and	w0, w8, #0x1
  41f82c:	add	sp, sp, #0x20
  41f830:	ret

000000000041f834 <server_open_syslog_socket>:
  41f834:	sub	sp, sp, #0xf0
  41f838:	stp	x29, x30, [sp, #224]
  41f83c:	add	x29, sp, #0xe0
  41f840:	adrp	x8, 430000 <_fini+0x63a8>
  41f844:	add	x8, x8, #0x898
  41f848:	add	x9, x8, #0x2
  41f84c:	adrp	x10, 42e000 <_fini+0x43a8>
  41f850:	add	x10, x10, #0x39
  41f854:	add	x10, x10, #0x3
  41f858:	adrp	x11, 42e000 <_fini+0x43a8>
  41f85c:	add	x11, x11, #0x2b5
  41f860:	stur	x0, [x29, #-16]
  41f864:	str	x8, [sp, #72]
  41f868:	str	x9, [sp, #64]
  41f86c:	str	x10, [sp, #56]
  41f870:	str	x11, [sp, #48]
  41f874:	ldur	x8, [x29, #-16]
  41f878:	cmp	x8, #0x0
  41f87c:	cset	w9, ne  // ne = any
  41f880:	mov	w10, #0x1                   	// #1
  41f884:	eor	w9, w9, #0x1
  41f888:	eor	w9, w9, w10
  41f88c:	eor	w9, w9, w10
  41f890:	and	w9, w9, #0x1
  41f894:	mov	w0, w9
  41f898:	sxtw	x8, w0
  41f89c:	cbz	x8, 41f8c4 <server_open_syslog_socket+0x90>
  41f8a0:	mov	w8, wzr
  41f8a4:	mov	w0, w8
  41f8a8:	adrp	x1, 429000 <journal_ratelimit_group_free+0x70>
  41f8ac:	add	x1, x1, #0xdc8
  41f8b0:	ldr	x2, [sp, #56]
  41f8b4:	mov	w3, #0x1c4                 	// #452
  41f8b8:	adrp	x4, 42e000 <_fini+0x43a8>
  41f8bc:	add	x4, x4, #0x28d
  41f8c0:	bl	405718 <log_assert_failed_realm@plt>
  41f8c4:	ldur	x8, [x29, #-16]
  41f8c8:	ldr	w9, [x8]
  41f8cc:	cmp	w9, #0x0
  41f8d0:	cset	w9, ge  // ge = tcont
  41f8d4:	tbnz	w9, #0, 41fb18 <server_open_syslog_socket+0x2e4>
  41f8d8:	mov	w0, #0x1                   	// #1
  41f8dc:	mov	w1, #0x802                 	// #2050
  41f8e0:	movk	w1, #0x8, lsl #16
  41f8e4:	mov	w8, wzr
  41f8e8:	mov	w2, w8
  41f8ec:	bl	405eb8 <socket@plt>
  41f8f0:	ldur	x9, [x29, #-16]
  41f8f4:	str	w0, [x9]
  41f8f8:	ldur	x9, [x29, #-16]
  41f8fc:	ldr	w8, [x9]
  41f900:	cmp	w8, #0x0
  41f904:	cset	w8, ge  // ge = tcont
  41f908:	tbnz	w8, #0, 41f994 <server_open_syslog_socket+0x160>
  41f90c:	mov	w8, #0x3                   	// #3
  41f910:	stur	w8, [x29, #-24]
  41f914:	bl	405768 <__errno_location@plt>
  41f918:	ldr	w8, [x0]
  41f91c:	stur	w8, [x29, #-28]
  41f920:	stur	wzr, [x29, #-32]
  41f924:	ldur	w0, [x29, #-32]
  41f928:	bl	405638 <log_get_max_level_realm@plt>
  41f92c:	ldur	w8, [x29, #-24]
  41f930:	and	w8, w8, #0x7
  41f934:	cmp	w0, w8
  41f938:	b.lt	41f96c <server_open_syslog_socket+0x138>  // b.tstop
  41f93c:	ldur	w8, [x29, #-32]
  41f940:	ldur	w9, [x29, #-24]
  41f944:	orr	w0, w9, w8, lsl #10
  41f948:	ldur	w1, [x29, #-28]
  41f94c:	ldr	x2, [sp, #56]
  41f950:	mov	w3, #0x1c9                 	// #457
  41f954:	ldr	x4, [sp, #48]
  41f958:	adrp	x5, 42d000 <_fini+0x33a8>
  41f95c:	add	x5, x5, #0x792
  41f960:	bl	405648 <log_internal_realm@plt>
  41f964:	str	w0, [sp, #44]
  41f968:	b	41f980 <server_open_syslog_socket+0x14c>
  41f96c:	ldur	w0, [x29, #-28]
  41f970:	bl	405658 <abs@plt>
  41f974:	mov	w8, wzr
  41f978:	subs	w8, w8, w0, uxtb
  41f97c:	str	w8, [sp, #44]
  41f980:	ldr	w8, [sp, #44]
  41f984:	stur	w8, [x29, #-36]
  41f988:	ldur	w8, [x29, #-36]
  41f98c:	stur	w8, [x29, #-4]
  41f990:	b	41fe04 <server_open_syslog_socket+0x5d0>
  41f994:	ldr	x0, [sp, #72]
  41f998:	bl	4061c8 <sockaddr_un_unlink@plt>
  41f99c:	ldur	x8, [x29, #-16]
  41f9a0:	ldr	w9, [x8]
  41f9a4:	ldr	x8, [sp, #72]
  41f9a8:	stur	x8, [x29, #-48]
  41f9ac:	stur	x8, [x29, #-56]
  41f9b0:	str	w9, [sp, #40]
  41f9b4:	ldur	x8, [x29, #-56]
  41f9b8:	ldrh	w9, [x8]
  41f9bc:	cmp	w9, #0x1
  41f9c0:	cset	w9, eq  // eq = none
  41f9c4:	mov	w10, #0x1                   	// #1
  41f9c8:	eor	w9, w9, #0x1
  41f9cc:	eor	w9, w9, w10
  41f9d0:	eor	w9, w9, w10
  41f9d4:	and	w9, w9, #0x1
  41f9d8:	mov	w0, w9
  41f9dc:	sxtw	x8, w0
  41f9e0:	cbz	x8, 41fa08 <server_open_syslog_socket+0x1d4>
  41f9e4:	mov	w8, wzr
  41f9e8:	mov	w0, w8
  41f9ec:	adrp	x1, 42d000 <_fini+0x33a8>
  41f9f0:	add	x1, x1, #0x7a6
  41f9f4:	ldr	x2, [sp, #56]
  41f9f8:	mov	w3, #0x1cd                 	// #461
  41f9fc:	adrp	x4, 42e000 <_fini+0x43a8>
  41fa00:	add	x4, x4, #0x28d
  41fa04:	bl	405718 <log_assert_failed_realm@plt>
  41fa08:	ldur	x8, [x29, #-56]
  41fa0c:	ldrb	w9, [x8, #2]
  41fa10:	cbnz	w9, 41fa30 <server_open_syslog_socket+0x1fc>
  41fa14:	ldur	x8, [x29, #-56]
  41fa18:	add	x0, x8, #0x3
  41fa1c:	mov	x1, #0x6b                  	// #107
  41fa20:	bl	4061d8 <strnlen@plt>
  41fa24:	add	x8, x0, #0x1
  41fa28:	str	x8, [sp, #32]
  41fa2c:	b	41fa48 <server_open_syslog_socket+0x214>
  41fa30:	ldur	x8, [x29, #-56]
  41fa34:	add	x0, x8, #0x2
  41fa38:	mov	x1, #0x6c                  	// #108
  41fa3c:	bl	4061d8 <strnlen@plt>
  41fa40:	add	x8, x0, #0x1
  41fa44:	str	x8, [sp, #32]
  41fa48:	ldr	x8, [sp, #32]
  41fa4c:	add	x8, x8, #0x2
  41fa50:	stur	x8, [x29, #-64]
  41fa54:	ldur	x8, [x29, #-64]
  41fa58:	ldur	x1, [x29, #-48]
  41fa5c:	ldr	w0, [sp, #40]
  41fa60:	mov	w2, w8
  41fa64:	bl	4061e8 <bind@plt>
  41fa68:	stur	w0, [x29, #-20]
  41fa6c:	ldur	w8, [x29, #-20]
  41fa70:	cmp	w8, #0x0
  41fa74:	cset	w8, ge  // ge = tcont
  41fa78:	tbnz	w8, #0, 41fb08 <server_open_syslog_socket+0x2d4>
  41fa7c:	mov	w8, #0x3                   	// #3
  41fa80:	stur	w8, [x29, #-68]
  41fa84:	bl	405768 <__errno_location@plt>
  41fa88:	ldr	w8, [x0]
  41fa8c:	stur	w8, [x29, #-72]
  41fa90:	stur	wzr, [x29, #-76]
  41fa94:	ldur	w0, [x29, #-76]
  41fa98:	bl	405638 <log_get_max_level_realm@plt>
  41fa9c:	ldur	w8, [x29, #-68]
  41faa0:	and	w8, w8, #0x7
  41faa4:	cmp	w0, w8
  41faa8:	b.lt	41fae0 <server_open_syslog_socket+0x2ac>  // b.tstop
  41faac:	ldur	w8, [x29, #-76]
  41fab0:	ldur	w9, [x29, #-68]
  41fab4:	orr	w0, w9, w8, lsl #10
  41fab8:	ldur	w1, [x29, #-72]
  41fabc:	ldr	x2, [sp, #56]
  41fac0:	mov	w3, #0x1cf                 	// #463
  41fac4:	ldr	x4, [sp, #48]
  41fac8:	adrp	x5, 42d000 <_fini+0x33a8>
  41facc:	add	x5, x5, #0x7c1
  41fad0:	ldr	x6, [sp, #64]
  41fad4:	bl	405648 <log_internal_realm@plt>
  41fad8:	str	w0, [sp, #28]
  41fadc:	b	41faf4 <server_open_syslog_socket+0x2c0>
  41fae0:	ldur	w0, [x29, #-72]
  41fae4:	bl	405658 <abs@plt>
  41fae8:	mov	w8, wzr
  41faec:	subs	w8, w8, w0, uxtb
  41faf0:	str	w8, [sp, #28]
  41faf4:	ldr	w8, [sp, #28]
  41faf8:	stur	w8, [x29, #-80]
  41fafc:	ldur	w8, [x29, #-80]
  41fb00:	stur	w8, [x29, #-4]
  41fb04:	b	41fe04 <server_open_syslog_socket+0x5d0>
  41fb08:	ldr	x0, [sp, #64]
  41fb0c:	mov	w1, #0x1b6                 	// #438
  41fb10:	bl	4061f8 <chmod@plt>
  41fb14:	b	41fb2c <server_open_syslog_socket+0x2f8>
  41fb18:	ldur	x8, [x29, #-16]
  41fb1c:	ldr	w0, [x8]
  41fb20:	mov	w9, #0x1                   	// #1
  41fb24:	and	w1, w9, #0x1
  41fb28:	bl	406218 <fd_nonblock@plt>
  41fb2c:	ldur	x8, [x29, #-16]
  41fb30:	ldr	w0, [x8]
  41fb34:	mov	w9, #0x1                   	// #1
  41fb38:	mov	w1, w9
  41fb3c:	mov	w2, #0x10                  	// #16
  41fb40:	mov	w3, w9
  41fb44:	bl	41fe14 <setsockopt_int>
  41fb48:	stur	w0, [x29, #-20]
  41fb4c:	ldur	w9, [x29, #-20]
  41fb50:	cmp	w9, #0x0
  41fb54:	cset	w9, ge  // ge = tcont
  41fb58:	tbnz	w9, #0, 41fbe0 <server_open_syslog_socket+0x3ac>
  41fb5c:	mov	w8, #0x3                   	// #3
  41fb60:	stur	w8, [x29, #-84]
  41fb64:	ldur	w8, [x29, #-20]
  41fb68:	stur	w8, [x29, #-88]
  41fb6c:	stur	wzr, [x29, #-92]
  41fb70:	ldur	w0, [x29, #-92]
  41fb74:	bl	405638 <log_get_max_level_realm@plt>
  41fb78:	ldur	w8, [x29, #-84]
  41fb7c:	and	w8, w8, #0x7
  41fb80:	cmp	w0, w8
  41fb84:	b.lt	41fbb8 <server_open_syslog_socket+0x384>  // b.tstop
  41fb88:	ldur	w8, [x29, #-92]
  41fb8c:	ldur	w9, [x29, #-84]
  41fb90:	orr	w0, w9, w8, lsl #10
  41fb94:	ldur	w1, [x29, #-88]
  41fb98:	ldr	x2, [sp, #56]
  41fb9c:	mov	w3, #0x1d7                 	// #471
  41fba0:	ldr	x4, [sp, #48]
  41fba4:	adrp	x5, 42d000 <_fini+0x33a8>
  41fba8:	add	x5, x5, #0x5b3
  41fbac:	bl	405648 <log_internal_realm@plt>
  41fbb0:	str	w0, [sp, #24]
  41fbb4:	b	41fbcc <server_open_syslog_socket+0x398>
  41fbb8:	ldur	w0, [x29, #-88]
  41fbbc:	bl	405658 <abs@plt>
  41fbc0:	mov	w8, wzr
  41fbc4:	subs	w8, w8, w0, uxtb
  41fbc8:	str	w8, [sp, #24]
  41fbcc:	ldr	w8, [sp, #24]
  41fbd0:	stur	w8, [x29, #-96]
  41fbd4:	ldur	w8, [x29, #-96]
  41fbd8:	stur	w8, [x29, #-4]
  41fbdc:	b	41fe04 <server_open_syslog_socket+0x5d0>
  41fbe0:	ldur	x8, [x29, #-16]
  41fbe4:	ldr	w0, [x8]
  41fbe8:	mov	w9, #0x1                   	// #1
  41fbec:	mov	w1, w9
  41fbf0:	mov	w2, #0x1d                  	// #29
  41fbf4:	mov	w3, w9
  41fbf8:	bl	41fe14 <setsockopt_int>
  41fbfc:	stur	w0, [x29, #-20]
  41fc00:	ldur	w9, [x29, #-20]
  41fc04:	cmp	w9, #0x0
  41fc08:	cset	w9, ge  // ge = tcont
  41fc0c:	tbnz	w9, #0, 41fc94 <server_open_syslog_socket+0x460>
  41fc10:	mov	w8, #0x3                   	// #3
  41fc14:	stur	w8, [x29, #-100]
  41fc18:	ldur	w8, [x29, #-20]
  41fc1c:	stur	w8, [x29, #-104]
  41fc20:	stur	wzr, [x29, #-108]
  41fc24:	ldur	w0, [x29, #-108]
  41fc28:	bl	405638 <log_get_max_level_realm@plt>
  41fc2c:	ldur	w8, [x29, #-100]
  41fc30:	and	w8, w8, #0x7
  41fc34:	cmp	w0, w8
  41fc38:	b.lt	41fc6c <server_open_syslog_socket+0x438>  // b.tstop
  41fc3c:	ldur	w8, [x29, #-108]
  41fc40:	ldur	w9, [x29, #-100]
  41fc44:	orr	w0, w9, w8, lsl #10
  41fc48:	ldur	w1, [x29, #-104]
  41fc4c:	ldr	x2, [sp, #56]
  41fc50:	mov	w3, #0x1e3                 	// #483
  41fc54:	ldr	x4, [sp, #48]
  41fc58:	adrp	x5, 42e000 <_fini+0x43a8>
  41fc5c:	add	x5, x5, #0x2cf
  41fc60:	bl	405648 <log_internal_realm@plt>
  41fc64:	str	w0, [sp, #20]
  41fc68:	b	41fc80 <server_open_syslog_socket+0x44c>
  41fc6c:	ldur	w0, [x29, #-104]
  41fc70:	bl	405658 <abs@plt>
  41fc74:	mov	w8, wzr
  41fc78:	subs	w8, w8, w0, uxtb
  41fc7c:	str	w8, [sp, #20]
  41fc80:	ldr	w8, [sp, #20]
  41fc84:	str	w8, [sp, #112]
  41fc88:	ldr	w8, [sp, #112]
  41fc8c:	stur	w8, [x29, #-4]
  41fc90:	b	41fe04 <server_open_syslog_socket+0x5d0>
  41fc94:	ldur	x8, [x29, #-16]
  41fc98:	ldr	x0, [x8, #32]
  41fc9c:	ldur	x8, [x29, #-16]
  41fca0:	add	x1, x8, #0x28
  41fca4:	ldur	x8, [x29, #-16]
  41fca8:	ldr	w2, [x8]
  41fcac:	ldur	x5, [x29, #-16]
  41fcb0:	mov	w3, #0x1                   	// #1
  41fcb4:	adrp	x4, 44f000 <journald_gperf_lookup.wordlist+0x448>
  41fcb8:	ldr	x4, [x4, #1832]
  41fcbc:	bl	4058a8 <sd_event_add_io@plt>
  41fcc0:	stur	w0, [x29, #-20]
  41fcc4:	ldur	w9, [x29, #-20]
  41fcc8:	cmp	w9, #0x0
  41fccc:	cset	w9, ge  // ge = tcont
  41fcd0:	tbnz	w9, #0, 41fd58 <server_open_syslog_socket+0x524>
  41fcd4:	mov	w8, #0x3                   	// #3
  41fcd8:	str	w8, [sp, #108]
  41fcdc:	ldur	w8, [x29, #-20]
  41fce0:	str	w8, [sp, #104]
  41fce4:	str	wzr, [sp, #100]
  41fce8:	ldr	w0, [sp, #100]
  41fcec:	bl	405638 <log_get_max_level_realm@plt>
  41fcf0:	ldr	w8, [sp, #108]
  41fcf4:	and	w8, w8, #0x7
  41fcf8:	cmp	w0, w8
  41fcfc:	b.lt	41fd30 <server_open_syslog_socket+0x4fc>  // b.tstop
  41fd00:	ldr	w8, [sp, #100]
  41fd04:	ldr	w9, [sp, #108]
  41fd08:	orr	w0, w9, w8, lsl #10
  41fd0c:	ldr	w1, [sp, #104]
  41fd10:	ldr	x2, [sp, #56]
  41fd14:	mov	w3, #0x1e7                 	// #487
  41fd18:	ldr	x4, [sp, #48]
  41fd1c:	adrp	x5, 42e000 <_fini+0x43a8>
  41fd20:	add	x5, x5, #0x2e7
  41fd24:	bl	405648 <log_internal_realm@plt>
  41fd28:	str	w0, [sp, #16]
  41fd2c:	b	41fd44 <server_open_syslog_socket+0x510>
  41fd30:	ldr	w0, [sp, #104]
  41fd34:	bl	405658 <abs@plt>
  41fd38:	mov	w8, wzr
  41fd3c:	subs	w8, w8, w0, uxtb
  41fd40:	str	w8, [sp, #16]
  41fd44:	ldr	w8, [sp, #16]
  41fd48:	str	w8, [sp, #96]
  41fd4c:	ldr	w8, [sp, #96]
  41fd50:	stur	w8, [x29, #-4]
  41fd54:	b	41fe04 <server_open_syslog_socket+0x5d0>
  41fd58:	ldur	x8, [x29, #-16]
  41fd5c:	ldr	x0, [x8, #40]
  41fd60:	mov	x1, #0x5                   	// #5
  41fd64:	bl	4058b8 <sd_event_source_set_priority@plt>
  41fd68:	stur	w0, [x29, #-20]
  41fd6c:	ldur	w9, [x29, #-20]
  41fd70:	cmp	w9, #0x0
  41fd74:	cset	w9, ge  // ge = tcont
  41fd78:	tbnz	w9, #0, 41fe00 <server_open_syslog_socket+0x5cc>
  41fd7c:	mov	w8, #0x3                   	// #3
  41fd80:	str	w8, [sp, #92]
  41fd84:	ldur	w8, [x29, #-20]
  41fd88:	str	w8, [sp, #88]
  41fd8c:	str	wzr, [sp, #84]
  41fd90:	ldr	w0, [sp, #84]
  41fd94:	bl	405638 <log_get_max_level_realm@plt>
  41fd98:	ldr	w8, [sp, #92]
  41fd9c:	and	w8, w8, #0x7
  41fda0:	cmp	w0, w8
  41fda4:	b.lt	41fdd8 <server_open_syslog_socket+0x5a4>  // b.tstop
  41fda8:	ldr	w8, [sp, #84]
  41fdac:	ldr	w9, [sp, #92]
  41fdb0:	orr	w0, w9, w8, lsl #10
  41fdb4:	ldr	w1, [sp, #88]
  41fdb8:	ldr	x2, [sp, #56]
  41fdbc:	mov	w3, #0x1eb                 	// #491
  41fdc0:	ldr	x4, [sp, #48]
  41fdc4:	adrp	x5, 42e000 <_fini+0x43a8>
  41fdc8:	add	x5, x5, #0x318
  41fdcc:	bl	405648 <log_internal_realm@plt>
  41fdd0:	str	w0, [sp, #12]
  41fdd4:	b	41fdec <server_open_syslog_socket+0x5b8>
  41fdd8:	ldr	w0, [sp, #88]
  41fddc:	bl	405658 <abs@plt>
  41fde0:	mov	w8, wzr
  41fde4:	subs	w8, w8, w0, uxtb
  41fde8:	str	w8, [sp, #12]
  41fdec:	ldr	w8, [sp, #12]
  41fdf0:	str	w8, [sp, #80]
  41fdf4:	ldr	w8, [sp, #80]
  41fdf8:	stur	w8, [x29, #-4]
  41fdfc:	b	41fe04 <server_open_syslog_socket+0x5d0>
  41fe00:	stur	wzr, [x29, #-4]
  41fe04:	ldur	w0, [x29, #-4]
  41fe08:	ldp	x29, x30, [sp, #224]
  41fe0c:	add	sp, sp, #0xf0
  41fe10:	ret

000000000041fe14 <setsockopt_int>:
  41fe14:	sub	sp, sp, #0x30
  41fe18:	stp	x29, x30, [sp, #32]
  41fe1c:	add	x29, sp, #0x20
  41fe20:	mov	w4, #0x4                   	// #4
  41fe24:	add	x8, sp, #0xc
  41fe28:	stur	w0, [x29, #-8]
  41fe2c:	stur	w1, [x29, #-12]
  41fe30:	str	w2, [sp, #16]
  41fe34:	str	w3, [sp, #12]
  41fe38:	ldur	w0, [x29, #-8]
  41fe3c:	ldur	w1, [x29, #-12]
  41fe40:	ldr	w2, [sp, #16]
  41fe44:	mov	x3, x8
  41fe48:	bl	406168 <setsockopt@plt>
  41fe4c:	cmp	w0, #0x0
  41fe50:	cset	w9, ge  // ge = tcont
  41fe54:	tbnz	w9, #0, 41fe70 <setsockopt_int+0x5c>
  41fe58:	bl	405768 <__errno_location@plt>
  41fe5c:	ldr	w8, [x0]
  41fe60:	mov	w9, wzr
  41fe64:	subs	w8, w9, w8
  41fe68:	stur	w8, [x29, #-4]
  41fe6c:	b	41fe74 <setsockopt_int+0x60>
  41fe70:	stur	wzr, [x29, #-4]
  41fe74:	ldur	w0, [x29, #-4]
  41fe78:	ldp	x29, x30, [sp, #32]
  41fe7c:	add	sp, sp, #0x30
  41fe80:	ret

000000000041fe84 <server_maybe_warn_forward_syslog_missed>:
  41fe84:	sub	sp, sp, #0x30
  41fe88:	stp	x29, x30, [sp, #32]
  41fe8c:	add	x29, sp, #0x20
  41fe90:	adrp	x8, 42e000 <_fini+0x43a8>
  41fe94:	add	x8, x8, #0x39
  41fe98:	add	x2, x8, #0x3
  41fe9c:	stur	x0, [x29, #-8]
  41fea0:	str	x2, [sp, #8]
  41fea4:	ldur	x8, [x29, #-8]
  41fea8:	cmp	x8, #0x0
  41feac:	cset	w9, ne  // ne = any
  41feb0:	mov	w10, #0x1                   	// #1
  41feb4:	eor	w9, w9, #0x1
  41feb8:	eor	w9, w9, w10
  41febc:	eor	w9, w9, w10
  41fec0:	and	w9, w9, #0x1
  41fec4:	mov	w0, w9
  41fec8:	sxtw	x8, w0
  41fecc:	cbz	x8, 41fef4 <server_maybe_warn_forward_syslog_missed+0x70>
  41fed0:	mov	w8, wzr
  41fed4:	mov	w0, w8
  41fed8:	adrp	x1, 429000 <journal_ratelimit_group_free+0x70>
  41fedc:	add	x1, x1, #0xdc8
  41fee0:	ldr	x2, [sp, #8]
  41fee4:	mov	w3, #0x1f3                 	// #499
  41fee8:	adrp	x4, 42e000 <_fini+0x43a8>
  41feec:	add	x4, x4, #0x34a
  41fef0:	bl	405718 <log_assert_failed_realm@plt>
  41fef4:	ldur	x8, [x29, #-8]
  41fef8:	ldr	w9, [x8, #464]
  41fefc:	cmp	w9, #0x0
  41ff00:	cset	w9, hi  // hi = pmore
  41ff04:	tbnz	w9, #0, 41ff0c <server_maybe_warn_forward_syslog_missed+0x88>
  41ff08:	b	41ff80 <server_maybe_warn_forward_syslog_missed+0xfc>
  41ff0c:	mov	w0, #0x1                   	// #1
  41ff10:	bl	4056f8 <now@plt>
  41ff14:	str	x0, [sp, #16]
  41ff18:	ldur	x8, [x29, #-8]
  41ff1c:	ldr	x8, [x8, #472]
  41ff20:	mov	x9, #0xc380                	// #50048
  41ff24:	movk	x9, #0x1c9, lsl #16
  41ff28:	add	x8, x8, x9
  41ff2c:	ldr	x9, [sp, #16]
  41ff30:	cmp	x8, x9
  41ff34:	b.ls	41ff3c <server_maybe_warn_forward_syslog_missed+0xb8>  // b.plast
  41ff38:	b	41ff80 <server_maybe_warn_forward_syslog_missed+0xfc>
  41ff3c:	ldur	x0, [x29, #-8]
  41ff40:	ldur	x8, [x29, #-8]
  41ff44:	ldr	w4, [x8, #464]
  41ff48:	mov	w9, wzr
  41ff4c:	mov	w1, w9
  41ff50:	adrp	x2, 42e000 <_fini+0x43a8>
  41ff54:	add	x2, x2, #0x381
  41ff58:	adrp	x3, 42e000 <_fini+0x43a8>
  41ff5c:	add	x3, x3, #0x3ad
  41ff60:	mov	x8, xzr
  41ff64:	mov	x5, x8
  41ff68:	bl	409360 <server_driver_message>
  41ff6c:	ldur	x8, [x29, #-8]
  41ff70:	str	wzr, [x8, #464]
  41ff74:	ldr	x8, [sp, #16]
  41ff78:	ldur	x10, [x29, #-8]
  41ff7c:	str	x8, [x10, #472]
  41ff80:	ldp	x29, x30, [sp, #32]
  41ff84:	add	sp, sp, #0x30
  41ff88:	ret

000000000041ff8c <server_forward_wall>:
  41ff8c:	sub	sp, sp, #0x90
  41ff90:	stp	x29, x30, [sp, #128]
  41ff94:	add	x29, sp, #0x80
  41ff98:	mov	x8, xzr
  41ff9c:	adrp	x9, 42e000 <_fini+0x43a8>
  41ffa0:	add	x9, x9, #0x53a
  41ffa4:	add	x9, x9, #0x3
  41ffa8:	adrp	x10, 42e000 <_fini+0x43a8>
  41ffac:	add	x10, x10, #0x5be
  41ffb0:	stur	x0, [x29, #-8]
  41ffb4:	stur	w1, [x29, #-12]
  41ffb8:	stur	x2, [x29, #-24]
  41ffbc:	stur	x3, [x29, #-32]
  41ffc0:	stur	x4, [x29, #-40]
  41ffc4:	stur	x8, [x29, #-48]
  41ffc8:	stur	x8, [x29, #-56]
  41ffcc:	str	x9, [sp, #32]
  41ffd0:	str	x10, [sp, #24]
  41ffd4:	ldur	x8, [x29, #-8]
  41ffd8:	cmp	x8, #0x0
  41ffdc:	cset	w9, ne  // ne = any
  41ffe0:	mov	w10, #0x1                   	// #1
  41ffe4:	eor	w9, w9, #0x1
  41ffe8:	eor	w9, w9, w10
  41ffec:	eor	w9, w9, w10
  41fff0:	and	w9, w9, #0x1
  41fff4:	mov	w0, w9
  41fff8:	sxtw	x8, w0
  41fffc:	cbz	x8, 420024 <server_forward_wall+0x98>
  420000:	mov	w8, wzr
  420004:	mov	w0, w8
  420008:	adrp	x1, 429000 <journal_ratelimit_group_free+0x70>
  42000c:	add	x1, x1, #0xdc8
  420010:	ldr	x2, [sp, #32]
  420014:	mov	w3, #0x16                  	// #22
  420018:	adrp	x4, 42e000 <_fini+0x43a8>
  42001c:	add	x4, x4, #0x559
  420020:	bl	405718 <log_assert_failed_realm@plt>
  420024:	ldur	x8, [x29, #-32]
  420028:	cmp	x8, #0x0
  42002c:	cset	w9, ne  // ne = any
  420030:	mov	w10, #0x1                   	// #1
  420034:	eor	w9, w9, #0x1
  420038:	eor	w9, w9, w10
  42003c:	eor	w9, w9, w10
  420040:	and	w9, w9, #0x1
  420044:	mov	w0, w9
  420048:	sxtw	x8, w0
  42004c:	cbz	x8, 420074 <server_forward_wall+0xe8>
  420050:	mov	w8, wzr
  420054:	mov	w0, w8
  420058:	adrp	x1, 429000 <journal_ratelimit_group_free+0x70>
  42005c:	add	x1, x1, #0xe61
  420060:	ldr	x2, [sp, #32]
  420064:	mov	w3, #0x17                  	// #23
  420068:	adrp	x4, 42e000 <_fini+0x43a8>
  42006c:	add	x4, x4, #0x559
  420070:	bl	405718 <log_assert_failed_realm@plt>
  420074:	ldur	w8, [x29, #-12]
  420078:	and	w8, w8, #0x7
  42007c:	ldur	x9, [x29, #-8]
  420080:	ldr	w10, [x9, #552]
  420084:	cmp	w8, w10
  420088:	b.le	420098 <server_forward_wall+0x10c>
  42008c:	mov	w8, #0x1                   	// #1
  420090:	str	w8, [sp, #56]
  420094:	b	420244 <server_forward_wall+0x2b8>
  420098:	ldur	x8, [x29, #-40]
  42009c:	cbz	x8, 42012c <server_forward_wall+0x1a0>
  4200a0:	ldur	x8, [x29, #-24]
  4200a4:	cbnz	x8, 4200c0 <server_forward_wall+0x134>
  4200a8:	ldur	x8, [x29, #-40]
  4200ac:	ldr	w0, [x8]
  4200b0:	sub	x1, x29, #0x30
  4200b4:	bl	405748 <get_process_comm@plt>
  4200b8:	ldur	x8, [x29, #-48]
  4200bc:	stur	x8, [x29, #-24]
  4200c0:	ldur	x0, [x29, #-24]
  4200c4:	bl	420288 <strempty>
  4200c8:	ldur	x8, [x29, #-40]
  4200cc:	ldr	w3, [x8]
  4200d0:	ldur	x4, [x29, #-32]
  4200d4:	sub	x8, x29, #0x38
  4200d8:	str	x0, [sp, #16]
  4200dc:	mov	x0, x8
  4200e0:	adrp	x1, 42e000 <_fini+0x43a8>
  4200e4:	add	x1, x1, #0x5b3
  4200e8:	ldr	x2, [sp, #16]
  4200ec:	bl	405828 <asprintf@plt>
  4200f0:	cmp	w0, #0x0
  4200f4:	cset	w9, ge  // ge = tcont
  4200f8:	tbnz	w9, #0, 420120 <server_forward_wall+0x194>
  4200fc:	mov	w8, wzr
  420100:	mov	w0, w8
  420104:	ldr	x1, [sp, #32]
  420108:	mov	w2, #0x23                  	// #35
  42010c:	ldr	x3, [sp, #24]
  420110:	bl	405958 <log_oom_internal@plt>
  420114:	mov	w8, #0x1                   	// #1
  420118:	str	w8, [sp, #56]
  42011c:	b	420244 <server_forward_wall+0x2b8>
  420120:	ldur	x8, [x29, #-56]
  420124:	str	x8, [sp, #64]
  420128:	b	420190 <server_forward_wall+0x204>
  42012c:	ldur	x8, [x29, #-24]
  420130:	cbz	x8, 420188 <server_forward_wall+0x1fc>
  420134:	ldur	x0, [x29, #-24]
  420138:	ldur	x2, [x29, #-32]
  42013c:	adrp	x1, 429000 <journal_ratelimit_group_free+0x70>
  420140:	add	x1, x1, #0xece
  420144:	mov	x8, xzr
  420148:	mov	x3, x8
  42014c:	bl	4057e8 <strjoin_real@plt>
  420150:	stur	x0, [x29, #-56]
  420154:	str	x0, [sp, #64]
  420158:	ldur	x8, [x29, #-56]
  42015c:	cbnz	x8, 420184 <server_forward_wall+0x1f8>
  420160:	mov	w8, wzr
  420164:	mov	w0, w8
  420168:	ldr	x1, [sp, #32]
  42016c:	mov	w2, #0x2d                  	// #45
  420170:	ldr	x3, [sp, #24]
  420174:	bl	405958 <log_oom_internal@plt>
  420178:	mov	w8, #0x1                   	// #1
  42017c:	str	w8, [sp, #56]
  420180:	b	420244 <server_forward_wall+0x2b8>
  420184:	b	420190 <server_forward_wall+0x204>
  420188:	ldur	x8, [x29, #-32]
  42018c:	str	x8, [sp, #64]
  420190:	ldr	x0, [sp, #64]
  420194:	adrp	x1, 42e000 <_fini+0x43a8>
  420198:	add	x1, x1, #0x5d2
  42019c:	mov	x8, xzr
  4201a0:	mov	x2, x8
  4201a4:	str	x2, [sp, #8]
  4201a8:	mov	x3, x8
  4201ac:	ldr	x4, [sp, #8]
  4201b0:	bl	406388 <utmp_wall@plt>
  4201b4:	str	w0, [sp, #60]
  4201b8:	ldr	w9, [sp, #60]
  4201bc:	cmp	w9, #0x0
  4201c0:	cset	w9, ge  // ge = tcont
  4201c4:	tbnz	w9, #0, 420240 <server_forward_wall+0x2b4>
  4201c8:	mov	w8, #0x7                   	// #7
  4201cc:	str	w8, [sp, #52]
  4201d0:	ldr	w8, [sp, #60]
  4201d4:	str	w8, [sp, #48]
  4201d8:	str	wzr, [sp, #44]
  4201dc:	ldr	w0, [sp, #44]
  4201e0:	bl	405638 <log_get_max_level_realm@plt>
  4201e4:	ldr	w8, [sp, #52]
  4201e8:	and	w8, w8, #0x7
  4201ec:	cmp	w0, w8
  4201f0:	b.lt	420224 <server_forward_wall+0x298>  // b.tstop
  4201f4:	ldr	w8, [sp, #44]
  4201f8:	ldr	w9, [sp, #52]
  4201fc:	orr	w0, w9, w8, lsl #10
  420200:	ldr	w1, [sp, #48]
  420204:	ldr	x2, [sp, #32]
  420208:	mov	w3, #0x35                  	// #53
  42020c:	ldr	x4, [sp, #24]
  420210:	adrp	x5, 42e000 <_fini+0x43a8>
  420214:	add	x5, x5, #0x5e3
  420218:	bl	405648 <log_internal_realm@plt>
  42021c:	str	w0, [sp, #4]
  420220:	b	420238 <server_forward_wall+0x2ac>
  420224:	ldr	w0, [sp, #48]
  420228:	bl	405658 <abs@plt>
  42022c:	mov	w8, wzr
  420230:	subs	w8, w8, w0, uxtb
  420234:	str	w8, [sp, #4]
  420238:	ldr	w8, [sp, #4]
  42023c:	str	w8, [sp, #40]
  420240:	str	wzr, [sp, #56]
  420244:	sub	x0, x29, #0x38
  420248:	bl	420260 <freep>
  42024c:	sub	x0, x29, #0x30
  420250:	bl	420260 <freep>
  420254:	ldp	x29, x30, [sp, #128]
  420258:	add	sp, sp, #0x90
  42025c:	ret

0000000000420260 <freep>:
  420260:	sub	sp, sp, #0x20
  420264:	stp	x29, x30, [sp, #16]
  420268:	add	x29, sp, #0x10
  42026c:	str	x0, [sp, #8]
  420270:	ldr	x8, [sp, #8]
  420274:	ldr	x0, [x8]
  420278:	bl	405778 <free@plt>
  42027c:	ldp	x29, x30, [sp, #16]
  420280:	add	sp, sp, #0x20
  420284:	ret

0000000000420288 <strempty>:
  420288:	sub	sp, sp, #0x20
  42028c:	str	x0, [sp, #24]
  420290:	ldr	x8, [sp, #24]
  420294:	str	x8, [sp, #16]
  420298:	cbz	x8, 4202a8 <strempty+0x20>
  42029c:	ldr	x8, [sp, #16]
  4202a0:	str	x8, [sp, #8]
  4202a4:	b	4202b4 <strempty+0x2c>
  4202a8:	adrp	x8, 42e000 <_fini+0x43a8>
  4202ac:	add	x8, x8, #0x603
  4202b0:	str	x8, [sp, #8]
  4202b4:	ldr	x8, [sp, #8]
  4202b8:	mov	x0, x8
  4202bc:	add	sp, sp, #0x20
  4202c0:	ret

00000000004202c4 <journald_gperf_lookup>:
  4202c4:	sub	sp, sp, #0x40
  4202c8:	stp	x29, x30, [sp, #48]
  4202cc:	add	x29, sp, #0x30
  4202d0:	stur	x0, [x29, #-16]
  4202d4:	str	x1, [sp, #24]
  4202d8:	ldr	x8, [sp, #24]
  4202dc:	cmp	x8, #0x1c
  4202e0:	b.hi	42038c <journald_gperf_lookup+0xc8>  // b.pmore
  4202e4:	ldr	x8, [sp, #24]
  4202e8:	cmp	x8, #0xc
  4202ec:	b.cc	42038c <journald_gperf_lookup+0xc8>  // b.lo, b.ul, b.last
  4202f0:	ldur	x0, [x29, #-16]
  4202f4:	ldr	x1, [sp, #24]
  4202f8:	bl	4203a4 <journald_gperf_hash>
  4202fc:	str	w0, [sp, #20]
  420300:	ldr	w8, [sp, #20]
  420304:	cmp	w8, #0x35
  420308:	b.hi	42038c <journald_gperf_lookup+0xc8>  // b.pmore
  42030c:	ldr	w8, [sp, #20]
  420310:	mov	w9, w8
  420314:	mov	x10, #0x20                  	// #32
  420318:	mul	x9, x10, x9
  42031c:	adrp	x10, 44e000 <__FRAME_END__+0x1d1c8>
  420320:	add	x10, x10, #0xbb8
  420324:	add	x9, x10, x9
  420328:	ldr	x9, [x9]
  42032c:	str	x9, [sp, #8]
  420330:	ldr	x9, [sp, #8]
  420334:	cbz	x9, 42038c <journald_gperf_lookup+0xc8>
  420338:	ldur	x8, [x29, #-16]
  42033c:	ldrb	w9, [x8]
  420340:	ldr	x8, [sp, #8]
  420344:	ldrb	w10, [x8]
  420348:	cmp	w9, w10
  42034c:	b.ne	42038c <journald_gperf_lookup+0xc8>  // b.any
  420350:	ldur	x8, [x29, #-16]
  420354:	add	x0, x8, #0x1
  420358:	ldr	x8, [sp, #8]
  42035c:	add	x1, x8, #0x1
  420360:	bl	405868 <strcmp@plt>
  420364:	cbnz	w0, 42038c <journald_gperf_lookup+0xc8>
  420368:	ldr	w8, [sp, #20]
  42036c:	mov	w9, w8
  420370:	mov	x10, #0x20                  	// #32
  420374:	mul	x9, x10, x9
  420378:	adrp	x10, 44e000 <__FRAME_END__+0x1d1c8>
  42037c:	add	x10, x10, #0xbb8
  420380:	add	x9, x10, x9
  420384:	stur	x9, [x29, #-8]
  420388:	b	420394 <journald_gperf_lookup+0xd0>
  42038c:	mov	x8, xzr
  420390:	stur	x8, [x29, #-8]
  420394:	ldur	x0, [x29, #-8]
  420398:	ldp	x29, x30, [sp, #48]
  42039c:	add	sp, sp, #0x40
  4203a0:	ret

00000000004203a4 <journald_gperf_hash>:
  4203a4:	sub	sp, sp, #0x20
  4203a8:	str	x0, [sp, #24]
  4203ac:	str	x1, [sp, #16]
  4203b0:	ldr	x8, [sp, #16]
  4203b4:	str	w8, [sp, #12]
  4203b8:	ldr	w8, [sp, #12]
  4203bc:	subs	w8, w8, #0x9
  4203c0:	cmp	w8, #0x8
  4203c4:	b.ls	4203f0 <journald_gperf_hash+0x4c>  // b.plast
  4203c8:	b	4203cc <journald_gperf_hash+0x28>
  4203cc:	ldr	x8, [sp, #24]
  4203d0:	ldrb	w9, [x8, #17]
  4203d4:	mov	w8, w9
  4203d8:	adrp	x10, 430000 <_fini+0x63a8>
  4203dc:	add	x10, x10, #0xa00
  4203e0:	ldrb	w9, [x10, x8]
  4203e4:	ldr	w11, [sp, #12]
  4203e8:	add	w9, w11, w9
  4203ec:	str	w9, [sp, #12]
  4203f0:	ldr	x8, [sp, #24]
  4203f4:	ldrb	w9, [x8, #8]
  4203f8:	mov	w8, w9
  4203fc:	adrp	x10, 430000 <_fini+0x63a8>
  420400:	add	x10, x10, #0xa00
  420404:	ldrb	w9, [x10, x8]
  420408:	ldr	w11, [sp, #12]
  42040c:	add	w9, w11, w9
  420410:	str	w9, [sp, #12]
  420414:	ldr	w0, [sp, #12]
  420418:	add	sp, sp, #0x20
  42041c:	ret

0000000000420420 <process_audit_string>:
  420420:	stp	x29, x30, [sp, #-32]!
  420424:	stp	x28, x19, [sp, #16]
  420428:	mov	x29, sp
  42042c:	sub	sp, sp, #0x2e0
  420430:	mov	x19, sp
  420434:	mov	x8, xzr
  420438:	adrp	x9, 42e000 <_fini+0x43a8>
  42043c:	add	x9, x9, #0x890
  420440:	add	x9, x9, #0x3
  420444:	adrp	x10, 42b000 <_fini+0x13a8>
  420448:	add	x10, x10, #0x8a1
  42044c:	adrp	x11, 42e000 <_fini+0x43a8>
  420450:	add	x11, x11, #0x8b0
  420454:	adrp	x12, 42b000 <_fini+0x13a8>
  420458:	add	x12, x12, #0x876
  42045c:	stur	x0, [x29, #-8]
  420460:	stur	w1, [x29, #-12]
  420464:	stur	x2, [x29, #-24]
  420468:	stur	x3, [x29, #-32]
  42046c:	stur	xzr, [x29, #-40]
  420470:	stur	xzr, [x29, #-48]
  420474:	stur	x8, [x29, #-64]
  420478:	str	x9, [x19, #168]
  42047c:	str	x10, [x19, #160]
  420480:	str	x11, [x19, #152]
  420484:	str	x12, [x19, #144]
  420488:	ldur	x8, [x29, #-8]
  42048c:	cmp	x8, #0x0
  420490:	cset	w9, ne  // ne = any
  420494:	mov	w10, #0x1                   	// #1
  420498:	eor	w9, w9, #0x1
  42049c:	eor	w9, w9, w10
  4204a0:	eor	w9, w9, w10
  4204a4:	and	w9, w9, #0x1
  4204a8:	mov	w0, w9
  4204ac:	sxtw	x8, w0
  4204b0:	cbz	x8, 4204d4 <process_audit_string+0xb4>
  4204b4:	mov	w8, wzr
  4204b8:	mov	w0, w8
  4204bc:	adrp	x1, 429000 <journal_ratelimit_group_free+0x70>
  4204c0:	add	x1, x1, #0xdc8
  4204c4:	ldr	x2, [x19, #168]
  4204c8:	mov	w3, #0x14a                 	// #330
  4204cc:	ldr	x4, [x19, #152]
  4204d0:	bl	405718 <log_assert_failed_realm@plt>
  4204d4:	ldur	x8, [x29, #-32]
  4204d8:	cmp	x8, #0x0
  4204dc:	cset	w9, hi  // hi = pmore
  4204e0:	tbnz	w9, #0, 4204f0 <process_audit_string+0xd0>
  4204e4:	mov	w8, #0x1                   	// #1
  4204e8:	stur	w8, [x29, #-240]
  4204ec:	b	420e7c <process_audit_string+0xa5c>
  4204f0:	ldur	x8, [x29, #-24]
  4204f4:	cbnz	x8, 420504 <process_audit_string+0xe4>
  4204f8:	mov	w8, #0x1                   	// #1
  4204fc:	stur	w8, [x29, #-240]
  420500:	b	420e7c <process_audit_string+0xa5c>
  420504:	ldur	x0, [x29, #-24]
  420508:	ldur	x2, [x29, #-32]
  42050c:	mov	w8, wzr
  420510:	mov	w1, w8
  420514:	bl	405788 <memchr@plt>
  420518:	cbz	x0, 420528 <process_audit_string+0x108>
  42051c:	mov	w8, #0x1                   	// #1
  420520:	stur	w8, [x29, #-240]
  420524:	b	420e7c <process_audit_string+0xa5c>
  420528:	ldur	x0, [x29, #-24]
  42052c:	adrp	x1, 42e000 <_fini+0x43a8>
  420530:	add	x1, x1, #0x8ef
  420534:	bl	420ebc <startswith>
  420538:	stur	x0, [x29, #-96]
  42053c:	ldur	x8, [x29, #-96]
  420540:	cbnz	x8, 420550 <process_audit_string+0x130>
  420544:	mov	w8, #0x1                   	// #1
  420548:	stur	w8, [x29, #-240]
  42054c:	b	420e7c <process_audit_string+0xa5c>
  420550:	sub	x5, x29, #0xec
  420554:	stur	wzr, [x29, #-236]
  420558:	ldur	x0, [x29, #-96]
  42055c:	adrp	x1, 42e000 <_fini+0x43a8>
  420560:	add	x1, x1, #0x8f5
  420564:	sub	x2, x29, #0x48
  420568:	sub	x3, x29, #0x50
  42056c:	sub	x4, x29, #0x58
  420570:	bl	406188 <__isoc99_sscanf@plt>
  420574:	cmp	w0, #0x3
  420578:	b.ne	420584 <process_audit_string+0x164>  // b.any
  42057c:	ldur	w8, [x29, #-236]
  420580:	cbnz	w8, 420590 <process_audit_string+0x170>
  420584:	mov	w8, #0x1                   	// #1
  420588:	stur	w8, [x29, #-240]
  42058c:	b	420e7c <process_audit_string+0xa5c>
  420590:	ldursw	x8, [x29, #-236]
  420594:	ldur	x9, [x29, #-96]
  420598:	add	x8, x9, x8
  42059c:	stur	x8, [x29, #-96]
  4205a0:	ldur	x0, [x29, #-96]
  4205a4:	adrp	x1, 42e000 <_fini+0x43a8>
  4205a8:	add	x1, x1, #0x12b
  4205ac:	bl	406348 <strspn@plt>
  4205b0:	ldur	x8, [x29, #-96]
  4205b4:	add	x8, x8, x0
  4205b8:	stur	x8, [x29, #-96]
  4205bc:	ldur	x0, [x29, #-96]
  4205c0:	bl	420f1c <isempty>
  4205c4:	tbnz	w0, #0, 4205cc <process_audit_string+0x1ac>
  4205c8:	b	4205d8 <process_audit_string+0x1b8>
  4205cc:	mov	w8, #0x1                   	// #1
  4205d0:	stur	w8, [x29, #-240]
  4205d4:	b	420e7c <process_audit_string+0xa5c>
  4205d8:	mov	x8, #0x1e                  	// #30
  4205dc:	stur	x8, [x29, #-40]
  4205e0:	ldur	x1, [x29, #-40]
  4205e4:	mov	x0, #0x10                  	// #16
  4205e8:	bl	420f5c <malloc_multiply>
  4205ec:	stur	x0, [x29, #-64]
  4205f0:	ldur	x8, [x29, #-64]
  4205f4:	cbnz	x8, 420620 <process_audit_string+0x200>
  4205f8:	mov	w8, wzr
  4205fc:	mov	w0, w8
  420600:	ldr	x1, [x19, #168]
  420604:	mov	w2, #0x16c                 	// #364
  420608:	adrp	x3, 42e000 <_fini+0x43a8>
  42060c:	add	x3, x3, #0x906
  420610:	bl	405958 <log_oom_internal@plt>
  420614:	mov	w8, #0x1                   	// #1
  420618:	stur	w8, [x29, #-240]
  42061c:	b	420e7c <process_audit_string+0xa5c>
  420620:	ldur	x8, [x29, #-64]
  420624:	ldur	x9, [x29, #-48]
  420628:	add	x10, x9, #0x1
  42062c:	stur	x10, [x29, #-48]
  420630:	adrp	x10, 42e000 <_fini+0x43a8>
  420634:	add	x10, x10, #0x91b
  420638:	stur	x10, [x29, #-256]
  42063c:	mov	x10, #0x10                  	// #16
  420640:	stur	x10, [x29, #-248]
  420644:	ldur	q0, [x29, #-256]
  420648:	str	q0, [x8, x9, lsl #4]
  42064c:	ldur	x8, [x29, #-72]
  420650:	mov	x9, #0x4240                	// #16960
  420654:	movk	x9, #0xf, lsl #16
  420658:	mul	x8, x8, x9
  42065c:	ldur	x9, [x29, #-80]
  420660:	mov	x10, #0x3e8                 	// #1000
  420664:	mul	x9, x9, x10
  420668:	add	x2, x8, x9
  42066c:	sub	x8, x29, #0xd4
  420670:	mov	x0, x8
  420674:	adrp	x1, 42b000 <_fini+0x13a8>
  420678:	add	x1, x1, #0xb52
  42067c:	str	x8, [x19, #136]
  420680:	bl	405ab8 <sprintf@plt>
  420684:	ldur	x8, [x29, #-64]
  420688:	ldur	x9, [x29, #-48]
  42068c:	add	x10, x9, #0x1
  420690:	stur	x10, [x29, #-48]
  420694:	ldr	x10, [x19, #136]
  420698:	str	x10, [x19, #464]
  42069c:	mov	x0, x10
  4206a0:	str	x8, [x19, #128]
  4206a4:	str	x9, [x19, #120]
  4206a8:	bl	405738 <strlen@plt>
  4206ac:	str	x0, [x19, #472]
  4206b0:	ldr	q0, [x19, #464]
  4206b4:	ldr	x8, [x19, #128]
  4206b8:	ldr	x9, [x19, #120]
  4206bc:	str	q0, [x8, x9, lsl #4]
  4206c0:	ldur	w2, [x29, #-12]
  4206c4:	sub	x10, x29, #0xa2
  4206c8:	mov	x0, x10
  4206cc:	adrp	x1, 42e000 <_fini+0x43a8>
  4206d0:	add	x1, x1, #0x92c
  4206d4:	str	x10, [x19, #112]
  4206d8:	bl	405ab8 <sprintf@plt>
  4206dc:	ldur	x8, [x29, #-64]
  4206e0:	ldur	x9, [x29, #-48]
  4206e4:	add	x10, x9, #0x1
  4206e8:	stur	x10, [x29, #-48]
  4206ec:	ldr	x10, [x19, #112]
  4206f0:	str	x10, [x19, #448]
  4206f4:	mov	x0, x10
  4206f8:	str	x8, [x19, #104]
  4206fc:	str	x9, [x19, #96]
  420700:	bl	405738 <strlen@plt>
  420704:	str	x0, [x19, #456]
  420708:	ldr	q0, [x19, #448]
  42070c:	ldr	x8, [x19, #104]
  420710:	ldr	x9, [x19, #96]
  420714:	str	q0, [x8, x9, lsl #4]
  420718:	ldur	x2, [x29, #-88]
  42071c:	sub	x10, x29, #0x89
  420720:	mov	x0, x10
  420724:	adrp	x1, 42e000 <_fini+0x43a8>
  420728:	add	x1, x1, #0x93b
  42072c:	str	x10, [x19, #88]
  420730:	bl	405ab8 <sprintf@plt>
  420734:	ldur	x8, [x29, #-64]
  420738:	ldur	x9, [x29, #-48]
  42073c:	add	x10, x9, #0x1
  420740:	stur	x10, [x29, #-48]
  420744:	ldr	x10, [x19, #88]
  420748:	str	x10, [x19, #432]
  42074c:	mov	x0, x10
  420750:	str	x8, [x19, #80]
  420754:	str	x9, [x19, #72]
  420758:	bl	405738 <strlen@plt>
  42075c:	str	x0, [x19, #440]
  420760:	ldr	q0, [x19, #432]
  420764:	ldr	x8, [x19, #80]
  420768:	ldr	x9, [x19, #72]
  42076c:	str	q0, [x8, x9, lsl #4]
  420770:	ldur	x10, [x29, #-64]
  420774:	ldur	x11, [x29, #-48]
  420778:	add	x12, x11, #0x1
  42077c:	stur	x12, [x29, #-48]
  420780:	adrp	x12, 42e000 <_fini+0x43a8>
  420784:	add	x12, x12, #0x949
  420788:	str	x12, [x19, #416]
  42078c:	mov	x12, #0x11                  	// #17
  420790:	str	x12, [x19, #424]
  420794:	ldr	q0, [x19, #416]
  420798:	str	q0, [x10, x11, lsl #4]
  42079c:	ldur	x10, [x29, #-64]
  4207a0:	ldur	x11, [x29, #-48]
  4207a4:	add	x12, x11, #0x1
  4207a8:	stur	x12, [x29, #-48]
  4207ac:	adrp	x12, 42e000 <_fini+0x43a8>
  4207b0:	add	x12, x12, #0x95b
  4207b4:	str	x12, [x19, #400]
  4207b8:	mov	x12, #0x17                  	// #23
  4207bc:	str	x12, [x19, #408]
  4207c0:	ldr	q0, [x19, #400]
  4207c4:	str	q0, [x10, x11, lsl #4]
  4207c8:	ldur	w0, [x29, #-12]
  4207cc:	bl	406408 <audit_type_to_string@plt>
  4207d0:	str	x0, [x19, #392]
  4207d4:	ldr	x8, [x19, #392]
  4207d8:	cbnz	x8, 4208c4 <process_audit_string+0x4a4>
  4207dc:	mov	x8, #0x11                  	// #17
  4207e0:	str	x8, [x19, #384]
  4207e4:	ldr	x1, [x19, #384]
  4207e8:	mov	x0, #0x1                   	// #1
  4207ec:	bl	420fd8 <size_multiply_overflow>
  4207f0:	mov	w8, #0x1                   	// #1
  4207f4:	eor	w9, w0, #0x1
  4207f8:	eor	w9, w9, w8
  4207fc:	eor	w9, w9, w8
  420800:	eor	w8, w9, w8
  420804:	and	w8, w8, #0x1
  420808:	mov	w1, w8
  42080c:	sxtw	x10, w1
  420810:	cbz	x10, 420830 <process_audit_string+0x410>
  420814:	mov	w8, wzr
  420818:	mov	w0, w8
  42081c:	ldr	x1, [x19, #144]
  420820:	ldr	x2, [x19, #168]
  420824:	mov	w3, #0x180                 	// #384
  420828:	ldr	x4, [x19, #152]
  42082c:	bl	405718 <log_assert_failed_realm@plt>
  420830:	ldr	x8, [x19, #384]
  420834:	mov	x9, #0x1                   	// #1
  420838:	mul	x8, x9, x8
  42083c:	cmp	x8, #0x400, lsl #12
  420840:	cset	w10, ls  // ls = plast
  420844:	mov	w11, #0x1                   	// #1
  420848:	eor	w10, w10, #0x1
  42084c:	eor	w10, w10, w11
  420850:	eor	w10, w10, w11
  420854:	and	w10, w10, #0x1
  420858:	mov	w0, w10
  42085c:	sxtw	x8, w0
  420860:	cbz	x8, 420880 <process_audit_string+0x460>
  420864:	mov	w8, wzr
  420868:	mov	w0, w8
  42086c:	ldr	x1, [x19, #160]
  420870:	ldr	x2, [x19, #168]
  420874:	mov	w3, #0x180                 	// #384
  420878:	ldr	x4, [x19, #152]
  42087c:	bl	405718 <log_assert_failed_realm@plt>
  420880:	ldr	x8, [x19, #384]
  420884:	mov	x9, #0x1                   	// #1
  420888:	mul	x8, x9, x8
  42088c:	mul	x8, x8, x9
  420890:	add	x8, x8, #0xf
  420894:	and	x8, x8, #0xfffffffffffffff0
  420898:	mov	x9, sp
  42089c:	subs	x8, x9, x8
  4208a0:	mov	sp, x8
  4208a4:	str	x8, [x19, #376]
  4208a8:	ldr	x8, [x19, #376]
  4208ac:	str	x8, [x19, #392]
  4208b0:	ldr	x0, [x19, #392]
  4208b4:	ldur	w2, [x29, #-12]
  4208b8:	adrp	x1, 42e000 <_fini+0x43a8>
  4208bc:	add	x1, x1, #0x973
  4208c0:	bl	405ab8 <sprintf@plt>
  4208c4:	ldr	x8, [x19, #392]
  4208c8:	str	x8, [x19, #368]
  4208cc:	ldr	x8, [x19, #368]
  4208d0:	stur	x8, [x29, #-104]
  4208d4:	add	x8, x19, #0x160
  4208d8:	adrp	x9, 42e000 <_fini+0x43a8>
  4208dc:	add	x9, x9, #0x97d
  4208e0:	str	x9, [x19, #352]
  4208e4:	ldur	x9, [x29, #-104]
  4208e8:	str	x9, [x8, #8]
  4208ec:	str	xzr, [x19, #328]
  4208f0:	str	xzr, [x19, #320]
  4208f4:	ldr	x8, [x19, #320]
  4208f8:	mov	w9, #0x0                   	// #0
  4208fc:	cmp	x8, #0x2
  420900:	str	w9, [x19, #68]
  420904:	b.cs	42092c <process_audit_string+0x50c>  // b.hs, b.nlast
  420908:	ldr	x8, [x19, #320]
  42090c:	mov	x9, #0x8                   	// #8
  420910:	mul	x8, x9, x8
  420914:	add	x9, x19, #0x160
  420918:	add	x8, x9, x8
  42091c:	ldr	x8, [x8]
  420920:	cmp	x8, #0x0
  420924:	cset	w10, ne  // ne = any
  420928:	str	w10, [x19, #68]
  42092c:	ldr	w8, [x19, #68]
  420930:	tbnz	w8, #0, 420938 <process_audit_string+0x518>
  420934:	b	420970 <process_audit_string+0x550>
  420938:	ldr	x8, [x19, #320]
  42093c:	mov	x9, #0x8                   	// #8
  420940:	mul	x8, x9, x8
  420944:	add	x9, x19, #0x160
  420948:	add	x8, x9, x8
  42094c:	ldr	x0, [x8]
  420950:	bl	405738 <strlen@plt>
  420954:	ldr	x8, [x19, #328]
  420958:	add	x8, x8, x0
  42095c:	str	x8, [x19, #328]
  420960:	ldr	x8, [x19, #320]
  420964:	add	x8, x8, #0x1
  420968:	str	x8, [x19, #320]
  42096c:	b	4208f4 <process_audit_string+0x4d4>
  420970:	ldr	x8, [x19, #328]
  420974:	add	x8, x8, #0x1
  420978:	str	x8, [x19, #312]
  42097c:	ldr	x1, [x19, #312]
  420980:	mov	x0, #0x1                   	// #1
  420984:	bl	420fd8 <size_multiply_overflow>
  420988:	mov	w8, #0x1                   	// #1
  42098c:	eor	w9, w0, #0x1
  420990:	eor	w9, w9, w8
  420994:	eor	w9, w9, w8
  420998:	eor	w8, w9, w8
  42099c:	and	w8, w8, #0x1
  4209a0:	mov	w1, w8
  4209a4:	sxtw	x10, w1
  4209a8:	cbz	x10, 4209c8 <process_audit_string+0x5a8>
  4209ac:	mov	w8, wzr
  4209b0:	mov	w0, w8
  4209b4:	ldr	x1, [x19, #144]
  4209b8:	ldr	x2, [x19, #168]
  4209bc:	mov	w3, #0x182                 	// #386
  4209c0:	ldr	x4, [x19, #152]
  4209c4:	bl	405718 <log_assert_failed_realm@plt>
  4209c8:	ldr	x8, [x19, #312]
  4209cc:	mov	x9, #0x1                   	// #1
  4209d0:	mul	x8, x9, x8
  4209d4:	cmp	x8, #0x400, lsl #12
  4209d8:	cset	w10, ls  // ls = plast
  4209dc:	mov	w11, #0x1                   	// #1
  4209e0:	eor	w10, w10, #0x1
  4209e4:	eor	w10, w10, w11
  4209e8:	eor	w10, w10, w11
  4209ec:	and	w10, w10, #0x1
  4209f0:	mov	w0, w10
  4209f4:	sxtw	x8, w0
  4209f8:	cbz	x8, 420a18 <process_audit_string+0x5f8>
  4209fc:	mov	w8, wzr
  420a00:	mov	w0, w8
  420a04:	ldr	x1, [x19, #160]
  420a08:	ldr	x2, [x19, #168]
  420a0c:	mov	w3, #0x182                 	// #386
  420a10:	ldr	x4, [x19, #152]
  420a14:	bl	405718 <log_assert_failed_realm@plt>
  420a18:	ldr	x8, [x19, #312]
  420a1c:	mov	x9, #0x1                   	// #1
  420a20:	mul	x8, x9, x8
  420a24:	mul	x8, x8, x9
  420a28:	add	x8, x8, #0xf
  420a2c:	and	x8, x8, #0xfffffffffffffff0
  420a30:	mov	x9, sp
  420a34:	subs	x8, x9, x8
  420a38:	mov	sp, x8
  420a3c:	str	x8, [x19, #304]
  420a40:	ldr	x8, [x19, #304]
  420a44:	str	x8, [x19, #344]
  420a48:	str	x8, [x19, #336]
  420a4c:	str	xzr, [x19, #320]
  420a50:	ldr	x8, [x19, #320]
  420a54:	mov	w9, #0x0                   	// #0
  420a58:	cmp	x8, #0x2
  420a5c:	str	w9, [x19, #64]
  420a60:	b.cs	420a88 <process_audit_string+0x668>  // b.hs, b.nlast
  420a64:	ldr	x8, [x19, #320]
  420a68:	mov	x9, #0x8                   	// #8
  420a6c:	mul	x8, x9, x8
  420a70:	add	x9, x19, #0x160
  420a74:	add	x8, x9, x8
  420a78:	ldr	x8, [x8]
  420a7c:	cmp	x8, #0x0
  420a80:	cset	w10, ne  // ne = any
  420a84:	str	w10, [x19, #64]
  420a88:	ldr	w8, [x19, #64]
  420a8c:	tbnz	w8, #0, 420a94 <process_audit_string+0x674>
  420a90:	b	420ac8 <process_audit_string+0x6a8>
  420a94:	ldr	x0, [x19, #336]
  420a98:	ldr	x8, [x19, #320]
  420a9c:	mov	x9, #0x8                   	// #8
  420aa0:	mul	x8, x9, x8
  420aa4:	add	x9, x19, #0x160
  420aa8:	add	x8, x9, x8
  420aac:	ldr	x1, [x8]
  420ab0:	bl	405ad8 <stpcpy@plt>
  420ab4:	str	x0, [x19, #336]
  420ab8:	ldr	x8, [x19, #320]
  420abc:	add	x8, x8, #0x1
  420ac0:	str	x8, [x19, #320]
  420ac4:	b	420a50 <process_audit_string+0x630>
  420ac8:	ldr	x8, [x19, #336]
  420acc:	mov	w9, #0x0                   	// #0
  420ad0:	strb	w9, [x8]
  420ad4:	ldr	x8, [x19, #344]
  420ad8:	str	x8, [x19, #296]
  420adc:	ldr	x8, [x19, #296]
  420ae0:	stur	x8, [x29, #-232]
  420ae4:	ldur	x8, [x29, #-64]
  420ae8:	ldur	x10, [x29, #-48]
  420aec:	add	x11, x10, #0x1
  420af0:	stur	x11, [x29, #-48]
  420af4:	ldur	x11, [x29, #-232]
  420af8:	str	x11, [x19, #280]
  420afc:	ldur	x0, [x29, #-232]
  420b00:	str	x8, [x19, #56]
  420b04:	str	x10, [x19, #48]
  420b08:	bl	405738 <strlen@plt>
  420b0c:	str	x0, [x19, #288]
  420b10:	add	x8, x19, #0x19
  420b14:	ldur	q0, [x8, #255]
  420b18:	ldr	x8, [x19, #56]
  420b1c:	ldr	x10, [x19, #48]
  420b20:	str	q0, [x8, x10, lsl #4]
  420b24:	add	x11, x19, #0xf8
  420b28:	adrp	x12, 42a000 <_fini+0x3a8>
  420b2c:	add	x12, x12, #0x64
  420b30:	str	x12, [x19, #248]
  420b34:	ldur	x12, [x29, #-104]
  420b38:	str	x12, [x11, #8]
  420b3c:	adrp	x12, 42e000 <_fini+0x43a8>
  420b40:	add	x12, x12, #0x98f
  420b44:	str	x12, [x11, #16]
  420b48:	ldur	x12, [x29, #-96]
  420b4c:	str	x12, [x11, #24]
  420b50:	str	xzr, [x19, #224]
  420b54:	str	xzr, [x19, #216]
  420b58:	ldr	x8, [x19, #216]
  420b5c:	mov	w9, #0x0                   	// #0
  420b60:	cmp	x8, #0x4
  420b64:	str	w9, [x19, #44]
  420b68:	b.cs	420b90 <process_audit_string+0x770>  // b.hs, b.nlast
  420b6c:	ldr	x8, [x19, #216]
  420b70:	mov	x9, #0x8                   	// #8
  420b74:	mul	x8, x9, x8
  420b78:	add	x9, x19, #0xf8
  420b7c:	add	x8, x9, x8
  420b80:	ldr	x8, [x8]
  420b84:	cmp	x8, #0x0
  420b88:	cset	w10, ne  // ne = any
  420b8c:	str	w10, [x19, #44]
  420b90:	ldr	w8, [x19, #44]
  420b94:	tbnz	w8, #0, 420b9c <process_audit_string+0x77c>
  420b98:	b	420bd4 <process_audit_string+0x7b4>
  420b9c:	ldr	x8, [x19, #216]
  420ba0:	mov	x9, #0x8                   	// #8
  420ba4:	mul	x8, x9, x8
  420ba8:	add	x9, x19, #0xf8
  420bac:	add	x8, x9, x8
  420bb0:	ldr	x0, [x8]
  420bb4:	bl	405738 <strlen@plt>
  420bb8:	ldr	x8, [x19, #224]
  420bbc:	add	x8, x8, x0
  420bc0:	str	x8, [x19, #224]
  420bc4:	ldr	x8, [x19, #216]
  420bc8:	add	x8, x8, #0x1
  420bcc:	str	x8, [x19, #216]
  420bd0:	b	420b58 <process_audit_string+0x738>
  420bd4:	ldr	x8, [x19, #224]
  420bd8:	add	x8, x8, #0x1
  420bdc:	str	x8, [x19, #208]
  420be0:	ldr	x1, [x19, #208]
  420be4:	mov	x0, #0x1                   	// #1
  420be8:	bl	420fd8 <size_multiply_overflow>
  420bec:	mov	w8, #0x1                   	// #1
  420bf0:	eor	w9, w0, #0x1
  420bf4:	eor	w9, w9, w8
  420bf8:	eor	w9, w9, w8
  420bfc:	eor	w8, w9, w8
  420c00:	and	w8, w8, #0x1
  420c04:	mov	w1, w8
  420c08:	sxtw	x10, w1
  420c0c:	cbz	x10, 420c2c <process_audit_string+0x80c>
  420c10:	mov	w8, wzr
  420c14:	mov	w0, w8
  420c18:	ldr	x1, [x19, #144]
  420c1c:	ldr	x2, [x19, #168]
  420c20:	mov	w3, #0x185                 	// #389
  420c24:	ldr	x4, [x19, #152]
  420c28:	bl	405718 <log_assert_failed_realm@plt>
  420c2c:	ldr	x8, [x19, #208]
  420c30:	mov	x9, #0x1                   	// #1
  420c34:	mul	x8, x9, x8
  420c38:	cmp	x8, #0x400, lsl #12
  420c3c:	cset	w10, ls  // ls = plast
  420c40:	mov	w11, #0x1                   	// #1
  420c44:	eor	w10, w10, #0x1
  420c48:	eor	w10, w10, w11
  420c4c:	eor	w10, w10, w11
  420c50:	and	w10, w10, #0x1
  420c54:	mov	w0, w10
  420c58:	sxtw	x8, w0
  420c5c:	cbz	x8, 420c7c <process_audit_string+0x85c>
  420c60:	mov	w8, wzr
  420c64:	mov	w0, w8
  420c68:	ldr	x1, [x19, #160]
  420c6c:	ldr	x2, [x19, #168]
  420c70:	mov	w3, #0x185                 	// #389
  420c74:	ldr	x4, [x19, #152]
  420c78:	bl	405718 <log_assert_failed_realm@plt>
  420c7c:	ldr	x8, [x19, #208]
  420c80:	mov	x9, #0x1                   	// #1
  420c84:	mul	x8, x9, x8
  420c88:	mul	x8, x8, x9
  420c8c:	add	x8, x8, #0xf
  420c90:	and	x8, x8, #0xfffffffffffffff0
  420c94:	mov	x9, sp
  420c98:	subs	x8, x9, x8
  420c9c:	mov	sp, x8
  420ca0:	str	x8, [x19, #200]
  420ca4:	ldr	x8, [x19, #200]
  420ca8:	str	x8, [x19, #240]
  420cac:	str	x8, [x19, #232]
  420cb0:	str	xzr, [x19, #216]
  420cb4:	ldr	x8, [x19, #216]
  420cb8:	mov	w9, #0x0                   	// #0
  420cbc:	cmp	x8, #0x4
  420cc0:	str	w9, [x19, #40]
  420cc4:	b.cs	420cec <process_audit_string+0x8cc>  // b.hs, b.nlast
  420cc8:	ldr	x8, [x19, #216]
  420ccc:	mov	x9, #0x8                   	// #8
  420cd0:	mul	x8, x9, x8
  420cd4:	add	x9, x19, #0xf8
  420cd8:	add	x8, x9, x8
  420cdc:	ldr	x8, [x8]
  420ce0:	cmp	x8, #0x0
  420ce4:	cset	w10, ne  // ne = any
  420ce8:	str	w10, [x19, #40]
  420cec:	ldr	w8, [x19, #40]
  420cf0:	tbnz	w8, #0, 420cf8 <process_audit_string+0x8d8>
  420cf4:	b	420d2c <process_audit_string+0x90c>
  420cf8:	ldr	x0, [x19, #232]
  420cfc:	ldr	x8, [x19, #216]
  420d00:	mov	x9, #0x8                   	// #8
  420d04:	mul	x8, x9, x8
  420d08:	add	x9, x19, #0xf8
  420d0c:	add	x8, x9, x8
  420d10:	ldr	x1, [x8]
  420d14:	bl	405ad8 <stpcpy@plt>
  420d18:	str	x0, [x19, #232]
  420d1c:	ldr	x8, [x19, #216]
  420d20:	add	x8, x8, #0x1
  420d24:	str	x8, [x19, #216]
  420d28:	b	420cb4 <process_audit_string+0x894>
  420d2c:	ldr	x8, [x19, #232]
  420d30:	mov	w9, #0x0                   	// #0
  420d34:	strb	w9, [x8]
  420d38:	ldr	x8, [x19, #240]
  420d3c:	str	x8, [x19, #192]
  420d40:	ldr	x8, [x19, #192]
  420d44:	stur	x8, [x29, #-224]
  420d48:	sub	x8, x29, #0x40
  420d4c:	ldur	x10, [x29, #-64]
  420d50:	sub	x6, x29, #0x30
  420d54:	ldur	x11, [x29, #-48]
  420d58:	add	x12, x11, #0x1
  420d5c:	stur	x12, [x29, #-48]
  420d60:	ldur	x12, [x29, #-224]
  420d64:	str	x12, [x19, #176]
  420d68:	ldur	x0, [x29, #-224]
  420d6c:	str	x8, [x19, #32]
  420d70:	str	x10, [x19, #24]
  420d74:	str	x6, [x19, #16]
  420d78:	str	x11, [x19, #8]
  420d7c:	bl	405738 <strlen@plt>
  420d80:	str	x0, [x19, #184]
  420d84:	ldr	q0, [x19, #176]
  420d88:	ldr	x8, [x19, #24]
  420d8c:	ldr	x10, [x19, #8]
  420d90:	str	q0, [x8, x10, lsl #4]
  420d94:	ldur	x11, [x29, #-48]
  420d98:	stur	x11, [x29, #-56]
  420d9c:	ldur	x0, [x29, #-96]
  420da0:	adrp	x1, 44f000 <journald_gperf_lookup.wordlist+0x448>
  420da4:	add	x1, x1, #0x278
  420da8:	adrp	x2, 42e000 <_fini+0x43a8>
  420dac:	add	x2, x2, #0x991
  420db0:	mov	w9, #0x1                   	// #1
  420db4:	and	w3, w9, #0x1
  420db8:	ldr	x4, [x19, #32]
  420dbc:	sub	x11, x29, #0x28
  420dc0:	mov	x5, x11
  420dc4:	ldr	x6, [x19, #16]
  420dc8:	str	x11, [x19]
  420dcc:	bl	421040 <map_all_fields>
  420dd0:	ldur	x8, [x29, #-48]
  420dd4:	add	x2, x8, #0x16
  420dd8:	ldr	x8, [x19, #32]
  420ddc:	mov	x0, x8
  420de0:	ldr	x1, [x19]
  420de4:	mov	x3, #0x10                  	// #16
  420de8:	bl	405c58 <greedy_realloc@plt>
  420dec:	cbnz	x0, 420e10 <process_audit_string+0x9f0>
  420df0:	mov	w8, wzr
  420df4:	mov	w0, w8
  420df8:	ldr	x1, [x19, #168]
  420dfc:	mov	w2, #0x18d                 	// #397
  420e00:	adrp	x3, 42e000 <_fini+0x43a8>
  420e04:	add	x3, x3, #0x906
  420e08:	bl	405958 <log_oom_internal@plt>
  420e0c:	b	420e3c <process_audit_string+0xa1c>
  420e10:	ldur	x0, [x29, #-8]
  420e14:	ldur	x1, [x29, #-64]
  420e18:	ldur	x2, [x29, #-48]
  420e1c:	ldur	x3, [x29, #-40]
  420e20:	mov	x8, xzr
  420e24:	mov	x4, x8
  420e28:	mov	x5, x8
  420e2c:	mov	w6, #0x5                   	// #5
  420e30:	mov	w9, wzr
  420e34:	mov	w7, w9
  420e38:	bl	40f6d0 <server_dispatch_message>
  420e3c:	ldur	x8, [x29, #-56]
  420e40:	ldur	x9, [x29, #-48]
  420e44:	cmp	x8, x9
  420e48:	b.cs	420e78 <process_audit_string+0xa58>  // b.hs, b.nlast
  420e4c:	ldur	x8, [x29, #-64]
  420e50:	ldur	x9, [x29, #-56]
  420e54:	mov	x10, #0x10                  	// #16
  420e58:	mul	x9, x10, x9
  420e5c:	add	x8, x8, x9
  420e60:	ldr	x0, [x8]
  420e64:	bl	405778 <free@plt>
  420e68:	ldur	x8, [x29, #-56]
  420e6c:	add	x8, x8, #0x1
  420e70:	stur	x8, [x29, #-56]
  420e74:	b	420e3c <process_audit_string+0xa1c>
  420e78:	stur	wzr, [x29, #-240]
  420e7c:	sub	x0, x29, #0x40
  420e80:	bl	420e94 <freep>
  420e84:	mov	sp, x29
  420e88:	ldp	x28, x19, [sp, #16]
  420e8c:	ldp	x29, x30, [sp], #32
  420e90:	ret

0000000000420e94 <freep>:
  420e94:	sub	sp, sp, #0x20
  420e98:	stp	x29, x30, [sp, #16]
  420e9c:	add	x29, sp, #0x10
  420ea0:	str	x0, [sp, #8]
  420ea4:	ldr	x8, [sp, #8]
  420ea8:	ldr	x0, [x8]
  420eac:	bl	405778 <free@plt>
  420eb0:	ldp	x29, x30, [sp, #16]
  420eb4:	add	sp, sp, #0x20
  420eb8:	ret

0000000000420ebc <startswith>:
  420ebc:	sub	sp, sp, #0x30
  420ec0:	stp	x29, x30, [sp, #32]
  420ec4:	add	x29, sp, #0x20
  420ec8:	str	x0, [sp, #16]
  420ecc:	str	x1, [sp, #8]
  420ed0:	ldr	x0, [sp, #8]
  420ed4:	bl	405738 <strlen@plt>
  420ed8:	str	x0, [sp]
  420edc:	ldr	x0, [sp, #16]
  420ee0:	ldr	x1, [sp, #8]
  420ee4:	ldr	x2, [sp]
  420ee8:	bl	405838 <strncmp@plt>
  420eec:	cbnz	w0, 420f04 <startswith+0x48>
  420ef0:	ldr	x8, [sp, #16]
  420ef4:	ldr	x9, [sp]
  420ef8:	add	x8, x8, x9
  420efc:	stur	x8, [x29, #-8]
  420f00:	b	420f0c <startswith+0x50>
  420f04:	mov	x8, xzr
  420f08:	stur	x8, [x29, #-8]
  420f0c:	ldur	x0, [x29, #-8]
  420f10:	ldp	x29, x30, [sp, #32]
  420f14:	add	sp, sp, #0x30
  420f18:	ret

0000000000420f1c <isempty>:
  420f1c:	sub	sp, sp, #0x10
  420f20:	str	x0, [sp, #8]
  420f24:	ldr	x8, [sp, #8]
  420f28:	mov	w9, #0x1                   	// #1
  420f2c:	str	w9, [sp, #4]
  420f30:	cbz	x8, 420f4c <isempty+0x30>
  420f34:	ldr	x8, [sp, #8]
  420f38:	ldrb	w9, [x8]
  420f3c:	cmp	w9, #0x0
  420f40:	cset	w9, ne  // ne = any
  420f44:	eor	w9, w9, #0x1
  420f48:	str	w9, [sp, #4]
  420f4c:	ldr	w8, [sp, #4]
  420f50:	and	w0, w8, #0x1
  420f54:	add	sp, sp, #0x10
  420f58:	ret

0000000000420f5c <malloc_multiply>:
  420f5c:	sub	sp, sp, #0x40
  420f60:	stp	x29, x30, [sp, #48]
  420f64:	add	x29, sp, #0x30
  420f68:	stur	x0, [x29, #-16]
  420f6c:	str	x1, [sp, #24]
  420f70:	ldur	x0, [x29, #-16]
  420f74:	ldr	x1, [sp, #24]
  420f78:	bl	420fd8 <size_multiply_overflow>
  420f7c:	tbnz	w0, #0, 420f84 <malloc_multiply+0x28>
  420f80:	b	420f90 <malloc_multiply+0x34>
  420f84:	mov	x8, xzr
  420f88:	stur	x8, [x29, #-8]
  420f8c:	b	420fc8 <malloc_multiply+0x6c>
  420f90:	ldur	x8, [x29, #-16]
  420f94:	ldr	x9, [sp, #24]
  420f98:	mul	x8, x8, x9
  420f9c:	str	x8, [sp, #16]
  420fa0:	cbz	x8, 420fb0 <malloc_multiply+0x54>
  420fa4:	ldr	x8, [sp, #16]
  420fa8:	str	x8, [sp, #8]
  420fac:	b	420fb8 <malloc_multiply+0x5c>
  420fb0:	mov	x8, #0x1                   	// #1
  420fb4:	str	x8, [sp, #8]
  420fb8:	ldr	x8, [sp, #8]
  420fbc:	mov	x0, x8
  420fc0:	bl	406378 <malloc@plt>
  420fc4:	stur	x0, [x29, #-8]
  420fc8:	ldur	x0, [x29, #-8]
  420fcc:	ldp	x29, x30, [sp, #48]
  420fd0:	add	sp, sp, #0x40
  420fd4:	ret

0000000000420fd8 <size_multiply_overflow>:
  420fd8:	sub	sp, sp, #0x20
  420fdc:	str	x0, [sp, #24]
  420fe0:	str	x1, [sp, #16]
  420fe4:	ldr	x8, [sp, #16]
  420fe8:	mov	w9, #0x0                   	// #0
  420fec:	str	w9, [sp, #12]
  420ff0:	cbz	x8, 421010 <size_multiply_overflow+0x38>
  420ff4:	ldr	x8, [sp, #24]
  420ff8:	ldr	x9, [sp, #16]
  420ffc:	mov	x10, #0xffffffffffffffff    	// #-1
  421000:	udiv	x9, x10, x9
  421004:	cmp	x8, x9
  421008:	cset	w11, hi  // hi = pmore
  42100c:	str	w11, [sp, #12]
  421010:	ldr	w8, [sp, #12]
  421014:	mov	w9, #0x1                   	// #1
  421018:	eor	w8, w8, #0x1
  42101c:	eor	w8, w8, w9
  421020:	and	w8, w8, #0x1
  421024:	mov	w0, w8
  421028:	sxtw	x10, w0
  42102c:	cmp	x10, #0x0
  421030:	cset	w8, ne  // ne = any
  421034:	and	w0, w8, #0x1
  421038:	add	sp, sp, #0x20
  42103c:	ret

0000000000421040 <map_all_fields>:
  421040:	sub	sp, sp, #0xc0
  421044:	stp	x29, x30, [sp, #176]
  421048:	add	x29, sp, #0xb0
  42104c:	adrp	x8, 42e000 <_fini+0x43a8>
  421050:	add	x8, x8, #0x890
  421054:	add	x8, x8, #0x3
  421058:	mov	w9, #0x1                   	// #1
  42105c:	adrp	x10, 42e000 <_fini+0x43a8>
  421060:	add	x10, x10, #0xc10
  421064:	stur	x0, [x29, #-16]
  421068:	stur	x1, [x29, #-24]
  42106c:	stur	x2, [x29, #-32]
  421070:	and	w9, w3, w9
  421074:	sturb	w9, [x29, #-33]
  421078:	stur	x4, [x29, #-48]
  42107c:	stur	x5, [x29, #-56]
  421080:	stur	x6, [x29, #-64]
  421084:	str	x8, [sp, #24]
  421088:	str	x10, [sp, #16]
  42108c:	ldur	x8, [x29, #-16]
  421090:	cmp	x8, #0x0
  421094:	cset	w9, ne  // ne = any
  421098:	mov	w10, #0x1                   	// #1
  42109c:	eor	w9, w9, #0x1
  4210a0:	eor	w9, w9, w10
  4210a4:	eor	w9, w9, w10
  4210a8:	and	w9, w9, #0x1
  4210ac:	mov	w0, w9
  4210b0:	sxtw	x8, w0
  4210b4:	cbz	x8, 4210d8 <map_all_fields+0x98>
  4210b8:	mov	w8, wzr
  4210bc:	mov	w0, w8
  4210c0:	adrp	x1, 429000 <journal_ratelimit_group_free+0x70>
  4210c4:	add	x1, x1, #0xf43
  4210c8:	ldr	x2, [sp, #24]
  4210cc:	mov	w3, #0xf9                  	// #249
  4210d0:	ldr	x4, [sp, #16]
  4210d4:	bl	405718 <log_assert_failed_realm@plt>
  4210d8:	ldur	x8, [x29, #-48]
  4210dc:	cmp	x8, #0x0
  4210e0:	cset	w9, ne  // ne = any
  4210e4:	mov	w10, #0x1                   	// #1
  4210e8:	eor	w9, w9, #0x1
  4210ec:	eor	w9, w9, w10
  4210f0:	eor	w9, w9, w10
  4210f4:	and	w9, w9, #0x1
  4210f8:	mov	w0, w9
  4210fc:	sxtw	x8, w0
  421100:	cbz	x8, 421124 <map_all_fields+0xe4>
  421104:	mov	w8, wzr
  421108:	mov	w0, w8
  42110c:	adrp	x1, 42e000 <_fini+0x43a8>
  421110:	add	x1, x1, #0xc7d
  421114:	ldr	x2, [sp, #24]
  421118:	mov	w3, #0xfa                  	// #250
  42111c:	ldr	x4, [sp, #16]
  421120:	bl	405718 <log_assert_failed_realm@plt>
  421124:	ldur	x8, [x29, #-56]
  421128:	cmp	x8, #0x0
  42112c:	cset	w9, ne  // ne = any
  421130:	mov	w10, #0x1                   	// #1
  421134:	eor	w9, w9, #0x1
  421138:	eor	w9, w9, w10
  42113c:	eor	w9, w9, w10
  421140:	and	w9, w9, #0x1
  421144:	mov	w0, w9
  421148:	sxtw	x8, w0
  42114c:	cbz	x8, 421170 <map_all_fields+0x130>
  421150:	mov	w8, wzr
  421154:	mov	w0, w8
  421158:	adrp	x1, 42e000 <_fini+0x43a8>
  42115c:	add	x1, x1, #0xc81
  421160:	ldr	x2, [sp, #24]
  421164:	mov	w3, #0xfb                  	// #251
  421168:	ldr	x4, [sp, #16]
  42116c:	bl	405718 <log_assert_failed_realm@plt>
  421170:	ldur	x8, [x29, #-64]
  421174:	cmp	x8, #0x0
  421178:	cset	w9, ne  // ne = any
  42117c:	mov	w10, #0x1                   	// #1
  421180:	eor	w9, w9, #0x1
  421184:	eor	w9, w9, w10
  421188:	eor	w9, w9, w10
  42118c:	and	w9, w9, #0x1
  421190:	mov	w0, w9
  421194:	sxtw	x8, w0
  421198:	cbz	x8, 4211bc <map_all_fields+0x17c>
  42119c:	mov	w8, wzr
  4211a0:	mov	w0, w8
  4211a4:	adrp	x1, 42e000 <_fini+0x43a8>
  4211a8:	add	x1, x1, #0xc91
  4211ac:	ldr	x2, [sp, #24]
  4211b0:	mov	w3, #0xfc                  	// #252
  4211b4:	ldr	x4, [sp, #16]
  4211b8:	bl	405718 <log_assert_failed_realm@plt>
  4211bc:	mov	w8, #0x0                   	// #0
  4211c0:	sturb	w8, [x29, #-69]
  4211c4:	ldur	x0, [x29, #-16]
  4211c8:	adrp	x1, 42e000 <_fini+0x43a8>
  4211cc:	add	x1, x1, #0x12b
  4211d0:	bl	406348 <strspn@plt>
  4211d4:	ldur	x9, [x29, #-16]
  4211d8:	add	x9, x9, x0
  4211dc:	stur	x9, [x29, #-16]
  4211e0:	ldur	x9, [x29, #-16]
  4211e4:	ldrb	w8, [x9]
  4211e8:	cbnz	w8, 4211f4 <map_all_fields+0x1b4>
  4211ec:	stur	wzr, [x29, #-4]
  4211f0:	b	4214d4 <map_all_fields+0x494>
  4211f4:	ldurb	w8, [x29, #-33]
  4211f8:	tbnz	w8, #0, 421200 <map_all_fields+0x1c0>
  4211fc:	b	4212c8 <map_all_fields+0x288>
  421200:	ldur	x0, [x29, #-16]
  421204:	adrp	x1, 42e000 <_fini+0x43a8>
  421208:	add	x1, x1, #0xc97
  42120c:	bl	420ebc <startswith>
  421210:	str	x0, [sp, #88]
  421214:	ldr	x8, [sp, #88]
  421218:	cbz	x8, 4212c8 <map_all_fields+0x288>
  42121c:	mov	x8, xzr
  421220:	str	x8, [sp, #80]
  421224:	ldr	x0, [sp, #88]
  421228:	adrp	x1, 42e000 <_fini+0x43a8>
  42122c:	add	x1, x1, #0xc9d
  421230:	bl	405938 <endswith@plt>
  421234:	str	x0, [sp, #72]
  421238:	ldr	x8, [sp, #72]
  42123c:	cbnz	x8, 421250 <map_all_fields+0x210>
  421240:	stur	wzr, [x29, #-4]
  421244:	mov	w8, #0x1                   	// #1
  421248:	str	w8, [sp, #68]
  42124c:	b	4212bc <map_all_fields+0x27c>
  421250:	ldr	x0, [sp, #88]
  421254:	ldr	x8, [sp, #72]
  421258:	ldr	x9, [sp, #88]
  42125c:	subs	x1, x8, x9
  421260:	bl	405948 <strndup@plt>
  421264:	str	x0, [sp, #80]
  421268:	ldr	x8, [sp, #80]
  42126c:	cbnz	x8, 421284 <map_all_fields+0x244>
  421270:	mov	w8, #0xfffffff4            	// #-12
  421274:	stur	w8, [x29, #-4]
  421278:	mov	w8, #0x1                   	// #1
  42127c:	str	w8, [sp, #68]
  421280:	b	4212bc <map_all_fields+0x27c>
  421284:	ldr	x0, [sp, #80]
  421288:	ldur	x4, [x29, #-48]
  42128c:	ldur	x5, [x29, #-56]
  421290:	ldur	x6, [x29, #-64]
  421294:	adrp	x1, 44f000 <journald_gperf_lookup.wordlist+0x448>
  421298:	add	x1, x1, #0x440
  42129c:	adrp	x2, 42e000 <_fini+0x43a8>
  4212a0:	add	x2, x2, #0xc9f
  4212a4:	mov	w8, wzr
  4212a8:	and	w3, w8, #0x1
  4212ac:	bl	421040 <map_all_fields>
  4212b0:	stur	w0, [x29, #-4]
  4212b4:	mov	w8, #0x1                   	// #1
  4212b8:	str	w8, [sp, #68]
  4212bc:	add	x0, sp, #0x50
  4212c0:	bl	420e94 <freep>
  4212c4:	b	4214d4 <map_all_fields+0x494>
  4212c8:	ldur	x8, [x29, #-24]
  4212cc:	stur	x8, [x29, #-80]
  4212d0:	ldur	x8, [x29, #-80]
  4212d4:	ldr	x8, [x8]
  4212d8:	cbz	x8, 4213f0 <map_all_fields+0x3b0>
  4212dc:	ldur	x0, [x29, #-16]
  4212e0:	ldur	x8, [x29, #-80]
  4212e4:	ldr	x1, [x8]
  4212e8:	bl	420ebc <startswith>
  4212ec:	str	x0, [sp, #88]
  4212f0:	ldr	x8, [sp, #88]
  4212f4:	cbnz	x8, 4212fc <map_all_fields+0x2bc>
  4212f8:	b	4213e0 <map_all_fields+0x3a0>
  4212fc:	ldur	x8, [x29, #-80]
  421300:	ldr	x8, [x8, #16]
  421304:	ldur	x9, [x29, #-80]
  421308:	ldr	x0, [x9, #8]
  42130c:	ldur	x2, [x29, #-48]
  421310:	ldur	x3, [x29, #-56]
  421314:	ldur	x4, [x29, #-64]
  421318:	add	x1, sp, #0x58
  42131c:	blr	x8
  421320:	stur	w0, [x29, #-68]
  421324:	ldur	w10, [x29, #-68]
  421328:	cmp	w10, #0x0
  42132c:	cset	w10, ge  // ge = tcont
  421330:	tbnz	w10, #0, 4213bc <map_all_fields+0x37c>
  421334:	mov	w8, #0x7                   	// #7
  421338:	str	w8, [sp, #64]
  42133c:	ldur	w8, [x29, #-68]
  421340:	str	w8, [sp, #60]
  421344:	str	wzr, [sp, #56]
  421348:	ldr	w0, [sp, #56]
  42134c:	bl	405638 <log_get_max_level_realm@plt>
  421350:	ldr	w8, [sp, #64]
  421354:	and	w8, w8, #0x7
  421358:	cmp	w0, w8
  42135c:	b.lt	421394 <map_all_fields+0x354>  // b.tstop
  421360:	ldr	w8, [sp, #56]
  421364:	ldr	w9, [sp, #64]
  421368:	orr	w0, w9, w8, lsl #10
  42136c:	ldr	w1, [sp, #60]
  421370:	ldr	x2, [sp, #24]
  421374:	mov	w3, #0x12a                 	// #298
  421378:	adrp	x4, 42e000 <_fini+0x43a8>
  42137c:	add	x4, x4, #0xcac
  421380:	adrp	x5, 42e000 <_fini+0x43a8>
  421384:	add	x5, x5, #0xcbb
  421388:	bl	405648 <log_internal_realm@plt>
  42138c:	str	w0, [sp, #12]
  421390:	b	4213a8 <map_all_fields+0x368>
  421394:	ldr	w0, [sp, #60]
  421398:	bl	405658 <abs@plt>
  42139c:	mov	w8, wzr
  4213a0:	subs	w8, w8, w0, uxtb
  4213a4:	str	w8, [sp, #12]
  4213a8:	ldr	w8, [sp, #12]
  4213ac:	str	w8, [sp, #52]
  4213b0:	ldr	w8, [sp, #52]
  4213b4:	stur	w8, [x29, #-4]
  4213b8:	b	4214d4 <map_all_fields+0x494>
  4213bc:	ldur	w8, [x29, #-68]
  4213c0:	cmp	w8, #0x0
  4213c4:	cset	w8, le
  4213c8:	tbnz	w8, #0, 4213e0 <map_all_fields+0x3a0>
  4213cc:	mov	w8, #0x1                   	// #1
  4213d0:	sturb	w8, [x29, #-69]
  4213d4:	ldr	x9, [sp, #88]
  4213d8:	stur	x9, [x29, #-16]
  4213dc:	b	4213f0 <map_all_fields+0x3b0>
  4213e0:	ldur	x8, [x29, #-80]
  4213e4:	add	x8, x8, #0x18
  4213e8:	stur	x8, [x29, #-80]
  4213ec:	b	4212d0 <map_all_fields+0x290>
  4213f0:	ldurb	w8, [x29, #-69]
  4213f4:	tbnz	w8, #0, 4214d0 <map_all_fields+0x490>
  4213f8:	ldur	x0, [x29, #-32]
  4213fc:	ldur	x2, [x29, #-48]
  421400:	ldur	x3, [x29, #-56]
  421404:	ldur	x4, [x29, #-64]
  421408:	sub	x1, x29, #0x10
  42140c:	bl	421f50 <map_generic_field>
  421410:	stur	w0, [x29, #-68]
  421414:	ldur	w8, [x29, #-68]
  421418:	cmp	w8, #0x0
  42141c:	cset	w8, ge  // ge = tcont
  421420:	tbnz	w8, #0, 4214ac <map_all_fields+0x46c>
  421424:	mov	w8, #0x7                   	// #7
  421428:	str	w8, [sp, #48]
  42142c:	ldur	w8, [x29, #-68]
  421430:	str	w8, [sp, #44]
  421434:	str	wzr, [sp, #40]
  421438:	ldr	w0, [sp, #40]
  42143c:	bl	405638 <log_get_max_level_realm@plt>
  421440:	ldr	w8, [sp, #48]
  421444:	and	w8, w8, #0x7
  421448:	cmp	w0, w8
  42144c:	b.lt	421484 <map_all_fields+0x444>  // b.tstop
  421450:	ldr	w8, [sp, #40]
  421454:	ldr	w9, [sp, #48]
  421458:	orr	w0, w9, w8, lsl #10
  42145c:	ldr	w1, [sp, #44]
  421460:	ldr	x2, [sp, #24]
  421464:	mov	w3, #0x136                 	// #310
  421468:	adrp	x4, 42e000 <_fini+0x43a8>
  42146c:	add	x4, x4, #0xcac
  421470:	adrp	x5, 42e000 <_fini+0x43a8>
  421474:	add	x5, x5, #0xcbb
  421478:	bl	405648 <log_internal_realm@plt>
  42147c:	str	w0, [sp, #8]
  421480:	b	421498 <map_all_fields+0x458>
  421484:	ldr	w0, [sp, #44]
  421488:	bl	405658 <abs@plt>
  42148c:	mov	w8, wzr
  421490:	subs	w8, w8, w0, uxtb
  421494:	str	w8, [sp, #8]
  421498:	ldr	w8, [sp, #8]
  42149c:	str	w8, [sp, #36]
  4214a0:	ldr	w8, [sp, #36]
  4214a4:	stur	w8, [x29, #-4]
  4214a8:	b	4214d4 <map_all_fields+0x494>
  4214ac:	ldur	w8, [x29, #-68]
  4214b0:	cbnz	w8, 4214d0 <map_all_fields+0x490>
  4214b4:	ldur	x0, [x29, #-16]
  4214b8:	adrp	x1, 42e000 <_fini+0x43a8>
  4214bc:	add	x1, x1, #0x12b
  4214c0:	bl	406358 <strcspn@plt>
  4214c4:	ldur	x8, [x29, #-16]
  4214c8:	add	x8, x8, x0
  4214cc:	stur	x8, [x29, #-16]
  4214d0:	b	4211bc <map_all_fields+0x17c>
  4214d4:	ldur	w0, [x29, #-4]
  4214d8:	ldp	x29, x30, [sp, #176]
  4214dc:	add	sp, sp, #0xc0
  4214e0:	ret

00000000004214e4 <server_process_audit_message>:
  4214e4:	sub	sp, sp, #0xa0
  4214e8:	stp	x29, x30, [sp, #144]
  4214ec:	add	x29, sp, #0x90
  4214f0:	adrp	x8, 42e000 <_fini+0x43a8>
  4214f4:	add	x8, x8, #0x890
  4214f8:	add	x8, x8, #0x3
  4214fc:	adrp	x9, 42e000 <_fini+0x43a8>
  421500:	add	x9, x9, #0xa20
  421504:	stur	x0, [x29, #-8]
  421508:	stur	x1, [x29, #-16]
  42150c:	stur	x2, [x29, #-24]
  421510:	stur	x3, [x29, #-32]
  421514:	stur	x4, [x29, #-40]
  421518:	stur	w5, [x29, #-44]
  42151c:	ldur	x10, [x29, #-16]
  421520:	stur	x10, [x29, #-56]
  421524:	str	x8, [sp, #24]
  421528:	str	x9, [sp, #16]
  42152c:	ldur	x8, [x29, #-8]
  421530:	cmp	x8, #0x0
  421534:	cset	w9, ne  // ne = any
  421538:	mov	w10, #0x1                   	// #1
  42153c:	eor	w9, w9, #0x1
  421540:	eor	w9, w9, w10
  421544:	eor	w9, w9, w10
  421548:	and	w9, w9, #0x1
  42154c:	mov	w0, w9
  421550:	sxtw	x8, w0
  421554:	cbz	x8, 42157c <server_process_audit_message+0x98>
  421558:	mov	w8, wzr
  42155c:	mov	w0, w8
  421560:	adrp	x1, 429000 <journal_ratelimit_group_free+0x70>
  421564:	add	x1, x1, #0xdc8
  421568:	ldr	x2, [sp, #24]
  42156c:	mov	w3, #0x1a5                 	// #421
  421570:	adrp	x4, 42e000 <_fini+0x43a8>
  421574:	add	x4, x4, #0x99f
  421578:	bl	405718 <log_assert_failed_realm@plt>
  42157c:	ldur	x8, [x29, #-24]
  421580:	cmp	x8, #0x10
  421584:	b.cs	42158c <server_process_audit_message+0xa8>  // b.hs, b.nlast
  421588:	b	421864 <server_process_audit_message+0x380>
  42158c:	ldur	x8, [x29, #-16]
  421590:	cmp	x8, #0x0
  421594:	cset	w9, ne  // ne = any
  421598:	mov	w10, #0x1                   	// #1
  42159c:	eor	w9, w9, #0x1
  4215a0:	eor	w9, w9, w10
  4215a4:	eor	w9, w9, w10
  4215a8:	and	w9, w9, #0x1
  4215ac:	mov	w0, w9
  4215b0:	sxtw	x8, w0
  4215b4:	cbz	x8, 4215dc <server_process_audit_message+0xf8>
  4215b8:	mov	w8, wzr
  4215bc:	mov	w0, w8
  4215c0:	adrp	x1, 42e000 <_fini+0x43a8>
  4215c4:	add	x1, x1, #0x533
  4215c8:	ldr	x2, [sp, #24]
  4215cc:	mov	w3, #0x1aa                 	// #426
  4215d0:	adrp	x4, 42e000 <_fini+0x43a8>
  4215d4:	add	x4, x4, #0x99f
  4215d8:	bl	405718 <log_assert_failed_realm@plt>
  4215dc:	ldur	x8, [x29, #-40]
  4215e0:	cbz	x8, 421610 <server_process_audit_message+0x12c>
  4215e4:	ldur	w8, [x29, #-44]
  4215e8:	mov	w9, w8
  4215ec:	cmp	x9, #0xc
  4215f0:	b.ne	421610 <server_process_audit_message+0x12c>  // b.any
  4215f4:	ldur	x8, [x29, #-40]
  4215f8:	ldrh	w9, [x8]
  4215fc:	cmp	w9, #0x10
  421600:	b.ne	421610 <server_process_audit_message+0x12c>  // b.any
  421604:	ldur	x8, [x29, #-40]
  421608:	ldr	w9, [x8, #4]
  42160c:	cbz	w9, 421688 <server_process_audit_message+0x1a4>
  421610:	mov	w8, #0x7                   	// #7
  421614:	stur	w8, [x29, #-60]
  421618:	stur	wzr, [x29, #-64]
  42161c:	stur	wzr, [x29, #-68]
  421620:	ldur	w0, [x29, #-68]
  421624:	bl	405638 <log_get_max_level_realm@plt>
  421628:	ldur	w8, [x29, #-60]
  42162c:	and	w8, w8, #0x7
  421630:	cmp	w0, w8
  421634:	b.lt	421668 <server_process_audit_message+0x184>  // b.tstop
  421638:	ldur	w8, [x29, #-68]
  42163c:	ldur	w9, [x29, #-60]
  421640:	orr	w0, w9, w8, lsl #10
  421644:	ldur	w1, [x29, #-64]
  421648:	ldr	x2, [sp, #24]
  42164c:	mov	w3, #0x1b1                 	// #433
  421650:	ldr	x4, [sp, #16]
  421654:	adrp	x5, 42e000 <_fini+0x43a8>
  421658:	add	x5, x5, #0xa3d
  42165c:	bl	405648 <log_internal_realm@plt>
  421660:	str	w0, [sp, #12]
  421664:	b	42167c <server_process_audit_message+0x198>
  421668:	ldur	w0, [x29, #-64]
  42166c:	bl	405658 <abs@plt>
  421670:	mov	w8, wzr
  421674:	subs	w8, w8, w0, uxtb
  421678:	str	w8, [sp, #12]
  42167c:	ldr	w8, [sp, #12]
  421680:	str	w8, [sp, #72]
  421684:	b	421864 <server_process_audit_message+0x380>
  421688:	ldur	x8, [x29, #-32]
  42168c:	cbz	x8, 42169c <server_process_audit_message+0x1b8>
  421690:	ldur	x8, [x29, #-32]
  421694:	ldr	w9, [x8]
  421698:	cbz	w9, 421714 <server_process_audit_message+0x230>
  42169c:	mov	w8, #0x7                   	// #7
  4216a0:	str	w8, [sp, #68]
  4216a4:	str	wzr, [sp, #64]
  4216a8:	str	wzr, [sp, #60]
  4216ac:	ldr	w0, [sp, #60]
  4216b0:	bl	405638 <log_get_max_level_realm@plt>
  4216b4:	ldr	w8, [sp, #68]
  4216b8:	and	w8, w8, #0x7
  4216bc:	cmp	w0, w8
  4216c0:	b.lt	4216f4 <server_process_audit_message+0x210>  // b.tstop
  4216c4:	ldr	w8, [sp, #60]
  4216c8:	ldr	w9, [sp, #68]
  4216cc:	orr	w0, w9, w8, lsl #10
  4216d0:	ldr	w1, [sp, #64]
  4216d4:	ldr	x2, [sp, #24]
  4216d8:	mov	w3, #0x1b6                 	// #438
  4216dc:	ldr	x4, [sp, #16]
  4216e0:	adrp	x5, 42e000 <_fini+0x43a8>
  4216e4:	add	x5, x5, #0xa68
  4216e8:	bl	405648 <log_internal_realm@plt>
  4216ec:	str	w0, [sp, #8]
  4216f0:	b	421708 <server_process_audit_message+0x224>
  4216f4:	ldr	w0, [sp, #64]
  4216f8:	bl	405658 <abs@plt>
  4216fc:	mov	w8, wzr
  421700:	subs	w8, w8, w0, uxtb
  421704:	str	w8, [sp, #8]
  421708:	ldr	w8, [sp, #8]
  42170c:	str	w8, [sp, #56]
  421710:	b	421864 <server_process_audit_message+0x380>
  421714:	ldur	x8, [x29, #-24]
  421718:	cmp	x8, #0x10
  42171c:	b.cc	42174c <server_process_audit_message+0x268>  // b.lo, b.ul, b.last
  421720:	ldur	x8, [x29, #-56]
  421724:	ldr	w9, [x8]
  421728:	mov	w8, w9
  42172c:	cmp	x8, #0x10
  421730:	b.cc	42174c <server_process_audit_message+0x268>  // b.lo, b.ul, b.last
  421734:	ldur	x8, [x29, #-56]
  421738:	ldr	w9, [x8]
  42173c:	mov	w8, w9
  421740:	ldur	x10, [x29, #-24]
  421744:	cmp	x8, x10
  421748:	b.ls	4217c4 <server_process_audit_message+0x2e0>  // b.plast
  42174c:	mov	w8, #0x3                   	// #3
  421750:	str	w8, [sp, #52]
  421754:	str	wzr, [sp, #48]
  421758:	str	wzr, [sp, #44]
  42175c:	ldr	w0, [sp, #44]
  421760:	bl	405638 <log_get_max_level_realm@plt>
  421764:	ldr	w8, [sp, #52]
  421768:	and	w8, w8, #0x7
  42176c:	cmp	w0, w8
  421770:	b.lt	4217a4 <server_process_audit_message+0x2c0>  // b.tstop
  421774:	ldr	w8, [sp, #44]
  421778:	ldr	w9, [sp, #52]
  42177c:	orr	w0, w9, w8, lsl #10
  421780:	ldr	w1, [sp, #48]
  421784:	ldr	x2, [sp, #24]
  421788:	mov	w3, #0x1bb                 	// #443
  42178c:	ldr	x4, [sp, #16]
  421790:	adrp	x5, 42e000 <_fini+0x43a8>
  421794:	add	x5, x5, #0xa98
  421798:	bl	405648 <log_internal_realm@plt>
  42179c:	str	w0, [sp, #4]
  4217a0:	b	4217b8 <server_process_audit_message+0x2d4>
  4217a4:	ldr	w0, [sp, #48]
  4217a8:	bl	405658 <abs@plt>
  4217ac:	mov	w8, wzr
  4217b0:	subs	w8, w8, w0, uxtb
  4217b4:	str	w8, [sp, #4]
  4217b8:	ldr	w8, [sp, #4]
  4217bc:	str	w8, [sp, #40]
  4217c0:	b	421864 <server_process_audit_message+0x380>
  4217c4:	mov	w8, #0x0                   	// #0
  4217c8:	strb	w8, [sp, #39]
  4217cc:	ldur	x9, [x29, #-56]
  4217d0:	ldrh	w8, [x9, #4]
  4217d4:	subs	w8, w8, #0x1
  4217d8:	mov	w10, #0x1                   	// #1
  4217dc:	cmp	w8, #0x1
  4217e0:	cset	w8, ls  // ls = plast
  4217e4:	eor	w8, w8, w10
  4217e8:	tbnz	w8, #0, 4217fc <server_process_audit_message+0x318>
  4217ec:	b	4217f0 <server_process_audit_message+0x30c>
  4217f0:	mov	w8, #0x1                   	// #1
  4217f4:	strb	w8, [sp, #39]
  4217f8:	b	4217fc <server_process_audit_message+0x318>
  4217fc:	ldrb	w8, [sp, #39]
  421800:	and	w8, w8, #0x1
  421804:	strb	w8, [sp, #38]
  421808:	ldrb	w8, [sp, #38]
  42180c:	tbnz	w8, #0, 421814 <server_process_audit_message+0x330>
  421810:	b	421818 <server_process_audit_message+0x334>
  421814:	b	421864 <server_process_audit_message+0x380>
  421818:	ldur	x8, [x29, #-56]
  42181c:	ldrh	w9, [x8, #4]
  421820:	cmp	w9, #0x44c
  421824:	b.ge	42183c <server_process_audit_message+0x358>  // b.tcont
  421828:	ldur	x8, [x29, #-56]
  42182c:	ldrh	w9, [x8, #4]
  421830:	cmp	w9, #0x3ed
  421834:	b.eq	42183c <server_process_audit_message+0x358>  // b.none
  421838:	b	421864 <server_process_audit_message+0x380>
  42183c:	ldur	x0, [x29, #-8]
  421840:	ldur	x8, [x29, #-56]
  421844:	ldrh	w1, [x8, #4]
  421848:	ldur	x8, [x29, #-56]
  42184c:	add	x2, x8, #0x10
  421850:	ldur	x8, [x29, #-56]
  421854:	ldr	w9, [x8]
  421858:	mov	w8, w9
  42185c:	subs	x3, x8, #0x10
  421860:	bl	420420 <process_audit_string>
  421864:	ldp	x29, x30, [sp, #144]
  421868:	add	sp, sp, #0xa0
  42186c:	ret

0000000000421870 <server_open_audit>:
  421870:	sub	sp, sp, #0xc0
  421874:	stp	x29, x30, [sp, #176]
  421878:	add	x29, sp, #0xb0
  42187c:	adrp	x8, 42e000 <_fini+0x43a8>
  421880:	add	x8, x8, #0x890
  421884:	add	x8, x8, #0x3
  421888:	adrp	x9, 42e000 <_fini+0x43a8>
  42188c:	add	x9, x9, #0xab9
  421890:	stur	x0, [x29, #-16]
  421894:	ldur	x10, [x29, #-16]
  421898:	ldr	w11, [x10, #16]
  42189c:	cmp	w11, #0x0
  4218a0:	cset	w11, ge  // ge = tcont
  4218a4:	str	x8, [sp, #40]
  4218a8:	str	x9, [sp, #32]
  4218ac:	tbnz	w11, #0, 421b00 <server_open_audit+0x290>
  4218b0:	mov	w0, #0x10                  	// #16
  4218b4:	mov	w1, #0x803                 	// #2051
  4218b8:	movk	w1, #0x8, lsl #16
  4218bc:	mov	w2, #0x9                   	// #9
  4218c0:	bl	405eb8 <socket@plt>
  4218c4:	ldur	x8, [x29, #-16]
  4218c8:	str	w0, [x8, #16]
  4218cc:	ldur	x8, [x29, #-16]
  4218d0:	ldr	w9, [x8, #16]
  4218d4:	cmp	w9, #0x0
  4218d8:	cset	w9, ge  // ge = tcont
  4218dc:	tbnz	w9, #0, 421a38 <server_open_audit+0x1c8>
  4218e0:	mov	w8, #0x0                   	// #0
  4218e4:	sturb	w8, [x29, #-21]
  4218e8:	bl	405768 <__errno_location@plt>
  4218ec:	ldr	w8, [x0]
  4218f0:	cmp	w8, #0x5d
  4218f4:	str	w8, [sp, #28]
  4218f8:	b.eq	421918 <server_open_audit+0xa8>  // b.none
  4218fc:	b	421900 <server_open_audit+0x90>
  421900:	ldr	w8, [sp, #28]
  421904:	cmp	w8, #0x61
  421908:	cset	w9, eq  // eq = none
  42190c:	eor	w9, w9, #0x1
  421910:	tbnz	w9, #0, 421924 <server_open_audit+0xb4>
  421914:	b	421918 <server_open_audit+0xa8>
  421918:	mov	w8, #0x1                   	// #1
  42191c:	sturb	w8, [x29, #-21]
  421920:	b	421924 <server_open_audit+0xb4>
  421924:	ldurb	w8, [x29, #-21]
  421928:	and	w8, w8, #0x1
  42192c:	sturb	w8, [x29, #-22]
  421930:	ldurb	w8, [x29, #-22]
  421934:	tbnz	w8, #0, 42193c <server_open_audit+0xcc>
  421938:	b	4219b4 <server_open_audit+0x144>
  42193c:	mov	w8, #0x7                   	// #7
  421940:	stur	w8, [x29, #-28]
  421944:	stur	wzr, [x29, #-32]
  421948:	stur	wzr, [x29, #-36]
  42194c:	ldur	w0, [x29, #-36]
  421950:	bl	405638 <log_get_max_level_realm@plt>
  421954:	ldur	w8, [x29, #-28]
  421958:	and	w8, w8, #0x7
  42195c:	cmp	w0, w8
  421960:	b.lt	421994 <server_open_audit+0x124>  // b.tstop
  421964:	ldur	w8, [x29, #-36]
  421968:	ldur	w9, [x29, #-28]
  42196c:	orr	w0, w9, w8, lsl #10
  421970:	ldur	w1, [x29, #-32]
  421974:	ldr	x2, [sp, #40]
  421978:	mov	w3, #0x204                 	// #516
  42197c:	ldr	x4, [sp, #32]
  421980:	adrp	x5, 42e000 <_fini+0x43a8>
  421984:	add	x5, x5, #0xacb
  421988:	bl	405648 <log_internal_realm@plt>
  42198c:	str	w0, [sp, #24]
  421990:	b	4219a8 <server_open_audit+0x138>
  421994:	ldur	w0, [x29, #-32]
  421998:	bl	405658 <abs@plt>
  42199c:	mov	w8, wzr
  4219a0:	subs	w8, w8, w0, uxtb
  4219a4:	str	w8, [sp, #24]
  4219a8:	ldr	w8, [sp, #24]
  4219ac:	stur	w8, [x29, #-40]
  4219b0:	b	421a30 <server_open_audit+0x1c0>
  4219b4:	mov	w8, #0x4                   	// #4
  4219b8:	stur	w8, [x29, #-44]
  4219bc:	bl	405768 <__errno_location@plt>
  4219c0:	ldr	w8, [x0]
  4219c4:	stur	w8, [x29, #-48]
  4219c8:	stur	wzr, [x29, #-52]
  4219cc:	ldur	w0, [x29, #-52]
  4219d0:	bl	405638 <log_get_max_level_realm@plt>
  4219d4:	ldur	w8, [x29, #-44]
  4219d8:	and	w8, w8, #0x7
  4219dc:	cmp	w0, w8
  4219e0:	b.lt	421a14 <server_open_audit+0x1a4>  // b.tstop
  4219e4:	ldur	w8, [x29, #-52]
  4219e8:	ldur	w9, [x29, #-44]
  4219ec:	orr	w0, w9, w8, lsl #10
  4219f0:	ldur	w1, [x29, #-48]
  4219f4:	ldr	x2, [sp, #40]
  4219f8:	mov	w3, #0x206                 	// #518
  4219fc:	ldr	x4, [sp, #32]
  421a00:	adrp	x5, 42e000 <_fini+0x43a8>
  421a04:	add	x5, x5, #0xaee
  421a08:	bl	405648 <log_internal_realm@plt>
  421a0c:	str	w0, [sp, #20]
  421a10:	b	421a28 <server_open_audit+0x1b8>
  421a14:	ldur	w0, [x29, #-48]
  421a18:	bl	405658 <abs@plt>
  421a1c:	mov	w8, wzr
  421a20:	subs	w8, w8, w0, uxtb
  421a24:	str	w8, [sp, #20]
  421a28:	ldr	w8, [sp, #20]
  421a2c:	stur	w8, [x29, #-56]
  421a30:	stur	wzr, [x29, #-4]
  421a34:	b	421d30 <server_open_audit+0x4c0>
  421a38:	ldur	x8, [x29, #-16]
  421a3c:	ldr	w0, [x8, #16]
  421a40:	adrp	x8, 430000 <_fini+0x63a8>
  421a44:	add	x8, x8, #0xb20
  421a48:	stur	x8, [x29, #-64]
  421a4c:	ldur	x1, [x29, #-64]
  421a50:	mov	w2, #0xc                   	// #12
  421a54:	bl	4061e8 <bind@plt>
  421a58:	cmp	w0, #0x0
  421a5c:	cset	w9, ge  // ge = tcont
  421a60:	tbnz	w9, #0, 421afc <server_open_audit+0x28c>
  421a64:	mov	w8, #0x4                   	// #4
  421a68:	stur	w8, [x29, #-68]
  421a6c:	bl	405768 <__errno_location@plt>
  421a70:	ldr	w8, [x0]
  421a74:	stur	w8, [x29, #-72]
  421a78:	stur	wzr, [x29, #-76]
  421a7c:	ldur	w0, [x29, #-76]
  421a80:	bl	405638 <log_get_max_level_realm@plt>
  421a84:	ldur	w8, [x29, #-68]
  421a88:	and	w8, w8, #0x7
  421a8c:	cmp	w0, w8
  421a90:	b.lt	421ac4 <server_open_audit+0x254>  // b.tstop
  421a94:	ldur	w8, [x29, #-76]
  421a98:	ldur	w9, [x29, #-68]
  421a9c:	orr	w0, w9, w8, lsl #10
  421aa0:	ldur	w1, [x29, #-72]
  421aa4:	ldr	x2, [sp, #40]
  421aa8:	mov	w3, #0x20f                 	// #527
  421aac:	ldr	x4, [sp, #32]
  421ab0:	adrp	x5, 42e000 <_fini+0x43a8>
  421ab4:	add	x5, x5, #0xb1a
  421ab8:	bl	405648 <log_internal_realm@plt>
  421abc:	str	w0, [sp, #16]
  421ac0:	b	421ad8 <server_open_audit+0x268>
  421ac4:	ldur	w0, [x29, #-72]
  421ac8:	bl	405658 <abs@plt>
  421acc:	mov	w8, wzr
  421ad0:	subs	w8, w8, w0, uxtb
  421ad4:	str	w8, [sp, #16]
  421ad8:	ldr	w8, [sp, #16]
  421adc:	stur	w8, [x29, #-80]
  421ae0:	ldur	x9, [x29, #-16]
  421ae4:	ldr	w0, [x9, #16]
  421ae8:	bl	4058c8 <safe_close@plt>
  421aec:	ldur	x9, [x29, #-16]
  421af0:	str	w0, [x9, #16]
  421af4:	stur	wzr, [x29, #-4]
  421af8:	b	421d30 <server_open_audit+0x4c0>
  421afc:	b	421b14 <server_open_audit+0x2a4>
  421b00:	ldur	x8, [x29, #-16]
  421b04:	ldr	w0, [x8, #16]
  421b08:	mov	w9, #0x1                   	// #1
  421b0c:	and	w1, w9, #0x1
  421b10:	bl	406218 <fd_nonblock@plt>
  421b14:	ldur	x8, [x29, #-16]
  421b18:	ldr	w0, [x8, #16]
  421b1c:	mov	w9, #0x1                   	// #1
  421b20:	mov	w1, w9
  421b24:	mov	w2, #0x10                  	// #16
  421b28:	mov	w3, w9
  421b2c:	bl	421d40 <setsockopt_int>
  421b30:	stur	w0, [x29, #-20]
  421b34:	ldur	w9, [x29, #-20]
  421b38:	cmp	w9, #0x0
  421b3c:	cset	w9, ge  // ge = tcont
  421b40:	tbnz	w9, #0, 421bc8 <server_open_audit+0x358>
  421b44:	mov	w8, #0x3                   	// #3
  421b48:	stur	w8, [x29, #-84]
  421b4c:	ldur	w8, [x29, #-20]
  421b50:	str	w8, [sp, #88]
  421b54:	str	wzr, [sp, #84]
  421b58:	ldr	w0, [sp, #84]
  421b5c:	bl	405638 <log_get_max_level_realm@plt>
  421b60:	ldur	w8, [x29, #-84]
  421b64:	and	w8, w8, #0x7
  421b68:	cmp	w0, w8
  421b6c:	b.lt	421ba0 <server_open_audit+0x330>  // b.tstop
  421b70:	ldr	w8, [sp, #84]
  421b74:	ldur	w9, [x29, #-84]
  421b78:	orr	w0, w9, w8, lsl #10
  421b7c:	ldr	w1, [sp, #88]
  421b80:	ldr	x2, [sp, #40]
  421b84:	mov	w3, #0x218                 	// #536
  421b88:	ldr	x4, [sp, #32]
  421b8c:	adrp	x5, 42e000 <_fini+0x43a8>
  421b90:	add	x5, x5, #0xb93
  421b94:	bl	405648 <log_internal_realm@plt>
  421b98:	str	w0, [sp, #12]
  421b9c:	b	421bb4 <server_open_audit+0x344>
  421ba0:	ldr	w0, [sp, #88]
  421ba4:	bl	405658 <abs@plt>
  421ba8:	mov	w8, wzr
  421bac:	subs	w8, w8, w0, uxtb
  421bb0:	str	w8, [sp, #12]
  421bb4:	ldr	w8, [sp, #12]
  421bb8:	str	w8, [sp, #80]
  421bbc:	ldr	w8, [sp, #80]
  421bc0:	stur	w8, [x29, #-4]
  421bc4:	b	421d30 <server_open_audit+0x4c0>
  421bc8:	ldur	x8, [x29, #-16]
  421bcc:	ldr	x0, [x8, #32]
  421bd0:	ldur	x8, [x29, #-16]
  421bd4:	add	x1, x8, #0x48
  421bd8:	ldur	x8, [x29, #-16]
  421bdc:	ldr	w2, [x8, #16]
  421be0:	ldur	x5, [x29, #-16]
  421be4:	mov	w3, #0x1                   	// #1
  421be8:	adrp	x4, 44f000 <journald_gperf_lookup.wordlist+0x448>
  421bec:	ldr	x4, [x4, #1832]
  421bf0:	bl	4058a8 <sd_event_add_io@plt>
  421bf4:	stur	w0, [x29, #-20]
  421bf8:	ldur	w9, [x29, #-20]
  421bfc:	cmp	w9, #0x0
  421c00:	cset	w9, ge  // ge = tcont
  421c04:	tbnz	w9, #0, 421c8c <server_open_audit+0x41c>
  421c08:	mov	w8, #0x3                   	// #3
  421c0c:	str	w8, [sp, #76]
  421c10:	ldur	w8, [x29, #-20]
  421c14:	str	w8, [sp, #72]
  421c18:	str	wzr, [sp, #68]
  421c1c:	ldr	w0, [sp, #68]
  421c20:	bl	405638 <log_get_max_level_realm@plt>
  421c24:	ldr	w8, [sp, #76]
  421c28:	and	w8, w8, #0x7
  421c2c:	cmp	w0, w8
  421c30:	b.lt	421c64 <server_open_audit+0x3f4>  // b.tstop
  421c34:	ldr	w8, [sp, #68]
  421c38:	ldr	w9, [sp, #76]
  421c3c:	orr	w0, w9, w8, lsl #10
  421c40:	ldr	w1, [sp, #72]
  421c44:	ldr	x2, [sp, #40]
  421c48:	mov	w3, #0x21c                 	// #540
  421c4c:	ldr	x4, [sp, #32]
  421c50:	adrp	x5, 42e000 <_fini+0x43a8>
  421c54:	add	x5, x5, #0xbc1
  421c58:	bl	405648 <log_internal_realm@plt>
  421c5c:	str	w0, [sp, #8]
  421c60:	b	421c78 <server_open_audit+0x408>
  421c64:	ldr	w0, [sp, #72]
  421c68:	bl	405658 <abs@plt>
  421c6c:	mov	w8, wzr
  421c70:	subs	w8, w8, w0, uxtb
  421c74:	str	w8, [sp, #8]
  421c78:	ldr	w8, [sp, #8]
  421c7c:	str	w8, [sp, #64]
  421c80:	ldr	w8, [sp, #64]
  421c84:	stur	w8, [x29, #-4]
  421c88:	b	421d30 <server_open_audit+0x4c0>
  421c8c:	ldur	x8, [x29, #-16]
  421c90:	ldr	w0, [x8, #16]
  421c94:	mov	w9, #0x1                   	// #1
  421c98:	and	w1, w9, #0x1
  421c9c:	bl	421db0 <enable_audit>
  421ca0:	stur	w0, [x29, #-20]
  421ca4:	ldur	w9, [x29, #-20]
  421ca8:	cmp	w9, #0x0
  421cac:	cset	w9, ge  // ge = tcont
  421cb0:	tbnz	w9, #0, 421d2c <server_open_audit+0x4bc>
  421cb4:	mov	w8, #0x4                   	// #4
  421cb8:	str	w8, [sp, #60]
  421cbc:	ldur	w8, [x29, #-20]
  421cc0:	str	w8, [sp, #56]
  421cc4:	str	wzr, [sp, #52]
  421cc8:	ldr	w0, [sp, #52]
  421ccc:	bl	405638 <log_get_max_level_realm@plt>
  421cd0:	ldr	w8, [sp, #60]
  421cd4:	and	w8, w8, #0x7
  421cd8:	cmp	w0, w8
  421cdc:	b.lt	421d10 <server_open_audit+0x4a0>  // b.tstop
  421ce0:	ldr	w8, [sp, #52]
  421ce4:	ldr	w9, [sp, #60]
  421ce8:	orr	w0, w9, w8, lsl #10
  421cec:	ldr	w1, [sp, #56]
  421cf0:	ldr	x2, [sp, #40]
  421cf4:	mov	w3, #0x221                 	// #545
  421cf8:	ldr	x4, [sp, #32]
  421cfc:	adrp	x5, 42e000 <_fini+0x43a8>
  421d00:	add	x5, x5, #0xbea
  421d04:	bl	405648 <log_internal_realm@plt>
  421d08:	str	w0, [sp, #4]
  421d0c:	b	421d24 <server_open_audit+0x4b4>
  421d10:	ldr	w0, [sp, #56]
  421d14:	bl	405658 <abs@plt>
  421d18:	mov	w8, wzr
  421d1c:	subs	w8, w8, w0, uxtb
  421d20:	str	w8, [sp, #4]
  421d24:	ldr	w8, [sp, #4]
  421d28:	str	w8, [sp, #48]
  421d2c:	stur	wzr, [x29, #-4]
  421d30:	ldur	w0, [x29, #-4]
  421d34:	ldp	x29, x30, [sp, #176]
  421d38:	add	sp, sp, #0xc0
  421d3c:	ret

0000000000421d40 <setsockopt_int>:
  421d40:	sub	sp, sp, #0x30
  421d44:	stp	x29, x30, [sp, #32]
  421d48:	add	x29, sp, #0x20
  421d4c:	mov	w4, #0x4                   	// #4
  421d50:	add	x8, sp, #0xc
  421d54:	stur	w0, [x29, #-8]
  421d58:	stur	w1, [x29, #-12]
  421d5c:	str	w2, [sp, #16]
  421d60:	str	w3, [sp, #12]
  421d64:	ldur	w0, [x29, #-8]
  421d68:	ldur	w1, [x29, #-12]
  421d6c:	ldr	w2, [sp, #16]
  421d70:	mov	x3, x8
  421d74:	bl	406168 <setsockopt@plt>
  421d78:	cmp	w0, #0x0
  421d7c:	cset	w9, ge  // ge = tcont
  421d80:	tbnz	w9, #0, 421d9c <setsockopt_int+0x5c>
  421d84:	bl	405768 <__errno_location@plt>
  421d88:	ldr	w8, [x0]
  421d8c:	mov	w9, wzr
  421d90:	subs	w8, w9, w8
  421d94:	stur	w8, [x29, #-4]
  421d98:	b	421da0 <setsockopt_int+0x60>
  421d9c:	stur	wzr, [x29, #-4]
  421da0:	ldur	w0, [x29, #-4]
  421da4:	ldp	x29, x30, [sp, #32]
  421da8:	add	sp, sp, #0x30
  421dac:	ret

0000000000421db0 <enable_audit>:
  421db0:	sub	sp, sp, #0x1a0
  421db4:	stp	x29, x30, [sp, #384]
  421db8:	stp	x28, x19, [sp, #400]
  421dbc:	add	x29, sp, #0x180
  421dc0:	sub	x8, x29, #0x41
  421dc4:	mov	w9, #0x38                  	// #56
  421dc8:	mov	w10, #0x3e9                 	// #1001
  421dcc:	mov	w11, #0x1                   	// #1
  421dd0:	mov	w12, #0x1                   	// #1
  421dd4:	mov	w13, wzr
  421dd8:	mov	x2, #0x28                  	// #40
  421ddc:	mov	x14, #0x80                  	// #128
  421de0:	mov	w15, #0x10                  	// #16
  421de4:	mov	x16, #0x38                  	// #56
  421de8:	mov	w17, #0xc                   	// #12
  421dec:	mov	x18, #0x1                   	// #1
  421df0:	mov	x3, xzr
  421df4:	mov	w4, #0x4000                	// #16384
  421df8:	sub	x5, x29, #0x41
  421dfc:	add	x6, sp, #0xb8
  421e00:	add	x7, sp, #0xa8
  421e04:	add	x19, sp, #0x70
  421e08:	stur	w0, [x29, #-8]
  421e0c:	and	w0, w1, w12
  421e10:	sturb	w0, [x29, #-9]
  421e14:	str	w9, [x8]
  421e18:	strh	w10, [x5, #4]
  421e1c:	strh	w11, [x5, #6]
  421e20:	str	w12, [x8, #8]
  421e24:	str	wzr, [x8, #12]
  421e28:	add	x0, x5, #0x10
  421e2c:	mov	w1, w13
  421e30:	str	x8, [sp, #96]
  421e34:	str	w12, [sp, #92]
  421e38:	str	w13, [sp, #88]
  421e3c:	str	x14, [sp, #80]
  421e40:	str	w15, [sp, #76]
  421e44:	str	x16, [sp, #64]
  421e48:	str	w17, [sp, #60]
  421e4c:	str	x18, [sp, #48]
  421e50:	str	x3, [sp, #40]
  421e54:	str	w4, [sp, #36]
  421e58:	str	x5, [sp, #24]
  421e5c:	str	x6, [sp, #16]
  421e60:	str	x7, [sp, #8]
  421e64:	str	x19, [sp]
  421e68:	bl	405c28 <memset@plt>
  421e6c:	ldr	w9, [sp, #92]
  421e70:	ldr	x8, [sp, #96]
  421e74:	str	w9, [x8, #16]
  421e78:	ldurb	w10, [x29, #-9]
  421e7c:	and	w10, w10, #0x1
  421e80:	str	w10, [x8, #20]
  421e84:	ldr	x0, [sp, #16]
  421e88:	ldr	w10, [sp, #88]
  421e8c:	mov	w1, w10
  421e90:	ldr	x2, [sp, #80]
  421e94:	bl	405c28 <memset@plt>
  421e98:	ldr	w9, [sp, #76]
  421e9c:	strh	w9, [sp, #184]
  421ea0:	ldr	x8, [sp, #24]
  421ea4:	str	x8, [sp, #168]
  421ea8:	ldr	x14, [sp, #64]
  421eac:	str	x14, [sp, #176]
  421eb0:	ldr	x16, [sp, #16]
  421eb4:	str	x16, [sp, #112]
  421eb8:	ldr	w10, [sp, #60]
  421ebc:	str	w10, [sp, #120]
  421ec0:	ldr	x18, [sp, #8]
  421ec4:	ldr	x0, [sp]
  421ec8:	str	x18, [x0, #16]
  421ecc:	ldr	x2, [sp, #48]
  421ed0:	str	x2, [sp, #136]
  421ed4:	ldr	x3, [sp, #40]
  421ed8:	str	x3, [x0, #32]
  421edc:	str	xzr, [sp, #152]
  421ee0:	str	wzr, [sp, #160]
  421ee4:	ldur	w0, [x29, #-8]
  421ee8:	ldr	x1, [sp]
  421eec:	ldr	w2, [sp, #36]
  421ef0:	bl	406238 <sendmsg@plt>
  421ef4:	str	x0, [sp, #104]
  421ef8:	ldr	x8, [sp, #104]
  421efc:	cmp	x8, #0x0
  421f00:	cset	w9, ge  // ge = tcont
  421f04:	tbnz	w9, #0, 421f20 <enable_audit+0x170>
  421f08:	bl	405768 <__errno_location@plt>
  421f0c:	ldr	w8, [x0]
  421f10:	mov	w9, wzr
  421f14:	subs	w8, w9, w8
  421f18:	stur	w8, [x29, #-4]
  421f1c:	b	421f3c <enable_audit+0x18c>
  421f20:	ldr	x8, [sp, #104]
  421f24:	cmp	x8, #0x38
  421f28:	b.eq	421f38 <enable_audit+0x188>  // b.none
  421f2c:	mov	w8, #0xfffffffb            	// #-5
  421f30:	stur	w8, [x29, #-4]
  421f34:	b	421f3c <enable_audit+0x18c>
  421f38:	stur	wzr, [x29, #-4]
  421f3c:	ldur	w0, [x29, #-4]
  421f40:	ldp	x28, x19, [sp, #400]
  421f44:	ldp	x29, x30, [sp, #384]
  421f48:	add	sp, sp, #0x1a0
  421f4c:	ret

0000000000421f50 <map_generic_field>:
  421f50:	stp	x29, x30, [sp, #-16]!
  421f54:	mov	x29, sp
  421f58:	sub	sp, sp, #0x80
  421f5c:	adrp	x8, 42e000 <_fini+0x43a8>
  421f60:	add	x8, x8, #0x890
  421f64:	add	x8, x8, #0x3
  421f68:	stur	x0, [x29, #-16]
  421f6c:	stur	x1, [x29, #-24]
  421f70:	stur	x2, [x29, #-32]
  421f74:	stur	x3, [x29, #-40]
  421f78:	stur	x4, [x29, #-48]
  421f7c:	ldur	x9, [x29, #-24]
  421f80:	ldr	x9, [x9]
  421f84:	stur	x9, [x29, #-56]
  421f88:	stur	x8, [x29, #-120]
  421f8c:	ldur	x8, [x29, #-56]
  421f90:	ldur	x9, [x29, #-24]
  421f94:	ldr	x9, [x9]
  421f98:	add	x9, x9, #0x10
  421f9c:	cmp	x8, x9
  421fa0:	b.cs	4220e8 <map_generic_field+0x198>  // b.hs, b.nlast
  421fa4:	mov	w8, #0x0                   	// #0
  421fa8:	sturb	w8, [x29, #-85]
  421fac:	ldur	x9, [x29, #-56]
  421fb0:	ldrb	w8, [x9]
  421fb4:	stur	w8, [x29, #-124]
  421fb8:	cbz	w8, 421fd8 <map_generic_field+0x88>
  421fbc:	b	421fc0 <map_generic_field+0x70>
  421fc0:	ldur	w8, [x29, #-124]
  421fc4:	cmp	w8, #0x20
  421fc8:	cset	w9, eq  // eq = none
  421fcc:	eor	w9, w9, #0x1
  421fd0:	tbnz	w9, #0, 421fe4 <map_generic_field+0x94>
  421fd4:	b	421fd8 <map_generic_field+0x88>
  421fd8:	mov	w8, #0x1                   	// #1
  421fdc:	sturb	w8, [x29, #-85]
  421fe0:	b	421fe4 <map_generic_field+0x94>
  421fe4:	ldurb	w8, [x29, #-85]
  421fe8:	and	w8, w8, #0x1
  421fec:	sturb	w8, [x29, #-86]
  421ff0:	ldurb	w8, [x29, #-86]
  421ff4:	tbnz	w8, #0, 421ffc <map_generic_field+0xac>
  421ff8:	b	422004 <map_generic_field+0xb4>
  421ffc:	stur	wzr, [x29, #-4]
  422000:	b	422338 <map_generic_field+0x3e8>
  422004:	ldur	x8, [x29, #-56]
  422008:	ldrb	w9, [x8]
  42200c:	cmp	w9, #0x3d
  422010:	b.ne	422018 <map_generic_field+0xc8>  // b.any
  422014:	b	4220e8 <map_generic_field+0x198>
  422018:	ldur	x8, [x29, #-56]
  42201c:	ldrb	w9, [x8]
  422020:	cmp	w9, #0x61
  422024:	b.lt	422038 <map_generic_field+0xe8>  // b.tstop
  422028:	ldur	x8, [x29, #-56]
  42202c:	ldrb	w9, [x8]
  422030:	cmp	w9, #0x7a
  422034:	b.le	4220d8 <map_generic_field+0x188>
  422038:	ldur	x8, [x29, #-56]
  42203c:	ldrb	w9, [x8]
  422040:	cmp	w9, #0x41
  422044:	b.lt	422058 <map_generic_field+0x108>  // b.tstop
  422048:	ldur	x8, [x29, #-56]
  42204c:	ldrb	w9, [x8]
  422050:	cmp	w9, #0x5a
  422054:	b.le	4220d8 <map_generic_field+0x188>
  422058:	ldur	x8, [x29, #-56]
  42205c:	ldrb	w9, [x8]
  422060:	cmp	w9, #0x30
  422064:	b.lt	422078 <map_generic_field+0x128>  // b.tstop
  422068:	ldur	x8, [x29, #-56]
  42206c:	ldrb	w9, [x8]
  422070:	cmp	w9, #0x39
  422074:	b.le	4220d8 <map_generic_field+0x188>
  422078:	mov	w8, #0x0                   	// #0
  42207c:	sturb	w8, [x29, #-87]
  422080:	ldur	x9, [x29, #-56]
  422084:	ldrb	w8, [x9]
  422088:	cmp	w8, #0x2d
  42208c:	stur	w8, [x29, #-128]
  422090:	b.eq	4220b0 <map_generic_field+0x160>  // b.none
  422094:	b	422098 <map_generic_field+0x148>
  422098:	ldur	w8, [x29, #-128]
  42209c:	cmp	w8, #0x5f
  4220a0:	cset	w9, eq  // eq = none
  4220a4:	eor	w9, w9, #0x1
  4220a8:	tbnz	w9, #0, 4220bc <map_generic_field+0x16c>
  4220ac:	b	4220b0 <map_generic_field+0x160>
  4220b0:	mov	w8, #0x1                   	// #1
  4220b4:	sturb	w8, [x29, #-87]
  4220b8:	b	4220bc <map_generic_field+0x16c>
  4220bc:	ldurb	w8, [x29, #-87]
  4220c0:	and	w8, w8, #0x1
  4220c4:	sturb	w8, [x29, #-88]
  4220c8:	ldurb	w8, [x29, #-88]
  4220cc:	tbnz	w8, #0, 4220d8 <map_generic_field+0x188>
  4220d0:	stur	wzr, [x29, #-4]
  4220d4:	b	422338 <map_generic_field+0x3e8>
  4220d8:	ldur	x8, [x29, #-56]
  4220dc:	add	x8, x8, #0x1
  4220e0:	stur	x8, [x29, #-56]
  4220e4:	b	421f8c <map_generic_field+0x3c>
  4220e8:	ldur	x8, [x29, #-56]
  4220ec:	ldur	x9, [x29, #-24]
  4220f0:	ldr	x9, [x9]
  4220f4:	cmp	x8, x9
  4220f8:	b.ls	422114 <map_generic_field+0x1c4>  // b.plast
  4220fc:	ldur	x8, [x29, #-56]
  422100:	ldur	x9, [x29, #-24]
  422104:	ldr	x9, [x9]
  422108:	add	x9, x9, #0x10
  42210c:	cmp	x8, x9
  422110:	b.cc	42211c <map_generic_field+0x1cc>  // b.lo, b.ul, b.last
  422114:	stur	wzr, [x29, #-4]
  422118:	b	422338 <map_generic_field+0x3e8>
  42211c:	ldur	x0, [x29, #-16]
  422120:	bl	405738 <strlen@plt>
  422124:	ldur	x8, [x29, #-56]
  422128:	ldur	x9, [x29, #-24]
  42212c:	ldr	x9, [x9]
  422130:	subs	x8, x8, x9
  422134:	add	x8, x0, x8
  422138:	add	x8, x8, #0x2
  42213c:	stur	x8, [x29, #-96]
  422140:	ldur	x1, [x29, #-96]
  422144:	mov	x0, #0x1                   	// #1
  422148:	bl	420fd8 <size_multiply_overflow>
  42214c:	mov	w8, #0x1                   	// #1
  422150:	eor	w9, w0, #0x1
  422154:	eor	w9, w9, w8
  422158:	eor	w9, w9, w8
  42215c:	eor	w8, w9, w8
  422160:	and	w8, w8, #0x1
  422164:	mov	w1, w8
  422168:	sxtw	x10, w1
  42216c:	cbz	x10, 422194 <map_generic_field+0x244>
  422170:	mov	w8, wzr
  422174:	mov	w0, w8
  422178:	adrp	x1, 42b000 <_fini+0x13a8>
  42217c:	add	x1, x1, #0x876
  422180:	ldur	x2, [x29, #-120]
  422184:	mov	w3, #0xa5                  	// #165
  422188:	adrp	x4, 42e000 <_fini+0x43a8>
  42218c:	add	x4, x4, #0xdba
  422190:	bl	405718 <log_assert_failed_realm@plt>
  422194:	ldur	x8, [x29, #-96]
  422198:	mov	x9, #0x1                   	// #1
  42219c:	mul	x8, x9, x8
  4221a0:	cmp	x8, #0x400, lsl #12
  4221a4:	cset	w10, ls  // ls = plast
  4221a8:	mov	w11, #0x1                   	// #1
  4221ac:	eor	w10, w10, #0x1
  4221b0:	eor	w10, w10, w11
  4221b4:	eor	w10, w10, w11
  4221b8:	and	w10, w10, #0x1
  4221bc:	mov	w0, w10
  4221c0:	sxtw	x8, w0
  4221c4:	cbz	x8, 4221ec <map_generic_field+0x29c>
  4221c8:	mov	w8, wzr
  4221cc:	mov	w0, w8
  4221d0:	adrp	x1, 42b000 <_fini+0x13a8>
  4221d4:	add	x1, x1, #0x8a1
  4221d8:	ldur	x2, [x29, #-120]
  4221dc:	mov	w3, #0xa5                  	// #165
  4221e0:	adrp	x4, 42e000 <_fini+0x43a8>
  4221e4:	add	x4, x4, #0xdba
  4221e8:	bl	405718 <log_assert_failed_realm@plt>
  4221ec:	ldur	x8, [x29, #-96]
  4221f0:	mov	x9, #0x1                   	// #1
  4221f4:	mul	x8, x9, x8
  4221f8:	mul	x8, x8, x9
  4221fc:	add	x8, x8, #0xf
  422200:	and	x8, x8, #0xfffffffffffffff0
  422204:	mov	x9, sp
  422208:	subs	x8, x9, x8
  42220c:	mov	sp, x8
  422210:	stur	x8, [x29, #-104]
  422214:	ldur	x8, [x29, #-104]
  422218:	stur	x8, [x29, #-72]
  42221c:	ldur	x0, [x29, #-72]
  422220:	ldur	x1, [x29, #-16]
  422224:	bl	405ad8 <stpcpy@plt>
  422228:	stur	x0, [x29, #-80]
  42222c:	ldur	x8, [x29, #-24]
  422230:	ldr	x8, [x8]
  422234:	stur	x8, [x29, #-64]
  422238:	ldur	x8, [x29, #-64]
  42223c:	ldur	x9, [x29, #-56]
  422240:	cmp	x8, x9
  422244:	b.cs	4222cc <map_generic_field+0x37c>  // b.hs, b.nlast
  422248:	ldur	x8, [x29, #-64]
  42224c:	ldrb	w9, [x8]
  422250:	cmp	w9, #0x61
  422254:	b.lt	422280 <map_generic_field+0x330>  // b.tstop
  422258:	ldur	x8, [x29, #-64]
  42225c:	ldrb	w9, [x8]
  422260:	cmp	w9, #0x7a
  422264:	b.gt	422280 <map_generic_field+0x330>
  422268:	ldur	x8, [x29, #-64]
  42226c:	ldrb	w9, [x8]
  422270:	subs	w9, w9, #0x61
  422274:	add	w9, w9, #0x41
  422278:	sturb	w9, [x29, #-105]
  42227c:	b	4222a8 <map_generic_field+0x358>
  422280:	ldur	x8, [x29, #-64]
  422284:	ldrb	w9, [x8]
  422288:	cmp	w9, #0x2d
  42228c:	b.ne	42229c <map_generic_field+0x34c>  // b.any
  422290:	mov	w8, #0x5f                  	// #95
  422294:	sturb	w8, [x29, #-105]
  422298:	b	4222a8 <map_generic_field+0x358>
  42229c:	ldur	x8, [x29, #-64]
  4222a0:	ldrb	w9, [x8]
  4222a4:	sturb	w9, [x29, #-105]
  4222a8:	ldurb	w8, [x29, #-105]
  4222ac:	ldur	x9, [x29, #-80]
  4222b0:	add	x10, x9, #0x1
  4222b4:	stur	x10, [x29, #-80]
  4222b8:	strb	w8, [x9]
  4222bc:	ldur	x8, [x29, #-64]
  4222c0:	add	x8, x8, #0x1
  4222c4:	stur	x8, [x29, #-64]
  4222c8:	b	422238 <map_generic_field+0x2e8>
  4222cc:	ldur	x0, [x29, #-80]
  4222d0:	adrp	x1, 42e000 <_fini+0x43a8>
  4222d4:	add	x1, x1, #0xe12
  4222d8:	bl	406418 <strcpy@plt>
  4222dc:	sub	x1, x29, #0x38
  4222e0:	ldur	x8, [x29, #-56]
  4222e4:	add	x8, x8, #0x1
  4222e8:	stur	x8, [x29, #-56]
  4222ec:	ldur	x8, [x29, #-72]
  4222f0:	ldur	x2, [x29, #-32]
  4222f4:	ldur	x3, [x29, #-40]
  4222f8:	ldur	x4, [x29, #-48]
  4222fc:	mov	x0, x8
  422300:	bl	42288c <map_simple_field>
  422304:	stur	w0, [x29, #-84]
  422308:	ldur	w9, [x29, #-84]
  42230c:	cmp	w9, #0x0
  422310:	cset	w9, ge  // ge = tcont
  422314:	tbnz	w9, #0, 422324 <map_generic_field+0x3d4>
  422318:	ldur	w8, [x29, #-84]
  42231c:	stur	w8, [x29, #-4]
  422320:	b	422338 <map_generic_field+0x3e8>
  422324:	ldur	x8, [x29, #-56]
  422328:	ldur	x9, [x29, #-24]
  42232c:	str	x8, [x9]
  422330:	ldur	w10, [x29, #-84]
  422334:	stur	w10, [x29, #-4]
  422338:	ldur	w0, [x29, #-4]
  42233c:	mov	sp, x29
  422340:	ldp	x29, x30, [sp], #16
  422344:	ret

0000000000422348 <map_string_field>:
  422348:	sub	sp, sp, #0x40
  42234c:	stp	x29, x30, [sp, #48]
  422350:	add	x29, sp, #0x30
  422354:	stur	x0, [x29, #-8]
  422358:	stur	x1, [x29, #-16]
  42235c:	str	x2, [sp, #24]
  422360:	str	x3, [sp, #16]
  422364:	str	x4, [sp, #8]
  422368:	ldur	x0, [x29, #-8]
  42236c:	ldur	x1, [x29, #-16]
  422370:	ldr	x2, [sp, #24]
  422374:	ldr	x3, [sp, #16]
  422378:	ldr	x4, [sp, #8]
  42237c:	mov	w8, wzr
  422380:	and	w5, w8, #0x1
  422384:	bl	422394 <map_string_field_internal>
  422388:	ldp	x29, x30, [sp, #48]
  42238c:	add	sp, sp, #0x40
  422390:	ret

0000000000422394 <map_string_field_internal>:
  422394:	sub	sp, sp, #0xc0
  422398:	stp	x29, x30, [sp, #176]
  42239c:	add	x29, sp, #0xb0
  4223a0:	mov	x8, xzr
  4223a4:	mov	w9, #0x1                   	// #1
  4223a8:	adrp	x10, 42e000 <_fini+0x43a8>
  4223ac:	add	x10, x10, #0x890
  4223b0:	add	x10, x10, #0x3
  4223b4:	adrp	x11, 42e000 <_fini+0x43a8>
  4223b8:	add	x11, x11, #0xd53
  4223bc:	stur	x0, [x29, #-16]
  4223c0:	stur	x1, [x29, #-24]
  4223c4:	stur	x2, [x29, #-32]
  4223c8:	stur	x3, [x29, #-40]
  4223cc:	stur	x4, [x29, #-48]
  4223d0:	and	w9, w5, w9
  4223d4:	sturb	w9, [x29, #-49]
  4223d8:	stur	x8, [x29, #-64]
  4223dc:	str	x10, [sp, #32]
  4223e0:	str	x11, [sp, #24]
  4223e4:	ldur	x8, [x29, #-16]
  4223e8:	cmp	x8, #0x0
  4223ec:	cset	w9, ne  // ne = any
  4223f0:	mov	w10, #0x1                   	// #1
  4223f4:	eor	w9, w9, #0x1
  4223f8:	eor	w9, w9, w10
  4223fc:	eor	w9, w9, w10
  422400:	and	w9, w9, #0x1
  422404:	mov	w0, w9
  422408:	sxtw	x8, w0
  42240c:	cbz	x8, 422430 <map_string_field_internal+0x9c>
  422410:	mov	w8, wzr
  422414:	mov	w0, w8
  422418:	adrp	x1, 42e000 <_fini+0x43a8>
  42241c:	add	x1, x1, #0xd4d
  422420:	ldr	x2, [sp, #32]
  422424:	mov	w3, #0x3c                  	// #60
  422428:	ldr	x4, [sp, #24]
  42242c:	bl	405718 <log_assert_failed_realm@plt>
  422430:	ldur	x8, [x29, #-24]
  422434:	cmp	x8, #0x0
  422438:	cset	w9, ne  // ne = any
  42243c:	mov	w10, #0x1                   	// #1
  422440:	eor	w9, w9, #0x1
  422444:	eor	w9, w9, w10
  422448:	eor	w9, w9, w10
  42244c:	and	w9, w9, #0x1
  422450:	mov	w0, w9
  422454:	sxtw	x8, w0
  422458:	cbz	x8, 42247c <map_string_field_internal+0xe8>
  42245c:	mov	w8, wzr
  422460:	mov	w0, w8
  422464:	adrp	x1, 429000 <journal_ratelimit_group_free+0x70>
  422468:	add	x1, x1, #0xf43
  42246c:	ldr	x2, [sp, #32]
  422470:	mov	w3, #0x3d                  	// #61
  422474:	ldr	x4, [sp, #24]
  422478:	bl	405718 <log_assert_failed_realm@plt>
  42247c:	ldur	x8, [x29, #-32]
  422480:	cmp	x8, #0x0
  422484:	cset	w9, ne  // ne = any
  422488:	mov	w10, #0x1                   	// #1
  42248c:	eor	w9, w9, #0x1
  422490:	eor	w9, w9, w10
  422494:	eor	w9, w9, w10
  422498:	and	w9, w9, #0x1
  42249c:	mov	w0, w9
  4224a0:	sxtw	x8, w0
  4224a4:	cbz	x8, 4224c8 <map_string_field_internal+0x134>
  4224a8:	mov	w8, wzr
  4224ac:	mov	w0, w8
  4224b0:	adrp	x1, 42e000 <_fini+0x43a8>
  4224b4:	add	x1, x1, #0xc7d
  4224b8:	ldr	x2, [sp, #32]
  4224bc:	mov	w3, #0x3e                  	// #62
  4224c0:	ldr	x4, [sp, #24]
  4224c4:	bl	405718 <log_assert_failed_realm@plt>
  4224c8:	ldur	x8, [x29, #-48]
  4224cc:	cmp	x8, #0x0
  4224d0:	cset	w9, ne  // ne = any
  4224d4:	mov	w10, #0x1                   	// #1
  4224d8:	eor	w9, w9, #0x1
  4224dc:	eor	w9, w9, w10
  4224e0:	eor	w9, w9, w10
  4224e4:	and	w9, w9, #0x1
  4224e8:	mov	w0, w9
  4224ec:	sxtw	x8, w0
  4224f0:	cbz	x8, 422514 <map_string_field_internal+0x180>
  4224f4:	mov	w8, wzr
  4224f8:	mov	w0, w8
  4224fc:	adrp	x1, 42e000 <_fini+0x43a8>
  422500:	add	x1, x1, #0xc91
  422504:	ldr	x2, [sp, #32]
  422508:	mov	w3, #0x3f                  	// #63
  42250c:	ldr	x4, [sp, #24]
  422510:	bl	405718 <log_assert_failed_realm@plt>
  422514:	ldur	x8, [x29, #-24]
  422518:	ldr	x8, [x8]
  42251c:	ldrb	w9, [x8]
  422520:	cmp	w9, #0x22
  422524:	b.ne	4225f8 <map_string_field_internal+0x264>  // b.any
  422528:	ldur	x8, [x29, #-24]
  42252c:	ldr	x8, [x8]
  422530:	add	x8, x8, #0x1
  422534:	stur	x8, [x29, #-72]
  422538:	ldur	x0, [x29, #-72]
  42253c:	mov	w1, #0x22                  	// #34
  422540:	bl	406368 <strchr@plt>
  422544:	stur	x0, [x29, #-80]
  422548:	ldur	x8, [x29, #-80]
  42254c:	cbnz	x8, 422560 <map_string_field_internal+0x1cc>
  422550:	stur	wzr, [x29, #-4]
  422554:	mov	w8, #0x1                   	// #1
  422558:	str	w8, [sp, #84]
  42255c:	b	422874 <map_string_field_internal+0x4e0>
  422560:	ldur	x0, [x29, #-16]
  422564:	bl	405738 <strlen@plt>
  422568:	ldur	x8, [x29, #-80]
  42256c:	ldur	x9, [x29, #-72]
  422570:	subs	x8, x8, x9
  422574:	add	x8, x0, x8
  422578:	str	x8, [sp, #88]
  42257c:	ldr	x8, [sp, #88]
  422580:	add	x0, x8, #0x1
  422584:	bl	406378 <malloc@plt>
  422588:	stur	x0, [x29, #-64]
  42258c:	ldur	x8, [x29, #-64]
  422590:	cbnz	x8, 4225a8 <map_string_field_internal+0x214>
  422594:	mov	w8, #0xfffffff4            	// #-12
  422598:	stur	w8, [x29, #-4]
  42259c:	mov	w8, #0x1                   	// #1
  4225a0:	str	w8, [sp, #84]
  4225a4:	b	422874 <map_string_field_internal+0x4e0>
  4225a8:	ldur	x0, [x29, #-64]
  4225ac:	ldur	x1, [x29, #-16]
  4225b0:	bl	405ad8 <stpcpy@plt>
  4225b4:	ldur	x1, [x29, #-72]
  4225b8:	ldur	x8, [x29, #-80]
  4225bc:	ldur	x9, [x29, #-72]
  4225c0:	subs	x8, x8, x9
  4225c4:	str	x0, [sp, #16]
  4225c8:	mov	x2, x8
  4225cc:	str	x8, [sp, #8]
  4225d0:	bl	405af8 <memcpy@plt>
  4225d4:	ldr	x8, [sp, #16]
  4225d8:	ldr	x9, [sp, #8]
  4225dc:	add	x10, x8, x9
  4225e0:	mov	w11, #0x0                   	// #0
  4225e4:	strb	w11, [x10]
  4225e8:	ldur	x10, [x29, #-80]
  4225ec:	add	x10, x10, #0x1
  4225f0:	stur	x10, [x29, #-80]
  4225f4:	b	4227f0 <map_string_field_internal+0x45c>
  4225f8:	ldur	x8, [x29, #-24]
  4225fc:	ldr	x8, [x8]
  422600:	ldrb	w0, [x8]
  422604:	bl	406428 <unhexchar@plt>
  422608:	cmp	w0, #0x0
  42260c:	cset	w9, lt  // lt = tstop
  422610:	tbnz	w9, #0, 4227e0 <map_string_field_internal+0x44c>
  422614:	str	xzr, [sp, #72]
  422618:	ldur	x0, [x29, #-16]
  42261c:	bl	405738 <strlen@plt>
  422620:	str	x0, [sp, #88]
  422624:	ldr	x8, [sp, #88]
  422628:	add	x8, x8, #0x2
  42262c:	str	x8, [sp, #72]
  422630:	ldr	x0, [sp, #72]
  422634:	bl	406378 <malloc@plt>
  422638:	stur	x0, [x29, #-64]
  42263c:	ldur	x8, [x29, #-64]
  422640:	cbnz	x8, 422658 <map_string_field_internal+0x2c4>
  422644:	mov	w8, #0xfffffff4            	// #-12
  422648:	stur	w8, [x29, #-4]
  42264c:	mov	w8, #0x1                   	// #1
  422650:	str	w8, [sp, #84]
  422654:	b	422874 <map_string_field_internal+0x4e0>
  422658:	ldur	x0, [x29, #-64]
  42265c:	ldur	x1, [x29, #-16]
  422660:	ldr	x2, [sp, #88]
  422664:	bl	405af8 <memcpy@plt>
  422668:	ldur	x8, [x29, #-24]
  42266c:	ldr	x8, [x8]
  422670:	stur	x8, [x29, #-80]
  422674:	mov	w8, #0x0                   	// #0
  422678:	strb	w8, [sp, #71]
  42267c:	ldur	x9, [x29, #-80]
  422680:	ldrb	w8, [x9]
  422684:	str	w8, [sp, #4]
  422688:	cbz	w8, 4226a8 <map_string_field_internal+0x314>
  42268c:	b	422690 <map_string_field_internal+0x2fc>
  422690:	ldr	w8, [sp, #4]
  422694:	cmp	w8, #0x20
  422698:	cset	w9, eq  // eq = none
  42269c:	eor	w9, w9, #0x1
  4226a0:	tbnz	w9, #0, 4226b4 <map_string_field_internal+0x320>
  4226a4:	b	4226a8 <map_string_field_internal+0x314>
  4226a8:	mov	w8, #0x1                   	// #1
  4226ac:	strb	w8, [sp, #71]
  4226b0:	b	4226b4 <map_string_field_internal+0x320>
  4226b4:	ldrb	w8, [sp, #71]
  4226b8:	mov	w9, #0x1                   	// #1
  4226bc:	and	w8, w8, w9
  4226c0:	strb	w8, [sp, #70]
  4226c4:	ldrb	w8, [sp, #70]
  4226c8:	eor	w8, w8, #0x1
  4226cc:	tbnz	w8, #0, 4226d4 <map_string_field_internal+0x340>
  4226d0:	b	4227c8 <map_string_field_internal+0x434>
  4226d4:	ldur	x8, [x29, #-80]
  4226d8:	ldrb	w0, [x8]
  4226dc:	bl	406428 <unhexchar@plt>
  4226e0:	str	w0, [sp, #64]
  4226e4:	ldr	w9, [sp, #64]
  4226e8:	cmp	w9, #0x0
  4226ec:	cset	w9, ge  // ge = tcont
  4226f0:	tbnz	w9, #0, 422704 <map_string_field_internal+0x370>
  4226f4:	stur	wzr, [x29, #-4]
  4226f8:	mov	w8, #0x1                   	// #1
  4226fc:	str	w8, [sp, #84]
  422700:	b	422874 <map_string_field_internal+0x4e0>
  422704:	ldur	x8, [x29, #-80]
  422708:	ldrb	w0, [x8, #1]
  42270c:	bl	406428 <unhexchar@plt>
  422710:	str	w0, [sp, #60]
  422714:	ldr	w9, [sp, #60]
  422718:	cmp	w9, #0x0
  42271c:	cset	w9, ge  // ge = tcont
  422720:	tbnz	w9, #0, 422734 <map_string_field_internal+0x3a0>
  422724:	stur	wzr, [x29, #-4]
  422728:	mov	w8, #0x1                   	// #1
  42272c:	str	w8, [sp, #84]
  422730:	b	422874 <map_string_field_internal+0x4e0>
  422734:	ldr	w8, [sp, #64]
  422738:	and	w8, w8, #0xff
  42273c:	ldr	w9, [sp, #60]
  422740:	and	w9, w9, #0xff
  422744:	orr	w8, w9, w8, lsl #4
  422748:	strb	w8, [sp, #59]
  42274c:	ldurb	w8, [x29, #-49]
  422750:	tbnz	w8, #0, 422758 <map_string_field_internal+0x3c4>
  422754:	b	42276c <map_string_field_internal+0x3d8>
  422758:	ldrb	w8, [sp, #59]
  42275c:	cmp	w8, #0x20
  422760:	b.ge	42276c <map_string_field_internal+0x3d8>  // b.tcont
  422764:	mov	w8, #0x20                  	// #32
  422768:	strb	w8, [sp, #59]
  42276c:	ldr	x8, [sp, #88]
  422770:	add	x2, x8, #0x2
  422774:	sub	x0, x29, #0x40
  422778:	add	x1, sp, #0x48
  42277c:	mov	x3, #0x1                   	// #1
  422780:	bl	405c58 <greedy_realloc@plt>
  422784:	cbnz	x0, 42279c <map_string_field_internal+0x408>
  422788:	mov	w8, #0xfffffff4            	// #-12
  42278c:	stur	w8, [x29, #-4]
  422790:	mov	w8, #0x1                   	// #1
  422794:	str	w8, [sp, #84]
  422798:	b	422874 <map_string_field_internal+0x4e0>
  42279c:	ldrb	w8, [sp, #59]
  4227a0:	ldur	x9, [x29, #-64]
  4227a4:	ldr	x10, [sp, #88]
  4227a8:	add	x11, x10, #0x1
  4227ac:	str	x11, [sp, #88]
  4227b0:	add	x9, x9, x10
  4227b4:	strb	w8, [x9]
  4227b8:	ldur	x8, [x29, #-80]
  4227bc:	add	x8, x8, #0x2
  4227c0:	stur	x8, [x29, #-80]
  4227c4:	b	422674 <map_string_field_internal+0x2e0>
  4227c8:	ldur	x8, [x29, #-64]
  4227cc:	ldr	x9, [sp, #88]
  4227d0:	add	x8, x8, x9
  4227d4:	mov	w10, #0x0                   	// #0
  4227d8:	strb	w10, [x8]
  4227dc:	b	4227f0 <map_string_field_internal+0x45c>
  4227e0:	stur	wzr, [x29, #-4]
  4227e4:	mov	w8, #0x1                   	// #1
  4227e8:	str	w8, [sp, #84]
  4227ec:	b	422874 <map_string_field_internal+0x4e0>
  4227f0:	ldur	x0, [x29, #-32]
  4227f4:	ldur	x1, [x29, #-40]
  4227f8:	ldur	x8, [x29, #-48]
  4227fc:	ldr	x8, [x8]
  422800:	add	x2, x8, #0x1
  422804:	mov	x3, #0x10                  	// #16
  422808:	bl	405c58 <greedy_realloc@plt>
  42280c:	cbnz	x0, 422824 <map_string_field_internal+0x490>
  422810:	mov	w8, #0xfffffff4            	// #-12
  422814:	stur	w8, [x29, #-4]
  422818:	mov	w8, #0x1                   	// #1
  42281c:	str	w8, [sp, #84]
  422820:	b	422874 <map_string_field_internal+0x4e0>
  422824:	ldur	x8, [x29, #-32]
  422828:	ldr	x8, [x8]
  42282c:	ldur	x9, [x29, #-48]
  422830:	ldr	x10, [x9]
  422834:	add	x11, x10, #0x1
  422838:	str	x11, [x9]
  42283c:	ldur	x9, [x29, #-64]
  422840:	str	x9, [sp, #40]
  422844:	ldr	x9, [sp, #88]
  422848:	str	x9, [sp, #48]
  42284c:	ldur	q0, [sp, #40]
  422850:	str	q0, [x8, x10, lsl #4]
  422854:	ldur	x8, [x29, #-80]
  422858:	ldur	x9, [x29, #-24]
  42285c:	str	x8, [x9]
  422860:	mov	x8, xzr
  422864:	stur	x8, [x29, #-64]
  422868:	mov	w12, #0x1                   	// #1
  42286c:	stur	w12, [x29, #-4]
  422870:	str	w12, [sp, #84]
  422874:	sub	x0, x29, #0x40
  422878:	bl	420e94 <freep>
  42287c:	ldur	w0, [x29, #-4]
  422880:	ldp	x29, x30, [sp, #176]
  422884:	add	sp, sp, #0xc0
  422888:	ret

000000000042288c <map_simple_field>:
  42288c:	sub	sp, sp, #0x90
  422890:	stp	x29, x30, [sp, #128]
  422894:	add	x29, sp, #0x80
  422898:	mov	x8, xzr
  42289c:	adrp	x9, 42e000 <_fini+0x43a8>
  4228a0:	add	x9, x9, #0x890
  4228a4:	add	x9, x9, #0x3
  4228a8:	adrp	x10, 42e000 <_fini+0x43a8>
  4228ac:	add	x10, x10, #0xe14
  4228b0:	stur	x0, [x29, #-16]
  4228b4:	stur	x1, [x29, #-24]
  4228b8:	stur	x2, [x29, #-32]
  4228bc:	stur	x3, [x29, #-40]
  4228c0:	stur	x4, [x29, #-48]
  4228c4:	stur	x8, [x29, #-56]
  4228c8:	str	xzr, [sp, #64]
  4228cc:	str	xzr, [sp, #56]
  4228d0:	str	x9, [sp, #16]
  4228d4:	str	x10, [sp, #8]
  4228d8:	ldur	x8, [x29, #-16]
  4228dc:	cmp	x8, #0x0
  4228e0:	cset	w9, ne  // ne = any
  4228e4:	mov	w10, #0x1                   	// #1
  4228e8:	eor	w9, w9, #0x1
  4228ec:	eor	w9, w9, w10
  4228f0:	eor	w9, w9, w10
  4228f4:	and	w9, w9, #0x1
  4228f8:	mov	w0, w9
  4228fc:	sxtw	x8, w0
  422900:	cbz	x8, 422924 <map_simple_field+0x98>
  422904:	mov	w8, wzr
  422908:	mov	w0, w8
  42290c:	adrp	x1, 42e000 <_fini+0x43a8>
  422910:	add	x1, x1, #0xd4d
  422914:	ldr	x2, [sp, #16]
  422918:	mov	w3, #0x17                  	// #23
  42291c:	ldr	x4, [sp, #8]
  422920:	bl	405718 <log_assert_failed_realm@plt>
  422924:	ldur	x8, [x29, #-24]
  422928:	cmp	x8, #0x0
  42292c:	cset	w9, ne  // ne = any
  422930:	mov	w10, #0x1                   	// #1
  422934:	eor	w9, w9, #0x1
  422938:	eor	w9, w9, w10
  42293c:	eor	w9, w9, w10
  422940:	and	w9, w9, #0x1
  422944:	mov	w0, w9
  422948:	sxtw	x8, w0
  42294c:	cbz	x8, 422970 <map_simple_field+0xe4>
  422950:	mov	w8, wzr
  422954:	mov	w0, w8
  422958:	adrp	x1, 429000 <journal_ratelimit_group_free+0x70>
  42295c:	add	x1, x1, #0xf43
  422960:	ldr	x2, [sp, #16]
  422964:	mov	w3, #0x18                  	// #24
  422968:	ldr	x4, [sp, #8]
  42296c:	bl	405718 <log_assert_failed_realm@plt>
  422970:	ldur	x8, [x29, #-32]
  422974:	cmp	x8, #0x0
  422978:	cset	w9, ne  // ne = any
  42297c:	mov	w10, #0x1                   	// #1
  422980:	eor	w9, w9, #0x1
  422984:	eor	w9, w9, w10
  422988:	eor	w9, w9, w10
  42298c:	and	w9, w9, #0x1
  422990:	mov	w0, w9
  422994:	sxtw	x8, w0
  422998:	cbz	x8, 4229bc <map_simple_field+0x130>
  42299c:	mov	w8, wzr
  4229a0:	mov	w0, w8
  4229a4:	adrp	x1, 42e000 <_fini+0x43a8>
  4229a8:	add	x1, x1, #0xc7d
  4229ac:	ldr	x2, [sp, #16]
  4229b0:	mov	w3, #0x19                  	// #25
  4229b4:	ldr	x4, [sp, #8]
  4229b8:	bl	405718 <log_assert_failed_realm@plt>
  4229bc:	ldur	x8, [x29, #-48]
  4229c0:	cmp	x8, #0x0
  4229c4:	cset	w9, ne  // ne = any
  4229c8:	mov	w10, #0x1                   	// #1
  4229cc:	eor	w9, w9, #0x1
  4229d0:	eor	w9, w9, w10
  4229d4:	eor	w9, w9, w10
  4229d8:	and	w9, w9, #0x1
  4229dc:	mov	w0, w9
  4229e0:	sxtw	x8, w0
  4229e4:	cbz	x8, 422a08 <map_simple_field+0x17c>
  4229e8:	mov	w8, wzr
  4229ec:	mov	w0, w8
  4229f0:	adrp	x1, 42e000 <_fini+0x43a8>
  4229f4:	add	x1, x1, #0xc91
  4229f8:	ldr	x2, [sp, #16]
  4229fc:	mov	w3, #0x1a                  	// #26
  422a00:	ldr	x4, [sp, #8]
  422a04:	bl	405718 <log_assert_failed_realm@plt>
  422a08:	ldur	x0, [x29, #-16]
  422a0c:	bl	405738 <strlen@plt>
  422a10:	str	x0, [sp, #64]
  422a14:	ldr	x8, [sp, #64]
  422a18:	add	x8, x8, #0x1
  422a1c:	str	x8, [sp, #56]
  422a20:	ldr	x0, [sp, #56]
  422a24:	bl	406378 <malloc@plt>
  422a28:	stur	x0, [x29, #-56]
  422a2c:	ldur	x8, [x29, #-56]
  422a30:	cbnz	x8, 422a48 <map_simple_field+0x1bc>
  422a34:	mov	w8, #0xfffffff4            	// #-12
  422a38:	stur	w8, [x29, #-4]
  422a3c:	mov	w8, #0x1                   	// #1
  422a40:	str	w8, [sp, #44]
  422a44:	b	422bbc <map_simple_field+0x330>
  422a48:	ldur	x0, [x29, #-56]
  422a4c:	ldur	x1, [x29, #-16]
  422a50:	ldr	x2, [sp, #64]
  422a54:	bl	405af8 <memcpy@plt>
  422a58:	ldur	x8, [x29, #-24]
  422a5c:	ldr	x8, [x8]
  422a60:	str	x8, [sp, #48]
  422a64:	mov	w8, #0x0                   	// #0
  422a68:	strb	w8, [sp, #43]
  422a6c:	ldr	x9, [sp, #48]
  422a70:	ldrb	w8, [x9]
  422a74:	str	w8, [sp, #4]
  422a78:	cbz	w8, 422a98 <map_simple_field+0x20c>
  422a7c:	b	422a80 <map_simple_field+0x1f4>
  422a80:	ldr	w8, [sp, #4]
  422a84:	cmp	w8, #0x20
  422a88:	cset	w9, eq  // eq = none
  422a8c:	eor	w9, w9, #0x1
  422a90:	tbnz	w9, #0, 422aa4 <map_simple_field+0x218>
  422a94:	b	422a98 <map_simple_field+0x20c>
  422a98:	mov	w8, #0x1                   	// #1
  422a9c:	strb	w8, [sp, #43]
  422aa0:	b	422aa4 <map_simple_field+0x218>
  422aa4:	ldrb	w8, [sp, #43]
  422aa8:	mov	w9, #0x1                   	// #1
  422aac:	and	w8, w8, w9
  422ab0:	strb	w8, [sp, #42]
  422ab4:	ldrb	w8, [sp, #42]
  422ab8:	eor	w8, w8, #0x1
  422abc:	tbnz	w8, #0, 422ac4 <map_simple_field+0x238>
  422ac0:	b	422b24 <map_simple_field+0x298>
  422ac4:	ldr	x8, [sp, #64]
  422ac8:	add	x2, x8, #0x2
  422acc:	sub	x0, x29, #0x38
  422ad0:	add	x1, sp, #0x38
  422ad4:	mov	x3, #0x1                   	// #1
  422ad8:	bl	405c58 <greedy_realloc@plt>
  422adc:	cbnz	x0, 422af4 <map_simple_field+0x268>
  422ae0:	mov	w8, #0xfffffff4            	// #-12
  422ae4:	stur	w8, [x29, #-4]
  422ae8:	mov	w8, #0x1                   	// #1
  422aec:	str	w8, [sp, #44]
  422af0:	b	422bbc <map_simple_field+0x330>
  422af4:	ldr	x8, [sp, #48]
  422af8:	ldrb	w9, [x8]
  422afc:	ldur	x8, [x29, #-56]
  422b00:	ldr	x10, [sp, #64]
  422b04:	add	x11, x10, #0x1
  422b08:	str	x11, [sp, #64]
  422b0c:	add	x8, x8, x10
  422b10:	strb	w9, [x8]
  422b14:	ldr	x8, [sp, #48]
  422b18:	add	x8, x8, #0x1
  422b1c:	str	x8, [sp, #48]
  422b20:	b	422a64 <map_simple_field+0x1d8>
  422b24:	ldur	x8, [x29, #-56]
  422b28:	ldr	x9, [sp, #64]
  422b2c:	add	x8, x8, x9
  422b30:	mov	w10, #0x0                   	// #0
  422b34:	strb	w10, [x8]
  422b38:	ldur	x0, [x29, #-32]
  422b3c:	ldur	x1, [x29, #-40]
  422b40:	ldur	x8, [x29, #-48]
  422b44:	ldr	x8, [x8]
  422b48:	add	x2, x8, #0x1
  422b4c:	mov	x3, #0x10                  	// #16
  422b50:	bl	405c58 <greedy_realloc@plt>
  422b54:	cbnz	x0, 422b6c <map_simple_field+0x2e0>
  422b58:	mov	w8, #0xfffffff4            	// #-12
  422b5c:	stur	w8, [x29, #-4]
  422b60:	mov	w8, #0x1                   	// #1
  422b64:	str	w8, [sp, #44]
  422b68:	b	422bbc <map_simple_field+0x330>
  422b6c:	ldur	x8, [x29, #-32]
  422b70:	ldr	x8, [x8]
  422b74:	ldur	x9, [x29, #-48]
  422b78:	ldr	x10, [x9]
  422b7c:	add	x11, x10, #0x1
  422b80:	str	x11, [x9]
  422b84:	ldur	x9, [x29, #-56]
  422b88:	str	x9, [sp, #24]
  422b8c:	ldr	x9, [sp, #64]
  422b90:	str	x9, [sp, #32]
  422b94:	ldur	q0, [sp, #24]
  422b98:	str	q0, [x8, x10, lsl #4]
  422b9c:	ldr	x8, [sp, #48]
  422ba0:	ldur	x9, [x29, #-24]
  422ba4:	str	x8, [x9]
  422ba8:	mov	x8, xzr
  422bac:	stur	x8, [x29, #-56]
  422bb0:	mov	w12, #0x1                   	// #1
  422bb4:	stur	w12, [x29, #-4]
  422bb8:	str	w12, [sp, #44]
  422bbc:	sub	x0, x29, #0x38
  422bc0:	bl	420e94 <freep>
  422bc4:	ldur	w0, [x29, #-4]
  422bc8:	ldp	x29, x30, [sp, #128]
  422bcc:	add	sp, sp, #0x90
  422bd0:	ret

0000000000422bd4 <map_string_field_printable>:
  422bd4:	sub	sp, sp, #0x40
  422bd8:	stp	x29, x30, [sp, #48]
  422bdc:	add	x29, sp, #0x30
  422be0:	stur	x0, [x29, #-8]
  422be4:	stur	x1, [x29, #-16]
  422be8:	str	x2, [sp, #24]
  422bec:	str	x3, [sp, #16]
  422bf0:	str	x4, [sp, #8]
  422bf4:	ldur	x0, [x29, #-8]
  422bf8:	ldur	x1, [x29, #-16]
  422bfc:	ldr	x2, [sp, #24]
  422c00:	ldr	x3, [sp, #16]
  422c04:	ldr	x4, [sp, #8]
  422c08:	mov	w8, #0x1                   	// #1
  422c0c:	and	w5, w8, #0x1
  422c10:	bl	422394 <map_string_field_internal>
  422c14:	ldp	x29, x30, [sp, #48]
  422c18:	add	sp, sp, #0x40
  422c1c:	ret

0000000000422c20 <server_forward_console>:
  422c20:	stp	x29, x30, [sp, #-32]!
  422c24:	str	x28, [sp, #16]
  422c28:	mov	x29, sp
  422c2c:	sub	sp, sp, #0x1f0
  422c30:	mov	x8, xzr
  422c34:	mov	w9, #0xffffffff            	// #-1
  422c38:	adrp	x10, 42e000 <_fini+0x43a8>
  422c3c:	add	x10, x10, #0xf62
  422c40:	add	x10, x10, #0x3
  422c44:	adrp	x11, 42e000 <_fini+0x43a8>
  422c48:	add	x11, x11, #0xf84
  422c4c:	stur	x0, [x29, #-8]
  422c50:	stur	w1, [x29, #-12]
  422c54:	stur	x2, [x29, #-24]
  422c58:	stur	x3, [x29, #-32]
  422c5c:	stur	x4, [x29, #-40]
  422c60:	stur	x8, [x29, #-208]
  422c64:	stur	w9, [x29, #-212]
  422c68:	stur	wzr, [x29, #-228]
  422c6c:	str	x10, [sp, #112]
  422c70:	str	x11, [sp, #104]
  422c74:	ldur	x8, [x29, #-8]
  422c78:	cmp	x8, #0x0
  422c7c:	cset	w9, ne  // ne = any
  422c80:	mov	w10, #0x1                   	// #1
  422c84:	eor	w9, w9, #0x1
  422c88:	eor	w9, w9, w10
  422c8c:	eor	w9, w9, w10
  422c90:	and	w9, w9, #0x1
  422c94:	mov	w0, w9
  422c98:	sxtw	x8, w0
  422c9c:	cbz	x8, 422cc0 <server_forward_console+0xa0>
  422ca0:	mov	w8, wzr
  422ca4:	mov	w0, w8
  422ca8:	adrp	x1, 429000 <journal_ratelimit_group_free+0x70>
  422cac:	add	x1, x1, #0xdc8
  422cb0:	ldr	x2, [sp, #112]
  422cb4:	mov	w3, #0x32                  	// #50
  422cb8:	ldr	x4, [sp, #104]
  422cbc:	bl	405718 <log_assert_failed_realm@plt>
  422cc0:	ldur	x8, [x29, #-32]
  422cc4:	cmp	x8, #0x0
  422cc8:	cset	w9, ne  // ne = any
  422ccc:	mov	w10, #0x1                   	// #1
  422cd0:	eor	w9, w9, #0x1
  422cd4:	eor	w9, w9, w10
  422cd8:	eor	w9, w9, w10
  422cdc:	and	w9, w9, #0x1
  422ce0:	mov	w0, w9
  422ce4:	sxtw	x8, w0
  422ce8:	cbz	x8, 422d0c <server_forward_console+0xec>
  422cec:	mov	w8, wzr
  422cf0:	mov	w0, w8
  422cf4:	adrp	x1, 429000 <journal_ratelimit_group_free+0x70>
  422cf8:	add	x1, x1, #0xe61
  422cfc:	ldr	x2, [sp, #112]
  422d00:	mov	w3, #0x33                  	// #51
  422d04:	ldr	x4, [sp, #104]
  422d08:	bl	405718 <log_assert_failed_realm@plt>
  422d0c:	ldur	w8, [x29, #-12]
  422d10:	and	w8, w8, #0x7
  422d14:	ldur	x9, [x29, #-8]
  422d18:	ldr	w10, [x9, #548]
  422d1c:	cmp	w8, w10
  422d20:	b.le	422d30 <server_forward_console+0x110>
  422d24:	mov	w8, #0x1                   	// #1
  422d28:	stur	w8, [x29, #-232]
  422d2c:	b	4231c8 <server_forward_console+0x5a8>
  422d30:	bl	423238 <prefix_timestamp>
  422d34:	tbnz	w0, #0, 422d3c <server_forward_console+0x11c>
  422d38:	b	422e44 <server_forward_console+0x224>
  422d3c:	mov	w0, #0x1                   	// #1
  422d40:	sub	x1, x29, #0x88
  422d44:	bl	406438 <clock_gettime@plt>
  422d48:	cmp	w0, #0x0
  422d4c:	cset	w8, eq  // eq = none
  422d50:	mov	w9, #0x1                   	// #1
  422d54:	eor	w8, w8, #0x1
  422d58:	eor	w8, w8, w9
  422d5c:	eor	w8, w8, w9
  422d60:	and	w8, w8, #0x1
  422d64:	mov	w1, w8
  422d68:	sxtw	x10, w1
  422d6c:	cbz	x10, 422d90 <server_forward_console+0x170>
  422d70:	mov	w8, wzr
  422d74:	mov	w0, w8
  422d78:	adrp	x1, 42e000 <_fini+0x43a8>
  422d7c:	add	x1, x1, #0xfe1
  422d80:	ldr	x2, [sp, #112]
  422d84:	mov	w3, #0x3a                  	// #58
  422d88:	ldr	x4, [sp, #104]
  422d8c:	bl	405718 <log_assert_failed_realm@plt>
  422d90:	ldur	x3, [x29, #-136]
  422d94:	ldur	x8, [x29, #-128]
  422d98:	mov	x9, #0x3e8                 	// #1000
  422d9c:	udiv	x4, x8, x9
  422da0:	sub	x0, x29, #0xb5
  422da4:	mov	x1, #0x2d                  	// #45
  422da8:	adrp	x2, 42f000 <_fini+0x53a8>
  422dac:	add	x2, x2, #0xa
  422db0:	bl	405728 <snprintf@plt>
  422db4:	mov	w1, w0
  422db8:	sxtw	x8, w1
  422dbc:	cmp	x8, #0x2d
  422dc0:	cset	w10, cc  // cc = lo, ul, last
  422dc4:	mov	w11, #0x1                   	// #1
  422dc8:	eor	w10, w10, #0x1
  422dcc:	eor	w10, w10, w11
  422dd0:	eor	w10, w10, w11
  422dd4:	and	w10, w10, #0x1
  422dd8:	mov	w1, w10
  422ddc:	sxtw	x8, w1
  422de0:	cbz	x8, 422e04 <server_forward_console+0x1e4>
  422de4:	mov	w8, wzr
  422de8:	mov	w0, w8
  422dec:	adrp	x1, 42f000 <_fini+0x53a8>
  422df0:	add	x1, x1, #0x18
  422df4:	ldr	x2, [sp, #112]
  422df8:	mov	w3, #0x3d                  	// #61
  422dfc:	ldr	x4, [sp, #104]
  422e00:	bl	405718 <log_assert_failed_realm@plt>
  422e04:	ldursw	x8, [x29, #-228]
  422e08:	mov	w9, w8
  422e0c:	add	w9, w9, #0x1
  422e10:	stur	w9, [x29, #-228]
  422e14:	sub	x10, x29, #0x78
  422e18:	sub	x11, x29, #0xb5
  422e1c:	str	x11, [sp, #248]
  422e20:	mov	x0, x11
  422e24:	str	x8, [sp, #96]
  422e28:	str	x10, [sp, #88]
  422e2c:	bl	405738 <strlen@plt>
  422e30:	str	x0, [sp, #256]
  422e34:	ldur	q0, [sp, #248]
  422e38:	ldr	x8, [sp, #88]
  422e3c:	ldr	x10, [sp, #96]
  422e40:	str	q0, [x8, x10, lsl #4]
  422e44:	ldur	x8, [x29, #-40]
  422e48:	cbz	x8, 422f64 <server_forward_console+0x344>
  422e4c:	ldur	x8, [x29, #-24]
  422e50:	cbnz	x8, 422e6c <server_forward_console+0x24c>
  422e54:	ldur	x8, [x29, #-40]
  422e58:	ldr	w0, [x8]
  422e5c:	sub	x1, x29, #0xd0
  422e60:	bl	405748 <get_process_comm@plt>
  422e64:	ldur	x8, [x29, #-208]
  422e68:	stur	x8, [x29, #-24]
  422e6c:	ldur	x8, [x29, #-40]
  422e70:	ldr	w3, [x8]
  422e74:	sub	x0, x29, #0xc5
  422e78:	mov	x1, #0x10                  	// #16
  422e7c:	adrp	x2, 429000 <journal_ratelimit_group_free+0x70>
  422e80:	add	x2, x2, #0xe9d
  422e84:	bl	405728 <snprintf@plt>
  422e88:	mov	w1, w0
  422e8c:	sxtw	x8, w1
  422e90:	cmp	x8, #0x10
  422e94:	cset	w9, cc  // cc = lo, ul, last
  422e98:	mov	w10, #0x1                   	// #1
  422e9c:	eor	w9, w9, #0x1
  422ea0:	eor	w9, w9, w10
  422ea4:	eor	w9, w9, w10
  422ea8:	and	w9, w9, #0x1
  422eac:	mov	w1, w9
  422eb0:	sxtw	x8, w1
  422eb4:	cbz	x8, 422ed8 <server_forward_console+0x2b8>
  422eb8:	mov	w8, wzr
  422ebc:	mov	w0, w8
  422ec0:	adrp	x1, 429000 <journal_ratelimit_group_free+0x70>
  422ec4:	add	x1, x1, #0xea4
  422ec8:	ldr	x2, [sp, #112]
  422ecc:	mov	w3, #0x49                  	// #73
  422ed0:	ldr	x4, [sp, #104]
  422ed4:	bl	405718 <log_assert_failed_realm@plt>
  422ed8:	ldur	x8, [x29, #-24]
  422edc:	cbz	x8, 422f20 <server_forward_console+0x300>
  422ee0:	ldursw	x8, [x29, #-228]
  422ee4:	mov	w9, w8
  422ee8:	add	w9, w9, #0x1
  422eec:	stur	w9, [x29, #-228]
  422ef0:	sub	x10, x29, #0x78
  422ef4:	ldur	x11, [x29, #-24]
  422ef8:	str	x11, [sp, #232]
  422efc:	ldur	x0, [x29, #-24]
  422f00:	str	x8, [sp, #80]
  422f04:	str	x10, [sp, #72]
  422f08:	bl	405738 <strlen@plt>
  422f0c:	str	x0, [sp, #240]
  422f10:	ldur	q0, [sp, #232]
  422f14:	ldr	x8, [sp, #72]
  422f18:	ldr	x10, [sp, #80]
  422f1c:	str	q0, [x8, x10, lsl #4]
  422f20:	ldursw	x8, [x29, #-228]
  422f24:	mov	w9, w8
  422f28:	add	w9, w9, #0x1
  422f2c:	stur	w9, [x29, #-228]
  422f30:	sub	x10, x29, #0x78
  422f34:	sub	x11, x29, #0xc5
  422f38:	str	x11, [sp, #216]
  422f3c:	mov	x0, x11
  422f40:	str	x8, [sp, #64]
  422f44:	str	x10, [sp, #56]
  422f48:	bl	405738 <strlen@plt>
  422f4c:	str	x0, [sp, #224]
  422f50:	ldur	q0, [sp, #216]
  422f54:	ldr	x8, [sp, #56]
  422f58:	ldr	x10, [sp, #64]
  422f5c:	str	q0, [x8, x10, lsl #4]
  422f60:	b	422fd8 <server_forward_console+0x3b8>
  422f64:	ldur	x8, [x29, #-24]
  422f68:	cbz	x8, 422fd8 <server_forward_console+0x3b8>
  422f6c:	ldursw	x8, [x29, #-228]
  422f70:	mov	w9, w8
  422f74:	add	w9, w9, #0x1
  422f78:	stur	w9, [x29, #-228]
  422f7c:	sub	x10, x29, #0x78
  422f80:	ldur	x11, [x29, #-24]
  422f84:	str	x11, [sp, #200]
  422f88:	ldur	x0, [x29, #-24]
  422f8c:	str	x8, [sp, #48]
  422f90:	str	x10, [sp, #40]
  422f94:	bl	405738 <strlen@plt>
  422f98:	str	x0, [sp, #208]
  422f9c:	ldur	q0, [sp, #200]
  422fa0:	ldr	x8, [sp, #40]
  422fa4:	ldr	x10, [sp, #48]
  422fa8:	str	q0, [x8, x10, lsl #4]
  422fac:	ldursw	x11, [x29, #-228]
  422fb0:	mov	w9, w11
  422fb4:	add	w9, w9, #0x1
  422fb8:	stur	w9, [x29, #-228]
  422fbc:	adrp	x12, 429000 <journal_ratelimit_group_free+0x70>
  422fc0:	add	x12, x12, #0xece
  422fc4:	str	x12, [sp, #184]
  422fc8:	mov	x12, #0x2                   	// #2
  422fcc:	str	x12, [sp, #192]
  422fd0:	ldur	q0, [sp, #184]
  422fd4:	str	q0, [x8, x11, lsl #4]
  422fd8:	ldursw	x8, [x29, #-228]
  422fdc:	mov	w9, w8
  422fe0:	add	w9, w9, #0x1
  422fe4:	stur	w9, [x29, #-228]
  422fe8:	sub	x10, x29, #0x78
  422fec:	ldur	x11, [x29, #-32]
  422ff0:	str	x11, [sp, #168]
  422ff4:	ldur	x0, [x29, #-32]
  422ff8:	str	x8, [sp, #32]
  422ffc:	str	x10, [sp, #24]
  423000:	bl	405738 <strlen@plt>
  423004:	str	x0, [sp, #176]
  423008:	ldur	q0, [sp, #168]
  42300c:	ldr	x8, [sp, #24]
  423010:	ldr	x10, [sp, #32]
  423014:	str	q0, [x8, x10, lsl #4]
  423018:	ldursw	x11, [x29, #-228]
  42301c:	mov	w9, w11
  423020:	add	w9, w9, #0x1
  423024:	stur	w9, [x29, #-228]
  423028:	adrp	x12, 429000 <journal_ratelimit_group_free+0x70>
  42302c:	add	x12, x12, #0xed1
  423030:	str	x12, [sp, #152]
  423034:	mov	x12, #0x1                   	// #1
  423038:	str	x12, [sp, #160]
  42303c:	ldur	q0, [sp, #152]
  423040:	str	q0, [x8, x11, lsl #4]
  423044:	ldur	x11, [x29, #-8]
  423048:	ldr	x11, [x11, #528]
  42304c:	str	x11, [sp, #16]
  423050:	cbz	x11, 423060 <server_forward_console+0x440>
  423054:	ldr	x8, [sp, #16]
  423058:	str	x8, [sp, #8]
  42305c:	b	42306c <server_forward_console+0x44c>
  423060:	adrp	x8, 42f000 <_fini+0x53a8>
  423064:	add	x8, x8, #0x3c
  423068:	str	x8, [sp, #8]
  42306c:	ldr	x8, [sp, #8]
  423070:	stur	x8, [x29, #-224]
  423074:	ldur	x0, [x29, #-224]
  423078:	mov	w1, #0x101                 	// #257
  42307c:	movk	w1, #0x8, lsl #16
  423080:	bl	406448 <open_terminal@plt>
  423084:	stur	w0, [x29, #-212]
  423088:	ldur	w9, [x29, #-212]
  42308c:	cmp	w9, #0x0
  423090:	cset	w9, ge  // ge = tcont
  423094:	tbnz	w9, #0, 423124 <server_forward_console+0x504>
  423098:	mov	w8, #0x7                   	// #7
  42309c:	str	w8, [sp, #148]
  4230a0:	ldur	w8, [x29, #-212]
  4230a4:	str	w8, [sp, #144]
  4230a8:	str	wzr, [sp, #140]
  4230ac:	ldr	w0, [sp, #140]
  4230b0:	bl	405638 <log_get_max_level_realm@plt>
  4230b4:	ldr	w8, [sp, #148]
  4230b8:	and	w8, w8, #0x7
  4230bc:	cmp	w0, w8
  4230c0:	b.lt	4230fc <server_forward_console+0x4dc>  // b.tstop
  4230c4:	ldr	w8, [sp, #140]
  4230c8:	ldr	w9, [sp, #148]
  4230cc:	orr	w0, w9, w8, lsl #10
  4230d0:	ldr	w1, [sp, #144]
  4230d4:	ldur	x6, [x29, #-224]
  4230d8:	ldr	x2, [sp, #112]
  4230dc:	mov	w3, #0x61                  	// #97
  4230e0:	adrp	x4, 42f000 <_fini+0x53a8>
  4230e4:	add	x4, x4, #0x49
  4230e8:	adrp	x5, 42f000 <_fini+0x53a8>
  4230ec:	add	x5, x5, #0x60
  4230f0:	bl	405648 <log_internal_realm@plt>
  4230f4:	str	w0, [sp, #4]
  4230f8:	b	423110 <server_forward_console+0x4f0>
  4230fc:	ldr	w0, [sp, #144]
  423100:	bl	405658 <abs@plt>
  423104:	mov	w8, wzr
  423108:	subs	w8, w8, w0, uxtb
  42310c:	str	w8, [sp, #4]
  423110:	ldr	w8, [sp, #4]
  423114:	str	w8, [sp, #136]
  423118:	mov	w8, #0x1                   	// #1
  42311c:	stur	w8, [x29, #-232]
  423120:	b	4231c8 <server_forward_console+0x5a8>
  423124:	ldur	w0, [x29, #-212]
  423128:	ldur	w2, [x29, #-228]
  42312c:	sub	x1, x29, #0x78
  423130:	bl	405758 <writev@plt>
  423134:	cmp	x0, #0x0
  423138:	cset	w8, ge  // ge = tcont
  42313c:	tbnz	w8, #0, 4231c4 <server_forward_console+0x5a4>
  423140:	mov	w8, #0x7                   	// #7
  423144:	str	w8, [sp, #132]
  423148:	bl	405768 <__errno_location@plt>
  42314c:	ldr	w8, [x0]
  423150:	str	w8, [sp, #128]
  423154:	str	wzr, [sp, #124]
  423158:	ldr	w0, [sp, #124]
  42315c:	bl	405638 <log_get_max_level_realm@plt>
  423160:	ldr	w8, [sp, #132]
  423164:	and	w8, w8, #0x7
  423168:	cmp	w0, w8
  42316c:	b.lt	4231a8 <server_forward_console+0x588>  // b.tstop
  423170:	ldr	w8, [sp, #124]
  423174:	ldr	w9, [sp, #132]
  423178:	orr	w0, w9, w8, lsl #10
  42317c:	ldr	w1, [sp, #128]
  423180:	ldur	x6, [x29, #-224]
  423184:	ldr	x2, [sp, #112]
  423188:	mov	w3, #0x66                  	// #102
  42318c:	adrp	x4, 42f000 <_fini+0x53a8>
  423190:	add	x4, x4, #0x49
  423194:	adrp	x5, 42f000 <_fini+0x53a8>
  423198:	add	x5, x5, #0x82
  42319c:	bl	405648 <log_internal_realm@plt>
  4231a0:	str	w0, [sp]
  4231a4:	b	4231bc <server_forward_console+0x59c>
  4231a8:	ldr	w0, [sp, #128]
  4231ac:	bl	405658 <abs@plt>
  4231b0:	mov	w8, wzr
  4231b4:	subs	w8, w8, w0, uxtb
  4231b8:	str	w8, [sp]
  4231bc:	ldr	w8, [sp]
  4231c0:	str	w8, [sp, #120]
  4231c4:	stur	wzr, [x29, #-232]
  4231c8:	sub	x0, x29, #0xd4
  4231cc:	bl	423210 <closep>
  4231d0:	sub	x0, x29, #0xd0
  4231d4:	bl	4231e8 <freep>
  4231d8:	add	sp, sp, #0x1f0
  4231dc:	ldr	x28, [sp, #16]
  4231e0:	ldp	x29, x30, [sp], #32
  4231e4:	ret

00000000004231e8 <freep>:
  4231e8:	sub	sp, sp, #0x20
  4231ec:	stp	x29, x30, [sp, #16]
  4231f0:	add	x29, sp, #0x10
  4231f4:	str	x0, [sp, #8]
  4231f8:	ldr	x8, [sp, #8]
  4231fc:	ldr	x0, [x8]
  423200:	bl	405778 <free@plt>
  423204:	ldp	x29, x30, [sp, #16]
  423208:	add	sp, sp, #0x20
  42320c:	ret

0000000000423210 <closep>:
  423210:	sub	sp, sp, #0x20
  423214:	stp	x29, x30, [sp, #16]
  423218:	add	x29, sp, #0x10
  42321c:	str	x0, [sp, #8]
  423220:	ldr	x8, [sp, #8]
  423224:	ldr	w0, [x8]
  423228:	bl	4058c8 <safe_close@plt>
  42322c:	ldp	x29, x30, [sp, #16]
  423230:	add	sp, sp, #0x20
  423234:	ret

0000000000423238 <prefix_timestamp>:
  423238:	sub	sp, sp, #0x30
  42323c:	stp	x29, x30, [sp, #32]
  423240:	add	x29, sp, #0x20
  423244:	adrp	x8, 450000 <prefix_timestamp.cached_printk_time>
  423248:	add	x8, x8, #0x0
  42324c:	ldr	w9, [x8]
  423250:	cmp	w9, #0x0
  423254:	cset	w9, lt  // lt = tstop
  423258:	mov	w10, #0x1                   	// #1
  42325c:	eor	w9, w9, #0x1
  423260:	eor	w9, w9, w10
  423264:	and	w9, w9, #0x1
  423268:	mov	w0, w9
  42326c:	sxtw	x11, w0
  423270:	str	x8, [sp, #16]
  423274:	cbz	x11, 4232d0 <prefix_timestamp+0x98>
  423278:	sub	x1, x29, #0x8
  42327c:	mov	x8, xzr
  423280:	stur	x8, [x29, #-8]
  423284:	adrp	x0, 42f000 <_fini+0x53a8>
  423288:	add	x0, x0, #0xa8
  42328c:	bl	406458 <read_one_line_file@plt>
  423290:	cmp	w0, #0x0
  423294:	cset	w9, lt  // lt = tstop
  423298:	mov	w10, #0x0                   	// #0
  42329c:	str	w10, [sp, #12]
  4232a0:	tbnz	w9, #0, 4232b8 <prefix_timestamp+0x80>
  4232a4:	ldur	x0, [x29, #-8]
  4232a8:	bl	405dd8 <parse_boolean@plt>
  4232ac:	cmp	w0, #0x0
  4232b0:	cset	w8, gt
  4232b4:	str	w8, [sp, #12]
  4232b8:	ldr	w8, [sp, #12]
  4232bc:	and	w8, w8, #0x1
  4232c0:	ldr	x9, [sp, #16]
  4232c4:	str	w8, [x9]
  4232c8:	sub	x0, x29, #0x8
  4232cc:	bl	4231e8 <freep>
  4232d0:	ldr	x8, [sp, #16]
  4232d4:	ldr	w9, [x8]
  4232d8:	cmp	w9, #0x0
  4232dc:	cset	w9, ne  // ne = any
  4232e0:	and	w0, w9, #0x1
  4232e4:	ldp	x29, x30, [sp, #32]
  4232e8:	add	sp, sp, #0x30
  4232ec:	ret

00000000004232f0 <client_context_maybe_refresh>:
  4232f0:	sub	sp, sp, #0x50
  4232f4:	stp	x29, x30, [sp, #64]
  4232f8:	add	x29, sp, #0x40
  4232fc:	adrp	x8, 42f000 <_fini+0x53a8>
  423300:	add	x8, x8, #0xcb
  423304:	add	x8, x8, #0x3
  423308:	stur	x0, [x29, #-8]
  42330c:	stur	x1, [x29, #-16]
  423310:	stur	x2, [x29, #-24]
  423314:	str	x3, [sp, #32]
  423318:	str	x4, [sp, #24]
  42331c:	str	x5, [sp, #16]
  423320:	str	x6, [sp, #8]
  423324:	str	x8, [sp]
  423328:	ldur	x8, [x29, #-8]
  42332c:	cmp	x8, #0x0
  423330:	cset	w9, ne  // ne = any
  423334:	mov	w10, #0x1                   	// #1
  423338:	eor	w9, w9, #0x1
  42333c:	eor	w9, w9, w10
  423340:	eor	w9, w9, w10
  423344:	and	w9, w9, #0x1
  423348:	mov	w0, w9
  42334c:	sxtw	x8, w0
  423350:	cbz	x8, 423378 <client_context_maybe_refresh+0x88>
  423354:	mov	w8, wzr
  423358:	mov	w0, w8
  42335c:	adrp	x1, 429000 <journal_ratelimit_group_free+0x70>
  423360:	add	x1, x1, #0xdc8
  423364:	ldr	x2, [sp]
  423368:	mov	w3, #0x21f                 	// #543
  42336c:	adrp	x4, 42f000 <_fini+0x53a8>
  423370:	add	x4, x4, #0xed
  423374:	bl	405718 <log_assert_failed_realm@plt>
  423378:	ldur	x8, [x29, #-16]
  42337c:	cmp	x8, #0x0
  423380:	cset	w9, ne  // ne = any
  423384:	mov	w10, #0x1                   	// #1
  423388:	eor	w9, w9, #0x1
  42338c:	eor	w9, w9, w10
  423390:	eor	w9, w9, w10
  423394:	and	w9, w9, #0x1
  423398:	mov	w0, w9
  42339c:	sxtw	x8, w0
  4233a0:	cbz	x8, 4233c8 <client_context_maybe_refresh+0xd8>
  4233a4:	mov	w8, wzr
  4233a8:	mov	w0, w8
  4233ac:	adrp	x1, 42f000 <_fini+0x53a8>
  4233b0:	add	x1, x1, #0x16c
  4233b4:	ldr	x2, [sp]
  4233b8:	mov	w3, #0x220                 	// #544
  4233bc:	adrp	x4, 42f000 <_fini+0x53a8>
  4233c0:	add	x4, x4, #0xed
  4233c4:	bl	405718 <log_assert_failed_realm@plt>
  4233c8:	ldr	x8, [sp, #8]
  4233cc:	mov	x9, #0xffffffffffffffff    	// #-1
  4233d0:	cmp	x8, x9
  4233d4:	b.ne	4233e4 <client_context_maybe_refresh+0xf4>  // b.any
  4233d8:	mov	w0, #0x1                   	// #1
  4233dc:	bl	4056f8 <now@plt>
  4233e0:	str	x0, [sp, #8]
  4233e4:	ldur	x8, [x29, #-16]
  4233e8:	ldr	x8, [x8, #8]
  4233ec:	mov	x9, #0xffffffffffffffff    	// #-1
  4233f0:	cmp	x8, x9
  4233f4:	b.ne	4233fc <client_context_maybe_refresh+0x10c>  // b.any
  4233f8:	b	423510 <client_context_maybe_refresh+0x220>
  4233fc:	ldur	x8, [x29, #-16]
  423400:	ldr	w9, [x8]
  423404:	cbnz	w9, 423438 <client_context_maybe_refresh+0x148>
  423408:	ldur	x8, [x29, #-16]
  42340c:	ldr	x8, [x8, #8]
  423410:	mov	x9, #0x4b40                	// #19264
  423414:	movk	x9, #0x4c, lsl #16
  423418:	add	x8, x8, x9
  42341c:	ldr	x9, [sp, #8]
  423420:	cmp	x8, x9
  423424:	b.cs	423438 <client_context_maybe_refresh+0x148>  // b.hs, b.nlast
  423428:	ldur	x0, [x29, #-8]
  42342c:	ldur	x1, [x29, #-16]
  423430:	bl	42353c <client_context_reset>
  423434:	b	423510 <client_context_maybe_refresh+0x220>
  423438:	ldur	x8, [x29, #-16]
  42343c:	ldr	x8, [x8, #8]
  423440:	mov	x9, #0x4240                	// #16960
  423444:	movk	x9, #0xf, lsl #16
  423448:	add	x8, x8, x9
  42344c:	ldr	x9, [sp, #8]
  423450:	cmp	x8, x9
  423454:	b.cs	42345c <client_context_maybe_refresh+0x16c>  // b.hs, b.nlast
  423458:	b	423510 <client_context_maybe_refresh+0x220>
  42345c:	ldur	x8, [x29, #-24]
  423460:	cbz	x8, 423494 <client_context_maybe_refresh+0x1a4>
  423464:	ldur	x8, [x29, #-24]
  423468:	ldr	w0, [x8, #4]
  42346c:	bl	405ac8 <uid_is_valid@plt>
  423470:	tbnz	w0, #0, 423478 <client_context_maybe_refresh+0x188>
  423474:	b	423494 <client_context_maybe_refresh+0x1a4>
  423478:	ldur	x8, [x29, #-16]
  42347c:	ldr	w9, [x8, #24]
  423480:	ldur	x8, [x29, #-24]
  423484:	ldr	w10, [x8, #4]
  423488:	cmp	w9, w10
  42348c:	b.eq	423494 <client_context_maybe_refresh+0x1a4>  // b.none
  423490:	b	423510 <client_context_maybe_refresh+0x220>
  423494:	ldur	x8, [x29, #-24]
  423498:	cbz	x8, 4234cc <client_context_maybe_refresh+0x1dc>
  42349c:	ldur	x8, [x29, #-24]
  4234a0:	ldr	w0, [x8, #8]
  4234a4:	bl	4237b4 <gid_is_valid>
  4234a8:	tbnz	w0, #0, 4234b0 <client_context_maybe_refresh+0x1c0>
  4234ac:	b	4234cc <client_context_maybe_refresh+0x1dc>
  4234b0:	ldur	x8, [x29, #-16]
  4234b4:	ldr	w9, [x8, #28]
  4234b8:	ldur	x8, [x29, #-24]
  4234bc:	ldr	w10, [x8, #8]
  4234c0:	cmp	w9, w10
  4234c4:	b.eq	4234cc <client_context_maybe_refresh+0x1dc>  // b.none
  4234c8:	b	423510 <client_context_maybe_refresh+0x220>
  4234cc:	ldr	x8, [sp, #24]
  4234d0:	cmp	x8, #0x0
  4234d4:	cset	w9, ls  // ls = plast
  4234d8:	tbnz	w9, #0, 42350c <client_context_maybe_refresh+0x21c>
  4234dc:	ldr	x8, [sp, #24]
  4234e0:	ldur	x9, [x29, #-16]
  4234e4:	ldr	x9, [x9, #152]
  4234e8:	cmp	x8, x9
  4234ec:	b.ne	423508 <client_context_maybe_refresh+0x218>  // b.any
  4234f0:	ldr	x0, [sp, #32]
  4234f4:	ldur	x8, [x29, #-16]
  4234f8:	ldr	x1, [x8, #144]
  4234fc:	ldr	x2, [sp, #24]
  423500:	bl	406468 <memcmp@plt>
  423504:	cbz	w0, 42350c <client_context_maybe_refresh+0x21c>
  423508:	b	423510 <client_context_maybe_refresh+0x220>
  42350c:	b	423530 <client_context_maybe_refresh+0x240>
  423510:	ldur	x0, [x29, #-8]
  423514:	ldur	x1, [x29, #-16]
  423518:	ldur	x2, [x29, #-24]
  42351c:	ldr	x3, [sp, #32]
  423520:	ldr	x4, [sp, #24]
  423524:	ldr	x5, [sp, #16]
  423528:	ldr	x6, [sp, #8]
  42352c:	bl	4237dc <client_context_really_refresh>
  423530:	ldp	x29, x30, [sp, #64]
  423534:	add	sp, sp, #0x50
  423538:	ret

000000000042353c <client_context_reset>:
  42353c:	sub	sp, sp, #0x50
  423540:	stp	x29, x30, [sp, #64]
  423544:	add	x29, sp, #0x40
  423548:	adrp	x8, 42f000 <_fini+0x53a8>
  42354c:	add	x8, x8, #0xcb
  423550:	add	x8, x8, #0x3
  423554:	stur	x0, [x29, #-8]
  423558:	stur	x1, [x29, #-16]
  42355c:	str	x8, [sp, #24]
  423560:	ldur	x8, [x29, #-8]
  423564:	cmp	x8, #0x0
  423568:	cset	w9, ne  // ne = any
  42356c:	mov	w10, #0x1                   	// #1
  423570:	eor	w9, w9, #0x1
  423574:	eor	w9, w9, w10
  423578:	eor	w9, w9, w10
  42357c:	and	w9, w9, #0x1
  423580:	mov	w0, w9
  423584:	sxtw	x8, w0
  423588:	cbz	x8, 4235b0 <client_context_reset+0x74>
  42358c:	mov	w8, wzr
  423590:	mov	w0, w8
  423594:	adrp	x1, 429000 <journal_ratelimit_group_free+0x70>
  423598:	add	x1, x1, #0xdc8
  42359c:	ldr	x2, [sp, #24]
  4235a0:	mov	w3, #0x95                  	// #149
  4235a4:	adrp	x4, 42f000 <_fini+0x53a8>
  4235a8:	add	x4, x4, #0x2e9
  4235ac:	bl	405718 <log_assert_failed_realm@plt>
  4235b0:	ldur	x8, [x29, #-16]
  4235b4:	cmp	x8, #0x0
  4235b8:	cset	w9, ne  // ne = any
  4235bc:	mov	w10, #0x1                   	// #1
  4235c0:	eor	w9, w9, #0x1
  4235c4:	eor	w9, w9, w10
  4235c8:	eor	w9, w9, w10
  4235cc:	and	w9, w9, #0x1
  4235d0:	mov	w0, w9
  4235d4:	sxtw	x8, w0
  4235d8:	cbz	x8, 423600 <client_context_reset+0xc4>
  4235dc:	mov	w8, wzr
  4235e0:	mov	w0, w8
  4235e4:	adrp	x1, 42f000 <_fini+0x53a8>
  4235e8:	add	x1, x1, #0x16c
  4235ec:	ldr	x2, [sp, #24]
  4235f0:	mov	w3, #0x96                  	// #150
  4235f4:	adrp	x4, 42f000 <_fini+0x53a8>
  4235f8:	add	x4, x4, #0x2e9
  4235fc:	bl	405718 <log_assert_failed_realm@plt>
  423600:	ldur	x8, [x29, #-16]
  423604:	mov	x9, #0xffffffffffffffff    	// #-1
  423608:	str	x9, [x8, #8]
  42360c:	ldur	x8, [x29, #-16]
  423610:	mov	w10, #0xffffffff            	// #-1
  423614:	str	w10, [x8, #24]
  423618:	ldur	x8, [x29, #-16]
  42361c:	str	w10, [x8, #28]
  423620:	ldur	x8, [x29, #-16]
  423624:	ldr	x0, [x8, #32]
  423628:	str	x9, [sp, #16]
  42362c:	str	w10, [sp, #12]
  423630:	bl	424890 <mfree>
  423634:	ldur	x8, [x29, #-16]
  423638:	str	x0, [x8, #32]
  42363c:	ldur	x8, [x29, #-16]
  423640:	ldr	x0, [x8, #40]
  423644:	bl	424890 <mfree>
  423648:	ldur	x8, [x29, #-16]
  42364c:	str	x0, [x8, #40]
  423650:	ldur	x8, [x29, #-16]
  423654:	ldr	x0, [x8, #48]
  423658:	bl	424890 <mfree>
  42365c:	ldur	x8, [x29, #-16]
  423660:	str	x0, [x8, #48]
  423664:	ldur	x8, [x29, #-16]
  423668:	ldr	x0, [x8, #56]
  42366c:	bl	424890 <mfree>
  423670:	ldur	x8, [x29, #-16]
  423674:	str	x0, [x8, #56]
  423678:	ldur	x8, [x29, #-16]
  42367c:	ldr	w10, [sp, #12]
  423680:	str	w10, [x8, #64]
  423684:	ldur	x8, [x29, #-16]
  423688:	str	w10, [x8, #68]
  42368c:	ldur	x8, [x29, #-16]
  423690:	ldr	x0, [x8, #72]
  423694:	bl	424890 <mfree>
  423698:	ldur	x8, [x29, #-16]
  42369c:	str	x0, [x8, #72]
  4236a0:	ldur	x8, [x29, #-16]
  4236a4:	ldr	x0, [x8, #80]
  4236a8:	bl	424890 <mfree>
  4236ac:	ldur	x8, [x29, #-16]
  4236b0:	str	x0, [x8, #80]
  4236b4:	ldur	x8, [x29, #-16]
  4236b8:	ldr	w10, [sp, #12]
  4236bc:	str	w10, [x8, #88]
  4236c0:	ldur	x8, [x29, #-16]
  4236c4:	ldr	x0, [x8, #96]
  4236c8:	bl	424890 <mfree>
  4236cc:	ldur	x8, [x29, #-16]
  4236d0:	str	x0, [x8, #96]
  4236d4:	ldur	x8, [x29, #-16]
  4236d8:	ldr	x0, [x8, #104]
  4236dc:	bl	424890 <mfree>
  4236e0:	ldur	x8, [x29, #-16]
  4236e4:	str	x0, [x8, #104]
  4236e8:	ldur	x8, [x29, #-16]
  4236ec:	ldr	x0, [x8, #112]
  4236f0:	bl	424890 <mfree>
  4236f4:	ldur	x8, [x29, #-16]
  4236f8:	str	x0, [x8, #112]
  4236fc:	ldur	x8, [x29, #-16]
  423700:	ldr	x0, [x8, #120]
  423704:	bl	424890 <mfree>
  423708:	ldur	x8, [x29, #-16]
  42370c:	str	x0, [x8, #120]
  423710:	ldur	x8, [x29, #-16]
  423714:	str	xzr, [sp, #32]
  423718:	str	xzr, [sp, #40]
  42371c:	ldr	q0, [sp, #32]
  423720:	str	q0, [x8, #128]
  423724:	ldur	x8, [x29, #-16]
  423728:	ldr	x0, [x8, #144]
  42372c:	bl	424890 <mfree>
  423730:	ldur	x8, [x29, #-16]
  423734:	str	x0, [x8, #144]
  423738:	ldur	x8, [x29, #-16]
  42373c:	str	xzr, [x8, #152]
  423740:	ldur	x8, [x29, #-16]
  423744:	ldr	x0, [x8, #168]
  423748:	bl	424890 <mfree>
  42374c:	ldur	x8, [x29, #-16]
  423750:	str	x0, [x8, #168]
  423754:	ldur	x8, [x29, #-16]
  423758:	str	xzr, [x8, #176]
  42375c:	ldur	x8, [x29, #-16]
  423760:	ldr	x0, [x8, #184]
  423764:	bl	424890 <mfree>
  423768:	ldur	x8, [x29, #-16]
  42376c:	str	x0, [x8, #184]
  423770:	ldur	x8, [x29, #-16]
  423774:	ldr	x9, [sp, #16]
  423778:	str	x9, [x8, #192]
  42377c:	ldur	x8, [x29, #-16]
  423780:	ldr	w10, [sp, #12]
  423784:	str	w10, [x8, #160]
  423788:	ldur	x8, [x29, #-8]
  42378c:	ldr	x8, [x8, #216]
  423790:	ldur	x11, [x29, #-16]
  423794:	str	x8, [x11, #200]
  423798:	ldur	x8, [x29, #-8]
  42379c:	ldr	w12, [x8, #224]
  4237a0:	ldur	x8, [x29, #-16]
  4237a4:	str	w12, [x8, #208]
  4237a8:	ldp	x29, x30, [sp, #64]
  4237ac:	add	sp, sp, #0x50
  4237b0:	ret

00000000004237b4 <gid_is_valid>:
  4237b4:	sub	sp, sp, #0x20
  4237b8:	stp	x29, x30, [sp, #16]
  4237bc:	add	x29, sp, #0x10
  4237c0:	stur	w0, [x29, #-4]
  4237c4:	ldur	w0, [x29, #-4]
  4237c8:	bl	405ac8 <uid_is_valid@plt>
  4237cc:	and	w0, w0, #0x1
  4237d0:	ldp	x29, x30, [sp, #16]
  4237d4:	add	sp, sp, #0x20
  4237d8:	ret

00000000004237dc <client_context_really_refresh>:
  4237dc:	sub	sp, sp, #0x60
  4237e0:	stp	x29, x30, [sp, #80]
  4237e4:	add	x29, sp, #0x50
  4237e8:	adrp	x8, 42f000 <_fini+0x53a8>
  4237ec:	add	x8, x8, #0xcb
  4237f0:	add	x8, x8, #0x3
  4237f4:	adrp	x9, 42f000 <_fini+0x53a8>
  4237f8:	add	x9, x9, #0x31e
  4237fc:	stur	x0, [x29, #-8]
  423800:	stur	x1, [x29, #-16]
  423804:	stur	x2, [x29, #-24]
  423808:	stur	x3, [x29, #-32]
  42380c:	str	x4, [sp, #40]
  423810:	str	x5, [sp, #32]
  423814:	str	x6, [sp, #24]
  423818:	str	x8, [sp, #16]
  42381c:	str	x9, [sp, #8]
  423820:	ldur	x8, [x29, #-8]
  423824:	cmp	x8, #0x0
  423828:	cset	w9, ne  // ne = any
  42382c:	mov	w10, #0x1                   	// #1
  423830:	eor	w9, w9, #0x1
  423834:	eor	w9, w9, w10
  423838:	eor	w9, w9, w10
  42383c:	and	w9, w9, #0x1
  423840:	mov	w0, w9
  423844:	sxtw	x8, w0
  423848:	cbz	x8, 42386c <client_context_really_refresh+0x90>
  42384c:	mov	w8, wzr
  423850:	mov	w0, w8
  423854:	adrp	x1, 429000 <journal_ratelimit_group_free+0x70>
  423858:	add	x1, x1, #0xdc8
  42385c:	ldr	x2, [sp, #16]
  423860:	mov	w3, #0x1fa                 	// #506
  423864:	ldr	x4, [sp, #8]
  423868:	bl	405718 <log_assert_failed_realm@plt>
  42386c:	ldur	x8, [x29, #-16]
  423870:	cmp	x8, #0x0
  423874:	cset	w9, ne  // ne = any
  423878:	mov	w10, #0x1                   	// #1
  42387c:	eor	w9, w9, #0x1
  423880:	eor	w9, w9, w10
  423884:	eor	w9, w9, w10
  423888:	and	w9, w9, #0x1
  42388c:	mov	w0, w9
  423890:	sxtw	x8, w0
  423894:	cbz	x8, 4238b8 <client_context_really_refresh+0xdc>
  423898:	mov	w8, wzr
  42389c:	mov	w0, w8
  4238a0:	adrp	x1, 42f000 <_fini+0x53a8>
  4238a4:	add	x1, x1, #0x16c
  4238a8:	ldr	x2, [sp, #16]
  4238ac:	mov	w3, #0x1fb                 	// #507
  4238b0:	ldr	x4, [sp, #8]
  4238b4:	bl	405718 <log_assert_failed_realm@plt>
  4238b8:	ldur	x8, [x29, #-16]
  4238bc:	ldr	w0, [x8, #20]
  4238c0:	bl	4248c0 <pid_is_valid>
  4238c4:	mov	w9, #0x1                   	// #1
  4238c8:	eor	w10, w0, #0x1
  4238cc:	eor	w10, w10, w9
  4238d0:	eor	w9, w10, w9
  4238d4:	and	w9, w9, #0x1
  4238d8:	mov	w1, w9
  4238dc:	sxtw	x8, w1
  4238e0:	cbz	x8, 423904 <client_context_really_refresh+0x128>
  4238e4:	mov	w8, wzr
  4238e8:	mov	w0, w8
  4238ec:	adrp	x1, 42f000 <_fini+0x53a8>
  4238f0:	add	x1, x1, #0x39e
  4238f4:	ldr	x2, [sp, #16]
  4238f8:	mov	w3, #0x1fc                 	// #508
  4238fc:	ldr	x4, [sp, #8]
  423900:	bl	405718 <log_assert_failed_realm@plt>
  423904:	ldr	x8, [sp, #24]
  423908:	mov	x9, #0xffffffffffffffff    	// #-1
  42390c:	cmp	x8, x9
  423910:	b.ne	423920 <client_context_really_refresh+0x144>  // b.any
  423914:	mov	w0, #0x1                   	// #1
  423918:	bl	4056f8 <now@plt>
  42391c:	str	x0, [sp, #24]
  423920:	ldur	x0, [x29, #-16]
  423924:	ldur	x1, [x29, #-24]
  423928:	bl	4248e0 <client_context_read_uid_gid>
  42392c:	ldur	x0, [x29, #-16]
  423930:	bl	424a38 <client_context_read_basic>
  423934:	ldur	x0, [x29, #-16]
  423938:	ldur	x1, [x29, #-32]
  42393c:	ldr	x2, [sp, #40]
  423940:	bl	424c10 <client_context_read_label>
  423944:	ldur	x8, [x29, #-16]
  423948:	ldr	w9, [x8, #20]
  42394c:	ldur	x8, [x29, #-16]
  423950:	add	x1, x8, #0x40
  423954:	mov	w0, w9
  423958:	bl	406478 <audit_session_from_pid@plt>
  42395c:	ldur	x8, [x29, #-16]
  423960:	ldr	w9, [x8, #20]
  423964:	ldur	x8, [x29, #-16]
  423968:	add	x1, x8, #0x44
  42396c:	mov	w0, w9
  423970:	bl	406488 <audit_loginuid_from_pid@plt>
  423974:	ldur	x8, [x29, #-8]
  423978:	ldur	x1, [x29, #-16]
  42397c:	ldr	x2, [sp, #32]
  423980:	mov	x0, x8
  423984:	bl	424dbc <client_context_read_cgroup>
  423988:	ldur	x8, [x29, #-8]
  42398c:	ldur	x1, [x29, #-16]
  423990:	mov	x0, x8
  423994:	bl	425090 <client_context_read_invocation_id>
  423998:	ldur	x8, [x29, #-8]
  42399c:	ldur	x1, [x29, #-16]
  4239a0:	mov	x0, x8
  4239a4:	bl	425400 <client_context_read_log_level_max>
  4239a8:	ldur	x8, [x29, #-8]
  4239ac:	ldur	x1, [x29, #-16]
  4239b0:	mov	x0, x8
  4239b4:	bl	425700 <client_context_read_extra_fields>
  4239b8:	ldur	x8, [x29, #-16]
  4239bc:	mov	x0, x8
  4239c0:	bl	425d2c <client_context_read_log_ratelimit_interval>
  4239c4:	ldur	x8, [x29, #-16]
  4239c8:	mov	x0, x8
  4239cc:	bl	42604c <client_context_read_log_ratelimit_burst>
  4239d0:	ldr	x8, [sp, #24]
  4239d4:	ldur	x10, [x29, #-16]
  4239d8:	str	x8, [x10, #8]
  4239dc:	ldur	x8, [x29, #-16]
  4239e0:	ldrb	w9, [x8, #16]
  4239e4:	tbnz	w9, #0, 4239ec <client_context_really_refresh+0x210>
  4239e8:	b	423a9c <client_context_really_refresh+0x2c0>
  4239ec:	ldur	x8, [x29, #-16]
  4239f0:	ldr	w9, [x8]
  4239f4:	cmp	w9, #0x0
  4239f8:	cset	w9, eq  // eq = none
  4239fc:	mov	w10, #0x1                   	// #1
  423a00:	eor	w9, w9, #0x1
  423a04:	eor	w9, w9, w10
  423a08:	eor	w9, w9, w10
  423a0c:	and	w9, w9, #0x1
  423a10:	mov	w0, w9
  423a14:	sxtw	x8, w0
  423a18:	cbz	x8, 423a3c <client_context_really_refresh+0x260>
  423a1c:	mov	w8, wzr
  423a20:	mov	w0, w8
  423a24:	adrp	x1, 42f000 <_fini+0x53a8>
  423a28:	add	x1, x1, #0x3b3
  423a2c:	ldr	x2, [sp, #16]
  423a30:	mov	w3, #0x212                 	// #530
  423a34:	ldr	x4, [sp, #8]
  423a38:	bl	405718 <log_assert_failed_realm@plt>
  423a3c:	ldur	x8, [x29, #-8]
  423a40:	ldr	x0, [x8, #728]
  423a44:	ldur	x1, [x29, #-16]
  423a48:	ldur	x8, [x29, #-16]
  423a4c:	add	x2, x8, #0x4
  423a50:	bl	406498 <prioq_reshuffle@plt>
  423a54:	cmp	w0, #0x0
  423a58:	cset	w9, ge  // ge = tcont
  423a5c:	mov	w10, #0x1                   	// #1
  423a60:	eor	w9, w9, #0x1
  423a64:	eor	w9, w9, w10
  423a68:	eor	w9, w9, w10
  423a6c:	and	w9, w9, #0x1
  423a70:	mov	w1, w9
  423a74:	sxtw	x8, w1
  423a78:	cbz	x8, 423a9c <client_context_really_refresh+0x2c0>
  423a7c:	mov	w8, wzr
  423a80:	mov	w0, w8
  423a84:	adrp	x1, 42f000 <_fini+0x53a8>
  423a88:	add	x1, x1, #0x3c1
  423a8c:	ldr	x2, [sp, #16]
  423a90:	mov	w3, #0x213                 	// #531
  423a94:	ldr	x4, [sp, #8]
  423a98:	bl	405718 <log_assert_failed_realm@plt>
  423a9c:	ldp	x29, x30, [sp, #80]
  423aa0:	add	sp, sp, #0x60
  423aa4:	ret

0000000000423aa8 <client_context_flush_all>:
  423aa8:	sub	sp, sp, #0x30
  423aac:	stp	x29, x30, [sp, #32]
  423ab0:	add	x29, sp, #0x20
  423ab4:	adrp	x8, 42f000 <_fini+0x53a8>
  423ab8:	add	x8, x8, #0xcb
  423abc:	add	x8, x8, #0x3
  423ac0:	adrp	x9, 42f000 <_fini+0x53a8>
  423ac4:	add	x9, x9, #0x16e
  423ac8:	stur	x0, [x29, #-8]
  423acc:	str	x8, [sp, #16]
  423ad0:	str	x9, [sp, #8]
  423ad4:	ldur	x8, [x29, #-8]
  423ad8:	cmp	x8, #0x0
  423adc:	cset	w9, ne  // ne = any
  423ae0:	mov	w10, #0x1                   	// #1
  423ae4:	eor	w9, w9, #0x1
  423ae8:	eor	w9, w9, w10
  423aec:	eor	w9, w9, w10
  423af0:	and	w9, w9, #0x1
  423af4:	mov	w0, w9
  423af8:	sxtw	x8, w0
  423afc:	cbz	x8, 423b20 <client_context_flush_all+0x78>
  423b00:	mov	w8, wzr
  423b04:	mov	w0, w8
  423b08:	adrp	x1, 429000 <journal_ratelimit_group_free+0x70>
  423b0c:	add	x1, x1, #0xdc8
  423b10:	ldr	x2, [sp, #16]
  423b14:	mov	w3, #0x274                 	// #628
  423b18:	ldr	x4, [sp, #8]
  423b1c:	bl	405718 <log_assert_failed_realm@plt>
  423b20:	ldur	x0, [x29, #-8]
  423b24:	ldur	x8, [x29, #-8]
  423b28:	ldr	x1, [x8, #744]
  423b2c:	bl	423c3c <client_context_release>
  423b30:	ldur	x8, [x29, #-8]
  423b34:	str	x0, [x8, #744]
  423b38:	ldur	x0, [x29, #-8]
  423b3c:	ldur	x8, [x29, #-8]
  423b40:	ldr	x1, [x8, #752]
  423b44:	bl	423c3c <client_context_release>
  423b48:	ldur	x8, [x29, #-8]
  423b4c:	str	x0, [x8, #752]
  423b50:	ldur	x0, [x29, #-8]
  423b54:	mov	x8, xzr
  423b58:	mov	x1, x8
  423b5c:	bl	423df0 <client_context_try_shrink_to>
  423b60:	ldur	x8, [x29, #-8]
  423b64:	ldr	x0, [x8, #728]
  423b68:	bl	4064a8 <prioq_size@plt>
  423b6c:	cmp	w0, #0x0
  423b70:	cset	w9, eq  // eq = none
  423b74:	mov	w10, #0x1                   	// #1
  423b78:	eor	w9, w9, #0x1
  423b7c:	eor	w9, w9, w10
  423b80:	eor	w9, w9, w10
  423b84:	and	w9, w9, #0x1
  423b88:	mov	w1, w9
  423b8c:	sxtw	x8, w1
  423b90:	cbz	x8, 423bb4 <client_context_flush_all+0x10c>
  423b94:	mov	w8, wzr
  423b98:	mov	w0, w8
  423b9c:	adrp	x1, 42f000 <_fini+0x53a8>
  423ba0:	add	x1, x1, #0x196
  423ba4:	ldr	x2, [sp, #16]
  423ba8:	mov	w3, #0x27d                 	// #637
  423bac:	ldr	x4, [sp, #8]
  423bb0:	bl	405718 <log_assert_failed_realm@plt>
  423bb4:	ldur	x8, [x29, #-8]
  423bb8:	ldr	x0, [x8, #720]
  423bbc:	bl	424068 <hashmap_size>
  423bc0:	cmp	w0, #0x0
  423bc4:	cset	w9, eq  // eq = none
  423bc8:	mov	w10, #0x1                   	// #1
  423bcc:	eor	w9, w9, #0x1
  423bd0:	eor	w9, w9, w10
  423bd4:	eor	w9, w9, w10
  423bd8:	and	w9, w9, #0x1
  423bdc:	mov	w1, w9
  423be0:	sxtw	x8, w1
  423be4:	cbz	x8, 423c08 <client_context_flush_all+0x160>
  423be8:	mov	w8, wzr
  423bec:	mov	w0, w8
  423bf0:	adrp	x1, 42f000 <_fini+0x53a8>
  423bf4:	add	x1, x1, #0x1be
  423bf8:	ldr	x2, [sp, #16]
  423bfc:	mov	w3, #0x27e                 	// #638
  423c00:	ldr	x4, [sp, #8]
  423c04:	bl	405718 <log_assert_failed_realm@plt>
  423c08:	ldur	x8, [x29, #-8]
  423c0c:	ldr	x0, [x8, #728]
  423c10:	bl	4064b8 <prioq_free@plt>
  423c14:	ldur	x8, [x29, #-8]
  423c18:	str	x0, [x8, #728]
  423c1c:	ldur	x8, [x29, #-8]
  423c20:	ldr	x0, [x8, #720]
  423c24:	bl	42408c <hashmap_free>
  423c28:	ldur	x8, [x29, #-8]
  423c2c:	str	x0, [x8, #720]
  423c30:	ldp	x29, x30, [sp, #32]
  423c34:	add	sp, sp, #0x30
  423c38:	ret

0000000000423c3c <client_context_release>:
  423c3c:	sub	sp, sp, #0x40
  423c40:	stp	x29, x30, [sp, #48]
  423c44:	add	x29, sp, #0x30
  423c48:	adrp	x8, 42f000 <_fini+0x53a8>
  423c4c:	add	x8, x8, #0xcb
  423c50:	add	x8, x8, #0x3
  423c54:	adrp	x9, 42f000 <_fini+0x53a8>
  423c58:	add	x9, x9, #0x1e4
  423c5c:	stur	x0, [x29, #-16]
  423c60:	str	x1, [sp, #24]
  423c64:	str	x8, [sp, #16]
  423c68:	str	x9, [sp, #8]
  423c6c:	ldur	x8, [x29, #-16]
  423c70:	cmp	x8, #0x0
  423c74:	cset	w9, ne  // ne = any
  423c78:	mov	w10, #0x1                   	// #1
  423c7c:	eor	w9, w9, #0x1
  423c80:	eor	w9, w9, w10
  423c84:	eor	w9, w9, w10
  423c88:	and	w9, w9, #0x1
  423c8c:	mov	w0, w9
  423c90:	sxtw	x8, w0
  423c94:	cbz	x8, 423cb8 <client_context_release+0x7c>
  423c98:	mov	w8, wzr
  423c9c:	mov	w0, w8
  423ca0:	adrp	x1, 429000 <journal_ratelimit_group_free+0x70>
  423ca4:	add	x1, x1, #0xdc8
  423ca8:	ldr	x2, [sp, #16]
  423cac:	mov	w3, #0x2d9                 	// #729
  423cb0:	ldr	x4, [sp, #8]
  423cb4:	bl	405718 <log_assert_failed_realm@plt>
  423cb8:	ldr	x8, [sp, #24]
  423cbc:	cbnz	x8, 423ccc <client_context_release+0x90>
  423cc0:	mov	x8, xzr
  423cc4:	stur	x8, [x29, #-8]
  423cc8:	b	423de0 <client_context_release+0x1a4>
  423ccc:	ldr	x8, [sp, #24]
  423cd0:	ldr	w9, [x8]
  423cd4:	cmp	w9, #0x0
  423cd8:	cset	w9, hi  // hi = pmore
  423cdc:	mov	w10, #0x1                   	// #1
  423ce0:	eor	w9, w9, #0x1
  423ce4:	eor	w9, w9, w10
  423ce8:	eor	w9, w9, w10
  423cec:	and	w9, w9, #0x1
  423cf0:	mov	w0, w9
  423cf4:	sxtw	x8, w0
  423cf8:	cbz	x8, 423d1c <client_context_release+0xe0>
  423cfc:	mov	w8, wzr
  423d00:	mov	w0, w8
  423d04:	adrp	x1, 42f000 <_fini+0x53a8>
  423d08:	add	x1, x1, #0x225
  423d0c:	ldr	x2, [sp, #16]
  423d10:	mov	w3, #0x2de                 	// #734
  423d14:	ldr	x4, [sp, #8]
  423d18:	bl	405718 <log_assert_failed_realm@plt>
  423d1c:	ldr	x8, [sp, #24]
  423d20:	ldrb	w9, [x8, #16]
  423d24:	mov	w10, #0x1                   	// #1
  423d28:	eor	w9, w9, #0x1
  423d2c:	eor	w9, w9, w10
  423d30:	eor	w9, w9, w10
  423d34:	eor	w9, w9, w10
  423d38:	and	w9, w9, #0x1
  423d3c:	mov	w0, w9
  423d40:	sxtw	x8, w0
  423d44:	cbz	x8, 423d68 <client_context_release+0x12c>
  423d48:	mov	w8, wzr
  423d4c:	mov	w0, w8
  423d50:	adrp	x1, 42f000 <_fini+0x53a8>
  423d54:	add	x1, x1, #0x232
  423d58:	ldr	x2, [sp, #16]
  423d5c:	mov	w3, #0x2df                 	// #735
  423d60:	ldr	x4, [sp, #8]
  423d64:	bl	405718 <log_assert_failed_realm@plt>
  423d68:	ldr	x8, [sp, #24]
  423d6c:	ldr	w9, [x8]
  423d70:	subs	w9, w9, #0x1
  423d74:	str	w9, [x8]
  423d78:	ldr	x8, [sp, #24]
  423d7c:	ldr	w9, [x8]
  423d80:	cmp	w9, #0x0
  423d84:	cset	w9, ls  // ls = plast
  423d88:	tbnz	w9, #0, 423d98 <client_context_release+0x15c>
  423d8c:	mov	x8, xzr
  423d90:	stur	x8, [x29, #-8]
  423d94:	b	423de0 <client_context_release+0x1a4>
  423d98:	ldur	x8, [x29, #-16]
  423d9c:	ldr	x0, [x8, #728]
  423da0:	ldr	x1, [sp, #24]
  423da4:	ldr	x8, [sp, #24]
  423da8:	add	x2, x8, #0x4
  423dac:	bl	4064c8 <prioq_put@plt>
  423db0:	cmp	w0, #0x0
  423db4:	cset	w9, ge  // ge = tcont
  423db8:	tbnz	w9, #0, 423dcc <client_context_release+0x190>
  423dbc:	ldur	x0, [x29, #-16]
  423dc0:	ldr	x1, [sp, #24]
  423dc4:	bl	4244c0 <client_context_free>
  423dc8:	b	423dd8 <client_context_release+0x19c>
  423dcc:	ldr	x8, [sp, #24]
  423dd0:	mov	w9, #0x1                   	// #1
  423dd4:	strb	w9, [x8, #16]
  423dd8:	mov	x8, xzr
  423ddc:	stur	x8, [x29, #-8]
  423de0:	ldur	x0, [x29, #-8]
  423de4:	ldp	x29, x30, [sp, #48]
  423de8:	add	sp, sp, #0x40
  423dec:	ret

0000000000423df0 <client_context_try_shrink_to>:
  423df0:	sub	sp, sp, #0x50
  423df4:	stp	x29, x30, [sp, #64]
  423df8:	add	x29, sp, #0x40
  423dfc:	adrp	x8, 42f000 <_fini+0x53a8>
  423e00:	add	x8, x8, #0xcb
  423e04:	add	x8, x8, #0x3
  423e08:	adrp	x9, 42f000 <_fini+0x53a8>
  423e0c:	add	x9, x9, #0x71b
  423e10:	stur	x0, [x29, #-8]
  423e14:	stur	x1, [x29, #-16]
  423e18:	str	x8, [sp, #8]
  423e1c:	str	x9, [sp]
  423e20:	ldur	x8, [x29, #-8]
  423e24:	cmp	x8, #0x0
  423e28:	cset	w9, ne  // ne = any
  423e2c:	mov	w10, #0x1                   	// #1
  423e30:	eor	w9, w9, #0x1
  423e34:	eor	w9, w9, w10
  423e38:	eor	w9, w9, w10
  423e3c:	and	w9, w9, #0x1
  423e40:	mov	w0, w9
  423e44:	sxtw	x8, w0
  423e48:	cbz	x8, 423e6c <client_context_try_shrink_to+0x7c>
  423e4c:	mov	w8, wzr
  423e50:	mov	w0, w8
  423e54:	adrp	x1, 429000 <journal_ratelimit_group_free+0x70>
  423e58:	add	x1, x1, #0xdc8
  423e5c:	ldr	x2, [sp, #8]
  423e60:	mov	w3, #0x248                 	// #584
  423e64:	ldr	x4, [sp]
  423e68:	bl	405718 <log_assert_failed_realm@plt>
  423e6c:	mov	w0, #0x1                   	// #1
  423e70:	bl	4056f8 <now@plt>
  423e74:	str	x0, [sp, #32]
  423e78:	ldur	x8, [x29, #-8]
  423e7c:	ldr	x8, [x8, #736]
  423e80:	mov	x9, #0x4b40                	// #19264
  423e84:	movk	x9, #0x4c, lsl #16
  423e88:	add	x8, x8, x9
  423e8c:	ldr	x9, [sp, #32]
  423e90:	cmp	x8, x9
  423e94:	b.cs	423f6c <client_context_try_shrink_to+0x17c>  // b.hs, b.nlast
  423e98:	ldur	x8, [x29, #-8]
  423e9c:	ldr	x0, [x8, #728]
  423ea0:	bl	4064a8 <prioq_size@plt>
  423ea4:	str	w0, [sp, #28]
  423ea8:	str	wzr, [sp, #24]
  423eac:	str	wzr, [sp, #20]
  423eb0:	ldr	w8, [sp, #20]
  423eb4:	ldr	w9, [sp, #28]
  423eb8:	cmp	w8, w9
  423ebc:	b.cs	423f60 <client_context_try_shrink_to+0x170>  // b.hs, b.nlast
  423ec0:	ldur	x8, [x29, #-8]
  423ec4:	ldr	x0, [x8, #728]
  423ec8:	ldr	w1, [sp, #24]
  423ecc:	bl	4064d8 <prioq_peek_by_index@plt>
  423ed0:	stur	x0, [x29, #-24]
  423ed4:	ldur	x8, [x29, #-24]
  423ed8:	ldr	w9, [x8]
  423edc:	cmp	w9, #0x0
  423ee0:	cset	w9, eq  // eq = none
  423ee4:	mov	w10, #0x1                   	// #1
  423ee8:	eor	w9, w9, #0x1
  423eec:	eor	w9, w9, w10
  423ef0:	eor	w9, w9, w10
  423ef4:	and	w9, w9, #0x1
  423ef8:	mov	w0, w9
  423efc:	sxtw	x8, w0
  423f00:	cbz	x8, 423f24 <client_context_try_shrink_to+0x134>
  423f04:	mov	w8, wzr
  423f08:	mov	w0, w8
  423f0c:	adrp	x1, 42f000 <_fini+0x53a8>
  423f10:	add	x1, x1, #0x3b3
  423f14:	ldr	x2, [sp, #8]
  423f18:	mov	w3, #0x256                 	// #598
  423f1c:	ldr	x4, [sp]
  423f20:	bl	405718 <log_assert_failed_realm@plt>
  423f24:	ldur	x8, [x29, #-24]
  423f28:	ldr	w0, [x8, #20]
  423f2c:	bl	4064e8 <pid_is_unwaited@plt>
  423f30:	tbnz	w0, #0, 423f44 <client_context_try_shrink_to+0x154>
  423f34:	ldur	x0, [x29, #-8]
  423f38:	ldur	x1, [x29, #-24]
  423f3c:	bl	4244c0 <client_context_free>
  423f40:	b	423f50 <client_context_try_shrink_to+0x160>
  423f44:	ldr	w8, [sp, #24]
  423f48:	add	w8, w8, #0x1
  423f4c:	str	w8, [sp, #24]
  423f50:	ldr	w8, [sp, #20]
  423f54:	add	w8, w8, #0x1
  423f58:	str	w8, [sp, #20]
  423f5c:	b	423eb0 <client_context_try_shrink_to+0xc0>
  423f60:	ldr	x8, [sp, #32]
  423f64:	ldur	x9, [x29, #-8]
  423f68:	str	x8, [x9, #736]
  423f6c:	ldur	x8, [x29, #-8]
  423f70:	ldr	x0, [x8, #720]
  423f74:	bl	424068 <hashmap_size>
  423f78:	mov	w8, w0
  423f7c:	ubfx	x8, x8, #0, #32
  423f80:	ldur	x9, [x29, #-16]
  423f84:	cmp	x8, x9
  423f88:	b.ls	42405c <client_context_try_shrink_to+0x26c>  // b.plast
  423f8c:	ldur	x8, [x29, #-8]
  423f90:	ldr	x0, [x8, #728]
  423f94:	bl	4064f8 <prioq_pop@plt>
  423f98:	stur	x0, [x29, #-24]
  423f9c:	ldur	x8, [x29, #-24]
  423fa0:	cbnz	x8, 423fa8 <client_context_try_shrink_to+0x1b8>
  423fa4:	b	42405c <client_context_try_shrink_to+0x26c>
  423fa8:	ldur	x8, [x29, #-24]
  423fac:	ldrb	w9, [x8, #16]
  423fb0:	mov	w10, #0x1                   	// #1
  423fb4:	eor	w9, w9, #0x1
  423fb8:	eor	w9, w9, w10
  423fbc:	eor	w9, w9, w10
  423fc0:	and	w9, w9, #0x1
  423fc4:	mov	w0, w9
  423fc8:	sxtw	x8, w0
  423fcc:	cbz	x8, 423ff0 <client_context_try_shrink_to+0x200>
  423fd0:	mov	w8, wzr
  423fd4:	mov	w0, w8
  423fd8:	adrp	x1, 42f000 <_fini+0x53a8>
  423fdc:	add	x1, x1, #0x74f
  423fe0:	ldr	x2, [sp, #8]
  423fe4:	mov	w3, #0x26a                 	// #618
  423fe8:	ldr	x4, [sp]
  423fec:	bl	405718 <log_assert_failed_realm@plt>
  423ff0:	ldur	x8, [x29, #-24]
  423ff4:	ldr	w9, [x8]
  423ff8:	cmp	w9, #0x0
  423ffc:	cset	w9, eq  // eq = none
  424000:	mov	w10, #0x1                   	// #1
  424004:	eor	w9, w9, #0x1
  424008:	eor	w9, w9, w10
  42400c:	eor	w9, w9, w10
  424010:	and	w9, w9, #0x1
  424014:	mov	w0, w9
  424018:	sxtw	x8, w0
  42401c:	cbz	x8, 424040 <client_context_try_shrink_to+0x250>
  424020:	mov	w8, wzr
  424024:	mov	w0, w8
  424028:	adrp	x1, 42f000 <_fini+0x53a8>
  42402c:	add	x1, x1, #0x3b3
  424030:	ldr	x2, [sp, #8]
  424034:	mov	w3, #0x26b                 	// #619
  424038:	ldr	x4, [sp]
  42403c:	bl	405718 <log_assert_failed_realm@plt>
  424040:	ldur	x8, [x29, #-24]
  424044:	mov	w9, #0x0                   	// #0
  424048:	strb	w9, [x8, #16]
  42404c:	ldur	x0, [x29, #-8]
  424050:	ldur	x1, [x29, #-24]
  424054:	bl	4244c0 <client_context_free>
  424058:	b	423f6c <client_context_try_shrink_to+0x17c>
  42405c:	ldp	x29, x30, [sp, #64]
  424060:	add	sp, sp, #0x50
  424064:	ret

0000000000424068 <hashmap_size>:
  424068:	sub	sp, sp, #0x20
  42406c:	stp	x29, x30, [sp, #16]
  424070:	add	x29, sp, #0x10
  424074:	str	x0, [sp, #8]
  424078:	ldr	x0, [sp, #8]
  42407c:	bl	405fa8 <internal_hashmap_size@plt>
  424080:	ldp	x29, x30, [sp, #16]
  424084:	add	sp, sp, #0x20
  424088:	ret

000000000042408c <hashmap_free>:
  42408c:	sub	sp, sp, #0x20
  424090:	stp	x29, x30, [sp, #16]
  424094:	add	x29, sp, #0x10
  424098:	mov	x8, xzr
  42409c:	str	x0, [sp, #8]
  4240a0:	ldr	x0, [sp, #8]
  4240a4:	mov	x1, x8
  4240a8:	mov	x2, x8
  4240ac:	bl	405f48 <internal_hashmap_free@plt>
  4240b0:	ldp	x29, x30, [sp, #16]
  4240b4:	add	sp, sp, #0x20
  4240b8:	ret

00000000004240bc <client_context_get>:
  4240bc:	sub	sp, sp, #0x50
  4240c0:	stp	x29, x30, [sp, #64]
  4240c4:	add	x29, sp, #0x40
  4240c8:	stur	x0, [x29, #-8]
  4240cc:	stur	w1, [x29, #-12]
  4240d0:	stur	x2, [x29, #-24]
  4240d4:	str	x3, [sp, #32]
  4240d8:	str	x4, [sp, #24]
  4240dc:	str	x5, [sp, #16]
  4240e0:	str	x6, [sp, #8]
  4240e4:	ldur	x0, [x29, #-8]
  4240e8:	ldur	w1, [x29, #-12]
  4240ec:	ldur	x2, [x29, #-24]
  4240f0:	ldr	x3, [sp, #32]
  4240f4:	ldr	x4, [sp, #24]
  4240f8:	ldr	x5, [sp, #16]
  4240fc:	ldr	x7, [sp, #8]
  424100:	mov	w8, wzr
  424104:	and	w6, w8, #0x1
  424108:	bl	424118 <client_context_get_internal>
  42410c:	ldp	x29, x30, [sp, #64]
  424110:	add	sp, sp, #0x50
  424114:	ret

0000000000424118 <client_context_get_internal>:
  424118:	sub	sp, sp, #0x90
  42411c:	stp	x29, x30, [sp, #128]
  424120:	add	x29, sp, #0x80
  424124:	mov	w8, #0x1                   	// #1
  424128:	adrp	x9, 42f000 <_fini+0x53a8>
  42412c:	add	x9, x9, #0xcb
  424130:	add	x9, x9, #0x3
  424134:	adrp	x10, 42f000 <_fini+0x53a8>
  424138:	add	x10, x10, #0x759
  42413c:	stur	x0, [x29, #-16]
  424140:	stur	w1, [x29, #-20]
  424144:	stur	x2, [x29, #-32]
  424148:	stur	x3, [x29, #-40]
  42414c:	stur	x4, [x29, #-48]
  424150:	stur	x5, [x29, #-56]
  424154:	and	w8, w6, w8
  424158:	sturb	w8, [x29, #-57]
  42415c:	str	x7, [sp, #56]
  424160:	str	x9, [sp, #32]
  424164:	str	x10, [sp, #24]
  424168:	ldur	x8, [x29, #-16]
  42416c:	cmp	x8, #0x0
  424170:	cset	w9, ne  // ne = any
  424174:	mov	w10, #0x1                   	// #1
  424178:	eor	w9, w9, #0x1
  42417c:	eor	w9, w9, w10
  424180:	eor	w9, w9, w10
  424184:	and	w9, w9, #0x1
  424188:	mov	w0, w9
  42418c:	sxtw	x8, w0
  424190:	cbz	x8, 4241b4 <client_context_get_internal+0x9c>
  424194:	mov	w8, wzr
  424198:	mov	w0, w8
  42419c:	adrp	x1, 429000 <journal_ratelimit_group_free+0x70>
  4241a0:	add	x1, x1, #0xdc8
  4241a4:	ldr	x2, [sp, #32]
  4241a8:	mov	w3, #0x290                 	// #656
  4241ac:	ldr	x4, [sp, #24]
  4241b0:	bl	405718 <log_assert_failed_realm@plt>
  4241b4:	ldr	x8, [sp, #56]
  4241b8:	cmp	x8, #0x0
  4241bc:	cset	w9, ne  // ne = any
  4241c0:	mov	w10, #0x1                   	// #1
  4241c4:	eor	w9, w9, #0x1
  4241c8:	eor	w9, w9, w10
  4241cc:	eor	w9, w9, w10
  4241d0:	and	w9, w9, #0x1
  4241d4:	mov	w0, w9
  4241d8:	sxtw	x8, w0
  4241dc:	cbz	x8, 424200 <client_context_get_internal+0xe8>
  4241e0:	mov	w8, wzr
  4241e4:	mov	w0, w8
  4241e8:	adrp	x1, 42b000 <_fini+0x13a8>
  4241ec:	add	x1, x1, #0xe5b
  4241f0:	ldr	x2, [sp, #32]
  4241f4:	mov	w3, #0x291                 	// #657
  4241f8:	ldr	x4, [sp, #24]
  4241fc:	bl	405718 <log_assert_failed_realm@plt>
  424200:	ldur	w0, [x29, #-20]
  424204:	bl	4248c0 <pid_is_valid>
  424208:	tbnz	w0, #0, 424218 <client_context_get_internal+0x100>
  42420c:	mov	w8, #0xffffffea            	// #-22
  424210:	stur	w8, [x29, #-4]
  424214:	b	424454 <client_context_get_internal+0x33c>
  424218:	ldur	x8, [x29, #-16]
  42421c:	ldr	x0, [x8, #720]
  424220:	ldur	w9, [x29, #-20]
  424224:	str	x0, [sp, #16]
  424228:	mov	w0, w9
  42422c:	bl	4265d0 <PID_TO_PTR>
  424230:	ldr	x8, [sp, #16]
  424234:	str	x0, [sp, #8]
  424238:	mov	x0, x8
  42423c:	ldr	x1, [sp, #8]
  424240:	bl	4265a4 <hashmap_get>
  424244:	str	x0, [sp, #48]
  424248:	ldr	x8, [sp, #48]
  42424c:	cbz	x8, 42436c <client_context_get_internal+0x254>
  424250:	ldurb	w8, [x29, #-57]
  424254:	tbnz	w8, #0, 42425c <client_context_get_internal+0x144>
  424258:	b	424338 <client_context_get_internal+0x220>
  42425c:	ldr	x8, [sp, #48]
  424260:	ldrb	w9, [x8, #16]
  424264:	tbnz	w9, #0, 42426c <client_context_get_internal+0x154>
  424268:	b	424328 <client_context_get_internal+0x210>
  42426c:	ldr	x8, [sp, #48]
  424270:	ldr	w9, [x8]
  424274:	cmp	w9, #0x0
  424278:	cset	w9, eq  // eq = none
  42427c:	mov	w10, #0x1                   	// #1
  424280:	eor	w9, w9, #0x1
  424284:	eor	w9, w9, w10
  424288:	eor	w9, w9, w10
  42428c:	and	w9, w9, #0x1
  424290:	mov	w0, w9
  424294:	sxtw	x8, w0
  424298:	cbz	x8, 4242bc <client_context_get_internal+0x1a4>
  42429c:	mov	w8, wzr
  4242a0:	mov	w0, w8
  4242a4:	adrp	x1, 42f000 <_fini+0x53a8>
  4242a8:	add	x1, x1, #0x3b3
  4242ac:	ldr	x2, [sp, #32]
  4242b0:	mov	w3, #0x29c                 	// #668
  4242b4:	ldr	x4, [sp, #24]
  4242b8:	bl	405718 <log_assert_failed_realm@plt>
  4242bc:	ldur	x8, [x29, #-16]
  4242c0:	ldr	x0, [x8, #728]
  4242c4:	ldr	x1, [sp, #48]
  4242c8:	ldr	x8, [sp, #48]
  4242cc:	add	x2, x8, #0x4
  4242d0:	bl	406508 <prioq_remove@plt>
  4242d4:	cmp	w0, #0x0
  4242d8:	cset	w9, ge  // ge = tcont
  4242dc:	mov	w10, #0x1                   	// #1
  4242e0:	eor	w9, w9, #0x1
  4242e4:	eor	w9, w9, w10
  4242e8:	eor	w9, w9, w10
  4242ec:	and	w9, w9, #0x1
  4242f0:	mov	w1, w9
  4242f4:	sxtw	x8, w1
  4242f8:	cbz	x8, 42431c <client_context_get_internal+0x204>
  4242fc:	mov	w8, wzr
  424300:	mov	w0, w8
  424304:	adrp	x1, 42f000 <_fini+0x53a8>
  424308:	add	x1, x1, #0x7dd
  42430c:	ldr	x2, [sp, #32]
  424310:	mov	w3, #0x29d                 	// #669
  424314:	ldr	x4, [sp, #24]
  424318:	bl	405718 <log_assert_failed_realm@plt>
  42431c:	ldr	x8, [sp, #48]
  424320:	mov	w9, #0x0                   	// #0
  424324:	strb	w9, [x8, #16]
  424328:	ldr	x8, [sp, #48]
  42432c:	ldr	w9, [x8]
  424330:	add	w9, w9, #0x1
  424334:	str	w9, [x8]
  424338:	ldur	x0, [x29, #-16]
  42433c:	ldr	x1, [sp, #48]
  424340:	ldur	x2, [x29, #-32]
  424344:	ldur	x3, [x29, #-40]
  424348:	ldur	x4, [x29, #-48]
  42434c:	ldur	x5, [x29, #-56]
  424350:	mov	x6, #0xffffffffffffffff    	// #-1
  424354:	bl	4232f0 <client_context_maybe_refresh>
  424358:	ldr	x8, [sp, #48]
  42435c:	ldr	x9, [sp, #56]
  424360:	str	x8, [x9]
  424364:	stur	wzr, [x29, #-4]
  424368:	b	424454 <client_context_get_internal+0x33c>
  42436c:	ldur	x0, [x29, #-16]
  424370:	str	x0, [sp]
  424374:	bl	4265e8 <cache_max>
  424378:	subs	x1, x0, #0x1
  42437c:	ldr	x0, [sp]
  424380:	bl	423df0 <client_context_try_shrink_to>
  424384:	ldur	x0, [x29, #-16]
  424388:	ldur	w1, [x29, #-20]
  42438c:	add	x2, sp, #0x30
  424390:	bl	426768 <client_context_new>
  424394:	str	w0, [sp, #44]
  424398:	ldr	w8, [sp, #44]
  42439c:	cmp	w8, #0x0
  4243a0:	cset	w8, ge  // ge = tcont
  4243a4:	tbnz	w8, #0, 4243b4 <client_context_get_internal+0x29c>
  4243a8:	ldr	w8, [sp, #44]
  4243ac:	stur	w8, [x29, #-4]
  4243b0:	b	424454 <client_context_get_internal+0x33c>
  4243b4:	ldurb	w8, [x29, #-57]
  4243b8:	tbnz	w8, #0, 4243c0 <client_context_get_internal+0x2a8>
  4243bc:	b	4243d4 <client_context_get_internal+0x2bc>
  4243c0:	ldr	x8, [sp, #48]
  4243c4:	ldr	w9, [x8]
  4243c8:	add	w9, w9, #0x1
  4243cc:	str	w9, [x8]
  4243d0:	b	424424 <client_context_get_internal+0x30c>
  4243d4:	ldur	x8, [x29, #-16]
  4243d8:	ldr	x0, [x8, #728]
  4243dc:	ldr	x1, [sp, #48]
  4243e0:	ldr	x8, [sp, #48]
  4243e4:	add	x2, x8, #0x4
  4243e8:	bl	4064c8 <prioq_put@plt>
  4243ec:	str	w0, [sp, #44]
  4243f0:	ldr	w9, [sp, #44]
  4243f4:	cmp	w9, #0x0
  4243f8:	cset	w9, ge  // ge = tcont
  4243fc:	tbnz	w9, #0, 424418 <client_context_get_internal+0x300>
  424400:	ldur	x0, [x29, #-16]
  424404:	ldr	x1, [sp, #48]
  424408:	bl	4244c0 <client_context_free>
  42440c:	ldr	w8, [sp, #44]
  424410:	stur	w8, [x29, #-4]
  424414:	b	424454 <client_context_get_internal+0x33c>
  424418:	ldr	x8, [sp, #48]
  42441c:	mov	w9, #0x1                   	// #1
  424420:	strb	w9, [x8, #16]
  424424:	ldur	x0, [x29, #-16]
  424428:	ldr	x1, [sp, #48]
  42442c:	ldur	x2, [x29, #-32]
  424430:	ldur	x3, [x29, #-40]
  424434:	ldur	x4, [x29, #-48]
  424438:	ldur	x5, [x29, #-56]
  42443c:	mov	x6, #0xffffffffffffffff    	// #-1
  424440:	bl	4237dc <client_context_really_refresh>
  424444:	ldr	x8, [sp, #48]
  424448:	ldr	x9, [sp, #56]
  42444c:	str	x8, [x9]
  424450:	stur	wzr, [x29, #-4]
  424454:	ldur	w0, [x29, #-4]
  424458:	ldp	x29, x30, [sp, #128]
  42445c:	add	sp, sp, #0x90
  424460:	ret

0000000000424464 <client_context_acquire>:
  424464:	sub	sp, sp, #0x50
  424468:	stp	x29, x30, [sp, #64]
  42446c:	add	x29, sp, #0x40
  424470:	stur	x0, [x29, #-8]
  424474:	stur	w1, [x29, #-12]
  424478:	stur	x2, [x29, #-24]
  42447c:	str	x3, [sp, #32]
  424480:	str	x4, [sp, #24]
  424484:	str	x5, [sp, #16]
  424488:	str	x6, [sp, #8]
  42448c:	ldur	x0, [x29, #-8]
  424490:	ldur	w1, [x29, #-12]
  424494:	ldur	x2, [x29, #-24]
  424498:	ldr	x3, [sp, #32]
  42449c:	ldr	x4, [sp, #24]
  4244a0:	ldr	x5, [sp, #16]
  4244a4:	ldr	x7, [sp, #8]
  4244a8:	mov	w8, #0x1                   	// #1
  4244ac:	and	w6, w8, #0x1
  4244b0:	bl	424118 <client_context_get_internal>
  4244b4:	ldp	x29, x30, [sp, #64]
  4244b8:	add	sp, sp, #0x50
  4244bc:	ret

00000000004244c0 <client_context_free>:
  4244c0:	sub	sp, sp, #0x50
  4244c4:	stp	x29, x30, [sp, #64]
  4244c8:	add	x29, sp, #0x40
  4244cc:	adrp	x8, 42f000 <_fini+0x53a8>
  4244d0:	add	x8, x8, #0xcb
  4244d4:	add	x8, x8, #0x3
  4244d8:	adrp	x9, 42f000 <_fini+0x53a8>
  4244dc:	add	x9, x9, #0x8d1
  4244e0:	stur	x0, [x29, #-16]
  4244e4:	stur	x1, [x29, #-24]
  4244e8:	str	x8, [sp, #32]
  4244ec:	str	x9, [sp, #24]
  4244f0:	ldur	x8, [x29, #-16]
  4244f4:	cmp	x8, #0x0
  4244f8:	cset	w9, ne  // ne = any
  4244fc:	mov	w10, #0x1                   	// #1
  424500:	eor	w9, w9, #0x1
  424504:	eor	w9, w9, w10
  424508:	eor	w9, w9, w10
  42450c:	and	w9, w9, #0x1
  424510:	mov	w0, w9
  424514:	sxtw	x8, w0
  424518:	cbz	x8, 42453c <client_context_free+0x7c>
  42451c:	mov	w8, wzr
  424520:	mov	w0, w8
  424524:	adrp	x1, 429000 <journal_ratelimit_group_free+0x70>
  424528:	add	x1, x1, #0xdc8
  42452c:	ldr	x2, [sp, #32]
  424530:	mov	w3, #0xbe                  	// #190
  424534:	ldr	x4, [sp, #24]
  424538:	bl	405718 <log_assert_failed_realm@plt>
  42453c:	ldur	x8, [x29, #-24]
  424540:	cbnz	x8, 424550 <client_context_free+0x90>
  424544:	mov	x8, xzr
  424548:	stur	x8, [x29, #-8]
  42454c:	b	424654 <client_context_free+0x194>
  424550:	ldur	x8, [x29, #-16]
  424554:	ldr	x0, [x8, #720]
  424558:	ldur	x8, [x29, #-24]
  42455c:	ldr	w9, [x8, #20]
  424560:	str	x0, [sp, #16]
  424564:	mov	w0, w9
  424568:	bl	4265d0 <PID_TO_PTR>
  42456c:	ldr	x8, [sp, #16]
  424570:	str	x0, [sp, #8]
  424574:	mov	x0, x8
  424578:	ldr	x1, [sp, #8]
  42457c:	bl	426b84 <hashmap_remove>
  424580:	ldur	x8, [x29, #-24]
  424584:	cmp	x0, x8
  424588:	cset	w9, eq  // eq = none
  42458c:	mov	w10, #0x1                   	// #1
  424590:	eor	w9, w9, #0x1
  424594:	eor	w9, w9, w10
  424598:	eor	w9, w9, w10
  42459c:	and	w9, w9, #0x1
  4245a0:	mov	w0, w9
  4245a4:	sxtw	x8, w0
  4245a8:	cbz	x8, 4245cc <client_context_free+0x10c>
  4245ac:	mov	w8, wzr
  4245b0:	mov	w0, w8
  4245b4:	adrp	x1, 42f000 <_fini+0x53a8>
  4245b8:	add	x1, x1, #0x90f
  4245bc:	ldr	x2, [sp, #32]
  4245c0:	mov	w3, #0xc3                  	// #195
  4245c4:	ldr	x4, [sp, #24]
  4245c8:	bl	405718 <log_assert_failed_realm@plt>
  4245cc:	ldur	x8, [x29, #-24]
  4245d0:	ldrb	w9, [x8, #16]
  4245d4:	tbnz	w9, #0, 4245dc <client_context_free+0x11c>
  4245d8:	b	42463c <client_context_free+0x17c>
  4245dc:	ldur	x8, [x29, #-16]
  4245e0:	ldr	x0, [x8, #728]
  4245e4:	ldur	x1, [x29, #-24]
  4245e8:	ldur	x8, [x29, #-24]
  4245ec:	add	x2, x8, #0x4
  4245f0:	bl	406508 <prioq_remove@plt>
  4245f4:	cmp	w0, #0x0
  4245f8:	cset	w9, ge  // ge = tcont
  4245fc:	mov	w10, #0x1                   	// #1
  424600:	eor	w9, w9, #0x1
  424604:	eor	w9, w9, w10
  424608:	eor	w9, w9, w10
  42460c:	and	w9, w9, #0x1
  424610:	mov	w1, w9
  424614:	sxtw	x8, w1
  424618:	cbz	x8, 42463c <client_context_free+0x17c>
  42461c:	mov	w8, wzr
  424620:	mov	w0, w8
  424624:	adrp	x1, 42f000 <_fini+0x53a8>
  424628:	add	x1, x1, #0x7dd
  42462c:	ldr	x2, [sp, #32]
  424630:	mov	w3, #0xc6                  	// #198
  424634:	ldr	x4, [sp, #24]
  424638:	bl	405718 <log_assert_failed_realm@plt>
  42463c:	ldur	x0, [x29, #-16]
  424640:	ldur	x1, [x29, #-24]
  424644:	bl	42353c <client_context_reset>
  424648:	ldur	x0, [x29, #-24]
  42464c:	bl	424890 <mfree>
  424650:	stur	x0, [x29, #-8]
  424654:	ldur	x0, [x29, #-8]
  424658:	ldp	x29, x30, [sp, #64]
  42465c:	add	sp, sp, #0x50
  424660:	ret

0000000000424664 <client_context_acquire_default>:
  424664:	sub	sp, sp, #0x80
  424668:	stp	x29, x30, [sp, #112]
  42466c:	add	x29, sp, #0x70
  424670:	adrp	x8, 42f000 <_fini+0x53a8>
  424674:	add	x8, x8, #0xcb
  424678:	add	x8, x8, #0x3
  42467c:	stur	x0, [x29, #-8]
  424680:	str	x8, [sp, #48]
  424684:	ldur	x8, [x29, #-8]
  424688:	cmp	x8, #0x0
  42468c:	cset	w9, ne  // ne = any
  424690:	mov	w10, #0x1                   	// #1
  424694:	eor	w9, w9, #0x1
  424698:	eor	w9, w9, w10
  42469c:	eor	w9, w9, w10
  4246a0:	and	w9, w9, #0x1
  4246a4:	mov	w0, w9
  4246a8:	sxtw	x8, w0
  4246ac:	cbz	x8, 4246d4 <client_context_acquire_default+0x70>
  4246b0:	mov	w8, wzr
  4246b4:	mov	w0, w8
  4246b8:	adrp	x1, 429000 <journal_ratelimit_group_free+0x70>
  4246bc:	add	x1, x1, #0xdc8
  4246c0:	ldr	x2, [sp, #48]
  4246c4:	mov	w3, #0x2f3                 	// #755
  4246c8:	adrp	x4, 42f000 <_fini+0x53a8>
  4246cc:	add	x4, x4, #0x23d
  4246d0:	bl	405718 <log_assert_failed_realm@plt>
  4246d4:	ldur	x8, [x29, #-8]
  4246d8:	ldr	x8, [x8, #744]
  4246dc:	cbnz	x8, 4247bc <client_context_acquire_default+0x158>
  4246e0:	bl	4056d8 <getpid_cached@plt>
  4246e4:	sub	x2, x29, #0x18
  4246e8:	stur	w0, [x29, #-24]
  4246ec:	str	x2, [sp, #40]
  4246f0:	bl	406518 <getuid@plt>
  4246f4:	stur	w0, [x29, #-20]
  4246f8:	bl	406528 <getgid@plt>
  4246fc:	stur	w0, [x29, #-16]
  424700:	ldur	x0, [x29, #-8]
  424704:	ldur	w1, [x29, #-24]
  424708:	ldur	x8, [x29, #-8]
  42470c:	add	x6, x8, #0x2e8
  424710:	ldr	x2, [sp, #40]
  424714:	mov	x8, xzr
  424718:	mov	x3, x8
  42471c:	str	x3, [sp, #32]
  424720:	mov	x4, x8
  424724:	ldr	x5, [sp, #32]
  424728:	bl	424464 <client_context_acquire>
  42472c:	stur	w0, [x29, #-12]
  424730:	ldur	w9, [x29, #-12]
  424734:	cmp	w9, #0x0
  424738:	cset	w9, ge  // ge = tcont
  42473c:	tbnz	w9, #0, 4247bc <client_context_acquire_default+0x158>
  424740:	mov	w8, #0x4                   	// #4
  424744:	stur	w8, [x29, #-28]
  424748:	ldur	w8, [x29, #-12]
  42474c:	stur	w8, [x29, #-32]
  424750:	stur	wzr, [x29, #-36]
  424754:	ldur	w0, [x29, #-36]
  424758:	bl	405638 <log_get_max_level_realm@plt>
  42475c:	ldur	w8, [x29, #-28]
  424760:	and	w8, w8, #0x7
  424764:	cmp	w0, w8
  424768:	b.lt	4247a0 <client_context_acquire_default+0x13c>  // b.tstop
  42476c:	ldur	w8, [x29, #-36]
  424770:	ldur	w9, [x29, #-28]
  424774:	orr	w0, w9, w8, lsl #10
  424778:	ldur	w1, [x29, #-32]
  42477c:	ldr	x2, [sp, #48]
  424780:	mov	w3, #0x301                 	// #769
  424784:	adrp	x4, 42f000 <_fini+0x53a8>
  424788:	add	x4, x4, #0x26b
  42478c:	adrp	x5, 42f000 <_fini+0x53a8>
  424790:	add	x5, x5, #0x28a
  424794:	bl	405648 <log_internal_realm@plt>
  424798:	str	w0, [sp, #28]
  42479c:	b	4247b4 <client_context_acquire_default+0x150>
  4247a0:	ldur	w0, [x29, #-32]
  4247a4:	bl	405658 <abs@plt>
  4247a8:	mov	w8, wzr
  4247ac:	subs	w8, w8, w0, uxtb
  4247b0:	str	w8, [sp, #28]
  4247b4:	ldr	w8, [sp, #28]
  4247b8:	stur	w8, [x29, #-40]
  4247bc:	ldur	x8, [x29, #-8]
  4247c0:	ldr	x8, [x8, #752]
  4247c4:	cbnz	x8, 424884 <client_context_acquire_default+0x220>
  4247c8:	ldur	x0, [x29, #-8]
  4247cc:	ldur	x8, [x29, #-8]
  4247d0:	add	x6, x8, #0x2f0
  4247d4:	mov	w1, #0x1                   	// #1
  4247d8:	mov	x8, xzr
  4247dc:	mov	x2, x8
  4247e0:	mov	x3, x8
  4247e4:	str	x3, [sp, #16]
  4247e8:	mov	x4, x8
  4247ec:	ldr	x5, [sp, #16]
  4247f0:	bl	424464 <client_context_acquire>
  4247f4:	stur	w0, [x29, #-12]
  4247f8:	ldur	w9, [x29, #-12]
  4247fc:	cmp	w9, #0x0
  424800:	cset	w9, ge  // ge = tcont
  424804:	tbnz	w9, #0, 424884 <client_context_acquire_default+0x220>
  424808:	mov	w8, #0x4                   	// #4
  42480c:	stur	w8, [x29, #-44]
  424810:	ldur	w8, [x29, #-12]
  424814:	stur	w8, [x29, #-48]
  424818:	stur	wzr, [x29, #-52]
  42481c:	ldur	w0, [x29, #-52]
  424820:	bl	405638 <log_get_max_level_realm@plt>
  424824:	ldur	w8, [x29, #-44]
  424828:	and	w8, w8, #0x7
  42482c:	cmp	w0, w8
  424830:	b.lt	424868 <client_context_acquire_default+0x204>  // b.tstop
  424834:	ldur	w8, [x29, #-52]
  424838:	ldur	w9, [x29, #-44]
  42483c:	orr	w0, w9, w8, lsl #10
  424840:	ldur	w1, [x29, #-48]
  424844:	ldr	x2, [sp, #48]
  424848:	mov	w3, #0x308                 	// #776
  42484c:	adrp	x4, 42f000 <_fini+0x53a8>
  424850:	add	x4, x4, #0x26b
  424854:	adrp	x5, 42f000 <_fini+0x53a8>
  424858:	add	x5, x5, #0x2ba
  42485c:	bl	405648 <log_internal_realm@plt>
  424860:	str	w0, [sp, #12]
  424864:	b	42487c <client_context_acquire_default+0x218>
  424868:	ldur	w0, [x29, #-48]
  42486c:	bl	405658 <abs@plt>
  424870:	mov	w8, wzr
  424874:	subs	w8, w8, w0, uxtb
  424878:	str	w8, [sp, #12]
  42487c:	ldr	w8, [sp, #12]
  424880:	str	w8, [sp, #56]
  424884:	ldp	x29, x30, [sp, #112]
  424888:	add	sp, sp, #0x80
  42488c:	ret

0000000000424890 <mfree>:
  424890:	sub	sp, sp, #0x20
  424894:	stp	x29, x30, [sp, #16]
  424898:	add	x29, sp, #0x10
  42489c:	mov	x8, xzr
  4248a0:	str	x0, [sp, #8]
  4248a4:	ldr	x0, [sp, #8]
  4248a8:	str	x8, [sp]
  4248ac:	bl	405778 <free@plt>
  4248b0:	ldr	x0, [sp]
  4248b4:	ldp	x29, x30, [sp, #16]
  4248b8:	add	sp, sp, #0x20
  4248bc:	ret

00000000004248c0 <pid_is_valid>:
  4248c0:	sub	sp, sp, #0x10
  4248c4:	str	w0, [sp, #12]
  4248c8:	ldr	w8, [sp, #12]
  4248cc:	cmp	w8, #0x0
  4248d0:	cset	w8, gt
  4248d4:	and	w0, w8, #0x1
  4248d8:	add	sp, sp, #0x10
  4248dc:	ret

00000000004248e0 <client_context_read_uid_gid>:
  4248e0:	sub	sp, sp, #0x30
  4248e4:	stp	x29, x30, [sp, #32]
  4248e8:	add	x29, sp, #0x20
  4248ec:	adrp	x8, 42f000 <_fini+0x53a8>
  4248f0:	add	x8, x8, #0xcb
  4248f4:	add	x8, x8, #0x3
  4248f8:	stur	x0, [x29, #-8]
  4248fc:	str	x1, [sp, #16]
  424900:	str	x8, [sp, #8]
  424904:	ldur	x8, [x29, #-8]
  424908:	cmp	x8, #0x0
  42490c:	cset	w9, ne  // ne = any
  424910:	mov	w10, #0x1                   	// #1
  424914:	eor	w9, w9, #0x1
  424918:	eor	w9, w9, w10
  42491c:	eor	w9, w9, w10
  424920:	and	w9, w9, #0x1
  424924:	mov	w0, w9
  424928:	sxtw	x8, w0
  42492c:	cbz	x8, 424954 <client_context_read_uid_gid+0x74>
  424930:	mov	w8, wzr
  424934:	mov	w0, w8
  424938:	adrp	x1, 42f000 <_fini+0x53a8>
  42493c:	add	x1, x1, #0x16c
  424940:	ldr	x2, [sp, #8]
  424944:	mov	w3, #0xce                  	// #206
  424948:	adrp	x4, 42f000 <_fini+0x53a8>
  42494c:	add	x4, x4, #0x400
  424950:	bl	405718 <log_assert_failed_realm@plt>
  424954:	ldur	x8, [x29, #-8]
  424958:	ldr	w0, [x8, #20]
  42495c:	bl	4248c0 <pid_is_valid>
  424960:	mov	w9, #0x1                   	// #1
  424964:	eor	w10, w0, #0x1
  424968:	eor	w10, w10, w9
  42496c:	eor	w9, w10, w9
  424970:	and	w9, w9, #0x1
  424974:	mov	w1, w9
  424978:	sxtw	x8, w1
  42497c:	cbz	x8, 4249a4 <client_context_read_uid_gid+0xc4>
  424980:	mov	w8, wzr
  424984:	mov	w0, w8
  424988:	adrp	x1, 42f000 <_fini+0x53a8>
  42498c:	add	x1, x1, #0x39e
  424990:	ldr	x2, [sp, #8]
  424994:	mov	w3, #0xcf                  	// #207
  424998:	adrp	x4, 42f000 <_fini+0x53a8>
  42499c:	add	x4, x4, #0x400
  4249a0:	bl	405718 <log_assert_failed_realm@plt>
  4249a4:	ldr	x8, [sp, #16]
  4249a8:	cbz	x8, 4249d4 <client_context_read_uid_gid+0xf4>
  4249ac:	ldr	x8, [sp, #16]
  4249b0:	ldr	w0, [x8, #4]
  4249b4:	bl	405ac8 <uid_is_valid@plt>
  4249b8:	tbnz	w0, #0, 4249c0 <client_context_read_uid_gid+0xe0>
  4249bc:	b	4249d4 <client_context_read_uid_gid+0xf4>
  4249c0:	ldr	x8, [sp, #16]
  4249c4:	ldr	w9, [x8, #4]
  4249c8:	ldur	x8, [x29, #-8]
  4249cc:	str	w9, [x8, #24]
  4249d0:	b	4249e8 <client_context_read_uid_gid+0x108>
  4249d4:	ldur	x8, [x29, #-8]
  4249d8:	ldr	w0, [x8, #20]
  4249dc:	ldur	x8, [x29, #-8]
  4249e0:	add	x1, x8, #0x18
  4249e4:	bl	406538 <get_process_uid@plt>
  4249e8:	ldr	x8, [sp, #16]
  4249ec:	cbz	x8, 424a18 <client_context_read_uid_gid+0x138>
  4249f0:	ldr	x8, [sp, #16]
  4249f4:	ldr	w0, [x8, #8]
  4249f8:	bl	4237b4 <gid_is_valid>
  4249fc:	tbnz	w0, #0, 424a04 <client_context_read_uid_gid+0x124>
  424a00:	b	424a18 <client_context_read_uid_gid+0x138>
  424a04:	ldr	x8, [sp, #16]
  424a08:	ldr	w9, [x8, #8]
  424a0c:	ldur	x8, [x29, #-8]
  424a10:	str	w9, [x8, #28]
  424a14:	b	424a2c <client_context_read_uid_gid+0x14c>
  424a18:	ldur	x8, [x29, #-8]
  424a1c:	ldr	w0, [x8, #20]
  424a20:	ldur	x8, [x29, #-8]
  424a24:	add	x1, x8, #0x1c
  424a28:	bl	406548 <get_process_gid@plt>
  424a2c:	ldp	x29, x30, [sp, #32]
  424a30:	add	sp, sp, #0x30
  424a34:	ret

0000000000424a38 <client_context_read_basic>:
  424a38:	sub	sp, sp, #0x40
  424a3c:	stp	x29, x30, [sp, #48]
  424a40:	add	x29, sp, #0x30
  424a44:	adrp	x8, 42f000 <_fini+0x53a8>
  424a48:	add	x8, x8, #0xcb
  424a4c:	add	x8, x8, #0x3
  424a50:	stur	x0, [x29, #-8]
  424a54:	str	x8, [sp, #8]
  424a58:	ldur	x8, [x29, #-8]
  424a5c:	cmp	x8, #0x0
  424a60:	cset	w9, ne  // ne = any
  424a64:	mov	w10, #0x1                   	// #1
  424a68:	eor	w9, w9, #0x1
  424a6c:	eor	w9, w9, w10
  424a70:	eor	w9, w9, w10
  424a74:	and	w9, w9, #0x1
  424a78:	mov	w0, w9
  424a7c:	sxtw	x8, w0
  424a80:	cbz	x8, 424aa8 <client_context_read_basic+0x70>
  424a84:	mov	w8, wzr
  424a88:	mov	w0, w8
  424a8c:	adrp	x1, 42f000 <_fini+0x53a8>
  424a90:	add	x1, x1, #0x16c
  424a94:	ldr	x2, [sp, #8]
  424a98:	mov	w3, #0xe0                  	// #224
  424a9c:	adrp	x4, 42f000 <_fini+0x53a8>
  424aa0:	add	x4, x4, #0x448
  424aa4:	bl	405718 <log_assert_failed_realm@plt>
  424aa8:	ldur	x8, [x29, #-8]
  424aac:	ldr	w0, [x8, #20]
  424ab0:	bl	4248c0 <pid_is_valid>
  424ab4:	mov	w9, #0x1                   	// #1
  424ab8:	eor	w10, w0, #0x1
  424abc:	eor	w10, w10, w9
  424ac0:	eor	w9, w10, w9
  424ac4:	and	w9, w9, #0x1
  424ac8:	mov	w1, w9
  424acc:	sxtw	x8, w1
  424ad0:	cbz	x8, 424af8 <client_context_read_basic+0xc0>
  424ad4:	mov	w8, wzr
  424ad8:	mov	w0, w8
  424adc:	adrp	x1, 42f000 <_fini+0x53a8>
  424ae0:	add	x1, x1, #0x39e
  424ae4:	ldr	x2, [sp, #8]
  424ae8:	mov	w3, #0xe1                  	// #225
  424aec:	adrp	x4, 42f000 <_fini+0x53a8>
  424af0:	add	x4, x4, #0x448
  424af4:	bl	405718 <log_assert_failed_realm@plt>
  424af8:	ldur	x8, [x29, #-8]
  424afc:	ldr	w0, [x8, #20]
  424b00:	sub	x1, x29, #0x10
  424b04:	bl	405748 <get_process_comm@plt>
  424b08:	cmp	w0, #0x0
  424b0c:	cset	w9, lt  // lt = tstop
  424b10:	tbnz	w9, #0, 424b38 <client_context_read_basic+0x100>
  424b14:	ldur	x8, [x29, #-8]
  424b18:	ldr	x0, [x8, #32]
  424b1c:	bl	405778 <free@plt>
  424b20:	ldur	x8, [x29, #-16]
  424b24:	ldur	x9, [x29, #-8]
  424b28:	str	x8, [x9, #32]
  424b2c:	mov	x8, xzr
  424b30:	stur	x8, [x29, #-16]
  424b34:	stur	wzr, [x29, #-20]
  424b38:	ldur	x8, [x29, #-8]
  424b3c:	ldr	w0, [x8, #20]
  424b40:	sub	x1, x29, #0x10
  424b44:	bl	406558 <get_process_exe@plt>
  424b48:	cmp	w0, #0x0
  424b4c:	cset	w9, lt  // lt = tstop
  424b50:	tbnz	w9, #0, 424b78 <client_context_read_basic+0x140>
  424b54:	ldur	x8, [x29, #-8]
  424b58:	ldr	x0, [x8, #40]
  424b5c:	bl	405778 <free@plt>
  424b60:	ldur	x8, [x29, #-16]
  424b64:	ldur	x9, [x29, #-8]
  424b68:	str	x8, [x9, #40]
  424b6c:	mov	x8, xzr
  424b70:	stur	x8, [x29, #-16]
  424b74:	str	wzr, [sp, #24]
  424b78:	ldur	x8, [x29, #-8]
  424b7c:	ldr	w0, [x8, #20]
  424b80:	mov	x1, #0xffffffffffffffff    	// #-1
  424b84:	mov	w9, wzr
  424b88:	mov	w2, w9
  424b8c:	sub	x3, x29, #0x10
  424b90:	bl	406568 <get_process_cmdline@plt>
  424b94:	cmp	w0, #0x0
  424b98:	cset	w9, lt  // lt = tstop
  424b9c:	tbnz	w9, #0, 424bc4 <client_context_read_basic+0x18c>
  424ba0:	ldur	x8, [x29, #-8]
  424ba4:	ldr	x0, [x8, #48]
  424ba8:	bl	405778 <free@plt>
  424bac:	ldur	x8, [x29, #-16]
  424bb0:	ldur	x9, [x29, #-8]
  424bb4:	str	x8, [x9, #48]
  424bb8:	mov	x8, xzr
  424bbc:	stur	x8, [x29, #-16]
  424bc0:	str	wzr, [sp, #20]
  424bc4:	ldur	x8, [x29, #-8]
  424bc8:	ldr	w0, [x8, #20]
  424bcc:	sub	x1, x29, #0x10
  424bd0:	bl	406578 <get_process_capeff@plt>
  424bd4:	cmp	w0, #0x0
  424bd8:	cset	w9, lt  // lt = tstop
  424bdc:	tbnz	w9, #0, 424c04 <client_context_read_basic+0x1cc>
  424be0:	ldur	x8, [x29, #-8]
  424be4:	ldr	x0, [x8, #56]
  424be8:	bl	405778 <free@plt>
  424bec:	ldur	x8, [x29, #-16]
  424bf0:	ldur	x9, [x29, #-8]
  424bf4:	str	x8, [x9, #56]
  424bf8:	mov	x8, xzr
  424bfc:	stur	x8, [x29, #-16]
  424c00:	str	wzr, [sp, #16]
  424c04:	ldp	x29, x30, [sp, #48]
  424c08:	add	sp, sp, #0x40
  424c0c:	ret

0000000000424c10 <client_context_read_label>:
  424c10:	sub	sp, sp, #0x60
  424c14:	stp	x29, x30, [sp, #80]
  424c18:	add	x29, sp, #0x50
  424c1c:	adrp	x8, 42f000 <_fini+0x53a8>
  424c20:	add	x8, x8, #0xcb
  424c24:	add	x8, x8, #0x3
  424c28:	adrp	x9, 42f000 <_fini+0x53a8>
  424c2c:	add	x9, x9, #0x478
  424c30:	stur	x0, [x29, #-16]
  424c34:	stur	x1, [x29, #-24]
  424c38:	stur	x2, [x29, #-32]
  424c3c:	str	x8, [sp, #24]
  424c40:	str	x9, [sp, #16]
  424c44:	ldur	x8, [x29, #-16]
  424c48:	cmp	x8, #0x0
  424c4c:	cset	w9, ne  // ne = any
  424c50:	mov	w10, #0x1                   	// #1
  424c54:	eor	w9, w9, #0x1
  424c58:	eor	w9, w9, w10
  424c5c:	eor	w9, w9, w10
  424c60:	and	w9, w9, #0x1
  424c64:	mov	w0, w9
  424c68:	sxtw	x8, w0
  424c6c:	cbz	x8, 424c90 <client_context_read_label+0x80>
  424c70:	mov	w8, wzr
  424c74:	mov	w0, w8
  424c78:	adrp	x1, 42f000 <_fini+0x53a8>
  424c7c:	add	x1, x1, #0x16c
  424c80:	ldr	x2, [sp, #24]
  424c84:	mov	w3, #0xf4                  	// #244
  424c88:	ldr	x4, [sp, #16]
  424c8c:	bl	405718 <log_assert_failed_realm@plt>
  424c90:	ldur	x8, [x29, #-16]
  424c94:	ldr	w0, [x8, #20]
  424c98:	bl	4248c0 <pid_is_valid>
  424c9c:	mov	w9, #0x1                   	// #1
  424ca0:	eor	w10, w0, #0x1
  424ca4:	eor	w10, w10, w9
  424ca8:	eor	w9, w10, w9
  424cac:	and	w9, w9, #0x1
  424cb0:	mov	w1, w9
  424cb4:	sxtw	x8, w1
  424cb8:	cbz	x8, 424cdc <client_context_read_label+0xcc>
  424cbc:	mov	w8, wzr
  424cc0:	mov	w0, w8
  424cc4:	adrp	x1, 42f000 <_fini+0x53a8>
  424cc8:	add	x1, x1, #0x39e
  424ccc:	ldr	x2, [sp, #24]
  424cd0:	mov	w3, #0xf5                  	// #245
  424cd4:	ldr	x4, [sp, #16]
  424cd8:	bl	405718 <log_assert_failed_realm@plt>
  424cdc:	ldur	x8, [x29, #-32]
  424ce0:	mov	w9, #0x1                   	// #1
  424ce4:	str	w9, [sp, #12]
  424ce8:	cbz	x8, 424cfc <client_context_read_label+0xec>
  424cec:	ldur	x8, [x29, #-24]
  424cf0:	cmp	x8, #0x0
  424cf4:	cset	w9, ne  // ne = any
  424cf8:	str	w9, [sp, #12]
  424cfc:	ldr	w8, [sp, #12]
  424d00:	mov	w9, #0x1                   	// #1
  424d04:	eor	w8, w8, #0x1
  424d08:	eor	w8, w8, w9
  424d0c:	eor	w8, w8, w9
  424d10:	and	w8, w8, #0x1
  424d14:	mov	w0, w8
  424d18:	sxtw	x10, w0
  424d1c:	cbz	x10, 424d40 <client_context_read_label+0x130>
  424d20:	mov	w8, wzr
  424d24:	mov	w0, w8
  424d28:	adrp	x1, 42f000 <_fini+0x53a8>
  424d2c:	add	x1, x1, #0x4bd
  424d30:	ldr	x2, [sp, #24]
  424d34:	mov	w3, #0xf6                  	// #246
  424d38:	ldr	x4, [sp, #16]
  424d3c:	bl	405718 <log_assert_failed_realm@plt>
  424d40:	ldur	x8, [x29, #-32]
  424d44:	cmp	x8, #0x0
  424d48:	cset	w9, ls  // ls = plast
  424d4c:	tbnz	w9, #0, 424da8 <client_context_read_label+0x198>
  424d50:	ldur	x0, [x29, #-24]
  424d54:	ldur	x2, [x29, #-32]
  424d58:	mov	x1, #0x1                   	// #1
  424d5c:	bl	42636c <memdup_suffix0_multiply>
  424d60:	str	x0, [sp, #40]
  424d64:	ldr	x8, [sp, #40]
  424d68:	cbnz	x8, 424d78 <client_context_read_label+0x168>
  424d6c:	mov	w8, #0xfffffff4            	// #-12
  424d70:	stur	w8, [x29, #-4]
  424d74:	b	424dac <client_context_read_label+0x19c>
  424d78:	ldur	x8, [x29, #-16]
  424d7c:	ldr	x0, [x8, #144]
  424d80:	bl	405778 <free@plt>
  424d84:	ldr	x8, [sp, #40]
  424d88:	ldur	x9, [x29, #-16]
  424d8c:	str	x8, [x9, #144]
  424d90:	mov	x8, xzr
  424d94:	str	x8, [sp, #40]
  424d98:	str	wzr, [sp, #36]
  424d9c:	ldur	x8, [x29, #-32]
  424da0:	ldur	x9, [x29, #-16]
  424da4:	str	x8, [x9, #152]
  424da8:	stur	wzr, [x29, #-4]
  424dac:	ldur	w0, [x29, #-4]
  424db0:	ldp	x29, x30, [sp, #80]
  424db4:	add	sp, sp, #0x60
  424db8:	ret

0000000000424dbc <client_context_read_cgroup>:
  424dbc:	sub	sp, sp, #0x80
  424dc0:	stp	x29, x30, [sp, #112]
  424dc4:	add	x29, sp, #0x70
  424dc8:	mov	x8, xzr
  424dcc:	adrp	x9, 42f000 <_fini+0x53a8>
  424dd0:	add	x9, x9, #0xcb
  424dd4:	add	x9, x9, #0x3
  424dd8:	stur	x0, [x29, #-16]
  424ddc:	stur	x1, [x29, #-24]
  424de0:	stur	x2, [x29, #-32]
  424de4:	stur	x8, [x29, #-40]
  424de8:	str	x9, [sp, #32]
  424dec:	ldur	x8, [x29, #-24]
  424df0:	cmp	x8, #0x0
  424df4:	cset	w9, ne  // ne = any
  424df8:	mov	w10, #0x1                   	// #1
  424dfc:	eor	w9, w9, #0x1
  424e00:	eor	w9, w9, w10
  424e04:	eor	w9, w9, w10
  424e08:	and	w9, w9, #0x1
  424e0c:	mov	w0, w9
  424e10:	sxtw	x8, w0
  424e14:	cbz	x8, 424e3c <client_context_read_cgroup+0x80>
  424e18:	mov	w8, wzr
  424e1c:	mov	w0, w8
  424e20:	adrp	x1, 42f000 <_fini+0x53a8>
  424e24:	add	x1, x1, #0x16c
  424e28:	ldr	x2, [sp, #32]
  424e2c:	mov	w3, #0x118                 	// #280
  424e30:	adrp	x4, 42f000 <_fini+0x53a8>
  424e34:	add	x4, x4, #0x4d6
  424e38:	bl	405718 <log_assert_failed_realm@plt>
  424e3c:	ldur	x8, [x29, #-24]
  424e40:	ldr	w0, [x8, #20]
  424e44:	ldur	x8, [x29, #-16]
  424e48:	ldr	x1, [x8, #688]
  424e4c:	sub	x2, x29, #0x28
  424e50:	bl	406588 <cg_pid_get_path_shifted@plt>
  424e54:	stur	w0, [x29, #-44]
  424e58:	ldur	w9, [x29, #-44]
  424e5c:	cmp	w9, #0x0
  424e60:	cset	w9, lt  // lt = tstop
  424e64:	tbnz	w9, #0, 424e78 <client_context_read_cgroup+0xbc>
  424e68:	ldur	x0, [x29, #-40]
  424e6c:	bl	406598 <empty_or_root@plt>
  424e70:	tbnz	w0, #0, 424e78 <client_context_read_cgroup+0xbc>
  424e74:	b	424ecc <client_context_read_cgroup+0x110>
  424e78:	ldur	x8, [x29, #-32]
  424e7c:	cbz	x8, 424eb8 <client_context_read_cgroup+0xfc>
  424e80:	ldur	x8, [x29, #-24]
  424e84:	ldr	x8, [x8, #96]
  424e88:	cbnz	x8, 424eb8 <client_context_read_cgroup+0xfc>
  424e8c:	ldur	x0, [x29, #-32]
  424e90:	bl	406268 <strdup@plt>
  424e94:	ldur	x8, [x29, #-24]
  424e98:	str	x0, [x8, #96]
  424e9c:	ldur	x8, [x29, #-24]
  424ea0:	ldr	x8, [x8, #96]
  424ea4:	cbz	x8, 424eb8 <client_context_read_cgroup+0xfc>
  424ea8:	stur	wzr, [x29, #-4]
  424eac:	mov	w8, #0x1                   	// #1
  424eb0:	stur	w8, [x29, #-48]
  424eb4:	b	425078 <client_context_read_cgroup+0x2bc>
  424eb8:	ldur	w8, [x29, #-44]
  424ebc:	stur	w8, [x29, #-4]
  424ec0:	mov	w8, #0x1                   	// #1
  424ec4:	stur	w8, [x29, #-48]
  424ec8:	b	425078 <client_context_read_cgroup+0x2bc>
  424ecc:	ldur	x8, [x29, #-24]
  424ed0:	ldr	x0, [x8, #72]
  424ed4:	ldur	x1, [x29, #-40]
  424ed8:	bl	42645c <streq_ptr>
  424edc:	tbnz	w0, #0, 424ee4 <client_context_read_cgroup+0x128>
  424ee0:	b	424ef4 <client_context_read_cgroup+0x138>
  424ee4:	stur	wzr, [x29, #-4]
  424ee8:	mov	w8, #0x1                   	// #1
  424eec:	stur	w8, [x29, #-48]
  424ef0:	b	425078 <client_context_read_cgroup+0x2bc>
  424ef4:	ldur	x8, [x29, #-24]
  424ef8:	ldr	x0, [x8, #72]
  424efc:	bl	405778 <free@plt>
  424f00:	sub	x1, x29, #0x28
  424f04:	ldur	x8, [x29, #-40]
  424f08:	ldur	x9, [x29, #-24]
  424f0c:	str	x8, [x9, #72]
  424f10:	mov	x8, xzr
  424f14:	stur	x8, [x29, #-40]
  424f18:	stur	wzr, [x29, #-52]
  424f1c:	ldur	x9, [x29, #-24]
  424f20:	ldr	x0, [x9, #72]
  424f24:	str	x8, [sp, #24]
  424f28:	bl	4065a8 <cg_path_get_session@plt>
  424f2c:	ldur	x8, [x29, #-24]
  424f30:	ldr	x8, [x8, #80]
  424f34:	mov	x0, x8
  424f38:	bl	405778 <free@plt>
  424f3c:	ldur	x8, [x29, #-40]
  424f40:	ldur	x9, [x29, #-24]
  424f44:	str	x8, [x9, #80]
  424f48:	ldr	x8, [sp, #24]
  424f4c:	stur	x8, [x29, #-40]
  424f50:	str	wzr, [sp, #56]
  424f54:	ldur	x9, [x29, #-24]
  424f58:	ldr	x0, [x9, #72]
  424f5c:	ldur	x9, [x29, #-24]
  424f60:	add	x1, x9, #0x58
  424f64:	bl	4065b8 <cg_path_get_owner_uid@plt>
  424f68:	cmp	w0, #0x0
  424f6c:	cset	w10, ge  // ge = tcont
  424f70:	tbnz	w10, #0, 424f80 <client_context_read_cgroup+0x1c4>
  424f74:	ldur	x8, [x29, #-24]
  424f78:	mov	w9, #0xffffffff            	// #-1
  424f7c:	str	w9, [x8, #88]
  424f80:	ldur	x8, [x29, #-24]
  424f84:	ldr	x0, [x8, #72]
  424f88:	sub	x8, x29, #0x28
  424f8c:	mov	x1, x8
  424f90:	str	x8, [sp, #16]
  424f94:	bl	4065c8 <cg_path_get_unit@plt>
  424f98:	ldur	x8, [x29, #-24]
  424f9c:	ldr	x8, [x8, #96]
  424fa0:	mov	x0, x8
  424fa4:	bl	405778 <free@plt>
  424fa8:	ldur	x8, [x29, #-40]
  424fac:	ldur	x9, [x29, #-24]
  424fb0:	str	x8, [x9, #96]
  424fb4:	mov	x8, xzr
  424fb8:	stur	x8, [x29, #-40]
  424fbc:	str	wzr, [sp, #52]
  424fc0:	ldur	x9, [x29, #-24]
  424fc4:	ldr	x0, [x9, #72]
  424fc8:	ldr	x1, [sp, #16]
  424fcc:	str	x8, [sp, #8]
  424fd0:	bl	4065d8 <cg_path_get_user_unit@plt>
  424fd4:	ldur	x8, [x29, #-24]
  424fd8:	ldr	x8, [x8, #104]
  424fdc:	mov	x0, x8
  424fe0:	bl	405778 <free@plt>
  424fe4:	ldur	x8, [x29, #-40]
  424fe8:	ldur	x9, [x29, #-24]
  424fec:	str	x8, [x9, #104]
  424ff0:	ldr	x8, [sp, #8]
  424ff4:	stur	x8, [x29, #-40]
  424ff8:	str	wzr, [sp, #48]
  424ffc:	ldur	x9, [x29, #-24]
  425000:	ldr	x0, [x9, #72]
  425004:	ldr	x1, [sp, #16]
  425008:	bl	4065e8 <cg_path_get_slice@plt>
  42500c:	ldur	x8, [x29, #-24]
  425010:	ldr	x8, [x8, #112]
  425014:	mov	x0, x8
  425018:	bl	405778 <free@plt>
  42501c:	ldur	x8, [x29, #-40]
  425020:	ldur	x9, [x29, #-24]
  425024:	str	x8, [x9, #112]
  425028:	ldr	x8, [sp, #8]
  42502c:	stur	x8, [x29, #-40]
  425030:	str	wzr, [sp, #44]
  425034:	ldur	x9, [x29, #-24]
  425038:	ldr	x0, [x9, #72]
  42503c:	ldr	x1, [sp, #16]
  425040:	bl	4065f8 <cg_path_get_user_slice@plt>
  425044:	ldur	x8, [x29, #-24]
  425048:	ldr	x8, [x8, #120]
  42504c:	mov	x0, x8
  425050:	bl	405778 <free@plt>
  425054:	ldur	x8, [x29, #-40]
  425058:	ldur	x9, [x29, #-24]
  42505c:	str	x8, [x9, #120]
  425060:	ldr	x8, [sp, #8]
  425064:	stur	x8, [x29, #-40]
  425068:	str	wzr, [sp, #40]
  42506c:	stur	wzr, [x29, #-4]
  425070:	mov	w10, #0x1                   	// #1
  425074:	stur	w10, [x29, #-48]
  425078:	sub	x0, x29, #0x28
  42507c:	bl	426434 <freep>
  425080:	ldur	w0, [x29, #-4]
  425084:	ldp	x29, x30, [sp, #112]
  425088:	add	sp, sp, #0x80
  42508c:	ret

0000000000425090 <client_context_read_invocation_id>:
  425090:	stp	x29, x30, [sp, #-16]!
  425094:	mov	x29, sp
  425098:	sub	sp, sp, #0x90
  42509c:	mov	x8, xzr
  4250a0:	adrp	x9, 42f000 <_fini+0x53a8>
  4250a4:	add	x9, x9, #0xcb
  4250a8:	add	x9, x9, #0x3
  4250ac:	adrp	x10, 42f000 <_fini+0x53a8>
  4250b0:	add	x10, x10, #0x51e
  4250b4:	stur	x0, [x29, #-16]
  4250b8:	stur	x1, [x29, #-24]
  4250bc:	stur	x8, [x29, #-32]
  4250c0:	stur	x9, [x29, #-128]
  4250c4:	stur	x10, [x29, #-136]
  4250c8:	ldur	x8, [x29, #-16]
  4250cc:	cmp	x8, #0x0
  4250d0:	cset	w9, ne  // ne = any
  4250d4:	mov	w10, #0x1                   	// #1
  4250d8:	eor	w9, w9, #0x1
  4250dc:	eor	w9, w9, w10
  4250e0:	eor	w9, w9, w10
  4250e4:	and	w9, w9, #0x1
  4250e8:	mov	w0, w9
  4250ec:	sxtw	x8, w0
  4250f0:	cbz	x8, 425114 <client_context_read_invocation_id+0x84>
  4250f4:	mov	w8, wzr
  4250f8:	mov	w0, w8
  4250fc:	adrp	x1, 429000 <journal_ratelimit_group_free+0x70>
  425100:	add	x1, x1, #0xdc8
  425104:	ldur	x2, [x29, #-128]
  425108:	mov	w3, #0x14c                 	// #332
  42510c:	ldur	x4, [x29, #-136]
  425110:	bl	405718 <log_assert_failed_realm@plt>
  425114:	ldur	x8, [x29, #-24]
  425118:	cmp	x8, #0x0
  42511c:	cset	w9, ne  // ne = any
  425120:	mov	w10, #0x1                   	// #1
  425124:	eor	w9, w9, #0x1
  425128:	eor	w9, w9, w10
  42512c:	eor	w9, w9, w10
  425130:	and	w9, w9, #0x1
  425134:	mov	w0, w9
  425138:	sxtw	x8, w0
  42513c:	cbz	x8, 425160 <client_context_read_invocation_id+0xd0>
  425140:	mov	w8, wzr
  425144:	mov	w0, w8
  425148:	adrp	x1, 42f000 <_fini+0x53a8>
  42514c:	add	x1, x1, #0x16c
  425150:	ldur	x2, [x29, #-128]
  425154:	mov	w3, #0x14d                 	// #333
  425158:	ldur	x4, [x29, #-136]
  42515c:	bl	405718 <log_assert_failed_realm@plt>
  425160:	ldur	x8, [x29, #-24]
  425164:	ldr	x8, [x8, #96]
  425168:	cbnz	x8, 42517c <client_context_read_invocation_id+0xec>
  42516c:	stur	wzr, [x29, #-4]
  425170:	mov	w8, #0x1                   	// #1
  425174:	stur	w8, [x29, #-48]
  425178:	b	4253e8 <client_context_read_invocation_id+0x358>
  42517c:	sub	x8, x29, #0x40
  425180:	adrp	x9, 42f000 <_fini+0x53a8>
  425184:	add	x9, x9, #0x55f
  425188:	stur	x9, [x29, #-64]
  42518c:	ldur	x9, [x29, #-24]
  425190:	ldr	x9, [x9, #96]
  425194:	str	x9, [x8, #8]
  425198:	stur	xzr, [x29, #-88]
  42519c:	stur	xzr, [x29, #-96]
  4251a0:	ldur	x8, [x29, #-96]
  4251a4:	mov	w9, #0x0                   	// #0
  4251a8:	cmp	x8, #0x2
  4251ac:	stur	w9, [x29, #-140]
  4251b0:	b.cs	4251d8 <client_context_read_invocation_id+0x148>  // b.hs, b.nlast
  4251b4:	ldur	x8, [x29, #-96]
  4251b8:	mov	x9, #0x8                   	// #8
  4251bc:	mul	x8, x9, x8
  4251c0:	sub	x9, x29, #0x40
  4251c4:	add	x8, x9, x8
  4251c8:	ldr	x8, [x8]
  4251cc:	cmp	x8, #0x0
  4251d0:	cset	w10, ne  // ne = any
  4251d4:	stur	w10, [x29, #-140]
  4251d8:	ldur	w8, [x29, #-140]
  4251dc:	tbnz	w8, #0, 4251e4 <client_context_read_invocation_id+0x154>
  4251e0:	b	42521c <client_context_read_invocation_id+0x18c>
  4251e4:	ldur	x8, [x29, #-96]
  4251e8:	mov	x9, #0x8                   	// #8
  4251ec:	mul	x8, x9, x8
  4251f0:	sub	x9, x29, #0x40
  4251f4:	add	x8, x9, x8
  4251f8:	ldr	x0, [x8]
  4251fc:	bl	405738 <strlen@plt>
  425200:	ldur	x8, [x29, #-88]
  425204:	add	x8, x8, x0
  425208:	stur	x8, [x29, #-88]
  42520c:	ldur	x8, [x29, #-96]
  425210:	add	x8, x8, #0x1
  425214:	stur	x8, [x29, #-96]
  425218:	b	4251a0 <client_context_read_invocation_id+0x110>
  42521c:	ldur	x8, [x29, #-88]
  425220:	add	x8, x8, #0x1
  425224:	stur	x8, [x29, #-104]
  425228:	ldur	x1, [x29, #-104]
  42522c:	mov	x0, #0x1                   	// #1
  425230:	bl	4263cc <size_multiply_overflow>
  425234:	mov	w8, #0x1                   	// #1
  425238:	eor	w9, w0, #0x1
  42523c:	eor	w9, w9, w8
  425240:	eor	w9, w9, w8
  425244:	eor	w8, w9, w8
  425248:	and	w8, w8, #0x1
  42524c:	mov	w1, w8
  425250:	sxtw	x10, w1
  425254:	cbz	x10, 425278 <client_context_read_invocation_id+0x1e8>
  425258:	mov	w8, wzr
  42525c:	mov	w0, w8
  425260:	adrp	x1, 42b000 <_fini+0x13a8>
  425264:	add	x1, x1, #0x876
  425268:	ldur	x2, [x29, #-128]
  42526c:	mov	w3, #0x154                 	// #340
  425270:	ldur	x4, [x29, #-136]
  425274:	bl	405718 <log_assert_failed_realm@plt>
  425278:	ldur	x8, [x29, #-104]
  42527c:	mov	x9, #0x1                   	// #1
  425280:	mul	x8, x9, x8
  425284:	cmp	x8, #0x400, lsl #12
  425288:	cset	w10, ls  // ls = plast
  42528c:	mov	w11, #0x1                   	// #1
  425290:	eor	w10, w10, #0x1
  425294:	eor	w10, w10, w11
  425298:	eor	w10, w10, w11
  42529c:	and	w10, w10, #0x1
  4252a0:	mov	w0, w10
  4252a4:	sxtw	x8, w0
  4252a8:	cbz	x8, 4252cc <client_context_read_invocation_id+0x23c>
  4252ac:	mov	w8, wzr
  4252b0:	mov	w0, w8
  4252b4:	adrp	x1, 42b000 <_fini+0x13a8>
  4252b8:	add	x1, x1, #0x8a1
  4252bc:	ldur	x2, [x29, #-128]
  4252c0:	mov	w3, #0x154                 	// #340
  4252c4:	ldur	x4, [x29, #-136]
  4252c8:	bl	405718 <log_assert_failed_realm@plt>
  4252cc:	ldur	x8, [x29, #-104]
  4252d0:	mov	x9, #0x1                   	// #1
  4252d4:	mul	x8, x9, x8
  4252d8:	mul	x8, x8, x9
  4252dc:	add	x8, x8, #0xf
  4252e0:	and	x8, x8, #0xfffffffffffffff0
  4252e4:	mov	x9, sp
  4252e8:	subs	x8, x9, x8
  4252ec:	mov	sp, x8
  4252f0:	stur	x8, [x29, #-112]
  4252f4:	ldur	x8, [x29, #-112]
  4252f8:	stur	x8, [x29, #-72]
  4252fc:	stur	x8, [x29, #-80]
  425300:	stur	xzr, [x29, #-96]
  425304:	ldur	x8, [x29, #-96]
  425308:	mov	w9, #0x0                   	// #0
  42530c:	cmp	x8, #0x2
  425310:	stur	w9, [x29, #-144]
  425314:	b.cs	42533c <client_context_read_invocation_id+0x2ac>  // b.hs, b.nlast
  425318:	ldur	x8, [x29, #-96]
  42531c:	mov	x9, #0x8                   	// #8
  425320:	mul	x8, x9, x8
  425324:	sub	x9, x29, #0x40
  425328:	add	x8, x9, x8
  42532c:	ldr	x8, [x8]
  425330:	cmp	x8, #0x0
  425334:	cset	w10, ne  // ne = any
  425338:	stur	w10, [x29, #-144]
  42533c:	ldur	w8, [x29, #-144]
  425340:	tbnz	w8, #0, 425348 <client_context_read_invocation_id+0x2b8>
  425344:	b	42537c <client_context_read_invocation_id+0x2ec>
  425348:	ldur	x0, [x29, #-80]
  42534c:	ldur	x8, [x29, #-96]
  425350:	mov	x9, #0x8                   	// #8
  425354:	mul	x8, x9, x8
  425358:	sub	x9, x29, #0x40
  42535c:	add	x8, x9, x8
  425360:	ldr	x1, [x8]
  425364:	bl	405ad8 <stpcpy@plt>
  425368:	stur	x0, [x29, #-80]
  42536c:	ldur	x8, [x29, #-96]
  425370:	add	x8, x8, #0x1
  425374:	stur	x8, [x29, #-96]
  425378:	b	425304 <client_context_read_invocation_id+0x274>
  42537c:	ldur	x8, [x29, #-80]
  425380:	mov	w9, #0x0                   	// #0
  425384:	strb	w9, [x8]
  425388:	ldur	x8, [x29, #-72]
  42538c:	stur	x8, [x29, #-120]
  425390:	ldur	x8, [x29, #-120]
  425394:	stur	x8, [x29, #-40]
  425398:	ldur	x0, [x29, #-40]
  42539c:	sub	x1, x29, #0x20
  4253a0:	bl	406608 <readlink_malloc@plt>
  4253a4:	stur	w0, [x29, #-44]
  4253a8:	ldur	w9, [x29, #-44]
  4253ac:	cmp	w9, #0x0
  4253b0:	cset	w9, ge  // ge = tcont
  4253b4:	tbnz	w9, #0, 4253cc <client_context_read_invocation_id+0x33c>
  4253b8:	ldur	w8, [x29, #-44]
  4253bc:	stur	w8, [x29, #-4]
  4253c0:	mov	w8, #0x1                   	// #1
  4253c4:	stur	w8, [x29, #-48]
  4253c8:	b	4253e8 <client_context_read_invocation_id+0x358>
  4253cc:	ldur	x0, [x29, #-32]
  4253d0:	ldur	x8, [x29, #-24]
  4253d4:	add	x1, x8, #0x80
  4253d8:	bl	406318 <sd_id128_from_string@plt>
  4253dc:	stur	w0, [x29, #-4]
  4253e0:	mov	w9, #0x1                   	// #1
  4253e4:	stur	w9, [x29, #-48]
  4253e8:	sub	x0, x29, #0x20
  4253ec:	bl	426434 <freep>
  4253f0:	ldur	w0, [x29, #-4]
  4253f4:	mov	sp, x29
  4253f8:	ldp	x29, x30, [sp], #16
  4253fc:	ret

0000000000425400 <client_context_read_log_level_max>:
  425400:	stp	x29, x30, [sp, #-16]!
  425404:	mov	x29, sp
  425408:	sub	sp, sp, #0x90
  42540c:	mov	x8, xzr
  425410:	adrp	x9, 42f000 <_fini+0x53a8>
  425414:	add	x9, x9, #0xcb
  425418:	add	x9, x9, #0x3
  42541c:	stur	x0, [x29, #-16]
  425420:	stur	x1, [x29, #-24]
  425424:	stur	x8, [x29, #-32]
  425428:	ldur	x8, [x29, #-24]
  42542c:	ldr	x8, [x8, #96]
  425430:	stur	x9, [x29, #-136]
  425434:	cbnz	x8, 425448 <client_context_read_log_level_max+0x48>
  425438:	stur	wzr, [x29, #-4]
  42543c:	mov	w8, #0x1                   	// #1
  425440:	stur	w8, [x29, #-52]
  425444:	b	4256e8 <client_context_read_log_level_max+0x2e8>
  425448:	sub	x8, x29, #0x48
  42544c:	adrp	x9, 42f000 <_fini+0x53a8>
  425450:	add	x9, x9, #0x57e
  425454:	stur	x9, [x29, #-72]
  425458:	ldur	x9, [x29, #-24]
  42545c:	ldr	x9, [x9, #96]
  425460:	str	x9, [x8, #8]
  425464:	stur	xzr, [x29, #-96]
  425468:	stur	xzr, [x29, #-104]
  42546c:	ldur	x8, [x29, #-104]
  425470:	mov	w9, #0x0                   	// #0
  425474:	cmp	x8, #0x2
  425478:	stur	w9, [x29, #-140]
  42547c:	b.cs	4254a4 <client_context_read_log_level_max+0xa4>  // b.hs, b.nlast
  425480:	ldur	x8, [x29, #-104]
  425484:	mov	x9, #0x8                   	// #8
  425488:	mul	x8, x9, x8
  42548c:	sub	x9, x29, #0x48
  425490:	add	x8, x9, x8
  425494:	ldr	x8, [x8]
  425498:	cmp	x8, #0x0
  42549c:	cset	w10, ne  // ne = any
  4254a0:	stur	w10, [x29, #-140]
  4254a4:	ldur	w8, [x29, #-140]
  4254a8:	tbnz	w8, #0, 4254b0 <client_context_read_log_level_max+0xb0>
  4254ac:	b	4254e8 <client_context_read_log_level_max+0xe8>
  4254b0:	ldur	x8, [x29, #-104]
  4254b4:	mov	x9, #0x8                   	// #8
  4254b8:	mul	x8, x9, x8
  4254bc:	sub	x9, x29, #0x48
  4254c0:	add	x8, x9, x8
  4254c4:	ldr	x0, [x8]
  4254c8:	bl	405738 <strlen@plt>
  4254cc:	ldur	x8, [x29, #-96]
  4254d0:	add	x8, x8, x0
  4254d4:	stur	x8, [x29, #-96]
  4254d8:	ldur	x8, [x29, #-104]
  4254dc:	add	x8, x8, #0x1
  4254e0:	stur	x8, [x29, #-104]
  4254e4:	b	42546c <client_context_read_log_level_max+0x6c>
  4254e8:	ldur	x8, [x29, #-96]
  4254ec:	add	x8, x8, #0x1
  4254f0:	stur	x8, [x29, #-112]
  4254f4:	ldur	x1, [x29, #-112]
  4254f8:	mov	x0, #0x1                   	// #1
  4254fc:	bl	4263cc <size_multiply_overflow>
  425500:	mov	w8, #0x1                   	// #1
  425504:	eor	w9, w0, #0x1
  425508:	eor	w9, w9, w8
  42550c:	eor	w9, w9, w8
  425510:	eor	w8, w9, w8
  425514:	and	w8, w8, #0x1
  425518:	mov	w1, w8
  42551c:	sxtw	x10, w1
  425520:	cbz	x10, 425548 <client_context_read_log_level_max+0x148>
  425524:	mov	w8, wzr
  425528:	mov	w0, w8
  42552c:	adrp	x1, 42b000 <_fini+0x13a8>
  425530:	add	x1, x1, #0x876
  425534:	ldur	x2, [x29, #-136]
  425538:	mov	w3, #0x167                 	// #359
  42553c:	adrp	x4, 42f000 <_fini+0x53a8>
  425540:	add	x4, x4, #0x5a0
  425544:	bl	405718 <log_assert_failed_realm@plt>
  425548:	ldur	x8, [x29, #-112]
  42554c:	mov	x9, #0x1                   	// #1
  425550:	mul	x8, x9, x8
  425554:	cmp	x8, #0x400, lsl #12
  425558:	cset	w10, ls  // ls = plast
  42555c:	mov	w11, #0x1                   	// #1
  425560:	eor	w10, w10, #0x1
  425564:	eor	w10, w10, w11
  425568:	eor	w10, w10, w11
  42556c:	and	w10, w10, #0x1
  425570:	mov	w0, w10
  425574:	sxtw	x8, w0
  425578:	cbz	x8, 4255a0 <client_context_read_log_level_max+0x1a0>
  42557c:	mov	w8, wzr
  425580:	mov	w0, w8
  425584:	adrp	x1, 42b000 <_fini+0x13a8>
  425588:	add	x1, x1, #0x8a1
  42558c:	ldur	x2, [x29, #-136]
  425590:	mov	w3, #0x167                 	// #359
  425594:	adrp	x4, 42f000 <_fini+0x53a8>
  425598:	add	x4, x4, #0x5a0
  42559c:	bl	405718 <log_assert_failed_realm@plt>
  4255a0:	ldur	x8, [x29, #-112]
  4255a4:	mov	x9, #0x1                   	// #1
  4255a8:	mul	x8, x9, x8
  4255ac:	mul	x8, x8, x9
  4255b0:	add	x8, x8, #0xf
  4255b4:	and	x8, x8, #0xfffffffffffffff0
  4255b8:	mov	x9, sp
  4255bc:	subs	x8, x9, x8
  4255c0:	mov	sp, x8
  4255c4:	stur	x8, [x29, #-120]
  4255c8:	ldur	x8, [x29, #-120]
  4255cc:	stur	x8, [x29, #-80]
  4255d0:	stur	x8, [x29, #-88]
  4255d4:	stur	xzr, [x29, #-104]
  4255d8:	ldur	x8, [x29, #-104]
  4255dc:	mov	w9, #0x0                   	// #0
  4255e0:	cmp	x8, #0x2
  4255e4:	stur	w9, [x29, #-144]
  4255e8:	b.cs	425610 <client_context_read_log_level_max+0x210>  // b.hs, b.nlast
  4255ec:	ldur	x8, [x29, #-104]
  4255f0:	mov	x9, #0x8                   	// #8
  4255f4:	mul	x8, x9, x8
  4255f8:	sub	x9, x29, #0x48
  4255fc:	add	x8, x9, x8
  425600:	ldr	x8, [x8]
  425604:	cmp	x8, #0x0
  425608:	cset	w10, ne  // ne = any
  42560c:	stur	w10, [x29, #-144]
  425610:	ldur	w8, [x29, #-144]
  425614:	tbnz	w8, #0, 42561c <client_context_read_log_level_max+0x21c>
  425618:	b	425650 <client_context_read_log_level_max+0x250>
  42561c:	ldur	x0, [x29, #-88]
  425620:	ldur	x8, [x29, #-104]
  425624:	mov	x9, #0x8                   	// #8
  425628:	mul	x8, x9, x8
  42562c:	sub	x9, x29, #0x48
  425630:	add	x8, x9, x8
  425634:	ldr	x1, [x8]
  425638:	bl	405ad8 <stpcpy@plt>
  42563c:	stur	x0, [x29, #-88]
  425640:	ldur	x8, [x29, #-104]
  425644:	add	x8, x8, #0x1
  425648:	stur	x8, [x29, #-104]
  42564c:	b	4255d8 <client_context_read_log_level_max+0x1d8>
  425650:	ldur	x8, [x29, #-88]
  425654:	mov	w9, #0x0                   	// #0
  425658:	strb	w9, [x8]
  42565c:	ldur	x8, [x29, #-80]
  425660:	stur	x8, [x29, #-128]
  425664:	ldur	x8, [x29, #-128]
  425668:	stur	x8, [x29, #-40]
  42566c:	ldur	x0, [x29, #-40]
  425670:	sub	x1, x29, #0x20
  425674:	bl	406608 <readlink_malloc@plt>
  425678:	stur	w0, [x29, #-44]
  42567c:	ldur	w9, [x29, #-44]
  425680:	cmp	w9, #0x0
  425684:	cset	w9, ge  // ge = tcont
  425688:	tbnz	w9, #0, 4256a0 <client_context_read_log_level_max+0x2a0>
  42568c:	ldur	w8, [x29, #-44]
  425690:	stur	w8, [x29, #-4]
  425694:	mov	w8, #0x1                   	// #1
  425698:	stur	w8, [x29, #-52]
  42569c:	b	4256e8 <client_context_read_log_level_max+0x2e8>
  4256a0:	ldur	x0, [x29, #-32]
  4256a4:	bl	405de8 <log_level_from_string@plt>
  4256a8:	stur	w0, [x29, #-48]
  4256ac:	ldur	w8, [x29, #-48]
  4256b0:	cmp	w8, #0x0
  4256b4:	cset	w8, ge  // ge = tcont
  4256b8:	tbnz	w8, #0, 4256d0 <client_context_read_log_level_max+0x2d0>
  4256bc:	mov	w8, #0xffffffea            	// #-22
  4256c0:	stur	w8, [x29, #-4]
  4256c4:	mov	w8, #0x1                   	// #1
  4256c8:	stur	w8, [x29, #-52]
  4256cc:	b	4256e8 <client_context_read_log_level_max+0x2e8>
  4256d0:	ldur	w8, [x29, #-48]
  4256d4:	ldur	x9, [x29, #-24]
  4256d8:	str	w8, [x9, #160]
  4256dc:	stur	wzr, [x29, #-4]
  4256e0:	mov	w8, #0x1                   	// #1
  4256e4:	stur	w8, [x29, #-52]
  4256e8:	sub	x0, x29, #0x20
  4256ec:	bl	426434 <freep>
  4256f0:	ldur	w0, [x29, #-4]
  4256f4:	mov	sp, x29
  4256f8:	ldp	x29, x30, [sp], #16
  4256fc:	ret

0000000000425700 <client_context_read_extra_fields>:
  425700:	stp	x29, x30, [sp, #-32]!
  425704:	stp	x28, x19, [sp, #16]
  425708:	mov	x29, sp
  42570c:	sub	sp, sp, #0x190
  425710:	mov	x19, sp
  425714:	mov	x8, xzr
  425718:	adrp	x9, 42f000 <_fini+0x53a8>
  42571c:	add	x9, x9, #0xcb
  425720:	add	x9, x9, #0x3
  425724:	stur	x0, [x29, #-16]
  425728:	stur	x1, [x29, #-24]
  42572c:	stur	xzr, [x29, #-32]
  425730:	stur	xzr, [x29, #-40]
  425734:	stur	xzr, [x29, #-48]
  425738:	stur	x8, [x29, #-64]
  42573c:	stur	x8, [x29, #-72]
  425740:	stur	x8, [x29, #-80]
  425744:	ldur	x8, [x29, #-24]
  425748:	ldr	x8, [x8, #96]
  42574c:	str	x9, [x19, #8]
  425750:	cbnz	x8, 425764 <client_context_read_extra_fields+0x64>
  425754:	stur	wzr, [x29, #-4]
  425758:	mov	w8, #0x1                   	// #1
  42575c:	str	w8, [x19, #168]
  425760:	b	425d00 <client_context_read_extra_fields+0x600>
  425764:	add	x8, x19, #0x98
  425768:	adrp	x9, 42f000 <_fini+0x53a8>
  42576c:	add	x9, x9, #0x5e1
  425770:	str	x9, [x19, #152]
  425774:	ldur	x9, [x29, #-24]
  425778:	ldr	x9, [x9, #96]
  42577c:	str	x9, [x8, #8]
  425780:	str	xzr, [x19, #128]
  425784:	str	xzr, [x19, #120]
  425788:	ldr	x8, [x19, #120]
  42578c:	mov	w9, #0x0                   	// #0
  425790:	cmp	x8, #0x2
  425794:	str	w9, [x19, #4]
  425798:	b.cs	4257c0 <client_context_read_extra_fields+0xc0>  // b.hs, b.nlast
  42579c:	ldr	x8, [x19, #120]
  4257a0:	mov	x9, #0x8                   	// #8
  4257a4:	mul	x8, x9, x8
  4257a8:	add	x9, x19, #0x98
  4257ac:	add	x8, x9, x8
  4257b0:	ldr	x8, [x8]
  4257b4:	cmp	x8, #0x0
  4257b8:	cset	w10, ne  // ne = any
  4257bc:	str	w10, [x19, #4]
  4257c0:	ldr	w8, [x19, #4]
  4257c4:	tbnz	w8, #0, 4257cc <client_context_read_extra_fields+0xcc>
  4257c8:	b	425804 <client_context_read_extra_fields+0x104>
  4257cc:	ldr	x8, [x19, #120]
  4257d0:	mov	x9, #0x8                   	// #8
  4257d4:	mul	x8, x9, x8
  4257d8:	add	x9, x19, #0x98
  4257dc:	add	x8, x9, x8
  4257e0:	ldr	x0, [x8]
  4257e4:	bl	405738 <strlen@plt>
  4257e8:	ldr	x8, [x19, #128]
  4257ec:	add	x8, x8, x0
  4257f0:	str	x8, [x19, #128]
  4257f4:	ldr	x8, [x19, #120]
  4257f8:	add	x8, x8, #0x1
  4257fc:	str	x8, [x19, #120]
  425800:	b	425788 <client_context_read_extra_fields+0x88>
  425804:	ldr	x8, [x19, #128]
  425808:	add	x8, x8, #0x1
  42580c:	str	x8, [x19, #112]
  425810:	ldr	x1, [x19, #112]
  425814:	mov	x0, #0x1                   	// #1
  425818:	bl	4263cc <size_multiply_overflow>
  42581c:	mov	w8, #0x1                   	// #1
  425820:	eor	w9, w0, #0x1
  425824:	eor	w9, w9, w8
  425828:	eor	w9, w9, w8
  42582c:	eor	w8, w9, w8
  425830:	and	w8, w8, #0x1
  425834:	mov	w1, w8
  425838:	sxtw	x10, w1
  42583c:	cbz	x10, 425864 <client_context_read_extra_fields+0x164>
  425840:	mov	w8, wzr
  425844:	mov	w0, w8
  425848:	adrp	x1, 42b000 <_fini+0x13a8>
  42584c:	add	x1, x1, #0x876
  425850:	ldr	x2, [x19, #8]
  425854:	mov	w3, #0x184                 	// #388
  425858:	adrp	x4, 42f000 <_fini+0x53a8>
  42585c:	add	x4, x4, #0x606
  425860:	bl	405718 <log_assert_failed_realm@plt>
  425864:	ldr	x8, [x19, #112]
  425868:	mov	x9, #0x1                   	// #1
  42586c:	mul	x8, x9, x8
  425870:	cmp	x8, #0x400, lsl #12
  425874:	cset	w10, ls  // ls = plast
  425878:	mov	w11, #0x1                   	// #1
  42587c:	eor	w10, w10, #0x1
  425880:	eor	w10, w10, w11
  425884:	eor	w10, w10, w11
  425888:	and	w10, w10, #0x1
  42588c:	mov	w0, w10
  425890:	sxtw	x8, w0
  425894:	cbz	x8, 4258bc <client_context_read_extra_fields+0x1bc>
  425898:	mov	w8, wzr
  42589c:	mov	w0, w8
  4258a0:	adrp	x1, 42b000 <_fini+0x13a8>
  4258a4:	add	x1, x1, #0x8a1
  4258a8:	ldr	x2, [x19, #8]
  4258ac:	mov	w3, #0x184                 	// #388
  4258b0:	adrp	x4, 42f000 <_fini+0x53a8>
  4258b4:	add	x4, x4, #0x606
  4258b8:	bl	405718 <log_assert_failed_realm@plt>
  4258bc:	ldr	x8, [x19, #112]
  4258c0:	mov	x9, #0x1                   	// #1
  4258c4:	mul	x8, x9, x8
  4258c8:	mul	x8, x8, x9
  4258cc:	add	x8, x8, #0xf
  4258d0:	and	x8, x8, #0xfffffffffffffff0
  4258d4:	mov	x9, sp
  4258d8:	subs	x8, x9, x8
  4258dc:	mov	sp, x8
  4258e0:	str	x8, [x19, #104]
  4258e4:	ldr	x8, [x19, #104]
  4258e8:	str	x8, [x19, #144]
  4258ec:	str	x8, [x19, #136]
  4258f0:	str	xzr, [x19, #120]
  4258f4:	ldr	x8, [x19, #120]
  4258f8:	mov	w9, #0x0                   	// #0
  4258fc:	cmp	x8, #0x2
  425900:	str	w9, [x19]
  425904:	b.cs	42592c <client_context_read_extra_fields+0x22c>  // b.hs, b.nlast
  425908:	ldr	x8, [x19, #120]
  42590c:	mov	x9, #0x8                   	// #8
  425910:	mul	x8, x9, x8
  425914:	add	x9, x19, #0x98
  425918:	add	x8, x9, x8
  42591c:	ldr	x8, [x8]
  425920:	cmp	x8, #0x0
  425924:	cset	w10, ne  // ne = any
  425928:	str	w10, [x19]
  42592c:	ldr	w8, [x19]
  425930:	tbnz	w8, #0, 425938 <client_context_read_extra_fields+0x238>
  425934:	b	42596c <client_context_read_extra_fields+0x26c>
  425938:	ldr	x0, [x19, #136]
  42593c:	ldr	x8, [x19, #120]
  425940:	mov	x9, #0x8                   	// #8
  425944:	mul	x8, x9, x8
  425948:	add	x9, x19, #0x98
  42594c:	add	x8, x9, x8
  425950:	ldr	x1, [x8]
  425954:	bl	405ad8 <stpcpy@plt>
  425958:	str	x0, [x19, #136]
  42595c:	ldr	x8, [x19, #120]
  425960:	add	x8, x8, #0x1
  425964:	str	x8, [x19, #120]
  425968:	b	4258f4 <client_context_read_extra_fields+0x1f4>
  42596c:	ldr	x8, [x19, #136]
  425970:	mov	w9, #0x0                   	// #0
  425974:	strb	w9, [x8]
  425978:	ldr	x8, [x19, #144]
  42597c:	str	x8, [x19, #96]
  425980:	ldr	x8, [x19, #96]
  425984:	str	x8, [x19, #184]
  425988:	ldur	x8, [x29, #-24]
  42598c:	ldr	x8, [x8, #192]
  425990:	mov	x10, #0xffffffffffffffff    	// #-1
  425994:	cmp	x8, x10
  425998:	b.eq	425a20 <client_context_read_extra_fields+0x320>  // b.none
  42599c:	ldr	x0, [x19, #184]
  4259a0:	add	x1, x19, #0xc0
  4259a4:	bl	429c18 <stat64>
  4259a8:	cmp	w0, #0x0
  4259ac:	cset	w8, ge  // ge = tcont
  4259b0:	tbnz	w8, #0, 4259f4 <client_context_read_extra_fields+0x2f4>
  4259b4:	bl	405768 <__errno_location@plt>
  4259b8:	ldr	w8, [x0]
  4259bc:	cmp	w8, #0x2
  4259c0:	b.ne	4259d4 <client_context_read_extra_fields+0x2d4>  // b.any
  4259c4:	stur	wzr, [x29, #-4]
  4259c8:	mov	w8, #0x1                   	// #1
  4259cc:	str	w8, [x19, #168]
  4259d0:	b	425d00 <client_context_read_extra_fields+0x600>
  4259d4:	bl	405768 <__errno_location@plt>
  4259d8:	ldr	w8, [x0]
  4259dc:	mov	w9, wzr
  4259e0:	subs	w8, w9, w8
  4259e4:	stur	w8, [x29, #-4]
  4259e8:	mov	w8, #0x1                   	// #1
  4259ec:	str	w8, [x19, #168]
  4259f0:	b	425d00 <client_context_read_extra_fields+0x600>
  4259f4:	add	x8, x19, #0xc0
  4259f8:	add	x0, x8, #0x58
  4259fc:	bl	406618 <timespec_load_nsec@plt>
  425a00:	ldur	x8, [x29, #-24]
  425a04:	ldr	x8, [x8, #192]
  425a08:	cmp	x0, x8
  425a0c:	b.ne	425a20 <client_context_read_extra_fields+0x320>  // b.any
  425a10:	stur	wzr, [x29, #-4]
  425a14:	mov	w8, #0x1                   	// #1
  425a18:	str	w8, [x19, #168]
  425a1c:	b	425d00 <client_context_read_extra_fields+0x600>
  425a20:	ldr	x0, [x19, #184]
  425a24:	adrp	x1, 42f000 <_fini+0x53a8>
  425a28:	add	x1, x1, #0x646
  425a2c:	bl	406628 <fopen64@plt>
  425a30:	stur	x0, [x29, #-80]
  425a34:	ldur	x8, [x29, #-80]
  425a38:	cbnz	x8, 425a7c <client_context_read_extra_fields+0x37c>
  425a3c:	bl	405768 <__errno_location@plt>
  425a40:	ldr	w8, [x0]
  425a44:	cmp	w8, #0x2
  425a48:	b.ne	425a5c <client_context_read_extra_fields+0x35c>  // b.any
  425a4c:	stur	wzr, [x29, #-4]
  425a50:	mov	w8, #0x1                   	// #1
  425a54:	str	w8, [x19, #168]
  425a58:	b	425d00 <client_context_read_extra_fields+0x600>
  425a5c:	bl	405768 <__errno_location@plt>
  425a60:	ldr	w8, [x0]
  425a64:	mov	w9, wzr
  425a68:	subs	w8, w9, w8
  425a6c:	stur	w8, [x29, #-4]
  425a70:	mov	w8, #0x1                   	// #1
  425a74:	str	w8, [x19, #168]
  425a78:	b	425d00 <client_context_read_extra_fields+0x600>
  425a7c:	ldur	x0, [x29, #-80]
  425a80:	bl	406638 <fileno@plt>
  425a84:	add	x1, x19, #0xc0
  425a88:	bl	429c28 <fstat64>
  425a8c:	cmp	w0, #0x0
  425a90:	cset	w8, ge  // ge = tcont
  425a94:	tbnz	w8, #0, 425ab8 <client_context_read_extra_fields+0x3b8>
  425a98:	bl	405768 <__errno_location@plt>
  425a9c:	ldr	w8, [x0]
  425aa0:	mov	w9, wzr
  425aa4:	subs	w8, w9, w8
  425aa8:	stur	w8, [x29, #-4]
  425aac:	mov	w8, #0x1                   	// #1
  425ab0:	str	w8, [x19, #168]
  425ab4:	b	425d00 <client_context_read_extra_fields+0x600>
  425ab8:	ldur	x0, [x29, #-80]
  425abc:	sub	x1, x29, #0x48
  425ac0:	sub	x2, x29, #0x20
  425ac4:	bl	4264bc <read_full_stream>
  425ac8:	str	w0, [x19, #172]
  425acc:	ldr	w8, [x19, #172]
  425ad0:	cmp	w8, #0x0
  425ad4:	cset	w8, ge  // ge = tcont
  425ad8:	tbnz	w8, #0, 425af0 <client_context_read_extra_fields+0x3f0>
  425adc:	ldr	w8, [x19, #172]
  425ae0:	stur	w8, [x29, #-4]
  425ae4:	mov	w8, #0x1                   	// #1
  425ae8:	str	w8, [x19, #168]
  425aec:	b	425d00 <client_context_read_extra_fields+0x600>
  425af0:	ldur	x8, [x29, #-72]
  425af4:	str	x8, [x19, #176]
  425af8:	ldur	x8, [x29, #-32]
  425afc:	stur	x8, [x29, #-56]
  425b00:	ldur	x8, [x29, #-56]
  425b04:	cmp	x8, #0x0
  425b08:	cset	w9, ls  // ls = plast
  425b0c:	tbnz	w9, #0, 425c78 <client_context_read_extra_fields+0x578>
  425b10:	ldur	x8, [x29, #-56]
  425b14:	cmp	x8, #0x8
  425b18:	b.cs	425b30 <client_context_read_extra_fields+0x430>  // b.hs, b.nlast
  425b1c:	mov	w8, #0xffffffb6            	// #-74
  425b20:	stur	w8, [x29, #-4]
  425b24:	mov	w8, #0x1                   	// #1
  425b28:	str	w8, [x19, #168]
  425b2c:	b	425d00 <client_context_read_extra_fields+0x600>
  425b30:	ldr	x0, [x19, #176]
  425b34:	bl	426500 <unaligned_read_le64>
  425b38:	str	x0, [x19, #72]
  425b3c:	ldr	x8, [x19, #72]
  425b40:	cmp	x8, #0x2
  425b44:	b.cs	425b5c <client_context_read_extra_fields+0x45c>  // b.hs, b.nlast
  425b48:	mov	w8, #0xffffffb6            	// #-74
  425b4c:	stur	w8, [x29, #-4]
  425b50:	mov	w8, #0x1                   	// #1
  425b54:	str	w8, [x19, #168]
  425b58:	b	425d00 <client_context_read_extra_fields+0x600>
  425b5c:	ldr	x8, [x19, #72]
  425b60:	add	x8, x8, #0x8
  425b64:	str	x8, [x19, #64]
  425b68:	ldur	x8, [x29, #-56]
  425b6c:	ldr	x9, [x19, #64]
  425b70:	cmp	x8, x9
  425b74:	b.cs	425b8c <client_context_read_extra_fields+0x48c>  // b.hs, b.nlast
  425b78:	mov	w8, #0xffffffb6            	// #-74
  425b7c:	stur	w8, [x29, #-4]
  425b80:	mov	w8, #0x1                   	// #1
  425b84:	str	w8, [x19, #168]
  425b88:	b	425d00 <client_context_read_extra_fields+0x600>
  425b8c:	ldr	x8, [x19, #176]
  425b90:	add	x8, x8, #0x8
  425b94:	str	x8, [x19, #88]
  425b98:	ldr	x0, [x19, #88]
  425b9c:	ldr	x2, [x19, #72]
  425ba0:	mov	w1, #0x3d                  	// #61
  425ba4:	bl	405788 <memchr@plt>
  425ba8:	str	x0, [x19, #80]
  425bac:	ldr	x8, [x19, #80]
  425bb0:	cbnz	x8, 425bc8 <client_context_read_extra_fields+0x4c8>
  425bb4:	mov	w8, #0xffffffb6            	// #-74
  425bb8:	stur	w8, [x29, #-4]
  425bbc:	mov	w8, #0x1                   	// #1
  425bc0:	str	w8, [x19, #168]
  425bc4:	b	425d00 <client_context_read_extra_fields+0x600>
  425bc8:	ldr	x0, [x19, #88]
  425bcc:	ldr	x8, [x19, #80]
  425bd0:	ldr	x9, [x19, #88]
  425bd4:	subs	x1, x8, x9
  425bd8:	mov	w10, wzr
  425bdc:	and	w2, w10, #0x1
  425be0:	bl	406648 <journal_field_valid@plt>
  425be4:	tbnz	w0, #0, 425bfc <client_context_read_extra_fields+0x4fc>
  425be8:	mov	w8, #0xffffffb6            	// #-74
  425bec:	stur	w8, [x29, #-4]
  425bf0:	mov	w8, #0x1                   	// #1
  425bf4:	str	w8, [x19, #168]
  425bf8:	b	425d00 <client_context_read_extra_fields+0x600>
  425bfc:	ldur	x8, [x29, #-40]
  425c00:	add	x2, x8, #0x1
  425c04:	sub	x0, x29, #0x40
  425c08:	sub	x1, x29, #0x30
  425c0c:	mov	x3, #0x10                  	// #16
  425c10:	bl	405c58 <greedy_realloc@plt>
  425c14:	cbnz	x0, 425c2c <client_context_read_extra_fields+0x52c>
  425c18:	mov	w8, #0xfffffff4            	// #-12
  425c1c:	stur	w8, [x29, #-4]
  425c20:	mov	w8, #0x1                   	// #1
  425c24:	str	w8, [x19, #168]
  425c28:	b	425d00 <client_context_read_extra_fields+0x600>
  425c2c:	ldur	x8, [x29, #-64]
  425c30:	ldur	x9, [x29, #-40]
  425c34:	add	x10, x9, #0x1
  425c38:	stur	x10, [x29, #-40]
  425c3c:	ldr	x10, [x19, #88]
  425c40:	str	x10, [x19, #48]
  425c44:	ldr	x10, [x19, #72]
  425c48:	str	x10, [x19, #56]
  425c4c:	ldr	q0, [x19, #48]
  425c50:	str	q0, [x8, x9, lsl #4]
  425c54:	ldr	x8, [x19, #64]
  425c58:	ldur	x9, [x29, #-56]
  425c5c:	subs	x8, x9, x8
  425c60:	stur	x8, [x29, #-56]
  425c64:	ldr	x8, [x19, #64]
  425c68:	ldr	x9, [x19, #176]
  425c6c:	add	x8, x9, x8
  425c70:	str	x8, [x19, #176]
  425c74:	b	425b00 <client_context_read_extra_fields+0x400>
  425c78:	ldur	x8, [x29, #-24]
  425c7c:	ldr	x0, [x8, #168]
  425c80:	bl	405778 <free@plt>
  425c84:	ldur	x8, [x29, #-24]
  425c88:	ldr	x0, [x8, #184]
  425c8c:	bl	405778 <free@plt>
  425c90:	ldur	x8, [x29, #-64]
  425c94:	str	x8, [x19, #40]
  425c98:	mov	x8, xzr
  425c9c:	stur	x8, [x29, #-64]
  425ca0:	ldr	x9, [x19, #40]
  425ca4:	str	x9, [x19, #32]
  425ca8:	ldr	x9, [x19, #32]
  425cac:	ldur	x10, [x29, #-24]
  425cb0:	str	x9, [x10, #168]
  425cb4:	ldur	x9, [x29, #-40]
  425cb8:	ldur	x10, [x29, #-24]
  425cbc:	str	x9, [x10, #176]
  425cc0:	ldur	x9, [x29, #-72]
  425cc4:	str	x9, [x19, #24]
  425cc8:	stur	x8, [x29, #-72]
  425ccc:	ldr	x8, [x19, #24]
  425cd0:	str	x8, [x19, #16]
  425cd4:	ldr	x8, [x19, #16]
  425cd8:	ldur	x9, [x29, #-24]
  425cdc:	str	x8, [x9, #184]
  425ce0:	add	x8, x19, #0xc0
  425ce4:	add	x0, x8, #0x58
  425ce8:	bl	406618 <timespec_load_nsec@plt>
  425cec:	ldur	x8, [x29, #-24]
  425cf0:	str	x0, [x8, #192]
  425cf4:	stur	wzr, [x29, #-4]
  425cf8:	mov	w11, #0x1                   	// #1
  425cfc:	str	w11, [x19, #168]
  425d00:	sub	x0, x29, #0x50
  425d04:	bl	426494 <fclosep>
  425d08:	sub	x0, x29, #0x48
  425d0c:	bl	426434 <freep>
  425d10:	sub	x0, x29, #0x40
  425d14:	bl	426434 <freep>
  425d18:	ldur	w0, [x29, #-4]
  425d1c:	mov	sp, x29
  425d20:	ldp	x28, x19, [sp, #16]
  425d24:	ldp	x29, x30, [sp], #32
  425d28:	ret

0000000000425d2c <client_context_read_log_ratelimit_interval>:
  425d2c:	stp	x29, x30, [sp, #-16]!
  425d30:	mov	x29, sp
  425d34:	sub	sp, sp, #0x90
  425d38:	mov	x8, xzr
  425d3c:	adrp	x9, 42f000 <_fini+0x53a8>
  425d40:	add	x9, x9, #0xcb
  425d44:	add	x9, x9, #0x3
  425d48:	adrp	x10, 42f000 <_fini+0x53a8>
  425d4c:	add	x10, x10, #0x649
  425d50:	stur	x0, [x29, #-16]
  425d54:	stur	x8, [x29, #-24]
  425d58:	stur	x9, [x29, #-120]
  425d5c:	stur	x10, [x29, #-128]
  425d60:	ldur	x8, [x29, #-16]
  425d64:	cmp	x8, #0x0
  425d68:	cset	w9, ne  // ne = any
  425d6c:	mov	w10, #0x1                   	// #1
  425d70:	eor	w9, w9, #0x1
  425d74:	eor	w9, w9, w10
  425d78:	eor	w9, w9, w10
  425d7c:	and	w9, w9, #0x1
  425d80:	mov	w0, w9
  425d84:	sxtw	x8, w0
  425d88:	cbz	x8, 425dac <client_context_read_log_ratelimit_interval+0x80>
  425d8c:	mov	w8, wzr
  425d90:	mov	w0, w8
  425d94:	adrp	x1, 42f000 <_fini+0x53a8>
  425d98:	add	x1, x1, #0x16c
  425d9c:	ldur	x2, [x29, #-120]
  425da0:	mov	w3, #0x1d3                 	// #467
  425da4:	ldur	x4, [x29, #-128]
  425da8:	bl	405718 <log_assert_failed_realm@plt>
  425dac:	ldur	x8, [x29, #-16]
  425db0:	ldr	x8, [x8, #96]
  425db4:	cbnz	x8, 425dc8 <client_context_read_log_ratelimit_interval+0x9c>
  425db8:	stur	wzr, [x29, #-4]
  425dbc:	mov	w8, #0x1                   	// #1
  425dc0:	stur	w8, [x29, #-40]
  425dc4:	b	426034 <client_context_read_log_ratelimit_interval+0x308>
  425dc8:	sub	x8, x29, #0x38
  425dcc:	adrp	x9, 42f000 <_fini+0x53a8>
  425dd0:	add	x9, x9, #0x689
  425dd4:	stur	x9, [x29, #-56]
  425dd8:	ldur	x9, [x29, #-16]
  425ddc:	ldr	x9, [x9, #96]
  425de0:	str	x9, [x8, #8]
  425de4:	stur	xzr, [x29, #-80]
  425de8:	stur	xzr, [x29, #-88]
  425dec:	ldur	x8, [x29, #-88]
  425df0:	mov	w9, #0x0                   	// #0
  425df4:	cmp	x8, #0x2
  425df8:	stur	w9, [x29, #-132]
  425dfc:	b.cs	425e24 <client_context_read_log_ratelimit_interval+0xf8>  // b.hs, b.nlast
  425e00:	ldur	x8, [x29, #-88]
  425e04:	mov	x9, #0x8                   	// #8
  425e08:	mul	x8, x9, x8
  425e0c:	sub	x9, x29, #0x38
  425e10:	add	x8, x9, x8
  425e14:	ldr	x8, [x8]
  425e18:	cmp	x8, #0x0
  425e1c:	cset	w10, ne  // ne = any
  425e20:	stur	w10, [x29, #-132]
  425e24:	ldur	w8, [x29, #-132]
  425e28:	tbnz	w8, #0, 425e30 <client_context_read_log_ratelimit_interval+0x104>
  425e2c:	b	425e68 <client_context_read_log_ratelimit_interval+0x13c>
  425e30:	ldur	x8, [x29, #-88]
  425e34:	mov	x9, #0x8                   	// #8
  425e38:	mul	x8, x9, x8
  425e3c:	sub	x9, x29, #0x38
  425e40:	add	x8, x9, x8
  425e44:	ldr	x0, [x8]
  425e48:	bl	405738 <strlen@plt>
  425e4c:	ldur	x8, [x29, #-80]
  425e50:	add	x8, x8, x0
  425e54:	stur	x8, [x29, #-80]
  425e58:	ldur	x8, [x29, #-88]
  425e5c:	add	x8, x8, #0x1
  425e60:	stur	x8, [x29, #-88]
  425e64:	b	425dec <client_context_read_log_ratelimit_interval+0xc0>
  425e68:	ldur	x8, [x29, #-80]
  425e6c:	add	x8, x8, #0x1
  425e70:	stur	x8, [x29, #-96]
  425e74:	ldur	x1, [x29, #-96]
  425e78:	mov	x0, #0x1                   	// #1
  425e7c:	bl	4263cc <size_multiply_overflow>
  425e80:	mov	w8, #0x1                   	// #1
  425e84:	eor	w9, w0, #0x1
  425e88:	eor	w9, w9, w8
  425e8c:	eor	w9, w9, w8
  425e90:	eor	w8, w9, w8
  425e94:	and	w8, w8, #0x1
  425e98:	mov	w1, w8
  425e9c:	sxtw	x10, w1
  425ea0:	cbz	x10, 425ec4 <client_context_read_log_ratelimit_interval+0x198>
  425ea4:	mov	w8, wzr
  425ea8:	mov	w0, w8
  425eac:	adrp	x1, 42b000 <_fini+0x13a8>
  425eb0:	add	x1, x1, #0x876
  425eb4:	ldur	x2, [x29, #-120]
  425eb8:	mov	w3, #0x1d8                 	// #472
  425ebc:	ldur	x4, [x29, #-128]
  425ec0:	bl	405718 <log_assert_failed_realm@plt>
  425ec4:	ldur	x8, [x29, #-96]
  425ec8:	mov	x9, #0x1                   	// #1
  425ecc:	mul	x8, x9, x8
  425ed0:	cmp	x8, #0x400, lsl #12
  425ed4:	cset	w10, ls  // ls = plast
  425ed8:	mov	w11, #0x1                   	// #1
  425edc:	eor	w10, w10, #0x1
  425ee0:	eor	w10, w10, w11
  425ee4:	eor	w10, w10, w11
  425ee8:	and	w10, w10, #0x1
  425eec:	mov	w0, w10
  425ef0:	sxtw	x8, w0
  425ef4:	cbz	x8, 425f18 <client_context_read_log_ratelimit_interval+0x1ec>
  425ef8:	mov	w8, wzr
  425efc:	mov	w0, w8
  425f00:	adrp	x1, 42b000 <_fini+0x13a8>
  425f04:	add	x1, x1, #0x8a1
  425f08:	ldur	x2, [x29, #-120]
  425f0c:	mov	w3, #0x1d8                 	// #472
  425f10:	ldur	x4, [x29, #-128]
  425f14:	bl	405718 <log_assert_failed_realm@plt>
  425f18:	ldur	x8, [x29, #-96]
  425f1c:	mov	x9, #0x1                   	// #1
  425f20:	mul	x8, x9, x8
  425f24:	mul	x8, x8, x9
  425f28:	add	x8, x8, #0xf
  425f2c:	and	x8, x8, #0xfffffffffffffff0
  425f30:	mov	x9, sp
  425f34:	subs	x8, x9, x8
  425f38:	mov	sp, x8
  425f3c:	stur	x8, [x29, #-104]
  425f40:	ldur	x8, [x29, #-104]
  425f44:	stur	x8, [x29, #-64]
  425f48:	stur	x8, [x29, #-72]
  425f4c:	stur	xzr, [x29, #-88]
  425f50:	ldur	x8, [x29, #-88]
  425f54:	mov	w9, #0x0                   	// #0
  425f58:	cmp	x8, #0x2
  425f5c:	stur	w9, [x29, #-136]
  425f60:	b.cs	425f88 <client_context_read_log_ratelimit_interval+0x25c>  // b.hs, b.nlast
  425f64:	ldur	x8, [x29, #-88]
  425f68:	mov	x9, #0x8                   	// #8
  425f6c:	mul	x8, x9, x8
  425f70:	sub	x9, x29, #0x38
  425f74:	add	x8, x9, x8
  425f78:	ldr	x8, [x8]
  425f7c:	cmp	x8, #0x0
  425f80:	cset	w10, ne  // ne = any
  425f84:	stur	w10, [x29, #-136]
  425f88:	ldur	w8, [x29, #-136]
  425f8c:	tbnz	w8, #0, 425f94 <client_context_read_log_ratelimit_interval+0x268>
  425f90:	b	425fc8 <client_context_read_log_ratelimit_interval+0x29c>
  425f94:	ldur	x0, [x29, #-72]
  425f98:	ldur	x8, [x29, #-88]
  425f9c:	mov	x9, #0x8                   	// #8
  425fa0:	mul	x8, x9, x8
  425fa4:	sub	x9, x29, #0x38
  425fa8:	add	x8, x9, x8
  425fac:	ldr	x1, [x8]
  425fb0:	bl	405ad8 <stpcpy@plt>
  425fb4:	stur	x0, [x29, #-72]
  425fb8:	ldur	x8, [x29, #-88]
  425fbc:	add	x8, x8, #0x1
  425fc0:	stur	x8, [x29, #-88]
  425fc4:	b	425f50 <client_context_read_log_ratelimit_interval+0x224>
  425fc8:	ldur	x8, [x29, #-72]
  425fcc:	mov	w9, #0x0                   	// #0
  425fd0:	strb	w9, [x8]
  425fd4:	ldur	x8, [x29, #-64]
  425fd8:	stur	x8, [x29, #-112]
  425fdc:	ldur	x8, [x29, #-112]
  425fe0:	stur	x8, [x29, #-32]
  425fe4:	ldur	x0, [x29, #-32]
  425fe8:	sub	x1, x29, #0x18
  425fec:	bl	406608 <readlink_malloc@plt>
  425ff0:	stur	w0, [x29, #-36]
  425ff4:	ldur	w9, [x29, #-36]
  425ff8:	cmp	w9, #0x0
  425ffc:	cset	w9, ge  // ge = tcont
  426000:	tbnz	w9, #0, 426018 <client_context_read_log_ratelimit_interval+0x2ec>
  426004:	ldur	w8, [x29, #-36]
  426008:	stur	w8, [x29, #-4]
  42600c:	mov	w8, #0x1                   	// #1
  426010:	stur	w8, [x29, #-40]
  426014:	b	426034 <client_context_read_log_ratelimit_interval+0x308>
  426018:	ldur	x0, [x29, #-24]
  42601c:	ldur	x8, [x29, #-16]
  426020:	add	x1, x8, #0xc8
  426024:	bl	426544 <safe_atou64>
  426028:	stur	w0, [x29, #-4]
  42602c:	mov	w9, #0x1                   	// #1
  426030:	stur	w9, [x29, #-40]
  426034:	sub	x0, x29, #0x18
  426038:	bl	426434 <freep>
  42603c:	ldur	w0, [x29, #-4]
  426040:	mov	sp, x29
  426044:	ldp	x29, x30, [sp], #16
  426048:	ret

000000000042604c <client_context_read_log_ratelimit_burst>:
  42604c:	stp	x29, x30, [sp, #-16]!
  426050:	mov	x29, sp
  426054:	sub	sp, sp, #0x90
  426058:	mov	x8, xzr
  42605c:	adrp	x9, 42f000 <_fini+0x53a8>
  426060:	add	x9, x9, #0xcb
  426064:	add	x9, x9, #0x3
  426068:	adrp	x10, 42f000 <_fini+0x53a8>
  42606c:	add	x10, x10, #0x6b5
  426070:	stur	x0, [x29, #-16]
  426074:	stur	x8, [x29, #-24]
  426078:	stur	x9, [x29, #-120]
  42607c:	stur	x10, [x29, #-128]
  426080:	ldur	x8, [x29, #-16]
  426084:	cmp	x8, #0x0
  426088:	cset	w9, ne  // ne = any
  42608c:	mov	w10, #0x1                   	// #1
  426090:	eor	w9, w9, #0x1
  426094:	eor	w9, w9, w10
  426098:	eor	w9, w9, w10
  42609c:	and	w9, w9, #0x1
  4260a0:	mov	w0, w9
  4260a4:	sxtw	x8, w0
  4260a8:	cbz	x8, 4260cc <client_context_read_log_ratelimit_burst+0x80>
  4260ac:	mov	w8, wzr
  4260b0:	mov	w0, w8
  4260b4:	adrp	x1, 42f000 <_fini+0x53a8>
  4260b8:	add	x1, x1, #0x16c
  4260bc:	ldur	x2, [x29, #-120]
  4260c0:	mov	w3, #0x1e5                 	// #485
  4260c4:	ldur	x4, [x29, #-128]
  4260c8:	bl	405718 <log_assert_failed_realm@plt>
  4260cc:	ldur	x8, [x29, #-16]
  4260d0:	ldr	x8, [x8, #96]
  4260d4:	cbnz	x8, 4260e8 <client_context_read_log_ratelimit_burst+0x9c>
  4260d8:	stur	wzr, [x29, #-4]
  4260dc:	mov	w8, #0x1                   	// #1
  4260e0:	stur	w8, [x29, #-40]
  4260e4:	b	426354 <client_context_read_log_ratelimit_burst+0x308>
  4260e8:	sub	x8, x29, #0x38
  4260ec:	adrp	x9, 42f000 <_fini+0x53a8>
  4260f0:	add	x9, x9, #0x6f2
  4260f4:	stur	x9, [x29, #-56]
  4260f8:	ldur	x9, [x29, #-16]
  4260fc:	ldr	x9, [x9, #96]
  426100:	str	x9, [x8, #8]
  426104:	stur	xzr, [x29, #-80]
  426108:	stur	xzr, [x29, #-88]
  42610c:	ldur	x8, [x29, #-88]
  426110:	mov	w9, #0x0                   	// #0
  426114:	cmp	x8, #0x2
  426118:	stur	w9, [x29, #-132]
  42611c:	b.cs	426144 <client_context_read_log_ratelimit_burst+0xf8>  // b.hs, b.nlast
  426120:	ldur	x8, [x29, #-88]
  426124:	mov	x9, #0x8                   	// #8
  426128:	mul	x8, x9, x8
  42612c:	sub	x9, x29, #0x38
  426130:	add	x8, x9, x8
  426134:	ldr	x8, [x8]
  426138:	cmp	x8, #0x0
  42613c:	cset	w10, ne  // ne = any
  426140:	stur	w10, [x29, #-132]
  426144:	ldur	w8, [x29, #-132]
  426148:	tbnz	w8, #0, 426150 <client_context_read_log_ratelimit_burst+0x104>
  42614c:	b	426188 <client_context_read_log_ratelimit_burst+0x13c>
  426150:	ldur	x8, [x29, #-88]
  426154:	mov	x9, #0x8                   	// #8
  426158:	mul	x8, x9, x8
  42615c:	sub	x9, x29, #0x38
  426160:	add	x8, x9, x8
  426164:	ldr	x0, [x8]
  426168:	bl	405738 <strlen@plt>
  42616c:	ldur	x8, [x29, #-80]
  426170:	add	x8, x8, x0
  426174:	stur	x8, [x29, #-80]
  426178:	ldur	x8, [x29, #-88]
  42617c:	add	x8, x8, #0x1
  426180:	stur	x8, [x29, #-88]
  426184:	b	42610c <client_context_read_log_ratelimit_burst+0xc0>
  426188:	ldur	x8, [x29, #-80]
  42618c:	add	x8, x8, #0x1
  426190:	stur	x8, [x29, #-96]
  426194:	ldur	x1, [x29, #-96]
  426198:	mov	x0, #0x1                   	// #1
  42619c:	bl	4263cc <size_multiply_overflow>
  4261a0:	mov	w8, #0x1                   	// #1
  4261a4:	eor	w9, w0, #0x1
  4261a8:	eor	w9, w9, w8
  4261ac:	eor	w9, w9, w8
  4261b0:	eor	w8, w9, w8
  4261b4:	and	w8, w8, #0x1
  4261b8:	mov	w1, w8
  4261bc:	sxtw	x10, w1
  4261c0:	cbz	x10, 4261e4 <client_context_read_log_ratelimit_burst+0x198>
  4261c4:	mov	w8, wzr
  4261c8:	mov	w0, w8
  4261cc:	adrp	x1, 42b000 <_fini+0x13a8>
  4261d0:	add	x1, x1, #0x876
  4261d4:	ldur	x2, [x29, #-120]
  4261d8:	mov	w3, #0x1ea                 	// #490
  4261dc:	ldur	x4, [x29, #-128]
  4261e0:	bl	405718 <log_assert_failed_realm@plt>
  4261e4:	ldur	x8, [x29, #-96]
  4261e8:	mov	x9, #0x1                   	// #1
  4261ec:	mul	x8, x9, x8
  4261f0:	cmp	x8, #0x400, lsl #12
  4261f4:	cset	w10, ls  // ls = plast
  4261f8:	mov	w11, #0x1                   	// #1
  4261fc:	eor	w10, w10, #0x1
  426200:	eor	w10, w10, w11
  426204:	eor	w10, w10, w11
  426208:	and	w10, w10, #0x1
  42620c:	mov	w0, w10
  426210:	sxtw	x8, w0
  426214:	cbz	x8, 426238 <client_context_read_log_ratelimit_burst+0x1ec>
  426218:	mov	w8, wzr
  42621c:	mov	w0, w8
  426220:	adrp	x1, 42b000 <_fini+0x13a8>
  426224:	add	x1, x1, #0x8a1
  426228:	ldur	x2, [x29, #-120]
  42622c:	mov	w3, #0x1ea                 	// #490
  426230:	ldur	x4, [x29, #-128]
  426234:	bl	405718 <log_assert_failed_realm@plt>
  426238:	ldur	x8, [x29, #-96]
  42623c:	mov	x9, #0x1                   	// #1
  426240:	mul	x8, x9, x8
  426244:	mul	x8, x8, x9
  426248:	add	x8, x8, #0xf
  42624c:	and	x8, x8, #0xfffffffffffffff0
  426250:	mov	x9, sp
  426254:	subs	x8, x9, x8
  426258:	mov	sp, x8
  42625c:	stur	x8, [x29, #-104]
  426260:	ldur	x8, [x29, #-104]
  426264:	stur	x8, [x29, #-64]
  426268:	stur	x8, [x29, #-72]
  42626c:	stur	xzr, [x29, #-88]
  426270:	ldur	x8, [x29, #-88]
  426274:	mov	w9, #0x0                   	// #0
  426278:	cmp	x8, #0x2
  42627c:	stur	w9, [x29, #-136]
  426280:	b.cs	4262a8 <client_context_read_log_ratelimit_burst+0x25c>  // b.hs, b.nlast
  426284:	ldur	x8, [x29, #-88]
  426288:	mov	x9, #0x8                   	// #8
  42628c:	mul	x8, x9, x8
  426290:	sub	x9, x29, #0x38
  426294:	add	x8, x9, x8
  426298:	ldr	x8, [x8]
  42629c:	cmp	x8, #0x0
  4262a0:	cset	w10, ne  // ne = any
  4262a4:	stur	w10, [x29, #-136]
  4262a8:	ldur	w8, [x29, #-136]
  4262ac:	tbnz	w8, #0, 4262b4 <client_context_read_log_ratelimit_burst+0x268>
  4262b0:	b	4262e8 <client_context_read_log_ratelimit_burst+0x29c>
  4262b4:	ldur	x0, [x29, #-72]
  4262b8:	ldur	x8, [x29, #-88]
  4262bc:	mov	x9, #0x8                   	// #8
  4262c0:	mul	x8, x9, x8
  4262c4:	sub	x9, x29, #0x38
  4262c8:	add	x8, x9, x8
  4262cc:	ldr	x1, [x8]
  4262d0:	bl	405ad8 <stpcpy@plt>
  4262d4:	stur	x0, [x29, #-72]
  4262d8:	ldur	x8, [x29, #-88]
  4262dc:	add	x8, x8, #0x1
  4262e0:	stur	x8, [x29, #-88]
  4262e4:	b	426270 <client_context_read_log_ratelimit_burst+0x224>
  4262e8:	ldur	x8, [x29, #-72]
  4262ec:	mov	w9, #0x0                   	// #0
  4262f0:	strb	w9, [x8]
  4262f4:	ldur	x8, [x29, #-64]
  4262f8:	stur	x8, [x29, #-112]
  4262fc:	ldur	x8, [x29, #-112]
  426300:	stur	x8, [x29, #-32]
  426304:	ldur	x0, [x29, #-32]
  426308:	sub	x1, x29, #0x18
  42630c:	bl	406608 <readlink_malloc@plt>
  426310:	stur	w0, [x29, #-36]
  426314:	ldur	w9, [x29, #-36]
  426318:	cmp	w9, #0x0
  42631c:	cset	w9, ge  // ge = tcont
  426320:	tbnz	w9, #0, 426338 <client_context_read_log_ratelimit_burst+0x2ec>
  426324:	ldur	w8, [x29, #-36]
  426328:	stur	w8, [x29, #-4]
  42632c:	mov	w8, #0x1                   	// #1
  426330:	stur	w8, [x29, #-40]
  426334:	b	426354 <client_context_read_log_ratelimit_burst+0x308>
  426338:	ldur	x0, [x29, #-24]
  42633c:	ldur	x8, [x29, #-16]
  426340:	add	x1, x8, #0xd0
  426344:	bl	426570 <safe_atou>
  426348:	stur	w0, [x29, #-4]
  42634c:	mov	w9, #0x1                   	// #1
  426350:	stur	w9, [x29, #-40]
  426354:	sub	x0, x29, #0x18
  426358:	bl	426434 <freep>
  42635c:	ldur	w0, [x29, #-4]
  426360:	mov	sp, x29
  426364:	ldp	x29, x30, [sp], #16
  426368:	ret

000000000042636c <memdup_suffix0_multiply>:
  42636c:	sub	sp, sp, #0x30
  426370:	stp	x29, x30, [sp, #32]
  426374:	add	x29, sp, #0x20
  426378:	str	x0, [sp, #16]
  42637c:	str	x1, [sp, #8]
  426380:	str	x2, [sp]
  426384:	ldr	x0, [sp, #8]
  426388:	ldr	x1, [sp]
  42638c:	bl	4263cc <size_multiply_overflow>
  426390:	tbnz	w0, #0, 426398 <memdup_suffix0_multiply+0x2c>
  426394:	b	4263a4 <memdup_suffix0_multiply+0x38>
  426398:	mov	x8, xzr
  42639c:	stur	x8, [x29, #-8]
  4263a0:	b	4263bc <memdup_suffix0_multiply+0x50>
  4263a4:	ldr	x0, [sp, #16]
  4263a8:	ldr	x8, [sp, #8]
  4263ac:	ldr	x9, [sp]
  4263b0:	mul	x1, x8, x9
  4263b4:	bl	406658 <memdup_suffix0@plt>
  4263b8:	stur	x0, [x29, #-8]
  4263bc:	ldur	x0, [x29, #-8]
  4263c0:	ldp	x29, x30, [sp, #32]
  4263c4:	add	sp, sp, #0x30
  4263c8:	ret

00000000004263cc <size_multiply_overflow>:
  4263cc:	sub	sp, sp, #0x20
  4263d0:	str	x0, [sp, #24]
  4263d4:	str	x1, [sp, #16]
  4263d8:	ldr	x8, [sp, #16]
  4263dc:	mov	w9, #0x0                   	// #0
  4263e0:	str	w9, [sp, #12]
  4263e4:	cbz	x8, 426404 <size_multiply_overflow+0x38>
  4263e8:	ldr	x8, [sp, #24]
  4263ec:	ldr	x9, [sp, #16]
  4263f0:	mov	x10, #0xffffffffffffffff    	// #-1
  4263f4:	udiv	x9, x10, x9
  4263f8:	cmp	x8, x9
  4263fc:	cset	w11, hi  // hi = pmore
  426400:	str	w11, [sp, #12]
  426404:	ldr	w8, [sp, #12]
  426408:	mov	w9, #0x1                   	// #1
  42640c:	eor	w8, w8, #0x1
  426410:	eor	w8, w8, w9
  426414:	and	w8, w8, #0x1
  426418:	mov	w0, w8
  42641c:	sxtw	x10, w0
  426420:	cmp	x10, #0x0
  426424:	cset	w8, ne  // ne = any
  426428:	and	w0, w8, #0x1
  42642c:	add	sp, sp, #0x20
  426430:	ret

0000000000426434 <freep>:
  426434:	sub	sp, sp, #0x20
  426438:	stp	x29, x30, [sp, #16]
  42643c:	add	x29, sp, #0x10
  426440:	str	x0, [sp, #8]
  426444:	ldr	x8, [sp, #8]
  426448:	ldr	x0, [x8]
  42644c:	bl	405778 <free@plt>
  426450:	ldp	x29, x30, [sp, #16]
  426454:	add	sp, sp, #0x20
  426458:	ret

000000000042645c <streq_ptr>:
  42645c:	sub	sp, sp, #0x20
  426460:	stp	x29, x30, [sp, #16]
  426464:	add	x29, sp, #0x10
  426468:	str	x0, [sp, #8]
  42646c:	str	x1, [sp]
  426470:	ldr	x0, [sp, #8]
  426474:	ldr	x1, [sp]
  426478:	bl	406668 <strcmp_ptr@plt>
  42647c:	cmp	w0, #0x0
  426480:	cset	w8, eq  // eq = none
  426484:	and	w0, w8, #0x1
  426488:	ldp	x29, x30, [sp, #16]
  42648c:	add	sp, sp, #0x20
  426490:	ret

0000000000426494 <fclosep>:
  426494:	sub	sp, sp, #0x20
  426498:	stp	x29, x30, [sp, #16]
  42649c:	add	x29, sp, #0x10
  4264a0:	str	x0, [sp, #8]
  4264a4:	ldr	x8, [sp, #8]
  4264a8:	ldr	x0, [x8]
  4264ac:	bl	4062f8 <safe_fclose@plt>
  4264b0:	ldp	x29, x30, [sp, #16]
  4264b4:	add	sp, sp, #0x20
  4264b8:	ret

00000000004264bc <read_full_stream>:
  4264bc:	sub	sp, sp, #0x30
  4264c0:	stp	x29, x30, [sp, #32]
  4264c4:	add	x29, sp, #0x20
  4264c8:	mov	x8, xzr
  4264cc:	mov	w9, wzr
  4264d0:	stur	x0, [x29, #-8]
  4264d4:	str	x1, [sp, #16]
  4264d8:	str	x2, [sp, #8]
  4264dc:	ldur	x0, [x29, #-8]
  4264e0:	ldr	x3, [sp, #16]
  4264e4:	ldr	x4, [sp, #8]
  4264e8:	mov	x1, x8
  4264ec:	mov	w2, w9
  4264f0:	bl	406678 <read_full_stream_full@plt>
  4264f4:	ldp	x29, x30, [sp, #32]
  4264f8:	add	sp, sp, #0x30
  4264fc:	ret

0000000000426500 <unaligned_read_le64>:
  426500:	sub	sp, sp, #0x20
  426504:	stp	x29, x30, [sp, #16]
  426508:	add	x29, sp, #0x10
  42650c:	str	x0, [sp, #8]
  426510:	ldr	x8, [sp, #8]
  426514:	str	x8, [sp]
  426518:	ldr	x8, [sp]
  42651c:	ldr	x0, [x8]
  426520:	bl	426530 <le64toh>
  426524:	ldp	x29, x30, [sp, #16]
  426528:	add	sp, sp, #0x20
  42652c:	ret

0000000000426530 <le64toh>:
  426530:	sub	sp, sp, #0x10
  426534:	str	x0, [sp, #8]
  426538:	ldr	x0, [sp, #8]
  42653c:	add	sp, sp, #0x10
  426540:	ret

0000000000426544 <safe_atou64>:
  426544:	sub	sp, sp, #0x20
  426548:	stp	x29, x30, [sp, #16]
  42654c:	add	x29, sp, #0x10
  426550:	str	x0, [sp, #8]
  426554:	str	x1, [sp]
  426558:	ldr	x0, [sp, #8]
  42655c:	ldr	x1, [sp]
  426560:	bl	4057a8 <safe_atollu@plt>
  426564:	ldp	x29, x30, [sp, #16]
  426568:	add	sp, sp, #0x20
  42656c:	ret

0000000000426570 <safe_atou>:
  426570:	sub	sp, sp, #0x20
  426574:	stp	x29, x30, [sp, #16]
  426578:	add	x29, sp, #0x10
  42657c:	mov	w8, wzr
  426580:	str	x0, [sp, #8]
  426584:	str	x1, [sp]
  426588:	ldr	x0, [sp, #8]
  42658c:	ldr	x2, [sp]
  426590:	mov	w1, w8
  426594:	bl	406688 <safe_atou_full@plt>
  426598:	ldp	x29, x30, [sp, #16]
  42659c:	add	sp, sp, #0x20
  4265a0:	ret

00000000004265a4 <hashmap_get>:
  4265a4:	sub	sp, sp, #0x20
  4265a8:	stp	x29, x30, [sp, #16]
  4265ac:	add	x29, sp, #0x10
  4265b0:	str	x0, [sp, #8]
  4265b4:	str	x1, [sp]
  4265b8:	ldr	x0, [sp, #8]
  4265bc:	ldr	x1, [sp]
  4265c0:	bl	405fd8 <internal_hashmap_get@plt>
  4265c4:	ldp	x29, x30, [sp, #16]
  4265c8:	add	sp, sp, #0x20
  4265cc:	ret

00000000004265d0 <PID_TO_PTR>:
  4265d0:	sub	sp, sp, #0x10
  4265d4:	str	w0, [sp, #12]
  4265d8:	ldrsw	x8, [sp, #12]
  4265dc:	mov	x0, x8
  4265e0:	add	sp, sp, #0x10
  4265e4:	ret

00000000004265e8 <cache_max>:
  4265e8:	sub	sp, sp, #0x80
  4265ec:	stp	x29, x30, [sp, #112]
  4265f0:	add	x29, sp, #0x70
  4265f4:	adrp	x8, 450000 <prefix_timestamp.cached_printk_time>
  4265f8:	add	x8, x8, #0x8
  4265fc:	mov	x9, #0xffffffffffffffff    	// #-1
  426600:	adrp	x10, 42f000 <_fini+0x53a8>
  426604:	add	x10, x10, #0xcb
  426608:	add	x2, x10, #0x3
  42660c:	ldr	x10, [x8]
  426610:	cmp	x10, x9
  426614:	str	x8, [sp, #48]
  426618:	str	x2, [sp, #40]
  42661c:	b.ne	426754 <cache_max+0x16c>  // b.any
  426620:	sub	x0, x29, #0x8
  426624:	mov	x8, xzr
  426628:	mov	x1, x8
  42662c:	bl	406698 <procfs_memory_get@plt>
  426630:	stur	w0, [x29, #-12]
  426634:	ldur	w9, [x29, #-12]
  426638:	cmp	w9, #0x0
  42663c:	cset	w9, ge  // ge = tcont
  426640:	tbnz	w9, #0, 4266d0 <cache_max+0xe8>
  426644:	mov	w8, #0x4                   	// #4
  426648:	stur	w8, [x29, #-16]
  42664c:	ldur	w8, [x29, #-12]
  426650:	stur	w8, [x29, #-20]
  426654:	stur	wzr, [x29, #-24]
  426658:	ldur	w0, [x29, #-24]
  42665c:	bl	405638 <log_get_max_level_realm@plt>
  426660:	ldur	w8, [x29, #-16]
  426664:	and	w8, w8, #0x7
  426668:	cmp	w0, w8
  42666c:	b.lt	4266a4 <cache_max+0xbc>  // b.tstop
  426670:	ldur	w8, [x29, #-24]
  426674:	ldur	w9, [x29, #-16]
  426678:	orr	w0, w9, w8, lsl #10
  42667c:	ldur	w1, [x29, #-20]
  426680:	ldr	x2, [sp, #40]
  426684:	mov	w3, #0x4e                  	// #78
  426688:	adrp	x4, 42f000 <_fini+0x53a8>
  42668c:	add	x4, x4, #0x819
  426690:	adrp	x5, 42f000 <_fini+0x53a8>
  426694:	add	x5, x5, #0x823
  426698:	bl	405648 <log_internal_realm@plt>
  42669c:	str	w0, [sp, #36]
  4266a0:	b	4266b8 <cache_max+0xd0>
  4266a4:	ldur	w0, [x29, #-20]
  4266a8:	bl	405658 <abs@plt>
  4266ac:	mov	w8, wzr
  4266b0:	subs	w8, w8, w0, uxtb
  4266b4:	str	w8, [sp, #36]
  4266b8:	ldr	w8, [sp, #36]
  4266bc:	stur	w8, [x29, #-28]
  4266c0:	mov	x9, #0x80                  	// #128
  4266c4:	ldr	x10, [sp, #48]
  4266c8:	str	x9, [x10]
  4266cc:	b	426754 <cache_max+0x16c>
  4266d0:	ldur	x8, [x29, #-8]
  4266d4:	mov	x9, #0x8                   	// #8
  4266d8:	udiv	x8, x8, x9
  4266dc:	str	x8, [sp, #24]
  4266e0:	bl	4269fc <sc_arg_max>
  4266e4:	ldr	x8, [sp, #24]
  4266e8:	udiv	x9, x8, x0
  4266ec:	stur	x9, [x29, #-40]
  4266f0:	mov	w10, #0x40                  	// #64
  4266f4:	stur	w10, [x29, #-44]
  4266f8:	mov	w10, #0x4000                	// #16384
  4266fc:	stur	w10, [x29, #-48]
  426700:	ldur	x9, [x29, #-40]
  426704:	cmp	x9, #0x4, lsl #12
  426708:	b.ls	426718 <cache_max+0x130>  // b.plast
  42670c:	mov	x8, #0x4000                	// #16384
  426710:	str	x8, [sp, #16]
  426714:	b	426740 <cache_max+0x158>
  426718:	ldur	x8, [x29, #-40]
  42671c:	cmp	x8, #0x40
  426720:	b.cs	426730 <cache_max+0x148>  // b.hs, b.nlast
  426724:	mov	x8, #0x40                  	// #64
  426728:	str	x8, [sp, #8]
  42672c:	b	426738 <cache_max+0x150>
  426730:	ldur	x8, [x29, #-40]
  426734:	str	x8, [sp, #8]
  426738:	ldr	x8, [sp, #8]
  42673c:	str	x8, [sp, #16]
  426740:	ldr	x8, [sp, #16]
  426744:	str	x8, [sp, #56]
  426748:	ldr	x8, [sp, #56]
  42674c:	ldr	x9, [sp, #48]
  426750:	str	x8, [x9]
  426754:	ldr	x8, [sp, #48]
  426758:	ldr	x0, [x8]
  42675c:	ldp	x29, x30, [sp, #112]
  426760:	add	sp, sp, #0x80
  426764:	ret

0000000000426768 <client_context_new>:
  426768:	sub	sp, sp, #0x60
  42676c:	stp	x29, x30, [sp, #80]
  426770:	add	x29, sp, #0x50
  426774:	adrp	x8, 42f000 <_fini+0x53a8>
  426778:	add	x8, x8, #0xcb
  42677c:	add	x8, x8, #0x3
  426780:	adrp	x9, 42f000 <_fini+0x53a8>
  426784:	add	x9, x9, #0x885
  426788:	stur	x0, [x29, #-16]
  42678c:	stur	w1, [x29, #-20]
  426790:	stur	x2, [x29, #-32]
  426794:	str	x8, [sp, #24]
  426798:	str	x9, [sp, #16]
  42679c:	ldur	x8, [x29, #-16]
  4267a0:	cmp	x8, #0x0
  4267a4:	cset	w9, ne  // ne = any
  4267a8:	mov	w10, #0x1                   	// #1
  4267ac:	eor	w9, w9, #0x1
  4267b0:	eor	w9, w9, w10
  4267b4:	eor	w9, w9, w10
  4267b8:	and	w9, w9, #0x1
  4267bc:	mov	w0, w9
  4267c0:	sxtw	x8, w0
  4267c4:	cbz	x8, 4267e8 <client_context_new+0x80>
  4267c8:	mov	w8, wzr
  4267cc:	mov	w0, w8
  4267d0:	adrp	x1, 429000 <journal_ratelimit_group_free+0x70>
  4267d4:	add	x1, x1, #0xdc8
  4267d8:	ldr	x2, [sp, #24]
  4267dc:	mov	w3, #0x6c                  	// #108
  4267e0:	ldr	x4, [sp, #16]
  4267e4:	bl	405718 <log_assert_failed_realm@plt>
  4267e8:	ldur	w0, [x29, #-20]
  4267ec:	bl	4248c0 <pid_is_valid>
  4267f0:	mov	w8, #0x1                   	// #1
  4267f4:	eor	w9, w0, #0x1
  4267f8:	eor	w9, w9, w8
  4267fc:	eor	w8, w9, w8
  426800:	and	w8, w8, #0x1
  426804:	mov	w1, w8
  426808:	sxtw	x10, w1
  42680c:	cbz	x10, 426830 <client_context_new+0xc8>
  426810:	mov	w8, wzr
  426814:	mov	w0, w8
  426818:	adrp	x1, 42f000 <_fini+0x53a8>
  42681c:	add	x1, x1, #0x8bf
  426820:	ldr	x2, [sp, #24]
  426824:	mov	w3, #0x6d                  	// #109
  426828:	ldr	x4, [sp, #16]
  42682c:	bl	405718 <log_assert_failed_realm@plt>
  426830:	ldur	x8, [x29, #-32]
  426834:	cmp	x8, #0x0
  426838:	cset	w9, ne  // ne = any
  42683c:	mov	w10, #0x1                   	// #1
  426840:	eor	w9, w9, #0x1
  426844:	eor	w9, w9, w10
  426848:	eor	w9, w9, w10
  42684c:	and	w9, w9, #0x1
  426850:	mov	w0, w9
  426854:	sxtw	x8, w0
  426858:	cbz	x8, 42687c <client_context_new+0x114>
  42685c:	mov	w8, wzr
  426860:	mov	w0, w8
  426864:	adrp	x1, 42b000 <_fini+0x13a8>
  426868:	add	x1, x1, #0xe5b
  42686c:	ldr	x2, [sp, #24]
  426870:	mov	w3, #0x6e                  	// #110
  426874:	ldr	x4, [sp, #16]
  426878:	bl	405718 <log_assert_failed_realm@plt>
  42687c:	ldur	x8, [x29, #-16]
  426880:	add	x0, x8, #0x2d0
  426884:	mov	x8, xzr
  426888:	mov	x1, x8
  42688c:	bl	4066a8 <internal_hashmap_ensure_allocated@plt>
  426890:	str	w0, [sp, #36]
  426894:	ldr	w9, [sp, #36]
  426898:	cmp	w9, #0x0
  42689c:	cset	w9, ge  // ge = tcont
  4268a0:	tbnz	w9, #0, 4268b0 <client_context_new+0x148>
  4268a4:	ldr	w8, [sp, #36]
  4268a8:	stur	w8, [x29, #-4]
  4268ac:	b	4269ec <client_context_new+0x284>
  4268b0:	ldur	x8, [x29, #-16]
  4268b4:	add	x0, x8, #0x2d8
  4268b8:	adrp	x1, 426000 <client_context_read_log_ratelimit_interval+0x2d4>
  4268bc:	add	x1, x1, #0xa88
  4268c0:	bl	4066b8 <prioq_ensure_allocated@plt>
  4268c4:	str	w0, [sp, #36]
  4268c8:	ldr	w9, [sp, #36]
  4268cc:	cmp	w9, #0x0
  4268d0:	cset	w9, ge  // ge = tcont
  4268d4:	tbnz	w9, #0, 4268e4 <client_context_new+0x17c>
  4268d8:	ldr	w8, [sp, #36]
  4268dc:	stur	w8, [x29, #-4]
  4268e0:	b	4269ec <client_context_new+0x284>
  4268e4:	mov	x0, #0x1                   	// #1
  4268e8:	mov	x1, #0xd8                  	// #216
  4268ec:	bl	406118 <calloc@plt>
  4268f0:	str	x0, [sp, #40]
  4268f4:	ldr	x8, [sp, #40]
  4268f8:	cbnz	x8, 426908 <client_context_new+0x1a0>
  4268fc:	mov	w8, #0xfffffff4            	// #-12
  426900:	stur	w8, [x29, #-4]
  426904:	b	4269ec <client_context_new+0x284>
  426908:	ldur	w8, [x29, #-20]
  42690c:	ldr	x9, [sp, #40]
  426910:	str	w8, [x9, #20]
  426914:	ldr	x9, [sp, #40]
  426918:	mov	w8, #0xffffffff            	// #-1
  42691c:	str	w8, [x9, #24]
  426920:	ldr	x9, [sp, #40]
  426924:	str	w8, [x9, #28]
  426928:	ldr	x9, [sp, #40]
  42692c:	str	w8, [x9, #64]
  426930:	ldr	x9, [sp, #40]
  426934:	str	w8, [x9, #68]
  426938:	ldr	x9, [sp, #40]
  42693c:	str	w8, [x9, #88]
  426940:	ldr	x9, [sp, #40]
  426944:	str	w8, [x9, #4]
  426948:	ldr	x9, [sp, #40]
  42694c:	mov	x10, #0xffffffffffffffff    	// #-1
  426950:	str	x10, [x9, #8]
  426954:	ldr	x9, [sp, #40]
  426958:	str	x10, [x9, #192]
  42695c:	ldr	x9, [sp, #40]
  426960:	str	w8, [x9, #160]
  426964:	ldur	x9, [x29, #-16]
  426968:	ldr	x9, [x9, #216]
  42696c:	ldr	x10, [sp, #40]
  426970:	str	x9, [x10, #200]
  426974:	ldur	x9, [x29, #-16]
  426978:	ldr	w8, [x9, #224]
  42697c:	ldr	x9, [sp, #40]
  426980:	str	w8, [x9, #208]
  426984:	ldur	x9, [x29, #-16]
  426988:	ldr	x0, [x9, #720]
  42698c:	ldur	w8, [x29, #-20]
  426990:	str	x0, [sp, #8]
  426994:	mov	w0, w8
  426998:	bl	4265d0 <PID_TO_PTR>
  42699c:	ldr	x2, [sp, #40]
  4269a0:	ldr	x9, [sp, #8]
  4269a4:	str	x0, [sp]
  4269a8:	mov	x0, x9
  4269ac:	ldr	x1, [sp]
  4269b0:	bl	406008 <hashmap_put@plt>
  4269b4:	str	w0, [sp, #36]
  4269b8:	ldr	w8, [sp, #36]
  4269bc:	cmp	w8, #0x0
  4269c0:	cset	w8, ge  // ge = tcont
  4269c4:	tbnz	w8, #0, 4269dc <client_context_new+0x274>
  4269c8:	ldr	x0, [sp, #40]
  4269cc:	bl	405778 <free@plt>
  4269d0:	ldr	w8, [sp, #36]
  4269d4:	stur	w8, [x29, #-4]
  4269d8:	b	4269ec <client_context_new+0x284>
  4269dc:	ldr	x8, [sp, #40]
  4269e0:	ldur	x9, [x29, #-32]
  4269e4:	str	x8, [x9]
  4269e8:	stur	wzr, [x29, #-4]
  4269ec:	ldur	w0, [x29, #-4]
  4269f0:	ldp	x29, x30, [sp, #80]
  4269f4:	add	sp, sp, #0x60
  4269f8:	ret

00000000004269fc <sc_arg_max>:
  4269fc:	sub	sp, sp, #0x20
  426a00:	stp	x29, x30, [sp, #16]
  426a04:	add	x29, sp, #0x10
  426a08:	mov	w8, wzr
  426a0c:	adrp	x9, 42f000 <_fini+0x53a8>
  426a10:	add	x9, x9, #0x855
  426a14:	add	x2, x9, #0x3
  426a18:	mov	w0, w8
  426a1c:	str	x2, [sp]
  426a20:	bl	4066c8 <sysconf@plt>
  426a24:	str	x0, [sp, #8]
  426a28:	ldr	x8, [sp, #8]
  426a2c:	cmp	x8, #0x0
  426a30:	cset	w9, gt
  426a34:	mov	w10, #0x1                   	// #1
  426a38:	eor	w9, w9, #0x1
  426a3c:	eor	w9, w9, w10
  426a40:	eor	w9, w9, w10
  426a44:	and	w9, w9, #0x1
  426a48:	mov	w0, w9
  426a4c:	sxtw	x8, w0
  426a50:	cbz	x8, 426a78 <sc_arg_max+0x7c>
  426a54:	mov	w8, wzr
  426a58:	mov	w0, w8
  426a5c:	adrp	x1, 42f000 <_fini+0x53a8>
  426a60:	add	x1, x1, #0x84f
  426a64:	ldr	x2, [sp]
  426a68:	mov	w3, #0xe                   	// #14
  426a6c:	adrp	x4, 42f000 <_fini+0x53a8>
  426a70:	add	x4, x4, #0x86d
  426a74:	bl	405718 <log_assert_failed_realm@plt>
  426a78:	ldr	x0, [sp, #8]
  426a7c:	ldp	x29, x30, [sp, #16]
  426a80:	add	sp, sp, #0x20
  426a84:	ret

0000000000426a88 <client_context_compare>:
  426a88:	sub	sp, sp, #0x60
  426a8c:	str	x0, [sp, #80]
  426a90:	str	x1, [sp, #72]
  426a94:	ldr	x8, [sp, #80]
  426a98:	str	x8, [sp, #64]
  426a9c:	ldr	x8, [sp, #72]
  426aa0:	str	x8, [sp, #56]
  426aa4:	ldr	x8, [sp, #64]
  426aa8:	ldr	x8, [x8, #8]
  426aac:	str	x8, [sp, #40]
  426ab0:	ldr	x8, [sp, #56]
  426ab4:	ldr	x8, [x8, #8]
  426ab8:	str	x8, [sp, #32]
  426abc:	ldr	x8, [sp, #40]
  426ac0:	ldr	x9, [sp, #32]
  426ac4:	cmp	x8, x9
  426ac8:	b.cs	426ad8 <client_context_compare+0x50>  // b.hs, b.nlast
  426acc:	mov	w8, #0xffffffff            	// #-1
  426ad0:	str	w8, [sp, #12]
  426ad4:	b	426af4 <client_context_compare+0x6c>
  426ad8:	ldr	x8, [sp, #40]
  426adc:	ldr	x9, [sp, #32]
  426ae0:	mov	w10, wzr
  426ae4:	mov	w11, #0x1                   	// #1
  426ae8:	cmp	x8, x9
  426aec:	csel	w10, w11, w10, hi  // hi = pmore
  426af0:	str	w10, [sp, #12]
  426af4:	ldr	w8, [sp, #12]
  426af8:	str	w8, [sp, #28]
  426afc:	ldr	w8, [sp, #28]
  426b00:	str	w8, [sp, #52]
  426b04:	ldr	w8, [sp, #52]
  426b08:	cbz	w8, 426b18 <client_context_compare+0x90>
  426b0c:	ldr	w8, [sp, #52]
  426b10:	str	w8, [sp, #92]
  426b14:	b	426b78 <client_context_compare+0xf0>
  426b18:	ldr	x8, [sp, #64]
  426b1c:	ldr	w9, [x8, #20]
  426b20:	str	w9, [sp, #24]
  426b24:	ldr	x8, [sp, #56]
  426b28:	ldr	w9, [x8, #20]
  426b2c:	str	w9, [sp, #20]
  426b30:	ldr	w9, [sp, #24]
  426b34:	ldr	w10, [sp, #20]
  426b38:	cmp	w9, w10
  426b3c:	b.ge	426b4c <client_context_compare+0xc4>  // b.tcont
  426b40:	mov	w8, #0xffffffff            	// #-1
  426b44:	str	w8, [sp, #8]
  426b48:	b	426b68 <client_context_compare+0xe0>
  426b4c:	ldr	w8, [sp, #24]
  426b50:	ldr	w9, [sp, #20]
  426b54:	mov	w10, wzr
  426b58:	mov	w11, #0x1                   	// #1
  426b5c:	cmp	w8, w9
  426b60:	csel	w8, w11, w10, gt
  426b64:	str	w8, [sp, #8]
  426b68:	ldr	w8, [sp, #8]
  426b6c:	str	w8, [sp, #16]
  426b70:	ldr	w8, [sp, #16]
  426b74:	str	w8, [sp, #92]
  426b78:	ldr	w0, [sp, #92]
  426b7c:	add	sp, sp, #0x60
  426b80:	ret

0000000000426b84 <hashmap_remove>:
  426b84:	sub	sp, sp, #0x20
  426b88:	stp	x29, x30, [sp, #16]
  426b8c:	add	x29, sp, #0x10
  426b90:	str	x0, [sp, #8]
  426b94:	str	x1, [sp]
  426b98:	ldr	x0, [sp, #8]
  426b9c:	ldr	x1, [sp]
  426ba0:	bl	405a18 <internal_hashmap_remove@plt>
  426ba4:	ldp	x29, x30, [sp, #16]
  426ba8:	add	sp, sp, #0x20
  426bac:	ret

0000000000426bb0 <server_process_native_message>:
  426bb0:	sub	sp, sp, #0x80
  426bb4:	stp	x29, x30, [sp, #112]
  426bb8:	add	x29, sp, #0x70
  426bbc:	mov	x8, xzr
  426bc0:	adrp	x9, 42f000 <_fini+0x53a8>
  426bc4:	add	x9, x9, #0x94b
  426bc8:	add	x9, x9, #0x3
  426bcc:	stur	x0, [x29, #-8]
  426bd0:	stur	x1, [x29, #-16]
  426bd4:	stur	x2, [x29, #-24]
  426bd8:	stur	x3, [x29, #-32]
  426bdc:	stur	x4, [x29, #-40]
  426be0:	stur	x5, [x29, #-48]
  426be4:	str	x6, [sp, #56]
  426be8:	ldur	x10, [x29, #-24]
  426bec:	str	x10, [sp, #48]
  426bf0:	str	x8, [sp, #40]
  426bf4:	str	x9, [sp, #8]
  426bf8:	ldur	x8, [x29, #-8]
  426bfc:	cmp	x8, #0x0
  426c00:	cset	w9, ne  // ne = any
  426c04:	mov	w10, #0x1                   	// #1
  426c08:	eor	w9, w9, #0x1
  426c0c:	eor	w9, w9, w10
  426c10:	eor	w9, w9, w10
  426c14:	and	w9, w9, #0x1
  426c18:	mov	w0, w9
  426c1c:	sxtw	x8, w0
  426c20:	cbz	x8, 426c48 <server_process_native_message+0x98>
  426c24:	mov	w8, wzr
  426c28:	mov	w0, w8
  426c2c:	adrp	x1, 429000 <journal_ratelimit_group_free+0x70>
  426c30:	add	x1, x1, #0xdc8
  426c34:	ldr	x2, [sp, #8]
  426c38:	mov	w3, #0x132                 	// #306
  426c3c:	adrp	x4, 42f000 <_fini+0x53a8>
  426c40:	add	x4, x4, #0x96c
  426c44:	bl	405718 <log_assert_failed_realm@plt>
  426c48:	ldur	x8, [x29, #-16]
  426c4c:	mov	w9, #0x1                   	// #1
  426c50:	str	w9, [sp, #4]
  426c54:	cbnz	x8, 426c68 <server_process_native_message+0xb8>
  426c58:	ldur	x8, [x29, #-24]
  426c5c:	cmp	x8, #0x0
  426c60:	cset	w9, eq  // eq = none
  426c64:	str	w9, [sp, #4]
  426c68:	ldr	w8, [sp, #4]
  426c6c:	mov	w9, #0x1                   	// #1
  426c70:	eor	w8, w8, #0x1
  426c74:	eor	w8, w8, w9
  426c78:	eor	w8, w8, w9
  426c7c:	and	w8, w8, #0x1
  426c80:	mov	w0, w8
  426c84:	sxtw	x10, w0
  426c88:	cbz	x10, 426cb0 <server_process_native_message+0x100>
  426c8c:	mov	w8, wzr
  426c90:	mov	w0, w8
  426c94:	adrp	x1, 42f000 <_fini+0x53a8>
  426c98:	add	x1, x1, #0x9f3
  426c9c:	ldr	x2, [sp, #8]
  426ca0:	mov	w3, #0x133                 	// #307
  426ca4:	adrp	x4, 42f000 <_fini+0x53a8>
  426ca8:	add	x4, x4, #0x96c
  426cac:	bl	405718 <log_assert_failed_realm@plt>
  426cb0:	ldur	x8, [x29, #-32]
  426cb4:	cbz	x8, 426d8c <server_process_native_message+0x1dc>
  426cb8:	ldur	x8, [x29, #-32]
  426cbc:	ldr	w0, [x8]
  426cc0:	bl	426dd8 <pid_is_valid>
  426cc4:	tbnz	w0, #0, 426ccc <server_process_native_message+0x11c>
  426cc8:	b	426d8c <server_process_native_message+0x1dc>
  426ccc:	ldur	x0, [x29, #-8]
  426cd0:	ldur	x8, [x29, #-32]
  426cd4:	ldr	w1, [x8]
  426cd8:	ldur	x2, [x29, #-32]
  426cdc:	ldur	x3, [x29, #-48]
  426ce0:	ldr	x4, [sp, #56]
  426ce4:	mov	x8, xzr
  426ce8:	mov	x5, x8
  426cec:	add	x6, sp, #0x28
  426cf0:	bl	4240bc <client_context_get>
  426cf4:	str	w0, [sp, #36]
  426cf8:	ldr	w9, [sp, #36]
  426cfc:	cmp	w9, #0x0
  426d00:	cset	w9, ge  // ge = tcont
  426d04:	tbnz	w9, #0, 426d8c <server_process_native_message+0x1dc>
  426d08:	mov	w8, #0x4                   	// #4
  426d0c:	str	w8, [sp, #32]
  426d10:	ldr	w8, [sp, #36]
  426d14:	str	w8, [sp, #28]
  426d18:	str	wzr, [sp, #24]
  426d1c:	ldr	w0, [sp, #24]
  426d20:	bl	405638 <log_get_max_level_realm@plt>
  426d24:	ldr	w8, [sp, #32]
  426d28:	and	w8, w8, #0x7
  426d2c:	cmp	w0, w8
  426d30:	b.lt	426d70 <server_process_native_message+0x1c0>  // b.tstop
  426d34:	ldr	w8, [sp, #24]
  426d38:	ldr	w9, [sp, #32]
  426d3c:	orr	w0, w9, w8, lsl #10
  426d40:	ldr	w1, [sp, #28]
  426d44:	ldur	x10, [x29, #-32]
  426d48:	ldr	w6, [x10]
  426d4c:	ldr	x2, [sp, #8]
  426d50:	mov	w3, #0x138                 	// #312
  426d54:	adrp	x4, 42f000 <_fini+0x53a8>
  426d58:	add	x4, x4, #0xa0e
  426d5c:	adrp	x5, 42e000 <_fini+0x43a8>
  426d60:	add	x5, x5, #0x1f6
  426d64:	bl	405648 <log_internal_realm@plt>
  426d68:	str	w0, [sp]
  426d6c:	b	426d84 <server_process_native_message+0x1d4>
  426d70:	ldr	w0, [sp, #28]
  426d74:	bl	405658 <abs@plt>
  426d78:	mov	w8, wzr
  426d7c:	subs	w8, w8, w0, uxtb
  426d80:	str	w8, [sp]
  426d84:	ldr	w8, [sp]
  426d88:	str	w8, [sp, #20]
  426d8c:	ldur	x0, [x29, #-8]
  426d90:	ldur	x8, [x29, #-16]
  426d94:	ldur	x9, [x29, #-24]
  426d98:	add	x2, sp, #0x30
  426d9c:	ldr	x10, [sp, #48]
  426da0:	subs	x9, x9, x10
  426da4:	add	x1, x8, x9
  426da8:	ldr	x3, [sp, #40]
  426dac:	ldur	x4, [x29, #-32]
  426db0:	ldur	x5, [x29, #-40]
  426db4:	ldur	x6, [x29, #-48]
  426db8:	ldr	x7, [sp, #56]
  426dbc:	bl	426df8 <server_process_entry>
  426dc0:	str	w0, [sp, #36]
  426dc4:	ldr	w8, [sp, #36]
  426dc8:	cbz	w8, 426d8c <server_process_native_message+0x1dc>
  426dcc:	ldp	x29, x30, [sp, #112]
  426dd0:	add	sp, sp, #0x80
  426dd4:	ret

0000000000426dd8 <pid_is_valid>:
  426dd8:	sub	sp, sp, #0x10
  426ddc:	str	w0, [sp, #12]
  426de0:	ldr	w8, [sp, #12]
  426de4:	cmp	w8, #0x0
  426de8:	cset	w8, gt
  426dec:	and	w0, w8, #0x1
  426df0:	add	sp, sp, #0x10
  426df4:	ret

0000000000426df8 <server_process_entry>:
  426df8:	stp	x29, x30, [sp, #-32]!
  426dfc:	str	x28, [sp, #16]
  426e00:	mov	x29, sp
  426e04:	sub	sp, sp, #0x1f0
  426e08:	mov	x8, xzr
  426e0c:	mov	x9, #0xffffffffffffffff    	// #-1
  426e10:	mov	w10, #0x6                   	// #6
  426e14:	mov	w11, #0x1                   	// #1
  426e18:	adrp	x12, 42f000 <_fini+0x53a8>
  426e1c:	add	x12, x12, #0x94b
  426e20:	add	x12, x12, #0x3
  426e24:	adrp	x13, 42f000 <_fini+0x53a8>
  426e28:	add	x13, x13, #0xdbe
  426e2c:	stur	x0, [x29, #-8]
  426e30:	stur	x1, [x29, #-16]
  426e34:	stur	x2, [x29, #-24]
  426e38:	stur	x3, [x29, #-32]
  426e3c:	stur	x4, [x29, #-40]
  426e40:	stur	x5, [x29, #-48]
  426e44:	stur	x6, [x29, #-56]
  426e48:	stur	x7, [x29, #-64]
  426e4c:	stur	xzr, [x29, #-72]
  426e50:	stur	x9, [x29, #-88]
  426e54:	stur	xzr, [x29, #-96]
  426e58:	stur	xzr, [x29, #-104]
  426e5c:	stur	x8, [x29, #-112]
  426e60:	stur	x8, [x29, #-120]
  426e64:	stur	x8, [x29, #-128]
  426e68:	stur	w10, [x29, #-132]
  426e6c:	stur	wzr, [x29, #-136]
  426e70:	stur	w11, [x29, #-148]
  426e74:	ldur	x8, [x29, #-16]
  426e78:	stur	x8, [x29, #-144]
  426e7c:	str	x12, [sp, #88]
  426e80:	str	x13, [sp, #80]
  426e84:	ldur	x8, [x29, #-24]
  426e88:	ldr	x8, [x8]
  426e8c:	cmp	x8, #0x0
  426e90:	cset	w9, ls  // ls = plast
  426e94:	tbnz	w9, #0, 427740 <server_process_entry+0x948>
  426e98:	ldur	x0, [x29, #-144]
  426e9c:	ldur	x8, [x29, #-24]
  426ea0:	ldr	x2, [x8]
  426ea4:	mov	w1, #0xa                   	// #10
  426ea8:	bl	405788 <memchr@plt>
  426eac:	stur	x0, [x29, #-160]
  426eb0:	ldur	x8, [x29, #-160]
  426eb4:	cbnz	x8, 426f30 <server_process_entry+0x138>
  426eb8:	mov	w8, #0x7                   	// #7
  426ebc:	stur	w8, [x29, #-172]
  426ec0:	stur	wzr, [x29, #-176]
  426ec4:	stur	wzr, [x29, #-180]
  426ec8:	ldur	w0, [x29, #-180]
  426ecc:	bl	405638 <log_get_max_level_realm@plt>
  426ed0:	ldur	w8, [x29, #-172]
  426ed4:	and	w8, w8, #0x7
  426ed8:	cmp	w0, w8
  426edc:	b.lt	426f10 <server_process_entry+0x118>  // b.tstop
  426ee0:	ldur	w8, [x29, #-180]
  426ee4:	ldur	w9, [x29, #-172]
  426ee8:	orr	w0, w9, w8, lsl #10
  426eec:	ldur	w1, [x29, #-176]
  426ef0:	ldr	x2, [sp, #88]
  426ef4:	mov	w3, #0x7d                  	// #125
  426ef8:	ldr	x4, [sp, #80]
  426efc:	adrp	x5, 42f000 <_fini+0x53a8>
  426f00:	add	x5, x5, #0xdd3
  426f04:	bl	405648 <log_internal_realm@plt>
  426f08:	str	w0, [sp, #76]
  426f0c:	b	426f24 <server_process_entry+0x12c>
  426f10:	ldur	w0, [x29, #-176]
  426f14:	bl	405658 <abs@plt>
  426f18:	mov	w8, wzr
  426f1c:	subs	w8, w8, w0, uxtb
  426f20:	str	w8, [sp, #76]
  426f24:	ldr	w8, [sp, #76]
  426f28:	stur	w8, [x29, #-184]
  426f2c:	b	427740 <server_process_entry+0x948>
  426f30:	ldur	x8, [x29, #-160]
  426f34:	ldur	x9, [x29, #-144]
  426f38:	cmp	x8, x9
  426f3c:	b.ne	426f54 <server_process_entry+0x15c>  // b.any
  426f40:	ldur	x8, [x29, #-24]
  426f44:	ldr	x9, [x8]
  426f48:	subs	x9, x9, #0x1
  426f4c:	str	x9, [x8]
  426f50:	b	427740 <server_process_entry+0x948>
  426f54:	mov	w8, #0x0                   	// #0
  426f58:	sturb	w8, [x29, #-185]
  426f5c:	ldur	x9, [x29, #-144]
  426f60:	ldrb	w8, [x9]
  426f64:	cmp	w8, #0x23
  426f68:	str	w8, [sp, #72]
  426f6c:	b.eq	426f8c <server_process_entry+0x194>  // b.none
  426f70:	b	426f74 <server_process_entry+0x17c>
  426f74:	ldr	w8, [sp, #72]
  426f78:	cmp	w8, #0x2e
  426f7c:	cset	w9, eq  // eq = none
  426f80:	eor	w9, w9, #0x1
  426f84:	tbnz	w9, #0, 426f98 <server_process_entry+0x1a0>
  426f88:	b	426f8c <server_process_entry+0x194>
  426f8c:	mov	w8, #0x1                   	// #1
  426f90:	sturb	w8, [x29, #-185]
  426f94:	b	426f98 <server_process_entry+0x1a0>
  426f98:	ldurb	w8, [x29, #-185]
  426f9c:	and	w8, w8, #0x1
  426fa0:	sturb	w8, [x29, #-186]
  426fa4:	ldurb	w8, [x29, #-186]
  426fa8:	tbnz	w8, #0, 426fb0 <server_process_entry+0x1b8>
  426fac:	b	426fe0 <server_process_entry+0x1e8>
  426fb0:	ldur	x8, [x29, #-160]
  426fb4:	ldur	x9, [x29, #-144]
  426fb8:	subs	x8, x8, x9
  426fbc:	add	x8, x8, #0x1
  426fc0:	ldur	x9, [x29, #-24]
  426fc4:	ldr	x10, [x9]
  426fc8:	subs	x8, x10, x8
  426fcc:	str	x8, [x9]
  426fd0:	ldur	x8, [x29, #-160]
  426fd4:	add	x8, x8, #0x1
  426fd8:	stur	x8, [x29, #-144]
  426fdc:	b	426e84 <server_process_entry+0x8c>
  426fe0:	ldur	x8, [x29, #-72]
  426fe4:	cmp	x8, #0x400
  426fe8:	b.ls	427064 <server_process_entry+0x26c>  // b.plast
  426fec:	mov	w8, #0x7                   	// #7
  426ff0:	stur	w8, [x29, #-192]
  426ff4:	stur	wzr, [x29, #-196]
  426ff8:	stur	wzr, [x29, #-200]
  426ffc:	ldur	w0, [x29, #-200]
  427000:	bl	405638 <log_get_max_level_realm@plt>
  427004:	ldur	w8, [x29, #-192]
  427008:	and	w8, w8, #0x7
  42700c:	cmp	w0, w8
  427010:	b.lt	427044 <server_process_entry+0x24c>  // b.tstop
  427014:	ldur	w8, [x29, #-200]
  427018:	ldur	w9, [x29, #-192]
  42701c:	orr	w0, w9, w8, lsl #10
  427020:	ldur	w1, [x29, #-196]
  427024:	ldr	x2, [sp, #88]
  427028:	mov	w3, #0x90                  	// #144
  42702c:	ldr	x4, [sp, #80]
  427030:	adrp	x5, 42f000 <_fini+0x53a8>
  427034:	add	x5, x5, #0xe03
  427038:	bl	405648 <log_internal_realm@plt>
  42703c:	str	w0, [sp, #68]
  427040:	b	427058 <server_process_entry+0x260>
  427044:	ldur	w0, [x29, #-196]
  427048:	bl	405658 <abs@plt>
  42704c:	mov	w8, wzr
  427050:	subs	w8, w8, w0, uxtb
  427054:	str	w8, [sp, #68]
  427058:	ldr	w8, [sp, #68]
  42705c:	stur	w8, [x29, #-204]
  427060:	b	427934 <server_process_entry+0xb3c>
  427064:	ldur	x8, [x29, #-72]
  427068:	add	x8, x8, #0x2
  42706c:	add	x8, x8, #0x16
  427070:	add	x8, x8, #0x12
  427074:	ldur	x0, [x29, #-32]
  427078:	str	x8, [sp, #56]
  42707c:	bl	428a2c <client_context_extra_fields_n_iovec>
  427080:	ldr	x8, [sp, #56]
  427084:	add	x2, x8, x0
  427088:	sub	x0, x29, #0x80
  42708c:	sub	x1, x29, #0x60
  427090:	mov	x3, #0x10                  	// #16
  427094:	bl	405c58 <greedy_realloc@plt>
  427098:	cbnz	x0, 4270bc <server_process_entry+0x2c4>
  42709c:	mov	w8, wzr
  4270a0:	mov	w0, w8
  4270a4:	ldr	x1, [sp, #88]
  4270a8:	mov	w2, #0x99                  	// #153
  4270ac:	ldr	x3, [sp, #80]
  4270b0:	bl	405958 <log_oom_internal@plt>
  4270b4:	stur	w0, [x29, #-148]
  4270b8:	b	427934 <server_process_entry+0xb3c>
  4270bc:	ldur	x0, [x29, #-144]
  4270c0:	ldur	x8, [x29, #-160]
  4270c4:	ldur	x9, [x29, #-144]
  4270c8:	subs	x2, x8, x9
  4270cc:	mov	w1, #0x3d                  	// #61
  4270d0:	bl	405788 <memchr@plt>
  4270d4:	stur	x0, [x29, #-168]
  4270d8:	ldur	x8, [x29, #-168]
  4270dc:	cbz	x8, 4272d8 <server_process_entry+0x4e0>
  4270e0:	ldur	x0, [x29, #-144]
  4270e4:	ldur	x8, [x29, #-168]
  4270e8:	ldur	x9, [x29, #-144]
  4270ec:	subs	x1, x8, x9
  4270f0:	mov	w10, wzr
  4270f4:	and	w2, w10, #0x1
  4270f8:	bl	406648 <journal_field_valid@plt>
  4270fc:	tbnz	w0, #0, 427104 <server_process_entry+0x30c>
  427100:	b	4272a8 <server_process_entry+0x4b0>
  427104:	ldur	x8, [x29, #-160]
  427108:	ldur	x9, [x29, #-144]
  42710c:	subs	x8, x8, x9
  427110:	stur	x8, [x29, #-216]
  427114:	ldur	x8, [x29, #-216]
  427118:	mov	x9, #0x30000000            	// #805306368
  42711c:	cmp	x8, x9
  427120:	b.ls	4271a0 <server_process_entry+0x3a8>  // b.plast
  427124:	mov	w8, #0x7                   	// #7
  427128:	stur	w8, [x29, #-220]
  42712c:	stur	wzr, [x29, #-224]
  427130:	stur	wzr, [x29, #-228]
  427134:	ldur	w0, [x29, #-228]
  427138:	bl	405638 <log_get_max_level_realm@plt>
  42713c:	ldur	w8, [x29, #-220]
  427140:	and	w8, w8, #0x7
  427144:	cmp	w0, w8
  427148:	b.lt	427180 <server_process_entry+0x388>  // b.tstop
  42714c:	ldur	w8, [x29, #-228]
  427150:	ldur	w9, [x29, #-220]
  427154:	orr	w0, w9, w8, lsl #10
  427158:	ldur	w1, [x29, #-224]
  42715c:	ldur	x6, [x29, #-216]
  427160:	ldr	x2, [sp, #88]
  427164:	mov	w3, #0xa4                  	// #164
  427168:	ldr	x4, [sp, #80]
  42716c:	adrp	x5, 42f000 <_fini+0x53a8>
  427170:	add	x5, x5, #0xe45
  427174:	bl	405648 <log_internal_realm@plt>
  427178:	str	w0, [sp, #52]
  42717c:	b	427194 <server_process_entry+0x39c>
  427180:	ldur	w0, [x29, #-224]
  427184:	bl	405658 <abs@plt>
  427188:	mov	w8, wzr
  42718c:	subs	w8, w8, w0, uxtb
  427190:	str	w8, [sp, #52]
  427194:	ldr	w8, [sp, #52]
  427198:	stur	w8, [x29, #-232]
  42719c:	b	427934 <server_process_entry+0xb3c>
  4271a0:	ldur	x8, [x29, #-104]
  4271a4:	ldur	x9, [x29, #-216]
  4271a8:	add	x8, x8, x9
  4271ac:	ldur	x9, [x29, #-72]
  4271b0:	add	x8, x8, x9
  4271b4:	add	x8, x8, #0x1
  4271b8:	mov	x9, #0x30200000            	// #807403520
  4271bc:	cmp	x8, x9
  4271c0:	b.ls	427250 <server_process_entry+0x458>  // b.plast
  4271c4:	mov	w8, #0x7                   	// #7
  4271c8:	stur	w8, [x29, #-236]
  4271cc:	stur	wzr, [x29, #-240]
  4271d0:	stur	wzr, [x29, #-244]
  4271d4:	ldur	w0, [x29, #-244]
  4271d8:	bl	405638 <log_get_max_level_realm@plt>
  4271dc:	ldur	w8, [x29, #-236]
  4271e0:	and	w8, w8, #0x7
  4271e4:	cmp	w0, w8
  4271e8:	b.lt	427230 <server_process_entry+0x438>  // b.tstop
  4271ec:	ldur	w8, [x29, #-244]
  4271f0:	ldur	w9, [x29, #-236]
  4271f4:	orr	w0, w9, w8, lsl #10
  4271f8:	ldur	w1, [x29, #-240]
  4271fc:	ldur	x10, [x29, #-104]
  427200:	ldur	x11, [x29, #-216]
  427204:	add	x6, x10, x11
  427208:	ldur	x10, [x29, #-72]
  42720c:	add	x7, x10, #0x1
  427210:	ldr	x2, [sp, #88]
  427214:	mov	w3, #0xaa                  	// #170
  427218:	ldr	x4, [sp, #80]
  42721c:	adrp	x5, 42f000 <_fini+0x53a8>
  427220:	add	x5, x5, #0xe84
  427224:	bl	405648 <log_internal_realm@plt>
  427228:	str	w0, [sp, #48]
  42722c:	b	427244 <server_process_entry+0x44c>
  427230:	ldur	w0, [x29, #-240]
  427234:	bl	405658 <abs@plt>
  427238:	mov	w8, wzr
  42723c:	subs	w8, w8, w0, uxtb
  427240:	str	w8, [sp, #48]
  427244:	ldr	w8, [sp, #48]
  427248:	str	w8, [sp, #248]
  42724c:	b	427934 <server_process_entry+0xb3c>
  427250:	ldur	x8, [x29, #-128]
  427254:	ldur	x9, [x29, #-72]
  427258:	add	x10, x9, #0x1
  42725c:	stur	x10, [x29, #-72]
  427260:	ldur	x10, [x29, #-144]
  427264:	str	x10, [sp, #232]
  427268:	ldur	x10, [x29, #-216]
  42726c:	str	x10, [sp, #240]
  427270:	ldur	q0, [sp, #232]
  427274:	str	q0, [x8, x9, lsl #4]
  427278:	ldur	x8, [x29, #-216]
  42727c:	ldur	x9, [x29, #-104]
  427280:	add	x8, x9, x8
  427284:	stur	x8, [x29, #-104]
  427288:	ldur	x0, [x29, #-144]
  42728c:	ldur	x1, [x29, #-216]
  427290:	ldur	x2, [x29, #-40]
  427294:	sub	x3, x29, #0x84
  427298:	sub	x4, x29, #0x70
  42729c:	sub	x5, x29, #0x78
  4272a0:	sub	x6, x29, #0x88
  4272a4:	bl	428a64 <server_process_entry_meta>
  4272a8:	ldur	x8, [x29, #-160]
  4272ac:	ldur	x9, [x29, #-144]
  4272b0:	subs	x8, x8, x9
  4272b4:	add	x8, x8, #0x1
  4272b8:	ldur	x9, [x29, #-24]
  4272bc:	ldr	x10, [x9]
  4272c0:	subs	x8, x10, x8
  4272c4:	str	x8, [x9]
  4272c8:	ldur	x8, [x29, #-160]
  4272cc:	add	x8, x8, #0x1
  4272d0:	stur	x8, [x29, #-144]
  4272d4:	b	426e84 <server_process_entry+0x8c>
  4272d8:	ldur	x8, [x29, #-24]
  4272dc:	ldr	x8, [x8]
  4272e0:	ldur	x9, [x29, #-160]
  4272e4:	ldur	x10, [x29, #-144]
  4272e8:	subs	x9, x9, x10
  4272ec:	add	x9, x9, #0x1
  4272f0:	add	x9, x9, #0x8
  4272f4:	add	x9, x9, #0x1
  4272f8:	cmp	x8, x9
  4272fc:	b.cs	427378 <server_process_entry+0x580>  // b.hs, b.nlast
  427300:	mov	w8, #0x7                   	// #7
  427304:	str	w8, [sp, #204]
  427308:	str	wzr, [sp, #200]
  42730c:	str	wzr, [sp, #196]
  427310:	ldr	w0, [sp, #196]
  427314:	bl	405638 <log_get_max_level_realm@plt>
  427318:	ldr	w8, [sp, #204]
  42731c:	and	w8, w8, #0x7
  427320:	cmp	w0, w8
  427324:	b.lt	427358 <server_process_entry+0x560>  // b.tstop
  427328:	ldr	w8, [sp, #196]
  42732c:	ldr	w9, [sp, #204]
  427330:	orr	w0, w9, w8, lsl #10
  427334:	ldr	w1, [sp, #200]
  427338:	ldr	x2, [sp, #88]
  42733c:	mov	w3, #0xc2                  	// #194
  427340:	ldr	x4, [sp, #80]
  427344:	adrp	x5, 42f000 <_fini+0x53a8>
  427348:	add	x5, x5, #0xecf
  42734c:	bl	405648 <log_internal_realm@plt>
  427350:	str	w0, [sp, #44]
  427354:	b	42736c <server_process_entry+0x574>
  427358:	ldr	w0, [sp, #200]
  42735c:	bl	405658 <abs@plt>
  427360:	mov	w8, wzr
  427364:	subs	w8, w8, w0, uxtb
  427368:	str	w8, [sp, #44]
  42736c:	ldr	w8, [sp, #44]
  427370:	str	w8, [sp, #192]
  427374:	b	427740 <server_process_entry+0x948>
  427378:	ldur	x8, [x29, #-160]
  42737c:	add	x0, x8, #0x1
  427380:	bl	428d40 <unaligned_read_le64>
  427384:	str	x0, [sp, #224]
  427388:	ldr	x8, [sp, #224]
  42738c:	mov	x9, #0x30000000            	// #805306368
  427390:	cmp	x8, x9
  427394:	b.ls	427414 <server_process_entry+0x61c>  // b.plast
  427398:	mov	w8, #0x7                   	// #7
  42739c:	str	w8, [sp, #188]
  4273a0:	str	wzr, [sp, #184]
  4273a4:	str	wzr, [sp, #180]
  4273a8:	ldr	w0, [sp, #180]
  4273ac:	bl	405638 <log_get_max_level_realm@plt>
  4273b0:	ldr	w8, [sp, #188]
  4273b4:	and	w8, w8, #0x7
  4273b8:	cmp	w0, w8
  4273bc:	b.lt	4273f4 <server_process_entry+0x5fc>  // b.tstop
  4273c0:	ldr	w8, [sp, #180]
  4273c4:	ldr	w9, [sp, #188]
  4273c8:	orr	w0, w9, w8, lsl #10
  4273cc:	ldr	w1, [sp, #184]
  4273d0:	ldr	x6, [sp, #224]
  4273d4:	ldr	x2, [sp, #88]
  4273d8:	mov	w3, #0xc8                  	// #200
  4273dc:	ldr	x4, [sp, #80]
  4273e0:	adrp	x5, 42f000 <_fini+0x53a8>
  4273e4:	add	x5, x5, #0xef2
  4273e8:	bl	405648 <log_internal_realm@plt>
  4273ec:	str	w0, [sp, #40]
  4273f0:	b	427408 <server_process_entry+0x610>
  4273f4:	ldr	w0, [sp, #184]
  4273f8:	bl	405658 <abs@plt>
  4273fc:	mov	w8, wzr
  427400:	subs	w8, w8, w0, uxtb
  427404:	str	w8, [sp, #40]
  427408:	ldr	w8, [sp, #40]
  42740c:	str	w8, [sp, #176]
  427410:	b	427934 <server_process_entry+0xb3c>
  427414:	ldur	x8, [x29, #-160]
  427418:	ldur	x9, [x29, #-144]
  42741c:	subs	x8, x8, x9
  427420:	add	x8, x8, #0x1
  427424:	ldr	x9, [sp, #224]
  427428:	add	x8, x8, x9
  42742c:	str	x8, [sp, #216]
  427430:	ldur	x8, [x29, #-104]
  427434:	ldr	x9, [sp, #216]
  427438:	add	x8, x8, x9
  42743c:	ldur	x9, [x29, #-72]
  427440:	add	x8, x8, x9
  427444:	add	x8, x8, #0x1
  427448:	mov	x9, #0x30200000            	// #807403520
  42744c:	cmp	x8, x9
  427450:	b.ls	4274e0 <server_process_entry+0x6e8>  // b.plast
  427454:	mov	w8, #0x7                   	// #7
  427458:	str	w8, [sp, #172]
  42745c:	str	wzr, [sp, #168]
  427460:	str	wzr, [sp, #164]
  427464:	ldr	w0, [sp, #164]
  427468:	bl	405638 <log_get_max_level_realm@plt>
  42746c:	ldr	w8, [sp, #172]
  427470:	and	w8, w8, #0x7
  427474:	cmp	w0, w8
  427478:	b.lt	4274c0 <server_process_entry+0x6c8>  // b.tstop
  42747c:	ldr	w8, [sp, #164]
  427480:	ldr	w9, [sp, #172]
  427484:	orr	w0, w9, w8, lsl #10
  427488:	ldr	w1, [sp, #168]
  42748c:	ldur	x10, [x29, #-104]
  427490:	ldr	x11, [sp, #216]
  427494:	add	x6, x10, x11
  427498:	ldur	x10, [x29, #-72]
  42749c:	add	x7, x10, #0x1
  4274a0:	ldr	x2, [sp, #88]
  4274a4:	mov	w3, #0xcf                  	// #207
  4274a8:	ldr	x4, [sp, #80]
  4274ac:	adrp	x5, 42f000 <_fini+0x53a8>
  4274b0:	add	x5, x5, #0xf38
  4274b4:	bl	405648 <log_internal_realm@plt>
  4274b8:	str	w0, [sp, #36]
  4274bc:	b	4274d4 <server_process_entry+0x6dc>
  4274c0:	ldr	w0, [sp, #168]
  4274c4:	bl	405658 <abs@plt>
  4274c8:	mov	w8, wzr
  4274cc:	subs	w8, w8, w0, uxtb
  4274d0:	str	w8, [sp, #36]
  4274d4:	ldr	w8, [sp, #36]
  4274d8:	str	w8, [sp, #160]
  4274dc:	b	427934 <server_process_entry+0xb3c>
  4274e0:	ldur	x8, [x29, #-24]
  4274e4:	ldr	x8, [x8]
  4274e8:	ldur	x9, [x29, #-160]
  4274ec:	ldur	x10, [x29, #-144]
  4274f0:	subs	x9, x9, x10
  4274f4:	add	x9, x9, #0x1
  4274f8:	add	x9, x9, #0x8
  4274fc:	ldr	x10, [sp, #224]
  427500:	add	x9, x9, x10
  427504:	add	x9, x9, #0x1
  427508:	cmp	x8, x9
  42750c:	b.cc	427528 <server_process_entry+0x730>  // b.lo, b.ul, b.last
  427510:	ldur	x8, [x29, #-160]
  427514:	ldr	x9, [sp, #224]
  427518:	add	x9, x9, #0x9
  42751c:	ldrb	w10, [x8, x9]
  427520:	cmp	w10, #0xa
  427524:	b.eq	4275a0 <server_process_entry+0x7a8>  // b.none
  427528:	mov	w8, #0x7                   	// #7
  42752c:	str	w8, [sp, #156]
  427530:	str	wzr, [sp, #152]
  427534:	str	wzr, [sp, #148]
  427538:	ldr	w0, [sp, #148]
  42753c:	bl	405638 <log_get_max_level_realm@plt>
  427540:	ldr	w8, [sp, #156]
  427544:	and	w8, w8, #0x7
  427548:	cmp	w0, w8
  42754c:	b.lt	427580 <server_process_entry+0x788>  // b.tstop
  427550:	ldr	w8, [sp, #148]
  427554:	ldr	w9, [sp, #156]
  427558:	orr	w0, w9, w8, lsl #10
  42755c:	ldr	w1, [sp, #152]
  427560:	ldr	x2, [sp, #88]
  427564:	mov	w3, #0xd5                  	// #213
  427568:	ldr	x4, [sp, #80]
  42756c:	adrp	x5, 42f000 <_fini+0x53a8>
  427570:	add	x5, x5, #0xecf
  427574:	bl	405648 <log_internal_realm@plt>
  427578:	str	w0, [sp, #32]
  42757c:	b	427594 <server_process_entry+0x79c>
  427580:	ldr	w0, [sp, #152]
  427584:	bl	405658 <abs@plt>
  427588:	mov	w8, wzr
  42758c:	subs	w8, w8, w0, uxtb
  427590:	str	w8, [sp, #32]
  427594:	ldr	w8, [sp, #32]
  427598:	str	w8, [sp, #144]
  42759c:	b	427740 <server_process_entry+0x948>
  4275a0:	ldr	x0, [sp, #216]
  4275a4:	bl	406378 <malloc@plt>
  4275a8:	str	x0, [sp, #208]
  4275ac:	ldr	x8, [sp, #208]
  4275b0:	cbnz	x8, 4275d0 <server_process_entry+0x7d8>
  4275b4:	mov	w8, wzr
  4275b8:	mov	w0, w8
  4275bc:	ldr	x1, [sp, #88]
  4275c0:	mov	w2, #0xdb                  	// #219
  4275c4:	ldr	x3, [sp, #80]
  4275c8:	bl	405958 <log_oom_internal@plt>
  4275cc:	b	427740 <server_process_entry+0x948>
  4275d0:	ldr	x0, [sp, #208]
  4275d4:	ldur	x1, [x29, #-144]
  4275d8:	ldur	x8, [x29, #-160]
  4275dc:	ldur	x9, [x29, #-144]
  4275e0:	subs	x2, x8, x9
  4275e4:	bl	405af8 <memcpy@plt>
  4275e8:	ldr	x8, [sp, #208]
  4275ec:	ldur	x9, [x29, #-160]
  4275f0:	ldur	x10, [x29, #-144]
  4275f4:	subs	x9, x9, x10
  4275f8:	add	x8, x8, x9
  4275fc:	mov	w11, #0x3d                  	// #61
  427600:	strb	w11, [x8]
  427604:	ldr	x8, [sp, #208]
  427608:	ldur	x9, [x29, #-160]
  42760c:	ldur	x10, [x29, #-144]
  427610:	subs	x9, x9, x10
  427614:	add	x8, x8, x9
  427618:	add	x0, x8, #0x1
  42761c:	ldur	x8, [x29, #-160]
  427620:	add	x1, x8, #0x9
  427624:	ldr	x2, [sp, #224]
  427628:	bl	405af8 <memcpy@plt>
  42762c:	ldur	x0, [x29, #-144]
  427630:	ldur	x8, [x29, #-160]
  427634:	ldur	x9, [x29, #-144]
  427638:	subs	x1, x8, x9
  42763c:	mov	w11, wzr
  427640:	and	w2, w11, #0x1
  427644:	bl	406648 <journal_field_valid@plt>
  427648:	tbnz	w0, #0, 427650 <server_process_entry+0x858>
  42764c:	b	4276ec <server_process_entry+0x8f4>
  427650:	ldur	x8, [x29, #-128]
  427654:	ldur	x9, [x29, #-72]
  427658:	mov	x10, #0x10                  	// #16
  42765c:	ldr	x11, [sp, #208]
  427660:	str	x11, [sp, #128]
  427664:	ldur	x11, [x29, #-160]
  427668:	ldur	x12, [x29, #-144]
  42766c:	subs	x11, x11, x12
  427670:	add	x11, x11, #0x1
  427674:	ldr	x12, [sp, #224]
  427678:	add	x11, x11, x12
  42767c:	str	x11, [sp, #136]
  427680:	ldr	q0, [sp, #128]
  427684:	str	q0, [x8, x9, lsl #4]
  427688:	ldur	x8, [x29, #-128]
  42768c:	ldur	x9, [x29, #-72]
  427690:	mul	x9, x10, x9
  427694:	add	x8, x8, x9
  427698:	ldr	x8, [x8, #8]
  42769c:	ldur	x9, [x29, #-104]
  4276a0:	add	x8, x9, x8
  4276a4:	stur	x8, [x29, #-104]
  4276a8:	ldur	x8, [x29, #-72]
  4276ac:	add	x8, x8, #0x1
  4276b0:	stur	x8, [x29, #-72]
  4276b4:	ldr	x0, [sp, #208]
  4276b8:	ldur	x8, [x29, #-160]
  4276bc:	ldur	x9, [x29, #-144]
  4276c0:	subs	x8, x8, x9
  4276c4:	add	x8, x8, #0x1
  4276c8:	ldr	x9, [sp, #224]
  4276cc:	add	x1, x8, x9
  4276d0:	ldur	x2, [x29, #-40]
  4276d4:	sub	x3, x29, #0x84
  4276d8:	sub	x4, x29, #0x70
  4276dc:	sub	x5, x29, #0x78
  4276e0:	sub	x6, x29, #0x88
  4276e4:	bl	428a64 <server_process_entry_meta>
  4276e8:	b	4276f4 <server_process_entry+0x8fc>
  4276ec:	ldr	x0, [sp, #208]
  4276f0:	bl	405778 <free@plt>
  4276f4:	ldur	x8, [x29, #-160]
  4276f8:	ldur	x9, [x29, #-144]
  4276fc:	subs	x8, x8, x9
  427700:	add	x8, x8, #0x1
  427704:	add	x8, x8, #0x8
  427708:	ldr	x9, [sp, #224]
  42770c:	add	x8, x8, x9
  427710:	add	x8, x8, #0x1
  427714:	ldur	x9, [x29, #-24]
  427718:	ldr	x10, [x9]
  42771c:	subs	x8, x10, x8
  427720:	str	x8, [x9]
  427724:	ldur	x8, [x29, #-160]
  427728:	add	x8, x8, #0x9
  42772c:	ldr	x9, [sp, #224]
  427730:	add	x8, x8, x9
  427734:	add	x8, x8, #0x1
  427738:	stur	x8, [x29, #-144]
  42773c:	b	426e84 <server_process_entry+0x8c>
  427740:	ldur	x8, [x29, #-72]
  427744:	cmp	x8, #0x0
  427748:	cset	w9, hi  // hi = pmore
  42774c:	tbnz	w9, #0, 427754 <server_process_entry+0x95c>
  427750:	b	427934 <server_process_entry+0xb3c>
  427754:	ldur	x8, [x29, #-72]
  427758:	add	x9, x8, #0x1
  42775c:	stur	x9, [x29, #-72]
  427760:	stur	x8, [x29, #-88]
  427764:	ldur	x8, [x29, #-128]
  427768:	ldur	x9, [x29, #-88]
  42776c:	adrp	x10, 42f000 <_fini+0x53a8>
  427770:	add	x10, x10, #0xf7b
  427774:	str	x10, [sp, #112]
  427778:	mov	x10, #0x12                  	// #18
  42777c:	str	x10, [sp, #120]
  427780:	ldr	q0, [sp, #112]
  427784:	str	q0, [x8, x9, lsl #4]
  427788:	ldur	x8, [x29, #-104]
  42778c:	add	x8, x8, #0x12
  427790:	stur	x8, [x29, #-104]
  427794:	ldur	x8, [x29, #-104]
  427798:	ldur	x9, [x29, #-72]
  42779c:	add	x8, x8, x9
  4277a0:	add	x8, x8, #0x1
  4277a4:	mov	x9, #0x30200000            	// #807403520
  4277a8:	cmp	x8, x9
  4277ac:	b.ls	427830 <server_process_entry+0xa38>  // b.plast
  4277b0:	mov	w8, #0x7                   	// #7
  4277b4:	str	w8, [sp, #108]
  4277b8:	str	wzr, [sp, #104]
  4277bc:	str	wzr, [sp, #100]
  4277c0:	ldr	w0, [sp, #100]
  4277c4:	bl	405638 <log_get_max_level_realm@plt>
  4277c8:	ldr	w8, [sp, #108]
  4277cc:	and	w8, w8, #0x7
  4277d0:	cmp	w0, w8
  4277d4:	b.lt	427810 <server_process_entry+0xa18>  // b.tstop
  4277d8:	ldr	w8, [sp, #100]
  4277dc:	ldr	w9, [sp, #108]
  4277e0:	orr	w0, w9, w8, lsl #10
  4277e4:	ldr	w1, [sp, #104]
  4277e8:	ldur	x6, [x29, #-72]
  4277ec:	ldur	x7, [x29, #-104]
  4277f0:	ldr	x2, [sp, #88]
  4277f4:	mov	w3, #0xfd                  	// #253
  4277f8:	ldr	x4, [sp, #80]
  4277fc:	adrp	x5, 42f000 <_fini+0x53a8>
  427800:	add	x5, x5, #0xf8e
  427804:	bl	405648 <log_internal_realm@plt>
  427808:	str	w0, [sp, #28]
  42780c:	b	427824 <server_process_entry+0xa2c>
  427810:	ldr	w0, [sp, #104]
  427814:	bl	405658 <abs@plt>
  427818:	mov	w8, wzr
  42781c:	subs	w8, w8, w0, uxtb
  427820:	str	w8, [sp, #28]
  427824:	ldr	w8, [sp, #28]
  427828:	str	w8, [sp, #96]
  42782c:	b	427934 <server_process_entry+0xb3c>
  427830:	stur	wzr, [x29, #-148]
  427834:	ldur	x0, [x29, #-32]
  427838:	ldur	w1, [x29, #-132]
  42783c:	bl	428d70 <client_context_test_priority>
  427840:	tbnz	w0, #0, 427848 <server_process_entry+0xa50>
  427844:	b	427934 <server_process_entry+0xb3c>
  427848:	ldur	x8, [x29, #-120]
  42784c:	cbz	x8, 427910 <server_process_entry+0xb18>
  427850:	ldur	x8, [x29, #-8]
  427854:	ldrb	w9, [x8, #459]
  427858:	tbnz	w9, #0, 427860 <server_process_entry+0xa68>
  42785c:	b	427898 <server_process_entry+0xaa0>
  427860:	ldur	x0, [x29, #-8]
  427864:	ldur	w8, [x29, #-132]
  427868:	str	x0, [sp, #16]
  42786c:	mov	w0, w8
  427870:	bl	41e0a0 <syslog_fixup_facility>
  427874:	ldur	x2, [x29, #-112]
  427878:	ldur	x3, [x29, #-120]
  42787c:	ldur	x4, [x29, #-40]
  427880:	ldur	x5, [x29, #-48]
  427884:	ldr	x9, [sp, #16]
  427888:	str	w0, [sp, #12]
  42788c:	mov	x0, x9
  427890:	ldr	w1, [sp, #12]
  427894:	bl	41d6e4 <server_forward_syslog>
  427898:	ldur	x8, [x29, #-8]
  42789c:	ldrb	w9, [x8, #458]
  4278a0:	tbnz	w9, #0, 4278a8 <server_process_entry+0xab0>
  4278a4:	b	4278c0 <server_process_entry+0xac8>
  4278a8:	ldur	x0, [x29, #-8]
  4278ac:	ldur	w1, [x29, #-132]
  4278b0:	ldur	x2, [x29, #-112]
  4278b4:	ldur	x3, [x29, #-120]
  4278b8:	ldur	x4, [x29, #-40]
  4278bc:	bl	406e60 <server_forward_kmsg>
  4278c0:	ldur	x8, [x29, #-8]
  4278c4:	ldrb	w9, [x8, #460]
  4278c8:	tbnz	w9, #0, 4278d0 <server_process_entry+0xad8>
  4278cc:	b	4278e8 <server_process_entry+0xaf0>
  4278d0:	ldur	x0, [x29, #-8]
  4278d4:	ldur	w1, [x29, #-132]
  4278d8:	ldur	x2, [x29, #-112]
  4278dc:	ldur	x3, [x29, #-120]
  4278e0:	ldur	x4, [x29, #-40]
  4278e4:	bl	422c20 <server_forward_console>
  4278e8:	ldur	x8, [x29, #-8]
  4278ec:	ldrb	w9, [x8, #461]
  4278f0:	tbnz	w9, #0, 4278f8 <server_process_entry+0xb00>
  4278f4:	b	427910 <server_process_entry+0xb18>
  4278f8:	ldur	x0, [x29, #-8]
  4278fc:	ldur	w1, [x29, #-132]
  427900:	ldur	x2, [x29, #-112]
  427904:	ldur	x3, [x29, #-120]
  427908:	ldur	x4, [x29, #-40]
  42790c:	bl	41ff8c <server_forward_wall>
  427910:	ldur	x0, [x29, #-8]
  427914:	ldur	x1, [x29, #-128]
  427918:	ldur	x2, [x29, #-72]
  42791c:	ldur	x3, [x29, #-96]
  427920:	ldur	x4, [x29, #-32]
  427924:	ldur	x5, [x29, #-48]
  427928:	ldur	w6, [x29, #-132]
  42792c:	ldur	w7, [x29, #-136]
  427930:	bl	40f6d0 <server_dispatch_message>
  427934:	stur	xzr, [x29, #-80]
  427938:	ldur	x8, [x29, #-80]
  42793c:	ldur	x9, [x29, #-72]
  427940:	cmp	x8, x9
  427944:	b.cs	4279dc <server_process_entry+0xbe4>  // b.hs, b.nlast
  427948:	ldur	x8, [x29, #-80]
  42794c:	ldur	x9, [x29, #-88]
  427950:	cmp	x8, x9
  427954:	b.ne	42795c <server_process_entry+0xb64>  // b.any
  427958:	b	4279cc <server_process_entry+0xbd4>
  42795c:	ldur	x8, [x29, #-128]
  427960:	ldur	x9, [x29, #-80]
  427964:	mov	x10, #0x10                  	// #16
  427968:	mul	x9, x10, x9
  42796c:	add	x8, x8, x9
  427970:	ldr	x8, [x8]
  427974:	ldur	x9, [x29, #-16]
  427978:	cmp	x8, x9
  42797c:	b.cc	4279b0 <server_process_entry+0xbb8>  // b.lo, b.ul, b.last
  427980:	ldur	x8, [x29, #-128]
  427984:	ldur	x9, [x29, #-80]
  427988:	mov	x10, #0x10                  	// #16
  42798c:	mul	x9, x10, x9
  427990:	add	x8, x8, x9
  427994:	ldr	x8, [x8]
  427998:	ldur	x9, [x29, #-144]
  42799c:	ldur	x10, [x29, #-24]
  4279a0:	ldr	x10, [x10]
  4279a4:	add	x9, x9, x10
  4279a8:	cmp	x8, x9
  4279ac:	b.cc	4279cc <server_process_entry+0xbd4>  // b.lo, b.ul, b.last
  4279b0:	ldur	x8, [x29, #-128]
  4279b4:	ldur	x9, [x29, #-80]
  4279b8:	mov	x10, #0x10                  	// #16
  4279bc:	mul	x9, x10, x9
  4279c0:	add	x8, x8, x9
  4279c4:	ldr	x0, [x8]
  4279c8:	bl	405778 <free@plt>
  4279cc:	ldur	x8, [x29, #-80]
  4279d0:	add	x8, x8, #0x1
  4279d4:	stur	x8, [x29, #-80]
  4279d8:	b	427938 <server_process_entry+0xb40>
  4279dc:	ldur	x0, [x29, #-128]
  4279e0:	bl	405778 <free@plt>
  4279e4:	ldur	x0, [x29, #-112]
  4279e8:	bl	405778 <free@plt>
  4279ec:	ldur	x0, [x29, #-120]
  4279f0:	bl	405778 <free@plt>
  4279f4:	ldur	w0, [x29, #-148]
  4279f8:	add	sp, sp, #0x1f0
  4279fc:	ldr	x28, [sp, #16]
  427a00:	ldp	x29, x30, [sp], #32
  427a04:	ret

0000000000427a08 <server_process_native_file>:
  427a08:	stp	x29, x30, [sp, #-32]!
  427a0c:	str	x28, [sp, #16]
  427a10:	mov	x29, sp
  427a14:	sub	sp, sp, #0x290
  427a18:	adrp	x8, 42f000 <_fini+0x53a8>
  427a1c:	add	x8, x8, #0x94b
  427a20:	add	x8, x8, #0x3
  427a24:	adrp	x9, 42f000 <_fini+0x53a8>
  427a28:	add	x9, x9, #0xa9f
  427a2c:	adrp	x10, 42f000 <_fini+0x53a8>
  427a30:	add	x10, x10, #0xa2c
  427a34:	stur	x0, [x29, #-8]
  427a38:	stur	w1, [x29, #-12]
  427a3c:	stur	x2, [x29, #-24]
  427a40:	stur	x3, [x29, #-32]
  427a44:	stur	x4, [x29, #-40]
  427a48:	stur	x5, [x29, #-48]
  427a4c:	str	x8, [sp, #88]
  427a50:	str	x9, [sp, #80]
  427a54:	str	x10, [sp, #72]
  427a58:	ldur	x8, [x29, #-8]
  427a5c:	cmp	x8, #0x0
  427a60:	cset	w9, ne  // ne = any
  427a64:	mov	w10, #0x1                   	// #1
  427a68:	eor	w9, w9, #0x1
  427a6c:	eor	w9, w9, w10
  427a70:	eor	w9, w9, w10
  427a74:	and	w9, w9, #0x1
  427a78:	mov	w0, w9
  427a7c:	sxtw	x8, w0
  427a80:	cbz	x8, 427aa4 <server_process_native_file+0x9c>
  427a84:	mov	w8, wzr
  427a88:	mov	w0, w8
  427a8c:	adrp	x1, 429000 <journal_ratelimit_group_free+0x70>
  427a90:	add	x1, x1, #0xdc8
  427a94:	ldr	x2, [sp, #88]
  427a98:	mov	w3, #0x14f                 	// #335
  427a9c:	ldr	x4, [sp, #72]
  427aa0:	bl	405718 <log_assert_failed_realm@plt>
  427aa4:	ldur	w8, [x29, #-12]
  427aa8:	cmp	w8, #0x0
  427aac:	cset	w8, ge  // ge = tcont
  427ab0:	mov	w9, #0x1                   	// #1
  427ab4:	eor	w8, w8, #0x1
  427ab8:	eor	w8, w8, w9
  427abc:	eor	w8, w8, w9
  427ac0:	and	w8, w8, #0x1
  427ac4:	mov	w0, w8
  427ac8:	sxtw	x10, w0
  427acc:	cbz	x10, 427af0 <server_process_native_file+0xe8>
  427ad0:	mov	w8, wzr
  427ad4:	mov	w0, w8
  427ad8:	adrp	x1, 42d000 <_fini+0x33a8>
  427adc:	add	x1, x1, #0x4cf
  427ae0:	ldr	x2, [sp, #88]
  427ae4:	mov	w3, #0x150                 	// #336
  427ae8:	ldr	x4, [sp, #72]
  427aec:	bl	405718 <log_assert_failed_realm@plt>
  427af0:	ldur	w0, [x29, #-12]
  427af4:	bl	4066d8 <memfd_get_sealed@plt>
  427af8:	cmp	w0, #0x0
  427afc:	cset	w8, gt
  427b00:	and	w8, w8, #0x1
  427b04:	sturb	w8, [x29, #-177]
  427b08:	ldurb	w8, [x29, #-177]
  427b0c:	tbnz	w8, #0, 427d2c <server_process_native_file+0x324>
  427b10:	ldur	x8, [x29, #-24]
  427b14:	cbz	x8, 427b24 <server_process_native_file+0x11c>
  427b18:	ldur	x8, [x29, #-24]
  427b1c:	ldr	w9, [x8, #4]
  427b20:	cbz	w9, 427d2c <server_process_native_file+0x324>
  427b24:	sub	x1, x29, #0xc0
  427b28:	mov	x8, xzr
  427b2c:	stur	x8, [x29, #-192]
  427b30:	ldur	w0, [x29, #-12]
  427b34:	bl	4066e8 <fd_get_path@plt>
  427b38:	stur	w0, [x29, #-184]
  427b3c:	ldur	w9, [x29, #-184]
  427b40:	cmp	w9, #0x0
  427b44:	cset	w9, ge  // ge = tcont
  427b48:	tbnz	w9, #0, 427bd4 <server_process_native_file+0x1cc>
  427b4c:	mov	w8, #0x3                   	// #3
  427b50:	stur	w8, [x29, #-204]
  427b54:	ldur	w8, [x29, #-184]
  427b58:	stur	w8, [x29, #-208]
  427b5c:	stur	wzr, [x29, #-212]
  427b60:	ldur	w0, [x29, #-212]
  427b64:	bl	405638 <log_get_max_level_realm@plt>
  427b68:	ldur	w8, [x29, #-204]
  427b6c:	and	w8, w8, #0x7
  427b70:	cmp	w0, w8
  427b74:	b.lt	427bac <server_process_native_file+0x1a4>  // b.tstop
  427b78:	ldur	w8, [x29, #-212]
  427b7c:	ldur	w9, [x29, #-204]
  427b80:	orr	w0, w9, w8, lsl #10
  427b84:	ldur	w1, [x29, #-208]
  427b88:	ldur	w6, [x29, #-12]
  427b8c:	ldr	x2, [sp, #88]
  427b90:	mov	w3, #0x15f                 	// #351
  427b94:	ldr	x4, [sp, #80]
  427b98:	adrp	x5, 42f000 <_fini+0x53a8>
  427b9c:	add	x5, x5, #0xaba
  427ba0:	bl	405648 <log_internal_realm@plt>
  427ba4:	str	w0, [sp, #68]
  427ba8:	b	427bc0 <server_process_native_file+0x1b8>
  427bac:	ldur	w0, [x29, #-208]
  427bb0:	bl	405658 <abs@plt>
  427bb4:	mov	w8, wzr
  427bb8:	subs	w8, w8, w0, uxtb
  427bbc:	str	w8, [sp, #68]
  427bc0:	ldr	w8, [sp, #68]
  427bc4:	stur	w8, [x29, #-216]
  427bc8:	mov	w8, #0x1                   	// #1
  427bcc:	stur	w8, [x29, #-220]
  427bd0:	b	427d14 <server_process_native_file+0x30c>
  427bd4:	ldur	x0, [x29, #-192]
  427bd8:	adrp	x8, 450000 <prefix_timestamp.cached_printk_time>
  427bdc:	add	x8, x8, #0x10
  427be0:	ldr	q0, [x8]
  427be4:	sub	x1, x29, #0x100
  427be8:	stur	q0, [x29, #-256]
  427bec:	ldr	q0, [x8, #16]
  427bf0:	stur	q0, [x29, #-240]
  427bf4:	bl	4066f8 <path_startswith_strv@plt>
  427bf8:	stur	x0, [x29, #-200]
  427bfc:	ldur	x8, [x29, #-200]
  427c00:	cbnz	x8, 427c84 <server_process_native_file+0x27c>
  427c04:	mov	w8, #0x3                   	// #3
  427c08:	str	w8, [sp, #396]
  427c0c:	str	wzr, [sp, #392]
  427c10:	str	wzr, [sp, #388]
  427c14:	ldr	w0, [sp, #388]
  427c18:	bl	405638 <log_get_max_level_realm@plt>
  427c1c:	ldr	w8, [sp, #396]
  427c20:	and	w8, w8, #0x7
  427c24:	cmp	w0, w8
  427c28:	b.lt	427c5c <server_process_native_file+0x254>  // b.tstop
  427c2c:	ldr	w8, [sp, #388]
  427c30:	ldr	w9, [sp, #396]
  427c34:	orr	w0, w9, w8, lsl #10
  427c38:	ldr	w1, [sp, #392]
  427c3c:	ldr	x2, [sp, #88]
  427c40:	mov	w3, #0x165                 	// #357
  427c44:	ldr	x4, [sp, #80]
  427c48:	adrp	x5, 42f000 <_fini+0x53a8>
  427c4c:	add	x5, x5, #0xafa
  427c50:	bl	405648 <log_internal_realm@plt>
  427c54:	str	w0, [sp, #64]
  427c58:	b	427c70 <server_process_native_file+0x268>
  427c5c:	ldr	w0, [sp, #392]
  427c60:	bl	405658 <abs@plt>
  427c64:	mov	w8, wzr
  427c68:	subs	w8, w8, w0, uxtb
  427c6c:	str	w8, [sp, #64]
  427c70:	ldr	w8, [sp, #64]
  427c74:	str	w8, [sp, #384]
  427c78:	mov	w8, #0x1                   	// #1
  427c7c:	stur	w8, [x29, #-220]
  427c80:	b	427d14 <server_process_native_file+0x30c>
  427c84:	ldur	x0, [x29, #-200]
  427c88:	bl	406708 <filename_is_valid@plt>
  427c8c:	tbnz	w0, #0, 427d10 <server_process_native_file+0x308>
  427c90:	mov	w8, #0x3                   	// #3
  427c94:	str	w8, [sp, #380]
  427c98:	str	wzr, [sp, #376]
  427c9c:	str	wzr, [sp, #372]
  427ca0:	ldr	w0, [sp, #372]
  427ca4:	bl	405638 <log_get_max_level_realm@plt>
  427ca8:	ldr	w8, [sp, #380]
  427cac:	and	w8, w8, #0x7
  427cb0:	cmp	w0, w8
  427cb4:	b.lt	427ce8 <server_process_native_file+0x2e0>  // b.tstop
  427cb8:	ldr	w8, [sp, #372]
  427cbc:	ldr	w9, [sp, #380]
  427cc0:	orr	w0, w9, w8, lsl #10
  427cc4:	ldr	w1, [sp, #376]
  427cc8:	ldr	x2, [sp, #88]
  427ccc:	mov	w3, #0x16a                 	// #362
  427cd0:	ldr	x4, [sp, #80]
  427cd4:	adrp	x5, 42f000 <_fini+0x53a8>
  427cd8:	add	x5, x5, #0xb32
  427cdc:	bl	405648 <log_internal_realm@plt>
  427ce0:	str	w0, [sp, #60]
  427ce4:	b	427cfc <server_process_native_file+0x2f4>
  427ce8:	ldr	w0, [sp, #376]
  427cec:	bl	405658 <abs@plt>
  427cf0:	mov	w8, wzr
  427cf4:	subs	w8, w8, w0, uxtb
  427cf8:	str	w8, [sp, #60]
  427cfc:	ldr	w8, [sp, #60]
  427d00:	str	w8, [sp, #368]
  427d04:	mov	w8, #0x1                   	// #1
  427d08:	stur	w8, [x29, #-220]
  427d0c:	b	427d14 <server_process_native_file+0x30c>
  427d10:	stur	wzr, [x29, #-220]
  427d14:	sub	x0, x29, #0xc0
  427d18:	bl	428384 <freep>
  427d1c:	ldur	w8, [x29, #-220]
  427d20:	cbz	w8, 427d2c <server_process_native_file+0x324>
  427d24:	b	427d28 <server_process_native_file+0x320>
  427d28:	b	428374 <server_process_native_file+0x96c>
  427d2c:	ldur	w0, [x29, #-12]
  427d30:	sub	x1, x29, #0xb0
  427d34:	bl	429c28 <fstat64>
  427d38:	cmp	w0, #0x0
  427d3c:	cset	w8, ge  // ge = tcont
  427d40:	tbnz	w8, #0, 427dc4 <server_process_native_file+0x3bc>
  427d44:	mov	w8, #0x3                   	// #3
  427d48:	str	w8, [sp, #364]
  427d4c:	bl	405768 <__errno_location@plt>
  427d50:	ldr	w8, [x0]
  427d54:	str	w8, [sp, #360]
  427d58:	str	wzr, [sp, #356]
  427d5c:	ldr	w0, [sp, #356]
  427d60:	bl	405638 <log_get_max_level_realm@plt>
  427d64:	ldr	w8, [sp, #364]
  427d68:	and	w8, w8, #0x7
  427d6c:	cmp	w0, w8
  427d70:	b.lt	427da4 <server_process_native_file+0x39c>  // b.tstop
  427d74:	ldr	w8, [sp, #356]
  427d78:	ldr	w9, [sp, #364]
  427d7c:	orr	w0, w9, w8, lsl #10
  427d80:	ldr	w1, [sp, #360]
  427d84:	ldr	x2, [sp, #88]
  427d88:	mov	w3, #0x170                 	// #368
  427d8c:	ldr	x4, [sp, #80]
  427d90:	adrp	x5, 42f000 <_fini+0x53a8>
  427d94:	add	x5, x5, #0xb72
  427d98:	bl	405648 <log_internal_realm@plt>
  427d9c:	str	w0, [sp, #56]
  427da0:	b	427db8 <server_process_native_file+0x3b0>
  427da4:	ldr	w0, [sp, #360]
  427da8:	bl	405658 <abs@plt>
  427dac:	mov	w8, wzr
  427db0:	subs	w8, w8, w0, uxtb
  427db4:	str	w8, [sp, #56]
  427db8:	ldr	w8, [sp, #56]
  427dbc:	str	w8, [sp, #352]
  427dc0:	b	428374 <server_process_native_file+0x96c>
  427dc4:	ldur	w8, [x29, #-160]
  427dc8:	and	w8, w8, #0xf000
  427dcc:	cmp	w8, #0x8, lsl #12
  427dd0:	b.eq	427e4c <server_process_native_file+0x444>  // b.none
  427dd4:	mov	w8, #0x3                   	// #3
  427dd8:	str	w8, [sp, #348]
  427ddc:	str	wzr, [sp, #344]
  427de0:	str	wzr, [sp, #340]
  427de4:	ldr	w0, [sp, #340]
  427de8:	bl	405638 <log_get_max_level_realm@plt>
  427dec:	ldr	w8, [sp, #348]
  427df0:	and	w8, w8, #0x7
  427df4:	cmp	w0, w8
  427df8:	b.lt	427e2c <server_process_native_file+0x424>  // b.tstop
  427dfc:	ldr	w8, [sp, #340]
  427e00:	ldr	w9, [sp, #348]
  427e04:	orr	w0, w9, w8, lsl #10
  427e08:	ldr	w1, [sp, #344]
  427e0c:	ldr	x2, [sp, #88]
  427e10:	mov	w3, #0x175                 	// #373
  427e14:	ldr	x4, [sp, #80]
  427e18:	adrp	x5, 42f000 <_fini+0x53a8>
  427e1c:	add	x5, x5, #0xb9b
  427e20:	bl	405648 <log_internal_realm@plt>
  427e24:	str	w0, [sp, #52]
  427e28:	b	427e40 <server_process_native_file+0x438>
  427e2c:	ldr	w0, [sp, #344]
  427e30:	bl	405658 <abs@plt>
  427e34:	mov	w8, wzr
  427e38:	subs	w8, w8, w0, uxtb
  427e3c:	str	w8, [sp, #52]
  427e40:	ldr	w8, [sp, #52]
  427e44:	str	w8, [sp, #336]
  427e48:	b	428374 <server_process_native_file+0x96c>
  427e4c:	ldur	x8, [x29, #-128]
  427e50:	cmp	x8, #0x0
  427e54:	cset	w9, gt
  427e58:	tbnz	w9, #0, 427e60 <server_process_native_file+0x458>
  427e5c:	b	428374 <server_process_native_file+0x96c>
  427e60:	ldur	x8, [x29, #-128]
  427e64:	ldurb	w9, [x29, #-177]
  427e68:	mov	w10, #0x2                   	// #2
  427e6c:	mov	w11, #0x1                   	// #1
  427e70:	tst	w9, #0x1
  427e74:	csel	w9, w11, w10, ne  // ne = any
  427e78:	mov	w10, #0x30200000            	// #807403520
  427e7c:	udiv	w9, w10, w9
  427e80:	mov	w12, w9
  427e84:	ubfx	x12, x12, #0, #32
  427e88:	cmp	x8, x12
  427e8c:	b.le	427f0c <server_process_native_file+0x504>
  427e90:	mov	w8, #0x3                   	// #3
  427e94:	str	w8, [sp, #332]
  427e98:	str	wzr, [sp, #328]
  427e9c:	str	wzr, [sp, #324]
  427ea0:	ldr	w0, [sp, #324]
  427ea4:	bl	405638 <log_get_max_level_realm@plt>
  427ea8:	ldr	w8, [sp, #332]
  427eac:	and	w8, w8, #0x7
  427eb0:	cmp	w0, w8
  427eb4:	b.lt	427eec <server_process_native_file+0x4e4>  // b.tstop
  427eb8:	ldr	w8, [sp, #324]
  427ebc:	ldr	w9, [sp, #332]
  427ec0:	orr	w0, w9, w8, lsl #10
  427ec4:	ldr	w1, [sp, #328]
  427ec8:	ldur	x6, [x29, #-128]
  427ecc:	ldr	x2, [sp, #88]
  427ed0:	mov	w3, #0x17f                 	// #383
  427ed4:	ldr	x4, [sp, #80]
  427ed8:	adrp	x5, 42f000 <_fini+0x53a8>
  427edc:	add	x5, x5, #0xbc1
  427ee0:	bl	405648 <log_internal_realm@plt>
  427ee4:	str	w0, [sp, #48]
  427ee8:	b	427f00 <server_process_native_file+0x4f8>
  427eec:	ldr	w0, [sp, #328]
  427ef0:	bl	405658 <abs@plt>
  427ef4:	mov	w8, wzr
  427ef8:	subs	w8, w8, w0, uxtb
  427efc:	str	w8, [sp, #48]
  427f00:	ldr	w8, [sp, #48]
  427f04:	str	w8, [sp, #320]
  427f08:	b	428374 <server_process_native_file+0x96c>
  427f0c:	ldurb	w8, [x29, #-177]
  427f10:	tbnz	w8, #0, 427f18 <server_process_native_file+0x510>
  427f14:	b	428068 <server_process_native_file+0x660>
  427f18:	ldur	x0, [x29, #-128]
  427f1c:	str	x0, [sp, #40]
  427f20:	bl	405c48 <page_size@plt>
  427f24:	ldr	x8, [sp, #40]
  427f28:	str	x0, [sp, #32]
  427f2c:	mov	x0, x8
  427f30:	ldr	x1, [sp, #32]
  427f34:	bl	4283ac <ALIGN_TO>
  427f38:	str	x0, [sp, #304]
  427f3c:	ldr	x1, [sp, #304]
  427f40:	ldur	w4, [x29, #-12]
  427f44:	mov	x8, xzr
  427f48:	mov	x0, x8
  427f4c:	mov	w2, #0x1                   	// #1
  427f50:	mov	w3, #0x2                   	// #2
  427f54:	mov	x5, x8
  427f58:	bl	4058e8 <mmap64@plt>
  427f5c:	str	x0, [sp, #312]
  427f60:	ldr	x8, [sp, #312]
  427f64:	mov	x9, #0xffffffffffffffff    	// #-1
  427f68:	cmp	x8, x9
  427f6c:	b.ne	427ff0 <server_process_native_file+0x5e8>  // b.any
  427f70:	mov	w8, #0x3                   	// #3
  427f74:	str	w8, [sp, #300]
  427f78:	bl	405768 <__errno_location@plt>
  427f7c:	ldr	w8, [x0]
  427f80:	str	w8, [sp, #296]
  427f84:	str	wzr, [sp, #292]
  427f88:	ldr	w0, [sp, #292]
  427f8c:	bl	405638 <log_get_max_level_realm@plt>
  427f90:	ldr	w8, [sp, #300]
  427f94:	and	w8, w8, #0x7
  427f98:	cmp	w0, w8
  427f9c:	b.lt	427fd0 <server_process_native_file+0x5c8>  // b.tstop
  427fa0:	ldr	w8, [sp, #292]
  427fa4:	ldr	w9, [sp, #300]
  427fa8:	orr	w0, w9, w8, lsl #10
  427fac:	ldr	w1, [sp, #296]
  427fb0:	ldr	x2, [sp, #88]
  427fb4:	mov	w3, #0x18c                 	// #396
  427fb8:	ldr	x4, [sp, #80]
  427fbc:	adrp	x5, 42f000 <_fini+0x53a8>
  427fc0:	add	x5, x5, #0xbee
  427fc4:	bl	405648 <log_internal_realm@plt>
  427fc8:	str	w0, [sp, #28]
  427fcc:	b	427fe4 <server_process_native_file+0x5dc>
  427fd0:	ldr	w0, [sp, #296]
  427fd4:	bl	405658 <abs@plt>
  427fd8:	mov	w8, wzr
  427fdc:	subs	w8, w8, w0, uxtb
  427fe0:	str	w8, [sp, #28]
  427fe4:	ldr	w8, [sp, #28]
  427fe8:	str	w8, [sp, #288]
  427fec:	b	428374 <server_process_native_file+0x96c>
  427ff0:	ldur	x0, [x29, #-8]
  427ff4:	ldr	x1, [sp, #312]
  427ff8:	ldur	x2, [x29, #-128]
  427ffc:	ldur	x3, [x29, #-24]
  428000:	ldur	x4, [x29, #-32]
  428004:	ldur	x5, [x29, #-40]
  428008:	ldur	x6, [x29, #-48]
  42800c:	bl	426bb0 <server_process_native_message>
  428010:	ldr	x0, [sp, #312]
  428014:	ldr	x1, [sp, #304]
  428018:	bl	405f18 <munmap@plt>
  42801c:	cmp	w0, #0x0
  428020:	cset	w8, ge  // ge = tcont
  428024:	mov	w9, #0x1                   	// #1
  428028:	eor	w8, w8, #0x1
  42802c:	eor	w8, w8, w9
  428030:	eor	w8, w8, w9
  428034:	and	w8, w8, #0x1
  428038:	mov	w1, w8
  42803c:	sxtw	x10, w1
  428040:	cbz	x10, 428064 <server_process_native_file+0x65c>
  428044:	mov	w8, wzr
  428048:	mov	w0, w8
  42804c:	adrp	x1, 42f000 <_fini+0x53a8>
  428050:	add	x1, x1, #0xc10
  428054:	ldr	x2, [sp, #88]
  428058:	mov	w3, #0x191                 	// #401
  42805c:	ldr	x4, [sp, #72]
  428060:	bl	405718 <log_assert_failed_realm@plt>
  428064:	b	428374 <server_process_native_file+0x96c>
  428068:	mov	x8, xzr
  42806c:	str	x8, [sp, #280]
  428070:	ldur	w0, [x29, #-12]
  428074:	add	x1, sp, #0xa8
  428078:	bl	405f88 <fstatvfs64@plt>
  42807c:	cmp	w0, #0x0
  428080:	cset	w9, ge  // ge = tcont
  428084:	tbnz	w9, #0, 428110 <server_process_native_file+0x708>
  428088:	mov	w8, #0x3                   	// #3
  42808c:	str	w8, [sp, #156]
  428090:	bl	405768 <__errno_location@plt>
  428094:	ldr	w8, [x0]
  428098:	str	w8, [sp, #152]
  42809c:	str	wzr, [sp, #148]
  4280a0:	ldr	w0, [sp, #148]
  4280a4:	bl	405638 <log_get_max_level_realm@plt>
  4280a8:	ldr	w8, [sp, #156]
  4280ac:	and	w8, w8, #0x7
  4280b0:	cmp	w0, w8
  4280b4:	b.lt	4280e8 <server_process_native_file+0x6e0>  // b.tstop
  4280b8:	ldr	w8, [sp, #148]
  4280bc:	ldr	w9, [sp, #156]
  4280c0:	orr	w0, w9, w8, lsl #10
  4280c4:	ldr	w1, [sp, #152]
  4280c8:	ldr	x2, [sp, #88]
  4280cc:	mov	w3, #0x198                 	// #408
  4280d0:	ldr	x4, [sp, #80]
  4280d4:	adrp	x5, 42f000 <_fini+0x53a8>
  4280d8:	add	x5, x5, #0xc23
  4280dc:	bl	405648 <log_internal_realm@plt>
  4280e0:	str	w0, [sp, #24]
  4280e4:	b	4280fc <server_process_native_file+0x6f4>
  4280e8:	ldr	w0, [sp, #152]
  4280ec:	bl	405658 <abs@plt>
  4280f0:	mov	w8, wzr
  4280f4:	subs	w8, w8, w0, uxtb
  4280f8:	str	w8, [sp, #24]
  4280fc:	ldr	w8, [sp, #24]
  428100:	str	w8, [sp, #144]
  428104:	mov	w8, #0x1                   	// #1
  428108:	stur	w8, [x29, #-220]
  42810c:	b	42835c <server_process_native_file+0x954>
  428110:	ldr	x8, [sp, #240]
  428114:	and	x8, x8, #0x40
  428118:	cbz	x8, 42819c <server_process_native_file+0x794>
  42811c:	mov	w8, #0x3                   	// #3
  428120:	str	w8, [sp, #140]
  428124:	str	wzr, [sp, #136]
  428128:	str	wzr, [sp, #132]
  42812c:	ldr	w0, [sp, #132]
  428130:	bl	405638 <log_get_max_level_realm@plt>
  428134:	ldr	w8, [sp, #140]
  428138:	and	w8, w8, #0x7
  42813c:	cmp	w0, w8
  428140:	b.lt	428174 <server_process_native_file+0x76c>  // b.tstop
  428144:	ldr	w8, [sp, #132]
  428148:	ldr	w9, [sp, #140]
  42814c:	orr	w0, w9, w8, lsl #10
  428150:	ldr	w1, [sp, #136]
  428154:	ldr	x2, [sp, #88]
  428158:	mov	w3, #0x1a2                 	// #418
  42815c:	ldr	x4, [sp, #80]
  428160:	adrp	x5, 42f000 <_fini+0x53a8>
  428164:	add	x5, x5, #0xc64
  428168:	bl	405648 <log_internal_realm@plt>
  42816c:	str	w0, [sp, #20]
  428170:	b	428188 <server_process_native_file+0x780>
  428174:	ldr	w0, [sp, #136]
  428178:	bl	405658 <abs@plt>
  42817c:	mov	w8, wzr
  428180:	subs	w8, w8, w0, uxtb
  428184:	str	w8, [sp, #20]
  428188:	ldr	w8, [sp, #20]
  42818c:	str	w8, [sp, #128]
  428190:	mov	w8, #0x1                   	// #1
  428194:	stur	w8, [x29, #-220]
  428198:	b	42835c <server_process_native_file+0x954>
  42819c:	ldur	w0, [x29, #-12]
  4281a0:	mov	w8, #0x1                   	// #1
  4281a4:	and	w1, w8, #0x1
  4281a8:	bl	406218 <fd_nonblock@plt>
  4281ac:	stur	w0, [x29, #-184]
  4281b0:	ldur	w8, [x29, #-184]
  4281b4:	cmp	w8, #0x0
  4281b8:	cset	w8, ge  // ge = tcont
  4281bc:	tbnz	w8, #0, 428244 <server_process_native_file+0x83c>
  4281c0:	mov	w8, #0x3                   	// #3
  4281c4:	str	w8, [sp, #124]
  4281c8:	ldur	w8, [x29, #-184]
  4281cc:	str	w8, [sp, #120]
  4281d0:	str	wzr, [sp, #116]
  4281d4:	ldr	w0, [sp, #116]
  4281d8:	bl	405638 <log_get_max_level_realm@plt>
  4281dc:	ldr	w8, [sp, #124]
  4281e0:	and	w8, w8, #0x7
  4281e4:	cmp	w0, w8
  4281e8:	b.lt	42821c <server_process_native_file+0x814>  // b.tstop
  4281ec:	ldr	w8, [sp, #116]
  4281f0:	ldr	w9, [sp, #124]
  4281f4:	orr	w0, w9, w8, lsl #10
  4281f8:	ldr	w1, [sp, #120]
  4281fc:	ldr	x2, [sp, #88]
  428200:	mov	w3, #0x1af                 	// #431
  428204:	ldr	x4, [sp, #80]
  428208:	adrp	x5, 42f000 <_fini+0x53a8>
  42820c:	add	x5, x5, #0xcc1
  428210:	bl	405648 <log_internal_realm@plt>
  428214:	str	w0, [sp, #16]
  428218:	b	428230 <server_process_native_file+0x828>
  42821c:	ldr	w0, [sp, #120]
  428220:	bl	405658 <abs@plt>
  428224:	mov	w8, wzr
  428228:	subs	w8, w8, w0, uxtb
  42822c:	str	w8, [sp, #16]
  428230:	ldr	w8, [sp, #16]
  428234:	str	w8, [sp, #112]
  428238:	mov	w8, #0x1                   	// #1
  42823c:	stur	w8, [x29, #-220]
  428240:	b	42835c <server_process_native_file+0x954>
  428244:	ldur	x0, [x29, #-128]
  428248:	bl	406378 <malloc@plt>
  42824c:	str	x0, [sp, #280]
  428250:	ldr	x8, [sp, #280]
  428254:	cbnz	x8, 42827c <server_process_native_file+0x874>
  428258:	mov	w8, wzr
  42825c:	mov	w0, w8
  428260:	ldr	x1, [sp, #88]
  428264:	mov	w2, #0x1b9                 	// #441
  428268:	ldr	x3, [sp, #80]
  42826c:	bl	405958 <log_oom_internal@plt>
  428270:	mov	w8, #0x1                   	// #1
  428274:	stur	w8, [x29, #-220]
  428278:	b	42835c <server_process_native_file+0x954>
  42827c:	ldur	w0, [x29, #-12]
  428280:	ldr	x1, [sp, #280]
  428284:	ldur	x2, [x29, #-128]
  428288:	mov	x8, xzr
  42828c:	mov	x3, x8
  428290:	bl	406718 <pread64@plt>
  428294:	str	x0, [sp, #160]
  428298:	ldr	x8, [sp, #160]
  42829c:	cmp	x8, #0x0
  4282a0:	cset	w9, ge  // ge = tcont
  4282a4:	tbnz	w9, #0, 428328 <server_process_native_file+0x920>
  4282a8:	mov	w8, #0x3                   	// #3
  4282ac:	str	w8, [sp, #108]
  4282b0:	bl	405768 <__errno_location@plt>
  4282b4:	ldr	w8, [x0]
  4282b8:	str	w8, [sp, #104]
  4282bc:	str	wzr, [sp, #100]
  4282c0:	ldr	w0, [sp, #100]
  4282c4:	bl	405638 <log_get_max_level_realm@plt>
  4282c8:	ldr	w8, [sp, #108]
  4282cc:	and	w8, w8, #0x7
  4282d0:	cmp	w0, w8
  4282d4:	b.lt	428308 <server_process_native_file+0x900>  // b.tstop
  4282d8:	ldr	w8, [sp, #100]
  4282dc:	ldr	w9, [sp, #108]
  4282e0:	orr	w0, w9, w8, lsl #10
  4282e4:	ldr	w1, [sp, #104]
  4282e8:	ldr	x2, [sp, #88]
  4282ec:	mov	w3, #0x1bf                 	// #447
  4282f0:	ldr	x4, [sp, #80]
  4282f4:	adrp	x5, 42f000 <_fini+0x53a8>
  4282f8:	add	x5, x5, #0xcf7
  4282fc:	bl	405648 <log_internal_realm@plt>
  428300:	str	w0, [sp, #12]
  428304:	b	42831c <server_process_native_file+0x914>
  428308:	ldr	w0, [sp, #104]
  42830c:	bl	405658 <abs@plt>
  428310:	mov	w8, wzr
  428314:	subs	w8, w8, w0, uxtb
  428318:	str	w8, [sp, #12]
  42831c:	ldr	w8, [sp, #12]
  428320:	str	w8, [sp, #96]
  428324:	b	428358 <server_process_native_file+0x950>
  428328:	ldr	x8, [sp, #160]
  42832c:	cmp	x8, #0x0
  428330:	cset	w9, le
  428334:	tbnz	w9, #0, 428358 <server_process_native_file+0x950>
  428338:	ldur	x0, [x29, #-8]
  42833c:	ldr	x1, [sp, #280]
  428340:	ldr	x2, [sp, #160]
  428344:	ldur	x3, [x29, #-24]
  428348:	ldur	x4, [x29, #-32]
  42834c:	ldur	x5, [x29, #-40]
  428350:	ldur	x6, [x29, #-48]
  428354:	bl	426bb0 <server_process_native_message>
  428358:	stur	wzr, [x29, #-220]
  42835c:	add	x0, sp, #0x118
  428360:	bl	428384 <freep>
  428364:	ldur	w8, [x29, #-220]
  428368:	cbz	w8, 428374 <server_process_native_file+0x96c>
  42836c:	b	428370 <server_process_native_file+0x968>
  428370:	b	428374 <server_process_native_file+0x96c>
  428374:	add	sp, sp, #0x290
  428378:	ldr	x28, [sp, #16]
  42837c:	ldp	x29, x30, [sp], #32
  428380:	ret

0000000000428384 <freep>:
  428384:	sub	sp, sp, #0x20
  428388:	stp	x29, x30, [sp, #16]
  42838c:	add	x29, sp, #0x10
  428390:	str	x0, [sp, #8]
  428394:	ldr	x8, [sp, #8]
  428398:	ldr	x0, [x8]
  42839c:	bl	405778 <free@plt>
  4283a0:	ldp	x29, x30, [sp, #16]
  4283a4:	add	sp, sp, #0x20
  4283a8:	ret

00000000004283ac <ALIGN_TO>:
  4283ac:	sub	sp, sp, #0x10
  4283b0:	str	x0, [sp, #8]
  4283b4:	str	x1, [sp]
  4283b8:	ldr	x8, [sp, #8]
  4283bc:	ldr	x9, [sp]
  4283c0:	add	x8, x8, x9
  4283c4:	subs	x8, x8, #0x1
  4283c8:	ldr	x9, [sp]
  4283cc:	subs	x9, x9, #0x1
  4283d0:	bic	x0, x8, x9
  4283d4:	add	sp, sp, #0x10
  4283d8:	ret

00000000004283dc <server_open_native_socket>:
  4283dc:	sub	sp, sp, #0xf0
  4283e0:	stp	x29, x30, [sp, #224]
  4283e4:	add	x29, sp, #0xe0
  4283e8:	adrp	x8, 430000 <_fini+0x63a8>
  4283ec:	add	x8, x8, #0xc40
  4283f0:	add	x9, x8, #0x2
  4283f4:	adrp	x10, 42f000 <_fini+0x53a8>
  4283f8:	add	x10, x10, #0x94b
  4283fc:	add	x10, x10, #0x3
  428400:	adrp	x11, 42f000 <_fini+0x53a8>
  428404:	add	x11, x11, #0xd41
  428408:	stur	x0, [x29, #-16]
  42840c:	str	x8, [sp, #72]
  428410:	str	x9, [sp, #64]
  428414:	str	x10, [sp, #56]
  428418:	str	x11, [sp, #48]
  42841c:	ldur	x8, [x29, #-16]
  428420:	cmp	x8, #0x0
  428424:	cset	w9, ne  // ne = any
  428428:	mov	w10, #0x1                   	// #1
  42842c:	eor	w9, w9, #0x1
  428430:	eor	w9, w9, w10
  428434:	eor	w9, w9, w10
  428438:	and	w9, w9, #0x1
  42843c:	mov	w0, w9
  428440:	sxtw	x8, w0
  428444:	cbz	x8, 42846c <server_open_native_socket+0x90>
  428448:	mov	w8, wzr
  42844c:	mov	w0, w8
  428450:	adrp	x1, 429000 <journal_ratelimit_group_free+0x70>
  428454:	add	x1, x1, #0xdc8
  428458:	ldr	x2, [sp, #56]
  42845c:	mov	w3, #0x1cd                 	// #461
  428460:	adrp	x4, 42f000 <_fini+0x53a8>
  428464:	add	x4, x4, #0xd19
  428468:	bl	405718 <log_assert_failed_realm@plt>
  42846c:	ldur	x8, [x29, #-16]
  428470:	ldr	w9, [x8, #4]
  428474:	cmp	w9, #0x0
  428478:	cset	w9, ge  // ge = tcont
  42847c:	tbnz	w9, #0, 4286c0 <server_open_native_socket+0x2e4>
  428480:	mov	w0, #0x1                   	// #1
  428484:	mov	w1, #0x802                 	// #2050
  428488:	movk	w1, #0x8, lsl #16
  42848c:	mov	w8, wzr
  428490:	mov	w2, w8
  428494:	bl	405eb8 <socket@plt>
  428498:	ldur	x9, [x29, #-16]
  42849c:	str	w0, [x9, #4]
  4284a0:	ldur	x9, [x29, #-16]
  4284a4:	ldr	w8, [x9, #4]
  4284a8:	cmp	w8, #0x0
  4284ac:	cset	w8, ge  // ge = tcont
  4284b0:	tbnz	w8, #0, 42853c <server_open_native_socket+0x160>
  4284b4:	mov	w8, #0x3                   	// #3
  4284b8:	stur	w8, [x29, #-24]
  4284bc:	bl	405768 <__errno_location@plt>
  4284c0:	ldr	w8, [x0]
  4284c4:	stur	w8, [x29, #-28]
  4284c8:	stur	wzr, [x29, #-32]
  4284cc:	ldur	w0, [x29, #-32]
  4284d0:	bl	405638 <log_get_max_level_realm@plt>
  4284d4:	ldur	w8, [x29, #-24]
  4284d8:	and	w8, w8, #0x7
  4284dc:	cmp	w0, w8
  4284e0:	b.lt	428514 <server_open_native_socket+0x138>  // b.tstop
  4284e4:	ldur	w8, [x29, #-32]
  4284e8:	ldur	w9, [x29, #-24]
  4284ec:	orr	w0, w9, w8, lsl #10
  4284f0:	ldur	w1, [x29, #-28]
  4284f4:	ldr	x2, [sp, #56]
  4284f8:	mov	w3, #0x1d2                 	// #466
  4284fc:	ldr	x4, [sp, #48]
  428500:	adrp	x5, 42d000 <_fini+0x33a8>
  428504:	add	x5, x5, #0x792
  428508:	bl	405648 <log_internal_realm@plt>
  42850c:	str	w0, [sp, #44]
  428510:	b	428528 <server_open_native_socket+0x14c>
  428514:	ldur	w0, [x29, #-28]
  428518:	bl	405658 <abs@plt>
  42851c:	mov	w8, wzr
  428520:	subs	w8, w8, w0, uxtb
  428524:	str	w8, [sp, #44]
  428528:	ldr	w8, [sp, #44]
  42852c:	stur	w8, [x29, #-36]
  428530:	ldur	w8, [x29, #-36]
  428534:	stur	w8, [x29, #-4]
  428538:	b	4289ac <server_open_native_socket+0x5d0>
  42853c:	ldr	x0, [sp, #72]
  428540:	bl	4061c8 <sockaddr_un_unlink@plt>
  428544:	ldur	x8, [x29, #-16]
  428548:	ldr	w9, [x8, #4]
  42854c:	ldr	x8, [sp, #72]
  428550:	stur	x8, [x29, #-48]
  428554:	stur	x8, [x29, #-56]
  428558:	str	w9, [sp, #40]
  42855c:	ldur	x8, [x29, #-56]
  428560:	ldrh	w9, [x8]
  428564:	cmp	w9, #0x1
  428568:	cset	w9, eq  // eq = none
  42856c:	mov	w10, #0x1                   	// #1
  428570:	eor	w9, w9, #0x1
  428574:	eor	w9, w9, w10
  428578:	eor	w9, w9, w10
  42857c:	and	w9, w9, #0x1
  428580:	mov	w0, w9
  428584:	sxtw	x8, w0
  428588:	cbz	x8, 4285b0 <server_open_native_socket+0x1d4>
  42858c:	mov	w8, wzr
  428590:	mov	w0, w8
  428594:	adrp	x1, 42d000 <_fini+0x33a8>
  428598:	add	x1, x1, #0x7a6
  42859c:	ldr	x2, [sp, #56]
  4285a0:	mov	w3, #0x1d6                 	// #470
  4285a4:	adrp	x4, 42f000 <_fini+0x53a8>
  4285a8:	add	x4, x4, #0xd19
  4285ac:	bl	405718 <log_assert_failed_realm@plt>
  4285b0:	ldur	x8, [x29, #-56]
  4285b4:	ldrb	w9, [x8, #2]
  4285b8:	cbnz	w9, 4285d8 <server_open_native_socket+0x1fc>
  4285bc:	ldur	x8, [x29, #-56]
  4285c0:	add	x0, x8, #0x3
  4285c4:	mov	x1, #0x6b                  	// #107
  4285c8:	bl	4061d8 <strnlen@plt>
  4285cc:	add	x8, x0, #0x1
  4285d0:	str	x8, [sp, #32]
  4285d4:	b	4285f0 <server_open_native_socket+0x214>
  4285d8:	ldur	x8, [x29, #-56]
  4285dc:	add	x0, x8, #0x2
  4285e0:	mov	x1, #0x6c                  	// #108
  4285e4:	bl	4061d8 <strnlen@plt>
  4285e8:	add	x8, x0, #0x1
  4285ec:	str	x8, [sp, #32]
  4285f0:	ldr	x8, [sp, #32]
  4285f4:	add	x8, x8, #0x2
  4285f8:	stur	x8, [x29, #-64]
  4285fc:	ldur	x8, [x29, #-64]
  428600:	ldur	x1, [x29, #-48]
  428604:	ldr	w0, [sp, #40]
  428608:	mov	w2, w8
  42860c:	bl	4061e8 <bind@plt>
  428610:	stur	w0, [x29, #-20]
  428614:	ldur	w8, [x29, #-20]
  428618:	cmp	w8, #0x0
  42861c:	cset	w8, ge  // ge = tcont
  428620:	tbnz	w8, #0, 4286b0 <server_open_native_socket+0x2d4>
  428624:	mov	w8, #0x3                   	// #3
  428628:	stur	w8, [x29, #-68]
  42862c:	bl	405768 <__errno_location@plt>
  428630:	ldr	w8, [x0]
  428634:	stur	w8, [x29, #-72]
  428638:	stur	wzr, [x29, #-76]
  42863c:	ldur	w0, [x29, #-76]
  428640:	bl	405638 <log_get_max_level_realm@plt>
  428644:	ldur	w8, [x29, #-68]
  428648:	and	w8, w8, #0x7
  42864c:	cmp	w0, w8
  428650:	b.lt	428688 <server_open_native_socket+0x2ac>  // b.tstop
  428654:	ldur	w8, [x29, #-76]
  428658:	ldur	w9, [x29, #-68]
  42865c:	orr	w0, w9, w8, lsl #10
  428660:	ldur	w1, [x29, #-72]
  428664:	ldr	x2, [sp, #56]
  428668:	mov	w3, #0x1d8                 	// #472
  42866c:	ldr	x4, [sp, #48]
  428670:	adrp	x5, 42d000 <_fini+0x33a8>
  428674:	add	x5, x5, #0x7c1
  428678:	ldr	x6, [sp, #64]
  42867c:	bl	405648 <log_internal_realm@plt>
  428680:	str	w0, [sp, #28]
  428684:	b	42869c <server_open_native_socket+0x2c0>
  428688:	ldur	w0, [x29, #-72]
  42868c:	bl	405658 <abs@plt>
  428690:	mov	w8, wzr
  428694:	subs	w8, w8, w0, uxtb
  428698:	str	w8, [sp, #28]
  42869c:	ldr	w8, [sp, #28]
  4286a0:	stur	w8, [x29, #-80]
  4286a4:	ldur	w8, [x29, #-80]
  4286a8:	stur	w8, [x29, #-4]
  4286ac:	b	4289ac <server_open_native_socket+0x5d0>
  4286b0:	ldr	x0, [sp, #64]
  4286b4:	mov	w1, #0x1b6                 	// #438
  4286b8:	bl	4061f8 <chmod@plt>
  4286bc:	b	4286d4 <server_open_native_socket+0x2f8>
  4286c0:	ldur	x8, [x29, #-16]
  4286c4:	ldr	w0, [x8, #4]
  4286c8:	mov	w9, #0x1                   	// #1
  4286cc:	and	w1, w9, #0x1
  4286d0:	bl	406218 <fd_nonblock@plt>
  4286d4:	ldur	x8, [x29, #-16]
  4286d8:	ldr	w0, [x8, #4]
  4286dc:	mov	w9, #0x1                   	// #1
  4286e0:	mov	w1, w9
  4286e4:	mov	w2, #0x10                  	// #16
  4286e8:	mov	w3, w9
  4286ec:	bl	4289bc <setsockopt_int>
  4286f0:	stur	w0, [x29, #-20]
  4286f4:	ldur	w9, [x29, #-20]
  4286f8:	cmp	w9, #0x0
  4286fc:	cset	w9, ge  // ge = tcont
  428700:	tbnz	w9, #0, 428788 <server_open_native_socket+0x3ac>
  428704:	mov	w8, #0x3                   	// #3
  428708:	stur	w8, [x29, #-84]
  42870c:	ldur	w8, [x29, #-20]
  428710:	stur	w8, [x29, #-88]
  428714:	stur	wzr, [x29, #-92]
  428718:	ldur	w0, [x29, #-92]
  42871c:	bl	405638 <log_get_max_level_realm@plt>
  428720:	ldur	w8, [x29, #-84]
  428724:	and	w8, w8, #0x7
  428728:	cmp	w0, w8
  42872c:	b.lt	428760 <server_open_native_socket+0x384>  // b.tstop
  428730:	ldur	w8, [x29, #-92]
  428734:	ldur	w9, [x29, #-84]
  428738:	orr	w0, w9, w8, lsl #10
  42873c:	ldur	w1, [x29, #-88]
  428740:	ldr	x2, [sp, #56]
  428744:	mov	w3, #0x1e0                 	// #480
  428748:	ldr	x4, [sp, #48]
  42874c:	adrp	x5, 42d000 <_fini+0x33a8>
  428750:	add	x5, x5, #0x5b3
  428754:	bl	405648 <log_internal_realm@plt>
  428758:	str	w0, [sp, #24]
  42875c:	b	428774 <server_open_native_socket+0x398>
  428760:	ldur	w0, [x29, #-88]
  428764:	bl	405658 <abs@plt>
  428768:	mov	w8, wzr
  42876c:	subs	w8, w8, w0, uxtb
  428770:	str	w8, [sp, #24]
  428774:	ldr	w8, [sp, #24]
  428778:	stur	w8, [x29, #-96]
  42877c:	ldur	w8, [x29, #-96]
  428780:	stur	w8, [x29, #-4]
  428784:	b	4289ac <server_open_native_socket+0x5d0>
  428788:	ldur	x8, [x29, #-16]
  42878c:	ldr	w0, [x8, #4]
  428790:	mov	w9, #0x1                   	// #1
  428794:	mov	w1, w9
  428798:	mov	w2, #0x1d                  	// #29
  42879c:	mov	w3, w9
  4287a0:	bl	4289bc <setsockopt_int>
  4287a4:	stur	w0, [x29, #-20]
  4287a8:	ldur	w9, [x29, #-20]
  4287ac:	cmp	w9, #0x0
  4287b0:	cset	w9, ge  // ge = tcont
  4287b4:	tbnz	w9, #0, 42883c <server_open_native_socket+0x460>
  4287b8:	mov	w8, #0x3                   	// #3
  4287bc:	stur	w8, [x29, #-100]
  4287c0:	ldur	w8, [x29, #-20]
  4287c4:	stur	w8, [x29, #-104]
  4287c8:	stur	wzr, [x29, #-108]
  4287cc:	ldur	w0, [x29, #-108]
  4287d0:	bl	405638 <log_get_max_level_realm@plt>
  4287d4:	ldur	w8, [x29, #-100]
  4287d8:	and	w8, w8, #0x7
  4287dc:	cmp	w0, w8
  4287e0:	b.lt	428814 <server_open_native_socket+0x438>  // b.tstop
  4287e4:	ldur	w8, [x29, #-108]
  4287e8:	ldur	w9, [x29, #-100]
  4287ec:	orr	w0, w9, w8, lsl #10
  4287f0:	ldur	w1, [x29, #-104]
  4287f4:	ldr	x2, [sp, #56]
  4287f8:	mov	w3, #0x1ec                 	// #492
  4287fc:	ldr	x4, [sp, #48]
  428800:	adrp	x5, 42e000 <_fini+0x43a8>
  428804:	add	x5, x5, #0x2cf
  428808:	bl	405648 <log_internal_realm@plt>
  42880c:	str	w0, [sp, #20]
  428810:	b	428828 <server_open_native_socket+0x44c>
  428814:	ldur	w0, [x29, #-104]
  428818:	bl	405658 <abs@plt>
  42881c:	mov	w8, wzr
  428820:	subs	w8, w8, w0, uxtb
  428824:	str	w8, [sp, #20]
  428828:	ldr	w8, [sp, #20]
  42882c:	str	w8, [sp, #112]
  428830:	ldr	w8, [sp, #112]
  428834:	stur	w8, [x29, #-4]
  428838:	b	4289ac <server_open_native_socket+0x5d0>
  42883c:	ldur	x8, [x29, #-16]
  428840:	ldr	x0, [x8, #32]
  428844:	ldur	x8, [x29, #-16]
  428848:	add	x1, x8, #0x30
  42884c:	ldur	x8, [x29, #-16]
  428850:	ldr	w2, [x8, #4]
  428854:	ldur	x5, [x29, #-16]
  428858:	mov	w3, #0x1                   	// #1
  42885c:	adrp	x4, 44f000 <journald_gperf_lookup.wordlist+0x448>
  428860:	ldr	x4, [x4, #1832]
  428864:	bl	4058a8 <sd_event_add_io@plt>
  428868:	stur	w0, [x29, #-20]
  42886c:	ldur	w9, [x29, #-20]
  428870:	cmp	w9, #0x0
  428874:	cset	w9, ge  // ge = tcont
  428878:	tbnz	w9, #0, 428900 <server_open_native_socket+0x524>
  42887c:	mov	w8, #0x3                   	// #3
  428880:	str	w8, [sp, #108]
  428884:	ldur	w8, [x29, #-20]
  428888:	str	w8, [sp, #104]
  42888c:	str	wzr, [sp, #100]
  428890:	ldr	w0, [sp, #100]
  428894:	bl	405638 <log_get_max_level_realm@plt>
  428898:	ldr	w8, [sp, #108]
  42889c:	and	w8, w8, #0x7
  4288a0:	cmp	w0, w8
  4288a4:	b.lt	4288d8 <server_open_native_socket+0x4fc>  // b.tstop
  4288a8:	ldr	w8, [sp, #100]
  4288ac:	ldr	w9, [sp, #108]
  4288b0:	orr	w0, w9, w8, lsl #10
  4288b4:	ldr	w1, [sp, #104]
  4288b8:	ldr	x2, [sp, #56]
  4288bc:	mov	w3, #0x1f0                 	// #496
  4288c0:	ldr	x4, [sp, #48]
  4288c4:	adrp	x5, 42f000 <_fini+0x53a8>
  4288c8:	add	x5, x5, #0xd5b
  4288cc:	bl	405648 <log_internal_realm@plt>
  4288d0:	str	w0, [sp, #16]
  4288d4:	b	4288ec <server_open_native_socket+0x510>
  4288d8:	ldr	w0, [sp, #104]
  4288dc:	bl	405658 <abs@plt>
  4288e0:	mov	w8, wzr
  4288e4:	subs	w8, w8, w0, uxtb
  4288e8:	str	w8, [sp, #16]
  4288ec:	ldr	w8, [sp, #16]
  4288f0:	str	w8, [sp, #96]
  4288f4:	ldr	w8, [sp, #96]
  4288f8:	stur	w8, [x29, #-4]
  4288fc:	b	4289ac <server_open_native_socket+0x5d0>
  428900:	ldur	x8, [x29, #-16]
  428904:	ldr	x0, [x8, #48]
  428908:	mov	x1, #0x5                   	// #5
  42890c:	bl	4058b8 <sd_event_source_set_priority@plt>
  428910:	stur	w0, [x29, #-20]
  428914:	ldur	w9, [x29, #-20]
  428918:	cmp	w9, #0x0
  42891c:	cset	w9, ge  // ge = tcont
  428920:	tbnz	w9, #0, 4289a8 <server_open_native_socket+0x5cc>
  428924:	mov	w8, #0x3                   	// #3
  428928:	str	w8, [sp, #92]
  42892c:	ldur	w8, [x29, #-20]
  428930:	str	w8, [sp, #88]
  428934:	str	wzr, [sp, #84]
  428938:	ldr	w0, [sp, #84]
  42893c:	bl	405638 <log_get_max_level_realm@plt>
  428940:	ldr	w8, [sp, #92]
  428944:	and	w8, w8, #0x7
  428948:	cmp	w0, w8
  42894c:	b.lt	428980 <server_open_native_socket+0x5a4>  // b.tstop
  428950:	ldr	w8, [sp, #84]
  428954:	ldr	w9, [sp, #92]
  428958:	orr	w0, w9, w8, lsl #10
  42895c:	ldr	w1, [sp, #88]
  428960:	ldr	x2, [sp, #56]
  428964:	mov	w3, #0x1f4                 	// #500
  428968:	ldr	x4, [sp, #48]
  42896c:	adrp	x5, 42f000 <_fini+0x53a8>
  428970:	add	x5, x5, #0xd8c
  428974:	bl	405648 <log_internal_realm@plt>
  428978:	str	w0, [sp, #12]
  42897c:	b	428994 <server_open_native_socket+0x5b8>
  428980:	ldr	w0, [sp, #88]
  428984:	bl	405658 <abs@plt>
  428988:	mov	w8, wzr
  42898c:	subs	w8, w8, w0, uxtb
  428990:	str	w8, [sp, #12]
  428994:	ldr	w8, [sp, #12]
  428998:	str	w8, [sp, #80]
  42899c:	ldr	w8, [sp, #80]
  4289a0:	stur	w8, [x29, #-4]
  4289a4:	b	4289ac <server_open_native_socket+0x5d0>
  4289a8:	stur	wzr, [x29, #-4]
  4289ac:	ldur	w0, [x29, #-4]
  4289b0:	ldp	x29, x30, [sp, #224]
  4289b4:	add	sp, sp, #0xf0
  4289b8:	ret

00000000004289bc <setsockopt_int>:
  4289bc:	sub	sp, sp, #0x30
  4289c0:	stp	x29, x30, [sp, #32]
  4289c4:	add	x29, sp, #0x20
  4289c8:	mov	w4, #0x4                   	// #4
  4289cc:	add	x8, sp, #0xc
  4289d0:	stur	w0, [x29, #-8]
  4289d4:	stur	w1, [x29, #-12]
  4289d8:	str	w2, [sp, #16]
  4289dc:	str	w3, [sp, #12]
  4289e0:	ldur	w0, [x29, #-8]
  4289e4:	ldur	w1, [x29, #-12]
  4289e8:	ldr	w2, [sp, #16]
  4289ec:	mov	x3, x8
  4289f0:	bl	406168 <setsockopt@plt>
  4289f4:	cmp	w0, #0x0
  4289f8:	cset	w9, ge  // ge = tcont
  4289fc:	tbnz	w9, #0, 428a18 <setsockopt_int+0x5c>
  428a00:	bl	405768 <__errno_location@plt>
  428a04:	ldr	w8, [x0]
  428a08:	mov	w9, wzr
  428a0c:	subs	w8, w9, w8
  428a10:	stur	w8, [x29, #-4]
  428a14:	b	428a1c <setsockopt_int+0x60>
  428a18:	stur	wzr, [x29, #-4]
  428a1c:	ldur	w0, [x29, #-4]
  428a20:	ldp	x29, x30, [sp, #32]
  428a24:	add	sp, sp, #0x30
  428a28:	ret

0000000000428a2c <client_context_extra_fields_n_iovec>:
  428a2c:	sub	sp, sp, #0x10
  428a30:	str	x0, [sp, #8]
  428a34:	ldr	x8, [sp, #8]
  428a38:	cbz	x8, 428a4c <client_context_extra_fields_n_iovec+0x20>
  428a3c:	ldr	x8, [sp, #8]
  428a40:	ldr	x8, [x8, #176]
  428a44:	str	x8, [sp]
  428a48:	b	428a54 <client_context_extra_fields_n_iovec+0x28>
  428a4c:	mov	x8, xzr
  428a50:	str	x8, [sp]
  428a54:	ldr	x8, [sp]
  428a58:	mov	x0, x8
  428a5c:	add	sp, sp, #0x10
  428a60:	ret

0000000000428a64 <server_process_entry_meta>:
  428a64:	sub	sp, sp, #0x70
  428a68:	stp	x29, x30, [sp, #96]
  428a6c:	add	x29, sp, #0x60
  428a70:	stur	x0, [x29, #-8]
  428a74:	stur	x1, [x29, #-16]
  428a78:	stur	x2, [x29, #-24]
  428a7c:	stur	x3, [x29, #-32]
  428a80:	stur	x4, [x29, #-40]
  428a84:	str	x5, [sp, #48]
  428a88:	str	x6, [sp, #40]
  428a8c:	ldur	x8, [x29, #-16]
  428a90:	cmp	x8, #0xa
  428a94:	b.ne	428af4 <server_process_entry_meta+0x90>  // b.any
  428a98:	ldur	x0, [x29, #-8]
  428a9c:	adrp	x1, 42f000 <_fini+0x53a8>
  428aa0:	add	x1, x1, #0xfcc
  428aa4:	bl	428de8 <startswith>
  428aa8:	cbz	x0, 428af4 <server_process_entry_meta+0x90>
  428aac:	ldur	x8, [x29, #-8]
  428ab0:	ldrb	w9, [x8, #9]
  428ab4:	cmp	w9, #0x30
  428ab8:	b.lt	428af4 <server_process_entry_meta+0x90>  // b.tstop
  428abc:	ldur	x8, [x29, #-8]
  428ac0:	ldrb	w9, [x8, #9]
  428ac4:	cmp	w9, #0x39
  428ac8:	b.gt	428af4 <server_process_entry_meta+0x90>
  428acc:	ldur	x8, [x29, #-32]
  428ad0:	ldr	w9, [x8]
  428ad4:	and	w9, w9, #0x3f8
  428ad8:	ldur	x8, [x29, #-8]
  428adc:	ldrb	w10, [x8, #9]
  428ae0:	subs	w10, w10, #0x30
  428ae4:	orr	w9, w9, w10
  428ae8:	ldur	x8, [x29, #-32]
  428aec:	str	w9, [x8]
  428af0:	b	428d34 <server_process_entry_meta+0x2d0>
  428af4:	ldur	x8, [x29, #-16]
  428af8:	cmp	x8, #0x11
  428afc:	b.ne	428b5c <server_process_entry_meta+0xf8>  // b.any
  428b00:	ldur	x0, [x29, #-8]
  428b04:	adrp	x1, 42f000 <_fini+0x53a8>
  428b08:	add	x1, x1, #0xfd6
  428b0c:	bl	428de8 <startswith>
  428b10:	cbz	x0, 428b5c <server_process_entry_meta+0xf8>
  428b14:	ldur	x8, [x29, #-8]
  428b18:	ldrb	w9, [x8, #16]
  428b1c:	cmp	w9, #0x30
  428b20:	b.lt	428b5c <server_process_entry_meta+0xf8>  // b.tstop
  428b24:	ldur	x8, [x29, #-8]
  428b28:	ldrb	w9, [x8, #16]
  428b2c:	cmp	w9, #0x39
  428b30:	b.gt	428b5c <server_process_entry_meta+0xf8>
  428b34:	ldur	x8, [x29, #-32]
  428b38:	ldr	w9, [x8]
  428b3c:	and	w9, w9, #0x7
  428b40:	ldur	x8, [x29, #-8]
  428b44:	ldrb	w10, [x8, #16]
  428b48:	subs	w10, w10, #0x30
  428b4c:	orr	w9, w9, w10, lsl #3
  428b50:	ldur	x8, [x29, #-32]
  428b54:	str	w9, [x8]
  428b58:	b	428d34 <server_process_entry_meta+0x2d0>
  428b5c:	ldur	x8, [x29, #-16]
  428b60:	cmp	x8, #0x12
  428b64:	b.ne	428bfc <server_process_entry_meta+0x198>  // b.any
  428b68:	ldur	x0, [x29, #-8]
  428b6c:	adrp	x1, 42f000 <_fini+0x53a8>
  428b70:	add	x1, x1, #0xfd6
  428b74:	bl	428de8 <startswith>
  428b78:	cbz	x0, 428bfc <server_process_entry_meta+0x198>
  428b7c:	ldur	x8, [x29, #-8]
  428b80:	ldrb	w9, [x8, #16]
  428b84:	cmp	w9, #0x30
  428b88:	b.lt	428bfc <server_process_entry_meta+0x198>  // b.tstop
  428b8c:	ldur	x8, [x29, #-8]
  428b90:	ldrb	w9, [x8, #16]
  428b94:	cmp	w9, #0x39
  428b98:	b.gt	428bfc <server_process_entry_meta+0x198>
  428b9c:	ldur	x8, [x29, #-8]
  428ba0:	ldrb	w9, [x8, #17]
  428ba4:	cmp	w9, #0x30
  428ba8:	b.lt	428bfc <server_process_entry_meta+0x198>  // b.tstop
  428bac:	ldur	x8, [x29, #-8]
  428bb0:	ldrb	w9, [x8, #17]
  428bb4:	cmp	w9, #0x39
  428bb8:	b.gt	428bfc <server_process_entry_meta+0x198>
  428bbc:	ldur	x8, [x29, #-32]
  428bc0:	ldr	w9, [x8]
  428bc4:	and	w9, w9, #0x7
  428bc8:	ldur	x8, [x29, #-8]
  428bcc:	ldrb	w10, [x8, #16]
  428bd0:	subs	w10, w10, #0x30
  428bd4:	mov	w11, #0xa                   	// #10
  428bd8:	mul	w10, w10, w11
  428bdc:	ldur	x8, [x29, #-8]
  428be0:	ldrb	w11, [x8, #17]
  428be4:	subs	w11, w11, #0x30
  428be8:	add	w10, w10, w11
  428bec:	orr	w9, w9, w10, lsl #3
  428bf0:	ldur	x8, [x29, #-32]
  428bf4:	str	w9, [x8]
  428bf8:	b	428d34 <server_process_entry_meta+0x2d0>
  428bfc:	ldur	x8, [x29, #-16]
  428c00:	cmp	x8, #0x13
  428c04:	b.cc	428c58 <server_process_entry_meta+0x1f4>  // b.lo, b.ul, b.last
  428c08:	ldur	x0, [x29, #-8]
  428c0c:	adrp	x1, 42a000 <_fini+0x3a8>
  428c10:	add	x1, x1, #0x45
  428c14:	bl	428de8 <startswith>
  428c18:	cbz	x0, 428c58 <server_process_entry_meta+0x1f4>
  428c1c:	ldur	x8, [x29, #-8]
  428c20:	add	x0, x8, #0x12
  428c24:	ldur	x8, [x29, #-16]
  428c28:	subs	x1, x8, #0x12
  428c2c:	bl	406658 <memdup_suffix0@plt>
  428c30:	str	x0, [sp, #32]
  428c34:	ldr	x8, [sp, #32]
  428c38:	cbz	x8, 428c54 <server_process_entry_meta+0x1f0>
  428c3c:	ldur	x8, [x29, #-40]
  428c40:	ldr	x0, [x8]
  428c44:	bl	405778 <free@plt>
  428c48:	ldr	x8, [sp, #32]
  428c4c:	ldur	x9, [x29, #-40]
  428c50:	str	x8, [x9]
  428c54:	b	428d34 <server_process_entry_meta+0x2d0>
  428c58:	ldur	x8, [x29, #-16]
  428c5c:	cmp	x8, #0x8
  428c60:	b.cc	428cb4 <server_process_entry_meta+0x250>  // b.lo, b.ul, b.last
  428c64:	ldur	x0, [x29, #-8]
  428c68:	adrp	x1, 42a000 <_fini+0x3a8>
  428c6c:	add	x1, x1, #0x64
  428c70:	bl	428de8 <startswith>
  428c74:	cbz	x0, 428cb4 <server_process_entry_meta+0x250>
  428c78:	ldur	x8, [x29, #-8]
  428c7c:	add	x0, x8, #0x8
  428c80:	ldur	x8, [x29, #-16]
  428c84:	subs	x1, x8, #0x8
  428c88:	bl	406658 <memdup_suffix0@plt>
  428c8c:	str	x0, [sp, #24]
  428c90:	ldr	x8, [sp, #24]
  428c94:	cbz	x8, 428cb0 <server_process_entry_meta+0x24c>
  428c98:	ldr	x8, [sp, #48]
  428c9c:	ldr	x0, [x8]
  428ca0:	bl	405778 <free@plt>
  428ca4:	ldr	x8, [sp, #24]
  428ca8:	ldr	x9, [sp, #48]
  428cac:	str	x8, [x9]
  428cb0:	b	428d34 <server_process_entry_meta+0x2d0>
  428cb4:	ldur	x8, [x29, #-16]
  428cb8:	cmp	x8, #0xb
  428cbc:	b.ls	428d34 <server_process_entry_meta+0x2d0>  // b.plast
  428cc0:	ldur	x8, [x29, #-16]
  428cc4:	cmp	x8, #0x17
  428cc8:	b.cs	428d34 <server_process_entry_meta+0x2d0>  // b.hs, b.nlast
  428ccc:	ldur	x0, [x29, #-8]
  428cd0:	adrp	x1, 42f000 <_fini+0x53a8>
  428cd4:	add	x1, x1, #0xfe7
  428cd8:	bl	428de8 <startswith>
  428cdc:	cbz	x0, 428d34 <server_process_entry_meta+0x2d0>
  428ce0:	ldur	x0, [x29, #-24]
  428ce4:	bl	428e48 <allow_object_pid>
  428ce8:	tbnz	w0, #0, 428cf0 <server_process_entry_meta+0x28c>
  428cec:	b	428d34 <server_process_entry_meta+0x2d0>
  428cf0:	ldur	x8, [x29, #-8]
  428cf4:	add	x1, x8, #0xb
  428cf8:	ldur	x8, [x29, #-16]
  428cfc:	subs	x2, x8, #0xb
  428d00:	add	x8, sp, #0xc
  428d04:	mov	x0, x8
  428d08:	str	x8, [sp]
  428d0c:	bl	405af8 <memcpy@plt>
  428d10:	ldur	x8, [x29, #-16]
  428d14:	subs	x8, x8, #0xb
  428d18:	ldr	x9, [sp]
  428d1c:	add	x8, x9, x8
  428d20:	mov	w10, #0x0                   	// #0
  428d24:	strb	w10, [x8]
  428d28:	ldr	x1, [sp, #40]
  428d2c:	mov	x0, x9
  428d30:	bl	405858 <parse_pid@plt>
  428d34:	ldp	x29, x30, [sp, #96]
  428d38:	add	sp, sp, #0x70
  428d3c:	ret

0000000000428d40 <unaligned_read_le64>:
  428d40:	sub	sp, sp, #0x20
  428d44:	stp	x29, x30, [sp, #16]
  428d48:	add	x29, sp, #0x10
  428d4c:	str	x0, [sp, #8]
  428d50:	ldr	x8, [sp, #8]
  428d54:	str	x8, [sp]
  428d58:	ldr	x8, [sp]
  428d5c:	ldr	x0, [x8]
  428d60:	bl	428e84 <le64toh>
  428d64:	ldp	x29, x30, [sp, #16]
  428d68:	add	sp, sp, #0x20
  428d6c:	ret

0000000000428d70 <client_context_test_priority>:
  428d70:	sub	sp, sp, #0x20
  428d74:	str	x0, [sp, #16]
  428d78:	str	w1, [sp, #12]
  428d7c:	ldr	x8, [sp, #16]
  428d80:	cbnz	x8, 428d94 <client_context_test_priority+0x24>
  428d84:	mov	w8, #0x1                   	// #1
  428d88:	and	w8, w8, #0x1
  428d8c:	strb	w8, [sp, #31]
  428d90:	b	428dd8 <client_context_test_priority+0x68>
  428d94:	ldr	x8, [sp, #16]
  428d98:	ldr	w9, [x8, #160]
  428d9c:	cmp	w9, #0x0
  428da0:	cset	w9, ge  // ge = tcont
  428da4:	tbnz	w9, #0, 428db8 <client_context_test_priority+0x48>
  428da8:	mov	w8, #0x1                   	// #1
  428dac:	and	w8, w8, #0x1
  428db0:	strb	w8, [sp, #31]
  428db4:	b	428dd8 <client_context_test_priority+0x68>
  428db8:	ldr	w8, [sp, #12]
  428dbc:	and	w8, w8, #0x7
  428dc0:	ldr	x9, [sp, #16]
  428dc4:	ldr	w10, [x9, #160]
  428dc8:	cmp	w8, w10
  428dcc:	cset	w8, le
  428dd0:	and	w8, w8, #0x1
  428dd4:	strb	w8, [sp, #31]
  428dd8:	ldrb	w8, [sp, #31]
  428ddc:	and	w0, w8, #0x1
  428de0:	add	sp, sp, #0x20
  428de4:	ret

0000000000428de8 <startswith>:
  428de8:	sub	sp, sp, #0x30
  428dec:	stp	x29, x30, [sp, #32]
  428df0:	add	x29, sp, #0x20
  428df4:	str	x0, [sp, #16]
  428df8:	str	x1, [sp, #8]
  428dfc:	ldr	x0, [sp, #8]
  428e00:	bl	405738 <strlen@plt>
  428e04:	str	x0, [sp]
  428e08:	ldr	x0, [sp, #16]
  428e0c:	ldr	x1, [sp, #8]
  428e10:	ldr	x2, [sp]
  428e14:	bl	405838 <strncmp@plt>
  428e18:	cbnz	w0, 428e30 <startswith+0x48>
  428e1c:	ldr	x8, [sp, #16]
  428e20:	ldr	x9, [sp]
  428e24:	add	x8, x8, x9
  428e28:	stur	x8, [x29, #-8]
  428e2c:	b	428e38 <startswith+0x50>
  428e30:	mov	x8, xzr
  428e34:	stur	x8, [x29, #-8]
  428e38:	ldur	x0, [x29, #-8]
  428e3c:	ldp	x29, x30, [sp, #32]
  428e40:	add	sp, sp, #0x30
  428e44:	ret

0000000000428e48 <allow_object_pid>:
  428e48:	sub	sp, sp, #0x10
  428e4c:	str	x0, [sp, #8]
  428e50:	ldr	x8, [sp, #8]
  428e54:	mov	w9, #0x0                   	// #0
  428e58:	str	w9, [sp, #4]
  428e5c:	cbz	x8, 428e74 <allow_object_pid+0x2c>
  428e60:	ldr	x8, [sp, #8]
  428e64:	ldr	w9, [x8, #4]
  428e68:	cmp	w9, #0x0
  428e6c:	cset	w9, eq  // eq = none
  428e70:	str	w9, [sp, #4]
  428e74:	ldr	w8, [sp, #4]
  428e78:	and	w0, w8, #0x1
  428e7c:	add	sp, sp, #0x10
  428e80:	ret

0000000000428e84 <le64toh>:
  428e84:	sub	sp, sp, #0x10
  428e88:	str	x0, [sp, #8]
  428e8c:	ldr	x0, [sp, #8]
  428e90:	add	sp, sp, #0x10
  428e94:	ret

0000000000428e98 <journal_ratelimit_new>:
  428e98:	sub	sp, sp, #0x20
  428e9c:	stp	x29, x30, [sp, #16]
  428ea0:	add	x29, sp, #0x10
  428ea4:	mov	x0, #0x1                   	// #1
  428ea8:	mov	x1, #0x420                 	// #1056
  428eac:	bl	406118 <calloc@plt>
  428eb0:	str	x0, [sp]
  428eb4:	ldr	x8, [sp]
  428eb8:	cbnz	x8, 428ec8 <journal_ratelimit_new+0x30>
  428ebc:	mov	x8, xzr
  428ec0:	str	x8, [sp, #8]
  428ec4:	b	428ee0 <journal_ratelimit_new+0x48>
  428ec8:	ldr	x8, [sp]
  428ecc:	add	x0, x8, #0x40c
  428ed0:	mov	x1, #0x10                  	// #16
  428ed4:	bl	406728 <random_bytes@plt>
  428ed8:	ldr	x8, [sp]
  428edc:	str	x8, [sp, #8]
  428ee0:	ldr	x0, [sp, #8]
  428ee4:	ldp	x29, x30, [sp, #16]
  428ee8:	add	sp, sp, #0x20
  428eec:	ret

0000000000428ef0 <journal_ratelimit_free>:
  428ef0:	sub	sp, sp, #0x20
  428ef4:	stp	x29, x30, [sp, #16]
  428ef8:	add	x29, sp, #0x10
  428efc:	adrp	x8, 42f000 <_fini+0x53a8>
  428f00:	add	x8, x8, #0xff5
  428f04:	add	x2, x8, #0x3
  428f08:	str	x0, [sp, #8]
  428f0c:	str	x2, [sp]
  428f10:	ldr	x8, [sp, #8]
  428f14:	cmp	x8, #0x0
  428f18:	cset	w9, ne  // ne = any
  428f1c:	mov	w10, #0x1                   	// #1
  428f20:	eor	w9, w9, #0x1
  428f24:	eor	w9, w9, w10
  428f28:	eor	w9, w9, w10
  428f2c:	and	w9, w9, #0x1
  428f30:	mov	w0, w9
  428f34:	sxtw	x8, w0
  428f38:	cbz	x8, 428f60 <journal_ratelimit_free+0x70>
  428f3c:	mov	w8, wzr
  428f40:	mov	w0, w8
  428f44:	adrp	x1, 42f000 <_fini+0x53a8>
  428f48:	add	x1, x1, #0xff3
  428f4c:	ldr	x2, [sp]
  428f50:	mov	w3, #0x5e                  	// #94
  428f54:	adrp	x4, 430000 <_fini+0x63a8>
  428f58:	add	x4, x4, #0x1a
  428f5c:	bl	405718 <log_assert_failed_realm@plt>
  428f60:	ldr	x8, [sp, #8]
  428f64:	ldr	x8, [x8, #1016]
  428f68:	cbz	x8, 428f7c <journal_ratelimit_free+0x8c>
  428f6c:	ldr	x8, [sp, #8]
  428f70:	ldr	x0, [x8, #1016]
  428f74:	bl	428f90 <journal_ratelimit_group_free>
  428f78:	b	428f60 <journal_ratelimit_free+0x70>
  428f7c:	ldr	x0, [sp, #8]
  428f80:	bl	405778 <free@plt>
  428f84:	ldp	x29, x30, [sp, #16]
  428f88:	add	sp, sp, #0x20
  428f8c:	ret

0000000000428f90 <journal_ratelimit_group_free>:
  428f90:	sub	sp, sp, #0x50
  428f94:	stp	x29, x30, [sp, #64]
  428f98:	add	x29, sp, #0x40
  428f9c:	adrp	x8, 42f000 <_fini+0x53a8>
  428fa0:	add	x8, x8, #0xff5
  428fa4:	add	x8, x8, #0x3
  428fa8:	adrp	x9, 430000 <_fini+0x63a8>
  428fac:	add	x9, x9, #0xb1
  428fb0:	stur	x0, [x29, #-8]
  428fb4:	str	x8, [sp, #16]
  428fb8:	str	x9, [sp, #8]
  428fbc:	ldur	x8, [x29, #-8]
  428fc0:	cmp	x8, #0x0
  428fc4:	cset	w9, ne  // ne = any
  428fc8:	mov	w10, #0x1                   	// #1
  428fcc:	eor	w9, w9, #0x1
  428fd0:	eor	w9, w9, w10
  428fd4:	eor	w9, w9, w10
  428fd8:	and	w9, w9, #0x1
  428fdc:	mov	w0, w9
  428fe0:	sxtw	x8, w0
  428fe4:	cbz	x8, 429008 <journal_ratelimit_group_free+0x78>
  428fe8:	mov	w8, wzr
  428fec:	mov	w0, w8
  428ff0:	adrp	x1, 430000 <_fini+0x63a8>
  428ff4:	add	x1, x1, #0xaf
  428ff8:	ldr	x2, [sp, #16]
  428ffc:	mov	w3, #0x4b                  	// #75
  429000:	ldr	x4, [sp, #8]
  429004:	bl	405718 <log_assert_failed_realm@plt>
  429008:	ldur	x8, [x29, #-8]
  42900c:	ldr	x8, [x8]
  429010:	cbz	x8, 429308 <journal_ratelimit_group_free+0x378>
  429014:	ldur	x8, [x29, #-8]
  429018:	ldr	x8, [x8]
  42901c:	ldr	w9, [x8, #1032]
  429020:	cmp	w9, #0x0
  429024:	cset	w9, hi  // hi = pmore
  429028:	mov	w10, #0x1                   	// #1
  42902c:	eor	w9, w9, #0x1
  429030:	eor	w9, w9, w10
  429034:	eor	w9, w9, w10
  429038:	and	w9, w9, #0x1
  42903c:	mov	w0, w9
  429040:	sxtw	x8, w0
  429044:	cbz	x8, 429068 <journal_ratelimit_group_free+0xd8>
  429048:	mov	w8, wzr
  42904c:	mov	w0, w8
  429050:	adrp	x1, 430000 <_fini+0x63a8>
  429054:	add	x1, x1, #0xec
  429058:	ldr	x2, [sp, #16]
  42905c:	mov	w3, #0x4e                  	// #78
  429060:	ldr	x4, [sp, #8]
  429064:	bl	405718 <log_assert_failed_realm@plt>
  429068:	ldur	x8, [x29, #-8]
  42906c:	ldr	x8, [x8]
  429070:	ldr	x8, [x8, #1024]
  429074:	ldur	x9, [x29, #-8]
  429078:	cmp	x8, x9
  42907c:	b.ne	429094 <journal_ratelimit_group_free+0x104>  // b.any
  429080:	ldur	x8, [x29, #-8]
  429084:	ldr	x8, [x8, #136]
  429088:	ldur	x9, [x29, #-8]
  42908c:	ldr	x9, [x9]
  429090:	str	x8, [x9, #1024]
  429094:	ldur	x8, [x29, #-8]
  429098:	ldr	x8, [x8]
  42909c:	add	x8, x8, #0x3f8
  4290a0:	stur	x8, [x29, #-16]
  4290a4:	ldur	x8, [x29, #-8]
  4290a8:	stur	x8, [x29, #-24]
  4290ac:	ldur	x8, [x29, #-24]
  4290b0:	cmp	x8, #0x0
  4290b4:	cset	w9, ne  // ne = any
  4290b8:	mov	w10, #0x1                   	// #1
  4290bc:	eor	w9, w9, #0x1
  4290c0:	eor	w9, w9, w10
  4290c4:	eor	w9, w9, w10
  4290c8:	and	w9, w9, #0x1
  4290cc:	mov	w0, w9
  4290d0:	sxtw	x8, w0
  4290d4:	cbz	x8, 4290f8 <journal_ratelimit_group_free+0x168>
  4290d8:	mov	w8, wzr
  4290dc:	mov	w0, w8
  4290e0:	adrp	x1, 42d000 <_fini+0x33a8>
  4290e4:	add	x1, x1, #0x47f
  4290e8:	ldr	x2, [sp, #16]
  4290ec:	mov	w3, #0x53                  	// #83
  4290f0:	ldr	x4, [sp, #8]
  4290f4:	bl	405718 <log_assert_failed_realm@plt>
  4290f8:	ldur	x8, [x29, #-24]
  4290fc:	ldr	x8, [x8, #128]
  429100:	cbz	x8, 429118 <journal_ratelimit_group_free+0x188>
  429104:	ldur	x8, [x29, #-24]
  429108:	ldr	x8, [x8, #136]
  42910c:	ldur	x9, [x29, #-24]
  429110:	ldr	x9, [x9, #128]
  429114:	str	x8, [x9, #136]
  429118:	ldur	x8, [x29, #-24]
  42911c:	ldr	x8, [x8, #136]
  429120:	cbz	x8, 42913c <journal_ratelimit_group_free+0x1ac>
  429124:	ldur	x8, [x29, #-24]
  429128:	ldr	x8, [x8, #128]
  42912c:	ldur	x9, [x29, #-24]
  429130:	ldr	x9, [x9, #136]
  429134:	str	x8, [x9, #128]
  429138:	b	4291a0 <journal_ratelimit_group_free+0x210>
  42913c:	ldur	x8, [x29, #-16]
  429140:	ldr	x8, [x8]
  429144:	ldur	x9, [x29, #-24]
  429148:	cmp	x8, x9
  42914c:	cset	w10, eq  // eq = none
  429150:	mov	w11, #0x1                   	// #1
  429154:	eor	w10, w10, #0x1
  429158:	eor	w10, w10, w11
  42915c:	eor	w10, w10, w11
  429160:	and	w10, w10, #0x1
  429164:	mov	w0, w10
  429168:	sxtw	x8, w0
  42916c:	cbz	x8, 429190 <journal_ratelimit_group_free+0x200>
  429170:	mov	w8, wzr
  429174:	mov	w0, w8
  429178:	adrp	x1, 42d000 <_fini+0x33a8>
  42917c:	add	x1, x1, #0x485
  429180:	ldr	x2, [sp, #16]
  429184:	mov	w3, #0x53                  	// #83
  429188:	ldr	x4, [sp, #8]
  42918c:	bl	405718 <log_assert_failed_realm@plt>
  429190:	ldur	x8, [x29, #-24]
  429194:	ldr	x8, [x8, #128]
  429198:	ldur	x9, [x29, #-16]
  42919c:	str	x8, [x9]
  4291a0:	ldur	x8, [x29, #-24]
  4291a4:	mov	x9, xzr
  4291a8:	str	x9, [x8, #136]
  4291ac:	ldur	x8, [x29, #-24]
  4291b0:	str	x9, [x8, #128]
  4291b4:	ldur	x8, [x29, #-8]
  4291b8:	ldr	x8, [x8]
  4291bc:	ldur	x9, [x29, #-8]
  4291c0:	ldr	x9, [x9, #104]
  4291c4:	mov	x10, #0x7f                  	// #127
  4291c8:	udiv	x11, x9, x10
  4291cc:	mul	x10, x11, x10
  4291d0:	subs	x9, x9, x10
  4291d4:	mov	x10, #0x8                   	// #8
  4291d8:	mul	x9, x10, x9
  4291dc:	add	x8, x8, x9
  4291e0:	str	x8, [sp, #32]
  4291e4:	ldur	x8, [x29, #-8]
  4291e8:	str	x8, [sp, #24]
  4291ec:	ldr	x8, [sp, #24]
  4291f0:	cmp	x8, #0x0
  4291f4:	cset	w9, ne  // ne = any
  4291f8:	mov	w10, #0x1                   	// #1
  4291fc:	eor	w9, w9, #0x1
  429200:	eor	w9, w9, w10
  429204:	eor	w9, w9, w10
  429208:	and	w9, w9, #0x1
  42920c:	mov	w0, w9
  429210:	sxtw	x8, w0
  429214:	cbz	x8, 429238 <journal_ratelimit_group_free+0x2a8>
  429218:	mov	w8, wzr
  42921c:	mov	w0, w8
  429220:	adrp	x1, 42d000 <_fini+0x33a8>
  429224:	add	x1, x1, #0x47f
  429228:	ldr	x2, [sp, #16]
  42922c:	mov	w3, #0x54                  	// #84
  429230:	ldr	x4, [sp, #8]
  429234:	bl	405718 <log_assert_failed_realm@plt>
  429238:	ldr	x8, [sp, #24]
  42923c:	ldr	x8, [x8, #112]
  429240:	cbz	x8, 429258 <journal_ratelimit_group_free+0x2c8>
  429244:	ldr	x8, [sp, #24]
  429248:	ldr	x8, [x8, #120]
  42924c:	ldr	x9, [sp, #24]
  429250:	ldr	x9, [x9, #112]
  429254:	str	x8, [x9, #120]
  429258:	ldr	x8, [sp, #24]
  42925c:	ldr	x8, [x8, #120]
  429260:	cbz	x8, 42927c <journal_ratelimit_group_free+0x2ec>
  429264:	ldr	x8, [sp, #24]
  429268:	ldr	x8, [x8, #112]
  42926c:	ldr	x9, [sp, #24]
  429270:	ldr	x9, [x9, #120]
  429274:	str	x8, [x9, #112]
  429278:	b	4292e0 <journal_ratelimit_group_free+0x350>
  42927c:	ldr	x8, [sp, #32]
  429280:	ldr	x8, [x8]
  429284:	ldr	x9, [sp, #24]
  429288:	cmp	x8, x9
  42928c:	cset	w10, eq  // eq = none
  429290:	mov	w11, #0x1                   	// #1
  429294:	eor	w10, w10, #0x1
  429298:	eor	w10, w10, w11
  42929c:	eor	w10, w10, w11
  4292a0:	and	w10, w10, #0x1
  4292a4:	mov	w0, w10
  4292a8:	sxtw	x8, w0
  4292ac:	cbz	x8, 4292d0 <journal_ratelimit_group_free+0x340>
  4292b0:	mov	w8, wzr
  4292b4:	mov	w0, w8
  4292b8:	adrp	x1, 42d000 <_fini+0x33a8>
  4292bc:	add	x1, x1, #0x485
  4292c0:	ldr	x2, [sp, #16]
  4292c4:	mov	w3, #0x54                  	// #84
  4292c8:	ldr	x4, [sp, #8]
  4292cc:	bl	405718 <log_assert_failed_realm@plt>
  4292d0:	ldr	x8, [sp, #24]
  4292d4:	ldr	x8, [x8, #112]
  4292d8:	ldr	x9, [sp, #32]
  4292dc:	str	x8, [x9]
  4292e0:	ldr	x8, [sp, #24]
  4292e4:	mov	x9, xzr
  4292e8:	str	x9, [x8, #120]
  4292ec:	ldr	x8, [sp, #24]
  4292f0:	str	x9, [x8, #112]
  4292f4:	ldur	x8, [x29, #-8]
  4292f8:	ldr	x8, [x8]
  4292fc:	ldr	w9, [x8, #1032]
  429300:	subs	w9, w9, #0x1
  429304:	str	w9, [x8, #1032]
  429308:	ldur	x8, [x29, #-8]
  42930c:	ldr	x0, [x8, #8]
  429310:	bl	405778 <free@plt>
  429314:	ldur	x0, [x29, #-8]
  429318:	bl	405778 <free@plt>
  42931c:	ldp	x29, x30, [sp, #64]
  429320:	add	sp, sp, #0x50
  429324:	ret

0000000000429328 <journal_ratelimit_test>:
  429328:	sub	sp, sp, #0x80
  42932c:	stp	x29, x30, [sp, #112]
  429330:	add	x29, sp, #0x70
  429334:	adrp	x8, 42f000 <_fini+0x53a8>
  429338:	add	x8, x8, #0xff5
  42933c:	add	x8, x8, #0x3
  429340:	stur	x0, [x29, #-16]
  429344:	stur	x1, [x29, #-24]
  429348:	stur	x2, [x29, #-32]
  42934c:	stur	w3, [x29, #-36]
  429350:	stur	w4, [x29, #-40]
  429354:	stur	x5, [x29, #-48]
  429358:	str	x8, [sp, #8]
  42935c:	ldur	x8, [x29, #-24]
  429360:	cmp	x8, #0x0
  429364:	cset	w9, ne  // ne = any
  429368:	mov	w10, #0x1                   	// #1
  42936c:	eor	w9, w9, #0x1
  429370:	eor	w9, w9, w10
  429374:	eor	w9, w9, w10
  429378:	and	w9, w9, #0x1
  42937c:	mov	w0, w9
  429380:	sxtw	x8, w0
  429384:	cbz	x8, 4293ac <journal_ratelimit_test+0x84>
  429388:	mov	w8, wzr
  42938c:	mov	w0, w8
  429390:	adrp	x1, 430000 <_fini+0x63a8>
  429394:	add	x1, x1, #0x4a
  429398:	ldr	x2, [sp, #8]
  42939c:	mov	w3, #0xc2                  	// #194
  4293a0:	adrp	x4, 430000 <_fini+0x63a8>
  4293a4:	add	x4, x4, #0x4d
  4293a8:	bl	405718 <log_assert_failed_realm@plt>
  4293ac:	ldur	x8, [x29, #-16]
  4293b0:	cbnz	x8, 4293c0 <journal_ratelimit_test+0x98>
  4293b4:	mov	w8, #0x1                   	// #1
  4293b8:	stur	w8, [x29, #-4]
  4293bc:	b	4295b4 <journal_ratelimit_test+0x28c>
  4293c0:	mov	w0, #0x1                   	// #1
  4293c4:	bl	4056f8 <now@plt>
  4293c8:	str	x0, [sp, #24]
  4293cc:	ldur	x0, [x29, #-24]
  4293d0:	ldur	x8, [x29, #-16]
  4293d4:	add	x1, x8, #0x40c
  4293d8:	bl	4295c4 <siphash24_string>
  4293dc:	str	x0, [sp, #56]
  4293e0:	ldur	x8, [x29, #-16]
  4293e4:	ldr	x9, [sp, #56]
  4293e8:	mov	x10, #0x7f                  	// #127
  4293ec:	udiv	x11, x9, x10
  4293f0:	mul	x10, x11, x10
  4293f4:	subs	x9, x9, x10
  4293f8:	mov	x10, #0x8                   	// #8
  4293fc:	mul	x9, x10, x9
  429400:	add	x8, x8, x9
  429404:	ldr	x8, [x8]
  429408:	str	x8, [sp, #48]
  42940c:	ldr	x8, [sp, #48]
  429410:	str	x8, [sp, #48]
  429414:	ldr	x8, [sp, #48]
  429418:	cbz	x8, 429444 <journal_ratelimit_test+0x11c>
  42941c:	ldr	x8, [sp, #48]
  429420:	ldr	x0, [x8, #8]
  429424:	ldur	x1, [x29, #-24]
  429428:	bl	405868 <strcmp@plt>
  42942c:	cbnz	w0, 429434 <journal_ratelimit_test+0x10c>
  429430:	b	429444 <journal_ratelimit_test+0x11c>
  429434:	ldr	x8, [sp, #48]
  429438:	ldr	x8, [x8, #112]
  42943c:	str	x8, [sp, #48]
  429440:	b	429414 <journal_ratelimit_test+0xec>
  429444:	ldr	x8, [sp, #48]
  429448:	cbnz	x8, 42947c <journal_ratelimit_test+0x154>
  42944c:	ldur	x0, [x29, #-16]
  429450:	ldur	x1, [x29, #-24]
  429454:	ldur	x2, [x29, #-32]
  429458:	ldr	x3, [sp, #24]
  42945c:	bl	429608 <journal_ratelimit_group_new>
  429460:	str	x0, [sp, #48]
  429464:	ldr	x8, [sp, #48]
  429468:	cbnz	x8, 429478 <journal_ratelimit_test+0x150>
  42946c:	mov	w8, #0xfffffff4            	// #-12
  429470:	stur	w8, [x29, #-4]
  429474:	b	4295b4 <journal_ratelimit_test+0x28c>
  429478:	b	429488 <journal_ratelimit_test+0x160>
  42947c:	ldur	x8, [x29, #-32]
  429480:	ldr	x9, [sp, #48]
  429484:	str	x8, [x9, #16]
  429488:	ldur	x8, [x29, #-32]
  42948c:	cbz	x8, 429498 <journal_ratelimit_test+0x170>
  429490:	ldur	w8, [x29, #-36]
  429494:	cbnz	w8, 4294a4 <journal_ratelimit_test+0x17c>
  429498:	mov	w8, #0x1                   	// #1
  42949c:	stur	w8, [x29, #-4]
  4294a0:	b	4295b4 <journal_ratelimit_test+0x28c>
  4294a4:	ldur	w0, [x29, #-36]
  4294a8:	ldur	x1, [x29, #-48]
  4294ac:	bl	429908 <burst_modulate>
  4294b0:	str	w0, [sp, #36]
  4294b4:	ldr	x8, [sp, #48]
  4294b8:	add	x8, x8, #0x18
  4294bc:	ldursw	x9, [x29, #-40]
  4294c0:	adrp	x10, 430000 <_fini+0x63a8>
  4294c4:	add	x10, x10, #0xce0
  4294c8:	ldrsw	x9, [x10, x9, lsl #2]
  4294cc:	mov	x10, #0x10                  	// #16
  4294d0:	mul	x9, x10, x9
  4294d4:	add	x8, x8, x9
  4294d8:	str	x8, [sp, #40]
  4294dc:	ldr	x8, [sp, #40]
  4294e0:	ldr	x8, [x8]
  4294e4:	cmp	x8, #0x0
  4294e8:	cset	w11, hi  // hi = pmore
  4294ec:	tbnz	w11, #0, 429518 <journal_ratelimit_test+0x1f0>
  4294f0:	ldr	x8, [sp, #40]
  4294f4:	str	wzr, [x8, #12]
  4294f8:	ldr	x8, [sp, #40]
  4294fc:	mov	w9, #0x1                   	// #1
  429500:	str	w9, [x8, #8]
  429504:	ldr	x8, [sp, #24]
  429508:	ldr	x10, [sp, #40]
  42950c:	str	x8, [x10]
  429510:	stur	w9, [x29, #-4]
  429514:	b	4295b4 <journal_ratelimit_test+0x28c>
  429518:	ldr	x8, [sp, #40]
  42951c:	ldr	x8, [x8]
  429520:	ldur	x9, [x29, #-32]
  429524:	add	x8, x8, x9
  429528:	ldr	x9, [sp, #24]
  42952c:	cmp	x8, x9
  429530:	b.cs	429570 <journal_ratelimit_test+0x248>  // b.hs, b.nlast
  429534:	ldr	x8, [sp, #40]
  429538:	ldr	w9, [x8, #12]
  42953c:	str	w9, [sp, #20]
  429540:	ldr	x8, [sp, #40]
  429544:	str	wzr, [x8, #12]
  429548:	ldr	x8, [sp, #40]
  42954c:	mov	w9, #0x1                   	// #1
  429550:	str	w9, [x8, #8]
  429554:	ldr	x8, [sp, #24]
  429558:	ldr	x10, [sp, #40]
  42955c:	str	x8, [x10]
  429560:	ldr	w9, [sp, #20]
  429564:	add	w9, w9, #0x1
  429568:	stur	w9, [x29, #-4]
  42956c:	b	4295b4 <journal_ratelimit_test+0x28c>
  429570:	ldr	x8, [sp, #40]
  429574:	ldr	w9, [x8, #8]
  429578:	ldr	w10, [sp, #36]
  42957c:	cmp	w9, w10
  429580:	b.cs	4295a0 <journal_ratelimit_test+0x278>  // b.hs, b.nlast
  429584:	ldr	x8, [sp, #40]
  429588:	ldr	w9, [x8, #8]
  42958c:	mov	w10, #0x1                   	// #1
  429590:	add	w9, w9, #0x1
  429594:	str	w9, [x8, #8]
  429598:	stur	w10, [x29, #-4]
  42959c:	b	4295b4 <journal_ratelimit_test+0x28c>
  4295a0:	ldr	x8, [sp, #40]
  4295a4:	ldr	w9, [x8, #12]
  4295a8:	add	w9, w9, #0x1
  4295ac:	str	w9, [x8, #12]
  4295b0:	stur	wzr, [x29, #-4]
  4295b4:	ldur	w0, [x29, #-4]
  4295b8:	ldp	x29, x30, [sp, #112]
  4295bc:	add	sp, sp, #0x80
  4295c0:	ret

00000000004295c4 <siphash24_string>:
  4295c4:	sub	sp, sp, #0x30
  4295c8:	stp	x29, x30, [sp, #32]
  4295cc:	add	x29, sp, #0x20
  4295d0:	stur	x0, [x29, #-8]
  4295d4:	str	x1, [sp, #16]
  4295d8:	ldur	x0, [x29, #-8]
  4295dc:	ldur	x8, [x29, #-8]
  4295e0:	str	x0, [sp, #8]
  4295e4:	mov	x0, x8
  4295e8:	bl	405738 <strlen@plt>
  4295ec:	add	x1, x0, #0x1
  4295f0:	ldr	x2, [sp, #16]
  4295f4:	ldr	x0, [sp, #8]
  4295f8:	bl	406738 <siphash24@plt>
  4295fc:	ldp	x29, x30, [sp, #32]
  429600:	add	sp, sp, #0x30
  429604:	ret

0000000000429608 <journal_ratelimit_group_new>:
  429608:	sub	sp, sp, #0x70
  42960c:	stp	x29, x30, [sp, #96]
  429610:	add	x29, sp, #0x60
  429614:	adrp	x8, 42f000 <_fini+0x53a8>
  429618:	add	x8, x8, #0xff5
  42961c:	add	x8, x8, #0x3
  429620:	adrp	x9, 430000 <_fini+0x63a8>
  429624:	add	x9, x9, #0x104
  429628:	stur	x0, [x29, #-16]
  42962c:	stur	x1, [x29, #-24]
  429630:	stur	x2, [x29, #-32]
  429634:	stur	x3, [x29, #-40]
  429638:	str	x8, [sp, #8]
  42963c:	str	x9, [sp]
  429640:	ldur	x8, [x29, #-16]
  429644:	cmp	x8, #0x0
  429648:	cset	w9, ne  // ne = any
  42964c:	mov	w10, #0x1                   	// #1
  429650:	eor	w9, w9, #0x1
  429654:	eor	w9, w9, w10
  429658:	eor	w9, w9, w10
  42965c:	and	w9, w9, #0x1
  429660:	mov	w0, w9
  429664:	sxtw	x8, w0
  429668:	cbz	x8, 42968c <journal_ratelimit_group_new+0x84>
  42966c:	mov	w8, wzr
  429670:	mov	w0, w8
  429674:	adrp	x1, 42f000 <_fini+0x53a8>
  429678:	add	x1, x1, #0xff3
  42967c:	ldr	x2, [sp, #8]
  429680:	mov	w3, #0x80                  	// #128
  429684:	ldr	x4, [sp]
  429688:	bl	405718 <log_assert_failed_realm@plt>
  42968c:	ldur	x8, [x29, #-24]
  429690:	cmp	x8, #0x0
  429694:	cset	w9, ne  // ne = any
  429698:	mov	w10, #0x1                   	// #1
  42969c:	eor	w9, w9, #0x1
  4296a0:	eor	w9, w9, w10
  4296a4:	eor	w9, w9, w10
  4296a8:	and	w9, w9, #0x1
  4296ac:	mov	w0, w9
  4296b0:	sxtw	x8, w0
  4296b4:	cbz	x8, 4296d8 <journal_ratelimit_group_new+0xd0>
  4296b8:	mov	w8, wzr
  4296bc:	mov	w0, w8
  4296c0:	adrp	x1, 430000 <_fini+0x63a8>
  4296c4:	add	x1, x1, #0x4a
  4296c8:	ldr	x2, [sp, #8]
  4296cc:	mov	w3, #0x81                  	// #129
  4296d0:	ldr	x4, [sp]
  4296d4:	bl	405718 <log_assert_failed_realm@plt>
  4296d8:	mov	x0, #0x1                   	// #1
  4296dc:	mov	x1, #0x90                  	// #144
  4296e0:	bl	406118 <calloc@plt>
  4296e4:	str	x0, [sp, #48]
  4296e8:	ldr	x8, [sp, #48]
  4296ec:	cbnz	x8, 4296fc <journal_ratelimit_group_new+0xf4>
  4296f0:	mov	x8, xzr
  4296f4:	stur	x8, [x29, #-8]
  4296f8:	b	4298f8 <journal_ratelimit_group_new+0x2f0>
  4296fc:	ldur	x0, [x29, #-24]
  429700:	bl	406268 <strdup@plt>
  429704:	ldr	x8, [sp, #48]
  429708:	str	x0, [x8, #8]
  42970c:	ldr	x8, [sp, #48]
  429710:	ldr	x8, [x8, #8]
  429714:	cbnz	x8, 42971c <journal_ratelimit_group_new+0x114>
  429718:	b	4298e8 <journal_ratelimit_group_new+0x2e0>
  42971c:	ldr	x8, [sp, #48]
  429720:	ldr	x0, [x8, #8]
  429724:	ldur	x8, [x29, #-16]
  429728:	add	x1, x8, #0x40c
  42972c:	bl	4295c4 <siphash24_string>
  429730:	ldr	x8, [sp, #48]
  429734:	str	x0, [x8, #104]
  429738:	ldur	x8, [x29, #-32]
  42973c:	ldr	x9, [sp, #48]
  429740:	str	x8, [x9, #16]
  429744:	ldur	x0, [x29, #-16]
  429748:	ldur	x1, [x29, #-40]
  42974c:	bl	429974 <journal_ratelimit_vacuum>
  429750:	ldur	x8, [x29, #-16]
  429754:	ldr	x9, [sp, #48]
  429758:	ldr	x9, [x9, #104]
  42975c:	mov	x10, #0x7f                  	// #127
  429760:	udiv	x11, x9, x10
  429764:	mul	x10, x11, x10
  429768:	subs	x9, x9, x10
  42976c:	mov	x10, #0x8                   	// #8
  429770:	mul	x9, x10, x9
  429774:	add	x8, x8, x9
  429778:	str	x8, [sp, #40]
  42977c:	ldr	x8, [sp, #48]
  429780:	str	x8, [sp, #32]
  429784:	ldr	x8, [sp, #32]
  429788:	cmp	x8, #0x0
  42978c:	cset	w9, ne  // ne = any
  429790:	mov	w10, #0x1                   	// #1
  429794:	eor	w9, w9, #0x1
  429798:	eor	w9, w9, w10
  42979c:	eor	w9, w9, w10
  4297a0:	and	w9, w9, #0x1
  4297a4:	mov	w0, w9
  4297a8:	sxtw	x8, w0
  4297ac:	cbz	x8, 4297d0 <journal_ratelimit_group_new+0x1c8>
  4297b0:	mov	w8, wzr
  4297b4:	mov	w0, w8
  4297b8:	adrp	x1, 42d000 <_fini+0x33a8>
  4297bc:	add	x1, x1, #0x47f
  4297c0:	ldr	x2, [sp, #8]
  4297c4:	mov	w3, #0x91                  	// #145
  4297c8:	ldr	x4, [sp]
  4297cc:	bl	405718 <log_assert_failed_realm@plt>
  4297d0:	ldr	x8, [sp, #40]
  4297d4:	ldr	x8, [x8]
  4297d8:	ldr	x9, [sp, #32]
  4297dc:	str	x8, [x9, #112]
  4297e0:	cbz	x8, 4297f4 <journal_ratelimit_group_new+0x1ec>
  4297e4:	ldr	x8, [sp, #32]
  4297e8:	ldr	x9, [sp, #32]
  4297ec:	ldr	x9, [x9, #112]
  4297f0:	str	x8, [x9, #120]
  4297f4:	ldr	x8, [sp, #32]
  4297f8:	mov	x9, xzr
  4297fc:	str	x9, [x8, #120]
  429800:	ldr	x8, [sp, #32]
  429804:	ldr	x9, [sp, #40]
  429808:	str	x8, [x9]
  42980c:	ldur	x8, [x29, #-16]
  429810:	add	x8, x8, #0x3f8
  429814:	str	x8, [sp, #24]
  429818:	ldr	x8, [sp, #48]
  42981c:	str	x8, [sp, #16]
  429820:	ldr	x8, [sp, #16]
  429824:	cmp	x8, #0x0
  429828:	cset	w9, ne  // ne = any
  42982c:	mov	w10, #0x1                   	// #1
  429830:	eor	w9, w9, #0x1
  429834:	eor	w9, w9, w10
  429838:	eor	w9, w9, w10
  42983c:	and	w9, w9, #0x1
  429840:	mov	w0, w9
  429844:	sxtw	x8, w0
  429848:	cbz	x8, 42986c <journal_ratelimit_group_new+0x264>
  42984c:	mov	w8, wzr
  429850:	mov	w0, w8
  429854:	adrp	x1, 42d000 <_fini+0x33a8>
  429858:	add	x1, x1, #0x47f
  42985c:	ldr	x2, [sp, #8]
  429860:	mov	w3, #0x92                  	// #146
  429864:	ldr	x4, [sp]
  429868:	bl	405718 <log_assert_failed_realm@plt>
  42986c:	ldr	x8, [sp, #24]
  429870:	ldr	x8, [x8]
  429874:	ldr	x9, [sp, #16]
  429878:	str	x8, [x9, #128]
  42987c:	cbz	x8, 429890 <journal_ratelimit_group_new+0x288>
  429880:	ldr	x8, [sp, #16]
  429884:	ldr	x9, [sp, #16]
  429888:	ldr	x9, [x9, #128]
  42988c:	str	x8, [x9, #136]
  429890:	ldr	x8, [sp, #16]
  429894:	mov	x9, xzr
  429898:	str	x9, [x8, #136]
  42989c:	ldr	x8, [sp, #16]
  4298a0:	ldr	x9, [sp, #24]
  4298a4:	str	x8, [x9]
  4298a8:	ldr	x8, [sp, #48]
  4298ac:	ldr	x8, [x8, #128]
  4298b0:	cbnz	x8, 4298c0 <journal_ratelimit_group_new+0x2b8>
  4298b4:	ldr	x8, [sp, #48]
  4298b8:	ldur	x9, [x29, #-16]
  4298bc:	str	x8, [x9, #1024]
  4298c0:	ldur	x8, [x29, #-16]
  4298c4:	ldr	w9, [x8, #1032]
  4298c8:	add	w9, w9, #0x1
  4298cc:	str	w9, [x8, #1032]
  4298d0:	ldur	x8, [x29, #-16]
  4298d4:	ldr	x10, [sp, #48]
  4298d8:	str	x8, [x10]
  4298dc:	ldr	x8, [sp, #48]
  4298e0:	stur	x8, [x29, #-8]
  4298e4:	b	4298f8 <journal_ratelimit_group_new+0x2f0>
  4298e8:	ldr	x0, [sp, #48]
  4298ec:	bl	428f90 <journal_ratelimit_group_free>
  4298f0:	mov	x8, xzr
  4298f4:	stur	x8, [x29, #-8]
  4298f8:	ldur	x0, [x29, #-8]
  4298fc:	ldp	x29, x30, [sp, #96]
  429900:	add	sp, sp, #0x70
  429904:	ret

0000000000429908 <burst_modulate>:
  429908:	sub	sp, sp, #0x30
  42990c:	stp	x29, x30, [sp, #32]
  429910:	add	x29, sp, #0x20
  429914:	stur	w0, [x29, #-8]
  429918:	str	x1, [sp, #16]
  42991c:	ldr	x0, [sp, #16]
  429920:	bl	429b50 <u64log2>
  429924:	str	w0, [sp, #12]
  429928:	ldr	w8, [sp, #12]
  42992c:	cmp	w8, #0x14
  429930:	b.hi	429940 <burst_modulate+0x38>  // b.pmore
  429934:	ldur	w8, [x29, #-8]
  429938:	stur	w8, [x29, #-4]
  42993c:	b	429964 <burst_modulate+0x5c>
  429940:	ldur	w8, [x29, #-8]
  429944:	ldr	w9, [sp, #12]
  429948:	subs	w9, w9, #0x10
  42994c:	mul	w8, w8, w9
  429950:	mov	w9, #0x4                   	// #4
  429954:	udiv	w8, w8, w9
  429958:	stur	w8, [x29, #-8]
  42995c:	ldur	w8, [x29, #-8]
  429960:	stur	w8, [x29, #-4]
  429964:	ldur	w0, [x29, #-4]
  429968:	ldp	x29, x30, [sp, #32]
  42996c:	add	sp, sp, #0x30
  429970:	ret

0000000000429974 <journal_ratelimit_vacuum>:
  429974:	sub	sp, sp, #0x30
  429978:	stp	x29, x30, [sp, #32]
  42997c:	add	x29, sp, #0x20
  429980:	adrp	x8, 42f000 <_fini+0x53a8>
  429984:	add	x8, x8, #0xff5
  429988:	add	x2, x8, #0x3
  42998c:	stur	x0, [x29, #-8]
  429990:	str	x1, [sp, #16]
  429994:	str	x2, [sp, #8]
  429998:	ldur	x8, [x29, #-8]
  42999c:	cmp	x8, #0x0
  4299a0:	cset	w9, ne  // ne = any
  4299a4:	mov	w10, #0x1                   	// #1
  4299a8:	eor	w9, w9, #0x1
  4299ac:	eor	w9, w9, w10
  4299b0:	eor	w9, w9, w10
  4299b4:	and	w9, w9, #0x1
  4299b8:	mov	w0, w9
  4299bc:	sxtw	x8, w0
  4299c0:	cbz	x8, 4299e8 <journal_ratelimit_vacuum+0x74>
  4299c4:	mov	w8, wzr
  4299c8:	mov	w0, w8
  4299cc:	adrp	x1, 42f000 <_fini+0x53a8>
  4299d0:	add	x1, x1, #0xff3
  4299d4:	ldr	x2, [sp, #8]
  4299d8:	mov	w3, #0x73                  	// #115
  4299dc:	adrp	x4, 430000 <_fini+0x63a8>
  4299e0:	add	x4, x4, #0x169
  4299e4:	bl	405718 <log_assert_failed_realm@plt>
  4299e8:	ldur	x8, [x29, #-8]
  4299ec:	ldr	w9, [x8, #1032]
  4299f0:	mov	w10, #0x1                   	// #1
  4299f4:	cmp	w9, #0x7ff
  4299f8:	str	w10, [sp, #4]
  4299fc:	b.cs	429a30 <journal_ratelimit_vacuum+0xbc>  // b.hs, b.nlast
  429a00:	ldur	x8, [x29, #-8]
  429a04:	ldr	x8, [x8, #1024]
  429a08:	mov	w9, #0x0                   	// #0
  429a0c:	str	w9, [sp]
  429a10:	cbz	x8, 429a28 <journal_ratelimit_vacuum+0xb4>
  429a14:	ldur	x8, [x29, #-8]
  429a18:	ldr	x0, [x8, #1024]
  429a1c:	ldr	x1, [sp, #16]
  429a20:	bl	429a58 <journal_ratelimit_group_expired>
  429a24:	str	w0, [sp]
  429a28:	ldr	w8, [sp]
  429a2c:	str	w8, [sp, #4]
  429a30:	ldr	w8, [sp, #4]
  429a34:	tbnz	w8, #0, 429a3c <journal_ratelimit_vacuum+0xc8>
  429a38:	b	429a4c <journal_ratelimit_vacuum+0xd8>
  429a3c:	ldur	x8, [x29, #-8]
  429a40:	ldr	x0, [x8, #1024]
  429a44:	bl	428f90 <journal_ratelimit_group_free>
  429a48:	b	4299e8 <journal_ratelimit_vacuum+0x74>
  429a4c:	ldp	x29, x30, [sp, #32]
  429a50:	add	sp, sp, #0x30
  429a54:	ret

0000000000429a58 <journal_ratelimit_group_expired>:
  429a58:	sub	sp, sp, #0x40
  429a5c:	stp	x29, x30, [sp, #48]
  429a60:	add	x29, sp, #0x30
  429a64:	adrp	x8, 42f000 <_fini+0x53a8>
  429a68:	add	x8, x8, #0xff5
  429a6c:	add	x2, x8, #0x3
  429a70:	stur	x0, [x29, #-16]
  429a74:	str	x1, [sp, #24]
  429a78:	str	x2, [sp, #8]
  429a7c:	ldur	x8, [x29, #-16]
  429a80:	cmp	x8, #0x0
  429a84:	cset	w9, ne  // ne = any
  429a88:	mov	w10, #0x1                   	// #1
  429a8c:	eor	w9, w9, #0x1
  429a90:	eor	w9, w9, w10
  429a94:	eor	w9, w9, w10
  429a98:	and	w9, w9, #0x1
  429a9c:	mov	w0, w9
  429aa0:	sxtw	x8, w0
  429aa4:	cbz	x8, 429acc <journal_ratelimit_group_expired+0x74>
  429aa8:	mov	w8, wzr
  429aac:	mov	w0, w8
  429ab0:	adrp	x1, 430000 <_fini+0x63a8>
  429ab4:	add	x1, x1, #0xaf
  429ab8:	ldr	x2, [sp, #8]
  429abc:	mov	w3, #0x69                  	// #105
  429ac0:	adrp	x4, 430000 <_fini+0x63a8>
  429ac4:	add	x4, x4, #0x1a3
  429ac8:	bl	405718 <log_assert_failed_realm@plt>
  429acc:	str	wzr, [sp, #20]
  429ad0:	ldr	w8, [sp, #20]
  429ad4:	cmp	w8, #0x5
  429ad8:	b.cs	429b30 <journal_ratelimit_group_expired+0xd8>  // b.hs, b.nlast
  429adc:	ldur	x8, [x29, #-16]
  429ae0:	add	x8, x8, #0x18
  429ae4:	ldr	w9, [sp, #20]
  429ae8:	mov	w10, w9
  429aec:	mov	x11, #0x10                  	// #16
  429af0:	mul	x10, x11, x10
  429af4:	ldr	x8, [x8, x10]
  429af8:	ldur	x10, [x29, #-16]
  429afc:	ldr	x10, [x10, #16]
  429b00:	add	x8, x8, x10
  429b04:	ldr	x10, [sp, #24]
  429b08:	cmp	x8, x10
  429b0c:	b.cc	429b20 <journal_ratelimit_group_expired+0xc8>  // b.lo, b.ul, b.last
  429b10:	mov	w8, wzr
  429b14:	and	w8, w8, #0x1
  429b18:	sturb	w8, [x29, #-1]
  429b1c:	b	429b3c <journal_ratelimit_group_expired+0xe4>
  429b20:	ldr	w8, [sp, #20]
  429b24:	add	w8, w8, #0x1
  429b28:	str	w8, [sp, #20]
  429b2c:	b	429ad0 <journal_ratelimit_group_expired+0x78>
  429b30:	mov	w8, #0x1                   	// #1
  429b34:	and	w8, w8, #0x1
  429b38:	sturb	w8, [x29, #-1]
  429b3c:	ldurb	w8, [x29, #-1]
  429b40:	and	w0, w8, #0x1
  429b44:	ldp	x29, x30, [sp, #48]
  429b48:	add	sp, sp, #0x40
  429b4c:	ret

0000000000429b50 <u64log2>:
  429b50:	sub	sp, sp, #0x10
  429b54:	str	x0, [sp, #8]
  429b58:	ldr	x8, [sp, #8]
  429b5c:	cmp	x8, #0x1
  429b60:	b.ls	429b78 <u64log2+0x28>  // b.plast
  429b64:	ldr	x8, [sp, #8]
  429b68:	clz	x8, x8
  429b6c:	eor	w8, w8, #0x3f
  429b70:	str	w8, [sp, #4]
  429b74:	b	429b80 <u64log2+0x30>
  429b78:	mov	w8, wzr
  429b7c:	str	w8, [sp, #4]
  429b80:	ldr	w8, [sp, #4]
  429b84:	mov	w0, w8
  429b88:	add	sp, sp, #0x10
  429b8c:	ret

0000000000429b90 <__libc_csu_init>:
  429b90:	stp	x29, x30, [sp, #-64]!
  429b94:	mov	x29, sp
  429b98:	stp	x19, x20, [sp, #16]
  429b9c:	adrp	x20, 44e000 <__FRAME_END__+0x1d1c8>
  429ba0:	add	x20, x20, #0xb70
  429ba4:	stp	x21, x22, [sp, #32]
  429ba8:	adrp	x21, 44e000 <__FRAME_END__+0x1d1c8>
  429bac:	add	x21, x21, #0xb68
  429bb0:	sub	x20, x20, x21
  429bb4:	mov	w22, w0
  429bb8:	stp	x23, x24, [sp, #48]
  429bbc:	mov	x23, x1
  429bc0:	mov	x24, x2
  429bc4:	bl	4055d0 <_init>
  429bc8:	cmp	xzr, x20, asr #3
  429bcc:	b.eq	429bf8 <__libc_csu_init+0x68>  // b.none
  429bd0:	asr	x20, x20, #3
  429bd4:	mov	x19, #0x0                   	// #0
  429bd8:	ldr	x3, [x21, x19, lsl #3]
  429bdc:	mov	x2, x24
  429be0:	add	x19, x19, #0x1
  429be4:	mov	x1, x23
  429be8:	mov	w0, w22
  429bec:	blr	x3
  429bf0:	cmp	x20, x19
  429bf4:	b.ne	429bd8 <__libc_csu_init+0x48>  // b.any
  429bf8:	ldp	x19, x20, [sp, #16]
  429bfc:	ldp	x21, x22, [sp, #32]
  429c00:	ldp	x23, x24, [sp, #48]
  429c04:	ldp	x29, x30, [sp], #64
  429c08:	ret
  429c0c:	nop

0000000000429c10 <__libc_csu_fini>:
  429c10:	ret
  429c14:	udf	#0

0000000000429c18 <stat64>:
  429c18:	mov	x2, x1
  429c1c:	mov	x1, x0
  429c20:	mov	w0, #0x0                   	// #0
  429c24:	b	406748 <__xstat64@plt>

0000000000429c28 <fstat64>:
  429c28:	mov	x2, x1
  429c2c:	mov	w1, w0
  429c30:	mov	w0, #0x0                   	// #0
  429c34:	b	406758 <__fxstat64@plt>

0000000000429c38 <fstatat64>:
  429c38:	mov	x4, x1
  429c3c:	mov	x5, x2
  429c40:	mov	w1, w0
  429c44:	mov	x2, x4
  429c48:	mov	w0, #0x0                   	// #0
  429c4c:	mov	w4, w3
  429c50:	mov	x3, x5
  429c54:	b	406768 <__fxstatat64@plt>

Disassembly of section .fini:

0000000000429c58 <_fini>:
  429c58:	stp	x29, x30, [sp, #-16]!
  429c5c:	mov	x29, sp
  429c60:	ldp	x29, x30, [sp], #16
  429c64:	ret
