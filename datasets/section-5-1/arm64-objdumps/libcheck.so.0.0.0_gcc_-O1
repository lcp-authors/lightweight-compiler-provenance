
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libcheck.so.0.0.0_gcc_-O1:     file format elf64-littleaarch64


Disassembly of section .init:

00000000000020a8 <.init>:
    20a8:	stp	x29, x30, [sp, #-16]!
    20ac:	mov	x29, sp
    20b0:	bl	2550 <ferror@plt+0x10>
    20b4:	ldp	x29, x30, [sp], #16
    20b8:	ret

Disassembly of section .plt:

00000000000020c0 <memcpy@plt-0x20>:
    20c0:	stp	x16, x30, [sp, #-16]!
    20c4:	adrp	x16, 18000 <check_waitpid_and_exit@@Base+0x11d30>
    20c8:	ldr	x17, [x16, #4088]
    20cc:	add	x16, x16, #0xff8
    20d0:	br	x17
    20d4:	nop
    20d8:	nop
    20dc:	nop

00000000000020e0 <memcpy@plt>:
    20e0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    20e4:	ldr	x17, [x16]
    20e8:	add	x16, x16, #0x0
    20ec:	br	x17

00000000000020f0 <memmove@plt>:
    20f0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    20f4:	ldr	x17, [x16, #8]
    20f8:	add	x16, x16, #0x8
    20fc:	br	x17

0000000000002100 <srunner_tap_fname@plt>:
    2100:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2104:	ldr	x17, [x16, #16]
    2108:	add	x16, x16, #0x10
    210c:	br	x17

0000000000002110 <_exit@plt>:
    2110:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2114:	ldr	x17, [x16, #24]
    2118:	add	x16, x16, #0x18
    211c:	br	x17

0000000000002120 <tcase_fn_start@plt>:
    2120:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2124:	ldr	x17, [x16, #32]
    2128:	add	x16, x16, #0x20
    212c:	br	x17

0000000000002130 <strtok@plt>:
    2130:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2134:	ldr	x17, [x16, #40]
    2138:	add	x16, x16, #0x28
    213c:	br	x17

0000000000002140 <strtoul@plt>:
    2140:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2144:	ldr	x17, [x16, #48]
    2148:	add	x16, x16, #0x30
    214c:	br	x17

0000000000002150 <strlen@plt>:
    2150:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2154:	ldr	x17, [x16, #56]
    2158:	add	x16, x16, #0x38
    215c:	br	x17

0000000000002160 <exit@plt>:
    2160:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2164:	ldr	x17, [x16, #64]
    2168:	add	x16, x16, #0x40
    216c:	br	x17

0000000000002170 <_setjmp@plt>:
    2170:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2174:	ldr	x17, [x16, #72]
    2178:	add	x16, x16, #0x48
    217c:	br	x17

0000000000002180 <strtod@plt>:
    2180:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2184:	ldr	x17, [x16, #80]
    2188:	add	x16, x16, #0x50
    218c:	br	x17

0000000000002190 <srunner_has_log@plt>:
    2190:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2194:	ldr	x17, [x16, #88]
    2198:	add	x16, x16, #0x58
    219c:	br	x17

00000000000021a0 <__sigsetjmp@plt>:
    21a0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    21a4:	ldr	x17, [x16, #96]
    21a8:	add	x16, x16, #0x60
    21ac:	br	x17

00000000000021b0 <localtime_r@plt>:
    21b0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    21b4:	ldr	x17, [x16, #104]
    21b8:	add	x16, x16, #0x68
    21bc:	br	x17

00000000000021c0 <__cxa_finalize@plt>:
    21c0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    21c4:	ldr	x17, [x16, #112]
    21c8:	add	x16, x16, #0x70
    21cc:	br	x17

00000000000021d0 <strftime@plt>:
    21d0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    21d4:	ldr	x17, [x16, #120]
    21d8:	add	x16, x16, #0x78
    21dc:	br	x17

00000000000021e0 <fputc@plt>:
    21e0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    21e4:	ldr	x17, [x16, #128]
    21e8:	add	x16, x16, #0x80
    21ec:	br	x17

00000000000021f0 <clock_gettime@plt>:
    21f0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    21f4:	ldr	x17, [x16, #136]
    21f8:	add	x16, x16, #0x88
    21fc:	br	x17

0000000000002200 <fork@plt>:
    2200:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2204:	ldr	x17, [x16, #144]
    2208:	add	x16, x16, #0x90
    220c:	br	x17

0000000000002210 <srunner_fork_status@plt>:
    2210:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2214:	ldr	x17, [x16, #152]
    2218:	add	x16, x16, #0x98
    221c:	br	x17

0000000000002220 <__pthread_register_cancel@plt>:
    2220:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2224:	ldr	x17, [x16, #160]
    2228:	add	x16, x16, #0xa0
    222c:	br	x17

0000000000002230 <snprintf@plt>:
    2230:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2234:	ldr	x17, [x16, #168]
    2238:	add	x16, x16, #0xa8
    223c:	br	x17

0000000000002240 <srunner_ntests_failed@plt>:
    2240:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2244:	ldr	x17, [x16, #176]
    2248:	add	x16, x16, #0xb0
    224c:	br	x17

0000000000002250 <srunner_xml_fname@plt>:
    2250:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2254:	ldr	x17, [x16, #184]
    2258:	add	x16, x16, #0xb8
    225c:	br	x17

0000000000002260 <fclose@plt>:
    2260:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2264:	ldr	x17, [x16, #192]
    2268:	add	x16, x16, #0xc0
    226c:	br	x17

0000000000002270 <fopen@plt>:
    2270:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2274:	ldr	x17, [x16, #200]
    2278:	add	x16, x16, #0xc8
    227c:	br	x17

0000000000002280 <timer_settime@plt>:
    2280:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2284:	ldr	x17, [x16, #208]
    2288:	add	x16, x16, #0xd0
    228c:	br	x17

0000000000002290 <malloc@plt>:
    2290:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2294:	ldr	x17, [x16, #216]
    2298:	add	x16, x16, #0xd8
    229c:	br	x17

00000000000022a0 <fdopen@plt>:
    22a0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    22a4:	ldr	x17, [x16, #224]
    22a8:	add	x16, x16, #0xe0
    22ac:	br	x17

00000000000022b0 <gettimeofday@plt>:
    22b0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    22b4:	ldr	x17, [x16, #232]
    22b8:	add	x16, x16, #0xe8
    22bc:	br	x17

00000000000022c0 <__pthread_unregister_cancel@plt>:
    22c0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    22c4:	ldr	x17, [x16, #240]
    22c8:	add	x16, x16, #0xf0
    22cc:	br	x17

00000000000022d0 <realloc@plt>:
    22d0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    22d4:	ldr	x17, [x16, #248]
    22d8:	add	x16, x16, #0xf8
    22dc:	br	x17

00000000000022e0 <rewind@plt>:
    22e0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    22e4:	ldr	x17, [x16, #256]
    22e8:	add	x16, x16, #0x100
    22ec:	br	x17

00000000000022f0 <__pthread_unwind_next@plt>:
    22f0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    22f4:	ldr	x17, [x16, #264]
    22f8:	add	x16, x16, #0x108
    22fc:	br	x17

0000000000002300 <strdup@plt>:
    2300:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2304:	ldr	x17, [x16, #272]
    2308:	add	x16, x16, #0x110
    230c:	br	x17

0000000000002310 <strerror@plt>:
    2310:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2314:	ldr	x17, [x16, #280]
    2318:	add	x16, x16, #0x118
    231c:	br	x17

0000000000002320 <sigaction@plt>:
    2320:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2324:	ldr	x17, [x16, #288]
    2328:	add	x16, x16, #0x120
    232c:	br	x17

0000000000002330 <strrchr@plt>:
    2330:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2334:	ldr	x17, [x16, #296]
    2338:	add	x16, x16, #0x128
    233c:	br	x17

0000000000002340 <__gmon_start__@plt>:
    2340:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2344:	ldr	x17, [x16, #304]
    2348:	add	x16, x16, #0x130
    234c:	br	x17

0000000000002350 <abort@plt>:
    2350:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2354:	ldr	x17, [x16, #312]
    2358:	add	x16, x16, #0x138
    235c:	br	x17

0000000000002360 <srunner_run@plt>:
    2360:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2364:	ldr	x17, [x16, #320]
    2368:	add	x16, x16, #0x140
    236c:	br	x17

0000000000002370 <timer_create@plt>:
    2370:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2374:	ldr	x17, [x16, #328]
    2378:	add	x16, x16, #0x148
    237c:	br	x17

0000000000002380 <strcmp@plt>:
    2380:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2384:	ldr	x17, [x16, #336]
    2388:	add	x16, x16, #0x150
    238c:	br	x17

0000000000002390 <srunner_has_tap@plt>:
    2390:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2394:	ldr	x17, [x16, #344]
    2398:	add	x16, x16, #0x158
    239c:	br	x17

00000000000023a0 <srunner_has_xml@plt>:
    23a0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    23a4:	ldr	x17, [x16, #352]
    23a8:	add	x16, x16, #0x160
    23ac:	br	x17

00000000000023b0 <fread@plt>:
    23b0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    23b4:	ldr	x17, [x16, #360]
    23b8:	add	x16, x16, #0x168
    23bc:	br	x17

00000000000023c0 <setpgid@plt>:
    23c0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    23c4:	ldr	x17, [x16, #368]
    23c8:	add	x16, x16, #0x170
    23cc:	br	x17

00000000000023d0 <srunner_ntests_run@plt>:
    23d0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    23d4:	ldr	x17, [x16, #376]
    23d8:	add	x16, x16, #0x178
    23dc:	br	x17

00000000000023e0 <free@plt>:
    23e0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    23e4:	ldr	x17, [x16, #384]
    23e8:	add	x16, x16, #0x180
    23ec:	br	x17

00000000000023f0 <getpgrp@plt>:
    23f0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    23f4:	ldr	x17, [x16, #392]
    23f8:	add	x16, x16, #0x188
    23fc:	br	x17

0000000000002400 <timer_delete@plt>:
    2400:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2404:	ldr	x17, [x16, #400]
    2408:	add	x16, x16, #0x190
    240c:	br	x17

0000000000002410 <suite_tcase@plt>:
    2410:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2414:	ldr	x17, [x16, #408]
    2418:	add	x16, x16, #0x198
    241c:	br	x17

0000000000002420 <srunner_log_fname@plt>:
    2420:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2424:	ldr	x17, [x16, #416]
    2428:	add	x16, x16, #0x1a0
    242c:	br	x17

0000000000002430 <killpg@plt>:
    2430:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2434:	ldr	x17, [x16, #424]
    2438:	add	x16, x16, #0x1a8
    243c:	br	x17

0000000000002440 <fwrite@plt>:
    2440:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2444:	ldr	x17, [x16, #432]
    2448:	add	x16, x16, #0x1b0
    244c:	br	x17

0000000000002450 <srunner_run_tagged@plt>:
    2450:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2454:	ldr	x17, [x16, #440]
    2458:	add	x16, x16, #0x1b8
    245c:	br	x17

0000000000002460 <fflush@plt>:
    2460:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2464:	ldr	x17, [x16, #448]
    2468:	add	x16, x16, #0x1c0
    246c:	br	x17

0000000000002470 <mkstemp@plt>:
    2470:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2474:	ldr	x17, [x16, #456]
    2478:	add	x16, x16, #0x1c8
    247c:	br	x17

0000000000002480 <vsnprintf@plt>:
    2480:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2484:	ldr	x17, [x16, #464]
    2488:	add	x16, x16, #0x1d0
    248c:	br	x17

0000000000002490 <longjmp@plt>:
    2490:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2494:	ldr	x17, [x16, #472]
    2498:	add	x16, x16, #0x1d8
    249c:	br	x17

00000000000024a0 <strsignal@plt>:
    24a0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    24a4:	ldr	x17, [x16, #480]
    24a8:	add	x16, x16, #0x1e0
    24ac:	br	x17

00000000000024b0 <vfprintf@plt>:
    24b0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    24b4:	ldr	x17, [x16, #488]
    24b8:	add	x16, x16, #0x1e8
    24bc:	br	x17

00000000000024c0 <__assert_fail@plt>:
    24c0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    24c4:	ldr	x17, [x16, #496]
    24c8:	add	x16, x16, #0x1f0
    24cc:	br	x17

00000000000024d0 <__errno_location@plt>:
    24d0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    24d4:	ldr	x17, [x16, #504]
    24d8:	add	x16, x16, #0x1f8
    24dc:	br	x17

00000000000024e0 <getenv@plt>:
    24e0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    24e4:	ldr	x17, [x16, #512]
    24e8:	add	x16, x16, #0x200
    24ec:	br	x17

00000000000024f0 <pthread_mutex_lock@plt>:
    24f0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    24f4:	ldr	x17, [x16, #520]
    24f8:	add	x16, x16, #0x208
    24fc:	br	x17

0000000000002500 <pthread_mutex_unlock@plt>:
    2500:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2504:	ldr	x17, [x16, #528]
    2508:	add	x16, x16, #0x210
    250c:	br	x17

0000000000002510 <waitpid@plt>:
    2510:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2514:	ldr	x17, [x16, #536]
    2518:	add	x16, x16, #0x218
    251c:	br	x17

0000000000002520 <unlink@plt>:
    2520:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2524:	ldr	x17, [x16, #544]
    2528:	add	x16, x16, #0x220
    252c:	br	x17

0000000000002530 <fprintf@plt>:
    2530:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2534:	ldr	x17, [x16, #552]
    2538:	add	x16, x16, #0x228
    253c:	br	x17

0000000000002540 <ferror@plt>:
    2540:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2544:	ldr	x17, [x16, #560]
    2548:	add	x16, x16, #0x230
    254c:	br	x17

Disassembly of section .text:

0000000000002550 <suite_create@@Base-0x108>:
    2550:	adrp	x0, 18000 <check_waitpid_and_exit@@Base+0x11d30>
    2554:	ldr	x0, [x0, #4040]
    2558:	cbz	x0, 2560 <ferror@plt+0x20>
    255c:	b	2340 <__gmon_start__@plt>
    2560:	ret
    2564:	adrp	x0, 19000 <check_waitpid_and_exit@@Base+0x12d30>
    2568:	add	x0, x0, #0x250
    256c:	adrp	x1, 19000 <check_waitpid_and_exit@@Base+0x12d30>
    2570:	add	x1, x1, #0x250
    2574:	cmp	x0, x1
    2578:	b.eq	25a4 <ferror@plt+0x64>  // b.none
    257c:	adrp	x1, 18000 <check_waitpid_and_exit@@Base+0x11d30>
    2580:	ldr	x1, [x1, #3968]
    2584:	cbz	x1, 25a4 <ferror@plt+0x64>
    2588:	stp	x29, x30, [sp, #-16]!
    258c:	mov	x29, sp
    2590:	adrp	x0, 19000 <check_waitpid_and_exit@@Base+0x12d30>
    2594:	add	x0, x0, #0x250
    2598:	blr	x1
    259c:	ldp	x29, x30, [sp], #16
    25a0:	ret
    25a4:	ret
    25a8:	adrp	x0, 19000 <check_waitpid_and_exit@@Base+0x12d30>
    25ac:	add	x0, x0, #0x250
    25b0:	adrp	x1, 19000 <check_waitpid_and_exit@@Base+0x12d30>
    25b4:	add	x1, x1, #0x250
    25b8:	sub	x0, x0, x1
    25bc:	lsr	x1, x0, #63
    25c0:	add	x0, x1, x0, asr #3
    25c4:	cmp	xzr, x0, asr #1
    25c8:	b.eq	25f8 <ferror@plt+0xb8>  // b.none
    25cc:	asr	x1, x0, #1
    25d0:	adrp	x2, 18000 <check_waitpid_and_exit@@Base+0x11d30>
    25d4:	ldr	x2, [x2, #4064]
    25d8:	cbz	x2, 25f8 <ferror@plt+0xb8>
    25dc:	stp	x29, x30, [sp, #-16]!
    25e0:	mov	x29, sp
    25e4:	adrp	x0, 19000 <check_waitpid_and_exit@@Base+0x12d30>
    25e8:	add	x0, x0, #0x250
    25ec:	blr	x2
    25f0:	ldp	x29, x30, [sp], #16
    25f4:	ret
    25f8:	ret
    25fc:	adrp	x0, 19000 <check_waitpid_and_exit@@Base+0x12d30>
    2600:	ldrb	w0, [x0, #592]
    2604:	cbnz	w0, 2640 <ferror@plt+0x100>
    2608:	stp	x29, x30, [sp, #-16]!
    260c:	mov	x29, sp
    2610:	adrp	x0, 18000 <check_waitpid_and_exit@@Base+0x11d30>
    2614:	ldr	x0, [x0, #3976]
    2618:	cbz	x0, 2628 <ferror@plt+0xe8>
    261c:	adrp	x0, 19000 <check_waitpid_and_exit@@Base+0x12d30>
    2620:	ldr	x0, [x0, #568]
    2624:	bl	21c0 <__cxa_finalize@plt>
    2628:	bl	2564 <ferror@plt+0x24>
    262c:	adrp	x0, 19000 <check_waitpid_and_exit@@Base+0x12d30>
    2630:	mov	w1, #0x1                   	// #1
    2634:	strb	w1, [x0, #592]
    2638:	ldp	x29, x30, [sp], #16
    263c:	ret
    2640:	ret
    2644:	stp	x29, x30, [sp, #-16]!
    2648:	mov	x29, sp
    264c:	bl	25a8 <ferror@plt+0x68>
    2650:	ldp	x29, x30, [sp], #16
    2654:	ret

0000000000002658 <suite_create@@Base>:
    2658:	stp	x29, x30, [sp, #-32]!
    265c:	mov	x29, sp
    2660:	stp	x19, x20, [sp, #16]
    2664:	mov	x19, x0
    2668:	mov	x0, #0x10                  	// #16
    266c:	bl	32f4 <_ck_assert_failed@@Base+0x274>
    2670:	mov	x20, x0
    2674:	adrp	x0, 6000 <srunner_run_tagged@@Base+0x6a8>
    2678:	add	x0, x0, #0xcb0
    267c:	cmp	x19, #0x0
    2680:	csel	x19, x0, x19, eq  // eq = none
    2684:	str	x19, [x20]
    2688:	bl	33c0 <_ck_assert_failed@@Base+0x340>
    268c:	str	x0, [x20, #8]
    2690:	mov	x0, x20
    2694:	ldp	x19, x20, [sp, #16]
    2698:	ldp	x29, x30, [sp], #32
    269c:	ret

00000000000026a0 <suite_tcase@@Base>:
    26a0:	cbz	x0, 2700 <suite_tcase@@Base+0x60>
    26a4:	stp	x29, x30, [sp, #-32]!
    26a8:	mov	x29, sp
    26ac:	stp	x19, x20, [sp, #16]
    26b0:	mov	x20, x1
    26b4:	ldr	x19, [x0, #8]
    26b8:	mov	x0, x19
    26bc:	bl	34e4 <_ck_assert_failed@@Base+0x464>
    26c0:	mov	x0, x19
    26c4:	bl	34c0 <_ck_assert_failed@@Base+0x440>
    26c8:	cbnz	w0, 26f0 <suite_tcase@@Base+0x50>
    26cc:	mov	x0, x19
    26d0:	bl	352c <_ck_assert_failed@@Base+0x4ac>
    26d4:	ldr	x1, [x0]
    26d8:	mov	x0, x20
    26dc:	bl	2380 <strcmp@plt>
    26e0:	cbz	w0, 2708 <suite_tcase@@Base+0x68>
    26e4:	mov	x0, x19
    26e8:	bl	3564 <_ck_assert_failed@@Base+0x4e4>
    26ec:	b	26c0 <suite_tcase@@Base+0x20>
    26f0:	mov	w0, #0x0                   	// #0
    26f4:	ldp	x19, x20, [sp, #16]
    26f8:	ldp	x29, x30, [sp], #32
    26fc:	ret
    2700:	mov	w0, #0x0                   	// #0
    2704:	ret
    2708:	mov	w0, #0x1                   	// #1
    270c:	b	26f4 <suite_tcase@@Base+0x54>

0000000000002710 <tcase_create@@Base>:
    2710:	stp	x29, x30, [sp, #-64]!
    2714:	mov	x29, sp
    2718:	stp	x19, x20, [sp, #16]
    271c:	str	d8, [sp, #32]
    2720:	mov	x20, x0
    2724:	mov	x0, #0x48                  	// #72
    2728:	bl	32f4 <_ck_assert_failed@@Base+0x274>
    272c:	mov	x19, x0
    2730:	adrp	x0, 6000 <srunner_run_tagged@@Base+0x6a8>
    2734:	add	x0, x0, #0xcb0
    2738:	cmp	x20, #0x0
    273c:	csel	x20, x0, x20, eq  // eq = none
    2740:	str	x20, [x19]
    2744:	adrp	x0, 6000 <srunner_run_tagged@@Base+0x6a8>
    2748:	add	x0, x0, #0x5b8
    274c:	bl	24e0 <getenv@plt>
    2750:	fmov	d8, #4.000000000000000000e+00
    2754:	cbz	x0, 2790 <tcase_create@@Base+0x80>
    2758:	mov	x20, x0
    275c:	str	xzr, [sp, #56]
    2760:	add	x1, sp, #0x38
    2764:	bl	2180 <strtod@plt>
    2768:	fmov	d8, d0
    276c:	fcmpe	d0, #0.0
    2770:	b.lt	283c <tcase_create@@Base+0x12c>  // b.tstop
    2774:	ldr	x0, [sp, #56]
    2778:	cmp	x0, x20
    277c:	b.eq	2844 <tcase_create@@Base+0x134>  // b.none
    2780:	ldrb	w0, [x0]
    2784:	cmp	w0, #0x0
    2788:	fmov	d0, #4.000000000000000000e+00
    278c:	fcsel	d8, d8, d0, eq  // eq = none
    2790:	adrp	x0, 6000 <srunner_run_tagged@@Base+0x6a8>
    2794:	add	x0, x0, #0x5d0
    2798:	bl	24e0 <getenv@plt>
    279c:	mov	x20, x0
    27a0:	cbz	x0, 27d0 <tcase_create@@Base+0xc0>
    27a4:	str	xzr, [sp, #56]
    27a8:	add	x1, sp, #0x38
    27ac:	bl	2180 <strtod@plt>
    27b0:	fcmpe	d0, #0.0
    27b4:	b.lt	27d0 <tcase_create@@Base+0xc0>  // b.tstop
    27b8:	ldr	x0, [sp, #56]
    27bc:	cmp	x0, x20
    27c0:	b.eq	27d0 <tcase_create@@Base+0xc0>  // b.none
    27c4:	ldrb	w0, [x0]
    27c8:	cbnz	w0, 27d0 <tcase_create@@Base+0xc0>
    27cc:	fmul	d8, d8, d0
    27d0:	fcvtms	x0, d8
    27d4:	str	x0, [x19, #8]
    27d8:	frintm	d0, d8
    27dc:	fsub	d8, d8, d0
    27e0:	mov	x0, #0xcd6500000000        	// #225833675390976
    27e4:	movk	x0, #0x41cd, lsl #48
    27e8:	fmov	d0, x0
    27ec:	fmul	d8, d8, d0
    27f0:	fcvtzs	d8, d8
    27f4:	str	d8, [x19, #16]
    27f8:	bl	33c0 <_ck_assert_failed@@Base+0x340>
    27fc:	str	x0, [x19, #24]
    2800:	bl	33c0 <_ck_assert_failed@@Base+0x340>
    2804:	str	x0, [x19, #32]
    2808:	bl	33c0 <_ck_assert_failed@@Base+0x340>
    280c:	str	x0, [x19, #48]
    2810:	bl	33c0 <_ck_assert_failed@@Base+0x340>
    2814:	str	x0, [x19, #40]
    2818:	bl	33c0 <_ck_assert_failed@@Base+0x340>
    281c:	str	x0, [x19, #56]
    2820:	bl	33c0 <_ck_assert_failed@@Base+0x340>
    2824:	str	x0, [x19, #64]
    2828:	mov	x0, x19
    282c:	ldp	x19, x20, [sp, #16]
    2830:	ldr	d8, [sp, #32]
    2834:	ldp	x29, x30, [sp], #64
    2838:	ret
    283c:	fmov	d8, #4.000000000000000000e+00
    2840:	b	2790 <tcase_create@@Base+0x80>
    2844:	fmov	d8, #4.000000000000000000e+00
    2848:	b	2790 <tcase_create@@Base+0x80>
    284c:	stp	x29, x30, [sp, #-48]!
    2850:	mov	x29, sp
    2854:	stp	x19, x20, [sp, #16]
    2858:	mov	x20, x0
    285c:	bl	33c0 <_ck_assert_failed@@Base+0x340>
    2860:	mov	x19, x0
    2864:	cbz	x20, 28bc <tcase_create@@Base+0x1ac>
    2868:	str	x21, [sp, #32]
    286c:	mov	x0, x20
    2870:	bl	2300 <strdup@plt>
    2874:	mov	x21, x0
    2878:	adrp	x1, 6000 <srunner_run_tagged@@Base+0x6a8>
    287c:	add	x1, x1, #0x5e8
    2880:	bl	2130 <strtok@plt>
    2884:	cbz	x0, 28b0 <tcase_create@@Base+0x1a0>
    2888:	adrp	x20, 6000 <srunner_run_tagged@@Base+0x6a8>
    288c:	add	x20, x20, #0x5e8
    2890:	bl	2300 <strdup@plt>
    2894:	mov	x1, x0
    2898:	mov	x0, x19
    289c:	bl	3470 <_ck_assert_failed@@Base+0x3f0>
    28a0:	mov	x1, x20
    28a4:	mov	x0, #0x0                   	// #0
    28a8:	bl	2130 <strtok@plt>
    28ac:	cbnz	x0, 2890 <tcase_create@@Base+0x180>
    28b0:	mov	x0, x21
    28b4:	bl	23e0 <free@plt>
    28b8:	ldr	x21, [sp, #32]
    28bc:	mov	x0, x19
    28c0:	ldp	x19, x20, [sp, #16]
    28c4:	ldp	x29, x30, [sp], #48
    28c8:	ret

00000000000028cc <tcase_set_tags@@Base>:
    28cc:	stp	x29, x30, [sp, #-32]!
    28d0:	mov	x29, sp
    28d4:	stp	x19, x20, [sp, #16]
    28d8:	mov	x19, x0
    28dc:	mov	x20, x1
    28e0:	ldr	x0, [x0, #64]
    28e4:	cbz	x0, 28fc <tcase_set_tags@@Base+0x30>
    28e8:	adrp	x1, 18000 <check_waitpid_and_exit@@Base+0x11d30>
    28ec:	ldr	x1, [x1, #4048]
    28f0:	bl	359c <_ck_assert_failed@@Base+0x51c>
    28f4:	ldr	x0, [x19, #64]
    28f8:	bl	34f8 <_ck_assert_failed@@Base+0x478>
    28fc:	mov	x0, x20
    2900:	bl	284c <tcase_create@@Base+0x13c>
    2904:	str	x0, [x19, #64]
    2908:	ldp	x19, x20, [sp, #16]
    290c:	ldp	x29, x30, [sp], #32
    2910:	ret
    2914:	cbz	x1, 299c <tcase_set_tags@@Base+0xd0>
    2918:	stp	x29, x30, [sp, #-48]!
    291c:	mov	x29, sp
    2920:	stp	x19, x20, [sp, #16]
    2924:	str	x21, [sp, #32]
    2928:	mov	x20, x0
    292c:	mov	x21, x1
    2930:	mov	x0, x1
    2934:	bl	34e4 <_ck_assert_failed@@Base+0x464>
    2938:	mov	x0, x21
    293c:	bl	34c0 <_ck_assert_failed@@Base+0x440>
    2940:	cbnz	w0, 2994 <tcase_set_tags@@Base+0xc8>
    2944:	ldr	x0, [x20, #64]
    2948:	bl	34e4 <_ck_assert_failed@@Base+0x464>
    294c:	ldr	x0, [x20, #64]
    2950:	bl	34c0 <_ck_assert_failed@@Base+0x440>
    2954:	cbnz	w0, 2988 <tcase_set_tags@@Base+0xbc>
    2958:	ldr	x0, [x20, #64]
    295c:	bl	352c <_ck_assert_failed@@Base+0x4ac>
    2960:	mov	x19, x0
    2964:	mov	x0, x21
    2968:	bl	352c <_ck_assert_failed@@Base+0x4ac>
    296c:	mov	x1, x0
    2970:	mov	x0, x19
    2974:	bl	2380 <strcmp@plt>
    2978:	cbz	w0, 29a4 <tcase_set_tags@@Base+0xd8>
    297c:	ldr	x0, [x20, #64]
    2980:	bl	3564 <_ck_assert_failed@@Base+0x4e4>
    2984:	b	294c <tcase_set_tags@@Base+0x80>
    2988:	mov	x0, x21
    298c:	bl	3564 <_ck_assert_failed@@Base+0x4e4>
    2990:	b	2938 <tcase_set_tags@@Base+0x6c>
    2994:	mov	w0, #0x0                   	// #0
    2998:	b	29a8 <tcase_set_tags@@Base+0xdc>
    299c:	mov	w0, #0x0                   	// #0
    29a0:	ret
    29a4:	mov	w0, #0x1                   	// #1
    29a8:	ldp	x19, x20, [sp, #16]
    29ac:	ldr	x21, [sp, #32]
    29b0:	ldp	x29, x30, [sp], #48
    29b4:	ret

00000000000029b8 <suite_add_tcase@@Base>:
    29b8:	cmp	x0, #0x0
    29bc:	ccmp	x1, #0x0, #0x4, ne  // ne = any
    29c0:	b.ne	29c8 <suite_add_tcase@@Base+0x10>  // b.any
    29c4:	ret
    29c8:	stp	x29, x30, [sp, #-32]!
    29cc:	mov	x29, sp
    29d0:	stp	x19, x20, [sp, #16]
    29d4:	mov	x19, x0
    29d8:	mov	x20, x1
    29dc:	ldr	x0, [x0, #8]
    29e0:	bl	35f4 <_ck_assert_failed@@Base+0x574>
    29e4:	cbz	w0, 29f4 <suite_add_tcase@@Base+0x3c>
    29e8:	ldp	x19, x20, [sp, #16]
    29ec:	ldp	x29, x30, [sp], #32
    29f0:	ret
    29f4:	mov	x1, x20
    29f8:	ldr	x0, [x19, #8]
    29fc:	bl	3470 <_ck_assert_failed@@Base+0x3f0>
    2a00:	b	29e8 <suite_add_tcase@@Base+0x30>

0000000000002a04 <_tcase_add_test@@Base>:
    2a04:	cmp	x0, #0x0
    2a08:	ccmp	x1, #0x0, #0x4, ne  // ne = any
    2a0c:	b.ne	2a14 <_tcase_add_test@@Base+0x10>  // b.any
    2a10:	ret
    2a14:	stp	x29, x30, [sp, #-64]!
    2a18:	mov	x29, sp
    2a1c:	stp	x19, x20, [sp, #16]
    2a20:	stp	x21, x22, [sp, #32]
    2a24:	stp	x23, x24, [sp, #48]
    2a28:	mov	x19, x0
    2a2c:	mov	x20, x1
    2a30:	mov	w22, w2
    2a34:	mov	w21, w3
    2a38:	mov	w24, w4
    2a3c:	mov	w23, w5
    2a40:	mov	x0, #0x18                  	// #24
    2a44:	bl	32f4 <_ck_assert_failed@@Base+0x274>
    2a48:	mov	x1, x0
    2a4c:	str	x20, [x0]
    2a50:	str	w24, [x0, #8]
    2a54:	str	w23, [x0, #12]
    2a58:	str	w22, [x0, #16]
    2a5c:	strb	w21, [x0, #20]
    2a60:	ldr	x0, [x19, #24]
    2a64:	bl	3470 <_ck_assert_failed@@Base+0x3f0>
    2a68:	ldp	x19, x20, [sp, #16]
    2a6c:	ldp	x21, x22, [sp, #32]
    2a70:	ldp	x23, x24, [sp, #48]
    2a74:	ldp	x29, x30, [sp], #64
    2a78:	ret

0000000000002a7c <tcase_add_unchecked_fixture@@Base>:
    2a7c:	stp	x29, x30, [sp, #-48]!
    2a80:	mov	x29, sp
    2a84:	stp	x19, x20, [sp, #16]
    2a88:	stp	x21, x22, [sp, #32]
    2a8c:	mov	x21, x0
    2a90:	mov	x19, x2
    2a94:	cbz	x1, 2abc <tcase_add_unchecked_fixture@@Base+0x40>
    2a98:	mov	x20, x1
    2a9c:	ldr	x22, [x0, #32]
    2aa0:	mov	x0, #0x10                  	// #16
    2aa4:	bl	32f4 <_ck_assert_failed@@Base+0x274>
    2aa8:	mov	x1, x0
    2aac:	str	x20, [x0, #8]
    2ab0:	str	wzr, [x0]
    2ab4:	mov	x0, x22
    2ab8:	bl	3470 <_ck_assert_failed@@Base+0x3f0>
    2abc:	cbz	x19, 2ae0 <tcase_add_unchecked_fixture@@Base+0x64>
    2ac0:	ldr	x20, [x21, #40]
    2ac4:	mov	x0, #0x10                  	// #16
    2ac8:	bl	32f4 <_ck_assert_failed@@Base+0x274>
    2acc:	mov	x1, x0
    2ad0:	str	x19, [x0, #8]
    2ad4:	str	wzr, [x0]
    2ad8:	mov	x0, x20
    2adc:	bl	340c <_ck_assert_failed@@Base+0x38c>
    2ae0:	ldp	x19, x20, [sp, #16]
    2ae4:	ldp	x21, x22, [sp, #32]
    2ae8:	ldp	x29, x30, [sp], #48
    2aec:	ret

0000000000002af0 <tcase_add_checked_fixture@@Base>:
    2af0:	stp	x29, x30, [sp, #-48]!
    2af4:	mov	x29, sp
    2af8:	stp	x19, x20, [sp, #16]
    2afc:	stp	x21, x22, [sp, #32]
    2b00:	mov	x21, x0
    2b04:	mov	x19, x2
    2b08:	cbz	x1, 2b34 <tcase_add_checked_fixture@@Base+0x44>
    2b0c:	mov	x20, x1
    2b10:	ldr	x22, [x0, #48]
    2b14:	mov	x0, #0x10                  	// #16
    2b18:	bl	32f4 <_ck_assert_failed@@Base+0x274>
    2b1c:	mov	x1, x0
    2b20:	str	x20, [x0, #8]
    2b24:	mov	w0, #0x1                   	// #1
    2b28:	str	w0, [x1]
    2b2c:	mov	x0, x22
    2b30:	bl	3470 <_ck_assert_failed@@Base+0x3f0>
    2b34:	cbz	x19, 2b5c <tcase_add_checked_fixture@@Base+0x6c>
    2b38:	ldr	x20, [x21, #56]
    2b3c:	mov	x0, #0x10                  	// #16
    2b40:	bl	32f4 <_ck_assert_failed@@Base+0x274>
    2b44:	mov	x1, x0
    2b48:	str	x19, [x0, #8]
    2b4c:	mov	w0, #0x1                   	// #1
    2b50:	str	w0, [x1]
    2b54:	mov	x0, x20
    2b58:	bl	340c <_ck_assert_failed@@Base+0x38c>
    2b5c:	ldp	x19, x20, [sp, #16]
    2b60:	ldp	x21, x22, [sp, #32]
    2b64:	ldp	x29, x30, [sp], #48
    2b68:	ret

0000000000002b6c <tcase_set_timeout@@Base>:
    2b6c:	fcmpe	d0, #0.0
    2b70:	b.ge	2b78 <tcase_set_timeout@@Base+0xc>  // b.tcont
    2b74:	ret
    2b78:	stp	x29, x30, [sp, #-64]!
    2b7c:	mov	x29, sp
    2b80:	stp	x19, x20, [sp, #16]
    2b84:	str	d8, [sp, #32]
    2b88:	mov	x19, x0
    2b8c:	fmov	d8, d0
    2b90:	adrp	x0, 6000 <srunner_run_tagged@@Base+0x6a8>
    2b94:	add	x0, x0, #0x5d0
    2b98:	bl	24e0 <getenv@plt>
    2b9c:	mov	x20, x0
    2ba0:	cbz	x0, 2bd0 <tcase_set_timeout@@Base+0x64>
    2ba4:	str	xzr, [sp, #56]
    2ba8:	add	x1, sp, #0x38
    2bac:	bl	2180 <strtod@plt>
    2bb0:	fcmpe	d0, #0.0
    2bb4:	b.lt	2bd0 <tcase_set_timeout@@Base+0x64>  // b.tstop
    2bb8:	ldr	x0, [sp, #56]
    2bbc:	cmp	x0, x20
    2bc0:	b.eq	2bd0 <tcase_set_timeout@@Base+0x64>  // b.none
    2bc4:	ldrb	w0, [x0]
    2bc8:	cbnz	w0, 2bd0 <tcase_set_timeout@@Base+0x64>
    2bcc:	fmul	d8, d8, d0
    2bd0:	fcvtms	x0, d8
    2bd4:	str	x0, [x19, #8]
    2bd8:	frintm	d0, d8
    2bdc:	fsub	d8, d8, d0
    2be0:	mov	x0, #0xcd6500000000        	// #225833675390976
    2be4:	movk	x0, #0x41cd, lsl #48
    2be8:	fmov	d0, x0
    2bec:	fmul	d8, d8, d0
    2bf0:	fcvtzs	d8, d8
    2bf4:	str	d8, [x19, #16]
    2bf8:	ldp	x19, x20, [sp, #16]
    2bfc:	ldr	d8, [sp, #32]
    2c00:	ldp	x29, x30, [sp], #64
    2c04:	ret

0000000000002c08 <tcase_fn_start@@Base>:
    2c08:	stp	x29, x30, [sp, #-48]!
    2c0c:	mov	x29, sp
    2c10:	stp	x19, x20, [sp, #16]
    2c14:	str	x21, [sp, #32]
    2c18:	mov	x19, x0
    2c1c:	mov	x20, x1
    2c20:	mov	w21, w2
    2c24:	mov	w0, #0x2                   	// #2
    2c28:	bl	41a4 <srunner_has_tap@@Base+0x538>
    2c2c:	mov	w1, w21
    2c30:	mov	x0, x20
    2c34:	bl	4164 <srunner_has_tap@@Base+0x4f8>
    2c38:	adrp	x1, 18000 <check_waitpid_and_exit@@Base+0x11d30>
    2c3c:	ldr	x1, [x1, #3992]
    2c40:	str	x19, [x1]
    2c44:	ldp	x19, x20, [sp, #16]
    2c48:	ldr	x21, [sp, #32]
    2c4c:	ldp	x29, x30, [sp], #48
    2c50:	ret

0000000000002c54 <tcase_name@@Base>:
    2c54:	adrp	x0, 18000 <check_waitpid_and_exit@@Base+0x11d30>
    2c58:	ldr	x0, [x0, #3992]
    2c5c:	ldr	x0, [x0]
    2c60:	ret

0000000000002c64 <_mark_point@@Base>:
    2c64:	stp	x29, x30, [sp, #-16]!
    2c68:	mov	x29, sp
    2c6c:	bl	4164 <srunner_has_tap@@Base+0x4f8>
    2c70:	ldp	x29, x30, [sp], #16
    2c74:	ret

0000000000002c78 <srunner_create@@Base>:
    2c78:	stp	x29, x30, [sp, #-32]!
    2c7c:	mov	x29, sp
    2c80:	stp	x19, x20, [sp, #16]
    2c84:	mov	x20, x0
    2c88:	mov	x0, #0x40                  	// #64
    2c8c:	bl	32f4 <_ck_assert_failed@@Base+0x274>
    2c90:	mov	x19, x0
    2c94:	bl	33c0 <_ck_assert_failed@@Base+0x340>
    2c98:	str	x0, [x19]
    2c9c:	cbz	x20, 2ca8 <srunner_create@@Base+0x30>
    2ca0:	mov	x1, x20
    2ca4:	bl	3470 <_ck_assert_failed@@Base+0x3f0>
    2ca8:	mov	x0, #0xc                   	// #12
    2cac:	bl	32f4 <_ck_assert_failed@@Base+0x274>
    2cb0:	str	x0, [x19, #8]
    2cb4:	str	wzr, [x0, #8]
    2cb8:	ldr	x0, [x19, #8]
    2cbc:	str	wzr, [x0, #4]
    2cc0:	ldr	x0, [x19, #8]
    2cc4:	str	wzr, [x0]
    2cc8:	bl	33c0 <_ck_assert_failed@@Base+0x340>
    2ccc:	str	x0, [x19, #16]
    2cd0:	str	xzr, [x19, #24]
    2cd4:	str	xzr, [x19, #32]
    2cd8:	str	xzr, [x19, #40]
    2cdc:	str	xzr, [x19, #48]
    2ce0:	str	wzr, [x19, #56]
    2ce4:	mov	x0, x19
    2ce8:	ldp	x19, x20, [sp, #16]
    2cec:	ldp	x29, x30, [sp], #32
    2cf0:	ret

0000000000002cf4 <srunner_add_suite@@Base>:
    2cf4:	cbz	x1, 2d10 <srunner_add_suite@@Base+0x1c>
    2cf8:	stp	x29, x30, [sp, #-16]!
    2cfc:	mov	x29, sp
    2d00:	ldr	x0, [x0]
    2d04:	bl	3470 <_ck_assert_failed@@Base+0x3f0>
    2d08:	ldp	x29, x30, [sp], #16
    2d0c:	ret
    2d10:	ret

0000000000002d14 <srunner_ntests_failed@@Base>:
    2d14:	ldr	x1, [x0, #8]
    2d18:	ldr	w2, [x1, #4]
    2d1c:	ldr	w0, [x1, #8]
    2d20:	add	w0, w2, w0
    2d24:	ret

0000000000002d28 <srunner_ntests_run@@Base>:
    2d28:	ldr	x0, [x0, #8]
    2d2c:	ldr	w0, [x0]
    2d30:	ret

0000000000002d34 <srunner_failures@@Base>:
    2d34:	stp	x29, x30, [sp, #-48]!
    2d38:	mov	x29, sp
    2d3c:	stp	x19, x20, [sp, #16]
    2d40:	str	x21, [sp, #32]
    2d44:	mov	x19, x0
    2d48:	bl	2240 <srunner_ntests_failed@plt>
    2d4c:	sbfiz	x0, x0, #3, #32
    2d50:	bl	32f4 <_ck_assert_failed@@Base+0x274>
    2d54:	mov	x21, x0
    2d58:	ldr	x19, [x19, #16]
    2d5c:	mov	x0, x19
    2d60:	bl	34e4 <_ck_assert_failed@@Base+0x464>
    2d64:	mov	w20, #0x0                   	// #0
    2d68:	b	2d74 <srunner_failures@@Base+0x40>
    2d6c:	mov	x0, x19
    2d70:	bl	3564 <_ck_assert_failed@@Base+0x4e4>
    2d74:	mov	x0, x19
    2d78:	bl	34c0 <_ck_assert_failed@@Base+0x440>
    2d7c:	cbnz	w0, 2da0 <srunner_failures@@Base+0x6c>
    2d80:	mov	x0, x19
    2d84:	bl	352c <_ck_assert_failed@@Base+0x4ac>
    2d88:	ldr	w1, [x0]
    2d8c:	cmp	w1, #0x1
    2d90:	b.eq	2d6c <srunner_failures@@Base+0x38>  // b.none
    2d94:	str	x0, [x21, w20, sxtw #3]
    2d98:	add	w20, w20, #0x1
    2d9c:	b	2d6c <srunner_failures@@Base+0x38>
    2da0:	mov	x0, x21
    2da4:	ldp	x19, x20, [sp, #16]
    2da8:	ldr	x21, [sp, #32]
    2dac:	ldp	x29, x30, [sp], #48
    2db0:	ret

0000000000002db4 <srunner_results@@Base>:
    2db4:	stp	x29, x30, [sp, #-48]!
    2db8:	mov	x29, sp
    2dbc:	stp	x19, x20, [sp, #16]
    2dc0:	str	x21, [sp, #32]
    2dc4:	mov	x19, x0
    2dc8:	bl	23d0 <srunner_ntests_run@plt>
    2dcc:	sbfiz	x0, x0, #3, #32
    2dd0:	bl	32f4 <_ck_assert_failed@@Base+0x274>
    2dd4:	mov	x21, x0
    2dd8:	ldr	x19, [x19, #16]
    2ddc:	mov	x0, x19
    2de0:	bl	34e4 <_ck_assert_failed@@Base+0x464>
    2de4:	mov	x20, x21
    2de8:	mov	x0, x19
    2dec:	bl	34c0 <_ck_assert_failed@@Base+0x440>
    2df0:	cbnz	w0, 2e0c <srunner_results@@Base+0x58>
    2df4:	mov	x0, x19
    2df8:	bl	352c <_ck_assert_failed@@Base+0x4ac>
    2dfc:	str	x0, [x20], #8
    2e00:	mov	x0, x19
    2e04:	bl	3564 <_ck_assert_failed@@Base+0x4e4>
    2e08:	b	2de8 <srunner_results@@Base+0x34>
    2e0c:	mov	x0, x21
    2e10:	ldp	x19, x20, [sp, #16]
    2e14:	ldr	x21, [sp, #32]
    2e18:	ldp	x29, x30, [sp], #48
    2e1c:	ret
    2e20:	stp	x29, x30, [sp, #-16]!
    2e24:	mov	x29, sp
    2e28:	mov	x0, #0x38                  	// #56
    2e2c:	bl	32f4 <_ck_assert_failed@@Base+0x274>
    2e30:	str	wzr, [x0, #4]
    2e34:	mov	w2, #0xffffffff            	// #-1
    2e38:	str	w2, [x0, #16]
    2e3c:	str	wzr, [x0]
    2e40:	str	xzr, [x0, #48]
    2e44:	str	xzr, [x0, #8]
    2e48:	str	xzr, [x0, #32]
    2e4c:	str	xzr, [x0, #40]
    2e50:	str	w2, [x0, #24]
    2e54:	ldp	x29, x30, [sp], #16
    2e58:	ret
    2e5c:	stp	x29, x30, [sp, #-32]!
    2e60:	mov	x29, sp
    2e64:	str	x19, [sp, #16]
    2e68:	mov	x19, x0
    2e6c:	ldr	x0, [x0, #8]
    2e70:	bl	23e0 <free@plt>
    2e74:	ldr	x0, [x19, #48]
    2e78:	bl	23e0 <free@plt>
    2e7c:	mov	x0, x19
    2e80:	bl	23e0 <free@plt>
    2e84:	ldr	x19, [sp, #16]
    2e88:	ldp	x29, x30, [sp], #32
    2e8c:	ret

0000000000002e90 <srunner_free@@Base>:
    2e90:	cbz	x0, 300c <srunner_free@@Base+0x17c>
    2e94:	stp	x29, x30, [sp, #-64]!
    2e98:	mov	x29, sp
    2e9c:	stp	x19, x20, [sp, #16]
    2ea0:	stp	x21, x22, [sp, #32]
    2ea4:	stp	x23, x24, [sp, #48]
    2ea8:	mov	x24, x0
    2eac:	ldr	x0, [x0, #8]
    2eb0:	bl	23e0 <free@plt>
    2eb4:	ldr	x23, [x24]
    2eb8:	mov	x0, x23
    2ebc:	bl	34e4 <_ck_assert_failed@@Base+0x464>
    2ec0:	adrp	x20, 18000 <check_waitpid_and_exit@@Base+0x11d30>
    2ec4:	ldr	x20, [x20, #4048]
    2ec8:	b	2f84 <srunner_free@@Base+0xf4>
    2ecc:	mov	x0, x22
    2ed0:	bl	352c <_ck_assert_failed@@Base+0x4ac>
    2ed4:	mov	x19, x0
    2ed8:	mov	x1, x20
    2edc:	ldr	x0, [x0, #24]
    2ee0:	bl	359c <_ck_assert_failed@@Base+0x51c>
    2ee4:	mov	x1, x20
    2ee8:	ldr	x0, [x19, #32]
    2eec:	bl	359c <_ck_assert_failed@@Base+0x51c>
    2ef0:	mov	x1, x20
    2ef4:	ldr	x0, [x19, #48]
    2ef8:	bl	359c <_ck_assert_failed@@Base+0x51c>
    2efc:	mov	x1, x20
    2f00:	ldr	x0, [x19, #40]
    2f04:	bl	359c <_ck_assert_failed@@Base+0x51c>
    2f08:	mov	x1, x20
    2f0c:	ldr	x0, [x19, #56]
    2f10:	bl	359c <_ck_assert_failed@@Base+0x51c>
    2f14:	mov	x1, x20
    2f18:	ldr	x0, [x19, #64]
    2f1c:	bl	359c <_ck_assert_failed@@Base+0x51c>
    2f20:	ldr	x0, [x19, #24]
    2f24:	bl	34f8 <_ck_assert_failed@@Base+0x478>
    2f28:	ldr	x0, [x19, #32]
    2f2c:	bl	34f8 <_ck_assert_failed@@Base+0x478>
    2f30:	ldr	x0, [x19, #48]
    2f34:	bl	34f8 <_ck_assert_failed@@Base+0x478>
    2f38:	ldr	x0, [x19, #40]
    2f3c:	bl	34f8 <_ck_assert_failed@@Base+0x478>
    2f40:	ldr	x0, [x19, #56]
    2f44:	bl	34f8 <_ck_assert_failed@@Base+0x478>
    2f48:	ldr	x0, [x19, #64]
    2f4c:	bl	34f8 <_ck_assert_failed@@Base+0x478>
    2f50:	mov	x0, x19
    2f54:	bl	23e0 <free@plt>
    2f58:	mov	x0, x22
    2f5c:	bl	3564 <_ck_assert_failed@@Base+0x4e4>
    2f60:	mov	x0, x22
    2f64:	bl	34c0 <_ck_assert_failed@@Base+0x440>
    2f68:	cbz	w0, 2ecc <srunner_free@@Base+0x3c>
    2f6c:	ldr	x0, [x21, #8]
    2f70:	bl	34f8 <_ck_assert_failed@@Base+0x478>
    2f74:	mov	x0, x21
    2f78:	bl	23e0 <free@plt>
    2f7c:	mov	x0, x23
    2f80:	bl	3564 <_ck_assert_failed@@Base+0x4e4>
    2f84:	mov	x0, x23
    2f88:	bl	34c0 <_ck_assert_failed@@Base+0x440>
    2f8c:	cbnz	w0, 2fb0 <srunner_free@@Base+0x120>
    2f90:	mov	x0, x23
    2f94:	bl	352c <_ck_assert_failed@@Base+0x4ac>
    2f98:	mov	x21, x0
    2f9c:	cbz	x0, 2f7c <srunner_free@@Base+0xec>
    2fa0:	ldr	x22, [x0, #8]
    2fa4:	mov	x0, x22
    2fa8:	bl	34e4 <_ck_assert_failed@@Base+0x464>
    2fac:	b	2f60 <srunner_free@@Base+0xd0>
    2fb0:	ldr	x0, [x24]
    2fb4:	bl	34f8 <_ck_assert_failed@@Base+0x478>
    2fb8:	ldr	x19, [x24, #16]
    2fbc:	mov	x0, x19
    2fc0:	bl	34e4 <_ck_assert_failed@@Base+0x464>
    2fc4:	b	2fdc <srunner_free@@Base+0x14c>
    2fc8:	mov	x0, x19
    2fcc:	bl	352c <_ck_assert_failed@@Base+0x4ac>
    2fd0:	bl	2e5c <srunner_results@@Base+0xa8>
    2fd4:	mov	x0, x19
    2fd8:	bl	3564 <_ck_assert_failed@@Base+0x4e4>
    2fdc:	mov	x0, x19
    2fe0:	bl	34c0 <_ck_assert_failed@@Base+0x440>
    2fe4:	cbz	w0, 2fc8 <srunner_free@@Base+0x138>
    2fe8:	ldr	x0, [x24, #16]
    2fec:	bl	34f8 <_ck_assert_failed@@Base+0x478>
    2ff0:	mov	x0, x24
    2ff4:	bl	23e0 <free@plt>
    2ff8:	ldp	x19, x20, [sp, #16]
    2ffc:	ldp	x21, x22, [sp, #32]
    3000:	ldp	x23, x24, [sp, #48]
    3004:	ldp	x29, x30, [sp], #64
    3008:	ret
    300c:	ret

0000000000003010 <tr_msg@@Base>:
    3010:	ldr	x0, [x0, #48]
    3014:	ret

0000000000003018 <tr_lno@@Base>:
    3018:	ldr	w0, [x0, #16]
    301c:	ret

0000000000003020 <tr_lfile@@Base>:
    3020:	ldr	x0, [x0, #8]
    3024:	ret

0000000000003028 <tr_rtype@@Base>:
    3028:	ldr	w0, [x0]
    302c:	ret

0000000000003030 <tr_ctx@@Base>:
    3030:	ldr	w0, [x0, #4]
    3034:	ret

0000000000003038 <tr_tcname@@Base>:
    3038:	ldr	x0, [x0, #32]
    303c:	ret
    3040:	cmp	w0, #0x2
    3044:	b.hi	3054 <tr_tcname@@Base+0x1c>  // b.pmore
    3048:	adrp	x1, 19000 <check_waitpid_and_exit@@Base+0x12d30>
    304c:	str	w0, [x1, #576]
    3050:	ret
    3054:	stp	x29, x30, [sp, #-16]!
    3058:	mov	x29, sp
    305c:	mov	w2, #0x24a                 	// #586
    3060:	adrp	x1, 6000 <srunner_run_tagged@@Base+0x6a8>
    3064:	add	x1, x1, #0x5f0
    3068:	adrp	x0, 6000 <srunner_run_tagged@@Base+0x6a8>
    306c:	add	x0, x0, #0x5f8
    3070:	bl	31cc <_ck_assert_failed@@Base+0x14c>
    3074:	adrp	x0, 19000 <check_waitpid_and_exit@@Base+0x12d30>
    3078:	ldr	w0, [x0, #576]
    307c:	ret

0000000000003080 <_ck_assert_failed@@Base>:
    3080:	mov	x12, #0x2110                	// #8464
    3084:	sub	sp, sp, x12
    3088:	stp	x29, x30, [sp]
    308c:	mov	x29, sp
    3090:	str	x19, [sp, #16]
    3094:	mov	x19, x2
    3098:	str	x3, [sp, #8424]
    309c:	str	x4, [sp, #8432]
    30a0:	str	x5, [sp, #8440]
    30a4:	str	x6, [sp, #8448]
    30a8:	str	x7, [sp, #8456]
    30ac:	add	x2, sp, #0x2, lsl #12
    30b0:	str	q0, [x2, #96]
    30b4:	str	q1, [x2, #112]
    30b8:	str	q2, [x2, #128]
    30bc:	str	q3, [x2, #144]
    30c0:	str	q4, [x2, #160]
    30c4:	str	q5, [x2, #176]
    30c8:	str	q6, [x2, #192]
    30cc:	str	q7, [x2, #208]
    30d0:	bl	4164 <srunner_has_tap@@Base+0x4f8>
    30d4:	add	x0, sp, #0x2, lsl #12
    30d8:	add	x0, x0, #0x110
    30dc:	str	x0, [sp, #8256]
    30e0:	str	x0, [sp, #8264]
    30e4:	add	x0, sp, #0x2, lsl #12
    30e8:	add	x0, x0, #0xe0
    30ec:	str	x0, [sp, #8272]
    30f0:	mov	w0, #0xffffff80            	// #-128
    30f4:	str	w0, [sp, #8284]
    30f8:	mov	w0, #0xffffffe0            	// #-32
    30fc:	str	w0, [sp, #8280]
    3100:	cmp	w0, #0x0
    3104:	b.le	3170 <_ck_assert_failed@@Base+0xf0>
    3108:	add	x1, sp, #0x2, lsl #12
    310c:	add	x1, x1, #0x110
    3110:	add	x0, x1, #0x8
    3114:	str	x0, [sp, #8256]
    3118:	ldr	x2, [x1]
    311c:	cbz	x2, 314c <_ck_assert_failed@@Base+0xcc>
    3120:	add	x0, sp, #0x2, lsl #12
    3124:	ldp	x0, x1, [x0, #64]
    3128:	stp	x0, x1, [sp, #32]
    312c:	add	x0, sp, #0x2, lsl #12
    3130:	ldp	x0, x1, [x0, #80]
    3134:	stp	x0, x1, [sp, #48]
    3138:	add	x19, sp, #0x40
    313c:	add	x3, sp, #0x20
    3140:	mov	x1, #0x2000                	// #8192
    3144:	mov	x0, x19
    3148:	bl	2480 <vsnprintf@plt>
    314c:	mov	x0, x19
    3150:	bl	4110 <srunner_has_tap@@Base+0x4a4>
    3154:	bl	3074 <tr_tcname@@Base+0x3c>
    3158:	cmp	w0, #0x1
    315c:	b.eq	317c <_ck_assert_failed@@Base+0xfc>  // b.none
    3160:	mov	w1, #0x1                   	// #1
    3164:	adrp	x0, 18000 <check_waitpid_and_exit@@Base+0x11d30>
    3168:	ldr	x0, [x0, #4056]
    316c:	bl	2490 <longjmp@plt>
    3170:	ldr	x1, [sp, #8264]
    3174:	sub	x1, x1, #0x28
    3178:	b	3118 <_ck_assert_failed@@Base+0x98>
    317c:	bl	2110 <_exit@plt>
    3180:	stp	x29, x30, [sp, #-32]!
    3184:	mov	x29, sp
    3188:	add	x2, sp, #0x18
    318c:	mov	x1, #0x0                   	// #0
    3190:	mov	w0, #0x1                   	// #1
    3194:	bl	2370 <timer_create@plt>
    3198:	cbz	w0, 31b4 <_ck_assert_failed@@Base+0x134>
    319c:	adrp	x0, 19000 <check_waitpid_and_exit@@Base+0x12d30>
    31a0:	str	wzr, [x0, #580]
    31a4:	adrp	x0, 19000 <check_waitpid_and_exit@@Base+0x12d30>
    31a8:	ldr	w0, [x0, #580]
    31ac:	ldp	x29, x30, [sp], #32
    31b0:	ret
    31b4:	ldr	x0, [sp, #24]
    31b8:	bl	2400 <timer_delete@plt>
    31bc:	adrp	x0, 19000 <check_waitpid_and_exit@@Base+0x12d30>
    31c0:	mov	w1, #0x1                   	// #1
    31c4:	str	w1, [x0, #580]
    31c8:	b	31a4 <_ck_assert_failed@@Base+0x124>
    31cc:	stp	x29, x30, [sp, #-288]!
    31d0:	mov	x29, sp
    31d4:	stp	x19, x20, [sp, #16]
    31d8:	stp	x21, x22, [sp, #32]
    31dc:	mov	x19, x0
    31e0:	mov	x21, x1
    31e4:	mov	w22, w2
    31e8:	str	x3, [sp, #248]
    31ec:	str	x4, [sp, #256]
    31f0:	str	x5, [sp, #264]
    31f4:	str	x6, [sp, #272]
    31f8:	str	x7, [sp, #280]
    31fc:	str	q0, [sp, #112]
    3200:	str	q1, [sp, #128]
    3204:	str	q2, [sp, #144]
    3208:	str	q3, [sp, #160]
    320c:	str	q4, [sp, #176]
    3210:	str	q5, [sp, #192]
    3214:	str	q6, [sp, #208]
    3218:	str	q7, [sp, #224]
    321c:	adrp	x20, 18000 <check_waitpid_and_exit@@Base+0x11d30>
    3220:	ldr	x20, [x20, #3984]
    3224:	ldr	x0, [x20]
    3228:	bl	2460 <fflush@plt>
    322c:	mov	w3, w22
    3230:	mov	x2, x21
    3234:	adrp	x1, 6000 <srunner_run_tagged@@Base+0x6a8>
    3238:	add	x1, x1, #0x618
    323c:	ldr	x0, [x20]
    3240:	bl	2530 <fprintf@plt>
    3244:	add	x0, sp, #0x120
    3248:	str	x0, [sp, #80]
    324c:	str	x0, [sp, #88]
    3250:	add	x0, sp, #0xf0
    3254:	str	x0, [sp, #96]
    3258:	mov	w0, #0xffffffd8            	// #-40
    325c:	str	w0, [sp, #104]
    3260:	mov	w0, #0xffffff80            	// #-128
    3264:	str	w0, [sp, #108]
    3268:	ldp	x0, x1, [sp, #80]
    326c:	stp	x0, x1, [sp, #48]
    3270:	ldp	x0, x1, [sp, #96]
    3274:	stp	x0, x1, [sp, #64]
    3278:	add	x2, sp, #0x30
    327c:	mov	x1, x19
    3280:	ldr	x0, [x20]
    3284:	bl	24b0 <vfprintf@plt>
    3288:	ldrb	w0, [x19]
    328c:	cbz	w0, 32a8 <_ck_assert_failed@@Base+0x228>
    3290:	mov	x0, x19
    3294:	bl	2150 <strlen@plt>
    3298:	add	x19, x19, x0
    329c:	ldurb	w0, [x19, #-1]
    32a0:	cmp	w0, #0x3a
    32a4:	b.eq	32c4 <_ck_assert_failed@@Base+0x244>  // b.none
    32a8:	adrp	x0, 18000 <check_waitpid_and_exit@@Base+0x11d30>
    32ac:	ldr	x0, [x0, #3984]
    32b0:	ldr	x1, [x0]
    32b4:	mov	w0, #0xa                   	// #10
    32b8:	bl	21e0 <fputc@plt>
    32bc:	mov	w0, #0x2                   	// #2
    32c0:	bl	2160 <exit@plt>
    32c4:	adrp	x0, 18000 <check_waitpid_and_exit@@Base+0x11d30>
    32c8:	ldr	x0, [x0, #3984]
    32cc:	ldr	x19, [x0]
    32d0:	bl	24d0 <__errno_location@plt>
    32d4:	ldr	w0, [x0]
    32d8:	bl	2310 <strerror@plt>
    32dc:	mov	x2, x0
    32e0:	adrp	x1, 6000 <srunner_run_tagged@@Base+0x6a8>
    32e4:	add	x1, x1, #0x620
    32e8:	mov	x0, x19
    32ec:	bl	2530 <fprintf@plt>
    32f0:	b	32a8 <_ck_assert_failed@@Base+0x228>
    32f4:	stp	x29, x30, [sp, #-32]!
    32f8:	mov	x29, sp
    32fc:	str	x19, [sp, #16]
    3300:	mov	x19, x0
    3304:	bl	2290 <malloc@plt>
    3308:	cbz	x0, 3318 <_ck_assert_failed@@Base+0x298>
    330c:	ldr	x19, [sp, #16]
    3310:	ldp	x29, x30, [sp], #32
    3314:	ret
    3318:	mov	x3, x19
    331c:	mov	w2, #0x3e                  	// #62
    3320:	adrp	x1, 6000 <srunner_run_tagged@@Base+0x6a8>
    3324:	add	x1, x1, #0x628
    3328:	adrp	x0, 6000 <srunner_run_tagged@@Base+0x6a8>
    332c:	add	x0, x0, #0x638
    3330:	bl	31cc <_ck_assert_failed@@Base+0x14c>
    3334:	stp	x29, x30, [sp, #-32]!
    3338:	mov	x29, sp
    333c:	str	x19, [sp, #16]
    3340:	mov	x19, x1
    3344:	bl	22d0 <realloc@plt>
    3348:	cbz	x0, 3358 <_ck_assert_failed@@Base+0x2d8>
    334c:	ldr	x19, [sp, #16]
    3350:	ldp	x29, x30, [sp], #32
    3354:	ret
    3358:	mov	x3, x19
    335c:	mov	w2, #0x48                  	// #72
    3360:	adrp	x1, 6000 <srunner_run_tagged@@Base+0x6a8>
    3364:	add	x1, x1, #0x628
    3368:	adrp	x0, 6000 <srunner_run_tagged@@Base+0x6a8>
    336c:	add	x0, x0, #0x658
    3370:	bl	31cc <_ck_assert_failed@@Base+0x14c>
    3374:	stp	x29, x30, [sp, #-32]!
    3378:	mov	x29, sp
    337c:	str	x19, [sp, #16]
    3380:	mov	x19, x0
    3384:	ldr	w1, [x0, #4]
    3388:	ldr	w0, [x0]
    338c:	cmp	w0, w1
    3390:	b.cs	33a0 <_ck_assert_failed@@Base+0x320>  // b.hs, b.nlast
    3394:	ldr	x19, [sp, #16]
    3398:	ldp	x29, x30, [sp], #32
    339c:	ret
    33a0:	lsl	w1, w1, #1
    33a4:	str	w1, [x19, #4]
    33a8:	mov	w1, w1
    33ac:	lsl	x1, x1, #3
    33b0:	ldr	x0, [x19, #16]
    33b4:	bl	3334 <_ck_assert_failed@@Base+0x2b4>
    33b8:	str	x0, [x19, #16]
    33bc:	b	3394 <_ck_assert_failed@@Base+0x314>
    33c0:	stp	x29, x30, [sp, #-32]!
    33c4:	mov	x29, sp
    33c8:	str	x19, [sp, #16]
    33cc:	mov	x0, #0x18                  	// #24
    33d0:	bl	32f4 <_ck_assert_failed@@Base+0x274>
    33d4:	mov	x19, x0
    33d8:	str	wzr, [x0]
    33dc:	mov	w0, #0x1                   	// #1
    33e0:	str	w0, [x19, #4]
    33e4:	mov	x0, #0x8                   	// #8
    33e8:	bl	32f4 <_ck_assert_failed@@Base+0x274>
    33ec:	str	x0, [x19, #16]
    33f0:	mov	w0, #0xffffffff            	// #-1
    33f4:	str	w0, [x19, #12]
    33f8:	str	w0, [x19, #8]
    33fc:	mov	x0, x19
    3400:	ldr	x19, [sp, #16]
    3404:	ldp	x29, x30, [sp], #32
    3408:	ret
    340c:	cbz	x0, 346c <_ck_assert_failed@@Base+0x3ec>
    3410:	stp	x29, x30, [sp, #-32]!
    3414:	mov	x29, sp
    3418:	stp	x19, x20, [sp, #16]
    341c:	mov	x19, x0
    3420:	mov	x20, x1
    3424:	bl	3374 <_ck_assert_failed@@Base+0x2f4>
    3428:	ldr	x1, [x19, #16]
    342c:	ldr	w2, [x19]
    3430:	lsl	x2, x2, #3
    3434:	add	x0, x1, #0x8
    3438:	bl	20f0 <memmove@plt>
    343c:	ldr	w0, [x19, #12]
    3440:	add	w0, w0, #0x1
    3444:	str	w0, [x19, #12]
    3448:	ldr	w0, [x19]
    344c:	add	w0, w0, #0x1
    3450:	str	w0, [x19]
    3454:	str	wzr, [x19, #8]
    3458:	ldr	x0, [x19, #16]
    345c:	str	x20, [x0]
    3460:	ldp	x19, x20, [sp, #16]
    3464:	ldp	x29, x30, [sp], #32
    3468:	ret
    346c:	ret
    3470:	cbz	x0, 34bc <_ck_assert_failed@@Base+0x43c>
    3474:	stp	x29, x30, [sp, #-32]!
    3478:	mov	x29, sp
    347c:	stp	x19, x20, [sp, #16]
    3480:	mov	x19, x0
    3484:	mov	x20, x1
    3488:	bl	3374 <_ck_assert_failed@@Base+0x2f4>
    348c:	ldr	w0, [x19, #12]
    3490:	add	w0, w0, #0x1
    3494:	str	w0, [x19, #12]
    3498:	ldr	w1, [x19]
    349c:	add	w1, w1, #0x1
    34a0:	str	w1, [x19]
    34a4:	str	w0, [x19, #8]
    34a8:	ldr	x1, [x19, #16]
    34ac:	str	x20, [x1, w0, sxtw #3]
    34b0:	ldp	x19, x20, [sp, #16]
    34b4:	ldp	x29, x30, [sp], #32
    34b8:	ret
    34bc:	ret
    34c0:	ldr	w1, [x0, #8]
    34c4:	cmn	w1, #0x1
    34c8:	b.eq	34dc <_ck_assert_failed@@Base+0x45c>  // b.none
    34cc:	ldr	w0, [x0, #12]
    34d0:	cmp	w1, w0
    34d4:	cset	w0, gt
    34d8:	ret
    34dc:	mov	w0, #0x1                   	// #1
    34e0:	b	34d8 <_ck_assert_failed@@Base+0x458>
    34e4:	ldr	w1, [x0, #8]
    34e8:	cmn	w1, #0x1
    34ec:	b.eq	34f4 <_ck_assert_failed@@Base+0x474>  // b.none
    34f0:	str	wzr, [x0, #8]
    34f4:	ret
    34f8:	cbz	x0, 3528 <_ck_assert_failed@@Base+0x4a8>
    34fc:	stp	x29, x30, [sp, #-32]!
    3500:	mov	x29, sp
    3504:	str	x19, [sp, #16]
    3508:	mov	x19, x0
    350c:	ldr	x0, [x0, #16]
    3510:	bl	23e0 <free@plt>
    3514:	mov	x0, x19
    3518:	bl	23e0 <free@plt>
    351c:	ldr	x19, [sp, #16]
    3520:	ldp	x29, x30, [sp], #32
    3524:	ret
    3528:	ret
    352c:	cbz	x0, 3550 <_ck_assert_failed@@Base+0x4d0>
    3530:	ldr	w1, [x0, #8]
    3534:	cmn	w1, #0x1
    3538:	b.eq	3554 <_ck_assert_failed@@Base+0x4d4>  // b.none
    353c:	ldr	w2, [x0, #12]
    3540:	cmp	w1, w2
    3544:	b.gt	355c <_ck_assert_failed@@Base+0x4dc>
    3548:	ldr	x0, [x0, #16]
    354c:	ldr	x0, [x0, w1, sxtw #3]
    3550:	ret
    3554:	mov	x0, #0x0                   	// #0
    3558:	b	3550 <_ck_assert_failed@@Base+0x4d0>
    355c:	mov	x0, #0x0                   	// #0
    3560:	b	3550 <_ck_assert_failed@@Base+0x4d0>
    3564:	cbz	x0, 3598 <_ck_assert_failed@@Base+0x518>
    3568:	stp	x29, x30, [sp, #-32]!
    356c:	mov	x29, sp
    3570:	str	x19, [sp, #16]
    3574:	mov	x19, x0
    3578:	bl	34c0 <_ck_assert_failed@@Base+0x440>
    357c:	cbnz	w0, 358c <_ck_assert_failed@@Base+0x50c>
    3580:	ldr	w0, [x19, #8]
    3584:	add	w0, w0, #0x1
    3588:	str	w0, [x19, #8]
    358c:	ldr	x19, [sp, #16]
    3590:	ldp	x29, x30, [sp], #32
    3594:	ret
    3598:	ret
    359c:	cmp	x0, #0x0
    35a0:	ccmp	x1, #0x0, #0x4, ne  // ne = any
    35a4:	b.ne	35ac <_ck_assert_failed@@Base+0x52c>  // b.any
    35a8:	ret
    35ac:	stp	x29, x30, [sp, #-32]!
    35b0:	mov	x29, sp
    35b4:	stp	x19, x20, [sp, #16]
    35b8:	mov	x19, x0
    35bc:	mov	x20, x1
    35c0:	bl	34e4 <_ck_assert_failed@@Base+0x464>
    35c4:	b	35dc <_ck_assert_failed@@Base+0x55c>
    35c8:	mov	x0, x19
    35cc:	bl	352c <_ck_assert_failed@@Base+0x4ac>
    35d0:	blr	x20
    35d4:	mov	x0, x19
    35d8:	bl	3564 <_ck_assert_failed@@Base+0x4e4>
    35dc:	mov	x0, x19
    35e0:	bl	34c0 <_ck_assert_failed@@Base+0x440>
    35e4:	cbz	w0, 35c8 <_ck_assert_failed@@Base+0x548>
    35e8:	ldp	x19, x20, [sp, #16]
    35ec:	ldp	x29, x30, [sp], #32
    35f0:	ret
    35f4:	stp	x29, x30, [sp, #-32]!
    35f8:	mov	x29, sp
    35fc:	stp	x19, x20, [sp, #16]
    3600:	mov	x19, x0
    3604:	mov	x20, x1
    3608:	bl	34e4 <_ck_assert_failed@@Base+0x464>
    360c:	mov	x0, x19
    3610:	bl	34c0 <_ck_assert_failed@@Base+0x440>
    3614:	cbnz	w0, 3634 <_ck_assert_failed@@Base+0x5b4>
    3618:	mov	x0, x19
    361c:	bl	352c <_ck_assert_failed@@Base+0x4ac>
    3620:	cmp	x20, x0
    3624:	b.eq	3644 <_ck_assert_failed@@Base+0x5c4>  // b.none
    3628:	mov	x0, x19
    362c:	bl	3564 <_ck_assert_failed@@Base+0x4e4>
    3630:	b	360c <_ck_assert_failed@@Base+0x58c>
    3634:	mov	w0, #0x0                   	// #0
    3638:	ldp	x19, x20, [sp, #16]
    363c:	ldp	x29, x30, [sp], #32
    3640:	ret
    3644:	mov	w0, #0x1                   	// #1
    3648:	b	3638 <_ck_assert_failed@@Base+0x5b8>
    364c:	stp	x29, x30, [sp, #-64]!
    3650:	mov	x29, sp
    3654:	stp	x19, x20, [sp, #16]
    3658:	stp	x21, x22, [sp, #32]
    365c:	str	x23, [sp, #48]
    3660:	mov	x21, x0
    3664:	mov	x23, x1
    3668:	mov	w22, w2
    366c:	ldr	x20, [x0, #48]
    3670:	mov	x0, x20
    3674:	bl	34e4 <_ck_assert_failed@@Base+0x464>
    3678:	mov	x0, x20
    367c:	bl	34c0 <_ck_assert_failed@@Base+0x440>
    3680:	cbnz	w0, 36c8 <_ck_assert_failed@@Base+0x648>
    3684:	mov	x0, x20
    3688:	bl	352c <_ck_assert_failed@@Base+0x4ac>
    368c:	mov	x19, x0
    3690:	ldr	x0, [x0]
    3694:	bl	2460 <fflush@plt>
    3698:	ldr	x5, [x19, #8]
    369c:	mov	w4, w22
    36a0:	mov	x3, x23
    36a4:	ldr	w2, [x19, #20]
    36a8:	ldr	x1, [x19]
    36ac:	mov	x0, x21
    36b0:	blr	x5
    36b4:	ldr	x0, [x19]
    36b8:	bl	2460 <fflush@plt>
    36bc:	mov	x0, x20
    36c0:	bl	3564 <_ck_assert_failed@@Base+0x4e4>
    36c4:	b	3678 <_ck_assert_failed@@Base+0x5f8>
    36c8:	ldp	x19, x20, [sp, #16]
    36cc:	ldp	x21, x22, [sp, #32]
    36d0:	ldr	x23, [sp, #48]
    36d4:	ldp	x29, x30, [sp], #64
    36d8:	ret
    36dc:	stp	x29, x30, [sp, #-16]!
    36e0:	mov	x29, sp
    36e4:	mov	x5, x0
    36e8:	mov	x0, x1
    36ec:	cmp	w4, #0x3
    36f0:	b.eq	374c <_ck_assert_failed@@Base+0x6cc>  // b.none
    36f4:	b.hi	3720 <_ck_assert_failed@@Base+0x6a0>  // b.pmore
    36f8:	cmp	w4, #0x1
    36fc:	b.ls	3744 <_ck_assert_failed@@Base+0x6c4>  // b.plast
    3700:	cbz	w2, 3744 <_ck_assert_failed@@Base+0x6c4>
    3704:	mov	x3, x1
    3708:	mov	x2, #0x11                  	// #17
    370c:	mov	x1, #0x1                   	// #1
    3710:	adrp	x0, 6000 <srunner_run_tagged@@Base+0x6a8>
    3714:	add	x0, x0, #0x678
    3718:	bl	2440 <fwrite@plt>
    371c:	b	3744 <_ck_assert_failed@@Base+0x6c4>
    3720:	cmp	w4, #0x4
    3724:	b.ne	3738 <_ck_assert_failed@@Base+0x6b8>  // b.any
    3728:	cbz	w2, 3744 <_ck_assert_failed@@Base+0x6c4>
    372c:	mov	x1, x5
    3730:	bl	52c4 <check_set_max_msg_size@@Base+0x9f8>
    3734:	b	3744 <_ck_assert_failed@@Base+0x6c4>
    3738:	sub	w4, w4, #0x5
    373c:	cmp	w4, #0x2
    3740:	b.hi	3764 <_ck_assert_failed@@Base+0x6e4>  // b.pmore
    3744:	ldp	x29, x30, [sp], #16
    3748:	ret
    374c:	cbz	w2, 3744 <_ck_assert_failed@@Base+0x6c4>
    3750:	ldr	x2, [x3]
    3754:	adrp	x1, 6000 <srunner_run_tagged@@Base+0x6a8>
    3758:	add	x1, x1, #0x690
    375c:	bl	2530 <fprintf@plt>
    3760:	b	3744 <_ck_assert_failed@@Base+0x6c4>
    3764:	mov	w2, #0xdc                  	// #220
    3768:	adrp	x1, 6000 <srunner_run_tagged@@Base+0x6a8>
    376c:	add	x1, x1, #0x698
    3770:	adrp	x0, 6000 <srunner_run_tagged@@Base+0x6a8>
    3774:	add	x0, x0, #0x6a8
    3778:	bl	31cc <_ck_assert_failed@@Base+0x14c>
    377c:	stp	x29, x30, [sp, #-32]!
    3780:	mov	x29, sp
    3784:	str	x19, [sp, #16]
    3788:	mov	x19, x1
    378c:	cmp	w4, #0x6
    3790:	b.hi	37c4 <_ck_assert_failed@@Base+0x744>  // b.pmore
    3794:	cmp	w4, #0x1
    3798:	b.hi	3830 <_ck_assert_failed@@Base+0x7b0>  // b.pmore
    379c:	cbz	w4, 3828 <_ck_assert_failed@@Base+0x7a8>
    37a0:	adrp	x0, 19000 <check_waitpid_and_exit@@Base+0x12d30>
    37a4:	ldr	w2, [x0, #616]
    37a8:	adrp	x1, 6000 <srunner_run_tagged@@Base+0x6a8>
    37ac:	add	x1, x1, #0x6e0
    37b0:	mov	x0, x19
    37b4:	bl	2530 <fprintf@plt>
    37b8:	mov	x0, x19
    37bc:	bl	2460 <fflush@plt>
    37c0:	b	3830 <_ck_assert_failed@@Base+0x7b0>
    37c4:	mov	x0, x3
    37c8:	cmp	w4, #0x7
    37cc:	b.ne	383c <_ck_assert_failed@@Base+0x7bc>  // b.any
    37d0:	adrp	x1, 19000 <check_waitpid_and_exit@@Base+0x12d30>
    37d4:	ldr	w3, [x1, #616]
    37d8:	add	w3, w3, #0x1
    37dc:	str	w3, [x1, #616]
    37e0:	ldr	w4, [x0]
    37e4:	adrp	x1, 6000 <srunner_run_tagged@@Base+0x6a8>
    37e8:	add	x1, x1, #0x6d8
    37ec:	adrp	x2, 6000 <srunner_run_tagged@@Base+0x6a8>
    37f0:	add	x2, x2, #0x6d0
    37f4:	cmp	w4, #0x1
    37f8:	ldr	x7, [x0, #48]
    37fc:	ldr	x6, [x0, #40]
    3800:	ldr	x5, [x0, #32]
    3804:	ldr	x4, [x0, #8]
    3808:	csel	x2, x2, x1, eq  // eq = none
    380c:	adrp	x1, 6000 <srunner_run_tagged@@Base+0x6a8>
    3810:	add	x1, x1, #0x6e8
    3814:	mov	x0, x19
    3818:	bl	2530 <fprintf@plt>
    381c:	mov	x0, x19
    3820:	bl	2460 <fflush@plt>
    3824:	b	3830 <_ck_assert_failed@@Base+0x7b0>
    3828:	adrp	x0, 19000 <check_waitpid_and_exit@@Base+0x12d30>
    382c:	str	wzr, [x0, #616]
    3830:	ldr	x19, [sp, #16]
    3834:	ldp	x29, x30, [sp], #32
    3838:	ret
    383c:	mov	w2, #0x17c                 	// #380
    3840:	adrp	x1, 6000 <srunner_run_tagged@@Base+0x6a8>
    3844:	add	x1, x1, #0x698
    3848:	adrp	x0, 6000 <srunner_run_tagged@@Base+0x6a8>
    384c:	add	x0, x0, #0x700
    3850:	bl	31cc <_ck_assert_failed@@Base+0x14c>
    3854:	stp	x29, x30, [sp, #-32]!
    3858:	mov	x29, sp
    385c:	stp	x19, x20, [sp, #16]
    3860:	mov	x19, x1
    3864:	cmp	w4, #0x4
    3868:	b.eq	38bc <_ck_assert_failed@@Base+0x83c>  // b.none
    386c:	b.hi	3898 <_ck_assert_failed@@Base+0x818>  // b.pmore
    3870:	cmp	w4, #0x2
    3874:	b.ls	388c <_ck_assert_failed@@Base+0x80c>  // b.plast
    3878:	ldr	x2, [x3]
    387c:	adrp	x1, 6000 <srunner_run_tagged@@Base+0x6a8>
    3880:	add	x1, x1, #0x728
    3884:	mov	x0, x19
    3888:	bl	2530 <fprintf@plt>
    388c:	ldp	x19, x20, [sp, #16]
    3890:	ldp	x29, x30, [sp], #32
    3894:	ret
    3898:	cmp	w4, #0x6
    389c:	b.ls	388c <_ck_assert_failed@@Base+0x80c>  // b.plast
    38a0:	cmp	w4, #0x7
    38a4:	b.ne	38ec <_ck_assert_failed@@Base+0x86c>  // b.any
    38a8:	mov	w2, #0x3                   	// #3
    38ac:	mov	x1, x3
    38b0:	mov	x0, x19
    38b4:	bl	524c <check_set_max_msg_size@@Base+0x980>
    38b8:	b	388c <_ck_assert_failed@@Base+0x80c>
    38bc:	mov	x20, x0
    38c0:	mov	x3, x1
    38c4:	mov	x2, #0x1c                  	// #28
    38c8:	mov	x1, #0x1                   	// #1
    38cc:	adrp	x0, 6000 <srunner_run_tagged@@Base+0x6a8>
    38d0:	add	x0, x0, #0x740
    38d4:	bl	2440 <fwrite@plt>
    38d8:	mov	w2, #0x1                   	// #1
    38dc:	mov	x1, x20
    38e0:	mov	x0, x19
    38e4:	bl	52c4 <check_set_max_msg_size@@Base+0x9f8>
    38e8:	b	388c <_ck_assert_failed@@Base+0x80c>
    38ec:	mov	w2, #0x103                 	// #259
    38f0:	adrp	x1, 6000 <srunner_run_tagged@@Base+0x6a8>
    38f4:	add	x1, x1, #0x698
    38f8:	adrp	x0, 6000 <srunner_run_tagged@@Base+0x6a8>
    38fc:	add	x0, x0, #0x760
    3900:	bl	31cc <_ck_assert_failed@@Base+0x14c>
    3904:	stp	x29, x30, [sp, #-128]!
    3908:	mov	x29, sp
    390c:	stp	x19, x20, [sp, #16]
    3910:	stp	x21, x22, [sp, #32]
    3914:	mov	x20, x1
    3918:	mov	x21, x3
    391c:	mov	w19, w4
    3920:	adrp	x0, 19000 <check_waitpid_and_exit@@Base+0x12d30>
    3924:	ldrb	w0, [x0, #624]
    3928:	cbz	w0, 3960 <_ck_assert_failed@@Base+0x8e0>
    392c:	cmp	w19, #0x3
    3930:	b.eq	3ac0 <_ck_assert_failed@@Base+0xa40>  // b.none
    3934:	b.ls	39b8 <_ck_assert_failed@@Base+0x938>  // b.plast
    3938:	cmp	w19, #0x6
    393c:	b.eq	39c8 <_ck_assert_failed@@Base+0x948>  // b.none
    3940:	b.ls	39fc <_ck_assert_failed@@Base+0x97c>  // b.plast
    3944:	cmp	w19, #0x7
    3948:	b.ne	3b00 <_ck_assert_failed@@Base+0xa80>  // b.any
    394c:	mov	w2, #0x3                   	// #3
    3950:	mov	x1, x21
    3954:	mov	x0, x20
    3958:	bl	4f00 <check_set_max_msg_size@@Base+0x634>
    395c:	b	39c8 <_ck_assert_failed@@Base+0x948>
    3960:	add	x22, sp, #0x38
    3964:	mov	x1, #0x0                   	// #0
    3968:	mov	x0, x22
    396c:	bl	22b0 <gettimeofday@plt>
    3970:	bl	3180 <_ck_assert_failed@@Base+0x100>
    3974:	adrp	x1, 19000 <check_waitpid_and_exit@@Base+0x12d30>
    3978:	add	x1, x1, #0x268
    397c:	add	x1, x1, #0x20
    3980:	bl	21f0 <clock_gettime@plt>
    3984:	add	x1, sp, #0x48
    3988:	mov	x0, x22
    398c:	bl	21b0 <localtime_r@plt>
    3990:	cbz	x0, 392c <_ck_assert_failed@@Base+0x8ac>
    3994:	add	x3, sp, #0x48
    3998:	adrp	x2, 6000 <srunner_run_tagged@@Base+0x6a8>
    399c:	add	x2, x2, #0x788
    39a0:	mov	x1, #0x14                  	// #20
    39a4:	adrp	x0, 19000 <check_waitpid_and_exit@@Base+0x12d30>
    39a8:	add	x0, x0, #0x268
    39ac:	add	x0, x0, #0x8
    39b0:	bl	21d0 <strftime@plt>
    39b4:	b	392c <_ck_assert_failed@@Base+0x8ac>
    39b8:	cmp	w19, #0x1
    39bc:	b.eq	3a28 <_ck_assert_failed@@Base+0x9a8>  // b.none
    39c0:	cmp	w19, #0x2
    39c4:	b.ne	39d8 <_ck_assert_failed@@Base+0x958>  // b.any
    39c8:	ldp	x19, x20, [sp, #16]
    39cc:	ldp	x21, x22, [sp, #32]
    39d0:	ldp	x29, x30, [sp], #128
    39d4:	ret
    39d8:	cbnz	w19, 3b00 <_ck_assert_failed@@Base+0xa80>
    39dc:	adrp	x2, 19000 <check_waitpid_and_exit@@Base+0x12d30>
    39e0:	add	x2, x2, #0x268
    39e4:	add	x2, x2, #0x8
    39e8:	adrp	x1, 6000 <srunner_run_tagged@@Base+0x6a8>
    39ec:	add	x1, x1, #0x7a0
    39f0:	mov	x0, x20
    39f4:	bl	2530 <fprintf@plt>
    39f8:	b	39c8 <_ck_assert_failed@@Base+0x948>
    39fc:	cmp	w19, #0x4
    3a00:	b.eq	39c8 <_ck_assert_failed@@Base+0x948>  // b.none
    3a04:	cmp	w19, #0x5
    3a08:	b.ne	3b00 <_ck_assert_failed@@Base+0xa80>  // b.any
    3a0c:	mov	x3, x20
    3a10:	mov	x2, #0xb                   	// #11
    3a14:	mov	x1, #0x1                   	// #1
    3a18:	adrp	x0, 6000 <srunner_run_tagged@@Base+0x6a8>
    3a1c:	add	x0, x0, #0x8c0
    3a20:	bl	2440 <fwrite@plt>
    3a24:	b	39c8 <_ck_assert_failed@@Base+0x948>
    3a28:	str	xzr, [sp, #72]
    3a2c:	str	xzr, [sp, #80]
    3a30:	bl	3180 <_ck_assert_failed@@Base+0x100>
    3a34:	add	x1, sp, #0x48
    3a38:	bl	21f0 <clock_gettime@plt>
    3a3c:	adrp	x2, 19000 <check_waitpid_and_exit@@Base+0x12d30>
    3a40:	add	x2, x2, #0x268
    3a44:	ldr	x3, [x2, #32]
    3a48:	ldr	x0, [sp, #72]
    3a4c:	sub	x0, x0, x3
    3a50:	mov	x3, #0x4240                	// #16960
    3a54:	movk	x3, #0xf, lsl #16
    3a58:	ldr	x4, [sp, #80]
    3a5c:	mov	x1, #0xf7cf                	// #63439
    3a60:	movk	x1, #0xe353, lsl #16
    3a64:	movk	x1, #0x9ba5, lsl #32
    3a68:	movk	x1, #0x20c4, lsl #48
    3a6c:	smulh	x5, x4, x1
    3a70:	asr	x5, x5, #7
    3a74:	sub	x4, x5, x4, asr #63
    3a78:	madd	x0, x0, x3, x4
    3a7c:	ldr	x2, [x2, #40]
    3a80:	smulh	x1, x2, x1
    3a84:	asr	x2, x2, #63
    3a88:	sub	x1, x2, x1, asr #7
    3a8c:	add	x0, x0, x1
    3a90:	mov	x2, #0x34db                	// #13531
    3a94:	movk	x2, #0xd7b6, lsl #16
    3a98:	movk	x2, #0xde82, lsl #32
    3a9c:	movk	x2, #0x431b, lsl #48
    3aa0:	umulh	x2, x0, x2
    3aa4:	lsr	x2, x2, #18
    3aa8:	msub	x3, x2, x3, x0
    3aac:	adrp	x1, 6000 <srunner_run_tagged@@Base+0x6a8>
    3ab0:	add	x1, x1, #0x868
    3ab4:	mov	x0, x20
    3ab8:	bl	2530 <fprintf@plt>
    3abc:	b	39c8 <_ck_assert_failed@@Base+0x948>
    3ac0:	mov	x3, x20
    3ac4:	mov	x2, #0x15                  	// #21
    3ac8:	mov	x1, #0x1                   	// #1
    3acc:	adrp	x0, 6000 <srunner_run_tagged@@Base+0x6a8>
    3ad0:	add	x0, x0, #0x898
    3ad4:	bl	2440 <fwrite@plt>
    3ad8:	ldr	x1, [x21]
    3adc:	mov	x0, x20
    3ae0:	bl	4d88 <check_set_max_msg_size@@Base+0x4bc>
    3ae4:	mov	x3, x20
    3ae8:	mov	x2, #0x9                   	// #9
    3aec:	mov	x1, #0x1                   	// #1
    3af0:	adrp	x0, 6000 <srunner_run_tagged@@Base+0x6a8>
    3af4:	add	x0, x0, #0x8b0
    3af8:	bl	2440 <fwrite@plt>
    3afc:	b	39c8 <_ck_assert_failed@@Base+0x948>
    3b00:	mov	w2, #0x14f                 	// #335
    3b04:	adrp	x1, 6000 <srunner_run_tagged@@Base+0x6a8>
    3b08:	add	x1, x1, #0x698
    3b0c:	adrp	x0, 6000 <srunner_run_tagged@@Base+0x6a8>
    3b10:	add	x0, x0, #0x8d0
    3b14:	bl	31cc <_ck_assert_failed@@Base+0x14c>
    3b18:	stp	x29, x30, [sp, #-32]!
    3b1c:	mov	x29, sp
    3b20:	str	x19, [sp, #16]
    3b24:	mov	x19, x0
    3b28:	adrp	x1, 6000 <srunner_run_tagged@@Base+0x6a8>
    3b2c:	add	x1, x1, #0x8f8
    3b30:	bl	2380 <strcmp@plt>
    3b34:	cbnz	w0, 3b50 <_ck_assert_failed@@Base+0xad0>
    3b38:	adrp	x0, 18000 <check_waitpid_and_exit@@Base+0x11d30>
    3b3c:	ldr	x0, [x0, #4016]
    3b40:	ldr	x0, [x0]
    3b44:	ldr	x19, [sp, #16]
    3b48:	ldp	x29, x30, [sp], #32
    3b4c:	ret
    3b50:	adrp	x1, 6000 <srunner_run_tagged@@Base+0x6a8>
    3b54:	add	x1, x1, #0x900
    3b58:	mov	x0, x19
    3b5c:	bl	2270 <fopen@plt>
    3b60:	cbnz	x0, 3b44 <_ck_assert_failed@@Base+0xac4>
    3b64:	mov	x3, x19
    3b68:	mov	w2, #0x1cd                 	// #461
    3b6c:	adrp	x1, 6000 <srunner_run_tagged@@Base+0x6a8>
    3b70:	add	x1, x1, #0x698
    3b74:	adrp	x0, 6000 <srunner_run_tagged@@Base+0x6a8>
    3b78:	add	x0, x0, #0x908
    3b7c:	bl	31cc <_ck_assert_failed@@Base+0x14c>

0000000000003b80 <srunner_set_log@@Base>:
    3b80:	ldr	x2, [x0, #24]
    3b84:	cbz	x2, 3b8c <srunner_set_log@@Base+0xc>
    3b88:	ret
    3b8c:	str	x1, [x0, #24]
    3b90:	b	3b88 <srunner_set_log@@Base+0x8>

0000000000003b94 <srunner_log_fname@@Base>:
    3b94:	ldr	x0, [x0, #24]
    3b98:	cbz	x0, 3ba0 <srunner_log_fname@@Base+0xc>
    3b9c:	ret
    3ba0:	stp	x29, x30, [sp, #-16]!
    3ba4:	mov	x29, sp
    3ba8:	adrp	x0, 6000 <srunner_run_tagged@@Base+0x6a8>
    3bac:	add	x0, x0, #0x938
    3bb0:	bl	24e0 <getenv@plt>
    3bb4:	ldp	x29, x30, [sp], #16
    3bb8:	ret

0000000000003bbc <srunner_has_log@@Base>:
    3bbc:	stp	x29, x30, [sp, #-16]!
    3bc0:	mov	x29, sp
    3bc4:	bl	2420 <srunner_log_fname@plt>
    3bc8:	cmp	x0, #0x0
    3bcc:	cset	w0, ne  // ne = any
    3bd0:	ldp	x29, x30, [sp], #16
    3bd4:	ret

0000000000003bd8 <srunner_set_xml@@Base>:
    3bd8:	ldr	x2, [x0, #32]
    3bdc:	cbz	x2, 3be4 <srunner_set_xml@@Base+0xc>
    3be0:	ret
    3be4:	str	x1, [x0, #32]
    3be8:	b	3be0 <srunner_set_xml@@Base+0x8>

0000000000003bec <srunner_xml_fname@@Base>:
    3bec:	ldr	x0, [x0, #32]
    3bf0:	cbz	x0, 3bf8 <srunner_xml_fname@@Base+0xc>
    3bf4:	ret
    3bf8:	stp	x29, x30, [sp, #-16]!
    3bfc:	mov	x29, sp
    3c00:	adrp	x0, 6000 <srunner_run_tagged@@Base+0x6a8>
    3c04:	add	x0, x0, #0x950
    3c08:	bl	24e0 <getenv@plt>
    3c0c:	ldp	x29, x30, [sp], #16
    3c10:	ret

0000000000003c14 <srunner_has_xml@@Base>:
    3c14:	stp	x29, x30, [sp, #-16]!
    3c18:	mov	x29, sp
    3c1c:	bl	2250 <srunner_xml_fname@plt>
    3c20:	cmp	x0, #0x0
    3c24:	cset	w0, ne  // ne = any
    3c28:	ldp	x29, x30, [sp], #16
    3c2c:	ret

0000000000003c30 <srunner_set_tap@@Base>:
    3c30:	ldr	x2, [x0, #40]
    3c34:	cbz	x2, 3c3c <srunner_set_tap@@Base+0xc>
    3c38:	ret
    3c3c:	str	x1, [x0, #40]
    3c40:	b	3c38 <srunner_set_tap@@Base+0x8>

0000000000003c44 <srunner_tap_fname@@Base>:
    3c44:	ldr	x0, [x0, #40]
    3c48:	cbz	x0, 3c50 <srunner_tap_fname@@Base+0xc>
    3c4c:	ret
    3c50:	stp	x29, x30, [sp, #-16]!
    3c54:	mov	x29, sp
    3c58:	adrp	x0, 6000 <srunner_run_tagged@@Base+0x6a8>
    3c5c:	add	x0, x0, #0x968
    3c60:	bl	24e0 <getenv@plt>
    3c64:	ldp	x29, x30, [sp], #16
    3c68:	ret

0000000000003c6c <srunner_has_tap@@Base>:
    3c6c:	stp	x29, x30, [sp, #-16]!
    3c70:	mov	x29, sp
    3c74:	bl	2100 <srunner_tap_fname@plt>
    3c78:	cmp	x0, #0x0
    3c7c:	cset	w0, ne  // ne = any
    3c80:	ldp	x29, x30, [sp], #16
    3c84:	ret
    3c88:	stp	x29, x30, [sp, #-64]!
    3c8c:	mov	x29, sp
    3c90:	stp	x19, x20, [sp, #16]
    3c94:	stp	x21, x22, [sp, #32]
    3c98:	stp	x23, x24, [sp, #48]
    3c9c:	mov	x21, x0
    3ca0:	mov	x24, x1
    3ca4:	mov	w22, w2
    3ca8:	mov	x23, x3
    3cac:	mov	w20, w4
    3cb0:	mov	x0, #0x18                  	// #24
    3cb4:	bl	32f4 <_ck_assert_failed@@Base+0x274>
    3cb8:	mov	x19, x0
    3cbc:	cmp	w20, #0x4
    3cc0:	b.eq	3cf4 <srunner_has_tap@@Base+0x88>  // b.none
    3cc4:	str	x24, [x19]
    3cc8:	str	x23, [x19, #8]
    3ccc:	str	w22, [x19, #16]
    3cd0:	str	w20, [x19, #20]
    3cd4:	mov	x1, x19
    3cd8:	ldr	x0, [x21, #48]
    3cdc:	bl	3470 <_ck_assert_failed@@Base+0x3f0>
    3ce0:	ldp	x19, x20, [sp, #16]
    3ce4:	ldp	x21, x22, [sp, #32]
    3ce8:	ldp	x23, x24, [sp, #48]
    3cec:	ldp	x29, x30, [sp], #64
    3cf0:	ret
    3cf4:	bl	51bc <check_set_max_msg_size@@Base+0x8f0>
    3cf8:	mov	w20, w0
    3cfc:	b	3cc4 <srunner_has_tap@@Base+0x58>
    3d00:	stp	x29, x30, [sp, #-16]!
    3d04:	mov	x29, sp
    3d08:	mov	w2, #0x2                   	// #2
    3d0c:	mov	x1, #0x0                   	// #0
    3d10:	bl	364c <_ck_assert_failed@@Base+0x5cc>
    3d14:	ldp	x29, x30, [sp], #16
    3d18:	ret
    3d1c:	stp	x29, x30, [sp, #-16]!
    3d20:	mov	x29, sp
    3d24:	mov	w2, #0x4                   	// #4
    3d28:	mov	x1, #0x0                   	// #0
    3d2c:	bl	364c <_ck_assert_failed@@Base+0x5cc>
    3d30:	ldp	x29, x30, [sp], #16
    3d34:	ret
    3d38:	stp	x29, x30, [sp, #-16]!
    3d3c:	mov	x29, sp
    3d40:	mov	w2, #0x3                   	// #3
    3d44:	bl	364c <_ck_assert_failed@@Base+0x5cc>
    3d48:	ldp	x29, x30, [sp], #16
    3d4c:	ret
    3d50:	stp	x29, x30, [sp, #-16]!
    3d54:	mov	x29, sp
    3d58:	mov	w2, #0x5                   	// #5
    3d5c:	bl	364c <_ck_assert_failed@@Base+0x5cc>
    3d60:	ldp	x29, x30, [sp], #16
    3d64:	ret
    3d68:	stp	x29, x30, [sp, #-144]!
    3d6c:	mov	x29, sp
    3d70:	stp	x19, x20, [sp, #16]
    3d74:	mov	x20, x0
    3d78:	ldr	x0, [x2]
    3d7c:	add	x19, sp, #0x28
    3d80:	ldr	x4, [x0]
    3d84:	ldr	x3, [x1]
    3d88:	adrp	x2, 6000 <srunner_run_tagged@@Base+0x6a8>
    3d8c:	add	x2, x2, #0x980
    3d90:	mov	x1, #0x63                  	// #99
    3d94:	mov	x0, x19
    3d98:	bl	2230 <snprintf@plt>
    3d9c:	mov	w2, #0x6                   	// #6
    3da0:	mov	x1, x19
    3da4:	mov	x0, x20
    3da8:	bl	364c <_ck_assert_failed@@Base+0x5cc>
    3dac:	ldp	x19, x20, [sp, #16]
    3db0:	ldp	x29, x30, [sp], #144
    3db4:	ret
    3db8:	stp	x29, x30, [sp, #-16]!
    3dbc:	mov	x29, sp
    3dc0:	mov	w2, #0x7                   	// #7
    3dc4:	bl	364c <_ck_assert_failed@@Base+0x5cc>
    3dc8:	ldp	x29, x30, [sp], #16
    3dcc:	ret
    3dd0:	stp	x29, x30, [sp, #-32]!
    3dd4:	mov	x29, sp
    3dd8:	str	x19, [sp, #16]
    3ddc:	mov	x19, x0
    3de0:	bl	2190 <srunner_has_log@plt>
    3de4:	cbz	w0, 3e00 <srunner_has_tap@@Base+0x194>
    3de8:	mov	x0, x19
    3dec:	bl	2420 <srunner_log_fname@plt>
    3df0:	bl	3b18 <_ck_assert_failed@@Base+0xa98>
    3df4:	ldr	x19, [sp, #16]
    3df8:	ldp	x29, x30, [sp], #32
    3dfc:	ret
    3e00:	mov	x0, #0x0                   	// #0
    3e04:	b	3df4 <srunner_has_tap@@Base+0x188>
    3e08:	stp	x29, x30, [sp, #-32]!
    3e0c:	mov	x29, sp
    3e10:	str	x19, [sp, #16]
    3e14:	mov	x19, x0
    3e18:	bl	23a0 <srunner_has_xml@plt>
    3e1c:	cbz	w0, 3e38 <srunner_has_tap@@Base+0x1cc>
    3e20:	mov	x0, x19
    3e24:	bl	2250 <srunner_xml_fname@plt>
    3e28:	bl	3b18 <_ck_assert_failed@@Base+0xa98>
    3e2c:	ldr	x19, [sp, #16]
    3e30:	ldp	x29, x30, [sp], #32
    3e34:	ret
    3e38:	mov	x0, #0x0                   	// #0
    3e3c:	b	3e2c <srunner_has_tap@@Base+0x1c0>
    3e40:	stp	x29, x30, [sp, #-32]!
    3e44:	mov	x29, sp
    3e48:	str	x19, [sp, #16]
    3e4c:	mov	x19, x0
    3e50:	bl	2390 <srunner_has_tap@plt>
    3e54:	cbz	w0, 3e70 <srunner_has_tap@@Base+0x204>
    3e58:	mov	x0, x19
    3e5c:	bl	2100 <srunner_tap_fname@plt>
    3e60:	bl	3b18 <_ck_assert_failed@@Base+0xa98>
    3e64:	ldr	x19, [sp, #16]
    3e68:	ldp	x29, x30, [sp], #32
    3e6c:	ret
    3e70:	mov	x0, #0x0                   	// #0
    3e74:	b	3e64 <srunner_has_tap@@Base+0x1f8>
    3e78:	stp	x29, x30, [sp, #-32]!
    3e7c:	mov	x29, sp
    3e80:	stp	x19, x20, [sp, #16]
    3e84:	mov	x19, x0
    3e88:	mov	w20, w1
    3e8c:	bl	33c0 <_ck_assert_failed@@Base+0x340>
    3e90:	str	x0, [x19, #48]
    3e94:	mov	w4, w20
    3e98:	adrp	x3, 18000 <check_waitpid_and_exit@@Base+0x11d30>
    3e9c:	ldr	x3, [x3, #4032]
    3ea0:	mov	w2, #0x0                   	// #0
    3ea4:	adrp	x0, 18000 <check_waitpid_and_exit@@Base+0x11d30>
    3ea8:	ldr	x0, [x0, #4016]
    3eac:	ldr	x1, [x0]
    3eb0:	mov	x0, x19
    3eb4:	bl	3c88 <srunner_has_tap@@Base+0x1c>
    3eb8:	mov	x0, x19
    3ebc:	bl	3dd0 <srunner_has_tap@@Base+0x164>
    3ec0:	cbz	x0, 3ef0 <srunner_has_tap@@Base+0x284>
    3ec4:	mov	x1, x0
    3ec8:	adrp	x0, 18000 <check_waitpid_and_exit@@Base+0x11d30>
    3ecc:	ldr	x0, [x0, #4016]
    3ed0:	ldr	x0, [x0]
    3ed4:	cmp	x0, x1
    3ed8:	mov	w4, w20
    3edc:	adrp	x3, 18000 <check_waitpid_and_exit@@Base+0x11d30>
    3ee0:	ldr	x3, [x3, #4024]
    3ee4:	cset	w2, ne  // ne = any
    3ee8:	mov	x0, x19
    3eec:	bl	3c88 <srunner_has_tap@@Base+0x1c>
    3ef0:	mov	x0, x19
    3ef4:	bl	3e08 <srunner_has_tap@@Base+0x19c>
    3ef8:	mov	x1, x0
    3efc:	cbz	x0, 3f28 <srunner_has_tap@@Base+0x2bc>
    3f00:	adrp	x0, 18000 <check_waitpid_and_exit@@Base+0x11d30>
    3f04:	ldr	x0, [x0, #4016]
    3f08:	ldr	x0, [x0]
    3f0c:	cmp	x0, x1
    3f10:	mov	w4, w20
    3f14:	adrp	x3, 18000 <check_waitpid_and_exit@@Base+0x11d30>
    3f18:	ldr	x3, [x3, #4000]
    3f1c:	cset	w2, ne  // ne = any
    3f20:	mov	x0, x19
    3f24:	bl	3c88 <srunner_has_tap@@Base+0x1c>
    3f28:	mov	x0, x19
    3f2c:	bl	3e40 <srunner_has_tap@@Base+0x1d4>
    3f30:	mov	x1, x0
    3f34:	cbz	x0, 3f60 <srunner_has_tap@@Base+0x2f4>
    3f38:	adrp	x0, 18000 <check_waitpid_and_exit@@Base+0x11d30>
    3f3c:	ldr	x0, [x0, #4016]
    3f40:	ldr	x0, [x0]
    3f44:	cmp	x0, x1
    3f48:	mov	w4, w20
    3f4c:	adrp	x3, 18000 <check_waitpid_and_exit@@Base+0x11d30>
    3f50:	ldr	x3, [x3, #4008]
    3f54:	cset	w2, ne  // ne = any
    3f58:	mov	x0, x19
    3f5c:	bl	3c88 <srunner_has_tap@@Base+0x1c>
    3f60:	mov	w2, #0x0                   	// #0
    3f64:	mov	x1, #0x0                   	// #0
    3f68:	mov	x0, x19
    3f6c:	bl	364c <_ck_assert_failed@@Base+0x5cc>
    3f70:	ldp	x19, x20, [sp, #16]
    3f74:	ldp	x29, x30, [sp], #32
    3f78:	ret
    3f7c:	stp	x29, x30, [sp, #-48]!
    3f80:	mov	x29, sp
    3f84:	stp	x19, x20, [sp, #16]
    3f88:	str	x21, [sp, #32]
    3f8c:	mov	x21, x0
    3f90:	mov	w2, #0x1                   	// #1
    3f94:	mov	x1, #0x0                   	// #0
    3f98:	bl	364c <_ck_assert_failed@@Base+0x5cc>
    3f9c:	ldr	x20, [x21, #48]
    3fa0:	mov	x0, x20
    3fa4:	bl	34e4 <_ck_assert_failed@@Base+0x464>
    3fa8:	b	3fbc <srunner_has_tap@@Base+0x350>
    3fac:	mov	x0, x19
    3fb0:	bl	23e0 <free@plt>
    3fb4:	mov	x0, x20
    3fb8:	bl	3564 <_ck_assert_failed@@Base+0x4e4>
    3fbc:	mov	x0, x20
    3fc0:	bl	34c0 <_ck_assert_failed@@Base+0x440>
    3fc4:	cbnz	w0, 4000 <srunner_has_tap@@Base+0x394>
    3fc8:	mov	x0, x20
    3fcc:	bl	352c <_ck_assert_failed@@Base+0x4ac>
    3fd0:	mov	x19, x0
    3fd4:	ldr	w1, [x0, #16]
    3fd8:	cbz	w1, 3fac <srunner_has_tap@@Base+0x340>
    3fdc:	ldr	x0, [x0]
    3fe0:	bl	2260 <fclose@plt>
    3fe4:	cbz	w0, 3fac <srunner_has_tap@@Base+0x340>
    3fe8:	mov	w2, #0x224                 	// #548
    3fec:	adrp	x1, 6000 <srunner_run_tagged@@Base+0x6a8>
    3ff0:	add	x1, x1, #0x698
    3ff4:	adrp	x0, 6000 <srunner_run_tagged@@Base+0x6a8>
    3ff8:	add	x0, x0, #0x988
    3ffc:	bl	31cc <_ck_assert_failed@@Base+0x14c>
    4000:	mov	x0, x20
    4004:	bl	34f8 <_ck_assert_failed@@Base+0x478>
    4008:	str	xzr, [x21, #48]
    400c:	ldp	x19, x20, [sp, #16]
    4010:	ldr	x21, [sp, #32]
    4014:	ldp	x29, x30, [sp], #48
    4018:	ret
    401c:	adrp	x0, 19000 <check_waitpid_and_exit@@Base+0x12d30>
    4020:	ldr	x0, [x0, #664]
    4024:	cbz	x0, 402c <srunner_has_tap@@Base+0x3c0>
    4028:	ret
    402c:	adrp	x0, 19000 <check_waitpid_and_exit@@Base+0x12d30>
    4030:	ldr	x0, [x0, #672]
    4034:	cbnz	x0, 4028 <srunner_has_tap@@Base+0x3bc>
    4038:	stp	x29, x30, [sp, #-16]!
    403c:	mov	x29, sp
    4040:	mov	w2, #0x50                  	// #80
    4044:	adrp	x1, 6000 <srunner_run_tagged@@Base+0x6a8>
    4048:	add	x1, x1, #0x9b8
    404c:	adrp	x0, 6000 <srunner_run_tagged@@Base+0x6a8>
    4050:	add	x0, x0, #0x9c8
    4054:	bl	31cc <_ck_assert_failed@@Base+0x14c>
    4058:	stp	x29, x30, [sp, #-32]!
    405c:	mov	x29, sp
    4060:	adrp	x0, 19000 <check_waitpid_and_exit@@Base+0x12d30>
    4064:	ldr	x0, [x0, #664]
    4068:	cbz	x0, 40ac <srunner_has_tap@@Base+0x440>
    406c:	bl	2260 <fclose@plt>
    4070:	adrp	x0, 19000 <check_waitpid_and_exit@@Base+0x12d30>
    4074:	add	x1, x0, #0x298
    4078:	str	xzr, [x0, #664]
    407c:	ldr	x0, [x1, #16]
    4080:	cbz	x0, 40a4 <srunner_has_tap@@Base+0x438>
    4084:	str	x19, [sp, #16]
    4088:	bl	2520 <unlink@plt>
    408c:	adrp	x19, 19000 <check_waitpid_and_exit@@Base+0x12d30>
    4090:	add	x19, x19, #0x298
    4094:	ldr	x0, [x19, #16]
    4098:	bl	23e0 <free@plt>
    409c:	str	xzr, [x19, #16]
    40a0:	ldr	x19, [sp, #16]
    40a4:	ldp	x29, x30, [sp], #32
    40a8:	ret
    40ac:	adrp	x0, 19000 <check_waitpid_and_exit@@Base+0x12d30>
    40b0:	ldr	x0, [x0, #672]
    40b4:	cbz	x0, 40f4 <srunner_has_tap@@Base+0x488>
    40b8:	bl	2260 <fclose@plt>
    40bc:	adrp	x0, 19000 <check_waitpid_and_exit@@Base+0x12d30>
    40c0:	add	x0, x0, #0x298
    40c4:	str	xzr, [x0, #8]
    40c8:	ldr	x0, [x0, #24]
    40cc:	cbz	x0, 40a4 <srunner_has_tap@@Base+0x438>
    40d0:	str	x19, [sp, #16]
    40d4:	bl	2520 <unlink@plt>
    40d8:	adrp	x19, 19000 <check_waitpid_and_exit@@Base+0x12d30>
    40dc:	add	x19, x19, #0x298
    40e0:	ldr	x0, [x19, #24]
    40e4:	bl	23e0 <free@plt>
    40e8:	str	xzr, [x19, #24]
    40ec:	ldr	x19, [sp, #16]
    40f0:	b	40a4 <srunner_has_tap@@Base+0x438>
    40f4:	str	x19, [sp, #16]
    40f8:	mov	w2, #0x16a                 	// #362
    40fc:	adrp	x1, 6000 <srunner_run_tagged@@Base+0x6a8>
    4100:	add	x1, x1, #0x9b8
    4104:	adrp	x0, 6000 <srunner_run_tagged@@Base+0x6a8>
    4108:	add	x0, x0, #0xa40
    410c:	bl	31cc <_ck_assert_failed@@Base+0x14c>
    4110:	stp	x29, x30, [sp, #-32]!
    4114:	mov	x29, sp
    4118:	bl	2300 <strdup@plt>
    411c:	str	x0, [sp, #24]
    4120:	bl	401c <srunner_has_tap@@Base+0x3b0>
    4124:	add	x2, sp, #0x18
    4128:	mov	w1, #0x1                   	// #1
    412c:	bl	49cc <check_set_max_msg_size@@Base+0x100>
    4130:	ldr	x0, [sp, #24]
    4134:	bl	23e0 <free@plt>
    4138:	ldp	x29, x30, [sp], #32
    413c:	ret
    4140:	stp	x29, x30, [sp, #-32]!
    4144:	mov	x29, sp
    4148:	str	w0, [sp, #24]
    414c:	bl	401c <srunner_has_tap@@Base+0x3b0>
    4150:	add	x2, sp, #0x18
    4154:	mov	w1, #0x3                   	// #3
    4158:	bl	49cc <check_set_max_msg_size@@Base+0x100>
    415c:	ldp	x29, x30, [sp], #32
    4160:	ret
    4164:	stp	x29, x30, [sp, #-48]!
    4168:	mov	x29, sp
    416c:	str	x19, [sp, #16]
    4170:	mov	w19, w1
    4174:	bl	2300 <strdup@plt>
    4178:	str	x0, [sp, #40]
    417c:	str	w19, [sp, #32]
    4180:	bl	401c <srunner_has_tap@@Base+0x3b0>
    4184:	add	x2, sp, #0x20
    4188:	mov	w1, #0x2                   	// #2
    418c:	bl	49cc <check_set_max_msg_size@@Base+0x100>
    4190:	ldr	x0, [sp, #40]
    4194:	bl	23e0 <free@plt>
    4198:	ldr	x19, [sp, #16]
    419c:	ldp	x29, x30, [sp], #48
    41a0:	ret
    41a4:	stp	x29, x30, [sp, #-32]!
    41a8:	mov	x29, sp
    41ac:	str	w0, [sp, #24]
    41b0:	bl	401c <srunner_has_tap@@Base+0x3b0>
    41b4:	add	x2, sp, #0x18
    41b8:	mov	w1, #0x0                   	// #0
    41bc:	bl	49cc <check_set_max_msg_size@@Base+0x100>
    41c0:	ldp	x29, x30, [sp], #32
    41c4:	ret
    41c8:	stp	x29, x30, [sp, #-16]!
    41cc:	mov	x29, sp
    41d0:	bl	4058 <srunner_has_tap@@Base+0x3ec>
    41d4:	ldp	x29, x30, [sp], #16
    41d8:	ret
    41dc:	stp	x29, x30, [sp, #-32]!
    41e0:	mov	x29, sp
    41e4:	stp	x19, x20, [sp, #16]
    41e8:	mov	x19, x0
    41ec:	str	xzr, [x0]
    41f0:	adrp	x0, 6000 <srunner_run_tagged@@Base+0x6a8>
    41f4:	add	x0, x0, #0xa60
    41f8:	bl	24e0 <getenv@plt>
    41fc:	adrp	x1, 6000 <srunner_run_tagged@@Base+0x6a8>
    4200:	add	x1, x1, #0xa58
    4204:	cmp	x0, #0x0
    4208:	csel	x1, x1, x0, eq  // eq = none
    420c:	adrp	x0, 6000 <srunner_run_tagged@@Base+0x6a8>
    4210:	add	x0, x0, #0xa70
    4214:	bl	6324 <check_waitpid_and_exit@@Base+0x54>
    4218:	str	x0, [x19]
    421c:	bl	2470 <mkstemp@plt>
    4220:	mov	x20, #0x0                   	// #0
    4224:	tbnz	w0, #31, 4258 <srunner_has_tap@@Base+0x5ec>
    4228:	adrp	x1, 6000 <srunner_run_tagged@@Base+0x6a8>
    422c:	add	x1, x1, #0xa68
    4230:	bl	22a0 <fdopen@plt>
    4234:	mov	x20, x0
    4238:	ldr	x0, [x19]
    423c:	bl	2520 <unlink@plt>
    4240:	cmp	x20, #0x0
    4244:	ccmp	w0, #0x0, #0x4, ne  // ne = any
    4248:	b.ne	4258 <srunner_has_tap@@Base+0x5ec>  // b.any
    424c:	ldr	x0, [x19]
    4250:	bl	23e0 <free@plt>
    4254:	str	xzr, [x19]
    4258:	mov	x0, x20
    425c:	ldp	x19, x20, [sp, #16]
    4260:	ldp	x29, x30, [sp], #32
    4264:	ret
    4268:	stp	x29, x30, [sp, #-32]!
    426c:	mov	x29, sp
    4270:	str	x19, [sp, #16]
    4274:	adrp	x0, 19000 <check_waitpid_and_exit@@Base+0x12d30>
    4278:	ldr	x0, [x0, #672]
    427c:	cbz	x0, 42b0 <srunner_has_tap@@Base+0x644>
    4280:	adrp	x0, 19000 <check_waitpid_and_exit@@Base+0x12d30>
    4284:	ldr	x0, [x0, #664]
    4288:	cbnz	x0, 42f8 <srunner_has_tap@@Base+0x68c>
    428c:	adrp	x19, 19000 <check_waitpid_and_exit@@Base+0x12d30>
    4290:	add	x0, x19, #0x298
    4294:	add	x0, x0, #0x10
    4298:	bl	41dc <srunner_has_tap@@Base+0x570>
    429c:	str	x0, [x19, #664]
    42a0:	cbz	x0, 42e0 <srunner_has_tap@@Base+0x674>
    42a4:	ldr	x19, [sp, #16]
    42a8:	ldp	x29, x30, [sp], #32
    42ac:	ret
    42b0:	adrp	x19, 19000 <check_waitpid_and_exit@@Base+0x12d30>
    42b4:	add	x19, x19, #0x298
    42b8:	add	x0, x19, #0x18
    42bc:	bl	41dc <srunner_has_tap@@Base+0x570>
    42c0:	str	x0, [x19, #8]
    42c4:	cbnz	x0, 42a4 <srunner_has_tap@@Base+0x638>
    42c8:	mov	w2, #0x13d                 	// #317
    42cc:	adrp	x1, 6000 <srunner_run_tagged@@Base+0x6a8>
    42d0:	add	x1, x1, #0x9b8
    42d4:	adrp	x0, 6000 <srunner_run_tagged@@Base+0x6a8>
    42d8:	add	x0, x0, #0xa80
    42dc:	bl	31cc <_ck_assert_failed@@Base+0x14c>
    42e0:	mov	w2, #0x146                 	// #326
    42e4:	adrp	x1, 6000 <srunner_run_tagged@@Base+0x6a8>
    42e8:	add	x1, x1, #0x9b8
    42ec:	adrp	x0, 6000 <srunner_run_tagged@@Base+0x6a8>
    42f0:	add	x0, x0, #0xa80
    42f4:	bl	31cc <_ck_assert_failed@@Base+0x14c>
    42f8:	mov	w2, #0x14d                 	// #333
    42fc:	adrp	x1, 6000 <srunner_run_tagged@@Base+0x6a8>
    4300:	add	x1, x1, #0x9b8
    4304:	adrp	x0, 6000 <srunner_run_tagged@@Base+0x6a8>
    4308:	add	x0, x0, #0xad8
    430c:	bl	31cc <_ck_assert_failed@@Base+0x14c>
    4310:	stp	x29, x30, [sp, #-48]!
    4314:	mov	x29, sp
    4318:	stp	x19, x20, [sp, #16]
    431c:	str	x21, [sp, #32]
    4320:	mov	w21, w0
    4324:	bl	401c <srunner_has_tap@@Base+0x3b0>
    4328:	cbz	x0, 43c4 <srunner_has_tap@@Base+0x758>
    432c:	mov	x19, x0
    4330:	bl	22e0 <rewind@plt>
    4334:	mov	x0, x19
    4338:	bl	4b2c <check_set_max_msg_size@@Base+0x260>
    433c:	mov	x19, x0
    4340:	cbz	x0, 43dc <srunner_has_tap@@Base+0x770>
    4344:	bl	4058 <srunner_has_tap@@Base+0x3ec>
    4348:	bl	4268 <srunner_has_tap@@Base+0x5fc>
    434c:	bl	2e20 <srunner_results@@Base+0x6c>
    4350:	mov	x20, x0
    4354:	ldr	x0, [x19, #40]
    4358:	cmp	x0, #0x0
    435c:	ccmp	w21, #0x0, #0x0, eq  // eq = none
    4360:	b.eq	4414 <srunner_has_tap@@Base+0x7a8>  // b.none
    4364:	ldr	w0, [x19, #4]
    4368:	cbnz	w0, 4370 <srunner_has_tap@@Base+0x704>
    436c:	ldr	w0, [x19]
    4370:	str	w0, [x20, #4]
    4374:	ldr	x0, [x19, #40]
    4378:	str	x0, [x20, #48]
    437c:	str	xzr, [x19, #40]
    4380:	ldr	w0, [x20, #4]
    4384:	cmp	w0, #0x2
    4388:	b.eq	43f4 <srunner_has_tap@@Base+0x788>  // b.none
    438c:	ldr	x0, [x19, #8]
    4390:	str	x0, [x20, #8]
    4394:	ldr	w0, [x19, #16]
    4398:	str	w0, [x20, #16]
    439c:	str	xzr, [x19, #8]
    43a0:	mov	w0, #0xffffffff            	// #-1
    43a4:	str	w0, [x19, #16]
    43a8:	mov	x0, x19
    43ac:	bl	4af0 <check_set_max_msg_size@@Base+0x224>
    43b0:	mov	x0, x20
    43b4:	ldp	x19, x20, [sp, #16]
    43b8:	ldr	x21, [sp, #32]
    43bc:	ldp	x29, x30, [sp], #48
    43c0:	ret
    43c4:	mov	w2, #0x7f                  	// #127
    43c8:	adrp	x1, 6000 <srunner_run_tagged@@Base+0x6a8>
    43cc:	add	x1, x1, #0x9b8
    43d0:	adrp	x0, 6000 <srunner_run_tagged@@Base+0x6a8>
    43d4:	add	x0, x0, #0xb08
    43d8:	bl	31cc <_ck_assert_failed@@Base+0x14c>
    43dc:	mov	w2, #0x85                  	// #133
    43e0:	adrp	x1, 6000 <srunner_run_tagged@@Base+0x6a8>
    43e4:	add	x1, x1, #0x9b8
    43e8:	adrp	x0, 6000 <srunner_run_tagged@@Base+0x6a8>
    43ec:	add	x0, x0, #0xb28
    43f0:	bl	31cc <_ck_assert_failed@@Base+0x14c>
    43f4:	ldr	x0, [x19, #24]
    43f8:	str	x0, [x20, #8]
    43fc:	ldr	w0, [x19, #32]
    4400:	str	w0, [x20, #16]
    4404:	str	xzr, [x19, #24]
    4408:	mov	w0, #0xffffffff            	// #-1
    440c:	str	w0, [x19, #32]
    4410:	b	43a8 <srunner_has_tap@@Base+0x73c>
    4414:	ldr	w0, [x19]
    4418:	cmp	w0, #0x1
    441c:	b.eq	4454 <srunner_has_tap@@Base+0x7e8>  // b.none
    4420:	mov	w0, #0x2                   	// #2
    4424:	str	w0, [x20, #4]
    4428:	str	xzr, [x20, #48]
    442c:	ldr	w0, [x19, #48]
    4430:	str	w0, [x20, #24]
    4434:	ldr	x0, [x19, #24]
    4438:	str	x0, [x20, #8]
    443c:	ldr	w0, [x19, #32]
    4440:	str	w0, [x20, #16]
    4444:	str	xzr, [x19, #24]
    4448:	mov	w0, #0xffffffff            	// #-1
    444c:	str	w0, [x19, #32]
    4450:	b	43a8 <srunner_has_tap@@Base+0x73c>
    4454:	str	w0, [x20, #4]
    4458:	str	xzr, [x20, #48]
    445c:	ldr	x0, [x19, #8]
    4460:	str	x0, [x20, #8]
    4464:	ldr	w0, [x19, #16]
    4468:	str	w0, [x20, #16]
    446c:	str	xzr, [x19, #8]
    4470:	mov	w0, #0xffffffff            	// #-1
    4474:	str	w0, [x19, #16]
    4478:	b	43a8 <srunner_has_tap@@Base+0x73c>
    447c:	stp	x29, x30, [sp, #-16]!
    4480:	mov	x29, sp
    4484:	bl	4268 <srunner_has_tap@@Base+0x5fc>
    4488:	ldp	x29, x30, [sp], #16
    448c:	ret
    4490:	ldr	x2, [x0]
    4494:	lsr	w3, w1, #24
    4498:	strb	w3, [x2]
    449c:	lsr	w3, w1, #16
    44a0:	strb	w3, [x2, #1]
    44a4:	lsr	w3, w1, #8
    44a8:	strb	w3, [x2, #2]
    44ac:	strb	w1, [x2, #3]
    44b0:	ldr	x1, [x0]
    44b4:	add	x1, x1, #0x4
    44b8:	str	x1, [x0]
    44bc:	ret
    44c0:	ldr	x1, [x0]
    44c4:	ldrb	w3, [x1]
    44c8:	ldrb	w2, [x1, #1]
    44cc:	lsl	w2, w2, #16
    44d0:	orr	w3, w2, w3, lsl #24
    44d4:	ldrb	w2, [x1, #2]
    44d8:	ldrb	w4, [x1, #3]
    44dc:	orr	w2, w4, w2, lsl #8
    44e0:	add	x1, x1, #0x4
    44e4:	str	x1, [x0]
    44e8:	orr	w0, w3, w2
    44ec:	ret
    44f0:	stp	x29, x30, [sp, #-32]!
    44f4:	mov	x29, sp
    44f8:	str	x19, [sp, #16]
    44fc:	mov	x19, x1
    4500:	bl	44c0 <srunner_has_tap@@Base+0x854>
    4504:	str	w0, [x19]
    4508:	ldr	x19, [sp, #16]
    450c:	ldp	x29, x30, [sp], #32
    4510:	ret
    4514:	stp	x29, x30, [sp, #-32]!
    4518:	mov	x29, sp
    451c:	str	x19, [sp, #16]
    4520:	mov	x19, x1
    4524:	bl	44c0 <srunner_has_tap@@Base+0x854>
    4528:	str	w0, [x19]
    452c:	ldr	x19, [sp, #16]
    4530:	ldp	x29, x30, [sp], #32
    4534:	ret
    4538:	stp	x29, x30, [sp, #-48]!
    453c:	mov	x29, sp
    4540:	stp	x19, x20, [sp, #16]
    4544:	mov	x19, x0
    4548:	mov	x20, x1
    454c:	mov	x0, #0x8                   	// #8
    4550:	bl	32f4 <_ck_assert_failed@@Base+0x274>
    4554:	str	x0, [sp, #40]
    4558:	str	x0, [x19]
    455c:	add	x19, sp, #0x28
    4560:	mov	w1, #0x3                   	// #3
    4564:	mov	x0, x19
    4568:	bl	4490 <srunner_has_tap@@Base+0x824>
    456c:	ldr	w1, [x20]
    4570:	mov	x0, x19
    4574:	bl	4490 <srunner_has_tap@@Base+0x824>
    4578:	mov	w0, #0x8                   	// #8
    457c:	ldp	x19, x20, [sp, #16]
    4580:	ldp	x29, x30, [sp], #48
    4584:	ret
    4588:	stp	x29, x30, [sp, #-48]!
    458c:	mov	x29, sp
    4590:	stp	x19, x20, [sp, #16]
    4594:	mov	x19, x0
    4598:	cbz	x1, 45f4 <srunner_has_tap@@Base+0x988>
    459c:	str	x21, [sp, #32]
    45a0:	mov	x21, x1
    45a4:	mov	x0, x1
    45a8:	bl	2150 <strlen@plt>
    45ac:	mov	x20, x0
    45b0:	mov	w1, w0
    45b4:	mov	x0, x19
    45b8:	bl	4490 <srunner_has_tap@@Base+0x824>
    45bc:	cmp	w20, #0x0
    45c0:	b.le	4600 <srunner_has_tap@@Base+0x994>
    45c4:	sxtw	x20, w20
    45c8:	mov	x2, x20
    45cc:	mov	x1, x21
    45d0:	ldr	x0, [x19]
    45d4:	bl	20e0 <memcpy@plt>
    45d8:	ldr	x0, [x19]
    45dc:	add	x20, x0, x20
    45e0:	str	x20, [x19]
    45e4:	ldr	x21, [sp, #32]
    45e8:	ldp	x19, x20, [sp, #16]
    45ec:	ldp	x29, x30, [sp], #48
    45f0:	ret
    45f4:	mov	w1, #0x0                   	// #0
    45f8:	bl	4490 <srunner_has_tap@@Base+0x824>
    45fc:	b	45e8 <srunner_has_tap@@Base+0x97c>
    4600:	ldr	x21, [sp, #32]
    4604:	b	45e8 <srunner_has_tap@@Base+0x97c>
    4608:	stp	x29, x30, [sp, #-48]!
    460c:	mov	x29, sp
    4610:	stp	x19, x20, [sp, #16]
    4614:	stp	x21, x22, [sp, #32]
    4618:	mov	x21, x0
    461c:	bl	44c0 <srunner_has_tap@@Base+0x854>
    4620:	cmp	w0, #0x0
    4624:	b.le	4670 <srunner_has_tap@@Base+0xa04>
    4628:	mov	w19, w0
    462c:	add	w0, w0, #0x1
    4630:	sxtw	x0, w0
    4634:	bl	32f4 <_ck_assert_failed@@Base+0x274>
    4638:	mov	x20, x0
    463c:	sxtw	x22, w19
    4640:	mov	x2, x22
    4644:	ldr	x1, [x21]
    4648:	bl	20e0 <memcpy@plt>
    464c:	strb	wzr, [x20, w19, sxtw]
    4650:	ldr	x2, [x21]
    4654:	add	x2, x2, x22
    4658:	str	x2, [x21]
    465c:	mov	x0, x20
    4660:	ldp	x19, x20, [sp, #16]
    4664:	ldp	x21, x22, [sp, #32]
    4668:	ldp	x29, x30, [sp], #48
    466c:	ret
    4670:	mov	x0, #0x1                   	// #1
    4674:	bl	32f4 <_ck_assert_failed@@Base+0x274>
    4678:	mov	x20, x0
    467c:	strb	wzr, [x0]
    4680:	b	465c <srunner_has_tap@@Base+0x9f0>
    4684:	stp	x29, x30, [sp, #-32]!
    4688:	mov	x29, sp
    468c:	stp	x19, x20, [sp, #16]
    4690:	mov	x20, x0
    4694:	mov	x19, x1
    4698:	bl	4608 <srunner_has_tap@@Base+0x99c>
    469c:	str	x0, [x19, #8]
    46a0:	mov	x0, x20
    46a4:	bl	44c0 <srunner_has_tap@@Base+0x854>
    46a8:	str	w0, [x19]
    46ac:	ldp	x19, x20, [sp, #16]
    46b0:	ldp	x29, x30, [sp], #32
    46b4:	ret
    46b8:	stp	x29, x30, [sp, #-32]!
    46bc:	mov	x29, sp
    46c0:	str	x19, [sp, #16]
    46c4:	mov	x19, x1
    46c8:	bl	4608 <srunner_has_tap@@Base+0x99c>
    46cc:	str	x0, [x19]
    46d0:	ldr	x19, [sp, #16]
    46d4:	ldp	x29, x30, [sp], #32
    46d8:	ret
    46dc:	stp	x29, x30, [sp, #-16]!
    46e0:	mov	x29, sp
    46e4:	bl	2500 <pthread_mutex_unlock@plt>
    46e8:	ldp	x29, x30, [sp], #16
    46ec:	ret
    46f0:	stp	x29, x30, [sp, #-16]!
    46f4:	mov	x29, sp
    46f8:	adrp	x0, 6000 <srunner_run_tagged@@Base+0x6a8>
    46fc:	add	x0, x0, #0xb48
    4700:	bl	24e0 <getenv@plt>
    4704:	cbz	x0, 4718 <srunner_has_tap@@Base+0xaac>
    4708:	mov	w2, #0xa                   	// #10
    470c:	mov	x1, #0x0                   	// #0
    4710:	bl	2140 <strtoul@plt>
    4714:	cbnz	x0, 472c <srunner_has_tap@@Base+0xac0>
    4718:	adrp	x0, 19000 <check_waitpid_and_exit@@Base+0x12d30>
    471c:	ldr	x0, [x0, #696]
    4720:	cmp	x0, #0x0
    4724:	mov	x1, #0x1000                	// #4096
    4728:	csel	x0, x0, x1, ne  // ne = any
    472c:	ldp	x29, x30, [sp], #16
    4730:	ret
    4734:	stp	x29, x30, [sp, #-32]!
    4738:	mov	x29, sp
    473c:	stp	x19, x20, [sp, #16]
    4740:	mov	x19, x0
    4744:	mov	x0, x2
    4748:	mov	x3, x19
    474c:	sxtw	x2, w1
    4750:	mov	x1, #0x1                   	// #1
    4754:	bl	23b0 <fread@plt>
    4758:	mov	x20, x0
    475c:	mov	x0, x19
    4760:	bl	2540 <ferror@plt>
    4764:	cbnz	w0, 4778 <srunner_has_tap@@Base+0xb0c>
    4768:	mov	w0, w20
    476c:	ldp	x19, x20, [sp, #16]
    4770:	ldp	x29, x30, [sp], #32
    4774:	ret
    4778:	mov	w2, #0x15a                 	// #346
    477c:	adrp	x1, 6000 <srunner_run_tagged@@Base+0x6a8>
    4780:	add	x1, x1, #0xb58
    4784:	adrp	x0, 6000 <srunner_run_tagged@@Base+0x6a8>
    4788:	add	x0, x0, #0xb68
    478c:	bl	31cc <_ck_assert_failed@@Base+0x14c>
    4790:	stp	x29, x30, [sp, #-64]!
    4794:	mov	x29, sp
    4798:	stp	x19, x20, [sp, #16]
    479c:	str	x21, [sp, #32]
    47a0:	mov	x19, x0
    47a4:	mov	x20, x1
    47a8:	ldr	x0, [x1]
    47ac:	cbz	x0, 47f8 <srunner_has_tap@@Base+0xb8c>
    47b0:	bl	2150 <strlen@plt>
    47b4:	add	w21, w0, #0x8
    47b8:	sxtw	x0, w21
    47bc:	bl	32f4 <_ck_assert_failed@@Base+0x274>
    47c0:	str	x0, [sp, #56]
    47c4:	str	x0, [x19]
    47c8:	add	x19, sp, #0x38
    47cc:	mov	w1, #0x1                   	// #1
    47d0:	mov	x0, x19
    47d4:	bl	4490 <srunner_has_tap@@Base+0x824>
    47d8:	ldr	x1, [x20]
    47dc:	mov	x0, x19
    47e0:	bl	4588 <srunner_has_tap@@Base+0x91c>
    47e4:	mov	w0, w21
    47e8:	ldp	x19, x20, [sp, #16]
    47ec:	ldr	x21, [sp, #32]
    47f0:	ldp	x29, x30, [sp], #64
    47f4:	ret
    47f8:	mov	w21, #0x8                   	// #8
    47fc:	b	47b8 <srunner_has_tap@@Base+0xb4c>
    4800:	stp	x29, x30, [sp, #-64]!
    4804:	mov	x29, sp
    4808:	stp	x19, x20, [sp, #16]
    480c:	str	x21, [sp, #32]
    4810:	mov	x19, x0
    4814:	mov	x20, x1
    4818:	ldr	x0, [x1, #8]
    481c:	cbz	x0, 4874 <srunner_has_tap@@Base+0xc08>
    4820:	bl	2150 <strlen@plt>
    4824:	add	w21, w0, #0xc
    4828:	sxtw	x0, w21
    482c:	bl	32f4 <_ck_assert_failed@@Base+0x274>
    4830:	str	x0, [sp, #56]
    4834:	str	x0, [x19]
    4838:	add	x19, sp, #0x38
    483c:	mov	w1, #0x2                   	// #2
    4840:	mov	x0, x19
    4844:	bl	4490 <srunner_has_tap@@Base+0x824>
    4848:	ldr	x1, [x20, #8]
    484c:	mov	x0, x19
    4850:	bl	4588 <srunner_has_tap@@Base+0x91c>
    4854:	ldr	w1, [x20]
    4858:	mov	x0, x19
    485c:	bl	4490 <srunner_has_tap@@Base+0x824>
    4860:	mov	w0, w21
    4864:	ldp	x19, x20, [sp, #16]
    4868:	ldr	x21, [sp, #32]
    486c:	ldp	x29, x30, [sp], #64
    4870:	ret
    4874:	mov	w21, #0xc                   	// #12
    4878:	b	4828 <srunner_has_tap@@Base+0xbbc>
    487c:	stp	x29, x30, [sp, #-48]!
    4880:	mov	x29, sp
    4884:	stp	x19, x20, [sp, #16]
    4888:	mov	x19, x0
    488c:	mov	x20, x1
    4890:	mov	x0, #0x8                   	// #8
    4894:	bl	32f4 <_ck_assert_failed@@Base+0x274>
    4898:	str	x0, [sp, #40]
    489c:	str	x0, [x19]
    48a0:	add	x19, sp, #0x28
    48a4:	mov	w1, #0x0                   	// #0
    48a8:	mov	x0, x19
    48ac:	bl	4490 <srunner_has_tap@@Base+0x824>
    48b0:	ldr	w1, [x20]
    48b4:	mov	x0, x19
    48b8:	bl	4490 <srunner_has_tap@@Base+0x824>
    48bc:	mov	w0, #0x8                   	// #8
    48c0:	ldp	x19, x20, [sp, #16]
    48c4:	ldp	x29, x30, [sp], #48
    48c8:	ret

00000000000048cc <check_set_max_msg_size@@Base>:
    48cc:	adrp	x1, 19000 <check_waitpid_and_exit@@Base+0x12d30>
    48d0:	str	x0, [x1, #696]
    48d4:	ret
    48d8:	mov	w3, w0
    48dc:	mov	x0, x1
    48e0:	cbz	x1, 492c <check_set_max_msg_size@@Base+0x60>
    48e4:	mov	x1, x2
    48e8:	cbz	x2, 4934 <check_set_max_msg_size@@Base+0x68>
    48ec:	stp	x29, x30, [sp, #-16]!
    48f0:	mov	x29, sp
    48f4:	cmp	w3, #0x3
    48f8:	b.hi	4914 <check_set_max_msg_size@@Base+0x48>  // b.pmore
    48fc:	adrp	x2, 18000 <check_waitpid_and_exit@@Base+0x11d30>
    4900:	add	x2, x2, #0xd28
    4904:	ldr	x2, [x2, w3, uxtw #3]
    4908:	blr	x2
    490c:	ldp	x29, x30, [sp], #16
    4910:	ret
    4914:	mov	w2, #0x7e                  	// #126
    4918:	adrp	x1, 6000 <srunner_run_tagged@@Base+0x6a8>
    491c:	add	x1, x1, #0xb58
    4920:	adrp	x0, 6000 <srunner_run_tagged@@Base+0x6a8>
    4924:	add	x0, x0, #0xb80
    4928:	bl	31cc <_ck_assert_failed@@Base+0x14c>
    492c:	mov	w0, #0xffffffff            	// #-1
    4930:	ret
    4934:	mov	w0, #0x0                   	// #0
    4938:	ret
    493c:	stp	x29, x30, [sp, #-64]!
    4940:	mov	x29, sp
    4944:	str	x0, [sp, #56]
    4948:	cbz	x0, 49c4 <check_set_max_msg_size@@Base+0xf8>
    494c:	stp	x19, x20, [sp, #16]
    4950:	str	x21, [sp, #32]
    4954:	mov	x21, x1
    4958:	mov	x20, x2
    495c:	mov	x19, x0
    4960:	add	x0, sp, #0x38
    4964:	bl	44c0 <srunner_has_tap@@Base+0x854>
    4968:	str	w0, [x20]
    496c:	cmp	w0, #0x3
    4970:	b.hi	49a8 <check_set_max_msg_size@@Base+0xdc>  // b.pmore
    4974:	adrp	x2, 18000 <check_waitpid_and_exit@@Base+0x11d30>
    4978:	add	x2, x2, #0xd28
    497c:	add	x2, x2, #0x20
    4980:	ldr	x2, [x2, w0, uxtw #3]
    4984:	mov	x1, x21
    4988:	add	x0, sp, #0x38
    498c:	blr	x2
    4990:	ldr	x0, [sp, #56]
    4994:	sub	w0, w0, w19
    4998:	ldp	x19, x20, [sp, #16]
    499c:	ldr	x21, [sp, #32]
    49a0:	ldp	x29, x30, [sp], #64
    49a4:	ret
    49a8:	mov	w3, w0
    49ac:	mov	w2, #0x8e                  	// #142
    49b0:	adrp	x1, 6000 <srunner_run_tagged@@Base+0x6a8>
    49b4:	add	x1, x1, #0xb58
    49b8:	adrp	x0, 6000 <srunner_run_tagged@@Base+0x6a8>
    49bc:	add	x0, x0, #0xb80
    49c0:	bl	31cc <_ck_assert_failed@@Base+0x14c>
    49c4:	mov	w0, #0xffffffff            	// #-1
    49c8:	b	49a0 <check_set_max_msg_size@@Base+0xd4>
    49cc:	stp	x29, x30, [sp, #-320]!
    49d0:	mov	x29, sp
    49d4:	stp	x19, x20, [sp, #16]
    49d8:	stp	x21, x22, [sp, #32]
    49dc:	str	x23, [sp, #48]
    49e0:	str	x0, [sp, #80]
    49e4:	mov	w0, w1
    49e8:	str	xzr, [sp, #312]
    49ec:	add	x1, sp, #0x138
    49f0:	bl	48d8 <check_set_max_msg_size@@Base+0xc>
    49f4:	sxtw	x0, w0
    49f8:	mov	x19, x0
    49fc:	str	x0, [sp, #72]
    4a00:	bl	46f0 <srunner_has_tap@@Base+0xa84>
    4a04:	cmp	x19, x0
    4a08:	b.hi	4aa4 <check_set_max_msg_size@@Base+0x1d8>  // b.pmore
    4a0c:	adrp	x0, 4000 <srunner_has_tap@@Base+0x394>
    4a10:	add	x0, x0, #0x6dc
    4a14:	str	x0, [sp, #88]
    4a18:	mov	w1, #0x0                   	// #0
    4a1c:	add	x0, sp, #0x60
    4a20:	bl	21a0 <__sigsetjmp@plt>
    4a24:	cbnz	w0, 4abc <check_set_max_msg_size@@Base+0x1f0>
    4a28:	add	x21, sp, #0x60
    4a2c:	mov	x0, x21
    4a30:	bl	2220 <__pthread_register_cancel@plt>
    4a34:	adrp	x19, 19000 <check_waitpid_and_exit@@Base+0x12d30>
    4a38:	add	x19, x19, #0x2b8
    4a3c:	add	x19, x19, #0x8
    4a40:	mov	x0, x19
    4a44:	bl	24f0 <pthread_mutex_lock@plt>
    4a48:	ldr	x23, [sp, #80]
    4a4c:	mov	x3, x23
    4a50:	ldr	x22, [sp, #72]
    4a54:	mov	x2, x22
    4a58:	mov	x1, #0x1                   	// #1
    4a5c:	ldr	x0, [sp, #312]
    4a60:	bl	2440 <fwrite@plt>
    4a64:	mov	x20, x0
    4a68:	mov	x0, x23
    4a6c:	bl	2460 <fflush@plt>
    4a70:	mov	x0, x19
    4a74:	bl	2500 <pthread_mutex_unlock@plt>
    4a78:	mov	x0, x21
    4a7c:	bl	22c0 <__pthread_unregister_cancel@plt>
    4a80:	cmp	x22, x20
    4a84:	b.ne	4ad8 <check_set_max_msg_size@@Base+0x20c>  // b.any
    4a88:	ldr	x0, [sp, #312]
    4a8c:	bl	23e0 <free@plt>
    4a90:	ldp	x19, x20, [sp, #16]
    4a94:	ldp	x21, x22, [sp, #32]
    4a98:	ldr	x23, [sp, #48]
    4a9c:	ldp	x29, x30, [sp], #320
    4aa0:	ret
    4aa4:	mov	w2, #0x146                 	// #326
    4aa8:	adrp	x1, 6000 <srunner_run_tagged@@Base+0x6a8>
    4aac:	add	x1, x1, #0xb58
    4ab0:	adrp	x0, 6000 <srunner_run_tagged@@Base+0x6a8>
    4ab4:	add	x0, x0, #0xb98
    4ab8:	bl	31cc <_ck_assert_failed@@Base+0x14c>
    4abc:	adrp	x0, 19000 <check_waitpid_and_exit@@Base+0x12d30>
    4ac0:	add	x0, x0, #0x2b8
    4ac4:	add	x0, x0, #0x8
    4ac8:	ldr	x1, [sp, #88]
    4acc:	blr	x1
    4ad0:	add	x0, sp, #0x60
    4ad4:	bl	22f0 <__pthread_unwind_next@plt>
    4ad8:	mov	w2, #0x14f                 	// #335
    4adc:	adrp	x1, 6000 <srunner_run_tagged@@Base+0x6a8>
    4ae0:	add	x1, x1, #0xb58
    4ae4:	adrp	x0, 6000 <srunner_run_tagged@@Base+0x6a8>
    4ae8:	add	x0, x0, #0xbb0
    4aec:	bl	31cc <_ck_assert_failed@@Base+0x14c>
    4af0:	stp	x29, x30, [sp, #-32]!
    4af4:	mov	x29, sp
    4af8:	str	x19, [sp, #16]
    4afc:	mov	x19, x0
    4b00:	ldr	x0, [x0, #8]
    4b04:	bl	23e0 <free@plt>
    4b08:	ldr	x0, [x19, #24]
    4b0c:	bl	23e0 <free@plt>
    4b10:	ldr	x0, [x19, #40]
    4b14:	bl	23e0 <free@plt>
    4b18:	mov	x0, x19
    4b1c:	bl	23e0 <free@plt>
    4b20:	ldr	x19, [sp, #16]
    4b24:	ldp	x29, x30, [sp], #32
    4b28:	ret
    4b2c:	stp	x29, x30, [sp, #-144]!
    4b30:	mov	x29, sp
    4b34:	stp	x19, x20, [sp, #16]
    4b38:	stp	x21, x22, [sp, #32]
    4b3c:	stp	x23, x24, [sp, #48]
    4b40:	stp	x25, x26, [sp, #64]
    4b44:	stp	x27, x28, [sp, #80]
    4b48:	mov	x19, x0
    4b4c:	str	x0, [sp, #104]
    4b50:	mov	x0, #0x38                  	// #56
    4b54:	bl	32f4 <_ck_assert_failed@@Base+0x274>
    4b58:	mov	x22, x0
    4b5c:	str	wzr, [x0]
    4b60:	str	wzr, [x0, #4]
    4b64:	str	xzr, [x0, #40]
    4b68:	mov	w0, #0xffffffff            	// #-1
    4b6c:	str	w0, [x22, #48]
    4b70:	str	w0, [x22, #32]
    4b74:	str	xzr, [x22, #24]
    4b78:	str	w0, [x22, #16]
    4b7c:	str	xzr, [x22, #8]
    4b80:	bl	46f0 <srunner_has_tap@@Base+0xa84>
    4b84:	lsl	x0, x0, #1
    4b88:	bl	32f4 <_ck_assert_failed@@Base+0x274>
    4b8c:	mov	x21, x0
    4b90:	bl	46f0 <srunner_has_tap@@Base+0xa84>
    4b94:	mov	x2, x21
    4b98:	lsl	w1, w0, #1
    4b9c:	mov	x0, x19
    4ba0:	bl	4734 <srunner_has_tap@@Base+0xac8>
    4ba4:	mov	w23, w0
    4ba8:	mov	w20, w0
    4bac:	mov	w28, #0xffffffff            	// #-1
    4bb0:	add	x25, sp, #0x7c
    4bb4:	add	x24, sp, #0x80
    4bb8:	b	4c08 <check_set_max_msg_size@@Base+0x33c>
    4bbc:	mov	w2, #0x16a                 	// #362
    4bc0:	adrp	x1, 6000 <srunner_run_tagged@@Base+0x6a8>
    4bc4:	add	x1, x1, #0xb58
    4bc8:	adrp	x0, 6000 <srunner_run_tagged@@Base+0x6a8>
    4bcc:	add	x0, x0, #0xbd0
    4bd0:	bl	31cc <_ck_assert_failed@@Base+0x14c>
    4bd4:	ldr	w26, [sp, #128]
    4bd8:	ldr	w0, [x22]
    4bdc:	cbnz	w0, 4c58 <check_set_max_msg_size@@Base+0x38c>
    4be0:	str	w26, [x22]
    4be4:	subs	w20, w20, w19
    4be8:	b.mi	4d14 <check_set_max_msg_size@@Base+0x448>  // b.first
    4bec:	sxtw	x26, w20
    4bf0:	mov	x2, x26
    4bf4:	add	x1, x21, w19, sxtw
    4bf8:	mov	x0, x21
    4bfc:	bl	20f0 <memmove@plt>
    4c00:	cmp	w23, #0x0
    4c04:	b.gt	4d2c <check_set_max_msg_size@@Base+0x460>
    4c08:	cmp	w20, #0x0
    4c0c:	b.le	4d48 <check_set_max_msg_size@@Base+0x47c>
    4c10:	mov	x2, x25
    4c14:	mov	x1, x24
    4c18:	mov	x0, x21
    4c1c:	bl	493c <check_set_max_msg_size@@Base+0x70>
    4c20:	mov	w19, w0
    4c24:	cmn	w0, #0x1
    4c28:	b.eq	4bbc <check_set_max_msg_size@@Base+0x2f0>  // b.none
    4c2c:	ldr	w3, [sp, #124]
    4c30:	cbz	w3, 4bd4 <check_set_max_msg_size@@Base+0x308>
    4c34:	cmp	w3, #0x2
    4c38:	b.eq	4c6c <check_set_max_msg_size@@Base+0x3a0>  // b.none
    4c3c:	cmp	w3, #0x1
    4c40:	b.eq	4ccc <check_set_max_msg_size@@Base+0x400>  // b.none
    4c44:	cmp	w3, #0x3
    4c48:	b.ne	4cf8 <check_set_max_msg_size@@Base+0x42c>  // b.any
    4c4c:	ldr	w0, [sp, #128]
    4c50:	str	w0, [x22, #48]
    4c54:	b	4be4 <check_set_max_msg_size@@Base+0x318>
    4c58:	ldr	x0, [x22, #8]
    4c5c:	bl	23e0 <free@plt>
    4c60:	str	w28, [x22, #16]
    4c64:	str	xzr, [x22, #8]
    4c68:	b	4be0 <check_set_max_msg_size@@Base+0x314>
    4c6c:	ldr	w0, [x22, #4]
    4c70:	cbz	w0, 4c80 <check_set_max_msg_size@@Base+0x3b4>
    4c74:	ldr	x0, [sp, #136]
    4c78:	bl	23e0 <free@plt>
    4c7c:	b	4be4 <check_set_max_msg_size@@Base+0x318>
    4c80:	ldr	x26, [sp, #136]
    4c84:	ldr	w27, [sp, #128]
    4c88:	ldr	w0, [x22]
    4c8c:	cmp	w0, #0x2
    4c90:	b.eq	4cb0 <check_set_max_msg_size@@Base+0x3e4>  // b.none
    4c94:	ldr	x0, [x22, #8]
    4c98:	bl	23e0 <free@plt>
    4c9c:	str	w27, [x22, #16]
    4ca0:	mov	x0, x26
    4ca4:	bl	2300 <strdup@plt>
    4ca8:	str	x0, [x22, #8]
    4cac:	b	4c74 <check_set_max_msg_size@@Base+0x3a8>
    4cb0:	ldr	x0, [x22, #24]
    4cb4:	bl	23e0 <free@plt>
    4cb8:	str	w27, [x22, #32]
    4cbc:	mov	x0, x26
    4cc0:	bl	2300 <strdup@plt>
    4cc4:	str	x0, [x22, #24]
    4cc8:	b	4c74 <check_set_max_msg_size@@Base+0x3a8>
    4ccc:	ldr	x0, [x22, #40]
    4cd0:	cbz	x0, 4ce0 <check_set_max_msg_size@@Base+0x414>
    4cd4:	ldr	x0, [sp, #128]
    4cd8:	bl	23e0 <free@plt>
    4cdc:	b	4be4 <check_set_max_msg_size@@Base+0x318>
    4ce0:	ldr	x0, [sp, #128]
    4ce4:	bl	2300 <strdup@plt>
    4ce8:	str	x0, [x22, #40]
    4cec:	ldr	w0, [x22]
    4cf0:	str	w0, [x22, #4]
    4cf4:	b	4cd4 <check_set_max_msg_size@@Base+0x408>
    4cf8:	b.ls	4be4 <check_set_max_msg_size@@Base+0x318>  // b.plast
    4cfc:	mov	w2, #0x194                 	// #404
    4d00:	adrp	x1, 6000 <srunner_run_tagged@@Base+0x6a8>
    4d04:	add	x1, x1, #0xb58
    4d08:	adrp	x0, 6000 <srunner_run_tagged@@Base+0x6a8>
    4d0c:	add	x0, x0, #0xb80
    4d10:	bl	31cc <_ck_assert_failed@@Base+0x14c>
    4d14:	mov	w2, #0x1e6                 	// #486
    4d18:	adrp	x1, 6000 <srunner_run_tagged@@Base+0x6a8>
    4d1c:	add	x1, x1, #0xb58
    4d20:	adrp	x0, 6000 <srunner_run_tagged@@Base+0x6a8>
    4d24:	add	x0, x0, #0xbe8
    4d28:	bl	31cc <_ck_assert_failed@@Base+0x14c>
    4d2c:	add	x2, x21, x26
    4d30:	mov	w1, w19
    4d34:	ldr	x0, [sp, #104]
    4d38:	bl	4734 <srunner_has_tap@@Base+0xac8>
    4d3c:	mov	w23, w0
    4d40:	add	w20, w20, w0
    4d44:	b	4c08 <check_set_max_msg_size@@Base+0x33c>
    4d48:	mov	x0, x21
    4d4c:	bl	23e0 <free@plt>
    4d50:	ldr	w0, [x22]
    4d54:	cbz	w0, 4d78 <check_set_max_msg_size@@Base+0x4ac>
    4d58:	mov	x0, x22
    4d5c:	ldp	x19, x20, [sp, #16]
    4d60:	ldp	x21, x22, [sp, #32]
    4d64:	ldp	x23, x24, [sp, #48]
    4d68:	ldp	x25, x26, [sp, #64]
    4d6c:	ldp	x27, x28, [sp, #80]
    4d70:	ldp	x29, x30, [sp], #144
    4d74:	ret
    4d78:	mov	x0, x22
    4d7c:	bl	23e0 <free@plt>
    4d80:	mov	x22, #0x0                   	// #0
    4d84:	b	4d58 <check_set_max_msg_size@@Base+0x48c>
    4d88:	ldrb	w2, [x1]
    4d8c:	cbz	w2, 4efc <check_set_max_msg_size@@Base+0x630>
    4d90:	stp	x29, x30, [sp, #-64]!
    4d94:	mov	x29, sp
    4d98:	stp	x19, x20, [sp, #16]
    4d9c:	stp	x21, x22, [sp, #32]
    4da0:	str	x23, [sp, #48]
    4da4:	mov	x20, x0
    4da8:	mov	x19, x1
    4dac:	adrp	x21, 6000 <srunner_run_tagged@@Base+0x6a8>
    4db0:	add	x21, x21, #0xc08
    4db4:	mov	x23, #0x6                   	// #6
    4db8:	adrp	x22, 6000 <srunner_run_tagged@@Base+0x6a8>
    4dbc:	add	x22, x22, #0xc30
    4dc0:	b	4e0c <check_set_max_msg_size@@Base+0x540>
    4dc4:	cmp	w2, #0x22
    4dc8:	b.eq	4df0 <check_set_max_msg_size@@Base+0x524>  // b.none
    4dcc:	cmp	w2, #0x26
    4dd0:	b.ne	4e04 <check_set_max_msg_size@@Base+0x538>  // b.any
    4dd4:	mov	x3, x20
    4dd8:	mov	x2, #0x5                   	// #5
    4ddc:	mov	x1, #0x1                   	// #1
    4de0:	adrp	x0, 6000 <srunner_run_tagged@@Base+0x6a8>
    4de4:	add	x0, x0, #0xc28
    4de8:	bl	2440 <fwrite@plt>
    4dec:	b	4e04 <check_set_max_msg_size@@Base+0x538>
    4df0:	mov	x3, x20
    4df4:	mov	x2, x23
    4df8:	mov	x1, #0x1                   	// #1
    4dfc:	mov	x0, x21
    4e00:	bl	2440 <fwrite@plt>
    4e04:	ldrb	w2, [x19, #1]!
    4e08:	cbz	w2, 4ee8 <check_set_max_msg_size@@Base+0x61c>
    4e0c:	cmp	w2, #0x22
    4e10:	b.eq	4df0 <check_set_max_msg_size@@Base+0x524>  // b.none
    4e14:	and	w3, w2, #0xfffffffd
    4e18:	and	w3, w3, #0xff
    4e1c:	sub	w1, w2, #0x26
    4e20:	and	w1, w1, #0xff
    4e24:	cmp	w3, #0x3c
    4e28:	ccmp	w1, #0x1, #0x0, ne  // ne = any
    4e2c:	b.hi	4ea0 <check_set_max_msg_size@@Base+0x5d4>  // b.pmore
    4e30:	cmp	w2, #0x27
    4e34:	b.eq	4e68 <check_set_max_msg_size@@Base+0x59c>  // b.none
    4e38:	b.ls	4dc4 <check_set_max_msg_size@@Base+0x4f8>  // b.plast
    4e3c:	cmp	w2, #0x3c
    4e40:	b.eq	4e84 <check_set_max_msg_size@@Base+0x5b8>  // b.none
    4e44:	cmp	w2, #0x3e
    4e48:	b.ne	4e04 <check_set_max_msg_size@@Base+0x538>  // b.any
    4e4c:	mov	x3, x20
    4e50:	mov	x2, #0x4                   	// #4
    4e54:	mov	x1, #0x1                   	// #1
    4e58:	adrp	x0, 6000 <srunner_run_tagged@@Base+0x6a8>
    4e5c:	add	x0, x0, #0xc20
    4e60:	bl	2440 <fwrite@plt>
    4e64:	b	4e04 <check_set_max_msg_size@@Base+0x538>
    4e68:	mov	x3, x20
    4e6c:	mov	x2, x23
    4e70:	mov	x1, #0x1                   	// #1
    4e74:	adrp	x0, 6000 <srunner_run_tagged@@Base+0x6a8>
    4e78:	add	x0, x0, #0xc10
    4e7c:	bl	2440 <fwrite@plt>
    4e80:	b	4e04 <check_set_max_msg_size@@Base+0x538>
    4e84:	mov	x3, x20
    4e88:	mov	x2, #0x4                   	// #4
    4e8c:	mov	x1, #0x1                   	// #1
    4e90:	adrp	x0, 6000 <srunner_run_tagged@@Base+0x6a8>
    4e94:	add	x0, x0, #0xc18
    4e98:	bl	2440 <fwrite@plt>
    4e9c:	b	4e04 <check_set_max_msg_size@@Base+0x538>
    4ea0:	sub	w0, w2, #0x20
    4ea4:	and	w0, w0, #0xff
    4ea8:	cmp	w0, #0x5e
    4eac:	b.ls	4ed8 <check_set_max_msg_size@@Base+0x60c>  // b.plast
    4eb0:	sub	w0, w2, #0x9
    4eb4:	and	w0, w0, #0xff
    4eb8:	cmp	w2, #0xd
    4ebc:	ccmp	w2, #0x1f, #0x2, ne  // ne = any
    4ec0:	ccmp	w0, #0x1, #0x0, ls  // ls = plast
    4ec4:	b.hi	4e04 <check_set_max_msg_size@@Base+0x538>  // b.pmore
    4ec8:	mov	x1, x22
    4ecc:	mov	x0, x20
    4ed0:	bl	2530 <fprintf@plt>
    4ed4:	b	4e04 <check_set_max_msg_size@@Base+0x538>
    4ed8:	mov	x1, x20
    4edc:	mov	w0, w2
    4ee0:	bl	21e0 <fputc@plt>
    4ee4:	b	4e04 <check_set_max_msg_size@@Base+0x538>
    4ee8:	ldp	x19, x20, [sp, #16]
    4eec:	ldp	x21, x22, [sp, #32]
    4ef0:	ldr	x23, [sp, #48]
    4ef4:	ldp	x29, x30, [sp], #64
    4ef8:	ret
    4efc:	ret
    4f00:	stp	x29, x30, [sp, #-80]!
    4f04:	mov	x29, sp
    4f08:	stp	x19, x20, [sp, #16]
    4f0c:	stp	x21, x22, [sp, #32]
    4f10:	str	x23, [sp, #48]
    4f14:	mov	x19, x0
    4f18:	mov	x20, x1
    4f1c:	ldr	w0, [x1]
    4f20:	cmp	w0, #0x2
    4f24:	b.eq	50ec <check_set_max_msg_size@@Base+0x820>  // b.none
    4f28:	cmp	w0, #0x3
    4f2c:	b.ne	4f4c <check_set_max_msg_size@@Base+0x680>  // b.any
    4f30:	adrp	x0, 6000 <srunner_run_tagged@@Base+0x6a8>
    4f34:	add	x0, x0, #0xc38
    4f38:	ldr	w1, [x0]
    4f3c:	str	w1, [sp, #64]
    4f40:	ldrh	w0, [x0, #4]
    4f44:	strh	w0, [sp, #68]
    4f48:	b	4f68 <check_set_max_msg_size@@Base+0x69c>
    4f4c:	cmp	w0, #0x1
    4f50:	b.ne	5104 <check_set_max_msg_size@@Base+0x838>  // b.any
    4f54:	mov	x0, #0x7573                	// #30067
    4f58:	movk	x0, #0x6363, lsl #16
    4f5c:	movk	x0, #0x7365, lsl #32
    4f60:	movk	x0, #0x73, lsl #48
    4f64:	str	x0, [sp, #64]
    4f68:	ldr	x21, [x20, #8]
    4f6c:	cbz	x21, 5174 <check_set_max_msg_size@@Base+0x8a8>
    4f70:	mov	w1, #0x2f                  	// #47
    4f74:	mov	x0, x21
    4f78:	bl	2330 <strrchr@plt>
    4f7c:	mov	x23, x0
    4f80:	cbz	x0, 5108 <check_set_max_msg_size@@Base+0x83c>
    4f84:	mov	x0, x21
    4f88:	bl	2300 <strdup@plt>
    4f8c:	mov	x22, x0
    4f90:	sub	x21, x23, x21
    4f94:	strb	wzr, [x0, x21]
    4f98:	add	x21, x23, #0x1
    4f9c:	add	x2, sp, #0x40
    4fa0:	adrp	x1, 6000 <srunner_run_tagged@@Base+0x6a8>
    4fa4:	add	x1, x1, #0xc48
    4fa8:	mov	x0, x19
    4fac:	bl	2530 <fprintf@plt>
    4fb0:	cbz	x22, 51b0 <check_set_max_msg_size@@Base+0x8e4>
    4fb4:	mov	x2, x22
    4fb8:	adrp	x1, 6000 <srunner_run_tagged@@Base+0x6a8>
    4fbc:	add	x1, x1, #0xd38
    4fc0:	mov	x0, x19
    4fc4:	bl	2530 <fprintf@plt>
    4fc8:	ldr	w3, [x20, #16]
    4fcc:	mov	x2, x21
    4fd0:	adrp	x1, 6000 <srunner_run_tagged@@Base+0x6a8>
    4fd4:	add	x1, x1, #0xc60
    4fd8:	mov	x0, x19
    4fdc:	bl	2530 <fprintf@plt>
    4fe0:	ldr	x2, [x20, #40]
    4fe4:	adrp	x1, 6000 <srunner_run_tagged@@Base+0x6a8>
    4fe8:	add	x1, x1, #0xc78
    4fec:	mov	x0, x19
    4ff0:	bl	2530 <fprintf@plt>
    4ff4:	ldr	w2, [x20, #20]
    4ff8:	adrp	x1, 6000 <srunner_run_tagged@@Base+0x6a8>
    4ffc:	add	x1, x1, #0xc90
    5000:	mov	x0, x19
    5004:	bl	2530 <fprintf@plt>
    5008:	ldr	w3, [x20, #24]
    500c:	tbnz	w3, #31, 5168 <check_set_max_msg_size@@Base+0x89c>
    5010:	mov	w2, #0xde83                	// #56963
    5014:	movk	w2, #0x431b, lsl #16
    5018:	smull	x2, w3, w2
    501c:	asr	x2, x2, #50
    5020:	sub	w2, w2, w3, asr #31
    5024:	mov	w0, #0x4240                	// #16960
    5028:	movk	w0, #0xf, lsl #16
    502c:	msub	w3, w2, w0, w3
    5030:	adrp	x1, 6000 <srunner_run_tagged@@Base+0x6a8>
    5034:	add	x1, x1, #0xcb8
    5038:	mov	x0, x19
    503c:	bl	2530 <fprintf@plt>
    5040:	mov	x3, x19
    5044:	mov	x2, #0x13                  	// #19
    5048:	mov	x1, #0x1                   	// #1
    504c:	adrp	x0, 6000 <srunner_run_tagged@@Base+0x6a8>
    5050:	add	x0, x0, #0xce0
    5054:	bl	2440 <fwrite@plt>
    5058:	ldr	x1, [x20, #32]
    505c:	mov	x0, x19
    5060:	bl	4d88 <check_set_max_msg_size@@Base+0x4bc>
    5064:	mov	x3, x19
    5068:	mov	x2, #0xf                   	// #15
    506c:	mov	x1, #0x1                   	// #1
    5070:	adrp	x0, 6000 <srunner_run_tagged@@Base+0x6a8>
    5074:	add	x0, x0, #0xcf8
    5078:	bl	2440 <fwrite@plt>
    507c:	mov	x3, x19
    5080:	mov	x2, #0xf                   	// #15
    5084:	mov	x1, #0x1                   	// #1
    5088:	adrp	x0, 6000 <srunner_run_tagged@@Base+0x6a8>
    508c:	add	x0, x0, #0xd08
    5090:	bl	2440 <fwrite@plt>
    5094:	ldr	x1, [x20, #48]
    5098:	mov	x0, x19
    509c:	bl	4d88 <check_set_max_msg_size@@Base+0x4bc>
    50a0:	mov	x3, x19
    50a4:	mov	x2, #0xb                   	// #11
    50a8:	mov	x1, #0x1                   	// #1
    50ac:	adrp	x0, 6000 <srunner_run_tagged@@Base+0x6a8>
    50b0:	add	x0, x0, #0xd18
    50b4:	bl	2440 <fwrite@plt>
    50b8:	mov	x3, x19
    50bc:	mov	x2, #0xc                   	// #12
    50c0:	mov	x1, #0x1                   	// #1
    50c4:	adrp	x0, 6000 <srunner_run_tagged@@Base+0x6a8>
    50c8:	add	x0, x0, #0xd28
    50cc:	bl	2440 <fwrite@plt>
    50d0:	mov	x0, x22
    50d4:	bl	23e0 <free@plt>
    50d8:	ldp	x19, x20, [sp, #16]
    50dc:	ldp	x21, x22, [sp, #32]
    50e0:	ldr	x23, [sp, #48]
    50e4:	ldp	x29, x30, [sp], #80
    50e8:	ret
    50ec:	mov	x0, #0x6166                	// #24934
    50f0:	movk	x0, #0x6c69, lsl #16
    50f4:	movk	x0, #0x7275, lsl #32
    50f8:	movk	x0, #0x65, lsl #48
    50fc:	str	x0, [sp, #64]
    5100:	b	4f68 <check_set_max_msg_size@@Base+0x69c>
    5104:	bl	2350 <abort@plt>
    5108:	mov	w1, #0x5c                  	// #92
    510c:	mov	x0, x21
    5110:	bl	2330 <strrchr@plt>
    5114:	mov	x23, x0
    5118:	cbnz	x0, 4f84 <check_set_max_msg_size@@Base+0x6b8>
    511c:	adrp	x0, 6000 <srunner_run_tagged@@Base+0x6a8>
    5120:	add	x0, x0, #0xc40
    5124:	bl	2300 <strdup@plt>
    5128:	mov	x22, x0
    512c:	add	x2, sp, #0x40
    5130:	adrp	x1, 6000 <srunner_run_tagged@@Base+0x6a8>
    5134:	add	x1, x1, #0xc48
    5138:	mov	x0, x19
    513c:	bl	2530 <fprintf@plt>
    5140:	cbz	x22, 515c <check_set_max_msg_size@@Base+0x890>
    5144:	mov	x2, x22
    5148:	adrp	x1, 6000 <srunner_run_tagged@@Base+0x6a8>
    514c:	add	x1, x1, #0xd38
    5150:	mov	x0, x19
    5154:	bl	2530 <fprintf@plt>
    5158:	b	4fc8 <check_set_max_msg_size@@Base+0x6fc>
    515c:	adrp	x2, 6000 <srunner_run_tagged@@Base+0x6a8>
    5160:	add	x2, x2, #0xcb0
    5164:	b	4fb8 <check_set_max_msg_size@@Base+0x6ec>
    5168:	mov	w2, #0xffffffff            	// #-1
    516c:	mov	w3, #0x0                   	// #0
    5170:	b	5030 <check_set_max_msg_size@@Base+0x764>
    5174:	add	x2, sp, #0x40
    5178:	adrp	x1, 6000 <srunner_run_tagged@@Base+0x6a8>
    517c:	add	x1, x1, #0xc48
    5180:	mov	x0, x19
    5184:	bl	2530 <fprintf@plt>
    5188:	adrp	x23, 6000 <srunner_run_tagged@@Base+0x6a8>
    518c:	add	x23, x23, #0xcb0
    5190:	mov	x2, x23
    5194:	adrp	x1, 6000 <srunner_run_tagged@@Base+0x6a8>
    5198:	add	x1, x1, #0xd38
    519c:	mov	x0, x19
    51a0:	bl	2530 <fprintf@plt>
    51a4:	mov	x22, x21
    51a8:	mov	x21, x23
    51ac:	b	4fc8 <check_set_max_msg_size@@Base+0x6fc>
    51b0:	adrp	x2, 6000 <srunner_run_tagged@@Base+0x6a8>
    51b4:	add	x2, x2, #0xcb0
    51b8:	b	4fb8 <check_set_max_msg_size@@Base+0x6ec>
    51bc:	stp	x29, x30, [sp, #-32]!
    51c0:	mov	x29, sp
    51c4:	adrp	x0, 6000 <srunner_run_tagged@@Base+0x6a8>
    51c8:	add	x0, x0, #0xd50
    51cc:	bl	24e0 <getenv@plt>
    51d0:	cbz	x0, 5234 <check_set_max_msg_size@@Base+0x968>
    51d4:	str	x19, [sp, #16]
    51d8:	mov	x19, x0
    51dc:	adrp	x1, 6000 <srunner_run_tagged@@Base+0x6a8>
    51e0:	add	x1, x1, #0xd60
    51e4:	bl	2380 <strcmp@plt>
    51e8:	mov	w1, #0x0                   	// #0
    51ec:	cbz	w0, 523c <check_set_max_msg_size@@Base+0x970>
    51f0:	adrp	x1, 6000 <srunner_run_tagged@@Base+0x6a8>
    51f4:	add	x1, x1, #0xd68
    51f8:	mov	x0, x19
    51fc:	bl	2380 <strcmp@plt>
    5200:	mov	w1, #0x1                   	// #1
    5204:	cbz	w0, 5244 <check_set_max_msg_size@@Base+0x978>
    5208:	adrp	x1, 6000 <srunner_run_tagged@@Base+0x6a8>
    520c:	add	x1, x1, #0xd70
    5210:	mov	x0, x19
    5214:	bl	2380 <strcmp@plt>
    5218:	cmp	w0, #0x0
    521c:	cset	w1, eq  // eq = none
    5220:	add	w1, w1, #0x2
    5224:	ldr	x19, [sp, #16]
    5228:	mov	w0, w1
    522c:	ldp	x29, x30, [sp], #32
    5230:	ret
    5234:	mov	w1, #0x2                   	// #2
    5238:	b	5228 <check_set_max_msg_size@@Base+0x95c>
    523c:	ldr	x19, [sp, #16]
    5240:	b	5228 <check_set_max_msg_size@@Base+0x95c>
    5244:	ldr	x19, [sp, #16]
    5248:	b	5228 <check_set_max_msg_size@@Base+0x95c>
    524c:	stp	x29, x30, [sp, #-32]!
    5250:	mov	x29, sp
    5254:	stp	x19, x20, [sp, #16]
    5258:	mov	x20, x0
    525c:	mov	x19, x1
    5260:	cmp	w2, #0x4
    5264:	b.eq	528c <check_set_max_msg_size@@Base+0x9c0>  // b.none
    5268:	cmp	w2, #0x2
    526c:	b.hi	5298 <check_set_max_msg_size@@Base+0x9cc>  // b.pmore
    5270:	ldr	w0, [x19]
    5274:	cmp	w0, #0x1
    5278:	ccmp	w2, #0x2, #0x0, ne  // ne = any
    527c:	b.eq	5298 <check_set_max_msg_size@@Base+0x9cc>  // b.none
    5280:	ldp	x19, x20, [sp, #16]
    5284:	ldp	x29, x30, [sp], #32
    5288:	ret
    528c:	bl	51bc <check_set_max_msg_size@@Base+0x8f0>
    5290:	mov	w2, w0
    5294:	b	5268 <check_set_max_msg_size@@Base+0x99c>
    5298:	mov	x0, x19
    529c:	bl	6424 <check_waitpid_and_exit@@Base+0x154>
    52a0:	mov	x19, x0
    52a4:	mov	x2, x0
    52a8:	adrp	x1, 6000 <srunner_run_tagged@@Base+0x6a8>
    52ac:	add	x1, x1, #0xd78
    52b0:	mov	x0, x20
    52b4:	bl	2530 <fprintf@plt>
    52b8:	mov	x0, x19
    52bc:	bl	23e0 <free@plt>
    52c0:	b	5280 <check_set_max_msg_size@@Base+0x9b4>
    52c4:	stp	x29, x30, [sp, #-48]!
    52c8:	mov	x29, sp
    52cc:	stp	x19, x20, [sp, #16]
    52d0:	stp	x21, x22, [sp, #32]
    52d4:	mov	x21, x0
    52d8:	mov	x20, x1
    52dc:	mov	w19, w2
    52e0:	cmp	w2, #0x4
    52e4:	b.eq	5328 <check_set_max_msg_size@@Base+0xa5c>  // b.none
    52e8:	cbnz	w19, 5334 <check_set_max_msg_size@@Base+0xa68>
    52ec:	ldr	x20, [x20, #16]
    52f0:	mov	x0, x20
    52f4:	bl	34e4 <_ck_assert_failed@@Base+0x464>
    52f8:	mov	x0, x20
    52fc:	bl	34c0 <_ck_assert_failed@@Base+0x440>
    5300:	cbnz	w0, 5360 <check_set_max_msg_size@@Base+0xa94>
    5304:	mov	x0, x20
    5308:	bl	352c <_ck_assert_failed@@Base+0x4ac>
    530c:	mov	w2, w19
    5310:	mov	x1, x0
    5314:	mov	x0, x21
    5318:	bl	524c <check_set_max_msg_size@@Base+0x980>
    531c:	mov	x0, x20
    5320:	bl	3564 <_ck_assert_failed@@Base+0x4e4>
    5324:	b	52f8 <check_set_max_msg_size@@Base+0xa2c>
    5328:	bl	51bc <check_set_max_msg_size@@Base+0x8f0>
    532c:	mov	w19, w0
    5330:	b	52e8 <check_set_max_msg_size@@Base+0xa1c>
    5334:	mov	x0, x20
    5338:	bl	6514 <check_waitpid_and_exit@@Base+0x244>
    533c:	mov	x22, x0
    5340:	mov	x2, x0
    5344:	adrp	x1, 6000 <srunner_run_tagged@@Base+0x6a8>
    5348:	add	x1, x1, #0xd78
    534c:	mov	x0, x21
    5350:	bl	2530 <fprintf@plt>
    5354:	mov	x0, x22
    5358:	bl	23e0 <free@plt>
    535c:	b	52ec <check_set_max_msg_size@@Base+0xa20>
    5360:	ldp	x19, x20, [sp, #16]
    5364:	ldp	x21, x22, [sp, #32]
    5368:	ldp	x29, x30, [sp], #48
    536c:	ret

0000000000005370 <srunner_print@@Base>:
    5370:	stp	x29, x30, [sp, #-16]!
    5374:	mov	x29, sp
    5378:	mov	w2, w1
    537c:	mov	x1, x0
    5380:	adrp	x0, 18000 <check_waitpid_and_exit@@Base+0x11d30>
    5384:	ldr	x0, [x0, #4016]
    5388:	ldr	x0, [x0]
    538c:	bl	52c4 <check_set_max_msg_size@@Base+0x9f8>
    5390:	ldp	x29, x30, [sp], #16
    5394:	ret
    5398:	and	w3, w0, #0x7f
    539c:	add	w2, w3, #0x1
    53a0:	sbfx	x2, x2, #1, #7
    53a4:	cmp	w2, #0x0
    53a8:	ccmp	w3, w1, #0x4, gt
    53ac:	b.ne	53c0 <srunner_print@@Base+0x50>  // b.any
    53b0:	tst	x0, #0xff00
    53b4:	ccmp	w3, #0x0, #0x0, ne  // ne = any
    53b8:	cset	w0, eq  // eq = none
    53bc:	ret
    53c0:	mov	w0, #0x1                   	// #1
    53c4:	b	53bc <srunner_print@@Base+0x4c>
    53c8:	stp	x29, x30, [sp, #-32]!
    53cc:	mov	x29, sp
    53d0:	cmp	w0, #0xe
    53d4:	b.eq	540c <srunner_print@@Base+0x9c>  // b.none
    53d8:	str	x19, [sp, #16]
    53dc:	mov	w19, w0
    53e0:	cmp	w0, #0xf
    53e4:	b.eq	5450 <srunner_print@@Base+0xe0>  // b.none
    53e8:	cmp	w0, #0x2
    53ec:	b.eq	5430 <srunner_print@@Base+0xc0>  // b.none
    53f0:	mov	w3, w0
    53f4:	mov	w2, #0x8e                  	// #142
    53f8:	adrp	x1, 6000 <srunner_run_tagged@@Base+0x6a8>
    53fc:	add	x1, x1, #0xd80
    5400:	adrp	x0, 6000 <srunner_run_tagged@@Base+0x6a8>
    5404:	add	x0, x0, #0xd90
    5408:	bl	31cc <_ck_assert_failed@@Base+0x14c>
    540c:	adrp	x0, 19000 <check_waitpid_and_exit@@Base+0x12d30>
    5410:	add	x2, x0, #0x2f0
    5414:	mov	w1, #0x1                   	// #1
    5418:	str	w1, [x0, #752]
    541c:	mov	w1, #0x9                   	// #9
    5420:	ldr	w0, [x2, #4]
    5424:	bl	2430 <killpg@plt>
    5428:	ldp	x29, x30, [sp], #32
    542c:	ret
    5430:	mov	x2, #0x0                   	// #0
    5434:	adrp	x1, 19000 <check_waitpid_and_exit@@Base+0x12d30>
    5438:	add	x1, x1, #0x2f0
    543c:	add	x1, x1, #0x8
    5440:	mov	w0, #0x2                   	// #2
    5444:	bl	2320 <sigaction@plt>
    5448:	mov	w1, #0x9                   	// #9
    544c:	b	546c <srunner_print@@Base+0xfc>
    5450:	mov	x2, #0x0                   	// #0
    5454:	adrp	x1, 19000 <check_waitpid_and_exit@@Base+0x12d30>
    5458:	add	x1, x1, #0x2f0
    545c:	add	x1, x1, #0xa0
    5460:	mov	w0, #0xf                   	// #15
    5464:	bl	2320 <sigaction@plt>
    5468:	mov	w1, w19
    546c:	adrp	x0, 19000 <check_waitpid_and_exit@@Base+0x12d30>
    5470:	ldr	w0, [x0, #756]
    5474:	bl	2430 <killpg@plt>
    5478:	bl	23f0 <getpgrp@plt>
    547c:	mov	w1, w19
    5480:	bl	2430 <killpg@plt>
    5484:	ldr	x19, [sp, #16]
    5488:	b	5428 <srunner_print@@Base+0xb8>
    548c:	stp	x29, x30, [sp, #-48]!
    5490:	mov	x29, sp
    5494:	str	x0, [sp, #16]
    5498:	str	w1, [sp, #28]
    549c:	bl	34e4 <_ck_assert_failed@@Base+0x464>
    54a0:	adrp	x0, 18000 <check_waitpid_and_exit@@Base+0x11d30>
    54a4:	ldr	x0, [x0, #4056]
    54a8:	str	x0, [sp, #32]
    54ac:	ldr	x0, [sp, #16]
    54b0:	bl	34c0 <_ck_assert_failed@@Base+0x440>
    54b4:	cbz	w0, 54c0 <srunner_print@@Base+0x150>
    54b8:	ldp	x29, x30, [sp], #48
    54bc:	ret
    54c0:	ldr	x0, [sp, #16]
    54c4:	bl	352c <_ck_assert_failed@@Base+0x4ac>
    54c8:	str	x0, [sp, #40]
    54cc:	mov	w0, #0x3                   	// #3
    54d0:	bl	41a4 <srunner_has_tap@@Base+0x538>
    54d4:	ldr	w0, [sp, #28]
    54d8:	cmp	w0, #0x2
    54dc:	b.eq	54f8 <srunner_print@@Base+0x188>  // b.none
    54e0:	ldr	x0, [sp, #40]
    54e4:	ldr	x0, [x0, #8]
    54e8:	blr	x0
    54ec:	ldr	x0, [sp, #16]
    54f0:	bl	3564 <_ck_assert_failed@@Base+0x4e4>
    54f4:	b	54ac <srunner_print@@Base+0x13c>
    54f8:	ldr	x0, [sp, #32]
    54fc:	bl	2170 <_setjmp@plt>
    5500:	cbnz	w0, 54b8 <srunner_print@@Base+0x148>
    5504:	ldr	x0, [sp, #40]
    5508:	ldr	x0, [x0, #8]
    550c:	blr	x0
    5510:	b	54ec <srunner_print@@Base+0x17c>
    5514:	stp	x29, x30, [sp, #-64]!
    5518:	mov	x29, sp
    551c:	stp	x19, x20, [sp, #16]
    5520:	stp	x21, x22, [sp, #32]
    5524:	str	x23, [sp, #48]
    5528:	mov	x23, x0
    552c:	mov	x22, x1
    5530:	mov	w21, w2
    5534:	mov	w20, w3
    5538:	mov	w0, #0x0                   	// #0
    553c:	bl	4310 <srunner_has_tap@@Base+0x6a4>
    5540:	cbz	x0, 5580 <srunner_print@@Base+0x210>
    5544:	mov	x19, x0
    5548:	str	x23, [x0, #32]
    554c:	str	x22, [x0, #40]
    5550:	str	w21, [x0, #20]
    5554:	str	w20, [x0, #24]
    5558:	ldr	x0, [x0, #48]
    555c:	cbz	x0, 5598 <srunner_print@@Base+0x228>
    5560:	mov	w0, #0x2                   	// #2
    5564:	str	w0, [x19]
    5568:	mov	x0, x19
    556c:	ldp	x19, x20, [sp, #16]
    5570:	ldp	x21, x22, [sp, #32]
    5574:	ldr	x23, [sp, #48]
    5578:	ldp	x29, x30, [sp], #64
    557c:	ret
    5580:	mov	w2, #0x1b8                 	// #440
    5584:	adrp	x1, 6000 <srunner_run_tagged@@Base+0x6a8>
    5588:	add	x1, x1, #0xd80
    558c:	adrp	x0, 6000 <srunner_run_tagged@@Base+0x6a8>
    5590:	add	x0, x0, #0xda8
    5594:	bl	31cc <_ck_assert_failed@@Base+0x14c>
    5598:	mov	w0, #0x1                   	// #1
    559c:	str	w0, [x19]
    55a0:	adrp	x0, 6000 <srunner_run_tagged@@Base+0x6a8>
    55a4:	add	x0, x0, #0xdc8
    55a8:	bl	2300 <strdup@plt>
    55ac:	str	x0, [x19, #48]
    55b0:	b	5568 <srunner_print@@Base+0x1f8>
    55b4:	stp	x29, x30, [sp, #-80]!
    55b8:	mov	x29, sp
    55bc:	str	x19, [sp, #16]
    55c0:	str	x0, [sp, #32]
    55c4:	str	w1, [sp, #44]
    55c8:	str	x2, [sp, #48]
    55cc:	str	x3, [sp, #56]
    55d0:	cmp	w1, #0x1
    55d4:	b.eq	5628 <srunner_print@@Base+0x2b8>  // b.none
    55d8:	ldr	x0, [sp, #32]
    55dc:	bl	34e4 <_ck_assert_failed@@Base+0x464>
    55e0:	adrp	x0, 18000 <check_waitpid_and_exit@@Base+0x11d30>
    55e4:	ldr	x0, [x0, #4056]
    55e8:	str	x0, [sp, #64]
    55ec:	ldr	x0, [sp, #32]
    55f0:	bl	34c0 <_ck_assert_failed@@Base+0x440>
    55f4:	cbnz	w0, 5694 <srunner_print@@Base+0x324>
    55f8:	ldr	x0, [sp, #32]
    55fc:	bl	352c <_ck_assert_failed@@Base+0x4ac>
    5600:	str	x0, [sp, #72]
    5604:	ldr	w0, [sp, #44]
    5608:	cmp	w0, #0x2
    560c:	b.eq	5634 <srunner_print@@Base+0x2c4>  // b.none
    5610:	ldr	x0, [sp, #72]
    5614:	ldr	x0, [x0, #8]
    5618:	blr	x0
    561c:	ldr	x0, [sp, #32]
    5620:	bl	3564 <_ck_assert_failed@@Base+0x4e4>
    5624:	b	55ec <srunner_print@@Base+0x27c>
    5628:	mov	w0, #0x1                   	// #1
    562c:	bl	41a4 <srunner_has_tap@@Base+0x538>
    5630:	b	55d8 <srunner_print@@Base+0x268>
    5634:	mov	w0, #0x1                   	// #1
    5638:	bl	41a4 <srunner_has_tap@@Base+0x538>
    563c:	ldr	x0, [sp, #64]
    5640:	bl	2170 <_setjmp@plt>
    5644:	cbnz	w0, 5654 <srunner_print@@Base+0x2e4>
    5648:	ldr	x0, [sp, #72]
    564c:	ldr	x0, [x0, #8]
    5650:	blr	x0
    5654:	mov	w3, #0xffffffff            	// #-1
    5658:	mov	w2, #0x0                   	// #0
    565c:	ldr	x1, [sp, #56]
    5660:	ldr	x0, [sp, #48]
    5664:	bl	5514 <srunner_print@@Base+0x1a4>
    5668:	mov	x19, x0
    566c:	ldr	w0, [x0]
    5670:	cmp	w0, #0x1
    5674:	b.ne	5698 <srunner_print@@Base+0x328>  // b.any
    5678:	ldr	x0, [x19, #8]
    567c:	bl	23e0 <free@plt>
    5680:	ldr	x0, [x19, #48]
    5684:	bl	23e0 <free@plt>
    5688:	mov	x0, x19
    568c:	bl	23e0 <free@plt>
    5690:	b	561c <srunner_print@@Base+0x2ac>
    5694:	mov	x19, #0x0                   	// #0
    5698:	mov	x0, x19
    569c:	ldr	x19, [sp, #16]
    56a0:	ldp	x29, x30, [sp], #80
    56a4:	ret
    56a8:	stp	x29, x30, [sp, #-32]!
    56ac:	mov	x29, sp
    56b0:	stp	x19, x20, [sp, #16]
    56b4:	mov	x19, x0
    56b8:	mov	x20, x1
    56bc:	ldr	x0, [x0, #16]
    56c0:	bl	3470 <_ck_assert_failed@@Base+0x3f0>
    56c4:	ldr	x1, [x19, #8]
    56c8:	ldr	w0, [x1]
    56cc:	add	w0, w0, #0x1
    56d0:	str	w0, [x1]
    56d4:	ldr	w0, [x20]
    56d8:	cmp	w0, #0x2
    56dc:	b.eq	56f4 <srunner_print@@Base+0x384>  // b.none
    56e0:	cmp	w0, #0x3
    56e4:	b.eq	5708 <srunner_print@@Base+0x398>  // b.none
    56e8:	ldp	x19, x20, [sp, #16]
    56ec:	ldp	x29, x30, [sp], #32
    56f0:	ret
    56f4:	ldr	x1, [x19, #8]
    56f8:	ldr	w0, [x1, #4]
    56fc:	add	w0, w0, #0x1
    5700:	str	w0, [x1, #4]
    5704:	b	56e8 <srunner_print@@Base+0x378>
    5708:	ldr	x1, [x19, #8]
    570c:	ldr	w0, [x1, #8]
    5710:	add	w0, w0, #0x1
    5714:	str	w0, [x1, #8]
    5718:	b	56e8 <srunner_print@@Base+0x378>
    571c:	stp	x29, x30, [sp, #-64]!
    5720:	mov	x29, sp
    5724:	stp	x19, x20, [sp, #16]
    5728:	stp	x21, x22, [sp, #32]
    572c:	str	x23, [sp, #48]
    5730:	mov	w23, w0
    5734:	mov	w21, w1
    5738:	mov	x0, #0x64                  	// #100
    573c:	bl	32f4 <_ck_assert_failed@@Base+0x274>
    5740:	mov	x19, x0
    5744:	mov	w0, w23
    5748:	bl	24a0 <strsignal@plt>
    574c:	bl	2300 <strdup@plt>
    5750:	mov	x22, x0
    5754:	mov	w0, w21
    5758:	bl	24a0 <strsignal@plt>
    575c:	bl	2300 <strdup@plt>
    5760:	mov	x20, x0
    5764:	adrp	x0, 19000 <check_waitpid_and_exit@@Base+0x12d30>
    5768:	ldr	w0, [x0, #752]
    576c:	cbz	w0, 57b4 <srunner_print@@Base+0x444>
    5770:	mov	x4, x20
    5774:	mov	w3, w21
    5778:	adrp	x2, 6000 <srunner_run_tagged@@Base+0x6a8>
    577c:	add	x2, x2, #0xdd0
    5780:	mov	x1, #0x64                  	// #100
    5784:	mov	x0, x19
    5788:	bl	2230 <snprintf@plt>
    578c:	mov	x0, x22
    5790:	bl	23e0 <free@plt>
    5794:	mov	x0, x20
    5798:	bl	23e0 <free@plt>
    579c:	mov	x0, x19
    57a0:	ldp	x19, x20, [sp, #16]
    57a4:	ldp	x21, x22, [sp, #32]
    57a8:	ldr	x23, [sp, #48]
    57ac:	ldp	x29, x30, [sp], #64
    57b0:	ret
    57b4:	mov	x6, x20
    57b8:	mov	w5, w21
    57bc:	mov	x4, x22
    57c0:	mov	w3, w23
    57c4:	adrp	x2, 6000 <srunner_run_tagged@@Base+0x6a8>
    57c8:	add	x2, x2, #0xe00
    57cc:	mov	x1, #0x64                  	// #100
    57d0:	mov	x0, x19
    57d4:	bl	2230 <snprintf@plt>
    57d8:	b	578c <srunner_print@@Base+0x41c>

00000000000057dc <srunner_fork_status@@Base>:
    57dc:	ldr	w0, [x0, #56]
    57e0:	cbz	w0, 57e8 <srunner_fork_status@@Base+0xc>
    57e4:	ret
    57e8:	stp	x29, x30, [sp, #-16]!
    57ec:	mov	x29, sp
    57f0:	adrp	x0, 6000 <srunner_run_tagged@@Base+0x6a8>
    57f4:	add	x0, x0, #0xe30
    57f8:	bl	24e0 <getenv@plt>
    57fc:	cbz	x0, 5820 <srunner_fork_status@@Base+0x44>
    5800:	adrp	x1, 6000 <srunner_run_tagged@@Base+0x6a8>
    5804:	add	x1, x1, #0xe38
    5808:	bl	2380 <strcmp@plt>
    580c:	cmp	w0, #0x0
    5810:	cset	w0, eq  // eq = none
    5814:	add	w0, w0, #0x1
    5818:	ldp	x29, x30, [sp], #16
    581c:	ret
    5820:	mov	w0, #0x1                   	// #1
    5824:	b	5818 <srunner_fork_status@@Base+0x3c>
    5828:	stp	x29, x30, [sp, #-96]!
    582c:	mov	x29, sp
    5830:	stp	x19, x20, [sp, #16]
    5834:	mov	x20, x1
    5838:	str	x1, [sp, #56]
    583c:	str	x2, [sp, #40]
    5840:	str	w3, [sp, #52]
    5844:	str	xzr, [sp, #80]
    5848:	str	xzr, [sp, #88]
    584c:	str	xzr, [sp, #64]
    5850:	str	xzr, [sp, #72]
    5854:	ldr	x19, [x1, #48]
    5858:	bl	2210 <srunner_fork_status@plt>
    585c:	adrp	x3, 6000 <srunner_run_tagged@@Base+0x6a8>
    5860:	add	x3, x3, #0xe40
    5864:	ldr	x2, [x20]
    5868:	mov	w1, w0
    586c:	mov	x0, x19
    5870:	bl	55b4 <srunner_print@@Base+0x244>
    5874:	cbz	x0, 5884 <srunner_fork_status@@Base+0xa8>
    5878:	ldp	x19, x20, [sp, #16]
    587c:	ldp	x29, x30, [sp], #96
    5880:	ret
    5884:	bl	3180 <_ck_assert_failed@@Base+0x100>
    5888:	add	x1, sp, #0x50
    588c:	bl	21f0 <clock_gettime@plt>
    5890:	adrp	x0, 18000 <check_waitpid_and_exit@@Base+0x11d30>
    5894:	ldr	x0, [x0, #4056]
    5898:	bl	2170 <_setjmp@plt>
    589c:	cbz	w0, 5924 <srunner_fork_status@@Base+0x148>
    58a0:	bl	3180 <_ck_assert_failed@@Base+0x100>
    58a4:	add	x1, sp, #0x40
    58a8:	bl	21f0 <clock_gettime@plt>
    58ac:	mov	w1, #0x2                   	// #2
    58b0:	ldr	x19, [sp, #56]
    58b4:	ldr	x0, [x19, #56]
    58b8:	bl	548c <srunner_print@@Base+0x11c>
    58bc:	ldr	x0, [sp, #72]
    58c0:	mov	x1, #0xf7cf                	// #63439
    58c4:	movk	x1, #0xe353, lsl #16
    58c8:	movk	x1, #0x9ba5, lsl #32
    58cc:	movk	x1, #0x20c4, lsl #48
    58d0:	smulh	x3, x0, x1
    58d4:	asr	x3, x3, #7
    58d8:	sub	x0, x3, x0, asr #63
    58dc:	ldr	x2, [sp, #88]
    58e0:	smulh	x1, x2, x1
    58e4:	asr	x2, x2, #63
    58e8:	sub	x1, x2, x1, asr #7
    58ec:	add	w0, w0, w1
    58f0:	ldr	x1, [sp, #64]
    58f4:	ldr	x3, [sp, #80]
    58f8:	sub	x1, x1, x3
    58fc:	ldr	x2, [sp, #40]
    5900:	ldr	x4, [x2]
    5904:	mov	w3, #0x4240                	// #16960
    5908:	movk	w3, #0xf, lsl #16
    590c:	madd	w3, w3, w1, w0
    5910:	ldr	w2, [sp, #52]
    5914:	ldr	x1, [x4]
    5918:	ldr	x0, [x19]
    591c:	bl	5514 <srunner_print@@Base+0x1a4>
    5920:	b	5878 <srunner_fork_status@@Base+0x9c>
    5924:	ldr	x19, [sp, #40]
    5928:	ldr	x0, [x19]
    592c:	ldr	w2, [x0, #24]
    5930:	ldr	x1, [x0, #16]
    5934:	ldr	x0, [x0]
    5938:	bl	2120 <tcase_fn_start@plt>
    593c:	ldr	x0, [x19]
    5940:	ldr	x1, [x0, #8]
    5944:	ldr	w0, [sp, #52]
    5948:	blr	x1
    594c:	b	58a0 <srunner_fork_status@@Base+0xc4>

0000000000005950 <srunner_set_fork_status@@Base>:
    5950:	str	w1, [x0, #56]
    5954:	ret

0000000000005958 <srunner_run_tagged@@Base>:
    5958:	stp	x29, x30, [sp, #-304]!
    595c:	mov	x29, sp
    5960:	stp	x19, x20, [sp, #16]
    5964:	stp	x21, x22, [sp, #32]
    5968:	stp	x23, x24, [sp, #48]
    596c:	stp	x25, x26, [sp, #64]
    5970:	mov	x19, x0
    5974:	mov	x25, x1
    5978:	mov	x23, x2
    597c:	str	x3, [sp, #104]
    5980:	str	x4, [sp, #112]
    5984:	mov	w21, w5
    5988:	cbz	x2, 5ac0 <srunner_run_tagged@@Base+0x168>
    598c:	cbz	x25, 5ad4 <srunner_run_tagged@@Base+0x17c>
    5990:	ldr	x0, [sp, #104]
    5994:	cbz	x0, 5ae8 <srunner_run_tagged@@Base+0x190>
    5998:	ldr	x0, [sp, #112]
    599c:	cbz	x0, 5afc <srunner_run_tagged@@Base+0x1a4>
    59a0:	cbz	x19, 623c <srunner_run_tagged@@Base+0x8e4>
    59a4:	stp	x27, x28, [sp, #80]
    59a8:	cmp	w21, #0x4
    59ac:	b.hi	5b10 <srunner_run_tagged@@Base+0x1b8>  // b.pmore
    59b0:	adrp	x20, 19000 <check_waitpid_and_exit@@Base+0x12d30>
    59b4:	add	x20, x20, #0x2f0
    59b8:	stp	xzr, xzr, [x20, #320]
    59bc:	stp	xzr, xzr, [x20, #336]
    59c0:	stp	xzr, xzr, [x20, #352]
    59c4:	stp	xzr, xzr, [x20, #368]
    59c8:	stp	xzr, xzr, [x20, #384]
    59cc:	stp	xzr, xzr, [x20, #400]
    59d0:	stp	xzr, xzr, [x20, #416]
    59d4:	stp	xzr, xzr, [x20, #432]
    59d8:	stp	xzr, xzr, [x20, #448]
    59dc:	adrp	x22, 5000 <check_set_max_msg_size@@Base+0x734>
    59e0:	add	x22, x22, #0x3c8
    59e4:	str	x22, [x20, #312]
    59e8:	add	x2, x20, #0x1d0
    59ec:	add	x1, x20, #0x138
    59f0:	mov	w0, #0xe                   	// #14
    59f4:	bl	2320 <sigaction@plt>
    59f8:	add	x0, x20, #0x270
    59fc:	stp	xzr, xzr, [x0]
    5a00:	stp	xzr, xzr, [x0, #16]
    5a04:	stp	xzr, xzr, [x0, #32]
    5a08:	stp	xzr, xzr, [x0, #48]
    5a0c:	stp	xzr, xzr, [x0, #64]
    5a10:	stp	xzr, xzr, [x0, #80]
    5a14:	stp	xzr, xzr, [x0, #96]
    5a18:	stp	xzr, xzr, [x0, #112]
    5a1c:	stp	xzr, xzr, [x0, #128]
    5a20:	str	x22, [x20, #616]
    5a24:	add	x2, x20, #0x8
    5a28:	add	x1, x20, #0x268
    5a2c:	mov	w0, #0x2                   	// #2
    5a30:	bl	2320 <sigaction@plt>
    5a34:	add	x0, x20, #0x308
    5a38:	stp	xzr, xzr, [x0]
    5a3c:	stp	xzr, xzr, [x0, #16]
    5a40:	stp	xzr, xzr, [x0, #32]
    5a44:	stp	xzr, xzr, [x0, #48]
    5a48:	stp	xzr, xzr, [x0, #64]
    5a4c:	stp	xzr, xzr, [x0, #80]
    5a50:	stp	xzr, xzr, [x0, #96]
    5a54:	stp	xzr, xzr, [x0, #112]
    5a58:	stp	xzr, xzr, [x0, #128]
    5a5c:	str	x22, [x20, #768]
    5a60:	add	x2, x20, #0xa0
    5a64:	add	x1, x20, #0x300
    5a68:	mov	w0, #0xf                   	// #15
    5a6c:	bl	2320 <sigaction@plt>
    5a70:	mov	x0, x19
    5a74:	bl	2210 <srunner_fork_status@plt>
    5a78:	bl	3040 <tr_tcname@@Base+0x8>
    5a7c:	bl	447c <srunner_has_tap@@Base+0x810>
    5a80:	mov	w1, w21
    5a84:	mov	x0, x19
    5a88:	bl	3e78 <srunner_has_tap@@Base+0x20c>
    5a8c:	mov	x0, x19
    5a90:	bl	3d00 <srunner_has_tap@@Base+0x94>
    5a94:	ldr	x28, [x19]
    5a98:	ldr	x0, [sp, #104]
    5a9c:	bl	284c <tcase_create@@Base+0x13c>
    5aa0:	str	x0, [sp, #120]
    5aa4:	ldr	x0, [sp, #112]
    5aa8:	bl	284c <tcase_create@@Base+0x13c>
    5aac:	str	x0, [sp, #128]
    5ab0:	mov	x0, x28
    5ab4:	bl	34e4 <_ck_assert_failed@@Base+0x464>
    5ab8:	str	x20, [sp, #152]
    5abc:	b	6148 <srunner_run_tagged@@Base+0x7f0>
    5ac0:	adrp	x0, 6000 <srunner_run_tagged@@Base+0x6a8>
    5ac4:	add	x0, x0, #0xe50
    5ac8:	bl	24e0 <getenv@plt>
    5acc:	mov	x23, x0
    5ad0:	b	598c <srunner_run_tagged@@Base+0x34>
    5ad4:	adrp	x0, 6000 <srunner_run_tagged@@Base+0x6a8>
    5ad8:	add	x0, x0, #0xe60
    5adc:	bl	24e0 <getenv@plt>
    5ae0:	mov	x25, x0
    5ae4:	b	5990 <srunner_run_tagged@@Base+0x38>
    5ae8:	adrp	x0, 6000 <srunner_run_tagged@@Base+0x6a8>
    5aec:	add	x0, x0, #0xe70
    5af0:	bl	24e0 <getenv@plt>
    5af4:	str	x0, [sp, #104]
    5af8:	b	5998 <srunner_run_tagged@@Base+0x40>
    5afc:	adrp	x0, 6000 <srunner_run_tagged@@Base+0x6a8>
    5b00:	add	x0, x0, #0xe80
    5b04:	bl	24e0 <getenv@plt>
    5b08:	str	x0, [sp, #112]
    5b0c:	b	59a0 <srunner_run_tagged@@Base+0x48>
    5b10:	mov	w3, w21
    5b14:	mov	w2, #0x31e                 	// #798
    5b18:	adrp	x1, 6000 <srunner_run_tagged@@Base+0x6a8>
    5b1c:	add	x1, x1, #0xd80
    5b20:	adrp	x0, 6000 <srunner_run_tagged@@Base+0x6a8>
    5b24:	add	x0, x0, #0xe90
    5b28:	bl	31cc <_ck_assert_failed@@Base+0x14c>
    5b2c:	mov	x1, x21
    5b30:	mov	x0, x19
    5b34:	bl	56a8 <srunner_print@@Base+0x338>
    5b38:	mov	x0, x27
    5b3c:	bl	3564 <_ck_assert_failed@@Base+0x4e4>
    5b40:	mov	x0, x27
    5b44:	bl	34c0 <_ck_assert_failed@@Base+0x440>
    5b48:	cbnz	w0, 6134 <srunner_run_tagged@@Base+0x7dc>
    5b4c:	mov	x0, x27
    5b50:	bl	352c <_ck_assert_failed@@Base+0x4ac>
    5b54:	mov	x20, x0
    5b58:	cbz	x23, 5b6c <srunner_run_tagged@@Base+0x214>
    5b5c:	ldr	x1, [x0]
    5b60:	mov	x0, x23
    5b64:	bl	2380 <strcmp@plt>
    5b68:	cbnz	w0, 5b38 <srunner_run_tagged@@Base+0x1e0>
    5b6c:	ldr	x0, [sp, #104]
    5b70:	cbz	x0, 5b84 <srunner_run_tagged@@Base+0x22c>
    5b74:	ldr	x1, [sp, #120]
    5b78:	mov	x0, x20
    5b7c:	bl	2914 <tcase_set_tags@@Base+0x48>
    5b80:	cbz	w0, 5b38 <srunner_run_tagged@@Base+0x1e0>
    5b84:	ldr	x0, [sp, #112]
    5b88:	cbz	x0, 5b9c <srunner_run_tagged@@Base+0x244>
    5b8c:	ldr	x1, [sp, #128]
    5b90:	mov	x0, x20
    5b94:	bl	2914 <tcase_set_tags@@Base+0x48>
    5b98:	cbnz	w0, 5b38 <srunner_run_tagged@@Base+0x1e0>
    5b9c:	mov	w0, #0x2                   	// #2
    5ba0:	bl	3040 <tr_tcname@@Base+0x8>
    5ba4:	adrp	x3, 6000 <srunner_run_tagged@@Base+0x6a8>
    5ba8:	add	x3, x3, #0xec0
    5bac:	ldr	x2, [x20]
    5bb0:	mov	w1, #0x2                   	// #2
    5bb4:	ldr	x0, [x20, #32]
    5bb8:	bl	55b4 <srunner_print@@Base+0x244>
    5bbc:	mov	x21, x0
    5bc0:	mov	x0, x19
    5bc4:	bl	2210 <srunner_fork_status@plt>
    5bc8:	bl	3040 <tr_tcname@@Base+0x8>
    5bcc:	cbz	x21, 5bdc <srunner_run_tagged@@Base+0x284>
    5bd0:	ldr	w0, [x21]
    5bd4:	cmp	w0, #0x1
    5bd8:	b.ne	5b2c <srunner_run_tagged@@Base+0x1d4>  // b.any
    5bdc:	ldr	x0, [x20, #24]
    5be0:	str	x0, [sp, #136]
    5be4:	bl	34e4 <_ck_assert_failed@@Base+0x464>
    5be8:	ldr	x0, [sp, #160]
    5bec:	str	x0, [sp, #192]
    5bf0:	ldr	x0, [sp, #136]
    5bf4:	bl	34c0 <_ck_assert_failed@@Base+0x440>
    5bf8:	cbnz	w0, 6118 <srunner_run_tagged@@Base+0x7c0>
    5bfc:	ldr	x0, [sp, #136]
    5c00:	bl	352c <_ck_assert_failed@@Base+0x4ac>
    5c04:	mov	x22, x0
    5c08:	ldr	w26, [x0, #8]
    5c0c:	ldr	w0, [x0, #12]
    5c10:	cmp	w26, w0
    5c14:	b.ge	610c <srunner_run_tagged@@Base+0x7b4>  // b.tcont
    5c18:	add	x0, sp, #0x110
    5c1c:	str	x0, [sp, #184]
    5c20:	add	x0, sp, #0xe4
    5c24:	str	x0, [sp, #144]
    5c28:	b	5e8c <srunner_run_tagged@@Base+0x534>
    5c2c:	str	wzr, [sp, #228]
    5c30:	str	xzr, [sp, #240]
    5c34:	str	xzr, [sp, #248]
    5c38:	str	xzr, [sp, #256]
    5c3c:	str	xzr, [sp, #264]
    5c40:	bl	2200 <fork@plt>
    5c44:	mov	w21, w0
    5c48:	cmn	w0, #0x1
    5c4c:	b.eq	5d34 <srunner_run_tagged@@Base+0x3dc>  // b.none
    5c50:	cbnz	w0, 5d4c <srunner_run_tagged@@Base+0x3f4>
    5c54:	mov	w1, #0x0                   	// #0
    5c58:	mov	w0, #0x0                   	// #0
    5c5c:	bl	23c0 <setpgid@plt>
    5c60:	bl	23f0 <getpgrp@plt>
    5c64:	adrp	x1, 19000 <check_waitpid_and_exit@@Base+0x12d30>
    5c68:	str	w0, [x1, #756]
    5c6c:	ldr	x21, [x20, #48]
    5c70:	mov	x0, x19
    5c74:	bl	2210 <srunner_fork_status@plt>
    5c78:	adrp	x3, 6000 <srunner_run_tagged@@Base+0x6a8>
    5c7c:	add	x3, x3, #0xe40
    5c80:	ldr	x2, [x20]
    5c84:	mov	w1, w0
    5c88:	mov	x0, x21
    5c8c:	bl	55b4 <srunner_print@@Base+0x244>
    5c90:	bl	23e0 <free@plt>
    5c94:	bl	3180 <_ck_assert_failed@@Base+0x100>
    5c98:	add	x1, sp, #0xf0
    5c9c:	bl	21f0 <clock_gettime@plt>
    5ca0:	ldr	x0, [x22]
    5ca4:	ldr	w2, [x0, #24]
    5ca8:	ldr	x1, [x0, #16]
    5cac:	ldr	x0, [x0]
    5cb0:	bl	2120 <tcase_fn_start@plt>
    5cb4:	ldr	x0, [x22]
    5cb8:	ldr	x1, [x0, #8]
    5cbc:	mov	w0, w26
    5cc0:	blr	x1
    5cc4:	bl	3180 <_ck_assert_failed@@Base+0x100>
    5cc8:	add	x1, sp, #0x100
    5ccc:	bl	21f0 <clock_gettime@plt>
    5cd0:	mov	w1, #0x2                   	// #2
    5cd4:	ldr	x0, [x20, #56]
    5cd8:	bl	548c <srunner_print@@Base+0x11c>
    5cdc:	ldr	x0, [sp, #264]
    5ce0:	mov	x2, #0xf7cf                	// #63439
    5ce4:	movk	x2, #0xe353, lsl #16
    5ce8:	movk	x2, #0x9ba5, lsl #32
    5cec:	movk	x2, #0x20c4, lsl #48
    5cf0:	smulh	x1, x0, x2
    5cf4:	asr	x1, x1, #7
    5cf8:	sub	x0, x1, x0, asr #63
    5cfc:	ldr	x3, [sp, #248]
    5d00:	smulh	x1, x3, x2
    5d04:	asr	x3, x3, #63
    5d08:	sub	x1, x3, x1, asr #7
    5d0c:	add	w1, w0, w1
    5d10:	ldr	x0, [sp, #256]
    5d14:	ldr	x2, [sp, #240]
    5d18:	sub	x0, x0, x2
    5d1c:	mov	w2, #0x4240                	// #16960
    5d20:	movk	w2, #0xf, lsl #16
    5d24:	madd	w0, w2, w0, w1
    5d28:	bl	4140 <srunner_has_tap@@Base+0x4d4>
    5d2c:	mov	w0, #0x0                   	// #0
    5d30:	bl	2160 <exit@plt>
    5d34:	mov	w2, #0x1e5                 	// #485
    5d38:	adrp	x1, 6000 <srunner_run_tagged@@Base+0x6a8>
    5d3c:	add	x1, x1, #0xd80
    5d40:	adrp	x0, 6000 <srunner_run_tagged@@Base+0x6a8>
    5d44:	add	x0, x0, #0xed0
    5d48:	bl	31cc <_ck_assert_failed@@Base+0x14c>
    5d4c:	ldr	x0, [sp, #152]
    5d50:	str	w21, [x0, #4]
    5d54:	str	wzr, [x0]
    5d58:	bl	3180 <_ck_assert_failed@@Base+0x100>
    5d5c:	ldr	x2, [sp, #192]
    5d60:	mov	x1, #0x0                   	// #0
    5d64:	bl	2370 <timer_create@plt>
    5d68:	cbnz	w0, 60dc <srunner_run_tagged@@Base+0x784>
    5d6c:	ldp	x0, x1, [x20, #8]
    5d70:	stp	x0, x1, [sp, #288]
    5d74:	str	xzr, [sp, #272]
    5d78:	str	xzr, [sp, #280]
    5d7c:	mov	x3, #0x0                   	// #0
    5d80:	ldr	x2, [sp, #184]
    5d84:	mov	w1, #0x0                   	// #0
    5d88:	ldr	x0, [sp, #232]
    5d8c:	bl	2280 <timer_settime@plt>
    5d90:	cbnz	w0, 5ed4 <srunner_run_tagged@@Base+0x57c>
    5d94:	mov	w2, #0x0                   	// #0
    5d98:	ldr	x1, [sp, #144]
    5d9c:	mov	w0, w21
    5da0:	bl	2510 <waitpid@plt>
    5da4:	cmn	w0, #0x1
    5da8:	b.eq	5d94 <srunner_run_tagged@@Base+0x43c>  // b.none
    5dac:	ldr	x0, [sp, #232]
    5db0:	bl	2400 <timer_delete@plt>
    5db4:	mov	w1, #0x9                   	// #9
    5db8:	mov	w0, w21
    5dbc:	bl	2430 <killpg@plt>
    5dc0:	ldr	x0, [x20]
    5dc4:	str	x0, [sp, #200]
    5dc8:	ldr	x0, [x22]
    5dcc:	ldr	x0, [x0]
    5dd0:	str	x0, [sp, #208]
    5dd4:	ldr	w0, [sp, #228]
    5dd8:	str	w0, [sp, #176]
    5ddc:	ldr	w1, [x22, #16]
    5de0:	str	w1, [sp, #168]
    5de4:	ldrsb	w2, [x22, #20]
    5de8:	str	w2, [sp, #220]
    5dec:	bl	5398 <srunner_print@@Base+0x28>
    5df0:	bl	4310 <srunner_has_tap@@Base+0x6a4>
    5df4:	mov	x21, x0
    5df8:	cbz	x0, 5eec <srunner_run_tagged@@Base+0x594>
    5dfc:	ldr	x0, [sp, #200]
    5e00:	str	x0, [x21, #32]
    5e04:	ldr	x0, [sp, #208]
    5e08:	str	x0, [x21, #40]
    5e0c:	str	w26, [x21, #20]
    5e10:	ldr	w0, [sp, #176]
    5e14:	and	w1, w0, #0x7f
    5e18:	str	w1, [sp, #200]
    5e1c:	add	w0, w1, #0x1
    5e20:	sbfx	x0, x0, #1, #7
    5e24:	cmp	w0, #0x0
    5e28:	b.le	5fdc <srunner_run_tagged@@Base+0x684>
    5e2c:	ldr	w0, [sp, #168]
    5e30:	cmp	w0, w1
    5e34:	b.eq	5f04 <srunner_run_tagged@@Base+0x5ac>  // b.none
    5e38:	ldr	w0, [sp, #168]
    5e3c:	cbz	w0, 5f60 <srunner_run_tagged@@Base+0x608>
    5e40:	mov	w0, #0x3                   	// #3
    5e44:	str	w0, [x21]
    5e48:	ldr	x0, [x21, #48]
    5e4c:	cbz	x0, 5e54 <srunner_run_tagged@@Base+0x4fc>
    5e50:	bl	23e0 <free@plt>
    5e54:	ldr	w1, [sp, #168]
    5e58:	ldr	w0, [sp, #200]
    5e5c:	bl	571c <srunner_print@@Base+0x3ac>
    5e60:	str	x0, [x21, #48]
    5e64:	mov	x1, x21
    5e68:	mov	x0, x19
    5e6c:	bl	56a8 <srunner_print@@Base+0x338>
    5e70:	mov	x1, x21
    5e74:	mov	x0, x19
    5e78:	bl	3db8 <srunner_has_tap@@Base+0x14c>
    5e7c:	add	w26, w26, #0x1
    5e80:	ldr	w0, [x22, #12]
    5e84:	cmp	w26, w0
    5e88:	b.ge	610c <srunner_run_tagged@@Base+0x7b4>  // b.tcont
    5e8c:	mov	x2, x22
    5e90:	mov	x1, x20
    5e94:	mov	x0, x19
    5e98:	bl	3d68 <srunner_has_tap@@Base+0xfc>
    5e9c:	mov	x0, x19
    5ea0:	bl	2210 <srunner_fork_status@plt>
    5ea4:	cmp	w0, #0x1
    5ea8:	b.eq	5c2c <srunner_run_tagged@@Base+0x2d4>  // b.none
    5eac:	cmp	w0, #0x2
    5eb0:	b.ne	60f4 <srunner_run_tagged@@Base+0x79c>  // b.any
    5eb4:	mov	w3, w26
    5eb8:	mov	x2, x22
    5ebc:	mov	x1, x20
    5ec0:	mov	x0, x19
    5ec4:	bl	5828 <srunner_fork_status@@Base+0x4c>
    5ec8:	mov	x21, x0
    5ecc:	cbz	x0, 5e7c <srunner_run_tagged@@Base+0x524>
    5ed0:	b	5e64 <srunner_run_tagged@@Base+0x50c>
    5ed4:	mov	w2, #0x210                 	// #528
    5ed8:	adrp	x1, 6000 <srunner_run_tagged@@Base+0x6a8>
    5edc:	add	x1, x1, #0xd80
    5ee0:	adrp	x0, 6000 <srunner_run_tagged@@Base+0x6a8>
    5ee4:	add	x0, x0, #0xee8
    5ee8:	bl	31cc <_ck_assert_failed@@Base+0x14c>
    5eec:	mov	w2, #0x22c                 	// #556
    5ef0:	adrp	x1, 6000 <srunner_run_tagged@@Base+0x6a8>
    5ef4:	add	x1, x1, #0xd80
    5ef8:	adrp	x0, 6000 <srunner_run_tagged@@Base+0x6a8>
    5efc:	add	x0, x0, #0xda8
    5f00:	bl	31cc <_ck_assert_failed@@Base+0x14c>
    5f04:	ldr	x0, [sp, #152]
    5f08:	ldr	w0, [x0]
    5f0c:	cbz	w0, 5f38 <srunner_run_tagged@@Base+0x5e0>
    5f10:	mov	w0, #0x3                   	// #3
    5f14:	str	w0, [x21]
    5f18:	ldr	x0, [x21, #48]
    5f1c:	cbz	x0, 5f24 <srunner_run_tagged@@Base+0x5cc>
    5f20:	bl	23e0 <free@plt>
    5f24:	ldr	w1, [sp, #168]
    5f28:	ldr	w0, [sp, #200]
    5f2c:	bl	571c <srunner_print@@Base+0x3ac>
    5f30:	str	x0, [x21, #48]
    5f34:	b	5e64 <srunner_run_tagged@@Base+0x50c>
    5f38:	mov	w0, #0x1                   	// #1
    5f3c:	str	w0, [x21]
    5f40:	ldr	x0, [x21, #48]
    5f44:	cbz	x0, 5f4c <srunner_run_tagged@@Base+0x5f4>
    5f48:	bl	23e0 <free@plt>
    5f4c:	adrp	x0, 6000 <srunner_run_tagged@@Base+0x6a8>
    5f50:	add	x0, x0, #0xdc8
    5f54:	bl	2300 <strdup@plt>
    5f58:	str	x0, [x21, #48]
    5f5c:	b	5e64 <srunner_run_tagged@@Base+0x50c>
    5f60:	mov	w0, #0x3                   	// #3
    5f64:	str	w0, [x21]
    5f68:	ldr	x0, [x21, #48]
    5f6c:	cbz	x0, 5f74 <srunner_run_tagged@@Base+0x61c>
    5f70:	bl	23e0 <free@plt>
    5f74:	mov	x0, #0x64                  	// #100
    5f78:	bl	32f4 <_ck_assert_failed@@Base+0x274>
    5f7c:	mov	x1, x0
    5f80:	str	x0, [sp, #168]
    5f84:	ldr	x0, [sp, #152]
    5f88:	ldr	w0, [x0]
    5f8c:	cbz	w0, 5fb4 <srunner_run_tagged@@Base+0x65c>
    5f90:	adrp	x0, 6000 <srunner_run_tagged@@Base+0x6a8>
    5f94:	add	x0, x0, #0xf08
    5f98:	ldp	x2, x3, [x0]
    5f9c:	stp	x2, x3, [x1]
    5fa0:	ldur	x0, [x0, #13]
    5fa4:	stur	x0, [x1, #13]
    5fa8:	ldr	x0, [sp, #168]
    5fac:	str	x0, [x21, #48]
    5fb0:	b	5e64 <srunner_run_tagged@@Base+0x50c>
    5fb4:	ldr	w0, [sp, #200]
    5fb8:	bl	24a0 <strsignal@plt>
    5fbc:	mov	x4, x0
    5fc0:	ldr	w3, [sp, #200]
    5fc4:	adrp	x2, 6000 <srunner_run_tagged@@Base+0x6a8>
    5fc8:	add	x2, x2, #0xf20
    5fcc:	mov	x1, #0x64                  	// #100
    5fd0:	ldr	x0, [sp, #168]
    5fd4:	bl	2230 <snprintf@plt>
    5fd8:	b	5fa8 <srunner_run_tagged@@Base+0x650>
    5fdc:	ldr	x0, [sp, #176]
    5fe0:	sbfx	x0, x0, #8, #8
    5fe4:	mov	x1, x0
    5fe8:	str	w0, [sp, #176]
    5fec:	ldr	w0, [sp, #168]
    5ff0:	cbnz	w0, 6094 <srunner_run_tagged@@Base+0x73c>
    5ff4:	ldr	w0, [sp, #200]
    5ff8:	cmp	w0, #0x0
    5ffc:	cset	w0, eq  // eq = none
    6000:	cmp	w0, #0x0
    6004:	ldr	w2, [sp, #220]
    6008:	ccmp	w2, w1, #0x0, ne  // ne = any
    600c:	b.ne	6038 <srunner_run_tagged@@Base+0x6e0>  // b.any
    6010:	mov	w0, #0x1                   	// #1
    6014:	str	w0, [x21]
    6018:	ldr	x0, [x21, #48]
    601c:	cbz	x0, 6024 <srunner_run_tagged@@Base+0x6cc>
    6020:	bl	23e0 <free@plt>
    6024:	adrp	x0, 6000 <srunner_run_tagged@@Base+0x6a8>
    6028:	add	x0, x0, #0xdc8
    602c:	bl	2300 <strdup@plt>
    6030:	str	x0, [x21, #48]
    6034:	b	5e64 <srunner_run_tagged@@Base+0x50c>
    6038:	cmp	w0, #0x0
    603c:	ldr	w0, [sp, #220]
    6040:	ldr	w1, [sp, #176]
    6044:	ccmp	w0, w1, #0x4, ne  // ne = any
    6048:	b.eq	5e64 <srunner_run_tagged@@Base+0x50c>  // b.none
    604c:	ldr	x0, [x21, #48]
    6050:	cbz	x0, 6060 <srunner_run_tagged@@Base+0x708>
    6054:	mov	w0, #0x2                   	// #2
    6058:	str	w0, [x21]
    605c:	b	5e64 <srunner_run_tagged@@Base+0x50c>
    6060:	mov	w0, #0x3                   	// #3
    6064:	str	w0, [x21]
    6068:	mov	x0, #0x64                  	// #100
    606c:	bl	32f4 <_ck_assert_failed@@Base+0x274>
    6070:	str	x0, [sp, #168]
    6074:	ldr	w3, [sp, #176]
    6078:	adrp	x2, 6000 <srunner_run_tagged@@Base+0x6a8>
    607c:	add	x2, x2, #0xf38
    6080:	mov	x1, #0x64                  	// #100
    6084:	bl	2230 <snprintf@plt>
    6088:	ldr	x0, [sp, #168]
    608c:	str	x0, [x21, #48]
    6090:	b	5e64 <srunner_run_tagged@@Base+0x50c>
    6094:	ldr	w0, [sp, #200]
    6098:	cbnz	w0, 5e64 <srunner_run_tagged@@Base+0x50c>
    609c:	ldr	x0, [x21, #48]
    60a0:	cbz	x0, 60a8 <srunner_run_tagged@@Base+0x750>
    60a4:	bl	23e0 <free@plt>
    60a8:	mov	x0, #0x64                  	// #100
    60ac:	bl	32f4 <_ck_assert_failed@@Base+0x274>
    60b0:	str	x0, [sp, #168]
    60b4:	ldr	w3, [sp, #176]
    60b8:	adrp	x2, 6000 <srunner_run_tagged@@Base+0x6a8>
    60bc:	add	x2, x2, #0xf38
    60c0:	mov	x1, #0x64                  	// #100
    60c4:	bl	2230 <snprintf@plt>
    60c8:	ldr	x0, [sp, #168]
    60cc:	str	x0, [x21, #48]
    60d0:	mov	w0, #0x2                   	// #2
    60d4:	str	w0, [x21]
    60d8:	b	5e64 <srunner_run_tagged@@Base+0x50c>
    60dc:	mov	w2, #0x218                 	// #536
    60e0:	adrp	x1, 6000 <srunner_run_tagged@@Base+0x6a8>
    60e4:	add	x1, x1, #0xd80
    60e8:	adrp	x0, 6000 <srunner_run_tagged@@Base+0x6a8>
    60ec:	add	x0, x0, #0xf58
    60f0:	bl	31cc <_ck_assert_failed@@Base+0x14c>
    60f4:	mov	w2, #0x10b                 	// #267
    60f8:	adrp	x1, 6000 <srunner_run_tagged@@Base+0x6a8>
    60fc:	add	x1, x1, #0xd80
    6100:	adrp	x0, 6000 <srunner_run_tagged@@Base+0x6a8>
    6104:	add	x0, x0, #0xf78
    6108:	bl	31cc <_ck_assert_failed@@Base+0x14c>
    610c:	ldr	x0, [sp, #136]
    6110:	bl	3564 <_ck_assert_failed@@Base+0x4e4>
    6114:	b	5bf0 <srunner_run_tagged@@Base+0x298>
    6118:	ldr	x20, [x20, #40]
    611c:	mov	x0, x19
    6120:	bl	2210 <srunner_fork_status@plt>
    6124:	mov	w1, w0
    6128:	mov	x0, x20
    612c:	bl	548c <srunner_print@@Base+0x11c>
    6130:	b	5b38 <srunner_run_tagged@@Base+0x1e0>
    6134:	mov	x1, x24
    6138:	mov	x0, x19
    613c:	bl	3d50 <srunner_has_tap@@Base+0xe4>
    6140:	mov	x0, x28
    6144:	bl	3564 <_ck_assert_failed@@Base+0x4e4>
    6148:	mov	x0, x28
    614c:	bl	34c0 <_ck_assert_failed@@Base+0x440>
    6150:	cbnz	w0, 61ac <srunner_run_tagged@@Base+0x854>
    6154:	mov	x0, x28
    6158:	bl	352c <_ck_assert_failed@@Base+0x4ac>
    615c:	mov	x24, x0
    6160:	cbz	x25, 6174 <srunner_run_tagged@@Base+0x81c>
    6164:	ldr	x1, [x0]
    6168:	mov	x0, x25
    616c:	bl	2380 <strcmp@plt>
    6170:	cbnz	w0, 6140 <srunner_run_tagged@@Base+0x7e8>
    6174:	cbz	x23, 6188 <srunner_run_tagged@@Base+0x830>
    6178:	mov	x1, x23
    617c:	mov	x0, x24
    6180:	bl	2410 <suite_tcase@plt>
    6184:	cbz	w0, 6140 <srunner_run_tagged@@Base+0x7e8>
    6188:	mov	x1, x24
    618c:	mov	x0, x19
    6190:	bl	3d38 <srunner_has_tap@@Base+0xcc>
    6194:	ldr	x27, [x24, #8]
    6198:	mov	x0, x27
    619c:	bl	34e4 <_ck_assert_failed@@Base+0x464>
    61a0:	add	x0, sp, #0xe8
    61a4:	str	x0, [sp, #160]
    61a8:	b	5b40 <srunner_run_tagged@@Base+0x1e8>
    61ac:	adrp	x20, 18000 <check_waitpid_and_exit@@Base+0x11d30>
    61b0:	ldr	x20, [x20, #4048]
    61b4:	mov	x1, x20
    61b8:	ldr	x21, [sp, #120]
    61bc:	mov	x0, x21
    61c0:	bl	359c <_ck_assert_failed@@Base+0x51c>
    61c4:	mov	x1, x20
    61c8:	ldr	x20, [sp, #128]
    61cc:	mov	x0, x20
    61d0:	bl	359c <_ck_assert_failed@@Base+0x51c>
    61d4:	mov	x0, x21
    61d8:	bl	34f8 <_ck_assert_failed@@Base+0x478>
    61dc:	mov	x0, x20
    61e0:	bl	34f8 <_ck_assert_failed@@Base+0x478>
    61e4:	mov	x0, x19
    61e8:	bl	3d1c <srunner_has_tap@@Base+0xb0>
    61ec:	mov	x0, x19
    61f0:	bl	3f7c <srunner_has_tap@@Base+0x310>
    61f4:	bl	41c8 <srunner_has_tap@@Base+0x55c>
    61f8:	mov	w0, #0x1                   	// #1
    61fc:	bl	3040 <tr_tcname@@Base+0x8>
    6200:	adrp	x19, 19000 <check_waitpid_and_exit@@Base+0x12d30>
    6204:	add	x19, x19, #0x2f0
    6208:	mov	x2, #0x0                   	// #0
    620c:	add	x1, x19, #0x1d0
    6210:	mov	w0, #0xe                   	// #14
    6214:	bl	2320 <sigaction@plt>
    6218:	mov	x2, #0x0                   	// #0
    621c:	add	x1, x19, #0x8
    6220:	mov	w0, #0x2                   	// #2
    6224:	bl	2320 <sigaction@plt>
    6228:	mov	x2, #0x0                   	// #0
    622c:	add	x1, x19, #0xa0
    6230:	mov	w0, #0xf                   	// #15
    6234:	bl	2320 <sigaction@plt>
    6238:	ldp	x27, x28, [sp, #80]
    623c:	ldp	x19, x20, [sp, #16]
    6240:	ldp	x21, x22, [sp, #32]
    6244:	ldp	x23, x24, [sp, #48]
    6248:	ldp	x25, x26, [sp, #64]
    624c:	ldp	x29, x30, [sp], #304
    6250:	ret

0000000000006254 <srunner_run@@Base>:
    6254:	stp	x29, x30, [sp, #-16]!
    6258:	mov	x29, sp
    625c:	mov	w5, w3
    6260:	mov	x4, #0x0                   	// #0
    6264:	mov	x3, #0x0                   	// #0
    6268:	bl	2450 <srunner_run_tagged@plt>
    626c:	ldp	x29, x30, [sp], #16
    6270:	ret

0000000000006274 <srunner_run_all@@Base>:
    6274:	stp	x29, x30, [sp, #-16]!
    6278:	mov	x29, sp
    627c:	mov	w3, w1
    6280:	mov	x2, #0x0                   	// #0
    6284:	mov	x1, #0x0                   	// #0
    6288:	bl	2360 <srunner_run@plt>
    628c:	ldp	x29, x30, [sp], #16
    6290:	ret

0000000000006294 <check_fork@@Base>:
    6294:	stp	x29, x30, [sp, #-32]!
    6298:	mov	x29, sp
    629c:	str	x19, [sp, #16]
    62a0:	bl	2200 <fork@plt>
    62a4:	mov	w19, w0
    62a8:	tbz	w0, #31, 62bc <check_fork@@Base+0x28>
    62ac:	mov	w0, w19
    62b0:	ldr	x19, [sp, #16]
    62b4:	ldp	x29, x30, [sp], #32
    62b8:	ret
    62bc:	adrp	x0, 19000 <check_waitpid_and_exit@@Base+0x12d30>
    62c0:	ldr	w1, [x0, #756]
    62c4:	mov	w0, w19
    62c8:	bl	23c0 <setpgid@plt>
    62cc:	b	62ac <check_fork@@Base+0x18>

00000000000062d0 <check_waitpid_and_exit@@Base>:
    62d0:	stp	x29, x30, [sp, #-48]!
    62d4:	mov	x29, sp
    62d8:	stp	x19, x20, [sp, #16]
    62dc:	cmp	w0, #0x0
    62e0:	b.le	6314 <check_waitpid_and_exit@@Base+0x44>
    62e4:	mov	w19, w0
    62e8:	add	x20, sp, #0x2c
    62ec:	mov	w2, #0x0                   	// #0
    62f0:	mov	x1, x20
    62f4:	mov	w0, w19
    62f8:	bl	2510 <waitpid@plt>
    62fc:	cmn	w0, #0x1
    6300:	b.eq	62ec <check_waitpid_and_exit@@Base+0x1c>  // b.none
    6304:	mov	w1, #0x0                   	// #0
    6308:	ldr	w0, [sp, #44]
    630c:	bl	5398 <srunner_print@@Base+0x28>
    6310:	cbnz	w0, 631c <check_waitpid_and_exit@@Base+0x4c>
    6314:	mov	w0, #0x0                   	// #0
    6318:	bl	2160 <exit@plt>
    631c:	mov	w0, #0x1                   	// #1
    6320:	bl	2160 <exit@plt>
    6324:	stp	x29, x30, [sp, #-336]!
    6328:	mov	x29, sp
    632c:	stp	x19, x20, [sp, #16]
    6330:	stp	x21, x22, [sp, #32]
    6334:	stp	x23, x24, [sp, #48]
    6338:	str	x25, [sp, #64]
    633c:	mov	x22, x0
    6340:	str	x1, [sp, #280]
    6344:	str	x2, [sp, #288]
    6348:	str	x3, [sp, #296]
    634c:	str	x4, [sp, #304]
    6350:	str	x5, [sp, #312]
    6354:	str	x6, [sp, #320]
    6358:	str	x7, [sp, #328]
    635c:	str	q0, [sp, #144]
    6360:	str	q1, [sp, #160]
    6364:	str	q2, [sp, #176]
    6368:	str	q3, [sp, #192]
    636c:	str	q4, [sp, #208]
    6370:	str	q5, [sp, #224]
    6374:	str	q6, [sp, #240]
    6378:	str	q7, [sp, #256]
    637c:	mov	x0, #0x64                  	// #100
    6380:	bl	32f4 <_ck_assert_failed@@Base+0x274>
    6384:	mov	x19, x0
    6388:	mov	x20, #0x64                  	// #100
    638c:	add	x25, sp, #0x110
    6390:	mov	w24, #0xffffffc8            	// #-56
    6394:	mov	w23, #0xffffff80            	// #-128
    6398:	add	x21, sp, #0x50
    639c:	b	63b8 <check_waitpid_and_exit@@Base+0xe8>
    63a0:	sxtw	x1, w0
    63a4:	add	x20, x1, #0x1
    63a8:	mov	x1, x20
    63ac:	mov	x0, x19
    63b0:	bl	3334 <_ck_assert_failed@@Base+0x2b4>
    63b4:	mov	x19, x0
    63b8:	add	x0, sp, #0x150
    63bc:	str	x0, [sp, #112]
    63c0:	str	x0, [sp, #120]
    63c4:	str	x25, [sp, #128]
    63c8:	str	w24, [sp, #136]
    63cc:	str	w23, [sp, #140]
    63d0:	ldp	x0, x1, [sp, #112]
    63d4:	stp	x0, x1, [x21]
    63d8:	ldp	x0, x1, [sp, #128]
    63dc:	stp	x0, x1, [x21, #16]
    63e0:	mov	x3, x21
    63e4:	mov	x2, x22
    63e8:	mov	x1, x20
    63ec:	mov	x0, x19
    63f0:	bl	2480 <vsnprintf@plt>
    63f4:	tbnz	w0, #31, 641c <check_waitpid_and_exit@@Base+0x14c>
    63f8:	cmp	w0, w20
    63fc:	b.ge	63a0 <check_waitpid_and_exit@@Base+0xd0>  // b.tcont
    6400:	mov	x0, x19
    6404:	ldp	x19, x20, [sp, #16]
    6408:	ldp	x21, x22, [sp, #32]
    640c:	ldp	x23, x24, [sp, #48]
    6410:	ldr	x25, [sp, #64]
    6414:	ldp	x29, x30, [sp], #336
    6418:	ret
    641c:	lsl	x20, x20, #1
    6420:	b	63a8 <check_waitpid_and_exit@@Base+0xd8>
    6424:	sub	sp, sp, #0x20
    6428:	stp	x29, x30, [sp, #16]
    642c:	add	x29, sp, #0x10
    6430:	ldr	w4, [x0]
    6434:	adrp	x7, 6000 <srunner_run_tagged@@Base+0x6a8>
    6438:	add	x1, x7, #0xcb0
    643c:	adrp	x7, 6000 <srunner_run_tagged@@Base+0x6a8>
    6440:	add	x7, x7, #0xf98
    6444:	cmp	w4, #0x3
    6448:	csel	x7, x7, x1, eq  // eq = none
    644c:	ldr	x1, [x0, #8]
    6450:	ldr	w2, [x0, #16]
    6454:	ldr	w3, [x0, #4]
    6458:	cmp	w3, #0x2
    645c:	b.eq	6494 <check_waitpid_and_exit@@Base+0x1c4>  // b.none
    6460:	adrp	x3, 6000 <srunner_run_tagged@@Base+0x6a8>
    6464:	add	x3, x3, #0x798
    6468:	ldr	x4, [x0, #48]
    646c:	str	x4, [sp]
    6470:	ldr	w6, [x0, #20]
    6474:	ldr	x5, [x0, #40]
    6478:	ldr	x4, [x0, #32]
    647c:	adrp	x0, 6000 <srunner_run_tagged@@Base+0x6a8>
    6480:	add	x0, x0, #0xfc8
    6484:	bl	6324 <check_waitpid_and_exit@@Base+0x54>
    6488:	ldp	x29, x30, [sp, #16]
    648c:	add	sp, sp, #0x20
    6490:	ret
    6494:	cmp	w4, #0x1
    6498:	b.eq	64b8 <check_waitpid_and_exit@@Base+0x1e8>  // b.none
    649c:	cmp	w4, #0x2
    64a0:	b.eq	64c4 <check_waitpid_and_exit@@Base+0x1f4>  // b.none
    64a4:	adrp	x3, 6000 <srunner_run_tagged@@Base+0x6a8>
    64a8:	add	x3, x3, #0xfb8
    64ac:	cmp	w4, #0x3
    64b0:	csel	x3, x3, xzr, eq  // eq = none
    64b4:	b	6468 <check_waitpid_and_exit@@Base+0x198>
    64b8:	adrp	x3, 6000 <srunner_run_tagged@@Base+0x6a8>
    64bc:	add	x3, x3, #0xfc0
    64c0:	b	6468 <check_waitpid_and_exit@@Base+0x198>
    64c4:	adrp	x3, 6000 <srunner_run_tagged@@Base+0x6a8>
    64c8:	add	x3, x3, #0xfb0
    64cc:	b	6468 <check_waitpid_and_exit@@Base+0x198>
    64d0:	stp	x29, x30, [sp, #-16]!
    64d4:	mov	x29, sp
    64d8:	ldr	w2, [x0]
    64dc:	adrp	x1, 6000 <srunner_run_tagged@@Base+0x6a8>
    64e0:	add	x1, x1, #0xcb0
    64e4:	adrp	x3, 6000 <srunner_run_tagged@@Base+0x6a8>
    64e8:	add	x3, x3, #0xf98
    64ec:	cmp	w2, #0x3
    64f0:	ldr	x4, [x0, #48]
    64f4:	csel	x3, x3, x1, eq  // eq = none
    64f8:	ldr	w2, [x0, #16]
    64fc:	ldr	x1, [x0, #8]
    6500:	adrp	x0, 6000 <srunner_run_tagged@@Base+0x6a8>
    6504:	add	x0, x0, #0xfe0
    6508:	bl	6324 <check_waitpid_and_exit@@Base+0x54>
    650c:	ldp	x29, x30, [sp], #16
    6510:	ret
    6514:	stp	x29, x30, [sp, #-16]!
    6518:	mov	x29, sp
    651c:	ldr	x2, [x0, #8]
    6520:	ldr	w3, [x2, #4]
    6524:	cbnz	w3, 6534 <check_waitpid_and_exit@@Base+0x264>
    6528:	ldr	w0, [x2, #8]
    652c:	mov	w1, #0x64                  	// #100
    6530:	cbz	w0, 6564 <check_waitpid_and_exit@@Base+0x294>
    6534:	ldr	w1, [x2]
    6538:	cbz	w1, 6564 <check_waitpid_and_exit@@Base+0x294>
    653c:	ldr	w0, [x2, #8]
    6540:	add	w0, w3, w0
    6544:	sub	w0, w1, w0
    6548:	scvtf	s0, w0
    654c:	scvtf	s1, w1
    6550:	fdiv	s0, s0, s1
    6554:	mov	w0, #0x42c80000            	// #1120403456
    6558:	fmov	s1, w0
    655c:	fmul	s0, s0, s1
    6560:	fcvtzs	w1, s0
    6564:	ldr	w4, [x2, #8]
    6568:	ldr	w2, [x2]
    656c:	adrp	x0, 6000 <srunner_run_tagged@@Base+0x6a8>
    6570:	add	x0, x0, #0xff0
    6574:	bl	6324 <check_waitpid_and_exit@@Base+0x54>
    6578:	ldp	x29, x30, [sp], #16
    657c:	ret
    6580:	stp	x29, x30, [sp, #-16]!
    6584:	mov	x29, sp
    6588:	adrp	x3, 7000 <check_waitpid_and_exit@@Base+0xd30>
    658c:	add	x3, x3, #0x38
    6590:	mov	w2, #0x1a                  	// #26
    6594:	adrp	x1, 7000 <check_waitpid_and_exit@@Base+0xd30>
    6598:	add	x1, x1, #0x20
    659c:	adrp	x0, 7000 <check_waitpid_and_exit@@Base+0xd30>
    65a0:	add	x0, x0, #0x30
    65a4:	bl	24c0 <__assert_fail@plt>

Disassembly of section .fini:

00000000000065a8 <.fini>:
    65a8:	stp	x29, x30, [sp, #-16]!
    65ac:	mov	x29, sp
    65b0:	ldp	x29, x30, [sp], #16
    65b4:	ret
