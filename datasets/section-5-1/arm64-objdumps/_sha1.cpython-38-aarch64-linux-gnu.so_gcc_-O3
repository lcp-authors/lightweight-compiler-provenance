
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//_sha1.cpython-38-aarch64-linux-gnu.so_gcc_-O3:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000000d00 <.init>:
 d00:	stp	x29, x30, [sp, #-16]!
 d04:	mov	x29, sp
 d08:	bl	e70 <_Py_strhex@plt+0x10>
 d0c:	ldp	x29, x30, [sp], #16
 d10:	ret

Disassembly of section .plt:

0000000000000d20 <memcpy@plt-0x20>:
 d20:	stp	x16, x30, [sp, #-16]!
 d24:	adrp	x16, 12000 <PyInit__sha1@@Base+0xf9f8>
 d28:	ldr	x17, [x16, #4088]
 d2c:	add	x16, x16, #0xff8
 d30:	br	x17
 d34:	nop
 d38:	nop
 d3c:	nop

0000000000000d40 <memcpy@plt>:
 d40:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 d44:	ldr	x17, [x16]
 d48:	add	x16, x16, #0x0
 d4c:	br	x17

0000000000000d50 <PyBuffer_Release@plt>:
 d50:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 d54:	ldr	x17, [x16, #8]
 d58:	add	x16, x16, #0x8
 d5c:	br	x17

0000000000000d60 <__cxa_finalize@plt>:
 d60:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 d64:	ldr	x17, [x16, #16]
 d68:	add	x16, x16, #0x10
 d6c:	br	x17

0000000000000d70 <PyBytes_FromStringAndSize@plt>:
 d70:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 d74:	ldr	x17, [x16, #24]
 d78:	add	x16, x16, #0x18
 d7c:	br	x17

0000000000000d80 <_Py_Dealloc@plt>:
 d80:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 d84:	ldr	x17, [x16, #32]
 d88:	add	x16, x16, #0x20
 d8c:	br	x17

0000000000000d90 <_PyArg_UnpackKeywords@plt>:
 d90:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 d94:	ldr	x17, [x16, #40]
 d98:	add	x16, x16, #0x28
 d9c:	br	x17

0000000000000da0 <PyErr_SetString@plt>:
 da0:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 da4:	ldr	x17, [x16, #48]
 da8:	add	x16, x16, #0x30
 dac:	br	x17

0000000000000db0 <memset@plt>:
 db0:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 db4:	ldr	x17, [x16, #56]
 db8:	add	x16, x16, #0x38
 dbc:	br	x17

0000000000000dc0 <PyObject_Free@plt>:
 dc0:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 dc4:	ldr	x17, [x16, #64]
 dc8:	add	x16, x16, #0x40
 dcc:	br	x17

0000000000000dd0 <PyType_Ready@plt>:
 dd0:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 dd4:	ldr	x17, [x16, #72]
 dd8:	add	x16, x16, #0x48
 ddc:	br	x17

0000000000000de0 <PyLong_FromLong@plt>:
 de0:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 de4:	ldr	x17, [x16, #80]
 de8:	add	x16, x16, #0x50
 dec:	br	x17

0000000000000df0 <__gmon_start__@plt>:
 df0:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 df4:	ldr	x17, [x16, #88]
 df8:	add	x16, x16, #0x58
 dfc:	br	x17

0000000000000e00 <PyErr_Occurred@plt>:
 e00:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 e04:	ldr	x17, [x16, #96]
 e08:	add	x16, x16, #0x60
 e0c:	br	x17

0000000000000e10 <PyModule_Create2@plt>:
 e10:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 e14:	ldr	x17, [x16, #104]
 e18:	add	x16, x16, #0x68
 e1c:	br	x17

0000000000000e20 <PyObject_GetBuffer@plt>:
 e20:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 e24:	ldr	x17, [x16, #112]
 e28:	add	x16, x16, #0x70
 e2c:	br	x17

0000000000000e30 <_PyObject_New@plt>:
 e30:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 e34:	ldr	x17, [x16, #120]
 e38:	add	x16, x16, #0x78
 e3c:	br	x17

0000000000000e40 <PyModule_AddObject@plt>:
 e40:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 e44:	ldr	x17, [x16, #128]
 e48:	add	x16, x16, #0x80
 e4c:	br	x17

0000000000000e50 <PyUnicode_FromStringAndSize@plt>:
 e50:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 e54:	ldr	x17, [x16, #136]
 e58:	add	x16, x16, #0x88
 e5c:	br	x17

0000000000000e60 <_Py_strhex@plt>:
 e60:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 e64:	ldr	x17, [x16, #144]
 e68:	add	x16, x16, #0x90
 e6c:	br	x17

Disassembly of section .text:

0000000000000e70 <PyInit__sha1@@Base-0x1798>:
     e70:	adrp	x0, 12000 <PyInit__sha1@@Base+0xf9f8>
     e74:	ldr	x0, [x0, #4040]
     e78:	cbz	x0, e80 <_Py_strhex@plt+0x20>
     e7c:	b	df0 <__gmon_start__@plt>
     e80:	ret
     e84:	nop
     e88:	adrp	x0, 13000 <PyInit__sha1@@Base+0x109f8>
     e8c:	add	x0, x0, #0x468
     e90:	adrp	x1, 13000 <PyInit__sha1@@Base+0x109f8>
     e94:	add	x1, x1, #0x468
     e98:	cmp	x1, x0
     e9c:	b.eq	eb4 <_Py_strhex@plt+0x54>  // b.none
     ea0:	adrp	x1, 12000 <PyInit__sha1@@Base+0xf9f8>
     ea4:	ldr	x1, [x1, #4008]
     ea8:	cbz	x1, eb4 <_Py_strhex@plt+0x54>
     eac:	mov	x16, x1
     eb0:	br	x16
     eb4:	ret
     eb8:	adrp	x0, 13000 <PyInit__sha1@@Base+0x109f8>
     ebc:	add	x0, x0, #0x468
     ec0:	adrp	x1, 13000 <PyInit__sha1@@Base+0x109f8>
     ec4:	add	x1, x1, #0x468
     ec8:	sub	x1, x1, x0
     ecc:	lsr	x2, x1, #63
     ed0:	add	x1, x2, x1, asr #3
     ed4:	cmp	xzr, x1, asr #1
     ed8:	asr	x1, x1, #1
     edc:	b.eq	ef4 <_Py_strhex@plt+0x94>  // b.none
     ee0:	adrp	x2, 12000 <PyInit__sha1@@Base+0xf9f8>
     ee4:	ldr	x2, [x2, #4064]
     ee8:	cbz	x2, ef4 <_Py_strhex@plt+0x94>
     eec:	mov	x16, x2
     ef0:	br	x16
     ef4:	ret
     ef8:	stp	x29, x30, [sp, #-32]!
     efc:	mov	x29, sp
     f00:	str	x19, [sp, #16]
     f04:	adrp	x19, 13000 <PyInit__sha1@@Base+0x109f8>
     f08:	ldrb	w0, [x19, #1128]
     f0c:	cbnz	w0, f34 <_Py_strhex@plt+0xd4>
     f10:	adrp	x0, 12000 <PyInit__sha1@@Base+0xf9f8>
     f14:	ldr	x0, [x0, #4016]
     f18:	cbz	x0, f28 <_Py_strhex@plt+0xc8>
     f1c:	adrp	x0, 13000 <PyInit__sha1@@Base+0x109f8>
     f20:	ldr	x0, [x0, #152]
     f24:	bl	d60 <__cxa_finalize@plt>
     f28:	bl	e88 <_Py_strhex@plt+0x28>
     f2c:	mov	w0, #0x1                   	// #1
     f30:	strb	w0, [x19, #1128]
     f34:	ldr	x19, [sp, #16]
     f38:	ldp	x29, x30, [sp], #32
     f3c:	ret
     f40:	b	eb8 <_Py_strhex@plt+0x58>
     f44:	nop
     f48:	ld4	{v4.16b-v7.16b}, [x1]
     f4c:	sub	sp, sp, #0x140
     f50:	ldp	w7, w9, [x0, #8]
     f54:	add	x2, sp, #0x40
     f58:	uxtl2	v2.8h, v4.16b
     f5c:	ldr	w11, [x0, #24]
     f60:	uxtl2	v0.8h, v5.16b
     f64:	mov	w12, #0x7                   	// #7
     f68:	uxtl	v16.8h, v4.8b
     f6c:	uxtl	v1.8h, v5.8b
     f70:	uxtl	v21.4s, v2.4h
     f74:	uxtl2	v18.4s, v2.8h
     f78:	uxtl	v2.4s, v0.4h
     f7c:	uxtl2	v0.4s, v0.8h
     f80:	uxtl2	v22.4s, v16.8h
     f84:	uxtl2	v3.4s, v1.8h
     f88:	uxtl	v17.4s, v16.4h
     f8c:	uxtl	v1.4s, v1.4h
     f90:	uxtl	v16.8h, v6.8b
     f94:	uxtl2	v20.8h, v7.16b
     f98:	uxtl2	v5.8h, v6.16b
     f9c:	shl	v18.4s, v18.4s, #24
     fa0:	shl	v0.4s, v0.4s, #16
     fa4:	uxtl	v19.8h, v7.8b
     fa8:	shl	v6.4s, v17.4s, #24
     fac:	shl	v22.4s, v22.4s, #24
     fb0:	shl	v3.4s, v3.4s, #16
     fb4:	shl	v21.4s, v21.4s, #24
     fb8:	shl	v2.4s, v2.4s, #16
     fbc:	shl	v1.4s, v1.4s, #16
     fc0:	shl	v4.8h, v16.8h, #8
     fc4:	shl	v5.8h, v5.8h, #8
     fc8:	uxtl	v16.4s, v20.4h
     fcc:	orr	v0.16b, v0.16b, v18.16b
     fd0:	uxtl2	v20.4s, v20.8h
     fd4:	uxtl2	v7.4s, v19.8h
     fd8:	orr	v1.16b, v1.16b, v6.16b
     fdc:	orr	v3.16b, v3.16b, v22.16b
     fe0:	orr	v2.16b, v2.16b, v21.16b
     fe4:	uxtl	v19.4s, v19.4h
     fe8:	uxtl	v6.4s, v5.4h
     fec:	orr	v0.16b, v0.16b, v20.16b
     ff0:	uxtl2	v5.4s, v5.8h
     ff4:	orr	v3.16b, v3.16b, v7.16b
     ff8:	orr	v2.16b, v2.16b, v16.16b
     ffc:	uxtl2	v7.4s, v4.8h
    1000:	orr	v1.16b, v1.16b, v19.16b
    1004:	uxtl	v4.4s, v4.4h
    1008:	orr	v0.16b, v0.16b, v5.16b
    100c:	orr	v2.16b, v2.16b, v6.16b
    1010:	orr	v3.16b, v3.16b, v7.16b
    1014:	orr	v1.16b, v1.16b, v4.16b
    1018:	mov	v5.8b, v0.8b
    101c:	ldp	w10, w8, [x0, #16]
    1020:	mov	v4.8b, v3.8b
    1024:	stp	q1, q3, [sp]
    1028:	mov	v3.8b, v2.8b
    102c:	ldr	d1, [sp, #8]
    1030:	stp	q2, q0, [sp, #32]
    1034:	ldr	d2, [sp, #24]
    1038:	ldr	d16, [sp, #40]
    103c:	ldr	d6, [sp, #56]
    1040:	ldur	d0, [x2, #-12]
    1044:	add	w12, w12, #0x7
    1048:	ldp	d22, d21, [x2, #-64]
    104c:	add	x6, x2, #0x2c
    1050:	eor	v0.8b, v0.8b, v3.8b
    1054:	ldur	d7, [x2, #-16]
    1058:	ldp	d20, d19, [x2, #-48]
    105c:	add	x5, x2, #0x18
    1060:	ldp	d18, d17, [x2, #-32]
    1064:	eor	v0.8b, v0.8b, v1.8b
    1068:	mov	x3, x2
    106c:	sub	x4, x2, #0x8
    1070:	cmp	w12, #0x23
    1074:	add	x2, x2, #0x38
    1078:	eor	v0.8b, v0.8b, v22.8b
    107c:	shl	v1.2s, v0.2s, #1
    1080:	ushr	v0.2s, v0.2s, #31
    1084:	orr	v1.8b, v1.8b, v0.8b
    1088:	stur	d1, [x2, #-56]
    108c:	ldur	d0, [x2, #-60]
    1090:	eor	v0.8b, v0.8b, v16.8b
    1094:	eor	v0.8b, v0.8b, v4.8b
    1098:	eor	v0.8b, v0.8b, v21.8b
    109c:	ushr	v4.2s, v0.2s, #31
    10a0:	shl	v0.2s, v0.2s, #1
    10a4:	orr	v4.8b, v4.8b, v0.8b
    10a8:	stur	d4, [x2, #-48]
    10ac:	ldur	d0, [x2, #-52]
    10b0:	eor	v0.8b, v0.8b, v5.8b
    10b4:	eor	v0.8b, v0.8b, v2.8b
    10b8:	eor	v0.8b, v0.8b, v20.8b
    10bc:	ushr	v2.2s, v0.2s, #31
    10c0:	shl	v0.2s, v0.2s, #1
    10c4:	orr	v2.8b, v2.8b, v0.8b
    10c8:	stur	d2, [x2, #-40]
    10cc:	ldur	d0, [x2, #-44]
    10d0:	eor	v0.8b, v0.8b, v6.8b
    10d4:	eor	v0.8b, v0.8b, v3.8b
    10d8:	eor	v0.8b, v0.8b, v19.8b
    10dc:	ushr	v3.2s, v0.2s, #31
    10e0:	shl	v0.2s, v0.2s, #1
    10e4:	orr	v3.8b, v3.8b, v0.8b
    10e8:	stur	d3, [x2, #-32]
    10ec:	ldur	d0, [x2, #-36]
    10f0:	eor	v0.8b, v0.8b, v16.8b
    10f4:	eor	v0.8b, v0.8b, v18.8b
    10f8:	eor	v0.8b, v0.8b, v1.8b
    10fc:	ushr	v16.2s, v0.2s, #31
    1100:	shl	v0.2s, v0.2s, #1
    1104:	orr	v16.8b, v16.8b, v0.8b
    1108:	stur	d16, [x2, #-24]
    110c:	ldur	d0, [x2, #-28]
    1110:	eor	v0.8b, v0.8b, v5.8b
    1114:	eor	v0.8b, v0.8b, v17.8b
    1118:	eor	v0.8b, v0.8b, v4.8b
    111c:	shl	v5.2s, v0.2s, #1
    1120:	ushr	v0.2s, v0.2s, #31
    1124:	orr	v5.8b, v5.8b, v0.8b
    1128:	stur	d5, [x2, #-16]
    112c:	ldur	d0, [x2, #-20]
    1130:	eor	v0.8b, v0.8b, v6.8b
    1134:	eor	v0.8b, v0.8b, v7.8b
    1138:	eor	v0.8b, v0.8b, v2.8b
    113c:	shl	v6.2s, v0.2s, #1
    1140:	ushr	v0.2s, v0.2s, #31
    1144:	orr	v6.8b, v6.8b, v0.8b
    1148:	stur	d6, [x2, #-8]
    114c:	b.ne	1040 <_Py_strhex@plt+0x1e0>  // b.any
    1150:	mov	x1, #0x0                   	// #0
    1154:	nop
    1158:	ldr	d0, [x6, x1, lsl #3]
    115c:	ldr	d3, [x5, x1, lsl #3]
    1160:	ldr	d2, [x3, x1, lsl #3]
    1164:	ldr	d1, [x4, x1, lsl #3]
    1168:	eor	v0.8b, v0.8b, v3.8b
    116c:	eor	v0.8b, v0.8b, v2.8b
    1170:	eor	v0.8b, v0.8b, v1.8b
    1174:	ushr	v1.2s, v0.2s, #31
    1178:	shl	v0.2s, v0.2s, #1
    117c:	orr	v0.8b, v1.8b, v0.8b
    1180:	str	d0, [x2, x1, lsl #3]
    1184:	add	x1, x1, #0x1
    1188:	cmp	w1, #0x4
    118c:	b.ne	1158 <_Py_strhex@plt+0x2f8>  // b.any
    1190:	ldp	w5, w12, [sp]
    1194:	ror	w6, w9, #2
    1198:	eor	w2, w10, w8
    119c:	ror	w4, w7, #27
    11a0:	mov	w1, #0x7999                	// #31129
    11a4:	eor	w3, w10, w6
    11a8:	movk	w1, #0x5a82, lsl #16
    11ac:	add	w4, w4, w11
    11b0:	add	w5, w5, w1
    11b4:	and	w2, w2, w9
    11b8:	add	w4, w4, w5
    11bc:	and	w3, w3, w7
    11c0:	eor	w2, w2, w8
    11c4:	ror	w5, w7, #2
    11c8:	add	w2, w2, w4
    11cc:	eor	w3, w3, w10
    11d0:	add	w12, w12, w1
    11d4:	eor	w4, w5, w6
    11d8:	add	w3, w3, w8
    11dc:	ldr	w14, [sp, #8]
    11e0:	add	w3, w3, w12
    11e4:	ror	w13, w2, #27
    11e8:	and	w4, w4, w2
    11ec:	add	w13, w13, w3
    11f0:	eor	w4, w4, w6
    11f4:	ror	w2, w2, #2
    11f8:	eor	w3, w2, w5
    11fc:	add	w14, w14, w1
    1200:	add	w4, w4, w10
    1204:	and	w3, w3, w13
    1208:	add	w4, w4, w14
    120c:	ror	w12, w13, #27
    1210:	ldr	w14, [sp, #12]
    1214:	ror	w13, w13, #2
    1218:	add	w12, w12, w4
    121c:	eor	w3, w3, w5
    1220:	eor	w4, w13, w2
    1224:	add	w3, w3, w6
    1228:	add	w6, w14, w1
    122c:	and	w4, w4, w12
    1230:	ldr	w14, [sp, #16]
    1234:	add	w3, w3, w6
    1238:	eor	w4, w4, w2
    123c:	ror	w6, w12, #27
    1240:	add	w6, w6, w3
    1244:	ror	w12, w12, #2
    1248:	eor	w3, w12, w13
    124c:	add	w4, w4, w5
    1250:	add	w5, w14, w1
    1254:	and	w3, w3, w6
    1258:	ldr	w14, [sp, #20]
    125c:	add	w4, w4, w5
    1260:	eor	w3, w3, w13
    1264:	ror	w5, w6, #27
    1268:	add	w5, w5, w4
    126c:	ror	w6, w6, #2
    1270:	add	w4, w14, w1
    1274:	add	w2, w3, w2
    1278:	eor	w3, w6, w12
    127c:	ldr	w14, [sp, #24]
    1280:	add	w2, w2, w4
    1284:	and	w3, w3, w5
    1288:	eor	w3, w3, w12
    128c:	ror	w4, w5, #27
    1290:	add	w4, w4, w2
    1294:	ror	w5, w5, #2
    1298:	eor	w2, w5, w6
    129c:	add	w3, w3, w13
    12a0:	add	w13, w14, w1
    12a4:	and	w2, w2, w4
    12a8:	ldr	w14, [sp, #28]
    12ac:	add	w3, w3, w13
    12b0:	eor	w2, w2, w6
    12b4:	ror	w13, w4, #27
    12b8:	add	w13, w13, w3
    12bc:	ror	w4, w4, #2
    12c0:	eor	w3, w4, w5
    12c4:	add	w2, w2, w12
    12c8:	add	w12, w14, w1
    12cc:	and	w3, w3, w13
    12d0:	ldr	w14, [sp, #32]
    12d4:	add	w2, w2, w12
    12d8:	eor	w3, w3, w5
    12dc:	ror	w12, w13, #27
    12e0:	add	w12, w12, w2
    12e4:	ror	w13, w13, #2
    12e8:	eor	w2, w13, w4
    12ec:	add	w3, w3, w6
    12f0:	add	w6, w14, w1
    12f4:	and	w2, w2, w12
    12f8:	ldr	w14, [sp, #36]
    12fc:	add	w3, w3, w6
    1300:	eor	w2, w2, w4
    1304:	ror	w6, w12, #27
    1308:	add	w6, w6, w3
    130c:	ror	w12, w12, #2
    1310:	eor	w3, w12, w13
    1314:	add	w2, w2, w5
    1318:	add	w5, w14, w1
    131c:	and	w3, w3, w6
    1320:	ldr	w14, [sp, #40]
    1324:	add	w2, w2, w5
    1328:	eor	w3, w3, w13
    132c:	ror	w5, w6, #27
    1330:	add	w5, w5, w2
    1334:	ror	w6, w6, #2
    1338:	eor	w2, w6, w12
    133c:	add	w3, w3, w4
    1340:	add	w4, w14, w1
    1344:	and	w2, w2, w5
    1348:	ldr	w14, [sp, #44]
    134c:	add	w3, w3, w4
    1350:	eor	w2, w2, w12
    1354:	ror	w4, w5, #27
    1358:	add	w4, w4, w3
    135c:	ror	w5, w5, #2
    1360:	eor	w3, w5, w6
    1364:	add	w2, w2, w13
    1368:	add	w13, w14, w1
    136c:	and	w3, w3, w4
    1370:	ldr	w14, [sp, #48]
    1374:	add	w2, w2, w13
    1378:	eor	w3, w3, w6
    137c:	ror	w13, w4, #27
    1380:	add	w13, w13, w2
    1384:	ror	w4, w4, #2
    1388:	eor	w2, w4, w5
    138c:	add	w3, w3, w12
    1390:	add	w12, w14, w1
    1394:	and	w2, w2, w13
    1398:	ldr	w14, [sp, #52]
    139c:	add	w3, w3, w12
    13a0:	eor	w2, w2, w5
    13a4:	ror	w12, w13, #27
    13a8:	add	w12, w12, w3
    13ac:	ror	w13, w13, #2
    13b0:	eor	w3, w13, w4
    13b4:	add	w2, w2, w6
    13b8:	add	w6, w14, w1
    13bc:	and	w3, w3, w12
    13c0:	ldr	w14, [sp, #56]
    13c4:	add	w2, w2, w6
    13c8:	eor	w3, w3, w4
    13cc:	ror	w6, w12, #27
    13d0:	add	w6, w6, w2
    13d4:	ror	w12, w12, #2
    13d8:	eor	w2, w12, w13
    13dc:	add	w3, w3, w5
    13e0:	add	w5, w14, w1
    13e4:	and	w2, w2, w6
    13e8:	ldr	w14, [sp, #60]
    13ec:	add	w3, w3, w5
    13f0:	eor	w2, w2, w13
    13f4:	ror	w5, w6, #27
    13f8:	add	w5, w5, w3
    13fc:	ror	w6, w6, #2
    1400:	eor	w3, w6, w12
    1404:	add	w2, w2, w4
    1408:	add	w4, w14, w1
    140c:	and	w3, w3, w5
    1410:	ldr	w14, [sp, #64]
    1414:	add	w2, w2, w4
    1418:	eor	w3, w3, w12
    141c:	ror	w4, w5, #27
    1420:	add	w4, w4, w2
    1424:	ror	w5, w5, #2
    1428:	eor	w2, w6, w5
    142c:	add	w3, w3, w13
    1430:	add	w13, w14, w1
    1434:	and	w2, w2, w4
    1438:	add	w3, w3, w13
    143c:	ror	w14, w4, #27
    1440:	ldr	w13, [sp, #68]
    1444:	add	w14, w14, w3
    1448:	eor	w2, w2, w6
    144c:	ror	w4, w4, #2
    1450:	add	w2, w2, w12
    1454:	add	w12, w13, w1
    1458:	eor	w3, w5, w4
    145c:	add	w2, w2, w12
    1460:	ror	w13, w14, #27
    1464:	add	w13, w13, w2
    1468:	ror	w12, w14, #2
    146c:	ldr	w15, [sp, #72]
    1470:	eor	w2, w4, w12
    1474:	and	w3, w3, w14
    1478:	and	w2, w2, w13
    147c:	eor	w3, w3, w5
    1480:	eor	w2, w2, w4
    1484:	add	w3, w3, w6
    1488:	add	w6, w15, w1
    148c:	add	w3, w3, w6
    1490:	add	w2, w2, w5
    1494:	ldr	w6, [sp, #76]
    1498:	ror	w5, w13, #2
    149c:	ror	w14, w13, #27
    14a0:	add	w14, w14, w3
    14a4:	eor	w3, w12, w5
    14a8:	add	w1, w6, w1
    14ac:	eor	w3, w3, w14
    14b0:	add	w1, w2, w1
    14b4:	add	w3, w3, w4
    14b8:	ldp	w2, w4, [sp, #80]
    14bc:	ror	w6, w14, #27
    14c0:	add	w6, w6, w1
    14c4:	mov	w1, #0xeba1                	// #60321
    14c8:	movk	w1, #0x6ed9, lsl #16
    14cc:	ror	w14, w14, #2
    14d0:	add	w2, w2, w1
    14d4:	ror	w13, w6, #27
    14d8:	add	w3, w3, w2
    14dc:	eor	w2, w5, w14
    14e0:	eor	w2, w2, w6
    14e4:	add	w13, w13, w3
    14e8:	add	w2, w2, w12
    14ec:	ror	w6, w6, #2
    14f0:	add	w3, w4, w1
    14f4:	ldr	w4, [sp, #88]
    14f8:	add	w2, w2, w3
    14fc:	eor	w3, w6, w14
    1500:	eor	w3, w3, w13
    1504:	ror	w12, w13, #27
    1508:	add	w12, w12, w2
    150c:	ror	w13, w13, #2
    1510:	add	w2, w4, w1
    1514:	add	w3, w3, w5
    1518:	add	w3, w3, w2
    151c:	eor	w2, w13, w6
    1520:	eor	w2, w2, w12
    1524:	ror	w5, w12, #27
    1528:	add	w2, w2, w14
    152c:	add	w5, w5, w3
    1530:	ldp	w4, w14, [sp, #92]
    1534:	ror	w12, w12, #2
    1538:	add	w3, w4, w1
    153c:	ror	w4, w5, #27
    1540:	add	w2, w2, w3
    1544:	eor	w3, w12, w13
    1548:	eor	w3, w3, w5
    154c:	add	w4, w4, w2
    1550:	add	w3, w3, w6
    1554:	ror	w5, w5, #2
    1558:	add	w2, w14, w1
    155c:	ldr	w14, [sp, #100]
    1560:	add	w3, w3, w2
    1564:	eor	w2, w5, w12
    1568:	eor	w2, w2, w4
    156c:	ror	w6, w4, #27
    1570:	add	w6, w6, w3
    1574:	ror	w4, w4, #2
    1578:	add	w3, w14, w1
    157c:	add	w2, w2, w13
    1580:	ldr	w14, [sp, #104]
    1584:	add	w2, w2, w3
    1588:	eor	w3, w4, w5
    158c:	ror	w13, w6, #27
    1590:	eor	w3, w3, w6
    1594:	add	w13, w13, w2
    1598:	add	w3, w3, w12
    159c:	ror	w6, w6, #2
    15a0:	add	w2, w14, w1
    15a4:	ldr	w14, [sp, #108]
    15a8:	add	w3, w3, w2
    15ac:	eor	w2, w6, w4
    15b0:	eor	w2, w2, w13
    15b4:	ror	w12, w13, #27
    15b8:	add	w12, w12, w3
    15bc:	ror	w13, w13, #2
    15c0:	add	w3, w14, w1
    15c4:	add	w2, w2, w5
    15c8:	ldr	w14, [sp, #112]
    15cc:	add	w2, w2, w3
    15d0:	eor	w3, w13, w6
    15d4:	ror	w5, w12, #27
    15d8:	eor	w3, w3, w12
    15dc:	add	w5, w5, w2
    15e0:	add	w3, w3, w4
    15e4:	ror	w12, w12, #2
    15e8:	add	w2, w14, w1
    15ec:	ldr	w14, [sp, #116]
    15f0:	add	w3, w3, w2
    15f4:	eor	w2, w12, w13
    15f8:	eor	w2, w2, w5
    15fc:	ror	w4, w5, #27
    1600:	add	w4, w4, w3
    1604:	ror	w5, w5, #2
    1608:	add	w3, w14, w1
    160c:	add	w2, w2, w6
    1610:	add	w2, w2, w3
    1614:	eor	w3, w5, w12
    1618:	eor	w3, w3, w4
    161c:	ror	w6, w4, #27
    1620:	add	w3, w3, w13
    1624:	add	w6, w6, w2
    1628:	ldp	w14, w13, [sp, #120]
    162c:	ror	w4, w4, #2
    1630:	add	w2, w14, w1
    1634:	ror	w14, w6, #27
    1638:	add	w3, w3, w2
    163c:	eor	w2, w4, w5
    1640:	add	w14, w14, w3
    1644:	eor	w2, w2, w6
    1648:	add	w3, w13, w1
    164c:	ror	w6, w6, #2
    1650:	add	w2, w2, w12
    1654:	ldr	w13, [sp, #128]
    1658:	add	w2, w2, w3
    165c:	ror	w12, w14, #27
    1660:	eor	w3, w6, w4
    1664:	add	w12, w12, w2
    1668:	eor	w3, w3, w14
    166c:	add	w2, w13, w1
    1670:	add	w3, w3, w5
    1674:	ror	w14, w14, #2
    1678:	ldr	w13, [sp, #132]
    167c:	add	w3, w3, w2
    1680:	eor	w2, w14, w6
    1684:	ror	w5, w12, #27
    1688:	add	w5, w5, w3
    168c:	eor	w2, w2, w12
    1690:	add	w3, w13, w1
    1694:	ror	w12, w12, #2
    1698:	add	w2, w2, w4
    169c:	ldr	w13, [sp, #136]
    16a0:	add	w2, w2, w3
    16a4:	ror	w4, w5, #27
    16a8:	eor	w3, w12, w14
    16ac:	add	w4, w4, w2
    16b0:	eor	w3, w3, w5
    16b4:	add	w2, w13, w1
    16b8:	add	w3, w3, w6
    16bc:	ror	w5, w5, #2
    16c0:	ldr	w15, [sp, #140]
    16c4:	add	w3, w3, w2
    16c8:	eor	w2, w5, w12
    16cc:	ror	w6, w4, #27
    16d0:	add	w6, w6, w3
    16d4:	eor	w2, w2, w4
    16d8:	add	w3, w15, w1
    16dc:	ror	w13, w4, #2
    16e0:	add	w2, w2, w14
    16e4:	ldr	w4, [sp, #144]
    16e8:	add	w2, w2, w3
    16ec:	ror	w14, w6, #27
    16f0:	eor	w3, w13, w5
    16f4:	add	w14, w14, w2
    16f8:	eor	w3, w3, w6
    16fc:	add	w2, w4, w1
    1700:	add	w3, w3, w12
    1704:	ror	w6, w6, #2
    1708:	ldr	w4, [sp, #148]
    170c:	ror	w12, w14, #27
    1710:	add	w3, w3, w2
    1714:	eor	w2, w13, w6
    1718:	add	w3, w12, w3
    171c:	eor	w2, w2, w14
    1720:	add	w4, w4, w1
    1724:	ror	w14, w14, #2
    1728:	add	w2, w2, w5
    172c:	ldr	w15, [sp, #152]
    1730:	add	w2, w2, w4
    1734:	ror	w5, w3, #27
    1738:	eor	w4, w6, w14
    173c:	add	w5, w5, w2
    1740:	eor	w4, w4, w3
    1744:	ror	w12, w3, #2
    1748:	add	w2, w15, w1
    174c:	add	w4, w4, w13
    1750:	ldp	w3, w15, [sp, #156]
    1754:	ror	w13, w5, #27
    1758:	add	w4, w4, w2
    175c:	eor	w2, w14, w12
    1760:	add	w4, w13, w4
    1764:	eor	w2, w2, w5
    1768:	add	w2, w2, w6
    176c:	add	w1, w3, w1
    1770:	add	w1, w2, w1
    1774:	ror	w5, w5, #2
    1778:	orr	w2, w4, w5
    177c:	ror	w6, w4, #27
    1780:	add	w6, w6, w1
    1784:	and	w3, w4, w5
    1788:	and	w2, w2, w12
    178c:	ror	w13, w4, #2
    1790:	orr	w2, w2, w3
    1794:	ror	w1, w6, #27
    1798:	add	w2, w2, w1
    179c:	mov	w1, #0xbcdc                	// #48348
    17a0:	movk	w1, #0x8f1b, lsl #16
    17a4:	add	w4, w15, w1
    17a8:	add	w2, w2, w4
    17ac:	orr	w3, w6, w13
    17b0:	add	w2, w2, w14
    17b4:	and	w15, w6, w13
    17b8:	ldp	w4, w14, [sp, #164]
    17bc:	and	w3, w3, w5
    17c0:	orr	w3, w3, w15
    17c4:	ror	w6, w6, #2
    17c8:	add	w4, w4, w1
    17cc:	add	w3, w3, w12
    17d0:	add	w3, w3, w4
    17d4:	ror	w12, w2, #27
    17d8:	add	w12, w12, w3
    17dc:	orr	w3, w6, w2
    17e0:	and	w15, w6, w2
    17e4:	and	w3, w3, w13
    17e8:	ror	w2, w2, #2
    17ec:	orr	w3, w3, w15
    17f0:	ror	w4, w12, #27
    17f4:	add	w14, w14, w1
    17f8:	add	w3, w3, w4
    17fc:	orr	w4, w2, w12
    1800:	and	w15, w2, w12
    1804:	add	w3, w3, w14
    1808:	and	w4, w4, w6
    180c:	ldr	w14, [sp, #172]
    1810:	add	w3, w3, w5
    1814:	orr	w4, w4, w15
    1818:	ror	w12, w12, #2
    181c:	add	w5, w14, w1
    1820:	add	w4, w4, w13
    1824:	add	w4, w4, w5
    1828:	ror	w5, w3, #27
    182c:	add	w5, w5, w4
    1830:	orr	w4, w12, w3
    1834:	and	w15, w12, w3
    1838:	ldr	w14, [sp, #176]
    183c:	and	w4, w4, w2
    1840:	ror	w3, w3, #2
    1844:	orr	w4, w4, w15
    1848:	ror	w13, w5, #27
    184c:	add	w14, w14, w1
    1850:	add	w4, w4, w13
    1854:	orr	w13, w3, w5
    1858:	and	w15, w3, w5
    185c:	and	w13, w13, w12
    1860:	add	w4, w4, w14
    1864:	ldr	w14, [sp, #180]
    1868:	add	w4, w4, w6
    186c:	orr	w6, w13, w15
    1870:	ror	w5, w5, #2
    1874:	orr	w13, w5, w4
    1878:	add	w2, w6, w2
    187c:	add	w6, w14, w1
    1880:	and	w15, w5, w4
    1884:	ldr	w14, [sp, #184]
    1888:	add	w2, w2, w6
    188c:	and	w13, w13, w3
    1890:	ror	w6, w4, #27
    1894:	add	w6, w6, w2
    1898:	orr	w13, w13, w15
    189c:	ror	w2, w4, #2
    18a0:	add	w4, w13, w12
    18a4:	add	w12, w14, w1
    18a8:	add	w4, w4, w12
    18ac:	ror	w13, w6, #27
    18b0:	add	w13, w13, w4
    18b4:	orr	w4, w2, w6
    18b8:	and	w15, w2, w6
    18bc:	ldr	w14, [sp, #188]
    18c0:	and	w4, w4, w5
    18c4:	ror	w6, w6, #2
    18c8:	orr	w4, w4, w15
    18cc:	ror	w12, w13, #27
    18d0:	add	w14, w14, w1
    18d4:	add	w4, w4, w12
    18d8:	orr	w12, w6, w13
    18dc:	and	w15, w6, w13
    18e0:	add	w4, w4, w14
    18e4:	and	w12, w12, w2
    18e8:	ldr	w14, [sp, #192]
    18ec:	add	w3, w4, w3
    18f0:	orr	w12, w12, w15
    18f4:	ror	w4, w13, #2
    18f8:	add	w5, w12, w5
    18fc:	add	w12, w14, w1
    1900:	add	w5, w5, w12
    1904:	ror	w13, w3, #27
    1908:	add	w13, w13, w5
    190c:	orr	w5, w4, w3
    1910:	and	w15, w4, w3
    1914:	ldr	w14, [sp, #196]
    1918:	and	w5, w5, w6
    191c:	ror	w3, w3, #2
    1920:	orr	w5, w5, w15
    1924:	ror	w12, w13, #27
    1928:	add	w14, w14, w1
    192c:	add	w5, w5, w12
    1930:	orr	w12, w3, w13
    1934:	and	w15, w3, w13
    1938:	and	w12, w12, w4
    193c:	add	w5, w5, w14
    1940:	ldr	w14, [sp, #200]
    1944:	add	w2, w5, w2
    1948:	orr	w5, w12, w15
    194c:	ror	w13, w13, #2
    1950:	add	w12, w14, w1
    1954:	add	w5, w5, w6
    1958:	orr	w6, w13, w2
    195c:	ldr	w14, [sp, #204]
    1960:	and	w15, w13, w2
    1964:	add	w5, w5, w12
    1968:	and	w6, w6, w3
    196c:	ror	w12, w2, #27
    1970:	add	w12, w12, w5
    1974:	orr	w6, w6, w15
    1978:	ror	w5, w2, #2
    197c:	add	w2, w6, w4
    1980:	add	w4, w14, w1
    1984:	add	w2, w2, w4
    1988:	ror	w6, w12, #27
    198c:	add	w6, w6, w2
    1990:	orr	w4, w5, w12
    1994:	and	w15, w5, w12
    1998:	ldr	w14, [sp, #208]
    199c:	and	w4, w4, w13
    19a0:	ror	w12, w12, #2
    19a4:	orr	w4, w4, w15
    19a8:	ror	w2, w6, #27
    19ac:	add	w14, w14, w1
    19b0:	add	w4, w4, w2
    19b4:	orr	w2, w12, w6
    19b8:	and	w15, w12, w6
    19bc:	add	w4, w4, w14
    19c0:	and	w2, w2, w5
    19c4:	ldr	w14, [sp, #212]
    19c8:	add	w3, w4, w3
    19cc:	orr	w2, w2, w15
    19d0:	ror	w6, w6, #2
    19d4:	add	w4, w14, w1
    19d8:	add	w2, w2, w13
    19dc:	add	w2, w2, w4
    19e0:	ror	w13, w3, #27
    19e4:	add	w13, w13, w2
    19e8:	orr	w2, w6, w3
    19ec:	and	w4, w6, w3
    19f0:	ldr	w14, [sp, #216]
    19f4:	and	w2, w2, w12
    19f8:	ror	w15, w13, #27
    19fc:	orr	w2, w2, w4
    1a00:	ror	w4, w3, #2
    1a04:	orr	w3, w4, w13
    1a08:	add	w14, w14, w1
    1a0c:	add	w2, w2, w15
    1a10:	and	w3, w3, w6
    1a14:	and	w15, w4, w13
    1a18:	add	w2, w2, w14
    1a1c:	ldr	w14, [sp, #220]
    1a20:	ror	w13, w13, #2
    1a24:	add	w2, w2, w5
    1a28:	orr	w5, w3, w15
    1a2c:	add	w5, w5, w12
    1a30:	orr	w3, w13, w2
    1a34:	add	w12, w14, w1
    1a38:	and	w15, w13, w2
    1a3c:	ldr	w14, [sp, #224]
    1a40:	and	w3, w3, w4
    1a44:	add	w5, w5, w12
    1a48:	ror	w12, w2, #27
    1a4c:	add	w5, w12, w5
    1a50:	orr	w3, w3, w15
    1a54:	add	w3, w3, w6
    1a58:	add	w6, w14, w1
    1a5c:	add	w3, w3, w6
    1a60:	ror	w2, w2, #2
    1a64:	and	w12, w5, w2
    1a68:	ror	w6, w5, #27
    1a6c:	add	w6, w6, w3
    1a70:	orr	w3, w5, w2
    1a74:	ldr	w14, [sp, #228]
    1a78:	and	w3, w3, w13
    1a7c:	orr	w3, w3, w12
    1a80:	ror	w15, w6, #27
    1a84:	add	w14, w14, w1
    1a88:	ror	w12, w5, #2
    1a8c:	orr	w5, w6, w12
    1a90:	add	w3, w3, w15
    1a94:	and	w5, w5, w2
    1a98:	and	w15, w6, w12
    1a9c:	add	w3, w3, w14
    1aa0:	ldr	w14, [sp, #232]
    1aa4:	add	w3, w3, w4
    1aa8:	orr	w4, w5, w15
    1aac:	add	w4, w4, w13
    1ab0:	add	w5, w14, w1
    1ab4:	add	w4, w4, w5
    1ab8:	ror	w6, w6, #2
    1abc:	and	w15, w3, w6
    1ac0:	ror	w14, w3, #27
    1ac4:	add	w14, w14, w4
    1ac8:	orr	w4, w3, w6
    1acc:	ldr	w5, [sp, #236]
    1ad0:	and	w4, w4, w12
    1ad4:	orr	w4, w4, w15
    1ad8:	ror	w13, w14, #27
    1adc:	add	w5, w5, w1
    1ae0:	ror	w3, w3, #2
    1ae4:	add	w1, w4, w13
    1ae8:	eor	w4, w6, w3
    1aec:	eor	w4, w4, w14
    1af0:	add	w1, w1, w5
    1af4:	add	w4, w4, w12
    1af8:	add	w2, w1, w2
    1afc:	ldp	w5, w12, [sp, #240]
    1b00:	mov	w1, #0xc1d6                	// #49622
    1b04:	movk	w1, #0xca62, lsl #16
    1b08:	ror	w14, w14, #2
    1b0c:	add	w5, w5, w1
    1b10:	ror	w13, w2, #27
    1b14:	add	w4, w4, w5
    1b18:	eor	w5, w3, w14
    1b1c:	eor	w5, w5, w2
    1b20:	add	w13, w13, w4
    1b24:	add	w5, w5, w6
    1b28:	add	w4, w12, w1
    1b2c:	ldr	w15, [sp, #248]
    1b30:	ror	w2, w2, #2
    1b34:	add	w5, w5, w4
    1b38:	eor	w4, w14, w2
    1b3c:	eor	w4, w4, w13
    1b40:	ror	w6, w13, #2
    1b44:	add	w3, w4, w3
    1b48:	ror	w12, w13, #27
    1b4c:	add	w4, w15, w1
    1b50:	add	w5, w12, w5
    1b54:	add	w3, w3, w4
    1b58:	eor	w4, w6, w2
    1b5c:	eor	w4, w4, w5
    1b60:	ror	w13, w5, #27
    1b64:	add	w4, w4, w14
    1b68:	add	w13, w13, w3
    1b6c:	ldp	w12, w14, [sp, #252]
    1b70:	ror	w5, w5, #2
    1b74:	ldr	w15, [sp, #292]
    1b78:	add	w3, w12, w1
    1b7c:	ror	w12, w13, #27
    1b80:	add	w4, w4, w3
    1b84:	eor	w3, w5, w6
    1b88:	add	w12, w12, w4
    1b8c:	eor	w3, w3, w13
    1b90:	add	w2, w3, w2
    1b94:	ror	w13, w13, #2
    1b98:	add	w3, w14, w1
    1b9c:	ror	w4, w12, #27
    1ba0:	ldr	w14, [sp, #260]
    1ba4:	add	w2, w2, w3
    1ba8:	eor	w3, w13, w5
    1bac:	add	w4, w4, w2
    1bb0:	eor	w3, w3, w12
    1bb4:	add	w2, w14, w1
    1bb8:	add	w3, w3, w6
    1bbc:	ror	w12, w12, #2
    1bc0:	ldr	w14, [sp, #264]
    1bc4:	add	w3, w3, w2
    1bc8:	eor	w2, w12, w13
    1bcc:	ror	w6, w4, #27
    1bd0:	add	w6, w6, w3
    1bd4:	eor	w2, w2, w4
    1bd8:	add	w3, w14, w1
    1bdc:	ror	w4, w4, #2
    1be0:	add	w2, w2, w5
    1be4:	ldr	w14, [sp, #268]
    1be8:	add	w2, w2, w3
    1bec:	ror	w5, w6, #27
    1bf0:	eor	w3, w4, w12
    1bf4:	add	w5, w5, w2
    1bf8:	eor	w3, w3, w6
    1bfc:	add	w2, w14, w1
    1c00:	add	w3, w3, w13
    1c04:	ror	w6, w6, #2
    1c08:	ldr	w13, [sp, #272]
    1c0c:	add	w3, w3, w2
    1c10:	eor	w2, w6, w4
    1c14:	ror	w14, w5, #27
    1c18:	add	w14, w14, w3
    1c1c:	eor	w2, w2, w5
    1c20:	add	w3, w13, w1
    1c24:	ror	w5, w5, #2
    1c28:	add	w2, w2, w12
    1c2c:	ror	w13, w14, #27
    1c30:	ldr	w12, [sp, #276]
    1c34:	add	w2, w2, w3
    1c38:	eor	w3, w5, w6
    1c3c:	add	w13, w13, w2
    1c40:	eor	w3, w3, w14
    1c44:	add	w2, w12, w1
    1c48:	add	w3, w3, w4
    1c4c:	ror	w14, w14, #2
    1c50:	ldr	w12, [sp, #280]
    1c54:	add	w3, w3, w2
    1c58:	eor	w2, w14, w5
    1c5c:	ror	w4, w13, #27
    1c60:	add	w4, w4, w3
    1c64:	eor	w2, w2, w13
    1c68:	add	w3, w12, w1
    1c6c:	ror	w13, w13, #2
    1c70:	add	w2, w2, w6
    1c74:	ldr	w12, [sp, #284]
    1c78:	add	w2, w2, w3
    1c7c:	ror	w6, w4, #27
    1c80:	eor	w3, w13, w14
    1c84:	add	w6, w6, w2
    1c88:	eor	w3, w3, w4
    1c8c:	add	w2, w12, w1
    1c90:	add	w3, w3, w5
    1c94:	ror	w4, w4, #2
    1c98:	ldr	w12, [sp, #288]
    1c9c:	add	w3, w3, w2
    1ca0:	eor	w2, w4, w13
    1ca4:	ror	w5, w6, #27
    1ca8:	add	w5, w5, w3
    1cac:	eor	w2, w2, w6
    1cb0:	add	w3, w12, w1
    1cb4:	ror	w6, w6, #2
    1cb8:	add	w2, w2, w14
    1cbc:	ror	w14, w5, #27
    1cc0:	add	w2, w2, w3
    1cc4:	eor	w3, w6, w4
    1cc8:	add	w14, w14, w2
    1ccc:	eor	w3, w3, w5
    1cd0:	add	w2, w15, w1
    1cd4:	ror	w12, w5, #2
    1cd8:	add	w3, w3, w13
    1cdc:	ror	w5, w14, #27
    1ce0:	ldr	w13, [sp, #296]
    1ce4:	add	w3, w3, w2
    1ce8:	eor	w2, w12, w6
    1cec:	add	w5, w5, w3
    1cf0:	eor	w2, w2, w14
    1cf4:	add	w3, w13, w1
    1cf8:	add	w2, w2, w4
    1cfc:	ror	w14, w14, #2
    1d00:	ldr	w15, [sp, #300]
    1d04:	ror	w4, w5, #27
    1d08:	add	w2, w2, w3
    1d0c:	eor	w3, w14, w12
    1d10:	add	w2, w4, w2
    1d14:	eor	w3, w3, w5
    1d18:	add	w4, w15, w1
    1d1c:	ror	w13, w5, #2
    1d20:	add	w3, w3, w6
    1d24:	eor	w5, w13, w14
    1d28:	add	w3, w3, w4
    1d2c:	ror	w6, w2, #27
    1d30:	ldr	w4, [sp, #304]
    1d34:	add	w6, w6, w3
    1d38:	eor	w5, w5, w2
    1d3c:	ror	w2, w2, #2
    1d40:	add	w3, w4, w1
    1d44:	add	w5, w5, w12
    1d48:	ldr	w15, [sp, #308]
    1d4c:	add	w5, w5, w3
    1d50:	eor	w3, w13, w2
    1d54:	ror	w4, w6, #27
    1d58:	add	w4, w4, w5
    1d5c:	eor	w3, w3, w6
    1d60:	add	w3, w3, w14
    1d64:	ror	w12, w6, #2
    1d68:	add	w6, w15, w1
    1d6c:	ldr	w14, [sp, #312]
    1d70:	add	w6, w3, w6
    1d74:	eor	w5, w2, w12
    1d78:	eor	w5, w5, w4
    1d7c:	ror	w3, w4, #27
    1d80:	add	w3, w3, w6
    1d84:	add	w5, w5, w13
    1d88:	add	w6, w14, w1
    1d8c:	ror	w4, w4, #2
    1d90:	add	w5, w5, w6
    1d94:	ror	w13, w3, #27
    1d98:	ldr	w14, [sp, #316]
    1d9c:	add	w13, w13, w5
    1da0:	eor	w5, w12, w4
    1da4:	add	w2, w2, w1
    1da8:	eor	w5, w5, w3
    1dac:	ror	w6, w13, #27
    1db0:	add	w1, w7, w14
    1db4:	add	w5, w5, w6
    1db8:	add	w1, w1, w2
    1dbc:	ror	w3, w3, #2
    1dc0:	add	w6, w11, w12
    1dc4:	add	w4, w8, w4
    1dc8:	add	w9, w9, w13
    1dcc:	add	w10, w3, w10
    1dd0:	add	w1, w1, w5
    1dd4:	stp	w1, w9, [x0, #8]
    1dd8:	stp	w10, w4, [x0, #16]
    1ddc:	str	w6, [x0, #24]
    1de0:	add	sp, sp, #0x140
    1de4:	ret
    1de8:	stp	x29, x30, [sp, #-32]!
    1dec:	adrp	x1, 13000 <PyInit__sha1@@Base+0x109f8>
    1df0:	mov	x29, sp
    1df4:	str	x19, [sp, #16]
    1df8:	mov	x19, x0
    1dfc:	add	x0, x1, #0xa0
    1e00:	bl	e30 <_PyObject_New@plt>
    1e04:	cbz	x0, 1e3c <_Py_strhex@plt+0xfdc>
    1e08:	add	x2, x19, #0x10
    1e0c:	ldp	x4, x5, [x19, #16]
    1e10:	stp	x4, x5, [x0, #16]
    1e14:	ldp	x4, x5, [x2, #16]
    1e18:	stp	x4, x5, [x0, #32]
    1e1c:	ldp	x4, x5, [x2, #32]
    1e20:	stp	x4, x5, [x0, #48]
    1e24:	ldp	x4, x5, [x2, #48]
    1e28:	stp	x4, x5, [x0, #64]
    1e2c:	ldp	x4, x5, [x2, #64]
    1e30:	stp	x4, x5, [x0, #80]
    1e34:	ldp	x2, x3, [x2, #80]
    1e38:	stp	x2, x3, [x0, #96]
    1e3c:	ldr	x19, [sp, #16]
    1e40:	ldp	x29, x30, [sp], #32
    1e44:	ret
    1e48:	mov	x0, #0x14                  	// #20
    1e4c:	b	de0 <PyLong_FromLong@plt>
    1e50:	mov	x0, #0x40                  	// #64
    1e54:	b	de0 <PyLong_FromLong@plt>
    1e58:	adrp	x0, 2000 <_Py_strhex@plt+0x11a0>
    1e5c:	mov	x1, #0x4                   	// #4
    1e60:	add	x0, x0, #0x690
    1e64:	b	e50 <PyUnicode_FromStringAndSize@plt>
    1e68:	stp	x29, x30, [sp, #-160]!
    1e6c:	add	x3, x0, #0x10
    1e70:	mov	w9, #0xffffff80            	// #-128
    1e74:	mov	x29, sp
    1e78:	ldp	x4, x5, [x0, #32]
    1e7c:	stp	x4, x5, [sp, #80]
    1e80:	ldp	x8, x0, [x0, #16]
    1e84:	stp	x19, x20, [sp, #16]
    1e88:	ldr	w2, [sp, #92]
    1e8c:	add	x20, sp, #0x60
    1e90:	add	x19, sp, #0x40
    1e94:	ldp	x6, x7, [x3, #32]
    1e98:	lsl	w1, w2, #3
    1e9c:	ldp	x4, x5, [x3, #48]
    1ea0:	stp	x6, x7, [sp, #96]
    1ea4:	add	x1, x1, x8
    1ea8:	stp	x4, x5, [sp, #112]
    1eac:	ldp	x6, x7, [x3, #64]
    1eb0:	stp	x1, x0, [sp, #64]
    1eb4:	add	w0, w2, #0x1
    1eb8:	ldp	x4, x5, [x3, #80]
    1ebc:	stp	x6, x7, [sp, #128]
    1ec0:	cmp	w0, #0x38
    1ec4:	stp	x4, x5, [sp, #144]
    1ec8:	strb	w9, [x20, w2, uxtw]
    1ecc:	str	w0, [sp, #92]
    1ed0:	b.ls	1f9c <_Py_strhex@plt+0x113c>  // b.plast
    1ed4:	cmp	w0, #0x3f
    1ed8:	b.hi	1f00 <_Py_strhex@plt+0x10a0>  // b.pmore
    1edc:	mov	w1, #0x3e                  	// #62
    1ee0:	add	x0, x0, #0x20
    1ee4:	sub	w2, w1, w2
    1ee8:	add	x0, x19, x0
    1eec:	add	x2, x2, #0x1
    1ef0:	mov	w1, #0x0                   	// #0
    1ef4:	bl	db0 <memset@plt>
    1ef8:	mov	w0, #0x40                  	// #64
    1efc:	str	w0, [sp, #92]
    1f00:	add	x1, x19, #0x20
    1f04:	mov	x0, x19
    1f08:	bl	f48 <_Py_strhex@plt+0xe8>
    1f0c:	ldr	x1, [sp, #64]
    1f10:	mov	w0, #0x0                   	// #0
    1f14:	mov	w2, w0
    1f18:	strb	wzr, [x20, w2, uxtw]
    1f1c:	add	w2, w2, #0x1
    1f20:	cmp	w2, #0x38
    1f24:	b.ne	1f18 <_Py_strhex@plt+0x10b8>  // b.any
    1f28:	add	w3, w0, #0x1
    1f2c:	mov	w2, #0x37                  	// #55
    1f30:	cmp	w3, #0x38
    1f34:	sub	w0, w2, w0
    1f38:	csel	w0, w0, wzr, ls  // ls = plast
    1f3c:	add	w0, w0, w3
    1f40:	str	w0, [sp, #92]
    1f44:	rev	x2, x1
    1f48:	mov	x0, x19
    1f4c:	add	x1, x19, #0x20
    1f50:	str	x2, [sp, #152]
    1f54:	bl	f48 <_Py_strhex@plt+0xe8>
    1f58:	ldp	w6, w5, [sp, #72]
    1f5c:	add	x0, sp, #0x28
    1f60:	ldp	w4, w3, [sp, #80]
    1f64:	rev	w6, w6
    1f68:	ldr	w2, [sp, #88]
    1f6c:	rev	w5, w5
    1f70:	rev	w4, w4
    1f74:	rev	w3, w3
    1f78:	rev	w2, w2
    1f7c:	mov	x1, #0x14                  	// #20
    1f80:	stp	w6, w5, [sp, #40]
    1f84:	stp	w4, w3, [sp, #48]
    1f88:	str	w2, [sp, #56]
    1f8c:	bl	d70 <PyBytes_FromStringAndSize@plt>
    1f90:	ldp	x19, x20, [sp, #16]
    1f94:	ldp	x29, x30, [sp], #160
    1f98:	ret
    1f9c:	b.ne	1f14 <_Py_strhex@plt+0x10b4>  // b.any
    1fa0:	b	1f44 <_Py_strhex@plt+0x10e4>
    1fa4:	nop
    1fa8:	b	dc0 <PyObject_Free@plt>
    1fac:	nop
    1fb0:	sub	sp, sp, #0xc0
    1fb4:	mov	x0, x1
    1fb8:	mov	x1, x2
    1fbc:	mov	x2, x3
    1fc0:	stp	x29, x30, [sp, #16]
    1fc4:	add	x29, sp, #0x10
    1fc8:	stp	x19, x20, [sp, #32]
    1fcc:	stp	x21, x22, [sp, #48]
    1fd0:	cbz	x3, 2154 <_Py_strhex@plt+0x12f4>
    1fd4:	ldr	x19, [x3, #16]
    1fd8:	add	x19, x1, x19
    1fdc:	add	x3, sp, #0x68
    1fe0:	str	x3, [sp]
    1fe4:	adrp	x4, 13000 <PyInit__sha1@@Base+0x109f8>
    1fe8:	add	x4, x4, #0xa0
    1fec:	mov	x3, x2
    1ff0:	add	x4, x4, #0x1a0
    1ff4:	mov	w7, #0x0                   	// #0
    1ff8:	mov	w6, #0x1                   	// #1
    1ffc:	mov	w5, #0x0                   	// #0
    2000:	mov	x2, #0x0                   	// #0
    2004:	bl	d90 <_PyArg_UnpackKeywords@plt>
    2008:	cbz	x0, 21c0 <_Py_strhex@plt+0x1360>
    200c:	cbz	x19, 216c <_Py_strhex@plt+0x130c>
    2010:	ldr	x0, [x0]
    2014:	cbz	x0, 216c <_Py_strhex@plt+0x130c>
    2018:	ldr	x1, [x0, #8]
    201c:	ldr	x2, [x1, #168]
    2020:	tbnz	w2, #28, 2294 <_Py_strhex@plt+0x1434>
    2024:	ldr	x1, [x1, #160]
    2028:	cbz	x1, 2260 <_Py_strhex@plt+0x1400>
    202c:	ldr	x1, [x1]
    2030:	cbz	x1, 2260 <_Py_strhex@plt+0x1400>
    2034:	stp	x23, x24, [sp, #64]
    2038:	add	x23, sp, #0x70
    203c:	mov	x1, x23
    2040:	mov	w2, #0x0                   	// #0
    2044:	bl	e20 <PyObject_GetBuffer@plt>
    2048:	cmn	w0, #0x1
    204c:	b.eq	22b4 <_Py_strhex@plt+0x1454>  // b.none
    2050:	ldr	w0, [sp, #148]
    2054:	cmp	w0, #0x1
    2058:	b.gt	21dc <_Py_strhex@plt+0x137c>
    205c:	adrp	x0, 13000 <PyInit__sha1@@Base+0x109f8>
    2060:	add	x0, x0, #0xa0
    2064:	bl	e30 <_PyObject_New@plt>
    2068:	mov	x21, x0
    206c:	cbz	x0, 2238 <_Py_strhex@plt+0x13d8>
    2070:	adrp	x0, 2000 <_Py_strhex@plt+0x11a0>
    2074:	str	xzr, [x21, #16]
    2078:	add	x22, x21, #0x10
    207c:	ldr	q0, [x0, #1952]
    2080:	mov	x0, #0xe1f0                	// #57840
    2084:	movk	x0, #0xc3d2, lsl #16
    2088:	str	x0, [x21, #40]
    208c:	stur	q0, [x21, #24]
    2090:	bl	e00 <PyErr_Occurred@plt>
    2094:	cbnz	x0, 2228 <_Py_strhex@plt+0x13c8>
    2098:	ldr	x20, [sp, #128]
    209c:	stp	x25, x26, [sp, #80]
    20a0:	cmp	x20, #0x0
    20a4:	ldr	x26, [sp, #112]
    20a8:	b.le	212c <_Py_strhex@plt+0x12cc>
    20ac:	add	x24, x21, #0x30
    20b0:	mov	w25, #0x40                  	// #64
    20b4:	b	20ec <_Py_strhex@plt+0x128c>
    20b8:	cmp	x19, x20
    20bc:	csel	x19, x19, x20, le
    20c0:	mov	x2, x19
    20c4:	add	x26, x26, x19
    20c8:	bl	d40 <memcpy@plt>
    20cc:	sub	x20, x20, x19
    20d0:	ldr	w2, [x22, #28]
    20d4:	add	w19, w2, w19
    20d8:	str	w19, [x22, #28]
    20dc:	cmp	w19, #0x40
    20e0:	b.eq	2208 <_Py_strhex@plt+0x13a8>  // b.none
    20e4:	cmp	x20, #0x0
    20e8:	b.le	212c <_Py_strhex@plt+0x12cc>
    20ec:	ldr	w0, [x22, #28]
    20f0:	cmp	x20, #0x3f
    20f4:	mov	x1, x26
    20f8:	sub	w19, w25, w0
    20fc:	ccmp	w0, #0x0, #0x0, gt
    2100:	add	x0, x24, w0, uxtw
    2104:	b.ne	20b8 <_Py_strhex@plt+0x1258>  // b.any
    2108:	mov	x0, x22
    210c:	bl	f48 <_Py_strhex@plt+0xe8>
    2110:	ldr	x0, [x22]
    2114:	sub	x20, x20, #0x40
    2118:	add	x26, x26, #0x40
    211c:	cmp	x20, #0x0
    2120:	add	x0, x0, #0x200
    2124:	str	x0, [x22]
    2128:	b.gt	20ec <_Py_strhex@plt+0x128c>
    212c:	mov	x0, x23
    2130:	bl	d50 <PyBuffer_Release@plt>
    2134:	mov	x0, x21
    2138:	ldp	x29, x30, [sp, #16]
    213c:	ldp	x19, x20, [sp, #32]
    2140:	ldp	x21, x22, [sp, #48]
    2144:	ldp	x23, x24, [sp, #64]
    2148:	ldp	x25, x26, [sp, #80]
    214c:	add	sp, sp, #0xc0
    2150:	ret
    2154:	tbnz	x1, #63, 22bc <_Py_strhex@plt+0x145c>
    2158:	cmp	x0, #0x0
    215c:	mov	x19, x1
    2160:	ccmp	x1, #0x1, #0x0, ne  // ne = any
    2164:	b.gt	1fdc <_Py_strhex@plt+0x117c>
    2168:	cbnz	x19, 2010 <_Py_strhex@plt+0x11b0>
    216c:	adrp	x0, 13000 <PyInit__sha1@@Base+0x109f8>
    2170:	add	x0, x0, #0xa0
    2174:	bl	e30 <_PyObject_New@plt>
    2178:	mov	x21, x0
    217c:	cbz	x0, 21c0 <_Py_strhex@plt+0x1360>
    2180:	adrp	x0, 2000 <_Py_strhex@plt+0x11a0>
    2184:	str	xzr, [x21, #16]
    2188:	ldr	q0, [x0, #1952]
    218c:	mov	x0, #0xe1f0                	// #57840
    2190:	movk	x0, #0xc3d2, lsl #16
    2194:	str	x0, [x21, #40]
    2198:	stur	q0, [x21, #24]
    219c:	bl	e00 <PyErr_Occurred@plt>
    21a0:	cbz	x0, 21c4 <_Py_strhex@plt+0x1364>
    21a4:	ldr	x0, [x21]
    21a8:	sub	x0, x0, #0x1
    21ac:	str	x0, [x21]
    21b0:	cbnz	x0, 21c0 <_Py_strhex@plt+0x1360>
    21b4:	mov	x0, x21
    21b8:	bl	d80 <_Py_Dealloc@plt>
    21bc:	nop
    21c0:	mov	x21, #0x0                   	// #0
    21c4:	mov	x0, x21
    21c8:	ldp	x29, x30, [sp, #16]
    21cc:	ldp	x19, x20, [sp, #32]
    21d0:	ldp	x21, x22, [sp, #48]
    21d4:	add	sp, sp, #0xc0
    21d8:	ret
    21dc:	adrp	x0, 12000 <PyInit__sha1@@Base+0xf9f8>
    21e0:	adrp	x1, 2000 <_Py_strhex@plt+0x11a0>
    21e4:	add	x1, x1, #0x6f8
    21e8:	mov	x21, #0x0                   	// #0
    21ec:	ldr	x0, [x0, #4024]
    21f0:	ldr	x0, [x0]
    21f4:	bl	da0 <PyErr_SetString@plt>
    21f8:	mov	x0, x23
    21fc:	bl	d50 <PyBuffer_Release@plt>
    2200:	ldp	x23, x24, [sp, #64]
    2204:	b	21c4 <_Py_strhex@plt+0x1364>
    2208:	mov	x0, x22
    220c:	mov	x1, x24
    2210:	bl	f48 <_Py_strhex@plt+0xe8>
    2214:	str	wzr, [x22, #28]
    2218:	ldr	x0, [x22]
    221c:	add	x0, x0, #0x200
    2220:	str	x0, [x22]
    2224:	b	20e4 <_Py_strhex@plt+0x1284>
    2228:	ldr	x0, [x21]
    222c:	sub	x0, x0, #0x1
    2230:	str	x0, [x21]
    2234:	cbz	x0, 22ec <_Py_strhex@plt+0x148c>
    2238:	mov	x0, x23
    223c:	mov	x21, #0x0                   	// #0
    2240:	bl	d50 <PyBuffer_Release@plt>
    2244:	mov	x0, x21
    2248:	ldp	x29, x30, [sp, #16]
    224c:	ldp	x19, x20, [sp, #32]
    2250:	ldp	x21, x22, [sp, #48]
    2254:	ldp	x23, x24, [sp, #64]
    2258:	add	sp, sp, #0xc0
    225c:	ret
    2260:	adrp	x0, 12000 <PyInit__sha1@@Base+0xf9f8>
    2264:	mov	x21, #0x0                   	// #0
    2268:	adrp	x1, 2000 <_Py_strhex@plt+0x11a0>
    226c:	add	x1, x1, #0x6c8
    2270:	ldr	x0, [x0, #4032]
    2274:	ldr	x0, [x0]
    2278:	bl	da0 <PyErr_SetString@plt>
    227c:	mov	x0, x21
    2280:	ldp	x29, x30, [sp, #16]
    2284:	ldp	x19, x20, [sp, #32]
    2288:	ldp	x21, x22, [sp, #48]
    228c:	add	sp, sp, #0xc0
    2290:	ret
    2294:	adrp	x0, 12000 <PyInit__sha1@@Base+0xf9f8>
    2298:	adrp	x1, 2000 <_Py_strhex@plt+0x11a0>
    229c:	mov	x21, #0x0                   	// #0
    22a0:	add	x1, x1, #0x698
    22a4:	ldr	x0, [x0, #4032]
    22a8:	ldr	x0, [x0]
    22ac:	bl	da0 <PyErr_SetString@plt>
    22b0:	b	21c4 <_Py_strhex@plt+0x1364>
    22b4:	ldp	x23, x24, [sp, #64]
    22b8:	b	21c0 <_Py_strhex@plt+0x1360>
    22bc:	add	x2, sp, #0x68
    22c0:	str	x2, [sp]
    22c4:	adrp	x4, 13000 <PyInit__sha1@@Base+0x109f8>
    22c8:	add	x4, x4, #0xa0
    22cc:	add	x4, x4, #0x1a0
    22d0:	mov	w7, #0x0                   	// #0
    22d4:	mov	w6, #0x1                   	// #1
    22d8:	mov	w5, #0x0                   	// #0
    22dc:	mov	x2, #0x0                   	// #0
    22e0:	bl	d90 <_PyArg_UnpackKeywords@plt>
    22e4:	cbnz	x0, 2010 <_Py_strhex@plt+0x11b0>
    22e8:	b	21c0 <_Py_strhex@plt+0x1360>
    22ec:	mov	x0, x21
    22f0:	bl	d80 <_Py_Dealloc@plt>
    22f4:	b	2238 <_Py_strhex@plt+0x13d8>
    22f8:	stp	x29, x30, [sp, #-160]!
    22fc:	mov	x29, sp
    2300:	stp	x23, x24, [sp, #48]
    2304:	mov	x23, x0
    2308:	ldr	x0, [x1, #8]
    230c:	ldr	x2, [x0, #168]
    2310:	tbnz	w2, #28, 249c <_Py_strhex@plt+0x163c>
    2314:	ldr	x0, [x0, #160]
    2318:	cbz	x0, 2444 <_Py_strhex@plt+0x15e4>
    231c:	ldr	x0, [x0]
    2320:	cbz	x0, 2444 <_Py_strhex@plt+0x15e4>
    2324:	add	x24, sp, #0x50
    2328:	mov	x0, x1
    232c:	mov	w2, #0x0                   	// #0
    2330:	mov	x1, x24
    2334:	bl	e20 <PyObject_GetBuffer@plt>
    2338:	cmn	w0, #0x1
    233c:	b.eq	24bc <_Py_strhex@plt+0x165c>  // b.none
    2340:	ldr	w0, [sp, #116]
    2344:	cmp	w0, #0x1
    2348:	b.gt	246c <_Py_strhex@plt+0x160c>
    234c:	stp	x19, x20, [sp, #16]
    2350:	add	x20, x23, #0x10
    2354:	ldr	x19, [sp, #96]
    2358:	stp	x21, x22, [sp, #32]
    235c:	cmp	x19, #0x0
    2360:	ldr	x22, [sp, #80]
    2364:	b.le	23f0 <_Py_strhex@plt+0x1590>
    2368:	add	x23, x23, #0x30
    236c:	str	x25, [sp, #64]
    2370:	mov	w25, #0x40                  	// #64
    2374:	b	23ac <_Py_strhex@plt+0x154c>
    2378:	cmp	x21, x19
    237c:	csel	x21, x21, x19, le
    2380:	mov	x2, x21
    2384:	add	x22, x22, x21
    2388:	bl	d40 <memcpy@plt>
    238c:	sub	x19, x19, x21
    2390:	ldr	w2, [x20, #28]
    2394:	add	w21, w2, w21
    2398:	str	w21, [x20, #28]
    239c:	cmp	w21, #0x40
    23a0:	b.eq	2424 <_Py_strhex@plt+0x15c4>  // b.none
    23a4:	cmp	x19, #0x0
    23a8:	b.le	23ec <_Py_strhex@plt+0x158c>
    23ac:	ldr	w0, [x20, #28]
    23b0:	cmp	x19, #0x3f
    23b4:	mov	x1, x22
    23b8:	sub	w21, w25, w0
    23bc:	ccmp	w0, #0x0, #0x0, gt
    23c0:	add	x0, x23, w0, uxtw
    23c4:	b.ne	2378 <_Py_strhex@plt+0x1518>  // b.any
    23c8:	mov	x0, x20
    23cc:	bl	f48 <_Py_strhex@plt+0xe8>
    23d0:	ldr	x0, [x20]
    23d4:	sub	x19, x19, #0x40
    23d8:	add	x22, x22, #0x40
    23dc:	cmp	x19, #0x0
    23e0:	add	x0, x0, #0x200
    23e4:	str	x0, [x20]
    23e8:	b.gt	23ac <_Py_strhex@plt+0x154c>
    23ec:	ldr	x25, [sp, #64]
    23f0:	mov	x0, x24
    23f4:	bl	d50 <PyBuffer_Release@plt>
    23f8:	adrp	x1, 12000 <PyInit__sha1@@Base+0xf9f8>
    23fc:	ldp	x19, x20, [sp, #16]
    2400:	ldr	x1, [x1, #4056]
    2404:	ldp	x21, x22, [sp, #32]
    2408:	mov	x0, x1
    240c:	ldr	x2, [x1]
    2410:	add	x2, x2, #0x1
    2414:	str	x2, [x1]
    2418:	ldp	x23, x24, [sp, #48]
    241c:	ldp	x29, x30, [sp], #160
    2420:	ret
    2424:	mov	x0, x20
    2428:	mov	x1, x23
    242c:	bl	f48 <_Py_strhex@plt+0xe8>
    2430:	str	wzr, [x20, #28]
    2434:	ldr	x0, [x20]
    2438:	add	x0, x0, #0x200
    243c:	str	x0, [x20]
    2440:	b	23a4 <_Py_strhex@plt+0x1544>
    2444:	adrp	x0, 12000 <PyInit__sha1@@Base+0xf9f8>
    2448:	adrp	x1, 2000 <_Py_strhex@plt+0x11a0>
    244c:	add	x1, x1, #0x6c8
    2450:	ldr	x0, [x0, #4032]
    2454:	ldr	x0, [x0]
    2458:	bl	da0 <PyErr_SetString@plt>
    245c:	mov	x0, #0x0                   	// #0
    2460:	ldp	x23, x24, [sp, #48]
    2464:	ldp	x29, x30, [sp], #160
    2468:	ret
    246c:	adrp	x0, 12000 <PyInit__sha1@@Base+0xf9f8>
    2470:	adrp	x1, 2000 <_Py_strhex@plt+0x11a0>
    2474:	add	x1, x1, #0x6f8
    2478:	ldr	x0, [x0, #4024]
    247c:	ldr	x0, [x0]
    2480:	bl	da0 <PyErr_SetString@plt>
    2484:	mov	x0, x24
    2488:	bl	d50 <PyBuffer_Release@plt>
    248c:	mov	x0, #0x0                   	// #0
    2490:	ldp	x23, x24, [sp, #48]
    2494:	ldp	x29, x30, [sp], #160
    2498:	ret
    249c:	adrp	x0, 12000 <PyInit__sha1@@Base+0xf9f8>
    24a0:	adrp	x1, 2000 <_Py_strhex@plt+0x11a0>
    24a4:	add	x1, x1, #0x698
    24a8:	ldr	x0, [x0, #4032]
    24ac:	ldr	x0, [x0]
    24b0:	bl	da0 <PyErr_SetString@plt>
    24b4:	mov	x0, #0x0                   	// #0
    24b8:	b	2418 <_Py_strhex@plt+0x15b8>
    24bc:	mov	x0, #0x0                   	// #0
    24c0:	b	2418 <_Py_strhex@plt+0x15b8>
    24c4:	nop
    24c8:	stp	x29, x30, [sp, #-160]!
    24cc:	add	x3, x0, #0x10
    24d0:	mov	w9, #0xffffff80            	// #-128
    24d4:	mov	x29, sp
    24d8:	ldp	x4, x5, [x0, #32]
    24dc:	stp	x4, x5, [sp, #80]
    24e0:	ldp	x8, x0, [x0, #16]
    24e4:	stp	x19, x20, [sp, #16]
    24e8:	ldr	w2, [sp, #92]
    24ec:	add	x20, sp, #0x60
    24f0:	add	x19, sp, #0x40
    24f4:	ldp	x6, x7, [x3, #32]
    24f8:	lsl	w1, w2, #3
    24fc:	ldp	x4, x5, [x3, #48]
    2500:	stp	x6, x7, [sp, #96]
    2504:	add	x1, x1, x8
    2508:	stp	x4, x5, [sp, #112]
    250c:	ldp	x6, x7, [x3, #64]
    2510:	stp	x1, x0, [sp, #64]
    2514:	add	w0, w2, #0x1
    2518:	ldp	x4, x5, [x3, #80]
    251c:	stp	x6, x7, [sp, #128]
    2520:	cmp	w0, #0x38
    2524:	stp	x4, x5, [sp, #144]
    2528:	strb	w9, [x20, w2, uxtw]
    252c:	str	w0, [sp, #92]
    2530:	b.ls	25fc <_Py_strhex@plt+0x179c>  // b.plast
    2534:	cmp	w0, #0x3f
    2538:	b.hi	2560 <_Py_strhex@plt+0x1700>  // b.pmore
    253c:	mov	w1, #0x3e                  	// #62
    2540:	add	x0, x0, #0x20
    2544:	sub	w2, w1, w2
    2548:	add	x0, x19, x0
    254c:	add	x2, x2, #0x1
    2550:	mov	w1, #0x0                   	// #0
    2554:	bl	db0 <memset@plt>
    2558:	mov	w0, #0x40                  	// #64
    255c:	str	w0, [sp, #92]
    2560:	add	x1, x19, #0x20
    2564:	mov	x0, x19
    2568:	bl	f48 <_Py_strhex@plt+0xe8>
    256c:	ldr	x1, [sp, #64]
    2570:	mov	w0, #0x0                   	// #0
    2574:	mov	w2, w0
    2578:	strb	wzr, [x20, w2, uxtw]
    257c:	add	w2, w2, #0x1
    2580:	cmp	w2, #0x38
    2584:	b.ne	2578 <_Py_strhex@plt+0x1718>  // b.any
    2588:	add	w3, w0, #0x1
    258c:	mov	w2, #0x37                  	// #55
    2590:	cmp	w3, #0x38
    2594:	sub	w0, w2, w0
    2598:	csel	w0, w0, wzr, ls  // ls = plast
    259c:	add	w0, w0, w3
    25a0:	str	w0, [sp, #92]
    25a4:	rev	x2, x1
    25a8:	mov	x0, x19
    25ac:	add	x1, x19, #0x20
    25b0:	str	x2, [sp, #152]
    25b4:	bl	f48 <_Py_strhex@plt+0xe8>
    25b8:	ldp	w6, w5, [sp, #72]
    25bc:	add	x0, sp, #0x28
    25c0:	ldp	w4, w3, [sp, #80]
    25c4:	rev	w6, w6
    25c8:	ldr	w2, [sp, #88]
    25cc:	rev	w5, w5
    25d0:	rev	w4, w4
    25d4:	rev	w3, w3
    25d8:	rev	w2, w2
    25dc:	mov	x1, #0x14                  	// #20
    25e0:	stp	w6, w5, [sp, #40]
    25e4:	stp	w4, w3, [sp, #48]
    25e8:	str	w2, [sp, #56]
    25ec:	bl	e60 <_Py_strhex@plt>
    25f0:	ldp	x19, x20, [sp, #16]
    25f4:	ldp	x29, x30, [sp], #160
    25f8:	ret
    25fc:	b.ne	2574 <_Py_strhex@plt+0x1714>  // b.any
    2600:	b	25a4 <_Py_strhex@plt+0x1744>
    2604:	nop

0000000000002608 <PyInit__sha1@@Base>:
    2608:	stp	x29, x30, [sp, #-48]!
    260c:	adrp	x1, 12000 <PyInit__sha1@@Base+0xf9f8>
    2610:	mov	x29, sp
    2614:	ldr	x1, [x1, #4048]
    2618:	stp	x19, x20, [sp, #16]
    261c:	mov	x19, #0x0                   	// #0
    2620:	str	x21, [sp, #32]
    2624:	adrp	x21, 13000 <PyInit__sha1@@Base+0x109f8>
    2628:	add	x20, x21, #0xa0
    262c:	mov	x0, x20
    2630:	str	x1, [x20, #8]
    2634:	bl	dd0 <PyType_Ready@plt>
    2638:	tbnz	w0, #31, 266c <PyInit__sha1@@Base+0x64>
    263c:	add	x0, x20, #0x1e0
    2640:	mov	w1, #0x3f5                 	// #1013
    2644:	bl	e10 <PyModule_Create2@plt>
    2648:	mov	x19, x0
    264c:	cbz	x0, 266c <PyInit__sha1@@Base+0x64>
    2650:	ldr	x3, [x21, #160]
    2654:	adrp	x1, 2000 <_Py_strhex@plt+0x11a0>
    2658:	mov	x2, x20
    265c:	add	x1, x1, #0x718
    2660:	add	x3, x3, #0x1
    2664:	str	x3, [x21, #160]
    2668:	bl	e40 <PyModule_AddObject@plt>
    266c:	mov	x0, x19
    2670:	ldp	x19, x20, [sp, #16]
    2674:	ldr	x21, [sp, #32]
    2678:	ldp	x29, x30, [sp], #48
    267c:	ret

Disassembly of section .fini:

0000000000002680 <.fini>:
    2680:	stp	x29, x30, [sp, #-16]!
    2684:	mov	x29, sp
    2688:	ldp	x29, x30, [sp], #16
    268c:	ret
