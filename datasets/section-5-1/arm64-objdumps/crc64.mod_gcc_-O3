
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//crc64.mod_gcc_-O3:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_mod_init-0x1c8>:
   0:	adrp	x1, 0 <grub_mod_init-0x1c8>
   4:	ldr	x7, [x1]
   8:	ldr	x1, [x7, #8]
   c:	cbz	x1, 18 <grub_mod_init-0x1b0>
  10:	str	xzr, [x0]
  14:	ret
  18:	mov	x4, #0x3693                	// #13971
  1c:	mov	x3, #0x0                   	// #0
  20:	movk	x4, #0xa9ea, lsl #16
  24:	mov	x11, #0x80                  	// #128
  28:	movk	x4, #0xe1eb, lsl #32
  2c:	mov	x10, #0xc0                  	// #192
  30:	mov	x9, #0x40                  	// #64
  34:	movk	x4, #0x42f0, lsl #48
  38:	mov	x8, #0x1                   	// #1
  3c:	nop
  40:	ands	w2, w3, #0x1
  44:	mov	x5, #0x0                   	// #0
  48:	csel	x1, x11, xzr, ne  // ne = any
  4c:	cmp	w2, #0x0
  50:	csel	x2, x10, x9, ne  // ne = any
  54:	tst	x3, #0x2
  58:	csel	x2, x2, x1, ne  // ne = any
  5c:	tst	x3, #0x4
  60:	orr	x1, x2, #0x20
  64:	mov	w6, #0x3f                  	// #63
  68:	csel	x2, x1, x2, ne  // ne = any
  6c:	tst	x3, #0x8
  70:	orr	x1, x2, #0x10
  74:	csel	x2, x1, x2, ne  // ne = any
  78:	tst	x3, #0x10
  7c:	orr	x1, x2, #0x8
  80:	csel	x2, x1, x2, ne  // ne = any
  84:	tst	x3, #0x20
  88:	orr	x1, x2, #0x4
  8c:	csel	x2, x1, x2, ne  // ne = any
  90:	tst	x3, #0x40
  94:	orr	x1, x2, #0x2
  98:	csel	x2, x1, x2, ne  // ne = any
  9c:	cmp	xzr, x3, lsr #7
  a0:	orr	x1, x2, #0x1
  a4:	csel	x2, x1, x2, ne  // ne = any
  a8:	lsl	x1, x2, #57
  ac:	tst	x2, #0x80
  b0:	eor	x2, x1, x4
  b4:	csel	x1, x2, x1, ne  // ne = any
  b8:	cmp	x1, #0x0
  bc:	lsl	x1, x1, #1
  c0:	eor	x2, x1, x4
  c4:	csel	x1, x2, x1, lt  // lt = tstop
  c8:	cmp	x1, #0x0
  cc:	lsl	x1, x1, #1
  d0:	eor	x2, x1, x4
  d4:	csel	x1, x2, x1, lt  // lt = tstop
  d8:	cmp	x1, #0x0
  dc:	lsl	x1, x1, #1
  e0:	eor	x2, x1, x4
  e4:	csel	x1, x2, x1, lt  // lt = tstop
  e8:	cmp	x1, #0x0
  ec:	lsl	x1, x1, #1
  f0:	eor	x2, x1, x4
  f4:	csel	x1, x2, x1, lt  // lt = tstop
  f8:	cmp	x1, #0x0
  fc:	lsl	x1, x1, #1
 100:	eor	x2, x1, x4
 104:	csel	x1, x2, x1, lt  // lt = tstop
 108:	cmp	x1, #0x0
 10c:	lsl	x1, x1, #1
 110:	eor	x2, x1, x4
 114:	csel	x1, x2, x1, lt  // lt = tstop
 118:	cmp	x1, #0x0
 11c:	lsl	x1, x1, #1
 120:	eor	x2, x1, x4
 124:	csel	x1, x2, x1, lt  // lt = tstop
 128:	tst	x1, #0x1
 12c:	lsl	x2, x8, x6
 130:	sub	w6, w6, #0x1
 134:	orr	x2, x5, x2
 138:	csel	x5, x2, x5, ne  // ne = any
 13c:	lsr	x1, x1, #1
 140:	cmn	w6, #0x1
 144:	b.ne	128 <grub_mod_init-0xa0>  // b.any
 148:	str	x5, [x7, x3, lsl #3]
 14c:	add	x3, x3, #0x1
 150:	cmp	x3, #0x100
 154:	b.ne	40 <grub_mod_init-0x188>  // b.any
 158:	str	xzr, [x0]
 15c:	ret
	...
 168:	ldr	x3, [x0]
 16c:	mvn	x4, x3
 170:	cbz	x2, 1a4 <grub_mod_init-0x24>
 174:	adrp	x3, 0 <grub_mod_init-0x1c8>
 178:	mov	w5, #0x0                   	// #0
 17c:	ldr	x7, [x3]
 180:	and	x3, x4, #0xff
 184:	ldrb	w6, [x1], #1
 188:	add	w5, w5, #0x1
 18c:	eor	x3, x3, x6
 190:	cmp	x2, w5, uxtw
 194:	ldr	x3, [x7, x3, lsl #3]
 198:	eor	x4, x3, x4, lsr #8
 19c:	b.hi	180 <grub_mod_init-0x48>  // b.pmore
 1a0:	mvn	x3, x4
 1a4:	str	x3, [x0]
 1a8:	ret
 1ac:	nop
	...
 1b8:	ret
 1bc:	nop
 1c0:	ret
 1c4:	nop

00000000000001c8 <grub_mod_init>:
 1c8:	adrp	x0, 0 <grub_mod_init-0x1c8>
 1cc:	ldr	x0, [x0]
 1d0:	b	0 <grub_md_register>
 1d4:	nop
	...

00000000000001e0 <grub_mod_fini>:
 1e0:	adrp	x0, 0 <grub_mod_init-0x1c8>
 1e4:	ldr	x0, [x0]
 1e8:	b	0 <grub_md_unregister>
 1ec:	nop
	...
