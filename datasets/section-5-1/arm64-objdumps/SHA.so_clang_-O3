
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//SHA.so_clang_-O3:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000000c50 <.init>:
 c50:	stp	x29, x30, [sp, #-16]!
 c54:	mov	x29, sp
 c58:	bl	e60 <Perl_sv_newmortal@plt+0x10>
 c5c:	ldp	x29, x30, [sp], #16
 c60:	ret

Disassembly of section .plt:

0000000000000c70 <memcpy@plt-0x20>:
 c70:	stp	x16, x30, [sp, #-16]!
 c74:	adrp	x16, 18000 <boot_Digest__SHA@@Base+0x170cc>
 c78:	ldr	x17, [x16, #4088]
 c7c:	add	x16, x16, #0xff8
 c80:	br	x17
 c84:	nop
 c88:	nop
 c8c:	nop

0000000000000c90 <memcpy@plt>:
 c90:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
 c94:	ldr	x17, [x16]
 c98:	add	x16, x16, #0x0
 c9c:	br	x17

0000000000000ca0 <Perl_sv_setref_pv@plt>:
 ca0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
 ca4:	ldr	x17, [x16, #8]
 ca8:	add	x16, x16, #0x8
 cac:	br	x17

0000000000000cb0 <Perl_sv_2iv_flags@plt>:
 cb0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
 cb4:	ldr	x17, [x16, #16]
 cb8:	add	x16, x16, #0x10
 cbc:	br	x17

0000000000000cc0 <Perl_sv_2uv_flags@plt>:
 cc0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
 cc4:	ldr	x17, [x16, #24]
 cc8:	add	x16, x16, #0x18
 ccc:	br	x17

0000000000000cd0 <__cxa_finalize@plt>:
 cd0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
 cd4:	ldr	x17, [x16, #32]
 cd8:	add	x16, x16, #0x20
 cdc:	br	x17

0000000000000ce0 <Perl_sv_derived_from@plt>:
 ce0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
 ce4:	ldr	x17, [x16, #40]
 ce8:	add	x16, x16, #0x28
 cec:	br	x17

0000000000000cf0 <Perl_sv_reftype@plt>:
 cf0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
 cf4:	ldr	x17, [x16, #48]
 cf8:	add	x16, x16, #0x30
 cfc:	br	x17

0000000000000d00 <Perl_newSV@plt>:
 d00:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
 d04:	ldr	x17, [x16, #56]
 d08:	add	x16, x16, #0x38
 d0c:	br	x17

0000000000000d10 <Perl_sv_setiv_mg@plt>:
 d10:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
 d14:	ldr	x17, [x16, #64]
 d18:	add	x16, x16, #0x40
 d1c:	br	x17

0000000000000d20 <strcat@plt>:
 d20:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
 d24:	ldr	x17, [x16, #72]
 d28:	add	x16, x16, #0x48
 d2c:	br	x17

0000000000000d30 <Perl_sv_2pvbyte@plt>:
 d30:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
 d34:	ldr	x17, [x16, #80]
 d38:	add	x16, x16, #0x50
 d3c:	br	x17

0000000000000d40 <memset@plt>:
 d40:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
 d44:	ldr	x17, [x16, #88]
 d48:	add	x16, x16, #0x58
 d4c:	br	x17

0000000000000d50 <Perl_sv_2pv_flags@plt>:
 d50:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
 d54:	ldr	x17, [x16, #96]
 d58:	add	x16, x16, #0x60
 d5c:	br	x17

0000000000000d60 <Perl_xs_boot_epilog@plt>:
 d60:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
 d64:	ldr	x17, [x16, #104]
 d68:	add	x16, x16, #0x68
 d6c:	br	x17

0000000000000d70 <Perl_safesysmalloc@plt>:
 d70:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
 d74:	ldr	x17, [x16, #112]
 d78:	add	x16, x16, #0x70
 d7c:	br	x17

0000000000000d80 <__stack_chk_fail@plt>:
 d80:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
 d84:	ldr	x17, [x16, #120]
 d88:	add	x16, x16, #0x78
 d8c:	br	x17

0000000000000d90 <Perl_sv_isobject@plt>:
 d90:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
 d94:	ldr	x17, [x16, #128]
 d98:	add	x16, x16, #0x80
 d9c:	br	x17

0000000000000da0 <__gmon_start__@plt>:
 da0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
 da4:	ldr	x17, [x16, #136]
 da8:	add	x16, x16, #0x88
 dac:	br	x17

0000000000000db0 <Perl_croak_xs_usage@plt>:
 db0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
 db4:	ldr	x17, [x16, #144]
 db8:	add	x16, x16, #0x90
 dbc:	br	x17

0000000000000dc0 <Perl_newSVpv@plt>:
 dc0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
 dc4:	ldr	x17, [x16, #152]
 dc8:	add	x16, x16, #0x98
 dcc:	br	x17

0000000000000dd0 <Perl_safesyscalloc@plt>:
 dd0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
 dd4:	ldr	x17, [x16, #160]
 dd8:	add	x16, x16, #0xa0
 ddc:	br	x17

0000000000000de0 <Perl_PerlIO_read@plt>:
 de0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
 de4:	ldr	x17, [x16, #168]
 de8:	add	x16, x16, #0xa8
 dec:	br	x17

0000000000000df0 <Perl_newXS_flags@plt>:
 df0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
 df4:	ldr	x17, [x16, #176]
 df8:	add	x16, x16, #0xb0
 dfc:	br	x17

0000000000000e00 <Perl_sv_2mortal@plt>:
 e00:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
 e04:	ldr	x17, [x16, #184]
 e08:	add	x16, x16, #0xb8
 e0c:	br	x17

0000000000000e10 <Perl_safesysfree@plt>:
 e10:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
 e14:	ldr	x17, [x16, #192]
 e18:	add	x16, x16, #0xc0
 e1c:	br	x17

0000000000000e20 <Perl_sv_2io@plt>:
 e20:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
 e24:	ldr	x17, [x16, #200]
 e28:	add	x16, x16, #0xc8
 e2c:	br	x17

0000000000000e30 <Perl_xs_handshake@plt>:
 e30:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
 e34:	ldr	x17, [x16, #208]
 e38:	add	x16, x16, #0xd0
 e3c:	br	x17

0000000000000e40 <Perl_sv_setuv_mg@plt>:
 e40:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
 e44:	ldr	x17, [x16, #216]
 e48:	add	x16, x16, #0xd8
 e4c:	br	x17

0000000000000e50 <Perl_sv_newmortal@plt>:
 e50:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
 e54:	ldr	x17, [x16, #224]
 e58:	add	x16, x16, #0xe0
 e5c:	br	x17

Disassembly of section .text:

0000000000000e60 <boot_Digest__SHA@@Base-0xd4>:
     e60:	adrp	x0, 18000 <boot_Digest__SHA@@Base+0x170cc>
     e64:	ldr	x0, [x0, #4048]
     e68:	cbz	x0, e70 <Perl_sv_newmortal@plt+0x20>
     e6c:	b	da0 <__gmon_start__@plt>
     e70:	ret
     e74:	nop
     e78:	adrp	x0, 19000 <boot_Digest__SHA@@Base+0x180cc>
     e7c:	add	x0, x0, #0xf0
     e80:	adrp	x1, 19000 <boot_Digest__SHA@@Base+0x180cc>
     e84:	add	x1, x1, #0xf0
     e88:	cmp	x1, x0
     e8c:	b.eq	ea4 <Perl_sv_newmortal@plt+0x54>  // b.none
     e90:	adrp	x1, 18000 <boot_Digest__SHA@@Base+0x170cc>
     e94:	ldr	x1, [x1, #4032]
     e98:	cbz	x1, ea4 <Perl_sv_newmortal@plt+0x54>
     e9c:	mov	x16, x1
     ea0:	br	x16
     ea4:	ret
     ea8:	adrp	x0, 19000 <boot_Digest__SHA@@Base+0x180cc>
     eac:	add	x0, x0, #0xf0
     eb0:	adrp	x1, 19000 <boot_Digest__SHA@@Base+0x180cc>
     eb4:	add	x1, x1, #0xf0
     eb8:	sub	x1, x1, x0
     ebc:	lsr	x2, x1, #63
     ec0:	add	x1, x2, x1, asr #3
     ec4:	cmp	xzr, x1, asr #1
     ec8:	asr	x1, x1, #1
     ecc:	b.eq	ee4 <Perl_sv_newmortal@plt+0x94>  // b.none
     ed0:	adrp	x2, 18000 <boot_Digest__SHA@@Base+0x170cc>
     ed4:	ldr	x2, [x2, #4064]
     ed8:	cbz	x2, ee4 <Perl_sv_newmortal@plt+0x94>
     edc:	mov	x16, x2
     ee0:	br	x16
     ee4:	ret
     ee8:	stp	x29, x30, [sp, #-32]!
     eec:	mov	x29, sp
     ef0:	str	x19, [sp, #16]
     ef4:	adrp	x19, 19000 <boot_Digest__SHA@@Base+0x180cc>
     ef8:	ldrb	w0, [x19, #240]
     efc:	cbnz	w0, f24 <Perl_sv_newmortal@plt+0xd4>
     f00:	adrp	x0, 18000 <boot_Digest__SHA@@Base+0x170cc>
     f04:	ldr	x0, [x0, #4040]
     f08:	cbz	x0, f18 <Perl_sv_newmortal@plt+0xc8>
     f0c:	adrp	x0, 19000 <boot_Digest__SHA@@Base+0x180cc>
     f10:	ldr	x0, [x0, #232]
     f14:	bl	cd0 <__cxa_finalize@plt>
     f18:	bl	e78 <Perl_sv_newmortal@plt+0x28>
     f1c:	mov	w0, #0x1                   	// #1
     f20:	strb	w0, [x19, #240]
     f24:	ldr	x19, [sp, #16]
     f28:	ldp	x29, x30, [sp], #32
     f2c:	ret
     f30:	b	ea8 <Perl_sv_newmortal@plt+0x58>

0000000000000f34 <boot_Digest__SHA@@Base>:
     f34:	sub	sp, sp, #0x70
     f38:	stp	x20, x19, [sp, #96]
     f3c:	adrp	x20, 7000 <boot_Digest__SHA@@Base+0x60cc>
     f40:	mov	x19, x0
     f44:	add	x20, x20, #0xfa8
     f48:	adrp	x3, 7000 <boot_Digest__SHA@@Base+0x60cc>
     f4c:	adrp	x4, 7000 <boot_Digest__SHA@@Base+0x60cc>
     f50:	mov	w0, #0x4e7                 	// #1255
     f54:	add	x3, x3, #0xfae
     f58:	add	x4, x4, #0xfb6
     f5c:	movk	w0, #0xd30, lsl #16
     f60:	mov	x1, x19
     f64:	mov	x2, x20
     f68:	stp	x29, x30, [sp, #16]
     f6c:	stp	x28, x27, [sp, #32]
     f70:	stp	x26, x25, [sp, #48]
     f74:	stp	x24, x23, [sp, #64]
     f78:	stp	x22, x21, [sp, #80]
     f7c:	add	x29, sp, #0x10
     f80:	bl	e30 <Perl_xs_handshake@plt>
     f84:	adrp	x21, 7000 <boot_Digest__SHA@@Base+0x60cc>
     f88:	adrp	x1, 7000 <boot_Digest__SHA@@Base+0x60cc>
     f8c:	adrp	x2, 1000 <boot_Digest__SHA@@Base+0xcc>
     f90:	add	x21, x21, #0xffe
     f94:	stur	w0, [x29, #-4]
     f98:	add	x1, x1, #0xfbb
     f9c:	add	x2, x2, #0x970
     fa0:	mov	x0, x19
     fa4:	mov	x3, x20
     fa8:	mov	x4, x21
     fac:	mov	w5, wzr
     fb0:	bl	df0 <Perl_newXS_flags@plt>
     fb4:	adrp	x23, 7000 <boot_Digest__SHA@@Base+0x60cc>
     fb8:	adrp	x1, 7000 <boot_Digest__SHA@@Base+0x60cc>
     fbc:	adrp	x2, 1000 <boot_Digest__SHA@@Base+0xcc>
     fc0:	add	x23, x23, #0xfff
     fc4:	add	x1, x1, #0xfd0
     fc8:	add	x2, x2, #0xb94
     fcc:	mov	x0, x19
     fd0:	mov	x3, x20
     fd4:	mov	x4, x23
     fd8:	mov	w5, wzr
     fdc:	bl	df0 <Perl_newXS_flags@plt>
     fe0:	adrp	x1, 7000 <boot_Digest__SHA@@Base+0x60cc>
     fe4:	adrp	x2, 1000 <boot_Digest__SHA@@Base+0xcc>
     fe8:	adrp	x4, 7000 <boot_Digest__SHA@@Base+0x60cc>
     fec:	add	x1, x1, #0xfe7
     ff0:	add	x2, x2, #0xc74
     ff4:	add	x4, x4, #0xffd
     ff8:	mov	x0, x19
     ffc:	mov	x3, x20
    1000:	mov	w5, wzr
    1004:	bl	df0 <Perl_newXS_flags@plt>
    1008:	adrp	x1, 8000 <boot_Digest__SHA@@Base+0x70cc>
    100c:	adrp	x2, 1000 <boot_Digest__SHA@@Base+0xcc>
    1010:	add	x1, x1, #0x1
    1014:	add	x2, x2, #0xe88
    1018:	mov	x0, x19
    101c:	mov	x3, x20
    1020:	mov	x4, x21
    1024:	mov	w5, wzr
    1028:	bl	df0 <Perl_newXS_flags@plt>
    102c:	adrp	x1, 8000 <boot_Digest__SHA@@Base+0x70cc>
    1030:	adrp	x2, 2000 <boot_Digest__SHA@@Base+0x10cc>
    1034:	add	x1, x1, #0x15
    1038:	add	x2, x2, #0x5c
    103c:	mov	x0, x19
    1040:	mov	x3, x20
    1044:	mov	x4, x23
    1048:	mov	w5, wzr
    104c:	bl	df0 <Perl_newXS_flags@plt>
    1050:	adrp	x1, 8000 <boot_Digest__SHA@@Base+0x70cc>
    1054:	adrp	x2, 2000 <boot_Digest__SHA@@Base+0x10cc>
    1058:	add	x1, x1, #0x28
    105c:	add	x2, x2, #0x1bc
    1060:	mov	x0, x19
    1064:	mov	x3, x20
    1068:	mov	x4, x23
    106c:	mov	w5, wzr
    1070:	bl	df0 <Perl_newXS_flags@plt>
    1074:	adrp	x25, 2000 <boot_Digest__SHA@@Base+0x10cc>
    1078:	adrp	x24, 8000 <boot_Digest__SHA@@Base+0x70cc>
    107c:	adrp	x1, 8000 <boot_Digest__SHA@@Base+0x70cc>
    1080:	add	x25, x25, #0x29c
    1084:	add	x24, x24, #0x4df
    1088:	add	x1, x1, #0x3d
    108c:	mov	x0, x19
    1090:	mov	x2, x25
    1094:	mov	x3, x20
    1098:	mov	x4, x24
    109c:	mov	w5, wzr
    10a0:	bl	df0 <Perl_newXS_flags@plt>
    10a4:	ldr	x8, [x0]
    10a8:	adrp	x1, 8000 <boot_Digest__SHA@@Base+0x70cc>
    10ac:	add	x1, x1, #0x4f
    10b0:	mov	x0, x19
    10b4:	mov	x2, x25
    10b8:	mov	x3, x20
    10bc:	mov	x4, x24
    10c0:	mov	w5, wzr
    10c4:	str	wzr, [x8, #40]
    10c8:	bl	df0 <Perl_newXS_flags@plt>
    10cc:	ldr	x8, [x0]
    10d0:	adrp	x1, 8000 <boot_Digest__SHA@@Base+0x70cc>
    10d4:	mov	w9, #0x2                   	// #2
    10d8:	add	x1, x1, #0x68
    10dc:	mov	x0, x19
    10e0:	mov	x2, x25
    10e4:	mov	x3, x20
    10e8:	mov	x4, x24
    10ec:	mov	w5, wzr
    10f0:	str	w9, [x8, #40]
    10f4:	bl	df0 <Perl_newXS_flags@plt>
    10f8:	ldr	x8, [x0]
    10fc:	adrp	x1, 8000 <boot_Digest__SHA@@Base+0x70cc>
    1100:	mov	w9, #0x1                   	// #1
    1104:	add	x1, x1, #0x7e
    1108:	mov	x0, x19
    110c:	mov	x2, x25
    1110:	mov	x3, x20
    1114:	mov	x4, x24
    1118:	mov	w5, wzr
    111c:	str	w9, [x8, #40]
    1120:	bl	df0 <Perl_newXS_flags@plt>
    1124:	ldr	x8, [x0]
    1128:	adrp	x1, 8000 <boot_Digest__SHA@@Base+0x70cc>
    112c:	mov	w9, #0x3                   	// #3
    1130:	add	x1, x1, #0x92
    1134:	mov	x0, x19
    1138:	mov	x2, x25
    113c:	mov	x3, x20
    1140:	mov	x4, x24
    1144:	mov	w5, wzr
    1148:	str	w9, [x8, #40]
    114c:	bl	df0 <Perl_newXS_flags@plt>
    1150:	ldr	x8, [x0]
    1154:	adrp	x1, 8000 <boot_Digest__SHA@@Base+0x70cc>
    1158:	mov	w9, #0x5                   	// #5
    115c:	add	x1, x1, #0xad
    1160:	mov	x0, x19
    1164:	mov	x2, x25
    1168:	mov	x3, x20
    116c:	mov	x4, x24
    1170:	mov	w5, wzr
    1174:	str	w9, [x8, #40]
    1178:	bl	df0 <Perl_newXS_flags@plt>
    117c:	ldr	x8, [x0]
    1180:	adrp	x1, 8000 <boot_Digest__SHA@@Base+0x70cc>
    1184:	mov	w9, #0x4                   	// #4
    1188:	add	x1, x1, #0xc5
    118c:	mov	x0, x19
    1190:	mov	x2, x25
    1194:	mov	x3, x20
    1198:	mov	x4, x24
    119c:	mov	w5, wzr
    11a0:	str	w9, [x8, #40]
    11a4:	bl	df0 <Perl_newXS_flags@plt>
    11a8:	ldr	x8, [x0]
    11ac:	adrp	x1, 8000 <boot_Digest__SHA@@Base+0x70cc>
    11b0:	mov	w9, #0x6                   	// #6
    11b4:	add	x1, x1, #0xd9
    11b8:	mov	x0, x19
    11bc:	mov	x2, x25
    11c0:	mov	x3, x20
    11c4:	mov	x4, x24
    11c8:	mov	w5, wzr
    11cc:	str	w9, [x8, #40]
    11d0:	bl	df0 <Perl_newXS_flags@plt>
    11d4:	ldr	x8, [x0]
    11d8:	adrp	x1, 8000 <boot_Digest__SHA@@Base+0x70cc>
    11dc:	mov	w9, #0x8                   	// #8
    11e0:	add	x1, x1, #0xf4
    11e4:	mov	x0, x19
    11e8:	mov	x2, x25
    11ec:	mov	x3, x20
    11f0:	mov	x4, x24
    11f4:	mov	w5, wzr
    11f8:	str	w9, [x8, #40]
    11fc:	bl	df0 <Perl_newXS_flags@plt>
    1200:	ldr	x8, [x0]
    1204:	adrp	x1, 8000 <boot_Digest__SHA@@Base+0x70cc>
    1208:	mov	w9, #0x7                   	// #7
    120c:	add	x1, x1, #0x10c
    1210:	mov	x0, x19
    1214:	mov	x2, x25
    1218:	mov	x3, x20
    121c:	mov	x4, x24
    1220:	mov	w5, wzr
    1224:	str	w9, [x8, #40]
    1228:	bl	df0 <Perl_newXS_flags@plt>
    122c:	ldr	x8, [x0]
    1230:	adrp	x1, 8000 <boot_Digest__SHA@@Base+0x70cc>
    1234:	mov	w9, #0x9                   	// #9
    1238:	add	x1, x1, #0x120
    123c:	mov	x0, x19
    1240:	mov	x2, x25
    1244:	mov	x3, x20
    1248:	mov	x4, x24
    124c:	mov	w5, wzr
    1250:	str	w9, [x8, #40]
    1254:	bl	df0 <Perl_newXS_flags@plt>
    1258:	ldr	x8, [x0]
    125c:	adrp	x1, 8000 <boot_Digest__SHA@@Base+0x70cc>
    1260:	mov	w9, #0xb                   	// #11
    1264:	add	x1, x1, #0x13b
    1268:	mov	x0, x19
    126c:	mov	x2, x25
    1270:	mov	x3, x20
    1274:	mov	x4, x24
    1278:	mov	w5, wzr
    127c:	str	w9, [x8, #40]
    1280:	bl	df0 <Perl_newXS_flags@plt>
    1284:	ldr	x8, [x0]
    1288:	adrp	x1, 8000 <boot_Digest__SHA@@Base+0x70cc>
    128c:	mov	w9, #0xa                   	// #10
    1290:	add	x1, x1, #0x153
    1294:	mov	x0, x19
    1298:	mov	x2, x25
    129c:	mov	x3, x20
    12a0:	mov	x4, x24
    12a4:	mov	w5, wzr
    12a8:	str	w9, [x8, #40]
    12ac:	bl	df0 <Perl_newXS_flags@plt>
    12b0:	ldr	x8, [x0]
    12b4:	adrp	x1, 8000 <boot_Digest__SHA@@Base+0x70cc>
    12b8:	mov	w9, #0xc                   	// #12
    12bc:	add	x1, x1, #0x167
    12c0:	mov	x0, x19
    12c4:	mov	x2, x25
    12c8:	mov	x3, x20
    12cc:	mov	x4, x24
    12d0:	mov	w5, wzr
    12d4:	str	w9, [x8, #40]
    12d8:	bl	df0 <Perl_newXS_flags@plt>
    12dc:	ldr	x8, [x0]
    12e0:	adrp	x1, 8000 <boot_Digest__SHA@@Base+0x70cc>
    12e4:	mov	w9, #0xf                   	// #15
    12e8:	add	x1, x1, #0x17e
    12ec:	mov	x0, x19
    12f0:	mov	x2, x25
    12f4:	mov	x3, x20
    12f8:	mov	x4, x24
    12fc:	mov	w5, wzr
    1300:	str	w9, [x8, #40]
    1304:	bl	df0 <Perl_newXS_flags@plt>
    1308:	ldr	x8, [x0]
    130c:	adrp	x1, 8000 <boot_Digest__SHA@@Base+0x70cc>
    1310:	mov	w9, #0x11                  	// #17
    1314:	add	x1, x1, #0x19c
    1318:	mov	x0, x19
    131c:	mov	x2, x25
    1320:	mov	x3, x20
    1324:	mov	x4, x24
    1328:	mov	w5, wzr
    132c:	str	w9, [x8, #40]
    1330:	bl	df0 <Perl_newXS_flags@plt>
    1334:	ldr	x8, [x0]
    1338:	adrp	x1, 8000 <boot_Digest__SHA@@Base+0x70cc>
    133c:	mov	w9, #0x10                  	// #16
    1340:	add	x1, x1, #0x1b7
    1344:	mov	x0, x19
    1348:	mov	x2, x25
    134c:	mov	x3, x20
    1350:	mov	x4, x24
    1354:	mov	w5, wzr
    1358:	str	w9, [x8, #40]
    135c:	bl	df0 <Perl_newXS_flags@plt>
    1360:	ldr	x8, [x0]
    1364:	adrp	x1, 8000 <boot_Digest__SHA@@Base+0x70cc>
    1368:	mov	w22, #0x12                  	// #18
    136c:	add	x1, x1, #0x1ce
    1370:	mov	x0, x19
    1374:	mov	x2, x25
    1378:	mov	x3, x20
    137c:	mov	x4, x24
    1380:	mov	w5, wzr
    1384:	str	w22, [x8, #40]
    1388:	bl	df0 <Perl_newXS_flags@plt>
    138c:	ldr	x8, [x0]
    1390:	adrp	x1, 8000 <boot_Digest__SHA@@Base+0x70cc>
    1394:	mov	w26, #0x14                  	// #20
    1398:	add	x1, x1, #0x1ec
    139c:	mov	x0, x19
    13a0:	mov	x2, x25
    13a4:	mov	x3, x20
    13a8:	mov	x4, x24
    13ac:	mov	w5, wzr
    13b0:	str	w26, [x8, #40]
    13b4:	bl	df0 <Perl_newXS_flags@plt>
    13b8:	ldr	x8, [x0]
    13bc:	adrp	x1, 8000 <boot_Digest__SHA@@Base+0x70cc>
    13c0:	mov	w28, #0x13                  	// #19
    13c4:	add	x1, x1, #0x207
    13c8:	mov	x0, x19
    13cc:	mov	x2, x25
    13d0:	mov	x3, x20
    13d4:	mov	x4, x24
    13d8:	mov	w5, wzr
    13dc:	str	w28, [x8, #40]
    13e0:	bl	df0 <Perl_newXS_flags@plt>
    13e4:	ldr	x8, [x0]
    13e8:	adrp	x1, 8000 <boot_Digest__SHA@@Base+0x70cc>
    13ec:	mov	w21, #0xe                   	// #14
    13f0:	add	x1, x1, #0x222
    13f4:	mov	x0, x19
    13f8:	mov	x2, x25
    13fc:	mov	x3, x20
    1400:	mov	x4, x24
    1404:	mov	w5, wzr
    1408:	str	w21, [x8, #40]
    140c:	bl	df0 <Perl_newXS_flags@plt>
    1410:	ldr	x8, [x0]
    1414:	adrp	x25, 2000 <boot_Digest__SHA@@Base+0x10cc>
    1418:	adrp	x1, 8000 <boot_Digest__SHA@@Base+0x70cc>
    141c:	add	x25, x25, #0x784
    1420:	mov	w27, #0xd                   	// #13
    1424:	add	x1, x1, #0x23a
    1428:	mov	x0, x19
    142c:	mov	x2, x25
    1430:	mov	x3, x20
    1434:	mov	x4, x24
    1438:	mov	w5, wzr
    143c:	str	w27, [x8, #40]
    1440:	bl	df0 <Perl_newXS_flags@plt>
    1444:	ldr	x8, [x0]
    1448:	adrp	x1, 8000 <boot_Digest__SHA@@Base+0x70cc>
    144c:	add	x1, x1, #0x251
    1450:	mov	x0, x19
    1454:	mov	x2, x25
    1458:	mov	x3, x20
    145c:	mov	x4, x24
    1460:	mov	w5, wzr
    1464:	str	wzr, [x8, #40]
    1468:	bl	df0 <Perl_newXS_flags@plt>
    146c:	ldr	x8, [x0]
    1470:	adrp	x1, 8000 <boot_Digest__SHA@@Base+0x70cc>
    1474:	mov	w9, #0x2                   	// #2
    1478:	add	x1, x1, #0x26f
    147c:	mov	x0, x19
    1480:	mov	x2, x25
    1484:	mov	x3, x20
    1488:	mov	x4, x24
    148c:	mov	w5, wzr
    1490:	str	w9, [x8, #40]
    1494:	bl	df0 <Perl_newXS_flags@plt>
    1498:	ldr	x8, [x0]
    149c:	adrp	x1, 8000 <boot_Digest__SHA@@Base+0x70cc>
    14a0:	mov	w9, #0x1                   	// #1
    14a4:	add	x1, x1, #0x28a
    14a8:	mov	x0, x19
    14ac:	mov	x2, x25
    14b0:	mov	x3, x20
    14b4:	mov	x4, x24
    14b8:	mov	w5, wzr
    14bc:	str	w9, [x8, #40]
    14c0:	bl	df0 <Perl_newXS_flags@plt>
    14c4:	ldr	x8, [x0]
    14c8:	adrp	x1, 8000 <boot_Digest__SHA@@Base+0x70cc>
    14cc:	mov	w9, #0x3                   	// #3
    14d0:	add	x1, x1, #0x2a3
    14d4:	mov	x0, x19
    14d8:	mov	x2, x25
    14dc:	mov	x3, x20
    14e0:	mov	x4, x24
    14e4:	mov	w5, wzr
    14e8:	str	w9, [x8, #40]
    14ec:	bl	df0 <Perl_newXS_flags@plt>
    14f0:	ldr	x8, [x0]
    14f4:	adrp	x1, 8000 <boot_Digest__SHA@@Base+0x70cc>
    14f8:	mov	w9, #0x5                   	// #5
    14fc:	add	x1, x1, #0x2c3
    1500:	mov	x0, x19
    1504:	mov	x2, x25
    1508:	mov	x3, x20
    150c:	mov	x4, x24
    1510:	mov	w5, wzr
    1514:	str	w9, [x8, #40]
    1518:	bl	df0 <Perl_newXS_flags@plt>
    151c:	ldr	x8, [x0]
    1520:	adrp	x1, 8000 <boot_Digest__SHA@@Base+0x70cc>
    1524:	mov	w9, #0x4                   	// #4
    1528:	add	x1, x1, #0x2e0
    152c:	mov	x0, x19
    1530:	mov	x2, x25
    1534:	mov	x3, x20
    1538:	mov	x4, x24
    153c:	mov	w5, wzr
    1540:	str	w9, [x8, #40]
    1544:	bl	df0 <Perl_newXS_flags@plt>
    1548:	ldr	x8, [x0]
    154c:	adrp	x1, 8000 <boot_Digest__SHA@@Base+0x70cc>
    1550:	mov	w9, #0x6                   	// #6
    1554:	add	x1, x1, #0x2f9
    1558:	mov	x0, x19
    155c:	mov	x2, x25
    1560:	mov	x3, x20
    1564:	mov	x4, x24
    1568:	mov	w5, wzr
    156c:	str	w9, [x8, #40]
    1570:	bl	df0 <Perl_newXS_flags@plt>
    1574:	ldr	x8, [x0]
    1578:	adrp	x1, 8000 <boot_Digest__SHA@@Base+0x70cc>
    157c:	mov	w9, #0x8                   	// #8
    1580:	add	x1, x1, #0x319
    1584:	mov	x0, x19
    1588:	mov	x2, x25
    158c:	mov	x3, x20
    1590:	mov	x4, x24
    1594:	mov	w5, wzr
    1598:	str	w9, [x8, #40]
    159c:	bl	df0 <Perl_newXS_flags@plt>
    15a0:	ldr	x8, [x0]
    15a4:	adrp	x1, 8000 <boot_Digest__SHA@@Base+0x70cc>
    15a8:	mov	w9, #0x7                   	// #7
    15ac:	add	x1, x1, #0x336
    15b0:	mov	x0, x19
    15b4:	mov	x2, x25
    15b8:	mov	x3, x20
    15bc:	mov	x4, x24
    15c0:	mov	w5, wzr
    15c4:	str	w9, [x8, #40]
    15c8:	bl	df0 <Perl_newXS_flags@plt>
    15cc:	ldr	x8, [x0]
    15d0:	adrp	x1, 8000 <boot_Digest__SHA@@Base+0x70cc>
    15d4:	mov	w9, #0x9                   	// #9
    15d8:	add	x1, x1, #0x34f
    15dc:	mov	x0, x19
    15e0:	mov	x2, x25
    15e4:	mov	x3, x20
    15e8:	mov	x4, x24
    15ec:	mov	w5, wzr
    15f0:	str	w9, [x8, #40]
    15f4:	bl	df0 <Perl_newXS_flags@plt>
    15f8:	ldr	x8, [x0]
    15fc:	adrp	x1, 8000 <boot_Digest__SHA@@Base+0x70cc>
    1600:	mov	w9, #0xb                   	// #11
    1604:	add	x1, x1, #0x36f
    1608:	mov	x0, x19
    160c:	mov	x2, x25
    1610:	mov	x3, x20
    1614:	mov	x4, x24
    1618:	mov	w5, wzr
    161c:	str	w9, [x8, #40]
    1620:	bl	df0 <Perl_newXS_flags@plt>
    1624:	ldr	x8, [x0]
    1628:	adrp	x1, 8000 <boot_Digest__SHA@@Base+0x70cc>
    162c:	mov	w9, #0xa                   	// #10
    1630:	add	x1, x1, #0x38c
    1634:	mov	x0, x19
    1638:	mov	x2, x25
    163c:	mov	x3, x20
    1640:	mov	x4, x24
    1644:	mov	w5, wzr
    1648:	str	w9, [x8, #40]
    164c:	bl	df0 <Perl_newXS_flags@plt>
    1650:	ldr	x8, [x0]
    1654:	adrp	x1, 8000 <boot_Digest__SHA@@Base+0x70cc>
    1658:	mov	w9, #0xc                   	// #12
    165c:	add	x1, x1, #0x3a5
    1660:	mov	x0, x19
    1664:	mov	x2, x25
    1668:	mov	x3, x20
    166c:	mov	x4, x24
    1670:	mov	w5, wzr
    1674:	str	w9, [x8, #40]
    1678:	bl	df0 <Perl_newXS_flags@plt>
    167c:	ldr	x8, [x0]
    1680:	adrp	x1, 8000 <boot_Digest__SHA@@Base+0x70cc>
    1684:	mov	w9, #0xf                   	// #15
    1688:	add	x1, x1, #0x3c1
    168c:	mov	x0, x19
    1690:	mov	x2, x25
    1694:	mov	x3, x20
    1698:	mov	x4, x24
    169c:	mov	w5, wzr
    16a0:	str	w9, [x8, #40]
    16a4:	bl	df0 <Perl_newXS_flags@plt>
    16a8:	ldr	x8, [x0]
    16ac:	adrp	x1, 8000 <boot_Digest__SHA@@Base+0x70cc>
    16b0:	mov	w9, #0x11                  	// #17
    16b4:	add	x1, x1, #0x3e4
    16b8:	mov	x0, x19
    16bc:	mov	x2, x25
    16c0:	mov	x3, x20
    16c4:	mov	x4, x24
    16c8:	mov	w5, wzr
    16cc:	str	w9, [x8, #40]
    16d0:	bl	df0 <Perl_newXS_flags@plt>
    16d4:	ldr	x8, [x0]
    16d8:	adrp	x1, 8000 <boot_Digest__SHA@@Base+0x70cc>
    16dc:	mov	w9, #0x10                  	// #16
    16e0:	add	x1, x1, #0x404
    16e4:	mov	x0, x19
    16e8:	mov	x2, x25
    16ec:	mov	x3, x20
    16f0:	mov	x4, x24
    16f4:	mov	w5, wzr
    16f8:	str	w9, [x8, #40]
    16fc:	bl	df0 <Perl_newXS_flags@plt>
    1700:	ldr	x8, [x0]
    1704:	adrp	x1, 8000 <boot_Digest__SHA@@Base+0x70cc>
    1708:	add	x1, x1, #0x420
    170c:	mov	x0, x19
    1710:	mov	x2, x25
    1714:	mov	x3, x20
    1718:	mov	x4, x24
    171c:	mov	w5, wzr
    1720:	str	w22, [x8, #40]
    1724:	bl	df0 <Perl_newXS_flags@plt>
    1728:	ldr	x8, [x0]
    172c:	adrp	x1, 8000 <boot_Digest__SHA@@Base+0x70cc>
    1730:	add	x1, x1, #0x443
    1734:	mov	x0, x19
    1738:	mov	x2, x25
    173c:	mov	x3, x20
    1740:	mov	x4, x24
    1744:	mov	w5, wzr
    1748:	str	w26, [x8, #40]
    174c:	bl	df0 <Perl_newXS_flags@plt>
    1750:	ldr	x8, [x0]
    1754:	adrp	x1, 8000 <boot_Digest__SHA@@Base+0x70cc>
    1758:	add	x1, x1, #0x463
    175c:	mov	x0, x19
    1760:	mov	x2, x25
    1764:	mov	x3, x20
    1768:	mov	x4, x24
    176c:	mov	w5, wzr
    1770:	str	w28, [x8, #40]
    1774:	bl	df0 <Perl_newXS_flags@plt>
    1778:	ldr	x8, [x0]
    177c:	adrp	x1, 8000 <boot_Digest__SHA@@Base+0x70cc>
    1780:	add	x1, x1, #0x483
    1784:	mov	x0, x19
    1788:	mov	x2, x25
    178c:	mov	x3, x20
    1790:	mov	x4, x24
    1794:	mov	w5, wzr
    1798:	str	w21, [x8, #40]
    179c:	bl	df0 <Perl_newXS_flags@plt>
    17a0:	ldr	x8, [x0]
    17a4:	adrp	x24, 3000 <boot_Digest__SHA@@Base+0x20cc>
    17a8:	adrp	x1, 8000 <boot_Digest__SHA@@Base+0x70cc>
    17ac:	add	x24, x24, #0x430
    17b0:	add	x1, x1, #0x4a0
    17b4:	mov	x0, x19
    17b8:	mov	x2, x24
    17bc:	mov	x3, x20
    17c0:	mov	x4, x23
    17c4:	mov	w5, wzr
    17c8:	str	w27, [x8, #40]
    17cc:	bl	df0 <Perl_newXS_flags@plt>
    17d0:	ldr	x8, [x0]
    17d4:	adrp	x1, 8000 <boot_Digest__SHA@@Base+0x70cc>
    17d8:	mov	w21, #0x1                   	// #1
    17dc:	add	x1, x1, #0x4b7
    17e0:	mov	x0, x19
    17e4:	mov	x2, x24
    17e8:	mov	x3, x20
    17ec:	mov	x4, x23
    17f0:	mov	w5, wzr
    17f4:	str	w21, [x8, #40]
    17f8:	bl	df0 <Perl_newXS_flags@plt>
    17fc:	ldr	x8, [x0]
    1800:	adrp	x1, 8000 <boot_Digest__SHA@@Base+0x70cc>
    1804:	adrp	x2, 3000 <boot_Digest__SHA@@Base+0x20cc>
    1808:	adrp	x4, 8000 <boot_Digest__SHA@@Base+0x70cc>
    180c:	add	x1, x1, #0x4cd
    1810:	add	x2, x2, #0x5d4
    1814:	add	x4, x4, #0x4de
    1818:	mov	x0, x19
    181c:	mov	x3, x20
    1820:	mov	w5, wzr
    1824:	str	wzr, [x8, #40]
    1828:	bl	df0 <Perl_newXS_flags@plt>
    182c:	adrp	x24, 3000 <boot_Digest__SHA@@Base+0x20cc>
    1830:	adrp	x1, 8000 <boot_Digest__SHA@@Base+0x70cc>
    1834:	add	x24, x24, #0x7b8
    1838:	add	x1, x1, #0x4e2
    183c:	mov	x0, x19
    1840:	mov	x2, x24
    1844:	mov	x3, x20
    1848:	mov	x4, x23
    184c:	mov	w5, wzr
    1850:	bl	df0 <Perl_newXS_flags@plt>
    1854:	ldr	x8, [x0]
    1858:	adrp	x1, 8000 <boot_Digest__SHA@@Base+0x70cc>
    185c:	mov	w9, #0x2                   	// #2
    1860:	add	x1, x1, #0x4f9
    1864:	mov	x0, x19
    1868:	mov	x2, x24
    186c:	mov	x3, x20
    1870:	mov	x4, x23
    1874:	mov	w5, wzr
    1878:	str	w9, [x8, #40]
    187c:	bl	df0 <Perl_newXS_flags@plt>
    1880:	ldr	x8, [x0]
    1884:	adrp	x1, 8000 <boot_Digest__SHA@@Base+0x70cc>
    1888:	add	x1, x1, #0x50d
    188c:	mov	x0, x19
    1890:	mov	x2, x24
    1894:	mov	x3, x20
    1898:	mov	x4, x23
    189c:	mov	w5, wzr
    18a0:	str	wzr, [x8, #40]
    18a4:	bl	df0 <Perl_newXS_flags@plt>
    18a8:	ldr	x8, [x0]
    18ac:	adrp	x1, 8000 <boot_Digest__SHA@@Base+0x70cc>
    18b0:	adrp	x2, 3000 <boot_Digest__SHA@@Base+0x20cc>
    18b4:	add	x1, x1, #0x524
    18b8:	add	x2, x2, #0x974
    18bc:	mov	x0, x19
    18c0:	mov	x3, x20
    18c4:	mov	x4, x23
    18c8:	mov	w5, wzr
    18cc:	str	w21, [x8, #40]
    18d0:	bl	df0 <Perl_newXS_flags@plt>
    18d4:	adrp	x21, 7000 <boot_Digest__SHA@@Base+0x60cc>
    18d8:	adrp	x1, 8000 <boot_Digest__SHA@@Base+0x70cc>
    18dc:	adrp	x2, 3000 <boot_Digest__SHA@@Base+0x20cc>
    18e0:	add	x21, x21, #0xffe
    18e4:	add	x1, x1, #0x53b
    18e8:	add	x2, x2, #0xb74
    18ec:	mov	x0, x19
    18f0:	mov	x3, x20
    18f4:	mov	x4, x21
    18f8:	mov	w5, wzr
    18fc:	bl	df0 <Perl_newXS_flags@plt>
    1900:	adrp	x1, 8000 <boot_Digest__SHA@@Base+0x70cc>
    1904:	adrp	x2, 3000 <boot_Digest__SHA@@Base+0x20cc>
    1908:	add	x1, x1, #0x552
    190c:	add	x2, x2, #0xe4c
    1910:	mov	x0, x19
    1914:	mov	x3, x20
    1918:	mov	x4, x21
    191c:	mov	w5, wzr
    1920:	bl	df0 <Perl_newXS_flags@plt>
    1924:	adrp	x1, 8000 <boot_Digest__SHA@@Base+0x70cc>
    1928:	adrp	x2, 3000 <boot_Digest__SHA@@Base+0x20cc>
    192c:	add	x1, x1, #0x56b
    1930:	add	x2, x2, #0xfdc
    1934:	mov	x0, x19
    1938:	mov	x3, x20
    193c:	mov	x4, x21
    1940:	mov	w5, wzr
    1944:	bl	df0 <Perl_newXS_flags@plt>
    1948:	mov	x0, x19
    194c:	ldur	w1, [x29, #-4]
    1950:	ldp	x20, x19, [sp, #96]
    1954:	ldp	x22, x21, [sp, #80]
    1958:	ldp	x24, x23, [sp, #64]
    195c:	ldp	x26, x25, [sp, #48]
    1960:	ldp	x28, x27, [sp, #32]
    1964:	ldp	x29, x30, [sp, #16]
    1968:	add	sp, sp, #0x70
    196c:	b	d60 <Perl_xs_boot_epilog@plt>
    1970:	stp	x29, x30, [sp, #-64]!
    1974:	stp	x22, x21, [sp, #32]
    1978:	stp	x20, x19, [sp, #48]
    197c:	ldr	x8, [x0, #120]
    1980:	str	x23, [sp, #16]
    1984:	mov	x29, sp
    1988:	sub	x9, x8, #0x4
    198c:	str	x9, [x0, #120]
    1990:	ldrsw	x21, [x8]
    1994:	ldr	x8, [x0, #24]
    1998:	ldr	x9, [x0]
    199c:	add	x10, x8, x21, lsl #3
    19a0:	sub	x9, x9, x10
    19a4:	and	x9, x9, #0x7fffffff8
    19a8:	cmp	x9, #0x10
    19ac:	b.ne	1b80 <boot_Digest__SHA@@Base+0xc4c>  // b.any
    19b0:	add	x23, x21, #0x1
    19b4:	ldr	x20, [x8, x23, lsl #3]
    19b8:	mov	w22, #0x100                 	// #256
    19bc:	mov	x19, x0
    19c0:	movk	w22, #0x20, lsl #16
    19c4:	mov	x1, x20
    19c8:	bl	d90 <Perl_sv_isobject@plt>
    19cc:	cbz	w0, 1a08 <boot_Digest__SHA@@Base+0xad4>
    19d0:	adrp	x2, 8000 <boot_Digest__SHA@@Base+0x70cc>
    19d4:	add	x2, x2, #0x58c
    19d8:	mov	x0, x19
    19dc:	mov	x1, x20
    19e0:	bl	ce0 <Perl_sv_derived_from@plt>
    19e4:	tbz	w0, #0, 1a08 <boot_Digest__SHA@@Base+0xad4>
    19e8:	ldr	x1, [x20, #16]
    19ec:	ldr	w8, [x1, #12]
    19f0:	and	w8, w8, w22
    19f4:	cmp	w8, #0x100
    19f8:	b.ne	1b5c <boot_Digest__SHA@@Base+0xc28>  // b.any
    19fc:	ldr	x8, [x1]
    1a00:	ldr	x20, [x8, #32]
    1a04:	b	1a0c <boot_Digest__SHA@@Base+0xad8>
    1a08:	mov	x20, xzr
    1a0c:	ldr	x8, [x19, #24]
    1a10:	add	w9, w21, #0x2
    1a14:	ldr	x1, [x8, w9, sxtw #3]
    1a18:	ldr	w8, [x1, #12]
    1a1c:	and	w8, w8, w22
    1a20:	cmp	w8, #0x100
    1a24:	b.ne	1a78 <boot_Digest__SHA@@Base+0xb44>  // b.any
    1a28:	ldr	x8, [x1]
    1a2c:	ldr	x22, [x8, #32]
    1a30:	ldr	x8, [x19, #8]
    1a34:	ldrb	w9, [x8, #35]
    1a38:	tbz	w9, #2, 1a94 <boot_Digest__SHA@@Base+0xb60>
    1a3c:	ldr	x9, [x19, #16]
    1a40:	ldr	x8, [x8, #24]
    1a44:	ldr	x21, [x9, x8, lsl #3]
    1a48:	cmp	w22, #0x17f
    1a4c:	mov	x2, xzr
    1a50:	b.le	1aac <boot_Digest__SHA@@Base+0xb78>
    1a54:	mov	w8, #0xd0df                	// #53471
    1a58:	movk	w8, #0x7, lsl #16
    1a5c:	cmp	w22, w8
    1a60:	b.gt	1ac8 <boot_Digest__SHA@@Base+0xb94>
    1a64:	cmp	w22, #0x180
    1a68:	b.eq	1ae8 <boot_Digest__SHA@@Base+0xbb4>  // b.none
    1a6c:	cmp	w22, #0x200
    1a70:	b.eq	1ae8 <boot_Digest__SHA@@Base+0xbb4>  // b.none
    1a74:	b	1af8 <boot_Digest__SHA@@Base+0xbc4>
    1a78:	mov	w2, #0x2                   	// #2
    1a7c:	mov	x0, x19
    1a80:	bl	cb0 <Perl_sv_2iv_flags@plt>
    1a84:	mov	x22, x0
    1a88:	ldr	x8, [x19, #8]
    1a8c:	ldrb	w9, [x8, #35]
    1a90:	tbnz	w9, #2, 1a3c <boot_Digest__SHA@@Base+0xb08>
    1a94:	mov	x0, x19
    1a98:	bl	e50 <Perl_sv_newmortal@plt>
    1a9c:	mov	x21, x0
    1aa0:	cmp	w22, #0x17f
    1aa4:	mov	x2, xzr
    1aa8:	b.gt	1a54 <boot_Digest__SHA@@Base+0xb20>
    1aac:	cmp	w22, #0x1
    1ab0:	b.eq	1ae8 <boot_Digest__SHA@@Base+0xbb4>  // b.none
    1ab4:	cmp	w22, #0xe0
    1ab8:	b.eq	1ae8 <boot_Digest__SHA@@Base+0xbb4>  // b.none
    1abc:	cmp	w22, #0x100
    1ac0:	b.eq	1ae8 <boot_Digest__SHA@@Base+0xbb4>  // b.none
    1ac4:	b	1af8 <boot_Digest__SHA@@Base+0xbc4>
    1ac8:	mov	w8, #0xd100                	// #53504
    1acc:	movk	w8, #0x7, lsl #16
    1ad0:	cmp	w22, w8
    1ad4:	b.eq	1ae8 <boot_Digest__SHA@@Base+0xbb4>  // b.none
    1ad8:	mov	w8, #0xd0e0                	// #53472
    1adc:	movk	w8, #0x7, lsl #16
    1ae0:	cmp	w22, w8
    1ae4:	b.ne	1af8 <boot_Digest__SHA@@Base+0xbc4>  // b.any
    1ae8:	mov	x0, x20
    1aec:	str	w22, [x20]
    1af0:	bl	4228 <boot_Digest__SHA@@Base+0x32f4>
    1af4:	mov	w2, #0x1                   	// #1
    1af8:	ldr	w8, [x21, #12]
    1afc:	mov	w9, #0x8ff                 	// #2303
    1b00:	ldrb	w10, [x19, #185]
    1b04:	movk	w9, #0x9981, lsl #16
    1b08:	ldr	x20, [x19, #24]
    1b0c:	and	w9, w8, w9
    1b10:	cmp	w9, #0x1
    1b14:	cset	w9, eq  // eq = none
    1b18:	eor	x10, x10, #0x1
    1b1c:	tst	x9, x10
    1b20:	b.eq	1b70 <boot_Digest__SHA@@Base+0xc3c>  // b.none
    1b24:	mov	w9, #0x1100                	// #4352
    1b28:	orr	w8, w8, w9
    1b2c:	str	w8, [x21, #12]
    1b30:	str	x2, [x21, #16]
    1b34:	lsl	x8, x23, #3
    1b38:	str	x21, [x20, x8]
    1b3c:	ldr	x9, [x19, #24]
    1b40:	ldr	x23, [sp, #16]
    1b44:	add	x8, x9, x8
    1b48:	str	x8, [x19]
    1b4c:	ldp	x20, x19, [sp, #48]
    1b50:	ldp	x22, x21, [sp, #32]
    1b54:	ldp	x29, x30, [sp], #64
    1b58:	ret
    1b5c:	mov	w2, #0x2                   	// #2
    1b60:	mov	x0, x19
    1b64:	bl	cb0 <Perl_sv_2iv_flags@plt>
    1b68:	mov	x20, x0
    1b6c:	b	1a0c <boot_Digest__SHA@@Base+0xad8>
    1b70:	mov	x0, x19
    1b74:	mov	x1, x21
    1b78:	bl	d10 <Perl_sv_setiv_mg@plt>
    1b7c:	b	1b34 <boot_Digest__SHA@@Base+0xc00>
    1b80:	adrp	x8, 8000 <boot_Digest__SHA@@Base+0x70cc>
    1b84:	add	x8, x8, #0x585
    1b88:	mov	x0, x1
    1b8c:	mov	x1, x8
    1b90:	bl	db0 <Perl_croak_xs_usage@plt>
    1b94:	stp	x29, x30, [sp, #-48]!
    1b98:	stp	x20, x19, [sp, #32]
    1b9c:	ldr	x8, [x0, #120]
    1ba0:	ldr	x10, [x0]
    1ba4:	str	x21, [sp, #16]
    1ba8:	mov	x29, sp
    1bac:	sub	x9, x8, #0x4
    1bb0:	str	x9, [x0, #120]
    1bb4:	ldrsw	x8, [x8]
    1bb8:	ldr	x9, [x0, #24]
    1bbc:	add	x11, x9, x8, lsl #3
    1bc0:	sub	x10, x10, x11
    1bc4:	and	x10, x10, #0x7fffffff8
    1bc8:	cmp	x10, #0x8
    1bcc:	b.ne	1c60 <boot_Digest__SHA@@Base+0xd2c>  // b.any
    1bd0:	add	x21, x8, #0x1
    1bd4:	ldr	x20, [x9, x21, lsl #3]
    1bd8:	mov	x19, x0
    1bdc:	mov	x1, x20
    1be0:	bl	d90 <Perl_sv_isobject@plt>
    1be4:	cbz	w0, 1c28 <boot_Digest__SHA@@Base+0xcf4>
    1be8:	adrp	x2, 8000 <boot_Digest__SHA@@Base+0x70cc>
    1bec:	add	x2, x2, #0x58c
    1bf0:	mov	x0, x19
    1bf4:	mov	x1, x20
    1bf8:	bl	ce0 <Perl_sv_derived_from@plt>
    1bfc:	tbz	w0, #0, 1c28 <boot_Digest__SHA@@Base+0xcf4>
    1c00:	ldr	x1, [x20, #16]
    1c04:	mov	w9, #0x100                 	// #256
    1c08:	movk	w9, #0x20, lsl #16
    1c0c:	ldr	w8, [x1, #12]
    1c10:	and	w8, w8, w9
    1c14:	cmp	w8, #0x100
    1c18:	b.ne	1c50 <boot_Digest__SHA@@Base+0xd1c>  // b.any
    1c1c:	ldr	x8, [x1]
    1c20:	ldr	x0, [x8, #32]
    1c24:	b	1c2c <boot_Digest__SHA@@Base+0xcf8>
    1c28:	mov	x0, xzr
    1c2c:	bl	4228 <boot_Digest__SHA@@Base+0x32f4>
    1c30:	ldr	x8, [x19, #24]
    1c34:	add	x8, x8, x21, lsl #3
    1c38:	sub	x8, x8, #0x8
    1c3c:	str	x8, [x19]
    1c40:	ldp	x20, x19, [sp, #32]
    1c44:	ldr	x21, [sp, #16]
    1c48:	ldp	x29, x30, [sp], #48
    1c4c:	ret
    1c50:	mov	w2, #0x2                   	// #2
    1c54:	mov	x0, x19
    1c58:	bl	cb0 <Perl_sv_2iv_flags@plt>
    1c5c:	b	1c2c <boot_Digest__SHA@@Base+0xcf8>
    1c60:	adrp	x8, 8000 <boot_Digest__SHA@@Base+0x70cc>
    1c64:	add	x8, x8, #0x5a8
    1c68:	mov	x0, x1
    1c6c:	mov	x1, x8
    1c70:	bl	db0 <Perl_croak_xs_usage@plt>
    1c74:	stp	x29, x30, [sp, #-64]!
    1c78:	stp	x24, x23, [sp, #16]
    1c7c:	stp	x22, x21, [sp, #32]
    1c80:	stp	x20, x19, [sp, #48]
    1c84:	ldr	x8, [x0, #120]
    1c88:	mov	x29, sp
    1c8c:	sub	x9, x8, #0x4
    1c90:	str	x9, [x0, #120]
    1c94:	ldrsw	x22, [x8]
    1c98:	ldr	x8, [x0, #24]
    1c9c:	ldr	x9, [x0]
    1ca0:	add	x10, x8, x22, lsl #3
    1ca4:	sub	x9, x9, x10
    1ca8:	and	x9, x9, #0x7fffffff8
    1cac:	cmp	x9, #0x18
    1cb0:	b.ne	1e74 <boot_Digest__SHA@@Base+0xf40>  // b.any
    1cb4:	add	x24, x22, #0x1
    1cb8:	ldr	x1, [x8, x24, lsl #3]
    1cbc:	mov	w23, #0x100                 	// #256
    1cc0:	movk	w23, #0x20, lsl #16
    1cc4:	add	w10, w23, #0x300
    1cc8:	ldr	w9, [x1, #12]
    1ccc:	mov	x19, x0
    1cd0:	and	w9, w9, w10
    1cd4:	cmp	w9, #0x400
    1cd8:	b.ne	1ce4 <boot_Digest__SHA@@Base+0xdb0>  // b.any
    1cdc:	ldr	x20, [x1, #16]
    1ce0:	b	1cfc <boot_Digest__SHA@@Base+0xdc8>
    1ce4:	mov	w3, #0x2                   	// #2
    1ce8:	mov	x0, x19
    1cec:	mov	x2, xzr
    1cf0:	bl	d50 <Perl_sv_2pv_flags@plt>
    1cf4:	ldr	x8, [x19, #24]
    1cf8:	mov	x20, x0
    1cfc:	add	x9, x8, x22, lsl #3
    1d00:	ldr	x1, [x9, #16]
    1d04:	mov	w10, #0x100                 	// #256
    1d08:	movk	w10, #0x8000, lsl #16
    1d0c:	orr	w11, w10, #0x200000
    1d10:	ldr	w9, [x1, #12]
    1d14:	and	w9, w9, w11
    1d18:	cmp	w9, w10
    1d1c:	b.ne	1d2c <boot_Digest__SHA@@Base+0xdf8>  // b.any
    1d20:	ldr	x9, [x1]
    1d24:	ldr	x21, [x9, #32]
    1d28:	b	1d40 <boot_Digest__SHA@@Base+0xe0c>
    1d2c:	mov	w2, #0x2                   	// #2
    1d30:	mov	x0, x19
    1d34:	bl	cc0 <Perl_sv_2uv_flags@plt>
    1d38:	ldr	x8, [x19, #24]
    1d3c:	mov	x21, x0
    1d40:	add	w9, w22, #0x3
    1d44:	ldr	x22, [x8, w9, sxtw #3]
    1d48:	mov	x0, x19
    1d4c:	mov	x1, x22
    1d50:	bl	d90 <Perl_sv_isobject@plt>
    1d54:	cbz	w0, 1da8 <boot_Digest__SHA@@Base+0xe74>
    1d58:	adrp	x2, 8000 <boot_Digest__SHA@@Base+0x70cc>
    1d5c:	add	x2, x2, #0x58c
    1d60:	mov	x0, x19
    1d64:	mov	x1, x22
    1d68:	bl	ce0 <Perl_sv_derived_from@plt>
    1d6c:	tbz	w0, #0, 1da8 <boot_Digest__SHA@@Base+0xe74>
    1d70:	ldr	x1, [x22, #16]
    1d74:	ldr	w8, [x1, #12]
    1d78:	and	w8, w8, w23
    1d7c:	cmp	w8, #0x100
    1d80:	b.ne	1e44 <boot_Digest__SHA@@Base+0xf10>  // b.any
    1d84:	ldr	x8, [x1]
    1d88:	ldr	x23, [x8, #32]
    1d8c:	ldr	x8, [x19, #8]
    1d90:	ldrb	w9, [x8, #35]
    1d94:	tbz	w9, #2, 1db8 <boot_Digest__SHA@@Base+0xe84>
    1d98:	ldr	x9, [x19, #16]
    1d9c:	ldr	x8, [x8, #24]
    1da0:	ldr	x22, [x9, x8, lsl #3]
    1da4:	b	1dc4 <boot_Digest__SHA@@Base+0xe90>
    1da8:	mov	x23, xzr
    1dac:	ldr	x8, [x19, #8]
    1db0:	ldrb	w9, [x8, #35]
    1db4:	tbnz	w9, #2, 1d98 <boot_Digest__SHA@@Base+0xe64>
    1db8:	mov	x0, x19
    1dbc:	bl	e50 <Perl_sv_newmortal@plt>
    1dc0:	mov	x22, x0
    1dc4:	mov	x0, x20
    1dc8:	mov	x1, x21
    1dcc:	mov	x2, x23
    1dd0:	bl	78d0 <boot_Digest__SHA@@Base+0x699c>
    1dd4:	ldr	w8, [x22, #12]
    1dd8:	mov	w9, #0x8ff                 	// #2303
    1ddc:	ldrb	w10, [x19, #185]
    1de0:	movk	w9, #0x9981, lsl #16
    1de4:	ldr	x20, [x19, #24]
    1de8:	lsr	x11, x0, #63
    1dec:	and	w9, w8, w9
    1df0:	mvn	w11, w11
    1df4:	cmp	w9, #0x1
    1df8:	cset	w9, eq  // eq = none
    1dfc:	bic	w10, w11, w10
    1e00:	mov	x2, x0
    1e04:	tst	x10, x9
    1e08:	b.eq	1e64 <boot_Digest__SHA@@Base+0xf30>  // b.none
    1e0c:	mov	w9, #0x1100                	// #4352
    1e10:	orr	w8, w8, w9
    1e14:	str	w8, [x22, #12]
    1e18:	str	x2, [x22, #16]
    1e1c:	lsl	x8, x24, #3
    1e20:	str	x22, [x20, x8]
    1e24:	ldr	x9, [x19, #24]
    1e28:	add	x8, x9, x8
    1e2c:	str	x8, [x19]
    1e30:	ldp	x20, x19, [sp, #48]
    1e34:	ldp	x22, x21, [sp, #32]
    1e38:	ldp	x24, x23, [sp, #16]
    1e3c:	ldp	x29, x30, [sp], #64
    1e40:	ret
    1e44:	mov	w2, #0x2                   	// #2
    1e48:	mov	x0, x19
    1e4c:	bl	cb0 <Perl_sv_2iv_flags@plt>
    1e50:	mov	x23, x0
    1e54:	ldr	x8, [x19, #8]
    1e58:	ldrb	w9, [x8, #35]
    1e5c:	tbz	w9, #2, 1db8 <boot_Digest__SHA@@Base+0xe84>
    1e60:	b	1d98 <boot_Digest__SHA@@Base+0xe64>
    1e64:	mov	x0, x19
    1e68:	mov	x1, x22
    1e6c:	bl	e40 <Perl_sv_setuv_mg@plt>
    1e70:	b	1e1c <boot_Digest__SHA@@Base+0xee8>
    1e74:	adrp	x8, 8000 <boot_Digest__SHA@@Base+0x70cc>
    1e78:	add	x8, x8, #0x598
    1e7c:	mov	x0, x1
    1e80:	mov	x1, x8
    1e84:	bl	db0 <Perl_croak_xs_usage@plt>
    1e88:	stp	x29, x30, [sp, #-64]!
    1e8c:	stp	x22, x21, [sp, #32]
    1e90:	stp	x20, x19, [sp, #48]
    1e94:	ldr	x8, [x0, #120]
    1e98:	str	x23, [sp, #16]
    1e9c:	mov	x29, sp
    1ea0:	sub	x9, x8, #0x4
    1ea4:	str	x9, [x0, #120]
    1ea8:	ldr	w21, [x8]
    1eac:	ldr	x8, [x0, #24]
    1eb0:	ldr	x9, [x0]
    1eb4:	add	x10, x8, x21, lsl #3
    1eb8:	sub	x9, x9, x10
    1ebc:	and	x9, x9, #0x7fffffff8
    1ec0:	cmp	x9, #0x10
    1ec4:	b.ne	2048 <boot_Digest__SHA@@Base+0x1114>  // b.any
    1ec8:	add	w22, w21, #0x1
    1ecc:	ldr	x1, [x8, w22, sxtw #3]
    1ed0:	mov	w23, #0x100                 	// #256
    1ed4:	movk	w23, #0x20, lsl #16
    1ed8:	add	w10, w23, #0x300
    1edc:	ldr	w9, [x1, #12]
    1ee0:	mov	x19, x0
    1ee4:	and	w9, w9, w10
    1ee8:	cmp	w9, #0x400
    1eec:	b.ne	1ef8 <boot_Digest__SHA@@Base+0xfc4>  // b.any
    1ef0:	ldr	x20, [x1, #16]
    1ef4:	b	1f10 <boot_Digest__SHA@@Base+0xfdc>
    1ef8:	mov	w3, #0x2                   	// #2
    1efc:	mov	x0, x19
    1f00:	mov	x2, xzr
    1f04:	bl	d50 <Perl_sv_2pv_flags@plt>
    1f08:	ldr	x8, [x19, #24]
    1f0c:	mov	x20, x0
    1f10:	add	w9, w21, #0x2
    1f14:	ldr	x1, [x8, w9, sxtw #3]
    1f18:	ldr	w8, [x1, #12]
    1f1c:	and	w8, w8, w23
    1f20:	cmp	w8, #0x100
    1f24:	b.ne	1f34 <boot_Digest__SHA@@Base+0x1000>  // b.any
    1f28:	ldr	x8, [x1]
    1f2c:	ldr	x21, [x8, #32]
    1f30:	b	1f44 <boot_Digest__SHA@@Base+0x1010>
    1f34:	mov	w2, #0x2                   	// #2
    1f38:	mov	x0, x19
    1f3c:	bl	cb0 <Perl_sv_2iv_flags@plt>
    1f40:	mov	x21, x0
    1f44:	mov	w0, #0x1                   	// #1
    1f48:	mov	w1, #0x228                 	// #552
    1f4c:	sxtw	x23, w22
    1f50:	bl	dd0 <Perl_safesyscalloc@plt>
    1f54:	cmp	w21, #0x17f
    1f58:	mov	x22, x0
    1f5c:	b.le	1f84 <boot_Digest__SHA@@Base+0x1050>
    1f60:	mov	w8, #0xd0df                	// #53471
    1f64:	movk	w8, #0x7, lsl #16
    1f68:	cmp	w21, w8
    1f6c:	b.gt	1fa0 <boot_Digest__SHA@@Base+0x106c>
    1f70:	cmp	w21, #0x180
    1f74:	b.eq	1fc0 <boot_Digest__SHA@@Base+0x108c>  // b.none
    1f78:	cmp	w21, #0x200
    1f7c:	b.eq	1fc0 <boot_Digest__SHA@@Base+0x108c>  // b.none
    1f80:	b	2038 <boot_Digest__SHA@@Base+0x1104>
    1f84:	cmp	w21, #0x1
    1f88:	b.eq	1fc0 <boot_Digest__SHA@@Base+0x108c>  // b.none
    1f8c:	cmp	w21, #0xe0
    1f90:	b.eq	1fc0 <boot_Digest__SHA@@Base+0x108c>  // b.none
    1f94:	cmp	w21, #0x100
    1f98:	b.eq	1fc0 <boot_Digest__SHA@@Base+0x108c>  // b.none
    1f9c:	b	2038 <boot_Digest__SHA@@Base+0x1104>
    1fa0:	mov	w8, #0xd0e0                	// #53472
    1fa4:	movk	w8, #0x7, lsl #16
    1fa8:	cmp	w21, w8
    1fac:	b.eq	1fc0 <boot_Digest__SHA@@Base+0x108c>  // b.none
    1fb0:	mov	w8, #0xd100                	// #53504
    1fb4:	movk	w8, #0x7, lsl #16
    1fb8:	cmp	w21, w8
    1fbc:	b.ne	2038 <boot_Digest__SHA@@Base+0x1104>  // b.any
    1fc0:	mov	x0, x22
    1fc4:	str	w21, [x22]
    1fc8:	bl	4228 <boot_Digest__SHA@@Base+0x32f4>
    1fcc:	mov	x0, x19
    1fd0:	mov	x1, xzr
    1fd4:	bl	d00 <Perl_newSV@plt>
    1fd8:	mov	x21, x0
    1fdc:	mov	x0, x19
    1fe0:	mov	x1, x21
    1fe4:	mov	x2, x20
    1fe8:	mov	x3, x22
    1fec:	bl	ca0 <Perl_sv_setref_pv@plt>
    1ff0:	ldr	x8, [x21, #16]
    1ff4:	mov	x0, x19
    1ff8:	mov	x1, x21
    1ffc:	ldr	w9, [x8, #12]
    2000:	orr	w9, w9, #0x8000000
    2004:	str	w9, [x8, #12]
    2008:	bl	e00 <Perl_sv_2mortal@plt>
    200c:	ldr	x8, [x19, #24]
    2010:	lsl	x9, x23, #3
    2014:	ldr	x23, [sp, #16]
    2018:	str	x0, [x8, x9]
    201c:	ldr	x8, [x19, #24]
    2020:	add	x8, x8, x9
    2024:	str	x8, [x19]
    2028:	ldp	x20, x19, [sp, #48]
    202c:	ldp	x22, x21, [sp, #32]
    2030:	ldp	x29, x30, [sp], #64
    2034:	ret
    2038:	mov	x0, x22
    203c:	bl	e10 <Perl_safesysfree@plt>
    2040:	add	x0, x19, #0x150
    2044:	b	200c <boot_Digest__SHA@@Base+0x10d8>
    2048:	adrp	x8, 8000 <boot_Digest__SHA@@Base+0x70cc>
    204c:	add	x8, x8, #0x5aa
    2050:	mov	x0, x1
    2054:	mov	x1, x8
    2058:	bl	db0 <Perl_croak_xs_usage@plt>
    205c:	stp	x29, x30, [sp, #-64]!
    2060:	stp	x22, x21, [sp, #32]
    2064:	stp	x20, x19, [sp, #48]
    2068:	ldr	x8, [x0, #120]
    206c:	ldr	x10, [x0]
    2070:	str	x23, [sp, #16]
    2074:	mov	x29, sp
    2078:	sub	x9, x8, #0x4
    207c:	str	x9, [x0, #120]
    2080:	ldrsw	x8, [x8]
    2084:	ldr	x9, [x0, #24]
    2088:	add	x11, x9, x8, lsl #3
    208c:	sub	x10, x10, x11
    2090:	and	x10, x10, #0x7fffffff8
    2094:	cmp	x10, #0x8
    2098:	b.ne	21a8 <boot_Digest__SHA@@Base+0x1274>  // b.any
    209c:	add	x23, x8, #0x1
    20a0:	ldr	x20, [x9, x23, lsl #3]
    20a4:	mov	x19, x0
    20a8:	mov	x1, x20
    20ac:	bl	d90 <Perl_sv_isobject@plt>
    20b0:	cbz	w0, 2178 <boot_Digest__SHA@@Base+0x1244>
    20b4:	adrp	x2, 8000 <boot_Digest__SHA@@Base+0x70cc>
    20b8:	add	x2, x2, #0x58c
    20bc:	mov	x0, x19
    20c0:	mov	x1, x20
    20c4:	bl	ce0 <Perl_sv_derived_from@plt>
    20c8:	tbz	w0, #0, 2178 <boot_Digest__SHA@@Base+0x1244>
    20cc:	ldr	x1, [x20, #16]
    20d0:	mov	w9, #0x100                 	// #256
    20d4:	movk	w9, #0x20, lsl #16
    20d8:	ldr	w8, [x1, #12]
    20dc:	and	w8, w8, w9
    20e0:	cmp	w8, #0x100
    20e4:	b.ne	2164 <boot_Digest__SHA@@Base+0x1230>  // b.any
    20e8:	ldr	x8, [x1]
    20ec:	ldr	x21, [x8, #32]
    20f0:	cbz	x21, 2178 <boot_Digest__SHA@@Base+0x1244>
    20f4:	mov	w0, #0x228                 	// #552
    20f8:	bl	d70 <Perl_safesysmalloc@plt>
    20fc:	mov	x22, x0
    2100:	mov	x0, x19
    2104:	mov	x1, xzr
    2108:	bl	d00 <Perl_newSV@plt>
    210c:	ldr	x1, [x20, #16]
    2110:	mov	x20, x0
    2114:	mov	w2, #0x1                   	// #1
    2118:	mov	x0, x19
    211c:	bl	cf0 <Perl_sv_reftype@plt>
    2120:	mov	x2, x0
    2124:	mov	x0, x19
    2128:	mov	x1, x20
    212c:	mov	x3, x22
    2130:	bl	ca0 <Perl_sv_setref_pv@plt>
    2134:	ldr	x8, [x20, #16]
    2138:	mov	w2, #0x228                 	// #552
    213c:	mov	x0, x22
    2140:	mov	x1, x21
    2144:	ldr	w9, [x8, #12]
    2148:	orr	w9, w9, #0x8000000
    214c:	str	w9, [x8, #12]
    2150:	bl	c90 <memcpy@plt>
    2154:	mov	x0, x19
    2158:	mov	x1, x20
    215c:	bl	e00 <Perl_sv_2mortal@plt>
    2160:	b	217c <boot_Digest__SHA@@Base+0x1248>
    2164:	mov	w2, #0x2                   	// #2
    2168:	mov	x0, x19
    216c:	bl	cb0 <Perl_sv_2iv_flags@plt>
    2170:	mov	x21, x0
    2174:	cbnz	x21, 20f4 <boot_Digest__SHA@@Base+0x11c0>
    2178:	add	x0, x19, #0x150
    217c:	ldr	x8, [x19, #24]
    2180:	lsl	x9, x23, #3
    2184:	ldr	x23, [sp, #16]
    2188:	str	x0, [x8, x9]
    218c:	ldr	x8, [x19, #24]
    2190:	add	x8, x8, x9
    2194:	str	x8, [x19]
    2198:	ldp	x20, x19, [sp, #48]
    219c:	ldp	x22, x21, [sp, #32]
    21a0:	ldp	x29, x30, [sp], #64
    21a4:	ret
    21a8:	adrp	x8, 8000 <boot_Digest__SHA@@Base+0x70cc>
    21ac:	add	x8, x8, #0x5b9
    21b0:	mov	x0, x1
    21b4:	mov	x1, x8
    21b8:	bl	db0 <Perl_croak_xs_usage@plt>
    21bc:	stp	x29, x30, [sp, #-48]!
    21c0:	stp	x20, x19, [sp, #32]
    21c4:	ldr	x8, [x0, #120]
    21c8:	ldr	x10, [x0]
    21cc:	str	x21, [sp, #16]
    21d0:	mov	x29, sp
    21d4:	sub	x9, x8, #0x4
    21d8:	str	x9, [x0, #120]
    21dc:	ldrsw	x8, [x8]
    21e0:	ldr	x9, [x0, #24]
    21e4:	add	x11, x9, x8, lsl #3
    21e8:	sub	x10, x10, x11
    21ec:	and	x10, x10, #0x7fffffff8
    21f0:	cmp	x10, #0x8
    21f4:	b.ne	2288 <boot_Digest__SHA@@Base+0x1354>  // b.any
    21f8:	add	x21, x8, #0x1
    21fc:	ldr	x20, [x9, x21, lsl #3]
    2200:	mov	x19, x0
    2204:	mov	x1, x20
    2208:	bl	d90 <Perl_sv_isobject@plt>
    220c:	cbz	w0, 2250 <boot_Digest__SHA@@Base+0x131c>
    2210:	adrp	x2, 8000 <boot_Digest__SHA@@Base+0x70cc>
    2214:	add	x2, x2, #0x58c
    2218:	mov	x0, x19
    221c:	mov	x1, x20
    2220:	bl	ce0 <Perl_sv_derived_from@plt>
    2224:	tbz	w0, #0, 2250 <boot_Digest__SHA@@Base+0x131c>
    2228:	ldr	x1, [x20, #16]
    222c:	mov	w9, #0x100                 	// #256
    2230:	movk	w9, #0x20, lsl #16
    2234:	ldr	w8, [x1, #12]
    2238:	and	w8, w8, w9
    223c:	cmp	w8, #0x100
    2240:	b.ne	2278 <boot_Digest__SHA@@Base+0x1344>  // b.any
    2244:	ldr	x8, [x1]
    2248:	ldr	x0, [x8, #32]
    224c:	b	2254 <boot_Digest__SHA@@Base+0x1320>
    2250:	mov	x0, xzr
    2254:	bl	e10 <Perl_safesysfree@plt>
    2258:	ldr	x8, [x19, #24]
    225c:	add	x8, x8, x21, lsl #3
    2260:	sub	x8, x8, #0x8
    2264:	str	x8, [x19]
    2268:	ldp	x20, x19, [sp, #32]
    226c:	ldr	x21, [sp, #16]
    2270:	ldp	x29, x30, [sp], #48
    2274:	ret
    2278:	mov	w2, #0x2                   	// #2
    227c:	mov	x0, x19
    2280:	bl	cb0 <Perl_sv_2iv_flags@plt>
    2284:	b	2254 <boot_Digest__SHA@@Base+0x1320>
    2288:	adrp	x8, 8000 <boot_Digest__SHA@@Base+0x70cc>
    228c:	add	x8, x8, #0x5a8
    2290:	mov	x0, x1
    2294:	mov	x1, x8
    2298:	bl	db0 <Perl_croak_xs_usage@plt>
    229c:	stp	x29, x30, [sp, #-80]!
    22a0:	stp	x28, x25, [sp, #16]
    22a4:	stp	x24, x23, [sp, #32]
    22a8:	stp	x22, x21, [sp, #48]
    22ac:	stp	x20, x19, [sp, #64]
    22b0:	mov	x29, sp
    22b4:	sub	sp, sp, #0x240
    22b8:	adrp	x8, 18000 <boot_Digest__SHA@@Base+0x170cc>
    22bc:	ldr	x8, [x8, #4056]
    22c0:	mov	x19, x0
    22c4:	ldr	x8, [x8]
    22c8:	stur	x8, [x29, #-8]
    22cc:	ldr	x10, [x0, #120]
    22d0:	ldr	x9, [x0]
    22d4:	ldr	x20, [x0, #24]
    22d8:	sub	x8, x10, #0x4
    22dc:	str	x8, [x0, #120]
    22e0:	ldr	x8, [x1]
    22e4:	ldrsw	x10, [x10]
    22e8:	ldrsw	x22, [x8, #40]
    22ec:	adrp	x8, 8000 <boot_Digest__SHA@@Base+0x70cc>
    22f0:	add	x8, x8, #0xa18
    22f4:	add	x21, x10, #0x1
    22f8:	ldr	w8, [x8, x22, lsl #2]
    22fc:	cmp	w8, #0x17f
    2300:	b.le	2328 <boot_Digest__SHA@@Base+0x13f4>
    2304:	mov	w11, #0xd0df                	// #53471
    2308:	movk	w11, #0x7, lsl #16
    230c:	cmp	w8, w11
    2310:	b.gt	2344 <boot_Digest__SHA@@Base+0x1410>
    2314:	cmp	w8, #0x180
    2318:	b.eq	2364 <boot_Digest__SHA@@Base+0x1430>  // b.none
    231c:	cmp	w8, #0x200
    2320:	b.eq	2364 <boot_Digest__SHA@@Base+0x1430>  // b.none
    2324:	b	2488 <boot_Digest__SHA@@Base+0x1554>
    2328:	cmp	w8, #0x1
    232c:	b.eq	2364 <boot_Digest__SHA@@Base+0x1430>  // b.none
    2330:	cmp	w8, #0xe0
    2334:	b.eq	2364 <boot_Digest__SHA@@Base+0x1430>  // b.none
    2338:	cmp	w8, #0x100
    233c:	b.eq	2364 <boot_Digest__SHA@@Base+0x1430>  // b.none
    2340:	b	2488 <boot_Digest__SHA@@Base+0x1554>
    2344:	mov	w11, #0xd100                	// #53504
    2348:	movk	w11, #0x7, lsl #16
    234c:	cmp	w8, w11
    2350:	b.eq	2364 <boot_Digest__SHA@@Base+0x1430>  // b.none
    2354:	mov	w11, #0xd0e0                	// #53472
    2358:	movk	w11, #0x7, lsl #16
    235c:	cmp	w8, w11
    2360:	b.ne	2488 <boot_Digest__SHA@@Base+0x1554>  // b.any
    2364:	add	x10, x20, x10, lsl #3
    2368:	sub	x23, x9, x10
    236c:	cmp	w8, #0x17f
    2370:	lsr	x24, x23, #3
    2374:	str	w8, [sp, #16]
    2378:	b.le	23cc <boot_Digest__SHA@@Base+0x1498>
    237c:	mov	w9, #0xd0df                	// #53471
    2380:	movk	w9, #0x7, lsl #16
    2384:	cmp	w8, w9
    2388:	b.gt	2414 <boot_Digest__SHA@@Base+0x14e0>
    238c:	cmp	w8, #0x180
    2390:	b.eq	2498 <boot_Digest__SHA@@Base+0x1564>  // b.none
    2394:	cmp	w8, #0x200
    2398:	b.ne	2598 <boot_Digest__SHA@@Base+0x1664>  // b.any
    239c:	add	x8, sp, #0x10
    23a0:	orr	x0, x8, #0x4
    23a4:	mov	w2, #0x224                 	// #548
    23a8:	mov	w1, wzr
    23ac:	bl	d40 <memset@plt>
    23b0:	adrp	x10, 7000 <boot_Digest__SHA@@Base+0x60cc>
    23b4:	adrp	x11, 8000 <boot_Digest__SHA@@Base+0x70cc>
    23b8:	mov	w9, #0x200                 	// #512
    23bc:	add	x10, x10, #0x700
    23c0:	add	x11, x11, #0x6d8
    23c4:	mov	w8, #0x40                  	// #64
    23c8:	b	24c4 <boot_Digest__SHA@@Base+0x1590>
    23cc:	cmp	w8, #0x1
    23d0:	b.eq	24d8 <boot_Digest__SHA@@Base+0x15a4>  // b.none
    23d4:	cmp	w8, #0xe0
    23d8:	b.eq	2550 <boot_Digest__SHA@@Base+0x161c>  // b.none
    23dc:	cmp	w8, #0x100
    23e0:	b.ne	2598 <boot_Digest__SHA@@Base+0x1664>  // b.any
    23e4:	add	x8, sp, #0x10
    23e8:	orr	x0, x8, #0x4
    23ec:	mov	w2, #0x224                 	// #548
    23f0:	mov	w1, wzr
    23f4:	bl	d40 <memset@plt>
    23f8:	adrp	x10, 5000 <boot_Digest__SHA@@Base+0x40cc>
    23fc:	adrp	x11, 8000 <boot_Digest__SHA@@Base+0x70cc>
    2400:	mov	w9, #0x100                 	// #256
    2404:	add	x10, x10, #0x65c
    2408:	add	x11, x11, #0x678
    240c:	mov	w8, #0x20                  	// #32
    2410:	b	257c <boot_Digest__SHA@@Base+0x1648>
    2414:	mov	w25, #0xd0e0                	// #53472
    2418:	movk	w25, #0x7, lsl #16
    241c:	cmp	w8, w25
    2420:	b.eq	2508 <boot_Digest__SHA@@Base+0x15d4>  // b.none
    2424:	mov	w9, #0xd100                	// #53504
    2428:	movk	w9, #0x7, lsl #16
    242c:	cmp	w8, w9
    2430:	b.ne	2598 <boot_Digest__SHA@@Base+0x1664>  // b.any
    2434:	add	x8, sp, #0x10
    2438:	orr	x0, x8, #0x4
    243c:	mov	w2, #0x224                 	// #548
    2440:	mov	w1, wzr
    2444:	bl	d40 <memset@plt>
    2448:	adrp	x8, 8000 <boot_Digest__SHA@@Base+0x70cc>
    244c:	add	x8, x8, #0x758
    2450:	ldp	q0, q2, [x8]
    2454:	mov	w9, #0xd0e0                	// #53472
    2458:	movk	w9, #0x7, lsl #16
    245c:	add	w9, w9, #0x20
    2460:	str	q0, [sp, #64]
    2464:	ldp	q1, q0, [x8, #32]
    2468:	adrp	x8, 7000 <boot_Digest__SHA@@Base+0x60cc>
    246c:	add	x8, x8, #0x700
    2470:	str	x8, [sp, #24]
    2474:	mov	w8, #0x20                  	// #32
    2478:	stp	q2, q1, [sp, #80]
    247c:	str	w9, [sp, #16]
    2480:	str	q0, [sp, #112]
    2484:	b	2548 <boot_Digest__SHA@@Base+0x1614>
    2488:	add	x8, x19, #0x150
    248c:	sbfiz	x9, x21, #3, #32
    2490:	str	x8, [x20, x9]
    2494:	b	2740 <boot_Digest__SHA@@Base+0x180c>
    2498:	add	x8, sp, #0x10
    249c:	orr	x0, x8, #0x4
    24a0:	mov	w2, #0x224                 	// #548
    24a4:	mov	w1, wzr
    24a8:	bl	d40 <memset@plt>
    24ac:	adrp	x10, 7000 <boot_Digest__SHA@@Base+0x60cc>
    24b0:	adrp	x11, 8000 <boot_Digest__SHA@@Base+0x70cc>
    24b4:	mov	w9, #0x180                 	// #384
    24b8:	add	x10, x10, #0x700
    24bc:	add	x11, x11, #0x698
    24c0:	mov	w8, #0x30                  	// #48
    24c4:	ldp	q0, q2, [x11]
    24c8:	ldp	q1, q3, [x11, #32]
    24cc:	str	w9, [sp, #16]
    24d0:	str	x10, [sp, #24]
    24d4:	b	2540 <boot_Digest__SHA@@Base+0x160c>
    24d8:	add	x8, sp, #0x10
    24dc:	orr	x0, x8, #0x4
    24e0:	mov	w2, #0x224                 	// #548
    24e4:	mov	w1, wzr
    24e8:	bl	d40 <memset@plt>
    24ec:	adrp	x10, 4000 <boot_Digest__SHA@@Base+0x30cc>
    24f0:	adrp	x11, 8000 <boot_Digest__SHA@@Base+0x70cc>
    24f4:	mov	w9, #0x1                   	// #1
    24f8:	add	x10, x10, #0x444
    24fc:	add	x11, x11, #0x638
    2500:	mov	w8, #0x14                  	// #20
    2504:	b	257c <boot_Digest__SHA@@Base+0x1648>
    2508:	add	x8, sp, #0x10
    250c:	orr	x0, x8, #0x4
    2510:	mov	w2, #0x224                 	// #548
    2514:	mov	w1, wzr
    2518:	bl	d40 <memset@plt>
    251c:	adrp	x10, 8000 <boot_Digest__SHA@@Base+0x70cc>
    2520:	add	x10, x10, #0x718
    2524:	ldp	q0, q2, [x10]
    2528:	ldp	q1, q3, [x10, #32]
    252c:	adrp	x9, 7000 <boot_Digest__SHA@@Base+0x60cc>
    2530:	add	x9, x9, #0x700
    2534:	str	w25, [sp, #16]
    2538:	mov	w8, #0x1c                  	// #28
    253c:	str	x9, [sp, #24]
    2540:	stp	q0, q2, [sp, #64]
    2544:	stp	q1, q3, [sp, #96]
    2548:	mov	w9, #0x400                 	// #1024
    254c:	b	2590 <boot_Digest__SHA@@Base+0x165c>
    2550:	add	x8, sp, #0x10
    2554:	orr	x0, x8, #0x4
    2558:	mov	w2, #0x224                 	// #548
    255c:	mov	w1, wzr
    2560:	bl	d40 <memset@plt>
    2564:	adrp	x10, 5000 <boot_Digest__SHA@@Base+0x40cc>
    2568:	adrp	x11, 8000 <boot_Digest__SHA@@Base+0x70cc>
    256c:	mov	w9, #0xe0                  	// #224
    2570:	add	x10, x10, #0x65c
    2574:	add	x11, x11, #0x658
    2578:	mov	w8, #0x1c                  	// #28
    257c:	ldp	q0, q1, [x11]
    2580:	str	w9, [sp, #16]
    2584:	str	x10, [sp, #24]
    2588:	mov	w9, #0x200                 	// #512
    258c:	stp	q0, q1, [sp, #32]
    2590:	str	w9, [sp, #260]
    2594:	str	w8, [sp, #344]
    2598:	cmp	w24, #0x1
    259c:	b.lt	2650 <boot_Digest__SHA@@Base+0x171c>  // b.tstop
    25a0:	mov	w25, #0x400                 	// #1024
    25a4:	mov	x24, xzr
    25a8:	ubfx	x23, x23, #3, #32
    25ac:	movk	w25, #0x2020, lsl #16
    25b0:	add	x9, x24, x21
    25b4:	ldr	x1, [x20, x9, lsl #3]
    25b8:	ldr	w8, [x1, #12]
    25bc:	and	w8, w8, w25
    25c0:	cmp	w8, #0x400
    25c4:	b.ne	25e8 <boot_Digest__SHA@@Base+0x16b4>  // b.any
    25c8:	ldr	x8, [x1]
    25cc:	ldr	x8, [x8, #16]
    25d0:	str	x8, [sp, #8]
    25d4:	ldr	x9, [x20, x9, lsl #3]
    25d8:	ldr	x20, [x9, #16]
    25dc:	cmp	x8, #0x4, lsl #12
    25e0:	b.hi	2604 <boot_Digest__SHA@@Base+0x16d0>  // b.pmore
    25e4:	b	262c <boot_Digest__SHA@@Base+0x16f8>
    25e8:	add	x2, sp, #0x8
    25ec:	mov	x0, x19
    25f0:	bl	d30 <Perl_sv_2pvbyte@plt>
    25f4:	ldr	x8, [sp, #8]
    25f8:	mov	x20, x0
    25fc:	cmp	x8, #0x4, lsl #12
    2600:	b.ls	262c <boot_Digest__SHA@@Base+0x16f8>  // b.plast
    2604:	add	x2, sp, #0x10
    2608:	mov	w1, #0x20000               	// #131072
    260c:	mov	x0, x20
    2610:	bl	78d0 <boot_Digest__SHA@@Base+0x699c>
    2614:	ldr	x8, [sp, #8]
    2618:	add	x20, x20, #0x4, lsl #12
    261c:	sub	x8, x8, #0x4, lsl #12
    2620:	cmp	x8, #0x4, lsl #12
    2624:	str	x8, [sp, #8]
    2628:	b.hi	2604 <boot_Digest__SHA@@Base+0x16d0>  // b.pmore
    262c:	lsl	x1, x8, #3
    2630:	add	x2, sp, #0x10
    2634:	mov	x0, x20
    2638:	bl	78d0 <boot_Digest__SHA@@Base+0x699c>
    263c:	add	x24, x24, #0x1
    2640:	cmp	x24, x23
    2644:	b.eq	2650 <boot_Digest__SHA@@Base+0x171c>  // b.none
    2648:	ldr	x20, [x19, #24]
    264c:	b	25b0 <boot_Digest__SHA@@Base+0x167c>
    2650:	add	x0, sp, #0x10
    2654:	add	x20, sp, #0x10
    2658:	bl	7b0c <boot_Digest__SHA@@Base+0x6bd8>
    265c:	mov	w8, #0x5556                	// #21846
    2660:	movk	w8, #0x5555, lsl #16
    2664:	smull	x8, w22, w8
    2668:	lsr	x9, x8, #63
    266c:	lsr	x8, x8, #32
    2670:	add	w8, w8, w9
    2674:	add	w8, w8, w8, lsl #1
    2678:	sub	w8, w22, w8
    267c:	cmp	w8, #0x1
    2680:	add	x0, sp, #0x10
    2684:	str	xzr, [sp, #8]
    2688:	b.eq	26a4 <boot_Digest__SHA@@Base+0x1770>  // b.none
    268c:	cbnz	w8, 2714 <boot_Digest__SHA@@Base+0x17e0>
    2690:	bl	7c7c <boot_Digest__SHA@@Base+0x6d48>
    2694:	ldr	w8, [sp, #344]
    2698:	mov	x1, x0
    269c:	str	x8, [sp, #8]
    26a0:	b	271c <boot_Digest__SHA@@Base+0x17e8>
    26a4:	bl	7c7c <boot_Digest__SHA@@Base+0x6d48>
    26a8:	ldr	w8, [sp, #344]
    26ac:	add	x1, x20, #0x14c
    26b0:	strb	wzr, [sp, #348]
    26b4:	cmp	w8, #0x40
    26b8:	b.hi	271c <boot_Digest__SHA@@Base+0x17e8>  // b.pmore
    26bc:	mov	x11, x1
    26c0:	cbz	w8, 270c <boot_Digest__SHA@@Base+0x17d8>
    26c4:	adrp	x9, 8000 <boot_Digest__SHA@@Base+0x70cc>
    26c8:	mov	x8, xzr
    26cc:	add	x9, x9, #0x5be
    26d0:	mov	x10, x1
    26d4:	ldrb	w11, [x0, x8]
    26d8:	lsr	x11, x11, #4
    26dc:	ldrb	w11, [x9, x11]
    26e0:	strb	w11, [x10]
    26e4:	ldrb	w11, [x0, x8]
    26e8:	add	x8, x8, #0x1
    26ec:	and	x11, x11, #0xf
    26f0:	ldrb	w11, [x9, x11]
    26f4:	strb	w11, [x10, #1]
    26f8:	ldr	w12, [sp, #344]
    26fc:	add	x11, x10, #0x2
    2700:	mov	x10, x11
    2704:	cmp	w8, w12
    2708:	b.cc	26d4 <boot_Digest__SHA@@Base+0x17a0>  // b.lo, b.ul, b.last
    270c:	strb	wzr, [x11]
    2710:	b	271c <boot_Digest__SHA@@Base+0x17e8>
    2714:	bl	7dcc <boot_Digest__SHA@@Base+0x6e98>
    2718:	mov	x1, x0
    271c:	ldr	x2, [sp, #8]
    2720:	mov	x0, x19
    2724:	bl	dc0 <Perl_newSVpv@plt>
    2728:	mov	x1, x0
    272c:	mov	x0, x19
    2730:	bl	e00 <Perl_sv_2mortal@plt>
    2734:	ldr	x8, [x19, #24]
    2738:	sbfiz	x9, x21, #3, #32
    273c:	str	x0, [x8, x9]
    2740:	ldr	x8, [x19, #24]
    2744:	add	x8, x8, x9
    2748:	str	x8, [x19]
    274c:	adrp	x9, 18000 <boot_Digest__SHA@@Base+0x170cc>
    2750:	ldur	x8, [x29, #-8]
    2754:	ldr	x9, [x9, #4056]
    2758:	ldr	x9, [x9]
    275c:	cmp	x9, x8
    2760:	b.ne	2780 <boot_Digest__SHA@@Base+0x184c>  // b.any
    2764:	add	sp, sp, #0x240
    2768:	ldp	x20, x19, [sp, #64]
    276c:	ldp	x22, x21, [sp, #48]
    2770:	ldp	x24, x23, [sp, #32]
    2774:	ldp	x28, x25, [sp, #16]
    2778:	ldp	x29, x30, [sp], #80
    277c:	ret
    2780:	bl	d80 <__stack_chk_fail@plt>
    2784:	stp	x29, x30, [sp, #-96]!
    2788:	stp	x28, x27, [sp, #16]
    278c:	stp	x26, x25, [sp, #32]
    2790:	stp	x24, x23, [sp, #48]
    2794:	stp	x22, x21, [sp, #64]
    2798:	stp	x20, x19, [sp, #80]
    279c:	mov	x29, sp
    27a0:	sub	sp, sp, #0x720
    27a4:	adrp	x8, 18000 <boot_Digest__SHA@@Base+0x170cc>
    27a8:	ldr	x8, [x8, #4056]
    27ac:	mov	x19, x0
    27b0:	ldr	x8, [x8]
    27b4:	stur	x8, [x29, #-16]
    27b8:	ldr	x8, [x0, #120]
    27bc:	ldr	x10, [x0]
    27c0:	sub	x9, x8, #0x4
    27c4:	str	x9, [x0, #120]
    27c8:	ldrsw	x9, [x8]
    27cc:	ldr	x8, [x0, #24]
    27d0:	ldr	x11, [x1]
    27d4:	add	x22, x9, #0x1
    27d8:	add	x12, x8, x9, lsl #3
    27dc:	ldrsw	x23, [x11, #40]
    27e0:	sub	x10, x10, x12
    27e4:	lsr	x24, x10, #3
    27e8:	cmp	w24, #0x1
    27ec:	str	xzr, [sp, #8]
    27f0:	b.lt	2830 <boot_Digest__SHA@@Base+0x18fc>  // b.tstop
    27f4:	add	w9, w9, w24
    27f8:	ldr	x1, [x8, w9, sxtw #3]
    27fc:	mov	w11, #0x400                 	// #1024
    2800:	movk	w11, #0x2020, lsl #16
    2804:	ldr	w10, [x1, #12]
    2808:	and	w10, w10, w11
    280c:	cmp	w10, #0x400
    2810:	b.ne	2840 <boot_Digest__SHA@@Base+0x190c>  // b.any
    2814:	ldr	x10, [x1]
    2818:	sxtw	x9, w9
    281c:	ldr	x25, [x10, #16]
    2820:	str	x25, [sp, #8]
    2824:	ldr	x8, [x8, x9, lsl #3]
    2828:	ldr	x21, [x8, #16]
    282c:	b	2854 <boot_Digest__SHA@@Base+0x1920>
    2830:	adrp	x21, 8000 <boot_Digest__SHA@@Base+0x70cc>
    2834:	mov	x25, xzr
    2838:	add	x21, x21, #0x0
    283c:	b	2854 <boot_Digest__SHA@@Base+0x1920>
    2840:	add	x2, sp, #0x8
    2844:	mov	x0, x19
    2848:	bl	d30 <Perl_sv_2pvbyte@plt>
    284c:	ldr	x25, [sp, #8]
    2850:	mov	x21, x0
    2854:	adrp	x8, 8000 <boot_Digest__SHA@@Base+0x70cc>
    2858:	add	x8, x8, #0xa18
    285c:	ldr	w26, [x8, x23, lsl #2]
    2860:	add	x0, sp, #0x10
    2864:	mov	w2, #0x4d8                 	// #1240
    2868:	mov	w1, wzr
    286c:	bl	d40 <memset@plt>
    2870:	cmp	w26, #0x17f
    2874:	b.le	289c <boot_Digest__SHA@@Base+0x1968>
    2878:	mov	w8, #0xd0df                	// #53471
    287c:	movk	w8, #0x7, lsl #16
    2880:	cmp	w26, w8
    2884:	b.gt	28b8 <boot_Digest__SHA@@Base+0x1984>
    2888:	cmp	w26, #0x180
    288c:	b.eq	28d8 <boot_Digest__SHA@@Base+0x19a4>  // b.none
    2890:	cmp	w26, #0x200
    2894:	b.eq	28d8 <boot_Digest__SHA@@Base+0x19a4>  // b.none
    2898:	b	2e8c <boot_Digest__SHA@@Base+0x1f58>
    289c:	cmp	w26, #0x1
    28a0:	b.eq	28d8 <boot_Digest__SHA@@Base+0x19a4>  // b.none
    28a4:	cmp	w26, #0xe0
    28a8:	b.eq	28d8 <boot_Digest__SHA@@Base+0x19a4>  // b.none
    28ac:	cmp	w26, #0x100
    28b0:	b.eq	28d8 <boot_Digest__SHA@@Base+0x19a4>  // b.none
    28b4:	b	2e8c <boot_Digest__SHA@@Base+0x1f58>
    28b8:	mov	w8, #0xd100                	// #53504
    28bc:	movk	w8, #0x7, lsl #16
    28c0:	cmp	w26, w8
    28c4:	b.eq	28d8 <boot_Digest__SHA@@Base+0x19a4>  // b.none
    28c8:	mov	w8, #0xd0e0                	// #53472
    28cc:	movk	w8, #0x7, lsl #16
    28d0:	cmp	w26, w8
    28d4:	b.ne	2e8c <boot_Digest__SHA@@Base+0x1f58>  // b.any
    28d8:	cmp	w26, #0x17f
    28dc:	str	w26, [sp, #16]
    28e0:	b.le	2934 <boot_Digest__SHA@@Base+0x1a00>
    28e4:	mov	w8, #0xd0df                	// #53471
    28e8:	movk	w8, #0x7, lsl #16
    28ec:	cmp	w26, w8
    28f0:	b.gt	297c <boot_Digest__SHA@@Base+0x1a48>
    28f4:	cmp	w26, #0x180
    28f8:	b.eq	29f0 <boot_Digest__SHA@@Base+0x1abc>  // b.none
    28fc:	cmp	w26, #0x200
    2900:	b.ne	2e8c <boot_Digest__SHA@@Base+0x1f58>  // b.any
    2904:	add	x8, sp, #0x10
    2908:	orr	x0, x8, #0x4
    290c:	mov	w2, #0x224                 	// #548
    2910:	mov	w1, wzr
    2914:	bl	d40 <memset@plt>
    2918:	adrp	x10, 7000 <boot_Digest__SHA@@Base+0x60cc>
    291c:	adrp	x11, 8000 <boot_Digest__SHA@@Base+0x70cc>
    2920:	mov	w9, #0x200                 	// #512
    2924:	add	x10, x10, #0x700
    2928:	add	x11, x11, #0x6d8
    292c:	mov	w8, #0x40                  	// #64
    2930:	b	2a1c <boot_Digest__SHA@@Base+0x1ae8>
    2934:	cmp	w26, #0x1
    2938:	b.eq	2a30 <boot_Digest__SHA@@Base+0x1afc>  // b.none
    293c:	cmp	w26, #0xe0
    2940:	b.eq	2aa8 <boot_Digest__SHA@@Base+0x1b74>  // b.none
    2944:	cmp	w26, #0x100
    2948:	b.ne	2e8c <boot_Digest__SHA@@Base+0x1f58>  // b.any
    294c:	add	x8, sp, #0x10
    2950:	orr	x0, x8, #0x4
    2954:	mov	w2, #0x224                 	// #548
    2958:	mov	w1, wzr
    295c:	bl	d40 <memset@plt>
    2960:	adrp	x10, 5000 <boot_Digest__SHA@@Base+0x40cc>
    2964:	adrp	x11, 8000 <boot_Digest__SHA@@Base+0x70cc>
    2968:	mov	w9, #0x100                 	// #256
    296c:	add	x10, x10, #0x65c
    2970:	add	x11, x11, #0x678
    2974:	mov	w8, #0x20                  	// #32
    2978:	b	2ad4 <boot_Digest__SHA@@Base+0x1ba0>
    297c:	mov	w20, #0xd0e0                	// #53472
    2980:	movk	w20, #0x7, lsl #16
    2984:	cmp	w26, w20
    2988:	b.eq	2a60 <boot_Digest__SHA@@Base+0x1b2c>  // b.none
    298c:	mov	w8, #0xd100                	// #53504
    2990:	movk	w8, #0x7, lsl #16
    2994:	cmp	w26, w8
    2998:	b.ne	2e8c <boot_Digest__SHA@@Base+0x1f58>  // b.any
    299c:	add	x8, sp, #0x10
    29a0:	orr	x0, x8, #0x4
    29a4:	mov	w2, #0x224                 	// #548
    29a8:	mov	w1, wzr
    29ac:	bl	d40 <memset@plt>
    29b0:	adrp	x8, 8000 <boot_Digest__SHA@@Base+0x70cc>
    29b4:	add	x8, x8, #0x758
    29b8:	ldp	q0, q2, [x8]
    29bc:	mov	w9, #0xd0e0                	// #53472
    29c0:	movk	w9, #0x7, lsl #16
    29c4:	add	w9, w9, #0x20
    29c8:	str	q0, [sp, #64]
    29cc:	ldp	q1, q0, [x8, #32]
    29d0:	adrp	x8, 7000 <boot_Digest__SHA@@Base+0x60cc>
    29d4:	add	x8, x8, #0x700
    29d8:	str	x8, [sp, #24]
    29dc:	mov	w8, #0x20                  	// #32
    29e0:	stp	q2, q1, [sp, #80]
    29e4:	str	w9, [sp, #16]
    29e8:	str	q0, [sp, #112]
    29ec:	b	2aa0 <boot_Digest__SHA@@Base+0x1b6c>
    29f0:	add	x8, sp, #0x10
    29f4:	orr	x0, x8, #0x4
    29f8:	mov	w2, #0x224                 	// #548
    29fc:	mov	w1, wzr
    2a00:	bl	d40 <memset@plt>
    2a04:	adrp	x10, 7000 <boot_Digest__SHA@@Base+0x60cc>
    2a08:	adrp	x11, 8000 <boot_Digest__SHA@@Base+0x70cc>
    2a0c:	mov	w9, #0x180                 	// #384
    2a10:	add	x10, x10, #0x700
    2a14:	add	x11, x11, #0x698
    2a18:	mov	w8, #0x30                  	// #48
    2a1c:	ldp	q0, q2, [x11]
    2a20:	ldp	q1, q3, [x11, #32]
    2a24:	str	w9, [sp, #16]
    2a28:	str	x10, [sp, #24]
    2a2c:	b	2a98 <boot_Digest__SHA@@Base+0x1b64>
    2a30:	add	x8, sp, #0x10
    2a34:	orr	x0, x8, #0x4
    2a38:	mov	w2, #0x224                 	// #548
    2a3c:	mov	w1, wzr
    2a40:	bl	d40 <memset@plt>
    2a44:	adrp	x10, 4000 <boot_Digest__SHA@@Base+0x30cc>
    2a48:	adrp	x11, 8000 <boot_Digest__SHA@@Base+0x70cc>
    2a4c:	mov	w9, #0x1                   	// #1
    2a50:	add	x10, x10, #0x444
    2a54:	add	x11, x11, #0x638
    2a58:	mov	w8, #0x14                  	// #20
    2a5c:	b	2ad4 <boot_Digest__SHA@@Base+0x1ba0>
    2a60:	add	x8, sp, #0x10
    2a64:	orr	x0, x8, #0x4
    2a68:	mov	w2, #0x224                 	// #548
    2a6c:	mov	w1, wzr
    2a70:	bl	d40 <memset@plt>
    2a74:	adrp	x10, 8000 <boot_Digest__SHA@@Base+0x70cc>
    2a78:	add	x10, x10, #0x718
    2a7c:	ldp	q0, q2, [x10]
    2a80:	ldp	q1, q3, [x10, #32]
    2a84:	adrp	x9, 7000 <boot_Digest__SHA@@Base+0x60cc>
    2a88:	add	x9, x9, #0x700
    2a8c:	str	w20, [sp, #16]
    2a90:	mov	w8, #0x1c                  	// #28
    2a94:	str	x9, [sp, #24]
    2a98:	stp	q0, q2, [sp, #64]
    2a9c:	stp	q1, q3, [sp, #96]
    2aa0:	mov	w9, #0x400                 	// #1024
    2aa4:	b	2ae8 <boot_Digest__SHA@@Base+0x1bb4>
    2aa8:	add	x8, sp, #0x10
    2aac:	orr	x0, x8, #0x4
    2ab0:	mov	w2, #0x224                 	// #548
    2ab4:	mov	w1, wzr
    2ab8:	bl	d40 <memset@plt>
    2abc:	adrp	x10, 5000 <boot_Digest__SHA@@Base+0x40cc>
    2ac0:	adrp	x11, 8000 <boot_Digest__SHA@@Base+0x70cc>
    2ac4:	mov	w9, #0xe0                  	// #224
    2ac8:	add	x10, x10, #0x65c
    2acc:	add	x11, x11, #0x658
    2ad0:	mov	w8, #0x1c                  	// #28
    2ad4:	ldp	q0, q1, [x11]
    2ad8:	str	w9, [sp, #16]
    2adc:	str	x10, [sp, #24]
    2ae0:	mov	w9, #0x200                 	// #512
    2ae4:	stp	q0, q1, [sp, #32]
    2ae8:	str	w8, [sp, #344]
    2aec:	add	x8, sp, #0x10
    2af0:	mov	w28, wzr
    2af4:	cmp	w26, #0x17f
    2af8:	add	x20, x8, #0x228
    2afc:	str	w9, [sp, #260]
    2b00:	str	w26, [sp, #568]
    2b04:	b.le	2b88 <boot_Digest__SHA@@Base+0x1c54>
    2b08:	mov	w8, #0xd0df                	// #53471
    2b0c:	movk	w8, #0x7, lsl #16
    2b10:	cmp	w26, w8
    2b14:	b.gt	2bd4 <boot_Digest__SHA@@Base+0x1ca0>
    2b18:	cmp	w26, #0x180
    2b1c:	b.eq	2c8c <boot_Digest__SHA@@Base+0x1d58>  // b.none
    2b20:	cmp	w26, #0x200
    2b24:	mov	w27, w28
    2b28:	b.ne	2d9c <boot_Digest__SHA@@Base+0x1e68>  // b.any
    2b2c:	add	x0, x20, #0x4
    2b30:	mov	w2, #0x224                 	// #548
    2b34:	mov	w1, wzr
    2b38:	bl	d40 <memset@plt>
    2b3c:	mov	w8, #0x200                 	// #512
    2b40:	str	w8, [sp, #568]
    2b44:	adrp	x8, 8000 <boot_Digest__SHA@@Base+0x70cc>
    2b48:	add	x8, x8, #0x6d8
    2b4c:	ldp	q0, q1, [x8]
    2b50:	adrp	x9, 7000 <boot_Digest__SHA@@Base+0x60cc>
    2b54:	add	x9, x9, #0x700
    2b58:	add	x10, sp, #0x10
    2b5c:	str	x9, [sp, #576]
    2b60:	add	x9, x10, #0x258
    2b64:	str	q0, [x9]
    2b68:	add	x9, x10, #0x268
    2b6c:	str	q1, [x9]
    2b70:	ldp	q0, q1, [x8, #32]
    2b74:	add	x9, x10, #0x278
    2b78:	mov	w28, #0x40                  	// #64
    2b7c:	add	x8, x10, #0x288
    2b80:	str	q0, [x9]
    2b84:	b	2d8c <boot_Digest__SHA@@Base+0x1e58>
    2b88:	cmp	w26, #0x1
    2b8c:	b.eq	2c5c <boot_Digest__SHA@@Base+0x1d28>  // b.none
    2b90:	cmp	w26, #0xe0
    2b94:	b.eq	2ce8 <boot_Digest__SHA@@Base+0x1db4>  // b.none
    2b98:	cmp	w26, #0x100
    2b9c:	mov	w27, w28
    2ba0:	b.ne	2d9c <boot_Digest__SHA@@Base+0x1e68>  // b.any
    2ba4:	add	x0, x20, #0x4
    2ba8:	mov	w2, #0x224                 	// #548
    2bac:	mov	w1, wzr
    2bb0:	bl	d40 <memset@plt>
    2bb4:	adrp	x9, 5000 <boot_Digest__SHA@@Base+0x40cc>
    2bb8:	adrp	x11, 8000 <boot_Digest__SHA@@Base+0x70cc>
    2bbc:	mov	w8, #0x100                 	// #256
    2bc0:	add	x9, x9, #0x65c
    2bc4:	add	x10, sp, #0x10
    2bc8:	add	x11, x11, #0x678
    2bcc:	mov	w28, #0x20                  	// #32
    2bd0:	b	2d14 <boot_Digest__SHA@@Base+0x1de0>
    2bd4:	mov	w27, #0xd0e0                	// #53472
    2bd8:	movk	w27, #0x7, lsl #16
    2bdc:	cmp	w26, w27
    2be0:	b.eq	2d38 <boot_Digest__SHA@@Base+0x1e04>  // b.none
    2be4:	mov	w8, #0xd100                	// #53504
    2be8:	movk	w8, #0x7, lsl #16
    2bec:	cmp	w26, w8
    2bf0:	mov	w27, w28
    2bf4:	b.ne	2d9c <boot_Digest__SHA@@Base+0x1e68>  // b.any
    2bf8:	add	x0, x20, #0x4
    2bfc:	mov	w2, #0x224                 	// #548
    2c00:	mov	w1, wzr
    2c04:	bl	d40 <memset@plt>
    2c08:	adrp	x9, 7000 <boot_Digest__SHA@@Base+0x60cc>
    2c0c:	add	x9, x9, #0x700
    2c10:	str	x9, [sp, #576]
    2c14:	adrp	x9, 8000 <boot_Digest__SHA@@Base+0x70cc>
    2c18:	add	x9, x9, #0x758
    2c1c:	mov	w8, #0xd0e0                	// #53472
    2c20:	ldp	q0, q1, [x9]
    2c24:	movk	w8, #0x7, lsl #16
    2c28:	add	x10, sp, #0x10
    2c2c:	add	w8, w8, #0x20
    2c30:	str	w8, [sp, #568]
    2c34:	add	x8, x10, #0x258
    2c38:	str	q0, [x8]
    2c3c:	add	x8, x10, #0x268
    2c40:	str	q1, [x8]
    2c44:	ldp	q0, q1, [x9, #32]
    2c48:	add	x8, x10, #0x278
    2c4c:	mov	w28, #0x20                  	// #32
    2c50:	str	q0, [x8]
    2c54:	add	x8, x10, #0x288
    2c58:	b	2d8c <boot_Digest__SHA@@Base+0x1e58>
    2c5c:	add	x0, x20, #0x4
    2c60:	mov	w2, #0x224                 	// #548
    2c64:	mov	w1, wzr
    2c68:	bl	d40 <memset@plt>
    2c6c:	adrp	x9, 4000 <boot_Digest__SHA@@Base+0x30cc>
    2c70:	adrp	x11, 8000 <boot_Digest__SHA@@Base+0x70cc>
    2c74:	mov	w8, #0x1                   	// #1
    2c78:	add	x9, x9, #0x444
    2c7c:	add	x10, sp, #0x10
    2c80:	add	x11, x11, #0x638
    2c84:	mov	w28, #0x14                  	// #20
    2c88:	b	2d14 <boot_Digest__SHA@@Base+0x1de0>
    2c8c:	add	x0, x20, #0x4
    2c90:	mov	w2, #0x224                 	// #548
    2c94:	mov	w1, wzr
    2c98:	bl	d40 <memset@plt>
    2c9c:	mov	w8, #0x180                 	// #384
    2ca0:	str	w8, [sp, #568]
    2ca4:	adrp	x8, 8000 <boot_Digest__SHA@@Base+0x70cc>
    2ca8:	add	x8, x8, #0x698
    2cac:	ldp	q0, q1, [x8]
    2cb0:	adrp	x9, 7000 <boot_Digest__SHA@@Base+0x60cc>
    2cb4:	add	x9, x9, #0x700
    2cb8:	add	x10, sp, #0x10
    2cbc:	str	x9, [sp, #576]
    2cc0:	add	x9, x10, #0x258
    2cc4:	str	q0, [x9]
    2cc8:	add	x9, x10, #0x268
    2ccc:	str	q1, [x9]
    2cd0:	ldp	q0, q1, [x8, #32]
    2cd4:	add	x9, x10, #0x278
    2cd8:	mov	w28, #0x30                  	// #48
    2cdc:	add	x8, x10, #0x288
    2ce0:	str	q0, [x9]
    2ce4:	b	2d8c <boot_Digest__SHA@@Base+0x1e58>
    2ce8:	add	x0, x20, #0x4
    2cec:	mov	w2, #0x224                 	// #548
    2cf0:	mov	w1, wzr
    2cf4:	bl	d40 <memset@plt>
    2cf8:	adrp	x9, 5000 <boot_Digest__SHA@@Base+0x40cc>
    2cfc:	adrp	x11, 8000 <boot_Digest__SHA@@Base+0x70cc>
    2d00:	mov	w8, #0xe0                  	// #224
    2d04:	add	x9, x9, #0x65c
    2d08:	add	x10, sp, #0x10
    2d0c:	add	x11, x11, #0x658
    2d10:	mov	w28, #0x1c                  	// #28
    2d14:	ldp	q0, q1, [x11]
    2d18:	str	w8, [sp, #568]
    2d1c:	str	x9, [sp, #576]
    2d20:	add	x8, x10, #0x238
    2d24:	add	x9, x10, #0x248
    2d28:	str	q0, [x8]
    2d2c:	str	q1, [x9]
    2d30:	mov	w27, #0x200                 	// #512
    2d34:	b	2d94 <boot_Digest__SHA@@Base+0x1e60>
    2d38:	add	x0, x20, #0x4
    2d3c:	mov	w2, #0x224                 	// #548
    2d40:	mov	w1, wzr
    2d44:	bl	d40 <memset@plt>
    2d48:	adrp	x10, 8000 <boot_Digest__SHA@@Base+0x70cc>
    2d4c:	add	x10, x10, #0x718
    2d50:	ldp	q0, q1, [x10]
    2d54:	adrp	x8, 7000 <boot_Digest__SHA@@Base+0x60cc>
    2d58:	add	x8, x8, #0x700
    2d5c:	add	x9, sp, #0x10
    2d60:	str	x8, [sp, #576]
    2d64:	add	x8, x9, #0x258
    2d68:	str	w27, [sp, #568]
    2d6c:	str	q0, [x8]
    2d70:	add	x8, x9, #0x268
    2d74:	str	q1, [x8]
    2d78:	ldp	q0, q1, [x10, #32]
    2d7c:	add	x8, x9, #0x278
    2d80:	mov	w28, #0x1c                  	// #28
    2d84:	str	q0, [x8]
    2d88:	add	x8, x9, #0x288
    2d8c:	mov	w27, #0x400                 	// #1024
    2d90:	str	q1, [x8]
    2d94:	str	w27, [sp, #812]
    2d98:	str	w28, [sp, #896]
    2d9c:	cmp	w25, w27, lsr #3
    2da0:	b.ls	2dd0 <boot_Digest__SHA@@Base+0x1e9c>  // b.plast
    2da4:	cmp	w26, #0x17f
    2da8:	b.le	2df4 <boot_Digest__SHA@@Base+0x1ec0>
    2dac:	mov	w8, #0xd0df                	// #53471
    2db0:	movk	w8, #0x7, lsl #16
    2db4:	cmp	w26, w8
    2db8:	b.gt	2e10 <boot_Digest__SHA@@Base+0x1edc>
    2dbc:	cmp	w26, #0x180
    2dc0:	b.eq	2e30 <boot_Digest__SHA@@Base+0x1efc>  // b.none
    2dc4:	cmp	w26, #0x200
    2dc8:	b.eq	2e30 <boot_Digest__SHA@@Base+0x1efc>  // b.none
    2dcc:	b	2e8c <boot_Digest__SHA@@Base+0x1f58>
    2dd0:	add	x8, sp, #0x10
    2dd4:	add	x0, x8, #0x454
    2dd8:	and	x2, x25, #0xffffffff
    2ddc:	mov	x1, x21
    2de0:	bl	c90 <memcpy@plt>
    2de4:	cmp	w27, #0x8
    2de8:	str	w28, [sp, #1120]
    2dec:	b.cs	30e8 <boot_Digest__SHA@@Base+0x21b4>  // b.hs, b.nlast
    2df0:	b	3160 <boot_Digest__SHA@@Base+0x222c>
    2df4:	cmp	w26, #0x1
    2df8:	b.eq	2e30 <boot_Digest__SHA@@Base+0x1efc>  // b.none
    2dfc:	cmp	w26, #0xe0
    2e00:	b.eq	2e30 <boot_Digest__SHA@@Base+0x1efc>  // b.none
    2e04:	cmp	w26, #0x100
    2e08:	b.eq	2e30 <boot_Digest__SHA@@Base+0x1efc>  // b.none
    2e0c:	b	2e8c <boot_Digest__SHA@@Base+0x1f58>
    2e10:	mov	w8, #0xd100                	// #53504
    2e14:	movk	w8, #0x7, lsl #16
    2e18:	cmp	w26, w8
    2e1c:	b.eq	2e30 <boot_Digest__SHA@@Base+0x1efc>  // b.none
    2e20:	mov	w8, #0xd0e0                	// #53472
    2e24:	movk	w8, #0x7, lsl #16
    2e28:	cmp	w26, w8
    2e2c:	b.ne	2e8c <boot_Digest__SHA@@Base+0x1f58>  // b.any
    2e30:	cmp	w26, #0x17f
    2e34:	str	w26, [sp, #1256]
    2e38:	b.le	2ea8 <boot_Digest__SHA@@Base+0x1f74>
    2e3c:	mov	w8, #0xd0df                	// #53471
    2e40:	movk	w8, #0x7, lsl #16
    2e44:	cmp	w26, w8
    2e48:	b.gt	2ef0 <boot_Digest__SHA@@Base+0x1fbc>
    2e4c:	cmp	w26, #0x180
    2e50:	b.eq	2fa8 <boot_Digest__SHA@@Base+0x2074>  // b.none
    2e54:	cmp	w26, #0x200
    2e58:	b.ne	309c <boot_Digest__SHA@@Base+0x2168>  // b.any
    2e5c:	add	x8, sp, #0x4e8
    2e60:	orr	x0, x8, #0x4
    2e64:	mov	w2, #0x224                 	// #548
    2e68:	mov	w1, wzr
    2e6c:	bl	d40 <memset@plt>
    2e70:	adrp	x10, 7000 <boot_Digest__SHA@@Base+0x60cc>
    2e74:	adrp	x11, 8000 <boot_Digest__SHA@@Base+0x70cc>
    2e78:	mov	w9, #0x200                 	// #512
    2e7c:	add	x10, x10, #0x700
    2e80:	add	x11, x11, #0x6d8
    2e84:	mov	w8, #0x40                  	// #64
    2e88:	b	2fd4 <boot_Digest__SHA@@Base+0x20a0>
    2e8c:	ldr	x8, [x19, #24]
    2e90:	add	x9, x19, #0x150
    2e94:	sbfiz	x10, x22, #3, #32
    2e98:	str	x9, [x8, x10]
    2e9c:	ldr	x8, [x19, #24]
    2ea0:	add	x8, x8, x10
    2ea4:	b	33f0 <boot_Digest__SHA@@Base+0x24bc>
    2ea8:	cmp	w26, #0x1
    2eac:	b.eq	2f78 <boot_Digest__SHA@@Base+0x2044>  // b.none
    2eb0:	cmp	w26, #0xe0
    2eb4:	b.eq	2fe8 <boot_Digest__SHA@@Base+0x20b4>  // b.none
    2eb8:	cmp	w26, #0x100
    2ebc:	b.ne	309c <boot_Digest__SHA@@Base+0x2168>  // b.any
    2ec0:	add	x8, sp, #0x4e8
    2ec4:	orr	x0, x8, #0x4
    2ec8:	mov	w2, #0x224                 	// #548
    2ecc:	mov	w1, wzr
    2ed0:	bl	d40 <memset@plt>
    2ed4:	adrp	x10, 5000 <boot_Digest__SHA@@Base+0x40cc>
    2ed8:	adrp	x11, 8000 <boot_Digest__SHA@@Base+0x70cc>
    2edc:	mov	w9, #0x100                 	// #256
    2ee0:	add	x10, x10, #0x65c
    2ee4:	add	x11, x11, #0x678
    2ee8:	mov	w8, #0x20                  	// #32
    2eec:	b	3014 <boot_Digest__SHA@@Base+0x20e0>
    2ef0:	mov	w27, #0xd0e0                	// #53472
    2ef4:	movk	w27, #0x7, lsl #16
    2ef8:	cmp	w26, w27
    2efc:	b.eq	3038 <boot_Digest__SHA@@Base+0x2104>  // b.none
    2f00:	mov	w8, #0xd100                	// #53504
    2f04:	movk	w8, #0x7, lsl #16
    2f08:	cmp	w26, w8
    2f0c:	b.ne	309c <boot_Digest__SHA@@Base+0x2168>  // b.any
    2f10:	add	x8, sp, #0x4e8
    2f14:	orr	x0, x8, #0x4
    2f18:	mov	w2, #0x224                 	// #548
    2f1c:	mov	w1, wzr
    2f20:	bl	d40 <memset@plt>
    2f24:	adrp	x8, 8000 <boot_Digest__SHA@@Base+0x70cc>
    2f28:	add	x8, x8, #0x758
    2f2c:	ldp	q0, q2, [x8]
    2f30:	add	x9, sp, #0x419
    2f34:	stur	q0, [x9, #255]
    2f38:	ldp	q1, q0, [x8, #32]
    2f3c:	mov	w9, #0xd0e0                	// #53472
    2f40:	add	x8, sp, #0x439
    2f44:	movk	w9, #0x7, lsl #16
    2f48:	stur	q1, [x8, #255]
    2f4c:	adrp	x8, 7000 <boot_Digest__SHA@@Base+0x60cc>
    2f50:	add	w9, w9, #0x20
    2f54:	add	x8, x8, #0x700
    2f58:	str	w9, [sp, #1256]
    2f5c:	add	x9, sp, #0x429
    2f60:	str	x8, [sp, #1264]
    2f64:	mov	w8, #0x20                  	// #32
    2f68:	stur	q2, [x9, #255]
    2f6c:	add	x9, sp, #0x449
    2f70:	stur	q0, [x9, #255]
    2f74:	b	3090 <boot_Digest__SHA@@Base+0x215c>
    2f78:	add	x8, sp, #0x4e8
    2f7c:	orr	x0, x8, #0x4
    2f80:	mov	w2, #0x224                 	// #548
    2f84:	mov	w1, wzr
    2f88:	bl	d40 <memset@plt>
    2f8c:	adrp	x10, 4000 <boot_Digest__SHA@@Base+0x30cc>
    2f90:	adrp	x11, 8000 <boot_Digest__SHA@@Base+0x70cc>
    2f94:	mov	w9, #0x1                   	// #1
    2f98:	add	x10, x10, #0x444
    2f9c:	add	x11, x11, #0x638
    2fa0:	mov	w8, #0x14                  	// #20
    2fa4:	b	3014 <boot_Digest__SHA@@Base+0x20e0>
    2fa8:	add	x8, sp, #0x4e8
    2fac:	orr	x0, x8, #0x4
    2fb0:	mov	w2, #0x224                 	// #548
    2fb4:	mov	w1, wzr
    2fb8:	bl	d40 <memset@plt>
    2fbc:	adrp	x10, 7000 <boot_Digest__SHA@@Base+0x60cc>
    2fc0:	adrp	x11, 8000 <boot_Digest__SHA@@Base+0x70cc>
    2fc4:	mov	w9, #0x180                 	// #384
    2fc8:	add	x10, x10, #0x700
    2fcc:	add	x11, x11, #0x698
    2fd0:	mov	w8, #0x30                  	// #48
    2fd4:	ldp	q0, q2, [x11]
    2fd8:	ldp	q1, q3, [x11, #32]
    2fdc:	str	w9, [sp, #1256]
    2fe0:	str	x10, [sp, #1264]
    2fe4:	b	3070 <boot_Digest__SHA@@Base+0x213c>
    2fe8:	add	x8, sp, #0x4e8
    2fec:	orr	x0, x8, #0x4
    2ff0:	mov	w2, #0x224                 	// #548
    2ff4:	mov	w1, wzr
    2ff8:	bl	d40 <memset@plt>
    2ffc:	adrp	x10, 5000 <boot_Digest__SHA@@Base+0x40cc>
    3000:	adrp	x11, 8000 <boot_Digest__SHA@@Base+0x70cc>
    3004:	mov	w9, #0xe0                  	// #224
    3008:	add	x10, x10, #0x65c
    300c:	add	x11, x11, #0x658
    3010:	mov	w8, #0x1c                  	// #28
    3014:	ldp	q0, q1, [x11]
    3018:	str	w9, [sp, #1256]
    301c:	add	x9, sp, #0x3f9
    3020:	str	x10, [sp, #1264]
    3024:	stur	q0, [x9, #255]
    3028:	add	x9, sp, #0x409
    302c:	stur	q1, [x9, #255]
    3030:	mov	w9, #0x200                 	// #512
    3034:	b	3094 <boot_Digest__SHA@@Base+0x2160>
    3038:	add	x8, sp, #0x4e8
    303c:	orr	x0, x8, #0x4
    3040:	mov	w2, #0x224                 	// #548
    3044:	mov	w1, wzr
    3048:	bl	d40 <memset@plt>
    304c:	adrp	x10, 8000 <boot_Digest__SHA@@Base+0x70cc>
    3050:	add	x10, x10, #0x718
    3054:	ldp	q0, q2, [x10]
    3058:	ldp	q1, q3, [x10, #32]
    305c:	adrp	x9, 7000 <boot_Digest__SHA@@Base+0x60cc>
    3060:	add	x9, x9, #0x700
    3064:	str	w27, [sp, #1256]
    3068:	mov	w8, #0x1c                  	// #28
    306c:	str	x9, [sp, #1264]
    3070:	add	x9, sp, #0x419
    3074:	stur	q0, [x9, #255]
    3078:	add	x9, sp, #0x439
    307c:	stur	q1, [x9, #255]
    3080:	add	x9, sp, #0x429
    3084:	stur	q2, [x9, #255]
    3088:	add	x9, sp, #0x449
    308c:	stur	q3, [x9, #255]
    3090:	mov	w9, #0x400                 	// #1024
    3094:	str	w9, [sp, #1500]
    3098:	str	w8, [sp, #1584]
    309c:	lsl	w1, w25, #3
    30a0:	add	x2, sp, #0x4e8
    30a4:	mov	x0, x21
    30a8:	bl	78d0 <boot_Digest__SHA@@Base+0x699c>
    30ac:	add	x0, sp, #0x4e8
    30b0:	bl	7b0c <boot_Digest__SHA@@Base+0x6bd8>
    30b4:	add	x8, sp, #0x10
    30b8:	add	x0, sp, #0x4e8
    30bc:	add	x21, x8, #0x454
    30c0:	bl	7c7c <boot_Digest__SHA@@Base+0x6d48>
    30c4:	ldr	w2, [sp, #1584]
    30c8:	mov	x1, x0
    30cc:	mov	x0, x21
    30d0:	bl	c90 <memcpy@plt>
    30d4:	ldr	w27, [sp, #812]
    30d8:	ldr	w28, [sp, #896]
    30dc:	cmp	w27, #0x8
    30e0:	str	w28, [sp, #1120]
    30e4:	b.cc	3160 <boot_Digest__SHA@@Base+0x222c>  // b.lo, b.ul, b.last
    30e8:	lsr	w8, w27, #3
    30ec:	cmp	w8, #0x1
    30f0:	csinc	x10, x8, xzr, hi  // hi = pmore
    30f4:	cmp	x10, #0x20
    30f8:	b.cs	3104 <boot_Digest__SHA@@Base+0x21d0>  // b.hs, b.nlast
    30fc:	mov	x9, xzr
    3100:	b	313c <boot_Digest__SHA@@Base+0x2208>
    3104:	and	x9, x10, #0x1fffffe0
    3108:	add	x11, sp, #0x10
    310c:	add	x11, x11, #0x464
    3110:	movi	v0.16b, #0x5c
    3114:	mov	x12, x9
    3118:	ldp	q1, q2, [x11, #-16]
    311c:	subs	x12, x12, #0x20
    3120:	eor	v1.16b, v1.16b, v0.16b
    3124:	eor	v2.16b, v2.16b, v0.16b
    3128:	stp	q1, q2, [x11, #-16]
    312c:	add	x11, x11, #0x20
    3130:	b.ne	3118 <boot_Digest__SHA@@Base+0x21e4>  // b.any
    3134:	cmp	x10, x9
    3138:	b.eq	3160 <boot_Digest__SHA@@Base+0x222c>  // b.none
    313c:	add	x10, sp, #0x10
    3140:	add	x10, x10, #0x454
    3144:	mov	w11, #0x5c                  	// #92
    3148:	ldrb	w12, [x10, x9]
    314c:	eor	w12, w12, w11
    3150:	strb	w12, [x10, x9]
    3154:	add	x9, x9, #0x1
    3158:	cmp	x9, x8
    315c:	b.cc	3148 <boot_Digest__SHA@@Base+0x2214>  // b.lo, b.ul, b.last
    3160:	add	x8, sp, #0x10
    3164:	add	x21, x8, #0x454
    3168:	mov	w1, w27
    316c:	mov	x0, x21
    3170:	mov	x2, x20
    3174:	bl	78d0 <boot_Digest__SHA@@Base+0x699c>
    3178:	ldr	w1, [sp, #260]
    317c:	cmp	w1, #0x8
    3180:	b.cc	31fc <boot_Digest__SHA@@Base+0x22c8>  // b.lo, b.ul, b.last
    3184:	lsr	x8, x1, #3
    3188:	cmp	x8, #0x1
    318c:	csinc	x10, x8, xzr, hi  // hi = pmore
    3190:	cmp	x10, #0x20
    3194:	b.cs	31a0 <boot_Digest__SHA@@Base+0x226c>  // b.hs, b.nlast
    3198:	mov	x9, xzr
    319c:	b	31d8 <boot_Digest__SHA@@Base+0x22a4>
    31a0:	and	x9, x10, #0x1fffffe0
    31a4:	add	x11, sp, #0x10
    31a8:	add	x11, x11, #0x464
    31ac:	movi	v0.16b, #0x6a
    31b0:	mov	x12, x9
    31b4:	ldp	q1, q2, [x11, #-16]
    31b8:	subs	x12, x12, #0x20
    31bc:	eor	v1.16b, v1.16b, v0.16b
    31c0:	eor	v2.16b, v2.16b, v0.16b
    31c4:	stp	q1, q2, [x11, #-16]
    31c8:	add	x11, x11, #0x20
    31cc:	b.ne	31b4 <boot_Digest__SHA@@Base+0x2280>  // b.any
    31d0:	cmp	x10, x9
    31d4:	b.eq	31fc <boot_Digest__SHA@@Base+0x22c8>  // b.none
    31d8:	add	x10, sp, #0x10
    31dc:	add	x10, x10, #0x454
    31e0:	mov	w11, #0x6a                  	// #106
    31e4:	ldrb	w12, [x10, x9]
    31e8:	eor	w12, w12, w11
    31ec:	strb	w12, [x10, x9]
    31f0:	add	x9, x9, #0x1
    31f4:	cmp	x9, x8
    31f8:	b.cc	31e4 <boot_Digest__SHA@@Base+0x22b0>  // b.lo, b.ul, b.last
    31fc:	add	x2, sp, #0x10
    3200:	mov	x0, x21
    3204:	bl	78d0 <boot_Digest__SHA@@Base+0x699c>
    3208:	movi	v0.2d, #0x0
    320c:	cmp	w24, #0x2
    3210:	stp	q0, q0, [x21]
    3214:	stp	q0, q0, [x21, #32]
    3218:	stp	q0, q0, [x21, #64]
    321c:	stp	q0, q0, [x21, #96]
    3220:	b.lt	32d8 <boot_Digest__SHA@@Base+0x23a4>  // b.tstop
    3224:	mov	w26, #0x400                 	// #1024
    3228:	mov	x25, xzr
    322c:	movk	w26, #0x2020, lsl #16
    3230:	sub	w24, w24, #0x1
    3234:	b	3254 <boot_Digest__SHA@@Base+0x2320>
    3238:	lsl	x1, x8, #3
    323c:	add	x2, sp, #0x10
    3240:	mov	x0, x21
    3244:	bl	78d0 <boot_Digest__SHA@@Base+0x699c>
    3248:	add	x25, x25, #0x1
    324c:	cmp	x25, x24
    3250:	b.eq	32d8 <boot_Digest__SHA@@Base+0x23a4>  // b.none
    3254:	ldr	x9, [x19, #24]
    3258:	add	x10, x25, x22
    325c:	ldr	x1, [x9, x10, lsl #3]
    3260:	ldr	w8, [x1, #12]
    3264:	and	w8, w8, w26
    3268:	cmp	w8, #0x400
    326c:	b.ne	3290 <boot_Digest__SHA@@Base+0x235c>  // b.any
    3270:	ldr	x8, [x1]
    3274:	ldr	x8, [x8, #16]
    3278:	str	x8, [sp, #8]
    327c:	ldr	x9, [x9, x10, lsl #3]
    3280:	ldr	x21, [x9, #16]
    3284:	cmp	x8, #0x4, lsl #12
    3288:	b.hi	32ac <boot_Digest__SHA@@Base+0x2378>  // b.pmore
    328c:	b	3238 <boot_Digest__SHA@@Base+0x2304>
    3290:	add	x2, sp, #0x8
    3294:	mov	x0, x19
    3298:	bl	d30 <Perl_sv_2pvbyte@plt>
    329c:	ldr	x8, [sp, #8]
    32a0:	mov	x21, x0
    32a4:	cmp	x8, #0x4, lsl #12
    32a8:	b.ls	3238 <boot_Digest__SHA@@Base+0x2304>  // b.plast
    32ac:	add	x2, sp, #0x10
    32b0:	mov	w1, #0x20000               	// #131072
    32b4:	mov	x0, x21
    32b8:	bl	78d0 <boot_Digest__SHA@@Base+0x699c>
    32bc:	ldr	x8, [sp, #8]
    32c0:	add	x21, x21, #0x4, lsl #12
    32c4:	sub	x8, x8, #0x4, lsl #12
    32c8:	cmp	x8, #0x4, lsl #12
    32cc:	str	x8, [sp, #8]
    32d0:	b.hi	32ac <boot_Digest__SHA@@Base+0x2378>  // b.pmore
    32d4:	b	3238 <boot_Digest__SHA@@Base+0x2304>
    32d8:	add	x0, sp, #0x10
    32dc:	add	x21, sp, #0x10
    32e0:	bl	7b0c <boot_Digest__SHA@@Base+0x6bd8>
    32e4:	add	x0, sp, #0x10
    32e8:	bl	7c7c <boot_Digest__SHA@@Base+0x6d48>
    32ec:	ldr	w8, [sp, #344]
    32f0:	mov	x2, x20
    32f4:	lsl	w1, w8, #3
    32f8:	bl	78d0 <boot_Digest__SHA@@Base+0x699c>
    32fc:	mov	x0, x20
    3300:	bl	7b0c <boot_Digest__SHA@@Base+0x6bd8>
    3304:	mov	w8, #0x5556                	// #21846
    3308:	movk	w8, #0x5555, lsl #16
    330c:	mul	x8, x23, x8
    3310:	lsr	x9, x8, #63
    3314:	lsr	x8, x8, #32
    3318:	add	w8, w8, w9
    331c:	add	w8, w8, w8, lsl #1
    3320:	sub	w8, w23, w8
    3324:	cmp	w8, #0x1
    3328:	mov	x0, x20
    332c:	str	xzr, [sp, #8]
    3330:	b.eq	334c <boot_Digest__SHA@@Base+0x2418>  // b.none
    3334:	cbnz	w8, 33bc <boot_Digest__SHA@@Base+0x2488>
    3338:	bl	7c7c <boot_Digest__SHA@@Base+0x6d48>
    333c:	ldr	w8, [sp, #1120]
    3340:	mov	x1, x0
    3344:	str	x8, [sp, #8]
    3348:	b	33c4 <boot_Digest__SHA@@Base+0x2490>
    334c:	bl	7c7c <boot_Digest__SHA@@Base+0x6d48>
    3350:	ldr	w8, [sp, #896]
    3354:	add	x1, x21, #0x374
    3358:	strb	wzr, [sp, #900]
    335c:	cmp	w8, #0x40
    3360:	b.hi	33c4 <boot_Digest__SHA@@Base+0x2490>  // b.pmore
    3364:	mov	x11, x1
    3368:	cbz	w8, 33b4 <boot_Digest__SHA@@Base+0x2480>
    336c:	adrp	x9, 8000 <boot_Digest__SHA@@Base+0x70cc>
    3370:	mov	x8, xzr
    3374:	add	x9, x9, #0x5be
    3378:	mov	x10, x1
    337c:	ldrb	w11, [x0, x8]
    3380:	lsr	x11, x11, #4
    3384:	ldrb	w11, [x9, x11]
    3388:	strb	w11, [x10]
    338c:	ldrb	w11, [x0, x8]
    3390:	add	x8, x8, #0x1
    3394:	and	x11, x11, #0xf
    3398:	ldrb	w11, [x9, x11]
    339c:	strb	w11, [x10, #1]
    33a0:	ldr	w12, [sp, #896]
    33a4:	add	x11, x10, #0x2
    33a8:	mov	x10, x11
    33ac:	cmp	w8, w12
    33b0:	b.cc	337c <boot_Digest__SHA@@Base+0x2448>  // b.lo, b.ul, b.last
    33b4:	strb	wzr, [x11]
    33b8:	b	33c4 <boot_Digest__SHA@@Base+0x2490>
    33bc:	bl	7dcc <boot_Digest__SHA@@Base+0x6e98>
    33c0:	mov	x1, x0
    33c4:	ldr	x2, [sp, #8]
    33c8:	mov	x0, x19
    33cc:	bl	dc0 <Perl_newSVpv@plt>
    33d0:	mov	x1, x0
    33d4:	mov	x0, x19
    33d8:	bl	e00 <Perl_sv_2mortal@plt>
    33dc:	ldr	x8, [x19, #24]
    33e0:	sbfiz	x9, x22, #3, #32
    33e4:	str	x0, [x8, x9]
    33e8:	ldr	x8, [x19, #24]
    33ec:	add	x8, x8, x9
    33f0:	str	x8, [x19]
    33f4:	adrp	x9, 18000 <boot_Digest__SHA@@Base+0x170cc>
    33f8:	ldur	x8, [x29, #-16]
    33fc:	ldr	x9, [x9, #4056]
    3400:	ldr	x9, [x9]
    3404:	cmp	x9, x8
    3408:	b.ne	342c <boot_Digest__SHA@@Base+0x24f8>  // b.any
    340c:	add	sp, sp, #0x720
    3410:	ldp	x20, x19, [sp, #80]
    3414:	ldp	x22, x21, [sp, #64]
    3418:	ldp	x24, x23, [sp, #48]
    341c:	ldp	x26, x25, [sp, #32]
    3420:	ldp	x28, x27, [sp, #16]
    3424:	ldp	x29, x30, [sp], #96
    3428:	ret
    342c:	bl	d80 <__stack_chk_fail@plt>
    3430:	stp	x29, x30, [sp, #-64]!
    3434:	stp	x22, x21, [sp, #32]
    3438:	stp	x20, x19, [sp, #48]
    343c:	ldr	x8, [x0, #120]
    3440:	ldr	x10, [x0]
    3444:	str	x23, [sp, #16]
    3448:	mov	x29, sp
    344c:	sub	x9, x8, #0x4
    3450:	str	x9, [x0, #120]
    3454:	ldrsw	x9, [x8]
    3458:	ldr	x8, [x0, #24]
    345c:	add	x11, x8, x9, lsl #3
    3460:	sub	x10, x10, x11
    3464:	and	x10, x10, #0x7fffffff8
    3468:	cmp	x10, #0x8
    346c:	b.ne	35c0 <boot_Digest__SHA@@Base+0x268c>  // b.any
    3470:	ldr	x11, [x1]
    3474:	ldr	x10, [x0, #8]
    3478:	add	x22, x9, #0x1
    347c:	ldr	x21, [x8, x22, lsl #3]
    3480:	ldr	w23, [x11, #40]
    3484:	ldrb	w9, [x10, #35]
    3488:	mov	x19, x0
    348c:	tbnz	w9, #2, 34b0 <boot_Digest__SHA@@Base+0x257c>
    3490:	mov	x0, x19
    3494:	bl	e50 <Perl_sv_newmortal@plt>
    3498:	mov	x20, x0
    349c:	mov	x0, x19
    34a0:	mov	x1, x21
    34a4:	bl	d90 <Perl_sv_isobject@plt>
    34a8:	cbnz	w0, 34cc <boot_Digest__SHA@@Base+0x2598>
    34ac:	b	3528 <boot_Digest__SHA@@Base+0x25f4>
    34b0:	ldr	x8, [x19, #16]
    34b4:	ldr	x9, [x10, #24]
    34b8:	ldr	x20, [x8, x9, lsl #3]
    34bc:	mov	x0, x19
    34c0:	mov	x1, x21
    34c4:	bl	d90 <Perl_sv_isobject@plt>
    34c8:	cbz	w0, 3528 <boot_Digest__SHA@@Base+0x25f4>
    34cc:	adrp	x2, 8000 <boot_Digest__SHA@@Base+0x70cc>
    34d0:	add	x2, x2, #0x58c
    34d4:	mov	x0, x19
    34d8:	mov	x1, x21
    34dc:	bl	ce0 <Perl_sv_derived_from@plt>
    34e0:	tbz	w0, #0, 3528 <boot_Digest__SHA@@Base+0x25f4>
    34e4:	ldr	x1, [x21, #16]
    34e8:	mov	w9, #0x100                 	// #256
    34ec:	movk	w9, #0x20, lsl #16
    34f0:	ldr	w8, [x1, #12]
    34f4:	and	w8, w8, w9
    34f8:	cmp	w8, #0x100
    34fc:	b.ne	3518 <boot_Digest__SHA@@Base+0x25e4>  // b.any
    3500:	ldr	x8, [x1]
    3504:	ldr	x0, [x8, #32]
    3508:	cbz	x0, 3528 <boot_Digest__SHA@@Base+0x25f4>
    350c:	cbz	w23, 3558 <boot_Digest__SHA@@Base+0x2624>
    3510:	ldr	w8, [x0]
    3514:	b	3560 <boot_Digest__SHA@@Base+0x262c>
    3518:	mov	w2, #0x2                   	// #2
    351c:	mov	x0, x19
    3520:	bl	cb0 <Perl_sv_2iv_flags@plt>
    3524:	cbnz	x0, 350c <boot_Digest__SHA@@Base+0x25d8>
    3528:	ldr	x8, [x19, #24]
    352c:	add	x20, x19, #0x150
    3530:	add	x8, x8, x22, lsl #3
    3534:	str	x20, [x8]
    3538:	ldr	x8, [x19, #24]
    353c:	ldr	x23, [sp, #16]
    3540:	add	x8, x8, x22, lsl #3
    3544:	str	x8, [x19]
    3548:	ldp	x20, x19, [sp, #48]
    354c:	ldp	x22, x21, [sp, #32]
    3550:	ldp	x29, x30, [sp], #64
    3554:	ret
    3558:	ldr	w8, [x0, #328]
    355c:	lsl	w8, w8, #3
    3560:	ldr	w9, [x20, #12]
    3564:	ldr	x10, [x19, #24]
    3568:	mov	w11, #0x8ff                 	// #2303
    356c:	ldrb	w12, [x19, #185]
    3570:	movk	w11, #0x9981, lsl #16
    3574:	and	w11, w9, w11
    3578:	add	x10, x10, x22, lsl #3
    357c:	cmp	w11, #0x1
    3580:	sub	x21, x10, #0x8
    3584:	cset	w10, eq  // eq = none
    3588:	eor	x11, x12, #0x1
    358c:	tst	x10, x11
    3590:	sxtw	x2, w8
    3594:	b.eq	35b0 <boot_Digest__SHA@@Base+0x267c>  // b.none
    3598:	mov	w8, #0x1100                	// #4352
    359c:	orr	w8, w9, w8
    35a0:	str	w8, [x20, #12]
    35a4:	str	x2, [x20, #16]
    35a8:	add	x8, x21, #0x8
    35ac:	b	3534 <boot_Digest__SHA@@Base+0x2600>
    35b0:	mov	x0, x19
    35b4:	mov	x1, x20
    35b8:	bl	d10 <Perl_sv_setiv_mg@plt>
    35bc:	b	35a8 <boot_Digest__SHA@@Base+0x2674>
    35c0:	adrp	x8, 8000 <boot_Digest__SHA@@Base+0x70cc>
    35c4:	add	x8, x8, #0x5b9
    35c8:	mov	x0, x1
    35cc:	mov	x1, x8
    35d0:	bl	db0 <Perl_croak_xs_usage@plt>
    35d4:	sub	sp, sp, #0x60
    35d8:	stp	x29, x30, [sp, #16]
    35dc:	str	x25, [sp, #32]
    35e0:	stp	x24, x23, [sp, #48]
    35e4:	stp	x22, x21, [sp, #64]
    35e8:	stp	x20, x19, [sp, #80]
    35ec:	adrp	x8, 18000 <boot_Digest__SHA@@Base+0x170cc>
    35f0:	ldr	x8, [x8, #4056]
    35f4:	add	x29, sp, #0x10
    35f8:	ldr	x8, [x8]
    35fc:	str	x8, [sp, #8]
    3600:	ldr	x8, [x0, #120]
    3604:	ldr	x10, [x0]
    3608:	sub	x9, x8, #0x4
    360c:	str	x9, [x0, #120]
    3610:	ldrsw	x8, [x8]
    3614:	ldr	x9, [x0, #24]
    3618:	add	x11, x9, x8, lsl #3
    361c:	sub	x21, x10, x11
    3620:	lsr	x23, x21, #3
    3624:	cmp	w23, #0x0
    3628:	b.le	37a4 <boot_Digest__SHA@@Base+0x2870>
    362c:	add	x22, x8, #0x1
    3630:	ldr	x20, [x9, x22, lsl #3]
    3634:	mov	x19, x0
    3638:	mov	x1, x20
    363c:	bl	d90 <Perl_sv_isobject@plt>
    3640:	cbz	w0, 3754 <boot_Digest__SHA@@Base+0x2820>
    3644:	adrp	x2, 8000 <boot_Digest__SHA@@Base+0x70cc>
    3648:	add	x2, x2, #0x58c
    364c:	mov	x0, x19
    3650:	mov	x1, x20
    3654:	bl	ce0 <Perl_sv_derived_from@plt>
    3658:	tbz	w0, #0, 3754 <boot_Digest__SHA@@Base+0x2820>
    365c:	ldr	x1, [x20, #16]
    3660:	mov	w9, #0x100                 	// #256
    3664:	movk	w9, #0x20, lsl #16
    3668:	ldr	w8, [x1, #12]
    366c:	and	w8, w8, w9
    3670:	cmp	w8, #0x100
    3674:	b.ne	3740 <boot_Digest__SHA@@Base+0x280c>  // b.any
    3678:	ldr	x8, [x1]
    367c:	ldr	x20, [x8, #32]
    3680:	cbz	x20, 3754 <boot_Digest__SHA@@Base+0x2820>
    3684:	cmp	w23, #0x2
    3688:	b.lt	3760 <boot_Digest__SHA@@Base+0x282c>  // b.tstop
    368c:	mov	w25, #0x400                 	// #1024
    3690:	ubfx	x23, x21, #3, #32
    3694:	mov	w24, #0x1                   	// #1
    3698:	movk	w25, #0x2020, lsl #16
    369c:	b	36bc <boot_Digest__SHA@@Base+0x2788>
    36a0:	lsl	x1, x8, #3
    36a4:	mov	x0, x21
    36a8:	mov	x2, x20
    36ac:	bl	78d0 <boot_Digest__SHA@@Base+0x699c>
    36b0:	add	x24, x24, #0x1
    36b4:	cmp	x24, x23
    36b8:	b.eq	3760 <boot_Digest__SHA@@Base+0x282c>  // b.none
    36bc:	ldr	x9, [x19, #24]
    36c0:	add	x10, x24, x22
    36c4:	ldr	x1, [x9, x10, lsl #3]
    36c8:	ldr	w8, [x1, #12]
    36cc:	and	w8, w8, w25
    36d0:	cmp	w8, #0x400
    36d4:	b.ne	36f8 <boot_Digest__SHA@@Base+0x27c4>  // b.any
    36d8:	ldr	x8, [x1]
    36dc:	ldr	x8, [x8, #16]
    36e0:	str	x8, [sp]
    36e4:	ldr	x9, [x9, x10, lsl #3]
    36e8:	ldr	x21, [x9, #16]
    36ec:	cmp	x8, #0x4, lsl #12
    36f0:	b.hi	3714 <boot_Digest__SHA@@Base+0x27e0>  // b.pmore
    36f4:	b	36a0 <boot_Digest__SHA@@Base+0x276c>
    36f8:	mov	x2, sp
    36fc:	mov	x0, x19
    3700:	bl	d30 <Perl_sv_2pvbyte@plt>
    3704:	ldr	x8, [sp]
    3708:	mov	x21, x0
    370c:	cmp	x8, #0x4, lsl #12
    3710:	b.ls	36a0 <boot_Digest__SHA@@Base+0x276c>  // b.plast
    3714:	mov	w1, #0x20000               	// #131072
    3718:	mov	x0, x21
    371c:	mov	x2, x20
    3720:	bl	78d0 <boot_Digest__SHA@@Base+0x699c>
    3724:	ldr	x8, [sp]
    3728:	add	x21, x21, #0x4, lsl #12
    372c:	sub	x8, x8, #0x4, lsl #12
    3730:	cmp	x8, #0x4, lsl #12
    3734:	str	x8, [sp]
    3738:	b.hi	3714 <boot_Digest__SHA@@Base+0x27e0>  // b.pmore
    373c:	b	36a0 <boot_Digest__SHA@@Base+0x276c>
    3740:	mov	w2, #0x2                   	// #2
    3744:	mov	x0, x19
    3748:	bl	cb0 <Perl_sv_2iv_flags@plt>
    374c:	mov	x20, x0
    3750:	cbnz	x20, 3684 <boot_Digest__SHA@@Base+0x2750>
    3754:	ldr	x8, [x19, #24]
    3758:	add	x9, x19, #0x150
    375c:	str	x9, [x8, x22, lsl #3]
    3760:	ldr	x8, [x19, #24]
    3764:	adrp	x9, 18000 <boot_Digest__SHA@@Base+0x170cc>
    3768:	add	x8, x8, x22, lsl #3
    376c:	str	x8, [x19]
    3770:	ldr	x8, [sp, #8]
    3774:	ldr	x9, [x9, #4056]
    3778:	ldr	x9, [x9]
    377c:	cmp	x9, x8
    3780:	b.ne	37a0 <boot_Digest__SHA@@Base+0x286c>  // b.any
    3784:	ldp	x20, x19, [sp, #80]
    3788:	ldp	x22, x21, [sp, #64]
    378c:	ldp	x24, x23, [sp, #48]
    3790:	ldr	x25, [sp, #32]
    3794:	ldp	x29, x30, [sp, #16]
    3798:	add	sp, sp, #0x60
    379c:	ret
    37a0:	bl	d80 <__stack_chk_fail@plt>
    37a4:	adrp	x8, 8000 <boot_Digest__SHA@@Base+0x70cc>
    37a8:	add	x8, x8, #0x610
    37ac:	mov	x0, x1
    37b0:	mov	x1, x8
    37b4:	bl	db0 <Perl_croak_xs_usage@plt>
    37b8:	stp	x29, x30, [sp, #-48]!
    37bc:	stp	x22, x21, [sp, #16]
    37c0:	stp	x20, x19, [sp, #32]
    37c4:	ldr	x8, [x0, #120]
    37c8:	ldr	x10, [x0]
    37cc:	mov	x29, sp
    37d0:	sub	x9, x8, #0x4
    37d4:	str	x9, [x0, #120]
    37d8:	ldrsw	x8, [x8]
    37dc:	ldr	x9, [x0, #24]
    37e0:	add	x11, x9, x8, lsl #3
    37e4:	sub	x10, x10, x11
    37e8:	and	x10, x10, #0x7fffffff8
    37ec:	cmp	x10, #0x8
    37f0:	b.ne	3960 <boot_Digest__SHA@@Base+0x2a2c>  // b.any
    37f4:	ldr	x10, [x1]
    37f8:	add	x22, x8, #0x1
    37fc:	ldr	x20, [x9, x22, lsl #3]
    3800:	mov	x19, x0
    3804:	ldr	w21, [x10, #40]
    3808:	mov	x1, x20
    380c:	bl	d90 <Perl_sv_isobject@plt>
    3810:	cbz	w0, 3890 <boot_Digest__SHA@@Base+0x295c>
    3814:	adrp	x2, 8000 <boot_Digest__SHA@@Base+0x70cc>
    3818:	add	x2, x2, #0x58c
    381c:	mov	x0, x19
    3820:	mov	x1, x20
    3824:	bl	ce0 <Perl_sv_derived_from@plt>
    3828:	tbz	w0, #0, 3890 <boot_Digest__SHA@@Base+0x295c>
    382c:	ldr	x1, [x20, #16]
    3830:	mov	w9, #0x100                 	// #256
    3834:	movk	w9, #0x20, lsl #16
    3838:	ldr	w8, [x1, #12]
    383c:	and	w8, w8, w9
    3840:	cmp	w8, #0x100
    3844:	b.ne	387c <boot_Digest__SHA@@Base+0x2948>  // b.any
    3848:	ldr	x8, [x1]
    384c:	ldr	x20, [x8, #32]
    3850:	cbz	x20, 3890 <boot_Digest__SHA@@Base+0x295c>
    3854:	mov	x0, x20
    3858:	bl	7b0c <boot_Digest__SHA@@Base+0x6bd8>
    385c:	mov	x0, x20
    3860:	cmp	w21, #0x1
    3864:	b.eq	38bc <boot_Digest__SHA@@Base+0x2988>  // b.none
    3868:	cbnz	w21, 3930 <boot_Digest__SHA@@Base+0x29fc>
    386c:	bl	7c7c <boot_Digest__SHA@@Base+0x6d48>
    3870:	ldr	w2, [x20, #328]
    3874:	mov	x1, x0
    3878:	b	393c <boot_Digest__SHA@@Base+0x2a08>
    387c:	mov	w2, #0x2                   	// #2
    3880:	mov	x0, x19
    3884:	bl	cb0 <Perl_sv_2iv_flags@plt>
    3888:	mov	x20, x0
    388c:	cbnz	x20, 3854 <boot_Digest__SHA@@Base+0x2920>
    3890:	add	x0, x19, #0x150
    3894:	ldr	x8, [x19, #24]
    3898:	lsl	x9, x22, #3
    389c:	str	x0, [x8, x9]
    38a0:	ldr	x8, [x19, #24]
    38a4:	add	x8, x8, x9
    38a8:	str	x8, [x19]
    38ac:	ldp	x20, x19, [sp, #32]
    38b0:	ldp	x22, x21, [sp, #16]
    38b4:	ldp	x29, x30, [sp], #48
    38b8:	ret
    38bc:	bl	7c7c <boot_Digest__SHA@@Base+0x6d48>
    38c0:	ldr	w8, [x20, #328]
    38c4:	add	x1, x20, #0x14c
    38c8:	strb	wzr, [x20, #332]
    38cc:	cmp	w8, #0x40
    38d0:	b.hi	3938 <boot_Digest__SHA@@Base+0x2a04>  // b.pmore
    38d4:	mov	x11, x1
    38d8:	cbz	w8, 3924 <boot_Digest__SHA@@Base+0x29f0>
    38dc:	adrp	x9, 8000 <boot_Digest__SHA@@Base+0x70cc>
    38e0:	mov	x8, xzr
    38e4:	add	x9, x9, #0x5be
    38e8:	mov	x10, x1
    38ec:	ldrb	w11, [x0, x8]
    38f0:	lsr	x11, x11, #4
    38f4:	ldrb	w11, [x9, x11]
    38f8:	strb	w11, [x10]
    38fc:	ldrb	w11, [x0, x8]
    3900:	add	x8, x8, #0x1
    3904:	and	x11, x11, #0xf
    3908:	ldrb	w11, [x9, x11]
    390c:	strb	w11, [x10, #1]
    3910:	ldr	w12, [x20, #328]
    3914:	add	x11, x10, #0x2
    3918:	mov	x10, x11
    391c:	cmp	w8, w12
    3920:	b.cc	38ec <boot_Digest__SHA@@Base+0x29b8>  // b.lo, b.ul, b.last
    3924:	mov	x2, xzr
    3928:	strb	wzr, [x11]
    392c:	b	393c <boot_Digest__SHA@@Base+0x2a08>
    3930:	bl	7dcc <boot_Digest__SHA@@Base+0x6e98>
    3934:	mov	x1, x0
    3938:	mov	x2, xzr
    393c:	mov	x0, x19
    3940:	bl	dc0 <Perl_newSVpv@plt>
    3944:	mov	x21, x0
    3948:	mov	x0, x20
    394c:	bl	4228 <boot_Digest__SHA@@Base+0x32f4>
    3950:	mov	x0, x19
    3954:	mov	x1, x21
    3958:	bl	e00 <Perl_sv_2mortal@plt>
    395c:	b	3894 <boot_Digest__SHA@@Base+0x2960>
    3960:	adrp	x8, 8000 <boot_Digest__SHA@@Base+0x70cc>
    3964:	add	x8, x8, #0x5b9
    3968:	mov	x0, x1
    396c:	mov	x1, x8
    3970:	bl	db0 <Perl_croak_xs_usage@plt>
    3974:	sub	sp, sp, #0x160
    3978:	stp	x29, x30, [sp, #272]
    397c:	stp	x28, x25, [sp, #288]
    3980:	stp	x24, x23, [sp, #304]
    3984:	stp	x22, x21, [sp, #320]
    3988:	stp	x20, x19, [sp, #336]
    398c:	adrp	x8, 18000 <boot_Digest__SHA@@Base+0x170cc>
    3990:	ldr	x8, [x8, #4056]
    3994:	add	x29, sp, #0x110
    3998:	ldr	x8, [x8]
    399c:	stur	x8, [x29, #-8]
    39a0:	ldr	x8, [x0, #120]
    39a4:	ldr	x10, [x0]
    39a8:	sub	x9, x8, #0x4
    39ac:	str	x9, [x0, #120]
    39b0:	ldrsw	x8, [x8]
    39b4:	ldr	x9, [x0, #24]
    39b8:	add	x11, x9, x8, lsl #3
    39bc:	sub	x10, x10, x11
    39c0:	and	x10, x10, #0x7fffffff8
    39c4:	cmp	x10, #0x8
    39c8:	b.ne	3b60 <boot_Digest__SHA@@Base+0x2c2c>  // b.any
    39cc:	add	x22, x8, #0x1
    39d0:	ldr	x20, [x9, x22, lsl #3]
    39d4:	mov	x19, x0
    39d8:	mov	x1, x20
    39dc:	bl	d90 <Perl_sv_isobject@plt>
    39e0:	cbz	w0, 3b0c <boot_Digest__SHA@@Base+0x2bd8>
    39e4:	adrp	x2, 8000 <boot_Digest__SHA@@Base+0x70cc>
    39e8:	add	x2, x2, #0x58c
    39ec:	mov	x0, x19
    39f0:	mov	x1, x20
    39f4:	bl	ce0 <Perl_sv_derived_from@plt>
    39f8:	tbz	w0, #0, 3b0c <boot_Digest__SHA@@Base+0x2bd8>
    39fc:	ldr	x1, [x20, #16]
    3a00:	mov	w9, #0x100                 	// #256
    3a04:	movk	w9, #0x20, lsl #16
    3a08:	ldr	w8, [x1, #12]
    3a0c:	and	w8, w8, w9
    3a10:	cmp	w8, #0x100
    3a14:	b.ne	3af8 <boot_Digest__SHA@@Base+0x2bc4>  // b.any
    3a18:	ldr	x8, [x1]
    3a1c:	ldr	x20, [x8, #32]
    3a20:	cbz	x20, 3b0c <boot_Digest__SHA@@Base+0x2bd8>
    3a24:	mov	x0, x20
    3a28:	bl	7c7c <boot_Digest__SHA@@Base+0x6d48>
    3a2c:	ldr	w8, [x20]
    3a30:	mov	w23, #0x40                  	// #64
    3a34:	mov	w21, #0x20                  	// #32
    3a38:	mov	x1, x0
    3a3c:	cmp	w8, #0x101
    3a40:	csel	x2, x21, x23, lt  // lt = tstop
    3a44:	add	x0, sp, #0x8
    3a48:	add	x24, sp, #0x8
    3a4c:	bl	c90 <memcpy@plt>
    3a50:	ldr	w8, [x20]
    3a54:	mov	w25, #0x80                  	// #128
    3a58:	add	x1, x20, #0x70
    3a5c:	cmp	w8, #0x101
    3a60:	csel	x8, x21, x23, lt  // lt = tstop
    3a64:	add	x21, x24, x8
    3a68:	csel	x2, x23, x25, lt  // lt = tstop
    3a6c:	mov	x0, x21
    3a70:	bl	c90 <memcpy@plt>
    3a74:	ldr	w8, [x20]
    3a78:	ldr	w9, [x20, #240]
    3a7c:	add	x1, sp, #0x8
    3a80:	mov	x0, x19
    3a84:	cmp	w8, #0x101
    3a88:	csel	x8, x23, x25, lt  // lt = tstop
    3a8c:	add	x8, x21, x8
    3a90:	rev	w9, w9
    3a94:	str	w9, [x8]
    3a98:	ldr	w9, [x20, #248]
    3a9c:	rev	w9, w9
    3aa0:	str	w9, [x8, #4]
    3aa4:	ldr	w9, [x20, #252]
    3aa8:	rev	w9, w9
    3aac:	str	w9, [x8, #8]
    3ab0:	ldr	w9, [x20, #256]
    3ab4:	rev	w9, w9
    3ab8:	str	w9, [x8, #12]
    3abc:	ldr	w9, [x20, #260]
    3ac0:	rev	w9, w9
    3ac4:	str	w9, [x8, #16]!
    3ac8:	sub	x8, x8, x24
    3acc:	add	x2, x8, #0x4
    3ad0:	bl	dc0 <Perl_newSVpv@plt>
    3ad4:	mov	x1, x0
    3ad8:	mov	x0, x19
    3adc:	bl	e00 <Perl_sv_2mortal@plt>
    3ae0:	ldr	x8, [x19, #24]
    3ae4:	lsl	x9, x22, #3
    3ae8:	str	x0, [x8, x9]
    3aec:	ldr	x8, [x19, #24]
    3af0:	add	x8, x8, x9
    3af4:	b	3b24 <boot_Digest__SHA@@Base+0x2bf0>
    3af8:	mov	w2, #0x2                   	// #2
    3afc:	mov	x0, x19
    3b00:	bl	cb0 <Perl_sv_2iv_flags@plt>
    3b04:	mov	x20, x0
    3b08:	cbnz	x20, 3a24 <boot_Digest__SHA@@Base+0x2af0>
    3b0c:	ldr	x8, [x19, #24]
    3b10:	add	x9, x19, #0x150
    3b14:	lsl	x10, x22, #3
    3b18:	str	x9, [x8, x10]
    3b1c:	ldr	x8, [x19, #24]
    3b20:	add	x8, x8, x10
    3b24:	str	x8, [x19]
    3b28:	adrp	x9, 18000 <boot_Digest__SHA@@Base+0x170cc>
    3b2c:	ldur	x8, [x29, #-8]
    3b30:	ldr	x9, [x9, #4056]
    3b34:	ldr	x9, [x9]
    3b38:	cmp	x9, x8
    3b3c:	b.ne	3b5c <boot_Digest__SHA@@Base+0x2c28>  // b.any
    3b40:	ldp	x20, x19, [sp, #336]
    3b44:	ldp	x22, x21, [sp, #320]
    3b48:	ldp	x24, x23, [sp, #304]
    3b4c:	ldp	x28, x25, [sp, #288]
    3b50:	ldp	x29, x30, [sp, #272]
    3b54:	add	sp, sp, #0x160
    3b58:	ret
    3b5c:	bl	d80 <__stack_chk_fail@plt>
    3b60:	adrp	x8, 8000 <boot_Digest__SHA@@Base+0x70cc>
    3b64:	add	x8, x8, #0x5b9
    3b68:	mov	x0, x1
    3b6c:	mov	x1, x8
    3b70:	bl	db0 <Perl_croak_xs_usage@plt>
    3b74:	sub	sp, sp, #0x50
    3b78:	stp	x29, x30, [sp, #16]
    3b7c:	str	x23, [sp, #32]
    3b80:	stp	x22, x21, [sp, #48]
    3b84:	stp	x20, x19, [sp, #64]
    3b88:	adrp	x8, 18000 <boot_Digest__SHA@@Base+0x170cc>
    3b8c:	ldr	x8, [x8, #4056]
    3b90:	add	x29, sp, #0x10
    3b94:	ldr	x8, [x8]
    3b98:	str	x8, [sp, #8]
    3b9c:	ldr	x8, [x0, #120]
    3ba0:	ldr	x10, [x0]
    3ba4:	sub	x9, x8, #0x4
    3ba8:	str	x9, [x0, #120]
    3bac:	ldr	w8, [x8]
    3bb0:	ldr	x9, [x0, #24]
    3bb4:	add	x11, x9, x8, lsl #3
    3bb8:	sub	x10, x10, x11
    3bbc:	and	x10, x10, #0x7fffffff8
    3bc0:	cmp	x10, #0x10
    3bc4:	b.ne	3e38 <boot_Digest__SHA@@Base+0x2f04>  // b.any
    3bc8:	add	w10, w8, #0x1
    3bcc:	ldr	x20, [x9, w10, sxtw #3]
    3bd0:	add	w8, w8, #0x2
    3bd4:	ldr	x21, [x9, w8, sxtw #3]
    3bd8:	mov	x19, x0
    3bdc:	mov	x1, x20
    3be0:	sxtw	x22, w10
    3be4:	bl	d90 <Perl_sv_isobject@plt>
    3be8:	cbz	w0, 3dec <boot_Digest__SHA@@Base+0x2eb8>
    3bec:	adrp	x2, 8000 <boot_Digest__SHA@@Base+0x70cc>
    3bf0:	add	x2, x2, #0x58c
    3bf4:	mov	x0, x19
    3bf8:	mov	x1, x20
    3bfc:	bl	ce0 <Perl_sv_derived_from@plt>
    3c00:	tbz	w0, #0, 3dec <boot_Digest__SHA@@Base+0x2eb8>
    3c04:	ldr	x1, [x20, #16]
    3c08:	mov	w23, #0x100                 	// #256
    3c0c:	movk	w23, #0x20, lsl #16
    3c10:	ldr	w8, [x1, #12]
    3c14:	and	w8, w8, w23
    3c18:	cmp	w8, #0x100
    3c1c:	b.ne	3c30 <boot_Digest__SHA@@Base+0x2cfc>  // b.any
    3c20:	ldr	x8, [x1]
    3c24:	ldr	x20, [x8, #32]
    3c28:	cbnz	x20, 3c44 <boot_Digest__SHA@@Base+0x2d10>
    3c2c:	b	3dec <boot_Digest__SHA@@Base+0x2eb8>
    3c30:	mov	w2, #0x2                   	// #2
    3c34:	mov	x0, x19
    3c38:	bl	cb0 <Perl_sv_2iv_flags@plt>
    3c3c:	mov	x20, x0
    3c40:	cbz	x20, 3dec <boot_Digest__SHA@@Base+0x2eb8>
    3c44:	ldr	w8, [x21, #12]
    3c48:	add	w9, w23, #0x300
    3c4c:	and	w8, w8, w9
    3c50:	cmp	w8, #0x400
    3c54:	b.ne	3c6c <boot_Digest__SHA@@Base+0x2d38>  // b.any
    3c58:	ldr	x8, [x21]
    3c5c:	ldr	x8, [x8, #16]
    3c60:	str	x8, [sp]
    3c64:	ldr	x0, [x21, #16]
    3c68:	b	3c84 <boot_Digest__SHA@@Base+0x2d50>
    3c6c:	mov	x2, sp
    3c70:	mov	w3, #0x2                   	// #2
    3c74:	mov	x0, x19
    3c78:	mov	x1, x21
    3c7c:	bl	d50 <Perl_sv_2pv_flags@plt>
    3c80:	ldr	x8, [sp]
    3c84:	ldr	w23, [x20]
    3c88:	mov	w9, #0xd4                  	// #212
    3c8c:	mov	w10, #0x74                  	// #116
    3c90:	cmp	w23, #0x101
    3c94:	csel	x9, x10, x9, lt  // lt = tstop
    3c98:	cmp	x8, x9
    3c9c:	b.ne	3dec <boot_Digest__SHA@@Base+0x2eb8>  // b.any
    3ca0:	cmp	w23, #0x101
    3ca4:	b.ge	3d10 <boot_Digest__SHA@@Base+0x2ddc>  // b.tcont
    3ca8:	ldr	w8, [x0]
    3cac:	rev	w8, w8
    3cb0:	str	w8, [x20, #16]
    3cb4:	ldr	w8, [x0, #4]
    3cb8:	rev	w8, w8
    3cbc:	str	w8, [x20, #20]
    3cc0:	ldr	w8, [x0, #8]
    3cc4:	rev	w8, w8
    3cc8:	str	w8, [x20, #24]
    3ccc:	ldr	w8, [x0, #12]
    3cd0:	rev	w8, w8
    3cd4:	str	w8, [x20, #28]
    3cd8:	ldr	w8, [x0, #16]
    3cdc:	rev	w8, w8
    3ce0:	str	w8, [x20, #32]
    3ce4:	ldr	w8, [x0, #20]
    3ce8:	rev	w8, w8
    3cec:	str	w8, [x20, #36]
    3cf0:	ldr	w8, [x0, #24]
    3cf4:	rev	w8, w8
    3cf8:	str	w8, [x20, #40]
    3cfc:	ldr	w8, [x0, #28]
    3d00:	rev	w8, w8
    3d04:	str	w8, [x20, #44]
    3d08:	mov	w8, #0x20                  	// #32
    3d0c:	b	3d74 <boot_Digest__SHA@@Base+0x2e40>
    3d10:	ldr	x8, [x0]
    3d14:	rev	x8, x8
    3d18:	str	x8, [x20, #48]
    3d1c:	ldr	x8, [x0, #8]
    3d20:	rev	x8, x8
    3d24:	str	x8, [x20, #56]
    3d28:	ldr	x8, [x0, #16]
    3d2c:	rev	x8, x8
    3d30:	str	x8, [x20, #64]
    3d34:	ldr	x8, [x0, #24]
    3d38:	rev	x8, x8
    3d3c:	str	x8, [x20, #72]
    3d40:	ldr	x8, [x0, #32]
    3d44:	rev	x8, x8
    3d48:	str	x8, [x20, #80]
    3d4c:	ldr	x8, [x0, #40]
    3d50:	rev	x8, x8
    3d54:	str	x8, [x20, #88]
    3d58:	ldr	x8, [x0, #48]
    3d5c:	rev	x8, x8
    3d60:	str	x8, [x20, #96]
    3d64:	ldr	x8, [x0, #56]
    3d68:	rev	x8, x8
    3d6c:	str	x8, [x20, #104]
    3d70:	mov	w8, #0x40                  	// #64
    3d74:	ldr	w9, [x20, #244]
    3d78:	add	x21, x0, x8
    3d7c:	add	x0, x20, #0x70
    3d80:	mov	x1, x21
    3d84:	lsr	x2, x9, #3
    3d88:	bl	c90 <memcpy@plt>
    3d8c:	ldr	w8, [x20, #244]
    3d90:	cmp	w23, #0x101
    3d94:	mov	w10, #0x400                 	// #1024
    3d98:	mov	w11, #0x200                 	// #512
    3d9c:	add	x8, x21, x8, lsr #3
    3da0:	ldr	w9, [x8]
    3da4:	csel	w10, w11, w10, lt  // lt = tstop
    3da8:	rev	w9, w9
    3dac:	cmp	w9, w10
    3db0:	b.cs	3dec <boot_Digest__SHA@@Base+0x2eb8>  // b.hs, b.nlast
    3db4:	str	w9, [x20, #240]
    3db8:	ldr	w9, [x8, #4]
    3dbc:	rev	w9, w9
    3dc0:	str	w9, [x20, #248]
    3dc4:	ldr	w9, [x8, #8]
    3dc8:	rev	w9, w9
    3dcc:	str	w9, [x20, #252]
    3dd0:	ldr	w9, [x8, #12]
    3dd4:	rev	w9, w9
    3dd8:	str	w9, [x20, #256]
    3ddc:	ldr	w8, [x8, #16]
    3de0:	rev	w8, w8
    3de4:	str	w8, [x20, #260]
    3de8:	b	3df8 <boot_Digest__SHA@@Base+0x2ec4>
    3dec:	ldr	x8, [x19, #24]
    3df0:	add	x9, x19, #0x150
    3df4:	str	x9, [x8, x22, lsl #3]
    3df8:	ldr	x8, [x19, #24]
    3dfc:	adrp	x9, 18000 <boot_Digest__SHA@@Base+0x170cc>
    3e00:	add	x8, x8, x22, lsl #3
    3e04:	str	x8, [x19]
    3e08:	ldr	x8, [sp, #8]
    3e0c:	ldr	x9, [x9, #4056]
    3e10:	ldr	x9, [x9]
    3e14:	cmp	x9, x8
    3e18:	b.ne	3e34 <boot_Digest__SHA@@Base+0x2f00>  // b.any
    3e1c:	ldp	x20, x19, [sp, #64]
    3e20:	ldp	x22, x21, [sp, #48]
    3e24:	ldr	x23, [sp, #32]
    3e28:	ldp	x29, x30, [sp, #16]
    3e2c:	add	sp, sp, #0x50
    3e30:	ret
    3e34:	bl	d80 <__stack_chk_fail@plt>
    3e38:	adrp	x8, 8000 <boot_Digest__SHA@@Base+0x70cc>
    3e3c:	add	x8, x8, #0x61a
    3e40:	mov	x0, x1
    3e44:	mov	x1, x8
    3e48:	bl	db0 <Perl_croak_xs_usage@plt>
    3e4c:	stp	x29, x30, [sp, #-64]!
    3e50:	str	x28, [sp, #16]
    3e54:	stp	x22, x21, [sp, #32]
    3e58:	stp	x20, x19, [sp, #48]
    3e5c:	mov	x29, sp
    3e60:	sub	sp, sp, #0x1, lsl #12
    3e64:	sub	sp, sp, #0x10
    3e68:	adrp	x8, 18000 <boot_Digest__SHA@@Base+0x170cc>
    3e6c:	ldr	x8, [x8, #4056]
    3e70:	ldr	x8, [x8]
    3e74:	stur	x8, [x29, #-8]
    3e78:	ldr	x8, [x0, #120]
    3e7c:	ldr	x10, [x0]
    3e80:	sub	x9, x8, #0x4
    3e84:	str	x9, [x0, #120]
    3e88:	ldr	w8, [x8]
    3e8c:	ldr	x9, [x0, #24]
    3e90:	add	x11, x9, x8, lsl #3
    3e94:	sub	x10, x10, x11
    3e98:	and	x10, x10, #0x7fffffff8
    3e9c:	cmp	x10, #0x10
    3ea0:	b.ne	3fc8 <boot_Digest__SHA@@Base+0x3094>  // b.any
    3ea4:	add	w10, w8, #0x1
    3ea8:	add	w8, w8, #0x2
    3eac:	ldr	x1, [x9, w8, sxtw #3]
    3eb0:	ldr	x21, [x9, w10, sxtw #3]
    3eb4:	mov	x19, x0
    3eb8:	sxtw	x22, w10
    3ebc:	bl	e20 <Perl_sv_2io@plt>
    3ec0:	ldr	x20, [x0, #16]
    3ec4:	cbz	x20, 3f78 <boot_Digest__SHA@@Base+0x3044>
    3ec8:	mov	x0, x19
    3ecc:	mov	x1, x21
    3ed0:	bl	d90 <Perl_sv_isobject@plt>
    3ed4:	cbz	w0, 3f78 <boot_Digest__SHA@@Base+0x3044>
    3ed8:	adrp	x2, 8000 <boot_Digest__SHA@@Base+0x70cc>
    3edc:	add	x2, x2, #0x58c
    3ee0:	mov	x0, x19
    3ee4:	mov	x1, x21
    3ee8:	bl	ce0 <Perl_sv_derived_from@plt>
    3eec:	tbz	w0, #0, 3f78 <boot_Digest__SHA@@Base+0x3044>
    3ef0:	ldr	x1, [x21, #16]
    3ef4:	mov	w9, #0x100                 	// #256
    3ef8:	movk	w9, #0x20, lsl #16
    3efc:	ldr	w8, [x1, #12]
    3f00:	and	w8, w8, w9
    3f04:	cmp	w8, #0x100
    3f08:	b.ne	3f64 <boot_Digest__SHA@@Base+0x3030>  // b.any
    3f0c:	ldr	x8, [x1]
    3f10:	ldr	x21, [x8, #32]
    3f14:	cbz	x21, 3f78 <boot_Digest__SHA@@Base+0x3044>
    3f18:	add	x2, sp, #0x8
    3f1c:	mov	w3, #0x1000                	// #4096
    3f20:	mov	x0, x19
    3f24:	mov	x1, x20
    3f28:	bl	de0 <Perl_PerlIO_read@plt>
    3f2c:	cmp	w0, #0x1
    3f30:	b.lt	3f84 <boot_Digest__SHA@@Base+0x3050>  // b.tstop
    3f34:	sbfiz	x1, x0, #3, #32
    3f38:	add	x0, sp, #0x8
    3f3c:	mov	x2, x21
    3f40:	bl	78d0 <boot_Digest__SHA@@Base+0x699c>
    3f44:	add	x2, sp, #0x8
    3f48:	mov	w3, #0x1000                	// #4096
    3f4c:	mov	x0, x19
    3f50:	mov	x1, x20
    3f54:	bl	de0 <Perl_PerlIO_read@plt>
    3f58:	cmp	w0, #0x0
    3f5c:	b.gt	3f34 <boot_Digest__SHA@@Base+0x3000>
    3f60:	b	3f84 <boot_Digest__SHA@@Base+0x3050>
    3f64:	mov	w2, #0x2                   	// #2
    3f68:	mov	x0, x19
    3f6c:	bl	cb0 <Perl_sv_2iv_flags@plt>
    3f70:	mov	x21, x0
    3f74:	cbnz	x21, 3f18 <boot_Digest__SHA@@Base+0x2fe4>
    3f78:	ldr	x8, [x19, #24]
    3f7c:	add	x9, x19, #0x150
    3f80:	str	x9, [x8, x22, lsl #3]
    3f84:	ldr	x8, [x19, #24]
    3f88:	adrp	x9, 18000 <boot_Digest__SHA@@Base+0x170cc>
    3f8c:	add	x8, x8, x22, lsl #3
    3f90:	str	x8, [x19]
    3f94:	ldur	x8, [x29, #-8]
    3f98:	ldr	x9, [x9, #4056]
    3f9c:	ldr	x9, [x9]
    3fa0:	cmp	x9, x8
    3fa4:	b.ne	3fc4 <boot_Digest__SHA@@Base+0x3090>  // b.any
    3fa8:	add	sp, sp, #0x1, lsl #12
    3fac:	add	sp, sp, #0x10
    3fb0:	ldp	x20, x19, [sp, #48]
    3fb4:	ldp	x22, x21, [sp, #32]
    3fb8:	ldr	x28, [sp, #16]
    3fbc:	ldp	x29, x30, [sp], #64
    3fc0:	ret
    3fc4:	bl	d80 <__stack_chk_fail@plt>
    3fc8:	adrp	x8, 8000 <boot_Digest__SHA@@Base+0x70cc>
    3fcc:	add	x8, x8, #0x62d
    3fd0:	mov	x0, x1
    3fd4:	mov	x1, x8
    3fd8:	bl	db0 <Perl_croak_xs_usage@plt>
    3fdc:	stp	x29, x30, [sp, #-80]!
    3fe0:	stp	x28, x25, [sp, #16]
    3fe4:	stp	x24, x23, [sp, #32]
    3fe8:	stp	x22, x21, [sp, #48]
    3fec:	stp	x20, x19, [sp, #64]
    3ff0:	mov	x29, sp
    3ff4:	sub	sp, sp, #0x1, lsl #12
    3ff8:	sub	sp, sp, #0x10
    3ffc:	adrp	x8, 18000 <boot_Digest__SHA@@Base+0x170cc>
    4000:	ldr	x8, [x8, #4056]
    4004:	ldr	x8, [x8]
    4008:	stur	x8, [x29, #-8]
    400c:	ldr	x8, [x0, #120]
    4010:	ldr	x10, [x0]
    4014:	sub	x9, x8, #0x4
    4018:	str	x9, [x0, #120]
    401c:	ldr	w8, [x8]
    4020:	ldr	x9, [x0, #24]
    4024:	add	x11, x9, x8, lsl #3
    4028:	sub	x10, x10, x11
    402c:	and	x10, x10, #0x7fffffff8
    4030:	cmp	x10, #0x10
    4034:	b.ne	4214 <boot_Digest__SHA@@Base+0x32e0>  // b.any
    4038:	add	w10, w8, #0x1
    403c:	add	w8, w8, #0x2
    4040:	ldr	x1, [x9, w8, sxtw #3]
    4044:	ldr	x21, [x9, w10, sxtw #3]
    4048:	mov	x19, x0
    404c:	sxtw	x23, w10
    4050:	bl	e20 <Perl_sv_2io@plt>
    4054:	ldr	x20, [x0, #16]
    4058:	cbz	x20, 41c0 <boot_Digest__SHA@@Base+0x328c>
    405c:	mov	x0, x19
    4060:	mov	x1, x21
    4064:	bl	d90 <Perl_sv_isobject@plt>
    4068:	cbz	w0, 41c0 <boot_Digest__SHA@@Base+0x328c>
    406c:	adrp	x2, 8000 <boot_Digest__SHA@@Base+0x70cc>
    4070:	add	x2, x2, #0x58c
    4074:	mov	x0, x19
    4078:	mov	x1, x21
    407c:	bl	ce0 <Perl_sv_derived_from@plt>
    4080:	tbz	w0, #0, 41c0 <boot_Digest__SHA@@Base+0x328c>
    4084:	ldr	x1, [x21, #16]
    4088:	mov	w9, #0x100                 	// #256
    408c:	movk	w9, #0x20, lsl #16
    4090:	ldr	w8, [x1, #12]
    4094:	and	w8, w8, w9
    4098:	cmp	w8, #0x100
    409c:	b.ne	41ac <boot_Digest__SHA@@Base+0x3278>  // b.any
    40a0:	ldr	x8, [x1]
    40a4:	ldr	x21, [x8, #32]
    40a8:	cbz	x21, 41c0 <boot_Digest__SHA@@Base+0x328c>
    40ac:	add	x8, sp, #0x4
    40b0:	orr	x22, x8, #0x1
    40b4:	mov	w3, #0x1000                	// #4096
    40b8:	mov	x0, x19
    40bc:	mov	x1, x20
    40c0:	mov	x2, x22
    40c4:	bl	de0 <Perl_PerlIO_read@plt>
    40c8:	cmp	w0, #0x1
    40cc:	b.lt	41cc <boot_Digest__SHA@@Base+0x3298>  // b.tstop
    40d0:	mov	w25, wzr
    40d4:	add	x8, sp, #0x4
    40d8:	mov	w24, #0xa                   	// #10
    40dc:	mov	x9, x22
    40e0:	ldrb	w10, [x9], #1
    40e4:	cmp	w10, #0xd
    40e8:	cbz	w25, 4100 <boot_Digest__SHA@@Base+0x31cc>
    40ec:	b.ne	4114 <boot_Digest__SHA@@Base+0x31e0>  // b.any
    40f0:	strb	w24, [x8], #1
    40f4:	subs	w0, w0, #0x1
    40f8:	b.ne	40e0 <boot_Digest__SHA@@Base+0x31ac>  // b.any
    40fc:	b	4150 <boot_Digest__SHA@@Base+0x321c>
    4100:	b.ne	4140 <boot_Digest__SHA@@Base+0x320c>  // b.any
    4104:	mov	w25, #0x1                   	// #1
    4108:	subs	w0, w0, #0x1
    410c:	b.ne	40e0 <boot_Digest__SHA@@Base+0x31ac>  // b.any
    4110:	b	4150 <boot_Digest__SHA@@Base+0x321c>
    4114:	mov	x11, x8
    4118:	cmp	w10, #0xa
    411c:	strb	w24, [x11], #1
    4120:	mov	w25, wzr
    4124:	b.eq	4130 <boot_Digest__SHA@@Base+0x31fc>  // b.none
    4128:	add	x11, x8, #0x2
    412c:	strb	w10, [x8, #1]
    4130:	mov	x8, x11
    4134:	subs	w0, w0, #0x1
    4138:	b.ne	40e0 <boot_Digest__SHA@@Base+0x31ac>  // b.any
    413c:	b	4150 <boot_Digest__SHA@@Base+0x321c>
    4140:	mov	w25, wzr
    4144:	strb	w10, [x8], #1
    4148:	subs	w0, w0, #0x1
    414c:	b.ne	40e0 <boot_Digest__SHA@@Base+0x31ac>  // b.any
    4150:	add	x9, sp, #0x4
    4154:	sub	x8, x8, x9
    4158:	lsl	x1, x8, #3
    415c:	add	x0, sp, #0x4
    4160:	mov	x2, x21
    4164:	bl	78d0 <boot_Digest__SHA@@Base+0x699c>
    4168:	mov	w3, #0x1000                	// #4096
    416c:	mov	x0, x19
    4170:	mov	x1, x20
    4174:	mov	x2, x22
    4178:	bl	de0 <Perl_PerlIO_read@plt>
    417c:	cmp	w0, #0x0
    4180:	add	x8, sp, #0x4
    4184:	mov	x9, x22
    4188:	b.gt	40e0 <boot_Digest__SHA@@Base+0x31ac>
    418c:	cbz	w25, 41cc <boot_Digest__SHA@@Base+0x3298>
    4190:	mov	w8, #0xa                   	// #10
    4194:	add	x0, sp, #0x4
    4198:	mov	w1, #0x8                   	// #8
    419c:	mov	x2, x21
    41a0:	strb	w8, [sp, #4]
    41a4:	bl	78d0 <boot_Digest__SHA@@Base+0x699c>
    41a8:	b	41cc <boot_Digest__SHA@@Base+0x3298>
    41ac:	mov	w2, #0x2                   	// #2
    41b0:	mov	x0, x19
    41b4:	bl	cb0 <Perl_sv_2iv_flags@plt>
    41b8:	mov	x21, x0
    41bc:	cbnz	x21, 40ac <boot_Digest__SHA@@Base+0x3178>
    41c0:	ldr	x8, [x19, #24]
    41c4:	add	x9, x19, #0x150
    41c8:	str	x9, [x8, x23, lsl #3]
    41cc:	ldr	x8, [x19, #24]
    41d0:	adrp	x9, 18000 <boot_Digest__SHA@@Base+0x170cc>
    41d4:	add	x8, x8, x23, lsl #3
    41d8:	str	x8, [x19]
    41dc:	ldur	x8, [x29, #-8]
    41e0:	ldr	x9, [x9, #4056]
    41e4:	ldr	x9, [x9]
    41e8:	cmp	x9, x8
    41ec:	b.ne	4210 <boot_Digest__SHA@@Base+0x32dc>  // b.any
    41f0:	add	sp, sp, #0x1, lsl #12
    41f4:	add	sp, sp, #0x10
    41f8:	ldp	x20, x19, [sp, #64]
    41fc:	ldp	x22, x21, [sp, #48]
    4200:	ldp	x24, x23, [sp, #32]
    4204:	ldp	x28, x25, [sp, #16]
    4208:	ldp	x29, x30, [sp], #80
    420c:	ret
    4210:	bl	d80 <__stack_chk_fail@plt>
    4214:	adrp	x8, 8000 <boot_Digest__SHA@@Base+0x70cc>
    4218:	add	x8, x8, #0x62d
    421c:	mov	x0, x1
    4220:	mov	x1, x8
    4224:	bl	db0 <Perl_croak_xs_usage@plt>
    4228:	stp	x29, x30, [sp, #-32]!
    422c:	stp	x20, x19, [sp, #16]
    4230:	ldr	w8, [x0]
    4234:	mov	x19, x0
    4238:	mov	x29, sp
    423c:	cmp	w8, #0x17f
    4240:	b.le	4290 <boot_Digest__SHA@@Base+0x335c>
    4244:	mov	w9, #0xd0df                	// #53471
    4248:	movk	w9, #0x7, lsl #16
    424c:	cmp	w8, w9
    4250:	b.gt	42d8 <boot_Digest__SHA@@Base+0x33a4>
    4254:	cmp	w8, #0x180
    4258:	b.eq	4344 <boot_Digest__SHA@@Base+0x3410>  // b.none
    425c:	cmp	w8, #0x200
    4260:	b.ne	4438 <boot_Digest__SHA@@Base+0x3504>  // b.any
    4264:	add	x0, x19, #0x4
    4268:	mov	w2, #0x224                 	// #548
    426c:	mov	w1, wzr
    4270:	bl	d40 <memset@plt>
    4274:	adrp	x10, 7000 <boot_Digest__SHA@@Base+0x60cc>
    4278:	adrp	x11, 8000 <boot_Digest__SHA@@Base+0x70cc>
    427c:	mov	w9, #0x200                 	// #512
    4280:	add	x10, x10, #0x700
    4284:	add	x11, x11, #0x6d8
    4288:	mov	w8, #0x40                  	// #64
    428c:	b	436c <boot_Digest__SHA@@Base+0x3438>
    4290:	cmp	w8, #0x1
    4294:	b.eq	4380 <boot_Digest__SHA@@Base+0x344c>  // b.none
    4298:	cmp	w8, #0xe0
    429c:	b.eq	43f4 <boot_Digest__SHA@@Base+0x34c0>  // b.none
    42a0:	cmp	w8, #0x100
    42a4:	b.ne	4438 <boot_Digest__SHA@@Base+0x3504>  // b.any
    42a8:	add	x0, x19, #0x4
    42ac:	mov	w2, #0x224                 	// #548
    42b0:	mov	w1, wzr
    42b4:	bl	d40 <memset@plt>
    42b8:	adrp	x8, 8000 <boot_Digest__SHA@@Base+0x70cc>
    42bc:	add	x8, x8, #0x678
    42c0:	ldp	q1, q0, [x8]
    42c4:	adrp	x10, 5000 <boot_Digest__SHA@@Base+0x40cc>
    42c8:	mov	w9, #0x100                 	// #256
    42cc:	add	x10, x10, #0x65c
    42d0:	mov	w8, #0x20                  	// #32
    42d4:	b	4420 <boot_Digest__SHA@@Base+0x34ec>
    42d8:	mov	w20, #0xd0e0                	// #53472
    42dc:	movk	w20, #0x7, lsl #16
    42e0:	cmp	w8, w20
    42e4:	b.eq	43b0 <boot_Digest__SHA@@Base+0x347c>  // b.none
    42e8:	mov	w9, #0xd100                	// #53504
    42ec:	movk	w9, #0x7, lsl #16
    42f0:	cmp	w8, w9
    42f4:	b.ne	4438 <boot_Digest__SHA@@Base+0x3504>  // b.any
    42f8:	add	x0, x19, #0x4
    42fc:	mov	w2, #0x224                 	// #548
    4300:	mov	w1, wzr
    4304:	bl	d40 <memset@plt>
    4308:	adrp	x8, 7000 <boot_Digest__SHA@@Base+0x60cc>
    430c:	add	x8, x8, #0x700
    4310:	str	x8, [x19, #8]
    4314:	adrp	x8, 8000 <boot_Digest__SHA@@Base+0x70cc>
    4318:	add	x8, x8, #0x758
    431c:	ldp	q0, q1, [x8, #32]
    4320:	ldp	q3, q2, [x8]
    4324:	mov	w9, #0xd0e0                	// #53472
    4328:	movk	w9, #0x7, lsl #16
    432c:	mov	w8, #0x20                  	// #32
    4330:	add	w9, w9, #0x20
    4334:	str	w9, [x19]
    4338:	stp	q3, q2, [x19, #48]
    433c:	stp	q0, q1, [x19, #80]
    4340:	b	43ec <boot_Digest__SHA@@Base+0x34b8>
    4344:	add	x0, x19, #0x4
    4348:	mov	w2, #0x224                 	// #548
    434c:	mov	w1, wzr
    4350:	bl	d40 <memset@plt>
    4354:	adrp	x10, 7000 <boot_Digest__SHA@@Base+0x60cc>
    4358:	adrp	x11, 8000 <boot_Digest__SHA@@Base+0x70cc>
    435c:	mov	w9, #0x180                 	// #384
    4360:	add	x10, x10, #0x700
    4364:	add	x11, x11, #0x698
    4368:	mov	w8, #0x30                  	// #48
    436c:	ldp	q1, q0, [x11]
    4370:	ldp	q2, q3, [x11, #32]
    4374:	str	w9, [x19]
    4378:	str	x10, [x19, #8]
    437c:	b	43e4 <boot_Digest__SHA@@Base+0x34b0>
    4380:	add	x0, x19, #0x4
    4384:	mov	w2, #0x224                 	// #548
    4388:	mov	w1, wzr
    438c:	bl	d40 <memset@plt>
    4390:	adrp	x8, 8000 <boot_Digest__SHA@@Base+0x70cc>
    4394:	add	x8, x8, #0x638
    4398:	ldp	q1, q0, [x8]
    439c:	adrp	x10, 4000 <boot_Digest__SHA@@Base+0x30cc>
    43a0:	mov	w9, #0x1                   	// #1
    43a4:	add	x10, x10, #0x444
    43a8:	mov	w8, #0x14                  	// #20
    43ac:	b	4420 <boot_Digest__SHA@@Base+0x34ec>
    43b0:	add	x0, x19, #0x4
    43b4:	mov	w2, #0x224                 	// #548
    43b8:	mov	w1, wzr
    43bc:	bl	d40 <memset@plt>
    43c0:	adrp	x8, 8000 <boot_Digest__SHA@@Base+0x70cc>
    43c4:	add	x8, x8, #0x718
    43c8:	ldp	q1, q0, [x8]
    43cc:	ldp	q2, q3, [x8, #32]
    43d0:	adrp	x9, 7000 <boot_Digest__SHA@@Base+0x60cc>
    43d4:	add	x9, x9, #0x700
    43d8:	str	w20, [x19]
    43dc:	mov	w8, #0x1c                  	// #28
    43e0:	str	x9, [x19, #8]
    43e4:	stp	q1, q0, [x19, #48]
    43e8:	stp	q2, q3, [x19, #80]
    43ec:	mov	w9, #0x400                 	// #1024
    43f0:	b	4430 <boot_Digest__SHA@@Base+0x34fc>
    43f4:	add	x0, x19, #0x4
    43f8:	mov	w2, #0x224                 	// #548
    43fc:	mov	w1, wzr
    4400:	bl	d40 <memset@plt>
    4404:	adrp	x8, 8000 <boot_Digest__SHA@@Base+0x70cc>
    4408:	add	x8, x8, #0x658
    440c:	ldp	q1, q0, [x8]
    4410:	adrp	x10, 5000 <boot_Digest__SHA@@Base+0x40cc>
    4414:	mov	w9, #0xe0                  	// #224
    4418:	add	x10, x10, #0x65c
    441c:	mov	w8, #0x1c                  	// #28
    4420:	str	w9, [x19]
    4424:	str	x10, [x19, #8]
    4428:	stp	q1, q0, [x19, #16]
    442c:	mov	w9, #0x200                 	// #512
    4430:	str	w9, [x19, #244]
    4434:	str	w8, [x19, #328]
    4438:	ldp	x20, x19, [sp, #16]
    443c:	ldp	x29, x30, [sp], #32
    4440:	ret
    4444:	sub	sp, sp, #0x180
    4448:	stp	x29, x30, [sp, #288]
    444c:	stp	x28, x27, [sp, #304]
    4450:	stp	x26, x25, [sp, #320]
    4454:	stp	x24, x23, [sp, #336]
    4458:	stp	x22, x21, [sp, #352]
    445c:	stp	x20, x19, [sp, #368]
    4460:	adrp	x8, 18000 <boot_Digest__SHA@@Base+0x170cc>
    4464:	ldr	x8, [x8, #4056]
    4468:	add	x29, sp, #0x120
    446c:	mov	w24, #0x7999                	// #31129
    4470:	movk	w24, #0x5a82, lsl #16
    4474:	ldr	x8, [x8]
    4478:	stur	x8, [x29, #-16]
    447c:	ldr	w8, [x1]
    4480:	rev	w8, w8
    4484:	stur	w8, [x29, #-80]
    4488:	ldr	w8, [x1, #4]
    448c:	rev	w8, w8
    4490:	stur	w8, [x29, #-76]
    4494:	ldr	w8, [x1, #8]
    4498:	ldp	w17, w15, [x29, #-80]
    449c:	rev	w8, w8
    44a0:	stur	w8, [x29, #-72]
    44a4:	ldr	w8, [x1, #12]
    44a8:	rev	w8, w8
    44ac:	stur	w8, [x29, #-68]
    44b0:	ldr	w8, [x1, #16]
    44b4:	rev	w8, w8
    44b8:	stur	w8, [x29, #-64]
    44bc:	ldr	w8, [x1, #20]
    44c0:	ldur	w18, [x29, #-64]
    44c4:	rev	w8, w8
    44c8:	stur	w8, [x29, #-60]
    44cc:	ldr	w8, [x1, #24]
    44d0:	rev	w14, w8
    44d4:	ldr	w8, [x1, #28]
    44d8:	rev	w13, w8
    44dc:	stp	w14, w13, [x29, #-56]
    44e0:	ldr	w8, [x1, #32]
    44e4:	rev	w12, w8
    44e8:	ldr	w8, [x1, #36]
    44ec:	rev	w11, w8
    44f0:	stp	w12, w11, [x29, #-48]
    44f4:	ldr	w8, [x1, #40]
    44f8:	rev	w10, w8
    44fc:	ldr	w8, [x1, #44]
    4500:	rev	w9, w8
    4504:	stp	w10, w9, [x29, #-40]
    4508:	ldp	w8, w16, [x1, #48]
    450c:	rev	w8, w8
    4510:	rev	w28, w16
    4514:	stp	w8, w28, [x29, #-32]
    4518:	ldp	w2, w1, [x1, #56]
    451c:	stur	x0, [x29, #-96]
    4520:	ldp	w16, w20, [x29, #-72]
    4524:	rev	w25, w2
    4528:	rev	w26, w1
    452c:	stp	w25, w26, [x29, #-24]
    4530:	ldp	w30, w6, [x0, #16]
    4534:	ldp	w21, w7, [x0, #24]
    4538:	ldr	w23, [x0, #32]
    453c:	eor	w2, w16, w17
    4540:	ror	w5, w30, #27
    4544:	mov	w0, w6
    4548:	stp	w7, w23, [x29, #-104]
    454c:	stur	w6, [x29, #-84]
    4550:	bic	w6, w7, w6
    4554:	mov	w22, w7
    4558:	and	w7, w21, w0
    455c:	ror	w19, w0, #2
    4560:	add	w5, w5, w23
    4564:	orr	w6, w7, w6
    4568:	bic	w7, w21, w30
    456c:	add	w17, w5, w17
    4570:	and	w5, w19, w30
    4574:	orr	w5, w5, w7
    4578:	add	w17, w17, w6
    457c:	add	w5, w22, w5
    4580:	add	w17, w17, w24
    4584:	eor	w3, w20, w15
    4588:	ror	w6, w30, #2
    458c:	add	w15, w5, w15
    4590:	ror	w5, w17, #27
    4594:	add	w0, w19, w20
    4598:	bic	w19, w19, w17
    459c:	add	w15, w15, w5
    45a0:	and	w5, w6, w17
    45a4:	eor	w4, w18, w16
    45a8:	orr	w5, w5, w19
    45ac:	add	w16, w21, w16
    45b0:	add	w15, w15, w24
    45b4:	ldur	w1, [x29, #-60]
    45b8:	ror	w17, w17, #2
    45bc:	add	w16, w16, w5
    45c0:	ror	w5, w15, #27
    45c4:	eor	w19, w14, w18
    45c8:	add	w18, w6, w18
    45cc:	bic	w6, w6, w15
    45d0:	add	w16, w16, w5
    45d4:	and	w5, w17, w15
    45d8:	orr	w5, w5, w6
    45dc:	add	w16, w16, w24
    45e0:	ror	w15, w15, #2
    45e4:	add	w0, w0, w5
    45e8:	ror	w5, w16, #27
    45ec:	eor	w7, w1, w20
    45f0:	eor	w6, w13, w1
    45f4:	add	w1, w1, w17
    45f8:	bic	w17, w17, w16
    45fc:	add	w0, w0, w5
    4600:	and	w5, w15, w16
    4604:	orr	w17, w5, w17
    4608:	add	w0, w0, w24
    460c:	eor	w5, w12, w14
    4610:	add	w20, w14, w15
    4614:	ror	w16, w16, #2
    4618:	add	w14, w18, w17
    461c:	ror	w17, w0, #27
    4620:	bic	w15, w15, w0
    4624:	add	w17, w14, w17
    4628:	and	w14, w16, w0
    462c:	orr	w18, w14, w15
    4630:	add	w17, w17, w24
    4634:	ror	w0, w0, #2
    4638:	add	w18, w1, w18
    463c:	ror	w1, w17, #27
    4640:	eor	w14, w11, w13
    4644:	add	w13, w13, w16
    4648:	bic	w16, w16, w17
    464c:	add	w18, w18, w1
    4650:	and	w1, w0, w17
    4654:	eor	w2, w2, w12
    4658:	eor	w15, w4, w10
    465c:	orr	w16, w1, w16
    4660:	eor	w1, w10, w12
    4664:	eor	w4, w7, w9
    4668:	add	w7, w12, w0
    466c:	ror	w12, w17, #2
    4670:	add	w17, w18, w24
    4674:	add	w16, w20, w16
    4678:	ror	w18, w17, #27
    467c:	bic	w0, w0, w17
    4680:	add	w16, w16, w18
    4684:	and	w18, w12, w17
    4688:	orr	w18, w18, w0
    468c:	add	w16, w16, w24
    4690:	ror	w17, w17, #2
    4694:	add	w13, w13, w18
    4698:	ror	w18, w16, #27
    469c:	eor	w3, w3, w11
    46a0:	eor	w0, w9, w11
    46a4:	add	w11, w11, w12
    46a8:	bic	w12, w12, w16
    46ac:	add	w18, w13, w18
    46b0:	and	w13, w17, w16
    46b4:	orr	w20, w13, w12
    46b8:	add	w18, w18, w24
    46bc:	eor	w2, w2, w28
    46c0:	eor	w13, w6, w28
    46c4:	ror	w6, w16, #2
    46c8:	add	w16, w7, w20
    46cc:	ror	w7, w18, #27
    46d0:	stur	w21, [x29, #-108]
    46d4:	eor	w12, w8, w10
    46d8:	add	w10, w10, w17
    46dc:	bic	w17, w17, w18
    46e0:	add	w7, w16, w7
    46e4:	and	w16, w6, w18
    46e8:	ror	w21, w2, #31
    46ec:	orr	w20, w16, w17
    46f0:	eor	w16, w28, w9
    46f4:	eor	w2, w4, w21
    46f8:	add	w9, w9, w6
    46fc:	eor	w17, w1, w21
    4700:	ror	w1, w2, #31
    4704:	stur	w9, [x29, #-112]
    4708:	ror	w9, w18, #2
    470c:	add	w18, w7, w24
    4710:	mov	w22, w21
    4714:	eor	w16, w16, w1
    4718:	mov	w21, w1
    471c:	eor	w1, w3, w25
    4720:	add	w11, w11, w20
    4724:	ror	w3, w18, #27
    4728:	bic	w4, w6, w18
    472c:	add	w11, w11, w3
    4730:	and	w3, w9, w18
    4734:	eor	w19, w19, w8
    4738:	orr	w3, w3, w4
    473c:	eor	w4, w25, w8
    4740:	add	w8, w8, w9
    4744:	add	w11, w11, w24
    4748:	stur	w8, [x29, #-116]
    474c:	add	w8, w10, w3
    4750:	ror	w10, w11, #27
    4754:	ror	w18, w18, #2
    4758:	add	w8, w8, w10
    475c:	eor	w2, w5, w25
    4760:	bic	w9, w9, w11
    4764:	stur	w8, [x29, #-120]
    4768:	and	w8, w18, w11
    476c:	stp	w18, w11, [x29, #-128]
    4770:	orr	w8, w8, w9
    4774:	ror	w18, w1, #31
    4778:	eor	w9, w2, w21
    477c:	eor	w10, w19, w18
    4780:	ror	w11, w9, #31
    4784:	eor	w9, w0, w18
    4788:	stp	w25, w8, [x29, #-136]
    478c:	eor	w8, w22, w25
    4790:	ror	w0, w10, #31
    4794:	eor	w10, w9, w11
    4798:	mov	w1, w18
    479c:	eor	w9, w8, w11
    47a0:	ror	w10, w10, #31
    47a4:	eor	w8, w4, w0
    47a8:	mov	w18, w11
    47ac:	eor	w8, w8, w10
    47b0:	mov	w11, w10
    47b4:	eor	w10, w21, w1
    47b8:	mov	w2, w1
    47bc:	str	w1, [sp, #144]
    47c0:	eor	w10, w10, w11
    47c4:	mov	w1, w11
    47c8:	eor	w11, w15, w26
    47cc:	eor	w14, w14, w26
    47d0:	ror	w3, w11, #31
    47d4:	ror	w15, w8, #31
    47d8:	eor	w8, w14, w0
    47dc:	mov	w14, w3
    47e0:	str	w3, [sp, #140]
    47e4:	eor	w13, w13, w3
    47e8:	ror	w3, w8, #31
    47ec:	eor	w8, w12, w14
    47f0:	eor	w8, w8, w3
    47f4:	eor	w12, w2, w26
    47f8:	ror	w4, w13, #31
    47fc:	eor	w12, w12, w3
    4800:	ror	w2, w8, #31
    4804:	eor	w8, w26, w28
    4808:	eor	w11, w18, w0
    480c:	eor	w13, w17, w4
    4810:	eor	w8, w8, w4
    4814:	eor	w12, w12, w15
    4818:	eor	w11, w11, w15
    481c:	mov	w5, w4
    4820:	mov	w17, w15
    4824:	ror	w4, w13, #31
    4828:	eor	w8, w8, w2
    482c:	ror	w15, w12, #31
    4830:	eor	w12, w0, w14
    4834:	eor	w12, w12, w2
    4838:	eor	w13, w16, w4
    483c:	ror	w16, w8, #31
    4840:	eor	w8, w14, w22
    4844:	eor	w14, w8, w4
    4848:	eor	w12, w12, w15
    484c:	eor	w8, w1, w3
    4850:	stur	w0, [x29, #-140]
    4854:	eor	w8, w8, w15
    4858:	mov	w0, w15
    485c:	ror	w6, w13, #31
    4860:	ror	w15, w12, #31
    4864:	eor	w12, w3, w5
    4868:	eor	w13, w14, w16
    486c:	eor	w12, w12, w16
    4870:	eor	w14, w9, w6
    4874:	eor	w9, w5, w21
    4878:	str	w3, [sp, #136]
    487c:	mov	w3, w16
    4880:	ror	w16, w13, #31
    4884:	eor	w13, w9, w6
    4888:	eor	w12, w12, w15
    488c:	eor	w9, w17, w2
    4890:	str	w5, [sp, #124]
    4894:	eor	w9, w9, w15
    4898:	mov	w5, w15
    489c:	ror	w7, w14, #31
    48a0:	ror	w15, w12, #31
    48a4:	eor	w12, w2, w4
    48a8:	eor	w13, w13, w16
    48ac:	eor	w12, w12, w16
    48b0:	eor	w14, w10, w7
    48b4:	eor	w10, w4, w18
    48b8:	stp	w4, w2, [sp, #112]
    48bc:	ror	w2, w13, #31
    48c0:	eor	w13, w10, w7
    48c4:	eor	w12, w12, w15
    48c8:	eor	w10, w0, w3
    48cc:	str	w18, [sp, #108]
    48d0:	eor	w10, w10, w15
    48d4:	mov	w18, w15
    48d8:	ror	w4, w14, #31
    48dc:	ror	w15, w12, #31
    48e0:	eor	w12, w3, w6
    48e4:	eor	w13, w13, w2
    48e8:	eor	w12, w12, w2
    48ec:	eor	w14, w11, w4
    48f0:	eor	w11, w6, w1
    48f4:	stp	w6, w3, [sp, #100]
    48f8:	ror	w3, w13, #31
    48fc:	eor	w13, w11, w4
    4900:	eor	w12, w12, w15
    4904:	eor	w11, w5, w16
    4908:	str	w1, [sp, #96]
    490c:	eor	w11, w11, w15
    4910:	mov	w1, w15
    4914:	ror	w6, w14, #31
    4918:	ror	w15, w12, #31
    491c:	eor	w12, w16, w7
    4920:	eor	w13, w13, w3
    4924:	eor	w12, w12, w3
    4928:	eor	w14, w8, w6
    492c:	eor	w8, w7, w17
    4930:	stp	w7, w16, [sp, #88]
    4934:	ror	w16, w13, #31
    4938:	eor	w13, w8, w6
    493c:	eor	w12, w12, w15
    4940:	eor	w8, w18, w2
    4944:	ror	w24, w14, #31
    4948:	str	w17, [sp, #84]
    494c:	eor	w8, w8, w15
    4950:	mov	w17, w15
    4954:	eor	w13, w13, w16
    4958:	ror	w15, w12, #31
    495c:	eor	w12, w2, w4
    4960:	eor	w14, w9, w24
    4964:	eor	w9, w4, w0
    4968:	str	w26, [sp, #128]
    496c:	eor	w12, w12, w16
    4970:	ror	w26, w13, #31
    4974:	eor	w13, w9, w24
    4978:	eor	w12, w12, w15
    497c:	eor	w9, w1, w3
    4980:	eor	w13, w13, w26
    4984:	str	w0, [sp, #72]
    4988:	stp	w4, w2, [sp, #76]
    498c:	eor	w9, w9, w15
    4990:	mov	w0, w15
    4994:	ror	w4, w14, #31
    4998:	ror	w15, w12, #31
    499c:	eor	w12, w3, w6
    49a0:	ror	w23, w13, #31
    49a4:	eor	w13, w6, w5
    49a8:	eor	w12, w12, w26
    49ac:	eor	w10, w10, w4
    49b0:	eor	w13, w13, w4
    49b4:	stp	w6, w3, [sp, #64]
    49b8:	eor	w14, w12, w15
    49bc:	ror	w3, w10, #31
    49c0:	eor	w10, w13, w23
    49c4:	eor	w13, w16, w24
    49c8:	ror	w25, w14, #31
    49cc:	eor	w13, w13, w23
    49d0:	eor	w11, w11, w3
    49d4:	ror	w20, w10, #31
    49d8:	eor	w10, w24, w18
    49dc:	str	w18, [sp, #48]
    49e0:	eor	w10, w10, w3
    49e4:	eor	w14, w13, w25
    49e8:	ror	w18, w11, #31
    49ec:	str	w21, [sp, #120]
    49f0:	eor	w10, w10, w20
    49f4:	ror	w21, w14, #31
    49f8:	eor	w14, w8, w18
    49fc:	eor	w8, w4, w1
    4a00:	eor	w11, w26, w4
    4a04:	ror	w6, w10, #31
    4a08:	eor	w10, w8, w18
    4a0c:	eor	w12, w17, w16
    4a10:	eor	w11, w11, w20
    4a14:	eor	w10, w10, w6
    4a18:	str	w1, [sp, #40]
    4a1c:	stp	w16, w5, [sp, #56]
    4a20:	eor	w12, w12, w15
    4a24:	eor	w16, w11, w21
    4a28:	mov	w11, w15
    4a2c:	str	w15, [sp, #16]
    4a30:	eor	w8, w15, w23
    4a34:	ror	w15, w14, #31
    4a38:	eor	w14, w23, w3
    4a3c:	ror	w1, w10, #31
    4a40:	eor	w10, w3, w17
    4a44:	ror	w2, w16, #31
    4a48:	eor	w14, w14, w6
    4a4c:	eor	w9, w9, w15
    4a50:	eor	w10, w10, w15
    4a54:	stp	w17, w0, [sp, #28]
    4a58:	mov	w5, w0
    4a5c:	eor	w13, w0, w26
    4a60:	eor	w0, w14, w2
    4a64:	ror	w14, w9, #31
    4a68:	eor	w9, w10, w1
    4a6c:	eor	w10, w20, w18
    4a70:	ror	w19, w0, #31
    4a74:	eor	w10, w10, w1
    4a78:	ror	w0, w9, #31
    4a7c:	eor	w9, w18, w5
    4a80:	eor	w12, w12, w14
    4a84:	eor	w9, w9, w14
    4a88:	eor	w10, w10, w19
    4a8c:	ror	w16, w12, #31
    4a90:	eor	w9, w9, w0
    4a94:	ror	w12, w10, #31
    4a98:	eor	w10, w6, w15
    4a9c:	eor	w13, w13, w25
    4aa0:	eor	w10, w10, w0
    4aa4:	ror	w7, w9, #31
    4aa8:	eor	w9, w15, w11
    4aac:	str	w22, [sp, #132]
    4ab0:	eor	w5, w13, w16
    4ab4:	eor	w22, w9, w16
    4ab8:	eor	w10, w10, w12
    4abc:	eor	w8, w8, w21
    4ac0:	ror	w13, w5, #31
    4ac4:	eor	w5, w22, w7
    4ac8:	ror	w9, w10, #31
    4acc:	eor	w10, w1, w14
    4ad0:	eor	w22, w14, w25
    4ad4:	eor	w10, w10, w7
    4ad8:	eor	w8, w8, w13
    4adc:	ror	w5, w5, #31
    4ae0:	eor	w22, w22, w13
    4ae4:	eor	w27, w10, w9
    4ae8:	ror	w17, w8, #31
    4aec:	eor	w8, w22, w5
    4af0:	eor	w22, w0, w16
    4af4:	str	w9, [sp, #44]
    4af8:	ror	w9, w27, #31
    4afc:	eor	w22, w22, w5
    4b00:	ror	w10, w8, #31
    4b04:	eor	w8, w16, w21
    4b08:	eor	w8, w8, w17
    4b0c:	eor	w22, w22, w9
    4b10:	str	w9, [sp, #36]
    4b14:	eor	w9, w8, w10
    4b18:	mov	w8, w10
    4b1c:	str	w10, [sp, #8]
    4b20:	ror	w10, w22, #31
    4b24:	eor	w22, w7, w13
    4b28:	eor	w8, w22, w8
    4b2c:	eor	w8, w8, w10
    4b30:	ror	w22, w9, #31
    4b34:	ror	w9, w8, #31
    4b38:	eor	w8, w5, w17
    4b3c:	eor	w8, w8, w22
    4b40:	eor	w8, w8, w9
    4b44:	ror	w8, w8, #31
    4b48:	add	w8, w30, w8
    4b4c:	str	w9, [sp, #12]
    4b50:	stp	w8, w10, [sp, #20]
    4b54:	ldur	w8, [x29, #-112]
    4b58:	ldp	w9, w10, [x29, #-132]
    4b5c:	str	w12, [sp, #52]
    4b60:	mov	w12, #0x7999                	// #31129
    4b64:	movk	w12, #0x5a82, lsl #16
    4b68:	add	w8, w8, w9
    4b6c:	ldur	w9, [x29, #-120]
    4b70:	add	w9, w9, w12
    4b74:	ror	w30, w9, #27
    4b78:	add	w11, w8, w30
    4b7c:	ldur	w8, [x29, #-124]
    4b80:	add	w30, w28, w10
    4b84:	bic	w10, w10, w9
    4b88:	add	w11, w11, w12
    4b8c:	ror	w8, w8, #2
    4b90:	and	w27, w8, w9
    4b94:	orr	w10, w27, w10
    4b98:	ldur	w27, [x29, #-116]
    4b9c:	ror	w9, w9, #2
    4ba0:	and	w28, w9, w11
    4ba4:	add	w10, w27, w10
    4ba8:	ror	w27, w11, #27
    4bac:	add	w10, w10, w27
    4bb0:	ldur	w27, [x29, #-136]
    4bb4:	add	w10, w10, w12
    4bb8:	add	w27, w27, w8
    4bbc:	bic	w8, w8, w11
    4bc0:	orr	w8, w28, w8
    4bc4:	add	w8, w30, w8
    4bc8:	ror	w28, w10, #27
    4bcc:	add	w8, w8, w28
    4bd0:	ldr	w28, [sp, #128]
    4bd4:	ror	w11, w11, #2
    4bd8:	and	w30, w11, w10
    4bdc:	add	w8, w8, w12
    4be0:	add	w28, w28, w9
    4be4:	bic	w9, w9, w10
    4be8:	orr	w9, w30, w9
    4bec:	add	w9, w27, w9
    4bf0:	ror	w27, w8, #27
    4bf4:	add	w9, w9, w27
    4bf8:	ldr	w27, [sp, #132]
    4bfc:	ror	w10, w10, #2
    4c00:	and	w30, w10, w8
    4c04:	add	w9, w9, w12
    4c08:	add	w27, w27, w11
    4c0c:	bic	w11, w11, w8
    4c10:	orr	w11, w30, w11
    4c14:	add	w11, w28, w11
    4c18:	ror	w28, w9, #27
    4c1c:	add	w11, w11, w28
    4c20:	ldr	w28, [sp, #144]
    4c24:	ror	w8, w8, #2
    4c28:	and	w30, w8, w9
    4c2c:	add	w11, w11, w12
    4c30:	add	w28, w28, w10
    4c34:	bic	w10, w10, w9
    4c38:	orr	w10, w30, w10
    4c3c:	add	w10, w27, w10
    4c40:	ror	w27, w11, #27
    4c44:	add	w10, w10, w27
    4c48:	ldr	w27, [sp, #140]
    4c4c:	ror	w9, w9, #2
    4c50:	and	w30, w9, w11
    4c54:	add	w10, w10, w12
    4c58:	add	w27, w27, w8
    4c5c:	bic	w8, w8, w11
    4c60:	orr	w8, w30, w8
    4c64:	add	w8, w28, w8
    4c68:	ror	w28, w10, #27
    4c6c:	add	w8, w8, w28
    4c70:	ldr	w28, [sp, #120]
    4c74:	ror	w11, w11, #2
    4c78:	and	w30, w11, w10
    4c7c:	add	w8, w8, w12
    4c80:	add	w28, w28, w9
    4c84:	bic	w9, w9, w10
    4c88:	orr	w9, w30, w9
    4c8c:	add	w9, w27, w9
    4c90:	ror	w27, w8, #27
    4c94:	add	w9, w9, w27
    4c98:	ldur	w27, [x29, #-140]
    4c9c:	ror	w10, w10, #2
    4ca0:	and	w30, w10, w8
    4ca4:	add	w9, w9, w12
    4ca8:	add	w27, w27, w11
    4cac:	bic	w11, w11, w8
    4cb0:	orr	w11, w30, w11
    4cb4:	add	w11, w28, w11
    4cb8:	ror	w28, w9, #27
    4cbc:	add	w11, w11, w28
    4cc0:	ldr	w28, [sp, #124]
    4cc4:	mov	w12, #0x7999                	// #31129
    4cc8:	movk	w12, #0x5a82, lsl #16
    4ccc:	ror	w8, w8, #2
    4cd0:	add	w11, w11, w12
    4cd4:	ldr	w12, [sp, #108]
    4cd8:	add	w28, w28, w10
    4cdc:	eor	w10, w8, w10
    4ce0:	eor	w10, w10, w9
    4ce4:	add	w10, w27, w10
    4ce8:	ror	w27, w11, #27
    4cec:	ror	w9, w9, #2
    4cf0:	add	w10, w10, w27
    4cf4:	add	w27, w12, w8
    4cf8:	eor	w8, w9, w8
    4cfc:	eor	w8, w8, w11
    4d00:	add	w28, w28, w8
    4d04:	mov	w8, #0xeba1                	// #60321
    4d08:	ldr	w12, [sp, #136]
    4d0c:	movk	w8, #0x6ed9, lsl #16
    4d10:	add	w10, w10, w8
    4d14:	ror	w30, w10, #27
    4d18:	ror	w11, w11, #2
    4d1c:	add	w28, w28, w30
    4d20:	add	w30, w12, w9
    4d24:	eor	w9, w11, w9
    4d28:	ldr	w12, [sp, #112]
    4d2c:	eor	w9, w9, w10
    4d30:	add	w9, w27, w9
    4d34:	add	w27, w28, w8
    4d38:	ror	w28, w27, #27
    4d3c:	add	w9, w9, w28
    4d40:	add	w28, w12, w11
    4d44:	ror	w10, w10, #2
    4d48:	ldr	w12, [sp, #96]
    4d4c:	eor	w11, w10, w11
    4d50:	eor	w11, w11, w27
    4d54:	add	w9, w9, w8
    4d58:	add	w11, w30, w11
    4d5c:	ror	w30, w9, #27
    4d60:	add	w11, w11, w30
    4d64:	add	w30, w12, w10
    4d68:	ror	w27, w27, #2
    4d6c:	ldr	w12, [sp, #116]
    4d70:	eor	w10, w27, w10
    4d74:	eor	w10, w10, w9
    4d78:	add	w11, w11, w8
    4d7c:	add	w10, w28, w10
    4d80:	ror	w28, w11, #27
    4d84:	add	w10, w10, w28
    4d88:	add	w28, w12, w27
    4d8c:	ror	w9, w9, #2
    4d90:	ldr	w12, [sp, #100]
    4d94:	eor	w27, w9, w27
    4d98:	eor	w27, w27, w11
    4d9c:	add	w10, w10, w8
    4da0:	add	w27, w30, w27
    4da4:	ror	w30, w10, #27
    4da8:	add	w27, w27, w30
    4dac:	add	w30, w12, w9
    4db0:	ror	w11, w11, #2
    4db4:	ldr	w12, [sp, #84]
    4db8:	eor	w9, w11, w9
    4dbc:	eor	w9, w9, w10
    4dc0:	add	w27, w27, w8
    4dc4:	add	w9, w28, w9
    4dc8:	ror	w28, w27, #27
    4dcc:	add	w9, w9, w28
    4dd0:	add	w28, w12, w11
    4dd4:	ror	w10, w10, #2
    4dd8:	ldr	w12, [sp, #104]
    4ddc:	eor	w11, w10, w11
    4de0:	eor	w11, w11, w27
    4de4:	add	w9, w9, w8
    4de8:	add	w11, w30, w11
    4dec:	ror	w30, w9, #27
    4df0:	add	w11, w11, w30
    4df4:	add	w30, w12, w10
    4df8:	ror	w27, w27, #2
    4dfc:	ldr	w12, [sp, #88]
    4e00:	eor	w10, w27, w10
    4e04:	eor	w10, w10, w9
    4e08:	add	w11, w11, w8
    4e0c:	add	w10, w28, w10
    4e10:	ror	w28, w11, #27
    4e14:	add	w10, w10, w28
    4e18:	add	w28, w12, w27
    4e1c:	ror	w9, w9, #2
    4e20:	ldr	w12, [sp, #72]
    4e24:	eor	w27, w9, w27
    4e28:	eor	w27, w27, w11
    4e2c:	add	w10, w10, w8
    4e30:	add	w27, w30, w27
    4e34:	ror	w30, w10, #27
    4e38:	add	w27, w27, w30
    4e3c:	add	w30, w12, w9
    4e40:	ror	w11, w11, #2
    4e44:	ldr	w12, [sp, #92]
    4e48:	eor	w9, w11, w9
    4e4c:	eor	w9, w9, w10
    4e50:	add	w27, w27, w8
    4e54:	add	w9, w28, w9
    4e58:	ror	w28, w27, #27
    4e5c:	add	w9, w9, w28
    4e60:	add	w28, w12, w11
    4e64:	ror	w10, w10, #2
    4e68:	ldr	w12, [sp, #76]
    4e6c:	eor	w11, w10, w11
    4e70:	eor	w11, w11, w27
    4e74:	add	w9, w9, w8
    4e78:	add	w11, w30, w11
    4e7c:	ror	w30, w9, #27
    4e80:	add	w11, w11, w30
    4e84:	add	w30, w12, w10
    4e88:	ror	w27, w27, #2
    4e8c:	ldr	w12, [sp, #60]
    4e90:	eor	w10, w27, w10
    4e94:	eor	w10, w10, w9
    4e98:	add	w11, w11, w8
    4e9c:	add	w10, w28, w10
    4ea0:	ror	w28, w11, #27
    4ea4:	add	w10, w10, w28
    4ea8:	add	w28, w12, w27
    4eac:	ror	w9, w9, #2
    4eb0:	ldr	w12, [sp, #80]
    4eb4:	eor	w27, w9, w27
    4eb8:	eor	w27, w27, w11
    4ebc:	add	w10, w10, w8
    4ec0:	add	w27, w30, w27
    4ec4:	ror	w30, w10, #27
    4ec8:	add	w27, w27, w30
    4ecc:	add	w30, w12, w9
    4ed0:	ror	w11, w11, #2
    4ed4:	ldr	w12, [sp, #64]
    4ed8:	eor	w9, w11, w9
    4edc:	eor	w9, w9, w10
    4ee0:	add	w27, w27, w8
    4ee4:	add	w9, w28, w9
    4ee8:	ror	w28, w27, #27
    4eec:	add	w9, w9, w28
    4ef0:	add	w28, w12, w11
    4ef4:	ror	w10, w10, #2
    4ef8:	ldr	w12, [sp, #48]
    4efc:	eor	w11, w10, w11
    4f00:	eor	w11, w11, w27
    4f04:	add	w9, w9, w8
    4f08:	add	w11, w30, w11
    4f0c:	ror	w30, w9, #27
    4f10:	add	w11, w11, w30
    4f14:	add	w30, w12, w10
    4f18:	ror	w27, w27, #2
    4f1c:	ldr	w12, [sp, #68]
    4f20:	eor	w10, w27, w10
    4f24:	eor	w10, w10, w9
    4f28:	add	w11, w11, w8
    4f2c:	add	w10, w28, w10
    4f30:	ror	w28, w11, #27
    4f34:	ror	w9, w9, #2
    4f38:	add	w10, w10, w28
    4f3c:	add	w28, w12, w27
    4f40:	eor	w27, w9, w27
    4f44:	eor	w27, w27, w11
    4f48:	add	w10, w10, w8
    4f4c:	add	w27, w30, w27
    4f50:	ror	w30, w10, #27
    4f54:	ror	w11, w11, #2
    4f58:	ldr	w12, [sp, #40]
    4f5c:	add	w27, w27, w30
    4f60:	add	w24, w24, w9
    4f64:	eor	w9, w11, w9
    4f68:	eor	w9, w9, w10
    4f6c:	add	w27, w27, w8
    4f70:	add	w9, w28, w9
    4f74:	ror	w28, w27, #27
    4f78:	ror	w10, w10, #2
    4f7c:	add	w9, w9, w28
    4f80:	add	w28, w12, w11
    4f84:	eor	w11, w10, w11
    4f88:	ldr	w12, [sp, #56]
    4f8c:	eor	w11, w11, w27
    4f90:	add	w9, w9, w8
    4f94:	add	w11, w24, w11
    4f98:	ror	w24, w9, #27
    4f9c:	ror	w27, w27, #2
    4fa0:	add	w11, w11, w24
    4fa4:	orr	w30, w9, w27
    4fa8:	add	w24, w12, w10
    4fac:	and	w10, w30, w10
    4fb0:	add	w8, w11, w8
    4fb4:	and	w11, w9, w27
    4fb8:	orr	w10, w10, w11
    4fbc:	add	w10, w28, w10
    4fc0:	ror	w11, w8, #27
    4fc4:	ror	w9, w9, #2
    4fc8:	add	w10, w10, w11
    4fcc:	add	w11, w4, w27
    4fd0:	orr	w4, w8, w9
    4fd4:	and	w4, w4, w27
    4fd8:	and	w27, w8, w9
    4fdc:	orr	w4, w4, w27
    4fe0:	add	w24, w24, w4
    4fe4:	mov	w4, #0xbcdc                	// #48348
    4fe8:	ldr	w12, [sp, #28]
    4fec:	movk	w4, #0x8f1b, lsl #16
    4ff0:	add	w10, w10, w4
    4ff4:	ror	w8, w8, #2
    4ff8:	ror	w27, w10, #27
    4ffc:	orr	w28, w10, w8
    5000:	add	w24, w24, w27
    5004:	add	w27, w12, w9
    5008:	and	w9, w28, w9
    500c:	and	w28, w10, w8
    5010:	orr	w9, w9, w28
    5014:	add	w9, w11, w9
    5018:	add	w11, w24, w4
    501c:	ror	w24, w11, #27
    5020:	ror	w10, w10, #2
    5024:	add	w9, w9, w24
    5028:	add	w24, w26, w8
    502c:	orr	w26, w11, w10
    5030:	and	w8, w26, w8
    5034:	and	w26, w11, w10
    5038:	orr	w8, w8, w26
    503c:	add	w9, w9, w4
    5040:	add	w8, w27, w8
    5044:	ror	w26, w9, #27
    5048:	ror	w11, w11, #2
    504c:	add	w8, w8, w26
    5050:	orr	w26, w9, w11
    5054:	ldr	w12, [sp, #32]
    5058:	add	w3, w3, w10
    505c:	and	w10, w26, w10
    5060:	and	w26, w9, w11
    5064:	orr	w10, w10, w26
    5068:	add	w8, w8, w4
    506c:	ror	w9, w9, #2
    5070:	add	w10, w24, w10
    5074:	ror	w24, w8, #27
    5078:	orr	w26, w8, w9
    507c:	add	w10, w10, w24
    5080:	add	w24, w12, w11
    5084:	and	w11, w26, w11
    5088:	and	w26, w8, w9
    508c:	orr	w11, w11, w26
    5090:	add	w10, w10, w4
    5094:	add	w11, w3, w11
    5098:	ror	w3, w10, #27
    509c:	ror	w8, w8, #2
    50a0:	add	w11, w11, w3
    50a4:	add	w3, w23, w9
    50a8:	orr	w23, w10, w8
    50ac:	and	w9, w23, w9
    50b0:	and	w23, w10, w8
    50b4:	orr	w9, w9, w23
    50b8:	add	w11, w11, w4
    50bc:	add	w9, w24, w9
    50c0:	ror	w23, w11, #27
    50c4:	ror	w10, w10, #2
    50c8:	add	w9, w9, w23
    50cc:	orr	w23, w11, w10
    50d0:	ldr	w12, [sp, #16]
    50d4:	add	w18, w18, w8
    50d8:	and	w8, w23, w8
    50dc:	and	w23, w11, w10
    50e0:	orr	w8, w8, w23
    50e4:	add	w9, w9, w4
    50e8:	ror	w11, w11, #2
    50ec:	add	w8, w3, w8
    50f0:	ror	w3, w9, #27
    50f4:	orr	w23, w9, w11
    50f8:	add	w8, w8, w3
    50fc:	add	w3, w12, w10
    5100:	and	w10, w23, w10
    5104:	and	w23, w9, w11
    5108:	orr	w10, w10, w23
    510c:	add	w8, w8, w4
    5110:	add	w10, w18, w10
    5114:	ror	w18, w8, #27
    5118:	ror	w9, w9, #2
    511c:	add	w10, w10, w18
    5120:	orr	w18, w8, w9
    5124:	and	w18, w18, w11
    5128:	and	w23, w8, w9
    512c:	orr	w18, w18, w23
    5130:	add	w10, w10, w4
    5134:	add	w18, w3, w18
    5138:	ror	w3, w10, #27
    513c:	ror	w8, w8, #2
    5140:	add	w18, w18, w3
    5144:	orr	w3, w10, w8
    5148:	add	w15, w15, w9
    514c:	and	w9, w3, w9
    5150:	and	w3, w10, w8
    5154:	orr	w9, w9, w3
    5158:	add	w11, w20, w11
    515c:	add	w9, w11, w9
    5160:	add	w11, w18, w4
    5164:	ror	w18, w11, #27
    5168:	ror	w10, w10, #2
    516c:	add	w9, w9, w18
    5170:	eor	w18, w25, w20
    5174:	orr	w20, w11, w10
    5178:	add	w3, w25, w8
    517c:	and	w8, w20, w8
    5180:	and	w20, w11, w10
    5184:	orr	w8, w8, w20
    5188:	add	w9, w9, w4
    518c:	add	w8, w15, w8
    5190:	ror	w15, w9, #27
    5194:	ror	w11, w11, #2
    5198:	add	w8, w8, w15
    519c:	orr	w15, w9, w11
    51a0:	and	w15, w15, w10
    51a4:	and	w20, w9, w11
    51a8:	orr	w15, w15, w20
    51ac:	add	w8, w8, w4
    51b0:	add	w15, w3, w15
    51b4:	ror	w3, w8, #27
    51b8:	ror	w9, w9, #2
    51bc:	add	w15, w15, w3
    51c0:	orr	w3, w8, w9
    51c4:	add	w14, w14, w11
    51c8:	and	w11, w3, w11
    51cc:	and	w3, w8, w9
    51d0:	orr	w11, w11, w3
    51d4:	add	w10, w6, w10
    51d8:	add	w10, w10, w11
    51dc:	add	w11, w15, w4
    51e0:	ror	w15, w11, #27
    51e4:	ror	w8, w8, #2
    51e8:	add	w10, w10, w15
    51ec:	eor	w15, w21, w6
    51f0:	orr	w6, w11, w8
    51f4:	add	w3, w21, w9
    51f8:	and	w9, w6, w9
    51fc:	and	w6, w11, w8
    5200:	orr	w9, w9, w6
    5204:	add	w10, w10, w4
    5208:	add	w9, w14, w9
    520c:	ror	w14, w10, #27
    5210:	ror	w11, w11, #2
    5214:	add	w9, w9, w14
    5218:	orr	w14, w10, w11
    521c:	and	w14, w14, w8
    5220:	and	w6, w10, w11
    5224:	orr	w14, w14, w6
    5228:	add	w9, w9, w4
    522c:	add	w14, w3, w14
    5230:	ror	w3, w9, #27
    5234:	ror	w10, w10, #2
    5238:	add	w14, w14, w3
    523c:	orr	w3, w9, w10
    5240:	add	w16, w16, w11
    5244:	and	w11, w3, w11
    5248:	and	w3, w9, w10
    524c:	orr	w11, w11, w3
    5250:	add	w8, w1, w8
    5254:	add	w14, w14, w4
    5258:	ror	w9, w9, #2
    525c:	add	w8, w8, w11
    5260:	ror	w11, w14, #27
    5264:	add	w8, w8, w11
    5268:	orr	w11, w14, w9
    526c:	and	w11, w11, w10
    5270:	and	w3, w14, w9
    5274:	orr	w11, w11, w3
    5278:	add	w8, w8, w4
    527c:	ror	w14, w14, #2
    5280:	add	w11, w16, w11
    5284:	ror	w16, w8, #27
    5288:	add	w11, w11, w16
    528c:	orr	w16, w8, w14
    5290:	and	w16, w16, w9
    5294:	and	w3, w8, w14
    5298:	orr	w16, w16, w3
    529c:	add	w10, w2, w10
    52a0:	add	w11, w11, w4
    52a4:	ror	w8, w8, #2
    52a8:	add	w10, w10, w16
    52ac:	ror	w16, w11, #27
    52b0:	add	w10, w10, w16
    52b4:	orr	w16, w11, w8
    52b8:	eor	w18, w18, w2
    52bc:	eor	w1, w2, w1
    52c0:	eor	w2, w13, w2
    52c4:	add	w13, w13, w14
    52c8:	and	w14, w16, w14
    52cc:	and	w16, w11, w8
    52d0:	orr	w14, w14, w16
    52d4:	add	w9, w0, w9
    52d8:	add	w10, w10, w4
    52dc:	ror	w11, w11, #2
    52e0:	add	w9, w9, w14
    52e4:	ror	w14, w10, #27
    52e8:	add	w14, w9, w14
    52ec:	eor	w9, w11, w8
    52f0:	eor	w9, w9, w10
    52f4:	add	w14, w14, w4
    52f8:	add	w13, w13, w9
    52fc:	mov	w9, #0xc1d6                	// #49622
    5300:	ror	w10, w10, #2
    5304:	ror	w16, w14, #27
    5308:	movk	w9, #0xca62, lsl #16
    530c:	add	w13, w13, w16
    5310:	eor	w16, w10, w11
    5314:	add	w8, w19, w8
    5318:	eor	w16, w16, w14
    531c:	add	w13, w13, w9
    5320:	add	w8, w8, w16
    5324:	ror	w16, w13, #27
    5328:	ror	w14, w14, #2
    532c:	ldr	w3, [sp, #52]
    5330:	add	w8, w8, w16
    5334:	add	w12, w17, w10
    5338:	eor	w10, w14, w10
    533c:	add	w11, w7, w11
    5340:	eor	w10, w10, w13
    5344:	add	w8, w8, w9
    5348:	add	w10, w11, w10
    534c:	ror	w11, w8, #27
    5350:	ror	w13, w13, #2
    5354:	add	w10, w10, w11
    5358:	eor	w11, w1, w3
    535c:	add	w1, w3, w14
    5360:	eor	w14, w13, w14
    5364:	eor	w14, w14, w8
    5368:	add	w10, w10, w9
    536c:	add	w12, w12, w14
    5370:	ror	w14, w10, #27
    5374:	ror	w8, w8, #2
    5378:	add	w12, w12, w14
    537c:	add	w14, w5, w13
    5380:	eor	w13, w8, w13
    5384:	eor	w18, w18, w17
    5388:	eor	w13, w13, w10
    538c:	add	w12, w12, w9
    5390:	add	w13, w1, w13
    5394:	ror	w1, w12, #27
    5398:	ror	w18, w18, #31
    539c:	eor	w15, w15, w19
    53a0:	add	w13, w13, w1
    53a4:	eor	w1, w2, w18
    53a8:	ror	w10, w10, #2
    53ac:	ldr	w2, [sp, #44]
    53b0:	eor	w15, w15, w18
    53b4:	add	w18, w18, w8
    53b8:	eor	w8, w10, w8
    53bc:	eor	w8, w8, w12
    53c0:	add	w13, w13, w9
    53c4:	eor	w16, w19, w0
    53c8:	add	w8, w14, w8
    53cc:	ror	w14, w13, #27
    53d0:	ror	w12, w12, #2
    53d4:	add	w8, w8, w14
    53d8:	eor	w14, w16, w2
    53dc:	add	w16, w2, w10
    53e0:	eor	w10, w12, w10
    53e4:	eor	w10, w10, w13
    53e8:	add	w8, w8, w9
    53ec:	add	w10, w18, w10
    53f0:	ror	w18, w8, #27
    53f4:	add	w10, w10, w18
    53f8:	ldr	w18, [sp, #8]
    53fc:	ror	w13, w13, #2
    5400:	add	w10, w10, w9
    5404:	eor	w0, w17, w19
    5408:	add	w18, w18, w12
    540c:	eor	w12, w13, w12
    5410:	eor	w12, w12, w8
    5414:	add	w12, w16, w12
    5418:	ror	w16, w10, #27
    541c:	ror	w15, w15, #31
    5420:	ror	w8, w8, #2
    5424:	add	w12, w12, w16
    5428:	eor	w11, w11, w15
    542c:	eor	w16, w0, w15
    5430:	add	w15, w15, w13
    5434:	eor	w13, w8, w13
    5438:	eor	w13, w13, w10
    543c:	add	w12, w12, w9
    5440:	add	w13, w18, w13
    5444:	ror	w18, w12, #27
    5448:	add	w13, w13, w18
    544c:	ldr	w18, [sp, #36]
    5450:	eor	w17, w3, w7
    5454:	ror	w10, w10, #2
    5458:	add	w13, w13, w9
    545c:	eor	w17, w17, w18
    5460:	add	w18, w18, w8
    5464:	eor	w8, w10, w8
    5468:	eor	w8, w8, w12
    546c:	add	w8, w15, w8
    5470:	ror	w15, w13, #27
    5474:	ror	w12, w12, #2
    5478:	add	w8, w8, w15
    547c:	add	w0, w22, w10
    5480:	eor	w10, w12, w10
    5484:	eor	w10, w10, w13
    5488:	add	w8, w8, w9
    548c:	add	w10, w18, w10
    5490:	ror	w18, w8, #27
    5494:	ror	w11, w11, #31
    5498:	ror	w13, w13, #2
    549c:	add	w10, w10, w18
    54a0:	eor	w14, w14, w11
    54a4:	add	w11, w11, w12
    54a8:	eor	w12, w13, w12
    54ac:	eor	w12, w12, w8
    54b0:	add	w10, w10, w9
    54b4:	add	w12, w0, w12
    54b8:	ror	w18, w10, #27
    54bc:	add	w12, w12, w18
    54c0:	ldr	w18, [sp, #24]
    54c4:	ror	w8, w8, #2
    54c8:	add	w12, w12, w9
    54cc:	eor	w15, w1, w22
    54d0:	add	w18, w18, w13
    54d4:	eor	w13, w8, w13
    54d8:	eor	w13, w13, w10
    54dc:	add	w11, w11, w13
    54e0:	ror	w13, w12, #27
    54e4:	add	w11, w11, w13
    54e8:	ror	w13, w15, #31
    54ec:	ror	w10, w10, #2
    54f0:	eor	w15, w16, w13
    54f4:	add	w13, w13, w8
    54f8:	eor	w8, w10, w8
    54fc:	eor	w8, w8, w12
    5500:	add	w11, w11, w9
    5504:	add	w8, w18, w8
    5508:	ror	w16, w11, #27
    550c:	ror	w14, w14, #31
    5510:	ror	w12, w12, #2
    5514:	add	w8, w8, w16
    5518:	eor	w16, w17, w14
    551c:	add	w14, w14, w10
    5520:	eor	w10, w12, w10
    5524:	eor	w10, w10, w11
    5528:	add	w8, w8, w9
    552c:	add	w10, w13, w10
    5530:	ror	w13, w8, #27
    5534:	add	w10, w10, w13
    5538:	ldr	w13, [sp, #12]
    553c:	ror	w11, w11, #2
    5540:	add	w10, w10, w9
    5544:	add	w13, w13, w12
    5548:	eor	w12, w11, w12
    554c:	eor	w12, w12, w8
    5550:	add	w12, w14, w12
    5554:	ror	w14, w10, #27
    5558:	add	w12, w12, w14
    555c:	ror	w14, w15, #31
    5560:	ror	w8, w8, #2
    5564:	add	w14, w14, w11
    5568:	eor	w11, w8, w11
    556c:	eor	w11, w11, w10
    5570:	add	w12, w12, w9
    5574:	add	w11, w13, w11
    5578:	ror	w13, w12, #27
    557c:	add	w11, w11, w13
    5580:	ror	w13, w16, #31
    5584:	ror	w10, w10, #2
    5588:	add	w13, w13, w8
    558c:	eor	w8, w10, w8
    5590:	eor	w8, w8, w12
    5594:	add	w8, w14, w8
    5598:	ldur	w14, [x29, #-100]
    559c:	ldur	x15, [x29, #-96]
    55a0:	ror	w12, w12, #2
    55a4:	add	w11, w11, w9
    55a8:	add	w14, w12, w14
    55ac:	str	w14, [x15, #32]
    55b0:	ror	w14, w11, #27
    55b4:	add	w8, w8, w14
    55b8:	ldr	w14, [sp, #20]
    55bc:	add	w8, w8, w9
    55c0:	add	w14, w14, w10
    55c4:	eor	w10, w12, w10
    55c8:	eor	w10, w10, w11
    55cc:	add	w10, w13, w10
    55d0:	ldur	w13, [x29, #-104]
    55d4:	ror	w11, w11, #2
    55d8:	eor	w12, w11, w12
    55dc:	eor	w12, w12, w8
    55e0:	add	w11, w11, w13
    55e4:	ror	w13, w8, #27
    55e8:	add	w10, w10, w13
    55ec:	ldur	w13, [x29, #-108]
    55f0:	ror	w8, w8, #2
    55f4:	add	w12, w14, w12
    55f8:	add	w8, w8, w13
    55fc:	stp	w8, w11, [x15, #24]
    5600:	add	w8, w10, w9
    5604:	ldur	w10, [x29, #-84]
    5608:	mov	x13, x15
    560c:	add	w10, w8, w10
    5610:	ror	w8, w8, #27
    5614:	add	w8, w12, w8
    5618:	add	w8, w8, w9
    561c:	stp	w8, w10, [x15, #16]
    5620:	adrp	x9, 18000 <boot_Digest__SHA@@Base+0x170cc>
    5624:	ldur	x8, [x29, #-16]
    5628:	ldr	x9, [x9, #4056]
    562c:	ldr	x9, [x9]
    5630:	cmp	x9, x8
    5634:	b.ne	5658 <boot_Digest__SHA@@Base+0x4724>  // b.any
    5638:	ldp	x20, x19, [sp, #368]
    563c:	ldp	x22, x21, [sp, #352]
    5640:	ldp	x24, x23, [sp, #336]
    5644:	ldp	x26, x25, [sp, #320]
    5648:	ldp	x28, x27, [sp, #304]
    564c:	ldp	x29, x30, [sp, #288]
    5650:	add	sp, sp, #0x180
    5654:	ret
    5658:	bl	d80 <__stack_chk_fail@plt>
    565c:	sub	sp, sp, #0x180
    5660:	stp	x29, x30, [sp, #288]
    5664:	stp	x28, x27, [sp, #304]
    5668:	stp	x26, x25, [sp, #320]
    566c:	stp	x24, x23, [sp, #336]
    5670:	stp	x22, x21, [sp, #352]
    5674:	stp	x20, x19, [sp, #368]
    5678:	adrp	x8, 18000 <boot_Digest__SHA@@Base+0x170cc>
    567c:	ldr	x8, [x8, #4056]
    5680:	add	x29, sp, #0x120
    5684:	ldr	x8, [x8]
    5688:	stur	x8, [x29, #-16]
    568c:	ldr	w8, [x1]
    5690:	rev	w8, w8
    5694:	stur	w8, [x29, #-80]
    5698:	ldr	w8, [x1, #4]
    569c:	rev	w8, w8
    56a0:	stur	w8, [x29, #-76]
    56a4:	ldr	w8, [x1, #8]
    56a8:	ldp	w13, w9, [x29, #-80]
    56ac:	rev	w8, w8
    56b0:	stur	w8, [x29, #-72]
    56b4:	ldr	w8, [x1, #12]
    56b8:	ror	w10, w9, #18
    56bc:	eor	w10, w10, w9, lsr #3
    56c0:	eor	w10, w10, w9, ror #7
    56c4:	rev	w8, w8
    56c8:	stur	w8, [x29, #-68]
    56cc:	ldr	w8, [x1, #16]
    56d0:	ldp	w17, w12, [x29, #-72]
    56d4:	add	w18, w10, w13
    56d8:	rev	w8, w8
    56dc:	stur	w8, [x29, #-64]
    56e0:	ldr	w8, [x1, #20]
    56e4:	ror	w14, w17, #18
    56e8:	eor	w14, w14, w17, lsr #3
    56ec:	eor	w14, w14, w17, ror #7
    56f0:	rev	w8, w8
    56f4:	stur	w8, [x29, #-60]
    56f8:	ldr	w8, [x1, #24]
    56fc:	add	w6, w14, w9
    5700:	ror	w14, w12, #18
    5704:	eor	w14, w14, w12, lsr #3
    5708:	rev	w8, w8
    570c:	stur	w8, [x29, #-56]
    5710:	stur	w8, [x29, #-112]
    5714:	ldr	w8, [x1, #28]
    5718:	eor	w4, w14, w12, ror #7
    571c:	add	w4, w4, w17
    5720:	rev	w3, w8
    5724:	ldr	w8, [x1, #32]
    5728:	rev	w28, w8
    572c:	stp	w3, w28, [x29, #-52]
    5730:	ldp	w8, w16, [x1, #36]
    5734:	stur	w12, [x29, #-108]
    5738:	stur	x0, [x29, #-120]
    573c:	rev	w15, w8
    5740:	rev	w8, w16
    5744:	stp	w15, w8, [x29, #-44]
    5748:	stp	w8, w9, [x29, #-104]
    574c:	ldr	w2, [x1, #44]
    5750:	ldp	w11, w9, [x29, #-64]
    5754:	add	w18, w18, w15
    5758:	mov	w16, w8
    575c:	rev	w30, w2
    5760:	ldr	w2, [x1, #48]
    5764:	str	w9, [sp, #68]
    5768:	ror	w5, w9, #18
    576c:	add	w4, w4, w30
    5770:	rev	w14, w2
    5774:	stp	w30, w14, [x29, #-36]
    5778:	ldr	w2, [x1, #52]
    577c:	eor	w5, w5, w9, lsr #3
    5780:	eor	w5, w5, w9, ror #7
    5784:	add	w6, w6, w8
    5788:	rev	w25, w2
    578c:	ldr	w2, [x1, #56]
    5790:	add	w5, w5, w11
    5794:	add	w5, w5, w25
    5798:	mov	w8, w3
    579c:	rev	w10, w2
    57a0:	stp	w25, w10, [x29, #-28]
    57a4:	ror	w2, w10, #19
    57a8:	ldr	w1, [x1, #60]
    57ac:	eor	w2, w2, w10, lsr #10
    57b0:	eor	w2, w2, w10, ror #17
    57b4:	add	w27, w18, w2
    57b8:	ror	w18, w27, #19
    57bc:	rev	w24, w1
    57c0:	eor	w18, w18, w27, lsr #10
    57c4:	stur	w24, [x29, #-20]
    57c8:	ror	w1, w24, #19
    57cc:	eor	w18, w18, w27, ror #17
    57d0:	ldp	w22, w21, [x0, #40]
    57d4:	eor	w1, w1, w24, lsr #10
    57d8:	add	w16, w4, w18
    57dc:	eor	w18, w1, w24, ror #17
    57e0:	ror	w1, w16, #19
    57e4:	add	w26, w6, w18
    57e8:	eor	w18, w1, w16, lsr #10
    57ec:	mov	x2, x0
    57f0:	ldp	w7, w19, [x0, #16]
    57f4:	ldp	w23, w20, [x0, #32]
    57f8:	stp	w22, w21, [x29, #-128]
    57fc:	stp	w10, w24, [x29, #-88]
    5800:	eor	w18, w18, w16, ror #17
    5804:	stur	w16, [x29, #-92]
    5808:	add	w6, w5, w18
    580c:	ldp	w4, w5, [x2, #24]
    5810:	bic	w0, w22, w23
    5814:	and	w1, w20, w23
    5818:	orr	w18, w19, w7
    581c:	orr	w0, w1, w0
    5820:	and	w18, w4, w18
    5824:	and	w1, w19, w7
    5828:	orr	w18, w18, w1
    582c:	ror	w1, w11, #18
    5830:	eor	w1, w1, w11, lsr #3
    5834:	eor	w1, w1, w11, ror #7
    5838:	ror	w2, w26, #19
    583c:	add	w1, w1, w12
    5840:	eor	w2, w2, w26, lsr #10
    5844:	add	w1, w1, w14
    5848:	eor	w2, w2, w26, ror #17
    584c:	str	w11, [sp, #76]
    5850:	add	w11, w1, w2
    5854:	ror	w1, w7, #2
    5858:	eor	w1, w1, w7, ror #13
    585c:	eor	w1, w1, w7, ror #22
    5860:	add	w18, w18, w1
    5864:	ror	w1, w23, #6
    5868:	eor	w1, w1, w23, ror #11
    586c:	eor	w1, w1, w23, ror #25
    5870:	add	w1, w21, w1
    5874:	add	w13, w1, w13
    5878:	ror	w1, w3, #18
    587c:	eor	w1, w1, w3, lsr #3
    5880:	eor	w1, w1, w3, ror #7
    5884:	str	w3, [sp, #52]
    5888:	ldur	w3, [x29, #-112]
    588c:	add	w13, w13, w0
    5890:	mov	w0, #0x2f98                	// #12184
    5894:	ror	w2, w6, #19
    5898:	movk	w0, #0x428a, lsl #16
    589c:	add	w1, w1, w3
    58a0:	eor	w2, w2, w6, lsr #10
    58a4:	add	w13, w13, w0
    58a8:	ror	w0, w3, #18
    58ac:	add	w1, w1, w24
    58b0:	eor	w2, w2, w6, ror #17
    58b4:	eor	w0, w0, w3, lsr #3
    58b8:	stur	w6, [x29, #-96]
    58bc:	add	w6, w1, w2
    58c0:	eor	w0, w0, w3, ror #7
    58c4:	ror	w1, w11, #19
    58c8:	add	w0, w0, w9
    58cc:	eor	w1, w1, w11, lsr #10
    58d0:	add	w0, w0, w10
    58d4:	eor	w1, w1, w11, ror #17
    58d8:	add	w21, w0, w1
    58dc:	ror	w0, w15, #18
    58e0:	eor	w0, w0, w15, lsr #3
    58e4:	eor	w0, w0, w15, ror #7
    58e8:	ror	w1, w6, #19
    58ec:	add	w0, w0, w28
    58f0:	eor	w1, w1, w6, lsr #10
    58f4:	ldur	w10, [x29, #-100]
    58f8:	add	w0, w0, w26
    58fc:	eor	w1, w1, w6, ror #17
    5900:	add	w3, w0, w1
    5904:	add	w0, w13, w5
    5908:	add	w18, w18, w13
    590c:	bic	w13, w20, w0
    5910:	and	w1, w23, w0
    5914:	orr	w13, w1, w13
    5918:	add	w12, w22, w10
    591c:	add	w12, w12, w13
    5920:	orr	w13, w18, w7
    5924:	and	w13, w13, w19
    5928:	and	w1, w18, w7
    592c:	orr	w13, w13, w1
    5930:	ror	w1, w28, #18
    5934:	eor	w1, w1, w28, lsr #3
    5938:	eor	w1, w1, w28, ror #7
    593c:	ror	w2, w21, #19
    5940:	add	w1, w1, w8
    5944:	eor	w2, w2, w21, lsr #10
    5948:	add	w1, w1, w27
    594c:	eor	w2, w2, w21, ror #17
    5950:	stur	w5, [x29, #-132]
    5954:	add	w5, w1, w2
    5958:	ror	w1, w0, #6
    595c:	eor	w1, w1, w0, ror #11
    5960:	eor	w1, w1, w0, ror #25
    5964:	add	w12, w12, w1
    5968:	ror	w1, w18, #2
    596c:	eor	w1, w1, w18, ror #13
    5970:	eor	w1, w1, w18, ror #22
    5974:	add	w13, w1, w13
    5978:	mov	w1, #0x4491                	// #17553
    597c:	mov	w9, w15
    5980:	stp	w28, w15, [sp, #60]
    5984:	movk	w1, #0x7137, lsl #16
    5988:	ldur	w15, [x29, #-104]
    598c:	add	w12, w12, w1
    5990:	ror	w1, w30, #18
    5994:	eor	w1, w1, w30, lsr #3
    5998:	eor	w1, w1, w30, ror #7
    599c:	ror	w2, w3, #19
    59a0:	add	w1, w1, w15
    59a4:	eor	w2, w2, w3, lsr #10
    59a8:	add	w1, w1, w11
    59ac:	eor	w2, w2, w3, ror #17
    59b0:	add	w22, w1, w2
    59b4:	ror	w1, w15, #18
    59b8:	eor	w1, w1, w15, lsr #3
    59bc:	eor	w1, w1, w15, ror #7
    59c0:	ror	w2, w5, #19
    59c4:	add	w1, w1, w9
    59c8:	eor	w2, w2, w5, lsr #10
    59cc:	add	w1, w1, w16
    59d0:	eor	w2, w2, w5, ror #17
    59d4:	add	w13, w13, w12
    59d8:	add	w12, w12, w4
    59dc:	add	w8, w1, w2
    59e0:	bic	w1, w23, w12
    59e4:	and	w2, w0, w12
    59e8:	orr	w1, w2, w1
    59ec:	add	w17, w20, w17
    59f0:	add	w17, w17, w1
    59f4:	orr	w1, w13, w18
    59f8:	and	w1, w1, w7
    59fc:	and	w2, w13, w18
    5a00:	orr	w1, w1, w2
    5a04:	ror	w2, w25, #18
    5a08:	eor	w2, w2, w25, lsr #3
    5a0c:	stur	w4, [x29, #-140]
    5a10:	eor	w2, w2, w25, ror #7
    5a14:	ror	w4, w22, #19
    5a18:	add	w2, w2, w14
    5a1c:	eor	w4, w4, w22, lsr #10
    5a20:	add	w2, w2, w21
    5a24:	eor	w4, w4, w22, ror #17
    5a28:	mov	w9, w25
    5a2c:	str	w25, [sp, #92]
    5a30:	mov	w25, w22
    5a34:	add	w22, w2, w4
    5a38:	ror	w2, w12, #6
    5a3c:	eor	w2, w2, w12, ror #11
    5a40:	eor	w2, w2, w12, ror #25
    5a44:	add	w17, w17, w2
    5a48:	ror	w2, w13, #2
    5a4c:	eor	w2, w2, w13, ror #13
    5a50:	eor	w2, w2, w13, ror #22
    5a54:	add	w2, w2, w1
    5a58:	mov	w1, #0xfbcf                	// #64463
    5a5c:	movk	w1, #0xb5c0, lsl #16
    5a60:	add	w17, w17, w1
    5a64:	ror	w1, w14, #18
    5a68:	eor	w1, w1, w14, lsr #3
    5a6c:	mov	w24, w11
    5a70:	eor	w1, w1, w14, ror #7
    5a74:	ldur	w11, [x29, #-96]
    5a78:	str	w30, [sp, #84]
    5a7c:	add	w1, w1, w30
    5a80:	ldp	w28, w30, [x29, #-88]
    5a84:	ror	w4, w8, #19
    5a88:	eor	w4, w4, w8, lsr #10
    5a8c:	add	w1, w1, w11
    5a90:	eor	w4, w4, w8, ror #17
    5a94:	mov	w10, w8
    5a98:	stur	w8, [x29, #-100]
    5a9c:	add	w8, w1, w4
    5aa0:	ror	w1, w30, #18
    5aa4:	str	w14, [sp, #112]
    5aa8:	eor	w1, w1, w30, lsr #3
    5aac:	ldr	w14, [sp, #76]
    5ab0:	eor	w1, w1, w30, ror #7
    5ab4:	ror	w4, w22, #19
    5ab8:	add	w1, w1, w28
    5abc:	eor	w4, w4, w22, lsr #10
    5ac0:	add	w1, w1, w5
    5ac4:	eor	w4, w4, w22, ror #17
    5ac8:	stur	w20, [x29, #-136]
    5acc:	add	w20, w1, w4
    5ad0:	add	w1, w14, w0
    5ad4:	ldur	w14, [x29, #-108]
    5ad8:	add	w16, w2, w17
    5adc:	add	w17, w17, w19
    5ae0:	bic	w0, w0, w17
    5ae4:	and	w2, w12, w17
    5ae8:	orr	w0, w2, w0
    5aec:	add	w15, w23, w14
    5af0:	add	w15, w15, w0
    5af4:	orr	w0, w16, w13
    5af8:	and	w0, w0, w18
    5afc:	and	w2, w16, w13
    5b00:	orr	w0, w0, w2
    5b04:	ror	w2, w28, #18
    5b08:	eor	w2, w2, w28, lsr #3
    5b0c:	eor	w2, w2, w28, ror #7
    5b10:	ror	w4, w8, #19
    5b14:	add	w2, w2, w9
    5b18:	eor	w4, w4, w8, lsr #10
    5b1c:	add	w2, w2, w6
    5b20:	eor	w4, w4, w8, ror #17
    5b24:	str	w19, [sp, #144]
    5b28:	mov	w19, w8
    5b2c:	add	w8, w2, w4
    5b30:	ror	w2, w17, #6
    5b34:	eor	w2, w2, w17, ror #11
    5b38:	eor	w2, w2, w17, ror #25
    5b3c:	add	w15, w15, w2
    5b40:	ror	w2, w16, #2
    5b44:	eor	w2, w2, w16, ror #13
    5b48:	eor	w2, w2, w16, ror #22
    5b4c:	add	w2, w2, w0
    5b50:	mov	w0, #0xdba5                	// #56229
    5b54:	movk	w0, #0xe9b5, lsl #16
    5b58:	add	w15, w15, w0
    5b5c:	ror	w0, w26, #18
    5b60:	eor	w0, w0, w26, lsr #3
    5b64:	eor	w0, w0, w26, ror #7
    5b68:	ror	w4, w20, #19
    5b6c:	add	w0, w0, w27
    5b70:	eor	w4, w4, w20, lsr #10
    5b74:	add	w0, w0, w10
    5b78:	eor	w4, w4, w20, ror #17
    5b7c:	add	w9, w0, w4
    5b80:	ror	w0, w27, #18
    5b84:	eor	w0, w0, w27, lsr #3
    5b88:	ldr	w10, [sp, #68]
    5b8c:	eor	w0, w0, w27, ror #7
    5b90:	ror	w4, w8, #19
    5b94:	add	w0, w0, w30
    5b98:	eor	w4, w4, w8, lsr #10
    5b9c:	add	w0, w0, w3
    5ba0:	eor	w4, w4, w8, ror #17
    5ba4:	add	w2, w2, w15
    5ba8:	add	w15, w15, w7
    5bac:	stp	w26, w27, [sp, #128]
    5bb0:	mov	w27, w8
    5bb4:	add	w8, w0, w4
    5bb8:	add	w0, w10, w12
    5bbc:	bic	w12, w12, w15
    5bc0:	and	w14, w17, w15
    5bc4:	orr	w12, w14, w12
    5bc8:	orr	w14, w2, w16
    5bcc:	add	w12, w1, w12
    5bd0:	and	w14, w14, w13
    5bd4:	and	w1, w2, w16
    5bd8:	ldur	w10, [x29, #-92]
    5bdc:	orr	w14, w14, w1
    5be0:	ror	w1, w24, #18
    5be4:	eor	w1, w1, w24, lsr #3
    5be8:	eor	w1, w1, w24, ror #7
    5bec:	ror	w4, w9, #19
    5bf0:	add	w1, w1, w10
    5bf4:	eor	w4, w4, w9, lsr #10
    5bf8:	add	w1, w1, w19
    5bfc:	eor	w4, w4, w9, ror #17
    5c00:	stp	w7, w23, [sp, #136]
    5c04:	add	w7, w1, w4
    5c08:	ror	w1, w15, #6
    5c0c:	eor	w1, w1, w15, ror #11
    5c10:	eor	w1, w1, w15, ror #25
    5c14:	add	w12, w12, w1
    5c18:	ror	w1, w2, #2
    5c1c:	eor	w1, w1, w2, ror #13
    5c20:	eor	w1, w1, w2, ror #22
    5c24:	add	w14, w1, w14
    5c28:	mov	w1, #0xc25b                	// #49755
    5c2c:	movk	w1, #0x3956, lsl #16
    5c30:	add	w1, w12, w1
    5c34:	ror	w12, w10, #18
    5c38:	eor	w12, w12, w10, lsr #3
    5c3c:	eor	w12, w12, w10, ror #7
    5c40:	ror	w4, w8, #19
    5c44:	add	w12, w12, w26
    5c48:	eor	w4, w4, w8, lsr #10
    5c4c:	add	w12, w12, w25
    5c50:	eor	w4, w4, w8, ror #17
    5c54:	mov	w30, w9
    5c58:	mov	w9, w10
    5c5c:	add	w26, w12, w4
    5c60:	add	w12, w14, w1
    5c64:	add	w14, w1, w18
    5c68:	ror	w18, w21, #18
    5c6c:	eor	w18, w18, w21, lsr #3
    5c70:	ldur	w9, [x29, #-112]
    5c74:	eor	w18, w18, w21, ror #7
    5c78:	ror	w1, w7, #19
    5c7c:	add	w18, w18, w11
    5c80:	eor	w1, w1, w7, lsr #10
    5c84:	add	w18, w18, w27
    5c88:	eor	w1, w1, w7, ror #17
    5c8c:	mov	w28, w8
    5c90:	stur	w8, [x29, #-108]
    5c94:	mov	w8, w11
    5c98:	add	w11, w18, w1
    5c9c:	add	w9, w9, w17
    5ca0:	bic	w17, w17, w14
    5ca4:	and	w18, w15, w14
    5ca8:	orr	w17, w18, w17
    5cac:	orr	w18, w12, w2
    5cb0:	add	w17, w0, w17
    5cb4:	and	w18, w18, w16
    5cb8:	and	w0, w12, w2
    5cbc:	orr	w18, w18, w0
    5cc0:	ror	w0, w8, #18
    5cc4:	eor	w0, w0, w8, lsr #3
    5cc8:	eor	w0, w0, w8, ror #7
    5ccc:	ror	w1, w26, #19
    5cd0:	add	w0, w0, w24
    5cd4:	eor	w1, w1, w26, lsr #10
    5cd8:	add	w0, w0, w22
    5cdc:	eor	w1, w1, w26, ror #17
    5ce0:	mov	w23, w25
    5ce4:	add	w25, w0, w1
    5ce8:	ror	w0, w14, #6
    5cec:	eor	w0, w0, w14, ror #11
    5cf0:	eor	w0, w0, w14, ror #25
    5cf4:	add	w17, w17, w0
    5cf8:	ror	w0, w12, #2
    5cfc:	eor	w0, w0, w12, ror #13
    5d00:	eor	w0, w0, w12, ror #22
    5d04:	add	w18, w0, w18
    5d08:	mov	w0, #0x11f1                	// #4593
    5d0c:	movk	w0, #0x59f1, lsl #16
    5d10:	add	w17, w17, w0
    5d14:	ror	w0, w5, #18
    5d18:	eor	w0, w0, w5, lsr #3
    5d1c:	eor	w0, w0, w5, ror #7
    5d20:	mov	w10, w5
    5d24:	str	w5, [sp, #104]
    5d28:	add	w5, w18, w17
    5d2c:	add	w13, w17, w13
    5d30:	ror	w17, w6, #18
    5d34:	eor	w17, w17, w6, lsr #3
    5d38:	ldr	w8, [sp, #52]
    5d3c:	eor	w17, w17, w6, ror #7
    5d40:	ror	w18, w25, #19
    5d44:	ror	w1, w11, #19
    5d48:	add	w17, w17, w21
    5d4c:	eor	w18, w18, w25, lsr #10
    5d50:	add	w0, w0, w6
    5d54:	eor	w1, w1, w11, lsr #10
    5d58:	add	w17, w17, w20
    5d5c:	eor	w18, w18, w25, ror #17
    5d60:	add	w0, w0, w28
    5d64:	mov	w28, w11
    5d68:	eor	w1, w1, w11, ror #17
    5d6c:	add	w4, w17, w18
    5d70:	add	w11, w8, w15
    5d74:	bic	w15, w15, w13
    5d78:	and	w17, w14, w13
    5d7c:	ldur	w8, [x29, #-100]
    5d80:	orr	w15, w17, w15
    5d84:	add	w9, w9, w15
    5d88:	orr	w15, w5, w12
    5d8c:	and	w15, w15, w2
    5d90:	and	w17, w5, w12
    5d94:	orr	w15, w15, w17
    5d98:	ror	w17, w8, #18
    5d9c:	add	w1, w0, w1
    5da0:	eor	w17, w17, w8, lsr #3
    5da4:	eor	w17, w17, w8, ror #7
    5da8:	ror	w18, w1, #19
    5dac:	add	w17, w17, w3
    5db0:	eor	w18, w18, w1, lsr #10
    5db4:	add	w17, w17, w26
    5db8:	eor	w18, w18, w1, ror #17
    5dbc:	stp	w6, w24, [sp, #120]
    5dc0:	mov	w24, w20
    5dc4:	mov	w20, w1
    5dc8:	add	w1, w17, w18
    5dcc:	ror	w17, w13, #6
    5dd0:	eor	w17, w17, w13, ror #11
    5dd4:	eor	w17, w17, w13, ror #25
    5dd8:	add	w9, w9, w17
    5ddc:	ror	w17, w5, #2
    5de0:	eor	w17, w17, w5, ror #13
    5de4:	eor	w17, w17, w5, ror #22
    5de8:	add	w15, w17, w15
    5dec:	mov	w17, #0x82a4                	// #33444
    5df0:	movk	w17, #0x923f, lsl #16
    5df4:	add	w9, w9, w17
    5df8:	ror	w17, w3, #18
    5dfc:	add	w6, w15, w9
    5e00:	ror	w15, w19, #18
    5e04:	mov	w0, w8
    5e08:	eor	w17, w17, w3, lsr #3
    5e0c:	eor	w15, w15, w19, lsr #3
    5e10:	ldr	w8, [sp, #60]
    5e14:	eor	w17, w17, w3, ror #7
    5e18:	ror	w18, w4, #19
    5e1c:	add	w9, w9, w16
    5e20:	eor	w15, w15, w19, ror #7
    5e24:	ror	w16, w1, #19
    5e28:	add	w17, w17, w10
    5e2c:	eor	w18, w18, w4, lsr #10
    5e30:	add	w15, w15, w23
    5e34:	eor	w16, w16, w1, lsr #10
    5e38:	add	w17, w17, w30
    5e3c:	eor	w18, w18, w4, ror #17
    5e40:	add	w15, w15, w25
    5e44:	eor	w16, w16, w1, ror #17
    5e48:	str	w3, [sp, #108]
    5e4c:	add	w3, w17, w18
    5e50:	add	w18, w15, w16
    5e54:	add	w10, w8, w14
    5e58:	bic	w14, w14, w9
    5e5c:	and	w15, w13, w9
    5e60:	orr	w14, w15, w14
    5e64:	add	w11, w11, w14
    5e68:	orr	w14, w6, w5
    5e6c:	and	w14, w14, w12
    5e70:	and	w15, w6, w5
    5e74:	orr	w14, w14, w15
    5e78:	ror	w15, w23, #18
    5e7c:	eor	w15, w15, w23, lsr #3
    5e80:	eor	w15, w15, w23, ror #7
    5e84:	ror	w16, w3, #19
    5e88:	add	w15, w15, w0
    5e8c:	eor	w16, w16, w3, lsr #10
    5e90:	mov	w8, w23
    5e94:	add	w15, w15, w7
    5e98:	eor	w16, w16, w3, ror #17
    5e9c:	add	w8, w15, w16
    5ea0:	ror	w15, w9, #6
    5ea4:	eor	w15, w15, w9, ror #11
    5ea8:	eor	w15, w15, w9, ror #25
    5eac:	add	w11, w11, w15
    5eb0:	ror	w15, w6, #2
    5eb4:	eor	w15, w15, w6, ror #13
    5eb8:	eor	w15, w15, w6, ror #22
    5ebc:	add	w14, w15, w14
    5ec0:	mov	w15, #0x5ed5                	// #24277
    5ec4:	movk	w15, #0xab1c, lsl #16
    5ec8:	add	w11, w11, w15
    5ecc:	ror	w15, w27, #18
    5ed0:	eor	w15, w15, w27, lsr #3
    5ed4:	eor	w15, w15, w27, ror #7
    5ed8:	ror	w16, w18, #19
    5edc:	add	w15, w15, w22
    5ee0:	eor	w16, w16, w18, lsr #10
    5ee4:	add	w15, w15, w4
    5ee8:	eor	w16, w16, w18, ror #17
    5eec:	mov	w17, w19
    5ef0:	str	w19, [sp, #88]
    5ef4:	mov	w19, w23
    5ef8:	add	w16, w15, w16
    5efc:	ror	w15, w8, #19
    5f00:	add	w19, w14, w11
    5f04:	ror	w14, w22, #18
    5f08:	eor	w15, w15, w8, lsr #10
    5f0c:	str	w23, [sp, #100]
    5f10:	eor	w14, w14, w22, lsr #3
    5f14:	eor	w15, w15, w8, ror #17
    5f18:	mov	w23, w8
    5f1c:	str	w8, [sp, #20]
    5f20:	ldr	w8, [sp, #64]
    5f24:	eor	w14, w14, w22, ror #7
    5f28:	add	w14, w14, w17
    5f2c:	add	w11, w11, w2
    5f30:	add	w14, w14, w28
    5f34:	add	w17, w14, w15
    5f38:	add	w8, w8, w13
    5f3c:	bic	w13, w13, w11
    5f40:	and	w14, w9, w11
    5f44:	ldur	w15, [x29, #-108]
    5f48:	orr	w13, w14, w13
    5f4c:	add	w10, w10, w13
    5f50:	orr	w13, w19, w6
    5f54:	and	w13, w13, w5
    5f58:	and	w14, w19, w6
    5f5c:	orr	w13, w13, w14
    5f60:	ror	w14, w15, #18
    5f64:	eor	w14, w14, w15, lsr #3
    5f68:	eor	w14, w14, w15, ror #7
    5f6c:	mov	w0, w15
    5f70:	ror	w15, w16, #19
    5f74:	add	w14, w14, w24
    5f78:	eor	w15, w15, w16, lsr #10
    5f7c:	add	w14, w14, w3
    5f80:	eor	w15, w15, w16, ror #17
    5f84:	mov	w2, w24
    5f88:	add	w24, w14, w15
    5f8c:	ror	w14, w11, #6
    5f90:	eor	w14, w14, w11, ror #11
    5f94:	eor	w14, w14, w11, ror #25
    5f98:	add	w10, w10, w14
    5f9c:	ror	w14, w19, #2
    5fa0:	eor	w14, w14, w19, ror #13
    5fa4:	eor	w14, w14, w19, ror #22
    5fa8:	add	w13, w14, w13
    5fac:	mov	w14, #0xaa98                	// #43672
    5fb0:	movk	w14, #0xd807, lsl #16
    5fb4:	add	w10, w10, w14
    5fb8:	ror	w14, w2, #18
    5fbc:	eor	w14, w14, w2, lsr #3
    5fc0:	str	w22, [sp, #96]
    5fc4:	mov	w15, w2
    5fc8:	str	w2, [sp, #80]
    5fcc:	eor	w14, w14, w2, ror #7
    5fd0:	add	w2, w13, w10
    5fd4:	add	w22, w10, w12
    5fd8:	ror	w10, w26, #18
    5fdc:	eor	w10, w10, w26, lsr #3
    5fe0:	str	w21, [sp, #116]
    5fe4:	mov	w21, w30
    5fe8:	eor	w10, w10, w26, ror #7
    5fec:	ror	w12, w24, #19
    5ff0:	add	w10, w10, w21
    5ff4:	eor	w12, w12, w24, lsr #10
    5ff8:	add	w10, w10, w23
    5ffc:	eor	w12, w12, w24, ror #17
    6000:	mov	w13, w21
    6004:	str	w21, [sp, #72]
    6008:	add	w21, w10, w12
    600c:	ldur	w10, [x29, #-104]
    6010:	and	w12, w11, w22
    6014:	ror	w15, w17, #19
    6018:	add	w14, w14, w27
    601c:	add	w10, w10, w9
    6020:	bic	w9, w9, w22
    6024:	orr	w9, w12, w9
    6028:	add	w8, w8, w9
    602c:	orr	w9, w2, w19
    6030:	eor	w15, w15, w17, lsr #10
    6034:	and	w9, w9, w6
    6038:	and	w12, w2, w19
    603c:	add	w14, w14, w20
    6040:	eor	w15, w15, w17, ror #17
    6044:	orr	w9, w9, w12
    6048:	ror	w12, w13, #18
    604c:	add	w30, w14, w15
    6050:	eor	w12, w12, w13, lsr #3
    6054:	eor	w12, w12, w13, ror #7
    6058:	ror	w13, w30, #19
    605c:	add	w12, w12, w0
    6060:	eor	w13, w13, w30, lsr #10
    6064:	add	w12, w12, w1
    6068:	eor	w13, w13, w30, ror #17
    606c:	add	w23, w12, w13
    6070:	ror	w12, w22, #6
    6074:	eor	w12, w12, w22, ror #11
    6078:	eor	w12, w12, w22, ror #25
    607c:	add	w8, w8, w12
    6080:	ror	w12, w2, #2
    6084:	eor	w12, w12, w2, ror #13
    6088:	eor	w12, w12, w2, ror #22
    608c:	add	w9, w12, w9
    6090:	mov	w12, #0x5b01                	// #23297
    6094:	movk	w12, #0x1283, lsl #16
    6098:	add	w8, w8, w12
    609c:	ror	w12, w25, #18
    60a0:	eor	w12, w12, w25, lsr #3
    60a4:	eor	w12, w12, w25, ror #7
    60a8:	ror	w13, w21, #19
    60ac:	add	w12, w12, w7
    60b0:	eor	w13, w13, w21, lsr #10
    60b4:	add	w12, w12, w17
    60b8:	eor	w13, w13, w21, ror #17
    60bc:	str	w3, [sp, #16]
    60c0:	mov	w3, w20
    60c4:	add	w20, w12, w13
    60c8:	add	w13, w9, w8
    60cc:	ror	w9, w7, #18
    60d0:	eor	w9, w9, w7, lsr #3
    60d4:	eor	w9, w9, w7, ror #7
    60d8:	ror	w12, w23, #19
    60dc:	add	w9, w9, w26
    60e0:	eor	w12, w12, w23, lsr #10
    60e4:	add	w9, w9, w18
    60e8:	eor	w12, w12, w23, ror #17
    60ec:	add	w15, w9, w12
    60f0:	ldr	w9, [sp, #84]
    60f4:	add	w8, w8, w5
    60f8:	and	w12, w22, w8
    60fc:	ror	w14, w20, #19
    6100:	add	w9, w9, w11
    6104:	bic	w11, w11, w8
    6108:	orr	w11, w12, w11
    610c:	add	w10, w10, w11
    6110:	orr	w11, w13, w2
    6114:	and	w11, w11, w19
    6118:	and	w12, w13, w2
    611c:	orr	w11, w11, w12
    6120:	ror	w12, w4, #18
    6124:	eor	w12, w12, w4, lsr #3
    6128:	eor	w12, w12, w4, ror #7
    612c:	add	w12, w12, w28
    6130:	eor	w14, w14, w20, lsr #10
    6134:	add	w12, w12, w30
    6138:	eor	w14, w14, w20, ror #17
    613c:	str	w7, [sp, #68]
    6140:	add	w7, w12, w14
    6144:	ror	w12, w8, #6
    6148:	eor	w12, w12, w8, ror #11
    614c:	eor	w12, w12, w8, ror #25
    6150:	add	w10, w10, w12
    6154:	ror	w12, w13, #2
    6158:	eor	w12, w12, w13, ror #13
    615c:	eor	w12, w12, w13, ror #22
    6160:	add	w11, w12, w11
    6164:	mov	w12, #0x85be                	// #34238
    6168:	movk	w12, #0x2431, lsl #16
    616c:	add	w10, w10, w12
    6170:	ror	w12, w28, #18
    6174:	eor	w12, w12, w28, lsr #3
    6178:	stp	w4, w28, [sp, #44]
    617c:	eor	w12, w12, w28, ror #7
    6180:	ldr	w28, [sp, #16]
    6184:	ror	w14, w15, #19
    6188:	add	w12, w12, w25
    618c:	eor	w14, w14, w15, lsr #10
    6190:	add	w0, w11, w10
    6194:	add	w11, w10, w6
    6198:	ror	w10, w28, #18
    619c:	add	w12, w12, w16
    61a0:	eor	w14, w14, w15, ror #17
    61a4:	eor	w10, w10, w28, lsr #3
    61a8:	str	w27, [sp, #76]
    61ac:	add	w27, w12, w14
    61b0:	eor	w10, w10, w28, ror #7
    61b4:	ror	w14, w7, #19
    61b8:	add	w10, w10, w3
    61bc:	eor	w14, w14, w7, lsr #10
    61c0:	add	w10, w10, w23
    61c4:	eor	w14, w14, w7, ror #17
    61c8:	str	w16, [sp, #12]
    61cc:	mov	w16, w3
    61d0:	str	w3, [sp, #56]
    61d4:	add	w3, w10, w14
    61d8:	ldr	w10, [sp, #112]
    61dc:	stur	w17, [x29, #-112]
    61e0:	and	w5, w8, w11
    61e4:	ror	w6, w27, #19
    61e8:	add	w17, w10, w22
    61ec:	bic	w10, w22, w11
    61f0:	orr	w10, w5, w10
    61f4:	add	w9, w9, w10
    61f8:	orr	w10, w0, w13
    61fc:	and	w10, w10, w2
    6200:	and	w5, w0, w13
    6204:	orr	w10, w10, w5
    6208:	ror	w5, w16, #18
    620c:	eor	w5, w5, w16, lsr #3
    6210:	eor	w5, w5, w16, ror #7
    6214:	add	w5, w5, w4
    6218:	eor	w6, w6, w27, lsr #10
    621c:	add	w5, w5, w24
    6220:	eor	w6, w6, w27, ror #17
    6224:	add	w16, w5, w6
    6228:	ror	w5, w11, #6
    622c:	eor	w5, w5, w11, ror #11
    6230:	eor	w5, w5, w11, ror #25
    6234:	add	w9, w9, w5
    6238:	ror	w5, w0, #2
    623c:	eor	w5, w5, w0, ror #13
    6240:	ldr	w12, [sp, #20]
    6244:	eor	w5, w5, w0, ror #22
    6248:	add	w10, w5, w10
    624c:	mov	w5, #0x7dc3                	// #32195
    6250:	movk	w5, #0x550c, lsl #16
    6254:	add	w9, w9, w5
    6258:	ror	w5, w12, #18
    625c:	eor	w5, w5, w12, lsr #3
    6260:	eor	w5, w5, w12, ror #7
    6264:	ror	w6, w3, #19
    6268:	add	w5, w5, w1
    626c:	eor	w6, w6, w3, lsr #10
    6270:	add	w5, w5, w15
    6274:	eor	w6, w6, w3, ror #17
    6278:	add	w6, w5, w6
    627c:	ror	w5, w1, #18
    6280:	eor	w5, w5, w1, lsr #3
    6284:	add	w10, w10, w9
    6288:	add	w9, w9, w19
    628c:	eor	w5, w5, w1, ror #7
    6290:	ror	w19, w16, #19
    6294:	add	w5, w5, w28
    6298:	eor	w19, w19, w16, lsr #10
    629c:	add	w5, w5, w21
    62a0:	eor	w19, w19, w16, ror #17
    62a4:	add	w5, w5, w19
    62a8:	ldr	w19, [sp, #92]
    62ac:	stur	w15, [x29, #-104]
    62b0:	ldur	w15, [x29, #-112]
    62b4:	and	w22, w11, w9
    62b8:	add	w19, w19, w8
    62bc:	bic	w8, w8, w9
    62c0:	orr	w14, w10, w0
    62c4:	orr	w8, w22, w8
    62c8:	and	w14, w14, w13
    62cc:	and	w22, w10, w0
    62d0:	orr	w14, w14, w22
    62d4:	ror	w22, w15, #18
    62d8:	eor	w22, w22, w15, lsr #3
    62dc:	eor	w22, w22, w15, ror #7
    62e0:	add	w22, w22, w18
    62e4:	str	w27, [sp, #84]
    62e8:	add	w22, w22, w27
    62ec:	ror	w27, w6, #19
    62f0:	eor	w27, w27, w6, lsr #10
    62f4:	eor	w27, w27, w6, ror #17
    62f8:	mov	w4, w28
    62fc:	mov	w28, w15
    6300:	add	w15, w22, w27
    6304:	ror	w22, w9, #6
    6308:	eor	w22, w22, w9, ror #11
    630c:	add	w8, w17, w8
    6310:	eor	w22, w22, w9, ror #25
    6314:	add	w8, w8, w22
    6318:	ror	w22, w10, #2
    631c:	eor	w22, w22, w10, ror #13
    6320:	eor	w22, w22, w10, ror #22
    6324:	add	w14, w22, w14
    6328:	mov	w22, #0x5d74                	// #23924
    632c:	movk	w22, #0x72be, lsl #16
    6330:	add	w22, w8, w22
    6334:	ror	w8, w18, #18
    6338:	eor	w8, w8, w18, lsr #3
    633c:	eor	w8, w8, w18, ror #7
    6340:	ror	w27, w5, #19
    6344:	add	w8, w8, w12
    6348:	eor	w27, w27, w5, lsr #10
    634c:	str	w18, [sp, #32]
    6350:	add	w8, w8, w20
    6354:	eor	w27, w27, w5, ror #17
    6358:	ldr	w18, [sp, #12]
    635c:	add	w17, w8, w27
    6360:	add	w8, w14, w22
    6364:	ror	w14, w30, #18
    6368:	eor	w14, w14, w30, lsr #3
    636c:	add	w2, w22, w2
    6370:	eor	w14, w14, w30, ror #7
    6374:	ror	w22, w15, #19
    6378:	add	w14, w14, w18
    637c:	eor	w22, w22, w15, lsr #10
    6380:	add	w14, w14, w16
    6384:	eor	w22, w22, w15, ror #17
    6388:	str	w15, [sp, #112]
    638c:	add	w15, w14, w22
    6390:	ldur	w14, [x29, #-88]
    6394:	and	w22, w9, w2
    6398:	str	w17, [sp, #92]
    639c:	str	w1, [sp, #40]
    63a0:	add	w27, w14, w11
    63a4:	bic	w11, w11, w2
    63a8:	orr	w11, w22, w11
    63ac:	add	w19, w19, w11
    63b0:	orr	w11, w8, w10
    63b4:	and	w11, w11, w0
    63b8:	and	w22, w8, w10
    63bc:	orr	w22, w11, w22
    63c0:	ror	w11, w18, #18
    63c4:	eor	w11, w11, w18, lsr #3
    63c8:	eor	w11, w11, w18, ror #7
    63cc:	ror	w14, w17, #19
    63d0:	add	w11, w11, w28
    63d4:	eor	w14, w14, w17, lsr #10
    63d8:	add	w11, w11, w7
    63dc:	eor	w14, w14, w17, ror #17
    63e0:	add	w17, w11, w14
    63e4:	ror	w14, w2, #6
    63e8:	eor	w14, w14, w2, ror #11
    63ec:	eor	w14, w14, w2, ror #25
    63f0:	add	w14, w19, w14
    63f4:	ror	w19, w8, #2
    63f8:	eor	w19, w19, w8, ror #13
    63fc:	eor	w19, w19, w8, ror #22
    6400:	add	w19, w19, w22
    6404:	mov	w22, #0xb1fe                	// #45566
    6408:	movk	w22, #0x80de, lsl #16
    640c:	add	w14, w14, w22
    6410:	ror	w22, w23, #18
    6414:	eor	w22, w22, w23, lsr #3
    6418:	eor	w22, w22, w23, ror #7
    641c:	ror	w11, w15, #19
    6420:	add	w22, w22, w24
    6424:	eor	w11, w11, w15, lsr #10
    6428:	add	w22, w22, w5
    642c:	eor	w11, w11, w15, ror #17
    6430:	add	w11, w22, w11
    6434:	stur	w11, [x29, #-88]
    6438:	add	w11, w19, w14
    643c:	add	w14, w14, w13
    6440:	ror	w13, w24, #18
    6444:	eor	w13, w13, w24, lsr #3
    6448:	eor	w13, w13, w24, ror #7
    644c:	ror	w19, w17, #19
    6450:	add	w13, w13, w30
    6454:	eor	w19, w19, w17, lsr #10
    6458:	add	w13, w13, w3
    645c:	eor	w19, w19, w17, ror #17
    6460:	add	w13, w13, w19
    6464:	ldur	w19, [x29, #-84]
    6468:	and	w22, w2, w14
    646c:	mov	w1, w12
    6470:	ror	w28, w13, #19
    6474:	add	w19, w19, w9
    6478:	bic	w9, w9, w14
    647c:	orr	w9, w22, w9
    6480:	orr	w22, w11, w8
    6484:	add	w9, w27, w9
    6488:	and	w22, w22, w10
    648c:	and	w27, w11, w8
    6490:	orr	w22, w22, w27
    6494:	ror	w27, w14, #6
    6498:	eor	w27, w27, w14, ror #11
    649c:	eor	w27, w27, w14, ror #25
    64a0:	add	w9, w9, w27
    64a4:	ror	w27, w11, #2
    64a8:	eor	w27, w27, w11, ror #13
    64ac:	eor	w27, w27, w11, ror #22
    64b0:	add	w22, w27, w22
    64b4:	mov	w27, #0x6a7                 	// #1703
    64b8:	movk	w27, #0x9bdc, lsl #16
    64bc:	add	w27, w9, w27
    64c0:	ror	w9, w21, #18
    64c4:	eor	w9, w9, w21, lsr #3
    64c8:	add	w22, w22, w27
    64cc:	add	w12, w27, w0
    64d0:	ldr	w27, [sp, #132]
    64d4:	eor	w9, w9, w21, ror #7
    64d8:	add	w9, w9, w23
    64dc:	eor	w28, w28, w13, lsr #10
    64e0:	add	w9, w9, w6
    64e4:	eor	w28, w28, w13, ror #17
    64e8:	add	w9, w9, w28
    64ec:	add	w27, w27, w2
    64f0:	bic	w2, w2, w12
    64f4:	and	w28, w14, w12
    64f8:	orr	w2, w28, w2
    64fc:	add	w2, w19, w2
    6500:	orr	w19, w22, w11
    6504:	and	w19, w19, w8
    6508:	and	w28, w22, w11
    650c:	orr	w19, w19, w28
    6510:	ror	w28, w12, #6
    6514:	eor	w28, w28, w12, ror #11
    6518:	eor	w28, w28, w12, ror #25
    651c:	add	w2, w2, w28
    6520:	ror	w28, w22, #2
    6524:	eor	w28, w28, w22, ror #13
    6528:	eor	w28, w28, w22, ror #22
    652c:	add	w19, w28, w19
    6530:	mov	w28, #0xf174                	// #61812
    6534:	movk	w28, #0xc19b, lsl #16
    6538:	add	w2, w2, w28
    653c:	add	w19, w19, w2
    6540:	add	w10, w2, w10
    6544:	ldr	w2, [sp, #128]
    6548:	and	w28, w12, w10
    654c:	str	w15, [sp, #64]
    6550:	ldr	w15, [sp, #88]
    6554:	add	w2, w2, w14
    6558:	bic	w14, w14, w10
    655c:	orr	w14, w28, w14
    6560:	add	w14, w27, w14
    6564:	orr	w27, w19, w22
    6568:	and	w27, w27, w11
    656c:	and	w28, w19, w22
    6570:	orr	w27, w27, w28
    6574:	ror	w28, w10, #6
    6578:	eor	w28, w28, w10, ror #11
    657c:	eor	w28, w28, w10, ror #25
    6580:	add	w14, w14, w28
    6584:	ror	w28, w19, #2
    6588:	eor	w28, w28, w19, ror #13
    658c:	eor	w28, w28, w19, ror #22
    6590:	add	w27, w28, w27
    6594:	mov	w28, #0x69c1                	// #27073
    6598:	movk	w28, #0xe49b, lsl #16
    659c:	add	w14, w14, w28
    65a0:	add	w27, w27, w14
    65a4:	add	w8, w14, w8
    65a8:	ldur	w14, [x29, #-92]
    65ac:	and	w28, w10, w8
    65b0:	str	w16, [sp, #52]
    65b4:	mov	w16, w24
    65b8:	add	w14, w14, w12
    65bc:	bic	w12, w12, w8
    65c0:	orr	w12, w28, w12
    65c4:	add	w12, w2, w12
    65c8:	orr	w2, w27, w19
    65cc:	and	w2, w2, w22
    65d0:	and	w28, w27, w19
    65d4:	orr	w2, w2, w28
    65d8:	ror	w28, w8, #6
    65dc:	eor	w28, w28, w8, ror #11
    65e0:	eor	w28, w28, w8, ror #25
    65e4:	add	w12, w12, w28
    65e8:	ror	w28, w27, #2
    65ec:	eor	w28, w28, w27, ror #13
    65f0:	eor	w28, w28, w27, ror #22
    65f4:	add	w2, w28, w2
    65f8:	mov	w28, #0x4786                	// #18310
    65fc:	movk	w28, #0xefbe, lsl #16
    6600:	add	w12, w12, w28
    6604:	add	w2, w2, w12
    6608:	add	w11, w12, w11
    660c:	ldr	w12, [sp, #124]
    6610:	and	w28, w8, w11
    6614:	str	w21, [sp, #24]
    6618:	str	w7, [sp, #36]
    661c:	add	w12, w12, w10
    6620:	bic	w10, w10, w11
    6624:	orr	w10, w28, w10
    6628:	add	w10, w14, w10
    662c:	orr	w14, w2, w27
    6630:	and	w14, w14, w19
    6634:	and	w28, w2, w27
    6638:	orr	w14, w14, w28
    663c:	ror	w28, w11, #6
    6640:	eor	w28, w28, w11, ror #11
    6644:	eor	w28, w28, w11, ror #25
    6648:	add	w10, w10, w28
    664c:	ror	w28, w2, #2
    6650:	eor	w28, w28, w2, ror #13
    6654:	eor	w28, w28, w2, ror #22
    6658:	add	w14, w28, w14
    665c:	mov	w28, #0x9dc6                	// #40390
    6660:	movk	w28, #0xfc1, lsl #16
    6664:	add	w10, w10, w28
    6668:	add	w14, w14, w10
    666c:	add	w10, w10, w22
    6670:	ldur	w22, [x29, #-96]
    6674:	and	w28, w11, w10
    6678:	str	w20, [sp, #60]
    667c:	str	w3, [sp, #28]
    6680:	add	w22, w22, w8
    6684:	bic	w8, w8, w10
    6688:	orr	w8, w28, w8
    668c:	add	w8, w12, w8
    6690:	orr	w12, w14, w2
    6694:	and	w12, w12, w27
    6698:	and	w28, w14, w2
    669c:	orr	w12, w12, w28
    66a0:	ror	w28, w10, #6
    66a4:	eor	w28, w28, w10, ror #11
    66a8:	eor	w28, w28, w10, ror #25
    66ac:	add	w8, w8, w28
    66b0:	ror	w28, w14, #2
    66b4:	eor	w28, w28, w14, ror #13
    66b8:	eor	w28, w28, w14, ror #22
    66bc:	add	w12, w28, w12
    66c0:	mov	w28, #0xa1cc                	// #41420
    66c4:	movk	w28, #0x240c, lsl #16
    66c8:	add	w8, w8, w28
    66cc:	add	w12, w12, w8
    66d0:	add	w8, w8, w19
    66d4:	ldr	w19, [sp, #116]
    66d8:	and	w28, w10, w8
    66dc:	mov	w3, w17
    66e0:	add	w19, w19, w11
    66e4:	bic	w11, w11, w8
    66e8:	orr	w11, w28, w11
    66ec:	add	w11, w22, w11
    66f0:	orr	w22, w12, w14
    66f4:	and	w22, w22, w2
    66f8:	and	w28, w12, w14
    66fc:	orr	w22, w22, w28
    6700:	ror	w28, w8, #6
    6704:	eor	w28, w28, w8, ror #11
    6708:	eor	w28, w28, w8, ror #25
    670c:	add	w11, w11, w28
    6710:	ror	w28, w12, #2
    6714:	eor	w28, w28, w12, ror #13
    6718:	eor	w28, w28, w12, ror #22
    671c:	add	w22, w28, w22
    6720:	mov	w28, #0x2c6f                	// #11375
    6724:	movk	w28, #0x2de9, lsl #16
    6728:	add	w11, w11, w28
    672c:	add	w22, w22, w11
    6730:	add	w11, w11, w27
    6734:	ldr	w27, [sp, #120]
    6738:	and	w28, w8, w11
    673c:	add	w27, w27, w10
    6740:	bic	w10, w10, w11
    6744:	orr	w10, w28, w10
    6748:	add	w10, w19, w10
    674c:	orr	w19, w22, w12
    6750:	and	w19, w19, w14
    6754:	and	w28, w22, w12
    6758:	orr	w19, w19, w28
    675c:	ror	w28, w11, #6
    6760:	eor	w28, w28, w11, ror #11
    6764:	eor	w28, w28, w11, ror #25
    6768:	add	w10, w10, w28
    676c:	ror	w28, w22, #2
    6770:	eor	w28, w28, w22, ror #13
    6774:	eor	w28, w28, w22, ror #22
    6778:	add	w19, w28, w19
    677c:	mov	w28, #0x84aa                	// #33962
    6780:	movk	w28, #0x4a74, lsl #16
    6784:	add	w10, w10, w28
    6788:	add	w19, w19, w10
    678c:	add	w10, w10, w2
    6790:	ldr	w2, [sp, #104]
    6794:	and	w28, w11, w10
    6798:	add	w2, w2, w8
    679c:	bic	w8, w8, w10
    67a0:	orr	w8, w28, w8
    67a4:	add	w8, w27, w8
    67a8:	orr	w27, w19, w22
    67ac:	and	w27, w27, w12
    67b0:	and	w28, w19, w22
    67b4:	orr	w27, w27, w28
    67b8:	ror	w28, w10, #6
    67bc:	eor	w28, w28, w10, ror #11
    67c0:	eor	w28, w28, w10, ror #25
    67c4:	add	w8, w8, w28
    67c8:	ror	w28, w19, #2
    67cc:	eor	w28, w28, w19, ror #13
    67d0:	eor	w28, w28, w19, ror #22
    67d4:	add	w27, w28, w27
    67d8:	mov	w28, #0xa9dc                	// #43484
    67dc:	movk	w28, #0x5cb0, lsl #16
    67e0:	add	w8, w8, w28
    67e4:	add	w27, w27, w8
    67e8:	add	w8, w8, w14
    67ec:	ldr	w14, [sp, #108]
    67f0:	and	w28, w10, w8
    67f4:	add	w14, w14, w11
    67f8:	bic	w11, w11, w8
    67fc:	orr	w11, w28, w11
    6800:	add	w11, w2, w11
    6804:	orr	w2, w27, w19
    6808:	and	w2, w2, w22
    680c:	and	w28, w27, w19
    6810:	orr	w2, w2, w28
    6814:	ror	w28, w8, #6
    6818:	eor	w28, w28, w8, ror #11
    681c:	eor	w28, w28, w8, ror #25
    6820:	add	w11, w11, w28
    6824:	ror	w28, w27, #2
    6828:	eor	w28, w28, w27, ror #13
    682c:	eor	w28, w28, w27, ror #22
    6830:	add	w2, w28, w2
    6834:	mov	w28, #0x88da                	// #35034
    6838:	movk	w28, #0x76f9, lsl #16
    683c:	add	w11, w11, w28
    6840:	add	w2, w2, w11
    6844:	add	w11, w11, w12
    6848:	ldur	w12, [x29, #-100]
    684c:	and	w28, w8, w11
    6850:	add	w12, w12, w10
    6854:	bic	w10, w10, w11
    6858:	orr	w10, w28, w10
    685c:	add	w10, w14, w10
    6860:	orr	w14, w2, w27
    6864:	and	w14, w14, w19
    6868:	and	w28, w2, w27
    686c:	orr	w14, w14, w28
    6870:	ror	w28, w11, #6
    6874:	eor	w28, w28, w11, ror #11
    6878:	eor	w28, w28, w11, ror #25
    687c:	add	w10, w10, w28
    6880:	ror	w28, w2, #2
    6884:	eor	w28, w28, w2, ror #13
    6888:	eor	w28, w28, w2, ror #22
    688c:	add	w14, w28, w14
    6890:	mov	w28, #0x5152                	// #20818
    6894:	movk	w28, #0x983e, lsl #16
    6898:	add	w10, w10, w28
    689c:	add	w14, w14, w10
    68a0:	add	w10, w10, w22
    68a4:	ldr	w22, [sp, #100]
    68a8:	and	w28, w11, w10
    68ac:	add	w22, w22, w8
    68b0:	bic	w8, w8, w10
    68b4:	orr	w8, w28, w8
    68b8:	add	w8, w12, w8
    68bc:	orr	w12, w14, w2
    68c0:	and	w12, w12, w27
    68c4:	and	w28, w14, w2
    68c8:	orr	w12, w12, w28
    68cc:	ror	w28, w10, #6
    68d0:	eor	w28, w28, w10, ror #11
    68d4:	eor	w28, w28, w10, ror #25
    68d8:	add	w8, w8, w28
    68dc:	ror	w28, w14, #2
    68e0:	eor	w28, w28, w14, ror #13
    68e4:	eor	w28, w28, w14, ror #22
    68e8:	add	w12, w28, w12
    68ec:	mov	w28, #0xc66d                	// #50797
    68f0:	movk	w28, #0xa831, lsl #16
    68f4:	add	w8, w8, w28
    68f8:	add	w12, w12, w8
    68fc:	add	w8, w8, w19
    6900:	add	w19, w15, w11
    6904:	bic	w11, w11, w8
    6908:	and	w28, w10, w8
    690c:	orr	w11, w28, w11
    6910:	add	w11, w22, w11
    6914:	orr	w22, w12, w14
    6918:	and	w22, w22, w2
    691c:	and	w28, w12, w14
    6920:	orr	w22, w22, w28
    6924:	ror	w28, w8, #6
    6928:	eor	w28, w28, w8, ror #11
    692c:	eor	w28, w28, w8, ror #25
    6930:	add	w11, w11, w28
    6934:	ror	w28, w12, #2
    6938:	eor	w28, w28, w12, ror #13
    693c:	eor	w28, w28, w12, ror #22
    6940:	add	w22, w28, w22
    6944:	mov	w28, #0x27c8                	// #10184
    6948:	movk	w28, #0xb003, lsl #16
    694c:	add	w11, w11, w28
    6950:	add	w22, w22, w11
    6954:	add	w11, w11, w27
    6958:	ldr	w27, [sp, #96]
    695c:	and	w28, w8, w11
    6960:	ldr	w15, [sp, #76]
    6964:	add	w27, w27, w10
    6968:	bic	w10, w10, w11
    696c:	orr	w10, w28, w10
    6970:	add	w10, w19, w10
    6974:	orr	w19, w22, w12
    6978:	and	w19, w19, w14
    697c:	and	w28, w22, w12
    6980:	orr	w19, w19, w28
    6984:	ror	w28, w11, #6
    6988:	eor	w28, w28, w11, ror #11
    698c:	eor	w28, w28, w11, ror #25
    6990:	add	w10, w10, w28
    6994:	ror	w28, w22, #2
    6998:	eor	w28, w28, w22, ror #13
    699c:	eor	w28, w28, w22, ror #22
    69a0:	add	w19, w28, w19
    69a4:	mov	w28, #0x7fc7                	// #32711
    69a8:	movk	w28, #0xbf59, lsl #16
    69ac:	add	w10, w10, w28
    69b0:	add	w19, w19, w10
    69b4:	add	w10, w10, w2
    69b8:	add	w2, w15, w8
    69bc:	bic	w8, w8, w10
    69c0:	and	w28, w11, w10
    69c4:	orr	w8, w28, w8
    69c8:	add	w8, w27, w8
    69cc:	orr	w27, w19, w22
    69d0:	and	w27, w27, w12
    69d4:	and	w28, w19, w22
    69d8:	orr	w27, w27, w28
    69dc:	ror	w28, w10, #6
    69e0:	eor	w28, w28, w10, ror #11
    69e4:	eor	w28, w28, w10, ror #25
    69e8:	add	w8, w8, w28
    69ec:	ror	w28, w19, #2
    69f0:	eor	w28, w28, w19, ror #13
    69f4:	eor	w28, w28, w19, ror #22
    69f8:	add	w27, w28, w27
    69fc:	mov	w28, #0xbf3                 	// #3059
    6a00:	movk	w28, #0xc6e0, lsl #16
    6a04:	add	w8, w8, w28
    6a08:	add	w27, w27, w8
    6a0c:	add	w8, w8, w14
    6a10:	ldr	w14, [sp, #80]
    6a14:	and	w28, w10, w8
    6a18:	ldr	w15, [sp, #72]
    6a1c:	add	w14, w14, w11
    6a20:	bic	w11, w11, w8
    6a24:	orr	w11, w28, w11
    6a28:	add	w11, w2, w11
    6a2c:	orr	w2, w27, w19
    6a30:	and	w2, w2, w22
    6a34:	and	w28, w27, w19
    6a38:	orr	w2, w2, w28
    6a3c:	ror	w28, w8, #6
    6a40:	eor	w28, w28, w8, ror #11
    6a44:	eor	w28, w28, w8, ror #25
    6a48:	add	w11, w11, w28
    6a4c:	ror	w28, w27, #2
    6a50:	eor	w28, w28, w27, ror #13
    6a54:	eor	w28, w28, w27, ror #22
    6a58:	add	w2, w28, w2
    6a5c:	mov	w28, #0x9147                	// #37191
    6a60:	movk	w28, #0xd5a7, lsl #16
    6a64:	add	w11, w11, w28
    6a68:	add	w2, w2, w11
    6a6c:	add	w11, w11, w12
    6a70:	ldur	w12, [x29, #-108]
    6a74:	and	w28, w8, w11
    6a78:	add	w12, w12, w10
    6a7c:	bic	w10, w10, w11
    6a80:	orr	w10, w28, w10
    6a84:	add	w10, w14, w10
    6a88:	orr	w14, w2, w27
    6a8c:	and	w14, w14, w19
    6a90:	and	w28, w2, w27
    6a94:	orr	w14, w14, w28
    6a98:	ror	w28, w11, #6
    6a9c:	eor	w28, w28, w11, ror #11
    6aa0:	eor	w28, w28, w11, ror #25
    6aa4:	add	w10, w10, w28
    6aa8:	ror	w28, w2, #2
    6aac:	eor	w28, w28, w2, ror #13
    6ab0:	eor	w28, w28, w2, ror #22
    6ab4:	add	w14, w28, w14
    6ab8:	mov	w28, #0x6351                	// #25425
    6abc:	movk	w28, #0x6ca, lsl #16
    6ac0:	add	w10, w10, w28
    6ac4:	add	w14, w14, w10
    6ac8:	add	w10, w10, w22
    6acc:	add	w22, w15, w8
    6ad0:	bic	w8, w8, w10
    6ad4:	and	w28, w11, w10
    6ad8:	orr	w8, w28, w8
    6adc:	add	w8, w12, w8
    6ae0:	orr	w12, w14, w2
    6ae4:	and	w12, w12, w27
    6ae8:	and	w28, w14, w2
    6aec:	orr	w12, w12, w28
    6af0:	ror	w28, w10, #6
    6af4:	eor	w28, w28, w10, ror #11
    6af8:	eor	w28, w28, w10, ror #25
    6afc:	add	w8, w8, w28
    6b00:	ror	w28, w14, #2
    6b04:	eor	w28, w28, w14, ror #13
    6b08:	eor	w28, w28, w14, ror #22
    6b0c:	add	w12, w28, w12
    6b10:	mov	w28, #0x2967                	// #10599
    6b14:	movk	w28, #0x1429, lsl #16
    6b18:	add	w8, w8, w28
    6b1c:	add	w12, w12, w8
    6b20:	add	w8, w8, w19
    6b24:	add	w19, w26, w11
    6b28:	bic	w11, w11, w8
    6b2c:	and	w26, w10, w8
    6b30:	orr	w11, w26, w11
    6b34:	add	w11, w22, w11
    6b38:	orr	w22, w12, w14
    6b3c:	and	w22, w22, w2
    6b40:	and	w26, w12, w14
    6b44:	orr	w22, w22, w26
    6b48:	ror	w26, w8, #6
    6b4c:	eor	w26, w26, w8, ror #11
    6b50:	eor	w26, w26, w8, ror #25
    6b54:	add	w11, w11, w26
    6b58:	ror	w26, w12, #2
    6b5c:	eor	w26, w26, w12, ror #13
    6b60:	eor	w26, w26, w12, ror #22
    6b64:	add	w22, w26, w22
    6b68:	mov	w26, #0xa85                 	// #2693
    6b6c:	ldr	w15, [sp, #68]
    6b70:	movk	w26, #0x27b7, lsl #16
    6b74:	add	w11, w11, w26
    6b78:	add	w22, w22, w11
    6b7c:	add	w11, w11, w27
    6b80:	add	w26, w15, w10
    6b84:	bic	w10, w10, w11
    6b88:	and	w27, w8, w11
    6b8c:	orr	w10, w27, w10
    6b90:	add	w10, w19, w10
    6b94:	orr	w19, w22, w12
    6b98:	and	w19, w19, w14
    6b9c:	and	w27, w22, w12
    6ba0:	orr	w19, w19, w27
    6ba4:	ror	w27, w11, #6
    6ba8:	eor	w27, w27, w11, ror #11
    6bac:	eor	w27, w27, w11, ror #25
    6bb0:	add	w10, w10, w27
    6bb4:	ror	w27, w22, #2
    6bb8:	eor	w27, w27, w22, ror #13
    6bbc:	eor	w27, w27, w22, ror #22
    6bc0:	add	w19, w27, w19
    6bc4:	mov	w27, #0x2138                	// #8504
    6bc8:	movk	w27, #0x2e1b, lsl #16
    6bcc:	add	w10, w10, w27
    6bd0:	add	w19, w19, w10
    6bd4:	add	w10, w10, w2
    6bd8:	add	w2, w25, w8
    6bdc:	bic	w8, w8, w10
    6be0:	and	w24, w11, w10
    6be4:	orr	w8, w24, w8
    6be8:	orr	w24, w19, w22
    6bec:	add	w8, w26, w8
    6bf0:	and	w24, w24, w12
    6bf4:	and	w26, w19, w22
    6bf8:	orr	w24, w24, w26
    6bfc:	ror	w26, w10, #6
    6c00:	eor	w26, w26, w10, ror #11
    6c04:	eor	w26, w26, w10, ror #25
    6c08:	add	w8, w8, w26
    6c0c:	ror	w26, w19, #2
    6c10:	eor	w26, w26, w19, ror #13
    6c14:	eor	w26, w26, w19, ror #22
    6c18:	add	w24, w26, w24
    6c1c:	mov	w26, #0x6dfc                	// #28156
    6c20:	movk	w26, #0x4d2c, lsl #16
    6c24:	add	w8, w8, w26
    6c28:	add	w24, w24, w8
    6c2c:	add	w8, w8, w14
    6c30:	ldr	w14, [sp, #48]
    6c34:	and	w25, w10, w8
    6c38:	ldr	w15, [sp, #56]
    6c3c:	add	w14, w14, w11
    6c40:	bic	w11, w11, w8
    6c44:	orr	w11, w25, w11
    6c48:	add	w11, w2, w11
    6c4c:	orr	w2, w24, w19
    6c50:	and	w2, w2, w22
    6c54:	and	w25, w24, w19
    6c58:	orr	w2, w2, w25
    6c5c:	ror	w25, w8, #6
    6c60:	eor	w25, w25, w8, ror #11
    6c64:	eor	w25, w25, w8, ror #25
    6c68:	add	w11, w11, w25
    6c6c:	ror	w25, w24, #2
    6c70:	eor	w25, w25, w24, ror #13
    6c74:	eor	w25, w25, w24, ror #22
    6c78:	add	w2, w25, w2
    6c7c:	mov	w25, #0xd13                 	// #3347
    6c80:	movk	w25, #0x5338, lsl #16
    6c84:	add	w11, w11, w25
    6c88:	add	w2, w2, w11
    6c8c:	add	w11, w11, w12
    6c90:	ldr	w12, [sp, #44]
    6c94:	and	w21, w8, w11
    6c98:	add	w7, w4, w11
    6c9c:	add	w12, w12, w10
    6ca0:	bic	w10, w10, w11
    6ca4:	orr	w10, w21, w10
    6ca8:	add	w10, w14, w10
    6cac:	orr	w14, w2, w24
    6cb0:	and	w14, w14, w19
    6cb4:	and	w21, w2, w24
    6cb8:	orr	w14, w14, w21
    6cbc:	ror	w21, w11, #6
    6cc0:	eor	w21, w21, w11, ror #11
    6cc4:	eor	w21, w21, w11, ror #25
    6cc8:	add	w10, w10, w21
    6ccc:	ror	w21, w2, #2
    6cd0:	eor	w21, w21, w2, ror #13
    6cd4:	eor	w21, w21, w2, ror #22
    6cd8:	add	w14, w21, w14
    6cdc:	mov	w21, #0x7354                	// #29524
    6ce0:	movk	w21, #0x650a, lsl #16
    6ce4:	add	w10, w10, w21
    6ce8:	add	w14, w14, w10
    6cec:	add	w10, w10, w22
    6cf0:	add	w21, w15, w8
    6cf4:	bic	w8, w8, w10
    6cf8:	and	w22, w11, w10
    6cfc:	orr	w8, w22, w8
    6d00:	add	w8, w12, w8
    6d04:	orr	w12, w14, w2
    6d08:	and	w12, w12, w24
    6d0c:	and	w22, w14, w2
    6d10:	orr	w12, w12, w22
    6d14:	ror	w22, w10, #6
    6d18:	eor	w22, w22, w10, ror #11
    6d1c:	eor	w22, w22, w10, ror #25
    6d20:	add	w8, w8, w22
    6d24:	ror	w22, w14, #2
    6d28:	eor	w22, w22, w14, ror #13
    6d2c:	eor	w22, w22, w14, ror #22
    6d30:	add	w12, w22, w12
    6d34:	mov	w22, #0xabb                 	// #2747
    6d38:	movk	w22, #0x766a, lsl #16
    6d3c:	add	w8, w8, w22
    6d40:	add	w12, w12, w8
    6d44:	add	w8, w8, w19
    6d48:	bic	w11, w11, w8
    6d4c:	and	w19, w10, w8
    6d50:	orr	w11, w19, w11
    6d54:	orr	w19, w12, w14
    6d58:	add	w11, w21, w11
    6d5c:	and	w19, w19, w2
    6d60:	and	w21, w12, w14
    6d64:	orr	w19, w19, w21
    6d68:	ror	w21, w8, #6
    6d6c:	eor	w21, w21, w8, ror #11
    6d70:	eor	w21, w21, w8, ror #25
    6d74:	add	w11, w11, w21
    6d78:	ror	w21, w12, #2
    6d7c:	eor	w21, w21, w12, ror #13
    6d80:	eor	w21, w21, w12, ror #22
    6d84:	add	w19, w21, w19
    6d88:	mov	w21, #0xc92e                	// #51502
    6d8c:	ldr	w15, [sp, #40]
    6d90:	movk	w21, #0x81c2, lsl #16
    6d94:	add	w11, w11, w21
    6d98:	add	w19, w19, w11
    6d9c:	add	w11, w11, w24
    6da0:	add	w20, w15, w10
    6da4:	bic	w10, w10, w11
    6da8:	and	w21, w8, w11
    6dac:	orr	w10, w21, w10
    6db0:	add	w10, w7, w10
    6db4:	orr	w7, w19, w12
    6db8:	and	w7, w7, w14
    6dbc:	and	w21, w19, w12
    6dc0:	orr	w7, w7, w21
    6dc4:	ror	w21, w11, #6
    6dc8:	eor	w21, w21, w11, ror #11
    6dcc:	eor	w21, w21, w11, ror #25
    6dd0:	add	w10, w10, w21
    6dd4:	ror	w21, w19, #2
    6dd8:	eor	w21, w21, w19, ror #13
    6ddc:	eor	w21, w21, w19, ror #22
    6de0:	add	w7, w21, w7
    6de4:	mov	w21, #0x2c85                	// #11397
    6de8:	movk	w21, #0x9272, lsl #16
    6dec:	add	w10, w10, w21
    6df0:	add	w7, w7, w10
    6df4:	add	w10, w10, w2
    6df8:	add	w1, w1, w8
    6dfc:	bic	w8, w8, w10
    6e00:	and	w2, w11, w10
    6e04:	orr	w8, w2, w8
    6e08:	orr	w2, w7, w19
    6e0c:	add	w8, w20, w8
    6e10:	and	w2, w2, w12
    6e14:	and	w20, w7, w19
    6e18:	orr	w2, w2, w20
    6e1c:	ror	w20, w10, #6
    6e20:	eor	w20, w20, w10, ror #11
    6e24:	eor	w20, w20, w10, ror #25
    6e28:	add	w8, w8, w20
    6e2c:	ror	w20, w7, #2
    6e30:	eor	w20, w20, w7, ror #13
    6e34:	eor	w20, w20, w7, ror #22
    6e38:	add	w2, w20, w2
    6e3c:	mov	w20, #0xe8a1                	// #59553
    6e40:	movk	w20, #0xa2bf, lsl #16
    6e44:	add	w8, w8, w20
    6e48:	add	w2, w2, w8
    6e4c:	add	w8, w8, w14
    6e50:	ldr	w14, [sp, #32]
    6e54:	and	w4, w10, w8
    6e58:	add	w14, w14, w11
    6e5c:	bic	w11, w11, w8
    6e60:	orr	w11, w4, w11
    6e64:	add	w11, w1, w11
    6e68:	orr	w1, w2, w7
    6e6c:	and	w1, w1, w19
    6e70:	and	w4, w2, w7
    6e74:	orr	w1, w1, w4
    6e78:	ror	w4, w8, #6
    6e7c:	eor	w4, w4, w8, ror #11
    6e80:	eor	w4, w4, w8, ror #25
    6e84:	add	w11, w11, w4
    6e88:	ror	w4, w2, #2
    6e8c:	eor	w4, w4, w2, ror #13
    6e90:	eor	w4, w4, w2, ror #22
    6e94:	add	w1, w4, w1
    6e98:	mov	w4, #0x664b                	// #26187
    6e9c:	movk	w4, #0xa81a, lsl #16
    6ea0:	add	w11, w11, w4
    6ea4:	add	w1, w1, w11
    6ea8:	add	w11, w11, w12
    6eac:	ldur	w12, [x29, #-112]
    6eb0:	and	w17, w8, w11
    6eb4:	add	w15, w30, w11
    6eb8:	add	w12, w12, w10
    6ebc:	bic	w10, w10, w11
    6ec0:	orr	w10, w17, w10
    6ec4:	add	w10, w14, w10
    6ec8:	orr	w14, w1, w2
    6ecc:	and	w14, w14, w7
    6ed0:	and	w17, w1, w2
    6ed4:	orr	w14, w14, w17
    6ed8:	ror	w17, w11, #6
    6edc:	eor	w17, w17, w11, ror #11
    6ee0:	eor	w17, w17, w11, ror #25
    6ee4:	add	w10, w10, w17
    6ee8:	ror	w17, w1, #2
    6eec:	eor	w17, w17, w1, ror #13
    6ef0:	eor	w17, w17, w1, ror #22
    6ef4:	add	w14, w17, w14
    6ef8:	mov	w17, #0x8b70                	// #35696
    6efc:	movk	w17, #0xc24b, lsl #16
    6f00:	add	w10, w10, w17
    6f04:	add	w14, w14, w10
    6f08:	add	w10, w10, w19
    6f0c:	add	w17, w18, w8
    6f10:	bic	w8, w8, w10
    6f14:	and	w18, w11, w10
    6f18:	orr	w8, w18, w8
    6f1c:	add	w8, w12, w8
    6f20:	orr	w12, w14, w1
    6f24:	and	w12, w12, w2
    6f28:	and	w18, w14, w1
    6f2c:	orr	w12, w12, w18
    6f30:	ror	w18, w10, #6
    6f34:	eor	w18, w18, w10, ror #11
    6f38:	eor	w18, w18, w10, ror #25
    6f3c:	add	w8, w8, w18
    6f40:	ror	w18, w14, #2
    6f44:	eor	w18, w18, w14, ror #13
    6f48:	eor	w18, w18, w14, ror #22
    6f4c:	add	w12, w18, w12
    6f50:	mov	w18, #0x51a3                	// #20899
    6f54:	movk	w18, #0xc76c, lsl #16
    6f58:	add	w8, w8, w18
    6f5c:	add	w12, w12, w8
    6f60:	add	w8, w8, w7
    6f64:	bic	w11, w11, w8
    6f68:	and	w18, w10, w8
    6f6c:	orr	w11, w18, w11
    6f70:	add	w11, w17, w11
    6f74:	orr	w17, w12, w14
    6f78:	and	w17, w17, w1
    6f7c:	and	w18, w12, w14
    6f80:	orr	w17, w17, w18
    6f84:	ror	w18, w8, #6
    6f88:	eor	w18, w18, w8, ror #11
    6f8c:	eor	w18, w18, w8, ror #25
    6f90:	add	w11, w11, w18
    6f94:	ror	w18, w12, #2
    6f98:	eor	w18, w18, w12, ror #13
    6f9c:	eor	w18, w18, w12, ror #22
    6fa0:	add	w17, w18, w17
    6fa4:	mov	w18, #0xe819                	// #59417
    6fa8:	movk	w18, #0xd192, lsl #16
    6fac:	add	w11, w11, w18
    6fb0:	add	w17, w17, w11
    6fb4:	add	w11, w11, w2
    6fb8:	add	w16, w16, w10
    6fbc:	bic	w10, w10, w11
    6fc0:	and	w18, w8, w11
    6fc4:	orr	w10, w18, w10
    6fc8:	add	w10, w15, w10
    6fcc:	orr	w15, w17, w12
    6fd0:	and	w15, w15, w14
    6fd4:	and	w18, w17, w12
    6fd8:	orr	w15, w15, w18
    6fdc:	ror	w18, w11, #6
    6fe0:	eor	w18, w18, w11, ror #11
    6fe4:	eor	w18, w18, w11, ror #25
    6fe8:	add	w10, w10, w18
    6fec:	ror	w18, w17, #2
    6ff0:	eor	w18, w18, w17, ror #13
    6ff4:	eor	w18, w18, w17, ror #22
    6ff8:	add	w15, w18, w15
    6ffc:	mov	w18, #0x624                 	// #1572
    7000:	movk	w18, #0xd699, lsl #16
    7004:	add	w10, w10, w18
    7008:	add	w15, w15, w10
    700c:	add	w10, w10, w1
    7010:	add	w18, w23, w8
    7014:	bic	w8, w8, w10
    7018:	and	w1, w11, w10
    701c:	orr	w8, w1, w8
    7020:	add	w8, w16, w8
    7024:	orr	w16, w15, w17
    7028:	and	w16, w16, w12
    702c:	and	w1, w15, w17
    7030:	orr	w16, w16, w1
    7034:	ror	w1, w10, #6
    7038:	eor	w1, w1, w10, ror #11
    703c:	eor	w1, w1, w10, ror #25
    7040:	add	w8, w8, w1
    7044:	ror	w1, w15, #2
    7048:	eor	w1, w1, w15, ror #13
    704c:	eor	w1, w1, w15, ror #22
    7050:	add	w16, w1, w16
    7054:	mov	w1, #0x3585                	// #13701
    7058:	movk	w1, #0xf40e, lsl #16
    705c:	add	w8, w8, w1
    7060:	add	w16, w16, w8
    7064:	add	w8, w8, w14
    7068:	ldr	w14, [sp, #24]
    706c:	and	w0, w10, w8
    7070:	add	w14, w14, w11
    7074:	bic	w11, w11, w8
    7078:	orr	w11, w0, w11
    707c:	add	w11, w18, w11
    7080:	orr	w18, w16, w15
    7084:	and	w18, w18, w17
    7088:	and	w0, w16, w15
    708c:	orr	w18, w18, w0
    7090:	ror	w0, w8, #6
    7094:	eor	w0, w0, w8, ror #11
    7098:	eor	w0, w0, w8, ror #25
    709c:	add	w11, w11, w0
    70a0:	ror	w0, w16, #2
    70a4:	eor	w0, w0, w16, ror #13
    70a8:	eor	w0, w0, w16, ror #22
    70ac:	add	w18, w0, w18
    70b0:	mov	w0, #0xa070                	// #41072
    70b4:	movk	w0, #0x106a, lsl #16
    70b8:	add	w11, w11, w0
    70bc:	add	w18, w18, w11
    70c0:	add	w11, w11, w12
    70c4:	ldur	w12, [x29, #-104]
    70c8:	and	w0, w8, w11
    70cc:	add	w12, w12, w10
    70d0:	bic	w10, w10, w11
    70d4:	orr	w10, w0, w10
    70d8:	add	w10, w14, w10
    70dc:	orr	w14, w18, w16
    70e0:	and	w14, w14, w15
    70e4:	and	w0, w18, w16
    70e8:	orr	w14, w14, w0
    70ec:	ror	w0, w11, #6
    70f0:	eor	w0, w0, w11, ror #11
    70f4:	eor	w0, w0, w11, ror #25
    70f8:	add	w10, w10, w0
    70fc:	ror	w0, w18, #2
    7100:	eor	w0, w0, w18, ror #13
    7104:	eor	w0, w0, w18, ror #22
    7108:	add	w14, w0, w14
    710c:	mov	w0, #0xc116                	// #49430
    7110:	movk	w0, #0x19a4, lsl #16
    7114:	add	w10, w10, w0
    7118:	add	w14, w14, w10
    711c:	add	w10, w10, w17
    7120:	ldr	w17, [sp, #60]
    7124:	and	w0, w11, w10
    7128:	add	w17, w17, w8
    712c:	bic	w8, w8, w10
    7130:	orr	w8, w0, w8
    7134:	add	w8, w12, w8
    7138:	orr	w12, w14, w18
    713c:	and	w12, w12, w16
    7140:	and	w0, w14, w18
    7144:	orr	w12, w12, w0
    7148:	ror	w0, w10, #6
    714c:	eor	w0, w0, w10, ror #11
    7150:	eor	w0, w0, w10, ror #25
    7154:	add	w8, w8, w0
    7158:	ror	w0, w14, #2
    715c:	eor	w0, w0, w14, ror #13
    7160:	eor	w0, w0, w14, ror #22
    7164:	add	w12, w0, w12
    7168:	mov	w0, #0x6c08                	// #27656
    716c:	movk	w0, #0x1e37, lsl #16
    7170:	add	w8, w8, w0
    7174:	add	w12, w12, w8
    7178:	add	w8, w8, w15
    717c:	ldr	w15, [sp, #84]
    7180:	and	w0, w10, w8
    7184:	add	w15, w15, w11
    7188:	bic	w11, w11, w8
    718c:	orr	w11, w0, w11
    7190:	add	w11, w17, w11
    7194:	orr	w17, w12, w14
    7198:	and	w17, w17, w18
    719c:	and	w0, w12, w14
    71a0:	orr	w17, w17, w0
    71a4:	ror	w0, w8, #6
    71a8:	eor	w0, w0, w8, ror #11
    71ac:	eor	w0, w0, w8, ror #25
    71b0:	add	w11, w11, w0
    71b4:	ror	w0, w12, #2
    71b8:	eor	w0, w0, w12, ror #13
    71bc:	eor	w0, w0, w12, ror #22
    71c0:	add	w17, w0, w17
    71c4:	mov	w0, #0x774c                	// #30540
    71c8:	movk	w0, #0x2748, lsl #16
    71cc:	add	w11, w11, w0
    71d0:	ldr	w0, [sp, #36]
    71d4:	add	w17, w17, w11
    71d8:	add	w11, w11, w16
    71dc:	and	w16, w8, w11
    71e0:	add	w0, w0, w10
    71e4:	bic	w10, w10, w11
    71e8:	orr	w10, w16, w10
    71ec:	add	w10, w15, w10
    71f0:	orr	w15, w17, w12
    71f4:	and	w16, w17, w12
    71f8:	and	w15, w15, w14
    71fc:	orr	w15, w15, w16
    7200:	ror	w16, w11, #6
    7204:	eor	w16, w16, w11, ror #11
    7208:	eor	w16, w16, w11, ror #25
    720c:	add	w10, w10, w16
    7210:	ror	w16, w17, #2
    7214:	eor	w16, w16, w17, ror #13
    7218:	eor	w16, w16, w17, ror #22
    721c:	add	w15, w16, w15
    7220:	mov	w16, #0xbcb5                	// #48309
    7224:	movk	w16, #0x34b0, lsl #16
    7228:	add	w10, w10, w16
    722c:	ldr	w16, [sp, #52]
    7230:	add	w15, w15, w10
    7234:	add	w10, w10, w18
    7238:	and	w18, w11, w10
    723c:	add	w16, w16, w8
    7240:	bic	w8, w8, w10
    7244:	orr	w8, w18, w8
    7248:	add	w8, w0, w8
    724c:	orr	w0, w15, w17
    7250:	and	w18, w15, w17
    7254:	and	w0, w0, w12
    7258:	orr	w18, w0, w18
    725c:	ror	w0, w10, #6
    7260:	eor	w0, w0, w10, ror #11
    7264:	eor	w0, w0, w10, ror #25
    7268:	add	w8, w8, w0
    726c:	ror	w0, w15, #2
    7270:	eor	w0, w0, w15, ror #13
    7274:	eor	w0, w0, w15, ror #22
    7278:	add	w18, w0, w18
    727c:	mov	w0, #0xcb3                 	// #3251
    7280:	movk	w0, #0x391c, lsl #16
    7284:	add	w8, w8, w0
    7288:	ldr	w0, [sp, #28]
    728c:	add	w18, w18, w8
    7290:	add	w8, w8, w14
    7294:	and	w14, w10, w8
    7298:	add	w0, w0, w11
    729c:	bic	w11, w11, w8
    72a0:	orr	w11, w14, w11
    72a4:	add	w11, w16, w11
    72a8:	orr	w16, w18, w15
    72ac:	and	w14, w18, w15
    72b0:	and	w16, w16, w17
    72b4:	orr	w14, w16, w14
    72b8:	ror	w16, w8, #6
    72bc:	eor	w16, w16, w8, ror #11
    72c0:	eor	w16, w16, w8, ror #25
    72c4:	add	w11, w11, w16
    72c8:	ror	w16, w18, #2
    72cc:	eor	w16, w16, w18, ror #13
    72d0:	eor	w16, w16, w18, ror #22
    72d4:	add	w14, w16, w14
    72d8:	mov	w16, #0xaa4a                	// #43594
    72dc:	movk	w16, #0x4ed8, lsl #16
    72e0:	add	w11, w11, w16
    72e4:	add	w14, w14, w11
    72e8:	add	w11, w11, w12
    72ec:	add	w16, w5, w10
    72f0:	bic	w10, w10, w11
    72f4:	and	w12, w8, w11
    72f8:	orr	w10, w12, w10
    72fc:	add	w10, w0, w10
    7300:	orr	w0, w14, w18
    7304:	and	w12, w14, w18
    7308:	and	w0, w0, w15
    730c:	orr	w12, w0, w12
    7310:	ror	w0, w11, #6
    7314:	eor	w0, w0, w11, ror #11
    7318:	eor	w0, w0, w11, ror #25
    731c:	add	w10, w10, w0
    7320:	ror	w0, w14, #2
    7324:	eor	w0, w0, w14, ror #13
    7328:	eor	w0, w0, w14, ror #22
    732c:	add	w12, w0, w12
    7330:	mov	w0, #0xca4f                	// #51791
    7334:	movk	w0, #0x5b9c, lsl #16
    7338:	add	w10, w10, w0
    733c:	add	w12, w12, w10
    7340:	add	w10, w10, w17
    7344:	add	w0, w6, w8
    7348:	bic	w8, w8, w10
    734c:	and	w17, w11, w10
    7350:	orr	w8, w17, w8
    7354:	add	w8, w16, w8
    7358:	orr	w16, w12, w14
    735c:	and	w17, w12, w14
    7360:	and	w16, w16, w18
    7364:	orr	w16, w16, w17
    7368:	ror	w17, w10, #6
    736c:	eor	w17, w17, w10, ror #11
    7370:	eor	w17, w17, w10, ror #25
    7374:	add	w8, w8, w17
    7378:	ror	w17, w12, #2
    737c:	eor	w17, w17, w12, ror #13
    7380:	eor	w17, w17, w12, ror #22
    7384:	add	w16, w17, w16
    7388:	mov	w17, #0x6ff3                	// #28659
    738c:	movk	w17, #0x682e, lsl #16
    7390:	add	w8, w8, w17
    7394:	ldr	w17, [sp, #92]
    7398:	add	w16, w16, w8
    739c:	add	w8, w8, w15
    73a0:	and	w15, w10, w8
    73a4:	add	w17, w17, w11
    73a8:	bic	w11, w11, w8
    73ac:	orr	w11, w15, w11
    73b0:	add	w11, w0, w11
    73b4:	orr	w0, w16, w12
    73b8:	and	w15, w16, w12
    73bc:	and	w0, w0, w14
    73c0:	orr	w15, w0, w15
    73c4:	ror	w0, w8, #6
    73c8:	eor	w0, w0, w8, ror #11
    73cc:	eor	w0, w0, w8, ror #25
    73d0:	add	w11, w11, w0
    73d4:	ror	w0, w16, #2
    73d8:	eor	w0, w0, w16, ror #13
    73dc:	eor	w0, w0, w16, ror #22
    73e0:	add	w15, w0, w15
    73e4:	mov	w0, #0x82ee                	// #33518
    73e8:	movk	w0, #0x748f, lsl #16
    73ec:	add	w11, w11, w0
    73f0:	ldr	w0, [sp, #112]
    73f4:	add	w15, w15, w11
    73f8:	add	w11, w11, w18
    73fc:	and	w18, w8, w11
    7400:	add	w0, w0, w10
    7404:	bic	w10, w10, w11
    7408:	orr	w10, w18, w10
    740c:	add	w10, w17, w10
    7410:	orr	w17, w15, w16
    7414:	and	w18, w15, w16
    7418:	and	w17, w17, w12
    741c:	orr	w17, w17, w18
    7420:	ror	w18, w11, #6
    7424:	eor	w18, w18, w11, ror #11
    7428:	eor	w18, w18, w11, ror #25
    742c:	add	w10, w10, w18
    7430:	ror	w18, w15, #2
    7434:	eor	w18, w18, w15, ror #13
    7438:	eor	w18, w18, w15, ror #22
    743c:	add	w17, w18, w17
    7440:	mov	w18, #0x636f                	// #25455
    7444:	movk	w18, #0x78a5, lsl #16
    7448:	add	w10, w10, w18
    744c:	add	w17, w17, w10
    7450:	add	w10, w10, w14
    7454:	add	w18, w3, w8
    7458:	bic	w8, w8, w10
    745c:	and	w14, w11, w10
    7460:	orr	w8, w14, w8
    7464:	add	w8, w0, w8
    7468:	orr	w0, w17, w15
    746c:	and	w14, w17, w15
    7470:	and	w0, w0, w16
    7474:	orr	w14, w0, w14
    7478:	ror	w0, w10, #6
    747c:	eor	w0, w0, w10, ror #11
    7480:	eor	w0, w0, w10, ror #25
    7484:	add	w8, w8, w0
    7488:	ror	w0, w17, #2
    748c:	eor	w0, w0, w17, ror #13
    7490:	eor	w0, w0, w17, ror #22
    7494:	add	w14, w0, w14
    7498:	mov	w0, #0x7814                	// #30740
    749c:	movk	w0, #0x84c8, lsl #16
    74a0:	add	w8, w8, w0
    74a4:	ldr	w0, [sp, #64]
    74a8:	add	w14, w14, w8
    74ac:	add	w8, w8, w12
    74b0:	and	w12, w10, w8
    74b4:	add	w0, w0, w11
    74b8:	bic	w11, w11, w8
    74bc:	orr	w11, w12, w11
    74c0:	add	w11, w18, w11
    74c4:	orr	w18, w14, w17
    74c8:	and	w12, w14, w17
    74cc:	and	w18, w18, w15
    74d0:	orr	w12, w18, w12
    74d4:	ror	w18, w8, #6
    74d8:	eor	w18, w18, w8, ror #11
    74dc:	eor	w18, w18, w8, ror #25
    74e0:	add	w11, w11, w18
    74e4:	ror	w18, w14, #2
    74e8:	eor	w18, w18, w14, ror #13
    74ec:	eor	w18, w18, w14, ror #22
    74f0:	add	w12, w18, w12
    74f4:	mov	w18, #0x208                 	// #520
    74f8:	movk	w18, #0x8cc7, lsl #16
    74fc:	add	w11, w11, w18
    7500:	add	w12, w12, w11
    7504:	add	w11, w11, w16
    7508:	add	w13, w13, w10
    750c:	bic	w10, w10, w11
    7510:	and	w16, w8, w11
    7514:	orr	w18, w12, w14
    7518:	orr	w10, w16, w10
    751c:	and	w16, w12, w14
    7520:	and	w18, w18, w17
    7524:	orr	w16, w18, w16
    7528:	ror	w18, w11, #6
    752c:	eor	w18, w18, w11, ror #11
    7530:	add	w10, w0, w10
    7534:	eor	w18, w18, w11, ror #25
    7538:	add	w10, w10, w18
    753c:	ror	w18, w12, #2
    7540:	eor	w18, w18, w12, ror #13
    7544:	eor	w18, w18, w12, ror #22
    7548:	add	w16, w18, w16
    754c:	mov	w18, #0xfffa                	// #65530
    7550:	movk	w18, #0x90be, lsl #16
    7554:	add	w10, w10, w18
    7558:	ldur	w18, [x29, #-88]
    755c:	add	w16, w16, w10
    7560:	add	w10, w10, w15
    7564:	and	w15, w11, w10
    7568:	add	w18, w18, w8
    756c:	bic	w8, w8, w10
    7570:	orr	w8, w15, w8
    7574:	add	w8, w13, w8
    7578:	orr	w13, w16, w12
    757c:	and	w15, w16, w12
    7580:	and	w13, w13, w14
    7584:	orr	w13, w13, w15
    7588:	ror	w15, w10, #6
    758c:	eor	w15, w15, w10, ror #11
    7590:	eor	w15, w15, w10, ror #25
    7594:	add	w8, w8, w15
    7598:	ror	w15, w16, #2
    759c:	eor	w15, w15, w16, ror #13
    75a0:	eor	w15, w15, w16, ror #22
    75a4:	add	w13, w15, w13
    75a8:	mov	w15, #0x6ceb                	// #27883
    75ac:	movk	w15, #0xa450, lsl #16
    75b0:	add	w8, w8, w15
    75b4:	ldr	w15, [sp, #140]
    75b8:	add	w13, w13, w8
    75bc:	add	w8, w8, w17
    75c0:	add	w9, w9, w11
    75c4:	bic	w11, w11, w8
    75c8:	and	w17, w10, w8
    75cc:	orr	w11, w17, w11
    75d0:	orr	w17, w13, w16
    75d4:	add	w15, w12, w15
    75d8:	and	w12, w17, w12
    75dc:	ldur	w17, [x29, #-140]
    75e0:	ldur	x0, [x29, #-120]
    75e4:	add	w11, w18, w11
    75e8:	add	w17, w13, w17
    75ec:	str	w17, [x0, #24]
    75f0:	ldur	w17, [x29, #-132]
    75f4:	add	w17, w16, w17
    75f8:	str	w17, [x0, #28]
    75fc:	ldur	w17, [x29, #-128]
    7600:	add	w17, w8, w17
    7604:	str	w17, [x0, #40]
    7608:	ldur	w17, [x29, #-124]
    760c:	add	w17, w10, w17
    7610:	str	w17, [x0, #44]
    7614:	and	w17, w13, w16
    7618:	orr	w12, w12, w17
    761c:	ror	w17, w8, #6
    7620:	eor	w17, w17, w8, ror #11
    7624:	eor	w17, w17, w8, ror #25
    7628:	add	w11, w11, w17
    762c:	ror	w17, w13, #2
    7630:	eor	w17, w17, w13, ror #13
    7634:	eor	w17, w17, w13, ror #22
    7638:	add	w12, w17, w12
    763c:	mov	w17, #0xa3f7                	// #41975
    7640:	movk	w17, #0xbef9, lsl #16
    7644:	add	w11, w11, w17
    7648:	add	w12, w12, w11
    764c:	add	w11, w11, w14
    7650:	bic	w10, w10, w11
    7654:	and	w8, w8, w11
    7658:	orr	w8, w8, w10
    765c:	orr	w10, w12, w13
    7660:	and	w10, w10, w16
    7664:	ldur	w16, [x29, #-136]
    7668:	ror	w14, w11, #6
    766c:	eor	w14, w14, w11, ror #11
    7670:	add	w8, w9, w8
    7674:	add	w16, w11, w16
    7678:	eor	w11, w14, w11, ror #25
    767c:	add	w8, w8, w11
    7680:	ldr	w11, [sp, #136]
    7684:	and	w13, w12, w13
    7688:	ror	w9, w12, #2
    768c:	ldr	w14, [sp, #144]
    7690:	orr	w10, w10, w13
    7694:	eor	w9, w9, w12, ror #13
    7698:	add	w10, w10, w11
    769c:	mov	w11, #0x78f2                	// #30962
    76a0:	eor	w9, w9, w12, ror #22
    76a4:	movk	w11, #0xc671, lsl #16
    76a8:	add	w8, w8, w11
    76ac:	add	w9, w10, w9
    76b0:	add	w14, w12, w14
    76b4:	add	w9, w9, w8
    76b8:	add	w8, w15, w8
    76bc:	stp	w9, w14, [x0, #16]
    76c0:	stp	w8, w16, [x0, #32]
    76c4:	adrp	x9, 18000 <boot_Digest__SHA@@Base+0x170cc>
    76c8:	ldur	x8, [x29, #-16]
    76cc:	ldr	x9, [x9, #4056]
    76d0:	ldr	x9, [x9]
    76d4:	cmp	x9, x8
    76d8:	b.ne	76fc <boot_Digest__SHA@@Base+0x67c8>  // b.any
    76dc:	ldp	x20, x19, [sp, #368]
    76e0:	ldp	x22, x21, [sp, #352]
    76e4:	ldp	x24, x23, [sp, #336]
    76e8:	ldp	x26, x25, [sp, #320]
    76ec:	ldp	x28, x27, [sp, #304]
    76f0:	ldp	x29, x30, [sp, #288]
    76f4:	add	sp, sp, #0x180
    76f8:	ret
    76fc:	bl	d80 <__stack_chk_fail@plt>
    7700:	stp	x29, x30, [sp, #-64]!
    7704:	stp	x28, x23, [sp, #16]
    7708:	stp	x22, x21, [sp, #32]
    770c:	stp	x20, x19, [sp, #48]
    7710:	mov	x29, sp
    7714:	sub	sp, sp, #0x290
    7718:	adrp	x9, 18000 <boot_Digest__SHA@@Base+0x170cc>
    771c:	ldr	x9, [x9, #4056]
    7720:	mov	x8, xzr
    7724:	ldr	x9, [x9]
    7728:	stur	x9, [x29, #-8]
    772c:	add	x9, sp, #0x8
    7730:	ldr	x10, [x1, x8]
    7734:	rev	x10, x10
    7738:	str	x10, [x9, x8]
    773c:	add	x8, x8, #0x8
    7740:	cmp	w8, #0x80
    7744:	b.ne	7730 <boot_Digest__SHA@@Base+0x67fc>  // b.any
    7748:	ldr	x10, [sp, #8]
    774c:	add	x9, sp, #0x8
    7750:	mov	x8, xzr
    7754:	add	x9, x9, #0x80
    7758:	add	x11, x9, x8
    775c:	ldur	x13, [x11, #-56]
    7760:	ldur	x12, [x11, #-16]
    7764:	add	x8, x8, #0x8
    7768:	cmp	x8, #0x200
    776c:	add	x10, x10, x13
    7770:	ldur	x13, [x11, #-120]
    7774:	ror	x14, x12, #61
    7778:	eor	x14, x14, x12, lsr #6
    777c:	eor	x12, x14, x12, ror #19
    7780:	add	x10, x10, x12
    7784:	ror	x12, x13, #8
    7788:	eor	x12, x12, x13, lsr #7
    778c:	eor	x12, x12, x13, ror #1
    7790:	add	x10, x10, x12
    7794:	str	x10, [x11]
    7798:	mov	x10, x13
    779c:	b.ne	7758 <boot_Digest__SHA@@Base+0x6824>  // b.any
    77a0:	ldp	x15, x8, [x0, #48]
    77a4:	ldp	x9, x10, [x0, #64]
    77a8:	ldp	x11, x12, [x0, #80]
    77ac:	ldp	x13, x14, [x0, #96]
    77b0:	adrp	x17, 8000 <boot_Digest__SHA@@Base+0x70cc>
    77b4:	mov	x16, xzr
    77b8:	add	x17, x17, #0x798
    77bc:	add	x1, sp, #0x8
    77c0:	mov	x20, x15
    77c4:	mov	x3, x8
    77c8:	mov	x19, x14
    77cc:	mov	x22, x13
    77d0:	mov	x23, x12
    77d4:	mov	x21, x11
    77d8:	mov	x7, x10
    77dc:	mov	x6, x9
    77e0:	mov	x5, x6
    77e4:	mov	x4, x21
    77e8:	mov	x6, x3
    77ec:	mov	x3, x20
    77f0:	ror	x20, x21, #14
    77f4:	eor	x20, x20, x4, ror #18
    77f8:	mov	x18, x22
    77fc:	bic	x21, x22, x21
    7800:	and	x22, x23, x4
    7804:	eor	x20, x20, x4, ror #41
    7808:	orr	x21, x22, x21
    780c:	orr	x22, x3, x6
    7810:	add	x19, x20, x19
    7814:	ror	x20, x3, #28
    7818:	mov	x2, x23
    781c:	and	x23, x3, x6
    7820:	and	x22, x22, x5
    7824:	eor	x20, x20, x3, ror #34
    7828:	orr	x22, x22, x23
    782c:	ldr	x23, [x17, x16]
    7830:	eor	x20, x20, x3, ror #39
    7834:	add	x20, x20, x22
    7838:	ldr	x22, [x1, x16]
    783c:	add	x19, x19, x21
    7840:	add	x19, x19, x23
    7844:	add	x16, x16, #0x8
    7848:	add	x19, x19, x22
    784c:	cmp	x16, #0x280
    7850:	add	x21, x19, x7
    7854:	add	x20, x20, x19
    7858:	mov	x19, x18
    785c:	mov	x22, x2
    7860:	mov	x23, x4
    7864:	mov	x7, x5
    7868:	b.ne	77e0 <boot_Digest__SHA@@Base+0x68ac>  // b.any
    786c:	add	x15, x20, x15
    7870:	add	x8, x3, x8
    7874:	add	x9, x6, x9
    7878:	add	x10, x5, x10
    787c:	add	x11, x21, x11
    7880:	add	x12, x4, x12
    7884:	add	x13, x2, x13
    7888:	add	x14, x18, x14
    788c:	stp	x15, x8, [x0, #48]
    7890:	stp	x9, x10, [x0, #64]
    7894:	stp	x11, x12, [x0, #80]
    7898:	stp	x13, x14, [x0, #96]
    789c:	adrp	x9, 18000 <boot_Digest__SHA@@Base+0x170cc>
    78a0:	ldur	x8, [x29, #-8]
    78a4:	ldr	x9, [x9, #4056]
    78a8:	ldr	x9, [x9]
    78ac:	cmp	x9, x8
    78b0:	b.ne	78cc <boot_Digest__SHA@@Base+0x6998>  // b.any
    78b4:	add	sp, sp, #0x290
    78b8:	ldp	x20, x19, [sp, #48]
    78bc:	ldp	x22, x21, [sp, #32]
    78c0:	ldp	x28, x23, [sp, #16]
    78c4:	ldp	x29, x30, [sp], #64
    78c8:	ret
    78cc:	bl	d80 <__stack_chk_fail@plt>
    78d0:	stp	x29, x30, [sp, #-64]!
    78d4:	stp	x20, x19, [sp, #48]
    78d8:	mov	x19, x1
    78dc:	stp	x24, x23, [sp, #16]
    78e0:	stp	x22, x21, [sp, #32]
    78e4:	mov	x29, sp
    78e8:	cbz	x1, 7af4 <boot_Digest__SHA@@Base+0x6bc0>
    78ec:	ldr	w8, [x2, #260]
    78f0:	mov	x20, x2
    78f4:	mov	x21, x0
    78f8:	add	w8, w8, w19
    78fc:	cmp	x8, x19
    7900:	str	w8, [x2, #260]
    7904:	b.cs	7934 <boot_Digest__SHA@@Base+0x6a00>  // b.hs, b.nlast
    7908:	ldr	w8, [x20, #256]
    790c:	adds	w8, w8, #0x1
    7910:	str	w8, [x20, #256]
    7914:	b.cc	7934 <boot_Digest__SHA@@Base+0x6a00>  // b.lo, b.ul, b.last
    7918:	ldr	w8, [x20, #252]
    791c:	adds	w8, w8, #0x1
    7920:	str	w8, [x20, #252]
    7924:	b.cc	7934 <boot_Digest__SHA@@Base+0x6a00>  // b.lo, b.ul, b.last
    7928:	ldr	w8, [x20, #248]
    792c:	add	w8, w8, #0x1
    7930:	str	w8, [x20, #248]
    7934:	ldr	w8, [x20, #240]
    7938:	cbz	w8, 79d0 <boot_Digest__SHA@@Base+0x6a9c>
    793c:	tst	w8, #0x7
    7940:	b.eq	79e8 <boot_Digest__SHA@@Base+0x6ab4>  // b.none
    7944:	mov	x23, xzr
    7948:	add	x22, x20, #0x70
    794c:	mov	w24, #0x1                   	// #1
    7950:	b	7960 <boot_Digest__SHA@@Base+0x6a2c>
    7954:	add	x23, x23, #0x1
    7958:	cmp	x19, x23
    795c:	b.eq	7af4 <boot_Digest__SHA@@Base+0x6bc0>  // b.none
    7960:	lsr	x9, x23, #3
    7964:	mvn	w11, w8
    7968:	lsr	w8, w8, #3
    796c:	ldrb	w9, [x21, x9]
    7970:	add	x8, x20, x8
    7974:	ldrb	w12, [x8, #112]
    7978:	mvn	w10, w23
    797c:	and	w10, w10, #0x7
    7980:	and	w11, w11, #0x7
    7984:	lsl	w11, w24, w11
    7988:	lsr	w9, w9, w10
    798c:	orr	w10, w12, w11
    7990:	bic	w11, w12, w11
    7994:	tst	w9, #0x1
    7998:	csel	w9, w11, w10, eq  // eq = none
    799c:	strb	w9, [x8, #112]
    79a0:	ldp	w8, w9, [x20, #240]
    79a4:	add	w8, w8, #0x1
    79a8:	cmp	w8, w9
    79ac:	str	w8, [x20, #240]
    79b0:	b.ne	7954 <boot_Digest__SHA@@Base+0x6a20>  // b.any
    79b4:	ldr	x8, [x20, #8]
    79b8:	mov	x0, x20
    79bc:	mov	x1, x22
    79c0:	blr	x8
    79c4:	mov	w8, wzr
    79c8:	str	wzr, [x20, #240]
    79cc:	b	7954 <boot_Digest__SHA@@Base+0x6a20>
    79d0:	ldr	w8, [x20, #244]
    79d4:	cmp	x8, x19
    79d8:	b.ls	7a24 <boot_Digest__SHA@@Base+0x6af0>  // b.plast
    79dc:	mov	w23, w19
    79e0:	mov	x22, x19
    79e4:	b	7a54 <boot_Digest__SHA@@Base+0x6b20>
    79e8:	ldr	w10, [x20, #244]
    79ec:	add	x9, x8, x19
    79f0:	cmp	x9, x10
    79f4:	lsr	x9, x8, #3
    79f8:	b.cs	7a70 <boot_Digest__SHA@@Base+0x6b3c>  // b.hs, b.nlast
    79fc:	add	x8, x20, x9
    7a00:	add	x9, x19, #0x7
    7a04:	add	x0, x8, #0x70
    7a08:	lsr	x2, x9, #3
    7a0c:	mov	x1, x21
    7a10:	bl	c90 <memcpy@plt>
    7a14:	ldr	w8, [x20, #240]
    7a18:	add	w8, w8, w19
    7a1c:	str	w8, [x20, #240]
    7a20:	b	7af4 <boot_Digest__SHA@@Base+0x6bc0>
    7a24:	mov	x22, x19
    7a28:	ldr	x8, [x20, #8]
    7a2c:	mov	x0, x20
    7a30:	mov	x1, x21
    7a34:	blr	x8
    7a38:	ldr	w8, [x20, #244]
    7a3c:	sub	x22, x22, x8
    7a40:	cmp	x22, x8
    7a44:	add	x21, x21, x8, lsr #3
    7a48:	b.cs	7a28 <boot_Digest__SHA@@Base+0x6af4>  // b.hs, b.nlast
    7a4c:	cbz	x22, 7af4 <boot_Digest__SHA@@Base+0x6bc0>
    7a50:	mov	w23, w22
    7a54:	add	x8, x22, #0x7
    7a58:	add	x0, x20, #0x70
    7a5c:	lsr	x2, x8, #3
    7a60:	mov	x1, x21
    7a64:	bl	c90 <memcpy@plt>
    7a68:	str	w23, [x20, #240]
    7a6c:	b	7af4 <boot_Digest__SHA@@Base+0x6bc0>
    7a70:	sub	w24, w10, w8
    7a74:	add	x22, x20, #0x70
    7a78:	lsr	w23, w24, #3
    7a7c:	add	x0, x22, x9
    7a80:	mov	x1, x21
    7a84:	mov	x2, x23
    7a88:	bl	c90 <memcpy@plt>
    7a8c:	ldr	x8, [x20, #8]
    7a90:	mov	x0, x20
    7a94:	mov	x1, x22
    7a98:	sub	x24, x19, x24
    7a9c:	add	x21, x21, x23
    7aa0:	blr	x8
    7aa4:	ldr	w8, [x20, #244]
    7aa8:	str	wzr, [x20, #240]
    7aac:	cmp	x24, x8
    7ab0:	b.cc	7ad8 <boot_Digest__SHA@@Base+0x6ba4>  // b.lo, b.ul, b.last
    7ab4:	ldr	x8, [x20, #8]
    7ab8:	mov	x0, x20
    7abc:	mov	x1, x21
    7ac0:	blr	x8
    7ac4:	ldr	w8, [x20, #244]
    7ac8:	sub	x24, x24, x8
    7acc:	cmp	x24, x8
    7ad0:	add	x21, x21, x8, lsr #3
    7ad4:	b.cs	7ab4 <boot_Digest__SHA@@Base+0x6b80>  // b.hs, b.nlast
    7ad8:	cbz	x24, 7af4 <boot_Digest__SHA@@Base+0x6bc0>
    7adc:	add	x8, x24, #0x7
    7ae0:	lsr	x2, x8, #3
    7ae4:	mov	x0, x22
    7ae8:	mov	x1, x21
    7aec:	bl	c90 <memcpy@plt>
    7af0:	str	w24, [x20, #240]
    7af4:	mov	x0, x19
    7af8:	ldp	x20, x19, [sp, #48]
    7afc:	ldp	x22, x21, [sp, #32]
    7b00:	ldp	x24, x23, [sp, #16]
    7b04:	ldp	x29, x30, [sp], #64
    7b08:	ret
    7b0c:	stp	x29, x30, [sp, #-64]!
    7b10:	str	x23, [sp, #16]
    7b14:	stp	x22, x21, [sp, #32]
    7b18:	stp	x20, x19, [sp, #48]
    7b1c:	ldp	w12, w11, [x0, #240]
    7b20:	mov	w8, #0x380                 	// #896
    7b24:	mov	w9, #0x1c0                 	// #448
    7b28:	add	x20, x0, #0x70
    7b2c:	cmp	w11, #0x200
    7b30:	mvn	w11, w12
    7b34:	lsr	x12, x12, #3
    7b38:	csel	w23, w9, w8, eq  // eq = none
    7b3c:	ldrb	w8, [x20, x12]
    7b40:	mov	w10, #0x78                  	// #120
    7b44:	mov	w13, #0x38                  	// #56
    7b48:	csel	x21, x13, x10, eq  // eq = none
    7b4c:	and	w10, w11, #0x7
    7b50:	mov	w9, #0x1                   	// #1
    7b54:	lsl	w10, w9, w10
    7b58:	orr	w8, w8, w10
    7b5c:	strb	w8, [x20, x12]
    7b60:	ldr	w8, [x0, #240]
    7b64:	mov	w10, #0x7c                  	// #124
    7b68:	mov	w11, #0x3c                  	// #60
    7b6c:	mov	x19, x0
    7b70:	add	w8, w8, #0x1
    7b74:	csel	x22, x11, x10, eq  // eq = none
    7b78:	cmp	w8, w23
    7b7c:	mov	x29, sp
    7b80:	str	w8, [x0, #240]
    7b84:	b.ls	7bc8 <boot_Digest__SHA@@Base+0x6c94>  // b.plast
    7b88:	ldr	w10, [x19, #244]
    7b8c:	cmp	w8, w10
    7b90:	b.cs	7bd4 <boot_Digest__SHA@@Base+0x6ca0>  // b.hs, b.nlast
    7b94:	lsr	w10, w8, #3
    7b98:	add	x10, x19, x10
    7b9c:	ldrb	w11, [x10, #112]
    7ba0:	mvn	w8, w8
    7ba4:	and	w8, w8, #0x7
    7ba8:	lsl	w8, w9, w8
    7bac:	bic	w8, w11, w8
    7bb0:	strb	w8, [x10, #112]
    7bb4:	ldr	w8, [x19, #240]
    7bb8:	add	w8, w8, #0x1
    7bbc:	cmp	w8, w23
    7bc0:	str	w8, [x19, #240]
    7bc4:	b.hi	7b88 <boot_Digest__SHA@@Base+0x6c54>  // b.pmore
    7bc8:	cmp	w8, w23
    7bcc:	b.cc	7bec <boot_Digest__SHA@@Base+0x6cb8>  // b.lo, b.ul, b.last
    7bd0:	b	7c24 <boot_Digest__SHA@@Base+0x6cf0>
    7bd4:	ldr	x8, [x19, #8]
    7bd8:	mov	x0, x19
    7bdc:	mov	x1, x20
    7be0:	blr	x8
    7be4:	mov	w8, wzr
    7be8:	str	wzr, [x19, #240]
    7bec:	mov	w9, #0x1                   	// #1
    7bf0:	lsr	w10, w8, #3
    7bf4:	add	x10, x19, x10
    7bf8:	ldrb	w11, [x10, #112]
    7bfc:	mvn	w8, w8
    7c00:	and	w8, w8, #0x7
    7c04:	lsl	w8, w9, w8
    7c08:	bic	w8, w11, w8
    7c0c:	strb	w8, [x10, #112]
    7c10:	ldr	w8, [x19, #240]
    7c14:	add	w8, w8, #0x1
    7c18:	cmp	w8, w23
    7c1c:	str	w8, [x19, #240]
    7c20:	b.cc	7bf0 <boot_Digest__SHA@@Base+0x6cbc>  // b.lo, b.ul, b.last
    7c24:	ldr	w8, [x19, #244]
    7c28:	cmp	w8, #0x201
    7c2c:	b.cc	7c40 <boot_Digest__SHA@@Base+0x6d0c>  // b.lo, b.ul, b.last
    7c30:	ldp	w8, w9, [x19, #248]
    7c34:	rev	w8, w8
    7c38:	rev	w9, w9
    7c3c:	stp	w8, w9, [x19, #224]
    7c40:	ldr	w8, [x19, #256]
    7c44:	add	x9, x19, #0x70
    7c48:	mov	x0, x19
    7c4c:	mov	x1, x20
    7c50:	rev	w8, w8
    7c54:	str	w8, [x9, x21]
    7c58:	ldr	w8, [x19, #260]
    7c5c:	ldr	x23, [sp, #16]
    7c60:	rev	w8, w8
    7c64:	str	w8, [x9, x22]
    7c68:	ldr	x2, [x19, #8]
    7c6c:	ldp	x20, x19, [sp, #48]
    7c70:	ldp	x22, x21, [sp, #32]
    7c74:	ldp	x29, x30, [sp], #64
    7c78:	br	x2
    7c7c:	ldr	w8, [x0]
    7c80:	cmp	w8, #0x101
    7c84:	add	x8, x0, #0x108
    7c88:	b.ge	7ce4 <boot_Digest__SHA@@Base+0x6db0>  // b.tcont
    7c8c:	ldp	w9, w10, [x0, #16]
    7c90:	rev	w9, w9
    7c94:	str	w9, [x0, #264]
    7c98:	ldp	w11, w9, [x0, #24]
    7c9c:	rev	w10, w10
    7ca0:	str	w10, [x0, #268]
    7ca4:	rev	w11, w11
    7ca8:	str	w11, [x0, #272]
    7cac:	ldp	w10, w11, [x0, #32]
    7cb0:	rev	w9, w9
    7cb4:	str	w9, [x0, #276]
    7cb8:	rev	w10, w10
    7cbc:	str	w10, [x0, #280]
    7cc0:	ldp	w9, w10, [x0, #40]
    7cc4:	rev	w11, w11
    7cc8:	str	w11, [x0, #284]
    7ccc:	rev	w9, w9
    7cd0:	str	w9, [x0, #288]
    7cd4:	rev	w9, w10
    7cd8:	str	w9, [x0, #292]
    7cdc:	mov	x0, x8
    7ce0:	ret
    7ce4:	ldp	x9, x10, [x0, #48]
    7ce8:	ldp	x11, x12, [x0, #64]
    7cec:	ldr	x13, [x0, #80]
    7cf0:	rev	x9, x9
    7cf4:	rev	x10, x10
    7cf8:	stp	x9, x10, [x0, #264]
    7cfc:	rev	x10, x11
    7d00:	rev	x11, x12
    7d04:	stp	x10, x11, [x0, #280]
    7d08:	lsr	x10, x13, #56
    7d0c:	strb	w10, [x0, #296]
    7d10:	lsr	x10, x13, #48
    7d14:	ldr	w9, [x0, #80]
    7d18:	strb	w10, [x0, #297]
    7d1c:	lsr	x10, x13, #40
    7d20:	strb	w10, [x0, #298]
    7d24:	ldr	x10, [x0, #88]
    7d28:	rev	w9, w9
    7d2c:	str	w9, [x0, #300]
    7d30:	lsr	x11, x13, #32
    7d34:	lsr	x9, x10, #56
    7d38:	strb	w9, [x0, #304]
    7d3c:	lsr	x9, x10, #48
    7d40:	strb	w11, [x0, #299]
    7d44:	ldr	w11, [x0, #88]
    7d48:	strb	w9, [x0, #305]
    7d4c:	lsr	x9, x10, #40
    7d50:	strb	w9, [x0, #306]
    7d54:	ldr	x9, [x0, #96]
    7d58:	rev	w11, w11
    7d5c:	str	w11, [x0, #308]
    7d60:	lsr	x10, x10, #32
    7d64:	lsr	x11, x9, #56
    7d68:	strb	w11, [x0, #312]
    7d6c:	lsr	x11, x9, #48
    7d70:	strb	w10, [x0, #307]
    7d74:	ldr	w10, [x0, #96]
    7d78:	strb	w11, [x0, #313]
    7d7c:	lsr	x11, x9, #40
    7d80:	strb	w11, [x0, #314]
    7d84:	ldr	x11, [x0, #104]
    7d88:	lsr	x9, x9, #32
    7d8c:	strb	w9, [x0, #315]
    7d90:	ldr	w9, [x0, #104]
    7d94:	rev	w10, w10
    7d98:	str	w10, [x0, #316]
    7d9c:	lsr	x10, x11, #56
    7da0:	strb	w10, [x0, #320]
    7da4:	lsr	x10, x11, #48
    7da8:	strb	w10, [x0, #321]
    7dac:	lsr	x10, x11, #32
    7db0:	lsr	x11, x11, #40
    7db4:	rev	w9, w9
    7db8:	strb	w11, [x0, #322]
    7dbc:	strb	w10, [x0, #323]
    7dc0:	str	w9, [x0, #324]
    7dc4:	mov	x0, x8
    7dc8:	ret
    7dcc:	sub	sp, sp, #0x60
    7dd0:	stp	x29, x30, [sp, #32]
    7dd4:	str	x23, [sp, #48]
    7dd8:	stp	x22, x21, [sp, #64]
    7ddc:	stp	x20, x19, [sp, #80]
    7de0:	adrp	x8, 18000 <boot_Digest__SHA@@Base+0x170cc>
    7de4:	ldr	x8, [x8, #4056]
    7de8:	add	x29, sp, #0x20
    7dec:	mov	x21, x0
    7df0:	ldr	x8, [x8]
    7df4:	stur	x8, [x29, #-8]
    7df8:	bl	7c7c <boot_Digest__SHA@@Base+0x6d48>
    7dfc:	ldr	w23, [x21, #328]
    7e00:	mov	w8, #0xaaab                	// #43691
    7e04:	movk	w8, #0xaaaa, lsl #16
    7e08:	add	x19, x21, #0x1cd
    7e0c:	mul	x8, x23, x8
    7e10:	lsr	x8, x8, #33
    7e14:	add	w9, w8, w8, lsl #1
    7e18:	subs	w9, w23, w9
    7e1c:	lsl	x8, x8, #2
    7e20:	orr	x9, x8, x9
    7e24:	csinc	x8, x8, x9, eq  // eq = none
    7e28:	cmp	x8, #0x56
    7e2c:	strb	wzr, [x21, #461]
    7e30:	b.hi	7f60 <boot_Digest__SHA@@Base+0x702c>  // b.pmore
    7e34:	adrp	x22, 8000 <boot_Digest__SHA@@Base+0x70cc>
    7e38:	mov	x20, x0
    7e3c:	cmp	w23, #0x4
    7e40:	add	x22, x22, #0x5cf
    7e44:	sturb	wzr, [x29, #-10]
    7e48:	sturh	wzr, [x29, #-12]
    7e4c:	strb	wzr, [sp, #12]
    7e50:	b.cc	7edc <boot_Digest__SHA@@Base+0x6fa8>  // b.lo, b.ul, b.last
    7e54:	ldrh	w8, [x20]
    7e58:	ldrb	w9, [x20, #2]
    7e5c:	add	x1, sp, #0xc
    7e60:	mov	x0, x19
    7e64:	sturh	w8, [x29, #-12]
    7e68:	sturb	w9, [x29, #-10]
    7e6c:	ubfx	w9, w8, #8, #8
    7e70:	and	w8, w8, #0xff
    7e74:	ldurb	w10, [x29, #-10]
    7e78:	lsr	x11, x8, #2
    7e7c:	lsl	w8, w8, #4
    7e80:	and	x8, x8, #0x30
    7e84:	orr	x8, x8, x9, lsr #4
    7e88:	lsl	w9, w9, #2
    7e8c:	and	x9, x9, #0x3c
    7e90:	orr	x9, x9, x10, lsr #6
    7e94:	and	x10, x10, #0x3f
    7e98:	ldrb	w11, [x22, x11]
    7e9c:	ldrb	w10, [x22, x10]
    7ea0:	ldrb	w8, [x22, x8]
    7ea4:	ldrb	w9, [x22, x9]
    7ea8:	strb	w11, [sp, #12]
    7eac:	strb	w10, [sp, #15]
    7eb0:	strb	w8, [sp, #13]
    7eb4:	strb	w9, [sp, #14]
    7eb8:	strb	wzr, [sp, #16]
    7ebc:	bl	d20 <strcat@plt>
    7ec0:	sub	w23, w23, #0x3
    7ec4:	add	x20, x20, #0x3
    7ec8:	cmp	w23, #0x3
    7ecc:	sturb	wzr, [x29, #-10]
    7ed0:	sturh	wzr, [x29, #-12]
    7ed4:	strb	wzr, [sp, #12]
    7ed8:	b.hi	7e54 <boot_Digest__SHA@@Base+0x6f20>  // b.pmore
    7edc:	sub	w8, w23, #0x1
    7ee0:	cmp	w8, #0x2
    7ee4:	b.hi	7f54 <boot_Digest__SHA@@Base+0x7020>  // b.pmore
    7ee8:	mov	w21, w23
    7eec:	sub	x0, x29, #0xc
    7ef0:	mov	x1, x20
    7ef4:	mov	x2, x21
    7ef8:	bl	c90 <memcpy@plt>
    7efc:	ldurb	w8, [x29, #-12]
    7f00:	ldurb	w9, [x29, #-11]
    7f04:	ldurb	w10, [x29, #-10]
    7f08:	add	x11, sp, #0xc
    7f0c:	lsr	x12, x8, #2
    7f10:	lsl	w8, w8, #4
    7f14:	and	x8, x8, #0x30
    7f18:	orr	x8, x8, x9, lsr #4
    7f1c:	lsl	w9, w9, #2
    7f20:	and	x9, x9, #0x3c
    7f24:	orr	x9, x9, x10, lsr #6
    7f28:	and	x10, x10, #0x3f
    7f2c:	ldrb	w12, [x22, x12]
    7f30:	ldrb	w10, [x22, x10]
    7f34:	ldrb	w8, [x22, x8]
    7f38:	ldrb	w9, [x22, x9]
    7f3c:	add	x11, x21, x11
    7f40:	strb	w12, [sp, #12]
    7f44:	strb	w10, [sp, #15]
    7f48:	strb	w8, [sp, #13]
    7f4c:	strb	w9, [sp, #14]
    7f50:	strb	wzr, [x11, #1]
    7f54:	add	x1, sp, #0xc
    7f58:	mov	x0, x19
    7f5c:	bl	d20 <strcat@plt>
    7f60:	adrp	x9, 18000 <boot_Digest__SHA@@Base+0x170cc>
    7f64:	ldur	x8, [x29, #-8]
    7f68:	ldr	x9, [x9, #4056]
    7f6c:	ldr	x9, [x9]
    7f70:	cmp	x9, x8
    7f74:	b.ne	7f94 <boot_Digest__SHA@@Base+0x7060>  // b.any
    7f78:	mov	x0, x19
    7f7c:	ldp	x20, x19, [sp, #80]
    7f80:	ldp	x22, x21, [sp, #64]
    7f84:	ldr	x23, [sp, #48]
    7f88:	ldp	x29, x30, [sp, #32]
    7f8c:	add	sp, sp, #0x60
    7f90:	ret
    7f94:	bl	d80 <__stack_chk_fail@plt>

Disassembly of section .fini:

0000000000007f98 <.fini>:
    7f98:	stp	x29, x30, [sp, #-16]!
    7f9c:	mov	x29, sp
    7fa0:	ldp	x29, x30, [sp], #16
    7fa4:	ret
