
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libelf-0.178.so_gcc_-O3:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000002fe8 <.init>:
    2fe8:	stp	x29, x30, [sp, #-16]!
    2fec:	mov	x29, sp
    2ff0:	bl	3370 <*ABS*@plt+0x20>
    2ff4:	ldp	x29, x30, [sp], #16
    2ff8:	ret

Disassembly of section .plt:

0000000000003000 <memcpy@plt-0x20>:
    3000:	stp	x16, x30, [sp, #-16]!
    3004:	adrp	x16, 2a000 <elf_compress_gnu@@ELFUTILS_1.7+0x151b8>
    3008:	ldr	x17, [x16, #4088]
    300c:	add	x16, x16, #0xff8
    3010:	br	x17
    3014:	nop
    3018:	nop
    301c:	nop

0000000000003020 <memcpy@plt>:
    3020:	adrp	x16, 2b000 <memcpy@GLIBC_2.17>
    3024:	ldr	x17, [x16]
    3028:	add	x16, x16, #0x0
    302c:	br	x17

0000000000003030 <memmove@plt>:
    3030:	adrp	x16, 2b000 <memcpy@GLIBC_2.17>
    3034:	ldr	x17, [x16, #8]
    3038:	add	x16, x16, #0x8
    303c:	br	x17

0000000000003040 <msync@plt>:
    3040:	adrp	x16, 2b000 <memcpy@GLIBC_2.17>
    3044:	ldr	x17, [x16, #16]
    3048:	add	x16, x16, #0x10
    304c:	br	x17

0000000000003050 <posix_fallocate@plt>:
    3050:	adrp	x16, 2b000 <memcpy@GLIBC_2.17>
    3054:	ldr	x17, [x16, #24]
    3058:	add	x16, x16, #0x18
    305c:	br	x17

0000000000003060 <memccpy@plt>:
    3060:	adrp	x16, 2b000 <memcpy@GLIBC_2.17>
    3064:	ldr	x17, [x16, #32]
    3068:	add	x16, x16, #0x20
    306c:	br	x17

0000000000003070 <inflate@plt>:
    3070:	adrp	x16, 2b000 <memcpy@GLIBC_2.17>
    3074:	ldr	x17, [x16, #40]
    3078:	add	x16, x16, #0x28
    307c:	br	x17

0000000000003080 <mremap@plt>:
    3080:	adrp	x16, 2b000 <memcpy@GLIBC_2.17>
    3084:	ldr	x17, [x16, #48]
    3088:	add	x16, x16, #0x30
    308c:	br	x17

0000000000003090 <elf32_getchdr@plt>:
    3090:	adrp	x16, 2b000 <memcpy@GLIBC_2.17>
    3094:	ldr	x17, [x16, #56]
    3098:	add	x16, x16, #0x38
    309c:	br	x17

00000000000030a0 <__cxa_finalize@plt>:
    30a0:	adrp	x16, 2b000 <memcpy@GLIBC_2.17>
    30a4:	ldr	x17, [x16, #64]
    30a8:	add	x16, x16, #0x40
    30ac:	br	x17

00000000000030b0 <qsort@plt>:
    30b0:	adrp	x16, 2b000 <memcpy@GLIBC_2.17>
    30b4:	ldr	x17, [x16, #72]
    30b8:	add	x16, x16, #0x48
    30bc:	br	x17

00000000000030c0 <malloc@plt>:
    30c0:	adrp	x16, 2b000 <memcpy@GLIBC_2.17>
    30c4:	ldr	x17, [x16, #80]
    30c8:	add	x16, x16, #0x50
    30cc:	br	x17

00000000000030d0 <open@plt>:
    30d0:	adrp	x16, 2b000 <memcpy@GLIBC_2.17>
    30d4:	ldr	x17, [x16, #88]
    30d8:	add	x16, x16, #0x58
    30dc:	br	x17

00000000000030e0 <deflate@plt>:
    30e0:	adrp	x16, 2b000 <memcpy@GLIBC_2.17>
    30e4:	ldr	x17, [x16, #96]
    30e8:	add	x16, x16, #0x60
    30ec:	br	x17

00000000000030f0 <strncmp@plt>:
    30f0:	adrp	x16, 2b000 <memcpy@GLIBC_2.17>
    30f4:	ldr	x17, [x16, #104]
    30f8:	add	x16, x16, #0x68
    30fc:	br	x17

0000000000003100 <memset@plt>:
    3100:	adrp	x16, 2b000 <memcpy@GLIBC_2.17>
    3104:	ldr	x17, [x16, #112]
    3108:	add	x16, x16, #0x70
    310c:	br	x17

0000000000003110 <elf64_getshdr@plt>:
    3110:	adrp	x16, 2b000 <memcpy@GLIBC_2.17>
    3114:	ldr	x17, [x16, #120]
    3118:	add	x16, x16, #0x78
    311c:	br	x17

0000000000003120 <fchmod@plt>:
    3120:	adrp	x16, 2b000 <memcpy@GLIBC_2.17>
    3124:	ldr	x17, [x16, #128]
    3128:	add	x16, x16, #0x80
    312c:	br	x17

0000000000003130 <posix_memalign@plt>:
    3130:	adrp	x16, 2b000 <memcpy@GLIBC_2.17>
    3134:	ldr	x17, [x16, #136]
    3138:	add	x16, x16, #0x88
    313c:	br	x17

0000000000003140 <calloc@plt>:
    3140:	adrp	x16, 2b000 <memcpy@GLIBC_2.17>
    3144:	ldr	x17, [x16, #144]
    3148:	add	x16, x16, #0x90
    314c:	br	x17

0000000000003150 <gelf_xlatetof@plt>:
    3150:	adrp	x16, 2b000 <memcpy@GLIBC_2.17>
    3154:	ldr	x17, [x16, #152]
    3158:	add	x16, x16, #0x98
    315c:	br	x17

0000000000003160 <realloc@plt>:
    3160:	adrp	x16, 2b000 <memcpy@GLIBC_2.17>
    3164:	ldr	x17, [x16, #160]
    3168:	add	x16, x16, #0xa0
    316c:	br	x17

0000000000003170 <deflateInit_@plt>:
    3170:	adrp	x16, 2b000 <memcpy@GLIBC_2.17>
    3174:	ldr	x17, [x16, #168]
    3178:	add	x16, x16, #0xa8
    317c:	br	x17

0000000000003180 <close@plt>:
    3180:	adrp	x16, 2b000 <memcpy@GLIBC_2.17>
    3184:	ldr	x17, [x16, #176]
    3188:	add	x16, x16, #0xb0
    318c:	br	x17

0000000000003190 <elf64_getchdr@plt>:
    3190:	adrp	x16, 2b000 <memcpy@GLIBC_2.17>
    3194:	ldr	x17, [x16, #184]
    3198:	add	x16, x16, #0xb8
    319c:	br	x17

00000000000031a0 <__gmon_start__@plt>:
    31a0:	adrp	x16, 2b000 <memcpy@GLIBC_2.17>
    31a4:	ldr	x17, [x16, #192]
    31a8:	add	x16, x16, #0xc0
    31ac:	br	x17

00000000000031b0 <inflateEnd@plt>:
    31b0:	adrp	x16, 2b000 <memcpy@GLIBC_2.17>
    31b4:	ldr	x17, [x16, #200]
    31b8:	add	x16, x16, #0xc8
    31bc:	br	x17

00000000000031c0 <strcmp@plt>:
    31c0:	adrp	x16, 2b000 <memcpy@GLIBC_2.17>
    31c4:	ldr	x17, [x16, #208]
    31c8:	add	x16, x16, #0xd0
    31cc:	br	x17

00000000000031d0 <__ctype_b_loc@plt>:
    31d0:	adrp	x16, 2b000 <memcpy@GLIBC_2.17>
    31d4:	ldr	x17, [x16, #216]
    31d8:	add	x16, x16, #0xd8
    31dc:	br	x17

00000000000031e0 <mmap@plt>:
    31e0:	adrp	x16, 2b000 <memcpy@GLIBC_2.17>
    31e4:	ldr	x17, [x16, #224]
    31e8:	add	x16, x16, #0xe0
    31ec:	br	x17

00000000000031f0 <strtol@plt>:
    31f0:	adrp	x16, 2b000 <memcpy@GLIBC_2.17>
    31f4:	ldr	x17, [x16, #232]
    31f8:	add	x16, x16, #0xe8
    31fc:	br	x17

0000000000003200 <free@plt>:
    3200:	adrp	x16, 2b000 <memcpy@GLIBC_2.17>
    3204:	ldr	x17, [x16, #240]
    3208:	add	x16, x16, #0xf0
    320c:	br	x17

0000000000003210 <rawmemchr@plt>:
    3210:	adrp	x16, 2b000 <memcpy@GLIBC_2.17>
    3214:	ldr	x17, [x16, #248]
    3218:	add	x16, x16, #0xf8
    321c:	br	x17

0000000000003220 <pwrite@plt>:
    3220:	adrp	x16, 2b000 <memcpy@GLIBC_2.17>
    3224:	ldr	x17, [x16, #256]
    3228:	add	x16, x16, #0x100
    322c:	br	x17

0000000000003230 <deflateEnd@plt>:
    3230:	adrp	x16, 2b000 <memcpy@GLIBC_2.17>
    3234:	ldr	x17, [x16, #264]
    3238:	add	x16, x16, #0x108
    323c:	br	x17

0000000000003240 <gelf_getchdr@plt>:
    3240:	adrp	x16, 2b000 <memcpy@GLIBC_2.17>
    3244:	ldr	x17, [x16, #272]
    3248:	add	x16, x16, #0x110
    324c:	br	x17

0000000000003250 <pread@plt>:
    3250:	adrp	x16, 2b000 <memcpy@GLIBC_2.17>
    3254:	ldr	x17, [x16, #280]
    3258:	add	x16, x16, #0x118
    325c:	br	x17

0000000000003260 <memrchr@plt>:
    3260:	adrp	x16, 2b000 <memcpy@GLIBC_2.17>
    3264:	ldr	x17, [x16, #288]
    3268:	add	x16, x16, #0x120
    326c:	br	x17

0000000000003270 <inflateInit_@plt>:
    3270:	adrp	x16, 2b000 <memcpy@GLIBC_2.17>
    3274:	ldr	x17, [x16, #296]
    3278:	add	x16, x16, #0x128
    327c:	br	x17

0000000000003280 <fcntl@plt>:
    3280:	adrp	x16, 2b000 <memcpy@GLIBC_2.17>
    3284:	ldr	x17, [x16, #304]
    3288:	add	x16, x16, #0x130
    328c:	br	x17

0000000000003290 <elf32_getshdr@plt>:
    3290:	adrp	x16, 2b000 <memcpy@GLIBC_2.17>
    3294:	ldr	x17, [x16, #312]
    3298:	add	x16, x16, #0x138
    329c:	br	x17

00000000000032a0 <munmap@plt>:
    32a0:	adrp	x16, 2b000 <memcpy@GLIBC_2.17>
    32a4:	ldr	x17, [x16, #320]
    32a8:	add	x16, x16, #0x140
    32ac:	br	x17

00000000000032b0 <gelf_getehdr@plt>:
    32b0:	adrp	x16, 2b000 <memcpy@GLIBC_2.17>
    32b4:	ldr	x17, [x16, #328]
    32b8:	add	x16, x16, #0x148
    32bc:	br	x17

00000000000032c0 <memchr@plt>:
    32c0:	adrp	x16, 2b000 <memcpy@GLIBC_2.17>
    32c4:	ldr	x17, [x16, #336]
    32c8:	add	x16, x16, #0x150
    32cc:	br	x17

00000000000032d0 <sysconf@plt>:
    32d0:	adrp	x16, 2b000 <memcpy@GLIBC_2.17>
    32d4:	ldr	x17, [x16, #344]
    32d8:	add	x16, x16, #0x158
    32dc:	br	x17

00000000000032e0 <elf_getdata@plt>:
    32e0:	adrp	x16, 2b000 <memcpy@GLIBC_2.17>
    32e4:	ldr	x17, [x16, #352]
    32e8:	add	x16, x16, #0x160
    32ec:	br	x17

00000000000032f0 <__fxstat@plt>:
    32f0:	adrp	x16, 2b000 <memcpy@GLIBC_2.17>
    32f4:	ldr	x17, [x16, #360]
    32f8:	add	x16, x16, #0x168
    32fc:	br	x17

0000000000003300 <dcgettext@plt>:
    3300:	adrp	x16, 2b000 <memcpy@GLIBC_2.17>
    3304:	ldr	x17, [x16, #368]
    3308:	add	x16, x16, #0x170
    330c:	br	x17

0000000000003310 <inflateReset@plt>:
    3310:	adrp	x16, 2b000 <memcpy@GLIBC_2.17>
    3314:	ldr	x17, [x16, #376]
    3318:	add	x16, x16, #0x178
    331c:	br	x17

0000000000003320 <ftruncate@plt>:
    3320:	adrp	x16, 2b000 <memcpy@GLIBC_2.17>
    3324:	ldr	x17, [x16, #384]
    3328:	add	x16, x16, #0x180
    332c:	br	x17

0000000000003330 <__assert_fail@plt>:
    3330:	adrp	x16, 2b000 <memcpy@GLIBC_2.17>
    3334:	ldr	x17, [x16, #392]
    3338:	add	x16, x16, #0x188
    333c:	br	x17

0000000000003340 <__errno_location@plt>:
    3340:	adrp	x16, 2b000 <memcpy@GLIBC_2.17>
    3344:	ldr	x17, [x16, #400]
    3348:	add	x16, x16, #0x190
    334c:	br	x17

0000000000003350 <*ABS*@plt>:
    3350:	stp	x2, x3, [sp, #-16]!
    3354:	adrp	x2, 2a000 <elf_compress_gnu@@ELFUTILS_1.7+0x151b8>
    3358:	adrp	x3, 2a000 <elf_compress_gnu@@ELFUTILS_1.7+0x151b8>
    335c:	ldr	x2, [x2, #4056]
    3360:	add	x3, x3, #0xfe8
    3364:	br	x2
    3368:	nop
    336c:	nop

Disassembly of section .text:

0000000000003370 <elf_version@@ELFUTILS_1.0-0xd8>:
    3370:	adrp	x0, 2a000 <elf_compress_gnu@@ELFUTILS_1.7+0x151b8>
    3374:	ldr	x0, [x0, #4040]
    3378:	cbz	x0, 3380 <*ABS*@plt+0x30>
    337c:	b	31a0 <__gmon_start__@plt>
    3380:	ret
    3384:	nop
    3388:	adrp	x0, 2b000 <elf_compress_gnu@@ELFUTILS_1.7+0x161b8>
    338c:	add	x0, x0, #0x1b0
    3390:	adrp	x1, 2b000 <elf_compress_gnu@@ELFUTILS_1.7+0x161b8>
    3394:	add	x1, x1, #0x1b0
    3398:	cmp	x1, x0
    339c:	b.eq	33b4 <*ABS*@plt+0x64>  // b.none
    33a0:	adrp	x1, 2a000 <elf_compress_gnu@@ELFUTILS_1.7+0x151b8>
    33a4:	ldr	x1, [x1, #4024]
    33a8:	cbz	x1, 33b4 <*ABS*@plt+0x64>
    33ac:	mov	x16, x1
    33b0:	br	x16
    33b4:	ret
    33b8:	adrp	x0, 2b000 <elf_compress_gnu@@ELFUTILS_1.7+0x161b8>
    33bc:	add	x0, x0, #0x1b0
    33c0:	adrp	x1, 2b000 <elf_compress_gnu@@ELFUTILS_1.7+0x161b8>
    33c4:	add	x1, x1, #0x1b0
    33c8:	sub	x1, x1, x0
    33cc:	lsr	x2, x1, #63
    33d0:	add	x1, x2, x1, asr #3
    33d4:	cmp	xzr, x1, asr #1
    33d8:	asr	x1, x1, #1
    33dc:	b.eq	33f4 <*ABS*@plt+0xa4>  // b.none
    33e0:	adrp	x2, 2a000 <elf_compress_gnu@@ELFUTILS_1.7+0x151b8>
    33e4:	ldr	x2, [x2, #4048]
    33e8:	cbz	x2, 33f4 <*ABS*@plt+0xa4>
    33ec:	mov	x16, x2
    33f0:	br	x16
    33f4:	ret
    33f8:	stp	x29, x30, [sp, #-32]!
    33fc:	mov	x29, sp
    3400:	str	x19, [sp, #16]
    3404:	adrp	x19, 2b000 <elf_compress_gnu@@ELFUTILS_1.7+0x161b8>
    3408:	ldrb	w0, [x19, #432]
    340c:	cbnz	w0, 3434 <*ABS*@plt+0xe4>
    3410:	adrp	x0, 2a000 <elf_compress_gnu@@ELFUTILS_1.7+0x151b8>
    3414:	ldr	x0, [x0, #4032]
    3418:	cbz	x0, 3428 <*ABS*@plt+0xd8>
    341c:	adrp	x0, 2b000 <elf_compress_gnu@@ELFUTILS_1.7+0x161b8>
    3420:	ldr	x0, [x0, #424]
    3424:	bl	30a0 <__cxa_finalize@plt>
    3428:	bl	3388 <*ABS*@plt+0x38>
    342c:	mov	w0, #0x1                   	// #1
    3430:	strb	w0, [x19, #432]
    3434:	ldr	x19, [sp, #16]
    3438:	ldp	x29, x30, [sp], #32
    343c:	ret
    3440:	b	33b8 <*ABS*@plt+0x68>
    3444:	nop

0000000000003448 <elf_version@@ELFUTILS_1.0>:
    3448:	cbz	w0, 3460 <elf_version@@ELFUTILS_1.0+0x18>
    344c:	cmp	w0, #0x1
    3450:	b.ne	3468 <elf_version@@ELFUTILS_1.0+0x20>  // b.any
    3454:	adrp	x2, 2b000 <elf_compress_gnu@@ELFUTILS_1.7+0x161b8>
    3458:	str	w0, [x2, #436]
    345c:	ret
    3460:	mov	w0, #0x1                   	// #1
    3464:	ret
    3468:	stp	x29, x30, [sp, #-16]!
    346c:	mov	w0, #0x2                   	// #2
    3470:	mov	x29, sp
    3474:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    3478:	mov	w0, #0x0                   	// #0
    347c:	ldp	x29, x30, [sp], #16
    3480:	ret
    3484:	nop

0000000000003488 <elf_hash@@ELFUTILS_1.0>:
    3488:	mov	x1, x0
    348c:	ldrb	w0, [x0]
    3490:	cbz	x0, 3500 <elf_hash@@ELFUTILS_1.0+0x78>
    3494:	ldrb	w2, [x1, #1]
    3498:	cbz	w2, 3500 <elf_hash@@ELFUTILS_1.0+0x78>
    349c:	ldrb	w3, [x1, #2]
    34a0:	and	x2, x2, #0xff
    34a4:	add	x0, x2, x0, lsl #4
    34a8:	cbz	w3, 3500 <elf_hash@@ELFUTILS_1.0+0x78>
    34ac:	ldrb	w2, [x1, #3]
    34b0:	and	x3, x3, #0xff
    34b4:	add	x0, x3, x0, lsl #4
    34b8:	cbz	w2, 3500 <elf_hash@@ELFUTILS_1.0+0x78>
    34bc:	ldrb	w4, [x1, #4]
    34c0:	and	x2, x2, #0xff
    34c4:	add	x0, x2, x0, lsl #4
    34c8:	cbz	w4, 3500 <elf_hash@@ELFUTILS_1.0+0x78>
    34cc:	ldrb	w3, [x1, #5]
    34d0:	and	x4, x4, #0xff
    34d4:	add	x0, x4, x0, lsl #4
    34d8:	add	x1, x1, #0x5
    34dc:	cbz	w3, 3500 <elf_hash@@ELFUTILS_1.0+0x78>
    34e0:	and	x2, x3, #0xff
    34e4:	ldrb	w3, [x1, #1]!
    34e8:	add	x0, x2, x0, lsl #4
    34ec:	lsr	x2, x0, #24
    34f0:	and	x2, x2, #0xf0
    34f4:	eor	x0, x0, x2
    34f8:	cbnz	w3, 34e0 <elf_hash@@ELFUTILS_1.0+0x58>
    34fc:	and	x0, x0, #0xfffffff
    3500:	ret
    3504:	nop

0000000000003508 <elf_errno@@ELFUTILS_1.0>:
    3508:	stp	x29, x30, [sp, #-16]!
    350c:	mrs	x1, tpidr_el0
    3510:	adrp	x0, 2b000 <elf_compress_gnu@@ELFUTILS_1.7+0x161b8>
    3514:	ldr	x2, [x0, #408]
    3518:	add	x0, x0, #0x198
    351c:	blr	x2
    3520:	mov	x29, sp
    3524:	ldr	w2, [x1, x0]
    3528:	str	wzr, [x1, x0]
    352c:	mov	w0, w2
    3530:	ldp	x29, x30, [sp], #16
    3534:	ret
    3538:	stp	x29, x30, [sp, #-16]!
    353c:	cmp	w0, #0x33
    3540:	mrs	x2, tpidr_el0
    3544:	mov	x29, sp
    3548:	csinc	w1, w0, wzr, cc  // cc = lo, ul, last
    354c:	adrp	x0, 2b000 <elf_compress_gnu@@ELFUTILS_1.7+0x161b8>
    3550:	ldr	x3, [x0, #408]
    3554:	add	x0, x0, #0x198
    3558:	blr	x3
    355c:	str	w1, [x2, x0]
    3560:	ldp	x29, x30, [sp], #16
    3564:	ret

0000000000003568 <elf_errmsg@@ELFUTILS_1.0>:
    3568:	stp	x29, x30, [sp, #-16]!
    356c:	mrs	x2, tpidr_el0
    3570:	mov	w1, w0
    3574:	mov	x29, sp
    3578:	adrp	x0, 2b000 <elf_compress_gnu@@ELFUTILS_1.7+0x161b8>
    357c:	ldr	x3, [x0, #408]
    3580:	add	x0, x0, #0x198
    3584:	blr	x3
    3588:	ldr	w0, [x2, x0]
    358c:	cbnz	w1, 35b4 <elf_errmsg@@ELFUTILS_1.0+0x4c>
    3590:	adrp	x3, 15000 <elf_compress_gnu@@ELFUTILS_1.7+0x1b8>
    3594:	add	x3, x3, #0x180
    3598:	ldr	x1, [x3, w0, sxtw #3]
    359c:	cmp	x1, #0x4f1
    35a0:	b.hi	3618 <elf_errmsg@@ELFUTILS_1.0+0xb0>  // b.pmore
    35a4:	cbnz	w0, 35dc <elf_errmsg@@ELFUTILS_1.0+0x74>
    35a8:	mov	x0, #0x0                   	// #0
    35ac:	ldp	x29, x30, [sp], #16
    35b0:	ret
    35b4:	add	w2, w1, #0x1
    35b8:	cmp	w2, #0x33
    35bc:	b.hi	35f8 <elf_errmsg@@ELFUTILS_1.0+0x90>  // b.pmore
    35c0:	cmn	w1, #0x1
    35c4:	adrp	x3, 15000 <elf_compress_gnu@@ELFUTILS_1.7+0x1b8>
    35c8:	csel	w0, w0, w1, eq  // eq = none
    35cc:	add	x3, x3, #0x180
    35d0:	ldr	x1, [x3, w0, sxtw #3]
    35d4:	cmp	x1, #0x4f1
    35d8:	b.hi	3634 <elf_errmsg@@ELFUTILS_1.0+0xcc>  // b.pmore
    35dc:	ldp	x29, x30, [sp], #16
    35e0:	add	x3, x3, #0x1b0
    35e4:	add	x1, x3, x1
    35e8:	adrp	x0, 15000 <elf_compress_gnu@@ELFUTILS_1.7+0x1b8>
    35ec:	mov	w2, #0x5                   	// #5
    35f0:	add	x0, x0, #0x128
    35f4:	b	3300 <dcgettext@plt>
    35f8:	ldp	x29, x30, [sp], #16
    35fc:	adrp	x1, 15000 <elf_compress_gnu@@ELFUTILS_1.7+0x1b8>
    3600:	add	x1, x1, #0x180
    3604:	adrp	x0, 15000 <elf_compress_gnu@@ELFUTILS_1.7+0x1b8>
    3608:	add	x1, x1, #0x1b9
    360c:	add	x0, x0, #0x128
    3610:	mov	w2, #0x5                   	// #5
    3614:	b	3300 <dcgettext@plt>
    3618:	adrp	x1, 15000 <elf_compress_gnu@@ELFUTILS_1.7+0x1b8>
    361c:	adrp	x0, 15000 <elf_compress_gnu@@ELFUTILS_1.7+0x1b8>
    3620:	add	x3, x3, #0x198
    3624:	add	x1, x1, #0xf0
    3628:	add	x0, x0, #0x100
    362c:	mov	w2, #0x15b                 	// #347
    3630:	bl	3330 <__assert_fail@plt>
    3634:	adrp	x1, 15000 <elf_compress_gnu@@ELFUTILS_1.7+0x1b8>
    3638:	adrp	x0, 15000 <elf_compress_gnu@@ELFUTILS_1.7+0x1b8>
    363c:	add	x3, x3, #0x198
    3640:	add	x1, x1, #0xf0
    3644:	add	x0, x0, #0x138
    3648:	mov	w2, #0x161                 	// #353
    364c:	bl	3330 <__assert_fail@plt>

0000000000003650 <elf_fill@@ELFUTILS_1.0>:
    3650:	adrp	x1, 2b000 <elf_compress_gnu@@ELFUTILS_1.7+0x161b8>
    3654:	str	w0, [x1, #440]
    3658:	ret
    365c:	nop
    3660:	stp	x29, x30, [sp, #-192]!
    3664:	mov	x29, sp
    3668:	stp	x19, x20, [sp, #16]
    366c:	mov	x20, x2
    3670:	stp	x25, x26, [sp, #64]
    3674:	mov	w26, w0
    3678:	ldrb	w2, [x2, #4]
    367c:	sub	w0, w2, #0x1
    3680:	and	w0, w0, #0xff
    3684:	cmp	w0, #0x1
    3688:	b.hi	3a78 <elf_fill@@ELFUTILS_1.0+0x428>  // b.pmore
    368c:	stp	x27, x28, [sp, #80]
    3690:	mov	x27, x6
    3694:	ldrb	w6, [x20, #5]
    3698:	sub	w0, w6, #0x1
    369c:	and	w0, w0, #0xff
    36a0:	cmp	w0, #0x1
    36a4:	b.hi	3a74 <elf_fill@@ELFUTILS_1.0+0x424>  // b.pmore
    36a8:	stp	x21, x22, [sp, #32]
    36ac:	mov	x25, x3
    36b0:	mov	x22, x1
    36b4:	stp	x23, x24, [sp, #48]
    36b8:	cmp	w6, #0x1
    36bc:	mov	x23, x4
    36c0:	mov	w24, w5
    36c4:	b.eq	38b4 <elf_fill@@ELFUTILS_1.0+0x264>  // b.none
    36c8:	cmp	w2, #0x1
    36cc:	b.eq	39fc <elf_fill@@ELFUTILS_1.0+0x3ac>  // b.none
    36d0:	ldp	x0, x1, [x20, #32]
    36d4:	stp	x0, x1, [sp, #160]
    36d8:	ldp	x0, x1, [x20, #48]
    36dc:	stp	x0, x1, [sp, #176]
    36e0:	ldrh	w1, [sp, #188]
    36e4:	ldr	x0, [sp, #168]
    36e8:	rev16	w1, w1
    36ec:	and	w7, w1, #0xffff
    36f0:	strh	w1, [sp, #188]
    36f4:	ldp	x4, x5, [x20]
    36f8:	rev	x0, x0
    36fc:	ldp	x2, x3, [x20, #16]
    3700:	stp	x4, x5, [sp, #128]
    3704:	stp	x2, x3, [sp, #144]
    3708:	str	x0, [sp, #168]
    370c:	add	x21, sp, #0x80
    3710:	and	x28, x7, #0xffff
    3714:	cbz	w7, 3bf4 <elf_fill@@ELFUTILS_1.0+0x5a4>
    3718:	cmp	x23, x0
    371c:	b.cs	38f0 <elf_fill@@ELFUTILS_1.0+0x2a0>  // b.hs, b.nlast
    3720:	cmp	w24, #0x2
    3724:	mov	x21, #0x0                   	// #0
    3728:	ccmp	w24, #0x9, #0x4, ne  // ne = any
    372c:	cset	x28, eq  // eq = none
    3730:	add	x1, x28, x28, lsl #1
    3734:	mov	x0, #0x1                   	// #1
    3738:	add	x1, x28, x1, lsl #2
    373c:	lsl	x1, x1, #4
    3740:	add	x1, x1, #0x108
    3744:	bl	3140 <calloc@plt>
    3748:	mov	x19, x0
    374c:	cbz	x0, 3fac <elf_fill@@ELFUTILS_1.0+0x95c>
    3750:	ldrb	w0, [x20, #4]
    3754:	mov	w3, #0x1                   	// #1
    3758:	mov	w4, #0x3                   	// #3
    375c:	mov	w1, #0xa                   	// #10
    3760:	stp	x22, x27, [x19]
    3764:	cmp	w0, w3
    3768:	add	x2, x22, x25
    376c:	stp	w4, w24, [x19, #24]
    3770:	stp	w0, w26, [x19, #32]
    3774:	stp	x25, x23, [x19, #40]
    3778:	str	w3, [x19, #60]
    377c:	str	w1, [x19, #112]
    3780:	stp	w21, w28, [x19, #200]
    3784:	b.eq	3908 <elf_fill@@ELFUTILS_1.0+0x2b8>  // b.none
    3788:	cbz	x22, 3aac <elf_fill@@ELFUTILS_1.0+0x45c>
    378c:	ldrb	w3, [x20, #5]
    3790:	cmp	w3, #0x1
    3794:	b.eq	3a98 <elf_fill@@ELFUTILS_1.0+0x448>  // b.none
    3798:	ldp	x0, x1, [x20]
    379c:	stp	x0, x1, [x19, #136]
    37a0:	add	x4, x19, #0x88
    37a4:	ldp	x0, x1, [x20, #16]
    37a8:	stp	x0, x1, [x19, #152]
    37ac:	mov	x5, x4
    37b0:	ldp	x0, x1, [x20, #32]
    37b4:	stp	x0, x1, [x19, #168]
    37b8:	ldp	x0, x1, [x20, #48]
    37bc:	str	x4, [x19, #72]
    37c0:	stp	x0, x1, [x19, #184]
    37c4:	ldrh	w13, [x19, #152]
    37c8:	ldr	q0, [x19, #160]
    37cc:	rev16	w13, w13
    37d0:	ldr	x10, [x19, #176]
    37d4:	strh	w13, [x19, #152]
    37d8:	rev64	v0.16b, v0.16b
    37dc:	ldrh	w12, [x19, #154]
    37e0:	ldrh	w8, [x19, #188]
    37e4:	rev	x10, x10
    37e8:	ldrh	w7, [x19, #190]
    37ec:	rev16	w12, w12
    37f0:	ldrh	w6, [x19, #192]
    37f4:	rev16	w8, w8
    37f8:	ldrh	w4, [x19, #194]
    37fc:	rev16	w7, w7
    3800:	ldrh	w1, [x19, #196]
    3804:	rev16	w6, w6
    3808:	ldrh	w0, [x19, #198]
    380c:	rev16	w4, w4
    3810:	ldr	w11, [x19, #156]
    3814:	rev16	w1, w1
    3818:	ldr	w9, [x19, #184]
    381c:	rev16	w0, w0
    3820:	rev	w11, w11
    3824:	strh	w12, [x19, #154]
    3828:	rev	w9, w9
    382c:	str	w11, [x19, #156]
    3830:	str	x10, [x19, #176]
    3834:	str	w9, [x19, #184]
    3838:	strh	w8, [x19, #188]
    383c:	strh	w7, [x19, #190]
    3840:	strh	w6, [x19, #192]
    3844:	strh	w4, [x19, #194]
    3848:	strh	w1, [x19, #196]
    384c:	strh	w0, [x19, #198]
    3850:	str	q0, [x19, #160]
    3854:	cbz	x22, 3868 <elf_fill@@ELFUTILS_1.0+0x218>
    3858:	ldr	x0, [x5, #40]
    385c:	cmp	w24, #0x8
    3860:	ccmp	w3, #0x1, #0x0, ne  // ne = any
    3864:	b.eq	3ae8 <elf_fill@@ELFUTILS_1.0+0x498>  // b.none
    3868:	add	x3, x19, #0xc8
    386c:	add	x0, x19, #0x158
    3870:	mov	x1, #0x0                   	// #0
    3874:	cbz	x21, 3890 <elf_fill@@ELFUTILS_1.0+0x240>
    3878:	stp	x1, x19, [x0]
    387c:	add	x1, x1, #0x1
    3880:	cmp	x1, x21
    3884:	str	x3, [x0, #72]
    3888:	add	x0, x0, #0xd0
    388c:	b.ne	3878 <elf_fill@@ELFUTILS_1.0+0x228>  // b.any
    3890:	ldp	x21, x22, [sp, #32]
    3894:	ldp	x23, x24, [sp, #48]
    3898:	ldp	x27, x28, [sp, #80]
    389c:	str	x3, [x19, #96]
    38a0:	mov	x0, x19
    38a4:	ldp	x19, x20, [sp, #16]
    38a8:	ldp	x25, x26, [sp, #64]
    38ac:	ldp	x29, x30, [sp], #192
    38b0:	ret
    38b4:	cmp	w2, #0x1
    38b8:	b.eq	3a38 <elf_fill@@ELFUTILS_1.0+0x3e8>  // b.none
    38bc:	tst	x20, #0x7
    38c0:	b.eq	3fc4 <elf_fill@@ELFUTILS_1.0+0x974>  // b.none
    38c4:	ldp	x0, x1, [x20, #32]
    38c8:	stp	x0, x1, [sp, #160]
    38cc:	ldp	x0, x1, [x20, #48]
    38d0:	stp	x0, x1, [sp, #176]
    38d4:	ldp	x0, x1, [x20]
    38d8:	stp	x0, x1, [sp, #128]
    38dc:	ldrh	w7, [sp, #188]
    38e0:	ldp	x0, x1, [x20, #16]
    38e4:	stp	x0, x1, [sp, #144]
    38e8:	ldr	x0, [sp, #168]
    38ec:	b	370c <elf_fill@@ELFUTILS_1.0+0xbc>
    38f0:	sub	x0, x23, x0
    38f4:	cmp	x0, x28, lsl #6
    38f8:	b.cc	3720 <elf_fill@@ELFUTILS_1.0+0xd0>  // b.lo, b.ul, b.last
    38fc:	mov	x21, x28
    3900:	cbnz	x28, 3730 <elf_fill@@ELFUTILS_1.0+0xe0>
    3904:	b	3720 <elf_fill@@ELFUTILS_1.0+0xd0>
    3908:	cbz	x22, 3c4c <elf_fill@@ELFUTILS_1.0+0x5fc>
    390c:	ldrb	w4, [x20, #5]
    3910:	cmp	w4, w3
    3914:	b.eq	3bb0 <elf_fill@@ELFUTILS_1.0+0x560>  // b.none
    3918:	ldp	x0, x1, [x20]
    391c:	add	x3, x19, #0x88
    3920:	stp	x0, x1, [x19, #136]
    3924:	mov	x5, x3
    3928:	ldr	w6, [x20, #48]
    392c:	ldp	x0, x1, [x20, #16]
    3930:	stp	x0, x1, [x19, #152]
    3934:	ldp	x0, x1, [x20, #32]
    3938:	str	x3, [x19, #72]
    393c:	stp	x0, x1, [x19, #168]
    3940:	str	w6, [x19, #184]
    3944:	ldur	q0, [x19, #156]
    3948:	ldrh	w11, [x19, #152]
    394c:	ldrh	w10, [x19, #154]
    3950:	rev32	v0.16b, v0.16b
    3954:	ldrh	w8, [x19, #176]
    3958:	ldrh	w7, [x19, #178]
    395c:	rev16	w11, w11
    3960:	ldrh	w6, [x19, #180]
    3964:	rev16	w10, w10
    3968:	ldrh	w3, [x19, #182]
    396c:	rev16	w8, w8
    3970:	ldrh	w1, [x19, #184]
    3974:	rev16	w7, w7
    3978:	ldrh	w0, [x19, #186]
    397c:	rev16	w6, w6
    3980:	ldr	w9, [x19, #172]
    3984:	rev16	w3, w3
    3988:	rev16	w1, w1
    398c:	rev16	w0, w0
    3990:	rev	w9, w9
    3994:	strh	w11, [x19, #152]
    3998:	strh	w10, [x19, #154]
    399c:	str	w9, [x19, #172]
    39a0:	strh	w8, [x19, #176]
    39a4:	strh	w7, [x19, #178]
    39a8:	strh	w6, [x19, #180]
    39ac:	strh	w3, [x19, #182]
    39b0:	strh	w1, [x19, #184]
    39b4:	strh	w0, [x19, #186]
    39b8:	stur	q0, [x19, #156]
    39bc:	cbz	x22, 39d0 <elf_fill@@ELFUTILS_1.0+0x380>
    39c0:	ldr	w0, [x5, #32]
    39c4:	cmp	w24, #0x8
    39c8:	ccmp	w4, #0x1, #0x0, ne  // ne = any
    39cc:	b.eq	3ce4 <elf_fill@@ELFUTILS_1.0+0x694>  // b.none
    39d0:	add	x3, x19, #0xc8
    39d4:	add	x0, x19, #0x158
    39d8:	mov	x1, #0x0                   	// #0
    39dc:	cbz	x21, 3890 <elf_fill@@ELFUTILS_1.0+0x240>
    39e0:	stp	x1, x19, [x0]
    39e4:	add	x1, x1, #0x1
    39e8:	cmp	x1, x21
    39ec:	str	x3, [x0, #72]
    39f0:	add	x0, x0, #0xd0
    39f4:	b.ne	39e0 <elf_fill@@ELFUTILS_1.0+0x390>  // b.any
    39f8:	b	3890 <elf_fill@@ELFUTILS_1.0+0x240>
    39fc:	ldp	x7, x1, [x20, #32]
    3a00:	stp	x7, x1, [sp, #160]
    3a04:	ldr	w0, [x20, #48]
    3a08:	str	w0, [sp, #176]
    3a0c:	add	x19, sp, #0x80
    3a10:	rev16	w0, w0
    3a14:	strh	w0, [sp, #176]
    3a18:	ldp	x4, x5, [x20]
    3a1c:	rev	w7, w7
    3a20:	ldp	x2, x3, [x20, #16]
    3a24:	and	w8, w0, #0xffff
    3a28:	stp	x4, x5, [sp, #128]
    3a2c:	stp	x2, x3, [sp, #144]
    3a30:	str	w7, [sp, #160]
    3a34:	b	3a4c <elf_fill@@ELFUTILS_1.0+0x3fc>
    3a38:	tst	x20, #0x3
    3a3c:	b.ne	3cb8 <elf_fill@@ELFUTILS_1.0+0x668>  // b.any
    3a40:	ldrh	w8, [x20, #48]
    3a44:	mov	x19, x20
    3a48:	ldr	w7, [x20, #32]
    3a4c:	mov	w0, w7
    3a50:	and	x28, x8, #0xffff
    3a54:	cbz	w8, 3db4 <elf_fill@@ELFUTILS_1.0+0x764>
    3a58:	cmp	x23, x0
    3a5c:	b.cc	3720 <elf_fill@@ELFUTILS_1.0+0xd0>  // b.lo, b.ul, b.last
    3a60:	add	x1, x28, x28, lsl #2
    3a64:	sub	x0, x23, x0
    3a68:	cmp	x0, x1, lsl #3
    3a6c:	b.cc	3720 <elf_fill@@ELFUTILS_1.0+0xd0>  // b.lo, b.ul, b.last
    3a70:	b	38fc <elf_fill@@ELFUTILS_1.0+0x2ac>
    3a74:	ldp	x27, x28, [sp, #80]
    3a78:	mov	w0, #0xa                   	// #10
    3a7c:	mov	x19, #0x0                   	// #0
    3a80:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    3a84:	mov	x0, x19
    3a88:	ldp	x19, x20, [sp, #16]
    3a8c:	ldp	x25, x26, [sp, #64]
    3a90:	ldp	x29, x30, [sp], #192
    3a94:	ret
    3a98:	tst	x2, #0x7
    3a9c:	b.ne	3bc4 <elf_fill@@ELFUTILS_1.0+0x574>  // b.any
    3aa0:	str	x2, [x19, #72]
    3aa4:	ldr	x0, [x2, #40]
    3aa8:	b	385c <elf_fill@@ELFUTILS_1.0+0x20c>
    3aac:	ldp	x0, x1, [x20]
    3ab0:	stp	x0, x1, [x19, #136]
    3ab4:	add	x4, x19, #0x88
    3ab8:	ldp	x0, x1, [x20, #16]
    3abc:	stp	x0, x1, [x19, #152]
    3ac0:	ldrb	w3, [x20, #5]
    3ac4:	ldp	x0, x1, [x20, #32]
    3ac8:	stp	x0, x1, [x19, #168]
    3acc:	mov	x5, x4
    3ad0:	ldp	x0, x1, [x20, #48]
    3ad4:	str	x4, [x19, #72]
    3ad8:	stp	x0, x1, [x19, #184]
    3adc:	cmp	w3, #0x1
    3ae0:	b.eq	3868 <elf_fill@@ELFUTILS_1.0+0x218>  // b.none
    3ae4:	b	37c4 <elf_fill@@ELFUTILS_1.0+0x174>
    3ae8:	add	x2, x2, x0
    3aec:	ands	x5, x2, #0x7
    3af0:	b.ne	3868 <elf_fill@@ELFUTILS_1.0+0x218>  // b.any
    3af4:	cmp	x21, #0x0
    3af8:	ccmp	x23, x0, #0x2, ne  // ne = any
    3afc:	b.ls	3e2c <elf_fill@@ELFUTILS_1.0+0x7dc>  // b.plast
    3b00:	sub	x0, x23, x0
    3b04:	lsl	x8, x21, #6
    3b08:	cmp	x0, x21, lsl #6
    3b0c:	b.cc	3e2c <elf_fill@@ELFUTILS_1.0+0x7dc>  // b.lo, b.ul, b.last
    3b10:	str	x2, [x19, #80]
    3b14:	add	x3, x19, #0xc8
    3b18:	cbz	x21, 3890 <elf_fill@@ELFUTILS_1.0+0x240>
    3b1c:	add	x0, x19, #0x154
    3b20:	add	x4, x2, #0x4
    3b24:	mov	w9, #0xffffffff            	// #-1
    3b28:	b	3b4c <elf_fill@@ELFUTILS_1.0+0x4fc>
    3b2c:	ldr	w1, [x0]
    3b30:	cbnz	w1, 3b38 <elf_fill@@ELFUTILS_1.0+0x4e8>
    3b34:	str	w9, [x0]
    3b38:	add	x5, x5, #0x1
    3b3c:	add	x0, x0, #0xd0
    3b40:	cmp	x21, x5
    3b44:	add	x4, x4, #0x40
    3b48:	b.eq	3df0 <elf_fill@@ELFUTILS_1.0+0x7a0>  // b.none
    3b4c:	ldur	x1, [x4, #20]
    3b50:	stur	x5, [x0, #4]
    3b54:	stur	x19, [x0, #12]
    3b58:	cmp	x23, x1
    3b5c:	b.ls	3b80 <elf_fill@@ELFUTILS_1.0+0x530>  // b.plast
    3b60:	ldur	x6, [x4, #28]
    3b64:	sub	x7, x23, x1
    3b68:	cmp	x7, x6
    3b6c:	b.cc	3b80 <elf_fill@@ELFUTILS_1.0+0x530>  // b.lo, b.ul, b.last
    3b70:	add	x1, x25, x1
    3b74:	add	x1, x22, x1
    3b78:	stur	x1, [x0, #36]
    3b7c:	stur	x1, [x0, #44]
    3b80:	ldr	w1, [x4]
    3b84:	stur	x3, [x0, #76]
    3b88:	cmp	w1, #0x12
    3b8c:	b.ne	3b2c <elf_fill@@ELFUTILS_1.0+0x4dc>  // b.any
    3b90:	ldr	w1, [x4, #36]
    3b94:	cmp	x21, x1
    3b98:	b.ls	3b2c <elf_fill@@ELFUTILS_1.0+0x4dc>  // b.plast
    3b9c:	add	x6, x1, x1, lsl #1
    3ba0:	add	x1, x1, x6, lsl #2
    3ba4:	add	x1, x19, x1, lsl #4
    3ba8:	str	w5, [x1, #340]
    3bac:	b	3b2c <elf_fill@@ELFUTILS_1.0+0x4dc>
    3bb0:	tst	x2, #0x3
    3bb4:	b.ne	3c88 <elf_fill@@ELFUTILS_1.0+0x638>  // b.any
    3bb8:	ldr	w0, [x2, #32]
    3bbc:	str	x2, [x19, #72]
    3bc0:	b	39c4 <elf_fill@@ELFUTILS_1.0+0x374>
    3bc4:	ldp	x0, x1, [x20]
    3bc8:	stp	x0, x1, [x19, #136]
    3bcc:	add	x4, x19, #0x88
    3bd0:	ldp	x0, x1, [x20, #16]
    3bd4:	stp	x0, x1, [x19, #152]
    3bd8:	mov	x5, x4
    3bdc:	ldp	x0, x1, [x20, #32]
    3be0:	stp	x0, x1, [x19, #168]
    3be4:	ldp	x0, x1, [x20, #48]
    3be8:	str	x4, [x19, #72]
    3bec:	stp	x0, x1, [x19, #184]
    3bf0:	b	3858 <elf_fill@@ELFUTILS_1.0+0x208>
    3bf4:	cbz	x0, 3720 <elf_fill@@ELFUTILS_1.0+0xd0>
    3bf8:	cmp	x23, x0
    3bfc:	b.ls	3720 <elf_fill@@ELFUTILS_1.0+0xd0>  // b.plast
    3c00:	add	x1, x0, #0x40
    3c04:	cmp	x23, x1
    3c08:	b.cc	3720 <elf_fill@@ELFUTILS_1.0+0xd0>  // b.lo, b.ul, b.last
    3c0c:	cbz	x22, 3e5c <elf_fill@@ELFUTILS_1.0+0x80c>
    3c10:	add	x0, x22, x0
    3c14:	cmp	w6, #0x1
    3c18:	add	x1, x0, x25
    3c1c:	ldr	x28, [x1, #32]
    3c20:	str	x28, [sp, #120]
    3c24:	b.eq	3e50 <elf_fill@@ELFUTILS_1.0+0x800>  // b.none
    3c28:	cmp	w6, #0x1
    3c2c:	b.eq	3c38 <elf_fill@@ELFUTILS_1.0+0x5e8>  // b.none
    3c30:	rev	x28, x28
    3c34:	str	x28, [sp, #120]
    3c38:	mov	x0, #0xffffffff            	// #4294967295
    3c3c:	cmp	x28, x0
    3c40:	b.hi	3e34 <elf_fill@@ELFUTILS_1.0+0x7e4>  // b.pmore
    3c44:	ldr	x0, [x21, #40]
    3c48:	b	3718 <elf_fill@@ELFUTILS_1.0+0xc8>
    3c4c:	ldp	x0, x1, [x20]
    3c50:	stp	x0, x1, [x19, #136]
    3c54:	ldr	w6, [x20, #48]
    3c58:	ldp	x0, x1, [x20, #16]
    3c5c:	stp	x0, x1, [x19, #152]
    3c60:	add	x3, x19, #0x88
    3c64:	ldp	x0, x1, [x20, #32]
    3c68:	str	x3, [x19, #72]
    3c6c:	ldrb	w4, [x20, #5]
    3c70:	mov	x5, x3
    3c74:	stp	x0, x1, [x19, #168]
    3c78:	cmp	w4, #0x1
    3c7c:	str	w6, [x19, #184]
    3c80:	b.eq	39d0 <elf_fill@@ELFUTILS_1.0+0x380>  // b.none
    3c84:	b	3944 <elf_fill@@ELFUTILS_1.0+0x2f4>
    3c88:	ldp	x0, x1, [x20]
    3c8c:	stp	x0, x1, [x19, #136]
    3c90:	add	x3, x19, #0x88
    3c94:	ldp	x0, x1, [x20, #16]
    3c98:	stp	x0, x1, [x19, #152]
    3c9c:	ldr	w6, [x20, #48]
    3ca0:	ldp	x0, x1, [x20, #32]
    3ca4:	mov	x5, x3
    3ca8:	str	x3, [x19, #72]
    3cac:	stp	x0, x1, [x19, #168]
    3cb0:	str	w6, [x19, #184]
    3cb4:	b	39c0 <elf_fill@@ELFUTILS_1.0+0x370>
    3cb8:	ldr	w4, [x20, #48]
    3cbc:	add	x19, sp, #0x80
    3cc0:	ldp	x0, x1, [x20]
    3cc4:	and	w8, w4, #0xffff
    3cc8:	ldp	x2, x3, [x20, #16]
    3ccc:	stp	x0, x1, [sp, #128]
    3cd0:	ldp	x7, x5, [x20, #32]
    3cd4:	stp	x2, x3, [sp, #144]
    3cd8:	stp	x7, x5, [sp, #160]
    3cdc:	str	w4, [sp, #176]
    3ce0:	b	3a4c <elf_fill@@ELFUTILS_1.0+0x3fc>
    3ce4:	mov	w0, w0
    3ce8:	add	x2, x2, x0
    3cec:	ands	x5, x2, #0x3
    3cf0:	b.ne	39d0 <elf_fill@@ELFUTILS_1.0+0x380>  // b.any
    3cf4:	cmp	x21, #0x0
    3cf8:	ccmp	x0, x23, #0x0, ne  // ne = any
    3cfc:	b.cs	3e2c <elf_fill@@ELFUTILS_1.0+0x7dc>  // b.hs, b.nlast
    3d00:	add	x1, x21, x21, lsl #2
    3d04:	sub	x0, x23, x0
    3d08:	cmp	x0, x1, lsl #3
    3d0c:	lsl	x6, x1, #3
    3d10:	b.cc	3e2c <elf_fill@@ELFUTILS_1.0+0x7dc>  // b.lo, b.ul, b.last
    3d14:	str	x2, [x19, #80]
    3d18:	add	x3, x19, #0xc8
    3d1c:	cbz	x21, 3890 <elf_fill@@ELFUTILS_1.0+0x240>
    3d20:	add	x0, x19, #0x154
    3d24:	add	x4, x2, #0x4
    3d28:	mov	w9, #0xffffffff            	// #-1
    3d2c:	b	3d50 <elf_fill@@ELFUTILS_1.0+0x700>
    3d30:	ldr	w1, [x0]
    3d34:	cbnz	w1, 3d3c <elf_fill@@ELFUTILS_1.0+0x6ec>
    3d38:	str	w9, [x0]
    3d3c:	add	x5, x5, #0x1
    3d40:	add	x0, x0, #0xd0
    3d44:	cmp	x5, x21
    3d48:	add	x4, x4, #0x28
    3d4c:	b.eq	3e0c <elf_fill@@ELFUTILS_1.0+0x7bc>  // b.none
    3d50:	ldr	w1, [x4, #12]
    3d54:	stur	x5, [x0, #4]
    3d58:	stur	x19, [x0, #12]
    3d5c:	cmp	x23, x1
    3d60:	b.ls	3d84 <elf_fill@@ELFUTILS_1.0+0x734>  // b.plast
    3d64:	ldr	w7, [x4, #16]
    3d68:	sub	x8, x23, x1
    3d6c:	cmp	x8, x7
    3d70:	b.cc	3d84 <elf_fill@@ELFUTILS_1.0+0x734>  // b.lo, b.ul, b.last
    3d74:	add	x1, x25, x1
    3d78:	add	x1, x22, x1
    3d7c:	stur	x1, [x0, #36]
    3d80:	stur	x1, [x0, #44]
    3d84:	ldr	w1, [x4]
    3d88:	stur	x3, [x0, #76]
    3d8c:	cmp	w1, #0x12
    3d90:	b.ne	3d30 <elf_fill@@ELFUTILS_1.0+0x6e0>  // b.any
    3d94:	ldr	w1, [x4, #20]
    3d98:	cmp	x1, x21
    3d9c:	b.cs	3d30 <elf_fill@@ELFUTILS_1.0+0x6e0>  // b.hs, b.nlast
    3da0:	add	x7, x1, x1, lsl #1
    3da4:	add	x1, x1, x7, lsl #2
    3da8:	add	x1, x19, x1, lsl #4
    3dac:	str	w5, [x1, #340]
    3db0:	b	3d30 <elf_fill@@ELFUTILS_1.0+0x6e0>
    3db4:	cbz	w7, 3720 <elf_fill@@ELFUTILS_1.0+0xd0>
    3db8:	cmp	x23, x0
    3dbc:	b.ls	3720 <elf_fill@@ELFUTILS_1.0+0xd0>  // b.plast
    3dc0:	sub	x1, x23, x0
    3dc4:	cmp	x1, #0x27
    3dc8:	b.ls	3720 <elf_fill@@ELFUTILS_1.0+0xd0>  // b.plast
    3dcc:	cbz	x22, 3ed0 <elf_fill@@ELFUTILS_1.0+0x880>
    3dd0:	add	x1, x22, x0
    3dd4:	cmp	w6, #0x1
    3dd8:	add	x2, x1, x25
    3ddc:	ldr	w28, [x2, #20]
    3de0:	b.eq	3de8 <elf_fill@@ELFUTILS_1.0+0x798>  // b.none
    3de4:	rev	w28, w28
    3de8:	mov	w28, w28
    3dec:	b	3a58 <elf_fill@@ELFUTILS_1.0+0x408>
    3df0:	add	x1, x2, x8
    3df4:	add	x0, x19, #0x168
    3df8:	str	x2, [x0], #208
    3dfc:	add	x2, x2, #0x40
    3e00:	cmp	x1, x2
    3e04:	b.ne	3df8 <elf_fill@@ELFUTILS_1.0+0x7a8>  // b.any
    3e08:	b	3890 <elf_fill@@ELFUTILS_1.0+0x240>
    3e0c:	add	x1, x2, x6
    3e10:	add	x0, x19, #0x168
    3e14:	nop
    3e18:	str	x2, [x0], #208
    3e1c:	add	x2, x2, #0x28
    3e20:	cmp	x1, x2
    3e24:	b.ne	3e18 <elf_fill@@ELFUTILS_1.0+0x7c8>  // b.any
    3e28:	b	3890 <elf_fill@@ELFUTILS_1.0+0x240>
    3e2c:	mov	x0, x19
    3e30:	bl	3200 <free@plt>
    3e34:	mov	w0, #0xa                   	// #10
    3e38:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    3e3c:	mov	x19, #0x0                   	// #0
    3e40:	ldp	x21, x22, [sp, #32]
    3e44:	ldp	x23, x24, [sp, #48]
    3e48:	ldp	x27, x28, [sp, #80]
    3e4c:	b	38a0 <elf_fill@@ELFUTILS_1.0+0x250>
    3e50:	tst	x0, #0x7
    3e54:	b.ne	3c28 <elf_fill@@ELFUTILS_1.0+0x5d8>  // b.any
    3e58:	b	3c38 <elf_fill@@ELFUTILS_1.0+0x5e8>
    3e5c:	add	x19, x25, #0x20
    3e60:	add	x1, sp, #0x78
    3e64:	add	x0, x19, x0
    3e68:	mov	x28, #0x0                   	// #0
    3e6c:	mov	x19, x0
    3e70:	stp	x1, x0, [sp, #96]
    3e74:	mov	x0, #0x8                   	// #8
    3e78:	sub	x2, x0, x28
    3e7c:	mov	x3, x19
    3e80:	ldr	x0, [sp, #96]
    3e84:	add	x1, x0, x28
    3e88:	mov	w0, w26
    3e8c:	bl	3250 <pread@plt>
    3e90:	cmn	x0, #0x1
    3e94:	b.eq	3eb8 <elf_fill@@ELFUTILS_1.0+0x868>  // b.none
    3e98:	add	x28, x28, x0
    3e9c:	cmp	x0, #0x0
    3ea0:	b.le	3f6c <elf_fill@@ELFUTILS_1.0+0x91c>
    3ea4:	cmp	x28, #0x7
    3ea8:	b.gt	3f58 <elf_fill@@ELFUTILS_1.0+0x908>
    3eac:	ldr	x0, [sp, #104]
    3eb0:	add	x19, x0, x28
    3eb4:	b	3e74 <elf_fill@@ELFUTILS_1.0+0x824>
    3eb8:	bl	3340 <__errno_location@plt>
    3ebc:	ldr	w0, [x0]
    3ec0:	cmp	w0, #0x4
    3ec4:	b.eq	3e74 <elf_fill@@ELFUTILS_1.0+0x824>  // b.none
    3ec8:	mov	w0, #0x9                   	// #9
    3ecc:	b	3e38 <elf_fill@@ELFUTILS_1.0+0x7e8>
    3ed0:	add	x0, x0, x25
    3ed4:	add	x1, sp, #0x78
    3ed8:	add	x0, x0, #0x14
    3edc:	mov	x21, #0x0                   	// #0
    3ee0:	mov	x28, x0
    3ee4:	stp	x1, x0, [sp, #96]
    3ee8:	mov	x0, #0x4                   	// #4
    3eec:	sub	x2, x0, x21
    3ef0:	mov	x3, x28
    3ef4:	ldr	x0, [sp, #96]
    3ef8:	add	x1, x0, x21
    3efc:	mov	w0, w26
    3f00:	bl	3250 <pread@plt>
    3f04:	cmn	x0, #0x1
    3f08:	b.eq	3f2c <elf_fill@@ELFUTILS_1.0+0x8dc>  // b.none
    3f0c:	add	x21, x21, x0
    3f10:	cmp	x0, #0x0
    3f14:	b.le	3f9c <elf_fill@@ELFUTILS_1.0+0x94c>
    3f18:	cmp	x21, #0x3
    3f1c:	b.gt	3f78 <elf_fill@@ELFUTILS_1.0+0x928>
    3f20:	ldr	x0, [sp, #104]
    3f24:	add	x28, x0, x21
    3f28:	b	3ee8 <elf_fill@@ELFUTILS_1.0+0x898>
    3f2c:	bl	3340 <__errno_location@plt>
    3f30:	ldr	w0, [x0]
    3f34:	cmp	w0, #0x4
    3f38:	b.eq	3ee8 <elf_fill@@ELFUTILS_1.0+0x898>  // b.none
    3f3c:	mov	w0, #0x9                   	// #9
    3f40:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    3f44:	mov	x19, #0x0                   	// #0
    3f48:	ldp	x21, x22, [sp, #32]
    3f4c:	ldp	x23, x24, [sp, #48]
    3f50:	ldp	x27, x28, [sp, #80]
    3f54:	b	38a0 <elf_fill@@ELFUTILS_1.0+0x250>
    3f58:	cmp	x28, #0x8
    3f5c:	b.ne	3e34 <elf_fill@@ELFUTILS_1.0+0x7e4>  // b.any
    3f60:	ldrb	w6, [x20, #5]
    3f64:	ldr	x28, [sp, #120]
    3f68:	b	3c28 <elf_fill@@ELFUTILS_1.0+0x5d8>
    3f6c:	b.eq	3e34 <elf_fill@@ELFUTILS_1.0+0x7e4>  // b.none
    3f70:	mov	w0, #0x9                   	// #9
    3f74:	b	3e38 <elf_fill@@ELFUTILS_1.0+0x7e8>
    3f78:	cmp	x21, #0x4
    3f7c:	b.ne	3fa0 <elf_fill@@ELFUTILS_1.0+0x950>  // b.any
    3f80:	ldrb	w6, [x20, #5]
    3f84:	ldr	w0, [x19, #32]
    3f88:	ldr	w28, [sp, #120]
    3f8c:	cmp	w6, #0x1
    3f90:	b.ne	3de4 <elf_fill@@ELFUTILS_1.0+0x794>  // b.any
    3f94:	mov	w28, w28
    3f98:	b	3a58 <elf_fill@@ELFUTILS_1.0+0x408>
    3f9c:	b.ne	3f3c <elf_fill@@ELFUTILS_1.0+0x8ec>  // b.any
    3fa0:	mov	w0, #0xa                   	// #10
    3fa4:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    3fa8:	b	3f44 <elf_fill@@ELFUTILS_1.0+0x8f4>
    3fac:	mov	w0, #0x8                   	// #8
    3fb0:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    3fb4:	ldp	x21, x22, [sp, #32]
    3fb8:	ldp	x23, x24, [sp, #48]
    3fbc:	ldp	x27, x28, [sp, #80]
    3fc0:	b	38a0 <elf_fill@@ELFUTILS_1.0+0x250>
    3fc4:	ldrh	w7, [x20, #60]
    3fc8:	mov	x21, x20
    3fcc:	ldr	x0, [x20, #40]
    3fd0:	b	3710 <elf_fill@@ELFUTILS_1.0+0xc0>
    3fd4:	nop
    3fd8:	stp	x29, x30, [sp, #-64]!
    3fdc:	cmp	x3, #0x7
    3fe0:	mov	x29, sp
    3fe4:	stp	x19, x20, [sp, #16]
    3fe8:	mov	x19, x2
    3fec:	mov	x20, x1
    3ff0:	stp	x21, x22, [sp, #32]
    3ff4:	mov	x21, x5
    3ff8:	mov	w22, w0
    3ffc:	stp	x23, x24, [sp, #48]
    4000:	mov	x24, x3
    4004:	mov	w23, w4
    4008:	b.hi	4048 <elf_fill@@ELFUTILS_1.0+0x9f8>  // b.pmore
    400c:	mov	x1, #0x108                 	// #264
    4010:	mov	x0, #0x1                   	// #1
    4014:	bl	3140 <calloc@plt>
    4018:	cbz	x0, 411c <elf_fill@@ELFUTILS_1.0+0xacc>
    401c:	mov	w1, #0x1                   	// #1
    4020:	stp	x20, x21, [x0]
    4024:	stp	wzr, w23, [x0, #24]
    4028:	str	w22, [x0, #36]
    402c:	stp	x19, x24, [x0, #40]
    4030:	str	w1, [x0, #60]
    4034:	ldp	x19, x20, [sp, #16]
    4038:	ldp	x21, x22, [sp, #32]
    403c:	ldp	x23, x24, [sp, #48]
    4040:	ldp	x29, x30, [sp], #64
    4044:	ret
    4048:	mov	x3, #0x3c21                	// #15393
    404c:	ldr	x4, [x1, x2]
    4050:	movk	x3, #0x7261, lsl #16
    4054:	movk	x3, #0x6863, lsl #32
    4058:	add	x2, x1, x2
    405c:	movk	x3, #0xa3e, lsl #48
    4060:	cmp	x4, x3
    4064:	b.eq	40d0 <elf_fill@@ELFUTILS_1.0+0xa80>  // b.none
    4068:	cmp	x24, #0xf
    406c:	b.ls	400c <elf_fill@@ELFUTILS_1.0+0x9bc>  // b.plast
    4070:	ldr	w4, [x1, x19]
    4074:	mov	w3, #0x457f                	// #17791
    4078:	movk	w3, #0x464c, lsl #16
    407c:	cmp	w4, w3
    4080:	b.ne	400c <elf_fill@@ELFUTILS_1.0+0x9bc>  // b.any
    4084:	ldrb	w3, [x2, #4]
    4088:	sub	w3, w3, #0x1
    408c:	cmp	w3, #0x1
    4090:	b.hi	400c <elf_fill@@ELFUTILS_1.0+0x9bc>  // b.pmore
    4094:	ldrb	w3, [x2, #5]
    4098:	ldrb	w4, [x2, #6]
    409c:	sub	w3, w3, #0x1
    40a0:	cmp	w3, #0x1
    40a4:	ccmp	w4, #0x1, #0x0, ls  // ls = plast
    40a8:	b.ne	400c <elf_fill@@ELFUTILS_1.0+0x9bc>  // b.any
    40ac:	mov	x6, x5
    40b0:	mov	x4, x24
    40b4:	mov	w5, w23
    40b8:	mov	x3, x19
    40bc:	ldp	x19, x20, [sp, #16]
    40c0:	ldp	x21, x22, [sp, #32]
    40c4:	ldp	x23, x24, [sp, #48]
    40c8:	ldp	x29, x30, [sp], #64
    40cc:	b	3660 <elf_fill@@ELFUTILS_1.0+0x10>
    40d0:	mov	x1, #0x108                 	// #264
    40d4:	mov	x0, #0x1                   	// #1
    40d8:	bl	3140 <calloc@plt>
    40dc:	cbz	x0, 411c <elf_fill@@ELFUTILS_1.0+0xacc>
    40e0:	add	x3, x19, #0x8
    40e4:	mov	w1, #0x1                   	// #1
    40e8:	add	x2, x0, #0xf4
    40ec:	stp	x20, x21, [x0]
    40f0:	stp	w1, w23, [x0, #24]
    40f4:	str	w22, [x0, #36]
    40f8:	stp	x19, x24, [x0, #40]
    40fc:	str	w1, [x0, #60]
    4100:	str	x3, [x0, #112]
    4104:	str	x2, [x0, #160]
    4108:	ldp	x19, x20, [sp, #16]
    410c:	ldp	x21, x22, [sp, #32]
    4110:	ldp	x23, x24, [sp, #48]
    4114:	ldp	x29, x30, [sp], #64
    4118:	ret
    411c:	mov	w0, #0x8                   	// #8
    4120:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    4124:	mov	x0, #0x0                   	// #0
    4128:	b	4034 <elf_fill@@ELFUTILS_1.0+0x9e4>
    412c:	nop
    4130:	stp	x29, x30, [sp, #-224]!
    4134:	cmn	x2, #0x1
    4138:	mov	x29, sp
    413c:	stp	x19, x20, [sp, #16]
    4140:	mov	x20, x2
    4144:	sub	w19, w3, #0x8
    4148:	stp	x21, x22, [sp, #32]
    414c:	mov	x21, x1
    4150:	mov	x22, x4
    4154:	stp	x23, x24, [sp, #48]
    4158:	mov	w23, w3
    415c:	mov	w24, w0
    4160:	cbz	x4, 42ac <elf_fill@@ELFUTILS_1.0+0xc5c>
    4164:	b.eq	446c <elf_fill@@ELFUTILS_1.0+0xe1c>  // b.none
    4168:	cmp	w19, #0x3
    416c:	b.hi	41b0 <elf_fill@@ELFUTILS_1.0+0xb60>  // b.pmore
    4170:	ldr	x19, [x22]
    4174:	cbz	x19, 41b0 <elf_fill@@ELFUTILS_1.0+0xb60>
    4178:	cmn	x19, #0x1
    417c:	b.eq	4494 <elf_fill@@ELFUTILS_1.0+0xe44>  // b.none
    4180:	mov	w4, w23
    4184:	mov	x2, x21
    4188:	mov	x5, x22
    418c:	mov	x3, x20
    4190:	mov	x1, x19
    4194:	bl	3fd8 <elf_fill@@ELFUTILS_1.0+0x988>
    4198:	cbz	x0, 43cc <elf_fill@@ELFUTILS_1.0+0xd7c>
    419c:	ldp	x19, x20, [sp, #16]
    41a0:	ldp	x21, x22, [sp, #32]
    41a4:	ldp	x23, x24, [sp, #48]
    41a8:	ldp	x29, x30, [sp], #224
    41ac:	ret
    41b0:	cmp	x20, #0x40
    41b4:	stp	x25, x26, [sp, #64]
    41b8:	mov	x25, #0x40                  	// #64
    41bc:	csel	x25, x20, x25, ls  // ls = plast
    41c0:	mov	x26, x21
    41c4:	stp	x27, x28, [sp, #80]
    41c8:	add	x28, sp, #0x60
    41cc:	mov	x27, x25
    41d0:	mov	x19, #0x0                   	// #0
    41d4:	add	x1, x28, x19
    41d8:	mov	x3, x26
    41dc:	mov	x2, x27
    41e0:	mov	w0, w24
    41e4:	bl	3250 <pread@plt>
    41e8:	cmn	x0, #0x1
    41ec:	mov	x1, x19
    41f0:	b.eq	4234 <elf_fill@@ELFUTILS_1.0+0xbe4>  // b.none
    41f4:	cmp	x0, #0x0
    41f8:	b.le	425c <elf_fill@@ELFUTILS_1.0+0xc0c>
    41fc:	add	x19, x19, x0
    4200:	cmp	x25, x19
    4204:	mov	x1, x19
    4208:	b.ls	4260 <elf_fill@@ELFUTILS_1.0+0xc10>  // b.plast
    420c:	add	x26, x21, x19
    4210:	sub	x27, x25, x19
    4214:	add	x1, x28, x19
    4218:	mov	x3, x26
    421c:	mov	x2, x27
    4220:	mov	w0, w24
    4224:	bl	3250 <pread@plt>
    4228:	cmn	x0, #0x1
    422c:	mov	x1, x19
    4230:	b.ne	41f4 <elf_fill@@ELFUTILS_1.0+0xba4>  // b.any
    4234:	bl	3340 <__errno_location@plt>
    4238:	ldr	w0, [x0]
    423c:	cmp	w0, #0x4
    4240:	b.eq	41d4 <elf_fill@@ELFUTILS_1.0+0xb84>  // b.none
    4244:	mov	w0, #0x9                   	// #9
    4248:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    424c:	mov	x0, #0x0                   	// #0
    4250:	ldp	x25, x26, [sp, #64]
    4254:	ldp	x27, x28, [sp, #80]
    4258:	b	419c <elf_fill@@ELFUTILS_1.0+0xb4c>
    425c:	b.ne	4324 <elf_fill@@ELFUTILS_1.0+0xcd4>  // b.any
    4260:	cmp	x19, #0x7
    4264:	b.hi	4328 <elf_fill@@ELFUTILS_1.0+0xcd8>  // b.pmore
    4268:	mov	x1, #0x108                 	// #264
    426c:	mov	x0, #0x1                   	// #1
    4270:	bl	3140 <calloc@plt>
    4274:	cbz	x0, 44bc <elf_fill@@ELFUTILS_1.0+0xe6c>
    4278:	mov	w1, #0x1                   	// #1
    427c:	ldp	x25, x26, [sp, #64]
    4280:	ldp	x27, x28, [sp, #80]
    4284:	stp	xzr, x22, [x0]
    4288:	stp	wzr, w23, [x0, #24]
    428c:	str	w24, [x0, #36]
    4290:	stp	x21, x20, [x0, #40]
    4294:	str	w1, [x0, #60]
    4298:	ldp	x19, x20, [sp, #16]
    429c:	ldp	x21, x22, [sp, #32]
    42a0:	ldp	x23, x24, [sp, #48]
    42a4:	ldp	x29, x30, [sp], #224
    42a8:	ret
    42ac:	b.eq	444c <elf_fill@@ELFUTILS_1.0+0xdfc>  // b.none
    42b0:	cmp	w19, #0x3
    42b4:	b.hi	41b0 <elf_fill@@ELFUTILS_1.0+0xb60>  // b.pmore
    42b8:	cmp	w23, #0x8
    42bc:	b.eq	4440 <elf_fill@@ELFUTILS_1.0+0xdf0>  // b.none
    42c0:	cmp	w23, #0xb
    42c4:	mov	w3, #0x2                   	// #2
    42c8:	csinc	w3, w3, wzr, eq  // eq = none
    42cc:	mov	w2, #0x3                   	// #3
    42d0:	mov	x5, x21
    42d4:	mov	w4, w24
    42d8:	mov	x1, x20
    42dc:	mov	x0, #0x0                   	// #0
    42e0:	bl	31e0 <mmap@plt>
    42e4:	mov	x19, x0
    42e8:	sub	x0, x0, #0x1
    42ec:	cmn	x0, #0x3
    42f0:	b.hi	41b0 <elf_fill@@ELFUTILS_1.0+0xb60>  // b.pmore
    42f4:	mov	w4, w23
    42f8:	mov	x2, x21
    42fc:	mov	w0, w24
    4300:	mov	x3, x20
    4304:	mov	x1, x19
    4308:	mov	x5, #0x0                   	// #0
    430c:	bl	3fd8 <elf_fill@@ELFUTILS_1.0+0x988>
    4310:	cbz	x0, 43d8 <elf_fill@@ELFUTILS_1.0+0xd88>
    4314:	ldr	w1, [x0, #56]
    4318:	orr	w1, w1, #0x40
    431c:	str	w1, [x0, #56]
    4320:	b	419c <elf_fill@@ELFUTILS_1.0+0xb4c>
    4324:	mov	x1, x0
    4328:	mov	x0, #0x3c21                	// #15393
    432c:	ldr	x2, [sp, #96]
    4330:	movk	x0, #0x7261, lsl #16
    4334:	movk	x0, #0x6863, lsl #32
    4338:	movk	x0, #0xa3e, lsl #48
    433c:	cmp	x2, x0
    4340:	b.eq	43ec <elf_fill@@ELFUTILS_1.0+0xd9c>  // b.none
    4344:	cmp	x1, #0xf
    4348:	b.ls	4268 <elf_fill@@ELFUTILS_1.0+0xc18>  // b.plast
    434c:	ldr	w2, [sp, #96]
    4350:	mov	w0, #0x457f                	// #17791
    4354:	movk	w0, #0x464c, lsl #16
    4358:	cmp	w2, w0
    435c:	b.ne	4268 <elf_fill@@ELFUTILS_1.0+0xc18>  // b.any
    4360:	ldrb	w0, [sp, #100]
    4364:	sub	w2, w0, #0x1
    4368:	cmp	w2, #0x1
    436c:	b.hi	4268 <elf_fill@@ELFUTILS_1.0+0xc18>  // b.pmore
    4370:	ldrb	w2, [sp, #101]
    4374:	ldrb	w3, [sp, #102]
    4378:	sub	w2, w2, #0x1
    437c:	cmp	w2, #0x1
    4380:	ccmp	w3, #0x1, #0x0, ls  // ls = plast
    4384:	b.ne	4268 <elf_fill@@ELFUTILS_1.0+0xc18>  // b.any
    4388:	cmp	w0, #0x1
    438c:	mov	x2, #0x40                  	// #64
    4390:	mov	x0, #0x34                  	// #52
    4394:	csel	x0, x0, x2, eq  // eq = none
    4398:	cmp	x1, x0
    439c:	b.cc	4268 <elf_fill@@ELFUTILS_1.0+0xc18>  // b.lo, b.ul, b.last
    43a0:	mov	x2, x28
    43a4:	mov	x6, x22
    43a8:	mov	w5, w23
    43ac:	mov	x4, x20
    43b0:	mov	x3, x21
    43b4:	mov	w0, w24
    43b8:	mov	x1, #0x0                   	// #0
    43bc:	bl	3660 <elf_fill@@ELFUTILS_1.0+0x10>
    43c0:	ldp	x25, x26, [sp, #64]
    43c4:	ldp	x27, x28, [sp, #80]
    43c8:	b	419c <elf_fill@@ELFUTILS_1.0+0xb4c>
    43cc:	ldr	x1, [x22]
    43d0:	cmp	x1, x19
    43d4:	b.eq	419c <elf_fill@@ELFUTILS_1.0+0xb4c>  // b.none
    43d8:	mov	x1, x20
    43dc:	mov	x0, x19
    43e0:	bl	32a0 <munmap@plt>
    43e4:	mov	x0, #0x0                   	// #0
    43e8:	b	419c <elf_fill@@ELFUTILS_1.0+0xb4c>
    43ec:	mov	x1, #0x108                 	// #264
    43f0:	mov	x0, #0x1                   	// #1
    43f4:	bl	3140 <calloc@plt>
    43f8:	cbz	x0, 44bc <elf_fill@@ELFUTILS_1.0+0xe6c>
    43fc:	add	x3, x21, #0x8
    4400:	mov	w1, #0x1                   	// #1
    4404:	add	x2, x0, #0xf4
    4408:	ldp	x25, x26, [sp, #64]
    440c:	ldp	x27, x28, [sp, #80]
    4410:	stp	xzr, x22, [x0]
    4414:	stp	w1, w23, [x0, #24]
    4418:	str	w24, [x0, #36]
    441c:	stp	x21, x20, [x0, #40]
    4420:	str	w1, [x0, #60]
    4424:	str	x3, [x0, #112]
    4428:	str	x2, [x0, #160]
    442c:	ldp	x19, x20, [sp, #16]
    4430:	ldp	x21, x22, [sp, #32]
    4434:	ldp	x23, x24, [sp, #48]
    4438:	ldp	x29, x30, [sp], #224
    443c:	ret
    4440:	mov	w2, #0x1                   	// #1
    4444:	mov	w3, #0x2                   	// #2
    4448:	b	42d0 <elf_fill@@ELFUTILS_1.0+0xc80>
    444c:	mov	w1, w0
    4450:	add	x2, sp, #0x60
    4454:	mov	w0, #0x0                   	// #0
    4458:	bl	32f0 <__fxstat@plt>
    445c:	ldr	x1, [sp, #144]
    4460:	cmp	w0, #0x0
    4464:	csel	x20, x1, x20, eq  // eq = none
    4468:	b	42b0 <elf_fill@@ELFUTILS_1.0+0xc60>
    446c:	adrp	x3, 15000 <elf_compress_gnu@@ELFUTILS_1.7+0x1b8>
    4470:	adrp	x1, 15000 <elf_compress_gnu@@ELFUTILS_1.7+0x1b8>
    4474:	adrp	x0, 15000 <elf_compress_gnu@@ELFUTILS_1.7+0x1b8>
    4478:	add	x3, x3, #0x8c8
    447c:	add	x1, x1, #0x828
    4480:	add	x0, x0, #0x838
    4484:	mov	w2, #0x291                 	// #657
    4488:	stp	x25, x26, [sp, #64]
    448c:	stp	x27, x28, [sp, #80]
    4490:	bl	3330 <__assert_fail@plt>
    4494:	adrp	x3, 15000 <elf_compress_gnu@@ELFUTILS_1.7+0x1b8>
    4498:	adrp	x1, 15000 <elf_compress_gnu@@ELFUTILS_1.7+0x1b8>
    449c:	adrp	x0, 15000 <elf_compress_gnu@@ELFUTILS_1.7+0x1b8>
    44a0:	add	x3, x3, #0x8c8
    44a4:	add	x1, x1, #0x828
    44a8:	add	x0, x0, #0x858
    44ac:	mov	w2, #0x2ad                 	// #685
    44b0:	stp	x25, x26, [sp, #64]
    44b4:	stp	x27, x28, [sp, #80]
    44b8:	bl	3330 <__assert_fail@plt>
    44bc:	mov	w0, #0x8                   	// #8
    44c0:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    44c4:	mov	x0, #0x0                   	// #0
    44c8:	ldp	x25, x26, [sp, #64]
    44cc:	ldp	x27, x28, [sp, #80]
    44d0:	b	419c <elf_fill@@ELFUTILS_1.0+0xb4c>
    44d4:	nop
    44d8:	stp	x29, x30, [sp, #-192]!
    44dc:	mov	x29, sp
    44e0:	stp	x19, x20, [sp, #16]
    44e4:	mov	x20, x0
    44e8:	ldr	x19, [x0]
    44ec:	stp	x21, x22, [sp, #32]
    44f0:	ldr	x22, [x0, #112]
    44f4:	cbz	x19, 45b8 <elf_fill@@ELFUTILS_1.0+0xf68>
    44f8:	ldp	x0, x1, [x0, #40]
    44fc:	add	x0, x0, x1
    4500:	cmp	x22, x0
    4504:	b.hi	4644 <elf_fill@@ELFUTILS_1.0+0xff4>  // b.pmore
    4508:	sub	x0, x0, x22
    450c:	cmp	x0, #0x3b
    4510:	b.ls	4644 <elf_fill@@ELFUTILS_1.0+0xff4>  // b.plast
    4514:	add	x19, x19, x22
    4518:	ldrh	w0, [x19, #58]
    451c:	cmp	w0, #0xa60
    4520:	b.ne	4a0c <elf_fill@@ELFUTILS_1.0+0x13bc>  // b.any
    4524:	add	x0, x20, #0xf4
    4528:	ldp	x2, x3, [x19]
    452c:	stp	x2, x3, [x0]
    4530:	strb	wzr, [x20, #260]
    4534:	ldrb	w0, [x19]
    4538:	cmp	w0, #0x2f
    453c:	b.ne	4660 <elf_fill@@ELFUTILS_1.0+0x1010>  // b.any
    4540:	ldrb	w21, [x19, #1]
    4544:	cmp	w21, #0x20
    4548:	b.eq	4844 <elf_fill@@ELFUTILS_1.0+0x11f4>  // b.none
    454c:	cmp	w21, #0x53
    4550:	b.eq	47e4 <elf_fill@@ELFUTILS_1.0+0x1194>  // b.none
    4554:	cmp	w21, #0x2f
    4558:	b.ne	4570 <elf_fill@@ELFUTILS_1.0+0xf20>  // b.any
    455c:	ldr	x1, [x19]
    4560:	mov	x0, #0x2020202020202020    	// #2314885530818453536
    4564:	movk	x0, #0x2f2f
    4568:	cmp	x1, x0
    456c:	b.eq	4a1c <elf_fill@@ELFUTILS_1.0+0x13cc>  // b.none
    4570:	bl	31d0 <__ctype_b_loc@plt>
    4574:	ubfiz	x21, x21, #1, #8
    4578:	ldr	x0, [x0]
    457c:	ldrh	w0, [x0, x21]
    4580:	tbz	w0, #11, 48f8 <elf_fill@@ELFUTILS_1.0+0x12a8>
    4584:	ldr	x0, [x20, #96]
    4588:	cbz	x0, 4a50 <elf_fill@@ELFUTILS_1.0+0x1400>
    458c:	mov	x1, #0x0                   	// #0
    4590:	add	x0, x19, #0x1
    4594:	mov	w2, #0xa                   	// #10
    4598:	bl	31f0 <strtol@plt>
    459c:	ldr	x1, [x20, #104]
    45a0:	cmp	x1, x0
    45a4:	b.ls	48f8 <elf_fill@@ELFUTILS_1.0+0x12a8>  // b.plast
    45a8:	ldr	x1, [x20, #96]
    45ac:	add	x0, x1, x0
    45b0:	str	x0, [x20, #120]
    45b4:	b	4684 <elf_fill@@ELFUTILS_1.0+0x1034>
    45b8:	add	x19, x0, #0xa8
    45bc:	stp	x25, x26, [sp, #64]
    45c0:	ldr	w26, [x0, #36]
    45c4:	stp	x23, x24, [sp, #48]
    45c8:	mov	x24, x19
    45cc:	mov	x23, x22
    45d0:	mov	x21, #0x0                   	// #0
    45d4:	mov	x25, #0x3c                  	// #60
    45d8:	mov	x3, x23
    45dc:	sub	x2, x25, x21
    45e0:	mov	x1, x24
    45e4:	mov	w0, w26
    45e8:	bl	3250 <pread@plt>
    45ec:	cmn	x0, #0x1
    45f0:	b.eq	462c <elf_fill@@ELFUTILS_1.0+0xfdc>  // b.none
    45f4:	add	x21, x21, x0
    45f8:	cmp	x0, #0x0
    45fc:	b.le	463c <elf_fill@@ELFUTILS_1.0+0xfec>
    4600:	cmp	x21, #0x3b
    4604:	b.gt	4830 <elf_fill@@ELFUTILS_1.0+0x11e0>
    4608:	add	x23, x21, x22
    460c:	add	x24, x19, x21
    4610:	mov	x3, x23
    4614:	sub	x2, x25, x21
    4618:	mov	x1, x24
    461c:	mov	w0, w26
    4620:	bl	3250 <pread@plt>
    4624:	cmn	x0, #0x1
    4628:	b.ne	45f4 <elf_fill@@ELFUTILS_1.0+0xfa4>  // b.any
    462c:	bl	3340 <__errno_location@plt>
    4630:	ldr	w0, [x0]
    4634:	cmp	w0, #0x4
    4638:	b.eq	45d8 <elf_fill@@ELFUTILS_1.0+0xf88>  // b.none
    463c:	ldp	x23, x24, [sp, #48]
    4640:	ldp	x25, x26, [sp, #64]
    4644:	mov	w0, #0xe                   	// #14
    4648:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    464c:	mov	w0, #0xffffffff            	// #-1
    4650:	ldp	x19, x20, [sp, #16]
    4654:	ldp	x21, x22, [sp, #32]
    4658:	ldp	x29, x30, [sp], #192
    465c:	ret
    4660:	add	x21, x20, #0xe4
    4664:	mov	x1, x19
    4668:	mov	x0, x21
    466c:	mov	x3, #0x10                  	// #16
    4670:	mov	w2, #0x2f                  	// #47
    4674:	bl	3060 <memccpy@plt>
    4678:	cbz	x0, 4914 <elf_fill@@ELFUTILS_1.0+0x12c4>
    467c:	sturb	wzr, [x0, #-1]
    4680:	str	x21, [x20, #120]
    4684:	ldrb	w0, [x19, #48]
    4688:	cmp	w0, #0x20
    468c:	b.eq	48f8 <elf_fill@@ELFUTILS_1.0+0x12a8>  // b.none
    4690:	ldrb	w1, [x19, #27]
    4694:	add	x0, x19, #0x10
    4698:	cmp	w1, #0x20
    469c:	b.eq	46b8 <elf_fill@@ELFUTILS_1.0+0x1068>  // b.none
    46a0:	ldr	x1, [x19, #16]
    46a4:	str	x1, [sp, #128]
    46a8:	ldr	w1, [x0, #8]
    46ac:	add	x0, sp, #0x80
    46b0:	str	w1, [sp, #136]
    46b4:	strb	wzr, [sp, #140]
    46b8:	add	x21, x20, #0x78
    46bc:	mov	x1, #0x0                   	// #0
    46c0:	mov	w2, #0xa                   	// #10
    46c4:	bl	31f0 <strtol@plt>
    46c8:	str	x0, [x21, #8]
    46cc:	add	x0, x19, #0x1c
    46d0:	ldrb	w1, [x19, #33]
    46d4:	cmp	w1, #0x20
    46d8:	b.eq	46f4 <elf_fill@@ELFUTILS_1.0+0x10a4>  // b.none
    46dc:	ldr	w1, [x19, #28]
    46e0:	str	w1, [sp, #128]
    46e4:	ldrh	w1, [x0, #4]
    46e8:	add	x0, sp, #0x80
    46ec:	strh	w1, [sp, #132]
    46f0:	strb	wzr, [sp, #134]
    46f4:	mov	x1, #0x0                   	// #0
    46f8:	mov	w2, #0xa                   	// #10
    46fc:	bl	31f0 <strtol@plt>
    4700:	str	w0, [x21, #16]
    4704:	add	x0, x19, #0x22
    4708:	ldrb	w1, [x19, #39]
    470c:	cmp	w1, #0x20
    4710:	b.eq	472c <elf_fill@@ELFUTILS_1.0+0x10dc>  // b.none
    4714:	ldur	w1, [x19, #34]
    4718:	str	w1, [sp, #128]
    471c:	ldrh	w1, [x0, #4]
    4720:	add	x0, sp, #0x80
    4724:	strh	w1, [sp, #132]
    4728:	strb	wzr, [sp, #134]
    472c:	mov	w2, #0xa                   	// #10
    4730:	mov	x1, #0x0                   	// #0
    4734:	bl	31f0 <strtol@plt>
    4738:	str	w0, [x21, #20]
    473c:	ldrb	w0, [x19, #47]
    4740:	cmp	w0, #0x20
    4744:	b.eq	47dc <elf_fill@@ELFUTILS_1.0+0x118c>  // b.none
    4748:	add	x0, sp, #0x80
    474c:	ldr	x1, [x19, #40]
    4750:	str	x1, [sp, #128]
    4754:	strb	wzr, [sp, #136]
    4758:	mov	x1, #0x0                   	// #0
    475c:	mov	w2, #0xa                   	// #10
    4760:	bl	31f0 <strtol@plt>
    4764:	str	w0, [x21, #24]
    4768:	add	x0, x19, #0x30
    476c:	ldrb	w1, [x19, #57]
    4770:	cmp	w1, #0x20
    4774:	b.eq	4790 <elf_fill@@ELFUTILS_1.0+0x1140>  // b.none
    4778:	ldr	x1, [x19, #48]
    477c:	str	x1, [sp, #128]
    4780:	ldrh	w1, [x0, #8]
    4784:	add	x0, sp, #0x80
    4788:	strh	w1, [sp, #136]
    478c:	strb	wzr, [sp, #138]
    4790:	mov	w2, #0xa                   	// #10
    4794:	mov	x1, #0x0                   	// #0
    4798:	bl	31f0 <strtol@plt>
    479c:	str	x0, [x21, #32]
    47a0:	mov	x2, x0
    47a4:	tbnz	x0, #63, 48f8 <elf_fill@@ELFUTILS_1.0+0x12a8>
    47a8:	ldp	x1, x3, [x20, #40]
    47ac:	mov	w0, #0x0                   	// #0
    47b0:	ldr	x4, [x20, #112]
    47b4:	sub	x3, x3, #0x3c
    47b8:	sub	x1, x1, x4
    47bc:	add	x1, x1, x3
    47c0:	cmp	x2, x1
    47c4:	b.ls	4650 <elf_fill@@ELFUTILS_1.0+0x1000>  // b.plast
    47c8:	str	x1, [x21, #32]
    47cc:	ldp	x19, x20, [sp, #16]
    47d0:	ldp	x21, x22, [sp, #32]
    47d4:	ldp	x29, x30, [sp], #192
    47d8:	ret
    47dc:	add	x0, x19, #0x28
    47e0:	b	4758 <elf_fill@@ELFUTILS_1.0+0x1108>
    47e4:	mov	x0, #0x532f                	// #21295
    47e8:	ldr	x1, [x19]
    47ec:	movk	x0, #0x4d59, lsl #16
    47f0:	movk	x0, #0x3436, lsl #32
    47f4:	movk	x0, #0x202f, lsl #48
    47f8:	cmp	x1, x0
    47fc:	b.ne	4570 <elf_fill@@ELFUTILS_1.0+0xf20>  // b.any
    4800:	ldr	x1, [x19, #8]
    4804:	mov	x0, #0x2020202020202020    	// #2314885530818453536
    4808:	cmp	x1, x0
    480c:	b.ne	4570 <elf_fill@@ELFUTILS_1.0+0xf20>  // b.any
    4810:	mov	x0, #0x532f                	// #21295
    4814:	add	x1, x20, #0xe4
    4818:	movk	x0, #0x4d59, lsl #16
    481c:	str	x1, [x20, #120]
    4820:	movk	x0, #0x3436, lsl #32
    4824:	movk	x0, #0x2f, lsl #48
    4828:	stur	x0, [x20, #228]
    482c:	b	4684 <elf_fill@@ELFUTILS_1.0+0x1034>
    4830:	cmp	x21, #0x3c
    4834:	b.ne	463c <elf_fill@@ELFUTILS_1.0+0xfec>  // b.any
    4838:	ldp	x23, x24, [sp, #48]
    483c:	ldp	x25, x26, [sp, #64]
    4840:	b	4518 <elf_fill@@ELFUTILS_1.0+0xec8>
    4844:	ldr	x2, [x19]
    4848:	mov	x1, #0x2020202020202020    	// #2314885530818453536
    484c:	movk	x1, #0x202f
    4850:	cmp	x2, x1
    4854:	b.ne	4570 <elf_fill@@ELFUTILS_1.0+0xf20>  // b.any
    4858:	ldr	x2, [x19, #8]
    485c:	mov	x1, #0x2020202020202020    	// #2314885530818453536
    4860:	cmp	x2, x1
    4864:	b.ne	4570 <elf_fill@@ELFUTILS_1.0+0xf20>  // b.any
    4868:	add	x1, x20, #0xe4
    486c:	str	x1, [x20, #120]
    4870:	strh	w0, [x20, #228]
    4874:	b	4684 <elf_fill@@ELFUTILS_1.0+0x1034>
    4878:	ldr	x22, [x20, #40]
    487c:	mov	x27, #0x0                   	// #0
    4880:	ldr	w24, [x20, #36]
    4884:	add	x22, x21, x22
    4888:	mov	x28, x22
    488c:	mov	x3, x28
    4890:	sub	x2, x25, x27
    4894:	add	x1, x23, x27
    4898:	mov	w0, w24
    489c:	bl	3250 <pread@plt>
    48a0:	cmn	x0, #0x1
    48a4:	b.eq	48dc <elf_fill@@ELFUTILS_1.0+0x128c>  // b.none
    48a8:	add	x27, x27, x0
    48ac:	cmp	x0, #0x0
    48b0:	b.le	48ec <elf_fill@@ELFUTILS_1.0+0x129c>
    48b4:	cmp	x27, #0x3b
    48b8:	b.gt	4ba0 <elf_fill@@ELFUTILS_1.0+0x1550>
    48bc:	add	x28, x22, x27
    48c0:	sub	x2, x25, x27
    48c4:	mov	x3, x28
    48c8:	add	x1, x23, x27
    48cc:	mov	w0, w24
    48d0:	bl	3250 <pread@plt>
    48d4:	cmn	x0, #0x1
    48d8:	b.ne	48a8 <elf_fill@@ELFUTILS_1.0+0x1258>  // b.any
    48dc:	bl	3340 <__errno_location@plt>
    48e0:	ldr	w0, [x0]
    48e4:	cmp	w0, #0x4
    48e8:	b.eq	488c <elf_fill@@ELFUTILS_1.0+0x123c>  // b.none
    48ec:	ldp	x23, x24, [sp, #48]
    48f0:	ldp	x25, x26, [sp, #64]
    48f4:	ldp	x27, x28, [sp, #80]
    48f8:	mov	w0, #0x10                  	// #16
    48fc:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    4900:	mov	w0, #0xffffffff            	// #-1
    4904:	ldp	x19, x20, [sp, #16]
    4908:	ldp	x21, x22, [sp, #32]
    490c:	ldp	x29, x30, [sp], #192
    4910:	ret
    4914:	ldrb	w0, [x20, #242]
    4918:	strb	wzr, [x20, #243]
    491c:	cmp	w0, #0x20
    4920:	b.ne	4680 <elf_fill@@ELFUTILS_1.0+0x1030>  // b.any
    4924:	ldrb	w0, [x20, #241]
    4928:	strb	wzr, [x20, #242]
    492c:	cmp	w0, #0x20
    4930:	b.ne	4680 <elf_fill@@ELFUTILS_1.0+0x1030>  // b.any
    4934:	ldrb	w0, [x20, #240]
    4938:	strb	wzr, [x20, #241]
    493c:	cmp	w0, #0x20
    4940:	b.ne	4680 <elf_fill@@ELFUTILS_1.0+0x1030>  // b.any
    4944:	ldrb	w0, [x20, #239]
    4948:	strb	wzr, [x20, #240]
    494c:	cmp	w0, #0x20
    4950:	b.ne	4680 <elf_fill@@ELFUTILS_1.0+0x1030>  // b.any
    4954:	ldrb	w0, [x20, #238]
    4958:	strb	wzr, [x20, #239]
    495c:	cmp	w0, #0x20
    4960:	b.ne	4680 <elf_fill@@ELFUTILS_1.0+0x1030>  // b.any
    4964:	ldrb	w0, [x20, #237]
    4968:	strb	wzr, [x20, #238]
    496c:	cmp	w0, #0x20
    4970:	b.ne	4680 <elf_fill@@ELFUTILS_1.0+0x1030>  // b.any
    4974:	ldrb	w0, [x20, #236]
    4978:	strb	wzr, [x20, #237]
    497c:	cmp	w0, #0x20
    4980:	b.ne	4680 <elf_fill@@ELFUTILS_1.0+0x1030>  // b.any
    4984:	ldrb	w0, [x20, #235]
    4988:	strb	wzr, [x20, #236]
    498c:	cmp	w0, #0x20
    4990:	b.ne	4680 <elf_fill@@ELFUTILS_1.0+0x1030>  // b.any
    4994:	ldrb	w0, [x20, #234]
    4998:	strb	wzr, [x20, #235]
    499c:	cmp	w0, #0x20
    49a0:	b.ne	4680 <elf_fill@@ELFUTILS_1.0+0x1030>  // b.any
    49a4:	ldrb	w0, [x20, #233]
    49a8:	strb	wzr, [x20, #234]
    49ac:	cmp	w0, #0x20
    49b0:	b.ne	4680 <elf_fill@@ELFUTILS_1.0+0x1030>  // b.any
    49b4:	ldrb	w0, [x20, #232]
    49b8:	strb	wzr, [x20, #233]
    49bc:	cmp	w0, #0x20
    49c0:	b.ne	4680 <elf_fill@@ELFUTILS_1.0+0x1030>  // b.any
    49c4:	ldrb	w0, [x20, #231]
    49c8:	strb	wzr, [x20, #232]
    49cc:	cmp	w0, #0x20
    49d0:	b.ne	4680 <elf_fill@@ELFUTILS_1.0+0x1030>  // b.any
    49d4:	ldrb	w0, [x20, #230]
    49d8:	strb	wzr, [x20, #231]
    49dc:	cmp	w0, #0x20
    49e0:	b.ne	4680 <elf_fill@@ELFUTILS_1.0+0x1030>  // b.any
    49e4:	ldrb	w0, [x20, #229]
    49e8:	strb	wzr, [x20, #230]
    49ec:	cmp	w0, #0x20
    49f0:	b.ne	4680 <elf_fill@@ELFUTILS_1.0+0x1030>  // b.any
    49f4:	ldrb	w0, [x20, #228]
    49f8:	strb	wzr, [x20, #229]
    49fc:	cmp	w0, #0x20
    4a00:	b.ne	4680 <elf_fill@@ELFUTILS_1.0+0x1030>  // b.any
    4a04:	strb	wzr, [x20, #228]
    4a08:	b	4680 <elf_fill@@ELFUTILS_1.0+0x1030>
    4a0c:	mov	w0, #0xf                   	// #15
    4a10:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    4a14:	mov	w0, #0xffffffff            	// #-1
    4a18:	b	4650 <elf_fill@@ELFUTILS_1.0+0x1000>
    4a1c:	ldr	x1, [x19, #8]
    4a20:	mov	x0, #0x2020202020202020    	// #2314885530818453536
    4a24:	cmp	x1, x0
    4a28:	b.ne	4570 <elf_fill@@ELFUTILS_1.0+0xf20>  // b.any
    4a2c:	adrp	x0, 15000 <elf_compress_gnu@@ELFUTILS_1.7+0x1b8>
    4a30:	add	x0, x0, #0x8c0
    4a34:	add	x1, x20, #0xe4
    4a38:	str	x1, [x20, #120]
    4a3c:	ldrh	w2, [x0]
    4a40:	ldrb	w0, [x0, #2]
    4a44:	strh	w2, [x20, #228]
    4a48:	strb	w0, [x20, #230]
    4a4c:	b	4684 <elf_fill@@ELFUTILS_1.0+0x1034>
    4a50:	mov	x21, #0x8                   	// #8
    4a54:	stp	x23, x24, [sp, #48]
    4a58:	add	x23, sp, #0x80
    4a5c:	stp	x25, x26, [sp, #64]
    4a60:	add	x26, sp, #0x70
    4a64:	mov	x25, #0x3c                  	// #60
    4a68:	stp	x27, x28, [sp, #80]
    4a6c:	b	4abc <elf_fill@@ELFUTILS_1.0+0x146c>
    4a70:	ldr	x1, [x24, #48]
    4a74:	str	x1, [x26]
    4a78:	mov	w2, #0xa                   	// #10
    4a7c:	mov	x1, #0x0                   	// #0
    4a80:	ldrh	w3, [x0, #8]
    4a84:	mov	x0, x26
    4a88:	strh	w3, [x26, #8]
    4a8c:	strb	wzr, [x26, #10]
    4a90:	bl	31f0 <strtol@plt>
    4a94:	mov	x22, x0
    4a98:	ldr	x1, [x24]
    4a9c:	mov	x0, #0x2020202020202020    	// #2314885530818453536
    4aa0:	movk	x0, #0x2f2f
    4aa4:	cmp	x1, x0
    4aa8:	b.eq	4afc <elf_fill@@ELFUTILS_1.0+0x14ac>  // b.none
    4aac:	add	x22, x22, #0x1
    4ab0:	add	x21, x21, #0x3c
    4ab4:	and	x22, x22, #0xfffffffffffffffe
    4ab8:	add	x21, x22, x21
    4abc:	ldr	x24, [x20]
    4ac0:	cbz	x24, 4878 <elf_fill@@ELFUTILS_1.0+0x1228>
    4ac4:	ldr	x0, [x20, #48]
    4ac8:	cmp	x0, x21
    4acc:	b.cc	48ec <elf_fill@@ELFUTILS_1.0+0x129c>  // b.lo, b.ul, b.last
    4ad0:	sub	x0, x0, x21
    4ad4:	cmp	x0, #0x3b
    4ad8:	b.ls	48ec <elf_fill@@ELFUTILS_1.0+0x129c>  // b.plast
    4adc:	add	x24, x24, x21
    4ae0:	ldrb	w1, [x24, #57]
    4ae4:	add	x0, x24, #0x30
    4ae8:	cmp	w1, #0x20
    4aec:	b.ne	4a70 <elf_fill@@ELFUTILS_1.0+0x1420>  // b.any
    4af0:	mov	w2, #0xa                   	// #10
    4af4:	mov	x1, #0x0                   	// #0
    4af8:	b	4a90 <elf_fill@@ELFUTILS_1.0+0x1440>
    4afc:	ldr	x1, [x24, #8]
    4b00:	mov	x0, #0x2020202020202020    	// #2314885530818453536
    4b04:	cmp	x1, x0
    4b08:	b.ne	4aac <elf_fill@@ELFUTILS_1.0+0x145c>  // b.any
    4b0c:	ldr	x24, [x20]
    4b10:	cbz	x24, 4bc0 <elf_fill@@ELFUTILS_1.0+0x1570>
    4b14:	ldr	x0, [x20, #48]
    4b18:	sub	x0, x0, #0x3c
    4b1c:	sub	x0, x0, x21
    4b20:	cmp	x0, x22
    4b24:	b.cc	48ec <elf_fill@@ELFUTILS_1.0+0x129c>  // b.lo, b.ul, b.last
    4b28:	mov	x0, x22
    4b2c:	bl	30c0 <malloc@plt>
    4b30:	mov	x23, x0
    4b34:	cbz	x0, 48ec <elf_fill@@ELFUTILS_1.0+0x129c>
    4b38:	add	x1, x21, #0x3c
    4b3c:	mov	x2, x22
    4b40:	add	x1, x24, x1
    4b44:	bl	3020 <memcpy@plt>
    4b48:	str	x0, [x20, #96]
    4b4c:	add	x24, x23, x22
    4b50:	str	x22, [x20, #104]
    4b54:	b	4b68 <elf_fill@@ELFUTILS_1.0+0x1518>
    4b58:	mov	x23, x0
    4b5c:	strb	wzr, [x23], #1
    4b60:	cmp	x24, x23
    4b64:	b.ls	4bb0 <elf_fill@@ELFUTILS_1.0+0x1560>  // b.plast
    4b68:	sub	x21, x24, x23
    4b6c:	mov	x0, x23
    4b70:	mov	x2, x21
    4b74:	mov	w1, #0x2f                  	// #47
    4b78:	bl	32c0 <memchr@plt>
    4b7c:	cbnz	x0, 4b58 <elf_fill@@ELFUTILS_1.0+0x1508>
    4b80:	mov	x0, x23
    4b84:	mov	x2, x21
    4b88:	mov	w1, #0x0                   	// #0
    4b8c:	bl	3100 <memset@plt>
    4b90:	ldp	x23, x24, [sp, #48]
    4b94:	ldp	x25, x26, [sp, #64]
    4b98:	ldp	x27, x28, [sp, #80]
    4b9c:	b	458c <elf_fill@@ELFUTILS_1.0+0xf3c>
    4ba0:	cmp	x27, #0x3c
    4ba4:	b.ne	48ec <elf_fill@@ELFUTILS_1.0+0x129c>  // b.any
    4ba8:	mov	x24, x23
    4bac:	b	4ae0 <elf_fill@@ELFUTILS_1.0+0x1490>
    4bb0:	ldp	x23, x24, [sp, #48]
    4bb4:	ldp	x25, x26, [sp, #64]
    4bb8:	ldp	x27, x28, [sp, #80]
    4bbc:	b	458c <elf_fill@@ELFUTILS_1.0+0xf3c>
    4bc0:	mov	x0, x22
    4bc4:	bl	30c0 <malloc@plt>
    4bc8:	mov	x23, x0
    4bcc:	cbz	x0, 48ec <elf_fill@@ELFUTILS_1.0+0x129c>
    4bd0:	ldr	x27, [x20, #40]
    4bd4:	mov	x25, x22
    4bd8:	ldr	w26, [x20, #36]
    4bdc:	mov	x24, x23
    4be0:	add	x21, x21, x27
    4be4:	mov	x27, #0x0                   	// #0
    4be8:	add	x0, x21, #0x3c
    4bec:	str	x0, [sp, #104]
    4bf0:	mov	x28, x0
    4bf4:	mov	x3, x28
    4bf8:	mov	x2, x25
    4bfc:	mov	x1, x24
    4c00:	mov	w0, w26
    4c04:	bl	3250 <pread@plt>
    4c08:	mov	x21, x0
    4c0c:	cmn	x0, #0x1
    4c10:	b.eq	4c58 <elf_fill@@ELFUTILS_1.0+0x1608>  // b.none
    4c14:	cmp	x0, #0x0
    4c18:	b.le	4c80 <elf_fill@@ELFUTILS_1.0+0x1630>
    4c1c:	add	x27, x27, x0
    4c20:	cmp	x27, x22
    4c24:	b.cs	4c78 <elf_fill@@ELFUTILS_1.0+0x1628>  // b.hs, b.nlast
    4c28:	ldr	x0, [sp, #104]
    4c2c:	sub	x25, x22, x27
    4c30:	add	x24, x23, x27
    4c34:	mov	x2, x25
    4c38:	add	x28, x0, x27
    4c3c:	mov	x1, x24
    4c40:	mov	x3, x28
    4c44:	mov	w0, w26
    4c48:	bl	3250 <pread@plt>
    4c4c:	mov	x21, x0
    4c50:	cmn	x0, #0x1
    4c54:	b.ne	4c14 <elf_fill@@ELFUTILS_1.0+0x15c4>  // b.any
    4c58:	bl	3340 <__errno_location@plt>
    4c5c:	ldr	w0, [x0]
    4c60:	cmp	w0, #0x4
    4c64:	b.eq	4bf4 <elf_fill@@ELFUTILS_1.0+0x15a4>  // b.none
    4c68:	cmp	x21, x22
    4c6c:	b.ne	4c88 <elf_fill@@ELFUTILS_1.0+0x1638>  // b.any
    4c70:	str	x23, [x20, #96]
    4c74:	b	4b4c <elf_fill@@ELFUTILS_1.0+0x14fc>
    4c78:	mov	x21, x27
    4c7c:	b	4c68 <elf_fill@@ELFUTILS_1.0+0x1618>
    4c80:	csel	x21, x0, x27, ne  // ne = any
    4c84:	b	4c68 <elf_fill@@ELFUTILS_1.0+0x1618>
    4c88:	mov	x0, x23
    4c8c:	bl	3200 <free@plt>
    4c90:	ldp	x23, x24, [sp, #48]
    4c94:	ldp	x25, x26, [sp, #64]
    4c98:	ldp	x27, x28, [sp, #80]
    4c9c:	str	xzr, [x20, #96]
    4ca0:	b	48f8 <elf_fill@@ELFUTILS_1.0+0x12a8>
    4ca4:	nop
    4ca8:	stp	x29, x30, [sp, #-48]!
    4cac:	cmn	w0, #0x1
    4cb0:	mov	x29, sp
    4cb4:	stp	x19, x20, [sp, #16]
    4cb8:	mov	w20, w0
    4cbc:	mov	x19, x2
    4cc0:	stp	x21, x22, [sp, #32]
    4cc4:	mov	w22, w1
    4cc8:	ldr	w0, [x2, #36]
    4ccc:	b.eq	4d70 <elf_fill@@ELFUTILS_1.0+0x1720>  // b.none
    4cd0:	cmp	w0, w20
    4cd4:	ccmn	w0, #0x1, #0x4, ne  // ne = any
    4cd8:	b.ne	4d88 <elf_fill@@ELFUTILS_1.0+0x1738>  // b.any
    4cdc:	ldr	w0, [x19, #28]
    4ce0:	sub	w2, w0, #0x1
    4ce4:	sub	w0, w0, #0x8
    4ce8:	cmp	w2, #0x2
    4cec:	ccmp	w0, #0x3, #0x0, hi  // hi = pmore
    4cf0:	b.hi	4d98 <elf_fill@@ELFUTILS_1.0+0x1748>  // b.pmore
    4cf4:	ldr	w0, [x19, #24]
    4cf8:	cmp	w0, #0x1
    4cfc:	b.ne	4d4c <elf_fill@@ELFUTILS_1.0+0x16fc>  // b.any
    4d00:	ldr	x21, [x19, #120]
    4d04:	cbz	x21, 4d78 <elf_fill@@ELFUTILS_1.0+0x1728>
    4d08:	ldr	x2, [x19, #152]
    4d0c:	mov	w3, w22
    4d10:	ldr	x1, [x19, #112]
    4d14:	mov	w0, w20
    4d18:	mov	x4, x19
    4d1c:	add	x1, x1, #0x3c
    4d20:	bl	4130 <elf_fill@@ELFUTILS_1.0+0xae0>
    4d24:	mov	x21, x0
    4d28:	cbz	x0, 4d38 <elf_fill@@ELFUTILS_1.0+0x16e8>
    4d2c:	ldr	x0, [x19, #72]
    4d30:	str	x0, [x21, #16]
    4d34:	str	x21, [x19, #72]
    4d38:	mov	x0, x21
    4d3c:	ldp	x19, x20, [sp, #16]
    4d40:	ldp	x21, x22, [sp, #32]
    4d44:	ldp	x29, x30, [sp], #48
    4d48:	ret
    4d4c:	ldr	w0, [x19, #60]
    4d50:	mov	x21, x19
    4d54:	add	w0, w0, #0x1
    4d58:	str	w0, [x19, #60]
    4d5c:	mov	x0, x21
    4d60:	ldp	x19, x20, [sp, #16]
    4d64:	ldp	x21, x22, [sp, #32]
    4d68:	ldp	x29, x30, [sp], #48
    4d6c:	ret
    4d70:	mov	w20, w0
    4d74:	b	4cdc <elf_fill@@ELFUTILS_1.0+0x168c>
    4d78:	mov	x0, x19
    4d7c:	bl	44d8 <elf_fill@@ELFUTILS_1.0+0xe88>
    4d80:	cbz	w0, 4d08 <elf_fill@@ELFUTILS_1.0+0x16b8>
    4d84:	b	4d38 <elf_fill@@ELFUTILS_1.0+0x16e8>
    4d88:	mov	w0, #0x1c                  	// #28
    4d8c:	mov	x21, #0x0                   	// #0
    4d90:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    4d94:	b	4d38 <elf_fill@@ELFUTILS_1.0+0x16e8>
    4d98:	mov	w0, #0xb                   	// #11
    4d9c:	mov	x21, #0x0                   	// #0
    4da0:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    4da4:	b	4d38 <elf_fill@@ELFUTILS_1.0+0x16e8>

0000000000004da8 <elf_begin@@ELFUTILS_1.0>:
    4da8:	stp	x29, x30, [sp, #-48]!
    4dac:	adrp	x3, 2b000 <elf_compress_gnu@@ELFUTILS_1.7+0x161b8>
    4db0:	mov	x29, sp
    4db4:	ldr	w3, [x3, #436]
    4db8:	str	x21, [sp, #32]
    4dbc:	cmp	w3, #0x1
    4dc0:	b.ne	4f50 <elf_begin@@ELFUTILS_1.0+0x1a8>  // b.any
    4dc4:	stp	x19, x20, [sp, #16]
    4dc8:	mov	w19, w1
    4dcc:	mov	w20, w0
    4dd0:	cbz	x2, 4ee0 <elf_begin@@ELFUTILS_1.0+0x138>
    4dd4:	cmp	w1, #0x8
    4dd8:	b.eq	4ec8 <elf_begin@@ELFUTILS_1.0+0x120>  // b.none
    4ddc:	b.hi	4e54 <elf_begin@@ELFUTILS_1.0+0xac>  // b.pmore
    4de0:	cmp	w1, #0x1
    4de4:	b.eq	4ec8 <elf_begin@@ELFUTILS_1.0+0x120>  // b.none
    4de8:	b.ls	4e94 <elf_begin@@ELFUTILS_1.0+0xec>  // b.plast
    4dec:	cmp	w1, #0x2
    4df0:	b.eq	4eb0 <elf_begin@@ELFUTILS_1.0+0x108>  // b.none
    4df4:	cmp	w19, #0x3
    4df8:	b.ne	4e60 <elf_begin@@ELFUTILS_1.0+0xb8>  // b.any
    4dfc:	mov	x1, #0x928                 	// #2344
    4e00:	mov	x0, #0x1                   	// #1
    4e04:	bl	3140 <calloc@plt>
    4e08:	mov	x21, x0
    4e0c:	cbz	x0, 4f7c <elf_begin@@ELFUTILS_1.0+0x1d4>
    4e10:	stp	xzr, xzr, [x21]
    4e14:	mov	w3, #0x3                   	// #3
    4e18:	mov	w0, #0xa                   	// #10
    4e1c:	stp	w3, w19, [x21, #24]
    4e20:	add	x1, x21, #0xc8
    4e24:	str	w20, [x21, #36]
    4e28:	mov	x2, #0x100000001           	// #4294967297
    4e2c:	ldp	x19, x20, [sp, #16]
    4e30:	stp	xzr, xzr, [x21, #40]
    4e34:	str	x2, [x21, #56]
    4e38:	str	x1, [x21, #96]
    4e3c:	str	w0, [x21, #112]
    4e40:	str	w0, [x21, #204]
    4e44:	mov	x0, x21
    4e48:	ldr	x21, [sp, #32]
    4e4c:	ldp	x29, x30, [sp], #48
    4e50:	ret
    4e54:	cmp	w1, #0xb
    4e58:	b.eq	4f6c <elf_begin@@ELFUTILS_1.0+0x1c4>  // b.none
    4e5c:	b.ls	4e80 <elf_begin@@ELFUTILS_1.0+0xd8>  // b.plast
    4e60:	mov	w0, #0xd                   	// #13
    4e64:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    4e68:	mov	x21, #0x0                   	// #0
    4e6c:	mov	x0, x21
    4e70:	ldp	x19, x20, [sp, #16]
    4e74:	ldr	x21, [sp, #32]
    4e78:	ldp	x29, x30, [sp], #48
    4e7c:	ret
    4e80:	cmp	w1, #0x9
    4e84:	b.eq	4eb0 <elf_begin@@ELFUTILS_1.0+0x108>  // b.none
    4e88:	cmp	w1, #0xa
    4e8c:	b.eq	4dfc <elf_begin@@ELFUTILS_1.0+0x54>  // b.none
    4e90:	b	4e60 <elf_begin@@ELFUTILS_1.0+0xb8>
    4e94:	cbnz	w19, 4e60 <elf_begin@@ELFUTILS_1.0+0xb8>
    4e98:	mov	x21, #0x0                   	// #0
    4e9c:	mov	x0, x21
    4ea0:	ldp	x19, x20, [sp, #16]
    4ea4:	ldr	x21, [sp, #32]
    4ea8:	ldp	x29, x30, [sp], #48
    4eac:	ret
    4eb0:	ldr	w0, [x2, #28]
    4eb4:	sub	w1, w0, #0x9
    4eb8:	sub	w0, w0, #0x2
    4ebc:	cmp	w1, #0x1
    4ec0:	ccmp	w0, #0x1, #0x0, hi  // hi = pmore
    4ec4:	b.hi	4e60 <elf_begin@@ELFUTILS_1.0+0xb8>  // b.pmore
    4ec8:	mov	w1, w19
    4ecc:	mov	w0, w20
    4ed0:	ldp	x19, x20, [sp, #16]
    4ed4:	ldr	x21, [sp, #32]
    4ed8:	ldp	x29, x30, [sp], #48
    4edc:	b	4ca8 <elf_fill@@ELFUTILS_1.0+0x1658>
    4ee0:	mov	w1, w3
    4ee4:	bl	3280 <fcntl@plt>
    4ee8:	cmn	w0, #0x1
    4eec:	b.eq	4f8c <elf_begin@@ELFUTILS_1.0+0x1e4>  // b.none
    4ef0:	cmp	w19, #0x8
    4ef4:	b.eq	4f10 <elf_begin@@ELFUTILS_1.0+0x168>  // b.none
    4ef8:	b.hi	4f34 <elf_begin@@ELFUTILS_1.0+0x18c>  // b.pmore
    4efc:	cmp	w19, #0x1
    4f00:	b.eq	4f10 <elf_begin@@ELFUTILS_1.0+0x168>  // b.none
    4f04:	b.ls	4e94 <elf_begin@@ELFUTILS_1.0+0xec>  // b.plast
    4f08:	cmp	w19, #0x2
    4f0c:	b.ne	4df4 <elf_begin@@ELFUTILS_1.0+0x4c>  // b.any
    4f10:	mov	w3, w19
    4f14:	mov	w0, w20
    4f18:	ldp	x19, x20, [sp, #16]
    4f1c:	mov	x4, #0x0                   	// #0
    4f20:	ldr	x21, [sp, #32]
    4f24:	mov	x2, #0xffffffffffffffff    	// #-1
    4f28:	ldp	x29, x30, [sp], #48
    4f2c:	mov	x1, #0x0                   	// #0
    4f30:	b	4130 <elf_fill@@ELFUTILS_1.0+0xae0>
    4f34:	cmp	w19, #0xa
    4f38:	b.eq	4dfc <elf_begin@@ELFUTILS_1.0+0x54>  // b.none
    4f3c:	cmp	w19, #0xb
    4f40:	b.eq	4f10 <elf_begin@@ELFUTILS_1.0+0x168>  // b.none
    4f44:	cmp	w19, #0x9
    4f48:	b.ne	4e60 <elf_begin@@ELFUTILS_1.0+0xb8>  // b.any
    4f4c:	b	4f10 <elf_begin@@ELFUTILS_1.0+0x168>
    4f50:	mov	w0, #0xc                   	// #12
    4f54:	mov	x21, #0x0                   	// #0
    4f58:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    4f5c:	mov	x0, x21
    4f60:	ldr	x21, [sp, #32]
    4f64:	ldp	x29, x30, [sp], #48
    4f68:	ret
    4f6c:	ldr	w0, [x2, #28]
    4f70:	cmp	w0, #0xb
    4f74:	b.eq	4ec8 <elf_begin@@ELFUTILS_1.0+0x120>  // b.none
    4f78:	b	4e60 <elf_begin@@ELFUTILS_1.0+0xb8>
    4f7c:	mov	w0, #0x8                   	// #8
    4f80:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    4f84:	ldp	x19, x20, [sp, #16]
    4f88:	b	4e44 <elf_begin@@ELFUTILS_1.0+0x9c>
    4f8c:	bl	3340 <__errno_location@plt>
    4f90:	ldr	w0, [x0]
    4f94:	cmp	w0, #0x9
    4f98:	b.eq	4e64 <elf_begin@@ELFUTILS_1.0+0xbc>  // b.none
    4f9c:	cmp	w19, #0x9
    4fa0:	b.eq	4f10 <elf_begin@@ELFUTILS_1.0+0x168>  // b.none
    4fa4:	b.hi	4fc4 <elf_begin@@ELFUTILS_1.0+0x21c>  // b.pmore
    4fa8:	cmp	w19, #0x2
    4fac:	b.eq	4f10 <elf_begin@@ELFUTILS_1.0+0x168>  // b.none
    4fb0:	b.hi	4fd8 <elf_begin@@ELFUTILS_1.0+0x230>  // b.pmore
    4fb4:	cbz	w19, 4e98 <elf_begin@@ELFUTILS_1.0+0xf0>
    4fb8:	cmp	w19, #0x1
    4fbc:	b.ne	4e60 <elf_begin@@ELFUTILS_1.0+0xb8>  // b.any
    4fc0:	b	4f10 <elf_begin@@ELFUTILS_1.0+0x168>
    4fc4:	cmp	w19, #0xa
    4fc8:	b.eq	4dfc <elf_begin@@ELFUTILS_1.0+0x54>  // b.none
    4fcc:	cmp	w19, #0xb
    4fd0:	b.eq	4f10 <elf_begin@@ELFUTILS_1.0+0x168>  // b.none
    4fd4:	b	4e60 <elf_begin@@ELFUTILS_1.0+0xb8>
    4fd8:	cmp	w19, #0x3
    4fdc:	b.eq	4dfc <elf_begin@@ELFUTILS_1.0+0x54>  // b.none
    4fe0:	cmp	w19, #0x8
    4fe4:	b.ne	4e60 <elf_begin@@ELFUTILS_1.0+0xb8>  // b.any
    4fe8:	b	4f10 <elf_begin@@ELFUTILS_1.0+0x168>
    4fec:	nop

0000000000004ff0 <elf_next@@ELFUTILS_1.0>:
    4ff0:	cbz	x0, 5068 <elf_next@@ELFUTILS_1.0+0x78>
    4ff4:	stp	x29, x30, [sp, #-32]!
    4ff8:	mov	x29, sp
    4ffc:	stp	x19, x20, [sp, #16]
    5000:	mov	x20, x0
    5004:	ldr	x19, [x0, #8]
    5008:	cbz	x19, 5070 <elf_next@@ELFUTILS_1.0+0x80>
    500c:	ldr	w0, [x19, #24]
    5010:	cmp	w0, #0x1
    5014:	b.ne	5080 <elf_next@@ELFUTILS_1.0+0x90>  // b.any
    5018:	ldr	x1, [x19, #152]
    501c:	mov	x0, x19
    5020:	ldr	x2, [x19, #112]
    5024:	add	x1, x1, #0x1
    5028:	and	x1, x1, #0xfffffffffffffffe
    502c:	add	x2, x2, #0x3c
    5030:	add	x1, x1, x2
    5034:	str	x1, [x19, #112]
    5038:	bl	44d8 <elf_fill@@ELFUTILS_1.0+0xe88>
    503c:	cbz	w0, 5054 <elf_next@@ELFUTILS_1.0+0x64>
    5040:	str	xzr, [x19, #120]
    5044:	mov	w0, #0x0                   	// #0
    5048:	ldp	x19, x20, [sp, #16]
    504c:	ldp	x29, x30, [sp], #32
    5050:	ret
    5054:	ldr	w0, [x20, #28]
    5058:	cbz	w0, 5040 <elf_next@@ELFUTILS_1.0+0x50>
    505c:	ldp	x19, x20, [sp, #16]
    5060:	ldp	x29, x30, [sp], #32
    5064:	ret
    5068:	mov	w0, #0x0                   	// #0
    506c:	ret
    5070:	mov	w0, #0x0                   	// #0
    5074:	ldp	x19, x20, [sp, #16]
    5078:	ldp	x29, x30, [sp], #32
    507c:	ret
    5080:	adrp	x3, 15000 <elf_compress_gnu@@ELFUTILS_1.7+0x1b8>
    5084:	adrp	x1, 15000 <elf_compress_gnu@@ELFUTILS_1.7+0x1b8>
    5088:	adrp	x0, 15000 <elf_compress_gnu@@ELFUTILS_1.7+0x1b8>
    508c:	add	x3, x3, #0x908
    5090:	add	x1, x1, #0x8d8
    5094:	add	x0, x0, #0x8e8
    5098:	mov	w2, #0x35                  	// #53
    509c:	bl	3330 <__assert_fail@plt>

00000000000050a0 <elf_rand@@ELFUTILS_1.0>:
    50a0:	cbz	x0, 50fc <elf_rand@@ELFUTILS_1.0+0x5c>
    50a4:	stp	x29, x30, [sp, #-32]!
    50a8:	mov	x29, sp
    50ac:	ldr	w2, [x0, #24]
    50b0:	stp	x19, x20, [sp, #16]
    50b4:	mov	x20, x1
    50b8:	mov	x19, x0
    50bc:	cmp	w2, #0x1
    50c0:	mov	x1, #0x0                   	// #0
    50c4:	b.eq	50d8 <elf_rand@@ELFUTILS_1.0+0x38>  // b.none
    50c8:	mov	x0, x1
    50cc:	ldp	x19, x20, [sp, #16]
    50d0:	ldp	x29, x30, [sp], #32
    50d4:	ret
    50d8:	ldr	x1, [x0, #40]
    50dc:	add	x1, x1, x20
    50e0:	str	x1, [x0, #112]
    50e4:	bl	44d8 <elf_fill@@ELFUTILS_1.0+0xe88>
    50e8:	mov	x1, x20
    50ec:	cbz	w0, 50c8 <elf_rand@@ELFUTILS_1.0+0x28>
    50f0:	mov	x1, #0x0                   	// #0
    50f4:	str	xzr, [x19, #120]
    50f8:	b	50c8 <elf_rand@@ELFUTILS_1.0+0x28>
    50fc:	mov	x1, #0x0                   	// #0
    5100:	mov	x0, x1
    5104:	ret

0000000000005108 <elf_end@@ELFUTILS_1.0>:
    5108:	stp	x29, x30, [sp, #-80]!
    510c:	mov	x29, sp
    5110:	stp	x21, x22, [sp, #32]
    5114:	mov	x22, x0
    5118:	stp	x19, x20, [sp, #16]
    511c:	stp	x23, x24, [sp, #48]
    5120:	stp	x25, x26, [sp, #64]
    5124:	mov	w25, #0xd0                  	// #208
    5128:	cbz	x22, 52cc <elf_end@@ELFUTILS_1.0+0x1c4>
    512c:	ldr	w0, [x22, #60]
    5130:	cbz	w0, 5140 <elf_end@@ELFUTILS_1.0+0x38>
    5134:	sub	w0, w0, #0x1
    5138:	str	w0, [x22, #60]
    513c:	cbnz	w0, 52d0 <elf_end@@ELFUTILS_1.0+0x1c8>
    5140:	ldr	w1, [x22, #24]
    5144:	cmp	w1, #0x1
    5148:	b.eq	5348 <elf_end@@ELFUTILS_1.0+0x240>  // b.none
    514c:	ldr	x26, [x22, #8]
    5150:	cbz	x26, 5170 <elf_end@@ELFUTILS_1.0+0x68>
    5154:	ldr	x0, [x26, #72]
    5158:	ldr	x3, [x22, #16]
    515c:	cmp	x0, x22
    5160:	b.ne	5290 <elf_end@@ELFUTILS_1.0+0x188>  // b.any
    5164:	str	x3, [x26, #72]
    5168:	cmp	w1, #0x1
    516c:	b.eq	52ac <elf_end@@ELFUTILS_1.0+0x1a4>  // b.none
    5170:	cmp	w1, #0x3
    5174:	b.ne	5324 <elf_end@@ELFUTILS_1.0+0x21c>  // b.any
    5178:	ldr	x19, [x22, #104]
    517c:	cbz	x19, 51bc <elf_end@@ELFUTILS_1.0+0xb4>
    5180:	ldr	w0, [x19, #204]
    5184:	ldr	x20, [x19, #48]
    5188:	tbnz	w0, #7, 51a8 <elf_end@@ELFUTILS_1.0+0xa0>
    518c:	mov	x0, x19
    5190:	bl	3200 <free@plt>
    5194:	cbz	x20, 51bc <elf_end@@ELFUTILS_1.0+0xb4>
    5198:	mov	x19, x20
    519c:	ldr	w0, [x19, #204]
    51a0:	ldr	x20, [x19, #48]
    51a4:	tbz	w0, #7, 518c <elf_end@@ELFUTILS_1.0+0x84>
    51a8:	ldr	x0, [x19]
    51ac:	bl	3200 <free@plt>
    51b0:	mov	x0, x19
    51b4:	bl	3200 <free@plt>
    51b8:	cbnz	x20, 5198 <elf_end@@ELFUTILS_1.0+0x90>
    51bc:	add	x24, x22, #0xc8
    51c0:	mov	x23, x24
    51c4:	nop
    51c8:	ldr	w20, [x23, #4]
    51cc:	mov	w0, w20
    51d0:	sub	x21, x0, #0x1
    51d4:	umaddl	x20, w20, w25, x23
    51d8:	cbz	x0, 526c <elf_end@@ELFUTILS_1.0+0x164>
    51dc:	nop
    51e0:	ldur	w0, [x20, #-40]
    51e4:	tbnz	w0, #7, 52f8 <elf_end@@ELFUTILS_1.0+0x1f0>
    51e8:	ldur	x1, [x20, #-32]
    51ec:	ldur	x0, [x20, #-16]
    51f0:	cmp	x0, x1
    51f4:	b.eq	5200 <elf_end@@ELFUTILS_1.0+0xf8>  // b.none
    51f8:	bl	3200 <free@plt>
    51fc:	ldur	x1, [x20, #-32]
    5200:	ldur	x0, [x20, #-24]
    5204:	cmp	x0, x1
    5208:	b.eq	5214 <elf_end@@ELFUTILS_1.0+0x10c>  // b.none
    520c:	bl	3200 <free@plt>
    5210:	ldur	x1, [x20, #-32]
    5214:	ldr	x0, [x22]
    5218:	cbz	x0, 5230 <elf_end@@ELFUTILS_1.0+0x128>
    521c:	ldur	x0, [x20, #-16]
    5220:	cmp	x0, x1
    5224:	b.eq	5230 <elf_end@@ELFUTILS_1.0+0x128>  // b.none
    5228:	ldur	w0, [x20, #-36]
    522c:	tbz	w0, #7, 5238 <elf_end@@ELFUTILS_1.0+0x130>
    5230:	mov	x0, x1
    5234:	bl	3200 <free@plt>
    5238:	ldur	x19, [x20, #-144]
    523c:	nop
    5240:	cbz	x19, 525c <elf_end@@ELFUTILS_1.0+0x154>
    5244:	ldr	w1, [x19, #56]
    5248:	mov	x0, x19
    524c:	ldr	x19, [x19, #48]
    5250:	tbz	w1, #7, 5240 <elf_end@@ELFUTILS_1.0+0x138>
    5254:	bl	3200 <free@plt>
    5258:	cbnz	x19, 5244 <elf_end@@ELFUTILS_1.0+0x13c>
    525c:	sub	x21, x21, #0x1
    5260:	sub	x20, x20, #0xd0
    5264:	cmn	x21, #0x1
    5268:	b.ne	51e0 <elf_end@@ELFUTILS_1.0+0xd8>  // b.any
    526c:	ldr	x19, [x23, #8]
    5270:	cbz	x19, 5304 <elf_end@@ELFUTILS_1.0+0x1fc>
    5274:	ldp	w1, w0, [x23]
    5278:	cmp	w1, w0
    527c:	b.ne	53b8 <elf_end@@ELFUTILS_1.0+0x2b0>  // b.any
    5280:	cmp	x23, x24
    5284:	b.ne	52e8 <elf_end@@ELFUTILS_1.0+0x1e0>  // b.any
    5288:	mov	x23, x19
    528c:	b	51c8 <elf_end@@ELFUTILS_1.0+0xc0>
    5290:	mov	x2, x0
    5294:	ldr	x0, [x0, #16]
    5298:	cmp	x0, x22
    529c:	b.ne	5290 <elf_end@@ELFUTILS_1.0+0x188>  // b.any
    52a0:	str	x3, [x2, #16]
    52a4:	cmp	w1, #0x1
    52a8:	b.ne	5170 <elf_end@@ELFUTILS_1.0+0x68>  // b.any
    52ac:	ldr	x0, [x22, #96]
    52b0:	cbz	x0, 5324 <elf_end@@ELFUTILS_1.0+0x21c>
    52b4:	bl	3200 <free@plt>
    52b8:	ldr	x0, [x22]
    52bc:	cbnz	x0, 532c <elf_end@@ELFUTILS_1.0+0x224>
    52c0:	mov	x0, x22
    52c4:	bl	3200 <free@plt>
    52c8:	cbnz	x26, 5338 <elf_end@@ELFUTILS_1.0+0x230>
    52cc:	mov	w0, #0x0                   	// #0
    52d0:	ldp	x19, x20, [sp, #16]
    52d4:	ldp	x21, x22, [sp, #32]
    52d8:	ldp	x23, x24, [sp, #48]
    52dc:	ldp	x25, x26, [sp, #64]
    52e0:	ldp	x29, x30, [sp], #80
    52e4:	ret
    52e8:	mov	x0, x23
    52ec:	mov	x23, x19
    52f0:	bl	3200 <free@plt>
    52f4:	b	51c8 <elf_end@@ELFUTILS_1.0+0xc0>
    52f8:	ldur	x0, [x20, #-48]
    52fc:	bl	3200 <free@plt>
    5300:	b	51e8 <elf_end@@ELFUTILS_1.0+0xe0>
    5304:	cmp	x23, x24
    5308:	b.eq	5314 <elf_end@@ELFUTILS_1.0+0x20c>  // b.none
    530c:	mov	x0, x23
    5310:	bl	3200 <free@plt>
    5314:	ldr	w0, [x22, #124]
    5318:	cbnz	w0, 5398 <elf_end@@ELFUTILS_1.0+0x290>
    531c:	ldr	w0, [x22, #120]
    5320:	tbnz	w0, #7, 538c <elf_end@@ELFUTILS_1.0+0x284>
    5324:	ldr	x0, [x22]
    5328:	cbz	x0, 52c0 <elf_end@@ELFUTILS_1.0+0x1b8>
    532c:	cbz	x26, 5374 <elf_end@@ELFUTILS_1.0+0x26c>
    5330:	mov	x0, x22
    5334:	bl	3200 <free@plt>
    5338:	ldr	w0, [x26, #60]
    533c:	cbnz	w0, 52cc <elf_end@@ELFUTILS_1.0+0x1c4>
    5340:	mov	x22, x26
    5344:	b	5128 <elf_end@@ELFUTILS_1.0+0x20>
    5348:	ldr	x0, [x22, #80]
    534c:	cmn	x0, #0x1
    5350:	b.eq	5358 <elf_end@@ELFUTILS_1.0+0x250>  // b.none
    5354:	bl	3200 <free@plt>
    5358:	ldr	x0, [x22, #72]
    535c:	str	xzr, [x22, #80]
    5360:	cbnz	x0, 52cc <elf_end@@ELFUTILS_1.0+0x1c4>
    5364:	ldr	x26, [x22, #8]
    5368:	ldr	w1, [x22, #24]
    536c:	cbnz	x26, 5154 <elf_end@@ELFUTILS_1.0+0x4c>
    5370:	b	5168 <elf_end@@ELFUTILS_1.0+0x60>
    5374:	ldr	w1, [x22, #56]
    5378:	tbnz	w1, #7, 53a4 <elf_end@@ELFUTILS_1.0+0x29c>
    537c:	tbnz	w1, #6, 53ac <elf_end@@ELFUTILS_1.0+0x2a4>
    5380:	mov	x0, x22
    5384:	bl	3200 <free@plt>
    5388:	b	52cc <elf_end@@ELFUTILS_1.0+0x1c4>
    538c:	ldr	x0, [x22, #88]
    5390:	bl	3200 <free@plt>
    5394:	b	52b8 <elf_end@@ELFUTILS_1.0+0x1b0>
    5398:	ldr	x0, [x22, #80]
    539c:	bl	3200 <free@plt>
    53a0:	b	531c <elf_end@@ELFUTILS_1.0+0x214>
    53a4:	bl	3200 <free@plt>
    53a8:	b	5380 <elf_end@@ELFUTILS_1.0+0x278>
    53ac:	ldr	x1, [x22, #48]
    53b0:	bl	32a0 <munmap@plt>
    53b4:	b	5380 <elf_end@@ELFUTILS_1.0+0x278>
    53b8:	adrp	x3, 15000 <elf_compress_gnu@@ELFUTILS_1.7+0x1b8>
    53bc:	adrp	x1, 15000 <elf_compress_gnu@@ELFUTILS_1.7+0x1b8>
    53c0:	adrp	x0, 15000 <elf_compress_gnu@@ELFUTILS_1.7+0x1b8>
    53c4:	add	x3, x3, #0x950
    53c8:	add	x1, x1, #0x918
    53cc:	add	x0, x0, #0x928
    53d0:	mov	w2, #0xbd                  	// #189
    53d4:	bl	3330 <__assert_fail@plt>

00000000000053d8 <elf_kind@@ELFUTILS_1.0>:
    53d8:	cbz	x0, 53e4 <elf_kind@@ELFUTILS_1.0+0xc>
    53dc:	ldr	w0, [x0, #24]
    53e0:	ret
    53e4:	mov	w0, #0x0                   	// #0
    53e8:	ret
    53ec:	nop

00000000000053f0 <gelf_getclass@@ELFUTILS_1.0>:
    53f0:	mov	x1, x0
    53f4:	mov	w0, #0x0                   	// #0
    53f8:	cbz	x1, 540c <gelf_getclass@@ELFUTILS_1.0+0x1c>
    53fc:	ldr	w2, [x1, #24]
    5400:	mov	w0, #0x0                   	// #0
    5404:	cmp	w2, #0x3
    5408:	b.eq	5410 <gelf_getclass@@ELFUTILS_1.0+0x20>  // b.none
    540c:	ret
    5410:	ldr	w0, [x1, #32]
    5414:	ret

0000000000005418 <elf_getbase@@ELFUTILS_1.0>:
    5418:	cbz	x0, 5424 <elf_getbase@@ELFUTILS_1.0+0xc>
    541c:	ldr	x0, [x0, #40]
    5420:	ret
    5424:	mov	x0, #0xffffffffffffffff    	// #-1
    5428:	ret
    542c:	nop

0000000000005430 <elf_getident@@ELFUTILS_1.0>:
    5430:	cbz	x0, 5454 <elf_getident@@ELFUTILS_1.0+0x24>
    5434:	ldr	w2, [x0, #24]
    5438:	cmp	w2, #0x3
    543c:	b.ne	5454 <elf_getident@@ELFUTILS_1.0+0x24>  // b.any
    5440:	cbz	x1, 544c <elf_getident@@ELFUTILS_1.0+0x1c>
    5444:	mov	x2, #0x10                  	// #16
    5448:	str	x2, [x1]
    544c:	ldr	x0, [x0, #72]
    5450:	ret
    5454:	mov	x0, #0x0                   	// #0
    5458:	cbz	x1, 5450 <elf_getident@@ELFUTILS_1.0+0x20>
    545c:	str	xzr, [x1]
    5460:	ret
    5464:	nop

0000000000005468 <elf32_fsize@@ELFUTILS_1.0>:
    5468:	stp	x29, x30, [sp, #-16]!
    546c:	cmp	w2, #0x1
    5470:	mov	x29, sp
    5474:	b.ne	5498 <elf32_fsize@@ELFUTILS_1.0+0x30>  // b.any
    5478:	cmp	w0, #0x1a
    547c:	b.hi	54ac <elf32_fsize@@ELFUTILS_1.0+0x44>  // b.pmore
    5480:	adrp	x2, 15000 <elf_compress_gnu@@ELFUTILS_1.7+0x1b8>
    5484:	add	x2, x2, #0x960
    5488:	ldr	x0, [x2, w0, uxtw #3]
    548c:	mul	x0, x1, x0
    5490:	ldp	x29, x30, [sp], #16
    5494:	ret
    5498:	mov	w0, #0x2                   	// #2
    549c:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    54a0:	mov	x0, #0x0                   	// #0
    54a4:	ldp	x29, x30, [sp], #16
    54a8:	ret
    54ac:	mov	w0, #0x3                   	// #3
    54b0:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    54b4:	mov	x0, #0x0                   	// #0
    54b8:	b	5490 <elf32_fsize@@ELFUTILS_1.0+0x28>
    54bc:	nop

00000000000054c0 <elf64_fsize@@ELFUTILS_1.0>:
    54c0:	stp	x29, x30, [sp, #-16]!
    54c4:	cmp	w2, #0x1
    54c8:	mov	x29, sp
    54cc:	b.ne	54f4 <elf64_fsize@@ELFUTILS_1.0+0x34>  // b.any
    54d0:	cmp	w0, #0x1a
    54d4:	b.hi	5508 <elf64_fsize@@ELFUTILS_1.0+0x48>  // b.pmore
    54d8:	adrp	x2, 15000 <elf_compress_gnu@@ELFUTILS_1.7+0x1b8>
    54dc:	add	x2, x2, #0x960
    54e0:	add	x0, x2, w0, uxtw #3
    54e4:	ldr	x0, [x0, #216]
    54e8:	mul	x0, x1, x0
    54ec:	ldp	x29, x30, [sp], #16
    54f0:	ret
    54f4:	mov	w0, #0x2                   	// #2
    54f8:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    54fc:	mov	x0, #0x0                   	// #0
    5500:	ldp	x29, x30, [sp], #16
    5504:	ret
    5508:	mov	w0, #0x3                   	// #3
    550c:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    5510:	mov	x0, #0x0                   	// #0
    5514:	b	54ec <elf64_fsize@@ELFUTILS_1.0+0x2c>

0000000000005518 <gelf_fsize@@ELFUTILS_1.0>:
    5518:	cbz	x0, 5590 <gelf_fsize@@ELFUTILS_1.0+0x78>
    551c:	stp	x29, x30, [sp, #-16]!
    5520:	cmp	w3, #0x1
    5524:	mov	x29, sp
    5528:	b.ne	5568 <gelf_fsize@@ELFUTILS_1.0+0x50>  // b.any
    552c:	cmp	w1, #0x1a
    5530:	b.hi	557c <gelf_fsize@@ELFUTILS_1.0+0x64>  // b.pmore
    5534:	ldr	w0, [x0, #32]
    5538:	adrp	x4, 15000 <elf_compress_gnu@@ELFUTILS_1.7+0x1b8>
    553c:	add	x4, x4, #0x960
    5540:	sub	w3, w0, #0x1
    5544:	ldp	x29, x30, [sp], #16
    5548:	lsl	x0, x3, #3
    554c:	sub	x0, x0, x3
    5550:	lsl	x0, x0, #2
    5554:	sub	x0, x0, x3
    5558:	add	x1, x0, w1, uxtw
    555c:	ldr	x0, [x4, x1, lsl #3]
    5560:	mul	x0, x2, x0
    5564:	ret
    5568:	mov	w0, #0x2                   	// #2
    556c:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    5570:	mov	x0, #0x0                   	// #0
    5574:	ldp	x29, x30, [sp], #16
    5578:	ret
    557c:	mov	w0, #0x3                   	// #3
    5580:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    5584:	mov	x0, #0x0                   	// #0
    5588:	ldp	x29, x30, [sp], #16
    558c:	ret
    5590:	mov	x0, #0x0                   	// #0
    5594:	ret

0000000000005598 <elf32_xlatetof@@ELFUTILS_1.0>:
    5598:	stp	x29, x30, [sp, #-32]!
    559c:	adrp	x3, 15000 <elf_compress_gnu@@ELFUTILS_1.7+0x1b8>
    55a0:	mov	x29, sp
    55a4:	stp	x19, x20, [sp, #16]
    55a8:	mov	x19, x1
    55ac:	add	x1, x3, #0x960
    55b0:	mov	x20, x0
    55b4:	mov	w0, w2
    55b8:	ldr	w3, [x19, #8]
    55bc:	ldr	x2, [x19, #16]
    55c0:	mov	w5, w3
    55c4:	ldr	x4, [x1, x5, lsl #3]
    55c8:	udiv	x1, x2, x4
    55cc:	msub	x1, x1, x4, x2
    55d0:	cbnz	x1, 5660 <elf32_xlatetof@@ELFUTILS_1.0+0xc8>
    55d4:	ldr	x1, [x20, #16]
    55d8:	cmp	x2, x1
    55dc:	b.hi	5670 <elf32_xlatetof@@ELFUTILS_1.0+0xd8>  // b.pmore
    55e0:	sub	w1, w0, #0x1
    55e4:	cmp	w1, #0x1
    55e8:	b.hi	5648 <elf32_xlatetof@@ELFUTILS_1.0+0xb0>  // b.pmore
    55ec:	cmp	w0, #0x1
    55f0:	ldr	x1, [x19]
    55f4:	ldr	x0, [x20]
    55f8:	b.eq	5630 <elf32_xlatetof@@ELFUTILS_1.0+0x98>  // b.none
    55fc:	adrp	x4, 2a000 <elf_compress_gnu@@ELFUTILS_1.7+0x151b8>
    5600:	add	x4, x4, #0xbd0
    5604:	mov	w3, #0x1                   	// #1
    5608:	ldr	x4, [x4, x5, lsl #3]
    560c:	blr	x4
    5610:	ldr	w3, [x19, #8]
    5614:	ldr	x2, [x19, #16]
    5618:	mov	x0, x20
    561c:	str	w3, [x20, #8]
    5620:	str	x2, [x20, #16]
    5624:	ldp	x19, x20, [sp, #16]
    5628:	ldp	x29, x30, [sp], #32
    562c:	ret
    5630:	cmp	x0, x1
    5634:	b.eq	5618 <elf32_xlatetof@@ELFUTILS_1.0+0x80>  // b.none
    5638:	bl	3030 <memmove@plt>
    563c:	ldr	w3, [x19, #8]
    5640:	ldr	x2, [x19, #16]
    5644:	b	5618 <elf32_xlatetof@@ELFUTILS_1.0+0x80>
    5648:	mov	w0, #0x7                   	// #7
    564c:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    5650:	mov	x0, #0x0                   	// #0
    5654:	ldp	x19, x20, [sp, #16]
    5658:	ldp	x29, x30, [sp], #32
    565c:	ret
    5660:	mov	w0, #0x21                  	// #33
    5664:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    5668:	mov	x0, #0x0                   	// #0
    566c:	b	5624 <elf32_xlatetof@@ELFUTILS_1.0+0x8c>
    5670:	mov	w0, #0x6                   	// #6
    5674:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    5678:	mov	x0, #0x0                   	// #0
    567c:	b	5624 <elf32_xlatetof@@ELFUTILS_1.0+0x8c>

0000000000005680 <elf32_xlatetom@@ELFUTILS_1.0>:
    5680:	stp	x29, x30, [sp, #-32]!
    5684:	mov	x29, sp
    5688:	ldr	w4, [x1, #8]
    568c:	stp	x19, x20, [sp, #16]
    5690:	mov	x20, x0
    5694:	cmp	w4, #0x13
    5698:	mov	w0, w2
    569c:	mov	x19, x1
    56a0:	ccmp	w4, #0x1a, #0x4, ne  // ne = any
    56a4:	ldr	x2, [x1, #16]
    56a8:	b.eq	56c4 <elf32_xlatetom@@ELFUTILS_1.0+0x44>  // b.none
    56ac:	adrp	x1, 15000 <elf_compress_gnu@@ELFUTILS_1.7+0x1b8>
    56b0:	add	x1, x1, #0x960
    56b4:	ldr	x3, [x1, w4, uxtw #3]
    56b8:	udiv	x1, x2, x3
    56bc:	msub	x1, x1, x3, x2
    56c0:	cbnz	x1, 5760 <elf32_xlatetom@@ELFUTILS_1.0+0xe0>
    56c4:	ldr	x1, [x20, #16]
    56c8:	cmp	x1, x2
    56cc:	b.cc	5750 <elf32_xlatetom@@ELFUTILS_1.0+0xd0>  // b.lo, b.ul, b.last
    56d0:	sub	w1, w0, #0x1
    56d4:	cmp	w1, #0x1
    56d8:	b.hi	5738 <elf32_xlatetom@@ELFUTILS_1.0+0xb8>  // b.pmore
    56dc:	cmp	w0, #0x1
    56e0:	ldr	x1, [x19]
    56e4:	ldr	x0, [x20]
    56e8:	b.eq	5720 <elf32_xlatetom@@ELFUTILS_1.0+0xa0>  // b.none
    56ec:	adrp	x5, 2a000 <elf_compress_gnu@@ELFUTILS_1.7+0x151b8>
    56f0:	add	x5, x5, #0xbd0
    56f4:	mov	w3, #0x0                   	// #0
    56f8:	ldr	x4, [x5, w4, uxtw #3]
    56fc:	blr	x4
    5700:	ldr	w4, [x19, #8]
    5704:	ldr	x2, [x19, #16]
    5708:	mov	x0, x20
    570c:	str	w4, [x20, #8]
    5710:	str	x2, [x20, #16]
    5714:	ldp	x19, x20, [sp, #16]
    5718:	ldp	x29, x30, [sp], #32
    571c:	ret
    5720:	cmp	x0, x1
    5724:	b.eq	5708 <elf32_xlatetom@@ELFUTILS_1.0+0x88>  // b.none
    5728:	bl	3030 <memmove@plt>
    572c:	ldr	w4, [x19, #8]
    5730:	ldr	x2, [x19, #16]
    5734:	b	5708 <elf32_xlatetom@@ELFUTILS_1.0+0x88>
    5738:	mov	w0, #0x7                   	// #7
    573c:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    5740:	mov	x0, #0x0                   	// #0
    5744:	ldp	x19, x20, [sp, #16]
    5748:	ldp	x29, x30, [sp], #32
    574c:	ret
    5750:	mov	w0, #0x6                   	// #6
    5754:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    5758:	mov	x0, #0x0                   	// #0
    575c:	b	5714 <elf32_xlatetom@@ELFUTILS_1.0+0x94>
    5760:	mov	w0, #0x21                  	// #33
    5764:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    5768:	mov	x0, #0x0                   	// #0
    576c:	b	5714 <elf32_xlatetom@@ELFUTILS_1.0+0x94>

0000000000005770 <elf64_xlatetof@@ELFUTILS_1.0>:
    5770:	stp	x29, x30, [sp, #-32]!
    5774:	adrp	x3, 15000 <elf_compress_gnu@@ELFUTILS_1.7+0x1b8>
    5778:	mov	x29, sp
    577c:	stp	x19, x20, [sp, #16]
    5780:	mov	x19, x1
    5784:	add	x1, x3, #0x960
    5788:	mov	x20, x0
    578c:	mov	w0, w2
    5790:	ldr	w3, [x19, #8]
    5794:	ldr	x2, [x19, #16]
    5798:	mov	w4, w3
    579c:	add	x4, x4, #0x1b
    57a0:	ldr	x5, [x1, x4, lsl #3]
    57a4:	udiv	x1, x2, x5
    57a8:	msub	x1, x1, x5, x2
    57ac:	cbnz	x1, 583c <elf64_xlatetof@@ELFUTILS_1.0+0xcc>
    57b0:	ldr	x1, [x20, #16]
    57b4:	cmp	x2, x1
    57b8:	b.hi	584c <elf64_xlatetof@@ELFUTILS_1.0+0xdc>  // b.pmore
    57bc:	sub	w1, w0, #0x1
    57c0:	cmp	w1, #0x1
    57c4:	b.hi	5824 <elf64_xlatetof@@ELFUTILS_1.0+0xb4>  // b.pmore
    57c8:	cmp	w0, #0x1
    57cc:	ldr	x1, [x19]
    57d0:	ldr	x0, [x20]
    57d4:	b.eq	580c <elf64_xlatetof@@ELFUTILS_1.0+0x9c>  // b.none
    57d8:	adrp	x5, 2a000 <elf_compress_gnu@@ELFUTILS_1.7+0x151b8>
    57dc:	add	x5, x5, #0xbd0
    57e0:	mov	w3, #0x1                   	// #1
    57e4:	ldr	x4, [x5, x4, lsl #3]
    57e8:	blr	x4
    57ec:	ldr	w3, [x19, #8]
    57f0:	ldr	x2, [x19, #16]
    57f4:	mov	x0, x20
    57f8:	str	w3, [x20, #8]
    57fc:	str	x2, [x20, #16]
    5800:	ldp	x19, x20, [sp, #16]
    5804:	ldp	x29, x30, [sp], #32
    5808:	ret
    580c:	cmp	x0, x1
    5810:	b.eq	57f4 <elf64_xlatetof@@ELFUTILS_1.0+0x84>  // b.none
    5814:	bl	3030 <memmove@plt>
    5818:	ldr	w3, [x19, #8]
    581c:	ldr	x2, [x19, #16]
    5820:	b	57f4 <elf64_xlatetof@@ELFUTILS_1.0+0x84>
    5824:	mov	w0, #0x7                   	// #7
    5828:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    582c:	mov	x0, #0x0                   	// #0
    5830:	ldp	x19, x20, [sp, #16]
    5834:	ldp	x29, x30, [sp], #32
    5838:	ret
    583c:	mov	w0, #0x21                  	// #33
    5840:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    5844:	mov	x0, #0x0                   	// #0
    5848:	b	5800 <elf64_xlatetof@@ELFUTILS_1.0+0x90>
    584c:	mov	w0, #0x6                   	// #6
    5850:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    5854:	mov	x0, #0x0                   	// #0
    5858:	b	5800 <elf64_xlatetof@@ELFUTILS_1.0+0x90>
    585c:	nop

0000000000005860 <elf64_xlatetom@@ELFUTILS_1.0>:
    5860:	stp	x29, x30, [sp, #-32]!
    5864:	mov	x29, sp
    5868:	ldr	w3, [x1, #8]
    586c:	stp	x19, x20, [sp, #16]
    5870:	mov	x20, x0
    5874:	cmp	w3, #0x13
    5878:	mov	w0, w2
    587c:	mov	x19, x1
    5880:	ccmp	w3, #0x1a, #0x4, ne  // ne = any
    5884:	ldr	x2, [x1, #16]
    5888:	b.eq	58a8 <elf64_xlatetom@@ELFUTILS_1.0+0x48>  // b.none
    588c:	adrp	x1, 15000 <elf_compress_gnu@@ELFUTILS_1.7+0x1b8>
    5890:	add	x1, x1, #0x960
    5894:	add	x1, x1, w3, uxtw #3
    5898:	ldr	x4, [x1, #216]
    589c:	udiv	x1, x2, x4
    58a0:	msub	x1, x1, x4, x2
    58a4:	cbnz	x1, 5948 <elf64_xlatetom@@ELFUTILS_1.0+0xe8>
    58a8:	ldr	x1, [x20, #16]
    58ac:	cmp	x1, x2
    58b0:	b.cc	5938 <elf64_xlatetom@@ELFUTILS_1.0+0xd8>  // b.lo, b.ul, b.last
    58b4:	sub	w1, w0, #0x1
    58b8:	cmp	w1, #0x1
    58bc:	b.hi	5920 <elf64_xlatetom@@ELFUTILS_1.0+0xc0>  // b.pmore
    58c0:	cmp	w0, #0x1
    58c4:	ldr	x1, [x19]
    58c8:	ldr	x0, [x20]
    58cc:	b.eq	5908 <elf64_xlatetom@@ELFUTILS_1.0+0xa8>  // b.none
    58d0:	adrp	x4, 2a000 <elf_compress_gnu@@ELFUTILS_1.7+0x151b8>
    58d4:	add	x4, x4, #0xbd0
    58d8:	add	x4, x4, w3, uxtw #3
    58dc:	mov	w3, #0x0                   	// #0
    58e0:	ldr	x4, [x4, #216]
    58e4:	blr	x4
    58e8:	ldr	w3, [x19, #8]
    58ec:	ldr	x2, [x19, #16]
    58f0:	mov	x0, x20
    58f4:	str	w3, [x20, #8]
    58f8:	str	x2, [x20, #16]
    58fc:	ldp	x19, x20, [sp, #16]
    5900:	ldp	x29, x30, [sp], #32
    5904:	ret
    5908:	cmp	x0, x1
    590c:	b.eq	58f0 <elf64_xlatetom@@ELFUTILS_1.0+0x90>  // b.none
    5910:	bl	3030 <memmove@plt>
    5914:	ldr	w3, [x19, #8]
    5918:	ldr	x2, [x19, #16]
    591c:	b	58f0 <elf64_xlatetom@@ELFUTILS_1.0+0x90>
    5920:	mov	w0, #0x7                   	// #7
    5924:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    5928:	mov	x0, #0x0                   	// #0
    592c:	ldp	x19, x20, [sp, #16]
    5930:	ldp	x29, x30, [sp], #32
    5934:	ret
    5938:	mov	w0, #0x6                   	// #6
    593c:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    5940:	mov	x0, #0x0                   	// #0
    5944:	b	58fc <elf64_xlatetom@@ELFUTILS_1.0+0x9c>
    5948:	mov	w0, #0x21                  	// #33
    594c:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    5950:	mov	x0, #0x0                   	// #0
    5954:	b	58fc <elf64_xlatetom@@ELFUTILS_1.0+0x9c>
    5958:	cbnz	x2, 5960 <elf64_xlatetom@@ELFUTILS_1.0+0x100>
    595c:	ret
    5960:	b	3030 <memmove@plt>
    5964:	nop
    5968:	mov	x3, #0xcccccccccccccccc    	// #-3689348814741910324
    596c:	cmp	x2, #0x13
    5970:	movk	x3, #0xcccd
    5974:	umulh	x2, x2, x3
    5978:	lsr	x5, x2, #4
    597c:	b.ls	5ac8 <elf64_xlatetom@@ELFUTILS_1.0+0x268>  // b.plast
    5980:	add	x3, x0, #0x4f
    5984:	sub	x4, x5, #0x1
    5988:	sub	x3, x3, x1
    598c:	cmp	x3, #0x9e
    5990:	ccmp	x4, #0x3, #0x0, hi  // hi = pmore
    5994:	b.ls	5acc <elf64_xlatetom@@ELFUTILS_1.0+0x26c>  // b.plast
    5998:	lsr	x4, x2, #6
    599c:	mov	x3, x1
    59a0:	mov	x2, x0
    59a4:	add	x4, x4, x4, lsl #2
    59a8:	add	x4, x1, x4, lsl #4
    59ac:	nop
    59b0:	ldp	q4, q3, [x3, #16]
    59b4:	ldp	q1, q0, [x3, #48]
    59b8:	ldr	q2, [x3], #80
    59bc:	rev32	v4.16b, v4.16b
    59c0:	rev32	v3.16b, v3.16b
    59c4:	rev32	v1.16b, v1.16b
    59c8:	cmp	x3, x4
    59cc:	rev32	v0.16b, v0.16b
    59d0:	rev32	v2.16b, v2.16b
    59d4:	stp	q3, q1, [x2, #32]
    59d8:	stp	q2, q4, [x2]
    59dc:	add	x2, x2, #0x50
    59e0:	stur	q0, [x2, #-16]
    59e4:	b.ne	59b0 <elf64_xlatetom@@ELFUTILS_1.0+0x150>  // b.any
    59e8:	and	x2, x5, #0xfffffffffffffffc
    59ec:	subs	x5, x5, x2
    59f0:	add	x2, x2, x2, lsl #2
    59f4:	lsl	x2, x2, #2
    59f8:	add	x3, x0, x2
    59fc:	add	x4, x1, x2
    5a00:	b.eq	5ac8 <elf64_xlatetom@@ELFUTILS_1.0+0x268>  // b.none
    5a04:	ldr	w1, [x1, x2]
    5a08:	cmp	x5, #0x1
    5a0c:	rev	w1, w1
    5a10:	str	w1, [x0, x2]
    5a14:	ldr	w0, [x4, #4]
    5a18:	rev	w0, w0
    5a1c:	str	w0, [x3, #4]
    5a20:	ldr	w0, [x4, #8]
    5a24:	rev	w0, w0
    5a28:	str	w0, [x3, #8]
    5a2c:	ldr	w0, [x4, #12]
    5a30:	rev	w0, w0
    5a34:	str	w0, [x3, #12]
    5a38:	ldr	w0, [x4, #16]
    5a3c:	rev	w0, w0
    5a40:	str	w0, [x3, #16]
    5a44:	b.eq	5ac8 <elf64_xlatetom@@ELFUTILS_1.0+0x268>  // b.none
    5a48:	ldr	w0, [x4, #20]
    5a4c:	cmp	x5, #0x2
    5a50:	rev	w0, w0
    5a54:	str	w0, [x3, #20]
    5a58:	ldr	w0, [x4, #24]
    5a5c:	rev	w0, w0
    5a60:	str	w0, [x3, #24]
    5a64:	ldr	w0, [x4, #28]
    5a68:	rev	w0, w0
    5a6c:	str	w0, [x3, #28]
    5a70:	ldr	w0, [x4, #32]
    5a74:	rev	w0, w0
    5a78:	str	w0, [x3, #32]
    5a7c:	ldr	w0, [x4, #36]
    5a80:	rev	w0, w0
    5a84:	str	w0, [x3, #36]
    5a88:	b.eq	5ac8 <elf64_xlatetom@@ELFUTILS_1.0+0x268>  // b.none
    5a8c:	ldr	w0, [x4, #40]
    5a90:	rev	w0, w0
    5a94:	str	w0, [x3, #40]
    5a98:	ldr	w0, [x4, #44]
    5a9c:	rev	w0, w0
    5aa0:	str	w0, [x3, #44]
    5aa4:	ldr	w0, [x4, #48]
    5aa8:	rev	w0, w0
    5aac:	str	w0, [x3, #48]
    5ab0:	ldr	w0, [x4, #52]
    5ab4:	rev	w0, w0
    5ab8:	str	w0, [x3, #52]
    5abc:	ldr	w0, [x4, #56]
    5ac0:	rev	w0, w0
    5ac4:	str	w0, [x3, #56]
    5ac8:	ret
    5acc:	add	x5, x5, x5, lsl #2
    5ad0:	add	x2, x0, x5, lsl #2
    5ad4:	nop
    5ad8:	ldr	w3, [x1]
    5adc:	add	x0, x0, #0x14
    5ae0:	add	x1, x1, #0x14
    5ae4:	rev	w3, w3
    5ae8:	stur	w3, [x0, #-20]
    5aec:	ldur	w3, [x1, #-16]
    5af0:	rev	w3, w3
    5af4:	stur	w3, [x0, #-16]
    5af8:	ldur	w3, [x1, #-12]
    5afc:	rev	w3, w3
    5b00:	stur	w3, [x0, #-12]
    5b04:	ldur	w3, [x1, #-8]
    5b08:	rev	w3, w3
    5b0c:	stur	w3, [x0, #-8]
    5b10:	ldur	w3, [x1, #-4]
    5b14:	rev	w3, w3
    5b18:	stur	w3, [x0, #-4]
    5b1c:	cmp	x0, x2
    5b20:	b.ne	5ad8 <elf64_xlatetom@@ELFUTILS_1.0+0x278>  // b.any
    5b24:	ret
    5b28:	mov	x3, #0xcccccccccccccccc    	// #-3689348814741910324
    5b2c:	cmp	x2, #0x13
    5b30:	movk	x3, #0xcccd
    5b34:	umulh	x2, x2, x3
    5b38:	lsr	x5, x2, #4
    5b3c:	b.ls	5c88 <elf64_xlatetom@@ELFUTILS_1.0+0x428>  // b.plast
    5b40:	add	x3, x0, #0x4f
    5b44:	sub	x4, x5, #0x1
    5b48:	sub	x3, x3, x1
    5b4c:	cmp	x3, #0x9e
    5b50:	ccmp	x4, #0x3, #0x0, hi  // hi = pmore
    5b54:	b.ls	5c8c <elf64_xlatetom@@ELFUTILS_1.0+0x42c>  // b.plast
    5b58:	lsr	x4, x2, #6
    5b5c:	mov	x3, x1
    5b60:	mov	x2, x0
    5b64:	add	x4, x4, x4, lsl #2
    5b68:	add	x4, x1, x4, lsl #4
    5b6c:	nop
    5b70:	ldp	q4, q3, [x3, #16]
    5b74:	ldp	q1, q0, [x3, #48]
    5b78:	ldr	q2, [x3], #80
    5b7c:	rev32	v4.16b, v4.16b
    5b80:	rev32	v3.16b, v3.16b
    5b84:	rev32	v1.16b, v1.16b
    5b88:	cmp	x3, x4
    5b8c:	rev32	v0.16b, v0.16b
    5b90:	rev32	v2.16b, v2.16b
    5b94:	stp	q3, q1, [x2, #32]
    5b98:	stp	q2, q4, [x2]
    5b9c:	add	x2, x2, #0x50
    5ba0:	stur	q0, [x2, #-16]
    5ba4:	b.ne	5b70 <elf64_xlatetom@@ELFUTILS_1.0+0x310>  // b.any
    5ba8:	and	x2, x5, #0xfffffffffffffffc
    5bac:	subs	x5, x5, x2
    5bb0:	add	x2, x2, x2, lsl #2
    5bb4:	lsl	x2, x2, #2
    5bb8:	add	x3, x0, x2
    5bbc:	add	x4, x1, x2
    5bc0:	b.eq	5c88 <elf64_xlatetom@@ELFUTILS_1.0+0x428>  // b.none
    5bc4:	ldr	w1, [x1, x2]
    5bc8:	cmp	x5, #0x1
    5bcc:	rev	w1, w1
    5bd0:	str	w1, [x0, x2]
    5bd4:	ldr	w0, [x4, #4]
    5bd8:	rev	w0, w0
    5bdc:	str	w0, [x3, #4]
    5be0:	ldr	w0, [x4, #8]
    5be4:	rev	w0, w0
    5be8:	str	w0, [x3, #8]
    5bec:	ldr	w0, [x4, #12]
    5bf0:	rev	w0, w0
    5bf4:	str	w0, [x3, #12]
    5bf8:	ldr	w0, [x4, #16]
    5bfc:	rev	w0, w0
    5c00:	str	w0, [x3, #16]
    5c04:	b.eq	5c88 <elf64_xlatetom@@ELFUTILS_1.0+0x428>  // b.none
    5c08:	ldr	w0, [x4, #20]
    5c0c:	cmp	x5, #0x2
    5c10:	rev	w0, w0
    5c14:	str	w0, [x3, #20]
    5c18:	ldr	w0, [x4, #24]
    5c1c:	rev	w0, w0
    5c20:	str	w0, [x3, #24]
    5c24:	ldr	w0, [x4, #28]
    5c28:	rev	w0, w0
    5c2c:	str	w0, [x3, #28]
    5c30:	ldr	w0, [x4, #32]
    5c34:	rev	w0, w0
    5c38:	str	w0, [x3, #32]
    5c3c:	ldr	w0, [x4, #36]
    5c40:	rev	w0, w0
    5c44:	str	w0, [x3, #36]
    5c48:	b.eq	5c88 <elf64_xlatetom@@ELFUTILS_1.0+0x428>  // b.none
    5c4c:	ldr	w0, [x4, #40]
    5c50:	rev	w0, w0
    5c54:	str	w0, [x3, #40]
    5c58:	ldr	w0, [x4, #44]
    5c5c:	rev	w0, w0
    5c60:	str	w0, [x3, #44]
    5c64:	ldr	w0, [x4, #48]
    5c68:	rev	w0, w0
    5c6c:	str	w0, [x3, #48]
    5c70:	ldr	w0, [x4, #52]
    5c74:	rev	w0, w0
    5c78:	str	w0, [x3, #52]
    5c7c:	ldr	w0, [x4, #56]
    5c80:	rev	w0, w0
    5c84:	str	w0, [x3, #56]
    5c88:	ret
    5c8c:	add	x5, x5, x5, lsl #2
    5c90:	add	x2, x0, x5, lsl #2
    5c94:	nop
    5c98:	ldr	w3, [x1]
    5c9c:	add	x0, x0, #0x14
    5ca0:	add	x1, x1, #0x14
    5ca4:	rev	w3, w3
    5ca8:	stur	w3, [x0, #-20]
    5cac:	ldur	w3, [x1, #-16]
    5cb0:	rev	w3, w3
    5cb4:	stur	w3, [x0, #-16]
    5cb8:	ldur	w3, [x1, #-12]
    5cbc:	rev	w3, w3
    5cc0:	stur	w3, [x0, #-12]
    5cc4:	ldur	w3, [x1, #-8]
    5cc8:	rev	w3, w3
    5ccc:	stur	w3, [x0, #-8]
    5cd0:	ldur	w3, [x1, #-4]
    5cd4:	rev	w3, w3
    5cd8:	stur	w3, [x0, #-4]
    5cdc:	cmp	x0, x2
    5ce0:	b.ne	5c98 <elf64_xlatetom@@ELFUTILS_1.0+0x438>  // b.any
    5ce4:	ret
    5ce8:	cmp	xzr, x2, lsr #3
    5cec:	lsr	x4, x2, #3
    5cf0:	b.eq	5d58 <elf64_xlatetom@@ELFUTILS_1.0+0x4f8>  // b.none
    5cf4:	add	x3, x0, #0xf
    5cf8:	sub	x5, x4, #0x1
    5cfc:	sub	x3, x3, x1
    5d00:	cmp	x3, #0x1e
    5d04:	ccmp	x5, #0x2, #0x0, hi  // hi = pmore
    5d08:	b.ls	5d5c <elf64_xlatetom@@ELFUTILS_1.0+0x4fc>  // b.plast
    5d0c:	lsr	x5, x2, #4
    5d10:	and	x3, x2, #0xfffffffffffffff0
    5d14:	mov	x2, #0x0                   	// #0
    5d18:	ldr	q0, [x1, x2]
    5d1c:	rev32	v0.16b, v0.16b
    5d20:	str	q0, [x0, x2]
    5d24:	add	x2, x2, #0x10
    5d28:	cmp	x2, x3
    5d2c:	b.ne	5d18 <elf64_xlatetom@@ELFUTILS_1.0+0x4b8>  // b.any
    5d30:	cmp	x4, x5, lsl #1
    5d34:	add	x3, x0, x2
    5d38:	add	x4, x1, x2
    5d3c:	b.eq	5d58 <elf64_xlatetom@@ELFUTILS_1.0+0x4f8>  // b.none
    5d40:	ldr	w1, [x1, x2]
    5d44:	rev	w1, w1
    5d48:	str	w1, [x0, x2]
    5d4c:	ldr	w0, [x4, #4]
    5d50:	rev	w0, w0
    5d54:	str	w0, [x3, #4]
    5d58:	ret
    5d5c:	add	x4, x0, x4, lsl #3
    5d60:	ldr	w2, [x1]
    5d64:	add	x0, x0, #0x8
    5d68:	add	x1, x1, #0x8
    5d6c:	rev	w2, w2
    5d70:	stur	w2, [x0, #-8]
    5d74:	ldur	w2, [x1, #-4]
    5d78:	rev	w2, w2
    5d7c:	stur	w2, [x0, #-4]
    5d80:	cmp	x4, x0
    5d84:	b.ne	5d60 <elf64_xlatetom@@ELFUTILS_1.0+0x500>  // b.any
    5d88:	ret
    5d8c:	nop
    5d90:	cmp	xzr, x2, lsr #3
    5d94:	lsr	x4, x2, #3
    5d98:	b.eq	5e00 <elf64_xlatetom@@ELFUTILS_1.0+0x5a0>  // b.none
    5d9c:	add	x3, x0, #0xf
    5da0:	sub	x5, x4, #0x1
    5da4:	sub	x3, x3, x1
    5da8:	cmp	x3, #0x1e
    5dac:	ccmp	x5, #0x2, #0x0, hi  // hi = pmore
    5db0:	b.ls	5e04 <elf64_xlatetom@@ELFUTILS_1.0+0x5a4>  // b.plast
    5db4:	lsr	x5, x2, #4
    5db8:	and	x3, x2, #0xfffffffffffffff0
    5dbc:	mov	x2, #0x0                   	// #0
    5dc0:	ldr	q0, [x1, x2]
    5dc4:	rev32	v0.16b, v0.16b
    5dc8:	str	q0, [x0, x2]
    5dcc:	add	x2, x2, #0x10
    5dd0:	cmp	x2, x3
    5dd4:	b.ne	5dc0 <elf64_xlatetom@@ELFUTILS_1.0+0x560>  // b.any
    5dd8:	cmp	x4, x5, lsl #1
    5ddc:	add	x3, x0, x2
    5de0:	add	x4, x1, x2
    5de4:	b.eq	5e00 <elf64_xlatetom@@ELFUTILS_1.0+0x5a0>  // b.none
    5de8:	ldr	w1, [x1, x2]
    5dec:	rev	w1, w1
    5df0:	str	w1, [x0, x2]
    5df4:	ldr	w0, [x4, #4]
    5df8:	rev	w0, w0
    5dfc:	str	w0, [x3, #4]
    5e00:	ret
    5e04:	add	x4, x0, x4, lsl #3
    5e08:	ldr	w2, [x1]
    5e0c:	add	x0, x0, #0x8
    5e10:	add	x1, x1, #0x8
    5e14:	rev	w2, w2
    5e18:	stur	w2, [x0, #-8]
    5e1c:	ldur	w2, [x1, #-4]
    5e20:	rev	w2, w2
    5e24:	stur	w2, [x0, #-4]
    5e28:	cmp	x4, x0
    5e2c:	b.ne	5e08 <elf64_xlatetom@@ELFUTILS_1.0+0x5a8>  // b.any
    5e30:	ret
    5e34:	nop
    5e38:	lsr	x5, x2, #2
    5e3c:	cmp	x0, x1
    5e40:	sub	x4, x5, #0x1
    5e44:	b.cs	5ed4 <elf64_xlatetom@@ELFUTILS_1.0+0x674>  // b.hs, b.nlast
    5e48:	cbz	x5, 5ed0 <elf64_xlatetom@@ELFUTILS_1.0+0x670>
    5e4c:	add	x3, x0, #0xf
    5e50:	sub	x3, x3, x1
    5e54:	cmp	x3, #0x1e
    5e58:	ccmp	x4, #0x5, #0x0, hi  // hi = pmore
    5e5c:	b.ls	5fb4 <elf64_xlatetom@@ELFUTILS_1.0+0x754>  // b.plast
    5e60:	lsr	x6, x2, #4
    5e64:	and	x3, x2, #0xfffffffffffffff0
    5e68:	mov	x2, #0x0                   	// #0
    5e6c:	nop
    5e70:	ldr	q0, [x1, x2]
    5e74:	rev32	v0.16b, v0.16b
    5e78:	str	q0, [x0, x2]
    5e7c:	add	x2, x2, #0x10
    5e80:	cmp	x2, x3
    5e84:	b.ne	5e70 <elf64_xlatetom@@ELFUTILS_1.0+0x610>  // b.any
    5e88:	lsl	x3, x6, #2
    5e8c:	add	x6, x0, x2
    5e90:	sub	x4, x4, x3
    5e94:	cmp	x5, x3
    5e98:	add	x3, x1, x2
    5e9c:	b.eq	5ed0 <elf64_xlatetom@@ELFUTILS_1.0+0x670>  // b.none
    5ea0:	ldr	w1, [x1, x2]
    5ea4:	rev	w1, w1
    5ea8:	str	w1, [x0, x2]
    5eac:	cbz	x4, 5ed0 <elf64_xlatetom@@ELFUTILS_1.0+0x670>
    5eb0:	ldr	w0, [x3, #4]
    5eb4:	cmp	x4, #0x1
    5eb8:	rev	w0, w0
    5ebc:	str	w0, [x6, #4]
    5ec0:	b.eq	5ed0 <elf64_xlatetom@@ELFUTILS_1.0+0x670>  // b.none
    5ec4:	ldr	w0, [x3, #8]
    5ec8:	rev	w0, w0
    5ecc:	str	w0, [x6, #8]
    5ed0:	ret
    5ed4:	add	x6, x0, x2
    5ed8:	add	x7, x1, x2
    5edc:	cbz	x5, 5ed0 <elf64_xlatetom@@ELFUTILS_1.0+0x670>
    5ee0:	sub	x3, x2, #0x10
    5ee4:	add	x1, x1, x3
    5ee8:	add	x0, x0, x3
    5eec:	cmp	x6, x1
    5ef0:	ccmp	x7, x0, #0x0, hi  // hi = pmore
    5ef4:	ccmp	x4, #0x5, #0x0, ls  // ls = plast
    5ef8:	b.ls	5f88 <elf64_xlatetom@@ELFUTILS_1.0+0x728>  // b.plast
    5efc:	neg	x8, x2, lsr #4
    5f00:	adrp	x3, 15000 <elf_compress_gnu@@ELFUTILS_1.7+0x1b8>
    5f04:	lsr	x2, x2, #4
    5f08:	lsl	x8, x8, #4
    5f0c:	ldr	q1, [x3, #2832]
    5f10:	mov	x3, #0x0                   	// #0
    5f14:	nop
    5f18:	ldr	q0, [x1, x3]
    5f1c:	tbl	v0.16b, {v0.16b}, v1.16b
    5f20:	rev32	v0.16b, v0.16b
    5f24:	tbl	v0.16b, {v0.16b}, v1.16b
    5f28:	str	q0, [x0, x3]
    5f2c:	sub	x3, x3, #0x10
    5f30:	cmp	x3, x8
    5f34:	b.ne	5f18 <elf64_xlatetom@@ELFUTILS_1.0+0x6b8>  // b.any
    5f38:	lsl	x0, x2, #2
    5f3c:	neg	x2, x2, lsl #4
    5f40:	add	x6, x6, x2
    5f44:	sub	x4, x4, x0
    5f48:	cmp	x5, x0
    5f4c:	add	x2, x7, x2
    5f50:	b.eq	5ed0 <elf64_xlatetom@@ELFUTILS_1.0+0x670>  // b.none
    5f54:	ldur	w0, [x2, #-4]
    5f58:	rev	w0, w0
    5f5c:	stur	w0, [x6, #-4]
    5f60:	cbz	x4, 5ed0 <elf64_xlatetom@@ELFUTILS_1.0+0x670>
    5f64:	ldur	w0, [x2, #-8]
    5f68:	cmp	x4, #0x1
    5f6c:	rev	w0, w0
    5f70:	stur	w0, [x6, #-8]
    5f74:	b.eq	5ed0 <elf64_xlatetom@@ELFUTILS_1.0+0x670>  // b.none
    5f78:	ldur	w0, [x2, #-12]
    5f7c:	rev	w0, w0
    5f80:	stur	w0, [x6, #-12]
    5f84:	ret
    5f88:	neg	x5, x5, lsl #2
    5f8c:	add	x7, x7, x5
    5f90:	add	x5, x6, x5
    5f94:	nop
    5f98:	ldr	w0, [x7, x4, lsl #2]
    5f9c:	rev	w0, w0
    5fa0:	str	w0, [x5, x4, lsl #2]
    5fa4:	sub	x4, x4, #0x1
    5fa8:	cmn	x4, #0x1
    5fac:	b.ne	5f98 <elf64_xlatetom@@ELFUTILS_1.0+0x738>  // b.any
    5fb0:	ret
    5fb4:	lsl	x5, x5, #2
    5fb8:	mov	x2, #0x0                   	// #0
    5fbc:	nop
    5fc0:	ldr	w3, [x1, x2]
    5fc4:	rev	w3, w3
    5fc8:	str	w3, [x0, x2]
    5fcc:	add	x2, x2, #0x4
    5fd0:	cmp	x2, x5
    5fd4:	b.ne	5fc0 <elf64_xlatetom@@ELFUTILS_1.0+0x760>  // b.any
    5fd8:	ret
    5fdc:	nop
    5fe0:	mov	x3, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    5fe4:	cmp	x2, #0xb
    5fe8:	movk	x3, #0xaaab
    5fec:	umulh	x2, x2, x3
    5ff0:	lsr	x5, x2, #3
    5ff4:	b.ls	60e8 <elf64_xlatetom@@ELFUTILS_1.0+0x888>  // b.plast
    5ff8:	add	x3, x0, #0x2f
    5ffc:	sub	x4, x5, #0x1
    6000:	sub	x3, x3, x1
    6004:	cmp	x3, #0x5e
    6008:	ccmp	x4, #0x3, #0x0, hi  // hi = pmore
    600c:	b.ls	60ec <elf64_xlatetom@@ELFUTILS_1.0+0x88c>  // b.plast
    6010:	lsr	x4, x2, #5
    6014:	mov	x3, x1
    6018:	mov	x2, x0
    601c:	add	x4, x4, x4, lsl #1
    6020:	add	x4, x1, x4, lsl #4
    6024:	nop
    6028:	ldp	q2, q0, [x3, #16]
    602c:	ldr	q1, [x3], #48
    6030:	rev32	v2.16b, v2.16b
    6034:	rev32	v0.16b, v0.16b
    6038:	rev32	v1.16b, v1.16b
    603c:	cmp	x3, x4
    6040:	str	q0, [x2, #32]
    6044:	stp	q1, q2, [x2]
    6048:	add	x2, x2, #0x30
    604c:	b.ne	6028 <elf64_xlatetom@@ELFUTILS_1.0+0x7c8>  // b.any
    6050:	and	x2, x5, #0xfffffffffffffffc
    6054:	subs	x5, x5, x2
    6058:	add	x2, x2, x2, lsl #1
    605c:	lsl	x2, x2, #2
    6060:	add	x3, x0, x2
    6064:	add	x4, x1, x2
    6068:	b.eq	60e8 <elf64_xlatetom@@ELFUTILS_1.0+0x888>  // b.none
    606c:	ldr	w1, [x1, x2]
    6070:	cmp	x5, #0x1
    6074:	rev	w1, w1
    6078:	str	w1, [x0, x2]
    607c:	ldr	w0, [x4, #4]
    6080:	rev	w0, w0
    6084:	str	w0, [x3, #4]
    6088:	ldr	w0, [x4, #8]
    608c:	rev	w0, w0
    6090:	str	w0, [x3, #8]
    6094:	b.eq	60e8 <elf64_xlatetom@@ELFUTILS_1.0+0x888>  // b.none
    6098:	ldr	w0, [x4, #12]
    609c:	cmp	x5, #0x2
    60a0:	rev	w0, w0
    60a4:	str	w0, [x3, #12]
    60a8:	ldr	w0, [x4, #16]
    60ac:	rev	w0, w0
    60b0:	str	w0, [x3, #16]
    60b4:	ldr	w0, [x4, #20]
    60b8:	rev	w0, w0
    60bc:	str	w0, [x3, #20]
    60c0:	b.eq	60e8 <elf64_xlatetom@@ELFUTILS_1.0+0x888>  // b.none
    60c4:	ldr	w0, [x4, #24]
    60c8:	rev	w0, w0
    60cc:	str	w0, [x3, #24]
    60d0:	ldr	w0, [x4, #28]
    60d4:	rev	w0, w0
    60d8:	str	w0, [x3, #28]
    60dc:	ldr	w0, [x4, #32]
    60e0:	rev	w0, w0
    60e4:	str	w0, [x3, #32]
    60e8:	ret
    60ec:	add	x5, x5, x5, lsl #1
    60f0:	add	x2, x0, x5, lsl #2
    60f4:	nop
    60f8:	ldr	w3, [x1]
    60fc:	add	x0, x0, #0xc
    6100:	add	x1, x1, #0xc
    6104:	rev	w3, w3
    6108:	stur	w3, [x0, #-12]
    610c:	ldur	w3, [x1, #-8]
    6110:	rev	w3, w3
    6114:	stur	w3, [x0, #-8]
    6118:	ldur	w3, [x1, #-4]
    611c:	rev	w3, w3
    6120:	stur	w3, [x0, #-4]
    6124:	cmp	x0, x2
    6128:	b.ne	60f8 <elf64_xlatetom@@ELFUTILS_1.0+0x898>  // b.any
    612c:	ret
    6130:	cmp	xzr, x2, lsr #3
    6134:	lsr	x4, x2, #3
    6138:	b.eq	61a0 <elf64_xlatetom@@ELFUTILS_1.0+0x940>  // b.none
    613c:	add	x3, x0, #0xf
    6140:	sub	x5, x4, #0x1
    6144:	sub	x3, x3, x1
    6148:	cmp	x3, #0x1e
    614c:	ccmp	x5, #0x2, #0x0, hi  // hi = pmore
    6150:	b.ls	61a4 <elf64_xlatetom@@ELFUTILS_1.0+0x944>  // b.plast
    6154:	lsr	x5, x2, #4
    6158:	and	x3, x2, #0xfffffffffffffff0
    615c:	mov	x2, #0x0                   	// #0
    6160:	ldr	q0, [x1, x2]
    6164:	rev32	v0.16b, v0.16b
    6168:	str	q0, [x0, x2]
    616c:	add	x2, x2, #0x10
    6170:	cmp	x2, x3
    6174:	b.ne	6160 <elf64_xlatetom@@ELFUTILS_1.0+0x900>  // b.any
    6178:	cmp	x4, x5, lsl #1
    617c:	add	x3, x0, x2
    6180:	add	x4, x1, x2
    6184:	b.eq	61a0 <elf64_xlatetom@@ELFUTILS_1.0+0x940>  // b.none
    6188:	ldr	w1, [x1, x2]
    618c:	rev	w1, w1
    6190:	str	w1, [x0, x2]
    6194:	ldr	w0, [x4, #4]
    6198:	rev	w0, w0
    619c:	str	w0, [x3, #4]
    61a0:	ret
    61a4:	add	x4, x0, x4, lsl #3
    61a8:	ldr	w2, [x1]
    61ac:	add	x0, x0, #0x8
    61b0:	add	x1, x1, #0x8
    61b4:	rev	w2, w2
    61b8:	stur	w2, [x0, #-8]
    61bc:	ldur	w2, [x1, #-4]
    61c0:	rev	w2, w2
    61c4:	stur	w2, [x0, #-4]
    61c8:	cmp	x4, x0
    61cc:	b.ne	61a8 <elf64_xlatetom@@ELFUTILS_1.0+0x948>  // b.any
    61d0:	ret
    61d4:	nop
    61d8:	mov	x3, #0xcccccccccccccccc    	// #-3689348814741910324
    61dc:	cmp	x2, #0x27
    61e0:	movk	x3, #0xcccd
    61e4:	umulh	x2, x2, x3
    61e8:	lsr	x5, x2, #5
    61ec:	b.ls	62ec <elf64_xlatetom@@ELFUTILS_1.0+0xa8c>  // b.plast
    61f0:	add	x3, x0, #0x4f
    61f4:	sub	x4, x5, #0x1
    61f8:	sub	x3, x3, x1
    61fc:	cmp	x3, #0x9e
    6200:	ccmp	x4, #0x1, #0x0, hi  // hi = pmore
    6204:	b.ls	62f0 <elf64_xlatetom@@ELFUTILS_1.0+0xa90>  // b.plast
    6208:	lsr	x4, x2, #6
    620c:	mov	x3, x1
    6210:	mov	x2, x0
    6214:	add	x4, x4, x4, lsl #2
    6218:	add	x4, x1, x4, lsl #4
    621c:	nop
    6220:	ldp	q4, q3, [x3, #16]
    6224:	ldp	q1, q0, [x3, #48]
    6228:	ldr	q2, [x3], #80
    622c:	rev32	v4.16b, v4.16b
    6230:	rev32	v3.16b, v3.16b
    6234:	rev32	v1.16b, v1.16b
    6238:	cmp	x4, x3
    623c:	rev32	v0.16b, v0.16b
    6240:	rev32	v2.16b, v2.16b
    6244:	stp	q3, q1, [x2, #32]
    6248:	stp	q2, q4, [x2]
    624c:	add	x2, x2, #0x50
    6250:	stur	q0, [x2, #-16]
    6254:	b.ne	6220 <elf64_xlatetom@@ELFUTILS_1.0+0x9c0>  // b.any
    6258:	and	x4, x5, #0xfffffffffffffffe
    625c:	cmp	x5, x4
    6260:	add	x4, x4, x4, lsl #2
    6264:	lsl	x4, x4, #3
    6268:	add	x2, x0, x4
    626c:	add	x3, x1, x4
    6270:	b.eq	62ec <elf64_xlatetom@@ELFUTILS_1.0+0xa8c>  // b.none
    6274:	ldr	w1, [x1, x4]
    6278:	rev	w1, w1
    627c:	str	w1, [x0, x4]
    6280:	ldr	w0, [x3, #4]
    6284:	rev	w0, w0
    6288:	str	w0, [x2, #4]
    628c:	ldr	w0, [x3, #8]
    6290:	rev	w0, w0
    6294:	str	w0, [x2, #8]
    6298:	ldr	w0, [x3, #12]
    629c:	rev	w0, w0
    62a0:	str	w0, [x2, #12]
    62a4:	ldr	w0, [x3, #16]
    62a8:	rev	w0, w0
    62ac:	str	w0, [x2, #16]
    62b0:	ldr	w0, [x3, #20]
    62b4:	rev	w0, w0
    62b8:	str	w0, [x2, #20]
    62bc:	ldr	w0, [x3, #24]
    62c0:	rev	w0, w0
    62c4:	str	w0, [x2, #24]
    62c8:	ldr	w0, [x3, #28]
    62cc:	rev	w0, w0
    62d0:	str	w0, [x2, #28]
    62d4:	ldr	w0, [x3, #32]
    62d8:	rev	w0, w0
    62dc:	str	w0, [x2, #32]
    62e0:	ldr	w0, [x3, #36]
    62e4:	rev	w0, w0
    62e8:	str	w0, [x2, #36]
    62ec:	ret
    62f0:	add	x5, x5, x5, lsl #2
    62f4:	add	x3, x0, x5, lsl #3
    62f8:	ldr	w2, [x1]
    62fc:	add	x0, x0, #0x28
    6300:	add	x1, x1, #0x28
    6304:	rev	w2, w2
    6308:	stur	w2, [x0, #-40]
    630c:	ldur	w2, [x1, #-36]
    6310:	rev	w2, w2
    6314:	stur	w2, [x0, #-36]
    6318:	ldur	w2, [x1, #-32]
    631c:	rev	w2, w2
    6320:	stur	w2, [x0, #-32]
    6324:	ldur	w2, [x1, #-28]
    6328:	rev	w2, w2
    632c:	stur	w2, [x0, #-28]
    6330:	ldur	w2, [x1, #-24]
    6334:	rev	w2, w2
    6338:	stur	w2, [x0, #-24]
    633c:	ldur	w2, [x1, #-20]
    6340:	rev	w2, w2
    6344:	stur	w2, [x0, #-20]
    6348:	ldur	w2, [x1, #-16]
    634c:	rev	w2, w2
    6350:	stur	w2, [x0, #-16]
    6354:	ldur	w2, [x1, #-12]
    6358:	rev	w2, w2
    635c:	stur	w2, [x0, #-12]
    6360:	ldur	w2, [x1, #-8]
    6364:	rev	w2, w2
    6368:	stur	w2, [x0, #-8]
    636c:	ldur	w2, [x1, #-4]
    6370:	rev	w2, w2
    6374:	stur	w2, [x0, #-4]
    6378:	cmp	x3, x0
    637c:	b.ne	62f8 <elf64_xlatetom@@ELFUTILS_1.0+0xa98>  // b.any
    6380:	ret
    6384:	nop
    6388:	cmp	xzr, x2, lsr #5
    638c:	lsr	x2, x2, #5
    6390:	b.eq	63dc <elf64_xlatetom@@ELFUTILS_1.0+0xb7c>  // b.none
    6394:	add	x3, x0, #0x1f
    6398:	sub	x3, x3, x1
    639c:	cmp	x3, #0x3e
    63a0:	b.ls	63e0 <elf64_xlatetom@@ELFUTILS_1.0+0xb80>  // b.plast
    63a4:	add	x5, x1, #0x10
    63a8:	add	x4, x0, #0x10
    63ac:	lsl	x3, x2, #5
    63b0:	mov	x2, #0x0                   	// #0
    63b4:	nop
    63b8:	ldr	q1, [x1, x2]
    63bc:	ldr	q0, [x5, x2]
    63c0:	rev32	v1.16b, v1.16b
    63c4:	rev32	v0.16b, v0.16b
    63c8:	str	q1, [x0, x2]
    63cc:	str	q0, [x4, x2]
    63d0:	add	x2, x2, #0x20
    63d4:	cmp	x2, x3
    63d8:	b.ne	63b8 <elf64_xlatetom@@ELFUTILS_1.0+0xb58>  // b.any
    63dc:	ret
    63e0:	add	x2, x1, x2, lsl #5
    63e4:	nop
    63e8:	ldr	w3, [x1]
    63ec:	add	x1, x1, #0x20
    63f0:	add	x0, x0, #0x20
    63f4:	rev	w3, w3
    63f8:	stur	w3, [x0, #-32]
    63fc:	ldur	w3, [x1, #-28]
    6400:	rev	w3, w3
    6404:	stur	w3, [x0, #-28]
    6408:	ldur	w3, [x1, #-24]
    640c:	rev	w3, w3
    6410:	stur	w3, [x0, #-24]
    6414:	ldur	w3, [x1, #-20]
    6418:	rev	w3, w3
    641c:	stur	w3, [x0, #-20]
    6420:	ldur	w3, [x1, #-16]
    6424:	rev	w3, w3
    6428:	stur	w3, [x0, #-16]
    642c:	ldur	w3, [x1, #-12]
    6430:	rev	w3, w3
    6434:	stur	w3, [x0, #-12]
    6438:	ldur	w3, [x1, #-8]
    643c:	rev	w3, w3
    6440:	stur	w3, [x0, #-8]
    6444:	ldur	w3, [x1, #-4]
    6448:	cmp	x2, x1
    644c:	rev	w3, w3
    6450:	stur	w3, [x0, #-4]
    6454:	b.ne	63e8 <elf64_xlatetom@@ELFUTILS_1.0+0xb88>  // b.any
    6458:	ret
    645c:	nop
    6460:	cmp	xzr, x2, lsr #4
    6464:	lsr	x2, x2, #4
    6468:	b.eq	64a8 <elf64_xlatetom@@ELFUTILS_1.0+0xc48>  // b.none
    646c:	add	x3, x0, #0xf
    6470:	sub	x4, x2, #0x1
    6474:	sub	x3, x3, x1
    6478:	cmp	x3, #0x1e
    647c:	ccmp	x4, #0x2, #0x0, hi  // hi = pmore
    6480:	b.ls	64ac <elf64_xlatetom@@ELFUTILS_1.0+0xc4c>  // b.plast
    6484:	lsl	x3, x2, #4
    6488:	mov	x2, #0x0                   	// #0
    648c:	nop
    6490:	ldr	q0, [x1, x2]
    6494:	rev64	v0.16b, v0.16b
    6498:	str	q0, [x0, x2]
    649c:	add	x2, x2, #0x10
    64a0:	cmp	x2, x3
    64a4:	b.ne	6490 <elf64_xlatetom@@ELFUTILS_1.0+0xc30>  // b.any
    64a8:	ret
    64ac:	add	x2, x0, x2, lsl #4
    64b0:	ldr	x3, [x1]
    64b4:	add	x0, x0, #0x10
    64b8:	add	x1, x1, #0x10
    64bc:	rev	x3, x3
    64c0:	stur	x3, [x0, #-16]
    64c4:	ldur	x3, [x1, #-8]
    64c8:	rev	x3, x3
    64cc:	stur	x3, [x0, #-8]
    64d0:	cmp	x2, x0
    64d4:	b.ne	64b0 <elf64_xlatetom@@ELFUTILS_1.0+0xc50>  // b.any
    64d8:	ret
    64dc:	nop
    64e0:	cmp	xzr, x2, lsr #4
    64e4:	lsr	x2, x2, #4
    64e8:	b.eq	6528 <elf64_xlatetom@@ELFUTILS_1.0+0xcc8>  // b.none
    64ec:	add	x3, x0, #0xf
    64f0:	sub	x4, x2, #0x1
    64f4:	sub	x3, x3, x1
    64f8:	cmp	x3, #0x1e
    64fc:	ccmp	x4, #0x2, #0x0, hi  // hi = pmore
    6500:	b.ls	652c <elf64_xlatetom@@ELFUTILS_1.0+0xccc>  // b.plast
    6504:	lsl	x3, x2, #4
    6508:	mov	x2, #0x0                   	// #0
    650c:	nop
    6510:	ldr	q0, [x1, x2]
    6514:	rev64	v0.16b, v0.16b
    6518:	str	q0, [x0, x2]
    651c:	add	x2, x2, #0x10
    6520:	cmp	x2, x3
    6524:	b.ne	6510 <elf64_xlatetom@@ELFUTILS_1.0+0xcb0>  // b.any
    6528:	ret
    652c:	add	x2, x0, x2, lsl #4
    6530:	ldr	x3, [x1]
    6534:	add	x0, x0, #0x10
    6538:	add	x1, x1, #0x10
    653c:	rev	x3, x3
    6540:	stur	x3, [x0, #-16]
    6544:	ldur	x3, [x1, #-8]
    6548:	rev	x3, x3
    654c:	stur	x3, [x0, #-8]
    6550:	cmp	x2, x0
    6554:	b.ne	6530 <elf64_xlatetom@@ELFUTILS_1.0+0xcd0>  // b.any
    6558:	ret
    655c:	nop
    6560:	cmp	xzr, x2, lsr #4
    6564:	lsr	x2, x2, #4
    6568:	b.eq	65a8 <elf64_xlatetom@@ELFUTILS_1.0+0xd48>  // b.none
    656c:	add	x3, x0, #0xf
    6570:	sub	x4, x2, #0x1
    6574:	sub	x3, x3, x1
    6578:	cmp	x3, #0x1e
    657c:	ccmp	x4, #0x2, #0x0, hi  // hi = pmore
    6580:	b.ls	65ac <elf64_xlatetom@@ELFUTILS_1.0+0xd4c>  // b.plast
    6584:	lsl	x3, x2, #4
    6588:	mov	x2, #0x0                   	// #0
    658c:	nop
    6590:	ldr	q0, [x1, x2]
    6594:	rev64	v0.16b, v0.16b
    6598:	str	q0, [x0, x2]
    659c:	add	x2, x2, #0x10
    65a0:	cmp	x2, x3
    65a4:	b.ne	6590 <elf64_xlatetom@@ELFUTILS_1.0+0xd30>  // b.any
    65a8:	ret
    65ac:	add	x2, x0, x2, lsl #4
    65b0:	ldr	x3, [x1]
    65b4:	add	x0, x0, #0x10
    65b8:	add	x1, x1, #0x10
    65bc:	rev	x3, x3
    65c0:	stur	x3, [x0, #-16]
    65c4:	ldur	x3, [x1, #-8]
    65c8:	rev	x3, x3
    65cc:	stur	x3, [x0, #-8]
    65d0:	cmp	x2, x0
    65d4:	b.ne	65b0 <elf64_xlatetom@@ELFUTILS_1.0+0xd50>  // b.any
    65d8:	ret
    65dc:	nop
    65e0:	cmp	x2, #0x3
    65e4:	b.ls	6748 <elf64_xlatetom@@ELFUTILS_1.0+0xee8>  // b.plast
    65e8:	ldr	w4, [x1]
    65ec:	sub	x5, x2, #0x4
    65f0:	cmp	x5, #0x3
    65f4:	rev	w4, w4
    65f8:	str	w4, [x0]
    65fc:	b.ls	6748 <elf64_xlatetom@@ELFUTILS_1.0+0xee8>  // b.plast
    6600:	ldr	w4, [x1, #4]
    6604:	sub	x5, x2, #0x8
    6608:	cmp	x5, #0x3
    660c:	rev	w4, w4
    6610:	str	w4, [x0, #4]
    6614:	b.ls	6748 <elf64_xlatetom@@ELFUTILS_1.0+0xee8>  // b.plast
    6618:	ldr	w6, [x1, #8]
    661c:	sub	x4, x2, #0xc
    6620:	cmp	x4, #0x3
    6624:	rev	w6, w6
    6628:	str	w6, [x0, #8]
    662c:	b.ls	6748 <elf64_xlatetom@@ELFUTILS_1.0+0xee8>  // b.plast
    6630:	ldr	w5, [x1, #12]
    6634:	sub	x4, x2, #0x10
    6638:	rev	w2, w5
    663c:	str	w2, [x0, #12]
    6640:	cbnz	w3, 674c <elf64_xlatetom@@ELFUTILS_1.0+0xeec>
    6644:	cbz	w6, 6688 <elf64_xlatetom@@ELFUTILS_1.0+0xe28>
    6648:	cmp	x4, #0x7
    664c:	b.ls	6748 <elf64_xlatetom@@ELFUTILS_1.0+0xee8>  // b.plast
    6650:	sub	w5, w6, #0x1
    6654:	mov	x2, #0x10                  	// #16
    6658:	add	x5, x5, #0x2
    665c:	lsl	x5, x5, #3
    6660:	b	666c <elf64_xlatetom@@ELFUTILS_1.0+0xe0c>
    6664:	cmp	x4, #0x7
    6668:	b.ls	6748 <elf64_xlatetom@@ELFUTILS_1.0+0xee8>  // b.plast
    666c:	ldr	x3, [x1, x2]
    6670:	cmp	x5, x2
    6674:	sub	x4, x4, #0x8
    6678:	rev	x3, x3
    667c:	str	x3, [x0, x2]
    6680:	add	x2, x2, #0x8
    6684:	b.ne	6664 <elf64_xlatetom@@ELFUTILS_1.0+0xe04>  // b.any
    6688:	ubfiz	x6, x6, #3, #32
    668c:	cmp	x4, #0x3
    6690:	add	x2, x6, #0x10
    6694:	add	x5, x1, x2
    6698:	add	x2, x0, x2
    669c:	b.ls	6748 <elf64_xlatetom@@ELFUTILS_1.0+0xee8>  // b.plast
    66a0:	add	x6, x6, #0x20
    66a4:	sub	x3, x4, #0x4
    66a8:	add	x0, x0, x6
    66ac:	add	x1, x1, x6
    66b0:	cmp	x5, x0
    66b4:	ccmp	x1, x2, #0x0, cc  // cc = lo, ul, last
    66b8:	ccmp	x3, #0x17, #0x0, ls  // ls = plast
    66bc:	b.ls	6754 <elf64_xlatetom@@ELFUTILS_1.0+0xef4>  // b.plast
    66c0:	lsr	x1, x3, #2
    66c4:	mov	x0, #0x0                   	// #0
    66c8:	add	x1, x1, #0x1
    66cc:	lsr	x3, x1, #2
    66d0:	lsl	x3, x3, #4
    66d4:	nop
    66d8:	ldr	q0, [x5, x0]
    66dc:	rev32	v0.16b, v0.16b
    66e0:	str	q0, [x2, x0]
    66e4:	add	x0, x0, #0x10
    66e8:	cmp	x3, x0
    66ec:	b.ne	66d8 <elf64_xlatetom@@ELFUTILS_1.0+0xe78>  // b.any
    66f0:	and	x0, x1, #0xfffffffffffffffc
    66f4:	cmp	x1, x0
    66f8:	lsl	x1, x0, #2
    66fc:	sub	x4, x4, x0, lsl #2
    6700:	add	x6, x2, x1
    6704:	add	x1, x5, x1
    6708:	b.eq	6748 <elf64_xlatetom@@ELFUTILS_1.0+0xee8>  // b.none
    670c:	ldr	w3, [x5, x0, lsl #2]
    6710:	sub	x5, x4, #0x4
    6714:	cmp	x5, #0x3
    6718:	rev	w3, w3
    671c:	str	w3, [x2, x0, lsl #2]
    6720:	b.ls	6748 <elf64_xlatetom@@ELFUTILS_1.0+0xee8>  // b.plast
    6724:	ldr	w0, [x1, #4]
    6728:	sub	x4, x4, #0x8
    672c:	cmp	x4, #0x3
    6730:	rev	w0, w0
    6734:	str	w0, [x6, #4]
    6738:	b.ls	6748 <elf64_xlatetom@@ELFUTILS_1.0+0xee8>  // b.plast
    673c:	ldr	w0, [x1, #8]
    6740:	rev	w0, w0
    6744:	str	w0, [x6, #8]
    6748:	ret
    674c:	ldr	w6, [x1, #8]
    6750:	b	6644 <elf64_xlatetom@@ELFUTILS_1.0+0xde4>
    6754:	and	x0, x3, #0xfffffffffffffffc
    6758:	mov	x1, #0x0                   	// #0
    675c:	add	x0, x0, #0x4
    6760:	ldr	w3, [x5, x1]
    6764:	rev	w3, w3
    6768:	str	w3, [x2, x1]
    676c:	add	x1, x1, #0x4
    6770:	cmp	x1, x0
    6774:	b.ne	6760 <elf64_xlatetom@@ELFUTILS_1.0+0xf00>  // b.any
    6778:	ret
    677c:	nop
    6780:	mov	x3, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    6784:	cmp	x2, #0x17
    6788:	movk	x3, #0xaaab
    678c:	umulh	x2, x2, x3
    6790:	lsr	x5, x2, #4
    6794:	b.ls	6830 <elf64_xlatetom@@ELFUTILS_1.0+0xfd0>  // b.plast
    6798:	add	x3, x0, #0x2f
    679c:	sub	x4, x5, #0x1
    67a0:	sub	x3, x3, x1
    67a4:	cmp	x3, #0x5e
    67a8:	ccmp	x4, #0x3, #0x0, hi  // hi = pmore
    67ac:	b.ls	6834 <elf64_xlatetom@@ELFUTILS_1.0+0xfd4>  // b.plast
    67b0:	lsr	x4, x2, #5
    67b4:	mov	x3, x1
    67b8:	mov	x2, x0
    67bc:	add	x4, x4, x4, lsl #1
    67c0:	add	x4, x1, x4, lsl #4
    67c4:	nop
    67c8:	ldp	q2, q0, [x3, #16]
    67cc:	ldr	q1, [x3], #48
    67d0:	rev64	v2.16b, v2.16b
    67d4:	rev64	v0.16b, v0.16b
    67d8:	rev64	v1.16b, v1.16b
    67dc:	cmp	x4, x3
    67e0:	str	q0, [x2, #32]
    67e4:	stp	q1, q2, [x2]
    67e8:	add	x2, x2, #0x30
    67ec:	b.ne	67c8 <elf64_xlatetom@@ELFUTILS_1.0+0xf68>  // b.any
    67f0:	and	x2, x5, #0xfffffffffffffffe
    67f4:	cmp	x5, x2
    67f8:	add	x2, x2, x2, lsl #1
    67fc:	lsl	x2, x2, #3
    6800:	add	x3, x0, x2
    6804:	add	x4, x1, x2
    6808:	b.eq	6830 <elf64_xlatetom@@ELFUTILS_1.0+0xfd0>  // b.none
    680c:	ldr	x1, [x1, x2]
    6810:	rev	x1, x1
    6814:	str	x1, [x0, x2]
    6818:	ldr	x0, [x4, #8]
    681c:	rev	x0, x0
    6820:	str	x0, [x3, #8]
    6824:	ldr	x0, [x4, #16]
    6828:	rev	x0, x0
    682c:	str	x0, [x3, #16]
    6830:	ret
    6834:	add	x5, x5, x5, lsl #1
    6838:	add	x3, x0, x5, lsl #3
    683c:	nop
    6840:	ldr	x2, [x1]
    6844:	add	x0, x0, #0x18
    6848:	add	x1, x1, #0x18
    684c:	rev	x2, x2
    6850:	stur	x2, [x0, #-24]
    6854:	ldur	x2, [x1, #-16]
    6858:	rev	x2, x2
    685c:	stur	x2, [x0, #-16]
    6860:	ldur	x2, [x1, #-8]
    6864:	rev	x2, x2
    6868:	stur	x2, [x0, #-8]
    686c:	cmp	x3, x0
    6870:	b.ne	6840 <elf64_xlatetom@@ELFUTILS_1.0+0xfe0>  // b.any
    6874:	ret
    6878:	cmp	xzr, x2, lsr #6
    687c:	lsr	x2, x2, #6
    6880:	b.eq	6ac0 <elf64_xlatetom@@ELFUTILS_1.0+0x1260>  // b.none
    6884:	add	x4, x0, #0x70
    6888:	add	x3, x1, #0x80
    688c:	cmp	x1, x4
    6890:	add	x4, x0, #0x28
    6894:	ccmp	x3, x4, #0x0, cc  // cc = lo, ul, last
    6898:	add	x6, x0, #0x80
    689c:	cset	w4, ls  // ls = plast
    68a0:	add	x5, x0, #0x30
    68a4:	cmp	x1, x6
    68a8:	add	x6, x0, #0x68
    68ac:	ccmp	x3, x5, #0x0, cc  // cc = lo, ul, last
    68b0:	add	x5, x0, #0x8
    68b4:	cset	w8, ls  // ls = plast
    68b8:	cmp	x1, x6
    68bc:	ccmp	x3, x5, #0x0, cc  // cc = lo, ul, last
    68c0:	add	x6, x0, #0x48
    68c4:	cset	w5, ls  // ls = plast
    68c8:	cmp	x6, x1
    68cc:	ccmp	x3, x0, #0x0, hi  // hi = pmore
    68d0:	sub	x7, x2, #0x1
    68d4:	cset	w6, ls  // ls = plast
    68d8:	and	w3, w4, w8
    68dc:	cmp	x7, #0xe
    68e0:	and	w4, w5, w6
    68e4:	and	w3, w3, w4
    68e8:	cset	w4, hi  // hi = pmore
    68ec:	tst	w4, w3
    68f0:	b.eq	6ac4 <elf64_xlatetom@@ELFUTILS_1.0+0x1264>  // b.none
    68f4:	adrp	x3, 15000 <elf_compress_gnu@@ELFUTILS_1.7+0x1b8>
    68f8:	lsr	x6, x7, #1
    68fc:	mov	x2, x1
    6900:	ldr	q5, [x3, #2848]
    6904:	adrp	x3, 15000 <elf_compress_gnu@@ELFUTILS_1.7+0x1b8>
    6908:	add	x6, x1, x6, lsl #7
    690c:	ldr	q4, [x3, #2864]
    6910:	mov	x3, x0
    6914:	nop
    6918:	ldr	q0, [x2]
    691c:	mov	x4, x3
    6920:	ldr	q1, [x2, #64]
    6924:	add	x5, x3, #0x68
    6928:	add	x2, x2, #0x80
    692c:	add	x3, x3, #0x80
    6930:	tbl	v0.16b, {v0.16b, v1.16b}, v5.16b
    6934:	rev32	v0.16b, v0.16b
    6938:	str	d0, [x4], #64
    693c:	st1	{v0.d}[1], [x4]
    6940:	ldur	q1, [x2, #-120]
    6944:	ldur	q3, [x2, #-104]
    6948:	ldur	q2, [x2, #-56]
    694c:	ldur	q0, [x2, #-40]
    6950:	rev64	v3.16b, v3.16b
    6954:	rev64	v2.16b, v2.16b
    6958:	rev64	v0.16b, v0.16b
    695c:	rev64	v1.16b, v1.16b
    6960:	stur	q3, [x3, #-104]
    6964:	stur	q2, [x3, #-56]
    6968:	stur	q1, [x3, #-120]
    696c:	stur	q0, [x3, #-40]
    6970:	ldur	q0, [x2, #-96]
    6974:	ldur	q1, [x2, #-32]
    6978:	tbl	v0.16b, {v0.16b, v1.16b}, v4.16b
    697c:	rev32	v0.16b, v0.16b
    6980:	stur	d0, [x3, #-88]
    6984:	st1	{v0.d}[1], [x5]
    6988:	ldur	q1, [x2, #-88]
    698c:	ldur	q3, [x2, #-72]
    6990:	ldur	q0, [x2, #-24]
    6994:	ldur	q2, [x2, #-8]
    6998:	cmp	x2, x6
    699c:	ext	v1.16b, v1.16b, v3.16b, #8
    69a0:	ext	v0.16b, v0.16b, v2.16b, #8
    69a4:	rev64	v1.16b, v1.16b
    69a8:	rev64	v0.16b, v0.16b
    69ac:	stur	q1, [x3, #-80]
    69b0:	stur	q0, [x3, #-16]
    69b4:	b.ne	6918 <elf64_xlatetom@@ELFUTILS_1.0+0x10b8>  // b.any
    69b8:	and	x4, x7, #0xfffffffffffffffe
    69bc:	cmp	x7, x4
    69c0:	lsl	x4, x4, #6
    69c4:	add	x3, x1, x4
    69c8:	add	x2, x0, x4
    69cc:	ldr	w1, [x1, x4]
    69d0:	rev	w1, w1
    69d4:	str	w1, [x0, x4]
    69d8:	ldr	w0, [x3, #4]
    69dc:	rev	w0, w0
    69e0:	str	w0, [x2, #4]
    69e4:	ldr	x0, [x3, #8]
    69e8:	rev	x0, x0
    69ec:	str	x0, [x2, #8]
    69f0:	ldr	x0, [x3, #16]
    69f4:	rev	x0, x0
    69f8:	str	x0, [x2, #16]
    69fc:	ldr	x0, [x3, #24]
    6a00:	rev	x0, x0
    6a04:	str	x0, [x2, #24]
    6a08:	ldr	x0, [x3, #32]
    6a0c:	rev	x0, x0
    6a10:	str	x0, [x2, #32]
    6a14:	ldr	w0, [x3, #40]
    6a18:	rev	w0, w0
    6a1c:	str	w0, [x2, #40]
    6a20:	ldr	w0, [x3, #44]
    6a24:	rev	w0, w0
    6a28:	str	w0, [x2, #44]
    6a2c:	ldr	x0, [x3, #48]
    6a30:	rev	x0, x0
    6a34:	str	x0, [x2, #48]
    6a38:	ldr	x0, [x3, #56]
    6a3c:	rev	x0, x0
    6a40:	str	x0, [x2, #56]
    6a44:	b.eq	6ac0 <elf64_xlatetom@@ELFUTILS_1.0+0x1260>  // b.none
    6a48:	ldr	w0, [x3, #64]
    6a4c:	rev	w0, w0
    6a50:	str	w0, [x2, #64]
    6a54:	ldr	w0, [x3, #68]
    6a58:	rev	w0, w0
    6a5c:	str	w0, [x2, #68]
    6a60:	ldr	x0, [x3, #72]
    6a64:	rev	x0, x0
    6a68:	str	x0, [x2, #72]
    6a6c:	ldr	x0, [x3, #80]
    6a70:	rev	x0, x0
    6a74:	str	x0, [x2, #80]
    6a78:	ldr	x0, [x3, #88]
    6a7c:	rev	x0, x0
    6a80:	str	x0, [x2, #88]
    6a84:	ldr	x0, [x3, #96]
    6a88:	rev	x0, x0
    6a8c:	str	x0, [x2, #96]
    6a90:	ldr	w0, [x3, #104]
    6a94:	rev	w0, w0
    6a98:	str	w0, [x2, #104]
    6a9c:	ldr	w0, [x3, #108]
    6aa0:	rev	w0, w0
    6aa4:	str	w0, [x2, #108]
    6aa8:	ldr	x0, [x3, #112]
    6aac:	rev	x0, x0
    6ab0:	str	x0, [x2, #112]
    6ab4:	ldr	x0, [x3, #120]
    6ab8:	rev	x0, x0
    6abc:	str	x0, [x2, #120]
    6ac0:	ret
    6ac4:	add	x2, x0, x2, lsl #6
    6ac8:	ldr	w3, [x1]
    6acc:	add	x0, x0, #0x40
    6ad0:	add	x1, x1, #0x40
    6ad4:	rev	w3, w3
    6ad8:	stur	w3, [x0, #-64]
    6adc:	ldur	w3, [x1, #-60]
    6ae0:	rev	w3, w3
    6ae4:	stur	w3, [x0, #-60]
    6ae8:	ldur	x3, [x1, #-56]
    6aec:	rev	x3, x3
    6af0:	stur	x3, [x0, #-56]
    6af4:	ldur	x3, [x1, #-48]
    6af8:	rev	x3, x3
    6afc:	stur	x3, [x0, #-48]
    6b00:	ldur	x3, [x1, #-40]
    6b04:	rev	x3, x3
    6b08:	stur	x3, [x0, #-40]
    6b0c:	ldur	x3, [x1, #-32]
    6b10:	rev	x3, x3
    6b14:	stur	x3, [x0, #-32]
    6b18:	ldur	w3, [x1, #-24]
    6b1c:	rev	w3, w3
    6b20:	stur	w3, [x0, #-24]
    6b24:	ldur	w3, [x1, #-20]
    6b28:	rev	w3, w3
    6b2c:	stur	w3, [x0, #-20]
    6b30:	ldur	x3, [x1, #-16]
    6b34:	rev	x3, x3
    6b38:	stur	x3, [x0, #-16]
    6b3c:	ldur	x3, [x1, #-8]
    6b40:	rev	x3, x3
    6b44:	stur	x3, [x0, #-8]
    6b48:	cmp	x0, x2
    6b4c:	b.ne	6ac8 <elf64_xlatetom@@ELFUTILS_1.0+0x1268>  // b.any
    6b50:	ret
    6b54:	nop
    6b58:	mov	x3, #0x2493                	// #9363
    6b5c:	cmp	x2, #0x37
    6b60:	movk	x3, #0x9249, lsl #16
    6b64:	lsr	x2, x2, #3
    6b68:	movk	x3, #0x4924, lsl #32
    6b6c:	movk	x3, #0x2492, lsl #48
    6b70:	umulh	x2, x2, x3
    6b74:	b.ls	6d24 <elf64_xlatetom@@ELFUTILS_1.0+0x14c4>  // b.plast
    6b78:	add	x4, x0, #0x70
    6b7c:	add	x3, x1, #0x70
    6b80:	cmp	x1, x4
    6b84:	add	x4, x0, #0x8
    6b88:	ccmp	x3, x4, #0x0, cc  // cc = lo, ul, last
    6b8c:	add	x5, x0, #0x40
    6b90:	cset	w4, ls  // ls = plast
    6b94:	cmp	x5, x1
    6b98:	ccmp	x3, x0, #0x0, hi  // hi = pmore
    6b9c:	sub	x6, x2, #0x1
    6ba0:	cset	w3, ls  // ls = plast
    6ba4:	cmp	x6, #0x10
    6ba8:	and	w3, w4, w3
    6bac:	cset	w4, hi  // hi = pmore
    6bb0:	tst	w4, w3
    6bb4:	b.eq	6d28 <elf64_xlatetom@@ELFUTILS_1.0+0x14c8>  // b.none
    6bb8:	lsr	x3, x6, #1
    6bbc:	adrp	x4, 15000 <elf_compress_gnu@@ELFUTILS_1.7+0x1b8>
    6bc0:	mov	x2, x1
    6bc4:	lsl	x5, x3, #3
    6bc8:	sub	x5, x5, x3
    6bcc:	mov	x3, x0
    6bd0:	ldr	q6, [x4, #2880]
    6bd4:	add	x5, x1, x5, lsl #4
    6bd8:	ldr	q0, [x2]
    6bdc:	mov	x4, x3
    6be0:	ldr	q1, [x2, #48]
    6be4:	tbl	v0.16b, {v0.16b, v1.16b}, v6.16b
    6be8:	rev32	v0.16b, v0.16b
    6bec:	str	d0, [x4], #56
    6bf0:	st1	{v0.d}[1], [x4]
    6bf4:	ldur	q2, [x2, #8]
    6bf8:	ldur	q5, [x2, #24]
    6bfc:	ldur	q4, [x2, #40]
    6c00:	ldp	q3, q1, [x2, #64]
    6c04:	add	x2, x2, #0x70
    6c08:	ldur	q0, [x2, #-16]
    6c0c:	cmp	x2, x5
    6c10:	rev64	v5.16b, v5.16b
    6c14:	rev64	v4.16b, v4.16b
    6c18:	rev64	v3.16b, v3.16b
    6c1c:	rev64	v1.16b, v1.16b
    6c20:	rev64	v0.16b, v0.16b
    6c24:	stur	q5, [x3, #24]
    6c28:	rev64	v2.16b, v2.16b
    6c2c:	stur	q4, [x3, #40]
    6c30:	stp	q3, q1, [x3, #64]
    6c34:	add	x3, x3, #0x70
    6c38:	stur	q2, [x3, #-104]
    6c3c:	stur	q0, [x3, #-16]
    6c40:	b.ne	6bd8 <elf64_xlatetom@@ELFUTILS_1.0+0x1378>  // b.any
    6c44:	and	x2, x6, #0xfffffffffffffffe
    6c48:	cmp	x6, x2
    6c4c:	lsl	x4, x2, #3
    6c50:	sub	x4, x4, x2
    6c54:	lsl	x4, x4, #3
    6c58:	add	x3, x1, x4
    6c5c:	add	x2, x0, x4
    6c60:	ldr	w1, [x1, x4]
    6c64:	rev	w1, w1
    6c68:	str	w1, [x0, x4]
    6c6c:	ldr	w0, [x3, #4]
    6c70:	rev	w0, w0
    6c74:	str	w0, [x2, #4]
    6c78:	ldr	x0, [x3, #8]
    6c7c:	rev	x0, x0
    6c80:	str	x0, [x2, #8]
    6c84:	ldr	x0, [x3, #16]
    6c88:	rev	x0, x0
    6c8c:	str	x0, [x2, #16]
    6c90:	ldr	x0, [x3, #24]
    6c94:	rev	x0, x0
    6c98:	str	x0, [x2, #24]
    6c9c:	ldr	x0, [x3, #32]
    6ca0:	rev	x0, x0
    6ca4:	str	x0, [x2, #32]
    6ca8:	ldr	x0, [x3, #40]
    6cac:	rev	x0, x0
    6cb0:	str	x0, [x2, #40]
    6cb4:	ldr	x0, [x3, #48]
    6cb8:	rev	x0, x0
    6cbc:	str	x0, [x2, #48]
    6cc0:	b.eq	6d24 <elf64_xlatetom@@ELFUTILS_1.0+0x14c4>  // b.none
    6cc4:	ldr	w0, [x3, #56]
    6cc8:	rev	w0, w0
    6ccc:	str	w0, [x2, #56]
    6cd0:	ldr	w0, [x3, #60]
    6cd4:	rev	w0, w0
    6cd8:	str	w0, [x2, #60]
    6cdc:	ldr	x0, [x3, #64]
    6ce0:	rev	x0, x0
    6ce4:	str	x0, [x2, #64]
    6ce8:	ldr	x0, [x3, #72]
    6cec:	rev	x0, x0
    6cf0:	str	x0, [x2, #72]
    6cf4:	ldr	x0, [x3, #80]
    6cf8:	rev	x0, x0
    6cfc:	str	x0, [x2, #80]
    6d00:	ldr	x0, [x3, #88]
    6d04:	rev	x0, x0
    6d08:	str	x0, [x2, #88]
    6d0c:	ldr	x0, [x3, #96]
    6d10:	rev	x0, x0
    6d14:	str	x0, [x2, #96]
    6d18:	ldr	x0, [x3, #104]
    6d1c:	rev	x0, x0
    6d20:	str	x0, [x2, #104]
    6d24:	ret
    6d28:	lsl	x3, x2, #3
    6d2c:	sub	x2, x3, x2
    6d30:	add	x3, x0, x2, lsl #3
    6d34:	nop
    6d38:	ldr	w2, [x1]
    6d3c:	add	x0, x0, #0x38
    6d40:	add	x1, x1, #0x38
    6d44:	rev	w2, w2
    6d48:	stur	w2, [x0, #-56]
    6d4c:	ldur	w2, [x1, #-52]
    6d50:	rev	w2, w2
    6d54:	stur	w2, [x0, #-52]
    6d58:	ldur	x2, [x1, #-48]
    6d5c:	rev	x2, x2
    6d60:	stur	x2, [x0, #-48]
    6d64:	ldur	x2, [x1, #-40]
    6d68:	rev	x2, x2
    6d6c:	stur	x2, [x0, #-40]
    6d70:	ldur	x2, [x1, #-32]
    6d74:	rev	x2, x2
    6d78:	stur	x2, [x0, #-32]
    6d7c:	ldur	x2, [x1, #-24]
    6d80:	rev	x2, x2
    6d84:	stur	x2, [x0, #-24]
    6d88:	ldur	x2, [x1, #-16]
    6d8c:	rev	x2, x2
    6d90:	stur	x2, [x0, #-16]
    6d94:	ldur	x2, [x1, #-8]
    6d98:	rev	x2, x2
    6d9c:	stur	x2, [x0, #-8]
    6da0:	cmp	x3, x0
    6da4:	b.ne	6d38 <elf64_xlatetom@@ELFUTILS_1.0+0x14d8>  // b.any
    6da8:	ret
    6dac:	nop
    6db0:	lsr	x4, x2, #3
    6db4:	cmp	x0, x1
    6db8:	sub	x3, x4, #0x1
    6dbc:	b.cs	6e18 <elf64_xlatetom@@ELFUTILS_1.0+0x15b8>  // b.hs, b.nlast
    6dc0:	cbz	x4, 6e14 <elf64_xlatetom@@ELFUTILS_1.0+0x15b4>
    6dc4:	add	x5, x0, #0xf
    6dc8:	sub	x5, x5, x1
    6dcc:	cmp	x5, #0x1e
    6dd0:	ccmp	x3, #0x6, #0x0, hi  // hi = pmore
    6dd4:	b.ls	6ebc <elf64_xlatetom@@ELFUTILS_1.0+0x165c>  // b.plast
    6dd8:	lsr	x5, x2, #4
    6ddc:	and	x3, x2, #0xfffffffffffffff0
    6de0:	mov	x2, #0x0                   	// #0
    6de4:	nop
    6de8:	ldr	q0, [x1, x2]
    6dec:	rev64	v0.16b, v0.16b
    6df0:	str	q0, [x0, x2]
    6df4:	add	x2, x2, #0x10
    6df8:	cmp	x2, x3
    6dfc:	b.ne	6de8 <elf64_xlatetom@@ELFUTILS_1.0+0x1588>  // b.any
    6e00:	cmp	x4, x5, lsl #1
    6e04:	b.eq	6e14 <elf64_xlatetom@@ELFUTILS_1.0+0x15b4>  // b.none
    6e08:	ldr	x1, [x1, x2]
    6e0c:	rev	x1, x1
    6e10:	str	x1, [x0, x2]
    6e14:	ret
    6e18:	add	x5, x0, x2
    6e1c:	add	x6, x1, x2
    6e20:	cbz	x4, 6e14 <elf64_xlatetom@@ELFUTILS_1.0+0x15b4>
    6e24:	sub	x7, x2, #0x10
    6e28:	add	x1, x1, x7
    6e2c:	add	x0, x0, x7
    6e30:	cmp	x5, x1
    6e34:	ccmp	x6, x0, #0x0, hi  // hi = pmore
    6e38:	ccmp	x3, #0x6, #0x0, ls  // ls = plast
    6e3c:	b.ls	6e94 <elf64_xlatetom@@ELFUTILS_1.0+0x1634>  // b.plast
    6e40:	neg	x7, x2, lsr #4
    6e44:	lsr	x3, x2, #4
    6e48:	mov	x2, #0x0                   	// #0
    6e4c:	lsl	x7, x7, #4
    6e50:	ldr	q0, [x1, x2]
    6e54:	ext	v0.16b, v0.16b, v0.16b, #8
    6e58:	rev64	v0.16b, v0.16b
    6e5c:	ext	v0.16b, v0.16b, v0.16b, #8
    6e60:	str	q0, [x0, x2]
    6e64:	sub	x2, x2, #0x10
    6e68:	cmp	x2, x7
    6e6c:	b.ne	6e50 <elf64_xlatetom@@ELFUTILS_1.0+0x15f0>  // b.any
    6e70:	neg	x0, x3, lsl #4
    6e74:	cmp	x4, x3, lsl #1
    6e78:	add	x1, x5, x0
    6e7c:	add	x0, x6, x0
    6e80:	b.eq	6e14 <elf64_xlatetom@@ELFUTILS_1.0+0x15b4>  // b.none
    6e84:	ldur	x0, [x0, #-8]
    6e88:	rev	x0, x0
    6e8c:	stur	x0, [x1, #-8]
    6e90:	ret
    6e94:	neg	x4, x4, lsl #3
    6e98:	add	x0, x6, x4
    6e9c:	add	x4, x5, x4
    6ea0:	ldr	x1, [x0, x3, lsl #3]
    6ea4:	rev	x1, x1
    6ea8:	str	x1, [x4, x3, lsl #3]
    6eac:	sub	x3, x3, #0x1
    6eb0:	cmn	x3, #0x1
    6eb4:	b.ne	6ea0 <elf64_xlatetom@@ELFUTILS_1.0+0x1640>  // b.any
    6eb8:	ret
    6ebc:	lsl	x4, x4, #3
    6ec0:	mov	x2, #0x0                   	// #0
    6ec4:	nop
    6ec8:	ldr	x3, [x1, x2]
    6ecc:	rev	x3, x3
    6ed0:	str	x3, [x0, x2]
    6ed4:	add	x2, x2, #0x8
    6ed8:	cmp	x4, x2
    6edc:	b.ne	6ec8 <elf64_xlatetom@@ELFUTILS_1.0+0x1668>  // b.any
    6ee0:	ret
    6ee4:	nop
    6ee8:	cmp	xzr, x2, lsr #5
    6eec:	lsr	x2, x2, #5
    6ef0:	b.eq	6f44 <elf64_xlatetom@@ELFUTILS_1.0+0x16e4>  // b.none
    6ef4:	add	x3, x0, x2, lsl #5
    6ef8:	ldr	x2, [x1]
    6efc:	add	x0, x0, #0x20
    6f00:	add	x1, x1, #0x20
    6f04:	rev	x2, x2
    6f08:	stur	x2, [x0, #-32]
    6f0c:	ldur	x2, [x1, #-24]
    6f10:	rev	x2, x2
    6f14:	stur	x2, [x0, #-24]
    6f18:	ldur	x2, [x1, #-16]
    6f1c:	rev	x2, x2
    6f20:	stur	x2, [x0, #-16]
    6f24:	ldurh	w2, [x1, #-8]
    6f28:	rev16	w2, w2
    6f2c:	sturh	w2, [x0, #-8]
    6f30:	ldurh	w2, [x1, #-6]
    6f34:	rev16	w2, w2
    6f38:	sturh	w2, [x0, #-6]
    6f3c:	cmp	x0, x3
    6f40:	b.ne	6ef8 <elf64_xlatetom@@ELFUTILS_1.0+0x1698>  // b.any
    6f44:	ret
    6f48:	cmp	xzr, x2, lsr #2
    6f4c:	lsr	x4, x2, #2
    6f50:	b.eq	6ffc <elf64_xlatetom@@ELFUTILS_1.0+0x179c>  // b.none
    6f54:	add	x3, x0, #0xf
    6f58:	sub	x5, x4, #0x1
    6f5c:	sub	x3, x3, x1
    6f60:	cmp	x3, #0x1e
    6f64:	ccmp	x5, #0x3, #0x0, hi  // hi = pmore
    6f68:	b.ls	7000 <elf64_xlatetom@@ELFUTILS_1.0+0x17a0>  // b.plast
    6f6c:	lsr	x5, x2, #4
    6f70:	and	x3, x2, #0xfffffffffffffff0
    6f74:	mov	x2, #0x0                   	// #0
    6f78:	ldr	q0, [x1, x2]
    6f7c:	rev16	v0.16b, v0.16b
    6f80:	str	q0, [x0, x2]
    6f84:	add	x2, x2, #0x10
    6f88:	cmp	x3, x2
    6f8c:	b.ne	6f78 <elf64_xlatetom@@ELFUTILS_1.0+0x1718>  // b.any
    6f90:	lsl	x2, x5, #2
    6f94:	add	x5, x0, x3
    6f98:	subs	x4, x4, x2
    6f9c:	add	x2, x1, x3
    6fa0:	b.eq	6ffc <elf64_xlatetom@@ELFUTILS_1.0+0x179c>  // b.none
    6fa4:	ldrh	w1, [x1, x3]
    6fa8:	cmp	x4, #0x1
    6fac:	rev16	w1, w1
    6fb0:	strh	w1, [x0, x3]
    6fb4:	ldrh	w0, [x2, #2]
    6fb8:	rev16	w0, w0
    6fbc:	strh	w0, [x5, #2]
    6fc0:	b.eq	6ffc <elf64_xlatetom@@ELFUTILS_1.0+0x179c>  // b.none
    6fc4:	ldrh	w0, [x2, #4]
    6fc8:	cmp	x4, #0x2
    6fcc:	rev16	w0, w0
    6fd0:	strh	w0, [x5, #4]
    6fd4:	ldrh	w0, [x2, #6]
    6fd8:	rev16	w0, w0
    6fdc:	strh	w0, [x5, #6]
    6fe0:	b.eq	6ffc <elf64_xlatetom@@ELFUTILS_1.0+0x179c>  // b.none
    6fe4:	ldrh	w0, [x2, #8]
    6fe8:	rev16	w0, w0
    6fec:	strh	w0, [x5, #8]
    6ff0:	ldrh	w0, [x2, #10]
    6ff4:	rev16	w0, w0
    6ff8:	strh	w0, [x5, #10]
    6ffc:	ret
    7000:	add	x4, x0, x4, lsl #2
    7004:	nop
    7008:	ldrh	w2, [x1]
    700c:	add	x0, x0, #0x4
    7010:	add	x1, x1, #0x4
    7014:	rev16	w2, w2
    7018:	sturh	w2, [x0, #-4]
    701c:	ldurh	w2, [x1, #-2]
    7020:	rev16	w2, w2
    7024:	sturh	w2, [x0, #-2]
    7028:	cmp	x0, x4
    702c:	b.ne	7008 <elf64_xlatetom@@ELFUTILS_1.0+0x17a8>  // b.any
    7030:	ret
    7034:	nop
    7038:	mov	x3, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    703c:	cmp	x2, #0x17
    7040:	movk	x3, #0xaaab
    7044:	umulh	x2, x2, x3
    7048:	lsr	x3, x2, #4
    704c:	b.ls	70a8 <elf64_xlatetom@@ELFUTILS_1.0+0x1848>  // b.plast
    7050:	add	x3, x3, x3, lsl #1
    7054:	add	x3, x0, x3, lsl #3
    7058:	ldr	w2, [x1]
    705c:	add	x0, x0, #0x18
    7060:	add	x1, x1, #0x18
    7064:	rev	w2, w2
    7068:	stur	w2, [x0, #-24]
    706c:	ldurb	w2, [x1, #-20]
    7070:	sturb	w2, [x0, #-20]
    7074:	ldurb	w2, [x1, #-19]
    7078:	sturb	w2, [x0, #-19]
    707c:	ldurh	w2, [x1, #-18]
    7080:	rev16	w2, w2
    7084:	sturh	w2, [x0, #-18]
    7088:	ldur	x2, [x1, #-16]
    708c:	rev	x2, x2
    7090:	stur	x2, [x0, #-16]
    7094:	ldur	x2, [x1, #-8]
    7098:	rev	x2, x2
    709c:	stur	x2, [x0, #-8]
    70a0:	cmp	x0, x3
    70a4:	b.ne	7058 <elf64_xlatetom@@ELFUTILS_1.0+0x17f8>  // b.any
    70a8:	ret
    70ac:	nop
    70b0:	cmp	xzr, x2, lsr #6
    70b4:	lsr	x2, x2, #6
    70b8:	b.eq	7174 <elf64_xlatetom@@ELFUTILS_1.0+0x1914>  // b.none
    70bc:	add	x3, x0, x2, lsl #6
    70c0:	ldp	x4, x5, [x1]
    70c4:	stp	x4, x5, [x0]
    70c8:	add	x0, x0, #0x40
    70cc:	ldrh	w2, [x1, #16]
    70d0:	add	x1, x1, #0x40
    70d4:	rev16	w2, w2
    70d8:	sturh	w2, [x0, #-48]
    70dc:	ldurh	w2, [x1, #-46]
    70e0:	rev16	w2, w2
    70e4:	sturh	w2, [x0, #-46]
    70e8:	ldur	w2, [x1, #-44]
    70ec:	rev	w2, w2
    70f0:	stur	w2, [x0, #-44]
    70f4:	ldur	x2, [x1, #-40]
    70f8:	rev	x2, x2
    70fc:	stur	x2, [x0, #-40]
    7100:	ldur	x2, [x1, #-32]
    7104:	rev	x2, x2
    7108:	stur	x2, [x0, #-32]
    710c:	ldur	x2, [x1, #-24]
    7110:	rev	x2, x2
    7114:	stur	x2, [x0, #-24]
    7118:	ldur	w2, [x1, #-16]
    711c:	rev	w2, w2
    7120:	stur	w2, [x0, #-16]
    7124:	ldurh	w2, [x1, #-12]
    7128:	rev16	w2, w2
    712c:	sturh	w2, [x0, #-12]
    7130:	ldurh	w2, [x1, #-10]
    7134:	rev16	w2, w2
    7138:	sturh	w2, [x0, #-10]
    713c:	ldurh	w2, [x1, #-8]
    7140:	rev16	w2, w2
    7144:	sturh	w2, [x0, #-8]
    7148:	ldurh	w2, [x1, #-6]
    714c:	rev16	w2, w2
    7150:	sturh	w2, [x0, #-6]
    7154:	ldurh	w2, [x1, #-4]
    7158:	rev16	w2, w2
    715c:	sturh	w2, [x0, #-4]
    7160:	ldurh	w2, [x1, #-2]
    7164:	rev16	w2, w2
    7168:	sturh	w2, [x0, #-2]
    716c:	cmp	x3, x0
    7170:	b.ne	70c0 <elf64_xlatetom@@ELFUTILS_1.0+0x1860>  // b.any
    7174:	ret
    7178:	mov	x3, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    717c:	cmp	x2, #0x17
    7180:	movk	x3, #0xaaab
    7184:	umulh	x2, x2, x3
    7188:	lsr	x2, x2, #4
    718c:	b.ls	71e4 <elf64_xlatetom@@ELFUTILS_1.0+0x1984>  // b.plast
    7190:	add	x2, x2, x2, lsl #1
    7194:	add	x2, x0, x2, lsl #3
    7198:	ldr	x3, [x1]
    719c:	add	x0, x0, #0x18
    71a0:	add	x1, x1, #0x18
    71a4:	rev	x3, x3
    71a8:	stur	x3, [x0, #-24]
    71ac:	ldur	x3, [x1, #-16]
    71b0:	rev	x3, x3
    71b4:	stur	x3, [x0, #-16]
    71b8:	ldur	x3, [x1, #-12]
    71bc:	rev	x3, x3
    71c0:	stur	x3, [x0, #-12]
    71c4:	ldurh	w3, [x1, #-8]
    71c8:	rev16	w3, w3
    71cc:	sturh	w3, [x0, #-8]
    71d0:	ldurh	w3, [x1, #-6]
    71d4:	rev16	w3, w3
    71d8:	sturh	w3, [x0, #-6]
    71dc:	cmp	x2, x0
    71e0:	b.ne	7198 <elf64_xlatetom@@ELFUTILS_1.0+0x1938>  // b.any
    71e4:	ret
    71e8:	cmp	xzr, x2, lsr #2
    71ec:	lsr	x4, x2, #2
    71f0:	b.eq	729c <elf64_xlatetom@@ELFUTILS_1.0+0x1a3c>  // b.none
    71f4:	add	x3, x0, #0xf
    71f8:	sub	x5, x4, #0x1
    71fc:	sub	x3, x3, x1
    7200:	cmp	x3, #0x1e
    7204:	ccmp	x5, #0x3, #0x0, hi  // hi = pmore
    7208:	b.ls	72a0 <elf64_xlatetom@@ELFUTILS_1.0+0x1a40>  // b.plast
    720c:	lsr	x5, x2, #4
    7210:	and	x3, x2, #0xfffffffffffffff0
    7214:	mov	x2, #0x0                   	// #0
    7218:	ldr	q0, [x1, x2]
    721c:	rev16	v0.16b, v0.16b
    7220:	str	q0, [x0, x2]
    7224:	add	x2, x2, #0x10
    7228:	cmp	x3, x2
    722c:	b.ne	7218 <elf64_xlatetom@@ELFUTILS_1.0+0x19b8>  // b.any
    7230:	lsl	x2, x5, #2
    7234:	add	x5, x0, x3
    7238:	subs	x4, x4, x2
    723c:	add	x2, x1, x3
    7240:	b.eq	729c <elf64_xlatetom@@ELFUTILS_1.0+0x1a3c>  // b.none
    7244:	ldrh	w1, [x1, x3]
    7248:	cmp	x4, #0x1
    724c:	rev16	w1, w1
    7250:	strh	w1, [x0, x3]
    7254:	ldrh	w0, [x2, #2]
    7258:	rev16	w0, w0
    725c:	strh	w0, [x5, #2]
    7260:	b.eq	729c <elf64_xlatetom@@ELFUTILS_1.0+0x1a3c>  // b.none
    7264:	ldrh	w0, [x2, #4]
    7268:	cmp	x4, #0x2
    726c:	rev16	w0, w0
    7270:	strh	w0, [x5, #4]
    7274:	ldrh	w0, [x2, #6]
    7278:	rev16	w0, w0
    727c:	strh	w0, [x5, #6]
    7280:	b.eq	729c <elf64_xlatetom@@ELFUTILS_1.0+0x1a3c>  // b.none
    7284:	ldrh	w0, [x2, #8]
    7288:	rev16	w0, w0
    728c:	strh	w0, [x5, #8]
    7290:	ldrh	w0, [x2, #10]
    7294:	rev16	w0, w0
    7298:	strh	w0, [x5, #10]
    729c:	ret
    72a0:	add	x4, x0, x4, lsl #2
    72a4:	nop
    72a8:	ldrh	w2, [x1]
    72ac:	add	x0, x0, #0x4
    72b0:	add	x1, x1, #0x4
    72b4:	rev16	w2, w2
    72b8:	sturh	w2, [x0, #-4]
    72bc:	ldurh	w2, [x1, #-2]
    72c0:	rev16	w2, w2
    72c4:	sturh	w2, [x0, #-2]
    72c8:	cmp	x0, x4
    72cc:	b.ne	72a8 <elf64_xlatetom@@ELFUTILS_1.0+0x1a48>  // b.any
    72d0:	ret
    72d4:	nop
    72d8:	cmp	xzr, x2, lsr #4
    72dc:	lsr	x2, x2, #4
    72e0:	b.eq	7338 <elf64_xlatetom@@ELFUTILS_1.0+0x1ad8>  // b.none
    72e4:	add	x3, x0, x2, lsl #4
    72e8:	ldr	w2, [x1]
    72ec:	add	x0, x0, #0x10
    72f0:	add	x1, x1, #0x10
    72f4:	rev	w2, w2
    72f8:	stur	w2, [x0, #-16]
    72fc:	ldur	w2, [x1, #-12]
    7300:	rev	w2, w2
    7304:	stur	w2, [x0, #-12]
    7308:	ldur	w2, [x1, #-8]
    730c:	rev	w2, w2
    7310:	stur	w2, [x0, #-8]
    7314:	ldurb	w2, [x1, #-4]
    7318:	sturb	w2, [x0, #-4]
    731c:	ldurb	w2, [x1, #-3]
    7320:	sturb	w2, [x0, #-3]
    7324:	ldurh	w2, [x1, #-2]
    7328:	rev16	w2, w2
    732c:	sturh	w2, [x0, #-2]
    7330:	cmp	x0, x3
    7334:	b.ne	72e8 <elf64_xlatetom@@ELFUTILS_1.0+0x1a88>  // b.any
    7338:	ret
    733c:	nop
    7340:	lsr	x5, x2, #1
    7344:	cmp	x0, x1
    7348:	sub	x4, x5, #0x1
    734c:	b.cs	742c <elf64_xlatetom@@ELFUTILS_1.0+0x1bcc>  // b.hs, b.nlast
    7350:	cbz	x5, 7428 <elf64_xlatetom@@ELFUTILS_1.0+0x1bc8>
    7354:	add	x3, x0, #0xf
    7358:	sub	x3, x3, x1
    735c:	cmp	x3, #0x1e
    7360:	ccmp	x4, #0x6, #0x0, hi  // hi = pmore
    7364:	b.ls	7530 <elf64_xlatetom@@ELFUTILS_1.0+0x1cd0>  // b.plast
    7368:	lsr	x6, x2, #4
    736c:	and	x3, x2, #0xfffffffffffffff0
    7370:	mov	x2, #0x0                   	// #0
    7374:	nop
    7378:	ldr	q0, [x1, x2]
    737c:	rev16	v0.16b, v0.16b
    7380:	str	q0, [x0, x2]
    7384:	add	x2, x2, #0x10
    7388:	cmp	x2, x3
    738c:	b.ne	7378 <elf64_xlatetom@@ELFUTILS_1.0+0x1b18>  // b.any
    7390:	lsl	x3, x6, #3
    7394:	add	x6, x0, x2
    7398:	sub	x4, x4, x3
    739c:	cmp	x5, x3
    73a0:	add	x3, x1, x2
    73a4:	b.eq	7428 <elf64_xlatetom@@ELFUTILS_1.0+0x1bc8>  // b.none
    73a8:	ldrh	w1, [x1, x2]
    73ac:	rev16	w1, w1
    73b0:	strh	w1, [x0, x2]
    73b4:	cbz	x4, 7428 <elf64_xlatetom@@ELFUTILS_1.0+0x1bc8>
    73b8:	ldrh	w0, [x3, #2]
    73bc:	cmp	x4, #0x1
    73c0:	rev16	w0, w0
    73c4:	strh	w0, [x6, #2]
    73c8:	b.eq	7428 <elf64_xlatetom@@ELFUTILS_1.0+0x1bc8>  // b.none
    73cc:	ldrh	w0, [x3, #4]
    73d0:	cmp	x4, #0x2
    73d4:	rev16	w0, w0
    73d8:	strh	w0, [x6, #4]
    73dc:	b.eq	7428 <elf64_xlatetom@@ELFUTILS_1.0+0x1bc8>  // b.none
    73e0:	ldrh	w0, [x3, #6]
    73e4:	cmp	x4, #0x3
    73e8:	rev16	w0, w0
    73ec:	strh	w0, [x6, #6]
    73f0:	b.eq	7428 <elf64_xlatetom@@ELFUTILS_1.0+0x1bc8>  // b.none
    73f4:	ldrh	w0, [x3, #8]
    73f8:	cmp	x4, #0x4
    73fc:	rev16	w0, w0
    7400:	strh	w0, [x6, #8]
    7404:	b.eq	7428 <elf64_xlatetom@@ELFUTILS_1.0+0x1bc8>  // b.none
    7408:	ldrh	w0, [x3, #10]
    740c:	cmp	x4, #0x5
    7410:	rev16	w0, w0
    7414:	strh	w0, [x6, #10]
    7418:	b.eq	7428 <elf64_xlatetom@@ELFUTILS_1.0+0x1bc8>  // b.none
    741c:	ldrh	w0, [x3, #12]
    7420:	rev16	w0, w0
    7424:	strh	w0, [x6, #12]
    7428:	ret
    742c:	add	x6, x0, x2
    7430:	add	x7, x1, x2
    7434:	cbz	x5, 7428 <elf64_xlatetom@@ELFUTILS_1.0+0x1bc8>
    7438:	sub	x3, x2, #0x10
    743c:	add	x1, x1, x3
    7440:	add	x0, x0, x3
    7444:	cmp	x6, x1
    7448:	ccmp	x7, x0, #0x0, hi  // hi = pmore
    744c:	ccmp	x4, #0x6, #0x0, ls  // ls = plast
    7450:	b.ls	7554 <elf64_xlatetom@@ELFUTILS_1.0+0x1cf4>  // b.plast
    7454:	neg	x8, x2, lsr #4
    7458:	adrp	x3, 15000 <elf_compress_gnu@@ELFUTILS_1.7+0x1b8>
    745c:	lsr	x2, x2, #4
    7460:	lsl	x8, x8, #4
    7464:	ldr	q1, [x3, #2896]
    7468:	mov	x3, #0x0                   	// #0
    746c:	nop
    7470:	ldr	q0, [x1, x3]
    7474:	tbl	v0.16b, {v0.16b}, v1.16b
    7478:	rev16	v0.16b, v0.16b
    747c:	tbl	v0.16b, {v0.16b}, v1.16b
    7480:	str	q0, [x0, x3]
    7484:	sub	x3, x3, #0x10
    7488:	cmp	x3, x8
    748c:	b.ne	7470 <elf64_xlatetom@@ELFUTILS_1.0+0x1c10>  // b.any
    7490:	lsl	x0, x2, #3
    7494:	neg	x2, x2, lsl #4
    7498:	add	x6, x6, x2
    749c:	sub	x4, x4, x0
    74a0:	cmp	x5, x0
    74a4:	add	x2, x7, x2
    74a8:	b.eq	7428 <elf64_xlatetom@@ELFUTILS_1.0+0x1bc8>  // b.none
    74ac:	ldurh	w0, [x2, #-2]
    74b0:	rev16	w0, w0
    74b4:	sturh	w0, [x6, #-2]
    74b8:	cbz	x4, 7428 <elf64_xlatetom@@ELFUTILS_1.0+0x1bc8>
    74bc:	ldurh	w0, [x2, #-4]
    74c0:	cmp	x4, #0x1
    74c4:	rev16	w0, w0
    74c8:	sturh	w0, [x6, #-4]
    74cc:	b.eq	7428 <elf64_xlatetom@@ELFUTILS_1.0+0x1bc8>  // b.none
    74d0:	ldurh	w0, [x2, #-6]
    74d4:	cmp	x4, #0x2
    74d8:	rev16	w0, w0
    74dc:	sturh	w0, [x6, #-6]
    74e0:	b.eq	7428 <elf64_xlatetom@@ELFUTILS_1.0+0x1bc8>  // b.none
    74e4:	ldurh	w0, [x2, #-8]
    74e8:	cmp	x4, #0x3
    74ec:	rev16	w0, w0
    74f0:	sturh	w0, [x6, #-8]
    74f4:	b.eq	7428 <elf64_xlatetom@@ELFUTILS_1.0+0x1bc8>  // b.none
    74f8:	ldurh	w0, [x2, #-10]
    74fc:	cmp	x4, #0x4
    7500:	rev16	w0, w0
    7504:	sturh	w0, [x6, #-10]
    7508:	b.eq	7428 <elf64_xlatetom@@ELFUTILS_1.0+0x1bc8>  // b.none
    750c:	ldurh	w0, [x2, #-12]
    7510:	cmp	x4, #0x5
    7514:	rev16	w0, w0
    7518:	sturh	w0, [x6, #-12]
    751c:	b.eq	7428 <elf64_xlatetom@@ELFUTILS_1.0+0x1bc8>  // b.none
    7520:	ldurh	w0, [x2, #-14]
    7524:	rev16	w0, w0
    7528:	sturh	w0, [x6, #-14]
    752c:	ret
    7530:	lsl	x5, x5, #1
    7534:	mov	x2, #0x0                   	// #0
    7538:	ldrh	w3, [x1, x2]
    753c:	rev16	w3, w3
    7540:	strh	w3, [x0, x2]
    7544:	add	x2, x2, #0x2
    7548:	cmp	x2, x5
    754c:	b.ne	7538 <elf64_xlatetom@@ELFUTILS_1.0+0x1cd8>  // b.any
    7550:	ret
    7554:	mvn	x0, x5
    7558:	mov	x1, #0xfffffffffffffffe    	// #-2
    755c:	lsl	x0, x0, #1
    7560:	ldrh	w2, [x7, x1]
    7564:	rev16	w2, w2
    7568:	strh	w2, [x6, x1]
    756c:	sub	x1, x1, #0x2
    7570:	cmp	x1, x0
    7574:	b.ne	7560 <elf64_xlatetom@@ELFUTILS_1.0+0x1d00>  // b.any
    7578:	ret
    757c:	nop
    7580:	mov	x3, #0x4ec5                	// #20165
    7584:	cmp	x2, #0x33
    7588:	movk	x3, #0xc4ec, lsl #16
    758c:	movk	x3, #0xec4e, lsl #32
    7590:	movk	x3, #0x4ec4, lsl #48
    7594:	umulh	x2, x2, x3
    7598:	lsr	x2, x2, #4
    759c:	b.ls	7664 <elf64_xlatetom@@ELFUTILS_1.0+0x1e04>  // b.plast
    75a0:	add	x3, x2, x2, lsl #1
    75a4:	add	x3, x2, x3, lsl #2
    75a8:	add	x3, x0, x3, lsl #2
    75ac:	nop
    75b0:	ldp	x4, x5, [x1]
    75b4:	stp	x4, x5, [x0]
    75b8:	add	x0, x0, #0x34
    75bc:	ldrh	w2, [x1, #16]
    75c0:	add	x1, x1, #0x34
    75c4:	rev16	w2, w2
    75c8:	sturh	w2, [x0, #-36]
    75cc:	ldurh	w2, [x1, #-34]
    75d0:	rev16	w2, w2
    75d4:	sturh	w2, [x0, #-34]
    75d8:	ldur	w2, [x1, #-32]
    75dc:	rev	w2, w2
    75e0:	stur	w2, [x0, #-32]
    75e4:	ldur	w2, [x1, #-28]
    75e8:	rev	w2, w2
    75ec:	stur	w2, [x0, #-28]
    75f0:	ldur	w2, [x1, #-24]
    75f4:	rev	w2, w2
    75f8:	stur	w2, [x0, #-24]
    75fc:	ldur	w2, [x1, #-20]
    7600:	rev	w2, w2
    7604:	stur	w2, [x0, #-20]
    7608:	ldur	w2, [x1, #-16]
    760c:	rev	w2, w2
    7610:	stur	w2, [x0, #-16]
    7614:	ldurh	w2, [x1, #-12]
    7618:	rev16	w2, w2
    761c:	sturh	w2, [x0, #-12]
    7620:	ldurh	w2, [x1, #-10]
    7624:	rev16	w2, w2
    7628:	sturh	w2, [x0, #-10]
    762c:	ldurh	w2, [x1, #-8]
    7630:	rev16	w2, w2
    7634:	sturh	w2, [x0, #-8]
    7638:	ldurh	w2, [x1, #-6]
    763c:	rev16	w2, w2
    7640:	sturh	w2, [x0, #-6]
    7644:	ldurh	w2, [x1, #-4]
    7648:	rev16	w2, w2
    764c:	sturh	w2, [x0, #-4]
    7650:	ldurh	w2, [x1, #-2]
    7654:	rev16	w2, w2
    7658:	sturh	w2, [x0, #-2]
    765c:	cmp	x3, x0
    7660:	b.ne	75b0 <elf64_xlatetom@@ELFUTILS_1.0+0x1d50>  // b.any
    7664:	ret
    7668:	stp	x29, x30, [sp, #-48]!
    766c:	cmp	x2, #0xb
    7670:	mov	x29, sp
    7674:	stp	x19, x20, [sp, #16]
    7678:	mov	x20, x0
    767c:	mov	x19, x1
    7680:	stp	x21, x22, [sp, #32]
    7684:	mov	x21, x2
    7688:	b.hi	76a8 <elf64_xlatetom@@ELFUTILS_1.0+0x1e48>  // b.pmore
    768c:	cmp	x21, #0x0
    7690:	ccmp	x20, x19, #0x4, ne  // ne = any
    7694:	b.ne	77c8 <elf64_xlatetom@@ELFUTILS_1.0+0x1f68>  // b.any
    7698:	ldp	x19, x20, [sp, #16]
    769c:	ldp	x21, x22, [sp, #32]
    76a0:	ldp	x29, x30, [sp], #48
    76a4:	ret
    76a8:	cbnz	w3, 7750 <elf64_xlatetom@@ELFUTILS_1.0+0x1ef0>
    76ac:	mov	x3, x20
    76b0:	ldr	w0, [x19]
    76b4:	add	x4, x19, #0xc
    76b8:	rev	w0, w0
    76bc:	mov	x1, x4
    76c0:	ldr	w2, [x3], #12
    76c4:	str	w0, [x20]
    76c8:	add	x2, x2, #0x13
    76cc:	mov	x0, x3
    76d0:	ldr	w5, [x19, #4]
    76d4:	and	x2, x2, #0xfffffff8
    76d8:	cmp	x2, #0xb
    76dc:	rev	w5, w5
    76e0:	str	w5, [x20, #4]
    76e4:	ccmp	x2, x21, #0x2, hi  // hi = pmore
    76e8:	ldr	w5, [x19, #8]
    76ec:	rev	w5, w5
    76f0:	str	w5, [x20, #8]
    76f4:	b.hi	77e4 <elf64_xlatetom@@ELFUTILS_1.0+0x1f84>  // b.pmore
    76f8:	ldr	w22, [x20, #4]
    76fc:	add	x22, x22, #0x7
    7700:	add	x2, x22, x2
    7704:	and	x22, x2, #0xfffffff8
    7708:	cmp	x22, #0xb
    770c:	add	x19, x19, x22
    7710:	ccmp	x22, x21, #0x2, hi  // hi = pmore
    7714:	b.hi	77f4 <elf64_xlatetom@@ELFUTILS_1.0+0x1f94>  // b.pmore
    7718:	sub	x21, x21, x22
    771c:	cmp	x3, x4
    7720:	b.eq	772c <elf64_xlatetom@@ELFUTILS_1.0+0x1ecc>  // b.none
    7724:	sub	x2, x22, #0xc
    7728:	bl	3020 <memcpy@plt>
    772c:	cmp	x21, #0xb
    7730:	add	x20, x20, x22
    7734:	b.ls	768c <elf64_xlatetom@@ELFUTILS_1.0+0x1e2c>  // b.plast
    7738:	b	76ac <elf64_xlatetom@@ELFUTILS_1.0+0x1e4c>
    773c:	sub	x2, x22, #0xc
    7740:	bl	3020 <memcpy@plt>
    7744:	cmp	x21, #0xb
    7748:	add	x20, x20, x22
    774c:	b.ls	768c <elf64_xlatetom@@ELFUTILS_1.0+0x1e2c>  // b.plast
    7750:	ldr	w2, [x19]
    7754:	add	x4, x19, #0xc
    7758:	add	x3, x20, #0xc
    775c:	mov	x1, x4
    7760:	rev	w0, w2
    7764:	str	w0, [x20]
    7768:	add	x2, x2, #0x13
    776c:	mov	x0, x3
    7770:	ldr	w5, [x19, #4]
    7774:	and	x2, x2, #0xfffffff8
    7778:	cmp	x2, x21
    777c:	rev	w5, w5
    7780:	str	w5, [x20, #4]
    7784:	ccmp	x2, #0xb, #0x0, ls  // ls = plast
    7788:	ldr	w5, [x19, #8]
    778c:	rev	w5, w5
    7790:	str	w5, [x20, #8]
    7794:	b.ls	77e4 <elf64_xlatetom@@ELFUTILS_1.0+0x1f84>  // b.plast
    7798:	ldr	w22, [x19, #4]
    779c:	add	x22, x22, #0x7
    77a0:	add	x2, x22, x2
    77a4:	and	x22, x2, #0xfffffff8
    77a8:	cmp	x21, x22
    77ac:	add	x19, x19, x22
    77b0:	ccmp	x22, #0xb, #0x0, cs  // cs = hs, nlast
    77b4:	b.ls	77f4 <elf64_xlatetom@@ELFUTILS_1.0+0x1f94>  // b.plast
    77b8:	sub	x21, x21, x22
    77bc:	cmp	x4, x3
    77c0:	b.ne	773c <elf64_xlatetom@@ELFUTILS_1.0+0x1edc>  // b.any
    77c4:	b	7744 <elf64_xlatetom@@ELFUTILS_1.0+0x1ee4>
    77c8:	mov	x2, x21
    77cc:	mov	x1, x19
    77d0:	mov	x0, x20
    77d4:	ldp	x19, x20, [sp, #16]
    77d8:	ldp	x21, x22, [sp, #32]
    77dc:	ldp	x29, x30, [sp], #48
    77e0:	b	3020 <memcpy@plt>
    77e4:	sub	x21, x21, #0xc
    77e8:	mov	x19, x4
    77ec:	mov	x20, x3
    77f0:	b	768c <elf64_xlatetom@@ELFUTILS_1.0+0x1e2c>
    77f4:	mov	x20, x3
    77f8:	mov	x19, x4
    77fc:	sub	x21, x21, #0xc
    7800:	b	768c <elf64_xlatetom@@ELFUTILS_1.0+0x1e2c>
    7804:	nop
    7808:	cbz	x2, 7880 <elf64_xlatetom@@ELFUTILS_1.0+0x2020>
    780c:	stp	x29, x30, [sp, #-48]!
    7810:	cmp	x0, x1
    7814:	mov	x29, sp
    7818:	stp	x19, x20, [sp, #16]
    781c:	mov	x20, x0
    7820:	mov	x19, x2
    7824:	str	x21, [sp, #32]
    7828:	mov	x21, x1
    782c:	b.eq	7834 <elf64_xlatetom@@ELFUTILS_1.0+0x1fd4>  // b.none
    7830:	bl	3030 <memmove@plt>
    7834:	cmp	x19, #0xb
    7838:	b.hi	784c <elf64_xlatetom@@ELFUTILS_1.0+0x1fec>  // b.pmore
    783c:	ldp	x19, x20, [sp, #16]
    7840:	ldr	x21, [sp, #32]
    7844:	ldp	x29, x30, [sp], #48
    7848:	ret
    784c:	ldr	w0, [x21]
    7850:	rev	w0, w0
    7854:	str	w0, [x20]
    7858:	ldr	w0, [x21, #4]
    785c:	rev	w0, w0
    7860:	str	w0, [x20, #4]
    7864:	ldr	w0, [x21, #8]
    7868:	ldr	x21, [sp, #32]
    786c:	rev	w0, w0
    7870:	str	w0, [x20, #8]
    7874:	ldp	x19, x20, [sp, #16]
    7878:	ldp	x29, x30, [sp], #48
    787c:	ret
    7880:	ret
    7884:	nop
    7888:	cbz	x2, 790c <elf64_xlatetom@@ELFUTILS_1.0+0x20ac>
    788c:	stp	x29, x30, [sp, #-48]!
    7890:	cmp	x0, x1
    7894:	mov	x29, sp
    7898:	stp	x19, x20, [sp, #16]
    789c:	mov	x20, x0
    78a0:	mov	x19, x2
    78a4:	str	x21, [sp, #32]
    78a8:	mov	x21, x1
    78ac:	b.eq	78b4 <elf64_xlatetom@@ELFUTILS_1.0+0x2054>  // b.none
    78b0:	bl	3030 <memmove@plt>
    78b4:	cmp	x19, #0x17
    78b8:	b.hi	78cc <elf64_xlatetom@@ELFUTILS_1.0+0x206c>  // b.pmore
    78bc:	ldp	x19, x20, [sp, #16]
    78c0:	ldr	x21, [sp, #32]
    78c4:	ldp	x29, x30, [sp], #48
    78c8:	ret
    78cc:	ldr	w0, [x21]
    78d0:	rev	w0, w0
    78d4:	str	w0, [x20]
    78d8:	ldr	w0, [x21, #4]
    78dc:	rev	w0, w0
    78e0:	str	w0, [x20, #4]
    78e4:	ldr	x0, [x21, #8]
    78e8:	rev	x0, x0
    78ec:	str	x0, [x20, #8]
    78f0:	ldr	x0, [x21, #16]
    78f4:	ldr	x21, [sp, #32]
    78f8:	rev	x0, x0
    78fc:	str	x0, [x20, #16]
    7900:	ldp	x19, x20, [sp, #16]
    7904:	ldp	x29, x30, [sp], #48
    7908:	ret
    790c:	ret
    7910:	cbnz	x2, 7918 <elf64_xlatetom@@ELFUTILS_1.0+0x20b8>
    7914:	ret
    7918:	stp	x29, x30, [sp, #-48]!
    791c:	mov	x29, sp
    7920:	stp	x19, x20, [sp, #16]
    7924:	mov	x20, x1
    7928:	mov	x19, x2
    792c:	stp	x21, x22, [sp, #32]
    7930:	mov	w22, w3
    7934:	mov	x21, x0
    7938:	bl	3030 <memmove@plt>
    793c:	mov	x7, #0x0                   	// #0
    7940:	sub	x0, x19, x7
    7944:	cmp	x0, #0xf
    7948:	b.ls	79f4 <elf64_xlatetom@@ELFUTILS_1.0+0x2194>  // b.plast
    794c:	add	x8, x20, x7
    7950:	add	x9, x21, x7
    7954:	ldr	w4, [x8, #8]
    7958:	cbnz	w22, 7a04 <elf64_xlatetom@@ELFUTILS_1.0+0x21a4>
    795c:	ldrh	w3, [x20, x7]
    7960:	rev	w5, w4
    7964:	ldrh	w2, [x8, #2]
    7968:	ldr	w1, [x8, #4]
    796c:	rev16	w3, w3
    7970:	ldr	w0, [x8, #12]
    7974:	rev16	w2, w2
    7978:	strh	w3, [x21, x7]
    797c:	rev	w1, w1
    7980:	rev	w0, w0
    7984:	add	x4, x7, w5, uxtw
    7988:	strh	w2, [x9, #2]
    798c:	stp	w1, w5, [x9, #4]
    7990:	str	w0, [x9, #12]
    7994:	b	79e4 <elf64_xlatetom@@ELFUTILS_1.0+0x2184>
    7998:	cmp	x1, #0xf
    799c:	b.ls	79f4 <elf64_xlatetom@@ELFUTILS_1.0+0x2194>  // b.plast
    79a0:	ldr	d0, [x5, #8]
    79a4:	ldr	w3, [x20, x4]
    79a8:	ldr	w2, [x5, #12]
    79ac:	rev32	v0.8b, v0.8b
    79b0:	ldrh	w1, [x5, #6]
    79b4:	ldrh	w6, [x5, #4]
    79b8:	rev	w3, w3
    79bc:	str	w3, [x21, x4]
    79c0:	rev	w2, w2
    79c4:	add	x4, x4, x2
    79c8:	rev16	w1, w1
    79cc:	str	d0, [x0, #8]
    79d0:	rev16	w6, w6
    79d4:	ldr	w2, [x5, #12]
    79d8:	strh	w6, [x0, #4]
    79dc:	strh	w1, [x0, #6]
    79e0:	cbz	w2, 7a74 <elf64_xlatetom@@ELFUTILS_1.0+0x2214>
    79e4:	add	x5, x20, x4
    79e8:	add	x0, x21, x4
    79ec:	subs	x1, x19, x4
    79f0:	b.cs	7998 <elf64_xlatetom@@ELFUTILS_1.0+0x2138>  // b.hs, b.nlast
    79f4:	ldp	x19, x20, [sp, #16]
    79f8:	ldp	x21, x22, [sp, #32]
    79fc:	ldp	x29, x30, [sp], #48
    7a00:	ret
    7a04:	add	x4, x7, w4, uxtw
    7a08:	b	7a54 <elf64_xlatetom@@ELFUTILS_1.0+0x21f4>
    7a0c:	cmp	x0, #0xf
    7a10:	b.ls	79f4 <elf64_xlatetom@@ELFUTILS_1.0+0x2194>  // b.plast
    7a14:	ldr	d0, [x5, #8]
    7a18:	ldrh	w2, [x5, #4]
    7a1c:	ldr	w6, [x20, x4]
    7a20:	rev32	v0.8b, v0.8b
    7a24:	rev16	w2, w2
    7a28:	ldrh	w0, [x5, #6]
    7a2c:	rev	w6, w6
    7a30:	ldr	w3, [x5, #12]
    7a34:	strh	w2, [x1, #4]
    7a38:	rev16	w0, w0
    7a3c:	str	d0, [x1, #8]
    7a40:	add	x4, x4, x3
    7a44:	ldr	w2, [x5, #12]
    7a48:	str	w6, [x1]
    7a4c:	strh	w0, [x1, #6]
    7a50:	cbz	w2, 7a90 <elf64_xlatetom@@ELFUTILS_1.0+0x2230>
    7a54:	add	x5, x20, x4
    7a58:	add	x1, x21, x4
    7a5c:	subs	x0, x19, x4
    7a60:	b.cs	7a0c <elf64_xlatetom@@ELFUTILS_1.0+0x21ac>  // b.hs, b.nlast
    7a64:	ldp	x19, x20, [sp, #16]
    7a68:	ldp	x21, x22, [sp, #32]
    7a6c:	ldp	x29, x30, [sp], #48
    7a70:	ret
    7a74:	ldr	w0, [x8, #12]
    7a78:	ldr	w1, [x9, #12]
    7a7c:	cmp	w0, #0x0
    7a80:	add	x7, x7, x1
    7a84:	ccmp	x19, x7, #0x0, ne  // ne = any
    7a88:	b.cs	7940 <elf64_xlatetom@@ELFUTILS_1.0+0x20e0>  // b.hs, b.nlast
    7a8c:	b	79f4 <elf64_xlatetom@@ELFUTILS_1.0+0x2194>
    7a90:	ldur	d0, [x8, #4]
    7a94:	ldr	w2, [x8, #12]
    7a98:	ldrh	w1, [x8]
    7a9c:	rev32	v0.8b, v0.8b
    7aa0:	ldrh	w0, [x8, #2]
    7aa4:	rev	w3, w2
    7aa8:	str	w3, [x9, #12]
    7aac:	rev16	w1, w1
    7ab0:	strh	w1, [x9]
    7ab4:	rev16	w0, w0
    7ab8:	add	x7, x7, w2, uxtw
    7abc:	stur	d0, [x9, #4]
    7ac0:	ldr	w1, [x8, #12]
    7ac4:	strh	w0, [x9, #2]
    7ac8:	cmp	w1, #0x0
    7acc:	ccmp	x19, x7, #0x0, ne  // ne = any
    7ad0:	b.cs	7940 <elf64_xlatetom@@ELFUTILS_1.0+0x20e0>  // b.hs, b.nlast
    7ad4:	b	79f4 <elf64_xlatetom@@ELFUTILS_1.0+0x2194>
    7ad8:	cbnz	x2, 7ae0 <elf64_xlatetom@@ELFUTILS_1.0+0x2280>
    7adc:	ret
    7ae0:	stp	x29, x30, [sp, #-48]!
    7ae4:	mov	x29, sp
    7ae8:	stp	x19, x20, [sp, #16]
    7aec:	mov	x20, x1
    7af0:	mov	x19, x2
    7af4:	stp	x21, x22, [sp, #32]
    7af8:	mov	w22, w3
    7afc:	mov	x21, x0
    7b00:	bl	3030 <memmove@plt>
    7b04:	mov	x7, #0x0                   	// #0
    7b08:	sub	x0, x19, x7
    7b0c:	cmp	x0, #0x13
    7b10:	b.ls	7b8c <elf64_xlatetom@@ELFUTILS_1.0+0x232c>  // b.plast
    7b14:	add	x8, x20, x7
    7b18:	add	x9, x21, x7
    7b1c:	ldr	w4, [x8, #12]
    7b20:	cbnz	w22, 7b9c <elf64_xlatetom@@ELFUTILS_1.0+0x233c>
    7b24:	ldr	d0, [x20, x7]
    7b28:	rev	w4, w4
    7b2c:	ldr	w1, [x8, #8]
    7b30:	ldr	w0, [x8, #16]
    7b34:	add	x5, x7, w4, uxtw
    7b38:	rev16	v0.8b, v0.8b
    7b3c:	rev	w1, w1
    7b40:	rev	w0, w0
    7b44:	str	d0, [x21, x7]
    7b48:	stp	w1, w4, [x9, #8]
    7b4c:	str	w0, [x9, #16]
    7b50:	b	7b7c <elf64_xlatetom@@ELFUTILS_1.0+0x231c>
    7b54:	cmp	x2, #0x7
    7b58:	b.ls	7b8c <elf64_xlatetom@@ELFUTILS_1.0+0x232c>  // b.plast
    7b5c:	ldr	d0, [x20, x5]
    7b60:	ldr	w2, [x4, #4]
    7b64:	rev32	v0.8b, v0.8b
    7b68:	rev	w2, w2
    7b6c:	add	x5, x5, x2
    7b70:	str	d0, [x6]
    7b74:	ldr	w2, [x4, #4]
    7b78:	cbz	w2, 7be8 <elf64_xlatetom@@ELFUTILS_1.0+0x2388>
    7b7c:	add	x4, x20, x5
    7b80:	add	x6, x21, x5
    7b84:	subs	x2, x19, x5
    7b88:	b.cs	7b54 <elf64_xlatetom@@ELFUTILS_1.0+0x22f4>  // b.hs, b.nlast
    7b8c:	ldp	x19, x20, [sp, #16]
    7b90:	ldp	x21, x22, [sp, #32]
    7b94:	ldp	x29, x30, [sp], #48
    7b98:	ret
    7b9c:	add	x4, x7, w4, uxtw
    7ba0:	b	7bc8 <elf64_xlatetom@@ELFUTILS_1.0+0x2368>
    7ba4:	cmp	x5, #0x7
    7ba8:	b.ls	7b8c <elf64_xlatetom@@ELFUTILS_1.0+0x232c>  // b.plast
    7bac:	ldr	d0, [x20, x4]
    7bb0:	ldr	w5, [x2, #4]
    7bb4:	rev32	v0.8b, v0.8b
    7bb8:	add	x4, x4, x5
    7bbc:	str	d0, [x6]
    7bc0:	ldr	w2, [x2, #4]
    7bc4:	cbz	w2, 7c04 <elf64_xlatetom@@ELFUTILS_1.0+0x23a4>
    7bc8:	add	x2, x20, x4
    7bcc:	add	x6, x21, x4
    7bd0:	subs	x5, x19, x4
    7bd4:	b.cs	7ba4 <elf64_xlatetom@@ELFUTILS_1.0+0x2344>  // b.hs, b.nlast
    7bd8:	ldp	x19, x20, [sp, #16]
    7bdc:	ldp	x21, x22, [sp, #32]
    7be0:	ldp	x29, x30, [sp], #48
    7be4:	ret
    7be8:	ldr	w0, [x8, #16]
    7bec:	ldr	w1, [x9, #16]
    7bf0:	cmp	w0, #0x0
    7bf4:	add	x7, x7, x1
    7bf8:	ccmp	x19, x7, #0x0, ne  // ne = any
    7bfc:	b.cs	7b08 <elf64_xlatetom@@ELFUTILS_1.0+0x22a8>  // b.hs, b.nlast
    7c00:	b	7b8c <elf64_xlatetom@@ELFUTILS_1.0+0x232c>
    7c04:	ldp	d0, d1, [x8]
    7c08:	ldr	w0, [x8, #16]
    7c0c:	rev32	v1.8b, v1.8b
    7c10:	rev	w1, w0
    7c14:	rev16	v0.8b, v0.8b
    7c18:	str	w1, [x9, #16]
    7c1c:	add	x7, x7, w0, uxtw
    7c20:	str	d1, [x9, #8]
    7c24:	ldr	w0, [x8, #16]
    7c28:	str	d0, [x9]
    7c2c:	cmp	w0, #0x0
    7c30:	ccmp	x19, x7, #0x0, ne  // ne = any
    7c34:	b.cs	7b08 <elf64_xlatetom@@ELFUTILS_1.0+0x22a8>  // b.hs, b.nlast
    7c38:	b	7b8c <elf64_xlatetom@@ELFUTILS_1.0+0x232c>
    7c3c:	nop
    7c40:	lsr	x5, x2, #1
    7c44:	cmp	x0, x1
    7c48:	sub	x4, x5, #0x1
    7c4c:	b.cs	7d2c <elf64_xlatetom@@ELFUTILS_1.0+0x24cc>  // b.hs, b.nlast
    7c50:	cbz	x5, 7d28 <elf64_xlatetom@@ELFUTILS_1.0+0x24c8>
    7c54:	add	x3, x0, #0xf
    7c58:	sub	x3, x3, x1
    7c5c:	cmp	x3, #0x1e
    7c60:	ccmp	x4, #0x6, #0x0, hi  // hi = pmore
    7c64:	b.ls	7e30 <elf64_xlatetom@@ELFUTILS_1.0+0x25d0>  // b.plast
    7c68:	lsr	x6, x2, #4
    7c6c:	and	x3, x2, #0xfffffffffffffff0
    7c70:	mov	x2, #0x0                   	// #0
    7c74:	nop
    7c78:	ldr	q0, [x1, x2]
    7c7c:	rev16	v0.16b, v0.16b
    7c80:	str	q0, [x0, x2]
    7c84:	add	x2, x2, #0x10
    7c88:	cmp	x2, x3
    7c8c:	b.ne	7c78 <elf64_xlatetom@@ELFUTILS_1.0+0x2418>  // b.any
    7c90:	lsl	x3, x6, #3
    7c94:	add	x6, x1, x2
    7c98:	sub	x4, x4, x3
    7c9c:	cmp	x5, x3
    7ca0:	add	x3, x0, x2
    7ca4:	b.eq	7d28 <elf64_xlatetom@@ELFUTILS_1.0+0x24c8>  // b.none
    7ca8:	ldrh	w1, [x1, x2]
    7cac:	rev16	w1, w1
    7cb0:	strh	w1, [x0, x2]
    7cb4:	cbz	x4, 7d28 <elf64_xlatetom@@ELFUTILS_1.0+0x24c8>
    7cb8:	ldrh	w0, [x6, #2]
    7cbc:	cmp	x4, #0x1
    7cc0:	rev16	w0, w0
    7cc4:	strh	w0, [x3, #2]
    7cc8:	b.eq	7d28 <elf64_xlatetom@@ELFUTILS_1.0+0x24c8>  // b.none
    7ccc:	ldrh	w0, [x6, #4]
    7cd0:	cmp	x4, #0x2
    7cd4:	rev16	w0, w0
    7cd8:	strh	w0, [x3, #4]
    7cdc:	b.eq	7d28 <elf64_xlatetom@@ELFUTILS_1.0+0x24c8>  // b.none
    7ce0:	ldrh	w0, [x6, #6]
    7ce4:	cmp	x4, #0x3
    7ce8:	rev16	w0, w0
    7cec:	strh	w0, [x3, #6]
    7cf0:	b.eq	7d28 <elf64_xlatetom@@ELFUTILS_1.0+0x24c8>  // b.none
    7cf4:	ldrh	w0, [x6, #8]
    7cf8:	cmp	x4, #0x4
    7cfc:	rev16	w0, w0
    7d00:	strh	w0, [x3, #8]
    7d04:	b.eq	7d28 <elf64_xlatetom@@ELFUTILS_1.0+0x24c8>  // b.none
    7d08:	ldrh	w0, [x6, #10]
    7d0c:	cmp	x4, #0x5
    7d10:	rev16	w0, w0
    7d14:	strh	w0, [x3, #10]
    7d18:	b.eq	7d28 <elf64_xlatetom@@ELFUTILS_1.0+0x24c8>  // b.none
    7d1c:	ldrh	w0, [x6, #12]
    7d20:	rev16	w0, w0
    7d24:	strh	w0, [x3, #12]
    7d28:	ret
    7d2c:	add	x6, x0, x2
    7d30:	add	x7, x1, x2
    7d34:	cbz	x5, 7d28 <elf64_xlatetom@@ELFUTILS_1.0+0x24c8>
    7d38:	sub	x3, x2, #0x10
    7d3c:	add	x1, x1, x3
    7d40:	add	x0, x0, x3
    7d44:	cmp	x6, x1
    7d48:	ccmp	x7, x0, #0x0, hi  // hi = pmore
    7d4c:	ccmp	x4, #0x6, #0x0, ls  // ls = plast
    7d50:	b.ls	7e54 <elf64_xlatetom@@ELFUTILS_1.0+0x25f4>  // b.plast
    7d54:	neg	x8, x2, lsr #4
    7d58:	adrp	x3, 15000 <elf_compress_gnu@@ELFUTILS_1.7+0x1b8>
    7d5c:	lsr	x2, x2, #4
    7d60:	lsl	x8, x8, #4
    7d64:	ldr	q1, [x3, #2896]
    7d68:	mov	x3, #0x0                   	// #0
    7d6c:	nop
    7d70:	ldr	q0, [x1, x3]
    7d74:	tbl	v0.16b, {v0.16b}, v1.16b
    7d78:	rev16	v0.16b, v0.16b
    7d7c:	tbl	v0.16b, {v0.16b}, v1.16b
    7d80:	str	q0, [x0, x3]
    7d84:	sub	x3, x3, #0x10
    7d88:	cmp	x3, x8
    7d8c:	b.ne	7d70 <elf64_xlatetom@@ELFUTILS_1.0+0x2510>  // b.any
    7d90:	lsl	x0, x2, #3
    7d94:	neg	x2, x2, lsl #4
    7d98:	add	x7, x7, x2
    7d9c:	sub	x4, x4, x0
    7da0:	cmp	x5, x0
    7da4:	add	x2, x6, x2
    7da8:	b.eq	7d28 <elf64_xlatetom@@ELFUTILS_1.0+0x24c8>  // b.none
    7dac:	ldurh	w0, [x7, #-2]
    7db0:	rev16	w0, w0
    7db4:	sturh	w0, [x2, #-2]
    7db8:	cbz	x4, 7d28 <elf64_xlatetom@@ELFUTILS_1.0+0x24c8>
    7dbc:	ldurh	w0, [x7, #-4]
    7dc0:	cmp	x4, #0x1
    7dc4:	rev16	w0, w0
    7dc8:	sturh	w0, [x2, #-4]
    7dcc:	b.eq	7d28 <elf64_xlatetom@@ELFUTILS_1.0+0x24c8>  // b.none
    7dd0:	ldurh	w0, [x7, #-6]
    7dd4:	cmp	x4, #0x2
    7dd8:	rev16	w0, w0
    7ddc:	sturh	w0, [x2, #-6]
    7de0:	b.eq	7d28 <elf64_xlatetom@@ELFUTILS_1.0+0x24c8>  // b.none
    7de4:	ldurh	w0, [x7, #-8]
    7de8:	cmp	x4, #0x3
    7dec:	rev16	w0, w0
    7df0:	sturh	w0, [x2, #-8]
    7df4:	b.eq	7d28 <elf64_xlatetom@@ELFUTILS_1.0+0x24c8>  // b.none
    7df8:	ldurh	w0, [x7, #-10]
    7dfc:	cmp	x4, #0x4
    7e00:	rev16	w0, w0
    7e04:	sturh	w0, [x2, #-10]
    7e08:	b.eq	7d28 <elf64_xlatetom@@ELFUTILS_1.0+0x24c8>  // b.none
    7e0c:	ldurh	w0, [x7, #-12]
    7e10:	cmp	x4, #0x5
    7e14:	rev16	w0, w0
    7e18:	sturh	w0, [x2, #-12]
    7e1c:	b.eq	7d28 <elf64_xlatetom@@ELFUTILS_1.0+0x24c8>  // b.none
    7e20:	ldurh	w0, [x7, #-14]
    7e24:	rev16	w0, w0
    7e28:	sturh	w0, [x2, #-14]
    7e2c:	ret
    7e30:	lsl	x5, x5, #1
    7e34:	mov	x2, #0x0                   	// #0
    7e38:	ldrh	w3, [x1, x2]
    7e3c:	rev16	w3, w3
    7e40:	strh	w3, [x0, x2]
    7e44:	add	x2, x2, #0x2
    7e48:	cmp	x2, x5
    7e4c:	b.ne	7e38 <elf64_xlatetom@@ELFUTILS_1.0+0x25d8>  // b.any
    7e50:	ret
    7e54:	mvn	x0, x5
    7e58:	mov	x1, #0xfffffffffffffffe    	// #-2
    7e5c:	lsl	x0, x0, #1
    7e60:	ldrh	w2, [x7, x1]
    7e64:	rev16	w2, w2
    7e68:	strh	w2, [x6, x1]
    7e6c:	sub	x1, x1, #0x2
    7e70:	cmp	x1, x0
    7e74:	b.ne	7e60 <elf64_xlatetom@@ELFUTILS_1.0+0x2600>  // b.any
    7e78:	ret
    7e7c:	nop
    7e80:	lsr	x5, x2, #2
    7e84:	cmp	x0, x1
    7e88:	sub	x4, x5, #0x1
    7e8c:	b.cs	7f1c <elf64_xlatetom@@ELFUTILS_1.0+0x26bc>  // b.hs, b.nlast
    7e90:	cbz	x5, 7f18 <elf64_xlatetom@@ELFUTILS_1.0+0x26b8>
    7e94:	add	x3, x0, #0xf
    7e98:	sub	x3, x3, x1
    7e9c:	cmp	x3, #0x1e
    7ea0:	ccmp	x4, #0x5, #0x0, hi  // hi = pmore
    7ea4:	b.ls	7ffc <elf64_xlatetom@@ELFUTILS_1.0+0x279c>  // b.plast
    7ea8:	lsr	x6, x2, #4
    7eac:	and	x3, x2, #0xfffffffffffffff0
    7eb0:	mov	x2, #0x0                   	// #0
    7eb4:	nop
    7eb8:	ldr	q0, [x1, x2]
    7ebc:	rev32	v0.16b, v0.16b
    7ec0:	str	q0, [x0, x2]
    7ec4:	add	x2, x2, #0x10
    7ec8:	cmp	x2, x3
    7ecc:	b.ne	7eb8 <elf64_xlatetom@@ELFUTILS_1.0+0x2658>  // b.any
    7ed0:	lsl	x3, x6, #2
    7ed4:	add	x6, x1, x2
    7ed8:	sub	x4, x4, x3
    7edc:	cmp	x5, x3
    7ee0:	add	x3, x0, x2
    7ee4:	b.eq	7f18 <elf64_xlatetom@@ELFUTILS_1.0+0x26b8>  // b.none
    7ee8:	ldr	w1, [x1, x2]
    7eec:	rev	w1, w1
    7ef0:	str	w1, [x0, x2]
    7ef4:	cbz	x4, 7f18 <elf64_xlatetom@@ELFUTILS_1.0+0x26b8>
    7ef8:	ldr	w0, [x6, #4]
    7efc:	cmp	x4, #0x1
    7f00:	rev	w0, w0
    7f04:	str	w0, [x3, #4]
    7f08:	b.eq	7f18 <elf64_xlatetom@@ELFUTILS_1.0+0x26b8>  // b.none
    7f0c:	ldr	w0, [x6, #8]
    7f10:	rev	w0, w0
    7f14:	str	w0, [x3, #8]
    7f18:	ret
    7f1c:	add	x6, x0, x2
    7f20:	add	x7, x1, x2
    7f24:	cbz	x5, 7f18 <elf64_xlatetom@@ELFUTILS_1.0+0x26b8>
    7f28:	sub	x3, x2, #0x10
    7f2c:	add	x1, x1, x3
    7f30:	add	x0, x0, x3
    7f34:	cmp	x6, x1
    7f38:	ccmp	x7, x0, #0x0, hi  // hi = pmore
    7f3c:	ccmp	x4, #0x5, #0x0, ls  // ls = plast
    7f40:	b.ls	7fd0 <elf64_xlatetom@@ELFUTILS_1.0+0x2770>  // b.plast
    7f44:	neg	x8, x2, lsr #4
    7f48:	adrp	x3, 15000 <elf_compress_gnu@@ELFUTILS_1.7+0x1b8>
    7f4c:	lsr	x2, x2, #4
    7f50:	lsl	x8, x8, #4
    7f54:	ldr	q1, [x3, #2832]
    7f58:	mov	x3, #0x0                   	// #0
    7f5c:	nop
    7f60:	ldr	q0, [x1, x3]
    7f64:	tbl	v0.16b, {v0.16b}, v1.16b
    7f68:	rev32	v0.16b, v0.16b
    7f6c:	tbl	v0.16b, {v0.16b}, v1.16b
    7f70:	str	q0, [x0, x3]
    7f74:	sub	x3, x3, #0x10
    7f78:	cmp	x3, x8
    7f7c:	b.ne	7f60 <elf64_xlatetom@@ELFUTILS_1.0+0x2700>  // b.any
    7f80:	lsl	x0, x2, #2
    7f84:	neg	x2, x2, lsl #4
    7f88:	add	x7, x7, x2
    7f8c:	sub	x4, x4, x0
    7f90:	cmp	x5, x0
    7f94:	add	x2, x6, x2
    7f98:	b.eq	7f18 <elf64_xlatetom@@ELFUTILS_1.0+0x26b8>  // b.none
    7f9c:	ldur	w0, [x7, #-4]
    7fa0:	rev	w0, w0
    7fa4:	stur	w0, [x2, #-4]
    7fa8:	cbz	x4, 7f18 <elf64_xlatetom@@ELFUTILS_1.0+0x26b8>
    7fac:	ldur	w0, [x7, #-8]
    7fb0:	cmp	x4, #0x1
    7fb4:	rev	w0, w0
    7fb8:	stur	w0, [x2, #-8]
    7fbc:	b.eq	7f18 <elf64_xlatetom@@ELFUTILS_1.0+0x26b8>  // b.none
    7fc0:	ldur	w0, [x7, #-12]
    7fc4:	rev	w0, w0
    7fc8:	stur	w0, [x2, #-12]
    7fcc:	ret
    7fd0:	neg	x5, x5, lsl #2
    7fd4:	add	x7, x7, x5
    7fd8:	add	x5, x6, x5
    7fdc:	nop
    7fe0:	ldr	w0, [x7, x4, lsl #2]
    7fe4:	rev	w0, w0
    7fe8:	str	w0, [x5, x4, lsl #2]
    7fec:	sub	x4, x4, #0x1
    7ff0:	cmn	x4, #0x1
    7ff4:	b.ne	7fe0 <elf64_xlatetom@@ELFUTILS_1.0+0x2780>  // b.any
    7ff8:	ret
    7ffc:	lsl	x5, x5, #2
    8000:	mov	x2, #0x0                   	// #0
    8004:	nop
    8008:	ldr	w3, [x1, x2]
    800c:	rev	w3, w3
    8010:	str	w3, [x0, x2]
    8014:	add	x2, x2, #0x4
    8018:	cmp	x2, x5
    801c:	b.ne	8008 <elf64_xlatetom@@ELFUTILS_1.0+0x27a8>  // b.any
    8020:	ret
    8024:	nop
    8028:	lsr	x4, x2, #3
    802c:	cmp	x0, x1
    8030:	sub	x3, x4, #0x1
    8034:	b.cs	8090 <elf64_xlatetom@@ELFUTILS_1.0+0x2830>  // b.hs, b.nlast
    8038:	cbz	x4, 808c <elf64_xlatetom@@ELFUTILS_1.0+0x282c>
    803c:	add	x5, x0, #0xf
    8040:	sub	x5, x5, x1
    8044:	cmp	x5, #0x1e
    8048:	ccmp	x3, #0x6, #0x0, hi  // hi = pmore
    804c:	b.ls	8134 <elf64_xlatetom@@ELFUTILS_1.0+0x28d4>  // b.plast
    8050:	lsr	x5, x2, #4
    8054:	and	x3, x2, #0xfffffffffffffff0
    8058:	mov	x2, #0x0                   	// #0
    805c:	nop
    8060:	ldr	q0, [x1, x2]
    8064:	rev64	v0.16b, v0.16b
    8068:	str	q0, [x0, x2]
    806c:	add	x2, x2, #0x10
    8070:	cmp	x2, x3
    8074:	b.ne	8060 <elf64_xlatetom@@ELFUTILS_1.0+0x2800>  // b.any
    8078:	cmp	x4, x5, lsl #1
    807c:	b.eq	808c <elf64_xlatetom@@ELFUTILS_1.0+0x282c>  // b.none
    8080:	ldr	x1, [x1, x2]
    8084:	rev	x1, x1
    8088:	str	x1, [x0, x2]
    808c:	ret
    8090:	add	x5, x0, x2
    8094:	add	x6, x1, x2
    8098:	cbz	x4, 808c <elf64_xlatetom@@ELFUTILS_1.0+0x282c>
    809c:	sub	x7, x2, #0x10
    80a0:	add	x1, x1, x7
    80a4:	add	x0, x0, x7
    80a8:	cmp	x5, x1
    80ac:	ccmp	x6, x0, #0x0, hi  // hi = pmore
    80b0:	ccmp	x3, #0x6, #0x0, ls  // ls = plast
    80b4:	b.ls	810c <elf64_xlatetom@@ELFUTILS_1.0+0x28ac>  // b.plast
    80b8:	neg	x7, x2, lsr #4
    80bc:	lsr	x3, x2, #4
    80c0:	mov	x2, #0x0                   	// #0
    80c4:	lsl	x7, x7, #4
    80c8:	ldr	q0, [x1, x2]
    80cc:	ext	v0.16b, v0.16b, v0.16b, #8
    80d0:	rev64	v0.16b, v0.16b
    80d4:	ext	v0.16b, v0.16b, v0.16b, #8
    80d8:	str	q0, [x0, x2]
    80dc:	sub	x2, x2, #0x10
    80e0:	cmp	x2, x7
    80e4:	b.ne	80c8 <elf64_xlatetom@@ELFUTILS_1.0+0x2868>  // b.any
    80e8:	neg	x1, x3, lsl #4
    80ec:	cmp	x4, x3, lsl #1
    80f0:	add	x0, x6, x1
    80f4:	add	x1, x5, x1
    80f8:	b.eq	808c <elf64_xlatetom@@ELFUTILS_1.0+0x282c>  // b.none
    80fc:	ldur	x0, [x0, #-8]
    8100:	rev	x0, x0
    8104:	stur	x0, [x1, #-8]
    8108:	ret
    810c:	neg	x4, x4, lsl #3
    8110:	add	x0, x6, x4
    8114:	add	x4, x5, x4
    8118:	ldr	x1, [x0, x3, lsl #3]
    811c:	rev	x1, x1
    8120:	str	x1, [x4, x3, lsl #3]
    8124:	sub	x3, x3, #0x1
    8128:	cmn	x3, #0x1
    812c:	b.ne	8118 <elf64_xlatetom@@ELFUTILS_1.0+0x28b8>  // b.any
    8130:	ret
    8134:	lsl	x4, x4, #3
    8138:	mov	x2, #0x0                   	// #0
    813c:	nop
    8140:	ldr	x3, [x1, x2]
    8144:	rev	x3, x3
    8148:	str	x3, [x0, x2]
    814c:	add	x2, x2, #0x8
    8150:	cmp	x4, x2
    8154:	b.ne	8140 <elf64_xlatetom@@ELFUTILS_1.0+0x28e0>  // b.any
    8158:	ret
    815c:	nop
    8160:	lsr	x4, x2, #3
    8164:	cmp	x0, x1
    8168:	sub	x3, x4, #0x1
    816c:	b.cs	81c8 <elf64_xlatetom@@ELFUTILS_1.0+0x2968>  // b.hs, b.nlast
    8170:	cbz	x4, 81c4 <elf64_xlatetom@@ELFUTILS_1.0+0x2964>
    8174:	add	x5, x0, #0xf
    8178:	sub	x5, x5, x1
    817c:	cmp	x5, #0x1e
    8180:	ccmp	x3, #0x6, #0x0, hi  // hi = pmore
    8184:	b.ls	826c <elf64_xlatetom@@ELFUTILS_1.0+0x2a0c>  // b.plast
    8188:	lsr	x5, x2, #4
    818c:	and	x3, x2, #0xfffffffffffffff0
    8190:	mov	x2, #0x0                   	// #0
    8194:	nop
    8198:	ldr	q0, [x1, x2]
    819c:	rev64	v0.16b, v0.16b
    81a0:	str	q0, [x0, x2]
    81a4:	add	x2, x2, #0x10
    81a8:	cmp	x2, x3
    81ac:	b.ne	8198 <elf64_xlatetom@@ELFUTILS_1.0+0x2938>  // b.any
    81b0:	cmp	x4, x5, lsl #1
    81b4:	b.eq	81c4 <elf64_xlatetom@@ELFUTILS_1.0+0x2964>  // b.none
    81b8:	ldr	x1, [x1, x2]
    81bc:	rev	x1, x1
    81c0:	str	x1, [x0, x2]
    81c4:	ret
    81c8:	add	x5, x0, x2
    81cc:	add	x6, x1, x2
    81d0:	cbz	x4, 81c4 <elf64_xlatetom@@ELFUTILS_1.0+0x2964>
    81d4:	sub	x7, x2, #0x10
    81d8:	add	x1, x1, x7
    81dc:	add	x0, x0, x7
    81e0:	cmp	x5, x1
    81e4:	ccmp	x6, x0, #0x0, hi  // hi = pmore
    81e8:	ccmp	x3, #0x6, #0x0, ls  // ls = plast
    81ec:	b.ls	8244 <elf64_xlatetom@@ELFUTILS_1.0+0x29e4>  // b.plast
    81f0:	neg	x7, x2, lsr #4
    81f4:	lsr	x3, x2, #4
    81f8:	mov	x2, #0x0                   	// #0
    81fc:	lsl	x7, x7, #4
    8200:	ldr	q0, [x1, x2]
    8204:	ext	v0.16b, v0.16b, v0.16b, #8
    8208:	rev64	v0.16b, v0.16b
    820c:	ext	v0.16b, v0.16b, v0.16b, #8
    8210:	str	q0, [x0, x2]
    8214:	sub	x2, x2, #0x10
    8218:	cmp	x2, x7
    821c:	b.ne	8200 <elf64_xlatetom@@ELFUTILS_1.0+0x29a0>  // b.any
    8220:	neg	x1, x3, lsl #4
    8224:	cmp	x4, x3, lsl #1
    8228:	add	x0, x6, x1
    822c:	add	x1, x5, x1
    8230:	b.eq	81c4 <elf64_xlatetom@@ELFUTILS_1.0+0x2964>  // b.none
    8234:	ldur	x0, [x0, #-8]
    8238:	rev	x0, x0
    823c:	stur	x0, [x1, #-8]
    8240:	ret
    8244:	neg	x4, x4, lsl #3
    8248:	add	x0, x6, x4
    824c:	add	x4, x5, x4
    8250:	ldr	x1, [x0, x3, lsl #3]
    8254:	rev	x1, x1
    8258:	str	x1, [x4, x3, lsl #3]
    825c:	sub	x3, x3, #0x1
    8260:	cmn	x3, #0x1
    8264:	b.ne	8250 <elf64_xlatetom@@ELFUTILS_1.0+0x29f0>  // b.any
    8268:	ret
    826c:	lsl	x4, x4, #3
    8270:	mov	x2, #0x0                   	// #0
    8274:	nop
    8278:	ldr	x3, [x1, x2]
    827c:	rev	x3, x3
    8280:	str	x3, [x0, x2]
    8284:	add	x2, x2, #0x8
    8288:	cmp	x4, x2
    828c:	b.ne	8278 <elf64_xlatetom@@ELFUTILS_1.0+0x2a18>  // b.any
    8290:	ret
    8294:	nop
    8298:	lsr	x4, x2, #3
    829c:	cmp	x0, x1
    82a0:	sub	x3, x4, #0x1
    82a4:	b.cs	8300 <elf64_xlatetom@@ELFUTILS_1.0+0x2aa0>  // b.hs, b.nlast
    82a8:	cbz	x4, 82fc <elf64_xlatetom@@ELFUTILS_1.0+0x2a9c>
    82ac:	add	x5, x0, #0xf
    82b0:	sub	x5, x5, x1
    82b4:	cmp	x5, #0x1e
    82b8:	ccmp	x3, #0x6, #0x0, hi  // hi = pmore
    82bc:	b.ls	83a4 <elf64_xlatetom@@ELFUTILS_1.0+0x2b44>  // b.plast
    82c0:	lsr	x5, x2, #4
    82c4:	and	x3, x2, #0xfffffffffffffff0
    82c8:	mov	x2, #0x0                   	// #0
    82cc:	nop
    82d0:	ldr	q0, [x1, x2]
    82d4:	rev64	v0.16b, v0.16b
    82d8:	str	q0, [x0, x2]
    82dc:	add	x2, x2, #0x10
    82e0:	cmp	x2, x3
    82e4:	b.ne	82d0 <elf64_xlatetom@@ELFUTILS_1.0+0x2a70>  // b.any
    82e8:	cmp	x4, x5, lsl #1
    82ec:	b.eq	82fc <elf64_xlatetom@@ELFUTILS_1.0+0x2a9c>  // b.none
    82f0:	ldr	x1, [x1, x2]
    82f4:	rev	x1, x1
    82f8:	str	x1, [x0, x2]
    82fc:	ret
    8300:	add	x5, x0, x2
    8304:	add	x6, x1, x2
    8308:	cbz	x4, 82fc <elf64_xlatetom@@ELFUTILS_1.0+0x2a9c>
    830c:	sub	x7, x2, #0x10
    8310:	add	x1, x1, x7
    8314:	add	x0, x0, x7
    8318:	cmp	x5, x1
    831c:	ccmp	x6, x0, #0x0, hi  // hi = pmore
    8320:	ccmp	x3, #0x6, #0x0, ls  // ls = plast
    8324:	b.ls	837c <elf64_xlatetom@@ELFUTILS_1.0+0x2b1c>  // b.plast
    8328:	neg	x7, x2, lsr #4
    832c:	lsr	x3, x2, #4
    8330:	mov	x2, #0x0                   	// #0
    8334:	lsl	x7, x7, #4
    8338:	ldr	q0, [x1, x2]
    833c:	ext	v0.16b, v0.16b, v0.16b, #8
    8340:	rev64	v0.16b, v0.16b
    8344:	ext	v0.16b, v0.16b, v0.16b, #8
    8348:	str	q0, [x0, x2]
    834c:	sub	x2, x2, #0x10
    8350:	cmp	x2, x7
    8354:	b.ne	8338 <elf64_xlatetom@@ELFUTILS_1.0+0x2ad8>  // b.any
    8358:	neg	x1, x3, lsl #4
    835c:	cmp	x4, x3, lsl #1
    8360:	add	x0, x6, x1
    8364:	add	x1, x5, x1
    8368:	b.eq	82fc <elf64_xlatetom@@ELFUTILS_1.0+0x2a9c>  // b.none
    836c:	ldur	x0, [x0, #-8]
    8370:	rev	x0, x0
    8374:	stur	x0, [x1, #-8]
    8378:	ret
    837c:	neg	x4, x4, lsl #3
    8380:	add	x0, x6, x4
    8384:	add	x4, x5, x4
    8388:	ldr	x1, [x0, x3, lsl #3]
    838c:	rev	x1, x1
    8390:	str	x1, [x4, x3, lsl #3]
    8394:	sub	x3, x3, #0x1
    8398:	cmn	x3, #0x1
    839c:	b.ne	8388 <elf64_xlatetom@@ELFUTILS_1.0+0x2b28>  // b.any
    83a0:	ret
    83a4:	lsl	x4, x4, #3
    83a8:	mov	x2, #0x0                   	// #0
    83ac:	nop
    83b0:	ldr	x3, [x1, x2]
    83b4:	rev	x3, x3
    83b8:	str	x3, [x0, x2]
    83bc:	add	x2, x2, #0x8
    83c0:	cmp	x4, x2
    83c4:	b.ne	83b0 <elf64_xlatetom@@ELFUTILS_1.0+0x2b50>  // b.any
    83c8:	ret
    83cc:	nop
    83d0:	lsr	x5, x2, #2
    83d4:	cmp	x0, x1
    83d8:	sub	x4, x5, #0x1
    83dc:	b.cs	846c <elf64_xlatetom@@ELFUTILS_1.0+0x2c0c>  // b.hs, b.nlast
    83e0:	cbz	x5, 8468 <elf64_xlatetom@@ELFUTILS_1.0+0x2c08>
    83e4:	add	x3, x0, #0xf
    83e8:	sub	x3, x3, x1
    83ec:	cmp	x3, #0x1e
    83f0:	ccmp	x4, #0x5, #0x0, hi  // hi = pmore
    83f4:	b.ls	854c <elf64_xlatetom@@ELFUTILS_1.0+0x2cec>  // b.plast
    83f8:	lsr	x6, x2, #4
    83fc:	and	x3, x2, #0xfffffffffffffff0
    8400:	mov	x2, #0x0                   	// #0
    8404:	nop
    8408:	ldr	q0, [x1, x2]
    840c:	rev32	v0.16b, v0.16b
    8410:	str	q0, [x0, x2]
    8414:	add	x2, x2, #0x10
    8418:	cmp	x2, x3
    841c:	b.ne	8408 <elf64_xlatetom@@ELFUTILS_1.0+0x2ba8>  // b.any
    8420:	lsl	x3, x6, #2
    8424:	add	x6, x1, x2
    8428:	sub	x4, x4, x3
    842c:	cmp	x5, x3
    8430:	add	x3, x0, x2
    8434:	b.eq	8468 <elf64_xlatetom@@ELFUTILS_1.0+0x2c08>  // b.none
    8438:	ldr	w1, [x1, x2]
    843c:	rev	w1, w1
    8440:	str	w1, [x0, x2]
    8444:	cbz	x4, 8468 <elf64_xlatetom@@ELFUTILS_1.0+0x2c08>
    8448:	ldr	w0, [x6, #4]
    844c:	cmp	x4, #0x1
    8450:	rev	w0, w0
    8454:	str	w0, [x3, #4]
    8458:	b.eq	8468 <elf64_xlatetom@@ELFUTILS_1.0+0x2c08>  // b.none
    845c:	ldr	w0, [x6, #8]
    8460:	rev	w0, w0
    8464:	str	w0, [x3, #8]
    8468:	ret
    846c:	add	x6, x0, x2
    8470:	add	x7, x1, x2
    8474:	cbz	x5, 8468 <elf64_xlatetom@@ELFUTILS_1.0+0x2c08>
    8478:	sub	x3, x2, #0x10
    847c:	add	x1, x1, x3
    8480:	add	x0, x0, x3
    8484:	cmp	x6, x1
    8488:	ccmp	x7, x0, #0x0, hi  // hi = pmore
    848c:	ccmp	x4, #0x5, #0x0, ls  // ls = plast
    8490:	b.ls	8520 <elf64_xlatetom@@ELFUTILS_1.0+0x2cc0>  // b.plast
    8494:	neg	x8, x2, lsr #4
    8498:	adrp	x3, 15000 <elf_compress_gnu@@ELFUTILS_1.7+0x1b8>
    849c:	lsr	x2, x2, #4
    84a0:	lsl	x8, x8, #4
    84a4:	ldr	q1, [x3, #2832]
    84a8:	mov	x3, #0x0                   	// #0
    84ac:	nop
    84b0:	ldr	q0, [x1, x3]
    84b4:	tbl	v0.16b, {v0.16b}, v1.16b
    84b8:	rev32	v0.16b, v0.16b
    84bc:	tbl	v0.16b, {v0.16b}, v1.16b
    84c0:	str	q0, [x0, x3]
    84c4:	sub	x3, x3, #0x10
    84c8:	cmp	x3, x8
    84cc:	b.ne	84b0 <elf64_xlatetom@@ELFUTILS_1.0+0x2c50>  // b.any
    84d0:	lsl	x0, x2, #2
    84d4:	neg	x2, x2, lsl #4
    84d8:	add	x7, x7, x2
    84dc:	sub	x4, x4, x0
    84e0:	cmp	x5, x0
    84e4:	add	x2, x6, x2
    84e8:	b.eq	8468 <elf64_xlatetom@@ELFUTILS_1.0+0x2c08>  // b.none
    84ec:	ldur	w0, [x7, #-4]
    84f0:	rev	w0, w0
    84f4:	stur	w0, [x2, #-4]
    84f8:	cbz	x4, 8468 <elf64_xlatetom@@ELFUTILS_1.0+0x2c08>
    84fc:	ldur	w0, [x7, #-8]
    8500:	cmp	x4, #0x1
    8504:	rev	w0, w0
    8508:	stur	w0, [x2, #-8]
    850c:	b.eq	8468 <elf64_xlatetom@@ELFUTILS_1.0+0x2c08>  // b.none
    8510:	ldur	w0, [x7, #-12]
    8514:	rev	w0, w0
    8518:	stur	w0, [x2, #-12]
    851c:	ret
    8520:	neg	x5, x5, lsl #2
    8524:	add	x7, x7, x5
    8528:	add	x5, x6, x5
    852c:	nop
    8530:	ldr	w0, [x7, x4, lsl #2]
    8534:	rev	w0, w0
    8538:	str	w0, [x5, x4, lsl #2]
    853c:	sub	x4, x4, #0x1
    8540:	cmn	x4, #0x1
    8544:	b.ne	8530 <elf64_xlatetom@@ELFUTILS_1.0+0x2cd0>  // b.any
    8548:	ret
    854c:	lsl	x5, x5, #2
    8550:	mov	x2, #0x0                   	// #0
    8554:	nop
    8558:	ldr	w3, [x1, x2]
    855c:	rev	w3, w3
    8560:	str	w3, [x0, x2]
    8564:	add	x2, x2, #0x4
    8568:	cmp	x2, x5
    856c:	b.ne	8558 <elf64_xlatetom@@ELFUTILS_1.0+0x2cf8>  // b.any
    8570:	ret
    8574:	nop
    8578:	lsr	x5, x2, #2
    857c:	cmp	x0, x1
    8580:	sub	x4, x5, #0x1
    8584:	b.cs	8614 <elf64_xlatetom@@ELFUTILS_1.0+0x2db4>  // b.hs, b.nlast
    8588:	cbz	x5, 8610 <elf64_xlatetom@@ELFUTILS_1.0+0x2db0>
    858c:	add	x3, x0, #0xf
    8590:	sub	x3, x3, x1
    8594:	cmp	x3, #0x1e
    8598:	ccmp	x4, #0x5, #0x0, hi  // hi = pmore
    859c:	b.ls	86f4 <elf64_xlatetom@@ELFUTILS_1.0+0x2e94>  // b.plast
    85a0:	lsr	x6, x2, #4
    85a4:	and	x3, x2, #0xfffffffffffffff0
    85a8:	mov	x2, #0x0                   	// #0
    85ac:	nop
    85b0:	ldr	q0, [x1, x2]
    85b4:	rev32	v0.16b, v0.16b
    85b8:	str	q0, [x0, x2]
    85bc:	add	x2, x2, #0x10
    85c0:	cmp	x2, x3
    85c4:	b.ne	85b0 <elf64_xlatetom@@ELFUTILS_1.0+0x2d50>  // b.any
    85c8:	lsl	x3, x6, #2
    85cc:	add	x6, x1, x2
    85d0:	sub	x4, x4, x3
    85d4:	cmp	x5, x3
    85d8:	add	x3, x0, x2
    85dc:	b.eq	8610 <elf64_xlatetom@@ELFUTILS_1.0+0x2db0>  // b.none
    85e0:	ldr	w1, [x1, x2]
    85e4:	rev	w1, w1
    85e8:	str	w1, [x0, x2]
    85ec:	cbz	x4, 8610 <elf64_xlatetom@@ELFUTILS_1.0+0x2db0>
    85f0:	ldr	w0, [x6, #4]
    85f4:	cmp	x4, #0x1
    85f8:	rev	w0, w0
    85fc:	str	w0, [x3, #4]
    8600:	b.eq	8610 <elf64_xlatetom@@ELFUTILS_1.0+0x2db0>  // b.none
    8604:	ldr	w0, [x6, #8]
    8608:	rev	w0, w0
    860c:	str	w0, [x3, #8]
    8610:	ret
    8614:	add	x6, x0, x2
    8618:	add	x7, x1, x2
    861c:	cbz	x5, 8610 <elf64_xlatetom@@ELFUTILS_1.0+0x2db0>
    8620:	sub	x3, x2, #0x10
    8624:	add	x1, x1, x3
    8628:	add	x0, x0, x3
    862c:	cmp	x6, x1
    8630:	ccmp	x7, x0, #0x0, hi  // hi = pmore
    8634:	ccmp	x4, #0x5, #0x0, ls  // ls = plast
    8638:	b.ls	86c8 <elf64_xlatetom@@ELFUTILS_1.0+0x2e68>  // b.plast
    863c:	neg	x8, x2, lsr #4
    8640:	adrp	x3, 15000 <elf_compress_gnu@@ELFUTILS_1.7+0x1b8>
    8644:	lsr	x2, x2, #4
    8648:	lsl	x8, x8, #4
    864c:	ldr	q1, [x3, #2832]
    8650:	mov	x3, #0x0                   	// #0
    8654:	nop
    8658:	ldr	q0, [x1, x3]
    865c:	tbl	v0.16b, {v0.16b}, v1.16b
    8660:	rev32	v0.16b, v0.16b
    8664:	tbl	v0.16b, {v0.16b}, v1.16b
    8668:	str	q0, [x0, x3]
    866c:	sub	x3, x3, #0x10
    8670:	cmp	x3, x8
    8674:	b.ne	8658 <elf64_xlatetom@@ELFUTILS_1.0+0x2df8>  // b.any
    8678:	lsl	x0, x2, #2
    867c:	neg	x2, x2, lsl #4
    8680:	add	x7, x7, x2
    8684:	sub	x4, x4, x0
    8688:	cmp	x5, x0
    868c:	add	x2, x6, x2
    8690:	b.eq	8610 <elf64_xlatetom@@ELFUTILS_1.0+0x2db0>  // b.none
    8694:	ldur	w0, [x7, #-4]
    8698:	rev	w0, w0
    869c:	stur	w0, [x2, #-4]
    86a0:	cbz	x4, 8610 <elf64_xlatetom@@ELFUTILS_1.0+0x2db0>
    86a4:	ldur	w0, [x7, #-8]
    86a8:	cmp	x4, #0x1
    86ac:	rev	w0, w0
    86b0:	stur	w0, [x2, #-8]
    86b4:	b.eq	8610 <elf64_xlatetom@@ELFUTILS_1.0+0x2db0>  // b.none
    86b8:	ldur	w0, [x7, #-12]
    86bc:	rev	w0, w0
    86c0:	stur	w0, [x2, #-12]
    86c4:	ret
    86c8:	neg	x5, x5, lsl #2
    86cc:	add	x7, x7, x5
    86d0:	add	x5, x6, x5
    86d4:	nop
    86d8:	ldr	w0, [x7, x4, lsl #2]
    86dc:	rev	w0, w0
    86e0:	str	w0, [x5, x4, lsl #2]
    86e4:	sub	x4, x4, #0x1
    86e8:	cmn	x4, #0x1
    86ec:	b.ne	86d8 <elf64_xlatetom@@ELFUTILS_1.0+0x2e78>  // b.any
    86f0:	ret
    86f4:	lsl	x5, x5, #2
    86f8:	mov	x2, #0x0                   	// #0
    86fc:	nop
    8700:	ldr	w3, [x1, x2]
    8704:	rev	w3, w3
    8708:	str	w3, [x0, x2]
    870c:	add	x2, x2, #0x4
    8710:	cmp	x2, x5
    8714:	b.ne	8700 <elf64_xlatetom@@ELFUTILS_1.0+0x2ea0>  // b.any
    8718:	ret
    871c:	nop
    8720:	lsr	x5, x2, #2
    8724:	cmp	x0, x1
    8728:	sub	x4, x5, #0x1
    872c:	b.cs	87bc <elf64_xlatetom@@ELFUTILS_1.0+0x2f5c>  // b.hs, b.nlast
    8730:	cbz	x5, 87b8 <elf64_xlatetom@@ELFUTILS_1.0+0x2f58>
    8734:	add	x3, x0, #0xf
    8738:	sub	x3, x3, x1
    873c:	cmp	x3, #0x1e
    8740:	ccmp	x4, #0x5, #0x0, hi  // hi = pmore
    8744:	b.ls	889c <elf64_xlatetom@@ELFUTILS_1.0+0x303c>  // b.plast
    8748:	lsr	x6, x2, #4
    874c:	and	x3, x2, #0xfffffffffffffff0
    8750:	mov	x2, #0x0                   	// #0
    8754:	nop
    8758:	ldr	q0, [x1, x2]
    875c:	rev32	v0.16b, v0.16b
    8760:	str	q0, [x0, x2]
    8764:	add	x2, x2, #0x10
    8768:	cmp	x2, x3
    876c:	b.ne	8758 <elf64_xlatetom@@ELFUTILS_1.0+0x2ef8>  // b.any
    8770:	lsl	x3, x6, #2
    8774:	add	x6, x1, x2
    8778:	sub	x4, x4, x3
    877c:	cmp	x5, x3
    8780:	add	x3, x0, x2
    8784:	b.eq	87b8 <elf64_xlatetom@@ELFUTILS_1.0+0x2f58>  // b.none
    8788:	ldr	w1, [x1, x2]
    878c:	rev	w1, w1
    8790:	str	w1, [x0, x2]
    8794:	cbz	x4, 87b8 <elf64_xlatetom@@ELFUTILS_1.0+0x2f58>
    8798:	ldr	w0, [x6, #4]
    879c:	cmp	x4, #0x1
    87a0:	rev	w0, w0
    87a4:	str	w0, [x3, #4]
    87a8:	b.eq	87b8 <elf64_xlatetom@@ELFUTILS_1.0+0x2f58>  // b.none
    87ac:	ldr	w0, [x6, #8]
    87b0:	rev	w0, w0
    87b4:	str	w0, [x3, #8]
    87b8:	ret
    87bc:	add	x6, x0, x2
    87c0:	add	x7, x1, x2
    87c4:	cbz	x5, 87b8 <elf64_xlatetom@@ELFUTILS_1.0+0x2f58>
    87c8:	sub	x3, x2, #0x10
    87cc:	add	x1, x1, x3
    87d0:	add	x0, x0, x3
    87d4:	cmp	x6, x1
    87d8:	ccmp	x7, x0, #0x0, hi  // hi = pmore
    87dc:	ccmp	x4, #0x5, #0x0, ls  // ls = plast
    87e0:	b.ls	8870 <elf64_xlatetom@@ELFUTILS_1.0+0x3010>  // b.plast
    87e4:	neg	x8, x2, lsr #4
    87e8:	adrp	x3, 15000 <elf_compress_gnu@@ELFUTILS_1.7+0x1b8>
    87ec:	lsr	x2, x2, #4
    87f0:	lsl	x8, x8, #4
    87f4:	ldr	q1, [x3, #2832]
    87f8:	mov	x3, #0x0                   	// #0
    87fc:	nop
    8800:	ldr	q0, [x1, x3]
    8804:	tbl	v0.16b, {v0.16b}, v1.16b
    8808:	rev32	v0.16b, v0.16b
    880c:	tbl	v0.16b, {v0.16b}, v1.16b
    8810:	str	q0, [x0, x3]
    8814:	sub	x3, x3, #0x10
    8818:	cmp	x3, x8
    881c:	b.ne	8800 <elf64_xlatetom@@ELFUTILS_1.0+0x2fa0>  // b.any
    8820:	lsl	x0, x2, #2
    8824:	neg	x2, x2, lsl #4
    8828:	add	x7, x7, x2
    882c:	sub	x4, x4, x0
    8830:	cmp	x5, x0
    8834:	add	x2, x6, x2
    8838:	b.eq	87b8 <elf64_xlatetom@@ELFUTILS_1.0+0x2f58>  // b.none
    883c:	ldur	w0, [x7, #-4]
    8840:	rev	w0, w0
    8844:	stur	w0, [x2, #-4]
    8848:	cbz	x4, 87b8 <elf64_xlatetom@@ELFUTILS_1.0+0x2f58>
    884c:	ldur	w0, [x7, #-8]
    8850:	cmp	x4, #0x1
    8854:	rev	w0, w0
    8858:	stur	w0, [x2, #-8]
    885c:	b.eq	87b8 <elf64_xlatetom@@ELFUTILS_1.0+0x2f58>  // b.none
    8860:	ldur	w0, [x7, #-12]
    8864:	rev	w0, w0
    8868:	stur	w0, [x2, #-12]
    886c:	ret
    8870:	neg	x5, x5, lsl #2
    8874:	add	x7, x7, x5
    8878:	add	x5, x6, x5
    887c:	nop
    8880:	ldr	w0, [x7, x4, lsl #2]
    8884:	rev	w0, w0
    8888:	str	w0, [x5, x4, lsl #2]
    888c:	sub	x4, x4, #0x1
    8890:	cmn	x4, #0x1
    8894:	b.ne	8880 <elf64_xlatetom@@ELFUTILS_1.0+0x3020>  // b.any
    8898:	ret
    889c:	lsl	x5, x5, #2
    88a0:	mov	x2, #0x0                   	// #0
    88a4:	nop
    88a8:	ldr	w3, [x1, x2]
    88ac:	rev	w3, w3
    88b0:	str	w3, [x0, x2]
    88b4:	add	x2, x2, #0x4
    88b8:	cmp	x2, x5
    88bc:	b.ne	88a8 <elf64_xlatetom@@ELFUTILS_1.0+0x3048>  // b.any
    88c0:	ret
    88c4:	nop
    88c8:	lsr	x5, x2, #2
    88cc:	cmp	x0, x1
    88d0:	sub	x4, x5, #0x1
    88d4:	b.cs	8964 <elf64_xlatetom@@ELFUTILS_1.0+0x3104>  // b.hs, b.nlast
    88d8:	cbz	x5, 8960 <elf64_xlatetom@@ELFUTILS_1.0+0x3100>
    88dc:	add	x3, x0, #0xf
    88e0:	sub	x3, x3, x1
    88e4:	cmp	x3, #0x1e
    88e8:	ccmp	x4, #0x5, #0x0, hi  // hi = pmore
    88ec:	b.ls	8a44 <elf64_xlatetom@@ELFUTILS_1.0+0x31e4>  // b.plast
    88f0:	lsr	x6, x2, #4
    88f4:	and	x3, x2, #0xfffffffffffffff0
    88f8:	mov	x2, #0x0                   	// #0
    88fc:	nop
    8900:	ldr	q0, [x1, x2]
    8904:	rev32	v0.16b, v0.16b
    8908:	str	q0, [x0, x2]
    890c:	add	x2, x2, #0x10
    8910:	cmp	x2, x3
    8914:	b.ne	8900 <elf64_xlatetom@@ELFUTILS_1.0+0x30a0>  // b.any
    8918:	lsl	x3, x6, #2
    891c:	add	x6, x1, x2
    8920:	sub	x4, x4, x3
    8924:	cmp	x5, x3
    8928:	add	x3, x0, x2
    892c:	b.eq	8960 <elf64_xlatetom@@ELFUTILS_1.0+0x3100>  // b.none
    8930:	ldr	w1, [x1, x2]
    8934:	rev	w1, w1
    8938:	str	w1, [x0, x2]
    893c:	cbz	x4, 8960 <elf64_xlatetom@@ELFUTILS_1.0+0x3100>
    8940:	ldr	w0, [x6, #4]
    8944:	cmp	x4, #0x1
    8948:	rev	w0, w0
    894c:	str	w0, [x3, #4]
    8950:	b.eq	8960 <elf64_xlatetom@@ELFUTILS_1.0+0x3100>  // b.none
    8954:	ldr	w0, [x6, #8]
    8958:	rev	w0, w0
    895c:	str	w0, [x3, #8]
    8960:	ret
    8964:	add	x6, x0, x2
    8968:	add	x7, x1, x2
    896c:	cbz	x5, 8960 <elf64_xlatetom@@ELFUTILS_1.0+0x3100>
    8970:	sub	x3, x2, #0x10
    8974:	add	x1, x1, x3
    8978:	add	x0, x0, x3
    897c:	cmp	x6, x1
    8980:	ccmp	x7, x0, #0x0, hi  // hi = pmore
    8984:	ccmp	x4, #0x5, #0x0, ls  // ls = plast
    8988:	b.ls	8a18 <elf64_xlatetom@@ELFUTILS_1.0+0x31b8>  // b.plast
    898c:	neg	x8, x2, lsr #4
    8990:	adrp	x3, 15000 <elf_compress_gnu@@ELFUTILS_1.7+0x1b8>
    8994:	lsr	x2, x2, #4
    8998:	lsl	x8, x8, #4
    899c:	ldr	q1, [x3, #2832]
    89a0:	mov	x3, #0x0                   	// #0
    89a4:	nop
    89a8:	ldr	q0, [x1, x3]
    89ac:	tbl	v0.16b, {v0.16b}, v1.16b
    89b0:	rev32	v0.16b, v0.16b
    89b4:	tbl	v0.16b, {v0.16b}, v1.16b
    89b8:	str	q0, [x0, x3]
    89bc:	sub	x3, x3, #0x10
    89c0:	cmp	x3, x8
    89c4:	b.ne	89a8 <elf64_xlatetom@@ELFUTILS_1.0+0x3148>  // b.any
    89c8:	lsl	x0, x2, #2
    89cc:	neg	x2, x2, lsl #4
    89d0:	add	x7, x7, x2
    89d4:	sub	x4, x4, x0
    89d8:	cmp	x5, x0
    89dc:	add	x2, x6, x2
    89e0:	b.eq	8960 <elf64_xlatetom@@ELFUTILS_1.0+0x3100>  // b.none
    89e4:	ldur	w0, [x7, #-4]
    89e8:	rev	w0, w0
    89ec:	stur	w0, [x2, #-4]
    89f0:	cbz	x4, 8960 <elf64_xlatetom@@ELFUTILS_1.0+0x3100>
    89f4:	ldur	w0, [x7, #-8]
    89f8:	cmp	x4, #0x1
    89fc:	rev	w0, w0
    8a00:	stur	w0, [x2, #-8]
    8a04:	b.eq	8960 <elf64_xlatetom@@ELFUTILS_1.0+0x3100>  // b.none
    8a08:	ldur	w0, [x7, #-12]
    8a0c:	rev	w0, w0
    8a10:	stur	w0, [x2, #-12]
    8a14:	ret
    8a18:	neg	x5, x5, lsl #2
    8a1c:	add	x7, x7, x5
    8a20:	add	x5, x6, x5
    8a24:	nop
    8a28:	ldr	w0, [x7, x4, lsl #2]
    8a2c:	rev	w0, w0
    8a30:	str	w0, [x5, x4, lsl #2]
    8a34:	sub	x4, x4, #0x1
    8a38:	cmn	x4, #0x1
    8a3c:	b.ne	8a28 <elf64_xlatetom@@ELFUTILS_1.0+0x31c8>  // b.any
    8a40:	ret
    8a44:	lsl	x5, x5, #2
    8a48:	mov	x2, #0x0                   	// #0
    8a4c:	nop
    8a50:	ldr	w3, [x1, x2]
    8a54:	rev	w3, w3
    8a58:	str	w3, [x0, x2]
    8a5c:	add	x2, x2, #0x4
    8a60:	cmp	x2, x5
    8a64:	b.ne	8a50 <elf64_xlatetom@@ELFUTILS_1.0+0x31f0>  // b.any
    8a68:	ret
    8a6c:	nop
    8a70:	lsr	x4, x2, #3
    8a74:	cmp	x0, x1
    8a78:	sub	x3, x4, #0x1
    8a7c:	b.cs	8ad8 <elf64_xlatetom@@ELFUTILS_1.0+0x3278>  // b.hs, b.nlast
    8a80:	cbz	x4, 8ad4 <elf64_xlatetom@@ELFUTILS_1.0+0x3274>
    8a84:	add	x5, x0, #0xf
    8a88:	sub	x5, x5, x1
    8a8c:	cmp	x5, #0x1e
    8a90:	ccmp	x3, #0x6, #0x0, hi  // hi = pmore
    8a94:	b.ls	8b7c <elf64_xlatetom@@ELFUTILS_1.0+0x331c>  // b.plast
    8a98:	lsr	x5, x2, #4
    8a9c:	and	x3, x2, #0xfffffffffffffff0
    8aa0:	mov	x2, #0x0                   	// #0
    8aa4:	nop
    8aa8:	ldr	q0, [x1, x2]
    8aac:	rev64	v0.16b, v0.16b
    8ab0:	str	q0, [x0, x2]
    8ab4:	add	x2, x2, #0x10
    8ab8:	cmp	x2, x3
    8abc:	b.ne	8aa8 <elf64_xlatetom@@ELFUTILS_1.0+0x3248>  // b.any
    8ac0:	cmp	x4, x5, lsl #1
    8ac4:	b.eq	8ad4 <elf64_xlatetom@@ELFUTILS_1.0+0x3274>  // b.none
    8ac8:	ldr	x1, [x1, x2]
    8acc:	rev	x1, x1
    8ad0:	str	x1, [x0, x2]
    8ad4:	ret
    8ad8:	add	x5, x0, x2
    8adc:	add	x6, x1, x2
    8ae0:	cbz	x4, 8ad4 <elf64_xlatetom@@ELFUTILS_1.0+0x3274>
    8ae4:	sub	x7, x2, #0x10
    8ae8:	add	x1, x1, x7
    8aec:	add	x0, x0, x7
    8af0:	cmp	x5, x1
    8af4:	ccmp	x6, x0, #0x0, hi  // hi = pmore
    8af8:	ccmp	x3, #0x6, #0x0, ls  // ls = plast
    8afc:	b.ls	8b54 <elf64_xlatetom@@ELFUTILS_1.0+0x32f4>  // b.plast
    8b00:	neg	x7, x2, lsr #4
    8b04:	lsr	x3, x2, #4
    8b08:	mov	x2, #0x0                   	// #0
    8b0c:	lsl	x7, x7, #4
    8b10:	ldr	q0, [x1, x2]
    8b14:	ext	v0.16b, v0.16b, v0.16b, #8
    8b18:	rev64	v0.16b, v0.16b
    8b1c:	ext	v0.16b, v0.16b, v0.16b, #8
    8b20:	str	q0, [x0, x2]
    8b24:	sub	x2, x2, #0x10
    8b28:	cmp	x2, x7
    8b2c:	b.ne	8b10 <elf64_xlatetom@@ELFUTILS_1.0+0x32b0>  // b.any
    8b30:	neg	x1, x3, lsl #4
    8b34:	cmp	x4, x3, lsl #1
    8b38:	add	x0, x6, x1
    8b3c:	add	x1, x5, x1
    8b40:	b.eq	8ad4 <elf64_xlatetom@@ELFUTILS_1.0+0x3274>  // b.none
    8b44:	ldur	x0, [x0, #-8]
    8b48:	rev	x0, x0
    8b4c:	stur	x0, [x1, #-8]
    8b50:	ret
    8b54:	neg	x4, x4, lsl #3
    8b58:	add	x0, x6, x4
    8b5c:	add	x4, x5, x4
    8b60:	ldr	x1, [x0, x3, lsl #3]
    8b64:	rev	x1, x1
    8b68:	str	x1, [x4, x3, lsl #3]
    8b6c:	sub	x3, x3, #0x1
    8b70:	cmn	x3, #0x1
    8b74:	b.ne	8b60 <elf64_xlatetom@@ELFUTILS_1.0+0x3300>  // b.any
    8b78:	ret
    8b7c:	lsl	x4, x4, #3
    8b80:	mov	x2, #0x0                   	// #0
    8b84:	nop
    8b88:	ldr	x3, [x1, x2]
    8b8c:	rev	x3, x3
    8b90:	str	x3, [x0, x2]
    8b94:	add	x2, x2, #0x8
    8b98:	cmp	x4, x2
    8b9c:	b.ne	8b88 <elf64_xlatetom@@ELFUTILS_1.0+0x3328>  // b.any
    8ba0:	ret
    8ba4:	nop
    8ba8:	lsr	x4, x2, #3
    8bac:	cmp	x0, x1
    8bb0:	sub	x3, x4, #0x1
    8bb4:	b.cs	8c10 <elf64_xlatetom@@ELFUTILS_1.0+0x33b0>  // b.hs, b.nlast
    8bb8:	cbz	x4, 8c0c <elf64_xlatetom@@ELFUTILS_1.0+0x33ac>
    8bbc:	add	x5, x0, #0xf
    8bc0:	sub	x5, x5, x1
    8bc4:	cmp	x5, #0x1e
    8bc8:	ccmp	x3, #0x6, #0x0, hi  // hi = pmore
    8bcc:	b.ls	8cb4 <elf64_xlatetom@@ELFUTILS_1.0+0x3454>  // b.plast
    8bd0:	lsr	x5, x2, #4
    8bd4:	and	x3, x2, #0xfffffffffffffff0
    8bd8:	mov	x2, #0x0                   	// #0
    8bdc:	nop
    8be0:	ldr	q0, [x1, x2]
    8be4:	rev64	v0.16b, v0.16b
    8be8:	str	q0, [x0, x2]
    8bec:	add	x2, x2, #0x10
    8bf0:	cmp	x2, x3
    8bf4:	b.ne	8be0 <elf64_xlatetom@@ELFUTILS_1.0+0x3380>  // b.any
    8bf8:	cmp	x4, x5, lsl #1
    8bfc:	b.eq	8c0c <elf64_xlatetom@@ELFUTILS_1.0+0x33ac>  // b.none
    8c00:	ldr	x1, [x1, x2]
    8c04:	rev	x1, x1
    8c08:	str	x1, [x0, x2]
    8c0c:	ret
    8c10:	add	x5, x0, x2
    8c14:	add	x6, x1, x2
    8c18:	cbz	x4, 8c0c <elf64_xlatetom@@ELFUTILS_1.0+0x33ac>
    8c1c:	sub	x7, x2, #0x10
    8c20:	add	x1, x1, x7
    8c24:	add	x0, x0, x7
    8c28:	cmp	x5, x1
    8c2c:	ccmp	x6, x0, #0x0, hi  // hi = pmore
    8c30:	ccmp	x3, #0x6, #0x0, ls  // ls = plast
    8c34:	b.ls	8c8c <elf64_xlatetom@@ELFUTILS_1.0+0x342c>  // b.plast
    8c38:	neg	x7, x2, lsr #4
    8c3c:	lsr	x3, x2, #4
    8c40:	mov	x2, #0x0                   	// #0
    8c44:	lsl	x7, x7, #4
    8c48:	ldr	q0, [x1, x2]
    8c4c:	ext	v0.16b, v0.16b, v0.16b, #8
    8c50:	rev64	v0.16b, v0.16b
    8c54:	ext	v0.16b, v0.16b, v0.16b, #8
    8c58:	str	q0, [x0, x2]
    8c5c:	sub	x2, x2, #0x10
    8c60:	cmp	x2, x7
    8c64:	b.ne	8c48 <elf64_xlatetom@@ELFUTILS_1.0+0x33e8>  // b.any
    8c68:	neg	x1, x3, lsl #4
    8c6c:	cmp	x4, x3, lsl #1
    8c70:	add	x0, x6, x1
    8c74:	add	x1, x5, x1
    8c78:	b.eq	8c0c <elf64_xlatetom@@ELFUTILS_1.0+0x33ac>  // b.none
    8c7c:	ldur	x0, [x0, #-8]
    8c80:	rev	x0, x0
    8c84:	stur	x0, [x1, #-8]
    8c88:	ret
    8c8c:	neg	x4, x4, lsl #3
    8c90:	add	x0, x6, x4
    8c94:	add	x4, x5, x4
    8c98:	ldr	x1, [x0, x3, lsl #3]
    8c9c:	rev	x1, x1
    8ca0:	str	x1, [x4, x3, lsl #3]
    8ca4:	sub	x3, x3, #0x1
    8ca8:	cmn	x3, #0x1
    8cac:	b.ne	8c98 <elf64_xlatetom@@ELFUTILS_1.0+0x3438>  // b.any
    8cb0:	ret
    8cb4:	lsl	x4, x4, #3
    8cb8:	mov	x2, #0x0                   	// #0
    8cbc:	nop
    8cc0:	ldr	x3, [x1, x2]
    8cc4:	rev	x3, x3
    8cc8:	str	x3, [x0, x2]
    8ccc:	add	x2, x2, #0x8
    8cd0:	cmp	x4, x2
    8cd4:	b.ne	8cc0 <elf64_xlatetom@@ELFUTILS_1.0+0x3460>  // b.any
    8cd8:	ret
    8cdc:	nop
    8ce0:	stp	x29, x30, [sp, #-48]!
    8ce4:	cmp	x2, #0xb
    8ce8:	mov	x29, sp
    8cec:	stp	x19, x20, [sp, #16]
    8cf0:	mov	x20, x0
    8cf4:	mov	x19, x1
    8cf8:	stp	x21, x22, [sp, #32]
    8cfc:	mov	x21, x2
    8d00:	b.hi	8d20 <elf64_xlatetom@@ELFUTILS_1.0+0x34c0>  // b.pmore
    8d04:	cmp	x21, #0x0
    8d08:	ccmp	x20, x19, #0x4, ne  // ne = any
    8d0c:	b.ne	8e40 <elf64_xlatetom@@ELFUTILS_1.0+0x35e0>  // b.any
    8d10:	ldp	x19, x20, [sp, #16]
    8d14:	ldp	x21, x22, [sp, #32]
    8d18:	ldp	x29, x30, [sp], #48
    8d1c:	ret
    8d20:	cbnz	w3, 8dc8 <elf64_xlatetom@@ELFUTILS_1.0+0x3568>
    8d24:	mov	x3, x20
    8d28:	ldr	w0, [x19]
    8d2c:	add	x4, x19, #0xc
    8d30:	rev	w0, w0
    8d34:	mov	x1, x4
    8d38:	ldr	w2, [x3], #12
    8d3c:	str	w0, [x20]
    8d40:	add	x2, x2, #0xf
    8d44:	mov	x0, x3
    8d48:	ldr	w5, [x19, #4]
    8d4c:	and	x2, x2, #0xfffffffc
    8d50:	cmp	x2, #0xb
    8d54:	rev	w5, w5
    8d58:	str	w5, [x20, #4]
    8d5c:	ccmp	x2, x21, #0x2, hi  // hi = pmore
    8d60:	ldr	w5, [x19, #8]
    8d64:	rev	w5, w5
    8d68:	str	w5, [x20, #8]
    8d6c:	b.hi	8e5c <elf64_xlatetom@@ELFUTILS_1.0+0x35fc>  // b.pmore
    8d70:	ldr	w22, [x20, #4]
    8d74:	add	x22, x22, #0x3
    8d78:	add	x2, x22, x2
    8d7c:	and	x22, x2, #0xfffffffc
    8d80:	cmp	x22, #0xb
    8d84:	add	x19, x19, x22
    8d88:	ccmp	x22, x21, #0x2, hi  // hi = pmore
    8d8c:	b.hi	8e6c <elf64_xlatetom@@ELFUTILS_1.0+0x360c>  // b.pmore
    8d90:	sub	x21, x21, x22
    8d94:	cmp	x3, x4
    8d98:	b.eq	8da4 <elf64_xlatetom@@ELFUTILS_1.0+0x3544>  // b.none
    8d9c:	sub	x2, x22, #0xc
    8da0:	bl	3020 <memcpy@plt>
    8da4:	cmp	x21, #0xb
    8da8:	add	x20, x20, x22
    8dac:	b.ls	8d04 <elf64_xlatetom@@ELFUTILS_1.0+0x34a4>  // b.plast
    8db0:	b	8d24 <elf64_xlatetom@@ELFUTILS_1.0+0x34c4>
    8db4:	sub	x2, x22, #0xc
    8db8:	bl	3020 <memcpy@plt>
    8dbc:	cmp	x21, #0xb
    8dc0:	add	x20, x20, x22
    8dc4:	b.ls	8d04 <elf64_xlatetom@@ELFUTILS_1.0+0x34a4>  // b.plast
    8dc8:	ldr	w2, [x19]
    8dcc:	add	x4, x19, #0xc
    8dd0:	add	x3, x20, #0xc
    8dd4:	mov	x1, x4
    8dd8:	rev	w0, w2
    8ddc:	str	w0, [x20]
    8de0:	add	x2, x2, #0xf
    8de4:	mov	x0, x3
    8de8:	ldr	w5, [x19, #4]
    8dec:	and	x2, x2, #0xfffffffc
    8df0:	cmp	x2, x21
    8df4:	rev	w5, w5
    8df8:	str	w5, [x20, #4]
    8dfc:	ccmp	x2, #0xb, #0x0, ls  // ls = plast
    8e00:	ldr	w5, [x19, #8]
    8e04:	rev	w5, w5
    8e08:	str	w5, [x20, #8]
    8e0c:	b.ls	8e5c <elf64_xlatetom@@ELFUTILS_1.0+0x35fc>  // b.plast
    8e10:	ldr	w22, [x19, #4]
    8e14:	add	x22, x22, #0x3
    8e18:	add	x2, x22, x2
    8e1c:	and	x22, x2, #0xfffffffc
    8e20:	cmp	x21, x22
    8e24:	add	x19, x19, x22
    8e28:	ccmp	x22, #0xb, #0x0, cs  // cs = hs, nlast
    8e2c:	b.ls	8e6c <elf64_xlatetom@@ELFUTILS_1.0+0x360c>  // b.plast
    8e30:	sub	x21, x21, x22
    8e34:	cmp	x4, x3
    8e38:	b.ne	8db4 <elf64_xlatetom@@ELFUTILS_1.0+0x3554>  // b.any
    8e3c:	b	8dbc <elf64_xlatetom@@ELFUTILS_1.0+0x355c>
    8e40:	mov	x2, x21
    8e44:	mov	x1, x19
    8e48:	mov	x0, x20
    8e4c:	ldp	x19, x20, [sp, #16]
    8e50:	ldp	x21, x22, [sp, #32]
    8e54:	ldp	x29, x30, [sp], #48
    8e58:	b	3020 <memcpy@plt>
    8e5c:	sub	x21, x21, #0xc
    8e60:	mov	x19, x4
    8e64:	mov	x20, x3
    8e68:	b	8d04 <elf64_xlatetom@@ELFUTILS_1.0+0x34a4>
    8e6c:	mov	x20, x3
    8e70:	mov	x19, x4
    8e74:	sub	x21, x21, #0xc
    8e78:	b	8d04 <elf64_xlatetom@@ELFUTILS_1.0+0x34a4>
    8e7c:	nop
    8e80:	cbz	x0, 8ec4 <elf64_xlatetom@@ELFUTILS_1.0+0x3664>
    8e84:	stp	x29, x30, [sp, #-16]!
    8e88:	mov	x29, sp
    8e8c:	ldr	w1, [x0, #24]
    8e90:	cmp	w1, #0x3
    8e94:	b.ne	8eb4 <elf64_xlatetom@@ELFUTILS_1.0+0x3654>  // b.any
    8e98:	ldr	w1, [x0, #32]
    8e9c:	cbnz	w1, 8ecc <elf64_xlatetom@@ELFUTILS_1.0+0x366c>
    8ea0:	mov	w1, #0x1                   	// #1
    8ea4:	str	w1, [x0, #32]
    8ea8:	ldr	x0, [x0, #72]
    8eac:	ldp	x29, x30, [sp], #16
    8eb0:	ret
    8eb4:	mov	w0, #0x4                   	// #4
    8eb8:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    8ebc:	mov	x0, #0x0                   	// #0
    8ec0:	b	8eac <elf64_xlatetom@@ELFUTILS_1.0+0x364c>
    8ec4:	mov	x0, #0x0                   	// #0
    8ec8:	ret
    8ecc:	cmp	w1, #0x1
    8ed0:	b.eq	8ea8 <elf64_xlatetom@@ELFUTILS_1.0+0x3648>  // b.none
    8ed4:	mov	w0, #0x15                  	// #21
    8ed8:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    8edc:	mov	x0, #0x0                   	// #0
    8ee0:	b	8eac <elf64_xlatetom@@ELFUTILS_1.0+0x364c>
    8ee4:	nop

0000000000008ee8 <elf32_getehdr@@ELFUTILS_1.0>:
    8ee8:	cbz	x0, 8f1c <elf32_getehdr@@ELFUTILS_1.0+0x34>
    8eec:	stp	x29, x30, [sp, #-16]!
    8ef0:	mov	x29, sp
    8ef4:	ldr	w1, [x0, #24]
    8ef8:	cmp	w1, #0x3
    8efc:	b.ne	8f24 <elf32_getehdr@@ELFUTILS_1.0+0x3c>  // b.any
    8f00:	ldr	w1, [x0, #32]
    8f04:	cbnz	w1, 8f34 <elf32_getehdr@@ELFUTILS_1.0+0x4c>
    8f08:	mov	w1, #0x1                   	// #1
    8f0c:	str	w1, [x0, #32]
    8f10:	ldr	x0, [x0, #72]
    8f14:	ldp	x29, x30, [sp], #16
    8f18:	ret
    8f1c:	mov	x0, #0x0                   	// #0
    8f20:	ret
    8f24:	mov	w0, #0x4                   	// #4
    8f28:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    8f2c:	mov	x0, #0x0                   	// #0
    8f30:	b	8f14 <elf32_getehdr@@ELFUTILS_1.0+0x2c>
    8f34:	cmp	w1, #0x1
    8f38:	b.eq	8f10 <elf32_getehdr@@ELFUTILS_1.0+0x28>  // b.none
    8f3c:	mov	w0, #0x15                  	// #21
    8f40:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    8f44:	mov	x0, #0x0                   	// #0
    8f48:	b	8f14 <elf32_getehdr@@ELFUTILS_1.0+0x2c>
    8f4c:	nop
    8f50:	cbz	x0, 8f94 <elf32_getehdr@@ELFUTILS_1.0+0xac>
    8f54:	stp	x29, x30, [sp, #-16]!
    8f58:	mov	x29, sp
    8f5c:	ldr	w1, [x0, #24]
    8f60:	cmp	w1, #0x3
    8f64:	b.ne	8f84 <elf32_getehdr@@ELFUTILS_1.0+0x9c>  // b.any
    8f68:	ldr	w1, [x0, #32]
    8f6c:	cbnz	w1, 8f9c <elf32_getehdr@@ELFUTILS_1.0+0xb4>
    8f70:	mov	w1, #0x2                   	// #2
    8f74:	str	w1, [x0, #32]
    8f78:	ldr	x0, [x0, #72]
    8f7c:	ldp	x29, x30, [sp], #16
    8f80:	ret
    8f84:	mov	w0, #0x4                   	// #4
    8f88:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    8f8c:	mov	x0, #0x0                   	// #0
    8f90:	b	8f7c <elf32_getehdr@@ELFUTILS_1.0+0x94>
    8f94:	mov	x0, #0x0                   	// #0
    8f98:	ret
    8f9c:	cmp	w1, #0x2
    8fa0:	b.eq	8f78 <elf32_getehdr@@ELFUTILS_1.0+0x90>  // b.none
    8fa4:	mov	w0, #0x15                  	// #21
    8fa8:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    8fac:	mov	x0, #0x0                   	// #0
    8fb0:	b	8f7c <elf32_getehdr@@ELFUTILS_1.0+0x94>
    8fb4:	nop

0000000000008fb8 <elf64_getehdr@@ELFUTILS_1.0>:
    8fb8:	cbz	x0, 8fec <elf64_getehdr@@ELFUTILS_1.0+0x34>
    8fbc:	stp	x29, x30, [sp, #-16]!
    8fc0:	mov	x29, sp
    8fc4:	ldr	w1, [x0, #24]
    8fc8:	cmp	w1, #0x3
    8fcc:	b.ne	8ff4 <elf64_getehdr@@ELFUTILS_1.0+0x3c>  // b.any
    8fd0:	ldr	w1, [x0, #32]
    8fd4:	cbnz	w1, 9004 <elf64_getehdr@@ELFUTILS_1.0+0x4c>
    8fd8:	mov	w1, #0x2                   	// #2
    8fdc:	str	w1, [x0, #32]
    8fe0:	ldr	x0, [x0, #72]
    8fe4:	ldp	x29, x30, [sp], #16
    8fe8:	ret
    8fec:	mov	x0, #0x0                   	// #0
    8ff0:	ret
    8ff4:	mov	w0, #0x4                   	// #4
    8ff8:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    8ffc:	mov	x0, #0x0                   	// #0
    9000:	b	8fe4 <elf64_getehdr@@ELFUTILS_1.0+0x2c>
    9004:	cmp	w1, #0x2
    9008:	b.eq	8fe0 <elf64_getehdr@@ELFUTILS_1.0+0x28>  // b.none
    900c:	mov	w0, #0x15                  	// #21
    9010:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    9014:	mov	x0, #0x0                   	// #0
    9018:	b	8fe4 <elf64_getehdr@@ELFUTILS_1.0+0x2c>
    901c:	nop
    9020:	stp	x29, x30, [sp, #-32]!
    9024:	mov	x29, sp
    9028:	str	x19, [sp, #16]
    902c:	cbz	x0, 90ec <elf64_getehdr@@ELFUTILS_1.0+0x134>
    9030:	ldr	w2, [x0, #24]
    9034:	cmp	w2, #0x3
    9038:	b.ne	90dc <elf64_getehdr@@ELFUTILS_1.0+0x124>  // b.any
    903c:	ldr	x19, [x0, #72]
    9040:	cbz	x19, 90f4 <elf64_getehdr@@ELFUTILS_1.0+0x13c>
    9044:	ldp	x2, x3, [x19]
    9048:	ldr	w0, [x0, #32]
    904c:	stp	x2, x3, [x1]
    9050:	cmp	w0, #0x1
    9054:	b.eq	9084 <elf64_getehdr@@ELFUTILS_1.0+0xcc>  // b.none
    9058:	ldp	x2, x3, [x19, #16]
    905c:	stp	x2, x3, [x1, #16]
    9060:	ldp	x2, x3, [x19, #32]
    9064:	stp	x2, x3, [x1, #32]
    9068:	ldp	x2, x3, [x19, #48]
    906c:	mov	x19, x1
    9070:	stp	x2, x3, [x1, #48]
    9074:	mov	x0, x19
    9078:	ldr	x19, [sp, #16]
    907c:	ldp	x29, x30, [sp], #32
    9080:	ret
    9084:	ldrh	w2, [x19, #16]
    9088:	ldrh	w0, [x19, #18]
    908c:	strh	w2, [x1, #16]
    9090:	strh	w0, [x1, #18]
    9094:	ldp	w7, w6, [x19, #20]
    9098:	ldr	d0, [x19, #40]
    909c:	ldp	w5, w4, [x19, #28]
    90a0:	ldr	w3, [x19, #36]
    90a4:	stur	d0, [x1, #52]
    90a8:	ldrh	w0, [x19, #50]
    90ac:	ldrh	w2, [x19, #48]
    90b0:	mov	x19, x1
    90b4:	str	w7, [x1, #20]
    90b8:	stp	x6, x5, [x1, #24]
    90bc:	str	x4, [x1, #40]
    90c0:	str	w3, [x1, #48]
    90c4:	strh	w2, [x1, #60]
    90c8:	strh	w0, [x1, #62]
    90cc:	mov	x0, x19
    90d0:	ldr	x19, [sp, #16]
    90d4:	ldp	x29, x30, [sp], #32
    90d8:	ret
    90dc:	mov	w0, #0x4                   	// #4
    90e0:	mov	x19, #0x0                   	// #0
    90e4:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    90e8:	b	9074 <elf64_getehdr@@ELFUTILS_1.0+0xbc>
    90ec:	mov	x19, #0x0                   	// #0
    90f0:	b	9074 <elf64_getehdr@@ELFUTILS_1.0+0xbc>
    90f4:	mov	w0, #0x1a                  	// #26
    90f8:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    90fc:	b	9074 <elf64_getehdr@@ELFUTILS_1.0+0xbc>

0000000000009100 <gelf_getehdr@@ELFUTILS_1.0>:
    9100:	cbz	x0, 9108 <gelf_getehdr@@ELFUTILS_1.0+0x8>
    9104:	b	9020 <elf64_getehdr@@ELFUTILS_1.0+0x68>
    9108:	ret
    910c:	nop

0000000000009110 <elf32_newehdr@@ELFUTILS_1.0>:
    9110:	cbz	x0, 9198 <elf32_newehdr@@ELFUTILS_1.0+0x88>
    9114:	stp	x29, x30, [sp, #-16]!
    9118:	mov	x1, x0
    911c:	mov	x29, sp
    9120:	ldr	w0, [x0, #24]
    9124:	cmp	w0, #0x3
    9128:	b.ne	9188 <elf32_newehdr@@ELFUTILS_1.0+0x78>  // b.any
    912c:	ldr	w0, [x1, #32]
    9130:	cbz	w0, 914c <elf32_newehdr@@ELFUTILS_1.0+0x3c>
    9134:	cmp	w0, #0x1
    9138:	b.ne	91a0 <elf32_newehdr@@ELFUTILS_1.0+0x90>  // b.any
    913c:	ldr	x0, [x1, #72]
    9140:	cbz	x0, 915c <elf32_newehdr@@ELFUTILS_1.0+0x4c>
    9144:	ldp	x29, x30, [sp], #16
    9148:	ret
    914c:	mov	w0, #0x1                   	// #1
    9150:	str	w0, [x1, #32]
    9154:	ldr	x0, [x1, #72]
    9158:	cbnz	x0, 9144 <elf32_newehdr@@ELFUTILS_1.0+0x34>
    915c:	add	x0, x1, #0x88
    9160:	str	x0, [x1, #72]
    9164:	stp	xzr, xzr, [x1, #136]
    9168:	stp	xzr, xzr, [x0, #16]
    916c:	stp	xzr, xzr, [x0, #32]
    9170:	str	wzr, [x0, #48]
    9174:	ldr	w2, [x1, #116]
    9178:	orr	w2, w2, #0x1
    917c:	str	w2, [x1, #116]
    9180:	ldp	x29, x30, [sp], #16
    9184:	ret
    9188:	mov	w0, #0x4                   	// #4
    918c:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    9190:	mov	x0, #0x0                   	// #0
    9194:	b	9144 <elf32_newehdr@@ELFUTILS_1.0+0x34>
    9198:	mov	x0, #0x0                   	// #0
    919c:	ret
    91a0:	mov	w0, #0x15                  	// #21
    91a4:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    91a8:	mov	x0, #0x0                   	// #0
    91ac:	b	9144 <elf32_newehdr@@ELFUTILS_1.0+0x34>

00000000000091b0 <elf64_newehdr@@ELFUTILS_1.0>:
    91b0:	cbz	x0, 9238 <elf64_newehdr@@ELFUTILS_1.0+0x88>
    91b4:	stp	x29, x30, [sp, #-16]!
    91b8:	mov	x1, x0
    91bc:	mov	x29, sp
    91c0:	ldr	w0, [x0, #24]
    91c4:	cmp	w0, #0x3
    91c8:	b.ne	9228 <elf64_newehdr@@ELFUTILS_1.0+0x78>  // b.any
    91cc:	ldr	w0, [x1, #32]
    91d0:	cbz	w0, 91ec <elf64_newehdr@@ELFUTILS_1.0+0x3c>
    91d4:	cmp	w0, #0x2
    91d8:	b.ne	9240 <elf64_newehdr@@ELFUTILS_1.0+0x90>  // b.any
    91dc:	ldr	x0, [x1, #72]
    91e0:	cbz	x0, 91fc <elf64_newehdr@@ELFUTILS_1.0+0x4c>
    91e4:	ldp	x29, x30, [sp], #16
    91e8:	ret
    91ec:	mov	w0, #0x2                   	// #2
    91f0:	str	w0, [x1, #32]
    91f4:	ldr	x0, [x1, #72]
    91f8:	cbnz	x0, 91e4 <elf64_newehdr@@ELFUTILS_1.0+0x34>
    91fc:	add	x0, x1, #0x88
    9200:	str	x0, [x1, #72]
    9204:	stp	xzr, xzr, [x1, #136]
    9208:	stp	xzr, xzr, [x0, #16]
    920c:	stp	xzr, xzr, [x0, #32]
    9210:	stp	xzr, xzr, [x0, #48]
    9214:	ldr	w2, [x1, #116]
    9218:	orr	w2, w2, #0x1
    921c:	str	w2, [x1, #116]
    9220:	ldp	x29, x30, [sp], #16
    9224:	ret
    9228:	mov	w0, #0x4                   	// #4
    922c:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    9230:	mov	x0, #0x0                   	// #0
    9234:	b	91e4 <elf64_newehdr@@ELFUTILS_1.0+0x34>
    9238:	mov	x0, #0x0                   	// #0
    923c:	ret
    9240:	mov	w0, #0x15                  	// #21
    9244:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    9248:	mov	x0, #0x0                   	// #0
    924c:	b	91e4 <elf64_newehdr@@ELFUTILS_1.0+0x34>

0000000000009250 <gelf_newehdr@@ELFUTILS_1.0>:
    9250:	cmp	w1, #0x1
    9254:	b.eq	925c <gelf_newehdr@@ELFUTILS_1.0+0xc>  // b.none
    9258:	b	91b0 <elf64_newehdr@@ELFUTILS_1.0>
    925c:	b	9110 <elf32_newehdr@@ELFUTILS_1.0>

0000000000009260 <gelf_update_ehdr@@ELFUTILS_1.0>:
    9260:	cbz	x0, 9358 <gelf_update_ehdr@@ELFUTILS_1.0+0xf8>
    9264:	stp	x29, x30, [sp, #-16]!
    9268:	mov	x2, x0
    926c:	mov	x29, sp
    9270:	ldr	w0, [x0, #24]
    9274:	cmp	w0, #0x3
    9278:	b.ne	9374 <gelf_update_ehdr@@ELFUTILS_1.0+0x114>  // b.any
    927c:	ldr	w3, [x2, #32]
    9280:	ldr	x0, [x2, #72]
    9284:	cmp	w3, #0x1
    9288:	b.eq	92c8 <gelf_update_ehdr@@ELFUTILS_1.0+0x68>  // b.none
    928c:	cbz	x0, 9360 <gelf_update_ehdr@@ELFUTILS_1.0+0x100>
    9290:	ldp	x4, x5, [x1]
    9294:	stp	x4, x5, [x0]
    9298:	ldp	x4, x5, [x1, #16]
    929c:	stp	x4, x5, [x0, #16]
    92a0:	ldp	x4, x5, [x1, #32]
    92a4:	stp	x4, x5, [x0, #32]
    92a8:	ldp	x4, x5, [x1, #48]
    92ac:	stp	x4, x5, [x0, #48]
    92b0:	ldr	w1, [x2, #116]
    92b4:	mov	w0, #0x1                   	// #1
    92b8:	orr	w1, w1, w0
    92bc:	str	w1, [x2, #116]
    92c0:	ldp	x29, x30, [sp], #16
    92c4:	ret
    92c8:	cbz	x0, 9360 <gelf_update_ehdr@@ELFUTILS_1.0+0x100>
    92cc:	ldr	x4, [x1, #24]
    92d0:	mov	x3, #0xffffffff            	// #4294967295
    92d4:	cmp	x4, x3
    92d8:	b.hi	9348 <gelf_update_ehdr@@ELFUTILS_1.0+0xe8>  // b.pmore
    92dc:	ldr	x4, [x1, #32]
    92e0:	cmp	x4, x3
    92e4:	b.hi	9348 <gelf_update_ehdr@@ELFUTILS_1.0+0xe8>  // b.pmore
    92e8:	ldr	x4, [x1, #40]
    92ec:	cmp	x4, x3
    92f0:	b.hi	9348 <gelf_update_ehdr@@ELFUTILS_1.0+0xe8>  // b.pmore
    92f4:	ldp	x4, x5, [x1]
    92f8:	stp	x4, x5, [x0]
    92fc:	ldrh	w4, [x1, #16]
    9300:	ldrh	w3, [x1, #18]
    9304:	strh	w4, [x0, #16]
    9308:	strh	w3, [x0, #18]
    930c:	ldr	w3, [x1, #20]
    9310:	ldur	d0, [x1, #52]
    9314:	ldr	x4, [x1, #24]
    9318:	ldr	x5, [x1, #40]
    931c:	str	w3, [x0, #20]
    9320:	ldr	x3, [x1, #32]
    9324:	stp	w4, w3, [x0, #24]
    9328:	ldr	w4, [x1, #48]
    932c:	str	d0, [x0, #40]
    9330:	ldrh	w3, [x1, #60]
    9334:	ldrh	w1, [x1, #62]
    9338:	stp	w5, w4, [x0, #32]
    933c:	strh	w3, [x0, #48]
    9340:	strh	w1, [x0, #50]
    9344:	b	92b0 <gelf_update_ehdr@@ELFUTILS_1.0+0x50>
    9348:	mov	w0, #0x21                  	// #33
    934c:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    9350:	mov	w0, #0x0                   	// #0
    9354:	b	92c0 <gelf_update_ehdr@@ELFUTILS_1.0+0x60>
    9358:	mov	w0, #0x0                   	// #0
    935c:	ret
    9360:	mov	w0, #0x1a                  	// #26
    9364:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    9368:	mov	w0, #0x0                   	// #0
    936c:	ldp	x29, x30, [sp], #16
    9370:	ret
    9374:	mov	w0, #0x4                   	// #4
    9378:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    937c:	mov	w0, #0x0                   	// #0
    9380:	b	92c0 <gelf_update_ehdr@@ELFUTILS_1.0+0x60>
    9384:	nop
    9388:	stp	x29, x30, [sp, #-128]!
    938c:	mov	x29, sp
    9390:	stp	x19, x20, [sp, #16]
    9394:	ldr	x20, [x0, #88]
    9398:	cbz	x20, 93ac <gelf_update_ehdr@@ELFUTILS_1.0+0x14c>
    939c:	mov	x0, x20
    93a0:	ldp	x19, x20, [sp, #16]
    93a4:	ldp	x29, x30, [sp], #128
    93a8:	ret
    93ac:	mov	x19, x0
    93b0:	ldr	w0, [x0, #32]
    93b4:	cbnz	w0, 945c <gelf_update_ehdr@@ELFUTILS_1.0+0x1fc>
    93b8:	stp	x21, x22, [sp, #32]
    93bc:	mov	w0, #0x1                   	// #1
    93c0:	str	w0, [x19, #32]
    93c4:	add	x1, sp, #0x78
    93c8:	mov	x0, x19
    93cc:	ldr	x22, [x19, #72]
    93d0:	bl	13338 <gelf_update_verdaux@@ELFUTILS_1.0+0x88>
    93d4:	cbnz	w0, 9488 <gelf_update_ehdr@@ELFUTILS_1.0+0x228>
    93d8:	ldr	x21, [sp, #120]
    93dc:	cbz	x21, 946c <gelf_update_ehdr@@ELFUTILS_1.0+0x20c>
    93e0:	ldr	w0, [x22, #28]
    93e4:	cbz	w0, 946c <gelf_update_ehdr@@ELFUTILS_1.0+0x20c>
    93e8:	mov	x1, #0x7ffffffffffffff     	// #576460752303423487
    93ec:	cmp	x21, x1
    93f0:	b.hi	9494 <gelf_update_ehdr@@ELFUTILS_1.0+0x234>  // b.pmore
    93f4:	ldr	x1, [x19, #48]
    93f8:	mov	w2, w0
    93fc:	cmp	x1, w0, uxtw
    9400:	b.cc	9494 <gelf_update_ehdr@@ELFUTILS_1.0+0x234>  // b.lo, b.ul, b.last
    9404:	stp	x23, x24, [sp, #48]
    9408:	sub	x0, x1, x2
    940c:	lsl	x23, x21, #5
    9410:	cmp	x0, x21, lsl #5
    9414:	b.cc	9490 <gelf_update_ehdr@@ELFUTILS_1.0+0x230>  // b.lo, b.ul, b.last
    9418:	ldr	x24, [x19]
    941c:	cbz	x24, 9538 <gelf_update_ehdr@@ELFUTILS_1.0+0x2d8>
    9420:	cmp	x2, x1
    9424:	b.eq	96d4 <gelf_update_ehdr@@ELFUTILS_1.0+0x474>  // b.none
    9428:	ldr	x1, [x19, #40]
    942c:	ldrb	w0, [x22, #5]
    9430:	add	x2, x2, x1
    9434:	cmp	w0, #0x1
    9438:	add	x24, x24, x2
    943c:	b.ne	94a4 <gelf_update_ehdr@@ELFUTILS_1.0+0x244>  // b.any
    9440:	tst	x24, #0x3
    9444:	b.ne	94a4 <gelf_update_ehdr@@ELFUTILS_1.0+0x244>  // b.any
    9448:	mov	x20, x24
    944c:	ldp	x21, x22, [sp, #32]
    9450:	str	x24, [x19, #88]
    9454:	ldp	x23, x24, [sp, #48]
    9458:	b	939c <gelf_update_ehdr@@ELFUTILS_1.0+0x13c>
    945c:	cmp	w0, #0x1
    9460:	b.ne	947c <gelf_update_ehdr@@ELFUTILS_1.0+0x21c>  // b.any
    9464:	stp	x21, x22, [sp, #32]
    9468:	b	93c4 <gelf_update_ehdr@@ELFUTILS_1.0+0x164>
    946c:	mov	w0, #0x2a                  	// #42
    9470:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    9474:	ldp	x21, x22, [sp, #32]
    9478:	b	939c <gelf_update_ehdr@@ELFUTILS_1.0+0x13c>
    947c:	mov	w0, #0x15                  	// #21
    9480:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    9484:	b	939c <gelf_update_ehdr@@ELFUTILS_1.0+0x13c>
    9488:	ldp	x21, x22, [sp, #32]
    948c:	b	939c <gelf_update_ehdr@@ELFUTILS_1.0+0x13c>
    9490:	ldp	x23, x24, [sp, #48]
    9494:	mov	w0, #0x21                  	// #33
    9498:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    949c:	ldp	x21, x22, [sp, #32]
    94a0:	b	939c <gelf_update_ehdr@@ELFUTILS_1.0+0x13c>
    94a4:	mov	x0, x23
    94a8:	stp	x25, x26, [sp, #64]
    94ac:	bl	30c0 <malloc@plt>
    94b0:	str	x0, [x19, #88]
    94b4:	mov	x25, x0
    94b8:	cbz	x0, 9700 <gelf_update_ehdr@@ELFUTILS_1.0+0x4a0>
    94bc:	ldr	w1, [x19, #120]
    94c0:	mov	w2, #0x81                  	// #129
    94c4:	orr	w1, w1, w2
    94c8:	str	w1, [x19, #120]
    94cc:	ldrb	w1, [x22, #5]
    94d0:	cmp	w1, #0x1
    94d4:	b.eq	96b4 <gelf_update_ehdr@@ELFUTILS_1.0+0x454>  // b.none
    94d8:	ands	x22, x24, #0x3
    94dc:	b.ne	9678 <gelf_update_ehdr@@ELFUTILS_1.0+0x418>  // b.any
    94e0:	cmp	x21, #0x0
    94e4:	add	x3, x24, #0x10
    94e8:	csinc	x21, x21, xzr, ne  // ne = any
    94ec:	add	x2, x25, #0x10
    94f0:	mov	x0, #0x0                   	// #0
    94f4:	mov	x1, #0x0                   	// #0
    94f8:	ldr	q1, [x24, x0]
    94fc:	add	x1, x1, #0x1
    9500:	ldr	q0, [x3, x0]
    9504:	cmp	x1, x21
    9508:	rev32	v1.16b, v1.16b
    950c:	rev32	v0.16b, v0.16b
    9510:	str	q1, [x25, x0]
    9514:	str	q0, [x2, x0]
    9518:	add	x0, x0, #0x20
    951c:	b.cc	94f8 <gelf_update_ehdr@@ELFUTILS_1.0+0x298>  // b.lo, b.ul, b.last
    9520:	mov	x20, x25
    9524:	cbnz	x22, 9698 <gelf_update_ehdr@@ELFUTILS_1.0+0x438>
    9528:	ldp	x21, x22, [sp, #32]
    952c:	ldp	x23, x24, [sp, #48]
    9530:	ldp	x25, x26, [sp, #64]
    9534:	b	939c <gelf_update_ehdr@@ELFUTILS_1.0+0x13c>
    9538:	stp	x25, x26, [sp, #64]
    953c:	ldr	w26, [x19, #36]
    9540:	cmn	w26, #0x1
    9544:	b.eq	96e8 <gelf_update_ehdr@@ELFUTILS_1.0+0x488>  // b.none
    9548:	mov	x0, x23
    954c:	bl	30c0 <malloc@plt>
    9550:	str	x0, [x19, #88]
    9554:	mov	x24, x0
    9558:	str	x0, [sp, #104]
    955c:	cbz	x0, 9700 <gelf_update_ehdr@@ELFUTILS_1.0+0x4a0>
    9560:	ldr	w0, [x19, #120]
    9564:	mov	x25, #0x0                   	// #0
    9568:	stp	x27, x28, [sp, #80]
    956c:	mov	x28, x23
    9570:	orr	w0, w0, #0x80
    9574:	str	w0, [x19, #120]
    9578:	ldr	x1, [x19, #40]
    957c:	ldr	w27, [x22, #28]
    9580:	add	x27, x27, x1
    9584:	mov	x21, x27
    9588:	mov	x3, x21
    958c:	mov	x2, x28
    9590:	mov	x1, x24
    9594:	mov	w0, w26
    9598:	bl	3250 <pread@plt>
    959c:	cmn	x0, #0x1
    95a0:	b.eq	95e4 <gelf_update_ehdr@@ELFUTILS_1.0+0x384>  // b.none
    95a4:	cmp	x0, #0x0
    95a8:	b.le	961c <gelf_update_ehdr@@ELFUTILS_1.0+0x3bc>
    95ac:	add	x25, x25, x0
    95b0:	cmp	x23, x25
    95b4:	b.ls	9620 <gelf_update_ehdr@@ELFUTILS_1.0+0x3c0>  // b.plast
    95b8:	ldr	x0, [sp, #104]
    95bc:	add	x21, x27, x25
    95c0:	sub	x28, x23, x25
    95c4:	mov	x3, x21
    95c8:	add	x24, x0, x25
    95cc:	mov	x2, x28
    95d0:	mov	x1, x24
    95d4:	mov	w0, w26
    95d8:	bl	3250 <pread@plt>
    95dc:	cmn	x0, #0x1
    95e0:	b.ne	95a4 <gelf_update_ehdr@@ELFUTILS_1.0+0x344>  // b.any
    95e4:	bl	3340 <__errno_location@plt>
    95e8:	ldr	w0, [x0]
    95ec:	cmp	w0, #0x4
    95f0:	b.eq	9588 <gelf_update_ehdr@@ELFUTILS_1.0+0x328>  // b.none
    95f4:	mov	w0, #0x13                  	// #19
    95f8:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    95fc:	ldr	x0, [x19, #88]
    9600:	bl	3200 <free@plt>
    9604:	ldp	x21, x22, [sp, #32]
    9608:	ldp	x23, x24, [sp, #48]
    960c:	ldp	x25, x26, [sp, #64]
    9610:	ldp	x27, x28, [sp, #80]
    9614:	str	xzr, [x19, #88]
    9618:	b	939c <gelf_update_ehdr@@ELFUTILS_1.0+0x13c>
    961c:	csel	x25, x25, x0, eq  // eq = none
    9620:	cmp	x23, x25
    9624:	b.ne	95f4 <gelf_update_ehdr@@ELFUTILS_1.0+0x394>  // b.any
    9628:	ldrb	w0, [x22, #5]
    962c:	ldr	x20, [x19, #88]
    9630:	cmp	w0, #0x1
    9634:	b.eq	9664 <gelf_update_ehdr@@ELFUTILS_1.0+0x404>  // b.none
    9638:	ldr	x1, [sp, #120]
    963c:	cbz	x1, 9664 <gelf_update_ehdr@@ELFUTILS_1.0+0x404>
    9640:	add	x1, x20, x1, lsl #5
    9644:	mov	x0, x20
    9648:	ldp	q1, q0, [x0]
    964c:	rev32	v1.16b, v1.16b
    9650:	rev32	v0.16b, v0.16b
    9654:	stp	q1, q0, [x0]
    9658:	add	x0, x0, #0x20
    965c:	cmp	x1, x0
    9660:	b.ne	9648 <gelf_update_ehdr@@ELFUTILS_1.0+0x3e8>  // b.any
    9664:	ldp	x21, x22, [sp, #32]
    9668:	ldp	x23, x24, [sp, #48]
    966c:	ldp	x25, x26, [sp, #64]
    9670:	ldp	x27, x28, [sp, #80]
    9674:	b	939c <gelf_update_ehdr@@ELFUTILS_1.0+0x13c>
    9678:	mov	x0, x23
    967c:	bl	30c0 <malloc@plt>
    9680:	cbz	x0, 9700 <gelf_update_ehdr@@ELFUTILS_1.0+0x4a0>
    9684:	mov	x1, x24
    9688:	mov	x2, x23
    968c:	mov	x24, x0
    9690:	bl	3020 <memcpy@plt>
    9694:	b	94e0 <gelf_update_ehdr@@ELFUTILS_1.0+0x280>
    9698:	mov	x0, x24
    969c:	bl	3200 <free@plt>
    96a0:	ldp	x21, x22, [sp, #32]
    96a4:	ldp	x23, x24, [sp, #48]
    96a8:	ldp	x25, x26, [sp, #64]
    96ac:	ldr	x20, [x19, #88]
    96b0:	b	939c <gelf_update_ehdr@@ELFUTILS_1.0+0x13c>
    96b4:	mov	x2, x23
    96b8:	mov	x1, x24
    96bc:	mov	x20, x0
    96c0:	bl	3020 <memcpy@plt>
    96c4:	ldp	x21, x22, [sp, #32]
    96c8:	ldp	x23, x24, [sp, #48]
    96cc:	ldp	x25, x26, [sp, #64]
    96d0:	b	939c <gelf_update_ehdr@@ELFUTILS_1.0+0x13c>
    96d4:	mov	w0, #0x29                  	// #41
    96d8:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    96dc:	ldp	x21, x22, [sp, #32]
    96e0:	ldp	x23, x24, [sp, #48]
    96e4:	b	939c <gelf_update_ehdr@@ELFUTILS_1.0+0x13c>
    96e8:	mov	w0, #0x1b                  	// #27
    96ec:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    96f0:	ldp	x21, x22, [sp, #32]
    96f4:	ldp	x23, x24, [sp, #48]
    96f8:	ldp	x25, x26, [sp, #64]
    96fc:	b	939c <gelf_update_ehdr@@ELFUTILS_1.0+0x13c>
    9700:	mov	w0, #0x8                   	// #8
    9704:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    9708:	ldp	x21, x22, [sp, #32]
    970c:	ldp	x23, x24, [sp, #48]
    9710:	ldp	x25, x26, [sp, #64]
    9714:	b	939c <gelf_update_ehdr@@ELFUTILS_1.0+0x13c>

0000000000009718 <elf32_getphdr@@ELFUTILS_1.0>:
    9718:	cbz	x0, 9758 <elf32_getphdr@@ELFUTILS_1.0+0x40>
    971c:	ldr	w2, [x0, #24]
    9720:	cmp	w2, #0x3
    9724:	b.ne	9738 <elf32_getphdr@@ELFUTILS_1.0+0x20>  // b.any
    9728:	ldr	x1, [x0, #88]
    972c:	cbz	x1, 9760 <elf32_getphdr@@ELFUTILS_1.0+0x48>
    9730:	mov	x0, x1
    9734:	ret
    9738:	stp	x29, x30, [sp, #-16]!
    973c:	mov	w0, #0x4                   	// #4
    9740:	mov	x29, sp
    9744:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    9748:	mov	x1, #0x0                   	// #0
    974c:	mov	x0, x1
    9750:	ldp	x29, x30, [sp], #16
    9754:	ret
    9758:	mov	x1, #0x0                   	// #0
    975c:	b	9730 <elf32_getphdr@@ELFUTILS_1.0+0x18>
    9760:	b	9388 <gelf_update_ehdr@@ELFUTILS_1.0+0x128>
    9764:	nop
    9768:	stp	x29, x30, [sp, #-128]!
    976c:	mov	x29, sp
    9770:	stp	x19, x20, [sp, #16]
    9774:	ldr	x20, [x0, #88]
    9778:	cbz	x20, 978c <elf32_getphdr@@ELFUTILS_1.0+0x74>
    977c:	mov	x0, x20
    9780:	ldp	x19, x20, [sp, #16]
    9784:	ldp	x29, x30, [sp], #128
    9788:	ret
    978c:	mov	x19, x0
    9790:	ldr	w0, [x0, #32]
    9794:	cbnz	w0, 984c <elf32_getphdr@@ELFUTILS_1.0+0x134>
    9798:	stp	x23, x24, [sp, #48]
    979c:	mov	w0, #0x2                   	// #2
    97a0:	str	w0, [x19, #32]
    97a4:	add	x1, sp, #0x78
    97a8:	mov	x0, x19
    97ac:	ldr	x23, [x19, #72]
    97b0:	bl	13338 <gelf_update_verdaux@@ELFUTILS_1.0+0x88>
    97b4:	cbnz	w0, 987c <elf32_getphdr@@ELFUTILS_1.0+0x164>
    97b8:	stp	x21, x22, [sp, #32]
    97bc:	ldr	x21, [sp, #120]
    97c0:	cbz	x21, 985c <elf32_getphdr@@ELFUTILS_1.0+0x144>
    97c4:	ldr	x0, [x23, #32]
    97c8:	cbz	x0, 985c <elf32_getphdr@@ELFUTILS_1.0+0x144>
    97cc:	mov	x1, #0x2492                	// #9362
    97d0:	movk	x1, #0x9249, lsl #16
    97d4:	movk	x1, #0x4924, lsl #32
    97d8:	movk	x1, #0x492, lsl #48
    97dc:	cmp	x21, x1
    97e0:	b.hi	9884 <elf32_getphdr@@ELFUTILS_1.0+0x16c>  // b.pmore
    97e4:	ldr	x1, [x19, #48]
    97e8:	cmp	x0, x1
    97ec:	b.hi	9884 <elf32_getphdr@@ELFUTILS_1.0+0x16c>  // b.pmore
    97f0:	lsl	x22, x21, #3
    97f4:	sub	x2, x1, x0
    97f8:	sub	x22, x22, x21
    97fc:	cmp	x2, x22, lsl #3
    9800:	lsl	x22, x22, #3
    9804:	b.cc	9884 <elf32_getphdr@@ELFUTILS_1.0+0x16c>  // b.lo, b.ul, b.last
    9808:	ldr	x24, [x19]
    980c:	cbz	x24, 9a78 <elf32_getphdr@@ELFUTILS_1.0+0x360>
    9810:	cmp	x0, x1
    9814:	b.eq	9cdc <elf32_getphdr@@ELFUTILS_1.0+0x5c4>  // b.none
    9818:	ldr	x2, [x19, #40]
    981c:	ldrb	w1, [x23, #5]
    9820:	add	x0, x0, x2
    9824:	cmp	w1, #0x1
    9828:	add	x24, x24, x0
    982c:	b.ne	9898 <elf32_getphdr@@ELFUTILS_1.0+0x180>  // b.any
    9830:	tst	x24, #0x7
    9834:	b.ne	9898 <elf32_getphdr@@ELFUTILS_1.0+0x180>  // b.any
    9838:	mov	x20, x24
    983c:	ldp	x21, x22, [sp, #32]
    9840:	str	x24, [x19, #88]
    9844:	ldp	x23, x24, [sp, #48]
    9848:	b	977c <elf32_getphdr@@ELFUTILS_1.0+0x64>
    984c:	cmp	w0, #0x2
    9850:	b.ne	9870 <elf32_getphdr@@ELFUTILS_1.0+0x158>  // b.any
    9854:	stp	x23, x24, [sp, #48]
    9858:	b	97a4 <elf32_getphdr@@ELFUTILS_1.0+0x8c>
    985c:	mov	w0, #0x2a                  	// #42
    9860:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    9864:	ldp	x21, x22, [sp, #32]
    9868:	ldp	x23, x24, [sp, #48]
    986c:	b	977c <elf32_getphdr@@ELFUTILS_1.0+0x64>
    9870:	mov	w0, #0x15                  	// #21
    9874:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    9878:	b	977c <elf32_getphdr@@ELFUTILS_1.0+0x64>
    987c:	ldp	x23, x24, [sp, #48]
    9880:	b	977c <elf32_getphdr@@ELFUTILS_1.0+0x64>
    9884:	mov	w0, #0x21                  	// #33
    9888:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    988c:	ldp	x21, x22, [sp, #32]
    9890:	ldp	x23, x24, [sp, #48]
    9894:	b	977c <elf32_getphdr@@ELFUTILS_1.0+0x64>
    9898:	mov	x0, x22
    989c:	stp	x25, x26, [sp, #64]
    98a0:	bl	30c0 <malloc@plt>
    98a4:	str	x0, [x19, #88]
    98a8:	mov	x25, x0
    98ac:	cbz	x0, 9d8c <elf32_getphdr@@ELFUTILS_1.0+0x674>
    98b0:	ldr	w1, [x19, #120]
    98b4:	mov	w2, #0x81                  	// #129
    98b8:	orr	w1, w1, w2
    98bc:	str	w1, [x19, #120]
    98c0:	ldrb	w1, [x23, #5]
    98c4:	cmp	w1, #0x1
    98c8:	b.eq	9cbc <elf32_getphdr@@ELFUTILS_1.0+0x5a4>  // b.none
    98cc:	ands	x23, x24, #0x7
    98d0:	b.ne	9c80 <elf32_getphdr@@ELFUTILS_1.0+0x568>  // b.any
    98d4:	add	x0, x25, #0x8
    98d8:	add	x1, x24, #0x70
    98dc:	cmp	x0, x1
    98e0:	add	x2, x24, #0x8
    98e4:	add	x1, x25, #0x70
    98e8:	add	x0, x25, #0x3f
    98ec:	ccmp	x2, x1, #0x2, cc  // cc = lo, ul, last
    98f0:	sub	x0, x0, x24
    98f4:	mov	x1, #0x7e                  	// #126
    98f8:	ccmp	x0, x1, #0x0, cs  // cs = hs, nlast
    98fc:	ccmp	x21, #0x11, #0x0, hi  // hi = pmore
    9900:	b.ls	9cf0 <elf32_getphdr@@ELFUTILS_1.0+0x5d8>  // b.plast
    9904:	cmp	x21, #0x0
    9908:	adrp	x2, 15000 <elf_compress_gnu@@ELFUTILS_1.7+0x1b8>
    990c:	csinc	x4, x21, xzr, ne  // ne = any
    9910:	mov	x0, x24
    9914:	sub	x4, x4, #0x1
    9918:	mov	x1, x25
    991c:	ldr	q7, [x2, #2880]
    9920:	lsr	x2, x4, #1
    9924:	lsl	x3, x2, #3
    9928:	sub	x3, x3, x2
    992c:	add	x3, x24, x3, lsl #4
    9930:	ldr	q0, [x0]
    9934:	mov	x2, x1
    9938:	ldp	q1, q3, [x0, #48]
    993c:	add	x0, x0, #0x70
    9940:	ldur	q4, [x0, #-104]
    9944:	tbl	v0.16b, {v0.16b, v1.16b}, v7.16b
    9948:	ldur	q6, [x0, #-88]
    994c:	ldur	q5, [x0, #-72]
    9950:	rev32	v0.16b, v0.16b
    9954:	ldur	q2, [x0, #-32]
    9958:	ldur	q1, [x0, #-16]
    995c:	str	d0, [x2], #56
    9960:	cmp	x0, x3
    9964:	rev64	v6.16b, v6.16b
    9968:	st1	{v0.d}[1], [x2]
    996c:	rev64	v5.16b, v5.16b
    9970:	rev64	v3.16b, v3.16b
    9974:	rev64	v2.16b, v2.16b
    9978:	rev64	v1.16b, v1.16b
    997c:	stur	q6, [x1, #24]
    9980:	rev64	v0.16b, v4.16b
    9984:	stur	q5, [x1, #40]
    9988:	stp	q3, q2, [x1, #64]
    998c:	add	x1, x1, #0x70
    9990:	stur	q0, [x1, #-104]
    9994:	stur	q1, [x1, #-16]
    9998:	b.ne	9930 <elf32_getphdr@@ELFUTILS_1.0+0x218>  // b.any
    999c:	and	x1, x4, #0xfffffffffffffffe
    99a0:	add	x2, x1, #0x1
    99a4:	lsl	x0, x1, #3
    99a8:	cmp	x21, x2
    99ac:	sub	x0, x0, x1
    99b0:	lsl	x0, x0, #3
    99b4:	add	x2, x24, x0
    99b8:	add	x1, x25, x0
    99bc:	ldr	w3, [x24, x0]
    99c0:	ldp	x9, x7, [x2, #8]
    99c4:	rev	w3, w3
    99c8:	ldp	x6, x5, [x2, #24]
    99cc:	ldr	w8, [x2, #4]
    99d0:	ldr	x4, [x2, #40]
    99d4:	str	w3, [x25, x0]
    99d8:	ldr	x3, [x2, #48]
    99dc:	rev	x9, x9
    99e0:	rev	x7, x7
    99e4:	rev	x6, x6
    99e8:	rev	x2, x3
    99ec:	rev	x5, x5
    99f0:	rev	x4, x4
    99f4:	rev	w3, w8
    99f8:	str	w3, [x1, #4]
    99fc:	stp	x9, x7, [x1, #8]
    9a00:	stp	x6, x5, [x1, #24]
    9a04:	stp	x4, x2, [x1, #40]
    9a08:	b.ls	9a60 <elf32_getphdr@@ELFUTILS_1.0+0x348>  // b.plast
    9a0c:	add	x0, x0, #0x38
    9a10:	add	x2, x24, x0
    9a14:	add	x1, x25, x0
    9a18:	ldr	w3, [x24, x0]
    9a1c:	ldr	w7, [x2, #4]
    9a20:	rev	w3, w3
    9a24:	ldp	x8, x6, [x2, #8]
    9a28:	ldp	x5, x4, [x2, #24]
    9a2c:	str	w3, [x25, x0]
    9a30:	ldp	x3, x0, [x2, #40]
    9a34:	rev	x8, x8
    9a38:	rev	x6, x6
    9a3c:	stp	x8, x6, [x1, #8]
    9a40:	rev	x5, x5
    9a44:	rev	x4, x4
    9a48:	stp	x5, x4, [x1, #24]
    9a4c:	rev	x2, x3
    9a50:	rev	x0, x0
    9a54:	rev	w3, w7
    9a58:	str	w3, [x1, #4]
    9a5c:	stp	x2, x0, [x1, #40]
    9a60:	mov	x20, x25
    9a64:	cbnz	x23, 9ca0 <elf32_getphdr@@ELFUTILS_1.0+0x588>
    9a68:	ldp	x21, x22, [sp, #32]
    9a6c:	ldp	x23, x24, [sp, #48]
    9a70:	ldp	x25, x26, [sp, #64]
    9a74:	b	977c <elf32_getphdr@@ELFUTILS_1.0+0x64>
    9a78:	stp	x25, x26, [sp, #64]
    9a7c:	ldr	w26, [x19, #36]
    9a80:	cmn	w26, #0x1
    9a84:	b.eq	9d74 <elf32_getphdr@@ELFUTILS_1.0+0x65c>  // b.none
    9a88:	mov	x0, x22
    9a8c:	bl	30c0 <malloc@plt>
    9a90:	str	x0, [x19, #88]
    9a94:	mov	x25, x0
    9a98:	cbz	x0, 9d8c <elf32_getphdr@@ELFUTILS_1.0+0x674>
    9a9c:	mov	x24, x0
    9aa0:	ldr	w0, [x19, #120]
    9aa4:	stp	x27, x28, [sp, #80]
    9aa8:	mov	x28, x22
    9aac:	orr	w0, w0, #0x80
    9ab0:	str	w0, [x19, #120]
    9ab4:	mov	x27, #0x0                   	// #0
    9ab8:	ldr	x1, [x19, #40]
    9abc:	ldr	x0, [x23, #32]
    9ac0:	add	x0, x1, x0
    9ac4:	str	x0, [sp, #104]
    9ac8:	mov	x21, x0
    9acc:	mov	x3, x21
    9ad0:	mov	x2, x28
    9ad4:	mov	x1, x24
    9ad8:	mov	w0, w26
    9adc:	bl	3250 <pread@plt>
    9ae0:	cmn	x0, #0x1
    9ae4:	b.eq	9b28 <elf32_getphdr@@ELFUTILS_1.0+0x410>  // b.none
    9ae8:	cmp	x0, #0x0
    9aec:	b.le	9b60 <elf32_getphdr@@ELFUTILS_1.0+0x448>
    9af0:	add	x27, x27, x0
    9af4:	cmp	x22, x27
    9af8:	b.ls	9b64 <elf32_getphdr@@ELFUTILS_1.0+0x44c>  // b.plast
    9afc:	ldr	x0, [sp, #104]
    9b00:	sub	x28, x22, x27
    9b04:	add	x24, x25, x27
    9b08:	mov	x2, x28
    9b0c:	add	x21, x0, x27
    9b10:	mov	x1, x24
    9b14:	mov	x3, x21
    9b18:	mov	w0, w26
    9b1c:	bl	3250 <pread@plt>
    9b20:	cmn	x0, #0x1
    9b24:	b.ne	9ae8 <elf32_getphdr@@ELFUTILS_1.0+0x3d0>  // b.any
    9b28:	bl	3340 <__errno_location@plt>
    9b2c:	ldr	w0, [x0]
    9b30:	cmp	w0, #0x4
    9b34:	b.eq	9acc <elf32_getphdr@@ELFUTILS_1.0+0x3b4>  // b.none
    9b38:	mov	w0, #0x13                  	// #19
    9b3c:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    9b40:	ldr	x0, [x19, #88]
    9b44:	bl	3200 <free@plt>
    9b48:	ldp	x21, x22, [sp, #32]
    9b4c:	ldp	x23, x24, [sp, #48]
    9b50:	ldp	x25, x26, [sp, #64]
    9b54:	ldp	x27, x28, [sp, #80]
    9b58:	str	xzr, [x19, #88]
    9b5c:	b	977c <elf32_getphdr@@ELFUTILS_1.0+0x64>
    9b60:	csel	x27, x27, x0, eq  // eq = none
    9b64:	cmp	x22, x27
    9b68:	b.ne	9b38 <elf32_getphdr@@ELFUTILS_1.0+0x420>  // b.any
    9b6c:	ldrb	w0, [x23, #5]
    9b70:	ldr	x20, [x19, #88]
    9b74:	cmp	w0, #0x1
    9b78:	b.eq	9c6c <elf32_getphdr@@ELFUTILS_1.0+0x554>  // b.none
    9b7c:	ldr	x4, [sp, #120]
    9b80:	cbz	x4, 9c6c <elf32_getphdr@@ELFUTILS_1.0+0x554>
    9b84:	sub	x3, x4, #0x1
    9b88:	cmp	x3, #0xa
    9b8c:	b.ls	9da4 <elf32_getphdr@@ELFUTILS_1.0+0x68c>  // b.plast
    9b90:	lsr	x1, x3, #1
    9b94:	adrp	x2, 15000 <elf_compress_gnu@@ELFUTILS_1.7+0x1b8>
    9b98:	mov	x0, x20
    9b9c:	ldr	q7, [x2, #2880]
    9ba0:	lsl	x2, x1, #3
    9ba4:	sub	x2, x2, x1
    9ba8:	add	x2, x20, x2, lsl #4
    9bac:	ldr	q0, [x0]
    9bb0:	mov	x1, x0
    9bb4:	ldp	q1, q3, [x0, #48]
    9bb8:	ldur	q4, [x0, #8]
    9bbc:	tbl	v0.16b, {v0.16b, v1.16b}, v7.16b
    9bc0:	ldur	q6, [x0, #24]
    9bc4:	ldur	q5, [x0, #40]
    9bc8:	rev32	v0.16b, v0.16b
    9bcc:	ldr	q2, [x0, #80]
    9bd0:	ldr	q1, [x0, #96]
    9bd4:	str	d0, [x1], #56
    9bd8:	rev64	v6.16b, v6.16b
    9bdc:	st1	{v0.d}[1], [x1]
    9be0:	rev64	v5.16b, v5.16b
    9be4:	rev64	v3.16b, v3.16b
    9be8:	rev64	v2.16b, v2.16b
    9bec:	rev64	v1.16b, v1.16b
    9bf0:	stur	q6, [x0, #24]
    9bf4:	rev64	v0.16b, v4.16b
    9bf8:	stur	q5, [x0, #40]
    9bfc:	stp	q3, q2, [x0, #64]
    9c00:	add	x0, x0, #0x70
    9c04:	stur	q0, [x0, #-104]
    9c08:	stur	q1, [x0, #-16]
    9c0c:	cmp	x0, x2
    9c10:	b.ne	9bac <elf32_getphdr@@ELFUTILS_1.0+0x494>  // b.any
    9c14:	and	x3, x3, #0xfffffffffffffffe
    9c18:	lsl	x0, x3, #3
    9c1c:	sub	x0, x0, x3
    9c20:	add	x0, x20, x0, lsl #3
    9c24:	nop
    9c28:	ldur	q2, [x0, #8]
    9c2c:	add	x3, x3, #0x1
    9c30:	ldur	q1, [x0, #24]
    9c34:	cmp	x4, x3
    9c38:	ldur	q0, [x0, #40]
    9c3c:	ldp	w2, w1, [x0]
    9c40:	rev64	v1.16b, v1.16b
    9c44:	rev64	v2.16b, v2.16b
    9c48:	rev	w2, w2
    9c4c:	rev64	v0.16b, v0.16b
    9c50:	rev	w1, w1
    9c54:	stp	w2, w1, [x0]
    9c58:	add	x0, x0, #0x38
    9c5c:	stur	q1, [x0, #-32]
    9c60:	stur	q2, [x0, #-48]
    9c64:	stur	q0, [x0, #-16]
    9c68:	b.hi	9c28 <elf32_getphdr@@ELFUTILS_1.0+0x510>  // b.pmore
    9c6c:	ldp	x21, x22, [sp, #32]
    9c70:	ldp	x23, x24, [sp, #48]
    9c74:	ldp	x25, x26, [sp, #64]
    9c78:	ldp	x27, x28, [sp, #80]
    9c7c:	b	977c <elf32_getphdr@@ELFUTILS_1.0+0x64>
    9c80:	mov	x0, x22
    9c84:	bl	30c0 <malloc@plt>
    9c88:	cbz	x0, 9d8c <elf32_getphdr@@ELFUTILS_1.0+0x674>
    9c8c:	mov	x1, x24
    9c90:	mov	x2, x22
    9c94:	mov	x24, x0
    9c98:	bl	3020 <memcpy@plt>
    9c9c:	b	98d4 <elf32_getphdr@@ELFUTILS_1.0+0x1bc>
    9ca0:	mov	x0, x24
    9ca4:	bl	3200 <free@plt>
    9ca8:	ldp	x21, x22, [sp, #32]
    9cac:	ldp	x23, x24, [sp, #48]
    9cb0:	ldp	x25, x26, [sp, #64]
    9cb4:	ldr	x20, [x19, #88]
    9cb8:	b	977c <elf32_getphdr@@ELFUTILS_1.0+0x64>
    9cbc:	mov	x2, x22
    9cc0:	mov	x1, x24
    9cc4:	mov	x20, x0
    9cc8:	bl	3020 <memcpy@plt>
    9ccc:	ldp	x21, x22, [sp, #32]
    9cd0:	ldp	x23, x24, [sp, #48]
    9cd4:	ldp	x25, x26, [sp, #64]
    9cd8:	b	977c <elf32_getphdr@@ELFUTILS_1.0+0x64>
    9cdc:	mov	w0, #0x29                  	// #41
    9ce0:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    9ce4:	ldp	x21, x22, [sp, #32]
    9ce8:	ldp	x23, x24, [sp, #48]
    9cec:	b	977c <elf32_getphdr@@ELFUTILS_1.0+0x64>
    9cf0:	mov	x1, x24
    9cf4:	mov	x0, x25
    9cf8:	mov	x4, #0x0                   	// #0
    9cfc:	ldr	x3, [x1, #8]
    9d00:	add	x4, x4, #0x1
    9d04:	ldr	w2, [x1]
    9d08:	cmp	x4, x21
    9d0c:	rev	x3, x3
    9d10:	str	x3, [x0, #8]
    9d14:	rev	w2, w2
    9d18:	str	w2, [x0]
    9d1c:	ldr	x2, [x1, #16]
    9d20:	add	x0, x0, #0x38
    9d24:	ldr	w3, [x1, #4]
    9d28:	add	x1, x1, #0x38
    9d2c:	rev	x2, x2
    9d30:	stur	x2, [x0, #-40]
    9d34:	rev	w3, w3
    9d38:	ldur	x2, [x1, #-32]
    9d3c:	rev	x2, x2
    9d40:	stur	x2, [x0, #-32]
    9d44:	ldur	x2, [x1, #-24]
    9d48:	rev	x2, x2
    9d4c:	stur	x2, [x0, #-24]
    9d50:	ldur	x2, [x1, #-16]
    9d54:	stur	w3, [x0, #-52]
    9d58:	rev	x2, x2
    9d5c:	stur	x2, [x0, #-16]
    9d60:	ldur	x2, [x1, #-8]
    9d64:	rev	x2, x2
    9d68:	stur	x2, [x0, #-8]
    9d6c:	b.cc	9cfc <elf32_getphdr@@ELFUTILS_1.0+0x5e4>  // b.lo, b.ul, b.last
    9d70:	b	9a60 <elf32_getphdr@@ELFUTILS_1.0+0x348>
    9d74:	mov	w0, #0x1b                  	// #27
    9d78:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    9d7c:	ldp	x21, x22, [sp, #32]
    9d80:	ldp	x23, x24, [sp, #48]
    9d84:	ldp	x25, x26, [sp, #64]
    9d88:	b	977c <elf32_getphdr@@ELFUTILS_1.0+0x64>
    9d8c:	mov	w0, #0x8                   	// #8
    9d90:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    9d94:	ldp	x21, x22, [sp, #32]
    9d98:	ldp	x23, x24, [sp, #48]
    9d9c:	ldp	x25, x26, [sp, #64]
    9da0:	b	977c <elf32_getphdr@@ELFUTILS_1.0+0x64>
    9da4:	mov	x3, #0x0                   	// #0
    9da8:	b	9c18 <elf32_getphdr@@ELFUTILS_1.0+0x500>
    9dac:	nop

0000000000009db0 <elf64_getphdr@@ELFUTILS_1.0>:
    9db0:	cbz	x0, 9df0 <elf64_getphdr@@ELFUTILS_1.0+0x40>
    9db4:	ldr	w2, [x0, #24]
    9db8:	cmp	w2, #0x3
    9dbc:	b.ne	9dd0 <elf64_getphdr@@ELFUTILS_1.0+0x20>  // b.any
    9dc0:	ldr	x1, [x0, #88]
    9dc4:	cbz	x1, 9df8 <elf64_getphdr@@ELFUTILS_1.0+0x48>
    9dc8:	mov	x0, x1
    9dcc:	ret
    9dd0:	stp	x29, x30, [sp, #-16]!
    9dd4:	mov	w0, #0x4                   	// #4
    9dd8:	mov	x29, sp
    9ddc:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    9de0:	mov	x1, #0x0                   	// #0
    9de4:	mov	x0, x1
    9de8:	ldp	x29, x30, [sp], #16
    9dec:	ret
    9df0:	mov	x1, #0x0                   	// #0
    9df4:	b	9dc8 <elf64_getphdr@@ELFUTILS_1.0+0x18>
    9df8:	b	9768 <elf32_getphdr@@ELFUTILS_1.0+0x50>
    9dfc:	nop

0000000000009e00 <gelf_getphdr@@ELFUTILS_1.0>:
    9e00:	stp	x29, x30, [sp, #-64]!
    9e04:	mov	x29, sp
    9e08:	stp	x21, x22, [sp, #32]
    9e0c:	cbz	x0, 9f68 <gelf_getphdr@@ELFUTILS_1.0+0x168>
    9e10:	mov	w21, w1
    9e14:	ldr	w1, [x0, #24]
    9e18:	stp	x19, x20, [sp, #16]
    9e1c:	mov	x19, x0
    9e20:	cmp	w1, #0x3
    9e24:	b.ne	9f54 <gelf_getphdr@@ELFUTILS_1.0+0x154>  // b.any
    9e28:	mov	x20, x2
    9e2c:	cbz	x2, 9f70 <gelf_getphdr@@ELFUTILS_1.0+0x170>
    9e30:	ldr	w1, [x0, #32]
    9e34:	ldr	x22, [x0, #88]
    9e38:	cmp	w1, #0x1
    9e3c:	b.eq	9ea0 <gelf_getphdr@@ELFUTILS_1.0+0xa0>  // b.none
    9e40:	cbz	x22, 9f40 <gelf_getphdr@@ELFUTILS_1.0+0x140>
    9e44:	mov	x0, x19
    9e48:	add	x1, sp, #0x38
    9e4c:	bl	133d8 <gelf_update_verdaux@@ELFUTILS_1.0+0x128>
    9e50:	cbnz	w0, 9ed0 <gelf_getphdr@@ELFUTILS_1.0+0xd0>
    9e54:	ldr	x0, [sp, #56]
    9e58:	cmp	x0, w21, sxtw
    9e5c:	b.ls	9ed0 <gelf_getphdr@@ELFUTILS_1.0+0xd0>  // b.plast
    9e60:	mov	w1, #0x38                  	// #56
    9e64:	smaddl	x21, w21, w1, x22
    9e68:	mov	x22, x20
    9e6c:	ldp	x0, x1, [x21]
    9e70:	stp	x0, x1, [x20]
    9e74:	ldp	x0, x1, [x21, #16]
    9e78:	stp	x0, x1, [x20, #16]
    9e7c:	ldp	x0, x1, [x21, #32]
    9e80:	stp	x0, x1, [x20, #32]
    9e84:	ldr	x0, [x21, #48]
    9e88:	str	x0, [x20, #48]
    9e8c:	ldp	x19, x20, [sp, #16]
    9e90:	mov	x0, x22
    9e94:	ldp	x21, x22, [sp, #32]
    9e98:	ldp	x29, x30, [sp], #64
    9e9c:	ret
    9ea0:	cbnz	x22, 9eb0 <gelf_getphdr@@ELFUTILS_1.0+0xb0>
    9ea4:	bl	9718 <elf32_getphdr@@ELFUTILS_1.0>
    9ea8:	mov	x22, x0
    9eac:	cbz	x0, 9f4c <gelf_getphdr@@ELFUTILS_1.0+0x14c>
    9eb0:	mov	x0, x19
    9eb4:	add	x1, sp, #0x38
    9eb8:	bl	133d8 <gelf_update_verdaux@@ELFUTILS_1.0+0x128>
    9ebc:	cbnz	w0, 9ed0 <gelf_getphdr@@ELFUTILS_1.0+0xd0>
    9ec0:	ldr	x1, [sp, #56]
    9ec4:	sxtw	x0, w21
    9ec8:	cmp	x1, w21, sxtw
    9ecc:	b.hi	9ef0 <gelf_getphdr@@ELFUTILS_1.0+0xf0>  // b.pmore
    9ed0:	mov	w0, #0x16                  	// #22
    9ed4:	mov	x22, #0x0                   	// #0
    9ed8:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    9edc:	mov	x0, x22
    9ee0:	ldp	x19, x20, [sp, #16]
    9ee4:	ldp	x21, x22, [sp, #32]
    9ee8:	ldp	x29, x30, [sp], #64
    9eec:	ret
    9ef0:	lsl	x0, x0, #5
    9ef4:	add	x1, x22, x0
    9ef8:	ldr	w0, [x22, x0]
    9efc:	mov	x22, x20
    9f00:	ldr	w2, [x1, #20]
    9f04:	str	w0, [x20]
    9f08:	ldr	w0, [x1, #28]
    9f0c:	ldur	q0, [x1, #4]
    9f10:	ldr	w1, [x1, #24]
    9f14:	str	w1, [x20, #4]
    9f18:	uxtl	v1.2d, v0.2s
    9f1c:	stp	x2, x0, [x20, #40]
    9f20:	mov	x0, x22
    9f24:	uxtl2	v0.2d, v0.4s
    9f28:	ldp	x21, x22, [sp, #32]
    9f2c:	stur	q1, [x20, #8]
    9f30:	stur	q0, [x20, #24]
    9f34:	ldp	x19, x20, [sp, #16]
    9f38:	ldp	x29, x30, [sp], #64
    9f3c:	ret
    9f40:	bl	9db0 <elf64_getphdr@@ELFUTILS_1.0>
    9f44:	mov	x22, x0
    9f48:	cbnz	x0, 9e44 <gelf_getphdr@@ELFUTILS_1.0+0x44>
    9f4c:	ldp	x19, x20, [sp, #16]
    9f50:	b	9e90 <gelf_getphdr@@ELFUTILS_1.0+0x90>
    9f54:	mov	w0, #0x4                   	// #4
    9f58:	mov	x22, #0x0                   	// #0
    9f5c:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    9f60:	ldp	x19, x20, [sp, #16]
    9f64:	b	9e90 <gelf_getphdr@@ELFUTILS_1.0+0x90>
    9f68:	mov	x22, #0x0                   	// #0
    9f6c:	b	9e90 <gelf_getphdr@@ELFUTILS_1.0+0x90>
    9f70:	mov	w0, #0x17                  	// #23
    9f74:	mov	x22, #0x0                   	// #0
    9f78:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    9f7c:	ldp	x19, x20, [sp, #16]
    9f80:	b	9e90 <gelf_getphdr@@ELFUTILS_1.0+0x90>
    9f84:	nop

0000000000009f88 <elf32_newphdr@@ELFUTILS_1.0>:
    9f88:	stp	x29, x30, [sp, #-64]!
    9f8c:	mov	x29, sp
    9f90:	stp	x21, x22, [sp, #32]
    9f94:	cbz	x0, a10c <elf32_newphdr@@ELFUTILS_1.0+0x184>
    9f98:	stp	x19, x20, [sp, #16]
    9f9c:	mov	x19, x0
    9fa0:	ldr	w0, [x0, #24]
    9fa4:	cmp	w0, #0x3
    9fa8:	b.ne	a120 <elf32_newphdr@@ELFUTILS_1.0+0x198>  // b.any
    9fac:	mov	x20, x1
    9fb0:	tst	x1, #0xffffffff00000000
    9fb4:	b.ne	a134 <elf32_newphdr@@ELFUTILS_1.0+0x1ac>  // b.any
    9fb8:	ldr	w0, [x19, #32]
    9fbc:	cbz	w0, a038 <elf32_newphdr@@ELFUTILS_1.0+0xb0>
    9fc0:	cmp	w0, #0x1
    9fc4:	b.ne	a198 <elf32_newphdr@@ELFUTILS_1.0+0x210>  // b.any
    9fc8:	ldr	x21, [x19, #72]
    9fcc:	cbz	x21, a188 <elf32_newphdr@@ELFUTILS_1.0+0x200>
    9fd0:	cbnz	x20, a044 <elf32_newphdr@@ELFUTILS_1.0+0xbc>
    9fd4:	ldr	x0, [x19, #88]
    9fd8:	cbz	x0, a108 <elf32_newphdr@@ELFUTILS_1.0+0x180>
    9fdc:	ldr	w1, [x19, #120]
    9fe0:	tbnz	w1, #7, a0fc <elf32_newphdr@@ELFUTILS_1.0+0x174>
    9fe4:	str	xzr, [x19, #88]
    9fe8:	strh	wzr, [x21, #44]
    9fec:	ldr	w0, [x19, #200]
    9ff0:	cbnz	w0, a0d8 <elf32_newphdr@@ELFUTILS_1.0+0x150>
    9ff4:	ldr	x2, [x19, #72]
    9ff8:	mov	w3, #0x20                  	// #32
    9ffc:	ldr	w1, [x19, #56]
    a000:	mov	w0, #0x0                   	// #0
    a004:	mov	x21, #0x0                   	// #0
    a008:	strh	w3, [x2, #42]
    a00c:	orr	w1, w1, #0x1
    a010:	str	w1, [x19, #56]
    a014:	ldr	w1, [x19, #120]
    a018:	orr	w1, w1, #0x1
    a01c:	str	w1, [x19, #120]
    a020:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    a024:	ldp	x19, x20, [sp, #16]
    a028:	mov	x0, x21
    a02c:	ldp	x21, x22, [sp, #32]
    a030:	ldp	x29, x30, [sp], #64
    a034:	ret
    a038:	mov	w0, #0x1                   	// #1
    a03c:	str	w0, [x19, #32]
    a040:	b	9fc8 <elf32_newphdr@@ELFUTILS_1.0+0x40>
    a044:	ldrh	w1, [x21, #44]
    a048:	mov	x0, #0xffff                	// #65535
    a04c:	cmp	x1, x20
    a050:	ccmp	x20, x0, #0x4, eq  // eq = none
    a054:	b.ne	a148 <elf32_newphdr@@ELFUTILS_1.0+0x1c0>  // b.any
    a058:	mov	x0, #0xfffe                	// #65534
    a05c:	cmp	x20, x0
    a060:	b.hi	a1ac <elf32_newphdr@@ELFUTILS_1.0+0x224>  // b.pmore
    a064:	ldr	x0, [x19, #88]
    a068:	lsl	x22, x20, #5
    a06c:	mov	x1, x22
    a070:	bl	3160 <realloc@plt>
    a074:	mov	x21, x0
    a078:	cbz	x0, a0e8 <elf32_newphdr@@ELFUTILS_1.0+0x160>
    a07c:	ldr	x0, [x19, #72]
    a080:	str	x21, [x19, #88]
    a084:	strh	w20, [x0, #44]
    a088:	mov	x2, x22
    a08c:	mov	x0, x21
    a090:	mov	w1, #0x0                   	// #0
    a094:	bl	3100 <memset@plt>
    a098:	ldr	x0, [x19, #72]
    a09c:	adrp	x3, 15000 <elf_compress_gnu@@ELFUTILS_1.7+0x1b8>
    a0a0:	ldr	w1, [x19, #56]
    a0a4:	mov	w2, #0x81                  	// #129
    a0a8:	ldr	x3, [x3, #2448]
    a0ac:	strh	w3, [x0, #42]
    a0b0:	orr	w1, w1, #0x1
    a0b4:	str	w1, [x19, #56]
    a0b8:	ldr	w0, [x19, #120]
    a0bc:	orr	w0, w0, w2
    a0c0:	str	w0, [x19, #120]
    a0c4:	mov	x0, x21
    a0c8:	ldp	x19, x20, [sp, #16]
    a0cc:	ldp	x21, x22, [sp, #32]
    a0d0:	ldp	x29, x30, [sp], #64
    a0d4:	ret
    a0d8:	ldr	x0, [x19, #360]
    a0dc:	str	wzr, [x0, #28]
    a0e0:	b	9ff4 <elf32_newphdr@@ELFUTILS_1.0+0x6c>
    a0e4:	ldr	x23, [sp, #48]
    a0e8:	mov	w0, #0x8                   	// #8
    a0ec:	mov	x21, #0x0                   	// #0
    a0f0:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    a0f4:	ldp	x19, x20, [sp, #16]
    a0f8:	b	a028 <elf32_newphdr@@ELFUTILS_1.0+0xa0>
    a0fc:	bl	3200 <free@plt>
    a100:	ldr	x21, [x19, #72]
    a104:	b	9fe4 <elf32_newphdr@@ELFUTILS_1.0+0x5c>
    a108:	ldp	x19, x20, [sp, #16]
    a10c:	mov	x21, #0x0                   	// #0
    a110:	mov	x0, x21
    a114:	ldp	x21, x22, [sp, #32]
    a118:	ldp	x29, x30, [sp], #64
    a11c:	ret
    a120:	mov	w0, #0x4                   	// #4
    a124:	mov	x21, #0x0                   	// #0
    a128:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    a12c:	ldp	x19, x20, [sp, #16]
    a130:	b	a028 <elf32_newphdr@@ELFUTILS_1.0+0xa0>
    a134:	mov	w0, #0x17                  	// #23
    a138:	mov	x21, #0x0                   	// #0
    a13c:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    a140:	ldp	x19, x20, [sp, #16]
    a144:	b	a028 <elf32_newphdr@@ELFUTILS_1.0+0xa0>
    a148:	ldr	x0, [x19, #88]
    a14c:	cbz	x0, a058 <elf32_newphdr@@ELFUTILS_1.0+0xd0>
    a150:	adrp	x1, 15000 <elf_compress_gnu@@ELFUTILS_1.7+0x1b8>
    a154:	ldrh	w2, [x21, #42]
    a158:	ldr	x1, [x1, #2448]
    a15c:	cmp	x2, x1
    a160:	b.ne	a22c <elf32_newphdr@@ELFUTILS_1.0+0x2a4>  // b.any
    a164:	ldr	w3, [x19, #120]
    a168:	lsl	x2, x20, #5
    a16c:	mov	x21, x0
    a170:	mov	w1, #0x0                   	// #0
    a174:	orr	w3, w3, #0x1
    a178:	str	w3, [x19, #120]
    a17c:	bl	3100 <memset@plt>
    a180:	ldp	x19, x20, [sp, #16]
    a184:	b	a028 <elf32_newphdr@@ELFUTILS_1.0+0xa0>
    a188:	mov	w0, #0x1a                  	// #26
    a18c:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    a190:	ldp	x19, x20, [sp, #16]
    a194:	b	a028 <elf32_newphdr@@ELFUTILS_1.0+0xa0>
    a198:	mov	w0, #0x15                  	// #21
    a19c:	mov	x21, #0x0                   	// #0
    a1a0:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    a1a4:	ldp	x19, x20, [sp, #16]
    a1a8:	b	a028 <elf32_newphdr@@ELFUTILS_1.0+0xa0>
    a1ac:	str	x23, [sp, #48]
    a1b0:	add	x23, x19, #0xd8
    a1b4:	ldr	x21, [x23, #144]
    a1b8:	cbz	x21, a218 <elf32_newphdr@@ELFUTILS_1.0+0x290>
    a1bc:	ldr	x0, [x19, #88]
    a1c0:	lsl	x22, x20, #5
    a1c4:	mov	x1, x22
    a1c8:	bl	3160 <realloc@plt>
    a1cc:	mov	x21, x0
    a1d0:	cbz	x0, a0e4 <elf32_newphdr@@ELFUTILS_1.0+0x15c>
    a1d4:	ldr	w0, [x19, #200]
    a1d8:	str	x21, [x19, #88]
    a1dc:	cbnz	w0, a1f0 <elf32_newphdr@@ELFUTILS_1.0+0x268>
    a1e0:	ldr	w0, [x19, #204]
    a1e4:	cbz	w0, a250 <elf32_newphdr@@ELFUTILS_1.0+0x2c8>
    a1e8:	mov	w0, #0x1                   	// #1
    a1ec:	str	w0, [x19, #200]
    a1f0:	ldr	x2, [x23, #144]
    a1f4:	mov	w1, #0xffffffff            	// #-1
    a1f8:	ldr	w0, [x23, #152]
    a1fc:	str	w20, [x2, #28]
    a200:	orr	w0, w0, #0x1
    a204:	str	w0, [x23, #152]
    a208:	ldr	x23, [sp, #48]
    a20c:	ldr	x0, [x19, #72]
    a210:	strh	w1, [x0, #44]
    a214:	b	a088 <elf32_newphdr@@ELFUTILS_1.0+0x100>
    a218:	mov	w0, #0x20                  	// #32
    a21c:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    a220:	ldp	x19, x20, [sp, #16]
    a224:	ldr	x23, [sp, #48]
    a228:	b	a028 <elf32_newphdr@@ELFUTILS_1.0+0xa0>
    a22c:	adrp	x3, 15000 <elf_compress_gnu@@ELFUTILS_1.7+0x1b8>
    a230:	adrp	x1, 15000 <elf_compress_gnu@@ELFUTILS_1.7+0x1b8>
    a234:	adrp	x0, 15000 <elf_compress_gnu@@ELFUTILS_1.7+0x1b8>
    a238:	add	x3, x3, #0xc00
    a23c:	add	x1, x1, #0xb60
    a240:	add	x0, x0, #0xba0
    a244:	mov	w2, #0xb2                  	// #178
    a248:	str	x23, [sp, #48]
    a24c:	bl	3330 <__assert_fail@plt>
    a250:	adrp	x3, 15000 <elf_compress_gnu@@ELFUTILS_1.7+0x1b8>
    a254:	adrp	x1, 15000 <elf_compress_gnu@@ELFUTILS_1.7+0x1b8>
    a258:	adrp	x0, 15000 <elf_compress_gnu@@ELFUTILS_1.7+0x1b8>
    a25c:	add	x3, x3, #0xc00
    a260:	add	x1, x1, #0xb60
    a264:	add	x0, x0, #0xb70
    a268:	mov	w2, #0x97                  	// #151
    a26c:	bl	3330 <__assert_fail@plt>

000000000000a270 <elf64_newphdr@@ELFUTILS_1.0>:
    a270:	stp	x29, x30, [sp, #-64]!
    a274:	mov	x29, sp
    a278:	stp	x21, x22, [sp, #32]
    a27c:	cbz	x0, a3fc <elf64_newphdr@@ELFUTILS_1.0+0x18c>
    a280:	stp	x19, x20, [sp, #16]
    a284:	mov	x19, x0
    a288:	ldr	w0, [x0, #24]
    a28c:	cmp	w0, #0x3
    a290:	b.ne	a410 <elf64_newphdr@@ELFUTILS_1.0+0x1a0>  // b.any
    a294:	mov	x20, x1
    a298:	tst	x1, #0xffffffff00000000
    a29c:	b.ne	a424 <elf64_newphdr@@ELFUTILS_1.0+0x1b4>  // b.any
    a2a0:	ldr	w0, [x19, #32]
    a2a4:	cbz	w0, a320 <elf64_newphdr@@ELFUTILS_1.0+0xb0>
    a2a8:	cmp	w0, #0x2
    a2ac:	b.ne	a490 <elf64_newphdr@@ELFUTILS_1.0+0x220>  // b.any
    a2b0:	ldr	x22, [x19, #72]
    a2b4:	cbz	x22, a480 <elf64_newphdr@@ELFUTILS_1.0+0x210>
    a2b8:	cbnz	x20, a32c <elf64_newphdr@@ELFUTILS_1.0+0xbc>
    a2bc:	ldr	x0, [x19, #88]
    a2c0:	cbz	x0, a3f8 <elf64_newphdr@@ELFUTILS_1.0+0x188>
    a2c4:	ldr	w1, [x19, #120]
    a2c8:	tbnz	w1, #7, a3ec <elf64_newphdr@@ELFUTILS_1.0+0x17c>
    a2cc:	str	xzr, [x19, #88]
    a2d0:	strh	wzr, [x22, #56]
    a2d4:	ldr	w0, [x19, #200]
    a2d8:	cbnz	w0, a3c8 <elf64_newphdr@@ELFUTILS_1.0+0x158>
    a2dc:	ldr	x2, [x19, #72]
    a2e0:	mov	w3, #0x38                  	// #56
    a2e4:	ldr	w1, [x19, #56]
    a2e8:	mov	w0, #0x0                   	// #0
    a2ec:	mov	x22, #0x0                   	// #0
    a2f0:	strh	w3, [x2, #54]
    a2f4:	orr	w1, w1, #0x1
    a2f8:	str	w1, [x19, #56]
    a2fc:	ldr	w1, [x19, #120]
    a300:	orr	w1, w1, #0x1
    a304:	str	w1, [x19, #120]
    a308:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    a30c:	ldp	x19, x20, [sp, #16]
    a310:	mov	x0, x22
    a314:	ldp	x21, x22, [sp, #32]
    a318:	ldp	x29, x30, [sp], #64
    a31c:	ret
    a320:	mov	w0, #0x2                   	// #2
    a324:	str	w0, [x19, #32]
    a328:	b	a2b0 <elf64_newphdr@@ELFUTILS_1.0+0x40>
    a32c:	ldrh	w1, [x22, #56]
    a330:	mov	x0, #0xffff                	// #65535
    a334:	cmp	x1, x20
    a338:	ccmp	x20, x0, #0x4, eq  // eq = none
    a33c:	b.ne	a438 <elf64_newphdr@@ELFUTILS_1.0+0x1c8>  // b.any
    a340:	mov	x0, #0xfffe                	// #65534
    a344:	cmp	x20, x0
    a348:	b.hi	a4a4 <elf64_newphdr@@ELFUTILS_1.0+0x234>  // b.pmore
    a34c:	lsl	x21, x20, #3
    a350:	ldr	x0, [x19, #88]
    a354:	sub	x21, x21, x20
    a358:	lsl	x21, x21, #3
    a35c:	mov	x1, x21
    a360:	bl	3160 <realloc@plt>
    a364:	mov	x22, x0
    a368:	cbz	x0, a3d8 <elf64_newphdr@@ELFUTILS_1.0+0x168>
    a36c:	ldr	x0, [x19, #72]
    a370:	str	x22, [x19, #88]
    a374:	strh	w20, [x0, #56]
    a378:	mov	x2, x21
    a37c:	mov	x0, x22
    a380:	mov	w1, #0x0                   	// #0
    a384:	bl	3100 <memset@plt>
    a388:	ldr	x0, [x19, #72]
    a38c:	adrp	x3, 15000 <elf_compress_gnu@@ELFUTILS_1.7+0x1b8>
    a390:	ldr	w1, [x19, #56]
    a394:	mov	w2, #0x81                  	// #129
    a398:	ldr	x3, [x3, #2664]
    a39c:	strh	w3, [x0, #54]
    a3a0:	orr	w1, w1, #0x1
    a3a4:	str	w1, [x19, #56]
    a3a8:	ldr	w0, [x19, #120]
    a3ac:	orr	w0, w0, w2
    a3b0:	str	w0, [x19, #120]
    a3b4:	mov	x0, x22
    a3b8:	ldp	x19, x20, [sp, #16]
    a3bc:	ldp	x21, x22, [sp, #32]
    a3c0:	ldp	x29, x30, [sp], #64
    a3c4:	ret
    a3c8:	ldr	x0, [x19, #360]
    a3cc:	str	wzr, [x0, #44]
    a3d0:	b	a2dc <elf64_newphdr@@ELFUTILS_1.0+0x6c>
    a3d4:	ldr	x23, [sp, #48]
    a3d8:	mov	w0, #0x8                   	// #8
    a3dc:	mov	x22, #0x0                   	// #0
    a3e0:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    a3e4:	ldp	x19, x20, [sp, #16]
    a3e8:	b	a310 <elf64_newphdr@@ELFUTILS_1.0+0xa0>
    a3ec:	bl	3200 <free@plt>
    a3f0:	ldr	x22, [x19, #72]
    a3f4:	b	a2cc <elf64_newphdr@@ELFUTILS_1.0+0x5c>
    a3f8:	ldp	x19, x20, [sp, #16]
    a3fc:	mov	x22, #0x0                   	// #0
    a400:	mov	x0, x22
    a404:	ldp	x21, x22, [sp, #32]
    a408:	ldp	x29, x30, [sp], #64
    a40c:	ret
    a410:	mov	w0, #0x4                   	// #4
    a414:	mov	x22, #0x0                   	// #0
    a418:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    a41c:	ldp	x19, x20, [sp, #16]
    a420:	b	a310 <elf64_newphdr@@ELFUTILS_1.0+0xa0>
    a424:	mov	w0, #0x17                  	// #23
    a428:	mov	x22, #0x0                   	// #0
    a42c:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    a430:	ldp	x19, x20, [sp, #16]
    a434:	b	a310 <elf64_newphdr@@ELFUTILS_1.0+0xa0>
    a438:	ldr	x0, [x19, #88]
    a43c:	cbz	x0, a340 <elf64_newphdr@@ELFUTILS_1.0+0xd0>
    a440:	adrp	x1, 15000 <elf_compress_gnu@@ELFUTILS_1.7+0x1b8>
    a444:	ldrh	w2, [x22, #54]
    a448:	ldr	x1, [x1, #2664]
    a44c:	cmp	x2, x1
    a450:	b.ne	a52c <elf64_newphdr@@ELFUTILS_1.0+0x2bc>  // b.any
    a454:	ldr	w3, [x19, #120]
    a458:	lsl	x2, x20, #3
    a45c:	sub	x2, x2, x20
    a460:	mov	x22, x0
    a464:	orr	w3, w3, #0x1
    a468:	str	w3, [x19, #120]
    a46c:	lsl	x2, x2, #3
    a470:	mov	w1, #0x0                   	// #0
    a474:	bl	3100 <memset@plt>
    a478:	ldp	x19, x20, [sp, #16]
    a47c:	b	a310 <elf64_newphdr@@ELFUTILS_1.0+0xa0>
    a480:	mov	w0, #0x1a                  	// #26
    a484:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    a488:	ldp	x19, x20, [sp, #16]
    a48c:	b	a310 <elf64_newphdr@@ELFUTILS_1.0+0xa0>
    a490:	mov	w0, #0x15                  	// #21
    a494:	mov	x22, #0x0                   	// #0
    a498:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    a49c:	ldp	x19, x20, [sp, #16]
    a4a0:	b	a310 <elf64_newphdr@@ELFUTILS_1.0+0xa0>
    a4a4:	str	x23, [sp, #48]
    a4a8:	add	x23, x19, #0xd8
    a4ac:	ldr	x22, [x23, #144]
    a4b0:	cbz	x22, a518 <elf64_newphdr@@ELFUTILS_1.0+0x2a8>
    a4b4:	lsl	x21, x20, #3
    a4b8:	ldr	x0, [x19, #88]
    a4bc:	sub	x21, x21, x20
    a4c0:	lsl	x21, x21, #3
    a4c4:	mov	x1, x21
    a4c8:	bl	3160 <realloc@plt>
    a4cc:	mov	x22, x0
    a4d0:	cbz	x0, a3d4 <elf64_newphdr@@ELFUTILS_1.0+0x164>
    a4d4:	ldr	w0, [x19, #200]
    a4d8:	str	x22, [x19, #88]
    a4dc:	cbnz	w0, a4f0 <elf64_newphdr@@ELFUTILS_1.0+0x280>
    a4e0:	ldr	w0, [x19, #204]
    a4e4:	cbz	w0, a550 <elf64_newphdr@@ELFUTILS_1.0+0x2e0>
    a4e8:	mov	w0, #0x1                   	// #1
    a4ec:	str	w0, [x19, #200]
    a4f0:	ldr	x2, [x23, #144]
    a4f4:	mov	w1, #0xffffffff            	// #-1
    a4f8:	ldr	w0, [x23, #152]
    a4fc:	str	w20, [x2, #44]
    a500:	orr	w0, w0, #0x1
    a504:	str	w0, [x23, #152]
    a508:	ldr	x23, [sp, #48]
    a50c:	ldr	x0, [x19, #72]
    a510:	strh	w1, [x0, #56]
    a514:	b	a378 <elf64_newphdr@@ELFUTILS_1.0+0x108>
    a518:	mov	w0, #0x20                  	// #32
    a51c:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    a520:	ldp	x19, x20, [sp, #16]
    a524:	ldr	x23, [sp, #48]
    a528:	b	a310 <elf64_newphdr@@ELFUTILS_1.0+0xa0>
    a52c:	adrp	x3, 15000 <elf_compress_gnu@@ELFUTILS_1.7+0x1b8>
    a530:	adrp	x1, 15000 <elf_compress_gnu@@ELFUTILS_1.7+0x1b8>
    a534:	adrp	x0, 15000 <elf_compress_gnu@@ELFUTILS_1.7+0x1b8>
    a538:	add	x3, x3, #0xc10
    a53c:	add	x1, x1, #0xb60
    a540:	add	x0, x0, #0xba0
    a544:	mov	w2, #0xb2                  	// #178
    a548:	str	x23, [sp, #48]
    a54c:	bl	3330 <__assert_fail@plt>
    a550:	adrp	x3, 15000 <elf_compress_gnu@@ELFUTILS_1.7+0x1b8>
    a554:	adrp	x1, 15000 <elf_compress_gnu@@ELFUTILS_1.7+0x1b8>
    a558:	adrp	x0, 15000 <elf_compress_gnu@@ELFUTILS_1.7+0x1b8>
    a55c:	add	x3, x3, #0xc10
    a560:	add	x1, x1, #0xb60
    a564:	add	x0, x0, #0xb70
    a568:	mov	w2, #0x97                  	// #151
    a56c:	bl	3330 <__assert_fail@plt>

000000000000a570 <gelf_newphdr@@ELFUTILS_1.0>:
    a570:	ldr	w2, [x0, #32]
    a574:	cmp	w2, #0x1
    a578:	b.eq	a580 <gelf_newphdr@@ELFUTILS_1.0+0x10>  // b.none
    a57c:	b	a270 <elf64_newphdr@@ELFUTILS_1.0>
    a580:	b	9f88 <elf32_newphdr@@ELFUTILS_1.0>
    a584:	nop

000000000000a588 <gelf_update_phdr@@ELFUTILS_1.0>:
    a588:	cbz	x0, a744 <gelf_update_phdr@@ELFUTILS_1.0+0x1bc>
    a58c:	stp	x29, x30, [sp, #-64]!
    a590:	mov	x29, sp
    a594:	stp	x19, x20, [sp, #16]
    a598:	mov	x19, x0
    a59c:	stp	x21, x22, [sp, #32]
    a5a0:	mov	w21, w1
    a5a4:	ldr	w1, [x0, #24]
    a5a8:	cmp	w1, #0x3
    a5ac:	b.ne	a75c <gelf_update_phdr@@ELFUTILS_1.0+0x1d4>  // b.any
    a5b0:	ldr	w1, [x0, #32]
    a5b4:	mov	x20, x2
    a5b8:	ldr	x22, [x0, #88]
    a5bc:	cmp	w1, #0x1
    a5c0:	b.eq	a648 <gelf_update_phdr@@ELFUTILS_1.0+0xc0>  // b.none
    a5c4:	cbz	x22, a74c <gelf_update_phdr@@ELFUTILS_1.0+0x1c4>
    a5c8:	ldr	x0, [x19, #72]
    a5cc:	ldrh	w0, [x0, #56]
    a5d0:	cmp	w0, w21
    a5d4:	b.gt	a600 <gelf_update_phdr@@ELFUTILS_1.0+0x78>
    a5d8:	mov	w1, #0xffff                	// #65535
    a5dc:	cmp	w0, w1
    a5e0:	b.ne	a71c <gelf_update_phdr@@ELFUTILS_1.0+0x194>  // b.any
    a5e4:	add	x1, sp, #0x38
    a5e8:	mov	x0, x19
    a5ec:	bl	13338 <gelf_update_verdaux@@ELFUTILS_1.0+0x88>
    a5f0:	cbnz	w0, a71c <gelf_update_phdr@@ELFUTILS_1.0+0x194>
    a5f4:	ldr	x0, [sp, #56]
    a5f8:	cmp	x0, w21, sxtw
    a5fc:	b.ls	a71c <gelf_update_phdr@@ELFUTILS_1.0+0x194>  // b.plast
    a600:	mov	w2, #0x38                  	// #56
    a604:	ldp	x0, x1, [x20]
    a608:	smaddl	x21, w21, w2, x22
    a60c:	stp	x0, x1, [x21]
    a610:	ldp	x0, x1, [x20, #16]
    a614:	stp	x0, x1, [x21, #16]
    a618:	ldp	x0, x1, [x20, #32]
    a61c:	stp	x0, x1, [x21, #32]
    a620:	ldr	x0, [x20, #48]
    a624:	str	x0, [x21, #48]
    a628:	ldr	w1, [x19, #120]
    a62c:	mov	w0, #0x1                   	// #1
    a630:	ldp	x21, x22, [sp, #32]
    a634:	orr	w1, w1, w0
    a638:	str	w1, [x19, #120]
    a63c:	ldp	x19, x20, [sp, #16]
    a640:	ldp	x29, x30, [sp], #64
    a644:	ret
    a648:	ldr	x1, [x2, #8]
    a64c:	mov	x0, #0xffffffff            	// #4294967295
    a650:	cmp	x1, x0
    a654:	b.hi	a738 <gelf_update_phdr@@ELFUTILS_1.0+0x1b0>  // b.pmore
    a658:	ldr	x1, [x2, #16]
    a65c:	cmp	x1, x0
    a660:	b.hi	a738 <gelf_update_phdr@@ELFUTILS_1.0+0x1b0>  // b.pmore
    a664:	ldr	x1, [x2, #24]
    a668:	cmp	x1, x0
    a66c:	b.hi	a738 <gelf_update_phdr@@ELFUTILS_1.0+0x1b0>  // b.pmore
    a670:	ldr	x1, [x2, #32]
    a674:	cmp	x1, x0
    a678:	b.hi	a738 <gelf_update_phdr@@ELFUTILS_1.0+0x1b0>  // b.pmore
    a67c:	ldr	x1, [x2, #40]
    a680:	cmp	x1, x0
    a684:	b.hi	a738 <gelf_update_phdr@@ELFUTILS_1.0+0x1b0>  // b.pmore
    a688:	ldr	x1, [x2, #48]
    a68c:	cmp	x1, x0
    a690:	b.hi	a738 <gelf_update_phdr@@ELFUTILS_1.0+0x1b0>  // b.pmore
    a694:	cbz	x22, a76c <gelf_update_phdr@@ELFUTILS_1.0+0x1e4>
    a698:	ldr	x0, [x19, #72]
    a69c:	sxtw	x1, w21
    a6a0:	ldrh	w0, [x0, #44]
    a6a4:	cmp	w0, w21
    a6a8:	b.gt	a6d8 <gelf_update_phdr@@ELFUTILS_1.0+0x150>
    a6ac:	mov	w1, #0xffff                	// #65535
    a6b0:	cmp	w0, w1
    a6b4:	b.ne	a71c <gelf_update_phdr@@ELFUTILS_1.0+0x194>  // b.any
    a6b8:	add	x1, sp, #0x38
    a6bc:	mov	x0, x19
    a6c0:	bl	13338 <gelf_update_verdaux@@ELFUTILS_1.0+0x88>
    a6c4:	cbnz	w0, a71c <gelf_update_phdr@@ELFUTILS_1.0+0x194>
    a6c8:	ldr	x0, [sp, #56]
    a6cc:	sxtw	x1, w21
    a6d0:	cmp	x0, w21, sxtw
    a6d4:	b.ls	a71c <gelf_update_phdr@@ELFUTILS_1.0+0x194>  // b.plast
    a6d8:	lsl	x1, x1, #5
    a6dc:	add	x0, x22, x1
    a6e0:	ldp	w4, w2, [x20]
    a6e4:	ldr	x3, [x20, #8]
    a6e8:	str	w4, [x22, x1]
    a6ec:	ldr	x1, [x20, #16]
    a6f0:	str	w3, [x0, #4]
    a6f4:	ldr	x3, [x20, #24]
    a6f8:	str	w1, [x0, #8]
    a6fc:	ldr	x1, [x20, #32]
    a700:	str	w3, [x0, #12]
    a704:	ldr	x3, [x20, #40]
    a708:	str	w1, [x0, #16]
    a70c:	ldr	x1, [x20, #48]
    a710:	stp	w3, w2, [x0, #20]
    a714:	str	w1, [x0, #28]
    a718:	b	a628 <gelf_update_phdr@@ELFUTILS_1.0+0xa0>
    a71c:	mov	w0, #0x16                  	// #22
    a720:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    a724:	mov	w0, #0x0                   	// #0
    a728:	ldp	x19, x20, [sp, #16]
    a72c:	ldp	x21, x22, [sp, #32]
    a730:	ldp	x29, x30, [sp], #64
    a734:	ret
    a738:	mov	w0, #0x21                  	// #33
    a73c:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    a740:	b	a724 <gelf_update_phdr@@ELFUTILS_1.0+0x19c>
    a744:	mov	w0, #0x0                   	// #0
    a748:	ret
    a74c:	bl	9768 <elf32_getphdr@@ELFUTILS_1.0+0x50>
    a750:	mov	x22, x0
    a754:	cbnz	x0, a5c8 <gelf_update_phdr@@ELFUTILS_1.0+0x40>
    a758:	b	a724 <gelf_update_phdr@@ELFUTILS_1.0+0x19c>
    a75c:	mov	w0, #0x4                   	// #4
    a760:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    a764:	mov	w0, #0x0                   	// #0
    a768:	b	a728 <gelf_update_phdr@@ELFUTILS_1.0+0x1a0>
    a76c:	mov	x0, x19
    a770:	bl	9388 <gelf_update_ehdr@@ELFUTILS_1.0+0x128>
    a774:	mov	x22, x0
    a778:	cbnz	x0, a698 <gelf_update_phdr@@ELFUTILS_1.0+0x110>
    a77c:	b	a724 <gelf_update_phdr@@ELFUTILS_1.0+0x19c>

000000000000a780 <elf_getarhdr@@ELFUTILS_1.0>:
    a780:	stp	x29, x30, [sp, #-32]!
    a784:	mov	x29, sp
    a788:	str	x19, [sp, #16]
    a78c:	cbz	x0, a7d8 <elf_getarhdr@@ELFUTILS_1.0+0x58>
    a790:	ldr	x19, [x0, #8]
    a794:	cbz	x19, a7e0 <elf_getarhdr@@ELFUTILS_1.0+0x60>
    a798:	ldr	x0, [x19, #120]
    a79c:	cbz	x0, a7c0 <elf_getarhdr@@ELFUTILS_1.0+0x40>
    a7a0:	ldr	w0, [x19, #24]
    a7a4:	add	x19, x19, #0x78
    a7a8:	cmp	w0, #0x1
    a7ac:	b.ne	a7ec <elf_getarhdr@@ELFUTILS_1.0+0x6c>  // b.any
    a7b0:	mov	x0, x19
    a7b4:	ldr	x19, [sp, #16]
    a7b8:	ldp	x29, x30, [sp], #32
    a7bc:	ret
    a7c0:	mov	x0, x19
    a7c4:	bl	44d8 <elf_fill@@ELFUTILS_1.0+0xe88>
    a7c8:	cbz	w0, a7a0 <elf_getarhdr@@ELFUTILS_1.0+0x20>
    a7cc:	mov	x0, x19
    a7d0:	bl	44d8 <elf_fill@@ELFUTILS_1.0+0xe88>
    a7d4:	cbz	w0, a7a0 <elf_getarhdr@@ELFUTILS_1.0+0x20>
    a7d8:	mov	x19, #0x0                   	// #0
    a7dc:	b	a7b0 <elf_getarhdr@@ELFUTILS_1.0+0x30>
    a7e0:	mov	w0, #0xb                   	// #11
    a7e4:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    a7e8:	b	a7b0 <elf_getarhdr@@ELFUTILS_1.0+0x30>
    a7ec:	adrp	x3, 15000 <elf_compress_gnu@@ELFUTILS_1.7+0x1b8>
    a7f0:	adrp	x1, 15000 <elf_compress_gnu@@ELFUTILS_1.7+0x1b8>
    a7f4:	adrp	x0, 15000 <elf_compress_gnu@@ELFUTILS_1.7+0x1b8>
    a7f8:	add	x3, x3, #0xc30
    a7fc:	add	x1, x1, #0xc20
    a800:	add	x0, x0, #0x8e8
    a804:	mov	w2, #0x46                  	// #70
    a808:	bl	3330 <__assert_fail@plt>
    a80c:	nop

000000000000a810 <elf_getarsym@@ELFUTILS_1.0>:
    a810:	stp	x29, x30, [sp, #-176]!
    a814:	mov	x29, sp
    a818:	stp	x19, x20, [sp, #16]
    a81c:	stp	x25, x26, [sp, #64]
    a820:	mov	x25, x0
    a824:	ldr	w0, [x0, #24]
    a828:	cmp	w0, #0x1
    a82c:	b.ne	a9ac <elf_getarsym@@ELFUTILS_1.0+0x19c>  // b.any
    a830:	mov	x19, x1
    a834:	cbz	x1, a840 <elf_getarsym@@ELFUTILS_1.0+0x30>
    a838:	ldr	x0, [x25, #88]
    a83c:	str	x0, [x1]
    a840:	ldr	x20, [x25, #80]
    a844:	cmn	x20, #0x1
    a848:	b.eq	ac2c <elf_getarsym@@ELFUTILS_1.0+0x41c>  // b.none
    a84c:	cbz	x20, a870 <elf_getarsym@@ELFUTILS_1.0+0x60>
    a850:	cbz	x19, a85c <elf_getarsym@@ELFUTILS_1.0+0x4c>
    a854:	ldr	x0, [x25, #88]
    a858:	str	x0, [x19]
    a85c:	mov	x0, x20
    a860:	ldp	x19, x20, [sp, #16]
    a864:	ldp	x25, x26, [sp, #64]
    a868:	ldp	x29, x30, [sp], #176
    a86c:	ret
    a870:	stp	x21, x22, [sp, #32]
    a874:	mov	x0, #0xffffffffffffffff    	// #-1
    a878:	ldr	x21, [x25]
    a87c:	str	x0, [x25, #80]
    a880:	cbz	x21, a8f8 <elf_getarsym@@ELFUTILS_1.0+0xe8>
    a884:	ldr	x0, [x25, #48]
    a888:	cmp	x0, #0x43
    a88c:	b.ls	a8dc <elf_getarsym@@ELFUTILS_1.0+0xcc>  // b.plast
    a890:	ldr	x26, [x25, #40]
    a894:	add	x26, x26, #0x8
    a898:	add	x26, x21, x26
    a89c:	ldrh	w0, [x26, #58]
    a8a0:	cmp	w0, #0xa60
    a8a4:	b.ne	ac1c <elf_getarsym@@ELFUTILS_1.0+0x40c>  // b.any
    a8a8:	stp	x23, x24, [sp, #48]
    a8ac:	mov	x1, #0x2020202020202020    	// #2314885530818453536
    a8b0:	movk	x1, #0x202f
    a8b4:	ldr	x0, [x26]
    a8b8:	cmp	x0, x1
    a8bc:	b.eq	abd8 <elf_getarsym@@ELFUTILS_1.0+0x3c8>  // b.none
    a8c0:	mov	x1, #0x532f                	// #21295
    a8c4:	movk	x1, #0x4d59, lsl #16
    a8c8:	movk	x1, #0x3436, lsl #32
    a8cc:	movk	x1, #0x202f, lsl #48
    a8d0:	cmp	x0, x1
    a8d4:	b.eq	a9cc <elf_getarsym@@ELFUTILS_1.0+0x1bc>  // b.none
    a8d8:	ldp	x23, x24, [sp, #48]
    a8dc:	mov	w0, #0x12                  	// #18
    a8e0:	mov	x21, #0x0                   	// #0
    a8e4:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    a8e8:	mov	x0, x21
    a8ec:	bl	3200 <free@plt>
    a8f0:	ldp	x21, x22, [sp, #32]
    a8f4:	b	a850 <elf_getarsym@@ELFUTILS_1.0+0x40>
    a8f8:	stp	x23, x24, [sp, #48]
    a8fc:	ldr	w23, [x25, #36]
    a900:	stp	x27, x28, [sp, #80]
    a904:	cmn	w23, #0x1
    a908:	b.eq	aef0 <elf_getarsym@@ELFUTILS_1.0+0x6e0>  // b.none
    a90c:	ldr	x24, [x25, #40]
    a910:	add	x26, x25, #0xa8
    a914:	mov	x27, x26
    a918:	mov	x28, #0x0                   	// #0
    a91c:	add	x0, x24, #0x8
    a920:	mov	x24, #0x3c                  	// #60
    a924:	mov	x22, x0
    a928:	str	x0, [sp, #96]
    a92c:	mov	x3, x22
    a930:	sub	x2, x24, x28
    a934:	mov	x1, x27
    a938:	mov	w0, w23
    a93c:	bl	3250 <pread@plt>
    a940:	cmn	x0, #0x1
    a944:	b.eq	a984 <elf_getarsym@@ELFUTILS_1.0+0x174>  // b.none
    a948:	cmp	x0, #0x0
    a94c:	b.le	a994 <elf_getarsym@@ELFUTILS_1.0+0x184>
    a950:	add	x28, x28, x0
    a954:	cmp	x28, #0x3b
    a958:	b.gt	ac08 <elf_getarsym@@ELFUTILS_1.0+0x3f8>
    a95c:	ldr	x0, [sp, #96]
    a960:	add	x27, x26, x28
    a964:	sub	x2, x24, x28
    a968:	mov	x1, x27
    a96c:	add	x22, x0, x28
    a970:	mov	w0, w23
    a974:	mov	x3, x22
    a978:	bl	3250 <pread@plt>
    a97c:	cmn	x0, #0x1
    a980:	b.ne	a948 <elf_getarsym@@ELFUTILS_1.0+0x138>  // b.any
    a984:	bl	3340 <__errno_location@plt>
    a988:	ldr	w0, [x0]
    a98c:	cmp	w0, #0x4
    a990:	b.eq	a92c <elf_getarsym@@ELFUTILS_1.0+0x11c>  // b.none
    a994:	mov	w0, #0x13                  	// #19
    a998:	mov	x20, #0x0                   	// #0
    a99c:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    a9a0:	ldp	x23, x24, [sp, #48]
    a9a4:	ldp	x27, x28, [sp, #80]
    a9a8:	b	a8e8 <elf_getarsym@@ELFUTILS_1.0+0xd8>
    a9ac:	mov	w0, #0x11                  	// #17
    a9b0:	mov	x20, #0x0                   	// #0
    a9b4:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    a9b8:	mov	x0, x20
    a9bc:	ldp	x19, x20, [sp, #16]
    a9c0:	ldp	x25, x26, [sp, #64]
    a9c4:	ldp	x29, x30, [sp], #176
    a9c8:	ret
    a9cc:	ldr	x1, [x26, #8]
    a9d0:	mov	x0, #0x2020202020202020    	// #2314885530818453536
    a9d4:	cmp	x1, x0
    a9d8:	b.ne	a8d8 <elf_getarsym@@ELFUTILS_1.0+0xc8>  // b.any
    a9dc:	ldr	x24, [x25, #40]
    a9e0:	mov	w0, #0x1                   	// #1
    a9e4:	ldr	x21, [x25]
    a9e8:	mov	x22, #0x8                   	// #8
    a9ec:	stp	x27, x28, [sp, #80]
    a9f0:	str	w0, [sp, #108]
    a9f4:	add	x0, x24, #0x44
    a9f8:	str	x0, [sp, #96]
    a9fc:	cbz	x21, ac3c <elf_getarsym@@ELFUTILS_1.0+0x42c>
    aa00:	ldr	x0, [sp, #96]
    aa04:	add	x27, sp, #0x98
    aa08:	ldr	x0, [x21, x0]
    aa0c:	str	x0, [sp, #152]
    aa10:	ldr	w0, [sp, #108]
    aa14:	cbz	w0, abcc <elf_getarsym@@ELFUTILS_1.0+0x3bc>
    aa18:	ldr	x23, [sp, #152]
    aa1c:	rev	x23, x23
    aa20:	ldr	x0, [x26, #48]
    aa24:	str	x0, [sp, #152]
    aa28:	mov	x1, #0x0                   	// #0
    aa2c:	mov	x0, x27
    aa30:	ldrh	w3, [x26, #56]
    aa34:	mov	w2, #0xa                   	// #10
    aa38:	strh	w3, [sp, #160]
    aa3c:	strb	wzr, [sp, #162]
    aa40:	bl	31f0 <strtol@plt>
    aa44:	mov	x28, x0
    aa48:	ldr	x1, [x25, #48]
    aa4c:	cmp	x1, x0
    aa50:	b.cc	abc0 <elf_getarsym@@ELFUTILS_1.0+0x3b0>  // b.lo, b.ul, b.last
    aa54:	sub	x1, x1, x0
    aa58:	cmp	x1, #0x43
    aa5c:	b.ls	abc0 <elf_getarsym@@ELFUTILS_1.0+0x3b0>  // b.plast
    aa60:	udiv	x0, x0, x22
    aa64:	cmp	x0, x23
    aa68:	b.cc	abc0 <elf_getarsym@@ELFUTILS_1.0+0x3b0>  // b.lo, b.ul, b.last
    aa6c:	add	x0, x23, #0x1
    aa70:	str	x0, [sp, #120]
    aa74:	add	x26, x0, x0, lsl #1
    aa78:	lsl	x0, x26, #3
    aa7c:	str	x0, [sp, #112]
    aa80:	bl	30c0 <malloc@plt>
    aa84:	str	x0, [x25, #80]
    aa88:	mov	x5, x0
    aa8c:	cbz	x0, af30 <elf_getarsym@@ELFUTILS_1.0+0x720>
    aa90:	ldr	x6, [x25]
    aa94:	ldr	x0, [sp, #96]
    aa98:	add	x24, x22, x0
    aa9c:	mul	x22, x23, x22
    aaa0:	cbz	x6, ad1c <elf_getarsym@@ELFUTILS_1.0+0x50c>
    aaa4:	add	x26, x6, x24
    aaa8:	neg	x0, x23
    aaac:	tst	x26, x0
    aab0:	b.ne	ace4 <elf_getarsym@@ELFUTILS_1.0+0x4d4>  // b.any
    aab4:	add	x22, x22, x24
    aab8:	mov	x21, x20
    aabc:	add	x28, x6, x22
    aac0:	mov	x20, x5
    aac4:	mov	x22, x20
    aac8:	mov	x24, #0x0                   	// #0
    aacc:	cbz	x23, ab84 <elf_getarsym@@ELFUTILS_1.0+0x374>
    aad0:	ldr	w0, [sp, #108]
    aad4:	str	x28, [x22]
    aad8:	cbz	w0, abb4 <elf_getarsym@@ELFUTILS_1.0+0x3a4>
    aadc:	ldr	x1, [x26, x24, lsl #3]
    aae0:	rev	x1, x1
    aae4:	str	x1, [x22, #8]
    aae8:	ldrb	w1, [x28]
    aaec:	cbz	x1, ab60 <elf_getarsym@@ELFUTILS_1.0+0x350>
    aaf0:	ldrb	w2, [x28, #1]
    aaf4:	cbz	w2, ab60 <elf_getarsym@@ELFUTILS_1.0+0x350>
    aaf8:	ldrb	w0, [x28, #2]
    aafc:	and	x2, x2, #0xff
    ab00:	add	x1, x2, x1, lsl #4
    ab04:	cbz	w0, ab60 <elf_getarsym@@ELFUTILS_1.0+0x350>
    ab08:	ldrb	w2, [x28, #3]
    ab0c:	and	x0, x0, #0xff
    ab10:	add	x1, x0, x1, lsl #4
    ab14:	cbz	w2, ab60 <elf_getarsym@@ELFUTILS_1.0+0x350>
    ab18:	ldrb	w0, [x28, #4]
    ab1c:	and	x2, x2, #0xff
    ab20:	add	x1, x2, x1, lsl #4
    ab24:	cbz	w0, ab60 <elf_getarsym@@ELFUTILS_1.0+0x350>
    ab28:	ldrb	w2, [x28, #5]
    ab2c:	and	x0, x0, #0xff
    ab30:	add	x1, x0, x1, lsl #4
    ab34:	add	x5, x28, #0x5
    ab38:	cbz	w2, ab5c <elf_getarsym@@ELFUTILS_1.0+0x34c>
    ab3c:	nop
    ab40:	and	x0, x2, #0xff
    ab44:	ldrb	w2, [x5, #1]!
    ab48:	add	x1, x0, x1, lsl #4
    ab4c:	lsr	x0, x1, #24
    ab50:	and	x0, x0, #0xf0
    ab54:	eor	x1, x1, x0
    ab58:	cbnz	w2, ab40 <elf_getarsym@@ELFUTILS_1.0+0x330>
    ab5c:	and	x1, x1, #0xfffffff
    ab60:	str	x1, [x22, #16]
    ab64:	mov	x0, x28
    ab68:	add	x24, x24, #0x1
    ab6c:	mov	w1, #0x0                   	// #0
    ab70:	bl	3210 <rawmemchr@plt>
    ab74:	add	x22, x22, #0x18
    ab78:	cmp	x23, x24
    ab7c:	add	x28, x0, #0x1
    ab80:	b.ne	aad0 <elf_getarsym@@ELFUTILS_1.0+0x2c0>  // b.any
    ab84:	ldr	x0, [sp, #112]
    ab88:	ldp	x23, x24, [sp, #48]
    ab8c:	sub	x26, x0, #0x18
    ab90:	adrp	x0, 15000 <elf_compress_gnu@@ELFUTILS_1.7+0x1b8>
    ab94:	ldp	x27, x28, [sp, #80]
    ab98:	str	xzr, [x20, x26]
    ab9c:	ldr	q0, [x0, #3184]
    aba0:	add	x0, x20, x26
    aba4:	stur	q0, [x0, #8]
    aba8:	ldr	x0, [sp, #120]
    abac:	str	x0, [x25, #88]
    abb0:	b	a8e8 <elf_getarsym@@ELFUTILS_1.0+0xd8>
    abb4:	ldr	w1, [x26, x24, lsl #2]
    abb8:	rev	w1, w1
    abbc:	b	aae4 <elf_getarsym@@ELFUTILS_1.0+0x2d4>
    abc0:	ldp	x23, x24, [sp, #48]
    abc4:	ldp	x27, x28, [sp, #80]
    abc8:	b	a8dc <elf_getarsym@@ELFUTILS_1.0+0xcc>
    abcc:	ldr	w23, [sp, #152]
    abd0:	rev	w23, w23
    abd4:	b	aa20 <elf_getarsym@@ELFUTILS_1.0+0x210>
    abd8:	ldr	x2, [x26, #8]
    abdc:	mov	x1, #0x2020202020202020    	// #2314885530818453536
    abe0:	cmp	x2, x1
    abe4:	b.ne	a8c0 <elf_getarsym@@ELFUTILS_1.0+0xb0>  // b.any
    abe8:	ldr	x24, [x25, #40]
    abec:	mov	x22, #0x4                   	// #4
    abf0:	stp	x27, x28, [sp, #80]
    abf4:	add	x0, x24, #0x44
    abf8:	str	x0, [sp, #96]
    abfc:	str	wzr, [sp, #108]
    ac00:	ldr	x21, [x25]
    ac04:	b	a9fc <elf_getarsym@@ELFUTILS_1.0+0x1ec>
    ac08:	cmp	x28, #0x3c
    ac0c:	b.ne	a994 <elf_getarsym@@ELFUTILS_1.0+0x184>  // b.any
    ac10:	ldp	x23, x24, [sp, #48]
    ac14:	ldp	x27, x28, [sp, #80]
    ac18:	b	a89c <elf_getarsym@@ELFUTILS_1.0+0x8c>
    ac1c:	mov	w0, #0xf                   	// #15
    ac20:	mov	x21, #0x0                   	// #0
    ac24:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    ac28:	b	a8e8 <elf_getarsym@@ELFUTILS_1.0+0xd8>
    ac2c:	mov	w0, #0x12                  	// #18
    ac30:	mov	x20, #0x0                   	// #0
    ac34:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    ac38:	b	a85c <elf_getarsym@@ELFUTILS_1.0+0x4c>
    ac3c:	ldr	x28, [sp, #96]
    ac40:	mov	x24, x22
    ac44:	ldr	w0, [x25, #36]
    ac48:	add	x27, sp, #0x98
    ac4c:	mov	x23, #0x0                   	// #0
    ac50:	str	w0, [sp, #112]
    ac54:	ldr	w0, [sp, #112]
    ac58:	mov	x3, x28
    ac5c:	mov	x2, x24
    ac60:	add	x1, x27, x23
    ac64:	bl	3250 <pread@plt>
    ac68:	cmn	x0, #0x1
    ac6c:	b.eq	acac <elf_getarsym@@ELFUTILS_1.0+0x49c>  // b.none
    ac70:	cmp	x0, #0x0
    ac74:	b.le	acd4 <elf_getarsym@@ELFUTILS_1.0+0x4c4>
    ac78:	add	x23, x23, x0
    ac7c:	cmp	x22, x23
    ac80:	b.ls	acd8 <elf_getarsym@@ELFUTILS_1.0+0x4c8>  // b.plast
    ac84:	ldr	x0, [sp, #96]
    ac88:	sub	x24, x22, x23
    ac8c:	mov	x2, x24
    ac90:	add	x1, x27, x23
    ac94:	add	x28, x0, x23
    ac98:	ldr	w0, [sp, #112]
    ac9c:	mov	x3, x28
    aca0:	bl	3250 <pread@plt>
    aca4:	cmn	x0, #0x1
    aca8:	b.ne	ac70 <elf_getarsym@@ELFUTILS_1.0+0x460>  // b.any
    acac:	bl	3340 <__errno_location@plt>
    acb0:	ldr	w0, [x0]
    acb4:	cmp	w0, #0x4
    acb8:	b.eq	ac54 <elf_getarsym@@ELFUTILS_1.0+0x444>  // b.none
    acbc:	mov	w0, #0x12                  	// #18
    acc0:	mov	x20, #0x0                   	// #0
    acc4:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    acc8:	ldp	x23, x24, [sp, #48]
    accc:	ldp	x27, x28, [sp, #80]
    acd0:	b	a8e8 <elf_getarsym@@ELFUTILS_1.0+0xd8>
    acd4:	b.ne	acbc <elf_getarsym@@ELFUTILS_1.0+0x4ac>  // b.any
    acd8:	cmp	x22, x23
    acdc:	b.eq	aa10 <elf_getarsym@@ELFUTILS_1.0+0x200>  // b.none
    ace0:	b	acbc <elf_getarsym@@ELFUTILS_1.0+0x4ac>
    ace4:	mov	x0, x22
    ace8:	str	x5, [sp, #96]
    acec:	str	x6, [sp, #128]
    acf0:	bl	30c0 <malloc@plt>
    acf4:	mov	x21, x0
    acf8:	cbz	x0, aec8 <elf_getarsym@@ELFUTILS_1.0+0x6b8>
    acfc:	mov	x1, x26
    ad00:	mov	x2, x22
    ad04:	bl	3020 <memcpy@plt>
    ad08:	mov	x20, x21
    ad0c:	mov	x26, x0
    ad10:	ldr	x5, [sp, #96]
    ad14:	ldr	x6, [sp, #128]
    ad18:	b	aab4 <elf_getarsym@@ELFUTILS_1.0+0x2a4>
    ad1c:	mov	x0, x22
    ad20:	str	x5, [sp, #96]
    ad24:	bl	30c0 <malloc@plt>
    ad28:	mov	x21, x0
    ad2c:	ldr	x5, [sp, #96]
    ad30:	cbz	x0, aec8 <elf_getarsym@@ELFUTILS_1.0+0x6b8>
    ad34:	ldr	x2, [sp, #112]
    ad38:	sub	x1, x28, x22
    ad3c:	mov	x0, x5
    ad40:	str	x5, [sp, #96]
    ad44:	str	x1, [sp, #136]
    ad48:	add	x1, x1, x2
    ad4c:	bl	3160 <realloc@plt>
    ad50:	mov	x20, x0
    ad54:	ldr	x5, [sp, #96]
    ad58:	cbz	x0, af10 <elf_getarsym@@ELFUTILS_1.0+0x700>
    ad5c:	ldr	w0, [x25, #36]
    ad60:	mov	x3, x24
    ad64:	mov	x27, x22
    ad68:	mov	x28, x21
    ad6c:	mov	x26, #0x0                   	// #0
    ad70:	str	x20, [x25, #80]
    ad74:	str	w0, [sp, #128]
    ad78:	ldr	w0, [sp, #128]
    ad7c:	mov	x2, x27
    ad80:	mov	x1, x28
    ad84:	str	x3, [sp, #96]
    ad88:	bl	3250 <pread@plt>
    ad8c:	cmn	x0, #0x1
    ad90:	b.eq	add0 <elf_getarsym@@ELFUTILS_1.0+0x5c0>  // b.none
    ad94:	cmp	x0, #0x0
    ad98:	b.le	ae08 <elf_getarsym@@ELFUTILS_1.0+0x5f8>
    ad9c:	add	x26, x26, x0
    ada0:	cmp	x22, x26
    ada4:	b.ls	ae0c <elf_getarsym@@ELFUTILS_1.0+0x5fc>  // b.plast
    ada8:	ldr	w0, [sp, #128]
    adac:	sub	x27, x22, x26
    adb0:	add	x28, x21, x26
    adb4:	add	x3, x24, x26
    adb8:	mov	x2, x27
    adbc:	mov	x1, x28
    adc0:	str	x3, [sp, #96]
    adc4:	bl	3250 <pread@plt>
    adc8:	cmn	x0, #0x1
    adcc:	b.ne	ad94 <elf_getarsym@@ELFUTILS_1.0+0x584>  // b.any
    add0:	bl	3340 <__errno_location@plt>
    add4:	ldr	w0, [x0]
    add8:	ldr	x3, [sp, #96]
    addc:	cmp	w0, #0x4
    ade0:	b.eq	ad78 <elf_getarsym@@ELFUTILS_1.0+0x568>  // b.none
    ade4:	ldr	x0, [x25, #80]
    ade8:	mov	x20, #0x0                   	// #0
    adec:	bl	3200 <free@plt>
    adf0:	str	xzr, [x25, #80]
    adf4:	mov	w0, #0x12                  	// #18
    adf8:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    adfc:	ldp	x23, x24, [sp, #48]
    ae00:	ldp	x27, x28, [sp, #80]
    ae04:	b	a8e8 <elf_getarsym@@ELFUTILS_1.0+0xd8>
    ae08:	csel	x26, x26, x0, eq  // eq = none
    ae0c:	cmp	x22, x26
    ae10:	b.ne	ade4 <elf_getarsym@@ELFUTILS_1.0+0x5d4>  // b.any
    ae14:	ldr	x0, [sp, #112]
    ae18:	add	x27, x22, x24
    ae1c:	mov	x24, x27
    ae20:	mov	x22, #0x0                   	// #0
    ae24:	add	x28, x20, x0
    ae28:	ldr	w0, [x25, #36]
    ae2c:	ldr	x20, [sp, #136]
    ae30:	mov	x1, x28
    ae34:	str	w0, [sp, #128]
    ae38:	ldr	w0, [sp, #128]
    ae3c:	mov	x3, x24
    ae40:	mov	x2, x20
    ae44:	str	x1, [sp, #96]
    ae48:	bl	3250 <pread@plt>
    ae4c:	mov	x26, x0
    ae50:	cmn	x0, #0x1
    ae54:	b.eq	ae9c <elf_getarsym@@ELFUTILS_1.0+0x68c>  // b.none
    ae58:	cmp	x0, #0x0
    ae5c:	b.le	aee8 <elf_getarsym@@ELFUTILS_1.0+0x6d8>
    ae60:	add	x22, x22, x0
    ae64:	ldr	x0, [sp, #136]
    ae68:	cmp	x0, x22
    ae6c:	b.ls	aee0 <elf_getarsym@@ELFUTILS_1.0+0x6d0>  // b.plast
    ae70:	sub	x20, x0, x22
    ae74:	ldr	w0, [sp, #128]
    ae78:	add	x24, x27, x22
    ae7c:	add	x1, x28, x22
    ae80:	mov	x3, x24
    ae84:	mov	x2, x20
    ae88:	str	x1, [sp, #96]
    ae8c:	bl	3250 <pread@plt>
    ae90:	mov	x26, x0
    ae94:	cmn	x0, #0x1
    ae98:	b.ne	ae58 <elf_getarsym@@ELFUTILS_1.0+0x648>  // b.any
    ae9c:	bl	3340 <__errno_location@plt>
    aea0:	ldr	w0, [x0]
    aea4:	ldr	x1, [sp, #96]
    aea8:	cmp	w0, #0x4
    aeac:	b.eq	ae38 <elf_getarsym@@ELFUTILS_1.0+0x628>  // b.none
    aeb0:	ldr	x0, [sp, #136]
    aeb4:	cmp	x0, x26
    aeb8:	b.ne	ade4 <elf_getarsym@@ELFUTILS_1.0+0x5d4>  // b.any
    aebc:	mov	x26, x21
    aec0:	ldr	x20, [x25, #80]
    aec4:	b	aac4 <elf_getarsym@@ELFUTILS_1.0+0x2b4>
    aec8:	mov	w0, #0x8                   	// #8
    aecc:	mov	x21, #0x0                   	// #0
    aed0:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    aed4:	ldp	x23, x24, [sp, #48]
    aed8:	ldp	x27, x28, [sp, #80]
    aedc:	b	a8e8 <elf_getarsym@@ELFUTILS_1.0+0xd8>
    aee0:	mov	x26, x22
    aee4:	b	aeb0 <elf_getarsym@@ELFUTILS_1.0+0x6a0>
    aee8:	csel	x26, x0, x22, ne  // ne = any
    aeec:	b	aeb0 <elf_getarsym@@ELFUTILS_1.0+0x6a0>
    aef0:	adrp	x3, 15000 <elf_compress_gnu@@ELFUTILS_1.7+0x1b8>
    aef4:	adrp	x1, 15000 <elf_compress_gnu@@ELFUTILS_1.7+0x1b8>
    aef8:	adrp	x0, 15000 <elf_compress_gnu@@ELFUTILS_1.7+0x1b8>
    aefc:	add	x3, x3, #0xc80
    af00:	add	x1, x1, #0xc40
    af04:	add	x0, x0, #0xc50
    af08:	mov	w2, #0x72                  	// #114
    af0c:	bl	3330 <__assert_fail@plt>
    af10:	mov	x0, x5
    af14:	bl	3200 <free@plt>
    af18:	str	xzr, [x25, #80]
    af1c:	mov	w0, #0x8                   	// #8
    af20:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    af24:	ldp	x23, x24, [sp, #48]
    af28:	ldp	x27, x28, [sp, #80]
    af2c:	b	a8e8 <elf_getarsym@@ELFUTILS_1.0+0xd8>
    af30:	mov	x20, #0x0                   	// #0
    af34:	mov	x21, #0x0                   	// #0
    af38:	ldp	x23, x24, [sp, #48]
    af3c:	ldp	x27, x28, [sp, #80]
    af40:	b	a8e8 <elf_getarsym@@ELFUTILS_1.0+0xd8>
    af44:	nop

000000000000af48 <elf_rawfile@@ELFUTILS_1.0>:
    af48:	stp	x29, x30, [sp, #-32]!
    af4c:	mov	x29, sp
    af50:	stp	x19, x20, [sp, #16]
    af54:	mov	x20, x1
    af58:	cbz	x0, af98 <elf_rawfile@@ELFUTILS_1.0+0x50>
    af5c:	ldr	x2, [x0]
    af60:	mov	x19, x0
    af64:	cbz	x2, af88 <elf_rawfile@@ELFUTILS_1.0+0x40>
    af68:	cbz	x20, af74 <elf_rawfile@@ELFUTILS_1.0+0x2c>
    af6c:	ldr	x0, [x19, #48]
    af70:	str	x0, [x20]
    af74:	ldr	x0, [x19, #40]
    af78:	add	x0, x2, x0
    af7c:	ldp	x19, x20, [sp, #16]
    af80:	ldp	x29, x30, [sp], #32
    af84:	ret
    af88:	bl	b0e0 <elf_rawfile@@ELFUTILS_1.0+0x198>
    af8c:	cbz	x0, afa0 <elf_rawfile@@ELFUTILS_1.0+0x58>
    af90:	ldr	x2, [x19]
    af94:	b	af68 <elf_rawfile@@ELFUTILS_1.0+0x20>
    af98:	mov	w0, #0x4                   	// #4
    af9c:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    afa0:	mov	x0, #0x0                   	// #0
    afa4:	cbz	x20, af7c <elf_rawfile@@ELFUTILS_1.0+0x34>
    afa8:	str	xzr, [x20]
    afac:	b	af7c <elf_rawfile@@ELFUTILS_1.0+0x34>
    afb0:	stp	x29, x30, [sp, #-48]!
    afb4:	mov	x29, sp
    afb8:	stp	x19, x20, [sp, #16]
    afbc:	mov	x20, x0
    afc0:	ldr	w0, [x0, #24]
    afc4:	cmp	w0, #0x1
    afc8:	b.eq	afd8 <elf_rawfile@@ELFUTILS_1.0+0x90>  // b.none
    afcc:	ldp	x19, x20, [sp, #16]
    afd0:	ldp	x29, x30, [sp], #48
    afd4:	ret
    afd8:	ldr	x19, [x20, #72]
    afdc:	str	x21, [sp, #32]
    afe0:	mov	x21, x1
    afe4:	cbz	x19, aff8 <elf_rawfile@@ELFUTILS_1.0+0xb0>
    afe8:	ldr	x0, [x19]
    afec:	cbz	x0, b008 <elf_rawfile@@ELFUTILS_1.0+0xc0>
    aff0:	ldr	x19, [x19, #16]
    aff4:	cbnz	x19, afe8 <elf_rawfile@@ELFUTILS_1.0+0xa0>
    aff8:	ldp	x19, x20, [sp, #16]
    affc:	ldr	x21, [sp, #32]
    b000:	ldp	x29, x30, [sp], #48
    b004:	ret
    b008:	ldr	x2, [x19, #40]
    b00c:	mov	x0, x19
    b010:	ldr	x1, [x20]
    b014:	sub	x2, x2, x21
    b018:	str	x1, [x19]
    b01c:	mov	x1, x21
    b020:	str	x2, [x19, #40]
    b024:	ldr	w2, [x19, #24]
    b028:	cmp	w2, #0x1
    b02c:	b.eq	b038 <elf_rawfile@@ELFUTILS_1.0+0xf0>  // b.none
    b030:	bl	afb0 <elf_rawfile@@ELFUTILS_1.0+0x68>
    b034:	b	aff0 <elf_rawfile@@ELFUTILS_1.0+0xa8>
    b038:	ldr	x2, [x19, #112]
    b03c:	sub	x2, x2, x21
    b040:	str	x2, [x19, #112]
    b044:	bl	afb0 <elf_rawfile@@ELFUTILS_1.0+0x68>
    b048:	b	aff0 <elf_rawfile@@ELFUTILS_1.0+0xa8>
    b04c:	nop
    b050:	stp	x29, x30, [sp, #-32]!
    b054:	mov	x29, sp
    b058:	str	x19, [sp, #16]
    b05c:	ldr	x19, [x0]
    b060:	cbz	x19, b074 <elf_rawfile@@ELFUTILS_1.0+0x12c>
    b064:	ldr	w0, [x19, #60]
    b068:	cbnz	w0, b080 <elf_rawfile@@ELFUTILS_1.0+0x138>
    b06c:	ldr	x19, [x19, #16]
    b070:	cbnz	x19, b064 <elf_rawfile@@ELFUTILS_1.0+0x11c>
    b074:	ldr	x19, [sp, #16]
    b078:	ldp	x29, x30, [sp], #32
    b07c:	ret
    b080:	ldr	w0, [x19, #24]
    b084:	cmp	w0, #0x1
    b088:	b.ne	b06c <elf_rawfile@@ELFUTILS_1.0+0x124>  // b.any
    b08c:	add	x0, x19, #0x48
    b090:	bl	b050 <elf_rawfile@@ELFUTILS_1.0+0x108>
    b094:	b	b06c <elf_rawfile@@ELFUTILS_1.0+0x124>
    b098:	stp	x29, x30, [sp, #-32]!
    b09c:	mov	x29, sp
    b0a0:	str	x19, [sp, #16]
    b0a4:	ldr	x19, [x0]
    b0a8:	cbz	x19, b0bc <elf_rawfile@@ELFUTILS_1.0+0x174>
    b0ac:	ldr	w0, [x19, #60]
    b0b0:	cbnz	w0, b0c8 <elf_rawfile@@ELFUTILS_1.0+0x180>
    b0b4:	ldr	x19, [x19, #16]
    b0b8:	cbnz	x19, b0ac <elf_rawfile@@ELFUTILS_1.0+0x164>
    b0bc:	ldr	x19, [sp, #16]
    b0c0:	ldp	x29, x30, [sp], #32
    b0c4:	ret
    b0c8:	ldr	w0, [x19, #24]
    b0cc:	cmp	w0, #0x1
    b0d0:	b.ne	b0b4 <elf_rawfile@@ELFUTILS_1.0+0x16c>  // b.any
    b0d4:	add	x0, x19, #0x48
    b0d8:	bl	b098 <elf_rawfile@@ELFUTILS_1.0+0x150>
    b0dc:	b	b0b4 <elf_rawfile@@ELFUTILS_1.0+0x16c>
    b0e0:	stp	x29, x30, [sp, #-224]!
    b0e4:	mov	x29, sp
    b0e8:	stp	x27, x28, [sp, #80]
    b0ec:	ldr	x28, [x0]
    b0f0:	cbz	x28, b104 <elf_rawfile@@ELFUTILS_1.0+0x1bc>
    b0f4:	mov	x0, x28
    b0f8:	ldp	x27, x28, [sp, #80]
    b0fc:	ldp	x29, x30, [sp], #224
    b100:	ret
    b104:	ldr	w1, [x0, #36]
    b108:	stp	x19, x20, [sp, #16]
    b10c:	mov	x19, x0
    b110:	cmn	w1, #0x1
    b114:	b.eq	b448 <elf_rawfile@@ELFUTILS_1.0+0x500>  // b.none
    b118:	ldr	w0, [x0, #24]
    b11c:	stp	x21, x22, [sp, #32]
    b120:	cmp	w0, #0x1
    b124:	b.eq	b23c <elf_rawfile@@ELFUTILS_1.0+0x2f4>  // b.none
    b128:	ldr	x22, [x19, #48]
    b12c:	cmn	x22, #0x1
    b130:	b.eq	b220 <elf_rawfile@@ELFUTILS_1.0+0x2d8>  // b.none
    b134:	mov	x0, x22
    b138:	bl	30c0 <malloc@plt>
    b13c:	mov	x28, x0
    b140:	cbz	x0, b644 <elf_rawfile@@ELFUTILS_1.0+0x6fc>
    b144:	stp	x25, x26, [sp, #64]
    b148:	mov	x25, x22
    b14c:	ldr	w27, [x19, #36]
    b150:	ldr	x26, [x19, #40]
    b154:	stp	x23, x24, [sp, #48]
    b158:	mov	x24, x0
    b15c:	mov	x23, x26
    b160:	mov	x21, #0x0                   	// #0
    b164:	mov	x3, x23
    b168:	mov	x2, x25
    b16c:	mov	x1, x24
    b170:	mov	w0, w27
    b174:	bl	3250 <pread@plt>
    b178:	mov	x20, x0
    b17c:	cmn	x0, #0x1
    b180:	b.eq	b1c4 <elf_rawfile@@ELFUTILS_1.0+0x27c>  // b.none
    b184:	cmp	x0, #0x0
    b188:	b.le	b350 <elf_rawfile@@ELFUTILS_1.0+0x408>
    b18c:	add	x21, x21, x0
    b190:	cmp	x21, x22
    b194:	b.cs	b2fc <elf_rawfile@@ELFUTILS_1.0+0x3b4>  // b.hs, b.nlast
    b198:	add	x23, x26, x21
    b19c:	sub	x25, x22, x21
    b1a0:	add	x24, x28, x21
    b1a4:	mov	x3, x23
    b1a8:	mov	x2, x25
    b1ac:	mov	x1, x24
    b1b0:	mov	w0, w27
    b1b4:	bl	3250 <pread@plt>
    b1b8:	mov	x20, x0
    b1bc:	cmn	x0, #0x1
    b1c0:	b.ne	b184 <elf_rawfile@@ELFUTILS_1.0+0x23c>  // b.any
    b1c4:	bl	3340 <__errno_location@plt>
    b1c8:	ldr	w0, [x0]
    b1cc:	cmp	w0, #0x4
    b1d0:	b.eq	b164 <elf_rawfile@@ELFUTILS_1.0+0x21c>  // b.none
    b1d4:	ldr	x0, [x19, #48]
    b1d8:	cmp	x0, x20
    b1dc:	b.ne	b358 <elf_rawfile@@ELFUTILS_1.0+0x410>  // b.any
    b1e0:	ldr	w0, [x19, #56]
    b1e4:	str	x28, [x19]
    b1e8:	orr	w0, w0, #0x80
    b1ec:	str	w0, [x19, #56]
    b1f0:	ldr	w0, [x19, #24]
    b1f4:	cmp	w0, #0x1
    b1f8:	b.eq	b288 <elf_rawfile@@ELFUTILS_1.0+0x340>  // b.none
    b1fc:	ldp	x21, x22, [sp, #32]
    b200:	mov	x0, x28
    b204:	ldp	x23, x24, [sp, #48]
    b208:	ldp	x25, x26, [sp, #64]
    b20c:	str	xzr, [x19, #40]
    b210:	ldp	x19, x20, [sp, #16]
    b214:	ldp	x27, x28, [sp, #80]
    b218:	ldp	x29, x30, [sp], #224
    b21c:	ret
    b220:	add	x2, sp, #0x60
    b224:	mov	w0, #0x0                   	// #0
    b228:	bl	32f0 <__fxstat@plt>
    b22c:	tbnz	w0, #31, b360 <elf_rawfile@@ELFUTILS_1.0+0x418>
    b230:	ldr	x22, [sp, #144]
    b234:	str	x22, [x19, #48]
    b238:	b	b134 <elf_rawfile@@ELFUTILS_1.0+0x1ec>
    b23c:	ldr	x2, [x19, #72]
    b240:	cbz	x2, b128 <elf_rawfile@@ELFUTILS_1.0+0x1e0>
    b244:	ldr	w0, [x2, #60]
    b248:	cbnz	w0, b260 <elf_rawfile@@ELFUTILS_1.0+0x318>
    b24c:	nop
    b250:	ldr	x2, [x2, #16]
    b254:	cbz	x2, b128 <elf_rawfile@@ELFUTILS_1.0+0x1e0>
    b258:	ldr	w0, [x2, #60]
    b25c:	cbz	w0, b250 <elf_rawfile@@ELFUTILS_1.0+0x308>
    b260:	ldr	w0, [x2, #24]
    b264:	cmp	w0, #0x1
    b268:	b.ne	b250 <elf_rawfile@@ELFUTILS_1.0+0x308>  // b.any
    b26c:	ldr	x3, [x2, #72]
    b270:	cbz	x3, b250 <elf_rawfile@@ELFUTILS_1.0+0x308>
    b274:	ldr	w0, [x3, #60]
    b278:	cbnz	w0, b3b0 <elf_rawfile@@ELFUTILS_1.0+0x468>
    b27c:	ldr	x3, [x3, #16]
    b280:	cbnz	x3, b274 <elf_rawfile@@ELFUTILS_1.0+0x32c>
    b284:	b	b250 <elf_rawfile@@ELFUTILS_1.0+0x308>
    b288:	ldr	x3, [x19, #72]
    b28c:	ldr	x5, [x19, #40]
    b290:	cbz	x3, b2b4 <elf_rawfile@@ELFUTILS_1.0+0x36c>
    b294:	ldr	x0, [x3]
    b298:	cbz	x0, b32c <elf_rawfile@@ELFUTILS_1.0+0x3e4>
    b29c:	ldr	x3, [x3, #16]
    b2a0:	cbnz	x3, b294 <elf_rawfile@@ELFUTILS_1.0+0x34c>
    b2a4:	ldr	w0, [x19, #24]
    b2a8:	cmp	w0, #0x1
    b2ac:	b.ne	b1fc <elf_rawfile@@ELFUTILS_1.0+0x2b4>  // b.any
    b2b0:	ldr	x5, [x19, #40]
    b2b4:	ldr	x0, [x19, #112]
    b2b8:	ldp	x23, x24, [sp, #48]
    b2bc:	sub	x5, x0, x5
    b2c0:	ldp	x25, x26, [sp, #64]
    b2c4:	str	xzr, [x19, #40]
    b2c8:	str	x5, [x19, #112]
    b2cc:	ldr	x1, [x19, #72]
    b2d0:	cbz	x1, b2e4 <elf_rawfile@@ELFUTILS_1.0+0x39c>
    b2d4:	ldr	w0, [x1, #60]
    b2d8:	cbnz	w0, b304 <elf_rawfile@@ELFUTILS_1.0+0x3bc>
    b2dc:	ldr	x1, [x1, #16]
    b2e0:	cbnz	x1, b2d4 <elf_rawfile@@ELFUTILS_1.0+0x38c>
    b2e4:	mov	x0, x28
    b2e8:	ldp	x19, x20, [sp, #16]
    b2ec:	ldp	x21, x22, [sp, #32]
    b2f0:	ldp	x27, x28, [sp, #80]
    b2f4:	ldp	x29, x30, [sp], #224
    b2f8:	ret
    b2fc:	mov	x20, x21
    b300:	b	b1d4 <elf_rawfile@@ELFUTILS_1.0+0x28c>
    b304:	ldr	w0, [x1, #24]
    b308:	cmp	w0, #0x1
    b30c:	b.ne	b2dc <elf_rawfile@@ELFUTILS_1.0+0x394>  // b.any
    b310:	ldr	x2, [x1, #72]
    b314:	cbz	x2, b2dc <elf_rawfile@@ELFUTILS_1.0+0x394>
    b318:	ldr	w0, [x2, #60]
    b31c:	cbnz	w0, b3d8 <elf_rawfile@@ELFUTILS_1.0+0x490>
    b320:	ldr	x2, [x2, #16]
    b324:	cbnz	x2, b318 <elf_rawfile@@ELFUTILS_1.0+0x3d0>
    b328:	b	b2dc <elf_rawfile@@ELFUTILS_1.0+0x394>
    b32c:	ldr	x0, [x3, #40]
    b330:	str	x28, [x3]
    b334:	ldr	w1, [x3, #24]
    b338:	sub	x0, x0, x5
    b33c:	str	x0, [x3, #40]
    b340:	cmp	w1, #0x1
    b344:	b.eq	b384 <elf_rawfile@@ELFUTILS_1.0+0x43c>  // b.none
    b348:	ldr	x28, [x19]
    b34c:	b	b29c <elf_rawfile@@ELFUTILS_1.0+0x354>
    b350:	csel	x20, x0, x21, ne  // ne = any
    b354:	b	b1d4 <elf_rawfile@@ELFUTILS_1.0+0x28c>
    b358:	ldp	x23, x24, [sp, #48]
    b35c:	ldp	x25, x26, [sp, #64]
    b360:	mov	w0, #0x13                  	// #19
    b364:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    b368:	mov	x0, x28
    b36c:	bl	3200 <free@plt>
    b370:	ldr	w0, [x19, #24]
    b374:	ldr	x28, [x19]
    b378:	cmp	w0, #0x1
    b37c:	b.ne	b2e4 <elf_rawfile@@ELFUTILS_1.0+0x39c>  // b.any
    b380:	b	b2cc <elf_rawfile@@ELFUTILS_1.0+0x384>
    b384:	ldr	x0, [x3, #112]
    b388:	ldr	x4, [x3, #72]
    b38c:	sub	x0, x0, x5
    b390:	str	x0, [x3, #112]
    b394:	cbz	x4, b348 <elf_rawfile@@ELFUTILS_1.0+0x400>
    b398:	ldr	x0, [x4]
    b39c:	cbz	x0, b400 <elf_rawfile@@ELFUTILS_1.0+0x4b8>
    b3a0:	ldr	x4, [x4, #16]
    b3a4:	cbnz	x4, b398 <elf_rawfile@@ELFUTILS_1.0+0x450>
    b3a8:	ldr	x28, [x19]
    b3ac:	b	b29c <elf_rawfile@@ELFUTILS_1.0+0x354>
    b3b0:	ldr	w0, [x3, #24]
    b3b4:	cmp	w0, #0x1
    b3b8:	b.ne	b27c <elf_rawfile@@ELFUTILS_1.0+0x334>  // b.any
    b3bc:	ldr	x4, [x3, #72]
    b3c0:	cbz	x4, b27c <elf_rawfile@@ELFUTILS_1.0+0x334>
    b3c4:	ldr	w0, [x4, #60]
    b3c8:	cbnz	w0, b480 <elf_rawfile@@ELFUTILS_1.0+0x538>
    b3cc:	ldr	x4, [x4, #16]
    b3d0:	cbnz	x4, b3c4 <elf_rawfile@@ELFUTILS_1.0+0x47c>
    b3d4:	b	b27c <elf_rawfile@@ELFUTILS_1.0+0x334>
    b3d8:	ldr	w0, [x2, #24]
    b3dc:	cmp	w0, #0x1
    b3e0:	b.ne	b320 <elf_rawfile@@ELFUTILS_1.0+0x3d8>  // b.any
    b3e4:	ldr	x3, [x2, #72]
    b3e8:	cbz	x3, b320 <elf_rawfile@@ELFUTILS_1.0+0x3d8>
    b3ec:	ldr	w0, [x3, #60]
    b3f0:	cbnz	w0, b458 <elf_rawfile@@ELFUTILS_1.0+0x510>
    b3f4:	ldr	x3, [x3, #16]
    b3f8:	cbnz	x3, b3ec <elf_rawfile@@ELFUTILS_1.0+0x4a4>
    b3fc:	b	b320 <elf_rawfile@@ELFUTILS_1.0+0x3d8>
    b400:	ldr	x0, [x4, #40]
    b404:	ldr	x1, [x3]
    b408:	sub	x0, x0, x5
    b40c:	str	x1, [x4]
    b410:	str	x0, [x4, #40]
    b414:	ldr	w0, [x4, #24]
    b418:	cmp	w0, #0x1
    b41c:	b.ne	b3a0 <elf_rawfile@@ELFUTILS_1.0+0x458>  // b.any
    b420:	ldr	x0, [x4, #112]
    b424:	ldr	x6, [x4, #72]
    b428:	sub	x0, x0, x5
    b42c:	str	x0, [x4, #112]
    b430:	cbz	x6, b3a0 <elf_rawfile@@ELFUTILS_1.0+0x458>
    b434:	ldr	x0, [x6]
    b438:	cbz	x0, b4a8 <elf_rawfile@@ELFUTILS_1.0+0x560>
    b43c:	ldr	x6, [x6, #16]
    b440:	cbnz	x6, b434 <elf_rawfile@@ELFUTILS_1.0+0x4ec>
    b444:	b	b3a0 <elf_rawfile@@ELFUTILS_1.0+0x458>
    b448:	mov	w0, #0x4                   	// #4
    b44c:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    b450:	ldp	x19, x20, [sp, #16]
    b454:	b	b0f4 <elf_rawfile@@ELFUTILS_1.0+0x1ac>
    b458:	ldr	w0, [x3, #24]
    b45c:	cmp	w0, #0x1
    b460:	b.ne	b3f4 <elf_rawfile@@ELFUTILS_1.0+0x4ac>  // b.any
    b464:	ldr	x4, [x3, #72]
    b468:	cbz	x4, b3f4 <elf_rawfile@@ELFUTILS_1.0+0x4ac>
    b46c:	ldr	w0, [x4, #60]
    b470:	cbnz	w0, b4f0 <elf_rawfile@@ELFUTILS_1.0+0x5a8>
    b474:	ldr	x4, [x4, #16]
    b478:	cbnz	x4, b46c <elf_rawfile@@ELFUTILS_1.0+0x524>
    b47c:	b	b3f4 <elf_rawfile@@ELFUTILS_1.0+0x4ac>
    b480:	ldr	w0, [x4, #24]
    b484:	cmp	w0, #0x1
    b488:	b.ne	b3cc <elf_rawfile@@ELFUTILS_1.0+0x484>  // b.any
    b48c:	ldr	x5, [x4, #72]
    b490:	cbz	x5, b3cc <elf_rawfile@@ELFUTILS_1.0+0x484>
    b494:	ldr	w0, [x5, #60]
    b498:	cbnz	w0, b518 <elf_rawfile@@ELFUTILS_1.0+0x5d0>
    b49c:	ldr	x5, [x5, #16]
    b4a0:	cbnz	x5, b494 <elf_rawfile@@ELFUTILS_1.0+0x54c>
    b4a4:	b	b3cc <elf_rawfile@@ELFUTILS_1.0+0x484>
    b4a8:	ldr	x0, [x6, #40]
    b4ac:	ldr	x1, [x4]
    b4b0:	sub	x0, x0, x5
    b4b4:	str	x1, [x6]
    b4b8:	str	x0, [x6, #40]
    b4bc:	ldr	w0, [x6, #24]
    b4c0:	cmp	w0, #0x1
    b4c4:	b.ne	b43c <elf_rawfile@@ELFUTILS_1.0+0x4f4>  // b.any
    b4c8:	ldr	x0, [x6, #112]
    b4cc:	ldr	x7, [x6, #72]
    b4d0:	sub	x0, x0, x5
    b4d4:	str	x0, [x6, #112]
    b4d8:	cbz	x7, b43c <elf_rawfile@@ELFUTILS_1.0+0x4f4>
    b4dc:	ldr	x0, [x7]
    b4e0:	cbz	x0, b540 <elf_rawfile@@ELFUTILS_1.0+0x5f8>
    b4e4:	ldr	x7, [x7, #16]
    b4e8:	cbnz	x7, b4dc <elf_rawfile@@ELFUTILS_1.0+0x594>
    b4ec:	b	b43c <elf_rawfile@@ELFUTILS_1.0+0x4f4>
    b4f0:	ldr	w0, [x4, #24]
    b4f4:	cmp	w0, #0x1
    b4f8:	b.ne	b474 <elf_rawfile@@ELFUTILS_1.0+0x52c>  // b.any
    b4fc:	ldr	x5, [x4, #72]
    b500:	cbz	x5, b474 <elf_rawfile@@ELFUTILS_1.0+0x52c>
    b504:	ldr	w0, [x5, #60]
    b508:	cbnz	w0, b588 <elf_rawfile@@ELFUTILS_1.0+0x640>
    b50c:	ldr	x5, [x5, #16]
    b510:	cbnz	x5, b504 <elf_rawfile@@ELFUTILS_1.0+0x5bc>
    b514:	b	b474 <elf_rawfile@@ELFUTILS_1.0+0x52c>
    b518:	ldr	w0, [x5, #24]
    b51c:	cmp	w0, #0x1
    b520:	b.ne	b49c <elf_rawfile@@ELFUTILS_1.0+0x554>  // b.any
    b524:	ldr	x6, [x5, #72]
    b528:	cbz	x6, b49c <elf_rawfile@@ELFUTILS_1.0+0x554>
    b52c:	ldr	w0, [x6, #60]
    b530:	cbnz	w0, b5a0 <elf_rawfile@@ELFUTILS_1.0+0x658>
    b534:	ldr	x6, [x6, #16]
    b538:	cbnz	x6, b52c <elf_rawfile@@ELFUTILS_1.0+0x5e4>
    b53c:	b	b49c <elf_rawfile@@ELFUTILS_1.0+0x554>
    b540:	ldr	x0, [x7, #40]
    b544:	ldr	x1, [x6]
    b548:	sub	x0, x0, x5
    b54c:	str	x1, [x7]
    b550:	str	x0, [x7, #40]
    b554:	ldr	w0, [x7, #24]
    b558:	cmp	w0, #0x1
    b55c:	b.ne	b4e4 <elf_rawfile@@ELFUTILS_1.0+0x59c>  // b.any
    b560:	ldr	x0, [x7, #112]
    b564:	ldr	x8, [x7, #72]
    b568:	sub	x0, x0, x5
    b56c:	str	x0, [x7, #112]
    b570:	cbz	x8, b4e4 <elf_rawfile@@ELFUTILS_1.0+0x59c>
    b574:	ldr	x0, [x8]
    b578:	cbz	x0, b5b8 <elf_rawfile@@ELFUTILS_1.0+0x670>
    b57c:	ldr	x8, [x8, #16]
    b580:	cbnz	x8, b574 <elf_rawfile@@ELFUTILS_1.0+0x62c>
    b584:	b	b4e4 <elf_rawfile@@ELFUTILS_1.0+0x59c>
    b588:	ldr	w0, [x5, #24]
    b58c:	cmp	w0, #0x1
    b590:	b.ne	b50c <elf_rawfile@@ELFUTILS_1.0+0x5c4>  // b.any
    b594:	add	x0, x5, #0x48
    b598:	bl	b098 <elf_rawfile@@ELFUTILS_1.0+0x150>
    b59c:	b	b50c <elf_rawfile@@ELFUTILS_1.0+0x5c4>
    b5a0:	ldr	w0, [x6, #24]
    b5a4:	cmp	w0, #0x1
    b5a8:	b.ne	b534 <elf_rawfile@@ELFUTILS_1.0+0x5ec>  // b.any
    b5ac:	add	x0, x6, #0x48
    b5b0:	bl	b050 <elf_rawfile@@ELFUTILS_1.0+0x108>
    b5b4:	b	b534 <elf_rawfile@@ELFUTILS_1.0+0x5ec>
    b5b8:	ldr	x0, [x8, #40]
    b5bc:	ldr	x1, [x7]
    b5c0:	sub	x0, x0, x5
    b5c4:	str	x1, [x8]
    b5c8:	str	x0, [x8, #40]
    b5cc:	ldr	w0, [x8, #24]
    b5d0:	cmp	w0, #0x1
    b5d4:	b.ne	b57c <elf_rawfile@@ELFUTILS_1.0+0x634>  // b.any
    b5d8:	ldr	x0, [x8, #112]
    b5dc:	ldr	x9, [x8, #72]
    b5e0:	sub	x0, x0, x5
    b5e4:	str	x0, [x8, #112]
    b5e8:	cbz	x9, b57c <elf_rawfile@@ELFUTILS_1.0+0x634>
    b5ec:	ldr	x0, [x9]
    b5f0:	cbz	x0, b600 <elf_rawfile@@ELFUTILS_1.0+0x6b8>
    b5f4:	ldr	x9, [x9, #16]
    b5f8:	cbnz	x9, b5ec <elf_rawfile@@ELFUTILS_1.0+0x6a4>
    b5fc:	b	b57c <elf_rawfile@@ELFUTILS_1.0+0x634>
    b600:	ldr	x2, [x9, #40]
    b604:	mov	x0, x9
    b608:	ldr	x1, [x8]
    b60c:	sub	x2, x2, x5
    b610:	str	x1, [x9]
    b614:	mov	x1, x5
    b618:	str	x2, [x9, #40]
    b61c:	ldr	w2, [x9, #24]
    b620:	cmp	w2, #0x1
    b624:	b.eq	b630 <elf_rawfile@@ELFUTILS_1.0+0x6e8>  // b.none
    b628:	bl	afb0 <elf_rawfile@@ELFUTILS_1.0+0x68>
    b62c:	b	b5f4 <elf_rawfile@@ELFUTILS_1.0+0x6ac>
    b630:	ldr	x2, [x9, #112]
    b634:	sub	x2, x2, x5
    b638:	str	x2, [x9, #112]
    b63c:	bl	afb0 <elf_rawfile@@ELFUTILS_1.0+0x68>
    b640:	b	b5f4 <elf_rawfile@@ELFUTILS_1.0+0x6ac>
    b644:	mov	w0, #0x8                   	// #8
    b648:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    b64c:	ldr	w0, [x19, #24]
    b650:	ldr	x28, [x19]
    b654:	b	b378 <elf_rawfile@@ELFUTILS_1.0+0x430>

000000000000b658 <elf_cntl@@ELFUTILS_1.0>:
    b658:	stp	x29, x30, [sp, #-32]!
    b65c:	mov	x29, sp
    b660:	stp	x19, x20, [sp, #16]
    b664:	cbz	x0, b6d4 <elf_cntl@@ELFUTILS_1.0+0x7c>
    b668:	ldr	w20, [x0, #36]
    b66c:	mov	x19, x0
    b670:	cmn	w20, #0x1
    b674:	b.eq	b6dc <elf_cntl@@ELFUTILS_1.0+0x84>  // b.none
    b678:	cmp	w1, #0x6
    b67c:	b.eq	b6b8 <elf_cntl@@ELFUTILS_1.0+0x60>  // b.none
    b680:	cmp	w1, #0x7
    b684:	b.eq	b6a4 <elf_cntl@@ELFUTILS_1.0+0x4c>  // b.none
    b688:	mov	w20, #0xffffffff            	// #-1
    b68c:	mov	w0, #0xd                   	// #13
    b690:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    b694:	mov	w0, w20
    b698:	ldp	x19, x20, [sp, #16]
    b69c:	ldp	x29, x30, [sp], #32
    b6a0:	ret
    b6a4:	ldr	x1, [x0]
    b6a8:	cbnz	x1, b6b8 <elf_cntl@@ELFUTILS_1.0+0x60>
    b6ac:	bl	b0e0 <elf_rawfile@@ELFUTILS_1.0+0x198>
    b6b0:	cbz	x0, b6d4 <elf_cntl@@ELFUTILS_1.0+0x7c>
    b6b4:	nop
    b6b8:	mov	w0, #0xffffffff            	// #-1
    b6bc:	mov	w20, #0x0                   	// #0
    b6c0:	str	w0, [x19, #36]
    b6c4:	mov	w0, w20
    b6c8:	ldp	x19, x20, [sp, #16]
    b6cc:	ldp	x29, x30, [sp], #32
    b6d0:	ret
    b6d4:	mov	w20, #0xffffffff            	// #-1
    b6d8:	b	b6c4 <elf_cntl@@ELFUTILS_1.0+0x6c>
    b6dc:	mov	w0, #0x4                   	// #4
    b6e0:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    b6e4:	b	b6c4 <elf_cntl@@ELFUTILS_1.0+0x6c>

000000000000b6e8 <elf_getscn@@ELFUTILS_1.0>:
    b6e8:	cbz	x0, b7e8 <elf_getscn@@ELFUTILS_1.0+0x100>
    b6ec:	stp	x29, x30, [sp, #-48]!
    b6f0:	mov	x29, sp
    b6f4:	str	x21, [sp, #32]
    b6f8:	mov	x21, x0
    b6fc:	ldr	w0, [x0, #24]
    b700:	cmp	w0, #0x3
    b704:	b.ne	b7d8 <elf_getscn@@ELFUTILS_1.0+0xf0>  // b.any
    b708:	stp	x19, x20, [sp, #16]
    b70c:	mov	x20, x1
    b710:	add	x19, x21, #0xc8
    b714:	cbnz	x1, b784 <elf_getscn@@ELFUTILS_1.0+0x9c>
    b718:	ldr	w0, [x21, #200]
    b71c:	cbnz	w0, b784 <elf_getscn@@ELFUTILS_1.0+0x9c>
    b720:	ldr	w0, [x21, #204]
    b724:	cbz	w0, b784 <elf_getscn@@ELFUTILS_1.0+0x9c>
    b728:	ldr	w0, [x21, #32]
    b72c:	cmp	w0, #0x1
    b730:	b.eq	b7f0 <elf_getscn@@ELFUTILS_1.0+0x108>  // b.none
    b734:	mov	x1, #0x40                  	// #64
    b738:	mov	x0, #0x1                   	// #1
    b73c:	bl	3140 <calloc@plt>
    b740:	str	x0, [x21, #360]
    b744:	add	x1, x21, #0xd8
    b748:	cbz	x0, b808 <elf_getscn@@ELFUTILS_1.0+0x120>
    b74c:	mov	w0, #0x81                  	// #129
    b750:	str	x21, [x1, #136]
    b754:	str	w0, [x1, #152]
    b758:	mov	w0, #0x1                   	// #1
    b75c:	ldr	x2, [x21, #96]
    b760:	str	w0, [x1, #120]
    b764:	str	x2, [x1, #200]
    b768:	str	w0, [x21, #200]
    b76c:	ldr	w0, [x19, #4]
    b770:	cmp	x0, x20
    b774:	b.hi	b790 <elf_getscn@@ELFUTILS_1.0+0xa8>  // b.pmore
    b778:	ldr	x19, [x19, #8]
    b77c:	sub	x20, x20, x0
    b780:	cbz	x19, b7bc <elf_getscn@@ELFUTILS_1.0+0xd4>
    b784:	ldr	w0, [x19, #4]
    b788:	cmp	x0, x20
    b78c:	b.ls	b778 <elf_getscn@@ELFUTILS_1.0+0x90>  // b.plast
    b790:	ldr	w0, [x19]
    b794:	cmp	x0, x20
    b798:	b.ls	b7bc <elf_getscn@@ELFUTILS_1.0+0xd4>  // b.plast
    b79c:	add	x0, x20, x20, lsl #1
    b7a0:	add	x0, x20, x0, lsl #2
    b7a4:	add	x0, x19, x0, lsl #4
    b7a8:	ldp	x19, x20, [sp, #16]
    b7ac:	add	x0, x0, #0x10
    b7b0:	ldr	x21, [sp, #32]
    b7b4:	ldp	x29, x30, [sp], #48
    b7b8:	ret
    b7bc:	mov	w0, #0x16                  	// #22
    b7c0:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    b7c4:	mov	x0, #0x0                   	// #0
    b7c8:	ldp	x19, x20, [sp, #16]
    b7cc:	ldr	x21, [sp, #32]
    b7d0:	ldp	x29, x30, [sp], #48
    b7d4:	ret
    b7d8:	mov	w0, #0x4                   	// #4
    b7dc:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    b7e0:	mov	x0, #0x0                   	// #0
    b7e4:	b	b7b0 <elf_getscn@@ELFUTILS_1.0+0xc8>
    b7e8:	mov	x0, #0x0                   	// #0
    b7ec:	ret
    b7f0:	mov	x1, #0x28                  	// #40
    b7f4:	mov	x0, #0x1                   	// #1
    b7f8:	bl	3140 <calloc@plt>
    b7fc:	str	x0, [x21, #360]
    b800:	add	x1, x21, #0xd8
    b804:	cbnz	x0, b74c <elf_getscn@@ELFUTILS_1.0+0x64>
    b808:	mov	w0, #0x8                   	// #8
    b80c:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    b810:	mov	x0, #0x0                   	// #0
    b814:	ldp	x19, x20, [sp, #16]
    b818:	b	b7b0 <elf_getscn@@ELFUTILS_1.0+0xc8>
    b81c:	nop

000000000000b820 <elf_nextscn@@ELFUTILS_1.0>:
    b820:	cbz	x0, b874 <elf_nextscn@@ELFUTILS_1.0+0x54>
    b824:	cbz	x1, b87c <elf_nextscn@@ELFUTILS_1.0+0x5c>
    b828:	ldr	x3, [x1, #200]
    b82c:	mov	w5, #0xd0                  	// #208
    b830:	ldr	w2, [x3]
    b834:	mov	x4, #0x10                  	// #16
    b838:	add	x0, x1, #0xd0
    b83c:	umaddl	x1, w2, w5, x4
    b840:	add	x1, x3, x1
    b844:	cmp	x0, x1
    b848:	b.cc	b870 <elf_nextscn@@ELFUTILS_1.0+0x50>  // b.lo, b.ul, b.last
    b84c:	ldr	w1, [x3, #4]
    b850:	umaddl	x1, w1, w5, x4
    b854:	add	x1, x3, x1
    b858:	cmp	x0, x1
    b85c:	b.ne	b874 <elf_nextscn@@ELFUTILS_1.0+0x54>  // b.any
    b860:	ldr	x0, [x3, #8]
    b864:	cbz	x0, b870 <elf_nextscn@@ELFUTILS_1.0+0x50>
    b868:	ldr	w1, [x0], #16
    b86c:	cbz	w1, b888 <elf_nextscn@@ELFUTILS_1.0+0x68>
    b870:	ret
    b874:	mov	x0, #0x0                   	// #0
    b878:	ret
    b87c:	add	x3, x0, #0xc8
    b880:	add	x1, x0, #0xd8
    b884:	b	b82c <elf_nextscn@@ELFUTILS_1.0+0xc>
    b888:	stp	x29, x30, [sp, #-16]!
    b88c:	adrp	x3, 15000 <elf_compress_gnu@@ELFUTILS_1.7+0x1b8>
    b890:	adrp	x1, 15000 <elf_compress_gnu@@ELFUTILS_1.7+0x1b8>
    b894:	mov	x29, sp
    b898:	adrp	x0, 15000 <elf_compress_gnu@@ELFUTILS_1.7+0x1b8>
    b89c:	add	x3, x3, #0xcb0
    b8a0:	add	x1, x1, #0xc90
    b8a4:	add	x0, x0, #0xca0
    b8a8:	mov	w2, #0x4b                  	// #75
    b8ac:	bl	3330 <__assert_fail@plt>

000000000000b8b0 <elf_ndxscn@@ELFUTILS_1.0>:
    b8b0:	cbz	x0, b8bc <elf_ndxscn@@ELFUTILS_1.0+0xc>
    b8b4:	ldr	x0, [x0, #128]
    b8b8:	ret
    b8bc:	mov	x0, #0x0                   	// #0
    b8c0:	ret
    b8c4:	nop

000000000000b8c8 <elf_newscn@@ELFUTILS_1.0>:
    b8c8:	stp	x29, x30, [sp, #-80]!
    b8cc:	mov	x29, sp
    b8d0:	stp	x19, x20, [sp, #16]
    b8d4:	cbz	x0, ba58 <elf_newscn@@ELFUTILS_1.0+0x190>
    b8d8:	stp	x23, x24, [sp, #48]
    b8dc:	add	x23, x0, #0xc8
    b8e0:	mov	x19, #0x0                   	// #0
    b8e4:	stp	x25, x26, [sp, #64]
    b8e8:	mov	x26, x0
    b8ec:	stp	x21, x22, [sp, #32]
    b8f0:	mov	w22, #0xd0                  	// #208
    b8f4:	mov	x21, #0x10                  	// #16
    b8f8:	ldr	x20, [x26, #96]
    b8fc:	ldp	w1, w0, [x20]
    b900:	cmp	w1, w0
    b904:	b.cs	b988 <elf_newscn@@ELFUTILS_1.0+0xc0>  // b.hs, b.nlast
    b908:	add	w24, w1, #0x1
    b90c:	umaddl	x19, w1, w22, x21
    b910:	str	w24, [x20]
    b914:	cmp	w24, #0x1
    b918:	add	x19, x20, x19
    b91c:	ldr	x0, [x26, #96]
    b920:	b.eq	ba4c <elf_newscn@@ELFUTILS_1.0+0x184>  // b.none
    b924:	ldr	w0, [x0]
    b928:	cmp	w0, #0x1
    b92c:	b.ls	ba80 <elf_newscn@@ELFUTILS_1.0+0x1b8>  // b.plast
    b930:	mov	w2, w1
    b934:	mov	w24, #0x0                   	// #0
    b938:	add	x1, x2, w1, uxtw #1
    b93c:	ldur	x0, [x19, #-80]
    b940:	add	x1, x2, x1, lsl #2
    b944:	add	x1, x20, x1, lsl #4
    b948:	add	x0, x0, #0x1
    b94c:	str	x0, [x1, #144]
    b950:	ldr	w0, [x26, #32]
    b954:	cmp	w0, #0x1
    b958:	b.ne	b9f0 <elf_newscn@@ELFUTILS_1.0+0x128>  // b.any
    b95c:	mov	x1, #0x28                  	// #40
    b960:	mov	x0, #0x1                   	// #1
    b964:	bl	3140 <calloc@plt>
    b968:	str	x0, [x19, #144]
    b96c:	cbnz	x0, ba04 <elf_newscn@@ELFUTILS_1.0+0x13c>
    b970:	mov	w0, #0x8                   	// #8
    b974:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    b978:	ldp	x21, x22, [sp, #32]
    b97c:	ldp	x23, x24, [sp, #48]
    b980:	ldp	x25, x26, [sp, #64]
    b984:	b	ba3c <elf_newscn@@ELFUTILS_1.0+0x174>
    b988:	ldr	w25, [x26, #112]
    b98c:	cbz	w25, ba60 <elf_newscn@@ELFUTILS_1.0+0x198>
    b990:	lsl	w25, w25, #1
    b994:	str	w25, [x26, #112]
    b998:	mov	x1, #0x1                   	// #1
    b99c:	umaddl	x0, w25, w22, x21
    b9a0:	bl	3140 <calloc@plt>
    b9a4:	cbz	x0, b970 <elf_newscn@@ELFUTILS_1.0+0xa8>
    b9a8:	mov	x19, x0
    b9ac:	mov	w24, #0x0                   	// #0
    b9b0:	ldr	w1, [x19], #16
    b9b4:	add	w1, w1, #0x1
    b9b8:	stp	w1, w25, [x0]
    b9bc:	ldr	w1, [x20, #4]
    b9c0:	sub	w2, w1, #0x1
    b9c4:	add	x1, x2, x2, lsl #1
    b9c8:	add	x1, x2, x1, lsl #2
    b9cc:	add	x1, x20, x1, lsl #4
    b9d0:	ldr	x1, [x1, #144]
    b9d4:	add	x1, x1, #0x1
    b9d8:	str	x1, [x0, #144]
    b9dc:	str	x0, [x20, #8]
    b9e0:	str	x0, [x26, #96]
    b9e4:	ldr	w0, [x26, #32]
    b9e8:	cmp	w0, #0x1
    b9ec:	b.eq	b95c <elf_newscn@@ELFUTILS_1.0+0x94>  // b.none
    b9f0:	mov	x1, #0x40                  	// #64
    b9f4:	mov	x0, #0x1                   	// #1
    b9f8:	bl	3140 <calloc@plt>
    b9fc:	str	x0, [x19, #144]
    ba00:	cbz	x0, b970 <elf_newscn@@ELFUTILS_1.0+0xa8>
    ba04:	mov	w0, #0x81                  	// #129
    ba08:	str	x26, [x19, #136]
    ba0c:	str	w0, [x19, #152]
    ba10:	mov	w1, #0x1                   	// #1
    ba14:	ldr	x0, [x26, #96]
    ba18:	str	w1, [x19, #120]
    ba1c:	str	x0, [x19, #200]
    ba20:	cbnz	w24, b8f8 <elf_newscn@@ELFUTILS_1.0+0x30>
    ba24:	ldr	w0, [x19, #156]
    ba28:	ldp	x21, x22, [sp, #32]
    ba2c:	orr	w0, w0, w1
    ba30:	ldp	x23, x24, [sp, #48]
    ba34:	ldp	x25, x26, [sp, #64]
    ba38:	str	w0, [x19, #156]
    ba3c:	mov	x0, x19
    ba40:	ldp	x19, x20, [sp, #16]
    ba44:	ldp	x29, x30, [sp], #80
    ba48:	ret
    ba4c:	cmp	x0, x23
    ba50:	b.ne	b924 <elf_newscn@@ELFUTILS_1.0+0x5c>  // b.any
    ba54:	b	b9e4 <elf_newscn@@ELFUTILS_1.0+0x11c>
    ba58:	mov	x19, #0x0                   	// #0
    ba5c:	b	ba3c <elf_newscn@@ELFUTILS_1.0+0x174>
    ba60:	adrp	x3, 15000 <elf_compress_gnu@@ELFUTILS_1.7+0x1b8>
    ba64:	adrp	x1, 15000 <elf_compress_gnu@@ELFUTILS_1.7+0x1b8>
    ba68:	adrp	x0, 15000 <elf_compress_gnu@@ELFUTILS_1.7+0x1b8>
    ba6c:	add	x3, x3, #0xd18
    ba70:	add	x1, x1, #0xcc0
    ba74:	add	x0, x0, #0xcf8
    ba78:	mov	w2, #0x57                  	// #87
    ba7c:	bl	3330 <__assert_fail@plt>
    ba80:	adrp	x3, 15000 <elf_compress_gnu@@ELFUTILS_1.7+0x1b8>
    ba84:	adrp	x1, 15000 <elf_compress_gnu@@ELFUTILS_1.7+0x1b8>
    ba88:	adrp	x0, 15000 <elf_compress_gnu@@ELFUTILS_1.7+0x1b8>
    ba8c:	add	x3, x3, #0xd18
    ba90:	add	x1, x1, #0xcc0
    ba94:	add	x0, x0, #0xcd0
    ba98:	mov	w2, #0x4e                  	// #78
    ba9c:	bl	3330 <__assert_fail@plt>
    baa0:	stp	x29, x30, [sp, #-128]!
    baa4:	mov	x29, sp
    baa8:	stp	x21, x22, [sp, #32]
    baac:	ldr	x22, [x1]
    bab0:	cbz	x22, bac4 <elf_newscn@@ELFUTILS_1.0+0x1fc>
    bab4:	mov	x0, x22
    bab8:	ldp	x21, x22, [sp, #32]
    babc:	ldp	x29, x30, [sp], #128
    bac0:	ret
    bac4:	ldr	x2, [x0, #72]
    bac8:	mov	x21, x1
    bacc:	add	x1, sp, #0x78
    bad0:	stp	x19, x20, [sp, #16]
    bad4:	mov	x19, x0
    bad8:	str	x2, [sp, #96]
    badc:	bl	134b8 <elf_getphdrnum@@ELFUTILS_1.6+0x38>
    bae0:	cbnz	w0, bc20 <elf_newscn@@ELFUTILS_1.0+0x358>
    bae4:	stp	x23, x24, [sp, #48]
    bae8:	mov	x0, #0x6666666666666666    	// #7378697629483820646
    baec:	movk	x0, #0x666, lsl #48
    baf0:	ldr	x23, [sp, #120]
    baf4:	cmp	x23, x0
    baf8:	b.hi	bc14 <elf_newscn@@ELFUTILS_1.0+0x34c>  // b.pmore
    bafc:	add	x24, x23, x23, lsl #2
    bb00:	lsl	x24, x24, #3
    bb04:	mov	x0, x24
    bb08:	bl	30c0 <malloc@plt>
    bb0c:	str	x0, [x19, #80]
    bb10:	mov	x20, x0
    bb14:	cbz	x0, bedc <elf_newscn@@ELFUTILS_1.0+0x614>
    bb18:	ldr	x2, [x19]
    bb1c:	mov	w0, #0x1                   	// #1
    bb20:	str	w0, [x19, #124]
    bb24:	cbz	x2, bc28 <elf_newscn@@ELFUTILS_1.0+0x360>
    bb28:	ldr	x0, [sp, #96]
    bb2c:	ldr	x1, [x19, #48]
    bb30:	ldr	w0, [x0, #32]
    bb34:	cmp	x0, x1
    bb38:	b.cs	be7c <elf_newscn@@ELFUTILS_1.0+0x5b4>  // b.hs, b.nlast
    bb3c:	sub	x1, x1, x0
    bb40:	cmp	x24, x1
    bb44:	b.hi	be7c <elf_newscn@@ELFUTILS_1.0+0x5b4>  // b.pmore
    bb48:	ldr	x1, [x19, #40]
    bb4c:	stp	x25, x26, [sp, #64]
    bb50:	ldr	w3, [x19, #56]
    bb54:	add	x0, x0, x1
    bb58:	ldr	x1, [sp, #96]
    bb5c:	add	x26, x2, x0
    bb60:	ldrb	w1, [x1, #5]
    bb64:	tbnz	w3, #7, bcfc <elf_newscn@@ELFUTILS_1.0+0x434>
    bb68:	cmp	w1, #0x1
    bb6c:	b.eq	be88 <elf_newscn@@ELFUTILS_1.0+0x5c0>  // b.none
    bb70:	ands	x25, x26, #0x3
    bb74:	b.ne	be4c <elf_newscn@@ELFUTILS_1.0+0x584>  // b.any
    bb78:	cbz	x23, bd44 <elf_newscn@@ELFUTILS_1.0+0x47c>
    bb7c:	mov	x2, x26
    bb80:	mov	x3, x20
    bb84:	add	x5, x19, #0x154
    bb88:	mov	x6, #0x0                   	// #0
    bb8c:	mov	w1, #0xffffffff            	// #-1
    bb90:	b	bbb8 <elf_newscn@@ELFUTILS_1.0+0x2f0>
    bb94:	ldr	w0, [x5]
    bb98:	cbnz	w0, bba0 <elf_newscn@@ELFUTILS_1.0+0x2d8>
    bb9c:	str	w1, [x5]
    bba0:	add	x6, x6, #0x1
    bba4:	add	x2, x2, #0x28
    bba8:	cmp	x23, x6
    bbac:	add	x3, x3, #0x28
    bbb0:	add	x5, x5, #0xd0
    bbb4:	b.eq	bd78 <elf_newscn@@ELFUTILS_1.0+0x4b0>  // b.none
    bbb8:	ldp	q1, q0, [x2]
    bbbc:	ldr	w4, [x2, #4]
    bbc0:	ldr	w0, [x2, #24]
    bbc4:	rev32	v1.16b, v1.16b
    bbc8:	rev	w4, w4
    bbcc:	rev32	v0.16b, v0.16b
    bbd0:	cmp	w4, #0x12
    bbd4:	rev	w0, w0
    bbd8:	stp	q1, q0, [x3]
    bbdc:	ldr	w4, [x2, #32]
    bbe0:	rev	w4, w4
    bbe4:	str	w4, [x3, #32]
    bbe8:	ldr	w4, [x2, #36]
    bbec:	rev	w4, w4
    bbf0:	str	w4, [x3, #36]
    bbf4:	b.ne	bb94 <elf_newscn@@ELFUTILS_1.0+0x2cc>  // b.any
    bbf8:	cmp	x23, w0, uxtw
    bbfc:	b.ls	bb94 <elf_newscn@@ELFUTILS_1.0+0x2cc>  // b.plast
    bc00:	add	x4, x0, x0, lsl #1
    bc04:	add	x0, x0, x4, lsl #2
    bc08:	add	x0, x19, x0, lsl #4
    bc0c:	str	w6, [x0, #340]
    bc10:	b	bb94 <elf_newscn@@ELFUTILS_1.0+0x2cc>
    bc14:	ldp	x19, x20, [sp, #16]
    bc18:	ldp	x23, x24, [sp, #48]
    bc1c:	b	bab4 <elf_newscn@@ELFUTILS_1.0+0x1ec>
    bc20:	ldp	x19, x20, [sp, #16]
    bc24:	b	bab4 <elf_newscn@@ELFUTILS_1.0+0x1ec>
    bc28:	stp	x27, x28, [sp, #80]
    bc2c:	ldr	w27, [x19, #36]
    bc30:	cmn	w27, #0x1
    bc34:	b.eq	bd68 <elf_newscn@@ELFUTILS_1.0+0x4a0>  // b.none
    bc38:	ldr	x0, [sp, #96]
    bc3c:	stp	x25, x26, [sp, #64]
    bc40:	mov	x26, x24
    bc44:	ldr	x1, [x19, #40]
    bc48:	mov	x25, x20
    bc4c:	ldr	w0, [x0, #32]
    bc50:	mov	x28, #0x0                   	// #0
    bc54:	add	x0, x0, x1
    bc58:	str	x0, [sp, #104]
    bc5c:	mov	x23, x0
    bc60:	mov	x3, x23
    bc64:	mov	x2, x26
    bc68:	mov	x1, x25
    bc6c:	mov	w0, w27
    bc70:	bl	3250 <pread@plt>
    bc74:	cmn	x0, #0x1
    bc78:	b.eq	bcbc <elf_newscn@@ELFUTILS_1.0+0x3f4>  // b.none
    bc7c:	cmp	x0, #0x0
    bc80:	b.le	bd90 <elf_newscn@@ELFUTILS_1.0+0x4c8>
    bc84:	add	x28, x28, x0
    bc88:	cmp	x24, x28
    bc8c:	b.ls	bd94 <elf_newscn@@ELFUTILS_1.0+0x4cc>  // b.plast
    bc90:	ldr	x0, [sp, #104]
    bc94:	sub	x26, x24, x28
    bc98:	add	x25, x20, x28
    bc9c:	mov	x2, x26
    bca0:	add	x23, x0, x28
    bca4:	mov	x1, x25
    bca8:	mov	x3, x23
    bcac:	mov	w0, w27
    bcb0:	bl	3250 <pread@plt>
    bcb4:	cmn	x0, #0x1
    bcb8:	b.ne	bc7c <elf_newscn@@ELFUTILS_1.0+0x3b4>  // b.any
    bcbc:	bl	3340 <__errno_location@plt>
    bcc0:	ldr	w0, [x0]
    bcc4:	cmp	w0, #0x4
    bcc8:	b.eq	bc60 <elf_newscn@@ELFUTILS_1.0+0x398>  // b.none
    bccc:	mov	w0, #0x13                  	// #19
    bcd0:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    bcd4:	ldp	x25, x26, [sp, #64]
    bcd8:	ldp	x27, x28, [sp, #80]
    bcdc:	nop
    bce0:	mov	x0, x20
    bce4:	bl	3200 <free@plt>
    bce8:	ldp	x23, x24, [sp, #48]
    bcec:	str	xzr, [x19, #80]
    bcf0:	str	wzr, [x19, #124]
    bcf4:	ldp	x19, x20, [sp, #16]
    bcf8:	b	bab4 <elf_newscn@@ELFUTILS_1.0+0x1ec>
    bcfc:	cmp	w1, #0x1
    bd00:	b.ne	bb70 <elf_newscn@@ELFUTILS_1.0+0x2a8>  // b.any
    bd04:	nop
    bd08:	mov	x2, x24
    bd0c:	mov	x1, x26
    bd10:	mov	x0, x20
    bd14:	bl	3020 <memcpy@plt>
    bd18:	cbz	x23, bd44 <elf_newscn@@ELFUTILS_1.0+0x47c>
    bd1c:	nop
    bd20:	ldr	x20, [x19, #80]
    bd24:	mov	x0, x20
    bd28:	add	x19, x19, #0x168
    bd2c:	mov	x2, #0x0                   	// #0
    bd30:	str	x0, [x19], #208
    bd34:	add	x2, x2, #0x1
    bd38:	cmp	x23, x2
    bd3c:	add	x0, x0, #0x28
    bd40:	b.hi	bd30 <elf_newscn@@ELFUTILS_1.0+0x468>  // b.pmore
    bd44:	ldr	x22, [x21]
    bd48:	cbz	x22, bef8 <elf_newscn@@ELFUTILS_1.0+0x630>
    bd4c:	mov	x0, x22
    bd50:	ldp	x19, x20, [sp, #16]
    bd54:	ldp	x21, x22, [sp, #32]
    bd58:	ldp	x23, x24, [sp, #48]
    bd5c:	ldp	x25, x26, [sp, #64]
    bd60:	ldp	x29, x30, [sp], #128
    bd64:	ret
    bd68:	mov	w0, #0x1b                  	// #27
    bd6c:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    bd70:	ldp	x27, x28, [sp, #80]
    bd74:	b	bce0 <elf_newscn@@ELFUTILS_1.0+0x418>
    bd78:	cbz	x25, bd24 <elf_newscn@@ELFUTILS_1.0+0x45c>
    bd7c:	mov	x0, x26
    bd80:	bl	3200 <free@plt>
    bd84:	ldr	x23, [sp, #120]
    bd88:	cbnz	x23, bd20 <elf_newscn@@ELFUTILS_1.0+0x458>
    bd8c:	b	bd44 <elf_newscn@@ELFUTILS_1.0+0x47c>
    bd90:	csel	x28, x28, x0, eq  // eq = none
    bd94:	cmp	x24, x28
    bd98:	b.ne	bccc <elf_newscn@@ELFUTILS_1.0+0x404>  // b.any
    bd9c:	ldr	x0, [sp, #96]
    bda0:	ldr	x23, [sp, #120]
    bda4:	ldrb	w0, [x0, #5]
    bda8:	cmp	w0, #0x1
    bdac:	b.eq	bec0 <elf_newscn@@ELFUTILS_1.0+0x5f8>  // b.none
    bdb0:	cbz	x23, becc <elf_newscn@@ELFUTILS_1.0+0x604>
    bdb4:	cmp	x23, #0x1
    bdb8:	b.eq	bef0 <elf_newscn@@ELFUTILS_1.0+0x628>  // b.none
    bdbc:	lsr	x1, x23, #1
    bdc0:	mov	x0, x20
    bdc4:	add	x1, x1, x1, lsl #2
    bdc8:	add	x1, x20, x1, lsl #4
    bdcc:	nop
    bdd0:	ldp	q2, q4, [x0]
    bdd4:	ldp	q3, q1, [x0, #32]
    bdd8:	ldr	q0, [x0, #64]
    bddc:	rev32	v4.16b, v4.16b
    bde0:	rev32	v3.16b, v3.16b
    bde4:	rev32	v1.16b, v1.16b
    bde8:	rev32	v0.16b, v0.16b
    bdec:	rev32	v2.16b, v2.16b
    bdf0:	stp	q3, q1, [x0, #32]
    bdf4:	stp	q2, q4, [x0]
    bdf8:	add	x0, x0, #0x50
    bdfc:	stur	q0, [x0, #-16]
    be00:	cmp	x0, x1
    be04:	b.ne	bdd0 <elf_newscn@@ELFUTILS_1.0+0x508>  // b.any
    be08:	and	x0, x23, #0xfffffffffffffffe
    be0c:	tbz	w23, #0, be44 <elf_newscn@@ELFUTILS_1.0+0x57c>
    be10:	add	x0, x0, x0, lsl #2
    be14:	lsl	x0, x0, #3
    be18:	add	x1, x20, x0
    be1c:	ldr	q1, [x20, x0]
    be20:	ldr	q0, [x1, #16]
    be24:	rev32	v1.16b, v1.16b
    be28:	rev32	v0.16b, v0.16b
    be2c:	str	q1, [x20, x0]
    be30:	ldp	w2, w0, [x1, #32]
    be34:	str	q0, [x1, #16]
    be38:	rev	w2, w2
    be3c:	rev	w0, w0
    be40:	stp	w2, w0, [x1, #32]
    be44:	ldp	x27, x28, [sp, #80]
    be48:	b	bd20 <elf_newscn@@ELFUTILS_1.0+0x458>
    be4c:	mov	x0, x24
    be50:	stp	x27, x28, [sp, #80]
    be54:	bl	30c0 <malloc@plt>
    be58:	mov	x27, x0
    be5c:	cbz	x0, bed4 <elf_newscn@@ELFUTILS_1.0+0x60c>
    be60:	mov	x1, x26
    be64:	mov	x2, x24
    be68:	mov	x26, x27
    be6c:	bl	3020 <memcpy@plt>
    be70:	ldp	x27, x28, [sp, #80]
    be74:	cbnz	x23, bb7c <elf_newscn@@ELFUTILS_1.0+0x2b4>
    be78:	b	bd7c <elf_newscn@@ELFUTILS_1.0+0x4b4>
    be7c:	mov	w0, #0x20                  	// #32
    be80:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    be84:	b	bce0 <elf_newscn@@ELFUTILS_1.0+0x418>
    be88:	ldr	w0, [x19, #28]
    be8c:	cmp	w0, #0x8
    be90:	b.eq	bd08 <elf_newscn@@ELFUTILS_1.0+0x440>  // b.none
    be94:	tst	x26, #0x3
    be98:	b.ne	bd08 <elf_newscn@@ELFUTILS_1.0+0x440>  // b.any
    be9c:	adrp	x3, 15000 <elf_compress_gnu@@ELFUTILS_1.7+0x1b8>
    bea0:	adrp	x1, 15000 <elf_compress_gnu@@ELFUTILS_1.7+0x1b8>
    bea4:	adrp	x0, 15000 <elf_compress_gnu@@ELFUTILS_1.7+0x1b8>
    bea8:	add	x3, x3, #0xe18
    beac:	add	x1, x1, #0xd28
    beb0:	add	x0, x0, #0xd38
    beb4:	mov	w2, #0x64                  	// #100
    beb8:	stp	x27, x28, [sp, #80]
    bebc:	bl	3330 <__assert_fail@plt>
    bec0:	ldp	x27, x28, [sp, #80]
    bec4:	cbnz	x23, bd20 <elf_newscn@@ELFUTILS_1.0+0x458>
    bec8:	b	bd44 <elf_newscn@@ELFUTILS_1.0+0x47c>
    becc:	ldp	x27, x28, [sp, #80]
    bed0:	b	bd44 <elf_newscn@@ELFUTILS_1.0+0x47c>
    bed4:	ldp	x25, x26, [sp, #64]
    bed8:	ldp	x27, x28, [sp, #80]
    bedc:	mov	w0, #0x8                   	// #8
    bee0:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    bee4:	ldp	x19, x20, [sp, #16]
    bee8:	ldp	x23, x24, [sp, #48]
    beec:	b	bab4 <elf_newscn@@ELFUTILS_1.0+0x1ec>
    bef0:	mov	x0, #0x0                   	// #0
    bef4:	b	be10 <elf_newscn@@ELFUTILS_1.0+0x548>
    bef8:	adrp	x3, 15000 <elf_compress_gnu@@ELFUTILS_1.7+0x1b8>
    befc:	adrp	x1, 15000 <elf_compress_gnu@@ELFUTILS_1.7+0x1b8>
    bf00:	adrp	x0, 15000 <elf_compress_gnu@@ELFUTILS_1.7+0x1b8>
    bf04:	add	x3, x3, #0xe18
    bf08:	add	x1, x1, #0xd28
    bf0c:	add	x0, x0, #0xe08
    bf10:	mov	w2, #0xdd                  	// #221
    bf14:	stp	x27, x28, [sp, #80]
    bf18:	bl	3330 <__assert_fail@plt>
    bf1c:	nop
    bf20:	stp	x29, x30, [sp, #-32]!
    bf24:	mov	x29, sp
    bf28:	str	x19, [sp, #16]
    bf2c:	cbz	x0, bf60 <elf_newscn@@ELFUTILS_1.0+0x698>
    bf30:	ldr	x2, [x0, #136]
    bf34:	ldr	x19, [x2, #72]
    bf38:	cbz	x19, bf88 <elf_newscn@@ELFUTILS_1.0+0x6c0>
    bf3c:	ldr	w1, [x2, #32]
    bf40:	cmp	w1, #0x1
    bf44:	b.ne	bf94 <elf_newscn@@ELFUTILS_1.0+0x6cc>  // b.any
    bf48:	ldr	x19, [x0, #144]
    bf4c:	cbz	x19, bf74 <elf_newscn@@ELFUTILS_1.0+0x6ac>
    bf50:	mov	x0, x19
    bf54:	ldr	x19, [sp, #16]
    bf58:	ldp	x29, x30, [sp], #32
    bf5c:	ret
    bf60:	mov	x19, #0x0                   	// #0
    bf64:	mov	x0, x19
    bf68:	ldr	x19, [sp, #16]
    bf6c:	ldp	x29, x30, [sp], #32
    bf70:	ret
    bf74:	ldr	x19, [sp, #16]
    bf78:	add	x1, x0, #0x90
    bf7c:	ldp	x29, x30, [sp], #32
    bf80:	mov	x0, x2
    bf84:	b	baa0 <elf_newscn@@ELFUTILS_1.0+0x1d8>
    bf88:	mov	w0, #0x1a                  	// #26
    bf8c:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    bf90:	b	bf50 <elf_newscn@@ELFUTILS_1.0+0x688>
    bf94:	mov	w0, #0x15                  	// #21
    bf98:	mov	x19, #0x0                   	// #0
    bf9c:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    bfa0:	b	bf50 <elf_newscn@@ELFUTILS_1.0+0x688>
    bfa4:	nop
    bfa8:	stp	x29, x30, [sp, #-32]!
    bfac:	mov	x29, sp
    bfb0:	str	x19, [sp, #16]
    bfb4:	cbz	x0, bfe8 <elf_newscn@@ELFUTILS_1.0+0x720>
    bfb8:	ldr	x2, [x0, #136]
    bfbc:	ldr	x19, [x2, #72]
    bfc0:	cbz	x19, c010 <elf_newscn@@ELFUTILS_1.0+0x748>
    bfc4:	ldr	w1, [x2, #32]
    bfc8:	cmp	w1, #0x1
    bfcc:	b.ne	c01c <elf_newscn@@ELFUTILS_1.0+0x754>  // b.any
    bfd0:	ldr	x19, [x0, #144]
    bfd4:	cbz	x19, bffc <elf_newscn@@ELFUTILS_1.0+0x734>
    bfd8:	mov	x0, x19
    bfdc:	ldr	x19, [sp, #16]
    bfe0:	ldp	x29, x30, [sp], #32
    bfe4:	ret
    bfe8:	mov	x19, #0x0                   	// #0
    bfec:	mov	x0, x19
    bff0:	ldr	x19, [sp, #16]
    bff4:	ldp	x29, x30, [sp], #32
    bff8:	ret
    bffc:	ldr	x19, [sp, #16]
    c000:	add	x1, x0, #0x90
    c004:	ldp	x29, x30, [sp], #32
    c008:	mov	x0, x2
    c00c:	b	baa0 <elf_newscn@@ELFUTILS_1.0+0x1d8>
    c010:	mov	w0, #0x1a                  	// #26
    c014:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    c018:	b	bfd8 <elf_newscn@@ELFUTILS_1.0+0x710>
    c01c:	mov	w0, #0x15                  	// #21
    c020:	mov	x19, #0x0                   	// #0
    c024:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    c028:	b	bfd8 <elf_newscn@@ELFUTILS_1.0+0x710>
    c02c:	nop

000000000000c030 <elf32_getshdr@@ELFUTILS_1.0>:
    c030:	cbz	x0, c07c <elf32_getshdr@@ELFUTILS_1.0+0x4c>
    c034:	stp	x29, x30, [sp, #-16]!
    c038:	mov	x29, sp
    c03c:	ldr	x1, [x0, #136]
    c040:	ldr	x2, [x1, #72]
    c044:	cbz	x2, c05c <elf32_getshdr@@ELFUTILS_1.0+0x2c>
    c048:	ldr	w1, [x1, #32]
    c04c:	cmp	w1, #0x1
    c050:	b.ne	c070 <elf32_getshdr@@ELFUTILS_1.0+0x40>  // b.any
    c054:	ldp	x29, x30, [sp], #16
    c058:	b	bf20 <elf_newscn@@ELFUTILS_1.0+0x658>
    c05c:	mov	w0, #0x1a                  	// #26
    c060:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    c064:	mov	x0, #0x0                   	// #0
    c068:	ldp	x29, x30, [sp], #16
    c06c:	ret
    c070:	mov	w0, #0x15                  	// #21
    c074:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    c078:	b	c064 <elf32_getshdr@@ELFUTILS_1.0+0x34>
    c07c:	mov	x0, #0x0                   	// #0
    c080:	ret
    c084:	nop
    c088:	stp	x29, x30, [sp, #-128]!
    c08c:	mov	x29, sp
    c090:	stp	x21, x22, [sp, #32]
    c094:	ldr	x22, [x1]
    c098:	cbz	x22, c0ac <elf32_getshdr@@ELFUTILS_1.0+0x7c>
    c09c:	mov	x0, x22
    c0a0:	ldp	x21, x22, [sp, #32]
    c0a4:	ldp	x29, x30, [sp], #128
    c0a8:	ret
    c0ac:	ldr	x2, [x0, #72]
    c0b0:	mov	x21, x1
    c0b4:	add	x1, sp, #0x78
    c0b8:	stp	x19, x20, [sp, #16]
    c0bc:	mov	x19, x0
    c0c0:	str	x2, [sp, #96]
    c0c4:	bl	134b8 <elf_getphdrnum@@ELFUTILS_1.6+0x38>
    c0c8:	cbnz	w0, c21c <elf32_getshdr@@ELFUTILS_1.0+0x1ec>
    c0cc:	stp	x23, x24, [sp, #48]
    c0d0:	mov	x0, #0x3ffffffffffffff     	// #288230376151711743
    c0d4:	ldr	x23, [sp, #120]
    c0d8:	cmp	x23, x0
    c0dc:	b.hi	c210 <elf32_getshdr@@ELFUTILS_1.0+0x1e0>  // b.pmore
    c0e0:	lsl	x24, x23, #6
    c0e4:	mov	x0, x24
    c0e8:	bl	30c0 <malloc@plt>
    c0ec:	str	x0, [x19, #80]
    c0f0:	mov	x20, x0
    c0f4:	cbz	x0, c4a0 <elf32_getshdr@@ELFUTILS_1.0+0x470>
    c0f8:	ldr	x2, [x19]
    c0fc:	mov	w0, #0x1                   	// #1
    c100:	str	w0, [x19, #124]
    c104:	cbz	x2, c224 <elf32_getshdr@@ELFUTILS_1.0+0x1f4>
    c108:	ldr	x0, [sp, #96]
    c10c:	ldr	x1, [x19, #48]
    c110:	ldr	x0, [x0, #40]
    c114:	cmp	x0, x1
    c118:	b.cs	c440 <elf32_getshdr@@ELFUTILS_1.0+0x410>  // b.hs, b.nlast
    c11c:	sub	x1, x1, x0
    c120:	cmp	x24, x1
    c124:	b.hi	c440 <elf32_getshdr@@ELFUTILS_1.0+0x410>  // b.pmore
    c128:	ldr	x1, [x19, #40]
    c12c:	stp	x25, x26, [sp, #64]
    c130:	ldr	w3, [x19, #56]
    c134:	add	x0, x0, x1
    c138:	ldr	x1, [sp, #96]
    c13c:	add	x26, x2, x0
    c140:	ldrb	w1, [x1, #5]
    c144:	tbnz	w3, #7, c2f4 <elf32_getshdr@@ELFUTILS_1.0+0x2c4>
    c148:	cmp	w1, #0x1
    c14c:	b.eq	c44c <elf32_getshdr@@ELFUTILS_1.0+0x41c>  // b.none
    c150:	ands	x25, x26, #0x7
    c154:	b.ne	c410 <elf32_getshdr@@ELFUTILS_1.0+0x3e0>  // b.any
    c158:	cbz	x23, c33c <elf32_getshdr@@ELFUTILS_1.0+0x30c>
    c15c:	mov	x3, x26
    c160:	mov	x2, x20
    c164:	add	x5, x19, #0x154
    c168:	mov	x6, #0x0                   	// #0
    c16c:	mov	w1, #0xffffffff            	// #-1
    c170:	b	c198 <elf32_getshdr@@ELFUTILS_1.0+0x168>
    c174:	ldr	w0, [x5]
    c178:	cbnz	w0, c180 <elf32_getshdr@@ELFUTILS_1.0+0x150>
    c17c:	str	w1, [x5]
    c180:	add	x6, x6, #0x1
    c184:	add	x3, x3, #0x40
    c188:	cmp	x23, x6
    c18c:	add	x2, x2, #0x40
    c190:	add	x5, x5, #0xd0
    c194:	b.eq	c370 <elf32_getshdr@@ELFUTILS_1.0+0x340>  // b.none
    c198:	ldur	q1, [x3, #8]
    c19c:	ldur	q0, [x3, #24]
    c1a0:	rev64	v1.16b, v1.16b
    c1a4:	ldr	w0, [x3]
    c1a8:	rev64	v0.16b, v0.16b
    c1ac:	rev	w0, w0
    c1b0:	str	w0, [x2]
    c1b4:	ldr	w0, [x3, #4]
    c1b8:	stur	q1, [x2, #8]
    c1bc:	rev	w0, w0
    c1c0:	str	w0, [x2, #4]
    c1c4:	cmp	w0, #0x12
    c1c8:	stur	q0, [x2, #24]
    c1cc:	ldr	w0, [x3, #40]
    c1d0:	ldr	q0, [x3, #48]
    c1d4:	rev	w0, w0
    c1d8:	str	w0, [x2, #40]
    c1dc:	rev64	v0.16b, v0.16b
    c1e0:	ldr	w4, [x3, #44]
    c1e4:	rev	w4, w4
    c1e8:	str	w4, [x2, #44]
    c1ec:	str	q0, [x2, #48]
    c1f0:	b.ne	c174 <elf32_getshdr@@ELFUTILS_1.0+0x144>  // b.any
    c1f4:	cmp	x23, w0, uxtw
    c1f8:	b.ls	c174 <elf32_getshdr@@ELFUTILS_1.0+0x144>  // b.plast
    c1fc:	add	x4, x0, x0, lsl #1
    c200:	add	x0, x0, x4, lsl #2
    c204:	add	x0, x19, x0, lsl #4
    c208:	str	w6, [x0, #340]
    c20c:	b	c174 <elf32_getshdr@@ELFUTILS_1.0+0x144>
    c210:	ldp	x19, x20, [sp, #16]
    c214:	ldp	x23, x24, [sp, #48]
    c218:	b	c09c <elf32_getshdr@@ELFUTILS_1.0+0x6c>
    c21c:	ldp	x19, x20, [sp, #16]
    c220:	b	c09c <elf32_getshdr@@ELFUTILS_1.0+0x6c>
    c224:	stp	x27, x28, [sp, #80]
    c228:	ldr	w27, [x19, #36]
    c22c:	cmn	w27, #0x1
    c230:	b.eq	c360 <elf32_getshdr@@ELFUTILS_1.0+0x330>  // b.none
    c234:	ldr	x0, [sp, #96]
    c238:	stp	x25, x26, [sp, #64]
    c23c:	mov	x26, x24
    c240:	ldr	x1, [x19, #40]
    c244:	mov	x25, x20
    c248:	ldr	x0, [x0, #40]
    c24c:	mov	x28, #0x0                   	// #0
    c250:	add	x0, x1, x0
    c254:	str	x0, [sp, #104]
    c258:	mov	x23, x0
    c25c:	mov	x3, x23
    c260:	mov	x2, x26
    c264:	mov	x1, x25
    c268:	mov	w0, w27
    c26c:	bl	3250 <pread@plt>
    c270:	cmn	x0, #0x1
    c274:	b.eq	c2b8 <elf32_getshdr@@ELFUTILS_1.0+0x288>  // b.none
    c278:	cmp	x0, #0x0
    c27c:	b.le	c388 <elf32_getshdr@@ELFUTILS_1.0+0x358>
    c280:	add	x28, x28, x0
    c284:	cmp	x24, x28
    c288:	b.ls	c38c <elf32_getshdr@@ELFUTILS_1.0+0x35c>  // b.plast
    c28c:	ldr	x0, [sp, #104]
    c290:	sub	x26, x24, x28
    c294:	add	x25, x20, x28
    c298:	mov	x2, x26
    c29c:	add	x23, x0, x28
    c2a0:	mov	x1, x25
    c2a4:	mov	x3, x23
    c2a8:	mov	w0, w27
    c2ac:	bl	3250 <pread@plt>
    c2b0:	cmn	x0, #0x1
    c2b4:	b.ne	c278 <elf32_getshdr@@ELFUTILS_1.0+0x248>  // b.any
    c2b8:	bl	3340 <__errno_location@plt>
    c2bc:	ldr	w0, [x0]
    c2c0:	cmp	w0, #0x4
    c2c4:	b.eq	c25c <elf32_getshdr@@ELFUTILS_1.0+0x22c>  // b.none
    c2c8:	mov	w0, #0x13                  	// #19
    c2cc:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    c2d0:	ldp	x25, x26, [sp, #64]
    c2d4:	ldp	x27, x28, [sp, #80]
    c2d8:	mov	x0, x20
    c2dc:	bl	3200 <free@plt>
    c2e0:	ldp	x23, x24, [sp, #48]
    c2e4:	str	xzr, [x19, #80]
    c2e8:	str	wzr, [x19, #124]
    c2ec:	ldp	x19, x20, [sp, #16]
    c2f0:	b	c09c <elf32_getshdr@@ELFUTILS_1.0+0x6c>
    c2f4:	cmp	w1, #0x1
    c2f8:	b.ne	c150 <elf32_getshdr@@ELFUTILS_1.0+0x120>  // b.any
    c2fc:	nop
    c300:	mov	x2, x24
    c304:	mov	x1, x26
    c308:	mov	x0, x20
    c30c:	bl	3020 <memcpy@plt>
    c310:	cbz	x23, c33c <elf32_getshdr@@ELFUTILS_1.0+0x30c>
    c314:	ldr	x20, [x19, #80]
    c318:	mov	x0, x20
    c31c:	add	x19, x19, #0x168
    c320:	mov	x2, #0x0                   	// #0
    c324:	nop
    c328:	str	x0, [x19], #208
    c32c:	add	x2, x2, #0x1
    c330:	cmp	x23, x2
    c334:	add	x0, x0, #0x40
    c338:	b.hi	c328 <elf32_getshdr@@ELFUTILS_1.0+0x2f8>  // b.pmore
    c33c:	ldr	x22, [x21]
    c340:	cbz	x22, c4b4 <elf32_getshdr@@ELFUTILS_1.0+0x484>
    c344:	mov	x0, x22
    c348:	ldp	x19, x20, [sp, #16]
    c34c:	ldp	x21, x22, [sp, #32]
    c350:	ldp	x23, x24, [sp, #48]
    c354:	ldp	x25, x26, [sp, #64]
    c358:	ldp	x29, x30, [sp], #128
    c35c:	ret
    c360:	mov	w0, #0x1b                  	// #27
    c364:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    c368:	ldp	x27, x28, [sp, #80]
    c36c:	b	c2d8 <elf32_getshdr@@ELFUTILS_1.0+0x2a8>
    c370:	cbz	x25, c318 <elf32_getshdr@@ELFUTILS_1.0+0x2e8>
    c374:	mov	x0, x26
    c378:	bl	3200 <free@plt>
    c37c:	ldr	x23, [sp, #120]
    c380:	cbnz	x23, c314 <elf32_getshdr@@ELFUTILS_1.0+0x2e4>
    c384:	b	c33c <elf32_getshdr@@ELFUTILS_1.0+0x30c>
    c388:	csel	x28, x28, x0, eq  // eq = none
    c38c:	cmp	x24, x28
    c390:	b.ne	c2c8 <elf32_getshdr@@ELFUTILS_1.0+0x298>  // b.any
    c394:	ldr	x0, [sp, #96]
    c398:	ldr	x23, [sp, #120]
    c39c:	ldrb	w0, [x0, #5]
    c3a0:	cmp	w0, #0x1
    c3a4:	b.eq	c484 <elf32_getshdr@@ELFUTILS_1.0+0x454>  // b.none
    c3a8:	cbz	x23, c490 <elf32_getshdr@@ELFUTILS_1.0+0x460>
    c3ac:	mov	x0, x20
    c3b0:	add	x5, x20, x23, lsl #6
    c3b4:	nop
    c3b8:	ldur	q2, [x0, #8]
    c3bc:	ldur	q1, [x0, #24]
    c3c0:	ldr	q0, [x0, #48]
    c3c4:	ldp	w4, w3, [x0]
    c3c8:	ldp	w2, w1, [x0, #40]
    c3cc:	rev	w4, w4
    c3d0:	rev64	v1.16b, v1.16b
    c3d4:	rev	w3, w3
    c3d8:	rev64	v2.16b, v2.16b
    c3dc:	rev	w2, w2
    c3e0:	rev64	v0.16b, v0.16b
    c3e4:	rev	w1, w1
    c3e8:	stp	w4, w3, [x0]
    c3ec:	stp	w2, w1, [x0, #40]
    c3f0:	add	x0, x0, #0x40
    c3f4:	stur	q2, [x0, #-56]
    c3f8:	stur	q1, [x0, #-40]
    c3fc:	stur	q0, [x0, #-16]
    c400:	cmp	x0, x5
    c404:	b.ne	c3b8 <elf32_getshdr@@ELFUTILS_1.0+0x388>  // b.any
    c408:	ldp	x27, x28, [sp, #80]
    c40c:	b	c314 <elf32_getshdr@@ELFUTILS_1.0+0x2e4>
    c410:	mov	x0, x24
    c414:	stp	x27, x28, [sp, #80]
    c418:	bl	30c0 <malloc@plt>
    c41c:	mov	x27, x0
    c420:	cbz	x0, c498 <elf32_getshdr@@ELFUTILS_1.0+0x468>
    c424:	mov	x1, x26
    c428:	mov	x2, x24
    c42c:	mov	x26, x27
    c430:	bl	3020 <memcpy@plt>
    c434:	ldp	x27, x28, [sp, #80]
    c438:	cbnz	x23, c15c <elf32_getshdr@@ELFUTILS_1.0+0x12c>
    c43c:	b	c374 <elf32_getshdr@@ELFUTILS_1.0+0x344>
    c440:	mov	w0, #0x20                  	// #32
    c444:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    c448:	b	c2d8 <elf32_getshdr@@ELFUTILS_1.0+0x2a8>
    c44c:	ldr	w0, [x19, #28]
    c450:	cmp	w0, #0x8
    c454:	b.eq	c300 <elf32_getshdr@@ELFUTILS_1.0+0x2d0>  // b.none
    c458:	tst	x26, #0x7
    c45c:	b.ne	c300 <elf32_getshdr@@ELFUTILS_1.0+0x2d0>  // b.any
    c460:	adrp	x3, 15000 <elf_compress_gnu@@ELFUTILS_1.7+0x1b8>
    c464:	adrp	x1, 15000 <elf_compress_gnu@@ELFUTILS_1.7+0x1b8>
    c468:	adrp	x0, 15000 <elf_compress_gnu@@ELFUTILS_1.7+0x1b8>
    c46c:	add	x3, x3, #0xe30
    c470:	add	x1, x1, #0xd28
    c474:	add	x0, x0, #0xd38
    c478:	mov	w2, #0x64                  	// #100
    c47c:	stp	x27, x28, [sp, #80]
    c480:	bl	3330 <__assert_fail@plt>
    c484:	ldp	x27, x28, [sp, #80]
    c488:	cbnz	x23, c314 <elf32_getshdr@@ELFUTILS_1.0+0x2e4>
    c48c:	b	c33c <elf32_getshdr@@ELFUTILS_1.0+0x30c>
    c490:	ldp	x27, x28, [sp, #80]
    c494:	b	c33c <elf32_getshdr@@ELFUTILS_1.0+0x30c>
    c498:	ldp	x25, x26, [sp, #64]
    c49c:	ldp	x27, x28, [sp, #80]
    c4a0:	mov	w0, #0x8                   	// #8
    c4a4:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    c4a8:	ldp	x19, x20, [sp, #16]
    c4ac:	ldp	x23, x24, [sp, #48]
    c4b0:	b	c09c <elf32_getshdr@@ELFUTILS_1.0+0x6c>
    c4b4:	adrp	x3, 15000 <elf_compress_gnu@@ELFUTILS_1.7+0x1b8>
    c4b8:	adrp	x1, 15000 <elf_compress_gnu@@ELFUTILS_1.7+0x1b8>
    c4bc:	adrp	x0, 15000 <elf_compress_gnu@@ELFUTILS_1.7+0x1b8>
    c4c0:	add	x3, x3, #0xe30
    c4c4:	add	x1, x1, #0xd28
    c4c8:	add	x0, x0, #0xe08
    c4cc:	mov	w2, #0xdd                  	// #221
    c4d0:	stp	x27, x28, [sp, #80]
    c4d4:	bl	3330 <__assert_fail@plt>
    c4d8:	stp	x29, x30, [sp, #-32]!
    c4dc:	mov	x29, sp
    c4e0:	str	x19, [sp, #16]
    c4e4:	cbz	x0, c518 <elf32_getshdr@@ELFUTILS_1.0+0x4e8>
    c4e8:	ldr	x2, [x0, #136]
    c4ec:	ldr	x19, [x2, #72]
    c4f0:	cbz	x19, c540 <elf32_getshdr@@ELFUTILS_1.0+0x510>
    c4f4:	ldr	w1, [x2, #32]
    c4f8:	cmp	w1, #0x2
    c4fc:	b.ne	c54c <elf32_getshdr@@ELFUTILS_1.0+0x51c>  // b.any
    c500:	ldr	x19, [x0, #144]
    c504:	cbz	x19, c52c <elf32_getshdr@@ELFUTILS_1.0+0x4fc>
    c508:	mov	x0, x19
    c50c:	ldr	x19, [sp, #16]
    c510:	ldp	x29, x30, [sp], #32
    c514:	ret
    c518:	mov	x19, #0x0                   	// #0
    c51c:	mov	x0, x19
    c520:	ldr	x19, [sp, #16]
    c524:	ldp	x29, x30, [sp], #32
    c528:	ret
    c52c:	ldr	x19, [sp, #16]
    c530:	add	x1, x0, #0x90
    c534:	ldp	x29, x30, [sp], #32
    c538:	mov	x0, x2
    c53c:	b	c088 <elf32_getshdr@@ELFUTILS_1.0+0x58>
    c540:	mov	w0, #0x1a                  	// #26
    c544:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    c548:	b	c508 <elf32_getshdr@@ELFUTILS_1.0+0x4d8>
    c54c:	mov	w0, #0x15                  	// #21
    c550:	mov	x19, #0x0                   	// #0
    c554:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    c558:	b	c508 <elf32_getshdr@@ELFUTILS_1.0+0x4d8>
    c55c:	nop
    c560:	stp	x29, x30, [sp, #-32]!
    c564:	mov	x29, sp
    c568:	str	x19, [sp, #16]
    c56c:	cbz	x0, c5a0 <elf32_getshdr@@ELFUTILS_1.0+0x570>
    c570:	ldr	x2, [x0, #136]
    c574:	ldr	x19, [x2, #72]
    c578:	cbz	x19, c5c8 <elf32_getshdr@@ELFUTILS_1.0+0x598>
    c57c:	ldr	w1, [x2, #32]
    c580:	cmp	w1, #0x2
    c584:	b.ne	c5d4 <elf32_getshdr@@ELFUTILS_1.0+0x5a4>  // b.any
    c588:	ldr	x19, [x0, #144]
    c58c:	cbz	x19, c5b4 <elf32_getshdr@@ELFUTILS_1.0+0x584>
    c590:	mov	x0, x19
    c594:	ldr	x19, [sp, #16]
    c598:	ldp	x29, x30, [sp], #32
    c59c:	ret
    c5a0:	mov	x19, #0x0                   	// #0
    c5a4:	mov	x0, x19
    c5a8:	ldr	x19, [sp, #16]
    c5ac:	ldp	x29, x30, [sp], #32
    c5b0:	ret
    c5b4:	ldr	x19, [sp, #16]
    c5b8:	add	x1, x0, #0x90
    c5bc:	ldp	x29, x30, [sp], #32
    c5c0:	mov	x0, x2
    c5c4:	b	c088 <elf32_getshdr@@ELFUTILS_1.0+0x58>
    c5c8:	mov	w0, #0x1a                  	// #26
    c5cc:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    c5d0:	b	c590 <elf32_getshdr@@ELFUTILS_1.0+0x560>
    c5d4:	mov	w0, #0x15                  	// #21
    c5d8:	mov	x19, #0x0                   	// #0
    c5dc:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    c5e0:	b	c590 <elf32_getshdr@@ELFUTILS_1.0+0x560>
    c5e4:	nop

000000000000c5e8 <elf64_getshdr@@ELFUTILS_1.0>:
    c5e8:	cbz	x0, c634 <elf64_getshdr@@ELFUTILS_1.0+0x4c>
    c5ec:	stp	x29, x30, [sp, #-16]!
    c5f0:	mov	x29, sp
    c5f4:	ldr	x1, [x0, #136]
    c5f8:	ldr	x2, [x1, #72]
    c5fc:	cbz	x2, c614 <elf64_getshdr@@ELFUTILS_1.0+0x2c>
    c600:	ldr	w1, [x1, #32]
    c604:	cmp	w1, #0x2
    c608:	b.ne	c628 <elf64_getshdr@@ELFUTILS_1.0+0x40>  // b.any
    c60c:	ldp	x29, x30, [sp], #16
    c610:	b	c4d8 <elf32_getshdr@@ELFUTILS_1.0+0x4a8>
    c614:	mov	w0, #0x1a                  	// #26
    c618:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    c61c:	mov	x0, #0x0                   	// #0
    c620:	ldp	x29, x30, [sp], #16
    c624:	ret
    c628:	mov	w0, #0x15                  	// #21
    c62c:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    c630:	b	c61c <elf64_getshdr@@ELFUTILS_1.0+0x34>
    c634:	mov	x0, #0x0                   	// #0
    c638:	ret
    c63c:	nop

000000000000c640 <gelf_getshdr@@ELFUTILS_1.0>:
    c640:	cbz	x0, c704 <gelf_getshdr@@ELFUTILS_1.0+0xc4>
    c644:	stp	x29, x30, [sp, #-32]!
    c648:	mov	x29, sp
    c64c:	str	x19, [sp, #16]
    c650:	mov	x19, x1
    c654:	cbz	x1, c6ec <gelf_getshdr@@ELFUTILS_1.0+0xac>
    c658:	ldp	x2, x1, [x0, #136]
    c65c:	ldr	w2, [x2, #32]
    c660:	cmp	w2, #0x1
    c664:	b.eq	c69c <gelf_getshdr@@ELFUTILS_1.0+0x5c>  // b.none
    c668:	cbz	x1, c6e0 <gelf_getshdr@@ELFUTILS_1.0+0xa0>
    c66c:	ldp	x2, x3, [x1]
    c670:	stp	x2, x3, [x19]
    c674:	mov	x0, x19
    c678:	ldp	x2, x3, [x1, #16]
    c67c:	stp	x2, x3, [x19, #16]
    c680:	ldp	x2, x3, [x1, #32]
    c684:	stp	x2, x3, [x19, #32]
    c688:	ldp	x2, x3, [x1, #48]
    c68c:	stp	x2, x3, [x19, #48]
    c690:	ldr	x19, [sp, #16]
    c694:	ldp	x29, x30, [sp], #32
    c698:	ret
    c69c:	cbz	x1, c70c <gelf_getshdr@@ELFUTILS_1.0+0xcc>
    c6a0:	ldp	w3, w2, [x1]
    c6a4:	mov	x0, x19
    c6a8:	ldr	w4, [x1, #24]
    c6ac:	stp	w3, w2, [x19]
    c6b0:	ldp	w3, w2, [x1, #32]
    c6b4:	ldur	q0, [x1, #8]
    c6b8:	ldr	w1, [x1, #28]
    c6bc:	stp	w4, w1, [x19, #40]
    c6c0:	uxtl	v1.2d, v0.2s
    c6c4:	stp	x3, x2, [x19, #48]
    c6c8:	uxtl2	v0.2d, v0.4s
    c6cc:	stur	q1, [x19, #8]
    c6d0:	stur	q0, [x19, #24]
    c6d4:	ldr	x19, [sp, #16]
    c6d8:	ldp	x29, x30, [sp], #32
    c6dc:	ret
    c6e0:	bl	c4d8 <elf32_getshdr@@ELFUTILS_1.0+0x4a8>
    c6e4:	mov	x1, x0
    c6e8:	cbnz	x0, c66c <gelf_getshdr@@ELFUTILS_1.0+0x2c>
    c6ec:	mov	w0, #0x17                  	// #23
    c6f0:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    c6f4:	mov	x0, #0x0                   	// #0
    c6f8:	ldr	x19, [sp, #16]
    c6fc:	ldp	x29, x30, [sp], #32
    c700:	ret
    c704:	mov	x0, #0x0                   	// #0
    c708:	ret
    c70c:	bl	bf20 <elf_newscn@@ELFUTILS_1.0+0x658>
    c710:	mov	x1, x0
    c714:	cbz	x0, c6ec <gelf_getshdr@@ELFUTILS_1.0+0xac>
    c718:	b	c6a0 <gelf_getshdr@@ELFUTILS_1.0+0x60>
    c71c:	nop

000000000000c720 <gelf_update_shdr@@ELFUTILS_1.0>:
    c720:	cmp	x0, #0x0
    c724:	ccmp	x1, #0x0, #0x4, ne  // ne = any
    c728:	b.eq	c81c <gelf_update_shdr@@ELFUTILS_1.0+0xfc>  // b.none
    c72c:	stp	x29, x30, [sp, #-32]!
    c730:	mov	x29, sp
    c734:	stp	x19, x20, [sp, #16]
    c738:	mov	x19, x1
    c73c:	mov	x20, x0
    c740:	ldp	x2, x1, [x0, #136]
    c744:	ldr	w2, [x2, #32]
    c748:	cmp	w2, #0x1
    c74c:	b.eq	c790 <gelf_update_shdr@@ELFUTILS_1.0+0x70>  // b.none
    c750:	cbz	x1, c834 <gelf_update_shdr@@ELFUTILS_1.0+0x114>
    c754:	ldp	x2, x3, [x19]
    c758:	stp	x2, x3, [x1]
    c75c:	ldp	x2, x3, [x19, #16]
    c760:	stp	x2, x3, [x1, #16]
    c764:	ldp	x2, x3, [x19, #32]
    c768:	stp	x2, x3, [x1, #32]
    c76c:	ldp	x2, x3, [x19, #48]
    c770:	stp	x2, x3, [x1, #48]
    c774:	ldr	w1, [x20, #152]
    c778:	mov	w0, #0x1                   	// #1
    c77c:	orr	w1, w1, w0
    c780:	str	w1, [x20, #152]
    c784:	ldp	x19, x20, [sp, #16]
    c788:	ldp	x29, x30, [sp], #32
    c78c:	ret
    c790:	cbz	x1, c858 <gelf_update_shdr@@ELFUTILS_1.0+0x138>
    c794:	ldr	x0, [x19, #8]
    c798:	mov	x2, #0xffffffff            	// #4294967295
    c79c:	cmp	x0, x2
    c7a0:	b.hi	c824 <gelf_update_shdr@@ELFUTILS_1.0+0x104>  // b.pmore
    c7a4:	ldr	x5, [x19, #16]
    c7a8:	cmp	x5, x2
    c7ac:	b.hi	c824 <gelf_update_shdr@@ELFUTILS_1.0+0x104>  // b.pmore
    c7b0:	ldr	x3, [x19, #24]
    c7b4:	cmp	x3, x2
    c7b8:	b.hi	c824 <gelf_update_shdr@@ELFUTILS_1.0+0x104>  // b.pmore
    c7bc:	ldr	x6, [x19, #32]
    c7c0:	cmp	x6, x2
    c7c4:	b.hi	c824 <gelf_update_shdr@@ELFUTILS_1.0+0x104>  // b.pmore
    c7c8:	ldr	x4, [x19, #48]
    c7cc:	cmp	x4, x2
    c7d0:	b.hi	c824 <gelf_update_shdr@@ELFUTILS_1.0+0x104>  // b.pmore
    c7d4:	ldr	x7, [x19, #56]
    c7d8:	cmp	x7, x2
    c7dc:	b.hi	c824 <gelf_update_shdr@@ELFUTILS_1.0+0x104>  // b.pmore
    c7e0:	fmov	d0, x0
    c7e4:	fmov	d1, x3
    c7e8:	fmov	d2, x4
    c7ec:	ldr	d3, [x19]
    c7f0:	mov	v0.d[1], x5
    c7f4:	mov	v1.d[1], x6
    c7f8:	mov	v2.d[1], x7
    c7fc:	xtn	v0.2s, v0.2d
    c800:	xtn	v1.2s, v1.2d
    c804:	xtn	v2.2s, v2.2d
    c808:	stp	d3, d0, [x1]
    c80c:	str	d1, [x1, #16]
    c810:	ldr	d0, [x19, #40]
    c814:	stp	d0, d2, [x1, #24]
    c818:	b	c774 <gelf_update_shdr@@ELFUTILS_1.0+0x54>
    c81c:	mov	w0, #0x0                   	// #0
    c820:	ret
    c824:	mov	w0, #0x21                  	// #33
    c828:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    c82c:	mov	w0, #0x0                   	// #0
    c830:	b	c784 <gelf_update_shdr@@ELFUTILS_1.0+0x64>
    c834:	bl	c560 <elf32_getshdr@@ELFUTILS_1.0+0x530>
    c838:	mov	x1, x0
    c83c:	cbnz	x0, c754 <gelf_update_shdr@@ELFUTILS_1.0+0x34>
    c840:	mov	w0, #0x17                  	// #23
    c844:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    c848:	mov	w0, #0x0                   	// #0
    c84c:	ldp	x19, x20, [sp, #16]
    c850:	ldp	x29, x30, [sp], #32
    c854:	ret
    c858:	bl	bfa8 <elf_newscn@@ELFUTILS_1.0+0x6e0>
    c85c:	mov	x1, x0
    c860:	cbz	x0, c840 <gelf_update_shdr@@ELFUTILS_1.0+0x120>
    c864:	b	c794 <gelf_update_shdr@@ELFUTILS_1.0+0x74>

000000000000c868 <elf_strptr@@ELFUTILS_1.0>:
    c868:	stp	x29, x30, [sp, #-96]!
    c86c:	mov	x29, sp
    c870:	stp	x21, x22, [sp, #32]
    c874:	cbz	x0, ca78 <elf_strptr@@ELFUTILS_1.0+0x210>
    c878:	stp	x19, x20, [sp, #16]
    c87c:	mov	x20, x1
    c880:	ldr	w1, [x0, #24]
    c884:	stp	x23, x24, [sp, #48]
    c888:	add	x19, x0, #0xc8
    c88c:	mov	x24, x2
    c890:	cmp	w1, #0x3
    c894:	b.eq	c8a8 <elf_strptr@@ELFUTILS_1.0+0x40>  // b.none
    c898:	b	ca14 <elf_strptr@@ELFUTILS_1.0+0x1ac>
    c89c:	ldr	x19, [x19, #8]
    c8a0:	sub	x20, x20, x1
    c8a4:	cbz	x19, c9c0 <elf_strptr@@ELFUTILS_1.0+0x158>
    c8a8:	ldr	w1, [x19, #4]
    c8ac:	cmp	x1, x20
    c8b0:	b.ls	c89c <elf_strptr@@ELFUTILS_1.0+0x34>  // b.plast
    c8b4:	ldr	w1, [x19]
    c8b8:	cmp	x1, x20
    c8bc:	b.ls	c9c0 <elf_strptr@@ELFUTILS_1.0+0x158>  // b.plast
    c8c0:	lsl	x23, x20, #1
    c8c4:	ldr	w0, [x0, #32]
    c8c8:	add	x21, x23, x20
    c8cc:	cmp	w0, #0x1
    c8d0:	add	x21, x20, x21, lsl #2
    c8d4:	lsl	x21, x21, #4
    c8d8:	add	x0, x19, x21
    c8dc:	add	x21, x21, #0x10
    c8e0:	add	x21, x19, x21
    c8e4:	ldr	x0, [x0, #160]
    c8e8:	str	x25, [sp, #64]
    c8ec:	b.eq	ca38 <elf_strptr@@ELFUTILS_1.0+0x1d0>  // b.none
    c8f0:	cbz	x0, ca8c <elf_strptr@@ELFUTILS_1.0+0x224>
    c8f4:	ldr	w1, [x0, #4]
    c8f8:	cmp	w1, #0x3
    c8fc:	b.ne	ca98 <elf_strptr@@ELFUTILS_1.0+0x230>  // b.any
    c900:	ldr	x1, [x0, #8]
    c904:	tbz	w1, #11, ca0c <elf_strptr@@ELFUTILS_1.0+0x1a4>
    c908:	add	x25, x23, x20
    c90c:	add	x25, x20, x25, lsl #2
    c910:	add	x25, x19, x25, lsl #4
    c914:	ldr	x0, [x25, #192]
    c918:	cbz	x0, cadc <elf_strptr@@ELFUTILS_1.0+0x274>
    c91c:	add	x0, x23, x20
    c920:	add	x0, x20, x0, lsl #2
    c924:	add	x0, x19, x0, lsl #4
    c928:	ldr	x25, [x0, #200]
    c92c:	cmp	x25, x24
    c930:	b.ls	cab4 <elf_strptr@@ELFUTILS_1.0+0x24c>  // b.plast
    c934:	add	x0, x23, x20
    c938:	add	x0, x20, x0, lsl #2
    c93c:	add	x0, x19, x0, lsl #4
    c940:	ldr	x1, [x0, #176]
    c944:	cbz	x1, ca58 <elf_strptr@@ELFUTILS_1.0+0x1f0>
    c948:	add	x23, x23, x20
    c94c:	add	x20, x20, x23, lsl #2
    c950:	add	x19, x19, x20, lsl #4
    c954:	ldr	x22, [x19, #192]
    c958:	cbnz	x22, cabc <elf_strptr@@ELFUTILS_1.0+0x254>
    c95c:	ldr	x0, [x19, #80]
    c960:	cbnz	x0, c9e4 <elf_strptr@@ELFUTILS_1.0+0x17c>
    c964:	ldr	x22, [x19, #176]
    c968:	sub	x2, x25, x24
    c96c:	mov	w1, #0x0                   	// #0
    c970:	add	x22, x22, x24
    c974:	mov	x0, x22
    c978:	bl	3260 <memrchr@plt>
    c97c:	cbz	x0, c9bc <elf_strptr@@ELFUTILS_1.0+0x154>
    c980:	mov	x0, x22
    c984:	ldp	x19, x20, [sp, #16]
    c988:	ldp	x21, x22, [sp, #32]
    c98c:	ldp	x23, x24, [sp, #48]
    c990:	ldr	x25, [sp, #64]
    c994:	ldp	x29, x30, [sp], #96
    c998:	ret
    c99c:	ldr	x22, [x21]
    c9a0:	sub	x0, x24, x0
    c9a4:	sub	x2, x2, x24
    c9a8:	mov	w1, #0x0                   	// #0
    c9ac:	add	x22, x22, x0
    c9b0:	mov	x0, x22
    c9b4:	bl	3260 <memrchr@plt>
    c9b8:	cbnz	x0, c980 <elf_strptr@@ELFUTILS_1.0+0x118>
    c9bc:	ldr	x25, [sp, #64]
    c9c0:	mov	w0, #0x16                  	// #22
    c9c4:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    c9c8:	mov	x22, #0x0                   	// #0
    c9cc:	ldp	x19, x20, [sp, #16]
    c9d0:	ldp	x23, x24, [sp, #48]
    c9d4:	mov	x0, x22
    c9d8:	ldp	x21, x22, [sp, #32]
    c9dc:	ldp	x29, x30, [sp], #96
    c9e0:	ret
    c9e4:	ldr	x0, [x21, #24]
    c9e8:	cmp	x0, x24
    c9ec:	b.hi	ca00 <elf_strptr@@ELFUTILS_1.0+0x198>  // b.pmore
    c9f0:	ldr	x2, [x21, #16]
    c9f4:	add	x2, x0, x2
    c9f8:	cmp	x2, x24
    c9fc:	b.hi	c99c <elf_strptr@@ELFUTILS_1.0+0x134>  // b.pmore
    ca00:	ldr	x21, [x21, #48]
    ca04:	cbnz	x21, c9e4 <elf_strptr@@ELFUTILS_1.0+0x17c>
    ca08:	b	ca6c <elf_strptr@@ELFUTILS_1.0+0x204>
    ca0c:	ldr	x25, [x0, #32]
    ca10:	b	c92c <elf_strptr@@ELFUTILS_1.0+0xc4>
    ca14:	mov	w0, #0x4                   	// #4
    ca18:	mov	x22, #0x0                   	// #0
    ca1c:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    ca20:	mov	x0, x22
    ca24:	ldp	x19, x20, [sp, #16]
    ca28:	ldp	x21, x22, [sp, #32]
    ca2c:	ldp	x23, x24, [sp, #48]
    ca30:	ldp	x29, x30, [sp], #96
    ca34:	ret
    ca38:	cbz	x0, cb20 <elf_strptr@@ELFUTILS_1.0+0x2b8>
    ca3c:	ldr	w1, [x0, #4]
    ca40:	cmp	w1, #0x3
    ca44:	b.ne	ca98 <elf_strptr@@ELFUTILS_1.0+0x230>  // b.any
    ca48:	ldr	w1, [x0, #8]
    ca4c:	tbnz	w1, #11, c908 <elf_strptr@@ELFUTILS_1.0+0xa0>
    ca50:	ldr	w25, [x0, #20]
    ca54:	b	c92c <elf_strptr@@ELFUTILS_1.0+0xc4>
    ca58:	ldr	w0, [x0, #136]
    ca5c:	cbnz	w0, c948 <elf_strptr@@ELFUTILS_1.0+0xe0>
    ca60:	mov	x0, x21
    ca64:	bl	cc80 <elf_rawdata@@ELFUTILS_1.0+0x150>
    ca68:	cbz	w0, c948 <elf_strptr@@ELFUTILS_1.0+0xe0>
    ca6c:	ldp	x19, x20, [sp, #16]
    ca70:	ldp	x23, x24, [sp, #48]
    ca74:	ldr	x25, [sp, #64]
    ca78:	mov	x22, #0x0                   	// #0
    ca7c:	mov	x0, x22
    ca80:	ldp	x21, x22, [sp, #32]
    ca84:	ldp	x29, x30, [sp], #96
    ca88:	ret
    ca8c:	mov	x0, x21
    ca90:	bl	c4d8 <elf32_getshdr@@ELFUTILS_1.0+0x4a8>
    ca94:	b	c8f4 <elf_strptr@@ELFUTILS_1.0+0x8c>
    ca98:	mov	w0, #0x18                  	// #24
    ca9c:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    caa0:	mov	x22, #0x0                   	// #0
    caa4:	ldp	x19, x20, [sp, #16]
    caa8:	ldp	x23, x24, [sp, #48]
    caac:	ldr	x25, [sp, #64]
    cab0:	b	c9d4 <elf_strptr@@ELFUTILS_1.0+0x16c>
    cab4:	mov	w0, #0x1d                  	// #29
    cab8:	b	ca9c <elf_strptr@@ELFUTILS_1.0+0x234>
    cabc:	add	x22, x22, x24
    cac0:	sub	x2, x25, x24
    cac4:	mov	x0, x22
    cac8:	mov	w1, #0x0                   	// #0
    cacc:	bl	3260 <memrchr@plt>
    cad0:	cbnz	x0, c980 <elf_strptr@@ELFUTILS_1.0+0x118>
    cad4:	ldr	x25, [sp, #64]
    cad8:	b	c9c0 <elf_strptr@@ELFUTILS_1.0+0x158>
    cadc:	add	x2, sp, #0x58
    cae0:	add	x1, sp, #0x50
    cae4:	mov	x0, x21
    cae8:	bl	149c0 <gelf_getchdr@@ELFUTILS_1.7+0x658>
    caec:	mov	x22, x0
    caf0:	cbz	x0, c980 <elf_strptr@@ELFUTILS_1.0+0x118>
    caf4:	add	x0, x20, #0x1
    caf8:	str	x22, [x25, #192]
    cafc:	mov	x1, x0
    cb00:	add	x0, x0, x0, lsl #1
    cb04:	ldr	x2, [sp, #80]
    cb08:	add	x0, x1, x0, lsl #2
    cb0c:	str	x2, [x25, #200]
    cb10:	lsl	x0, x0, #4
    cb14:	ldr	x1, [sp, #88]
    cb18:	str	x1, [x19, x0]
    cb1c:	b	c91c <elf_strptr@@ELFUTILS_1.0+0xb4>
    cb20:	mov	x0, x21
    cb24:	bl	bf20 <elf_newscn@@ELFUTILS_1.0+0x658>
    cb28:	b	ca3c <elf_strptr@@ELFUTILS_1.0+0x1d4>
    cb2c:	nop

000000000000cb30 <elf_rawdata@@ELFUTILS_1.0>:
    cb30:	stp	x29, x30, [sp, #-32]!
    cb34:	mov	x29, sp
    cb38:	cbz	x0, cb7c <elf_rawdata@@ELFUTILS_1.0+0x4c>
    cb3c:	ldr	x2, [x0, #136]
    cb40:	str	x19, [sp, #16]
    cb44:	mov	x19, x0
    cb48:	ldr	w2, [x2, #24]
    cb4c:	cmp	w2, #0x3
    cb50:	b.ne	cb78 <elf_rawdata@@ELFUTILS_1.0+0x48>  // b.any
    cb54:	cbnz	x1, cba4 <elf_rawdata@@ELFUTILS_1.0+0x74>
    cb58:	ldr	w1, [x0, #120]
    cb5c:	cbz	w1, cb90 <elf_rawdata@@ELFUTILS_1.0+0x60>
    cb60:	ldr	w0, [x0, #156]
    cb64:	tbz	w0, #8, cba4 <elf_rawdata@@ELFUTILS_1.0+0x74>
    cb68:	add	x0, x19, #0x48
    cb6c:	ldr	x19, [sp, #16]
    cb70:	ldp	x29, x30, [sp], #32
    cb74:	ret
    cb78:	ldr	x19, [sp, #16]
    cb7c:	mov	w0, #0x4                   	// #4
    cb80:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    cb84:	mov	x0, #0x0                   	// #0
    cb88:	ldp	x29, x30, [sp], #32
    cb8c:	ret
    cb90:	bl	d080 <elf_rawdata@@ELFUTILS_1.0+0x550>
    cb94:	cbz	w0, cb68 <elf_rawdata@@ELFUTILS_1.0+0x38>
    cb98:	mov	x0, #0x0                   	// #0
    cb9c:	ldr	x19, [sp, #16]
    cba0:	b	cb70 <elf_rawdata@@ELFUTILS_1.0+0x40>
    cba4:	mov	w0, #0x1f                  	// #31
    cba8:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    cbac:	mov	x0, #0x0                   	// #0
    cbb0:	ldr	x19, [sp, #16]
    cbb4:	ldp	x29, x30, [sp], #32
    cbb8:	ret
    cbbc:	nop
    cbc0:	cmp	w1, #0x5
    cbc4:	b.ne	cbe0 <elf_rawdata@@ELFUTILS_1.0+0xb0>  // b.any
    cbc8:	ldr	w1, [x0, #32]
    cbcc:	mov	w3, #0xc                   	// #12
    cbd0:	cmp	w1, #0x2
    cbd4:	b.eq	cc30 <elf_rawdata@@ELFUTILS_1.0+0x100>  // b.none
    cbd8:	mov	w0, w3
    cbdc:	ret
    cbe0:	cmp	w1, #0x12
    cbe4:	b.ls	cc0c <elf_rawdata@@ELFUTILS_1.0+0xdc>  // b.plast
    cbe8:	mov	w0, #0xa                   	// #10
    cbec:	mov	w3, #0x0                   	// #0
    cbf0:	movk	w0, #0x9000, lsl #16
    cbf4:	add	w0, w1, w0
    cbf8:	cmp	w0, #0x9
    cbfc:	b.hi	cbd8 <elf_rawdata@@ELFUTILS_1.0+0xa8>  // b.pmore
    cc00:	mov	w0, #0x1d                  	// #29
    cc04:	movk	w0, #0x9000, lsl #16
    cc08:	add	w1, w1, w0
    cc0c:	adrp	x0, 15000 <elf_compress_gnu@@ELFUTILS_1.7+0x1b8>
    cc10:	add	x0, x0, #0xe50
    cc14:	mov	w4, #0x1a                  	// #26
    cc18:	ldr	w3, [x0, w1, sxtw #2]
    cc1c:	cmp	w3, #0x13
    cc20:	ccmp	x2, #0x8, #0x0, eq  // eq = none
    cc24:	csel	w3, w3, w4, ne  // ne = any
    cc28:	mov	w0, w3
    cc2c:	ret
    cc30:	stp	x29, x30, [sp, #-80]!
    cc34:	add	x1, sp, #0x10
    cc38:	mov	x29, sp
    cc3c:	bl	9020 <elf64_getehdr@@ELFUTILS_1.0+0x68>
    cc40:	ldrh	w1, [x0, #18]
    cc44:	mov	w2, #0x9026                	// #36902
    cc48:	mov	w3, #0xd                   	// #13
    cc4c:	cmp	w1, w2
    cc50:	b.eq	cc60 <elf_rawdata@@ELFUTILS_1.0+0x130>  // b.none
    cc54:	cmp	w1, #0x16
    cc58:	mov	w3, #0xc                   	// #12
    cc5c:	b.eq	cc6c <elf_rawdata@@ELFUTILS_1.0+0x13c>  // b.none
    cc60:	mov	w0, w3
    cc64:	ldp	x29, x30, [sp], #80
    cc68:	ret
    cc6c:	ldrb	w0, [x0, #4]
    cc70:	cmp	w0, #0x2
    cc74:	cset	w3, eq  // eq = none
    cc78:	add	w3, w3, #0xc
    cc7c:	b	cc60 <elf_rawdata@@ELFUTILS_1.0+0x130>
    cc80:	stp	x29, x30, [sp, #-208]!
    cc84:	mov	x29, sp
    cc88:	stp	x27, x28, [sp, #80]
    cc8c:	ldp	x28, x1, [x0, #136]
    cc90:	stp	x19, x20, [sp, #16]
    cc94:	mov	x19, x0
    cc98:	stp	x21, x22, [sp, #32]
    cc9c:	stp	x23, x24, [sp, #48]
    cca0:	ldr	w2, [x28, #32]
    cca4:	stp	x25, x26, [sp, #64]
    cca8:	cmp	w2, #0x1
    ccac:	b.eq	cdd4 <elf_rawdata@@ELFUTILS_1.0+0x2a4>  // b.none
    ccb0:	cbz	x1, ce44 <elf_rawdata@@ELFUTILS_1.0+0x314>
    ccb4:	ldp	x26, x24, [x1, #24]
    ccb8:	ldr	w27, [x1, #4]
    ccbc:	ldr	x22, [x1, #8]
    ccc0:	ldr	x20, [x1, #48]
    ccc4:	cmp	w27, #0x8
    ccc8:	and	x0, x22, #0x800
    cccc:	str	x0, [sp, #112]
    ccd0:	cset	w23, ne  // ne = any
    ccd4:	cmp	x24, #0x0
    ccd8:	ccmp	w23, #0x0, #0x4, ne  // ne = any
    ccdc:	b.eq	cd4c <elf_rawdata@@ELFUTILS_1.0+0x21c>  // b.none
    cce0:	cbz	x0, cde8 <elf_rawdata@@ELFUTILS_1.0+0x2b8>
    cce4:	ldr	w1, [x28, #32]
    cce8:	adrp	x0, 15000 <elf_compress_gnu@@ELFUTILS_1.7+0x1b8>
    ccec:	add	x0, x0, #0xe50
    ccf0:	sub	w1, w1, #0x1
    ccf4:	add	x2, x0, #0x80
    ccf8:	lsl	x0, x1, #3
    ccfc:	sub	x0, x0, x1
    cd00:	add	x0, x2, x0, lsl #2
    cd04:	sub	x0, x0, x1
    cd08:	ldrb	w20, [x0, #25]
    cd0c:	cmp	w20, #0x0
    cd10:	and	x20, x20, #0xff
    cd14:	csinc	x20, x20, xzr, ne  // ne = any
    cd18:	ldr	x0, [x28]
    cd1c:	cbz	x0, ce70 <elf_rawdata@@ELFUTILS_1.0+0x340>
    cd20:	ldr	x1, [x28, #48]
    cd24:	cmp	x1, x26
    cd28:	b.cc	cf98 <elf_rawdata@@ELFUTILS_1.0+0x468>  // b.lo, b.ul, b.last
    cd2c:	sub	x1, x1, x26
    cd30:	cmp	x1, x24
    cd34:	b.cc	cf98 <elf_rawdata@@ELFUTILS_1.0+0x468>  // b.lo, b.ul, b.last
    cd38:	ldr	x1, [x28, #40]
    cd3c:	add	x1, x26, x1
    cd40:	add	x0, x0, x1
    cd44:	str	x0, [x19, #72]
    cd48:	str	x0, [x19, #160]
    cd4c:	ldr	x0, [sp, #112]
    cd50:	str	x24, [x19, #88]
    cd54:	cbz	x0, cdbc <elf_rawdata@@ELFUTILS_1.0+0x28c>
    cd58:	mov	w0, #0x19                  	// #25
    cd5c:	str	w0, [x19, #80]
    cd60:	cmp	x20, #0x0
    cd64:	mov	x2, #0x1                   	// #1
    cd68:	csel	x20, x20, x2, ne  // ne = any
    cd6c:	cmp	w23, #0x0
    cd70:	ccmp	x26, x20, #0x2, ne  // ne = any
    cd74:	ldr	w1, [x19, #156]
    cd78:	csel	x26, x26, x20, cc  // cc = lo, ul, last
    cd7c:	stp	xzr, x26, [x19, #96]
    cd80:	orr	w1, w1, #0x100
    cd84:	ldr	x3, [x28, #72]
    cd88:	mov	w0, #0x0                   	// #0
    cd8c:	ldrb	w3, [x3, #6]
    cd90:	str	w3, [x19, #84]
    cd94:	str	x19, [x19, #112]
    cd98:	str	w2, [x19, #120]
    cd9c:	str	w1, [x19, #156]
    cda0:	ldp	x19, x20, [sp, #16]
    cda4:	ldp	x21, x22, [sp, #32]
    cda8:	ldp	x23, x24, [sp, #48]
    cdac:	ldp	x25, x26, [sp, #64]
    cdb0:	ldp	x27, x28, [sp, #80]
    cdb4:	ldp	x29, x30, [sp], #208
    cdb8:	ret
    cdbc:	mov	w1, w27
    cdc0:	mov	x2, x20
    cdc4:	mov	x0, x28
    cdc8:	bl	cbc0 <elf_rawdata@@ELFUTILS_1.0+0x90>
    cdcc:	str	w0, [x19, #80]
    cdd0:	b	cd60 <elf_rawdata@@ELFUTILS_1.0+0x230>
    cdd4:	cbz	x1, cfa8 <elf_rawdata@@ELFUTILS_1.0+0x478>
    cdd8:	ldp	w27, w22, [x1, #4]
    cddc:	ldp	w26, w24, [x1, #16]
    cde0:	ldr	w20, [x1, #32]
    cde4:	b	ccc4 <elf_rawdata@@ELFUTILS_1.0+0x194>
    cde8:	cmp	w27, #0x5
    cdec:	b.eq	cfbc <elf_rawdata@@ELFUTILS_1.0+0x48c>  // b.none
    cdf0:	cmp	w27, #0x12
    cdf4:	b.ls	cf74 <elf_rawdata@@ELFUTILS_1.0+0x444>  // b.plast
    cdf8:	mov	w0, #0xa                   	// #10
    cdfc:	movk	w0, #0x9000, lsl #16
    ce00:	add	w0, w27, w0
    ce04:	cmp	w0, #0x9
    ce08:	b.ls	d014 <elf_rawdata@@ELFUTILS_1.0+0x4e4>  // b.plast
    ce0c:	ldr	w1, [x28, #32]
    ce10:	mov	w0, #0x0                   	// #0
    ce14:	sub	w2, w1, #0x1
    ce18:	adrp	x3, 15000 <elf_compress_gnu@@ELFUTILS_1.7+0x1b8>
    ce1c:	add	x3, x3, #0x960
    ce20:	lsl	x1, x2, #3
    ce24:	sub	x1, x1, x2
    ce28:	lsl	x1, x1, #2
    ce2c:	sub	x1, x1, x2
    ce30:	add	x0, x1, w0, uxtw
    ce34:	ldr	x1, [x3, x0, lsl #3]
    ce38:	cmp	x1, #0x0
    ce3c:	csinc	x1, x1, xzr, ne  // ne = any
    ce40:	b	cff8 <elf_rawdata@@ELFUTILS_1.0+0x4c8>
    ce44:	bl	c560 <elf32_getshdr@@ELFUTILS_1.0+0x530>
    ce48:	mov	x1, x0
    ce4c:	cbnz	x0, ccb4 <elf_rawdata@@ELFUTILS_1.0+0x184>
    ce50:	mov	w0, #0x1                   	// #1
    ce54:	ldp	x19, x20, [sp, #16]
    ce58:	ldp	x21, x22, [sp, #32]
    ce5c:	ldp	x23, x24, [sp, #48]
    ce60:	ldp	x25, x26, [sp, #64]
    ce64:	ldp	x27, x28, [sp, #80]
    ce68:	ldp	x29, x30, [sp], #208
    ce6c:	ret
    ce70:	ldr	w0, [x28, #36]
    ce74:	str	w0, [sp, #124]
    ce78:	cmn	w0, #0x1
    ce7c:	b.eq	d05c <elf_rawdata@@ELFUTILS_1.0+0x52c>  // b.none
    ce80:	ldr	x0, [x28, #48]
    ce84:	cmp	x0, x26
    ce88:	b.cc	cf98 <elf_rawdata@@ELFUTILS_1.0+0x468>  // b.lo, b.ul, b.last
    ce8c:	sub	x0, x0, x26
    ce90:	cmp	x0, x24
    ce94:	b.cc	cf98 <elf_rawdata@@ELFUTILS_1.0+0x468>  // b.lo, b.ul, b.last
    ce98:	mov	x0, x24
    ce9c:	bl	30c0 <malloc@plt>
    cea0:	str	x0, [x19, #72]
    cea4:	str	x0, [sp, #128]
    cea8:	str	x0, [x19, #160]
    ceac:	cbz	x0, d06c <elf_rawdata@@ELFUTILS_1.0+0x53c>
    ceb0:	mov	x25, x0
    ceb4:	mov	x2, x24
    ceb8:	ldr	x0, [x28, #40]
    cebc:	mov	x22, #0x0                   	// #0
    cec0:	add	x0, x26, x0
    cec4:	str	x0, [sp, #136]
    cec8:	mov	x3, x0
    cecc:	ldr	w0, [sp, #124]
    ced0:	mov	x1, x25
    ced4:	stp	x2, x3, [sp, #96]
    ced8:	bl	3250 <pread@plt>
    cedc:	mov	x21, x0
    cee0:	cmn	x0, #0x1
    cee4:	ldp	x2, x3, [sp, #96]
    cee8:	b.eq	cf34 <elf_rawdata@@ELFUTILS_1.0+0x404>  // b.none
    ceec:	cmp	x0, #0x0
    cef0:	b.le	d054 <elf_rawdata@@ELFUTILS_1.0+0x524>
    cef4:	add	x22, x22, x0
    cef8:	cmp	x24, x22
    cefc:	b.ls	d04c <elf_rawdata@@ELFUTILS_1.0+0x51c>  // b.plast
    cf00:	ldr	x0, [sp, #136]
    cf04:	sub	x2, x24, x22
    cf08:	add	x3, x0, x22
    cf0c:	stp	x2, x3, [sp, #96]
    cf10:	ldr	x0, [sp, #128]
    cf14:	add	x25, x0, x22
    cf18:	ldr	w0, [sp, #124]
    cf1c:	mov	x1, x25
    cf20:	bl	3250 <pread@plt>
    cf24:	mov	x21, x0
    cf28:	cmn	x0, #0x1
    cf2c:	ldp	x2, x3, [sp, #96]
    cf30:	b.ne	ceec <elf_rawdata@@ELFUTILS_1.0+0x3bc>  // b.any
    cf34:	stp	x3, x2, [sp, #96]
    cf38:	bl	3340 <__errno_location@plt>
    cf3c:	ldr	w0, [x0]
    cf40:	ldp	x3, x2, [sp, #96]
    cf44:	cmp	w0, #0x4
    cf48:	b.eq	cecc <elf_rawdata@@ELFUTILS_1.0+0x39c>  // b.none
    cf4c:	cmp	x24, x21
    cf50:	b.eq	cd4c <elf_rawdata@@ELFUTILS_1.0+0x21c>  // b.none
    cf54:	ldr	x0, [x19, #72]
    cf58:	bl	3200 <free@plt>
    cf5c:	str	xzr, [x19, #72]
    cf60:	str	xzr, [x19, #160]
    cf64:	mov	w0, #0x13                  	// #19
    cf68:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    cf6c:	mov	w0, #0x1                   	// #1
    cf70:	b	ce54 <elf_rawdata@@ELFUTILS_1.0+0x324>
    cf74:	mov	w1, w27
    cf78:	adrp	x0, 15000 <elf_compress_gnu@@ELFUTILS_1.7+0x1b8>
    cf7c:	add	x0, x0, #0xe50
    cf80:	ldr	w0, [x0, w1, sxtw #2]
    cf84:	cmp	w0, #0x13
    cf88:	ccmp	x20, #0x8, #0x0, eq  // eq = none
    cf8c:	b.ne	d024 <elf_rawdata@@ELFUTILS_1.0+0x4f4>  // b.any
    cf90:	mov	x20, #0x8                   	// #8
    cf94:	b	cd18 <elf_rawdata@@ELFUTILS_1.0+0x1e8>
    cf98:	mov	w0, #0x20                  	// #32
    cf9c:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    cfa0:	mov	w0, #0x1                   	// #1
    cfa4:	b	cda0 <elf_rawdata@@ELFUTILS_1.0+0x270>
    cfa8:	bl	bfa8 <elf_newscn@@ELFUTILS_1.0+0x6e0>
    cfac:	mov	x1, x0
    cfb0:	cbnz	x0, cdd8 <elf_rawdata@@ELFUTILS_1.0+0x2a8>
    cfb4:	mov	w0, #0x1                   	// #1
    cfb8:	b	ce54 <elf_rawdata@@ELFUTILS_1.0+0x324>
    cfbc:	add	x1, sp, #0x90
    cfc0:	mov	x0, x28
    cfc4:	bl	9020 <elf64_getehdr@@ELFUTILS_1.0+0x68>
    cfc8:	ldrh	w2, [x0, #18]
    cfcc:	mov	w3, #0x9026                	// #36902
    cfd0:	mov	x1, #0x8                   	// #8
    cfd4:	cmp	w2, w3
    cfd8:	b.eq	cff8 <elf_rawdata@@ELFUTILS_1.0+0x4c8>  // b.none
    cfdc:	cmp	w2, #0x16
    cfe0:	mov	x1, #0x4                   	// #4
    cfe4:	b.ne	cff8 <elf_rawdata@@ELFUTILS_1.0+0x4c8>  // b.any
    cfe8:	ldrb	w2, [x0, #4]
    cfec:	mov	x0, #0x8                   	// #8
    cff0:	cmp	w2, #0x2
    cff4:	csel	x1, x1, x0, ne  // ne = any
    cff8:	udiv	x0, x24, x1
    cffc:	msub	x1, x0, x1, x24
    d000:	cbz	x1, cd18 <elf_rawdata@@ELFUTILS_1.0+0x1e8>
    d004:	mov	w0, #0x21                  	// #33
    d008:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    d00c:	mov	w0, #0x1                   	// #1
    d010:	b	cda0 <elf_rawdata@@ELFUTILS_1.0+0x270>
    d014:	mov	w1, #0x1d                  	// #29
    d018:	movk	w1, #0x9000, lsl #16
    d01c:	add	w1, w27, w1
    d020:	b	cf78 <elf_rawdata@@ELFUTILS_1.0+0x448>
    d024:	sub	w1, w0, #0xf
    d028:	tst	w1, #0xfffffffb
    d02c:	ccmp	w0, #0x1a, #0x4, ne  // ne = any
    d030:	b.eq	cd18 <elf_rawdata@@ELFUTILS_1.0+0x1e8>  // b.none
    d034:	ldr	w1, [x28, #32]
    d038:	cmp	w0, #0x17
    d03c:	b.ne	ce14 <elf_rawdata@@ELFUTILS_1.0+0x2e4>  // b.any
    d040:	cmp	w1, #0x2
    d044:	b.ne	ce14 <elf_rawdata@@ELFUTILS_1.0+0x2e4>  // b.any
    d048:	b	cd18 <elf_rawdata@@ELFUTILS_1.0+0x1e8>
    d04c:	mov	x21, x22
    d050:	b	cf4c <elf_rawdata@@ELFUTILS_1.0+0x41c>
    d054:	csel	x21, x0, x22, ne  // ne = any
    d058:	b	cf4c <elf_rawdata@@ELFUTILS_1.0+0x41c>
    d05c:	mov	w0, #0x1b                  	// #27
    d060:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    d064:	mov	w0, #0x1                   	// #1
    d068:	b	cda0 <elf_rawdata@@ELFUTILS_1.0+0x270>
    d06c:	mov	w0, #0x8                   	// #8
    d070:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    d074:	mov	w0, #0x1                   	// #1
    d078:	b	cda0 <elf_rawdata@@ELFUTILS_1.0+0x270>
    d07c:	nop
    d080:	cbz	x0, d088 <elf_rawdata@@ELFUTILS_1.0+0x558>
    d084:	b	cc80 <elf_rawdata@@ELFUTILS_1.0+0x150>
    d088:	mov	w0, #0x1                   	// #1
    d08c:	ret
    d090:	stp	x29, x30, [sp, #-80]!
    d094:	mov	x29, sp
    d098:	stp	x19, x20, [sp, #16]
    d09c:	mov	x19, x0
    d0a0:	ldr	x0, [x0, #72]
    d0a4:	cbz	x0, d0d4 <elf_rawdata@@ELFUTILS_1.0+0x5a4>
    d0a8:	stp	x21, x22, [sp, #32]
    d0ac:	ldr	x21, [x19, #88]
    d0b0:	cbz	x21, d0d0 <elf_rawdata@@ELFUTILS_1.0+0x5a0>
    d0b4:	cbnz	w1, d0fc <elf_rawdata@@ELFUTILS_1.0+0x5cc>
    d0b8:	ldr	x0, [x19, #64]
    d0bc:	cbz	x0, d0fc <elf_rawdata@@ELFUTILS_1.0+0x5cc>
    d0c0:	ldp	x19, x20, [sp, #16]
    d0c4:	ldp	x21, x22, [sp, #32]
    d0c8:	ldp	x29, x30, [sp], #80
    d0cc:	ret
    d0d0:	ldp	x21, x22, [sp, #32]
    d0d4:	ldp	x2, x3, [x19, #72]
    d0d8:	stp	x2, x3, [x19]
    d0dc:	ldp	x2, x3, [x19, #88]
    d0e0:	stp	x2, x3, [x19, #16]
    d0e4:	ldr	x0, [x19, #104]
    d0e8:	stp	x0, x19, [x19, #32]
    d0ec:	str	x19, [x19, #64]
    d0f0:	ldp	x19, x20, [sp, #16]
    d0f4:	ldp	x29, x30, [sp], #80
    d0f8:	ret
    d0fc:	ldr	x2, [x19, #136]
    d100:	adrp	x0, 15000 <elf_compress_gnu@@ELFUTILS_1.7+0x1b8>
    d104:	add	x0, x0, #0xe50
    d108:	stp	x23, x24, [sp, #48]
    d10c:	add	x1, x0, #0x80
    d110:	ldr	w0, [x2, #32]
    d114:	ldr	w22, [x19, #80]
    d118:	sub	w0, w0, #0x1
    d11c:	ldr	x2, [x2, #72]
    d120:	sxtw	x23, w0
    d124:	sbfiz	x0, x0, #3, #32
    d128:	sub	x0, x0, x23
    d12c:	ldrb	w2, [x2, #5]
    d130:	add	x0, x1, x0, lsl #2
    d134:	sub	x0, x0, x23
    d138:	ldrb	w0, [x0, w22, uxtw]
    d13c:	cmp	w0, #0x0
    d140:	csinc	w0, w0, wzr, ne  // ne = any
    d144:	cmp	w22, #0x0
    d148:	and	x20, x0, #0xff
    d14c:	ccmp	w2, #0x1, #0x4, ne  // ne = any
    d150:	b.ne	d18c <elf_rawdata@@ELFUTILS_1.0+0x65c>  // b.any
    d154:	ldr	x23, [x19, #160]
    d158:	sub	x0, x20, #0x1
    d15c:	tst	x23, x0
    d160:	b.ne	d228 <elf_rawdata@@ELFUTILS_1.0+0x6f8>  // b.any
    d164:	str	x23, [x19, #168]
    d168:	ldr	w2, [x19, #84]
    d16c:	ldp	x1, x0, [x19, #96]
    d170:	str	x23, [x19]
    d174:	stp	w22, w2, [x19, #8]
    d178:	stp	x21, x1, [x19, #16]
    d17c:	stp	x0, x19, [x19, #32]
    d180:	ldp	x21, x22, [sp, #32]
    d184:	ldp	x23, x24, [sp, #48]
    d188:	b	d0ec <elf_rawdata@@ELFUTILS_1.0+0x5bc>
    d18c:	mov	x0, x21
    d190:	bl	30c0 <malloc@plt>
    d194:	str	x0, [x19, #168]
    d198:	mov	x24, x0
    d19c:	cbz	x0, d250 <elf_rawdata@@ELFUTILS_1.0+0x720>
    d1a0:	str	x25, [sp, #64]
    d1a4:	sub	x20, x20, #0x1
    d1a8:	ldr	x25, [x19, #160]
    d1ac:	tst	x25, x20
    d1b0:	b.ne	d208 <elf_rawdata@@ELFUTILS_1.0+0x6d8>  // b.any
    d1b4:	lsl	x1, x23, #3
    d1b8:	adrp	x4, 2a000 <elf_compress_gnu@@ELFUTILS_1.7+0x151b8>
    d1bc:	sub	x1, x1, x23
    d1c0:	add	x4, x4, #0xbd0
    d1c4:	mov	x0, x24
    d1c8:	mov	x2, x21
    d1cc:	lsl	x1, x1, #2
    d1d0:	mov	w3, #0x0                   	// #0
    d1d4:	sub	x23, x1, x23
    d1d8:	mov	x1, x25
    d1dc:	add	x23, x23, w22, uxtw
    d1e0:	ldr	x4, [x4, x23, lsl #3]
    d1e4:	blr	x4
    d1e8:	ldr	x0, [x19, #160]
    d1ec:	cmp	x25, x0
    d1f0:	b.eq	d1fc <elf_rawdata@@ELFUTILS_1.0+0x6cc>  // b.none
    d1f4:	mov	x0, x25
    d1f8:	bl	3200 <free@plt>
    d1fc:	ldr	x25, [sp, #64]
    d200:	ldr	x23, [x19, #168]
    d204:	b	d168 <elf_rawdata@@ELFUTILS_1.0+0x638>
    d208:	mov	x0, x21
    d20c:	bl	30c0 <malloc@plt>
    d210:	cbz	x0, d24c <elf_rawdata@@ELFUTILS_1.0+0x71c>
    d214:	mov	x1, x25
    d218:	mov	x2, x21
    d21c:	mov	x25, x0
    d220:	bl	3020 <memcpy@plt>
    d224:	b	d1b4 <elf_rawdata@@ELFUTILS_1.0+0x684>
    d228:	mov	x0, x21
    d22c:	bl	30c0 <malloc@plt>
    d230:	str	x0, [x19, #168]
    d234:	cbz	x0, d250 <elf_rawdata@@ELFUTILS_1.0+0x720>
    d238:	mov	x1, x23
    d23c:	mov	x2, x21
    d240:	mov	x23, x0
    d244:	bl	3020 <memcpy@plt>
    d248:	b	d168 <elf_rawdata@@ELFUTILS_1.0+0x638>
    d24c:	ldr	x25, [sp, #64]
    d250:	mov	w0, #0x8                   	// #8
    d254:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    d258:	ldp	x21, x22, [sp, #32]
    d25c:	ldp	x23, x24, [sp, #48]
    d260:	b	d0ec <elf_rawdata@@ELFUTILS_1.0+0x5bc>
    d264:	nop
    d268:	cbz	x0, d33c <elf_rawdata@@ELFUTILS_1.0+0x80c>
    d26c:	stp	x29, x30, [sp, #-32]!
    d270:	mov	x29, sp
    d274:	ldr	x2, [x0, #136]
    d278:	str	x19, [sp, #16]
    d27c:	mov	x19, x0
    d280:	ldr	w2, [x2, #24]
    d284:	cmp	w2, #0x3
    d288:	b.ne	d31c <elf_rawdata@@ELFUTILS_1.0+0x7ec>  // b.any
    d28c:	cbz	x1, d2d8 <elf_rawdata@@ELFUTILS_1.0+0x7a8>
    d290:	ldr	x0, [x0, #64]
    d294:	cbz	x0, d2c0 <elf_rawdata@@ELFUTILS_1.0+0x790>
    d298:	ldr	x0, [x1, #40]
    d29c:	cmp	x0, x19
    d2a0:	b.ne	d2c0 <elf_rawdata@@ELFUTILS_1.0+0x790>  // b.any
    d2a4:	cmp	x1, x0
    d2a8:	b.ne	d2b4 <elf_rawdata@@ELFUTILS_1.0+0x784>  // b.any
    d2ac:	b	d2fc <elf_rawdata@@ELFUTILS_1.0+0x7cc>
    d2b0:	b.eq	d2fc <elf_rawdata@@ELFUTILS_1.0+0x7cc>  // b.none
    d2b4:	ldr	x0, [x0, #48]
    d2b8:	cmp	x0, x1
    d2bc:	cbnz	x0, d2b0 <elf_rawdata@@ELFUTILS_1.0+0x780>
    d2c0:	mov	w0, #0x1f                  	// #31
    d2c4:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    d2c8:	mov	x0, #0x0                   	// #0
    d2cc:	ldr	x19, [sp, #16]
    d2d0:	ldp	x29, x30, [sp], #32
    d2d4:	ret
    d2d8:	ldr	w2, [x0, #120]
    d2dc:	mov	w1, #0x0                   	// #0
    d2e0:	cbz	w2, d30c <elf_rawdata@@ELFUTILS_1.0+0x7dc>
    d2e4:	ldr	x0, [x19, #64]
    d2e8:	cbz	x0, d32c <elf_rawdata@@ELFUTILS_1.0+0x7fc>
    d2ec:	mov	x0, x19
    d2f0:	ldr	x19, [sp, #16]
    d2f4:	ldp	x29, x30, [sp], #32
    d2f8:	ret
    d2fc:	ldr	x19, [sp, #16]
    d300:	ldp	x29, x30, [sp], #32
    d304:	ldr	x0, [x0, #48]
    d308:	ret
    d30c:	bl	cc80 <elf_rawdata@@ELFUTILS_1.0+0x150>
    d310:	cbnz	w0, d2c8 <elf_rawdata@@ELFUTILS_1.0+0x798>
    d314:	mov	w1, #0x1                   	// #1
    d318:	b	d2e4 <elf_rawdata@@ELFUTILS_1.0+0x7b4>
    d31c:	mov	w0, #0x4                   	// #4
    d320:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    d324:	mov	x0, #0x0                   	// #0
    d328:	b	d2cc <elf_rawdata@@ELFUTILS_1.0+0x79c>
    d32c:	mov	x0, x19
    d330:	bl	d090 <elf_rawdata@@ELFUTILS_1.0+0x560>
    d334:	mov	x0, x19
    d338:	b	d2f0 <elf_rawdata@@ELFUTILS_1.0+0x7c0>
    d33c:	mov	x0, #0x0                   	// #0
    d340:	ret
    d344:	nop

000000000000d348 <elf_getdata@@ELFUTILS_1.0>:
    d348:	cbz	x0, d350 <elf_getdata@@ELFUTILS_1.0+0x8>
    d34c:	b	d268 <elf_rawdata@@ELFUTILS_1.0+0x738>
    d350:	ret
    d354:	nop

000000000000d358 <elf_newdata@@ELFUTILS_1.0>:
    d358:	stp	x29, x30, [sp, #-32]!
    d35c:	mov	x29, sp
    d360:	stp	x19, x20, [sp, #16]
    d364:	cbz	x0, d3ec <elf_newdata@@ELFUTILS_1.0+0x94>
    d368:	ldr	x1, [x0, #128]
    d36c:	mov	x19, x0
    d370:	cbz	x1, d444 <elf_newdata@@ELFUTILS_1.0+0xec>
    d374:	ldr	x1, [x0, #136]
    d378:	ldr	x20, [x1, #72]
    d37c:	cbz	x20, d454 <elf_newdata@@ELFUTILS_1.0+0xfc>
    d380:	ldr	w1, [x0, #120]
    d384:	cbz	w1, d3e0 <elf_newdata@@ELFUTILS_1.0+0x88>
    d388:	ldr	x2, [x0, #160]
    d38c:	ldr	x1, [x0, #64]
    d390:	cbz	x2, d424 <elf_newdata@@ELFUTILS_1.0+0xcc>
    d394:	cbz	x1, d410 <elf_newdata@@ELFUTILS_1.0+0xb8>
    d398:	mov	x1, #0x40                  	// #64
    d39c:	mov	x0, #0x1                   	// #1
    d3a0:	bl	3140 <calloc@plt>
    d3a4:	cbz	x0, d460 <elf_newdata@@ELFUTILS_1.0+0x108>
    d3a8:	ldr	x1, [x19, #64]
    d3ac:	mov	w2, #0x81                  	// #129
    d3b0:	mov	w3, #0x1                   	// #1
    d3b4:	str	w3, [x0, #12]
    d3b8:	str	x19, [x0, #40]
    d3bc:	mov	x20, x0
    d3c0:	str	w2, [x0, #56]
    d3c4:	cbz	x1, d3cc <elf_newdata@@ELFUTILS_1.0+0x74>
    d3c8:	str	x0, [x1, #48]
    d3cc:	str	x0, [x19, #64]
    d3d0:	mov	x0, x20
    d3d4:	ldp	x19, x20, [sp, #16]
    d3d8:	ldp	x29, x30, [sp], #32
    d3dc:	ret
    d3e0:	mov	x0, x19
    d3e4:	bl	cc80 <elf_rawdata@@ELFUTILS_1.0+0x150>
    d3e8:	cbz	w0, d400 <elf_newdata@@ELFUTILS_1.0+0xa8>
    d3ec:	mov	x20, #0x0                   	// #0
    d3f0:	mov	x0, x20
    d3f4:	ldp	x19, x20, [sp, #16]
    d3f8:	ldp	x29, x30, [sp], #32
    d3fc:	ret
    d400:	mov	x0, x19
    d404:	mov	w1, #0x1                   	// #1
    d408:	bl	d090 <elf_rawdata@@ELFUTILS_1.0+0x560>
    d40c:	b	d398 <elf_newdata@@ELFUTILS_1.0+0x40>
    d410:	mov	w1, #0x1                   	// #1
    d414:	bl	d090 <elf_rawdata@@ELFUTILS_1.0+0x560>
    d418:	ldr	w0, [x19, #120]
    d41c:	cbz	w0, d3e0 <elf_newdata@@ELFUTILS_1.0+0x88>
    d420:	ldr	x1, [x19, #64]
    d424:	cbnz	x1, d398 <elf_newdata@@ELFUTILS_1.0+0x40>
    d428:	mov	w1, #0x1                   	// #1
    d42c:	mov	x0, x19
    d430:	mov	x20, x19
    d434:	str	w1, [x19, #12]
    d438:	str	x19, [x19, #40]
    d43c:	str	w1, [x19, #56]
    d440:	b	d3cc <elf_newdata@@ELFUTILS_1.0+0x74>
    d444:	mov	w0, #0x1e                  	// #30
    d448:	mov	x20, #0x0                   	// #0
    d44c:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    d450:	b	d3d0 <elf_newdata@@ELFUTILS_1.0+0x78>
    d454:	mov	w0, #0x1a                  	// #26
    d458:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    d45c:	b	d3d0 <elf_newdata@@ELFUTILS_1.0+0x78>
    d460:	mov	w0, #0x8                   	// #8
    d464:	mov	x20, #0x0                   	// #0
    d468:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    d46c:	b	d3d0 <elf_newdata@@ELFUTILS_1.0+0x78>

000000000000d470 <elf_getdata_rawchunk@@ELFUTILS_1.3>:
    d470:	stp	x29, x30, [sp, #-128]!
    d474:	mov	x29, sp
    d478:	stp	x27, x28, [sp, #80]
    d47c:	cbz	x0, d768 <elf_getdata_rawchunk@@ELFUTILS_1.3+0x2f8>
    d480:	stp	x19, x20, [sp, #16]
    d484:	mov	x19, x0
    d488:	ldr	w0, [x0, #24]
    d48c:	cmp	w0, #0x3
    d490:	b.ne	d77c <elf_getdata_rawchunk@@ELFUTILS_1.3+0x30c>  // b.any
    d494:	stp	x21, x22, [sp, #32]
    d498:	mov	x21, x1
    d49c:	tbnz	x1, #63, d5e0 <elf_getdata_rawchunk@@ELFUTILS_1.3+0x170>
    d4a0:	ldr	x1, [x19, #48]
    d4a4:	cmp	x1, x21
    d4a8:	b.cc	d5e0 <elf_getdata_rawchunk@@ELFUTILS_1.3+0x170>  // b.lo, b.ul, b.last
    d4ac:	sub	x1, x1, x21
    d4b0:	mov	x20, x2
    d4b4:	cmp	x1, x2
    d4b8:	b.cc	d5e0 <elf_getdata_rawchunk@@ELFUTILS_1.3+0x170>  // b.lo, b.ul, b.last
    d4bc:	stp	x23, x24, [sp, #48]
    d4c0:	cmp	w3, #0x1a
    d4c4:	mov	w23, w3
    d4c8:	b.hi	d790 <elf_getdata_rawchunk@@ELFUTILS_1.3+0x320>  // b.pmore
    d4cc:	ldr	w4, [x19, #32]
    d4d0:	adrp	x0, 15000 <elf_compress_gnu@@ELFUTILS_1.7+0x1b8>
    d4d4:	add	x1, x0, #0xed0
    d4d8:	stp	x25, x26, [sp, #64]
    d4dc:	sub	w22, w4, #0x1
    d4e0:	ldr	x28, [x19]
    d4e4:	lsl	x0, x22, #3
    d4e8:	sub	x0, x0, x22
    d4ec:	add	x0, x1, x0, lsl #2
    d4f0:	sub	x0, x0, x22
    d4f4:	ldrb	w24, [x0, w3, uxtw]
    d4f8:	cmp	w24, #0x0
    d4fc:	csinc	w24, w24, wzr, ne  // ne = any
    d500:	and	x0, x24, #0xff
    d504:	str	x0, [sp, #112]
    d508:	cbz	x28, d620 <elf_getdata_rawchunk@@ELFUTILS_1.3+0x1b0>
    d50c:	ldr	x1, [x19, #40]
    d510:	sub	x26, x0, #0x1
    d514:	add	x21, x21, x1
    d518:	add	x21, x28, x21
    d51c:	tst	x21, x26
    d520:	b.ne	d6f0 <elf_getdata_rawchunk@@ELFUTILS_1.3+0x280>  // b.any
    d524:	ldr	x0, [x19, #72]
    d528:	ldrb	w0, [x0, #5]
    d52c:	cmp	w0, #0x1
    d530:	b.eq	d604 <elf_getdata_rawchunk@@ELFUTILS_1.3+0x194>  // b.none
    d534:	mov	x0, x2
    d538:	bl	30c0 <malloc@plt>
    d53c:	mov	x25, x0
    d540:	cbz	x0, d748 <elf_getdata_rawchunk@@ELFUTILS_1.3+0x2d8>
    d544:	lsl	x4, x22, #3
    d548:	adrp	x5, 2a000 <elf_compress_gnu@@ELFUTILS_1.7+0x151b8>
    d54c:	sub	x4, x4, x22
    d550:	add	x5, x5, #0xbd0
    d554:	mov	x2, x20
    d558:	mov	w3, #0x0                   	// #0
    d55c:	lsl	x4, x4, #2
    d560:	mov	x1, x21
    d564:	sub	x4, x4, x22
    d568:	mov	x0, x25
    d56c:	add	x4, x4, w23, uxtw
    d570:	ldr	x4, [x5, x4, lsl #3]
    d574:	blr	x4
    d578:	mov	x1, #0x100                 	// #256
    d57c:	mov	x0, #0x1                   	// #1
    d580:	bl	3140 <calloc@plt>
    d584:	cbz	x0, d73c <elf_getdata_rawchunk@@ELFUTILS_1.3+0x2cc>
    d588:	mov	w1, #0x80                  	// #128
    d58c:	mov	w4, #0x1                   	// #1
    d590:	add	x3, x0, #0x30
    d594:	ldp	x21, x22, [sp, #32]
    d598:	stp	w23, w4, [x0, #8]
    d59c:	ldr	x2, [x19, #104]
    d5a0:	str	x25, [x0]
    d5a4:	ldr	x4, [sp, #112]
    d5a8:	str	x20, [x0, #16]
    d5ac:	stp	x3, x2, [x0, #40]
    d5b0:	mov	x28, x0
    d5b4:	str	x19, [x0, #184]
    d5b8:	str	w1, [x0, #204]
    d5bc:	ldp	x23, x24, [sp, #48]
    d5c0:	ldp	x25, x26, [sp, #64]
    d5c4:	str	x4, [x0, #32]
    d5c8:	str	x0, [x19, #104]
    d5cc:	mov	x0, x28
    d5d0:	ldp	x19, x20, [sp, #16]
    d5d4:	ldp	x27, x28, [sp, #80]
    d5d8:	ldp	x29, x30, [sp], #128
    d5dc:	ret
    d5e0:	mov	w0, #0xb                   	// #11
    d5e4:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    d5e8:	ldp	x19, x20, [sp, #16]
    d5ec:	mov	x28, #0x0                   	// #0
    d5f0:	ldp	x21, x22, [sp, #32]
    d5f4:	mov	x0, x28
    d5f8:	ldp	x27, x28, [sp, #80]
    d5fc:	ldp	x29, x30, [sp], #128
    d600:	ret
    d604:	mov	x1, #0x100                 	// #256
    d608:	mov	x0, #0x1                   	// #1
    d60c:	bl	3140 <calloc@plt>
    d610:	cbz	x0, d748 <elf_getdata_rawchunk@@ELFUTILS_1.3+0x2d8>
    d614:	mov	x25, x21
    d618:	mov	w1, #0x0                   	// #0
    d61c:	b	d58c <elf_getdata_rawchunk@@ELFUTILS_1.3+0x11c>
    d620:	mov	x0, x2
    d624:	bl	30c0 <malloc@plt>
    d628:	mov	x25, x0
    d62c:	cbz	x0, d748 <elf_getdata_rawchunk@@ELFUTILS_1.3+0x2d8>
    d630:	mov	x27, x0
    d634:	ldr	w1, [x19, #36]
    d638:	ldr	x0, [x19, #40]
    d63c:	mov	x24, x20
    d640:	str	w1, [sp, #108]
    d644:	add	x0, x21, x0
    d648:	mov	x21, #0x0                   	// #0
    d64c:	mov	x26, x0
    d650:	str	x0, [sp, #120]
    d654:	ldr	w0, [sp, #108]
    d658:	mov	x3, x26
    d65c:	mov	x2, x24
    d660:	mov	x1, x27
    d664:	bl	3250 <pread@plt>
    d668:	mov	x22, x0
    d66c:	cmn	x0, #0x1
    d670:	b.eq	d6b8 <elf_getdata_rawchunk@@ELFUTILS_1.3+0x248>  // b.none
    d674:	cmp	x0, #0x0
    d678:	b.le	d7bc <elf_getdata_rawchunk@@ELFUTILS_1.3+0x34c>
    d67c:	add	x21, x21, x0
    d680:	cmp	x20, x21
    d684:	b.ls	d7a8 <elf_getdata_rawchunk@@ELFUTILS_1.3+0x338>  // b.plast
    d688:	ldr	x0, [sp, #120]
    d68c:	sub	x24, x20, x21
    d690:	add	x27, x25, x21
    d694:	mov	x2, x24
    d698:	add	x26, x0, x21
    d69c:	ldr	w0, [sp, #108]
    d6a0:	mov	x3, x26
    d6a4:	mov	x1, x27
    d6a8:	bl	3250 <pread@plt>
    d6ac:	mov	x22, x0
    d6b0:	cmn	x0, #0x1
    d6b4:	b.ne	d674 <elf_getdata_rawchunk@@ELFUTILS_1.3+0x204>  // b.any
    d6b8:	bl	3340 <__errno_location@plt>
    d6bc:	ldr	w0, [x0]
    d6c0:	cmp	w0, #0x4
    d6c4:	b.eq	d654 <elf_getdata_rawchunk@@ELFUTILS_1.3+0x1e4>  // b.none
    d6c8:	cmp	x20, x22
    d6cc:	b.ne	d7c4 <elf_getdata_rawchunk@@ELFUTILS_1.3+0x354>  // b.any
    d6d0:	ldr	x0, [x19, #72]
    d6d4:	ldrb	w0, [x0, #5]
    d6d8:	cmp	w0, #0x1
    d6dc:	b.eq	d7b0 <elf_getdata_rawchunk@@ELFUTILS_1.3+0x340>  // b.none
    d6e0:	ldr	w4, [x19, #32]
    d6e4:	mov	x21, x25
    d6e8:	sub	w22, w4, #0x1
    d6ec:	b	d544 <elf_getdata_rawchunk@@ELFUTILS_1.3+0xd4>
    d6f0:	mov	x0, x2
    d6f4:	bl	30c0 <malloc@plt>
    d6f8:	mov	x25, x0
    d6fc:	cbz	x0, d748 <elf_getdata_rawchunk@@ELFUTILS_1.3+0x2d8>
    d700:	mov	x1, x21
    d704:	mov	x2, x20
    d708:	bl	3020 <memcpy@plt>
    d70c:	mov	x21, x25
    d710:	ldr	x0, [x19, #72]
    d714:	ldrb	w0, [x0, #5]
    d718:	cmp	w0, #0x1
    d71c:	b.ne	d544 <elf_getdata_rawchunk@@ELFUTILS_1.3+0xd4>  // b.any
    d720:	tst	x25, x26
    d724:	b.ne	d7d4 <elf_getdata_rawchunk@@ELFUTILS_1.3+0x364>  // b.any
    d728:	mov	x1, #0x100                 	// #256
    d72c:	mov	x0, #0x1                   	// #1
    d730:	bl	3140 <calloc@plt>
    d734:	mov	w1, #0x80                  	// #128
    d738:	cbnz	x0, d58c <elf_getdata_rawchunk@@ELFUTILS_1.3+0x11c>
    d73c:	mov	x0, x25
    d740:	bl	3200 <free@plt>
    d744:	nop
    d748:	mov	w0, #0x8                   	// #8
    d74c:	mov	x28, #0x0                   	// #0
    d750:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    d754:	ldp	x19, x20, [sp, #16]
    d758:	ldp	x21, x22, [sp, #32]
    d75c:	ldp	x23, x24, [sp, #48]
    d760:	ldp	x25, x26, [sp, #64]
    d764:	b	d5f4 <elf_getdata_rawchunk@@ELFUTILS_1.3+0x184>
    d768:	mov	x28, #0x0                   	// #0
    d76c:	mov	x0, x28
    d770:	ldp	x27, x28, [sp, #80]
    d774:	ldp	x29, x30, [sp], #128
    d778:	ret
    d77c:	mov	w0, #0x4                   	// #4
    d780:	mov	x28, #0x0                   	// #0
    d784:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    d788:	ldp	x19, x20, [sp, #16]
    d78c:	b	d5f4 <elf_getdata_rawchunk@@ELFUTILS_1.3+0x184>
    d790:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    d794:	mov	x28, #0x0                   	// #0
    d798:	ldp	x19, x20, [sp, #16]
    d79c:	ldp	x21, x22, [sp, #32]
    d7a0:	ldp	x23, x24, [sp, #48]
    d7a4:	b	d5f4 <elf_getdata_rawchunk@@ELFUTILS_1.3+0x184>
    d7a8:	mov	x22, x21
    d7ac:	b	d6c8 <elf_getdata_rawchunk@@ELFUTILS_1.3+0x258>
    d7b0:	ldr	x0, [sp, #112]
    d7b4:	sub	x26, x0, #0x1
    d7b8:	b	d720 <elf_getdata_rawchunk@@ELFUTILS_1.3+0x2b0>
    d7bc:	csel	x22, x0, x21, ne  // ne = any
    d7c0:	b	d6c8 <elf_getdata_rawchunk@@ELFUTILS_1.3+0x258>
    d7c4:	mov	x0, x25
    d7c8:	bl	3200 <free@plt>
    d7cc:	mov	w0, #0x13                  	// #19
    d7d0:	b	d750 <elf_getdata_rawchunk@@ELFUTILS_1.3+0x2e0>
    d7d4:	adrp	x3, 15000 <elf_compress_gnu@@ELFUTILS_1.7+0x1b8>
    d7d8:	adrp	x1, 15000 <elf_compress_gnu@@ELFUTILS_1.7+0x1b8>
    d7dc:	adrp	x0, 15000 <elf_compress_gnu@@ELFUTILS_1.7+0x1b8>
    d7e0:	add	x3, x3, #0xf30
    d7e4:	add	x1, x1, #0xf08
    d7e8:	add	x0, x0, #0xf20
    d7ec:	mov	w2, #0x82                  	// #130
    d7f0:	bl	3330 <__assert_fail@plt>
    d7f4:	nop

000000000000d7f8 <elf_flagelf@@ELFUTILS_1.0>:
    d7f8:	cbz	x0, d838 <elf_flagelf@@ELFUTILS_1.0+0x40>
    d7fc:	stp	x29, x30, [sp, #-16]!
    d800:	mov	x3, x0
    d804:	mov	x29, sp
    d808:	ldr	w0, [x0, #24]
    d80c:	cmp	w0, #0x3
    d810:	b.ne	d840 <elf_flagelf@@ELFUTILS_1.0+0x48>  // b.any
    d814:	cmp	w1, #0x5
    d818:	b.ne	d850 <elf_flagelf@@ELFUTILS_1.0+0x58>  // b.any
    d81c:	ldr	w0, [x3, #56]
    d820:	mov	w1, #0xd                   	// #13
    d824:	and	w2, w2, w1
    d828:	orr	w0, w2, w0
    d82c:	str	w0, [x3, #56]
    d830:	ldp	x29, x30, [sp], #16
    d834:	ret
    d838:	mov	w0, #0x0                   	// #0
    d83c:	ret
    d840:	mov	w0, #0x4                   	// #4
    d844:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    d848:	mov	w0, #0x0                   	// #0
    d84c:	b	d830 <elf_flagelf@@ELFUTILS_1.0+0x38>
    d850:	cmp	w1, #0x4
    d854:	b.ne	d870 <elf_flagelf@@ELFUTILS_1.0+0x78>  // b.any
    d858:	ldr	w0, [x3, #56]
    d85c:	mov	w1, #0xd                   	// #13
    d860:	and	w2, w2, w1
    d864:	bic	w0, w0, w2
    d868:	str	w0, [x3, #56]
    d86c:	b	d830 <elf_flagelf@@ELFUTILS_1.0+0x38>
    d870:	mov	w0, #0x19                  	// #25
    d874:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    d878:	mov	w0, #0x0                   	// #0
    d87c:	b	d830 <elf_flagelf@@ELFUTILS_1.0+0x38>

000000000000d880 <elf_flagehdr@@ELFUTILS_1.0>:
    d880:	cbz	x0, d8bc <elf_flagehdr@@ELFUTILS_1.0+0x3c>
    d884:	stp	x29, x30, [sp, #-16]!
    d888:	mov	x3, x0
    d88c:	mov	x29, sp
    d890:	ldr	w0, [x0, #24]
    d894:	cmp	w0, #0x3
    d898:	b.ne	d8c4 <elf_flagehdr@@ELFUTILS_1.0+0x44>  // b.any
    d89c:	cmp	w1, #0x5
    d8a0:	b.ne	d8d4 <elf_flagehdr@@ELFUTILS_1.0+0x54>  // b.any
    d8a4:	ldr	w0, [x3, #116]
    d8a8:	and	w2, w2, #0x1
    d8ac:	orr	w0, w2, w0
    d8b0:	str	w0, [x3, #116]
    d8b4:	ldp	x29, x30, [sp], #16
    d8b8:	ret
    d8bc:	mov	w0, #0x0                   	// #0
    d8c0:	ret
    d8c4:	mov	w0, #0x4                   	// #4
    d8c8:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    d8cc:	mov	w0, #0x0                   	// #0
    d8d0:	b	d8b4 <elf_flagehdr@@ELFUTILS_1.0+0x34>
    d8d4:	cmp	w1, #0x4
    d8d8:	b.ne	d8f0 <elf_flagehdr@@ELFUTILS_1.0+0x70>  // b.any
    d8dc:	ldr	w0, [x3, #116]
    d8e0:	and	w2, w2, #0x1
    d8e4:	bic	w0, w0, w2
    d8e8:	str	w0, [x3, #116]
    d8ec:	b	d8b4 <elf_flagehdr@@ELFUTILS_1.0+0x34>
    d8f0:	mov	w0, #0x19                  	// #25
    d8f4:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    d8f8:	mov	w0, #0x0                   	// #0
    d8fc:	b	d8b4 <elf_flagehdr@@ELFUTILS_1.0+0x34>

000000000000d900 <elf_flagphdr@@ELFUTILS_1.0>:
    d900:	cbz	x0, d93c <elf_flagphdr@@ELFUTILS_1.0+0x3c>
    d904:	stp	x29, x30, [sp, #-16]!
    d908:	mov	x3, x0
    d90c:	mov	x29, sp
    d910:	ldr	w0, [x0, #24]
    d914:	cmp	w0, #0x3
    d918:	b.ne	d944 <elf_flagphdr@@ELFUTILS_1.0+0x44>  // b.any
    d91c:	cmp	w1, #0x5
    d920:	b.ne	d954 <elf_flagphdr@@ELFUTILS_1.0+0x54>  // b.any
    d924:	ldr	w0, [x3, #120]
    d928:	and	w2, w2, #0x1
    d92c:	orr	w0, w2, w0
    d930:	str	w0, [x3, #120]
    d934:	ldp	x29, x30, [sp], #16
    d938:	ret
    d93c:	mov	w0, #0x0                   	// #0
    d940:	ret
    d944:	mov	w0, #0x4                   	// #4
    d948:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    d94c:	mov	w0, #0x0                   	// #0
    d950:	b	d934 <elf_flagphdr@@ELFUTILS_1.0+0x34>
    d954:	cmp	w1, #0x4
    d958:	b.ne	d970 <elf_flagphdr@@ELFUTILS_1.0+0x70>  // b.any
    d95c:	ldr	w0, [x3, #120]
    d960:	and	w2, w2, #0x1
    d964:	bic	w0, w0, w2
    d968:	str	w0, [x3, #120]
    d96c:	b	d934 <elf_flagphdr@@ELFUTILS_1.0+0x34>
    d970:	mov	w0, #0x19                  	// #25
    d974:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    d978:	mov	w0, #0x0                   	// #0
    d97c:	b	d934 <elf_flagphdr@@ELFUTILS_1.0+0x34>

000000000000d980 <elf_flagscn@@ELFUTILS_1.0>:
    d980:	cbz	x0, d9c0 <elf_flagscn@@ELFUTILS_1.0+0x40>
    d984:	stp	x29, x30, [sp, #-16]!
    d988:	mov	x3, x0
    d98c:	mov	x29, sp
    d990:	ldr	x0, [x0, #136]
    d994:	ldr	w0, [x0, #24]
    d998:	cmp	w0, #0x3
    d99c:	b.ne	d9c8 <elf_flagscn@@ELFUTILS_1.0+0x48>  // b.any
    d9a0:	cmp	w1, #0x5
    d9a4:	b.ne	d9d8 <elf_flagscn@@ELFUTILS_1.0+0x58>  // b.any
    d9a8:	ldr	w0, [x3, #156]
    d9ac:	and	w2, w2, #0x1
    d9b0:	orr	w0, w2, w0
    d9b4:	str	w0, [x3, #156]
    d9b8:	ldp	x29, x30, [sp], #16
    d9bc:	ret
    d9c0:	mov	w0, #0x0                   	// #0
    d9c4:	ret
    d9c8:	mov	w0, #0x4                   	// #4
    d9cc:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    d9d0:	mov	w0, #0x0                   	// #0
    d9d4:	b	d9b8 <elf_flagscn@@ELFUTILS_1.0+0x38>
    d9d8:	cmp	w1, #0x4
    d9dc:	b.ne	d9f4 <elf_flagscn@@ELFUTILS_1.0+0x74>  // b.any
    d9e0:	ldr	w0, [x3, #156]
    d9e4:	and	w2, w2, #0x1
    d9e8:	bic	w0, w0, w2
    d9ec:	str	w0, [x3, #156]
    d9f0:	b	d9b8 <elf_flagscn@@ELFUTILS_1.0+0x38>
    d9f4:	mov	w0, #0x19                  	// #25
    d9f8:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    d9fc:	mov	w0, #0x0                   	// #0
    da00:	b	d9b8 <elf_flagscn@@ELFUTILS_1.0+0x38>
    da04:	nop

000000000000da08 <elf_flagshdr@@ELFUTILS_1.0>:
    da08:	cbz	x0, da48 <elf_flagshdr@@ELFUTILS_1.0+0x40>
    da0c:	stp	x29, x30, [sp, #-16]!
    da10:	mov	x3, x0
    da14:	mov	x29, sp
    da18:	ldr	x0, [x0, #136]
    da1c:	ldr	w0, [x0, #24]
    da20:	cmp	w0, #0x3
    da24:	b.ne	da50 <elf_flagshdr@@ELFUTILS_1.0+0x48>  // b.any
    da28:	cmp	w1, #0x5
    da2c:	b.ne	da60 <elf_flagshdr@@ELFUTILS_1.0+0x58>  // b.any
    da30:	ldr	w0, [x3, #152]
    da34:	and	w2, w2, #0x1
    da38:	orr	w0, w2, w0
    da3c:	str	w0, [x3, #152]
    da40:	ldp	x29, x30, [sp], #16
    da44:	ret
    da48:	mov	w0, #0x0                   	// #0
    da4c:	ret
    da50:	mov	w0, #0x4                   	// #4
    da54:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    da58:	mov	w0, #0x0                   	// #0
    da5c:	b	da40 <elf_flagshdr@@ELFUTILS_1.0+0x38>
    da60:	cmp	w1, #0x4
    da64:	b.ne	da7c <elf_flagshdr@@ELFUTILS_1.0+0x74>  // b.any
    da68:	ldr	w0, [x3, #152]
    da6c:	and	w2, w2, #0x1
    da70:	bic	w0, w0, w2
    da74:	str	w0, [x3, #152]
    da78:	b	da40 <elf_flagshdr@@ELFUTILS_1.0+0x38>
    da7c:	mov	w0, #0x19                  	// #25
    da80:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    da84:	mov	w0, #0x0                   	// #0
    da88:	b	da40 <elf_flagshdr@@ELFUTILS_1.0+0x38>
    da8c:	nop

000000000000da90 <elf_flagdata@@ELFUTILS_1.0>:
    da90:	cbz	x0, dad0 <elf_flagdata@@ELFUTILS_1.0+0x40>
    da94:	stp	x29, x30, [sp, #-16]!
    da98:	mov	x29, sp
    da9c:	ldr	x3, [x0, #40]
    daa0:	ldr	x0, [x3, #136]
    daa4:	ldr	w0, [x0, #24]
    daa8:	cmp	w0, #0x3
    daac:	b.ne	dad8 <elf_flagdata@@ELFUTILS_1.0+0x48>  // b.any
    dab0:	cmp	w1, #0x5
    dab4:	b.ne	dae8 <elf_flagdata@@ELFUTILS_1.0+0x58>  // b.any
    dab8:	ldr	w0, [x3, #156]
    dabc:	and	w2, w2, #0x1
    dac0:	orr	w0, w2, w0
    dac4:	str	w0, [x3, #156]
    dac8:	ldp	x29, x30, [sp], #16
    dacc:	ret
    dad0:	mov	w0, #0x0                   	// #0
    dad4:	ret
    dad8:	mov	w0, #0x4                   	// #4
    dadc:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    dae0:	mov	w0, #0x0                   	// #0
    dae4:	b	dac8 <elf_flagdata@@ELFUTILS_1.0+0x38>
    dae8:	cmp	w1, #0x4
    daec:	b.ne	db04 <elf_flagdata@@ELFUTILS_1.0+0x74>  // b.any
    daf0:	ldr	w0, [x3, #156]
    daf4:	and	w2, w2, #0x1
    daf8:	bic	w0, w0, w2
    dafc:	str	w0, [x3, #156]
    db00:	b	dac8 <elf_flagdata@@ELFUTILS_1.0+0x38>
    db04:	mov	w0, #0x19                  	// #25
    db08:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    db0c:	mov	w0, #0x0                   	// #0
    db10:	b	dac8 <elf_flagdata@@ELFUTILS_1.0+0x38>
    db14:	nop

000000000000db18 <elf_memory@@ELFUTILS_1.0>:
    db18:	cbz	x0, db38 <elf_memory@@ELFUTILS_1.0+0x20>
    db1c:	mov	x3, x1
    db20:	mov	x5, #0x0                   	// #0
    db24:	mov	x1, x0
    db28:	mov	w4, #0x1                   	// #1
    db2c:	mov	x2, #0x0                   	// #0
    db30:	mov	w0, #0xffffffff            	// #-1
    db34:	b	3fd8 <elf_fill@@ELFUTILS_1.0+0x988>
    db38:	stp	x29, x30, [sp, #-16]!
    db3c:	mov	w0, #0x17                  	// #23
    db40:	mov	x29, sp
    db44:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    db48:	mov	x0, #0x0                   	// #0
    db4c:	ldp	x29, x30, [sp], #16
    db50:	ret
    db54:	nop

000000000000db58 <elf_update@@ELFUTILS_1.0>:
    db58:	stp	x29, x30, [sp, #-208]!
    db5c:	cmp	w1, #0x0
    db60:	ccmp	w1, #0x3, #0x4, ne  // ne = any
    db64:	mov	x29, sp
    db68:	stp	x21, x22, [sp, #32]
    db6c:	ccmp	w1, #0xa, #0x4, ne  // ne = any
    db70:	str	wzr, [sp, #76]
    db74:	b.ne	ddd4 <elf_update@@ELFUTILS_1.0+0x27c>  // b.any
    db78:	stp	x19, x20, [sp, #16]
    db7c:	mov	x19, x0
    db80:	cbz	x0, ddc8 <elf_update@@ELFUTILS_1.0+0x270>
    db84:	ldr	w0, [x0, #24]
    db88:	cmp	w0, #0x3
    db8c:	b.ne	def4 <elf_update@@ELFUTILS_1.0+0x39c>  // b.any
    db90:	ldr	x0, [x19, #72]
    db94:	cbz	x0, df08 <elf_update@@ELFUTILS_1.0+0x3b0>
    db98:	ldr	x2, [x19, #96]
    db9c:	mov	w20, w1
    dba0:	mov	x22, #0x0                   	// #0
    dba4:	ldr	w0, [x2]
    dba8:	cbnz	w0, dc80 <elf_update@@ELFUTILS_1.0+0x128>
    dbac:	ldr	w0, [x19, #32]
    dbb0:	mov	x2, x22
    dbb4:	add	x1, sp, #0x4c
    dbb8:	cmp	w0, #0x1
    dbbc:	mov	x0, x19
    dbc0:	b.eq	dcb0 <elf_update@@ELFUTILS_1.0+0x158>  // b.none
    dbc4:	bl	e770 <elf_update@@ELFUTILS_1.0+0xc18>
    dbc8:	mov	x21, x0
    dbcc:	cmn	x21, #0x1
    dbd0:	b.eq	ddc8 <elf_update@@ELFUTILS_1.0+0x270>  // b.none
    dbd4:	cmp	w20, #0x3
    dbd8:	ccmp	w20, #0xa, #0x4, ne  // ne = any
    dbdc:	b.ne	dcbc <elf_update@@ELFUTILS_1.0+0x164>  // b.any
    dbe0:	ldr	w0, [x19, #28]
    dbe4:	sub	w1, w0, #0x2
    dbe8:	sub	w0, w0, #0x9
    dbec:	cmp	w1, #0x1
    dbf0:	ccmp	w0, #0x1, #0x0, hi  // hi = pmore
    dbf4:	b.hi	dee0 <elf_update@@ELFUTILS_1.0+0x388>  // b.pmore
    dbf8:	ldr	w1, [x19, #36]
    dbfc:	cmn	w1, #0x1
    dc00:	b.eq	de10 <elf_update@@ELFUTILS_1.0+0x2b8>  // b.none
    dc04:	ldr	w20, [x19, #32]
    dc08:	add	x2, sp, #0x50
    dc0c:	mov	w0, #0x0                   	// #0
    dc10:	str	x23, [sp, #48]
    dc14:	ldr	w23, [sp, #76]
    dc18:	bl	32f0 <__fxstat@plt>
    dc1c:	cbnz	w0, ddf8 <elf_update@@ELFUTILS_1.0+0x2a0>
    dc20:	ldr	x0, [x19, #8]
    dc24:	cbz	x0, dcfc <elf_update@@ELFUTILS_1.0+0x1a4>
    dc28:	ldr	x0, [x19]
    dc2c:	cbz	x0, dd18 <elf_update@@ELFUTILS_1.0+0x1c0>
    dc30:	mov	x2, x22
    dc34:	mov	w1, w23
    dc38:	mov	x0, x19
    dc3c:	cmp	w20, #0x1
    dc40:	b.eq	dcd0 <elf_update@@ELFUTILS_1.0+0x178>  // b.none
    dc44:	bl	10708 <elf_update@@ELFUTILS_1.0+0x2bb0>
    dc48:	cmp	w0, #0x0
    dc4c:	cset	w0, ne  // ne = any
    dc50:	cbnz	w0, dce0 <elf_update@@ELFUTILS_1.0+0x188>
    dc54:	ldr	x0, [x19, #8]
    dc58:	cbz	x0, de40 <elf_update@@ELFUTILS_1.0+0x2e8>
    dc5c:	ldr	w1, [sp, #96]
    dc60:	tst	w1, #0xc00
    dc64:	b.ne	de8c <elf_update@@ELFUTILS_1.0+0x334>  // b.any
    dc68:	mov	x0, x21
    dc6c:	ldp	x19, x20, [sp, #16]
    dc70:	ldp	x21, x22, [sp, #32]
    dc74:	ldr	x23, [sp, #48]
    dc78:	ldp	x29, x30, [sp], #208
    dc7c:	ret
    dc80:	sub	w0, w0, #0x1
    dc84:	add	x1, x0, x0, lsl #1
    dc88:	add	x0, x0, x1, lsl #2
    dc8c:	add	x1, sp, #0x4c
    dc90:	add	x0, x2, x0, lsl #4
    dc94:	ldr	x22, [x0, #144]
    dc98:	ldr	w0, [x19, #32]
    dc9c:	add	x22, x22, #0x1
    dca0:	cmp	w0, #0x1
    dca4:	mov	x2, x22
    dca8:	mov	x0, x19
    dcac:	b.ne	dbc4 <elf_update@@ELFUTILS_1.0+0x6c>  // b.any
    dcb0:	bl	df28 <elf_update@@ELFUTILS_1.0+0x3d0>
    dcb4:	mov	x21, x0
    dcb8:	b	dbcc <elf_update@@ELFUTILS_1.0+0x74>
    dcbc:	ldp	x19, x20, [sp, #16]
    dcc0:	mov	x0, x21
    dcc4:	ldp	x21, x22, [sp, #32]
    dcc8:	ldp	x29, x30, [sp], #208
    dccc:	ret
    dcd0:	bl	f168 <elf_update@@ELFUTILS_1.0+0x1610>
    dcd4:	cmp	w0, #0x0
    dcd8:	cset	w0, ne  // ne = any
    dcdc:	cbz	w0, dc54 <elf_update@@ELFUTILS_1.0+0xfc>
    dce0:	mov	x21, #0xffffffffffffffff    	// #-1
    dce4:	mov	x0, x21
    dce8:	ldp	x19, x20, [sp, #16]
    dcec:	ldp	x21, x22, [sp, #32]
    dcf0:	ldr	x23, [sp, #48]
    dcf4:	ldp	x29, x30, [sp], #208
    dcf8:	ret
    dcfc:	ldr	x0, [x19, #48]
    dd00:	cmn	x0, #0x1
    dd04:	b.eq	dd48 <elf_update@@ELFUTILS_1.0+0x1f0>  // b.none
    dd08:	cmp	x0, x21
    dd0c:	b.cc	dd48 <elf_update@@ELFUTILS_1.0+0x1f0>  // b.lo, b.ul, b.last
    dd10:	ldr	x1, [x19]
    dd14:	cbnz	x1, dd6c <elf_update@@ELFUTILS_1.0+0x214>
    dd18:	ldr	w0, [x19, #28]
    dd1c:	cmp	w0, #0xa
    dd20:	b.eq	dea4 <elf_update@@ELFUTILS_1.0+0x34c>  // b.none
    dd24:	cmp	w20, #0x1
    dd28:	b.eq	de24 <elf_update@@ELFUTILS_1.0+0x2cc>  // b.none
    dd2c:	mov	x2, x22
    dd30:	mov	w1, w23
    dd34:	mov	x0, x19
    dd38:	bl	11120 <elf_update@@ELFUTILS_1.0+0x35c8>
    dd3c:	cmp	w0, #0x0
    dd40:	cset	w0, ne  // ne = any
    dd44:	b	dc50 <elf_update@@ELFUTILS_1.0+0xf8>
    dd48:	ldr	w0, [x19, #36]
    dd4c:	mov	x1, x21
    dd50:	bl	3320 <ftruncate@plt>
    dd54:	cbnz	w0, ddf8 <elf_update@@ELFUTILS_1.0+0x2a0>
    dd58:	ldr	x0, [x19]
    dd5c:	cbz	x0, dd18 <elf_update@@ELFUTILS_1.0+0x1c0>
    dd60:	ldr	x0, [x19, #8]
    dd64:	cbnz	x0, dc30 <elf_update@@ELFUTILS_1.0+0xd8>
    dd68:	ldr	x0, [x19, #48]
    dd6c:	cmn	x0, #0x1
    dd70:	b.eq	dd7c <elf_update@@ELFUTILS_1.0+0x224>  // b.none
    dd74:	cmp	x0, x21
    dd78:	b.cs	dc30 <elf_update@@ELFUTILS_1.0+0xd8>  // b.hs, b.nlast
    dd7c:	ldr	w0, [x19, #36]
    dd80:	mov	x2, x21
    dd84:	mov	x1, #0x0                   	// #0
    dd88:	bl	3050 <posix_fallocate@plt>
    dd8c:	cbnz	w0, dde4 <elf_update@@ELFUTILS_1.0+0x28c>
    dd90:	ldr	w0, [x19, #28]
    dd94:	cmp	w0, #0x9
    dd98:	b.ne	dc30 <elf_update@@ELFUTILS_1.0+0xd8>  // b.any
    dd9c:	ldr	x1, [x19, #48]
    dda0:	cmp	x1, x21
    dda4:	b.cs	dc30 <elf_update@@ELFUTILS_1.0+0xd8>  // b.hs, b.nlast
    dda8:	ldr	x0, [x19]
    ddac:	mov	x2, x21
    ddb0:	mov	w3, #0x0                   	// #0
    ddb4:	bl	3080 <mremap@plt>
    ddb8:	cmn	x0, #0x1
    ddbc:	b.eq	ddf8 <elf_update@@ELFUTILS_1.0+0x2a0>  // b.none
    ddc0:	str	x21, [x19, #48]
    ddc4:	b	dc30 <elf_update@@ELFUTILS_1.0+0xd8>
    ddc8:	mov	x21, #0xffffffffffffffff    	// #-1
    ddcc:	ldp	x19, x20, [sp, #16]
    ddd0:	b	dcc0 <elf_update@@ELFUTILS_1.0+0x168>
    ddd4:	mov	w0, #0xd                   	// #13
    ddd8:	mov	x21, #0xffffffffffffffff    	// #-1
    dddc:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    dde0:	b	dcc0 <elf_update@@ELFUTILS_1.0+0x168>
    dde4:	bl	3340 <__errno_location@plt>
    dde8:	ldr	w0, [x0]
    ddec:	cmp	w0, #0x1c
    ddf0:	b.ne	dd90 <elf_update@@ELFUTILS_1.0+0x238>  // b.any
    ddf4:	nop
    ddf8:	mov	w0, #0x14                  	// #20
    ddfc:	mov	x21, #0xffffffffffffffff    	// #-1
    de00:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    de04:	ldp	x19, x20, [sp, #16]
    de08:	ldr	x23, [sp, #48]
    de0c:	b	dcc0 <elf_update@@ELFUTILS_1.0+0x168>
    de10:	mov	w0, #0x1b                  	// #27
    de14:	mov	x21, #0xffffffffffffffff    	// #-1
    de18:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    de1c:	ldp	x19, x20, [sp, #16]
    de20:	b	dcc0 <elf_update@@ELFUTILS_1.0+0x168>
    de24:	mov	x2, x22
    de28:	mov	w1, w23
    de2c:	mov	x0, x19
    de30:	bl	fb78 <elf_update@@ELFUTILS_1.0+0x2020>
    de34:	cmp	w0, #0x0
    de38:	cset	w0, ne  // ne = any
    de3c:	b	dc50 <elf_update@@ELFUTILS_1.0+0xf8>
    de40:	ldr	x0, [x19, #48]
    de44:	cmn	x0, #0x1
    de48:	b.eq	de54 <elf_update@@ELFUTILS_1.0+0x2fc>  // b.none
    de4c:	cmp	x0, x21
    de50:	b.hi	de70 <elf_update@@ELFUTILS_1.0+0x318>  // b.pmore
    de54:	ldr	w1, [sp, #96]
    de58:	tst	w1, #0xc00
    de5c:	b.ne	de8c <elf_update@@ELFUTILS_1.0+0x334>  // b.any
    de60:	ldr	x23, [sp, #48]
    de64:	str	x21, [x19, #48]
    de68:	ldp	x19, x20, [sp, #16]
    de6c:	b	dcc0 <elf_update@@ELFUTILS_1.0+0x168>
    de70:	ldr	w0, [x19, #36]
    de74:	mov	x1, x21
    de78:	bl	3320 <ftruncate@plt>
    de7c:	cbnz	w0, ddf8 <elf_update@@ELFUTILS_1.0+0x2a0>
    de80:	ldr	w1, [sp, #96]
    de84:	tst	w1, #0xc00
    de88:	b.eq	de98 <elf_update@@ELFUTILS_1.0+0x340>  // b.none
    de8c:	ldr	w0, [x19, #36]
    de90:	bl	3120 <fchmod@plt>
    de94:	cbnz	w0, ddf8 <elf_update@@ELFUTILS_1.0+0x2a0>
    de98:	ldr	x0, [x19, #8]
    de9c:	cbnz	x0, dc68 <elf_update@@ELFUTILS_1.0+0x110>
    dea0:	b	de60 <elf_update@@ELFUTILS_1.0+0x308>
    dea4:	ldr	w4, [x19, #36]
    dea8:	mov	x1, x21
    deac:	mov	x5, #0x0                   	// #0
    deb0:	mov	w3, #0x1                   	// #1
    deb4:	mov	w2, #0x3                   	// #3
    deb8:	mov	x0, #0x0                   	// #0
    debc:	bl	31e0 <mmap@plt>
    dec0:	str	x0, [x19]
    dec4:	cmn	x0, #0x1
    dec8:	b.eq	df1c <elf_update@@ELFUTILS_1.0+0x3c4>  // b.none
    decc:	ldr	w1, [x19, #56]
    ded0:	orr	w1, w1, #0x40
    ded4:	str	w1, [x19, #56]
    ded8:	cbz	x0, dd24 <elf_update@@ELFUTILS_1.0+0x1cc>
    dedc:	b	dd60 <elf_update@@ELFUTILS_1.0+0x208>
    dee0:	mov	w0, #0x26                  	// #38
    dee4:	mov	x21, #0xffffffffffffffff    	// #-1
    dee8:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    deec:	ldp	x19, x20, [sp, #16]
    def0:	b	dcc0 <elf_update@@ELFUTILS_1.0+0x168>
    def4:	mov	w0, #0x4                   	// #4
    def8:	mov	x21, #0xffffffffffffffff    	// #-1
    defc:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    df00:	ldp	x19, x20, [sp, #16]
    df04:	b	dcc0 <elf_update@@ELFUTILS_1.0+0x168>
    df08:	mov	w0, #0x1a                  	// #26
    df0c:	mov	x21, #0xffffffffffffffff    	// #-1
    df10:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    df14:	ldp	x19, x20, [sp, #16]
    df18:	b	dcc0 <elf_update@@ELFUTILS_1.0+0x168>
    df1c:	str	xzr, [x19]
    df20:	b	dd24 <elf_update@@ELFUTILS_1.0+0x1cc>
    df24:	nop
    df28:	stp	x29, x30, [sp, #-160]!
    df2c:	mov	x29, sp
    df30:	stp	x19, x20, [sp, #16]
    df34:	mov	x20, x1
    df38:	mov	x19, x0
    df3c:	stp	x23, x24, [sp, #48]
    df40:	mov	x23, x2
    df44:	stp	x25, x26, [sp, #64]
    df48:	bl	8e80 <elf64_xlatetom@@ELFUTILS_1.0+0x3620>
    df4c:	mov	x25, x0
    df50:	mov	w0, #0x457f                	// #17791
    df54:	movk	w0, #0x464c, lsl #16
    df58:	ldr	w1, [x25]
    df5c:	cmp	w1, w0
    df60:	b.ne	e400 <elf_update@@ELFUTILS_1.0+0x8a8>  // b.any
    df64:	ldrb	w0, [x25, #4]
    df68:	cmp	w0, #0x1
    df6c:	b.eq	df84 <elf_update@@ELFUTILS_1.0+0x42c>  // b.none
    df70:	mov	w0, #0x1                   	// #1
    df74:	strb	w0, [x25, #4]
    df78:	ldr	w0, [x19, #116]
    df7c:	orr	w0, w0, #0x1
    df80:	str	w0, [x19, #116]
    df84:	ldrb	w0, [x25, #5]
    df88:	cbz	w0, e518 <elf_update@@ELFUTILS_1.0+0x9c0>
    df8c:	cmp	w0, #0x2
    df90:	b.hi	e550 <elf_update@@ELFUTILS_1.0+0x9f8>  // b.pmore
    df94:	cmp	w0, #0x1
    df98:	cset	w0, ne  // ne = any
    df9c:	str	w0, [x20]
    dfa0:	ldrb	w0, [x25, #6]
    dfa4:	cmp	w0, #0x1
    dfa8:	b.eq	dfc0 <elf_update@@ELFUTILS_1.0+0x468>  // b.none
    dfac:	mov	w0, #0x1                   	// #1
    dfb0:	strb	w0, [x25, #6]
    dfb4:	ldr	w0, [x19, #116]
    dfb8:	orr	w0, w0, #0x1
    dfbc:	str	w0, [x19, #116]
    dfc0:	ldr	w0, [x25, #20]
    dfc4:	cbz	w0, e530 <elf_update@@ELFUTILS_1.0+0x9d8>
    dfc8:	cmp	w0, #0x1
    dfcc:	b.ne	e3b8 <elf_update@@ELFUTILS_1.0+0x860>  // b.any
    dfd0:	stp	x21, x22, [sp, #32]
    dfd4:	stp	x27, x28, [sp, #80]
    dfd8:	mov	x0, #0xfeff                	// #65279
    dfdc:	ldrh	w1, [x25, #48]
    dfe0:	cmp	x23, x0
    dfe4:	b.hi	e574 <elf_update@@ELFUTILS_1.0+0xa1c>  // b.pmore
    dfe8:	cmp	x23, w1, uxth
    dfec:	b.eq	e000 <elf_update@@ELFUTILS_1.0+0x4a8>  // b.none
    dff0:	ldr	w0, [x19, #116]
    dff4:	strh	w23, [x25, #48]
    dff8:	orr	w0, w0, #0x1
    dffc:	str	w0, [x19, #116]
    e000:	adrp	x24, 15000 <elf_compress_gnu@@ELFUTILS_1.7+0x1b8>
    e004:	add	x1, x24, #0x960
    e008:	ldrh	w0, [x25, #40]
    e00c:	ldr	x20, [x1, #24]
    e010:	cmp	x0, x20
    e014:	b.ne	e560 <elf_update@@ELFUTILS_1.0+0xa08>  // b.any
    e018:	ldrh	w0, [x25, #44]
    e01c:	cbz	w0, e224 <elf_update@@ELFUTILS_1.0+0x6cc>
    e020:	ldr	x0, [x19, #88]
    e024:	mov	w26, w20
    e028:	cbz	x0, e248 <elf_update@@ELFUTILS_1.0+0x6f0>
    e02c:	add	x1, sp, #0x98
    e030:	mov	x0, x19
    e034:	bl	13338 <gelf_update_verdaux@@ELFUTILS_1.0+0x88>
    e038:	mov	w28, w0
    e03c:	cbnz	w0, e454 <elf_update@@ELFUTILS_1.0+0x8fc>
    e040:	ldr	w2, [x19, #56]
    e044:	add	x1, x24, #0x960
    e048:	ldr	w21, [x25, #28]
    e04c:	ldr	x26, [sp, #152]
    e050:	ldr	x0, [x1, #48]
    e054:	tbz	w2, #2, e28c <elf_update@@ELFUTILS_1.0+0x734>
    e058:	madd	x0, x0, x26, x21
    e05c:	and	x26, x20, #0xffffffff
    e060:	cmp	x0, w20, uxtw
    e064:	csel	x26, x0, x26, cs  // cs = hs, nlast
    e068:	cbz	x23, e260 <elf_update@@ELFUTILS_1.0+0x708>
    e06c:	ldr	w0, [x19, #200]
    e070:	cbz	w0, e704 <elf_update@@ELFUTILS_1.0+0xbac>
    e074:	mov	x1, #0xfeff                	// #65279
    e078:	cmp	x23, x1
    e07c:	b.ls	e0a4 <elf_update@@ELFUTILS_1.0+0x54c>  // b.plast
    e080:	ldr	x2, [x19, #360]
    e084:	ldr	w3, [x2, #20]
    e088:	cmp	x3, x23
    e08c:	b.eq	e0a4 <elf_update@@ELFUTILS_1.0+0x54c>  // b.none
    e090:	str	w23, [x2, #20]
    e094:	ldr	w2, [x19, #368]
    e098:	ldr	w0, [x19, #200]
    e09c:	orr	w2, w2, #0x1
    e0a0:	str	w2, [x19, #368]
    e0a4:	cmp	w0, #0x1
    e0a8:	add	x5, x19, #0xc8
    e0ac:	b.ls	e500 <elf_update@@ELFUTILS_1.0+0x9a8>  // b.plast
    e0b0:	add	x0, x19, #0x1a8
    e0b4:	ldr	x1, [x0, #144]
    e0b8:	cbz	x1, e58c <elf_update@@ELFUTILS_1.0+0xa34>
    e0bc:	mov	w0, #0x1                   	// #1
    e0c0:	mov	w7, #0xfffa                	// #65530
    e0c4:	mov	w6, w0
    e0c8:	mov	w9, #0x0                   	// #0
    e0cc:	movk	w7, #0x6fff, lsl #16
    e0d0:	ldr	w1, [x5]
    e0d4:	and	x2, x0, #0xff
    e0d8:	cmp	w1, w0
    e0dc:	b.ls	e204 <elf_update@@ELFUTILS_1.0+0x6ac>  // b.plast
    e0e0:	lsl	x20, x2, #1
    e0e4:	mov	w10, #0xfffc                	// #65532
    e0e8:	add	x20, x20, x2
    e0ec:	add	x8, x24, #0x960
    e0f0:	movk	w10, #0x6fff, lsl #16
    e0f4:	add	x20, x2, x20, lsl #2
    e0f8:	add	x20, x5, x20, lsl #4
    e0fc:	add	x20, x20, #0x10
    e100:	ldr	x27, [x20, #144]
    e104:	cbz	x27, e6e4 <elf_update@@ELFUTILS_1.0+0xb8c>
    e108:	ldp	w21, w3, [x27, #32]
    e10c:	cmp	w21, #0x0
    e110:	csel	w21, w21, w6, ne  // ne = any
    e114:	sub	w11, w21, #0x1
    e118:	ands	w11, w11, w21
    e11c:	b.ne	e2a4 <elf_update@@ELFUTILS_1.0+0x74c>  // b.any
    e120:	ldr	w1, [x27, #4]
    e124:	cmp	w1, #0xb
    e128:	b.eq	e510 <elf_update@@ELFUTILS_1.0+0x9b8>  // b.none
    e12c:	b.hi	e2e4 <elf_update@@ELFUTILS_1.0+0x78c>  // b.pmore
    e130:	cmp	w1, #0x5
    e134:	b.eq	e5d0 <elf_update@@ELFUTILS_1.0+0xa78>  // b.none
    e138:	b.ls	e2cc <elf_update@@ELFUTILS_1.0+0x774>  // b.plast
    e13c:	cmp	w1, #0x6
    e140:	b.eq	e5c8 <elf_update@@ELFUTILS_1.0+0xa70>  // b.none
    e144:	cmp	w1, #0x9
    e148:	b.ne	e168 <elf_update@@ELFUTILS_1.0+0x610>  // b.any
    e14c:	ldr	w0, [x8, #64]
    e150:	cmp	w0, w3
    e154:	b.eq	e168 <elf_update@@ELFUTILS_1.0+0x610>  // b.none
    e158:	str	w0, [x27, #36]
    e15c:	ldr	w0, [x20, #152]
    e160:	orr	w0, w0, #0x1
    e164:	str	w0, [x20, #152]
    e168:	ldr	w0, [x20, #120]
    e16c:	cbz	w0, e414 <elf_update@@ELFUTILS_1.0+0x8bc>
    e170:	ldr	x0, [x20, #64]
    e174:	cbnz	x0, e318 <elf_update@@ELFUTILS_1.0+0x7c0>
    e178:	ldr	w14, [x19, #56]
    e17c:	ldr	x22, [x20, #88]
    e180:	and	w14, w14, #0x4
    e184:	ldr	w0, [x27, #32]
    e188:	cbz	w14, e474 <elf_update@@ELFUTILS_1.0+0x91c>
    e18c:	ldr	w1, [x27, #4]
    e190:	cmp	w1, #0x8
    e194:	b.eq	e1a8 <elf_update@@ELFUTILS_1.0+0x650>  // b.none
    e198:	ldp	w1, w3, [x27, #16]
    e19c:	add	w1, w1, w3
    e1a0:	cmp	w26, w1
    e1a4:	csel	w26, w26, w1, cs  // cs = hs, nlast
    e1a8:	sub	w1, w0, #0x1
    e1ac:	tst	w1, w0
    e1b0:	b.ne	e2a4 <elf_update@@ELFUTILS_1.0+0x74c>  // b.any
    e1b4:	cmp	w0, #0x0
    e1b8:	csel	w0, w0, w6, ne  // ne = any
    e1bc:	cmp	w21, w0
    e1c0:	b.hi	e2a4 <elf_update@@ELFUTILS_1.0+0x74c>  // b.pmore
    e1c4:	ldr	w0, [x27, #36]
    e1c8:	cmp	w0, #0x1
    e1cc:	b.ls	e1f0 <elf_update@@ELFUTILS_1.0+0x698>  // b.plast
    e1d0:	ldr	w1, [x19, #56]
    e1d4:	tbnz	w1, #3, e1f0 <elf_update@@ELFUTILS_1.0+0x698>
    e1d8:	ldr	w1, [x27, #8]
    e1dc:	tbnz	w1, #11, e628 <elf_update@@ELFUTILS_1.0+0xad0>
    e1e0:	ldr	w3, [x27, #20]
    e1e4:	udiv	w1, w3, w0
    e1e8:	msub	w0, w1, w0, w3
    e1ec:	cbnz	w0, e610 <elf_update@@ELFUTILS_1.0+0xab8>
    e1f0:	ldr	w1, [x5]
    e1f4:	add	x2, x2, #0x1
    e1f8:	add	x20, x20, #0xd0
    e1fc:	cmp	x2, w1, uxtw
    e200:	b.cc	e100 <elf_update@@ELFUTILS_1.0+0x5a8>  // b.lo, b.ul, b.last
    e204:	ldr	x2, [x5, #8]
    e208:	cbz	x2, e6a4 <elf_update@@ELFUTILS_1.0+0xb4c>
    e20c:	ldr	w3, [x5, #4]
    e210:	mov	w0, #0x0                   	// #0
    e214:	cmp	w3, w1
    e218:	b.ne	e74c <elf_update@@ELFUTILS_1.0+0xbf4>  // b.any
    e21c:	mov	x5, x2
    e220:	b	e0d0 <elf_update@@ELFUTILS_1.0+0x578>
    e224:	ldr	w0, [x25, #28]
    e228:	cbz	w0, e020 <elf_update@@ELFUTILS_1.0+0x4c8>
    e22c:	str	wzr, [x25, #28]
    e230:	mov	w26, w20
    e234:	ldr	w0, [x19, #116]
    e238:	orr	w0, w0, #0x1
    e23c:	str	w0, [x19, #116]
    e240:	ldr	x0, [x19, #88]
    e244:	cbnz	x0, e02c <elf_update@@ELFUTILS_1.0+0x4d4>
    e248:	mov	x0, x19
    e24c:	bl	9388 <gelf_update_ehdr@@ELFUTILS_1.0+0x128>
    e250:	ldr	x0, [x19, #88]
    e254:	cbnz	x0, e02c <elf_update@@ELFUTILS_1.0+0x4d4>
    e258:	mov	w28, #0x0                   	// #0
    e25c:	cbnz	x23, e06c <elf_update@@ELFUTILS_1.0+0x514>
    e260:	ldr	w1, [x19, #116]
    e264:	mov	w0, w26
    e268:	ldp	x21, x22, [sp, #32]
    e26c:	orr	w28, w1, w28
    e270:	str	w28, [x19, #116]
    e274:	ldp	x19, x20, [sp, #16]
    e278:	ldp	x23, x24, [sp, #48]
    e27c:	ldp	x25, x26, [sp, #64]
    e280:	ldp	x27, x28, [sp, #80]
    e284:	ldp	x29, x30, [sp], #160
    e288:	ret
    e28c:	cmp	x20, x21
    e290:	b.eq	e29c <elf_update@@ELFUTILS_1.0+0x744>  // b.none
    e294:	mov	w28, #0x1                   	// #1
    e298:	str	w20, [x25, #28]
    e29c:	madd	w26, w0, w26, w20
    e2a0:	b	e068 <elf_update@@ELFUTILS_1.0+0x510>
    e2a4:	mov	w0, #0x24                  	// #36
    e2a8:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    e2ac:	ldp	x21, x22, [sp, #32]
    e2b0:	mov	x0, #0xffffffffffffffff    	// #-1
    e2b4:	ldp	x27, x28, [sp, #80]
    e2b8:	ldp	x19, x20, [sp, #16]
    e2bc:	ldp	x23, x24, [sp, #48]
    e2c0:	ldp	x25, x26, [sp, #64]
    e2c4:	ldp	x29, x30, [sp], #160
    e2c8:	ret
    e2cc:	cmp	w1, #0x2
    e2d0:	b.eq	e510 <elf_update@@ELFUTILS_1.0+0x9b8>  // b.none
    e2d4:	cmp	w1, #0x4
    e2d8:	b.ne	e168 <elf_update@@ELFUTILS_1.0+0x610>  // b.any
    e2dc:	ldr	w0, [x8, #56]
    e2e0:	b	e150 <elf_update@@ELFUTILS_1.0+0x5f8>
    e2e4:	cmp	w1, w7
    e2e8:	b.eq	e59c <elf_update@@ELFUTILS_1.0+0xa44>  // b.none
    e2ec:	b.ls	e300 <elf_update@@ELFUTILS_1.0+0x7a8>  // b.plast
    e2f0:	cmp	w1, w10
    e2f4:	b.ne	e168 <elf_update@@ELFUTILS_1.0+0x610>  // b.any
    e2f8:	ldr	w0, [x8, #160]
    e2fc:	b	e150 <elf_update@@ELFUTILS_1.0+0x5f8>
    e300:	cmp	w1, #0x11
    e304:	b.eq	e5a4 <elf_update@@ELFUTILS_1.0+0xa4c>  // b.none
    e308:	cmp	w1, #0x12
    e30c:	b.ne	e168 <elf_update@@ELFUTILS_1.0+0x610>  // b.any
    e310:	ldr	w0, [x8, #96]
    e314:	b	e150 <elf_update@@ELFUTILS_1.0+0x5f8>
    e318:	mov	x4, x20
    e31c:	add	x15, x20, #0x48
    e320:	cmp	x20, x4
    e324:	mov	x3, x4
    e328:	mov	x22, #0x0                   	// #0
    e32c:	b.eq	e38c <elf_update@@ELFUTILS_1.0+0x834>  // b.none
    e330:	ldr	w13, [x3, #12]
    e334:	cmp	w13, #0x1
    e338:	b.ne	e3b0 <elf_update@@ELFUTILS_1.0+0x858>  // b.any
    e33c:	ldr	x1, [x3, #32]
    e340:	sub	x0, x1, #0x1
    e344:	tst	x0, x1
    e348:	b.ne	e2a4 <elf_update@@ELFUTILS_1.0+0x74c>  // b.any
    e34c:	mov	w21, w21
    e350:	ldr	w0, [x19, #56]
    e354:	cmp	x21, x1
    e358:	csel	x21, x21, x1, cs  // cs = hs, nlast
    e35c:	and	w14, w0, #0x4
    e360:	ldp	x12, x16, [x3, #16]
    e364:	tbz	w0, #2, e3d8 <elf_update@@ELFUTILS_1.0+0x880>
    e368:	ldr	w0, [x27, #20]
    e36c:	add	w12, w16, w12
    e370:	cmp	w12, w0
    e374:	b.hi	e604 <elf_update@@ELFUTILS_1.0+0xaac>  // b.pmore
    e378:	ldr	x4, [x4, #48]
    e37c:	cbz	x4, e184 <elf_update@@ELFUTILS_1.0+0x62c>
    e380:	cmp	x20, x4
    e384:	mov	x3, x4
    e388:	b.ne	e330 <elf_update@@ELFUTILS_1.0+0x7d8>  // b.any
    e38c:	ldr	x0, [x20]
    e390:	cbnz	x0, e330 <elf_update@@ELFUTILS_1.0+0x7d8>
    e394:	ldr	x0, [x20, #72]
    e398:	cmp	x0, #0x0
    e39c:	csel	x3, x20, x15, eq  // eq = none
    e3a0:	ldr	w13, [x3, #12]
    e3a4:	cmp	w13, #0x1
    e3a8:	b.eq	e33c <elf_update@@ELFUTILS_1.0+0x7e4>  // b.none
    e3ac:	nop
    e3b0:	ldp	x21, x22, [sp, #32]
    e3b4:	ldp	x27, x28, [sp, #80]
    e3b8:	mov	w0, #0x2                   	// #2
    e3bc:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    e3c0:	mov	x0, #0xffffffffffffffff    	// #-1
    e3c4:	ldp	x19, x20, [sp, #16]
    e3c8:	ldp	x23, x24, [sp, #48]
    e3cc:	ldp	x25, x26, [sp, #64]
    e3d0:	ldp	x29, x30, [sp], #160
    e3d4:	ret
    e3d8:	sub	x22, x22, #0x1
    e3dc:	neg	x0, x1
    e3e0:	add	x22, x22, x1
    e3e4:	and	x22, x22, x0
    e3e8:	cmp	x22, x16
    e3ec:	b.eq	e3f8 <elf_update@@ELFUTILS_1.0+0x8a0>  // b.none
    e3f0:	mov	w9, w13
    e3f4:	str	x22, [x3, #24]
    e3f8:	add	x22, x22, x12
    e3fc:	b	e378 <elf_update@@ELFUTILS_1.0+0x820>
    e400:	str	w0, [x25]
    e404:	ldr	w0, [x19, #116]
    e408:	orr	w0, w0, #0x1
    e40c:	str	w0, [x19, #116]
    e410:	b	df64 <elf_update@@ELFUTILS_1.0+0x40c>
    e414:	mov	x0, x20
    e418:	str	w11, [sp, #104]
    e41c:	str	w9, [sp, #112]
    e420:	stp	x5, x2, [sp, #120]
    e424:	str	x8, [sp, #136]
    e428:	bl	cc80 <elf_rawdata@@ELFUTILS_1.0+0x150>
    e42c:	mov	w10, #0xfffc                	// #65532
    e430:	mov	w7, #0xfffa                	// #65530
    e434:	ldr	w11, [sp, #104]
    e438:	movk	w10, #0x6fff, lsl #16
    e43c:	ldr	w9, [sp, #112]
    e440:	mov	w6, #0x1                   	// #1
    e444:	movk	w7, #0x6fff, lsl #16
    e448:	ldp	x5, x2, [sp, #120]
    e44c:	ldr	x8, [sp, #136]
    e450:	cbz	w0, e170 <elf_update@@ELFUTILS_1.0+0x618>
    e454:	mov	x0, #0xffffffffffffffff    	// #-1
    e458:	ldp	x19, x20, [sp, #16]
    e45c:	ldp	x21, x22, [sp, #32]
    e460:	ldp	x23, x24, [sp, #48]
    e464:	ldp	x25, x26, [sp, #64]
    e468:	ldp	x27, x28, [sp, #80]
    e46c:	ldp	x29, x30, [sp], #160
    e470:	ret
    e474:	cmp	w21, w0
    e478:	b.eq	e48c <elf_update@@ELFUTILS_1.0+0x934>  // b.none
    e47c:	str	w21, [x27, #32]
    e480:	ldr	w0, [x20, #152]
    e484:	orr	w0, w0, #0x1
    e488:	str	w0, [x20, #152]
    e48c:	sub	w0, w26, #0x1
    e490:	ldr	w1, [x27, #16]
    e494:	neg	w26, w21
    e498:	add	w0, w0, w21
    e49c:	and	w26, w26, w0
    e4a0:	cmp	w1, w26
    e4a4:	b.eq	e4bc <elf_update@@ELFUTILS_1.0+0x964>  // b.none
    e4a8:	str	w26, [x27, #16]
    e4ac:	ldr	x0, [x20, #64]
    e4b0:	cbz	x0, e66c <elf_update@@ELFUTILS_1.0+0xb14>
    e4b4:	mov	w11, #0x1                   	// #1
    e4b8:	mov	w9, w11
    e4bc:	ldr	w0, [x27, #20]
    e4c0:	mov	w3, w22
    e4c4:	cmp	w0, w22
    e4c8:	b.eq	e4d8 <elf_update@@ELFUTILS_1.0+0x980>  // b.none
    e4cc:	mov	w9, #0x1                   	// #1
    e4d0:	mov	w11, w9
    e4d4:	str	w22, [x27, #20]
    e4d8:	ldr	w0, [x27, #4]
    e4dc:	add	w3, w26, w3
    e4e0:	ldr	w1, [x20, #152]
    e4e4:	cmp	w0, #0x8
    e4e8:	ldr	w0, [x20, #156]
    e4ec:	orr	w11, w1, w11
    e4f0:	csel	w26, w3, w26, ne  // ne = any
    e4f4:	orr	w0, w0, w9
    e4f8:	stp	w11, w0, [x20, #152]
    e4fc:	b	e1c4 <elf_update@@ELFUTILS_1.0+0x66c>
    e500:	ldr	x0, [x19, #208]
    e504:	cbz	x0, e0bc <elf_update@@ELFUTILS_1.0+0x564>
    e508:	add	x0, x0, #0x10
    e50c:	b	e0b4 <elf_update@@ELFUTILS_1.0+0x55c>
    e510:	ldr	w0, [x8, #88]
    e514:	b	e150 <elf_update@@ELFUTILS_1.0+0x5f8>
    e518:	mov	w0, #0x1                   	// #1
    e51c:	strb	w0, [x25, #5]
    e520:	ldr	w0, [x19, #116]
    e524:	orr	w0, w0, #0x1
    e528:	str	w0, [x19, #116]
    e52c:	b	dfa0 <elf_update@@ELFUTILS_1.0+0x448>
    e530:	stp	x21, x22, [sp, #32]
    e534:	mov	w0, #0x1                   	// #1
    e538:	stp	x27, x28, [sp, #80]
    e53c:	str	w0, [x25, #20]
    e540:	ldr	w0, [x19, #116]
    e544:	orr	w0, w0, #0x1
    e548:	str	w0, [x19, #116]
    e54c:	b	dfd8 <elf_update@@ELFUTILS_1.0+0x480>
    e550:	mov	w0, #0x22                  	// #34
    e554:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    e558:	mov	x0, #0xffffffffffffffff    	// #-1
    e55c:	b	e2b8 <elf_update@@ELFUTILS_1.0+0x760>
    e560:	ldr	w0, [x19, #116]
    e564:	strh	w20, [x25, #40]
    e568:	orr	w0, w0, #0x1
    e56c:	str	w0, [x19, #116]
    e570:	b	e018 <elf_update@@ELFUTILS_1.0+0x4c0>
    e574:	cbz	w1, e000 <elf_update@@ELFUTILS_1.0+0x4a8>
    e578:	ldr	w0, [x19, #116]
    e57c:	strh	wzr, [x25, #48]
    e580:	orr	w0, w0, #0x1
    e584:	str	w0, [x19, #116]
    e588:	b	e000 <elf_update@@ELFUTILS_1.0+0x4a8>
    e58c:	str	x5, [sp, #104]
    e590:	bl	bfa8 <elf_newscn@@ELFUTILS_1.0+0x6e0>
    e594:	ldr	x5, [sp, #104]
    e598:	b	e0bc <elf_update@@ELFUTILS_1.0+0x564>
    e59c:	ldr	w0, [x8, #168]
    e5a0:	b	e150 <elf_update@@ELFUTILS_1.0+0x5f8>
    e5a4:	ldrh	w0, [x25, #16]
    e5a8:	cmp	w0, #0x1
    e5ac:	b.eq	e310 <elf_update@@ELFUTILS_1.0+0x7b8>  // b.none
    e5b0:	mov	w0, #0x28                  	// #40
    e5b4:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    e5b8:	mov	x0, #0xffffffffffffffff    	// #-1
    e5bc:	ldp	x21, x22, [sp, #32]
    e5c0:	ldp	x27, x28, [sp, #80]
    e5c4:	b	e2b8 <elf_update@@ELFUTILS_1.0+0x760>
    e5c8:	ldr	w0, [x8, #16]
    e5cc:	b	e150 <elf_update@@ELFUTILS_1.0+0x5f8>
    e5d0:	ldrh	w1, [x25, #18]
    e5d4:	mov	w4, #0x9026                	// #36902
    e5d8:	mov	w0, #0x8                   	// #8
    e5dc:	cmp	w1, w4
    e5e0:	b.eq	e150 <elf_update@@ELFUTILS_1.0+0x5f8>  // b.none
    e5e4:	cmp	w1, #0x16
    e5e8:	mov	w0, #0x4                   	// #4
    e5ec:	b.ne	e150 <elf_update@@ELFUTILS_1.0+0x5f8>  // b.any
    e5f0:	ldrb	w4, [x25, #4]
    e5f4:	mov	w1, #0x8                   	// #8
    e5f8:	cmp	w4, #0x2
    e5fc:	csel	w0, w0, w1, ne  // ne = any
    e600:	b	e150 <elf_update@@ELFUTILS_1.0+0x5f8>
    e604:	mov	w0, #0x23                  	// #35
    e608:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    e60c:	b	e454 <elf_update@@ELFUTILS_1.0+0x8fc>
    e610:	mov	w0, #0x25                  	// #37
    e614:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    e618:	mov	x0, #0xffffffffffffffff    	// #-1
    e61c:	ldp	x21, x22, [sp, #32]
    e620:	ldp	x27, x28, [sp, #80]
    e624:	b	e2b8 <elf_update@@ELFUTILS_1.0+0x760>
    e628:	mov	x0, x20
    e62c:	str	w9, [sp, #104]
    e630:	stp	x5, x2, [sp, #112]
    e634:	str	x8, [sp, #128]
    e638:	bl	3090 <elf32_getchdr@plt>
    e63c:	cbz	x0, e454 <elf_update@@ELFUTILS_1.0+0x8fc>
    e640:	mov	w7, #0xfffa                	// #65530
    e644:	mov	w10, #0xfffc                	// #65532
    e648:	ldr	w3, [x0, #4]
    e64c:	movk	w7, #0x6fff, lsl #16
    e650:	ldr	w0, [x27, #36]
    e654:	mov	w6, #0x1                   	// #1
    e658:	ldr	w9, [sp, #104]
    e65c:	movk	w10, #0x6fff, lsl #16
    e660:	ldp	x5, x2, [sp, #112]
    e664:	ldr	x8, [sp, #128]
    e668:	b	e1e4 <elf_update@@ELFUTILS_1.0+0x68c>
    e66c:	mov	x0, x20
    e670:	mov	x1, #0x0                   	// #0
    e674:	stp	x5, x2, [sp, #104]
    e678:	str	x8, [sp, #120]
    e67c:	bl	d268 <elf_rawdata@@ELFUTILS_1.0+0x738>
    e680:	mov	w10, #0xfffc                	// #65532
    e684:	mov	w7, #0xfffa                	// #65530
    e688:	movk	w10, #0x6fff, lsl #16
    e68c:	mov	w6, #0x1                   	// #1
    e690:	movk	w7, #0x6fff, lsl #16
    e694:	ldp	x5, x2, [sp, #104]
    e698:	ldr	x8, [sp, #120]
    e69c:	cbnz	x0, e4b4 <elf_update@@ELFUTILS_1.0+0x95c>
    e6a0:	b	e454 <elf_update@@ELFUTILS_1.0+0x8fc>
    e6a4:	add	x24, x24, #0x960
    e6a8:	ldrh	w0, [x25, #46]
    e6ac:	ldr	x1, [x24, #72]
    e6b0:	cmp	x0, x1
    e6b4:	b.eq	e6c0 <elf_update@@ELFUTILS_1.0+0xb68>  // b.none
    e6b8:	mov	w28, #0x1                   	// #1
    e6bc:	strh	w1, [x25, #46]
    e6c0:	ldr	w0, [x19, #56]
    e6c4:	ldr	w2, [x25, #32]
    e6c8:	tbz	w0, #2, e724 <elf_update@@ELFUTILS_1.0+0xbcc>
    e6cc:	mov	w2, w2
    e6d0:	mov	w0, w26
    e6d4:	madd	x1, x23, x1, x2
    e6d8:	cmp	x1, w26, uxtw
    e6dc:	csel	x26, x1, x0, cs  // cs = hs, nlast
    e6e0:	b	e260 <elf_update@@ELFUTILS_1.0+0x708>
    e6e4:	adrp	x3, 15000 <elf_compress_gnu@@ELFUTILS_1.7+0x1b8>
    e6e8:	adrp	x1, 15000 <elf_compress_gnu@@ELFUTILS_1.7+0x1b8>
    e6ec:	adrp	x0, 15000 <elf_compress_gnu@@ELFUTILS_1.7+0x1b8>
    e6f0:	add	x3, x3, #0xfd0
    e6f4:	add	x1, x1, #0xf48
    e6f8:	add	x0, x0, #0xf90
    e6fc:	mov	w2, #0xd6                  	// #214
    e700:	bl	3330 <__assert_fail@plt>
    e704:	adrp	x3, 15000 <elf_compress_gnu@@ELFUTILS_1.7+0x1b8>
    e708:	adrp	x1, 15000 <elf_compress_gnu@@ELFUTILS_1.7+0x1b8>
    e70c:	adrp	x0, 15000 <elf_compress_gnu@@ELFUTILS_1.7+0x1b8>
    e710:	add	x3, x3, #0xfd0
    e714:	add	x1, x1, #0xf48
    e718:	add	x0, x0, #0xf60
    e71c:	mov	w2, #0xb4                  	// #180
    e720:	bl	3330 <__assert_fail@plt>
    e724:	add	w0, w26, #0x3
    e728:	and	w0, w0, #0xfffffffc
    e72c:	cmp	w0, w2
    e730:	b.eq	e744 <elf_update@@ELFUTILS_1.0+0xbec>  // b.none
    e734:	str	w0, [x25, #32]
    e738:	ldr	w2, [x19, #56]
    e73c:	orr	w2, w2, #0x1
    e740:	str	w2, [x19, #56]
    e744:	madd	w26, w1, w23, w0
    e748:	b	e260 <elf_update@@ELFUTILS_1.0+0x708>
    e74c:	adrp	x3, 15000 <elf_compress_gnu@@ELFUTILS_1.7+0x1b8>
    e750:	adrp	x1, 15000 <elf_compress_gnu@@ELFUTILS_1.7+0x1b8>
    e754:	adrp	x0, 15000 <elf_compress_gnu@@ELFUTILS_1.7+0x1b8>
    e758:	add	x3, x3, #0xfd0
    e75c:	add	x1, x1, #0xf48
    e760:	add	x0, x0, #0xfa0
    e764:	mov	w2, #0x19b                 	// #411
    e768:	bl	3330 <__assert_fail@plt>
    e76c:	nop
    e770:	stp	x29, x30, [sp, #-144]!
    e774:	mov	x29, sp
    e778:	stp	x19, x20, [sp, #16]
    e77c:	mov	x20, x1
    e780:	mov	x19, x0
    e784:	stp	x23, x24, [sp, #48]
    e788:	mov	x23, x2
    e78c:	stp	x25, x26, [sp, #64]
    e790:	bl	8f50 <elf32_getehdr@@ELFUTILS_1.0+0x68>
    e794:	mov	x25, x0
    e798:	mov	w0, #0x457f                	// #17791
    e79c:	movk	w0, #0x464c, lsl #16
    e7a0:	ldr	w1, [x25]
    e7a4:	cmp	w1, w0
    e7a8:	b.ne	ec40 <elf_update@@ELFUTILS_1.0+0x10e8>  // b.any
    e7ac:	ldrb	w0, [x25, #4]
    e7b0:	cmp	w0, #0x2
    e7b4:	b.eq	e7cc <elf_update@@ELFUTILS_1.0+0xc74>  // b.none
    e7b8:	mov	w0, #0x2                   	// #2
    e7bc:	strb	w0, [x25, #4]
    e7c0:	ldr	w0, [x19, #116]
    e7c4:	orr	w0, w0, #0x1
    e7c8:	str	w0, [x19, #116]
    e7cc:	ldrb	w0, [x25, #5]
    e7d0:	cbz	w0, ed44 <elf_update@@ELFUTILS_1.0+0x11ec>
    e7d4:	cmp	w0, #0x2
    e7d8:	b.hi	ed78 <elf_update@@ELFUTILS_1.0+0x1220>  // b.pmore
    e7dc:	cmp	w0, #0x1
    e7e0:	cset	w0, ne  // ne = any
    e7e4:	str	w0, [x20]
    e7e8:	ldrb	w0, [x25, #6]
    e7ec:	cmp	w0, #0x1
    e7f0:	b.eq	e808 <elf_update@@ELFUTILS_1.0+0xcb0>  // b.none
    e7f4:	mov	w0, #0x1                   	// #1
    e7f8:	strb	w0, [x25, #6]
    e7fc:	ldr	w0, [x19, #116]
    e800:	orr	w0, w0, #0x1
    e804:	str	w0, [x19, #116]
    e808:	ldr	w0, [x25, #20]
    e80c:	cbz	w0, ed5c <elf_update@@ELFUTILS_1.0+0x1204>
    e810:	cmp	w0, #0x1
    e814:	b.ne	ebf8 <elf_update@@ELFUTILS_1.0+0x10a0>  // b.any
    e818:	stp	x27, x28, [sp, #80]
    e81c:	mov	x0, #0xfeff                	// #65279
    e820:	ldrh	w1, [x25, #60]
    e824:	cmp	x23, x0
    e828:	b.hi	ed9c <elf_update@@ELFUTILS_1.0+0x1244>  // b.pmore
    e82c:	cmp	x23, w1, uxth
    e830:	b.eq	e844 <elf_update@@ELFUTILS_1.0+0xcec>  // b.none
    e834:	ldr	w0, [x19, #116]
    e838:	strh	w23, [x25, #60]
    e83c:	orr	w0, w0, #0x1
    e840:	str	w0, [x19, #116]
    e844:	adrp	x24, 15000 <elf_compress_gnu@@ELFUTILS_1.7+0x1b8>
    e848:	add	x1, x24, #0x960
    e84c:	ldrh	w0, [x25, #52]
    e850:	ldr	x26, [x1, #240]
    e854:	cmp	x0, x26
    e858:	b.ne	ed88 <elf_update@@ELFUTILS_1.0+0x1230>  // b.any
    e85c:	ldrh	w0, [x25, #56]
    e860:	cbz	w0, ea64 <elf_update@@ELFUTILS_1.0+0xf0c>
    e864:	ldr	x0, [x19, #88]
    e868:	cbz	x0, ea84 <elf_update@@ELFUTILS_1.0+0xf2c>
    e86c:	add	x1, sp, #0x88
    e870:	mov	x0, x19
    e874:	bl	13338 <gelf_update_verdaux@@ELFUTILS_1.0+0x88>
    e878:	mov	w28, w0
    e87c:	cbnz	w0, ee40 <elf_update@@ELFUTILS_1.0+0x12e8>
    e880:	add	x1, x24, #0x960
    e884:	ldr	w2, [x19, #56]
    e888:	ldr	x3, [sp, #136]
    e88c:	ldr	x0, [x1, #264]
    e890:	ldr	x1, [x25, #32]
    e894:	mul	x0, x0, x3
    e898:	tbz	w2, #2, eac4 <elf_update@@ELFUTILS_1.0+0xf6c>
    e89c:	add	x0, x0, x1
    e8a0:	cmp	x26, x0
    e8a4:	csel	x26, x26, x0, cs  // cs = hs, nlast
    e8a8:	cbz	x23, ea9c <elf_update@@ELFUTILS_1.0+0xf44>
    e8ac:	ldr	w0, [x19, #200]
    e8b0:	stp	x21, x22, [sp, #32]
    e8b4:	cbz	w0, ef30 <elf_update@@ELFUTILS_1.0+0x13d8>
    e8b8:	mov	x1, #0xfeff                	// #65279
    e8bc:	cmp	x23, x1
    e8c0:	b.ls	e8e4 <elf_update@@ELFUTILS_1.0+0xd8c>  // b.plast
    e8c4:	ldr	x2, [x19, #360]
    e8c8:	ldr	x3, [x2, #32]
    e8cc:	cmp	x3, x23
    e8d0:	b.eq	e8e4 <elf_update@@ELFUTILS_1.0+0xd8c>  // b.none
    e8d4:	ldr	w3, [x19, #368]
    e8d8:	str	x23, [x2, #32]
    e8dc:	orr	w2, w3, #0x1
    e8e0:	str	w2, [x19, #368]
    e8e4:	cmp	w0, #0x1
    e8e8:	add	x5, x19, #0xc8
    e8ec:	b.ls	ed28 <elf_update@@ELFUTILS_1.0+0x11d0>  // b.plast
    e8f0:	add	x0, x19, #0x1a8
    e8f4:	ldr	x1, [x0, #144]
    e8f8:	cbz	x1, edb4 <elf_update@@ELFUTILS_1.0+0x125c>
    e8fc:	mov	w7, #0xfffa                	// #65530
    e900:	mov	w1, #0x1                   	// #1
    e904:	mov	w8, #0x0                   	// #0
    e908:	movk	w7, #0x6fff, lsl #16
    e90c:	ldr	w0, [x5]
    e910:	and	x4, x1, #0xff
    e914:	cmp	w0, w1
    e918:	b.ls	ea44 <elf_update@@ELFUTILS_1.0+0xeec>  // b.plast
    e91c:	lsl	x20, x4, #1
    e920:	mov	w9, #0xfffc                	// #65532
    e924:	add	x20, x20, x4
    e928:	mov	x6, #0x1                   	// #1
    e92c:	movk	w9, #0x6fff, lsl #16
    e930:	add	x20, x4, x20, lsl #2
    e934:	add	x20, x5, x20, lsl #4
    e938:	add	x20, x20, #0x10
    e93c:	ldr	x27, [x20, #144]
    e940:	cbz	x27, ef10 <elf_update@@ELFUTILS_1.0+0x13b8>
    e944:	ldp	x21, x2, [x27, #48]
    e948:	cmp	x21, #0x0
    e94c:	csel	x21, x21, x6, ne  // ne = any
    e950:	sub	x0, x21, #0x1
    e954:	tst	x0, x21
    e958:	b.ne	eadc <elf_update@@ELFUTILS_1.0+0xf84>  // b.any
    e95c:	ldr	w1, [x27, #4]
    e960:	cmp	w1, #0xb
    e964:	b.eq	ed38 <elf_update@@ELFUTILS_1.0+0x11e0>  // b.none
    e968:	b.hi	eb20 <elf_update@@ELFUTILS_1.0+0xfc8>  // b.pmore
    e96c:	cmp	w1, #0x5
    e970:	b.eq	edf4 <elf_update@@ELFUTILS_1.0+0x129c>  // b.none
    e974:	b.ls	eb04 <elf_update@@ELFUTILS_1.0+0xfac>  // b.plast
    e978:	cmp	w1, #0x6
    e97c:	b.eq	edc4 <elf_update@@ELFUTILS_1.0+0x126c>  // b.none
    e980:	cmp	w1, #0x9
    e984:	b.ne	e9a8 <elf_update@@ELFUTILS_1.0+0xe50>  // b.any
    e988:	add	x0, x24, #0x960
    e98c:	ldr	x0, [x0, #280]
    e990:	cmp	x0, x2
    e994:	b.eq	e9a8 <elf_update@@ELFUTILS_1.0+0xe50>  // b.none
    e998:	str	x0, [x27, #56]
    e99c:	ldr	w0, [x20, #152]
    e9a0:	orr	w0, w0, #0x1
    e9a4:	str	w0, [x20, #152]
    e9a8:	ldr	w0, [x20, #120]
    e9ac:	cbz	w0, ec54 <elf_update@@ELFUTILS_1.0+0x10fc>
    e9b0:	ldr	x0, [x20, #64]
    e9b4:	cbnz	x0, eb5c <elf_update@@ELFUTILS_1.0+0x1004>
    e9b8:	ldr	w12, [x19, #56]
    e9bc:	ldr	x22, [x20, #88]
    e9c0:	and	w12, w12, #0x4
    e9c4:	ldr	x0, [x27, #48]
    e9c8:	cbz	w12, ec98 <elf_update@@ELFUTILS_1.0+0x1140>
    e9cc:	ldr	w1, [x27, #4]
    e9d0:	cmp	w1, #0x8
    e9d4:	b.eq	e9e8 <elf_update@@ELFUTILS_1.0+0xe90>  // b.none
    e9d8:	ldp	x1, x2, [x27, #24]
    e9dc:	add	x1, x1, x2
    e9e0:	cmp	x26, x1
    e9e4:	csel	x26, x26, x1, cs  // cs = hs, nlast
    e9e8:	sub	x1, x0, #0x1
    e9ec:	tst	x1, x0
    e9f0:	b.ne	eadc <elf_update@@ELFUTILS_1.0+0xf84>  // b.any
    e9f4:	cmp	x0, #0x0
    e9f8:	csel	x0, x0, x6, ne  // ne = any
    e9fc:	cmp	x21, x0
    ea00:	b.hi	eadc <elf_update@@ELFUTILS_1.0+0xf84>  // b.pmore
    ea04:	ldr	x0, [x27, #56]
    ea08:	cmp	x0, #0x1
    ea0c:	b.ls	ea30 <elf_update@@ELFUTILS_1.0+0xed8>  // b.plast
    ea10:	ldr	w1, [x19, #56]
    ea14:	tbnz	w1, #3, ea30 <elf_update@@ELFUTILS_1.0+0xed8>
    ea18:	ldr	x1, [x27, #8]
    ea1c:	tbnz	w1, #11, ee64 <elf_update@@ELFUTILS_1.0+0x130c>
    ea20:	ldr	x2, [x27, #32]
    ea24:	udiv	x1, x2, x0
    ea28:	msub	x0, x1, x0, x2
    ea2c:	cbnz	x0, ee4c <elf_update@@ELFUTILS_1.0+0x12f4>
    ea30:	ldr	w0, [x5]
    ea34:	add	x4, x4, #0x1
    ea38:	add	x20, x20, #0xd0
    ea3c:	cmp	x4, w0, uxtw
    ea40:	b.cc	e93c <elf_update@@ELFUTILS_1.0+0xde4>  // b.lo, b.ul, b.last
    ea44:	ldr	x2, [x5, #8]
    ea48:	cbz	x2, eed0 <elf_update@@ELFUTILS_1.0+0x1378>
    ea4c:	ldr	w3, [x5, #4]
    ea50:	mov	w1, #0x0                   	// #0
    ea54:	cmp	w3, w0
    ea58:	b.ne	ef78 <elf_update@@ELFUTILS_1.0+0x1420>  // b.any
    ea5c:	mov	x5, x2
    ea60:	b	e90c <elf_update@@ELFUTILS_1.0+0xdb4>
    ea64:	ldr	x0, [x25, #32]
    ea68:	cbz	x0, e864 <elf_update@@ELFUTILS_1.0+0xd0c>
    ea6c:	ldr	w0, [x19, #116]
    ea70:	str	xzr, [x25, #32]
    ea74:	orr	w0, w0, #0x1
    ea78:	str	w0, [x19, #116]
    ea7c:	ldr	x0, [x19, #88]
    ea80:	cbnz	x0, e86c <elf_update@@ELFUTILS_1.0+0xd14>
    ea84:	mov	x0, x19
    ea88:	bl	9768 <elf32_getphdr@@ELFUTILS_1.0+0x50>
    ea8c:	ldr	x0, [x19, #88]
    ea90:	cbnz	x0, e86c <elf_update@@ELFUTILS_1.0+0xd14>
    ea94:	mov	w28, #0x0                   	// #0
    ea98:	cbnz	x23, e8ac <elf_update@@ELFUTILS_1.0+0xd54>
    ea9c:	ldr	w1, [x19, #116]
    eaa0:	mov	x0, x26
    eaa4:	ldp	x23, x24, [sp, #48]
    eaa8:	orr	w28, w1, w28
    eaac:	str	w28, [x19, #116]
    eab0:	ldp	x19, x20, [sp, #16]
    eab4:	ldp	x25, x26, [sp, #64]
    eab8:	ldp	x27, x28, [sp, #80]
    eabc:	ldp	x29, x30, [sp], #144
    eac0:	ret
    eac4:	cmp	x26, x1
    eac8:	b.eq	ead4 <elf_update@@ELFUTILS_1.0+0xf7c>  // b.none
    eacc:	mov	w28, #0x1                   	// #1
    ead0:	str	x26, [x25, #32]
    ead4:	add	x26, x26, x0
    ead8:	b	e8a8 <elf_update@@ELFUTILS_1.0+0xd50>
    eadc:	mov	w0, #0x24                  	// #36
    eae0:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    eae4:	ldp	x21, x22, [sp, #32]
    eae8:	mov	x0, #0xffffffffffffffff    	// #-1
    eaec:	ldp	x27, x28, [sp, #80]
    eaf0:	ldp	x19, x20, [sp, #16]
    eaf4:	ldp	x23, x24, [sp, #48]
    eaf8:	ldp	x25, x26, [sp, #64]
    eafc:	ldp	x29, x30, [sp], #144
    eb00:	ret
    eb04:	cmp	w1, #0x2
    eb08:	b.eq	ed38 <elf_update@@ELFUTILS_1.0+0x11e0>  // b.none
    eb0c:	cmp	w1, #0x4
    eb10:	b.ne	e9a8 <elf_update@@ELFUTILS_1.0+0xe50>  // b.any
    eb14:	add	x0, x24, #0x960
    eb18:	ldr	x0, [x0, #272]
    eb1c:	b	e990 <elf_update@@ELFUTILS_1.0+0xe38>
    eb20:	cmp	w1, w7
    eb24:	b.eq	ee28 <elf_update@@ELFUTILS_1.0+0x12d0>  // b.none
    eb28:	b.ls	eb40 <elf_update@@ELFUTILS_1.0+0xfe8>  // b.plast
    eb2c:	cmp	w1, w9
    eb30:	b.ne	e9a8 <elf_update@@ELFUTILS_1.0+0xe50>  // b.any
    eb34:	add	x0, x24, #0x960
    eb38:	ldr	x0, [x0, #376]
    eb3c:	b	e990 <elf_update@@ELFUTILS_1.0+0xe38>
    eb40:	cmp	w1, #0x11
    eb44:	b.eq	edd0 <elf_update@@ELFUTILS_1.0+0x1278>  // b.none
    eb48:	cmp	w1, #0x12
    eb4c:	b.ne	e9a8 <elf_update@@ELFUTILS_1.0+0xe50>  // b.any
    eb50:	add	x0, x24, #0x960
    eb54:	ldr	x0, [x0, #96]
    eb58:	b	e990 <elf_update@@ELFUTILS_1.0+0xe38>
    eb5c:	mov	x3, x20
    eb60:	add	x14, x20, #0x48
    eb64:	cmp	x20, x3
    eb68:	mov	x2, x3
    eb6c:	mov	x22, #0x0                   	// #0
    eb70:	b.eq	ebd0 <elf_update@@ELFUTILS_1.0+0x1078>  // b.none
    eb74:	nop
    eb78:	ldr	w11, [x2, #12]
    eb7c:	cmp	w11, #0x1
    eb80:	b.ne	ebf0 <elf_update@@ELFUTILS_1.0+0x1098>  // b.any
    eb84:	ldr	x1, [x2, #32]
    eb88:	sub	x0, x1, #0x1
    eb8c:	tst	x0, x1
    eb90:	b.ne	eadc <elf_update@@ELFUTILS_1.0+0xf84>  // b.any
    eb94:	ldr	w0, [x19, #56]
    eb98:	cmp	x21, x1
    eb9c:	csel	x21, x21, x1, cs  // cs = hs, nlast
    eba0:	and	w12, w0, #0x4
    eba4:	ldp	x13, x10, [x2, #16]
    eba8:	tbz	w0, #2, ec18 <elf_update@@ELFUTILS_1.0+0x10c0>
    ebac:	ldr	x0, [x27, #32]
    ebb0:	add	x10, x10, x13
    ebb4:	cmp	x10, x0
    ebb8:	b.hi	ee34 <elf_update@@ELFUTILS_1.0+0x12dc>  // b.pmore
    ebbc:	ldr	x3, [x3, #48]
    ebc0:	cbz	x3, e9c4 <elf_update@@ELFUTILS_1.0+0xe6c>
    ebc4:	cmp	x20, x3
    ebc8:	mov	x2, x3
    ebcc:	b.ne	eb78 <elf_update@@ELFUTILS_1.0+0x1020>  // b.any
    ebd0:	ldr	x0, [x20]
    ebd4:	cbnz	x0, eb78 <elf_update@@ELFUTILS_1.0+0x1020>
    ebd8:	ldr	x0, [x20, #72]
    ebdc:	cmp	x0, #0x0
    ebe0:	csel	x2, x20, x14, eq  // eq = none
    ebe4:	ldr	w11, [x2, #12]
    ebe8:	cmp	w11, #0x1
    ebec:	b.eq	eb84 <elf_update@@ELFUTILS_1.0+0x102c>  // b.none
    ebf0:	ldp	x21, x22, [sp, #32]
    ebf4:	ldp	x27, x28, [sp, #80]
    ebf8:	mov	w0, #0x2                   	// #2
    ebfc:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    ec00:	mov	x0, #0xffffffffffffffff    	// #-1
    ec04:	ldp	x19, x20, [sp, #16]
    ec08:	ldp	x23, x24, [sp, #48]
    ec0c:	ldp	x25, x26, [sp, #64]
    ec10:	ldp	x29, x30, [sp], #144
    ec14:	ret
    ec18:	sub	x22, x22, #0x1
    ec1c:	neg	x0, x1
    ec20:	add	x22, x22, x1
    ec24:	and	x22, x22, x0
    ec28:	cmp	x22, x10
    ec2c:	b.eq	ec38 <elf_update@@ELFUTILS_1.0+0x10e0>  // b.none
    ec30:	mov	w8, w11
    ec34:	str	x22, [x2, #24]
    ec38:	add	x22, x22, x13
    ec3c:	b	ebbc <elf_update@@ELFUTILS_1.0+0x1064>
    ec40:	str	w0, [x25]
    ec44:	ldr	w0, [x19, #116]
    ec48:	orr	w0, w0, #0x1
    ec4c:	str	w0, [x19, #116]
    ec50:	b	e7ac <elf_update@@ELFUTILS_1.0+0xc54>
    ec54:	mov	x0, x20
    ec58:	str	w8, [sp, #104]
    ec5c:	stp	x5, x4, [sp, #112]
    ec60:	bl	cc80 <elf_rawdata@@ELFUTILS_1.0+0x150>
    ec64:	mov	w9, #0xfffc                	// #65532
    ec68:	mov	w7, #0xfffa                	// #65530
    ec6c:	ldr	w8, [sp, #104]
    ec70:	mov	x6, #0x1                   	// #1
    ec74:	movk	w9, #0x6fff, lsl #16
    ec78:	movk	w7, #0x6fff, lsl #16
    ec7c:	ldp	x5, x4, [sp, #112]
    ec80:	cbz	w0, e9b0 <elf_update@@ELFUTILS_1.0+0xe58>
    ec84:	nop
    ec88:	mov	x0, #0xffffffffffffffff    	// #-1
    ec8c:	ldp	x21, x22, [sp, #32]
    ec90:	ldp	x27, x28, [sp, #80]
    ec94:	b	eaf0 <elf_update@@ELFUTILS_1.0+0xf98>
    ec98:	cmp	x21, x0
    ec9c:	b.eq	ecb0 <elf_update@@ELFUTILS_1.0+0x1158>  // b.none
    eca0:	str	x21, [x27, #48]
    eca4:	ldr	w0, [x20, #152]
    eca8:	orr	w0, w0, #0x1
    ecac:	str	w0, [x20, #152]
    ecb0:	sub	x0, x26, #0x1
    ecb4:	neg	x26, x21
    ecb8:	ldr	x1, [x27, #24]
    ecbc:	add	x0, x0, x21
    ecc0:	and	x26, x26, x0
    ecc4:	cmp	x1, x26
    ecc8:	b.eq	ed20 <elf_update@@ELFUTILS_1.0+0x11c8>  // b.none
    eccc:	str	x26, [x27, #24]
    ecd0:	ldr	x0, [x20, #64]
    ecd4:	cbz	x0, eea0 <elf_update@@ELFUTILS_1.0+0x1348>
    ecd8:	mov	w2, #0x1                   	// #1
    ecdc:	mov	w8, w2
    ece0:	ldr	x0, [x27, #32]
    ece4:	cmp	x0, x22
    ece8:	b.eq	ecf8 <elf_update@@ELFUTILS_1.0+0x11a0>  // b.none
    ecec:	mov	w8, #0x1                   	// #1
    ecf0:	mov	w2, w8
    ecf4:	str	x22, [x27, #32]
    ecf8:	ldr	w0, [x27, #4]
    ecfc:	add	x22, x26, x22
    ed00:	ldr	w1, [x20, #152]
    ed04:	cmp	w0, #0x8
    ed08:	ldr	w0, [x20, #156]
    ed0c:	orr	w1, w1, w2
    ed10:	csel	x26, x22, x26, ne  // ne = any
    ed14:	orr	w0, w0, w8
    ed18:	stp	w1, w0, [x20, #152]
    ed1c:	b	ea04 <elf_update@@ELFUTILS_1.0+0xeac>
    ed20:	mov	w2, #0x0                   	// #0
    ed24:	b	ece0 <elf_update@@ELFUTILS_1.0+0x1188>
    ed28:	ldr	x0, [x19, #208]
    ed2c:	cbz	x0, e8fc <elf_update@@ELFUTILS_1.0+0xda4>
    ed30:	add	x0, x0, #0x10
    ed34:	b	e8f4 <elf_update@@ELFUTILS_1.0+0xd9c>
    ed38:	add	x0, x24, #0x960
    ed3c:	ldr	x0, [x0, #304]
    ed40:	b	e990 <elf_update@@ELFUTILS_1.0+0xe38>
    ed44:	mov	w0, #0x1                   	// #1
    ed48:	strb	w0, [x25, #5]
    ed4c:	ldr	w0, [x19, #116]
    ed50:	orr	w0, w0, #0x1
    ed54:	str	w0, [x19, #116]
    ed58:	b	e7e8 <elf_update@@ELFUTILS_1.0+0xc90>
    ed5c:	stp	x27, x28, [sp, #80]
    ed60:	mov	w0, #0x1                   	// #1
    ed64:	str	w0, [x25, #20]
    ed68:	ldr	w0, [x19, #116]
    ed6c:	orr	w0, w0, #0x1
    ed70:	str	w0, [x19, #116]
    ed74:	b	e81c <elf_update@@ELFUTILS_1.0+0xcc4>
    ed78:	mov	w0, #0x22                  	// #34
    ed7c:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    ed80:	mov	x0, #0xffffffffffffffff    	// #-1
    ed84:	b	eaf0 <elf_update@@ELFUTILS_1.0+0xf98>
    ed88:	ldr	w0, [x19, #116]
    ed8c:	strh	w26, [x25, #52]
    ed90:	orr	w0, w0, #0x1
    ed94:	str	w0, [x19, #116]
    ed98:	b	e85c <elf_update@@ELFUTILS_1.0+0xd04>
    ed9c:	cbz	w1, e844 <elf_update@@ELFUTILS_1.0+0xcec>
    eda0:	ldr	w0, [x19, #116]
    eda4:	strh	wzr, [x25, #60]
    eda8:	orr	w0, w0, #0x1
    edac:	str	w0, [x19, #116]
    edb0:	b	e844 <elf_update@@ELFUTILS_1.0+0xcec>
    edb4:	str	x5, [sp, #104]
    edb8:	bl	c560 <elf32_getshdr@@ELFUTILS_1.0+0x530>
    edbc:	ldr	x5, [sp, #104]
    edc0:	b	e8fc <elf_update@@ELFUTILS_1.0+0xda4>
    edc4:	add	x0, x24, #0x960
    edc8:	ldr	x0, [x0, #232]
    edcc:	b	e990 <elf_update@@ELFUTILS_1.0+0xe38>
    edd0:	ldrh	w0, [x25, #16]
    edd4:	cmp	w0, #0x1
    edd8:	b.eq	eb50 <elf_update@@ELFUTILS_1.0+0xff8>  // b.none
    eddc:	mov	w0, #0x28                  	// #40
    ede0:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    ede4:	mov	x0, #0xffffffffffffffff    	// #-1
    ede8:	ldp	x21, x22, [sp, #32]
    edec:	ldp	x27, x28, [sp, #80]
    edf0:	b	eaf0 <elf_update@@ELFUTILS_1.0+0xf98>
    edf4:	ldrh	w1, [x25, #18]
    edf8:	mov	w3, #0x9026                	// #36902
    edfc:	mov	x0, #0x8                   	// #8
    ee00:	cmp	w1, w3
    ee04:	b.eq	e990 <elf_update@@ELFUTILS_1.0+0xe38>  // b.none
    ee08:	cmp	w1, #0x16
    ee0c:	mov	x0, #0x4                   	// #4
    ee10:	b.ne	e990 <elf_update@@ELFUTILS_1.0+0xe38>  // b.any
    ee14:	ldrb	w3, [x25, #4]
    ee18:	mov	x1, #0x8                   	// #8
    ee1c:	cmp	w3, #0x2
    ee20:	csel	x0, x0, x1, ne  // ne = any
    ee24:	b	e990 <elf_update@@ELFUTILS_1.0+0xe38>
    ee28:	add	x0, x24, #0x960
    ee2c:	ldr	x0, [x0, #384]
    ee30:	b	e990 <elf_update@@ELFUTILS_1.0+0xe38>
    ee34:	mov	w0, #0x23                  	// #35
    ee38:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    ee3c:	b	ec88 <elf_update@@ELFUTILS_1.0+0x1130>
    ee40:	mov	x0, #0xffffffffffffffff    	// #-1
    ee44:	ldp	x27, x28, [sp, #80]
    ee48:	b	eaf0 <elf_update@@ELFUTILS_1.0+0xf98>
    ee4c:	mov	w0, #0x25                  	// #37
    ee50:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    ee54:	mov	x0, #0xffffffffffffffff    	// #-1
    ee58:	ldp	x21, x22, [sp, #32]
    ee5c:	ldp	x27, x28, [sp, #80]
    ee60:	b	eaf0 <elf_update@@ELFUTILS_1.0+0xf98>
    ee64:	mov	x0, x20
    ee68:	str	w8, [sp, #104]
    ee6c:	stp	x5, x4, [sp, #112]
    ee70:	bl	3190 <elf64_getchdr@plt>
    ee74:	cbz	x0, ec88 <elf_update@@ELFUTILS_1.0+0x1130>
    ee78:	mov	w7, #0xfffa                	// #65530
    ee7c:	mov	w9, #0xfffc                	// #65532
    ee80:	ldr	w8, [sp, #104]
    ee84:	movk	w7, #0x6fff, lsl #16
    ee88:	movk	w9, #0x6fff, lsl #16
    ee8c:	mov	x6, #0x1                   	// #1
    ee90:	ldr	x2, [x0, #8]
    ee94:	ldr	x0, [x27, #56]
    ee98:	ldp	x5, x4, [sp, #112]
    ee9c:	b	ea24 <elf_update@@ELFUTILS_1.0+0xecc>
    eea0:	mov	x0, x20
    eea4:	mov	x1, #0x0                   	// #0
    eea8:	stp	x5, x4, [sp, #104]
    eeac:	bl	d268 <elf_rawdata@@ELFUTILS_1.0+0x738>
    eeb0:	mov	w9, #0xfffc                	// #65532
    eeb4:	mov	w7, #0xfffa                	// #65530
    eeb8:	mov	x6, #0x1                   	// #1
    eebc:	movk	w9, #0x6fff, lsl #16
    eec0:	movk	w7, #0x6fff, lsl #16
    eec4:	ldp	x5, x4, [sp, #104]
    eec8:	cbnz	x0, ecd8 <elf_update@@ELFUTILS_1.0+0x1180>
    eecc:	b	ec88 <elf_update@@ELFUTILS_1.0+0x1130>
    eed0:	add	x24, x24, #0x960
    eed4:	ldrh	w1, [x25, #58]
    eed8:	ldr	x0, [x24, #288]
    eedc:	cmp	x1, x0
    eee0:	b.eq	eeec <elf_update@@ELFUTILS_1.0+0x1394>  // b.none
    eee4:	mov	w28, #0x1                   	// #1
    eee8:	strh	w0, [x25, #58]
    eeec:	ldr	w2, [x19, #56]
    eef0:	mul	x23, x23, x0
    eef4:	ldr	x1, [x25, #40]
    eef8:	tbz	w2, #2, ef50 <elf_update@@ELFUTILS_1.0+0x13f8>
    eefc:	add	x23, x1, x23
    ef00:	cmp	x26, x23
    ef04:	csel	x26, x26, x23, cs  // cs = hs, nlast
    ef08:	ldp	x21, x22, [sp, #32]
    ef0c:	b	ea9c <elf_update@@ELFUTILS_1.0+0xf44>
    ef10:	adrp	x3, 15000 <elf_compress_gnu@@ELFUTILS_1.7+0x1b8>
    ef14:	adrp	x1, 15000 <elf_compress_gnu@@ELFUTILS_1.7+0x1b8>
    ef18:	adrp	x0, 15000 <elf_compress_gnu@@ELFUTILS_1.7+0x1b8>
    ef1c:	add	x3, x3, #0xff0
    ef20:	add	x1, x1, #0xf48
    ef24:	add	x0, x0, #0xf90
    ef28:	mov	w2, #0xd6                  	// #214
    ef2c:	bl	3330 <__assert_fail@plt>
    ef30:	adrp	x3, 15000 <elf_compress_gnu@@ELFUTILS_1.7+0x1b8>
    ef34:	adrp	x1, 15000 <elf_compress_gnu@@ELFUTILS_1.7+0x1b8>
    ef38:	adrp	x0, 15000 <elf_compress_gnu@@ELFUTILS_1.7+0x1b8>
    ef3c:	add	x3, x3, #0xff0
    ef40:	add	x1, x1, #0xf48
    ef44:	add	x0, x0, #0xf60
    ef48:	mov	w2, #0xb4                  	// #180
    ef4c:	bl	3330 <__assert_fail@plt>
    ef50:	add	x0, x26, #0x7
    ef54:	and	x0, x0, #0xfffffffffffffff8
    ef58:	cmp	x0, x1
    ef5c:	b.eq	ef6c <elf_update@@ELFUTILS_1.0+0x1414>  // b.none
    ef60:	str	x0, [x25, #40]
    ef64:	orr	w2, w2, #0x1
    ef68:	str	w2, [x19, #56]
    ef6c:	add	x26, x0, x23
    ef70:	ldp	x21, x22, [sp, #32]
    ef74:	b	ea9c <elf_update@@ELFUTILS_1.0+0xf44>
    ef78:	adrp	x3, 15000 <elf_compress_gnu@@ELFUTILS_1.7+0x1b8>
    ef7c:	adrp	x1, 15000 <elf_compress_gnu@@ELFUTILS_1.7+0x1b8>
    ef80:	adrp	x0, 15000 <elf_compress_gnu@@ELFUTILS_1.7+0x1b8>
    ef84:	add	x3, x3, #0xff0
    ef88:	add	x1, x1, #0xf48
    ef8c:	add	x0, x0, #0xfa0
    ef90:	mov	w2, #0x19b                 	// #411
    ef94:	bl	3330 <__assert_fail@plt>
    ef98:	ldr	x4, [x0]
    ef9c:	ldr	x3, [x1]
    efa0:	ldr	x2, [x4, #144]
    efa4:	ldr	x1, [x3, #144]
    efa8:	ldr	w5, [x2, #16]
    efac:	ldr	w0, [x1, #16]
    efb0:	cmp	w5, w0
    efb4:	b.cc	eff8 <elf_update@@ELFUTILS_1.0+0x14a0>  // b.lo, b.ul, b.last
    efb8:	mov	w0, #0x1                   	// #1
    efbc:	b.hi	eff4 <elf_update@@ELFUTILS_1.0+0x149c>  // b.pmore
    efc0:	ldr	w1, [x1, #20]
    efc4:	mov	w0, #0xffffffff            	// #-1
    efc8:	ldr	w2, [x2, #20]
    efcc:	cmp	w2, w1
    efd0:	b.cc	eff4 <elf_update@@ELFUTILS_1.0+0x149c>  // b.lo, b.ul, b.last
    efd4:	mov	w0, #0x1                   	// #1
    efd8:	b.hi	eff4 <elf_update@@ELFUTILS_1.0+0x149c>  // b.pmore
    efdc:	ldr	x2, [x4, #128]
    efe0:	mov	w4, #0xffffffff            	// #-1
    efe4:	ldr	x1, [x3, #128]
    efe8:	cmp	x2, x1
    efec:	cset	w0, hi  // hi = pmore
    eff0:	csel	w0, w0, w4, cs  // cs = hs, nlast
    eff4:	ret
    eff8:	mov	w0, #0xffffffff            	// #-1
    effc:	ret
    f000:	stp	x29, x30, [sp, #-112]!
    f004:	cmp	x2, #0x1, lsl #12
    f008:	mov	x29, sp
    f00c:	stp	x25, x26, [sp, #64]
    f010:	mov	x25, x3
    f014:	ldr	x26, [x4]
    f018:	stp	x19, x20, [sp, #16]
    f01c:	mov	x19, #0x1000                	// #4096
    f020:	stp	x21, x22, [sp, #32]
    f024:	csel	x19, x2, x19, ls  // ls = plast
    f028:	mov	x22, x1
    f02c:	stp	x23, x24, [sp, #48]
    f030:	cmp	x26, x19
    f034:	stp	x27, x28, [sp, #80]
    f038:	mov	x27, x2
    f03c:	str	w0, [sp, #100]
    f040:	b.cc	f140 <elf_update@@ELFUTILS_1.0+0x15e8>  // b.lo, b.ul, b.last
    f044:	nop
    f048:	cmp	x27, x26
    f04c:	mov	x28, x22
    f050:	csel	x21, x27, x26, ls  // ls = plast
    f054:	mov	x24, x25
    f058:	mov	x23, x21
    f05c:	mov	x20, #0x0                   	// #0
    f060:	ldr	w0, [sp, #100]
    f064:	mov	x3, x28
    f068:	mov	x2, x23
    f06c:	mov	x1, x24
    f070:	bl	3220 <pwrite@plt>
    f074:	mov	x19, x0
    f078:	cmn	x0, #0x1
    f07c:	b.eq	f0c0 <elf_update@@ELFUTILS_1.0+0x1568>  // b.none
    f080:	cmp	x0, #0x0
    f084:	b.le	f138 <elf_update@@ELFUTILS_1.0+0x15e0>
    f088:	add	x20, x20, x0
    f08c:	cmp	x21, x20
    f090:	b.ls	f104 <elf_update@@ELFUTILS_1.0+0x15ac>  // b.plast
    f094:	ldr	w0, [sp, #100]
    f098:	add	x28, x22, x20
    f09c:	sub	x23, x21, x20
    f0a0:	add	x24, x25, x20
    f0a4:	mov	x3, x28
    f0a8:	mov	x2, x23
    f0ac:	mov	x1, x24
    f0b0:	bl	3220 <pwrite@plt>
    f0b4:	mov	x19, x0
    f0b8:	cmn	x0, #0x1
    f0bc:	b.ne	f080 <elf_update@@ELFUTILS_1.0+0x1528>  // b.any
    f0c0:	bl	3340 <__errno_location@plt>
    f0c4:	ldr	w0, [x0]
    f0c8:	cmp	w0, #0x4
    f0cc:	b.eq	f060 <elf_update@@ELFUTILS_1.0+0x1508>  // b.none
    f0d0:	cmp	x21, x19
    f0d4:	b.ne	f110 <elf_update@@ELFUTILS_1.0+0x15b8>  // b.any
    f0d8:	add	x22, x22, x21
    f0dc:	subs	x27, x27, x21
    f0e0:	b.ne	f048 <elf_update@@ELFUTILS_1.0+0x14f0>  // b.any
    f0e4:	mov	w0, #0x0                   	// #0
    f0e8:	ldp	x19, x20, [sp, #16]
    f0ec:	ldp	x21, x22, [sp, #32]
    f0f0:	ldp	x23, x24, [sp, #48]
    f0f4:	ldp	x25, x26, [sp, #64]
    f0f8:	ldp	x27, x28, [sp, #80]
    f0fc:	ldp	x29, x30, [sp], #112
    f100:	ret
    f104:	mov	x19, x20
    f108:	cmp	x21, x19
    f10c:	b.eq	f0d8 <elf_update@@ELFUTILS_1.0+0x1580>  // b.none
    f110:	mov	w0, #0x14                  	// #20
    f114:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    f118:	mov	w0, #0x1                   	// #1
    f11c:	ldp	x19, x20, [sp, #16]
    f120:	ldp	x21, x22, [sp, #32]
    f124:	ldp	x23, x24, [sp, #48]
    f128:	ldp	x25, x26, [sp, #64]
    f12c:	ldp	x27, x28, [sp, #80]
    f130:	ldp	x29, x30, [sp], #112
    f134:	ret
    f138:	csel	x19, x0, x20, ne  // ne = any
    f13c:	b	f0d0 <elf_update@@ELFUTILS_1.0+0x1578>
    f140:	adrp	x1, 2b000 <elf_compress_gnu@@ELFUTILS_1.7+0x161b8>
    f144:	sub	x2, x19, x26
    f148:	add	x0, x3, x26
    f14c:	str	x4, [sp, #104]
    f150:	ldr	w1, [x1, #440]
    f154:	mov	x26, x19
    f158:	bl	3100 <memset@plt>
    f15c:	ldr	x4, [sp, #104]
    f160:	str	x19, [x4]
    f164:	b	f048 <elf_update@@ELFUTILS_1.0+0x14f0>
    f168:	stp	x29, x30, [sp, #-208]!
    f16c:	mov	x29, sp
    f170:	stp	x27, x28, [sp, #80]
    f174:	mov	x27, x0
    f178:	ldr	w0, [x0, #56]
    f17c:	str	x2, [sp, #128]
    f180:	ldr	x2, [x27, #72]
    f184:	stp	x19, x20, [sp, #16]
    f188:	stp	x21, x22, [sp, #32]
    f18c:	mov	w21, w1
    f190:	ldr	w1, [x27, #116]
    f194:	str	x2, [sp, #120]
    f198:	orr	w0, w1, w0
    f19c:	tbz	w0, #0, f6bc <elf_update@@ELFUTILS_1.0+0x1b64>
    f1a0:	adrp	x0, 15000 <elf_compress_gnu@@ELFUTILS_1.7+0x1b8>
    f1a4:	ldr	x2, [x0, #2424]
    f1a8:	cmp	x2, #0x34
    f1ac:	b.ne	fac8 <elf_update@@ELFUTILS_1.0+0x1f70>  // b.any
    f1b0:	ldr	x0, [x27]
    f1b4:	ldr	x3, [x27, #40]
    f1b8:	add	x0, x0, x3
    f1bc:	cbnz	w21, f8f4 <elf_update@@ELFUTILS_1.0+0x1d9c>
    f1c0:	ldr	x2, [sp, #120]
    f1c4:	cmp	x2, x0
    f1c8:	b.eq	f1f4 <elf_update@@ELFUTILS_1.0+0x169c>  // b.none
    f1cc:	mov	x1, x2
    f1d0:	ldp	x2, x3, [x2]
    f1d4:	stp	x2, x3, [x0]
    f1d8:	ldp	x2, x3, [x1, #16]
    f1dc:	stp	x2, x3, [x0, #16]
    f1e0:	ldp	x2, x3, [x1, #32]
    f1e4:	stp	x2, x3, [x0, #32]
    f1e8:	ldr	w1, [x1, #48]
    f1ec:	str	w1, [x0, #48]
    f1f0:	ldr	w1, [x27, #116]
    f1f4:	ldr	x0, [x27, #88]
    f1f8:	and	w1, w1, #0xfffffffe
    f1fc:	str	w1, [x27, #116]
    f200:	cmp	x0, #0x0
    f204:	cset	w20, eq  // eq = none
    f208:	add	x1, sp, #0xc0
    f20c:	mov	x0, x27
    f210:	bl	13338 <gelf_update_verdaux@@ELFUTILS_1.0+0x88>
    f214:	str	w0, [sp, #184]
    f218:	cbnz	w0, f8b8 <elf_update@@ELFUTILS_1.0+0x1d60>
    f21c:	adrp	x19, 15000 <elf_compress_gnu@@ELFUTILS_1.7+0x1b8>
    f220:	add	x0, x19, #0x960
    f224:	ldr	x1, [x27, #88]
    f228:	ldr	x3, [x0, #48]
    f22c:	str	x3, [sp, #152]
    f230:	cbz	x1, f290 <elf_update@@ELFUTILS_1.0+0x1738>
    f234:	ldr	w2, [x27, #56]
    f238:	ldr	w0, [x27, #120]
    f23c:	orr	w0, w0, w2
    f240:	tbz	w0, #0, f290 <elf_update@@ELFUTILS_1.0+0x1738>
    f244:	cmp	x3, #0x20
    f248:	b.ne	faf0 <elf_update@@ELFUTILS_1.0+0x1f98>  // b.any
    f24c:	ldr	x0, [sp, #120]
    f250:	ldr	x3, [x27, #40]
    f254:	ldrh	w4, [x0, #40]
    f258:	ldr	w2, [x0, #28]
    f25c:	ldr	x0, [x27]
    f260:	cmp	w2, w4
    f264:	b.hi	f8c4 <elf_update@@ELFUTILS_1.0+0x1d6c>  // b.pmore
    f268:	add	x2, x3, w2, uxtw
    f26c:	ldr	x3, [sp, #192]
    f270:	add	x0, x0, x2
    f274:	lsl	x2, x3, #5
    f278:	cbnz	w21, f998 <elf_update@@ELFUTILS_1.0+0x1e40>
    f27c:	bl	3030 <memmove@plt>
    f280:	ldr	w0, [x27, #120]
    f284:	mov	w20, #0x1                   	// #1
    f288:	and	w0, w0, #0xfffffffe
    f28c:	str	w0, [x27, #120]
    f290:	ldr	x0, [x27]
    f294:	str	x0, [sp, #136]
    f298:	ldr	x1, [sp, #128]
    f29c:	ldr	x0, [x27, #40]
    f2a0:	str	x0, [sp, #104]
    f2a4:	cbz	x1, f650 <elf_update@@ELFUTILS_1.0+0x1af8>
    f2a8:	mov	x0, #0x1fffffffffffffff    	// #2305843009213693951
    f2ac:	cmp	x1, x0
    f2b0:	b.hi	f910 <elf_update@@ELFUTILS_1.0+0x1db8>  // b.pmore
    f2b4:	stp	x23, x24, [sp, #48]
    f2b8:	lsl	x24, x1, #3
    f2bc:	add	x19, x19, #0x960
    f2c0:	ldr	x1, [sp, #120]
    f2c4:	mov	x0, x24
    f2c8:	add	x28, x27, #0xc8
    f2cc:	ldr	w1, [x1, #28]
    f2d0:	str	w1, [sp, #160]
    f2d4:	ldr	x1, [sp, #192]
    f2d8:	str	x1, [sp, #176]
    f2dc:	ldr	x1, [x19, #24]
    f2e0:	str	x1, [sp, #168]
    f2e4:	bl	30c0 <malloc@plt>
    f2e8:	str	x0, [sp, #144]
    f2ec:	cbz	x0, f8a0 <elf_update@@ELFUTILS_1.0+0x1d48>
    f2f0:	ldr	x1, [sp, #120]
    f2f4:	stp	x25, x26, [sp, #64]
    f2f8:	ldr	w19, [x1, #32]
    f2fc:	ldrh	w1, [x1, #46]
    f300:	str	w1, [sp, #188]
    f304:	ldr	x1, [sp, #104]
    f308:	add	x19, x19, x1
    f30c:	ldr	x1, [sp, #136]
    f310:	add	x19, x1, x19
    f314:	nop
    f318:	ldr	w2, [x28]
    f31c:	cbz	x2, f338 <elf_update@@ELFUTILS_1.0+0x17e0>
    f320:	add	x2, x0, x2, lsl #3
    f324:	add	x1, x28, #0x10
    f328:	str	x1, [x0], #8
    f32c:	add	x1, x1, #0xd0
    f330:	cmp	x0, x2
    f334:	b.ne	f328 <elf_update@@ELFUTILS_1.0+0x17d0>  // b.any
    f338:	ldr	x28, [x28, #8]
    f33c:	cbnz	x28, f318 <elf_update@@ELFUTILS_1.0+0x17c0>
    f340:	ldr	x22, [sp, #144]
    f344:	adrp	x3, e000 <elf_update@@ELFUTILS_1.0+0x4a8>
    f348:	mov	x2, #0x8                   	// #8
    f34c:	add	x3, x3, #0xf98
    f350:	sub	x0, x0, x22
    f354:	mov	x23, x22
    f358:	asr	x1, x0, #3
    f35c:	mov	x0, x22
    f360:	bl	30b0 <qsort@plt>
    f364:	mov	x0, x22
    f368:	add	x1, x24, x22
    f36c:	str	x1, [sp, #96]
    f370:	str	x0, [sp, #112]
    f374:	ldr	x22, [x27, #40]
    f378:	b	f38c <elf_update@@ELFUTILS_1.0+0x1834>
    f37c:	ldr	x0, [sp, #96]
    f380:	add	x23, x23, #0x8
    f384:	cmp	x0, x23
    f388:	b.eq	f47c <elf_update@@ELFUTILS_1.0+0x1924>  // b.none
    f38c:	ldr	w0, [x27, #124]
    f390:	ldr	x24, [x23]
    f394:	cbnz	w0, f408 <elf_update@@ELFUTILS_1.0+0x18b0>
    f398:	ldr	w0, [x24, #152]
    f39c:	tbnz	w0, #7, f408 <elf_update@@ELFUTILS_1.0+0x18b0>
    f3a0:	ldr	x0, [x24, #128]
    f3a4:	ldr	x25, [x24, #144]
    f3a8:	add	x0, x0, x0, lsl #2
    f3ac:	add	x0, x19, x0, lsl #3
    f3b0:	cmp	x25, x0
    f3b4:	b.eq	f408 <elf_update@@ELFUTILS_1.0+0x18b0>  // b.none
    f3b8:	ldr	x0, [x27]
    f3bc:	add	x2, x0, x22
    f3c0:	cmp	x25, x2
    f3c4:	b.ls	fb38 <elf_update@@ELFUTILS_1.0+0x1fe0>  // b.plast
    f3c8:	ldr	x2, [x27, #48]
    f3cc:	add	x2, x22, x2
    f3d0:	add	x0, x0, x2
    f3d4:	cmp	x25, x0
    f3d8:	b.cs	fb58 <elf_update@@ELFUTILS_1.0+0x2000>  // b.hs, b.nlast
    f3dc:	mov	x0, #0x28                  	// #40
    f3e0:	bl	30c0 <malloc@plt>
    f3e4:	cbz	x0, f6c4 <elf_update@@ELFUTILS_1.0+0x1b6c>
    f3e8:	ldp	x8, x9, [x25]
    f3ec:	stp	x8, x9, [x0]
    f3f0:	ldp	x8, x9, [x25, #16]
    f3f4:	stp	x8, x9, [x0, #16]
    f3f8:	ldr	x1, [x25, #32]
    f3fc:	str	x1, [x0, #32]
    f400:	str	x0, [x24, #144]
    f404:	nop
    f408:	ldr	x0, [x27]
    f40c:	ldr	x25, [x24]
    f410:	add	x2, x0, x22
    f414:	cmp	x25, x2
    f418:	b.cc	f37c <elf_update@@ELFUTILS_1.0+0x1824>  // b.lo, b.ul, b.last
    f41c:	ldr	x2, [x27, #48]
    f420:	add	x2, x22, x2
    f424:	add	x2, x0, x2
    f428:	cmp	x25, x2
    f42c:	b.cs	f37c <elf_update@@ELFUTILS_1.0+0x1824>  // b.hs, b.nlast
    f430:	ldr	x2, [x24, #144]
    f434:	ldr	w2, [x2, #16]
    f438:	add	x2, x2, x22
    f43c:	add	x0, x0, x2
    f440:	cmp	x25, x0
    f444:	b.cs	f37c <elf_update@@ELFUTILS_1.0+0x1824>  // b.hs, b.nlast
    f448:	ldr	x26, [x24, #16]
    f44c:	mov	x0, x26
    f450:	bl	30c0 <malloc@plt>
    f454:	cbz	x0, f6c4 <elf_update@@ELFUTILS_1.0+0x1b6c>
    f458:	mov	x2, x26
    f45c:	mov	x1, x25
    f460:	bl	3020 <memcpy@plt>
    f464:	str	x0, [x24]
    f468:	str	x0, [x24, #168]
    f46c:	add	x23, x23, #0x8
    f470:	ldr	x0, [sp, #96]
    f474:	cmp	x0, x23
    f478:	b.ne	f38c <elf_update@@ELFUTILS_1.0+0x1834>  // b.any
    f47c:	ldp	x2, x3, [sp, #168]
    f480:	ldr	x5, [sp, #104]
    f484:	ldr	x4, [sp, #152]
    f488:	ldrh	w1, [sp, #188]
    f48c:	ldr	w0, [sp, #160]
    f490:	madd	x22, x3, x4, x5
    f494:	ldr	x3, [sp, #128]
    f498:	cmp	x0, x2
    f49c:	csel	x0, x0, x2, cs  // cs = hs, nlast
    f4a0:	adrp	x2, 15000 <elf_compress_gnu@@ELFUTILS_1.7+0x1b8>
    f4a4:	add	x0, x22, x0
    f4a8:	madd	x1, x1, x3, x19
    f4ac:	str	x1, [sp, #104]
    f4b0:	ldr	x1, [sp, #136]
    f4b4:	ldr	x22, [sp, #144]
    f4b8:	add	x0, x1, x0
    f4bc:	add	x1, x2, #0xed0
    f4c0:	str	x1, [sp, #152]
    f4c4:	add	x1, sp, #0xc8
    f4c8:	str	x1, [sp, #160]
    f4cc:	b	f4e8 <elf_update@@ELFUTILS_1.0+0x1990>
    f4d0:	ldr	w1, [x28, #156]
    f4d4:	tbnz	w1, #0, fb18 <elf_update@@ELFUTILS_1.0+0x1fc0>
    f4d8:	ldr	x1, [sp, #96]
    f4dc:	add	x22, x22, #0x8
    f4e0:	cmp	x1, x22
    f4e4:	b.eq	f554 <elf_update@@ELFUTILS_1.0+0x19fc>  // b.none
    f4e8:	ldr	x28, [x22]
    f4ec:	ldr	x1, [x28, #128]
    f4f0:	cbz	x1, f4d0 <elf_update@@ELFUTILS_1.0+0x1978>
    f4f4:	ldr	x25, [x28, #144]
    f4f8:	ldr	w1, [x25, #4]
    f4fc:	cmp	w1, #0x8
    f500:	b.eq	f538 <elf_update@@ELFUTILS_1.0+0x19e0>  // b.none
    f504:	ldr	x3, [x27, #40]
    f508:	ldr	x2, [x28, #64]
    f50c:	ldr	w1, [x25, #16]
    f510:	ldr	x5, [x27]
    f514:	add	x1, x1, x3
    f518:	add	x26, x5, x1
    f51c:	cbnz	x2, f6fc <elf_update@@ELFUTILS_1.0+0x1ba4>
    f520:	cmp	w20, #0x0
    f524:	ccmp	x26, x0, #0x0, ne  // ne = any
    f528:	b.hi	f844 <elf_update@@ELFUTILS_1.0+0x1cec>  // b.pmore
    f52c:	ldr	w0, [x25, #20]
    f530:	mov	w20, #0x0                   	// #0
    f534:	add	x0, x26, x0
    f538:	ldr	w1, [x28, #156]
    f53c:	add	x22, x22, #0x8
    f540:	and	w1, w1, #0xfffffffe
    f544:	str	w1, [x28, #156]
    f548:	ldr	x1, [sp, #96]
    f54c:	cmp	x1, x22
    f550:	b.ne	f4e8 <elf_update@@ELFUTILS_1.0+0x1990>  // b.any
    f554:	ldr	w1, [x27, #56]
    f558:	tbz	w1, #0, f57c <elf_update@@ELFUTILS_1.0+0x1a24>
    f55c:	ldr	x2, [sp, #120]
    f560:	ldr	x4, [x27, #40]
    f564:	ldr	w3, [x2, #32]
    f568:	ldr	x2, [x27]
    f56c:	add	x3, x3, x4
    f570:	add	x2, x2, x3
    f574:	cmp	x2, x0
    f578:	b.hi	f980 <elf_update@@ELFUTILS_1.0+0x1e28>  // b.pmore
    f57c:	adrp	x22, 2a000 <elf_compress_gnu@@ELFUTILS_1.7+0x151b8>
    f580:	add	x22, x22, #0xbd0
    f584:	ldr	x0, [sp, #112]
    f588:	b	f590 <elf_update@@ELFUTILS_1.0+0x1a38>
    f58c:	ldr	w1, [x27, #56]
    f590:	ldr	x20, [x0]
    f594:	ldr	w0, [x20, #152]
    f598:	orr	w1, w1, w0
    f59c:	tbz	w1, #0, f618 <elf_update@@ELFUTILS_1.0+0x1ac0>
    f5a0:	ldr	x0, [x20, #128]
    f5a4:	ldr	x1, [x20, #144]
    f5a8:	add	x0, x0, x0, lsl #2
    f5ac:	add	x0, x19, x0, lsl #3
    f5b0:	cbnz	w21, f91c <elf_update@@ELFUTILS_1.0+0x1dc4>
    f5b4:	ldp	x2, x3, [x1]
    f5b8:	stp	x2, x3, [x0]
    f5bc:	ldp	x2, x3, [x1, #16]
    f5c0:	stp	x2, x3, [x0, #16]
    f5c4:	ldr	x1, [x1, #32]
    f5c8:	str	x1, [x0, #32]
    f5cc:	ldr	w1, [x20, #152]
    f5d0:	ldr	w2, [x27, #124]
    f5d4:	and	w0, w1, #0x80
    f5d8:	orr	w0, w0, w2
    f5dc:	cbnz	w0, f610 <elf_update@@ELFUTILS_1.0+0x1ab8>
    f5e0:	ldr	x2, [x20, #128]
    f5e4:	ldr	x0, [x20, #144]
    f5e8:	add	x2, x2, x2, lsl #2
    f5ec:	add	x2, x19, x2, lsl #3
    f5f0:	cmp	x0, x2
    f5f4:	b.eq	f610 <elf_update@@ELFUTILS_1.0+0x1ab8>  // b.none
    f5f8:	bl	3200 <free@plt>
    f5fc:	ldr	x0, [x20, #128]
    f600:	ldr	w1, [x20, #152]
    f604:	add	x0, x0, x0, lsl #2
    f608:	add	x0, x19, x0, lsl #3
    f60c:	str	x0, [x20, #144]
    f610:	and	w1, w1, #0xfffffffe
    f614:	str	w1, [x20, #152]
    f618:	ldr	x0, [sp, #112]
    f61c:	ldr	x1, [sp, #96]
    f620:	add	x0, x0, #0x8
    f624:	str	x0, [sp, #112]
    f628:	cmp	x1, x0
    f62c:	b.ne	f58c <elf_update@@ELFUTILS_1.0+0x1a34>  // b.any
    f630:	ldr	x0, [sp, #144]
    f634:	bl	3200 <free@plt>
    f638:	ldp	x23, x24, [sp, #48]
    f63c:	ldp	x25, x26, [sp, #64]
    f640:	ldr	x0, [x27]
    f644:	str	x0, [sp, #136]
    f648:	ldr	x0, [x27, #40]
    f64c:	str	x0, [sp, #104]
    f650:	ldr	w1, [x27, #56]
    f654:	mov	w0, #0x1e                  	// #30
    f658:	and	w1, w1, #0xfffffffe
    f65c:	str	w1, [x27, #56]
    f660:	bl	32d0 <sysconf@plt>
    f664:	neg	x0, x0
    f668:	ldp	x2, x5, [sp, #120]
    f66c:	ldr	x3, [sp, #104]
    f670:	ldr	x1, [x27, #40]
    f674:	and	x0, x0, x3
    f678:	ldr	w4, [x2, #32]
    f67c:	ldrh	w3, [x2, #46]
    f680:	add	x4, x4, x1
    f684:	ldr	x1, [x27]
    f688:	madd	x3, x3, x5, x4
    f68c:	ldr	x2, [sp, #136]
    f690:	add	x1, x1, x3
    f694:	add	x0, x2, x0
    f698:	mov	w2, #0x4                   	// #4
    f69c:	sub	x1, x1, x0
    f6a0:	bl	3040 <msync@plt>
    f6a4:	ldr	w0, [sp, #184]
    f6a8:	ldp	x19, x20, [sp, #16]
    f6ac:	ldp	x21, x22, [sp, #32]
    f6b0:	ldp	x27, x28, [sp, #80]
    f6b4:	ldp	x29, x30, [sp], #208
    f6b8:	ret
    f6bc:	mov	w20, #0x0                   	// #0
    f6c0:	b	f208 <elf_update@@ELFUTILS_1.0+0x16b0>
    f6c4:	ldr	x0, [sp, #144]
    f6c8:	bl	3200 <free@plt>
    f6cc:	mov	w1, #0xffffffff            	// #-1
    f6d0:	mov	w0, #0x8                   	// #8
    f6d4:	str	w1, [sp, #184]
    f6d8:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    f6dc:	ldr	w0, [sp, #184]
    f6e0:	ldp	x19, x20, [sp, #16]
    f6e4:	ldp	x21, x22, [sp, #32]
    f6e8:	ldp	x23, x24, [sp, #48]
    f6ec:	ldp	x25, x26, [sp, #64]
    f6f0:	ldp	x27, x28, [sp, #80]
    f6f4:	ldp	x29, x30, [sp], #208
    f6f8:	ret
    f6fc:	adrp	x1, 2a000 <elf_compress_gnu@@ELFUTILS_1.7+0x151b8>
    f700:	mov	x24, x28
    f704:	add	x1, x1, #0xbd0
    f708:	mov	w20, #0x0                   	// #0
    f70c:	str	x1, [sp, #136]
    f710:	b	f734 <elf_update@@ELFUTILS_1.0+0x1bdc>
    f714:	mov	x0, x23
    f718:	mov	w20, #0x1                   	// #1
    f71c:	cbnz	w21, f81c <elf_update@@ELFUTILS_1.0+0x1cc4>
    f720:	cbnz	x2, f828 <elf_update@@ELFUTILS_1.0+0x1cd0>
    f724:	and	w1, w1, #0xfffffffe
    f728:	str	w1, [x24, #56]
    f72c:	ldr	x24, [x24, #48]
    f730:	cbz	x24, f538 <elf_update@@ELFUTILS_1.0+0x19e0>
    f734:	ldr	x1, [x24, #24]
    f738:	tbnz	x1, #63, f9ac <elf_update@@ELFUTILS_1.0+0x1e54>
    f73c:	ldr	w3, [x25, #20]
    f740:	mov	x10, x1
    f744:	cmp	x1, x3
    f748:	b.hi	f9ec <elf_update@@ELFUTILS_1.0+0x1e94>  // b.pmore
    f74c:	ldr	x2, [x24, #16]
    f750:	sub	x1, x3, x1
    f754:	cmp	x2, x1
    f758:	b.hi	fa0c <elf_update@@ELFUTILS_1.0+0x1eb4>  // b.pmore
    f75c:	add	x23, x26, x10
    f760:	cmp	x23, x0
    f764:	b.ls	f7ac <elf_update@@ELFUTILS_1.0+0x1c54>  // b.plast
    f768:	cbz	x10, f784 <elf_update@@ELFUTILS_1.0+0x1c2c>
    f76c:	ldr	w11, [x27, #56]
    f770:	ldr	w1, [x28, #156]
    f774:	ldr	w3, [x24, #56]
    f778:	orr	w1, w1, w11
    f77c:	orr	w1, w1, w3
    f780:	tbz	w1, #0, f7c4 <elf_update@@ELFUTILS_1.0+0x1c6c>
    f784:	cmp	x0, x19
    f788:	b.cs	f7f4 <elf_update@@ELFUTILS_1.0+0x1c9c>  // b.hs, b.nlast
    f78c:	cmp	x23, x19
    f790:	adrp	x1, 2b000 <elf_compress_gnu@@ELFUTILS_1.7+0x161b8>
    f794:	b.cs	f7e0 <elf_update@@ELFUTILS_1.0+0x1c88>  // b.hs, b.nlast
    f798:	ldr	w1, [x1, #440]
    f79c:	sub	x2, x23, x0
    f7a0:	bl	3100 <memset@plt>
    f7a4:	ldp	x2, x10, [x24, #16]
    f7a8:	add	x23, x26, x10
    f7ac:	ldr	w3, [x27, #56]
    f7b0:	ldr	w0, [x28, #156]
    f7b4:	ldr	w1, [x24, #56]
    f7b8:	orr	w0, w0, w3
    f7bc:	orr	w0, w0, w1
    f7c0:	tbnz	w0, #0, f714 <elf_update@@ELFUTILS_1.0+0x1bbc>
    f7c4:	add	x0, x23, x2
    f7c8:	add	x2, x2, x10
    f7cc:	add	x2, x26, x2
    f7d0:	cmp	x0, x2
    f7d4:	b.ne	f9cc <elf_update@@ELFUTILS_1.0+0x1e74>  // b.any
    f7d8:	ldr	w1, [x24, #56]
    f7dc:	b	f724 <elf_update@@ELFUTILS_1.0+0x1bcc>
    f7e0:	ldr	w1, [x1, #440]
    f7e4:	sub	x2, x19, x0
    f7e8:	bl	3100 <memset@plt>
    f7ec:	cmp	x23, x19
    f7f0:	b.eq	f7a4 <elf_update@@ELFUTILS_1.0+0x1c4c>  // b.none
    f7f4:	ldr	x0, [sp, #104]
    f7f8:	cmp	x23, x0
    f7fc:	b.ls	f7a4 <elf_update@@ELFUTILS_1.0+0x1c4c>  // b.plast
    f800:	adrp	x1, 2b000 <elf_compress_gnu@@ELFUTILS_1.7+0x161b8>
    f804:	cmp	x0, x26
    f808:	csel	x0, x0, x26, cs  // cs = hs, nlast
    f80c:	ldr	w1, [x1, #440]
    f810:	sub	x2, x23, x0
    f814:	bl	3100 <memset@plt>
    f818:	b	f7a4 <elf_update@@ELFUTILS_1.0+0x1c4c>
    f81c:	cbz	x2, f724 <elf_update@@ELFUTILS_1.0+0x1bcc>
    f820:	ldr	w0, [x24, #8]
    f824:	cbnz	w0, f930 <elf_update@@ELFUTILS_1.0+0x1dd8>
    f828:	ldr	x1, [x24]
    f82c:	mov	x0, x23
    f830:	mov	w20, #0x1                   	// #1
    f834:	bl	3030 <memmove@plt>
    f838:	ldp	x2, x10, [x24, #16]
    f83c:	add	x0, x23, x2
    f840:	b	f7c8 <elf_update@@ELFUTILS_1.0+0x1c70>
    f844:	cmp	x19, x0
    f848:	b.ls	f87c <elf_update@@ELFUTILS_1.0+0x1d24>  // b.plast
    f84c:	cmp	x19, x26
    f850:	adrp	x1, 2b000 <elf_compress_gnu@@ELFUTILS_1.7+0x161b8>
    f854:	b.ls	f868 <elf_update@@ELFUTILS_1.0+0x1d10>  // b.plast
    f858:	ldr	w1, [x1, #440]
    f85c:	sub	x2, x26, x0
    f860:	bl	3100 <memset@plt>
    f864:	b	f52c <elf_update@@ELFUTILS_1.0+0x19d4>
    f868:	ldr	w1, [x1, #440]
    f86c:	sub	x2, x19, x0
    f870:	bl	3100 <memset@plt>
    f874:	cmp	x19, x26
    f878:	b.eq	f52c <elf_update@@ELFUTILS_1.0+0x19d4>  // b.none
    f87c:	ldr	x0, [sp, #104]
    f880:	cmp	x0, x26
    f884:	b.cs	f52c <elf_update@@ELFUTILS_1.0+0x19d4>  // b.hs, b.nlast
    f888:	adrp	x1, 2b000 <elf_compress_gnu@@ELFUTILS_1.7+0x161b8>
    f88c:	mov	x0, x26
    f890:	mov	x2, #0x0                   	// #0
    f894:	ldr	w1, [x1, #440]
    f898:	bl	3100 <memset@plt>
    f89c:	b	f52c <elf_update@@ELFUTILS_1.0+0x19d4>
    f8a0:	mov	w1, #0xffffffff            	// #-1
    f8a4:	mov	w0, #0x8                   	// #8
    f8a8:	str	w1, [sp, #184]
    f8ac:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    f8b0:	ldp	x23, x24, [sp, #48]
    f8b4:	b	f6a4 <elf_update@@ELFUTILS_1.0+0x1b4c>
    f8b8:	mov	w0, #0xffffffff            	// #-1
    f8bc:	str	w0, [sp, #184]
    f8c0:	b	f6a4 <elf_update@@ELFUTILS_1.0+0x1b4c>
    f8c4:	adrp	x1, 2b000 <elf_compress_gnu@@ELFUTILS_1.7+0x161b8>
    f8c8:	add	x3, x3, w4, uxth
    f8cc:	add	x0, x0, x3
    f8d0:	sub	w2, w2, w4
    f8d4:	ldr	w1, [x1, #440]
    f8d8:	bl	3100 <memset@plt>
    f8dc:	ldr	x0, [sp, #120]
    f8e0:	ldr	x3, [x27, #40]
    f8e4:	ldr	w2, [x0, #28]
    f8e8:	ldr	x0, [x27]
    f8ec:	ldr	x1, [x27, #88]
    f8f0:	b	f268 <elf_update@@ELFUTILS_1.0+0x1710>
    f8f4:	adrp	x1, 2a000 <elf_compress_gnu@@ELFUTILS_1.7+0x151b8>
    f8f8:	mov	w3, #0x1                   	// #1
    f8fc:	ldr	x4, [x1, #3048]
    f900:	ldr	x1, [sp, #120]
    f904:	blr	x4
    f908:	ldr	w1, [x27, #116]
    f90c:	b	f1f4 <elf_update@@ELFUTILS_1.0+0x169c>
    f910:	mov	w0, #0x1                   	// #1
    f914:	str	w0, [sp, #184]
    f918:	b	f6a4 <elf_update@@ELFUTILS_1.0+0x1b4c>
    f91c:	ldr	x4, [x22, #72]
    f920:	mov	w3, #0x1                   	// #1
    f924:	mov	x2, #0x28                  	// #40
    f928:	blr	x4
    f92c:	b	f5cc <elf_update@@ELFUTILS_1.0+0x1a74>
    f930:	ldr	x1, [sp, #152]
    f934:	mov	w4, w0
    f938:	str	x4, [sp, #168]
    f93c:	ldrb	w3, [x1, w0, uxtw]
    f940:	cmp	w3, #0x0
    f944:	csel	w1, w20, w3, eq  // eq = none
    f948:	and	x1, x1, #0xff
    f94c:	sub	x0, x1, #0x1
    f950:	tst	x23, x0
    f954:	b.ne	fa2c <elf_update@@ELFUTILS_1.0+0x1ed4>  // b.any
    f958:	ldr	x0, [sp, #136]
    f95c:	mov	w3, w20
    f960:	ldr	x1, [x24]
    f964:	ldr	x10, [x0, x4, lsl #3]
    f968:	mov	x0, x23
    f96c:	blr	x10
    f970:	ldp	x2, x10, [x24, #16]
    f974:	mov	w20, #0x1                   	// #1
    f978:	add	x0, x23, x2
    f97c:	b	f7c8 <elf_update@@ELFUTILS_1.0+0x1c70>
    f980:	adrp	x1, 2b000 <elf_compress_gnu@@ELFUTILS_1.7+0x161b8>
    f984:	sub	x2, x2, x0
    f988:	ldr	w1, [x1, #440]
    f98c:	bl	3100 <memset@plt>
    f990:	ldr	w1, [x27, #56]
    f994:	b	f57c <elf_update@@ELFUTILS_1.0+0x1a24>
    f998:	adrp	x3, 2a000 <elf_compress_gnu@@ELFUTILS_1.7+0x151b8>
    f99c:	ldr	x4, [x3, #3072]
    f9a0:	mov	w3, #0x1                   	// #1
    f9a4:	blr	x4
    f9a8:	b	f280 <elf_update@@ELFUTILS_1.0+0x1728>
    f9ac:	adrp	x3, 16000 <elf_compress_gnu@@ELFUTILS_1.7+0x11b8>
    f9b0:	adrp	x1, 16000 <elf_compress_gnu@@ELFUTILS_1.7+0x11b8>
    f9b4:	adrp	x0, 16000 <elf_compress_gnu@@ELFUTILS_1.7+0x11b8>
    f9b8:	add	x3, x3, #0x288
    f9bc:	add	x1, x1, #0x10
    f9c0:	add	x0, x0, #0x1b0
    f9c4:	mov	w2, #0x13f                 	// #319
    f9c8:	bl	3330 <__assert_fail@plt>
    f9cc:	adrp	x3, 16000 <elf_compress_gnu@@ELFUTILS_1.7+0x11b8>
    f9d0:	adrp	x1, 16000 <elf_compress_gnu@@ELFUTILS_1.7+0x11b8>
    f9d4:	adrp	x0, 16000 <elf_compress_gnu@@ELFUTILS_1.7+0x11b8>
    f9d8:	add	x3, x3, #0x288
    f9dc:	add	x1, x1, #0x10
    f9e0:	add	x0, x0, #0x240
    f9e4:	mov	w2, #0x197                 	// #407
    f9e8:	bl	3330 <__assert_fail@plt>
    f9ec:	adrp	x3, 16000 <elf_compress_gnu@@ELFUTILS_1.7+0x11b8>
    f9f0:	adrp	x1, 16000 <elf_compress_gnu@@ELFUTILS_1.7+0x11b8>
    f9f4:	adrp	x0, 16000 <elf_compress_gnu@@ELFUTILS_1.7+0x11b8>
    f9f8:	add	x3, x3, #0x288
    f9fc:	add	x1, x1, #0x10
    fa00:	add	x0, x0, #0x1c8
    fa04:	mov	w2, #0x140                 	// #320
    fa08:	bl	3330 <__assert_fail@plt>
    fa0c:	adrp	x3, 16000 <elf_compress_gnu@@ELFUTILS_1.7+0x11b8>
    fa10:	adrp	x1, 16000 <elf_compress_gnu@@ELFUTILS_1.7+0x11b8>
    fa14:	adrp	x0, 16000 <elf_compress_gnu@@ELFUTILS_1.7+0x11b8>
    fa18:	add	x3, x3, #0x288
    fa1c:	add	x1, x1, #0x10
    fa20:	add	x0, x0, #0x1f8
    fa24:	mov	w2, #0x141                 	// #321
    fa28:	bl	3330 <__assert_fail@plt>
    fa2c:	cmp	w3, #0x7
    fa30:	b.hi	fa88 <elf_update@@ELFUTILS_1.0+0x1f30>  // b.pmore
    fa34:	mov	x0, x2
    fa38:	str	x2, [sp, #176]
    fa3c:	bl	30c0 <malloc@plt>
    fa40:	mov	x20, x0
    fa44:	ldr	x2, [sp, #176]
    fa48:	cbz	x20, fa9c <elf_update@@ELFUTILS_1.0+0x1f44>
    fa4c:	ldr	x0, [sp, #136]
    fa50:	mov	w3, #0x1                   	// #1
    fa54:	ldr	x1, [sp, #168]
    fa58:	str	x2, [sp, #168]
    fa5c:	ldr	x10, [x0, x1, lsl #3]
    fa60:	mov	x0, x20
    fa64:	ldr	x1, [x24]
    fa68:	blr	x10
    fa6c:	ldr	x2, [sp, #168]
    fa70:	mov	x1, x20
    fa74:	mov	x0, x23
    fa78:	bl	3020 <memcpy@plt>
    fa7c:	mov	x0, x20
    fa80:	bl	3200 <free@plt>
    fa84:	b	f970 <elf_update@@ELFUTILS_1.0+0x1e18>
    fa88:	ldr	x0, [sp, #160]
    fa8c:	str	x2, [sp, #176]
    fa90:	bl	3130 <posix_memalign@plt>
    fa94:	ldr	x2, [sp, #176]
    fa98:	cbz	w0, fac0 <elf_update@@ELFUTILS_1.0+0x1f68>
    fa9c:	ldr	x0, [sp, #144]
    faa0:	bl	3200 <free@plt>
    faa4:	mov	w1, #0x1                   	// #1
    faa8:	mov	w0, #0x8                   	// #8
    faac:	str	w1, [sp, #184]
    fab0:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    fab4:	ldp	x23, x24, [sp, #48]
    fab8:	ldp	x25, x26, [sp, #64]
    fabc:	b	f6a4 <elf_update@@ELFUTILS_1.0+0x1b4c>
    fac0:	ldr	x20, [sp, #200]
    fac4:	b	fa48 <elf_update@@ELFUTILS_1.0+0x1ef0>
    fac8:	adrp	x3, 16000 <elf_compress_gnu@@ELFUTILS_1.7+0x11b8>
    facc:	adrp	x1, 16000 <elf_compress_gnu@@ELFUTILS_1.7+0x11b8>
    fad0:	adrp	x0, 16000 <elf_compress_gnu@@ELFUTILS_1.7+0x11b8>
    fad4:	add	x3, x3, #0x288
    fad8:	add	x1, x1, #0x10
    fadc:	add	x0, x0, #0x28
    fae0:	mov	w2, #0x8c                  	// #140
    fae4:	stp	x23, x24, [sp, #48]
    fae8:	stp	x25, x26, [sp, #64]
    faec:	bl	3330 <__assert_fail@plt>
    faf0:	adrp	x3, 16000 <elf_compress_gnu@@ELFUTILS_1.7+0x11b8>
    faf4:	adrp	x1, 16000 <elf_compress_gnu@@ELFUTILS_1.7+0x11b8>
    faf8:	adrp	x0, 16000 <elf_compress_gnu@@ELFUTILS_1.7+0x11b8>
    fafc:	add	x3, x3, #0x288
    fb00:	add	x1, x1, #0x10
    fb04:	add	x0, x0, #0x78
    fb08:	mov	w2, #0xaf                  	// #175
    fb0c:	stp	x23, x24, [sp, #48]
    fb10:	stp	x25, x26, [sp, #64]
    fb14:	bl	3330 <__assert_fail@plt>
    fb18:	adrp	x3, 16000 <elf_compress_gnu@@ELFUTILS_1.7+0x11b8>
    fb1c:	adrp	x1, 16000 <elf_compress_gnu@@ELFUTILS_1.7+0x11b8>
    fb20:	adrp	x0, 16000 <elf_compress_gnu@@ELFUTILS_1.7+0x11b8>
    fb24:	add	x3, x3, #0x288
    fb28:	add	x1, x1, #0x10
    fb2c:	add	x0, x0, #0x190
    fb30:	mov	w2, #0x12f                 	// #303
    fb34:	bl	3330 <__assert_fail@plt>
    fb38:	adrp	x3, 16000 <elf_compress_gnu@@ELFUTILS_1.7+0x11b8>
    fb3c:	adrp	x1, 16000 <elf_compress_gnu@@ELFUTILS_1.7+0x11b8>
    fb40:	adrp	x0, 16000 <elf_compress_gnu@@ELFUTILS_1.7+0x11b8>
    fb44:	add	x3, x3, #0x288
    fb48:	add	x1, x1, #0x10
    fb4c:	add	x0, x0, #0xc8
    fb50:	mov	w2, #0xf8                  	// #248
    fb54:	bl	3330 <__assert_fail@plt>
    fb58:	adrp	x3, 16000 <elf_compress_gnu@@ELFUTILS_1.7+0x11b8>
    fb5c:	adrp	x1, 16000 <elf_compress_gnu@@ELFUTILS_1.7+0x11b8>
    fb60:	adrp	x0, 16000 <elf_compress_gnu@@ELFUTILS_1.7+0x11b8>
    fb64:	add	x3, x3, #0x288
    fb68:	add	x1, x1, #0x10
    fb6c:	add	x0, x0, #0x120
    fb70:	mov	w2, #0xfa                  	// #250
    fb74:	bl	3330 <__assert_fail@plt>
    fb78:	mov	x12, #0x9100                	// #37120
    fb7c:	sub	sp, sp, x12
    fb80:	stp	x29, x30, [sp]
    fb84:	mov	x29, sp
    fb88:	stp	x19, x20, [sp, #16]
    fb8c:	mov	x19, x0
    fb90:	stp	x21, x22, [sp, #32]
    fb94:	str	w1, [sp, #128]
    fb98:	ldr	w1, [x0, #56]
    fb9c:	ldr	x22, [x0, #72]
    fba0:	stp	x23, x24, [sp, #48]
    fba4:	ldr	w0, [x0, #116]
    fba8:	stp	x25, x26, [sp, #64]
    fbac:	orr	w0, w0, w1
    fbb0:	and	w1, w0, #0x1
    fbb4:	str	w1, [sp, #148]
    fbb8:	str	x2, [sp, #152]
    fbbc:	str	xzr, [sp, #240]
    fbc0:	tbz	w0, #0, fc84 <elf_update@@ELFUTILS_1.0+0x212c>
    fbc4:	adrp	x0, 15000 <elf_compress_gnu@@ELFUTILS_1.7+0x1b8>
    fbc8:	str	x0, [sp, #112]
    fbcc:	add	x0, x0, #0x960
    fbd0:	ldr	x2, [x0, #24]
    fbd4:	cmp	x2, #0x34
    fbd8:	b.ne	10370 <elf_update@@ELFUTILS_1.0+0x2818>  // b.any
    fbdc:	ldr	w0, [sp, #128]
    fbe0:	mov	x21, x22
    fbe4:	cbnz	w0, 10398 <elf_update@@ELFUTILS_1.0+0x2840>
    fbe8:	ldr	w25, [x19, #36]
    fbec:	mov	x26, x21
    fbf0:	mov	x20, #0x0                   	// #0
    fbf4:	mov	x23, #0x34                  	// #52
    fbf8:	mov	x3, x20
    fbfc:	sub	x2, x23, x20
    fc00:	mov	x1, x26
    fc04:	mov	w0, w25
    fc08:	bl	3220 <pwrite@plt>
    fc0c:	cmn	x0, #0x1
    fc10:	b.eq	fc48 <elf_update@@ELFUTILS_1.0+0x20f0>  // b.none
    fc14:	cmp	x0, #0x0
    fc18:	b.le	fc58 <elf_update@@ELFUTILS_1.0+0x2100>
    fc1c:	add	x20, x20, x0
    fc20:	cmp	x20, #0x33
    fc24:	b.gt	1001c <elf_update@@ELFUTILS_1.0+0x24c4>
    fc28:	add	x26, x21, x20
    fc2c:	mov	x3, x20
    fc30:	sub	x2, x23, x20
    fc34:	mov	x1, x26
    fc38:	mov	w0, w25
    fc3c:	bl	3220 <pwrite@plt>
    fc40:	cmn	x0, #0x1
    fc44:	b.ne	fc14 <elf_update@@ELFUTILS_1.0+0x20bc>  // b.any
    fc48:	bl	3340 <__errno_location@plt>
    fc4c:	ldr	w0, [x0]
    fc50:	cmp	w0, #0x4
    fc54:	b.eq	fbf8 <elf_update@@ELFUTILS_1.0+0x20a0>  // b.none
    fc58:	mov	w0, #0x14                  	// #20
    fc5c:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    fc60:	ldr	w0, [sp, #148]
    fc64:	mov	x12, #0x9100                	// #37120
    fc68:	ldp	x29, x30, [sp]
    fc6c:	ldp	x19, x20, [sp, #16]
    fc70:	ldp	x21, x22, [sp, #32]
    fc74:	ldp	x23, x24, [sp, #48]
    fc78:	ldp	x25, x26, [sp, #64]
    fc7c:	add	sp, sp, x12
    fc80:	ret
    fc84:	adrp	x0, 15000 <elf_compress_gnu@@ELFUTILS_1.7+0x1b8>
    fc88:	str	x0, [sp, #112]
    fc8c:	str	wzr, [sp, #144]
    fc90:	ldr	x0, [sp, #112]
    fc94:	add	x0, x0, #0x960
    fc98:	ldr	x0, [x0, #48]
    fc9c:	cmp	x0, #0x20
    fca0:	b.ne	104e8 <elf_update@@ELFUTILS_1.0+0x2990>  // b.any
    fca4:	add	x1, sp, #0xf8
    fca8:	mov	x0, x19
    fcac:	bl	13338 <gelf_update_verdaux@@ELFUTILS_1.0+0x88>
    fcb0:	str	w0, [sp, #148]
    fcb4:	cbnz	w0, 10310 <elf_update@@ELFUTILS_1.0+0x27b8>
    fcb8:	ldr	x21, [x19, #88]
    fcbc:	stp	x27, x28, [sp, #80]
    fcc0:	cbz	x21, 10278 <elf_update@@ELFUTILS_1.0+0x2720>
    fcc4:	ldr	w1, [x19, #56]
    fcc8:	ldr	w0, [x19, #120]
    fccc:	ldr	w2, [x22, #28]
    fcd0:	orr	w0, w0, w1
    fcd4:	and	w27, w0, #0x1
    fcd8:	tbz	w0, #0, fdcc <elf_update@@ELFUTILS_1.0+0x2274>
    fcdc:	ldrh	w1, [x22, #40]
    fce0:	cmp	w1, w2
    fce4:	b.cc	102e0 <elf_update@@ELFUTILS_1.0+0x2788>  // b.lo, b.ul, b.last
    fce8:	ldr	w0, [sp, #128]
    fcec:	ldr	x20, [sp, #248]
    fcf0:	lsl	x20, x20, #5
    fcf4:	cbnz	w0, 1047c <elf_update@@ELFUTILS_1.0+0x2924>
    fcf8:	str	xzr, [sp, #120]
    fcfc:	ldr	w0, [x22, #28]
    fd00:	mov	x25, x20
    fd04:	ldr	w23, [x19, #36]
    fd08:	mov	x24, x21
    fd0c:	mov	x28, x0
    fd10:	mov	x26, #0x0                   	// #0
    fd14:	str	x0, [sp, #104]
    fd18:	mov	x3, x28
    fd1c:	mov	x2, x25
    fd20:	mov	x1, x24
    fd24:	mov	w0, w23
    fd28:	bl	3220 <pwrite@plt>
    fd2c:	cmn	x0, #0x1
    fd30:	b.eq	fd74 <elf_update@@ELFUTILS_1.0+0x221c>  // b.none
    fd34:	cmp	x0, #0x0
    fd38:	b.le	fd98 <elf_update@@ELFUTILS_1.0+0x2240>
    fd3c:	add	x26, x26, x0
    fd40:	cmp	x26, x20
    fd44:	b.cs	fd9c <elf_update@@ELFUTILS_1.0+0x2244>  // b.hs, b.nlast
    fd48:	ldr	x0, [sp, #104]
    fd4c:	sub	x25, x20, x26
    fd50:	add	x24, x21, x26
    fd54:	mov	x2, x25
    fd58:	add	x28, x0, x26
    fd5c:	mov	x1, x24
    fd60:	mov	x3, x28
    fd64:	mov	w0, w23
    fd68:	bl	3220 <pwrite@plt>
    fd6c:	cmn	x0, #0x1
    fd70:	b.ne	fd34 <elf_update@@ELFUTILS_1.0+0x21dc>  // b.any
    fd74:	bl	3340 <__errno_location@plt>
    fd78:	ldr	w0, [x0]
    fd7c:	cmp	w0, #0x4
    fd80:	b.eq	fd18 <elf_update@@ELFUTILS_1.0+0x21c0>  // b.none
    fd84:	mov	w0, #0x14                  	// #20
    fd88:	str	w27, [sp, #148]
    fd8c:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
    fd90:	ldp	x27, x28, [sp, #80]
    fd94:	b	fc60 <elf_update@@ELFUTILS_1.0+0x2108>
    fd98:	csel	x26, x26, x0, eq  // eq = none
    fd9c:	cmp	x20, x26
    fda0:	b.ne	fd84 <elf_update@@ELFUTILS_1.0+0x222c>  // b.any
    fda4:	ldr	x0, [sp, #120]
    fda8:	bl	3200 <free@plt>
    fdac:	ldr	w0, [x19, #120]
    fdb0:	ldr	x1, [x19, #88]
    fdb4:	and	w0, w0, #0xfffffffe
    fdb8:	str	w0, [x19, #120]
    fdbc:	mov	w0, #0x1                   	// #1
    fdc0:	str	w0, [sp, #144]
    fdc4:	cbz	x1, 10278 <elf_update@@ELFUTILS_1.0+0x2720>
    fdc8:	ldr	w2, [x22, #28]
    fdcc:	ldr	x5, [sp, #248]
    fdd0:	mov	w2, w2
    fdd4:	add	x21, x2, x5, lsl #5
    fdd8:	ldr	x1, [sp, #152]
    fddc:	cbz	x1, fe48 <elf_update@@ELFUTILS_1.0+0x22f0>
    fde0:	mov	x0, #0x5555555555555555    	// #6148914691236517205
    fde4:	movk	x0, #0x555, lsl #48
    fde8:	cmp	x1, x0
    fdec:	b.hi	10300 <elf_update@@ELFUTILS_1.0+0x27a8>  // b.pmore
    fdf0:	ldr	w0, [x22, #32]
    fdf4:	str	w0, [sp, #236]
    fdf8:	ldr	x0, [x19, #40]
    fdfc:	str	x0, [sp, #224]
    fe00:	ldr	w0, [sp, #128]
    fe04:	cbnz	w0, fe5c <elf_update@@ELFUTILS_1.0+0x2304>
    fe08:	ldr	x0, [x19, #80]
    fe0c:	str	x0, [sp, #176]
    fe10:	cbz	x0, fe5c <elf_update@@ELFUTILS_1.0+0x2304>
    fe14:	ldr	w0, [x19, #56]
    fe18:	str	w0, [sp, #136]
    fe1c:	tbnz	w0, #0, fe5c <elf_update@@ELFUTILS_1.0+0x2304>
    fe20:	str	xzr, [sp, #208]
    fe24:	b	fe80 <elf_update@@ELFUTILS_1.0+0x2328>
    fe28:	csel	x0, x26, x0, eq  // eq = none
    fe2c:	cmp	x20, x0
    fe30:	b.ne	1023c <elf_update@@ELFUTILS_1.0+0x26e4>  // b.any
    fe34:	ldr	x0, [sp, #208]
    fe38:	bl	3200 <free@plt>
    fe3c:	ldr	x0, [sp, #200]
    fe40:	bl	3200 <free@plt>
    fe44:	nop
    fe48:	ldr	w0, [x19, #56]
    fe4c:	ldp	x27, x28, [sp, #80]
    fe50:	and	w0, w0, #0xfffffffe
    fe54:	str	w0, [x19, #56]
    fe58:	b	fc60 <elf_update@@ELFUTILS_1.0+0x2108>
    fe5c:	ldr	x0, [sp, #152]
    fe60:	add	x0, x0, x0, lsl #2
    fe64:	lsl	x0, x0, #3
    fe68:	bl	30c0 <malloc@plt>
    fe6c:	str	x0, [sp, #176]
    fe70:	cbz	x0, 10334 <elf_update@@ELFUTILS_1.0+0x27dc>
    fe74:	str	x0, [sp, #208]
    fe78:	ldr	w0, [x19, #56]
    fe7c:	str	w0, [sp, #136]
    fe80:	ldr	x0, [sp, #152]
    fe84:	add	x20, x19, #0xc8
    fe88:	lsl	x22, x0, #3
    fe8c:	mov	x0, x22
    fe90:	bl	30c0 <malloc@plt>
    fe94:	str	x0, [sp, #200]
    fe98:	mov	x1, x0
    fe9c:	cbz	x0, 1032c <elf_update@@ELFUTILS_1.0+0x27d4>
    fea0:	ldr	w0, [x20]
    fea4:	cbz	x0, fec0 <elf_update@@ELFUTILS_1.0+0x2368>
    fea8:	add	x0, x1, x0, lsl #3
    feac:	add	x2, x20, #0x10
    feb0:	str	x2, [x1], #8
    feb4:	add	x2, x2, #0xd0
    feb8:	cmp	x1, x0
    febc:	b.ne	feb0 <elf_update@@ELFUTILS_1.0+0x2358>  // b.any
    fec0:	ldr	x20, [x20, #8]
    fec4:	cbnz	x20, fea0 <elf_update@@ELFUTILS_1.0+0x2348>
    fec8:	ldr	x0, [sp, #200]
    fecc:	adrp	x3, e000 <elf_update@@ELFUTILS_1.0+0x4a8>
    fed0:	add	x3, x3, #0xf98
    fed4:	str	x0, [sp, #120]
    fed8:	sub	x1, x1, x0
    fedc:	add	x2, x22, x0
    fee0:	str	x2, [sp, #160]
    fee4:	mov	x2, #0x8                   	// #8
    fee8:	asr	x1, x1, #3
    feec:	bl	30b0 <qsort@plt>
    fef0:	mov	x0, #0x1100                	// #4352
    fef4:	add	x0, sp, x0
    fef8:	mov	x22, x21
    fefc:	str	x0, [sp, #168]
    ff00:	adrp	x0, 2a000 <elf_compress_gnu@@ELFUTILS_1.7+0x151b8>
    ff04:	add	x0, x0, #0xbd0
    ff08:	str	x0, [sp, #216]
    ff0c:	b	ff8c <elf_update@@ELFUTILS_1.0+0x2434>
    ff10:	ldr	w0, [x21, #156]
    ff14:	tbnz	w0, #0, 10510 <elf_update@@ELFUTILS_1.0+0x29b8>
    ff18:	ldr	w0, [sp, #128]
    ff1c:	cbnz	w0, fff0 <elf_update@@ELFUTILS_1.0+0x2498>
    ff20:	ldr	x0, [x19, #80]
    ff24:	cbz	x0, ff30 <elf_update@@ELFUTILS_1.0+0x23d8>
    ff28:	ldr	w0, [x19, #56]
    ff2c:	tbz	w0, #0, ff5c <elf_update@@ELFUTILS_1.0+0x2404>
    ff30:	ldr	x0, [x21, #128]
    ff34:	ldr	x2, [sp, #176]
    ff38:	add	x0, x0, x0, lsl #2
    ff3c:	ldr	x1, [x21, #144]
    ff40:	add	x0, x2, x0, lsl #3
    ff44:	ldp	x2, x3, [x1]
    ff48:	stp	x2, x3, [x0]
    ff4c:	ldp	x2, x3, [x1, #16]
    ff50:	stp	x2, x3, [x0, #16]
    ff54:	ldr	x1, [x1, #32]
    ff58:	str	x1, [x0, #32]
    ff5c:	ldr	x1, [sp, #120]
    ff60:	ldr	x2, [sp, #160]
    ff64:	add	x1, x1, #0x8
    ff68:	ldr	w0, [x21, #152]
    ff6c:	cmp	x2, x1
    ff70:	str	x1, [sp, #120]
    ff74:	and	w1, w0, #0xfffffffe
    ff78:	str	w1, [x21, #152]
    ff7c:	ldr	w1, [sp, #136]
    ff80:	orr	w0, w1, w0
    ff84:	str	w0, [sp, #136]
    ff88:	b.eq	103bc <elf_update@@ELFUTILS_1.0+0x2864>  // b.none
    ff8c:	ldr	x0, [sp, #120]
    ff90:	ldr	x21, [x0]
    ff94:	ldr	x0, [x21, #128]
    ff98:	cbz	x0, ff10 <elf_update@@ELFUTILS_1.0+0x23b8>
    ff9c:	ldr	x20, [x21, #144]
    ffa0:	ldr	w0, [x20, #4]
    ffa4:	cmp	w0, #0x8
    ffa8:	b.eq	ff18 <elf_update@@ELFUTILS_1.0+0x23c0>  // b.none
    ffac:	ldr	x1, [x19, #40]
    ffb0:	ldr	w26, [x20, #16]
    ffb4:	ldr	x0, [x21, #64]
    ffb8:	add	x1, x26, x1
    ffbc:	str	x1, [sp, #112]
    ffc0:	cbnz	x0, 10044 <elf_update@@ELFUTILS_1.0+0x24ec>
    ffc4:	ldr	w0, [sp, #144]
    ffc8:	cmp	w0, #0x0
    ffcc:	ldr	x0, [sp, #112]
    ffd0:	ccmp	x0, x22, #0x4, ne  // ne = any
    ffd4:	b.gt	102c0 <elf_update@@ELFUTILS_1.0+0x2768>
    ffd8:	ldr	x0, [sp, #112]
    ffdc:	str	wzr, [sp, #144]
    ffe0:	ldr	w5, [x20, #20]
    ffe4:	add	x22, x5, x0
    ffe8:	ldr	w0, [sp, #128]
    ffec:	cbz	w0, ff20 <elf_update@@ELFUTILS_1.0+0x23c8>
    fff0:	ldr	x1, [sp, #216]
    fff4:	mov	w3, #0x1                   	// #1
    fff8:	ldr	x0, [x21, #128]
    fffc:	mov	x2, #0x28                  	// #40
   10000:	ldr	x4, [x1, #72]
   10004:	ldr	x1, [x21, #144]
   10008:	add	x0, x0, x0, lsl #2
   1000c:	ldr	x5, [sp, #176]
   10010:	add	x0, x5, x0, lsl #3
   10014:	blr	x4
   10018:	b	ff5c <elf_update@@ELFUTILS_1.0+0x2404>
   1001c:	cmp	x20, #0x34
   10020:	b.ne	fc58 <elf_update@@ELFUTILS_1.0+0x2100>  // b.any
   10024:	ldr	x1, [x19, #88]
   10028:	ldr	w0, [x19, #116]
   1002c:	cmp	x1, #0x0
   10030:	and	w0, w0, #0xfffffffe
   10034:	cset	w1, eq  // eq = none
   10038:	str	w0, [x19, #116]
   1003c:	str	w1, [sp, #144]
   10040:	b	fc90 <elf_update@@ELFUTILS_1.0+0x2138>
   10044:	add	x0, sp, #0xf0
   10048:	mov	x1, x22
   1004c:	mov	w20, #0x0                   	// #0
   10050:	mov	x22, x21
   10054:	str	x19, [sp, #104]
   10058:	str	x0, [sp, #184]
   1005c:	add	x0, sp, #0x100
   10060:	str	x0, [sp, #192]
   10064:	b	100ac <elf_update@@ELFUTILS_1.0+0x2554>
   10068:	cmp	x0, #0x0
   1006c:	ldr	w0, [sp, #144]
   10070:	ccmp	w0, #0x0, #0x4, eq  // eq = none
   10074:	b.ne	101e0 <elf_update@@ELFUTILS_1.0+0x2688>  // b.any
   10078:	ldr	x0, [sp, #104]
   1007c:	ldr	w2, [x21, #156]
   10080:	ldr	w3, [x0, #56]
   10084:	ldr	w0, [x22, #56]
   10088:	orr	w2, w2, w3
   1008c:	orr	w2, w2, w0
   10090:	tbnz	w2, #0, 101e0 <elf_update@@ELFUTILS_1.0+0x2688>
   10094:	ldr	x27, [x22, #16]
   10098:	and	w0, w0, #0xfffffffe
   1009c:	str	w0, [x22, #56]
   100a0:	add	x1, x26, x27
   100a4:	ldr	x22, [x22, #48]
   100a8:	cbz	x22, 1031c <elf_update@@ELFUTILS_1.0+0x27c4>
   100ac:	ldr	x0, [x22, #24]
   100b0:	ldr	x2, [sp, #112]
   100b4:	add	x26, x0, x2
   100b8:	cmp	x26, x1
   100bc:	b.gt	10068 <elf_update@@ELFUTILS_1.0+0x2510>
   100c0:	ldr	x0, [sp, #104]
   100c4:	ldr	w1, [x21, #156]
   100c8:	ldr	x27, [x22, #16]
   100cc:	ldr	w2, [x0, #56]
   100d0:	ldr	w0, [x22, #56]
   100d4:	orr	w1, w1, w2
   100d8:	orr	w1, w1, w0
   100dc:	tbz	w1, #0, 10098 <elf_update@@ELFUTILS_1.0+0x2540>
   100e0:	ldr	w0, [sp, #128]
   100e4:	ldr	x20, [x22]
   100e8:	cbnz	w0, 10288 <elf_update@@ELFUTILS_1.0+0x2730>
   100ec:	ldr	x0, [sp, #168]
   100f0:	cmp	x20, x0
   100f4:	cset	w0, ne  // ne = any
   100f8:	str	w0, [sp, #232]
   100fc:	ldr	x0, [sp, #104]
   10100:	mov	x25, x26
   10104:	mov	x24, x20
   10108:	mov	x26, x20
   1010c:	mov	x19, x27
   10110:	mov	x20, x25
   10114:	ldr	w0, [x0, #36]
   10118:	mov	x28, #0x0                   	// #0
   1011c:	str	w0, [sp, #132]
   10120:	ldr	w0, [sp, #132]
   10124:	mov	x3, x25
   10128:	mov	x2, x19
   1012c:	mov	x1, x24
   10130:	bl	3220 <pwrite@plt>
   10134:	mov	x23, x0
   10138:	cmn	x0, #0x1
   1013c:	b.eq	10184 <elf_update@@ELFUTILS_1.0+0x262c>  // b.none
   10140:	cmp	x0, #0x0
   10144:	b.le	10264 <elf_update@@ELFUTILS_1.0+0x270c>
   10148:	add	x28, x28, x0
   1014c:	cmp	x28, x27
   10150:	mov	x2, x28
   10154:	b.cs	10208 <elf_update@@ELFUTILS_1.0+0x26b0>  // b.hs, b.nlast
   10158:	ldr	w0, [sp, #132]
   1015c:	add	x25, x28, x20
   10160:	sub	x19, x27, x28
   10164:	add	x24, x26, x28
   10168:	mov	x3, x25
   1016c:	mov	x2, x19
   10170:	mov	x1, x24
   10174:	bl	3220 <pwrite@plt>
   10178:	mov	x23, x0
   1017c:	cmn	x0, #0x1
   10180:	b.ne	10140 <elf_update@@ELFUTILS_1.0+0x25e8>  // b.any
   10184:	bl	3340 <__errno_location@plt>
   10188:	ldr	w0, [x0]
   1018c:	cmp	w0, #0x4
   10190:	b.eq	10120 <elf_update@@ELFUTILS_1.0+0x25c8>  // b.none
   10194:	mov	x0, x20
   10198:	mov	x2, x23
   1019c:	mov	x20, x26
   101a0:	mov	x26, x0
   101a4:	ldr	x0, [x22]
   101a8:	ldr	x4, [x22, #16]
   101ac:	cmp	x0, x20
   101b0:	ldr	w0, [sp, #232]
   101b4:	csel	w27, w0, wzr, ne  // ne = any
   101b8:	cmp	x4, x2
   101bc:	b.ne	10230 <elf_update@@ELFUTILS_1.0+0x26d8>  // b.any
   101c0:	cbz	w27, 101d0 <elf_update@@ELFUTILS_1.0+0x2678>
   101c4:	mov	x0, x20
   101c8:	bl	3200 <free@plt>
   101cc:	ldr	x4, [x22, #16]
   101d0:	mov	x27, x4
   101d4:	ldr	w0, [x22, #56]
   101d8:	mov	w20, #0x1                   	// #1
   101dc:	b	10098 <elf_update@@ELFUTILS_1.0+0x2540>
   101e0:	ldr	x0, [sp, #104]
   101e4:	sub	x2, x26, x1
   101e8:	ldp	x4, x3, [sp, #184]
   101ec:	ldr	w0, [x0, #36]
   101f0:	bl	f000 <elf_update@@ELFUTILS_1.0+0x14a8>
   101f4:	cbnz	w0, 10244 <elf_update@@ELFUTILS_1.0+0x26ec>
   101f8:	ldr	x7, [x22, #24]
   101fc:	ldr	x0, [sp, #112]
   10200:	add	x26, x0, x7
   10204:	b	100c0 <elf_update@@ELFUTILS_1.0+0x2568>
   10208:	mov	x0, x20
   1020c:	mov	x20, x26
   10210:	mov	x26, x0
   10214:	ldr	x0, [x22]
   10218:	ldr	x4, [x22, #16]
   1021c:	cmp	x0, x20
   10220:	ldr	w0, [sp, #232]
   10224:	csel	w27, w0, wzr, ne  // ne = any
   10228:	cmp	x4, x2
   1022c:	b.eq	101c0 <elf_update@@ELFUTILS_1.0+0x2668>  // b.none
   10230:	cbz	w27, 1023c <elf_update@@ELFUTILS_1.0+0x26e4>
   10234:	mov	x0, x20
   10238:	bl	3200 <free@plt>
   1023c:	mov	w0, #0x14                  	// #20
   10240:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   10244:	ldr	x0, [sp, #208]
   10248:	mov	w1, #0x1                   	// #1
   1024c:	str	w1, [sp, #148]
   10250:	bl	3200 <free@plt>
   10254:	ldr	x0, [sp, #200]
   10258:	bl	3200 <free@plt>
   1025c:	ldp	x27, x28, [sp, #80]
   10260:	b	fc60 <elf_update@@ELFUTILS_1.0+0x2108>
   10264:	mov	x0, x20
   10268:	csel	x2, x28, x23, eq  // eq = none
   1026c:	mov	x20, x26
   10270:	mov	x26, x0
   10274:	b	101a4 <elf_update@@ELFUTILS_1.0+0x264c>
   10278:	ldr	x0, [sp, #112]
   1027c:	add	x24, x0, #0x960
   10280:	ldr	x21, [x24, #24]
   10284:	b	fdd8 <elf_update@@ELFUTILS_1.0+0x2280>
   10288:	str	wzr, [sp, #232]
   1028c:	cmp	x27, #0x8, lsl #12
   10290:	ldr	x0, [sp, #168]
   10294:	b.hi	1034c <elf_update@@ELFUTILS_1.0+0x27f4>  // b.pmore
   10298:	ldr	w6, [x22, #8]
   1029c:	mov	x2, x27
   102a0:	ldr	x4, [sp, #216]
   102a4:	mov	x1, x20
   102a8:	mov	w3, #0x1                   	// #1
   102ac:	mov	x20, x0
   102b0:	ldr	x4, [x4, x6, lsl #3]
   102b4:	blr	x4
   102b8:	ldr	x27, [x22, #16]
   102bc:	b	100fc <elf_update@@ELFUTILS_1.0+0x25a4>
   102c0:	sub	x2, x0, x22
   102c4:	ldr	w0, [x19, #36]
   102c8:	add	x4, sp, #0xf0
   102cc:	add	x3, sp, #0x100
   102d0:	mov	x1, x22
   102d4:	bl	f000 <elf_update@@ELFUTILS_1.0+0x14a8>
   102d8:	cbz	w0, ffd8 <elf_update@@ELFUTILS_1.0+0x2480>
   102dc:	b	10244 <elf_update@@ELFUTILS_1.0+0x26ec>
   102e0:	ldr	w0, [x19, #36]
   102e4:	sub	w2, w2, w1
   102e8:	add	x4, sp, #0xf0
   102ec:	and	x1, x1, #0xffff
   102f0:	add	x3, sp, #0x100
   102f4:	bl	f000 <elf_update@@ELFUTILS_1.0+0x14a8>
   102f8:	cbz	w0, fce8 <elf_update@@ELFUTILS_1.0+0x2190>
   102fc:	nop
   10300:	mov	w0, #0x1                   	// #1
   10304:	str	w0, [sp, #148]
   10308:	ldp	x27, x28, [sp, #80]
   1030c:	b	fc60 <elf_update@@ELFUTILS_1.0+0x2108>
   10310:	mov	w0, #0xffffffff            	// #-1
   10314:	str	w0, [sp, #148]
   10318:	b	fc60 <elf_update@@ELFUTILS_1.0+0x2108>
   1031c:	mov	x22, x1
   10320:	str	w20, [sp, #144]
   10324:	ldr	x19, [sp, #104]
   10328:	b	ff18 <elf_update@@ELFUTILS_1.0+0x23c0>
   1032c:	ldr	x0, [sp, #208]
   10330:	bl	3200 <free@plt>
   10334:	mov	w1, #0xffffffff            	// #-1
   10338:	mov	w0, #0x8                   	// #8
   1033c:	str	w1, [sp, #148]
   10340:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   10344:	ldp	x27, x28, [sp, #80]
   10348:	b	fc60 <elf_update@@ELFUTILS_1.0+0x2108>
   1034c:	mov	x0, x27
   10350:	bl	30c0 <malloc@plt>
   10354:	cbz	x0, 10364 <elf_update@@ELFUTILS_1.0+0x280c>
   10358:	mov	w1, #0x1                   	// #1
   1035c:	str	w1, [sp, #232]
   10360:	b	10298 <elf_update@@ELFUTILS_1.0+0x2740>
   10364:	mov	w0, #0x8                   	// #8
   10368:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   1036c:	b	10244 <elf_update@@ELFUTILS_1.0+0x26ec>
   10370:	adrp	x3, 16000 <elf_compress_gnu@@ELFUTILS_1.7+0x11b8>
   10374:	add	x3, x3, #0x288
   10378:	adrp	x1, 16000 <elf_compress_gnu@@ELFUTILS_1.7+0x11b8>
   1037c:	adrp	x0, 16000 <elf_compress_gnu@@ELFUTILS_1.7+0x11b8>
   10380:	add	x3, x3, #0x18
   10384:	add	x1, x1, #0x10
   10388:	add	x0, x0, #0x28
   1038c:	mov	w2, #0x228                 	// #552
   10390:	stp	x27, x28, [sp, #80]
   10394:	bl	3330 <__assert_fail@plt>
   10398:	adrp	x1, 2a000 <elf_compress_gnu@@ELFUTILS_1.7+0x151b8>
   1039c:	mov	x3, #0x1100                	// #4352
   103a0:	add	x0, sp, x3
   103a4:	mov	w3, #0x1                   	// #1
   103a8:	ldr	x4, [x1, #3048]
   103ac:	mov	x21, x0
   103b0:	mov	x1, x22
   103b4:	blr	x4
   103b8:	b	fbe8 <elf_update@@ELFUTILS_1.0+0x2090>
   103bc:	ldr	x1, [sp, #224]
   103c0:	mov	x21, x22
   103c4:	ldr	w0, [sp, #236]
   103c8:	add	x22, x1, w0, uxtw
   103cc:	ldr	w1, [x19, #56]
   103d0:	cmp	x21, x22
   103d4:	cset	w0, lt  // lt = tstop
   103d8:	tst	w1, w0
   103dc:	b.ne	104b4 <elf_update@@ELFUTILS_1.0+0x295c>  // b.any
   103e0:	ldr	x0, [sp, #136]
   103e4:	tbz	w0, #0, fe34 <elf_update@@ELFUTILS_1.0+0x22dc>
   103e8:	ldr	x0, [sp, #152]
   103ec:	mov	x24, x22
   103f0:	ldr	w23, [x19, #36]
   103f4:	mov	x26, #0x0                   	// #0
   103f8:	ldr	x21, [sp, #176]
   103fc:	add	x20, x0, x0, lsl #2
   10400:	lsl	x20, x20, #3
   10404:	mov	x25, x20
   10408:	mov	x3, x24
   1040c:	mov	x2, x25
   10410:	mov	x1, x21
   10414:	mov	w0, w23
   10418:	bl	3220 <pwrite@plt>
   1041c:	cmn	x0, #0x1
   10420:	b.eq	10468 <elf_update@@ELFUTILS_1.0+0x2910>  // b.none
   10424:	cmp	x0, #0x0
   10428:	b.le	fe28 <elf_update@@ELFUTILS_1.0+0x22d0>
   1042c:	add	x26, x26, x0
   10430:	cmp	x20, x26
   10434:	mov	x0, x26
   10438:	b.ls	fe2c <elf_update@@ELFUTILS_1.0+0x22d4>  // b.plast
   1043c:	ldr	x0, [sp, #176]
   10440:	add	x24, x22, x26
   10444:	sub	x25, x20, x26
   10448:	mov	x3, x24
   1044c:	add	x21, x0, x26
   10450:	mov	x2, x25
   10454:	mov	x1, x21
   10458:	mov	w0, w23
   1045c:	bl	3220 <pwrite@plt>
   10460:	cmn	x0, #0x1
   10464:	b.ne	10424 <elf_update@@ELFUTILS_1.0+0x28cc>  // b.any
   10468:	bl	3340 <__errno_location@plt>
   1046c:	ldr	w0, [x0]
   10470:	cmp	w0, #0x4
   10474:	b.ne	1023c <elf_update@@ELFUTILS_1.0+0x26e4>  // b.any
   10478:	b	10408 <elf_update@@ELFUTILS_1.0+0x28b0>
   1047c:	mov	x0, x20
   10480:	bl	30c0 <malloc@plt>
   10484:	str	x0, [sp, #120]
   10488:	cbz	x0, 104d4 <elf_update@@ELFUTILS_1.0+0x297c>
   1048c:	adrp	x4, 2a000 <elf_compress_gnu@@ELFUTILS_1.7+0x151b8>
   10490:	mov	x2, x20
   10494:	ldr	x1, [x19, #88]
   10498:	mov	x21, x0
   1049c:	ldr	x4, [x4, #3072]
   104a0:	mov	w3, #0x1                   	// #1
   104a4:	blr	x4
   104a8:	ldr	x20, [sp, #248]
   104ac:	lsl	x20, x20, #5
   104b0:	b	fcfc <elf_update@@ELFUTILS_1.0+0x21a4>
   104b4:	ldr	w0, [x19, #36]
   104b8:	add	x4, sp, #0xf0
   104bc:	add	x3, sp, #0x100
   104c0:	sub	x2, x22, x21
   104c4:	mov	x1, x21
   104c8:	bl	f000 <elf_update@@ELFUTILS_1.0+0x14a8>
   104cc:	cbz	w0, 103e0 <elf_update@@ELFUTILS_1.0+0x2888>
   104d0:	b	10244 <elf_update@@ELFUTILS_1.0+0x26ec>
   104d4:	mov	w0, #0x8                   	// #8
   104d8:	str	w27, [sp, #148]
   104dc:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   104e0:	ldp	x27, x28, [sp, #80]
   104e4:	b	fc60 <elf_update@@ELFUTILS_1.0+0x2108>
   104e8:	adrp	x3, 16000 <elf_compress_gnu@@ELFUTILS_1.7+0x11b8>
   104ec:	add	x3, x3, #0x288
   104f0:	adrp	x1, 16000 <elf_compress_gnu@@ELFUTILS_1.7+0x11b8>
   104f4:	adrp	x0, 16000 <elf_compress_gnu@@ELFUTILS_1.7+0x11b8>
   104f8:	add	x3, x3, #0x18
   104fc:	add	x1, x1, #0x10
   10500:	add	x0, x0, #0x78
   10504:	mov	w2, #0x24a                 	// #586
   10508:	stp	x27, x28, [sp, #80]
   1050c:	bl	3330 <__assert_fail@plt>
   10510:	adrp	x3, 16000 <elf_compress_gnu@@ELFUTILS_1.7+0x11b8>
   10514:	add	x3, x3, #0x288
   10518:	adrp	x1, 16000 <elf_compress_gnu@@ELFUTILS_1.7+0x11b8>
   1051c:	adrp	x0, 16000 <elf_compress_gnu@@ELFUTILS_1.7+0x11b8>
   10520:	add	x3, x3, #0x18
   10524:	add	x1, x1, #0x10
   10528:	add	x0, x0, #0x190
   1052c:	mov	w2, #0x2c3                 	// #707
   10530:	bl	3330 <__assert_fail@plt>
   10534:	nop
   10538:	ldr	x4, [x0]
   1053c:	ldr	x3, [x1]
   10540:	ldr	x2, [x4, #144]
   10544:	ldr	x1, [x3, #144]
   10548:	ldr	x5, [x2, #24]
   1054c:	ldr	x0, [x1, #24]
   10550:	cmp	x5, x0
   10554:	b.cc	10598 <elf_update@@ELFUTILS_1.0+0x2a40>  // b.lo, b.ul, b.last
   10558:	mov	w0, #0x1                   	// #1
   1055c:	b.hi	10594 <elf_update@@ELFUTILS_1.0+0x2a3c>  // b.pmore
   10560:	ldr	x1, [x1, #32]
   10564:	mov	w0, #0xffffffff            	// #-1
   10568:	ldr	x2, [x2, #32]
   1056c:	cmp	x2, x1
   10570:	b.cc	10594 <elf_update@@ELFUTILS_1.0+0x2a3c>  // b.lo, b.ul, b.last
   10574:	mov	w0, #0x1                   	// #1
   10578:	b.hi	10594 <elf_update@@ELFUTILS_1.0+0x2a3c>  // b.pmore
   1057c:	ldr	x2, [x4, #128]
   10580:	mov	w4, #0xffffffff            	// #-1
   10584:	ldr	x1, [x3, #128]
   10588:	cmp	x2, x1
   1058c:	cset	w0, hi  // hi = pmore
   10590:	csel	w0, w0, w4, cs  // cs = hs, nlast
   10594:	ret
   10598:	mov	w0, #0xffffffff            	// #-1
   1059c:	ret
   105a0:	stp	x29, x30, [sp, #-112]!
   105a4:	cmp	x2, #0x1, lsl #12
   105a8:	mov	x29, sp
   105ac:	stp	x25, x26, [sp, #64]
   105b0:	mov	x25, x3
   105b4:	ldr	x26, [x4]
   105b8:	stp	x19, x20, [sp, #16]
   105bc:	mov	x19, #0x1000                	// #4096
   105c0:	stp	x21, x22, [sp, #32]
   105c4:	csel	x19, x2, x19, ls  // ls = plast
   105c8:	mov	x22, x1
   105cc:	stp	x23, x24, [sp, #48]
   105d0:	cmp	x26, x19
   105d4:	stp	x27, x28, [sp, #80]
   105d8:	mov	x27, x2
   105dc:	str	w0, [sp, #100]
   105e0:	b.cc	106e0 <elf_update@@ELFUTILS_1.0+0x2b88>  // b.lo, b.ul, b.last
   105e4:	nop
   105e8:	cmp	x27, x26
   105ec:	mov	x28, x22
   105f0:	csel	x21, x27, x26, ls  // ls = plast
   105f4:	mov	x24, x25
   105f8:	mov	x23, x21
   105fc:	mov	x20, #0x0                   	// #0
   10600:	ldr	w0, [sp, #100]
   10604:	mov	x3, x28
   10608:	mov	x2, x23
   1060c:	mov	x1, x24
   10610:	bl	3220 <pwrite@plt>
   10614:	mov	x19, x0
   10618:	cmn	x0, #0x1
   1061c:	b.eq	10660 <elf_update@@ELFUTILS_1.0+0x2b08>  // b.none
   10620:	cmp	x0, #0x0
   10624:	b.le	106d8 <elf_update@@ELFUTILS_1.0+0x2b80>
   10628:	add	x20, x20, x0
   1062c:	cmp	x21, x20
   10630:	b.ls	106a4 <elf_update@@ELFUTILS_1.0+0x2b4c>  // b.plast
   10634:	ldr	w0, [sp, #100]
   10638:	add	x28, x22, x20
   1063c:	sub	x23, x21, x20
   10640:	add	x24, x25, x20
   10644:	mov	x3, x28
   10648:	mov	x2, x23
   1064c:	mov	x1, x24
   10650:	bl	3220 <pwrite@plt>
   10654:	mov	x19, x0
   10658:	cmn	x0, #0x1
   1065c:	b.ne	10620 <elf_update@@ELFUTILS_1.0+0x2ac8>  // b.any
   10660:	bl	3340 <__errno_location@plt>
   10664:	ldr	w0, [x0]
   10668:	cmp	w0, #0x4
   1066c:	b.eq	10600 <elf_update@@ELFUTILS_1.0+0x2aa8>  // b.none
   10670:	cmp	x21, x19
   10674:	b.ne	106b0 <elf_update@@ELFUTILS_1.0+0x2b58>  // b.any
   10678:	add	x22, x22, x21
   1067c:	subs	x27, x27, x21
   10680:	b.ne	105e8 <elf_update@@ELFUTILS_1.0+0x2a90>  // b.any
   10684:	mov	w0, #0x0                   	// #0
   10688:	ldp	x19, x20, [sp, #16]
   1068c:	ldp	x21, x22, [sp, #32]
   10690:	ldp	x23, x24, [sp, #48]
   10694:	ldp	x25, x26, [sp, #64]
   10698:	ldp	x27, x28, [sp, #80]
   1069c:	ldp	x29, x30, [sp], #112
   106a0:	ret
   106a4:	mov	x19, x20
   106a8:	cmp	x21, x19
   106ac:	b.eq	10678 <elf_update@@ELFUTILS_1.0+0x2b20>  // b.none
   106b0:	mov	w0, #0x14                  	// #20
   106b4:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   106b8:	mov	w0, #0x1                   	// #1
   106bc:	ldp	x19, x20, [sp, #16]
   106c0:	ldp	x21, x22, [sp, #32]
   106c4:	ldp	x23, x24, [sp, #48]
   106c8:	ldp	x25, x26, [sp, #64]
   106cc:	ldp	x27, x28, [sp, #80]
   106d0:	ldp	x29, x30, [sp], #112
   106d4:	ret
   106d8:	csel	x19, x0, x20, ne  // ne = any
   106dc:	b	10670 <elf_update@@ELFUTILS_1.0+0x2b18>
   106e0:	adrp	x1, 2b000 <elf_compress_gnu@@ELFUTILS_1.7+0x161b8>
   106e4:	sub	x2, x19, x26
   106e8:	add	x0, x3, x26
   106ec:	str	x4, [sp, #104]
   106f0:	ldr	w1, [x1, #440]
   106f4:	mov	x26, x19
   106f8:	bl	3100 <memset@plt>
   106fc:	ldr	x4, [sp, #104]
   10700:	str	x19, [x4]
   10704:	b	105e8 <elf_update@@ELFUTILS_1.0+0x2a90>
   10708:	stp	x29, x30, [sp, #-208]!
   1070c:	mov	x29, sp
   10710:	stp	x27, x28, [sp, #80]
   10714:	mov	x27, x0
   10718:	ldr	w0, [x0, #56]
   1071c:	str	x2, [sp, #128]
   10720:	ldr	x2, [x27, #72]
   10724:	stp	x19, x20, [sp, #16]
   10728:	stp	x21, x22, [sp, #32]
   1072c:	mov	w21, w1
   10730:	ldr	w1, [x27, #116]
   10734:	str	x2, [sp, #120]
   10738:	orr	w0, w1, w0
   1073c:	tbz	w0, #0, 10c5c <elf_update@@ELFUTILS_1.0+0x3104>
   10740:	adrp	x0, 15000 <elf_compress_gnu@@ELFUTILS_1.7+0x1b8>
   10744:	ldr	x2, [x0, #2640]
   10748:	cmp	x2, #0x40
   1074c:	b.ne	11070 <elf_update@@ELFUTILS_1.0+0x3518>  // b.any
   10750:	ldr	x0, [x27]
   10754:	ldr	x3, [x27, #40]
   10758:	add	x0, x0, x3
   1075c:	cbnz	w21, 10e94 <elf_update@@ELFUTILS_1.0+0x333c>
   10760:	ldr	x2, [sp, #120]
   10764:	cmp	x2, x0
   10768:	b.eq	10794 <elf_update@@ELFUTILS_1.0+0x2c3c>  // b.none
   1076c:	mov	x1, x2
   10770:	ldp	x2, x3, [x2]
   10774:	stp	x2, x3, [x0]
   10778:	ldp	x2, x3, [x1, #16]
   1077c:	stp	x2, x3, [x0, #16]
   10780:	ldp	x2, x3, [x1, #32]
   10784:	stp	x2, x3, [x0, #32]
   10788:	ldp	x2, x3, [x1, #48]
   1078c:	stp	x2, x3, [x0, #48]
   10790:	ldr	w1, [x27, #116]
   10794:	ldr	x0, [x27, #88]
   10798:	and	w1, w1, #0xfffffffe
   1079c:	str	w1, [x27, #116]
   107a0:	cmp	x0, #0x0
   107a4:	cset	w20, eq  // eq = none
   107a8:	add	x1, sp, #0xc0
   107ac:	mov	x0, x27
   107b0:	bl	13338 <gelf_update_verdaux@@ELFUTILS_1.0+0x88>
   107b4:	str	w0, [sp, #184]
   107b8:	cbnz	w0, 10e58 <elf_update@@ELFUTILS_1.0+0x3300>
   107bc:	adrp	x19, 15000 <elf_compress_gnu@@ELFUTILS_1.7+0x1b8>
   107c0:	add	x0, x19, #0x960
   107c4:	ldr	x1, [x27, #88]
   107c8:	ldr	x3, [x0, #264]
   107cc:	str	x3, [sp, #152]
   107d0:	cbz	x1, 10838 <elf_update@@ELFUTILS_1.0+0x2ce0>
   107d4:	ldr	w2, [x27, #56]
   107d8:	ldr	w0, [x27, #120]
   107dc:	orr	w0, w0, w2
   107e0:	tbz	w0, #0, 10838 <elf_update@@ELFUTILS_1.0+0x2ce0>
   107e4:	cmp	x3, #0x38
   107e8:	b.ne	11098 <elf_update@@ELFUTILS_1.0+0x3540>  // b.any
   107ec:	ldr	x0, [sp, #120]
   107f0:	ldr	x3, [x27, #40]
   107f4:	ldr	x2, [x0, #32]
   107f8:	ldrh	w4, [x0, #52]
   107fc:	ldr	x0, [x27]
   10800:	cmp	x2, x4
   10804:	b.hi	10e64 <elf_update@@ELFUTILS_1.0+0x330c>  // b.pmore
   10808:	ldr	x4, [sp, #192]
   1080c:	add	x3, x3, x2
   10810:	add	x0, x0, x3
   10814:	lsl	x2, x4, #3
   10818:	sub	x2, x2, x4
   1081c:	lsl	x2, x2, #3
   10820:	cbnz	w21, 10f3c <elf_update@@ELFUTILS_1.0+0x33e4>
   10824:	bl	3030 <memmove@plt>
   10828:	ldr	w0, [x27, #120]
   1082c:	mov	w20, #0x1                   	// #1
   10830:	and	w0, w0, #0xfffffffe
   10834:	str	w0, [x27, #120]
   10838:	ldr	x0, [x27]
   1083c:	str	x0, [sp, #136]
   10840:	ldr	x1, [sp, #128]
   10844:	ldr	x0, [x27, #40]
   10848:	str	x0, [sp, #104]
   1084c:	cbz	x1, 10bf0 <elf_update@@ELFUTILS_1.0+0x3098>
   10850:	mov	x0, #0x1fffffffffffffff    	// #2305843009213693951
   10854:	cmp	x1, x0
   10858:	b.hi	10eb0 <elf_update@@ELFUTILS_1.0+0x3358>  // b.pmore
   1085c:	stp	x23, x24, [sp, #48]
   10860:	lsl	x24, x1, #3
   10864:	add	x19, x19, #0x960
   10868:	ldr	x1, [sp, #192]
   1086c:	str	x1, [sp, #176]
   10870:	ldr	x1, [sp, #120]
   10874:	mov	x0, x24
   10878:	add	x28, x27, #0xc8
   1087c:	ldr	x1, [x1, #32]
   10880:	str	x1, [sp, #160]
   10884:	ldr	x1, [x19, #240]
   10888:	str	x1, [sp, #168]
   1088c:	bl	30c0 <malloc@plt>
   10890:	str	x0, [sp, #144]
   10894:	cbz	x0, 10e40 <elf_update@@ELFUTILS_1.0+0x32e8>
   10898:	ldr	x1, [sp, #120]
   1089c:	stp	x25, x26, [sp, #64]
   108a0:	ldr	x19, [x1, #40]
   108a4:	ldrh	w1, [x1, #58]
   108a8:	str	w1, [sp, #188]
   108ac:	ldr	x1, [sp, #104]
   108b0:	add	x19, x1, x19
   108b4:	ldr	x1, [sp, #136]
   108b8:	add	x19, x1, x19
   108bc:	nop
   108c0:	ldr	w2, [x28]
   108c4:	cbz	x2, 108e0 <elf_update@@ELFUTILS_1.0+0x2d88>
   108c8:	add	x2, x0, x2, lsl #3
   108cc:	add	x1, x28, #0x10
   108d0:	str	x1, [x0], #8
   108d4:	add	x1, x1, #0xd0
   108d8:	cmp	x0, x2
   108dc:	b.ne	108d0 <elf_update@@ELFUTILS_1.0+0x2d78>  // b.any
   108e0:	ldr	x28, [x28, #8]
   108e4:	cbnz	x28, 108c0 <elf_update@@ELFUTILS_1.0+0x2d68>
   108e8:	ldr	x22, [sp, #144]
   108ec:	adrp	x3, 10000 <elf_update@@ELFUTILS_1.0+0x24a8>
   108f0:	mov	x2, #0x8                   	// #8
   108f4:	add	x3, x3, #0x538
   108f8:	sub	x0, x0, x22
   108fc:	mov	x23, x22
   10900:	asr	x1, x0, #3
   10904:	mov	x0, x22
   10908:	bl	30b0 <qsort@plt>
   1090c:	mov	x0, x22
   10910:	add	x1, x24, x22
   10914:	str	x1, [sp, #96]
   10918:	str	x0, [sp, #112]
   1091c:	ldr	x22, [x27, #40]
   10920:	b	10934 <elf_update@@ELFUTILS_1.0+0x2ddc>
   10924:	ldr	x0, [sp, #96]
   10928:	add	x23, x23, #0x8
   1092c:	cmp	x0, x23
   10930:	b.eq	10a24 <elf_update@@ELFUTILS_1.0+0x2ecc>  // b.none
   10934:	ldr	w0, [x27, #124]
   10938:	ldr	x24, [x23]
   1093c:	cbnz	w0, 109b0 <elf_update@@ELFUTILS_1.0+0x2e58>
   10940:	ldr	w0, [x24, #152]
   10944:	tbnz	w0, #7, 109b0 <elf_update@@ELFUTILS_1.0+0x2e58>
   10948:	ldr	x0, [x24, #128]
   1094c:	ldr	x25, [x24, #144]
   10950:	add	x0, x19, x0, lsl #6
   10954:	cmp	x25, x0
   10958:	b.eq	109b0 <elf_update@@ELFUTILS_1.0+0x2e58>  // b.none
   1095c:	ldr	x0, [x27]
   10960:	add	x2, x0, x22
   10964:	cmp	x25, x2
   10968:	b.ls	110e0 <elf_update@@ELFUTILS_1.0+0x3588>  // b.plast
   1096c:	ldr	x2, [x27, #48]
   10970:	add	x2, x22, x2
   10974:	add	x0, x0, x2
   10978:	cmp	x25, x0
   1097c:	b.cs	11100 <elf_update@@ELFUTILS_1.0+0x35a8>  // b.hs, b.nlast
   10980:	mov	x0, #0x40                  	// #64
   10984:	bl	30c0 <malloc@plt>
   10988:	cbz	x0, 10c64 <elf_update@@ELFUTILS_1.0+0x310c>
   1098c:	ldp	x8, x9, [x25]
   10990:	stp	x8, x9, [x0]
   10994:	ldp	x8, x9, [x25, #16]
   10998:	stp	x8, x9, [x0, #16]
   1099c:	ldp	x8, x9, [x25, #32]
   109a0:	stp	x8, x9, [x0, #32]
   109a4:	ldp	x8, x9, [x25, #48]
   109a8:	stp	x8, x9, [x0, #48]
   109ac:	str	x0, [x24, #144]
   109b0:	ldr	x0, [x27]
   109b4:	ldr	x25, [x24]
   109b8:	add	x2, x0, x22
   109bc:	cmp	x25, x2
   109c0:	b.cc	10924 <elf_update@@ELFUTILS_1.0+0x2dcc>  // b.lo, b.ul, b.last
   109c4:	ldr	x2, [x27, #48]
   109c8:	add	x2, x22, x2
   109cc:	add	x2, x0, x2
   109d0:	cmp	x25, x2
   109d4:	b.cs	10924 <elf_update@@ELFUTILS_1.0+0x2dcc>  // b.hs, b.nlast
   109d8:	ldr	x2, [x24, #144]
   109dc:	ldr	x2, [x2, #24]
   109e0:	add	x2, x22, x2
   109e4:	add	x0, x0, x2
   109e8:	cmp	x25, x0
   109ec:	b.cs	10924 <elf_update@@ELFUTILS_1.0+0x2dcc>  // b.hs, b.nlast
   109f0:	ldr	x26, [x24, #16]
   109f4:	mov	x0, x26
   109f8:	bl	30c0 <malloc@plt>
   109fc:	cbz	x0, 10c64 <elf_update@@ELFUTILS_1.0+0x310c>
   10a00:	mov	x2, x26
   10a04:	mov	x1, x25
   10a08:	bl	3020 <memcpy@plt>
   10a0c:	str	x0, [x24]
   10a10:	str	x0, [x24, #168]
   10a14:	add	x23, x23, #0x8
   10a18:	ldr	x0, [sp, #96]
   10a1c:	cmp	x0, x23
   10a20:	b.ne	10934 <elf_update@@ELFUTILS_1.0+0x2ddc>  // b.any
   10a24:	ldp	x22, x4, [sp, #144]
   10a28:	ldp	x1, x3, [sp, #160]
   10a2c:	ldr	x5, [sp, #104]
   10a30:	ldr	x0, [sp, #176]
   10a34:	cmp	x1, x3
   10a38:	ldrh	w2, [sp, #188]
   10a3c:	csel	x1, x1, x3, cs  // cs = hs, nlast
   10a40:	adrp	x3, 15000 <elf_compress_gnu@@ELFUTILS_1.7+0x1b8>
   10a44:	madd	x0, x0, x4, x5
   10a48:	add	x0, x0, x1
   10a4c:	ldr	x1, [sp, #128]
   10a50:	madd	x1, x2, x1, x19
   10a54:	str	x1, [sp, #104]
   10a58:	ldr	x1, [sp, #136]
   10a5c:	add	x0, x1, x0
   10a60:	add	x1, x3, #0xed0
   10a64:	str	x1, [sp, #152]
   10a68:	add	x1, sp, #0xc8
   10a6c:	str	x1, [sp, #160]
   10a70:	b	10a8c <elf_update@@ELFUTILS_1.0+0x2f34>
   10a74:	ldr	w1, [x28, #156]
   10a78:	tbnz	w1, #0, 110c0 <elf_update@@ELFUTILS_1.0+0x3568>
   10a7c:	ldr	x1, [sp, #96]
   10a80:	add	x22, x22, #0x8
   10a84:	cmp	x1, x22
   10a88:	b.eq	10af8 <elf_update@@ELFUTILS_1.0+0x2fa0>  // b.none
   10a8c:	ldr	x28, [x22]
   10a90:	ldr	x1, [x28, #128]
   10a94:	cbz	x1, 10a74 <elf_update@@ELFUTILS_1.0+0x2f1c>
   10a98:	ldr	x25, [x28, #144]
   10a9c:	ldr	w1, [x25, #4]
   10aa0:	cmp	w1, #0x8
   10aa4:	b.eq	10adc <elf_update@@ELFUTILS_1.0+0x2f84>  // b.none
   10aa8:	ldr	x1, [x25, #24]
   10aac:	ldr	x5, [x27, #40]
   10ab0:	ldr	x2, [x28, #64]
   10ab4:	add	x1, x5, x1
   10ab8:	ldr	x5, [x27]
   10abc:	add	x26, x5, x1
   10ac0:	cbnz	x2, 10c9c <elf_update@@ELFUTILS_1.0+0x3144>
   10ac4:	cmp	w20, #0x0
   10ac8:	ccmp	x26, x0, #0x0, ne  // ne = any
   10acc:	b.hi	10de4 <elf_update@@ELFUTILS_1.0+0x328c>  // b.pmore
   10ad0:	ldr	x0, [x25, #32]
   10ad4:	mov	w20, #0x0                   	// #0
   10ad8:	add	x0, x26, x0
   10adc:	ldr	w1, [x28, #156]
   10ae0:	add	x22, x22, #0x8
   10ae4:	and	w1, w1, #0xfffffffe
   10ae8:	str	w1, [x28, #156]
   10aec:	ldr	x1, [sp, #96]
   10af0:	cmp	x1, x22
   10af4:	b.ne	10a8c <elf_update@@ELFUTILS_1.0+0x2f34>  // b.any
   10af8:	ldr	w1, [x27, #56]
   10afc:	tbz	w1, #0, 10b20 <elf_update@@ELFUTILS_1.0+0x2fc8>
   10b00:	ldr	x2, [sp, #120]
   10b04:	ldr	x3, [x27, #40]
   10b08:	ldr	x4, [x2, #40]
   10b0c:	ldr	x2, [x27]
   10b10:	add	x3, x3, x4
   10b14:	add	x2, x2, x3
   10b18:	cmp	x2, x0
   10b1c:	b.hi	10f24 <elf_update@@ELFUTILS_1.0+0x33cc>  // b.pmore
   10b20:	adrp	x22, 2a000 <elf_compress_gnu@@ELFUTILS_1.7+0x151b8>
   10b24:	add	x22, x22, #0xbd0
   10b28:	ldr	x0, [sp, #112]
   10b2c:	b	10b34 <elf_update@@ELFUTILS_1.0+0x2fdc>
   10b30:	ldr	w1, [x27, #56]
   10b34:	ldr	x20, [x0]
   10b38:	ldr	w0, [x20, #152]
   10b3c:	orr	w1, w1, w0
   10b40:	tbz	w1, #0, 10bb8 <elf_update@@ELFUTILS_1.0+0x3060>
   10b44:	ldr	x0, [x20, #128]
   10b48:	ldr	x1, [x20, #144]
   10b4c:	add	x0, x19, x0, lsl #6
   10b50:	cbnz	w21, 10ebc <elf_update@@ELFUTILS_1.0+0x3364>
   10b54:	ldp	x2, x3, [x1]
   10b58:	stp	x2, x3, [x0]
   10b5c:	ldp	x2, x3, [x1, #16]
   10b60:	stp	x2, x3, [x0, #16]
   10b64:	ldp	x2, x3, [x1, #32]
   10b68:	stp	x2, x3, [x0, #32]
   10b6c:	ldp	x2, x3, [x1, #48]
   10b70:	stp	x2, x3, [x0, #48]
   10b74:	ldr	w1, [x20, #152]
   10b78:	ldr	w2, [x27, #124]
   10b7c:	and	w0, w1, #0x80
   10b80:	orr	w0, w0, w2
   10b84:	cbnz	w0, 10bb0 <elf_update@@ELFUTILS_1.0+0x3058>
   10b88:	ldr	x2, [x20, #128]
   10b8c:	ldr	x0, [x20, #144]
   10b90:	add	x2, x19, x2, lsl #6
   10b94:	cmp	x0, x2
   10b98:	b.eq	10bb0 <elf_update@@ELFUTILS_1.0+0x3058>  // b.none
   10b9c:	bl	3200 <free@plt>
   10ba0:	ldr	x0, [x20, #128]
   10ba4:	ldr	w1, [x20, #152]
   10ba8:	add	x0, x19, x0, lsl #6
   10bac:	str	x0, [x20, #144]
   10bb0:	and	w1, w1, #0xfffffffe
   10bb4:	str	w1, [x20, #152]
   10bb8:	ldr	x0, [sp, #112]
   10bbc:	ldr	x1, [sp, #96]
   10bc0:	add	x0, x0, #0x8
   10bc4:	str	x0, [sp, #112]
   10bc8:	cmp	x1, x0
   10bcc:	b.ne	10b30 <elf_update@@ELFUTILS_1.0+0x2fd8>  // b.any
   10bd0:	ldr	x0, [sp, #144]
   10bd4:	bl	3200 <free@plt>
   10bd8:	ldp	x23, x24, [sp, #48]
   10bdc:	ldp	x25, x26, [sp, #64]
   10be0:	ldr	x0, [x27]
   10be4:	str	x0, [sp, #136]
   10be8:	ldr	x0, [x27, #40]
   10bec:	str	x0, [sp, #104]
   10bf0:	ldr	w1, [x27, #56]
   10bf4:	mov	w0, #0x1e                  	// #30
   10bf8:	and	w1, w1, #0xfffffffe
   10bfc:	str	w1, [x27, #56]
   10c00:	bl	32d0 <sysconf@plt>
   10c04:	neg	x0, x0
   10c08:	ldp	x2, x5, [sp, #120]
   10c0c:	ldr	x3, [sp, #104]
   10c10:	ldr	x4, [x27, #40]
   10c14:	and	x0, x0, x3
   10c18:	ldr	x1, [x2, #40]
   10c1c:	ldrh	w3, [x2, #58]
   10c20:	add	x4, x4, x1
   10c24:	ldr	x1, [x27]
   10c28:	madd	x3, x3, x5, x4
   10c2c:	ldr	x2, [sp, #136]
   10c30:	add	x1, x1, x3
   10c34:	add	x0, x2, x0
   10c38:	mov	w2, #0x4                   	// #4
   10c3c:	sub	x1, x1, x0
   10c40:	bl	3040 <msync@plt>
   10c44:	ldr	w0, [sp, #184]
   10c48:	ldp	x19, x20, [sp, #16]
   10c4c:	ldp	x21, x22, [sp, #32]
   10c50:	ldp	x27, x28, [sp, #80]
   10c54:	ldp	x29, x30, [sp], #208
   10c58:	ret
   10c5c:	mov	w20, #0x0                   	// #0
   10c60:	b	107a8 <elf_update@@ELFUTILS_1.0+0x2c50>
   10c64:	ldr	x0, [sp, #144]
   10c68:	bl	3200 <free@plt>
   10c6c:	mov	w1, #0xffffffff            	// #-1
   10c70:	mov	w0, #0x8                   	// #8
   10c74:	str	w1, [sp, #184]
   10c78:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   10c7c:	ldr	w0, [sp, #184]
   10c80:	ldp	x19, x20, [sp, #16]
   10c84:	ldp	x21, x22, [sp, #32]
   10c88:	ldp	x23, x24, [sp, #48]
   10c8c:	ldp	x25, x26, [sp, #64]
   10c90:	ldp	x27, x28, [sp, #80]
   10c94:	ldp	x29, x30, [sp], #208
   10c98:	ret
   10c9c:	adrp	x1, 2a000 <elf_compress_gnu@@ELFUTILS_1.7+0x151b8>
   10ca0:	mov	x24, x28
   10ca4:	add	x1, x1, #0xbd0
   10ca8:	mov	w20, #0x0                   	// #0
   10cac:	str	x1, [sp, #136]
   10cb0:	b	10cd4 <elf_update@@ELFUTILS_1.0+0x317c>
   10cb4:	mov	x0, x23
   10cb8:	mov	w20, #0x1                   	// #1
   10cbc:	cbnz	w21, 10dbc <elf_update@@ELFUTILS_1.0+0x3264>
   10cc0:	cbnz	x2, 10dc8 <elf_update@@ELFUTILS_1.0+0x3270>
   10cc4:	and	w1, w1, #0xfffffffe
   10cc8:	str	w1, [x24, #56]
   10ccc:	ldr	x24, [x24, #48]
   10cd0:	cbz	x24, 10adc <elf_update@@ELFUTILS_1.0+0x2f84>
   10cd4:	ldr	x1, [x24, #24]
   10cd8:	tbnz	x1, #63, 10f50 <elf_update@@ELFUTILS_1.0+0x33f8>
   10cdc:	ldr	x3, [x25, #32]
   10ce0:	mov	x10, x1
   10ce4:	cmp	x1, x3
   10ce8:	b.hi	10f90 <elf_update@@ELFUTILS_1.0+0x3438>  // b.pmore
   10cec:	ldr	x2, [x24, #16]
   10cf0:	sub	x1, x3, x1
   10cf4:	cmp	x2, x1
   10cf8:	b.hi	10fb0 <elf_update@@ELFUTILS_1.0+0x3458>  // b.pmore
   10cfc:	add	x23, x26, x10
   10d00:	cmp	x23, x0
   10d04:	b.ls	10d4c <elf_update@@ELFUTILS_1.0+0x31f4>  // b.plast
   10d08:	cbz	x10, 10d24 <elf_update@@ELFUTILS_1.0+0x31cc>
   10d0c:	ldr	w11, [x27, #56]
   10d10:	ldr	w1, [x28, #156]
   10d14:	ldr	w3, [x24, #56]
   10d18:	orr	w1, w1, w11
   10d1c:	orr	w1, w1, w3
   10d20:	tbz	w1, #0, 10d64 <elf_update@@ELFUTILS_1.0+0x320c>
   10d24:	cmp	x0, x19
   10d28:	b.cs	10d94 <elf_update@@ELFUTILS_1.0+0x323c>  // b.hs, b.nlast
   10d2c:	cmp	x23, x19
   10d30:	adrp	x1, 2b000 <elf_compress_gnu@@ELFUTILS_1.7+0x161b8>
   10d34:	b.cs	10d80 <elf_update@@ELFUTILS_1.0+0x3228>  // b.hs, b.nlast
   10d38:	ldr	w1, [x1, #440]
   10d3c:	sub	x2, x23, x0
   10d40:	bl	3100 <memset@plt>
   10d44:	ldp	x2, x10, [x24, #16]
   10d48:	add	x23, x26, x10
   10d4c:	ldr	w3, [x27, #56]
   10d50:	ldr	w0, [x28, #156]
   10d54:	ldr	w1, [x24, #56]
   10d58:	orr	w0, w0, w3
   10d5c:	orr	w0, w0, w1
   10d60:	tbnz	w0, #0, 10cb4 <elf_update@@ELFUTILS_1.0+0x315c>
   10d64:	add	x0, x23, x2
   10d68:	add	x2, x2, x10
   10d6c:	add	x2, x26, x2
   10d70:	cmp	x0, x2
   10d74:	b.ne	10f70 <elf_update@@ELFUTILS_1.0+0x3418>  // b.any
   10d78:	ldr	w1, [x24, #56]
   10d7c:	b	10cc4 <elf_update@@ELFUTILS_1.0+0x316c>
   10d80:	ldr	w1, [x1, #440]
   10d84:	sub	x2, x19, x0
   10d88:	bl	3100 <memset@plt>
   10d8c:	cmp	x23, x19
   10d90:	b.eq	10d44 <elf_update@@ELFUTILS_1.0+0x31ec>  // b.none
   10d94:	ldr	x0, [sp, #104]
   10d98:	cmp	x23, x0
   10d9c:	b.ls	10d44 <elf_update@@ELFUTILS_1.0+0x31ec>  // b.plast
   10da0:	adrp	x1, 2b000 <elf_compress_gnu@@ELFUTILS_1.7+0x161b8>
   10da4:	cmp	x0, x26
   10da8:	csel	x0, x0, x26, cs  // cs = hs, nlast
   10dac:	ldr	w1, [x1, #440]
   10db0:	sub	x2, x23, x0
   10db4:	bl	3100 <memset@plt>
   10db8:	b	10d44 <elf_update@@ELFUTILS_1.0+0x31ec>
   10dbc:	cbz	x2, 10cc4 <elf_update@@ELFUTILS_1.0+0x316c>
   10dc0:	ldr	w0, [x24, #8]
   10dc4:	cbnz	w0, 10ed0 <elf_update@@ELFUTILS_1.0+0x3378>
   10dc8:	ldr	x1, [x24]
   10dcc:	mov	x0, x23
   10dd0:	mov	w20, #0x1                   	// #1
   10dd4:	bl	3030 <memmove@plt>
   10dd8:	ldp	x2, x10, [x24, #16]
   10ddc:	add	x0, x23, x2
   10de0:	b	10d68 <elf_update@@ELFUTILS_1.0+0x3210>
   10de4:	cmp	x19, x0
   10de8:	b.ls	10e1c <elf_update@@ELFUTILS_1.0+0x32c4>  // b.plast
   10dec:	cmp	x19, x26
   10df0:	adrp	x1, 2b000 <elf_compress_gnu@@ELFUTILS_1.7+0x161b8>
   10df4:	b.ls	10e08 <elf_update@@ELFUTILS_1.0+0x32b0>  // b.plast
   10df8:	ldr	w1, [x1, #440]
   10dfc:	sub	x2, x26, x0
   10e00:	bl	3100 <memset@plt>
   10e04:	b	10ad0 <elf_update@@ELFUTILS_1.0+0x2f78>
   10e08:	ldr	w1, [x1, #440]
   10e0c:	sub	x2, x19, x0
   10e10:	bl	3100 <memset@plt>
   10e14:	cmp	x19, x26
   10e18:	b.eq	10ad0 <elf_update@@ELFUTILS_1.0+0x2f78>  // b.none
   10e1c:	ldr	x0, [sp, #104]
   10e20:	cmp	x0, x26
   10e24:	b.cs	10ad0 <elf_update@@ELFUTILS_1.0+0x2f78>  // b.hs, b.nlast
   10e28:	adrp	x1, 2b000 <elf_compress_gnu@@ELFUTILS_1.7+0x161b8>
   10e2c:	mov	x0, x26
   10e30:	mov	x2, #0x0                   	// #0
   10e34:	ldr	w1, [x1, #440]
   10e38:	bl	3100 <memset@plt>
   10e3c:	b	10ad0 <elf_update@@ELFUTILS_1.0+0x2f78>
   10e40:	mov	w1, #0xffffffff            	// #-1
   10e44:	mov	w0, #0x8                   	// #8
   10e48:	str	w1, [sp, #184]
   10e4c:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   10e50:	ldp	x23, x24, [sp, #48]
   10e54:	b	10c44 <elf_update@@ELFUTILS_1.0+0x30ec>
   10e58:	mov	w0, #0xffffffff            	// #-1
   10e5c:	str	w0, [sp, #184]
   10e60:	b	10c44 <elf_update@@ELFUTILS_1.0+0x30ec>
   10e64:	adrp	x1, 2b000 <elf_compress_gnu@@ELFUTILS_1.7+0x161b8>
   10e68:	add	x3, x4, x3
   10e6c:	add	x0, x0, x3
   10e70:	sub	x2, x2, x4
   10e74:	ldr	w1, [x1, #440]
   10e78:	bl	3100 <memset@plt>
   10e7c:	ldr	x1, [sp, #120]
   10e80:	ldr	x0, [x27]
   10e84:	ldr	x2, [x1, #32]
   10e88:	ldr	x3, [x27, #40]
   10e8c:	ldr	x1, [x27, #88]
   10e90:	b	10808 <elf_update@@ELFUTILS_1.0+0x2cb0>
   10e94:	adrp	x1, 2a000 <elf_compress_gnu@@ELFUTILS_1.7+0x151b8>
   10e98:	mov	w3, #0x1                   	// #1
   10e9c:	ldr	x4, [x1, #3264]
   10ea0:	ldr	x1, [sp, #120]
   10ea4:	blr	x4
   10ea8:	ldr	w1, [x27, #116]
   10eac:	b	10794 <elf_update@@ELFUTILS_1.0+0x2c3c>
   10eb0:	mov	w0, #0x1                   	// #1
   10eb4:	str	w0, [sp, #184]
   10eb8:	b	10c44 <elf_update@@ELFUTILS_1.0+0x30ec>
   10ebc:	ldr	x4, [x22, #288]
   10ec0:	mov	w3, #0x1                   	// #1
   10ec4:	mov	x2, #0x40                  	// #64
   10ec8:	blr	x4
   10ecc:	b	10b74 <elf_update@@ELFUTILS_1.0+0x301c>
   10ed0:	mov	w3, w0
   10ed4:	ldr	x0, [sp, #152]
   10ed8:	add	x0, x0, x3
   10edc:	ldrb	w0, [x0, #27]
   10ee0:	cmp	w0, #0x0
   10ee4:	csel	w1, w20, w0, eq  // eq = none
   10ee8:	and	x1, x1, #0xff
   10eec:	sub	x10, x1, #0x1
   10ef0:	tst	x23, x10
   10ef4:	b.ne	10fd0 <elf_update@@ELFUTILS_1.0+0x3478>  // b.any
   10ef8:	ldr	x4, [sp, #136]
   10efc:	add	x0, x3, #0x1b
   10f00:	ldr	x1, [x24]
   10f04:	mov	w3, w20
   10f08:	ldr	x10, [x4, x0, lsl #3]
   10f0c:	mov	x0, x23
   10f10:	blr	x10
   10f14:	ldp	x2, x10, [x24, #16]
   10f18:	mov	w20, #0x1                   	// #1
   10f1c:	add	x0, x23, x2
   10f20:	b	10d68 <elf_update@@ELFUTILS_1.0+0x3210>
   10f24:	adrp	x1, 2b000 <elf_compress_gnu@@ELFUTILS_1.7+0x161b8>
   10f28:	sub	x2, x2, x0
   10f2c:	ldr	w1, [x1, #440]
   10f30:	bl	3100 <memset@plt>
   10f34:	ldr	w1, [x27, #56]
   10f38:	b	10b20 <elf_update@@ELFUTILS_1.0+0x2fc8>
   10f3c:	adrp	x3, 2a000 <elf_compress_gnu@@ELFUTILS_1.7+0x151b8>
   10f40:	ldr	x4, [x3, #3288]
   10f44:	mov	w3, #0x1                   	// #1
   10f48:	blr	x4
   10f4c:	b	10828 <elf_update@@ELFUTILS_1.0+0x2cd0>
   10f50:	adrp	x3, 16000 <elf_compress_gnu@@ELFUTILS_1.7+0x11b8>
   10f54:	adrp	x1, 16000 <elf_compress_gnu@@ELFUTILS_1.7+0x11b8>
   10f58:	adrp	x0, 16000 <elf_compress_gnu@@ELFUTILS_1.7+0x11b8>
   10f5c:	add	x3, x3, #0x2b8
   10f60:	add	x1, x1, #0x10
   10f64:	add	x0, x0, #0x1b0
   10f68:	mov	w2, #0x13f                 	// #319
   10f6c:	bl	3330 <__assert_fail@plt>
   10f70:	adrp	x3, 16000 <elf_compress_gnu@@ELFUTILS_1.7+0x11b8>
   10f74:	adrp	x1, 16000 <elf_compress_gnu@@ELFUTILS_1.7+0x11b8>
   10f78:	adrp	x0, 16000 <elf_compress_gnu@@ELFUTILS_1.7+0x11b8>
   10f7c:	add	x3, x3, #0x2b8
   10f80:	add	x1, x1, #0x10
   10f84:	add	x0, x0, #0x240
   10f88:	mov	w2, #0x197                 	// #407
   10f8c:	bl	3330 <__assert_fail@plt>
   10f90:	adrp	x3, 16000 <elf_compress_gnu@@ELFUTILS_1.7+0x11b8>
   10f94:	adrp	x1, 16000 <elf_compress_gnu@@ELFUTILS_1.7+0x11b8>
   10f98:	adrp	x0, 16000 <elf_compress_gnu@@ELFUTILS_1.7+0x11b8>
   10f9c:	add	x3, x3, #0x2b8
   10fa0:	add	x1, x1, #0x10
   10fa4:	add	x0, x0, #0x1c8
   10fa8:	mov	w2, #0x140                 	// #320
   10fac:	bl	3330 <__assert_fail@plt>
   10fb0:	adrp	x3, 16000 <elf_compress_gnu@@ELFUTILS_1.7+0x11b8>
   10fb4:	adrp	x1, 16000 <elf_compress_gnu@@ELFUTILS_1.7+0x11b8>
   10fb8:	adrp	x0, 16000 <elf_compress_gnu@@ELFUTILS_1.7+0x11b8>
   10fbc:	add	x3, x3, #0x2b8
   10fc0:	add	x1, x1, #0x10
   10fc4:	add	x0, x0, #0x1f8
   10fc8:	mov	w2, #0x141                 	// #321
   10fcc:	bl	3330 <__assert_fail@plt>
   10fd0:	str	x3, [sp, #176]
   10fd4:	cmp	w0, #0x7
   10fd8:	b.hi	11030 <elf_update@@ELFUTILS_1.0+0x34d8>  // b.pmore
   10fdc:	mov	x0, x2
   10fe0:	str	x2, [sp, #168]
   10fe4:	bl	30c0 <malloc@plt>
   10fe8:	mov	x20, x0
   10fec:	ldp	x2, x3, [sp, #168]
   10ff0:	cbz	x20, 11044 <elf_update@@ELFUTILS_1.0+0x34ec>
   10ff4:	ldr	x4, [sp, #136]
   10ff8:	add	x0, x3, #0x1b
   10ffc:	ldr	x1, [x24]
   11000:	mov	w3, #0x1                   	// #1
   11004:	ldr	x10, [x4, x0, lsl #3]
   11008:	mov	x0, x20
   1100c:	str	x2, [sp, #168]
   11010:	blr	x10
   11014:	ldr	x2, [sp, #168]
   11018:	mov	x1, x20
   1101c:	mov	x0, x23
   11020:	bl	3020 <memcpy@plt>
   11024:	mov	x0, x20
   11028:	bl	3200 <free@plt>
   1102c:	b	10f14 <elf_update@@ELFUTILS_1.0+0x33bc>
   11030:	ldr	x0, [sp, #160]
   11034:	str	x2, [sp, #168]
   11038:	bl	3130 <posix_memalign@plt>
   1103c:	ldp	x2, x3, [sp, #168]
   11040:	cbz	w0, 11068 <elf_update@@ELFUTILS_1.0+0x3510>
   11044:	ldr	x0, [sp, #144]
   11048:	bl	3200 <free@plt>
   1104c:	mov	w1, #0x1                   	// #1
   11050:	mov	w0, #0x8                   	// #8
   11054:	str	w1, [sp, #184]
   11058:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   1105c:	ldp	x23, x24, [sp, #48]
   11060:	ldp	x25, x26, [sp, #64]
   11064:	b	10c44 <elf_update@@ELFUTILS_1.0+0x30ec>
   11068:	ldr	x20, [sp, #200]
   1106c:	b	10ff0 <elf_update@@ELFUTILS_1.0+0x3498>
   11070:	adrp	x3, 16000 <elf_compress_gnu@@ELFUTILS_1.7+0x11b8>
   11074:	adrp	x1, 16000 <elf_compress_gnu@@ELFUTILS_1.7+0x11b8>
   11078:	adrp	x0, 16000 <elf_compress_gnu@@ELFUTILS_1.7+0x11b8>
   1107c:	add	x3, x3, #0x2b8
   11080:	add	x1, x1, #0x10
   11084:	add	x0, x0, #0x28
   11088:	mov	w2, #0x8c                  	// #140
   1108c:	stp	x23, x24, [sp, #48]
   11090:	stp	x25, x26, [sp, #64]
   11094:	bl	3330 <__assert_fail@plt>
   11098:	adrp	x3, 16000 <elf_compress_gnu@@ELFUTILS_1.7+0x11b8>
   1109c:	adrp	x1, 16000 <elf_compress_gnu@@ELFUTILS_1.7+0x11b8>
   110a0:	adrp	x0, 16000 <elf_compress_gnu@@ELFUTILS_1.7+0x11b8>
   110a4:	add	x3, x3, #0x2b8
   110a8:	add	x1, x1, #0x10
   110ac:	add	x0, x0, #0x78
   110b0:	mov	w2, #0xaf                  	// #175
   110b4:	stp	x23, x24, [sp, #48]
   110b8:	stp	x25, x26, [sp, #64]
   110bc:	bl	3330 <__assert_fail@plt>
   110c0:	adrp	x3, 16000 <elf_compress_gnu@@ELFUTILS_1.7+0x11b8>
   110c4:	adrp	x1, 16000 <elf_compress_gnu@@ELFUTILS_1.7+0x11b8>
   110c8:	adrp	x0, 16000 <elf_compress_gnu@@ELFUTILS_1.7+0x11b8>
   110cc:	add	x3, x3, #0x2b8
   110d0:	add	x1, x1, #0x10
   110d4:	add	x0, x0, #0x190
   110d8:	mov	w2, #0x12f                 	// #303
   110dc:	bl	3330 <__assert_fail@plt>
   110e0:	adrp	x3, 16000 <elf_compress_gnu@@ELFUTILS_1.7+0x11b8>
   110e4:	adrp	x1, 16000 <elf_compress_gnu@@ELFUTILS_1.7+0x11b8>
   110e8:	adrp	x0, 16000 <elf_compress_gnu@@ELFUTILS_1.7+0x11b8>
   110ec:	add	x3, x3, #0x2b8
   110f0:	add	x1, x1, #0x10
   110f4:	add	x0, x0, #0xc8
   110f8:	mov	w2, #0xf8                  	// #248
   110fc:	bl	3330 <__assert_fail@plt>
   11100:	adrp	x3, 16000 <elf_compress_gnu@@ELFUTILS_1.7+0x11b8>
   11104:	adrp	x1, 16000 <elf_compress_gnu@@ELFUTILS_1.7+0x11b8>
   11108:	adrp	x0, 16000 <elf_compress_gnu@@ELFUTILS_1.7+0x11b8>
   1110c:	add	x3, x3, #0x2b8
   11110:	add	x1, x1, #0x10
   11114:	add	x0, x0, #0x120
   11118:	mov	w2, #0xfa                  	// #250
   1111c:	bl	3330 <__assert_fail@plt>
   11120:	mov	x12, #0x9100                	// #37120
   11124:	sub	sp, sp, x12
   11128:	stp	x29, x30, [sp]
   1112c:	mov	x29, sp
   11130:	stp	x19, x20, [sp, #16]
   11134:	mov	x19, x0
   11138:	stp	x21, x22, [sp, #32]
   1113c:	str	w1, [sp, #124]
   11140:	ldr	w1, [x0, #56]
   11144:	ldr	x22, [x0, #72]
   11148:	stp	x23, x24, [sp, #48]
   1114c:	ldr	w0, [x0, #116]
   11150:	stp	x25, x26, [sp, #64]
   11154:	orr	w0, w0, w1
   11158:	and	w1, w0, #0x1
   1115c:	str	w1, [sp, #144]
   11160:	str	x2, [sp, #152]
   11164:	str	xzr, [sp, #240]
   11168:	tbz	w0, #0, 1122c <elf_update@@ELFUTILS_1.0+0x36d4>
   1116c:	adrp	x0, 15000 <elf_compress_gnu@@ELFUTILS_1.7+0x1b8>
   11170:	str	x0, [sp, #104]
   11174:	add	x0, x0, #0x960
   11178:	ldr	x2, [x0, #240]
   1117c:	cmp	x2, #0x40
   11180:	b.ne	11928 <elf_update@@ELFUTILS_1.0+0x3dd0>  // b.any
   11184:	ldr	w0, [sp, #124]
   11188:	mov	x21, x22
   1118c:	cbnz	w0, 11950 <elf_update@@ELFUTILS_1.0+0x3df8>
   11190:	ldr	w25, [x19, #36]
   11194:	mov	x26, x21
   11198:	mov	x20, #0x0                   	// #0
   1119c:	mov	x23, #0x40                  	// #64
   111a0:	mov	x3, x20
   111a4:	sub	x2, x23, x20
   111a8:	mov	x1, x26
   111ac:	mov	w0, w25
   111b0:	bl	3220 <pwrite@plt>
   111b4:	cmn	x0, #0x1
   111b8:	b.eq	111f0 <elf_update@@ELFUTILS_1.0+0x3698>  // b.none
   111bc:	cmp	x0, #0x0
   111c0:	b.le	11200 <elf_update@@ELFUTILS_1.0+0x36a8>
   111c4:	add	x20, x20, x0
   111c8:	cmp	x20, #0x3f
   111cc:	b.gt	115d4 <elf_update@@ELFUTILS_1.0+0x3a7c>
   111d0:	add	x26, x21, x20
   111d4:	mov	x3, x20
   111d8:	sub	x2, x23, x20
   111dc:	mov	x1, x26
   111e0:	mov	w0, w25
   111e4:	bl	3220 <pwrite@plt>
   111e8:	cmn	x0, #0x1
   111ec:	b.ne	111bc <elf_update@@ELFUTILS_1.0+0x3664>  // b.any
   111f0:	bl	3340 <__errno_location@plt>
   111f4:	ldr	w0, [x0]
   111f8:	cmp	w0, #0x4
   111fc:	b.eq	111a0 <elf_update@@ELFUTILS_1.0+0x3648>  // b.none
   11200:	mov	w0, #0x14                  	// #20
   11204:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   11208:	ldr	w0, [sp, #144]
   1120c:	mov	x12, #0x9100                	// #37120
   11210:	ldp	x29, x30, [sp]
   11214:	ldp	x19, x20, [sp, #16]
   11218:	ldp	x21, x22, [sp, #32]
   1121c:	ldp	x23, x24, [sp, #48]
   11220:	ldp	x25, x26, [sp, #64]
   11224:	add	sp, sp, x12
   11228:	ret
   1122c:	adrp	x0, 15000 <elf_compress_gnu@@ELFUTILS_1.7+0x1b8>
   11230:	str	x0, [sp, #104]
   11234:	str	wzr, [sp, #132]
   11238:	ldr	x0, [sp, #104]
   1123c:	add	x0, x0, #0x960
   11240:	ldr	x0, [x0, #264]
   11244:	cmp	x0, #0x38
   11248:	b.ne	11aa0 <elf_update@@ELFUTILS_1.0+0x3f48>  // b.any
   1124c:	add	x1, sp, #0xf8
   11250:	mov	x0, x19
   11254:	bl	13338 <gelf_update_verdaux@@ELFUTILS_1.0+0x88>
   11258:	str	w0, [sp, #144]
   1125c:	cbnz	w0, 118c8 <elf_update@@ELFUTILS_1.0+0x3d70>
   11260:	ldr	x21, [x19, #88]
   11264:	stp	x27, x28, [sp, #80]
   11268:	cbz	x21, 11830 <elf_update@@ELFUTILS_1.0+0x3cd8>
   1126c:	ldr	w1, [x19, #56]
   11270:	ldr	w0, [x19, #120]
   11274:	ldr	x2, [x22, #32]
   11278:	orr	w0, w0, w1
   1127c:	and	w27, w0, #0x1
   11280:	tbz	w0, #0, 1137c <elf_update@@ELFUTILS_1.0+0x3824>
   11284:	ldrh	w1, [x22, #52]
   11288:	cmp	x1, x2
   1128c:	b.cc	1189c <elf_update@@ELFUTILS_1.0+0x3d44>  // b.lo, b.ul, b.last
   11290:	ldr	x0, [sp, #248]
   11294:	lsl	x20, x0, #3
   11298:	sub	x20, x20, x0
   1129c:	ldr	w0, [sp, #124]
   112a0:	lsl	x20, x20, #3
   112a4:	cbnz	w0, 11a2c <elf_update@@ELFUTILS_1.0+0x3ed4>
   112a8:	str	xzr, [sp, #112]
   112ac:	ldr	x0, [x22, #32]
   112b0:	mov	x25, x20
   112b4:	ldr	w23, [x19, #36]
   112b8:	mov	x24, x21
   112bc:	mov	x28, x0
   112c0:	mov	x26, #0x0                   	// #0
   112c4:	str	x0, [sp, #96]
   112c8:	mov	x3, x28
   112cc:	mov	x2, x25
   112d0:	mov	x1, x24
   112d4:	mov	w0, w23
   112d8:	bl	3220 <pwrite@plt>
   112dc:	cmn	x0, #0x1
   112e0:	b.eq	11324 <elf_update@@ELFUTILS_1.0+0x37cc>  // b.none
   112e4:	cmp	x0, #0x0
   112e8:	b.le	11348 <elf_update@@ELFUTILS_1.0+0x37f0>
   112ec:	add	x26, x26, x0
   112f0:	cmp	x26, x20
   112f4:	b.cs	1134c <elf_update@@ELFUTILS_1.0+0x37f4>  // b.hs, b.nlast
   112f8:	ldr	x0, [sp, #96]
   112fc:	sub	x25, x20, x26
   11300:	add	x24, x21, x26
   11304:	mov	x2, x25
   11308:	add	x28, x0, x26
   1130c:	mov	x1, x24
   11310:	mov	x3, x28
   11314:	mov	w0, w23
   11318:	bl	3220 <pwrite@plt>
   1131c:	cmn	x0, #0x1
   11320:	b.ne	112e4 <elf_update@@ELFUTILS_1.0+0x378c>  // b.any
   11324:	bl	3340 <__errno_location@plt>
   11328:	ldr	w0, [x0]
   1132c:	cmp	w0, #0x4
   11330:	b.eq	112c8 <elf_update@@ELFUTILS_1.0+0x3770>  // b.none
   11334:	mov	w0, #0x14                  	// #20
   11338:	str	w27, [sp, #144]
   1133c:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   11340:	ldp	x27, x28, [sp, #80]
   11344:	b	11208 <elf_update@@ELFUTILS_1.0+0x36b0>
   11348:	csel	x26, x26, x0, eq  // eq = none
   1134c:	cmp	x20, x26
   11350:	b.ne	11334 <elf_update@@ELFUTILS_1.0+0x37dc>  // b.any
   11354:	ldr	x0, [sp, #112]
   11358:	bl	3200 <free@plt>
   1135c:	ldr	w0, [x19, #120]
   11360:	ldr	x1, [x19, #88]
   11364:	and	w0, w0, #0xfffffffe
   11368:	str	w0, [x19, #120]
   1136c:	mov	w0, #0x1                   	// #1
   11370:	str	w0, [sp, #132]
   11374:	cbz	x1, 11830 <elf_update@@ELFUTILS_1.0+0x3cd8>
   11378:	ldr	x2, [x22, #32]
   1137c:	ldr	x21, [sp, #248]
   11380:	lsl	x5, x21, #3
   11384:	sub	x5, x5, x21
   11388:	add	x21, x2, x5, lsl #3
   1138c:	ldr	x1, [sp, #152]
   11390:	cbz	x1, 11400 <elf_update@@ELFUTILS_1.0+0x38a8>
   11394:	mov	x0, #0xe38e                	// #58254
   11398:	movk	x0, #0x8e38, lsl #16
   1139c:	movk	x0, #0x38e3, lsl #32
   113a0:	movk	x0, #0x38e, lsl #48
   113a4:	cmp	x1, x0
   113a8:	b.hi	118b8 <elf_update@@ELFUTILS_1.0+0x3d60>  // b.pmore
   113ac:	ldr	x0, [x22, #40]
   113b0:	str	x0, [sp, #232]
   113b4:	ldr	x0, [x19, #40]
   113b8:	str	x0, [sp, #224]
   113bc:	ldr	w0, [sp, #124]
   113c0:	cbnz	w0, 11414 <elf_update@@ELFUTILS_1.0+0x38bc>
   113c4:	ldr	x0, [x19, #80]
   113c8:	str	x0, [sp, #176]
   113cc:	cbz	x0, 11414 <elf_update@@ELFUTILS_1.0+0x38bc>
   113d0:	ldr	w0, [x19, #56]
   113d4:	str	w0, [sp, #136]
   113d8:	tbnz	w0, #0, 11414 <elf_update@@ELFUTILS_1.0+0x38bc>
   113dc:	str	xzr, [sp, #208]
   113e0:	b	11434 <elf_update@@ELFUTILS_1.0+0x38dc>
   113e4:	csel	x0, x26, x0, eq  // eq = none
   113e8:	cmp	x20, x0
   113ec:	b.ne	117f4 <elf_update@@ELFUTILS_1.0+0x3c9c>  // b.any
   113f0:	ldr	x0, [sp, #208]
   113f4:	bl	3200 <free@plt>
   113f8:	ldr	x0, [sp, #200]
   113fc:	bl	3200 <free@plt>
   11400:	ldr	w0, [x19, #56]
   11404:	ldp	x27, x28, [sp, #80]
   11408:	and	w0, w0, #0xfffffffe
   1140c:	str	w0, [x19, #56]
   11410:	b	11208 <elf_update@@ELFUTILS_1.0+0x36b0>
   11414:	ldr	x0, [sp, #152]
   11418:	lsl	x0, x0, #6
   1141c:	bl	30c0 <malloc@plt>
   11420:	str	x0, [sp, #176]
   11424:	cbz	x0, 118ec <elf_update@@ELFUTILS_1.0+0x3d94>
   11428:	str	x0, [sp, #208]
   1142c:	ldr	w0, [x19, #56]
   11430:	str	w0, [sp, #136]
   11434:	ldr	x0, [sp, #152]
   11438:	add	x20, x19, #0xc8
   1143c:	lsl	x22, x0, #3
   11440:	mov	x0, x22
   11444:	bl	30c0 <malloc@plt>
   11448:	str	x0, [sp, #200]
   1144c:	mov	x1, x0
   11450:	cbz	x0, 118e4 <elf_update@@ELFUTILS_1.0+0x3d8c>
   11454:	nop
   11458:	ldr	w0, [x20]
   1145c:	cbz	x0, 11478 <elf_update@@ELFUTILS_1.0+0x3920>
   11460:	add	x0, x1, x0, lsl #3
   11464:	add	x2, x20, #0x10
   11468:	str	x2, [x1], #8
   1146c:	add	x2, x2, #0xd0
   11470:	cmp	x1, x0
   11474:	b.ne	11468 <elf_update@@ELFUTILS_1.0+0x3910>  // b.any
   11478:	ldr	x20, [x20, #8]
   1147c:	cbnz	x20, 11458 <elf_update@@ELFUTILS_1.0+0x3900>
   11480:	ldr	x0, [sp, #200]
   11484:	adrp	x3, 10000 <elf_update@@ELFUTILS_1.0+0x24a8>
   11488:	add	x3, x3, #0x538
   1148c:	str	x0, [sp, #112]
   11490:	sub	x1, x1, x0
   11494:	add	x2, x22, x0
   11498:	str	x2, [sp, #160]
   1149c:	mov	x2, #0x8                   	// #8
   114a0:	asr	x1, x1, #3
   114a4:	bl	30b0 <qsort@plt>
   114a8:	mov	x0, #0x1100                	// #4352
   114ac:	add	x0, sp, x0
   114b0:	mov	x22, x21
   114b4:	str	x0, [sp, #168]
   114b8:	adrp	x0, 2a000 <elf_compress_gnu@@ELFUTILS_1.7+0x151b8>
   114bc:	add	x0, x0, #0xbd0
   114c0:	str	x0, [sp, #216]
   114c4:	b	11548 <elf_update@@ELFUTILS_1.0+0x39f0>
   114c8:	ldr	w0, [x21, #156]
   114cc:	tbnz	w0, #0, 11ac8 <elf_update@@ELFUTILS_1.0+0x3f70>
   114d0:	ldr	w0, [sp, #124]
   114d4:	cbnz	w0, 115ac <elf_update@@ELFUTILS_1.0+0x3a54>
   114d8:	ldr	x0, [x19, #80]
   114dc:	cbz	x0, 114e8 <elf_update@@ELFUTILS_1.0+0x3990>
   114e0:	ldr	w0, [x19, #56]
   114e4:	tbz	w0, #0, 11518 <elf_update@@ELFUTILS_1.0+0x39c0>
   114e8:	ldr	x0, [x21, #128]
   114ec:	ldr	x2, [sp, #176]
   114f0:	ldr	x1, [x21, #144]
   114f4:	add	x0, x2, x0, lsl #6
   114f8:	ldp	x2, x3, [x1]
   114fc:	stp	x2, x3, [x0]
   11500:	ldp	x2, x3, [x1, #16]
   11504:	stp	x2, x3, [x0, #16]
   11508:	ldp	x2, x3, [x1, #32]
   1150c:	stp	x2, x3, [x0, #32]
   11510:	ldp	x2, x3, [x1, #48]
   11514:	stp	x2, x3, [x0, #48]
   11518:	ldr	w0, [x21, #152]
   1151c:	ldr	x1, [sp, #112]
   11520:	add	x2, x1, #0x8
   11524:	and	w1, w0, #0xfffffffe
   11528:	str	w1, [x21, #152]
   1152c:	ldr	x1, [sp, #160]
   11530:	str	x2, [sp, #112]
   11534:	cmp	x1, x2
   11538:	ldr	w1, [sp, #136]
   1153c:	orr	w0, w1, w0
   11540:	str	w0, [sp, #136]
   11544:	b.eq	11974 <elf_update@@ELFUTILS_1.0+0x3e1c>  // b.none
   11548:	ldr	x0, [sp, #112]
   1154c:	ldr	x21, [x0]
   11550:	ldr	x0, [x21, #128]
   11554:	cbz	x0, 114c8 <elf_update@@ELFUTILS_1.0+0x3970>
   11558:	ldr	x20, [x21, #144]
   1155c:	ldr	w0, [x20, #4]
   11560:	cmp	w0, #0x8
   11564:	b.eq	114d0 <elf_update@@ELFUTILS_1.0+0x3978>  // b.none
   11568:	ldr	x1, [x20, #24]
   1156c:	ldr	x26, [x19, #40]
   11570:	ldr	x0, [x21, #64]
   11574:	add	x1, x26, x1
   11578:	str	x1, [sp, #104]
   1157c:	cbnz	x0, 115fc <elf_update@@ELFUTILS_1.0+0x3aa4>
   11580:	ldr	w0, [sp, #132]
   11584:	cmp	w0, #0x0
   11588:	ldr	x0, [sp, #104]
   1158c:	ccmp	x0, x22, #0x4, ne  // ne = any
   11590:	b.gt	1187c <elf_update@@ELFUTILS_1.0+0x3d24>
   11594:	ldr	x5, [x20, #32]
   11598:	str	wzr, [sp, #132]
   1159c:	ldr	x0, [sp, #104]
   115a0:	add	x22, x0, x5
   115a4:	ldr	w0, [sp, #124]
   115a8:	cbz	w0, 114d8 <elf_update@@ELFUTILS_1.0+0x3980>
   115ac:	ldr	x4, [sp, #216]
   115b0:	mov	w3, #0x1                   	// #1
   115b4:	ldr	x0, [x21, #128]
   115b8:	mov	x2, #0x40                  	// #64
   115bc:	ldr	x1, [x21, #144]
   115c0:	ldr	x5, [sp, #176]
   115c4:	ldr	x4, [x4, #288]
   115c8:	add	x0, x5, x0, lsl #6
   115cc:	blr	x4
   115d0:	b	11518 <elf_update@@ELFUTILS_1.0+0x39c0>
   115d4:	cmp	x20, #0x40
   115d8:	b.ne	11200 <elf_update@@ELFUTILS_1.0+0x36a8>  // b.any
   115dc:	ldr	x1, [x19, #88]
   115e0:	ldr	w0, [x19, #116]
   115e4:	cmp	x1, #0x0
   115e8:	and	w0, w0, #0xfffffffe
   115ec:	cset	w1, eq  // eq = none
   115f0:	str	w0, [x19, #116]
   115f4:	str	w1, [sp, #132]
   115f8:	b	11238 <elf_update@@ELFUTILS_1.0+0x36e0>
   115fc:	add	x0, sp, #0xf0
   11600:	mov	x1, x22
   11604:	mov	w20, #0x0                   	// #0
   11608:	mov	x22, x21
   1160c:	str	x19, [sp, #96]
   11610:	str	x0, [sp, #184]
   11614:	add	x0, sp, #0x100
   11618:	str	x0, [sp, #192]
   1161c:	b	11664 <elf_update@@ELFUTILS_1.0+0x3b0c>
   11620:	cmp	x0, #0x0
   11624:	ldr	w0, [sp, #132]
   11628:	ccmp	w0, #0x0, #0x4, eq  // eq = none
   1162c:	b.ne	11798 <elf_update@@ELFUTILS_1.0+0x3c40>  // b.any
   11630:	ldr	x0, [sp, #96]
   11634:	ldr	w2, [x21, #156]
   11638:	ldr	w3, [x0, #56]
   1163c:	ldr	w0, [x22, #56]
   11640:	orr	w2, w2, w3
   11644:	orr	w2, w2, w0
   11648:	tbnz	w2, #0, 11798 <elf_update@@ELFUTILS_1.0+0x3c40>
   1164c:	ldr	x27, [x22, #16]
   11650:	and	w0, w0, #0xfffffffe
   11654:	str	w0, [x22, #56]
   11658:	add	x1, x26, x27
   1165c:	ldr	x22, [x22, #48]
   11660:	cbz	x22, 118d4 <elf_update@@ELFUTILS_1.0+0x3d7c>
   11664:	ldr	x0, [x22, #24]
   11668:	ldr	x2, [sp, #104]
   1166c:	add	x26, x0, x2
   11670:	cmp	x26, x1
   11674:	b.gt	11620 <elf_update@@ELFUTILS_1.0+0x3ac8>
   11678:	ldr	x0, [sp, #96]
   1167c:	ldr	w1, [x21, #156]
   11680:	ldr	x27, [x22, #16]
   11684:	ldr	w2, [x0, #56]
   11688:	ldr	w0, [x22, #56]
   1168c:	orr	w1, w1, w2
   11690:	orr	w1, w1, w0
   11694:	tbz	w1, #0, 11650 <elf_update@@ELFUTILS_1.0+0x3af8>
   11698:	ldr	w0, [sp, #124]
   1169c:	ldr	x20, [x22]
   116a0:	cbnz	w0, 11840 <elf_update@@ELFUTILS_1.0+0x3ce8>
   116a4:	ldr	x0, [sp, #168]
   116a8:	cmp	x20, x0
   116ac:	cset	w0, ne  // ne = any
   116b0:	str	w0, [sp, #148]
   116b4:	ldr	x0, [sp, #96]
   116b8:	mov	x25, x26
   116bc:	mov	x24, x20
   116c0:	mov	x26, x20
   116c4:	mov	x19, x27
   116c8:	mov	x20, x25
   116cc:	ldr	w0, [x0, #36]
   116d0:	mov	x28, #0x0                   	// #0
   116d4:	str	w0, [sp, #128]
   116d8:	ldr	w0, [sp, #128]
   116dc:	mov	x3, x25
   116e0:	mov	x2, x19
   116e4:	mov	x1, x24
   116e8:	bl	3220 <pwrite@plt>
   116ec:	mov	x23, x0
   116f0:	cmn	x0, #0x1
   116f4:	b.eq	1173c <elf_update@@ELFUTILS_1.0+0x3be4>  // b.none
   116f8:	cmp	x0, #0x0
   116fc:	b.le	1181c <elf_update@@ELFUTILS_1.0+0x3cc4>
   11700:	add	x28, x28, x0
   11704:	cmp	x28, x27
   11708:	mov	x2, x28
   1170c:	b.cs	117c0 <elf_update@@ELFUTILS_1.0+0x3c68>  // b.hs, b.nlast
   11710:	ldr	w0, [sp, #128]
   11714:	add	x25, x28, x20
   11718:	sub	x19, x27, x28
   1171c:	add	x24, x26, x28
   11720:	mov	x3, x25
   11724:	mov	x2, x19
   11728:	mov	x1, x24
   1172c:	bl	3220 <pwrite@plt>
   11730:	mov	x23, x0
   11734:	cmn	x0, #0x1
   11738:	b.ne	116f8 <elf_update@@ELFUTILS_1.0+0x3ba0>  // b.any
   1173c:	bl	3340 <__errno_location@plt>
   11740:	ldr	w0, [x0]
   11744:	cmp	w0, #0x4
   11748:	b.eq	116d8 <elf_update@@ELFUTILS_1.0+0x3b80>  // b.none
   1174c:	mov	x0, x20
   11750:	mov	x2, x23
   11754:	mov	x20, x26
   11758:	mov	x26, x0
   1175c:	ldr	x0, [x22]
   11760:	ldr	x4, [x22, #16]
   11764:	cmp	x0, x20
   11768:	ldr	w0, [sp, #148]
   1176c:	csel	w27, w0, wzr, ne  // ne = any
   11770:	cmp	x4, x2
   11774:	b.ne	117e8 <elf_update@@ELFUTILS_1.0+0x3c90>  // b.any
   11778:	cbz	w27, 11788 <elf_update@@ELFUTILS_1.0+0x3c30>
   1177c:	mov	x0, x20
   11780:	bl	3200 <free@plt>
   11784:	ldr	x4, [x22, #16]
   11788:	mov	x27, x4
   1178c:	ldr	w0, [x22, #56]
   11790:	mov	w20, #0x1                   	// #1
   11794:	b	11650 <elf_update@@ELFUTILS_1.0+0x3af8>
   11798:	ldr	x0, [sp, #96]
   1179c:	sub	x2, x26, x1
   117a0:	ldp	x4, x3, [sp, #184]
   117a4:	ldr	w0, [x0, #36]
   117a8:	bl	105a0 <elf_update@@ELFUTILS_1.0+0x2a48>
   117ac:	cbnz	w0, 117fc <elf_update@@ELFUTILS_1.0+0x3ca4>
   117b0:	ldr	x7, [x22, #24]
   117b4:	ldr	x0, [sp, #104]
   117b8:	add	x26, x0, x7
   117bc:	b	11678 <elf_update@@ELFUTILS_1.0+0x3b20>
   117c0:	mov	x0, x20
   117c4:	mov	x20, x26
   117c8:	mov	x26, x0
   117cc:	ldr	x0, [x22]
   117d0:	ldr	x4, [x22, #16]
   117d4:	cmp	x0, x20
   117d8:	ldr	w0, [sp, #148]
   117dc:	csel	w27, w0, wzr, ne  // ne = any
   117e0:	cmp	x4, x2
   117e4:	b.eq	11778 <elf_update@@ELFUTILS_1.0+0x3c20>  // b.none
   117e8:	cbz	w27, 117f4 <elf_update@@ELFUTILS_1.0+0x3c9c>
   117ec:	mov	x0, x20
   117f0:	bl	3200 <free@plt>
   117f4:	mov	w0, #0x14                  	// #20
   117f8:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   117fc:	ldr	x0, [sp, #208]
   11800:	mov	w1, #0x1                   	// #1
   11804:	str	w1, [sp, #144]
   11808:	bl	3200 <free@plt>
   1180c:	ldr	x0, [sp, #200]
   11810:	bl	3200 <free@plt>
   11814:	ldp	x27, x28, [sp, #80]
   11818:	b	11208 <elf_update@@ELFUTILS_1.0+0x36b0>
   1181c:	mov	x0, x20
   11820:	csel	x2, x28, x23, eq  // eq = none
   11824:	mov	x20, x26
   11828:	mov	x26, x0
   1182c:	b	1175c <elf_update@@ELFUTILS_1.0+0x3c04>
   11830:	ldr	x0, [sp, #104]
   11834:	add	x24, x0, #0x960
   11838:	ldr	x21, [x24, #240]
   1183c:	b	1138c <elf_update@@ELFUTILS_1.0+0x3834>
   11840:	str	wzr, [sp, #148]
   11844:	cmp	x27, #0x8, lsl #12
   11848:	ldr	x0, [sp, #168]
   1184c:	b.hi	11904 <elf_update@@ELFUTILS_1.0+0x3dac>  // b.pmore
   11850:	ldr	w6, [x22, #8]
   11854:	mov	x2, x27
   11858:	ldr	x5, [sp, #216]
   1185c:	add	x4, x6, #0x1b
   11860:	mov	x1, x20
   11864:	mov	w3, #0x1                   	// #1
   11868:	mov	x20, x0
   1186c:	ldr	x4, [x5, x4, lsl #3]
   11870:	blr	x4
   11874:	ldr	x27, [x22, #16]
   11878:	b	116b4 <elf_update@@ELFUTILS_1.0+0x3b5c>
   1187c:	sub	x2, x0, x22
   11880:	ldr	w0, [x19, #36]
   11884:	add	x4, sp, #0xf0
   11888:	add	x3, sp, #0x100
   1188c:	mov	x1, x22
   11890:	bl	105a0 <elf_update@@ELFUTILS_1.0+0x2a48>
   11894:	cbz	w0, 11594 <elf_update@@ELFUTILS_1.0+0x3a3c>
   11898:	b	117fc <elf_update@@ELFUTILS_1.0+0x3ca4>
   1189c:	ldr	w0, [x19, #36]
   118a0:	sub	x2, x2, x1
   118a4:	add	x4, sp, #0xf0
   118a8:	add	x3, sp, #0x100
   118ac:	bl	105a0 <elf_update@@ELFUTILS_1.0+0x2a48>
   118b0:	cbz	w0, 11290 <elf_update@@ELFUTILS_1.0+0x3738>
   118b4:	nop
   118b8:	mov	w0, #0x1                   	// #1
   118bc:	str	w0, [sp, #144]
   118c0:	ldp	x27, x28, [sp, #80]
   118c4:	b	11208 <elf_update@@ELFUTILS_1.0+0x36b0>
   118c8:	mov	w0, #0xffffffff            	// #-1
   118cc:	str	w0, [sp, #144]
   118d0:	b	11208 <elf_update@@ELFUTILS_1.0+0x36b0>
   118d4:	mov	x22, x1
   118d8:	str	w20, [sp, #132]
   118dc:	ldr	x19, [sp, #96]
   118e0:	b	114d0 <elf_update@@ELFUTILS_1.0+0x3978>
   118e4:	ldr	x0, [sp, #208]
   118e8:	bl	3200 <free@plt>
   118ec:	mov	w1, #0xffffffff            	// #-1
   118f0:	mov	w0, #0x8                   	// #8
   118f4:	str	w1, [sp, #144]
   118f8:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   118fc:	ldp	x27, x28, [sp, #80]
   11900:	b	11208 <elf_update@@ELFUTILS_1.0+0x36b0>
   11904:	mov	x0, x27
   11908:	bl	30c0 <malloc@plt>
   1190c:	cbz	x0, 1191c <elf_update@@ELFUTILS_1.0+0x3dc4>
   11910:	mov	w1, #0x1                   	// #1
   11914:	str	w1, [sp, #148]
   11918:	b	11850 <elf_update@@ELFUTILS_1.0+0x3cf8>
   1191c:	mov	w0, #0x8                   	// #8
   11920:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   11924:	b	117fc <elf_update@@ELFUTILS_1.0+0x3ca4>
   11928:	adrp	x3, 16000 <elf_compress_gnu@@ELFUTILS_1.7+0x11b8>
   1192c:	add	x3, x3, #0x2b8
   11930:	adrp	x1, 16000 <elf_compress_gnu@@ELFUTILS_1.7+0x11b8>
   11934:	adrp	x0, 16000 <elf_compress_gnu@@ELFUTILS_1.7+0x11b8>
   11938:	add	x3, x3, #0x18
   1193c:	add	x1, x1, #0x10
   11940:	add	x0, x0, #0x28
   11944:	mov	w2, #0x228                 	// #552
   11948:	stp	x27, x28, [sp, #80]
   1194c:	bl	3330 <__assert_fail@plt>
   11950:	adrp	x1, 2a000 <elf_compress_gnu@@ELFUTILS_1.7+0x151b8>
   11954:	mov	x3, #0x1100                	// #4352
   11958:	add	x0, sp, x3
   1195c:	mov	w3, #0x1                   	// #1
   11960:	ldr	x4, [x1, #3264]
   11964:	mov	x21, x0
   11968:	mov	x1, x22
   1196c:	blr	x4
   11970:	b	11190 <elf_update@@ELFUTILS_1.0+0x3638>
   11974:	ldp	x0, x1, [sp, #224]
   11978:	mov	x21, x22
   1197c:	add	x22, x0, x1
   11980:	ldr	w1, [x19, #56]
   11984:	cmp	x21, x22
   11988:	cset	w0, lt  // lt = tstop
   1198c:	tst	w1, w0
   11990:	b.ne	11a6c <elf_update@@ELFUTILS_1.0+0x3f14>  // b.any
   11994:	ldr	x0, [sp, #136]
   11998:	tbz	w0, #0, 113f0 <elf_update@@ELFUTILS_1.0+0x3898>
   1199c:	ldr	x0, [sp, #152]
   119a0:	mov	x23, x22
   119a4:	ldr	w24, [x19, #36]
   119a8:	mov	x26, #0x0                   	// #0
   119ac:	ldr	x21, [sp, #176]
   119b0:	lsl	x20, x0, #6
   119b4:	mov	x25, x20
   119b8:	mov	x3, x23
   119bc:	mov	x2, x25
   119c0:	mov	x1, x21
   119c4:	mov	w0, w24
   119c8:	bl	3220 <pwrite@plt>
   119cc:	cmn	x0, #0x1
   119d0:	b.eq	11a18 <elf_update@@ELFUTILS_1.0+0x3ec0>  // b.none
   119d4:	cmp	x0, #0x0
   119d8:	b.le	113e4 <elf_update@@ELFUTILS_1.0+0x388c>
   119dc:	add	x26, x26, x0
   119e0:	cmp	x20, x26
   119e4:	mov	x0, x26
   119e8:	b.ls	113e8 <elf_update@@ELFUTILS_1.0+0x3890>  // b.plast
   119ec:	ldr	x0, [sp, #176]
   119f0:	add	x23, x22, x26
   119f4:	sub	x25, x20, x26
   119f8:	mov	x3, x23
   119fc:	add	x21, x0, x26
   11a00:	mov	x2, x25
   11a04:	mov	x1, x21
   11a08:	mov	w0, w24
   11a0c:	bl	3220 <pwrite@plt>
   11a10:	cmn	x0, #0x1
   11a14:	b.ne	119d4 <elf_update@@ELFUTILS_1.0+0x3e7c>  // b.any
   11a18:	bl	3340 <__errno_location@plt>
   11a1c:	ldr	w0, [x0]
   11a20:	cmp	w0, #0x4
   11a24:	b.ne	117f4 <elf_update@@ELFUTILS_1.0+0x3c9c>  // b.any
   11a28:	b	119b8 <elf_update@@ELFUTILS_1.0+0x3e60>
   11a2c:	mov	x0, x20
   11a30:	bl	30c0 <malloc@plt>
   11a34:	str	x0, [sp, #112]
   11a38:	cbz	x0, 11a8c <elf_update@@ELFUTILS_1.0+0x3f34>
   11a3c:	adrp	x4, 2a000 <elf_compress_gnu@@ELFUTILS_1.7+0x151b8>
   11a40:	mov	x21, x0
   11a44:	ldr	x1, [x19, #88]
   11a48:	mov	x2, x20
   11a4c:	ldr	x4, [x4, #3288]
   11a50:	mov	w3, #0x1                   	// #1
   11a54:	blr	x4
   11a58:	ldr	x0, [sp, #248]
   11a5c:	lsl	x20, x0, #3
   11a60:	sub	x20, x20, x0
   11a64:	lsl	x20, x20, #3
   11a68:	b	112ac <elf_update@@ELFUTILS_1.0+0x3754>
   11a6c:	ldr	w0, [x19, #36]
   11a70:	add	x4, sp, #0xf0
   11a74:	add	x3, sp, #0x100
   11a78:	sub	x2, x22, x21
   11a7c:	mov	x1, x21
   11a80:	bl	105a0 <elf_update@@ELFUTILS_1.0+0x2a48>
   11a84:	cbz	w0, 11994 <elf_update@@ELFUTILS_1.0+0x3e3c>
   11a88:	b	117fc <elf_update@@ELFUTILS_1.0+0x3ca4>
   11a8c:	mov	w0, #0x8                   	// #8
   11a90:	str	w27, [sp, #144]
   11a94:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   11a98:	ldp	x27, x28, [sp, #80]
   11a9c:	b	11208 <elf_update@@ELFUTILS_1.0+0x36b0>
   11aa0:	adrp	x3, 16000 <elf_compress_gnu@@ELFUTILS_1.7+0x11b8>
   11aa4:	add	x3, x3, #0x2b8
   11aa8:	adrp	x1, 16000 <elf_compress_gnu@@ELFUTILS_1.7+0x11b8>
   11aac:	adrp	x0, 16000 <elf_compress_gnu@@ELFUTILS_1.7+0x11b8>
   11ab0:	add	x3, x3, #0x18
   11ab4:	add	x1, x1, #0x10
   11ab8:	add	x0, x0, #0x78
   11abc:	mov	w2, #0x24a                 	// #586
   11ac0:	stp	x27, x28, [sp, #80]
   11ac4:	bl	3330 <__assert_fail@plt>
   11ac8:	adrp	x3, 16000 <elf_compress_gnu@@ELFUTILS_1.7+0x11b8>
   11acc:	add	x3, x3, #0x2b8
   11ad0:	adrp	x1, 16000 <elf_compress_gnu@@ELFUTILS_1.7+0x11b8>
   11ad4:	adrp	x0, 16000 <elf_compress_gnu@@ELFUTILS_1.7+0x11b8>
   11ad8:	add	x3, x3, #0x18
   11adc:	add	x1, x1, #0x10
   11ae0:	add	x0, x0, #0x190
   11ae4:	mov	w2, #0x2c3                 	// #707
   11ae8:	bl	3330 <__assert_fail@plt>
   11aec:	nop

0000000000011af0 <gelf_getsym@@ELFUTILS_1.0>:
   11af0:	cbz	x0, 11bc8 <gelf_getsym@@ELFUTILS_1.0+0xd8>
   11af4:	stp	x29, x30, [sp, #-16]!
   11af8:	mov	x29, sp
   11afc:	ldr	w3, [x0, #8]
   11b00:	cmp	w3, #0xb
   11b04:	b.ne	11bb8 <gelf_getsym@@ELFUTILS_1.0+0xc8>  // b.any
   11b08:	ldr	x4, [x0, #40]
   11b0c:	mov	w5, w1
   11b10:	ldr	x3, [x0, #16]
   11b14:	ldr	x4, [x4, #136]
   11b18:	ldr	w4, [x4, #32]
   11b1c:	cmp	w4, #0x1
   11b20:	b.eq	11b60 <gelf_getsym@@ELFUTILS_1.0+0x70>  // b.none
   11b24:	mov	x4, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   11b28:	movk	x4, #0xaaab
   11b2c:	umulh	x3, x3, x4
   11b30:	cmp	x5, x3, lsr #4
   11b34:	b.cs	11ba8 <gelf_getsym@@ELFUTILS_1.0+0xb8>  // b.hs, b.nlast
   11b38:	ldr	x3, [x0]
   11b3c:	mov	w4, #0x18                  	// #24
   11b40:	mov	x0, x2
   11b44:	smaddl	x1, w1, w4, x3
   11b48:	ldp	x4, x5, [x1]
   11b4c:	stp	x4, x5, [x2]
   11b50:	ldr	x1, [x1, #16]
   11b54:	str	x1, [x2, #16]
   11b58:	ldp	x29, x30, [sp], #16
   11b5c:	ret
   11b60:	cmp	x5, x3, lsr #4
   11b64:	b.cs	11ba8 <gelf_getsym@@ELFUTILS_1.0+0xb8>  // b.hs, b.nlast
   11b68:	ldr	x4, [x0]
   11b6c:	sbfiz	x1, x1, #4, #32
   11b70:	mov	x0, x2
   11b74:	add	x3, x4, x1
   11b78:	ldr	w1, [x4, x1]
   11b7c:	str	w1, [x2]
   11b80:	ldp	x29, x30, [sp], #16
   11b84:	ldrb	w1, [x3, #12]
   11b88:	strb	w1, [x2, #4]
   11b8c:	ldrb	w1, [x3, #13]
   11b90:	strb	w1, [x2, #5]
   11b94:	ldp	w4, w1, [x3, #4]
   11b98:	ldrh	w3, [x3, #14]
   11b9c:	strh	w3, [x2, #6]
   11ba0:	stp	x4, x1, [x2, #8]
   11ba4:	ret
   11ba8:	mov	w0, #0x16                  	// #22
   11bac:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   11bb0:	mov	x0, #0x0                   	// #0
   11bb4:	b	11b58 <gelf_getsym@@ELFUTILS_1.0+0x68>
   11bb8:	mov	w0, #0x4                   	// #4
   11bbc:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   11bc0:	mov	x0, #0x0                   	// #0
   11bc4:	b	11b58 <gelf_getsym@@ELFUTILS_1.0+0x68>
   11bc8:	mov	x0, #0x0                   	// #0
   11bcc:	ret

0000000000011bd0 <gelf_update_sym@@ELFUTILS_1.0>:
   11bd0:	cbz	x0, 11cbc <gelf_update_sym@@ELFUTILS_1.0+0xec>
   11bd4:	stp	x29, x30, [sp, #-16]!
   11bd8:	mov	x29, sp
   11bdc:	ldr	w3, [x0, #8]
   11be0:	cmp	w3, #0xb
   11be4:	b.ne	11cc4 <gelf_update_sym@@ELFUTILS_1.0+0xf4>  // b.any
   11be8:	ldr	x3, [x0, #40]
   11bec:	ldr	x4, [x3, #136]
   11bf0:	ldr	w4, [x4, #32]
   11bf4:	cmp	w4, #0x1
   11bf8:	b.eq	11c4c <gelf_update_sym@@ELFUTILS_1.0+0x7c>  // b.none
   11bfc:	ldr	x5, [x0, #16]
   11c00:	mov	x6, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   11c04:	movk	x6, #0xaaab
   11c08:	mov	w4, w1
   11c0c:	umulh	x5, x5, x6
   11c10:	cmp	x4, x5, lsr #4
   11c14:	b.cs	11cac <gelf_update_sym@@ELFUTILS_1.0+0xdc>  // b.hs, b.nlast
   11c18:	ldr	x0, [x0]
   11c1c:	mov	w6, #0x18                  	// #24
   11c20:	ldp	x4, x5, [x2]
   11c24:	smaddl	x1, w1, w6, x0
   11c28:	stp	x4, x5, [x1]
   11c2c:	ldr	x0, [x2, #16]
   11c30:	str	x0, [x1, #16]
   11c34:	ldr	w1, [x3, #156]
   11c38:	mov	w0, #0x1                   	// #1
   11c3c:	orr	w1, w1, w0
   11c40:	str	w1, [x3, #156]
   11c44:	ldp	x29, x30, [sp], #16
   11c48:	ret
   11c4c:	ldr	x5, [x2, #8]
   11c50:	mov	x4, #0xffffffff            	// #4294967295
   11c54:	cmp	x5, x4
   11c58:	b.hi	11cd4 <gelf_update_sym@@ELFUTILS_1.0+0x104>  // b.pmore
   11c5c:	ldr	x6, [x2, #16]
   11c60:	cmp	x6, x4
   11c64:	b.hi	11cd4 <gelf_update_sym@@ELFUTILS_1.0+0x104>  // b.pmore
   11c68:	ldr	x7, [x0, #16]
   11c6c:	mov	w4, w1
   11c70:	cmp	x4, x7, lsr #4
   11c74:	b.cs	11cac <gelf_update_sym@@ELFUTILS_1.0+0xdc>  // b.hs, b.nlast
   11c78:	ldr	x4, [x0]
   11c7c:	sbfiz	x1, x1, #4, #32
   11c80:	ldr	w7, [x2]
   11c84:	add	x0, x4, x1
   11c88:	str	w7, [x4, x1]
   11c8c:	stp	w5, w6, [x0, #4]
   11c90:	ldrb	w1, [x2, #4]
   11c94:	strb	w1, [x0, #12]
   11c98:	ldrb	w1, [x2, #5]
   11c9c:	strb	w1, [x0, #13]
   11ca0:	ldrh	w1, [x2, #6]
   11ca4:	strh	w1, [x0, #14]
   11ca8:	b	11c34 <gelf_update_sym@@ELFUTILS_1.0+0x64>
   11cac:	mov	w0, #0x16                  	// #22
   11cb0:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   11cb4:	mov	w0, #0x0                   	// #0
   11cb8:	b	11c44 <gelf_update_sym@@ELFUTILS_1.0+0x74>
   11cbc:	mov	w0, #0x0                   	// #0
   11cc0:	ret
   11cc4:	mov	w0, #0x1f                  	// #31
   11cc8:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   11ccc:	mov	w0, #0x0                   	// #0
   11cd0:	b	11c44 <gelf_update_sym@@ELFUTILS_1.0+0x74>
   11cd4:	mov	w0, #0x21                  	// #33
   11cd8:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   11cdc:	mov	w0, #0x0                   	// #0
   11ce0:	b	11c44 <gelf_update_sym@@ELFUTILS_1.0+0x74>
   11ce4:	nop

0000000000011ce8 <gelf_getversym@@ELFUTILS_1.0>:
   11ce8:	cbz	x0, 11d38 <gelf_getversym@@ELFUTILS_1.0+0x50>
   11cec:	stp	x29, x30, [sp, #-16]!
   11cf0:	mov	x29, sp
   11cf4:	ldr	w3, [x0, #8]
   11cf8:	cmp	w3, #0x4
   11cfc:	b.ne	11d28 <gelf_getversym@@ELFUTILS_1.0+0x40>  // b.any
   11d00:	ldr	x4, [x0, #16]
   11d04:	mov	w3, w1
   11d08:	cmp	x3, x4, lsr #1
   11d0c:	b.cs	11d40 <gelf_getversym@@ELFUTILS_1.0+0x58>  // b.hs, b.nlast
   11d10:	ldr	x3, [x0]
   11d14:	mov	x0, x2
   11d18:	ldrh	w1, [x3, w1, sxtw #1]
   11d1c:	strh	w1, [x2]
   11d20:	ldp	x29, x30, [sp], #16
   11d24:	ret
   11d28:	mov	w0, #0x4                   	// #4
   11d2c:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   11d30:	mov	x0, #0x0                   	// #0
   11d34:	b	11d20 <gelf_getversym@@ELFUTILS_1.0+0x38>
   11d38:	mov	x0, #0x0                   	// #0
   11d3c:	ret
   11d40:	mov	w0, #0x16                  	// #22
   11d44:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   11d48:	mov	x0, #0x0                   	// #0
   11d4c:	b	11d20 <gelf_getversym@@ELFUTILS_1.0+0x38>

0000000000011d50 <gelf_getverneed@@ELFUTILS_1.0>:
   11d50:	cbz	x0, 11dc8 <gelf_getverneed@@ELFUTILS_1.0+0x78>
   11d54:	stp	x29, x30, [sp, #-16]!
   11d58:	mov	x29, sp
   11d5c:	ldr	w3, [x0, #8]
   11d60:	cmp	w3, #0x11
   11d64:	b.ne	11db8 <gelf_getverneed@@ELFUTILS_1.0+0x68>  // b.any
   11d68:	tbnz	w1, #31, 11da4 <gelf_getverneed@@ELFUTILS_1.0+0x54>
   11d6c:	ldr	x4, [x0, #16]
   11d70:	sxtw	x3, w1
   11d74:	add	x5, x3, #0x10
   11d78:	cmp	x5, x4
   11d7c:	b.hi	11da4 <gelf_getverneed@@ELFUTILS_1.0+0x54>  // b.pmore
   11d80:	tst	x1, #0xf
   11d84:	b.ne	11da4 <gelf_getverneed@@ELFUTILS_1.0+0x54>  // b.any
   11d88:	ldr	x1, [x0]
   11d8c:	mov	x0, x2
   11d90:	add	x1, x1, x3
   11d94:	ldp	x4, x5, [x1]
   11d98:	stp	x4, x5, [x2]
   11d9c:	ldp	x29, x30, [sp], #16
   11da0:	ret
   11da4:	mov	w0, #0x1d                  	// #29
   11da8:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   11dac:	mov	x0, #0x0                   	// #0
   11db0:	ldp	x29, x30, [sp], #16
   11db4:	ret
   11db8:	mov	w0, #0x4                   	// #4
   11dbc:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   11dc0:	mov	x0, #0x0                   	// #0
   11dc4:	b	11d9c <gelf_getverneed@@ELFUTILS_1.0+0x4c>
   11dc8:	mov	x0, #0x0                   	// #0
   11dcc:	ret

0000000000011dd0 <gelf_getvernaux@@ELFUTILS_1.0>:
   11dd0:	cbz	x0, 11e48 <gelf_getvernaux@@ELFUTILS_1.0+0x78>
   11dd4:	stp	x29, x30, [sp, #-16]!
   11dd8:	mov	x29, sp
   11ddc:	ldr	w3, [x0, #8]
   11de0:	cmp	w3, #0x11
   11de4:	b.ne	11e38 <gelf_getvernaux@@ELFUTILS_1.0+0x68>  // b.any
   11de8:	tbnz	w1, #31, 11e24 <gelf_getvernaux@@ELFUTILS_1.0+0x54>
   11dec:	ldr	x4, [x0, #16]
   11df0:	sxtw	x3, w1
   11df4:	add	x5, x3, #0x10
   11df8:	cmp	x5, x4
   11dfc:	b.hi	11e24 <gelf_getvernaux@@ELFUTILS_1.0+0x54>  // b.pmore
   11e00:	tst	x1, #0xf
   11e04:	b.ne	11e24 <gelf_getvernaux@@ELFUTILS_1.0+0x54>  // b.any
   11e08:	ldr	x1, [x0]
   11e0c:	mov	x0, x2
   11e10:	add	x1, x1, x3
   11e14:	ldp	x4, x5, [x1]
   11e18:	stp	x4, x5, [x2]
   11e1c:	ldp	x29, x30, [sp], #16
   11e20:	ret
   11e24:	mov	w0, #0x1d                  	// #29
   11e28:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   11e2c:	mov	x0, #0x0                   	// #0
   11e30:	ldp	x29, x30, [sp], #16
   11e34:	ret
   11e38:	mov	w0, #0x4                   	// #4
   11e3c:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   11e40:	mov	x0, #0x0                   	// #0
   11e44:	b	11e1c <gelf_getvernaux@@ELFUTILS_1.0+0x4c>
   11e48:	mov	x0, #0x0                   	// #0
   11e4c:	ret

0000000000011e50 <gelf_getverdef@@ELFUTILS_1.0>:
   11e50:	cbz	x0, 11ed0 <gelf_getverdef@@ELFUTILS_1.0+0x80>
   11e54:	stp	x29, x30, [sp, #-16]!
   11e58:	mov	x29, sp
   11e5c:	ldr	w3, [x0, #8]
   11e60:	cmp	w3, #0xf
   11e64:	b.ne	11ec0 <gelf_getverdef@@ELFUTILS_1.0+0x70>  // b.any
   11e68:	tbnz	w1, #31, 11eac <gelf_getverdef@@ELFUTILS_1.0+0x5c>
   11e6c:	ldr	x4, [x0, #16]
   11e70:	sxtw	x3, w1
   11e74:	add	x5, x3, #0x14
   11e78:	cmp	x5, x4
   11e7c:	b.hi	11eac <gelf_getverdef@@ELFUTILS_1.0+0x5c>  // b.pmore
   11e80:	tst	x1, #0x3
   11e84:	b.ne	11eac <gelf_getverdef@@ELFUTILS_1.0+0x5c>  // b.any
   11e88:	ldr	x1, [x0]
   11e8c:	mov	x0, x2
   11e90:	add	x1, x1, x3
   11e94:	ldp	x4, x5, [x1]
   11e98:	stp	x4, x5, [x2]
   11e9c:	ldr	w1, [x1, #16]
   11ea0:	str	w1, [x2, #16]
   11ea4:	ldp	x29, x30, [sp], #16
   11ea8:	ret
   11eac:	mov	w0, #0x1d                  	// #29
   11eb0:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   11eb4:	mov	x0, #0x0                   	// #0
   11eb8:	ldp	x29, x30, [sp], #16
   11ebc:	ret
   11ec0:	mov	w0, #0x4                   	// #4
   11ec4:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   11ec8:	mov	x0, #0x0                   	// #0
   11ecc:	b	11ea4 <gelf_getverdef@@ELFUTILS_1.0+0x54>
   11ed0:	mov	x0, #0x0                   	// #0
   11ed4:	ret

0000000000011ed8 <gelf_getverdaux@@ELFUTILS_1.0>:
   11ed8:	cbz	x0, 11f4c <gelf_getverdaux@@ELFUTILS_1.0+0x74>
   11edc:	stp	x29, x30, [sp, #-16]!
   11ee0:	mov	x29, sp
   11ee4:	ldr	w3, [x0, #8]
   11ee8:	cmp	w3, #0xf
   11eec:	b.ne	11f3c <gelf_getverdaux@@ELFUTILS_1.0+0x64>  // b.any
   11ef0:	tbnz	w1, #31, 11f28 <gelf_getverdaux@@ELFUTILS_1.0+0x50>
   11ef4:	ldr	x4, [x0, #16]
   11ef8:	sxtw	x3, w1
   11efc:	add	x3, x3, #0x8
   11f00:	cmp	x3, x4
   11f04:	b.hi	11f28 <gelf_getverdaux@@ELFUTILS_1.0+0x50>  // b.pmore
   11f08:	tst	x1, #0x3
   11f0c:	b.ne	11f28 <gelf_getverdaux@@ELFUTILS_1.0+0x50>  // b.any
   11f10:	ldr	x3, [x0]
   11f14:	mov	x0, x2
   11f18:	ldr	x1, [x3, w1, sxtw]
   11f1c:	str	x1, [x2]
   11f20:	ldp	x29, x30, [sp], #16
   11f24:	ret
   11f28:	mov	w0, #0x1d                  	// #29
   11f2c:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   11f30:	mov	x0, #0x0                   	// #0
   11f34:	ldp	x29, x30, [sp], #16
   11f38:	ret
   11f3c:	mov	w0, #0x4                   	// #4
   11f40:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   11f44:	mov	x0, #0x0                   	// #0
   11f48:	b	11f20 <gelf_getverdaux@@ELFUTILS_1.0+0x48>
   11f4c:	mov	x0, #0x0                   	// #0
   11f50:	ret
   11f54:	nop

0000000000011f58 <gelf_getrel@@ELFUTILS_1.0>:
   11f58:	cbz	x0, 1200c <gelf_getrel@@ELFUTILS_1.0+0xb4>
   11f5c:	stp	x29, x30, [sp, #-16]!
   11f60:	mov	x29, sp
   11f64:	ldr	w3, [x0, #8]
   11f68:	cmp	w3, #0x8
   11f6c:	b.ne	11ffc <gelf_getrel@@ELFUTILS_1.0+0xa4>  // b.any
   11f70:	ldr	x3, [x0, #40]
   11f74:	mov	w4, w1
   11f78:	ldr	x5, [x0, #16]
   11f7c:	ldr	x3, [x3, #136]
   11f80:	ldr	w3, [x3, #32]
   11f84:	cmp	w3, #0x1
   11f88:	b.eq	11fb0 <gelf_getrel@@ELFUTILS_1.0+0x58>  // b.none
   11f8c:	cmp	x4, x5, lsr #4
   11f90:	b.cs	11fec <gelf_getrel@@ELFUTILS_1.0+0x94>  // b.hs, b.nlast
   11f94:	ldr	x3, [x0]
   11f98:	mov	x0, x2
   11f9c:	add	x1, x3, w1, sxtw #4
   11fa0:	ldp	x4, x5, [x1]
   11fa4:	stp	x4, x5, [x2]
   11fa8:	ldp	x29, x30, [sp], #16
   11fac:	ret
   11fb0:	cmp	x4, x5, lsr #3
   11fb4:	b.cs	11fec <gelf_getrel@@ELFUTILS_1.0+0x94>  // b.hs, b.nlast
   11fb8:	ldr	x3, [x0]
   11fbc:	sbfiz	x1, x1, #3, #32
   11fc0:	mov	x0, x2
   11fc4:	add	x4, x3, x1
   11fc8:	ldr	w1, [x3, x1]
   11fcc:	str	x1, [x2]
   11fd0:	ldr	w1, [x4, #4]
   11fd4:	ldp	x29, x30, [sp], #16
   11fd8:	and	x3, x1, #0xff
   11fdc:	lsr	w1, w1, #8
   11fe0:	add	x1, x3, x1, lsl #32
   11fe4:	str	x1, [x2, #8]
   11fe8:	ret
   11fec:	mov	w0, #0x16                  	// #22
   11ff0:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   11ff4:	mov	x0, #0x0                   	// #0
   11ff8:	b	11fa8 <gelf_getrel@@ELFUTILS_1.0+0x50>
   11ffc:	mov	w0, #0x4                   	// #4
   12000:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   12004:	mov	x0, #0x0                   	// #0
   12008:	b	11fa8 <gelf_getrel@@ELFUTILS_1.0+0x50>
   1200c:	mov	x0, #0x0                   	// #0
   12010:	ret
   12014:	nop

0000000000012018 <gelf_getrela@@ELFUTILS_1.0>:
   12018:	cbz	x0, 120f0 <gelf_getrela@@ELFUTILS_1.0+0xd8>
   1201c:	stp	x29, x30, [sp, #-16]!
   12020:	mov	x3, x0
   12024:	mov	x29, sp
   12028:	ldr	w0, [x0, #8]
   1202c:	cmp	w0, #0x7
   12030:	b.ne	120e0 <gelf_getrela@@ELFUTILS_1.0+0xc8>  // b.any
   12034:	ldr	x4, [x3, #40]
   12038:	mov	w5, w1
   1203c:	ldr	x0, [x3, #16]
   12040:	ldr	x4, [x4, #136]
   12044:	ldr	w4, [x4, #32]
   12048:	cmp	w4, #0x1
   1204c:	mov	x4, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   12050:	movk	x4, #0xaaab
   12054:	umulh	x0, x0, x4
   12058:	b.eq	1208c <gelf_getrela@@ELFUTILS_1.0+0x74>  // b.none
   1205c:	cmp	x5, x0, lsr #4
   12060:	b.cs	120d0 <gelf_getrela@@ELFUTILS_1.0+0xb8>  // b.hs, b.nlast
   12064:	ldr	x3, [x3]
   12068:	mov	w4, #0x18                  	// #24
   1206c:	mov	x0, x2
   12070:	smaddl	x1, w1, w4, x3
   12074:	ldp	x4, x5, [x1]
   12078:	stp	x4, x5, [x2]
   1207c:	ldr	x1, [x1, #16]
   12080:	str	x1, [x2, #16]
   12084:	ldp	x29, x30, [sp], #16
   12088:	ret
   1208c:	cmp	x5, x0, lsr #3
   12090:	b.cs	120d0 <gelf_getrela@@ELFUTILS_1.0+0xb8>  // b.hs, b.nlast
   12094:	mov	w5, #0xc                   	// #12
   12098:	mov	x0, x2
   1209c:	ldr	x4, [x3]
   120a0:	smull	x1, w1, w5
   120a4:	ldp	x29, x30, [sp], #16
   120a8:	add	x3, x4, x1
   120ac:	ldr	w5, [x4, x1]
   120b0:	ldr	w1, [x3, #4]
   120b4:	ldrsw	x4, [x3, #8]
   120b8:	and	x3, x1, #0xff
   120bc:	str	x4, [x2, #16]
   120c0:	lsr	w1, w1, #8
   120c4:	add	x1, x3, x1, lsl #32
   120c8:	stp	x5, x1, [x2]
   120cc:	ret
   120d0:	mov	w0, #0x16                  	// #22
   120d4:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   120d8:	mov	x0, #0x0                   	// #0
   120dc:	b	12084 <gelf_getrela@@ELFUTILS_1.0+0x6c>
   120e0:	mov	w0, #0x4                   	// #4
   120e4:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   120e8:	mov	x0, #0x0                   	// #0
   120ec:	b	12084 <gelf_getrela@@ELFUTILS_1.0+0x6c>
   120f0:	mov	x0, #0x0                   	// #0
   120f4:	ret

00000000000120f8 <gelf_update_rel@@ELFUTILS_1.0>:
   120f8:	cbz	x0, 121c8 <gelf_update_rel@@ELFUTILS_1.0+0xd0>
   120fc:	stp	x29, x30, [sp, #-16]!
   12100:	mov	x29, sp
   12104:	ldr	w3, [x0, #8]
   12108:	cmp	w3, #0x8
   1210c:	b.ne	121d0 <gelf_update_rel@@ELFUTILS_1.0+0xd8>  // b.any
   12110:	ldr	x3, [x0, #40]
   12114:	ldr	x4, [x3, #136]
   12118:	ldr	w4, [x4, #32]
   1211c:	cmp	w4, #0x1
   12120:	b.eq	1215c <gelf_update_rel@@ELFUTILS_1.0+0x64>  // b.none
   12124:	ldr	x5, [x0, #16]
   12128:	mov	w4, w1
   1212c:	cmp	x4, x5, lsr #4
   12130:	b.cs	121e0 <gelf_update_rel@@ELFUTILS_1.0+0xe8>  // b.hs, b.nlast
   12134:	ldr	x0, [x0]
   12138:	ldp	x4, x5, [x2]
   1213c:	add	x1, x0, w1, sxtw #4
   12140:	stp	x4, x5, [x1]
   12144:	ldr	w1, [x3, #156]
   12148:	mov	w0, #0x1                   	// #1
   1214c:	orr	w1, w1, w0
   12150:	str	w1, [x3, #156]
   12154:	ldp	x29, x30, [sp], #16
   12158:	ret
   1215c:	ldr	x5, [x2]
   12160:	mov	x4, #0xffffffff            	// #4294967295
   12164:	cmp	x5, x4
   12168:	b.hi	121b8 <gelf_update_rel@@ELFUTILS_1.0+0xc0>  // b.pmore
   1216c:	ldr	x2, [x2, #8]
   12170:	mov	x4, #0xffffff              	// #16777215
   12174:	cmp	x4, x2, lsr #32
   12178:	lsr	x4, x2, #32
   1217c:	b.cc	121b8 <gelf_update_rel@@ELFUTILS_1.0+0xc0>  // b.lo, b.ul, b.last
   12180:	tst	x2, #0xffffff00
   12184:	b.ne	121b8 <gelf_update_rel@@ELFUTILS_1.0+0xc0>  // b.any
   12188:	ldr	x7, [x0, #16]
   1218c:	mov	w6, w1
   12190:	cmp	x6, x7, lsr #3
   12194:	b.cs	121e0 <gelf_update_rel@@ELFUTILS_1.0+0xe8>  // b.hs, b.nlast
   12198:	ldr	x0, [x0]
   1219c:	sbfiz	x1, x1, #3, #32
   121a0:	and	w2, w2, #0xff
   121a4:	add	x6, x0, x1
   121a8:	add	w2, w2, w4, lsl #8
   121ac:	str	w5, [x0, x1]
   121b0:	str	w2, [x6, #4]
   121b4:	b	12144 <gelf_update_rel@@ELFUTILS_1.0+0x4c>
   121b8:	mov	w0, #0x21                  	// #33
   121bc:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   121c0:	mov	w0, #0x0                   	// #0
   121c4:	b	12154 <gelf_update_rel@@ELFUTILS_1.0+0x5c>
   121c8:	mov	w0, #0x0                   	// #0
   121cc:	ret
   121d0:	mov	w0, #0x1f                  	// #31
   121d4:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   121d8:	mov	w0, #0x0                   	// #0
   121dc:	b	12154 <gelf_update_rel@@ELFUTILS_1.0+0x5c>
   121e0:	mov	w0, #0x16                  	// #22
   121e4:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   121e8:	mov	w0, #0x0                   	// #0
   121ec:	b	12154 <gelf_update_rel@@ELFUTILS_1.0+0x5c>

00000000000121f0 <gelf_update_rela@@ELFUTILS_1.0>:
   121f0:	cbz	x0, 12300 <gelf_update_rela@@ELFUTILS_1.0+0x110>
   121f4:	stp	x29, x30, [sp, #-16]!
   121f8:	mov	x29, sp
   121fc:	ldr	w3, [x0, #8]
   12200:	cmp	w3, #0x7
   12204:	b.ne	12308 <gelf_update_rela@@ELFUTILS_1.0+0x118>  // b.any
   12208:	ldr	x3, [x0, #40]
   1220c:	ldr	x4, [x3, #136]
   12210:	ldr	w4, [x4, #32]
   12214:	cmp	w4, #0x1
   12218:	b.eq	1226c <gelf_update_rela@@ELFUTILS_1.0+0x7c>  // b.none
   1221c:	ldr	x5, [x0, #16]
   12220:	mov	x6, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   12224:	movk	x6, #0xaaab
   12228:	mov	w4, w1
   1222c:	umulh	x5, x5, x6
   12230:	cmp	x4, x5, lsr #4
   12234:	b.cs	12318 <gelf_update_rela@@ELFUTILS_1.0+0x128>  // b.hs, b.nlast
   12238:	ldr	x0, [x0]
   1223c:	mov	w6, #0x18                  	// #24
   12240:	ldp	x4, x5, [x2]
   12244:	smaddl	x1, w1, w6, x0
   12248:	stp	x4, x5, [x1]
   1224c:	ldr	x0, [x2, #16]
   12250:	str	x0, [x1, #16]
   12254:	ldr	w1, [x3, #156]
   12258:	mov	w0, #0x1                   	// #1
   1225c:	orr	w1, w1, w0
   12260:	str	w1, [x3, #156]
   12264:	ldp	x29, x30, [sp], #16
   12268:	ret
   1226c:	ldr	x6, [x2]
   12270:	mov	x5, #0xffffffff            	// #4294967295
   12274:	cmp	x6, x5
   12278:	b.hi	122ec <gelf_update_rela@@ELFUTILS_1.0+0xfc>  // b.pmore
   1227c:	ldr	x4, [x2, #8]
   12280:	mov	x7, #0xffffff              	// #16777215
   12284:	cmp	x7, x4, lsr #32
   12288:	lsr	x7, x4, #32
   1228c:	b.cc	122ec <gelf_update_rela@@ELFUTILS_1.0+0xfc>  // b.lo, b.ul, b.last
   12290:	tst	x4, #0xffffff00
   12294:	b.ne	122ec <gelf_update_rela@@ELFUTILS_1.0+0xfc>  // b.any
   12298:	ldr	x8, [x2, #16]
   1229c:	mov	x2, #0x80000000            	// #2147483648
   122a0:	add	x2, x8, x2
   122a4:	cmp	x2, x5
   122a8:	b.hi	122ec <gelf_update_rela@@ELFUTILS_1.0+0xfc>  // b.pmore
   122ac:	ldr	x5, [x0, #16]
   122b0:	mov	x9, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   122b4:	movk	x9, #0xaaab
   122b8:	mov	w2, w1
   122bc:	umulh	x5, x5, x9
   122c0:	cmp	x2, x5, lsr #3
   122c4:	b.cs	12318 <gelf_update_rela@@ELFUTILS_1.0+0x128>  // b.hs, b.nlast
   122c8:	mov	w2, #0xc                   	// #12
   122cc:	and	w4, w4, #0xff
   122d0:	ldr	x5, [x0]
   122d4:	smull	x1, w1, w2
   122d8:	add	w4, w4, w7, lsl #8
   122dc:	add	x0, x5, x1
   122e0:	str	w6, [x5, x1]
   122e4:	stp	w4, w8, [x0, #4]
   122e8:	b	12254 <gelf_update_rela@@ELFUTILS_1.0+0x64>
   122ec:	mov	w0, #0x21                  	// #33
   122f0:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   122f4:	mov	w0, #0x0                   	// #0
   122f8:	ldp	x29, x30, [sp], #16
   122fc:	ret
   12300:	mov	w0, #0x0                   	// #0
   12304:	ret
   12308:	mov	w0, #0x1f                  	// #31
   1230c:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   12310:	mov	w0, #0x0                   	// #0
   12314:	b	12264 <gelf_update_rela@@ELFUTILS_1.0+0x74>
   12318:	mov	w0, #0x16                  	// #22
   1231c:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   12320:	mov	w0, #0x0                   	// #0
   12324:	b	12264 <gelf_update_rela@@ELFUTILS_1.0+0x74>

0000000000012328 <gelf_getdyn@@ELFUTILS_1.0>:
   12328:	cbz	x0, 123d0 <gelf_getdyn@@ELFUTILS_1.0+0xa8>
   1232c:	stp	x29, x30, [sp, #-16]!
   12330:	mov	x29, sp
   12334:	ldr	w3, [x0, #8]
   12338:	cmp	w3, #0x2
   1233c:	b.ne	123c0 <gelf_getdyn@@ELFUTILS_1.0+0x98>  // b.any
   12340:	ldr	x3, [x0, #40]
   12344:	mov	w4, w1
   12348:	ldr	x5, [x0, #16]
   1234c:	ldr	x3, [x3, #136]
   12350:	ldr	w3, [x3, #32]
   12354:	cmp	w3, #0x1
   12358:	b.eq	12380 <gelf_getdyn@@ELFUTILS_1.0+0x58>  // b.none
   1235c:	cmp	x4, x5, lsr #4
   12360:	b.cs	123b0 <gelf_getdyn@@ELFUTILS_1.0+0x88>  // b.hs, b.nlast
   12364:	ldr	x3, [x0]
   12368:	mov	x0, x2
   1236c:	add	x1, x3, w1, sxtw #4
   12370:	ldp	x4, x5, [x1]
   12374:	stp	x4, x5, [x2]
   12378:	ldp	x29, x30, [sp], #16
   1237c:	ret
   12380:	cmp	x4, x5, lsr #3
   12384:	b.cs	123b0 <gelf_getdyn@@ELFUTILS_1.0+0x88>  // b.hs, b.nlast
   12388:	ldr	x3, [x0]
   1238c:	sbfiz	x1, x1, #3, #32
   12390:	mov	x0, x2
   12394:	add	x4, x3, x1
   12398:	ldrsw	x1, [x3, x1]
   1239c:	str	x1, [x2]
   123a0:	ldr	w1, [x4, #4]
   123a4:	ldp	x29, x30, [sp], #16
   123a8:	str	x1, [x2, #8]
   123ac:	ret
   123b0:	mov	w0, #0x16                  	// #22
   123b4:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   123b8:	mov	x0, #0x0                   	// #0
   123bc:	b	12378 <gelf_getdyn@@ELFUTILS_1.0+0x50>
   123c0:	mov	w0, #0x4                   	// #4
   123c4:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   123c8:	mov	x0, #0x0                   	// #0
   123cc:	b	12378 <gelf_getdyn@@ELFUTILS_1.0+0x50>
   123d0:	mov	x0, #0x0                   	// #0
   123d4:	ret

00000000000123d8 <gelf_update_dyn@@ELFUTILS_1.0>:
   123d8:	cbz	x0, 12498 <gelf_update_dyn@@ELFUTILS_1.0+0xc0>
   123dc:	stp	x29, x30, [sp, #-16]!
   123e0:	mov	x29, sp
   123e4:	ldr	w3, [x0, #8]
   123e8:	cmp	w3, #0x2
   123ec:	b.ne	124a0 <gelf_update_dyn@@ELFUTILS_1.0+0xc8>  // b.any
   123f0:	ldr	x3, [x0, #40]
   123f4:	ldr	x4, [x3, #136]
   123f8:	ldr	w4, [x4, #32]
   123fc:	cmp	w4, #0x1
   12400:	b.eq	1243c <gelf_update_dyn@@ELFUTILS_1.0+0x64>  // b.none
   12404:	ldr	x5, [x0, #16]
   12408:	mov	w4, w1
   1240c:	cmp	x4, x5, lsr #4
   12410:	b.cs	124b0 <gelf_update_dyn@@ELFUTILS_1.0+0xd8>  // b.hs, b.nlast
   12414:	ldr	x0, [x0]
   12418:	ldp	x4, x5, [x2]
   1241c:	add	x1, x0, w1, sxtw #4
   12420:	stp	x4, x5, [x1]
   12424:	ldr	w1, [x3, #156]
   12428:	mov	w0, #0x1                   	// #1
   1242c:	orr	w1, w1, w0
   12430:	str	w1, [x3, #156]
   12434:	ldp	x29, x30, [sp], #16
   12438:	ret
   1243c:	ldr	x6, [x2]
   12440:	mov	x4, #0x80000000            	// #2147483648
   12444:	mov	x5, #0xffffffff            	// #4294967295
   12448:	add	x4, x6, x4
   1244c:	cmp	x4, x5
   12450:	b.hi	12488 <gelf_update_dyn@@ELFUTILS_1.0+0xb0>  // b.pmore
   12454:	ldr	x2, [x2, #8]
   12458:	cmp	x2, x5
   1245c:	b.hi	12488 <gelf_update_dyn@@ELFUTILS_1.0+0xb0>  // b.pmore
   12460:	ldr	x5, [x0, #16]
   12464:	mov	w4, w1
   12468:	cmp	x4, x5, lsr #3
   1246c:	b.cs	124b0 <gelf_update_dyn@@ELFUTILS_1.0+0xd8>  // b.hs, b.nlast
   12470:	ldr	x0, [x0]
   12474:	sbfiz	x1, x1, #3, #32
   12478:	add	x4, x0, x1
   1247c:	str	w6, [x0, x1]
   12480:	str	w2, [x4, #4]
   12484:	b	12424 <gelf_update_dyn@@ELFUTILS_1.0+0x4c>
   12488:	mov	w0, #0x21                  	// #33
   1248c:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   12490:	mov	w0, #0x0                   	// #0
   12494:	b	12434 <gelf_update_dyn@@ELFUTILS_1.0+0x5c>
   12498:	mov	w0, #0x0                   	// #0
   1249c:	ret
   124a0:	mov	w0, #0x1f                  	// #31
   124a4:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   124a8:	mov	w0, #0x0                   	// #0
   124ac:	b	12434 <gelf_update_dyn@@ELFUTILS_1.0+0x5c>
   124b0:	mov	w0, #0x16                  	// #22
   124b4:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   124b8:	mov	w0, #0x0                   	// #0
   124bc:	b	12434 <gelf_update_dyn@@ELFUTILS_1.0+0x5c>

00000000000124c0 <gelf_getmove@@ELFUTILS_1.0>:
   124c0:	cbz	x0, 1250c <gelf_getmove@@ELFUTILS_1.0+0x4c>
   124c4:	stp	x29, x30, [sp, #-16]!
   124c8:	mov	x29, sp
   124cc:	ldr	w0, [x0, #8]
   124d0:	cmp	w0, #0x15
   124d4:	b.ne	124f8 <gelf_getmove@@ELFUTILS_1.0+0x38>  // b.any
   124d8:	adrp	x3, 16000 <elf_compress_gnu@@ELFUTILS_1.7+0x11b8>
   124dc:	adrp	x1, 16000 <elf_compress_gnu@@ELFUTILS_1.7+0x11b8>
   124e0:	adrp	x0, 16000 <elf_compress_gnu@@ELFUTILS_1.7+0x11b8>
   124e4:	add	x3, x3, #0x328
   124e8:	add	x1, x1, #0x2e8
   124ec:	add	x0, x0, #0x2f8
   124f0:	mov	w2, #0x39                  	// #57
   124f4:	bl	3330 <__assert_fail@plt>
   124f8:	mov	w0, #0x4                   	// #4
   124fc:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   12500:	mov	x0, #0x0                   	// #0
   12504:	ldp	x29, x30, [sp], #16
   12508:	ret
   1250c:	mov	x0, #0x0                   	// #0
   12510:	ret
   12514:	nop

0000000000012518 <gelf_update_move@@ELFUTILS_1.0>:
   12518:	cbnz	x0, 12524 <gelf_update_move@@ELFUTILS_1.0+0xc>
   1251c:	mov	w0, #0x0                   	// #0
   12520:	ret
   12524:	stp	x29, x30, [sp, #-16]!
   12528:	adrp	x3, 16000 <elf_compress_gnu@@ELFUTILS_1.7+0x11b8>
   1252c:	adrp	x1, 16000 <elf_compress_gnu@@ELFUTILS_1.7+0x11b8>
   12530:	mov	x29, sp
   12534:	adrp	x0, 16000 <elf_compress_gnu@@ELFUTILS_1.7+0x11b8>
   12538:	add	x3, x3, #0x350
   1253c:	add	x1, x1, #0x338
   12540:	add	x0, x0, #0x2f8
   12544:	mov	w2, #0x32                  	// #50
   12548:	bl	3330 <__assert_fail@plt>
   1254c:	nop

0000000000012550 <gelf_getsyminfo@@ELFUTILS_1.0>:
   12550:	cbz	x0, 125a0 <gelf_getsyminfo@@ELFUTILS_1.0+0x50>
   12554:	stp	x29, x30, [sp, #-16]!
   12558:	mov	x29, sp
   1255c:	ldr	w3, [x0, #8]
   12560:	cmp	w3, #0x14
   12564:	b.ne	12590 <gelf_getsyminfo@@ELFUTILS_1.0+0x40>  // b.any
   12568:	ldr	x4, [x0, #16]
   1256c:	mov	w3, w1
   12570:	cmp	x3, x4, lsr #2
   12574:	b.cs	125a8 <gelf_getsyminfo@@ELFUTILS_1.0+0x58>  // b.hs, b.nlast
   12578:	ldr	x3, [x0]
   1257c:	mov	x0, x2
   12580:	ldr	w1, [x3, w1, sxtw #2]
   12584:	str	w1, [x2]
   12588:	ldp	x29, x30, [sp], #16
   1258c:	ret
   12590:	mov	w0, #0x4                   	// #4
   12594:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   12598:	mov	x0, #0x0                   	// #0
   1259c:	b	12588 <gelf_getsyminfo@@ELFUTILS_1.0+0x38>
   125a0:	mov	x0, #0x0                   	// #0
   125a4:	ret
   125a8:	mov	w0, #0x16                  	// #22
   125ac:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   125b0:	mov	x0, #0x0                   	// #0
   125b4:	b	12588 <gelf_getsyminfo@@ELFUTILS_1.0+0x38>

00000000000125b8 <gelf_update_syminfo@@ELFUTILS_1.0>:
   125b8:	cbz	x0, 12608 <gelf_update_syminfo@@ELFUTILS_1.0+0x50>
   125bc:	stp	x29, x30, [sp, #-16]!
   125c0:	mov	x29, sp
   125c4:	ldr	w3, [x0, #8]
   125c8:	cmp	w3, #0x14
   125cc:	b.ne	12610 <gelf_update_syminfo@@ELFUTILS_1.0+0x58>  // b.any
   125d0:	ldr	x5, [x0, #16]
   125d4:	mov	w3, w1
   125d8:	ldr	x4, [x0, #40]
   125dc:	cmp	x3, x5, lsr #2
   125e0:	b.cs	12620 <gelf_update_syminfo@@ELFUTILS_1.0+0x68>  // b.hs, b.nlast
   125e4:	ldr	x3, [x0]
   125e8:	mov	w0, #0x1                   	// #1
   125ec:	ldr	w5, [x2]
   125f0:	ldr	w2, [x4, #156]
   125f4:	str	w5, [x3, w1, sxtw #2]
   125f8:	orr	w1, w2, w0
   125fc:	str	w1, [x4, #156]
   12600:	ldp	x29, x30, [sp], #16
   12604:	ret
   12608:	mov	w0, #0x0                   	// #0
   1260c:	ret
   12610:	mov	w0, #0x1f                  	// #31
   12614:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   12618:	mov	w0, #0x0                   	// #0
   1261c:	b	12600 <gelf_update_syminfo@@ELFUTILS_1.0+0x48>
   12620:	mov	w0, #0x16                  	// #22
   12624:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   12628:	mov	w0, #0x0                   	// #0
   1262c:	b	12600 <gelf_update_syminfo@@ELFUTILS_1.0+0x48>

0000000000012630 <gelf_getauxv@@ELFUTILS_1.3>:
   12630:	cbz	x0, 126e0 <gelf_getauxv@@ELFUTILS_1.3+0xb0>
   12634:	stp	x29, x30, [sp, #-16]!
   12638:	mov	x29, sp
   1263c:	ldr	w3, [x0, #8]
   12640:	cmp	w3, #0x18
   12644:	b.ne	126d0 <gelf_getauxv@@ELFUTILS_1.3+0xa0>  // b.any
   12648:	ldr	x3, [x0, #40]
   1264c:	add	w1, w1, #0x1
   12650:	ldr	x4, [x0, #16]
   12654:	ldr	x3, [x3, #136]
   12658:	ldr	w3, [x3, #32]
   1265c:	cmp	w3, #0x1
   12660:	b.eq	1268c <gelf_getauxv@@ELFUTILS_1.3+0x5c>  // b.none
   12664:	cmp	x4, w1, sxtw #4
   12668:	sbfiz	x1, x1, #4, #32
   1266c:	b.cc	126c0 <gelf_getauxv@@ELFUTILS_1.3+0x90>  // b.lo, b.ul, b.last
   12670:	ldr	x3, [x0]
   12674:	mov	x0, x2
   12678:	add	x1, x3, x1
   1267c:	ldp	x4, x5, [x1, #-16]
   12680:	stp	x4, x5, [x2]
   12684:	ldp	x29, x30, [sp], #16
   12688:	ret
   1268c:	cmp	x4, w1, sxtw #3
   12690:	sbfiz	x1, x1, #3, #32
   12694:	b.cc	126c0 <gelf_getauxv@@ELFUTILS_1.3+0x90>  // b.lo, b.ul, b.last
   12698:	ldr	x3, [x0]
   1269c:	sub	x1, x1, #0x8
   126a0:	mov	x0, x2
   126a4:	add	x4, x3, x1
   126a8:	ldr	w1, [x3, x1]
   126ac:	str	x1, [x2]
   126b0:	ldr	w1, [x4, #4]
   126b4:	ldp	x29, x30, [sp], #16
   126b8:	str	x1, [x2, #8]
   126bc:	ret
   126c0:	mov	w0, #0x16                  	// #22
   126c4:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   126c8:	mov	x0, #0x0                   	// #0
   126cc:	b	12684 <gelf_getauxv@@ELFUTILS_1.3+0x54>
   126d0:	mov	w0, #0x4                   	// #4
   126d4:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   126d8:	mov	x0, #0x0                   	// #0
   126dc:	b	12684 <gelf_getauxv@@ELFUTILS_1.3+0x54>
   126e0:	mov	x0, #0x0                   	// #0
   126e4:	ret

00000000000126e8 <gelf_update_auxv@@ELFUTILS_1.3>:
   126e8:	cbz	x0, 127a0 <gelf_update_auxv@@ELFUTILS_1.3+0xb8>
   126ec:	stp	x29, x30, [sp, #-16]!
   126f0:	mov	x29, sp
   126f4:	tbnz	w1, #31, 127a8 <gelf_update_auxv@@ELFUTILS_1.3+0xc0>
   126f8:	ldr	w3, [x0, #8]
   126fc:	cmp	w3, #0x18
   12700:	b.ne	127bc <gelf_update_auxv@@ELFUTILS_1.3+0xd4>  // b.any
   12704:	ldr	x3, [x0, #40]
   12708:	ldr	x4, [x3, #136]
   1270c:	ldr	w4, [x4, #32]
   12710:	cmp	w4, #0x1
   12714:	b.eq	12754 <gelf_update_auxv@@ELFUTILS_1.3+0x6c>  // b.none
   12718:	ldr	x4, [x0, #16]
   1271c:	add	w1, w1, #0x1
   12720:	sbfiz	x5, x1, #4, #32
   12724:	cmp	x4, w1, sxtw #4
   12728:	b.cc	127a8 <gelf_update_auxv@@ELFUTILS_1.3+0xc0>  // b.lo, b.ul, b.last
   1272c:	ldr	x0, [x0]
   12730:	ldp	x6, x7, [x2]
   12734:	add	x0, x0, x5
   12738:	stp	x6, x7, [x0, #-16]
   1273c:	ldr	w1, [x3, #156]
   12740:	mov	w0, #0x1                   	// #1
   12744:	orr	w1, w1, w0
   12748:	str	w1, [x3, #156]
   1274c:	ldp	x29, x30, [sp], #16
   12750:	ret
   12754:	ldr	x4, [x2]
   12758:	mov	x5, #0xffffffff            	// #4294967295
   1275c:	cmp	x4, x5
   12760:	b.hi	127cc <gelf_update_auxv@@ELFUTILS_1.3+0xe4>  // b.pmore
   12764:	ldr	x2, [x2, #8]
   12768:	cmp	x2, x5
   1276c:	b.hi	127cc <gelf_update_auxv@@ELFUTILS_1.3+0xe4>  // b.pmore
   12770:	ldr	x5, [x0, #16]
   12774:	add	w1, w1, #0x1
   12778:	sbfiz	x6, x1, #3, #32
   1277c:	cmp	x5, w1, sxtw #3
   12780:	b.cc	127a8 <gelf_update_auxv@@ELFUTILS_1.3+0xc0>  // b.lo, b.ul, b.last
   12784:	fmov	d0, x4
   12788:	ldr	x0, [x0]
   1278c:	mov	v0.d[1], x2
   12790:	add	x0, x0, x6
   12794:	xtn	v0.2s, v0.2d
   12798:	stur	d0, [x0, #-8]
   1279c:	b	1273c <gelf_update_auxv@@ELFUTILS_1.3+0x54>
   127a0:	mov	w0, #0x0                   	// #0
   127a4:	ret
   127a8:	mov	w0, #0x16                  	// #22
   127ac:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   127b0:	mov	w0, #0x0                   	// #0
   127b4:	ldp	x29, x30, [sp], #16
   127b8:	ret
   127bc:	mov	w0, #0x1f                  	// #31
   127c0:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   127c4:	mov	w0, #0x0                   	// #0
   127c8:	b	1274c <gelf_update_auxv@@ELFUTILS_1.3+0x64>
   127cc:	mov	w0, #0x21                  	// #33
   127d0:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   127d4:	mov	w0, #0x0                   	// #0
   127d8:	b	1274c <gelf_update_auxv@@ELFUTILS_1.3+0x64>
   127dc:	nop

00000000000127e0 <gelf_getnote@@ELFUTILS_1.3>:
   127e0:	cbz	x0, 128c0 <gelf_getnote@@ELFUTILS_1.3+0xe0>
   127e4:	stp	x29, x30, [sp, #-16]!
   127e8:	mov	x29, sp
   127ec:	ldr	w6, [x0, #8]
   127f0:	cmp	w6, #0x13
   127f4:	ccmp	w6, #0x1a, #0x4, ne  // ne = any
   127f8:	b.ne	128c8 <gelf_getnote@@ELFUTILS_1.3+0xe8>  // b.any
   127fc:	ldr	x5, [x0, #16]
   12800:	cmp	x5, x1
   12804:	b.cc	128ac <gelf_getnote@@ELFUTILS_1.3+0xcc>  // b.lo, b.ul, b.last
   12808:	sub	x7, x5, x1
   1280c:	cmp	x7, #0xb
   12810:	b.ls	128ac <gelf_getnote@@ELFUTILS_1.3+0xcc>  // b.plast
   12814:	add	x7, x1, #0xc
   12818:	cmp	x5, x7
   1281c:	b.cs	1282c <gelf_getnote@@ELFUTILS_1.3+0x4c>  // b.hs, b.nlast
   12820:	mov	x0, #0x0                   	// #0
   12824:	ldp	x29, x30, [sp], #16
   12828:	ret
   1282c:	ldr	x8, [x0]
   12830:	str	x7, [x3]
   12834:	ldr	x5, [x0, #16]
   12838:	add	x9, x8, x1
   1283c:	ldr	w0, [x8, x1]
   12840:	cmp	x0, x5
   12844:	b.hi	12820 <gelf_getnote@@ELFUTILS_1.3+0x40>  // b.pmore
   12848:	sub	x3, x5, x0
   1284c:	cmp	x3, x7
   12850:	b.cc	12820 <gelf_getnote@@ELFUTILS_1.3+0x40>  // b.lo, b.ul, b.last
   12854:	ldr	w10, [x9, #4]
   12858:	add	x7, x0, x7
   1285c:	cmp	w6, #0x1a
   12860:	b.eq	128d4 <gelf_getnote@@ELFUTILS_1.3+0xf4>  // b.none
   12864:	add	x0, x7, #0x3
   12868:	add	w6, w10, #0x3
   1286c:	and	x3, x0, #0xfffffffc
   12870:	and	w6, w6, #0xfffffffc
   12874:	cmp	x5, x3
   12878:	b.cc	12820 <gelf_getnote@@ELFUTILS_1.3+0x40>  // b.lo, b.ul, b.last
   1287c:	sub	x5, x5, x3
   12880:	mov	w0, w6
   12884:	cmp	x5, w6, uxtw
   12888:	b.cc	12820 <gelf_getnote@@ELFUTILS_1.3+0x40>  // b.lo, b.ul, b.last
   1288c:	cbz	w6, 128e8 <gelf_getnote@@ELFUTILS_1.3+0x108>
   12890:	ldr	x1, [x8, x1]
   12894:	str	x3, [x4]
   12898:	str	x1, [x2]
   1289c:	add	x0, x0, x3
   128a0:	ldr	w1, [x9, #8]
   128a4:	str	w1, [x2, #8]
   128a8:	b	12824 <gelf_getnote@@ELFUTILS_1.3+0x44>
   128ac:	mov	w0, #0x1d                  	// #29
   128b0:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   128b4:	mov	x0, #0x0                   	// #0
   128b8:	ldp	x29, x30, [sp], #16
   128bc:	ret
   128c0:	mov	x0, #0x0                   	// #0
   128c4:	ret
   128c8:	mov	w0, #0x4                   	// #4
   128cc:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   128d0:	b	12820 <gelf_getnote@@ELFUTILS_1.3+0x40>
   128d4:	add	x0, x7, #0x7
   128d8:	add	w6, w10, #0x7
   128dc:	and	x3, x0, #0xfffffff8
   128e0:	and	w6, w6, #0xfffffff8
   128e4:	b	12874 <gelf_getnote@@ELFUTILS_1.3+0x94>
   128e8:	cbz	w10, 12890 <gelf_getnote@@ELFUTILS_1.3+0xb0>
   128ec:	b	12820 <gelf_getnote@@ELFUTILS_1.3+0x40>

00000000000128f0 <gelf_xlatetof@@ELFUTILS_1.0>:
   128f0:	mov	x5, x1
   128f4:	mov	x1, x2
   128f8:	mov	w2, w3
   128fc:	cbz	x0, 12918 <gelf_xlatetof@@ELFUTILS_1.0+0x28>
   12900:	ldr	w0, [x0, #32]
   12904:	cmp	w0, #0x1
   12908:	mov	x0, x5
   1290c:	b.eq	12914 <gelf_xlatetof@@ELFUTILS_1.0+0x24>  // b.none
   12910:	b	5770 <elf64_xlatetof@@ELFUTILS_1.0>
   12914:	b	5598 <elf32_xlatetof@@ELFUTILS_1.0>
   12918:	ret
   1291c:	nop

0000000000012920 <gelf_xlatetom@@ELFUTILS_1.0>:
   12920:	mov	x5, x1
   12924:	mov	x1, x2
   12928:	mov	w2, w3
   1292c:	cbz	x0, 12948 <gelf_xlatetom@@ELFUTILS_1.0+0x28>
   12930:	ldr	w0, [x0, #32]
   12934:	cmp	w0, #0x1
   12938:	mov	x0, x5
   1293c:	b.eq	12944 <gelf_xlatetom@@ELFUTILS_1.0+0x24>  // b.none
   12940:	b	5860 <elf64_xlatetom@@ELFUTILS_1.0>
   12944:	b	5680 <elf32_xlatetom@@ELFUTILS_1.0>
   12948:	ret
   1294c:	nop

0000000000012950 <nlist@@ELFUTILS_1.0>:
   12950:	stp	x29, x30, [sp, #-256]!
   12954:	mov	x29, sp
   12958:	stp	x19, x20, [sp, #16]
   1295c:	mov	x19, x1
   12960:	mov	w1, #0x0                   	// #0
   12964:	bl	30d0 <open@plt>
   12968:	cmn	w0, #0x1
   1296c:	b.eq	12cf8 <nlist@@ELFUTILS_1.0+0x3a8>  // b.none
   12970:	stp	x21, x22, [sp, #32]
   12974:	stp	x23, x24, [sp, #48]
   12978:	mov	w24, w0
   1297c:	mov	w0, #0x1                   	// #1
   12980:	bl	3448 <elf_version@@ELFUTILS_1.0>
   12984:	mov	w0, w24
   12988:	mov	x2, #0x0                   	// #0
   1298c:	mov	w1, #0x8                   	// #8
   12990:	bl	4da8 <elf_begin@@ELFUTILS_1.0>
   12994:	mov	x22, x0
   12998:	cbz	x0, 129f8 <nlist@@ELFUTILS_1.0+0xa8>
   1299c:	add	x23, sp, #0xc0
   129a0:	mov	x21, #0x0                   	// #0
   129a4:	mov	x20, #0x0                   	// #0
   129a8:	stp	x25, x26, [sp, #64]
   129ac:	b	129d0 <nlist@@ELFUTILS_1.0+0x80>
   129b0:	bl	c640 <gelf_getshdr@@ELFUTILS_1.0>
   129b4:	mov	x26, x0
   129b8:	cbz	x0, 129ec <nlist@@ELFUTILS_1.0+0x9c>
   129bc:	ldr	w0, [x0, #4]
   129c0:	cmp	w0, #0x2
   129c4:	b.eq	12a60 <nlist@@ELFUTILS_1.0+0x110>  // b.none
   129c8:	cmp	w0, #0xb
   129cc:	csel	x21, x21, x20, ne  // ne = any
   129d0:	mov	x1, x20
   129d4:	mov	x0, x22
   129d8:	bl	b820 <elf_nextscn@@ELFUTILS_1.0>
   129dc:	mov	x20, x0
   129e0:	mov	x1, x23
   129e4:	cbnz	x0, 129b0 <nlist@@ELFUTILS_1.0+0x60>
   129e8:	cbnz	x21, 12a48 <nlist@@ELFUTILS_1.0+0xf8>
   129ec:	mov	x0, x22
   129f0:	bl	5108 <elf_end@@ELFUTILS_1.0>
   129f4:	ldp	x25, x26, [sp, #64]
   129f8:	mov	w0, w24
   129fc:	bl	3180 <close@plt>
   12a00:	ldp	x21, x22, [sp, #32]
   12a04:	ldp	x23, x24, [sp, #48]
   12a08:	ldr	x0, [x19]
   12a0c:	cbnz	x0, 12a30 <nlist@@ELFUTILS_1.0+0xe0>
   12a10:	b	12a38 <nlist@@ELFUTILS_1.0+0xe8>
   12a14:	strb	wzr, [x19, #20]
   12a18:	strb	wzr, [x19, #21]
   12a1c:	str	xzr, [x19, #8]
   12a20:	strh	wzr, [x19, #16]
   12a24:	strh	wzr, [x19, #18]
   12a28:	ldr	x0, [x19, #24]!
   12a2c:	cbz	x0, 12a38 <nlist@@ELFUTILS_1.0+0xe8>
   12a30:	ldrb	w0, [x0]
   12a34:	cbnz	w0, 12a14 <nlist@@ELFUTILS_1.0+0xc4>
   12a38:	mov	w0, #0xffffffff            	// #-1
   12a3c:	ldp	x19, x20, [sp, #16]
   12a40:	ldp	x29, x30, [sp], #256
   12a44:	ret
   12a48:	add	x1, sp, #0xc0
   12a4c:	mov	x0, x21
   12a50:	bl	c640 <gelf_getshdr@@ELFUTILS_1.0>
   12a54:	mov	x26, x0
   12a58:	cbz	x0, 129ec <nlist@@ELFUTILS_1.0+0x9c>
   12a5c:	mov	x20, x21
   12a60:	mov	x0, x20
   12a64:	mov	x1, #0x0                   	// #0
   12a68:	bl	d348 <elf_getdata@@ELFUTILS_1.0>
   12a6c:	mov	x25, x0
   12a70:	cbz	x0, 129ec <nlist@@ELFUTILS_1.0+0x9c>
   12a74:	ldr	x20, [x26, #32]
   12a78:	mov	w1, #0xb                   	// #11
   12a7c:	mov	x0, x22
   12a80:	mov	w3, #0x1                   	// #1
   12a84:	mov	x2, #0x1                   	// #1
   12a88:	bl	5518 <gelf_fsize@@ELFUTILS_1.0>
   12a8c:	mov	x23, x0
   12a90:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   12a94:	udiv	x0, x20, x0
   12a98:	str	x0, [sp, #136]
   12a9c:	cmp	x0, x1
   12aa0:	b.cs	12de8 <nlist@@ELFUTILS_1.0+0x498>  // b.hs, b.nlast
   12aa4:	add	x1, x0, x0, lsl #1
   12aa8:	mov	x0, #0xa                   	// #10
   12aac:	cmp	x1, #0x15
   12ab0:	stp	x27, x28, [sp, #80]
   12ab4:	lsr	x1, x1, #1
   12ab8:	csel	x0, x1, x0, hi  // hi = pmore
   12abc:	bl	13cb8 <elf64_checksum@@ELFUTILS_1.0+0x248>
   12ac0:	mov	x27, x0
   12ac4:	mov	x1, #0x1                   	// #1
   12ac8:	add	x2, x0, x1
   12acc:	add	x2, x2, x2, lsl #2
   12ad0:	lsl	x2, x2, #3
   12ad4:	add	x0, x2, #0x8
   12ad8:	bl	3140 <calloc@plt>
   12adc:	mov	x21, x0
   12ae0:	cbz	x0, 12e00 <nlist@@ELFUTILS_1.0+0x4b0>
   12ae4:	add	x0, sp, #0xa0
   12ae8:	str	x27, [x21]
   12aec:	str	x0, [sp, #152]
   12af0:	add	x0, sp, #0xa8
   12af4:	str	x0, [sp, #144]
   12af8:	cmp	x20, x23
   12afc:	mov	x23, #0x0                   	// #0
   12b00:	b.cc	12bf0 <nlist@@ELFUTILS_1.0+0x2a0>  // b.lo, b.ul, b.last
   12b04:	nop
   12b08:	ldr	x2, [sp, #144]
   12b0c:	mov	w1, w23
   12b10:	mov	x0, x25
   12b14:	bl	11af0 <gelf_getsym@@ELFUTILS_1.0>
   12b18:	cbz	x0, 12da4 <nlist@@ELFUTILS_1.0+0x454>
   12b1c:	ldr	w2, [x0]
   12b20:	mov	x0, x22
   12b24:	ldr	w1, [x26, #40]
   12b28:	bl	c868 <elf_strptr@@ELFUTILS_1.0>
   12b2c:	str	x0, [sp, #160]
   12b30:	mov	x27, x0
   12b34:	cbz	x0, 12da4 <nlist@@ELFUTILS_1.0+0x454>
   12b38:	ldrb	w1, [x0]
   12b3c:	cbz	w1, 12be0 <nlist@@ELFUTILS_1.0+0x290>
   12b40:	bl	3488 <elf_hash@@ELFUTILS_1.0>
   12b44:	mov	x28, x0
   12b48:	ldr	x9, [x21]
   12b4c:	udiv	x0, x0, x9
   12b50:	msub	x0, x0, x9, x28
   12b54:	add	x20, x0, #0x1
   12b58:	add	x0, x0, x0, lsl #2
   12b5c:	lsl	x3, x20, #2
   12b60:	add	x0, x21, x0, lsl #3
   12b64:	ldr	x1, [x0, #48]
   12b68:	cbz	x1, 12bb8 <nlist@@ELFUTILS_1.0+0x268>
   12b6c:	cmp	x28, x1
   12b70:	b.eq	12d7c <nlist@@ELFUTILS_1.0+0x42c>  // b.none
   12b74:	sub	x0, x9, #0x2
   12b78:	udiv	x6, x28, x0
   12b7c:	msub	x6, x6, x0, x28
   12b80:	add	x6, x6, #0x1
   12b84:	sub	x9, x9, x6
   12b88:	cmp	x6, x20
   12b8c:	add	x1, x20, x9
   12b90:	sub	x20, x20, x6
   12b94:	csel	x20, x20, x1, cc  // cc = lo, ul, last
   12b98:	lsl	x3, x20, #2
   12b9c:	add	x2, x3, x20
   12ba0:	lsl	x2, x2, #3
   12ba4:	add	x1, x21, x2
   12ba8:	ldr	x5, [x1, #8]
   12bac:	cmp	x28, x5
   12bb0:	b.eq	12d04 <nlist@@ELFUTILS_1.0+0x3b4>  // b.none
   12bb4:	cbnz	x5, 12b88 <nlist@@ELFUTILS_1.0+0x238>
   12bb8:	add	x2, x3, x20
   12bbc:	add	x2, x21, x2, lsl #3
   12bc0:	add	x2, x2, #0x8
   12bc4:	ldr	x4, [sp, #152]
   12bc8:	mov	x3, x2
   12bcc:	str	x28, [x3], #8
   12bd0:	ldp	x0, x1, [x4]
   12bd4:	stp	x0, x1, [x2, #8]
   12bd8:	ldp	x0, x1, [x4, #16]
   12bdc:	stp	x0, x1, [x3, #16]
   12be0:	add	x23, x23, #0x1
   12be4:	ldr	x0, [sp, #136]
   12be8:	cmp	x0, x23
   12bec:	b.hi	12b08 <nlist@@ELFUTILS_1.0+0x1b8>  // b.pmore
   12bf0:	ldr	x3, [x19]
   12bf4:	cbz	x3, 12cc8 <nlist@@ELFUTILS_1.0+0x378>
   12bf8:	ldrb	w0, [x3]
   12bfc:	cbz	w0, 12cc8 <nlist@@ELFUTILS_1.0+0x378>
   12c00:	mov	x0, x3
   12c04:	str	x3, [sp, #96]
   12c08:	bl	3488 <elf_hash@@ELFUTILS_1.0>
   12c0c:	mov	x28, x0
   12c10:	ldr	x23, [x21]
   12c14:	ldr	x3, [sp, #96]
   12c18:	udiv	x0, x0, x23
   12c1c:	msub	x0, x0, x23, x28
   12c20:	add	x20, x0, #0x1
   12c24:	add	x0, x0, x0, lsl #2
   12c28:	lsl	x25, x20, #2
   12c2c:	add	x0, x21, x0, lsl #3
   12c30:	ldr	x1, [x0, #48]
   12c34:	cbz	x1, 12c88 <nlist@@ELFUTILS_1.0+0x338>
   12c38:	cmp	x28, x1
   12c3c:	b.eq	12dc0 <nlist@@ELFUTILS_1.0+0x470>  // b.none
   12c40:	sub	x0, x23, #0x2
   12c44:	udiv	x27, x28, x0
   12c48:	msub	x27, x27, x0, x28
   12c4c:	add	x27, x27, #0x1
   12c50:	sub	x2, x23, x27
   12c54:	nop
   12c58:	cmp	x27, x20
   12c5c:	add	x0, x20, x2
   12c60:	sub	x20, x20, x27
   12c64:	csel	x20, x20, x0, cc  // cc = lo, ul, last
   12c68:	lsl	x25, x20, #2
   12c6c:	add	x23, x25, x20
   12c70:	lsl	x23, x23, #3
   12c74:	add	x1, x21, x23
   12c78:	ldr	x26, [x1, #8]
   12c7c:	cmp	x28, x26
   12c80:	b.eq	12d38 <nlist@@ELFUTILS_1.0+0x3e8>  // b.none
   12c84:	cbnz	x26, 12c58 <nlist@@ELFUTILS_1.0+0x308>
   12c88:	add	x23, x25, x20
   12c8c:	add	x23, x21, x23, lsl #3
   12c90:	add	x23, x23, #0x8
   12c94:	ldr	x0, [x23]
   12c98:	cbz	x0, 12d5c <nlist@@ELFUTILS_1.0+0x40c>
   12c9c:	ldrb	w0, [x23, #20]
   12ca0:	strb	wzr, [x19, #20]
   12ca4:	strb	wzr, [x19, #21]
   12ca8:	and	w0, w0, #0xf
   12cac:	ldrh	w1, [x23, #22]
   12cb0:	ldr	x2, [x23, #24]
   12cb4:	str	x2, [x19, #8]
   12cb8:	strh	w1, [x19, #16]
   12cbc:	strh	w0, [x19, #18]
   12cc0:	ldr	x3, [x19, #24]!
   12cc4:	cbnz	x3, 12bf8 <nlist@@ELFUTILS_1.0+0x2a8>
   12cc8:	mov	x0, x21
   12ccc:	bl	3200 <free@plt>
   12cd0:	mov	x0, x22
   12cd4:	bl	5108 <elf_end@@ELFUTILS_1.0>
   12cd8:	mov	w0, w24
   12cdc:	bl	3180 <close@plt>
   12ce0:	mov	w0, #0x0                   	// #0
   12ce4:	ldp	x21, x22, [sp, #32]
   12ce8:	ldp	x23, x24, [sp, #48]
   12cec:	ldp	x25, x26, [sp, #64]
   12cf0:	ldp	x27, x28, [sp, #80]
   12cf4:	b	12a3c <nlist@@ELFUTILS_1.0+0xec>
   12cf8:	mov	w0, #0x27                  	// #39
   12cfc:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   12d00:	b	12a08 <nlist@@ELFUTILS_1.0+0xb8>
   12d04:	ldr	x1, [x1, #16]
   12d08:	mov	x0, x27
   12d0c:	stp	x6, x5, [sp, #96]
   12d10:	stp	x9, x2, [sp, #112]
   12d14:	str	x3, [sp, #128]
   12d18:	bl	31c0 <strcmp@plt>
   12d1c:	ldp	x6, x5, [sp, #96]
   12d20:	ldp	x9, x2, [sp, #112]
   12d24:	ldr	x3, [sp, #128]
   12d28:	cbnz	w0, 12bb4 <nlist@@ELFUTILS_1.0+0x264>
   12d2c:	add	x2, x2, #0x8
   12d30:	add	x2, x21, x2
   12d34:	b	12bc4 <nlist@@ELFUTILS_1.0+0x274>
   12d38:	ldr	x1, [x1, #16]
   12d3c:	mov	x0, x3
   12d40:	stp	x3, x2, [sp, #96]
   12d44:	bl	31c0 <strcmp@plt>
   12d48:	ldp	x3, x2, [sp, #96]
   12d4c:	cbnz	w0, 12c84 <nlist@@ELFUTILS_1.0+0x334>
   12d50:	add	x23, x23, #0x8
   12d54:	add	x23, x21, x23
   12d58:	b	12c94 <nlist@@ELFUTILS_1.0+0x344>
   12d5c:	strb	wzr, [x19, #20]
   12d60:	strb	wzr, [x19, #21]
   12d64:	str	xzr, [x19, #8]
   12d68:	strh	wzr, [x19, #16]
   12d6c:	strh	wzr, [x19, #18]
   12d70:	ldr	x3, [x19, #24]!
   12d74:	cbnz	x3, 12bf8 <nlist@@ELFUTILS_1.0+0x2a8>
   12d78:	b	12cc8 <nlist@@ELFUTILS_1.0+0x378>
   12d7c:	ldr	x1, [x0, #56]
   12d80:	mov	x0, x27
   12d84:	str	x9, [sp, #96]
   12d88:	bl	31c0 <strcmp@plt>
   12d8c:	ldr	x9, [sp, #96]
   12d90:	cbnz	w0, 12b74 <nlist@@ELFUTILS_1.0+0x224>
   12d94:	add	x2, x20, x20, lsl #2
   12d98:	add	x2, x21, x2, lsl #3
   12d9c:	add	x2, x2, #0x8
   12da0:	b	12bc4 <nlist@@ELFUTILS_1.0+0x274>
   12da4:	mov	x0, x21
   12da8:	bl	3200 <free@plt>
   12dac:	mov	x0, x22
   12db0:	ldp	x27, x28, [sp, #80]
   12db4:	bl	5108 <elf_end@@ELFUTILS_1.0>
   12db8:	ldp	x25, x26, [sp, #64]
   12dbc:	b	129f8 <nlist@@ELFUTILS_1.0+0xa8>
   12dc0:	ldr	x1, [x0, #56]
   12dc4:	mov	x0, x3
   12dc8:	str	x3, [sp, #96]
   12dcc:	bl	31c0 <strcmp@plt>
   12dd0:	ldr	x3, [sp, #96]
   12dd4:	cbnz	w0, 12c40 <nlist@@ELFUTILS_1.0+0x2f0>
   12dd8:	add	x20, x20, x20, lsl #2
   12ddc:	add	x0, x21, x20, lsl #3
   12de0:	add	x23, x0, #0x8
   12de4:	b	12c94 <nlist@@ELFUTILS_1.0+0x344>
   12de8:	bl	3340 <__errno_location@plt>
   12dec:	mov	w1, #0x16                  	// #22
   12df0:	str	w1, [x0]
   12df4:	mov	w0, #0x8                   	// #8
   12df8:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   12dfc:	b	129ec <nlist@@ELFUTILS_1.0+0x9c>
   12e00:	ldp	x27, x28, [sp, #80]
   12e04:	b	12df4 <nlist@@ELFUTILS_1.0+0x4a4>

0000000000012e08 <gelf_getsymshndx@@ELFUTILS_1.0>:
   12e08:	cbz	x0, 12f10 <gelf_getsymshndx@@ELFUTILS_1.0+0x108>
   12e0c:	stp	x29, x30, [sp, #-16]!
   12e10:	mov	x29, sp
   12e14:	ldr	w5, [x0, #8]
   12e18:	cmp	w5, #0xb
   12e1c:	b.ne	12ee8 <gelf_getsymshndx@@ELFUTILS_1.0+0xe0>  // b.any
   12e20:	cbz	x1, 12f18 <gelf_getsymshndx@@ELFUTILS_1.0+0x110>
   12e24:	ldr	w5, [x1, #8]
   12e28:	cmp	w5, #0xc
   12e2c:	b.ne	12ee8 <gelf_getsymshndx@@ELFUTILS_1.0+0xe0>  // b.any
   12e30:	ldr	x5, [x1, #16]
   12e34:	mov	w6, w2
   12e38:	ldr	x7, [x0, #40]
   12e3c:	lsr	x5, x5, #2
   12e40:	cmp	x5, w2, uxtw
   12e44:	ldr	x5, [x7, #136]
   12e48:	b.ls	12efc <gelf_getsymshndx@@ELFUTILS_1.0+0xf4>  // b.plast
   12e4c:	ldr	x1, [x1]
   12e50:	ldr	w7, [x1, w2, sxtw #2]
   12e54:	ldr	w5, [x5, #32]
   12e58:	ldr	x1, [x0, #16]
   12e5c:	cmp	w5, #0x1
   12e60:	b.eq	12ea8 <gelf_getsymshndx@@ELFUTILS_1.0+0xa0>  // b.none
   12e64:	mov	x5, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   12e68:	movk	x5, #0xaaab
   12e6c:	umulh	x1, x1, x5
   12e70:	cmp	x6, x1, lsr #4
   12e74:	b.cs	12efc <gelf_getsymshndx@@ELFUTILS_1.0+0xf4>  // b.hs, b.nlast
   12e78:	ldr	x0, [x0]
   12e7c:	mov	w1, #0x18                  	// #24
   12e80:	smaddl	x2, w2, w1, x0
   12e84:	ldp	x0, x1, [x2]
   12e88:	stp	x0, x1, [x3]
   12e8c:	ldr	x0, [x2, #16]
   12e90:	str	x0, [x3, #16]
   12e94:	mov	x0, x3
   12e98:	cbz	x4, 12ea0 <gelf_getsymshndx@@ELFUTILS_1.0+0x98>
   12e9c:	str	w7, [x4]
   12ea0:	ldp	x29, x30, [sp], #16
   12ea4:	ret
   12ea8:	cmp	x6, x1, lsr #4
   12eac:	b.cs	12efc <gelf_getsymshndx@@ELFUTILS_1.0+0xf4>  // b.hs, b.nlast
   12eb0:	ldr	x1, [x0]
   12eb4:	sbfiz	x2, x2, #4, #32
   12eb8:	add	x0, x1, x2
   12ebc:	ldr	w1, [x1, x2]
   12ec0:	str	w1, [x3]
   12ec4:	ldrb	w1, [x0, #12]
   12ec8:	strb	w1, [x3, #4]
   12ecc:	ldrb	w1, [x0, #13]
   12ed0:	strb	w1, [x3, #5]
   12ed4:	ldp	w2, w1, [x0, #4]
   12ed8:	ldrh	w0, [x0, #14]
   12edc:	strh	w0, [x3, #6]
   12ee0:	stp	x2, x1, [x3, #8]
   12ee4:	b	12e94 <gelf_getsymshndx@@ELFUTILS_1.0+0x8c>
   12ee8:	mov	w0, #0x4                   	// #4
   12eec:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   12ef0:	mov	x0, #0x0                   	// #0
   12ef4:	ldp	x29, x30, [sp], #16
   12ef8:	ret
   12efc:	mov	w0, #0x16                  	// #22
   12f00:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   12f04:	mov	x0, #0x0                   	// #0
   12f08:	ldp	x29, x30, [sp], #16
   12f0c:	ret
   12f10:	mov	x0, #0x0                   	// #0
   12f14:	ret
   12f18:	ldr	x1, [x0, #40]
   12f1c:	mov	w6, w2
   12f20:	mov	w7, #0x0                   	// #0
   12f24:	ldr	x5, [x1, #136]
   12f28:	b	12e54 <gelf_getsymshndx@@ELFUTILS_1.0+0x4c>
   12f2c:	nop

0000000000012f30 <gelf_update_symshndx@@ELFUTILS_1.0>:
   12f30:	cbz	x0, 13050 <gelf_update_symshndx@@ELFUTILS_1.0+0x120>
   12f34:	stp	x29, x30, [sp, #-16]!
   12f38:	mov	x29, sp
   12f3c:	ldr	w5, [x0, #8]
   12f40:	cmp	w5, #0xb
   12f44:	b.ne	13058 <gelf_update_symshndx@@ELFUTILS_1.0+0x128>  // b.any
   12f48:	ldr	x9, [x0, #40]
   12f4c:	ldr	x7, [x9, #136]
   12f50:	cbz	x1, 13038 <gelf_update_symshndx@@ELFUTILS_1.0+0x108>
   12f54:	ldr	x8, [x1, #16]
   12f58:	add	w6, w2, #0x1
   12f5c:	sbfiz	x5, x6, #2, #32
   12f60:	cmp	x8, w6, sxtw #2
   12f64:	b.cc	1303c <gelf_update_symshndx@@ELFUTILS_1.0+0x10c>  // b.lo, b.ul, b.last
   12f68:	ldr	x1, [x1]
   12f6c:	sub	x5, x5, #0x4
   12f70:	add	x1, x1, x5
   12f74:	ldr	w5, [x7, #32]
   12f78:	cmp	w5, #0x1
   12f7c:	b.eq	12fd8 <gelf_update_symshndx@@ELFUTILS_1.0+0xa8>  // b.none
   12f80:	ldr	x6, [x0, #16]
   12f84:	mov	x7, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   12f88:	movk	x7, #0xaaab
   12f8c:	mov	w5, w2
   12f90:	umulh	x6, x6, x7
   12f94:	cmp	x5, x6, lsr #4
   12f98:	b.cs	1303c <gelf_update_symshndx@@ELFUTILS_1.0+0x10c>  // b.hs, b.nlast
   12f9c:	ldr	x0, [x0]
   12fa0:	mov	w5, #0x18                  	// #24
   12fa4:	ldp	x6, x7, [x3]
   12fa8:	smaddl	x2, w2, w5, x0
   12fac:	stp	x6, x7, [x2]
   12fb0:	ldr	x0, [x3, #16]
   12fb4:	str	x0, [x2, #16]
   12fb8:	cbz	x1, 12fc0 <gelf_update_symshndx@@ELFUTILS_1.0+0x90>
   12fbc:	str	w4, [x1]
   12fc0:	ldr	w1, [x9, #156]
   12fc4:	mov	w0, #0x1                   	// #1
   12fc8:	orr	w1, w1, w0
   12fcc:	str	w1, [x9, #156]
   12fd0:	ldp	x29, x30, [sp], #16
   12fd4:	ret
   12fd8:	ldr	x6, [x3, #8]
   12fdc:	mov	x5, #0xffffffff            	// #4294967295
   12fe0:	cmp	x6, x5
   12fe4:	b.hi	13068 <gelf_update_symshndx@@ELFUTILS_1.0+0x138>  // b.pmore
   12fe8:	ldr	x7, [x3, #16]
   12fec:	cmp	x7, x5
   12ff0:	b.hi	13068 <gelf_update_symshndx@@ELFUTILS_1.0+0x138>  // b.pmore
   12ff4:	ldr	x8, [x0, #16]
   12ff8:	mov	w5, w2
   12ffc:	cmp	x5, x8, lsr #4
   13000:	b.cs	1303c <gelf_update_symshndx@@ELFUTILS_1.0+0x10c>  // b.hs, b.nlast
   13004:	ldr	x5, [x0]
   13008:	sbfiz	x2, x2, #4, #32
   1300c:	ldr	w8, [x3]
   13010:	add	x0, x5, x2
   13014:	str	w8, [x5, x2]
   13018:	stp	w6, w7, [x0, #4]
   1301c:	ldrb	w2, [x3, #4]
   13020:	strb	w2, [x0, #12]
   13024:	ldrb	w2, [x3, #5]
   13028:	strb	w2, [x0, #13]
   1302c:	ldrh	w2, [x3, #6]
   13030:	strh	w2, [x0, #14]
   13034:	b	12fb8 <gelf_update_symshndx@@ELFUTILS_1.0+0x88>
   13038:	cbz	w4, 12f74 <gelf_update_symshndx@@ELFUTILS_1.0+0x44>
   1303c:	mov	w0, #0x16                  	// #22
   13040:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   13044:	mov	w0, #0x0                   	// #0
   13048:	ldp	x29, x30, [sp], #16
   1304c:	ret
   13050:	mov	w0, #0x0                   	// #0
   13054:	ret
   13058:	mov	w0, #0x1f                  	// #31
   1305c:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   13060:	mov	w0, #0x0                   	// #0
   13064:	b	12fd0 <gelf_update_symshndx@@ELFUTILS_1.0+0xa0>
   13068:	mov	w0, #0x21                  	// #33
   1306c:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   13070:	mov	w0, #0x0                   	// #0
   13074:	b	12fd0 <gelf_update_symshndx@@ELFUTILS_1.0+0xa0>

0000000000013078 <gelf_update_versym@@ELFUTILS_1.0>:
   13078:	cbz	x0, 130cc <gelf_update_versym@@ELFUTILS_1.0+0x54>
   1307c:	mov	x3, x0
   13080:	stp	x29, x30, [sp, #-16]!
   13084:	mov	w0, w1
   13088:	mov	x29, sp
   1308c:	ldr	x4, [x3, #16]
   13090:	cmp	x0, x4, lsr #1
   13094:	b.cs	130d4 <gelf_update_versym@@ELFUTILS_1.0+0x5c>  // b.hs, b.nlast
   13098:	ldr	w0, [x3, #8]
   1309c:	cmp	w0, #0x4
   130a0:	b.ne	130e4 <gelf_update_versym@@ELFUTILS_1.0+0x6c>  // b.any
   130a4:	ldr	x4, [x3, #40]
   130a8:	mov	w0, #0x1                   	// #1
   130ac:	ldr	x3, [x3]
   130b0:	ldrh	w5, [x2]
   130b4:	ldr	w2, [x4, #156]
   130b8:	strh	w5, [x3, w1, sxtw #1]
   130bc:	orr	w1, w2, w0
   130c0:	str	w1, [x4, #156]
   130c4:	ldp	x29, x30, [sp], #16
   130c8:	ret
   130cc:	mov	w0, #0x0                   	// #0
   130d0:	ret
   130d4:	mov	w0, #0x16                  	// #22
   130d8:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   130dc:	mov	w0, #0x0                   	// #0
   130e0:	b	130c4 <gelf_update_versym@@ELFUTILS_1.0+0x4c>
   130e4:	mov	w0, #0x1f                  	// #31
   130e8:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   130ec:	mov	w0, #0x0                   	// #0
   130f0:	b	130c4 <gelf_update_versym@@ELFUTILS_1.0+0x4c>
   130f4:	nop

00000000000130f8 <gelf_update_verneed@@ELFUTILS_1.0>:
   130f8:	cbz	x0, 13158 <gelf_update_verneed@@ELFUTILS_1.0+0x60>
   130fc:	stp	x29, x30, [sp, #-16]!
   13100:	mov	x29, sp
   13104:	tbnz	w1, #31, 13160 <gelf_update_verneed@@ELFUTILS_1.0+0x68>
   13108:	mov	x3, x0
   1310c:	sxtw	x1, w1
   13110:	ldr	x0, [x0, #16]
   13114:	add	x4, x1, #0x10
   13118:	cmp	x4, x0
   1311c:	b.hi	13160 <gelf_update_verneed@@ELFUTILS_1.0+0x68>  // b.pmore
   13120:	ldr	w0, [x3, #8]
   13124:	cmp	w0, #0x11
   13128:	b.ne	13174 <gelf_update_verneed@@ELFUTILS_1.0+0x7c>  // b.any
   1312c:	ldr	x4, [x3]
   13130:	mov	w0, #0x1                   	// #1
   13134:	ldp	x6, x7, [x2]
   13138:	add	x1, x4, x1
   1313c:	stp	x6, x7, [x1]
   13140:	ldr	x2, [x3, #40]
   13144:	ldr	w1, [x2, #156]
   13148:	orr	w1, w1, w0
   1314c:	str	w1, [x2, #156]
   13150:	ldp	x29, x30, [sp], #16
   13154:	ret
   13158:	mov	w0, #0x0                   	// #0
   1315c:	ret
   13160:	mov	w0, #0x16                  	// #22
   13164:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   13168:	mov	w0, #0x0                   	// #0
   1316c:	ldp	x29, x30, [sp], #16
   13170:	ret
   13174:	mov	w0, #0x1f                  	// #31
   13178:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   1317c:	mov	w0, #0x0                   	// #0
   13180:	b	13150 <gelf_update_verneed@@ELFUTILS_1.0+0x58>
   13184:	nop

0000000000013188 <gelf_update_vernaux@@ELFUTILS_1.0>:
   13188:	cbz	x0, 131e8 <gelf_update_vernaux@@ELFUTILS_1.0+0x60>
   1318c:	stp	x29, x30, [sp, #-16]!
   13190:	mov	x29, sp
   13194:	tbnz	w1, #31, 131f0 <gelf_update_vernaux@@ELFUTILS_1.0+0x68>
   13198:	mov	x3, x0
   1319c:	sxtw	x1, w1
   131a0:	ldr	x0, [x0, #16]
   131a4:	add	x4, x1, #0x10
   131a8:	cmp	x4, x0
   131ac:	b.hi	131f0 <gelf_update_vernaux@@ELFUTILS_1.0+0x68>  // b.pmore
   131b0:	ldr	w0, [x3, #8]
   131b4:	cmp	w0, #0x11
   131b8:	b.ne	13204 <gelf_update_vernaux@@ELFUTILS_1.0+0x7c>  // b.any
   131bc:	ldr	x4, [x3]
   131c0:	mov	w0, #0x1                   	// #1
   131c4:	ldp	x6, x7, [x2]
   131c8:	add	x1, x4, x1
   131cc:	stp	x6, x7, [x1]
   131d0:	ldr	x2, [x3, #40]
   131d4:	ldr	w1, [x2, #156]
   131d8:	orr	w1, w1, w0
   131dc:	str	w1, [x2, #156]
   131e0:	ldp	x29, x30, [sp], #16
   131e4:	ret
   131e8:	mov	w0, #0x0                   	// #0
   131ec:	ret
   131f0:	mov	w0, #0x16                  	// #22
   131f4:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   131f8:	mov	w0, #0x0                   	// #0
   131fc:	ldp	x29, x30, [sp], #16
   13200:	ret
   13204:	mov	w0, #0x1f                  	// #31
   13208:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   1320c:	mov	w0, #0x0                   	// #0
   13210:	b	131e0 <gelf_update_vernaux@@ELFUTILS_1.0+0x58>
   13214:	nop

0000000000013218 <gelf_update_verdef@@ELFUTILS_1.0>:
   13218:	cbz	x0, 13280 <gelf_update_verdef@@ELFUTILS_1.0+0x68>
   1321c:	stp	x29, x30, [sp, #-16]!
   13220:	mov	x29, sp
   13224:	tbnz	w1, #31, 13288 <gelf_update_verdef@@ELFUTILS_1.0+0x70>
   13228:	mov	x3, x0
   1322c:	sxtw	x1, w1
   13230:	ldr	x0, [x0, #16]
   13234:	add	x4, x1, #0x14
   13238:	cmp	x4, x0
   1323c:	b.hi	13288 <gelf_update_verdef@@ELFUTILS_1.0+0x70>  // b.pmore
   13240:	ldr	w0, [x3, #8]
   13244:	cmp	w0, #0xf
   13248:	b.ne	1329c <gelf_update_verdef@@ELFUTILS_1.0+0x84>  // b.any
   1324c:	ldr	x4, [x3]
   13250:	mov	w0, #0x1                   	// #1
   13254:	ldp	x6, x7, [x2]
   13258:	add	x1, x4, x1
   1325c:	stp	x6, x7, [x1]
   13260:	ldr	w2, [x2, #16]
   13264:	str	w2, [x1, #16]
   13268:	ldr	x2, [x3, #40]
   1326c:	ldr	w1, [x2, #156]
   13270:	orr	w1, w1, w0
   13274:	str	w1, [x2, #156]
   13278:	ldp	x29, x30, [sp], #16
   1327c:	ret
   13280:	mov	w0, #0x0                   	// #0
   13284:	ret
   13288:	mov	w0, #0x16                  	// #22
   1328c:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   13290:	mov	w0, #0x0                   	// #0
   13294:	ldp	x29, x30, [sp], #16
   13298:	ret
   1329c:	mov	w0, #0x1f                  	// #31
   132a0:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   132a4:	mov	w0, #0x0                   	// #0
   132a8:	b	13278 <gelf_update_verdef@@ELFUTILS_1.0+0x60>
   132ac:	nop

00000000000132b0 <gelf_update_verdaux@@ELFUTILS_1.0>:
   132b0:	cbz	x0, 1330c <gelf_update_verdaux@@ELFUTILS_1.0+0x5c>
   132b4:	stp	x29, x30, [sp, #-16]!
   132b8:	mov	x29, sp
   132bc:	tbnz	w1, #31, 13314 <gelf_update_verdaux@@ELFUTILS_1.0+0x64>
   132c0:	mov	x3, x0
   132c4:	sxtw	x0, w1
   132c8:	add	x0, x0, #0x8
   132cc:	ldr	x4, [x3, #16]
   132d0:	cmp	x0, x4
   132d4:	b.hi	13314 <gelf_update_verdaux@@ELFUTILS_1.0+0x64>  // b.pmore
   132d8:	ldr	w0, [x3, #8]
   132dc:	cmp	w0, #0xf
   132e0:	b.ne	13328 <gelf_update_verdaux@@ELFUTILS_1.0+0x78>  // b.any
   132e4:	ldr	x4, [x3]
   132e8:	mov	w0, #0x1                   	// #1
   132ec:	ldr	x2, [x2]
   132f0:	str	x2, [x4, w1, sxtw]
   132f4:	ldr	x2, [x3, #40]
   132f8:	ldr	w1, [x2, #156]
   132fc:	orr	w1, w1, w0
   13300:	str	w1, [x2, #156]
   13304:	ldp	x29, x30, [sp], #16
   13308:	ret
   1330c:	mov	w0, #0x0                   	// #0
   13310:	ret
   13314:	mov	w0, #0x16                  	// #22
   13318:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   1331c:	mov	w0, #0x0                   	// #0
   13320:	ldp	x29, x30, [sp], #16
   13324:	ret
   13328:	mov	w0, #0x1f                  	// #31
   1332c:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   13330:	mov	w0, #0x0                   	// #0
   13334:	b	13304 <gelf_update_verdaux@@ELFUTILS_1.0+0x54>
   13338:	ldr	x2, [x0, #72]
   1333c:	cbz	x2, 133bc <gelf_update_verdaux@@ELFUTILS_1.0+0x10c>
   13340:	ldr	w3, [x0, #32]
   13344:	cmp	w3, #0x1
   13348:	b.eq	13388 <gelf_update_verdaux@@ELFUTILS_1.0+0xd8>  // b.none
   1334c:	ldrh	w2, [x2, #56]
   13350:	mov	x3, #0xffff                	// #65535
   13354:	str	x2, [x1]
   13358:	cmp	x2, x3
   1335c:	b.eq	13368 <gelf_update_verdaux@@ELFUTILS_1.0+0xb8>  // b.none
   13360:	mov	w0, #0x0                   	// #0
   13364:	ret
   13368:	ldr	w2, [x0, #200]
   1336c:	cbz	w2, 13360 <gelf_update_verdaux@@ELFUTILS_1.0+0xb0>
   13370:	ldr	x0, [x0, #360]
   13374:	cbz	x0, 13360 <gelf_update_verdaux@@ELFUTILS_1.0+0xb0>
   13378:	ldr	w2, [x0, #44]
   1337c:	mov	w0, #0x0                   	// #0
   13380:	str	x2, [x1]
   13384:	ret
   13388:	ldrh	w2, [x2, #44]
   1338c:	mov	x3, #0xffff                	// #65535
   13390:	str	x2, [x1]
   13394:	cmp	x2, x3
   13398:	b.ne	13360 <gelf_update_verdaux@@ELFUTILS_1.0+0xb0>  // b.any
   1339c:	ldr	w2, [x0, #200]
   133a0:	cbz	w2, 13360 <gelf_update_verdaux@@ELFUTILS_1.0+0xb0>
   133a4:	ldr	x0, [x0, #360]
   133a8:	cbz	x0, 13360 <gelf_update_verdaux@@ELFUTILS_1.0+0xb0>
   133ac:	ldr	w2, [x0, #28]
   133b0:	mov	w0, #0x0                   	// #0
   133b4:	str	x2, [x1]
   133b8:	ret
   133bc:	stp	x29, x30, [sp, #-16]!
   133c0:	mov	w0, #0x1a                  	// #26
   133c4:	mov	x29, sp
   133c8:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   133cc:	mov	w0, #0xffffffff            	// #-1
   133d0:	ldp	x29, x30, [sp], #16
   133d4:	ret
   133d8:	stp	x29, x30, [sp, #-32]!
   133dc:	mov	x29, sp
   133e0:	stp	x19, x20, [sp, #16]
   133e4:	mov	x19, x0
   133e8:	mov	x20, x1
   133ec:	bl	13338 <gelf_update_verdaux@@ELFUTILS_1.0+0x88>
   133f0:	ldr	x2, [x19, #88]
   133f4:	cbz	x2, 13404 <gelf_update_verdaux@@ELFUTILS_1.0+0x154>
   133f8:	ldp	x19, x20, [sp, #16]
   133fc:	ldp	x29, x30, [sp], #32
   13400:	ret
   13404:	ldr	w2, [x19, #32]
   13408:	ldr	x1, [x19, #72]
   1340c:	cmp	w2, #0x1
   13410:	b.eq	13460 <gelf_update_verdaux@@ELFUTILS_1.0+0x1b0>  // b.none
   13414:	ldr	x4, [x1, #32]
   13418:	cbz	x4, 13478 <gelf_update_verdaux@@ELFUTILS_1.0+0x1c8>
   1341c:	ldr	x1, [x19, #48]
   13420:	cmp	x1, x4
   13424:	b.ls	13468 <gelf_update_verdaux@@ELFUTILS_1.0+0x1b8>  // b.plast
   13428:	cmp	w2, #0x1
   1342c:	mov	x5, #0x38                  	// #56
   13430:	ldr	x3, [x20]
   13434:	mov	x2, #0x20                  	// #32
   13438:	csel	x2, x2, x5, eq  // eq = none
   1343c:	umulh	x5, x3, x2
   13440:	cbnz	x5, 13468 <gelf_update_verdaux@@ELFUTILS_1.0+0x1b8>
   13444:	mul	x3, x3, x2
   13448:	sub	x1, x1, x4
   1344c:	cmp	x1, x3
   13450:	b.cs	133f8 <gelf_update_verdaux@@ELFUTILS_1.0+0x148>  // b.hs, b.nlast
   13454:	udiv	x1, x1, x2
   13458:	str	x1, [x20]
   1345c:	b	133f8 <gelf_update_verdaux@@ELFUTILS_1.0+0x148>
   13460:	ldr	w4, [x1, #28]
   13464:	b	13418 <gelf_update_verdaux@@ELFUTILS_1.0+0x168>
   13468:	mov	w0, #0x21                  	// #33
   1346c:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   13470:	mov	w0, #0xffffffff            	// #-1
   13474:	b	133f8 <gelf_update_verdaux@@ELFUTILS_1.0+0x148>
   13478:	str	xzr, [x20]
   1347c:	b	133f8 <gelf_update_verdaux@@ELFUTILS_1.0+0x148>

0000000000013480 <elf_getphdrnum@@ELFUTILS_1.6>:
   13480:	cbz	x0, 134b0 <elf_getphdrnum@@ELFUTILS_1.6+0x30>
   13484:	ldr	w2, [x0, #24]
   13488:	cmp	w2, #0x3
   1348c:	b.ne	13494 <elf_getphdrnum@@ELFUTILS_1.6+0x14>  // b.any
   13490:	b	133d8 <gelf_update_verdaux@@ELFUTILS_1.0+0x128>
   13494:	stp	x29, x30, [sp, #-16]!
   13498:	mov	w0, #0x4                   	// #4
   1349c:	mov	x29, sp
   134a0:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   134a4:	mov	w0, #0xffffffff            	// #-1
   134a8:	ldp	x29, x30, [sp], #16
   134ac:	ret
   134b0:	mov	w0, #0xffffffff            	// #-1
   134b4:	ret
   134b8:	cbz	x0, 13530 <elf_getphdrnum@@ELFUTILS_1.6+0xb0>
   134bc:	mov	x2, x0
   134c0:	ldr	w0, [x0, #24]
   134c4:	cmp	w0, #0x3
   134c8:	b.ne	13514 <elf_getphdrnum@@ELFUTILS_1.6+0x94>  // b.any
   134cc:	ldr	x3, [x2, #96]
   134d0:	ldr	w0, [x3]
   134d4:	cbz	w0, 13500 <elf_getphdrnum@@ELFUTILS_1.6+0x80>
   134d8:	sub	w2, w0, #0x1
   134dc:	mov	w0, #0x0                   	// #0
   134e0:	sxtw	x4, w2
   134e4:	add	x2, x4, w2, sxtw #1
   134e8:	add	x2, x4, x2, lsl #2
   134ec:	add	x2, x3, x2, lsl #4
   134f0:	ldr	x2, [x2, #144]
   134f4:	add	x2, x2, #0x1
   134f8:	str	x2, [x1]
   134fc:	ret
   13500:	add	x2, x2, #0xc8
   13504:	cmp	x3, x2
   13508:	b.ne	134d8 <elf_getphdrnum@@ELFUTILS_1.6+0x58>  // b.any
   1350c:	str	xzr, [x1]
   13510:	ret
   13514:	stp	x29, x30, [sp, #-16]!
   13518:	mov	w0, #0x4                   	// #4
   1351c:	mov	x29, sp
   13520:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   13524:	mov	w0, #0xffffffff            	// #-1
   13528:	ldp	x29, x30, [sp], #16
   1352c:	ret
   13530:	mov	w0, #0xffffffff            	// #-1
   13534:	ret

0000000000013538 <elf_getshdrnum@@ELFUTILS_1.5>:
   13538:	cbz	x0, 13540 <elf_getshdrnum@@ELFUTILS_1.5+0x8>
   1353c:	b	134b8 <elf_getphdrnum@@ELFUTILS_1.6+0x38>
   13540:	mov	w0, #0xffffffff            	// #-1
   13544:	ret

0000000000013548 <elf_getshdrstrndx@@ELFUTILS_1.5>:
   13548:	cbz	x0, 137f4 <elf_getshdrstrndx@@ELFUTILS_1.5+0x2ac>
   1354c:	stp	x29, x30, [sp, #-144]!
   13550:	mov	x29, sp
   13554:	stp	x19, x20, [sp, #16]
   13558:	mov	x19, x0
   1355c:	ldr	w0, [x0, #24]
   13560:	cmp	w0, #0x3
   13564:	b.ne	135e8 <elf_getshdrstrndx@@ELFUTILS_1.5+0xa0>  // b.any
   13568:	ldr	x2, [x19, #72]
   1356c:	cbz	x2, 135f8 <elf_getshdrstrndx@@ELFUTILS_1.5+0xb0>
   13570:	ldr	w0, [x19, #32]
   13574:	mov	x20, x1
   13578:	cmp	w0, #0x1
   1357c:	b.eq	135a8 <elf_getshdrstrndx@@ELFUTILS_1.5+0x60>  // b.none
   13580:	ldrh	w0, [x2, #62]
   13584:	mov	w1, #0xffff                	// #65535
   13588:	cmp	w0, w1
   1358c:	b.eq	135d0 <elf_getshdrstrndx@@ELFUTILS_1.5+0x88>  // b.none
   13590:	mov	w2, w0
   13594:	mov	w0, #0x0                   	// #0
   13598:	str	x2, [x20]
   1359c:	ldp	x19, x20, [sp, #16]
   135a0:	ldp	x29, x30, [sp], #144
   135a4:	ret
   135a8:	ldrh	w0, [x2, #50]
   135ac:	mov	w1, #0xffff                	// #65535
   135b0:	cmp	w0, w1
   135b4:	b.ne	13590 <elf_getshdrstrndx@@ELFUTILS_1.5+0x48>  // b.any
   135b8:	ldr	w0, [x19, #200]
   135bc:	cbz	w0, 1360c <elf_getshdrstrndx@@ELFUTILS_1.5+0xc4>
   135c0:	ldr	x0, [x19, #360]
   135c4:	cbz	x0, 136d0 <elf_getshdrstrndx@@ELFUTILS_1.5+0x188>
   135c8:	ldr	w0, [x0, #24]
   135cc:	b	13590 <elf_getshdrstrndx@@ELFUTILS_1.5+0x48>
   135d0:	ldr	w0, [x19, #200]
   135d4:	cbz	w0, 1360c <elf_getshdrstrndx@@ELFUTILS_1.5+0xc4>
   135d8:	ldr	x0, [x19, #360]
   135dc:	cbz	x0, 1361c <elf_getshdrstrndx@@ELFUTILS_1.5+0xd4>
   135e0:	ldr	w0, [x0, #40]
   135e4:	b	13590 <elf_getshdrstrndx@@ELFUTILS_1.5+0x48>
   135e8:	mov	w0, #0x4                   	// #4
   135ec:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   135f0:	mov	w0, #0xffffffff            	// #-1
   135f4:	b	1359c <elf_getshdrstrndx@@ELFUTILS_1.5+0x54>
   135f8:	mov	w0, #0x1a                  	// #26
   135fc:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   13600:	mov	w0, #0xffffffff            	// #-1
   13604:	b	1359c <elf_getshdrstrndx@@ELFUTILS_1.5+0x54>
   13608:	ldp	x25, x26, [sp, #64]
   1360c:	mov	w0, #0x20                  	// #32
   13610:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   13614:	mov	w0, #0xffffffff            	// #-1
   13618:	b	1359c <elf_getshdrstrndx@@ELFUTILS_1.5+0x54>
   1361c:	ldr	x0, [x19]
   13620:	stp	x25, x26, [sp, #64]
   13624:	ldr	x25, [x2, #40]
   13628:	cbz	x0, 13638 <elf_getshdrstrndx@@ELFUTILS_1.5+0xf0>
   1362c:	ldrb	w1, [x2, #5]
   13630:	cmp	w1, #0x1
   13634:	b.eq	137b0 <elf_getshdrstrndx@@ELFUTILS_1.5+0x268>  // b.none
   13638:	ldr	w26, [x19, #36]
   1363c:	stp	x21, x22, [sp, #32]
   13640:	mov	x22, x25
   13644:	mov	x21, #0x0                   	// #0
   13648:	stp	x23, x24, [sp, #48]
   1364c:	add	x23, sp, #0x50
   13650:	mov	x24, #0x40                  	// #64
   13654:	mov	x3, x22
   13658:	sub	x2, x24, x21
   1365c:	add	x1, x23, x21
   13660:	mov	w0, w26
   13664:	bl	3250 <pread@plt>
   13668:	cmn	x0, #0x1
   1366c:	b.eq	136a4 <elf_getshdrstrndx@@ELFUTILS_1.5+0x15c>  // b.none
   13670:	add	x21, x21, x0
   13674:	cmp	x0, #0x0
   13678:	b.le	137a0 <elf_getshdrstrndx@@ELFUTILS_1.5+0x258>
   1367c:	cmp	x21, #0x3f
   13680:	b.gt	13770 <elf_getshdrstrndx@@ELFUTILS_1.5+0x228>
   13684:	add	x22, x25, x21
   13688:	sub	x2, x24, x21
   1368c:	mov	x3, x22
   13690:	add	x1, x23, x21
   13694:	mov	w0, w26
   13698:	bl	3250 <pread@plt>
   1369c:	cmn	x0, #0x1
   136a0:	b.ne	13670 <elf_getshdrstrndx@@ELFUTILS_1.5+0x128>  // b.any
   136a4:	bl	3340 <__errno_location@plt>
   136a8:	ldr	w0, [x0]
   136ac:	cmp	w0, #0x4
   136b0:	b.eq	13654 <elf_getshdrstrndx@@ELFUTILS_1.5+0x10c>  // b.none
   136b4:	mov	w0, #0x9                   	// #9
   136b8:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   136bc:	mov	w0, #0xffffffff            	// #-1
   136c0:	ldp	x21, x22, [sp, #32]
   136c4:	ldp	x23, x24, [sp, #48]
   136c8:	ldp	x25, x26, [sp, #64]
   136cc:	b	1359c <elf_getshdrstrndx@@ELFUTILS_1.5+0x54>
   136d0:	ldr	x0, [x19]
   136d4:	stp	x23, x24, [sp, #48]
   136d8:	ldr	w24, [x2, #32]
   136dc:	cbz	x0, 1382c <elf_getshdrstrndx@@ELFUTILS_1.5+0x2e4>
   136e0:	ldrb	w1, [x2, #5]
   136e4:	mov	w24, w24
   136e8:	cmp	w1, #0x1
   136ec:	b.eq	137fc <elf_getshdrstrndx@@ELFUTILS_1.5+0x2b4>  // b.none
   136f0:	stp	x21, x22, [sp, #32]
   136f4:	stp	x25, x26, [sp, #64]
   136f8:	ldr	w26, [x19, #36]
   136fc:	mov	x22, x24
   13700:	add	x23, sp, #0x50
   13704:	mov	x21, #0x0                   	// #0
   13708:	mov	x25, #0x28                  	// #40
   1370c:	mov	x3, x22
   13710:	sub	x2, x25, x21
   13714:	add	x1, x23, x21
   13718:	mov	w0, w26
   1371c:	bl	3250 <pread@plt>
   13720:	cmn	x0, #0x1
   13724:	b.eq	1375c <elf_getshdrstrndx@@ELFUTILS_1.5+0x214>  // b.none
   13728:	add	x21, x21, x0
   1372c:	cmp	x0, #0x0
   13730:	b.le	137a0 <elf_getshdrstrndx@@ELFUTILS_1.5+0x258>
   13734:	cmp	x21, #0x27
   13738:	b.gt	137e0 <elf_getshdrstrndx@@ELFUTILS_1.5+0x298>
   1373c:	add	x22, x24, x21
   13740:	sub	x2, x25, x21
   13744:	mov	x3, x22
   13748:	add	x1, x23, x21
   1374c:	mov	w0, w26
   13750:	bl	3250 <pread@plt>
   13754:	cmn	x0, #0x1
   13758:	b.ne	13728 <elf_getshdrstrndx@@ELFUTILS_1.5+0x1e0>  // b.any
   1375c:	bl	3340 <__errno_location@plt>
   13760:	ldr	w0, [x0]
   13764:	cmp	w0, #0x4
   13768:	b.ne	136b4 <elf_getshdrstrndx@@ELFUTILS_1.5+0x16c>  // b.any
   1376c:	b	1370c <elf_getshdrstrndx@@ELFUTILS_1.5+0x1c4>
   13770:	cmp	x21, #0x40
   13774:	b.ne	137a4 <elf_getshdrstrndx@@ELFUTILS_1.5+0x25c>  // b.any
   13778:	ldr	w0, [sp, #120]
   1377c:	ldr	x1, [x19, #72]
   13780:	ldrb	w2, [x1, #5]
   13784:	rev	w1, w0
   13788:	ldp	x21, x22, [sp, #32]
   1378c:	cmp	w2, #0x1
   13790:	csel	w0, w1, w0, ne  // ne = any
   13794:	ldp	x23, x24, [sp, #48]
   13798:	ldp	x25, x26, [sp, #64]
   1379c:	b	13590 <elf_getshdrstrndx@@ELFUTILS_1.5+0x48>
   137a0:	b.ne	136b4 <elf_getshdrstrndx@@ELFUTILS_1.5+0x16c>  // b.any
   137a4:	mov	w0, #0xa                   	// #10
   137a8:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   137ac:	b	136bc <elf_getshdrstrndx@@ELFUTILS_1.5+0x174>
   137b0:	ldr	x1, [x19, #40]
   137b4:	add	x1, x25, x1
   137b8:	add	x0, x0, x1
   137bc:	tst	x0, #0x7
   137c0:	b.ne	13638 <elf_getshdrstrndx@@ELFUTILS_1.5+0xf0>  // b.any
   137c4:	ldr	x1, [x19, #48]
   137c8:	sub	x25, x1, x25
   137cc:	cmp	x25, #0x3f
   137d0:	b.ls	13608 <elf_getshdrstrndx@@ELFUTILS_1.5+0xc0>  // b.plast
   137d4:	ldr	w0, [x0, #40]
   137d8:	ldp	x25, x26, [sp, #64]
   137dc:	b	13590 <elf_getshdrstrndx@@ELFUTILS_1.5+0x48>
   137e0:	cmp	x21, #0x28
   137e4:	b.ne	137a4 <elf_getshdrstrndx@@ELFUTILS_1.5+0x25c>  // b.any
   137e8:	ldr	w0, [sp, #104]
   137ec:	ldr	x1, [x19, #72]
   137f0:	b	13780 <elf_getshdrstrndx@@ELFUTILS_1.5+0x238>
   137f4:	mov	w0, #0xffffffff            	// #-1
   137f8:	ret
   137fc:	ldr	x1, [x19, #40]
   13800:	add	x1, x24, x1
   13804:	add	x0, x0, x1
   13808:	tst	x0, #0x3
   1380c:	b.ne	136f0 <elf_getshdrstrndx@@ELFUTILS_1.5+0x1a8>  // b.any
   13810:	ldr	x1, [x19, #48]
   13814:	sub	x24, x1, x24
   13818:	cmp	x24, #0x27
   1381c:	b.ls	1383c <elf_getshdrstrndx@@ELFUTILS_1.5+0x2f4>  // b.plast
   13820:	ldr	w0, [x0, #24]
   13824:	ldp	x23, x24, [sp, #48]
   13828:	b	13590 <elf_getshdrstrndx@@ELFUTILS_1.5+0x48>
   1382c:	mov	w24, w24
   13830:	stp	x21, x22, [sp, #32]
   13834:	stp	x25, x26, [sp, #64]
   13838:	b	136f8 <elf_getshdrstrndx@@ELFUTILS_1.5+0x1b0>
   1383c:	ldp	x23, x24, [sp, #48]
   13840:	b	1360c <elf_getshdrstrndx@@ELFUTILS_1.5+0xc4>
   13844:	nop

0000000000013848 <gelf_checksum@@ELFUTILS_1.0>:
   13848:	cbz	x0, 13860 <gelf_checksum@@ELFUTILS_1.0+0x18>
   1384c:	ldr	w1, [x0, #32]
   13850:	cmp	w1, #0x1
   13854:	b.eq	1385c <gelf_checksum@@ELFUTILS_1.0+0x14>  // b.none
   13858:	b	13a70 <elf64_checksum@@ELFUTILS_1.0>
   1385c:	b	13868 <elf32_checksum@@ELFUTILS_1.0>
   13860:	mov	x0, #0xffffffffffffffff    	// #-1
   13864:	ret

0000000000013868 <elf32_checksum@@ELFUTILS_1.0>:
   13868:	stp	x29, x30, [sp, #-160]!
   1386c:	mov	x29, sp
   13870:	stp	x19, x20, [sp, #16]
   13874:	cbz	x0, 13a54 <elf32_checksum@@ELFUTILS_1.0+0x1ec>
   13878:	add	x1, sp, #0x58
   1387c:	stp	x21, x22, [sp, #32]
   13880:	mov	x22, x0
   13884:	bl	13548 <elf_getshdrstrndx@@ELFUTILS_1.5>
   13888:	tbnz	w0, #31, 13a5c <elf32_checksum@@ELFUTILS_1.0+0x1f4>
   1388c:	stp	x25, x26, [sp, #64]
   13890:	adrp	x25, 16000 <elf_compress_gnu@@ELFUTILS_1.7+0x11b8>
   13894:	add	x25, x25, #0x368
   13898:	ldr	x26, [x22, #72]
   1389c:	stp	x23, x24, [sp, #48]
   138a0:	add	x23, sp, #0x60
   138a4:	mov	x20, #0x0                   	// #0
   138a8:	mov	x21, #0x0                   	// #0
   138ac:	ldrb	w24, [x26, #5]
   138b0:	mov	x1, x21
   138b4:	mov	x0, x22
   138b8:	bl	b820 <elf_nextscn@@ELFUTILS_1.0>
   138bc:	mov	x21, x0
   138c0:	cbz	x0, 139a0 <elf32_checksum@@ELFUTILS_1.0+0x138>
   138c4:	mov	x1, x23
   138c8:	bl	c640 <gelf_getshdr@@ELFUTILS_1.0>
   138cc:	mov	x19, x0
   138d0:	cbz	x0, 13a48 <elf32_checksum@@ELFUTILS_1.0+0x1e0>
   138d4:	ldr	x1, [x19, #8]
   138d8:	ldr	w0, [x0, #4]
   138dc:	tbnz	w1, #1, 13928 <elf32_checksum@@ELFUTILS_1.0+0xc0>
   138e0:	cmp	w0, #0x7
   138e4:	b.eq	13930 <elf32_checksum@@ELFUTILS_1.0+0xc8>  // b.none
   138e8:	cmp	w0, #0x1
   138ec:	b.ne	138b0 <elf32_checksum@@ELFUTILS_1.0+0x48>  // b.any
   138f0:	ldr	w2, [x19]
   138f4:	mov	x0, x22
   138f8:	ldr	x1, [sp, #88]
   138fc:	bl	c868 <elf_strptr@@ELFUTILS_1.0>
   13900:	cbz	x0, 13924 <elf32_checksum@@ELFUTILS_1.0+0xbc>
   13904:	ldr	w2, [x19]
   13908:	mov	x0, x22
   1390c:	ldr	x1, [sp, #88]
   13910:	bl	c868 <elf_strptr@@ELFUTILS_1.0>
   13914:	mov	x1, x25
   13918:	mov	x2, #0xd                   	// #13
   1391c:	bl	30f0 <strncmp@plt>
   13920:	cbnz	w0, 138b0 <elf32_checksum@@ELFUTILS_1.0+0x48>
   13924:	ldr	w0, [x19, #4]
   13928:	cmp	w0, #0x8
   1392c:	b.eq	138b0 <elf32_checksum@@ELFUTILS_1.0+0x48>  // b.none
   13930:	mov	x0, x21
   13934:	mov	x1, #0x0                   	// #0
   13938:	bl	cb30 <elf_rawdata@@ELFUTILS_1.0>
   1393c:	mov	x19, x0
   13940:	cbz	x0, 13958 <elf32_checksum@@ELFUTILS_1.0+0xf0>
   13944:	ldr	x1, [x19]
   13948:	mov	w0, w20
   1394c:	ldr	x2, [x19, #16]
   13950:	bl	13c78 <elf64_checksum@@ELFUTILS_1.0+0x208>
   13954:	mov	w20, w0
   13958:	cmp	w24, #0x1
   1395c:	b.eq	13974 <elf32_checksum@@ELFUTILS_1.0+0x10c>  // b.none
   13960:	b	139d0 <elf32_checksum@@ELFUTILS_1.0+0x168>
   13964:	ldr	x1, [x19]
   13968:	ldr	x2, [x19, #16]
   1396c:	bl	13c78 <elf64_checksum@@ELFUTILS_1.0+0x208>
   13970:	mov	w20, w0
   13974:	mov	x1, x19
   13978:	mov	x0, x21
   1397c:	bl	d348 <elf_getdata@@ELFUTILS_1.0>
   13980:	mov	x19, x0
   13984:	mov	w0, w20
   13988:	cbnz	x19, 13964 <elf32_checksum@@ELFUTILS_1.0+0xfc>
   1398c:	mov	x1, x21
   13990:	mov	x0, x22
   13994:	bl	b820 <elf_nextscn@@ELFUTILS_1.0>
   13998:	mov	x21, x0
   1399c:	cbnz	x0, 138c4 <elf32_checksum@@ELFUTILS_1.0+0x5c>
   139a0:	mov	x0, x20
   139a4:	ldp	x19, x20, [sp, #16]
   139a8:	ldp	x21, x22, [sp, #32]
   139ac:	ldp	x23, x24, [sp, #48]
   139b0:	ldp	x25, x26, [sp, #64]
   139b4:	ldp	x29, x30, [sp], #160
   139b8:	ret
   139bc:	ldr	x1, [x19]
   139c0:	mov	w0, w20
   139c4:	ldr	x2, [x19, #16]
   139c8:	bl	13c78 <elf64_checksum@@ELFUTILS_1.0+0x208>
   139cc:	mov	w20, w0
   139d0:	mov	x1, x19
   139d4:	mov	x0, x21
   139d8:	bl	d348 <elf_getdata@@ELFUTILS_1.0>
   139dc:	mov	x19, x0
   139e0:	cbz	x0, 138b0 <elf32_checksum@@ELFUTILS_1.0+0x48>
   139e4:	ldr	w1, [x0, #8]
   139e8:	cbz	w1, 139bc <elf32_checksum@@ELFUTILS_1.0+0x154>
   139ec:	ldrb	w2, [x26, #5]
   139f0:	mov	x1, x0
   139f4:	bl	5598 <elf32_xlatetof@@ELFUTILS_1.0>
   139f8:	mov	x1, x0
   139fc:	mov	w0, w20
   13a00:	cbz	x1, 13a28 <elf32_checksum@@ELFUTILS_1.0+0x1c0>
   13a04:	ldr	x1, [x19]
   13a08:	ldr	x2, [x19, #16]
   13a0c:	bl	13c78 <elf64_checksum@@ELFUTILS_1.0+0x208>
   13a10:	mov	w20, w0
   13a14:	ldrb	w2, [x26, #5]
   13a18:	mov	x1, x19
   13a1c:	mov	x0, x19
   13a20:	bl	5680 <elf32_xlatetom@@ELFUTILS_1.0>
   13a24:	cbnz	x0, 139d0 <elf32_checksum@@ELFUTILS_1.0+0x168>
   13a28:	ldp	x21, x22, [sp, #32]
   13a2c:	mov	x20, #0xffffffffffffffff    	// #-1
   13a30:	ldp	x23, x24, [sp, #48]
   13a34:	ldp	x25, x26, [sp, #64]
   13a38:	mov	x0, x20
   13a3c:	ldp	x19, x20, [sp, #16]
   13a40:	ldp	x29, x30, [sp], #160
   13a44:	ret
   13a48:	mov	w0, #0x20                  	// #32
   13a4c:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   13a50:	b	13a28 <elf32_checksum@@ELFUTILS_1.0+0x1c0>
   13a54:	mov	x20, #0xffffffffffffffff    	// #-1
   13a58:	b	13a38 <elf32_checksum@@ELFUTILS_1.0+0x1d0>
   13a5c:	mov	w0, #0x4                   	// #4
   13a60:	mov	x20, #0xffffffffffffffff    	// #-1
   13a64:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   13a68:	ldp	x21, x22, [sp, #32]
   13a6c:	b	13a38 <elf32_checksum@@ELFUTILS_1.0+0x1d0>

0000000000013a70 <elf64_checksum@@ELFUTILS_1.0>:
   13a70:	stp	x29, x30, [sp, #-160]!
   13a74:	mov	x29, sp
   13a78:	stp	x19, x20, [sp, #16]
   13a7c:	cbz	x0, 13c5c <elf64_checksum@@ELFUTILS_1.0+0x1ec>
   13a80:	add	x1, sp, #0x58
   13a84:	stp	x21, x22, [sp, #32]
   13a88:	mov	x22, x0
   13a8c:	bl	13548 <elf_getshdrstrndx@@ELFUTILS_1.5>
   13a90:	tbnz	w0, #31, 13c64 <elf64_checksum@@ELFUTILS_1.0+0x1f4>
   13a94:	stp	x25, x26, [sp, #64]
   13a98:	adrp	x25, 16000 <elf_compress_gnu@@ELFUTILS_1.7+0x11b8>
   13a9c:	add	x25, x25, #0x368
   13aa0:	ldr	x26, [x22, #72]
   13aa4:	stp	x23, x24, [sp, #48]
   13aa8:	add	x23, sp, #0x60
   13aac:	mov	x20, #0x0                   	// #0
   13ab0:	mov	x21, #0x0                   	// #0
   13ab4:	ldrb	w24, [x26, #5]
   13ab8:	mov	x1, x21
   13abc:	mov	x0, x22
   13ac0:	bl	b820 <elf_nextscn@@ELFUTILS_1.0>
   13ac4:	mov	x21, x0
   13ac8:	cbz	x0, 13ba8 <elf64_checksum@@ELFUTILS_1.0+0x138>
   13acc:	mov	x1, x23
   13ad0:	bl	c640 <gelf_getshdr@@ELFUTILS_1.0>
   13ad4:	mov	x19, x0
   13ad8:	cbz	x0, 13c50 <elf64_checksum@@ELFUTILS_1.0+0x1e0>
   13adc:	ldr	x1, [x19, #8]
   13ae0:	ldr	w0, [x0, #4]
   13ae4:	tbnz	w1, #1, 13b30 <elf64_checksum@@ELFUTILS_1.0+0xc0>
   13ae8:	cmp	w0, #0x7
   13aec:	b.eq	13b38 <elf64_checksum@@ELFUTILS_1.0+0xc8>  // b.none
   13af0:	cmp	w0, #0x1
   13af4:	b.ne	13ab8 <elf64_checksum@@ELFUTILS_1.0+0x48>  // b.any
   13af8:	ldr	w2, [x19]
   13afc:	mov	x0, x22
   13b00:	ldr	x1, [sp, #88]
   13b04:	bl	c868 <elf_strptr@@ELFUTILS_1.0>
   13b08:	cbz	x0, 13b2c <elf64_checksum@@ELFUTILS_1.0+0xbc>
   13b0c:	ldr	w2, [x19]
   13b10:	mov	x0, x22
   13b14:	ldr	x1, [sp, #88]
   13b18:	bl	c868 <elf_strptr@@ELFUTILS_1.0>
   13b1c:	mov	x1, x25
   13b20:	mov	x2, #0xd                   	// #13
   13b24:	bl	30f0 <strncmp@plt>
   13b28:	cbnz	w0, 13ab8 <elf64_checksum@@ELFUTILS_1.0+0x48>
   13b2c:	ldr	w0, [x19, #4]
   13b30:	cmp	w0, #0x8
   13b34:	b.eq	13ab8 <elf64_checksum@@ELFUTILS_1.0+0x48>  // b.none
   13b38:	mov	x0, x21
   13b3c:	mov	x1, #0x0                   	// #0
   13b40:	bl	cb30 <elf_rawdata@@ELFUTILS_1.0>
   13b44:	mov	x19, x0
   13b48:	cbz	x0, 13b60 <elf64_checksum@@ELFUTILS_1.0+0xf0>
   13b4c:	ldr	x1, [x19]
   13b50:	mov	w0, w20
   13b54:	ldr	x2, [x19, #16]
   13b58:	bl	13c78 <elf64_checksum@@ELFUTILS_1.0+0x208>
   13b5c:	mov	w20, w0
   13b60:	cmp	w24, #0x1
   13b64:	b.eq	13b7c <elf64_checksum@@ELFUTILS_1.0+0x10c>  // b.none
   13b68:	b	13bd8 <elf64_checksum@@ELFUTILS_1.0+0x168>
   13b6c:	ldr	x1, [x19]
   13b70:	ldr	x2, [x19, #16]
   13b74:	bl	13c78 <elf64_checksum@@ELFUTILS_1.0+0x208>
   13b78:	mov	w20, w0
   13b7c:	mov	x1, x19
   13b80:	mov	x0, x21
   13b84:	bl	d348 <elf_getdata@@ELFUTILS_1.0>
   13b88:	mov	x19, x0
   13b8c:	mov	w0, w20
   13b90:	cbnz	x19, 13b6c <elf64_checksum@@ELFUTILS_1.0+0xfc>
   13b94:	mov	x1, x21
   13b98:	mov	x0, x22
   13b9c:	bl	b820 <elf_nextscn@@ELFUTILS_1.0>
   13ba0:	mov	x21, x0
   13ba4:	cbnz	x0, 13acc <elf64_checksum@@ELFUTILS_1.0+0x5c>
   13ba8:	mov	x0, x20
   13bac:	ldp	x19, x20, [sp, #16]
   13bb0:	ldp	x21, x22, [sp, #32]
   13bb4:	ldp	x23, x24, [sp, #48]
   13bb8:	ldp	x25, x26, [sp, #64]
   13bbc:	ldp	x29, x30, [sp], #160
   13bc0:	ret
   13bc4:	ldr	x1, [x19]
   13bc8:	mov	w0, w20
   13bcc:	ldr	x2, [x19, #16]
   13bd0:	bl	13c78 <elf64_checksum@@ELFUTILS_1.0+0x208>
   13bd4:	mov	w20, w0
   13bd8:	mov	x1, x19
   13bdc:	mov	x0, x21
   13be0:	bl	d348 <elf_getdata@@ELFUTILS_1.0>
   13be4:	mov	x19, x0
   13be8:	cbz	x0, 13ab8 <elf64_checksum@@ELFUTILS_1.0+0x48>
   13bec:	ldr	w1, [x0, #8]
   13bf0:	cbz	w1, 13bc4 <elf64_checksum@@ELFUTILS_1.0+0x154>
   13bf4:	ldrb	w2, [x26, #5]
   13bf8:	mov	x1, x0
   13bfc:	bl	5770 <elf64_xlatetof@@ELFUTILS_1.0>
   13c00:	mov	x1, x0
   13c04:	mov	w0, w20
   13c08:	cbz	x1, 13c30 <elf64_checksum@@ELFUTILS_1.0+0x1c0>
   13c0c:	ldr	x1, [x19]
   13c10:	ldr	x2, [x19, #16]
   13c14:	bl	13c78 <elf64_checksum@@ELFUTILS_1.0+0x208>
   13c18:	mov	w20, w0
   13c1c:	ldrb	w2, [x26, #5]
   13c20:	mov	x1, x19
   13c24:	mov	x0, x19
   13c28:	bl	5860 <elf64_xlatetom@@ELFUTILS_1.0>
   13c2c:	cbnz	x0, 13bd8 <elf64_checksum@@ELFUTILS_1.0+0x168>
   13c30:	ldp	x21, x22, [sp, #32]
   13c34:	mov	x20, #0xffffffffffffffff    	// #-1
   13c38:	ldp	x23, x24, [sp, #48]
   13c3c:	ldp	x25, x26, [sp, #64]
   13c40:	mov	x0, x20
   13c44:	ldp	x19, x20, [sp, #16]
   13c48:	ldp	x29, x30, [sp], #160
   13c4c:	ret
   13c50:	mov	w0, #0x20                  	// #32
   13c54:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   13c58:	b	13c30 <elf64_checksum@@ELFUTILS_1.0+0x1c0>
   13c5c:	mov	x20, #0xffffffffffffffff    	// #-1
   13c60:	b	13c40 <elf64_checksum@@ELFUTILS_1.0+0x1d0>
   13c64:	mov	w0, #0x4                   	// #4
   13c68:	mov	x20, #0xffffffffffffffff    	// #-1
   13c6c:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   13c70:	ldp	x21, x22, [sp, #32]
   13c74:	b	13c40 <elf64_checksum@@ELFUTILS_1.0+0x1d0>
   13c78:	add	x2, x1, x2
   13c7c:	mvn	w4, w0
   13c80:	cmp	x1, x2
   13c84:	b.cs	13cb0 <elf64_checksum@@ELFUTILS_1.0+0x240>  // b.hs, b.nlast
   13c88:	adrp	x5, 16000 <elf_compress_gnu@@ELFUTILS_1.7+0x11b8>
   13c8c:	add	x5, x5, #0x380
   13c90:	ldrb	w3, [x1], #1
   13c94:	eor	w3, w3, w4
   13c98:	cmp	x2, x1
   13c9c:	and	x3, x3, #0xff
   13ca0:	ldr	w0, [x5, x3, lsl #2]
   13ca4:	eor	w4, w0, w4, lsr #8
   13ca8:	b.ne	13c90 <elf64_checksum@@ELFUTILS_1.0+0x220>  // b.any
   13cac:	mvn	w0, w4
   13cb0:	ret
   13cb4:	nop
   13cb8:	mov	x6, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   13cbc:	orr	x0, x0, #0x1
   13cc0:	movk	x6, #0xaaab
   13cc4:	nop
   13cc8:	umulh	x2, x0, x6
   13ccc:	cmp	x0, #0x9
   13cd0:	and	x1, x2, #0xfffffffffffffffe
   13cd4:	add	x2, x1, x2, lsr #1
   13cd8:	sub	x2, x0, x2
   13cdc:	b.ls	13d1c <elf64_checksum@@ELFUTILS_1.0+0x2ac>  // b.plast
   13ce0:	mov	x3, #0x19                  	// #25
   13ce4:	mov	x4, #0x3                   	// #3
   13ce8:	cbnz	x2, 13cfc <elf64_checksum@@ELFUTILS_1.0+0x28c>
   13cec:	b	13d20 <elf64_checksum@@ELFUTILS_1.0+0x2b0>
   13cf0:	adds	x3, x1, x3
   13cf4:	cbz	x2, 13d20 <elf64_checksum@@ELFUTILS_1.0+0x2b0>
   13cf8:	b.cs	13d28 <elf64_checksum@@ELFUTILS_1.0+0x2b8>  // b.hs, b.nlast
   13cfc:	mov	x2, x4
   13d00:	add	x4, x4, #0x2
   13d04:	add	x2, x2, #0x3
   13d08:	cmp	x0, x3
   13d0c:	udiv	x5, x0, x4
   13d10:	lsl	x1, x2, #2
   13d14:	msub	x2, x5, x4, x0
   13d18:	b.hi	13cf0 <elf64_checksum@@ELFUTILS_1.0+0x280>  // b.pmore
   13d1c:	cbnz	x2, 13d28 <elf64_checksum@@ELFUTILS_1.0+0x2b8>
   13d20:	add	x0, x0, #0x2
   13d24:	b	13cc8 <elf64_checksum@@ELFUTILS_1.0+0x258>
   13d28:	ret
   13d2c:	nop

0000000000013d30 <elf_clone@@ELFUTILS_1.0>:
   13d30:	stp	x29, x30, [sp, #-96]!
   13d34:	cmp	x0, #0x0
   13d38:	ccmp	w1, #0xc, #0x0, ne  // ne = any
   13d3c:	mov	x29, sp
   13d40:	stp	x19, x20, [sp, #16]
   13d44:	mov	x19, #0x0                   	// #0
   13d48:	b.ne	13dd4 <elf_clone@@ELFUTILS_1.0+0xa4>  // b.any
   13d4c:	mov	x20, x0
   13d50:	stp	x21, x22, [sp, #32]
   13d54:	mov	w2, #0xd0                  	// #208
   13d58:	mov	x1, #0x108                 	// #264
   13d5c:	stp	x23, x24, [sp, #48]
   13d60:	ldr	w21, [x20, #204]
   13d64:	ldr	w24, [x20, #36]
   13d68:	mov	x0, #0x1                   	// #1
   13d6c:	stp	x25, x26, [sp, #64]
   13d70:	umaddl	x1, w21, w2, x1
   13d74:	ldr	x26, [x20, #8]
   13d78:	ldp	x23, x22, [x20, #40]
   13d7c:	str	x27, [sp, #80]
   13d80:	ldr	x27, [x20]
   13d84:	ldr	x25, [x20, #24]
   13d88:	bl	3140 <calloc@plt>
   13d8c:	mov	x19, x0
   13d90:	cbz	x0, 13de4 <elf_clone@@ELFUTILS_1.0+0xb4>
   13d94:	str	x25, [x19, #24]
   13d98:	add	x1, x19, #0xc8
   13d9c:	ldr	w3, [x20, #32]
   13da0:	mov	x2, #0x100000001           	// #4294967297
   13da4:	stp	x27, x26, [x19]
   13da8:	mov	w0, #0xa                   	// #10
   13dac:	stp	w3, w24, [x19, #32]
   13db0:	stp	x23, x22, [x19, #40]
   13db4:	str	w21, [x19, #204]
   13db8:	ldp	x21, x22, [sp, #32]
   13dbc:	str	x2, [x19, #56]
   13dc0:	ldp	x23, x24, [sp, #48]
   13dc4:	str	x1, [x19, #96]
   13dc8:	ldp	x25, x26, [sp, #64]
   13dcc:	str	w0, [x19, #112]
   13dd0:	ldr	x27, [sp, #80]
   13dd4:	mov	x0, x19
   13dd8:	ldp	x19, x20, [sp, #16]
   13ddc:	ldp	x29, x30, [sp], #96
   13de0:	ret
   13de4:	mov	w0, #0x8                   	// #8
   13de8:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   13dec:	ldp	x21, x22, [sp, #32]
   13df0:	ldp	x23, x24, [sp, #48]
   13df4:	ldp	x25, x26, [sp, #64]
   13df8:	ldr	x27, [sp, #80]
   13dfc:	b	13dd4 <elf_clone@@ELFUTILS_1.0+0xa4>

0000000000013e00 <gelf_getlib@@ELFUTILS_1.1>:
   13e00:	cbz	x0, 13e6c <gelf_getlib@@ELFUTILS_1.1+0x6c>
   13e04:	stp	x29, x30, [sp, #-16]!
   13e08:	mov	x29, sp
   13e0c:	ldr	w5, [x0, #8]
   13e10:	cmp	w5, #0x16
   13e14:	b.ne	13e5c <gelf_getlib@@ELFUTILS_1.1+0x5c>  // b.any
   13e18:	ldr	x4, [x0, #16]
   13e1c:	mov	x6, #0xcccccccccccccccc    	// #-3689348814741910324
   13e20:	movk	x6, #0xcccd
   13e24:	mov	w3, w1
   13e28:	umulh	x4, x4, x6
   13e2c:	cmp	x3, x4, lsr #4
   13e30:	b.cs	13e74 <gelf_getlib@@ELFUTILS_1.1+0x74>  // b.hs, b.nlast
   13e34:	ldr	x3, [x0]
   13e38:	mov	w4, #0x14                  	// #20
   13e3c:	mov	x0, x2
   13e40:	smaddl	x1, w1, w4, x3
   13e44:	ldp	x4, x5, [x1]
   13e48:	stp	x4, x5, [x2]
   13e4c:	ldr	w1, [x1, #16]
   13e50:	str	w1, [x2, #16]
   13e54:	ldp	x29, x30, [sp], #16
   13e58:	ret
   13e5c:	mov	w0, #0x4                   	// #4
   13e60:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   13e64:	mov	x0, #0x0                   	// #0
   13e68:	b	13e54 <gelf_getlib@@ELFUTILS_1.1+0x54>
   13e6c:	mov	x0, #0x0                   	// #0
   13e70:	ret
   13e74:	mov	w0, w5
   13e78:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   13e7c:	mov	x0, #0x0                   	// #0
   13e80:	b	13e54 <gelf_getlib@@ELFUTILS_1.1+0x54>
   13e84:	nop

0000000000013e88 <gelf_update_lib@@ELFUTILS_1.1>:
   13e88:	cbz	x0, 13ef4 <gelf_update_lib@@ELFUTILS_1.1+0x6c>
   13e8c:	stp	x29, x30, [sp, #-16]!
   13e90:	mov	x29, sp
   13e94:	ldr	w6, [x0, #8]
   13e98:	cmp	w6, #0x16
   13e9c:	b.ne	13efc <gelf_update_lib@@ELFUTILS_1.1+0x74>  // b.any
   13ea0:	ldr	x4, [x0, #16]
   13ea4:	mov	x7, #0xcccccccccccccccc    	// #-3689348814741910324
   13ea8:	movk	x7, #0xcccd
   13eac:	mov	w3, w1
   13eb0:	ldr	x5, [x0, #40]
   13eb4:	umulh	x4, x4, x7
   13eb8:	cmp	x3, x4, lsr #4
   13ebc:	b.cs	13f0c <gelf_update_lib@@ELFUTILS_1.1+0x84>  // b.hs, b.nlast
   13ec0:	ldr	x3, [x0]
   13ec4:	mov	w4, #0x14                  	// #20
   13ec8:	ldp	x6, x7, [x2]
   13ecc:	mov	w0, #0x1                   	// #1
   13ed0:	smaddl	x1, w1, w4, x3
   13ed4:	ldr	w3, [x5, #156]
   13ed8:	orr	w3, w3, w0
   13edc:	stp	x6, x7, [x1]
   13ee0:	ldr	w2, [x2, #16]
   13ee4:	str	w2, [x1, #16]
   13ee8:	str	w3, [x5, #156]
   13eec:	ldp	x29, x30, [sp], #16
   13ef0:	ret
   13ef4:	mov	w0, #0x0                   	// #0
   13ef8:	ret
   13efc:	mov	w0, #0x1f                  	// #31
   13f00:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   13f04:	mov	w0, #0x0                   	// #0
   13f08:	b	13eec <gelf_update_lib@@ELFUTILS_1.1+0x64>
   13f0c:	mov	w0, w6
   13f10:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   13f14:	mov	w0, #0x0                   	// #0
   13f18:	b	13eec <gelf_update_lib@@ELFUTILS_1.1+0x64>
   13f1c:	nop

0000000000013f20 <elf32_offscn@@ELFUTILS_1.1.1>:
   13f20:	cbz	x0, 14008 <elf32_offscn@@ELFUTILS_1.1.1+0xe8>
   13f24:	stp	x29, x30, [sp, #-48]!
   13f28:	mov	x29, sp
   13f2c:	ldr	w2, [x0, #24]
   13f30:	cmp	w2, #0x3
   13f34:	b.ne	13ff8 <elf32_offscn@@ELFUTILS_1.1.1+0xd8>  // b.any
   13f38:	ldr	w2, [x0, #200]
   13f3c:	stp	x19, x20, [sp, #16]
   13f40:	add	x20, x0, #0xc8
   13f44:	cbnz	w2, 13fd0 <elf32_offscn@@ELFUTILS_1.1.1+0xb0>
   13f48:	mov	x19, #0x0                   	// #0
   13f4c:	mov	w6, #0xd0                  	// #208
   13f50:	ldr	w5, [x20]
   13f54:	cbz	w5, 13fb0 <elf32_offscn@@ELFUTILS_1.1.1+0x90>
   13f58:	sub	w5, w5, #0x1
   13f5c:	add	x0, x20, #0xe0
   13f60:	add	x2, x20, #0x10
   13f64:	umaddl	x5, w5, w6, x0
   13f68:	b	13f78 <elf32_offscn@@ELFUTILS_1.1.1+0x58>
   13f6c:	add	x2, x2, #0xd0
   13f70:	cmp	x2, x5
   13f74:	b.eq	13fb0 <elf32_offscn@@ELFUTILS_1.1.1+0x90>  // b.none
   13f78:	ldr	x3, [x2, #144]
   13f7c:	mov	x0, x2
   13f80:	ldr	w4, [x3, #16]
   13f84:	cmp	w4, w1
   13f88:	b.ne	13f6c <elf32_offscn@@ELFUTILS_1.1.1+0x4c>  // b.any
   13f8c:	ldr	w4, [x3, #20]
   13f90:	mov	x19, x2
   13f94:	cbz	w4, 13f6c <elf32_offscn@@ELFUTILS_1.1.1+0x4c>
   13f98:	ldr	w3, [x3, #4]
   13f9c:	cmp	w3, #0x8
   13fa0:	b.eq	13f6c <elf32_offscn@@ELFUTILS_1.1.1+0x4c>  // b.none
   13fa4:	ldp	x19, x20, [sp, #16]
   13fa8:	ldp	x29, x30, [sp], #48
   13fac:	ret
   13fb0:	ldr	x20, [x20, #8]
   13fb4:	cbnz	x20, 13f50 <elf32_offscn@@ELFUTILS_1.1.1+0x30>
   13fb8:	mov	w0, #0x2b                  	// #43
   13fbc:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   13fc0:	mov	x0, x19
   13fc4:	ldp	x19, x20, [sp, #16]
   13fc8:	ldp	x29, x30, [sp], #48
   13fcc:	ret
   13fd0:	ldr	x2, [x0, #360]
   13fd4:	cbnz	x2, 13f48 <elf32_offscn@@ELFUTILS_1.1.1+0x28>
   13fd8:	add	x0, x0, #0xd8
   13fdc:	str	w1, [sp, #44]
   13fe0:	bl	3290 <elf32_getshdr@plt>
   13fe4:	ldr	w1, [sp, #44]
   13fe8:	cbnz	x0, 13f48 <elf32_offscn@@ELFUTILS_1.1.1+0x28>
   13fec:	mov	x0, #0x0                   	// #0
   13ff0:	ldp	x19, x20, [sp, #16]
   13ff4:	b	13fa8 <elf32_offscn@@ELFUTILS_1.1.1+0x88>
   13ff8:	mov	w0, #0x4                   	// #4
   13ffc:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   14000:	mov	x0, #0x0                   	// #0
   14004:	b	13fa8 <elf32_offscn@@ELFUTILS_1.1.1+0x88>
   14008:	mov	x0, #0x0                   	// #0
   1400c:	ret

0000000000014010 <elf64_offscn@@ELFUTILS_1.1.1>:
   14010:	cbz	x0, 140f8 <elf64_offscn@@ELFUTILS_1.1.1+0xe8>
   14014:	stp	x29, x30, [sp, #-48]!
   14018:	mov	x29, sp
   1401c:	ldr	w2, [x0, #24]
   14020:	cmp	w2, #0x3
   14024:	b.ne	140e8 <elf64_offscn@@ELFUTILS_1.1.1+0xd8>  // b.any
   14028:	ldr	w2, [x0, #200]
   1402c:	stp	x19, x20, [sp, #16]
   14030:	add	x20, x0, #0xc8
   14034:	cbnz	w2, 140c0 <elf64_offscn@@ELFUTILS_1.1.1+0xb0>
   14038:	mov	x19, #0x0                   	// #0
   1403c:	mov	w6, #0xd0                  	// #208
   14040:	ldr	w5, [x20]
   14044:	cbz	w5, 140a0 <elf64_offscn@@ELFUTILS_1.1.1+0x90>
   14048:	sub	w5, w5, #0x1
   1404c:	add	x0, x20, #0xe0
   14050:	add	x2, x20, #0x10
   14054:	umaddl	x5, w5, w6, x0
   14058:	b	14068 <elf64_offscn@@ELFUTILS_1.1.1+0x58>
   1405c:	add	x2, x2, #0xd0
   14060:	cmp	x2, x5
   14064:	b.eq	140a0 <elf64_offscn@@ELFUTILS_1.1.1+0x90>  // b.none
   14068:	ldr	x3, [x2, #144]
   1406c:	mov	x0, x2
   14070:	ldr	x4, [x3, #24]
   14074:	cmp	x4, x1
   14078:	b.ne	1405c <elf64_offscn@@ELFUTILS_1.1.1+0x4c>  // b.any
   1407c:	ldr	x4, [x3, #32]
   14080:	mov	x19, x2
   14084:	cbz	x4, 1405c <elf64_offscn@@ELFUTILS_1.1.1+0x4c>
   14088:	ldr	w3, [x3, #4]
   1408c:	cmp	w3, #0x8
   14090:	b.eq	1405c <elf64_offscn@@ELFUTILS_1.1.1+0x4c>  // b.none
   14094:	ldp	x19, x20, [sp, #16]
   14098:	ldp	x29, x30, [sp], #48
   1409c:	ret
   140a0:	ldr	x20, [x20, #8]
   140a4:	cbnz	x20, 14040 <elf64_offscn@@ELFUTILS_1.1.1+0x30>
   140a8:	mov	w0, #0x2b                  	// #43
   140ac:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   140b0:	mov	x0, x19
   140b4:	ldp	x19, x20, [sp, #16]
   140b8:	ldp	x29, x30, [sp], #48
   140bc:	ret
   140c0:	ldr	x2, [x0, #360]
   140c4:	cbnz	x2, 14038 <elf64_offscn@@ELFUTILS_1.1.1+0x28>
   140c8:	add	x0, x0, #0xd8
   140cc:	str	x1, [sp, #40]
   140d0:	bl	3110 <elf64_getshdr@plt>
   140d4:	ldr	x1, [sp, #40]
   140d8:	cbnz	x0, 14038 <elf64_offscn@@ELFUTILS_1.1.1+0x28>
   140dc:	mov	x0, #0x0                   	// #0
   140e0:	ldp	x19, x20, [sp, #16]
   140e4:	b	14098 <elf64_offscn@@ELFUTILS_1.1.1+0x88>
   140e8:	mov	w0, #0x4                   	// #4
   140ec:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   140f0:	mov	x0, #0x0                   	// #0
   140f4:	b	14098 <elf64_offscn@@ELFUTILS_1.1.1+0x88>
   140f8:	mov	x0, #0x0                   	// #0
   140fc:	ret

0000000000014100 <gelf_offscn@@ELFUTILS_1.1.1>:
   14100:	ldr	w3, [x0, #32]
   14104:	cmp	w3, #0x1
   14108:	b.ne	14134 <gelf_offscn@@ELFUTILS_1.1.1+0x34>  // b.any
   1410c:	tst	x1, #0xffffffff00000000
   14110:	b.ne	14118 <gelf_offscn@@ELFUTILS_1.1.1+0x18>  // b.any
   14114:	b	13f20 <elf32_offscn@@ELFUTILS_1.1.1>
   14118:	stp	x29, x30, [sp, #-16]!
   1411c:	mov	w0, #0x2b                  	// #43
   14120:	mov	x29, sp
   14124:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   14128:	mov	x0, #0x0                   	// #0
   1412c:	ldp	x29, x30, [sp], #16
   14130:	ret
   14134:	b	14010 <elf64_offscn@@ELFUTILS_1.1.1>

0000000000014138 <elf_getaroff@@ELFUTILS_1.1.1>:
   14138:	cbz	x0, 14164 <elf_getaroff@@ELFUTILS_1.1.1+0x2c>
   1413c:	ldr	x1, [x0, #8]
   14140:	cbz	x1, 14164 <elf_getaroff@@ELFUTILS_1.1.1+0x2c>
   14144:	ldr	w2, [x1, #24]
   14148:	cmp	w2, #0x1
   1414c:	b.ne	1416c <elf_getaroff@@ELFUTILS_1.1.1+0x34>  // b.any
   14150:	ldr	x0, [x0, #40]
   14154:	ldr	x1, [x1, #40]
   14158:	sub	x0, x0, #0x3c
   1415c:	sub	x0, x0, x1
   14160:	ret
   14164:	mov	x0, #0x0                   	// #0
   14168:	ret
   1416c:	stp	x29, x30, [sp, #-16]!
   14170:	adrp	x3, 16000 <elf_compress_gnu@@ELFUTILS_1.7+0x11b8>
   14174:	adrp	x1, 16000 <elf_compress_gnu@@ELFUTILS_1.7+0x11b8>
   14178:	mov	x29, sp
   1417c:	adrp	x0, 15000 <elf_compress_gnu@@ELFUTILS_1.7+0x1b8>
   14180:	add	x3, x3, #0x790
   14184:	add	x1, x1, #0x780
   14188:	add	x0, x0, #0x8e8
   1418c:	mov	w2, #0x32                  	// #50
   14190:	bl	3330 <__assert_fail@plt>
   14194:	nop

0000000000014198 <elf_gnu_hash@@ELFUTILS_1.2>:
   14198:	ldrb	w2, [x0]
   1419c:	cbz	w2, 141c0 <elf_gnu_hash@@ELFUTILS_1.2+0x28>
   141a0:	mov	x1, #0x1505                	// #5381
   141a4:	nop
   141a8:	add	x1, x1, x1, lsl #5
   141ac:	add	x1, x1, w2, uxtb
   141b0:	ldrb	w2, [x0, #1]!
   141b4:	cbnz	w2, 141a8 <elf_gnu_hash@@ELFUTILS_1.2+0x10>
   141b8:	and	x0, x1, #0xffffffff
   141bc:	ret
   141c0:	mov	x0, #0x1505                	// #5381
   141c4:	ret

00000000000141c8 <elf_scnshndx@@ELFUTILS_1.4>:
   141c8:	ldr	w1, [x0, #124]
   141cc:	cbz	w1, 141d8 <elf_scnshndx@@ELFUTILS_1.4+0x10>
   141d0:	mov	w0, w1
   141d4:	ret
   141d8:	stp	x29, x30, [sp, #-96]!
   141dc:	mov	x29, sp
   141e0:	str	x19, [sp, #16]
   141e4:	mov	x19, x0
   141e8:	add	x1, sp, #0x20
   141ec:	bl	c640 <gelf_getshdr@@ELFUTILS_1.0>
   141f0:	ldr	w1, [x19, #124]
   141f4:	ldr	x19, [sp, #16]
   141f8:	mov	w0, w1
   141fc:	ldp	x29, x30, [sp], #96
   14200:	ret
   14204:	nop

0000000000014208 <elf32_getchdr@@ELFUTILS_1.7>:
   14208:	stp	x29, x30, [sp, #-32]!
   1420c:	mov	x29, sp
   14210:	str	x19, [sp, #16]
   14214:	mov	x19, x0
   14218:	bl	3290 <elf32_getshdr@plt>
   1421c:	cbz	x0, 14270 <elf32_getchdr@@ELFUTILS_1.7+0x68>
   14220:	ldr	w1, [x0, #8]
   14224:	tbnz	w1, #1, 14298 <elf32_getchdr@@ELFUTILS_1.7+0x90>
   14228:	ldr	w0, [x0, #4]
   1422c:	tst	w0, #0xfffffff7
   14230:	b.eq	142a8 <elf32_getchdr@@ELFUTILS_1.7+0xa0>  // b.none
   14234:	tbz	w1, #11, 14280 <elf32_getchdr@@ELFUTILS_1.7+0x78>
   14238:	mov	x0, x19
   1423c:	mov	x1, #0x0                   	// #0
   14240:	bl	32e0 <elf_getdata@plt>
   14244:	cbz	x0, 14270 <elf32_getchdr@@ELFUTILS_1.7+0x68>
   14248:	ldr	x1, [x0, #16]
   1424c:	cmp	x1, #0xb
   14250:	b.ls	14268 <elf32_getchdr@@ELFUTILS_1.7+0x60>  // b.plast
   14254:	ldr	x0, [x0]
   14258:	cbz	x0, 14268 <elf32_getchdr@@ELFUTILS_1.7+0x60>
   1425c:	ldr	x19, [sp, #16]
   14260:	ldp	x29, x30, [sp], #32
   14264:	ret
   14268:	mov	w0, #0x21                  	// #33
   1426c:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   14270:	mov	x0, #0x0                   	// #0
   14274:	ldr	x19, [sp, #16]
   14278:	ldp	x29, x30, [sp], #32
   1427c:	ret
   14280:	mov	w0, #0x2e                  	// #46
   14284:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   14288:	mov	x0, #0x0                   	// #0
   1428c:	ldr	x19, [sp, #16]
   14290:	ldp	x29, x30, [sp], #32
   14294:	ret
   14298:	mov	w0, #0x2d                  	// #45
   1429c:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   142a0:	mov	x0, #0x0                   	// #0
   142a4:	b	1425c <elf32_getchdr@@ELFUTILS_1.7+0x54>
   142a8:	mov	w0, #0x2c                  	// #44
   142ac:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   142b0:	mov	x0, #0x0                   	// #0
   142b4:	b	1425c <elf32_getchdr@@ELFUTILS_1.7+0x54>

00000000000142b8 <elf64_getchdr@@ELFUTILS_1.7>:
   142b8:	stp	x29, x30, [sp, #-32]!
   142bc:	mov	x29, sp
   142c0:	str	x19, [sp, #16]
   142c4:	mov	x19, x0
   142c8:	bl	3110 <elf64_getshdr@plt>
   142cc:	cbz	x0, 14320 <elf64_getchdr@@ELFUTILS_1.7+0x68>
   142d0:	ldr	x1, [x0, #8]
   142d4:	tbnz	w1, #1, 14348 <elf64_getchdr@@ELFUTILS_1.7+0x90>
   142d8:	ldr	w0, [x0, #4]
   142dc:	tst	w0, #0xfffffff7
   142e0:	b.eq	14358 <elf64_getchdr@@ELFUTILS_1.7+0xa0>  // b.none
   142e4:	tbz	w1, #11, 14330 <elf64_getchdr@@ELFUTILS_1.7+0x78>
   142e8:	mov	x0, x19
   142ec:	mov	x1, #0x0                   	// #0
   142f0:	bl	32e0 <elf_getdata@plt>
   142f4:	cbz	x0, 14320 <elf64_getchdr@@ELFUTILS_1.7+0x68>
   142f8:	ldr	x1, [x0, #16]
   142fc:	cmp	x1, #0x17
   14300:	b.ls	14318 <elf64_getchdr@@ELFUTILS_1.7+0x60>  // b.plast
   14304:	ldr	x0, [x0]
   14308:	cbz	x0, 14318 <elf64_getchdr@@ELFUTILS_1.7+0x60>
   1430c:	ldr	x19, [sp, #16]
   14310:	ldp	x29, x30, [sp], #32
   14314:	ret
   14318:	mov	w0, #0x21                  	// #33
   1431c:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   14320:	mov	x0, #0x0                   	// #0
   14324:	ldr	x19, [sp, #16]
   14328:	ldp	x29, x30, [sp], #32
   1432c:	ret
   14330:	mov	w0, #0x2e                  	// #46
   14334:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   14338:	mov	x0, #0x0                   	// #0
   1433c:	ldr	x19, [sp, #16]
   14340:	ldp	x29, x30, [sp], #32
   14344:	ret
   14348:	mov	w0, #0x2d                  	// #45
   1434c:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   14350:	mov	x0, #0x0                   	// #0
   14354:	b	1430c <elf64_getchdr@@ELFUTILS_1.7+0x54>
   14358:	mov	w0, #0x2c                  	// #44
   1435c:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   14360:	mov	x0, #0x0                   	// #0
   14364:	b	1430c <elf64_getchdr@@ELFUTILS_1.7+0x54>

0000000000014368 <gelf_getchdr@@ELFUTILS_1.7>:
   14368:	cbz	x0, 14400 <gelf_getchdr@@ELFUTILS_1.7+0x98>
   1436c:	stp	x29, x30, [sp, #-32]!
   14370:	mov	x29, sp
   14374:	str	x19, [sp, #16]
   14378:	mov	x19, x1
   1437c:	cbz	x1, 143e8 <gelf_getchdr@@ELFUTILS_1.7+0x80>
   14380:	ldr	x1, [x0, #136]
   14384:	ldr	w1, [x1, #32]
   14388:	cmp	w1, #0x1
   1438c:	b.eq	143bc <gelf_getchdr@@ELFUTILS_1.7+0x54>  // b.none
   14390:	bl	3190 <elf64_getchdr@plt>
   14394:	mov	x1, x0
   14398:	cbz	x0, 143f0 <gelf_getchdr@@ELFUTILS_1.7+0x88>
   1439c:	ldp	x2, x3, [x0]
   143a0:	stp	x2, x3, [x19]
   143a4:	mov	x0, x19
   143a8:	ldr	x1, [x1, #16]
   143ac:	str	x1, [x19, #16]
   143b0:	ldr	x19, [sp, #16]
   143b4:	ldp	x29, x30, [sp], #32
   143b8:	ret
   143bc:	bl	3090 <elf32_getchdr@plt>
   143c0:	mov	x1, x0
   143c4:	cbz	x0, 143f0 <gelf_getchdr@@ELFUTILS_1.7+0x88>
   143c8:	ldp	w3, w2, [x1, #4]
   143cc:	mov	x0, x19
   143d0:	ldr	w1, [x1]
   143d4:	str	w1, [x19]
   143d8:	stp	x3, x2, [x19, #8]
   143dc:	ldr	x19, [sp, #16]
   143e0:	ldp	x29, x30, [sp], #32
   143e4:	ret
   143e8:	mov	w0, #0x17                  	// #23
   143ec:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   143f0:	mov	x0, #0x0                   	// #0
   143f4:	ldr	x19, [sp, #16]
   143f8:	ldp	x29, x30, [sp], #32
   143fc:	ret
   14400:	mov	x0, #0x0                   	// #0
   14404:	ret
   14408:	stp	x29, x30, [sp, #-304]!
   1440c:	mov	x29, sp
   14410:	stp	x19, x20, [sp, #16]
   14414:	and	w19, w6, #0xff
   14418:	mov	x20, x0
   1441c:	stp	x21, x22, [sp, #32]
   14420:	mov	x21, x3
   14424:	stp	x25, x26, [sp, #64]
   14428:	mov	x26, x1
   1442c:	mov	x1, #0x0                   	// #0
   14430:	stp	x27, x28, [sp, #80]
   14434:	str	w2, [sp, #100]
   14438:	stp	x4, x0, [sp, #104]
   1443c:	str	x5, [sp, #136]
   14440:	bl	32e0 <elf_getdata@plt>
   14444:	mov	x27, x0
   14448:	cbz	x0, 145e0 <gelf_getchdr@@ELFUTILS_1.7+0x278>
   1444c:	mov	x1, x0
   14450:	mov	x0, x20
   14454:	stp	x23, x24, [sp, #48]
   14458:	bl	32e0 <elf_getdata@plt>
   1445c:	mov	x24, x0
   14460:	eor	w0, w19, #0x1
   14464:	str	w0, [sp, #132]
   14468:	cmp	x24, #0x0
   1446c:	ccmp	w0, #0x0, #0x4, eq  // eq = none
   14470:	b.eq	14484 <gelf_getchdr@@ELFUTILS_1.7+0x11c>  // b.none
   14474:	ldr	x1, [x27, #16]
   14478:	add	x0, x26, #0xb
   1447c:	cmp	x1, x0
   14480:	b.ls	14750 <gelf_getchdr@@ELFUTILS_1.7+0x3e8>  // b.plast
   14484:	ldr	x1, [sp, #104]
   14488:	ldr	x0, [x27, #32]
   1448c:	str	x0, [x1]
   14490:	ldr	x23, [x27, #16]
   14494:	str	x23, [x21]
   14498:	add	x23, x26, x23, lsr #3
   1449c:	lsl	x25, x23, #1
   144a0:	mov	x0, x25
   144a4:	bl	30c0 <malloc@plt>
   144a8:	mov	x19, x0
   144ac:	cbz	x0, 14838 <gelf_getchdr@@ELFUTILS_1.7+0x4d0>
   144b0:	add	x20, sp, #0xc0
   144b4:	adrp	x2, 16000 <elf_compress_gnu@@ELFUTILS_1.7+0x11b8>
   144b8:	mov	x0, x20
   144bc:	add	x2, x2, #0x7a0
   144c0:	mov	w3, #0x70                  	// #112
   144c4:	mov	w1, #0x9                   	// #9
   144c8:	stp	xzr, xzr, [sp, #256]
   144cc:	str	xzr, [sp, #272]
   144d0:	bl	3170 <deflateInit_@plt>
   144d4:	cbnz	w0, 147d8 <gelf_getchdr@@ELFUTILS_1.7+0x470>
   144d8:	add	x28, sp, #0x98
   144dc:	mov	w22, #0x0                   	// #0
   144e0:	str	xzr, [sp, #152]
   144e4:	ldp	x0, x1, [x27]
   144e8:	stp	x0, x1, [x28]
   144ec:	ldr	w0, [sp, #100]
   144f0:	cmp	w0, #0x1
   144f4:	ldp	x0, x1, [x27, #16]
   144f8:	stp	x0, x1, [x28, #16]
   144fc:	ldr	x0, [x27, #32]
   14500:	str	x0, [x28, #32]
   14504:	b.eq	14510 <gelf_getchdr@@ELFUTILS_1.7+0x1a8>  // b.none
   14508:	ldr	x0, [x27, #16]
   1450c:	cbnz	x0, 145fc <gelf_getchdr@@ELFUTILS_1.7+0x294>
   14510:	ldr	x0, [sp, #152]
   14514:	str	x0, [sp, #192]
   14518:	ldr	x0, [sp, #168]
   1451c:	str	wzr, [sp, #128]
   14520:	str	w0, [sp, #200]
   14524:	mov	w27, #0x0                   	// #0
   14528:	cbz	x24, 14644 <gelf_getchdr@@ELFUTILS_1.7+0x2dc>
   1452c:	ldp	x4, x0, [sp, #104]
   14530:	mov	x1, x24
   14534:	ldr	x2, [x24, #32]
   14538:	ldr	x3, [x4]
   1453c:	cmp	x2, x3
   14540:	csel	x2, x2, x3, cs  // cs = hs, nlast
   14544:	str	x2, [x4]
   14548:	ldr	x2, [x21]
   1454c:	ldr	x3, [x24, #16]
   14550:	add	x2, x2, x3
   14554:	str	x2, [x21]
   14558:	bl	32e0 <elf_getdata@plt>
   1455c:	str	x0, [sp, #120]
   14560:	sub	w2, w25, w26
   14564:	add	x7, x19, x26
   14568:	mov	w1, w22
   1456c:	mov	x0, x20
   14570:	str	x7, [sp, #216]
   14574:	str	w2, [sp, #224]
   14578:	bl	30e0 <deflate@plt>
   1457c:	cmn	w0, #0x2
   14580:	b.eq	146c8 <gelf_getchdr@@ELFUTILS_1.7+0x360>  // b.none
   14584:	ldr	w0, [sp, #224]
   14588:	sub	x26, x25, w0, uxtw
   1458c:	cbz	w0, 145a8 <gelf_getchdr@@ELFUTILS_1.7+0x240>
   14590:	ldr	w0, [sp, #128]
   14594:	cbnz	w0, 1469c <gelf_getchdr@@ELFUTILS_1.7+0x334>
   14598:	mov	x27, x24
   1459c:	cbnz	w22, 145c4 <gelf_getchdr@@ELFUTILS_1.7+0x25c>
   145a0:	ldr	x24, [sp, #120]
   145a4:	b	144e4 <gelf_getchdr@@ELFUTILS_1.7+0x17c>
   145a8:	add	x25, x25, x23
   145ac:	mov	x0, x19
   145b0:	mov	x1, x25
   145b4:	bl	3160 <realloc@plt>
   145b8:	cbz	x0, 14710 <gelf_getchdr@@ELFUTILS_1.7+0x3a8>
   145bc:	mov	x19, x0
   145c0:	b	14560 <gelf_getchdr@@ELFUTILS_1.7+0x1f8>
   145c4:	mov	x0, x20
   145c8:	bl	3230 <deflateEnd@plt>
   145cc:	cbnz	w0, 14814 <gelf_getchdr@@ELFUTILS_1.7+0x4ac>
   145d0:	ldr	x0, [sp, #136]
   145d4:	mov	x27, x19
   145d8:	ldp	x23, x24, [sp, #48]
   145dc:	str	x26, [x0]
   145e0:	mov	x0, x27
   145e4:	ldp	x19, x20, [sp, #16]
   145e8:	ldp	x21, x22, [sp, #32]
   145ec:	ldp	x25, x26, [sp, #64]
   145f0:	ldp	x27, x28, [sp, #80]
   145f4:	ldp	x29, x30, [sp], #304
   145f8:	ret
   145fc:	bl	30c0 <malloc@plt>
   14600:	str	x0, [sp, #152]
   14604:	cbz	x0, 1484c <gelf_getchdr@@ELFUTILS_1.7+0x4e4>
   14608:	ldr	x0, [sp, #112]
   1460c:	mov	x2, x27
   14610:	ldr	w3, [sp, #100]
   14614:	mov	x1, x28
   14618:	ldr	x0, [x0, #136]
   1461c:	bl	3150 <gelf_xlatetof@plt>
   14620:	mov	x27, x0
   14624:	cbz	x0, 147f4 <gelf_getchdr@@ELFUTILS_1.7+0x48c>
   14628:	ldr	x0, [sp, #152]
   1462c:	str	x0, [sp, #192]
   14630:	ldr	x0, [sp, #168]
   14634:	mov	w27, #0x1                   	// #1
   14638:	str	w27, [sp, #128]
   1463c:	str	w0, [sp, #200]
   14640:	cbnz	x24, 1452c <gelf_getchdr@@ELFUTILS_1.7+0x1c4>
   14644:	ldr	w0, [sp, #132]
   14648:	cbz	w0, 147cc <gelf_getchdr@@ELFUTILS_1.7+0x464>
   1464c:	nop
   14650:	sub	w2, w25, w26
   14654:	add	x7, x19, x26
   14658:	mov	x0, x20
   1465c:	mov	w1, #0x4                   	// #4
   14660:	str	x7, [sp, #216]
   14664:	str	w2, [sp, #224]
   14668:	bl	30e0 <deflate@plt>
   1466c:	cmn	w0, #0x2
   14670:	b.eq	146c8 <gelf_getchdr@@ELFUTILS_1.7+0x360>  // b.none
   14674:	ldr	w0, [sp, #224]
   14678:	ldr	x1, [x21]
   1467c:	sub	x26, x25, w0, uxtw
   14680:	cmp	x1, x26
   14684:	b.ls	14774 <gelf_getchdr@@ELFUTILS_1.7+0x40c>  // b.plast
   14688:	cbz	w0, 146ac <gelf_getchdr@@ELFUTILS_1.7+0x344>
   1468c:	ldr	w0, [sp, #128]
   14690:	cbz	w0, 145c4 <gelf_getchdr@@ELFUTILS_1.7+0x25c>
   14694:	mov	w22, #0x4                   	// #4
   14698:	str	xzr, [sp, #120]
   1469c:	ldr	x0, [sp, #152]
   146a0:	bl	3200 <free@plt>
   146a4:	str	xzr, [sp, #152]
   146a8:	b	14598 <gelf_getchdr@@ELFUTILS_1.7+0x230>
   146ac:	add	x25, x25, x23
   146b0:	mov	x0, x19
   146b4:	mov	x1, x25
   146b8:	bl	3160 <realloc@plt>
   146bc:	cbz	x0, 14710 <gelf_getchdr@@ELFUTILS_1.7+0x3a8>
   146c0:	mov	x19, x0
   146c4:	b	14650 <gelf_getchdr@@ELFUTILS_1.7+0x2e8>
   146c8:	mov	w0, #0x31                  	// #49
   146cc:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   146d0:	mov	x0, x20
   146d4:	cbz	w27, 14720 <gelf_getchdr@@ELFUTILS_1.7+0x3b8>
   146d8:	bl	3230 <deflateEnd@plt>
   146dc:	mov	x27, #0x0                   	// #0
   146e0:	mov	x0, x19
   146e4:	bl	3200 <free@plt>
   146e8:	ldr	x0, [sp, #152]
   146ec:	bl	3200 <free@plt>
   146f0:	mov	x0, x27
   146f4:	ldp	x19, x20, [sp, #16]
   146f8:	ldp	x21, x22, [sp, #32]
   146fc:	ldp	x23, x24, [sp, #48]
   14700:	ldp	x25, x26, [sp, #64]
   14704:	ldp	x27, x28, [sp, #80]
   14708:	ldp	x29, x30, [sp], #304
   1470c:	ret
   14710:	mov	w0, #0x8                   	// #8
   14714:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   14718:	mov	x0, x20
   1471c:	cbnz	w27, 146d8 <gelf_getchdr@@ELFUTILS_1.7+0x370>
   14720:	bl	3230 <deflateEnd@plt>
   14724:	mov	x27, #0x0                   	// #0
   14728:	mov	x0, x19
   1472c:	bl	3200 <free@plt>
   14730:	mov	x0, x27
   14734:	ldp	x19, x20, [sp, #16]
   14738:	ldp	x21, x22, [sp, #32]
   1473c:	ldp	x23, x24, [sp, #48]
   14740:	ldp	x25, x26, [sp, #64]
   14744:	ldp	x27, x28, [sp, #80]
   14748:	ldp	x29, x30, [sp], #304
   1474c:	ret
   14750:	mov	x27, #0xffffffffffffffff    	// #-1
   14754:	mov	x0, x27
   14758:	ldp	x19, x20, [sp, #16]
   1475c:	ldp	x21, x22, [sp, #32]
   14760:	ldp	x23, x24, [sp, #48]
   14764:	ldp	x25, x26, [sp, #64]
   14768:	ldp	x27, x28, [sp, #80]
   1476c:	ldp	x29, x30, [sp], #304
   14770:	ret
   14774:	mov	x0, x20
   14778:	cbnz	w27, 14794 <gelf_getchdr@@ELFUTILS_1.7+0x42c>
   1477c:	bl	3230 <deflateEnd@plt>
   14780:	mov	x27, #0xffffffffffffffff    	// #-1
   14784:	mov	x0, x19
   14788:	bl	3200 <free@plt>
   1478c:	ldp	x23, x24, [sp, #48]
   14790:	b	145e0 <gelf_getchdr@@ELFUTILS_1.7+0x278>
   14794:	bl	3230 <deflateEnd@plt>
   14798:	mov	x27, #0xffffffffffffffff    	// #-1
   1479c:	mov	x0, x19
   147a0:	bl	3200 <free@plt>
   147a4:	ldr	x0, [sp, #152]
   147a8:	bl	3200 <free@plt>
   147ac:	mov	x0, x27
   147b0:	ldp	x19, x20, [sp, #16]
   147b4:	ldp	x21, x22, [sp, #32]
   147b8:	ldp	x23, x24, [sp, #48]
   147bc:	ldp	x25, x26, [sp, #64]
   147c0:	ldp	x27, x28, [sp, #80]
   147c4:	ldp	x29, x30, [sp], #304
   147c8:	ret
   147cc:	mov	w22, #0x4                   	// #4
   147d0:	str	xzr, [sp, #120]
   147d4:	b	14560 <gelf_getchdr@@ELFUTILS_1.7+0x1f8>
   147d8:	mov	x0, x19
   147dc:	bl	3200 <free@plt>
   147e0:	mov	w0, #0x31                  	// #49
   147e4:	mov	x27, #0x0                   	// #0
   147e8:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   147ec:	ldp	x23, x24, [sp, #48]
   147f0:	b	145e0 <gelf_getchdr@@ELFUTILS_1.7+0x278>
   147f4:	mov	x0, x20
   147f8:	bl	3230 <deflateEnd@plt>
   147fc:	mov	x0, x19
   14800:	bl	3200 <free@plt>
   14804:	ldr	x0, [sp, #152]
   14808:	bl	3200 <free@plt>
   1480c:	ldp	x23, x24, [sp, #48]
   14810:	b	145e0 <gelf_getchdr@@ELFUTILS_1.7+0x278>
   14814:	mov	w0, #0x31                  	// #49
   14818:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   1481c:	mov	x27, #0x0                   	// #0
   14820:	mov	x0, x20
   14824:	bl	3230 <deflateEnd@plt>
   14828:	mov	x0, x19
   1482c:	bl	3200 <free@plt>
   14830:	ldp	x23, x24, [sp, #48]
   14834:	b	145e0 <gelf_getchdr@@ELFUTILS_1.7+0x278>
   14838:	mov	w0, #0x8                   	// #8
   1483c:	mov	x27, #0x0                   	// #0
   14840:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   14844:	ldp	x23, x24, [sp, #48]
   14848:	b	145e0 <gelf_getchdr@@ELFUTILS_1.7+0x278>
   1484c:	mov	w0, #0x8                   	// #8
   14850:	b	14818 <gelf_getchdr@@ELFUTILS_1.7+0x4b0>
   14854:	nop
   14858:	mov	x3, #0x80ff                	// #33023
   1485c:	stp	x29, x30, [sp, #-176]!
   14860:	movk	x3, #0xe03f, lsl #16
   14864:	movk	x3, #0xf80f, lsl #32
   14868:	mov	x29, sp
   1486c:	movk	x3, #0xfe03, lsl #48
   14870:	stp	x19, x20, [sp, #16]
   14874:	umulh	x3, x2, x3
   14878:	cmp	x1, x3, lsr #10
   1487c:	b.cc	1498c <gelf_getchdr@@ELFUTILS_1.7+0x624>  // b.lo, b.ul, b.last
   14880:	cmp	x2, #0x0
   14884:	mov	x20, x2
   14888:	stp	x21, x22, [sp, #32]
   1488c:	mov	x22, x1
   14890:	str	x23, [sp, #48]
   14894:	mov	x23, x0
   14898:	csinc	x0, x2, xzr, ne  // ne = any
   1489c:	bl	30c0 <malloc@plt>
   148a0:	mov	x19, x0
   148a4:	cbz	x0, 149a8 <gelf_getchdr@@ELFUTILS_1.7+0x640>
   148a8:	add	x21, sp, #0x40
   148ac:	stp	xzr, xzr, [sp, #72]
   148b0:	mov	x0, x21
   148b4:	stp	xzr, xzr, [sp, #88]
   148b8:	adrp	x1, 16000 <elf_compress_gnu@@ELFUTILS_1.7+0x11b8>
   148bc:	mov	w2, #0x70                  	// #112
   148c0:	add	x1, x1, #0x7a0
   148c4:	str	x23, [sp, #64]
   148c8:	str	w22, [sp, #72]
   148cc:	str	x19, [sp, #88]
   148d0:	str	w20, [sp, #96]
   148d4:	stp	xzr, xzr, [sp, #104]
   148d8:	stp	xzr, xzr, [sp, #120]
   148dc:	stp	xzr, xzr, [sp, #136]
   148e0:	stp	xzr, xzr, [sp, #152]
   148e4:	str	xzr, [sp, #168]
   148e8:	bl	3270 <inflateInit_@plt>
   148ec:	ldr	w1, [sp, #72]
   148f0:	cbz	w1, 14930 <gelf_getchdr@@ELFUTILS_1.7+0x5c8>
   148f4:	cbnz	w0, 14960 <gelf_getchdr@@ELFUTILS_1.7+0x5f8>
   148f8:	ldr	w3, [sp, #96]
   148fc:	mov	w1, #0x4                   	// #4
   14900:	mov	x0, x21
   14904:	sub	x3, x20, x3
   14908:	add	x3, x19, x3
   1490c:	str	x3, [sp, #88]
   14910:	bl	3070 <inflate@plt>
   14914:	mov	w1, w0
   14918:	cmp	w1, #0x1
   1491c:	mov	x0, x21
   14920:	b.ne	14960 <gelf_getchdr@@ELFUTILS_1.7+0x5f8>  // b.any
   14924:	bl	3310 <inflateReset@plt>
   14928:	ldr	w1, [sp, #72]
   1492c:	cbnz	w1, 148f4 <gelf_getchdr@@ELFUTILS_1.7+0x58c>
   14930:	cbnz	w0, 14960 <gelf_getchdr@@ELFUTILS_1.7+0x5f8>
   14934:	mov	x0, x21
   14938:	bl	31b0 <inflateEnd@plt>
   1493c:	ldr	w1, [sp, #96]
   14940:	orr	w0, w0, w1
   14944:	cbnz	w0, 14960 <gelf_getchdr@@ELFUTILS_1.7+0x5f8>
   14948:	ldp	x21, x22, [sp, #32]
   1494c:	ldr	x23, [sp, #48]
   14950:	mov	x0, x19
   14954:	ldp	x19, x20, [sp, #16]
   14958:	ldp	x29, x30, [sp], #176
   1495c:	ret
   14960:	mov	x0, x19
   14964:	bl	3200 <free@plt>
   14968:	mov	w0, #0x32                  	// #50
   1496c:	mov	x19, #0x0                   	// #0
   14970:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   14974:	mov	x0, x19
   14978:	ldp	x19, x20, [sp, #16]
   1497c:	ldp	x21, x22, [sp, #32]
   14980:	ldr	x23, [sp, #48]
   14984:	ldp	x29, x30, [sp], #176
   14988:	ret
   1498c:	mov	w0, #0x21                  	// #33
   14990:	mov	x19, #0x0                   	// #0
   14994:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   14998:	mov	x0, x19
   1499c:	ldp	x19, x20, [sp, #16]
   149a0:	ldp	x29, x30, [sp], #176
   149a4:	ret
   149a8:	mov	w0, #0x8                   	// #8
   149ac:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   149b0:	ldp	x21, x22, [sp, #32]
   149b4:	ldr	x23, [sp, #48]
   149b8:	b	14950 <gelf_getchdr@@ELFUTILS_1.7+0x5e8>
   149bc:	nop
   149c0:	stp	x29, x30, [sp, #-80]!
   149c4:	mov	x29, sp
   149c8:	stp	x19, x20, [sp, #16]
   149cc:	mov	x20, x2
   149d0:	mov	x19, x0
   149d4:	str	x21, [sp, #32]
   149d8:	mov	x21, x1
   149dc:	add	x1, sp, #0x38
   149e0:	bl	3240 <gelf_getchdr@plt>
   149e4:	cbz	x0, 14a6c <gelf_getchdr@@ELFUTILS_1.7+0x704>
   149e8:	ldr	w0, [sp, #56]
   149ec:	cmp	w0, #0x1
   149f0:	b.ne	14a64 <gelf_getchdr@@ELFUTILS_1.7+0x6fc>  // b.any
   149f4:	ldr	x0, [sp, #72]
   149f8:	sub	x1, x0, #0x1
   149fc:	tst	x1, x0
   14a00:	b.ne	14a80 <gelf_getchdr@@ELFUTILS_1.7+0x718>  // b.any
   14a04:	mov	x0, x19
   14a08:	mov	x1, #0x0                   	// #0
   14a0c:	bl	32e0 <elf_getdata@plt>
   14a10:	cbz	x0, 14a6c <gelf_getchdr@@ELFUTILS_1.7+0x704>
   14a14:	ldr	x4, [x19, #136]
   14a18:	mov	x3, #0xc                   	// #12
   14a1c:	ldr	x5, [x0]
   14a20:	mov	x1, #0x18                  	// #24
   14a24:	ldr	w4, [x4, #32]
   14a28:	ldr	x2, [sp, #64]
   14a2c:	cmp	w4, #0x1
   14a30:	ldr	x4, [x0, #16]
   14a34:	csel	x1, x3, x1, eq  // eq = none
   14a38:	add	x0, x5, x1
   14a3c:	sub	x1, x4, x1
   14a40:	bl	14858 <gelf_getchdr@@ELFUTILS_1.7+0x4f0>
   14a44:	ldr	x1, [sp, #64]
   14a48:	str	x1, [x21]
   14a4c:	ldr	x1, [sp, #72]
   14a50:	str	x1, [x20]
   14a54:	ldp	x19, x20, [sp, #16]
   14a58:	ldr	x21, [sp, #32]
   14a5c:	ldp	x29, x30, [sp], #80
   14a60:	ret
   14a64:	mov	w0, #0x30                  	// #48
   14a68:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   14a6c:	mov	x0, #0x0                   	// #0
   14a70:	ldp	x19, x20, [sp, #16]
   14a74:	ldr	x21, [sp, #32]
   14a78:	ldp	x29, x30, [sp], #80
   14a7c:	ret
   14a80:	mov	w0, #0x24                  	// #36
   14a84:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   14a88:	mov	x0, #0x0                   	// #0
   14a8c:	ldp	x19, x20, [sp, #16]
   14a90:	ldr	x21, [sp, #32]
   14a94:	ldp	x29, x30, [sp], #80
   14a98:	ret
   14a9c:	nop
   14aa0:	stp	x29, x30, [sp, #-32]!
   14aa4:	mov	w5, #0x1                   	// #1
   14aa8:	mov	x29, sp
   14aac:	stp	x19, x20, [sp, #16]
   14ab0:	mov	x19, x0
   14ab4:	mov	x20, x1
   14ab8:	ldr	x0, [x0, #160]
   14abc:	stp	xzr, x20, [x19, #64]
   14ac0:	ldr	x1, [x19, #168]
   14ac4:	stp	w4, w5, [x19, #80]
   14ac8:	stp	x2, xzr, [x19, #88]
   14acc:	cmp	x1, x0
   14ad0:	str	x3, [x19, #104]
   14ad4:	b.eq	14ae4 <gelf_getchdr@@ELFUTILS_1.7+0x77c>  // b.none
   14ad8:	mov	x0, x1
   14adc:	bl	3200 <free@plt>
   14ae0:	ldr	x0, [x19, #160]
   14ae4:	ldr	x1, [x19, #136]
   14ae8:	ldr	x1, [x1]
   14aec:	str	xzr, [x19, #168]
   14af0:	cbz	x1, 14b08 <gelf_getchdr@@ELFUTILS_1.7+0x7a0>
   14af4:	ldr	x1, [x19, #176]
   14af8:	cmp	x1, x0
   14afc:	b.eq	14b08 <gelf_getchdr@@ELFUTILS_1.7+0x7a0>  // b.none
   14b00:	ldr	w1, [x19, #156]
   14b04:	tbz	w1, #7, 14b10 <gelf_getchdr@@ELFUTILS_1.7+0x7a8>
   14b08:	bl	3200 <free@plt>
   14b0c:	ldr	w1, [x19, #156]
   14b10:	orr	w0, w1, #0x180
   14b14:	mov	w1, #0x1                   	// #1
   14b18:	str	w1, [x19, #120]
   14b1c:	str	w0, [x19, #156]
   14b20:	mov	x0, x19
   14b24:	str	x20, [x19, #160]
   14b28:	ldp	x19, x20, [sp, #16]
   14b2c:	ldp	x29, x30, [sp], #32
   14b30:	b	d090 <elf_rawdata@@ELFUTILS_1.0+0x560>
   14b34:	nop

0000000000014b38 <elf_compress@@ELFUTILS_1.7>:
   14b38:	cbz	x0, 14d74 <elf_compress@@ELFUTILS_1.7+0x23c>
   14b3c:	stp	x29, x30, [sp, #-176]!
   14b40:	tst	w2, #0xfffffffe
   14b44:	mov	x29, sp
   14b48:	stp	x19, x20, [sp, #16]
   14b4c:	mov	w20, w2
   14b50:	b.ne	14c58 <elf_compress@@ELFUTILS_1.7+0x120>  // b.any
   14b54:	stp	x21, x22, [sp, #32]
   14b58:	mov	x19, x0
   14b5c:	mov	w21, w1
   14b60:	ldr	x22, [x0, #136]
   14b64:	add	x1, sp, #0x70
   14b68:	mov	x0, x22
   14b6c:	bl	32b0 <gelf_getehdr@plt>
   14b70:	cbz	x0, 14c44 <elf_compress@@ELFUTILS_1.7+0x10c>
   14b74:	stp	x23, x24, [sp, #48]
   14b78:	mov	x0, x19
   14b7c:	ldr	w23, [x22, #32]
   14b80:	stp	x25, x26, [sp, #64]
   14b84:	ldrb	w24, [sp, #117]
   14b88:	cmp	w23, #0x1
   14b8c:	b.eq	14d60 <elf_compress@@ELFUTILS_1.7+0x228>  // b.none
   14b90:	bl	3110 <elf64_getshdr@plt>
   14b94:	cbz	x0, 14c3c <elf_compress@@ELFUTILS_1.7+0x104>
   14b98:	ldr	w25, [x0, #4]
   14b9c:	ldr	x1, [x0, #8]
   14ba0:	ldr	x26, [x0, #48]
   14ba4:	mov	w0, #0x2d                  	// #45
   14ba8:	tbnz	w1, #1, 14d40 <elf_compress@@ELFUTILS_1.7+0x208>
   14bac:	tst	w25, #0xfffffff7
   14bb0:	mov	w0, #0x2c                  	// #44
   14bb4:	b.eq	14d40 <elf_compress@@ELFUTILS_1.7+0x208>  // b.none
   14bb8:	cmp	w21, #0x1
   14bbc:	b.eq	14c70 <elf_compress@@ELFUTILS_1.7+0x138>  // b.none
   14bc0:	cbnz	w21, 14d3c <elf_compress@@ELFUTILS_1.7+0x204>
   14bc4:	mov	w0, #0x2e                  	// #46
   14bc8:	tbz	w1, #11, 14d40 <elf_compress@@ELFUTILS_1.7+0x208>
   14bcc:	ldr	x0, [x19, #176]
   14bd0:	cbz	x0, 14dac <elf_compress@@ELFUTILS_1.7+0x274>
   14bd4:	mov	x0, x19
   14bd8:	cmp	w23, #0x1
   14bdc:	b.eq	14d8c <elf_compress@@ELFUTILS_1.7+0x254>  // b.none
   14be0:	bl	3110 <elf64_getshdr@plt>
   14be4:	ldr	x1, [x0, #8]
   14be8:	ldp	x21, x20, [x19, #184]
   14bec:	and	x1, x1, #0xfffffffffffff7ff
   14bf0:	str	x1, [x0, #8]
   14bf4:	str	x21, [x0, #32]
   14bf8:	str	x20, [x0, #48]
   14bfc:	ldr	x23, [x19, #176]
   14c00:	mov	w1, w25
   14c04:	mov	x0, x22
   14c08:	mov	x2, x20
   14c0c:	bl	cbc0 <elf_rawdata@@ELFUTILS_1.0+0x90>
   14c10:	mov	w4, w0
   14c14:	mov	x2, x21
   14c18:	mov	x1, x23
   14c1c:	mov	x0, x19
   14c20:	mov	x3, x20
   14c24:	bl	14aa0 <gelf_getchdr@@ELFUTILS_1.7+0x738>
   14c28:	mov	w0, #0x1                   	// #1
   14c2c:	ldp	x21, x22, [sp, #32]
   14c30:	ldp	x23, x24, [sp, #48]
   14c34:	ldp	x25, x26, [sp, #64]
   14c38:	b	14c4c <elf_compress@@ELFUTILS_1.7+0x114>
   14c3c:	ldp	x23, x24, [sp, #48]
   14c40:	ldp	x25, x26, [sp, #64]
   14c44:	mov	w0, #0xffffffff            	// #-1
   14c48:	ldp	x21, x22, [sp, #32]
   14c4c:	ldp	x19, x20, [sp, #16]
   14c50:	ldp	x29, x30, [sp], #176
   14c54:	ret
   14c58:	mov	w0, #0x17                  	// #23
   14c5c:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   14c60:	mov	w0, #0xffffffff            	// #-1
   14c64:	ldp	x19, x20, [sp, #16]
   14c68:	ldp	x29, x30, [sp], #176
   14c6c:	ret
   14c70:	cmp	w23, #0x1
   14c74:	mov	x0, #0x18                  	// #24
   14c78:	and	w6, w20, #0x1
   14c7c:	add	x5, sp, #0x68
   14c80:	add	x4, sp, #0x60
   14c84:	add	x3, sp, #0x58
   14c88:	mov	w2, w24
   14c8c:	mov	x1, #0xc                   	// #12
   14c90:	csel	x1, x1, x0, eq  // eq = none
   14c94:	mov	x0, x19
   14c98:	bl	14408 <gelf_getchdr@@ELFUTILS_1.7+0xa0>
   14c9c:	mov	x20, x0
   14ca0:	cmn	x0, #0x1
   14ca4:	b.eq	14e30 <elf_compress@@ELFUTILS_1.7+0x2f8>  // b.none
   14ca8:	mov	w0, #0xffffffff            	// #-1
   14cac:	cbz	x20, 14d7c <elf_compress@@ELFUTILS_1.7+0x244>
   14cb0:	cmp	w23, #0x1
   14cb4:	ldr	x2, [sp, #88]
   14cb8:	b.eq	14dd4 <elf_compress@@ELFUTILS_1.7+0x29c>  // b.none
   14cbc:	mov	w1, w21
   14cc0:	cmp	w24, #0x1
   14cc4:	b.eq	14cd4 <elf_compress@@ELFUTILS_1.7+0x19c>  // b.none
   14cc8:	rev	x2, x2
   14ccc:	rev	x26, x26
   14cd0:	mov	w1, #0x1000000             	// #16777216
   14cd4:	stp	w1, wzr, [x20]
   14cd8:	mov	x0, x19
   14cdc:	stp	x2, x26, [x20, #8]
   14ce0:	bl	3110 <elf64_getshdr@plt>
   14ce4:	adrp	x1, 15000 <elf_compress_gnu@@ELFUTILS_1.7+0x1b8>
   14ce8:	ldr	x3, [x0, #8]
   14cec:	ldrb	w1, [x1, #3844]
   14cf0:	ldr	x2, [sp, #104]
   14cf4:	cmp	w1, #0x0
   14cf8:	csinc	w1, w1, wzr, ne  // ne = any
   14cfc:	orr	x3, x3, #0x800
   14d00:	and	x1, x1, #0xff
   14d04:	str	x3, [x0, #8]
   14d08:	str	x2, [x0, #32]
   14d0c:	str	x1, [x0, #48]
   14d10:	mov	x0, x19
   14d14:	mov	x1, x20
   14d18:	mov	w4, #0x19                  	// #25
   14d1c:	mov	x3, #0x1                   	// #1
   14d20:	bl	14aa0 <gelf_getchdr@@ELFUTILS_1.7+0x738>
   14d24:	mov	w0, #0x1                   	// #1
   14d28:	ldp	x21, x22, [sp, #32]
   14d2c:	ldp	x23, x24, [sp, #48]
   14d30:	ldp	x25, x26, [sp, #64]
   14d34:	str	xzr, [x19, #176]
   14d38:	b	14c4c <elf_compress@@ELFUTILS_1.7+0x114>
   14d3c:	mov	w0, #0x30                  	// #48
   14d40:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   14d44:	mov	w0, #0xffffffff            	// #-1
   14d48:	ldp	x19, x20, [sp, #16]
   14d4c:	ldp	x21, x22, [sp, #32]
   14d50:	ldp	x23, x24, [sp, #48]
   14d54:	ldp	x25, x26, [sp, #64]
   14d58:	ldp	x29, x30, [sp], #176
   14d5c:	ret
   14d60:	bl	3290 <elf32_getshdr@plt>
   14d64:	cbz	x0, 14c3c <elf_compress@@ELFUTILS_1.7+0x104>
   14d68:	ldp	w25, w1, [x0, #4]
   14d6c:	ldr	w26, [x0, #32]
   14d70:	b	14ba4 <elf_compress@@ELFUTILS_1.7+0x6c>
   14d74:	mov	w0, #0xffffffff            	// #-1
   14d78:	ret
   14d7c:	ldp	x21, x22, [sp, #32]
   14d80:	ldp	x23, x24, [sp, #48]
   14d84:	ldp	x25, x26, [sp, #64]
   14d88:	b	14c4c <elf_compress@@ELFUTILS_1.7+0x114>
   14d8c:	bl	3290 <elf32_getshdr@plt>
   14d90:	ldr	w1, [x0, #8]
   14d94:	ldp	x21, x20, [x19, #184]
   14d98:	and	w1, w1, #0xfffff7ff
   14d9c:	str	w1, [x0, #8]
   14da0:	str	w21, [x0, #20]
   14da4:	str	w20, [x0, #32]
   14da8:	b	14bfc <elf_compress@@ELFUTILS_1.7+0xc4>
   14dac:	add	x2, sp, #0x68
   14db0:	add	x1, sp, #0x60
   14db4:	mov	x0, x19
   14db8:	bl	149c0 <gelf_getchdr@@ELFUTILS_1.7+0x658>
   14dbc:	cbz	x0, 14d44 <elf_compress@@ELFUTILS_1.7+0x20c>
   14dc0:	ldr	x1, [sp, #96]
   14dc4:	stp	x0, x1, [x19, #176]
   14dc8:	ldr	x0, [sp, #104]
   14dcc:	str	x0, [x19, #192]
   14dd0:	b	14bd4 <elf_compress@@ELFUTILS_1.7+0x9c>
   14dd4:	ldr	x0, [sp, #96]
   14dd8:	cmp	w24, #0x1
   14ddc:	mov	w3, w2
   14de0:	mov	w1, w0
   14de4:	b.eq	14df4 <elf_compress@@ELFUTILS_1.7+0x2bc>  // b.none
   14de8:	rev	w3, w2
   14dec:	rev	w1, w0
   14df0:	mov	w23, #0x1000000             	// #16777216
   14df4:	stp	w23, w3, [x20]
   14df8:	mov	x0, x19
   14dfc:	str	w1, [x20, #8]
   14e00:	bl	3290 <elf32_getshdr@plt>
   14e04:	ldr	w3, [x0, #8]
   14e08:	adrp	x1, 15000 <elf_compress_gnu@@ELFUTILS_1.7+0x1b8>
   14e0c:	ldr	x2, [sp, #104]
   14e10:	orr	w3, w3, #0x800
   14e14:	ldrb	w1, [x1, #3817]
   14e18:	str	w3, [x0, #8]
   14e1c:	cmp	w1, #0x0
   14e20:	str	w2, [x0, #20]
   14e24:	csinc	w1, w1, wzr, ne  // ne = any
   14e28:	str	w1, [x0, #32]
   14e2c:	b	14d10 <elf_compress@@ELFUTILS_1.7+0x1d8>
   14e30:	mov	w0, #0x0                   	// #0
   14e34:	ldp	x21, x22, [sp, #32]
   14e38:	ldp	x23, x24, [sp, #48]
   14e3c:	ldp	x25, x26, [sp, #64]
   14e40:	b	14c4c <elf_compress@@ELFUTILS_1.7+0x114>
   14e44:	nop

0000000000014e48 <elf_compress_gnu@@ELFUTILS_1.7>:
   14e48:	cbz	x0, 15008 <elf_compress_gnu@@ELFUTILS_1.7+0x1c0>
   14e4c:	stp	x29, x30, [sp, #-176]!
   14e50:	tst	w2, #0xfffffffe
   14e54:	mov	x29, sp
   14e58:	stp	x19, x20, [sp, #16]
   14e5c:	mov	w20, w2
   14e60:	b.ne	14fa8 <elf_compress_gnu@@ELFUTILS_1.7+0x160>  // b.any
   14e64:	stp	x21, x22, [sp, #32]
   14e68:	mov	x19, x0
   14e6c:	mov	w21, w1
   14e70:	ldr	x22, [x0, #136]
   14e74:	add	x1, sp, #0x70
   14e78:	mov	x0, x22
   14e7c:	bl	32b0 <gelf_getehdr@plt>
   14e80:	cbz	x0, 14f94 <elf_compress_gnu@@ELFUTILS_1.7+0x14c>
   14e84:	stp	x23, x24, [sp, #48]
   14e88:	mov	x0, x19
   14e8c:	ldr	w23, [x22, #32]
   14e90:	stp	x25, x26, [sp, #64]
   14e94:	ldrb	w24, [sp, #117]
   14e98:	cmp	w23, #0x1
   14e9c:	b.eq	14fec <elf_compress_gnu@@ELFUTILS_1.7+0x1a4>  // b.none
   14ea0:	bl	3110 <elf64_getshdr@plt>
   14ea4:	cbz	x0, 14f8c <elf_compress_gnu@@ELFUTILS_1.7+0x144>
   14ea8:	ldr	w25, [x0, #4]
   14eac:	ldr	x1, [x0, #8]
   14eb0:	ldr	x26, [x0, #48]
   14eb4:	mov	x0, #0x802                 	// #2050
   14eb8:	tst	x1, x0
   14ebc:	b.ne	15000 <elf_compress_gnu@@ELFUTILS_1.7+0x1b8>  // b.any
   14ec0:	tst	w25, #0xfffffff7
   14ec4:	mov	w0, #0x2c                  	// #44
   14ec8:	b.eq	14fc4 <elf_compress_gnu@@ELFUTILS_1.7+0x17c>  // b.none
   14ecc:	cmp	w21, #0x1
   14ed0:	b.eq	15010 <elf_compress_gnu@@ELFUTILS_1.7+0x1c8>  // b.none
   14ed4:	cbnz	w21, 14fc0 <elf_compress_gnu@@ELFUTILS_1.7+0x178>
   14ed8:	mov	x0, x19
   14edc:	mov	x1, #0x0                   	// #0
   14ee0:	bl	32e0 <elf_getdata@plt>
   14ee4:	cbz	x0, 14f8c <elf_compress_gnu@@ELFUTILS_1.7+0x144>
   14ee8:	ldr	x1, [x0, #16]
   14eec:	cmp	x1, #0xb
   14ef0:	b.ls	14fe4 <elf_compress_gnu@@ELFUTILS_1.7+0x19c>  // b.plast
   14ef4:	ldr	x0, [x0]
   14ef8:	mov	w2, #0x4c5a                	// #19546
   14efc:	movk	w2, #0x4249, lsl #16
   14f00:	ldr	w3, [x0]
   14f04:	cmp	w3, w2
   14f08:	b.ne	14fe4 <elf_compress_gnu@@ELFUTILS_1.7+0x19c>  // b.any
   14f0c:	ldur	x20, [x0, #4]
   14f10:	rev	x20, x20
   14f14:	add	x2, x20, #0x17
   14f18:	cmp	x1, x2
   14f1c:	b.hi	14fe4 <elf_compress_gnu@@ELFUTILS_1.7+0x19c>  // b.pmore
   14f20:	sub	x1, x1, #0xc
   14f24:	add	x0, x0, #0xc
   14f28:	mov	x2, x20
   14f2c:	bl	14858 <gelf_getchdr@@ELFUTILS_1.7+0x4f0>
   14f30:	mov	x21, x0
   14f34:	cbz	x0, 14f8c <elf_compress_gnu@@ELFUTILS_1.7+0x144>
   14f38:	mov	x0, x19
   14f3c:	cmp	w23, #0x1
   14f40:	b.eq	150c4 <elf_compress_gnu@@ELFUTILS_1.7+0x27c>  // b.none
   14f44:	bl	3110 <elf64_getshdr@plt>
   14f48:	str	x20, [x0, #32]
   14f4c:	mov	w1, w25
   14f50:	mov	x2, x26
   14f54:	mov	x0, x22
   14f58:	bl	cbc0 <elf_rawdata@@ELFUTILS_1.0+0x90>
   14f5c:	mov	x3, x26
   14f60:	mov	w4, w0
   14f64:	mov	x1, x21
   14f68:	mov	x0, x19
   14f6c:	mov	x2, x20
   14f70:	bl	14aa0 <gelf_getchdr@@ELFUTILS_1.7+0x738>
   14f74:	mov	w0, #0x1                   	// #1
   14f78:	ldp	x23, x24, [sp, #48]
   14f7c:	ldp	x25, x26, [sp, #64]
   14f80:	str	x21, [x19, #176]
   14f84:	ldp	x21, x22, [sp, #32]
   14f88:	b	14f9c <elf_compress_gnu@@ELFUTILS_1.7+0x154>
   14f8c:	ldp	x23, x24, [sp, #48]
   14f90:	ldp	x25, x26, [sp, #64]
   14f94:	mov	w0, #0xffffffff            	// #-1
   14f98:	ldp	x21, x22, [sp, #32]
   14f9c:	ldp	x19, x20, [sp, #16]
   14fa0:	ldp	x29, x30, [sp], #176
   14fa4:	ret
   14fa8:	mov	w0, #0x17                  	// #23
   14fac:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   14fb0:	mov	w0, #0xffffffff            	// #-1
   14fb4:	ldp	x19, x20, [sp, #16]
   14fb8:	ldp	x29, x30, [sp], #176
   14fbc:	ret
   14fc0:	mov	w0, #0x30                  	// #48
   14fc4:	bl	3538 <elf_errno@@ELFUTILS_1.0+0x30>
   14fc8:	mov	w0, #0xffffffff            	// #-1
   14fcc:	ldp	x19, x20, [sp, #16]
   14fd0:	ldp	x21, x22, [sp, #32]
   14fd4:	ldp	x23, x24, [sp, #48]
   14fd8:	ldp	x25, x26, [sp, #64]
   14fdc:	ldp	x29, x30, [sp], #176
   14fe0:	ret
   14fe4:	mov	w0, #0x2e                  	// #46
   14fe8:	b	14fc4 <elf_compress_gnu@@ELFUTILS_1.7+0x17c>
   14fec:	bl	3290 <elf32_getshdr@plt>
   14ff0:	cbz	x0, 14f8c <elf_compress_gnu@@ELFUTILS_1.7+0x144>
   14ff4:	ldp	w25, w1, [x0, #4]
   14ff8:	ldr	w26, [x0, #32]
   14ffc:	b	14eb4 <elf_compress_gnu@@ELFUTILS_1.7+0x6c>
   15000:	mov	w0, #0x2d                  	// #45
   15004:	b	14fc4 <elf_compress_gnu@@ELFUTILS_1.7+0x17c>
   15008:	mov	w0, #0xffffffff            	// #-1
   1500c:	ret
   15010:	and	w6, w20, #0x1
   15014:	mov	w2, w24
   15018:	add	x5, sp, #0x60
   1501c:	add	x4, sp, #0x68
   15020:	add	x3, sp, #0x58
   15024:	mov	x0, x19
   15028:	mov	x1, #0xc                   	// #12
   1502c:	bl	14408 <gelf_getchdr@@ELFUTILS_1.7+0xa0>
   15030:	mov	x20, x0
   15034:	cmn	x0, #0x1
   15038:	b.eq	150b0 <elf_compress_gnu@@ELFUTILS_1.7+0x268>  // b.none
   1503c:	mov	w0, #0xffffffff            	// #-1
   15040:	cbz	x20, 150a0 <elf_compress_gnu@@ELFUTILS_1.7+0x258>
   15044:	ldr	x0, [sp, #88]
   15048:	mov	w1, #0x4c5a                	// #19546
   1504c:	movk	w1, #0x4249, lsl #16
   15050:	str	w1, [x20]
   15054:	rev	x0, x0
   15058:	stur	x0, [x20, #4]
   1505c:	cmp	w23, #0x1
   15060:	mov	x0, x19
   15064:	b.eq	150d0 <elf_compress_gnu@@ELFUTILS_1.7+0x288>  // b.none
   15068:	bl	3110 <elf64_getshdr@plt>
   1506c:	ldr	x2, [sp, #96]
   15070:	str	x2, [x0, #32]
   15074:	mov	x0, x19
   15078:	mov	x1, x20
   1507c:	mov	w4, #0x0                   	// #0
   15080:	mov	x3, #0x1                   	// #1
   15084:	bl	14aa0 <gelf_getchdr@@ELFUTILS_1.7+0x738>
   15088:	mov	w0, #0x1                   	// #1
   1508c:	ldp	x21, x22, [sp, #32]
   15090:	ldp	x23, x24, [sp, #48]
   15094:	ldp	x25, x26, [sp, #64]
   15098:	str	xzr, [x19, #176]
   1509c:	b	14f9c <elf_compress_gnu@@ELFUTILS_1.7+0x154>
   150a0:	ldp	x21, x22, [sp, #32]
   150a4:	ldp	x23, x24, [sp, #48]
   150a8:	ldp	x25, x26, [sp, #64]
   150ac:	b	14f9c <elf_compress_gnu@@ELFUTILS_1.7+0x154>
   150b0:	mov	w0, #0x0                   	// #0
   150b4:	ldp	x21, x22, [sp, #32]
   150b8:	ldp	x23, x24, [sp, #48]
   150bc:	ldp	x25, x26, [sp, #64]
   150c0:	b	14f9c <elf_compress_gnu@@ELFUTILS_1.7+0x154>
   150c4:	bl	3290 <elf32_getshdr@plt>
   150c8:	str	w20, [x0, #20]
   150cc:	b	14f4c <elf_compress_gnu@@ELFUTILS_1.7+0x104>
   150d0:	bl	3290 <elf32_getshdr@plt>
   150d4:	ldr	x2, [sp, #96]
   150d8:	str	w2, [x0, #20]
   150dc:	b	15074 <elf_compress_gnu@@ELFUTILS_1.7+0x22c>

Disassembly of section .fini:

00000000000150e0 <.fini>:
   150e0:	stp	x29, x30, [sp, #-16]!
   150e4:	mov	x29, sp
   150e8:	ldp	x29, x30, [sp], #16
   150ec:	ret
