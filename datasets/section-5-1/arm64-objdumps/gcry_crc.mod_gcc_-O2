
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//gcry_crc.mod_gcc_-O2:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_mod_init-0x450>:
   0:	mov	w1, #0xffffffff            	// #-1
   4:	str	w1, [x0]
   8:	ret
   c:	nop
  10:	add	x0, x0, #0x4
  14:	ret
  18:	ldr	w1, [x0]
  1c:	mvn	w1, w1
  20:	str	w1, [x0]
  24:	rev	w1, w1
  28:	str	w1, [x0, #4]
  2c:	ret
  30:	str	wzr, [x0]
  34:	ret
  38:	ldr	w1, [x0]
  3c:	rev	w1, w1
  40:	str	w1, [x0, #4]
  44:	ret
  48:	mov	w1, #0x4b7                 	// #1207
  4c:	movk	w1, #0xce, lsl #16
  50:	str	w1, [x0]
  54:	ret
  58:	ldr	w1, [x0]
  5c:	ldrh	w2, [x0]
  60:	and	w1, w1, #0xffffff
  64:	str	w1, [x0]
  68:	strh	w2, [x0, #4]
  6c:	lsr	w1, w1, #16
  70:	strb	w1, [x0, #6]
  74:	strb	wzr, [x0, #7]
  78:	ret
  7c:	nop
  80:	cmp	x1, #0x0
  84:	ccmp	x2, #0x0, #0x4, ne  // ne = any
  88:	b.eq	250 <grub_mod_init-0x200>  // b.none
  8c:	ldr	w3, [x0]
  90:	cmp	x2, #0xf
  94:	b.ls	254 <grub_mod_init-0x1fc>  // b.plast
  98:	sub	x7, x2, #0x10
  9c:	adrp	x4, 0 <grub_mod_init-0x450>
  a0:	and	x7, x7, #0xfffffffffffffff0
  a4:	add	x7, x7, #0x10
  a8:	ldr	x4, [x4]
  ac:	add	x7, x1, x7
  b0:	ldp	w5, w12, [x1]
  b4:	ldp	w11, w10, [x1, #8]
  b8:	eor	w3, w3, w5
  bc:	add	x1, x1, #0x10
  c0:	ubfx	x9, x3, #8, #8
  c4:	ubfx	x8, x3, #16, #8
  c8:	add	x9, x9, #0x200
  cc:	add	x8, x8, #0x100
  d0:	lsr	w13, w3, #24
  d4:	add	x3, x4, w3, uxtb #2
  d8:	cmp	x7, x1
  dc:	ldr	w5, [x4, x8, lsl #2]
  e0:	ldr	w6, [x4, x9, lsl #2]
  e4:	ldr	w8, [x4, x13, lsl #2]
  e8:	eor	w6, w6, w5
  ec:	ldr	w5, [x3, #3072]
  f0:	eor	w3, w8, w12
  f4:	eor	w6, w6, w3
  f8:	eor	w6, w6, w5
  fc:	ubfx	x9, x6, #8, #8
 100:	ubfx	x8, x6, #16, #8
 104:	add	x9, x9, #0x200
 108:	add	x8, x8, #0x100
 10c:	lsr	w12, w6, #24
 110:	add	x6, x4, w6, uxtb #2
 114:	ldr	w3, [x4, x8, lsl #2]
 118:	ldr	w5, [x4, x9, lsl #2]
 11c:	ldr	w8, [x4, x12, lsl #2]
 120:	eor	w5, w5, w3
 124:	ldr	w3, [x6, #3072]
 128:	eor	w6, w8, w11
 12c:	eor	w5, w5, w6
 130:	eor	w5, w5, w3
 134:	ubfx	x8, x5, #8, #8
 138:	ubfx	x6, x5, #16, #8
 13c:	lsr	w9, w5, #24
 140:	add	x8, x8, #0x200
 144:	add	x6, x6, #0x100
 148:	add	x5, x4, w5, uxtb #2
 14c:	ldr	w3, [x4, x8, lsl #2]
 150:	ldr	w8, [x4, x6, lsl #2]
 154:	ldr	w6, [x4, x9, lsl #2]
 158:	eor	w3, w3, w8
 15c:	ldr	w8, [x5, #3072]
 160:	eor	w5, w6, w10
 164:	eor	w3, w3, w5
 168:	eor	w3, w3, w8
 16c:	ubfx	x8, x3, #8, #8
 170:	ubfx	x6, x3, #16, #8
 174:	lsr	w5, w3, #24
 178:	add	x8, x8, #0x200
 17c:	add	x6, x6, #0x100
 180:	add	x9, x4, w3, uxtb #2
 184:	ldr	w3, [x4, x8, lsl #2]
 188:	ldr	w8, [x4, x6, lsl #2]
 18c:	ldr	w6, [x4, x5, lsl #2]
 190:	ldr	w5, [x9, #3072]
 194:	eor	w3, w3, w8
 198:	eor	w5, w5, w6
 19c:	eor	w3, w3, w5
 1a0:	b.ne	b0 <grub_mod_init-0x3a0>  // b.any
 1a4:	and	x2, x2, #0xf
 1a8:	cmp	x2, #0x3
 1ac:	mov	x1, x2
 1b0:	b.ls	220 <grub_mod_init-0x230>  // b.plast
 1b4:	adrp	x4, 0 <grub_mod_init-0x450>
 1b8:	mov	x6, x7
 1bc:	add	x10, x7, x2
 1c0:	ldr	x4, [x4]
 1c4:	ldr	w1, [x6], #4
 1c8:	eor	w3, w3, w1
 1cc:	sub	x1, x10, x6
 1d0:	cmp	x1, #0x3
 1d4:	ubfx	x5, x3, #16, #8
 1d8:	ubfx	x1, x3, #8, #8
 1dc:	add	x5, x5, #0x100
 1e0:	add	x9, x4, w3, uxtb #2
 1e4:	add	x1, x1, #0x200
 1e8:	lsr	w3, w3, #24
 1ec:	ldr	w8, [x4, x5, lsl #2]
 1f0:	ldr	w1, [x4, x1, lsl #2]
 1f4:	ldr	w5, [x4, x3, lsl #2]
 1f8:	ldr	w3, [x9, #3072]
 1fc:	eor	w1, w1, w8
 200:	eor	w3, w3, w5
 204:	eor	w3, w1, w3
 208:	b.hi	1c4 <grub_mod_init-0x28c>  // b.pmore
 20c:	sub	x4, x2, #0x4
 210:	and	x1, x2, #0x3
 214:	and	x2, x4, #0xfffffffffffffffc
 218:	add	x2, x2, #0x4
 21c:	add	x7, x7, x2
 220:	cbz	x1, 24c <grub_mod_init-0x204>
 224:	adrp	x4, 0 <grub_mod_init-0x450>
 228:	add	x2, x7, x1
 22c:	ldr	x4, [x4]
 230:	ldrb	w1, [x7], #1
 234:	eor	x1, x3, x1
 238:	cmp	x2, x7
 23c:	and	x1, x1, #0xff
 240:	ldr	w1, [x4, x1, lsl #2]
 244:	eor	w3, w1, w3, lsr #8
 248:	b.ne	230 <grub_mod_init-0x220>  // b.any
 24c:	str	w3, [x0]
 250:	ret
 254:	mov	x7, x1
 258:	b	1a8 <grub_mod_init-0x2a8>
 25c:	nop
	...
 268:	cmp	x1, #0x0
 26c:	ccmp	x2, #0x0, #0x4, ne  // ne = any
 270:	b.eq	438 <grub_mod_init-0x18>  // b.none
 274:	ldr	w3, [x0]
 278:	cmp	x2, #0xf
 27c:	b.ls	43c <grub_mod_init-0x14>  // b.plast
 280:	sub	x7, x2, #0x10
 284:	adrp	x4, 0 <grub_mod_init-0x450>
 288:	and	x7, x7, #0xfffffffffffffff0
 28c:	add	x7, x7, #0x10
 290:	ldr	x4, [x4]
 294:	add	x7, x1, x7
 298:	ldp	w5, w12, [x1]
 29c:	ldp	w11, w10, [x1, #8]
 2a0:	eor	w3, w3, w5
 2a4:	add	x1, x1, #0x10
 2a8:	ubfx	x9, x3, #8, #8
 2ac:	ubfx	x8, x3, #16, #8
 2b0:	add	x9, x9, #0x200
 2b4:	add	x8, x8, #0x100
 2b8:	lsr	w13, w3, #24
 2bc:	add	x3, x4, w3, uxtb #2
 2c0:	cmp	x7, x1
 2c4:	ldr	w5, [x4, x8, lsl #2]
 2c8:	ldr	w6, [x4, x9, lsl #2]
 2cc:	ldr	w8, [x4, x13, lsl #2]
 2d0:	eor	w6, w6, w5
 2d4:	ldr	w5, [x3, #3072]
 2d8:	eor	w3, w8, w12
 2dc:	eor	w6, w6, w3
 2e0:	eor	w6, w6, w5
 2e4:	ubfx	x9, x6, #8, #8
 2e8:	ubfx	x8, x6, #16, #8
 2ec:	add	x9, x9, #0x200
 2f0:	add	x8, x8, #0x100
 2f4:	lsr	w12, w6, #24
 2f8:	add	x6, x4, w6, uxtb #2
 2fc:	ldr	w3, [x4, x8, lsl #2]
 300:	ldr	w5, [x4, x9, lsl #2]
 304:	ldr	w8, [x4, x12, lsl #2]
 308:	eor	w5, w5, w3
 30c:	ldr	w3, [x6, #3072]
 310:	eor	w6, w8, w11
 314:	eor	w5, w5, w6
 318:	eor	w5, w5, w3
 31c:	ubfx	x8, x5, #8, #8
 320:	ubfx	x6, x5, #16, #8
 324:	lsr	w9, w5, #24
 328:	add	x8, x8, #0x200
 32c:	add	x6, x6, #0x100
 330:	add	x5, x4, w5, uxtb #2
 334:	ldr	w3, [x4, x8, lsl #2]
 338:	ldr	w8, [x4, x6, lsl #2]
 33c:	ldr	w6, [x4, x9, lsl #2]
 340:	eor	w3, w3, w8
 344:	ldr	w8, [x5, #3072]
 348:	eor	w5, w6, w10
 34c:	eor	w3, w3, w5
 350:	eor	w3, w3, w8
 354:	ubfx	x8, x3, #8, #8
 358:	ubfx	x6, x3, #16, #8
 35c:	lsr	w5, w3, #24
 360:	add	x8, x8, #0x200
 364:	add	x6, x6, #0x100
 368:	add	x9, x4, w3, uxtb #2
 36c:	ldr	w3, [x4, x8, lsl #2]
 370:	ldr	w8, [x4, x6, lsl #2]
 374:	ldr	w6, [x4, x5, lsl #2]
 378:	ldr	w5, [x9, #3072]
 37c:	eor	w3, w3, w8
 380:	eor	w5, w5, w6
 384:	eor	w3, w3, w5
 388:	b.ne	298 <grub_mod_init-0x1b8>  // b.any
 38c:	and	x2, x2, #0xf
 390:	cmp	x2, #0x3
 394:	mov	x1, x2
 398:	b.ls	408 <grub_mod_init-0x48>  // b.plast
 39c:	adrp	x4, 0 <grub_mod_init-0x450>
 3a0:	mov	x6, x7
 3a4:	add	x10, x7, x2
 3a8:	ldr	x4, [x4]
 3ac:	ldr	w1, [x6], #4
 3b0:	eor	w3, w3, w1
 3b4:	sub	x1, x10, x6
 3b8:	cmp	x1, #0x3
 3bc:	ubfx	x5, x3, #16, #8
 3c0:	ubfx	x1, x3, #8, #8
 3c4:	add	x5, x5, #0x100
 3c8:	add	x9, x4, w3, uxtb #2
 3cc:	add	x1, x1, #0x200
 3d0:	lsr	w3, w3, #24
 3d4:	ldr	w8, [x4, x5, lsl #2]
 3d8:	ldr	w1, [x4, x1, lsl #2]
 3dc:	ldr	w5, [x4, x3, lsl #2]
 3e0:	ldr	w3, [x9, #3072]
 3e4:	eor	w1, w1, w8
 3e8:	eor	w3, w3, w5
 3ec:	eor	w3, w1, w3
 3f0:	b.hi	3ac <grub_mod_init-0xa4>  // b.pmore
 3f4:	sub	x4, x2, #0x4
 3f8:	and	x1, x2, #0x3
 3fc:	and	x2, x4, #0xfffffffffffffffc
 400:	add	x2, x2, #0x4
 404:	add	x7, x7, x2
 408:	cbz	x1, 434 <grub_mod_init-0x1c>
 40c:	adrp	x4, 0 <grub_mod_init-0x450>
 410:	add	x2, x7, x1
 414:	ldr	x4, [x4]
 418:	ldrb	w1, [x7], #1
 41c:	eor	x1, x3, x1
 420:	cmp	x2, x7
 424:	and	x1, x1, #0xff
 428:	ldr	w1, [x4, x1, lsl #2]
 42c:	eor	w3, w1, w3, lsr #8
 430:	b.ne	418 <grub_mod_init-0x38>  // b.any
 434:	str	w3, [x0]
 438:	ret
 43c:	mov	x7, x1
 440:	b	390 <grub_mod_init-0xc0>
 444:	nop
	...

0000000000000450 <grub_mod_init>:
 450:	stp	x29, x30, [sp, #-32]!
 454:	adrp	x0, 0 <grub_mod_init-0x450>
 458:	mov	x29, sp
 45c:	str	x19, [sp, #16]
 460:	ldr	x19, [x0]
 464:	mov	x0, x19
 468:	bl	0 <grub_md_register>
 46c:	add	x0, x19, #0x60
 470:	bl	0 <grub_md_register>
 474:	add	x0, x19, #0xc0
 478:	ldr	x19, [sp, #16]
 47c:	ldp	x29, x30, [sp], #32
 480:	b	0 <grub_md_register>
 484:	nop
	...

0000000000000490 <grub_mod_fini>:
 490:	stp	x29, x30, [sp, #-32]!
 494:	adrp	x0, 0 <grub_mod_init-0x450>
 498:	mov	x29, sp
 49c:	str	x19, [sp, #16]
 4a0:	ldr	x19, [x0]
 4a4:	mov	x0, x19
 4a8:	bl	0 <grub_md_unregister>
 4ac:	add	x0, x19, #0x60
 4b0:	bl	0 <grub_md_unregister>
 4b4:	add	x0, x19, #0xc0
 4b8:	ldr	x19, [sp, #16]
 4bc:	ldp	x29, x30, [sp], #32
 4c0:	b	0 <grub_md_unregister>
 4c4:	nop
	...
