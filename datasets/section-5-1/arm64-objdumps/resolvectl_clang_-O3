
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//resolvectl_clang_-O3:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000403920 <.init>:
  403920:	stp	x29, x30, [sp, #-16]!
  403924:	mov	x29, sp
  403928:	bl	404468 <ascii_strlower_n@plt+0x60>
  40392c:	ldp	x29, x30, [sp], #16
  403930:	ret

Disassembly of section .plt:

0000000000403938 <__libc_start_main@plt-0x20>:
  403938:	stp	x16, x30, [sp, #-16]!
  40393c:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403940:	ldr	x17, [x16, #2712]
  403944:	add	x16, x16, #0xa98
  403948:	br	x17
  40394c:	nop
  403950:	nop
  403954:	nop

0000000000403958 <__libc_start_main@plt>:
  403958:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  40395c:	ldr	x17, [x16, #2720]
  403960:	add	x16, x16, #0xaa0
  403964:	br	x17

0000000000403968 <abort@plt>:
  403968:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  40396c:	ldr	x17, [x16, #2728]
  403970:	add	x16, x16, #0xaa8
  403974:	br	x17

0000000000403978 <__gmon_start__@plt>:
  403978:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  40397c:	ldr	x17, [x16, #2736]
  403980:	add	x16, x16, #0xab0
  403984:	br	x17

0000000000403988 <getenv@plt>:
  403988:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  40398c:	ldr	x17, [x16, #2744]
  403990:	add	x16, x16, #0xab8
  403994:	br	x17

0000000000403998 <getopt_long@plt>:
  403998:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  40399c:	ldr	x17, [x16, #2752]
  4039a0:	add	x16, x16, #0xac0
  4039a4:	br	x17

00000000004039a8 <log_get_max_level_realm@plt>:
  4039a8:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  4039ac:	ldr	x17, [x16, #2760]
  4039b0:	add	x16, x16, #0xac8
  4039b4:	br	x17

00000000004039b8 <log_internal_realm@plt>:
  4039b8:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  4039bc:	ldr	x17, [x16, #2768]
  4039c0:	add	x16, x16, #0xad0
  4039c4:	br	x17

00000000004039c8 <read_line_full@plt>:
  4039c8:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  4039cc:	ldr	x17, [x16, #2776]
  4039d0:	add	x16, x16, #0xad8
  4039d4:	br	x17

00000000004039d8 <free@plt>:
  4039d8:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  4039dc:	ldr	x17, [x16, #2784]
  4039e0:	add	x16, x16, #0xae0
  4039e4:	br	x17

00000000004039e8 <strstrip@plt>:
  4039e8:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  4039ec:	ldr	x17, [x16, #2792]
  4039f0:	add	x16, x16, #0xae8
  4039f4:	br	x17

00000000004039f8 <first_word@plt>:
  4039f8:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  4039fc:	ldr	x17, [x16, #2800]
  403a00:	add	x16, x16, #0xaf0
  403a04:	br	x17

0000000000403a08 <extract_first_word@plt>:
  403a08:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403a0c:	ldr	x17, [x16, #2808]
  403a10:	add	x16, x16, #0xaf8
  403a14:	br	x17

0000000000403a18 <strv_push@plt>:
  403a18:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403a1c:	ldr	x17, [x16, #2816]
  403a20:	add	x16, x16, #0xb00
  403a24:	br	x17

0000000000403a28 <log_oom_internal@plt>:
  403a28:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403a2c:	ldr	x17, [x16, #2824]
  403a30:	add	x16, x16, #0xb08
  403a34:	br	x17

0000000000403a38 <log_syntax_internal@plt>:
  403a38:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403a3c:	ldr	x17, [x16, #2832]
  403a40:	add	x16, x16, #0xb10
  403a44:	br	x17

0000000000403a48 <terminal_urlify_man@plt>:
  403a48:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403a4c:	ldr	x17, [x16, #2840]
  403a50:	add	x16, x16, #0xb18
  403a54:	br	x17

0000000000403a58 <printf@plt>:
  403a58:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403a5c:	ldr	x17, [x16, #2848]
  403a60:	add	x16, x16, #0xb20
  403a64:	br	x17

0000000000403a68 <version@plt>:
  403a68:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403a6c:	ldr	x17, [x16, #2856]
  403a70:	add	x16, x16, #0xb28
  403a74:	br	x17

0000000000403a78 <strv_extend@plt>:
  403a78:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403a7c:	ldr	x17, [x16, #2864]
  403a80:	add	x16, x16, #0xb30
  403a84:	br	x17

0000000000403a88 <log_assert_failed_unreachable_realm@plt>:
  403a88:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403a8c:	ldr	x17, [x16, #2872]
  403a90:	add	x16, x16, #0xb38
  403a94:	br	x17

0000000000403a98 <log_assert_failed_realm@plt>:
  403a98:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403a9c:	ldr	x17, [x16, #2880]
  403aa0:	add	x16, x16, #0xb40
  403aa4:	br	x17

0000000000403aa8 <strv_free@plt>:
  403aa8:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403aac:	ldr	x17, [x16, #2888]
  403ab0:	add	x16, x16, #0xb48
  403ab4:	br	x17

0000000000403ab8 <strchr@plt>:
  403ab8:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403abc:	ldr	x17, [x16, #2896]
  403ac0:	add	x16, x16, #0xb50
  403ac4:	br	x17

0000000000403ac8 <strndup@plt>:
  403ac8:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403acc:	ldr	x17, [x16, #2904]
  403ad0:	add	x16, x16, #0xb58
  403ad4:	br	x17

0000000000403ad8 <parse_ifindex_or_ifname@plt>:
  403ad8:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403adc:	ldr	x17, [x16, #2912]
  403ae0:	add	x16, x16, #0xb60
  403ae4:	br	x17

0000000000403ae8 <strdup@plt>:
  403ae8:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403aec:	ldr	x17, [x16, #2920]
  403af0:	add	x16, x16, #0xb68
  403af4:	br	x17

0000000000403af8 <setlocale@plt>:
  403af8:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403afc:	ldr	x17, [x16, #2928]
  403b00:	add	x16, x16, #0xb70
  403b04:	br	x17

0000000000403b08 <log_show_color@plt>:
  403b08:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403b0c:	ldr	x17, [x16, #2936]
  403b10:	add	x16, x16, #0xb78
  403b14:	br	x17

0000000000403b18 <log_parse_environment_realm@plt>:
  403b18:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403b1c:	ldr	x17, [x16, #2944]
  403b20:	add	x16, x16, #0xb80
  403b24:	br	x17

0000000000403b28 <log_open@plt>:
  403b28:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403b2c:	ldr	x17, [x16, #2952]
  403b30:	add	x16, x16, #0xb88
  403b34:	br	x17

0000000000403b38 <strcmp@plt>:
  403b38:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403b3c:	ldr	x17, [x16, #2960]
  403b40:	add	x16, x16, #0xb90
  403b44:	br	x17

0000000000403b48 <parse_boolean@plt>:
  403b48:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403b4c:	ldr	x17, [x16, #2968]
  403b50:	add	x16, x16, #0xb98
  403b54:	br	x17

0000000000403b58 <on_tty@plt>:
  403b58:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403b5c:	ldr	x17, [x16, #2976]
  403b60:	add	x16, x16, #0xba0
  403b64:	br	x17

0000000000403b68 <strv_find@plt>:
  403b68:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403b6c:	ldr	x17, [x16, #2984]
  403b70:	add	x16, x16, #0xba8
  403b74:	br	x17

0000000000403b78 <colors_enabled@plt>:
  403b78:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403b7c:	ldr	x17, [x16, #2992]
  403b80:	add	x16, x16, #0xbb0
  403b84:	br	x17

0000000000403b88 <sd_bus_open_system@plt>:
  403b88:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403b8c:	ldr	x17, [x16, #3000]
  403b90:	add	x16, x16, #0xbb8
  403b94:	br	x17

0000000000403b98 <dispatch_verb@plt>:
  403b98:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403b9c:	ldr	x17, [x16, #3008]
  403ba0:	add	x16, x16, #0xbc0
  403ba4:	br	x17

0000000000403ba8 <sd_bus_flush_close_unref@plt>:
  403ba8:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403bac:	ldr	x17, [x16, #3016]
  403bb0:	add	x16, x16, #0xbc8
  403bb4:	br	x17

0000000000403bb8 <ask_password_agent_close@plt>:
  403bb8:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403bbc:	ldr	x17, [x16, #3024]
  403bc0:	add	x16, x16, #0xbd0
  403bc4:	br	x17

0000000000403bc8 <polkit_agent_close@plt>:
  403bc8:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403bcc:	ldr	x17, [x16, #3032]
  403bd0:	add	x16, x16, #0xbd8
  403bd4:	br	x17

0000000000403bd8 <pager_close@plt>:
  403bd8:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403bdc:	ldr	x17, [x16, #3040]
  403be0:	add	x16, x16, #0xbe0
  403be4:	br	x17

0000000000403be8 <mac_selinux_finish@plt>:
  403be8:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403bec:	ldr	x17, [x16, #3048]
  403bf0:	add	x16, x16, #0xbe8
  403bf4:	br	x17

0000000000403bf8 <puts@plt>:
  403bf8:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403bfc:	ldr	x17, [x16, #3056]
  403c00:	add	x16, x16, #0xbf0
  403c04:	br	x17

0000000000403c08 <strv_length@plt>:
  403c08:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403c0c:	ldr	x17, [x16, #3064]
  403c10:	add	x16, x16, #0xbf8
  403c14:	br	x17

0000000000403c18 <flockfile@plt>:
  403c18:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403c1c:	ldr	x17, [x16, #3072]
  403c20:	add	x16, x16, #0xc00
  403c24:	br	x17

0000000000403c28 <__overflow@plt>:
  403c28:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403c2c:	ldr	x17, [x16, #3080]
  403c30:	add	x16, x16, #0xc08
  403c34:	br	x17

0000000000403c38 <fputs_unlocked@plt>:
  403c38:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403c3c:	ldr	x17, [x16, #3088]
  403c40:	add	x16, x16, #0xc10
  403c44:	br	x17

0000000000403c48 <funlockfile@plt>:
  403c48:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403c4c:	ldr	x17, [x16, #3096]
  403c50:	add	x16, x16, #0xc18
  403c54:	br	x17

0000000000403c58 <memset@plt>:
  403c58:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403c5c:	ldr	x17, [x16, #3104]
  403c60:	add	x16, x16, #0xc20
  403c64:	br	x17

0000000000403c68 <memcpy@plt>:
  403c68:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403c6c:	ldr	x17, [x16, #3112]
  403c70:	add	x16, x16, #0xc28
  403c74:	br	x17

0000000000403c78 <strncmp@plt>:
  403c78:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403c7c:	ldr	x17, [x16, #3120]
  403c80:	add	x16, x16, #0xc30
  403c84:	br	x17

0000000000403c88 <in_addr_ifindex_from_string_auto@plt>:
  403c88:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403c8c:	ldr	x17, [x16, #3128]
  403c90:	add	x16, x16, #0xc38
  403c94:	br	x17

0000000000403c98 <in_addr_ifindex_to_string@plt>:
  403c98:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403c9c:	ldr	x17, [x16, #3136]
  403ca0:	add	x16, x16, #0xc40
  403ca4:	br	x17

0000000000403ca8 <sd_bus_message_new_method_call@plt>:
  403ca8:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403cac:	ldr	x17, [x16, #3144]
  403cb0:	add	x16, x16, #0xc48
  403cb4:	br	x17

0000000000403cb8 <sd_bus_message_append@plt>:
  403cb8:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403cbc:	ldr	x17, [x16, #3152]
  403cc0:	add	x16, x16, #0xc50
  403cc4:	br	x17

0000000000403cc8 <sd_bus_message_append_array@plt>:
  403cc8:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403ccc:	ldr	x17, [x16, #3160]
  403cd0:	add	x16, x16, #0xc58
  403cd4:	br	x17

0000000000403cd8 <now@plt>:
  403cd8:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403cdc:	ldr	x17, [x16, #3168]
  403ce0:	add	x16, x16, #0xc60
  403ce4:	br	x17

0000000000403ce8 <sd_bus_call@plt>:
  403ce8:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403cec:	ldr	x17, [x16, #3176]
  403cf0:	add	x16, x16, #0xc68
  403cf4:	br	x17

0000000000403cf8 <sd_bus_message_enter_container@plt>:
  403cf8:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403cfc:	ldr	x17, [x16, #3184]
  403d00:	add	x16, x16, #0xc70
  403d04:	br	x17

0000000000403d08 <sd_bus_message_read@plt>:
  403d08:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403d0c:	ldr	x17, [x16, #3192]
  403d10:	add	x16, x16, #0xc78
  403d14:	br	x17

0000000000403d18 <sd_bus_message_exit_container@plt>:
  403d18:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403d1c:	ldr	x17, [x16, #3200]
  403d20:	add	x16, x16, #0xc80
  403d24:	br	x17

0000000000403d28 <strlen@plt>:
  403d28:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403d2c:	ldr	x17, [x16, #3208]
  403d30:	add	x16, x16, #0xc88
  403d34:	br	x17

0000000000403d38 <fputc@plt>:
  403d38:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403d3c:	ldr	x17, [x16, #3216]
  403d40:	add	x16, x16, #0xc90
  403d44:	br	x17

0000000000403d48 <af_to_name@plt>:
  403d48:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403d4c:	ldr	x17, [x16, #3224]
  403d50:	add	x16, x16, #0xc98
  403d54:	br	x17

0000000000403d58 <sd_bus_message_read_array@plt>:
  403d58:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403d5c:	ldr	x17, [x16, #3232]
  403d60:	add	x16, x16, #0xca0
  403d64:	br	x17

0000000000403d68 <sd_bus_error_free@plt>:
  403d68:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403d6c:	ldr	x17, [x16, #3240]
  403d70:	add	x16, x16, #0xca8
  403d74:	br	x17

0000000000403d78 <bus_error_message@plt>:
  403d78:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403d7c:	ldr	x17, [x16, #3248]
  403d80:	add	x16, x16, #0xcb0
  403d84:	br	x17

0000000000403d88 <sd_bus_message_unref@plt>:
  403d88:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403d8c:	ldr	x17, [x16, #3256]
  403d90:	add	x16, x16, #0xcb8
  403d94:	br	x17

0000000000403d98 <strrchr@plt>:
  403d98:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403d9c:	ldr	x17, [x16, #3264]
  403da0:	add	x16, x16, #0xcc0
  403da4:	br	x17

0000000000403da8 <sd_bus_get_property_trivial@plt>:
  403da8:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403dac:	ldr	x17, [x16, #3272]
  403db0:	add	x16, x16, #0xcc8
  403db4:	br	x17

0000000000403db8 <sd_bus_get_property@plt>:
  403db8:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403dbc:	ldr	x17, [x16, #3280]
  403dc0:	add	x16, x16, #0xcd0
  403dc4:	br	x17

0000000000403dc8 <sd_bus_call_method@plt>:
  403dc8:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403dcc:	ldr	x17, [x16, #3288]
  403dd0:	add	x16, x16, #0xcd8
  403dd4:	br	x17

0000000000403dd8 <sd_bus_error_has_name@plt>:
  403dd8:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403ddc:	ldr	x17, [x16, #3296]
  403de0:	add	x16, x16, #0xce0
  403de4:	br	x17

0000000000403de8 <strv_equal@plt>:
  403de8:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403dec:	ldr	x17, [x16, #3304]
  403df0:	add	x16, x16, #0xce8
  403df4:	br	x17

0000000000403df8 <dns_name_concat@plt>:
  403df8:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403dfc:	ldr	x17, [x16, #3312]
  403e00:	add	x16, x16, #0xcf0
  403e04:	br	x17

0000000000403e08 <format_ifname_full@plt>:
  403e08:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403e0c:	ldr	x17, [x16, #3320]
  403e10:	add	x16, x16, #0xcf8
  403e14:	br	x17

0000000000403e18 <asprintf@plt>:
  403e18:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403e1c:	ldr	x17, [x16, #3328]
  403e20:	add	x16, x16, #0xd00
  403e24:	br	x17

0000000000403e28 <sd_bus_path_encode@plt>:
  403e28:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403e2c:	ldr	x17, [x16, #3336]
  403e30:	add	x16, x16, #0xd08
  403e34:	br	x17

0000000000403e38 <bus_map_all_properties@plt>:
  403e38:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403e3c:	ldr	x17, [x16, #3344]
  403e40:	add	x16, x16, #0xd10
  403e44:	br	x17

0000000000403e48 <pager_open@plt>:
  403e48:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403e4c:	ldr	x17, [x16, #3352]
  403e50:	add	x16, x16, #0xd18
  403e54:	br	x17

0000000000403e58 <__errno_location@plt>:
  403e58:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403e5c:	ldr	x17, [x16, #3360]
  403e60:	add	x16, x16, #0xd20
  403e64:	br	x17

0000000000403e68 <putchar@plt>:
  403e68:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403e6c:	ldr	x17, [x16, #3368]
  403e70:	add	x16, x16, #0xd28
  403e74:	br	x17

0000000000403e78 <sd_netlink_open@plt>:
  403e78:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403e7c:	ldr	x17, [x16, #3376]
  403e80:	add	x16, x16, #0xd30
  403e84:	br	x17

0000000000403e88 <sd_rtnl_message_new_link@plt>:
  403e88:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403e8c:	ldr	x17, [x16, #3384]
  403e90:	add	x16, x16, #0xd38
  403e94:	br	x17

0000000000403e98 <sd_netlink_message_request_dump@plt>:
  403e98:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403e9c:	ldr	x17, [x16, #3392]
  403ea0:	add	x16, x16, #0xd40
  403ea4:	br	x17

0000000000403ea8 <sd_netlink_call@plt>:
  403ea8:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403eac:	ldr	x17, [x16, #3400]
  403eb0:	add	x16, x16, #0xd48
  403eb4:	br	x17

0000000000403eb8 <sd_netlink_message_next@plt>:
  403eb8:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403ebc:	ldr	x17, [x16, #3408]
  403ec0:	add	x16, x16, #0xd50
  403ec4:	br	x17

0000000000403ec8 <sd_netlink_message_get_type@plt>:
  403ec8:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403ecc:	ldr	x17, [x16, #3416]
  403ed0:	add	x16, x16, #0xd58
  403ed4:	br	x17

0000000000403ed8 <sd_rtnl_message_link_get_ifindex@plt>:
  403ed8:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403edc:	ldr	x17, [x16, #3424]
  403ee0:	add	x16, x16, #0xd60
  403ee4:	br	x17

0000000000403ee8 <sd_netlink_message_read_string@plt>:
  403ee8:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403eec:	ldr	x17, [x16, #3432]
  403ef0:	add	x16, x16, #0xd68
  403ef4:	br	x17

0000000000403ef8 <rtnl_log_create_error@plt>:
  403ef8:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403efc:	ldr	x17, [x16, #3440]
  403f00:	add	x16, x16, #0xd70
  403f04:	br	x17

0000000000403f08 <strv_sort@plt>:
  403f08:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403f0c:	ldr	x17, [x16, #3448]
  403f10:	add	x16, x16, #0xd78
  403f14:	br	x17

0000000000403f18 <rtnl_log_parse_error@plt>:
  403f18:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403f1c:	ldr	x17, [x16, #3456]
  403f20:	add	x16, x16, #0xd80
  403f24:	br	x17

0000000000403f28 <sd_netlink_unref@plt>:
  403f28:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403f2c:	ldr	x17, [x16, #3464]
  403f30:	add	x16, x16, #0xd88
  403f34:	br	x17

0000000000403f38 <sd_netlink_message_unref@plt>:
  403f38:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403f3c:	ldr	x17, [x16, #3472]
  403f40:	add	x16, x16, #0xd90
  403f44:	br	x17

0000000000403f48 <strv_consume@plt>:
  403f48:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403f4c:	ldr	x17, [x16, #3480]
  403f50:	add	x16, x16, #0xd98
  403f54:	br	x17

0000000000403f58 <strjoin_real@plt>:
  403f58:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403f5c:	ldr	x17, [x16, #3488]
  403f60:	add	x16, x16, #0xda0
  403f64:	br	x17

0000000000403f68 <in_addr_to_string@plt>:
  403f68:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403f6c:	ldr	x17, [x16, #3496]
  403f70:	add	x16, x16, #0xda8
  403f74:	br	x17

0000000000403f78 <fwrite@plt>:
  403f78:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403f7c:	ldr	x17, [x16, #3504]
  403f80:	add	x16, x16, #0xdb0
  403f84:	br	x17

0000000000403f88 <fflush@plt>:
  403f88:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403f8c:	ldr	x17, [x16, #3512]
  403f90:	add	x16, x16, #0xdb8
  403f94:	br	x17

0000000000403f98 <fprintf@plt>:
  403f98:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403f9c:	ldr	x17, [x16, #3520]
  403fa0:	add	x16, x16, #0xdc0
  403fa4:	br	x17

0000000000403fa8 <strnlen@plt>:
  403fa8:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403fac:	ldr	x17, [x16, #3528]
  403fb0:	add	x16, x16, #0xdc8
  403fb4:	br	x17

0000000000403fb8 <strncasecmp@plt>:
  403fb8:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403fbc:	ldr	x17, [x16, #3536]
  403fc0:	add	x16, x16, #0xdd0
  403fc4:	br	x17

0000000000403fc8 <strchrnul@plt>:
  403fc8:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403fcc:	ldr	x17, [x16, #3544]
  403fd0:	add	x16, x16, #0xdd8
  403fd4:	br	x17

0000000000403fd8 <format_timespan@plt>:
  403fd8:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403fdc:	ldr	x17, [x16, #3552]
  403fe0:	add	x16, x16, #0xde0
  403fe4:	br	x17

0000000000403fe8 <cescape_length@plt>:
  403fe8:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403fec:	ldr	x17, [x16, #3560]
  403ff0:	add	x16, x16, #0xde8
  403ff4:	br	x17

0000000000403ff8 <strcmp_ptr@plt>:
  403ff8:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  403ffc:	ldr	x17, [x16, #3568]
  404000:	add	x16, x16, #0xdf0
  404004:	br	x17

0000000000404008 <parse_ip_port@plt>:
  404008:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  40400c:	ldr	x17, [x16, #3576]
  404010:	add	x16, x16, #0xdf8
  404014:	br	x17

0000000000404018 <sd_bus_message_open_container@plt>:
  404018:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  40401c:	ldr	x17, [x16, #3584]
  404020:	add	x16, x16, #0xe00
  404024:	br	x17

0000000000404028 <in_addr_from_string_auto@plt>:
  404028:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  40402c:	ldr	x17, [x16, #3592]
  404030:	add	x16, x16, #0xe08
  404034:	br	x17

0000000000404038 <sd_bus_message_close_container@plt>:
  404038:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  40403c:	ldr	x17, [x16, #3600]
  404040:	add	x16, x16, #0xe10
  404044:	br	x17

0000000000404048 <sd_bus_message_append_strv@plt>:
  404048:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  40404c:	ldr	x17, [x16, #3608]
  404050:	add	x16, x16, #0xe18
  404054:	br	x17

0000000000404058 <page_size@plt>:
  404058:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  40405c:	ldr	x17, [x16, #3616]
  404060:	add	x16, x16, #0xe20
  404064:	br	x17

0000000000404068 <calloc@plt>:
  404068:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  40406c:	ldr	x17, [x16, #3624]
  404070:	add	x16, x16, #0xe28
  404074:	br	x17

0000000000404078 <internal_hashmap_first_key_and_value@plt>:
  404078:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  40407c:	ldr	x17, [x16, #3632]
  404080:	add	x16, x16, #0xe30
  404084:	br	x17

0000000000404088 <internal_hashmap_free@plt>:
  404088:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  40408c:	ldr	x17, [x16, #3640]
  404090:	add	x16, x16, #0xe38
  404094:	br	x17

0000000000404098 <internal_hashmap_iterate@plt>:
  404098:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  40409c:	ldr	x17, [x16, #3648]
  4040a0:	add	x16, x16, #0xe40
  4040a4:	br	x17

00000000004040a8 <internal_hashmap_remove@plt>:
  4040a8:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  4040ac:	ldr	x17, [x16, #3656]
  4040b0:	add	x16, x16, #0xe48
  4040b4:	br	x17

00000000004040b8 <realloc@plt>:
  4040b8:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  4040bc:	ldr	x17, [x16, #3664]
  4040c0:	add	x16, x16, #0xe50
  4040c4:	br	x17

00000000004040c8 <malloc@plt>:
  4040c8:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  4040cc:	ldr	x17, [x16, #3672]
  4040d0:	add	x16, x16, #0xe58
  4040d4:	br	x17

00000000004040d8 <ascii_tolower@plt>:
  4040d8:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  4040dc:	ldr	x17, [x16, #3680]
  4040e0:	add	x16, x16, #0xe60
  4040e4:	br	x17

00000000004040e8 <dns_name_is_root@plt>:
  4040e8:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  4040ec:	ldr	x17, [x16, #3688]
  4040f0:	add	x16, x16, #0xe68
  4040f4:	br	x17

00000000004040f8 <internal_hashmap_get@plt>:
  4040f8:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  4040fc:	ldr	x17, [x16, #3696]
  404100:	add	x16, x16, #0xe70
  404104:	br	x17

0000000000404108 <dns_label_unescape@plt>:
  404108:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  40410c:	ldr	x17, [x16, #3704]
  404110:	add	x16, x16, #0xe78
  404114:	br	x17

0000000000404118 <internal_hashmap_ensure_allocated@plt>:
  404118:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  40411c:	ldr	x17, [x16, #3712]
  404120:	add	x16, x16, #0xe80
  404124:	br	x17

0000000000404128 <hashmap_put@plt>:
  404128:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  40412c:	ldr	x17, [x16, #3720]
  404130:	add	x16, x16, #0xe88
  404134:	br	x17

0000000000404138 <bitmap_iterate@plt>:
  404138:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  40413c:	ldr	x17, [x16, #3728]
  404140:	add	x16, x16, #0xe90
  404144:	br	x17

0000000000404148 <memchr@plt>:
  404148:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  40414c:	ldr	x17, [x16, #3736]
  404150:	add	x16, x16, #0xe98
  404154:	br	x17

0000000000404158 <utf8_is_valid@plt>:
  404158:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  40415c:	ldr	x17, [x16, #3744]
  404160:	add	x16, x16, #0xea0
  404164:	br	x17

0000000000404168 <greedy_realloc@plt>:
  404168:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  40416c:	ldr	x17, [x16, #3752]
  404170:	add	x16, x16, #0xea8
  404174:	br	x17

0000000000404178 <dns_label_escape@plt>:
  404178:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  40417c:	ldr	x17, [x16, #3760]
  404180:	add	x16, x16, #0xeb0
  404184:	br	x17

0000000000404188 <memdup@plt>:
  404188:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  40418c:	ldr	x17, [x16, #3768]
  404190:	add	x16, x16, #0xeb8
  404194:	br	x17

0000000000404198 <bitmap_ensure_allocated@plt>:
  404198:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  40419c:	ldr	x17, [x16, #3776]
  4041a0:	add	x16, x16, #0xec0
  4041a4:	br	x17

00000000004041a8 <bitmap_set@plt>:
  4041a8:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  4041ac:	ldr	x17, [x16, #3784]
  4041b0:	add	x16, x16, #0xec8
  4041b4:	br	x17

00000000004041b8 <internal_set_new@plt>:
  4041b8:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  4041bc:	ldr	x17, [x16, #3792]
  4041c0:	add	x16, x16, #0xed0
  4041c4:	br	x17

00000000004041c8 <internal_hashmap_reserve@plt>:
  4041c8:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  4041cc:	ldr	x17, [x16, #3800]
  4041d0:	add	x16, x16, #0xed8
  4041d4:	br	x17

00000000004041d8 <set_put@plt>:
  4041d8:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  4041dc:	ldr	x17, [x16, #3808]
  4041e0:	add	x16, x16, #0xee0
  4041e4:	br	x17

00000000004041e8 <siphash24_compress@plt>:
  4041e8:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  4041ec:	ldr	x17, [x16, #3816]
  4041f0:	add	x16, x16, #0xee8
  4041f4:	br	x17

00000000004041f8 <memcmp@plt>:
  4041f8:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  4041fc:	ldr	x17, [x16, #3824]
  404200:	add	x16, x16, #0xef0
  404204:	br	x17

0000000000404208 <string_table_lookup@plt>:
  404208:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  40420c:	ldr	x17, [x16, #3832]
  404210:	add	x16, x16, #0xef8
  404214:	br	x17

0000000000404218 <strcpy@plt>:
  404218:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  40421c:	ldr	x17, [x16, #3840]
  404220:	add	x16, x16, #0xf00
  404224:	br	x17

0000000000404228 <dns_name_change_suffix@plt>:
  404228:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  40422c:	ldr	x17, [x16, #3848]
  404230:	add	x16, x16, #0xf08
  404234:	br	x17

0000000000404238 <dns_name_endswith@plt>:
  404238:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  40423c:	ldr	x17, [x16, #3856]
  404240:	add	x16, x16, #0xf10
  404244:	br	x17

0000000000404248 <dns_name_equal@plt>:
  404248:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  40424c:	ldr	x17, [x16, #3864]
  404250:	add	x16, x16, #0xf18
  404254:	br	x17

0000000000404258 <dns_name_hash_func@plt>:
  404258:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  40425c:	ldr	x17, [x16, #3872]
  404260:	add	x16, x16, #0xf20
  404264:	br	x17

0000000000404268 <dns_name_compare_func@plt>:
  404268:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  40426c:	ldr	x17, [x16, #3880]
  404270:	add	x16, x16, #0xf28
  404274:	br	x17

0000000000404278 <snprintf@plt>:
  404278:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  40427c:	ldr	x17, [x16, #3888]
  404280:	add	x16, x16, #0xf30
  404284:	br	x17

0000000000404288 <bitmap_free@plt>:
  404288:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  40428c:	ldr	x17, [x16, #3896]
  404290:	add	x16, x16, #0xf38
  404294:	br	x17

0000000000404298 <dns_name_reverse@plt>:
  404298:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  40429c:	ldr	x17, [x16, #3904]
  4042a0:	add	x16, x16, #0xf40
  4042a4:	br	x17

00000000004042a8 <bcmp@plt>:
  4042a8:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  4042ac:	ldr	x17, [x16, #3912]
  4042b0:	add	x16, x16, #0xf48
  4042b4:	br	x17

00000000004042b8 <bitmap_equal@plt>:
  4042b8:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  4042bc:	ldr	x17, [x16, #3920]
  4042c0:	add	x16, x16, #0xf50
  4042c4:	br	x17

00000000004042c8 <strcasecmp@plt>:
  4042c8:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  4042cc:	ldr	x17, [x16, #3928]
  4042d0:	add	x16, x16, #0xf58
  4042d4:	br	x17

00000000004042d8 <octescape@plt>:
  4042d8:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  4042dc:	ldr	x17, [x16, #3936]
  4042e0:	add	x16, x16, #0xf60
  4042e4:	br	x17

00000000004042e8 <hexmem@plt>:
  4042e8:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  4042ec:	ldr	x17, [x16, #3944]
  4042f0:	add	x16, x16, #0xf68
  4042f4:	br	x17

00000000004042f8 <columns@plt>:
  4042f8:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  4042fc:	ldr	x17, [x16, #3952]
  404300:	add	x16, x16, #0xf70
  404304:	br	x17

0000000000404308 <base64_append@plt>:
  404308:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  40430c:	ldr	x17, [x16, #3960]
  404310:	add	x16, x16, #0xf78
  404314:	br	x17

0000000000404318 <exp10@plt>:
  404318:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  40431c:	ldr	x17, [x16, #3968]
  404320:	add	x16, x16, #0xf80
  404324:	br	x17

0000000000404328 <gmtime_r@plt>:
  404328:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  40432c:	ldr	x17, [x16, #3976]
  404330:	add	x16, x16, #0xf88
  404334:	br	x17

0000000000404338 <strftime@plt>:
  404338:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  40433c:	ldr	x17, [x16, #3984]
  404340:	add	x16, x16, #0xf90
  404344:	br	x17

0000000000404348 <base32hexmem@plt>:
  404348:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  40434c:	ldr	x17, [x16, #3992]
  404350:	add	x16, x16, #0xf98
  404354:	br	x17

0000000000404358 <strv_join_prefix@plt>:
  404358:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  40435c:	ldr	x17, [x16, #4000]
  404360:	add	x16, x16, #0xfa0
  404364:	br	x17

0000000000404368 <dns_name_skip@plt>:
  404368:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  40436c:	ldr	x17, [x16, #4008]
  404370:	add	x16, x16, #0xfa8
  404374:	br	x17

0000000000404378 <dns_name_startswith@plt>:
  404378:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  40437c:	ldr	x17, [x16, #4016]
  404380:	add	x16, x16, #0xfb0
  404384:	br	x17

0000000000404388 <string_hash_func@plt>:
  404388:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  40438c:	ldr	x17, [x16, #4024]
  404390:	add	x16, x16, #0xfb8
  404394:	br	x17

0000000000404398 <bitmap_copy@plt>:
  404398:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  40439c:	ldr	x17, [x16, #4032]
  4043a0:	add	x16, x16, #0xfc0
  4043a4:	br	x17

00000000004043a8 <safe_atou_full@plt>:
  4043a8:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  4043ac:	ldr	x17, [x16, #4040]
  4043b0:	add	x16, x16, #0xfc8
  4043b4:	br	x17

00000000004043b8 <memmove@plt>:
  4043b8:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  4043bc:	ldr	x17, [x16, #4048]
  4043c0:	add	x16, x16, #0xfd0
  4043c4:	br	x17

00000000004043c8 <in_addr_is_link_local@plt>:
  4043c8:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  4043cc:	ldr	x17, [x16, #4056]
  4043d0:	add	x16, x16, #0xfd8
  4043d4:	br	x17

00000000004043d8 <fputs@plt>:
  4043d8:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  4043dc:	ldr	x17, [x16, #4064]
  4043e0:	add	x16, x16, #0xfe0
  4043e4:	br	x17

00000000004043e8 <dns_name_apply_idna@plt>:
  4043e8:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  4043ec:	ldr	x17, [x16, #4072]
  4043f0:	add	x16, x16, #0xfe8
  4043f4:	br	x17

00000000004043f8 <dns_service_join@plt>:
  4043f8:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  4043fc:	ldr	x17, [x16, #4080]
  404400:	add	x16, x16, #0xff0
  404404:	br	x17

0000000000404408 <ascii_strlower_n@plt>:
  404408:	adrp	x16, 43f000 <ascii_strlower_n@plt+0x3abf8>
  40440c:	ldr	x17, [x16, #4088]
  404410:	add	x16, x16, #0xff8
  404414:	br	x17

Disassembly of section .text:

0000000000404418 <.text>:
  404418:	mov	x29, #0x0                   	// #0
  40441c:	mov	x30, #0x0                   	// #0
  404420:	mov	x5, x0
  404424:	ldr	x1, [sp]
  404428:	add	x2, sp, #0x8
  40442c:	mov	x6, sp
  404430:	movz	x0, #0x0, lsl #48
  404434:	movk	x0, #0x0, lsl #32
  404438:	movk	x0, #0x40, lsl #16
  40443c:	movk	x0, #0x4f8c
  404440:	movz	x3, #0x0, lsl #48
  404444:	movk	x3, #0x0, lsl #32
  404448:	movk	x3, #0x41, lsl #16
  40444c:	movk	x3, #0xdd88
  404450:	movz	x4, #0x0, lsl #48
  404454:	movk	x4, #0x0, lsl #32
  404458:	movk	x4, #0x41, lsl #16
  40445c:	movk	x4, #0xde08
  404460:	bl	403958 <__libc_start_main@plt>
  404464:	bl	403968 <abort@plt>
  404468:	adrp	x0, 43f000 <ascii_strlower_n@plt+0x3abf8>
  40446c:	ldr	x0, [x0, #2648]
  404470:	cbz	x0, 404478 <ascii_strlower_n@plt+0x70>
  404474:	b	403978 <__gmon_start__@plt>
  404478:	ret
  40447c:	udf	#0
  404480:	adrp	x0, 440000 <ascii_strlower_n@plt+0x3bbf8>
  404484:	add	x0, x0, #0x0
  404488:	adrp	x1, 440000 <ascii_strlower_n@plt+0x3bbf8>
  40448c:	add	x1, x1, #0x0
  404490:	cmp	x1, x0
  404494:	b.eq	4044ac <ascii_strlower_n@plt+0xa4>  // b.none
  404498:	adrp	x1, 41d000 <ascii_strlower_n@plt+0x18bf8>
  40449c:	ldr	x1, [x1, #3616]
  4044a0:	cbz	x1, 4044ac <ascii_strlower_n@plt+0xa4>
  4044a4:	mov	x16, x1
  4044a8:	br	x16
  4044ac:	ret
  4044b0:	adrp	x0, 440000 <ascii_strlower_n@plt+0x3bbf8>
  4044b4:	add	x0, x0, #0x0
  4044b8:	adrp	x1, 440000 <ascii_strlower_n@plt+0x3bbf8>
  4044bc:	add	x1, x1, #0x0
  4044c0:	sub	x1, x1, x0
  4044c4:	lsr	x2, x1, #63
  4044c8:	add	x1, x2, x1, asr #3
  4044cc:	cmp	xzr, x1, asr #1
  4044d0:	asr	x1, x1, #1
  4044d4:	b.eq	4044ec <ascii_strlower_n@plt+0xe4>  // b.none
  4044d8:	adrp	x2, 41d000 <ascii_strlower_n@plt+0x18bf8>
  4044dc:	ldr	x2, [x2, #3624]
  4044e0:	cbz	x2, 4044ec <ascii_strlower_n@plt+0xe4>
  4044e4:	mov	x16, x2
  4044e8:	br	x16
  4044ec:	ret
  4044f0:	stp	x29, x30, [sp, #-32]!
  4044f4:	mov	x29, sp
  4044f8:	str	x19, [sp, #16]
  4044fc:	adrp	x19, 440000 <ascii_strlower_n@plt+0x3bbf8>
  404500:	ldrb	w0, [x19, #8]
  404504:	cbnz	w0, 404514 <ascii_strlower_n@plt+0x10c>
  404508:	bl	404480 <ascii_strlower_n@plt+0x78>
  40450c:	mov	w0, #0x1                   	// #1
  404510:	strb	w0, [x19, #8]
  404514:	ldr	x19, [sp, #16]
  404518:	ldp	x29, x30, [sp], #32
  40451c:	ret
  404520:	b	4044b0 <ascii_strlower_n@plt+0xa8>
  404524:	sub	sp, sp, #0x90
  404528:	stp	x29, x30, [sp, #48]
  40452c:	stp	x28, x27, [sp, #64]
  404530:	stp	x26, x25, [sp, #80]
  404534:	stp	x24, x23, [sp, #96]
  404538:	stp	x22, x21, [sp, #112]
  40453c:	stp	x20, x19, [sp, #128]
  404540:	add	x29, sp, #0x30
  404544:	tbnz	w0, #31, 404cdc <ascii_strlower_n@plt+0x8d4>
  404548:	mov	x19, x1
  40454c:	cbz	x1, 404d00 <ascii_strlower_n@plt+0x8f8>
  404550:	mov	w20, w0
  404554:	adrp	x0, 41e000 <ascii_strlower_n@plt+0x19bf8>
  404558:	add	x0, x0, #0x11a
  40455c:	bl	403988 <getenv@plt>
  404560:	cmp	x0, #0x0
  404564:	adrp	x0, 41e000 <ascii_strlower_n@plt+0x19bf8>
  404568:	cset	w8, ne  // ne = any
  40456c:	add	x0, x0, #0x127
  404570:	lsl	w21, w8, #1
  404574:	bl	403988 <getenv@plt>
  404578:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  40457c:	adrp	x3, 41d000 <ascii_strlower_n@plt+0x18bf8>
  404580:	cmp	x0, #0x0
  404584:	adrp	x28, 440000 <ascii_strlower_n@plt+0x3bbf8>
  404588:	mov	w8, #0xffffffff            	// #-1
  40458c:	add	x2, x2, #0x132
  404590:	add	x3, x3, #0xfc0
  404594:	mov	w0, w20
  404598:	mov	x1, x19
  40459c:	mov	x4, xzr
  4045a0:	csinc	w27, w21, wzr, eq  // eq = none
  4045a4:	str	w8, [x28, #20]
  4045a8:	bl	403998 <getopt_long@plt>
  4045ac:	tbnz	w0, #31, 4046a8 <ascii_strlower_n@plt+0x2a0>
  4045b0:	adrp	x23, 41d000 <ascii_strlower_n@plt+0x18bf8>
  4045b4:	adrp	x21, 41e000 <ascii_strlower_n@plt+0x19bf8>
  4045b8:	adrp	x22, 41d000 <ascii_strlower_n@plt+0x18bf8>
  4045bc:	adrp	x25, 41e000 <ascii_strlower_n@plt+0x19bf8>
  4045c0:	mov	w26, w0
  4045c4:	add	x23, x23, #0xe30
  4045c8:	mov	w11, #0xa                   	// #10
  4045cc:	add	x21, x21, #0x132
  4045d0:	add	x22, x22, #0xfc0
  4045d4:	mov	w12, #0xb                   	// #11
  4045d8:	adrp	x13, 440000 <ascii_strlower_n@plt+0x3bbf8>
  4045dc:	mov	w14, #0x1                   	// #1
  4045e0:	add	x25, x25, #0x15c
  4045e4:	sub	w8, w26, #0x3f
  4045e8:	cmp	w8, #0xc4
  4045ec:	b.hi	404cb8 <ascii_strlower_n@plt+0x8b0>  // b.pmore
  4045f0:	adr	x9, 404604 <ascii_strlower_n@plt+0x1fc>
  4045f4:	ldrh	w10, [x23, x8, lsl #1]
  4045f8:	add	x9, x9, x10, lsl #2
  4045fc:	mov	w24, #0x2                   	// #2
  404600:	br	x9
  404604:	str	w11, [x28, #20]
  404608:	b	404620 <ascii_strlower_n@plt+0x218>
  40460c:	mov	w24, #0x1                   	// #1
  404610:	b	40466c <ascii_strlower_n@plt+0x264>
  404614:	str	w12, [x28, #20]
  404618:	b	404620 <ascii_strlower_n@plt+0x218>
  40461c:	strb	w14, [x13, #16]
  404620:	mov	w24, w27
  404624:	b	40466c <ascii_strlower_n@plt+0x264>
  404628:	mov	w0, wzr
  40462c:	mov	x26, x13
  404630:	bl	4039a8 <log_get_max_level_realm@plt>
  404634:	cmp	w0, #0x7
  404638:	b.lt	404664 <ascii_strlower_n@plt+0x25c>  // b.tstop
  40463c:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  404640:	adrp	x4, 41e000 <ascii_strlower_n@plt+0x19bf8>
  404644:	mov	w0, #0x7                   	// #7
  404648:	mov	w3, #0xac                  	// #172
  40464c:	mov	w6, #0x6d                  	// #109
  404650:	mov	w1, wzr
  404654:	add	x2, x2, #0xcd
  404658:	add	x4, x4, #0x146
  40465c:	mov	x5, x25
  404660:	bl	4039b8 <log_internal_realm@plt>
  404664:	mov	w24, w27
  404668:	mov	x13, x26
  40466c:	mov	w0, w20
  404670:	mov	x1, x19
  404674:	mov	x2, x21
  404678:	mov	x3, x22
  40467c:	mov	x4, xzr
  404680:	mov	x26, x13
  404684:	bl	403998 <getopt_long@plt>
  404688:	mov	w14, #0x1                   	// #1
  40468c:	mov	x13, x26
  404690:	mov	w12, #0xb                   	// #11
  404694:	mov	w11, #0xa                   	// #10
  404698:	mov	w26, w0
  40469c:	mov	w27, w24
  4046a0:	tbz	w0, #31, 4045e4 <ascii_strlower_n@plt+0x1dc>
  4046a4:	b	4046ac <ascii_strlower_n@plt+0x2a4>
  4046a8:	mov	w24, w27
  4046ac:	ldr	w8, [x28, #20]
  4046b0:	cmn	w8, #0x1
  4046b4:	b.eq	4047ac <ascii_strlower_n@plt+0x3a4>  // b.none
  4046b8:	adrp	x21, 440000 <ascii_strlower_n@plt+0x3bbf8>
  4046bc:	ldrsw	x8, [x21, #128]
  4046c0:	add	w9, w8, #0x1
  4046c4:	cmp	w9, w20
  4046c8:	b.ne	4047e8 <ascii_strlower_n@plt+0x3e0>  // b.any
  4046cc:	ldr	x0, [x19, x8, lsl #3]
  4046d0:	bl	404d5c <ascii_strlower_n@plt+0x954>
  4046d4:	cmp	w0, #0x1
  4046d8:	b.lt	4049f0 <ascii_strlower_n@plt+0x5e8>  // b.tstop
  4046dc:	ldr	w8, [x21, #128]
  4046e0:	ldr	w9, [x28, #20]
  4046e4:	add	w8, w8, #0x1
  4046e8:	cmp	w9, #0xa
  4046ec:	str	w8, [x21, #128]
  4046f0:	b.ne	404c44 <ascii_strlower_n@plt+0x83c>  // b.any
  4046f4:	adrp	x22, 440000 <ascii_strlower_n@plt+0x3bbf8>
  4046f8:	ldr	x0, [x22, #136]
  4046fc:	add	x3, sp, #0x18
  404700:	mov	w1, #0x100000              	// #1048576
  404704:	mov	w2, wzr
  404708:	str	xzr, [sp, #24]
  40470c:	bl	4039c8 <read_line_full@plt>
  404710:	mov	w25, w0
  404714:	tbnz	w0, #31, 404b28 <ascii_strlower_n@plt+0x720>
  404718:	mov	x27, #0x1                   	// #1
  40471c:	adrp	x20, 41e000 <ascii_strlower_n@plt+0x19bf8>
  404720:	adrp	x21, 41e000 <ascii_strlower_n@plt+0x19bf8>
  404724:	adrp	x26, 440000 <ascii_strlower_n@plt+0x3bbf8>
  404728:	adrp	x28, 440000 <ascii_strlower_n@plt+0x3bbf8>
  40472c:	movk	x27, #0x8, lsl #32
  404730:	mov	w19, wzr
  404734:	add	x20, x20, #0x287
  404738:	add	x21, x21, #0x292
  40473c:	add	x26, x26, #0x20
  404740:	add	x28, x28, #0x18
  404744:	mov	w23, #0x1                   	// #1
  404748:	movk	x27, #0x800, lsl #48
  40474c:	b	404854 <ascii_strlower_n@plt+0x44c>
  404750:	mov	w0, wzr
  404754:	bl	4039a8 <log_get_max_level_realm@plt>
  404758:	cmp	w0, #0x3
  40475c:	b.lt	404c90 <ascii_strlower_n@plt+0x888>  // b.tstop
  404760:	mov	w6, w26
  404764:	ldp	x20, x19, [sp, #128]
  404768:	ldp	x22, x21, [sp, #112]
  40476c:	ldp	x24, x23, [sp, #96]
  404770:	ldp	x26, x25, [sp, #80]
  404774:	ldp	x28, x27, [sp, #64]
  404778:	ldp	x29, x30, [sp, #48]
  40477c:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  404780:	adrp	x4, 41e000 <ascii_strlower_n@plt+0x19bf8>
  404784:	adrp	x5, 41e000 <ascii_strlower_n@plt+0x19bf8>
  404788:	mov	w1, #0x16                  	// #22
  40478c:	add	x2, x2, #0xcd
  404790:	add	x4, x4, #0x146
  404794:	add	x5, x5, #0x170
  404798:	mov	w0, #0x3                   	// #3
  40479c:	movk	w1, #0x4000, lsl #16
  4047a0:	mov	w3, #0xbb                  	// #187
  4047a4:	add	sp, sp, #0x90
  4047a8:	b	4039b8 <log_internal_realm@plt>
  4047ac:	mov	w0, wzr
  4047b0:	bl	4039a8 <log_get_max_level_realm@plt>
  4047b4:	cmp	w0, #0x3
  4047b8:	b.lt	404c90 <ascii_strlower_n@plt+0x888>  // b.tstop
  4047bc:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  4047c0:	adrp	x4, 41e000 <ascii_strlower_n@plt+0x19bf8>
  4047c4:	adrp	x5, 41e000 <ascii_strlower_n@plt+0x19bf8>
  4047c8:	mov	w1, #0x16                  	// #22
  4047cc:	add	x2, x2, #0xcd
  4047d0:	add	x4, x4, #0x146
  4047d4:	add	x5, x5, #0x216
  4047d8:	mov	w0, #0x3                   	// #3
  4047dc:	movk	w1, #0x4000, lsl #16
  4047e0:	mov	w3, #0xd1                  	// #209
  4047e4:	b	404b08 <ascii_strlower_n@plt+0x700>
  4047e8:	mov	w0, wzr
  4047ec:	bl	4039a8 <log_get_max_level_realm@plt>
  4047f0:	cmp	w0, #0x3
  4047f4:	b.lt	404c90 <ascii_strlower_n@plt+0x888>  // b.tstop
  4047f8:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  4047fc:	adrp	x4, 41e000 <ascii_strlower_n@plt+0x19bf8>
  404800:	adrp	x5, 41e000 <ascii_strlower_n@plt+0x19bf8>
  404804:	mov	w1, #0x16                  	// #22
  404808:	add	x2, x2, #0xcd
  40480c:	add	x4, x4, #0x146
  404810:	add	x5, x5, #0x244
  404814:	mov	w0, #0x3                   	// #3
  404818:	movk	w1, #0x4000, lsl #16
  40481c:	mov	w3, #0xd5                  	// #213
  404820:	b	404b08 <ascii_strlower_n@plt+0x700>
  404824:	mov	x0, x1
  404828:	bl	4039d8 <free@plt>
  40482c:	ldr	x0, [sp, #24]
  404830:	bl	4039d8 <free@plt>
  404834:	ldr	x0, [x22, #136]
  404838:	add	x3, sp, #0x18
  40483c:	mov	w1, #0x100000              	// #1048576
  404840:	mov	w2, wzr
  404844:	str	xzr, [sp, #24]
  404848:	bl	4039c8 <read_line_full@plt>
  40484c:	mov	w25, w0
  404850:	tbnz	w0, #31, 404b28 <ascii_strlower_n@plt+0x720>
  404854:	cbz	w25, 404bac <ascii_strlower_n@plt+0x7a4>
  404858:	ldr	x0, [sp, #24]
  40485c:	add	w19, w19, #0x1
  404860:	bl	4039e8 <strstrip@plt>
  404864:	ldrb	w8, [x0]
  404868:	mov	x25, x0
  40486c:	cmp	w8, #0x3b
  404870:	b.hi	404880 <ascii_strlower_n@plt+0x478>  // b.pmore
  404874:	lsl	x8, x23, x8
  404878:	tst	x8, x27
  40487c:	b.ne	40482c <ascii_strlower_n@plt+0x424>  // b.any
  404880:	mov	x0, x25
  404884:	mov	x1, x20
  404888:	bl	4039f8 <first_word@plt>
  40488c:	cbz	x0, 4048e8 <ascii_strlower_n@plt+0x4e0>
  404890:	stp	xzr, x0, [x29, #-16]
  404894:	sub	x0, x29, #0x8
  404898:	sub	x1, x29, #0x10
  40489c:	mov	x2, xzr
  4048a0:	mov	w3, wzr
  4048a4:	bl	403a08 <extract_first_word@plt>
  4048a8:	ldur	x1, [x29, #-16]
  4048ac:	cmp	w0, #0x1
  4048b0:	b.lt	404824 <ascii_strlower_n@plt+0x41c>  // b.tstop
  4048b4:	mov	x0, x28
  4048b8:	bl	403a18 <strv_push@plt>
  4048bc:	tbnz	w0, #31, 404964 <ascii_strlower_n@plt+0x55c>
  4048c0:	sub	x0, x29, #0x8
  4048c4:	sub	x1, x29, #0x10
  4048c8:	mov	x2, xzr
  4048cc:	mov	w3, wzr
  4048d0:	stur	xzr, [x29, #-16]
  4048d4:	bl	403a08 <extract_first_word@plt>
  4048d8:	ldur	x1, [x29, #-16]
  4048dc:	cmp	w0, #0x0
  4048e0:	b.gt	4048b4 <ascii_strlower_n@plt+0x4ac>
  4048e4:	b	404824 <ascii_strlower_n@plt+0x41c>
  4048e8:	mov	x0, x25
  4048ec:	mov	x1, x21
  4048f0:	bl	4039f8 <first_word@plt>
  4048f4:	cbnz	x0, 40490c <ascii_strlower_n@plt+0x504>
  4048f8:	adrp	x1, 41e000 <ascii_strlower_n@plt+0x19bf8>
  4048fc:	mov	x0, x25
  404900:	add	x1, x1, #0x299
  404904:	bl	4039f8 <first_word@plt>
  404908:	cbz	x0, 4049a4 <ascii_strlower_n@plt+0x59c>
  40490c:	stp	xzr, x0, [x29, #-16]
  404910:	sub	x0, x29, #0x8
  404914:	sub	x1, x29, #0x10
  404918:	mov	w3, #0x8                   	// #8
  40491c:	mov	x2, xzr
  404920:	bl	403a08 <extract_first_word@plt>
  404924:	ldur	x1, [x29, #-16]
  404928:	cmp	w0, #0x1
  40492c:	b.lt	404824 <ascii_strlower_n@plt+0x41c>  // b.tstop
  404930:	mov	x0, x26
  404934:	bl	403a18 <strv_push@plt>
  404938:	tbnz	w0, #31, 404980 <ascii_strlower_n@plt+0x578>
  40493c:	sub	x0, x29, #0x8
  404940:	sub	x1, x29, #0x10
  404944:	mov	w3, #0x8                   	// #8
  404948:	mov	x2, xzr
  40494c:	stur	xzr, [x29, #-16]
  404950:	bl	403a08 <extract_first_word@plt>
  404954:	ldur	x1, [x29, #-16]
  404958:	cmp	w0, #0x0
  40495c:	b.gt	404930 <ascii_strlower_n@plt+0x528>
  404960:	b	404824 <ascii_strlower_n@plt+0x41c>
  404964:	adrp	x1, 41e000 <ascii_strlower_n@plt+0x19bf8>
  404968:	adrp	x3, 41e000 <ascii_strlower_n@plt+0x19bf8>
  40496c:	mov	w2, #0x45                  	// #69
  404970:	mov	w0, wzr
  404974:	add	x1, x1, #0xcd
  404978:	add	x3, x3, #0x6ed
  40497c:	b	404998 <ascii_strlower_n@plt+0x590>
  404980:	adrp	x1, 41e000 <ascii_strlower_n@plt+0x19bf8>
  404984:	adrp	x3, 41e000 <ascii_strlower_n@plt+0x19bf8>
  404988:	mov	w2, #0x5c                  	// #92
  40498c:	mov	w0, wzr
  404990:	add	x1, x1, #0xcd
  404994:	add	x3, x3, #0x6fe
  404998:	bl	403a28 <log_oom_internal@plt>
  40499c:	ldur	x0, [x29, #-16]
  4049a0:	b	404828 <ascii_strlower_n@plt+0x420>
  4049a4:	bl	4039a8 <log_get_max_level_realm@plt>
  4049a8:	cmp	w0, #0x7
  4049ac:	b.lt	40482c <ascii_strlower_n@plt+0x424>  // b.tstop
  4049b0:	adrp	x8, 41e000 <ascii_strlower_n@plt+0x19bf8>
  4049b4:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  4049b8:	adrp	x5, 41e000 <ascii_strlower_n@plt+0x19bf8>
  4049bc:	adrp	x7, 41e000 <ascii_strlower_n@plt+0x19bf8>
  4049c0:	mov	w1, #0x7                   	// #7
  4049c4:	mov	w6, #0xfe                  	// #254
  4049c8:	add	x8, x8, #0x2a6
  4049cc:	mov	x0, xzr
  4049d0:	add	x2, x2, #0x2a0
  4049d4:	mov	w3, w19
  4049d8:	mov	w4, wzr
  4049dc:	add	x5, x5, #0xcd
  4049e0:	add	x7, x7, #0x146
  4049e4:	stp	x8, x25, [sp]
  4049e8:	bl	403a38 <log_syntax_internal@plt>
  4049ec:	b	40482c <ascii_strlower_n@plt+0x424>
  4049f0:	mov	w19, w0
  4049f4:	b	404c94 <ascii_strlower_n@plt+0x88c>
  4049f8:	mov	w0, wzr
  4049fc:	bl	4039a8 <log_get_max_level_realm@plt>
  404a00:	cmp	w0, #0x3
  404a04:	b.lt	404c90 <ascii_strlower_n@plt+0x888>  // b.tstop
  404a08:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  404a0c:	adrp	x4, 41e000 <ascii_strlower_n@plt+0x19bf8>
  404a10:	adrp	x5, 41e000 <ascii_strlower_n@plt+0x19bf8>
  404a14:	mov	w1, #0x16                  	// #22
  404a18:	add	x2, x2, #0xcd
  404a1c:	add	x4, x4, #0x146
  404a20:	add	x5, x5, #0x1d9
  404a24:	mov	w0, #0x3                   	// #3
  404a28:	movk	w1, #0x4000, lsl #16
  404a2c:	mov	w3, #0xc6                  	// #198
  404a30:	b	404b08 <ascii_strlower_n@plt+0x700>
  404a34:	adrp	x0, 41e000 <ascii_strlower_n@plt+0x19bf8>
  404a38:	adrp	x1, 41e000 <ascii_strlower_n@plt+0x19bf8>
  404a3c:	add	x0, x0, #0x326
  404a40:	add	x1, x1, #0x331
  404a44:	sub	x2, x29, #0x8
  404a48:	stur	xzr, [x29, #-8]
  404a4c:	bl	403a48 <terminal_urlify_man@plt>
  404a50:	tbnz	w0, #31, 404b68 <ascii_strlower_n@plt+0x760>
  404a54:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  404a58:	ldr	x1, [x8, #144]
  404a5c:	ldur	x2, [x29, #-8]
  404a60:	adrp	x0, 41e000 <ascii_strlower_n@plt+0x19bf8>
  404a64:	add	x0, x0, #0x343
  404a68:	bl	403a58 <printf@plt>
  404a6c:	mov	w19, wzr
  404a70:	b	404b88 <ascii_strlower_n@plt+0x780>
  404a74:	ldp	x20, x19, [sp, #128]
  404a78:	ldp	x22, x21, [sp, #112]
  404a7c:	ldp	x24, x23, [sp, #96]
  404a80:	ldp	x26, x25, [sp, #80]
  404a84:	ldp	x28, x27, [sp, #64]
  404a88:	ldp	x29, x30, [sp, #48]
  404a8c:	add	sp, sp, #0x90
  404a90:	b	403a68 <version@plt>
  404a94:	mov	w0, wzr
  404a98:	bl	4039a8 <log_get_max_level_realm@plt>
  404a9c:	cmp	w0, #0x3
  404aa0:	b.lt	404c90 <ascii_strlower_n@plt+0x888>  // b.tstop
  404aa4:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  404aa8:	adrp	x4, 41e000 <ascii_strlower_n@plt+0x19bf8>
  404aac:	adrp	x5, 41e000 <ascii_strlower_n@plt+0x19bf8>
  404ab0:	mov	w1, #0x16                  	// #22
  404ab4:	add	x2, x2, #0xcd
  404ab8:	add	x4, x4, #0x146
  404abc:	add	x5, x5, #0x18a
  404ac0:	mov	w0, #0x3                   	// #3
  404ac4:	movk	w1, #0x4000, lsl #16
  404ac8:	mov	w3, #0xc0                  	// #192
  404acc:	b	404b08 <ascii_strlower_n@plt+0x700>
  404ad0:	mov	w0, wzr
  404ad4:	bl	4039a8 <log_get_max_level_realm@plt>
  404ad8:	cmp	w0, #0x3
  404adc:	b.lt	404c90 <ascii_strlower_n@plt+0x888>  // b.tstop
  404ae0:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  404ae4:	adrp	x4, 41e000 <ascii_strlower_n@plt+0x19bf8>
  404ae8:	adrp	x5, 41e000 <ascii_strlower_n@plt+0x19bf8>
  404aec:	mov	w1, #0x16                  	// #22
  404af0:	add	x2, x2, #0xcd
  404af4:	add	x4, x4, #0x146
  404af8:	add	x5, x5, #0x1b1
  404afc:	mov	w0, #0x3                   	// #3
  404b00:	movk	w1, #0x4000, lsl #16
  404b04:	mov	w3, #0xc3                  	// #195
  404b08:	ldp	x20, x19, [sp, #128]
  404b0c:	ldp	x22, x21, [sp, #112]
  404b10:	ldp	x24, x23, [sp, #96]
  404b14:	ldp	x26, x25, [sp, #80]
  404b18:	ldp	x28, x27, [sp, #64]
  404b1c:	ldp	x29, x30, [sp, #48]
  404b20:	add	sp, sp, #0x90
  404b24:	b	4039b8 <log_internal_realm@plt>
  404b28:	mov	w0, wzr
  404b2c:	bl	4039a8 <log_get_max_level_realm@plt>
  404b30:	cmp	w0, #0x3
  404b34:	b.lt	404b94 <ascii_strlower_n@plt+0x78c>  // b.tstop
  404b38:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  404b3c:	adrp	x4, 41e000 <ascii_strlower_n@plt+0x19bf8>
  404b40:	adrp	x5, 41e000 <ascii_strlower_n@plt+0x19bf8>
  404b44:	add	x2, x2, #0xcd
  404b48:	add	x4, x4, #0x146
  404b4c:	add	x5, x5, #0x269
  404b50:	mov	w0, #0x3                   	// #3
  404b54:	mov	w3, #0xe6                  	// #230
  404b58:	mov	w1, w25
  404b5c:	bl	4039b8 <log_internal_realm@plt>
  404b60:	mov	w19, w0
  404b64:	b	404ba0 <ascii_strlower_n@plt+0x798>
  404b68:	adrp	x1, 41e000 <ascii_strlower_n@plt+0x19bf8>
  404b6c:	adrp	x3, 41e000 <ascii_strlower_n@plt+0x19bf8>
  404b70:	add	x1, x1, #0xcd
  404b74:	add	x3, x3, #0x333
  404b78:	mov	w2, #0x1a                  	// #26
  404b7c:	mov	w0, wzr
  404b80:	bl	403a28 <log_oom_internal@plt>
  404b84:	mov	w19, w0
  404b88:	ldur	x0, [x29, #-8]
  404b8c:	bl	4039d8 <free@plt>
  404b90:	b	404c94 <ascii_strlower_n@plt+0x88c>
  404b94:	mov	w8, wzr
  404b98:	neg	w9, w25
  404b9c:	sub	w19, w8, w9, uxtb
  404ba0:	ldr	x0, [sp, #24]
  404ba4:	bl	4039d8 <free@plt>
  404ba8:	b	404c94 <ascii_strlower_n@plt+0x88c>
  404bac:	ldr	x0, [sp, #24]
  404bb0:	bl	4039d8 <free@plt>
  404bb4:	cmp	w24, #0x1
  404bb8:	b.eq	404c00 <ascii_strlower_n@plt+0x7f8>  // b.none
  404bbc:	cmp	w24, #0x2
  404bc0:	b.ne	404c38 <ascii_strlower_n@plt+0x830>  // b.any
  404bc4:	adrp	x0, 440000 <ascii_strlower_n@plt+0x3bbf8>
  404bc8:	adrp	x1, 41e000 <ascii_strlower_n@plt+0x19bf8>
  404bcc:	add	x0, x0, #0x20
  404bd0:	add	x1, x1, #0x2c4
  404bd4:	bl	403a78 <strv_extend@plt>
  404bd8:	tbz	w0, #31, 404c38 <ascii_strlower_n@plt+0x830>
  404bdc:	adrp	x1, 41e000 <ascii_strlower_n@plt+0x19bf8>
  404be0:	adrp	x3, 41e000 <ascii_strlower_n@plt+0x19bf8>
  404be4:	add	x1, x1, #0xcd
  404be8:	add	x3, x3, #0x146
  404bec:	mov	w2, #0x108                 	// #264
  404bf0:	mov	w0, wzr
  404bf4:	bl	403a28 <log_oom_internal@plt>
  404bf8:	mov	w19, w0
  404bfc:	b	404c94 <ascii_strlower_n@plt+0x88c>
  404c00:	mov	w0, wzr
  404c04:	bl	4039a8 <log_get_max_level_realm@plt>
  404c08:	cmp	w0, #0x7
  404c0c:	b.lt	404c38 <ascii_strlower_n@plt+0x830>  // b.tstop
  404c10:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  404c14:	adrp	x4, 41e000 <ascii_strlower_n@plt+0x19bf8>
  404c18:	adrp	x5, 41e000 <ascii_strlower_n@plt+0x19bf8>
  404c1c:	add	x2, x2, #0xcd
  404c20:	add	x4, x4, #0x146
  404c24:	add	x5, x5, #0x2c7
  404c28:	mov	w0, #0x7                   	// #7
  404c2c:	mov	w3, #0x10b                 	// #267
  404c30:	mov	w1, wzr
  404c34:	bl	4039b8 <log_internal_realm@plt>
  404c38:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  404c3c:	ldr	x8, [x8, #24]
  404c40:	cbz	x8, 404c4c <ascii_strlower_n@plt+0x844>
  404c44:	mov	w19, #0x1                   	// #1
  404c48:	b	404c94 <ascii_strlower_n@plt+0x88c>
  404c4c:	mov	w0, wzr
  404c50:	bl	4039a8 <log_get_max_level_realm@plt>
  404c54:	cmp	w0, #0x3
  404c58:	b.lt	404c90 <ascii_strlower_n@plt+0x888>  // b.tstop
  404c5c:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  404c60:	adrp	x4, 41e000 <ascii_strlower_n@plt+0x19bf8>
  404c64:	adrp	x5, 41e000 <ascii_strlower_n@plt+0x19bf8>
  404c68:	mov	w1, #0x16                  	// #22
  404c6c:	add	x2, x2, #0xcd
  404c70:	add	x4, x4, #0x146
  404c74:	add	x5, x5, #0x2f8
  404c78:	mov	w0, #0x3                   	// #3
  404c7c:	movk	w1, #0x4000, lsl #16
  404c80:	mov	w3, #0x10f                 	// #271
  404c84:	bl	4039b8 <log_internal_realm@plt>
  404c88:	mov	w19, w0
  404c8c:	b	404c94 <ascii_strlower_n@plt+0x88c>
  404c90:	mov	w19, #0xffffffea            	// #-22
  404c94:	mov	w0, w19
  404c98:	ldp	x20, x19, [sp, #128]
  404c9c:	ldp	x22, x21, [sp, #112]
  404ca0:	ldp	x24, x23, [sp, #96]
  404ca4:	ldp	x26, x25, [sp, #80]
  404ca8:	ldp	x28, x27, [sp, #64]
  404cac:	ldp	x29, x30, [sp, #48]
  404cb0:	add	sp, sp, #0x90
  404cb4:	ret
  404cb8:	adrp	x1, 41e000 <ascii_strlower_n@plt+0x19bf8>
  404cbc:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  404cc0:	adrp	x4, 41e000 <ascii_strlower_n@plt+0x19bf8>
  404cc4:	add	x1, x1, #0x205
  404cc8:	add	x2, x2, #0xcd
  404ccc:	add	x4, x4, #0xed
  404cd0:	mov	w3, #0xcc                  	// #204
  404cd4:	mov	w0, wzr
  404cd8:	bl	403a88 <log_assert_failed_unreachable_realm@plt>
  404cdc:	adrp	x1, 41e000 <ascii_strlower_n@plt+0x19bf8>
  404ce0:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  404ce4:	adrp	x4, 41e000 <ascii_strlower_n@plt+0x19bf8>
  404ce8:	add	x1, x1, #0xc0
  404cec:	add	x2, x2, #0xcd
  404cf0:	add	x4, x4, #0xed
  404cf4:	mov	w3, #0x80                  	// #128
  404cf8:	mov	w0, wzr
  404cfc:	bl	403a98 <log_assert_failed_realm@plt>
  404d00:	adrp	x1, 41e000 <ascii_strlower_n@plt+0x19bf8>
  404d04:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  404d08:	adrp	x4, 41e000 <ascii_strlower_n@plt+0x19bf8>
  404d0c:	add	x1, x1, #0x115
  404d10:	add	x2, x2, #0xcd
  404d14:	add	x4, x4, #0xed
  404d18:	mov	w3, #0x81                  	// #129
  404d1c:	mov	w0, wzr
  404d20:	bl	403a98 <log_assert_failed_realm@plt>
  404d24:	ldr	x0, [x0]
  404d28:	b	4039d8 <free@plt>
  404d2c:	ldr	x0, [x0]
  404d30:	cbz	x0, 404d38 <ascii_strlower_n@plt+0x930>
  404d34:	b	403aa8 <strv_free@plt>
  404d38:	ret
  404d3c:	ldr	x0, [x0]
  404d40:	cbz	x0, 404d48 <ascii_strlower_n@plt+0x940>
  404d44:	b	403aa8 <strv_free@plt>
  404d48:	ret
  404d4c:	ldr	x0, [x0]
  404d50:	cbz	x0, 404d58 <ascii_strlower_n@plt+0x950>
  404d54:	b	403aa8 <strv_free@plt>
  404d58:	ret
  404d5c:	stp	x29, x30, [sp, #-48]!
  404d60:	str	x21, [sp, #16]
  404d64:	stp	x20, x19, [sp, #32]
  404d68:	mov	x29, sp
  404d6c:	cbz	x0, 404f6c <ascii_strlower_n@plt+0xb64>
  404d70:	mov	w1, #0x2e                  	// #46
  404d74:	mov	x19, x0
  404d78:	bl	403ab8 <strchr@plt>
  404d7c:	cbz	x0, 404e44 <ascii_strlower_n@plt+0xa3c>
  404d80:	mov	x20, x0
  404d84:	mov	w0, wzr
  404d88:	bl	4039a8 <log_get_max_level_realm@plt>
  404d8c:	cmp	w0, #0x7
  404d90:	b.lt	404dc0 <ascii_strlower_n@plt+0x9b8>  // b.tstop
  404d94:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  404d98:	adrp	x4, 41e000 <ascii_strlower_n@plt+0x19bf8>
  404d9c:	adrp	x5, 41e000 <ascii_strlower_n@plt+0x19bf8>
  404da0:	add	x6, x20, #0x1
  404da4:	add	x2, x2, #0x717
  404da8:	add	x4, x4, #0x750
  404dac:	add	x5, x5, #0x75e
  404db0:	mov	w0, #0x7                   	// #7
  404db4:	mov	w3, #0x59                  	// #89
  404db8:	mov	w1, wzr
  404dbc:	bl	4039b8 <log_internal_realm@plt>
  404dc0:	sub	x1, x20, x19
  404dc4:	mov	x0, x19
  404dc8:	bl	403ac8 <strndup@plt>
  404dcc:	mov	x19, x0
  404dd0:	cbz	x0, 404e54 <ascii_strlower_n@plt+0xa4c>
  404dd4:	add	x1, x29, #0x1c
  404dd8:	mov	x0, x19
  404ddc:	bl	403ad8 <parse_ifindex_or_ifname@plt>
  404de0:	tbnz	w0, #31, 404e78 <ascii_strlower_n@plt+0xa70>
  404de4:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  404de8:	ldr	w9, [x8, #48]
  404dec:	ldr	w8, [x29, #28]
  404df0:	cmp	w9, #0x1
  404df4:	b.lt	404ed4 <ascii_strlower_n@plt+0xacc>  // b.tstop
  404df8:	cmp	w9, w8
  404dfc:	b.eq	404ed4 <ascii_strlower_n@plt+0xacc>  // b.none
  404e00:	mov	w0, wzr
  404e04:	bl	4039a8 <log_get_max_level_realm@plt>
  404e08:	cmp	w0, #0x3
  404e0c:	b.lt	404f34 <ascii_strlower_n@plt+0xb2c>  // b.tstop
  404e10:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  404e14:	adrp	x4, 41e000 <ascii_strlower_n@plt+0x19bf8>
  404e18:	adrp	x5, 41e000 <ascii_strlower_n@plt+0x19bf8>
  404e1c:	mov	w1, #0x16                  	// #22
  404e20:	add	x2, x2, #0x717
  404e24:	add	x4, x4, #0x750
  404e28:	add	x5, x5, #0x7d1
  404e2c:	mov	w0, #0x3                   	// #3
  404e30:	movk	w1, #0x4000, lsl #16
  404e34:	mov	w3, #0x6c                  	// #108
  404e38:	bl	4039b8 <log_internal_realm@plt>
  404e3c:	mov	w20, w0
  404e40:	b	404f50 <ascii_strlower_n@plt+0xb48>
  404e44:	mov	x0, x19
  404e48:	bl	403ae8 <strdup@plt>
  404e4c:	mov	x19, x0
  404e50:	cbnz	x0, 404dd4 <ascii_strlower_n@plt+0x9cc>
  404e54:	adrp	x1, 41e000 <ascii_strlower_n@plt+0x19bf8>
  404e58:	adrp	x3, 41e000 <ascii_strlower_n@plt+0x19bf8>
  404e5c:	add	x1, x1, #0x717
  404e60:	add	x3, x3, #0x750
  404e64:	mov	w2, #0x5f                  	// #95
  404e68:	mov	w0, wzr
  404e6c:	bl	403a28 <log_oom_internal@plt>
  404e70:	mov	w20, w0
  404e74:	b	404f50 <ascii_strlower_n@plt+0xb48>
  404e78:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  404e7c:	ldrb	w21, [x8, #16]
  404e80:	mov	w20, w0
  404e84:	mov	w0, wzr
  404e88:	bl	4039a8 <log_get_max_level_realm@plt>
  404e8c:	cmn	w20, #0x13
  404e90:	b.ne	404ef8 <ascii_strlower_n@plt+0xaf0>  // b.any
  404e94:	cbz	w21, 404ef8 <ascii_strlower_n@plt+0xaf0>
  404e98:	cmp	w0, #0x7
  404e9c:	b.lt	404f3c <ascii_strlower_n@plt+0xb34>  // b.tstop
  404ea0:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  404ea4:	adrp	x4, 41e000 <ascii_strlower_n@plt+0x19bf8>
  404ea8:	adrp	x5, 41e000 <ascii_strlower_n@plt+0x19bf8>
  404eac:	add	x2, x2, #0x717
  404eb0:	add	x4, x4, #0x750
  404eb4:	add	x5, x5, #0x780
  404eb8:	mov	w0, #0x7                   	// #7
  404ebc:	mov	w3, #0x64                  	// #100
  404ec0:	mov	w1, wzr
  404ec4:	mov	x6, x19
  404ec8:	bl	4039b8 <log_internal_realm@plt>
  404ecc:	mov	w20, wzr
  404ed0:	b	404f50 <ascii_strlower_n@plt+0xb48>
  404ed4:	adrp	x20, 440000 <ascii_strlower_n@plt+0x3bbf8>
  404ed8:	add	x20, x20, #0x30
  404edc:	ldr	x0, [x20, #16]
  404ee0:	str	w8, [x20]
  404ee4:	bl	4039d8 <free@plt>
  404ee8:	str	x19, [x20, #16]
  404eec:	mov	w20, #0x1                   	// #1
  404ef0:	mov	x19, xzr
  404ef4:	b	404f50 <ascii_strlower_n@plt+0xb48>
  404ef8:	cmp	w0, #0x3
  404efc:	b.lt	404f44 <ascii_strlower_n@plt+0xb3c>  // b.tstop
  404f00:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  404f04:	adrp	x4, 41e000 <ascii_strlower_n@plt+0x19bf8>
  404f08:	adrp	x5, 41e000 <ascii_strlower_n@plt+0x19bf8>
  404f0c:	add	x2, x2, #0x717
  404f10:	add	x4, x4, #0x750
  404f14:	add	x5, x5, #0x7b6
  404f18:	mov	w0, #0x3                   	// #3
  404f1c:	mov	w3, #0x68                  	// #104
  404f20:	mov	w1, w20
  404f24:	mov	x6, x19
  404f28:	bl	4039b8 <log_internal_realm@plt>
  404f2c:	mov	w20, w0
  404f30:	b	404f50 <ascii_strlower_n@plt+0xb48>
  404f34:	mov	w20, #0xffffffea            	// #-22
  404f38:	b	404f50 <ascii_strlower_n@plt+0xb48>
  404f3c:	mov	w20, wzr
  404f40:	b	404f50 <ascii_strlower_n@plt+0xb48>
  404f44:	mov	w8, wzr
  404f48:	neg	w9, w20
  404f4c:	sub	w20, w8, w9, uxtb
  404f50:	mov	x0, x19
  404f54:	bl	4039d8 <free@plt>
  404f58:	mov	w0, w20
  404f5c:	ldp	x20, x19, [sp, #32]
  404f60:	ldr	x21, [sp, #16]
  404f64:	ldp	x29, x30, [sp], #48
  404f68:	ret
  404f6c:	adrp	x1, 41e000 <ascii_strlower_n@plt+0x19bf8>
  404f70:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  404f74:	adrp	x4, 41e000 <ascii_strlower_n@plt+0x19bf8>
  404f78:	add	x1, x1, #0x712
  404f7c:	add	x2, x2, #0x717
  404f80:	add	x4, x4, #0x730
  404f84:	mov	w3, #0x55                  	// #85
  404f88:	bl	403a98 <log_assert_failed_realm@plt>
  404f8c:	sub	sp, sp, #0x90
  404f90:	stp	x22, x21, [sp, #112]
  404f94:	adrp	x21, 41e000 <ascii_strlower_n@plt+0x19bf8>
  404f98:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  404f9c:	adrp	x9, 440000 <ascii_strlower_n@plt+0x3bbf8>
  404fa0:	add	x21, x21, #0x804
  404fa4:	stp	x20, x19, [sp, #128]
  404fa8:	mov	x19, x1
  404fac:	mov	w20, w0
  404fb0:	str	w0, [x8, #152]
  404fb4:	str	x1, [x9, #160]
  404fb8:	mov	w0, #0x6                   	// #6
  404fbc:	mov	x1, x21
  404fc0:	stp	x29, x30, [sp, #48]
  404fc4:	stp	x28, x27, [sp, #64]
  404fc8:	stp	x26, x25, [sp, #80]
  404fcc:	stp	x24, x23, [sp, #96]
  404fd0:	add	x29, sp, #0x30
  404fd4:	str	xzr, [sp, #8]
  404fd8:	bl	403af8 <setlocale@plt>
  404fdc:	mov	w0, #0x1                   	// #1
  404fe0:	bl	403b08 <log_show_color@plt>
  404fe4:	mov	w0, wzr
  404fe8:	bl	403b18 <log_parse_environment_realm@plt>
  404fec:	bl	403b28 <log_open@plt>
  404ff0:	adrp	x28, 440000 <ascii_strlower_n@plt+0x3bbf8>
  404ff4:	ldr	x22, [x28, #144]
  404ff8:	adrp	x1, 41e000 <ascii_strlower_n@plt+0x19bf8>
  404ffc:	add	x1, x1, #0x805
  405000:	mov	x0, x22
  405004:	bl	403b38 <strcmp@plt>
  405008:	cbz	w0, 405078 <ascii_strlower_n@plt+0xc70>
  40500c:	adrp	x1, 41e000 <ascii_strlower_n@plt+0x19bf8>
  405010:	add	x1, x1, #0x810
  405014:	mov	x0, x22
  405018:	bl	403b38 <strcmp@plt>
  40501c:	cbz	w0, 405094 <ascii_strlower_n@plt+0xc8c>
  405020:	tbnz	w20, #31, 4062a0 <ascii_strlower_n@plt+0x1e98>
  405024:	cbz	x19, 4062c4 <ascii_strlower_n@plt+0x1ebc>
  405028:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  40502c:	adrp	x3, 424000 <ascii_strlower_n@plt+0x1fbf8>
  405030:	add	x2, x2, #0x95d
  405034:	add	x3, x3, #0x8a0
  405038:	mov	w0, w20
  40503c:	mov	x1, x19
  405040:	mov	x4, xzr
  405044:	bl	403998 <getopt_long@plt>
  405048:	tbnz	w0, #31, 4053d8 <ascii_strlower_n@plt+0xfd0>
  40504c:	adrp	x23, 424000 <ascii_strlower_n@plt+0x1fbf8>
  405050:	adrp	x24, 41e000 <ascii_strlower_n@plt+0x19bf8>
  405054:	adrp	x25, 424000 <ascii_strlower_n@plt+0x1fbf8>
  405058:	adrp	x26, 424000 <ascii_strlower_n@plt+0x1fbf8>
  40505c:	add	x23, x23, #0x29a
  405060:	adrp	x21, 440000 <ascii_strlower_n@plt+0x3bbf8>
  405064:	adrp	x27, 440000 <ascii_strlower_n@plt+0x3bbf8>
  405068:	add	x24, x24, #0x95d
  40506c:	add	x25, x25, #0x8a0
  405070:	add	x26, x26, #0x218
  405074:	b	4050f8 <ascii_strlower_n@plt+0xcf0>
  405078:	mov	w0, w20
  40507c:	mov	x1, x19
  405080:	bl	404524 <ascii_strlower_n@plt+0x11c>
  405084:	mov	w22, w0
  405088:	cmp	w22, #0x1
  40508c:	b.ge	405b84 <ascii_strlower_n@plt+0x177c>  // b.tcont
  405090:	b	405c28 <ascii_strlower_n@plt+0x1820>
  405094:	tbnz	w20, #31, 406354 <ascii_strlower_n@plt+0x1f4c>
  405098:	cbz	x19, 406378 <ascii_strlower_n@plt+0x1f70>
  40509c:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  4050a0:	adrp	x3, 424000 <ascii_strlower_n@plt+0x1fbf8>
  4050a4:	add	x2, x2, #0x95d
  4050a8:	add	x3, x3, #0x4c0
  4050ac:	mov	w0, w20
  4050b0:	mov	x1, x19
  4050b4:	mov	x4, xzr
  4050b8:	bl	403998 <getopt_long@plt>
  4050bc:	tbnz	w0, #31, 40597c <ascii_strlower_n@plt+0x1574>
  4050c0:	adrp	x23, 424000 <ascii_strlower_n@plt+0x1fbf8>
  4050c4:	add	x23, x23, #0x2aa
  4050c8:	b	4054c8 <ascii_strlower_n@plt+0x10c0>
  4050cc:	adrp	x9, 440000 <ascii_strlower_n@plt+0x3bbf8>
  4050d0:	ldr	w8, [x9, #60]
  4050d4:	orr	w8, w8, #0x1
  4050d8:	str	w8, [x9, #60]
  4050dc:	mov	w0, w20
  4050e0:	mov	x1, x19
  4050e4:	mov	x2, x24
  4050e8:	mov	x3, x25
  4050ec:	mov	x4, xzr
  4050f0:	bl	403998 <getopt_long@plt>
  4050f4:	tbnz	w0, #31, 4053d8 <ascii_strlower_n@plt+0xfd0>
  4050f8:	sub	w8, w0, #0x34
  4050fc:	cmp	w8, #0x40
  405100:	b.ls	405144 <ascii_strlower_n@plt+0xd3c>  // b.plast
  405104:	sub	w8, w0, #0x100
  405108:	cmp	w8, #0x7
  40510c:	b.hi	40627c <ascii_strlower_n@plt+0x1e74>  // b.pmore
  405110:	adr	x9, 4050cc <ascii_strlower_n@plt+0xcc4>
  405114:	ldrh	w10, [x23, x8, lsl #1]
  405118:	add	x9, x9, x10, lsl #2
  40511c:	br	x9
  405120:	ldr	x0, [x21, #168]
  405124:	bl	403b48 <parse_boolean@plt>
  405128:	mov	w22, w0
  40512c:	tbnz	w0, #31, 405d4c <ascii_strlower_n@plt+0x1944>
  405130:	cmp	w22, #0x0
  405134:	cset	w8, ne  // ne = any
  405138:	adrp	x9, 440000 <ascii_strlower_n@plt+0x3bbf8>
  40513c:	strb	w8, [x9]
  405140:	b	4050dc <ascii_strlower_n@plt+0xcd4>
  405144:	adr	x9, 405158 <ascii_strlower_n@plt+0xd50>
  405148:	ldrh	w10, [x26, x8, lsl #1]
  40514c:	add	x9, x9, x10, lsl #2
  405150:	mov	w22, #0xffffffea            	// #-22
  405154:	br	x9
  405158:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  40515c:	mov	w9, #0x2                   	// #2
  405160:	b	4052b0 <ascii_strlower_n@plt+0xea8>
  405164:	ldr	x0, [x21, #168]
  405168:	bl	403b48 <parse_boolean@plt>
  40516c:	mov	w22, w0
  405170:	tbnz	w0, #31, 405db4 <ascii_strlower_n@plt+0x19ac>
  405174:	ldr	x8, [x27, #80]
  405178:	orr	x9, x8, #0x40
  40517c:	and	x8, x8, #0xffffffffffffffbf
  405180:	b	40525c <ascii_strlower_n@plt+0xe54>
  405184:	ldr	x0, [x21, #168]
  405188:	bl	403b48 <parse_boolean@plt>
  40518c:	mov	w22, w0
  405190:	tbnz	w0, #31, 405de8 <ascii_strlower_n@plt+0x19e0>
  405194:	ldr	x8, [x27, #80]
  405198:	orr	x9, x8, #0x20
  40519c:	and	x8, x8, #0xffffffffffffffdf
  4051a0:	b	40525c <ascii_strlower_n@plt+0xe54>
  4051a4:	ldr	x0, [x21, #168]
  4051a8:	bl	403b48 <parse_boolean@plt>
  4051ac:	mov	w22, w0
  4051b0:	tbnz	w0, #31, 405d80 <ascii_strlower_n@plt+0x1978>
  4051b4:	ldr	x8, [x27, #80]
  4051b8:	orr	x9, x8, #0x80
  4051bc:	and	x8, x8, #0xffffffffffffff7f
  4051c0:	b	40525c <ascii_strlower_n@plt+0xe54>
  4051c4:	ldr	x22, [x21, #168]
  4051c8:	adrp	x1, 41e000 <ascii_strlower_n@plt+0x19bf8>
  4051cc:	add	x1, x1, #0x80
  4051d0:	mov	x0, x22
  4051d4:	bl	403b38 <strcmp@plt>
  4051d8:	cbz	w0, 405cf0 <ascii_strlower_n@plt+0x18e8>
  4051dc:	mov	x0, x22
  4051e0:	bl	41d964 <ascii_strlower_n@plt+0x1955c>
  4051e4:	mov	w22, w0
  4051e8:	tbnz	w0, #31, 405e88 <ascii_strlower_n@plt+0x1a80>
  4051ec:	cmp	w22, #0x10, lsl #12
  4051f0:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  4051f4:	strh	w22, [x8, #44]
  4051f8:	b.cc	4050dc <ascii_strlower_n@plt+0xcd4>  // b.lo, b.ul, b.last
  4051fc:	b	40639c <ascii_strlower_n@plt+0x1f94>
  405200:	bl	403b58 <on_tty@plt>
  405204:	tbnz	w0, #0, 405cfc <ascii_strlower_n@plt+0x18f4>
  405208:	ldr	x22, [x21, #168]
  40520c:	cbz	x22, 405378 <ascii_strlower_n@plt+0xf70>
  405210:	adrp	x1, 41e000 <ascii_strlower_n@plt+0x19bf8>
  405214:	mov	x0, x22
  405218:	add	x1, x1, #0xaa7
  40521c:	bl	403b38 <strcmp@plt>
  405220:	cbz	w0, 405378 <ascii_strlower_n@plt+0xf70>
  405224:	adrp	x1, 41e000 <ascii_strlower_n@plt+0x19bf8>
  405228:	mov	x0, x22
  40522c:	add	x1, x1, #0xaaf
  405230:	bl	403b38 <strcmp@plt>
  405234:	cbnz	w0, 406114 <ascii_strlower_n@plt+0x1d0c>
  405238:	mov	w8, #0x2                   	// #2
  40523c:	b	40537c <ascii_strlower_n@plt+0xf74>
  405240:	ldr	x0, [x21, #168]
  405244:	bl	403b48 <parse_boolean@plt>
  405248:	mov	w22, w0
  40524c:	tbnz	w0, #31, 405e1c <ascii_strlower_n@plt+0x1a14>
  405250:	ldr	x8, [x27, #80]
  405254:	orr	x9, x8, #0x100
  405258:	and	x8, x8, #0xfffffffffffffeff
  40525c:	cmp	w22, #0x0
  405260:	csel	x8, x9, x8, eq  // eq = none
  405264:	str	x8, [x27, #80]
  405268:	b	4050dc <ascii_strlower_n@plt+0xcd4>
  40526c:	ldr	x22, [x21, #168]
  405270:	adrp	x1, 41e000 <ascii_strlower_n@plt+0x19bf8>
  405274:	add	x1, x1, #0x80
  405278:	mov	x0, x22
  40527c:	bl	403b38 <strcmp@plt>
  405280:	cbz	w0, 405cb8 <ascii_strlower_n@plt+0x18b0>
  405284:	mov	x0, x22
  405288:	bl	41d520 <ascii_strlower_n@plt+0x19118>
  40528c:	mov	w22, w0
  405290:	tbnz	w0, #31, 405e50 <ascii_strlower_n@plt+0x1a48>
  405294:	cmp	w22, #0x10, lsl #12
  405298:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  40529c:	strh	w22, [x8, #40]
  4052a0:	b.cc	4050dc <ascii_strlower_n@plt+0xcd4>  // b.lo, b.ul, b.last
  4052a4:	b	40630c <ascii_strlower_n@plt+0x1f04>
  4052a8:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  4052ac:	mov	w9, #0xa                   	// #10
  4052b0:	str	w9, [x8, #52]
  4052b4:	b	4050dc <ascii_strlower_n@plt+0xcd4>
  4052b8:	ldr	x0, [x21, #168]
  4052bc:	bl	404d5c <ascii_strlower_n@plt+0x954>
  4052c0:	tbz	w0, #31, 4050dc <ascii_strlower_n@plt+0xcd4>
  4052c4:	b	405c24 <ascii_strlower_n@plt+0x181c>
  4052c8:	ldr	x22, [x21, #168]
  4052cc:	adrp	x1, 41e000 <ascii_strlower_n@plt+0x19bf8>
  4052d0:	add	x1, x1, #0x80
  4052d4:	mov	x0, x22
  4052d8:	bl	403b38 <strcmp@plt>
  4052dc:	cbz	w0, 405cc4 <ascii_strlower_n@plt+0x18bc>
  4052e0:	adrp	x1, 41e000 <ascii_strlower_n@plt+0x19bf8>
  4052e4:	mov	x0, x22
  4052e8:	add	x1, x1, #0xa0c
  4052ec:	bl	403b38 <strcmp@plt>
  4052f0:	cbz	w0, 405390 <ascii_strlower_n@plt+0xf88>
  4052f4:	adrp	x1, 41e000 <ascii_strlower_n@plt+0x19bf8>
  4052f8:	mov	x0, x22
  4052fc:	add	x1, x1, #0xa10
  405300:	bl	403b38 <strcmp@plt>
  405304:	cbz	w0, 40539c <ascii_strlower_n@plt+0xf94>
  405308:	adrp	x1, 41e000 <ascii_strlower_n@plt+0x19bf8>
  40530c:	mov	x0, x22
  405310:	add	x1, x1, #0xa16
  405314:	bl	403b38 <strcmp@plt>
  405318:	cbz	w0, 4053a8 <ascii_strlower_n@plt+0xfa0>
  40531c:	adrp	x1, 41e000 <ascii_strlower_n@plt+0x19bf8>
  405320:	mov	x0, x22
  405324:	add	x1, x1, #0xa21
  405328:	bl	403b38 <strcmp@plt>
  40532c:	cbz	w0, 4053b4 <ascii_strlower_n@plt+0xfac>
  405330:	adrp	x1, 41e000 <ascii_strlower_n@plt+0x19bf8>
  405334:	mov	x0, x22
  405338:	add	x1, x1, #0xa2c
  40533c:	bl	403b38 <strcmp@plt>
  405340:	cbz	w0, 4053c0 <ascii_strlower_n@plt+0xfb8>
  405344:	adrp	x1, 41e000 <ascii_strlower_n@plt+0x19bf8>
  405348:	mov	x0, x22
  40534c:	add	x1, x1, #0xa31
  405350:	bl	403b38 <strcmp@plt>
  405354:	cbz	w0, 4053cc <ascii_strlower_n@plt+0xfc4>
  405358:	adrp	x1, 41e000 <ascii_strlower_n@plt+0x19bf8>
  40535c:	mov	x0, x22
  405360:	add	x1, x1, #0xa3b
  405364:	bl	403b38 <strcmp@plt>
  405368:	cbnz	w0, 4061c4 <ascii_strlower_n@plt+0x1dbc>
  40536c:	ldr	x8, [x27, #80]
  405370:	orr	x8, x8, #0x10
  405374:	b	405264 <ascii_strlower_n@plt+0xe5c>
  405378:	mov	w8, #0x1                   	// #1
  40537c:	adrp	x9, 440000 <ascii_strlower_n@plt+0x3bbf8>
  405380:	str	w8, [x9, #56]
  405384:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  405388:	strb	wzr, [x8]
  40538c:	b	4050dc <ascii_strlower_n@plt+0xcd4>
  405390:	ldr	x8, [x27, #80]
  405394:	orr	x8, x8, #0x1
  405398:	b	405264 <ascii_strlower_n@plt+0xe5c>
  40539c:	ldr	x8, [x27, #80]
  4053a0:	orr	x8, x8, #0x6
  4053a4:	b	405264 <ascii_strlower_n@plt+0xe5c>
  4053a8:	ldr	x8, [x27, #80]
  4053ac:	orr	x8, x8, #0x2
  4053b0:	b	405264 <ascii_strlower_n@plt+0xe5c>
  4053b4:	ldr	x8, [x27, #80]
  4053b8:	orr	x8, x8, #0x4
  4053bc:	b	405264 <ascii_strlower_n@plt+0xe5c>
  4053c0:	ldr	x8, [x27, #80]
  4053c4:	orr	x8, x8, #0x18
  4053c8:	b	405264 <ascii_strlower_n@plt+0xe5c>
  4053cc:	ldr	x8, [x27, #80]
  4053d0:	orr	x8, x8, #0x8
  4053d4:	b	405264 <ascii_strlower_n@plt+0xe5c>
  4053d8:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  4053dc:	add	x8, x8, #0x28
  4053e0:	ldrh	w9, [x8]
  4053e4:	ldrh	w8, [x8, #4]
  4053e8:	cbnz	w9, 40543c <ascii_strlower_n@plt+0x1034>
  4053ec:	cbz	w8, 40543c <ascii_strlower_n@plt+0x1034>
  4053f0:	mov	w0, wzr
  4053f4:	bl	4039a8 <log_get_max_level_realm@plt>
  4053f8:	cmp	w0, #0x3
  4053fc:	b.lt	406250 <ascii_strlower_n@plt+0x1e48>  // b.tstop
  405400:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  405404:	adrp	x4, 41f000 <ascii_strlower_n@plt+0x1abf8>
  405408:	adrp	x5, 41e000 <ascii_strlower_n@plt+0x19bf8>
  40540c:	mov	w1, #0x16                  	// #22
  405410:	add	x2, x2, #0x717
  405414:	add	x4, x4, #0x5c1
  405418:	add	x5, x5, #0xb70
  40541c:	mov	w0, #0x3                   	// #3
  405420:	movk	w1, #0x4000, lsl #16
  405424:	mov	w3, #0xc0b                 	// #3083
  405428:	bl	4039b8 <log_internal_realm@plt>
  40542c:	mov	w22, w0
  405430:	cmp	w22, #0x1
  405434:	b.ge	405b84 <ascii_strlower_n@plt+0x177c>  // b.tcont
  405438:	b	405c28 <ascii_strlower_n@plt+0x1820>
  40543c:	cbz	w9, 405468 <ascii_strlower_n@plt+0x1060>
  405440:	cbnz	w8, 405468 <ascii_strlower_n@plt+0x1060>
  405444:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  405448:	mov	w9, #0x1                   	// #1
  40544c:	strh	w9, [x8, #44]
  405450:	b	405b84 <ascii_strlower_n@plt+0x177c>
  405454:	bl	406890 <ascii_strlower_n@plt+0x2488>
  405458:	mov	w22, w0
  40545c:	cmp	w22, #0x1
  405460:	b.ge	405b84 <ascii_strlower_n@plt+0x177c>  // b.tcont
  405464:	b	405c28 <ascii_strlower_n@plt+0x1820>
  405468:	cbnz	w9, 405b84 <ascii_strlower_n@plt+0x177c>
  40546c:	cbz	w8, 405b84 <ascii_strlower_n@plt+0x177c>
  405470:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  405474:	mov	w9, #0x1                   	// #1
  405478:	strh	w9, [x8, #40]
  40547c:	b	405b84 <ascii_strlower_n@plt+0x177c>
  405480:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  405484:	ldr	x1, [x8, #168]
  405488:	adrp	x0, 440000 <ascii_strlower_n@plt+0x3bbf8>
  40548c:	add	x0, x0, #0x18
  405490:	bl	403a78 <strv_extend@plt>
  405494:	tbnz	w0, #31, 406070 <ascii_strlower_n@plt+0x1c68>
  405498:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  40549c:	mov	w9, #0xa                   	// #10
  4054a0:	str	w9, [x8, #20]
  4054a4:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  4054a8:	adrp	x3, 424000 <ascii_strlower_n@plt+0x1fbf8>
  4054ac:	add	x2, x2, #0x95d
  4054b0:	add	x3, x3, #0x4c0
  4054b4:	mov	w0, w20
  4054b8:	mov	x1, x19
  4054bc:	mov	x4, xzr
  4054c0:	bl	403998 <getopt_long@plt>
  4054c4:	tbnz	w0, #31, 40597c <ascii_strlower_n@plt+0x1574>
  4054c8:	sub	w8, w0, #0x34
  4054cc:	cmp	w8, #0xe3
  4054d0:	b.hi	406258 <ascii_strlower_n@plt+0x1e50>  // b.pmore
  4054d4:	adr	x9, 405480 <ascii_strlower_n@plt+0x1078>
  4054d8:	ldrh	w10, [x23, x8, lsl #1]
  4054dc:	add	x9, x9, x10, lsl #2
  4054e0:	mov	w22, #0xffffffea            	// #-22
  4054e4:	br	x9
  4054e8:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  4054ec:	mov	w9, #0x2                   	// #2
  4054f0:	b	405720 <ascii_strlower_n@plt+0x1318>
  4054f4:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  4054f8:	ldr	x8, [x8, #168]
  4054fc:	adrp	x9, 440000 <ascii_strlower_n@plt+0x3bbf8>
  405500:	adrp	x10, 440000 <ascii_strlower_n@plt+0x3bbf8>
  405504:	mov	w11, #0xa                   	// #10
  405508:	str	x8, [x9, #104]
  40550c:	str	w11, [x10, #20]
  405510:	b	4054a4 <ascii_strlower_n@plt+0x109c>
  405514:	adrp	x24, 440000 <ascii_strlower_n@plt+0x3bbf8>
  405518:	ldr	x22, [x24, #168]
  40551c:	adrp	x1, 41e000 <ascii_strlower_n@plt+0x19bf8>
  405520:	add	x1, x1, #0x80
  405524:	mov	x0, x22
  405528:	bl	403b38 <strcmp@plt>
  40552c:	cbz	w0, 405cb8 <ascii_strlower_n@plt+0x18b0>
  405530:	mov	x0, x22
  405534:	bl	41d520 <ascii_strlower_n@plt+0x19118>
  405538:	mov	w22, w0
  40553c:	tbnz	w0, #31, 40609c <ascii_strlower_n@plt+0x1c94>
  405540:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  405544:	cmp	w22, #0x10, lsl #12
  405548:	strh	w22, [x8, #40]
  40554c:	b.cs	4062e8 <ascii_strlower_n@plt+0x1ee0>  // b.hs, b.nlast
  405550:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  405554:	mov	w9, #0x1                   	// #1
  405558:	str	w9, [x8, #20]
  40555c:	b	4054a4 <ascii_strlower_n@plt+0x109c>
  405560:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  405564:	ldr	x0, [x8, #168]
  405568:	bl	403b48 <parse_boolean@plt>
  40556c:	mov	w22, w0
  405570:	tbnz	w0, #31, 405fb4 <ascii_strlower_n@plt+0x1bac>
  405574:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  405578:	ldr	x9, [x8, #80]
  40557c:	orr	x10, x9, #0x80
  405580:	and	x9, x9, #0xffffffffffffff7f
  405584:	b	40580c <ascii_strlower_n@plt+0x1404>
  405588:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  40558c:	ldr	x22, [x8, #168]
  405590:	adrp	x1, 41e000 <ascii_strlower_n@plt+0x19bf8>
  405594:	add	x1, x1, #0x80
  405598:	mov	x0, x22
  40559c:	bl	403b38 <strcmp@plt>
  4055a0:	cbz	w0, 405cc4 <ascii_strlower_n@plt+0x18bc>
  4055a4:	adrp	x1, 41e000 <ascii_strlower_n@plt+0x19bf8>
  4055a8:	add	x1, x1, #0xa0c
  4055ac:	mov	x0, x22
  4055b0:	bl	403b38 <strcmp@plt>
  4055b4:	cbz	w0, 40591c <ascii_strlower_n@plt+0x1514>
  4055b8:	adrp	x1, 41e000 <ascii_strlower_n@plt+0x19bf8>
  4055bc:	add	x1, x1, #0xa10
  4055c0:	mov	x0, x22
  4055c4:	bl	403b38 <strcmp@plt>
  4055c8:	cbz	w0, 40592c <ascii_strlower_n@plt+0x1524>
  4055cc:	adrp	x1, 41e000 <ascii_strlower_n@plt+0x19bf8>
  4055d0:	add	x1, x1, #0xa16
  4055d4:	mov	x0, x22
  4055d8:	bl	403b38 <strcmp@plt>
  4055dc:	cbz	w0, 40593c <ascii_strlower_n@plt+0x1534>
  4055e0:	adrp	x1, 41e000 <ascii_strlower_n@plt+0x19bf8>
  4055e4:	add	x1, x1, #0xa21
  4055e8:	mov	x0, x22
  4055ec:	bl	403b38 <strcmp@plt>
  4055f0:	cbz	w0, 40594c <ascii_strlower_n@plt+0x1544>
  4055f4:	adrp	x1, 41e000 <ascii_strlower_n@plt+0x19bf8>
  4055f8:	add	x1, x1, #0xa2c
  4055fc:	mov	x0, x22
  405600:	bl	403b38 <strcmp@plt>
  405604:	cbz	w0, 40595c <ascii_strlower_n@plt+0x1554>
  405608:	adrp	x1, 41e000 <ascii_strlower_n@plt+0x19bf8>
  40560c:	add	x1, x1, #0xa31
  405610:	mov	x0, x22
  405614:	bl	403b38 <strcmp@plt>
  405618:	cbz	w0, 40596c <ascii_strlower_n@plt+0x1564>
  40561c:	adrp	x1, 41e000 <ascii_strlower_n@plt+0x19bf8>
  405620:	add	x1, x1, #0xa3b
  405624:	mov	x0, x22
  405628:	bl	403b38 <strcmp@plt>
  40562c:	cbnz	w0, 406200 <ascii_strlower_n@plt+0x1df8>
  405630:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  405634:	ldr	x9, [x8, #80]
  405638:	orr	x9, x9, #0x10
  40563c:	b	405814 <ascii_strlower_n@plt+0x140c>
  405640:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  405644:	ldr	x22, [x8, #168]
  405648:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  40564c:	mov	w9, #0x4                   	// #4
  405650:	str	w9, [x8, #20]
  405654:	cbz	x22, 405678 <ascii_strlower_n@plt+0x1270>
  405658:	adrp	x8, 424000 <ascii_strlower_n@plt+0x1fbf8>
  40565c:	add	x8, x8, #0x880
  405660:	ldp	q0, q1, [x8]
  405664:	add	x0, sp, #0x10
  405668:	mov	x1, x22
  40566c:	stp	q0, q1, [sp, #16]
  405670:	bl	403b68 <strv_find@plt>
  405674:	cbz	x0, 406150 <ascii_strlower_n@plt+0x1d48>
  405678:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  40567c:	str	x22, [x8, #88]
  405680:	b	4054a4 <ascii_strlower_n@plt+0x109c>
  405684:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  405688:	ldr	x1, [x8, #168]
  40568c:	adrp	x0, 440000 <ascii_strlower_n@plt+0x3bbf8>
  405690:	add	x0, x0, #0x20
  405694:	bl	403a78 <strv_extend@plt>
  405698:	tbz	w0, #31, 405498 <ascii_strlower_n@plt+0x1090>
  40569c:	b	405fe8 <ascii_strlower_n@plt+0x1be0>
  4056a0:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  4056a4:	mov	w9, #0x2                   	// #2
  4056a8:	str	w9, [x8, #20]
  4056ac:	b	4054a4 <ascii_strlower_n@plt+0x109c>
  4056b0:	adrp	x24, 440000 <ascii_strlower_n@plt+0x3bbf8>
  4056b4:	ldr	x22, [x24, #168]
  4056b8:	adrp	x1, 41e000 <ascii_strlower_n@plt+0x19bf8>
  4056bc:	add	x1, x1, #0x80
  4056c0:	mov	x0, x22
  4056c4:	bl	403b38 <strcmp@plt>
  4056c8:	cbz	w0, 405cf0 <ascii_strlower_n@plt+0x18e8>
  4056cc:	mov	x0, x22
  4056d0:	bl	41d964 <ascii_strlower_n@plt+0x1955c>
  4056d4:	mov	w22, w0
  4056d8:	tbnz	w0, #31, 4060d4 <ascii_strlower_n@plt+0x1ccc>
  4056dc:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  4056e0:	cmp	w22, #0x10, lsl #12
  4056e4:	strh	w22, [x8, #44]
  4056e8:	b.cc	4054a4 <ascii_strlower_n@plt+0x109c>  // b.lo, b.ul, b.last
  4056ec:	b	406330 <ascii_strlower_n@plt+0x1f28>
  4056f0:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  4056f4:	ldr	x0, [x8, #168]
  4056f8:	bl	403b48 <parse_boolean@plt>
  4056fc:	mov	w22, w0
  405700:	tbnz	w0, #31, 405f80 <ascii_strlower_n@plt+0x1b78>
  405704:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  405708:	ldr	x9, [x8, #80]
  40570c:	orr	x10, x9, #0x40
  405710:	and	x9, x9, #0xffffffffffffffbf
  405714:	b	40580c <ascii_strlower_n@plt+0x1404>
  405718:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  40571c:	mov	w9, #0xa                   	// #10
  405720:	str	w9, [x8, #52]
  405724:	b	4054a4 <ascii_strlower_n@plt+0x109c>
  405728:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  40572c:	ldr	x0, [x8, #168]
  405730:	bl	403b48 <parse_boolean@plt>
  405734:	mov	w22, w0
  405738:	tbnz	w0, #31, 406000 <ascii_strlower_n@plt+0x1bf8>
  40573c:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  405740:	ldr	x9, [x8, #80]
  405744:	orr	x10, x9, #0x100
  405748:	and	x9, x9, #0xfffffffffffffeff
  40574c:	b	40580c <ascii_strlower_n@plt+0x1404>
  405750:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  405754:	mov	w9, #0xb                   	// #11
  405758:	str	w9, [x8, #20]
  40575c:	b	4054a4 <ascii_strlower_n@plt+0x109c>
  405760:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  405764:	mov	w9, #0x9                   	// #9
  405768:	str	w9, [x8, #20]
  40576c:	b	4054a4 <ascii_strlower_n@plt+0x109c>
  405770:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  405774:	mov	w9, #0x7                   	// #7
  405778:	str	w9, [x8, #20]
  40577c:	b	4054a4 <ascii_strlower_n@plt+0x109c>
  405780:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  405784:	mov	w9, #0x5                   	// #5
  405788:	str	w9, [x8, #20]
  40578c:	b	4054a4 <ascii_strlower_n@plt+0x109c>
  405790:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  405794:	ldr	x1, [x8, #168]
  405798:	adrp	x0, 440000 <ascii_strlower_n@plt+0x3bbf8>
  40579c:	add	x0, x0, #0x48
  4057a0:	bl	403a78 <strv_extend@plt>
  4057a4:	tbz	w0, #31, 405498 <ascii_strlower_n@plt+0x1090>
  4057a8:	b	406058 <ascii_strlower_n@plt+0x1c50>
  4057ac:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  4057b0:	ldr	x0, [x8, #168]
  4057b4:	bl	404d5c <ascii_strlower_n@plt+0x954>
  4057b8:	tbz	w0, #31, 4054a4 <ascii_strlower_n@plt+0x109c>
  4057bc:	b	405c24 <ascii_strlower_n@plt+0x181c>
  4057c0:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  4057c4:	ldr	x0, [x8, #168]
  4057c8:	bl	403b48 <parse_boolean@plt>
  4057cc:	mov	w22, w0
  4057d0:	tbnz	w0, #31, 405f4c <ascii_strlower_n@plt+0x1b44>
  4057d4:	cmp	w22, #0x0
  4057d8:	cset	w8, ne  // ne = any
  4057dc:	adrp	x9, 440000 <ascii_strlower_n@plt+0x3bbf8>
  4057e0:	strb	w8, [x9]
  4057e4:	b	4054a4 <ascii_strlower_n@plt+0x109c>
  4057e8:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  4057ec:	ldr	x0, [x8, #168]
  4057f0:	bl	403b48 <parse_boolean@plt>
  4057f4:	mov	w22, w0
  4057f8:	tbnz	w0, #31, 405ec0 <ascii_strlower_n@plt+0x1ab8>
  4057fc:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  405800:	ldr	x9, [x8, #80]
  405804:	orr	x10, x9, #0x20
  405808:	and	x9, x9, #0xffffffffffffffdf
  40580c:	cmp	w22, #0x0
  405810:	csel	x9, x10, x9, eq  // eq = none
  405814:	str	x9, [x8, #80]
  405818:	b	4054a4 <ascii_strlower_n@plt+0x109c>
  40581c:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  405820:	mov	w9, #0x3                   	// #3
  405824:	str	w9, [x8, #20]
  405828:	b	4054a4 <ascii_strlower_n@plt+0x109c>
  40582c:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  405830:	mov	w9, #0x8                   	// #8
  405834:	str	w9, [x8, #20]
  405838:	b	4054a4 <ascii_strlower_n@plt+0x109c>
  40583c:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  405840:	mov	w9, #0x6                   	// #6
  405844:	str	w9, [x8, #20]
  405848:	b	4054a4 <ascii_strlower_n@plt+0x109c>
  40584c:	bl	403b58 <on_tty@plt>
  405850:	tbnz	w0, #0, 405ef4 <ascii_strlower_n@plt+0x1aec>
  405854:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  405858:	ldr	x22, [x8, #168]
  40585c:	cbz	x22, 405904 <ascii_strlower_n@plt+0x14fc>
  405860:	adrp	x1, 41e000 <ascii_strlower_n@plt+0x19bf8>
  405864:	add	x1, x1, #0xaa7
  405868:	mov	x0, x22
  40586c:	bl	403b38 <strcmp@plt>
  405870:	cbz	w0, 405904 <ascii_strlower_n@plt+0x14fc>
  405874:	adrp	x1, 41e000 <ascii_strlower_n@plt+0x19bf8>
  405878:	add	x1, x1, #0xaaf
  40587c:	mov	x0, x22
  405880:	bl	403b38 <strcmp@plt>
  405884:	cbnz	w0, 406188 <ascii_strlower_n@plt+0x1d80>
  405888:	mov	w8, #0x2                   	// #2
  40588c:	b	405908 <ascii_strlower_n@plt+0x1500>
  405890:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  405894:	ldr	w9, [x8, #60]
  405898:	orr	w9, w9, #0x1
  40589c:	str	w9, [x8, #60]
  4058a0:	b	4054a4 <ascii_strlower_n@plt+0x109c>
  4058a4:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  4058a8:	ldr	x8, [x8, #168]
  4058ac:	adrp	x9, 440000 <ascii_strlower_n@plt+0x3bbf8>
  4058b0:	adrp	x10, 440000 <ascii_strlower_n@plt+0x3bbf8>
  4058b4:	mov	w11, #0xa                   	// #10
  4058b8:	str	x8, [x9, #112]
  4058bc:	str	w11, [x10, #20]
  4058c0:	b	4054a4 <ascii_strlower_n@plt+0x109c>
  4058c4:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  4058c8:	ldr	x8, [x8, #168]
  4058cc:	adrp	x9, 440000 <ascii_strlower_n@plt+0x3bbf8>
  4058d0:	adrp	x10, 440000 <ascii_strlower_n@plt+0x3bbf8>
  4058d4:	mov	w11, #0xa                   	// #10
  4058d8:	str	x8, [x9, #120]
  4058dc:	str	w11, [x10, #20]
  4058e0:	b	4054a4 <ascii_strlower_n@plt+0x109c>
  4058e4:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  4058e8:	ldr	x8, [x8, #168]
  4058ec:	adrp	x9, 440000 <ascii_strlower_n@plt+0x3bbf8>
  4058f0:	adrp	x10, 440000 <ascii_strlower_n@plt+0x3bbf8>
  4058f4:	mov	w11, #0xa                   	// #10
  4058f8:	str	x8, [x9, #96]
  4058fc:	str	w11, [x10, #20]
  405900:	b	4054a4 <ascii_strlower_n@plt+0x109c>
  405904:	mov	w8, #0x1                   	// #1
  405908:	adrp	x9, 440000 <ascii_strlower_n@plt+0x3bbf8>
  40590c:	adrp	x10, 440000 <ascii_strlower_n@plt+0x3bbf8>
  405910:	str	w8, [x9, #56]
  405914:	strb	wzr, [x10]
  405918:	b	4054a4 <ascii_strlower_n@plt+0x109c>
  40591c:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  405920:	ldr	x9, [x8, #80]
  405924:	orr	x9, x9, #0x1
  405928:	b	405814 <ascii_strlower_n@plt+0x140c>
  40592c:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  405930:	ldr	x9, [x8, #80]
  405934:	orr	x9, x9, #0x6
  405938:	b	405814 <ascii_strlower_n@plt+0x140c>
  40593c:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  405940:	ldr	x9, [x8, #80]
  405944:	orr	x9, x9, #0x2
  405948:	b	405814 <ascii_strlower_n@plt+0x140c>
  40594c:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  405950:	ldr	x9, [x8, #80]
  405954:	orr	x9, x9, #0x4
  405958:	b	405814 <ascii_strlower_n@plt+0x140c>
  40595c:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  405960:	ldr	x9, [x8, #80]
  405964:	orr	x9, x9, #0x18
  405968:	b	405814 <ascii_strlower_n@plt+0x140c>
  40596c:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  405970:	ldr	x9, [x8, #80]
  405974:	orr	x9, x9, #0x8
  405978:	b	405814 <ascii_strlower_n@plt+0x140c>
  40597c:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  405980:	add	x8, x8, #0x28
  405984:	ldrh	w10, [x8]
  405988:	ldrh	w9, [x8, #4]
  40598c:	cbnz	w10, 4059f4 <ascii_strlower_n@plt+0x15ec>
  405990:	cbz	w9, 4059f4 <ascii_strlower_n@plt+0x15ec>
  405994:	mov	w0, wzr
  405998:	bl	4039a8 <log_get_max_level_realm@plt>
  40599c:	cmp	w0, #0x3
  4059a0:	b.lt	406250 <ascii_strlower_n@plt+0x1e48>  // b.tstop
  4059a4:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  4059a8:	adrp	x4, 41e000 <ascii_strlower_n@plt+0x19bf8>
  4059ac:	adrp	x5, 41e000 <ascii_strlower_n@plt+0x19bf8>
  4059b0:	mov	w1, #0x16                  	// #22
  4059b4:	add	x2, x2, #0x717
  4059b8:	add	x4, x4, #0x969
  4059bc:	add	x5, x5, #0xb70
  4059c0:	mov	w0, #0x3                   	// #3
  4059c4:	movk	w1, #0x4000, lsl #16
  4059c8:	mov	w3, #0xb41                 	// #2881
  4059cc:	bl	4039b8 <log_internal_realm@plt>
  4059d0:	mov	w22, w0
  4059d4:	cmp	w22, #0x1
  4059d8:	b.ge	405b84 <ascii_strlower_n@plt+0x177c>  // b.tcont
  4059dc:	b	405c28 <ascii_strlower_n@plt+0x1820>
  4059e0:	bl	403a68 <version@plt>
  4059e4:	mov	w22, w0
  4059e8:	cmp	w22, #0x1
  4059ec:	b.ge	405b84 <ascii_strlower_n@plt+0x177c>  // b.tcont
  4059f0:	b	405c28 <ascii_strlower_n@plt+0x1820>
  4059f4:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  4059f8:	ldr	w8, [x8, #20]
  4059fc:	cbz	w10, 405ac0 <ascii_strlower_n@plt+0x16b8>
  405a00:	cmp	w8, #0x2
  405a04:	b.ne	405ac0 <ascii_strlower_n@plt+0x16b8>  // b.any
  405a08:	mov	w0, wzr
  405a0c:	bl	4039a8 <log_get_max_level_realm@plt>
  405a10:	cmp	w0, #0x3
  405a14:	b.lt	406250 <ascii_strlower_n@plt+0x1e48>  // b.tstop
  405a18:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  405a1c:	adrp	x4, 41e000 <ascii_strlower_n@plt+0x19bf8>
  405a20:	adrp	x5, 41e000 <ascii_strlower_n@plt+0x19bf8>
  405a24:	mov	w1, #0x16                  	// #22
  405a28:	add	x2, x2, #0x717
  405a2c:	add	x4, x4, #0x969
  405a30:	add	x5, x5, #0xba7
  405a34:	mov	w0, #0x3                   	// #3
  405a38:	movk	w1, #0x4000, lsl #16
  405a3c:	mov	w3, #0xb45                 	// #2885
  405a40:	bl	4039b8 <log_internal_realm@plt>
  405a44:	mov	w22, w0
  405a48:	cmp	w22, #0x1
  405a4c:	b.ge	405b84 <ascii_strlower_n@plt+0x177c>  // b.tcont
  405a50:	b	405c28 <ascii_strlower_n@plt+0x1820>
  405a54:	adrp	x0, 41e000 <ascii_strlower_n@plt+0x19bf8>
  405a58:	adrp	x1, 41e000 <ascii_strlower_n@plt+0x19bf8>
  405a5c:	add	x0, x0, #0x326
  405a60:	add	x1, x1, #0x331
  405a64:	add	x2, sp, #0x10
  405a68:	str	xzr, [sp, #16]
  405a6c:	bl	403a48 <terminal_urlify_man@plt>
  405a70:	tbnz	w0, #31, 405b54 <ascii_strlower_n@plt+0x174c>
  405a74:	ldr	x22, [x28, #144]
  405a78:	bl	403b78 <colors_enabled@plt>
  405a7c:	adrp	x8, 41f000 <ascii_strlower_n@plt+0x1abf8>
  405a80:	add	x8, x8, #0x508
  405a84:	tst	w0, #0x1
  405a88:	csel	x23, x8, x21, ne  // ne = any
  405a8c:	bl	403b78 <colors_enabled@plt>
  405a90:	ldr	x4, [sp, #16]
  405a94:	adrp	x8, 41f000 <ascii_strlower_n@plt+0x1abf8>
  405a98:	add	x8, x8, #0x512
  405a9c:	tst	w0, #0x1
  405aa0:	adrp	x0, 41e000 <ascii_strlower_n@plt+0x19bf8>
  405aa4:	csel	x3, x8, x21, ne  // ne = any
  405aa8:	add	x0, x0, #0xc64
  405aac:	mov	x1, x22
  405ab0:	mov	x2, x23
  405ab4:	bl	403a58 <printf@plt>
  405ab8:	mov	w22, wzr
  405abc:	b	405b74 <ascii_strlower_n@plt+0x176c>
  405ac0:	cbz	w10, 405ad4 <ascii_strlower_n@plt+0x16cc>
  405ac4:	cbnz	w9, 405ad4 <ascii_strlower_n@plt+0x16cc>
  405ac8:	adrp	x9, 440000 <ascii_strlower_n@plt+0x3bbf8>
  405acc:	add	x9, x9, #0x2c
  405ad0:	b	405ae4 <ascii_strlower_n@plt+0x16dc>
  405ad4:	cbnz	w10, 405aec <ascii_strlower_n@plt+0x16e4>
  405ad8:	cbz	w9, 405aec <ascii_strlower_n@plt+0x16e4>
  405adc:	adrp	x9, 440000 <ascii_strlower_n@plt+0x3bbf8>
  405ae0:	add	x9, x9, #0x28
  405ae4:	mov	w10, #0x1                   	// #1
  405ae8:	strh	w10, [x9]
  405aec:	and	w8, w8, #0xfffffffe
  405af0:	cmp	w8, #0xa
  405af4:	b.ne	405b84 <ascii_strlower_n@plt+0x177c>  // b.any
  405af8:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  405afc:	ldr	w8, [x8, #48]
  405b00:	cmp	w8, #0x0
  405b04:	b.gt	405b84 <ascii_strlower_n@plt+0x177c>
  405b08:	mov	w0, wzr
  405b0c:	bl	4039a8 <log_get_max_level_realm@plt>
  405b10:	cmp	w0, #0x3
  405b14:	b.lt	406250 <ascii_strlower_n@plt+0x1e48>  // b.tstop
  405b18:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  405b1c:	adrp	x4, 41e000 <ascii_strlower_n@plt+0x19bf8>
  405b20:	adrp	x5, 41e000 <ascii_strlower_n@plt+0x19bf8>
  405b24:	mov	w1, #0x16                  	// #22
  405b28:	add	x2, x2, #0x717
  405b2c:	add	x4, x4, #0x969
  405b30:	add	x5, x5, #0xbd2
  405b34:	mov	w0, #0x3                   	// #3
  405b38:	movk	w1, #0x4000, lsl #16
  405b3c:	mov	w3, #0xb51                 	// #2897
  405b40:	bl	4039b8 <log_internal_realm@plt>
  405b44:	mov	w22, w0
  405b48:	cmp	w22, #0x1
  405b4c:	b.ge	405b84 <ascii_strlower_n@plt+0x177c>  // b.tcont
  405b50:	b	405c28 <ascii_strlower_n@plt+0x1820>
  405b54:	adrp	x1, 41e000 <ascii_strlower_n@plt+0x19bf8>
  405b58:	adrp	x3, 41e000 <ascii_strlower_n@plt+0x19bf8>
  405b5c:	add	x1, x1, #0x717
  405b60:	add	x3, x3, #0xc58
  405b64:	mov	w2, #0x9a4                 	// #2468
  405b68:	mov	w0, wzr
  405b6c:	bl	403a28 <log_oom_internal@plt>
  405b70:	mov	w22, w0
  405b74:	ldr	x0, [sp, #16]
  405b78:	bl	4039d8 <free@plt>
  405b7c:	cmp	w22, #0x1
  405b80:	b.lt	405c28 <ascii_strlower_n@plt+0x1820>  // b.tstop
  405b84:	add	x0, sp, #0x8
  405b88:	bl	403b88 <sd_bus_open_system@plt>
  405b8c:	tbnz	w0, #31, 405bd0 <ascii_strlower_n@plt+0x17c8>
  405b90:	adrp	x8, 424000 <ascii_strlower_n@plt+0x1fbf8>
  405b94:	add	x8, x8, #0x4a8
  405b98:	ldr	q0, [x8]
  405b9c:	ldr	x8, [x8, #16]
  405ba0:	ldr	x1, [x28, #144]
  405ba4:	add	x0, sp, #0x10
  405ba8:	str	q0, [sp, #16]
  405bac:	str	x8, [sp, #32]
  405bb0:	bl	403b68 <strv_find@plt>
  405bb4:	ldr	x3, [sp, #8]
  405bb8:	cbz	x0, 405c10 <ascii_strlower_n@plt+0x1808>
  405bbc:	mov	w0, w20
  405bc0:	mov	x1, x19
  405bc4:	mov	x2, x3
  405bc8:	bl	4063c0 <ascii_strlower_n@plt+0x1fb8>
  405bcc:	b	405c24 <ascii_strlower_n@plt+0x181c>
  405bd0:	mov	w21, w0
  405bd4:	mov	w0, wzr
  405bd8:	bl	4039a8 <log_get_max_level_realm@plt>
  405bdc:	cmp	w0, #0x3
  405be0:	b.lt	405ca8 <ascii_strlower_n@plt+0x18a0>  // b.tstop
  405be4:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  405be8:	adrp	x4, 41e000 <ascii_strlower_n@plt+0x19bf8>
  405bec:	adrp	x5, 41e000 <ascii_strlower_n@plt+0x19bf8>
  405bf0:	add	x2, x2, #0x717
  405bf4:	add	x4, x4, #0x820
  405bf8:	add	x5, x5, #0x824
  405bfc:	mov	w0, #0x3                   	// #3
  405c00:	mov	w3, #0xcb5                 	// #3253
  405c04:	mov	w1, w21
  405c08:	bl	4039b8 <log_internal_realm@plt>
  405c0c:	b	405c24 <ascii_strlower_n@plt+0x181c>
  405c10:	adrp	x2, 424000 <ascii_strlower_n@plt+0x1fbf8>
  405c14:	add	x2, x2, #0xa60
  405c18:	mov	w0, w20
  405c1c:	mov	x1, x19
  405c20:	bl	403b98 <dispatch_verb@plt>
  405c24:	mov	w22, w0
  405c28:	ldr	x0, [sp, #8]
  405c2c:	cbz	x0, 405c34 <ascii_strlower_n@plt+0x182c>
  405c30:	bl	403ba8 <sd_bus_flush_close_unref@plt>
  405c34:	bl	403bb8 <ask_password_agent_close@plt>
  405c38:	bl	403bc8 <polkit_agent_close@plt>
  405c3c:	bl	403bd8 <pager_close@plt>
  405c40:	bl	403be8 <mac_selinux_finish@plt>
  405c44:	adrp	x8, 43f000 <ascii_strlower_n@plt+0x3abf8>
  405c48:	ldr	x8, [x8, #2656]
  405c4c:	adrp	x19, 43f000 <ascii_strlower_n@plt+0x3abf8>
  405c50:	ldr	x19, [x19, #2664]
  405c54:	add	x9, x8, #0x7
  405c58:	and	x20, x9, #0xfffffffffffffff8
  405c5c:	cmp	x20, x19
  405c60:	cset	w9, cs  // cs = hs, nlast
  405c64:	cmp	x8, #0x0
  405c68:	cset	w8, eq  // eq = none
  405c6c:	orr	w8, w8, w9
  405c70:	tbnz	w8, #0, 405c84 <ascii_strlower_n@plt+0x187c>
  405c74:	ldp	x0, x8, [x20], #16
  405c78:	blr	x8
  405c7c:	cmp	x20, x19
  405c80:	b.cc	405c74 <ascii_strlower_n@plt+0x186c>  // b.lo, b.ul, b.last
  405c84:	lsr	w0, w22, #31
  405c88:	ldp	x20, x19, [sp, #128]
  405c8c:	ldp	x22, x21, [sp, #112]
  405c90:	ldp	x24, x23, [sp, #96]
  405c94:	ldp	x26, x25, [sp, #80]
  405c98:	ldp	x28, x27, [sp, #64]
  405c9c:	ldp	x29, x30, [sp, #48]
  405ca0:	add	sp, sp, #0x90
  405ca4:	ret
  405ca8:	mov	w8, wzr
  405cac:	neg	w9, w21
  405cb0:	sub	w22, w8, w9, uxtb
  405cb4:	b	405c28 <ascii_strlower_n@plt+0x1820>
  405cb8:	bl	406754 <ascii_strlower_n@plt+0x234c>
  405cbc:	mov	w22, wzr
  405cc0:	b	405c28 <ascii_strlower_n@plt+0x1820>
  405cc4:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  405cc8:	ldrb	w8, [x8]
  405ccc:	cbz	w8, 405cdc <ascii_strlower_n@plt+0x18d4>
  405cd0:	adrp	x0, 41f000 <ascii_strlower_n@plt+0x1abf8>
  405cd4:	add	x0, x0, #0x541
  405cd8:	bl	403bf8 <puts@plt>
  405cdc:	adrp	x0, 41f000 <ascii_strlower_n@plt+0x1abf8>
  405ce0:	add	x0, x0, #0x557
  405ce4:	bl	403bf8 <puts@plt>
  405ce8:	mov	w22, wzr
  405cec:	b	405c28 <ascii_strlower_n@plt+0x1820>
  405cf0:	bl	4067f4 <ascii_strlower_n@plt+0x23ec>
  405cf4:	mov	w22, wzr
  405cf8:	b	405c28 <ascii_strlower_n@plt+0x1820>
  405cfc:	mov	w0, wzr
  405d00:	bl	4039a8 <log_get_max_level_realm@plt>
  405d04:	cmp	w0, #0x3
  405d08:	b.lt	405f44 <ascii_strlower_n@plt+0x1b3c>  // b.tstop
  405d0c:	mov	w8, #0x16                  	// #22
  405d10:	movk	w8, #0x4000, lsl #16
  405d14:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  405d18:	adrp	x4, 41f000 <ascii_strlower_n@plt+0x1abf8>
  405d1c:	adrp	x5, 41e000 <ascii_strlower_n@plt+0x19bf8>
  405d20:	add	w1, w8, #0x3
  405d24:	add	x2, x2, #0x717
  405d28:	add	x4, x4, #0x5c1
  405d2c:	add	x5, x5, #0xa81
  405d30:	mov	w0, #0x3                   	// #3
  405d34:	mov	w3, #0xbd4                 	// #3028
  405d38:	bl	4039b8 <log_internal_realm@plt>
  405d3c:	mov	w22, w0
  405d40:	cmp	w22, #0x1
  405d44:	b.ge	405b84 <ascii_strlower_n@plt+0x177c>  // b.tcont
  405d48:	b	405c28 <ascii_strlower_n@plt+0x1820>
  405d4c:	mov	w0, wzr
  405d50:	bl	4039a8 <log_get_max_level_realm@plt>
  405d54:	cmp	w0, #0x3
  405d58:	b.lt	406048 <ascii_strlower_n@plt+0x1c40>  // b.tstop
  405d5c:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  405d60:	adrp	x4, 41f000 <ascii_strlower_n@plt+0x1abf8>
  405d64:	adrp	x5, 41e000 <ascii_strlower_n@plt+0x19bf8>
  405d68:	add	x2, x2, #0x717
  405d6c:	add	x4, x4, #0x5c1
  405d70:	add	x5, x5, #0x9e9
  405d74:	mov	w0, #0x3                   	// #3
  405d78:	mov	w3, #0xbb3                 	// #2995
  405d7c:	b	406030 <ascii_strlower_n@plt+0x1c28>
  405d80:	mov	w0, wzr
  405d84:	bl	4039a8 <log_get_max_level_realm@plt>
  405d88:	cmp	w0, #0x3
  405d8c:	b.lt	406048 <ascii_strlower_n@plt+0x1c40>  // b.tstop
  405d90:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  405d94:	adrp	x4, 41f000 <ascii_strlower_n@plt+0x1abf8>
  405d98:	adrp	x5, 41e000 <ascii_strlower_n@plt+0x19bf8>
  405d9c:	add	x2, x2, #0x717
  405da0:	add	x4, x4, #0x5c1
  405da4:	add	x5, x5, #0xaf7
  405da8:	mov	w0, #0x3                   	// #3
  405dac:	mov	w3, #0xbec                 	// #3052
  405db0:	b	406030 <ascii_strlower_n@plt+0x1c28>
  405db4:	mov	w0, wzr
  405db8:	bl	4039a8 <log_get_max_level_realm@plt>
  405dbc:	cmp	w0, #0x3
  405dc0:	b.lt	406048 <ascii_strlower_n@plt+0x1c40>  // b.tstop
  405dc4:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  405dc8:	adrp	x4, 41f000 <ascii_strlower_n@plt+0x1abf8>
  405dcc:	adrp	x5, 41e000 <ascii_strlower_n@plt+0x19bf8>
  405dd0:	add	x2, x2, #0x717
  405dd4:	add	x4, x4, #0x5c1
  405dd8:	add	x5, x5, #0xb24
  405ddc:	mov	w0, #0x3                   	// #3
  405de0:	mov	w3, #0xbf3                 	// #3059
  405de4:	b	406030 <ascii_strlower_n@plt+0x1c28>
  405de8:	mov	w0, wzr
  405dec:	bl	4039a8 <log_get_max_level_realm@plt>
  405df0:	cmp	w0, #0x3
  405df4:	b.lt	406048 <ascii_strlower_n@plt+0x1c40>  // b.tstop
  405df8:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  405dfc:	adrp	x4, 41f000 <ascii_strlower_n@plt+0x1abf8>
  405e00:	adrp	x5, 41e000 <ascii_strlower_n@plt+0x19bf8>
  405e04:	add	x2, x2, #0x717
  405e08:	add	x4, x4, #0x5c1
  405e0c:	add	x5, x5, #0xad4
  405e10:	mov	w0, #0x3                   	// #3
  405e14:	mov	w3, #0xbe5                 	// #3045
  405e18:	b	406030 <ascii_strlower_n@plt+0x1c28>
  405e1c:	mov	w0, wzr
  405e20:	bl	4039a8 <log_get_max_level_realm@plt>
  405e24:	cmp	w0, #0x3
  405e28:	b.lt	406048 <ascii_strlower_n@plt+0x1c40>  // b.tstop
  405e2c:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  405e30:	adrp	x4, 41f000 <ascii_strlower_n@plt+0x1abf8>
  405e34:	adrp	x5, 41e000 <ascii_strlower_n@plt+0x19bf8>
  405e38:	add	x2, x2, #0x717
  405e3c:	add	x4, x4, #0x5c1
  405e40:	add	x5, x5, #0xb4d
  405e44:	mov	w0, #0x3                   	// #3
  405e48:	mov	w3, #0xbfa                 	// #3066
  405e4c:	b	406030 <ascii_strlower_n@plt+0x1c28>
  405e50:	mov	w0, wzr
  405e54:	bl	4039a8 <log_get_max_level_realm@plt>
  405e58:	cmp	w0, #0x3
  405e5c:	b.lt	405c28 <ascii_strlower_n@plt+0x1820>  // b.tstop
  405e60:	ldr	x6, [x21, #168]
  405e64:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  405e68:	adrp	x4, 41f000 <ascii_strlower_n@plt+0x1abf8>
  405e6c:	adrp	x5, 41e000 <ascii_strlower_n@plt+0x19bf8>
  405e70:	add	x2, x2, #0x717
  405e74:	add	x4, x4, #0x5c1
  405e78:	add	x5, x5, #0x97b
  405e7c:	mov	w0, #0x3                   	// #3
  405e80:	mov	w3, #0xb98                 	// #2968
  405e84:	b	406108 <ascii_strlower_n@plt+0x1d00>
  405e88:	mov	w0, wzr
  405e8c:	bl	4039a8 <log_get_max_level_realm@plt>
  405e90:	cmp	w0, #0x3
  405e94:	b.lt	405c28 <ascii_strlower_n@plt+0x1820>  // b.tstop
  405e98:	ldr	x6, [x21, #168]
  405e9c:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  405ea0:	adrp	x4, 41f000 <ascii_strlower_n@plt+0x1abf8>
  405ea4:	adrp	x5, 41e000 <ascii_strlower_n@plt+0x19bf8>
  405ea8:	add	x2, x2, #0x717
  405eac:	add	x4, x4, #0x5c1
  405eb0:	add	x5, x5, #0x9b1
  405eb4:	mov	w0, #0x3                   	// #3
  405eb8:	mov	w3, #0xba8                 	// #2984
  405ebc:	b	406108 <ascii_strlower_n@plt+0x1d00>
  405ec0:	mov	w0, wzr
  405ec4:	bl	4039a8 <log_get_max_level_realm@plt>
  405ec8:	cmp	w0, #0x3
  405ecc:	b.lt	406048 <ascii_strlower_n@plt+0x1c40>  // b.tstop
  405ed0:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  405ed4:	adrp	x4, 41e000 <ascii_strlower_n@plt+0x19bf8>
  405ed8:	adrp	x5, 41e000 <ascii_strlower_n@plt+0x19bf8>
  405edc:	add	x2, x2, #0x717
  405ee0:	add	x4, x4, #0x969
  405ee4:	add	x5, x5, #0xad4
  405ee8:	mov	w0, #0x3                   	// #3
  405eec:	mov	w3, #0xad7                 	// #2775
  405ef0:	b	406030 <ascii_strlower_n@plt+0x1c28>
  405ef4:	mov	w0, wzr
  405ef8:	bl	4039a8 <log_get_max_level_realm@plt>
  405efc:	cmp	w0, #0x3
  405f00:	b.lt	405f44 <ascii_strlower_n@plt+0x1b3c>  // b.tstop
  405f04:	mov	w8, #0x16                  	// #22
  405f08:	movk	w8, #0x4000, lsl #16
  405f0c:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  405f10:	adrp	x4, 41e000 <ascii_strlower_n@plt+0x19bf8>
  405f14:	adrp	x5, 41e000 <ascii_strlower_n@plt+0x19bf8>
  405f18:	add	w1, w8, #0x3
  405f1c:	add	x2, x2, #0x717
  405f20:	add	x4, x4, #0x969
  405f24:	add	x5, x5, #0xa81
  405f28:	mov	w0, #0x3                   	// #3
  405f2c:	mov	w3, #0xac6                 	// #2758
  405f30:	bl	4039b8 <log_internal_realm@plt>
  405f34:	mov	w22, w0
  405f38:	cmp	w22, #0x1
  405f3c:	b.ge	405b84 <ascii_strlower_n@plt+0x177c>  // b.tcont
  405f40:	b	405c28 <ascii_strlower_n@plt+0x1820>
  405f44:	mov	w22, #0xffffffe7            	// #-25
  405f48:	b	405c28 <ascii_strlower_n@plt+0x1820>
  405f4c:	mov	w0, wzr
  405f50:	bl	4039a8 <log_get_max_level_realm@plt>
  405f54:	cmp	w0, #0x3
  405f58:	b.lt	406048 <ascii_strlower_n@plt+0x1c40>  // b.tstop
  405f5c:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  405f60:	adrp	x4, 41e000 <ascii_strlower_n@plt+0x19bf8>
  405f64:	adrp	x5, 41e000 <ascii_strlower_n@plt+0x19bf8>
  405f68:	add	x2, x2, #0x717
  405f6c:	add	x4, x4, #0x969
  405f70:	add	x5, x5, #0x9e9
  405f74:	mov	w0, #0x3                   	// #3
  405f78:	mov	w3, #0xa95                 	// #2709
  405f7c:	b	406030 <ascii_strlower_n@plt+0x1c28>
  405f80:	mov	w0, wzr
  405f84:	bl	4039a8 <log_get_max_level_realm@plt>
  405f88:	cmp	w0, #0x3
  405f8c:	b.lt	406048 <ascii_strlower_n@plt+0x1c40>  // b.tstop
  405f90:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  405f94:	adrp	x4, 41e000 <ascii_strlower_n@plt+0x19bf8>
  405f98:	adrp	x5, 41e000 <ascii_strlower_n@plt+0x19bf8>
  405f9c:	add	x2, x2, #0x717
  405fa0:	add	x4, x4, #0x969
  405fa4:	add	x5, x5, #0xb24
  405fa8:	mov	w0, #0x3                   	// #3
  405fac:	mov	w3, #0xae5                 	// #2789
  405fb0:	b	406030 <ascii_strlower_n@plt+0x1c28>
  405fb4:	mov	w0, wzr
  405fb8:	bl	4039a8 <log_get_max_level_realm@plt>
  405fbc:	cmp	w0, #0x3
  405fc0:	b.lt	406048 <ascii_strlower_n@plt+0x1c40>  // b.tstop
  405fc4:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  405fc8:	adrp	x4, 41e000 <ascii_strlower_n@plt+0x19bf8>
  405fcc:	adrp	x5, 41e000 <ascii_strlower_n@plt+0x19bf8>
  405fd0:	add	x2, x2, #0x717
  405fd4:	add	x4, x4, #0x969
  405fd8:	add	x5, x5, #0xaf7
  405fdc:	mov	w0, #0x3                   	// #3
  405fe0:	mov	w3, #0xade                 	// #2782
  405fe4:	b	406030 <ascii_strlower_n@plt+0x1c28>
  405fe8:	adrp	x1, 41e000 <ascii_strlower_n@plt+0x19bf8>
  405fec:	adrp	x3, 41e000 <ascii_strlower_n@plt+0x19bf8>
  405ff0:	add	x1, x1, #0x717
  405ff4:	add	x3, x3, #0x969
  405ff8:	mov	w2, #0xb13                 	// #2835
  405ffc:	b	406084 <ascii_strlower_n@plt+0x1c7c>
  406000:	mov	w0, wzr
  406004:	bl	4039a8 <log_get_max_level_realm@plt>
  406008:	cmp	w0, #0x3
  40600c:	b.lt	406048 <ascii_strlower_n@plt+0x1c40>  // b.tstop
  406010:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  406014:	adrp	x4, 41e000 <ascii_strlower_n@plt+0x19bf8>
  406018:	adrp	x5, 41e000 <ascii_strlower_n@plt+0x19bf8>
  40601c:	add	x2, x2, #0x717
  406020:	add	x4, x4, #0x969
  406024:	add	x5, x5, #0xb4d
  406028:	mov	w0, #0x3                   	// #3
  40602c:	mov	w3, #0xaec                 	// #2796
  406030:	mov	w1, w22
  406034:	bl	4039b8 <log_internal_realm@plt>
  406038:	mov	w22, w0
  40603c:	cmp	w22, #0x1
  406040:	b.ge	405b84 <ascii_strlower_n@plt+0x177c>  // b.tcont
  406044:	b	405c28 <ascii_strlower_n@plt+0x1820>
  406048:	mov	w8, wzr
  40604c:	neg	w9, w22
  406050:	sub	w22, w8, w9, uxtb
  406054:	b	405c28 <ascii_strlower_n@plt+0x1820>
  406058:	adrp	x1, 41e000 <ascii_strlower_n@plt+0x19bf8>
  40605c:	adrp	x3, 41e000 <ascii_strlower_n@plt+0x19bf8>
  406060:	add	x1, x1, #0x717
  406064:	add	x3, x3, #0x969
  406068:	mov	w2, #0xb2f                 	// #2863
  40606c:	b	406084 <ascii_strlower_n@plt+0x1c7c>
  406070:	adrp	x1, 41e000 <ascii_strlower_n@plt+0x19bf8>
  406074:	adrp	x3, 41e000 <ascii_strlower_n@plt+0x19bf8>
  406078:	add	x1, x1, #0x717
  40607c:	add	x3, x3, #0x969
  406080:	mov	w2, #0xb0b                 	// #2827
  406084:	mov	w0, wzr
  406088:	bl	403a28 <log_oom_internal@plt>
  40608c:	mov	w22, w0
  406090:	cmp	w22, #0x1
  406094:	b.ge	405b84 <ascii_strlower_n@plt+0x177c>  // b.tcont
  406098:	b	405c28 <ascii_strlower_n@plt+0x1820>
  40609c:	mov	w0, wzr
  4060a0:	bl	4039a8 <log_get_max_level_realm@plt>
  4060a4:	cmp	w0, #0x3
  4060a8:	b.lt	405c28 <ascii_strlower_n@plt+0x1820>  // b.tstop
  4060ac:	ldr	x6, [x24, #168]
  4060b0:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  4060b4:	adrp	x4, 41e000 <ascii_strlower_n@plt+0x19bf8>
  4060b8:	adrp	x5, 41e000 <ascii_strlower_n@plt+0x19bf8>
  4060bc:	add	x2, x2, #0x717
  4060c0:	add	x4, x4, #0x969
  4060c4:	add	x5, x5, #0x97b
  4060c8:	mov	w0, #0x3                   	// #3
  4060cc:	mov	w3, #0xa79                 	// #2681
  4060d0:	b	406108 <ascii_strlower_n@plt+0x1d00>
  4060d4:	mov	w0, wzr
  4060d8:	bl	4039a8 <log_get_max_level_realm@plt>
  4060dc:	cmp	w0, #0x3
  4060e0:	b.lt	405c28 <ascii_strlower_n@plt+0x1820>  // b.tstop
  4060e4:	ldr	x6, [x24, #168]
  4060e8:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  4060ec:	adrp	x4, 41e000 <ascii_strlower_n@plt+0x19bf8>
  4060f0:	adrp	x5, 41e000 <ascii_strlower_n@plt+0x19bf8>
  4060f4:	add	x2, x2, #0x717
  4060f8:	add	x4, x4, #0x969
  4060fc:	add	x5, x5, #0x9b1
  406100:	mov	w0, #0x3                   	// #3
  406104:	mov	w3, #0xa8a                 	// #2698
  406108:	mov	w1, wzr
  40610c:	bl	4039b8 <log_internal_realm@plt>
  406110:	b	405c28 <ascii_strlower_n@plt+0x1820>
  406114:	mov	w0, wzr
  406118:	bl	4039a8 <log_get_max_level_realm@plt>
  40611c:	cmp	w0, #0x3
  406120:	b.lt	406250 <ascii_strlower_n@plt+0x1e48>  // b.tstop
  406124:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  406128:	adrp	x4, 41f000 <ascii_strlower_n@plt+0x1abf8>
  40612c:	adrp	x5, 41e000 <ascii_strlower_n@plt+0x19bf8>
  406130:	mov	w1, #0x16                  	// #22
  406134:	add	x2, x2, #0x717
  406138:	add	x4, x4, #0x5c1
  40613c:	add	x5, x5, #0xab6
  406140:	mov	w0, #0x3                   	// #3
  406144:	movk	w1, #0x4000, lsl #16
  406148:	mov	w3, #0xbdd                 	// #3037
  40614c:	b	406238 <ascii_strlower_n@plt+0x1e30>
  406150:	bl	4039a8 <log_get_max_level_realm@plt>
  406154:	cmp	w0, #0x3
  406158:	b.lt	406250 <ascii_strlower_n@plt+0x1e48>  // b.tstop
  40615c:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  406160:	adrp	x4, 41e000 <ascii_strlower_n@plt+0x19bf8>
  406164:	adrp	x5, 41e000 <ascii_strlower_n@plt+0x19bf8>
  406168:	mov	w1, #0x16                  	// #22
  40616c:	add	x2, x2, #0x717
  406170:	add	x4, x4, #0x969
  406174:	add	x5, x5, #0xa64
  406178:	mov	w0, #0x3                   	// #3
  40617c:	movk	w1, #0x4000, lsl #16
  406180:	mov	w3, #0xac0                 	// #2752
  406184:	b	406238 <ascii_strlower_n@plt+0x1e30>
  406188:	mov	w0, wzr
  40618c:	bl	4039a8 <log_get_max_level_realm@plt>
  406190:	cmp	w0, #0x3
  406194:	b.lt	406250 <ascii_strlower_n@plt+0x1e48>  // b.tstop
  406198:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  40619c:	adrp	x4, 41e000 <ascii_strlower_n@plt+0x19bf8>
  4061a0:	adrp	x5, 41e000 <ascii_strlower_n@plt+0x19bf8>
  4061a4:	mov	w1, #0x16                  	// #22
  4061a8:	add	x2, x2, #0x717
  4061ac:	add	x4, x4, #0x969
  4061b0:	add	x5, x5, #0xab6
  4061b4:	mov	w0, #0x3                   	// #3
  4061b8:	movk	w1, #0x4000, lsl #16
  4061bc:	mov	w3, #0xacf                 	// #2767
  4061c0:	b	406238 <ascii_strlower_n@plt+0x1e30>
  4061c4:	mov	w0, wzr
  4061c8:	bl	4039a8 <log_get_max_level_realm@plt>
  4061cc:	cmp	w0, #0x3
  4061d0:	b.lt	406250 <ascii_strlower_n@plt+0x1e48>  // b.tstop
  4061d4:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  4061d8:	adrp	x4, 41f000 <ascii_strlower_n@plt+0x1abf8>
  4061dc:	adrp	x5, 41e000 <ascii_strlower_n@plt+0x19bf8>
  4061e0:	mov	w1, #0x16                  	// #22
  4061e4:	add	x2, x2, #0x717
  4061e8:	add	x4, x4, #0x5c1
  4061ec:	add	x5, x5, #0xa45
  4061f0:	mov	w0, #0x3                   	// #3
  4061f4:	movk	w1, #0x4000, lsl #16
  4061f8:	mov	w3, #0xbcd                 	// #3021
  4061fc:	b	406238 <ascii_strlower_n@plt+0x1e30>
  406200:	mov	w0, wzr
  406204:	bl	4039a8 <log_get_max_level_realm@plt>
  406208:	cmp	w0, #0x3
  40620c:	b.lt	406250 <ascii_strlower_n@plt+0x1e48>  // b.tstop
  406210:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  406214:	adrp	x4, 41e000 <ascii_strlower_n@plt+0x19bf8>
  406218:	adrp	x5, 41e000 <ascii_strlower_n@plt+0x19bf8>
  40621c:	mov	w1, #0x16                  	// #22
  406220:	add	x2, x2, #0x717
  406224:	add	x4, x4, #0x969
  406228:	add	x5, x5, #0xa45
  40622c:	mov	w0, #0x3                   	// #3
  406230:	movk	w1, #0x4000, lsl #16
  406234:	mov	w3, #0xaae                 	// #2734
  406238:	mov	x6, x22
  40623c:	bl	4039b8 <log_internal_realm@plt>
  406240:	mov	w22, w0
  406244:	cmp	w22, #0x1
  406248:	b.ge	405b84 <ascii_strlower_n@plt+0x177c>  // b.tcont
  40624c:	b	405c28 <ascii_strlower_n@plt+0x1820>
  406250:	mov	w22, #0xffffffea            	// #-22
  406254:	b	405c28 <ascii_strlower_n@plt+0x1820>
  406258:	adrp	x1, 41e000 <ascii_strlower_n@plt+0x19bf8>
  40625c:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  406260:	adrp	x4, 41e000 <ascii_strlower_n@plt+0x19bf8>
  406264:	add	x1, x1, #0x205
  406268:	add	x2, x2, #0x717
  40626c:	add	x4, x4, #0x939
  406270:	mov	w3, #0xb3c                 	// #2876
  406274:	mov	w0, wzr
  406278:	bl	403a88 <log_assert_failed_unreachable_realm@plt>
  40627c:	adrp	x1, 41e000 <ascii_strlower_n@plt+0x19bf8>
  406280:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  406284:	adrp	x4, 41f000 <ascii_strlower_n@plt+0x1abf8>
  406288:	add	x1, x1, #0x205
  40628c:	add	x2, x2, #0x717
  406290:	add	x4, x4, #0x59d
  406294:	mov	w3, #0xc06                 	// #3078
  406298:	mov	w0, wzr
  40629c:	bl	403a88 <log_assert_failed_unreachable_realm@plt>
  4062a0:	adrp	x1, 41e000 <ascii_strlower_n@plt+0x19bf8>
  4062a4:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  4062a8:	adrp	x4, 41f000 <ascii_strlower_n@plt+0x1abf8>
  4062ac:	add	x1, x1, #0xc0
  4062b0:	add	x2, x2, #0x717
  4062b4:	add	x4, x4, #0x59d
  4062b8:	mov	w3, #0xb76                 	// #2934
  4062bc:	mov	w0, wzr
  4062c0:	bl	403a98 <log_assert_failed_realm@plt>
  4062c4:	adrp	x1, 41e000 <ascii_strlower_n@plt+0x19bf8>
  4062c8:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  4062cc:	adrp	x4, 41f000 <ascii_strlower_n@plt+0x1abf8>
  4062d0:	add	x1, x1, #0x115
  4062d4:	add	x2, x2, #0x717
  4062d8:	add	x4, x4, #0x59d
  4062dc:	mov	w3, #0xb77                 	// #2935
  4062e0:	mov	w0, wzr
  4062e4:	bl	403a98 <log_assert_failed_realm@plt>
  4062e8:	adrp	x1, 41e000 <ascii_strlower_n@plt+0x19bf8>
  4062ec:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  4062f0:	adrp	x4, 41e000 <ascii_strlower_n@plt+0x19bf8>
  4062f4:	add	x1, x1, #0x99d
  4062f8:	add	x2, x2, #0x717
  4062fc:	add	x4, x4, #0x939
  406300:	mov	w3, #0xa7d                 	// #2685
  406304:	mov	w0, wzr
  406308:	bl	403a98 <log_assert_failed_realm@plt>
  40630c:	adrp	x1, 41e000 <ascii_strlower_n@plt+0x19bf8>
  406310:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  406314:	adrp	x4, 41f000 <ascii_strlower_n@plt+0x1abf8>
  406318:	add	x1, x1, #0x99d
  40631c:	add	x2, x2, #0x717
  406320:	add	x4, x4, #0x59d
  406324:	mov	w3, #0xb9c                 	// #2972
  406328:	mov	w0, wzr
  40632c:	bl	403a98 <log_assert_failed_realm@plt>
  406330:	adrp	x1, 41e000 <ascii_strlower_n@plt+0x19bf8>
  406334:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  406338:	adrp	x4, 41e000 <ascii_strlower_n@plt+0x19bf8>
  40633c:	add	x1, x1, #0x9d4
  406340:	add	x2, x2, #0x717
  406344:	add	x4, x4, #0x939
  406348:	mov	w3, #0xa8e                 	// #2702
  40634c:	mov	w0, wzr
  406350:	bl	403a98 <log_assert_failed_realm@plt>
  406354:	adrp	x1, 41e000 <ascii_strlower_n@plt+0x19bf8>
  406358:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  40635c:	adrp	x4, 41e000 <ascii_strlower_n@plt+0x19bf8>
  406360:	add	x1, x1, #0xc0
  406364:	add	x2, x2, #0x717
  406368:	add	x4, x4, #0x939
  40636c:	mov	w3, #0xa57                 	// #2647
  406370:	mov	w0, wzr
  406374:	bl	403a98 <log_assert_failed_realm@plt>
  406378:	adrp	x1, 41e000 <ascii_strlower_n@plt+0x19bf8>
  40637c:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  406380:	adrp	x4, 41e000 <ascii_strlower_n@plt+0x19bf8>
  406384:	add	x1, x1, #0x115
  406388:	add	x2, x2, #0x717
  40638c:	add	x4, x4, #0x939
  406390:	mov	w3, #0xa58                 	// #2648
  406394:	mov	w0, wzr
  406398:	bl	403a98 <log_assert_failed_realm@plt>
  40639c:	adrp	x1, 41e000 <ascii_strlower_n@plt+0x19bf8>
  4063a0:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  4063a4:	adrp	x4, 41f000 <ascii_strlower_n@plt+0x1abf8>
  4063a8:	add	x1, x1, #0x9d4
  4063ac:	add	x2, x2, #0x717
  4063b0:	add	x4, x4, #0x59d
  4063b4:	mov	w3, #0xbac                 	// #2988
  4063b8:	mov	w0, wzr
  4063bc:	bl	403a98 <log_assert_failed_realm@plt>
  4063c0:	stp	x29, x30, [sp, #-48]!
  4063c4:	stp	x22, x21, [sp, #16]
  4063c8:	stp	x20, x19, [sp, #32]
  4063cc:	mov	x29, sp
  4063d0:	sub	sp, sp, #0x10
  4063d4:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  4063d8:	ldr	w8, [x8, #20]
  4063dc:	add	w8, w8, #0x1
  4063e0:	cmp	w8, #0xc
  4063e4:	b.hi	40648c <ascii_strlower_n@plt+0x2084>  // b.pmore
  4063e8:	adrp	x9, 424000 <ascii_strlower_n@plt+0x1fbf8>
  4063ec:	add	x9, x9, #0x472
  4063f0:	adr	x10, 406404 <ascii_strlower_n@plt+0x1ffc>
  4063f4:	ldrb	w11, [x9, x8]
  4063f8:	add	x10, x10, x11, lsl #2
  4063fc:	mov	x19, x2
  406400:	br	x10
  406404:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  406408:	ldrsw	x8, [x8, #128]
  40640c:	sxtw	x9, w0
  406410:	adrp	x0, 41f000 <ascii_strlower_n@plt+0x1abf8>
  406414:	add	x0, x0, #0xf1c
  406418:	b	4064d8 <ascii_strlower_n@plt+0x20d0>
  40641c:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  406420:	ldr	x8, [x8, #64]
  406424:	cbz	x8, 40670c <ascii_strlower_n@plt+0x2304>
  406428:	mov	x9, sp
  40642c:	mov	x20, sp
  406430:	sub	x1, x9, #0x20
  406434:	mov	sp, x1
  406438:	adrp	x10, 41e000 <ascii_strlower_n@plt+0x19bf8>
  40643c:	add	x10, x10, #0x932
  406440:	adrp	x11, 440000 <ascii_strlower_n@plt+0x3bbf8>
  406444:	adrp	x2, 424000 <ascii_strlower_n@plt+0x1fbf8>
  406448:	stp	x8, xzr, [x9, #-24]
  40644c:	stur	x10, [x9, #-32]
  406450:	str	wzr, [x11, #128]
  406454:	add	x2, x2, #0xa60
  406458:	mov	w0, #0x2                   	// #2
  40645c:	b	406554 <ascii_strlower_n@plt+0x214c>
  406460:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  406464:	ldrsw	x9, [x8, #128]
  406468:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  40646c:	ldr	x8, [x8, #88]
  406470:	sxtw	x10, w0
  406474:	adrp	x0, 41e000 <ascii_strlower_n@plt+0x19bf8>
  406478:	sub	x2, x10, x9
  40647c:	add	x3, x1, x9, lsl #3
  406480:	add	x0, x0, #0x892
  406484:	mov	x1, x8
  406488:	b	4064e4 <ascii_strlower_n@plt+0x20dc>
  40648c:	mov	w0, wzr
  406490:	b	406560 <ascii_strlower_n@plt+0x2158>
  406494:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  406498:	ldrsw	x8, [x8, #128]
  40649c:	sxtw	x9, w0
  4064a0:	adrp	x0, 41e000 <ascii_strlower_n@plt+0x19bf8>
  4064a4:	add	x0, x0, #0x8b7
  4064a8:	b	4064d8 <ascii_strlower_n@plt+0x20d0>
  4064ac:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  4064b0:	ldrsw	x8, [x8, #128]
  4064b4:	sxtw	x9, w0
  4064b8:	adrp	x0, 41e000 <ascii_strlower_n@plt+0x19bf8>
  4064bc:	add	x0, x0, #0x866
  4064c0:	b	4064d8 <ascii_strlower_n@plt+0x20d0>
  4064c4:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  4064c8:	ldrsw	x8, [x8, #128]
  4064cc:	sxtw	x9, w0
  4064d0:	adrp	x0, 41e000 <ascii_strlower_n@plt+0x19bf8>
  4064d4:	add	x0, x0, #0x88a
  4064d8:	sub	x2, x9, x8
  4064dc:	add	x3, x1, x8, lsl #3
  4064e0:	mov	x1, xzr
  4064e4:	mov	x4, x19
  4064e8:	mov	sp, x29
  4064ec:	ldp	x20, x19, [sp, #32]
  4064f0:	ldp	x22, x21, [sp, #16]
  4064f4:	ldp	x29, x30, [sp], #48
  4064f8:	b	406984 <ascii_strlower_n@plt+0x257c>
  4064fc:	adrp	x8, 41e000 <ascii_strlower_n@plt+0x19bf8>
  406500:	mov	x20, sp
  406504:	add	x8, x8, #0x8be
  406508:	b	406538 <ascii_strlower_n@plt+0x2130>
  40650c:	adrp	x8, 41e000 <ascii_strlower_n@plt+0x19bf8>
  406510:	mov	x20, sp
  406514:	add	x8, x8, #0x89b
  406518:	b	406538 <ascii_strlower_n@plt+0x2130>
  40651c:	adrp	x8, 41e000 <ascii_strlower_n@plt+0x19bf8>
  406520:	mov	x20, sp
  406524:	add	x8, x8, #0x8a6
  406528:	b	406538 <ascii_strlower_n@plt+0x2130>
  40652c:	adrp	x8, 41e000 <ascii_strlower_n@plt+0x19bf8>
  406530:	mov	x20, sp
  406534:	add	x8, x8, #0x8cb
  406538:	adrp	x2, 424000 <ascii_strlower_n@plt+0x1fbf8>
  40653c:	adrp	x9, 440000 <ascii_strlower_n@plt+0x3bbf8>
  406540:	add	x2, x2, #0xa60
  406544:	sub	x1, x29, #0x10
  406548:	mov	w0, #0x1                   	// #1
  40654c:	stp	x8, xzr, [x29, #-16]
  406550:	str	wzr, [x9, #128]
  406554:	mov	x3, x19
  406558:	bl	403b98 <dispatch_verb@plt>
  40655c:	mov	sp, x20
  406560:	mov	sp, x29
  406564:	ldp	x20, x19, [sp, #32]
  406568:	ldp	x22, x21, [sp, #16]
  40656c:	ldp	x29, x30, [sp], #48
  406570:	ret
  406574:	adrp	x22, 440000 <ascii_strlower_n@plt+0x3bbf8>
  406578:	ldr	x20, [x22, #64]
  40657c:	cbz	x20, 406730 <ascii_strlower_n@plt+0x2328>
  406580:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  406584:	ldr	x21, [x8, #24]
  406588:	cbz	x21, 4065c4 <ascii_strlower_n@plt+0x21bc>
  40658c:	mov	x0, x21
  406590:	bl	403c08 <strv_length@plt>
  406594:	mov	x2, x0
  406598:	adrp	x0, 41e000 <ascii_strlower_n@plt+0x19bf8>
  40659c:	add	x0, x0, #0xa0c
  4065a0:	mov	x1, x20
  4065a4:	mov	x3, x21
  4065a8:	mov	x4, x19
  4065ac:	bl	406984 <ascii_strlower_n@plt+0x257c>
  4065b0:	tbnz	w0, #31, 406560 <ascii_strlower_n@plt+0x2158>
  4065b4:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  4065b8:	ldr	x20, [x8, #32]
  4065bc:	cbnz	x20, 4065d4 <ascii_strlower_n@plt+0x21cc>
  4065c0:	b	406600 <ascii_strlower_n@plt+0x21f8>
  4065c4:	mov	w0, wzr
  4065c8:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  4065cc:	ldr	x20, [x8, #32]
  4065d0:	cbz	x20, 406600 <ascii_strlower_n@plt+0x21f8>
  4065d4:	ldr	x21, [x22, #64]
  4065d8:	mov	x0, x20
  4065dc:	bl	403c08 <strv_length@plt>
  4065e0:	mov	x2, x0
  4065e4:	adrp	x0, 41e000 <ascii_strlower_n@plt+0x19bf8>
  4065e8:	add	x0, x0, #0x292
  4065ec:	mov	x1, x21
  4065f0:	mov	x3, x20
  4065f4:	mov	x4, x19
  4065f8:	bl	406984 <ascii_strlower_n@plt+0x257c>
  4065fc:	tbnz	w0, #31, 406560 <ascii_strlower_n@plt+0x2158>
  406600:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  406604:	ldr	x20, [x8, #72]
  406608:	cbz	x20, 406638 <ascii_strlower_n@plt+0x2230>
  40660c:	ldr	x21, [x22, #64]
  406610:	mov	x0, x20
  406614:	bl	403c08 <strv_length@plt>
  406618:	mov	x2, x0
  40661c:	adrp	x0, 41f000 <ascii_strlower_n@plt+0x1abf8>
  406620:	add	x0, x0, #0xf55
  406624:	mov	x1, x21
  406628:	mov	x3, x20
  40662c:	mov	x4, x19
  406630:	bl	406984 <ascii_strlower_n@plt+0x257c>
  406634:	tbnz	w0, #31, 406560 <ascii_strlower_n@plt+0x2158>
  406638:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  40663c:	ldr	x8, [x8, #96]
  406640:	adrp	x20, 440000 <ascii_strlower_n@plt+0x3bbf8>
  406644:	add	x20, x20, #0x40
  406648:	cbz	x8, 40666c <ascii_strlower_n@plt+0x2264>
  40664c:	mov	x3, x20
  406650:	ldr	x1, [x3], #32
  406654:	adrp	x0, 41e000 <ascii_strlower_n@plt+0x19bf8>
  406658:	add	x0, x0, #0xa10
  40665c:	mov	w2, #0x1                   	// #1
  406660:	mov	x4, x19
  406664:	bl	406984 <ascii_strlower_n@plt+0x257c>
  406668:	tbnz	w0, #31, 406560 <ascii_strlower_n@plt+0x2158>
  40666c:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  406670:	ldr	x8, [x8, #104]
  406674:	cbz	x8, 406698 <ascii_strlower_n@plt+0x2290>
  406678:	mov	x3, x20
  40667c:	ldr	x1, [x3], #40
  406680:	adrp	x0, 41e000 <ascii_strlower_n@plt+0x19bf8>
  406684:	add	x0, x0, #0xa2c
  406688:	mov	w2, #0x1                   	// #1
  40668c:	mov	x4, x19
  406690:	bl	406984 <ascii_strlower_n@plt+0x257c>
  406694:	tbnz	w0, #31, 406560 <ascii_strlower_n@plt+0x2158>
  406698:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  40669c:	ldr	x8, [x8, #112]
  4066a0:	cbz	x8, 4066c4 <ascii_strlower_n@plt+0x22bc>
  4066a4:	mov	x3, x20
  4066a8:	ldr	x1, [x3], #48
  4066ac:	adrp	x0, 41f000 <ascii_strlower_n@plt+0x1abf8>
  4066b0:	add	x0, x0, #0xf59
  4066b4:	mov	w2, #0x1                   	// #1
  4066b8:	mov	x4, x19
  4066bc:	bl	406984 <ascii_strlower_n@plt+0x257c>
  4066c0:	tbnz	w0, #31, 406560 <ascii_strlower_n@plt+0x2158>
  4066c4:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  4066c8:	ldr	x8, [x8, #120]
  4066cc:	cbz	x8, 406560 <ascii_strlower_n@plt+0x2158>
  4066d0:	ldr	x1, [x20], #56
  4066d4:	adrp	x0, 41f000 <ascii_strlower_n@plt+0x1abf8>
  4066d8:	add	x0, x0, #0xf64
  4066dc:	mov	w2, #0x1                   	// #1
  4066e0:	mov	x3, x20
  4066e4:	b	4064e4 <ascii_strlower_n@plt+0x20dc>
  4066e8:	adrp	x1, 41f000 <ascii_strlower_n@plt+0x1abf8>
  4066ec:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  4066f0:	adrp	x4, 41f000 <ascii_strlower_n@plt+0x1abf8>
  4066f4:	add	x1, x1, #0xf6b
  4066f8:	add	x2, x2, #0x717
  4066fc:	add	x4, x4, #0xf2d
  406700:	mov	w3, #0xc9b                 	// #3227
  406704:	mov	w0, wzr
  406708:	bl	403a88 <log_assert_failed_unreachable_realm@plt>
  40670c:	adrp	x1, 41f000 <ascii_strlower_n@plt+0x1abf8>
  406710:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  406714:	adrp	x4, 41f000 <ascii_strlower_n@plt+0x1abf8>
  406718:	add	x1, x1, #0xf22
  40671c:	add	x2, x2, #0x717
  406720:	add	x4, x4, #0xf2d
  406724:	mov	w3, #0xc96                 	// #3222
  406728:	mov	w0, wzr
  40672c:	bl	403a98 <log_assert_failed_realm@plt>
  406730:	adrp	x1, 41f000 <ascii_strlower_n@plt+0x1abf8>
  406734:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  406738:	adrp	x4, 41f000 <ascii_strlower_n@plt+0x1abf8>
  40673c:	add	x1, x1, #0xf22
  406740:	add	x2, x2, #0x717
  406744:	add	x4, x4, #0xf2d
  406748:	mov	w3, #0xc67                 	// #3175
  40674c:	mov	w0, wzr
  406750:	bl	403a98 <log_assert_failed_realm@plt>
  406754:	stp	x29, x30, [sp, #-48]!
  406758:	stp	x22, x21, [sp, #16]
  40675c:	stp	x20, x19, [sp, #32]
  406760:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  406764:	ldrb	w8, [x8]
  406768:	mov	x29, sp
  40676c:	cbz	w8, 40677c <ascii_strlower_n@plt+0x2374>
  406770:	adrp	x0, 41f000 <ascii_strlower_n@plt+0x1abf8>
  406774:	add	x0, x0, #0x517
  406778:	bl	403bf8 <puts@plt>
  40677c:	adrp	x20, 440000 <ascii_strlower_n@plt+0x3bbf8>
  406780:	ldr	x0, [x20, #176]
  406784:	bl	403c18 <flockfile@plt>
  406788:	mov	w19, wzr
  40678c:	mov	w21, #0x8002                	// #32770
  406790:	mov	w22, #0xa                   	// #10
  406794:	b	4067ac <ascii_strlower_n@plt+0x23a4>
  406798:	mov	w1, #0xa                   	// #10
  40679c:	bl	403c28 <__overflow@plt>
  4067a0:	add	w19, w19, #0x1
  4067a4:	cmp	w19, w21
  4067a8:	b.eq	4067e0 <ascii_strlower_n@plt+0x23d8>  // b.none
  4067ac:	mov	w0, w19
  4067b0:	bl	41d148 <ascii_strlower_n@plt+0x18d40>
  4067b4:	cbz	x0, 4067a0 <ascii_strlower_n@plt+0x2398>
  4067b8:	ldr	x1, [x20, #176]
  4067bc:	bl	403c38 <fputs_unlocked@plt>
  4067c0:	ldr	x0, [x20, #176]
  4067c4:	ldp	x8, x9, [x0, #40]
  4067c8:	cmp	x8, x9
  4067cc:	b.cs	406798 <ascii_strlower_n@plt+0x2390>  // b.hs, b.nlast
  4067d0:	add	x9, x8, #0x1
  4067d4:	str	x9, [x0, #40]
  4067d8:	strb	w22, [x8]
  4067dc:	b	4067a0 <ascii_strlower_n@plt+0x2398>
  4067e0:	ldr	x0, [x20, #176]
  4067e4:	ldp	x20, x19, [sp, #32]
  4067e8:	ldp	x22, x21, [sp, #16]
  4067ec:	ldp	x29, x30, [sp], #48
  4067f0:	b	403c48 <funlockfile@plt>
  4067f4:	stp	x29, x30, [sp, #-48]!
  4067f8:	stp	x20, x19, [sp, #32]
  4067fc:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  406800:	ldrb	w8, [x8]
  406804:	str	x21, [sp, #16]
  406808:	mov	x29, sp
  40680c:	cbz	w8, 40681c <ascii_strlower_n@plt+0x2414>
  406810:	adrp	x0, 41f000 <ascii_strlower_n@plt+0x1abf8>
  406814:	add	x0, x0, #0x52b
  406818:	bl	403bf8 <puts@plt>
  40681c:	adrp	x20, 440000 <ascii_strlower_n@plt+0x3bbf8>
  406820:	ldr	x0, [x20, #176]
  406824:	bl	403c18 <flockfile@plt>
  406828:	mov	w19, wzr
  40682c:	mov	w21, #0xa                   	// #10
  406830:	b	406848 <ascii_strlower_n@plt+0x2440>
  406834:	mov	w1, #0xa                   	// #10
  406838:	bl	403c28 <__overflow@plt>
  40683c:	add	w19, w19, #0x1
  406840:	cmp	w19, #0x100
  406844:	b.eq	40687c <ascii_strlower_n@plt+0x2474>  // b.none
  406848:	mov	w0, w19
  40684c:	bl	41d93c <ascii_strlower_n@plt+0x19534>
  406850:	cbz	x0, 40683c <ascii_strlower_n@plt+0x2434>
  406854:	ldr	x1, [x20, #176]
  406858:	bl	403c38 <fputs_unlocked@plt>
  40685c:	ldr	x0, [x20, #176]
  406860:	ldp	x8, x9, [x0, #40]
  406864:	cmp	x8, x9
  406868:	b.cs	406834 <ascii_strlower_n@plt+0x242c>  // b.hs, b.nlast
  40686c:	add	x9, x8, #0x1
  406870:	str	x9, [x0, #40]
  406874:	strb	w21, [x8]
  406878:	b	40683c <ascii_strlower_n@plt+0x2434>
  40687c:	ldr	x0, [x20, #176]
  406880:	ldp	x20, x19, [sp, #32]
  406884:	ldr	x21, [sp, #16]
  406888:	ldp	x29, x30, [sp], #48
  40688c:	b	403c48 <funlockfile@plt>
  406890:	sub	sp, sp, #0x50
  406894:	adrp	x0, 41e000 <ascii_strlower_n@plt+0x19bf8>
  406898:	adrp	x1, 41e000 <ascii_strlower_n@plt+0x19bf8>
  40689c:	add	x0, x0, #0x326
  4068a0:	add	x1, x1, #0x331
  4068a4:	add	x2, sp, #0x8
  4068a8:	stp	x29, x30, [sp, #16]
  4068ac:	stp	x24, x23, [sp, #32]
  4068b0:	stp	x22, x21, [sp, #48]
  4068b4:	stp	x20, x19, [sp, #64]
  4068b8:	add	x29, sp, #0x10
  4068bc:	str	xzr, [sp, #8]
  4068c0:	bl	403a48 <terminal_urlify_man@plt>
  4068c4:	tbnz	w0, #31, 406940 <ascii_strlower_n@plt+0x2538>
  4068c8:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  4068cc:	ldr	x19, [x8, #144]
  4068d0:	bl	403b78 <colors_enabled@plt>
  4068d4:	adrp	x23, 41e000 <ascii_strlower_n@plt+0x19bf8>
  4068d8:	adrp	x22, 41f000 <ascii_strlower_n@plt+0x1abf8>
  4068dc:	add	x23, x23, #0x804
  4068e0:	add	x22, x22, #0x508
  4068e4:	tst	w0, #0x1
  4068e8:	csel	x20, x22, x23, ne  // ne = any
  4068ec:	bl	403b78 <colors_enabled@plt>
  4068f0:	adrp	x24, 41f000 <ascii_strlower_n@plt+0x1abf8>
  4068f4:	add	x24, x24, #0x512
  4068f8:	tst	w0, #0x1
  4068fc:	csel	x21, x24, x23, ne  // ne = any
  406900:	bl	403b78 <colors_enabled@plt>
  406904:	tst	w0, #0x1
  406908:	csel	x22, x22, x23, ne  // ne = any
  40690c:	bl	403b78 <colors_enabled@plt>
  406910:	ldr	x6, [sp, #8]
  406914:	tst	w0, #0x1
  406918:	adrp	x0, 41f000 <ascii_strlower_n@plt+0x1abf8>
  40691c:	csel	x5, x24, x23, ne  // ne = any
  406920:	add	x0, x0, #0x5df
  406924:	mov	x1, x19
  406928:	mov	x2, x20
  40692c:	mov	x3, x21
  406930:	mov	x4, x22
  406934:	bl	403a58 <printf@plt>
  406938:	mov	w19, wzr
  40693c:	b	406960 <ascii_strlower_n@plt+0x2558>
  406940:	adrp	x1, 41e000 <ascii_strlower_n@plt+0x19bf8>
  406944:	adrp	x3, 41f000 <ascii_strlower_n@plt+0x1abf8>
  406948:	add	x1, x1, #0x717
  40694c:	add	x3, x3, #0x5d3
  406950:	mov	w2, #0x9de                 	// #2526
  406954:	mov	w0, wzr
  406958:	bl	403a28 <log_oom_internal@plt>
  40695c:	mov	w19, w0
  406960:	ldr	x0, [sp, #8]
  406964:	bl	4039d8 <free@plt>
  406968:	mov	w0, w19
  40696c:	ldp	x20, x19, [sp, #64]
  406970:	ldp	x22, x21, [sp, #48]
  406974:	ldp	x24, x23, [sp, #32]
  406978:	ldp	x29, x30, [sp, #16]
  40697c:	add	sp, sp, #0x50
  406980:	ret
  406984:	stp	x29, x30, [sp, #-80]!
  406988:	str	x25, [sp, #16]
  40698c:	stp	x24, x23, [sp, #32]
  406990:	stp	x22, x21, [sp, #48]
  406994:	stp	x20, x19, [sp, #64]
  406998:	mov	x29, sp
  40699c:	cbz	x0, 406a5c <ascii_strlower_n@plt+0x2654>
  4069a0:	mov	x19, x4
  4069a4:	mov	x20, x3
  4069a8:	mov	x21, x2
  4069ac:	mov	x23, x1
  4069b0:	mov	x24, x0
  4069b4:	cbz	x2, 4069bc <ascii_strlower_n@plt+0x25b4>
  4069b8:	cbz	x20, 406a7c <ascii_strlower_n@plt+0x2674>
  4069bc:	cmp	x23, #0x0
  4069c0:	cinc	x25, x21, ne  // ne = any
  4069c4:	add	x8, x25, #0x2
  4069c8:	lsr	x9, x8, #61
  4069cc:	cbnz	x9, 406aa0 <ascii_strlower_n@plt+0x2698>
  4069d0:	cmp	x8, #0x80, lsl #12
  4069d4:	b.hi	406aac <ascii_strlower_n@plt+0x26a4>  // b.pmore
  4069d8:	lsl	x2, x8, #3
  4069dc:	add	x9, x2, #0xf
  4069e0:	mov	x8, sp
  4069e4:	and	x9, x9, #0xfffffffffffffff0
  4069e8:	sub	x22, x8, x9
  4069ec:	mov	sp, x22
  4069f0:	mov	x0, x22
  4069f4:	mov	w1, wzr
  4069f8:	bl	403c58 <memset@plt>
  4069fc:	mov	x0, x22
  406a00:	str	x24, [x0], #8
  406a04:	cbz	x23, 406a10 <ascii_strlower_n@plt+0x2608>
  406a08:	add	x0, x22, #0x10
  406a0c:	str	x23, [x22, #8]
  406a10:	cbz	x21, 406a20 <ascii_strlower_n@plt+0x2618>
  406a14:	lsl	x2, x21, #3
  406a18:	mov	x1, x20
  406a1c:	bl	403c68 <memcpy@plt>
  406a20:	adrp	x2, 424000 <ascii_strlower_n@plt+0x1fbf8>
  406a24:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  406a28:	add	w0, w25, #0x1
  406a2c:	add	x2, x2, #0xa60
  406a30:	mov	x1, x22
  406a34:	mov	x3, x19
  406a38:	str	wzr, [x8, #128]
  406a3c:	bl	403b98 <dispatch_verb@plt>
  406a40:	mov	sp, x29
  406a44:	ldp	x20, x19, [sp, #64]
  406a48:	ldp	x22, x21, [sp, #48]
  406a4c:	ldp	x24, x23, [sp, #32]
  406a50:	ldr	x25, [sp, #16]
  406a54:	ldp	x29, x30, [sp], #80
  406a58:	ret
  406a5c:	adrp	x1, 41f000 <ascii_strlower_n@plt+0x1abf8>
  406a60:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  406a64:	adrp	x4, 41f000 <ascii_strlower_n@plt+0x1abf8>
  406a68:	add	x1, x1, #0xf78
  406a6c:	add	x2, x2, #0x717
  406a70:	add	x4, x4, #0xf7d
  406a74:	mov	w3, #0xc36                 	// #3126
  406a78:	bl	403a98 <log_assert_failed_realm@plt>
  406a7c:	adrp	x1, 41f000 <ascii_strlower_n@plt+0x1abf8>
  406a80:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  406a84:	adrp	x4, 41f000 <ascii_strlower_n@plt+0x1abf8>
  406a88:	add	x1, x1, #0xfc2
  406a8c:	add	x2, x2, #0x717
  406a90:	add	x4, x4, #0xf7d
  406a94:	mov	w3, #0xc37                 	// #3127
  406a98:	mov	w0, wzr
  406a9c:	bl	403a98 <log_assert_failed_realm@plt>
  406aa0:	adrp	x1, 41f000 <ascii_strlower_n@plt+0x1abf8>
  406aa4:	add	x1, x1, #0xfd8
  406aa8:	b	406ab4 <ascii_strlower_n@plt+0x26ac>
  406aac:	adrp	x1, 420000 <ascii_strlower_n@plt+0x1bbf8>
  406ab0:	add	x1, x1, #0x5
  406ab4:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  406ab8:	adrp	x4, 41f000 <ascii_strlower_n@plt+0x1abf8>
  406abc:	add	x2, x2, #0x717
  406ac0:	add	x4, x4, #0xf7d
  406ac4:	mov	w3, #0xc3b                 	// #3131
  406ac8:	mov	w0, wzr
  406acc:	bl	403a98 <log_assert_failed_realm@plt>
  406ad0:	b	406890 <ascii_strlower_n@plt+0x2488>
  406ad4:	stp	x29, x30, [sp, #-80]!
  406ad8:	stp	x20, x19, [sp, #64]
  406adc:	mov	x19, x2
  406ae0:	cmp	w0, #0x2
  406ae4:	str	x25, [sp, #16]
  406ae8:	stp	x24, x23, [sp, #32]
  406aec:	stp	x22, x21, [sp, #48]
  406af0:	mov	x29, sp
  406af4:	b.lt	406b94 <ascii_strlower_n@plt+0x278c>  // b.tstop
  406af8:	strb	wzr, [x29, #28]
  406afc:	ldr	x0, [x1, #8]
  406b00:	cbz	x0, 406bb4 <ascii_strlower_n@plt+0x27ac>
  406b04:	adrp	x21, 41e000 <ascii_strlower_n@plt+0x19bf8>
  406b08:	adrp	x22, 420000 <ascii_strlower_n@plt+0x1bbf8>
  406b0c:	adrp	x23, 420000 <ascii_strlower_n@plt+0x1bbf8>
  406b10:	mov	w20, wzr
  406b14:	add	x25, x1, #0x10
  406b18:	add	x21, x21, #0x717
  406b1c:	add	x22, x22, #0x34
  406b20:	add	x23, x23, #0x40
  406b24:	b	406b50 <ascii_strlower_n@plt+0x2748>
  406b28:	ldr	w1, [x29, #24]
  406b2c:	add	x4, x29, #0x1c
  406b30:	mov	x0, x19
  406b34:	mov	x2, xzr
  406b38:	mov	w3, wzr
  406b3c:	bl	40976c <ascii_strlower_n@plt+0x5364>
  406b40:	cmp	w0, #0x0
  406b44:	csel	w20, w0, w20, lt  // lt = tstop
  406b48:	ldr	x0, [x25], #8
  406b4c:	cbz	x0, 406bb8 <ascii_strlower_n@plt+0x27b0>
  406b50:	add	x1, x29, #0x18
  406b54:	bl	403ad8 <parse_ifindex_or_ifname@plt>
  406b58:	tbz	w0, #31, 406b28 <ascii_strlower_n@plt+0x2720>
  406b5c:	mov	w24, w0
  406b60:	mov	w0, wzr
  406b64:	bl	4039a8 <log_get_max_level_realm@plt>
  406b68:	cmp	w0, #0x3
  406b6c:	b.lt	406b48 <ascii_strlower_n@plt+0x2740>  // b.tstop
  406b70:	ldur	x6, [x25, #-8]
  406b74:	mov	w0, #0x3                   	// #3
  406b78:	mov	w3, #0x729                 	// #1833
  406b7c:	mov	w1, w24
  406b80:	mov	x2, x21
  406b84:	mov	x4, x22
  406b88:	mov	x5, x23
  406b8c:	bl	4039b8 <log_internal_realm@plt>
  406b90:	b	406b48 <ascii_strlower_n@plt+0x2740>
  406b94:	mov	x0, x19
  406b98:	ldp	x20, x19, [sp, #64]
  406b9c:	ldp	x22, x21, [sp, #48]
  406ba0:	ldp	x24, x23, [sp, #32]
  406ba4:	ldr	x25, [sp, #16]
  406ba8:	mov	w1, wzr
  406bac:	ldp	x29, x30, [sp], #80
  406bb0:	b	409ee4 <ascii_strlower_n@plt+0x5adc>
  406bb4:	mov	w20, wzr
  406bb8:	mov	w0, w20
  406bbc:	ldp	x20, x19, [sp, #64]
  406bc0:	ldp	x22, x21, [sp, #48]
  406bc4:	ldp	x24, x23, [sp, #32]
  406bc8:	ldr	x25, [sp, #16]
  406bcc:	ldp	x29, x30, [sp], #80
  406bd0:	ret
  406bd4:	sub	sp, sp, #0x100
  406bd8:	stp	x29, x30, [sp, #160]
  406bdc:	stp	x28, x27, [sp, #176]
  406be0:	stp	x26, x25, [sp, #192]
  406be4:	stp	x24, x23, [sp, #208]
  406be8:	stp	x22, x21, [sp, #224]
  406bec:	stp	x20, x19, [sp, #240]
  406bf0:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  406bf4:	mov	x22, x1
  406bf8:	ldrh	w3, [x8, #40]
  406bfc:	ldr	x23, [x22, #8]!
  406c00:	mov	x19, x2
  406c04:	add	x29, sp, #0xa0
  406c08:	cbz	w3, 406c64 <ascii_strlower_n@plt+0x285c>
  406c0c:	cbz	x23, 4079cc <ascii_strlower_n@plt+0x35c4>
  406c10:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  406c14:	ldrh	w2, [x8, #44]
  406c18:	mov	x21, x1
  406c1c:	mov	x0, x19
  406c20:	mov	x1, x23
  406c24:	bl	40af78 <ascii_strlower_n@plt+0x6b70>
  406c28:	ldr	x1, [x21, #16]
  406c2c:	and	w20, w0, w0, asr #31
  406c30:	cbz	x1, 4079d0 <ascii_strlower_n@plt+0x35c8>
  406c34:	adrp	x22, 440000 <ascii_strlower_n@plt+0x3bbf8>
  406c38:	add	x21, x21, #0x18
  406c3c:	add	x22, x22, #0x28
  406c40:	ldrh	w2, [x22, #4]
  406c44:	ldrh	w3, [x22]
  406c48:	mov	x0, x19
  406c4c:	bl	40af78 <ascii_strlower_n@plt+0x6b70>
  406c50:	ldr	x1, [x21], #8
  406c54:	cmp	w0, #0x0
  406c58:	csel	w20, w0, w20, lt  // lt = tstop
  406c5c:	cbnz	x1, 406c40 <ascii_strlower_n@plt+0x2838>
  406c60:	b	4079d0 <ascii_strlower_n@plt+0x35c8>
  406c64:	mov	w20, wzr
  406c68:	cbz	x23, 4079d0 <ascii_strlower_n@plt+0x35c8>
  406c6c:	adrp	x24, 420000 <ascii_strlower_n@plt+0x1bbf8>
  406c70:	adrp	x28, 41e000 <ascii_strlower_n@plt+0x19bf8>
  406c74:	adrp	x26, 420000 <ascii_strlower_n@plt+0x1bbf8>
  406c78:	adrp	x27, 420000 <ascii_strlower_n@plt+0x1bbf8>
  406c7c:	adrp	x21, 420000 <ascii_strlower_n@plt+0x1bbf8>
  406c80:	add	x24, x24, #0x89a
  406c84:	add	x28, x28, #0x717
  406c88:	add	x26, x26, #0xdf0
  406c8c:	add	x27, x27, #0x1b6
  406c90:	add	x21, x21, #0xe25
  406c94:	b	406cb8 <ascii_strlower_n@plt+0x28b0>
  406c98:	mov	x0, x19
  406c9c:	mov	x1, x23
  406ca0:	bl	40b7c0 <ascii_strlower_n@plt+0x73b8>
  406ca4:	mov	w25, w0
  406ca8:	ldr	x23, [x22, #8]!
  406cac:	cmp	w25, #0x0
  406cb0:	csel	w20, w25, w20, lt  // lt = tstop
  406cb4:	cbz	x23, 4079d0 <ascii_strlower_n@plt+0x35c8>
  406cb8:	mov	w2, #0x4                   	// #4
  406cbc:	mov	x0, x23
  406cc0:	mov	x1, x24
  406cc4:	bl	403c78 <strncmp@plt>
  406cc8:	cbz	w0, 406c98 <ascii_strlower_n@plt+0x2890>
  406ccc:	add	x1, sp, #0x4c
  406cd0:	add	x2, sp, #0x38
  406cd4:	add	x3, sp, #0x48
  406cd8:	mov	x0, x23
  406cdc:	bl	403c88 <in_addr_ifindex_from_string_auto@plt>
  406ce0:	tbnz	w0, #31, 406f84 <ascii_strlower_n@plt+0x2b7c>
  406ce4:	ldp	w2, w23, [sp, #72]
  406ce8:	stp	xzr, xzr, [x29, #-16]
  406cec:	stp	xzr, xzr, [x29, #-40]
  406cf0:	stur	xzr, [x29, #-24]
  406cf4:	stur	w2, [x29, #-72]
  406cf8:	stur	xzr, [x29, #-48]
  406cfc:	cbz	x19, 407a18 <ascii_strlower_n@plt+0x3610>
  406d00:	orr	w8, w23, #0x8
  406d04:	cmp	w8, #0xa
  406d08:	b.ne	4079f4 <ascii_strlower_n@plt+0x35ec>  // b.any
  406d0c:	cmp	w2, #0x1
  406d10:	b.ge	406d20 <ascii_strlower_n@plt+0x2918>  // b.tcont
  406d14:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  406d18:	ldr	w2, [x8, #48]
  406d1c:	stur	w2, [x29, #-72]
  406d20:	add	x1, sp, #0x38
  406d24:	sub	x3, x29, #0x30
  406d28:	mov	w0, w23
  406d2c:	bl	403c98 <in_addr_ifindex_to_string@plt>
  406d30:	tbnz	w0, #31, 407408 <ascii_strlower_n@plt+0x3000>
  406d34:	mov	w0, wzr
  406d38:	bl	4039a8 <log_get_max_level_realm@plt>
  406d3c:	cmp	w0, #0x7
  406d40:	b.lt	406d68 <ascii_strlower_n@plt+0x2960>  // b.tstop
  406d44:	ldur	x6, [x29, #-48]
  406d48:	adrp	x5, 420000 <ascii_strlower_n@plt+0x1bbf8>
  406d4c:	mov	w0, #0x7                   	// #7
  406d50:	mov	w3, #0x11d                 	// #285
  406d54:	mov	w1, wzr
  406d58:	mov	x2, x28
  406d5c:	mov	x4, x26
  406d60:	add	x5, x5, #0xe00
  406d64:	bl	4039b8 <log_internal_realm@plt>
  406d68:	adrp	x3, 420000 <ascii_strlower_n@plt+0x1bbf8>
  406d6c:	adrp	x4, 420000 <ascii_strlower_n@plt+0x1bbf8>
  406d70:	adrp	x5, 420000 <ascii_strlower_n@plt+0x1bbf8>
  406d74:	sub	x1, x29, #0x8
  406d78:	mov	x0, x19
  406d7c:	mov	x2, x27
  406d80:	add	x3, x3, #0x661
  406d84:	add	x4, x4, #0x91e
  406d88:	add	x5, x5, #0xe0e
  406d8c:	bl	403ca8 <sd_bus_message_new_method_call@plt>
  406d90:	tbnz	w0, #31, 407424 <ascii_strlower_n@plt+0x301c>
  406d94:	ldur	x0, [x29, #-8]
  406d98:	ldur	w2, [x29, #-72]
  406d9c:	adrp	x1, 420000 <ascii_strlower_n@plt+0x1bbf8>
  406da0:	add	x1, x1, #0xe1d
  406da4:	mov	w3, w23
  406da8:	bl	403cb8 <sd_bus_message_append@plt>
  406dac:	tbnz	w0, #31, 407464 <ascii_strlower_n@plt+0x305c>
  406db0:	orr	w8, w23, #0x8
  406db4:	cmp	w8, #0xa
  406db8:	b.ne	407a60 <ascii_strlower_n@plt+0x3658>  // b.any
  406dbc:	ldur	x0, [x29, #-8]
  406dc0:	cmp	w23, #0xa
  406dc4:	mov	w8, #0x4                   	// #4
  406dc8:	mov	w9, #0x10                  	// #16
  406dcc:	csel	x3, x9, x8, eq  // eq = none
  406dd0:	add	x2, sp, #0x38
  406dd4:	mov	w1, #0x79                  	// #121
  406dd8:	bl	403cc8 <sd_bus_message_append_array@plt>
  406ddc:	tbnz	w0, #31, 4074f0 <ascii_strlower_n@plt+0x30e8>
  406de0:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  406de4:	ldur	x0, [x29, #-8]
  406de8:	ldr	x2, [x8, #80]
  406dec:	adrp	x1, 420000 <ascii_strlower_n@plt+0x1bbf8>
  406df0:	add	x1, x1, #0x70
  406df4:	bl	403cb8 <sd_bus_message_append@plt>
  406df8:	tbnz	w0, #31, 407564 <ascii_strlower_n@plt+0x315c>
  406dfc:	mov	w0, #0x1                   	// #1
  406e00:	bl	403cd8 <now@plt>
  406e04:	ldur	x1, [x29, #-8]
  406e08:	mov	w2, #0xe00                 	// #3584
  406e0c:	mov	x23, x0
  406e10:	sub	x3, x29, #0x28
  406e14:	sub	x4, x29, #0x10
  406e18:	movk	w2, #0x727, lsl #16
  406e1c:	mov	x0, x19
  406e20:	bl	403ce8 <sd_bus_call@plt>
  406e24:	tbnz	w0, #31, 4075b4 <ascii_strlower_n@plt+0x31ac>
  406e28:	mov	w0, #0x1                   	// #1
  406e2c:	bl	403cd8 <now@plt>
  406e30:	ldur	x8, [x29, #-16]
  406e34:	adrp	x2, 420000 <ascii_strlower_n@plt+0x1bbf8>
  406e38:	str	x0, [sp, #48]
  406e3c:	mov	w1, #0x61                  	// #97
  406e40:	mov	x0, x8
  406e44:	add	x2, x2, #0xe20
  406e48:	bl	403cf8 <sd_bus_message_enter_container@plt>
  406e4c:	tbnz	w0, #31, 407740 <ascii_strlower_n@plt+0x3338>
  406e50:	ldur	x0, [x29, #-16]
  406e54:	mov	w1, #0x72                  	// #114
  406e58:	mov	x2, x21
  406e5c:	bl	403cf8 <sd_bus_message_enter_container@plt>
  406e60:	cmp	w0, #0x1
  406e64:	b.lt	407790 <ascii_strlower_n@plt+0x3388>  // b.tstop
  406e68:	str	x23, [sp, #40]
  406e6c:	adrp	x23, 420000 <ascii_strlower_n@plt+0x1bbf8>
  406e70:	mov	w21, wzr
  406e74:	add	x23, x23, #0xe25
  406e78:	ldur	x0, [x29, #-16]
  406e7c:	sub	x2, x29, #0x48
  406e80:	sub	x3, x29, #0x38
  406e84:	mov	x1, x23
  406e88:	bl	403d08 <sd_bus_message_read@plt>
  406e8c:	tbnz	w0, #31, 407760 <ascii_strlower_n@plt+0x3358>
  406e90:	ldur	x0, [x29, #-16]
  406e94:	bl	403d18 <sd_bus_message_exit_container@plt>
  406e98:	tbnz	w0, #31, 407760 <ascii_strlower_n@plt+0x3358>
  406e9c:	ldur	x25, [x29, #-48]
  406ea0:	mov	x0, x25
  406ea4:	bl	403d28 <strlen@plt>
  406ea8:	adrp	x23, 41e000 <ascii_strlower_n@plt+0x19bf8>
  406eac:	adrp	x8, 420000 <ascii_strlower_n@plt+0x1bbf8>
  406eb0:	adrp	x9, 420000 <ascii_strlower_n@plt+0x1bbf8>
  406eb4:	cmp	w21, #0x0
  406eb8:	add	x23, x23, #0x804
  406ebc:	add	x8, x8, #0xbb3
  406ec0:	add	x9, x9, #0xe35
  406ec4:	mov	x26, x0
  406ec8:	csel	x25, x25, x23, eq  // eq = none
  406ecc:	csel	x27, x9, x8, eq  // eq = none
  406ed0:	bl	403b78 <colors_enabled@plt>
  406ed4:	ldur	x28, [x29, #-56]
  406ed8:	adrp	x8, 41f000 <ascii_strlower_n@plt+0x1abf8>
  406edc:	tst	w0, #0x1
  406ee0:	add	x8, x8, #0x508
  406ee4:	csel	x24, x8, x23, ne  // ne = any
  406ee8:	bl	403b78 <colors_enabled@plt>
  406eec:	adrp	x8, 41f000 <ascii_strlower_n@plt+0x1abf8>
  406ef0:	tst	w0, #0x1
  406ef4:	add	x8, x8, #0x512
  406ef8:	adrp	x0, 420000 <ascii_strlower_n@plt+0x1bbf8>
  406efc:	csel	x6, x8, x23, ne  // ne = any
  406f00:	add	x0, x0, #0xe28
  406f04:	mov	w1, w26
  406f08:	adrp	x26, 420000 <ascii_strlower_n@plt+0x1bbf8>
  406f0c:	mov	x2, x25
  406f10:	mov	x3, x27
  406f14:	adrp	x27, 420000 <ascii_strlower_n@plt+0x1bbf8>
  406f18:	mov	x4, x24
  406f1c:	adrp	x24, 420000 <ascii_strlower_n@plt+0x1bbf8>
  406f20:	mov	x5, x28
  406f24:	adrp	x28, 41e000 <ascii_strlower_n@plt+0x19bf8>
  406f28:	add	x26, x26, #0xdf0
  406f2c:	add	x27, x27, #0x1b6
  406f30:	add	x24, x24, #0x89a
  406f34:	add	x28, x28, #0x717
  406f38:	bl	403a58 <printf@plt>
  406f3c:	ldur	w1, [x29, #-72]
  406f40:	bl	40be0c <ascii_strlower_n@plt+0x7a04>
  406f44:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  406f48:	ldr	x1, [x8, #176]
  406f4c:	mov	w0, #0xa                   	// #10
  406f50:	bl	403d38 <fputc@plt>
  406f54:	ldur	x0, [x29, #-16]
  406f58:	adrp	x23, 420000 <ascii_strlower_n@plt+0x1bbf8>
  406f5c:	add	x23, x23, #0xe25
  406f60:	mov	w1, #0x72                  	// #114
  406f64:	mov	x2, x23
  406f68:	add	w21, w21, #0x1
  406f6c:	bl	403cf8 <sd_bus_message_enter_container@plt>
  406f70:	cmp	w0, #0x0
  406f74:	b.gt	406e78 <ascii_strlower_n@plt+0x2a70>
  406f78:	ldr	x23, [sp, #40]
  406f7c:	mov	w25, w0
  406f80:	b	407798 <ascii_strlower_n@plt+0x3390>
  406f84:	ldr	x23, [x22]
  406f88:	stp	xzr, xzr, [x29, #-16]
  406f8c:	stp	xzr, xzr, [x29, #-40]
  406f90:	stur	xzr, [x29, #-24]
  406f94:	stur	xzr, [x29, #-48]
  406f98:	cbz	x23, 407a3c <ascii_strlower_n@plt+0x3634>
  406f9c:	mov	w0, wzr
  406fa0:	bl	4039a8 <log_get_max_level_realm@plt>
  406fa4:	cmp	w0, #0x7
  406fa8:	b.lt	407010 <ascii_strlower_n@plt+0x2c08>  // b.tstop
  406fac:	adrp	x25, 440000 <ascii_strlower_n@plt+0x3bbf8>
  406fb0:	add	x25, x25, #0x34
  406fb4:	ldr	w0, [x25]
  406fb8:	bl	403d48 <af_to_name@plt>
  406fbc:	ldur	x8, [x25, #12]
  406fc0:	adrp	x9, 420000 <ascii_strlower_n@plt+0x1bbf8>
  406fc4:	cmp	x0, #0x0
  406fc8:	add	x9, x9, #0x91c
  406fcc:	csel	x7, x9, x0, eq  // eq = none
  406fd0:	cbz	x8, 406fdc <ascii_strlower_n@plt+0x2bd4>
  406fd4:	ldrb	w9, [x8]
  406fd8:	cbnz	w9, 406fe4 <ascii_strlower_n@plt+0x2bdc>
  406fdc:	adrp	x8, 420000 <ascii_strlower_n@plt+0x1bbf8>
  406fe0:	add	x8, x8, #0x91c
  406fe4:	adrp	x4, 420000 <ascii_strlower_n@plt+0x1bbf8>
  406fe8:	adrp	x5, 420000 <ascii_strlower_n@plt+0x1bbf8>
  406fec:	mov	w0, #0x7                   	// #7
  406ff0:	mov	w3, #0xa8                  	// #168
  406ff4:	mov	w1, wzr
  406ff8:	mov	x2, x28
  406ffc:	add	x4, x4, #0xe73
  407000:	add	x5, x5, #0xe80
  407004:	mov	x6, x23
  407008:	str	x8, [sp]
  40700c:	bl	4039b8 <log_internal_realm@plt>
  407010:	adrp	x3, 420000 <ascii_strlower_n@plt+0x1bbf8>
  407014:	adrp	x4, 420000 <ascii_strlower_n@plt+0x1bbf8>
  407018:	adrp	x5, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40701c:	sub	x1, x29, #0x8
  407020:	mov	x0, x19
  407024:	mov	x2, x27
  407028:	add	x3, x3, #0x661
  40702c:	add	x4, x4, #0x91e
  407030:	add	x5, x5, #0xea8
  407034:	bl	403ca8 <sd_bus_message_new_method_call@plt>
  407038:	tbnz	w0, #31, 407444 <ascii_strlower_n@plt+0x303c>
  40703c:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  407040:	add	x8, x8, #0x30
  407044:	ldur	x0, [x29, #-8]
  407048:	ldp	w2, w4, [x8]
  40704c:	ldr	x5, [x8, #32]
  407050:	adrp	x1, 420000 <ascii_strlower_n@plt+0x1bbf8>
  407054:	add	x1, x1, #0xeb8
  407058:	mov	x3, x23
  40705c:	bl	403cb8 <sd_bus_message_append@plt>
  407060:	tbnz	w0, #31, 4074a0 <ascii_strlower_n@plt+0x3098>
  407064:	mov	w0, #0x1                   	// #1
  407068:	bl	403cd8 <now@plt>
  40706c:	ldur	x1, [x29, #-8]
  407070:	mov	w2, #0xe00                 	// #3584
  407074:	str	x0, [sp, #48]
  407078:	sub	x3, x29, #0x28
  40707c:	sub	x4, x29, #0x10
  407080:	movk	w2, #0x727, lsl #16
  407084:	mov	x0, x19
  407088:	bl	403ce8 <sd_bus_call@plt>
  40708c:	tbnz	w0, #31, 407514 <ascii_strlower_n@plt+0x310c>
  407090:	mov	w0, #0x1                   	// #1
  407094:	bl	403cd8 <now@plt>
  407098:	ldur	x8, [x29, #-16]
  40709c:	adrp	x2, 420000 <ascii_strlower_n@plt+0x1bbf8>
  4070a0:	str	x0, [sp, #32]
  4070a4:	mov	w1, #0x61                  	// #97
  4070a8:	mov	x0, x8
  4070ac:	add	x2, x2, #0x653
  4070b0:	bl	403cf8 <sd_bus_message_enter_container@plt>
  4070b4:	tbnz	w0, #31, 407594 <ascii_strlower_n@plt+0x318c>
  4070b8:	ldur	x0, [x29, #-16]
  4070bc:	adrp	x2, 420000 <ascii_strlower_n@plt+0x1bbf8>
  4070c0:	mov	w1, #0x72                  	// #114
  4070c4:	add	x2, x2, #0x422
  4070c8:	bl	403cf8 <sd_bus_message_enter_container@plt>
  4070cc:	cmp	w0, #0x1
  4070d0:	b.lt	407608 <ascii_strlower_n@plt+0x3200>  // b.tstop
  4070d4:	str	wzr, [sp, #40]
  4070d8:	ldur	x0, [x29, #-16]
  4070dc:	adrp	x1, 420000 <ascii_strlower_n@plt+0x1bbf8>
  4070e0:	sub	x2, x29, #0x3c
  4070e4:	sub	x3, x29, #0x40
  4070e8:	add	x1, x1, #0xe1d
  4070ec:	stur	xzr, [x29, #-56]
  4070f0:	bl	403d08 <sd_bus_message_read@plt>
  4070f4:	tbnz	w0, #31, 407218 <ascii_strlower_n@plt+0x2e10>
  4070f8:	ldur	x0, [x29, #-16]
  4070fc:	sub	x2, x29, #0x48
  407100:	add	x3, sp, #0x50
  407104:	mov	w1, #0x79                  	// #121
  407108:	bl	403d58 <sd_bus_message_read_array@plt>
  40710c:	tbnz	w0, #31, 407238 <ascii_strlower_n@plt+0x2e30>
  407110:	ldur	x0, [x29, #-16]
  407114:	bl	403d18 <sd_bus_message_exit_container@plt>
  407118:	tbnz	w0, #31, 407258 <ascii_strlower_n@plt+0x2e50>
  40711c:	ldur	w26, [x29, #-64]
  407120:	orr	w8, w26, #0x8
  407124:	cmp	w8, #0xa
  407128:	b.ne	4072b0 <ascii_strlower_n@plt+0x2ea8>  // b.any
  40712c:	b.ne	407a60 <ascii_strlower_n@plt+0x3658>  // b.any
  407130:	ldr	x27, [sp, #80]
  407134:	cmp	w26, #0xa
  407138:	mov	w8, #0x4                   	// #4
  40713c:	mov	w9, #0x10                  	// #16
  407140:	csel	x8, x9, x8, eq  // eq = none
  407144:	cmp	x27, x8
  407148:	b.ne	407310 <ascii_strlower_n@plt+0x2f08>  // b.any
  40714c:	ldur	x1, [x29, #-72]
  407150:	ldur	w2, [x29, #-60]
  407154:	sub	x3, x29, #0x38
  407158:	mov	w0, w26
  40715c:	bl	403c98 <in_addr_ifindex_to_string@plt>
  407160:	tbnz	w0, #31, 4073b4 <ascii_strlower_n@plt+0x2fac>
  407164:	mov	x0, x23
  407168:	bl	403d28 <strlen@plt>
  40716c:	ldr	w26, [sp, #40]
  407170:	adrp	x24, 41e000 <ascii_strlower_n@plt+0x19bf8>
  407174:	add	x24, x24, #0x804
  407178:	adrp	x9, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40717c:	cmp	w26, #0x0
  407180:	csel	x8, x23, x24, eq  // eq = none
  407184:	stp	x8, x0, [sp, #16]
  407188:	adrp	x8, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40718c:	add	x8, x8, #0xbb3
  407190:	add	x9, x9, #0xe35
  407194:	csel	x27, x9, x8, eq  // eq = none
  407198:	bl	403b78 <colors_enabled@plt>
  40719c:	ldur	x28, [x29, #-56]
  4071a0:	adrp	x8, 41f000 <ascii_strlower_n@plt+0x1abf8>
  4071a4:	tst	w0, #0x1
  4071a8:	add	x8, x8, #0x508
  4071ac:	csel	x21, x8, x24, ne  // ne = any
  4071b0:	bl	403b78 <colors_enabled@plt>
  4071b4:	ldp	x2, x1, [sp, #16]
  4071b8:	adrp	x8, 41f000 <ascii_strlower_n@plt+0x1abf8>
  4071bc:	tst	w0, #0x1
  4071c0:	add	x8, x8, #0x512
  4071c4:	adrp	x0, 420000 <ascii_strlower_n@plt+0x1bbf8>
  4071c8:	csel	x6, x8, x24, ne  // ne = any
  4071cc:	add	x0, x0, #0xe28
  4071d0:	adrp	x24, 420000 <ascii_strlower_n@plt+0x1bbf8>
  4071d4:	mov	x3, x27
  4071d8:	mov	x4, x21
  4071dc:	mov	x5, x28
  4071e0:	adrp	x28, 41e000 <ascii_strlower_n@plt+0x19bf8>
  4071e4:	add	x24, x24, #0x89a
  4071e8:	add	x28, x28, #0x717
  4071ec:	bl	403a58 <printf@plt>
  4071f0:	ldur	w1, [x29, #-60]
  4071f4:	bl	40be0c <ascii_strlower_n@plt+0x7a04>
  4071f8:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  4071fc:	ldr	x1, [x8, #176]
  407200:	mov	w0, #0xa                   	// #10
  407204:	bl	403d38 <fputc@plt>
  407208:	mov	w21, wzr
  40720c:	add	w26, w26, #0x1
  407210:	str	w26, [sp, #40]
  407214:	b	407370 <ascii_strlower_n@plt+0x2f68>
  407218:	mov	w26, w0
  40721c:	mov	w0, wzr
  407220:	bl	4039a8 <log_get_max_level_realm@plt>
  407224:	cmp	w0, #0x3
  407228:	b.lt	40729c <ascii_strlower_n@plt+0x2e94>  // b.tstop
  40722c:	mov	w0, #0x3                   	// #3
  407230:	mov	w3, #0xce                  	// #206
  407234:	b	407274 <ascii_strlower_n@plt+0x2e6c>
  407238:	mov	w26, w0
  40723c:	mov	w0, wzr
  407240:	bl	4039a8 <log_get_max_level_realm@plt>
  407244:	cmp	w0, #0x3
  407248:	b.lt	40729c <ascii_strlower_n@plt+0x2e94>  // b.tstop
  40724c:	mov	w0, #0x3                   	// #3
  407250:	mov	w3, #0xd2                  	// #210
  407254:	b	407274 <ascii_strlower_n@plt+0x2e6c>
  407258:	mov	w26, w0
  40725c:	mov	w0, wzr
  407260:	bl	4039a8 <log_get_max_level_realm@plt>
  407264:	cmp	w0, #0x3
  407268:	b.lt	40729c <ascii_strlower_n@plt+0x2e94>  // b.tstop
  40726c:	mov	w0, #0x3                   	// #3
  407270:	mov	w3, #0xd6                  	// #214
  407274:	adrp	x4, 420000 <ascii_strlower_n@plt+0x1bbf8>
  407278:	adrp	x5, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40727c:	mov	w1, w26
  407280:	mov	x2, x28
  407284:	add	x4, x4, #0xe73
  407288:	add	x5, x5, #0x998
  40728c:	bl	4039b8 <log_internal_realm@plt>
  407290:	mov	w25, w0
  407294:	mov	w21, #0x1                   	// #1
  407298:	b	407378 <ascii_strlower_n@plt+0x2f70>
  40729c:	mov	w8, wzr
  4072a0:	neg	w9, w26
  4072a4:	sub	w25, w8, w9, uxtb
  4072a8:	mov	w21, #0x1                   	// #1
  4072ac:	b	407378 <ascii_strlower_n@plt+0x2f70>
  4072b0:	mov	w0, wzr
  4072b4:	bl	4039a8 <log_get_max_level_realm@plt>
  4072b8:	cmp	w0, #0x7
  4072bc:	b.lt	407308 <ascii_strlower_n@plt+0x2f00>  // b.tstop
  4072c0:	mov	w0, w26
  4072c4:	bl	403d48 <af_to_name@plt>
  4072c8:	adrp	x8, 420000 <ascii_strlower_n@plt+0x1bbf8>
  4072cc:	cmp	x0, #0x0
  4072d0:	add	x8, x8, #0xee4
  4072d4:	adrp	x4, 420000 <ascii_strlower_n@plt+0x1bbf8>
  4072d8:	adrp	x5, 420000 <ascii_strlower_n@plt+0x1bbf8>
  4072dc:	csel	x8, x8, x0, eq  // eq = none
  4072e0:	mov	w0, #0x7                   	// #7
  4072e4:	mov	w3, #0xd9                  	// #217
  4072e8:	mov	w1, wzr
  4072ec:	mov	x2, x28
  4072f0:	add	x4, x4, #0xe73
  4072f4:	add	x5, x5, #0xebd
  4072f8:	mov	x6, x23
  4072fc:	mov	w7, w26
  407300:	str	x8, [sp]
  407304:	bl	4039b8 <log_internal_realm@plt>
  407308:	mov	w21, #0x4                   	// #4
  40730c:	b	407378 <ascii_strlower_n@plt+0x2f70>
  407310:	mov	w0, wzr
  407314:	bl	4039a8 <log_get_max_level_realm@plt>
  407318:	cmp	w0, #0x3
  40731c:	b.lt	407368 <ascii_strlower_n@plt+0x2f60>  // b.tstop
  407320:	mov	w0, w26
  407324:	bl	403d48 <af_to_name@plt>
  407328:	adrp	x8, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40732c:	cmp	x0, #0x0
  407330:	add	x8, x8, #0xee4
  407334:	adrp	x4, 420000 <ascii_strlower_n@plt+0x1bbf8>
  407338:	adrp	x5, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40733c:	csel	x8, x8, x0, eq  // eq = none
  407340:	mov	w0, #0x3                   	// #3
  407344:	mov	w3, #0xde                  	// #222
  407348:	mov	w1, wzr
  40734c:	mov	x2, x28
  407350:	add	x4, x4, #0xe73
  407354:	add	x5, x5, #0xeec
  407358:	mov	x6, x23
  40735c:	mov	x7, x27
  407360:	str	x8, [sp]
  407364:	bl	4039b8 <log_internal_realm@plt>
  407368:	mov	w25, #0xffffffea            	// #-22
  40736c:	mov	w21, #0x1                   	// #1
  407370:	adrp	x27, 420000 <ascii_strlower_n@plt+0x1bbf8>
  407374:	add	x27, x27, #0x1b6
  407378:	ldur	x0, [x29, #-56]
  40737c:	bl	4039d8 <free@plt>
  407380:	orr	w8, w21, #0x4
  407384:	cmp	w8, #0x4
  407388:	b.ne	4076d0 <ascii_strlower_n@plt+0x32c8>  // b.any
  40738c:	ldur	x0, [x29, #-16]
  407390:	adrp	x2, 420000 <ascii_strlower_n@plt+0x1bbf8>
  407394:	mov	w1, #0x72                  	// #114
  407398:	add	x2, x2, #0x422
  40739c:	bl	403cf8 <sd_bus_message_enter_container@plt>
  4073a0:	adrp	x21, 420000 <ascii_strlower_n@plt+0x1bbf8>
  4073a4:	cmp	w0, #0x0
  4073a8:	add	x21, x21, #0xe25
  4073ac:	b.gt	4070d8 <ascii_strlower_n@plt+0x2cd0>
  4073b0:	b	4076f4 <ascii_strlower_n@plt+0x32ec>
  4073b4:	mov	w26, w0
  4073b8:	mov	w0, wzr
  4073bc:	bl	4039a8 <log_get_max_level_realm@plt>
  4073c0:	cmp	w0, #0x3
  4073c4:	b.lt	4073f8 <ascii_strlower_n@plt+0x2ff0>  // b.tstop
  4073c8:	adrp	x4, 420000 <ascii_strlower_n@plt+0x1bbf8>
  4073cc:	adrp	x5, 420000 <ascii_strlower_n@plt+0x1bbf8>
  4073d0:	mov	w0, #0x3                   	// #3
  4073d4:	mov	w3, #0xe4                  	// #228
  4073d8:	mov	w1, w26
  4073dc:	mov	x2, x28
  4073e0:	add	x4, x4, #0xe73
  4073e4:	add	x5, x5, #0xf34
  4073e8:	mov	x6, x23
  4073ec:	bl	4039b8 <log_internal_realm@plt>
  4073f0:	mov	w25, w0
  4073f4:	b	40736c <ascii_strlower_n@plt+0x2f64>
  4073f8:	mov	w8, wzr
  4073fc:	neg	w9, w26
  407400:	sub	w25, w8, w9, uxtb
  407404:	b	40736c <ascii_strlower_n@plt+0x2f64>
  407408:	mov	w2, #0x11b                 	// #283
  40740c:	mov	w0, wzr
  407410:	mov	x1, x28
  407414:	mov	x3, x26
  407418:	bl	403a28 <log_oom_internal@plt>
  40741c:	mov	w25, w0
  407420:	b	40795c <ascii_strlower_n@plt+0x3554>
  407424:	mov	w25, w0
  407428:	mov	w0, wzr
  40742c:	bl	4039a8 <log_get_max_level_realm@plt>
  407430:	cmp	w0, #0x3
  407434:	b.lt	407950 <ascii_strlower_n@plt+0x3548>  // b.tstop
  407438:	mov	w0, #0x3                   	// #3
  40743c:	mov	w3, #0x127                 	// #295
  407440:	b	407480 <ascii_strlower_n@plt+0x3078>
  407444:	mov	w25, w0
  407448:	mov	w0, wzr
  40744c:	bl	4039a8 <log_get_max_level_realm@plt>
  407450:	cmp	w0, #0x3
  407454:	b.lt	40783c <ascii_strlower_n@plt+0x3434>  // b.tstop
  407458:	mov	w0, #0x3                   	// #3
  40745c:	mov	w3, #0xb2                  	// #178
  407460:	b	4074bc <ascii_strlower_n@plt+0x30b4>
  407464:	mov	w25, w0
  407468:	mov	w0, wzr
  40746c:	bl	4039a8 <log_get_max_level_realm@plt>
  407470:	cmp	w0, #0x3
  407474:	b.lt	407950 <ascii_strlower_n@plt+0x3548>  // b.tstop
  407478:	mov	w0, #0x3                   	// #3
  40747c:	mov	w3, #0x12b                 	// #299
  407480:	mov	w1, w25
  407484:	adrp	x5, 420000 <ascii_strlower_n@plt+0x1bbf8>
  407488:	mov	x2, x28
  40748c:	mov	x4, x26
  407490:	add	x5, x5, #0x94d
  407494:	bl	4039b8 <log_internal_realm@plt>
  407498:	mov	w25, w0
  40749c:	b	40795c <ascii_strlower_n@plt+0x3554>
  4074a0:	mov	w25, w0
  4074a4:	mov	w0, wzr
  4074a8:	bl	4039a8 <log_get_max_level_realm@plt>
  4074ac:	cmp	w0, #0x3
  4074b0:	b.lt	40783c <ascii_strlower_n@plt+0x3434>  // b.tstop
  4074b4:	mov	w0, #0x3                   	// #3
  4074b8:	mov	w3, #0xb6                  	// #182
  4074bc:	adrp	x4, 420000 <ascii_strlower_n@plt+0x1bbf8>
  4074c0:	adrp	x5, 420000 <ascii_strlower_n@plt+0x1bbf8>
  4074c4:	mov	w1, w25
  4074c8:	mov	x2, x28
  4074cc:	add	x4, x4, #0xe73
  4074d0:	add	x5, x5, #0x94d
  4074d4:	bl	4039b8 <log_internal_realm@plt>
  4074d8:	mov	w25, w0
  4074dc:	sub	x0, x29, #0x28
  4074e0:	bl	403d68 <sd_bus_error_free@plt>
  4074e4:	ldur	x0, [x29, #-16]
  4074e8:	cbnz	x0, 407974 <ascii_strlower_n@plt+0x356c>
  4074ec:	b	407978 <ascii_strlower_n@plt+0x3570>
  4074f0:	mov	w23, w0
  4074f4:	mov	w0, wzr
  4074f8:	bl	4039a8 <log_get_max_level_realm@plt>
  4074fc:	cmp	w0, #0x3
  407500:	b.lt	407588 <ascii_strlower_n@plt+0x3180>  // b.tstop
  407504:	mov	w0, #0x3                   	// #3
  407508:	mov	w3, #0x12f                 	// #303
  40750c:	mov	w1, w23
  407510:	b	407484 <ascii_strlower_n@plt+0x307c>
  407514:	mov	w25, w0
  407518:	mov	w0, wzr
  40751c:	bl	4039a8 <log_get_max_level_realm@plt>
  407520:	cmp	w0, #0x3
  407524:	b.lt	40783c <ascii_strlower_n@plt+0x3434>  // b.tstop
  407528:	sub	x0, x29, #0x28
  40752c:	mov	w1, w25
  407530:	bl	403d78 <bus_error_message@plt>
  407534:	adrp	x4, 420000 <ascii_strlower_n@plt+0x1bbf8>
  407538:	adrp	x5, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40753c:	mov	x7, x0
  407540:	mov	w0, #0x3                   	// #3
  407544:	mov	w3, #0xbc                  	// #188
  407548:	mov	w1, w25
  40754c:	mov	x2, x28
  407550:	add	x4, x4, #0xe73
  407554:	add	x5, x5, #0x974
  407558:	mov	x6, x23
  40755c:	bl	4039b8 <log_internal_realm@plt>
  407560:	b	4074d8 <ascii_strlower_n@plt+0x30d0>
  407564:	mov	w23, w0
  407568:	mov	w0, wzr
  40756c:	bl	4039a8 <log_get_max_level_realm@plt>
  407570:	cmp	w0, #0x3
  407574:	b.lt	407588 <ascii_strlower_n@plt+0x3180>  // b.tstop
  407578:	mov	w0, #0x3                   	// #3
  40757c:	mov	w3, #0x133                 	// #307
  407580:	mov	w1, w23
  407584:	b	407484 <ascii_strlower_n@plt+0x307c>
  407588:	mov	w8, wzr
  40758c:	neg	w9, w23
  407590:	b	407958 <ascii_strlower_n@plt+0x3550>
  407594:	mov	w25, w0
  407598:	mov	w0, wzr
  40759c:	bl	4039a8 <log_get_max_level_realm@plt>
  4075a0:	cmp	w0, #0x3
  4075a4:	b.lt	40783c <ascii_strlower_n@plt+0x3434>  // b.tstop
  4075a8:	mov	w0, #0x3                   	// #3
  4075ac:	mov	w3, #0xc2                  	// #194
  4075b0:	b	407820 <ascii_strlower_n@plt+0x3418>
  4075b4:	mov	w25, w0
  4075b8:	mov	w0, wzr
  4075bc:	bl	4039a8 <log_get_max_level_realm@plt>
  4075c0:	cmp	w0, #0x3
  4075c4:	b.lt	407950 <ascii_strlower_n@plt+0x3548>  // b.tstop
  4075c8:	ldur	x23, [x29, #-48]
  4075cc:	sub	x0, x29, #0x28
  4075d0:	mov	w1, w25
  4075d4:	bl	403d78 <bus_error_message@plt>
  4075d8:	adrp	x5, 420000 <ascii_strlower_n@plt+0x1bbf8>
  4075dc:	mov	x7, x0
  4075e0:	mov	w0, #0x3                   	// #3
  4075e4:	mov	w3, #0x139                 	// #313
  4075e8:	mov	w1, w25
  4075ec:	mov	x2, x28
  4075f0:	mov	x4, x26
  4075f4:	add	x5, x5, #0x974
  4075f8:	mov	x6, x23
  4075fc:	bl	4039b8 <log_internal_realm@plt>
  407600:	mov	w25, w0
  407604:	b	40795c <ascii_strlower_n@plt+0x3554>
  407608:	mov	w26, w0
  40760c:	mov	w8, wzr
  407610:	tbnz	w26, #31, 407700 <ascii_strlower_n@plt+0x32f8>
  407614:	ldur	x0, [x29, #-16]
  407618:	str	w8, [sp, #40]
  40761c:	bl	403d18 <sd_bus_message_exit_container@plt>
  407620:	tbnz	w0, #31, 407768 <ascii_strlower_n@plt+0x3360>
  407624:	ldur	x0, [x29, #-16]
  407628:	adrp	x1, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40762c:	sub	x2, x29, #0x30
  407630:	sub	x3, x29, #0x38
  407634:	add	x1, x1, #0xf57
  407638:	bl	403d08 <sd_bus_message_read@plt>
  40763c:	adrp	x26, 420000 <ascii_strlower_n@plt+0x1bbf8>
  407640:	add	x26, x26, #0xdf0
  407644:	tbnz	w0, #31, 407804 <ascii_strlower_n@plt+0x33fc>
  407648:	ldur	x1, [x29, #-48]
  40764c:	mov	x0, x23
  407650:	str	x1, [sp, #24]
  407654:	bl	403b38 <strcmp@plt>
  407658:	ldr	w25, [sp, #40]
  40765c:	cbz	w0, 4076a0 <ascii_strlower_n@plt+0x3298>
  407660:	mov	x0, x23
  407664:	bl	403d28 <strlen@plt>
  407668:	adrp	x8, 41e000 <ascii_strlower_n@plt+0x19bf8>
  40766c:	cmp	w25, #0x0
  407670:	add	x8, x8, #0x804
  407674:	ldr	x4, [sp, #24]
  407678:	csel	x2, x23, x8, eq  // eq = none
  40767c:	adrp	x8, 420000 <ascii_strlower_n@plt+0x1bbf8>
  407680:	adrp	x9, 420000 <ascii_strlower_n@plt+0x1bbf8>
  407684:	mov	x1, x0
  407688:	add	x8, x8, #0xbb3
  40768c:	add	x9, x9, #0xe35
  407690:	adrp	x0, 420000 <ascii_strlower_n@plt+0x1bbf8>
  407694:	csel	x3, x9, x8, eq  // eq = none
  407698:	add	x0, x0, #0xf5a
  40769c:	bl	403a58 <printf@plt>
  4076a0:	cbz	w25, 407878 <ascii_strlower_n@plt+0x3470>
  4076a4:	ldr	x8, [sp, #48]
  4076a8:	ldr	x9, [sp, #32]
  4076ac:	ldur	x0, [x29, #-56]
  4076b0:	sub	x1, x9, x8
  4076b4:	bl	40bca8 <ascii_strlower_n@plt+0x78a0>
  4076b8:	mov	w25, wzr
  4076bc:	sub	x0, x29, #0x28
  4076c0:	bl	403d68 <sd_bus_error_free@plt>
  4076c4:	ldur	x0, [x29, #-16]
  4076c8:	cbnz	x0, 407974 <ascii_strlower_n@plt+0x356c>
  4076cc:	b	407978 <ascii_strlower_n@plt+0x3570>
  4076d0:	adrp	x26, 420000 <ascii_strlower_n@plt+0x1bbf8>
  4076d4:	adrp	x21, 420000 <ascii_strlower_n@plt+0x1bbf8>
  4076d8:	add	x26, x26, #0xdf0
  4076dc:	add	x21, x21, #0xe25
  4076e0:	sub	x0, x29, #0x28
  4076e4:	bl	403d68 <sd_bus_error_free@plt>
  4076e8:	ldur	x0, [x29, #-16]
  4076ec:	cbnz	x0, 407974 <ascii_strlower_n@plt+0x356c>
  4076f0:	b	407978 <ascii_strlower_n@plt+0x3570>
  4076f4:	ldr	w8, [sp, #40]
  4076f8:	mov	w26, w0
  4076fc:	tbz	w26, #31, 407614 <ascii_strlower_n@plt+0x320c>
  407700:	mov	w0, wzr
  407704:	bl	4039a8 <log_get_max_level_realm@plt>
  407708:	cmp	w0, #0x3
  40770c:	b.lt	4077dc <ascii_strlower_n@plt+0x33d4>  // b.tstop
  407710:	adrp	x4, 420000 <ascii_strlower_n@plt+0x1bbf8>
  407714:	adrp	x5, 420000 <ascii_strlower_n@plt+0x1bbf8>
  407718:	mov	w0, #0x3                   	// #3
  40771c:	mov	w3, #0xf0                  	// #240
  407720:	mov	w1, w26
  407724:	mov	x2, x28
  407728:	add	x4, x4, #0xe73
  40772c:	add	x5, x5, #0x998
  407730:	bl	4039b8 <log_internal_realm@plt>
  407734:	adrp	x26, 420000 <ascii_strlower_n@plt+0x1bbf8>
  407738:	mov	w25, w0
  40773c:	b	4077ec <ascii_strlower_n@plt+0x33e4>
  407740:	mov	w25, w0
  407744:	mov	w0, wzr
  407748:	bl	4039a8 <log_get_max_level_realm@plt>
  40774c:	cmp	w0, #0x3
  407750:	b.lt	407950 <ascii_strlower_n@plt+0x3548>  // b.tstop
  407754:	mov	w0, #0x3                   	// #3
  407758:	mov	w3, #0x13f                 	// #319
  40775c:	b	407480 <ascii_strlower_n@plt+0x3078>
  407760:	mov	w25, w0
  407764:	b	4079c0 <ascii_strlower_n@plt+0x35b8>
  407768:	mov	w25, w0
  40776c:	mov	w0, wzr
  407770:	bl	4039a8 <log_get_max_level_realm@plt>
  407774:	adrp	x26, 420000 <ascii_strlower_n@plt+0x1bbf8>
  407778:	cmp	w0, #0x3
  40777c:	add	x26, x26, #0xdf0
  407780:	b.lt	40783c <ascii_strlower_n@plt+0x3434>  // b.tstop
  407784:	mov	w0, #0x3                   	// #3
  407788:	mov	w3, #0xf4                  	// #244
  40778c:	b	407820 <ascii_strlower_n@plt+0x3418>
  407790:	mov	w25, w0
  407794:	mov	w21, wzr
  407798:	tbnz	w25, #31, 40785c <ascii_strlower_n@plt+0x3454>
  40779c:	ldur	x0, [x29, #-16]
  4077a0:	bl	403d18 <sd_bus_message_exit_container@plt>
  4077a4:	tbnz	w0, #31, 4078c8 <ascii_strlower_n@plt+0x34c0>
  4077a8:	ldur	x0, [x29, #-16]
  4077ac:	adrp	x1, 420000 <ascii_strlower_n@plt+0x1bbf8>
  4077b0:	sub	x2, x29, #0x38
  4077b4:	add	x1, x1, #0x70
  4077b8:	bl	403d08 <sd_bus_message_read@plt>
  4077bc:	tbnz	w0, #31, 407914 <ascii_strlower_n@plt+0x350c>
  4077c0:	cbz	w21, 407988 <ascii_strlower_n@plt+0x3580>
  4077c4:	ldr	x8, [sp, #48]
  4077c8:	ldur	x0, [x29, #-56]
  4077cc:	sub	x1, x8, x23
  4077d0:	bl	40bca8 <ascii_strlower_n@plt+0x78a0>
  4077d4:	mov	w25, wzr
  4077d8:	b	4079c0 <ascii_strlower_n@plt+0x35b8>
  4077dc:	mov	w8, wzr
  4077e0:	neg	w9, w26
  4077e4:	adrp	x26, 420000 <ascii_strlower_n@plt+0x1bbf8>
  4077e8:	sub	w25, w8, w9, uxtb
  4077ec:	add	x26, x26, #0xdf0
  4077f0:	sub	x0, x29, #0x28
  4077f4:	bl	403d68 <sd_bus_error_free@plt>
  4077f8:	ldur	x0, [x29, #-16]
  4077fc:	cbnz	x0, 407974 <ascii_strlower_n@plt+0x356c>
  407800:	b	407978 <ascii_strlower_n@plt+0x3570>
  407804:	mov	w25, w0
  407808:	mov	w0, wzr
  40780c:	bl	4039a8 <log_get_max_level_realm@plt>
  407810:	cmp	w0, #0x3
  407814:	b.lt	40783c <ascii_strlower_n@plt+0x3434>  // b.tstop
  407818:	mov	w0, #0x3                   	// #3
  40781c:	mov	w3, #0xf8                  	// #248
  407820:	adrp	x4, 420000 <ascii_strlower_n@plt+0x1bbf8>
  407824:	adrp	x5, 420000 <ascii_strlower_n@plt+0x1bbf8>
  407828:	mov	w1, w25
  40782c:	mov	x2, x28
  407830:	add	x4, x4, #0xe73
  407834:	add	x5, x5, #0x998
  407838:	b	4074d4 <ascii_strlower_n@plt+0x30cc>
  40783c:	mov	w8, wzr
  407840:	neg	w9, w25
  407844:	sub	w25, w8, w9, uxtb
  407848:	sub	x0, x29, #0x28
  40784c:	bl	403d68 <sd_bus_error_free@plt>
  407850:	ldur	x0, [x29, #-16]
  407854:	cbnz	x0, 407974 <ascii_strlower_n@plt+0x356c>
  407858:	b	407978 <ascii_strlower_n@plt+0x3570>
  40785c:	mov	w0, wzr
  407860:	bl	4039a8 <log_get_max_level_realm@plt>
  407864:	cmp	w0, #0x3
  407868:	b.lt	407904 <ascii_strlower_n@plt+0x34fc>  // b.tstop
  40786c:	mov	w0, #0x3                   	// #3
  407870:	mov	w3, #0x15a                 	// #346
  407874:	b	4078e4 <ascii_strlower_n@plt+0x34dc>
  407878:	mov	w0, wzr
  40787c:	bl	4039a8 <log_get_max_level_realm@plt>
  407880:	cmp	w0, #0x3
  407884:	b.lt	4078b0 <ascii_strlower_n@plt+0x34a8>  // b.tstop
  407888:	adrp	x4, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40788c:	adrp	x5, 420000 <ascii_strlower_n@plt+0x1bbf8>
  407890:	mov	w0, #0x3                   	// #3
  407894:	mov	w3, #0x100                 	// #256
  407898:	mov	w1, wzr
  40789c:	mov	x2, x28
  4078a0:	add	x4, x4, #0xe73
  4078a4:	add	x5, x5, #0xf66
  4078a8:	mov	x6, x23
  4078ac:	bl	4039b8 <log_internal_realm@plt>
  4078b0:	mov	w25, #0xfffffffd            	// #-3
  4078b4:	sub	x0, x29, #0x28
  4078b8:	bl	403d68 <sd_bus_error_free@plt>
  4078bc:	ldur	x0, [x29, #-16]
  4078c0:	cbnz	x0, 407974 <ascii_strlower_n@plt+0x356c>
  4078c4:	b	407978 <ascii_strlower_n@plt+0x3570>
  4078c8:	mov	w25, w0
  4078cc:	mov	w0, wzr
  4078d0:	bl	4039a8 <log_get_max_level_realm@plt>
  4078d4:	cmp	w0, #0x3
  4078d8:	b.lt	407904 <ascii_strlower_n@plt+0x34fc>  // b.tstop
  4078dc:	mov	w0, #0x3                   	// #3
  4078e0:	mov	w3, #0x15e                 	// #350
  4078e4:	adrp	x5, 420000 <ascii_strlower_n@plt+0x1bbf8>
  4078e8:	mov	w1, w25
  4078ec:	mov	x2, x28
  4078f0:	mov	x4, x26
  4078f4:	add	x5, x5, #0x998
  4078f8:	bl	4039b8 <log_internal_realm@plt>
  4078fc:	mov	w25, w0
  407900:	b	4079c0 <ascii_strlower_n@plt+0x35b8>
  407904:	mov	w8, wzr
  407908:	neg	w9, w25
  40790c:	sub	w25, w8, w9, uxtb
  407910:	b	4079c0 <ascii_strlower_n@plt+0x35b8>
  407914:	mov	w25, w0
  407918:	mov	w0, wzr
  40791c:	bl	4039a8 <log_get_max_level_realm@plt>
  407920:	adrp	x21, 420000 <ascii_strlower_n@plt+0x1bbf8>
  407924:	cmp	w0, #0x3
  407928:	add	x21, x21, #0xe25
  40792c:	b.lt	407950 <ascii_strlower_n@plt+0x3548>  // b.tstop
  407930:	adrp	x5, 420000 <ascii_strlower_n@plt+0x1bbf8>
  407934:	mov	w0, #0x3                   	// #3
  407938:	mov	w3, #0x162                 	// #354
  40793c:	mov	w1, w25
  407940:	mov	x2, x28
  407944:	mov	x4, x26
  407948:	add	x5, x5, #0x998
  40794c:	b	407494 <ascii_strlower_n@plt+0x308c>
  407950:	mov	w8, wzr
  407954:	neg	w9, w25
  407958:	sub	w25, w8, w9, uxtb
  40795c:	ldur	x0, [x29, #-48]
  407960:	bl	4039d8 <free@plt>
  407964:	sub	x0, x29, #0x28
  407968:	bl	403d68 <sd_bus_error_free@plt>
  40796c:	ldur	x0, [x29, #-16]
  407970:	cbz	x0, 407978 <ascii_strlower_n@plt+0x3570>
  407974:	bl	403d88 <sd_bus_message_unref@plt>
  407978:	ldur	x0, [x29, #-8]
  40797c:	cbz	x0, 406ca8 <ascii_strlower_n@plt+0x28a0>
  407980:	bl	403d88 <sd_bus_message_unref@plt>
  407984:	b	406ca8 <ascii_strlower_n@plt+0x28a0>
  407988:	mov	w0, wzr
  40798c:	bl	4039a8 <log_get_max_level_realm@plt>
  407990:	cmp	w0, #0x3
  407994:	b.lt	4079bc <ascii_strlower_n@plt+0x35b4>  // b.tstop
  407998:	ldur	x6, [x29, #-48]
  40799c:	adrp	x5, 420000 <ascii_strlower_n@plt+0x1bbf8>
  4079a0:	mov	w0, #0x3                   	// #3
  4079a4:	mov	w3, #0x165                 	// #357
  4079a8:	mov	w1, wzr
  4079ac:	mov	x2, x28
  4079b0:	mov	x4, x26
  4079b4:	add	x5, x5, #0xe37
  4079b8:	bl	4039b8 <log_internal_realm@plt>
  4079bc:	mov	w25, #0xfffffffd            	// #-3
  4079c0:	adrp	x21, 420000 <ascii_strlower_n@plt+0x1bbf8>
  4079c4:	add	x21, x21, #0xe25
  4079c8:	b	40795c <ascii_strlower_n@plt+0x3554>
  4079cc:	mov	w20, wzr
  4079d0:	mov	w0, w20
  4079d4:	ldp	x20, x19, [sp, #240]
  4079d8:	ldp	x22, x21, [sp, #224]
  4079dc:	ldp	x24, x23, [sp, #208]
  4079e0:	ldp	x26, x25, [sp, #192]
  4079e4:	ldp	x28, x27, [sp, #176]
  4079e8:	ldp	x29, x30, [sp, #160]
  4079ec:	add	sp, sp, #0x100
  4079f0:	ret
  4079f4:	adrp	x1, 420000 <ascii_strlower_n@plt+0x1bbf8>
  4079f8:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  4079fc:	adrp	x4, 420000 <ascii_strlower_n@plt+0x1bbf8>
  407a00:	add	x1, x1, #0x482
  407a04:	add	x2, x2, #0x717
  407a08:	add	x4, x4, #0xda3
  407a0c:	mov	w3, #0x113                 	// #275
  407a10:	mov	w0, wzr
  407a14:	bl	403a98 <log_assert_failed_realm@plt>
  407a18:	adrp	x1, 420000 <ascii_strlower_n@plt+0x1bbf8>
  407a1c:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  407a20:	adrp	x4, 420000 <ascii_strlower_n@plt+0x1bbf8>
  407a24:	add	x1, x1, #0x104
  407a28:	add	x2, x2, #0x717
  407a2c:	add	x4, x4, #0xda3
  407a30:	mov	w3, #0x112                 	// #274
  407a34:	mov	w0, wzr
  407a38:	bl	403a98 <log_assert_failed_realm@plt>
  407a3c:	adrp	x1, 420000 <ascii_strlower_n@plt+0x1bbf8>
  407a40:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  407a44:	adrp	x4, 420000 <ascii_strlower_n@plt+0x1bbf8>
  407a48:	add	x1, x1, #0x89f
  407a4c:	add	x2, x2, #0x717
  407a50:	add	x4, x4, #0xe4a
  407a54:	mov	w3, #0xa6                  	// #166
  407a58:	mov	w0, wzr
  407a5c:	bl	403a98 <log_assert_failed_realm@plt>
  407a60:	adrp	x1, 420000 <ascii_strlower_n@plt+0x1bbf8>
  407a64:	adrp	x2, 420000 <ascii_strlower_n@plt+0x1bbf8>
  407a68:	adrp	x4, 420000 <ascii_strlower_n@plt+0x1bbf8>
  407a6c:	add	x1, x1, #0x482
  407a70:	add	x2, x2, #0x4a7
  407a74:	add	x4, x4, #0x4c0
  407a78:	mov	w3, #0x43                  	// #67
  407a7c:	mov	w0, wzr
  407a80:	bl	403a98 <log_assert_failed_realm@plt>
  407a84:	cmp	w0, #0x2
  407a88:	b.ne	407aa0 <ascii_strlower_n@plt+0x3698>  // b.any
  407a8c:	ldr	x3, [x1, #8]
  407a90:	mov	x0, x2
  407a94:	mov	x1, xzr
  407a98:	mov	x2, xzr
  407a9c:	b	40bef8 <ascii_strlower_n@plt+0x7af0>
  407aa0:	ldp	x8, x9, [x1, #8]
  407aa4:	cmp	w0, #0x3
  407aa8:	b.ne	407ac0 <ascii_strlower_n@plt+0x36b8>  // b.any
  407aac:	mov	x0, x2
  407ab0:	mov	x1, xzr
  407ab4:	mov	x2, x8
  407ab8:	mov	x3, x9
  407abc:	b	40bef8 <ascii_strlower_n@plt+0x7af0>
  407ac0:	ldr	x3, [x1, #24]
  407ac4:	mov	x0, x2
  407ac8:	mov	x1, x8
  407acc:	mov	x2, x9
  407ad0:	b	40bef8 <ascii_strlower_n@plt+0x7af0>
  407ad4:	stp	x29, x30, [sp, #-80]!
  407ad8:	stp	x26, x25, [sp, #16]
  407adc:	stp	x24, x23, [sp, #32]
  407ae0:	stp	x22, x21, [sp, #48]
  407ae4:	stp	x20, x19, [sp, #64]
  407ae8:	ldr	x25, [x1, #8]
  407aec:	mov	x29, sp
  407af0:	cbz	x25, 407c0c <ascii_strlower_n@plt+0x3804>
  407af4:	cbz	x2, 407c2c <ascii_strlower_n@plt+0x3824>
  407af8:	adrp	x19, 41e000 <ascii_strlower_n@plt+0x19bf8>
  407afc:	adrp	x20, 421000 <ascii_strlower_n@plt+0x1cbf8>
  407b00:	adrp	x21, 421000 <ascii_strlower_n@plt+0x1cbf8>
  407b04:	adrp	x23, 421000 <ascii_strlower_n@plt+0x1cbf8>
  407b08:	adrp	x24, 421000 <ascii_strlower_n@plt+0x1cbf8>
  407b0c:	mov	w22, wzr
  407b10:	add	x26, x1, #0x10
  407b14:	add	x19, x19, #0x717
  407b18:	add	x20, x20, #0x157
  407b1c:	add	x21, x21, #0x167
  407b20:	add	x23, x23, #0x18a
  407b24:	add	x24, x24, #0x1b0
  407b28:	b	407b3c <ascii_strlower_n@plt+0x3734>
  407b2c:	mov	w0, #0xffffffea            	// #-22
  407b30:	mov	w22, w0
  407b34:	ldr	x25, [x26], #8
  407b38:	cbz	x25, 407c10 <ascii_strlower_n@plt+0x3808>
  407b3c:	mov	w1, #0x40                  	// #64
  407b40:	mov	x0, x25
  407b44:	bl	403d98 <strrchr@plt>
  407b48:	cbz	x0, 407bcc <ascii_strlower_n@plt+0x37c4>
  407b4c:	cmp	x0, x25
  407b50:	b.eq	407b90 <ascii_strlower_n@plt+0x3788>  // b.none
  407b54:	ldrb	w8, [x0, #1]
  407b58:	cbz	w8, 407b90 <ascii_strlower_n@plt+0x3788>
  407b5c:	mov	w0, wzr
  407b60:	bl	4039a8 <log_get_max_level_realm@plt>
  407b64:	cmp	w0, #0x3
  407b68:	b.lt	407c04 <ascii_strlower_n@plt+0x37fc>  // b.tstop
  407b6c:	mov	w0, #0x3                   	// #3
  407b70:	mov	w1, #0xffffffa1            	// #-95
  407b74:	mov	w3, #0x375                 	// #885
  407b78:	mov	x2, x19
  407b7c:	mov	x4, x20
  407b80:	mov	x5, x24
  407b84:	bl	4039b8 <log_internal_realm@plt>
  407b88:	tbz	w0, #31, 407b34 <ascii_strlower_n@plt+0x372c>
  407b8c:	b	407b30 <ascii_strlower_n@plt+0x3728>
  407b90:	mov	w0, wzr
  407b94:	bl	4039a8 <log_get_max_level_realm@plt>
  407b98:	cmp	w0, #0x3
  407b9c:	b.lt	407b2c <ascii_strlower_n@plt+0x3724>  // b.tstop
  407ba0:	mov	w1, #0x16                  	// #22
  407ba4:	mov	w0, #0x3                   	// #3
  407ba8:	movk	w1, #0x4000, lsl #16
  407bac:	mov	w3, #0x370                 	// #880
  407bb0:	mov	x2, x19
  407bb4:	mov	x4, x20
  407bb8:	mov	x5, x23
  407bbc:	mov	x6, x25
  407bc0:	bl	4039b8 <log_internal_realm@plt>
  407bc4:	tbz	w0, #31, 407b34 <ascii_strlower_n@plt+0x372c>
  407bc8:	b	407b30 <ascii_strlower_n@plt+0x3728>
  407bcc:	bl	4039a8 <log_get_max_level_realm@plt>
  407bd0:	cmp	w0, #0x3
  407bd4:	b.lt	407b2c <ascii_strlower_n@plt+0x3724>  // b.tstop
  407bd8:	mov	w1, #0x16                  	// #22
  407bdc:	mov	w0, #0x3                   	// #3
  407be0:	movk	w1, #0x4000, lsl #16
  407be4:	mov	w3, #0x36d                 	// #877
  407be8:	mov	x2, x19
  407bec:	mov	x4, x20
  407bf0:	mov	x5, x21
  407bf4:	mov	x6, x25
  407bf8:	bl	4039b8 <log_internal_realm@plt>
  407bfc:	tbz	w0, #31, 407b34 <ascii_strlower_n@plt+0x372c>
  407c00:	b	407b30 <ascii_strlower_n@plt+0x3728>
  407c04:	mov	w0, #0xffffffa1            	// #-95
  407c08:	b	407b30 <ascii_strlower_n@plt+0x3728>
  407c0c:	mov	w22, wzr
  407c10:	mov	w0, w22
  407c14:	ldp	x20, x19, [sp, #64]
  407c18:	ldp	x22, x21, [sp, #48]
  407c1c:	ldp	x24, x23, [sp, #32]
  407c20:	ldp	x26, x25, [sp, #16]
  407c24:	ldp	x29, x30, [sp], #80
  407c28:	ret
  407c2c:	adrp	x1, 420000 <ascii_strlower_n@plt+0x1bbf8>
  407c30:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  407c34:	adrp	x4, 421000 <ascii_strlower_n@plt+0x1cbf8>
  407c38:	add	x1, x1, #0x104
  407c3c:	add	x2, x2, #0x717
  407c40:	add	x4, x4, #0x12b
  407c44:	mov	w3, #0x367                 	// #871
  407c48:	mov	w0, wzr
  407c4c:	bl	403a98 <log_assert_failed_realm@plt>
  407c50:	sub	sp, sp, #0x50
  407c54:	stp	x29, x30, [sp, #32]
  407c58:	stp	x22, x21, [sp, #48]
  407c5c:	stp	x20, x19, [sp, #64]
  407c60:	mov	x22, x1
  407c64:	adrp	x8, 424000 <ascii_strlower_n@plt+0x1fbf8>
  407c68:	add	x8, x8, #0x880
  407c6c:	ldr	x21, [x22, #8]!
  407c70:	ldp	q0, q1, [x8]
  407c74:	mov	x20, x1
  407c78:	mov	x0, sp
  407c7c:	mov	x1, x21
  407c80:	add	x29, sp, #0x20
  407c84:	mov	x19, x2
  407c88:	stp	q0, q1, [sp]
  407c8c:	bl	403b68 <strv_find@plt>
  407c90:	cmp	x0, #0x0
  407c94:	mov	w8, #0x8                   	// #8
  407c98:	mov	w9, #0x10                  	// #16
  407c9c:	csel	x8, x9, x8, ne  // ne = any
  407ca0:	ldr	x2, [x20, x8]
  407ca4:	adrp	x9, 41f000 <ascii_strlower_n@plt+0x1abf8>
  407ca8:	add	x8, x20, #0x10
  407cac:	add	x9, x9, #0x590
  407cb0:	csel	x8, x8, x22, ne  // ne = any
  407cb4:	csel	x21, x21, x9, ne  // ne = any
  407cb8:	mov	w20, wzr
  407cbc:	cbz	x2, 407ce0 <ascii_strlower_n@plt+0x38d8>
  407cc0:	add	x22, x8, #0x8
  407cc4:	mov	x0, x19
  407cc8:	mov	x1, x21
  407ccc:	bl	40cc94 <ascii_strlower_n@plt+0x888c>
  407cd0:	ldr	x2, [x22], #8
  407cd4:	cmp	w0, #0x0
  407cd8:	csel	w20, w0, w20, lt  // lt = tstop
  407cdc:	cbnz	x2, 407cc4 <ascii_strlower_n@plt+0x38bc>
  407ce0:	mov	w0, w20
  407ce4:	ldp	x20, x19, [sp, #64]
  407ce8:	ldp	x22, x21, [sp, #48]
  407cec:	ldp	x29, x30, [sp, #32]
  407cf0:	add	sp, sp, #0x50
  407cf4:	ret
  407cf8:	sub	sp, sp, #0xb0
  407cfc:	stp	x29, x30, [sp, #112]
  407d00:	add	x29, sp, #0x70
  407d04:	stp	x24, x23, [sp, #128]
  407d08:	stp	x22, x21, [sp, #144]
  407d0c:	stp	x20, x19, [sp, #160]
  407d10:	stp	xzr, xzr, [x29, #-24]
  407d14:	stur	xzr, [x29, #-8]
  407d18:	stur	xzr, [x29, #-32]
  407d1c:	cbz	x2, 4081d0 <ascii_strlower_n@plt+0x3dc8>
  407d20:	mov	x19, x2
  407d24:	adrp	x1, 420000 <ascii_strlower_n@plt+0x1bbf8>
  407d28:	adrp	x2, 420000 <ascii_strlower_n@plt+0x1bbf8>
  407d2c:	adrp	x3, 420000 <ascii_strlower_n@plt+0x1bbf8>
  407d30:	adrp	x4, 420000 <ascii_strlower_n@plt+0x1bbf8>
  407d34:	add	x1, x1, #0x1b6
  407d38:	add	x2, x2, #0x661
  407d3c:	add	x3, x3, #0x91e
  407d40:	add	x4, x4, #0xf4
  407d44:	sub	x5, x29, #0x18
  407d48:	add	x7, sp, #0x4
  407d4c:	mov	w6, #0x62                  	// #98
  407d50:	mov	x0, x19
  407d54:	bl	403da8 <sd_bus_get_property_trivial@plt>
  407d58:	tbnz	w0, #31, 407f84 <ascii_strlower_n@plt+0x3b7c>
  407d5c:	bl	403b78 <colors_enabled@plt>
  407d60:	ldr	w8, [sp, #4]
  407d64:	adrp	x22, 41e000 <ascii_strlower_n@plt+0x19bf8>
  407d68:	adrp	x23, 41f000 <ascii_strlower_n@plt+0x1abf8>
  407d6c:	add	x22, x22, #0x804
  407d70:	add	x23, x23, #0x508
  407d74:	tst	w0, #0x1
  407d78:	adrp	x9, 420000 <ascii_strlower_n@plt+0x1bbf8>
  407d7c:	adrp	x10, 420000 <ascii_strlower_n@plt+0x1bbf8>
  407d80:	csel	x20, x23, x22, ne  // ne = any
  407d84:	add	x9, x9, #0x5c5
  407d88:	add	x10, x10, #0x5c9
  407d8c:	cmp	w8, #0x0
  407d90:	csel	x21, x10, x9, eq  // eq = none
  407d94:	bl	403b78 <colors_enabled@plt>
  407d98:	adrp	x24, 41f000 <ascii_strlower_n@plt+0x1abf8>
  407d9c:	add	x24, x24, #0x512
  407da0:	tst	w0, #0x1
  407da4:	adrp	x0, 421000 <ascii_strlower_n@plt+0x1cbf8>
  407da8:	csel	x3, x24, x22, ne  // ne = any
  407dac:	add	x0, x0, #0x299
  407db0:	mov	x1, x20
  407db4:	mov	x2, x21
  407db8:	bl	403a58 <printf@plt>
  407dbc:	adrp	x1, 420000 <ascii_strlower_n@plt+0x1bbf8>
  407dc0:	adrp	x2, 420000 <ascii_strlower_n@plt+0x1bbf8>
  407dc4:	adrp	x3, 420000 <ascii_strlower_n@plt+0x1bbf8>
  407dc8:	adrp	x4, 421000 <ascii_strlower_n@plt+0x1cbf8>
  407dcc:	adrp	x7, 421000 <ascii_strlower_n@plt+0x1cbf8>
  407dd0:	add	x1, x1, #0x1b6
  407dd4:	add	x2, x2, #0x661
  407dd8:	add	x3, x3, #0x91e
  407ddc:	add	x4, x4, #0x2c7
  407de0:	add	x7, x7, #0x2dd
  407de4:	sub	x5, x29, #0x18
  407de8:	sub	x6, x29, #0x20
  407dec:	mov	x0, x19
  407df0:	bl	403db8 <sd_bus_get_property@plt>
  407df4:	tbnz	w0, #31, 407fcc <ascii_strlower_n@plt+0x3bc4>
  407df8:	ldur	x0, [x29, #-32]
  407dfc:	adrp	x1, 421000 <ascii_strlower_n@plt+0x1cbf8>
  407e00:	add	x1, x1, #0x2dd
  407e04:	sub	x2, x29, #0x28
  407e08:	sub	x3, x29, #0x30
  407e0c:	bl	403d08 <sd_bus_message_read@plt>
  407e10:	tbnz	w0, #31, 408014 <ascii_strlower_n@plt+0x3c0c>
  407e14:	bl	403b78 <colors_enabled@plt>
  407e18:	tst	w0, #0x1
  407e1c:	csel	x20, x23, x22, ne  // ne = any
  407e20:	bl	403b78 <colors_enabled@plt>
  407e24:	ldp	x4, x3, [x29, #-48]
  407e28:	tst	w0, #0x1
  407e2c:	adrp	x0, 421000 <ascii_strlower_n@plt+0x1cbf8>
  407e30:	csel	x2, x24, x22, ne  // ne = any
  407e34:	add	x0, x0, #0x30b
  407e38:	mov	x1, x20
  407e3c:	bl	403a58 <printf@plt>
  407e40:	ldur	x0, [x29, #-32]
  407e44:	bl	403d88 <sd_bus_message_unref@plt>
  407e48:	adrp	x1, 420000 <ascii_strlower_n@plt+0x1bbf8>
  407e4c:	adrp	x2, 420000 <ascii_strlower_n@plt+0x1bbf8>
  407e50:	adrp	x3, 420000 <ascii_strlower_n@plt+0x1bbf8>
  407e54:	adrp	x4, 421000 <ascii_strlower_n@plt+0x1cbf8>
  407e58:	adrp	x7, 421000 <ascii_strlower_n@plt+0x1cbf8>
  407e5c:	stur	x0, [x29, #-32]
  407e60:	add	x1, x1, #0x1b6
  407e64:	add	x2, x2, #0x661
  407e68:	add	x3, x3, #0x91e
  407e6c:	add	x4, x4, #0x351
  407e70:	add	x7, x7, #0x361
  407e74:	sub	x5, x29, #0x18
  407e78:	sub	x6, x29, #0x20
  407e7c:	mov	x0, x19
  407e80:	bl	403db8 <sd_bus_get_property@plt>
  407e84:	tbnz	w0, #31, 40804c <ascii_strlower_n@plt+0x3c44>
  407e88:	ldur	x0, [x29, #-32]
  407e8c:	adrp	x1, 421000 <ascii_strlower_n@plt+0x1cbf8>
  407e90:	add	x1, x1, #0x361
  407e94:	add	x2, sp, #0x38
  407e98:	add	x3, sp, #0x30
  407e9c:	add	x4, sp, #0x28
  407ea0:	bl	403d08 <sd_bus_message_read@plt>
  407ea4:	tbnz	w0, #31, 4080a8 <ascii_strlower_n@plt+0x3ca0>
  407ea8:	bl	403b78 <colors_enabled@plt>
  407eac:	tst	w0, #0x1
  407eb0:	csel	x20, x23, x22, ne  // ne = any
  407eb4:	bl	403b78 <colors_enabled@plt>
  407eb8:	ldp	x4, x3, [sp, #48]
  407ebc:	ldr	x5, [sp, #40]
  407ec0:	tst	w0, #0x1
  407ec4:	adrp	x0, 421000 <ascii_strlower_n@plt+0x1cbf8>
  407ec8:	csel	x2, x24, x22, ne  // ne = any
  407ecc:	add	x0, x0, #0x38a
  407ed0:	mov	x1, x20
  407ed4:	bl	403a58 <printf@plt>
  407ed8:	ldur	x0, [x29, #-32]
  407edc:	bl	403d88 <sd_bus_message_unref@plt>
  407ee0:	adrp	x1, 420000 <ascii_strlower_n@plt+0x1bbf8>
  407ee4:	adrp	x2, 420000 <ascii_strlower_n@plt+0x1bbf8>
  407ee8:	adrp	x3, 420000 <ascii_strlower_n@plt+0x1bbf8>
  407eec:	adrp	x4, 421000 <ascii_strlower_n@plt+0x1cbf8>
  407ef0:	adrp	x7, 421000 <ascii_strlower_n@plt+0x1cbf8>
  407ef4:	stur	x0, [x29, #-32]
  407ef8:	add	x1, x1, #0x1b6
  407efc:	add	x2, x2, #0x661
  407f00:	add	x3, x3, #0x91e
  407f04:	add	x4, x4, #0x3e4
  407f08:	add	x7, x7, #0x3f5
  407f0c:	sub	x5, x29, #0x18
  407f10:	sub	x6, x29, #0x20
  407f14:	mov	x0, x19
  407f18:	bl	403db8 <sd_bus_get_property@plt>
  407f1c:	tbnz	w0, #31, 408130 <ascii_strlower_n@plt+0x3d28>
  407f20:	ldur	x0, [x29, #-32]
  407f24:	adrp	x1, 421000 <ascii_strlower_n@plt+0x1cbf8>
  407f28:	add	x1, x1, #0x3f5
  407f2c:	add	x2, sp, #0x20
  407f30:	add	x3, sp, #0x18
  407f34:	add	x4, sp, #0x10
  407f38:	add	x5, sp, #0x8
  407f3c:	bl	403d08 <sd_bus_message_read@plt>
  407f40:	tbnz	w0, #31, 40817c <ascii_strlower_n@plt+0x3d74>
  407f44:	bl	403b78 <colors_enabled@plt>
  407f48:	tst	w0, #0x1
  407f4c:	csel	x19, x23, x22, ne  // ne = any
  407f50:	bl	403b78 <colors_enabled@plt>
  407f54:	ldp	x4, x3, [sp, #24]
  407f58:	ldp	x6, x5, [sp, #8]
  407f5c:	tst	w0, #0x1
  407f60:	adrp	x0, 421000 <ascii_strlower_n@plt+0x1cbf8>
  407f64:	csel	x2, x24, x22, ne  // ne = any
  407f68:	add	x0, x0, #0x420
  407f6c:	mov	x1, x19
  407f70:	bl	403a58 <printf@plt>
  407f74:	mov	w19, wzr
  407f78:	ldur	x0, [x29, #-32]
  407f7c:	cbnz	x0, 408108 <ascii_strlower_n@plt+0x3d00>
  407f80:	b	40810c <ascii_strlower_n@plt+0x3d04>
  407f84:	mov	w20, w0
  407f88:	mov	w0, wzr
  407f8c:	bl	4039a8 <log_get_max_level_realm@plt>
  407f90:	cmp	w0, #0x3
  407f94:	b.lt	4080f4 <ascii_strlower_n@plt+0x3cec>  // b.tstop
  407f98:	sub	x0, x29, #0x18
  407f9c:	mov	w1, w20
  407fa0:	bl	403d78 <bus_error_message@plt>
  407fa4:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  407fa8:	adrp	x4, 421000 <ascii_strlower_n@plt+0x1cbf8>
  407fac:	adrp	x5, 421000 <ascii_strlower_n@plt+0x1cbf8>
  407fb0:	mov	x6, x0
  407fb4:	add	x2, x2, #0x717
  407fb8:	add	x4, x4, #0x260
  407fbc:	add	x5, x5, #0x270
  407fc0:	mov	w0, #0x3                   	// #3
  407fc4:	mov	w3, #0x3eb                 	// #1003
  407fc8:	b	408090 <ascii_strlower_n@plt+0x3c88>
  407fcc:	mov	w20, w0
  407fd0:	mov	w0, wzr
  407fd4:	bl	4039a8 <log_get_max_level_realm@plt>
  407fd8:	cmp	w0, #0x3
  407fdc:	b.lt	4080f4 <ascii_strlower_n@plt+0x3cec>  // b.tstop
  407fe0:	sub	x0, x29, #0x18
  407fe4:	mov	w1, w20
  407fe8:	bl	403d78 <bus_error_message@plt>
  407fec:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  407ff0:	adrp	x4, 421000 <ascii_strlower_n@plt+0x1cbf8>
  407ff4:	adrp	x5, 421000 <ascii_strlower_n@plt+0x1cbf8>
  407ff8:	mov	x6, x0
  407ffc:	add	x2, x2, #0x717
  408000:	add	x4, x4, #0x260
  408004:	add	x5, x5, #0x2e2
  408008:	mov	w0, #0x3                   	// #3
  40800c:	mov	w3, #0x3fb                 	// #1019
  408010:	b	408090 <ascii_strlower_n@plt+0x3c88>
  408014:	mov	w20, w0
  408018:	mov	w0, wzr
  40801c:	bl	4039a8 <log_get_max_level_realm@plt>
  408020:	cmp	w0, #0x3
  408024:	b.lt	4080f4 <ascii_strlower_n@plt+0x3cec>  // b.tstop
  408028:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  40802c:	adrp	x4, 421000 <ascii_strlower_n@plt+0x1cbf8>
  408030:	adrp	x5, 420000 <ascii_strlower_n@plt+0x1bbf8>
  408034:	add	x2, x2, #0x717
  408038:	add	x4, x4, #0x260
  40803c:	add	x5, x5, #0x998
  408040:	mov	w0, #0x3                   	// #3
  408044:	mov	w3, #0x401                 	// #1025
  408048:	b	4080dc <ascii_strlower_n@plt+0x3cd4>
  40804c:	mov	w20, w0
  408050:	mov	w0, wzr
  408054:	bl	4039a8 <log_get_max_level_realm@plt>
  408058:	cmp	w0, #0x3
  40805c:	b.lt	4080f4 <ascii_strlower_n@plt+0x3cec>  // b.tstop
  408060:	sub	x0, x29, #0x18
  408064:	mov	w1, w20
  408068:	bl	403d78 <bus_error_message@plt>
  40806c:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  408070:	adrp	x4, 421000 <ascii_strlower_n@plt+0x1cbf8>
  408074:	adrp	x5, 421000 <ascii_strlower_n@plt+0x1cbf8>
  408078:	mov	x6, x0
  40807c:	add	x2, x2, #0x717
  408080:	add	x4, x4, #0x260
  408084:	add	x5, x5, #0x367
  408088:	mov	w0, #0x3                   	// #3
  40808c:	mov	w3, #0x416                 	// #1046
  408090:	mov	w1, w20
  408094:	bl	4039b8 <log_internal_realm@plt>
  408098:	mov	w19, w0
  40809c:	ldur	x0, [x29, #-32]
  4080a0:	cbnz	x0, 408108 <ascii_strlower_n@plt+0x3d00>
  4080a4:	b	40810c <ascii_strlower_n@plt+0x3d04>
  4080a8:	mov	w20, w0
  4080ac:	mov	w0, wzr
  4080b0:	bl	4039a8 <log_get_max_level_realm@plt>
  4080b4:	cmp	w0, #0x3
  4080b8:	b.lt	4080f4 <ascii_strlower_n@plt+0x3cec>  // b.tstop
  4080bc:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  4080c0:	adrp	x4, 421000 <ascii_strlower_n@plt+0x1cbf8>
  4080c4:	adrp	x5, 420000 <ascii_strlower_n@plt+0x1bbf8>
  4080c8:	add	x2, x2, #0x717
  4080cc:	add	x4, x4, #0x260
  4080d0:	add	x5, x5, #0x998
  4080d4:	mov	w0, #0x3                   	// #3
  4080d8:	mov	w3, #0x41d                 	// #1053
  4080dc:	mov	w1, w20
  4080e0:	bl	4039b8 <log_internal_realm@plt>
  4080e4:	mov	w19, w0
  4080e8:	ldur	x0, [x29, #-32]
  4080ec:	cbnz	x0, 408108 <ascii_strlower_n@plt+0x3d00>
  4080f0:	b	40810c <ascii_strlower_n@plt+0x3d04>
  4080f4:	mov	w8, wzr
  4080f8:	neg	w9, w20
  4080fc:	sub	w19, w8, w9, uxtb
  408100:	ldur	x0, [x29, #-32]
  408104:	cbz	x0, 40810c <ascii_strlower_n@plt+0x3d04>
  408108:	bl	403d88 <sd_bus_message_unref@plt>
  40810c:	sub	x0, x29, #0x18
  408110:	bl	403d68 <sd_bus_error_free@plt>
  408114:	mov	w0, w19
  408118:	ldp	x20, x19, [sp, #160]
  40811c:	ldp	x22, x21, [sp, #144]
  408120:	ldp	x24, x23, [sp, #128]
  408124:	ldp	x29, x30, [sp, #112]
  408128:	add	sp, sp, #0xb0
  40812c:	ret
  408130:	mov	w19, w0
  408134:	mov	w0, wzr
  408138:	bl	4039a8 <log_get_max_level_realm@plt>
  40813c:	cmp	w0, #0x3
  408140:	b.lt	4081b8 <ascii_strlower_n@plt+0x3db0>  // b.tstop
  408144:	sub	x0, x29, #0x18
  408148:	mov	w1, w19
  40814c:	bl	403d78 <bus_error_message@plt>
  408150:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  408154:	adrp	x4, 421000 <ascii_strlower_n@plt+0x1cbf8>
  408158:	adrp	x5, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40815c:	mov	x6, x0
  408160:	add	x2, x2, #0x717
  408164:	add	x4, x4, #0x260
  408168:	add	x5, x5, #0x3fc
  40816c:	mov	w0, #0x3                   	// #3
  408170:	mov	w3, #0x434                 	// #1076
  408174:	mov	w1, w19
  408178:	b	408094 <ascii_strlower_n@plt+0x3c8c>
  40817c:	mov	w19, w0
  408180:	mov	w0, wzr
  408184:	bl	4039a8 <log_get_max_level_realm@plt>
  408188:	cmp	w0, #0x3
  40818c:	b.lt	4081b8 <ascii_strlower_n@plt+0x3db0>  // b.tstop
  408190:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  408194:	adrp	x4, 421000 <ascii_strlower_n@plt+0x1cbf8>
  408198:	adrp	x5, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40819c:	add	x2, x2, #0x717
  4081a0:	add	x4, x4, #0x260
  4081a4:	add	x5, x5, #0x998
  4081a8:	mov	w0, #0x3                   	// #3
  4081ac:	mov	w3, #0x43c                 	// #1084
  4081b0:	mov	w1, w19
  4081b4:	b	4080e0 <ascii_strlower_n@plt+0x3cd8>
  4081b8:	mov	w8, wzr
  4081bc:	neg	w9, w19
  4081c0:	sub	w19, w8, w9, uxtb
  4081c4:	ldur	x0, [x29, #-32]
  4081c8:	cbnz	x0, 408108 <ascii_strlower_n@plt+0x3d00>
  4081cc:	b	40810c <ascii_strlower_n@plt+0x3d04>
  4081d0:	adrp	x1, 420000 <ascii_strlower_n@plt+0x1bbf8>
  4081d4:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  4081d8:	adrp	x4, 421000 <ascii_strlower_n@plt+0x1cbf8>
  4081dc:	add	x1, x1, #0x104
  4081e0:	add	x2, x2, #0x717
  4081e4:	add	x4, x4, #0x236
  4081e8:	mov	w3, #0x3e0                 	// #992
  4081ec:	mov	w0, wzr
  4081f0:	bl	403a98 <log_assert_failed_realm@plt>
  4081f4:	sub	sp, sp, #0x40
  4081f8:	mov	x0, x2
  4081fc:	adrp	x1, 420000 <ascii_strlower_n@plt+0x1bbf8>
  408200:	adrp	x2, 420000 <ascii_strlower_n@plt+0x1bbf8>
  408204:	adrp	x3, 420000 <ascii_strlower_n@plt+0x1bbf8>
  408208:	adrp	x4, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40820c:	add	x1, x1, #0x1b6
  408210:	add	x2, x2, #0x661
  408214:	add	x3, x3, #0x91e
  408218:	add	x4, x4, #0x49e
  40821c:	add	x5, sp, #0x8
  408220:	mov	x6, xzr
  408224:	mov	x7, xzr
  408228:	stp	x29, x30, [sp, #32]
  40822c:	str	x19, [sp, #48]
  408230:	add	x29, sp, #0x20
  408234:	stp	xzr, xzr, [sp, #8]
  408238:	str	xzr, [sp, #24]
  40823c:	bl	403dc8 <sd_bus_call_method@plt>
  408240:	tbnz	w0, #31, 40824c <ascii_strlower_n@plt+0x3e44>
  408244:	mov	w19, wzr
  408248:	b	4082ac <ascii_strlower_n@plt+0x3ea4>
  40824c:	mov	w19, w0
  408250:	mov	w0, wzr
  408254:	bl	4039a8 <log_get_max_level_realm@plt>
  408258:	cmp	w0, #0x3
  40825c:	b.lt	4082a0 <ascii_strlower_n@plt+0x3e98>  // b.tstop
  408260:	add	x0, sp, #0x8
  408264:	mov	w1, w19
  408268:	bl	403d78 <bus_error_message@plt>
  40826c:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  408270:	adrp	x4, 421000 <ascii_strlower_n@plt+0x1cbf8>
  408274:	adrp	x5, 421000 <ascii_strlower_n@plt+0x1cbf8>
  408278:	mov	x6, x0
  40827c:	add	x2, x2, #0x717
  408280:	add	x4, x4, #0x4ae
  408284:	add	x5, x5, #0x4bf
  408288:	mov	w0, #0x3                   	// #3
  40828c:	mov	w3, #0x45b                 	// #1115
  408290:	mov	w1, w19
  408294:	bl	4039b8 <log_internal_realm@plt>
  408298:	mov	w19, w0
  40829c:	b	4082ac <ascii_strlower_n@plt+0x3ea4>
  4082a0:	mov	w8, wzr
  4082a4:	neg	w9, w19
  4082a8:	sub	w19, w8, w9, uxtb
  4082ac:	add	x0, sp, #0x8
  4082b0:	bl	403d68 <sd_bus_error_free@plt>
  4082b4:	mov	w0, w19
  4082b8:	ldr	x19, [sp, #48]
  4082bc:	ldp	x29, x30, [sp, #32]
  4082c0:	add	sp, sp, #0x40
  4082c4:	ret
  4082c8:	sub	sp, sp, #0x40
  4082cc:	mov	x0, x2
  4082d0:	adrp	x1, 420000 <ascii_strlower_n@plt+0x1bbf8>
  4082d4:	adrp	x2, 420000 <ascii_strlower_n@plt+0x1bbf8>
  4082d8:	adrp	x3, 420000 <ascii_strlower_n@plt+0x1bbf8>
  4082dc:	adrp	x4, 421000 <ascii_strlower_n@plt+0x1cbf8>
  4082e0:	add	x1, x1, #0x1b6
  4082e4:	add	x2, x2, #0x661
  4082e8:	add	x3, x3, #0x91e
  4082ec:	add	x4, x4, #0x4de
  4082f0:	add	x5, sp, #0x8
  4082f4:	mov	x6, xzr
  4082f8:	mov	x7, xzr
  4082fc:	stp	x29, x30, [sp, #32]
  408300:	str	x19, [sp, #48]
  408304:	add	x29, sp, #0x20
  408308:	stp	xzr, xzr, [sp, #8]
  40830c:	str	xzr, [sp, #24]
  408310:	bl	403dc8 <sd_bus_call_method@plt>
  408314:	tbnz	w0, #31, 408320 <ascii_strlower_n@plt+0x3f18>
  408318:	mov	w19, wzr
  40831c:	b	408380 <ascii_strlower_n@plt+0x3f78>
  408320:	mov	w19, w0
  408324:	mov	w0, wzr
  408328:	bl	4039a8 <log_get_max_level_realm@plt>
  40832c:	cmp	w0, #0x3
  408330:	b.lt	408374 <ascii_strlower_n@plt+0x3f6c>  // b.tstop
  408334:	add	x0, sp, #0x8
  408338:	mov	w1, w19
  40833c:	bl	403d78 <bus_error_message@plt>
  408340:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  408344:	adrp	x4, 421000 <ascii_strlower_n@plt+0x1cbf8>
  408348:	adrp	x5, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40834c:	mov	x6, x0
  408350:	add	x2, x2, #0x717
  408354:	add	x4, x4, #0x4ea
  408358:	add	x5, x5, #0x4f7
  40835c:	mov	w0, #0x3                   	// #3
  408360:	mov	w3, #0x46e                 	// #1134
  408364:	mov	w1, w19
  408368:	bl	4039b8 <log_internal_realm@plt>
  40836c:	mov	w19, w0
  408370:	b	408380 <ascii_strlower_n@plt+0x3f78>
  408374:	mov	w8, wzr
  408378:	neg	w9, w19
  40837c:	sub	w19, w8, w9, uxtb
  408380:	add	x0, sp, #0x8
  408384:	bl	403d68 <sd_bus_error_free@plt>
  408388:	mov	w0, w19
  40838c:	ldr	x19, [sp, #48]
  408390:	ldp	x29, x30, [sp, #32]
  408394:	add	sp, sp, #0x40
  408398:	ret
  40839c:	sub	sp, sp, #0x40
  4083a0:	mov	x0, x2
  4083a4:	adrp	x1, 420000 <ascii_strlower_n@plt+0x1bbf8>
  4083a8:	adrp	x2, 420000 <ascii_strlower_n@plt+0x1bbf8>
  4083ac:	adrp	x3, 420000 <ascii_strlower_n@plt+0x1bbf8>
  4083b0:	adrp	x4, 421000 <ascii_strlower_n@plt+0x1cbf8>
  4083b4:	add	x1, x1, #0x1b6
  4083b8:	add	x2, x2, #0x661
  4083bc:	add	x3, x3, #0x91e
  4083c0:	add	x4, x4, #0x512
  4083c4:	add	x5, sp, #0x8
  4083c8:	mov	x6, xzr
  4083cc:	mov	x7, xzr
  4083d0:	stp	x29, x30, [sp, #32]
  4083d4:	str	x19, [sp, #48]
  4083d8:	add	x29, sp, #0x20
  4083dc:	stp	xzr, xzr, [sp, #8]
  4083e0:	str	xzr, [sp, #24]
  4083e4:	bl	403dc8 <sd_bus_call_method@plt>
  4083e8:	tbnz	w0, #31, 4083f4 <ascii_strlower_n@plt+0x3fec>
  4083ec:	mov	w19, wzr
  4083f0:	b	408454 <ascii_strlower_n@plt+0x404c>
  4083f4:	mov	w19, w0
  4083f8:	mov	w0, wzr
  4083fc:	bl	4039a8 <log_get_max_level_realm@plt>
  408400:	cmp	w0, #0x3
  408404:	b.lt	408448 <ascii_strlower_n@plt+0x4040>  // b.tstop
  408408:	add	x0, sp, #0x8
  40840c:	mov	w1, w19
  408410:	bl	403d78 <bus_error_message@plt>
  408414:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  408418:	adrp	x4, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40841c:	adrp	x5, 421000 <ascii_strlower_n@plt+0x1cbf8>
  408420:	mov	x6, x0
  408424:	add	x2, x2, #0x717
  408428:	add	x4, x4, #0x526
  40842c:	add	x5, x5, #0x53c
  408430:	mov	w0, #0x3                   	// #3
  408434:	mov	w3, #0x481                 	// #1153
  408438:	mov	w1, w19
  40843c:	bl	4039b8 <log_internal_realm@plt>
  408440:	mov	w19, w0
  408444:	b	408454 <ascii_strlower_n@plt+0x404c>
  408448:	mov	w8, wzr
  40844c:	neg	w9, w19
  408450:	sub	w19, w8, w9, uxtb
  408454:	add	x0, sp, #0x8
  408458:	bl	403d68 <sd_bus_error_free@plt>
  40845c:	mov	w0, w19
  408460:	ldr	x19, [sp, #48]
  408464:	ldp	x29, x30, [sp, #32]
  408468:	add	sp, sp, #0x40
  40846c:	ret
  408470:	sub	sp, sp, #0x50
  408474:	stp	x29, x30, [sp, #32]
  408478:	stp	x22, x21, [sp, #48]
  40847c:	stp	x20, x19, [sp, #64]
  408480:	add	x29, sp, #0x20
  408484:	stp	xzr, xzr, [sp, #8]
  408488:	str	xzr, [sp, #24]
  40848c:	cbz	x2, 408614 <ascii_strlower_n@plt+0x420c>
  408490:	mov	x19, x2
  408494:	mov	x21, x1
  408498:	mov	w22, w0
  40849c:	cmp	w0, #0x1
  4084a0:	b.le	4084b0 <ascii_strlower_n@plt+0x40a8>
  4084a4:	ldr	x0, [x21, #8]
  4084a8:	bl	404d5c <ascii_strlower_n@plt+0x954>
  4084ac:	tbnz	w0, #31, 4084ec <ascii_strlower_n@plt+0x40e4>
  4084b0:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  4084b4:	ldr	w1, [x8, #48]
  4084b8:	cmp	w1, #0x1
  4084bc:	b.lt	4084e0 <ascii_strlower_n@plt+0x40d8>  // b.tstop
  4084c0:	cmp	w22, #0x2
  4084c4:	b.gt	4084f4 <ascii_strlower_n@plt+0x40ec>
  4084c8:	mov	w3, #0x1                   	// #1
  4084cc:	mov	x0, x19
  4084d0:	mov	x2, xzr
  4084d4:	mov	x4, xzr
  4084d8:	bl	40976c <ascii_strlower_n@plt+0x5364>
  4084dc:	b	4084ec <ascii_strlower_n@plt+0x40e4>
  4084e0:	mov	w1, #0x1                   	// #1
  4084e4:	mov	x0, x19
  4084e8:	bl	409ee4 <ascii_strlower_n@plt+0x5adc>
  4084ec:	mov	w20, w0
  4084f0:	b	408528 <ascii_strlower_n@plt+0x4120>
  4084f4:	add	x21, x21, #0x10
  4084f8:	adrp	x2, 420000 <ascii_strlower_n@plt+0x1bbf8>
  4084fc:	adrp	x3, 420000 <ascii_strlower_n@plt+0x1bbf8>
  408500:	adrp	x4, 420000 <ascii_strlower_n@plt+0x1bbf8>
  408504:	add	x2, x2, #0x1b6
  408508:	add	x3, x3, #0x661
  40850c:	add	x4, x4, #0x91e
  408510:	add	x5, sp, #0x8
  408514:	mov	x0, x19
  408518:	mov	x1, x21
  40851c:	bl	40cea0 <ascii_strlower_n@plt+0x8a98>
  408520:	tbnz	w0, #31, 408548 <ascii_strlower_n@plt+0x4140>
  408524:	mov	w20, wzr
  408528:	add	x0, sp, #0x8
  40852c:	bl	403d68 <sd_bus_error_free@plt>
  408530:	mov	w0, w20
  408534:	ldp	x20, x19, [sp, #64]
  408538:	ldp	x22, x21, [sp, #48]
  40853c:	ldp	x29, x30, [sp, #32]
  408540:	add	sp, sp, #0x50
  408544:	ret
  408548:	adrp	x1, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40854c:	mov	w20, w0
  408550:	add	x1, x1, #0x583
  408554:	add	x0, sp, #0x8
  408558:	bl	403dd8 <sd_bus_error_has_name@plt>
  40855c:	cbz	w0, 408598 <ascii_strlower_n@plt+0x4190>
  408560:	add	x0, sp, #0x8
  408564:	bl	403d68 <sd_bus_error_free@plt>
  408568:	adrp	x2, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40856c:	adrp	x3, 421000 <ascii_strlower_n@plt+0x1cbf8>
  408570:	adrp	x4, 421000 <ascii_strlower_n@plt+0x1cbf8>
  408574:	add	x2, x2, #0x5a5
  408578:	add	x3, x3, #0x5be
  40857c:	add	x4, x4, #0x5d8
  408580:	add	x5, sp, #0x8
  408584:	mov	x0, x19
  408588:	mov	x1, x21
  40858c:	bl	40cea0 <ascii_strlower_n@plt+0x8a98>
  408590:	tbz	w0, #31, 408524 <ascii_strlower_n@plt+0x411c>
  408594:	mov	w20, w0
  408598:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  40859c:	ldrb	w8, [x8, #16]
  4085a0:	cbz	w8, 4085b8 <ascii_strlower_n@plt+0x41b0>
  4085a4:	adrp	x1, 421000 <ascii_strlower_n@plt+0x1cbf8>
  4085a8:	add	x1, x1, #0x5f9
  4085ac:	add	x0, sp, #0x8
  4085b0:	bl	403dd8 <sd_bus_error_has_name@plt>
  4085b4:	cbnz	w0, 408524 <ascii_strlower_n@plt+0x411c>
  4085b8:	mov	w0, wzr
  4085bc:	bl	4039a8 <log_get_max_level_realm@plt>
  4085c0:	cmp	w0, #0x3
  4085c4:	b.lt	408604 <ascii_strlower_n@plt+0x41fc>  // b.tstop
  4085c8:	add	x0, sp, #0x8
  4085cc:	mov	w1, w20
  4085d0:	bl	403d78 <bus_error_message@plt>
  4085d4:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  4085d8:	adrp	x4, 421000 <ascii_strlower_n@plt+0x1cbf8>
  4085dc:	adrp	x5, 421000 <ascii_strlower_n@plt+0x1cbf8>
  4085e0:	mov	x6, x0
  4085e4:	add	x2, x2, #0x717
  4085e8:	add	x4, x4, #0x61d
  4085ec:	add	x5, x5, #0x626
  4085f0:	mov	w0, #0x3                   	// #3
  4085f4:	mov	w3, #0x796                 	// #1942
  4085f8:	mov	w1, w20
  4085fc:	bl	4039b8 <log_internal_realm@plt>
  408600:	b	4084ec <ascii_strlower_n@plt+0x40e4>
  408604:	mov	w8, wzr
  408608:	neg	w9, w20
  40860c:	sub	w20, w8, w9, uxtb
  408610:	b	408528 <ascii_strlower_n@plt+0x4120>
  408614:	adrp	x1, 420000 <ascii_strlower_n@plt+0x1bbf8>
  408618:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  40861c:	adrp	x4, 421000 <ascii_strlower_n@plt+0x1cbf8>
  408620:	add	x1, x1, #0x104
  408624:	add	x2, x2, #0x717
  408628:	add	x4, x4, #0x560
  40862c:	mov	w3, #0x775                 	// #1909
  408630:	mov	w0, wzr
  408634:	bl	403a98 <log_assert_failed_realm@plt>
  408638:	sub	sp, sp, #0x50
  40863c:	stp	x29, x30, [sp, #32]
  408640:	stp	x22, x21, [sp, #48]
  408644:	stp	x20, x19, [sp, #64]
  408648:	add	x29, sp, #0x20
  40864c:	stp	xzr, xzr, [sp, #8]
  408650:	str	xzr, [sp, #24]
  408654:	cbz	x2, 4087dc <ascii_strlower_n@plt+0x43d4>
  408658:	mov	x19, x2
  40865c:	mov	x21, x1
  408660:	mov	w22, w0
  408664:	cmp	w0, #0x1
  408668:	b.le	408678 <ascii_strlower_n@plt+0x4270>
  40866c:	ldr	x0, [x21, #8]
  408670:	bl	404d5c <ascii_strlower_n@plt+0x954>
  408674:	tbnz	w0, #31, 4086b4 <ascii_strlower_n@plt+0x42ac>
  408678:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  40867c:	ldr	w1, [x8, #48]
  408680:	cmp	w1, #0x1
  408684:	b.lt	4086a8 <ascii_strlower_n@plt+0x42a0>  // b.tstop
  408688:	cmp	w22, #0x2
  40868c:	b.gt	4086bc <ascii_strlower_n@plt+0x42b4>
  408690:	mov	w3, #0x2                   	// #2
  408694:	mov	x0, x19
  408698:	mov	x2, xzr
  40869c:	mov	x4, xzr
  4086a0:	bl	40976c <ascii_strlower_n@plt+0x5364>
  4086a4:	b	4086b4 <ascii_strlower_n@plt+0x42ac>
  4086a8:	mov	w1, #0x2                   	// #2
  4086ac:	mov	x0, x19
  4086b0:	bl	409ee4 <ascii_strlower_n@plt+0x5adc>
  4086b4:	mov	w20, w0
  4086b8:	b	4086f0 <ascii_strlower_n@plt+0x42e8>
  4086bc:	add	x21, x21, #0x10
  4086c0:	adrp	x2, 420000 <ascii_strlower_n@plt+0x1bbf8>
  4086c4:	adrp	x3, 420000 <ascii_strlower_n@plt+0x1bbf8>
  4086c8:	adrp	x4, 420000 <ascii_strlower_n@plt+0x1bbf8>
  4086cc:	add	x2, x2, #0x1b6
  4086d0:	add	x3, x3, #0x661
  4086d4:	add	x4, x4, #0x91e
  4086d8:	add	x5, sp, #0x8
  4086dc:	mov	x0, x19
  4086e0:	mov	x1, x21
  4086e4:	bl	40d2d4 <ascii_strlower_n@plt+0x8ecc>
  4086e8:	tbnz	w0, #31, 408710 <ascii_strlower_n@plt+0x4308>
  4086ec:	mov	w20, wzr
  4086f0:	add	x0, sp, #0x8
  4086f4:	bl	403d68 <sd_bus_error_free@plt>
  4086f8:	mov	w0, w20
  4086fc:	ldp	x20, x19, [sp, #64]
  408700:	ldp	x22, x21, [sp, #48]
  408704:	ldp	x29, x30, [sp, #32]
  408708:	add	sp, sp, #0x50
  40870c:	ret
  408710:	adrp	x1, 421000 <ascii_strlower_n@plt+0x1cbf8>
  408714:	mov	w20, w0
  408718:	add	x1, x1, #0x583
  40871c:	add	x0, sp, #0x8
  408720:	bl	403dd8 <sd_bus_error_has_name@plt>
  408724:	cbz	w0, 408760 <ascii_strlower_n@plt+0x4358>
  408728:	add	x0, sp, #0x8
  40872c:	bl	403d68 <sd_bus_error_free@plt>
  408730:	adrp	x2, 421000 <ascii_strlower_n@plt+0x1cbf8>
  408734:	adrp	x3, 421000 <ascii_strlower_n@plt+0x1cbf8>
  408738:	adrp	x4, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40873c:	add	x2, x2, #0x5a5
  408740:	add	x3, x3, #0x5be
  408744:	add	x4, x4, #0x5d8
  408748:	add	x5, sp, #0x8
  40874c:	mov	x0, x19
  408750:	mov	x1, x21
  408754:	bl	40d2d4 <ascii_strlower_n@plt+0x8ecc>
  408758:	tbz	w0, #31, 4086ec <ascii_strlower_n@plt+0x42e4>
  40875c:	mov	w20, w0
  408760:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  408764:	ldrb	w8, [x8, #16]
  408768:	cbz	w8, 408780 <ascii_strlower_n@plt+0x4378>
  40876c:	adrp	x1, 421000 <ascii_strlower_n@plt+0x1cbf8>
  408770:	add	x1, x1, #0x5f9
  408774:	add	x0, sp, #0x8
  408778:	bl	403dd8 <sd_bus_error_has_name@plt>
  40877c:	cbnz	w0, 4086ec <ascii_strlower_n@plt+0x42e4>
  408780:	mov	w0, wzr
  408784:	bl	4039a8 <log_get_max_level_realm@plt>
  408788:	cmp	w0, #0x3
  40878c:	b.lt	4087cc <ascii_strlower_n@plt+0x43c4>  // b.tstop
  408790:	add	x0, sp, #0x8
  408794:	mov	w1, w20
  408798:	bl	403d78 <bus_error_message@plt>
  40879c:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  4087a0:	adrp	x4, 421000 <ascii_strlower_n@plt+0x1cbf8>
  4087a4:	adrp	x5, 421000 <ascii_strlower_n@plt+0x1cbf8>
  4087a8:	mov	x6, x0
  4087ac:	add	x2, x2, #0x717
  4087b0:	add	x4, x4, #0x6ab
  4087b4:	add	x5, x5, #0x6b7
  4087b8:	mov	w0, #0x3                   	// #3
  4087bc:	mov	w3, #0x7f5                 	// #2037
  4087c0:	mov	w1, w20
  4087c4:	bl	4039b8 <log_internal_realm@plt>
  4087c8:	b	4086b4 <ascii_strlower_n@plt+0x42ac>
  4087cc:	mov	w8, wzr
  4087d0:	neg	w9, w20
  4087d4:	sub	w20, w8, w9, uxtb
  4087d8:	b	4086f0 <ascii_strlower_n@plt+0x42e8>
  4087dc:	adrp	x1, 420000 <ascii_strlower_n@plt+0x1bbf8>
  4087e0:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  4087e4:	adrp	x4, 421000 <ascii_strlower_n@plt+0x1cbf8>
  4087e8:	add	x1, x1, #0x104
  4087ec:	add	x2, x2, #0x717
  4087f0:	add	x4, x4, #0x685
  4087f4:	mov	w3, #0x7d4                 	// #2004
  4087f8:	mov	w0, wzr
  4087fc:	bl	403a98 <log_assert_failed_realm@plt>
  408800:	sub	sp, sp, #0x70
  408804:	stp	x29, x30, [sp, #48]
  408808:	stp	x24, x23, [sp, #64]
  40880c:	stp	x22, x21, [sp, #80]
  408810:	stp	x20, x19, [sp, #96]
  408814:	add	x29, sp, #0x30
  408818:	stp	xzr, xzr, [sp, #24]
  40881c:	str	xzr, [sp, #40]
  408820:	cbz	x2, 408a4c <ascii_strlower_n@plt+0x4644>
  408824:	mov	x19, x2
  408828:	mov	x22, x1
  40882c:	mov	w23, w0
  408830:	cmp	w0, #0x1
  408834:	b.le	408844 <ascii_strlower_n@plt+0x443c>
  408838:	ldr	x0, [x22, #8]
  40883c:	bl	404d5c <ascii_strlower_n@plt+0x954>
  408840:	tbnz	w0, #31, 4088f0 <ascii_strlower_n@plt+0x44e8>
  408844:	adrp	x24, 440000 <ascii_strlower_n@plt+0x3bbf8>
  408848:	ldr	w21, [x24, #48]
  40884c:	cmp	w21, #0x1
  408850:	b.lt	40887c <ascii_strlower_n@plt+0x4474>  // b.tstop
  408854:	cmp	w23, #0x2
  408858:	b.gt	408890 <ascii_strlower_n@plt+0x4488>
  40885c:	mov	w3, #0x3                   	// #3
  408860:	mov	x0, x19
  408864:	mov	w1, w21
  408868:	mov	x2, xzr
  40886c:	mov	x4, xzr
  408870:	bl	40976c <ascii_strlower_n@plt+0x5364>
  408874:	mov	w20, w0
  408878:	b	408a1c <ascii_strlower_n@plt+0x4614>
  40887c:	mov	w1, #0x3                   	// #3
  408880:	mov	x0, x19
  408884:	bl	409ee4 <ascii_strlower_n@plt+0x5adc>
  408888:	mov	w20, w0
  40888c:	b	408a1c <ascii_strlower_n@plt+0x4614>
  408890:	ldr	x22, [x22, #16]
  408894:	mov	x0, x22
  408898:	bl	403b48 <parse_boolean@plt>
  40889c:	mov	w20, w0
  4088a0:	tbnz	w0, #31, 4088f8 <ascii_strlower_n@plt+0x44f0>
  4088a4:	adrp	x1, 420000 <ascii_strlower_n@plt+0x1bbf8>
  4088a8:	adrp	x2, 420000 <ascii_strlower_n@plt+0x1bbf8>
  4088ac:	adrp	x3, 420000 <ascii_strlower_n@plt+0x1bbf8>
  4088b0:	adrp	x4, 421000 <ascii_strlower_n@plt+0x1cbf8>
  4088b4:	adrp	x7, 421000 <ascii_strlower_n@plt+0x1cbf8>
  4088b8:	add	x1, x1, #0x1b6
  4088bc:	add	x2, x2, #0x661
  4088c0:	add	x3, x3, #0x91e
  4088c4:	add	x4, x4, #0x79e
  4088c8:	add	x7, x7, #0x7b2
  4088cc:	add	x5, sp, #0x18
  4088d0:	mov	x0, x19
  4088d4:	mov	x6, xzr
  4088d8:	str	w20, [sp, #8]
  4088dc:	str	w21, [sp]
  4088e0:	bl	403dc8 <sd_bus_call_method@plt>
  4088e4:	tbnz	w0, #31, 40893c <ascii_strlower_n@plt+0x4534>
  4088e8:	mov	w20, wzr
  4088ec:	b	408a1c <ascii_strlower_n@plt+0x4614>
  4088f0:	mov	w20, w0
  4088f4:	b	408a1c <ascii_strlower_n@plt+0x4614>
  4088f8:	mov	w0, wzr
  4088fc:	bl	4039a8 <log_get_max_level_realm@plt>
  408900:	cmp	w0, #0x3
  408904:	b.lt	408a10 <ascii_strlower_n@plt+0x4608>  // b.tstop
  408908:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  40890c:	adrp	x4, 421000 <ascii_strlower_n@plt+0x1cbf8>
  408910:	adrp	x5, 421000 <ascii_strlower_n@plt+0x1cbf8>
  408914:	add	x2, x2, #0x717
  408918:	add	x4, x4, #0x766
  40891c:	add	x5, x5, #0x779
  408920:	mov	w0, #0x3                   	// #3
  408924:	mov	w3, #0x810                 	// #2064
  408928:	mov	w1, w20
  40892c:	mov	x6, x22
  408930:	bl	4039b8 <log_internal_realm@plt>
  408934:	mov	w20, w0
  408938:	b	408a1c <ascii_strlower_n@plt+0x4614>
  40893c:	adrp	x1, 421000 <ascii_strlower_n@plt+0x1cbf8>
  408940:	mov	w21, w0
  408944:	add	x1, x1, #0x583
  408948:	add	x0, sp, #0x18
  40894c:	bl	403dd8 <sd_bus_error_has_name@plt>
  408950:	cbz	w0, 4089a8 <ascii_strlower_n@plt+0x45a0>
  408954:	add	x0, sp, #0x18
  408958:	bl	403d68 <sd_bus_error_free@plt>
  40895c:	ldr	w8, [x24, #48]
  408960:	adrp	x1, 421000 <ascii_strlower_n@plt+0x1cbf8>
  408964:	adrp	x2, 421000 <ascii_strlower_n@plt+0x1cbf8>
  408968:	adrp	x3, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40896c:	adrp	x4, 421000 <ascii_strlower_n@plt+0x1cbf8>
  408970:	adrp	x7, 421000 <ascii_strlower_n@plt+0x1cbf8>
  408974:	add	x1, x1, #0x5a5
  408978:	add	x2, x2, #0x5be
  40897c:	add	x3, x3, #0x5d8
  408980:	add	x4, x4, #0x79e
  408984:	add	x7, x7, #0x7b2
  408988:	add	x5, sp, #0x18
  40898c:	mov	x0, x19
  408990:	mov	x6, xzr
  408994:	str	w20, [sp, #8]
  408998:	str	w8, [sp]
  40899c:	bl	403dc8 <sd_bus_call_method@plt>
  4089a0:	tbz	w0, #31, 4088e8 <ascii_strlower_n@plt+0x44e0>
  4089a4:	mov	w21, w0
  4089a8:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  4089ac:	ldrb	w8, [x8, #16]
  4089b0:	cbz	w8, 4089c8 <ascii_strlower_n@plt+0x45c0>
  4089b4:	adrp	x1, 421000 <ascii_strlower_n@plt+0x1cbf8>
  4089b8:	add	x1, x1, #0x5f9
  4089bc:	add	x0, sp, #0x18
  4089c0:	bl	403dd8 <sd_bus_error_has_name@plt>
  4089c4:	cbnz	w0, 4088e8 <ascii_strlower_n@plt+0x44e0>
  4089c8:	mov	w0, wzr
  4089cc:	bl	4039a8 <log_get_max_level_realm@plt>
  4089d0:	cmp	w0, #0x3
  4089d4:	b.lt	408a40 <ascii_strlower_n@plt+0x4638>  // b.tstop
  4089d8:	add	x0, sp, #0x18
  4089dc:	mov	w1, w21
  4089e0:	bl	403d78 <bus_error_message@plt>
  4089e4:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  4089e8:	adrp	x4, 421000 <ascii_strlower_n@plt+0x1cbf8>
  4089ec:	adrp	x5, 421000 <ascii_strlower_n@plt+0x1cbf8>
  4089f0:	mov	x6, x0
  4089f4:	add	x2, x2, #0x717
  4089f8:	add	x4, x4, #0x766
  4089fc:	add	x5, x5, #0x7b5
  408a00:	mov	w0, #0x3                   	// #3
  408a04:	mov	w3, #0x82d                 	// #2093
  408a08:	mov	w1, w21
  408a0c:	b	408930 <ascii_strlower_n@plt+0x4528>
  408a10:	mov	w8, wzr
  408a14:	neg	w9, w20
  408a18:	sub	w20, w8, w9, uxtb
  408a1c:	add	x0, sp, #0x18
  408a20:	bl	403d68 <sd_bus_error_free@plt>
  408a24:	mov	w0, w20
  408a28:	ldp	x20, x19, [sp, #96]
  408a2c:	ldp	x22, x21, [sp, #80]
  408a30:	ldp	x24, x23, [sp, #64]
  408a34:	ldp	x29, x30, [sp, #48]
  408a38:	add	sp, sp, #0x70
  408a3c:	ret
  408a40:	mov	w8, wzr
  408a44:	neg	w9, w21
  408a48:	b	408a18 <ascii_strlower_n@plt+0x4610>
  408a4c:	adrp	x1, 420000 <ascii_strlower_n@plt+0x1bbf8>
  408a50:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  408a54:	adrp	x4, 421000 <ascii_strlower_n@plt+0x1cbf8>
  408a58:	add	x1, x1, #0x104
  408a5c:	add	x2, x2, #0x717
  408a60:	add	x4, x4, #0x739
  408a64:	mov	w3, #0x800                 	// #2048
  408a68:	mov	w0, wzr
  408a6c:	bl	403a98 <log_assert_failed_realm@plt>
  408a70:	sub	sp, sp, #0x70
  408a74:	stp	x29, x30, [sp, #48]
  408a78:	str	x23, [sp, #64]
  408a7c:	stp	x22, x21, [sp, #80]
  408a80:	stp	x20, x19, [sp, #96]
  408a84:	add	x29, sp, #0x30
  408a88:	stp	xzr, xzr, [sp, #24]
  408a8c:	str	xzr, [sp, #40]
  408a90:	cbz	x2, 408c58 <ascii_strlower_n@plt+0x4850>
  408a94:	mov	x19, x2
  408a98:	mov	x20, x1
  408a9c:	mov	w22, w0
  408aa0:	cmp	w0, #0x1
  408aa4:	b.le	408ab4 <ascii_strlower_n@plt+0x46ac>
  408aa8:	ldr	x0, [x20, #8]
  408aac:	bl	404d5c <ascii_strlower_n@plt+0x954>
  408ab0:	tbnz	w0, #31, 408af0 <ascii_strlower_n@plt+0x46e8>
  408ab4:	adrp	x23, 440000 <ascii_strlower_n@plt+0x3bbf8>
  408ab8:	ldr	w1, [x23, #48]
  408abc:	cmp	w1, #0x1
  408ac0:	b.lt	408ae4 <ascii_strlower_n@plt+0x46dc>  // b.tstop
  408ac4:	cmp	w22, #0x2
  408ac8:	b.gt	408af8 <ascii_strlower_n@plt+0x46f0>
  408acc:	mov	w3, #0x4                   	// #4
  408ad0:	mov	x0, x19
  408ad4:	mov	x2, xzr
  408ad8:	mov	x4, xzr
  408adc:	bl	40976c <ascii_strlower_n@plt+0x5364>
  408ae0:	b	408af0 <ascii_strlower_n@plt+0x46e8>
  408ae4:	mov	w1, #0x4                   	// #4
  408ae8:	mov	x0, x19
  408aec:	bl	409ee4 <ascii_strlower_n@plt+0x5adc>
  408af0:	mov	w21, w0
  408af4:	b	408b48 <ascii_strlower_n@plt+0x4740>
  408af8:	ldr	x8, [x20, #16]
  408afc:	adrp	x2, 420000 <ascii_strlower_n@plt+0x1bbf8>
  408b00:	adrp	x3, 420000 <ascii_strlower_n@plt+0x1bbf8>
  408b04:	adrp	x4, 421000 <ascii_strlower_n@plt+0x1cbf8>
  408b08:	str	x8, [sp, #8]
  408b0c:	adrp	x8, 420000 <ascii_strlower_n@plt+0x1bbf8>
  408b10:	add	x8, x8, #0x1b6
  408b14:	adrp	x7, 420000 <ascii_strlower_n@plt+0x1bbf8>
  408b18:	add	x2, x2, #0x661
  408b1c:	add	x3, x3, #0x91e
  408b20:	add	x4, x4, #0x808
  408b24:	add	x7, x7, #0xe25
  408b28:	add	x5, sp, #0x18
  408b2c:	str	w1, [sp]
  408b30:	mov	x0, x19
  408b34:	mov	x1, x8
  408b38:	mov	x6, xzr
  408b3c:	bl	403dc8 <sd_bus_call_method@plt>
  408b40:	tbnz	w0, #31, 408b6c <ascii_strlower_n@plt+0x4764>
  408b44:	mov	w21, wzr
  408b48:	add	x0, sp, #0x18
  408b4c:	bl	403d68 <sd_bus_error_free@plt>
  408b50:	mov	w0, w21
  408b54:	ldp	x20, x19, [sp, #96]
  408b58:	ldp	x22, x21, [sp, #80]
  408b5c:	ldr	x23, [sp, #64]
  408b60:	ldp	x29, x30, [sp, #48]
  408b64:	add	sp, sp, #0x70
  408b68:	ret
  408b6c:	adrp	x1, 421000 <ascii_strlower_n@plt+0x1cbf8>
  408b70:	mov	w21, w0
  408b74:	add	x1, x1, #0x583
  408b78:	add	x0, sp, #0x18
  408b7c:	bl	403dd8 <sd_bus_error_has_name@plt>
  408b80:	cbz	w0, 408bdc <ascii_strlower_n@plt+0x47d4>
  408b84:	add	x0, sp, #0x18
  408b88:	bl	403d68 <sd_bus_error_free@plt>
  408b8c:	ldr	w8, [x23, #48]
  408b90:	ldr	x9, [x20, #16]
  408b94:	adrp	x1, 421000 <ascii_strlower_n@plt+0x1cbf8>
  408b98:	adrp	x2, 421000 <ascii_strlower_n@plt+0x1cbf8>
  408b9c:	adrp	x3, 421000 <ascii_strlower_n@plt+0x1cbf8>
  408ba0:	adrp	x4, 421000 <ascii_strlower_n@plt+0x1cbf8>
  408ba4:	adrp	x7, 420000 <ascii_strlower_n@plt+0x1bbf8>
  408ba8:	add	x1, x1, #0x5a5
  408bac:	add	x2, x2, #0x5be
  408bb0:	add	x3, x3, #0x5d8
  408bb4:	add	x4, x4, #0x808
  408bb8:	add	x7, x7, #0xe25
  408bbc:	add	x5, sp, #0x18
  408bc0:	mov	x0, x19
  408bc4:	mov	x6, xzr
  408bc8:	str	x9, [sp, #8]
  408bcc:	str	w8, [sp]
  408bd0:	bl	403dc8 <sd_bus_call_method@plt>
  408bd4:	tbz	w0, #31, 408b44 <ascii_strlower_n@plt+0x473c>
  408bd8:	mov	w21, w0
  408bdc:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  408be0:	ldrb	w8, [x8, #16]
  408be4:	cbz	w8, 408bfc <ascii_strlower_n@plt+0x47f4>
  408be8:	adrp	x1, 421000 <ascii_strlower_n@plt+0x1cbf8>
  408bec:	add	x1, x1, #0x5f9
  408bf0:	add	x0, sp, #0x18
  408bf4:	bl	403dd8 <sd_bus_error_has_name@plt>
  408bf8:	cbnz	w0, 408b44 <ascii_strlower_n@plt+0x473c>
  408bfc:	mov	w0, wzr
  408c00:	bl	4039a8 <log_get_max_level_realm@plt>
  408c04:	cmp	w0, #0x3
  408c08:	b.lt	408c48 <ascii_strlower_n@plt+0x4840>  // b.tstop
  408c0c:	add	x0, sp, #0x18
  408c10:	mov	w1, w21
  408c14:	bl	403d78 <bus_error_message@plt>
  408c18:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  408c1c:	adrp	x4, 421000 <ascii_strlower_n@plt+0x1cbf8>
  408c20:	adrp	x5, 421000 <ascii_strlower_n@plt+0x1cbf8>
  408c24:	mov	x6, x0
  408c28:	add	x2, x2, #0x717
  408c2c:	add	x4, x4, #0x815
  408c30:	add	x5, x5, #0x820
  408c34:	mov	w0, #0x3                   	// #3
  408c38:	mov	w3, #0x861                 	// #2145
  408c3c:	mov	w1, w21
  408c40:	bl	4039b8 <log_internal_realm@plt>
  408c44:	b	408af0 <ascii_strlower_n@plt+0x46e8>
  408c48:	mov	w8, wzr
  408c4c:	neg	w9, w21
  408c50:	sub	w21, w8, w9, uxtb
  408c54:	b	408b48 <ascii_strlower_n@plt+0x4740>
  408c58:	adrp	x1, 420000 <ascii_strlower_n@plt+0x1bbf8>
  408c5c:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  408c60:	adrp	x4, 421000 <ascii_strlower_n@plt+0x1cbf8>
  408c64:	add	x1, x1, #0x104
  408c68:	add	x2, x2, #0x717
  408c6c:	add	x4, x4, #0x7e3
  408c70:	mov	w3, #0x838                 	// #2104
  408c74:	mov	w0, wzr
  408c78:	bl	403a98 <log_assert_failed_realm@plt>
  408c7c:	sub	sp, sp, #0x70
  408c80:	stp	x29, x30, [sp, #48]
  408c84:	str	x23, [sp, #64]
  408c88:	stp	x22, x21, [sp, #80]
  408c8c:	stp	x20, x19, [sp, #96]
  408c90:	add	x29, sp, #0x30
  408c94:	stp	xzr, xzr, [sp, #24]
  408c98:	str	xzr, [sp, #40]
  408c9c:	cbz	x2, 408e64 <ascii_strlower_n@plt+0x4a5c>
  408ca0:	mov	x19, x2
  408ca4:	mov	x20, x1
  408ca8:	mov	w22, w0
  408cac:	cmp	w0, #0x1
  408cb0:	b.le	408cc0 <ascii_strlower_n@plt+0x48b8>
  408cb4:	ldr	x0, [x20, #8]
  408cb8:	bl	404d5c <ascii_strlower_n@plt+0x954>
  408cbc:	tbnz	w0, #31, 408cfc <ascii_strlower_n@plt+0x48f4>
  408cc0:	adrp	x23, 440000 <ascii_strlower_n@plt+0x3bbf8>
  408cc4:	ldr	w1, [x23, #48]
  408cc8:	cmp	w1, #0x1
  408ccc:	b.lt	408cf0 <ascii_strlower_n@plt+0x48e8>  // b.tstop
  408cd0:	cmp	w22, #0x2
  408cd4:	b.gt	408d04 <ascii_strlower_n@plt+0x48fc>
  408cd8:	mov	w3, #0x5                   	// #5
  408cdc:	mov	x0, x19
  408ce0:	mov	x2, xzr
  408ce4:	mov	x4, xzr
  408ce8:	bl	40976c <ascii_strlower_n@plt+0x5364>
  408cec:	b	408cfc <ascii_strlower_n@plt+0x48f4>
  408cf0:	mov	w1, #0x5                   	// #5
  408cf4:	mov	x0, x19
  408cf8:	bl	409ee4 <ascii_strlower_n@plt+0x5adc>
  408cfc:	mov	w21, w0
  408d00:	b	408d54 <ascii_strlower_n@plt+0x494c>
  408d04:	ldr	x8, [x20, #16]
  408d08:	adrp	x2, 420000 <ascii_strlower_n@plt+0x1bbf8>
  408d0c:	adrp	x3, 420000 <ascii_strlower_n@plt+0x1bbf8>
  408d10:	adrp	x4, 421000 <ascii_strlower_n@plt+0x1cbf8>
  408d14:	str	x8, [sp, #8]
  408d18:	adrp	x8, 420000 <ascii_strlower_n@plt+0x1bbf8>
  408d1c:	add	x8, x8, #0x1b6
  408d20:	adrp	x7, 420000 <ascii_strlower_n@plt+0x1bbf8>
  408d24:	add	x2, x2, #0x661
  408d28:	add	x3, x3, #0x91e
  408d2c:	add	x4, x4, #0x86a
  408d30:	add	x7, x7, #0xe25
  408d34:	add	x5, sp, #0x18
  408d38:	str	w1, [sp]
  408d3c:	mov	x0, x19
  408d40:	mov	x1, x8
  408d44:	mov	x6, xzr
  408d48:	bl	403dc8 <sd_bus_call_method@plt>
  408d4c:	tbnz	w0, #31, 408d78 <ascii_strlower_n@plt+0x4970>
  408d50:	mov	w21, wzr
  408d54:	add	x0, sp, #0x18
  408d58:	bl	403d68 <sd_bus_error_free@plt>
  408d5c:	mov	w0, w21
  408d60:	ldp	x20, x19, [sp, #96]
  408d64:	ldp	x22, x21, [sp, #80]
  408d68:	ldr	x23, [sp, #64]
  408d6c:	ldp	x29, x30, [sp, #48]
  408d70:	add	sp, sp, #0x70
  408d74:	ret
  408d78:	adrp	x1, 421000 <ascii_strlower_n@plt+0x1cbf8>
  408d7c:	mov	w21, w0
  408d80:	add	x1, x1, #0x583
  408d84:	add	x0, sp, #0x18
  408d88:	bl	403dd8 <sd_bus_error_has_name@plt>
  408d8c:	cbz	w0, 408de8 <ascii_strlower_n@plt+0x49e0>
  408d90:	add	x0, sp, #0x18
  408d94:	bl	403d68 <sd_bus_error_free@plt>
  408d98:	ldr	w8, [x23, #48]
  408d9c:	ldr	x9, [x20, #16]
  408da0:	adrp	x1, 421000 <ascii_strlower_n@plt+0x1cbf8>
  408da4:	adrp	x2, 421000 <ascii_strlower_n@plt+0x1cbf8>
  408da8:	adrp	x3, 421000 <ascii_strlower_n@plt+0x1cbf8>
  408dac:	adrp	x4, 421000 <ascii_strlower_n@plt+0x1cbf8>
  408db0:	adrp	x7, 420000 <ascii_strlower_n@plt+0x1bbf8>
  408db4:	add	x1, x1, #0x5a5
  408db8:	add	x2, x2, #0x5be
  408dbc:	add	x3, x3, #0x5d8
  408dc0:	add	x4, x4, #0x86a
  408dc4:	add	x7, x7, #0xe25
  408dc8:	add	x5, sp, #0x18
  408dcc:	mov	x0, x19
  408dd0:	mov	x6, xzr
  408dd4:	str	x9, [sp, #8]
  408dd8:	str	w8, [sp]
  408ddc:	bl	403dc8 <sd_bus_call_method@plt>
  408de0:	tbz	w0, #31, 408d50 <ascii_strlower_n@plt+0x4948>
  408de4:	mov	w21, w0
  408de8:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  408dec:	ldrb	w8, [x8, #16]
  408df0:	cbz	w8, 408e08 <ascii_strlower_n@plt+0x4a00>
  408df4:	adrp	x1, 421000 <ascii_strlower_n@plt+0x1cbf8>
  408df8:	add	x1, x1, #0x5f9
  408dfc:	add	x0, sp, #0x18
  408e00:	bl	403dd8 <sd_bus_error_has_name@plt>
  408e04:	cbnz	w0, 408d50 <ascii_strlower_n@plt+0x4948>
  408e08:	mov	w0, wzr
  408e0c:	bl	4039a8 <log_get_max_level_realm@plt>
  408e10:	cmp	w0, #0x3
  408e14:	b.lt	408e54 <ascii_strlower_n@plt+0x4a4c>  // b.tstop
  408e18:	add	x0, sp, #0x18
  408e1c:	mov	w1, w21
  408e20:	bl	403d78 <bus_error_message@plt>
  408e24:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  408e28:	adrp	x4, 421000 <ascii_strlower_n@plt+0x1cbf8>
  408e2c:	adrp	x5, 421000 <ascii_strlower_n@plt+0x1cbf8>
  408e30:	mov	x6, x0
  408e34:	add	x2, x2, #0x717
  408e38:	add	x4, x4, #0x87e
  408e3c:	add	x5, x5, #0x888
  408e40:	mov	w0, #0x3                   	// #3
  408e44:	mov	w3, #0x895                 	// #2197
  408e48:	mov	w1, w21
  408e4c:	bl	4039b8 <log_internal_realm@plt>
  408e50:	b	408cfc <ascii_strlower_n@plt+0x48f4>
  408e54:	mov	w8, wzr
  408e58:	neg	w9, w21
  408e5c:	sub	w21, w8, w9, uxtb
  408e60:	b	408d54 <ascii_strlower_n@plt+0x494c>
  408e64:	adrp	x1, 420000 <ascii_strlower_n@plt+0x1bbf8>
  408e68:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  408e6c:	adrp	x4, 421000 <ascii_strlower_n@plt+0x1cbf8>
  408e70:	add	x1, x1, #0x104
  408e74:	add	x2, x2, #0x717
  408e78:	add	x4, x4, #0x846
  408e7c:	mov	w3, #0x86c                 	// #2156
  408e80:	mov	w0, wzr
  408e84:	bl	403a98 <log_assert_failed_realm@plt>
  408e88:	sub	sp, sp, #0x70
  408e8c:	stp	x29, x30, [sp, #48]
  408e90:	str	x23, [sp, #64]
  408e94:	stp	x22, x21, [sp, #80]
  408e98:	stp	x20, x19, [sp, #96]
  408e9c:	add	x29, sp, #0x30
  408ea0:	stp	xzr, xzr, [sp, #24]
  408ea4:	str	xzr, [sp, #40]
  408ea8:	cbz	x2, 409070 <ascii_strlower_n@plt+0x4c68>
  408eac:	mov	x19, x2
  408eb0:	mov	x20, x1
  408eb4:	mov	w22, w0
  408eb8:	cmp	w0, #0x1
  408ebc:	b.le	408ecc <ascii_strlower_n@plt+0x4ac4>
  408ec0:	ldr	x0, [x20, #8]
  408ec4:	bl	404d5c <ascii_strlower_n@plt+0x954>
  408ec8:	tbnz	w0, #31, 408f08 <ascii_strlower_n@plt+0x4b00>
  408ecc:	adrp	x23, 440000 <ascii_strlower_n@plt+0x3bbf8>
  408ed0:	ldr	w1, [x23, #48]
  408ed4:	cmp	w1, #0x1
  408ed8:	b.lt	408efc <ascii_strlower_n@plt+0x4af4>  // b.tstop
  408edc:	cmp	w22, #0x2
  408ee0:	b.gt	408f10 <ascii_strlower_n@plt+0x4b08>
  408ee4:	mov	w3, #0x6                   	// #6
  408ee8:	mov	x0, x19
  408eec:	mov	x2, xzr
  408ef0:	mov	x4, xzr
  408ef4:	bl	40976c <ascii_strlower_n@plt+0x5364>
  408ef8:	b	408f08 <ascii_strlower_n@plt+0x4b00>
  408efc:	mov	w1, #0x6                   	// #6
  408f00:	mov	x0, x19
  408f04:	bl	409ee4 <ascii_strlower_n@plt+0x5adc>
  408f08:	mov	w21, w0
  408f0c:	b	408f60 <ascii_strlower_n@plt+0x4b58>
  408f10:	ldr	x8, [x20, #16]
  408f14:	adrp	x2, 420000 <ascii_strlower_n@plt+0x1bbf8>
  408f18:	adrp	x3, 420000 <ascii_strlower_n@plt+0x1bbf8>
  408f1c:	adrp	x4, 421000 <ascii_strlower_n@plt+0x1cbf8>
  408f20:	str	x8, [sp, #8]
  408f24:	adrp	x8, 420000 <ascii_strlower_n@plt+0x1bbf8>
  408f28:	add	x8, x8, #0x1b6
  408f2c:	adrp	x7, 420000 <ascii_strlower_n@plt+0x1bbf8>
  408f30:	add	x2, x2, #0x661
  408f34:	add	x3, x3, #0x91e
  408f38:	add	x4, x4, #0x8e1
  408f3c:	add	x7, x7, #0xe25
  408f40:	add	x5, sp, #0x18
  408f44:	str	w1, [sp]
  408f48:	mov	x0, x19
  408f4c:	mov	x1, x8
  408f50:	mov	x6, xzr
  408f54:	bl	403dc8 <sd_bus_call_method@plt>
  408f58:	tbnz	w0, #31, 408f84 <ascii_strlower_n@plt+0x4b7c>
  408f5c:	mov	w21, wzr
  408f60:	add	x0, sp, #0x18
  408f64:	bl	403d68 <sd_bus_error_free@plt>
  408f68:	mov	w0, w21
  408f6c:	ldp	x20, x19, [sp, #96]
  408f70:	ldp	x22, x21, [sp, #80]
  408f74:	ldr	x23, [sp, #64]
  408f78:	ldp	x29, x30, [sp, #48]
  408f7c:	add	sp, sp, #0x70
  408f80:	ret
  408f84:	adrp	x1, 421000 <ascii_strlower_n@plt+0x1cbf8>
  408f88:	mov	w21, w0
  408f8c:	add	x1, x1, #0x583
  408f90:	add	x0, sp, #0x18
  408f94:	bl	403dd8 <sd_bus_error_has_name@plt>
  408f98:	cbz	w0, 408ff4 <ascii_strlower_n@plt+0x4bec>
  408f9c:	add	x0, sp, #0x18
  408fa0:	bl	403d68 <sd_bus_error_free@plt>
  408fa4:	ldr	w8, [x23, #48]
  408fa8:	ldr	x9, [x20, #16]
  408fac:	adrp	x1, 421000 <ascii_strlower_n@plt+0x1cbf8>
  408fb0:	adrp	x2, 421000 <ascii_strlower_n@plt+0x1cbf8>
  408fb4:	adrp	x3, 421000 <ascii_strlower_n@plt+0x1cbf8>
  408fb8:	adrp	x4, 421000 <ascii_strlower_n@plt+0x1cbf8>
  408fbc:	adrp	x7, 420000 <ascii_strlower_n@plt+0x1bbf8>
  408fc0:	add	x1, x1, #0x5a5
  408fc4:	add	x2, x2, #0x5be
  408fc8:	add	x3, x3, #0x5d8
  408fcc:	add	x4, x4, #0x8e1
  408fd0:	add	x7, x7, #0xe25
  408fd4:	add	x5, sp, #0x18
  408fd8:	mov	x0, x19
  408fdc:	mov	x6, xzr
  408fe0:	str	x9, [sp, #8]
  408fe4:	str	w8, [sp]
  408fe8:	bl	403dc8 <sd_bus_call_method@plt>
  408fec:	tbz	w0, #31, 408f5c <ascii_strlower_n@plt+0x4b54>
  408ff0:	mov	w21, w0
  408ff4:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  408ff8:	ldrb	w8, [x8, #16]
  408ffc:	cbz	w8, 409014 <ascii_strlower_n@plt+0x4c0c>
  409000:	adrp	x1, 421000 <ascii_strlower_n@plt+0x1cbf8>
  409004:	add	x1, x1, #0x5f9
  409008:	add	x0, sp, #0x18
  40900c:	bl	403dd8 <sd_bus_error_has_name@plt>
  409010:	cbnz	w0, 408f5c <ascii_strlower_n@plt+0x4b54>
  409014:	mov	w0, wzr
  409018:	bl	4039a8 <log_get_max_level_realm@plt>
  40901c:	cmp	w0, #0x3
  409020:	b.lt	409060 <ascii_strlower_n@plt+0x4c58>  // b.tstop
  409024:	add	x0, sp, #0x18
  409028:	mov	w1, w21
  40902c:	bl	403d78 <bus_error_message@plt>
  409030:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  409034:	adrp	x4, 421000 <ascii_strlower_n@plt+0x1cbf8>
  409038:	adrp	x5, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40903c:	mov	x6, x0
  409040:	add	x2, x2, #0x717
  409044:	add	x4, x4, #0x8f3
  409048:	add	x5, x5, #0x905
  40904c:	mov	w0, #0x3                   	// #3
  409050:	mov	w3, #0x8c9                 	// #2249
  409054:	mov	w1, w21
  409058:	bl	4039b8 <log_internal_realm@plt>
  40905c:	b	408f08 <ascii_strlower_n@plt+0x4b00>
  409060:	mov	w8, wzr
  409064:	neg	w9, w21
  409068:	sub	w21, w8, w9, uxtb
  40906c:	b	408f60 <ascii_strlower_n@plt+0x4b58>
  409070:	adrp	x1, 420000 <ascii_strlower_n@plt+0x1bbf8>
  409074:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  409078:	adrp	x4, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40907c:	add	x1, x1, #0x104
  409080:	add	x2, x2, #0x717
  409084:	add	x4, x4, #0x8b5
  409088:	mov	w3, #0x8a0                 	// #2208
  40908c:	mov	w0, wzr
  409090:	bl	403a98 <log_assert_failed_realm@plt>
  409094:	sub	sp, sp, #0x70
  409098:	stp	x29, x30, [sp, #48]
  40909c:	str	x23, [sp, #64]
  4090a0:	stp	x22, x21, [sp, #80]
  4090a4:	stp	x20, x19, [sp, #96]
  4090a8:	add	x29, sp, #0x30
  4090ac:	stp	xzr, xzr, [sp, #24]
  4090b0:	str	xzr, [sp, #40]
  4090b4:	cbz	x2, 40927c <ascii_strlower_n@plt+0x4e74>
  4090b8:	mov	x19, x2
  4090bc:	mov	x20, x1
  4090c0:	mov	w22, w0
  4090c4:	cmp	w0, #0x1
  4090c8:	b.le	4090d8 <ascii_strlower_n@plt+0x4cd0>
  4090cc:	ldr	x0, [x20, #8]
  4090d0:	bl	404d5c <ascii_strlower_n@plt+0x954>
  4090d4:	tbnz	w0, #31, 409114 <ascii_strlower_n@plt+0x4d0c>
  4090d8:	adrp	x23, 440000 <ascii_strlower_n@plt+0x3bbf8>
  4090dc:	ldr	w1, [x23, #48]
  4090e0:	cmp	w1, #0x1
  4090e4:	b.lt	409108 <ascii_strlower_n@plt+0x4d00>  // b.tstop
  4090e8:	cmp	w22, #0x2
  4090ec:	b.gt	40911c <ascii_strlower_n@plt+0x4d14>
  4090f0:	mov	w3, #0x7                   	// #7
  4090f4:	mov	x0, x19
  4090f8:	mov	x2, xzr
  4090fc:	mov	x4, xzr
  409100:	bl	40976c <ascii_strlower_n@plt+0x5364>
  409104:	b	409114 <ascii_strlower_n@plt+0x4d0c>
  409108:	mov	w1, #0x7                   	// #7
  40910c:	mov	x0, x19
  409110:	bl	409ee4 <ascii_strlower_n@plt+0x5adc>
  409114:	mov	w21, w0
  409118:	b	40916c <ascii_strlower_n@plt+0x4d64>
  40911c:	ldr	x8, [x20, #16]
  409120:	adrp	x2, 420000 <ascii_strlower_n@plt+0x1bbf8>
  409124:	adrp	x3, 420000 <ascii_strlower_n@plt+0x1bbf8>
  409128:	adrp	x4, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40912c:	str	x8, [sp, #8]
  409130:	adrp	x8, 420000 <ascii_strlower_n@plt+0x1bbf8>
  409134:	add	x8, x8, #0x1b6
  409138:	adrp	x7, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40913c:	add	x2, x2, #0x661
  409140:	add	x3, x3, #0x91e
  409144:	add	x4, x4, #0x956
  409148:	add	x7, x7, #0xe25
  40914c:	add	x5, sp, #0x18
  409150:	str	w1, [sp]
  409154:	mov	x0, x19
  409158:	mov	x1, x8
  40915c:	mov	x6, xzr
  409160:	bl	403dc8 <sd_bus_call_method@plt>
  409164:	tbnz	w0, #31, 409190 <ascii_strlower_n@plt+0x4d88>
  409168:	mov	w21, wzr
  40916c:	add	x0, sp, #0x18
  409170:	bl	403d68 <sd_bus_error_free@plt>
  409174:	mov	w0, w21
  409178:	ldp	x20, x19, [sp, #96]
  40917c:	ldp	x22, x21, [sp, #80]
  409180:	ldr	x23, [sp, #64]
  409184:	ldp	x29, x30, [sp, #48]
  409188:	add	sp, sp, #0x70
  40918c:	ret
  409190:	adrp	x1, 421000 <ascii_strlower_n@plt+0x1cbf8>
  409194:	mov	w21, w0
  409198:	add	x1, x1, #0x583
  40919c:	add	x0, sp, #0x18
  4091a0:	bl	403dd8 <sd_bus_error_has_name@plt>
  4091a4:	cbz	w0, 409200 <ascii_strlower_n@plt+0x4df8>
  4091a8:	add	x0, sp, #0x18
  4091ac:	bl	403d68 <sd_bus_error_free@plt>
  4091b0:	ldr	w8, [x23, #48]
  4091b4:	ldr	x9, [x20, #16]
  4091b8:	adrp	x1, 421000 <ascii_strlower_n@plt+0x1cbf8>
  4091bc:	adrp	x2, 421000 <ascii_strlower_n@plt+0x1cbf8>
  4091c0:	adrp	x3, 421000 <ascii_strlower_n@plt+0x1cbf8>
  4091c4:	adrp	x4, 421000 <ascii_strlower_n@plt+0x1cbf8>
  4091c8:	adrp	x7, 420000 <ascii_strlower_n@plt+0x1bbf8>
  4091cc:	add	x1, x1, #0x5a5
  4091d0:	add	x2, x2, #0x5be
  4091d4:	add	x3, x3, #0x5d8
  4091d8:	add	x4, x4, #0x956
  4091dc:	add	x7, x7, #0xe25
  4091e0:	add	x5, sp, #0x18
  4091e4:	mov	x0, x19
  4091e8:	mov	x6, xzr
  4091ec:	str	x9, [sp, #8]
  4091f0:	str	w8, [sp]
  4091f4:	bl	403dc8 <sd_bus_call_method@plt>
  4091f8:	tbz	w0, #31, 409168 <ascii_strlower_n@plt+0x4d60>
  4091fc:	mov	w21, w0
  409200:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  409204:	ldrb	w8, [x8, #16]
  409208:	cbz	w8, 409220 <ascii_strlower_n@plt+0x4e18>
  40920c:	adrp	x1, 421000 <ascii_strlower_n@plt+0x1cbf8>
  409210:	add	x1, x1, #0x5f9
  409214:	add	x0, sp, #0x18
  409218:	bl	403dd8 <sd_bus_error_has_name@plt>
  40921c:	cbnz	w0, 409168 <ascii_strlower_n@plt+0x4d60>
  409220:	mov	w0, wzr
  409224:	bl	4039a8 <log_get_max_level_realm@plt>
  409228:	cmp	w0, #0x3
  40922c:	b.lt	40926c <ascii_strlower_n@plt+0x4e64>  // b.tstop
  409230:	add	x0, sp, #0x18
  409234:	mov	w1, w21
  409238:	bl	403d78 <bus_error_message@plt>
  40923c:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  409240:	adrp	x4, 421000 <ascii_strlower_n@plt+0x1cbf8>
  409244:	adrp	x5, 421000 <ascii_strlower_n@plt+0x1cbf8>
  409248:	mov	x6, x0
  40924c:	add	x2, x2, #0x717
  409250:	add	x4, x4, #0x964
  409254:	add	x5, x5, #0x970
  409258:	mov	w0, #0x3                   	// #3
  40925c:	mov	w3, #0x8fd                 	// #2301
  409260:	mov	w1, w21
  409264:	bl	4039b8 <log_internal_realm@plt>
  409268:	b	409114 <ascii_strlower_n@plt+0x4d0c>
  40926c:	mov	w8, wzr
  409270:	neg	w9, w21
  409274:	sub	w21, w8, w9, uxtb
  409278:	b	40916c <ascii_strlower_n@plt+0x4d64>
  40927c:	adrp	x1, 420000 <ascii_strlower_n@plt+0x1bbf8>
  409280:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  409284:	adrp	x4, 421000 <ascii_strlower_n@plt+0x1cbf8>
  409288:	add	x1, x1, #0x104
  40928c:	add	x2, x2, #0x717
  409290:	add	x4, x4, #0x930
  409294:	mov	w3, #0x8d4                 	// #2260
  409298:	mov	w0, wzr
  40929c:	bl	403a98 <log_assert_failed_realm@plt>
  4092a0:	sub	sp, sp, #0x70
  4092a4:	stp	x29, x30, [sp, #48]
  4092a8:	str	x23, [sp, #64]
  4092ac:	stp	x22, x21, [sp, #80]
  4092b0:	stp	x20, x19, [sp, #96]
  4092b4:	add	x29, sp, #0x30
  4092b8:	stp	xzr, xzr, [sp, #24]
  4092bc:	str	xzr, [sp, #40]
  4092c0:	cbz	x2, 409544 <ascii_strlower_n@plt+0x513c>
  4092c4:	mov	x19, x2
  4092c8:	mov	x21, x1
  4092cc:	mov	w22, w0
  4092d0:	cmp	w0, #0x1
  4092d4:	b.le	4092e4 <ascii_strlower_n@plt+0x4edc>
  4092d8:	ldr	x0, [x21, #8]
  4092dc:	bl	404d5c <ascii_strlower_n@plt+0x954>
  4092e0:	tbnz	w0, #31, 409320 <ascii_strlower_n@plt+0x4f18>
  4092e4:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  4092e8:	ldr	w1, [x8, #48]
  4092ec:	cmp	w1, #0x1
  4092f0:	b.lt	409314 <ascii_strlower_n@plt+0x4f0c>  // b.tstop
  4092f4:	cmp	w22, #0x2
  4092f8:	b.gt	409348 <ascii_strlower_n@plt+0x4f40>
  4092fc:	mov	w3, #0x8                   	// #8
  409300:	mov	x0, x19
  409304:	mov	x2, xzr
  409308:	mov	x4, xzr
  40930c:	bl	40976c <ascii_strlower_n@plt+0x5364>
  409310:	b	409320 <ascii_strlower_n@plt+0x4f18>
  409314:	mov	w1, #0x8                   	// #8
  409318:	mov	x0, x19
  40931c:	bl	409ee4 <ascii_strlower_n@plt+0x5adc>
  409320:	mov	w20, w0
  409324:	add	x0, sp, #0x18
  409328:	bl	403d68 <sd_bus_error_free@plt>
  40932c:	mov	w0, w20
  409330:	ldp	x20, x19, [sp, #96]
  409334:	ldp	x22, x21, [sp, #80]
  409338:	ldr	x23, [sp, #64]
  40933c:	ldp	x29, x30, [sp, #48]
  409340:	add	sp, sp, #0x70
  409344:	ret
  409348:	add	x20, x21, #0x10
  40934c:	adrp	x8, 41e000 <ascii_strlower_n@plt+0x19bf8>
  409350:	add	x8, x8, #0x804
  409354:	add	x1, sp, #0x8
  409358:	mov	x0, x20
  40935c:	stp	x8, xzr, [sp, #8]
  409360:	bl	403de8 <strv_equal@plt>
  409364:	mov	w21, w0
  409368:	tbnz	w0, #0, 4093a8 <ascii_strlower_n@plt+0x4fa0>
  40936c:	ldr	x0, [x20]
  409370:	cbz	x0, 4093a8 <ascii_strlower_n@plt+0x4fa0>
  409374:	mov	x23, x20
  409378:	mov	x1, xzr
  40937c:	mov	w2, wzr
  409380:	mov	x3, xzr
  409384:	bl	403df8 <dns_name_concat@plt>
  409388:	cmp	w0, #0x0
  40938c:	csinc	w8, w0, wzr, lt  // lt = tstop
  409390:	cmn	w0, #0x16
  409394:	csel	w22, wzr, w8, eq  // eq = none
  409398:	tbnz	w22, #31, 40949c <ascii_strlower_n@plt+0x5094>
  40939c:	cbz	w22, 4094dc <ascii_strlower_n@plt+0x50d4>
  4093a0:	ldr	x0, [x23, #8]!
  4093a4:	cbnz	x0, 409378 <ascii_strlower_n@plt+0x4f70>
  4093a8:	tst	w21, #0x1
  4093ac:	csel	x21, xzr, x20, ne  // ne = any
  4093b0:	adrp	x2, 420000 <ascii_strlower_n@plt+0x1bbf8>
  4093b4:	adrp	x3, 420000 <ascii_strlower_n@plt+0x1bbf8>
  4093b8:	adrp	x4, 420000 <ascii_strlower_n@plt+0x1bbf8>
  4093bc:	add	x2, x2, #0x1b6
  4093c0:	add	x3, x3, #0x661
  4093c4:	add	x4, x4, #0x91e
  4093c8:	add	x5, sp, #0x18
  4093cc:	mov	x0, x19
  4093d0:	mov	x1, x21
  4093d4:	bl	40d608 <ascii_strlower_n@plt+0x9200>
  4093d8:	tbnz	w0, #31, 4093e4 <ascii_strlower_n@plt+0x4fdc>
  4093dc:	mov	w20, wzr
  4093e0:	b	409324 <ascii_strlower_n@plt+0x4f1c>
  4093e4:	adrp	x1, 421000 <ascii_strlower_n@plt+0x1cbf8>
  4093e8:	mov	w20, w0
  4093ec:	add	x1, x1, #0x583
  4093f0:	add	x0, sp, #0x18
  4093f4:	bl	403dd8 <sd_bus_error_has_name@plt>
  4093f8:	cbz	w0, 409434 <ascii_strlower_n@plt+0x502c>
  4093fc:	add	x0, sp, #0x18
  409400:	bl	403d68 <sd_bus_error_free@plt>
  409404:	adrp	x2, 421000 <ascii_strlower_n@plt+0x1cbf8>
  409408:	adrp	x3, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40940c:	adrp	x4, 421000 <ascii_strlower_n@plt+0x1cbf8>
  409410:	add	x2, x2, #0x5a5
  409414:	add	x3, x3, #0x5be
  409418:	add	x4, x4, #0x5d8
  40941c:	add	x5, sp, #0x18
  409420:	mov	x0, x19
  409424:	mov	x1, x21
  409428:	bl	40d608 <ascii_strlower_n@plt+0x9200>
  40942c:	tbz	w0, #31, 4093dc <ascii_strlower_n@plt+0x4fd4>
  409430:	mov	w20, w0
  409434:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  409438:	ldrb	w8, [x8, #16]
  40943c:	cbz	w8, 409454 <ascii_strlower_n@plt+0x504c>
  409440:	adrp	x1, 421000 <ascii_strlower_n@plt+0x1cbf8>
  409444:	add	x1, x1, #0x5f9
  409448:	add	x0, sp, #0x18
  40944c:	bl	403dd8 <sd_bus_error_has_name@plt>
  409450:	cbnz	w0, 4093dc <ascii_strlower_n@plt+0x4fd4>
  409454:	mov	w0, wzr
  409458:	bl	4039a8 <log_get_max_level_realm@plt>
  40945c:	cmp	w0, #0x3
  409460:	b.lt	409520 <ascii_strlower_n@plt+0x5118>  // b.tstop
  409464:	add	x0, sp, #0x18
  409468:	mov	w1, w20
  40946c:	bl	403d78 <bus_error_message@plt>
  409470:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  409474:	adrp	x4, 421000 <ascii_strlower_n@plt+0x1cbf8>
  409478:	adrp	x5, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40947c:	mov	x6, x0
  409480:	add	x2, x2, #0x717
  409484:	add	x4, x4, #0x9ba
  409488:	add	x5, x5, #0x9c3
  40948c:	mov	w0, #0x3                   	// #3
  409490:	mov	w3, #0x953                 	// #2387
  409494:	mov	w1, w20
  409498:	b	4094d4 <ascii_strlower_n@plt+0x50cc>
  40949c:	mov	w0, wzr
  4094a0:	bl	4039a8 <log_get_max_level_realm@plt>
  4094a4:	cmp	w0, #0x3
  4094a8:	b.lt	40952c <ascii_strlower_n@plt+0x5124>  // b.tstop
  4094ac:	ldr	x6, [x23]
  4094b0:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  4094b4:	adrp	x4, 421000 <ascii_strlower_n@plt+0x1cbf8>
  4094b8:	adrp	x5, 421000 <ascii_strlower_n@plt+0x1cbf8>
  4094bc:	add	x2, x2, #0x717
  4094c0:	add	x4, x4, #0x9ba
  4094c4:	add	x5, x5, #0x6f9
  4094c8:	mov	w0, #0x3                   	// #3
  4094cc:	mov	w3, #0x939                 	// #2361
  4094d0:	mov	w1, w22
  4094d4:	bl	4039b8 <log_internal_realm@plt>
  4094d8:	b	409320 <ascii_strlower_n@plt+0x4f18>
  4094dc:	mov	w0, wzr
  4094e0:	bl	4039a8 <log_get_max_level_realm@plt>
  4094e4:	cmp	w0, #0x3
  4094e8:	b.lt	40953c <ascii_strlower_n@plt+0x5134>  // b.tstop
  4094ec:	ldr	x6, [x23]
  4094f0:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  4094f4:	adrp	x4, 421000 <ascii_strlower_n@plt+0x1cbf8>
  4094f8:	adrp	x5, 421000 <ascii_strlower_n@plt+0x1cbf8>
  4094fc:	add	x2, x2, #0x717
  409500:	add	x4, x4, #0x9ba
  409504:	add	x5, x5, #0x724
  409508:	mov	w0, #0x3                   	// #3
  40950c:	mov	w3, #0x93b                 	// #2363
  409510:	mov	w1, wzr
  409514:	bl	4039b8 <log_internal_realm@plt>
  409518:	mov	w20, #0xffffffea            	// #-22
  40951c:	b	409324 <ascii_strlower_n@plt+0x4f1c>
  409520:	mov	w8, wzr
  409524:	neg	w9, w20
  409528:	b	409534 <ascii_strlower_n@plt+0x512c>
  40952c:	mov	w8, wzr
  409530:	neg	w9, w22
  409534:	sub	w20, w8, w9, uxtb
  409538:	b	409324 <ascii_strlower_n@plt+0x4f1c>
  40953c:	mov	w20, #0xffffffea            	// #-22
  409540:	b	409324 <ascii_strlower_n@plt+0x4f1c>
  409544:	adrp	x1, 420000 <ascii_strlower_n@plt+0x1bbf8>
  409548:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  40954c:	adrp	x4, 421000 <ascii_strlower_n@plt+0x1cbf8>
  409550:	add	x1, x1, #0x104
  409554:	add	x2, x2, #0x717
  409558:	add	x4, x4, #0x997
  40955c:	mov	w3, #0x923                 	// #2339
  409560:	mov	w0, wzr
  409564:	bl	403a98 <log_assert_failed_realm@plt>
  409568:	sub	sp, sp, #0x50
  40956c:	stp	x29, x30, [sp, #32]
  409570:	str	x21, [sp, #48]
  409574:	stp	x20, x19, [sp, #64]
  409578:	add	x29, sp, #0x20
  40957c:	stp	xzr, xzr, [sp, #8]
  409580:	str	xzr, [sp, #24]
  409584:	cbz	x2, 409748 <ascii_strlower_n@plt+0x5340>
  409588:	mov	x19, x2
  40958c:	cmp	w0, #0x1
  409590:	b.le	4095a0 <ascii_strlower_n@plt+0x5198>
  409594:	ldr	x0, [x1, #8]
  409598:	bl	404d5c <ascii_strlower_n@plt+0x954>
  40959c:	tbnz	w0, #31, 40970c <ascii_strlower_n@plt+0x5304>
  4095a0:	adrp	x21, 440000 <ascii_strlower_n@plt+0x3bbf8>
  4095a4:	ldr	w8, [x21, #48]
  4095a8:	cmp	w8, #0x1
  4095ac:	b.lt	4095f8 <ascii_strlower_n@plt+0x51f0>  // b.tstop
  4095b0:	adrp	x1, 420000 <ascii_strlower_n@plt+0x1bbf8>
  4095b4:	adrp	x2, 420000 <ascii_strlower_n@plt+0x1bbf8>
  4095b8:	adrp	x3, 420000 <ascii_strlower_n@plt+0x1bbf8>
  4095bc:	adrp	x4, 421000 <ascii_strlower_n@plt+0x1cbf8>
  4095c0:	adrp	x7, 420000 <ascii_strlower_n@plt+0x1bbf8>
  4095c4:	add	x1, x1, #0x1b6
  4095c8:	add	x2, x2, #0x661
  4095cc:	add	x3, x3, #0x91e
  4095d0:	add	x4, x4, #0xa72
  4095d4:	add	x7, x7, #0x42b
  4095d8:	add	x5, sp, #0x8
  4095dc:	mov	x0, x19
  4095e0:	mov	x6, xzr
  4095e4:	str	w8, [sp]
  4095e8:	bl	403dc8 <sd_bus_call_method@plt>
  4095ec:	tbnz	w0, #31, 40963c <ascii_strlower_n@plt+0x5234>
  4095f0:	mov	w20, wzr
  4095f4:	b	409718 <ascii_strlower_n@plt+0x5310>
  4095f8:	mov	w0, wzr
  4095fc:	bl	4039a8 <log_get_max_level_realm@plt>
  409600:	cmp	w0, #0x3
  409604:	b.lt	409714 <ascii_strlower_n@plt+0x530c>  // b.tstop
  409608:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  40960c:	adrp	x4, 421000 <ascii_strlower_n@plt+0x1cbf8>
  409610:	adrp	x5, 421000 <ascii_strlower_n@plt+0x1cbf8>
  409614:	mov	w1, #0x16                  	// #22
  409618:	add	x2, x2, #0x717
  40961c:	add	x4, x4, #0xa44
  409620:	add	x5, x5, #0xa55
  409624:	mov	w0, #0x3                   	// #3
  409628:	movk	w1, #0x4000, lsl #16
  40962c:	mov	w3, #0x967                 	// #2407
  409630:	bl	4039b8 <log_internal_realm@plt>
  409634:	mov	w20, w0
  409638:	b	409718 <ascii_strlower_n@plt+0x5310>
  40963c:	adrp	x1, 421000 <ascii_strlower_n@plt+0x1cbf8>
  409640:	mov	w20, w0
  409644:	add	x1, x1, #0x583
  409648:	add	x0, sp, #0x8
  40964c:	bl	403dd8 <sd_bus_error_has_name@plt>
  409650:	cbz	w0, 4096a4 <ascii_strlower_n@plt+0x529c>
  409654:	add	x0, sp, #0x8
  409658:	bl	403d68 <sd_bus_error_free@plt>
  40965c:	ldr	w8, [x21, #48]
  409660:	adrp	x1, 421000 <ascii_strlower_n@plt+0x1cbf8>
  409664:	adrp	x2, 421000 <ascii_strlower_n@plt+0x1cbf8>
  409668:	adrp	x3, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40966c:	adrp	x4, 421000 <ascii_strlower_n@plt+0x1cbf8>
  409670:	adrp	x7, 420000 <ascii_strlower_n@plt+0x1bbf8>
  409674:	add	x1, x1, #0x5a5
  409678:	add	x2, x2, #0x5be
  40967c:	add	x3, x3, #0x5d8
  409680:	add	x4, x4, #0xa7d
  409684:	add	x7, x7, #0x42b
  409688:	add	x5, sp, #0x8
  40968c:	mov	x0, x19
  409690:	mov	x6, xzr
  409694:	str	w8, [sp]
  409698:	bl	403dc8 <sd_bus_call_method@plt>
  40969c:	tbz	w0, #31, 4095f0 <ascii_strlower_n@plt+0x51e8>
  4096a0:	mov	w20, w0
  4096a4:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  4096a8:	ldrb	w8, [x8, #16]
  4096ac:	cbz	w8, 4096c4 <ascii_strlower_n@plt+0x52bc>
  4096b0:	adrp	x1, 421000 <ascii_strlower_n@plt+0x1cbf8>
  4096b4:	add	x1, x1, #0x5f9
  4096b8:	add	x0, sp, #0x8
  4096bc:	bl	403dd8 <sd_bus_error_has_name@plt>
  4096c0:	cbnz	w0, 4095f0 <ascii_strlower_n@plt+0x51e8>
  4096c4:	mov	w0, wzr
  4096c8:	bl	4039a8 <log_get_max_level_realm@plt>
  4096cc:	cmp	w0, #0x3
  4096d0:	b.lt	409738 <ascii_strlower_n@plt+0x5330>  // b.tstop
  4096d4:	add	x0, sp, #0x8
  4096d8:	mov	w1, w20
  4096dc:	bl	403d78 <bus_error_message@plt>
  4096e0:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  4096e4:	adrp	x4, 421000 <ascii_strlower_n@plt+0x1cbf8>
  4096e8:	adrp	x5, 421000 <ascii_strlower_n@plt+0x1cbf8>
  4096ec:	mov	x6, x0
  4096f0:	add	x2, x2, #0x717
  4096f4:	add	x4, x4, #0xa44
  4096f8:	add	x5, x5, #0xa8b
  4096fc:	mov	w0, #0x3                   	// #3
  409700:	mov	w3, #0x984                 	// #2436
  409704:	mov	w1, w20
  409708:	bl	4039b8 <log_internal_realm@plt>
  40970c:	mov	w20, w0
  409710:	b	409718 <ascii_strlower_n@plt+0x5310>
  409714:	mov	w20, #0xffffffea            	// #-22
  409718:	add	x0, sp, #0x8
  40971c:	bl	403d68 <sd_bus_error_free@plt>
  409720:	mov	w0, w20
  409724:	ldp	x20, x19, [sp, #64]
  409728:	ldr	x21, [sp, #48]
  40972c:	ldp	x29, x30, [sp, #32]
  409730:	add	sp, sp, #0x50
  409734:	ret
  409738:	mov	w8, wzr
  40973c:	neg	w9, w20
  409740:	sub	w20, w8, w9, uxtb
  409744:	b	409718 <ascii_strlower_n@plt+0x5310>
  409748:	adrp	x1, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40974c:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  409750:	adrp	x4, 421000 <ascii_strlower_n@plt+0x1cbf8>
  409754:	add	x1, x1, #0x104
  409758:	add	x2, x2, #0x717
  40975c:	add	x4, x4, #0xa19
  409760:	mov	w3, #0x95e                 	// #2398
  409764:	mov	w0, wzr
  409768:	bl	403a98 <log_assert_failed_realm@plt>
  40976c:	sub	sp, sp, #0xe0
  409770:	stp	x29, x30, [sp, #160]
  409774:	add	x29, sp, #0xa0
  409778:	movi	v0.2d, #0x0
  40977c:	str	x23, [sp, #176]
  409780:	stp	x22, x21, [sp, #192]
  409784:	stp	x20, x19, [sp, #208]
  409788:	stp	xzr, xzr, [x29, #-24]
  40978c:	stur	xzr, [x29, #-8]
  409790:	str	xzr, [x29, #24]
  409794:	stp	xzr, xzr, [sp, #32]
  409798:	stp	xzr, xzr, [sp, #8]
  40979c:	stp	q0, q0, [sp, #96]
  4097a0:	stp	q0, q0, [sp, #64]
  4097a4:	str	q0, [sp, #48]
  4097a8:	strb	wzr, [sp, #24]
  4097ac:	cbz	x0, 409ea0 <ascii_strlower_n@plt+0x5a98>
  4097b0:	mov	w19, w1
  4097b4:	cmp	w1, #0x0
  4097b8:	b.le	409ec0 <ascii_strlower_n@plt+0x5ab8>
  4097bc:	mov	x20, x4
  4097c0:	mov	w22, w3
  4097c4:	mov	x21, x2
  4097c8:	mov	x23, x0
  4097cc:	cbnz	x2, 4097e8 <ascii_strlower_n@plt+0x53e0>
  4097d0:	add	x1, sp, #0x8
  4097d4:	mov	w0, w19
  4097d8:	mov	w2, wzr
  4097dc:	add	x21, sp, #0x8
  4097e0:	bl	403e08 <format_ifname_full@plt>
  4097e4:	cbz	x0, 409988 <ascii_strlower_n@plt+0x5580>
  4097e8:	adrp	x1, 420000 <ascii_strlower_n@plt+0x1bbf8>
  4097ec:	add	x1, x1, #0x194
  4097f0:	add	x0, sp, #0x28
  4097f4:	mov	w2, w19
  4097f8:	bl	403e18 <asprintf@plt>
  4097fc:	tbnz	w0, #31, 4098f0 <ascii_strlower_n@plt+0x54e8>
  409800:	ldr	x1, [sp, #40]
  409804:	adrp	x0, 420000 <ascii_strlower_n@plt+0x1bbf8>
  409808:	add	x0, x0, #0x197
  40980c:	add	x2, sp, #0x20
  409810:	bl	403e28 <sd_bus_path_encode@plt>
  409814:	tbnz	w0, #31, 409908 <ascii_strlower_n@plt+0x5500>
  409818:	ldr	x2, [sp, #32]
  40981c:	adrp	x1, 420000 <ascii_strlower_n@plt+0x1bbf8>
  409820:	adrp	x3, 424000 <ascii_strlower_n@plt+0x1fbf8>
  409824:	add	x1, x1, #0x1b6
  409828:	add	x3, x3, #0xce0
  40982c:	sub	x5, x29, #0x18
  409830:	add	x6, x29, #0x18
  409834:	add	x7, sp, #0x30
  409838:	mov	w4, #0x2                   	// #2
  40983c:	mov	x0, x23
  409840:	bl	403e38 <bus_map_all_properties@plt>
  409844:	tbnz	w0, #31, 4099d0 <ascii_strlower_n@plt+0x55c8>
  409848:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  40984c:	ldr	w0, [x8, #60]
  409850:	bl	403e48 <pager_open@plt>
  409854:	sub	w8, w22, #0x1
  409858:	cmp	w8, #0x7
  40985c:	b.hi	409a70 <ascii_strlower_n@plt+0x5668>  // b.pmore
  409860:	adrp	x9, 424000 <ascii_strlower_n@plt+0x1fbf8>
  409864:	add	x9, x9, #0x480
  409868:	adr	x10, 409878 <ascii_strlower_n@plt+0x5470>
  40986c:	ldrh	w11, [x9, x8, lsl #1]
  409870:	add	x10, x10, x11, lsl #2
  409874:	br	x10
  409878:	ldr	x22, [sp, #96]
  40987c:	bl	403b78 <colors_enabled@plt>
  409880:	adrp	x23, 41e000 <ascii_strlower_n@plt+0x19bf8>
  409884:	adrp	x8, 41f000 <ascii_strlower_n@plt+0x1abf8>
  409888:	add	x23, x23, #0x804
  40988c:	add	x8, x8, #0x508
  409890:	tst	w0, #0x1
  409894:	csel	x20, x8, x23, ne  // ne = any
  409898:	bl	403b78 <colors_enabled@plt>
  40989c:	adrp	x8, 41f000 <ascii_strlower_n@plt+0x1abf8>
  4098a0:	add	x8, x8, #0x512
  4098a4:	tst	w0, #0x1
  4098a8:	adrp	x0, 420000 <ascii_strlower_n@plt+0x1bbf8>
  4098ac:	csel	x4, x8, x23, ne  // ne = any
  4098b0:	add	x0, x0, #0x5af
  4098b4:	mov	x1, x20
  4098b8:	mov	w2, w19
  4098bc:	mov	x3, x21
  4098c0:	bl	403a58 <printf@plt>
  4098c4:	cbz	x22, 409d2c <ascii_strlower_n@plt+0x5924>
  4098c8:	ldr	x1, [x22]
  4098cc:	cbz	x1, 409d2c <ascii_strlower_n@plt+0x5924>
  4098d0:	adrp	x19, 420000 <ascii_strlower_n@plt+0x1bbf8>
  4098d4:	add	x20, x22, #0x8
  4098d8:	add	x19, x19, #0x5c1
  4098dc:	mov	x0, x19
  4098e0:	bl	403a58 <printf@plt>
  4098e4:	ldr	x1, [x20], #8
  4098e8:	cbnz	x1, 4098dc <ascii_strlower_n@plt+0x54d4>
  4098ec:	b	409d2c <ascii_strlower_n@plt+0x5924>
  4098f0:	adrp	x1, 41e000 <ascii_strlower_n@plt+0x19bf8>
  4098f4:	adrp	x3, 420000 <ascii_strlower_n@plt+0x1bbf8>
  4098f8:	add	x1, x1, #0x717
  4098fc:	add	x3, x3, #0x159
  409900:	mov	w2, #0x579                 	// #1401
  409904:	b	40991c <ascii_strlower_n@plt+0x5514>
  409908:	adrp	x1, 41e000 <ascii_strlower_n@plt+0x19bf8>
  40990c:	adrp	x3, 420000 <ascii_strlower_n@plt+0x1bbf8>
  409910:	add	x1, x1, #0x717
  409914:	add	x3, x3, #0x159
  409918:	mov	w2, #0x57d                 	// #1405
  40991c:	mov	w0, wzr
  409920:	bl	403a28 <log_oom_internal@plt>
  409924:	mov	w19, w0
  409928:	ldr	x0, [sp, #32]
  40992c:	bl	4039d8 <free@plt>
  409930:	ldr	x0, [sp, #40]
  409934:	bl	4039d8 <free@plt>
  409938:	ldr	x0, [sp, #88]
  40993c:	bl	4039d8 <free@plt>
  409940:	ldr	x0, [sp, #96]
  409944:	bl	403aa8 <strv_free@plt>
  409948:	ldr	x0, [sp, #104]
  40994c:	bl	403aa8 <strv_free@plt>
  409950:	ldr	x0, [sp, #112]
  409954:	bl	403aa8 <strv_free@plt>
  409958:	ldr	x0, [x29, #24]
  40995c:	cbz	x0, 409964 <ascii_strlower_n@plt+0x555c>
  409960:	bl	403d88 <sd_bus_message_unref@plt>
  409964:	sub	x0, x29, #0x18
  409968:	bl	403d68 <sd_bus_error_free@plt>
  40996c:	mov	w0, w19
  409970:	ldp	x20, x19, [sp, #208]
  409974:	ldp	x22, x21, [sp, #192]
  409978:	ldr	x23, [sp, #176]
  40997c:	ldp	x29, x30, [sp, #160]
  409980:	add	sp, sp, #0xe0
  409984:	ret
  409988:	bl	403e58 <__errno_location@plt>
  40998c:	ldr	w20, [x0]
  409990:	mov	w0, wzr
  409994:	bl	4039a8 <log_get_max_level_realm@plt>
  409998:	cmp	w0, #0x3
  40999c:	b.lt	409a24 <ascii_strlower_n@plt+0x561c>  // b.tstop
  4099a0:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  4099a4:	adrp	x4, 420000 <ascii_strlower_n@plt+0x1bbf8>
  4099a8:	adrp	x5, 420000 <ascii_strlower_n@plt+0x1bbf8>
  4099ac:	add	x2, x2, #0x717
  4099b0:	add	x4, x4, #0x159
  4099b4:	add	x5, x5, #0x168
  4099b8:	mov	w0, #0x3                   	// #3
  4099bc:	mov	w3, #0x573                 	// #1395
  4099c0:	mov	w1, w20
  4099c4:	mov	w6, w19
  4099c8:	bl	4039b8 <log_internal_realm@plt>
  4099cc:	b	409924 <ascii_strlower_n@plt+0x551c>
  4099d0:	mov	w23, w0
  4099d4:	mov	w0, wzr
  4099d8:	bl	4039a8 <log_get_max_level_realm@plt>
  4099dc:	cmp	w0, #0x3
  4099e0:	b.lt	409a38 <ascii_strlower_n@plt+0x5630>  // b.tstop
  4099e4:	sub	x0, x29, #0x18
  4099e8:	mov	w1, w23
  4099ec:	bl	403d78 <bus_error_message@plt>
  4099f0:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  4099f4:	adrp	x4, 420000 <ascii_strlower_n@plt+0x1bbf8>
  4099f8:	adrp	x5, 420000 <ascii_strlower_n@plt+0x1bbf8>
  4099fc:	mov	x7, x0
  409a00:	add	x2, x2, #0x717
  409a04:	add	x4, x4, #0x159
  409a08:	add	x5, x5, #0x1cf
  409a0c:	mov	w0, #0x3                   	// #3
  409a10:	mov	w3, #0x588                 	// #1416
  409a14:	mov	w1, w23
  409a18:	mov	w6, w19
  409a1c:	bl	4039b8 <log_internal_realm@plt>
  409a20:	b	409924 <ascii_strlower_n@plt+0x551c>
  409a24:	cmp	w20, #0x0
  409a28:	mov	w8, wzr
  409a2c:	cneg	w9, w20, mi  // mi = first
  409a30:	sub	w19, w8, w9, uxtb
  409a34:	b	409928 <ascii_strlower_n@plt+0x5520>
  409a38:	mov	w8, wzr
  409a3c:	neg	w9, w23
  409a40:	sub	w19, w8, w9, uxtb
  409a44:	b	409928 <ascii_strlower_n@plt+0x5520>
  409a48:	bl	403b78 <colors_enabled@plt>
  409a4c:	adrp	x22, 41e000 <ascii_strlower_n@plt+0x19bf8>
  409a50:	adrp	x8, 41f000 <ascii_strlower_n@plt+0x1abf8>
  409a54:	add	x22, x22, #0x804
  409a58:	add	x8, x8, #0x508
  409a5c:	tst	w0, #0x1
  409a60:	csel	x20, x8, x22, ne  // ne = any
  409a64:	bl	403b78 <colors_enabled@plt>
  409a68:	ldr	x9, [sp, #64]
  409a6c:	b	409c78 <ascii_strlower_n@plt+0x5870>
  409a70:	cbz	x20, 409a8c <ascii_strlower_n@plt+0x5684>
  409a74:	ldrb	w8, [x20]
  409a78:	cbz	w8, 409a8c <ascii_strlower_n@plt+0x5684>
  409a7c:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  409a80:	ldr	x1, [x8, #176]
  409a84:	mov	w0, #0xa                   	// #10
  409a88:	bl	403d38 <fputc@plt>
  409a8c:	bl	403b78 <colors_enabled@plt>
  409a90:	adrp	x23, 41e000 <ascii_strlower_n@plt+0x19bf8>
  409a94:	adrp	x8, 41f000 <ascii_strlower_n@plt+0x1abf8>
  409a98:	add	x23, x23, #0x804
  409a9c:	add	x8, x8, #0x508
  409aa0:	tst	w0, #0x1
  409aa4:	csel	x22, x8, x23, ne  // ne = any
  409aa8:	bl	403b78 <colors_enabled@plt>
  409aac:	adrp	x8, 41f000 <ascii_strlower_n@plt+0x1abf8>
  409ab0:	add	x8, x8, #0x512
  409ab4:	tst	w0, #0x1
  409ab8:	adrp	x0, 420000 <ascii_strlower_n@plt+0x1bbf8>
  409abc:	csel	x4, x8, x23, ne  // ne = any
  409ac0:	add	x0, x0, #0x208
  409ac4:	mov	x1, x22
  409ac8:	mov	w2, w19
  409acc:	mov	x3, x21
  409ad0:	bl	403a58 <printf@plt>
  409ad4:	ldr	x8, [sp, #48]
  409ad8:	cbz	x8, 409d3c <ascii_strlower_n@plt+0x5934>
  409adc:	adrp	x9, 420000 <ascii_strlower_n@plt+0x1bbf8>
  409ae0:	add	x9, x9, #0x23b
  409ae4:	tst	x8, #0x1
  409ae8:	adrp	x10, 420000 <ascii_strlower_n@plt+0x1bbf8>
  409aec:	add	x10, x10, #0x240
  409af0:	adrp	x11, 420000 <ascii_strlower_n@plt+0x1bbf8>
  409af4:	csel	x1, x23, x9, eq  // eq = none
  409af8:	tst	x8, #0x2
  409afc:	add	x11, x11, #0x24c
  409b00:	adrp	x12, 420000 <ascii_strlower_n@plt+0x1bbf8>
  409b04:	csel	x2, x23, x10, eq  // eq = none
  409b08:	tst	x8, #0x4
  409b0c:	add	x12, x12, #0x258
  409b10:	adrp	x13, 420000 <ascii_strlower_n@plt+0x1bbf8>
  409b14:	csel	x3, x23, x11, eq  // eq = none
  409b18:	tst	x8, #0x8
  409b1c:	add	x13, x13, #0x263
  409b20:	csel	x4, x23, x12, eq  // eq = none
  409b24:	tst	x8, #0x10
  409b28:	adrp	x0, 420000 <ascii_strlower_n@plt+0x1bbf8>
  409b2c:	csel	x5, x23, x13, eq  // eq = none
  409b30:	add	x0, x0, #0x21a
  409b34:	bl	403a58 <printf@plt>
  409b38:	b	409d48 <ascii_strlower_n@plt+0x5940>
  409b3c:	ldr	x22, [sp, #104]
  409b40:	bl	403b78 <colors_enabled@plt>
  409b44:	adrp	x23, 41e000 <ascii_strlower_n@plt+0x19bf8>
  409b48:	adrp	x8, 41f000 <ascii_strlower_n@plt+0x1abf8>
  409b4c:	add	x23, x23, #0x804
  409b50:	add	x8, x8, #0x508
  409b54:	tst	w0, #0x1
  409b58:	csel	x20, x8, x23, ne  // ne = any
  409b5c:	bl	403b78 <colors_enabled@plt>
  409b60:	adrp	x8, 41f000 <ascii_strlower_n@plt+0x1abf8>
  409b64:	add	x8, x8, #0x512
  409b68:	tst	w0, #0x1
  409b6c:	adrp	x0, 420000 <ascii_strlower_n@plt+0x1bbf8>
  409b70:	csel	x4, x8, x23, ne  // ne = any
  409b74:	add	x0, x0, #0x5af
  409b78:	mov	x1, x20
  409b7c:	mov	w2, w19
  409b80:	mov	x3, x21
  409b84:	bl	403a58 <printf@plt>
  409b88:	cbz	x22, 409d2c <ascii_strlower_n@plt+0x5924>
  409b8c:	ldr	x1, [x22]
  409b90:	cbz	x1, 409d2c <ascii_strlower_n@plt+0x5924>
  409b94:	adrp	x19, 420000 <ascii_strlower_n@plt+0x1bbf8>
  409b98:	add	x20, x22, #0x8
  409b9c:	add	x19, x19, #0x5c1
  409ba0:	mov	x0, x19
  409ba4:	bl	403a58 <printf@plt>
  409ba8:	ldr	x1, [x20], #8
  409bac:	cbnz	x1, 409ba0 <ascii_strlower_n@plt+0x5798>
  409bb0:	b	409d2c <ascii_strlower_n@plt+0x5924>
  409bb4:	bl	403b78 <colors_enabled@plt>
  409bb8:	adrp	x22, 41e000 <ascii_strlower_n@plt+0x19bf8>
  409bbc:	adrp	x8, 41f000 <ascii_strlower_n@plt+0x1abf8>
  409bc0:	add	x22, x22, #0x804
  409bc4:	add	x8, x8, #0x508
  409bc8:	tst	w0, #0x1
  409bcc:	csel	x20, x8, x22, ne  // ne = any
  409bd0:	bl	403b78 <colors_enabled@plt>
  409bd4:	ldrb	w9, [sp, #121]
  409bd8:	adrp	x8, 41f000 <ascii_strlower_n@plt+0x1abf8>
  409bdc:	add	x8, x8, #0x512
  409be0:	tst	w0, #0x1
  409be4:	csel	x4, x8, x22, ne  // ne = any
  409be8:	adrp	x8, 420000 <ascii_strlower_n@plt+0x1bbf8>
  409bec:	adrp	x10, 420000 <ascii_strlower_n@plt+0x1bbf8>
  409bf0:	add	x8, x8, #0x5c5
  409bf4:	add	x10, x10, #0x5c9
  409bf8:	cmp	w9, #0x0
  409bfc:	csel	x5, x10, x8, eq  // eq = none
  409c00:	b	409c98 <ascii_strlower_n@plt+0x5890>
  409c04:	bl	403b78 <colors_enabled@plt>
  409c08:	adrp	x22, 41e000 <ascii_strlower_n@plt+0x19bf8>
  409c0c:	adrp	x8, 41f000 <ascii_strlower_n@plt+0x1abf8>
  409c10:	add	x22, x22, #0x804
  409c14:	add	x8, x8, #0x508
  409c18:	tst	w0, #0x1
  409c1c:	csel	x20, x8, x22, ne  // ne = any
  409c20:	bl	403b78 <colors_enabled@plt>
  409c24:	ldr	x9, [sp, #56]
  409c28:	b	409c78 <ascii_strlower_n@plt+0x5870>
  409c2c:	bl	403b78 <colors_enabled@plt>
  409c30:	adrp	x22, 41e000 <ascii_strlower_n@plt+0x19bf8>
  409c34:	adrp	x8, 41f000 <ascii_strlower_n@plt+0x1abf8>
  409c38:	add	x22, x22, #0x804
  409c3c:	add	x8, x8, #0x508
  409c40:	tst	w0, #0x1
  409c44:	csel	x20, x8, x22, ne  // ne = any
  409c48:	bl	403b78 <colors_enabled@plt>
  409c4c:	ldr	x9, [sp, #72]
  409c50:	b	409c78 <ascii_strlower_n@plt+0x5870>
  409c54:	bl	403b78 <colors_enabled@plt>
  409c58:	adrp	x22, 41e000 <ascii_strlower_n@plt+0x19bf8>
  409c5c:	adrp	x8, 41f000 <ascii_strlower_n@plt+0x1abf8>
  409c60:	add	x22, x22, #0x804
  409c64:	add	x8, x8, #0x508
  409c68:	tst	w0, #0x1
  409c6c:	csel	x20, x8, x22, ne  // ne = any
  409c70:	bl	403b78 <colors_enabled@plt>
  409c74:	ldr	x9, [sp, #80]
  409c78:	adrp	x8, 41f000 <ascii_strlower_n@plt+0x1abf8>
  409c7c:	add	x8, x8, #0x512
  409c80:	tst	w0, #0x1
  409c84:	csel	x4, x8, x22, ne  // ne = any
  409c88:	adrp	x8, 420000 <ascii_strlower_n@plt+0x1bbf8>
  409c8c:	add	x8, x8, #0x5cc
  409c90:	cmp	x9, #0x0
  409c94:	csel	x5, x8, x9, eq  // eq = none
  409c98:	adrp	x0, 420000 <ascii_strlower_n@plt+0x1bbf8>
  409c9c:	add	x0, x0, #0x1f2
  409ca0:	mov	x1, x20
  409ca4:	mov	w2, w19
  409ca8:	mov	x3, x21
  409cac:	bl	403a58 <printf@plt>
  409cb0:	mov	w19, wzr
  409cb4:	b	409928 <ascii_strlower_n@plt+0x5520>
  409cb8:	ldr	x22, [sp, #112]
  409cbc:	bl	403b78 <colors_enabled@plt>
  409cc0:	adrp	x23, 41e000 <ascii_strlower_n@plt+0x19bf8>
  409cc4:	adrp	x8, 41f000 <ascii_strlower_n@plt+0x1abf8>
  409cc8:	add	x23, x23, #0x804
  409ccc:	add	x8, x8, #0x508
  409cd0:	tst	w0, #0x1
  409cd4:	csel	x20, x8, x23, ne  // ne = any
  409cd8:	bl	403b78 <colors_enabled@plt>
  409cdc:	adrp	x8, 41f000 <ascii_strlower_n@plt+0x1abf8>
  409ce0:	add	x8, x8, #0x512
  409ce4:	tst	w0, #0x1
  409ce8:	adrp	x0, 420000 <ascii_strlower_n@plt+0x1bbf8>
  409cec:	csel	x4, x8, x23, ne  // ne = any
  409cf0:	add	x0, x0, #0x5af
  409cf4:	mov	x1, x20
  409cf8:	mov	w2, w19
  409cfc:	mov	x3, x21
  409d00:	bl	403a58 <printf@plt>
  409d04:	cbz	x22, 409d2c <ascii_strlower_n@plt+0x5924>
  409d08:	ldr	x1, [x22]
  409d0c:	cbz	x1, 409d2c <ascii_strlower_n@plt+0x5924>
  409d10:	adrp	x19, 420000 <ascii_strlower_n@plt+0x1bbf8>
  409d14:	add	x20, x22, #0x8
  409d18:	add	x19, x19, #0x5c1
  409d1c:	mov	x0, x19
  409d20:	bl	403a58 <printf@plt>
  409d24:	ldr	x1, [x20], #8
  409d28:	cbnz	x1, 409d1c <ascii_strlower_n@plt+0x5914>
  409d2c:	mov	w0, #0xa                   	// #10
  409d30:	bl	403e68 <putchar@plt>
  409d34:	mov	w19, wzr
  409d38:	b	409928 <ascii_strlower_n@plt+0x5520>
  409d3c:	adrp	x0, 421000 <ascii_strlower_n@plt+0x1cbf8>
  409d40:	add	x0, x0, #0xab8
  409d44:	bl	403bf8 <puts@plt>
  409d48:	ldrb	w8, [sp, #121]
  409d4c:	ldp	x12, x13, [sp, #56]
  409d50:	adrp	x9, 420000 <ascii_strlower_n@plt+0x1bbf8>
  409d54:	adrp	x10, 420000 <ascii_strlower_n@plt+0x1bbf8>
  409d58:	ldp	x14, x15, [sp, #72]
  409d5c:	add	x9, x9, #0x5c5
  409d60:	add	x10, x10, #0x5c9
  409d64:	adrp	x11, 420000 <ascii_strlower_n@plt+0x1bbf8>
  409d68:	cmp	w8, #0x0
  409d6c:	add	x11, x11, #0x5cc
  409d70:	ldrb	w16, [sp, #120]
  409d74:	csel	x1, x10, x9, eq  // eq = none
  409d78:	cmp	x12, #0x0
  409d7c:	csel	x2, x11, x12, eq  // eq = none
  409d80:	cmp	x13, #0x0
  409d84:	csel	x3, x11, x13, eq  // eq = none
  409d88:	cmp	x14, #0x0
  409d8c:	csel	x4, x11, x14, eq  // eq = none
  409d90:	cmp	x15, #0x0
  409d94:	csel	x5, x11, x15, eq  // eq = none
  409d98:	cmp	w16, #0x0
  409d9c:	adrp	x0, 420000 <ascii_strlower_n@plt+0x1bbf8>
  409da0:	csel	x6, x10, x9, eq  // eq = none
  409da4:	add	x0, x0, #0x26e
  409da8:	bl	403a58 <printf@plt>
  409dac:	ldr	x1, [sp, #88]
  409db0:	cbz	x1, 409dc0 <ascii_strlower_n@plt+0x59b8>
  409db4:	adrp	x0, 420000 <ascii_strlower_n@plt+0x1bbf8>
  409db8:	add	x0, x0, #0x305
  409dbc:	bl	403a58 <printf@plt>
  409dc0:	ldr	x21, [sp, #96]
  409dc4:	cbz	x21, 409e04 <ascii_strlower_n@plt+0x59fc>
  409dc8:	ldr	x2, [x21]
  409dcc:	cbz	x2, 409e04 <ascii_strlower_n@plt+0x59fc>
  409dd0:	adrp	x22, 420000 <ascii_strlower_n@plt+0x1bbf8>
  409dd4:	adrp	x23, 420000 <ascii_strlower_n@plt+0x1bbf8>
  409dd8:	adrp	x19, 420000 <ascii_strlower_n@plt+0x1bbf8>
  409ddc:	add	x22, x22, #0x33c
  409de0:	add	x23, x23, #0x32f
  409de4:	add	x19, x19, #0x31f
  409de8:	ldr	x8, [sp, #96]
  409dec:	mov	x0, x19
  409df0:	cmp	x21, x8
  409df4:	csel	x1, x23, x22, eq  // eq = none
  409df8:	bl	403a58 <printf@plt>
  409dfc:	ldr	x2, [x21, #8]!
  409e00:	cbnz	x2, 409de8 <ascii_strlower_n@plt+0x59e0>
  409e04:	ldr	x21, [sp, #104]
  409e08:	cbz	x21, 409e48 <ascii_strlower_n@plt+0x5a40>
  409e0c:	ldr	x2, [x21]
  409e10:	cbz	x2, 409e48 <ascii_strlower_n@plt+0x5a40>
  409e14:	adrp	x22, 420000 <ascii_strlower_n@plt+0x1bbf8>
  409e18:	adrp	x23, 420000 <ascii_strlower_n@plt+0x1bbf8>
  409e1c:	adrp	x19, 420000 <ascii_strlower_n@plt+0x1bbf8>
  409e20:	add	x22, x22, #0x366
  409e24:	add	x23, x23, #0x35a
  409e28:	add	x19, x19, #0x349
  409e2c:	ldr	x8, [sp, #104]
  409e30:	mov	x0, x19
  409e34:	cmp	x21, x8
  409e38:	csel	x1, x23, x22, eq  // eq = none
  409e3c:	bl	403a58 <printf@plt>
  409e40:	ldr	x2, [x21, #8]!
  409e44:	cbnz	x2, 409e2c <ascii_strlower_n@plt+0x5a24>
  409e48:	ldr	x21, [sp, #112]
  409e4c:	cbz	x21, 409e8c <ascii_strlower_n@plt+0x5a84>
  409e50:	ldr	x2, [x21]
  409e54:	cbz	x2, 409e8c <ascii_strlower_n@plt+0x5a84>
  409e58:	adrp	x22, 420000 <ascii_strlower_n@plt+0x1bbf8>
  409e5c:	adrp	x23, 420000 <ascii_strlower_n@plt+0x1bbf8>
  409e60:	adrp	x19, 420000 <ascii_strlower_n@plt+0x1bbf8>
  409e64:	add	x22, x22, #0x366
  409e68:	add	x23, x23, #0x372
  409e6c:	add	x19, x19, #0x349
  409e70:	ldr	x8, [sp, #112]
  409e74:	mov	x0, x19
  409e78:	cmp	x21, x8
  409e7c:	csel	x1, x23, x22, eq  // eq = none
  409e80:	bl	403a58 <printf@plt>
  409e84:	ldr	x2, [x21, #8]!
  409e88:	cbnz	x2, 409e70 <ascii_strlower_n@plt+0x5a68>
  409e8c:	mov	w19, wzr
  409e90:	cbz	x20, 409928 <ascii_strlower_n@plt+0x5520>
  409e94:	mov	w8, #0x1                   	// #1
  409e98:	strb	w8, [x20]
  409e9c:	b	409928 <ascii_strlower_n@plt+0x5520>
  409ea0:	adrp	x1, 420000 <ascii_strlower_n@plt+0x1bbf8>
  409ea4:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  409ea8:	adrp	x4, 420000 <ascii_strlower_n@plt+0x1bbf8>
  409eac:	add	x1, x1, #0x104
  409eb0:	add	x2, x2, #0x717
  409eb4:	add	x4, x4, #0x108
  409eb8:	mov	w3, #0x56e                 	// #1390
  409ebc:	bl	403a98 <log_assert_failed_realm@plt>
  409ec0:	adrp	x1, 420000 <ascii_strlower_n@plt+0x1bbf8>
  409ec4:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  409ec8:	adrp	x4, 420000 <ascii_strlower_n@plt+0x1bbf8>
  409ecc:	add	x1, x1, #0x14d
  409ed0:	add	x2, x2, #0x717
  409ed4:	add	x4, x4, #0x108
  409ed8:	mov	w3, #0x56f                 	// #1391
  409edc:	mov	w0, wzr
  409ee0:	bl	403a98 <log_assert_failed_realm@plt>
  409ee4:	sub	sp, sp, #0xd0
  409ee8:	stp	x29, x30, [sp, #144]
  409eec:	stp	x24, x23, [sp, #160]
  409ef0:	stp	x22, x21, [sp, #176]
  409ef4:	stp	x20, x19, [sp, #192]
  409ef8:	add	x29, sp, #0x90
  409efc:	stp	xzr, xzr, [sp, #16]
  409f00:	str	xzr, [sp, #8]
  409f04:	strb	wzr, [sp, #4]
  409f08:	cbz	x0, 40a654 <ascii_strlower_n@plt+0x624c>
  409f0c:	mov	w19, w1
  409f10:	adrp	x1, 420000 <ascii_strlower_n@plt+0x1bbf8>
  409f14:	adrp	x2, 420000 <ascii_strlower_n@plt+0x1bbf8>
  409f18:	adrp	x3, 424000 <ascii_strlower_n@plt+0x1fbf8>
  409f1c:	movi	v0.2d, #0x0
  409f20:	add	x1, x1, #0x1b6
  409f24:	add	x2, x2, #0x661
  409f28:	add	x3, x3, #0xe60
  409f2c:	sub	x5, x29, #0x18
  409f30:	sub	x6, x29, #0x20
  409f34:	add	x7, sp, #0x20
  409f38:	mov	w4, #0x2                   	// #2
  409f3c:	mov	x20, x0
  409f40:	stp	xzr, xzr, [x29, #-24]
  409f44:	stur	xzr, [x29, #-8]
  409f48:	stur	xzr, [x29, #-32]
  409f4c:	stp	q0, q0, [sp, #80]
  409f50:	stp	q0, q0, [sp, #48]
  409f54:	str	q0, [sp, #32]
  409f58:	bl	403e38 <bus_map_all_properties@plt>
  409f5c:	tbnz	w0, #31, 40a000 <ascii_strlower_n@plt+0x5bf8>
  409f60:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  409f64:	ldr	w0, [x8, #60]
  409f68:	bl	403e48 <pager_open@plt>
  409f6c:	sub	w8, w19, #0x1
  409f70:	cmp	w8, #0x7
  409f74:	b.hi	40a174 <ascii_strlower_n@plt+0x5d6c>  // b.pmore
  409f78:	adrp	x9, 424000 <ascii_strlower_n@plt+0x1fbf8>
  409f7c:	add	x9, x9, #0x490
  409f80:	adr	x10, 409f90 <ascii_strlower_n@plt+0x5b88>
  409f84:	ldrb	w11, [x9, x8]
  409f88:	add	x10, x10, x11, lsl #2
  409f8c:	br	x10
  409f90:	ldr	x22, [sp, #40]
  409f94:	bl	403b78 <colors_enabled@plt>
  409f98:	adrp	x23, 41e000 <ascii_strlower_n@plt+0x19bf8>
  409f9c:	adrp	x8, 41f000 <ascii_strlower_n@plt+0x1abf8>
  409fa0:	add	x23, x23, #0x804
  409fa4:	add	x8, x8, #0x508
  409fa8:	tst	w0, #0x1
  409fac:	csel	x21, x8, x23, ne  // ne = any
  409fb0:	bl	403b78 <colors_enabled@plt>
  409fb4:	adrp	x8, 41f000 <ascii_strlower_n@plt+0x1abf8>
  409fb8:	add	x8, x8, #0x512
  409fbc:	tst	w0, #0x1
  409fc0:	adrp	x0, 420000 <ascii_strlower_n@plt+0x1bbf8>
  409fc4:	csel	x2, x8, x23, ne  // ne = any
  409fc8:	add	x0, x0, #0x88e
  409fcc:	mov	x1, x21
  409fd0:	bl	403a58 <printf@plt>
  409fd4:	cbz	x22, 40a168 <ascii_strlower_n@plt+0x5d60>
  409fd8:	ldr	x1, [x22]
  409fdc:	cbz	x1, 40a168 <ascii_strlower_n@plt+0x5d60>
  409fe0:	adrp	x21, 420000 <ascii_strlower_n@plt+0x1bbf8>
  409fe4:	add	x22, x22, #0x8
  409fe8:	add	x21, x21, #0x5c1
  409fec:	mov	x0, x21
  409ff0:	bl	403a58 <printf@plt>
  409ff4:	ldr	x1, [x22], #8
  409ff8:	cbnz	x1, 409fec <ascii_strlower_n@plt+0x5be4>
  409ffc:	b	40a168 <ascii_strlower_n@plt+0x5d60>
  40a000:	mov	w21, w0
  40a004:	mov	w0, wzr
  40a008:	bl	4039a8 <log_get_max_level_realm@plt>
  40a00c:	cmp	w0, #0x3
  40a010:	b.lt	40a054 <ascii_strlower_n@plt+0x5c4c>  // b.tstop
  40a014:	sub	x0, x29, #0x18
  40a018:	mov	w1, w21
  40a01c:	bl	403d78 <bus_error_message@plt>
  40a020:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  40a024:	adrp	x4, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40a028:	adrp	x5, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40a02c:	mov	x6, x0
  40a030:	add	x2, x2, #0x717
  40a034:	add	x4, x4, #0x67b
  40a038:	add	x5, x5, #0x689
  40a03c:	mov	w0, #0x3                   	// #3
  40a040:	mov	w3, #0x688                 	// #1672
  40a044:	mov	w1, w21
  40a048:	bl	4039b8 <log_internal_realm@plt>
  40a04c:	mov	w21, w0
  40a050:	b	40a244 <ascii_strlower_n@plt+0x5e3c>
  40a054:	mov	w8, wzr
  40a058:	neg	w9, w21
  40a05c:	sub	w21, w8, w9, uxtb
  40a060:	b	40a244 <ascii_strlower_n@plt+0x5e3c>
  40a064:	bl	403b78 <colors_enabled@plt>
  40a068:	adrp	x22, 41e000 <ascii_strlower_n@plt+0x19bf8>
  40a06c:	adrp	x8, 41f000 <ascii_strlower_n@plt+0x1abf8>
  40a070:	add	x22, x22, #0x804
  40a074:	add	x8, x8, #0x508
  40a078:	tst	w0, #0x1
  40a07c:	csel	x21, x8, x22, ne  // ne = any
  40a080:	bl	403b78 <colors_enabled@plt>
  40a084:	ldr	x9, [sp, #72]
  40a088:	b	40a210 <ascii_strlower_n@plt+0x5e08>
  40a08c:	ldr	x22, [sp, #64]
  40a090:	bl	403b78 <colors_enabled@plt>
  40a094:	adrp	x23, 41e000 <ascii_strlower_n@plt+0x19bf8>
  40a098:	adrp	x8, 41f000 <ascii_strlower_n@plt+0x1abf8>
  40a09c:	add	x23, x23, #0x804
  40a0a0:	add	x8, x8, #0x508
  40a0a4:	tst	w0, #0x1
  40a0a8:	csel	x21, x8, x23, ne  // ne = any
  40a0ac:	bl	403b78 <colors_enabled@plt>
  40a0b0:	adrp	x8, 41f000 <ascii_strlower_n@plt+0x1abf8>
  40a0b4:	add	x8, x8, #0x512
  40a0b8:	tst	w0, #0x1
  40a0bc:	adrp	x0, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40a0c0:	csel	x2, x8, x23, ne  // ne = any
  40a0c4:	add	x0, x0, #0x88e
  40a0c8:	mov	x1, x21
  40a0cc:	bl	403a58 <printf@plt>
  40a0d0:	cbz	x22, 40a168 <ascii_strlower_n@plt+0x5d60>
  40a0d4:	ldr	x1, [x22]
  40a0d8:	cbz	x1, 40a168 <ascii_strlower_n@plt+0x5d60>
  40a0dc:	adrp	x21, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40a0e0:	add	x22, x22, #0x8
  40a0e4:	add	x21, x21, #0x5c1
  40a0e8:	mov	x0, x21
  40a0ec:	bl	403a58 <printf@plt>
  40a0f0:	ldr	x1, [x22], #8
  40a0f4:	cbnz	x1, 40a0e8 <ascii_strlower_n@plt+0x5ce0>
  40a0f8:	b	40a168 <ascii_strlower_n@plt+0x5d60>
  40a0fc:	ldr	x22, [sp, #56]
  40a100:	bl	403b78 <colors_enabled@plt>
  40a104:	adrp	x23, 41e000 <ascii_strlower_n@plt+0x19bf8>
  40a108:	adrp	x8, 41f000 <ascii_strlower_n@plt+0x1abf8>
  40a10c:	add	x23, x23, #0x804
  40a110:	add	x8, x8, #0x508
  40a114:	tst	w0, #0x1
  40a118:	csel	x21, x8, x23, ne  // ne = any
  40a11c:	bl	403b78 <colors_enabled@plt>
  40a120:	adrp	x8, 41f000 <ascii_strlower_n@plt+0x1abf8>
  40a124:	add	x8, x8, #0x512
  40a128:	tst	w0, #0x1
  40a12c:	adrp	x0, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40a130:	csel	x2, x8, x23, ne  // ne = any
  40a134:	add	x0, x0, #0x88e
  40a138:	mov	x1, x21
  40a13c:	bl	403a58 <printf@plt>
  40a140:	cbz	x22, 40a168 <ascii_strlower_n@plt+0x5d60>
  40a144:	ldr	x1, [x22]
  40a148:	cbz	x1, 40a168 <ascii_strlower_n@plt+0x5d60>
  40a14c:	adrp	x21, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40a150:	add	x22, x22, #0x8
  40a154:	add	x21, x21, #0x5c1
  40a158:	mov	x0, x21
  40a15c:	bl	403a58 <printf@plt>
  40a160:	ldr	x1, [x22], #8
  40a164:	cbnz	x1, 40a158 <ascii_strlower_n@plt+0x5d50>
  40a168:	mov	w0, #0xa                   	// #10
  40a16c:	bl	403e68 <putchar@plt>
  40a170:	b	40a240 <ascii_strlower_n@plt+0x5e38>
  40a174:	bl	403b78 <colors_enabled@plt>
  40a178:	adrp	x22, 41e000 <ascii_strlower_n@plt+0x19bf8>
  40a17c:	adrp	x8, 41f000 <ascii_strlower_n@plt+0x1abf8>
  40a180:	add	x22, x22, #0x804
  40a184:	add	x8, x8, #0x508
  40a188:	tst	w0, #0x1
  40a18c:	csel	x21, x8, x22, ne  // ne = any
  40a190:	bl	403b78 <colors_enabled@plt>
  40a194:	adrp	x8, 41f000 <ascii_strlower_n@plt+0x1abf8>
  40a198:	add	x8, x8, #0x512
  40a19c:	tst	w0, #0x1
  40a1a0:	csel	x2, x8, x22, ne  // ne = any
  40a1a4:	cmp	w19, #0x7
  40a1a8:	b.ne	40a400 <ascii_strlower_n@plt+0x5ff8>  // b.any
  40a1ac:	ldr	x8, [sp, #96]
  40a1b0:	adrp	x9, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40a1b4:	add	x9, x9, #0x5cc
  40a1b8:	cmp	x8, #0x0
  40a1bc:	csel	x3, x9, x8, eq  // eq = none
  40a1c0:	b	40a230 <ascii_strlower_n@plt+0x5e28>
  40a1c4:	bl	403b78 <colors_enabled@plt>
  40a1c8:	adrp	x22, 41e000 <ascii_strlower_n@plt+0x19bf8>
  40a1cc:	adrp	x8, 41f000 <ascii_strlower_n@plt+0x1abf8>
  40a1d0:	add	x22, x22, #0x804
  40a1d4:	add	x8, x8, #0x508
  40a1d8:	tst	w0, #0x1
  40a1dc:	csel	x21, x8, x22, ne  // ne = any
  40a1e0:	bl	403b78 <colors_enabled@plt>
  40a1e4:	ldr	x9, [sp, #80]
  40a1e8:	b	40a210 <ascii_strlower_n@plt+0x5e08>
  40a1ec:	bl	403b78 <colors_enabled@plt>
  40a1f0:	adrp	x22, 41e000 <ascii_strlower_n@plt+0x19bf8>
  40a1f4:	adrp	x8, 41f000 <ascii_strlower_n@plt+0x1abf8>
  40a1f8:	add	x22, x22, #0x804
  40a1fc:	add	x8, x8, #0x508
  40a200:	tst	w0, #0x1
  40a204:	csel	x21, x8, x22, ne  // ne = any
  40a208:	bl	403b78 <colors_enabled@plt>
  40a20c:	ldr	x9, [sp, #88]
  40a210:	adrp	x8, 41f000 <ascii_strlower_n@plt+0x1abf8>
  40a214:	add	x8, x8, #0x512
  40a218:	tst	w0, #0x1
  40a21c:	csel	x2, x8, x22, ne  // ne = any
  40a220:	adrp	x8, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40a224:	add	x8, x8, #0x5cc
  40a228:	cmp	x9, #0x0
  40a22c:	csel	x3, x8, x9, eq  // eq = none
  40a230:	adrp	x0, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40a234:	add	x0, x0, #0x6a7
  40a238:	mov	x1, x21
  40a23c:	bl	403a58 <printf@plt>
  40a240:	mov	w21, wzr
  40a244:	ldr	x0, [sp, #32]
  40a248:	bl	4039d8 <free@plt>
  40a24c:	ldr	x0, [sp, #40]
  40a250:	bl	403aa8 <strv_free@plt>
  40a254:	ldr	x0, [sp, #48]
  40a258:	bl	403aa8 <strv_free@plt>
  40a25c:	ldr	x0, [sp, #56]
  40a260:	bl	403aa8 <strv_free@plt>
  40a264:	ldr	x0, [sp, #64]
  40a268:	bl	403aa8 <strv_free@plt>
  40a26c:	ldur	x0, [x29, #-32]
  40a270:	cbz	x0, 40a278 <ascii_strlower_n@plt+0x5e70>
  40a274:	bl	403d88 <sd_bus_message_unref@plt>
  40a278:	sub	x0, x29, #0x18
  40a27c:	bl	403d68 <sd_bus_error_free@plt>
  40a280:	tbnz	w21, #31, 40a614 <ascii_strlower_n@plt+0x620c>
  40a284:	add	x0, sp, #0x8
  40a288:	bl	403e78 <sd_netlink_open@plt>
  40a28c:	tbnz	w0, #31, 40a374 <ascii_strlower_n@plt+0x5f6c>
  40a290:	ldr	x0, [sp, #8]
  40a294:	add	x1, sp, #0x18
  40a298:	mov	w2, #0x12                  	// #18
  40a29c:	mov	w3, wzr
  40a2a0:	bl	403e88 <sd_rtnl_message_new_link@plt>
  40a2a4:	tbnz	w0, #31, 40a368 <ascii_strlower_n@plt+0x5f60>
  40a2a8:	ldr	x0, [sp, #24]
  40a2ac:	mov	w1, #0x1                   	// #1
  40a2b0:	bl	403e98 <sd_netlink_message_request_dump@plt>
  40a2b4:	tbnz	w0, #31, 40a368 <ascii_strlower_n@plt+0x5f60>
  40a2b8:	ldr	x0, [sp, #8]
  40a2bc:	ldr	x1, [sp, #24]
  40a2c0:	add	x3, sp, #0x10
  40a2c4:	mov	x2, xzr
  40a2c8:	bl	403ea8 <sd_netlink_call@plt>
  40a2cc:	tbnz	w0, #31, 40a3b8 <ascii_strlower_n@plt+0x5fb0>
  40a2d0:	ldr	x22, [sp, #16]
  40a2d4:	cbz	x22, 40a610 <ascii_strlower_n@plt+0x6208>
  40a2d8:	mov	w21, wzr
  40a2dc:	mov	w23, #0xffffffff            	// #-1
  40a2e0:	b	40a2f4 <ascii_strlower_n@plt+0x5eec>
  40a2e4:	mov	x0, x22
  40a2e8:	bl	403eb8 <sd_netlink_message_next@plt>
  40a2ec:	mov	x22, x0
  40a2f0:	cbz	x0, 40a614 <ascii_strlower_n@plt+0x620c>
  40a2f4:	sub	x1, x29, #0x20
  40a2f8:	mov	x0, x22
  40a2fc:	bl	403ec8 <sd_netlink_message_get_type@plt>
  40a300:	tbnz	w0, #31, 40a604 <ascii_strlower_n@plt+0x61fc>
  40a304:	ldurh	w8, [x29, #-32]
  40a308:	cmp	w8, #0x10
  40a30c:	b.ne	40a2e4 <ascii_strlower_n@plt+0x5edc>  // b.any
  40a310:	sub	x1, x29, #0x18
  40a314:	mov	x0, x22
  40a318:	bl	403ed8 <sd_rtnl_message_link_get_ifindex@plt>
  40a31c:	tbnz	w0, #31, 40a604 <ascii_strlower_n@plt+0x61fc>
  40a320:	ldur	w8, [x29, #-24]
  40a324:	cmp	w8, #0x1
  40a328:	b.eq	40a2e4 <ascii_strlower_n@plt+0x5edc>  // b.none
  40a32c:	add	x2, sp, #0x20
  40a330:	mov	w1, #0x3                   	// #3
  40a334:	mov	x0, x22
  40a338:	bl	403ee8 <sd_netlink_message_read_string@plt>
  40a33c:	tbnz	w0, #31, 40a604 <ascii_strlower_n@plt+0x61fc>
  40a340:	ldur	w1, [x29, #-24]
  40a344:	ldr	x2, [sp, #32]
  40a348:	add	x4, sp, #0x4
  40a34c:	mov	x0, x20
  40a350:	mov	w3, w19
  40a354:	bl	40976c <ascii_strlower_n@plt+0x5364>
  40a358:	cmp	w0, #0x0
  40a35c:	ccmp	w21, w23, #0x4, lt  // lt = tstop
  40a360:	csel	w21, w0, w21, gt
  40a364:	b	40a2e4 <ascii_strlower_n@plt+0x5edc>
  40a368:	bl	403ef8 <rtnl_log_create_error@plt>
  40a36c:	mov	w21, w0
  40a370:	b	40a614 <ascii_strlower_n@plt+0x620c>
  40a374:	mov	w21, w0
  40a378:	mov	w0, wzr
  40a37c:	bl	4039a8 <log_get_max_level_realm@plt>
  40a380:	cmp	w0, #0x3
  40a384:	b.lt	40a3f0 <ascii_strlower_n@plt+0x5fe8>  // b.tstop
  40a388:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  40a38c:	adrp	x4, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40a390:	adrp	x5, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40a394:	add	x2, x2, #0x717
  40a398:	add	x4, x4, #0x5f5
  40a39c:	add	x5, x5, #0x600
  40a3a0:	mov	w0, #0x3                   	// #3
  40a3a4:	mov	w3, #0x6ee                 	// #1774
  40a3a8:	mov	w1, w21
  40a3ac:	bl	4039b8 <log_internal_realm@plt>
  40a3b0:	mov	w21, w0
  40a3b4:	b	40a614 <ascii_strlower_n@plt+0x620c>
  40a3b8:	mov	w21, w0
  40a3bc:	mov	w0, wzr
  40a3c0:	bl	4039a8 <log_get_max_level_realm@plt>
  40a3c4:	cmp	w0, #0x3
  40a3c8:	b.lt	40a3f0 <ascii_strlower_n@plt+0x5fe8>  // b.tstop
  40a3cc:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  40a3d0:	adrp	x4, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40a3d4:	adrp	x5, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40a3d8:	add	x2, x2, #0x717
  40a3dc:	add	x4, x4, #0x5f5
  40a3e0:	add	x5, x5, #0x621
  40a3e4:	mov	w0, #0x3                   	// #3
  40a3e8:	mov	w3, #0x6fa                 	// #1786
  40a3ec:	b	40a3a8 <ascii_strlower_n@plt+0x5fa0>
  40a3f0:	mov	w8, wzr
  40a3f4:	neg	w9, w21
  40a3f8:	sub	w21, w8, w9, uxtb
  40a3fc:	b	40a614 <ascii_strlower_n@plt+0x620c>
  40a400:	adrp	x0, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40a404:	add	x0, x0, #0x6b7
  40a408:	mov	x1, x21
  40a40c:	bl	403a58 <printf@plt>
  40a410:	ldp	x9, x10, [sp, #72]
  40a414:	ldp	x11, x12, [sp, #88]
  40a418:	adrp	x8, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40a41c:	add	x8, x8, #0x5cc
  40a420:	cmp	x9, #0x0
  40a424:	ldrb	w13, [sp, #104]
  40a428:	csel	x1, x8, x9, eq  // eq = none
  40a42c:	cmp	x10, #0x0
  40a430:	csel	x2, x8, x10, eq  // eq = none
  40a434:	cmp	x11, #0x0
  40a438:	csel	x3, x8, x11, eq  // eq = none
  40a43c:	cmp	x12, #0x0
  40a440:	adrp	x14, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40a444:	csel	x4, x8, x12, eq  // eq = none
  40a448:	adrp	x8, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40a44c:	add	x14, x14, #0x5c5
  40a450:	add	x8, x8, #0x5c9
  40a454:	cmp	w13, #0x0
  40a458:	adrp	x0, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40a45c:	csel	x5, x8, x14, eq  // eq = none
  40a460:	add	x0, x0, #0x6c3
  40a464:	bl	403a58 <printf@plt>
  40a468:	ldr	x1, [sp, #32]
  40a46c:	cbz	x1, 40a47c <ascii_strlower_n@plt+0x6074>
  40a470:	adrp	x0, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40a474:	add	x0, x0, #0x305
  40a478:	bl	403a58 <printf@plt>
  40a47c:	ldr	x23, [sp, #40]
  40a480:	cbz	x23, 40a4d8 <ascii_strlower_n@plt+0x60d0>
  40a484:	ldr	x2, [x23]
  40a488:	cbz	x2, 40a4d8 <ascii_strlower_n@plt+0x60d0>
  40a48c:	adrp	x21, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40a490:	adrp	x0, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40a494:	add	x21, x21, #0x32f
  40a498:	add	x0, x0, #0x31f
  40a49c:	mov	x1, x21
  40a4a0:	bl	403a58 <printf@plt>
  40a4a4:	ldr	x2, [x23, #8]!
  40a4a8:	cbz	x2, 40a4d8 <ascii_strlower_n@plt+0x60d0>
  40a4ac:	adrp	x24, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40a4b0:	adrp	x22, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40a4b4:	add	x24, x24, #0x33c
  40a4b8:	add	x22, x22, #0x31f
  40a4bc:	ldr	x8, [sp, #40]
  40a4c0:	mov	x0, x22
  40a4c4:	cmp	x23, x8
  40a4c8:	csel	x1, x21, x24, eq  // eq = none
  40a4cc:	bl	403a58 <printf@plt>
  40a4d0:	ldr	x2, [x23, #8]!
  40a4d4:	cbnz	x2, 40a4bc <ascii_strlower_n@plt+0x60b4>
  40a4d8:	ldr	x23, [sp, #48]
  40a4dc:	cbz	x23, 40a534 <ascii_strlower_n@plt+0x612c>
  40a4e0:	ldr	x2, [x23]
  40a4e4:	cbz	x2, 40a534 <ascii_strlower_n@plt+0x612c>
  40a4e8:	adrp	x21, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40a4ec:	adrp	x0, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40a4f0:	add	x21, x21, #0x748
  40a4f4:	add	x0, x0, #0x741
  40a4f8:	mov	x1, x21
  40a4fc:	bl	403a58 <printf@plt>
  40a500:	ldr	x2, [x23, #8]!
  40a504:	cbz	x2, 40a534 <ascii_strlower_n@plt+0x612c>
  40a508:	adrp	x24, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40a50c:	adrp	x22, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40a510:	add	x24, x24, #0x75e
  40a514:	add	x22, x22, #0x741
  40a518:	ldr	x8, [sp, #48]
  40a51c:	mov	x0, x22
  40a520:	cmp	x23, x8
  40a524:	csel	x1, x21, x24, eq  // eq = none
  40a528:	bl	403a58 <printf@plt>
  40a52c:	ldr	x2, [x23, #8]!
  40a530:	cbnz	x2, 40a518 <ascii_strlower_n@plt+0x6110>
  40a534:	ldr	x23, [sp, #56]
  40a538:	cbz	x23, 40a590 <ascii_strlower_n@plt+0x6188>
  40a53c:	ldr	x2, [x23]
  40a540:	cbz	x2, 40a590 <ascii_strlower_n@plt+0x6188>
  40a544:	adrp	x21, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40a548:	adrp	x0, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40a54c:	add	x21, x21, #0x35a
  40a550:	add	x0, x0, #0x349
  40a554:	mov	x1, x21
  40a558:	bl	403a58 <printf@plt>
  40a55c:	ldr	x2, [x23, #8]!
  40a560:	cbz	x2, 40a590 <ascii_strlower_n@plt+0x6188>
  40a564:	adrp	x24, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40a568:	adrp	x22, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40a56c:	add	x24, x24, #0x366
  40a570:	add	x22, x22, #0x349
  40a574:	ldr	x8, [sp, #56]
  40a578:	mov	x0, x22
  40a57c:	cmp	x23, x8
  40a580:	csel	x1, x21, x24, eq  // eq = none
  40a584:	bl	403a58 <printf@plt>
  40a588:	ldr	x2, [x23, #8]!
  40a58c:	cbnz	x2, 40a574 <ascii_strlower_n@plt+0x616c>
  40a590:	ldr	x0, [sp, #64]
  40a594:	bl	403f08 <strv_sort@plt>
  40a598:	ldr	x23, [sp, #64]
  40a59c:	cbz	x23, 40a5f4 <ascii_strlower_n@plt+0x61ec>
  40a5a0:	ldr	x2, [x23]
  40a5a4:	cbz	x2, 40a5f4 <ascii_strlower_n@plt+0x61ec>
  40a5a8:	adrp	x21, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40a5ac:	adrp	x0, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40a5b0:	add	x21, x21, #0x372
  40a5b4:	add	x0, x0, #0x349
  40a5b8:	mov	x1, x21
  40a5bc:	bl	403a58 <printf@plt>
  40a5c0:	ldr	x2, [x23, #8]!
  40a5c4:	cbz	x2, 40a5f4 <ascii_strlower_n@plt+0x61ec>
  40a5c8:	adrp	x24, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40a5cc:	adrp	x22, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40a5d0:	add	x24, x24, #0x366
  40a5d4:	add	x22, x22, #0x349
  40a5d8:	ldr	x8, [sp, #64]
  40a5dc:	mov	x0, x22
  40a5e0:	cmp	x23, x8
  40a5e4:	csel	x1, x21, x24, eq  // eq = none
  40a5e8:	bl	403a58 <printf@plt>
  40a5ec:	ldr	x2, [x23, #8]!
  40a5f0:	cbnz	x2, 40a5d8 <ascii_strlower_n@plt+0x61d0>
  40a5f4:	mov	w21, wzr
  40a5f8:	mov	w8, #0x1                   	// #1
  40a5fc:	strb	w8, [sp, #4]
  40a600:	b	40a244 <ascii_strlower_n@plt+0x5e3c>
  40a604:	bl	403f18 <rtnl_log_parse_error@plt>
  40a608:	mov	w21, w0
  40a60c:	b	40a614 <ascii_strlower_n@plt+0x620c>
  40a610:	mov	w21, wzr
  40a614:	ldr	x0, [sp, #8]
  40a618:	cbz	x0, 40a620 <ascii_strlower_n@plt+0x6218>
  40a61c:	bl	403f28 <sd_netlink_unref@plt>
  40a620:	ldr	x0, [sp, #16]
  40a624:	cbz	x0, 40a62c <ascii_strlower_n@plt+0x6224>
  40a628:	bl	403f38 <sd_netlink_message_unref@plt>
  40a62c:	ldr	x0, [sp, #24]
  40a630:	cbz	x0, 40a638 <ascii_strlower_n@plt+0x6230>
  40a634:	bl	403f38 <sd_netlink_message_unref@plt>
  40a638:	mov	w0, w21
  40a63c:	ldp	x20, x19, [sp, #192]
  40a640:	ldp	x22, x21, [sp, #176]
  40a644:	ldp	x24, x23, [sp, #160]
  40a648:	ldp	x29, x30, [sp, #144]
  40a64c:	add	sp, sp, #0xd0
  40a650:	ret
  40a654:	adrp	x1, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40a658:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  40a65c:	adrp	x4, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40a660:	add	x1, x1, #0x104
  40a664:	add	x2, x2, #0x717
  40a668:	add	x4, x4, #0x5d0
  40a66c:	mov	w3, #0x6e6                 	// #1766
  40a670:	bl	403a98 <log_assert_failed_realm@plt>
  40a674:	stp	x29, x30, [sp, #-48]!
  40a678:	str	x21, [sp, #16]
  40a67c:	stp	x20, x19, [sp, #32]
  40a680:	mov	x29, sp
  40a684:	cbz	x0, 40a740 <ascii_strlower_n@plt+0x6338>
  40a688:	cbz	x1, 40a760 <ascii_strlower_n@plt+0x6358>
  40a68c:	mov	x19, x2
  40a690:	cbz	x2, 40a784 <ascii_strlower_n@plt+0x637c>
  40a694:	mov	x20, x4
  40a698:	cbz	x4, 40a7a8 <ascii_strlower_n@plt+0x63a0>
  40a69c:	adrp	x2, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40a6a0:	add	x2, x2, #0x8e
  40a6a4:	mov	w1, #0x61                  	// #97
  40a6a8:	mov	x0, x19
  40a6ac:	bl	403cf8 <sd_bus_message_enter_container@plt>
  40a6b0:	tbz	w0, #31, 40a6c8 <ascii_strlower_n@plt+0x62c0>
  40a6b4:	mov	w21, w0
  40a6b8:	b	40a72c <ascii_strlower_n@plt+0x6324>
  40a6bc:	ldr	x1, [x29, #24]
  40a6c0:	mov	x0, x1
  40a6c4:	bl	4039d8 <free@plt>
  40a6c8:	add	x2, x29, #0x18
  40a6cc:	mov	x0, x19
  40a6d0:	mov	w1, wzr
  40a6d4:	str	xzr, [x29, #24]
  40a6d8:	bl	40a9d8 <ascii_strlower_n@plt+0x65d0>
  40a6dc:	mov	w21, w0
  40a6e0:	tbnz	w0, #31, 40a70c <ascii_strlower_n@plt+0x6304>
  40a6e4:	ldr	x1, [x29, #24]
  40a6e8:	cbz	w21, 40a718 <ascii_strlower_n@plt+0x6310>
  40a6ec:	cbz	x1, 40a6c0 <ascii_strlower_n@plt+0x62b8>
  40a6f0:	ldrb	w8, [x1]
  40a6f4:	cbz	w8, 40a6c0 <ascii_strlower_n@plt+0x62b8>
  40a6f8:	mov	x0, x20
  40a6fc:	str	xzr, [x29, #24]
  40a700:	bl	403f48 <strv_consume@plt>
  40a704:	tbz	w0, #31, 40a6bc <ascii_strlower_n@plt+0x62b4>
  40a708:	mov	w21, w0
  40a70c:	ldr	x0, [x29, #24]
  40a710:	bl	4039d8 <free@plt>
  40a714:	b	40a72c <ascii_strlower_n@plt+0x6324>
  40a718:	mov	x0, x1
  40a71c:	bl	4039d8 <free@plt>
  40a720:	mov	x0, x19
  40a724:	bl	403d18 <sd_bus_message_exit_container@plt>
  40a728:	and	w21, w0, w0, asr #31
  40a72c:	mov	w0, w21
  40a730:	ldp	x20, x19, [sp, #32]
  40a734:	ldr	x21, [sp, #16]
  40a738:	ldp	x29, x30, [sp], #48
  40a73c:	ret
  40a740:	adrp	x1, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40a744:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  40a748:	adrp	x4, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40a74c:	add	x1, x1, #0x104
  40a750:	add	x2, x2, #0x717
  40a754:	add	x4, x4, #0x37e
  40a758:	mov	w3, #0x4c6                 	// #1222
  40a75c:	bl	403a98 <log_assert_failed_realm@plt>
  40a760:	adrp	x1, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40a764:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  40a768:	adrp	x4, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40a76c:	add	x1, x1, #0x3d9
  40a770:	add	x2, x2, #0x717
  40a774:	add	x4, x4, #0x37e
  40a778:	mov	w3, #0x4c7                 	// #1223
  40a77c:	mov	w0, wzr
  40a780:	bl	403a98 <log_assert_failed_realm@plt>
  40a784:	adrp	x1, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40a788:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  40a78c:	adrp	x4, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40a790:	add	x1, x1, #0x3e0
  40a794:	add	x2, x2, #0x717
  40a798:	add	x4, x4, #0x37e
  40a79c:	mov	w3, #0x4c8                 	// #1224
  40a7a0:	mov	w0, wzr
  40a7a4:	bl	403a98 <log_assert_failed_realm@plt>
  40a7a8:	adrp	x1, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40a7ac:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  40a7b0:	adrp	x4, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40a7b4:	add	x1, x1, #0x3e2
  40a7b8:	add	x2, x2, #0x717
  40a7bc:	add	x4, x4, #0x37e
  40a7c0:	mov	w3, #0x4c9                 	// #1225
  40a7c4:	mov	w0, wzr
  40a7c8:	bl	403a98 <log_assert_failed_realm@plt>
  40a7cc:	stp	x29, x30, [sp, #-16]!
  40a7d0:	mov	x0, x2
  40a7d4:	mov	x29, sp
  40a7d8:	cbz	x2, 40a7f0 <ascii_strlower_n@plt+0x63e8>
  40a7dc:	cbz	x4, 40a810 <ascii_strlower_n@plt+0x6408>
  40a7e0:	mov	w1, wzr
  40a7e4:	mov	x2, x4
  40a7e8:	ldp	x29, x30, [sp], #16
  40a7ec:	b	40a9d8 <ascii_strlower_n@plt+0x65d0>
  40a7f0:	adrp	x1, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40a7f4:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  40a7f8:	adrp	x4, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40a7fc:	add	x1, x1, #0x3e0
  40a800:	add	x2, x2, #0x717
  40a804:	add	x4, x4, #0x4e0
  40a808:	mov	w3, #0x4e8                 	// #1256
  40a80c:	bl	403a98 <log_assert_failed_realm@plt>
  40a810:	adrp	x1, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40a814:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  40a818:	adrp	x4, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40a81c:	add	x1, x1, #0x542
  40a820:	add	x2, x2, #0x717
  40a824:	add	x4, x4, #0x4e0
  40a828:	mov	w3, #0x4e9                 	// #1257
  40a82c:	mov	w0, wzr
  40a830:	bl	403a98 <log_assert_failed_realm@plt>
  40a834:	sub	sp, sp, #0x40
  40a838:	stp	x29, x30, [sp, #16]
  40a83c:	stp	x22, x21, [sp, #32]
  40a840:	stp	x20, x19, [sp, #48]
  40a844:	add	x29, sp, #0x10
  40a848:	cbz	x0, 40a94c <ascii_strlower_n@plt+0x6544>
  40a84c:	cbz	x1, 40a96c <ascii_strlower_n@plt+0x6564>
  40a850:	mov	x19, x2
  40a854:	cbz	x2, 40a990 <ascii_strlower_n@plt+0x6588>
  40a858:	mov	x20, x4
  40a85c:	cbz	x4, 40a9b4 <ascii_strlower_n@plt+0x65ac>
  40a860:	adrp	x2, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40a864:	add	x2, x2, #0x5a2
  40a868:	mov	w1, #0x61                  	// #97
  40a86c:	mov	x0, x19
  40a870:	bl	403cf8 <sd_bus_message_enter_container@plt>
  40a874:	tbnz	w0, #31, 40a938 <ascii_strlower_n@plt+0x6530>
  40a878:	adrp	x1, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40a87c:	add	x1, x1, #0x5a2
  40a880:	mov	x2, sp
  40a884:	sub	x3, x29, #0x4
  40a888:	mov	x0, x19
  40a88c:	bl	403d08 <sd_bus_message_read@plt>
  40a890:	cmp	w0, #0x1
  40a894:	b.lt	40a920 <ascii_strlower_n@plt+0x6518>  // b.tstop
  40a898:	adrp	x21, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40a89c:	adrp	x22, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40a8a0:	add	x21, x21, #0x5a2
  40a8a4:	add	x22, x22, #0x5ad
  40a8a8:	b	40a8d4 <ascii_strlower_n@plt+0x64cc>
  40a8ac:	mov	x1, xzr
  40a8b0:	mov	x0, x1
  40a8b4:	bl	4039d8 <free@plt>
  40a8b8:	mov	x2, sp
  40a8bc:	sub	x3, x29, #0x4
  40a8c0:	mov	x0, x19
  40a8c4:	mov	x1, x21
  40a8c8:	bl	403d08 <sd_bus_message_read@plt>
  40a8cc:	cmp	w0, #0x1
  40a8d0:	b.lt	40a920 <ascii_strlower_n@plt+0x6518>  // b.tstop
  40a8d4:	ldur	w8, [x29, #-4]
  40a8d8:	ldr	x1, [sp]
  40a8dc:	cbz	w8, 40a8f8 <ascii_strlower_n@plt+0x64f0>
  40a8e0:	mov	x0, x22
  40a8e4:	mov	x2, xzr
  40a8e8:	bl	403f58 <strjoin_real@plt>
  40a8ec:	mov	x1, x0
  40a8f0:	cbnz	x0, 40a908 <ascii_strlower_n@plt+0x6500>
  40a8f4:	b	40a934 <ascii_strlower_n@plt+0x652c>
  40a8f8:	mov	x0, x1
  40a8fc:	bl	403ae8 <strdup@plt>
  40a900:	mov	x1, x0
  40a904:	cbz	x0, 40a934 <ascii_strlower_n@plt+0x652c>
  40a908:	ldrb	w8, [x1]
  40a90c:	cbz	w8, 40a8b0 <ascii_strlower_n@plt+0x64a8>
  40a910:	mov	x0, x20
  40a914:	bl	403f48 <strv_consume@plt>
  40a918:	tbz	w0, #31, 40a8ac <ascii_strlower_n@plt+0x64a4>
  40a91c:	b	40a938 <ascii_strlower_n@plt+0x6530>
  40a920:	tbnz	w0, #31, 40a938 <ascii_strlower_n@plt+0x6530>
  40a924:	mov	x0, x19
  40a928:	bl	403d18 <sd_bus_message_exit_container@plt>
  40a92c:	and	w0, w0, w0, asr #31
  40a930:	b	40a938 <ascii_strlower_n@plt+0x6530>
  40a934:	mov	w0, #0xfffffff4            	// #-12
  40a938:	ldp	x20, x19, [sp, #48]
  40a93c:	ldp	x22, x21, [sp, #32]
  40a940:	ldp	x29, x30, [sp, #16]
  40a944:	add	sp, sp, #0x40
  40a948:	ret
  40a94c:	adrp	x1, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40a950:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  40a954:	adrp	x4, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40a958:	add	x1, x1, #0x104
  40a95c:	add	x2, x2, #0x717
  40a960:	add	x4, x4, #0x54b
  40a964:	mov	w3, #0x513                 	// #1299
  40a968:	bl	403a98 <log_assert_failed_realm@plt>
  40a96c:	adrp	x1, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40a970:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  40a974:	adrp	x4, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40a978:	add	x1, x1, #0x3d9
  40a97c:	add	x2, x2, #0x717
  40a980:	add	x4, x4, #0x54b
  40a984:	mov	w3, #0x514                 	// #1300
  40a988:	mov	w0, wzr
  40a98c:	bl	403a98 <log_assert_failed_realm@plt>
  40a990:	adrp	x1, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40a994:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  40a998:	adrp	x4, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40a99c:	add	x1, x1, #0x3e0
  40a9a0:	add	x2, x2, #0x717
  40a9a4:	add	x4, x4, #0x54b
  40a9a8:	mov	w3, #0x515                 	// #1301
  40a9ac:	mov	w0, wzr
  40a9b0:	bl	403a98 <log_assert_failed_realm@plt>
  40a9b4:	adrp	x1, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40a9b8:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  40a9bc:	adrp	x4, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40a9c0:	add	x1, x1, #0x3e2
  40a9c4:	add	x2, x2, #0x717
  40a9c8:	add	x4, x4, #0x54b
  40a9cc:	mov	w3, #0x516                 	// #1302
  40a9d0:	mov	w0, wzr
  40a9d4:	bl	403a98 <log_assert_failed_realm@plt>
  40a9d8:	sub	sp, sp, #0x50
  40a9dc:	stp	x29, x30, [sp, #32]
  40a9e0:	add	x29, sp, #0x20
  40a9e4:	stp	x22, x21, [sp, #48]
  40a9e8:	stp	x20, x19, [sp, #64]
  40a9ec:	stur	xzr, [x29, #-8]
  40a9f0:	cbz	x0, 40ab8c <ascii_strlower_n@plt+0x6784>
  40a9f4:	mov	x19, x2
  40a9f8:	cbz	x2, 40abac <ascii_strlower_n@plt+0x67a4>
  40a9fc:	adrp	x8, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40aa00:	adrp	x9, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40aa04:	add	x8, x8, #0x427
  40aa08:	add	x9, x9, #0x422
  40aa0c:	tst	w1, #0x1
  40aa10:	mov	w20, w1
  40aa14:	csel	x2, x9, x8, ne  // ne = any
  40aa18:	mov	w1, #0x72                  	// #114
  40aa1c:	mov	x21, x0
  40aa20:	bl	403cf8 <sd_bus_message_enter_container@plt>
  40aa24:	cmp	w0, #0x1
  40aa28:	b.lt	40aaec <ascii_strlower_n@plt+0x66e4>  // b.tstop
  40aa2c:	tbz	w20, #0, 40aa48 <ascii_strlower_n@plt+0x6640>
  40aa30:	adrp	x1, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40aa34:	add	x1, x1, #0x42b
  40aa38:	sub	x2, x29, #0xc
  40aa3c:	mov	x0, x21
  40aa40:	bl	403d08 <sd_bus_message_read@plt>
  40aa44:	tbnz	w0, #31, 40aaec <ascii_strlower_n@plt+0x66e4>
  40aa48:	adrp	x1, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40aa4c:	add	x1, x1, #0x42b
  40aa50:	add	x2, sp, #0x10
  40aa54:	mov	x0, x21
  40aa58:	bl	403d08 <sd_bus_message_read@plt>
  40aa5c:	tbnz	w0, #31, 40aaec <ascii_strlower_n@plt+0x66e4>
  40aa60:	add	x2, sp, #0x8
  40aa64:	mov	x3, sp
  40aa68:	mov	w1, #0x79                  	// #121
  40aa6c:	mov	x0, x21
  40aa70:	bl	403d58 <sd_bus_message_read_array@plt>
  40aa74:	tbnz	w0, #31, 40aaec <ascii_strlower_n@plt+0x66e4>
  40aa78:	mov	x0, x21
  40aa7c:	bl	403d18 <sd_bus_message_exit_container@plt>
  40aa80:	tbnz	w0, #31, 40aaec <ascii_strlower_n@plt+0x66e4>
  40aa84:	ldur	w8, [x29, #-12]
  40aa88:	cbz	w8, 40aa9c <ascii_strlower_n@plt+0x6694>
  40aa8c:	tbz	w20, #0, 40aa9c <ascii_strlower_n@plt+0x6694>
  40aa90:	str	xzr, [x19]
  40aa94:	mov	w22, #0x1                   	// #1
  40aa98:	b	40aaf0 <ascii_strlower_n@plt+0x66e8>
  40aa9c:	ldr	w20, [sp, #16]
  40aaa0:	orr	w8, w20, #0x8
  40aaa4:	cmp	w8, #0xa
  40aaa8:	b.ne	40ab10 <ascii_strlower_n@plt+0x6708>  // b.any
  40aaac:	ldr	x8, [sp]
  40aab0:	cmp	w20, #0xa
  40aab4:	mov	w9, #0x4                   	// #4
  40aab8:	mov	w10, #0x10                  	// #16
  40aabc:	csel	x9, x10, x9, eq  // eq = none
  40aac0:	cmp	x8, x9
  40aac4:	b.ne	40ab50 <ascii_strlower_n@plt+0x6748>  // b.any
  40aac8:	ldr	x1, [sp, #8]
  40aacc:	sub	x2, x29, #0x8
  40aad0:	mov	w0, w20
  40aad4:	bl	403f68 <in_addr_to_string@plt>
  40aad8:	tbnz	w0, #31, 40aaec <ascii_strlower_n@plt+0x66e4>
  40aadc:	ldur	x8, [x29, #-8]
  40aae0:	stur	xzr, [x29, #-8]
  40aae4:	str	x8, [x19]
  40aae8:	b	40aa94 <ascii_strlower_n@plt+0x668c>
  40aaec:	mov	w22, w0
  40aaf0:	ldur	x0, [x29, #-8]
  40aaf4:	bl	4039d8 <free@plt>
  40aaf8:	mov	w0, w22
  40aafc:	ldp	x20, x19, [sp, #64]
  40ab00:	ldp	x22, x21, [sp, #48]
  40ab04:	ldp	x29, x30, [sp, #32]
  40ab08:	add	sp, sp, #0x50
  40ab0c:	ret
  40ab10:	mov	w0, wzr
  40ab14:	bl	4039a8 <log_get_max_level_realm@plt>
  40ab18:	cmp	w0, #0x7
  40ab1c:	b.lt	40aa90 <ascii_strlower_n@plt+0x6688>  // b.tstop
  40ab20:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  40ab24:	adrp	x4, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40ab28:	adrp	x5, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40ab2c:	add	x2, x2, #0x717
  40ab30:	add	x4, x4, #0x42d
  40ab34:	add	x5, x5, #0x441
  40ab38:	mov	w0, #0x7                   	// #7
  40ab3c:	mov	w3, #0x4ac                 	// #1196
  40ab40:	mov	w1, wzr
  40ab44:	mov	w6, w20
  40ab48:	bl	4039b8 <log_internal_realm@plt>
  40ab4c:	b	40aa90 <ascii_strlower_n@plt+0x6688>
  40ab50:	mov	w0, wzr
  40ab54:	bl	4039a8 <log_get_max_level_realm@plt>
  40ab58:	cmp	w0, #0x7
  40ab5c:	b.lt	40aa90 <ascii_strlower_n@plt+0x6688>  // b.tstop
  40ab60:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  40ab64:	adrp	x4, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40ab68:	adrp	x5, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40ab6c:	add	x2, x2, #0x717
  40ab70:	add	x4, x4, #0x42d
  40ab74:	add	x5, x5, #0x461
  40ab78:	mov	w0, #0x7                   	// #7
  40ab7c:	mov	w3, #0x4b3                 	// #1203
  40ab80:	mov	w1, wzr
  40ab84:	bl	4039b8 <log_internal_realm@plt>
  40ab88:	b	40aa90 <ascii_strlower_n@plt+0x6688>
  40ab8c:	adrp	x1, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40ab90:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  40ab94:	adrp	x4, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40ab98:	add	x1, x1, #0x3e0
  40ab9c:	add	x2, x2, #0x717
  40aba0:	add	x4, x4, #0x3e4
  40aba4:	mov	w3, #0x48c                 	// #1164
  40aba8:	bl	403a98 <log_assert_failed_realm@plt>
  40abac:	adrp	x1, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40abb0:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  40abb4:	adrp	x4, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40abb8:	add	x1, x1, #0x41e
  40abbc:	add	x2, x2, #0x717
  40abc0:	add	x4, x4, #0x3e4
  40abc4:	mov	w3, #0x48d                 	// #1165
  40abc8:	mov	w0, wzr
  40abcc:	bl	403a98 <log_assert_failed_realm@plt>
  40abd0:	stp	x29, x30, [sp, #-48]!
  40abd4:	str	x21, [sp, #16]
  40abd8:	stp	x20, x19, [sp, #32]
  40abdc:	mov	x29, sp
  40abe0:	cbz	x0, 40ac9c <ascii_strlower_n@plt+0x6894>
  40abe4:	cbz	x1, 40acbc <ascii_strlower_n@plt+0x68b4>
  40abe8:	mov	x19, x2
  40abec:	cbz	x2, 40ace0 <ascii_strlower_n@plt+0x68d8>
  40abf0:	mov	x20, x4
  40abf4:	cbz	x4, 40ad04 <ascii_strlower_n@plt+0x68fc>
  40abf8:	adrp	x2, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40abfc:	add	x2, x2, #0x653
  40ac00:	mov	w1, #0x61                  	// #97
  40ac04:	mov	x0, x19
  40ac08:	bl	403cf8 <sd_bus_message_enter_container@plt>
  40ac0c:	tbz	w0, #31, 40ac24 <ascii_strlower_n@plt+0x681c>
  40ac10:	mov	w21, w0
  40ac14:	b	40ac88 <ascii_strlower_n@plt+0x6880>
  40ac18:	ldr	x1, [x29, #24]
  40ac1c:	mov	x0, x1
  40ac20:	bl	4039d8 <free@plt>
  40ac24:	add	x2, x29, #0x18
  40ac28:	mov	w1, #0x1                   	// #1
  40ac2c:	mov	x0, x19
  40ac30:	str	xzr, [x29, #24]
  40ac34:	bl	40a9d8 <ascii_strlower_n@plt+0x65d0>
  40ac38:	mov	w21, w0
  40ac3c:	tbnz	w0, #31, 40ac68 <ascii_strlower_n@plt+0x6860>
  40ac40:	ldr	x1, [x29, #24]
  40ac44:	cbz	w21, 40ac74 <ascii_strlower_n@plt+0x686c>
  40ac48:	cbz	x1, 40ac1c <ascii_strlower_n@plt+0x6814>
  40ac4c:	ldrb	w8, [x1]
  40ac50:	cbz	w8, 40ac1c <ascii_strlower_n@plt+0x6814>
  40ac54:	mov	x0, x20
  40ac58:	str	xzr, [x29, #24]
  40ac5c:	bl	403f48 <strv_consume@plt>
  40ac60:	tbz	w0, #31, 40ac18 <ascii_strlower_n@plt+0x6810>
  40ac64:	mov	w21, w0
  40ac68:	ldr	x0, [x29, #24]
  40ac6c:	bl	4039d8 <free@plt>
  40ac70:	b	40ac88 <ascii_strlower_n@plt+0x6880>
  40ac74:	mov	x0, x1
  40ac78:	bl	4039d8 <free@plt>
  40ac7c:	mov	x0, x19
  40ac80:	bl	403d18 <sd_bus_message_exit_container@plt>
  40ac84:	and	w21, w0, w0, asr #31
  40ac88:	mov	w0, w21
  40ac8c:	ldp	x20, x19, [sp, #32]
  40ac90:	ldr	x21, [sp, #16]
  40ac94:	ldp	x29, x30, [sp], #48
  40ac98:	ret
  40ac9c:	adrp	x1, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40aca0:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  40aca4:	adrp	x4, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40aca8:	add	x1, x1, #0x104
  40acac:	add	x2, x2, #0x717
  40acb0:	add	x4, x4, #0x774
  40acb4:	mov	w3, #0x5f9                 	// #1529
  40acb8:	bl	403a98 <log_assert_failed_realm@plt>
  40acbc:	adrp	x1, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40acc0:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  40acc4:	adrp	x4, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40acc8:	add	x1, x1, #0x3d9
  40accc:	add	x2, x2, #0x717
  40acd0:	add	x4, x4, #0x774
  40acd4:	mov	w3, #0x5fa                 	// #1530
  40acd8:	mov	w0, wzr
  40acdc:	bl	403a98 <log_assert_failed_realm@plt>
  40ace0:	adrp	x1, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40ace4:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  40ace8:	adrp	x4, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40acec:	add	x1, x1, #0x3e0
  40acf0:	add	x2, x2, #0x717
  40acf4:	add	x4, x4, #0x774
  40acf8:	mov	w3, #0x5fb                 	// #1531
  40acfc:	mov	w0, wzr
  40ad00:	bl	403a98 <log_assert_failed_realm@plt>
  40ad04:	adrp	x1, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40ad08:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  40ad0c:	adrp	x4, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40ad10:	add	x1, x1, #0x3e2
  40ad14:	add	x2, x2, #0x717
  40ad18:	add	x4, x4, #0x774
  40ad1c:	mov	w3, #0x5fc                 	// #1532
  40ad20:	mov	w0, wzr
  40ad24:	bl	403a98 <log_assert_failed_realm@plt>
  40ad28:	stp	x29, x30, [sp, #-16]!
  40ad2c:	mov	x0, x2
  40ad30:	mov	x29, sp
  40ad34:	cbz	x2, 40ad4c <ascii_strlower_n@plt+0x6944>
  40ad38:	cbz	x4, 40ad6c <ascii_strlower_n@plt+0x6964>
  40ad3c:	mov	w1, #0x1                   	// #1
  40ad40:	mov	x2, x4
  40ad44:	ldp	x29, x30, [sp], #16
  40ad48:	b	40a9d8 <ascii_strlower_n@plt+0x65d0>
  40ad4c:	adrp	x1, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40ad50:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  40ad54:	adrp	x4, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40ad58:	add	x1, x1, #0x3e0
  40ad5c:	add	x2, x2, #0x717
  40ad60:	add	x4, x4, #0x7d1
  40ad64:	mov	w3, #0x61b                 	// #1563
  40ad68:	bl	403a98 <log_assert_failed_realm@plt>
  40ad6c:	adrp	x1, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40ad70:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  40ad74:	adrp	x4, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40ad78:	add	x1, x1, #0x542
  40ad7c:	add	x2, x2, #0x717
  40ad80:	add	x4, x4, #0x7d1
  40ad84:	mov	w3, #0x61c                 	// #1564
  40ad88:	mov	w0, wzr
  40ad8c:	bl	403a98 <log_assert_failed_realm@plt>
  40ad90:	sub	sp, sp, #0x50
  40ad94:	stp	x29, x30, [sp, #16]
  40ad98:	stp	x24, x23, [sp, #32]
  40ad9c:	stp	x22, x21, [sp, #48]
  40ada0:	stp	x20, x19, [sp, #64]
  40ada4:	add	x29, sp, #0x10
  40ada8:	cbz	x0, 40aeec <ascii_strlower_n@plt+0x6ae4>
  40adac:	cbz	x1, 40af0c <ascii_strlower_n@plt+0x6b04>
  40adb0:	mov	x19, x2
  40adb4:	cbz	x2, 40af30 <ascii_strlower_n@plt+0x6b28>
  40adb8:	mov	x20, x4
  40adbc:	cbz	x4, 40af54 <ascii_strlower_n@plt+0x6b4c>
  40adc0:	adrp	x2, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40adc4:	add	x2, x2, #0x5a7
  40adc8:	mov	w1, #0x61                  	// #97
  40adcc:	mov	x0, x19
  40add0:	bl	403cf8 <sd_bus_message_enter_container@plt>
  40add4:	tbnz	w0, #31, 40aeb4 <ascii_strlower_n@plt+0x6aac>
  40add8:	adrp	x21, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40addc:	adrp	x22, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40ade0:	add	x21, x21, #0x5a7
  40ade4:	mov	w24, #0xfffffff4            	// #-12
  40ade8:	add	x22, x22, #0x5ad
  40adec:	b	40adf8 <ascii_strlower_n@plt+0x69f0>
  40adf0:	mov	x0, x1
  40adf4:	bl	4039d8 <free@plt>
  40adf8:	sub	x2, x29, #0x4
  40adfc:	mov	x3, sp
  40ae00:	add	x4, sp, #0x8
  40ae04:	mov	x0, x19
  40ae08:	mov	x1, x21
  40ae0c:	bl	403d08 <sd_bus_message_read@plt>
  40ae10:	cmp	w0, #0x1
  40ae14:	b.lt	40ae30 <ascii_strlower_n@plt+0x6a28>  // b.tstop
  40ae18:	ldur	w8, [x29, #-4]
  40ae1c:	cbz	w8, 40ae40 <ascii_strlower_n@plt+0x6a38>
  40ae20:	mov	x1, xzr
  40ae24:	mov	w23, #0x1                   	// #1
  40ae28:	tbz	w23, #31, 40ae84 <ascii_strlower_n@plt+0x6a7c>
  40ae2c:	b	40aea8 <ascii_strlower_n@plt+0x6aa0>
  40ae30:	mov	w23, w0
  40ae34:	mov	x1, xzr
  40ae38:	tbz	w23, #31, 40ae84 <ascii_strlower_n@plt+0x6a7c>
  40ae3c:	b	40aea8 <ascii_strlower_n@plt+0x6aa0>
  40ae40:	ldr	w8, [sp, #8]
  40ae44:	ldr	x1, [sp]
  40ae48:	cbz	w8, 40ae6c <ascii_strlower_n@plt+0x6a64>
  40ae4c:	mov	x0, x22
  40ae50:	mov	x2, xzr
  40ae54:	bl	403f58 <strjoin_real@plt>
  40ae58:	cmp	x0, #0x0
  40ae5c:	mov	x1, x0
  40ae60:	csinc	w23, w24, wzr, eq  // eq = none
  40ae64:	tbz	w23, #31, 40ae84 <ascii_strlower_n@plt+0x6a7c>
  40ae68:	b	40aea8 <ascii_strlower_n@plt+0x6aa0>
  40ae6c:	mov	x0, x1
  40ae70:	bl	403ae8 <strdup@plt>
  40ae74:	cmp	x0, #0x0
  40ae78:	mov	x1, x0
  40ae7c:	csinc	w23, w24, wzr, eq  // eq = none
  40ae80:	tbnz	w23, #31, 40aea8 <ascii_strlower_n@plt+0x6aa0>
  40ae84:	cbz	w23, 40aebc <ascii_strlower_n@plt+0x6ab4>
  40ae88:	cbz	x1, 40adf0 <ascii_strlower_n@plt+0x69e8>
  40ae8c:	ldrb	w8, [x1]
  40ae90:	cbz	w8, 40adf0 <ascii_strlower_n@plt+0x69e8>
  40ae94:	mov	x0, x20
  40ae98:	bl	403f48 <strv_consume@plt>
  40ae9c:	mov	x1, xzr
  40aea0:	tbz	w0, #31, 40adf0 <ascii_strlower_n@plt+0x69e8>
  40aea4:	mov	w23, w0
  40aea8:	mov	x0, x1
  40aeac:	bl	4039d8 <free@plt>
  40aeb0:	b	40aed0 <ascii_strlower_n@plt+0x6ac8>
  40aeb4:	mov	w23, w0
  40aeb8:	b	40aed0 <ascii_strlower_n@plt+0x6ac8>
  40aebc:	mov	x0, x1
  40aec0:	bl	4039d8 <free@plt>
  40aec4:	mov	x0, x19
  40aec8:	bl	403d18 <sd_bus_message_exit_container@plt>
  40aecc:	and	w23, w0, w0, asr #31
  40aed0:	mov	w0, w23
  40aed4:	ldp	x20, x19, [sp, #64]
  40aed8:	ldp	x22, x21, [sp, #48]
  40aedc:	ldp	x24, x23, [sp, #32]
  40aee0:	ldp	x29, x30, [sp, #16]
  40aee4:	add	sp, sp, #0x50
  40aee8:	ret
  40aeec:	adrp	x1, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40aef0:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  40aef4:	adrp	x4, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40aef8:	add	x1, x1, #0x104
  40aefc:	add	x2, x2, #0x717
  40af00:	add	x4, x4, #0x835
  40af04:	mov	w3, #0x625                 	// #1573
  40af08:	bl	403a98 <log_assert_failed_realm@plt>
  40af0c:	adrp	x1, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40af10:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  40af14:	adrp	x4, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40af18:	add	x1, x1, #0x3d9
  40af1c:	add	x2, x2, #0x717
  40af20:	add	x4, x4, #0x835
  40af24:	mov	w3, #0x626                 	// #1574
  40af28:	mov	w0, wzr
  40af2c:	bl	403a98 <log_assert_failed_realm@plt>
  40af30:	adrp	x1, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40af34:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  40af38:	adrp	x4, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40af3c:	add	x1, x1, #0x3e0
  40af40:	add	x2, x2, #0x717
  40af44:	add	x4, x4, #0x835
  40af48:	mov	w3, #0x627                 	// #1575
  40af4c:	mov	w0, wzr
  40af50:	bl	403a98 <log_assert_failed_realm@plt>
  40af54:	adrp	x1, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40af58:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  40af5c:	adrp	x4, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40af60:	add	x1, x1, #0x3e2
  40af64:	add	x2, x2, #0x717
  40af68:	add	x4, x4, #0x835
  40af6c:	mov	w3, #0x628                 	// #1576
  40af70:	mov	w0, wzr
  40af74:	bl	403a98 <log_assert_failed_realm@plt>
  40af78:	sub	sp, sp, #0xe0
  40af7c:	stp	x29, x30, [sp, #128]
  40af80:	add	x29, sp, #0x80
  40af84:	stp	x28, x27, [sp, #144]
  40af88:	stp	x26, x25, [sp, #160]
  40af8c:	stp	x24, x23, [sp, #176]
  40af90:	stp	x22, x21, [sp, #192]
  40af94:	stp	x20, x19, [sp, #208]
  40af98:	stp	xzr, xzr, [x29, #-40]
  40af9c:	stp	xzr, xzr, [sp, #64]
  40afa0:	str	xzr, [sp, #80]
  40afa4:	cbz	x1, 40b79c <ascii_strlower_n@plt+0x7394>
  40afa8:	mov	x20, x0
  40afac:	mov	w0, wzr
  40afb0:	mov	w21, w3
  40afb4:	mov	w22, w2
  40afb8:	mov	x19, x1
  40afbc:	bl	4039a8 <log_get_max_level_realm@plt>
  40afc0:	cmp	w0, #0x7
  40afc4:	b.lt	40b030 <ascii_strlower_n@plt+0x6c28>  // b.tstop
  40afc8:	mov	w0, w22
  40afcc:	bl	41d93c <ascii_strlower_n@plt+0x19534>
  40afd0:	mov	x23, x0
  40afd4:	and	w0, w21, #0xffff
  40afd8:	bl	41d148 <ascii_strlower_n@plt+0x18d40>
  40afdc:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  40afe0:	ldr	x9, [x8, #64]
  40afe4:	mov	x8, x0
  40afe8:	cbz	x9, 40aff4 <ascii_strlower_n@plt+0x6bec>
  40afec:	ldrb	w10, [x9]
  40aff0:	cbnz	w10, 40affc <ascii_strlower_n@plt+0x6bf4>
  40aff4:	adrp	x9, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40aff8:	add	x9, x9, #0x91c
  40affc:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  40b000:	adrp	x4, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40b004:	adrp	x5, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40b008:	add	x2, x2, #0x717
  40b00c:	add	x4, x4, #0x8ea
  40b010:	add	x5, x5, #0x8f9
  40b014:	mov	w0, #0x7                   	// #7
  40b018:	mov	w3, #0x1a4                 	// #420
  40b01c:	mov	w1, wzr
  40b020:	mov	x6, x19
  40b024:	mov	x7, x23
  40b028:	stp	x8, x9, [sp]
  40b02c:	bl	4039b8 <log_internal_realm@plt>
  40b030:	adrp	x2, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40b034:	adrp	x3, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40b038:	adrp	x4, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40b03c:	adrp	x5, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40b040:	add	x2, x2, #0x1b6
  40b044:	add	x3, x3, #0x661
  40b048:	add	x4, x4, #0x91e
  40b04c:	add	x5, x5, #0x93f
  40b050:	sub	x1, x29, #0x20
  40b054:	mov	x0, x20
  40b058:	bl	403ca8 <sd_bus_message_new_method_call@plt>
  40b05c:	tbnz	w0, #31, 40b470 <ascii_strlower_n@plt+0x7068>
  40b060:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  40b064:	add	x8, x8, #0x30
  40b068:	ldur	x0, [x29, #-32]
  40b06c:	ldr	w2, [x8]
  40b070:	ldr	x6, [x8, #32]
  40b074:	adrp	x1, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40b078:	and	w4, w22, #0xffff
  40b07c:	and	w5, w21, #0xffff
  40b080:	add	x1, x1, #0x96e
  40b084:	mov	x3, x19
  40b088:	bl	403cb8 <sd_bus_message_append@plt>
  40b08c:	tbnz	w0, #31, 40b4ac <ascii_strlower_n@plt+0x70a4>
  40b090:	mov	w0, #0x1                   	// #1
  40b094:	bl	403cd8 <now@plt>
  40b098:	ldur	x1, [x29, #-32]
  40b09c:	mov	w2, #0xe00                 	// #3584
  40b0a0:	mov	x22, x0
  40b0a4:	add	x3, sp, #0x40
  40b0a8:	sub	x4, x29, #0x28
  40b0ac:	movk	w2, #0x727, lsl #16
  40b0b0:	mov	x0, x20
  40b0b4:	bl	403ce8 <sd_bus_call@plt>
  40b0b8:	tbnz	w0, #31, 40b4f8 <ascii_strlower_n@plt+0x70f0>
  40b0bc:	mov	w0, #0x1                   	// #1
  40b0c0:	bl	403cd8 <now@plt>
  40b0c4:	ldur	x8, [x29, #-40]
  40b0c8:	adrp	x2, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40b0cc:	mov	x21, x0
  40b0d0:	add	x2, x2, #0x990
  40b0d4:	mov	w1, #0x61                  	// #97
  40b0d8:	mov	x0, x8
  40b0dc:	bl	403cf8 <sd_bus_message_enter_container@plt>
  40b0e0:	tbnz	w0, #31, 40b55c <ascii_strlower_n@plt+0x7154>
  40b0e4:	sub	x8, x21, x22
  40b0e8:	adrp	x22, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40b0ec:	adrp	x23, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40b0f0:	adrp	x24, 41e000 <ascii_strlower_n@plt+0x19bf8>
  40b0f4:	adrp	x27, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40b0f8:	mov	w25, wzr
  40b0fc:	mov	w26, wzr
  40b100:	add	x22, x22, #0x9b8
  40b104:	add	x23, x23, #0x9be
  40b108:	add	x24, x24, #0x717
  40b10c:	add	x27, x27, #0x8ea
  40b110:	str	x8, [sp, #16]
  40b114:	b	40b128 <ascii_strlower_n@plt+0x6d20>
  40b118:	mov	w8, wzr
  40b11c:	neg	w9, w20
  40b120:	sub	w21, w8, w9, uxtb
  40b124:	tbz	wzr, #0, 40b59c <ascii_strlower_n@plt+0x7194>
  40b128:	ldur	x0, [x29, #-40]
  40b12c:	mov	w1, #0x72                  	// #114
  40b130:	mov	x2, x22
  40b134:	bl	403cf8 <sd_bus_message_enter_container@plt>
  40b138:	cmp	w0, #0x1
  40b13c:	b.lt	40b5e0 <ascii_strlower_n@plt+0x71d8>  // b.tstop
  40b140:	ldur	x0, [x29, #-40]
  40b144:	add	x2, sp, #0x34
  40b148:	add	x3, sp, #0x3c
  40b14c:	add	x4, sp, #0x38
  40b150:	mov	x1, x23
  40b154:	bl	403d08 <sd_bus_message_read@plt>
  40b158:	tbnz	w0, #31, 40b1c4 <ascii_strlower_n@plt+0x6dbc>
  40b15c:	ldur	x0, [x29, #-40]
  40b160:	add	x2, sp, #0x28
  40b164:	add	x3, sp, #0x20
  40b168:	mov	w1, #0x79                  	// #121
  40b16c:	bl	403d58 <sd_bus_message_read_array@plt>
  40b170:	tbnz	w0, #31, 40b1e4 <ascii_strlower_n@plt+0x6ddc>
  40b174:	ldur	x0, [x29, #-40]
  40b178:	bl	403d18 <sd_bus_message_exit_container@plt>
  40b17c:	tbnz	w0, #31, 40b204 <ascii_strlower_n@plt+0x6dfc>
  40b180:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  40b184:	ldr	w8, [x8, #56]
  40b188:	cmp	w8, #0x2
  40b18c:	b.ne	40b248 <ascii_strlower_n@plt+0x6e40>  // b.any
  40b190:	adrp	x20, 440000 <ascii_strlower_n@plt+0x3bbf8>
  40b194:	ldr	x8, [sp, #32]
  40b198:	ldr	x3, [x20, #176]
  40b19c:	sub	x0, x29, #0x8
  40b1a0:	mov	w1, #0x8                   	// #8
  40b1a4:	mov	w2, #0x1                   	// #1
  40b1a8:	stur	x8, [x29, #-8]
  40b1ac:	bl	403f78 <fwrite@plt>
  40b1b0:	ldp	x2, x0, [sp, #32]
  40b1b4:	ldr	x3, [x20, #176]
  40b1b8:	mov	w1, #0x1                   	// #1
  40b1bc:	bl	403f78 <fwrite@plt>
  40b1c0:	b	40b354 <ascii_strlower_n@plt+0x6f4c>
  40b1c4:	mov	w20, w0
  40b1c8:	mov	w0, wzr
  40b1cc:	bl	4039a8 <log_get_max_level_realm@plt>
  40b1d0:	cmp	w0, #0x3
  40b1d4:	b.lt	40b118 <ascii_strlower_n@plt+0x6d10>  // b.tstop
  40b1d8:	mov	w0, #0x3                   	// #3
  40b1dc:	mov	w3, #0x1cd                 	// #461
  40b1e0:	b	40b220 <ascii_strlower_n@plt+0x6e18>
  40b1e4:	mov	w20, w0
  40b1e8:	mov	w0, wzr
  40b1ec:	bl	4039a8 <log_get_max_level_realm@plt>
  40b1f0:	cmp	w0, #0x3
  40b1f4:	b.lt	40b118 <ascii_strlower_n@plt+0x6d10>  // b.tstop
  40b1f8:	mov	w0, #0x3                   	// #3
  40b1fc:	mov	w3, #0x1d1                 	// #465
  40b200:	b	40b220 <ascii_strlower_n@plt+0x6e18>
  40b204:	mov	w20, w0
  40b208:	mov	w0, wzr
  40b20c:	bl	4039a8 <log_get_max_level_realm@plt>
  40b210:	cmp	w0, #0x3
  40b214:	b.lt	40b118 <ascii_strlower_n@plt+0x6d10>  // b.tstop
  40b218:	mov	w0, #0x3                   	// #3
  40b21c:	mov	w3, #0x1d5                 	// #469
  40b220:	adrp	x5, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40b224:	mov	w1, w20
  40b228:	mov	x2, x24
  40b22c:	mov	x4, x27
  40b230:	add	x5, x5, #0x998
  40b234:	bl	4039b8 <log_internal_realm@plt>
  40b238:	mov	w21, w0
  40b23c:	mov	w8, wzr
  40b240:	tbnz	wzr, #0, 40b128 <ascii_strlower_n@plt+0x6d20>
  40b244:	b	40b59c <ascii_strlower_n@plt+0x7194>
  40b248:	str	w26, [sp, #28]
  40b24c:	mov	w26, w25
  40b250:	mov	x25, x24
  40b254:	mov	x24, x27
  40b258:	ldp	x27, x20, [sp, #32]
  40b25c:	ldr	w28, [sp, #52]
  40b260:	sub	x0, x29, #0x10
  40b264:	mov	w3, #0xffff                	// #65535
  40b268:	mov	w1, wzr
  40b26c:	mov	x2, xzr
  40b270:	stp	xzr, xzr, [x29, #-16]
  40b274:	bl	40d7ac <ascii_strlower_n@plt+0x93a4>
  40b278:	tbnz	w0, #31, 40b304 <ascii_strlower_n@plt+0x6efc>
  40b27c:	ldur	x0, [x29, #-16]
  40b280:	mov	x1, x20
  40b284:	mov	x2, x27
  40b288:	mov	x3, xzr
  40b28c:	ldrb	w8, [x0, #160]
  40b290:	orr	w8, w8, #0x4
  40b294:	strb	w8, [x0, #160]
  40b298:	bl	40df4c <ascii_strlower_n@plt+0x9b44>
  40b29c:	tbnz	w0, #31, 40b30c <ascii_strlower_n@plt+0x6f04>
  40b2a0:	ldur	x0, [x29, #-16]
  40b2a4:	sub	x1, x29, #0x8
  40b2a8:	mov	x2, xzr
  40b2ac:	mov	x3, xzr
  40b2b0:	bl	414230 <ascii_strlower_n@plt+0xfe28>
  40b2b4:	mov	x27, x24
  40b2b8:	tbnz	w0, #31, 40b380 <ascii_strlower_n@plt+0x6f78>
  40b2bc:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  40b2c0:	ldr	w8, [x8, #56]
  40b2c4:	mov	x20, x25
  40b2c8:	cmp	w8, #0x1
  40b2cc:	b.ne	40b3bc <ascii_strlower_n@plt+0x6fb4>  // b.any
  40b2d0:	ldur	x0, [x29, #-8]
  40b2d4:	sub	x1, x29, #0x18
  40b2d8:	bl	418bd4 <ascii_strlower_n@plt+0x147cc>
  40b2dc:	mov	x28, x0
  40b2e0:	tbnz	x0, #63, 40b408 <ascii_strlower_n@plt+0x7000>
  40b2e4:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  40b2e8:	ldur	x0, [x29, #-24]
  40b2ec:	ldr	x3, [x8, #176]
  40b2f0:	mov	w1, #0x1                   	// #1
  40b2f4:	mov	x2, x28
  40b2f8:	bl	403f78 <fwrite@plt>
  40b2fc:	mov	w28, wzr
  40b300:	b	40b32c <ascii_strlower_n@plt+0x6f24>
  40b304:	mov	w2, #0x175                 	// #373
  40b308:	b	40b310 <ascii_strlower_n@plt+0x6f08>
  40b30c:	mov	w2, #0x17b                 	// #379
  40b310:	adrp	x3, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40b314:	mov	w0, wzr
  40b318:	mov	x1, x25
  40b31c:	add	x3, x3, #0xb10
  40b320:	bl	403a28 <log_oom_internal@plt>
  40b324:	mov	w28, w0
  40b328:	mov	x27, x24
  40b32c:	ldur	x0, [x29, #-16]
  40b330:	cbz	x0, 40b338 <ascii_strlower_n@plt+0x6f30>
  40b334:	bl	40dbdc <ascii_strlower_n@plt+0x97d4>
  40b338:	ldur	x0, [x29, #-8]
  40b33c:	mov	x24, x25
  40b340:	cbz	x0, 40b348 <ascii_strlower_n@plt+0x6f40>
  40b344:	bl	417208 <ascii_strlower_n@plt+0x12e00>
  40b348:	mov	w25, w26
  40b34c:	ldr	w26, [sp, #28]
  40b350:	tbnz	w28, #31, 40b370 <ascii_strlower_n@plt+0x6f68>
  40b354:	ldrh	w0, [sp, #56]
  40b358:	bl	41d8c0 <ascii_strlower_n@plt+0x194b8>
  40b35c:	orr	w25, w25, w0
  40b360:	add	w26, w26, #0x1
  40b364:	mov	w8, #0x1                   	// #1
  40b368:	tbnz	w8, #0, 40b128 <ascii_strlower_n@plt+0x6d20>
  40b36c:	b	40b59c <ascii_strlower_n@plt+0x7194>
  40b370:	mov	w21, w28
  40b374:	mov	w8, wzr
  40b378:	tbnz	wzr, #0, 40b128 <ascii_strlower_n@plt+0x6d20>
  40b37c:	b	40b59c <ascii_strlower_n@plt+0x7194>
  40b380:	mov	w20, w0
  40b384:	mov	w0, wzr
  40b388:	bl	4039a8 <log_get_max_level_realm@plt>
  40b38c:	cmp	w0, #0x3
  40b390:	b.lt	40b3f8 <ascii_strlower_n@plt+0x6ff0>  // b.tstop
  40b394:	adrp	x4, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40b398:	adrp	x5, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40b39c:	mov	w0, #0x3                   	// #3
  40b3a0:	mov	w3, #0x17f                 	// #383
  40b3a4:	mov	w1, w20
  40b3a8:	mov	x2, x25
  40b3ac:	add	x4, x4, #0xb10
  40b3b0:	add	x5, x5, #0xb21
  40b3b4:	bl	4039b8 <log_internal_realm@plt>
  40b3b8:	b	40b454 <ascii_strlower_n@plt+0x704c>
  40b3bc:	ldur	x0, [x29, #-8]
  40b3c0:	bl	417ee4 <ascii_strlower_n@plt+0x13adc>
  40b3c4:	cbz	x0, 40b440 <ascii_strlower_n@plt+0x7038>
  40b3c8:	mov	x1, x0
  40b3cc:	adrp	x0, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40b3d0:	add	x0, x0, #0xb4b
  40b3d4:	bl	403a58 <printf@plt>
  40b3d8:	mov	w1, w28
  40b3dc:	bl	40be0c <ascii_strlower_n@plt+0x7a04>
  40b3e0:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  40b3e4:	ldr	x1, [x8, #176]
  40b3e8:	mov	w0, #0xa                   	// #10
  40b3ec:	bl	403d38 <fputc@plt>
  40b3f0:	mov	w28, wzr
  40b3f4:	b	40b32c <ascii_strlower_n@plt+0x6f24>
  40b3f8:	mov	w8, wzr
  40b3fc:	neg	w9, w20
  40b400:	sub	w28, w8, w9, uxtb
  40b404:	b	40b32c <ascii_strlower_n@plt+0x6f24>
  40b408:	mov	w0, wzr
  40b40c:	bl	4039a8 <log_get_max_level_realm@plt>
  40b410:	cmp	w0, #0x3
  40b414:	b.lt	40b45c <ascii_strlower_n@plt+0x7054>  // b.tstop
  40b418:	adrp	x4, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40b41c:	adrp	x5, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40b420:	mov	w0, #0x3                   	// #3
  40b424:	mov	w3, #0x187                 	// #391
  40b428:	mov	w1, w28
  40b42c:	mov	x2, x20
  40b430:	add	x4, x4, #0xb10
  40b434:	add	x5, x5, #0xb38
  40b438:	bl	4039b8 <log_internal_realm@plt>
  40b43c:	b	40b454 <ascii_strlower_n@plt+0x704c>
  40b440:	adrp	x3, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40b444:	mov	w2, #0x18f                 	// #399
  40b448:	mov	x1, x20
  40b44c:	add	x3, x3, #0xb10
  40b450:	bl	403a28 <log_oom_internal@plt>
  40b454:	mov	w28, w0
  40b458:	b	40b32c <ascii_strlower_n@plt+0x6f24>
  40b45c:	cmp	w28, #0x0
  40b460:	mov	w8, wzr
  40b464:	cneg	w9, w28, mi  // mi = first
  40b468:	sub	w28, w8, w9, uxtb
  40b46c:	b	40b32c <ascii_strlower_n@plt+0x6f24>
  40b470:	mov	w23, w0
  40b474:	mov	w0, wzr
  40b478:	bl	4039a8 <log_get_max_level_realm@plt>
  40b47c:	cmp	w0, #0x3
  40b480:	b.lt	40b4e8 <ascii_strlower_n@plt+0x70e0>  // b.tstop
  40b484:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  40b488:	adrp	x4, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40b48c:	adrp	x5, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40b490:	add	x2, x2, #0x717
  40b494:	add	x4, x4, #0x8ea
  40b498:	add	x5, x5, #0x94d
  40b49c:	mov	w0, #0x3                   	// #3
  40b4a0:	mov	w3, #0x1ae                 	// #430
  40b4a4:	mov	w1, w23
  40b4a8:	b	40b594 <ascii_strlower_n@plt+0x718c>
  40b4ac:	mov	w21, w0
  40b4b0:	mov	w0, wzr
  40b4b4:	bl	4039a8 <log_get_max_level_realm@plt>
  40b4b8:	cmp	w0, #0x3
  40b4bc:	b.lt	40b54c <ascii_strlower_n@plt+0x7144>  // b.tstop
  40b4c0:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  40b4c4:	adrp	x4, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40b4c8:	adrp	x5, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40b4cc:	add	x2, x2, #0x717
  40b4d0:	add	x4, x4, #0x8ea
  40b4d4:	add	x5, x5, #0x94d
  40b4d8:	mov	w0, #0x3                   	// #3
  40b4dc:	mov	w3, #0x1b2                 	// #434
  40b4e0:	mov	w1, w21
  40b4e4:	b	40b594 <ascii_strlower_n@plt+0x718c>
  40b4e8:	mov	w8, wzr
  40b4ec:	neg	w9, w23
  40b4f0:	sub	w21, w8, w9, uxtb
  40b4f4:	b	40b59c <ascii_strlower_n@plt+0x7194>
  40b4f8:	mov	w21, w0
  40b4fc:	mov	w0, wzr
  40b500:	bl	4039a8 <log_get_max_level_realm@plt>
  40b504:	cmp	w0, #0x3
  40b508:	b.lt	40b59c <ascii_strlower_n@plt+0x7194>  // b.tstop
  40b50c:	add	x0, sp, #0x40
  40b510:	mov	w1, w21
  40b514:	bl	403d78 <bus_error_message@plt>
  40b518:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  40b51c:	adrp	x4, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40b520:	adrp	x5, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40b524:	mov	x7, x0
  40b528:	add	x2, x2, #0x717
  40b52c:	add	x4, x4, #0x8ea
  40b530:	add	x5, x5, #0x974
  40b534:	mov	w0, #0x3                   	// #3
  40b538:	mov	w3, #0x1b9                 	// #441
  40b53c:	mov	w1, wzr
  40b540:	mov	x6, x19
  40b544:	bl	4039b8 <log_internal_realm@plt>
  40b548:	b	40b59c <ascii_strlower_n@plt+0x7194>
  40b54c:	mov	w8, wzr
  40b550:	neg	w9, w21
  40b554:	sub	w21, w8, w9, uxtb
  40b558:	b	40b59c <ascii_strlower_n@plt+0x7194>
  40b55c:	mov	w20, w0
  40b560:	mov	w0, wzr
  40b564:	bl	4039a8 <log_get_max_level_realm@plt>
  40b568:	cmp	w0, #0x3
  40b56c:	b.lt	40b748 <ascii_strlower_n@plt+0x7340>  // b.tstop
  40b570:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  40b574:	adrp	x4, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40b578:	adrp	x5, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40b57c:	add	x2, x2, #0x717
  40b580:	add	x4, x4, #0x8ea
  40b584:	add	x5, x5, #0x998
  40b588:	mov	w0, #0x3                   	// #3
  40b58c:	mov	w3, #0x1c1                 	// #449
  40b590:	mov	w1, w20
  40b594:	bl	4039b8 <log_internal_realm@plt>
  40b598:	mov	w21, w0
  40b59c:	add	x0, sp, #0x40
  40b5a0:	bl	403d68 <sd_bus_error_free@plt>
  40b5a4:	ldur	x0, [x29, #-40]
  40b5a8:	cbz	x0, 40b5b0 <ascii_strlower_n@plt+0x71a8>
  40b5ac:	bl	403d88 <sd_bus_message_unref@plt>
  40b5b0:	ldur	x0, [x29, #-32]
  40b5b4:	cbz	x0, 40b5bc <ascii_strlower_n@plt+0x71b4>
  40b5b8:	bl	403d88 <sd_bus_message_unref@plt>
  40b5bc:	mov	w0, w21
  40b5c0:	ldp	x20, x19, [sp, #208]
  40b5c4:	ldp	x22, x21, [sp, #192]
  40b5c8:	ldp	x24, x23, [sp, #176]
  40b5cc:	ldp	x26, x25, [sp, #160]
  40b5d0:	ldp	x28, x27, [sp, #144]
  40b5d4:	ldp	x29, x30, [sp, #128]
  40b5d8:	add	sp, sp, #0xe0
  40b5dc:	ret
  40b5e0:	mov	w28, w0
  40b5e4:	tbnz	w0, #31, 40b690 <ascii_strlower_n@plt+0x7288>
  40b5e8:	ldur	x0, [x29, #-40]
  40b5ec:	bl	403d18 <sd_bus_message_exit_container@plt>
  40b5f0:	tbnz	w0, #31, 40b6c8 <ascii_strlower_n@plt+0x72c0>
  40b5f4:	ldur	x0, [x29, #-40]
  40b5f8:	adrp	x1, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40b5fc:	add	x1, x1, #0x70
  40b600:	sub	x2, x29, #0x8
  40b604:	bl	403d08 <sd_bus_message_read@plt>
  40b608:	tbnz	w0, #31, 40b710 <ascii_strlower_n@plt+0x7308>
  40b60c:	cbz	w26, 40b758 <ascii_strlower_n@plt+0x7350>
  40b610:	ldur	x0, [x29, #-8]
  40b614:	ldr	x1, [sp, #16]
  40b618:	bl	40bca8 <ascii_strlower_n@plt+0x78a0>
  40b61c:	ldurb	w8, [x29, #-7]
  40b620:	mov	w21, wzr
  40b624:	tbnz	w8, #1, 40b59c <ascii_strlower_n@plt+0x7194>
  40b628:	eor	w8, w25, #0x1
  40b62c:	tbnz	w8, #0, 40b59c <ascii_strlower_n@plt+0x7194>
  40b630:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  40b634:	ldr	x0, [x8, #176]
  40b638:	bl	403f88 <fflush@plt>
  40b63c:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  40b640:	ldr	x19, [x8, #184]
  40b644:	bl	403b78 <colors_enabled@plt>
  40b648:	adrp	x21, 41e000 <ascii_strlower_n@plt+0x19bf8>
  40b64c:	adrp	x8, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40b650:	add	x21, x21, #0x804
  40b654:	add	x8, x8, #0xc7a
  40b658:	tst	w0, #0x1
  40b65c:	csel	x20, x8, x21, ne  // ne = any
  40b660:	bl	403b78 <colors_enabled@plt>
  40b664:	adrp	x8, 41f000 <ascii_strlower_n@plt+0x1abf8>
  40b668:	add	x8, x8, #0x512
  40b66c:	tst	w0, #0x1
  40b670:	adrp	x1, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40b674:	csel	x3, x8, x21, ne  // ne = any
  40b678:	add	x1, x1, #0x9d7
  40b67c:	mov	x0, x19
  40b680:	mov	x2, x20
  40b684:	bl	403f98 <fprintf@plt>
  40b688:	mov	w21, wzr
  40b68c:	b	40b59c <ascii_strlower_n@plt+0x7194>
  40b690:	mov	w0, wzr
  40b694:	bl	4039a8 <log_get_max_level_realm@plt>
  40b698:	cmp	w0, #0x3
  40b69c:	b.lt	40b700 <ascii_strlower_n@plt+0x72f8>  // b.tstop
  40b6a0:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  40b6a4:	adrp	x4, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40b6a8:	adrp	x5, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40b6ac:	add	x2, x2, #0x717
  40b6b0:	add	x4, x4, #0x8ea
  40b6b4:	add	x5, x5, #0x998
  40b6b8:	mov	w0, #0x3                   	// #3
  40b6bc:	mov	w3, #0x1e8                 	// #488
  40b6c0:	mov	w1, w28
  40b6c4:	b	40b594 <ascii_strlower_n@plt+0x718c>
  40b6c8:	mov	w20, w0
  40b6cc:	mov	w0, wzr
  40b6d0:	bl	4039a8 <log_get_max_level_realm@plt>
  40b6d4:	cmp	w0, #0x3
  40b6d8:	b.lt	40b748 <ascii_strlower_n@plt+0x7340>  // b.tstop
  40b6dc:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  40b6e0:	adrp	x4, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40b6e4:	adrp	x5, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40b6e8:	add	x2, x2, #0x717
  40b6ec:	add	x4, x4, #0x8ea
  40b6f0:	add	x5, x5, #0x998
  40b6f4:	mov	w0, #0x3                   	// #3
  40b6f8:	mov	w3, #0x1ec                 	// #492
  40b6fc:	b	40b590 <ascii_strlower_n@plt+0x7188>
  40b700:	mov	w8, wzr
  40b704:	neg	w9, w28
  40b708:	sub	w21, w8, w9, uxtb
  40b70c:	b	40b59c <ascii_strlower_n@plt+0x7194>
  40b710:	mov	w20, w0
  40b714:	mov	w0, wzr
  40b718:	bl	4039a8 <log_get_max_level_realm@plt>
  40b71c:	cmp	w0, #0x3
  40b720:	b.lt	40b748 <ascii_strlower_n@plt+0x7340>  // b.tstop
  40b724:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  40b728:	adrp	x4, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40b72c:	adrp	x5, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40b730:	add	x2, x2, #0x717
  40b734:	add	x4, x4, #0x8ea
  40b738:	add	x5, x5, #0x998
  40b73c:	mov	w0, #0x3                   	// #3
  40b740:	mov	w3, #0x1f0                 	// #496
  40b744:	b	40b590 <ascii_strlower_n@plt+0x7188>
  40b748:	mov	w8, wzr
  40b74c:	neg	w9, w20
  40b750:	sub	w21, w8, w9, uxtb
  40b754:	b	40b59c <ascii_strlower_n@plt+0x7194>
  40b758:	mov	w0, wzr
  40b75c:	bl	4039a8 <log_get_max_level_realm@plt>
  40b760:	cmp	w0, #0x3
  40b764:	b.lt	40b794 <ascii_strlower_n@plt+0x738c>  // b.tstop
  40b768:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  40b76c:	adrp	x4, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40b770:	adrp	x5, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40b774:	add	x2, x2, #0x717
  40b778:	add	x4, x4, #0x8ea
  40b77c:	add	x5, x5, #0x9c2
  40b780:	mov	w0, #0x3                   	// #3
  40b784:	mov	w3, #0x1f4                 	// #500
  40b788:	mov	w1, wzr
  40b78c:	mov	x6, x19
  40b790:	bl	4039b8 <log_internal_realm@plt>
  40b794:	mov	w21, #0xfffffffd            	// #-3
  40b798:	b	40b59c <ascii_strlower_n@plt+0x7194>
  40b79c:	adrp	x1, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40b7a0:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  40b7a4:	adrp	x4, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40b7a8:	add	x1, x1, #0x89f
  40b7ac:	add	x2, x2, #0x717
  40b7b0:	add	x4, x4, #0x8a4
  40b7b4:	mov	w3, #0x1a2                 	// #418
  40b7b8:	mov	w0, wzr
  40b7bc:	bl	403a98 <log_assert_failed_realm@plt>
  40b7c0:	stp	x29, x30, [sp, #-96]!
  40b7c4:	stp	x28, x27, [sp, #16]
  40b7c8:	stp	x26, x25, [sp, #32]
  40b7cc:	stp	x24, x23, [sp, #48]
  40b7d0:	stp	x22, x21, [sp, #64]
  40b7d4:	stp	x20, x19, [sp, #80]
  40b7d8:	mov	x29, sp
  40b7dc:	sub	sp, sp, #0x10
  40b7e0:	cbz	x0, 40bc40 <ascii_strlower_n@plt+0x7838>
  40b7e4:	mov	x20, x1
  40b7e8:	cbz	x1, 40bc60 <ascii_strlower_n@plt+0x7858>
  40b7ec:	adrp	x1, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40b7f0:	mov	x22, x0
  40b7f4:	add	x1, x1, #0x89a
  40b7f8:	mov	w2, #0x4                   	// #4
  40b7fc:	mov	x0, x20
  40b800:	bl	403c78 <strncmp@plt>
  40b804:	cbnz	w0, 40bc84 <ascii_strlower_n@plt+0x787c>
  40b808:	add	x19, x20, #0x4
  40b80c:	ldrb	w8, [x19]
  40b810:	cmp	w8, #0x2f
  40b814:	b.ne	40b880 <ascii_strlower_n@plt+0x7478>  // b.any
  40b818:	ldrb	w8, [x20, #5]
  40b81c:	cmp	w8, #0x2f
  40b820:	b.ne	40bb78 <ascii_strlower_n@plt+0x7770>  // b.any
  40b824:	add	x21, x20, #0x6
  40b828:	mov	w1, #0x2f                  	// #47
  40b82c:	mov	x0, x21
  40b830:	bl	403ab8 <strchr@plt>
  40b834:	cbz	x0, 40bb78 <ascii_strlower_n@plt+0x7770>
  40b838:	mov	x19, x0
  40b83c:	cmp	x0, x21
  40b840:	b.eq	40b87c <ascii_strlower_n@plt+0x7474>  // b.none
  40b844:	mov	w0, wzr
  40b848:	bl	4039a8 <log_get_max_level_realm@plt>
  40b84c:	cmp	w0, #0x4
  40b850:	b.lt	40b87c <ascii_strlower_n@plt+0x7474>  // b.tstop
  40b854:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  40b858:	adrp	x4, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40b85c:	adrp	x5, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40b860:	add	x2, x2, #0x717
  40b864:	add	x4, x4, #0xcc9
  40b868:	add	x5, x5, #0xcd9
  40b86c:	mov	w0, #0x4                   	// #4
  40b870:	mov	w3, #0x221                 	// #545
  40b874:	mov	w1, wzr
  40b878:	bl	4039b8 <log_internal_realm@plt>
  40b87c:	add	x19, x19, #0x1
  40b880:	mov	w1, #0x3f                  	// #63
  40b884:	mov	x0, x19
  40b888:	bl	403ab8 <strchr@plt>
  40b88c:	cbz	x0, 40bbdc <ascii_strlower_n@plt+0x77d4>
  40b890:	mov	x21, x0
  40b894:	sub	x1, x0, x19
  40b898:	mov	x0, x19
  40b89c:	stur	x22, [x29, #-8]
  40b8a0:	bl	403fa8 <strnlen@plt>
  40b8a4:	add	x8, x0, #0x10
  40b8a8:	and	x8, x8, #0xfffffffffffffff0
  40b8ac:	mov	x9, sp
  40b8b0:	mov	x2, x0
  40b8b4:	sub	x0, x9, x8
  40b8b8:	mov	sp, x0
  40b8bc:	mov	x1, x19
  40b8c0:	strb	wzr, [x0, x2]
  40b8c4:	stur	x0, [x29, #-16]
  40b8c8:	bl	403c68 <memcpy@plt>
  40b8cc:	adrp	x24, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40b8d0:	adrp	x28, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40b8d4:	mov	w25, wzr
  40b8d8:	mov	w23, wzr
  40b8dc:	add	x22, x21, #0x1
  40b8e0:	add	x24, x24, #0xd22
  40b8e4:	add	x28, x28, #0xd5a
  40b8e8:	b	40b934 <ascii_strlower_n@plt+0x752c>
  40b8ec:	mov	w1, #0x16                  	// #22
  40b8f0:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  40b8f4:	adrp	x4, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40b8f8:	adrp	x5, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40b8fc:	mov	w0, #0x3                   	// #3
  40b900:	movk	w1, #0x4000, lsl #16
  40b904:	mov	w3, #0x252                 	// #594
  40b908:	add	x2, x2, #0x717
  40b90c:	add	x4, x4, #0xcc9
  40b910:	add	x5, x5, #0xd60
  40b914:	bl	4039b8 <log_internal_realm@plt>
  40b918:	mov	w19, w0
  40b91c:	mov	x21, xzr
  40b920:	mov	w27, #0x1                   	// #1
  40b924:	mov	x0, x21
  40b928:	bl	4039d8 <free@plt>
  40b92c:	cmp	w27, #0xa
  40b930:	b.ne	40bb44 <ascii_strlower_n@plt+0x773c>  // b.any
  40b934:	mov	w2, #0x6                   	// #6
  40b938:	mov	x0, x22
  40b93c:	mov	x1, x24
  40b940:	bl	403fb8 <strncasecmp@plt>
  40b944:	cbz	w0, 40b978 <ascii_strlower_n@plt+0x7570>
  40b948:	mov	w2, #0x5                   	// #5
  40b94c:	mov	x0, x22
  40b950:	mov	x1, x28
  40b954:	bl	403fb8 <strncasecmp@plt>
  40b958:	cbnz	w0, 40bb78 <ascii_strlower_n@plt+0x7770>
  40b95c:	tst	w23, #0xffff
  40b960:	b.eq	40b9c8 <ascii_strlower_n@plt+0x75c0>  // b.none
  40b964:	mov	w0, wzr
  40b968:	bl	4039a8 <log_get_max_level_realm@plt>
  40b96c:	cmp	w0, #0x3
  40b970:	b.ge	40b8ec <ascii_strlower_n@plt+0x74e4>  // b.tcont
  40b974:	b	40b9bc <ascii_strlower_n@plt+0x75b4>
  40b978:	tst	w25, #0xffff
  40b97c:	b.eq	40ba04 <ascii_strlower_n@plt+0x75fc>  // b.none
  40b980:	mov	w0, wzr
  40b984:	bl	4039a8 <log_get_max_level_realm@plt>
  40b988:	cmp	w0, #0x3
  40b98c:	b.lt	40b9bc <ascii_strlower_n@plt+0x75b4>  // b.tstop
  40b990:	mov	w1, #0x16                  	// #22
  40b994:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  40b998:	adrp	x4, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40b99c:	adrp	x5, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40b9a0:	mov	w0, #0x3                   	// #3
  40b9a4:	movk	w1, #0x4000, lsl #16
  40b9a8:	mov	w3, #0x235                 	// #565
  40b9ac:	add	x2, x2, #0x717
  40b9b0:	add	x4, x4, #0xcc9
  40b9b4:	add	x5, x5, #0xd29
  40b9b8:	b	40b914 <ascii_strlower_n@plt+0x750c>
  40b9bc:	mov	x21, xzr
  40b9c0:	mov	w19, #0xffffffea            	// #-22
  40b9c4:	b	40b920 <ascii_strlower_n@plt+0x7518>
  40b9c8:	add	x21, x22, #0x5
  40b9cc:	mov	w1, #0x3b                  	// #59
  40b9d0:	mov	x0, x21
  40b9d4:	bl	403fc8 <strchrnul@plt>
  40b9d8:	mov	x26, x0
  40b9dc:	sub	x1, x0, x21
  40b9e0:	mov	x0, x21
  40b9e4:	bl	403ac8 <strndup@plt>
  40b9e8:	mov	x21, x0
  40b9ec:	cbz	x0, 40ba64 <ascii_strlower_n@plt+0x765c>
  40b9f0:	mov	x0, x21
  40b9f4:	bl	41d520 <ascii_strlower_n@plt+0x19118>
  40b9f8:	tbnz	w0, #31, 40ba80 <ascii_strlower_n@plt+0x7678>
  40b9fc:	mov	w23, w0
  40ba00:	b	40ba3c <ascii_strlower_n@plt+0x7634>
  40ba04:	add	x21, x22, #0x6
  40ba08:	mov	w1, #0x3b                  	// #59
  40ba0c:	mov	x0, x21
  40ba10:	bl	403fc8 <strchrnul@plt>
  40ba14:	mov	x26, x0
  40ba18:	sub	x1, x0, x21
  40ba1c:	mov	x0, x21
  40ba20:	bl	403ac8 <strndup@plt>
  40ba24:	mov	x21, x0
  40ba28:	cbz	x0, 40bacc <ascii_strlower_n@plt+0x76c4>
  40ba2c:	mov	x0, x21
  40ba30:	bl	41d964 <ascii_strlower_n@plt+0x1955c>
  40ba34:	tbnz	w0, #31, 40bae8 <ascii_strlower_n@plt+0x76e0>
  40ba38:	mov	w25, w0
  40ba3c:	ldrb	w8, [x26], #1
  40ba40:	cmp	w8, #0x3b
  40ba44:	mov	w8, #0x9                   	// #9
  40ba48:	cinc	w27, w8, eq  // eq = none
  40ba4c:	csel	x22, x26, x22, eq  // eq = none
  40ba50:	mov	x0, x21
  40ba54:	bl	4039d8 <free@plt>
  40ba58:	cmp	w27, #0xa
  40ba5c:	b.eq	40b934 <ascii_strlower_n@plt+0x752c>  // b.none
  40ba60:	b	40bb44 <ascii_strlower_n@plt+0x773c>
  40ba64:	adrp	x1, 41e000 <ascii_strlower_n@plt+0x19bf8>
  40ba68:	adrp	x3, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40ba6c:	mov	w2, #0x257                 	// #599
  40ba70:	add	x1, x1, #0x717
  40ba74:	add	x3, x3, #0xcc9
  40ba78:	bl	403a28 <log_oom_internal@plt>
  40ba7c:	b	40bac0 <ascii_strlower_n@plt+0x76b8>
  40ba80:	mov	w0, wzr
  40ba84:	bl	4039a8 <log_get_max_level_realm@plt>
  40ba88:	cmp	w0, #0x3
  40ba8c:	b.lt	40bb34 <ascii_strlower_n@plt+0x772c>  // b.tstop
  40ba90:	mov	w1, #0x16                  	// #22
  40ba94:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  40ba98:	adrp	x4, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40ba9c:	adrp	x5, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40baa0:	mov	w0, #0x3                   	// #3
  40baa4:	movk	w1, #0x4000, lsl #16
  40baa8:	mov	w3, #0x25c                 	// #604
  40baac:	add	x2, x2, #0x717
  40bab0:	add	x4, x4, #0xcc9
  40bab4:	add	x5, x5, #0xd7a
  40bab8:	mov	x6, x21
  40babc:	bl	4039b8 <log_internal_realm@plt>
  40bac0:	mov	w19, w0
  40bac4:	mov	w23, wzr
  40bac8:	b	40b920 <ascii_strlower_n@plt+0x7518>
  40bacc:	adrp	x1, 41e000 <ascii_strlower_n@plt+0x19bf8>
  40bad0:	adrp	x3, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40bad4:	mov	w2, #0x23a                 	// #570
  40bad8:	add	x1, x1, #0x717
  40badc:	add	x3, x3, #0xcc9
  40bae0:	bl	403a28 <log_oom_internal@plt>
  40bae4:	b	40bb28 <ascii_strlower_n@plt+0x7720>
  40bae8:	mov	w0, wzr
  40baec:	bl	4039a8 <log_get_max_level_realm@plt>
  40baf0:	cmp	w0, #0x3
  40baf4:	b.lt	40bb3c <ascii_strlower_n@plt+0x7734>  // b.tstop
  40baf8:	mov	w1, #0x16                  	// #22
  40bafc:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  40bb00:	adrp	x4, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40bb04:	adrp	x5, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40bb08:	mov	w0, #0x3                   	// #3
  40bb0c:	movk	w1, #0x4000, lsl #16
  40bb10:	mov	w3, #0x23f                 	// #575
  40bb14:	add	x2, x2, #0x717
  40bb18:	add	x4, x4, #0xcc9
  40bb1c:	add	x5, x5, #0xd44
  40bb20:	mov	x6, x21
  40bb24:	bl	4039b8 <log_internal_realm@plt>
  40bb28:	mov	w19, w0
  40bb2c:	mov	w25, wzr
  40bb30:	b	40b920 <ascii_strlower_n@plt+0x7518>
  40bb34:	mov	w23, wzr
  40bb38:	b	40b9c0 <ascii_strlower_n@plt+0x75b8>
  40bb3c:	mov	w25, wzr
  40bb40:	b	40b9c0 <ascii_strlower_n@plt+0x75b8>
  40bb44:	cmp	w27, #0x8
  40bb48:	b.eq	40bb78 <ascii_strlower_n@plt+0x7770>  // b.none
  40bb4c:	cmp	w27, #0x9
  40bb50:	b.ne	40bc1c <ascii_strlower_n@plt+0x7814>  // b.any
  40bb54:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  40bb58:	ldrh	w8, [x8, #44]
  40bb5c:	and	w9, w25, #0xffff
  40bb60:	cmp	w8, #0x0
  40bb64:	csinc	w8, w8, wzr, ne  // ne = any
  40bb68:	cbnz	w9, 40bb70 <ascii_strlower_n@plt+0x7768>
  40bb6c:	mov	w25, w8
  40bb70:	ldp	x1, x22, [x29, #-16]
  40bb74:	b	40bbf4 <ascii_strlower_n@plt+0x77ec>
  40bb78:	mov	w0, wzr
  40bb7c:	bl	4039a8 <log_get_max_level_realm@plt>
  40bb80:	cmp	w0, #0x3
  40bb84:	b.lt	40bbd4 <ascii_strlower_n@plt+0x77cc>  // b.tstop
  40bb88:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  40bb8c:	adrp	x4, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40bb90:	adrp	x5, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40bb94:	mov	w1, #0x16                  	// #22
  40bb98:	add	x2, x2, #0x717
  40bb9c:	add	x4, x4, #0xcc9
  40bba0:	add	x5, x5, #0xd8f
  40bba4:	mov	w0, #0x3                   	// #3
  40bba8:	movk	w1, #0x4000, lsl #16
  40bbac:	mov	w3, #0x276                 	// #630
  40bbb0:	mov	x6, x20
  40bbb4:	mov	sp, x29
  40bbb8:	ldp	x20, x19, [sp, #80]
  40bbbc:	ldp	x22, x21, [sp, #64]
  40bbc0:	ldp	x24, x23, [sp, #48]
  40bbc4:	ldp	x26, x25, [sp, #32]
  40bbc8:	ldp	x28, x27, [sp, #16]
  40bbcc:	ldp	x29, x30, [sp], #96
  40bbd0:	b	4039b8 <log_internal_realm@plt>
  40bbd4:	mov	w19, #0xffffffea            	// #-22
  40bbd8:	b	40bc1c <ascii_strlower_n@plt+0x7814>
  40bbdc:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  40bbe0:	ldrh	w8, [x8, #44]
  40bbe4:	mov	w23, wzr
  40bbe8:	mov	x1, x19
  40bbec:	cmp	w8, #0x0
  40bbf0:	csinc	w25, w8, wzr, ne  // ne = any
  40bbf4:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  40bbf8:	ldrh	w8, [x8, #40]
  40bbfc:	mov	x0, x22
  40bc00:	mov	w2, w25
  40bc04:	cmp	w8, #0x0
  40bc08:	csinc	w8, w8, wzr, ne  // ne = any
  40bc0c:	tst	w23, #0xffff
  40bc10:	csel	w3, w8, w23, eq  // eq = none
  40bc14:	bl	40af78 <ascii_strlower_n@plt+0x6b70>
  40bc18:	mov	w19, w0
  40bc1c:	mov	w0, w19
  40bc20:	mov	sp, x29
  40bc24:	ldp	x20, x19, [sp, #80]
  40bc28:	ldp	x22, x21, [sp, #64]
  40bc2c:	ldp	x24, x23, [sp, #48]
  40bc30:	ldp	x26, x25, [sp, #32]
  40bc34:	ldp	x28, x27, [sp, #16]
  40bc38:	ldp	x29, x30, [sp], #96
  40bc3c:	ret
  40bc40:	adrp	x1, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40bc44:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  40bc48:	adrp	x4, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40bc4c:	add	x1, x1, #0x104
  40bc50:	add	x2, x2, #0x717
  40bc54:	add	x4, x4, #0xc84
  40bc58:	mov	w3, #0x20e                 	// #526
  40bc5c:	bl	403a98 <log_assert_failed_realm@plt>
  40bc60:	adrp	x1, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40bc64:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  40bc68:	adrp	x4, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40bc6c:	add	x1, x1, #0x89f
  40bc70:	add	x2, x2, #0x717
  40bc74:	add	x4, x4, #0xc84
  40bc78:	mov	w3, #0x20f                 	// #527
  40bc7c:	mov	w0, wzr
  40bc80:	bl	403a98 <log_assert_failed_realm@plt>
  40bc84:	adrp	x1, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40bc88:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  40bc8c:	adrp	x4, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40bc90:	add	x1, x1, #0xcb0
  40bc94:	add	x2, x2, #0x717
  40bc98:	add	x4, x4, #0xc84
  40bc9c:	mov	w3, #0x210                 	// #528
  40bca0:	mov	w0, wzr
  40bca4:	bl	403a98 <log_assert_failed_realm@plt>
  40bca8:	sub	sp, sp, #0x70
  40bcac:	stp	x29, x30, [sp, #48]
  40bcb0:	str	x23, [sp, #64]
  40bcb4:	stp	x22, x21, [sp, #80]
  40bcb8:	stp	x20, x19, [sp, #96]
  40bcbc:	add	x29, sp, #0x30
  40bcc0:	cbz	x0, 40bdd4 <ascii_strlower_n@plt+0x79cc>
  40bcc4:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  40bcc8:	ldrb	w8, [x8]
  40bccc:	cbz	w8, 40bdd4 <ascii_strlower_n@plt+0x79cc>
  40bcd0:	mov	x20, x1
  40bcd4:	mov	x19, x0
  40bcd8:	bl	403b78 <colors_enabled@plt>
  40bcdc:	adrp	x22, 41e000 <ascii_strlower_n@plt+0x19bf8>
  40bce0:	adrp	x21, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40bce4:	add	x22, x22, #0x804
  40bce8:	add	x21, x21, #0xbb5
  40bcec:	tst	w0, #0x1
  40bcf0:	adrp	x0, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40bcf4:	csel	x1, x21, x22, ne  // ne = any
  40bcf8:	add	x0, x0, #0xbc3
  40bcfc:	bl	403a58 <printf@plt>
  40bd00:	adrp	x8, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40bd04:	add	x8, x8, #0x23b
  40bd08:	tst	x19, #0x1
  40bd0c:	adrp	x9, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40bd10:	add	x9, x9, #0x240
  40bd14:	adrp	x10, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40bd18:	csel	x1, x22, x8, eq  // eq = none
  40bd1c:	tst	x19, #0x2
  40bd20:	add	x10, x10, #0x24c
  40bd24:	adrp	x11, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40bd28:	csel	x2, x22, x9, eq  // eq = none
  40bd2c:	tst	x19, #0x4
  40bd30:	add	x11, x11, #0x258
  40bd34:	adrp	x12, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40bd38:	csel	x3, x22, x10, eq  // eq = none
  40bd3c:	tst	x19, #0x8
  40bd40:	add	x12, x12, #0x263
  40bd44:	csel	x4, x22, x11, eq  // eq = none
  40bd48:	tst	x19, #0x10
  40bd4c:	adrp	x0, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40bd50:	csel	x5, x22, x12, eq  // eq = none
  40bd54:	add	x0, x0, #0xbe2
  40bd58:	bl	403a58 <printf@plt>
  40bd5c:	add	x0, sp, #0x8
  40bd60:	mov	w1, #0x26                  	// #38
  40bd64:	mov	w3, #0x64                  	// #100
  40bd68:	mov	x2, x20
  40bd6c:	bl	403fd8 <format_timespan@plt>
  40bd70:	cbz	x0, 40bdec <ascii_strlower_n@plt+0x79e4>
  40bd74:	bl	403b78 <colors_enabled@plt>
  40bd78:	adrp	x23, 41f000 <ascii_strlower_n@plt+0x1abf8>
  40bd7c:	add	x23, x23, #0x512
  40bd80:	tst	w0, #0x1
  40bd84:	csel	x20, x23, x22, ne  // ne = any
  40bd88:	bl	403b78 <colors_enabled@plt>
  40bd8c:	tst	w0, #0x1
  40bd90:	adrp	x8, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40bd94:	adrp	x9, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40bd98:	add	x8, x8, #0x5c5
  40bd9c:	add	x9, x9, #0x5c9
  40bda0:	csel	x21, x21, x22, ne  // ne = any
  40bda4:	tst	x19, #0x200
  40bda8:	csel	x19, x9, x8, eq  // eq = none
  40bdac:	bl	403b78 <colors_enabled@plt>
  40bdb0:	tst	w0, #0x1
  40bdb4:	adrp	x0, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40bdb8:	csel	x5, x23, x22, ne  // ne = any
  40bdbc:	add	x0, x0, #0xc4e
  40bdc0:	add	x1, sp, #0x8
  40bdc4:	mov	x2, x20
  40bdc8:	mov	x3, x21
  40bdcc:	mov	x4, x19
  40bdd0:	bl	403a58 <printf@plt>
  40bdd4:	ldp	x20, x19, [sp, #96]
  40bdd8:	ldp	x22, x21, [sp, #80]
  40bddc:	ldr	x23, [sp, #64]
  40bde0:	ldp	x29, x30, [sp, #48]
  40bde4:	add	sp, sp, #0x70
  40bde8:	ret
  40bdec:	adrp	x1, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40bdf0:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  40bdf4:	adrp	x4, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40bdf8:	add	x1, x1, #0xbf6
  40bdfc:	add	x2, x2, #0x717
  40be00:	add	x4, x4, #0xc2a
  40be04:	mov	w3, #0x87                  	// #135
  40be08:	bl	403a98 <log_assert_failed_realm@plt>
  40be0c:	sub	sp, sp, #0x50
  40be10:	cmp	w1, #0x1
  40be14:	stp	x29, x30, [sp, #32]
  40be18:	str	x21, [sp, #48]
  40be1c:	stp	x20, x19, [sp, #64]
  40be20:	add	x29, sp, #0x20
  40be24:	b.lt	40bee4 <ascii_strlower_n@plt+0x7adc>  // b.tstop
  40be28:	mov	w19, w1
  40be2c:	mov	w20, w0
  40be30:	add	x1, sp, #0xc
  40be34:	mov	w0, w19
  40be38:	mov	w2, wzr
  40be3c:	bl	403e08 <format_ifname_full@plt>
  40be40:	cbz	x0, 40bea8 <ascii_strlower_n@plt+0x7aa0>
  40be44:	mov	w8, #0x3c                  	// #60
  40be48:	sub	w8, w8, w20
  40be4c:	cmp	w20, #0x3c
  40be50:	csel	w19, w8, wzr, lt  // lt = tstop
  40be54:	bl	403b78 <colors_enabled@plt>
  40be58:	adrp	x21, 41e000 <ascii_strlower_n@plt+0x19bf8>
  40be5c:	adrp	x8, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40be60:	add	x21, x21, #0x804
  40be64:	add	x8, x8, #0xbb5
  40be68:	tst	w0, #0x1
  40be6c:	csel	x20, x8, x21, ne  // ne = any
  40be70:	bl	403b78 <colors_enabled@plt>
  40be74:	adrp	x8, 41f000 <ascii_strlower_n@plt+0x1abf8>
  40be78:	add	x8, x8, #0x512
  40be7c:	tst	w0, #0x1
  40be80:	adrp	x0, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40be84:	adrp	x2, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40be88:	csel	x5, x8, x21, ne  // ne = any
  40be8c:	add	x0, x0, #0xba0
  40be90:	add	x2, x2, #0xbb3
  40be94:	add	x4, sp, #0xc
  40be98:	mov	w1, w19
  40be9c:	mov	x3, x20
  40bea0:	bl	403a58 <printf@plt>
  40bea4:	b	40bee4 <ascii_strlower_n@plt+0x7adc>
  40bea8:	bl	4039a8 <log_get_max_level_realm@plt>
  40beac:	cmp	w0, #0x4
  40beb0:	b.lt	40bee4 <ascii_strlower_n@plt+0x7adc>  // b.tstop
  40beb4:	bl	403e58 <__errno_location@plt>
  40beb8:	ldr	w1, [x0]
  40bebc:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  40bec0:	adrp	x4, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40bec4:	adrp	x5, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40bec8:	add	x2, x2, #0x717
  40becc:	add	x4, x4, #0xb4e
  40bed0:	add	x5, x5, #0xb64
  40bed4:	mov	w0, #0x4                   	// #4
  40bed8:	mov	w3, #0x96                  	// #150
  40bedc:	mov	w6, w19
  40bee0:	bl	4039b8 <log_internal_realm@plt>
  40bee4:	ldp	x20, x19, [sp, #64]
  40bee8:	ldr	x21, [sp, #48]
  40beec:	ldp	x29, x30, [sp, #32]
  40bef0:	add	sp, sp, #0x50
  40bef4:	ret
  40bef8:	sub	sp, sp, #0xf0
  40befc:	stp	x29, x30, [sp, #144]
  40bf00:	add	x29, sp, #0x90
  40bf04:	stp	x28, x27, [sp, #160]
  40bf08:	stp	x26, x25, [sp, #176]
  40bf0c:	stp	x24, x23, [sp, #192]
  40bf10:	stp	x22, x21, [sp, #208]
  40bf14:	stp	x20, x19, [sp, #224]
  40bf18:	stp	xzr, xzr, [x29, #-40]
  40bf1c:	stp	xzr, xzr, [x29, #-64]
  40bf20:	stur	xzr, [x29, #-48]
  40bf24:	cbz	x0, 40cc50 <ascii_strlower_n@plt+0x8848>
  40bf28:	mov	x19, x3
  40bf2c:	cbz	x3, 40cc70 <ascii_strlower_n@plt+0x8868>
  40bf30:	mov	x20, x2
  40bf34:	mov	x21, x1
  40bf38:	mov	x22, x0
  40bf3c:	cbz	x1, 40bf50 <ascii_strlower_n@plt+0x7b48>
  40bf40:	ldrb	w8, [x21]
  40bf44:	cbz	w8, 40bf50 <ascii_strlower_n@plt+0x7b48>
  40bf48:	cbnz	x20, 40bf58 <ascii_strlower_n@plt+0x7b50>
  40bf4c:	b	40bfe4 <ascii_strlower_n@plt+0x7bdc>
  40bf50:	mov	x21, xzr
  40bf54:	cbz	x20, 40bfe4 <ascii_strlower_n@plt+0x7bdc>
  40bf58:	ldrb	w8, [x20]
  40bf5c:	cbz	w8, 40bfe4 <ascii_strlower_n@plt+0x7bdc>
  40bf60:	mov	w0, wzr
  40bf64:	cbz	x21, 40bff0 <ascii_strlower_n@plt+0x7be8>
  40bf68:	bl	4039a8 <log_get_max_level_realm@plt>
  40bf6c:	cmp	w0, #0x7
  40bf70:	b.lt	40c0d8 <ascii_strlower_n@plt+0x7cd0>  // b.tstop
  40bf74:	adrp	x23, 440000 <ascii_strlower_n@plt+0x3bbf8>
  40bf78:	add	x23, x23, #0x34
  40bf7c:	ldr	w0, [x23]
  40bf80:	bl	403d48 <af_to_name@plt>
  40bf84:	ldur	x9, [x23, #12]
  40bf88:	adrp	x8, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40bf8c:	add	x8, x8, #0x91c
  40bf90:	cmp	x0, #0x0
  40bf94:	csel	x8, x8, x0, eq  // eq = none
  40bf98:	cbz	x9, 40bfa4 <ascii_strlower_n@plt+0x7b9c>
  40bf9c:	ldrb	w10, [x9]
  40bfa0:	cbnz	w10, 40bfac <ascii_strlower_n@plt+0x7ba4>
  40bfa4:	adrp	x9, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40bfa8:	add	x9, x9, #0x91c
  40bfac:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  40bfb0:	adrp	x4, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40bfb4:	adrp	x5, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40bfb8:	stp	x8, x9, [sp, #8]
  40bfbc:	add	x2, x2, #0x717
  40bfc0:	add	x4, x4, #0xfc5
  40bfc4:	add	x5, x5, #0xfd5
  40bfc8:	mov	w0, #0x7                   	// #7
  40bfcc:	mov	w3, #0x2ac                 	// #684
  40bfd0:	str	x19, [sp]
  40bfd4:	mov	w1, wzr
  40bfd8:	mov	x6, x21
  40bfdc:	mov	x7, x20
  40bfe0:	b	40c0d4 <ascii_strlower_n@plt+0x7ccc>
  40bfe4:	mov	x20, xzr
  40bfe8:	mov	w0, wzr
  40bfec:	cbnz	x21, 40bf68 <ascii_strlower_n@plt+0x7b60>
  40bff0:	bl	4039a8 <log_get_max_level_realm@plt>
  40bff4:	cmp	w0, #0x7
  40bff8:	cbz	x20, 40c06c <ascii_strlower_n@plt+0x7c64>
  40bffc:	b.lt	40c0d8 <ascii_strlower_n@plt+0x7cd0>  // b.tstop
  40c000:	adrp	x23, 440000 <ascii_strlower_n@plt+0x3bbf8>
  40c004:	add	x23, x23, #0x34
  40c008:	ldr	w0, [x23]
  40c00c:	bl	403d48 <af_to_name@plt>
  40c010:	ldur	x9, [x23, #12]
  40c014:	adrp	x8, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40c018:	add	x8, x8, #0x91c
  40c01c:	cmp	x0, #0x0
  40c020:	csel	x8, x8, x0, eq  // eq = none
  40c024:	cbz	x9, 40c030 <ascii_strlower_n@plt+0x7c28>
  40c028:	ldrb	w10, [x9]
  40c02c:	cbnz	w10, 40c038 <ascii_strlower_n@plt+0x7c30>
  40c030:	adrp	x9, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40c034:	add	x9, x9, #0x91c
  40c038:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  40c03c:	adrp	x4, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40c040:	adrp	x5, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40c044:	add	x2, x2, #0x717
  40c048:	add	x4, x4, #0xfc5
  40c04c:	add	x5, x5, #0x18
  40c050:	stp	x8, x9, [sp]
  40c054:	mov	w0, #0x7                   	// #7
  40c058:	mov	w3, #0x2ae                 	// #686
  40c05c:	mov	w1, wzr
  40c060:	mov	x6, x20
  40c064:	mov	x7, x19
  40c068:	b	40c0d4 <ascii_strlower_n@plt+0x7ccc>
  40c06c:	b.lt	40c0d8 <ascii_strlower_n@plt+0x7cd0>  // b.tstop
  40c070:	adrp	x23, 440000 <ascii_strlower_n@plt+0x3bbf8>
  40c074:	add	x23, x23, #0x34
  40c078:	ldr	w0, [x23]
  40c07c:	bl	403d48 <af_to_name@plt>
  40c080:	ldur	x8, [x23, #12]
  40c084:	adrp	x9, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40c088:	add	x9, x9, #0x91c
  40c08c:	cmp	x0, #0x0
  40c090:	csel	x7, x9, x0, eq  // eq = none
  40c094:	cbz	x8, 40c0a0 <ascii_strlower_n@plt+0x7c98>
  40c098:	ldrb	w9, [x8]
  40c09c:	cbnz	w9, 40c0a8 <ascii_strlower_n@plt+0x7ca0>
  40c0a0:	adrp	x8, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40c0a4:	add	x8, x8, #0x91c
  40c0a8:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  40c0ac:	adrp	x4, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40c0b0:	adrp	x5, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40c0b4:	add	x2, x2, #0x717
  40c0b8:	add	x4, x4, #0xfc5
  40c0bc:	add	x5, x5, #0x53
  40c0c0:	mov	w0, #0x7                   	// #7
  40c0c4:	mov	w3, #0x2b0                 	// #688
  40c0c8:	mov	w1, wzr
  40c0cc:	mov	x6, x19
  40c0d0:	str	x8, [sp]
  40c0d4:	bl	4039b8 <log_internal_realm@plt>
  40c0d8:	adrp	x2, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40c0dc:	adrp	x3, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40c0e0:	adrp	x4, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40c0e4:	adrp	x5, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40c0e8:	add	x2, x2, #0x1b6
  40c0ec:	add	x3, x3, #0x661
  40c0f0:	add	x4, x4, #0x91e
  40c0f4:	add	x5, x5, #0x88
  40c0f8:	sub	x1, x29, #0x20
  40c0fc:	mov	x0, x22
  40c100:	bl	403ca8 <sd_bus_message_new_method_call@plt>
  40c104:	tbnz	w0, #31, 40c1b8 <ascii_strlower_n@plt+0x7db0>
  40c108:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  40c10c:	add	x8, x8, #0x30
  40c110:	ldur	x0, [x29, #-32]
  40c114:	ldp	w2, w6, [x8]
  40c118:	ldr	x7, [x8, #32]
  40c11c:	adrp	x1, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40c120:	add	x1, x1, #0x97
  40c124:	mov	x3, x21
  40c128:	mov	x4, x20
  40c12c:	mov	x5, x19
  40c130:	bl	403cb8 <sd_bus_message_append@plt>
  40c134:	tbnz	w0, #31, 40c1f0 <ascii_strlower_n@plt+0x7de8>
  40c138:	mov	w0, #0x1                   	// #1
  40c13c:	bl	403cd8 <now@plt>
  40c140:	ldur	x1, [x29, #-32]
  40c144:	mov	w2, #0xe00                 	// #3584
  40c148:	mov	x23, x0
  40c14c:	sub	x3, x29, #0x40
  40c150:	sub	x4, x29, #0x28
  40c154:	movk	w2, #0x727, lsl #16
  40c158:	mov	x0, x22
  40c15c:	bl	403ce8 <sd_bus_call@plt>
  40c160:	tbnz	w0, #31, 40c240 <ascii_strlower_n@plt+0x7e38>
  40c164:	mov	w0, #0x1                   	// #1
  40c168:	bl	403cd8 <now@plt>
  40c16c:	ldur	x8, [x29, #-40]
  40c170:	adrp	x2, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40c174:	mov	x22, x0
  40c178:	add	x2, x2, #0xb6
  40c17c:	mov	w1, #0x61                  	// #97
  40c180:	mov	x0, x8
  40c184:	bl	403cf8 <sd_bus_message_enter_container@plt>
  40c188:	tbnz	w0, #31, 40c294 <ascii_strlower_n@plt+0x7e8c>
  40c18c:	cbz	x21, 40c2d0 <ascii_strlower_n@plt+0x7ec8>
  40c190:	mov	x0, x21
  40c194:	bl	403d28 <strlen@plt>
  40c198:	add	x24, x0, #0x1
  40c19c:	sub	x8, x22, x23
  40c1a0:	str	x8, [sp, #24]
  40c1a4:	cbz	x20, 40c2e0 <ascii_strlower_n@plt+0x7ed8>
  40c1a8:	mov	x0, x20
  40c1ac:	bl	403d28 <strlen@plt>
  40c1b0:	add	x22, x0, #0x1
  40c1b4:	b	40c2e4 <ascii_strlower_n@plt+0x7edc>
  40c1b8:	mov	w23, w0
  40c1bc:	mov	w0, wzr
  40c1c0:	bl	4039a8 <log_get_max_level_realm@plt>
  40c1c4:	cmp	w0, #0x3
  40c1c8:	b.lt	40c234 <ascii_strlower_n@plt+0x7e2c>  // b.tstop
  40c1cc:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  40c1d0:	adrp	x4, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40c1d4:	adrp	x5, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40c1d8:	add	x2, x2, #0x717
  40c1dc:	add	x4, x4, #0xfc5
  40c1e0:	add	x5, x5, #0x94d
  40c1e4:	mov	w0, #0x3                   	// #3
  40c1e8:	mov	w3, #0x2ba                 	// #698
  40c1ec:	b	40c224 <ascii_strlower_n@plt+0x7e1c>
  40c1f0:	mov	w23, w0
  40c1f4:	mov	w0, wzr
  40c1f8:	bl	4039a8 <log_get_max_level_realm@plt>
  40c1fc:	cmp	w0, #0x3
  40c200:	b.lt	40c234 <ascii_strlower_n@plt+0x7e2c>  // b.tstop
  40c204:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  40c208:	adrp	x4, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40c20c:	adrp	x5, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40c210:	add	x2, x2, #0x717
  40c214:	add	x4, x4, #0xfc5
  40c218:	add	x5, x5, #0x94d
  40c21c:	mov	w0, #0x3                   	// #3
  40c220:	mov	w3, #0x2be                 	// #702
  40c224:	mov	w1, w23
  40c228:	bl	4039b8 <log_internal_realm@plt>
  40c22c:	mov	w24, w0
  40c230:	b	40cbe8 <ascii_strlower_n@plt+0x87e0>
  40c234:	mov	w8, wzr
  40c238:	neg	w9, w23
  40c23c:	b	40cbe4 <ascii_strlower_n@plt+0x87dc>
  40c240:	mov	w22, w0
  40c244:	mov	w0, wzr
  40c248:	bl	4039a8 <log_get_max_level_realm@plt>
  40c24c:	cmp	w0, #0x3
  40c250:	b.lt	40cbdc <ascii_strlower_n@plt+0x87d4>  // b.tstop
  40c254:	sub	x0, x29, #0x40
  40c258:	mov	w1, w22
  40c25c:	bl	403d78 <bus_error_message@plt>
  40c260:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  40c264:	adrp	x4, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40c268:	adrp	x5, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40c26c:	mov	x6, x0
  40c270:	add	x2, x2, #0x717
  40c274:	add	x4, x4, #0xfc5
  40c278:	add	x5, x5, #0x9e
  40c27c:	mov	w0, #0x3                   	// #3
  40c280:	mov	w3, #0x2c4                 	// #708
  40c284:	mov	w1, w22
  40c288:	bl	4039b8 <log_internal_realm@plt>
  40c28c:	mov	w24, w0
  40c290:	b	40cbe8 <ascii_strlower_n@plt+0x87e0>
  40c294:	mov	w24, w0
  40c298:	mov	w0, wzr
  40c29c:	bl	4039a8 <log_get_max_level_realm@plt>
  40c2a0:	cmp	w0, #0x3
  40c2a4:	b.lt	40cb58 <ascii_strlower_n@plt+0x8750>  // b.tstop
  40c2a8:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  40c2ac:	adrp	x4, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40c2b0:	adrp	x5, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40c2b4:	add	x2, x2, #0x717
  40c2b8:	add	x4, x4, #0xfc5
  40c2bc:	add	x5, x5, #0x998
  40c2c0:	mov	w0, #0x3                   	// #3
  40c2c4:	mov	w3, #0x2ca                 	// #714
  40c2c8:	mov	w1, w24
  40c2cc:	b	40c228 <ascii_strlower_n@plt+0x7e20>
  40c2d0:	mov	x24, xzr
  40c2d4:	sub	x8, x22, x23
  40c2d8:	str	x8, [sp, #24]
  40c2dc:	cbnz	x20, 40c1a8 <ascii_strlower_n@plt+0x7da0>
  40c2e0:	mov	x22, xzr
  40c2e4:	mov	x0, x19
  40c2e8:	bl	403d28 <strlen@plt>
  40c2ec:	add	w8, w24, w22
  40c2f0:	adrp	x28, 41e000 <ascii_strlower_n@plt+0x19bf8>
  40c2f4:	adrp	x27, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40c2f8:	adrp	x23, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40c2fc:	adrp	x25, 41e000 <ascii_strlower_n@plt+0x19bf8>
  40c300:	add	w8, w8, w0
  40c304:	mov	w26, wzr
  40c308:	add	x28, x28, #0x717
  40c30c:	add	x27, x27, #0xfc5
  40c310:	add	x23, x23, #0x998
  40c314:	add	x25, x25, #0x804
  40c318:	add	w8, w8, #0x2
  40c31c:	str	w8, [sp, #36]
  40c320:	b	40c338 <ascii_strlower_n@plt+0x7f30>
  40c324:	mov	w8, wzr
  40c328:	neg	w9, w22
  40c32c:	sub	w24, w8, w9, uxtb
  40c330:	mov	w8, #0x1                   	// #1
  40c334:	cbnz	w8, 40cbe8 <ascii_strlower_n@plt+0x87e0>
  40c338:	ldur	x0, [x29, #-40]
  40c33c:	adrp	x2, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40c340:	mov	w1, #0x72                  	// #114
  40c344:	add	x2, x2, #0xc5
  40c348:	bl	403cf8 <sd_bus_message_enter_container@plt>
  40c34c:	cmp	w0, #0x1
  40c350:	b.lt	40c8b4 <ascii_strlower_n@plt+0x84ac>  // b.tstop
  40c354:	ldur	x0, [x29, #-40]
  40c358:	adrp	x1, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40c35c:	add	x2, sp, #0x34
  40c360:	add	x3, sp, #0x30
  40c364:	add	x4, sp, #0x2c
  40c368:	sub	x5, x29, #0x8
  40c36c:	add	x1, x1, #0xd2
  40c370:	bl	403d08 <sd_bus_message_read@plt>
  40c374:	tbnz	w0, #31, 40c74c <ascii_strlower_n@plt+0x8344>
  40c378:	adrp	x22, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40c37c:	add	x22, x22, #0xbb3
  40c380:	cbz	x21, 40c3b0 <ascii_strlower_n@plt+0x7fa8>
  40c384:	mov	x0, x21
  40c388:	bl	403d28 <strlen@plt>
  40c38c:	adrp	x8, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40c390:	mov	x1, x0
  40c394:	cmp	w26, #0x0
  40c398:	add	x8, x8, #0xdd
  40c39c:	adrp	x0, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40c3a0:	csel	x2, x21, x25, eq  // eq = none
  40c3a4:	csel	x3, x8, x22, eq  // eq = none
  40c3a8:	add	x0, x0, #0xd7
  40c3ac:	bl	403a58 <printf@plt>
  40c3b0:	cbz	x20, 40c3e0 <ascii_strlower_n@plt+0x7fd8>
  40c3b4:	mov	x0, x20
  40c3b8:	bl	403d28 <strlen@plt>
  40c3bc:	adrp	x8, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40c3c0:	mov	x1, x0
  40c3c4:	cmp	w26, #0x0
  40c3c8:	add	x8, x8, #0xdd
  40c3cc:	adrp	x0, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40c3d0:	csel	x2, x20, x25, eq  // eq = none
  40c3d4:	csel	x3, x8, x22, eq  // eq = none
  40c3d8:	add	x0, x0, #0xd7
  40c3dc:	bl	403a58 <printf@plt>
  40c3e0:	mov	x0, x19
  40c3e4:	bl	403d28 <strlen@plt>
  40c3e8:	ldur	x4, [x29, #-8]
  40c3ec:	ldrh	w5, [sp, #44]
  40c3f0:	ldrh	w6, [sp, #52]
  40c3f4:	ldrh	w7, [sp, #48]
  40c3f8:	adrp	x8, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40c3fc:	mov	x1, x0
  40c400:	cmp	w26, #0x0
  40c404:	add	x8, x8, #0xe35
  40c408:	adrp	x0, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40c40c:	csel	x2, x19, x25, eq  // eq = none
  40c410:	csel	x3, x8, x22, eq  // eq = none
  40c414:	add	x0, x0, #0xdf
  40c418:	bl	403a58 <printf@plt>
  40c41c:	ldur	x0, [x29, #-40]
  40c420:	adrp	x2, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40c424:	mov	w1, #0x61                  	// #97
  40c428:	add	x2, x2, #0x653
  40c42c:	bl	403cf8 <sd_bus_message_enter_container@plt>
  40c430:	tbnz	w0, #31, 40c76c <ascii_strlower_n@plt+0x8364>
  40c434:	ldur	x0, [x29, #-40]
  40c438:	adrp	x2, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40c43c:	mov	w1, #0x72                  	// #114
  40c440:	add	x2, x2, #0x422
  40c444:	bl	403cf8 <sd_bus_message_enter_container@plt>
  40c448:	cmp	w0, #0x1
  40c44c:	b.lt	40c78c <ascii_strlower_n@plt+0x8384>  // b.tstop
  40c450:	adrp	x25, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40c454:	add	x25, x25, #0x422
  40c458:	ldur	x0, [x29, #-40]
  40c45c:	adrp	x1, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40c460:	add	x2, sp, #0x38
  40c464:	add	x3, sp, #0x28
  40c468:	add	x1, x1, #0xe1d
  40c46c:	stur	xzr, [x29, #-24]
  40c470:	bl	403d08 <sd_bus_message_read@plt>
  40c474:	tbnz	w0, #31, 40c538 <ascii_strlower_n@plt+0x8130>
  40c478:	ldur	x0, [x29, #-40]
  40c47c:	add	x2, sp, #0x40
  40c480:	add	x3, sp, #0x48
  40c484:	mov	w1, #0x79                  	// #121
  40c488:	bl	403d58 <sd_bus_message_read_array@plt>
  40c48c:	tbnz	w0, #31, 40c558 <ascii_strlower_n@plt+0x8150>
  40c490:	ldur	x0, [x29, #-40]
  40c494:	bl	403d18 <sd_bus_message_exit_container@plt>
  40c498:	tbnz	w0, #31, 40c578 <ascii_strlower_n@plt+0x8170>
  40c49c:	ldr	w22, [sp, #40]
  40c4a0:	orr	w8, w22, #0x8
  40c4a4:	cmp	w8, #0xa
  40c4a8:	b.ne	40c5c8 <ascii_strlower_n@plt+0x81c0>  // b.any
  40c4ac:	b.ne	40cc2c <ascii_strlower_n@plt+0x8824>  // b.any
  40c4b0:	mov	x25, x20
  40c4b4:	mov	x20, x23
  40c4b8:	mov	w23, w26
  40c4bc:	mov	x26, x19
  40c4c0:	mov	x19, x27
  40c4c4:	mov	x27, x28
  40c4c8:	ldr	x28, [sp, #72]
  40c4cc:	cmp	w22, #0xa
  40c4d0:	mov	w8, #0x4                   	// #4
  40c4d4:	mov	w9, #0x10                  	// #16
  40c4d8:	csel	x8, x9, x8, eq  // eq = none
  40c4dc:	cmp	x28, x8
  40c4e0:	b.ne	40c624 <ascii_strlower_n@plt+0x821c>  // b.any
  40c4e4:	ldr	x1, [sp, #64]
  40c4e8:	ldr	w2, [sp, #56]
  40c4ec:	sub	x3, x29, #0x18
  40c4f0:	mov	w0, w22
  40c4f4:	bl	403c98 <in_addr_ifindex_to_string@plt>
  40c4f8:	tbnz	w0, #31, 40c6ec <ascii_strlower_n@plt+0x82e4>
  40c4fc:	ldur	x3, [x29, #-24]
  40c500:	ldr	w1, [sp, #36]
  40c504:	adrp	x0, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40c508:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  40c50c:	add	x0, x0, #0xd7
  40c510:	add	x2, x2, #0x804
  40c514:	bl	403a58 <printf@plt>
  40c518:	ldr	w1, [sp, #56]
  40c51c:	bl	40be0c <ascii_strlower_n@plt+0x7a04>
  40c520:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  40c524:	ldr	x1, [x8, #176]
  40c528:	mov	w0, #0xa                   	// #10
  40c52c:	bl	403d38 <fputc@plt>
  40c530:	mov	w22, wzr
  40c534:	b	40c69c <ascii_strlower_n@plt+0x8294>
  40c538:	mov	w22, w0
  40c53c:	mov	w0, wzr
  40c540:	bl	4039a8 <log_get_max_level_realm@plt>
  40c544:	cmp	w0, #0x3
  40c548:	b.lt	40c5b4 <ascii_strlower_n@plt+0x81ac>  // b.tstop
  40c54c:	mov	w0, #0x3                   	// #3
  40c550:	mov	w3, #0x2f2                 	// #754
  40c554:	b	40c594 <ascii_strlower_n@plt+0x818c>
  40c558:	mov	w22, w0
  40c55c:	mov	w0, wzr
  40c560:	bl	4039a8 <log_get_max_level_realm@plt>
  40c564:	cmp	w0, #0x3
  40c568:	b.lt	40c5b4 <ascii_strlower_n@plt+0x81ac>  // b.tstop
  40c56c:	mov	w0, #0x3                   	// #3
  40c570:	mov	w3, #0x2f6                 	// #758
  40c574:	b	40c594 <ascii_strlower_n@plt+0x818c>
  40c578:	mov	w22, w0
  40c57c:	mov	w0, wzr
  40c580:	bl	4039a8 <log_get_max_level_realm@plt>
  40c584:	cmp	w0, #0x3
  40c588:	b.lt	40c5b4 <ascii_strlower_n@plt+0x81ac>  // b.tstop
  40c58c:	mov	w0, #0x3                   	// #3
  40c590:	mov	w3, #0x2fa                 	// #762
  40c594:	mov	w1, w22
  40c598:	mov	x2, x28
  40c59c:	mov	x4, x27
  40c5a0:	mov	x5, x23
  40c5a4:	bl	4039b8 <log_internal_realm@plt>
  40c5a8:	mov	w24, w0
  40c5ac:	mov	w22, #0x1                   	// #1
  40c5b0:	b	40c6bc <ascii_strlower_n@plt+0x82b4>
  40c5b4:	mov	w8, wzr
  40c5b8:	neg	w9, w22
  40c5bc:	sub	w24, w8, w9, uxtb
  40c5c0:	mov	w22, #0x1                   	// #1
  40c5c4:	b	40c6bc <ascii_strlower_n@plt+0x82b4>
  40c5c8:	mov	w0, wzr
  40c5cc:	bl	4039a8 <log_get_max_level_realm@plt>
  40c5d0:	cmp	w0, #0x7
  40c5d4:	b.lt	40c68c <ascii_strlower_n@plt+0x8284>  // b.tstop
  40c5d8:	mov	w0, w22
  40c5dc:	bl	403d48 <af_to_name@plt>
  40c5e0:	adrp	x8, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40c5e4:	cmp	x0, #0x0
  40c5e8:	add	x8, x8, #0xee4
  40c5ec:	adrp	x5, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40c5f0:	csel	x8, x8, x0, eq  // eq = none
  40c5f4:	mov	w0, #0x7                   	// #7
  40c5f8:	mov	w3, #0x2fd                 	// #765
  40c5fc:	mov	w1, wzr
  40c600:	mov	x2, x28
  40c604:	mov	x4, x27
  40c608:	add	x5, x5, #0xebd
  40c60c:	mov	x6, x21
  40c610:	mov	w7, w22
  40c614:	str	x8, [sp]
  40c618:	bl	4039b8 <log_internal_realm@plt>
  40c61c:	mov	w22, #0x8                   	// #8
  40c620:	b	40c6bc <ascii_strlower_n@plt+0x82b4>
  40c624:	mov	w0, wzr
  40c628:	bl	4039a8 <log_get_max_level_realm@plt>
  40c62c:	cmp	w0, #0x3
  40c630:	b.lt	40c694 <ascii_strlower_n@plt+0x828c>  // b.tstop
  40c634:	mov	w0, w22
  40c638:	bl	403d48 <af_to_name@plt>
  40c63c:	adrp	x8, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40c640:	cmp	x0, #0x0
  40c644:	add	x8, x8, #0xee4
  40c648:	adrp	x5, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40c64c:	csel	x8, x8, x0, eq  // eq = none
  40c650:	mov	w0, #0x3                   	// #3
  40c654:	mov	w3, #0x302                 	// #770
  40c658:	mov	w1, wzr
  40c65c:	mov	x2, x27
  40c660:	mov	x4, x19
  40c664:	add	x5, x5, #0xeec
  40c668:	mov	x6, x21
  40c66c:	mov	x7, x28
  40c670:	str	x8, [sp]
  40c674:	mov	x27, x19
  40c678:	mov	x28, x2
  40c67c:	bl	4039b8 <log_internal_realm@plt>
  40c680:	mov	w24, #0xffffffea            	// #-22
  40c684:	mov	w22, #0x1                   	// #1
  40c688:	b	40c6a4 <ascii_strlower_n@plt+0x829c>
  40c68c:	mov	w22, #0x8                   	// #8
  40c690:	b	40c6bc <ascii_strlower_n@plt+0x82b4>
  40c694:	mov	w24, #0xffffffea            	// #-22
  40c698:	mov	w22, #0x1                   	// #1
  40c69c:	mov	x28, x27
  40c6a0:	mov	x27, x19
  40c6a4:	mov	x19, x26
  40c6a8:	mov	w26, w23
  40c6ac:	mov	x23, x20
  40c6b0:	mov	x20, x25
  40c6b4:	adrp	x25, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40c6b8:	add	x25, x25, #0x422
  40c6bc:	ldur	x0, [x29, #-24]
  40c6c0:	bl	4039d8 <free@plt>
  40c6c4:	orr	w8, w22, #0x8
  40c6c8:	cmp	w8, #0x8
  40c6cc:	b.ne	40c7f8 <ascii_strlower_n@plt+0x83f0>  // b.any
  40c6d0:	ldur	x0, [x29, #-40]
  40c6d4:	mov	w1, #0x72                  	// #114
  40c6d8:	mov	x2, x25
  40c6dc:	bl	403cf8 <sd_bus_message_enter_container@plt>
  40c6e0:	cmp	w0, #0x0
  40c6e4:	b.gt	40c458 <ascii_strlower_n@plt+0x8050>
  40c6e8:	b	40c808 <ascii_strlower_n@plt+0x8400>
  40c6ec:	mov	w22, w0
  40c6f0:	mov	w0, wzr
  40c6f4:	bl	4039a8 <log_get_max_level_realm@plt>
  40c6f8:	cmp	w0, #0x3
  40c6fc:	mov	x28, x27
  40c700:	b.lt	40c738 <ascii_strlower_n@plt+0x8330>  // b.tstop
  40c704:	adrp	x5, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40c708:	mov	w0, #0x3                   	// #3
  40c70c:	mov	w3, #0x308                 	// #776
  40c710:	mov	w1, w22
  40c714:	mov	x2, x28
  40c718:	mov	x4, x19
  40c71c:	add	x5, x5, #0xf34
  40c720:	mov	x6, x21
  40c724:	mov	x27, x19
  40c728:	bl	4039b8 <log_internal_realm@plt>
  40c72c:	mov	w24, w0
  40c730:	mov	w22, #0x1                   	// #1
  40c734:	b	40c6a4 <ascii_strlower_n@plt+0x829c>
  40c738:	mov	w8, wzr
  40c73c:	neg	w9, w22
  40c740:	sub	w24, w8, w9, uxtb
  40c744:	mov	w22, #0x1                   	// #1
  40c748:	b	40c6a0 <ascii_strlower_n@plt+0x8298>
  40c74c:	mov	w22, w0
  40c750:	mov	w0, wzr
  40c754:	bl	4039a8 <log_get_max_level_realm@plt>
  40c758:	cmp	w0, #0x3
  40c75c:	b.lt	40c324 <ascii_strlower_n@plt+0x7f1c>  // b.tstop
  40c760:	mov	w0, #0x3                   	// #3
  40c764:	mov	w3, #0x2d8                 	// #728
  40c768:	b	40c890 <ascii_strlower_n@plt+0x8488>
  40c76c:	mov	w22, w0
  40c770:	mov	w0, wzr
  40c774:	bl	4039a8 <log_get_max_level_realm@plt>
  40c778:	cmp	w0, #0x3
  40c77c:	b.lt	40c324 <ascii_strlower_n@plt+0x7f1c>  // b.tstop
  40c780:	mov	w0, #0x3                   	// #3
  40c784:	mov	w3, #0x2e7                 	// #743
  40c788:	b	40c890 <ascii_strlower_n@plt+0x8488>
  40c78c:	mov	w22, w0
  40c790:	tbnz	w22, #31, 40c818 <ascii_strlower_n@plt+0x8410>
  40c794:	ldur	x0, [x29, #-40]
  40c798:	bl	403d18 <sd_bus_message_exit_container@plt>
  40c79c:	tbnz	w0, #31, 40c834 <ascii_strlower_n@plt+0x842c>
  40c7a0:	ldur	x0, [x29, #-40]
  40c7a4:	adrp	x1, 41e000 <ascii_strlower_n@plt+0x19bf8>
  40c7a8:	sub	x2, x29, #0x10
  40c7ac:	add	x1, x1, #0x712
  40c7b0:	bl	403d08 <sd_bus_message_read@plt>
  40c7b4:	tbnz	w0, #31, 40c854 <ascii_strlower_n@plt+0x844c>
  40c7b8:	ldp	x22, x0, [x29, #-16]
  40c7bc:	mov	x1, x22
  40c7c0:	bl	403b38 <strcmp@plt>
  40c7c4:	cbz	w0, 40c7e0 <ascii_strlower_n@plt+0x83d8>
  40c7c8:	ldr	w1, [sp, #36]
  40c7cc:	adrp	x0, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40c7d0:	add	x0, x0, #0x105
  40c7d4:	mov	x2, x25
  40c7d8:	mov	x3, x22
  40c7dc:	bl	403a58 <printf@plt>
  40c7e0:	ldur	x0, [x29, #-40]
  40c7e4:	bl	403d18 <sd_bus_message_exit_container@plt>
  40c7e8:	tbnz	w0, #31, 40c874 <ascii_strlower_n@plt+0x846c>
  40c7ec:	add	w26, w26, #0x1
  40c7f0:	cbz	wzr, 40c338 <ascii_strlower_n@plt+0x7f30>
  40c7f4:	b	40cbe8 <ascii_strlower_n@plt+0x87e0>
  40c7f8:	adrp	x25, 41e000 <ascii_strlower_n@plt+0x19bf8>
  40c7fc:	add	x25, x25, #0x804
  40c800:	cbz	w22, 40c338 <ascii_strlower_n@plt+0x7f30>
  40c804:	b	40cbe8 <ascii_strlower_n@plt+0x87e0>
  40c808:	adrp	x25, 41e000 <ascii_strlower_n@plt+0x19bf8>
  40c80c:	mov	w22, w0
  40c810:	add	x25, x25, #0x804
  40c814:	tbz	w22, #31, 40c794 <ascii_strlower_n@plt+0x838c>
  40c818:	mov	w0, wzr
  40c81c:	bl	4039a8 <log_get_max_level_realm@plt>
  40c820:	cmp	w0, #0x3
  40c824:	b.lt	40c324 <ascii_strlower_n@plt+0x7f1c>  // b.tstop
  40c828:	mov	w0, #0x3                   	// #3
  40c82c:	mov	w3, #0x30f                 	// #783
  40c830:	b	40c890 <ascii_strlower_n@plt+0x8488>
  40c834:	mov	w22, w0
  40c838:	mov	w0, wzr
  40c83c:	bl	4039a8 <log_get_max_level_realm@plt>
  40c840:	cmp	w0, #0x3
  40c844:	b.lt	40c324 <ascii_strlower_n@plt+0x7f1c>  // b.tstop
  40c848:	mov	w0, #0x3                   	// #3
  40c84c:	mov	w3, #0x313                 	// #787
  40c850:	b	40c890 <ascii_strlower_n@plt+0x8488>
  40c854:	mov	w22, w0
  40c858:	mov	w0, wzr
  40c85c:	bl	4039a8 <log_get_max_level_realm@plt>
  40c860:	cmp	w0, #0x3
  40c864:	b.lt	40c324 <ascii_strlower_n@plt+0x7f1c>  // b.tstop
  40c868:	mov	w0, #0x3                   	// #3
  40c86c:	mov	w3, #0x317                 	// #791
  40c870:	b	40c890 <ascii_strlower_n@plt+0x8488>
  40c874:	mov	w22, w0
  40c878:	mov	w0, wzr
  40c87c:	bl	4039a8 <log_get_max_level_realm@plt>
  40c880:	cmp	w0, #0x3
  40c884:	b.lt	40c324 <ascii_strlower_n@plt+0x7f1c>  // b.tstop
  40c888:	mov	w0, #0x3                   	// #3
  40c88c:	mov	w3, #0x31e                 	// #798
  40c890:	mov	w1, w22
  40c894:	mov	x2, x28
  40c898:	mov	x4, x27
  40c89c:	mov	x5, x23
  40c8a0:	bl	4039b8 <log_internal_realm@plt>
  40c8a4:	mov	w24, w0
  40c8a8:	mov	w8, #0x1                   	// #1
  40c8ac:	cbz	w8, 40c338 <ascii_strlower_n@plt+0x7f30>
  40c8b0:	b	40cbe8 <ascii_strlower_n@plt+0x87e0>
  40c8b4:	mov	w22, w0
  40c8b8:	tbnz	w0, #31, 40ca50 <ascii_strlower_n@plt+0x8648>
  40c8bc:	ldur	x0, [x29, #-40]
  40c8c0:	bl	403d18 <sd_bus_message_exit_container@plt>
  40c8c4:	tbnz	w0, #31, 40ca88 <ascii_strlower_n@plt+0x8680>
  40c8c8:	ldur	x0, [x29, #-40]
  40c8cc:	adrp	x2, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40c8d0:	add	x2, x2, #0x10e
  40c8d4:	mov	w1, #0x61                  	// #97
  40c8d8:	bl	403cf8 <sd_bus_message_enter_container@plt>
  40c8dc:	tbnz	w0, #31, 40cac4 <ascii_strlower_n@plt+0x86bc>
  40c8e0:	ldur	x0, [x29, #-40]
  40c8e4:	add	x2, sp, #0x38
  40c8e8:	add	x3, sp, #0x48
  40c8ec:	mov	w1, #0x79                  	// #121
  40c8f0:	bl	403d58 <sd_bus_message_read_array@plt>
  40c8f4:	cmp	w0, #0x1
  40c8f8:	b.lt	40c958 <ascii_strlower_n@plt+0x8550>  // b.tstop
  40c8fc:	adrp	x22, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40c900:	adrp	x23, 41e000 <ascii_strlower_n@plt+0x19bf8>
  40c904:	add	x22, x22, #0x111
  40c908:	add	x23, x23, #0x804
  40c90c:	ldr	x0, [sp, #56]
  40c910:	ldr	x1, [sp, #72]
  40c914:	bl	403fe8 <cescape_length@plt>
  40c918:	cbz	x0, 40cb00 <ascii_strlower_n@plt+0x86f8>
  40c91c:	ldr	w1, [sp, #36]
  40c920:	mov	x24, x0
  40c924:	mov	x0, x22
  40c928:	mov	x2, x23
  40c92c:	mov	x3, x24
  40c930:	bl	403a58 <printf@plt>
  40c934:	mov	x0, x24
  40c938:	bl	4039d8 <free@plt>
  40c93c:	ldur	x0, [x29, #-40]
  40c940:	add	x2, sp, #0x38
  40c944:	add	x3, sp, #0x48
  40c948:	mov	w1, #0x79                  	// #121
  40c94c:	bl	403d58 <sd_bus_message_read_array@plt>
  40c950:	cmp	w0, #0x0
  40c954:	b.gt	40c90c <ascii_strlower_n@plt+0x8504>
  40c958:	mov	w24, w0
  40c95c:	tbnz	w0, #31, 40cb20 <ascii_strlower_n@plt+0x8718>
  40c960:	ldur	x0, [x29, #-40]
  40c964:	bl	403d18 <sd_bus_message_exit_container@plt>
  40c968:	tbnz	w0, #31, 40cb64 <ascii_strlower_n@plt+0x875c>
  40c96c:	ldur	x0, [x29, #-40]
  40c970:	adrp	x1, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40c974:	add	x1, x1, #0x118
  40c978:	sub	x2, x29, #0x8
  40c97c:	sub	x3, x29, #0x10
  40c980:	sub	x4, x29, #0x18
  40c984:	add	x5, sp, #0x40
  40c988:	bl	403d08 <sd_bus_message_read@plt>
  40c98c:	tbnz	w0, #31, 40cba0 <ascii_strlower_n@plt+0x8798>
  40c990:	ldur	x1, [x29, #-8]
  40c994:	cbz	x1, 40c9a0 <ascii_strlower_n@plt+0x8598>
  40c998:	ldrb	w8, [x1]
  40c99c:	cbnz	w8, 40c9a4 <ascii_strlower_n@plt+0x859c>
  40c9a0:	mov	x1, xzr
  40c9a4:	ldur	x22, [x29, #-16]
  40c9a8:	stur	x1, [x29, #-8]
  40c9ac:	cbz	x22, 40c9b8 <ascii_strlower_n@plt+0x85b0>
  40c9b0:	ldrb	w8, [x22]
  40c9b4:	cbnz	w8, 40c9bc <ascii_strlower_n@plt+0x85b4>
  40c9b8:	mov	x22, xzr
  40c9bc:	mov	x0, x21
  40c9c0:	stur	x22, [x29, #-16]
  40c9c4:	bl	403ff8 <strcmp_ptr@plt>
  40c9c8:	cbnz	w0, 40c9ec <ascii_strlower_n@plt+0x85e4>
  40c9cc:	mov	x0, x20
  40c9d0:	mov	x1, x22
  40c9d4:	bl	403ff8 <strcmp_ptr@plt>
  40c9d8:	cbnz	w0, 40c9ec <ascii_strlower_n@plt+0x85e4>
  40c9dc:	ldur	x1, [x29, #-24]
  40c9e0:	mov	x0, x19
  40c9e4:	bl	403ff8 <strcmp_ptr@plt>
  40c9e8:	cbz	w0, 40ca3c <ascii_strlower_n@plt+0x8634>
  40c9ec:	ldr	w1, [sp, #36]
  40c9f0:	adrp	x0, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40c9f4:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  40c9f8:	add	x0, x0, #0x11d
  40c9fc:	add	x2, x2, #0x804
  40ca00:	bl	403a58 <printf@plt>
  40ca04:	ldur	x1, [x29, #-8]
  40ca08:	cbz	x1, 40ca18 <ascii_strlower_n@plt+0x8610>
  40ca0c:	adrp	x0, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40ca10:	add	x0, x0, #0x122
  40ca14:	bl	403a58 <printf@plt>
  40ca18:	ldur	x1, [x29, #-16]
  40ca1c:	cbz	x1, 40ca2c <ascii_strlower_n@plt+0x8624>
  40ca20:	adrp	x0, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40ca24:	add	x0, x0, #0x122
  40ca28:	bl	403a58 <printf@plt>
  40ca2c:	ldur	x1, [x29, #-24]
  40ca30:	adrp	x0, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40ca34:	add	x0, x0, #0x126
  40ca38:	bl	403a58 <printf@plt>
  40ca3c:	ldr	x0, [sp, #64]
  40ca40:	ldr	x1, [sp, #24]
  40ca44:	bl	40bca8 <ascii_strlower_n@plt+0x78a0>
  40ca48:	mov	w24, wzr
  40ca4c:	b	40cbe8 <ascii_strlower_n@plt+0x87e0>
  40ca50:	mov	w0, wzr
  40ca54:	bl	4039a8 <log_get_max_level_realm@plt>
  40ca58:	cmp	w0, #0x3
  40ca5c:	b.lt	40cbdc <ascii_strlower_n@plt+0x87d4>  // b.tstop
  40ca60:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  40ca64:	adrp	x4, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40ca68:	adrp	x5, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40ca6c:	add	x2, x2, #0x717
  40ca70:	add	x4, x4, #0xfc5
  40ca74:	add	x5, x5, #0x998
  40ca78:	mov	w0, #0x3                   	// #3
  40ca7c:	mov	w3, #0x323                 	// #803
  40ca80:	mov	w1, w22
  40ca84:	b	40c228 <ascii_strlower_n@plt+0x7e20>
  40ca88:	mov	w22, w0
  40ca8c:	mov	w0, wzr
  40ca90:	bl	4039a8 <log_get_max_level_realm@plt>
  40ca94:	cmp	w0, #0x3
  40ca98:	b.lt	40cbdc <ascii_strlower_n@plt+0x87d4>  // b.tstop
  40ca9c:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  40caa0:	adrp	x4, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40caa4:	adrp	x5, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40caa8:	add	x2, x2, #0x717
  40caac:	add	x4, x4, #0xfc5
  40cab0:	add	x5, x5, #0x998
  40cab4:	mov	w0, #0x3                   	// #3
  40cab8:	mov	w3, #0x327                 	// #807
  40cabc:	mov	w1, w22
  40cac0:	b	40c228 <ascii_strlower_n@plt+0x7e20>
  40cac4:	mov	w22, w0
  40cac8:	mov	w0, wzr
  40cacc:	bl	4039a8 <log_get_max_level_realm@plt>
  40cad0:	cmp	w0, #0x3
  40cad4:	b.lt	40cbdc <ascii_strlower_n@plt+0x87d4>  // b.tstop
  40cad8:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  40cadc:	adrp	x4, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40cae0:	adrp	x5, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40cae4:	add	x2, x2, #0x717
  40cae8:	add	x4, x4, #0xfc5
  40caec:	add	x5, x5, #0x998
  40caf0:	mov	w0, #0x3                   	// #3
  40caf4:	mov	w3, #0x32b                 	// #811
  40caf8:	mov	w1, w22
  40cafc:	b	40c228 <ascii_strlower_n@plt+0x7e20>
  40cb00:	adrp	x1, 41e000 <ascii_strlower_n@plt+0x19bf8>
  40cb04:	adrp	x3, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40cb08:	add	x1, x1, #0x717
  40cb0c:	add	x3, x3, #0xfc5
  40cb10:	mov	w2, #0x332                 	// #818
  40cb14:	bl	403a28 <log_oom_internal@plt>
  40cb18:	mov	w24, w0
  40cb1c:	b	40cbe8 <ascii_strlower_n@plt+0x87e0>
  40cb20:	mov	w0, wzr
  40cb24:	bl	4039a8 <log_get_max_level_realm@plt>
  40cb28:	cmp	w0, #0x3
  40cb2c:	b.lt	40cb58 <ascii_strlower_n@plt+0x8750>  // b.tstop
  40cb30:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  40cb34:	adrp	x4, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40cb38:	adrp	x5, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40cb3c:	add	x2, x2, #0x717
  40cb40:	add	x4, x4, #0xfc5
  40cb44:	add	x5, x5, #0x998
  40cb48:	mov	w0, #0x3                   	// #3
  40cb4c:	mov	w3, #0x337                 	// #823
  40cb50:	mov	w1, w24
  40cb54:	b	40c228 <ascii_strlower_n@plt+0x7e20>
  40cb58:	mov	w8, wzr
  40cb5c:	neg	w9, w24
  40cb60:	b	40cbe4 <ascii_strlower_n@plt+0x87dc>
  40cb64:	mov	w22, w0
  40cb68:	mov	w0, wzr
  40cb6c:	bl	4039a8 <log_get_max_level_realm@plt>
  40cb70:	cmp	w0, #0x3
  40cb74:	b.lt	40cbdc <ascii_strlower_n@plt+0x87d4>  // b.tstop
  40cb78:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  40cb7c:	adrp	x4, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40cb80:	adrp	x5, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40cb84:	add	x2, x2, #0x717
  40cb88:	add	x4, x4, #0xfc5
  40cb8c:	add	x5, x5, #0x998
  40cb90:	mov	w0, #0x3                   	// #3
  40cb94:	mov	w3, #0x33b                 	// #827
  40cb98:	mov	w1, w22
  40cb9c:	b	40c228 <ascii_strlower_n@plt+0x7e20>
  40cba0:	mov	w22, w0
  40cba4:	mov	w0, wzr
  40cba8:	bl	4039a8 <log_get_max_level_realm@plt>
  40cbac:	cmp	w0, #0x3
  40cbb0:	b.lt	40cbdc <ascii_strlower_n@plt+0x87d4>  // b.tstop
  40cbb4:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  40cbb8:	adrp	x4, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40cbbc:	adrp	x5, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40cbc0:	add	x2, x2, #0x717
  40cbc4:	add	x4, x4, #0xfc5
  40cbc8:	add	x5, x5, #0x998
  40cbcc:	mov	w0, #0x3                   	// #3
  40cbd0:	mov	w3, #0x33f                 	// #831
  40cbd4:	mov	w1, w22
  40cbd8:	b	40c228 <ascii_strlower_n@plt+0x7e20>
  40cbdc:	mov	w8, wzr
  40cbe0:	neg	w9, w22
  40cbe4:	sub	w24, w8, w9, uxtb
  40cbe8:	sub	x0, x29, #0x40
  40cbec:	bl	403d68 <sd_bus_error_free@plt>
  40cbf0:	ldur	x0, [x29, #-40]
  40cbf4:	cbz	x0, 40cbfc <ascii_strlower_n@plt+0x87f4>
  40cbf8:	bl	403d88 <sd_bus_message_unref@plt>
  40cbfc:	ldur	x0, [x29, #-32]
  40cc00:	cbz	x0, 40cc08 <ascii_strlower_n@plt+0x8800>
  40cc04:	bl	403d88 <sd_bus_message_unref@plt>
  40cc08:	mov	w0, w24
  40cc0c:	ldp	x20, x19, [sp, #224]
  40cc10:	ldp	x22, x21, [sp, #208]
  40cc14:	ldp	x24, x23, [sp, #192]
  40cc18:	ldp	x26, x25, [sp, #176]
  40cc1c:	ldp	x28, x27, [sp, #160]
  40cc20:	ldp	x29, x30, [sp, #144]
  40cc24:	add	sp, sp, #0xf0
  40cc28:	ret
  40cc2c:	adrp	x1, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40cc30:	adrp	x2, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40cc34:	adrp	x4, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40cc38:	add	x1, x1, #0x482
  40cc3c:	add	x2, x2, #0x4a7
  40cc40:	add	x4, x4, #0x4c0
  40cc44:	mov	w3, #0x43                  	// #67
  40cc48:	mov	w0, wzr
  40cc4c:	bl	403a98 <log_assert_failed_realm@plt>
  40cc50:	adrp	x1, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40cc54:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  40cc58:	adrp	x4, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40cc5c:	add	x1, x1, #0x104
  40cc60:	add	x2, x2, #0x717
  40cc64:	add	x4, x4, #0xf7d
  40cc68:	mov	w3, #0x2a5                 	// #677
  40cc6c:	bl	403a98 <log_assert_failed_realm@plt>
  40cc70:	adrp	x1, 41e000 <ascii_strlower_n@plt+0x19bf8>
  40cc74:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  40cc78:	adrp	x4, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40cc7c:	add	x1, x1, #0x292
  40cc80:	add	x2, x2, #0x717
  40cc84:	add	x4, x4, #0xf7d
  40cc88:	mov	w3, #0x2a6                 	// #678
  40cc8c:	mov	w0, wzr
  40cc90:	bl	403a98 <log_assert_failed_realm@plt>
  40cc94:	stp	x29, x30, [sp, #-64]!
  40cc98:	stp	x24, x23, [sp, #16]
  40cc9c:	stp	x22, x21, [sp, #32]
  40cca0:	stp	x20, x19, [sp, #48]
  40cca4:	mov	x29, sp
  40cca8:	sub	sp, sp, #0x10
  40ccac:	mov	w8, #0x1bb                 	// #443
  40ccb0:	sturh	w8, [x29, #-4]
  40ccb4:	stur	xzr, [x29, #-16]
  40ccb8:	cbz	x0, 40ce5c <ascii_strlower_n@plt+0x8a54>
  40ccbc:	mov	x21, x2
  40ccc0:	cbz	x2, 40ce7c <ascii_strlower_n@plt+0x8a74>
  40ccc4:	mov	x20, x1
  40ccc8:	mov	x19, x0
  40cccc:	mov	w1, #0x3a                  	// #58
  40ccd0:	mov	x0, x21
  40ccd4:	bl	403d98 <strrchr@plt>
  40ccd8:	cbz	x0, 40cd34 <ascii_strlower_n@plt+0x892c>
  40ccdc:	add	x22, x0, #0x1
  40cce0:	mov	x24, x0
  40cce4:	sub	x1, x29, #0x4
  40cce8:	mov	x0, x22
  40ccec:	bl	404008 <parse_ip_port@plt>
  40ccf0:	tbnz	w0, #31, 40cde4 <ascii_strlower_n@plt+0x89dc>
  40ccf4:	sub	x1, x24, x21
  40ccf8:	mov	x0, x21
  40ccfc:	bl	403fa8 <strnlen@plt>
  40cd00:	add	x8, x0, #0x10
  40cd04:	and	x8, x8, #0xfffffffffffffff0
  40cd08:	mov	x9, sp
  40cd0c:	mov	x2, x0
  40cd10:	sub	x22, x9, x8
  40cd14:	mov	sp, x22
  40cd18:	strb	wzr, [x22, x0]
  40cd1c:	mov	x0, x22
  40cd20:	mov	x1, x21
  40cd24:	bl	403c68 <memcpy@plt>
  40cd28:	ldurh	w2, [x29, #-4]
  40cd2c:	mov	x21, x22
  40cd30:	b	40cd38 <ascii_strlower_n@plt+0x8930>
  40cd34:	mov	w2, #0x1bb                 	// #443
  40cd38:	adrp	x1, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40cd3c:	add	x1, x1, #0x22b
  40cd40:	sub	x0, x29, #0x10
  40cd44:	mov	x3, x20
  40cd48:	mov	x4, x21
  40cd4c:	bl	403e18 <asprintf@plt>
  40cd50:	tbnz	w0, #31, 40cdc4 <ascii_strlower_n@plt+0x89bc>
  40cd54:	mov	w0, wzr
  40cd58:	bl	4039a8 <log_get_max_level_realm@plt>
  40cd5c:	cmp	w0, #0x7
  40cd60:	b.lt	40cd90 <ascii_strlower_n@plt+0x8988>  // b.tstop
  40cd64:	ldur	x6, [x29, #-16]
  40cd68:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  40cd6c:	adrp	x4, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40cd70:	adrp	x5, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40cd74:	add	x2, x2, #0x717
  40cd78:	add	x4, x4, #0x20b
  40cd7c:	add	x5, x5, #0x1c3
  40cd80:	mov	w0, #0x7                   	// #7
  40cd84:	mov	w3, #0x3b8                 	// #952
  40cd88:	mov	w1, wzr
  40cd8c:	bl	4039b8 <log_internal_realm@plt>
  40cd90:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  40cd94:	add	x8, x8, #0x28
  40cd98:	ldrh	w9, [x8, #4]
  40cd9c:	ldrh	w8, [x8]
  40cda0:	ldur	x1, [x29, #-16]
  40cda4:	mov	x0, x19
  40cda8:	cmp	w9, #0x0
  40cdac:	csinc	w2, w9, wzr, ne  // ne = any
  40cdb0:	cmp	w8, #0x0
  40cdb4:	mov	w9, #0x34                  	// #52
  40cdb8:	csel	w3, w9, w8, eq  // eq = none
  40cdbc:	bl	40af78 <ascii_strlower_n@plt+0x6b70>
  40cdc0:	b	40ce24 <ascii_strlower_n@plt+0x8a1c>
  40cdc4:	adrp	x1, 41e000 <ascii_strlower_n@plt+0x19bf8>
  40cdc8:	adrp	x3, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40cdcc:	add	x1, x1, #0x717
  40cdd0:	add	x3, x3, #0x20b
  40cdd4:	mov	w2, #0x3b6                 	// #950
  40cdd8:	mov	w0, wzr
  40cddc:	bl	403a28 <log_oom_internal@plt>
  40cde0:	b	40ce24 <ascii_strlower_n@plt+0x8a1c>
  40cde4:	mov	w23, w0
  40cde8:	mov	w0, wzr
  40cdec:	bl	4039a8 <log_get_max_level_realm@plt>
  40cdf0:	cmp	w0, #0x3
  40cdf4:	b.lt	40ce4c <ascii_strlower_n@plt+0x8a44>  // b.tstop
  40cdf8:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  40cdfc:	adrp	x4, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40ce00:	adrp	x5, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40ce04:	add	x2, x2, #0x717
  40ce08:	add	x4, x4, #0x20b
  40ce0c:	add	x5, x5, #0x218
  40ce10:	mov	w0, #0x3                   	// #3
  40ce14:	mov	w3, #0x3ac                 	// #940
  40ce18:	mov	w1, w23
  40ce1c:	mov	x6, x22
  40ce20:	bl	4039b8 <log_internal_realm@plt>
  40ce24:	mov	w19, w0
  40ce28:	ldur	x0, [x29, #-16]
  40ce2c:	bl	4039d8 <free@plt>
  40ce30:	mov	w0, w19
  40ce34:	mov	sp, x29
  40ce38:	ldp	x20, x19, [sp, #48]
  40ce3c:	ldp	x22, x21, [sp, #32]
  40ce40:	ldp	x24, x23, [sp, #16]
  40ce44:	ldp	x29, x30, [sp], #64
  40ce48:	ret
  40ce4c:	mov	w8, wzr
  40ce50:	neg	w9, w23
  40ce54:	sub	w19, w8, w9, uxtb
  40ce58:	b	40ce28 <ascii_strlower_n@plt+0x8a20>
  40ce5c:	adrp	x1, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40ce60:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  40ce64:	adrp	x4, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40ce68:	add	x1, x1, #0x104
  40ce6c:	add	x2, x2, #0x717
  40ce70:	add	x4, x4, #0x1d4
  40ce74:	mov	w3, #0x3a5                 	// #933
  40ce78:	bl	403a98 <log_assert_failed_realm@plt>
  40ce7c:	adrp	x1, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40ce80:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  40ce84:	adrp	x4, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40ce88:	add	x1, x1, #0xde8
  40ce8c:	add	x2, x2, #0x717
  40ce90:	add	x4, x4, #0x1d4
  40ce94:	mov	w3, #0x3a6                 	// #934
  40ce98:	mov	w0, wzr
  40ce9c:	bl	403a98 <log_assert_failed_realm@plt>
  40cea0:	sub	sp, sp, #0x90
  40cea4:	stp	x29, x30, [sp, #48]
  40cea8:	stp	x20, x19, [sp, #128]
  40ceac:	add	x29, sp, #0x30
  40ceb0:	mov	x19, x5
  40ceb4:	adrp	x5, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40ceb8:	stp	x22, x21, [sp, #112]
  40cebc:	mov	x21, x1
  40cec0:	add	x5, x5, #0x64a
  40cec4:	add	x1, x29, #0x18
  40cec8:	str	x27, [sp, #64]
  40cecc:	stp	x26, x25, [sp, #80]
  40ced0:	stp	x24, x23, [sp, #96]
  40ced4:	mov	x20, x0
  40ced8:	str	xzr, [x29, #24]
  40cedc:	bl	403ca8 <sd_bus_message_new_method_call@plt>
  40cee0:	tbnz	w0, #31, 40d010 <ascii_strlower_n@plt+0x8c08>
  40cee4:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  40cee8:	ldr	x0, [x29, #24]
  40ceec:	ldr	w2, [x8, #48]
  40cef0:	adrp	x1, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40cef4:	add	x1, x1, #0x42b
  40cef8:	bl	403cb8 <sd_bus_message_append@plt>
  40cefc:	tbnz	w0, #31, 40d048 <ascii_strlower_n@plt+0x8c40>
  40cf00:	ldr	x0, [x29, #24]
  40cf04:	adrp	x2, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40cf08:	add	x2, x2, #0x8e
  40cf0c:	mov	w1, #0x61                  	// #97
  40cf10:	bl	404018 <sd_bus_message_open_container@plt>
  40cf14:	tbnz	w0, #31, 40d080 <ascii_strlower_n@plt+0x8c78>
  40cf18:	adrp	x8, 41e000 <ascii_strlower_n@plt+0x19bf8>
  40cf1c:	add	x8, x8, #0x804
  40cf20:	sub	x1, x29, #0x10
  40cf24:	mov	x0, x21
  40cf28:	stp	x8, xzr, [x29, #-16]
  40cf2c:	bl	403de8 <strv_equal@plt>
  40cf30:	tbnz	w0, #0, 40cfdc <ascii_strlower_n@plt+0x8bd4>
  40cf34:	cbz	x21, 40cfdc <ascii_strlower_n@plt+0x8bd4>
  40cf38:	ldr	x0, [x21]
  40cf3c:	cbz	x0, 40cfdc <ascii_strlower_n@plt+0x8bd4>
  40cf40:	add	x8, sp, #0x8
  40cf44:	add	x25, x21, #0x8
  40cf48:	adrp	x21, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40cf4c:	adrp	x22, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40cf50:	add	x21, x21, #0x427
  40cf54:	add	x22, x22, #0x42b
  40cf58:	mov	w26, #0x4                   	// #4
  40cf5c:	orr	x23, x8, #0x4
  40cf60:	mov	w27, #0x10                  	// #16
  40cf64:	add	x1, sp, #0x8
  40cf68:	mov	x2, x23
  40cf6c:	bl	404028 <in_addr_from_string_auto@plt>
  40cf70:	tbnz	w0, #31, 40d160 <ascii_strlower_n@plt+0x8d58>
  40cf74:	ldr	x0, [x29, #24]
  40cf78:	mov	w1, #0x72                  	// #114
  40cf7c:	mov	x2, x21
  40cf80:	bl	404018 <sd_bus_message_open_container@plt>
  40cf84:	tbnz	w0, #31, 40d1b0 <ascii_strlower_n@plt+0x8da8>
  40cf88:	ldr	x0, [x29, #24]
  40cf8c:	ldr	w2, [sp, #8]
  40cf90:	mov	x1, x22
  40cf94:	bl	403cb8 <sd_bus_message_append@plt>
  40cf98:	tbnz	w0, #31, 40d1e8 <ascii_strlower_n@plt+0x8de0>
  40cf9c:	ldr	w8, [sp, #8]
  40cfa0:	orr	w9, w8, #0x8
  40cfa4:	cmp	w9, #0xa
  40cfa8:	b.ne	40d2b0 <ascii_strlower_n@plt+0x8ea8>  // b.any
  40cfac:	ldr	x0, [x29, #24]
  40cfb0:	cmp	w8, #0xa
  40cfb4:	csel	x3, x27, x26, eq  // eq = none
  40cfb8:	mov	w1, #0x79                  	// #121
  40cfbc:	mov	x2, x23
  40cfc0:	bl	403cc8 <sd_bus_message_append_array@plt>
  40cfc4:	tbnz	w0, #31, 40d220 <ascii_strlower_n@plt+0x8e18>
  40cfc8:	ldr	x0, [x29, #24]
  40cfcc:	bl	404038 <sd_bus_message_close_container@plt>
  40cfd0:	tbnz	w0, #31, 40d258 <ascii_strlower_n@plt+0x8e50>
  40cfd4:	ldr	x0, [x25], #8
  40cfd8:	cbnz	x0, 40cf64 <ascii_strlower_n@plt+0x8b5c>
  40cfdc:	ldr	x0, [x29, #24]
  40cfe0:	bl	404038 <sd_bus_message_close_container@plt>
  40cfe4:	tbnz	w0, #31, 40d108 <ascii_strlower_n@plt+0x8d00>
  40cfe8:	ldr	x1, [x29, #24]
  40cfec:	mov	x0, x20
  40cff0:	mov	x2, xzr
  40cff4:	mov	x3, x19
  40cff8:	mov	x4, xzr
  40cffc:	bl	403ce8 <sd_bus_call@plt>
  40d000:	mov	w19, w0
  40d004:	ldr	x0, [x29, #24]
  40d008:	cbnz	x0, 40d0e0 <ascii_strlower_n@plt+0x8cd8>
  40d00c:	b	40d0e4 <ascii_strlower_n@plt+0x8cdc>
  40d010:	mov	w22, w0
  40d014:	mov	w0, wzr
  40d018:	bl	4039a8 <log_get_max_level_realm@plt>
  40d01c:	cmp	w0, #0x3
  40d020:	b.lt	40d0cc <ascii_strlower_n@plt+0x8cc4>  // b.tstop
  40d024:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  40d028:	adrp	x4, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40d02c:	adrp	x5, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40d030:	add	x2, x2, #0x717
  40d034:	add	x4, x4, #0x655
  40d038:	add	x5, x5, #0x94d
  40d03c:	mov	w0, #0x3                   	// #3
  40d040:	mov	w3, #0x744                 	// #1860
  40d044:	b	40d0b4 <ascii_strlower_n@plt+0x8cac>
  40d048:	mov	w22, w0
  40d04c:	mov	w0, wzr
  40d050:	bl	4039a8 <log_get_max_level_realm@plt>
  40d054:	cmp	w0, #0x3
  40d058:	b.lt	40d0cc <ascii_strlower_n@plt+0x8cc4>  // b.tstop
  40d05c:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  40d060:	adrp	x4, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40d064:	adrp	x5, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40d068:	add	x2, x2, #0x717
  40d06c:	add	x4, x4, #0x655
  40d070:	add	x5, x5, #0x94d
  40d074:	mov	w0, #0x3                   	// #3
  40d078:	mov	w3, #0x748                 	// #1864
  40d07c:	b	40d0b4 <ascii_strlower_n@plt+0x8cac>
  40d080:	mov	w22, w0
  40d084:	mov	w0, wzr
  40d088:	bl	4039a8 <log_get_max_level_realm@plt>
  40d08c:	cmp	w0, #0x3
  40d090:	b.lt	40d0cc <ascii_strlower_n@plt+0x8cc4>  // b.tstop
  40d094:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  40d098:	adrp	x4, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40d09c:	adrp	x5, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40d0a0:	add	x2, x2, #0x717
  40d0a4:	add	x4, x4, #0x655
  40d0a8:	add	x5, x5, #0x94d
  40d0ac:	mov	w0, #0x3                   	// #3
  40d0b0:	mov	w3, #0x74c                 	// #1868
  40d0b4:	mov	w1, w22
  40d0b8:	bl	4039b8 <log_internal_realm@plt>
  40d0bc:	mov	w19, w0
  40d0c0:	ldr	x0, [x29, #24]
  40d0c4:	cbnz	x0, 40d0e0 <ascii_strlower_n@plt+0x8cd8>
  40d0c8:	b	40d0e4 <ascii_strlower_n@plt+0x8cdc>
  40d0cc:	mov	w8, wzr
  40d0d0:	neg	w9, w22
  40d0d4:	sub	w19, w8, w9, uxtb
  40d0d8:	ldr	x0, [x29, #24]
  40d0dc:	cbz	x0, 40d0e4 <ascii_strlower_n@plt+0x8cdc>
  40d0e0:	bl	403d88 <sd_bus_message_unref@plt>
  40d0e4:	mov	w0, w19
  40d0e8:	ldp	x20, x19, [sp, #128]
  40d0ec:	ldp	x22, x21, [sp, #112]
  40d0f0:	ldp	x24, x23, [sp, #96]
  40d0f4:	ldp	x26, x25, [sp, #80]
  40d0f8:	ldr	x27, [sp, #64]
  40d0fc:	ldp	x29, x30, [sp, #48]
  40d100:	add	sp, sp, #0x90
  40d104:	ret
  40d108:	mov	w21, w0
  40d10c:	mov	w0, wzr
  40d110:	bl	4039a8 <log_get_max_level_realm@plt>
  40d114:	cmp	w0, #0x3
  40d118:	b.lt	40d154 <ascii_strlower_n@plt+0x8d4c>  // b.tstop
  40d11c:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  40d120:	adrp	x4, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40d124:	adrp	x5, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40d128:	add	x2, x2, #0x717
  40d12c:	add	x4, x4, #0x655
  40d130:	add	x5, x5, #0x94d
  40d134:	mov	w0, #0x3                   	// #3
  40d138:	mov	w3, #0x76b                 	// #1899
  40d13c:	mov	w1, w21
  40d140:	bl	4039b8 <log_internal_realm@plt>
  40d144:	mov	w19, w0
  40d148:	ldr	x0, [x29, #24]
  40d14c:	cbnz	x0, 40d0e0 <ascii_strlower_n@plt+0x8cd8>
  40d150:	b	40d0e4 <ascii_strlower_n@plt+0x8cdc>
  40d154:	mov	w8, wzr
  40d158:	neg	w9, w21
  40d15c:	b	40d0d4 <ascii_strlower_n@plt+0x8ccc>
  40d160:	mov	w24, w0
  40d164:	mov	w0, wzr
  40d168:	bl	4039a8 <log_get_max_level_realm@plt>
  40d16c:	cmp	w0, #0x3
  40d170:	b.lt	40d2a4 <ascii_strlower_n@plt+0x8e9c>  // b.tstop
  40d174:	ldur	x6, [x25, #-8]
  40d178:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  40d17c:	adrp	x4, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40d180:	adrp	x5, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40d184:	add	x2, x2, #0x717
  40d188:	add	x4, x4, #0x655
  40d18c:	add	x5, x5, #0x65e
  40d190:	mov	w0, #0x3                   	// #3
  40d194:	mov	w3, #0x756                 	// #1878
  40d198:	mov	w1, w24
  40d19c:	bl	4039b8 <log_internal_realm@plt>
  40d1a0:	mov	w19, w0
  40d1a4:	ldr	x0, [x29, #24]
  40d1a8:	cbnz	x0, 40d0e0 <ascii_strlower_n@plt+0x8cd8>
  40d1ac:	b	40d0e4 <ascii_strlower_n@plt+0x8cdc>
  40d1b0:	mov	w24, w0
  40d1b4:	mov	w0, wzr
  40d1b8:	bl	4039a8 <log_get_max_level_realm@plt>
  40d1bc:	cmp	w0, #0x3
  40d1c0:	b.lt	40d2a4 <ascii_strlower_n@plt+0x8e9c>  // b.tstop
  40d1c4:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  40d1c8:	adrp	x4, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40d1cc:	adrp	x5, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40d1d0:	add	x2, x2, #0x717
  40d1d4:	add	x4, x4, #0x655
  40d1d8:	add	x5, x5, #0x94d
  40d1dc:	mov	w0, #0x3                   	// #3
  40d1e0:	mov	w3, #0x75a                 	// #1882
  40d1e4:	b	40d28c <ascii_strlower_n@plt+0x8e84>
  40d1e8:	mov	w24, w0
  40d1ec:	mov	w0, wzr
  40d1f0:	bl	4039a8 <log_get_max_level_realm@plt>
  40d1f4:	cmp	w0, #0x3
  40d1f8:	b.lt	40d2a4 <ascii_strlower_n@plt+0x8e9c>  // b.tstop
  40d1fc:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  40d200:	adrp	x4, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40d204:	adrp	x5, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40d208:	add	x2, x2, #0x717
  40d20c:	add	x4, x4, #0x655
  40d210:	add	x5, x5, #0x94d
  40d214:	mov	w0, #0x3                   	// #3
  40d218:	mov	w3, #0x75e                 	// #1886
  40d21c:	b	40d28c <ascii_strlower_n@plt+0x8e84>
  40d220:	mov	w24, w0
  40d224:	mov	w0, wzr
  40d228:	bl	4039a8 <log_get_max_level_realm@plt>
  40d22c:	cmp	w0, #0x3
  40d230:	b.lt	40d2a4 <ascii_strlower_n@plt+0x8e9c>  // b.tstop
  40d234:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  40d238:	adrp	x4, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40d23c:	adrp	x5, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40d240:	add	x2, x2, #0x717
  40d244:	add	x4, x4, #0x655
  40d248:	add	x5, x5, #0x94d
  40d24c:	mov	w0, #0x3                   	// #3
  40d250:	mov	w3, #0x762                 	// #1890
  40d254:	b	40d28c <ascii_strlower_n@plt+0x8e84>
  40d258:	mov	w24, w0
  40d25c:	mov	w0, wzr
  40d260:	bl	4039a8 <log_get_max_level_realm@plt>
  40d264:	cmp	w0, #0x3
  40d268:	b.lt	40d2a4 <ascii_strlower_n@plt+0x8e9c>  // b.tstop
  40d26c:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  40d270:	adrp	x4, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40d274:	adrp	x5, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40d278:	add	x2, x2, #0x717
  40d27c:	add	x4, x4, #0x655
  40d280:	add	x5, x5, #0x94d
  40d284:	mov	w0, #0x3                   	// #3
  40d288:	mov	w3, #0x766                 	// #1894
  40d28c:	mov	w1, w24
  40d290:	bl	4039b8 <log_internal_realm@plt>
  40d294:	mov	w19, w0
  40d298:	ldr	x0, [x29, #24]
  40d29c:	cbnz	x0, 40d0e0 <ascii_strlower_n@plt+0x8cd8>
  40d2a0:	b	40d0e4 <ascii_strlower_n@plt+0x8cdc>
  40d2a4:	mov	w8, wzr
  40d2a8:	neg	w9, w24
  40d2ac:	b	40d0d4 <ascii_strlower_n@plt+0x8ccc>
  40d2b0:	adrp	x1, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40d2b4:	adrp	x2, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40d2b8:	adrp	x4, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40d2bc:	add	x1, x1, #0x482
  40d2c0:	add	x2, x2, #0x4a7
  40d2c4:	add	x4, x4, #0x4c0
  40d2c8:	mov	w3, #0x43                  	// #67
  40d2cc:	mov	w0, wzr
  40d2d0:	bl	403a98 <log_assert_failed_realm@plt>
  40d2d4:	sub	sp, sp, #0x60
  40d2d8:	stp	x29, x30, [sp, #32]
  40d2dc:	stp	x20, x19, [sp, #80]
  40d2e0:	add	x29, sp, #0x20
  40d2e4:	mov	x19, x5
  40d2e8:	adrp	x5, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40d2ec:	stp	x22, x21, [sp, #64]
  40d2f0:	mov	x21, x1
  40d2f4:	add	x5, x5, #0x6de
  40d2f8:	sub	x1, x29, #0x8
  40d2fc:	stp	x24, x23, [sp, #48]
  40d300:	mov	x20, x0
  40d304:	stur	xzr, [x29, #-8]
  40d308:	bl	403ca8 <sd_bus_message_new_method_call@plt>
  40d30c:	tbnz	w0, #31, 40d408 <ascii_strlower_n@plt+0x9000>
  40d310:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  40d314:	ldur	x0, [x29, #-8]
  40d318:	ldr	w2, [x8, #48]
  40d31c:	adrp	x1, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40d320:	add	x1, x1, #0x42b
  40d324:	bl	403cb8 <sd_bus_message_append@plt>
  40d328:	tbnz	w0, #31, 40d440 <ascii_strlower_n@plt+0x9038>
  40d32c:	ldur	x0, [x29, #-8]
  40d330:	adrp	x2, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40d334:	add	x2, x2, #0x5a2
  40d338:	mov	w1, #0x61                  	// #97
  40d33c:	bl	404018 <sd_bus_message_open_container@plt>
  40d340:	tbnz	w0, #31, 40d478 <ascii_strlower_n@plt+0x9070>
  40d344:	adrp	x8, 41e000 <ascii_strlower_n@plt+0x19bf8>
  40d348:	add	x8, x8, #0x804
  40d34c:	add	x1, sp, #0x8
  40d350:	mov	x0, x21
  40d354:	stp	x8, xzr, [sp, #8]
  40d358:	bl	403de8 <strv_equal@plt>
  40d35c:	tbnz	w0, #0, 40d3e0 <ascii_strlower_n@plt+0x8fd8>
  40d360:	cbz	x21, 40d3e0 <ascii_strlower_n@plt+0x8fd8>
  40d364:	ldr	x8, [x21]
  40d368:	cbz	x8, 40d3e0 <ascii_strlower_n@plt+0x8fd8>
  40d36c:	adrp	x22, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40d370:	add	x24, x21, #0x8
  40d374:	add	x22, x22, #0x5a2
  40d378:	mov	x9, x8
  40d37c:	ldrb	w10, [x9], #1
  40d380:	mov	x1, xzr
  40d384:	mov	w2, wzr
  40d388:	mov	x3, xzr
  40d38c:	cmp	w10, #0x7e
  40d390:	csel	x21, x9, x8, eq  // eq = none
  40d394:	mov	x0, x21
  40d398:	bl	403df8 <dns_name_concat@plt>
  40d39c:	cmp	w0, #0x0
  40d3a0:	csinc	w8, w0, wzr, lt  // lt = tstop
  40d3a4:	cmn	w0, #0x16
  40d3a8:	csel	w23, wzr, w8, eq  // eq = none
  40d3ac:	tbnz	w23, #31, 40d528 <ascii_strlower_n@plt+0x9120>
  40d3b0:	cbz	w23, 40d568 <ascii_strlower_n@plt+0x9160>
  40d3b4:	ldur	x8, [x24, #-8]
  40d3b8:	ldur	x0, [x29, #-8]
  40d3bc:	mov	x1, x22
  40d3c0:	mov	x2, x21
  40d3c4:	ldrb	w8, [x8]
  40d3c8:	cmp	w8, #0x7e
  40d3cc:	cset	w3, eq  // eq = none
  40d3d0:	bl	403cb8 <sd_bus_message_append@plt>
  40d3d4:	tbnz	w0, #31, 40d5ac <ascii_strlower_n@plt+0x91a4>
  40d3d8:	ldr	x8, [x24], #8
  40d3dc:	cbnz	x8, 40d378 <ascii_strlower_n@plt+0x8f70>
  40d3e0:	ldur	x0, [x29, #-8]
  40d3e4:	bl	404038 <sd_bus_message_close_container@plt>
  40d3e8:	tbnz	w0, #31, 40d4f0 <ascii_strlower_n@plt+0x90e8>
  40d3ec:	ldur	x1, [x29, #-8]
  40d3f0:	mov	x0, x20
  40d3f4:	mov	x2, xzr
  40d3f8:	mov	x3, x19
  40d3fc:	mov	x4, xzr
  40d400:	bl	403ce8 <sd_bus_call@plt>
  40d404:	b	40d4b4 <ascii_strlower_n@plt+0x90ac>
  40d408:	mov	w22, w0
  40d40c:	mov	w0, wzr
  40d410:	bl	4039a8 <log_get_max_level_realm@plt>
  40d414:	cmp	w0, #0x3
  40d418:	b.lt	40d4bc <ascii_strlower_n@plt+0x90b4>  // b.tstop
  40d41c:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  40d420:	adrp	x4, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40d424:	adrp	x5, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40d428:	add	x2, x2, #0x717
  40d42c:	add	x4, x4, #0x6ed
  40d430:	add	x5, x5, #0x94d
  40d434:	mov	w0, #0x3                   	// #3
  40d438:	mov	w3, #0x7a9                 	// #1961
  40d43c:	b	40d4ac <ascii_strlower_n@plt+0x90a4>
  40d440:	mov	w22, w0
  40d444:	mov	w0, wzr
  40d448:	bl	4039a8 <log_get_max_level_realm@plt>
  40d44c:	cmp	w0, #0x3
  40d450:	b.lt	40d4bc <ascii_strlower_n@plt+0x90b4>  // b.tstop
  40d454:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  40d458:	adrp	x4, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40d45c:	adrp	x5, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40d460:	add	x2, x2, #0x717
  40d464:	add	x4, x4, #0x6ed
  40d468:	add	x5, x5, #0x94d
  40d46c:	mov	w0, #0x3                   	// #3
  40d470:	mov	w3, #0x7ad                 	// #1965
  40d474:	b	40d4ac <ascii_strlower_n@plt+0x90a4>
  40d478:	mov	w22, w0
  40d47c:	mov	w0, wzr
  40d480:	bl	4039a8 <log_get_max_level_realm@plt>
  40d484:	cmp	w0, #0x3
  40d488:	b.lt	40d4bc <ascii_strlower_n@plt+0x90b4>  // b.tstop
  40d48c:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  40d490:	adrp	x4, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40d494:	adrp	x5, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40d498:	add	x2, x2, #0x717
  40d49c:	add	x4, x4, #0x6ed
  40d4a0:	add	x5, x5, #0x94d
  40d4a4:	mov	w0, #0x3                   	// #3
  40d4a8:	mov	w3, #0x7b1                 	// #1969
  40d4ac:	mov	w1, w22
  40d4b0:	bl	4039b8 <log_internal_realm@plt>
  40d4b4:	mov	w19, w0
  40d4b8:	b	40d4c8 <ascii_strlower_n@plt+0x90c0>
  40d4bc:	mov	w8, wzr
  40d4c0:	neg	w9, w22
  40d4c4:	sub	w19, w8, w9, uxtb
  40d4c8:	ldur	x0, [x29, #-8]
  40d4cc:	cbz	x0, 40d4d4 <ascii_strlower_n@plt+0x90cc>
  40d4d0:	bl	403d88 <sd_bus_message_unref@plt>
  40d4d4:	mov	w0, w19
  40d4d8:	ldp	x20, x19, [sp, #80]
  40d4dc:	ldp	x22, x21, [sp, #64]
  40d4e0:	ldp	x24, x23, [sp, #48]
  40d4e4:	ldp	x29, x30, [sp, #32]
  40d4e8:	add	sp, sp, #0x60
  40d4ec:	ret
  40d4f0:	mov	w21, w0
  40d4f4:	mov	w0, wzr
  40d4f8:	bl	4039a8 <log_get_max_level_realm@plt>
  40d4fc:	cmp	w0, #0x3
  40d500:	b.lt	40d5e8 <ascii_strlower_n@plt+0x91e0>  // b.tstop
  40d504:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  40d508:	adrp	x4, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40d50c:	adrp	x5, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40d510:	add	x2, x2, #0x717
  40d514:	add	x4, x4, #0x6ed
  40d518:	add	x5, x5, #0x94d
  40d51c:	mov	w0, #0x3                   	// #3
  40d520:	mov	w3, #0x7ca                 	// #1994
  40d524:	b	40d5e0 <ascii_strlower_n@plt+0x91d8>
  40d528:	mov	w0, wzr
  40d52c:	bl	4039a8 <log_get_max_level_realm@plt>
  40d530:	cmp	w0, #0x3
  40d534:	b.lt	40d5f4 <ascii_strlower_n@plt+0x91ec>  // b.tstop
  40d538:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  40d53c:	adrp	x4, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40d540:	adrp	x5, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40d544:	add	x2, x2, #0x717
  40d548:	add	x4, x4, #0x6ed
  40d54c:	add	x5, x5, #0x6f9
  40d550:	mov	w0, #0x3                   	// #3
  40d554:	mov	w3, #0x7bd                 	// #1981
  40d558:	mov	w1, w23
  40d55c:	mov	x6, x21
  40d560:	bl	4039b8 <log_internal_realm@plt>
  40d564:	b	40d4b4 <ascii_strlower_n@plt+0x90ac>
  40d568:	mov	w0, wzr
  40d56c:	bl	4039a8 <log_get_max_level_realm@plt>
  40d570:	cmp	w0, #0x3
  40d574:	b.lt	40d600 <ascii_strlower_n@plt+0x91f8>  // b.tstop
  40d578:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  40d57c:	adrp	x4, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40d580:	adrp	x5, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40d584:	add	x2, x2, #0x717
  40d588:	add	x4, x4, #0x6ed
  40d58c:	add	x5, x5, #0x724
  40d590:	mov	w0, #0x3                   	// #3
  40d594:	mov	w3, #0x7bf                 	// #1983
  40d598:	mov	w1, wzr
  40d59c:	mov	x6, x21
  40d5a0:	bl	4039b8 <log_internal_realm@plt>
  40d5a4:	mov	w19, #0xffffffea            	// #-22
  40d5a8:	b	40d4c8 <ascii_strlower_n@plt+0x90c0>
  40d5ac:	mov	w21, w0
  40d5b0:	mov	w0, wzr
  40d5b4:	bl	4039a8 <log_get_max_level_realm@plt>
  40d5b8:	cmp	w0, #0x3
  40d5bc:	b.lt	40d5e8 <ascii_strlower_n@plt+0x91e0>  // b.tstop
  40d5c0:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  40d5c4:	adrp	x4, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40d5c8:	adrp	x5, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40d5cc:	add	x2, x2, #0x717
  40d5d0:	add	x4, x4, #0x6ed
  40d5d4:	add	x5, x5, #0x94d
  40d5d8:	mov	w0, #0x3                   	// #3
  40d5dc:	mov	w3, #0x7c5                 	// #1989
  40d5e0:	mov	w1, w21
  40d5e4:	b	40d4b0 <ascii_strlower_n@plt+0x90a8>
  40d5e8:	mov	w8, wzr
  40d5ec:	neg	w9, w21
  40d5f0:	b	40d4c4 <ascii_strlower_n@plt+0x90bc>
  40d5f4:	mov	w8, wzr
  40d5f8:	neg	w9, w23
  40d5fc:	b	40d4c4 <ascii_strlower_n@plt+0x90bc>
  40d600:	mov	w19, #0xffffffea            	// #-22
  40d604:	b	40d4c8 <ascii_strlower_n@plt+0x90c0>
  40d608:	sub	sp, sp, #0x40
  40d60c:	stp	x20, x19, [sp, #48]
  40d610:	mov	x19, x5
  40d614:	adrp	x5, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40d618:	stp	x22, x21, [sp, #32]
  40d61c:	mov	x21, x1
  40d620:	add	x5, x5, #0x9ee
  40d624:	add	x1, sp, #0x8
  40d628:	stp	x29, x30, [sp, #16]
  40d62c:	add	x29, sp, #0x10
  40d630:	mov	x20, x0
  40d634:	str	xzr, [sp, #8]
  40d638:	bl	403ca8 <sd_bus_message_new_method_call@plt>
  40d63c:	tbnz	w0, #31, 40d694 <ascii_strlower_n@plt+0x928c>
  40d640:	adrp	x8, 440000 <ascii_strlower_n@plt+0x3bbf8>
  40d644:	ldr	x0, [sp, #8]
  40d648:	ldr	w2, [x8, #48]
  40d64c:	adrp	x1, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40d650:	add	x1, x1, #0x42b
  40d654:	bl	403cb8 <sd_bus_message_append@plt>
  40d658:	tbnz	w0, #31, 40d6cc <ascii_strlower_n@plt+0x92c4>
  40d65c:	ldr	x0, [sp, #8]
  40d660:	mov	x1, x21
  40d664:	bl	404048 <sd_bus_message_append_strv@plt>
  40d668:	tbnz	w0, #31, 40d730 <ascii_strlower_n@plt+0x9328>
  40d66c:	ldr	x1, [sp, #8]
  40d670:	mov	x0, x20
  40d674:	mov	x2, xzr
  40d678:	mov	x3, x19
  40d67c:	mov	x4, xzr
  40d680:	bl	403ce8 <sd_bus_call@plt>
  40d684:	mov	w19, w0
  40d688:	ldr	x0, [sp, #8]
  40d68c:	cbnz	x0, 40d790 <ascii_strlower_n@plt+0x9388>
  40d690:	b	40d794 <ascii_strlower_n@plt+0x938c>
  40d694:	mov	w22, w0
  40d698:	mov	w0, wzr
  40d69c:	bl	4039a8 <log_get_max_level_realm@plt>
  40d6a0:	cmp	w0, #0x3
  40d6a4:	b.lt	40d718 <ascii_strlower_n@plt+0x9310>  // b.tstop
  40d6a8:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  40d6ac:	adrp	x4, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40d6b0:	adrp	x5, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40d6b4:	add	x2, x2, #0x717
  40d6b8:	add	x4, x4, #0xa10
  40d6bc:	add	x5, x5, #0x94d
  40d6c0:	mov	w0, #0x3                   	// #3
  40d6c4:	mov	w3, #0x90f                 	// #2319
  40d6c8:	b	40d700 <ascii_strlower_n@plt+0x92f8>
  40d6cc:	mov	w22, w0
  40d6d0:	mov	w0, wzr
  40d6d4:	bl	4039a8 <log_get_max_level_realm@plt>
  40d6d8:	cmp	w0, #0x3
  40d6dc:	b.lt	40d718 <ascii_strlower_n@plt+0x9310>  // b.tstop
  40d6e0:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  40d6e4:	adrp	x4, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40d6e8:	adrp	x5, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40d6ec:	add	x2, x2, #0x717
  40d6f0:	add	x4, x4, #0xa10
  40d6f4:	add	x5, x5, #0x94d
  40d6f8:	mov	w0, #0x3                   	// #3
  40d6fc:	mov	w3, #0x913                 	// #2323
  40d700:	mov	w1, w22
  40d704:	bl	4039b8 <log_internal_realm@plt>
  40d708:	mov	w19, w0
  40d70c:	ldr	x0, [sp, #8]
  40d710:	cbnz	x0, 40d790 <ascii_strlower_n@plt+0x9388>
  40d714:	b	40d794 <ascii_strlower_n@plt+0x938c>
  40d718:	mov	w8, wzr
  40d71c:	neg	w9, w22
  40d720:	sub	w19, w8, w9, uxtb
  40d724:	ldr	x0, [sp, #8]
  40d728:	cbnz	x0, 40d790 <ascii_strlower_n@plt+0x9388>
  40d72c:	b	40d794 <ascii_strlower_n@plt+0x938c>
  40d730:	mov	w21, w0
  40d734:	mov	w0, wzr
  40d738:	bl	4039a8 <log_get_max_level_realm@plt>
  40d73c:	cmp	w0, #0x3
  40d740:	b.lt	40d77c <ascii_strlower_n@plt+0x9374>  // b.tstop
  40d744:	adrp	x2, 41e000 <ascii_strlower_n@plt+0x19bf8>
  40d748:	adrp	x4, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40d74c:	adrp	x5, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40d750:	add	x2, x2, #0x717
  40d754:	add	x4, x4, #0xa10
  40d758:	add	x5, x5, #0x94d
  40d75c:	mov	w0, #0x3                   	// #3
  40d760:	mov	w3, #0x917                 	// #2327
  40d764:	mov	w1, w21
  40d768:	bl	4039b8 <log_internal_realm@plt>
  40d76c:	mov	w19, w0
  40d770:	ldr	x0, [sp, #8]
  40d774:	cbnz	x0, 40d790 <ascii_strlower_n@plt+0x9388>
  40d778:	b	40d794 <ascii_strlower_n@plt+0x938c>
  40d77c:	mov	w8, wzr
  40d780:	neg	w9, w21
  40d784:	sub	w19, w8, w9, uxtb
  40d788:	ldr	x0, [sp, #8]
  40d78c:	cbz	x0, 40d794 <ascii_strlower_n@plt+0x938c>
  40d790:	bl	403d88 <sd_bus_message_unref@plt>
  40d794:	mov	w0, w19
  40d798:	ldp	x20, x19, [sp, #48]
  40d79c:	ldp	x22, x21, [sp, #32]
  40d7a0:	ldp	x29, x30, [sp, #16]
  40d7a4:	add	sp, sp, #0x40
  40d7a8:	ret
  40d7ac:	stp	x29, x30, [sp, #-64]!
  40d7b0:	str	x23, [sp, #16]
  40d7b4:	stp	x22, x21, [sp, #32]
  40d7b8:	stp	x20, x19, [sp, #48]
  40d7bc:	mov	x29, sp
  40d7c0:	cbz	x0, 40d8c4 <ascii_strlower_n@plt+0x94bc>
  40d7c4:	cmp	x3, #0xb
  40d7c8:	b.ls	40d8e4 <ascii_strlower_n@plt+0x94dc>  // b.plast
  40d7cc:	mov	w8, #0xffff                	// #65535
  40d7d0:	cmp	x3, x8
  40d7d4:	mov	x21, x2
  40d7d8:	csel	x22, x3, x8, cc  // cc = lo, ul, last
  40d7dc:	cmp	x2, #0x10, lsl #12
  40d7e0:	b.cc	40d834 <ascii_strlower_n@plt+0x942c>  // b.lo, b.ul, b.last
  40d7e4:	mov	w0, wzr
  40d7e8:	bl	4039a8 <log_get_max_level_realm@plt>
  40d7ec:	cmp	w0, #0x3
  40d7f0:	b.lt	40d8a4 <ascii_strlower_n@plt+0x949c>  // b.tstop
  40d7f4:	mov	x6, x21
  40d7f8:	ldp	x20, x19, [sp, #48]
  40d7fc:	ldp	x22, x21, [sp, #32]
  40d800:	ldr	x23, [sp, #16]
  40d804:	adrp	x2, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40d808:	adrp	x4, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40d80c:	adrp	x5, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40d810:	mov	w1, #0x1b                  	// #27
  40d814:	add	x2, x2, #0xad6
  40d818:	add	x4, x4, #0xb59
  40d81c:	add	x5, x5, #0xb68
  40d820:	mov	w0, #0x3                   	// #3
  40d824:	movk	w1, #0x4000, lsl #16
  40d828:	mov	w3, #0x38                  	// #56
  40d82c:	ldp	x29, x30, [sp], #64
  40d830:	b	4039b8 <log_internal_realm@plt>
  40d834:	mov	w20, w1
  40d838:	mov	x19, x0
  40d83c:	bl	404058 <page_size@plt>
  40d840:	add	x8, x21, #0xa7
  40d844:	cmp	x21, #0xc
  40d848:	mov	w9, #0x2a7                 	// #679
  40d84c:	csel	x8, x9, x8, cc  // cc = lo, ul, last
  40d850:	add	x8, x0, x8
  40d854:	neg	x9, x0
  40d858:	and	x8, x8, x9
  40d85c:	sub	x8, x8, #0xa8
  40d860:	cmp	x8, x22
  40d864:	csel	x21, x22, x8, hi  // hi = pmore
  40d868:	add	x1, x21, #0xa8
  40d86c:	mov	w0, #0x1                   	// #1
  40d870:	mov	w23, #0x1                   	// #1
  40d874:	bl	404068 <calloc@plt>
  40d878:	cbz	x0, 40d8ac <ascii_strlower_n@plt+0x94a4>
  40d87c:	mov	x8, x0
  40d880:	mov	w0, wzr
  40d884:	mov	w9, #0xc                   	// #12
  40d888:	mov	x10, #0xffffffffffffffff    	// #-1
  40d88c:	stp	w23, w20, [x8]
  40d890:	stp	x9, x21, [x8, #8]
  40d894:	stp	x9, x22, [x8, #24]
  40d898:	stp	x10, x10, [x8, #56]
  40d89c:	str	x8, [x19]
  40d8a0:	b	40d8b0 <ascii_strlower_n@plt+0x94a8>
  40d8a4:	mov	w0, #0xffffffe5            	// #-27
  40d8a8:	b	40d8b0 <ascii_strlower_n@plt+0x94a8>
  40d8ac:	mov	w0, #0xfffffff4            	// #-12
  40d8b0:	ldp	x20, x19, [sp, #48]
  40d8b4:	ldp	x22, x21, [sp, #32]
  40d8b8:	ldr	x23, [sp, #16]
  40d8bc:	ldp	x29, x30, [sp], #64
  40d8c0:	ret
  40d8c4:	adrp	x1, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40d8c8:	adrp	x2, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40d8cc:	adrp	x4, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40d8d0:	add	x1, x1, #0x41e
  40d8d4:	add	x2, x2, #0xad6
  40d8d8:	add	x4, x4, #0xaf8
  40d8dc:	mov	w3, #0x2c                  	// #44
  40d8e0:	bl	403a98 <log_assert_failed_realm@plt>
  40d8e4:	adrp	x1, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40d8e8:	adrp	x2, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40d8ec:	adrp	x4, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40d8f0:	add	x1, x1, #0xb36
  40d8f4:	add	x2, x2, #0xad6
  40d8f8:	add	x4, x4, #0xaf8
  40d8fc:	mov	w3, #0x2d                  	// #45
  40d900:	mov	w0, wzr
  40d904:	bl	403a98 <log_assert_failed_realm@plt>
  40d908:	stp	x29, x30, [sp, #-16]!
  40d90c:	mov	x29, sp
  40d910:	cbz	x0, 40d98c <ascii_strlower_n@plt+0x9584>
  40d914:	ldr	x8, [x0, #40]
  40d918:	ldr	w9, [x0, #4]
  40d91c:	add	x10, x0, #0xa8
  40d920:	cmp	x8, #0x0
  40d924:	csel	x8, x10, x8, eq  // eq = none
  40d928:	cmp	w9, #0x1
  40d92c:	b.eq	40d94c <ascii_strlower_n@plt+0x9544>  // b.none
  40d930:	cmp	w9, #0x2
  40d934:	b.ne	40d968 <ascii_strlower_n@plt+0x9560>  // b.any
  40d938:	tbnz	w2, #0, 40d9ac <ascii_strlower_n@plt+0x95a4>
  40d93c:	mov	w9, wzr
  40d940:	strh	w9, [x8, #2]
  40d944:	ldp	x29, x30, [sp], #16
  40d948:	ret
  40d94c:	tst	w2, #0x1
  40d950:	mov	w9, #0x200                 	// #512
  40d954:	csel	w9, w9, wzr, ne  // ne = any
  40d958:	rev16	w9, w9
  40d95c:	strh	w9, [x8, #2]
  40d960:	ldp	x29, x30, [sp], #16
  40d964:	ret
  40d968:	tbnz	w2, #0, 40d9d0 <ascii_strlower_n@plt+0x95c8>
  40d96c:	tst	w1, #0x1
  40d970:	mov	w9, #0x100                 	// #256
  40d974:	mov	w10, #0x110                 	// #272
  40d978:	csel	w9, w10, w9, ne  // ne = any
  40d97c:	rev16	w9, w9
  40d980:	strh	w9, [x8, #2]
  40d984:	ldp	x29, x30, [sp], #16
  40d988:	ret
  40d98c:	adrp	x1, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40d990:	adrp	x2, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40d994:	adrp	x4, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40d998:	add	x1, x1, #0xb90
  40d99c:	add	x2, x2, #0xad6
  40d9a0:	add	x4, x4, #0xb92
  40d9a4:	mov	w3, #0x5e                  	// #94
  40d9a8:	bl	403a98 <log_assert_failed_realm@plt>
  40d9ac:	adrp	x1, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40d9b0:	adrp	x2, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40d9b4:	adrp	x4, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40d9b8:	add	x1, x1, #0xbc7
  40d9bc:	add	x2, x2, #0xad6
  40d9c0:	add	x4, x4, #0xb92
  40d9c4:	mov	w3, #0x64                  	// #100
  40d9c8:	mov	w0, wzr
  40d9cc:	bl	403a98 <log_assert_failed_realm@plt>
  40d9d0:	adrp	x1, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40d9d4:	adrp	x2, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40d9d8:	adrp	x4, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40d9dc:	add	x1, x1, #0xbc7
  40d9e0:	add	x2, x2, #0xad6
  40d9e4:	add	x4, x4, #0xb92
  40d9e8:	mov	w3, #0x7e                  	// #126
  40d9ec:	mov	w0, wzr
  40d9f0:	bl	403a98 <log_assert_failed_realm@plt>
  40d9f4:	stp	x29, x30, [sp, #-64]!
  40d9f8:	str	x23, [sp, #16]
  40d9fc:	stp	x22, x21, [sp, #32]
  40da00:	stp	x20, x19, [sp, #48]
  40da04:	mov	x29, sp
  40da08:	cbz	x0, 40db48 <ascii_strlower_n@plt+0x9740>
  40da0c:	mov	x22, x2
  40da10:	cmp	x2, #0x10, lsl #12
  40da14:	b.cc	40da84 <ascii_strlower_n@plt+0x967c>  // b.lo, b.ul, b.last
  40da18:	mov	w0, wzr
  40da1c:	bl	4039a8 <log_get_max_level_realm@plt>
  40da20:	cmp	w0, #0x2
  40da24:	b.le	40db24 <ascii_strlower_n@plt+0x971c>
  40da28:	adrp	x2, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40da2c:	adrp	x4, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40da30:	adrp	x5, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40da34:	mov	w1, #0x1b                  	// #27
  40da38:	add	x2, x2, #0xad6
  40da3c:	add	x4, x4, #0xb59
  40da40:	add	x5, x5, #0xb68
  40da44:	mov	w0, #0x3                   	// #3
  40da48:	movk	w1, #0x4000, lsl #16
  40da4c:	mov	w3, #0x38                  	// #56
  40da50:	mov	x6, x22
  40da54:	bl	4039b8 <log_internal_realm@plt>
  40da58:	mov	w8, w0
  40da5c:	tbnz	w0, #31, 40db30 <ascii_strlower_n@plt+0x9728>
  40da60:	adrp	x1, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40da64:	adrp	x2, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40da68:	adrp	x4, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40da6c:	add	x1, x1, #0xb90
  40da70:	add	x2, x2, #0xad6
  40da74:	add	x4, x4, #0xb92
  40da78:	mov	w3, #0x5e                  	// #94
  40da7c:	mov	w0, wzr
  40da80:	bl	403a98 <log_assert_failed_realm@plt>
  40da84:	mov	w20, w3
  40da88:	mov	w21, w1
  40da8c:	mov	x19, x0
  40da90:	bl	404058 <page_size@plt>
  40da94:	add	x8, x22, #0xa7
  40da98:	cmp	x22, #0xc
  40da9c:	mov	w9, #0x2a7                 	// #679
  40daa0:	csel	x8, x9, x8, cc  // cc = lo, ul, last
  40daa4:	neg	x10, x0
  40daa8:	add	x8, x0, x8
  40daac:	and	x8, x8, x10
  40dab0:	sub	x8, x8, #0xa8
  40dab4:	mov	w9, #0xffff                	// #65535
  40dab8:	cmp	x8, x9
  40dabc:	csel	x22, x8, x9, cc  // cc = lo, ul, last
  40dac0:	add	x1, x22, #0xa8
  40dac4:	mov	w0, #0x1                   	// #1
  40dac8:	mov	w23, #0x1                   	// #1
  40dacc:	bl	404068 <calloc@plt>
  40dad0:	cbz	x0, 40db2c <ascii_strlower_n@plt+0x9724>
  40dad4:	adrp	x9, 424000 <ascii_strlower_n@plt+0x1fbf8>
  40dad8:	ldr	q0, [x9, #4032]
  40dadc:	sub	w11, w21, #0x1
  40dae0:	mov	w8, #0xc                   	// #12
  40dae4:	mov	x10, #0xffffffffffffffff    	// #-1
  40dae8:	cmp	w11, #0x2
  40daec:	stp	x8, x22, [x0, #8]
  40daf0:	stp	x10, x10, [x0, #56]
  40daf4:	stur	q0, [x0, #24]
  40daf8:	stp	w23, w21, [x0]
  40dafc:	b.cc	40db18 <ascii_strlower_n@plt+0x9710>  // b.lo, b.ul, b.last
  40db00:	tst	w20, #0x1
  40db04:	mov	w8, #0x100                 	// #256
  40db08:	mov	w9, #0x110                 	// #272
  40db0c:	csel	w8, w9, w8, ne  // ne = any
  40db10:	rev16	w8, w8
  40db14:	strh	w8, [x0, #170]
  40db18:	mov	w8, wzr
  40db1c:	str	x0, [x19]
  40db20:	b	40db30 <ascii_strlower_n@plt+0x9728>
  40db24:	mov	w8, #0xffffffe5            	// #-27
  40db28:	b	40db30 <ascii_strlower_n@plt+0x9728>
  40db2c:	mov	w8, #0xfffffff4            	// #-12
  40db30:	ldp	x20, x19, [sp, #48]
  40db34:	ldp	x22, x21, [sp, #32]
  40db38:	ldr	x23, [sp, #16]
  40db3c:	mov	w0, w8
  40db40:	ldp	x29, x30, [sp], #64
  40db44:	ret
  40db48:	adrp	x1, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40db4c:	adrp	x2, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40db50:	adrp	x4, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40db54:	add	x1, x1, #0x41e
  40db58:	add	x2, x2, #0xad6
  40db5c:	add	x4, x4, #0xbd2
  40db60:	mov	w3, #0x90                  	// #144
  40db64:	bl	403a98 <log_assert_failed_realm@plt>
  40db68:	stp	x29, x30, [sp, #-16]!
  40db6c:	mov	x29, sp
  40db70:	cbz	x0, 40db8c <ascii_strlower_n@plt+0x9784>
  40db74:	ldrb	w8, [x0, #160]
  40db78:	tbnz	w8, #0, 40db94 <ascii_strlower_n@plt+0x978c>
  40db7c:	ldr	w8, [x0]
  40db80:	cbz	w8, 40dbb8 <ascii_strlower_n@plt+0x97b0>
  40db84:	add	w8, w8, #0x1
  40db88:	str	w8, [x0]
  40db8c:	ldp	x29, x30, [sp], #16
  40db90:	ret
  40db94:	adrp	x1, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40db98:	adrp	x2, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40db9c:	adrp	x4, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40dba0:	add	x1, x1, #0xc15
  40dba4:	add	x2, x2, #0xad6
  40dba8:	add	x4, x4, #0xc22
  40dbac:	mov	w3, #0xa4                  	// #164
  40dbb0:	mov	w0, wzr
  40dbb4:	bl	403a98 <log_assert_failed_realm@plt>
  40dbb8:	adrp	x1, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40dbbc:	adrp	x2, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40dbc0:	adrp	x4, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40dbc4:	add	x1, x1, #0xc49
  40dbc8:	add	x2, x2, #0xad6
  40dbcc:	add	x4, x4, #0xc22
  40dbd0:	mov	w3, #0xa6                  	// #166
  40dbd4:	mov	w0, wzr
  40dbd8:	bl	403a98 <log_assert_failed_realm@plt>
  40dbdc:	stp	x29, x30, [sp, #-32]!
  40dbe0:	str	x19, [sp, #16]
  40dbe4:	mov	x29, sp
  40dbe8:	cbz	x0, 40dc4c <ascii_strlower_n@plt+0x9844>
  40dbec:	ldr	w8, [x0]
  40dbf0:	mov	x19, x0
  40dbf4:	cbz	w8, 40dc94 <ascii_strlower_n@plt+0x988c>
  40dbf8:	ldr	x0, [x19, #152]
  40dbfc:	bl	40dbdc <ascii_strlower_n@plt+0x97d4>
  40dc00:	ldr	w8, [x19]
  40dc04:	subs	w8, w8, #0x1
  40dc08:	b.ne	40dc48 <ascii_strlower_n@plt+0x9840>  // b.any
  40dc0c:	ldr	x0, [x19, #72]
  40dc10:	bl	41bf84 <ascii_strlower_n@plt+0x17b7c>
  40dc14:	ldr	x0, [x19, #80]
  40dc18:	bl	419f8c <ascii_strlower_n@plt+0x15b84>
  40dc1c:	ldr	x0, [x19, #88]
  40dc20:	bl	417208 <ascii_strlower_n@plt+0x12e00>
  40dc24:	ldr	x0, [x19, #48]
  40dc28:	add	x2, x29, #0x18
  40dc2c:	mov	w1, #0x1                   	// #1
  40dc30:	str	xzr, [x29, #24]
  40dc34:	bl	404078 <internal_hashmap_first_key_and_value@plt>
  40dc38:	ldr	x0, [x29, #24]
  40dc3c:	cbz	x0, 40dc5c <ascii_strlower_n@plt+0x9854>
  40dc40:	bl	4039d8 <free@plt>
  40dc44:	b	40dc24 <ascii_strlower_n@plt+0x981c>
  40dc48:	str	w8, [x19]
  40dc4c:	ldr	x19, [sp, #16]
  40dc50:	mov	x0, xzr
  40dc54:	ldp	x29, x30, [sp], #32
  40dc58:	ret
  40dc5c:	ldr	x0, [x19, #48]
  40dc60:	mov	x1, xzr
  40dc64:	mov	x2, xzr
  40dc68:	bl	404088 <internal_hashmap_free@plt>
  40dc6c:	ldr	x0, [x19, #40]
  40dc70:	bl	4039d8 <free@plt>
  40dc74:	ldrb	w8, [x19, #160]
  40dc78:	tbnz	w8, #0, 40dc4c <ascii_strlower_n@plt+0x9844>
  40dc7c:	mov	x0, x19
  40dc80:	bl	4039d8 <free@plt>
  40dc84:	ldr	x19, [sp, #16]
  40dc88:	mov	x0, xzr
  40dc8c:	ldp	x29, x30, [sp], #32
  40dc90:	ret
  40dc94:	adrp	x1, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40dc98:	adrp	x2, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40dc9c:	adrp	x4, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40dca0:	add	x1, x1, #0xc49
  40dca4:	add	x2, x2, #0xad6
  40dca8:	add	x4, x4, #0xc56
  40dcac:	mov	w3, #0xc2                  	// #194
  40dcb0:	mov	w0, wzr
  40dcb4:	bl	403a98 <log_assert_failed_realm@plt>
  40dcb8:	stp	x29, x30, [sp, #-16]!
  40dcbc:	mov	x29, sp
  40dcc0:	cbz	x0, 40dce4 <ascii_strlower_n@plt+0x98dc>
  40dcc4:	ldr	x8, [x0, #8]
  40dcc8:	mov	w9, #0xfff4                	// #65524
  40dccc:	sub	x8, x8, #0xc
  40dcd0:	cmp	x8, x9
  40dcd4:	mov	w8, #0xffffffb6            	// #-74
  40dcd8:	csinc	w0, w8, wzr, cs  // cs = hs, nlast
  40dcdc:	ldp	x29, x30, [sp], #16
  40dce0:	ret
  40dce4:	adrp	x1, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40dce8:	adrp	x2, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40dcec:	adrp	x4, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40dcf0:	add	x1, x1, #0xb90
  40dcf4:	add	x2, x2, #0xad6
  40dcf8:	add	x4, x4, #0xc7f
  40dcfc:	mov	w3, #0xcf                  	// #207
  40dd00:	bl	403a98 <log_assert_failed_realm@plt>
  40dd04:	stp	x29, x30, [sp, #-16]!
  40dd08:	mov	x29, sp
  40dd0c:	cbz	x0, 40dda4 <ascii_strlower_n@plt+0x999c>
  40dd10:	ldr	x8, [x0, #8]
  40dd14:	mov	w9, #0xfff3                	// #65523
  40dd18:	sub	x8, x8, #0xc
  40dd1c:	cmp	x8, x9
  40dd20:	b.hi	40dd50 <ascii_strlower_n@plt+0x9948>  // b.pmore
  40dd24:	ldr	x8, [x0, #40]
  40dd28:	add	x9, x0, #0xa8
  40dd2c:	cmp	x8, #0x0
  40dd30:	csel	x9, x9, x8, eq  // eq = none
  40dd34:	ldrh	w8, [x9, #2]
  40dd38:	tbnz	w8, #7, 40dd48 <ascii_strlower_n@plt+0x9940>
  40dd3c:	mov	w0, wzr
  40dd40:	ldp	x29, x30, [sp], #16
  40dd44:	ret
  40dd48:	tst	w8, #0x78
  40dd4c:	b.eq	40dd5c <ascii_strlower_n@plt+0x9954>  // b.none
  40dd50:	mov	w0, #0xffffffb6            	// #-74
  40dd54:	ldp	x29, x30, [sp], #16
  40dd58:	ret
  40dd5c:	ldr	w10, [x0, #4]
  40dd60:	cmp	w10, #0x1
  40dd64:	b.eq	40dd80 <ascii_strlower_n@plt+0x9978>  // b.none
  40dd68:	cmp	w10, #0x2
  40dd6c:	b.ne	40dd98 <ascii_strlower_n@plt+0x9990>  // b.any
  40dd70:	ldrh	w8, [x9, #4]
  40dd74:	cmp	w8, #0x100
  40dd78:	b.eq	40dd98 <ascii_strlower_n@plt+0x9990>  // b.none
  40dd7c:	b	40dd50 <ascii_strlower_n@plt+0x9948>
  40dd80:	ldr	x9, [x0, #88]
  40dd84:	cbz	x9, 40dd8c <ascii_strlower_n@plt+0x9984>
  40dd88:	ldrb	w9, [x9, #27]
  40dd8c:	ubfx	w8, w8, #8, #4
  40dd90:	orr	w8, w8, w9
  40dd94:	cbnz	w8, 40dd50 <ascii_strlower_n@plt+0x9948>
  40dd98:	mov	w0, #0x1                   	// #1
  40dd9c:	ldp	x29, x30, [sp], #16
  40dda0:	ret
  40dda4:	adrp	x1, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40dda8:	adrp	x2, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40ddac:	adrp	x4, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40ddb0:	add	x1, x1, #0xb90
  40ddb4:	add	x2, x2, #0xad6
  40ddb8:	add	x4, x4, #0xca4
  40ddbc:	mov	w3, #0xdd                  	// #221
  40ddc0:	bl	403a98 <log_assert_failed_realm@plt>
  40ddc4:	stp	x29, x30, [sp, #-16]!
  40ddc8:	mov	x29, sp
  40ddcc:	cbz	x0, 40de88 <ascii_strlower_n@plt+0x9a80>
  40ddd0:	ldr	x8, [x0, #8]
  40ddd4:	mov	w9, #0xfff3                	// #65523
  40ddd8:	sub	x8, x8, #0xc
  40dddc:	cmp	x8, x9
  40dde0:	b.hi	40de08 <ascii_strlower_n@plt+0x9a00>  // b.pmore
  40dde4:	ldr	x8, [x0, #40]
  40dde8:	add	x9, x0, #0xa8
  40ddec:	cmp	x8, #0x0
  40ddf0:	csel	x9, x9, x8, eq  // eq = none
  40ddf4:	ldrh	w8, [x9, #2]
  40ddf8:	tbnz	w8, #7, 40de14 <ascii_strlower_n@plt+0x9a0c>
  40ddfc:	mov	w10, #0x7a                  	// #122
  40de00:	tst	w8, w10
  40de04:	b.eq	40de20 <ascii_strlower_n@plt+0x9a18>  // b.none
  40de08:	mov	w0, #0xffffffb6            	// #-74
  40de0c:	ldp	x29, x30, [sp], #16
  40de10:	ret
  40de14:	mov	w0, wzr
  40de18:	ldp	x29, x30, [sp], #16
  40de1c:	ret
  40de20:	ldr	w10, [x0, #4]
  40de24:	cmp	w10, #0x2
  40de28:	b.eq	40de38 <ascii_strlower_n@plt+0x9a30>  // b.none
  40de2c:	cmp	w10, #0x1
  40de30:	b.eq	40de58 <ascii_strlower_n@plt+0x9a50>  // b.none
  40de34:	cbnz	w10, 40de7c <ascii_strlower_n@plt+0x9a74>
  40de38:	ldrh	w8, [x9, #4]
  40de3c:	cmp	w8, #0x100
  40de40:	b.ne	40de08 <ascii_strlower_n@plt+0x9a00>  // b.any
  40de44:	ldrh	w8, [x9, #6]
  40de48:	cbnz	w8, 40de08 <ascii_strlower_n@plt+0x9a00>
  40de4c:	ldrh	w8, [x9, #8]
  40de50:	cbnz	w8, 40de08 <ascii_strlower_n@plt+0x9a00>
  40de54:	b	40de7c <ascii_strlower_n@plt+0x9a74>
  40de58:	mov	w9, #0xb005                	// #45061
  40de5c:	tst	w8, w9
  40de60:	b.ne	40de08 <ascii_strlower_n@plt+0x9a00>  // b.any
  40de64:	ldr	x9, [x0, #88]
  40de68:	cbz	x9, 40de70 <ascii_strlower_n@plt+0x9a68>
  40de6c:	ldrb	w9, [x9, #27]
  40de70:	ubfx	w8, w8, #8, #4
  40de74:	orr	w8, w8, w9
  40de78:	cbnz	w8, 40de08 <ascii_strlower_n@plt+0x9a00>
  40de7c:	mov	w0, #0x1                   	// #1
  40de80:	ldp	x29, x30, [sp], #16
  40de84:	ret
  40de88:	adrp	x1, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40de8c:	adrp	x2, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40de90:	adrp	x4, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40de94:	add	x1, x1, #0xb90
  40de98:	add	x2, x2, #0xad6
  40de9c:	add	x4, x4, #0xccf
  40dea0:	mov	w3, #0x103                 	// #259
  40dea4:	bl	403a98 <log_assert_failed_realm@plt>
  40dea8:	sub	sp, sp, #0x40
  40deac:	stp	x29, x30, [sp, #32]
  40deb0:	stp	x20, x19, [sp, #48]
  40deb4:	add	x29, sp, #0x20
  40deb8:	cbz	x0, 40df2c <ascii_strlower_n@plt+0x9b24>
  40debc:	ldr	x8, [x0, #8]
  40dec0:	mov	x19, x1
  40dec4:	mov	x20, x0
  40dec8:	cmp	x8, x1
  40decc:	b.ls	40df1c <ascii_strlower_n@plt+0x9b14>  // b.plast
  40ded0:	mov	w8, #0xfffffffe            	// #-2
  40ded4:	str	w8, [sp, #16]
  40ded8:	str	xzr, [sp, #24]
  40dedc:	ldr	x0, [x20, #48]
  40dee0:	add	x1, sp, #0x10
  40dee4:	mov	x2, sp
  40dee8:	add	x3, sp, #0x8
  40deec:	bl	404098 <internal_hashmap_iterate@plt>
  40def0:	tbz	w0, #0, 40df18 <ascii_strlower_n@plt+0x9b10>
  40def4:	ldr	x8, [sp]
  40def8:	cmp	x8, x19
  40defc:	b.cc	40dedc <ascii_strlower_n@plt+0x9ad4>  // b.lo, b.ul, b.last
  40df00:	ldr	x0, [x20, #48]
  40df04:	ldr	x1, [sp, #8]
  40df08:	bl	4040a8 <internal_hashmap_remove@plt>
  40df0c:	ldr	x0, [sp, #8]
  40df10:	bl	4039d8 <free@plt>
  40df14:	b	40dedc <ascii_strlower_n@plt+0x9ad4>
  40df18:	str	x19, [x20, #8]
  40df1c:	ldp	x20, x19, [sp, #48]
  40df20:	ldp	x29, x30, [sp, #32]
  40df24:	add	sp, sp, #0x40
  40df28:	ret
  40df2c:	adrp	x1, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40df30:	adrp	x2, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40df34:	adrp	x4, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40df38:	add	x1, x1, #0xb90
  40df3c:	add	x2, x2, #0xad6
  40df40:	add	x4, x4, #0xcfa
  40df44:	mov	w3, #0x169                 	// #361
  40df48:	bl	403a98 <log_assert_failed_realm@plt>
  40df4c:	sub	sp, sp, #0x30
  40df50:	stp	x29, x30, [sp, #16]
  40df54:	stp	x20, x19, [sp, #32]
  40df58:	add	x29, sp, #0x10
  40df5c:	cbz	x0, 40dfa4 <ascii_strlower_n@plt+0x9b9c>
  40df60:	mov	x19, x2
  40df64:	mov	x20, x1
  40df68:	add	x2, sp, #0x8
  40df6c:	mov	x1, x19
  40df70:	bl	40dfe8 <ascii_strlower_n@plt+0x9be0>
  40df74:	tbnz	w0, #31, 40df94 <ascii_strlower_n@plt+0x9b8c>
  40df78:	cbz	x19, 40df90 <ascii_strlower_n@plt+0x9b88>
  40df7c:	cbz	x20, 40dfc4 <ascii_strlower_n@plt+0x9bbc>
  40df80:	ldr	x0, [sp, #8]
  40df84:	mov	x1, x20
  40df88:	mov	x2, x19
  40df8c:	bl	403c68 <memcpy@plt>
  40df90:	mov	w0, wzr
  40df94:	ldp	x20, x19, [sp, #32]
  40df98:	ldp	x29, x30, [sp, #16]
  40df9c:	add	sp, sp, #0x30
  40dfa0:	ret
  40dfa4:	adrp	x1, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40dfa8:	adrp	x2, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40dfac:	adrp	x4, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40dfb0:	add	x1, x1, #0xb90
  40dfb4:	add	x2, x2, #0xad6
  40dfb8:	add	x4, x4, #0xd28
  40dfbc:	mov	w3, #0x17e                 	// #382
  40dfc0:	bl	403a98 <log_assert_failed_realm@plt>
  40dfc4:	adrp	x1, 422000 <ascii_strlower_n@plt+0x1dbf8>
  40dfc8:	adrp	x2, 422000 <ascii_strlower_n@plt+0x1dbf8>
  40dfcc:	adrp	x4, 422000 <ascii_strlower_n@plt+0x1dbf8>
  40dfd0:	add	x1, x1, #0x540
  40dfd4:	add	x2, x2, #0x547
  40dfd8:	add	x4, x4, #0x55f
  40dfdc:	mov	w3, #0x14                  	// #20
  40dfe0:	mov	w0, wzr
  40dfe4:	bl	403a98 <log_assert_failed_realm@plt>
  40dfe8:	stp	x29, x30, [sp, #-80]!
  40dfec:	str	x25, [sp, #16]
  40dff0:	stp	x24, x23, [sp, #32]
  40dff4:	stp	x22, x21, [sp, #48]
  40dff8:	stp	x20, x19, [sp, #64]
  40dffc:	mov	x29, sp
  40e000:	cbz	x0, 40e114 <ascii_strlower_n@plt+0x9d0c>
  40e004:	ldp	x23, x8, [x0, #8]
  40e008:	mov	x22, x3
  40e00c:	mov	x21, x2
  40e010:	mov	x20, x1
  40e014:	add	x25, x23, x1
  40e018:	mov	x19, x0
  40e01c:	cmp	x25, x8
  40e020:	b.ls	40e0b4 <ascii_strlower_n@plt+0x9cac>  // b.plast
  40e024:	bl	404058 <page_size@plt>
  40e028:	ldr	x9, [x19, #32]
  40e02c:	add	x8, x0, x25, lsl #1
  40e030:	neg	x10, x0
  40e034:	sub	x8, x8, #0x1
  40e038:	and	x8, x8, x10
  40e03c:	cmp	x9, #0x0
  40e040:	mov	w10, #0xffff                	// #65535
  40e044:	csel	x9, x10, x9, eq  // eq = none
  40e048:	cmp	x8, x9
  40e04c:	csel	x24, x9, x8, hi  // hi = pmore
  40e050:	cmp	x25, x24
  40e054:	b.ls	40e060 <ascii_strlower_n@plt+0x9c58>  // b.plast
  40e058:	mov	w0, #0xffffffa6            	// #-90
  40e05c:	b	40e0f4 <ascii_strlower_n@plt+0x9cec>
  40e060:	ldr	x0, [x19, #40]
  40e064:	cbz	x0, 40e07c <ascii_strlower_n@plt+0x9c74>
  40e068:	mov	x1, x24
  40e06c:	bl	4040b8 <realloc@plt>
  40e070:	cbz	x0, 40e10c <ascii_strlower_n@plt+0x9d04>
  40e074:	str	x0, [x19, #40]
  40e078:	b	40e0b0 <ascii_strlower_n@plt+0x9ca8>
  40e07c:	mov	x0, x24
  40e080:	bl	4040c8 <malloc@plt>
  40e084:	str	x0, [x19, #40]
  40e088:	cbz	x0, 40e10c <ascii_strlower_n@plt+0x9d04>
  40e08c:	add	x1, x19, #0xa8
  40e090:	mov	x2, x23
  40e094:	mov	x25, x0
  40e098:	bl	403c68 <memcpy@plt>
  40e09c:	subs	x2, x24, x23
  40e0a0:	b.eq	40e0b0 <ascii_strlower_n@plt+0x9ca8>  // b.none
  40e0a4:	add	x0, x25, x23
  40e0a8:	mov	w1, wzr
  40e0ac:	bl	403c58 <memset@plt>
  40e0b0:	str	x24, [x19, #16]
  40e0b4:	cbz	x22, 40e0c0 <ascii_strlower_n@plt+0x9cb8>
  40e0b8:	ldr	x8, [x19, #8]
  40e0bc:	str	x8, [x22]
  40e0c0:	cbz	x21, 40e0e4 <ascii_strlower_n@plt+0x9cdc>
  40e0c4:	ldr	x9, [x19, #40]
  40e0c8:	ldr	x8, [x19, #8]
  40e0cc:	add	x10, x19, #0xa8
  40e0d0:	cmp	x9, #0x0
  40e0d4:	csel	x9, x10, x9, eq  // eq = none
  40e0d8:	add	x9, x9, x8
  40e0dc:	str	x9, [x21]
  40e0e0:	b	40e0e8 <ascii_strlower_n@plt+0x9ce0>
  40e0e4:	ldr	x8, [x19, #8]
  40e0e8:	mov	w0, wzr
  40e0ec:	add	x8, x8, x20
  40e0f0:	str	x8, [x19, #8]
  40e0f4:	ldp	x20, x19, [sp, #64]
  40e0f8:	ldp	x22, x21, [sp, #48]
  40e0fc:	ldp	x24, x23, [sp, #32]
  40e100:	ldr	x25, [sp, #16]
  40e104:	ldp	x29, x30, [sp], #80
  40e108:	ret
  40e10c:	mov	w0, #0xfffffff4            	// #-12
  40e110:	b	40e0f4 <ascii_strlower_n@plt+0x9cec>
  40e114:	adrp	x1, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40e118:	adrp	x2, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40e11c:	adrp	x4, 422000 <ascii_strlower_n@plt+0x1dbf8>
  40e120:	add	x1, x1, #0xb90
  40e124:	add	x2, x2, #0xad6
  40e128:	add	x4, x4, #0x502
  40e12c:	mov	w3, #0x138                 	// #312
  40e130:	bl	403a98 <log_assert_failed_realm@plt>
  40e134:	stp	x29, x30, [sp, #-32]!
  40e138:	str	x19, [sp, #16]
  40e13c:	mov	x29, sp
  40e140:	cbz	x0, 40e174 <ascii_strlower_n@plt+0x9d6c>
  40e144:	mov	x3, x2
  40e148:	mov	w19, w1
  40e14c:	add	x2, x29, #0x18
  40e150:	mov	w1, #0x1                   	// #1
  40e154:	bl	40dfe8 <ascii_strlower_n@plt+0x9be0>
  40e158:	tbnz	w0, #31, 40e168 <ascii_strlower_n@plt+0x9d60>
  40e15c:	ldr	x8, [x29, #24]
  40e160:	mov	w0, wzr
  40e164:	strb	w19, [x8]
  40e168:	ldr	x19, [sp, #16]
  40e16c:	ldp	x29, x30, [sp], #32
  40e170:	ret
  40e174:	adrp	x1, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40e178:	adrp	x2, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40e17c:	adrp	x4, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40e180:	add	x1, x1, #0xb90
  40e184:	add	x2, x2, #0xad6
  40e188:	add	x4, x4, #0xd70
  40e18c:	mov	w3, #0x18c                 	// #396
  40e190:	bl	403a98 <log_assert_failed_realm@plt>
  40e194:	stp	x29, x30, [sp, #-32]!
  40e198:	str	x19, [sp, #16]
  40e19c:	mov	x29, sp
  40e1a0:	cbz	x0, 40e1dc <ascii_strlower_n@plt+0x9dd4>
  40e1a4:	mov	x3, x2
  40e1a8:	mov	w19, w1
  40e1ac:	add	x2, x29, #0x18
  40e1b0:	mov	w1, #0x2                   	// #2
  40e1b4:	bl	40dfe8 <ascii_strlower_n@plt+0x9be0>
  40e1b8:	tbnz	w0, #31, 40e1d0 <ascii_strlower_n@plt+0x9dc8>
  40e1bc:	ldr	x8, [x29, #24]
  40e1c0:	rev	w9, w19
  40e1c4:	mov	w0, wzr
  40e1c8:	lsr	w9, w9, #16
  40e1cc:	strh	w9, [x8]
  40e1d0:	ldr	x19, [sp, #16]
  40e1d4:	ldp	x29, x30, [sp], #32
  40e1d8:	ret
  40e1dc:	adrp	x1, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40e1e0:	adrp	x2, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40e1e4:	adrp	x4, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40e1e8:	add	x1, x1, #0xb90
  40e1ec:	add	x2, x2, #0xad6
  40e1f0:	add	x4, x4, #0xdac
  40e1f4:	mov	w3, #0x19b                 	// #411
  40e1f8:	bl	403a98 <log_assert_failed_realm@plt>
  40e1fc:	stp	x29, x30, [sp, #-32]!
  40e200:	str	x19, [sp, #16]
  40e204:	mov	x29, sp
  40e208:	cbz	x0, 40e240 <ascii_strlower_n@plt+0x9e38>
  40e20c:	mov	x3, x2
  40e210:	mov	w19, w1
  40e214:	add	x2, x29, #0x18
  40e218:	mov	w1, #0x4                   	// #4
  40e21c:	bl	40dfe8 <ascii_strlower_n@plt+0x9be0>
  40e220:	tbnz	w0, #31, 40e234 <ascii_strlower_n@plt+0x9e2c>
  40e224:	ldr	x8, [x29, #24]
  40e228:	mov	w0, wzr
  40e22c:	rev	w9, w19
  40e230:	str	w9, [x8]
  40e234:	ldr	x19, [sp, #16]
  40e238:	ldp	x29, x30, [sp], #32
  40e23c:	ret
  40e240:	adrp	x1, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40e244:	adrp	x2, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40e248:	adrp	x4, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40e24c:	add	x1, x1, #0xb90
  40e250:	add	x2, x2, #0xad6
  40e254:	add	x4, x4, #0xdea
  40e258:	mov	w3, #0x1aa                 	// #426
  40e25c:	bl	403a98 <log_assert_failed_realm@plt>
  40e260:	sub	sp, sp, #0x40
  40e264:	stp	x29, x30, [sp, #16]
  40e268:	stp	x22, x21, [sp, #32]
  40e26c:	stp	x20, x19, [sp, #48]
  40e270:	add	x29, sp, #0x10
  40e274:	cbz	x0, 40e2f4 <ascii_strlower_n@plt+0x9eec>
  40e278:	mov	x19, x1
  40e27c:	cbz	x1, 40e314 <ascii_strlower_n@plt+0x9f0c>
  40e280:	mov	x22, x0
  40e284:	mov	x0, x19
  40e288:	mov	x21, x2
  40e28c:	bl	403d28 <strlen@plt>
  40e290:	cmp	x0, #0xff
  40e294:	b.ls	40e2a0 <ascii_strlower_n@plt+0x9e98>  // b.plast
  40e298:	mov	w0, #0xfffffff9            	// #-7
  40e29c:	b	40e2e0 <ascii_strlower_n@plt+0x9ed8>
  40e2a0:	mov	x20, x0
  40e2a4:	add	x1, x0, #0x1
  40e2a8:	add	x2, sp, #0x8
  40e2ac:	mov	x0, x22
  40e2b0:	mov	x3, x21
  40e2b4:	bl	40dfe8 <ascii_strlower_n@plt+0x9be0>
  40e2b8:	tbnz	w0, #31, 40e2e0 <ascii_strlower_n@plt+0x9ed8>
  40e2bc:	ldr	x8, [sp, #8]
  40e2c0:	strb	w20, [x8]
  40e2c4:	cbz	x20, 40e2dc <ascii_strlower_n@plt+0x9ed4>
  40e2c8:	ldr	x8, [sp, #8]
  40e2cc:	mov	x1, x19
  40e2d0:	mov	x2, x20
  40e2d4:	add	x0, x8, #0x1
  40e2d8:	bl	403c68 <memcpy@plt>
  40e2dc:	mov	w0, wzr
  40e2e0:	ldp	x20, x19, [sp, #48]
  40e2e4:	ldp	x22, x21, [sp, #32]
  40e2e8:	ldp	x29, x30, [sp, #16]
  40e2ec:	add	sp, sp, #0x40
  40e2f0:	ret
  40e2f4:	adrp	x1, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40e2f8:	adrp	x2, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40e2fc:	adrp	x4, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40e300:	add	x1, x1, #0xb90
  40e304:	add	x2, x2, #0xad6
  40e308:	add	x4, x4, #0xe28
  40e30c:	mov	w3, #0x1b6                 	// #438
  40e310:	bl	403a98 <log_assert_failed_realm@plt>
  40e314:	adrp	x1, 41e000 <ascii_strlower_n@plt+0x19bf8>
  40e318:	adrp	x2, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40e31c:	adrp	x4, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40e320:	add	x1, x1, #0x712
  40e324:	add	x2, x2, #0xad6
  40e328:	add	x4, x4, #0xe28
  40e32c:	mov	w3, #0x1b7                 	// #439
  40e330:	mov	w0, wzr
  40e334:	bl	403a98 <log_assert_failed_realm@plt>
  40e338:	sub	sp, sp, #0x30
  40e33c:	stp	x29, x30, [sp, #16]
  40e340:	stp	x20, x19, [sp, #32]
  40e344:	add	x29, sp, #0x10
  40e348:	cbz	x0, 40e3c0 <ascii_strlower_n@plt+0x9fb8>
  40e34c:	mov	x19, x2
  40e350:	mov	x20, x1
  40e354:	cbnz	x1, 40e35c <ascii_strlower_n@plt+0x9f54>
  40e358:	cbnz	x19, 40e3e0 <ascii_strlower_n@plt+0x9fd8>
  40e35c:	cmp	x19, #0xff
  40e360:	b.ls	40e378 <ascii_strlower_n@plt+0x9f70>  // b.plast
  40e364:	mov	w0, #0xfffffff9            	// #-7
  40e368:	ldp	x20, x19, [sp, #32]
  40e36c:	ldp	x29, x30, [sp, #16]
  40e370:	add	sp, sp, #0x30
  40e374:	ret
  40e378:	add	x1, x19, #0x1
  40e37c:	add	x2, sp, #0x8
  40e380:	bl	40dfe8 <ascii_strlower_n@plt+0x9be0>
  40e384:	tbnz	w0, #31, 40e368 <ascii_strlower_n@plt+0x9f60>
  40e388:	ldr	x8, [sp, #8]
  40e38c:	strb	w19, [x8]
  40e390:	cbz	x19, 40e3ac <ascii_strlower_n@plt+0x9fa4>
  40e394:	cbz	x20, 40e404 <ascii_strlower_n@plt+0x9ffc>
  40e398:	ldr	x8, [sp, #8]
  40e39c:	mov	x1, x20
  40e3a0:	mov	x2, x19
  40e3a4:	add	x0, x8, #0x1
  40e3a8:	bl	403c68 <memcpy@plt>
  40e3ac:	mov	w0, wzr
  40e3b0:	ldp	x20, x19, [sp, #32]
  40e3b4:	ldp	x29, x30, [sp, #16]
  40e3b8:	add	sp, sp, #0x30
  40e3bc:	ret
  40e3c0:	adrp	x1, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40e3c4:	adrp	x2, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40e3c8:	adrp	x4, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40e3cc:	add	x1, x1, #0xb90
  40e3d0:	add	x2, x2, #0xad6
  40e3d4:	add	x4, x4, #0xe6a
  40e3d8:	mov	w3, #0x1c0                 	// #448
  40e3dc:	bl	403a98 <log_assert_failed_realm@plt>
  40e3e0:	adrp	x1, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40e3e4:	adrp	x2, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40e3e8:	adrp	x4, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40e3ec:	add	x1, x1, #0xeb8
  40e3f0:	add	x2, x2, #0xad6
  40e3f4:	add	x4, x4, #0xe6a
  40e3f8:	mov	w3, #0x1c1                 	// #449
  40e3fc:	mov	w0, wzr
  40e400:	bl	403a98 <log_assert_failed_realm@plt>
  40e404:	adrp	x1, 422000 <ascii_strlower_n@plt+0x1dbf8>
  40e408:	adrp	x2, 422000 <ascii_strlower_n@plt+0x1dbf8>
  40e40c:	adrp	x4, 422000 <ascii_strlower_n@plt+0x1dbf8>
  40e410:	add	x1, x1, #0x540
  40e414:	add	x2, x2, #0x547
  40e418:	add	x4, x4, #0x55f
  40e41c:	mov	w3, #0x14                  	// #20
  40e420:	mov	w0, wzr
  40e424:	bl	403a98 <log_assert_failed_realm@plt>
  40e428:	sub	sp, sp, #0x40
  40e42c:	stp	x29, x30, [sp, #16]
  40e430:	stp	x22, x21, [sp, #32]
  40e434:	stp	x20, x19, [sp, #48]
  40e438:	add	x29, sp, #0x10
  40e43c:	cbz	x0, 40e4e4 <ascii_strlower_n@plt+0xa0dc>
  40e440:	mov	x20, x1
  40e444:	cbz	x1, 40e504 <ascii_strlower_n@plt+0xa0fc>
  40e448:	mov	x19, x2
  40e44c:	cmp	x2, #0x3f
  40e450:	b.ls	40e45c <ascii_strlower_n@plt+0xa054>  // b.plast
  40e454:	mov	w0, #0xfffffff9            	// #-7
  40e458:	b	40e4d0 <ascii_strlower_n@plt+0xa0c8>
  40e45c:	mov	w21, w3
  40e460:	add	x1, x19, #0x1
  40e464:	add	x2, sp, #0x8
  40e468:	mov	x3, x4
  40e46c:	mov	x22, x0
  40e470:	bl	40dfe8 <ascii_strlower_n@plt+0x9be0>
  40e474:	tbnz	w0, #31, 40e4d0 <ascii_strlower_n@plt+0xa0c8>
  40e478:	ldr	x8, [sp, #8]
  40e47c:	add	x9, x8, #0x1
  40e480:	str	x9, [sp, #8]
  40e484:	strb	w19, [x8]
  40e488:	ldrb	w8, [x22, #160]
  40e48c:	tbz	w8, #3, 40e4bc <ascii_strlower_n@plt+0xa0b4>
  40e490:	tbz	w21, #0, 40e4bc <ascii_strlower_n@plt+0xa0b4>
  40e494:	cbz	x19, 40e4cc <ascii_strlower_n@plt+0xa0c4>
  40e498:	mov	x21, xzr
  40e49c:	ldrb	w0, [x20, x21]
  40e4a0:	bl	4040d8 <ascii_tolower@plt>
  40e4a4:	ldr	x8, [sp, #8]
  40e4a8:	strb	w0, [x8, x21]
  40e4ac:	add	x21, x21, #0x1
  40e4b0:	cmp	x19, x21
  40e4b4:	b.ne	40e49c <ascii_strlower_n@plt+0xa094>  // b.any
  40e4b8:	b	40e4cc <ascii_strlower_n@plt+0xa0c4>
  40e4bc:	ldr	x0, [sp, #8]
  40e4c0:	mov	x1, x20
  40e4c4:	mov	x2, x19
  40e4c8:	bl	403c68 <memcpy@plt>
  40e4cc:	mov	w0, wzr
  40e4d0:	ldp	x20, x19, [sp, #48]
  40e4d4:	ldp	x22, x21, [sp, #32]
  40e4d8:	ldp	x29, x30, [sp, #16]
  40e4dc:	add	sp, sp, #0x40
  40e4e0:	ret
  40e4e4:	adrp	x1, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40e4e8:	adrp	x2, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40e4ec:	adrp	x4, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40e4f0:	add	x1, x1, #0xb90
  40e4f4:	add	x2, x2, #0xad6
  40e4f8:	add	x4, x4, #0xec7
  40e4fc:	mov	w3, #0x1da                 	// #474
  40e500:	bl	403a98 <log_assert_failed_realm@plt>
  40e504:	adrp	x1, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40e508:	adrp	x2, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40e50c:	adrp	x4, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40e510:	add	x1, x1, #0xf17
  40e514:	add	x2, x2, #0xad6
  40e518:	add	x4, x4, #0xec7
  40e51c:	mov	w3, #0x1db                 	// #475
  40e520:	mov	w0, wzr
  40e524:	bl	403a98 <log_assert_failed_realm@plt>
  40e528:	sub	sp, sp, #0xc0
  40e52c:	stp	x29, x30, [sp, #96]
  40e530:	add	x29, sp, #0x60
  40e534:	stp	x28, x27, [sp, #112]
  40e538:	stp	x26, x25, [sp, #128]
  40e53c:	stp	x24, x23, [sp, #144]
  40e540:	stp	x22, x21, [sp, #160]
  40e544:	stp	x20, x19, [sp, #176]
  40e548:	stur	x1, [x29, #-24]
  40e54c:	cbz	x0, 40e9c0 <ascii_strlower_n@plt+0xa5b8>
  40e550:	cbz	x1, 40e9e0 <ascii_strlower_n@plt+0xa5d8>
  40e554:	ldrb	w24, [x0, #160]
  40e558:	ldr	x26, [x0, #8]
  40e55c:	mov	x19, x0
  40e560:	mov	x0, x1
  40e564:	mov	x20, x4
  40e568:	mov	w23, w3
  40e56c:	mov	w22, w2
  40e570:	bl	4040e8 <dns_name_is_root@plt>
  40e574:	tbz	w0, #0, 40e5c4 <ascii_strlower_n@plt+0xa1bc>
  40e578:	ldp	x21, x8, [x19, #8]
  40e57c:	add	x24, x21, #0x1
  40e580:	cmp	x24, x8
  40e584:	b.ls	40e7a4 <ascii_strlower_n@plt+0xa39c>  // b.plast
  40e588:	bl	404058 <page_size@plt>
  40e58c:	ldr	x9, [x19, #32]
  40e590:	add	x8, x0, x24, lsl #1
  40e594:	neg	x10, x0
  40e598:	sub	x8, x8, #0x1
  40e59c:	and	x8, x8, x10
  40e5a0:	cmp	x9, #0x0
  40e5a4:	mov	w10, #0xffff                	// #65535
  40e5a8:	csel	x9, x10, x9, eq  // eq = none
  40e5ac:	cmp	x8, x9
  40e5b0:	csel	x22, x9, x8, hi  // hi = pmore
  40e5b4:	cmp	x24, x22
  40e5b8:	b.ls	40e7ac <ascii_strlower_n@plt+0xa3a4>  // b.plast
  40e5bc:	mov	w22, #0xffffffa6            	// #-90
  40e5c0:	b	40e8b4 <ascii_strlower_n@plt+0xa4ac>
  40e5c4:	add	x21, x19, #0x30
  40e5c8:	eor	w27, w23, #0x1
  40e5cc:	tbnz	w24, #2, 40e710 <ascii_strlower_n@plt+0xa308>
  40e5d0:	tbz	w22, #0, 40e710 <ascii_strlower_n@plt+0xa308>
  40e5d4:	adrp	x23, 43f000 <ascii_strlower_n@plt+0x3abf8>
  40e5d8:	ldr	x23, [x23, #2672]
  40e5dc:	add	x28, sp, #0x8
  40e5e0:	ldur	x25, [x29, #-24]
  40e5e4:	stur	xzr, [x29, #-16]
  40e5e8:	ldr	x0, [x21]
  40e5ec:	mov	x1, x25
  40e5f0:	bl	4040f8 <internal_hashmap_get@plt>
  40e5f4:	stur	x0, [x29, #-16]
  40e5f8:	cbz	x0, 40e614 <ascii_strlower_n@plt+0xa20c>
  40e5fc:	ldr	x24, [x19, #8]
  40e600:	mov	x22, x0
  40e604:	cmp	x24, x0
  40e608:	b.ls	40ea04 <ascii_strlower_n@plt+0xa5fc>  // b.plast
  40e60c:	cmp	x22, #0x4, lsl #12
  40e610:	b.cc	40e8d8 <ascii_strlower_n@plt+0xa4d0>  // b.lo, b.ul, b.last
  40e614:	sub	x0, x29, #0x18
  40e618:	add	x1, sp, #0x8
  40e61c:	mov	w2, #0x3f                  	// #63
  40e620:	mov	w3, wzr
  40e624:	bl	404108 <dns_label_unescape@plt>
  40e628:	mov	w22, w0
  40e62c:	tbnz	w0, #31, 40e85c <ascii_strlower_n@plt+0xa454>
  40e630:	cmp	w22, #0x3f
  40e634:	b.hi	40e7d4 <ascii_strlower_n@plt+0xa3cc>  // b.pmore
  40e638:	mov	w24, w22
  40e63c:	add	x1, x24, #0x1
  40e640:	sub	x2, x29, #0x8
  40e644:	sub	x3, x29, #0x10
  40e648:	mov	x0, x19
  40e64c:	bl	40dfe8 <ascii_strlower_n@plt+0x9be0>
  40e650:	tbnz	w0, #31, 40e7dc <ascii_strlower_n@plt+0xa3d4>
  40e654:	ldur	x8, [x29, #-8]
  40e658:	add	x9, x8, #0x1
  40e65c:	stur	x9, [x29, #-8]
  40e660:	strb	w22, [x8]
  40e664:	ldrb	w8, [x19, #160]
  40e668:	tst	w8, #0x8
  40e66c:	cset	w8, eq  // eq = none
  40e670:	orr	w8, w8, w27
  40e674:	tbz	w8, #0, 40e68c <ascii_strlower_n@plt+0xa284>
  40e678:	ldur	x0, [x29, #-8]
  40e67c:	add	x1, sp, #0x8
  40e680:	mov	x2, x24
  40e684:	bl	403c68 <memcpy@plt>
  40e688:	b	40e6b0 <ascii_strlower_n@plt+0xa2a8>
  40e68c:	cbz	w22, 40e6b0 <ascii_strlower_n@plt+0xa2a8>
  40e690:	mov	x22, xzr
  40e694:	ldrb	w0, [x28, x22]
  40e698:	bl	4040d8 <ascii_tolower@plt>
  40e69c:	ldur	x8, [x29, #-8]
  40e6a0:	strb	w0, [x8, x22]
  40e6a4:	add	x22, x22, #0x1
  40e6a8:	cmp	x24, x22
  40e6ac:	b.ne	40e694 <ascii_strlower_n@plt+0xa28c>  // b.any
  40e6b0:	mov	x0, x25
  40e6b4:	bl	403ae8 <strdup@plt>
  40e6b8:	mov	x24, x0
  40e6bc:	cbz	x0, 40e850 <ascii_strlower_n@plt+0xa448>
  40e6c0:	mov	x0, x21
  40e6c4:	mov	x1, x23
  40e6c8:	bl	404118 <internal_hashmap_ensure_allocated@plt>
  40e6cc:	tbnz	w0, #31, 40e7e4 <ascii_strlower_n@plt+0xa3dc>
  40e6d0:	ldr	x0, [x21]
  40e6d4:	ldur	x2, [x29, #-16]
  40e6d8:	mov	x1, x24
  40e6dc:	bl	404128 <hashmap_put@plt>
  40e6e0:	tbnz	w0, #31, 40e7e4 <ascii_strlower_n@plt+0xa3dc>
  40e6e4:	ldur	x0, [x29, #-24]
  40e6e8:	bl	4040e8 <dns_name_is_root@plt>
  40e6ec:	tbz	w0, #0, 40e5e0 <ascii_strlower_n@plt+0xa1d8>
  40e6f0:	b	40e578 <ascii_strlower_n@plt+0xa170>
  40e6f4:	ldur	x0, [x29, #-8]
  40e6f8:	add	x1, sp, #0x8
  40e6fc:	mov	x2, x23
  40e700:	bl	403c68 <memcpy@plt>
  40e704:	ldur	x0, [x29, #-24]
  40e708:	bl	4040e8 <dns_name_is_root@plt>
  40e70c:	tbnz	w0, #0, 40e578 <ascii_strlower_n@plt+0xa170>
  40e710:	sub	x0, x29, #0x18
  40e714:	add	x1, sp, #0x8
  40e718:	mov	w2, #0x3f                  	// #63
  40e71c:	mov	w3, wzr
  40e720:	stur	xzr, [x29, #-16]
  40e724:	bl	404108 <dns_label_unescape@plt>
  40e728:	mov	w22, w0
  40e72c:	tbnz	w0, #31, 40e85c <ascii_strlower_n@plt+0xa454>
  40e730:	cmp	w22, #0x3f
  40e734:	b.hi	40e7d4 <ascii_strlower_n@plt+0xa3cc>  // b.pmore
  40e738:	mov	w23, w22
  40e73c:	add	x1, x23, #0x1
  40e740:	sub	x2, x29, #0x8
  40e744:	sub	x3, x29, #0x10
  40e748:	mov	x0, x19
  40e74c:	bl	40dfe8 <ascii_strlower_n@plt+0x9be0>
  40e750:	tbnz	w0, #31, 40e7dc <ascii_strlower_n@plt+0xa3d4>
  40e754:	ldur	x8, [x29, #-8]
  40e758:	add	x9, x8, #0x1
  40e75c:	stur	x9, [x29, #-8]
  40e760:	strb	w22, [x8]
  40e764:	ldrb	w8, [x19, #160]
  40e768:	tst	w8, #0x8
  40e76c:	cset	w8, eq  // eq = none
  40e770:	orr	w8, w8, w27
  40e774:	tbnz	w8, #0, 40e6f4 <ascii_strlower_n@plt+0xa2ec>
  40e778:	cbz	w22, 40e704 <ascii_strlower_n@plt+0xa2fc>
  40e77c:	mov	x22, xzr
  40e780:	add	x24, sp, #0x8
  40e784:	ldrb	w0, [x24, x22]
  40e788:	bl	4040d8 <ascii_tolower@plt>
  40e78c:	ldur	x8, [x29, #-8]
  40e790:	strb	w0, [x8, x22]
  40e794:	add	x22, x22, #0x1
  40e798:	cmp	x23, x22
  40e79c:	b.ne	40e784 <ascii_strlower_n@plt+0xa37c>  // b.any
  40e7a0:	b	40e704 <ascii_strlower_n@plt+0xa2fc>
  40e7a4:	ldr	x23, [x19, #40]
  40e7a8:	b	40e824 <ascii_strlower_n@plt+0xa41c>
  40e7ac:	ldr	x0, [x19, #40]
  40e7b0:	cbz	x0, 40e7ec <ascii_strlower_n@plt+0xa3e4>
  40e7b4:	mov	x1, x22
  40e7b8:	bl	4040b8 <realloc@plt>
  40e7bc:	cbz	x0, 40e848 <ascii_strlower_n@plt+0xa440>
  40e7c0:	ldr	x21, [x19, #8]
  40e7c4:	mov	x23, x0
  40e7c8:	str	x0, [x19, #40]
  40e7cc:	add	x24, x21, #0x1
  40e7d0:	b	40e820 <ascii_strlower_n@plt+0xa418>
  40e7d4:	mov	w22, #0xfffffff9            	// #-7
  40e7d8:	b	40e85c <ascii_strlower_n@plt+0xa454>
  40e7dc:	mov	w22, w0
  40e7e0:	b	40e85c <ascii_strlower_n@plt+0xa454>
  40e7e4:	mov	w22, w0
  40e7e8:	b	40e854 <ascii_strlower_n@plt+0xa44c>
  40e7ec:	mov	x0, x22
  40e7f0:	bl	4040c8 <malloc@plt>
  40e7f4:	str	x0, [x19, #40]
  40e7f8:	cbz	x0, 40e848 <ascii_strlower_n@plt+0xa440>
  40e7fc:	add	x1, x19, #0xa8
  40e800:	mov	x2, x21
  40e804:	mov	x23, x0
  40e808:	bl	403c68 <memcpy@plt>
  40e80c:	subs	x2, x22, x21
  40e810:	b.eq	40e820 <ascii_strlower_n@plt+0xa418>  // b.none
  40e814:	add	x0, x23, x21
  40e818:	mov	w1, wzr
  40e81c:	bl	403c58 <memset@plt>
  40e820:	str	x22, [x19, #16]
  40e824:	add	x8, x19, #0xa8
  40e828:	cmp	x23, #0x0
  40e82c:	csel	x8, x8, x23, eq  // eq = none
  40e830:	str	x24, [x19, #8]
  40e834:	strb	wzr, [x8, x21]
  40e838:	mov	w22, wzr
  40e83c:	cbz	x20, 40e8b4 <ascii_strlower_n@plt+0xa4ac>
  40e840:	str	x26, [x20]
  40e844:	b	40e8b4 <ascii_strlower_n@plt+0xa4ac>
  40e848:	mov	w22, #0xfffffff4            	// #-12
  40e84c:	b	40e8b4 <ascii_strlower_n@plt+0xa4ac>
  40e850:	mov	w22, #0xfffffff4            	// #-12
  40e854:	mov	x0, x24
  40e858:	bl	4039d8 <free@plt>
  40e85c:	ldr	x8, [x19, #8]
  40e860:	cmp	x8, x26
  40e864:	b.ls	40e8b4 <ascii_strlower_n@plt+0xa4ac>  // b.plast
  40e868:	mov	w8, #0xfffffffe            	// #-2
  40e86c:	str	w8, [sp, #8]
  40e870:	str	xzr, [sp, #16]
  40e874:	ldr	x0, [x21]
  40e878:	add	x1, sp, #0x8
  40e87c:	sub	x2, x29, #0x10
  40e880:	sub	x3, x29, #0x8
  40e884:	bl	404098 <internal_hashmap_iterate@plt>
  40e888:	tbz	w0, #0, 40e8b0 <ascii_strlower_n@plt+0xa4a8>
  40e88c:	ldur	x8, [x29, #-16]
  40e890:	cmp	x8, x26
  40e894:	b.cc	40e874 <ascii_strlower_n@plt+0xa46c>  // b.lo, b.ul, b.last
  40e898:	ldr	x0, [x21]
  40e89c:	ldur	x1, [x29, #-8]
  40e8a0:	bl	4040a8 <internal_hashmap_remove@plt>
  40e8a4:	ldur	x0, [x29, #-8]
  40e8a8:	bl	4039d8 <free@plt>
  40e8ac:	b	40e874 <ascii_strlower_n@plt+0xa46c>
  40e8b0:	str	x26, [x19, #8]
  40e8b4:	mov	w0, w22
  40e8b8:	ldp	x20, x19, [sp, #176]
  40e8bc:	ldp	x22, x21, [sp, #160]
  40e8c0:	ldp	x24, x23, [sp, #144]
  40e8c4:	ldp	x26, x25, [sp, #128]
  40e8c8:	ldp	x28, x27, [sp, #112]
  40e8cc:	ldp	x29, x30, [sp, #96]
  40e8d0:	add	sp, sp, #0xc0
  40e8d4:	ret
  40e8d8:	ldr	x8, [x19, #16]
  40e8dc:	add	x27, x24, #0x2
  40e8e0:	cmp	x27, x8
  40e8e4:	b.ls	40e924 <ascii_strlower_n@plt+0xa51c>  // b.plast
  40e8e8:	bl	404058 <page_size@plt>
  40e8ec:	ldr	x9, [x19, #32]
  40e8f0:	add	x8, x0, x27, lsl #1
  40e8f4:	neg	x10, x0
  40e8f8:	sub	x8, x8, #0x1
  40e8fc:	and	x8, x8, x10
  40e900:	cmp	x9, #0x0
  40e904:	mov	w10, #0xffff                	// #65535
  40e908:	csel	x9, x10, x9, eq  // eq = none
  40e90c:	cmp	x8, x9
  40e910:	csel	x25, x9, x8, hi  // hi = pmore
  40e914:	cmp	x27, x25
  40e918:	b.ls	40e92c <ascii_strlower_n@plt+0xa524>  // b.plast
  40e91c:	mov	w22, #0xffffffa6            	// #-90
  40e920:	b	40e85c <ascii_strlower_n@plt+0xa454>
  40e924:	ldr	x23, [x19, #40]
  40e928:	b	40e98c <ascii_strlower_n@plt+0xa584>
  40e92c:	ldr	x0, [x19, #40]
  40e930:	cbz	x0, 40e954 <ascii_strlower_n@plt+0xa54c>
  40e934:	mov	x1, x25
  40e938:	bl	4040b8 <realloc@plt>
  40e93c:	cbz	x0, 40e9b8 <ascii_strlower_n@plt+0xa5b0>
  40e940:	ldr	x24, [x19, #8]
  40e944:	mov	x23, x0
  40e948:	str	x0, [x19, #40]
  40e94c:	add	x27, x24, #0x2
  40e950:	b	40e988 <ascii_strlower_n@plt+0xa580>
  40e954:	mov	x0, x25
  40e958:	bl	4040c8 <malloc@plt>
  40e95c:	str	x0, [x19, #40]
  40e960:	cbz	x0, 40e9b8 <ascii_strlower_n@plt+0xa5b0>
  40e964:	add	x1, x19, #0xa8
  40e968:	mov	x2, x24
  40e96c:	mov	x23, x0
  40e970:	bl	403c68 <memcpy@plt>
  40e974:	subs	x2, x25, x24
  40e978:	b.eq	40e988 <ascii_strlower_n@plt+0xa580>  // b.none
  40e97c:	add	x0, x23, x24
  40e980:	mov	w1, wzr
  40e984:	bl	403c58 <memset@plt>
  40e988:	str	x25, [x19, #16]
  40e98c:	orr	w8, w22, #0xffffc000
  40e990:	add	x9, x19, #0xa8
  40e994:	cmp	x23, #0x0
  40e998:	rev	w8, w8
  40e99c:	csel	x9, x9, x23, eq  // eq = none
  40e9a0:	lsr	w8, w8, #16
  40e9a4:	str	x27, [x19, #8]
  40e9a8:	strh	w8, [x9, x24]
  40e9ac:	mov	w22, wzr
  40e9b0:	cbnz	x20, 40e840 <ascii_strlower_n@plt+0xa438>
  40e9b4:	b	40e8b4 <ascii_strlower_n@plt+0xa4ac>
  40e9b8:	mov	w22, #0xfffffff4            	// #-12
  40e9bc:	b	40e85c <ascii_strlower_n@plt+0xa454>
  40e9c0:	adrp	x1, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40e9c4:	adrp	x2, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40e9c8:	adrp	x4, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40e9cc:	add	x1, x1, #0xb90
  40e9d0:	add	x2, x2, #0xad6
  40e9d4:	add	x4, x4, #0xf19
  40e9d8:	mov	w3, #0x201                 	// #513
  40e9dc:	bl	403a98 <log_assert_failed_realm@plt>
  40e9e0:	adrp	x1, 420000 <ascii_strlower_n@plt+0x1bbf8>
  40e9e4:	adrp	x2, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40e9e8:	adrp	x4, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40e9ec:	add	x1, x1, #0x89f
  40e9f0:	add	x2, x2, #0xad6
  40e9f4:	add	x4, x4, #0xf19
  40e9f8:	mov	w3, #0x202                 	// #514
  40e9fc:	mov	w0, wzr
  40ea00:	bl	403a98 <log_assert_failed_realm@plt>
  40ea04:	adrp	x1, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40ea08:	adrp	x2, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40ea0c:	adrp	x4, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40ea10:	add	x1, x1, #0xf67
  40ea14:	add	x2, x2, #0xad6
  40ea18:	add	x4, x4, #0xf19
  40ea1c:	mov	w3, #0x211                 	// #529
  40ea20:	mov	w0, wzr
  40ea24:	bl	403a98 <log_assert_failed_realm@plt>
  40ea28:	sub	sp, sp, #0x80
  40ea2c:	stp	x29, x30, [sp, #32]
  40ea30:	stp	x28, x27, [sp, #48]
  40ea34:	stp	x26, x25, [sp, #64]
  40ea38:	stp	x24, x23, [sp, #80]
  40ea3c:	stp	x22, x21, [sp, #96]
  40ea40:	stp	x20, x19, [sp, #112]
  40ea44:	add	x29, sp, #0x20
  40ea48:	cbz	x0, 40ecdc <ascii_strlower_n@plt+0xa8d4>
  40ea4c:	mov	x22, x1
  40ea50:	cbz	x1, 40ecfc <ascii_strlower_n@plt+0xa8f4>
  40ea54:	ldr	x26, [x0, #8]
  40ea58:	mov	x19, x0
  40ea5c:	mov	x0, x22
  40ea60:	mov	x20, x3
  40ea64:	mov	w21, w2
  40ea68:	bl	415fcc <ascii_strlower_n@plt+0x11bc4>
  40ea6c:	mov	x1, x0
  40ea70:	mov	w2, #0x1                   	// #1
  40ea74:	mov	w3, #0x1                   	// #1
  40ea78:	mov	x0, x19
  40ea7c:	mov	x4, xzr
  40ea80:	bl	40e528 <ascii_strlower_n@plt+0xa120>
  40ea84:	tbnz	w0, #31, 40eaf8 <ascii_strlower_n@plt+0xa6f0>
  40ea88:	ldp	x24, x8, [x19, #8]
  40ea8c:	ldrh	w27, [x22, #6]
  40ea90:	add	x28, x24, #0x2
  40ea94:	cmp	x28, x8
  40ea98:	b.ls	40eb0c <ascii_strlower_n@plt+0xa704>  // b.plast
  40ea9c:	bl	404058 <page_size@plt>
  40eaa0:	ldr	x9, [x19, #32]
  40eaa4:	add	x8, x0, x28, lsl #1
  40eaa8:	neg	x10, x0
  40eaac:	sub	x8, x8, #0x1
  40eab0:	and	x8, x8, x10
  40eab4:	cmp	x9, #0x0
  40eab8:	mov	w10, #0xffff                	// #65535
  40eabc:	csel	x9, x10, x9, eq  // eq = none
  40eac0:	cmp	x8, x9
  40eac4:	csel	x23, x9, x8, hi  // hi = pmore
  40eac8:	cmp	x28, x23
  40eacc:	b.hi	40ebac <ascii_strlower_n@plt+0xa7a4>  // b.pmore
  40ead0:	ldr	x0, [x19, #40]
  40ead4:	cbz	x0, 40eb14 <ascii_strlower_n@plt+0xa70c>
  40ead8:	mov	x1, x23
  40eadc:	bl	4040b8 <realloc@plt>
  40eae0:	cbz	x0, 40ec5c <ascii_strlower_n@plt+0xa854>
  40eae4:	ldr	x24, [x19, #8]
  40eae8:	mov	x25, x0
  40eaec:	str	x0, [x19, #40]
  40eaf0:	add	x28, x24, #0x2
  40eaf4:	b	40eb48 <ascii_strlower_n@plt+0xa740>
  40eaf8:	mov	w23, w0
  40eafc:	ldr	x8, [x19, #8]
  40eb00:	cmp	x8, x26
  40eb04:	b.ls	40ecb8 <ascii_strlower_n@plt+0xa8b0>  // b.plast
  40eb08:	b	40ec6c <ascii_strlower_n@plt+0xa864>
  40eb0c:	ldr	x25, [x19, #40]
  40eb10:	b	40eb4c <ascii_strlower_n@plt+0xa744>
  40eb14:	mov	x0, x23
  40eb18:	bl	4040c8 <malloc@plt>
  40eb1c:	str	x0, [x19, #40]
  40eb20:	cbz	x0, 40ec5c <ascii_strlower_n@plt+0xa854>
  40eb24:	add	x1, x19, #0xa8
  40eb28:	mov	x2, x24
  40eb2c:	mov	x25, x0
  40eb30:	bl	403c68 <memcpy@plt>
  40eb34:	subs	x2, x23, x24
  40eb38:	b.eq	40eb48 <ascii_strlower_n@plt+0xa740>  // b.none
  40eb3c:	add	x0, x25, x24
  40eb40:	mov	w1, wzr
  40eb44:	bl	403c58 <memset@plt>
  40eb48:	str	x23, [x19, #16]
  40eb4c:	add	x23, x19, #0xa8
  40eb50:	cmp	x25, #0x0
  40eb54:	csel	x8, x23, x25, eq  // eq = none
  40eb58:	rev16	w9, w27
  40eb5c:	str	x28, [x19, #8]
  40eb60:	strh	w9, [x8, x24]
  40eb64:	ldp	x24, x8, [x19, #8]
  40eb68:	ldrh	w27, [x22, #4]
  40eb6c:	add	x28, x24, #0x2
  40eb70:	cmp	x28, x8
  40eb74:	b.ls	40ebc0 <ascii_strlower_n@plt+0xa7b8>  // b.plast
  40eb78:	bl	404058 <page_size@plt>
  40eb7c:	ldr	x9, [x19, #32]
  40eb80:	add	x8, x0, x28, lsl #1
  40eb84:	neg	x10, x0
  40eb88:	sub	x8, x8, #0x1
  40eb8c:	and	x8, x8, x10
  40eb90:	cmp	x9, #0x0
  40eb94:	mov	w10, #0xffff                	// #65535
  40eb98:	csel	x9, x10, x9, eq  // eq = none
  40eb9c:	cmp	x8, x9
  40eba0:	csel	x22, x9, x8, hi  // hi = pmore
  40eba4:	cmp	x28, x22
  40eba8:	b.ls	40ebc8 <ascii_strlower_n@plt+0xa7c0>  // b.plast
  40ebac:	mov	w23, #0xffffffa6            	// #-90
  40ebb0:	ldr	x8, [x19, #8]
  40ebb4:	cmp	x8, x26
  40ebb8:	b.ls	40ecb8 <ascii_strlower_n@plt+0xa8b0>  // b.plast
  40ebbc:	b	40ec6c <ascii_strlower_n@plt+0xa864>
  40ebc0:	ldr	x25, [x19, #40]
  40ebc4:	b	40ec28 <ascii_strlower_n@plt+0xa820>
  40ebc8:	ldr	x0, [x19, #40]
  40ebcc:	cbz	x0, 40ebf0 <ascii_strlower_n@plt+0xa7e8>
  40ebd0:	mov	x1, x22
  40ebd4:	bl	4040b8 <realloc@plt>
  40ebd8:	cbz	x0, 40ec5c <ascii_strlower_n@plt+0xa854>
  40ebdc:	ldr	x24, [x19, #8]
  40ebe0:	mov	x25, x0
  40ebe4:	str	x0, [x19, #40]
  40ebe8:	add	x28, x24, #0x2
  40ebec:	b	40ec24 <ascii_strlower_n@plt+0xa81c>
  40ebf0:	mov	x0, x22
  40ebf4:	bl	4040c8 <malloc@plt>
  40ebf8:	str	x0, [x19, #40]
  40ebfc:	cbz	x0, 40ec5c <ascii_strlower_n@plt+0xa854>
  40ec00:	mov	x1, x23
  40ec04:	mov	x2, x24
  40ec08:	mov	x25, x0
  40ec0c:	bl	403c68 <memcpy@plt>
  40ec10:	subs	x2, x22, x24
  40ec14:	b.eq	40ec24 <ascii_strlower_n@plt+0xa81c>  // b.none
  40ec18:	add	x0, x25, x24
  40ec1c:	mov	w1, wzr
  40ec20:	bl	403c58 <memset@plt>
  40ec24:	str	x22, [x19, #16]
  40ec28:	lsl	w8, w21, #12
  40ec2c:	and	w8, w8, #0xffff8000
  40ec30:	orr	w8, w27, w8
  40ec34:	cmp	x25, #0x0
  40ec38:	rev	w8, w8
  40ec3c:	csel	x9, x23, x25, eq  // eq = none
  40ec40:	lsr	w8, w8, #16
  40ec44:	mov	w23, wzr
  40ec48:	str	x28, [x19, #8]
  40ec4c:	strh	w8, [x9, x24]
  40ec50:	cbz	x20, 40ecb8 <ascii_strlower_n@plt+0xa8b0>
  40ec54:	str	x26, [x20]
  40ec58:	b	40ecb8 <ascii_strlower_n@plt+0xa8b0>
  40ec5c:	mov	w23, #0xfffffff4            	// #-12
  40ec60:	ldr	x8, [x19, #8]
  40ec64:	cmp	x8, x26
  40ec68:	b.ls	40ecb8 <ascii_strlower_n@plt+0xa8b0>  // b.plast
  40ec6c:	mov	w8, #0xfffffffe            	// #-2
  40ec70:	str	w8, [sp, #16]
  40ec74:	str	xzr, [sp, #24]
  40ec78:	ldr	x0, [x19, #48]
  40ec7c:	add	x1, sp, #0x10
  40ec80:	mov	x2, sp
  40ec84:	add	x3, sp, #0x8
  40ec88:	bl	404098 <internal_hashmap_iterate@plt>
  40ec8c:	tbz	w0, #0, 40ecb4 <ascii_strlower_n@plt+0xa8ac>
  40ec90:	ldr	x8, [sp]
  40ec94:	cmp	x8, x26
  40ec98:	b.cc	40ec78 <ascii_strlower_n@plt+0xa870>  // b.lo, b.ul, b.last
  40ec9c:	ldr	x0, [x19, #48]
  40eca0:	ldr	x1, [sp, #8]
  40eca4:	bl	4040a8 <internal_hashmap_remove@plt>
  40eca8:	ldr	x0, [sp, #8]
  40ecac:	bl	4039d8 <free@plt>
  40ecb0:	b	40ec78 <ascii_strlower_n@plt+0xa870>
  40ecb4:	str	x26, [x19, #8]
  40ecb8:	mov	w0, w23
  40ecbc:	ldp	x20, x19, [sp, #112]
  40ecc0:	ldp	x22, x21, [sp, #96]
  40ecc4:	ldp	x24, x23, [sp, #80]
  40ecc8:	ldp	x26, x25, [sp, #64]
  40eccc:	ldp	x28, x27, [sp, #48]
  40ecd0:	ldp	x29, x30, [sp, #32]
  40ecd4:	add	sp, sp, #0x80
  40ecd8:	ret
  40ecdc:	adrp	x1, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40ece0:	adrp	x2, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40ece4:	adrp	x4, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40ece8:	add	x1, x1, #0xb90
  40ecec:	add	x2, x2, #0xad6
  40ecf0:	add	x4, x4, #0xf73
  40ecf4:	mov	w3, #0x24d                 	// #589
  40ecf8:	bl	403a98 <log_assert_failed_realm@plt>
  40ecfc:	adrp	x1, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40ed00:	adrp	x2, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40ed04:	adrp	x4, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40ed08:	add	x1, x1, #0xfd2
  40ed0c:	add	x2, x2, #0xad6
  40ed10:	add	x4, x4, #0xf73
  40ed14:	mov	w3, #0x24e                 	// #590
  40ed18:	mov	w0, wzr
  40ed1c:	bl	403a98 <log_assert_failed_realm@plt>
  40ed20:	sub	sp, sp, #0x90
  40ed24:	stp	x29, x30, [sp, #48]
  40ed28:	stp	x28, x27, [sp, #64]
  40ed2c:	stp	x26, x25, [sp, #80]
  40ed30:	stp	x24, x23, [sp, #96]
  40ed34:	stp	x22, x21, [sp, #112]
  40ed38:	stp	x20, x19, [sp, #128]
  40ed3c:	add	x29, sp, #0x30
  40ed40:	cbz	x0, 40f4d4 <ascii_strlower_n@plt+0xb0cc>
  40ed44:	and	w8, w1, #0xffff
  40ed48:	mov	w25, w1
  40ed4c:	cmp	w8, #0x1ff
  40ed50:	b.ls	40f4f4 <ascii_strlower_n@plt+0xb0ec>  // b.plast
  40ed54:	mov	w24, w3
  40ed58:	tbnz	w3, #31, 40f518 <ascii_strlower_n@plt+0xb110>
  40ed5c:	cmp	w24, #0x1, lsl #12
  40ed60:	b.ge	40f53c <ascii_strlower_n@plt+0xb134>  // b.tcont
  40ed64:	ldr	x8, [x0, #56]
  40ed68:	mov	x19, x0
  40ed6c:	cmn	x8, #0x1
  40ed70:	b.eq	40ed9c <ascii_strlower_n@plt+0xa994>  // b.none
  40ed74:	mov	w22, #0xfffffff0            	// #-16
  40ed78:	mov	w0, w22
  40ed7c:	ldp	x20, x19, [sp, #128]
  40ed80:	ldp	x22, x21, [sp, #112]
  40ed84:	ldp	x24, x23, [sp, #96]
  40ed88:	ldp	x26, x25, [sp, #80]
  40ed8c:	ldp	x28, x27, [sp, #64]
  40ed90:	ldp	x29, x30, [sp, #48]
  40ed94:	add	sp, sp, #0x90
  40ed98:	ret
  40ed9c:	ldr	x8, [x19, #64]
  40eda0:	cmn	x8, #0x1
  40eda4:	b.ne	40f560 <ascii_strlower_n@plt+0xb158>  // b.any
  40eda8:	ldp	x20, x8, [x19, #8]
  40edac:	mov	x28, x4
  40edb0:	mov	w23, w2
  40edb4:	add	x27, x20, #0x1
  40edb8:	cmp	x27, x8
  40edbc:	b.ls	40edfc <ascii_strlower_n@plt+0xa9f4>  // b.plast
  40edc0:	bl	404058 <page_size@plt>
  40edc4:	ldr	x9, [x19, #32]
  40edc8:	add	x8, x0, x27, lsl #1
  40edcc:	neg	x10, x0
  40edd0:	sub	x8, x8, #0x1
  40edd4:	and	x8, x8, x10
  40edd8:	cmp	x9, #0x0
  40eddc:	mov	w10, #0xffff                	// #65535
  40ede0:	csel	x9, x10, x9, eq  // eq = none
  40ede4:	cmp	x8, x9
  40ede8:	csel	x22, x9, x8, hi  // hi = pmore
  40edec:	cmp	x27, x22
  40edf0:	b.ls	40ee08 <ascii_strlower_n@plt+0xaa00>  // b.plast
  40edf4:	mov	w22, #0xffffffa6            	// #-90
  40edf8:	b	40ed78 <ascii_strlower_n@plt+0xa970>
  40edfc:	ldr	x26, [x19, #40]
  40ee00:	mov	x8, x20
  40ee04:	b	40ee6c <ascii_strlower_n@plt+0xaa64>
  40ee08:	ldr	x0, [x19, #40]
  40ee0c:	cbz	x0, 40ee30 <ascii_strlower_n@plt+0xaa28>
  40ee10:	mov	x1, x22
  40ee14:	bl	4040b8 <realloc@plt>
  40ee18:	cbz	x0, 40eefc <ascii_strlower_n@plt+0xaaf4>
  40ee1c:	ldr	x8, [x19, #8]
  40ee20:	mov	x26, x0
  40ee24:	str	x0, [x19, #40]
  40ee28:	add	x27, x8, #0x1
  40ee2c:	b	40ee68 <ascii_strlower_n@plt+0xaa60>
  40ee30:	mov	x0, x22
  40ee34:	bl	4040c8 <malloc@plt>
  40ee38:	str	x0, [x19, #40]
  40ee3c:	cbz	x0, 40eefc <ascii_strlower_n@plt+0xaaf4>
  40ee40:	add	x1, x19, #0xa8
  40ee44:	mov	x2, x20
  40ee48:	mov	x26, x0
  40ee4c:	bl	403c68 <memcpy@plt>
  40ee50:	subs	x2, x22, x20
  40ee54:	b.eq	40ee64 <ascii_strlower_n@plt+0xaa5c>  // b.none
  40ee58:	add	x0, x26, x20
  40ee5c:	mov	w1, wzr
  40ee60:	bl	403c58 <memset@plt>
  40ee64:	mov	x8, x20
  40ee68:	str	x22, [x19, #16]
  40ee6c:	add	x22, x19, #0xa8
  40ee70:	cmp	x26, #0x0
  40ee74:	csel	x9, x22, x26, eq  // eq = none
  40ee78:	str	x27, [x19, #8]
  40ee7c:	strb	wzr, [x9, x8]
  40ee80:	ldp	x26, x8, [x19, #8]
  40ee84:	add	x21, x26, #0x2
  40ee88:	cmp	x21, x8
  40ee8c:	b.ls	40eef0 <ascii_strlower_n@plt+0xaae8>  // b.plast
  40ee90:	bl	404058 <page_size@plt>
  40ee94:	ldr	x9, [x19, #32]
  40ee98:	add	x8, x0, x21, lsl #1
  40ee9c:	neg	x10, x0
  40eea0:	sub	x8, x8, #0x1
  40eea4:	and	x8, x8, x10
  40eea8:	cmp	x9, #0x0
  40eeac:	mov	w10, #0xffff                	// #65535
  40eeb0:	csel	x9, x10, x9, eq  // eq = none
  40eeb4:	cmp	x8, x9
  40eeb8:	csel	x27, x9, x8, hi  // hi = pmore
  40eebc:	cmp	x21, x27
  40eec0:	b.hi	40f280 <ascii_strlower_n@plt+0xae78>  // b.pmore
  40eec4:	ldr	x0, [x19, #40]
  40eec8:	str	x28, [sp, #8]
  40eecc:	cbz	x0, 40ef04 <ascii_strlower_n@plt+0xaafc>
  40eed0:	mov	x1, x27
  40eed4:	bl	4040b8 <realloc@plt>
  40eed8:	cbz	x0, 40f474 <ascii_strlower_n@plt+0xb06c>
  40eedc:	ldr	x26, [x19, #8]
  40eee0:	mov	x28, x0
  40eee4:	str	x0, [x19, #40]
  40eee8:	add	x21, x26, #0x2
  40eeec:	b	40ef38 <ascii_strlower_n@plt+0xab30>
  40eef0:	str	x28, [sp, #8]
  40eef4:	ldr	x28, [x19, #40]
  40eef8:	b	40ef3c <ascii_strlower_n@plt+0xab34>
  40eefc:	mov	w22, #0xfffffff4            	// #-12
  40ef00:	b	40ed78 <ascii_strlower_n@plt+0xa970>
  40ef04:	mov	x0, x27
  40ef08:	bl	4040c8 <malloc@plt>
  40ef0c:	str	x0, [x19, #40]
  40ef10:	cbz	x0, 40f474 <ascii_strlower_n@plt+0xb06c>
  40ef14:	mov	x1, x22
  40ef18:	mov	x2, x26
  40ef1c:	mov	x28, x0
  40ef20:	bl	403c68 <memcpy@plt>
  40ef24:	subs	x2, x27, x26
  40ef28:	b.eq	40ef38 <ascii_strlower_n@plt+0xab30>  // b.none
  40ef2c:	add	x0, x28, x26
  40ef30:	mov	w1, wzr
  40ef34:	bl	403c58 <memset@plt>
  40ef38:	str	x27, [x19, #16]
  40ef3c:	cmp	x28, #0x0
  40ef40:	csel	x8, x22, x28, eq  // eq = none
  40ef44:	mov	w9, #0x2900                	// #10496
  40ef48:	str	x21, [x19, #8]
  40ef4c:	strh	w9, [x8, x26]
  40ef50:	ldp	x26, x8, [x19, #8]
  40ef54:	add	x21, x26, #0x2
  40ef58:	cmp	x21, x8
  40ef5c:	b.ls	40efbc <ascii_strlower_n@plt+0xabb4>  // b.plast
  40ef60:	bl	404058 <page_size@plt>
  40ef64:	ldr	x9, [x19, #32]
  40ef68:	add	x8, x0, x21, lsl #1
  40ef6c:	neg	x10, x0
  40ef70:	sub	x8, x8, #0x1
  40ef74:	and	x8, x8, x10
  40ef78:	cmp	x9, #0x0
  40ef7c:	mov	w10, #0xffff                	// #65535
  40ef80:	csel	x9, x10, x9, eq  // eq = none
  40ef84:	cmp	x8, x9
  40ef88:	csel	x27, x9, x8, hi  // hi = pmore
  40ef8c:	cmp	x21, x27
  40ef90:	b.hi	40f280 <ascii_strlower_n@plt+0xae78>  // b.pmore
  40ef94:	ldr	x0, [x19, #40]
  40ef98:	cbz	x0, 40efc4 <ascii_strlower_n@plt+0xabbc>
  40ef9c:	mov	x1, x27
  40efa0:	bl	4040b8 <realloc@plt>
  40efa4:	cbz	x0, 40f474 <ascii_strlower_n@plt+0xb06c>
  40efa8:	ldr	x26, [x19, #8]
  40efac:	mov	x28, x0
  40efb0:	str	x0, [x19, #40]
  40efb4:	add	x21, x26, #0x2
  40efb8:	b	40eff8 <ascii_strlower_n@plt+0xabf0>
  40efbc:	ldr	x28, [x19, #40]
  40efc0:	b	40effc <ascii_strlower_n@plt+0xabf4>
  40efc4:	mov	x0, x27
  40efc8:	bl	4040c8 <malloc@plt>
  40efcc:	str	x0, [x19, #40]
  40efd0:	cbz	x0, 40f474 <ascii_strlower_n@plt+0xb06c>
  40efd4:	mov	x1, x22
  40efd8:	mov	x2, x26
  40efdc:	mov	x28, x0
  40efe0:	bl	403c68 <memcpy@plt>
  40efe4:	subs	x2, x27, x26
  40efe8:	b.eq	40eff8 <ascii_strlower_n@plt+0xabf0>  // b.none
  40efec:	add	x0, x28, x26
  40eff0:	mov	w1, wzr
  40eff4:	bl	403c58 <memset@plt>
  40eff8:	str	x27, [x19, #16]
  40effc:	cmp	x28, #0x0
  40f000:	rev	w8, w25
  40f004:	csel	x9, x22, x28, eq  // eq = none
  40f008:	lsr	w8, w8, #16
  40f00c:	str	x21, [x19, #8]
  40f010:	strh	w8, [x9, x26]
  40f014:	ldp	x25, x8, [x19, #8]
  40f018:	add	x28, x25, #0x2
  40f01c:	cmp	x28, x8
  40f020:	b.ls	40f080 <ascii_strlower_n@plt+0xac78>  // b.plast
  40f024:	bl	404058 <page_size@plt>
  40f028:	ldr	x9, [x19, #32]
  40f02c:	add	x8, x0, x28, lsl #1
  40f030:	neg	x10, x0
  40f034:	sub	x8, x8, #0x1
  40f038:	and	x8, x8, x10
  40f03c:	cmp	x9, #0x0
  40f040:	mov	w10, #0xffff                	// #65535
  40f044:	csel	x9, x10, x9, eq  // eq = none
  40f048:	cmp	x8, x9
  40f04c:	csel	x26, x9, x8, hi  // hi = pmore
  40f050:	cmp	x28, x26
  40f054:	b.hi	40f280 <ascii_strlower_n@plt+0xae78>  // b.pmore
  40f058:	ldr	x0, [x19, #40]
  40f05c:	cbz	x0, 40f088 <ascii_strlower_n@plt+0xac80>
  40f060:	mov	x1, x26
  40f064:	bl	4040b8 <realloc@plt>
  40f068:	cbz	x0, 40f474 <ascii_strlower_n@plt+0xb06c>
  40f06c:	ldr	x25, [x19, #8]
  40f070:	mov	x27, x0
  40f074:	str	x0, [x19, #40]
  40f078:	add	x28, x25, #0x2
  40f07c:	b	40f0bc <ascii_strlower_n@plt+0xacb4>
  40f080:	ldr	x27, [x19, #40]
  40f084:	b	40f0c0 <ascii_strlower_n@plt+0xacb8>
  40f088:	mov	x0, x26
  40f08c:	bl	4040c8 <malloc@plt>
  40f090:	str	x0, [x19, #40]
  40f094:	cbz	x0, 40f474 <ascii_strlower_n@plt+0xb06c>
  40f098:	mov	x1, x22
  40f09c:	mov	x2, x25
  40f0a0:	mov	x27, x0
  40f0a4:	bl	403c68 <memcpy@plt>
  40f0a8:	subs	x2, x26, x25
  40f0ac:	b.eq	40f0bc <ascii_strlower_n@plt+0xacb4>  // b.none
  40f0b0:	add	x0, x27, x25
  40f0b4:	mov	w1, wzr
  40f0b8:	bl	403c58 <memset@plt>
  40f0bc:	str	x26, [x19, #16]
  40f0c0:	lsl	w8, w24, #4
  40f0c4:	and	w8, w8, #0xffffff00
  40f0c8:	cmp	x27, #0x0
  40f0cc:	rev	w8, w8
  40f0d0:	csel	x9, x22, x27, eq  // eq = none
  40f0d4:	lsr	w8, w8, #16
  40f0d8:	str	x28, [x19, #8]
  40f0dc:	strh	w8, [x9, x25]
  40f0e0:	ldp	x24, x8, [x19, #8]
  40f0e4:	tst	w23, #0x1
  40f0e8:	mov	w9, #0xffff8000            	// #-32768
  40f0ec:	csel	w27, w9, wzr, ne  // ne = any
  40f0f0:	add	x21, x24, #0x2
  40f0f4:	cmp	x21, x8
  40f0f8:	b.ls	40f15c <ascii_strlower_n@plt+0xad54>  // b.plast
  40f0fc:	bl	404058 <page_size@plt>
  40f100:	ldr	x9, [x19, #32]
  40f104:	add	x8, x0, x21, lsl #1
  40f108:	neg	x10, x0
  40f10c:	sub	x8, x8, #0x1
  40f110:	and	x8, x8, x10
  40f114:	cmp	x9, #0x0
  40f118:	mov	w10, #0xffff                	// #65535
  40f11c:	csel	x9, x10, x9, eq  // eq = none
  40f120:	ldr	x28, [sp, #8]
  40f124:	cmp	x8, x9
  40f128:	csel	x25, x9, x8, hi  // hi = pmore
  40f12c:	cmp	x21, x25
  40f130:	b.hi	40f280 <ascii_strlower_n@plt+0xae78>  // b.pmore
  40f134:	ldr	x0, [x19, #40]
  40f138:	cbz	x0, 40f168 <ascii_strlower_n@plt+0xad60>
  40f13c:	mov	x1, x25
  40f140:	bl	4040b8 <realloc@plt>
  40f144:	cbz	x0, 40f474 <ascii_strlower_n@plt+0xb06c>
  40f148:	ldr	x24, [x19, #8]
  40f14c:	mov	x26, x0
  40f150:	str	x0, [x19, #40]
  40f154:	add	x21, x24, #0x2
  40f158:	b	40f19c <ascii_strlower_n@plt+0xad94>
  40f15c:	ldr	x26, [x19, #40]
  40f160:	ldr	x28, [sp, #8]
  40f164:	b	40f1a0 <ascii_strlower_n@plt+0xad98>
  40f168:	mov	x0, x25
  40f16c:	bl	4040c8 <malloc@plt>
  40f170:	str	x0, [x19, #40]
  40f174:	cbz	x0, 40f474 <ascii_strlower_n@plt+0xb06c>
  40f178:	mov	x1, x22
  40f17c:	mov	x2, x24
  40f180:	mov	x26, x0
  40f184:	bl	403c68 <memcpy@plt>
  40f188:	subs	x2, x25, x24
  40f18c:	b.eq	40f19c <ascii_strlower_n@plt+0xad94>  // b.none
  40f190:	add	x0, x26, x24
  40f194:	mov	w1, wzr
  40f198:	bl	403c58 <memset@plt>
  40f19c:	str	x25, [x19, #16]
  40f1a0:	cmp	x26, #0x0
  40f1a4:	rev	w8, w27
  40f1a8:	csel	x9, x22, x26, eq  // eq = none
  40f1ac:	lsr	w8, w8, #16
  40f1b0:	str	x21, [x19, #8]
  40f1b4:	strh	w8, [x9, x24]
  40f1b8:	tbz	w23, #0, 40f23c <ascii_strlower_n@plt+0xae34>
  40f1bc:	ldr	x23, [x19, #40]
  40f1c0:	cmp	x23, #0x0
  40f1c4:	csel	x8, x22, x23, eq  // eq = none
  40f1c8:	ldrb	w8, [x8, #2]
  40f1cc:	tbnz	w8, #7, 40f23c <ascii_strlower_n@plt+0xae34>
  40f1d0:	ldp	x24, x8, [x19, #8]
  40f1d4:	add	x21, x24, #0x2
  40f1d8:	cmp	x21, x8
  40f1dc:	b.ls	40f388 <ascii_strlower_n@plt+0xaf80>  // b.plast
  40f1e0:	bl	404058 <page_size@plt>
  40f1e4:	ldr	x9, [x19, #32]
  40f1e8:	add	x8, x0, x21, lsl #1
  40f1ec:	neg	x10, x0
  40f1f0:	sub	x8, x8, #0x1
  40f1f4:	and	x8, x8, x10
  40f1f8:	cmp	x9, #0x0
  40f1fc:	mov	w10, #0xffff                	// #65535
  40f200:	csel	x9, x10, x9, eq  // eq = none
  40f204:	cmp	x8, x9
  40f208:	csel	x25, x9, x8, hi  // hi = pmore
  40f20c:	cmp	x21, x25
  40f210:	b.hi	40f280 <ascii_strlower_n@plt+0xae78>  // b.pmore
  40f214:	cbz	x23, 40f350 <ascii_strlower_n@plt+0xaf48>
  40f218:	mov	x0, x23
  40f21c:	mov	x1, x25
  40f220:	bl	4040b8 <realloc@plt>
  40f224:	cbz	x0, 40f474 <ascii_strlower_n@plt+0xb06c>
  40f228:	ldr	x24, [x19, #8]
  40f22c:	mov	x23, x0
  40f230:	str	x0, [x19, #40]
  40f234:	add	x21, x24, #0x2
  40f238:	b	40f384 <ascii_strlower_n@plt+0xaf7c>
  40f23c:	ldp	x23, x8, [x19, #8]
  40f240:	add	x21, x23, #0x2
  40f244:	cmp	x21, x8
  40f248:	b.ls	40f294 <ascii_strlower_n@plt+0xae8c>  // b.plast
  40f24c:	bl	404058 <page_size@plt>
  40f250:	ldr	x9, [x19, #32]
  40f254:	add	x8, x0, x21, lsl #1
  40f258:	neg	x10, x0
  40f25c:	sub	x8, x8, #0x1
  40f260:	and	x8, x8, x10
  40f264:	cmp	x9, #0x0
  40f268:	mov	w10, #0xffff                	// #65535
  40f26c:	csel	x9, x10, x9, eq  // eq = none
  40f270:	cmp	x8, x9
  40f274:	csel	x24, x9, x8, hi  // hi = pmore
  40f278:	cmp	x21, x24
  40f27c:	b.ls	40f29c <ascii_strlower_n@plt+0xae94>  // b.plast
  40f280:	mov	w22, #0xffffffa6            	// #-90
  40f284:	ldr	x8, [x19, #8]
  40f288:	cmp	x8, x20
  40f28c:	b.ls	40ed78 <ascii_strlower_n@plt+0xa970>  // b.plast
  40f290:	b	40f484 <ascii_strlower_n@plt+0xb07c>
  40f294:	ldr	x25, [x19, #40]
  40f298:	b	40f2fc <ascii_strlower_n@plt+0xaef4>
  40f29c:	ldr	x0, [x19, #40]
  40f2a0:	cbz	x0, 40f2c4 <ascii_strlower_n@plt+0xaebc>
  40f2a4:	mov	x1, x24
  40f2a8:	bl	4040b8 <realloc@plt>
  40f2ac:	cbz	x0, 40f474 <ascii_strlower_n@plt+0xb06c>
  40f2b0:	ldr	x23, [x19, #8]
  40f2b4:	mov	x25, x0
  40f2b8:	str	x0, [x19, #40]
  40f2bc:	add	x21, x23, #0x2
  40f2c0:	b	40f2f8 <ascii_strlower_n@plt+0xaef0>
  40f2c4:	mov	x0, x24
  40f2c8:	bl	4040c8 <malloc@plt>
  40f2cc:	str	x0, [x19, #40]
  40f2d0:	cbz	x0, 40f474 <ascii_strlower_n@plt+0xb06c>
  40f2d4:	mov	x1, x22
  40f2d8:	mov	x2, x23
  40f2dc:	mov	x25, x0
  40f2e0:	bl	403c68 <memcpy@plt>
  40f2e4:	subs	x2, x24, x23
  40f2e8:	b.eq	40f2f8 <ascii_strlower_n@plt+0xaef0>  // b.none
  40f2ec:	add	x0, x25, x23
  40f2f0:	mov	w1, wzr
  40f2f4:	bl	403c58 <memset@plt>
  40f2f8:	str	x24, [x19, #16]
  40f2fc:	cmp	x25, #0x0
  40f300:	csel	x8, x22, x25, eq  // eq = none
  40f304:	str	x21, [x19, #8]
  40f308:	strh	wzr, [x8, x23]
  40f30c:	ldr	x8, [x19, #40]
  40f310:	cmp	x8, #0x0
  40f314:	csel	x8, x22, x8, eq  // eq = none
  40f318:	ldrh	w9, [x8, #10]
  40f31c:	mov	w22, wzr
  40f320:	rev	w9, w9
  40f324:	lsr	w9, w9, #16
  40f328:	add	w9, w9, #0x1
  40f32c:	rev	w9, w9
  40f330:	lsr	w9, w9, #16
  40f334:	strh	w9, [x8, #10]
  40f338:	ldr	x8, [x19, #8]
  40f33c:	sub	x8, x8, x20
  40f340:	stp	x20, x8, [x19, #56]
  40f344:	cbz	x28, 40ed78 <ascii_strlower_n@plt+0xa970>
  40f348:	str	x20, [x28]
  40f34c:	b	40ed78 <ascii_strlower_n@plt+0xa970>
  40f350:	mov	x0, x25
  40f354:	bl	4040c8 <malloc@plt>
  40f358:	str	x0, [x19, #40]
  40f35c:	cbz	x0, 40f474 <ascii_strlower_n@plt+0xb06c>
  40f360:	mov	x1, x22
  40f364:	mov	x2, x24
  40f368:	mov	x23, x0
  40f36c:	bl	403c68 <memcpy@plt>
  40f370:	subs	x2, x25, x24
  40f374:	b.eq	40f384 <ascii_strlower_n@plt+0xaf7c>  // b.none
  40f378:	add	x0, x23, x24
  40f37c:	mov	w1, wzr
  40f380:	bl	403c58 <memset@plt>
  40f384:	str	x25, [x19, #16]
  40f388:	cmp	x23, #0x0
  40f38c:	csel	x8, x22, x23, eq  // eq = none
  40f390:	mov	w9, #0x1600                	// #5632
  40f394:	str	x21, [x19, #8]
  40f398:	strh	w9, [x8, x24]
  40f39c:	ldp	x23, x8, [x19, #8]
  40f3a0:	add	x26, x23, #0x16
  40f3a4:	cmp	x26, x8
  40f3a8:	b.ls	40f408 <ascii_strlower_n@plt+0xb000>  // b.plast
  40f3ac:	bl	404058 <page_size@plt>
  40f3b0:	ldr	x9, [x19, #32]
  40f3b4:	add	x8, x0, x26, lsl #1
  40f3b8:	neg	x10, x0
  40f3bc:	sub	x8, x8, #0x1
  40f3c0:	and	x8, x8, x10
  40f3c4:	cmp	x9, #0x0
  40f3c8:	mov	w10, #0xffff                	// #65535
  40f3cc:	csel	x9, x10, x9, eq  // eq = none
  40f3d0:	cmp	x8, x9
  40f3d4:	csel	x25, x9, x8, hi  // hi = pmore
  40f3d8:	cmp	x26, x25
  40f3dc:	b.hi	40f280 <ascii_strlower_n@plt+0xae78>  // b.pmore
  40f3e0:	ldr	x0, [x19, #40]
  40f3e4:	cbz	x0, 40f410 <ascii_strlower_n@plt+0xb008>
  40f3e8:	mov	x1, x25
  40f3ec:	bl	4040b8 <realloc@plt>
  40f3f0:	cbz	x0, 40f474 <ascii_strlower_n@plt+0xb06c>
  40f3f4:	ldr	x23, [x19, #8]
  40f3f8:	mov	x24, x0
  40f3fc:	str	x0, [x19, #40]
  40f400:	add	x26, x23, #0x16
  40f404:	b	40f444 <ascii_strlower_n@plt+0xb03c>
  40f408:	ldr	x24, [x19, #40]
  40f40c:	b	40f448 <ascii_strlower_n@plt+0xb040>
  40f410:	mov	x0, x25
  40f414:	bl	4040c8 <malloc@plt>
  40f418:	str	x0, [x19, #40]
  40f41c:	cbz	x0, 40f474 <ascii_strlower_n@plt+0xb06c>
  40f420:	mov	x1, x22
  40f424:	mov	x2, x23
  40f428:	mov	x24, x0
  40f42c:	bl	403c68 <memcpy@plt>
  40f430:	subs	x2, x25, x23
  40f434:	b.eq	40f444 <ascii_strlower_n@plt+0xb03c>  // b.none
  40f438:	add	x0, x24, x23
  40f43c:	mov	w1, wzr
  40f440:	bl	403c58 <memset@plt>
  40f444:	str	x25, [x19, #16]
  40f448:	adrp	x8, 425000 <ascii_strlower_n@plt+0x20bf8>
  40f44c:	add	x8, x8, #0x15c
  40f450:	ldur	x9, [x8, #14]
  40f454:	ldr	q0, [x8]
  40f458:	cmp	x24, #0x0
  40f45c:	csel	x8, x22, x24, eq  // eq = none
  40f460:	add	x8, x8, x23
  40f464:	str	x26, [x19, #8]
  40f468:	stur	x9, [x8, #14]
  40f46c:	str	q0, [x8]
  40f470:	b	40f30c <ascii_strlower_n@plt+0xaf04>
  40f474:	mov	w22, #0xfffffff4            	// #-12
  40f478:	ldr	x8, [x19, #8]
  40f47c:	cmp	x8, x20
  40f480:	b.ls	40ed78 <ascii_strlower_n@plt+0xa970>  // b.plast
  40f484:	mov	w8, #0xfffffffe            	// #-2
  40f488:	stur	w8, [x29, #-16]
  40f48c:	stur	xzr, [x29, #-8]
  40f490:	ldr	x0, [x19, #48]
  40f494:	sub	x1, x29, #0x10
  40f498:	add	x2, sp, #0x10
  40f49c:	add	x3, sp, #0x18
  40f4a0:	bl	404098 <internal_hashmap_iterate@plt>
  40f4a4:	tbz	w0, #0, 40f4cc <ascii_strlower_n@plt+0xb0c4>
  40f4a8:	ldr	x8, [sp, #16]
  40f4ac:	cmp	x8, x20
  40f4b0:	b.cc	40f490 <ascii_strlower_n@plt+0xb088>  // b.lo, b.ul, b.last
  40f4b4:	ldr	x0, [x19, #48]
  40f4b8:	ldr	x1, [sp, #24]
  40f4bc:	bl	4040a8 <internal_hashmap_remove@plt>
  40f4c0:	ldr	x0, [sp, #24]
  40f4c4:	bl	4039d8 <free@plt>
  40f4c8:	b	40f490 <ascii_strlower_n@plt+0xb088>
  40f4cc:	str	x20, [x19, #8]
  40f4d0:	b	40ed78 <ascii_strlower_n@plt+0xa970>
  40f4d4:	adrp	x1, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40f4d8:	adrp	x2, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40f4dc:	adrp	x4, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40f4e0:	add	x1, x1, #0xb90
  40f4e4:	add	x2, x2, #0xad6
  40f4e8:	add	x4, x4, #0xfd4
  40f4ec:	mov	w3, #0x2ba                 	// #698
  40f4f0:	bl	403a98 <log_assert_failed_realm@plt>
  40f4f4:	adrp	x1, 422000 <ascii_strlower_n@plt+0x1dbf8>
  40f4f8:	adrp	x2, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40f4fc:	adrp	x4, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40f500:	add	x1, x1, #0x1b
  40f504:	add	x2, x2, #0xad6
  40f508:	add	x4, x4, #0xfd4
  40f50c:	mov	w3, #0x2bc                 	// #700
  40f510:	mov	w0, wzr
  40f514:	bl	403a98 <log_assert_failed_realm@plt>
  40f518:	adrp	x1, 422000 <ascii_strlower_n@plt+0x1dbf8>
  40f51c:	adrp	x2, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40f520:	adrp	x4, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40f524:	add	x1, x1, #0x47
  40f528:	add	x2, x2, #0xad6
  40f52c:	add	x4, x4, #0xfd4
  40f530:	mov	w3, #0x2bd                 	// #701
  40f534:	mov	w0, wzr
  40f538:	bl	403a98 <log_assert_failed_realm@plt>
  40f53c:	adrp	x1, 422000 <ascii_strlower_n@plt+0x1dbf8>
  40f540:	adrp	x2, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40f544:	adrp	x4, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40f548:	add	x1, x1, #0x52
  40f54c:	add	x2, x2, #0xad6
  40f550:	add	x4, x4, #0xfd4
  40f554:	mov	w3, #0x2be                 	// #702
  40f558:	mov	w0, wzr
  40f55c:	bl	403a98 <log_assert_failed_realm@plt>
  40f560:	adrp	x1, 422000 <ascii_strlower_n@plt+0x1dbf8>
  40f564:	adrp	x2, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40f568:	adrp	x4, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40f56c:	add	x1, x1, #0x6a
  40f570:	add	x2, x2, #0xad6
  40f574:	add	x4, x4, #0xfd4
  40f578:	mov	w3, #0x2c3                 	// #707
  40f57c:	mov	w0, wzr
  40f580:	bl	403a98 <log_assert_failed_realm@plt>
  40f584:	sub	sp, sp, #0x50
  40f588:	stp	x29, x30, [sp, #32]
  40f58c:	stp	x22, x21, [sp, #48]
  40f590:	stp	x20, x19, [sp, #64]
  40f594:	add	x29, sp, #0x20
  40f598:	cbz	x0, 40f698 <ascii_strlower_n@plt+0xb290>
  40f59c:	mov	x20, x0
  40f5a0:	ldr	x21, [x20, #56]!
  40f5a4:	mov	x19, x0
  40f5a8:	ldr	x9, [x20, #8]
  40f5ac:	cmn	x21, #0x1
  40f5b0:	b.eq	40f634 <ascii_strlower_n@plt+0xb22c>  // b.none
  40f5b4:	cmn	x9, #0x1
  40f5b8:	b.eq	40f6b8 <ascii_strlower_n@plt+0xb2b0>  // b.none
  40f5bc:	ldr	x8, [x19, #40]
  40f5c0:	add	x22, x19, #0xa8
  40f5c4:	cmp	x8, #0x0
  40f5c8:	csel	x10, x22, x8, eq  // eq = none
  40f5cc:	ldrh	w10, [x10, #10]
  40f5d0:	cbz	w10, 40f6dc <ascii_strlower_n@plt+0xb2d4>
  40f5d4:	ldr	x10, [x19, #8]
  40f5d8:	add	x9, x9, x21
  40f5dc:	cmp	x9, x10
  40f5e0:	b.ne	40f644 <ascii_strlower_n@plt+0xb23c>  // b.any
  40f5e4:	cmp	x9, x21
  40f5e8:	b.ls	40f654 <ascii_strlower_n@plt+0xb24c>  // b.plast
  40f5ec:	mov	w8, #0xfffffffe            	// #-2
  40f5f0:	str	w8, [sp, #16]
  40f5f4:	str	xzr, [sp, #24]
  40f5f8:	ldr	x0, [x19, #48]
  40f5fc:	add	x1, sp, #0x10
  40f600:	mov	x2, sp
  40f604:	add	x3, sp, #0x8
  40f608:	bl	404098 <internal_hashmap_iterate@plt>
  40f60c:	tbz	w0, #0, 40f64c <ascii_strlower_n@plt+0xb244>
  40f610:	ldr	x8, [sp]
  40f614:	cmp	x8, x21
  40f618:	b.cc	40f5f8 <ascii_strlower_n@plt+0xb1f0>  // b.lo, b.ul, b.last
  40f61c:	ldr	x0, [x19, #48]
  40f620:	ldr	x1, [sp, #8]
  40f624:	bl	4040a8 <internal_hashmap_remove@plt>
  40f628:	ldr	x0, [sp, #8]
  40f62c:	bl	4039d8 <free@plt>
  40f630:	b	40f5f8 <ascii_strlower_n@plt+0xb1f0>
  40f634:	cmn	x9, #0x1
  40f638:	b.ne	40f700 <ascii_strlower_n@plt+0xb2f8>  // b.any
  40f63c:	mov	w0, wzr
  40f640:	b	40f684 <ascii_strlower_n@plt+0xb27c>
  40f644:	mov	w0, #0xfffffff0            	// #-16
  40f648:	b	40f684 <ascii_strlower_n@plt+0xb27c>
  40f64c:	ldr	x8, [x19, #40]
  40f650:	str	x21, [x19, #8]
  40f654:	cmp	x8, #0x0
  40f658:	csel	x8, x22, x8, eq  // eq = none
  40f65c:	ldrh	w9, [x8, #10]
  40f660:	mov	x10, #0xffffffffffffffff    	// #-1
  40f664:	mov	w0, #0x1                   	// #1
  40f668:	rev	w9, w9
  40f66c:	lsr	w9, w9, #16
  40f670:	sub	w9, w9, #0x1
  40f674:	rev	w9, w9
  40f678:	lsr	w9, w9, #16
  40f67c:	strh	w9, [x8, #10]
  40f680:	stp	x10, x10, [x20]
  40f684:	ldp	x20, x19, [sp, #64]
  40f688:	ldp	x22, x21, [sp, #48]
  40f68c:	ldp	x29, x30, [sp, #32]
  40f690:	add	sp, sp, #0x50
  40f694:	ret
  40f698:	adrp	x1, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40f69c:	adrp	x2, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40f6a0:	adrp	x4, 422000 <ascii_strlower_n@plt+0x1dbf8>
  40f6a4:	add	x1, x1, #0xb90
  40f6a8:	add	x2, x2, #0xad6
  40f6ac:	add	x4, x4, #0x85
  40f6b0:	mov	w3, #0x31b                 	// #795
  40f6b4:	bl	403a98 <log_assert_failed_realm@plt>
  40f6b8:	adrp	x1, 422000 <ascii_strlower_n@plt+0x1dbf8>
  40f6bc:	adrp	x2, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40f6c0:	adrp	x4, 422000 <ascii_strlower_n@plt+0x1dbf8>
  40f6c4:	add	x1, x1, #0xae
  40f6c8:	add	x2, x2, #0xad6
  40f6cc:	add	x4, x4, #0x85
  40f6d0:	mov	w3, #0x322                 	// #802
  40f6d4:	mov	w0, wzr
  40f6d8:	bl	403a98 <log_assert_failed_realm@plt>
  40f6dc:	adrp	x1, 422000 <ascii_strlower_n@plt+0x1dbf8>
  40f6e0:	adrp	x2, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40f6e4:	adrp	x4, 422000 <ascii_strlower_n@plt+0x1dbf8>
  40f6e8:	add	x1, x1, #0xc9
  40f6ec:	add	x2, x2, #0xad6
  40f6f0:	add	x4, x4, #0x85
  40f6f4:	mov	w3, #0x323                 	// #803
  40f6f8:	mov	w0, wzr
  40f6fc:	bl	403a98 <log_assert_failed_realm@plt>
  40f700:	adrp	x1, 422000 <ascii_strlower_n@plt+0x1dbf8>
  40f704:	adrp	x2, 421000 <ascii_strlower_n@plt+0x1cbf8>
  40f708:	adrp	x4, 422000 <ascii_strlower_n@plt+0x1dbf8>
  40f70c:	add	x1, x1, #0x6a
  40f710:	add	x2, x2, #0xad6
  40f714:	add	x4, x4, #0x85
  40f718:	mov	w3, #0x31e                 	// #798
  40f71c:	mov	w0, wzr
  40f720:	bl	403a98 <log_assert_failed_realm@plt>
  40f724:	sub	sp, sp, #0xc0
  40f728:	stp	x29, x30, [sp, #96]
  40f72c:	stp	x28, x27, [sp, #112]
  40f730:	stp	x26, x25, [sp, #128]
  40f734:	stp	x24, x23, [sp, #144]
  40f738:	stp	x22, x21, [sp, #160]
  40f73c:	stp	x20, x19, [sp, #176]
  40f740:	add	x29, sp, #0x60
  40f744:	cbz	x0, 412d2c <ascii_strlower_n@plt+0xe924>
  40f748:	mov	x25, x1
  40f74c:	cbz	x1, 412d4c <ascii_strlower_n@plt+0xe944>
  40f750:	mov	x24, x0
  40f754:	ldr	x22, [x24, #8]!
  40f758:	ldr	x1, [x25, #8]
  40f75c:	mov	x19, x3
  40f760:	mov	x3, xzr
  40f764:	mov	x21, x4
  40f768:	mov	w23, w2
  40f76c:	mov	x20, x0
  40f770:	bl	40ea28 <ascii_strlower_n@plt+0xa620>
  40f774:	tbnz	w0, #31, 412bec <ascii_strlower_n@plt+0xe7e4>
  40f778:	stur	x24, [x29, #-32]
  40f77c:	tbnz	w23, #4, 40f788 <ascii_strlower_n@plt+0xb380>
  40f780:	ldr	w27, [x25, #24]
  40f784:	b	40f78c <ascii_strlower_n@plt+0xb384>
  40f788:	mov	w27, wzr
  40f78c:	mov	x9, x20
  40f790:	ldr	x8, [x9, #16]!
  40f794:	ldur	x24, [x9, #-8]
  40f798:	stur	x9, [x29, #-24]
  40f79c:	add	x28, x24, #0x4
  40f7a0:	cmp	x28, x8
  40f7a4:	b.ls	40f7e4 <ascii_strlower_n@plt+0xb3dc>  // b.plast
  40f7a8:	bl	404058 <page_size@plt>
  40f7ac:	ldr	x9, [x20, #32]
  40f7b0:	add	x8, x0, x28, lsl #1
  40f7b4:	neg	x10, x0
  40f7b8:	sub	x8, x8, #0x1
  40f7bc:	and	x8, x8, x10
  40f7c0:	cmp	x9, #0x0
  40f7c4:	mov	w10, #0xffff                	// #65535
  40f7c8:	csel	x9, x10, x9, eq  // eq = none
  40f7cc:	cmp	x8, x9
  40f7d0:	csel	x23, x9, x8, hi  // hi = pmore
  40f7d4:	cmp	x28, x23
  40f7d8:	b.ls	40f7ec <ascii_strlower_n@plt+0xb3e4>  // b.plast
  40f7dc:	mov	w26, #0xffffffa6            	// #-90
  40f7e0:	b	412bf0 <ascii_strlower_n@plt+0xe7e8>
  40f7e4:	ldr	x26, [x20, #40]
  40f7e8:	b	40f850 <ascii_strlower_n@plt+0xb448>
  40f7ec:	ldr	x0, [x20, #40]
  40f7f0:	cbz	x0, 40f814 <ascii_strlower_n@plt+0xb40c>
  40f7f4:	mov	x1, x23
  40f7f8:	bl	4040b8 <realloc@plt>
  40f7fc:	cbz	x0, 412d24 <ascii_strlower_n@plt+0xe91c>
  40f800:	ldr	x24, [x20, #8]
  40f804:	mov	x26, x0
  40f808:	str	x0, [x20, #40]
  40f80c:	add	x28, x24, #0x4
  40f810:	b	40f848 <ascii_strlower_n@plt+0xb440>
  40f814:	mov	x0, x23
  40f818:	bl	4040c8 <malloc@plt>
  40f81c:	str	x0, [x20, #40]
  40f820:	cbz	x0, 412d24 <ascii_strlower_n@plt+0xe91c>
  40f824:	add	x1, x20, #0xa8
  40f828:	mov	x2, x24
  40f82c:	mov	x26, x0
  40f830:	bl	403c68 <memcpy@plt>
  40f834:	subs	x2, x23, x24
  40f838:	b.eq	40f848 <ascii_strlower_n@plt+0xb440>  // b.none
  40f83c:	add	x0, x26, x24
  40f840:	mov	w1, wzr
  40f844:	bl	403c58 <memset@plt>
  40f848:	ldur	x8, [x29, #-24]
  40f84c:	str	x23, [x8]
  40f850:	add	x8, x20, #0xa8
  40f854:	cmp	x26, #0x0
  40f858:	stur	x8, [x29, #-40]
  40f85c:	csel	x8, x8, x26, eq  // eq = none
  40f860:	rev	w9, w27
  40f864:	sub	x2, x29, #0x8
  40f868:	sub	x3, x29, #0x10
  40f86c:	mov	w1, #0x2                   	// #2
  40f870:	mov	x0, x20
  40f874:	str	x28, [x20, #8]
  40f878:	str	w9, [x8, x24]
  40f87c:	bl	40dfe8 <ascii_strlower_n@plt+0x9be0>
  40f880:	tbnz	w0, #31, 412bec <ascii_strlower_n@plt+0xe7e4>
  40f884:	ldur	x8, [x29, #-8]
  40f888:	ldur	x28, [x29, #-32]
  40f88c:	str	x21, [sp, #40]
  40f890:	add	x24, x20, #0x28
  40f894:	strh	wzr, [x8]
  40f898:	ldrb	w8, [x25, #48]
  40f89c:	ldr	x21, [x28]
  40f8a0:	str	x24, [sp, #48]
  40f8a4:	tbnz	w8, #0, 40fac4 <ascii_strlower_n@plt+0xb6bc>
  40f8a8:	ldr	x8, [x25, #8]
  40f8ac:	ldrh	w9, [x8, #6]
  40f8b0:	sub	w8, w9, #0x1
  40f8b4:	cmp	w8, #0x62
  40f8b8:	b.hi	40fa40 <ascii_strlower_n@plt+0xb638>  // b.pmore
  40f8bc:	adrp	x9, 424000 <ascii_strlower_n@plt+0x1fbf8>
  40f8c0:	add	x9, x9, #0xfd0
  40f8c4:	adr	x10, 40f8d4 <ascii_strlower_n@plt+0xb4cc>
  40f8c8:	ldrh	w11, [x9, x8, lsl #1]
  40f8cc:	add	x10, x10, x11, lsl #2
  40f8d0:	br	x10
  40f8d4:	str	x21, [sp, #32]
  40f8d8:	ldr	x21, [sp, #40]
  40f8dc:	add	x9, x25, #0x50
  40f8e0:	mov	w2, #0x1                   	// #1
  40f8e4:	ldr	x1, [x9]
  40f8e8:	mov	x0, x20
  40f8ec:	mov	w3, wzr
  40f8f0:	mov	x4, xzr
  40f8f4:	bl	40e528 <ascii_strlower_n@plt+0xa120>
  40f8f8:	tbz	w0, #31, 40fbc0 <ascii_strlower_n@plt+0xb7b8>
  40f8fc:	mov	w26, w0
  40f900:	b	412bf0 <ascii_strlower_n@plt+0xe7e8>
  40f904:	ldr	x23, [x25, #80]
  40f908:	cbz	x23, 410408 <ascii_strlower_n@plt+0xc000>
  40f90c:	stp	x19, x21, [sp, #24]
  40f910:	str	x22, [sp, #16]
  40f914:	b	40f928 <ascii_strlower_n@plt+0xb520>
  40f918:	ldr	x23, [x23, #8]
  40f91c:	ldr	x19, [sp, #24]
  40f920:	ldr	x24, [sp, #48]
  40f924:	cbz	x23, 40fbc0 <ascii_strlower_n@plt+0xb7b8>
  40f928:	mov	x25, x23
  40f92c:	ldr	x26, [x25], #24
  40f930:	cmp	x26, #0xff
  40f934:	b.hi	4117b0 <ascii_strlower_n@plt+0xd3a8>  // b.pmore
  40f938:	ldur	x8, [x29, #-24]
  40f93c:	ldr	x27, [x28]
  40f940:	add	x22, x26, #0x1
  40f944:	ldr	x8, [x8]
  40f948:	add	x19, x27, x22
  40f94c:	cmp	x19, x8
  40f950:	b.ls	40f9b8 <ascii_strlower_n@plt+0xb5b0>  // b.plast
  40f954:	bl	404058 <page_size@plt>
  40f958:	ldr	x9, [x20, #32]
  40f95c:	add	x8, x0, x19, lsl #1
  40f960:	sub	x8, x8, #0x1
  40f964:	neg	x10, x0
  40f968:	and	x8, x8, x10
  40f96c:	cmp	x9, #0x0
  40f970:	mov	w10, #0xffff                	// #65535
  40f974:	csel	x9, x10, x9, eq  // eq = none
  40f978:	cmp	x8, x9
  40f97c:	csel	x28, x9, x8, hi  // hi = pmore
  40f980:	cmp	x19, x28
  40f984:	b.hi	410554 <ascii_strlower_n@plt+0xc14c>  // b.pmore
  40f988:	ldr	x0, [x24]
  40f98c:	cbz	x0, 40f9c4 <ascii_strlower_n@plt+0xb5bc>
  40f990:	mov	x1, x28
  40f994:	bl	4040b8 <realloc@plt>
  40f998:	cbz	x0, 410560 <ascii_strlower_n@plt+0xc158>
  40f99c:	ldr	x8, [sp, #48]
  40f9a0:	mov	x24, x0
  40f9a4:	str	x0, [x8]
  40f9a8:	ldur	x8, [x29, #-32]
  40f9ac:	ldr	x27, [x8]
  40f9b0:	add	x19, x27, x22
  40f9b4:	b	40f9fc <ascii_strlower_n@plt+0xb5f4>
  40f9b8:	ldr	x24, [x24]
  40f9bc:	ldr	x22, [sp, #16]
  40f9c0:	b	40fa0c <ascii_strlower_n@plt+0xb604>
  40f9c4:	mov	x0, x28
  40f9c8:	mov	x21, x24
  40f9cc:	bl	4040c8 <malloc@plt>
  40f9d0:	str	x0, [x24]
  40f9d4:	cbz	x0, 410560 <ascii_strlower_n@plt+0xc158>
  40f9d8:	ldur	x1, [x29, #-40]
  40f9dc:	mov	x2, x27
  40f9e0:	mov	x24, x0
  40f9e4:	bl	403c68 <memcpy@plt>
  40f9e8:	subs	x2, x28, x27
  40f9ec:	b.eq	40f9fc <ascii_strlower_n@plt+0xb5f4>  // b.none
  40f9f0:	add	x0, x24, x27
  40f9f4:	mov	w1, wzr
  40f9f8:	bl	403c58 <memset@plt>
  40f9fc:	ldur	x8, [x29, #-24]
  40fa00:	ldr	x22, [sp, #16]
  40fa04:	str	x28, [x8]
  40fa08:	ldur	x28, [x29, #-32]
  40fa0c:	ldur	x8, [x29, #-40]
  40fa10:	ldr	x21, [sp, #40]
  40fa14:	cmp	x24, #0x0
  40fa18:	str	x19, [x28]
  40fa1c:	csel	x8, x8, x24, eq  // eq = none
  40fa20:	add	x8, x8, x27
  40fa24:	strb	w26, [x8]
  40fa28:	cbz	x26, 40f918 <ascii_strlower_n@plt+0xb510>
  40fa2c:	add	x0, x8, #0x1
  40fa30:	mov	x1, x25
  40fa34:	mov	x2, x26
  40fa38:	bl	403c68 <memcpy@plt>
  40fa3c:	b	40f918 <ascii_strlower_n@plt+0xb510>
  40fa40:	cmp	w9, #0x101
  40fa44:	b.ne	40fac4 <ascii_strlower_n@plt+0xb6bc>  // b.any
  40fa48:	ldur	x8, [x29, #-24]
  40fa4c:	ldrb	w23, [x25, #80]
  40fa50:	str	x19, [sp, #24]
  40fa54:	add	x19, x21, #0x1
  40fa58:	ldr	x8, [x8]
  40fa5c:	cmp	x19, x8
  40fa60:	b.ls	410538 <ascii_strlower_n@plt+0xc130>  // b.plast
  40fa64:	bl	404058 <page_size@plt>
  40fa68:	ldr	x9, [x20, #32]
  40fa6c:	add	x8, x0, x19, lsl #1
  40fa70:	neg	x10, x0
  40fa74:	sub	x8, x8, #0x1
  40fa78:	and	x8, x8, x10
  40fa7c:	cmp	x9, #0x0
  40fa80:	mov	w10, #0xffff                	// #65535
  40fa84:	csel	x9, x10, x9, eq  // eq = none
  40fa88:	cmp	x8, x9
  40fa8c:	csel	x26, x9, x8, hi  // hi = pmore
  40fa90:	cmp	x19, x26
  40fa94:	b.hi	40fc34 <ascii_strlower_n@plt+0xb82c>  // b.pmore
  40fa98:	ldr	x0, [x24]
  40fa9c:	cbz	x0, 410e50 <ascii_strlower_n@plt+0xca48>
  40faa0:	mov	x1, x26
  40faa4:	bl	4040b8 <realloc@plt>
  40faa8:	cbz	x0, 412af0 <ascii_strlower_n@plt+0xe6e8>
  40faac:	ldr	x8, [sp, #48]
  40fab0:	mov	x24, x0
  40fab4:	str	x0, [x8]
  40fab8:	ldr	x8, [x28]
  40fabc:	add	x19, x8, #0x1
  40fac0:	b	410e8c <ascii_strlower_n@plt+0xca84>
  40fac4:	ldur	x8, [x29, #-24]
  40fac8:	ldp	x25, x26, [x25, #80]
  40facc:	str	x21, [sp, #32]
  40fad0:	ldr	x8, [x8]
  40fad4:	add	x23, x26, x21
  40fad8:	cmp	x23, x8
  40fadc:	b.ls	40fb40 <ascii_strlower_n@plt+0xb738>  // b.plast
  40fae0:	bl	404058 <page_size@plt>
  40fae4:	ldr	x9, [x20, #32]
  40fae8:	add	x8, x0, x23, lsl #1
  40faec:	neg	x10, x0
  40faf0:	sub	x8, x8, #0x1
  40faf4:	and	x8, x8, x10
  40faf8:	cmp	x9, #0x0
  40fafc:	mov	w10, #0xffff                	// #65535
  40fb00:	csel	x9, x10, x9, eq  // eq = none
  40fb04:	cmp	x8, x9
  40fb08:	csel	x27, x9, x8, hi  // hi = pmore
  40fb0c:	cmp	x23, x27
  40fb10:	b.hi	40fc34 <ascii_strlower_n@plt+0xb82c>  // b.pmore
  40fb14:	ldr	x0, [x24]
  40fb18:	cbz	x0, 40fb4c <ascii_strlower_n@plt+0xb744>
  40fb1c:	mov	x1, x27
  40fb20:	bl	4040b8 <realloc@plt>
  40fb24:	cbz	x0, 412af0 <ascii_strlower_n@plt+0xe6e8>
  40fb28:	ldr	x8, [sp, #48]
  40fb2c:	mov	x24, x0
  40fb30:	str	x0, [x8]
  40fb34:	ldr	x8, [x28]
  40fb38:	add	x23, x8, x26
  40fb3c:	b	40fb8c <ascii_strlower_n@plt+0xb784>
  40fb40:	ldr	x24, [x24]
  40fb44:	mov	x8, x21
  40fb48:	b	40fb94 <ascii_strlower_n@plt+0xb78c>
  40fb4c:	mov	x0, x27
  40fb50:	mov	x21, x24
  40fb54:	bl	4040c8 <malloc@plt>
  40fb58:	str	x0, [x24]
  40fb5c:	cbz	x0, 412af0 <ascii_strlower_n@plt+0xe6e8>
  40fb60:	ldr	x21, [sp, #32]
  40fb64:	ldur	x1, [x29, #-40]
  40fb68:	mov	x24, x0
  40fb6c:	mov	x2, x21
  40fb70:	bl	403c68 <memcpy@plt>
  40fb74:	subs	x2, x27, x21
  40fb78:	b.eq	40fb88 <ascii_strlower_n@plt+0xb780>  // b.none
  40fb7c:	add	x0, x24, x21
  40fb80:	mov	w1, wzr
  40fb84:	bl	403c58 <memset@plt>
  40fb88:	mov	x8, x21
  40fb8c:	ldur	x9, [x29, #-24]
  40fb90:	str	x27, [x9]
  40fb94:	ldur	x9, [x29, #-40]
  40fb98:	cmp	x24, #0x0
  40fb9c:	str	x23, [x28]
  40fba0:	csel	x9, x9, x24, eq  // eq = none
  40fba4:	ldp	x21, x24, [sp, #40]
  40fba8:	cbz	x26, 40fbc0 <ascii_strlower_n@plt+0xb7b8>
  40fbac:	cbz	x25, 412d70 <ascii_strlower_n@plt+0xe968>
  40fbb0:	add	x0, x9, x8
  40fbb4:	mov	x1, x25
  40fbb8:	mov	x2, x26
  40fbbc:	bl	403c68 <memcpy@plt>
  40fbc0:	ldr	x23, [x28]
  40fbc4:	ldur	x25, [x29, #-16]
  40fbc8:	sub	x8, x23, x25
  40fbcc:	sub	x27, x8, #0x2
  40fbd0:	lsr	x8, x27, #16
  40fbd4:	cbz	x8, 40fbe0 <ascii_strlower_n@plt+0xb7d8>
  40fbd8:	mov	w26, #0xffffffe4            	// #-28
  40fbdc:	b	412bf0 <ascii_strlower_n@plt+0xe7e8>
  40fbe0:	mov	x8, x28
  40fbe4:	str	x25, [x8]
  40fbe8:	ldur	x8, [x29, #-24]
  40fbec:	mov	x28, x19
  40fbf0:	add	x19, x25, #0x2
  40fbf4:	ldr	x8, [x8]
  40fbf8:	cmp	x19, x8
  40fbfc:	b.ls	40fc3c <ascii_strlower_n@plt+0xb834>  // b.plast
  40fc00:	bl	404058 <page_size@plt>
  40fc04:	ldr	x9, [x20, #32]
  40fc08:	add	x8, x0, x19, lsl #1
  40fc0c:	neg	x10, x0
  40fc10:	sub	x8, x8, #0x1
  40fc14:	and	x8, x8, x10
  40fc18:	cmp	x9, #0x0
  40fc1c:	mov	w10, #0xffff                	// #65535
  40fc20:	csel	x9, x10, x9, eq  // eq = none
  40fc24:	cmp	x8, x9
  40fc28:	csel	x24, x9, x8, hi  // hi = pmore
  40fc2c:	cmp	x19, x24
  40fc30:	b.ls	40fc4c <ascii_strlower_n@plt+0xb844>  // b.plast
  40fc34:	mov	w26, #0xffffffa6            	// #-90
  40fc38:	b	412bf0 <ascii_strlower_n@plt+0xe7e8>
  40fc3c:	ldr	x26, [x24]
  40fc40:	ldur	x10, [x29, #-32]
  40fc44:	mov	x19, x28
  40fc48:	b	40fcc4 <ascii_strlower_n@plt+0xb8bc>
  40fc4c:	ldr	x19, [sp, #48]
  40fc50:	ldr	x0, [x19]
  40fc54:	cbz	x0, 40fc80 <ascii_strlower_n@plt+0xb878>
  40fc58:	mov	x1, x24
  40fc5c:	bl	4040b8 <realloc@plt>
  40fc60:	cbz	x0, 412af0 <ascii_strlower_n@plt+0xe6e8>
  40fc64:	ldr	x8, [sp, #48]
  40fc68:	ldur	x10, [x29, #-32]
  40fc6c:	mov	x26, x0
  40fc70:	mov	x19, x28
  40fc74:	str	x0, [x8]
  40fc78:	ldr	x25, [x10]
  40fc7c:	b	40fcbc <ascii_strlower_n@plt+0xb8b4>
  40fc80:	mov	x0, x24
  40fc84:	bl	4040c8 <malloc@plt>
  40fc88:	str	x0, [x19]
  40fc8c:	cbz	x0, 412af0 <ascii_strlower_n@plt+0xe6e8>
  40fc90:	ldur	x1, [x29, #-40]
  40fc94:	mov	x2, x25
  40fc98:	mov	x26, x0
  40fc9c:	mov	x19, x28
  40fca0:	bl	403c68 <memcpy@plt>
  40fca4:	subs	x2, x24, x25
  40fca8:	b.eq	40fcb8 <ascii_strlower_n@plt+0xb8b0>  // b.none
  40fcac:	add	x0, x26, x25
  40fcb0:	mov	w1, wzr
  40fcb4:	bl	403c58 <memset@plt>
  40fcb8:	ldur	x10, [x29, #-32]
  40fcbc:	ldur	x8, [x29, #-24]
  40fcc0:	str	x24, [x8]
  40fcc4:	ldur	x9, [x29, #-40]
  40fcc8:	cmp	x26, #0x0
  40fccc:	rev	w8, w27
  40fcd0:	lsr	w8, w8, #16
  40fcd4:	csel	x9, x9, x26, eq  // eq = none
  40fcd8:	strh	w8, [x9, x25]
  40fcdc:	str	x23, [x10]
  40fce0:	cbz	x19, 40fce8 <ascii_strlower_n@plt+0xb8e0>
  40fce4:	str	x22, [x19]
  40fce8:	ldr	x8, [sp, #32]
  40fcec:	mov	w26, wzr
  40fcf0:	cbz	x21, 412bfc <ascii_strlower_n@plt+0xe7f4>
  40fcf4:	sub	x8, x8, x22
  40fcf8:	str	x8, [x21]
  40fcfc:	b	412bfc <ascii_strlower_n@plt+0xe7f4>
  40fd00:	ldur	x8, [x29, #-24]
  40fd04:	ldrb	w23, [x25, #80]
  40fd08:	str	x19, [sp, #24]
  40fd0c:	add	x19, x21, #0x1
  40fd10:	ldr	x8, [x8]
  40fd14:	cmp	x19, x8
  40fd18:	b.ls	41047c <ascii_strlower_n@plt+0xc074>  // b.plast
  40fd1c:	bl	404058 <page_size@plt>
  40fd20:	ldr	x9, [x20, #32]
  40fd24:	add	x8, x0, x19, lsl #1
  40fd28:	neg	x10, x0
  40fd2c:	sub	x8, x8, #0x1
  40fd30:	and	x8, x8, x10
  40fd34:	cmp	x9, #0x0
  40fd38:	mov	w10, #0xffff                	// #65535
  40fd3c:	csel	x9, x10, x9, eq  // eq = none
  40fd40:	cmp	x8, x9
  40fd44:	csel	x26, x9, x8, hi  // hi = pmore
  40fd48:	cmp	x19, x26
  40fd4c:	b.hi	40fc34 <ascii_strlower_n@plt+0xb82c>  // b.pmore
  40fd50:	ldr	x0, [x24]
  40fd54:	cbz	x0, 410578 <ascii_strlower_n@plt+0xc170>
  40fd58:	mov	x1, x26
  40fd5c:	bl	4040b8 <realloc@plt>
  40fd60:	cbz	x0, 412af0 <ascii_strlower_n@plt+0xe6e8>
  40fd64:	ldr	x8, [sp, #48]
  40fd68:	mov	x24, x0
  40fd6c:	str	x0, [x8]
  40fd70:	ldr	x8, [x28]
  40fd74:	add	x19, x8, #0x1
  40fd78:	b	4105b4 <ascii_strlower_n@plt+0xc1ac>
  40fd7c:	ldur	x8, [x29, #-24]
  40fd80:	ldrh	w23, [x25, #80]
  40fd84:	str	x19, [sp, #24]
  40fd88:	add	x19, x21, #0x2
  40fd8c:	ldr	x8, [x8]
  40fd90:	cmp	x19, x8
  40fd94:	b.ls	410488 <ascii_strlower_n@plt+0xc080>  // b.plast
  40fd98:	bl	404058 <page_size@plt>
  40fd9c:	ldr	x9, [x20, #32]
  40fda0:	add	x8, x0, x19, lsl #1
  40fda4:	neg	x10, x0
  40fda8:	sub	x8, x8, #0x1
  40fdac:	and	x8, x8, x10
  40fdb0:	cmp	x9, #0x0
  40fdb4:	mov	w10, #0xffff                	// #65535
  40fdb8:	csel	x9, x10, x9, eq  // eq = none
  40fdbc:	cmp	x8, x9
  40fdc0:	csel	x26, x9, x8, hi  // hi = pmore
  40fdc4:	cmp	x19, x26
  40fdc8:	b.hi	40f7dc <ascii_strlower_n@plt+0xb3d4>  // b.pmore
  40fdcc:	ldr	x0, [x24]
  40fdd0:	str	x21, [sp, #32]
  40fdd4:	cbz	x0, 41065c <ascii_strlower_n@plt+0xc254>
  40fdd8:	mov	x1, x26
  40fddc:	bl	4040b8 <realloc@plt>
  40fde0:	cbz	x0, 412d24 <ascii_strlower_n@plt+0xe91c>
  40fde4:	str	x0, [x24]
  40fde8:	ldr	x21, [x28]
  40fdec:	mov	x27, x0
  40fdf0:	add	x19, x21, #0x2
  40fdf4:	b	410698 <ascii_strlower_n@plt+0xc290>
  40fdf8:	ldur	x8, [x29, #-24]
  40fdfc:	ldrh	w23, [x25, #80]
  40fe00:	mov	x24, x19
  40fe04:	add	x19, x21, #0x2
  40fe08:	ldr	x8, [x8]
  40fe0c:	cmp	x19, x8
  40fe10:	b.ls	410494 <ascii_strlower_n@plt+0xc08c>  // b.plast
  40fe14:	bl	404058 <page_size@plt>
  40fe18:	ldr	x9, [x20, #32]
  40fe1c:	add	x8, x0, x19, lsl #1
  40fe20:	neg	x10, x0
  40fe24:	sub	x8, x8, #0x1
  40fe28:	and	x8, x8, x10
  40fe2c:	cmp	x9, #0x0
  40fe30:	mov	w10, #0xffff                	// #65535
  40fe34:	csel	x9, x10, x9, eq  // eq = none
  40fe38:	cmp	x8, x9
  40fe3c:	csel	x26, x9, x8, hi  // hi = pmore
  40fe40:	cmp	x19, x26
  40fe44:	b.hi	40f7dc <ascii_strlower_n@plt+0xb3d4>  // b.pmore
  40fe48:	str	x21, [sp, #32]
  40fe4c:	ldr	x21, [sp, #48]
  40fe50:	ldr	x0, [x21]
  40fe54:	cbz	x0, 41073c <ascii_strlower_n@plt+0xc334>
  40fe58:	mov	x1, x26
  40fe5c:	bl	4040b8 <realloc@plt>
  40fe60:	cbz	x0, 412d24 <ascii_strlower_n@plt+0xe91c>
  40fe64:	ldr	x8, [sp, #48]
  40fe68:	mov	x27, x0
  40fe6c:	str	x0, [x8]
  40fe70:	ldr	x8, [x28]
  40fe74:	add	x19, x8, #0x2
  40fe78:	b	410778 <ascii_strlower_n@plt+0xc370>
  40fe7c:	ldur	x8, [x29, #-24]
  40fe80:	add	x23, x21, #0x10
  40fe84:	ldr	x8, [x8]
  40fe88:	cmp	x23, x8
  40fe8c:	b.ls	4104a8 <ascii_strlower_n@plt+0xc0a0>  // b.plast
  40fe90:	bl	404058 <page_size@plt>
  40fe94:	ldr	x9, [x20, #32]
  40fe98:	add	x8, x0, x23, lsl #1
  40fe9c:	neg	x10, x0
  40fea0:	sub	x8, x8, #0x1
  40fea4:	and	x8, x8, x10
  40fea8:	cmp	x9, #0x0
  40feac:	mov	w10, #0xffff                	// #65535
  40feb0:	csel	x9, x10, x9, eq  // eq = none
  40feb4:	cmp	x8, x9
  40feb8:	csel	x26, x9, x8, hi  // hi = pmore
  40febc:	cmp	x23, x26
  40fec0:	b.hi	40f7dc <ascii_strlower_n@plt+0xb3d4>  // b.pmore
  40fec4:	ldr	x0, [x24]
  40fec8:	str	x21, [sp, #32]
  40fecc:	cbz	x0, 4107ac <ascii_strlower_n@plt+0xc3a4>
  40fed0:	mov	x1, x26
  40fed4:	bl	4040b8 <realloc@plt>
  40fed8:	ldr	x21, [sp, #40]
  40fedc:	cbz	x0, 412d24 <ascii_strlower_n@plt+0xe91c>
  40fee0:	str	x0, [x24]
  40fee4:	ldr	x8, [x28]
  40fee8:	mov	x27, x0
  40feec:	add	x23, x8, #0x10
  40fef0:	b	4107f0 <ascii_strlower_n@plt+0xc3e8>
  40fef4:	ldr	x1, [x25, #80]
  40fef8:	mov	x0, x20
  40fefc:	mov	w2, wzr
  40ff00:	mov	w3, wzr
  40ff04:	mov	x4, xzr
  40ff08:	bl	40e528 <ascii_strlower_n@plt+0xa120>
  40ff0c:	tbnz	w0, #31, 412bec <ascii_strlower_n@plt+0xe7e4>
  40ff10:	ldr	x1, [x25, #88]
  40ff14:	mov	x0, x20
  40ff18:	str	x21, [sp, #32]
  40ff1c:	bl	412db8 <ascii_strlower_n@plt+0xe9b0>
  40ff20:	ldr	x21, [sp, #40]
  40ff24:	tbz	w0, #31, 40fbc0 <ascii_strlower_n@plt+0xb7b8>
  40ff28:	b	412bec <ascii_strlower_n@plt+0xe7e4>
  40ff2c:	ldur	x8, [x29, #-24]
  40ff30:	mov	x23, x19
  40ff34:	add	x19, x21, #0x4
  40ff38:	ldr	x8, [x8]
  40ff3c:	cmp	x19, x8
  40ff40:	b.ls	4104bc <ascii_strlower_n@plt+0xc0b4>  // b.plast
  40ff44:	bl	404058 <page_size@plt>
  40ff48:	ldr	x9, [x20, #32]
  40ff4c:	add	x8, x0, x19, lsl #1
  40ff50:	neg	x10, x0
  40ff54:	sub	x8, x8, #0x1
  40ff58:	and	x8, x8, x10
  40ff5c:	cmp	x9, #0x0
  40ff60:	mov	w10, #0xffff                	// #65535
  40ff64:	csel	x9, x10, x9, eq  // eq = none
  40ff68:	cmp	x8, x9
  40ff6c:	csel	x26, x9, x8, hi  // hi = pmore
  40ff70:	cmp	x19, x26
  40ff74:	b.hi	40f7dc <ascii_strlower_n@plt+0xb3d4>  // b.pmore
  40ff78:	ldr	x0, [x24]
  40ff7c:	str	x21, [sp, #32]
  40ff80:	cbz	x0, 410818 <ascii_strlower_n@plt+0xc410>
  40ff84:	mov	x1, x26
  40ff88:	bl	4040b8 <realloc@plt>
  40ff8c:	ldr	x21, [sp, #40]
  40ff90:	cbz	x0, 412d24 <ascii_strlower_n@plt+0xe91c>
  40ff94:	str	x0, [x24]
  40ff98:	ldr	x8, [x28]
  40ff9c:	mov	x27, x0
  40ffa0:	add	x19, x8, #0x4
  40ffa4:	b	41085c <ascii_strlower_n@plt+0xc454>
  40ffa8:	ldr	x1, [x25, #80]
  40ffac:	mov	w2, #0x1                   	// #1
  40ffb0:	mov	x0, x20
  40ffb4:	mov	w3, wzr
  40ffb8:	mov	x4, xzr
  40ffbc:	bl	40e528 <ascii_strlower_n@plt+0xa120>
  40ffc0:	tbnz	w0, #31, 412bec <ascii_strlower_n@plt+0xe7e4>
  40ffc4:	ldr	x1, [x25, #88]
  40ffc8:	mov	w2, #0x1                   	// #1
  40ffcc:	mov	x0, x20
  40ffd0:	mov	w3, wzr
  40ffd4:	mov	x4, xzr
  40ffd8:	bl	40e528 <ascii_strlower_n@plt+0xa120>
  40ffdc:	tbnz	w0, #31, 412bec <ascii_strlower_n@plt+0xe7e4>
  40ffe0:	ldur	x8, [x29, #-24]
  40ffe4:	ldr	x26, [x28]
  40ffe8:	ldr	w23, [x25, #96]
  40ffec:	mov	x24, x19
  40fff0:	ldr	x8, [x8]
  40fff4:	add	x19, x26, #0x4
  40fff8:	cmp	x19, x8
  40fffc:	b.ls	41056c <ascii_strlower_n@plt+0xc164>  // b.plast
  410000:	bl	404058 <page_size@plt>
  410004:	ldr	x9, [x20, #32]
  410008:	add	x8, x0, x19, lsl #1
  41000c:	neg	x10, x0
  410010:	sub	x8, x8, #0x1
  410014:	and	x8, x8, x10
  410018:	cmp	x9, #0x0
  41001c:	mov	w10, #0xffff                	// #65535
  410020:	csel	x9, x10, x9, eq  // eq = none
  410024:	cmp	x8, x9
  410028:	csel	x27, x9, x8, hi  // hi = pmore
  41002c:	cmp	x19, x27
  410030:	b.hi	40f7dc <ascii_strlower_n@plt+0xb3d4>  // b.pmore
  410034:	ldr	x8, [sp, #48]
  410038:	ldr	x0, [x8]
  41003c:	cbz	x0, 411c40 <ascii_strlower_n@plt+0xd838>
  410040:	mov	x1, x27
  410044:	bl	4040b8 <realloc@plt>
  410048:	cbz	x0, 412d24 <ascii_strlower_n@plt+0xe91c>
  41004c:	ldr	x8, [sp, #48]
  410050:	mov	x28, x0
  410054:	str	x0, [x8]
  410058:	ldur	x8, [x29, #-32]
  41005c:	ldr	x26, [x8]
  410060:	add	x19, x26, #0x4
  410064:	b	411c78 <ascii_strlower_n@plt+0xd870>
  410068:	ldur	x8, [x29, #-24]
  41006c:	ldrb	w23, [x25, #80]
  410070:	str	x19, [sp, #24]
  410074:	add	x19, x21, #0x1
  410078:	ldr	x8, [x8]
  41007c:	cmp	x19, x8
  410080:	b.ls	4104d0 <ascii_strlower_n@plt+0xc0c8>  // b.plast
  410084:	bl	404058 <page_size@plt>
  410088:	ldr	x9, [x20, #32]
  41008c:	add	x8, x0, x19, lsl #1
  410090:	neg	x10, x0
  410094:	sub	x8, x8, #0x1
  410098:	and	x8, x8, x10
  41009c:	cmp	x9, #0x0
  4100a0:	mov	w10, #0xffff                	// #65535
  4100a4:	csel	x9, x10, x9, eq  // eq = none
  4100a8:	cmp	x8, x9
  4100ac:	csel	x26, x9, x8, hi  // hi = pmore
  4100b0:	cmp	x19, x26
  4100b4:	b.hi	40f7dc <ascii_strlower_n@plt+0xb3d4>  // b.pmore
  4100b8:	ldr	x0, [x24]
  4100bc:	cbz	x0, 410884 <ascii_strlower_n@plt+0xc47c>
  4100c0:	mov	x1, x26
  4100c4:	bl	4040b8 <realloc@plt>
  4100c8:	cbz	x0, 412d24 <ascii_strlower_n@plt+0xe91c>
  4100cc:	ldr	x8, [sp, #48]
  4100d0:	mov	x24, x0
  4100d4:	str	x0, [x8]
  4100d8:	ldr	x8, [x28]
  4100dc:	add	x19, x8, #0x1
  4100e0:	b	4108c0 <ascii_strlower_n@plt+0xc4b8>
  4100e4:	ldr	x26, [x25, #80]
  4100e8:	str	x21, [sp, #32]
  4100ec:	cbz	x26, 412d94 <ascii_strlower_n@plt+0xe98c>
  4100f0:	mov	x0, x26
  4100f4:	bl	403d28 <strlen@plt>
  4100f8:	ldr	x21, [sp, #40]
  4100fc:	cmp	x0, #0xff
  410100:	b.hi	4117b0 <ascii_strlower_n@plt+0xd3a8>  // b.pmore
  410104:	ldur	x8, [x29, #-24]
  410108:	ldr	x9, [sp, #32]
  41010c:	str	x19, [sp, #24]
  410110:	add	x19, x0, #0x1
  410114:	ldr	x8, [x8]
  410118:	add	x23, x19, x9
  41011c:	mov	x27, x0
  410120:	cmp	x23, x8
  410124:	b.ls	410544 <ascii_strlower_n@plt+0xc13c>  // b.plast
  410128:	bl	404058 <page_size@plt>
  41012c:	ldr	x9, [x20, #32]
  410130:	add	x8, x0, x23, lsl #1
  410134:	neg	x10, x0
  410138:	sub	x8, x8, #0x1
  41013c:	and	x8, x8, x10
  410140:	cmp	x9, #0x0
  410144:	mov	w10, #0xffff                	// #65535
  410148:	csel	x9, x10, x9, eq  // eq = none
  41014c:	cmp	x8, x9
  410150:	csel	x9, x9, x8, hi  // hi = pmore
  410154:	cmp	x23, x9
  410158:	b.hi	40f7dc <ascii_strlower_n@plt+0xb3d4>  // b.pmore
  41015c:	ldr	x8, [sp, #48]
  410160:	ldr	x0, [x8]
  410164:	cbz	x0, 411720 <ascii_strlower_n@plt+0xd318>
  410168:	mov	x1, x9
  41016c:	mov	x24, x9
  410170:	bl	4040b8 <realloc@plt>
  410174:	cbz	x0, 412d24 <ascii_strlower_n@plt+0xe91c>
  410178:	ldr	x8, [sp, #48]
  41017c:	mov	x28, x0
  410180:	str	x0, [x8]
  410184:	ldur	x8, [x29, #-32]
  410188:	ldr	x8, [x8]
  41018c:	add	x23, x8, x19
  410190:	b	411764 <ascii_strlower_n@plt+0xd35c>
  410194:	ldur	x8, [x29, #-24]
  410198:	ldrh	w23, [x25, #80]
  41019c:	add	x24, x21, #0x2
  4101a0:	ldr	x8, [x8]
  4101a4:	cmp	x24, x8
  4101a8:	b.ls	4104dc <ascii_strlower_n@plt+0xc0d4>  // b.plast
  4101ac:	bl	404058 <page_size@plt>
  4101b0:	ldr	x9, [x20, #32]
  4101b4:	add	x8, x0, x24, lsl #1
  4101b8:	neg	x10, x0
  4101bc:	sub	x8, x8, #0x1
  4101c0:	and	x8, x8, x10
  4101c4:	cmp	x9, #0x0
  4101c8:	mov	w10, #0xffff                	// #65535
  4101cc:	csel	x9, x10, x9, eq  // eq = none
  4101d0:	cmp	x8, x9
  4101d4:	csel	x26, x9, x8, hi  // hi = pmore
  4101d8:	cmp	x24, x26
  4101dc:	b.hi	40f7dc <ascii_strlower_n@plt+0xb3d4>  // b.pmore
  4101e0:	str	x21, [sp, #32]
  4101e4:	ldr	x21, [sp, #48]
  4101e8:	ldr	x0, [x21]
  4101ec:	cbz	x0, 410968 <ascii_strlower_n@plt+0xc560>
  4101f0:	mov	x1, x26
  4101f4:	bl	4040b8 <realloc@plt>
  4101f8:	cbz	x0, 412d24 <ascii_strlower_n@plt+0xe91c>
  4101fc:	ldr	x8, [sp, #48]
  410200:	mov	x27, x0
  410204:	str	x0, [x8]
  410208:	ldr	x8, [x28]
  41020c:	add	x24, x8, #0x2
  410210:	b	4109a4 <ascii_strlower_n@plt+0xc59c>
  410214:	ldur	x8, [x29, #-24]
  410218:	ldrb	w23, [x25, #80]
  41021c:	str	x19, [sp, #24]
  410220:	add	x19, x21, #0x1
  410224:	ldr	x8, [x8]
  410228:	cmp	x19, x8
  41022c:	b.ls	4104f0 <ascii_strlower_n@plt+0xc0e8>  // b.plast
  410230:	bl	404058 <page_size@plt>
  410234:	ldr	x9, [x20, #32]
  410238:	add	x8, x0, x19, lsl #1
  41023c:	neg	x10, x0
  410240:	sub	x8, x8, #0x1
  410244:	and	x8, x8, x10
  410248:	cmp	x9, #0x0
  41024c:	mov	w10, #0xffff                	// #65535
  410250:	csel	x9, x10, x9, eq  // eq = none
  410254:	cmp	x8, x9
  410258:	csel	x26, x9, x8, hi  // hi = pmore
  41025c:	cmp	x19, x26
  410260:	b.hi	40f7dc <ascii_strlower_n@plt+0xb3d4>  // b.pmore
  410264:	ldr	x0, [x24]
  410268:	cbz	x0, 410a58 <ascii_strlower_n@plt+0xc650>
  41026c:	mov	x1, x26
  410270:	bl	4040b8 <realloc@plt>
  410274:	cbz	x0, 412d24 <ascii_strlower_n@plt+0xe91c>
  410278:	ldr	x8, [sp, #48]
  41027c:	mov	x24, x0
  410280:	str	x0, [x8]
  410284:	ldr	x8, [x28]
  410288:	add	x19, x8, #0x1
  41028c:	b	410a94 <ascii_strlower_n@plt+0xc68c>
  410290:	ldur	x8, [x29, #-24]
  410294:	ldrh	w23, [x25, #80]
  410298:	str	x19, [sp, #24]
  41029c:	add	x19, x21, #0x2
  4102a0:	ldr	x8, [x8]
  4102a4:	cmp	x19, x8
  4102a8:	b.ls	4104fc <ascii_strlower_n@plt+0xc0f4>  // b.plast
  4102ac:	bl	404058 <page_size@plt>
  4102b0:	ldr	x9, [x20, #32]
  4102b4:	add	x8, x0, x19, lsl #1
  4102b8:	neg	x10, x0
  4102bc:	sub	x8, x8, #0x1
  4102c0:	and	x8, x8, x10
  4102c4:	cmp	x9, #0x0
  4102c8:	mov	w10, #0xffff                	// #65535
  4102cc:	csel	x9, x10, x9, eq  // eq = none
  4102d0:	cmp	x8, x9
  4102d4:	csel	x26, x9, x8, hi  // hi = pmore
  4102d8:	cmp	x19, x26
  4102dc:	b.hi	40f7dc <ascii_strlower_n@plt+0xb3d4>  // b.pmore
  4102e0:	ldr	x0, [x24]
  4102e4:	str	x21, [sp, #32]
  4102e8:	cbz	x0, 410b40 <ascii_strlower_n@plt+0xc738>
  4102ec:	mov	x1, x26
  4102f0:	bl	4040b8 <realloc@plt>
  4102f4:	ldr	x21, [sp, #40]
  4102f8:	cbz	x0, 412d24 <ascii_strlower_n@plt+0xe91c>
  4102fc:	str	x0, [x24]
  410300:	ldr	x8, [x28]
  410304:	mov	x27, x0
  410308:	add	x19, x8, #0x2
  41030c:	b	410b84 <ascii_strlower_n@plt+0xc77c>
  410310:	ldur	x8, [x29, #-24]
  410314:	ldrb	w23, [x25, #80]
  410318:	str	x19, [sp, #24]
  41031c:	add	x19, x21, #0x1
  410320:	ldr	x8, [x8]
  410324:	cmp	x19, x8
  410328:	b.ls	410510 <ascii_strlower_n@plt+0xc108>  // b.plast
  41032c:	bl	404058 <page_size@plt>
  410330:	ldr	x9, [x20, #32]
  410334:	add	x8, x0, x19, lsl #1
  410338:	neg	x10, x0
  41033c:	sub	x8, x8, #0x1
  410340:	and	x8, x8, x10
  410344:	cmp	x9, #0x0
  410348:	mov	w10, #0xffff                	// #65535
  41034c:	csel	x9, x10, x9, eq  // eq = none
  410350:	cmp	x8, x9
  410354:	csel	x26, x9, x8, hi  // hi = pmore
  410358:	cmp	x19, x26
  41035c:	b.hi	40f7dc <ascii_strlower_n@plt+0xb3d4>  // b.pmore
  410360:	ldr	x0, [x24]
  410364:	cbz	x0, 410c28 <ascii_strlower_n@plt+0xc820>
  410368:	mov	x1, x26
  41036c:	bl	4040b8 <realloc@plt>
  410370:	cbz	x0, 412d24 <ascii_strlower_n@plt+0xe91c>
  410374:	ldr	x8, [sp, #48]
  410378:	mov	x24, x0
  41037c:	str	x0, [x8]
  410380:	ldr	x8, [x28]
  410384:	add	x19, x8, #0x1
  410388:	b	410c64 <ascii_strlower_n@plt+0xc85c>
  41038c:	ldur	x8, [x29, #-24]
  410390:	ldrh	w23, [x25, #80]
  410394:	str	x19, [sp, #24]
  410398:	add	x19, x21, #0x2
  41039c:	ldr	x8, [x8]
  4103a0:	cmp	x19, x8
  4103a4:	b.ls	41051c <ascii_strlower_n@plt+0xc114>  // b.plast
  4103a8:	bl	404058 <page_size@plt>
  4103ac:	ldr	x9, [x20, #32]
  4103b0:	add	x8, x0, x19, lsl #1
  4103b4:	neg	x10, x0
  4103b8:	sub	x8, x8, #0x1
  4103bc:	and	x8, x8, x10
  4103c0:	cmp	x9, #0x0
  4103c4:	mov	w10, #0xffff                	// #65535
  4103c8:	csel	x9, x10, x9, eq  // eq = none
  4103cc:	cmp	x8, x9
  4103d0:	csel	x26, x9, x8, hi  // hi = pmore
  4103d4:	cmp	x19, x26
  4103d8:	b.hi	40f7dc <ascii_strlower_n@plt+0xb3d4>  // b.pmore
  4103dc:	ldr	x0, [x24]
  4103e0:	str	x21, [sp, #32]
  4103e4:	cbz	x0, 410d0c <ascii_strlower_n@plt+0xc904>
  4103e8:	mov	x1, x26
  4103ec:	bl	4040b8 <realloc@plt>
  4103f0:	cbz	x0, 412d24 <ascii_strlower_n@plt+0xe91c>
  4103f4:	str	x0, [x24]
  4103f8:	ldr	x21, [x28]
  4103fc:	mov	x27, x0
  410400:	add	x19, x21, #0x2
  410404:	b	410d48 <ascii_strlower_n@plt+0xc940>
  410408:	ldur	x8, [x29, #-24]
  41040c:	add	x23, x21, #0x1
  410410:	ldr	x8, [x8]
  410414:	cmp	x23, x8
  410418:	b.ls	410528 <ascii_strlower_n@plt+0xc120>  // b.plast
  41041c:	bl	404058 <page_size@plt>
  410420:	ldr	x9, [x20, #32]
  410424:	add	x8, x0, x23, lsl #1
  410428:	neg	x10, x0
  41042c:	sub	x8, x8, #0x1
  410430:	and	x8, x8, x10
  410434:	cmp	x9, #0x0
  410438:	mov	w10, #0xffff                	// #65535
  41043c:	csel	x9, x10, x9, eq  // eq = none
  410440:	cmp	x8, x9
  410444:	csel	x25, x9, x8, hi  // hi = pmore
  410448:	cmp	x23, x25
  41044c:	b.hi	40f7dc <ascii_strlower_n@plt+0xb3d4>  // b.pmore
  410450:	ldr	x0, [x24]
  410454:	cbz	x0, 410dec <ascii_strlower_n@plt+0xc9e4>
  410458:	mov	x1, x25
  41045c:	bl	4040b8 <realloc@plt>
  410460:	cbz	x0, 412d24 <ascii_strlower_n@plt+0xe91c>
  410464:	ldr	x8, [sp, #48]
  410468:	mov	x24, x0
  41046c:	str	x0, [x8]
  410470:	ldr	x8, [x28]
  410474:	add	x23, x8, #0x1
  410478:	b	410e28 <ascii_strlower_n@plt+0xca20>
  41047c:	ldr	x24, [x24]
  410480:	mov	x8, x21
  410484:	b	4105bc <ascii_strlower_n@plt+0xc1b4>
  410488:	ldr	x27, [x24]
  41048c:	str	x21, [sp, #32]
  410490:	b	4106a0 <ascii_strlower_n@plt+0xc298>
  410494:	str	x21, [sp, #32]
  410498:	mov	x8, x21
  41049c:	ldp	x21, x9, [sp, #40]
  4104a0:	ldr	x27, [x9]
  4104a4:	b	410784 <ascii_strlower_n@plt+0xc37c>
  4104a8:	ldr	x27, [x24]
  4104ac:	str	x21, [sp, #32]
  4104b0:	mov	x8, x21
  4104b4:	ldr	x21, [sp, #40]
  4104b8:	b	4107f8 <ascii_strlower_n@plt+0xc3f0>
  4104bc:	ldr	x27, [x24]
  4104c0:	str	x21, [sp, #32]
  4104c4:	mov	x8, x21
  4104c8:	ldr	x21, [sp, #40]
  4104cc:	b	410864 <ascii_strlower_n@plt+0xc45c>
  4104d0:	ldr	x24, [x24]
  4104d4:	mov	x8, x21
  4104d8:	b	4108c8 <ascii_strlower_n@plt+0xc4c0>
  4104dc:	str	x21, [sp, #32]
  4104e0:	mov	x8, x21
  4104e4:	ldp	x21, x9, [sp, #40]
  4104e8:	ldr	x27, [x9]
  4104ec:	b	4109b0 <ascii_strlower_n@plt+0xc5a8>
  4104f0:	ldr	x24, [x24]
  4104f4:	mov	x8, x21
  4104f8:	b	410a9c <ascii_strlower_n@plt+0xc694>
  4104fc:	ldr	x27, [x24]
  410500:	str	x21, [sp, #32]
  410504:	mov	x8, x21
  410508:	ldr	x21, [sp, #40]
  41050c:	b	410b8c <ascii_strlower_n@plt+0xc784>
  410510:	ldr	x24, [x24]
  410514:	mov	x8, x21
  410518:	b	410c6c <ascii_strlower_n@plt+0xc864>
  41051c:	ldr	x27, [x24]
  410520:	str	x21, [sp, #32]
  410524:	b	410d50 <ascii_strlower_n@plt+0xc948>
  410528:	ldr	x24, [x24]
  41052c:	str	x21, [sp, #32]
  410530:	mov	x8, x21
  410534:	b	410e34 <ascii_strlower_n@plt+0xca2c>
  410538:	ldr	x24, [x24]
  41053c:	mov	x8, x21
  410540:	b	410e94 <ascii_strlower_n@plt+0xca8c>
  410544:	ldr	x8, [sp, #48]
  410548:	ldr	x28, [x8]
  41054c:	mov	x8, x9
  410550:	b	41176c <ascii_strlower_n@plt+0xd364>
  410554:	ldr	x22, [sp, #16]
  410558:	mov	w26, #0xffffffa6            	// #-90
  41055c:	b	412bf0 <ascii_strlower_n@plt+0xe7e8>
  410560:	ldr	x22, [sp, #16]
  410564:	mov	w26, #0xfffffff4            	// #-12
  410568:	b	412bf0 <ascii_strlower_n@plt+0xe7e8>
  41056c:	ldr	x8, [sp, #48]
  410570:	ldr	x28, [x8]
  410574:	b	411c80 <ascii_strlower_n@plt+0xd878>
  410578:	mov	x0, x26
  41057c:	mov	x27, x24
  410580:	bl	4040c8 <malloc@plt>
  410584:	str	x0, [x24]
  410588:	cbz	x0, 412af0 <ascii_strlower_n@plt+0xe6e8>
  41058c:	ldur	x1, [x29, #-40]
  410590:	mov	x2, x21
  410594:	mov	x24, x0
  410598:	bl	403c68 <memcpy@plt>
  41059c:	subs	x2, x26, x21
  4105a0:	b.eq	4105b0 <ascii_strlower_n@plt+0xc1a8>  // b.none
  4105a4:	add	x0, x24, x21
  4105a8:	mov	w1, wzr
  4105ac:	bl	403c58 <memset@plt>
  4105b0:	mov	x8, x21
  4105b4:	ldur	x9, [x29, #-24]
  4105b8:	str	x26, [x9]
  4105bc:	ldur	x9, [x29, #-40]
  4105c0:	cmp	x24, #0x0
  4105c4:	str	x19, [x28]
  4105c8:	csel	x9, x9, x24, eq  // eq = none
  4105cc:	strb	w23, [x9, x8]
  4105d0:	ldur	x8, [x29, #-24]
  4105d4:	ldr	x26, [x28]
  4105d8:	ldrb	w23, [x25, #81]
  4105dc:	ldr	x8, [x8]
  4105e0:	add	x19, x26, #0x1
  4105e4:	cmp	x19, x8
  4105e8:	b.ls	410650 <ascii_strlower_n@plt+0xc248>  // b.plast
  4105ec:	bl	404058 <page_size@plt>
  4105f0:	ldr	x9, [x20, #32]
  4105f4:	add	x8, x0, x19, lsl #1
  4105f8:	neg	x10, x0
  4105fc:	sub	x8, x8, #0x1
  410600:	and	x8, x8, x10
  410604:	cmp	x9, #0x0
  410608:	mov	w10, #0xffff                	// #65535
  41060c:	csel	x9, x10, x9, eq  // eq = none
  410610:	cmp	x8, x9
  410614:	csel	x27, x9, x8, hi  // hi = pmore
  410618:	ldr	x8, [sp, #48]
  41061c:	cmp	x19, x27
  410620:	b.hi	40fc34 <ascii_strlower_n@plt+0xb82c>  // b.pmore
  410624:	ldr	x0, [x8]
  410628:	cbz	x0, 410f60 <ascii_strlower_n@plt+0xcb58>
  41062c:	mov	x1, x27
  410630:	bl	4040b8 <realloc@plt>
  410634:	cbz	x0, 412af0 <ascii_strlower_n@plt+0xe6e8>
  410638:	ldr	x8, [sp, #48]
  41063c:	mov	x24, x0
  410640:	str	x0, [x8]
  410644:	ldr	x26, [x28]
  410648:	add	x19, x26, #0x1
  41064c:	b	410f98 <ascii_strlower_n@plt+0xcb90>
  410650:	ldr	x8, [sp, #48]
  410654:	ldr	x24, [x8]
  410658:	b	410fa0 <ascii_strlower_n@plt+0xcb98>
  41065c:	mov	x0, x26
  410660:	bl	4040c8 <malloc@plt>
  410664:	str	x0, [x24]
  410668:	cbz	x0, 412d24 <ascii_strlower_n@plt+0xe91c>
  41066c:	ldr	x21, [sp, #32]
  410670:	ldur	x1, [x29, #-40]
  410674:	mov	x27, x0
  410678:	mov	x2, x21
  41067c:	bl	403c68 <memcpy@plt>
  410680:	subs	x2, x26, x21
  410684:	b.eq	410694 <ascii_strlower_n@plt+0xc28c>  // b.none
  410688:	add	x0, x27, x21
  41068c:	mov	w1, wzr
  410690:	bl	403c58 <memset@plt>
  410694:	ldr	x24, [sp, #48]
  410698:	ldur	x9, [x29, #-24]
  41069c:	str	x26, [x9]
  4106a0:	ldur	x9, [x29, #-40]
  4106a4:	cmp	x27, #0x0
  4106a8:	ldur	x8, [x29, #-24]
  4106ac:	rev16	w10, w23
  4106b0:	csel	x9, x9, x27, eq  // eq = none
  4106b4:	str	x19, [x28]
  4106b8:	strh	w10, [x9, x21]
  4106bc:	ldr	x26, [x28]
  4106c0:	ldr	x8, [x8]
  4106c4:	ldrb	w23, [x25, #82]
  4106c8:	add	x19, x26, #0x1
  4106cc:	cmp	x19, x8
  4106d0:	b.ls	410734 <ascii_strlower_n@plt+0xc32c>  // b.plast
  4106d4:	bl	404058 <page_size@plt>
  4106d8:	ldr	x9, [x20, #32]
  4106dc:	add	x8, x0, x19, lsl #1
  4106e0:	neg	x10, x0
  4106e4:	sub	x8, x8, #0x1
  4106e8:	and	x8, x8, x10
  4106ec:	cmp	x9, #0x0
  4106f0:	mov	w10, #0xffff                	// #65535
  4106f4:	csel	x9, x10, x9, eq  // eq = none
  4106f8:	cmp	x8, x9
  4106fc:	csel	x27, x9, x8, hi  // hi = pmore
  410700:	cmp	x19, x27
  410704:	b.hi	40f7dc <ascii_strlower_n@plt+0xb3d4>  // b.pmore
  410708:	ldr	x0, [x24]
  41070c:	cbz	x0, 411044 <ascii_strlower_n@plt+0xcc3c>
  410710:	mov	x1, x27
  410714:	bl	4040b8 <realloc@plt>
  410718:	cbz	x0, 412d24 <ascii_strlower_n@plt+0xe91c>
  41071c:	ldr	x8, [sp, #48]
  410720:	mov	x24, x0
  410724:	str	x0, [x8]
  410728:	ldr	x26, [x28]
  41072c:	add	x19, x26, #0x1
  410730:	b	41107c <ascii_strlower_n@plt+0xcc74>
  410734:	ldr	x24, [x24]
  410738:	b	411084 <ascii_strlower_n@plt+0xcc7c>
  41073c:	mov	x0, x26
  410740:	bl	4040c8 <malloc@plt>
  410744:	str	x0, [x21]
  410748:	cbz	x0, 412d24 <ascii_strlower_n@plt+0xe91c>
  41074c:	ldr	x21, [sp, #32]
  410750:	ldur	x1, [x29, #-40]
  410754:	mov	x27, x0
  410758:	mov	x2, x21
  41075c:	bl	403c68 <memcpy@plt>
  410760:	subs	x2, x26, x21
  410764:	b.eq	410774 <ascii_strlower_n@plt+0xc36c>  // b.none
  410768:	add	x0, x27, x21
  41076c:	mov	w1, wzr
  410770:	bl	403c58 <memset@plt>
  410774:	mov	x8, x21
  410778:	ldr	x21, [sp, #40]
  41077c:	ldur	x9, [x29, #-24]
  410780:	str	x26, [x9]
  410784:	ldur	x11, [x29, #-40]
  410788:	str	x19, [x28]
  41078c:	mov	x19, x24
  410790:	ldr	x24, [sp, #48]
  410794:	cmp	x27, #0x0
  410798:	rev16	w10, w23
  41079c:	csel	x11, x11, x27, eq  // eq = none
  4107a0:	add	x9, x25, #0x58
  4107a4:	strh	w10, [x11, x8]
  4107a8:	b	40f8e0 <ascii_strlower_n@plt+0xb4d8>
  4107ac:	mov	x0, x26
  4107b0:	bl	4040c8 <malloc@plt>
  4107b4:	ldr	x21, [sp, #40]
  4107b8:	str	x0, [x24]
  4107bc:	cbz	x0, 412d24 <ascii_strlower_n@plt+0xe91c>
  4107c0:	ldr	x24, [sp, #32]
  4107c4:	ldur	x1, [x29, #-40]
  4107c8:	mov	x27, x0
  4107cc:	mov	x2, x24
  4107d0:	bl	403c68 <memcpy@plt>
  4107d4:	subs	x2, x26, x24
  4107d8:	b.eq	4107e8 <ascii_strlower_n@plt+0xc3e0>  // b.none
  4107dc:	add	x0, x27, x24
  4107e0:	mov	w1, wzr
  4107e4:	bl	403c58 <memset@plt>
  4107e8:	mov	x8, x24
  4107ec:	ldr	x24, [sp, #48]
  4107f0:	ldur	x9, [x29, #-24]
  4107f4:	str	x26, [x9]
  4107f8:	add	x9, x25, #0x50
  4107fc:	str	x23, [x28]
  410800:	ldr	q0, [x9]
  410804:	ldur	x9, [x29, #-40]
  410808:	cmp	x27, #0x0
  41080c:	csel	x9, x9, x27, eq  // eq = none
  410810:	str	q0, [x9, x8]
  410814:	b	40fbc0 <ascii_strlower_n@plt+0xb7b8>
  410818:	mov	x0, x26
  41081c:	bl	4040c8 <malloc@plt>
  410820:	ldr	x21, [sp, #40]
  410824:	str	x0, [x24]
  410828:	cbz	x0, 412d24 <ascii_strlower_n@plt+0xe91c>
  41082c:	ldr	x24, [sp, #32]
  410830:	ldur	x1, [x29, #-40]
  410834:	mov	x27, x0
  410838:	mov	x2, x24
  41083c:	bl	403c68 <memcpy@plt>
  410840:	subs	x2, x26, x24
  410844:	b.eq	410854 <ascii_strlower_n@plt+0xc44c>  // b.none
  410848:	add	x0, x27, x24
  41084c:	mov	w1, wzr
  410850:	bl	403c58 <memset@plt>
  410854:	mov	x8, x24
  410858:	ldr	x24, [sp, #48]
  41085c:	ldur	x9, [x29, #-24]
  410860:	str	x26, [x9]
  410864:	str	x19, [x28]
  410868:	ldur	x10, [x29, #-40]
  41086c:	ldr	w9, [x25, #80]
  410870:	cmp	x27, #0x0
  410874:	mov	x19, x23
  410878:	csel	x10, x10, x27, eq  // eq = none
  41087c:	str	w9, [x10, x8]
  410880:	b	40fbc0 <ascii_strlower_n@plt+0xb7b8>
  410884:	mov	x0, x26
  410888:	mov	x27, x24
  41088c:	bl	4040c8 <malloc@plt>
  410890:	str	x0, [x24]
  410894:	cbz	x0, 412d24 <ascii_strlower_n@plt+0xe91c>
  410898:	ldur	x1, [x29, #-40]
  41089c:	mov	x2, x21
  4108a0:	mov	x24, x0
  4108a4:	bl	403c68 <memcpy@plt>
  4108a8:	subs	x2, x26, x21
  4108ac:	b.eq	4108bc <ascii_strlower_n@plt+0xc4b4>  // b.none
  4108b0:	add	x0, x24, x21
  4108b4:	mov	w1, wzr
  4108b8:	bl	403c58 <memset@plt>
  4108bc:	mov	x8, x21
  4108c0:	ldur	x9, [x29, #-24]
  4108c4:	str	x26, [x9]
  4108c8:	ldur	x9, [x29, #-40]
  4108cc:	cmp	x24, #0x0
  4108d0:	str	x19, [x28]
  4108d4:	csel	x9, x9, x24, eq  // eq = none
  4108d8:	strb	w23, [x9, x8]
  4108dc:	ldur	x8, [x29, #-24]
  4108e0:	ldr	x26, [x28]
  4108e4:	ldrb	w23, [x25, #81]
  4108e8:	ldr	x8, [x8]
  4108ec:	add	x19, x26, #0x1
  4108f0:	cmp	x19, x8
  4108f4:	b.ls	41095c <ascii_strlower_n@plt+0xc554>  // b.plast
  4108f8:	bl	404058 <page_size@plt>
  4108fc:	ldr	x9, [x20, #32]
  410900:	add	x8, x0, x19, lsl #1
  410904:	neg	x10, x0
  410908:	sub	x8, x8, #0x1
  41090c:	and	x8, x8, x10
  410910:	cmp	x9, #0x0
  410914:	mov	w10, #0xffff                	// #65535
  410918:	csel	x9, x10, x9, eq  // eq = none
  41091c:	cmp	x8, x9
  410920:	csel	x27, x9, x8, hi  // hi = pmore
  410924:	ldr	x8, [sp, #48]
  410928:	cmp	x19, x27
  41092c:	b.hi	40f7dc <ascii_strlower_n@plt+0xb3d4>  // b.pmore
  410930:	ldr	x0, [x8]
  410934:	cbz	x0, 411118 <ascii_strlower_n@plt+0xcd10>
  410938:	mov	x1, x27
  41093c:	bl	4040b8 <realloc@plt>
  410940:	cbz	x0, 412d24 <ascii_strlower_n@plt+0xe91c>
  410944:	ldr	x8, [sp, #48]
  410948:	mov	x24, x0
  41094c:	str	x0, [x8]
  410950:	ldr	x26, [x28]
  410954:	add	x19, x26, #0x1
  410958:	b	411150 <ascii_strlower_n@plt+0xcd48>
  41095c:	ldr	x8, [sp, #48]
  410960:	ldr	x24, [x8]
  410964:	b	411158 <ascii_strlower_n@plt+0xcd50>
  410968:	mov	x0, x26
  41096c:	bl	4040c8 <malloc@plt>
  410970:	str	x0, [x21]
  410974:	cbz	x0, 412d24 <ascii_strlower_n@plt+0xe91c>
  410978:	ldr	x21, [sp, #32]
  41097c:	ldur	x1, [x29, #-40]
  410980:	mov	x27, x0
  410984:	mov	x2, x21
  410988:	bl	403c68 <memcpy@plt>
  41098c:	subs	x2, x26, x21
  410990:	b.eq	4109a0 <ascii_strlower_n@plt+0xc598>  // b.none
  410994:	add	x0, x27, x21
  410998:	mov	w1, wzr
  41099c:	bl	403c58 <memset@plt>
  4109a0:	mov	x8, x21
  4109a4:	ldr	x21, [sp, #40]
  4109a8:	ldur	x9, [x29, #-24]
  4109ac:	str	x26, [x9]
  4109b0:	ldur	x9, [x29, #-40]
  4109b4:	cmp	x27, #0x0
  4109b8:	rev16	w10, w23
  4109bc:	str	x24, [x28]
  4109c0:	csel	x9, x9, x27, eq  // eq = none
  4109c4:	strh	w10, [x9, x8]
  4109c8:	ldur	x8, [x29, #-24]
  4109cc:	ldr	x26, [x28]
  4109d0:	ldrh	w23, [x25, #82]
  4109d4:	ldr	x8, [x8]
  4109d8:	add	x24, x26, #0x2
  4109dc:	cmp	x24, x8
  4109e0:	b.ls	410a4c <ascii_strlower_n@plt+0xc644>  // b.plast
  4109e4:	bl	404058 <page_size@plt>
  4109e8:	ldr	x9, [x20, #32]
  4109ec:	add	x8, x0, x24, lsl #1
  4109f0:	neg	x10, x0
  4109f4:	sub	x8, x8, #0x1
  4109f8:	and	x8, x8, x10
  4109fc:	cmp	x9, #0x0
  410a00:	mov	w10, #0xffff                	// #65535
  410a04:	csel	x9, x10, x9, eq  // eq = none
  410a08:	cmp	x8, x9
  410a0c:	csel	x27, x9, x8, hi  // hi = pmore
  410a10:	cmp	x24, x27
  410a14:	b.hi	40f7dc <ascii_strlower_n@plt+0xb3d4>  // b.pmore
  410a18:	ldr	x8, [sp, #48]
  410a1c:	ldr	x0, [x8]
  410a20:	cbz	x0, 4111f8 <ascii_strlower_n@plt+0xcdf0>
  410a24:	mov	x1, x27
  410a28:	bl	4040b8 <realloc@plt>
  410a2c:	cbz	x0, 412d24 <ascii_strlower_n@plt+0xe91c>
  410a30:	ldr	x8, [sp, #48]
  410a34:	mov	x28, x0
  410a38:	str	x0, [x8]
  410a3c:	ldur	x8, [x29, #-32]
  410a40:	ldr	x26, [x8]
  410a44:	add	x24, x26, #0x2
  410a48:	b	411230 <ascii_strlower_n@plt+0xce28>
  410a4c:	ldr	x8, [sp, #48]
  410a50:	ldr	x28, [x8]
  410a54:	b	411238 <ascii_strlower_n@plt+0xce30>
  410a58:	mov	x0, x26
  410a5c:	mov	x27, x24
  410a60:	bl	4040c8 <malloc@plt>
  410a64:	str	x0, [x24]
  410a68:	cbz	x0, 412d24 <ascii_strlower_n@plt+0xe91c>
  410a6c:	ldur	x1, [x29, #-40]
  410a70:	mov	x2, x21
  410a74:	mov	x24, x0
  410a78:	bl	403c68 <memcpy@plt>
  410a7c:	subs	x2, x26, x21
  410a80:	b.eq	410a90 <ascii_strlower_n@plt+0xc688>  // b.none
  410a84:	add	x0, x24, x21
  410a88:	mov	w1, wzr
  410a8c:	bl	403c58 <memset@plt>
  410a90:	mov	x8, x21
  410a94:	ldur	x9, [x29, #-24]
  410a98:	str	x26, [x9]
  410a9c:	ldur	x9, [x29, #-40]
  410aa0:	cmp	x24, #0x0
  410aa4:	str	x19, [x28]
  410aa8:	str	x21, [sp, #32]
  410aac:	csel	x9, x9, x24, eq  // eq = none
  410ab0:	strb	w23, [x9, x8]
  410ab4:	ldur	x8, [x29, #-24]
  410ab8:	ldr	x26, [x28]
  410abc:	ldrb	w23, [x25, #81]
  410ac0:	ldr	x8, [x8]
  410ac4:	add	x19, x26, #0x1
  410ac8:	cmp	x19, x8
  410acc:	b.ls	410b34 <ascii_strlower_n@plt+0xc72c>  // b.plast
  410ad0:	bl	404058 <page_size@plt>
  410ad4:	ldr	x9, [x20, #32]
  410ad8:	add	x8, x0, x19, lsl #1
  410adc:	neg	x10, x0
  410ae0:	sub	x8, x8, #0x1
  410ae4:	and	x8, x8, x10
  410ae8:	cmp	x9, #0x0
  410aec:	mov	w10, #0xffff                	// #65535
  410af0:	csel	x9, x10, x9, eq  // eq = none
  410af4:	ldr	x21, [sp, #48]
  410af8:	cmp	x8, x9
  410afc:	csel	x27, x9, x8, hi  // hi = pmore
  410b00:	cmp	x19, x27
  410b04:	b.hi	40f7dc <ascii_strlower_n@plt+0xb3d4>  // b.pmore
  410b08:	ldr	x0, [x21]
  410b0c:	cbz	x0, 4112e4 <ascii_strlower_n@plt+0xcedc>
  410b10:	mov	x1, x27
  410b14:	bl	4040b8 <realloc@plt>
  410b18:	cbz	x0, 412d24 <ascii_strlower_n@plt+0xe91c>
  410b1c:	ldur	x8, [x29, #-32]
  410b20:	str	x0, [x21]
  410b24:	mov	x28, x0
  410b28:	ldr	x26, [x8]
  410b2c:	add	x19, x26, #0x1
  410b30:	b	411318 <ascii_strlower_n@plt+0xcf10>
  410b34:	ldr	x21, [sp, #48]
  410b38:	ldr	x28, [x21]
  410b3c:	b	411320 <ascii_strlower_n@plt+0xcf18>
  410b40:	mov	x0, x26
  410b44:	bl	4040c8 <malloc@plt>
  410b48:	ldr	x21, [sp, #40]
  410b4c:	str	x0, [x24]
  410b50:	cbz	x0, 412d24 <ascii_strlower_n@plt+0xe91c>
  410b54:	ldr	x24, [sp, #32]
  410b58:	ldur	x1, [x29, #-40]
  410b5c:	mov	x27, x0
  410b60:	mov	x2, x24
  410b64:	bl	403c68 <memcpy@plt>
  410b68:	subs	x2, x26, x24
  410b6c:	b.eq	410b7c <ascii_strlower_n@plt+0xc774>  // b.none
  410b70:	add	x0, x27, x24
  410b74:	mov	w1, wzr
  410b78:	bl	403c58 <memset@plt>
  410b7c:	mov	x8, x24
  410b80:	ldr	x24, [sp, #48]
  410b84:	ldur	x9, [x29, #-24]
  410b88:	str	x26, [x9]
  410b8c:	ldur	x9, [x29, #-40]
  410b90:	cmp	x27, #0x0
  410b94:	rev16	w10, w23
  410b98:	str	x19, [x28]
  410b9c:	csel	x9, x9, x27, eq  // eq = none
  410ba0:	strh	w10, [x9, x8]
  410ba4:	ldur	x8, [x29, #-24]
  410ba8:	ldr	x26, [x28]
  410bac:	ldrb	w23, [x25, #82]
  410bb0:	ldr	x8, [x8]
  410bb4:	add	x19, x26, #0x1
  410bb8:	cmp	x19, x8
  410bbc:	b.ls	410c20 <ascii_strlower_n@plt+0xc818>  // b.plast
  410bc0:	bl	404058 <page_size@plt>
  410bc4:	ldr	x9, [x20, #32]
  410bc8:	add	x8, x0, x19, lsl #1
  410bcc:	neg	x10, x0
  410bd0:	sub	x8, x8, #0x1
  410bd4:	and	x8, x8, x10
  410bd8:	cmp	x9, #0x0
  410bdc:	mov	w10, #0xffff                	// #65535
  410be0:	csel	x9, x10, x9, eq  // eq = none
  410be4:	cmp	x8, x9
  410be8:	csel	x27, x9, x8, hi  // hi = pmore
  410bec:	cmp	x19, x27
  410bf0:	b.hi	40f7dc <ascii_strlower_n@plt+0xb3d4>  // b.pmore
  410bf4:	ldr	x0, [x24]
  410bf8:	cbz	x0, 4113cc <ascii_strlower_n@plt+0xcfc4>
  410bfc:	mov	x1, x27
  410c00:	bl	4040b8 <realloc@plt>
  410c04:	cbz	x0, 412d24 <ascii_strlower_n@plt+0xe91c>
  410c08:	ldr	x8, [sp, #48]
  410c0c:	mov	x24, x0
  410c10:	str	x0, [x8]
  410c14:	ldr	x26, [x28]
  410c18:	add	x19, x26, #0x1
  410c1c:	b	411404 <ascii_strlower_n@plt+0xcffc>
  410c20:	ldr	x24, [x24]
  410c24:	b	41140c <ascii_strlower_n@plt+0xd004>
  410c28:	mov	x0, x26
  410c2c:	mov	x27, x24
  410c30:	bl	4040c8 <malloc@plt>
  410c34:	str	x0, [x24]
  410c38:	cbz	x0, 412d24 <ascii_strlower_n@plt+0xe91c>
  410c3c:	ldur	x1, [x29, #-40]
  410c40:	mov	x2, x21
  410c44:	mov	x24, x0
  410c48:	bl	403c68 <memcpy@plt>
  410c4c:	subs	x2, x26, x21
  410c50:	b.eq	410c60 <ascii_strlower_n@plt+0xc858>  // b.none
  410c54:	add	x0, x24, x21
  410c58:	mov	w1, wzr
  410c5c:	bl	403c58 <memset@plt>
  410c60:	mov	x8, x21
  410c64:	ldur	x9, [x29, #-24]
  410c68:	str	x26, [x9]
  410c6c:	ldur	x9, [x29, #-40]
  410c70:	cmp	x24, #0x0
  410c74:	str	x19, [x28]
  410c78:	csel	x9, x9, x24, eq  // eq = none
  410c7c:	strb	w23, [x9, x8]
  410c80:	ldur	x8, [x29, #-24]
  410c84:	ldr	x26, [x28]
  410c88:	ldrb	w23, [x25, #81]
  410c8c:	ldr	x8, [x8]
  410c90:	add	x19, x26, #0x1
  410c94:	cmp	x19, x8
  410c98:	b.ls	410d00 <ascii_strlower_n@plt+0xc8f8>  // b.plast
  410c9c:	bl	404058 <page_size@plt>
  410ca0:	ldr	x9, [x20, #32]
  410ca4:	add	x8, x0, x19, lsl #1
  410ca8:	neg	x10, x0
  410cac:	sub	x8, x8, #0x1
  410cb0:	and	x8, x8, x10
  410cb4:	cmp	x9, #0x0
  410cb8:	mov	w10, #0xffff                	// #65535
  410cbc:	csel	x9, x10, x9, eq  // eq = none
  410cc0:	cmp	x8, x9
  410cc4:	csel	x27, x9, x8, hi  // hi = pmore
  410cc8:	ldr	x8, [sp, #48]
  410ccc:	cmp	x19, x27
  410cd0:	b.hi	40f7dc <ascii_strlower_n@plt+0xb3d4>  // b.pmore
  410cd4:	ldr	x0, [x8]
  410cd8:	cbz	x0, 4114ac <ascii_strlower_n@plt+0xd0a4>
  410cdc:	mov	x1, x27
  410ce0:	bl	4040b8 <realloc@plt>
  410ce4:	cbz	x0, 412d24 <ascii_strlower_n@plt+0xe91c>
  410ce8:	ldr	x8, [sp, #48]
  410cec:	mov	x24, x0
  410cf0:	str	x0, [x8]
  410cf4:	ldr	x26, [x28]
  410cf8:	add	x19, x26, #0x1
  410cfc:	b	4114e4 <ascii_strlower_n@plt+0xd0dc>
  410d00:	ldr	x8, [sp, #48]
  410d04:	ldr	x24, [x8]
  410d08:	b	4114ec <ascii_strlower_n@plt+0xd0e4>
  410d0c:	mov	x0, x26
  410d10:	bl	4040c8 <malloc@plt>
  410d14:	str	x0, [x24]
  410d18:	cbz	x0, 412d24 <ascii_strlower_n@plt+0xe91c>
  410d1c:	ldr	x21, [sp, #32]
  410d20:	ldur	x1, [x29, #-40]
  410d24:	mov	x27, x0
  410d28:	mov	x2, x21
  410d2c:	bl	403c68 <memcpy@plt>
  410d30:	subs	x2, x26, x21
  410d34:	b.eq	410d44 <ascii_strlower_n@plt+0xc93c>  // b.none
  410d38:	add	x0, x27, x21
  410d3c:	mov	w1, wzr
  410d40:	bl	403c58 <memset@plt>
  410d44:	ldr	x24, [sp, #48]
  410d48:	ldur	x9, [x29, #-24]
  410d4c:	str	x26, [x9]
  410d50:	ldur	x9, [x29, #-40]
  410d54:	cmp	x27, #0x0
  410d58:	ldur	x8, [x29, #-24]
  410d5c:	rev16	w10, w23
  410d60:	csel	x9, x9, x27, eq  // eq = none
  410d64:	str	x19, [x28]
  410d68:	strh	w10, [x9, x21]
  410d6c:	ldr	x26, [x28]
  410d70:	ldr	x8, [x8]
  410d74:	ldrb	w23, [x25, #82]
  410d78:	add	x19, x26, #0x1
  410d7c:	cmp	x19, x8
  410d80:	b.ls	410de4 <ascii_strlower_n@plt+0xc9dc>  // b.plast
  410d84:	bl	404058 <page_size@plt>
  410d88:	ldr	x9, [x20, #32]
  410d8c:	add	x8, x0, x19, lsl #1
  410d90:	neg	x10, x0
  410d94:	sub	x8, x8, #0x1
  410d98:	and	x8, x8, x10
  410d9c:	cmp	x9, #0x0
  410da0:	mov	w10, #0xffff                	// #65535
  410da4:	csel	x9, x10, x9, eq  // eq = none
  410da8:	cmp	x8, x9
  410dac:	csel	x27, x9, x8, hi  // hi = pmore
  410db0:	cmp	x19, x27
  410db4:	b.hi	40f7dc <ascii_strlower_n@plt+0xb3d4>  // b.pmore
  410db8:	ldr	x0, [x24]
  410dbc:	cbz	x0, 41158c <ascii_strlower_n@plt+0xd184>
  410dc0:	mov	x1, x27
  410dc4:	bl	4040b8 <realloc@plt>
  410dc8:	cbz	x0, 412d24 <ascii_strlower_n@plt+0xe91c>
  410dcc:	ldr	x8, [sp, #48]
  410dd0:	mov	x24, x0
  410dd4:	str	x0, [x8]
  410dd8:	ldr	x26, [x28]
  410ddc:	add	x19, x26, #0x1
  410de0:	b	4115c4 <ascii_strlower_n@plt+0xd1bc>
  410de4:	ldr	x24, [x24]
  410de8:	b	4115cc <ascii_strlower_n@plt+0xd1c4>
  410dec:	mov	x0, x25
  410df0:	mov	x26, x24
  410df4:	bl	4040c8 <malloc@plt>
  410df8:	str	x0, [x24]
  410dfc:	cbz	x0, 412d24 <ascii_strlower_n@plt+0xe91c>
  410e00:	ldur	x1, [x29, #-40]
  410e04:	mov	x2, x21
  410e08:	mov	x24, x0
  410e0c:	bl	403c68 <memcpy@plt>
  410e10:	subs	x2, x25, x21
  410e14:	b.eq	410e24 <ascii_strlower_n@plt+0xca1c>  // b.none
  410e18:	add	x0, x24, x21
  410e1c:	mov	w1, wzr
  410e20:	bl	403c58 <memset@plt>
  410e24:	mov	x8, x21
  410e28:	ldur	x9, [x29, #-24]
  410e2c:	str	x21, [sp, #32]
  410e30:	str	x25, [x9]
  410e34:	ldur	x9, [x29, #-40]
  410e38:	cmp	x24, #0x0
  410e3c:	str	x23, [x28]
  410e40:	csel	x9, x9, x24, eq  // eq = none
  410e44:	strb	wzr, [x9, x8]
  410e48:	ldp	x21, x24, [sp, #40]
  410e4c:	b	40fbc0 <ascii_strlower_n@plt+0xb7b8>
  410e50:	mov	x0, x26
  410e54:	mov	x27, x24
  410e58:	bl	4040c8 <malloc@plt>
  410e5c:	str	x0, [x24]
  410e60:	cbz	x0, 412af0 <ascii_strlower_n@plt+0xe6e8>
  410e64:	ldur	x1, [x29, #-40]
  410e68:	mov	x2, x21
  410e6c:	mov	x24, x0
  410e70:	bl	403c68 <memcpy@plt>
  410e74:	subs	x2, x26, x21
  410e78:	b.eq	410e88 <ascii_strlower_n@plt+0xca80>  // b.none
  410e7c:	add	x0, x24, x21
  410e80:	mov	w1, wzr
  410e84:	bl	403c58 <memset@plt>
  410e88:	mov	x8, x21
  410e8c:	ldur	x9, [x29, #-24]
  410e90:	str	x26, [x9]
  410e94:	ldur	x9, [x29, #-40]
  410e98:	cmp	x24, #0x0
  410e9c:	str	x19, [x28]
  410ea0:	str	x21, [sp, #32]
  410ea4:	csel	x9, x9, x24, eq  // eq = none
  410ea8:	strb	w23, [x9, x8]
  410eac:	ldr	x26, [x25, #88]
  410eb0:	cbz	x26, 412d94 <ascii_strlower_n@plt+0xe98c>
  410eb4:	mov	x0, x26
  410eb8:	bl	403d28 <strlen@plt>
  410ebc:	ldr	x21, [sp, #48]
  410ec0:	cmp	x0, #0xff
  410ec4:	b.ls	410ed0 <ascii_strlower_n@plt+0xcac8>  // b.plast
  410ec8:	mov	w26, #0xfffffff9            	// #-7
  410ecc:	b	412bf0 <ascii_strlower_n@plt+0xe7e8>
  410ed0:	ldur	x8, [x29, #-24]
  410ed4:	ldr	x28, [x28]
  410ed8:	add	x19, x0, #0x1
  410edc:	mov	x27, x0
  410ee0:	ldr	x8, [x8]
  410ee4:	add	x23, x28, x19
  410ee8:	cmp	x23, x8
  410eec:	b.ls	410f58 <ascii_strlower_n@plt+0xcb50>  // b.plast
  410ef0:	bl	404058 <page_size@plt>
  410ef4:	ldr	x9, [x20, #32]
  410ef8:	add	x8, x0, x23, lsl #1
  410efc:	neg	x10, x0
  410f00:	sub	x8, x8, #0x1
  410f04:	and	x8, x8, x10
  410f08:	cmp	x9, #0x0
  410f0c:	mov	w10, #0xffff                	// #65535
  410f10:	csel	x9, x10, x9, eq  // eq = none
  410f14:	cmp	x8, x9
  410f18:	csel	x8, x9, x8, hi  // hi = pmore
  410f1c:	cmp	x23, x8
  410f20:	b.hi	40fc34 <ascii_strlower_n@plt+0xb82c>  // b.pmore
  410f24:	ldr	x0, [x21]
  410f28:	cbz	x0, 412118 <ascii_strlower_n@plt+0xdd10>
  410f2c:	mov	x1, x8
  410f30:	mov	x21, x8
  410f34:	bl	4040b8 <realloc@plt>
  410f38:	cbz	x0, 412af0 <ascii_strlower_n@plt+0xe6e8>
  410f3c:	ldr	x8, [sp, #48]
  410f40:	mov	x24, x0
  410f44:	str	x0, [x8]
  410f48:	ldur	x8, [x29, #-32]
  410f4c:	ldr	x28, [x8]
  410f50:	add	x23, x28, x19
  410f54:	b	412158 <ascii_strlower_n@plt+0xdd50>
  410f58:	ldr	x24, [x21]
  410f5c:	b	412160 <ascii_strlower_n@plt+0xdd58>
  410f60:	mov	x0, x27
  410f64:	bl	4040c8 <malloc@plt>
  410f68:	ldr	x8, [sp, #48]
  410f6c:	str	x0, [x8]
  410f70:	cbz	x0, 412af0 <ascii_strlower_n@plt+0xe6e8>
  410f74:	ldur	x1, [x29, #-40]
  410f78:	mov	x2, x26
  410f7c:	mov	x24, x0
  410f80:	bl	403c68 <memcpy@plt>
  410f84:	subs	x2, x27, x26
  410f88:	b.eq	410f98 <ascii_strlower_n@plt+0xcb90>  // b.none
  410f8c:	add	x0, x24, x26
  410f90:	mov	w1, wzr
  410f94:	bl	403c58 <memset@plt>
  410f98:	ldur	x8, [x29, #-24]
  410f9c:	str	x27, [x8]
  410fa0:	ldur	x8, [x29, #-40]
  410fa4:	cmp	x24, #0x0
  410fa8:	str	x19, [x28]
  410fac:	str	x21, [sp, #32]
  410fb0:	csel	x8, x8, x24, eq  // eq = none
  410fb4:	strb	w23, [x8, x26]
  410fb8:	ldur	x8, [x29, #-24]
  410fbc:	ldr	x26, [x28]
  410fc0:	ldrb	w23, [x25, #82]
  410fc4:	ldr	x8, [x8]
  410fc8:	add	x19, x26, #0x1
  410fcc:	cmp	x19, x8
  410fd0:	b.ls	411038 <ascii_strlower_n@plt+0xcc30>  // b.plast
  410fd4:	bl	404058 <page_size@plt>
  410fd8:	ldr	x9, [x20, #32]
  410fdc:	add	x8, x0, x19, lsl #1
  410fe0:	neg	x10, x0
  410fe4:	sub	x8, x8, #0x1
  410fe8:	and	x8, x8, x10
  410fec:	cmp	x9, #0x0
  410ff0:	mov	w10, #0xffff                	// #65535
  410ff4:	csel	x9, x10, x9, eq  // eq = none
  410ff8:	ldr	x21, [sp, #48]
  410ffc:	cmp	x8, x9
  411000:	csel	x27, x9, x8, hi  // hi = pmore
  411004:	cmp	x19, x27
  411008:	b.hi	40fc34 <ascii_strlower_n@plt+0xb82c>  // b.pmore
  41100c:	ldr	x0, [x21]
  411010:	cbz	x0, 41184c <ascii_strlower_n@plt+0xd444>
  411014:	mov	x1, x27
  411018:	bl	4040b8 <realloc@plt>
  41101c:	cbz	x0, 412af0 <ascii_strlower_n@plt+0xe6e8>
  411020:	ldur	x8, [x29, #-32]
  411024:	str	x0, [x21]
  411028:	mov	x28, x0
  41102c:	ldr	x26, [x8]
  411030:	add	x19, x26, #0x1
  411034:	b	411880 <ascii_strlower_n@plt+0xd478>
  411038:	ldr	x21, [sp, #48]
  41103c:	ldr	x28, [x21]
  411040:	b	411888 <ascii_strlower_n@plt+0xd480>
  411044:	mov	x0, x27
  411048:	bl	4040c8 <malloc@plt>
  41104c:	ldr	x8, [sp, #48]
  411050:	str	x0, [x8]
  411054:	cbz	x0, 412d24 <ascii_strlower_n@plt+0xe91c>
  411058:	ldur	x1, [x29, #-40]
  41105c:	mov	x2, x26
  411060:	mov	x24, x0
  411064:	bl	403c68 <memcpy@plt>
  411068:	subs	x2, x27, x26
  41106c:	b.eq	41107c <ascii_strlower_n@plt+0xcc74>  // b.none
  411070:	add	x0, x24, x26
  411074:	mov	w1, wzr
  411078:	bl	403c58 <memset@plt>
  41107c:	ldur	x8, [x29, #-24]
  411080:	str	x27, [x8]
  411084:	ldur	x8, [x29, #-40]
  411088:	cmp	x24, #0x0
  41108c:	str	x19, [x28]
  411090:	csel	x8, x8, x24, eq  // eq = none
  411094:	strb	w23, [x8, x26]
  411098:	ldur	x8, [x29, #-24]
  41109c:	ldr	x26, [x28]
  4110a0:	ldrb	w23, [x25, #83]
  4110a4:	ldr	x8, [x8]
  4110a8:	add	x19, x26, #0x1
  4110ac:	cmp	x19, x8
  4110b0:	b.ls	41167c <ascii_strlower_n@plt+0xd274>  // b.plast
  4110b4:	bl	404058 <page_size@plt>
  4110b8:	ldr	x9, [x20, #32]
  4110bc:	add	x8, x0, x19, lsl #1
  4110c0:	neg	x10, x0
  4110c4:	sub	x8, x8, #0x1
  4110c8:	and	x8, x8, x10
  4110cc:	cmp	x9, #0x0
  4110d0:	mov	w10, #0xffff                	// #65535
  4110d4:	csel	x9, x10, x9, eq  // eq = none
  4110d8:	ldr	x21, [sp, #48]
  4110dc:	cmp	x8, x9
  4110e0:	csel	x27, x9, x8, hi  // hi = pmore
  4110e4:	cmp	x19, x27
  4110e8:	b.hi	40f7dc <ascii_strlower_n@plt+0xb3d4>  // b.pmore
  4110ec:	ldr	x0, [x21]
  4110f0:	cbz	x0, 41163c <ascii_strlower_n@plt+0xd234>
  4110f4:	mov	x1, x27
  4110f8:	bl	4040b8 <realloc@plt>
  4110fc:	cbz	x0, 412d24 <ascii_strlower_n@plt+0xe91c>
  411100:	ldur	x8, [x29, #-32]
  411104:	str	x0, [x21]
  411108:	mov	x28, x0
  41110c:	ldr	x26, [x8]
  411110:	add	x19, x26, #0x1
  411114:	b	411670 <ascii_strlower_n@plt+0xd268>
  411118:	mov	x0, x27
  41111c:	bl	4040c8 <malloc@plt>
  411120:	ldr	x8, [sp, #48]
  411124:	str	x0, [x8]
  411128:	cbz	x0, 412d24 <ascii_strlower_n@plt+0xe91c>
  41112c:	ldur	x1, [x29, #-40]
  411130:	mov	x2, x26
  411134:	mov	x24, x0
  411138:	bl	403c68 <memcpy@plt>
  41113c:	subs	x2, x27, x26
  411140:	b.eq	411150 <ascii_strlower_n@plt+0xcd48>  // b.none
  411144:	add	x0, x24, x26
  411148:	mov	w1, wzr
  41114c:	bl	403c58 <memset@plt>
  411150:	ldur	x8, [x29, #-24]
  411154:	str	x27, [x8]
  411158:	ldur	x8, [x29, #-40]
  41115c:	cmp	x24, #0x0
  411160:	str	x19, [x28]
  411164:	csel	x8, x8, x24, eq  // eq = none
  411168:	strb	w23, [x8, x26]
  41116c:	ldur	x8, [x29, #-24]
  411170:	ldr	x26, [x28]
  411174:	ldrh	w23, [x25, #82]
  411178:	ldr	x8, [x8]
  41117c:	add	x19, x26, #0x2
  411180:	cmp	x19, x8
  411184:	b.ls	4111ec <ascii_strlower_n@plt+0xcde4>  // b.plast
  411188:	bl	404058 <page_size@plt>
  41118c:	ldr	x9, [x20, #32]
  411190:	add	x8, x0, x19, lsl #1
  411194:	neg	x10, x0
  411198:	sub	x8, x8, #0x1
  41119c:	and	x8, x8, x10
  4111a0:	cmp	x9, #0x0
  4111a4:	mov	w10, #0xffff                	// #65535
  4111a8:	csel	x9, x10, x9, eq  // eq = none
  4111ac:	ldr	x24, [sp, #48]
  4111b0:	cmp	x8, x9
  4111b4:	csel	x27, x9, x8, hi  // hi = pmore
  4111b8:	cmp	x19, x27
  4111bc:	b.hi	40f7dc <ascii_strlower_n@plt+0xb3d4>  // b.pmore
  4111c0:	ldr	x0, [x24]
  4111c4:	cbz	x0, 411938 <ascii_strlower_n@plt+0xd530>
  4111c8:	mov	x1, x27
  4111cc:	bl	4040b8 <realloc@plt>
  4111d0:	cbz	x0, 412d24 <ascii_strlower_n@plt+0xe91c>
  4111d4:	ldur	x8, [x29, #-32]
  4111d8:	str	x0, [x24]
  4111dc:	mov	x28, x0
  4111e0:	ldr	x26, [x8]
  4111e4:	add	x19, x26, #0x2
  4111e8:	b	41196c <ascii_strlower_n@plt+0xd564>
  4111ec:	ldr	x24, [sp, #48]
  4111f0:	ldr	x28, [x24]
  4111f4:	b	411974 <ascii_strlower_n@plt+0xd56c>
  4111f8:	mov	x0, x27
  4111fc:	bl	4040c8 <malloc@plt>
  411200:	ldr	x8, [sp, #48]
  411204:	str	x0, [x8]
  411208:	cbz	x0, 412d24 <ascii_strlower_n@plt+0xe91c>
  41120c:	ldur	x1, [x29, #-40]
  411210:	mov	x2, x26
  411214:	mov	x28, x0
  411218:	bl	403c68 <memcpy@plt>
  41121c:	subs	x2, x27, x26
  411220:	b.eq	411230 <ascii_strlower_n@plt+0xce28>  // b.none
  411224:	add	x0, x28, x26
  411228:	mov	w1, wzr
  41122c:	bl	403c58 <memset@plt>
  411230:	ldur	x8, [x29, #-24]
  411234:	str	x27, [x8]
  411238:	ldp	x8, x9, [x29, #-40]
  41123c:	cmp	x28, #0x0
  411240:	str	x24, [x9]
  411244:	csel	x8, x8, x28, eq  // eq = none
  411248:	mov	x10, x9
  41124c:	rev16	w9, w23
  411250:	strh	w9, [x8, x26]
  411254:	ldur	x8, [x29, #-24]
  411258:	ldr	x26, [x10]
  41125c:	ldrh	w23, [x25, #84]
  411260:	ldr	x8, [x8]
  411264:	add	x24, x26, #0x2
  411268:	cmp	x24, x8
  41126c:	b.ls	4112d8 <ascii_strlower_n@plt+0xced0>  // b.plast
  411270:	bl	404058 <page_size@plt>
  411274:	ldr	x9, [x20, #32]
  411278:	add	x8, x0, x24, lsl #1
  41127c:	neg	x10, x0
  411280:	sub	x8, x8, #0x1
  411284:	and	x8, x8, x10
  411288:	cmp	x9, #0x0
  41128c:	mov	w10, #0xffff                	// #65535
  411290:	csel	x9, x10, x9, eq  // eq = none
  411294:	cmp	x8, x9
  411298:	csel	x27, x9, x8, hi  // hi = pmore
  41129c:	cmp	x24, x27
  4112a0:	b.hi	40f7dc <ascii_strlower_n@plt+0xb3d4>  // b.pmore
  4112a4:	ldr	x8, [sp, #48]
  4112a8:	ldr	x0, [x8]
  4112ac:	cbz	x0, 411a14 <ascii_strlower_n@plt+0xd60c>
  4112b0:	mov	x1, x27
  4112b4:	bl	4040b8 <realloc@plt>
  4112b8:	cbz	x0, 412d24 <ascii_strlower_n@plt+0xe91c>
  4112bc:	ldr	x8, [sp, #48]
  4112c0:	mov	x28, x0
  4112c4:	str	x0, [x8]
  4112c8:	ldur	x8, [x29, #-32]
  4112cc:	ldr	x26, [x8]
  4112d0:	add	x24, x26, #0x2
  4112d4:	b	411a4c <ascii_strlower_n@plt+0xd644>
  4112d8:	ldr	x8, [sp, #48]
  4112dc:	ldr	x28, [x8]
  4112e0:	b	411a54 <ascii_strlower_n@plt+0xd64c>
  4112e4:	mov	x0, x27
  4112e8:	bl	4040c8 <malloc@plt>
  4112ec:	str	x0, [x21]
  4112f0:	cbz	x0, 412d24 <ascii_strlower_n@plt+0xe91c>
  4112f4:	ldur	x1, [x29, #-40]
  4112f8:	mov	x2, x26
  4112fc:	mov	x28, x0
  411300:	bl	403c68 <memcpy@plt>
  411304:	subs	x2, x27, x26
  411308:	b.eq	411318 <ascii_strlower_n@plt+0xcf10>  // b.none
  41130c:	add	x0, x28, x26
  411310:	mov	w1, wzr
  411314:	bl	403c58 <memset@plt>
  411318:	ldur	x8, [x29, #-24]
  41131c:	str	x27, [x8]
  411320:	ldp	x8, x9, [x29, #-40]
  411324:	cmp	x28, #0x0
  411328:	csel	x8, x8, x28, eq  // eq = none
  41132c:	str	x19, [x9]
  411330:	strb	w23, [x8, x26]
  411334:	ldur	x8, [x29, #-24]
  411338:	ldp	x25, x26, [x25, #88]
  41133c:	ldr	x27, [x9]
  411340:	ldr	x8, [x8]
  411344:	add	x23, x27, x26
  411348:	cmp	x23, x8
  41134c:	b.ls	411924 <ascii_strlower_n@plt+0xd51c>  // b.plast
  411350:	bl	404058 <page_size@plt>
  411354:	ldr	x9, [x20, #32]
  411358:	add	x8, x0, x23, lsl #1
  41135c:	neg	x10, x0
  411360:	sub	x8, x8, #0x1
  411364:	and	x8, x8, x10
  411368:	cmp	x9, #0x0
  41136c:	mov	w10, #0xffff                	// #65535
  411370:	csel	x9, x10, x9, eq  // eq = none
  411374:	ldr	x19, [sp, #24]
  411378:	cmp	x8, x9
  41137c:	csel	x28, x9, x8, hi  // hi = pmore
  411380:	cmp	x23, x28
  411384:	b.hi	40f7dc <ascii_strlower_n@plt+0xb3d4>  // b.pmore
  411388:	ldr	x0, [x21]
  41138c:	cbnz	x0, 4116f4 <ascii_strlower_n@plt+0xd2ec>
  411390:	mov	x0, x28
  411394:	bl	4040c8 <malloc@plt>
  411398:	ldp	x21, x8, [sp, #40]
  41139c:	str	x0, [x8]
  4113a0:	cbz	x0, 412d24 <ascii_strlower_n@plt+0xe91c>
  4113a4:	ldur	x1, [x29, #-40]
  4113a8:	mov	x2, x27
  4113ac:	mov	x24, x0
  4113b0:	bl	403c68 <memcpy@plt>
  4113b4:	subs	x2, x28, x27
  4113b8:	b.eq	411d68 <ascii_strlower_n@plt+0xd960>  // b.none
  4113bc:	add	x0, x24, x27
  4113c0:	mov	w1, wzr
  4113c4:	bl	403c58 <memset@plt>
  4113c8:	b	411d68 <ascii_strlower_n@plt+0xd960>
  4113cc:	mov	x0, x27
  4113d0:	bl	4040c8 <malloc@plt>
  4113d4:	ldr	x8, [sp, #48]
  4113d8:	str	x0, [x8]
  4113dc:	cbz	x0, 412d24 <ascii_strlower_n@plt+0xe91c>
  4113e0:	ldur	x1, [x29, #-40]
  4113e4:	mov	x2, x26
  4113e8:	mov	x24, x0
  4113ec:	bl	403c68 <memcpy@plt>
  4113f0:	subs	x2, x27, x26
  4113f4:	b.eq	411404 <ascii_strlower_n@plt+0xcffc>  // b.none
  4113f8:	add	x0, x24, x26
  4113fc:	mov	w1, wzr
  411400:	bl	403c58 <memset@plt>
  411404:	ldur	x8, [x29, #-24]
  411408:	str	x27, [x8]
  41140c:	ldur	x8, [x29, #-40]
  411410:	cmp	x24, #0x0
  411414:	str	x19, [x28]
  411418:	csel	x8, x8, x24, eq  // eq = none
  41141c:	strb	w23, [x8, x26]
  411420:	ldur	x8, [x29, #-24]
  411424:	ldr	x26, [x28]
  411428:	ldrb	w23, [x25, #83]
  41142c:	ldr	x8, [x8]
  411430:	add	x19, x26, #0x1
  411434:	cmp	x19, x8
  411438:	b.ls	4114a0 <ascii_strlower_n@plt+0xd098>  // b.plast
  41143c:	bl	404058 <page_size@plt>
  411440:	ldr	x9, [x20, #32]
  411444:	add	x8, x0, x19, lsl #1
  411448:	neg	x10, x0
  41144c:	sub	x8, x8, #0x1
  411450:	and	x8, x8, x10
  411454:	cmp	x9, #0x0
  411458:	mov	w10, #0xffff                	// #65535
  41145c:	csel	x9, x10, x9, eq  // eq = none
  411460:	cmp	x8, x9
  411464:	csel	x27, x9, x8, hi  // hi = pmore
  411468:	ldr	x8, [sp, #48]
  41146c:	cmp	x19, x27
  411470:	b.hi	40f7dc <ascii_strlower_n@plt+0xb3d4>  // b.pmore
  411474:	ldr	x0, [x8]
  411478:	cbz	x0, 411a80 <ascii_strlower_n@plt+0xd678>
  41147c:	mov	x1, x27
  411480:	bl	4040b8 <realloc@plt>
  411484:	cbz	x0, 412d24 <ascii_strlower_n@plt+0xe91c>
  411488:	ldr	x8, [sp, #48]
  41148c:	mov	x24, x0
  411490:	str	x0, [x8]
  411494:	ldr	x26, [x28]
  411498:	add	x19, x26, #0x1
  41149c:	b	411ab8 <ascii_strlower_n@plt+0xd6b0>
  4114a0:	ldr	x8, [sp, #48]
  4114a4:	ldr	x24, [x8]
  4114a8:	b	411ac0 <ascii_strlower_n@plt+0xd6b8>
  4114ac:	mov	x0, x27
  4114b0:	bl	4040c8 <malloc@plt>
  4114b4:	ldr	x8, [sp, #48]
  4114b8:	str	x0, [x8]
  4114bc:	cbz	x0, 412d24 <ascii_strlower_n@plt+0xe91c>
  4114c0:	ldur	x1, [x29, #-40]
  4114c4:	mov	x2, x26
  4114c8:	mov	x24, x0
  4114cc:	bl	403c68 <memcpy@plt>
  4114d0:	subs	x2, x27, x26
  4114d4:	b.eq	4114e4 <ascii_strlower_n@plt+0xd0dc>  // b.none
  4114d8:	add	x0, x24, x26
  4114dc:	mov	w1, wzr
  4114e0:	bl	403c58 <memset@plt>
  4114e4:	ldur	x8, [x29, #-24]
  4114e8:	str	x27, [x8]
  4114ec:	ldur	x8, [x29, #-40]
  4114f0:	cmp	x24, #0x0
  4114f4:	str	x19, [x28]
  4114f8:	csel	x8, x8, x24, eq  // eq = none
  4114fc:	strb	w23, [x8, x26]
  411500:	ldur	x8, [x29, #-24]
  411504:	ldr	x26, [x28]
  411508:	ldrb	w23, [x25, #82]
  41150c:	ldr	x8, [x8]
  411510:	add	x19, x26, #0x1
  411514:	cmp	x19, x8
  411518:	b.ls	411580 <ascii_strlower_n@plt+0xd178>  // b.plast
  41151c:	bl	404058 <page_size@plt>
  411520:	ldr	x9, [x20, #32]
  411524:	add	x8, x0, x19, lsl #1
  411528:	neg	x10, x0
  41152c:	sub	x8, x8, #0x1
  411530:	and	x8, x8, x10
  411534:	cmp	x9, #0x0
  411538:	mov	w10, #0xffff                	// #65535
  41153c:	csel	x9, x10, x9, eq  // eq = none
  411540:	cmp	x8, x9
  411544:	csel	x27, x9, x8, hi  // hi = pmore
  411548:	ldr	x8, [sp, #48]
  41154c:	cmp	x19, x27
  411550:	b.hi	40f7dc <ascii_strlower_n@plt+0xb3d4>  // b.pmore
  411554:	ldr	x0, [x8]
  411558:	cbz	x0, 411b60 <ascii_strlower_n@plt+0xd758>
  41155c:	mov	x1, x27
  411560:	bl	4040b8 <realloc@plt>
  411564:	cbz	x0, 412d24 <ascii_strlower_n@plt+0xe91c>
  411568:	ldr	x8, [sp, #48]
  41156c:	mov	x24, x0
  411570:	str	x0, [x8]
  411574:	ldr	x26, [x28]
  411578:	add	x19, x26, #0x1
  41157c:	b	411b98 <ascii_strlower_n@plt+0xd790>
  411580:	ldr	x8, [sp, #48]
  411584:	ldr	x24, [x8]
  411588:	b	411ba0 <ascii_strlower_n@plt+0xd798>
  41158c:	mov	x0, x27
  411590:	bl	4040c8 <malloc@plt>
  411594:	ldr	x8, [sp, #48]
  411598:	str	x0, [x8]
  41159c:	cbz	x0, 412d24 <ascii_strlower_n@plt+0xe91c>
  4115a0:	ldur	x1, [x29, #-40]
  4115a4:	mov	x2, x26
  4115a8:	mov	x24, x0
  4115ac:	bl	403c68 <memcpy@plt>
  4115b0:	subs	x2, x27, x26
  4115b4:	b.eq	4115c4 <ascii_strlower_n@plt+0xd1bc>  // b.none
  4115b8:	add	x0, x24, x26
  4115bc:	mov	w1, wzr
  4115c0:	bl	403c58 <memset@plt>
  4115c4:	ldur	x8, [x29, #-24]
  4115c8:	str	x27, [x8]
  4115cc:	ldur	x8, [x29, #-40]
  4115d0:	cmp	x24, #0x0
  4115d4:	str	x19, [x28]
  4115d8:	csel	x8, x8, x24, eq  // eq = none
  4115dc:	strb	w23, [x8, x26]
  4115e0:	ldur	x8, [x29, #-24]
  4115e4:	ldr	x26, [x28]
  4115e8:	ldrb	w23, [x25, #83]
  4115ec:	ldr	x8, [x8]
  4115f0:	add	x19, x26, #0x1
  4115f4:	cmp	x19, x8
  4115f8:	b.ls	41167c <ascii_strlower_n@plt+0xd274>  // b.plast
  4115fc:	bl	404058 <page_size@plt>
  411600:	ldr	x9, [x20, #32]
  411604:	add	x8, x0, x19, lsl #1
  411608:	neg	x10, x0
  41160c:	sub	x8, x8, #0x1
  411610:	and	x8, x8, x10
  411614:	cmp	x9, #0x0
  411618:	mov	w10, #0xffff                	// #65535
  41161c:	csel	x9, x10, x9, eq  // eq = none
  411620:	ldr	x21, [sp, #48]
  411624:	cmp	x8, x9
  411628:	csel	x27, x9, x8, hi  // hi = pmore
  41162c:	cmp	x19, x27
  411630:	b.hi	40f7dc <ascii_strlower_n@plt+0xb3d4>  // b.pmore
  411634:	ldr	x0, [x21]
  411638:	cbnz	x0, 4110f4 <ascii_strlower_n@plt+0xccec>
  41163c:	mov	x0, x27
  411640:	bl	4040c8 <malloc@plt>
  411644:	str	x0, [x21]
  411648:	cbz	x0, 412d24 <ascii_strlower_n@plt+0xe91c>
  41164c:	ldur	x1, [x29, #-40]
  411650:	mov	x2, x26
  411654:	mov	x28, x0
  411658:	bl	403c68 <memcpy@plt>
  41165c:	subs	x2, x27, x26
  411660:	b.eq	411670 <ascii_strlower_n@plt+0xd268>  // b.none
  411664:	add	x0, x28, x26
  411668:	mov	w1, wzr
  41166c:	bl	403c58 <memset@plt>
  411670:	ldur	x8, [x29, #-24]
  411674:	str	x27, [x8]
  411678:	b	411684 <ascii_strlower_n@plt+0xd27c>
  41167c:	ldr	x21, [sp, #48]
  411680:	ldr	x28, [x21]
  411684:	ldp	x8, x9, [x29, #-40]
  411688:	cmp	x28, #0x0
  41168c:	csel	x8, x8, x28, eq  // eq = none
  411690:	str	x19, [x9]
  411694:	strb	w23, [x8, x26]
  411698:	ldur	x8, [x29, #-24]
  41169c:	ldp	x25, x26, [x25, #88]
  4116a0:	ldr	x27, [x9]
  4116a4:	ldr	x8, [x8]
  4116a8:	add	x23, x27, x26
  4116ac:	cmp	x23, x8
  4116b0:	b.ls	411924 <ascii_strlower_n@plt+0xd51c>  // b.plast
  4116b4:	bl	404058 <page_size@plt>
  4116b8:	ldr	x9, [x20, #32]
  4116bc:	add	x8, x0, x23, lsl #1
  4116c0:	neg	x10, x0
  4116c4:	sub	x8, x8, #0x1
  4116c8:	and	x8, x8, x10
  4116cc:	cmp	x9, #0x0
  4116d0:	mov	w10, #0xffff                	// #65535
  4116d4:	csel	x9, x10, x9, eq  // eq = none
  4116d8:	ldr	x19, [sp, #24]
  4116dc:	cmp	x8, x9
  4116e0:	csel	x28, x9, x8, hi  // hi = pmore
  4116e4:	cmp	x23, x28
  4116e8:	b.hi	40f7dc <ascii_strlower_n@plt+0xb3d4>  // b.pmore
  4116ec:	ldr	x0, [x21]
  4116f0:	cbz	x0, 411708 <ascii_strlower_n@plt+0xd300>
  4116f4:	mov	x1, x28
  4116f8:	bl	4040b8 <realloc@plt>
  4116fc:	ldr	x21, [sp, #40]
  411700:	cbnz	x0, 411908 <ascii_strlower_n@plt+0xd500>
  411704:	b	412d24 <ascii_strlower_n@plt+0xe91c>
  411708:	mov	x0, x28
  41170c:	bl	4040c8 <malloc@plt>
  411710:	ldr	x8, [sp, #48]
  411714:	str	x0, [x8]
  411718:	cbnz	x0, 411d40 <ascii_strlower_n@plt+0xd938>
  41171c:	b	412d24 <ascii_strlower_n@plt+0xe91c>
  411720:	mov	x0, x9
  411724:	mov	x24, x9
  411728:	bl	4040c8 <malloc@plt>
  41172c:	ldr	x8, [sp, #48]
  411730:	str	x0, [x8]
  411734:	cbz	x0, 412d24 <ascii_strlower_n@plt+0xe91c>
  411738:	ldr	x19, [sp, #32]
  41173c:	ldur	x1, [x29, #-40]
  411740:	mov	x28, x0
  411744:	mov	x2, x19
  411748:	bl	403c68 <memcpy@plt>
  41174c:	subs	x2, x24, x19
  411750:	b.eq	411760 <ascii_strlower_n@plt+0xd358>  // b.none
  411754:	add	x0, x28, x19
  411758:	mov	w1, wzr
  41175c:	bl	403c58 <memset@plt>
  411760:	mov	x8, x19
  411764:	ldur	x9, [x29, #-24]
  411768:	str	x24, [x9]
  41176c:	ldp	x9, x19, [x29, #-40]
  411770:	cmp	x28, #0x0
  411774:	csel	x9, x9, x28, eq  // eq = none
  411778:	add	x8, x9, x8
  41177c:	str	x23, [x19]
  411780:	strb	w27, [x8]
  411784:	cbz	x27, 411798 <ascii_strlower_n@plt+0xd390>
  411788:	add	x0, x8, #0x1
  41178c:	mov	x1, x26
  411790:	mov	x2, x27
  411794:	bl	403c68 <memcpy@plt>
  411798:	ldr	x25, [x25, #88]
  41179c:	cbz	x25, 412d94 <ascii_strlower_n@plt+0xe98c>
  4117a0:	mov	x0, x25
  4117a4:	bl	403d28 <strlen@plt>
  4117a8:	cmp	x0, #0xff
  4117ac:	b.ls	4117b8 <ascii_strlower_n@plt+0xd3b0>  // b.plast
  4117b0:	mov	w26, #0xfffffff9            	// #-7
  4117b4:	b	412bf0 <ascii_strlower_n@plt+0xe7e8>
  4117b8:	ldur	x8, [x29, #-24]
  4117bc:	ldr	x27, [x19]
  4117c0:	add	x19, x0, #0x1
  4117c4:	mov	x26, x0
  4117c8:	ldr	x8, [x8]
  4117cc:	add	x23, x27, x19
  4117d0:	cmp	x23, x8
  4117d4:	b.ls	411840 <ascii_strlower_n@plt+0xd438>  // b.plast
  4117d8:	bl	404058 <page_size@plt>
  4117dc:	ldr	x9, [x20, #32]
  4117e0:	add	x8, x0, x23, lsl #1
  4117e4:	neg	x10, x0
  4117e8:	sub	x8, x8, #0x1
  4117ec:	and	x8, x8, x10
  4117f0:	cmp	x9, #0x0
  4117f4:	mov	w10, #0xffff                	// #65535
  4117f8:	csel	x9, x10, x9, eq  // eq = none
  4117fc:	cmp	x8, x9
  411800:	csel	x24, x9, x8, hi  // hi = pmore
  411804:	cmp	x23, x24
  411808:	b.hi	40f7dc <ascii_strlower_n@plt+0xb3d4>  // b.pmore
  41180c:	ldr	x8, [sp, #48]
  411810:	ldr	x0, [x8]
  411814:	cbz	x0, 4125f4 <ascii_strlower_n@plt+0xe1ec>
  411818:	mov	x1, x24
  41181c:	bl	4040b8 <realloc@plt>
  411820:	cbz	x0, 412d24 <ascii_strlower_n@plt+0xe91c>
  411824:	ldr	x8, [sp, #48]
  411828:	mov	x28, x0
  41182c:	str	x0, [x8]
  411830:	ldur	x8, [x29, #-32]
  411834:	ldr	x27, [x8]
  411838:	add	x23, x27, x19
  41183c:	b	41262c <ascii_strlower_n@plt+0xe224>
  411840:	ldr	x8, [sp, #48]
  411844:	ldr	x28, [x8]
  411848:	b	412634 <ascii_strlower_n@plt+0xe22c>
  41184c:	mov	x0, x27
  411850:	bl	4040c8 <malloc@plt>
  411854:	str	x0, [x21]
  411858:	cbz	x0, 412af0 <ascii_strlower_n@plt+0xe6e8>
  41185c:	ldur	x1, [x29, #-40]
  411860:	mov	x2, x26
  411864:	mov	x28, x0
  411868:	bl	403c68 <memcpy@plt>
  41186c:	subs	x2, x27, x26
  411870:	b.eq	411880 <ascii_strlower_n@plt+0xd478>  // b.none
  411874:	add	x0, x28, x26
  411878:	mov	w1, wzr
  41187c:	bl	403c58 <memset@plt>
  411880:	ldur	x8, [x29, #-24]
  411884:	str	x27, [x8]
  411888:	ldp	x8, x9, [x29, #-40]
  41188c:	cmp	x28, #0x0
  411890:	csel	x8, x8, x28, eq  // eq = none
  411894:	str	x19, [x9]
  411898:	strb	w23, [x8, x26]
  41189c:	ldur	x8, [x29, #-24]
  4118a0:	ldp	x25, x26, [x25, #88]
  4118a4:	ldr	x27, [x9]
  4118a8:	ldr	x8, [x8]
  4118ac:	add	x23, x27, x26
  4118b0:	cmp	x23, x8
  4118b4:	b.ls	411924 <ascii_strlower_n@plt+0xd51c>  // b.plast
  4118b8:	bl	404058 <page_size@plt>
  4118bc:	ldr	x9, [x20, #32]
  4118c0:	add	x8, x0, x23, lsl #1
  4118c4:	neg	x10, x0
  4118c8:	sub	x8, x8, #0x1
  4118cc:	and	x8, x8, x10
  4118d0:	cmp	x9, #0x0
  4118d4:	mov	w10, #0xffff                	// #65535
  4118d8:	csel	x9, x10, x9, eq  // eq = none
  4118dc:	ldr	x19, [sp, #24]
  4118e0:	cmp	x8, x9
  4118e4:	csel	x28, x9, x8, hi  // hi = pmore
  4118e8:	cmp	x23, x28
  4118ec:	b.hi	40fc34 <ascii_strlower_n@plt+0xb82c>  // b.pmore
  4118f0:	ldr	x0, [x21]
  4118f4:	cbz	x0, 411d2c <ascii_strlower_n@plt+0xd924>
  4118f8:	mov	x1, x28
  4118fc:	bl	4040b8 <realloc@plt>
  411900:	ldr	x21, [sp, #40]
  411904:	cbz	x0, 412af0 <ascii_strlower_n@plt+0xe6e8>
  411908:	ldr	x8, [sp, #48]
  41190c:	mov	x24, x0
  411910:	str	x0, [x8]
  411914:	ldur	x8, [x29, #-32]
  411918:	ldr	x27, [x8]
  41191c:	add	x23, x27, x26
  411920:	b	411d68 <ascii_strlower_n@plt+0xd960>
  411924:	ldr	x24, [x21]
  411928:	ldr	x19, [sp, #24]
  41192c:	ldr	x21, [sp, #40]
  411930:	mov	x28, x9
  411934:	b	41220c <ascii_strlower_n@plt+0xde04>
  411938:	mov	x0, x27
  41193c:	bl	4040c8 <malloc@plt>
  411940:	str	x0, [x24]
  411944:	cbz	x0, 412d24 <ascii_strlower_n@plt+0xe91c>
  411948:	ldur	x1, [x29, #-40]
  41194c:	mov	x2, x26
  411950:	mov	x28, x0
  411954:	bl	403c68 <memcpy@plt>
  411958:	subs	x2, x27, x26
  41195c:	b.eq	41196c <ascii_strlower_n@plt+0xd564>  // b.none
  411960:	add	x0, x28, x26
  411964:	mov	w1, wzr
  411968:	bl	403c58 <memset@plt>
  41196c:	ldur	x8, [x29, #-24]
  411970:	str	x27, [x8]
  411974:	ldp	x8, x9, [x29, #-40]
  411978:	cmp	x28, #0x0
  41197c:	str	x19, [x9]
  411980:	csel	x8, x8, x28, eq  // eq = none
  411984:	mov	x10, x9
  411988:	rev16	w9, w23
  41198c:	strh	w9, [x8, x26]
  411990:	ldur	x8, [x29, #-24]
  411994:	ldr	x26, [x10]
  411998:	ldrb	w23, [x25, #96]
  41199c:	ldr	x8, [x8]
  4119a0:	add	x19, x26, #0x1
  4119a4:	cmp	x19, x8
  4119a8:	b.ls	411a0c <ascii_strlower_n@plt+0xd604>  // b.plast
  4119ac:	bl	404058 <page_size@plt>
  4119b0:	ldr	x9, [x20, #32]
  4119b4:	add	x8, x0, x19, lsl #1
  4119b8:	neg	x10, x0
  4119bc:	sub	x8, x8, #0x1
  4119c0:	and	x8, x8, x10
  4119c4:	cmp	x9, #0x0
  4119c8:	mov	w10, #0xffff                	// #65535
  4119cc:	csel	x9, x10, x9, eq  // eq = none
  4119d0:	cmp	x8, x9
  4119d4:	csel	x27, x9, x8, hi  // hi = pmore
  4119d8:	cmp	x19, x27
  4119dc:	b.hi	40f7dc <ascii_strlower_n@plt+0xb3d4>  // b.pmore
  4119e0:	ldr	x0, [x24]
  4119e4:	cbz	x0, 411d78 <ascii_strlower_n@plt+0xd970>
  4119e8:	mov	x1, x27
  4119ec:	bl	4040b8 <realloc@plt>
  4119f0:	cbz	x0, 412d24 <ascii_strlower_n@plt+0xe91c>
  4119f4:	ldur	x8, [x29, #-32]
  4119f8:	str	x0, [x24]
  4119fc:	mov	x28, x0
  411a00:	ldr	x26, [x8]
  411a04:	add	x19, x26, #0x1
  411a08:	b	411dac <ascii_strlower_n@plt+0xd9a4>
  411a0c:	ldr	x28, [x24]
  411a10:	b	411db4 <ascii_strlower_n@plt+0xd9ac>
  411a14:	mov	x0, x27
  411a18:	bl	4040c8 <malloc@plt>
  411a1c:	ldr	x8, [sp, #48]
  411a20:	str	x0, [x8]
  411a24:	cbz	x0, 412d24 <ascii_strlower_n@plt+0xe91c>
  411a28:	ldur	x1, [x29, #-40]
  411a2c:	mov	x2, x26
  411a30:	mov	x28, x0
  411a34:	bl	403c68 <memcpy@plt>
  411a38:	subs	x2, x27, x26
  411a3c:	b.eq	411a4c <ascii_strlower_n@plt+0xd644>  // b.none
  411a40:	add	x0, x28, x26
  411a44:	mov	w1, wzr
  411a48:	bl	403c58 <memset@plt>
  411a4c:	ldur	x8, [x29, #-24]
  411a50:	str	x27, [x8]
  411a54:	ldp	x9, x10, [x29, #-40]
  411a58:	cmp	x28, #0x0
  411a5c:	rev16	w8, w23
  411a60:	mov	w2, wzr
  411a64:	str	x24, [x10]
  411a68:	ldr	x24, [sp, #48]
  411a6c:	csel	x9, x9, x28, eq  // eq = none
  411a70:	mov	x28, x10
  411a74:	strh	w8, [x9, x26]
  411a78:	add	x9, x25, #0x58
  411a7c:	b	40f8e4 <ascii_strlower_n@plt+0xb4dc>
  411a80:	mov	x0, x27
  411a84:	bl	4040c8 <malloc@plt>
  411a88:	ldr	x8, [sp, #48]
  411a8c:	str	x0, [x8]
  411a90:	cbz	x0, 412d24 <ascii_strlower_n@plt+0xe91c>
  411a94:	ldur	x1, [x29, #-40]
  411a98:	mov	x2, x26
  411a9c:	mov	x24, x0
  411aa0:	bl	403c68 <memcpy@plt>
  411aa4:	subs	x2, x27, x26
  411aa8:	b.eq	411ab8 <ascii_strlower_n@plt+0xd6b0>  // b.none
  411aac:	add	x0, x24, x26
  411ab0:	mov	w1, wzr
  411ab4:	bl	403c58 <memset@plt>
  411ab8:	ldur	x8, [x29, #-24]
  411abc:	str	x27, [x8]
  411ac0:	ldur	x8, [x29, #-40]
  411ac4:	cmp	x24, #0x0
  411ac8:	str	x19, [x28]
  411acc:	csel	x8, x8, x24, eq  // eq = none
  411ad0:	strb	w23, [x8, x26]
  411ad4:	ldur	x8, [x29, #-24]
  411ad8:	ldr	x26, [x28]
  411adc:	ldr	w23, [x25, #84]
  411ae0:	ldr	x8, [x8]
  411ae4:	add	x19, x26, #0x4
  411ae8:	cmp	x19, x8
  411aec:	b.ls	411b54 <ascii_strlower_n@plt+0xd74c>  // b.plast
  411af0:	bl	404058 <page_size@plt>
  411af4:	ldr	x9, [x20, #32]
  411af8:	add	x8, x0, x19, lsl #1
  411afc:	neg	x10, x0
  411b00:	sub	x8, x8, #0x1
  411b04:	and	x8, x8, x10
  411b08:	cmp	x9, #0x0
  411b0c:	mov	w10, #0xffff                	// #65535
  411b10:	csel	x9, x10, x9, eq  // eq = none
  411b14:	ldr	x24, [sp, #48]
  411b18:	cmp	x8, x9
  411b1c:	csel	x27, x9, x8, hi  // hi = pmore
  411b20:	cmp	x19, x27
  411b24:	b.hi	40f7dc <ascii_strlower_n@plt+0xb3d4>  // b.pmore
  411b28:	ldr	x0, [x24]
  411b2c:	cbz	x0, 411e6c <ascii_strlower_n@plt+0xda64>
  411b30:	mov	x1, x27
  411b34:	bl	4040b8 <realloc@plt>
  411b38:	cbz	x0, 412d24 <ascii_strlower_n@plt+0xe91c>
  411b3c:	ldur	x8, [x29, #-32]
  411b40:	str	x0, [x24]
  411b44:	mov	x28, x0
  411b48:	ldr	x26, [x8]
  411b4c:	add	x19, x26, #0x4
  411b50:	b	411ea0 <ascii_strlower_n@plt+0xda98>
  411b54:	ldr	x24, [sp, #48]
  411b58:	ldr	x28, [x24]
  411b5c:	b	411ea8 <ascii_strlower_n@plt+0xdaa0>
  411b60:	mov	x0, x27
  411b64:	bl	4040c8 <malloc@plt>
  411b68:	ldr	x8, [sp, #48]
  411b6c:	str	x0, [x8]
  411b70:	cbz	x0, 412d24 <ascii_strlower_n@plt+0xe91c>
  411b74:	ldur	x1, [x29, #-40]
  411b78:	mov	x2, x26
  411b7c:	mov	x24, x0
  411b80:	bl	403c68 <memcpy@plt>
  411b84:	subs	x2, x27, x26
  411b88:	b.eq	411b98 <ascii_strlower_n@plt+0xd790>  // b.none
  411b8c:	add	x0, x24, x26
  411b90:	mov	w1, wzr
  411b94:	bl	403c58 <memset@plt>
  411b98:	ldur	x8, [x29, #-24]
  411b9c:	str	x27, [x8]
  411ba0:	ldur	x8, [x29, #-40]
  411ba4:	cmp	x24, #0x0
  411ba8:	str	x19, [x28]
  411bac:	csel	x8, x8, x24, eq  // eq = none
  411bb0:	strb	w23, [x8, x26]
  411bb4:	ldur	x8, [x29, #-24]
  411bb8:	ldr	x26, [x28]
  411bbc:	ldrb	w23, [x25, #83]
  411bc0:	ldr	x8, [x8]
  411bc4:	add	x19, x26, #0x1
  411bc8:	cmp	x19, x8
  411bcc:	b.ls	411c34 <ascii_strlower_n@plt+0xd82c>  // b.plast
  411bd0:	bl	404058 <page_size@plt>
  411bd4:	ldr	x9, [x20, #32]
  411bd8:	add	x8, x0, x19, lsl #1
  411bdc:	neg	x10, x0
  411be0:	sub	x8, x8, #0x1
  411be4:	and	x8, x8, x10
  411be8:	cmp	x9, #0x0
  411bec:	mov	w10, #0xffff                	// #65535
  411bf0:	csel	x9, x10, x9, eq  // eq = none
  411bf4:	cmp	x8, x9
  411bf8:	csel	x27, x9, x8, hi  // hi = pmore
  411bfc:	ldr	x8, [sp, #48]
  411c00:	cmp	x19, x27
  411c04:	b.hi	40f7dc <ascii_strlower_n@plt+0xb3d4>  // b.pmore
  411c08:	ldr	x0, [x8]
  411c0c:	cbz	x0, 411f48 <ascii_strlower_n@plt+0xdb40>
  411c10:	mov	x1, x27
  411c14:	bl	4040b8 <realloc@plt>
  411c18:	cbz	x0, 412d24 <ascii_strlower_n@plt+0xe91c>
  411c1c:	ldr	x8, [sp, #48]
  411c20:	mov	x24, x0
  411c24:	str	x0, [x8]
  411c28:	ldr	x26, [x28]
  411c2c:	add	x19, x26, #0x1
  411c30:	b	411f80 <ascii_strlower_n@plt+0xdb78>
  411c34:	ldr	x8, [sp, #48]
  411c38:	ldr	x24, [x8]
  411c3c:	b	411f88 <ascii_strlower_n@plt+0xdb80>
  411c40:	mov	x0, x27
  411c44:	bl	4040c8 <malloc@plt>
  411c48:	ldr	x8, [sp, #48]
  411c4c:	str	x0, [x8]
  411c50:	cbz	x0, 412d24 <ascii_strlower_n@plt+0xe91c>
  411c54:	ldur	x1, [x29, #-40]
  411c58:	mov	x2, x26
  411c5c:	mov	x28, x0
  411c60:	bl	403c68 <memcpy@plt>
  411c64:	subs	x2, x27, x26
  411c68:	b.eq	411c78 <ascii_strlower_n@plt+0xd870>  // b.none
  411c6c:	add	x0, x28, x26
  411c70:	mov	w1, wzr
  411c74:	bl	403c58 <memset@plt>
  411c78:	ldur	x8, [x29, #-24]
  411c7c:	str	x27, [x8]
  411c80:	ldp	x8, x9, [x29, #-40]
  411c84:	cmp	x28, #0x0
  411c88:	str	x19, [x9]
  411c8c:	csel	x8, x8, x28, eq  // eq = none
  411c90:	mov	x10, x9
  411c94:	rev	w9, w23
  411c98:	str	w9, [x8, x26]
  411c9c:	ldur	x8, [x29, #-24]
  411ca0:	ldr	x26, [x10]
  411ca4:	ldr	w23, [x25, #100]
  411ca8:	ldr	x8, [x8]
  411cac:	add	x19, x26, #0x4
  411cb0:	cmp	x19, x8
  411cb4:	b.ls	411d20 <ascii_strlower_n@plt+0xd918>  // b.plast
  411cb8:	bl	404058 <page_size@plt>
  411cbc:	ldr	x9, [x20, #32]
  411cc0:	add	x8, x0, x19, lsl #1
  411cc4:	neg	x10, x0
  411cc8:	sub	x8, x8, #0x1
  411ccc:	and	x8, x8, x10
  411cd0:	cmp	x9, #0x0
  411cd4:	mov	w10, #0xffff                	// #65535
  411cd8:	csel	x9, x10, x9, eq  // eq = none
  411cdc:	cmp	x8, x9
  411ce0:	csel	x27, x9, x8, hi  // hi = pmore
  411ce4:	cmp	x19, x27
  411ce8:	b.hi	40f7dc <ascii_strlower_n@plt+0xb3d4>  // b.pmore
  411cec:	ldr	x8, [sp, #48]
  411cf0:	ldr	x0, [x8]
  411cf4:	cbz	x0, 41202c <ascii_strlower_n@plt+0xdc24>
  411cf8:	mov	x1, x27
  411cfc:	bl	4040b8 <realloc@plt>
  411d00:	cbz	x0, 412d24 <ascii_strlower_n@plt+0xe91c>
  411d04:	ldr	x8, [sp, #48]
  411d08:	mov	x28, x0
  411d0c:	str	x0, [x8]
  411d10:	ldur	x8, [x29, #-32]
  411d14:	ldr	x26, [x8]
  411d18:	add	x19, x26, #0x4
  411d1c:	b	412064 <ascii_strlower_n@plt+0xdc5c>
  411d20:	ldr	x8, [sp, #48]
  411d24:	ldr	x28, [x8]
  411d28:	b	41206c <ascii_strlower_n@plt+0xdc64>
  411d2c:	mov	x0, x28
  411d30:	bl	4040c8 <malloc@plt>
  411d34:	ldr	x8, [sp, #48]
  411d38:	str	x0, [x8]
  411d3c:	cbz	x0, 412af0 <ascii_strlower_n@plt+0xe6e8>
  411d40:	ldur	x1, [x29, #-40]
  411d44:	mov	x2, x27
  411d48:	mov	x24, x0
  411d4c:	bl	403c68 <memcpy@plt>
  411d50:	subs	x2, x28, x27
  411d54:	b.eq	411d64 <ascii_strlower_n@plt+0xd95c>  // b.none
  411d58:	add	x0, x24, x27
  411d5c:	mov	w1, wzr
  411d60:	bl	403c58 <memset@plt>
  411d64:	ldr	x21, [sp, #40]
  411d68:	ldur	x8, [x29, #-24]
  411d6c:	str	x28, [x8]
  411d70:	ldur	x28, [x29, #-32]
  411d74:	b	41220c <ascii_strlower_n@plt+0xde04>
  411d78:	mov	x0, x27
  411d7c:	bl	4040c8 <malloc@plt>
  411d80:	str	x0, [x24]
  411d84:	cbz	x0, 412d24 <ascii_strlower_n@plt+0xe91c>
  411d88:	ldur	x1, [x29, #-40]
  411d8c:	mov	x2, x26
  411d90:	mov	x28, x0
  411d94:	bl	403c68 <memcpy@plt>
  411d98:	subs	x2, x27, x26
  411d9c:	b.eq	411dac <ascii_strlower_n@plt+0xd9a4>  // b.none
  411da0:	add	x0, x28, x26
  411da4:	mov	w1, wzr
  411da8:	bl	403c58 <memset@plt>
  411dac:	ldur	x8, [x29, #-24]
  411db0:	str	x27, [x8]
  411db4:	ldp	x8, x9, [x29, #-40]
  411db8:	cmp	x28, #0x0
  411dbc:	csel	x8, x8, x28, eq  // eq = none
  411dc0:	str	x19, [x9]
  411dc4:	strb	w23, [x8, x26]
  411dc8:	ldur	x8, [x29, #-24]
  411dcc:	ldp	x1, x23, [x25, #88]
  411dd0:	ldr	x10, [x9]
  411dd4:	ldr	x28, [x8]
  411dd8:	add	x26, x10, x23
  411ddc:	cmp	x26, x28
  411de0:	b.ls	411e58 <ascii_strlower_n@plt+0xda50>  // b.plast
  411de4:	mov	x19, x10
  411de8:	str	x1, [sp, #8]
  411dec:	bl	404058 <page_size@plt>
  411df0:	ldr	x9, [x20, #32]
  411df4:	add	x8, x0, x26, lsl #1
  411df8:	neg	x10, x0
  411dfc:	sub	x8, x8, #0x1
  411e00:	and	x8, x8, x10
  411e04:	cmp	x9, #0x0
  411e08:	mov	w10, #0xffff                	// #65535
  411e0c:	csel	x9, x10, x9, eq  // eq = none
  411e10:	cmp	x8, x9
  411e14:	csel	x28, x9, x8, hi  // hi = pmore
  411e18:	cmp	x26, x28
  411e1c:	b.hi	40f7dc <ascii_strlower_n@plt+0xb3d4>  // b.pmore
  411e20:	ldr	x0, [x24]
  411e24:	str	x21, [sp, #32]
  411e28:	cbz	x0, 412230 <ascii_strlower_n@plt+0xde28>
  411e2c:	mov	x1, x28
  411e30:	bl	4040b8 <realloc@plt>
  411e34:	cbz	x0, 412d24 <ascii_strlower_n@plt+0xe91c>
  411e38:	ldur	x8, [x29, #-32]
  411e3c:	str	x0, [x24]
  411e40:	ldr	x19, [sp, #24]
  411e44:	ldr	x21, [sp, #40]
  411e48:	ldr	x10, [x8]
  411e4c:	mov	x27, x0
  411e50:	add	x26, x10, x23
  411e54:	b	412274 <ascii_strlower_n@plt+0xde6c>
  411e58:	str	x21, [sp, #32]
  411e5c:	ldr	x27, [x24]
  411e60:	ldr	x19, [sp, #24]
  411e64:	ldr	x21, [sp, #40]
  411e68:	b	412280 <ascii_strlower_n@plt+0xde78>
  411e6c:	mov	x0, x27
  411e70:	bl	4040c8 <malloc@plt>
  411e74:	str	x0, [x24]
  411e78:	cbz	x0, 412d24 <ascii_strlower_n@plt+0xe91c>
  411e7c:	ldur	x1, [x29, #-40]
  411e80:	mov	x2, x26
  411e84:	mov	x28, x0
  411e88:	bl	403c68 <memcpy@plt>
  411e8c:	subs	x2, x27, x26
  411e90:	b.eq	411ea0 <ascii_strlower_n@plt+0xda98>  // b.none
  411e94:	add	x0, x28, x26
  411e98:	mov	w1, wzr
  411e9c:	bl	403c58 <memset@plt>
  411ea0:	ldur	x8, [x29, #-24]
  411ea4:	str	x27, [x8]
  411ea8:	ldp	x8, x9, [x29, #-40]
  411eac:	cmp	x28, #0x0
  411eb0:	str	x19, [x9]
  411eb4:	csel	x8, x8, x28, eq  // eq = none
  411eb8:	mov	x10, x9
  411ebc:	rev	w9, w23
  411ec0:	str	w9, [x8, x26]
  411ec4:	ldur	x8, [x29, #-24]
  411ec8:	ldr	x26, [x10]
  411ecc:	ldr	w23, [x25, #88]
  411ed0:	ldr	x8, [x8]
  411ed4:	add	x19, x26, #0x4
  411ed8:	cmp	x19, x8
  411edc:	b.ls	411f40 <ascii_strlower_n@plt+0xdb38>  // b.plast
  411ee0:	bl	404058 <page_size@plt>
  411ee4:	ldr	x9, [x20, #32]
  411ee8:	add	x8, x0, x19, lsl #1
  411eec:	neg	x10, x0
  411ef0:	sub	x8, x8, #0x1
  411ef4:	and	x8, x8, x10
  411ef8:	cmp	x9, #0x0
  411efc:	mov	w10, #0xffff                	// #65535
  411f00:	csel	x9, x10, x9, eq  // eq = none
  411f04:	cmp	x8, x9
  411f08:	csel	x27, x9, x8, hi  // hi = pmore
  411f0c:	cmp	x19, x27
  411f10:	b.hi	40f7dc <ascii_strlower_n@plt+0xb3d4>  // b.pmore
  411f14:	ldr	x0, [x24]
  411f18:	cbz	x0, 412338 <ascii_strlower_n@plt+0xdf30>
  411f1c:	mov	x1, x27
  411f20:	bl	4040b8 <realloc@plt>
  411f24:	cbz	x0, 412d24 <ascii_strlower_n@plt+0xe91c>
  411f28:	ldur	x8, [x29, #-32]
  411f2c:	str	x0, [x24]
  411f30:	mov	x28, x0
  411f34:	ldr	x26, [x8]
  411f38:	add	x19, x26, #0x4
  411f3c:	b	412370 <ascii_strlower_n@plt+0xdf68>
  411f40:	ldr	x28, [x24]
  411f44:	b	412378 <ascii_strlower_n@plt+0xdf70>
  411f48:	mov	x0, x27
  411f4c:	bl	4040c8 <malloc@plt>
  411f50:	ldr	x8, [sp, #48]
  411f54:	str	x0, [x8]
  411f58:	cbz	x0, 412d24 <ascii_strlower_n@plt+0xe91c>
  411f5c:	ldur	x1, [x29, #-40]
  411f60:	mov	x2, x26
  411f64:	mov	x24, x0
  411f68:	bl	403c68 <memcpy@plt>
  411f6c:	subs	x2, x27, x26
  411f70:	b.eq	411f80 <ascii_strlower_n@plt+0xdb78>  // b.none
  411f74:	add	x0, x24, x26
  411f78:	mov	w1, wzr
  411f7c:	bl	403c58 <memset@plt>
  411f80:	ldur	x8, [x29, #-24]
  411f84:	str	x27, [x8]
  411f88:	ldur	x8, [x29, #-40]
  411f8c:	cmp	x24, #0x0
  411f90:	str	x19, [x28]
  411f94:	csel	x8, x8, x24, eq  // eq = none
  411f98:	strb	w23, [x8, x26]
  411f9c:	ldur	x8, [x29, #-24]
  411fa0:	ldr	x26, [x28]
  411fa4:	ldr	w23, [x25, #84]
  411fa8:	ldr	x8, [x8]
  411fac:	add	x19, x26, #0x4
  411fb0:	cmp	x19, x8
  411fb4:	b.ls	412020 <ascii_strlower_n@plt+0xdc18>  // b.plast
  411fb8:	bl	404058 <page_size@plt>
  411fbc:	ldr	x9, [x20, #32]
  411fc0:	add	x8, x0, x19, lsl #1
  411fc4:	neg	x10, x0
  411fc8:	sub	x8, x8, #0x1
  411fcc:	and	x8, x8, x10
  411fd0:	cmp	x9, #0x0
  411fd4:	mov	w10, #0xffff                	// #65535
  411fd8:	csel	x9, x10, x9, eq  // eq = none
  411fdc:	cmp	x8, x9
  411fe0:	csel	x27, x9, x8, hi  // hi = pmore
  411fe4:	cmp	x19, x27
  411fe8:	b.hi	40f7dc <ascii_strlower_n@plt+0xb3d4>  // b.pmore
  411fec:	ldr	x8, [sp, #48]
  411ff0:	ldr	x0, [x8]
  411ff4:	cbz	x0, 412418 <ascii_strlower_n@plt+0xe010>
  411ff8:	mov	x1, x27
  411ffc:	bl	4040b8 <realloc@plt>
  412000:	cbz	x0, 412d24 <ascii_strlower_n@plt+0xe91c>
  412004:	ldr	x8, [sp, #48]
  412008:	mov	x28, x0
  41200c:	str	x0, [x8]
  412010:	ldur	x8, [x29, #-32]
  412014:	ldr	x26, [x8]
  412018:	add	x19, x26, #0x4
  41201c:	b	412450 <ascii_strlower_n@plt+0xe048>
  412020:	ldr	x24, [sp, #48]
  412024:	ldr	x28, [x24]
  412028:	b	41245c <ascii_strlower_n@plt+0xe054>
  41202c:	mov	x0, x27
  412030:	bl	4040c8 <malloc@plt>
  412034:	ldr	x8, [sp, #48]
  412038:	str	x0, [x8]
  41203c:	cbz	x0, 412d24 <ascii_strlower_n@plt+0xe91c>
  412040:	ldur	x1, [x29, #-40]
  412044:	mov	x2, x26
  412048:	mov	x28, x0
  41204c:	bl	403c68 <memcpy@plt>
  412050:	subs	x2, x27, x26
  412054:	b.eq	412064 <ascii_strlower_n@plt+0xdc5c>  // b.none
  412058:	add	x0, x28, x26
  41205c:	mov	w1, wzr
  412060:	bl	403c58 <memset@plt>
  412064:	ldur	x8, [x29, #-24]
  412068:	str	x27, [x8]
  41206c:	ldp	x8, x9, [x29, #-40]
  412070:	cmp	x28, #0x0
  412074:	str	x19, [x9]
  412078:	csel	x8, x8, x28, eq  // eq = none
  41207c:	mov	x10, x9
  412080:	rev	w9, w23
  412084:	str	w9, [x8, x26]
  412088:	ldur	x8, [x29, #-24]
  41208c:	ldr	x26, [x10]
  412090:	ldr	w23, [x25, #104]
  412094:	ldr	x8, [x8]
  412098:	add	x19, x26, #0x4
  41209c:	cmp	x19, x8
  4120a0:	b.ls	41210c <ascii_strlower_n@plt+0xdd04>  // b.plast
  4120a4:	bl	404058 <page_size@plt>
  4120a8:	ldr	x9, [x20, #32]
  4120ac:	add	x8, x0, x19, lsl #1
  4120b0:	neg	x10, x0
  4120b4:	sub	x8, x8, #0x1
  4120b8:	and	x8, x8, x10
  4120bc:	cmp	x9, #0x0
  4120c0:	mov	w10, #0xffff                	// #65535
  4120c4:	csel	x9, x10, x9, eq  // eq = none
  4120c8:	cmp	x8, x9
  4120cc:	csel	x27, x9, x8, hi  // hi = pmore
  4120d0:	cmp	x19, x27
  4120d4:	b.hi	40f7dc <ascii_strlower_n@plt+0xb3d4>  // b.pmore
  4120d8:	ldr	x8, [sp, #48]
  4120dc:	ldr	x0, [x8]
  4120e0:	cbz	x0, 412508 <ascii_strlower_n@plt+0xe100>
  4120e4:	mov	x1, x27
  4120e8:	bl	4040b8 <realloc@plt>
  4120ec:	cbz	x0, 412d24 <ascii_strlower_n@plt+0xe91c>
  4120f0:	ldr	x8, [sp, #48]
  4120f4:	mov	x28, x0
  4120f8:	str	x0, [x8]
  4120fc:	ldur	x8, [x29, #-32]
  412100:	ldr	x26, [x8]
  412104:	add	x19, x26, #0x4
  412108:	b	412540 <ascii_strlower_n@plt+0xe138>
  41210c:	ldr	x8, [sp, #48]
  412110:	ldr	x28, [x8]
  412114:	b	412548 <ascii_strlower_n@plt+0xe140>
  412118:	mov	x0, x8
  41211c:	mov	x19, x8
  412120:	bl	4040c8 <malloc@plt>
  412124:	ldr	x8, [sp, #48]
  412128:	str	x0, [x8]
  41212c:	cbz	x0, 412af0 <ascii_strlower_n@plt+0xe6e8>
  412130:	ldur	x1, [x29, #-40]
  412134:	mov	x2, x28
  412138:	mov	x24, x0
  41213c:	bl	403c68 <memcpy@plt>
  412140:	mov	x21, x19
  412144:	subs	x2, x19, x28
  412148:	b.eq	412158 <ascii_strlower_n@plt+0xdd50>  // b.none
  41214c:	add	x0, x24, x28
  412150:	mov	w1, wzr
  412154:	bl	403c58 <memset@plt>
  412158:	ldur	x8, [x29, #-24]
  41215c:	str	x21, [x8]
  412160:	ldur	x8, [x29, #-40]
  412164:	cmp	x24, #0x0
  412168:	ldr	x19, [sp, #24]
  41216c:	csel	x8, x8, x24, eq  // eq = none
  412170:	add	x8, x8, x28
  412174:	ldur	x28, [x29, #-32]
  412178:	str	x23, [x28]
  41217c:	strb	w27, [x8]
  412180:	cbz	x27, 412194 <ascii_strlower_n@plt+0xdd8c>
  412184:	add	x0, x8, #0x1
  412188:	mov	x1, x26
  41218c:	mov	x2, x27
  412190:	bl	403c68 <memcpy@plt>
  412194:	ldur	x8, [x29, #-24]
  412198:	ldp	x25, x26, [x25, #96]
  41219c:	ldr	x27, [x28]
  4121a0:	ldr	x21, [sp, #48]
  4121a4:	ldr	x8, [x8]
  4121a8:	add	x23, x27, x26
  4121ac:	cmp	x23, x8
  4121b0:	b.ls	412204 <ascii_strlower_n@plt+0xddfc>  // b.plast
  4121b4:	bl	404058 <page_size@plt>
  4121b8:	ldr	x9, [x20, #32]
  4121bc:	add	x8, x0, x23, lsl #1
  4121c0:	neg	x10, x0
  4121c4:	sub	x8, x8, #0x1
  4121c8:	and	x8, x8, x10
  4121cc:	cmp	x9, #0x0
  4121d0:	mov	w10, #0xffff                	// #65535
  4121d4:	csel	x9, x10, x9, eq  // eq = none
  4121d8:	cmp	x8, x9
  4121dc:	csel	x28, x9, x8, hi  // hi = pmore
  4121e0:	cmp	x23, x28
  4121e4:	b.hi	40fc34 <ascii_strlower_n@plt+0xb82c>  // b.pmore
  4121e8:	ldr	x0, [x21]
  4121ec:	cbz	x0, 412664 <ascii_strlower_n@plt+0xe25c>
  4121f0:	mov	x1, x28
  4121f4:	bl	4040b8 <realloc@plt>
  4121f8:	cbz	x0, 412af0 <ascii_strlower_n@plt+0xe6e8>
  4121fc:	ldp	x21, x8, [sp, #40]
  412200:	b	41190c <ascii_strlower_n@plt+0xd504>
  412204:	ldr	x24, [x21]
  412208:	ldr	x21, [sp, #40]
  41220c:	ldur	x8, [x29, #-40]
  412210:	cmp	x24, #0x0
  412214:	str	x23, [x28]
  412218:	csel	x8, x8, x24, eq  // eq = none
  41221c:	ldr	x24, [sp, #48]
  412220:	cbz	x26, 40fbc0 <ascii_strlower_n@plt+0xb7b8>
  412224:	cbz	x25, 412d70 <ascii_strlower_n@plt+0xe968>
  412228:	add	x0, x8, x27
  41222c:	b	40fbb4 <ascii_strlower_n@plt+0xb7ac>
  412230:	ldr	x21, [sp, #40]
  412234:	mov	x0, x28
  412238:	bl	4040c8 <malloc@plt>
  41223c:	str	x0, [x24]
  412240:	cbz	x0, 412d24 <ascii_strlower_n@plt+0xe91c>
  412244:	ldur	x1, [x29, #-40]
  412248:	mov	x2, x19
  41224c:	mov	x27, x0
  412250:	mov	x24, x19
  412254:	bl	403c68 <memcpy@plt>
  412258:	subs	x2, x28, x19
  41225c:	b.eq	41226c <ascii_strlower_n@plt+0xde64>  // b.none
  412260:	add	x0, x27, x19
  412264:	mov	w1, wzr
  412268:	bl	403c58 <memset@plt>
  41226c:	mov	x10, x19
  412270:	ldr	x19, [sp, #24]
  412274:	ldr	x1, [sp, #8]
  412278:	ldur	x8, [x29, #-24]
  41227c:	str	x28, [x8]
  412280:	ldp	x8, x9, [x29, #-40]
  412284:	cmp	x27, #0x0
  412288:	csel	x8, x8, x27, eq  // eq = none
  41228c:	str	x26, [x9]
  412290:	cbz	x23, 4122b4 <ascii_strlower_n@plt+0xdeac>
  412294:	cbz	x1, 412d70 <ascii_strlower_n@plt+0xe968>
  412298:	add	x0, x8, x10
  41229c:	mov	x2, x23
  4122a0:	bl	403c68 <memcpy@plt>
  4122a4:	ldur	x8, [x29, #-32]
  4122a8:	ldr	x26, [x8]
  4122ac:	ldur	x8, [x29, #-24]
  4122b0:	ldr	x28, [x8]
  4122b4:	ldrb	w23, [x25, #112]
  4122b8:	add	x24, x26, #0x1
  4122bc:	cmp	x24, x28
  4122c0:	b.ls	41232c <ascii_strlower_n@plt+0xdf24>  // b.plast
  4122c4:	bl	404058 <page_size@plt>
  4122c8:	ldr	x9, [x20, #32]
  4122cc:	add	x8, x0, x24, lsl #1
  4122d0:	neg	x10, x0
  4122d4:	sub	x8, x8, #0x1
  4122d8:	and	x8, x8, x10
  4122dc:	cmp	x9, #0x0
  4122e0:	mov	w10, #0xffff                	// #65535
  4122e4:	csel	x9, x10, x9, eq  // eq = none
  4122e8:	cmp	x8, x9
  4122ec:	csel	x27, x9, x8, hi  // hi = pmore
  4122f0:	cmp	x24, x27
  4122f4:	b.hi	40fc34 <ascii_strlower_n@plt+0xb82c>  // b.pmore
  4122f8:	ldr	x8, [sp, #48]
  4122fc:	ldr	x0, [x8]
  412300:	cbz	x0, 4126a8 <ascii_strlower_n@plt+0xe2a0>
  412304:	mov	x1, x27
  412308:	bl	4040b8 <realloc@plt>
  41230c:	cbz	x0, 412af0 <ascii_strlower_n@plt+0xe6e8>
  412310:	ldr	x8, [sp, #48]
  412314:	mov	x28, x0
  412318:	str	x0, [x8]
  41231c:	ldur	x8, [x29, #-32]
  412320:	ldr	x26, [x8]
  412324:	add	x24, x26, #0x1
  412328:	b	4126e0 <ascii_strlower_n@plt+0xe2d8>
  41232c:	ldr	x8, [sp, #48]
  412330:	ldr	x28, [x8]
  412334:	b	4126ec <ascii_strlower_n@plt+0xe2e4>
  412338:	mov	x0, x27
  41233c:	bl	4040c8 <malloc@plt>
  412340:	str	x0, [x24]
  412344:	cbz	x0, 412d24 <ascii_strlower_n@plt+0xe91c>
  412348:	ldur	x1, [x29, #-40]
  41234c:	mov	x2, x26
  412350:	mov	x28, x0
  412354:	bl	403c68 <memcpy@plt>
  412358:	subs	x2, x27, x26
  41235c:	b.eq	41236c <ascii_strlower_n@plt+0xdf64>  // b.none
  412360:	add	x0, x28, x26
  412364:	mov	w1, wzr
  412368:	bl	403c58 <memset@plt>
  41236c:	ldr	x24, [sp, #48]
  412370:	ldur	x8, [x29, #-24]
  412374:	str	x27, [x8]
  412378:	ldp	x8, x9, [x29, #-40]
  41237c:	cmp	x28, #0x0
  412380:	str	x19, [x9]
  412384:	csel	x8, x8, x28, eq  // eq = none
  412388:	mov	x10, x9
  41238c:	rev	w9, w23
  412390:	str	w9, [x8, x26]
  412394:	ldur	x8, [x29, #-24]
  412398:	ldr	x26, [x10]
  41239c:	ldr	w23, [x25, #92]
  4123a0:	ldr	x8, [x8]
  4123a4:	add	x19, x26, #0x4
  4123a8:	cmp	x19, x8
  4123ac:	b.ls	412410 <ascii_strlower_n@plt+0xe008>  // b.plast
  4123b0:	bl	404058 <page_size@plt>
  4123b4:	ldr	x9, [x20, #32]
  4123b8:	add	x8, x0, x19, lsl #1
  4123bc:	neg	x10, x0
  4123c0:	sub	x8, x8, #0x1
  4123c4:	and	x8, x8, x10
  4123c8:	cmp	x9, #0x0
  4123cc:	mov	w10, #0xffff                	// #65535
  4123d0:	csel	x9, x10, x9, eq  // eq = none
  4123d4:	cmp	x8, x9
  4123d8:	csel	x27, x9, x8, hi  // hi = pmore
  4123dc:	cmp	x19, x27
  4123e0:	b.hi	40f7dc <ascii_strlower_n@plt+0xb3d4>  // b.pmore
  4123e4:	ldr	x0, [x24]
  4123e8:	cbz	x0, 412794 <ascii_strlower_n@plt+0xe38c>
  4123ec:	mov	x1, x27
  4123f0:	bl	4040b8 <realloc@plt>
  4123f4:	cbz	x0, 412d24 <ascii_strlower_n@plt+0xe91c>
  4123f8:	ldur	x8, [x29, #-32]
  4123fc:	str	x0, [x24]
  412400:	mov	x28, x0
  412404:	ldr	x26, [x8]
  412408:	add	x19, x26, #0x4
  41240c:	b	4127cc <ascii_strlower_n@plt+0xe3c4>
  412410:	ldr	x28, [x24]
  412414:	b	4127d4 <ascii_strlower_n@plt+0xe3cc>
  412418:	mov	x0, x27
  41241c:	bl	4040c8 <malloc@plt>
  412420:	ldr	x8, [sp, #48]
  412424:	str	x0, [x8]
  412428:	cbz	x0, 412d24 <ascii_strlower_n@plt+0xe91c>
  41242c:	ldur	x1, [x29, #-40]
  412430:	mov	x2, x26
  412434:	mov	x28, x0
  412438:	bl	403c68 <memcpy@plt>
  41243c:	subs	x2, x27, x26
  412440:	b.eq	412450 <ascii_strlower_n@plt+0xe048>  // b.none
  412444:	add	x0, x28, x26
  412448:	mov	w1, wzr
  41244c:	bl	403c58 <memset@plt>
  412450:	ldur	x8, [x29, #-24]
  412454:	ldr	x24, [sp, #48]
  412458:	str	x27, [x8]
  41245c:	ldp	x8, x9, [x29, #-40]
  412460:	cmp	x28, #0x0
  412464:	str	x19, [x9]
  412468:	csel	x8, x8, x28, eq  // eq = none
  41246c:	mov	x10, x9
  412470:	rev	w9, w23
  412474:	str	w9, [x8, x26]
  412478:	ldur	x8, [x29, #-24]
  41247c:	ldr	x26, [x10]
  412480:	ldr	w23, [x25, #88]
  412484:	ldr	x8, [x8]
  412488:	add	x19, x26, #0x4
  41248c:	cmp	x19, x8
  412490:	b.ls	412500 <ascii_strlower_n@plt+0xe0f8>  // b.plast
  412494:	mov	x24, x21
  412498:	bl	404058 <page_size@plt>
  41249c:	ldr	x9, [x20, #32]
  4124a0:	add	x8, x0, x19, lsl #1
  4124a4:	neg	x10, x0
  4124a8:	sub	x8, x8, #0x1
  4124ac:	and	x8, x8, x10
  4124b0:	cmp	x9, #0x0
  4124b4:	mov	w10, #0xffff                	// #65535
  4124b8:	csel	x9, x10, x9, eq  // eq = none
  4124bc:	cmp	x8, x9
  4124c0:	csel	x27, x9, x8, hi  // hi = pmore
  4124c4:	cmp	x19, x27
  4124c8:	b.hi	40f7dc <ascii_strlower_n@plt+0xb3d4>  // b.pmore
  4124cc:	ldr	x8, [sp, #48]
  4124d0:	ldr	x0, [x8]
  4124d4:	cbz	x0, 412878 <ascii_strlower_n@plt+0xe470>
  4124d8:	mov	x1, x27
  4124dc:	bl	4040b8 <realloc@plt>
  4124e0:	cbz	x0, 412d24 <ascii_strlower_n@plt+0xe91c>
  4124e4:	ldr	x8, [sp, #48]
  4124e8:	mov	x28, x0
  4124ec:	str	x0, [x8]
  4124f0:	ldur	x8, [x29, #-32]
  4124f4:	ldr	x26, [x8]
  4124f8:	add	x19, x26, #0x4
  4124fc:	b	4128b0 <ascii_strlower_n@plt+0xe4a8>
  412500:	ldr	x28, [x24]
  412504:	b	4128c0 <ascii_strlower_n@plt+0xe4b8>
  412508:	mov	x0, x27
  41250c:	bl	4040c8 <malloc@plt>
  412510:	ldr	x8, [sp, #48]
  412514:	str	x0, [x8]
  412518:	cbz	x0, 412d24 <ascii_strlower_n@plt+0xe91c>
  41251c:	ldur	x1, [x29, #-40]
  412520:	mov	x2, x26
  412524:	mov	x28, x0
  412528:	bl	403c68 <memcpy@plt>
  41252c:	subs	x2, x27, x26
  412530:	b.eq	412540 <ascii_strlower_n@plt+0xe138>  // b.none
  412534:	add	x0, x28, x26
  412538:	mov	w1, wzr
  41253c:	bl	403c58 <memset@plt>
  412540:	ldur	x8, [x29, #-24]
  412544:	str	x27, [x8]
  412548:	ldp	x8, x9, [x29, #-40]
  41254c:	cmp	x28, #0x0
  412550:	str	x19, [x9]
  412554:	csel	x8, x8, x28, eq  // eq = none
  412558:	mov	x10, x9
  41255c:	rev	w9, w23
  412560:	str	w9, [x8, x26]
  412564:	ldur	x8, [x29, #-24]
  412568:	ldr	x26, [x10]
  41256c:	ldr	w23, [x25, #108]
  412570:	ldr	x8, [x8]
  412574:	add	x19, x26, #0x4
  412578:	cmp	x19, x8
  41257c:	b.ls	4125e8 <ascii_strlower_n@plt+0xe1e0>  // b.plast
  412580:	bl	404058 <page_size@plt>
  412584:	ldr	x9, [x20, #32]
  412588:	add	x8, x0, x19, lsl #1
  41258c:	neg	x10, x0
  412590:	sub	x8, x8, #0x1
  412594:	and	x8, x8, x10
  412598:	cmp	x9, #0x0
  41259c:	mov	w10, #0xffff                	// #65535
  4125a0:	csel	x9, x10, x9, eq  // eq = none
  4125a4:	cmp	x8, x9
  4125a8:	csel	x27, x9, x8, hi  // hi = pmore
  4125ac:	cmp	x19, x27
  4125b0:	b.hi	40f7dc <ascii_strlower_n@plt+0xb3d4>  // b.pmore
  4125b4:	ldr	x8, [sp, #48]
  4125b8:	ldr	x0, [x8]
  4125bc:	cbz	x0, 412974 <ascii_strlower_n@plt+0xe56c>
  4125c0:	mov	x1, x27
  4125c4:	bl	4040b8 <realloc@plt>
  4125c8:	cbz	x0, 412d24 <ascii_strlower_n@plt+0xe91c>
  4125cc:	ldr	x8, [sp, #48]
  4125d0:	mov	x28, x0
  4125d4:	str	x0, [x8]
  4125d8:	ldur	x8, [x29, #-32]
  4125dc:	ldr	x26, [x8]
  4125e0:	add	x19, x26, #0x4
  4125e4:	b	4129ac <ascii_strlower_n@plt+0xe5a4>
  4125e8:	ldr	x8, [sp, #48]
  4125ec:	ldr	x28, [x8]
  4125f0:	b	4129b4 <ascii_strlower_n@plt+0xe5ac>
  4125f4:	mov	x0, x24
  4125f8:	bl	4040c8 <malloc@plt>
  4125fc:	ldr	x8, [sp, #48]
  412600:	str	x0, [x8]
  412604:	cbz	x0, 412d24 <ascii_strlower_n@plt+0xe91c>
  412608:	ldur	x1, [x29, #-40]
  41260c:	mov	x2, x27
  412610:	mov	x28, x0
  412614:	bl	403c68 <memcpy@plt>
  412618:	subs	x2, x24, x27
  41261c:	b.eq	41262c <ascii_strlower_n@plt+0xe224>  // b.none
  412620:	add	x0, x28, x27
  412624:	mov	w1, wzr
  412628:	bl	403c58 <memset@plt>
  41262c:	ldur	x8, [x29, #-24]
  412630:	str	x24, [x8]
  412634:	ldur	x8, [x29, #-40]
  412638:	cmp	x28, #0x0
  41263c:	ldr	x19, [sp, #24]
  412640:	ldr	x24, [sp, #48]
  412644:	csel	x8, x8, x28, eq  // eq = none
  412648:	ldur	x28, [x29, #-32]
  41264c:	add	x8, x8, x27
  412650:	str	x23, [x28]
  412654:	strb	w26, [x8]
  412658:	cbz	x26, 40fbc0 <ascii_strlower_n@plt+0xb7b8>
  41265c:	add	x0, x8, #0x1
  412660:	b	40fbb4 <ascii_strlower_n@plt+0xb7ac>
  412664:	ldr	x21, [sp, #40]
  412668:	mov	x0, x28
  41266c:	bl	4040c8 <malloc@plt>
  412670:	ldr	x8, [sp, #48]
  412674:	str	x0, [x8]
  412678:	cbz	x0, 412af0 <ascii_strlower_n@plt+0xe6e8>
  41267c:	ldur	x1, [x29, #-40]
  412680:	mov	x2, x27
  412684:	mov	x24, x0
  412688:	bl	403c68 <memcpy@plt>
  41268c:	subs	x2, x28, x27
  412690:	b.eq	4126a0 <ascii_strlower_n@plt+0xe298>  // b.none
  412694:	add	x0, x24, x27
  412698:	mov	w1, wzr
  41269c:	bl	403c58 <memset@plt>
  4126a0:	ldr	x19, [sp, #24]
  4126a4:	b	411d68 <ascii_strlower_n@plt+0xd960>
  4126a8:	mov	x0, x27
  4126ac:	bl	4040c8 <malloc@plt>
  4126b0:	ldr	x8, [sp, #48]
  4126b4:	str	x0, [x8]
  4126b8:	cbz	x0, 412af0 <ascii_strlower_n@plt+0xe6e8>
  4126bc:	ldur	x1, [x29, #-40]
  4126c0:	mov	x2, x26
  4126c4:	mov	x28, x0
  4126c8:	bl	403c68 <memcpy@plt>
  4126cc:	subs	x2, x27, x26
  4126d0:	b.eq	4126e0 <ascii_strlower_n@plt+0xe2d8>  // b.none
  4126d4:	add	x0, x28, x26
  4126d8:	mov	w1, wzr
  4126dc:	bl	403c58 <memset@plt>
  4126e0:	ldur	x8, [x29, #-24]
  4126e4:	ldr	x19, [sp, #24]
  4126e8:	str	x27, [x8]
  4126ec:	ldp	x8, x9, [x29, #-40]
  4126f0:	cmp	x28, #0x0
  4126f4:	csel	x8, x8, x28, eq  // eq = none
  4126f8:	str	x24, [x9]
  4126fc:	strb	w23, [x8, x26]
  412700:	ldur	x8, [x29, #-24]
  412704:	ldp	x1, x26, [x25, #104]
  412708:	ldr	x28, [x9]
  41270c:	ldr	x8, [x8]
  412710:	add	x23, x28, x26
  412714:	cmp	x23, x8
  412718:	b.ls	412788 <ascii_strlower_n@plt+0xe380>  // b.plast
  41271c:	str	x1, [sp, #8]
  412720:	bl	404058 <page_size@plt>
  412724:	ldr	x9, [x20, #32]
  412728:	add	x8, x0, x23, lsl #1
  41272c:	neg	x10, x0
  412730:	sub	x8, x8, #0x1
  412734:	and	x8, x8, x10
  412738:	cmp	x9, #0x0
  41273c:	mov	w10, #0xffff                	// #65535
  412740:	csel	x9, x10, x9, eq  // eq = none
  412744:	cmp	x8, x9
  412748:	csel	x27, x9, x8, hi  // hi = pmore
  41274c:	cmp	x23, x27
  412750:	b.hi	40fc34 <ascii_strlower_n@plt+0xb82c>  // b.pmore
  412754:	ldr	x8, [sp, #48]
  412758:	ldr	x0, [x8]
  41275c:	cbz	x0, 412a68 <ascii_strlower_n@plt+0xe660>
  412760:	mov	x1, x27
  412764:	bl	4040b8 <realloc@plt>
  412768:	cbz	x0, 412af0 <ascii_strlower_n@plt+0xe6e8>
  41276c:	ldr	x8, [sp, #48]
  412770:	mov	x24, x0
  412774:	str	x0, [x8]
  412778:	ldur	x8, [x29, #-32]
  41277c:	ldr	x28, [x8]
  412780:	add	x23, x28, x26
  412784:	b	412aa0 <ascii_strlower_n@plt+0xe698>
  412788:	ldr	x8, [sp, #48]
  41278c:	ldr	x24, [x8]
  412790:	b	412ab0 <ascii_strlower_n@plt+0xe6a8>
  412794:	mov	x0, x27
  412798:	bl	4040c8 <malloc@plt>
  41279c:	str	x0, [x24]
  4127a0:	cbz	x0, 412d24 <ascii_strlower_n@plt+0xe91c>
  4127a4:	ldur	x1, [x29, #-40]
  4127a8:	mov	x2, x26
  4127ac:	mov	x28, x0
  4127b0:	bl	403c68 <memcpy@plt>
  4127b4:	subs	x2, x27, x26
  4127b8:	b.eq	4127c8 <ascii_strlower_n@plt+0xe3c0>  // b.none
  4127bc:	add	x0, x28, x26
  4127c0:	mov	w1, wzr
  4127c4:	bl	403c58 <memset@plt>
  4127c8:	ldr	x24, [sp, #48]
  4127cc:	ldur	x8, [x29, #-24]
  4127d0:	str	x27, [x8]
  4127d4:	ldp	x8, x9, [x29, #-40]
  4127d8:	cmp	x28, #0x0
  4127dc:	str	x19, [x9]
  4127e0:	csel	x8, x8, x28, eq  // eq = none
  4127e4:	mov	x10, x9
  4127e8:	rev	w9, w23
  4127ec:	str	w9, [x8, x26]
  4127f0:	ldur	x8, [x29, #-24]
  4127f4:	ldr	x26, [x10]
  4127f8:	ldrh	w23, [x25, #96]
  4127fc:	ldr	x8, [x8]
  412800:	add	x19, x26, #0x2
  412804:	cmp	x19, x8
  412808:	b.ls	412870 <ascii_strlower_n@plt+0xe468>  // b.plast
  41280c:	bl	404058 <page_size@plt>
  412810:	ldr	x9, [x20, #32]
  412814:	add	x8, x0, x19, lsl #1
  412818:	neg	x10, x0
  41281c:	sub	x8, x8, #0x1
  412820:	and	x8, x8, x10
  412824:	cmp	x9, #0x0
  412828:	mov	w10, #0xffff                	// #65535
  41282c:	csel	x9, x10, x9, eq  // eq = none
  412830:	cmp	x8, x9
  412834:	csel	x27, x9, x8, hi  // hi = pmore
  412838:	cmp	x19, x27
  41283c:	b.hi	40f7dc <ascii_strlower_n@plt+0xb3d4>  // b.pmore
  412840:	ldr	x0, [x24]
  412844:	cbz	x0, 412af8 <ascii_strlower_n@plt+0xe6f0>
  412848:	mov	x1, x27
  41284c:	bl	4040b8 <realloc@plt>
  412850:	cbz	x0, 412d24 <ascii_strlower_n@plt+0xe91c>
  412854:	ldr	x8, [sp, #48]
  412858:	mov	x28, x0
  41285c:	str	x0, [x8]
  412860:	ldur	x8, [x29, #-32]
  412864:	ldr	x26, [x8]
  412868:	add	x19, x26, #0x2
  41286c:	b	412b2c <ascii_strlower_n@plt+0xe724>
  412870:	ldr	x28, [x24]
  412874:	b	412b38 <ascii_strlower_n@plt+0xe730>
  412878:	mov	x0, x27
  41287c:	bl	4040c8 <malloc@plt>
  412880:	ldr	x8, [sp, #48]
  412884:	str	x0, [x8]
  412888:	cbz	x0, 412d24 <ascii_strlower_n@plt+0xe91c>
  41288c:	ldur	x1, [x29, #-40]
  412890:	mov	x2, x26
  412894:	mov	x28, x0
  412898:	bl	403c68 <memcpy@plt>
  41289c:	subs	x2, x27, x26
  4128a0:	b.eq	4128b0 <ascii_strlower_n@plt+0xe4a8>  // b.none
  4128a4:	add	x0, x28, x26
  4128a8:	mov	w1, wzr
  4128ac:	bl	403c58 <memset@plt>
  4128b0:	ldur	x8, [x29, #-24]
  4128b4:	mov	x21, x24
  4128b8:	ldr	x24, [sp, #48]
  4128bc:	str	x27, [x8]
  4128c0:	ldp	x8, x9, [x29, #-40]
  4128c4:	cmp	x28, #0x0
  4128c8:	str	x19, [x9]
  4128cc:	csel	x8, x8, x28, eq  // eq = none
  4128d0:	mov	x28, x9
  4128d4:	rev	w9, w23
  4128d8:	str	w9, [x8, x26]
  4128dc:	ldur	x8, [x29, #-24]
  4128e0:	ldr	x26, [x28]
  4128e4:	ldr	w23, [x25, #92]
  4128e8:	ldr	x8, [x8]
  4128ec:	add	x19, x26, #0x4
  4128f0:	cmp	x19, x8
  4128f4:	b.ls	412964 <ascii_strlower_n@plt+0xe55c>  // b.plast
  4128f8:	bl	404058 <page_size@plt>
  4128fc:	ldr	x9, [x20, #32]
  412900:	add	x8, x0, x19, lsl #1
  412904:	neg	x10, x0
  412908:	sub	x8, x8, #0x1
  41290c:	and	x8, x8, x10
  412910:	cmp	x9, #0x0
  412914:	mov	w10, #0xffff                	// #65535
  412918:	csel	x9, x10, x9, eq  // eq = none
  41291c:	cmp	x8, x9
  412920:	csel	x25, x9, x8, hi  // hi = pmore
  412924:	cmp	x19, x25
  412928:	b.hi	40f7dc <ascii_strlower_n@plt+0xb3d4>  // b.pmore
  41292c:	str	x21, [sp, #32]
  412930:	ldr	x21, [sp, #40]
  412934:	ldr	x0, [x24]
  412938:	cbz	x0, 412c2c <ascii_strlower_n@plt+0xe824>
  41293c:	mov	x1, x25
  412940:	bl	4040b8 <realloc@plt>
  412944:	cbz	x0, 412d24 <ascii_strlower_n@plt+0xe91c>
  412948:	ldr	x8, [sp, #48]
  41294c:	mov	x27, x0
  412950:	str	x0, [x8]
  412954:	ldur	x8, [x29, #-32]
  412958:	ldr	x26, [x8]
  41295c:	add	x19, x26, #0x4
  412960:	b	412c60 <ascii_strlower_n@plt+0xe858>
  412964:	str	x21, [sp, #32]
  412968:	ldr	x27, [x24]
  41296c:	ldr	x21, [sp, #40]
  412970:	b	412c6c <ascii_strlower_n@plt+0xe864>
  412974:	mov	x0, x27
  412978:	bl	4040c8 <malloc@plt>
  41297c:	ldr	x8, [sp, #48]
  412980:	str	x0, [x8]
  412984:	cbz	x0, 412d24 <ascii_strlower_n@plt+0xe91c>
  412988:	ldur	x1, [x29, #-40]
  41298c:	mov	x2, x26
  412990:	mov	x28, x0
  412994:	bl	403c68 <memcpy@plt>
  412998:	subs	x2, x27, x26
  41299c:	b.eq	4129ac <ascii_strlower_n@plt+0xe5a4>  // b.none
  4129a0:	add	x0, x28, x26
  4129a4:	mov	w1, wzr
  4129a8:	bl	403c58 <memset@plt>
  4129ac:	ldur	x8, [x29, #-24]
  4129b0:	str	x27, [x8]
  4129b4:	ldp	x8, x9, [x29, #-40]
  4129b8:	cmp	x28, #0x0
  4129bc:	str	x19, [x9]
  4129c0:	csel	x8, x8, x28, eq  // eq = none
  4129c4:	mov	x28, x9
  4129c8:	rev	w9, w23
  4129cc:	str	w9, [x8, x26]
  4129d0:	ldur	x8, [x29, #-24]
  4129d4:	ldr	x26, [x28]
  4129d8:	ldr	w23, [x25, #112]
  4129dc:	ldr	x8, [x8]
  4129e0:	add	x19, x26, #0x4
  4129e4:	cmp	x19, x8
  4129e8:	b.ls	412a58 <ascii_strlower_n@plt+0xe650>  // b.plast
  4129ec:	bl	404058 <page_size@plt>
  4129f0:	ldr	x9, [x20, #32]
  4129f4:	add	x8, x0, x19, lsl #1
  4129f8:	neg	x10, x0
  4129fc:	sub	x8, x8, #0x1
  412a00:	and	x8, x8, x10
  412a04:	cmp	x9, #0x0
  412a08:	mov	w10, #0xffff                	// #65535
  412a0c:	csel	x9, x10, x9, eq  // eq = none
  412a10:	cmp	x8, x9
  412a14:	csel	x25, x9, x8, hi  // hi = pmore
  412a18:	cmp	x19, x25
  412a1c:	b.hi	40f7dc <ascii_strlower_n@plt+0xb3d4>  // b.pmore
  412a20:	str	x21, [sp, #32]
  412a24:	ldp	x21, x8, [sp, #40]
  412a28:	ldr	x0, [x8]
  412a2c:	cbz	x0, 412c7c <ascii_strlower_n@plt+0xe874>
  412a30:	mov	x1, x25
  412a34:	bl	4040b8 <realloc@plt>
  412a38:	cbz	x0, 412d24 <ascii_strlower_n@plt+0xe91c>
  412a3c:	ldr	x8, [sp, #48]
  412a40:	mov	x27, x0
  412a44:	str	x0, [x8]
  412a48:	ldur	x8, [x29, #-32]
  412a4c:	ldr	x26, [x8]
  412a50:	add	x19, x26, #0x4
  412a54:	b	412cb4 <ascii_strlower_n@plt+0xe8ac>
  412a58:	str	x21, [sp, #32]
  412a5c:	ldp	x21, x8, [sp, #40]
  412a60:	ldr	x27, [x8]
  412a64:	b	412cbc <ascii_strlower_n@plt+0xe8b4>
  412a68:	mov	x0, x27
  412a6c:	bl	4040c8 <malloc@plt>
  412a70:	ldr	x8, [sp, #48]
  412a74:	str	x0, [x8]
  412a78:	cbz	x0, 412af0 <ascii_strlower_n@plt+0xe6e8>
  412a7c:	ldur	x1, [x29, #-40]
  412a80:	mov	x2, x28
  412a84:	mov	x24, x0
  412a88:	bl	403c68 <memcpy@plt>
  412a8c:	subs	x2, x27, x28
  412a90:	b.eq	412aa0 <ascii_strlower_n@plt+0xe698>  // b.none
  412a94:	add	x0, x24, x28
  412a98:	mov	w1, wzr
  412a9c:	bl	403c58 <memset@plt>
  412aa0:	ldur	x8, [x29, #-24]
  412aa4:	ldr	x19, [sp, #24]
  412aa8:	ldr	x1, [sp, #8]
  412aac:	str	x27, [x8]
  412ab0:	ldp	x8, x9, [x29, #-40]
  412ab4:	cmp	x24, #0x0
  412ab8:	csel	x8, x8, x24, eq  // eq = none
  412abc:	ldr	x24, [sp, #48]
  412ac0:	str	x23, [x9]
  412ac4:	cbz	x26, 412ad8 <ascii_strlower_n@plt+0xe6d0>
  412ac8:	cbz	x1, 412d70 <ascii_strlower_n@plt+0xe968>
  412acc:	add	x0, x8, x28
  412ad0:	mov	x2, x26
  412ad4:	bl	403c68 <memcpy@plt>
  412ad8:	ldr	x1, [x25, #120]
  412adc:	mov	x0, x20
  412ae0:	bl	412db8 <ascii_strlower_n@plt+0xe9b0>
  412ae4:	ldur	x28, [x29, #-32]
  412ae8:	tbz	w0, #31, 40fbc0 <ascii_strlower_n@plt+0xb7b8>
  412aec:	b	40f8fc <ascii_strlower_n@plt+0xb4f4>
  412af0:	mov	w26, #0xfffffff4            	// #-12
  412af4:	b	412bf0 <ascii_strlower_n@plt+0xe7e8>
  412af8:	mov	x0, x27
  412afc:	bl	4040c8 <malloc@plt>
  412b00:	str	x0, [x24]
  412b04:	cbz	x0, 412d24 <ascii_strlower_n@plt+0xe91c>
  412b08:	ldur	x1, [x29, #-40]
  412b0c:	mov	x2, x26
  412b10:	mov	x28, x0
  412b14:	bl	403c68 <memcpy@plt>
  412b18:	subs	x2, x27, x26
  412b1c:	b.eq	412b2c <ascii_strlower_n@plt+0xe724>  // b.none
  412b20:	add	x0, x28, x26
  412b24:	mov	w1, wzr
  412b28:	bl	403c58 <memset@plt>
  412b2c:	ldur	x8, [x29, #-24]
  412b30:	ldr	x24, [sp, #48]
  412b34:	str	x27, [x8]
  412b38:	ldur	x8, [x29, #-40]
  412b3c:	cmp	x28, #0x0
  412b40:	rev16	w9, w23
  412b44:	str	x19, [x20, #8]
  412b48:	csel	x8, x8, x28, eq  // eq = none
  412b4c:	strh	w9, [x8, x26]
  412b50:	ldr	x1, [x25, #104]
  412b54:	mov	w3, #0x1                   	// #1
  412b58:	mov	x0, x20
  412b5c:	mov	w2, wzr
  412b60:	mov	x4, xzr
  412b64:	bl	40e528 <ascii_strlower_n@plt+0xa120>
  412b68:	tbnz	w0, #31, 412bec <ascii_strlower_n@plt+0xe7e4>
  412b6c:	ldp	x28, x8, [x29, #-32]
  412b70:	ldp	x25, x26, [x25, #112]
  412b74:	ldr	x27, [x28]
  412b78:	ldr	x8, [x8]
  412b7c:	add	x23, x27, x26
  412b80:	cmp	x23, x8
  412b84:	b.ls	412c20 <ascii_strlower_n@plt+0xe818>  // b.plast
  412b88:	bl	404058 <page_size@plt>
  412b8c:	ldr	x9, [x20, #32]
  412b90:	add	x8, x0, x23, lsl #1
  412b94:	neg	x10, x0
  412b98:	sub	x8, x8, #0x1
  412b9c:	and	x8, x8, x10
  412ba0:	cmp	x9, #0x0
  412ba4:	mov	w10, #0xffff                	// #65535
  412ba8:	csel	x9, x10, x9, eq  // eq = none
  412bac:	cmp	x8, x9
  412bb0:	csel	x28, x9, x8, hi  // hi = pmore
  412bb4:	cmp	x23, x28
  412bb8:	b.hi	40f7dc <ascii_strlower_n@plt+0xb3d4>  // b.pmore
  412bbc:	ldr	x0, [x24]
  412bc0:	cbz	x0, 412ce0 <ascii_strlower_n@plt+0xe8d8>
  412bc4:	mov	x1, x28
  412bc8:	bl	4040b8 <realloc@plt>
  412bcc:	cbz	x0, 412d24 <ascii_strlower_n@plt+0xe91c>
  412bd0:	ldr	x8, [sp, #48]
  412bd4:	mov	x24, x0
  412bd8:	str	x0, [x8]
  412bdc:	ldur	x8, [x29, #-32]
  412be0:	ldr	x27, [x8]
  412be4:	add	x23, x27, x26
  412be8:	b	412d18 <ascii_strlower_n@plt+0xe910>
  412bec:	mov	w26, w0
  412bf0:	mov	x0, x20
  412bf4:	mov	x1, x22
  412bf8:	bl	40dea8 <ascii_strlower_n@plt+0x9aa0>
  412bfc:	mov	w0, w26
  412c00:	ldp	x20, x19, [sp, #176]
  412c04:	ldp	x22, x21, [sp, #160]
  412c08:	ldp	x24, x23, [sp, #144]
  412c0c:	ldp	x26, x25, [sp, #128]
  412c10:	ldp	x28, x27, [sp, #112]
  412c14:	ldp	x29, x30, [sp, #96]
  412c18:	add	sp, sp, #0xc0
  412c1c:	ret
  412c20:	ldr	x24, [x24]
  412c24:	ldr	x19, [sp, #24]
  412c28:	b	41220c <ascii_strlower_n@plt+0xde04>
  412c2c:	mov	x0, x25
  412c30:	bl	4040c8 <malloc@plt>
  412c34:	str	x0, [x24]
  412c38:	cbz	x0, 412d24 <ascii_strlower_n@plt+0xe91c>
  412c3c:	ldur	x1, [x29, #-40]
  412c40:	mov	x2, x26
  412c44:	mov	x27, x0
  412c48:	bl	403c68 <memcpy@plt>
  412c4c:	subs	x2, x25, x26
  412c50:	b.eq	412c60 <ascii_strlower_n@plt+0xe858>  // b.none
  412c54:	add	x0, x27, x26
  412c58:	mov	w1, wzr
  412c5c:	bl	403c58 <memset@plt>
  412c60:	ldp	x28, x8, [x29, #-32]
  412c64:	ldr	x24, [sp, #48]
  412c68:	str	x25, [x8]
  412c6c:	ldur	x8, [x29, #-40]
  412c70:	str	x19, [x28]
  412c74:	ldr	x19, [sp, #24]
  412c78:	b	412ccc <ascii_strlower_n@plt+0xe8c4>
  412c7c:	mov	x0, x25
  412c80:	bl	4040c8 <malloc@plt>
  412c84:	ldr	x8, [sp, #48]
  412c88:	str	x0, [x8]
  412c8c:	cbz	x0, 412d24 <ascii_strlower_n@plt+0xe91c>
  412c90:	ldur	x1, [x29, #-40]
  412c94:	mov	x2, x26
  412c98:	mov	x27, x0
  412c9c:	bl	403c68 <memcpy@plt>
  412ca0:	subs	x2, x25, x26
  412ca4:	b.eq	412cb4 <ascii_strlower_n@plt+0xe8ac>  // b.none
  412ca8:	add	x0, x27, x26
  412cac:	mov	w1, wzr
  412cb0:	bl	403c58 <memset@plt>
  412cb4:	ldp	x28, x8, [x29, #-32]
  412cb8:	str	x25, [x8]
  412cbc:	ldur	x8, [x29, #-40]
  412cc0:	str	x19, [x28]
  412cc4:	mov	x19, x24
  412cc8:	ldr	x24, [sp, #48]
  412ccc:	cmp	x27, #0x0
  412cd0:	csel	x8, x8, x27, eq  // eq = none
  412cd4:	rev	w9, w23
  412cd8:	str	w9, [x8, x26]
  412cdc:	b	40fbc0 <ascii_strlower_n@plt+0xb7b8>
  412ce0:	mov	x0, x28
  412ce4:	bl	4040c8 <malloc@plt>
  412ce8:	ldr	x8, [sp, #48]
  412cec:	str	x0, [x8]
  412cf0:	cbz	x0, 412d24 <ascii_strlower_n@plt+0xe91c>
  412cf4:	ldur	x1, [x29, #-40]
  412cf8:	mov	x2, x27
  412cfc:	mov	x24, x0
  412d00:	bl	403c68 <memcpy@plt>
  412d04:	subs	x2, x28, x27
  412d08:	b.eq	412d18 <ascii_strlower_n@plt+0xe910>  // b.none
  412d0c:	add	x0, x24, x27
  412d10:	mov	w1, wzr
  412d14:	bl	403c58 <memset@plt>
  412d18:	ldur	x8, [x29, #-24]
  412d1c:	ldr	x19, [sp, #24]
  412d20:	b	411d6c <ascii_strlower_n@plt+0xd964>
  412d24:	mov	w26, #0xfffffff4            	// #-12
  412d28:	b	412bf0 <ascii_strlower_n@plt+0xe7e8>
  412d2c:	adrp	x1, 421000 <ascii_strlower_n@plt+0x1cbf8>
  412d30:	adrp	x2, 421000 <ascii_strlower_n@plt+0x1cbf8>
  412d34:	adrp	x4, 422000 <ascii_strlower_n@plt+0x1dbf8>
  412d38:	add	x1, x1, #0xb90
  412d3c:	add	x2, x2, #0xad6
  412d40:	add	x4, x4, #0xe3
  412d44:	mov	w3, #0x335                 	// #821
  412d48:	bl	403a98 <log_assert_failed_realm@plt>
  412d4c:	adrp	x1, 422000 <ascii_strlower_n@plt+0x1dbf8>
  412d50:	adrp	x2, 421000 <ascii_strlower_n@plt+0x1cbf8>
  412d54:	adrp	x4, 422000 <ascii_strlower_n@plt+0x1dbf8>
  412d58:	add	x1, x1, #0x14e
  412d5c:	add	x2, x2, #0xad6
  412d60:	add	x4, x4, #0xe3
  412d64:	mov	w3, #0x336                 	// #822
  412d68:	mov	w0, wzr
  412d6c:	bl	403a98 <log_assert_failed_realm@plt>
  412d70:	adrp	x1, 422000 <ascii_strlower_n@plt+0x1dbf8>
  412d74:	adrp	x2, 422000 <ascii_strlower_n@plt+0x1dbf8>
  412d78:	adrp	x4, 422000 <ascii_strlower_n@plt+0x1dbf8>
  412d7c:	add	x1, x1, #0x540
  412d80:	add	x2, x2, #0x547
  412d84:	add	x4, x4, #0x55f
  412d88:	mov	w3, #0x14                  	// #20
  412d8c:	mov	w0, wzr
  412d90:	bl	403a98 <log_assert_failed_realm@plt>
  412d94:	adrp	x1, 41e000 <ascii_strlower_n@plt+0x19bf8>
  412d98:	adrp	x2, 421000 <ascii_strlower_n@plt+0x1cbf8>
  412d9c:	adrp	x4, 421000 <ascii_strlower_n@plt+0x1cbf8>
  412da0:	add	x1, x1, #0x712
  412da4:	add	x2, x2, #0xad6
  412da8:	add	x4, x4, #0xe28
  412dac:	mov	w3, #0x1b7                 	// #439
  412db0:	mov	w0, wzr
  412db4:	bl	403a98 <log_assert_failed_realm@plt>
  412db8:	sub	sp, sp, #0xc0
  412dbc:	movi	v0.2d, #0x0
  412dc0:	stp	x29, x30, [sp, #96]
  412dc4:	stp	x28, x27, [sp, #112]
  412dc8:	stp	x26, x25, [sp, #128]
  412dcc:	stp	x24, x23, [sp, #144]
  412dd0:	stp	x22, x21, [sp, #160]
  412dd4:	stp	x20, x19, [sp, #176]
  412dd8:	add	x29, sp, #0x60
  412ddc:	stp	q0, q0, [sp, #16]
  412de0:	cbz	x0, 4134d8 <ascii_strlower_n@plt+0xf0d0>
  412de4:	ldr	x22, [x0, #8]
  412de8:	mov	x20, x1
  412dec:	mov	x19, x0
  412df0:	add	x1, sp, #0x30
  412df4:	add	x2, sp, #0xc
  412df8:	mov	x0, x20
  412dfc:	str	wzr, [sp, #48]
  412e00:	bl	404138 <bitmap_iterate@plt>
  412e04:	mov	w21, wzr
  412e08:	tbz	w0, #0, 413428 <ascii_strlower_n@plt+0xf020>
  412e0c:	str	x22, [sp]
  412e10:	mov	w22, wzr
  412e14:	mov	w25, wzr
  412e18:	mov	w26, wzr
  412e1c:	add	x21, x19, #0xa8
  412e20:	mov	w24, #0x1                   	// #1
  412e24:	add	x27, sp, #0x10
  412e28:	b	412e94 <ascii_strlower_n@plt+0xea8c>
  412e2c:	ldr	x26, [x19, #40]
  412e30:	cmp	x26, #0x0
  412e34:	csel	x8, x21, x26, eq  // eq = none
  412e38:	add	x0, x8, x24
  412e3c:	add	x1, sp, #0x10
  412e40:	mov	x2, x23
  412e44:	str	x28, [x19, #8]
  412e48:	bl	403c68 <memcpy@plt>
  412e4c:	ldr	w8, [sp, #12]
  412e50:	movi	v0.2d, #0x0
  412e54:	mov	w24, #0x1                   	// #1
  412e58:	stp	q0, q0, [sp, #16]
  412e5c:	lsr	w23, w8, #8
  412e60:	ubfx	x26, x8, #3, #5
  412e64:	ldrb	w9, [x27, x26]
  412e68:	mvn	w8, w8
  412e6c:	and	w8, w8, #0x7
  412e70:	lsl	w8, w24, w8
  412e74:	orr	w22, w9, w8
  412e78:	add	x1, sp, #0x30
  412e7c:	add	x2, sp, #0xc
  412e80:	mov	x0, x20
  412e84:	strb	w22, [x27, x26]
  412e88:	bl	404138 <bitmap_iterate@plt>
  412e8c:	mov	w25, w23
  412e90:	tbz	w0, #0, 4130e4 <ascii_strlower_n@plt+0xecdc>
  412e94:	ldr	w8, [sp, #12]
  412e98:	cmp	w8, #0x10, lsl #12
  412e9c:	b.cs	4134b4 <ascii_strlower_n@plt+0xf0ac>  // b.hs, b.nlast
  412ea0:	lsr	w23, w8, #8
  412ea4:	cmp	w23, w25, uxtb
  412ea8:	b.eq	412e60 <ascii_strlower_n@plt+0xea58>  // b.none
  412eac:	tst	w22, #0xff
  412eb0:	b.eq	412e60 <ascii_strlower_n@plt+0xea58>  // b.none
  412eb4:	ldp	x22, x8, [x19, #8]
  412eb8:	add	x28, x22, #0x1
  412ebc:	cmp	x28, x8
  412ec0:	b.ls	412f20 <ascii_strlower_n@plt+0xeb18>  // b.plast
  412ec4:	bl	404058 <page_size@plt>
  412ec8:	ldr	x9, [x19, #32]
  412ecc:	add	x8, x0, x28, lsl #1
  412ed0:	sub	x8, x8, #0x1
  412ed4:	neg	x10, x0
  412ed8:	and	x8, x8, x10
  412edc:	cmp	x9, #0x0
  412ee0:	mov	w10, #0xffff                	// #65535
  412ee4:	csel	x9, x10, x9, eq  // eq = none
  412ee8:	cmp	x8, x9
  412eec:	csel	x23, x9, x8, hi  // hi = pmore
  412ef0:	cmp	x28, x23
  412ef4:	b.hi	413158 <ascii_strlower_n@plt+0xed50>  // b.pmore
  412ef8:	ldr	x0, [x19, #40]
  412efc:	cbz	x0, 412f2c <ascii_strlower_n@plt+0xeb24>
  412f00:	mov	x1, x23
  412f04:	bl	4040b8 <realloc@plt>
  412f08:	cbz	x0, 41316c <ascii_strlower_n@plt+0xed64>
  412f0c:	ldr	x8, [x19, #8]
  412f10:	mov	x24, x0
  412f14:	str	x0, [x19, #40]
  412f18:	add	x28, x8, #0x1
  412f1c:	b	412f64 <ascii_strlower_n@plt+0xeb5c>
  412f20:	ldr	x24, [x19, #40]
  412f24:	mov	x8, x22
  412f28:	b	412f68 <ascii_strlower_n@plt+0xeb60>
  412f2c:	mov	x0, x23
  412f30:	bl	4040c8 <malloc@plt>
  412f34:	str	x0, [x19, #40]
  412f38:	cbz	x0, 41316c <ascii_strlower_n@plt+0xed64>
  412f3c:	mov	x1, x21
  412f40:	mov	x2, x22
  412f44:	mov	x24, x0
  412f48:	bl	403c68 <memcpy@plt>
  412f4c:	subs	x2, x23, x22
  412f50:	b.eq	412f60 <ascii_strlower_n@plt+0xeb58>  // b.none
  412f54:	add	x0, x24, x22
  412f58:	mov	w1, wzr
  412f5c:	bl	403c58 <memset@plt>
  412f60:	mov	x8, x22
  412f64:	str	x23, [x19, #16]
  412f68:	cmp	x24, #0x0
  412f6c:	csel	x9, x21, x24, eq  // eq = none
  412f70:	str	x28, [x19, #8]
  412f74:	strb	w25, [x9, x8]
  412f78:	ldp	x23, x8, [x19, #8]
  412f7c:	add	x28, x23, #0x1
  412f80:	cmp	x28, x8
  412f84:	b.ls	412fe4 <ascii_strlower_n@plt+0xebdc>  // b.plast
  412f88:	bl	404058 <page_size@plt>
  412f8c:	ldr	x9, [x19, #32]
  412f90:	add	x8, x0, x28, lsl #1
  412f94:	sub	x8, x8, #0x1
  412f98:	neg	x10, x0
  412f9c:	and	x8, x8, x10
  412fa0:	cmp	x9, #0x0
  412fa4:	mov	w10, #0xffff                	// #65535
  412fa8:	csel	x9, x10, x9, eq  // eq = none
  412fac:	cmp	x8, x9
  412fb0:	csel	x24, x9, x8, hi  // hi = pmore
  412fb4:	cmp	x28, x24
  412fb8:	b.hi	413158 <ascii_strlower_n@plt+0xed50>  // b.pmore
  412fbc:	ldr	x0, [x19, #40]
  412fc0:	cbz	x0, 412fec <ascii_strlower_n@plt+0xebe4>
  412fc4:	mov	x1, x24
  412fc8:	bl	4040b8 <realloc@plt>
  412fcc:	cbz	x0, 41316c <ascii_strlower_n@plt+0xed64>
  412fd0:	ldr	x23, [x19, #8]
  412fd4:	mov	x25, x0
  412fd8:	str	x0, [x19, #40]
  412fdc:	add	x28, x23, #0x1
  412fe0:	b	413020 <ascii_strlower_n@plt+0xec18>
  412fe4:	ldr	x25, [x19, #40]
  412fe8:	b	413024 <ascii_strlower_n@plt+0xec1c>
  412fec:	mov	x0, x24
  412ff0:	bl	4040c8 <malloc@plt>
  412ff4:	str	x0, [x19, #40]
  412ff8:	cbz	x0, 41316c <ascii_strlower_n@plt+0xed64>
  412ffc:	mov	x1, x21
  413000:	mov	x2, x23
  413004:	mov	x25, x0
  413008:	bl	403c68 <memcpy@plt>
  41300c:	subs	x2, x24, x23
  413010:	b.eq	413020 <ascii_strlower_n@plt+0xec18>  // b.none
  413014:	add	x0, x25, x23
  413018:	mov	w1, wzr
  41301c:	bl	403c58 <memset@plt>
  413020:	str	x24, [x19, #16]
  413024:	cmp	x25, #0x0
  413028:	add	w8, w26, #0x1
  41302c:	csel	x9, x21, x25, eq  // eq = none
  413030:	str	x28, [x19, #8]
  413034:	strb	w8, [x9, x23]
  413038:	ldp	x24, x9, [x19, #8]
  41303c:	and	x23, x8, #0xff
  413040:	add	x28, x24, x23
  413044:	cmp	x28, x9
  413048:	b.ls	412e2c <ascii_strlower_n@plt+0xea24>  // b.plast
  41304c:	bl	404058 <page_size@plt>
  413050:	ldr	x9, [x19, #32]
  413054:	add	x8, x0, x28, lsl #1
  413058:	sub	x8, x8, #0x1
  41305c:	neg	x10, x0
  413060:	and	x8, x8, x10
  413064:	cmp	x9, #0x0
  413068:	mov	w10, #0xffff                	// #65535
  41306c:	csel	x9, x10, x9, eq  // eq = none
  413070:	cmp	x8, x9
  413074:	csel	x25, x9, x8, hi  // hi = pmore
  413078:	cmp	x28, x25
  41307c:	b.hi	413158 <ascii_strlower_n@plt+0xed50>  // b.pmore
  413080:	ldr	x0, [x19, #40]
  413084:	cbz	x0, 4130a8 <ascii_strlower_n@plt+0xeca0>
  413088:	mov	x1, x25
  41308c:	bl	4040b8 <realloc@plt>
  413090:	cbz	x0, 41316c <ascii_strlower_n@plt+0xed64>
  413094:	ldr	x24, [x19, #8]
  413098:	mov	x26, x0
  41309c:	str	x0, [x19, #40]
  4130a0:	add	x28, x24, x23
  4130a4:	b	4130dc <ascii_strlower_n@plt+0xecd4>
  4130a8:	mov	x0, x25
  4130ac:	bl	4040c8 <malloc@plt>
  4130b0:	str	x0, [x19, #40]
  4130b4:	cbz	x0, 41316c <ascii_strlower_n@plt+0xed64>
  4130b8:	mov	x1, x21
  4130bc:	mov	x2, x24
  4130c0:	mov	x26, x0
  4130c4:	bl	403c68 <memcpy@plt>
  4130c8:	subs	x2, x25, x24
  4130cc:	b.eq	4130dc <ascii_strlower_n@plt+0xecd4>  // b.none
  4130d0:	add	x0, x26, x24
  4130d4:	mov	w1, wzr
  4130d8:	bl	403c58 <memset@plt>
  4130dc:	str	x25, [x19, #16]
  4130e0:	b	412e30 <ascii_strlower_n@plt+0xea28>
  4130e4:	tst	w22, #0xff
  4130e8:	b.eq	413424 <ascii_strlower_n@plt+0xf01c>  // b.none
  4130ec:	ldp	x20, x8, [x19, #8]
  4130f0:	add	x24, x20, #0x1
  4130f4:	cmp	x24, x8
  4130f8:	b.ls	413228 <ascii_strlower_n@plt+0xee20>  // b.plast
  4130fc:	bl	404058 <page_size@plt>
  413100:	ldr	x9, [x19, #32]
  413104:	add	x8, x0, x24, lsl #1
  413108:	neg	x10, x0
  41310c:	sub	x8, x8, #0x1
  413110:	and	x8, x8, x10
  413114:	cmp	x9, #0x0
  413118:	mov	w10, #0xffff                	// #65535
  41311c:	csel	x9, x10, x9, eq  // eq = none
  413120:	cmp	x8, x9
  413124:	csel	x21, x9, x8, hi  // hi = pmore
  413128:	cmp	x24, x21
  41312c:	b.hi	413388 <ascii_strlower_n@plt+0xef80>  // b.pmore
  413130:	ldr	x0, [x19, #40]
  413134:	cbz	x0, 413234 <ascii_strlower_n@plt+0xee2c>
  413138:	mov	x1, x21
  41313c:	bl	4040b8 <realloc@plt>
  413140:	cbz	x0, 41344c <ascii_strlower_n@plt+0xf044>
  413144:	ldr	x8, [x19, #8]
  413148:	mov	x22, x0
  41314c:	str	x0, [x19, #40]
  413150:	add	x24, x8, #0x1
  413154:	b	41326c <ascii_strlower_n@plt+0xee64>
  413158:	mov	w21, #0xffffffa6            	// #-90
  41315c:	ldr	x8, [x19, #8]
  413160:	cmp	x8, x22
  413164:	b.ls	4131cc <ascii_strlower_n@plt+0xedc4>  // b.plast
  413168:	b	41317c <ascii_strlower_n@plt+0xed74>
  41316c:	mov	w21, #0xfffffff4            	// #-12
  413170:	ldr	x8, [x19, #8]
  413174:	cmp	x8, x22
  413178:	b.ls	4131cc <ascii_strlower_n@plt+0xedc4>  // b.plast
  41317c:	mov	w8, #0xfffffffe            	// #-2
  413180:	stur	w8, [x29, #-16]
  413184:	stur	xzr, [x29, #-8]
  413188:	ldr	x0, [x19, #48]
  41318c:	sub	x1, x29, #0x10
  413190:	sub	x2, x29, #0x20
  413194:	sub	x3, x29, #0x18
  413198:	bl	404098 <internal_hashmap_iterate@plt>
  41319c:	tbz	w0, #0, 4131c4 <ascii_strlower_n@plt+0xedbc>
  4131a0:	ldur	x8, [x29, #-32]
  4131a4:	cmp	x8, x22
  4131a8:	b.cc	413188 <ascii_strlower_n@plt+0xed80>  // b.lo, b.ul, b.last
  4131ac:	ldr	x0, [x19, #48]
  4131b0:	ldur	x1, [x29, #-24]
  4131b4:	bl	4040a8 <internal_hashmap_remove@plt>
  4131b8:	ldur	x0, [x29, #-24]
  4131bc:	bl	4039d8 <free@plt>
  4131c0:	b	413188 <ascii_strlower_n@plt+0xed80>
  4131c4:	mov	x8, x22
  4131c8:	str	x22, [x19, #8]
  4131cc:	ldr	x22, [sp]
  4131d0:	cmp	x8, x22
  4131d4:	b.ls	413428 <ascii_strlower_n@plt+0xf020>  // b.plast
  4131d8:	mov	w8, #0xfffffffe            	// #-2
  4131dc:	stur	w8, [x29, #-16]
  4131e0:	stur	xzr, [x29, #-8]
  4131e4:	ldr	x0, [x19, #48]
  4131e8:	sub	x1, x29, #0x10
  4131ec:	sub	x2, x29, #0x20
  4131f0:	sub	x3, x29, #0x18
  4131f4:	bl	404098 <internal_hashmap_iterate@plt>
  4131f8:	tbz	w0, #0, 413220 <ascii_strlower_n@plt+0xee18>
  4131fc:	ldur	x8, [x29, #-32]
  413200:	cmp	x8, x22
  413204:	b.cc	4131e4 <ascii_strlower_n@plt+0xeddc>  // b.lo, b.ul, b.last
  413208:	ldr	x0, [x19, #48]
  41320c:	ldur	x1, [x29, #-24]
  413210:	bl	4040a8 <internal_hashmap_remove@plt>
  413214:	ldur	x0, [x29, #-24]
  413218:	bl	4039d8 <free@plt>
  41321c:	b	4131e4 <ascii_strlower_n@plt+0xeddc>
  413220:	str	x22, [x19, #8]
  413224:	b	413428 <ascii_strlower_n@plt+0xf020>
  413228:	ldr	x22, [x19, #40]
  41322c:	mov	x8, x20
  413230:	b	413270 <ascii_strlower_n@plt+0xee68>
  413234:	mov	x0, x21
  413238:	bl	4040c8 <malloc@plt>
  41323c:	str	x0, [x19, #40]
  413240:	cbz	x0, 41344c <ascii_strlower_n@plt+0xf044>
  413244:	add	x1, x19, #0xa8
  413248:	mov	x2, x20
  41324c:	mov	x22, x0
  413250:	bl	403c68 <memcpy@plt>
  413254:	subs	x2, x21, x20
  413258:	b.eq	413268 <ascii_strlower_n@plt+0xee60>  // b.none
  41325c:	add	x0, x22, x20
  413260:	mov	w1, wzr
  413264:	bl	403c58 <memset@plt>
  413268:	mov	x8, x20
  41326c:	str	x21, [x19, #16]
  413270:	add	x21, x19, #0xa8
  413274:	cmp	x22, #0x0
  413278:	csel	x9, x21, x22, eq  // eq = none
  41327c:	str	x24, [x19, #8]
  413280:	strb	w23, [x9, x8]
  413284:	ldp	x23, x8, [x19, #8]
  413288:	add	x25, x23, #0x1
  41328c:	cmp	x25, x8
  413290:	b.ls	4132f0 <ascii_strlower_n@plt+0xeee8>  // b.plast
  413294:	bl	404058 <page_size@plt>
  413298:	ldr	x9, [x19, #32]
  41329c:	add	x8, x0, x25, lsl #1
  4132a0:	neg	x10, x0
  4132a4:	sub	x8, x8, #0x1
  4132a8:	and	x8, x8, x10
  4132ac:	cmp	x9, #0x0
  4132b0:	mov	w10, #0xffff                	// #65535
  4132b4:	csel	x9, x10, x9, eq  // eq = none
  4132b8:	cmp	x8, x9
  4132bc:	csel	x22, x9, x8, hi  // hi = pmore
  4132c0:	cmp	x25, x22
  4132c4:	b.hi	413388 <ascii_strlower_n@plt+0xef80>  // b.pmore
  4132c8:	ldr	x0, [x19, #40]
  4132cc:	cbz	x0, 4132f8 <ascii_strlower_n@plt+0xeef0>
  4132d0:	mov	x1, x22
  4132d4:	bl	4040b8 <realloc@plt>
  4132d8:	cbz	x0, 41344c <ascii_strlower_n@plt+0xf044>
  4132dc:	ldr	x23, [x19, #8]
  4132e0:	mov	x24, x0
  4132e4:	str	x0, [x19, #40]
  4132e8:	add	x25, x23, #0x1
  4132ec:	b	41332c <ascii_strlower_n@plt+0xef24>
  4132f0:	ldr	x24, [x19, #40]
  4132f4:	b	413330 <ascii_strlower_n@plt+0xef28>
  4132f8:	mov	x0, x22
  4132fc:	bl	4040c8 <malloc@plt>
  413300:	str	x0, [x19, #40]
  413304:	cbz	x0, 41344c <ascii_strlower_n@plt+0xf044>
  413308:	mov	x1, x21
  41330c:	mov	x2, x23
  413310:	mov	x24, x0
  413314:	bl	403c68 <memcpy@plt>
  413318:	subs	x2, x22, x23
  41331c:	b.eq	41332c <ascii_strlower_n@plt+0xef24>  // b.none
  413320:	add	x0, x24, x23
  413324:	mov	w1, wzr
  413328:	bl	403c58 <memset@plt>
  41332c:	str	x22, [x19, #16]
  413330:	cmp	x24, #0x0
  413334:	add	w22, w26, #0x1
  413338:	csel	x8, x21, x24, eq  // eq = none
  41333c:	str	x25, [x19, #8]
  413340:	strb	w22, [x8, x23]
  413344:	ldp	x23, x8, [x19, #8]
  413348:	add	x26, x23, x22
  41334c:	cmp	x26, x8
  413350:	b.ls	4133a0 <ascii_strlower_n@plt+0xef98>  // b.plast
  413354:	bl	404058 <page_size@plt>
  413358:	ldr	x9, [x19, #32]
  41335c:	add	x8, x0, x26, lsl #1
  413360:	neg	x10, x0
  413364:	sub	x8, x8, #0x1
  413368:	and	x8, x8, x10
  41336c:	cmp	x9, #0x0
  413370:	mov	w10, #0xffff                	// #65535
  413374:	csel	x9, x10, x9, eq  // eq = none
  413378:	cmp	x8, x9
  41337c:	csel	x24, x9, x8, hi  // hi = pmore
  413380:	cmp	x26, x24
  413384:	b.ls	4133a8 <ascii_strlower_n@plt+0xefa0>  // b.plast
  413388:	mov	w21, #0xffffffa6            	// #-90
  41338c:	ldr	x8, [x19, #8]
  413390:	ldr	x22, [sp]
  413394:	cmp	x8, x20
  413398:	b.ls	4131d0 <ascii_strlower_n@plt+0xedc8>  // b.plast
  41339c:	b	413460 <ascii_strlower_n@plt+0xf058>
  4133a0:	ldr	x25, [x19, #40]
  4133a4:	b	413408 <ascii_strlower_n@plt+0xf000>
  4133a8:	ldr	x0, [x19, #40]
  4133ac:	cbz	x0, 4133d0 <ascii_strlower_n@plt+0xefc8>
  4133b0:	mov	x1, x24
  4133b4:	bl	4040b8 <realloc@plt>
  4133b8:	cbz	x0, 41344c <ascii_strlower_n@plt+0xf044>
  4133bc:	ldr	x23, [x19, #8]
  4133c0:	mov	x25, x0
  4133c4:	str	x0, [x19, #40]
  4133c8:	add	x26, x23, x22
  4133cc:	b	413404 <ascii_strlower_n@plt+0xeffc>
  4133d0:	mov	x0, x24
  4133d4:	bl	4040c8 <malloc@plt>
  4133d8:	str	x0, [x19, #40]
  4133dc:	cbz	x0, 41344c <ascii_strlower_n@plt+0xf044>
  4133e0:	mov	x1, x21
  4133e4:	mov	x2, x23
  4133e8:	mov	x25, x0
  4133ec:	bl	403c68 <memcpy@plt>
  4133f0:	subs	x2, x24, x23
  4133f4:	b.eq	413404 <ascii_strlower_n@plt+0xeffc>  // b.none
  4133f8:	add	x0, x25, x23
  4133fc:	mov	w1, wzr
  413400:	bl	403c58 <memset@plt>
  413404:	str	x24, [x19, #16]
  413408:	cmp	x25, #0x0
  41340c:	csel	x8, x21, x25, eq  // eq = none
  413410:	add	x0, x8, x23
  413414:	add	x1, sp, #0x10
  413418:	mov	x2, x22
  41341c:	str	x26, [x19, #8]
  413420:	bl	403c68 <memcpy@plt>
  413424:	mov	w21, wzr
  413428:	mov	w0, w21
  41342c:	ldp	x20, x19, [sp, #176]
  413430:	ldp	x22, x21, [sp, #160]
  413434:	ldp	x24, x23, [sp, #144]
  413438:	ldp	x26, x25, [sp, #128]
  41343c:	ldp	x28, x27, [sp, #112]
  413440:	ldp	x29, x30, [sp, #96]
  413444:	add	sp, sp, #0xc0
  413448:	ret
  41344c:	mov	w21, #0xfffffff4            	// #-12
  413450:	ldr	x8, [x19, #8]
  413454:	ldr	x22, [sp]
  413458:	cmp	x8, x20
  41345c:	b.ls	4131d0 <ascii_strlower_n@plt+0xedc8>  // b.plast
  413460:	mov	w8, #0xfffffffe            	// #-2
  413464:	stur	w8, [x29, #-16]
  413468:	stur	xzr, [x29, #-8]
  41346c:	ldr	x0, [x19, #48]
  413470:	sub	x1, x29, #0x10
  413474:	sub	x2, x29, #0x20
  413478:	sub	x3, x29, #0x18
  41347c:	bl	404098 <internal_hashmap_iterate@plt>
  413480:	tbz	w0, #0, 4134a8 <ascii_strlower_n@plt+0xf0a0>
  413484:	ldur	x8, [x29, #-32]
  413488:	cmp	x8, x20
  41348c:	b.cc	41346c <ascii_strlower_n@plt+0xf064>  // b.lo, b.ul, b.last
  413490:	ldr	x0, [x19, #48]
  413494:	ldur	x1, [x29, #-24]
  413498:	bl	4040a8 <internal_hashmap_remove@plt>
  41349c:	ldur	x0, [x29, #-24]
  4134a0:	bl	4039d8 <free@plt>
  4134a4:	b	41346c <ascii_strlower_n@plt+0xf064>
  4134a8:	str	x20, [x19, #8]
  4134ac:	mov	x8, x20
  4134b0:	b	4131d0 <ascii_strlower_n@plt+0xedc8>
  4134b4:	adrp	x1, 422000 <ascii_strlower_n@plt+0x1dbf8>
  4134b8:	adrp	x2, 421000 <ascii_strlower_n@plt+0x1cbf8>
  4134bc:	adrp	x4, 422000 <ascii_strlower_n@plt+0x1dbf8>
  4134c0:	add	x1, x1, #0x5cb
  4134c4:	add	x2, x2, #0xad6
  4134c8:	add	x4, x4, #0x58e
  4134cc:	mov	w3, #0x296                 	// #662
  4134d0:	mov	w0, wzr
  4134d4:	bl	403a98 <log_assert_failed_realm@plt>
  4134d8:	adrp	x1, 421000 <ascii_strlower_n@plt+0x1cbf8>
  4134dc:	adrp	x2, 421000 <ascii_strlower_n@plt+0x1cbf8>
  4134e0:	adrp	x4, 422000 <ascii_strlower_n@plt+0x1dbf8>
  4134e4:	add	x1, x1, #0xb90
  4134e8:	add	x2, x2, #0xad6
  4134ec:	add	x4, x4, #0x58e
  4134f0:	mov	w3, #0x291                 	// #657
  4134f4:	bl	403a98 <log_assert_failed_realm@plt>
  4134f8:	stp	x29, x30, [sp, #-48]!
  4134fc:	stp	x22, x21, [sp, #16]
  413500:	stp	x20, x19, [sp, #32]
  413504:	mov	x29, sp
  413508:	cbz	x0, 4135a0 <ascii_strlower_n@plt+0xf198>
  41350c:	mov	x19, x1
  413510:	cbz	x1, 41358c <ascii_strlower_n@plt+0xf184>
  413514:	ldr	x8, [x19, #8]
  413518:	mov	x20, x0
  41351c:	cbz	x8, 413530 <ascii_strlower_n@plt+0xf128>
  413520:	ldr	x1, [x19, #24]
  413524:	ldr	x8, [x19, #8]
  413528:	cbnz	x8, 41353c <ascii_strlower_n@plt+0xf134>
  41352c:	b	41358c <ascii_strlower_n@plt+0xf184>
  413530:	mov	x1, xzr
  413534:	ldr	x8, [x19, #8]
  413538:	cbz	x8, 41358c <ascii_strlower_n@plt+0xf184>
  41353c:	mov	x22, xzr
  413540:	add	x21, x19, #0x20
  413544:	b	413558 <ascii_strlower_n@plt+0xf150>
  413548:	ldr	x1, [x21, x22, lsl #3]
  41354c:	cmp	x8, x9
  413550:	mov	x22, x8
  413554:	b.cs	41358c <ascii_strlower_n@plt+0xf184>  // b.hs, b.nlast
  413558:	mov	x0, x20
  41355c:	mov	w2, wzr
  413560:	mov	x3, xzr
  413564:	bl	40ea28 <ascii_strlower_n@plt+0xa620>
  413568:	tbnz	w0, #31, 413590 <ascii_strlower_n@plt+0xf188>
  41356c:	ldr	x9, [x19, #8]
  413570:	add	x8, x22, #0x1
  413574:	cmp	x8, x9
  413578:	b.cc	413548 <ascii_strlower_n@plt+0xf140>  // b.lo, b.ul, b.last
  41357c:	mov	x1, xzr
  413580:	cmp	x8, x9
  413584:	mov	x22, x8
  413588:	b.cc	413558 <ascii_strlower_n@plt+0xf150>  // b.lo, b.ul, b.last
  41358c:	mov	w0, wzr
  413590:	ldp	x20, x19, [sp, #32]
  413594:	ldp	x22, x21, [sp, #16]
  413598:	ldp	x29, x30, [sp], #48
  41359c:	ret
  4135a0:	adrp	x1, 421000 <ascii_strlower_n@plt+0x1cbf8>
  4135a4:	adrp	x2, 421000 <ascii_strlower_n@plt+0x1cbf8>
  4135a8:	adrp	x4, 422000 <ascii_strlower_n@plt+0x1dbf8>
  4135ac:	add	x1, x1, #0xb90
  4135b0:	add	x2, x2, #0xad6
  4135b4:	add	x4, x4, #0x151
  4135b8:	mov	w3, #0x490                 	// #1168
  4135bc:	bl	403a98 <log_assert_failed_realm@plt>
  4135c0:	stp	x29, x30, [sp, #-48]!
  4135c4:	stp	x22, x21, [sp, #16]
  4135c8:	stp	x20, x19, [sp, #32]
  4135cc:	mov	x29, sp
  4135d0:	cbz	x0, 413674 <ascii_strlower_n@plt+0xf26c>
  4135d4:	mov	x19, x1
  4135d8:	cbz	x1, 413660 <ascii_strlower_n@plt+0xf258>
  4135dc:	ldr	x8, [x19, #8]
  4135e0:	mov	x20, x0
  4135e4:	cbz	x8, 4135fc <ascii_strlower_n@plt+0xf1f4>
  4135e8:	ldr	x1, [x19, #24]
  4135ec:	ldr	w2, [x19, #36]
  4135f0:	ldr	x8, [x19, #8]
  4135f4:	cbnz	x8, 41360c <ascii_strlower_n@plt+0xf204>
  4135f8:	b	413660 <ascii_strlower_n@plt+0xf258>
  4135fc:	mov	x1, xzr
  413600:	mov	w2, wzr
  413604:	ldr	x8, [x19, #8]
  413608:	cbz	x8, 413660 <ascii_strlower_n@plt+0xf258>
  41360c:	mov	x21, xzr
  413610:	add	x22, x19, #0x34
  413614:	b	413628 <ascii_strlower_n@plt+0xf220>
  413618:	ldur	x1, [x22, #-12]
  41361c:	ldr	w2, [x22], #16
  413620:	cmp	x21, x8
  413624:	b.cs	413660 <ascii_strlower_n@plt+0xf258>  // b.hs, b.nlast
  413628:	mov	x0, x20
  41362c:	mov	x3, xzr
  413630:	mov	x4, xzr
  413634:	bl	40f724 <ascii_strlower_n@plt+0xb31c>
  413638:	tbnz	w0, #31, 413664 <ascii_strlower_n@plt+0xf25c>
  41363c:	ldr	x8, [x19, #8]
  413640:	add	x21, x21, #0x1
  413644:	cmp	x21, x8
  413648:	b.cc	413618 <ascii_strlower_n@plt+0xf210>  // b.lo, b.ul, b.last
  41364c:	mov	x1, xzr
  413650:	mov	w2, wzr
  413654:	cmp	x21, x8
  413658:	add	x22, x22, #0x10
  41365c:	b.cc	413628 <ascii_strlower_n@plt+0xf220>  // b.lo, b.ul, b.last
  413660:	mov	w0, wzr
  413664:	ldp	x20, x19, [sp, #32]
  413668:	ldp	x22, x21, [sp, #16]
  41366c:	ldp	x29, x30, [sp], #48
  413670:	ret
  413674:	adrp	x1, 421000 <ascii_strlower_n@plt+0x1cbf8>
  413678:	adrp	x2, 421000 <ascii_strlower_n@plt+0x1cbf8>
  41367c:	adrp	x4, 422000 <ascii_strlower_n@plt+0x1dbf8>
  413680:	add	x1, x1, #0xb90
  413684:	add	x2, x2, #0xad6
  413688:	add	x4, x4, #0x18c
  41368c:	mov	w3, #0x4a0                 	// #1184
  413690:	bl	403a98 <log_assert_failed_realm@plt>
  413694:	stp	x29, x30, [sp, #-16]!
  413698:	mov	x29, sp
  41369c:	cbz	x0, 413704 <ascii_strlower_n@plt+0xf2fc>
  4136a0:	ldr	x8, [x0, #24]
  4136a4:	ldr	x10, [x0, #8]
  4136a8:	add	x9, x8, x1
  4136ac:	cmp	x9, x10
  4136b0:	b.ls	4136c4 <ascii_strlower_n@plt+0xf2bc>  // b.plast
  4136b4:	mov	w8, #0xffffffa6            	// #-90
  4136b8:	mov	w0, w8
  4136bc:	ldp	x29, x30, [sp], #16
  4136c0:	ret
  4136c4:	cbz	x2, 4136e0 <ascii_strlower_n@plt+0xf2d8>
  4136c8:	ldr	x10, [x0, #40]
  4136cc:	add	x11, x0, #0xa8
  4136d0:	cmp	x10, #0x0
  4136d4:	csel	x10, x11, x10, eq  // eq = none
  4136d8:	add	x10, x10, x8
  4136dc:	str	x10, [x2]
  4136e0:	cbz	x3, 4136f0 <ascii_strlower_n@plt+0xf2e8>
  4136e4:	str	x8, [x3]
  4136e8:	ldr	x8, [x0, #24]
  4136ec:	add	x9, x8, x1
  4136f0:	mov	w8, wzr
  4136f4:	str	x9, [x0, #24]
  4136f8:	mov	w0, w8
  4136fc:	ldp	x29, x30, [sp], #16
  413700:	ret
  413704:	adrp	x1, 421000 <ascii_strlower_n@plt+0x1cbf8>
  413708:	adrp	x2, 421000 <ascii_strlower_n@plt+0x1cbf8>
  41370c:	adrp	x4, 422000 <ascii_strlower_n@plt+0x1dbf8>
  413710:	add	x1, x1, #0xb90
  413714:	add	x2, x2, #0xad6
  413718:	add	x4, x4, #0x1c3
  41371c:	mov	w3, #0x4ac                 	// #1196
  413720:	bl	403a98 <log_assert_failed_realm@plt>
  413724:	stp	x29, x30, [sp, #-16]!
  413728:	mov	x29, sp
  41372c:	cbz	x0, 413750 <ascii_strlower_n@plt+0xf348>
  413730:	ldr	x8, [x0, #8]
  413734:	cmp	x8, x1
  413738:	b.cc	413770 <ascii_strlower_n@plt+0xf368>  // b.lo, b.ul, b.last
  41373c:	cmp	x1, #0xb
  413740:	b.ls	413794 <ascii_strlower_n@plt+0xf38c>  // b.plast
  413744:	str	x1, [x0, #24]
  413748:	ldp	x29, x30, [sp], #16
  41374c:	ret
  413750:	adrp	x1, 421000 <ascii_strlower_n@plt+0x1cbf8>
  413754:	adrp	x2, 421000 <ascii_strlower_n@plt+0x1cbf8>
  413758:	adrp	x4, 422000 <ascii_strlower_n@plt+0x1dbf8>
  41375c:	add	x1, x1, #0xb90
  413760:	add	x2, x2, #0xad6
  413764:	add	x4, x4, #0x205
  413768:	mov	w3, #0x4bc                 	// #1212
  41376c:	bl	403a98 <log_assert_failed_realm@plt>
  413770:	adrp	x1, 422000 <ascii_strlower_n@plt+0x1dbf8>
  413774:	adrp	x2, 421000 <ascii_strlower_n@plt+0x1cbf8>
  413778:	adrp	x4, 422000 <ascii_strlower_n@plt+0x1dbf8>
  41377c:	add	x1, x1, #0x231
  413780:	add	x2, x2, #0xad6
  413784:	add	x4, x4, #0x205
  413788:	mov	w3, #0x4bd                 	// #1213
  41378c:	mov	w0, wzr
  413790:	bl	403a98 <log_assert_failed_realm@plt>
  413794:	adrp	x1, 422000 <ascii_strlower_n@plt+0x1dbf8>
  413798:	adrp	x2, 421000 <ascii_strlower_n@plt+0x1cbf8>
  41379c:	adrp	x4, 422000 <ascii_strlower_n@plt+0x1dbf8>
  4137a0:	add	x1, x1, #0x240
  4137a4:	add	x2, x2, #0xad6
  4137a8:	add	x4, x4, #0x205
  4137ac:	mov	w3, #0x4be                 	// #1214
  4137b0:	mov	w0, wzr
  4137b4:	bl	403a98 <log_assert_failed_realm@plt>
  4137b8:	stp	x29, x30, [sp, #-16]!
  4137bc:	mov	x29, sp
  4137c0:	cbz	x0, 413828 <ascii_strlower_n@plt+0xf420>
  4137c4:	cbz	x1, 413848 <ascii_strlower_n@plt+0xf440>
  4137c8:	ldr	x10, [x0, #24]
  4137cc:	ldr	x8, [x0, #8]
  4137d0:	add	x9, x10, x2
  4137d4:	cmp	x9, x8
  4137d8:	b.ls	4137e8 <ascii_strlower_n@plt+0xf3e0>  // b.plast
  4137dc:	mov	w0, #0xffffffa6            	// #-90
  4137e0:	ldp	x29, x30, [sp], #16
  4137e4:	ret
  4137e8:	ldr	x8, [x0, #40]
  4137ec:	add	x11, x0, #0xa8
  4137f0:	cmp	x8, #0x0
  4137f4:	csel	x8, x11, x8, eq  // eq = none
  4137f8:	add	x8, x8, x10
  4137fc:	cbz	x3, 41380c <ascii_strlower_n@plt+0xf404>
  413800:	str	x10, [x3]
  413804:	ldr	x9, [x0, #24]
  413808:	add	x9, x9, x2
  41380c:	str	x9, [x0, #24]
  413810:	mov	x0, x1
  413814:	mov	x1, x8
  413818:	bl	403c68 <memcpy@plt>
  41381c:	mov	w0, wzr
  413820:	ldp	x29, x30, [sp], #16
  413824:	ret
  413828:	adrp	x1, 421000 <ascii_strlower_n@plt+0x1cbf8>
  41382c:	adrp	x2, 421000 <ascii_strlower_n@plt+0x1cbf8>
  413830:	adrp	x4, 422000 <ascii_strlower_n@plt+0x1dbf8>
  413834:	add	x1, x1, #0xb90
  413838:	add	x2, x2, #0xad6
  41383c:	add	x4, x4, #0x25e
  413840:	mov	w3, #0x4c7                 	// #1223
  413844:	bl	403a98 <log_assert_failed_realm@plt>
  413848:	adrp	x1, 421000 <ascii_strlower_n@plt+0x1cbf8>
  41384c:	adrp	x2, 421000 <ascii_strlower_n@plt+0x1cbf8>
  413850:	adrp	x4, 422000 <ascii_strlower_n@plt+0x1dbf8>
  413854:	add	x1, x1, #0xf17
  413858:	add	x2, x2, #0xad6
  41385c:	add	x4, x4, #0x25e
  413860:	mov	w3, #0x4c8                 	// #1224
  413864:	mov	w0, wzr
  413868:	bl	403a98 <log_assert_failed_realm@plt>
  41386c:	stp	x29, x30, [sp, #-16]!
  413870:	mov	x29, sp
  413874:	cbz	x0, 4138d8 <ascii_strlower_n@plt+0xf4d0>
  413878:	ldr	x9, [x0, #24]
  41387c:	ldr	x8, [x0, #8]
  413880:	add	x10, x9, #0x1
  413884:	cmp	x10, x8
  413888:	b.ls	41389c <ascii_strlower_n@plt+0xf494>  // b.plast
  41388c:	mov	w8, #0xffffffa6            	// #-90
  413890:	mov	w0, w8
  413894:	ldp	x29, x30, [sp], #16
  413898:	ret
  41389c:	ldr	x8, [x0, #40]
  4138a0:	add	x11, x0, #0xa8
  4138a4:	cmp	x8, #0x0
  4138a8:	csel	x11, x11, x8, eq  // eq = none
  4138ac:	cbz	x2, 4138bc <ascii_strlower_n@plt+0xf4b4>
  4138b0:	str	x9, [x2]
  4138b4:	ldr	x8, [x0, #24]
  4138b8:	add	x10, x8, #0x1
  4138bc:	str	x10, [x0, #24]
  4138c0:	ldrb	w9, [x11, x9]
  4138c4:	mov	w8, wzr
  4138c8:	strb	w9, [x1]
  4138cc:	mov	w0, w8
  4138d0:	ldp	x29, x30, [sp], #16
  4138d4:	ret
  4138d8:	adrp	x1, 421000 <ascii_strlower_n@plt+0x1cbf8>
  4138dc:	adrp	x2, 421000 <ascii_strlower_n@plt+0x1cbf8>
  4138e0:	adrp	x4, 422000 <ascii_strlower_n@plt+0x1dbf8>
  4138e4:	add	x1, x1, #0xb90
  4138e8:	add	x2, x2, #0xad6
  4138ec:	add	x4, x4, #0x29e
  4138f0:	mov	w3, #0x4fa                 	// #1274
  4138f4:	bl	403a98 <log_assert_failed_realm@plt>
  4138f8:	stp	x29, x30, [sp, #-16]!
  4138fc:	mov	x29, sp
  413900:	cbz	x0, 41396c <ascii_strlower_n@plt+0xf564>
  413904:	ldr	x9, [x0, #24]
  413908:	ldr	x8, [x0, #8]
  41390c:	add	x10, x9, #0x2
  413910:	cmp	x10, x8
  413914:	b.ls	413928 <ascii_strlower_n@plt+0xf520>  // b.plast
  413918:	mov	w8, #0xffffffa6            	// #-90
  41391c:	mov	w0, w8
  413920:	ldp	x29, x30, [sp], #16
  413924:	ret
  413928:	ldr	x8, [x0, #40]
  41392c:	add	x11, x0, #0xa8
  413930:	cmp	x8, #0x0
  413934:	csel	x11, x11, x8, eq  // eq = none
  413938:	cbz	x2, 413948 <ascii_strlower_n@plt+0xf540>
  41393c:	str	x9, [x2]
  413940:	ldr	x8, [x0, #24]
  413944:	add	x10, x8, #0x2
  413948:	str	x10, [x0, #24]
  41394c:	ldrh	w9, [x11, x9]
  413950:	mov	w8, wzr
  413954:	rev	w9, w9
  413958:	lsr	w9, w9, #16
  41395c:	strh	w9, [x1]
  413960:	mov	w0, w8
  413964:	ldp	x29, x30, [sp], #16
  413968:	ret
  41396c:	adrp	x1, 421000 <ascii_strlower_n@plt+0x1cbf8>
  413970:	adrp	x2, 421000 <ascii_strlower_n@plt+0x1cbf8>
  413974:	adrp	x4, 422000 <ascii_strlower_n@plt+0x1dbf8>
  413978:	add	x1, x1, #0xb90
  41397c:	add	x2, x2, #0xad6
  413980:	add	x4, x4, #0x2da
  413984:	mov	w3, #0x508                 	// #1288
  413988:	bl	403a98 <log_assert_failed_realm@plt>
  41398c:	stp	x29, x30, [sp, #-16]!
  413990:	mov	x29, sp
  413994:	cbz	x0, 4139fc <ascii_strlower_n@plt+0xf5f4>
  413998:	ldr	x9, [x0, #24]
  41399c:	ldr	x8, [x0, #8]
  4139a0:	add	x10, x9, #0x4
  4139a4:	cmp	x10, x8
  4139a8:	b.ls	4139bc <ascii_strlower_n@plt+0xf5b4>  // b.plast
  4139ac:	mov	w8, #0xffffffa6            	// #-90
  4139b0:	mov	w0, w8
  4139b4:	ldp	x29, x30, [sp], #16
  4139b8:	ret
  4139bc:	ldr	x8, [x0, #40]
  4139c0:	add	x11, x0, #0xa8
  4139c4:	cmp	x8, #0x0
  4139c8:	csel	x11, x11, x8, eq  // eq = none
  4139cc:	cbz	x2, 4139dc <ascii_strlower_n@plt+0xf5d4>
  4139d0:	str	x9, [x2]
  4139d4:	ldr	x8, [x0, #24]
  4139d8:	add	x10, x8, #0x4
  4139dc:	str	x10, [x0, #24]
  4139e0:	ldr	w9, [x11, x9]
  4139e4:	mov	w8, wzr
  4139e8:	rev	w9, w9
  4139ec:	str	w9, [x1]
  4139f0:	mov	w0, w8
  4139f4:	ldp	x29, x30, [sp], #16
  4139f8:	ret
  4139fc:	adrp	x1, 421000 <ascii_strlower_n@plt+0x1cbf8>
  413a00:	adrp	x2, 421000 <ascii_strlower_n@plt+0x1cbf8>
  413a04:	adrp	x4, 422000 <ascii_strlower_n@plt+0x1dbf8>
  413a08:	add	x1, x1, #0xb90
  413a0c:	add	x2, x2, #0xad6
  413a10:	add	x4, x4, #0x318
  413a14:	mov	w3, #0x517                 	// #1303
  413a18:	bl	403a98 <log_assert_failed_realm@plt>
  413a1c:	stp	x29, x30, [sp, #-80]!
  413a20:	str	x25, [sp, #16]
  413a24:	stp	x24, x23, [sp, #32]
  413a28:	stp	x22, x21, [sp, #48]
  413a2c:	stp	x20, x19, [sp, #64]
  413a30:	mov	x29, sp
  413a34:	cbz	x0, 413b6c <ascii_strlower_n@plt+0xf764>
  413a38:	mov	x25, x0
  413a3c:	ldr	x24, [x25, #24]!
  413a40:	mov	x19, x0
  413a44:	ldur	x9, [x25, #-16]
  413a48:	add	x8, x24, #0x1
  413a4c:	cmp	x8, x9
  413a50:	b.hi	413a78 <ascii_strlower_n@plt+0xf670>  // b.pmore
  413a54:	ldr	x10, [x19, #40]
  413a58:	add	x11, x19, #0xa8
  413a5c:	str	x8, [x19, #24]
  413a60:	cmp	x10, #0x0
  413a64:	csel	x10, x11, x10, eq  // eq = none
  413a68:	ldrb	w22, [x10, x24]
  413a6c:	add	x11, x8, x22
  413a70:	cmp	x11, x9
  413a74:	b.ls	413ab4 <ascii_strlower_n@plt+0xf6ac>  // b.plast
  413a78:	mov	w8, #0xffffffa6            	// #-90
  413a7c:	ldr	x9, [x19, #8]
  413a80:	cmp	x9, x24
  413a84:	b.cc	413ae8 <ascii_strlower_n@plt+0xf6e0>  // b.lo, b.ul, b.last
  413a88:	cmp	x24, #0xb
  413a8c:	mov	x20, x25
  413a90:	b.ls	413b8c <ascii_strlower_n@plt+0xf784>  // b.plast
  413a94:	mov	w0, w8
  413a98:	str	x24, [x20]
  413a9c:	ldp	x20, x19, [sp, #64]
  413aa0:	ldp	x22, x21, [sp, #48]
  413aa4:	ldp	x24, x23, [sp, #32]
  413aa8:	ldr	x25, [sp, #16]
  413aac:	ldp	x29, x30, [sp], #80
  413ab0:	ret
  413ab4:	add	x23, x10, x8
  413ab8:	mov	x20, x2
  413abc:	mov	x21, x1
  413ac0:	mov	x0, x23
  413ac4:	mov	w1, wzr
  413ac8:	mov	x2, x22
  413acc:	str	x11, [x25]
  413ad0:	bl	404148 <memchr@plt>
  413ad4:	cbz	x0, 413b0c <ascii_strlower_n@plt+0xf704>
  413ad8:	mov	w8, #0xffffffb6            	// #-74
  413adc:	ldr	x9, [x19, #8]
  413ae0:	cmp	x9, x24
  413ae4:	b.cs	413a88 <ascii_strlower_n@plt+0xf680>  // b.hs, b.nlast
  413ae8:	adrp	x1, 422000 <ascii_strlower_n@plt+0x1dbf8>
  413aec:	adrp	x2, 421000 <ascii_strlower_n@plt+0x1cbf8>
  413af0:	adrp	x4, 422000 <ascii_strlower_n@plt+0x1dbf8>
  413af4:	add	x1, x1, #0x231
  413af8:	add	x2, x2, #0xad6
  413afc:	add	x4, x4, #0x205
  413b00:	mov	w3, #0x4bd                 	// #1213
  413b04:	mov	w0, wzr
  413b08:	bl	403a98 <log_assert_failed_realm@plt>
  413b0c:	mov	x0, x23
  413b10:	mov	x1, x22
  413b14:	bl	403ac8 <strndup@plt>
  413b18:	cbz	x0, 413b3c <ascii_strlower_n@plt+0xf734>
  413b1c:	mov	x22, x0
  413b20:	bl	404158 <utf8_is_valid@plt>
  413b24:	cbz	x0, 413b50 <ascii_strlower_n@plt+0xf748>
  413b28:	mov	w8, wzr
  413b2c:	mov	w0, wzr
  413b30:	str	x22, [x21]
  413b34:	cbnz	x20, 413a94 <ascii_strlower_n@plt+0xf68c>
  413b38:	b	413a9c <ascii_strlower_n@plt+0xf694>
  413b3c:	mov	w8, #0xfffffff4            	// #-12
  413b40:	ldr	x9, [x19, #8]
  413b44:	cmp	x9, x24
  413b48:	b.cs	413a88 <ascii_strlower_n@plt+0xf680>  // b.hs, b.nlast
  413b4c:	b	413ae8 <ascii_strlower_n@plt+0xf6e0>
  413b50:	mov	x0, x22
  413b54:	bl	4039d8 <free@plt>
  413b58:	mov	w8, #0xffffffb6            	// #-74
  413b5c:	ldr	x9, [x19, #8]
  413b60:	cmp	x9, x24
  413b64:	b.cs	413a88 <ascii_strlower_n@plt+0xf680>  // b.hs, b.nlast
  413b68:	b	413ae8 <ascii_strlower_n@plt+0xf6e0>
  413b6c:	adrp	x1, 421000 <ascii_strlower_n@plt+0x1cbf8>
  413b70:	adrp	x2, 421000 <ascii_strlower_n@plt+0x1cbf8>
  413b74:	adrp	x4, 422000 <ascii_strlower_n@plt+0x1dbf8>
  413b78:	add	x1, x1, #0xb90
  413b7c:	add	x2, x2, #0xad6
  413b80:	add	x4, x4, #0x356
  413b84:	mov	w3, #0x529                 	// #1321
  413b88:	bl	403a98 <log_assert_failed_realm@plt>
  413b8c:	adrp	x1, 422000 <ascii_strlower_n@plt+0x1dbf8>
  413b90:	adrp	x2, 421000 <ascii_strlower_n@plt+0x1cbf8>
  413b94:	adrp	x4, 422000 <ascii_strlower_n@plt+0x1dbf8>
  413b98:	add	x1, x1, #0x240
  413b9c:	add	x2, x2, #0xad6
  413ba0:	add	x4, x4, #0x205
  413ba4:	mov	w3, #0x4be                 	// #1214
  413ba8:	mov	w0, wzr
  413bac:	bl	403a98 <log_assert_failed_realm@plt>
  413bb0:	stp	x29, x30, [sp, #-16]!
  413bb4:	mov	x29, sp
  413bb8:	cbz	x0, 413c48 <ascii_strlower_n@plt+0xf840>
  413bbc:	mov	x9, x0
  413bc0:	ldr	x8, [x9, #24]!
  413bc4:	ldur	x12, [x9, #-16]
  413bc8:	add	x10, x8, #0x1
  413bcc:	cmp	x10, x12
  413bd0:	b.hi	413bf8 <ascii_strlower_n@plt+0xf7f0>  // b.pmore
  413bd4:	ldr	x11, [x0, #40]
  413bd8:	add	x13, x0, #0xa8
  413bdc:	str	x10, [x0, #24]
  413be0:	cmp	x11, #0x0
  413be4:	csel	x13, x13, x11, eq  // eq = none
  413be8:	ldrb	w11, [x13, x8]
  413bec:	add	x14, x10, x11
  413bf0:	cmp	x14, x12
  413bf4:	b.ls	413c20 <ascii_strlower_n@plt+0xf818>  // b.plast
  413bf8:	cmp	x12, x8
  413bfc:	b.cc	413c68 <ascii_strlower_n@plt+0xf860>  // b.lo, b.ul, b.last
  413c00:	cmp	x8, #0xb
  413c04:	b.ls	413c8c <ascii_strlower_n@plt+0xf884>  // b.plast
  413c08:	mov	w10, #0xffffffa6            	// #-90
  413c0c:	mov	x3, x9
  413c10:	mov	w0, w10
  413c14:	str	x8, [x3]
  413c18:	ldp	x29, x30, [sp], #16
  413c1c:	ret
  413c20:	cbz	x1, 413c2c <ascii_strlower_n@plt+0xf824>
  413c24:	add	x10, x13, x10
  413c28:	str	x10, [x1]
  413c2c:	str	x14, [x9]
  413c30:	cbz	x2, 413c38 <ascii_strlower_n@plt+0xf830>
  413c34:	str	x11, [x2]
  413c38:	mov	w10, wzr
  413c3c:	mov	w0, wzr
  413c40:	cbnz	x3, 413c10 <ascii_strlower_n@plt+0xf808>
  413c44:	b	413c18 <ascii_strlower_n@plt+0xf810>
  413c48:	adrp	x1, 421000 <ascii_strlower_n@plt+0x1cbf8>
  413c4c:	adrp	x2, 421000 <ascii_strlower_n@plt+0x1cbf8>
  413c50:	adrp	x4, 422000 <ascii_strlower_n@plt+0x1dbf8>
  413c54:	add	x1, x1, #0xb90
  413c58:	add	x2, x2, #0xad6
  413c5c:	add	x4, x4, #0x391
  413c60:	mov	w3, #0x54e                 	// #1358
  413c64:	bl	403a98 <log_assert_failed_realm@plt>
  413c68:	adrp	x1, 422000 <ascii_strlower_n@plt+0x1dbf8>
  413c6c:	adrp	x2, 421000 <ascii_strlower_n@plt+0x1cbf8>
  413c70:	adrp	x4, 422000 <ascii_strlower_n@plt+0x1dbf8>
  413c74:	add	x1, x1, #0x231
  413c78:	add	x2, x2, #0xad6
  413c7c:	add	x4, x4, #0x205
  413c80:	mov	w3, #0x4bd                 	// #1213
  413c84:	mov	w0, wzr
  413c88:	bl	403a98 <log_assert_failed_realm@plt>
  413c8c:	adrp	x1, 422000 <ascii_strlower_n@plt+0x1dbf8>
  413c90:	adrp	x2, 421000 <ascii_strlower_n@plt+0x1cbf8>
  413c94:	adrp	x4, 422000 <ascii_strlower_n@plt+0x1dbf8>
  413c98:	add	x1, x1, #0x240
  413c9c:	add	x2, x2, #0xad6
  413ca0:	add	x4, x4, #0x205
  413ca4:	mov	w3, #0x4be                 	// #1214
  413ca8:	mov	w0, wzr
  413cac:	bl	403a98 <log_assert_failed_realm@plt>
  413cb0:	sub	sp, sp, #0x80
  413cb4:	stp	x29, x30, [sp, #32]
  413cb8:	add	x29, sp, #0x20
  413cbc:	stp	x28, x27, [sp, #48]
  413cc0:	stp	x26, x25, [sp, #64]
  413cc4:	stp	x24, x23, [sp, #80]
  413cc8:	stp	x22, x21, [sp, #96]
  413ccc:	stp	x20, x19, [sp, #112]
  413cd0:	stur	xzr, [x29, #-8]
  413cd4:	str	xzr, [sp, #16]
  413cd8:	cbz	x0, 413f9c <ascii_strlower_n@plt+0xfb94>
  413cdc:	cbz	x1, 413fbc <ascii_strlower_n@plt+0xfbb4>
  413ce0:	ldr	x28, [x0, #24]
  413ce4:	ldr	x8, [x0, #8]
  413ce8:	mov	x19, x0
  413cec:	add	x27, x28, #0x1
  413cf0:	cmp	x27, x8
  413cf4:	b.ls	413d44 <ascii_strlower_n@plt+0xf93c>  // b.plast
  413cf8:	mov	w22, #0xffffffa6            	// #-90
  413cfc:	ldur	x0, [x29, #-8]
  413d00:	bl	4039d8 <free@plt>
  413d04:	cbz	x19, 413d20 <ascii_strlower_n@plt+0xf918>
  413d08:	ldr	x8, [x19, #8]
  413d0c:	cmp	x8, x28
  413d10:	b.cc	413fe0 <ascii_strlower_n@plt+0xfbd8>  // b.lo, b.ul, b.last
  413d14:	cmp	x28, #0xb
  413d18:	b.ls	414004 <ascii_strlower_n@plt+0xfbfc>  // b.plast
  413d1c:	str	x28, [x19, #24]
  413d20:	mov	w0, w22
  413d24:	ldp	x20, x19, [sp, #112]
  413d28:	ldp	x22, x21, [sp, #96]
  413d2c:	ldp	x24, x23, [sp, #80]
  413d30:	ldp	x26, x25, [sp, #64]
  413d34:	ldp	x28, x27, [sp, #48]
  413d38:	ldp	x29, x30, [sp, #32]
  413d3c:	add	sp, sp, #0x80
  413d40:	ret
  413d44:	ldrb	w9, [x19, #160]
  413d48:	mov	x26, x3
  413d4c:	add	x25, x19, #0xa8
  413d50:	str	x1, [sp, #8]
  413d54:	tbnz	w9, #2, 413e70 <ascii_strlower_n@plt+0xfa68>
  413d58:	tbz	w2, #0, 413e70 <ascii_strlower_n@plt+0xfa68>
  413d5c:	str	x26, [sp]
  413d60:	mov	x26, xzr
  413d64:	mov	x24, xzr
  413d68:	mov	w20, #0x1                   	// #1
  413d6c:	mov	x9, x28
  413d70:	mov	x23, x28
  413d74:	b	413d9c <ascii_strlower_n@plt+0xf994>
  413d78:	cmp	x26, #0x0
  413d7c:	csel	x26, x9, x26, eq  // eq = none
  413d80:	str	x8, [x19, #24]
  413d84:	mov	x23, x8
  413d88:	ldr	x9, [x19, #24]
  413d8c:	ldr	x8, [x19, #8]
  413d90:	add	x27, x9, #0x1
  413d94:	cmp	x27, x8
  413d98:	b.hi	413cf8 <ascii_strlower_n@plt+0xf8f0>  // b.pmore
  413d9c:	ldr	x10, [x19, #40]
  413da0:	str	x27, [x19, #24]
  413da4:	cmp	x10, #0x0
  413da8:	csel	x21, x25, x10, eq  // eq = none
  413dac:	ldrb	w22, [x21, x9]
  413db0:	cbz	x22, 413f38 <ascii_strlower_n@plt+0xfb30>
  413db4:	cmp	w22, #0x40
  413db8:	b.cs	413e34 <ascii_strlower_n@plt+0xfa2c>  // b.hs, b.nlast
  413dbc:	add	x9, x27, x22
  413dc0:	cmp	x9, x8
  413dc4:	b.hi	413cf8 <ascii_strlower_n@plt+0xf8f0>  // b.pmore
  413dc8:	mvn	w8, w20
  413dcc:	and	x8, x8, #0x1
  413dd0:	add	x8, x24, x8
  413dd4:	add	x2, x8, #0xfd
  413dd8:	sub	x0, x29, #0x8
  413ddc:	add	x1, sp, #0x10
  413de0:	mov	w3, #0x1                   	// #1
  413de4:	str	x9, [x19, #24]
  413de8:	bl	404168 <greedy_realloc@plt>
  413dec:	cbz	x0, 413f88 <ascii_strlower_n@plt+0xfb80>
  413df0:	add	x0, x21, x27
  413df4:	tbnz	w20, #0, 413e0c <ascii_strlower_n@plt+0xfa04>
  413df8:	ldur	x8, [x29, #-8]
  413dfc:	add	x9, x24, #0x1
  413e00:	mov	w10, #0x2e                  	// #46
  413e04:	strb	w10, [x8, x24]
  413e08:	mov	x24, x9
  413e0c:	ldur	x8, [x29, #-8]
  413e10:	mov	w3, #0xfd                  	// #253
  413e14:	mov	x1, x22
  413e18:	add	x2, x8, x24
  413e1c:	bl	404178 <dns_label_escape@plt>
  413e20:	mov	w22, w0
  413e24:	tbnz	w0, #31, 413cfc <ascii_strlower_n@plt+0xf8f4>
  413e28:	mov	w20, wzr
  413e2c:	add	x24, x24, w22, uxtw
  413e30:	b	413d88 <ascii_strlower_n@plt+0xf980>
  413e34:	cmp	w22, #0xc0
  413e38:	b.cc	413f28 <ascii_strlower_n@plt+0xfb20>  // b.lo, b.ul, b.last
  413e3c:	add	x9, x27, #0x1
  413e40:	cmp	x9, x8
  413e44:	b.hi	413cf8 <ascii_strlower_n@plt+0xf8f0>  // b.pmore
  413e48:	str	x9, [x19, #24]
  413e4c:	ldrb	w8, [x21, x27]
  413e50:	and	x10, x22, #0x3f
  413e54:	mov	w22, #0xffffffb6            	// #-74
  413e58:	bfi	x8, x10, #8, #6
  413e5c:	cmp	x8, #0xc
  413e60:	b.cc	413cfc <ascii_strlower_n@plt+0xf8f4>  // b.lo, b.ul, b.last
  413e64:	cmp	x8, x23
  413e68:	b.cc	413d78 <ascii_strlower_n@plt+0xf970>  // b.lo, b.ul, b.last
  413e6c:	b	413cfc <ascii_strlower_n@plt+0xf8f4>
  413e70:	mov	x24, xzr
  413e74:	mov	w23, #0x1                   	// #1
  413e78:	mov	w20, #0x2e                  	// #46
  413e7c:	mov	x9, x28
  413e80:	ldr	x10, [x19, #40]
  413e84:	str	x27, [x19, #24]
  413e88:	cmp	x10, #0x0
  413e8c:	csel	x21, x25, x10, eq  // eq = none
  413e90:	ldrb	w22, [x21, x9]
  413e94:	cbz	x22, 413f30 <ascii_strlower_n@plt+0xfb28>
  413e98:	cmp	w22, #0x3f
  413e9c:	b.hi	413f28 <ascii_strlower_n@plt+0xfb20>  // b.pmore
  413ea0:	add	x9, x27, x22
  413ea4:	cmp	x9, x8
  413ea8:	b.hi	413cf8 <ascii_strlower_n@plt+0xf8f0>  // b.pmore
  413eac:	mvn	w8, w23
  413eb0:	and	x8, x8, #0x1
  413eb4:	add	x8, x24, x8
  413eb8:	add	x2, x8, #0xfd
  413ebc:	sub	x0, x29, #0x8
  413ec0:	add	x1, sp, #0x10
  413ec4:	mov	w3, #0x1                   	// #1
  413ec8:	str	x9, [x19, #24]
  413ecc:	bl	404168 <greedy_realloc@plt>
  413ed0:	cbz	x0, 413f88 <ascii_strlower_n@plt+0xfb80>
  413ed4:	add	x0, x21, x27
  413ed8:	tbnz	w23, #0, 413eec <ascii_strlower_n@plt+0xfae4>
  413edc:	ldur	x8, [x29, #-8]
  413ee0:	add	x9, x24, #0x1
  413ee4:	strb	w20, [x8, x24]
  413ee8:	mov	x24, x9
  413eec:	ldur	x8, [x29, #-8]
  413ef0:	mov	w3, #0xfd                  	// #253
  413ef4:	mov	x1, x22
  413ef8:	add	x2, x8, x24
  413efc:	bl	404178 <dns_label_escape@plt>
  413f00:	mov	w22, w0
  413f04:	tbnz	w0, #31, 413cfc <ascii_strlower_n@plt+0xf8f4>
  413f08:	ldr	x9, [x19, #24]
  413f0c:	ldr	x8, [x19, #8]
  413f10:	mov	w23, wzr
  413f14:	add	x24, x24, w22, uxtw
  413f18:	add	x27, x9, #0x1
  413f1c:	cmp	x27, x8
  413f20:	b.ls	413e80 <ascii_strlower_n@plt+0xfa78>  // b.plast
  413f24:	b	413cf8 <ascii_strlower_n@plt+0xf8f0>
  413f28:	mov	w22, #0xffffffb6            	// #-74
  413f2c:	b	413cfc <ascii_strlower_n@plt+0xf8f4>
  413f30:	str	x26, [sp]
  413f34:	mov	x26, xzr
  413f38:	add	x2, x24, #0x1
  413f3c:	sub	x0, x29, #0x8
  413f40:	add	x1, sp, #0x10
  413f44:	mov	w3, #0x1                   	// #1
  413f48:	bl	404168 <greedy_realloc@plt>
  413f4c:	cbz	x0, 413f88 <ascii_strlower_n@plt+0xfb80>
  413f50:	ldur	x8, [x29, #-8]
  413f54:	strb	wzr, [x8, x24]
  413f58:	cbz	x26, 413f60 <ascii_strlower_n@plt+0xfb58>
  413f5c:	str	x26, [x19, #24]
  413f60:	ldur	x8, [x29, #-8]
  413f64:	ldr	x9, [sp, #8]
  413f68:	stur	xzr, [x29, #-8]
  413f6c:	str	x8, [x9]
  413f70:	ldr	x8, [sp]
  413f74:	cbz	x8, 413f90 <ascii_strlower_n@plt+0xfb88>
  413f78:	mov	x19, xzr
  413f7c:	mov	w22, wzr
  413f80:	str	x28, [x8]
  413f84:	b	413cfc <ascii_strlower_n@plt+0xf8f4>
  413f88:	mov	w22, #0xfffffff4            	// #-12
  413f8c:	b	413cfc <ascii_strlower_n@plt+0xf8f4>
  413f90:	mov	x19, xzr
  413f94:	mov	w22, wzr
  413f98:	b	413cfc <ascii_strlower_n@plt+0xf8f4>
  413f9c:	adrp	x1, 421000 <ascii_strlower_n@plt+0x1cbf8>
  413fa0:	adrp	x2, 421000 <ascii_strlower_n@plt+0x1cbf8>
  413fa4:	adrp	x4, 422000 <ascii_strlower_n@plt+0x1dbf8>
  413fa8:	add	x1, x1, #0xb90
  413fac:	add	x2, x2, #0xad6
  413fb0:	add	x4, x4, #0x3e0
  413fb4:	mov	w3, #0x56f                 	// #1391
  413fb8:	bl	403a98 <log_assert_failed_realm@plt>
  413fbc:	adrp	x1, 422000 <ascii_strlower_n@plt+0x1dbf8>
  413fc0:	adrp	x2, 421000 <ascii_strlower_n@plt+0x1cbf8>
  413fc4:	adrp	x4, 422000 <ascii_strlower_n@plt+0x1dbf8>
  413fc8:	add	x1, x1, #0x420
  413fcc:	add	x2, x2, #0xad6
  413fd0:	add	x4, x4, #0x3e0
  413fd4:	mov	w3, #0x570                 	// #1392
  413fd8:	mov	w0, wzr
  413fdc:	bl	403a98 <log_assert_failed_realm@plt>
  413fe0:	adrp	x1, 422000 <ascii_strlower_n@plt+0x1dbf8>
  413fe4:	adrp	x2, 421000 <ascii_strlower_n@plt+0x1cbf8>
  413fe8:	adrp	x4, 422000 <ascii_strlower_n@plt+0x1dbf8>
  413fec:	add	x1, x1, #0x231
  413ff0:	add	x2, x2, #0xad6
  413ff4:	add	x4, x4, #0x205
  413ff8:	mov	w3, #0x4bd                 	// #1213
  413ffc:	mov	w0, wzr
  414000:	bl	403a98 <log_assert_failed_realm@plt>
  414004:	adrp	x1, 422000 <ascii_strlower_n@plt+0x1dbf8>
  414008:	adrp	x2, 421000 <ascii_strlower_n@plt+0x1cbf8>
  41400c:	adrp	x4, 422000 <ascii_strlower_n@plt+0x1dbf8>
  414010:	add	x1, x1, #0x240
  414014:	add	x2, x2, #0xad6
  414018:	add	x4, x4, #0x205
  41401c:	mov	w3, #0x4be                 	// #1214
  414020:	mov	w0, wzr
  414024:	bl	403a98 <log_assert_failed_realm@plt>
  414028:	sub	sp, sp, #0x50
  41402c:	stp	x29, x30, [sp, #16]
  414030:	stp	x24, x23, [sp, #32]
  414034:	stp	x22, x21, [sp, #48]
  414038:	stp	x20, x19, [sp, #64]
  41403c:	add	x29, sp, #0x10
  414040:	str	xzr, [sp, #8]
  414044:	cbz	x0, 4141a4 <ascii_strlower_n@plt+0xfd9c>
  414048:	mov	x22, x1
  41404c:	cbz	x1, 4141c4 <ascii_strlower_n@plt+0xfdbc>
  414050:	ldr	x24, [x0, #24]
  414054:	mov	x20, x3
  414058:	mov	x21, x2
  41405c:	add	x1, sp, #0x8
  414060:	mov	w2, #0x1                   	// #1
  414064:	mov	x3, xzr
  414068:	mov	x19, x0
  41406c:	bl	413cb0 <ascii_strlower_n@plt+0xf8a8>
  414070:	tbnz	w0, #31, 4140bc <ascii_strlower_n@plt+0xfcb4>
  414074:	ldr	x9, [x19, #24]
  414078:	ldr	x11, [x19, #8]
  41407c:	add	x8, x9, #0x2
  414080:	cmp	x8, x11
  414084:	b.hi	4140a8 <ascii_strlower_n@plt+0xfca0>  // b.pmore
  414088:	ldr	x10, [x19, #40]
  41408c:	add	x13, x19, #0xa8
  414090:	add	x12, x9, #0x4
  414094:	str	x8, [x19, #24]
  414098:	cmp	x10, #0x0
  41409c:	csel	x10, x13, x10, eq  // eq = none
  4140a0:	cmp	x12, x11
  4140a4:	b.ls	4140d0 <ascii_strlower_n@plt+0xfcc8>  // b.plast
  4140a8:	mov	w23, #0xffffffa6            	// #-90
  4140ac:	ldr	x0, [sp, #8]
  4140b0:	bl	4039d8 <free@plt>
  4140b4:	cbnz	x19, 41415c <ascii_strlower_n@plt+0xfd54>
  4140b8:	b	414174 <ascii_strlower_n@plt+0xfd6c>
  4140bc:	mov	w23, w0
  4140c0:	ldr	x0, [sp, #8]
  4140c4:	bl	4039d8 <free@plt>
  4140c8:	cbnz	x19, 41415c <ascii_strlower_n@plt+0xfd54>
  4140cc:	b	414174 <ascii_strlower_n@plt+0xfd6c>
  4140d0:	ldrh	w9, [x10, x9]
  4140d4:	str	x12, [x19, #24]
  4140d8:	ldr	w11, [x19, #4]
  4140dc:	ldrh	w8, [x10, x8]
  4140e0:	mov	w12, #0x2900                	// #10496
  4140e4:	ldr	x2, [sp, #8]
  4140e8:	cmp	w11, #0x1
  4140ec:	rev	w8, w8
  4140f0:	cset	w10, ne  // ne = any
  4140f4:	cmp	w9, w12
  4140f8:	asr	w11, w8, #16
  4140fc:	cset	w12, eq  // eq = none
  414100:	cmp	w11, #0x0
  414104:	orr	w10, w12, w10
  414108:	cset	w11, ge  // ge = tcont
  41410c:	orr	w23, w11, w10
  414110:	rev16	w1, w9
  414114:	lsr	w9, w8, #16
  414118:	ubfx	w8, w8, #16, #15
  41411c:	cmp	w23, #0x0
  414120:	csel	w0, w9, w8, ne  // ne = any
  414124:	bl	416084 <ascii_strlower_n@plt+0x11c7c>
  414128:	cbz	x0, 414190 <ascii_strlower_n@plt+0xfd88>
  41412c:	str	xzr, [sp, #8]
  414130:	str	x0, [x22]
  414134:	cbz	x21, 414140 <ascii_strlower_n@plt+0xfd38>
  414138:	eor	w8, w23, #0x1
  41413c:	strb	w8, [x21]
  414140:	mov	x19, xzr
  414144:	mov	w23, wzr
  414148:	cbz	x20, 414150 <ascii_strlower_n@plt+0xfd48>
  41414c:	str	x24, [x20]
  414150:	ldr	x0, [sp, #8]
  414154:	bl	4039d8 <free@plt>
  414158:	cbz	x19, 414174 <ascii_strlower_n@plt+0xfd6c>
  41415c:	ldr	x8, [x19, #8]
  414160:	cmp	x8, x24
  414164:	b.cc	4141e8 <ascii_strlower_n@plt+0xfde0>  // b.lo, b.ul, b.last
  414168:	cmp	x24, #0xb
  41416c:	b.ls	41420c <ascii_strlower_n@plt+0xfe04>  // b.plast
  414170:	str	x24, [x19, #24]
  414174:	mov	w0, w23
  414178:	ldp	x20, x19, [sp, #64]
  41417c:	ldp	x22, x21, [sp, #48]
  414180:	ldp	x24, x23, [sp, #32]
  414184:	ldp	x29, x30, [sp, #16]
  414188:	add	sp, sp, #0x50
  41418c:	ret
  414190:	mov	w23, #0xfffffff4            	// #-12
  414194:	ldr	x0, [sp, #8]
  414198:	bl	4039d8 <free@plt>
  41419c:	cbnz	x19, 41415c <ascii_strlower_n@plt+0xfd54>
  4141a0:	b	414174 <ascii_strlower_n@plt+0xfd6c>
  4141a4:	adrp	x1, 421000 <ascii_strlower_n@plt+0x1cbf8>
  4141a8:	adrp	x2, 421000 <ascii_strlower_n@plt+0x1cbf8>
  4141ac:	adrp	x4, 422000 <ascii_strlower_n@plt+0x1dbf8>
  4141b0:	add	x1, x1, #0xb90
  4141b4:	add	x2, x2, #0xad6
  4141b8:	add	x4, x4, #0x425
  4141bc:	mov	w3, #0x626                 	// #1574
  4141c0:	bl	403a98 <log_assert_failed_realm@plt>
  4141c4:	adrp	x1, 420000 <ascii_strlower_n@plt+0x1bbf8>
  4141c8:	adrp	x2, 421000 <ascii_strlower_n@plt+0x1cbf8>
  4141cc:	adrp	x4, 422000 <ascii_strlower_n@plt+0x1dbf8>
  4141d0:	add	x1, x1, #0x41e
  4141d4:	add	x2, x2, #0xad6
  4141d8:	add	x4, x4, #0x425
  4141dc:	mov	w3, #0x627                 	// #1575
  4141e0:	mov	w0, wzr
  4141e4:	bl	403a98 <log_assert_failed_realm@plt>
  4141e8:	adrp	x1, 422000 <ascii_strlower_n@plt+0x1dbf8>
  4141ec:	adrp	x2, 421000 <ascii_strlower_n@plt+0x1cbf8>
  4141f0:	adrp	x4, 422000 <ascii_strlower_n@plt+0x1dbf8>
  4141f4:	add	x1, x1, #0x231
  4141f8:	add	x2, x2, #0xad6
  4141fc:	add	x4, x4, #0x205
  414200:	mov	w3, #0x4bd                 	// #1213
  414204:	mov	w0, wzr
  414208:	bl	403a98 <log_assert_failed_realm@plt>
  41420c:	adrp	x1, 422000 <ascii_strlower_n@plt+0x1dbf8>
  414210:	adrp	x2, 421000 <ascii_strlower_n@plt+0x1cbf8>
  414214:	adrp	x4, 422000 <ascii_strlower_n@plt+0x1dbf8>
  414218:	add	x1, x1, #0x240
  41421c:	add	x2, x2, #0xad6
  414220:	add	x4, x4, #0x205
  414224:	mov	w3, #0x4be                 	// #1214
  414228:	mov	w0, wzr
  41422c:	bl	403a98 <log_assert_failed_realm@plt>
  414230:	sub	sp, sp, #0xc0
  414234:	stp	x29, x30, [sp, #96]
  414238:	add	x29, sp, #0x60
  41423c:	stp	x28, x27, [sp, #112]
  414240:	stp	x26, x25, [sp, #128]
  414244:	stp	x24, x23, [sp, #144]
  414248:	stp	x22, x21, [sp, #160]
  41424c:	stp	x20, x19, [sp, #176]
  414250:	stur	xzr, [x29, #-8]
  414254:	cbz	x0, 414fa8 <ascii_strlower_n@plt+0x10ba0>
  414258:	mov	x23, x1
  41425c:	cbz	x1, 414fc8 <ascii_strlower_n@plt+0x10bc0>
  414260:	mov	x27, x0
  414264:	ldr	x26, [x27, #24]!
  414268:	mov	x21, x3
  41426c:	mov	x22, x2
  414270:	sub	x1, x29, #0x8
  414274:	sub	x2, x29, #0xc
  414278:	mov	x3, xzr
  41427c:	mov	x19, x0
  414280:	bl	414028 <ascii_strlower_n@plt+0xfc20>
  414284:	tbnz	w0, #31, 41431c <ascii_strlower_n@plt+0xff14>
  414288:	ldur	x8, [x29, #-8]
  41428c:	ldrh	w0, [x8, #4]
  414290:	bl	41d74c <ascii_strlower_n@plt+0x19344>
  414294:	tbz	w0, #0, 414310 <ascii_strlower_n@plt+0xff08>
  414298:	ldur	x8, [x29, #-8]
  41429c:	ldrh	w0, [x8, #6]
  4142a0:	bl	41d724 <ascii_strlower_n@plt+0x1931c>
  4142a4:	tbz	w0, #0, 414310 <ascii_strlower_n@plt+0xff08>
  4142a8:	ldur	x0, [x29, #-8]
  4142ac:	bl	416f74 <ascii_strlower_n@plt+0x12b6c>
  4142b0:	mov	x20, x0
  4142b4:	cbz	x0, 4147b0 <ascii_strlower_n@plt+0x103a8>
  4142b8:	mov	x25, x19
  4142bc:	ldr	x28, [x25, #8]!
  4142c0:	ldr	x8, [x25, #16]
  4142c4:	add	x9, x8, #0x4
  4142c8:	cmp	x9, x28
  4142cc:	b.hi	414308 <ascii_strlower_n@plt+0xff00>  // b.pmore
  4142d0:	mov	x17, x19
  4142d4:	ldr	x10, [x17, #40]!
  4142d8:	add	x16, x17, #0x80
  4142dc:	cmp	x10, #0x0
  4142e0:	csel	x10, x16, x10, eq  // eq = none
  4142e4:	stur	x9, [x17, #-16]
  4142e8:	ldr	w8, [x10, x8]
  4142ec:	rev	w8, w8
  4142f0:	bic	w8, w8, w8, asr #31
  4142f4:	str	w8, [x20, #24]
  4142f8:	ldur	x9, [x17, #-16]
  4142fc:	add	x24, x9, #0x2
  414300:	cmp	x24, x28
  414304:	b.ls	414378 <ascii_strlower_n@plt+0xff70>  // b.plast
  414308:	mov	w24, #0xffffffa6            	// #-90
  41430c:	b	414324 <ascii_strlower_n@plt+0xff1c>
  414310:	mov	x20, xzr
  414314:	mov	w24, #0xffffffb6            	// #-74
  414318:	b	414324 <ascii_strlower_n@plt+0xff1c>
  41431c:	mov	w24, w0
  414320:	mov	x20, xzr
  414324:	ldr	x8, [x19, #8]
  414328:	cmp	x8, x26
  41432c:	b.cc	414fec <ascii_strlower_n@plt+0x10be4>  // b.lo, b.ul, b.last
  414330:	cmp	x26, #0xb
  414334:	b.ls	415010 <ascii_strlower_n@plt+0x10c08>  // b.plast
  414338:	str	x26, [x27]
  41433c:	ldur	x0, [x29, #-8]
  414340:	cbz	x0, 414348 <ascii_strlower_n@plt+0xff40>
  414344:	bl	4162cc <ascii_strlower_n@plt+0x11ec4>
  414348:	cbz	x20, 414354 <ascii_strlower_n@plt+0xff4c>
  41434c:	mov	x0, x20
  414350:	bl	417208 <ascii_strlower_n@plt+0x12e00>
  414354:	mov	w0, w24
  414358:	ldp	x20, x19, [sp, #176]
  41435c:	ldp	x22, x21, [sp, #160]
  414360:	ldp	x24, x23, [sp, #144]
  414364:	ldp	x26, x25, [sp, #128]
  414368:	ldp	x28, x27, [sp, #112]
  41436c:	ldp	x29, x30, [sp, #96]
  414370:	add	sp, sp, #0xc0
  414374:	ret
  414378:	ldr	x8, [x17]
  41437c:	str	x24, [x27]
  414380:	cmp	x8, #0x0
  414384:	csel	x8, x16, x8, eq  // eq = none
  414388:	ldrh	w10, [x8, x9]
  41438c:	rev16	w18, w10
  414390:	add	x15, x24, x18
  414394:	cmp	x15, x28
  414398:	b.hi	414314 <ascii_strlower_n@plt+0xff0c>  // b.pmore
  41439c:	ldr	x11, [x20, #8]
  4143a0:	mov	x0, x15
  4143a4:	ldrh	w12, [x11, #6]
  4143a8:	sub	w11, w12, #0x1
  4143ac:	cmp	w11, #0x62
  4143b0:	b.hi	414530 <ascii_strlower_n@plt+0x10128>  // b.pmore
  4143b4:	adrp	x12, 425000 <ascii_strlower_n@plt+0x20bf8>
  4143b8:	add	x12, x12, #0x96
  4143bc:	adr	x13, 4143cc <ascii_strlower_n@plt+0xffc4>
  4143c0:	ldrh	w14, [x12, x11, lsl #1]
  4143c4:	add	x13, x13, x14, lsl #2
  4143c8:	br	x13
  4143cc:	stur	x15, [x29, #-24]
  4143d0:	add	x1, x20, #0x50
  4143d4:	mov	w2, #0x1                   	// #1
  4143d8:	mov	x0, x19
  4143dc:	mov	x3, xzr
  4143e0:	bl	413cb0 <ascii_strlower_n@plt+0xf8a8>
  4143e4:	mov	w24, w0
  4143e8:	ldur	x15, [x29, #-24]
  4143ec:	tbnz	w24, #31, 414324 <ascii_strlower_n@plt+0xff1c>
  4143f0:	ldr	x8, [x27]
  4143f4:	cmp	x8, x15
  4143f8:	b.ne	414314 <ascii_strlower_n@plt+0xff0c>  // b.any
  4143fc:	str	x20, [x23]
  414400:	cbz	x22, 41440c <ascii_strlower_n@plt+0x10004>
  414404:	ldurb	w8, [x29, #-12]
  414408:	strb	w8, [x22]
  41440c:	cbz	x21, 414414 <ascii_strlower_n@plt+0x1000c>
  414410:	str	x26, [x21]
  414414:	mov	w24, wzr
  414418:	mov	x20, xzr
  41441c:	ldur	x0, [x29, #-8]
  414420:	cbnz	x0, 414344 <ascii_strlower_n@plt+0xff3c>
  414424:	b	414348 <ascii_strlower_n@plt+0xff40>
  414428:	cbz	w10, 414d20 <ascii_strlower_n@plt+0x10918>
  41442c:	cmp	x24, x15
  414430:	b.cs	4143f0 <ascii_strlower_n@plt+0xffe8>  // b.hs, b.nlast
  414434:	mov	x25, xzr
  414438:	add	x8, x20, #0x50
  41443c:	str	x8, [sp, #8]
  414440:	stur	x15, [x29, #-24]
  414444:	stp	x17, x16, [sp, #16]
  414448:	b	414460 <ascii_strlower_n@plt+0x10058>
  41444c:	ldr	x9, [sp, #32]
  414450:	str	x10, [x25, #16]
  414454:	cmp	x9, x15
  414458:	str	x25, [x8]
  41445c:	b.cs	4143f0 <ascii_strlower_n@plt+0xffe8>  // b.hs, b.nlast
  414460:	cmp	x24, x28
  414464:	b.cs	414d3c <ascii_strlower_n@plt+0x10934>  // b.hs, b.nlast
  414468:	ldr	x8, [x17]
  41446c:	add	x10, x24, #0x1
  414470:	str	x10, [x27]
  414474:	stur	x10, [x29, #-40]
  414478:	cmp	x8, #0x0
  41447c:	csel	x8, x16, x8, eq  // eq = none
  414480:	ldrb	w9, [x8, x24]
  414484:	str	x8, [sp, #48]
  414488:	add	x8, x10, x9
  41448c:	cmp	x8, x28
  414490:	b.hi	414d3c <ascii_strlower_n@plt+0x10934>  // b.pmore
  414494:	add	x1, x9, #0x19
  414498:	mov	w0, #0x1                   	// #1
  41449c:	stp	x8, x25, [sp, #32]
  4144a0:	mov	x24, x8
  4144a4:	str	x8, [x27]
  4144a8:	stur	x9, [x29, #-32]
  4144ac:	bl	404068 <calloc@plt>
  4144b0:	cbz	x0, 4147b0 <ascii_strlower_n@plt+0x103a8>
  4144b4:	ldp	x8, x2, [x29, #-40]
  4144b8:	ldr	x9, [sp, #48]
  4144bc:	mov	x25, x0
  4144c0:	add	x0, x0, #0x18
  4144c4:	add	x1, x9, x8
  4144c8:	bl	403c68 <memcpy@plt>
  4144cc:	ldur	x8, [x29, #-32]
  4144d0:	ldr	x10, [sp, #40]
  4144d4:	str	x8, [x25]
  4144d8:	cbz	x10, 4144fc <ascii_strlower_n@plt+0x100f4>
  4144dc:	mov	x8, x10
  4144e0:	ldr	x9, [x8, #8]!
  4144e4:	ldur	x15, [x29, #-24]
  4144e8:	ldp	x17, x16, [sp, #16]
  4144ec:	str	x9, [x25, #8]
  4144f0:	cbz	x9, 41444c <ascii_strlower_n@plt+0x10044>
  4144f4:	str	x25, [x9, #16]
  4144f8:	b	41444c <ascii_strlower_n@plt+0x10044>
  4144fc:	ldp	x8, x17, [sp, #8]
  414500:	ldur	x15, [x29, #-24]
  414504:	ldp	x16, x9, [sp, #24]
  414508:	ldr	x8, [x8]
  41450c:	str	x8, [x25, #8]
  414510:	cbz	x8, 414518 <ascii_strlower_n@plt+0x10110>
  414514:	str	x25, [x8, #16]
  414518:	ldr	x8, [sp, #8]
  41451c:	str	xzr, [x25, #16]
  414520:	cmp	x9, x15
  414524:	str	x25, [x8]
  414528:	b.cc	414460 <ascii_strlower_n@plt+0x10058>  // b.lo, b.ul, b.last
  41452c:	b	4143f0 <ascii_strlower_n@plt+0xffe8>
  414530:	cmp	w12, #0x101
  414534:	b.ne	414770 <ascii_strlower_n@plt+0x10368>  // b.any
  414538:	add	x9, x9, #0x3
  41453c:	cmp	x9, x28
  414540:	b.hi	414308 <ascii_strlower_n@plt+0xff00>  // b.pmore
  414544:	stp	x17, x16, [sp, #16]
  414548:	str	x9, [x19, #24]
  41454c:	ldrb	w8, [x8, x24]
  414550:	stur	x0, [x29, #-32]
  414554:	add	x1, x20, #0x58
  414558:	mov	x0, x19
  41455c:	mov	x2, xzr
  414560:	mov	x28, x15
  414564:	strb	w8, [x20, #80]
  414568:	bl	413a1c <ascii_strlower_n@plt+0xf614>
  41456c:	tbnz	w0, #31, 414d34 <ascii_strlower_n@plt+0x1092c>
  414570:	ldr	x8, [x27]
  414574:	subs	x24, x28, x8
  414578:	b.cc	414314 <ascii_strlower_n@plt+0xff0c>  // b.lo, b.ul, b.last
  41457c:	ldr	x9, [x25]
  414580:	mov	x10, x28
  414584:	cmp	x28, x9
  414588:	b.hi	414308 <ascii_strlower_n@plt+0xff00>  // b.pmore
  41458c:	ldr	x9, [sp, #16]
  414590:	ldur	x10, [x29, #-32]
  414594:	ldr	x9, [x9]
  414598:	str	x10, [x27]
  41459c:	cbz	x24, 414ed0 <ascii_strlower_n@plt+0x10ac8>
  4145a0:	ldr	x10, [sp, #24]
  4145a4:	cmp	x9, #0x0
  4145a8:	mov	x1, x24
  4145ac:	csel	x9, x10, x9, eq  // eq = none
  4145b0:	add	x0, x9, x8
  4145b4:	bl	404188 <memdup@plt>
  4145b8:	cbnz	x0, 414ed4 <ascii_strlower_n@plt+0x10acc>
  4145bc:	b	4147b0 <ascii_strlower_n@plt+0x103a8>
  4145c0:	add	x9, x9, #0x6
  4145c4:	cmp	x9, x28
  4145c8:	b.hi	414308 <ascii_strlower_n@plt+0xff00>  // b.pmore
  4145cc:	str	x9, [x27]
  4145d0:	ldr	w8, [x8, x24]
  4145d4:	str	w8, [x20, #80]
  4145d8:	b	4143f0 <ascii_strlower_n@plt+0xffe8>
  4145dc:	add	x1, x20, #0x50
  4145e0:	mov	w2, #0x1                   	// #1
  4145e4:	mov	x0, x19
  4145e8:	mov	x3, xzr
  4145ec:	mov	x28, x17
  4145f0:	str	x16, [sp, #24]
  4145f4:	stur	x15, [x29, #-24]
  4145f8:	bl	413cb0 <ascii_strlower_n@plt+0xf8a8>
  4145fc:	tbnz	w0, #31, 414d34 <ascii_strlower_n@plt+0x1092c>
  414600:	add	x1, x20, #0x58
  414604:	mov	w2, #0x1                   	// #1
  414608:	mov	x0, x19
  41460c:	mov	x3, xzr
  414610:	bl	413cb0 <ascii_strlower_n@plt+0xf8a8>
  414614:	tbnz	w0, #31, 414d34 <ascii_strlower_n@plt+0x1092c>
  414618:	ldr	x8, [x27]
  41461c:	ldr	x9, [x25]
  414620:	add	x11, x8, #0x4
  414624:	cmp	x11, x9
  414628:	b.hi	414308 <ascii_strlower_n@plt+0xff00>  // b.pmore
  41462c:	ldr	x10, [x28]
  414630:	ldr	x12, [sp, #24]
  414634:	str	x11, [x27]
  414638:	cmp	x10, #0x0
  41463c:	csel	x10, x12, x10, eq  // eq = none
  414640:	ldr	w13, [x10, x8]
  414644:	add	x12, x8, #0x8
  414648:	cmp	x12, x9
  41464c:	rev	w13, w13
  414650:	str	w13, [x20, #96]
  414654:	b.hi	414308 <ascii_strlower_n@plt+0xff00>  // b.pmore
  414658:	str	x12, [x27]
  41465c:	ldr	w13, [x10, x11]
  414660:	add	x11, x8, #0xc
  414664:	cmp	x11, x9
  414668:	rev	w13, w13
  41466c:	str	w13, [x20, #100]
  414670:	b.hi	414308 <ascii_strlower_n@plt+0xff00>  // b.pmore
  414674:	str	x11, [x27]
  414678:	ldr	w13, [x10, x12]
  41467c:	add	x12, x8, #0x10
  414680:	cmp	x12, x9
  414684:	rev	w13, w13
  414688:	str	w13, [x20, #104]
  41468c:	b.hi	414308 <ascii_strlower_n@plt+0xff00>  // b.pmore
  414690:	str	x12, [x27]
  414694:	ldr	w11, [x10, x11]
  414698:	add	x8, x8, #0x14
  41469c:	cmp	x8, x9
  4146a0:	rev	w11, w11
  4146a4:	str	w11, [x20, #108]
  4146a8:	b.hi	414308 <ascii_strlower_n@plt+0xff00>  // b.pmore
  4146ac:	str	x8, [x27]
  4146b0:	ldr	w8, [x10, x12]
  4146b4:	ldur	x15, [x29, #-24]
  4146b8:	rev	w8, w8
  4146bc:	str	w8, [x20, #112]
  4146c0:	b	4143f0 <ascii_strlower_n@plt+0xffe8>
  4146c4:	add	x1, x20, #0x50
  4146c8:	mov	x0, x19
  4146cc:	mov	x2, xzr
  4146d0:	stur	x15, [x29, #-24]
  4146d4:	bl	413a1c <ascii_strlower_n@plt+0xf614>
  4146d8:	tbnz	w0, #31, 414d34 <ascii_strlower_n@plt+0x1092c>
  4146dc:	add	x1, x20, #0x58
  4146e0:	mov	x0, x19
  4146e4:	mov	x2, xzr
  4146e8:	bl	413a1c <ascii_strlower_n@plt+0xf614>
  4146ec:	b	4143e4 <ascii_strlower_n@plt+0xffdc>
  4146f0:	add	x9, x9, #0x4
  4146f4:	cmp	x9, x28
  4146f8:	b.hi	414308 <ascii_strlower_n@plt+0xff00>  // b.pmore
  4146fc:	str	x9, [x19, #24]
  414700:	ldrh	w8, [x8, x24]
  414704:	stur	x15, [x29, #-24]
  414708:	rev	w8, w8
  41470c:	lsr	w8, w8, #16
  414710:	strh	w8, [x20, #80]
  414714:	add	x1, x20, #0x58
  414718:	b	4143d4 <ascii_strlower_n@plt+0xffcc>
  41471c:	add	x9, x9, #0x12
  414720:	cmp	x9, x28
  414724:	b.hi	414308 <ascii_strlower_n@plt+0xff00>  // b.pmore
  414728:	str	x9, [x27]
  41472c:	ldr	q0, [x8, x24]
  414730:	str	q0, [x20, #80]
  414734:	b	4143f0 <ascii_strlower_n@plt+0xffe8>
  414738:	add	x9, x9, #0x3
  41473c:	cmp	x9, x28
  414740:	b.hi	414308 <ascii_strlower_n@plt+0xff00>  // b.pmore
  414744:	str	x9, [x27]
  414748:	ldrb	w8, [x8, x24]
  41474c:	cbz	w8, 414d64 <ascii_strlower_n@plt+0x1095c>
  414750:	cmp	x24, #0xb
  414754:	b.ls	415010 <ascii_strlower_n@plt+0x10c08>  // b.plast
  414758:	str	x24, [x27]
  41475c:	ldrb	w8, [x20, #48]
  414760:	orr	w8, w8, #0x1
  414764:	strb	w8, [x20, #48]
  414768:	ldr	x24, [x27]
  41476c:	add	x0, x24, x18
  414770:	ldr	x8, [x25]
  414774:	cmp	x0, x8
  414778:	b.hi	414308 <ascii_strlower_n@plt+0xff00>  // b.pmore
  41477c:	ldr	x8, [x17]
  414780:	str	x0, [x27]
  414784:	cbz	w10, 414d58 <ascii_strlower_n@plt+0x10950>
  414788:	cmp	x8, #0x0
  41478c:	csel	x8, x16, x8, eq  // eq = none
  414790:	add	x0, x8, x24
  414794:	mov	x1, x18
  414798:	mov	x25, x18
  41479c:	mov	x24, x15
  4147a0:	bl	404188 <memdup@plt>
  4147a4:	mov	x18, x25
  4147a8:	mov	x15, x24
  4147ac:	cbnz	x0, 414d5c <ascii_strlower_n@plt+0x10954>
  4147b0:	mov	w24, #0xfffffff4            	// #-12
  4147b4:	b	414324 <ascii_strlower_n@plt+0xff1c>
  4147b8:	add	x10, x9, #0x4
  4147bc:	cmp	x10, x28
  4147c0:	b.hi	414308 <ascii_strlower_n@plt+0xff00>  // b.pmore
  4147c4:	str	x10, [x27]
  4147c8:	ldrh	w12, [x8, x24]
  4147cc:	add	x11, x9, #0x6
  4147d0:	cmp	x11, x28
  4147d4:	rev	w12, w12
  4147d8:	lsr	w12, w12, #16
  4147dc:	strh	w12, [x20, #80]
  4147e0:	b.hi	414308 <ascii_strlower_n@plt+0xff00>  // b.pmore
  4147e4:	str	x11, [x27]
  4147e8:	ldrh	w10, [x8, x10]
  4147ec:	add	x9, x9, #0x8
  4147f0:	cmp	x9, x28
  4147f4:	stur	x15, [x29, #-24]
  4147f8:	rev	w10, w10
  4147fc:	lsr	w10, w10, #16
  414800:	strh	w10, [x20, #82]
  414804:	b.hi	414308 <ascii_strlower_n@plt+0xff00>  // b.pmore
  414808:	str	x9, [x19, #24]
  41480c:	ldrh	w8, [x8, x11]
  414810:	rev	w8, w8
  414814:	lsr	w8, w8, #16
  414818:	strh	w8, [x20, #84]
  41481c:	b	414714 <ascii_strlower_n@plt+0x1030c>
  414820:	add	x10, x9, #0x4
  414824:	cmp	x10, x28
  414828:	b.hi	414308 <ascii_strlower_n@plt+0xff00>  // b.pmore
  41482c:	str	x10, [x27]
  414830:	ldrh	w11, [x8, x24]
  414834:	add	x9, x9, #0x5
  414838:	cmp	x9, x28
  41483c:	rev	w11, w11
  414840:	lsr	w11, w11, #16
  414844:	strh	w11, [x20, #80]
  414848:	b.hi	414308 <ascii_strlower_n@plt+0xff00>  // b.pmore
  41484c:	str	x9, [x27]
  414850:	ldrb	w8, [x8, x10]
  414854:	strb	w8, [x20, #82]
  414858:	ldr	x8, [x27]
  41485c:	ldr	x10, [x25]
  414860:	add	x9, x8, #0x1
  414864:	cmp	x9, x10
  414868:	b.hi	414308 <ascii_strlower_n@plt+0xff00>  // b.pmore
  41486c:	ldr	x10, [x17]
  414870:	str	x9, [x27]
  414874:	cmp	x10, #0x0
  414878:	csel	x9, x16, x10, eq  // eq = none
  41487c:	ldrb	w8, [x9, x8]
  414880:	and	w9, w18, #0xffff
  414884:	cmp	w9, #0x4
  414888:	strb	w8, [x20, #83]
  41488c:	b.cc	414314 <ascii_strlower_n@plt+0xff0c>  // b.lo, b.ul, b.last
  414890:	ldr	x8, [x27]
  414894:	ldr	x10, [x25]
  414898:	sub	x24, x18, #0x4
  41489c:	mov	x13, x18
  4148a0:	add	x9, x8, x24
  4148a4:	cmp	x9, x10
  4148a8:	b.hi	414308 <ascii_strlower_n@plt+0xff00>  // b.pmore
  4148ac:	ldr	x10, [x17]
  4148b0:	mov	x12, x17
  4148b4:	str	x9, [x27]
  4148b8:	cbz	x24, 414ee0 <ascii_strlower_n@plt+0x10ad8>
  4148bc:	cmp	x10, #0x0
  4148c0:	csel	x9, x16, x10, eq  // eq = none
  4148c4:	add	x0, x9, x8
  4148c8:	mov	x1, x24
  4148cc:	mov	x28, x15
  4148d0:	bl	404188 <memdup@plt>
  4148d4:	cbz	x0, 4147b0 <ascii_strlower_n@plt+0x103a8>
  4148d8:	stp	x0, x24, [x20, #88]
  4148dc:	mov	x15, x28
  4148e0:	b	4143f0 <ascii_strlower_n@plt+0xffe8>
  4148e4:	add	x9, x9, #0x3
  4148e8:	cmp	x9, x28
  4148ec:	b.hi	414308 <ascii_strlower_n@plt+0xff00>  // b.pmore
  4148f0:	str	x9, [x27]
  4148f4:	ldrb	w8, [x8, x24]
  4148f8:	strb	w8, [x20, #80]
  4148fc:	ldr	x8, [x27]
  414900:	ldr	x10, [x25]
  414904:	add	x9, x8, #0x1
  414908:	cmp	x9, x10
  41490c:	b.hi	414308 <ascii_strlower_n@plt+0xff00>  // b.pmore
  414910:	ldr	x10, [x17]
  414914:	str	x9, [x27]
  414918:	cmp	x10, #0x0
  41491c:	csel	x9, x16, x10, eq  // eq = none
  414920:	ldrb	w8, [x9, x8]
  414924:	and	w9, w18, #0xffff
  414928:	cmp	w9, #0x2
  41492c:	strb	w8, [x20, #81]
  414930:	b.cc	414314 <ascii_strlower_n@plt+0xff0c>  // b.lo, b.ul, b.last
  414934:	ldr	x8, [x27]
  414938:	ldr	x10, [x25]
  41493c:	sub	x25, x18, #0x2
  414940:	stur	x15, [x29, #-24]
  414944:	add	x9, x8, x25
  414948:	cmp	x9, x10
  41494c:	b.hi	414b7c <ascii_strlower_n@plt+0x10774>  // b.pmore
  414950:	ldr	x10, [x17]
  414954:	str	x9, [x27]
  414958:	cbnz	x25, 414cf8 <ascii_strlower_n@plt+0x108f0>
  41495c:	mov	x0, xzr
  414960:	b	414d10 <ascii_strlower_n@plt+0x10908>
  414964:	add	x10, x9, #0x4
  414968:	cmp	x10, x28
  41496c:	b.hi	414308 <ascii_strlower_n@plt+0xff00>  // b.pmore
  414970:	str	x10, [x27]
  414974:	ldrh	w11, [x8, x24]
  414978:	add	x9, x9, #0x5
  41497c:	cmp	x9, x28
  414980:	rev	w11, w11
  414984:	lsr	w11, w11, #16
  414988:	strh	w11, [x20, #80]
  41498c:	b.hi	414308 <ascii_strlower_n@plt+0xff00>  // b.pmore
  414990:	str	x9, [x27]
  414994:	ldrb	w8, [x8, x10]
  414998:	strb	w8, [x20, #82]
  41499c:	ldr	x8, [x27]
  4149a0:	ldr	x10, [x25]
  4149a4:	add	x9, x8, #0x1
  4149a8:	cmp	x9, x10
  4149ac:	b.hi	414308 <ascii_strlower_n@plt+0xff00>  // b.pmore
  4149b0:	stp	x0, x15, [x29, #-32]
  4149b4:	ldr	x10, [x17]
  4149b8:	str	x9, [x27]
  4149bc:	str	x16, [sp, #24]
  4149c0:	cmp	x10, #0x0
  4149c4:	csel	x9, x16, x10, eq  // eq = none
  4149c8:	ldrb	w8, [x9, x8]
  4149cc:	strb	w8, [x20, #83]
  4149d0:	ldr	x8, [x27]
  4149d4:	ldr	x9, [x25]
  4149d8:	add	x11, x8, #0x4
  4149dc:	cmp	x11, x9
  4149e0:	b.hi	414308 <ascii_strlower_n@plt+0xff00>  // b.pmore
  4149e4:	ldr	x10, [x17]
  4149e8:	ldr	x12, [sp, #24]
  4149ec:	str	x11, [x27]
  4149f0:	mov	x28, x17
  4149f4:	cmp	x10, #0x0
  4149f8:	csel	x10, x12, x10, eq  // eq = none
  4149fc:	ldr	w13, [x10, x8]
  414a00:	add	x12, x8, #0x8
  414a04:	cmp	x12, x9
  414a08:	rev	w13, w13
  414a0c:	str	w13, [x20, #84]
  414a10:	b.hi	414308 <ascii_strlower_n@plt+0xff00>  // b.pmore
  414a14:	str	x12, [x27]
  414a18:	ldr	w13, [x10, x11]
  414a1c:	add	x11, x8, #0xc
  414a20:	cmp	x11, x9
  414a24:	rev	w13, w13
  414a28:	str	w13, [x20, #88]
  414a2c:	b.hi	414308 <ascii_strlower_n@plt+0xff00>  // b.pmore
  414a30:	str	x11, [x27]
  414a34:	ldr	w12, [x10, x12]
  414a38:	add	x8, x8, #0xe
  414a3c:	cmp	x8, x9
  414a40:	rev	w12, w12
  414a44:	str	w12, [x20, #92]
  414a48:	b.hi	414308 <ascii_strlower_n@plt+0xff00>  // b.pmore
  414a4c:	str	x8, [x19, #24]
  414a50:	ldrh	w8, [x10, x11]
  414a54:	add	x1, x20, #0x68
  414a58:	mov	x0, x19
  414a5c:	mov	w2, wzr
  414a60:	rev	w8, w8
  414a64:	lsr	w8, w8, #16
  414a68:	mov	x3, xzr
  414a6c:	strh	w8, [x20, #96]
  414a70:	bl	413cb0 <ascii_strlower_n@plt+0xf8a8>
  414a74:	tbnz	w0, #31, 414d34 <ascii_strlower_n@plt+0x1092c>
  414a78:	ldr	x8, [x27]
  414a7c:	ldur	x9, [x29, #-24]
  414a80:	subs	x9, x9, x8
  414a84:	stur	x9, [x29, #-40]
  414a88:	b.cc	414314 <ascii_strlower_n@plt+0xff0c>  // b.lo, b.ul, b.last
  414a8c:	ldr	x9, [x25]
  414a90:	ldur	x10, [x29, #-24]
  414a94:	cmp	x10, x9
  414a98:	b.ls	414f54 <ascii_strlower_n@plt+0x10b4c>  // b.plast
  414a9c:	mov	w24, #0xffffffa6            	// #-90
  414aa0:	ldr	x8, [x20, #120]
  414aa4:	stur	x8, [x29, #-40]
  414aa8:	b	414f9c <ascii_strlower_n@plt+0x10b94>
  414aac:	ldr	w8, [x19, #4]
  414ab0:	add	x1, x20, #0x50
  414ab4:	mov	x0, x19
  414ab8:	mov	x3, xzr
  414abc:	cmp	w8, #0x1
  414ac0:	cset	w2, eq  // eq = none
  414ac4:	stur	x15, [x29, #-24]
  414ac8:	bl	413cb0 <ascii_strlower_n@plt+0xf8a8>
  414acc:	tbnz	w0, #31, 414d34 <ascii_strlower_n@plt+0x1092c>
  414ad0:	ldr	x8, [x19, #24]
  414ad4:	add	x1, x20, #0x58
  414ad8:	ldur	x9, [x29, #-24]
  414adc:	mov	x0, x19
  414ae0:	sub	x2, x9, x8
  414ae4:	bl	415034 <ascii_strlower_n@plt+0x10c2c>
  414ae8:	b	4143e4 <ascii_strlower_n@plt+0xffdc>
  414aec:	add	x10, x9, #0x4
  414af0:	cmp	x10, x28
  414af4:	b.hi	414308 <ascii_strlower_n@plt+0xff00>  // b.pmore
  414af8:	str	x10, [x27]
  414afc:	ldrh	w11, [x8, x24]
  414b00:	add	x9, x9, #0x5
  414b04:	cmp	x9, x28
  414b08:	rev	w11, w11
  414b0c:	lsr	w11, w11, #16
  414b10:	strh	w11, [x20, #80]
  414b14:	b.hi	414308 <ascii_strlower_n@plt+0xff00>  // b.pmore
  414b18:	str	x9, [x27]
  414b1c:	ldrb	w8, [x8, x10]
  414b20:	strb	w8, [x20, #82]
  414b24:	ldr	x8, [x27]
  414b28:	ldr	x10, [x25]
  414b2c:	add	x9, x8, #0x1
  414b30:	cmp	x9, x10
  414b34:	b.hi	414308 <ascii_strlower_n@plt+0xff00>  // b.pmore
  414b38:	ldr	x10, [x17]
  414b3c:	str	x9, [x27]
  414b40:	stur	x15, [x29, #-24]
  414b44:	cmp	x10, #0x0
  414b48:	csel	x9, x16, x10, eq  // eq = none
  414b4c:	ldrb	w8, [x9, x8]
  414b50:	and	w9, w18, #0xffff
  414b54:	cmp	w9, #0x4
  414b58:	strb	w8, [x20, #83]
  414b5c:	b.cc	414314 <ascii_strlower_n@plt+0xff0c>  // b.lo, b.ul, b.last
  414b60:	ldr	x8, [x27]
  414b64:	ldr	x10, [x25]
  414b68:	sub	x25, x18, #0x4
  414b6c:	mov	x13, x18
  414b70:	add	x9, x8, x25
  414b74:	cmp	x9, x10
  414b78:	b.ls	414ce8 <ascii_strlower_n@plt+0x108e0>  // b.plast
  414b7c:	mov	w24, #0xffffffa6            	// #-90
  414b80:	ldr	x25, [x20, #96]
  414b84:	cbnz	x25, 4143e8 <ascii_strlower_n@plt+0xffe0>
  414b88:	b	414314 <ascii_strlower_n@plt+0xff0c>
  414b8c:	add	x9, x9, #0x3
  414b90:	cmp	x9, x28
  414b94:	b.hi	414308 <ascii_strlower_n@plt+0xff00>  // b.pmore
  414b98:	str	x9, [x27]
  414b9c:	ldrb	w8, [x8, x24]
  414ba0:	strb	w8, [x20, #80]
  414ba4:	ldr	x8, [x27]
  414ba8:	ldr	x10, [x25]
  414bac:	add	x9, x8, #0x1
  414bb0:	cmp	x9, x10
  414bb4:	b.hi	414308 <ascii_strlower_n@plt+0xff00>  // b.pmore
  414bb8:	ldr	x10, [x17]
  414bbc:	str	x9, [x27]
  414bc0:	cmp	x10, #0x0
  414bc4:	csel	x9, x16, x10, eq  // eq = none
  414bc8:	ldrb	w8, [x9, x8]
  414bcc:	strb	w8, [x20, #81]
  414bd0:	ldr	x11, [x27]
  414bd4:	ldr	x8, [x25]
  414bd8:	add	x10, x11, #0x2
  414bdc:	cmp	x10, x8
  414be0:	b.hi	414308 <ascii_strlower_n@plt+0xff00>  // b.pmore
  414be4:	ldr	x9, [x17]
  414be8:	str	x10, [x27]
  414bec:	stur	x15, [x29, #-24]
  414bf0:	str	x17, [sp, #16]
  414bf4:	cmp	x9, #0x0
  414bf8:	csel	x9, x16, x9, eq  // eq = none
  414bfc:	ldrh	w12, [x9, x11]
  414c00:	add	x11, x11, #0x3
  414c04:	cmp	x11, x8
  414c08:	rev	w12, w12
  414c0c:	lsr	w12, w12, #16
  414c10:	strh	w12, [x20, #82]
  414c14:	b.hi	414308 <ascii_strlower_n@plt+0xff00>  // b.pmore
  414c18:	str	x11, [x27]
  414c1c:	ldrb	w24, [x9, x10]
  414c20:	add	x10, x11, x24
  414c24:	cmp	x10, x8
  414c28:	b.hi	414308 <ascii_strlower_n@plt+0xff00>  // b.pmore
  414c2c:	mov	x28, x16
  414c30:	str	x10, [x27]
  414c34:	cbz	w24, 414eec <ascii_strlower_n@plt+0x10ae4>
  414c38:	add	x0, x9, x11
  414c3c:	mov	x1, x24
  414c40:	bl	404188 <memdup@plt>
  414c44:	cbnz	x0, 414ef0 <ascii_strlower_n@plt+0x10ae8>
  414c48:	b	4147b0 <ascii_strlower_n@plt+0x103a8>
  414c4c:	add	x9, x9, #0x3
  414c50:	cmp	x9, x28
  414c54:	b.hi	414308 <ascii_strlower_n@plt+0xff00>  // b.pmore
  414c58:	str	x9, [x27]
  414c5c:	ldrb	w8, [x8, x24]
  414c60:	strb	w8, [x20, #80]
  414c64:	ldr	x8, [x27]
  414c68:	ldr	x10, [x25]
  414c6c:	add	x9, x8, #0x1
  414c70:	cmp	x9, x10
  414c74:	b.hi	414308 <ascii_strlower_n@plt+0xff00>  // b.pmore
  414c78:	ldr	x10, [x17]
  414c7c:	str	x9, [x27]
  414c80:	cmp	x10, #0x0
  414c84:	csel	x9, x16, x10, eq  // eq = none
  414c88:	ldrb	w8, [x9, x8]
  414c8c:	strb	w8, [x20, #81]
  414c90:	ldr	x8, [x27]
  414c94:	ldr	x10, [x25]
  414c98:	add	x9, x8, #0x1
  414c9c:	cmp	x9, x10
  414ca0:	b.hi	414308 <ascii_strlower_n@plt+0xff00>  // b.pmore
  414ca4:	ldr	x10, [x17]
  414ca8:	str	x9, [x27]
  414cac:	stur	x15, [x29, #-24]
  414cb0:	cmp	x10, #0x0
  414cb4:	csel	x9, x16, x10, eq  // eq = none
  414cb8:	ldrb	w8, [x9, x8]
  414cbc:	and	w9, w18, #0xffff
  414cc0:	cmp	w9, #0x3
  414cc4:	strb	w8, [x20, #82]
  414cc8:	b.cc	414314 <ascii_strlower_n@plt+0xff0c>  // b.lo, b.ul, b.last
  414ccc:	ldr	x8, [x27]
  414cd0:	ldr	x10, [x25]
  414cd4:	sub	x25, x18, #0x3
  414cd8:	mov	x13, x18
  414cdc:	add	x9, x8, x25
  414ce0:	cmp	x9, x10
  414ce4:	b.hi	414b7c <ascii_strlower_n@plt+0x10774>  // b.pmore
  414ce8:	ldr	x10, [x17]
  414cec:	mov	x12, x17
  414cf0:	str	x9, [x27]
  414cf4:	cbz	x25, 41495c <ascii_strlower_n@plt+0x10554>
  414cf8:	cmp	x10, #0x0
  414cfc:	csel	x9, x16, x10, eq  // eq = none
  414d00:	add	x0, x9, x8
  414d04:	mov	x1, x25
  414d08:	bl	404188 <memdup@plt>
  414d0c:	cbz	x0, 414ec0 <ascii_strlower_n@plt+0x10ab8>
  414d10:	mov	w24, wzr
  414d14:	stp	x0, x25, [x20, #88]
  414d18:	cbnz	x25, 4143e8 <ascii_strlower_n@plt+0xffe0>
  414d1c:	b	414314 <ascii_strlower_n@plt+0xff0c>
  414d20:	add	x0, x20, #0x50
  414d24:	mov	x24, x15
  414d28:	bl	419d38 <ascii_strlower_n@plt+0x15930>
  414d2c:	mov	x15, x24
  414d30:	tbz	w0, #31, 4143f0 <ascii_strlower_n@plt+0xffe8>
  414d34:	mov	w24, w0
  414d38:	b	414324 <ascii_strlower_n@plt+0xff1c>
  414d3c:	cmp	x28, x24
  414d40:	b.cc	414fec <ascii_strlower_n@plt+0x10be4>  // b.lo, b.ul, b.last
  414d44:	cmp	x24, #0xb
  414d48:	b.ls	415010 <ascii_strlower_n@plt+0x10c08>  // b.plast
  414d4c:	str	x24, [x27]
  414d50:	mov	w24, #0xffffffa6            	// #-90
  414d54:	b	414324 <ascii_strlower_n@plt+0xff1c>
  414d58:	mov	x0, xzr
  414d5c:	stp	x0, x18, [x20, #80]
  414d60:	b	4143f0 <ascii_strlower_n@plt+0xffe8>
  414d64:	strb	wzr, [x20, #80]
  414d68:	ldr	x8, [x27]
  414d6c:	ldr	x10, [x25]
  414d70:	add	x9, x8, #0x1
  414d74:	cmp	x9, x10
  414d78:	b.hi	414308 <ascii_strlower_n@plt+0xff00>  // b.pmore
  414d7c:	ldr	x10, [x17]
  414d80:	str	x9, [x27]
  414d84:	cmp	x10, #0x0
  414d88:	csel	x9, x16, x10, eq  // eq = none
  414d8c:	ldrb	w8, [x9, x8]
  414d90:	cmp	w8, #0x9f
  414d94:	strb	w8, [x20, #81]
  414d98:	b.hi	414314 <ascii_strlower_n@plt+0xff0c>  // b.pmore
  414d9c:	and	w9, w8, #0xf
  414da0:	cmp	w9, #0x9
  414da4:	b.hi	414314 <ascii_strlower_n@plt+0xff0c>  // b.pmore
  414da8:	mov	x13, x17
  414dac:	mov	x12, x16
  414db0:	cmp	w8, #0xf
  414db4:	b.hi	414dbc <ascii_strlower_n@plt+0x109b4>  // b.pmore
  414db8:	cbnz	w9, 414314 <ascii_strlower_n@plt+0xff0c>
  414dbc:	ldr	x8, [x27]
  414dc0:	ldr	x10, [x25]
  414dc4:	add	x9, x8, #0x1
  414dc8:	cmp	x9, x10
  414dcc:	b.hi	414308 <ascii_strlower_n@plt+0xff00>  // b.pmore
  414dd0:	ldr	x10, [x13]
  414dd4:	str	x9, [x27]
  414dd8:	cmp	x10, #0x0
  414ddc:	csel	x9, x12, x10, eq  // eq = none
  414de0:	ldrb	w8, [x9, x8]
  414de4:	cmp	w8, #0x9f
  414de8:	strb	w8, [x20, #82]
  414dec:	b.hi	414314 <ascii_strlower_n@plt+0xff0c>  // b.pmore
  414df0:	and	w9, w8, #0xf
  414df4:	cmp	w9, #0x9
  414df8:	b.hi	414314 <ascii_strlower_n@plt+0xff0c>  // b.pmore
  414dfc:	cmp	w8, #0xf
  414e00:	b.hi	414e08 <ascii_strlower_n@plt+0x10a00>  // b.pmore
  414e04:	cbnz	w9, 414314 <ascii_strlower_n@plt+0xff0c>
  414e08:	ldr	x8, [x27]
  414e0c:	ldr	x10, [x25]
  414e10:	add	x9, x8, #0x1
  414e14:	cmp	x9, x10
  414e18:	b.hi	414308 <ascii_strlower_n@plt+0xff00>  // b.pmore
  414e1c:	ldr	x10, [x13]
  414e20:	str	x9, [x27]
  414e24:	cmp	x10, #0x0
  414e28:	csel	x9, x12, x10, eq  // eq = none
  414e2c:	ldrb	w8, [x9, x8]
  414e30:	cmp	w8, #0x9f
  414e34:	strb	w8, [x20, #83]
  414e38:	b.hi	414314 <ascii_strlower_n@plt+0xff0c>  // b.pmore
  414e3c:	and	w9, w8, #0xf
  414e40:	cmp	w9, #0x9
  414e44:	b.hi	414314 <ascii_strlower_n@plt+0xff0c>  // b.pmore
  414e48:	cmp	w8, #0xf
  414e4c:	b.hi	414e54 <ascii_strlower_n@plt+0x10a4c>  // b.pmore
  414e50:	cbnz	w9, 414314 <ascii_strlower_n@plt+0xff0c>
  414e54:	ldr	x8, [x27]
  414e58:	ldr	x9, [x25]
  414e5c:	add	x11, x8, #0x4
  414e60:	cmp	x11, x9
  414e64:	b.hi	414308 <ascii_strlower_n@plt+0xff00>  // b.pmore
  414e68:	ldr	x10, [x13]
  414e6c:	str	x11, [x27]
  414e70:	cmp	x10, #0x0
  414e74:	csel	x10, x12, x10, eq  // eq = none
  414e78:	ldr	w13, [x10, x8]
  414e7c:	add	x12, x8, #0x8
  414e80:	cmp	x12, x9
  414e84:	rev	w13, w13
  414e88:	str	w13, [x20, #84]
  414e8c:	b.hi	414308 <ascii_strlower_n@plt+0xff00>  // b.pmore
  414e90:	str	x12, [x27]
  414e94:	ldr	w11, [x10, x11]
  414e98:	add	x8, x8, #0xc
  414e9c:	cmp	x8, x9
  414ea0:	rev	w11, w11
  414ea4:	str	w11, [x20, #88]
  414ea8:	b.hi	414308 <ascii_strlower_n@plt+0xff00>  // b.pmore
  414eac:	str	x8, [x27]
  414eb0:	ldr	w8, [x10, x12]
  414eb4:	rev	w8, w8
  414eb8:	str	w8, [x20, #92]
  414ebc:	b	4143f0 <ascii_strlower_n@plt+0xffe8>
  414ec0:	mov	w24, #0xfffffff4            	// #-12
  414ec4:	ldr	x25, [x20, #96]
  414ec8:	cbnz	x25, 4143e8 <ascii_strlower_n@plt+0xffe0>
  414ecc:	b	414314 <ascii_strlower_n@plt+0xff0c>
  414ed0:	mov	x0, xzr
  414ed4:	stp	x0, x24, [x20, #96]
  414ed8:	mov	x15, x28
  414edc:	b	4143f0 <ascii_strlower_n@plt+0xffe8>
  414ee0:	add	x8, x20, #0x58
  414ee4:	stp	xzr, xzr, [x8]
  414ee8:	b	414314 <ascii_strlower_n@plt+0xff0c>
  414eec:	mov	x0, xzr
  414ef0:	stp	x0, x24, [x20, #88]
  414ef4:	ldr	x10, [x27]
  414ef8:	ldr	x9, [x25]
  414efc:	add	x8, x10, #0x1
  414f00:	cmp	x8, x9
  414f04:	b.hi	414308 <ascii_strlower_n@plt+0xff00>  // b.pmore
  414f08:	ldr	x11, [sp, #16]
  414f0c:	ldr	x11, [x11]
  414f10:	str	x8, [x27]
  414f14:	cmp	x11, #0x0
  414f18:	csel	x11, x28, x11, eq  // eq = none
  414f1c:	ldrb	w24, [x11, x10]
  414f20:	cbz	x24, 414314 <ascii_strlower_n@plt+0xff0c>
  414f24:	add	x10, x8, x24
  414f28:	cmp	x10, x9
  414f2c:	b.hi	414308 <ascii_strlower_n@plt+0xff00>  // b.pmore
  414f30:	add	x0, x11, x8
  414f34:	mov	x1, x24
  414f38:	str	x10, [x27]
  414f3c:	bl	404188 <memdup@plt>
  414f40:	cbz	x0, 4147b0 <ascii_strlower_n@plt+0x103a8>
  414f44:	stp	x0, x24, [x20, #104]
  414f48:	ldr	x8, [x19, #24]
  414f4c:	add	x1, x20, #0x78
  414f50:	b	414ad8 <ascii_strlower_n@plt+0x106d0>
  414f54:	ldur	x10, [x29, #-32]
  414f58:	ldr	x9, [x28]
  414f5c:	str	x10, [x27]
  414f60:	ldur	x10, [x29, #-40]
  414f64:	cbz	x10, 414f8c <ascii_strlower_n@plt+0x10b84>
  414f68:	ldr	x10, [sp, #24]
  414f6c:	ldur	x1, [x29, #-40]
  414f70:	cmp	x9, #0x0
  414f74:	csel	x9, x10, x9, eq  // eq = none
  414f78:	add	x0, x9, x8
  414f7c:	bl	404188 <memdup@plt>
  414f80:	cbnz	x0, 414f90 <ascii_strlower_n@plt+0x10b88>
  414f84:	mov	w24, #0xfffffff4            	// #-12
  414f88:	b	414aa0 <ascii_strlower_n@plt+0x10698>
  414f8c:	mov	x0, xzr
  414f90:	ldur	x8, [x29, #-40]
  414f94:	mov	w24, wzr
  414f98:	stp	x0, x8, [x20, #112]
  414f9c:	ldur	x8, [x29, #-40]
  414fa0:	cbnz	x8, 4143e8 <ascii_strlower_n@plt+0xffe0>
  414fa4:	b	414314 <ascii_strlower_n@plt+0xff0c>
  414fa8:	adrp	x1, 421000 <ascii_strlower_n@plt+0x1cbf8>
  414fac:	adrp	x2, 421000 <ascii_strlower_n@plt+0x1cbf8>
  414fb0:	adrp	x4, 422000 <ascii_strlower_n@plt+0x1dbf8>
  414fb4:	add	x1, x1, #0xb90
  414fb8:	add	x2, x2, #0xad6
  414fbc:	add	x4, x4, #0x470
  414fc0:	mov	w3, #0x65e                 	// #1630
  414fc4:	bl	403a98 <log_assert_failed_realm@plt>
  414fc8:	adrp	x1, 420000 <ascii_strlower_n@plt+0x1bbf8>
  414fcc:	adrp	x2, 421000 <ascii_strlower_n@plt+0x1cbf8>
  414fd0:	adrp	x4, 422000 <ascii_strlower_n@plt+0x1dbf8>
  414fd4:	add	x1, x1, #0x41e
  414fd8:	add	x2, x2, #0xad6
  414fdc:	add	x4, x4, #0x470
  414fe0:	mov	w3, #0x65f                 	// #1631
  414fe4:	mov	w0, wzr
  414fe8:	bl	403a98 <log_assert_failed_realm@plt>
  414fec:	adrp	x1, 422000 <ascii_strlower_n@plt+0x1dbf8>
  414ff0:	adrp	x2, 421000 <ascii_strlower_n@plt+0x1cbf8>
  414ff4:	adrp	x4, 422000 <ascii_strlower_n@plt+0x1dbf8>
  414ff8:	add	x1, x1, #0x231
  414ffc:	add	x2, x2, #0xad6
  415000:	add	x4, x4, #0x205
  415004:	mov	w3, #0x4bd                 	// #1213
  415008:	mov	w0, wzr
  41500c:	bl	403a98 <log_assert_failed_realm@plt>
  415010:	adrp	x1, 422000 <ascii_strlower_n@plt+0x1dbf8>
  415014:	adrp	x2, 421000 <ascii_strlower_n@plt+0x1cbf8>
  415018:	adrp	x4, 422000 <ascii_strlower_n@plt+0x1dbf8>
  41501c:	add	x1, x1, #0x240
  415020:	add	x2, x2, #0xad6
  415024:	add	x4, x4, #0x205
  415028:	mov	w3, #0x4be                 	// #1214
  41502c:	mov	w0, wzr
  415030:	bl	403a98 <log_assert_failed_realm@plt>
  415034:	sub	sp, sp, #0x70
  415038:	stp	x29, x30, [sp, #16]
  41503c:	stp	x28, x27, [sp, #32]
  415040:	stp	x26, x25, [sp, #48]
  415044:	stp	x24, x23, [sp, #64]
  415048:	stp	x22, x21, [sp, #80]
  41504c:	stp	x20, x19, [sp, #96]
  415050:	ldr	x22, [x0, #24]
  415054:	mov	x20, x1
  415058:	mov	x19, x0
  41505c:	add	x24, x0, #0xa8
  415060:	add	x21, x22, x2
  415064:	mov	w26, #0x5                   	// #5
  415068:	mov	x23, x22
  41506c:	add	x29, sp, #0x10
  415070:	stp	x24, x21, [sp]
  415074:	cmp	x23, x21
  415078:	b.cs	415310 <ascii_strlower_n@plt+0x10f08>  // b.hs, b.nlast
  41507c:	cbz	x20, 415378 <ascii_strlower_n@plt+0x10f70>
  415080:	mov	x0, x20
  415084:	bl	404198 <bitmap_ensure_allocated@plt>
  415088:	tbnz	w0, #31, 4152ac <ascii_strlower_n@plt+0x10ea4>
  41508c:	ldr	x11, [x19, #24]
  415090:	ldr	x8, [x19, #8]
  415094:	add	x12, x11, #0x1
  415098:	cmp	x12, x8
  41509c:	b.hi	4152a8 <ascii_strlower_n@plt+0x10ea0>  // b.pmore
  4150a0:	ldr	x10, [x19, #40]
  4150a4:	add	x9, x11, #0x2
  4150a8:	str	x12, [x19, #24]
  4150ac:	cmp	x10, #0x0
  4150b0:	csel	x10, x24, x10, eq  // eq = none
  4150b4:	cmp	x9, x8
  4150b8:	b.hi	4152a8 <ascii_strlower_n@plt+0x10ea0>  // b.pmore
  4150bc:	ldrb	w11, [x10, x11]
  4150c0:	str	x9, [x19, #24]
  4150c4:	ldrb	w27, [x10, x12]
  4150c8:	sub	w12, w27, #0x1
  4150cc:	and	w12, w12, #0xff
  4150d0:	cmp	w12, #0x1f
  4150d4:	b.hi	4152fc <ascii_strlower_n@plt+0x10ef4>  // b.pmore
  4150d8:	add	x12, x9, x27
  4150dc:	cmp	x12, x8
  4150e0:	b.hi	4152a8 <ascii_strlower_n@plt+0x10ea0>  // b.pmore
  4150e4:	mov	w28, wzr
  4150e8:	add	x25, x10, x9
  4150ec:	lsl	w24, w11, #8
  4150f0:	str	x12, [x19, #24]
  4150f4:	b	41510c <ascii_strlower_n@plt+0x10d04>
  4150f8:	mov	w8, #0x1                   	// #1
  4150fc:	add	w28, w28, #0x8
  415100:	subs	x27, x27, #0x1
  415104:	add	x25, x25, #0x1
  415108:	b.eq	415290 <ascii_strlower_n@plt+0x10e88>  // b.none
  41510c:	ldrsb	w8, [x25]
  415110:	cbz	w8, 4150fc <ascii_strlower_n@plt+0x10cf4>
  415114:	tbz	w8, #31, 41513c <ascii_strlower_n@plt+0x10d34>
  415118:	and	w8, w28, #0xff
  41511c:	orr	w21, w24, w8
  415120:	mov	w0, w21
  415124:	bl	41d67c <ascii_strlower_n@plt+0x19274>
  415128:	tbnz	w0, #0, 41513c <ascii_strlower_n@plt+0x10d34>
  41512c:	ldr	x0, [x20]
  415130:	mov	w1, w21
  415134:	bl	4041a8 <bitmap_set@plt>
  415138:	tbnz	w0, #31, 4152ac <ascii_strlower_n@plt+0x10ea4>
  41513c:	ldrb	w8, [x25]
  415140:	tbz	w8, #6, 41516c <ascii_strlower_n@plt+0x10d64>
  415144:	orr	w8, w28, #0x1
  415148:	and	w8, w8, #0xff
  41514c:	orr	w21, w24, w8
  415150:	mov	w0, w21
  415154:	bl	41d67c <ascii_strlower_n@plt+0x19274>
  415158:	tbnz	w0, #0, 41516c <ascii_strlower_n@plt+0x10d64>
  41515c:	ldr	x0, [x20]
  415160:	mov	w1, w21
  415164:	bl	4041a8 <bitmap_set@plt>
  415168:	tbnz	w0, #31, 4152ac <ascii_strlower_n@plt+0x10ea4>
  41516c:	ldrb	w8, [x25]
  415170:	tbz	w8, #5, 41519c <ascii_strlower_n@plt+0x10d94>
  415174:	orr	w8, w28, #0x2
  415178:	and	w8, w8, #0xff
  41517c:	orr	w21, w24, w8
  415180:	mov	w0, w21
  415184:	bl	41d67c <ascii_strlower_n@plt+0x19274>
  415188:	tbnz	w0, #0, 41519c <ascii_strlower_n@plt+0x10d94>
  41518c:	ldr	x0, [x20]
  415190:	mov	w1, w21
  415194:	bl	4041a8 <bitmap_set@plt>
  415198:	tbnz	w0, #31, 4152ac <ascii_strlower_n@plt+0x10ea4>
  41519c:	ldrb	w8, [x25]
  4151a0:	tbz	w8, #4, 4151cc <ascii_strlower_n@plt+0x10dc4>
  4151a4:	orr	w8, w28, #0x3
  4151a8:	and	w8, w8, #0xff
  4151ac:	orr	w21, w24, w8
  4151b0:	mov	w0, w21
  4151b4:	bl	41d67c <ascii_strlower_n@plt+0x19274>
  4151b8:	tbnz	w0, #0, 4151cc <ascii_strlower_n@plt+0x10dc4>
  4151bc:	ldr	x0, [x20]
  4151c0:	mov	w1, w21
  4151c4:	bl	4041a8 <bitmap_set@plt>
  4151c8:	tbnz	w0, #31, 4152ac <ascii_strlower_n@plt+0x10ea4>
  4151cc:	ldrb	w8, [x25]
  4151d0:	tbz	w8, #3, 4151fc <ascii_strlower_n@plt+0x10df4>
  4151d4:	orr	w8, w28, #0x4
  4151d8:	and	w8, w8, #0xff
  4151dc:	orr	w21, w24, w8
  4151e0:	mov	w0, w21
  4151e4:	bl	41d67c <ascii_strlower_n@plt+0x19274>
  4151e8:	tbnz	w0, #0, 4151fc <ascii_strlower_n@plt+0x10df4>
  4151ec:	ldr	x0, [x20]
  4151f0:	mov	w1, w21
  4151f4:	bl	4041a8 <bitmap_set@plt>
  4151f8:	tbnz	w0, #31, 4152ac <ascii_strlower_n@plt+0x10ea4>
  4151fc:	ldrb	w8, [x25]
  415200:	tbz	w8, #2, 41522c <ascii_strlower_n@plt+0x10e24>
  415204:	orr	w8, w28, w26
  415208:	and	w8, w8, #0xff
  41520c:	orr	w21, w24, w8
  415210:	mov	w0, w21
  415214:	bl	41d67c <ascii_strlower_n@plt+0x19274>
  415218:	tbnz	w0, #0, 41522c <ascii_strlower_n@plt+0x10e24>
  41521c:	ldr	x0, [x20]
  415220:	mov	w1, w21
  415224:	bl	4041a8 <bitmap_set@plt>
  415228:	tbnz	w0, #31, 4152ac <ascii_strlower_n@plt+0x10ea4>
  41522c:	ldrb	w8, [x25]
  415230:	tbz	w8, #1, 41525c <ascii_strlower_n@plt+0x10e54>
  415234:	orr	w8, w28, #0x6
  415238:	and	w8, w8, #0xff
  41523c:	orr	w21, w24, w8
  415240:	mov	w0, w21
  415244:	bl	41d67c <ascii_strlower_n@plt+0x19274>
  415248:	tbnz	w0, #0, 41525c <ascii_strlower_n@plt+0x10e54>
  41524c:	ldr	x0, [x20]
  415250:	mov	w1, w21
  415254:	bl	4041a8 <bitmap_set@plt>
  415258:	tbnz	w0, #31, 4152ac <ascii_strlower_n@plt+0x10ea4>
  41525c:	ldrb	w8, [x25]
  415260:	tbz	w8, #0, 4150f8 <ascii_strlower_n@plt+0x10cf0>
  415264:	orr	w8, w28, #0x7
  415268:	and	w8, w8, #0xff
  41526c:	orr	w21, w24, w8
  415270:	mov	w0, w21
  415274:	bl	41d67c <ascii_strlower_n@plt+0x19274>
  415278:	tbnz	w0, #0, 4150f8 <ascii_strlower_n@plt+0x10cf0>
  41527c:	ldr	x0, [x20]
  415280:	mov	w1, w21
  415284:	bl	4041a8 <bitmap_set@plt>
  415288:	tbz	w0, #31, 4150f8 <ascii_strlower_n@plt+0x10cf0>
  41528c:	b	4152ac <ascii_strlower_n@plt+0x10ea4>
  415290:	tbz	w8, #0, 4152fc <ascii_strlower_n@plt+0x10ef4>
  415294:	ldr	x23, [x19, #24]
  415298:	ldp	x24, x21, [sp]
  41529c:	cmp	x23, x21
  4152a0:	b.ls	415074 <ascii_strlower_n@plt+0x10c6c>  // b.plast
  4152a4:	b	415320 <ascii_strlower_n@plt+0x10f18>
  4152a8:	mov	w0, #0xffffffa6            	// #-90
  4152ac:	ldr	x8, [x19, #8]
  4152b0:	cmp	x8, x23
  4152b4:	b.cc	415330 <ascii_strlower_n@plt+0x10f28>  // b.lo, b.ul, b.last
  4152b8:	cmp	x23, #0xb
  4152bc:	b.ls	415354 <ascii_strlower_n@plt+0x10f4c>  // b.plast
  4152c0:	str	x23, [x19, #24]
  4152c4:	ldr	x8, [x19, #8]
  4152c8:	cmp	x8, x22
  4152cc:	b.cc	415330 <ascii_strlower_n@plt+0x10f28>  // b.lo, b.ul, b.last
  4152d0:	cmp	x22, #0xb
  4152d4:	b.ls	415354 <ascii_strlower_n@plt+0x10f4c>  // b.plast
  4152d8:	str	x22, [x19, #24]
  4152dc:	ldp	x20, x19, [sp, #96]
  4152e0:	ldp	x22, x21, [sp, #80]
  4152e4:	ldp	x24, x23, [sp, #64]
  4152e8:	ldp	x26, x25, [sp, #48]
  4152ec:	ldp	x28, x27, [sp, #32]
  4152f0:	ldp	x29, x30, [sp, #16]
  4152f4:	add	sp, sp, #0x70
  4152f8:	ret
  4152fc:	mov	w0, #0xffffffb6            	// #-74
  415300:	ldr	x8, [x19, #8]
  415304:	cmp	x8, x23
  415308:	b.cs	4152b8 <ascii_strlower_n@plt+0x10eb0>  // b.hs, b.nlast
  41530c:	b	415330 <ascii_strlower_n@plt+0x10f28>
  415310:	cmp	x23, x21
  415314:	b.ne	415320 <ascii_strlower_n@plt+0x10f18>  // b.any
  415318:	mov	w0, wzr
  41531c:	b	4152dc <ascii_strlower_n@plt+0x10ed4>
  415320:	mov	w0, #0xffffffb6            	// #-74
  415324:	ldr	x8, [x19, #8]
  415328:	cmp	x8, x22
  41532c:	b.cs	4152d0 <ascii_strlower_n@plt+0x10ec8>  // b.hs, b.nlast
  415330:	adrp	x1, 422000 <ascii_strlower_n@plt+0x1dbf8>
  415334:	adrp	x2, 421000 <ascii_strlower_n@plt+0x1cbf8>
  415338:	adrp	x4, 422000 <ascii_strlower_n@plt+0x1dbf8>
  41533c:	add	x1, x1, #0x231
  415340:	add	x2, x2, #0xad6
  415344:	add	x4, x4, #0x205
  415348:	mov	w3, #0x4bd                 	// #1213
  41534c:	mov	w0, wzr
  415350:	bl	403a98 <log_assert_failed_realm@plt>
  415354:	adrp	x1, 422000 <ascii_strlower_n@plt+0x1dbf8>
  415358:	adrp	x2, 421000 <ascii_strlower_n@plt+0x1cbf8>
  41535c:	adrp	x4, 422000 <ascii_strlower_n@plt+0x1dbf8>
  415360:	add	x1, x1, #0x240
  415364:	add	x2, x2, #0xad6
  415368:	add	x4, x4, #0x205
  41536c:	mov	w3, #0x4be                 	// #1214
  415370:	mov	w0, wzr
  415374:	bl	403a98 <log_assert_failed_realm@plt>
  415378:	adrp	x1, 422000 <ascii_strlower_n@plt+0x1dbf8>
  41537c:	adrp	x2, 421000 <ascii_strlower_n@plt+0x1cbf8>
  415380:	adrp	x4, 422000 <ascii_strlower_n@plt+0x1dbf8>
  415384:	add	x1, x1, #0x5d7
  415388:	add	x2, x2, #0xad6
  41538c:	add	x4, x4, #0x5dd
  415390:	mov	w3, #0x5c9                 	// #1481
  415394:	mov	w0, wzr
  415398:	bl	403a98 <log_assert_failed_realm@plt>
  41539c:	sub	sp, sp, #0x80
  4153a0:	stp	x29, x30, [sp, #32]
  4153a4:	stp	x28, x27, [sp, #48]
  4153a8:	stp	x26, x25, [sp, #64]
  4153ac:	stp	x24, x23, [sp, #80]
  4153b0:	stp	x22, x21, [sp, #96]
  4153b4:	stp	x20, x19, [sp, #112]
  4153b8:	ldrb	w8, [x0, #160]
  4153bc:	add	x29, sp, #0x20
  4153c0:	tbnz	w8, #1, 4154f0 <ascii_strlower_n@plt+0x110e8>
  4153c4:	ldr	x8, [x0, #8]
  4153c8:	mov	x19, x0
  4153cc:	cmp	x8, #0xb
  4153d0:	b.ls	415a3c <ascii_strlower_n@plt+0x11634>  // b.plast
  4153d4:	ldr	x8, [x19, #40]
  4153d8:	mov	w9, #0xc                   	// #12
  4153dc:	add	x27, x19, #0xa8
  4153e0:	ldr	x26, [x19, #24]
  4153e4:	cmp	x8, #0x0
  4153e8:	str	x9, [x19, #24]
  4153ec:	csel	x8, x27, x8, eq  // eq = none
  4153f0:	ldrh	w8, [x8, #4]
  4153f4:	cbz	w8, 4154f8 <ascii_strlower_n@plt+0x110f0>
  4153f8:	rev16	w23, w8
  4153fc:	and	x0, x23, #0xffff
  415400:	bl	41bedc <ascii_strlower_n@plt+0x17ad4>
  415404:	mov	x20, x0
  415408:	cbz	x0, 415500 <ascii_strlower_n@plt+0x110f8>
  41540c:	adrp	x0, 43f000 <ascii_strlower_n@plt+0x3abf8>
  415410:	ldr	x0, [x0, #2680]
  415414:	bl	4041b8 <internal_set_new@plt>
  415418:	cbz	x0, 41550c <ascii_strlower_n@plt+0x11104>
  41541c:	lsl	w1, w23, #1
  415420:	mov	x22, x0
  415424:	bl	4041c8 <internal_hashmap_reserve@plt>
  415428:	tbnz	w0, #31, 41552c <ascii_strlower_n@plt+0x11124>
  41542c:	mov	w24, wzr
  415430:	sub	x1, x29, #0x8
  415434:	sub	x2, x29, #0xc
  415438:	mov	x0, x19
  41543c:	mov	x3, xzr
  415440:	stur	xzr, [x29, #-8]
  415444:	bl	414028 <ascii_strlower_n@plt+0xfc20>
  415448:	tbnz	w0, #31, 4154cc <ascii_strlower_n@plt+0x110c4>
  41544c:	ldurb	w8, [x29, #-12]
  415450:	cbnz	w8, 41549c <ascii_strlower_n@plt+0x11094>
  415454:	ldur	x8, [x29, #-8]
  415458:	ldrh	w0, [x8, #6]
  41545c:	bl	41d6cc <ascii_strlower_n@plt+0x192c4>
  415460:	tbz	w0, #0, 41549c <ascii_strlower_n@plt+0x11094>
  415464:	ldur	x1, [x29, #-8]
  415468:	mov	x0, x22
  41546c:	bl	4041d8 <set_put@plt>
  415470:	tbnz	w0, #31, 4154cc <ascii_strlower_n@plt+0x110c4>
  415474:	cbz	w0, 4154e0 <ascii_strlower_n@plt+0x110d8>
  415478:	ldur	x1, [x29, #-8]
  41547c:	mov	x0, x20
  415480:	bl	41c018 <ascii_strlower_n@plt+0x17c10>
  415484:	cmp	w0, #0x0
  415488:	lsr	w25, w0, #31
  41548c:	csel	w21, w0, w21, lt  // lt = tstop
  415490:	ldur	x0, [x29, #-8]
  415494:	cbnz	x0, 4154ac <ascii_strlower_n@plt+0x110a4>
  415498:	b	4154b0 <ascii_strlower_n@plt+0x110a8>
  41549c:	mov	w21, #0xffffffb6            	// #-74
  4154a0:	mov	w25, #0x1                   	// #1
  4154a4:	ldur	x0, [x29, #-8]
  4154a8:	cbz	x0, 4154b0 <ascii_strlower_n@plt+0x110a8>
  4154ac:	bl	4162cc <ascii_strlower_n@plt+0x11ec4>
  4154b0:	orr	w8, w25, #0x4
  4154b4:	cmp	w8, #0x4
  4154b8:	b.ne	41554c <ascii_strlower_n@plt+0x11144>  // b.any
  4154bc:	add	w24, w24, #0x1
  4154c0:	cmp	w24, w23
  4154c4:	b.cc	415430 <ascii_strlower_n@plt+0x11028>  // b.lo, b.ul, b.last
  4154c8:	b	415574 <ascii_strlower_n@plt+0x1116c>
  4154cc:	mov	w25, #0x1                   	// #1
  4154d0:	mov	w21, w0
  4154d4:	ldur	x0, [x29, #-8]
  4154d8:	cbnz	x0, 4154ac <ascii_strlower_n@plt+0x110a4>
  4154dc:	b	4154b0 <ascii_strlower_n@plt+0x110a8>
  4154e0:	mov	w25, #0x4                   	// #4
  4154e4:	ldur	x0, [x29, #-8]
  4154e8:	cbnz	x0, 4154ac <ascii_strlower_n@plt+0x110a4>
  4154ec:	b	4154b0 <ascii_strlower_n@plt+0x110a8>
  4154f0:	mov	w21, wzr
  4154f4:	b	4159d8 <ascii_strlower_n@plt+0x115d0>
  4154f8:	mov	x20, xzr
  4154fc:	b	415584 <ascii_strlower_n@plt+0x1117c>
  415500:	mov	x24, xzr
  415504:	mov	w21, #0xfffffff4            	// #-12
  415508:	b	4159a8 <ascii_strlower_n@plt+0x115a0>
  41550c:	adrp	x1, 421000 <ascii_strlower_n@plt+0x1cbf8>
  415510:	adrp	x3, 422000 <ascii_strlower_n@plt+0x1dbf8>
  415514:	add	x1, x1, #0xad6
  415518:	add	x3, x3, #0x61f
  41551c:	mov	w2, #0x85e                 	// #2142
  415520:	bl	403a28 <log_oom_internal@plt>
  415524:	mov	w21, w0
  415528:	b	41555c <ascii_strlower_n@plt+0x11154>
  41552c:	mov	w21, w0
  415530:	mov	x0, x22
  415534:	mov	x1, xzr
  415538:	mov	x2, xzr
  41553c:	bl	404088 <internal_hashmap_free@plt>
  415540:	mov	x0, x20
  415544:	bl	41bf84 <ascii_strlower_n@plt+0x17b7c>
  415548:	b	415998 <ascii_strlower_n@plt+0x11590>
  41554c:	mov	x0, x22
  415550:	mov	x1, xzr
  415554:	mov	x2, xzr
  415558:	bl	404088 <internal_hashmap_free@plt>
  41555c:	mov	x0, x20
  415560:	bl	41bf84 <ascii_strlower_n@plt+0x17b7c>
  415564:	mov	x20, xzr
  415568:	mov	x24, xzr
  41556c:	tbz	w21, #31, 415584 <ascii_strlower_n@plt+0x1117c>
  415570:	b	4159a4 <ascii_strlower_n@plt+0x1159c>
  415574:	mov	x0, x22
  415578:	mov	x1, xzr
  41557c:	mov	x2, xzr
  415580:	bl	404088 <internal_hashmap_free@plt>
  415584:	ldr	x8, [x19, #40]
  415588:	cmp	x8, #0x0
  41558c:	csel	x8, x27, x8, eq  // eq = none
  415590:	ldrh	w10, [x8, #8]
  415594:	ldrh	w9, [x8, #6]
  415598:	ldrh	w8, [x8, #10]
  41559c:	rev	w10, w10
  4155a0:	rev	w9, w9
  4155a4:	lsr	w10, w10, #16
  4155a8:	add	w9, w10, w9, lsr #16
  4155ac:	rev	w8, w8
  4155b0:	adds	w24, w9, w8, lsr #16
  4155b4:	b.eq	41594c <ascii_strlower_n@plt+0x11544>  // b.none
  4155b8:	mov	x0, x24
  4155bc:	bl	419f08 <ascii_strlower_n@plt+0x15b00>
  4155c0:	mov	x22, x0
  4155c4:	cbz	x0, 415954 <ascii_strlower_n@plt+0x1154c>
  4155c8:	str	x26, [sp, #8]
  4155cc:	mov	w25, wzr
  4155d0:	mov	w26, wzr
  4155d4:	mov	x23, xzr
  4155d8:	sub	x1, x29, #0x8
  4155dc:	sub	x2, x29, #0xc
  4155e0:	mov	x0, x19
  4155e4:	mov	x3, xzr
  4155e8:	stur	xzr, [x29, #-8]
  4155ec:	sturb	wzr, [x29, #-12]
  4155f0:	bl	414230 <ascii_strlower_n@plt+0xfe28>
  4155f4:	tbnz	w0, #31, 415680 <ascii_strlower_n@plt+0x11278>
  4155f8:	cbz	x23, 41560c <ascii_strlower_n@plt+0x11204>
  4155fc:	ldur	x8, [x29, #-8]
  415600:	add	x1, x23, #0x8
  415604:	add	x0, x8, #0x8
  415608:	bl	416cf0 <ascii_strlower_n@plt+0x128e8>
  41560c:	ldur	x1, [x29, #-8]
  415610:	ldr	x0, [x1, #8]
  415614:	ldrh	w8, [x0, #6]
  415618:	cmp	w8, #0x29
  41561c:	b.ne	4156b0 <ascii_strlower_n@plt+0x112a8>  // b.any
  415620:	ldr	x8, [x19, #88]
  415624:	cmp	x8, #0x0
  415628:	cset	w8, eq  // eq = none
  41562c:	bic	w8, w8, w26
  415630:	tbnz	w8, #0, 415724 <ascii_strlower_n@plt+0x1131c>
  415634:	mov	w0, wzr
  415638:	bl	4039a8 <log_get_max_level_realm@plt>
  41563c:	cmp	w0, #0x7
  415640:	b.lt	4157cc <ascii_strlower_n@plt+0x113c4>  // b.tstop
  415644:	adrp	x2, 421000 <ascii_strlower_n@plt+0x1cbf8>
  415648:	adrp	x4, 422000 <ascii_strlower_n@plt+0x1dbf8>
  41564c:	adrp	x5, 422000 <ascii_strlower_n@plt+0x1dbf8>
  415650:	mov	w0, #0x7                   	// #7
  415654:	mov	w3, #0x8a7                 	// #2215
  415658:	mov	w1, wzr
  41565c:	add	x2, x2, #0xad6
  415660:	add	x4, x4, #0x63b
  415664:	add	x5, x5, #0x655
  415668:	bl	4039b8 <log_internal_realm@plt>
  41566c:	mov	w26, #0x1                   	// #1
  415670:	mov	w28, #0x4                   	// #4
  415674:	ldur	x0, [x29, #-8]
  415678:	cbnz	x0, 415690 <ascii_strlower_n@plt+0x11288>
  41567c:	b	415694 <ascii_strlower_n@plt+0x1128c>
  415680:	mov	w28, #0x1                   	// #1
  415684:	mov	w21, w0
  415688:	ldur	x0, [x29, #-8]
  41568c:	cbz	x0, 415694 <ascii_strlower_n@plt+0x1128c>
  415690:	bl	417208 <ascii_strlower_n@plt+0x12e00>
  415694:	orr	w8, w28, #0x4
  415698:	cmp	w8, #0x4
  41569c:	b.ne	415960 <ascii_strlower_n@plt+0x11558>  // b.any
  4156a0:	add	w25, w25, #0x1
  4156a4:	cmp	w25, w24
  4156a8:	b.ne	4155d8 <ascii_strlower_n@plt+0x111d0>  // b.any
  4156ac:	b	4159fc <ascii_strlower_n@plt+0x115f4>
  4156b0:	ldr	x8, [x19, #40]
  4156b4:	ldurb	w10, [x29, #-12]
  4156b8:	ldr	w9, [x19, #4]
  4156bc:	ldr	w2, [x19, #96]
  4156c0:	cmp	x8, #0x0
  4156c4:	csel	x8, x27, x8, eq  // eq = none
  4156c8:	ldrh	w8, [x8, #6]
  4156cc:	mov	x0, x22
  4156d0:	rev	w8, w8
  4156d4:	cmp	w25, w8, lsr #16
  4156d8:	cset	w8, cc  // cc = lo, ul, last
  4156dc:	tst	w10, #0x1
  4156e0:	ccmp	w9, #0x1, #0x0, eq  // eq = none
  4156e4:	mov	w9, #0x4                   	// #4
  4156e8:	csel	w3, w9, wzr, eq  // eq = none
  4156ec:	bfi	w3, w8, #1, #1
  4156f0:	bl	41a034 <ascii_strlower_n@plt+0x15c2c>
  4156f4:	cmp	w0, #0x0
  4156f8:	csel	w21, w0, w21, lt  // lt = tstop
  4156fc:	tbnz	w0, #31, 415868 <ascii_strlower_n@plt+0x11460>
  415700:	mov	x0, x23
  415704:	bl	417208 <ascii_strlower_n@plt+0x12e00>
  415708:	ldur	x0, [x29, #-8]
  41570c:	bl	4171c0 <ascii_strlower_n@plt+0x12db8>
  415710:	mov	x23, x0
  415714:	mov	w28, wzr
  415718:	ldur	x0, [x29, #-8]
  41571c:	cbnz	x0, 415690 <ascii_strlower_n@plt+0x11288>
  415720:	b	415694 <ascii_strlower_n@plt+0x1128c>
  415724:	bl	415fcc <ascii_strlower_n@plt+0x11bc4>
  415728:	bl	4040e8 <dns_name_is_root@plt>
  41572c:	tbz	w0, #0, 415794 <ascii_strlower_n@plt+0x1138c>
  415730:	ldr	x8, [x19, #40]
  415734:	cmp	x8, #0x0
  415738:	csel	x9, x27, x8, eq  // eq = none
  41573c:	ldrh	w10, [x9, #6]
  415740:	ldrh	w9, [x9, #8]
  415744:	rev	w10, w10
  415748:	rev	w9, w9
  41574c:	lsr	w9, w9, #16
  415750:	add	w9, w9, w10, lsr #16
  415754:	cmp	w25, w9
  415758:	b.cs	4157e0 <ascii_strlower_n@plt+0x113d8>  // b.hs, b.nlast
  41575c:	mov	w0, wzr
  415760:	bl	4039a8 <log_get_max_level_realm@plt>
  415764:	cmp	w0, #0x7
  415768:	b.lt	4157cc <ascii_strlower_n@plt+0x113c4>  // b.tstop
  41576c:	adrp	x2, 421000 <ascii_strlower_n@plt+0x1cbf8>
  415770:	adrp	x4, 422000 <ascii_strlower_n@plt+0x1dbf8>
  415774:	adrp	x5, 422000 <ascii_strlower_n@plt+0x1dbf8>
  415778:	mov	w0, #0x7                   	// #7
  41577c:	mov	w3, #0x8b8                 	// #2232
  415780:	mov	w1, wzr
  415784:	add	x2, x2, #0xad6
  415788:	add	x4, x4, #0x63b
  41578c:	add	x5, x5, #0x6ac
  415790:	b	415668 <ascii_strlower_n@plt+0x11260>
  415794:	mov	w0, wzr
  415798:	bl	4039a8 <log_get_max_level_realm@plt>
  41579c:	cmp	w0, #0x7
  4157a0:	b.lt	4157cc <ascii_strlower_n@plt+0x113c4>  // b.tstop
  4157a4:	adrp	x2, 421000 <ascii_strlower_n@plt+0x1cbf8>
  4157a8:	adrp	x4, 422000 <ascii_strlower_n@plt+0x1dbf8>
  4157ac:	adrp	x5, 422000 <ascii_strlower_n@plt+0x1dbf8>
  4157b0:	mov	w0, #0x7                   	// #7
  4157b4:	mov	w3, #0x8af                 	// #2223
  4157b8:	mov	w1, wzr
  4157bc:	add	x2, x2, #0xad6
  4157c0:	add	x4, x4, #0x63b
  4157c4:	add	x5, x5, #0x67e
  4157c8:	bl	4039b8 <log_internal_realm@plt>
  4157cc:	mov	w26, #0x1                   	// #1
  4157d0:	mov	w28, #0x4                   	// #4
  4157d4:	ldur	x0, [x29, #-8]
  4157d8:	cbnz	x0, 415690 <ascii_strlower_n@plt+0x11288>
  4157dc:	b	415694 <ascii_strlower_n@plt+0x1128c>
  4157e0:	ldur	x0, [x29, #-8]
  4157e4:	cbz	x0, 415a84 <ascii_strlower_n@plt+0x1167c>
  4157e8:	ldr	x9, [x0, #8]
  4157ec:	ldrh	w9, [x9, #6]
  4157f0:	cmp	w9, #0x29
  4157f4:	b.ne	415aa4 <ascii_strlower_n@plt+0x1169c>  // b.any
  4157f8:	ldrb	w9, [x0, #26]
  4157fc:	lsl	w9, w9, #16
  415800:	cbz	w9, 415878 <ascii_strlower_n@plt+0x11470>
  415804:	mov	w10, wzr
  415808:	cmp	x8, #0x0
  41580c:	csel	x8, x27, x8, eq  // eq = none
  415810:	ldrb	w8, [x8, #2]
  415814:	tbnz	w8, #7, 415824 <ascii_strlower_n@plt+0x1141c>
  415818:	bl	4171c0 <ascii_strlower_n@plt+0x12db8>
  41581c:	str	x0, [x19, #88]
  415820:	b	415700 <ascii_strlower_n@plt+0x112f8>
  415824:	cbz	w9, 415910 <ascii_strlower_n@plt+0x11508>
  415828:	mov	w0, wzr
  41582c:	bl	4039a8 <log_get_max_level_realm@plt>
  415830:	cmp	w0, #0x7
  415834:	b.lt	415860 <ascii_strlower_n@plt+0x11458>  // b.tstop
  415838:	adrp	x2, 421000 <ascii_strlower_n@plt+0x1cbf8>
  41583c:	adrp	x4, 422000 <ascii_strlower_n@plt+0x1dbf8>
  415840:	adrp	x5, 422000 <ascii_strlower_n@plt+0x1dbf8>
  415844:	mov	w0, #0x7                   	// #7
  415848:	mov	w3, #0x8c9                 	// #2249
  41584c:	mov	w1, wzr
  415850:	add	x2, x2, #0xad6
  415854:	add	x4, x4, #0x63b
  415858:	add	x5, x5, #0x6eb
  41585c:	bl	4039b8 <log_internal_realm@plt>
  415860:	mov	w26, wzr
  415864:	mov	w21, #0xffffffb6            	// #-74
  415868:	mov	w28, #0x1                   	// #1
  41586c:	ldur	x0, [x29, #-8]
  415870:	cbnz	x0, 415690 <ascii_strlower_n@plt+0x11288>
  415874:	b	415694 <ascii_strlower_n@plt+0x1128c>
  415878:	ldr	x10, [x0, #88]
  41587c:	cbz	x10, 415808 <ascii_strlower_n@plt+0x11400>
  415880:	ldr	x11, [x0, #80]
  415884:	mov	w12, wzr
  415888:	cmp	x10, #0x4
  41588c:	b.cc	4158d8 <ascii_strlower_n@plt+0x114d0>  // b.lo, b.ul, b.last
  415890:	ldrh	w13, [x11, #2]
  415894:	rev	w13, w13
  415898:	lsr	w13, w13, #16
  41589c:	add	x13, x13, #0x4
  4158a0:	cmp	x10, x13
  4158a4:	b.cc	4158d8 <ascii_strlower_n@plt+0x114d0>  // b.lo, b.ul, b.last
  4158a8:	ldrh	w14, [x11]
  4158ac:	add	x11, x11, x13
  4158b0:	rev	w14, w14
  4158b4:	lsr	w14, w14, #16
  4158b8:	sub	w14, w14, #0x5
  4158bc:	cmp	w14, #0x3
  4158c0:	cset	w14, cc  // cc = lo, ul, last
  4158c4:	subs	x10, x10, x13
  4158c8:	orr	w12, w12, w14
  4158cc:	b.ne	415888 <ascii_strlower_n@plt+0x11480>  // b.any
  4158d0:	and	w10, w12, #0x1
  4158d4:	b	415808 <ascii_strlower_n@plt+0x11400>
  4158d8:	mov	w0, wzr
  4158dc:	bl	4039a8 <log_get_max_level_realm@plt>
  4158e0:	cmp	w0, #0x7
  4158e4:	b.lt	4157cc <ascii_strlower_n@plt+0x113c4>  // b.tstop
  4158e8:	adrp	x2, 421000 <ascii_strlower_n@plt+0x1cbf8>
  4158ec:	adrp	x4, 422000 <ascii_strlower_n@plt+0x1dbf8>
  4158f0:	adrp	x5, 422000 <ascii_strlower_n@plt+0x1dbf8>
  4158f4:	mov	w0, #0x7                   	// #7
  4158f8:	mov	w3, #0x8be                 	// #2238
  4158fc:	mov	w1, wzr
  415900:	add	x2, x2, #0xad6
  415904:	add	x4, x4, #0x63b
  415908:	add	x5, x5, #0x6cf
  41590c:	b	415668 <ascii_strlower_n@plt+0x11260>
  415910:	cbz	w10, 415818 <ascii_strlower_n@plt+0x11410>
  415914:	mov	w0, wzr
  415918:	bl	4039a8 <log_get_max_level_realm@plt>
  41591c:	cmp	w0, #0x7
  415920:	b.lt	4157cc <ascii_strlower_n@plt+0x113c4>  // b.tstop
  415924:	adrp	x2, 421000 <ascii_strlower_n@plt+0x1cbf8>
  415928:	adrp	x4, 422000 <ascii_strlower_n@plt+0x1dbf8>
  41592c:	adrp	x5, 422000 <ascii_strlower_n@plt+0x1dbf8>
  415930:	mov	w0, #0x7                   	// #7
  415934:	mov	w3, #0x8d6                 	// #2262
  415938:	mov	w1, wzr
  41593c:	add	x2, x2, #0xad6
  415940:	add	x4, x4, #0x63b
  415944:	add	x5, x5, #0x71c
  415948:	b	415668 <ascii_strlower_n@plt+0x11260>
  41594c:	mov	x24, xzr
  415950:	b	415984 <ascii_strlower_n@plt+0x1157c>
  415954:	mov	x24, xzr
  415958:	mov	w21, #0xfffffff4            	// #-12
  41595c:	b	415974 <ascii_strlower_n@plt+0x1156c>
  415960:	mov	x24, xzr
  415964:	ldr	x26, [sp, #8]
  415968:	cbz	x23, 415974 <ascii_strlower_n@plt+0x1156c>
  41596c:	mov	x0, x23
  415970:	bl	417208 <ascii_strlower_n@plt+0x12e00>
  415974:	cbz	x22, 415980 <ascii_strlower_n@plt+0x11578>
  415978:	mov	x0, x22
  41597c:	bl	419f8c <ascii_strlower_n@plt+0x15b84>
  415980:	tbnz	w21, #31, 4159a4 <ascii_strlower_n@plt+0x1159c>
  415984:	ldrb	w8, [x19, #160]
  415988:	mov	w21, wzr
  41598c:	stp	x20, x24, [x19, #72]
  415990:	orr	w8, w8, #0x2
  415994:	strb	w8, [x19, #160]
  415998:	mov	x24, xzr
  41599c:	mov	x20, xzr
  4159a0:	b	4159a8 <ascii_strlower_n@plt+0x115a0>
  4159a4:	cbz	x19, 4159c0 <ascii_strlower_n@plt+0x115b8>
  4159a8:	ldr	x8, [x19, #8]
  4159ac:	cmp	x8, x26
  4159b0:	b.cc	415a3c <ascii_strlower_n@plt+0x11634>  // b.lo, b.ul, b.last
  4159b4:	cmp	x26, #0xb
  4159b8:	b.ls	415a60 <ascii_strlower_n@plt+0x11658>  // b.plast
  4159bc:	str	x26, [x19, #24]
  4159c0:	cbz	x24, 4159cc <ascii_strlower_n@plt+0x115c4>
  4159c4:	mov	x0, x24
  4159c8:	bl	419f8c <ascii_strlower_n@plt+0x15b84>
  4159cc:	cbz	x20, 4159d8 <ascii_strlower_n@plt+0x115d0>
  4159d0:	mov	x0, x20
  4159d4:	bl	41bf84 <ascii_strlower_n@plt+0x17b7c>
  4159d8:	mov	w0, w21
  4159dc:	ldp	x20, x19, [sp, #112]
  4159e0:	ldp	x22, x21, [sp, #96]
  4159e4:	ldp	x24, x23, [sp, #80]
  4159e8:	ldp	x26, x25, [sp, #64]
  4159ec:	ldp	x28, x27, [sp, #48]
  4159f0:	ldp	x29, x30, [sp, #32]
  4159f4:	add	sp, sp, #0x80
  4159f8:	ret
  4159fc:	tbz	w26, #0, 415a24 <ascii_strlower_n@plt+0x1161c>
  415a00:	ldr	x0, [x19, #88]
  415a04:	bl	417208 <ascii_strlower_n@plt+0x12e00>
  415a08:	mov	w21, wzr
  415a0c:	str	x0, [x19, #88]
  415a10:	mov	x24, x22
  415a14:	mov	x22, xzr
  415a18:	ldr	x26, [sp, #8]
  415a1c:	cbnz	x23, 41596c <ascii_strlower_n@plt+0x11564>
  415a20:	b	415974 <ascii_strlower_n@plt+0x1156c>
  415a24:	mov	w21, wzr
  415a28:	mov	x24, x22
  415a2c:	mov	x22, xzr
  415a30:	ldr	x26, [sp, #8]
  415a34:	cbnz	x23, 41596c <ascii_strlower_n@plt+0x11564>
  415a38:	b	415974 <ascii_strlower_n@plt+0x1156c>
  415a3c:	adrp	x1, 422000 <ascii_strlower_n@plt+0x1dbf8>
  415a40:	adrp	x2, 421000 <ascii_strlower_n@plt+0x1cbf8>
  415a44:	adrp	x4, 422000 <ascii_strlower_n@plt+0x1dbf8>
  415a48:	add	x1, x1, #0x231
  415a4c:	add	x2, x2, #0xad6
  415a50:	add	x4, x4, #0x205
  415a54:	mov	w3, #0x4bd                 	// #1213
  415a58:	mov	w0, wzr
  415a5c:	bl	403a98 <log_assert_failed_realm@plt>
  415a60:	adrp	x1, 422000 <ascii_strlower_n@plt+0x1dbf8>
  415a64:	adrp	x2, 421000 <ascii_strlower_n@plt+0x1cbf8>
  415a68:	adrp	x4, 422000 <ascii_strlower_n@plt+0x1dbf8>
  415a6c:	add	x1, x1, #0x240
  415a70:	add	x2, x2, #0xad6
  415a74:	add	x4, x4, #0x205
  415a78:	mov	w3, #0x4be                 	// #1214
  415a7c:	mov	w0, wzr
  415a80:	bl	403a98 <log_assert_failed_realm@plt>
  415a84:	adrp	x1, 422000 <ascii_strlower_n@plt+0x1dbf8>
  415a88:	adrp	x2, 421000 <ascii_strlower_n@plt+0x1cbf8>
  415a8c:	adrp	x4, 422000 <ascii_strlower_n@plt+0x1dbf8>
  415a90:	add	x1, x1, #0x14e
  415a94:	add	x2, x2, #0xad6
  415a98:	add	x4, x4, #0x744
  415a9c:	mov	w3, #0x82b                 	// #2091
  415aa0:	bl	403a98 <log_assert_failed_realm@plt>
  415aa4:	adrp	x1, 422000 <ascii_strlower_n@plt+0x1dbf8>
  415aa8:	adrp	x2, 421000 <ascii_strlower_n@plt+0x1cbf8>
  415aac:	adrp	x4, 422000 <ascii_strlower_n@plt+0x1dbf8>
  415ab0:	add	x1, x1, #0x774
  415ab4:	add	x2, x2, #0xad6
  415ab8:	add	x4, x4, #0x744
  415abc:	mov	w3, #0x82c                 	// #2092
  415ac0:	mov	w0, wzr
  415ac4:	bl	403a98 <log_assert_failed_realm@plt>
  415ac8:	stp	x29, x30, [sp, #-32]!
  415acc:	stp	x20, x19, [sp, #16]
  415ad0:	mov	x29, sp
  415ad4:	cbz	x0, 415b44 <ascii_strlower_n@plt+0x1173c>
  415ad8:	mov	x19, x1
  415adc:	cbz	x1, 415b64 <ascii_strlower_n@plt+0x1175c>
  415ae0:	ldr	x8, [x0, #40]
  415ae4:	add	x9, x0, #0xa8
  415ae8:	mov	x20, x0
  415aec:	cmp	x8, #0x0
  415af0:	csel	x8, x9, x8, eq  // eq = none
  415af4:	ldrb	w8, [x8, #2]
  415af8:	tbnz	w8, #7, 415b04 <ascii_strlower_n@plt+0x116fc>
  415afc:	mov	w0, wzr
  415b00:	b	415b38 <ascii_strlower_n@plt+0x11730>
  415b04:	mov	x0, x20
  415b08:	bl	41539c <ascii_strlower_n@plt+0x10f94>
  415b0c:	tbnz	w0, #31, 415b38 <ascii_strlower_n@plt+0x11730>
  415b10:	ldr	x8, [x20, #72]
  415b14:	cbz	x8, 415afc <ascii_strlower_n@plt+0x116f4>
  415b18:	ldr	x9, [x8, #8]
  415b1c:	cmp	x9, #0x1
  415b20:	b.ne	415afc <ascii_strlower_n@plt+0x116f4>  // b.any
  415b24:	ldr	x0, [x8, #24]
  415b28:	mov	x1, x19
  415b2c:	ldp	x20, x19, [sp, #16]
  415b30:	ldp	x29, x30, [sp], #32
  415b34:	b	4164bc <ascii_strlower_n@plt+0x120b4>
  415b38:	ldp	x20, x19, [sp, #16]
  415b3c:	ldp	x29, x30, [sp], #32
  415b40:	ret
  415b44:	adrp	x1, 421000 <ascii_strlower_n@plt+0x1cbf8>
  415b48:	adrp	x2, 421000 <ascii_strlower_n@plt+0x1cbf8>
  415b4c:	adrp	x4, 422000 <ascii_strlower_n@plt+0x1dbf8>
  415b50:	add	x1, x1, #0xb90
  415b54:	add	x2, x2, #0xad6
  415b58:	add	x4, x4, #0x4bd
  415b5c:	mov	w3, #0x919                 	// #2329
  415b60:	bl	403a98 <log_assert_failed_realm@plt>
  415b64:	adrp	x1, 422000 <ascii_strlower_n@plt+0x1dbf8>
  415b68:	adrp	x2, 421000 <ascii_strlower_n@plt+0x1cbf8>
  415b6c:	adrp	x4, 422000 <ascii_strlower_n@plt+0x1dbf8>
  415b70:	add	x1, x1, #0x4fe
  415b74:	add	x2, x2, #0xad6
  415b78:	add	x4, x4, #0x4bd
  415b7c:	mov	w3, #0x91a                 	// #2330
  415b80:	mov	w0, wzr
  415b84:	bl	403a98 <log_assert_failed_realm@plt>
  415b88:	stp	x29, x30, [sp, #-32]!
  415b8c:	stp	x20, x19, [sp, #16]
  415b90:	mov	x29, sp
  415b94:	cbz	x0, 415bd4 <ascii_strlower_n@plt+0x117cc>
  415b98:	mov	x19, x1
  415b9c:	mov	x20, x0
  415ba0:	add	x0, x0, #0x8
  415ba4:	mov	w1, #0x8                   	// #8
  415ba8:	mov	x2, x19
  415bac:	bl	4041e8 <siphash24_compress@plt>
  415bb0:	ldr	x8, [x20, #40]
  415bb4:	ldr	x1, [x20, #8]
  415bb8:	add	x9, x20, #0xa8
  415bbc:	mov	x2, x19
  415bc0:	ldp	x20, x19, [sp, #16]
  415bc4:	cmp	x8, #0x0
  415bc8:	csel	x0, x9, x8, eq  // eq = none
  415bcc:	ldp	x29, x30, [sp], #32
  415bd0:	b	4041e8 <siphash24_compress@plt>
  415bd4:	adrp	x1, 41e000 <ascii_strlower_n@plt+0x19bf8>
  415bd8:	adrp	x2, 421000 <ascii_strlower_n@plt+0x1cbf8>
  415bdc:	adrp	x4, 422000 <ascii_strlower_n@plt+0x1dbf8>
  415be0:	add	x1, x1, #0x712
  415be4:	add	x2, x2, #0xad6
  415be8:	add	x4, x4, #0x792
  415bec:	mov	w3, #0x932                 	// #2354
  415bf0:	bl	403a98 <log_assert_failed_realm@plt>
  415bf4:	ldr	x2, [x0, #8]
  415bf8:	ldr	x8, [x1, #8]
  415bfc:	cmp	x2, x8
  415c00:	cset	w8, hi  // hi = pmore
  415c04:	csinv	w8, w8, wzr, cs  // cs = hs, nlast
  415c08:	cbz	w8, 415c14 <ascii_strlower_n@plt+0x1180c>
  415c0c:	mov	w0, w8
  415c10:	ret
  415c14:	ldr	x8, [x0, #40]
  415c18:	ldr	x10, [x1, #40]
  415c1c:	add	x9, x0, #0xa8
  415c20:	add	x11, x1, #0xa8
  415c24:	cmp	x8, #0x0
  415c28:	csel	x0, x9, x8, eq  // eq = none
  415c2c:	cmp	x10, #0x0
  415c30:	csel	x1, x11, x10, eq  // eq = none
  415c34:	b	4041f8 <memcmp@plt>
  415c38:	cmp	w0, #0x17
  415c3c:	b.ls	415c48 <ascii_strlower_n@plt+0x11840>  // b.plast
  415c40:	mov	x0, xzr
  415c44:	ret
  415c48:	adrp	x8, 43e000 <ascii_strlower_n@plt+0x39bf8>
  415c4c:	add	x8, x8, #0x2e0
  415c50:	ldr	x0, [x8, w0, uxtw #3]
  415c54:	ret
  415c58:	stp	x29, x30, [sp, #-16]!
  415c5c:	mov	x2, x0
  415c60:	adrp	x0, 43e000 <ascii_strlower_n@plt+0x39bf8>
  415c64:	add	x0, x0, #0x2e0
  415c68:	mov	w1, #0x18                  	// #24
  415c6c:	mov	x29, sp
  415c70:	bl	404208 <string_table_lookup@plt>
  415c74:	ldp	x29, x30, [sp], #16
  415c78:	ret
  415c7c:	cmp	w0, #0x2
  415c80:	b.ls	415c8c <ascii_strlower_n@plt+0x11884>  // b.plast
  415c84:	mov	x0, xzr
  415c88:	ret
  415c8c:	adrp	x8, 43e000 <ascii_strlower_n@plt+0x39bf8>
  415c90:	add	x8, x8, #0x3a0
  415c94:	ldr	x0, [x8, w0, uxtw #3]
  415c98:	ret
  415c9c:	stp	x29, x30, [sp, #-16]!
  415ca0:	mov	x2, x0
  415ca4:	adrp	x0, 43e000 <ascii_strlower_n@plt+0x39bf8>
  415ca8:	add	x0, x0, #0x3a0
  415cac:	mov	w1, #0x3                   	// #3
  415cb0:	mov	x29, sp
  415cb4:	bl	404208 <string_table_lookup@plt>
  415cb8:	ldp	x29, x30, [sp], #16
  415cbc:	ret
  415cc0:	stp	x29, x30, [sp, #-64]!
  415cc4:	str	x23, [sp, #16]
  415cc8:	stp	x22, x21, [sp, #32]
  415ccc:	stp	x20, x19, [sp, #48]
  415cd0:	mov	x29, sp
  415cd4:	cbz	x2, 415d34 <ascii_strlower_n@plt+0x1192c>
  415cd8:	mov	w21, w0
  415cdc:	mov	x0, x2
  415ce0:	mov	x19, x2
  415ce4:	mov	w20, w1
  415ce8:	bl	403d28 <strlen@plt>
  415cec:	add	x1, x0, #0x11
  415cf0:	mov	w0, #0x1                   	// #1
  415cf4:	mov	w23, #0x1                   	// #1
  415cf8:	bl	404068 <calloc@plt>
  415cfc:	mov	x22, x0
  415d00:	cbz	x0, 415d1c <ascii_strlower_n@plt+0x11914>
  415d04:	add	x0, x22, #0x10
  415d08:	mov	x1, x19
  415d0c:	str	w23, [x22]
  415d10:	strh	w21, [x22, #4]
  415d14:	strh	w20, [x22, #6]
  415d18:	bl	404218 <strcpy@plt>
  415d1c:	mov	x0, x22
  415d20:	ldp	x20, x19, [sp, #48]
  415d24:	ldp	x22, x21, [sp, #32]
  415d28:	ldr	x23, [sp, #16]
  415d2c:	ldp	x29, x30, [sp], #64
  415d30:	ret
  415d34:	adrp	x1, 420000 <ascii_strlower_n@plt+0x1bbf8>
  415d38:	adrp	x2, 422000 <ascii_strlower_n@plt+0x1dbf8>
  415d3c:	adrp	x4, 422000 <ascii_strlower_n@plt+0x1dbf8>
  415d40:	add	x1, x1, #0x89f
  415d44:	add	x2, x2, #0x86e
  415d48:	add	x4, x4, #0x88c
  415d4c:	mov	w3, #0x17                  	// #23
  415d50:	mov	w0, wzr
  415d54:	bl	403a98 <log_assert_failed_realm@plt>
  415d58:	stp	x29, x30, [sp, #-64]!
  415d5c:	str	x23, [sp, #16]
  415d60:	stp	x22, x21, [sp, #32]
  415d64:	stp	x20, x19, [sp, #48]
  415d68:	mov	x29, sp
  415d6c:	cbz	x0, 415ed4 <ascii_strlower_n@plt+0x11acc>
  415d70:	mov	x20, x1
  415d74:	cbz	x1, 415ef4 <ascii_strlower_n@plt+0x11aec>
  415d78:	ldr	x8, [x20, #8]
  415d7c:	mov	x19, x0
  415d80:	ldrh	w8, [x8, #6]
  415d84:	cmp	w8, #0x5
  415d88:	b.eq	415dec <ascii_strlower_n@plt+0x119e4>  // b.none
  415d8c:	cmp	w8, #0x27
  415d90:	b.ne	415f18 <ascii_strlower_n@plt+0x11b10>  // b.any
  415d94:	str	xzr, [x29, #24]
  415d98:	ldr	x8, [x19, #8]
  415d9c:	add	x9, x19, #0x10
  415da0:	cmp	x8, #0x0
  415da4:	csel	x21, x9, x8, eq  // eq = none
  415da8:	mov	x0, x21
  415dac:	bl	4040e8 <dns_name_is_root@plt>
  415db0:	ldr	x8, [x20, #8]
  415db4:	adrp	x23, 422000 <ascii_strlower_n@plt+0x1dbf8>
  415db8:	add	x23, x23, #0xaa1
  415dbc:	tst	w0, #0x1
  415dc0:	csel	x21, x23, x21, ne  // ne = any
  415dc4:	cbz	x8, 415e38 <ascii_strlower_n@plt+0x11a30>
  415dc8:	ldr	x9, [x8, #8]
  415dcc:	add	x8, x8, #0x10
  415dd0:	cmp	x9, #0x0
  415dd4:	csel	x22, x8, x9, eq  // eq = none
  415dd8:	mov	x0, x22
  415ddc:	bl	4040e8 <dns_name_is_root@plt>
  415de0:	tst	w0, #0x1
  415de4:	csel	x1, x23, x22, ne  // ne = any
  415de8:	b	415e3c <ascii_strlower_n@plt+0x11a34>
  415dec:	ldr	x20, [x20, #80]
  415df0:	cbz	x20, 415f3c <ascii_strlower_n@plt+0x11b34>
  415df4:	ldrh	w21, [x19, #4]
  415df8:	ldrh	w22, [x19, #6]
  415dfc:	mov	x0, x20
  415e00:	bl	403d28 <strlen@plt>
  415e04:	add	x1, x0, #0x11
  415e08:	mov	w0, #0x1                   	// #1
  415e0c:	mov	w23, #0x1                   	// #1
  415e10:	bl	404068 <calloc@plt>
  415e14:	mov	x19, x0
  415e18:	cbz	x0, 415ebc <ascii_strlower_n@plt+0x11ab4>
  415e1c:	add	x0, x19, #0x10
  415e20:	mov	x1, x20
  415e24:	str	w23, [x19]
  415e28:	strh	w21, [x19, #4]
  415e2c:	strh	w22, [x19, #6]
  415e30:	bl	404218 <strcpy@plt>
  415e34:	b	415ebc <ascii_strlower_n@plt+0x11ab4>
  415e38:	mov	x1, xzr
  415e3c:	ldr	x2, [x20, #80]
  415e40:	add	x3, x29, #0x18
  415e44:	mov	x0, x21
  415e48:	bl	404228 <dns_name_change_suffix@plt>
  415e4c:	tbnz	w0, #31, 415e90 <ascii_strlower_n@plt+0x11a88>
  415e50:	cbz	w0, 415e98 <ascii_strlower_n@plt+0x11a90>
  415e54:	ldr	x20, [x29, #24]
  415e58:	cbz	x20, 415f60 <ascii_strlower_n@plt+0x11b58>
  415e5c:	ldrh	w21, [x19, #4]
  415e60:	ldrh	w22, [x19, #6]
  415e64:	mov	w0, #0x1                   	// #1
  415e68:	mov	w1, #0x10                  	// #16
  415e6c:	mov	w23, #0x1                   	// #1
  415e70:	bl	404068 <calloc@plt>
  415e74:	mov	x19, x0
  415e78:	cbz	x0, 415eb4 <ascii_strlower_n@plt+0x11aac>
  415e7c:	str	w23, [x19]
  415e80:	strh	w21, [x19, #4]
  415e84:	strh	w22, [x19, #6]
  415e88:	str	x20, [x19, #8]
  415e8c:	b	415ebc <ascii_strlower_n@plt+0x11ab4>
  415e90:	mov	x19, xzr
  415e94:	b	415ebc <ascii_strlower_n@plt+0x11ab4>
  415e98:	ldr	w8, [x19]
  415e9c:	cbz	w8, 415f84 <ascii_strlower_n@plt+0x11b7c>
  415ea0:	cmn	w8, #0x1
  415ea4:	b.eq	415fa8 <ascii_strlower_n@plt+0x11ba0>  // b.none
  415ea8:	add	w8, w8, #0x1
  415eac:	str	w8, [x19]
  415eb0:	b	415ebc <ascii_strlower_n@plt+0x11ab4>
  415eb4:	mov	x0, x20
  415eb8:	bl	4039d8 <free@plt>
  415ebc:	mov	x0, x19
  415ec0:	ldp	x20, x19, [sp, #48]
  415ec4:	ldp	x22, x21, [sp, #32]
  415ec8:	ldr	x23, [sp, #16]
  415ecc:	ldp	x29, x30, [sp], #64
  415ed0:	ret
  415ed4:	adrp	x1, 422000 <ascii_strlower_n@plt+0x1dbf8>
  415ed8:	adrp	x2, 422000 <ascii_strlower_n@plt+0x1dbf8>
  415edc:	adrp	x4, 422000 <ascii_strlower_n@plt+0x1dbf8>
  415ee0:	add	x1, x1, #0x4fe
  415ee4:	add	x2, x2, #0x86e
  415ee8:	add	x4, x4, #0x8d3
  415eec:	mov	w3, #0x2a                  	// #42
  415ef0:	bl	403a98 <log_assert_failed_realm@plt>
  415ef4:	adrp	x1, 41e000 <ascii_strlower_n@plt+0x19bf8>
  415ef8:	adrp	x2, 422000 <ascii_strlower_n@plt+0x1dbf8>
  415efc:	adrp	x4, 422000 <ascii_strlower_n@plt+0x1dbf8>
  415f00:	add	x1, x1, #0x860
  415f04:	add	x2, x2, #0x86e
  415f08:	add	x4, x4, #0x8d3
  415f0c:	mov	w3, #0x2b                  	// #43
  415f10:	mov	w0, wzr
  415f14:	bl	403a98 <log_assert_failed_realm@plt>
  415f18:	adrp	x1, 422000 <ascii_strlower_n@plt+0x1dbf8>
  415f1c:	adrp	x2, 422000 <ascii_strlower_n@plt+0x1dbf8>
  415f20:	adrp	x4, 422000 <ascii_strlower_n@plt+0x1dbf8>
  415f24:	add	x1, x1, #0x934
  415f28:	add	x2, x2, #0x86e
  415f2c:	add	x4, x4, #0x8d3
  415f30:	mov	w3, #0x2d                  	// #45
  415f34:	mov	w0, wzr
  415f38:	bl	403a98 <log_assert_failed_realm@plt>
  415f3c:	adrp	x1, 420000 <ascii_strlower_n@plt+0x1bbf8>
  415f40:	adrp	x2, 422000 <ascii_strlower_n@plt+0x1dbf8>
  415f44:	adrp	x4, 422000 <ascii_strlower_n@plt+0x1dbf8>
  415f48:	add	x1, x1, #0x89f
  415f4c:	add	x2, x2, #0x86e
  415f50:	add	x4, x4, #0x88c
  415f54:	mov	w3, #0x17                  	// #23
  415f58:	mov	w0, wzr
  415f5c:	bl	403a98 <log_assert_failed_realm@plt>
  415f60:	adrp	x1, 420000 <ascii_strlower_n@plt+0x1bbf8>
  415f64:	adrp	x2, 422000 <ascii_strlower_n@plt+0x1dbf8>
  415f68:	adrp	x4, 422000 <ascii_strlower_n@plt+0x1dbf8>
  415f6c:	add	x1, x1, #0x89f
  415f70:	add	x2, x2, #0x86e
  415f74:	add	x4, x4, #0x9c1
  415f78:	mov	w3, #0x62                  	// #98
  415f7c:	mov	w0, wzr
  415f80:	bl	403a98 <log_assert_failed_realm@plt>
  415f84:	adrp	x1, 422000 <ascii_strlower_n@plt+0x1dbf8>
  415f88:	adrp	x2, 422000 <ascii_strlower_n@plt+0x1dbf8>
  415f8c:	adrp	x4, 422000 <ascii_strlower_n@plt+0x1dbf8>
  415f90:	add	x1, x1, #0xa5b
  415f94:	add	x2, x2, #0x86e
  415f98:	add	x4, x4, #0xa24
  415f9c:	mov	w3, #0x79                  	// #121
  415fa0:	mov	w0, wzr
  415fa4:	bl	403a98 <log_assert_failed_realm@plt>
  415fa8:	adrp	x1, 422000 <ascii_strlower_n@plt+0x1dbf8>
  415fac:	adrp	x2, 422000 <ascii_strlower_n@plt+0x1dbf8>
  415fb0:	adrp	x4, 422000 <ascii_strlower_n@plt+0x1dbf8>
  415fb4:	add	x1, x1, #0xa0a
  415fb8:	add	x2, x2, #0x86e
  415fbc:	add	x4, x4, #0xa24
  415fc0:	mov	w3, #0x77                  	// #119
  415fc4:	mov	w0, wzr
  415fc8:	bl	403a98 <log_assert_failed_realm@plt>
  415fcc:	cbz	x0, 41600c <ascii_strlower_n@plt+0x11c04>
  415fd0:	stp	x29, x30, [sp, #-32]!
  415fd4:	ldr	x8, [x0, #8]
  415fd8:	add	x9, x0, #0x10
  415fdc:	str	x19, [sp, #16]
  415fe0:	mov	x29, sp
  415fe4:	cmp	x8, #0x0
  415fe8:	csel	x19, x9, x8, eq  // eq = none
  415fec:	mov	x0, x19
  415ff0:	bl	4040e8 <dns_name_is_root@plt>
  415ff4:	adrp	x8, 422000 <ascii_strlower_n@plt+0x1dbf8>
  415ff8:	add	x8, x8, #0xaa1
  415ffc:	tst	w0, #0x1
  416000:	csel	x0, x8, x19, ne  // ne = any
  416004:	ldr	x19, [sp, #16]
  416008:	ldp	x29, x30, [sp], #32
  41600c:	ret
  416010:	stp	x29, x30, [sp, #-16]!
  416014:	mov	x29, sp
  416018:	cbz	x0, 416034 <ascii_strlower_n@plt+0x11c2c>
  41601c:	ldr	w8, [x0]
  416020:	cbz	w8, 41603c <ascii_strlower_n@plt+0x11c34>
  416024:	cmn	w8, #0x1
  416028:	b.eq	416060 <ascii_strlower_n@plt+0x11c58>  // b.none
  41602c:	add	w8, w8, #0x1
  416030:	str	w8, [x0]
  416034:	ldp	x29, x30, [sp], #16
  416038:	ret
  41603c:	adrp	x1, 422000 <ascii_strlower_n@plt+0x1dbf8>
  416040:	adrp	x2, 422000 <ascii_strlower_n@plt+0x1dbf8>
  416044:	adrp	x4, 422000 <ascii_strlower_n@plt+0x1dbf8>
  416048:	add	x1, x1, #0xa5b
  41604c:	add	x2, x2, #0x86e
  416050:	add	x4, x4, #0xa24
  416054:	mov	w3, #0x79                  	// #121
  416058:	mov	w0, wzr
  41605c:	bl	403a98 <log_assert_failed_realm@plt>
  416060:	adrp	x1, 422000 <ascii_strlower_n@plt+0x1dbf8>
  416064:	adrp	x2, 422000 <ascii_strlower_n@plt+0x1dbf8>
  416068:	adrp	x4, 422000 <ascii_strlower_n@plt+0x1dbf8>
  41606c:	add	x1, x1, #0xa0a
  416070:	add	x2, x2, #0x86e
  416074:	add	x4, x4, #0xa24
  416078:	mov	w3, #0x77                  	// #119
  41607c:	mov	w0, wzr
  416080:	bl	403a98 <log_assert_failed_realm@plt>
  416084:	stp	x29, x30, [sp, #-48]!
  416088:	stp	x22, x21, [sp, #16]
  41608c:	stp	x20, x19, [sp, #32]
  416090:	mov	x29, sp
  416094:	cbz	x2, 4160d8 <ascii_strlower_n@plt+0x11cd0>
  416098:	mov	w20, w1
  41609c:	mov	w21, w0
  4160a0:	mov	w0, #0x1                   	// #1
  4160a4:	mov	w1, #0x10                  	// #16
  4160a8:	mov	x19, x2
  4160ac:	mov	w22, #0x1                   	// #1
  4160b0:	bl	404068 <calloc@plt>
  4160b4:	cbz	x0, 4160c8 <ascii_strlower_n@plt+0x11cc0>
  4160b8:	str	w22, [x0]
  4160bc:	strh	w21, [x0, #4]
  4160c0:	strh	w20, [x0, #6]
  4160c4:	str	x19, [x0, #8]
  4160c8:	ldp	x20, x19, [sp, #32]
  4160cc:	ldp	x22, x21, [sp, #16]
  4160d0:	ldp	x29, x30, [sp], #48
  4160d4:	ret
  4160d8:	adrp	x1, 420000 <ascii_strlower_n@plt+0x1bbf8>
  4160dc:	adrp	x2, 422000 <ascii_strlower_n@plt+0x1dbf8>
  4160e0:	adrp	x4, 422000 <ascii_strlower_n@plt+0x1dbf8>
  4160e4:	add	x1, x1, #0x89f
  4160e8:	add	x2, x2, #0x86e
  4160ec:	add	x4, x4, #0x9c1
  4160f0:	mov	w3, #0x62                  	// #98
  4160f4:	mov	w0, wzr
  4160f8:	bl	403a98 <log_assert_failed_realm@plt>
  4160fc:	stp	x29, x30, [sp, #-64]!
  416100:	str	x23, [sp, #16]
  416104:	stp	x22, x21, [sp, #32]
  416108:	stp	x20, x19, [sp, #48]
  41610c:	mov	x29, sp
  416110:	cbz	x0, 4161f8 <ascii_strlower_n@plt+0x11df0>
  416114:	mov	x20, x1
  416118:	cbz	x1, 416218 <ascii_strlower_n@plt+0x11e10>
  41611c:	mov	x21, x2
  416120:	cbz	x2, 41623c <ascii_strlower_n@plt+0x11e34>
  416124:	mov	x19, x0
  416128:	mov	x0, x21
  41612c:	bl	4040e8 <dns_name_is_root@plt>
  416130:	tbz	w0, #0, 416158 <ascii_strlower_n@plt+0x11d50>
  416134:	ldr	w8, [x20]
  416138:	cbz	w8, 416260 <ascii_strlower_n@plt+0x11e58>
  41613c:	cmn	w8, #0x1
  416140:	b.eq	416284 <ascii_strlower_n@plt+0x11e7c>  // b.none
  416144:	add	w8, w8, #0x1
  416148:	mov	w0, wzr
  41614c:	str	w8, [x20]
  416150:	str	x20, [x19]
  416154:	b	4161e4 <ascii_strlower_n@plt+0x11ddc>
  416158:	ldr	x8, [x20, #8]
  41615c:	add	x9, x20, #0x10
  416160:	cmp	x8, #0x0
  416164:	csel	x22, x9, x8, eq  // eq = none
  416168:	mov	x0, x22
  41616c:	bl	4040e8 <dns_name_is_root@plt>
  416170:	adrp	x8, 422000 <ascii_strlower_n@plt+0x1dbf8>
  416174:	add	x8, x8, #0xaa1
  416178:	tst	w0, #0x1
  41617c:	csel	x0, x8, x22, ne  // ne = any
  416180:	add	x3, x29, #0x18
  416184:	mov	x1, x21
  416188:	mov	w2, wzr
  41618c:	bl	403df8 <dns_name_concat@plt>
  416190:	tbnz	w0, #31, 4161e4 <ascii_strlower_n@plt+0x11ddc>
  416194:	ldr	x21, [x29, #24]
  416198:	cbz	x21, 4162a8 <ascii_strlower_n@plt+0x11ea0>
  41619c:	ldrh	w22, [x20, #4]
  4161a0:	ldrh	w20, [x20, #6]
  4161a4:	mov	w0, #0x1                   	// #1
  4161a8:	mov	w1, #0x10                  	// #16
  4161ac:	mov	w23, #0x1                   	// #1
  4161b0:	bl	404068 <calloc@plt>
  4161b4:	cbz	x0, 4161d8 <ascii_strlower_n@plt+0x11dd0>
  4161b8:	mov	x8, x0
  4161bc:	mov	w0, wzr
  4161c0:	str	w23, [x8]
  4161c4:	strh	w22, [x8, #4]
  4161c8:	strh	w20, [x8, #6]
  4161cc:	str	x21, [x8, #8]
  4161d0:	str	x8, [x19]
  4161d4:	b	4161e4 <ascii_strlower_n@plt+0x11ddc>
  4161d8:	mov	x0, x21
  4161dc:	bl	4039d8 <free@plt>
  4161e0:	mov	w0, #0xfffffff4            	// #-12
  4161e4:	ldp	x20, x19, [sp, #48]
  4161e8:	ldp	x22, x21, [sp, #32]
  4161ec:	ldr	x23, [sp, #16]
  4161f0:	ldp	x29, x30, [sp], #64
  4161f4:	ret
  4161f8:	adrp	x1, 420000 <ascii_strlower_n@plt+0x1bbf8>
  4161fc:	adrp	x2, 422000 <ascii_strlower_n@plt+0x1dbf8>
  416200:	adrp	x4, 422000 <ascii_strlower_n@plt+0x1dbf8>
  416204:	add	x1, x1, #0x41e
  416208:	add	x2, x2, #0x86e
  41620c:	add	x4, x4, #0x96d
  416210:	mov	w3, #0x48                  	// #72
  416214:	bl	403a98 <log_assert_failed_realm@plt>
  416218:	adrp	x1, 422000 <ascii_strlower_n@plt+0x1dbf8>
  41621c:	adrp	x2, 422000 <ascii_strlower_n@plt+0x1dbf8>
  416220:	adrp	x4, 422000 <ascii_strlower_n@plt+0x1dbf8>
  416224:	add	x1, x1, #0x4fe
  416228:	add	x2, x2, #0x86e
  41622c:	add	x4, x4, #0x96d
  416230:	mov	w3, #0x49                  	// #73
  416234:	mov	w0, wzr
  416238:	bl	403a98 <log_assert_failed_realm@plt>
  41623c:	adrp	x1, 420000 <ascii_strlower_n@plt+0x1bbf8>
  416240:	adrp	x2, 422000 <ascii_strlower_n@plt+0x1dbf8>
  416244:	adrp	x4, 422000 <ascii_strlower_n@plt+0x1dbf8>
  416248:	add	x1, x1, #0x89f
  41624c:	add	x2, x2, #0x86e
  416250:	add	x4, x4, #0x96d
  416254:	mov	w3, #0x4a                  	// #74
  416258:	mov	w0, wzr
  41625c:	bl	403a98 <log_assert_failed_realm@plt>
  416260:	adrp	x1, 422000 <ascii_strlower_n@plt+0x1dbf8>
  416264:	adrp	x2, 422000 <ascii_strlower_n@plt+0x1dbf8>
  416268:	adrp	x4, 422000 <ascii_strlower_n@plt+0x1dbf8>
  41626c:	add	x1, x1, #0xa5b
  416270:	add	x2, x2, #0x86e
  416274:	add	x4, x4, #0xa24
  416278:	mov	w3, #0x79                  	// #121
  41627c:	mov	w0, wzr
  416280:	bl	403a98 <log_assert_failed_realm@plt>
  416284:	adrp	x1, 422000 <ascii_strlower_n@plt+0x1dbf8>
  416288:	adrp	x2, 422000 <ascii_strlower_n@plt+0x1dbf8>
  41628c:	adrp	x4, 422000 <ascii_strlower_n@plt+0x1dbf8>
  416290:	add	x1, x1, #0xa0a
  416294:	add	x2, x2, #0x86e
  416298:	add	x4, x4, #0xa24
  41629c:	mov	w3, #0x77                  	// #119
  4162a0:	mov	w0, wzr
  4162a4:	bl	403a98 <log_assert_failed_realm@plt>
  4162a8:	adrp	x1, 420000 <ascii_strlower_n@plt+0x1bbf8>
  4162ac:	adrp	x2, 422000 <ascii_strlower_n@plt+0x1dbf8>
  4162b0:	adrp	x4, 422000 <ascii_strlower_n@plt+0x1dbf8>
  4162b4:	add	x1, x1, #0x89f
  4162b8:	add	x2, x2, #0x86e
  4162bc:	add	x4, x4, #0x9c1
  4162c0:	mov	w3, #0x62                  	// #98
  4162c4:	mov	w0, wzr
  4162c8:	bl	403a98 <log_assert_failed_realm@plt>
  4162cc:	stp	x29, x30, [sp, #-32]!
  4162d0:	str	x19, [sp, #16]
  4162d4:	mov	x29, sp
  4162d8:	cbz	x0, 4162fc <ascii_strlower_n@plt+0x11ef4>
  4162dc:	ldr	w9, [x0]
  4162e0:	mov	x19, x0
  4162e4:	subs	w8, w9, #0x1
  4162e8:	b.eq	41630c <ascii_strlower_n@plt+0x11f04>  // b.none
  4162ec:	cbz	w9, 41632c <ascii_strlower_n@plt+0x11f24>
  4162f0:	cmn	w9, #0x1
  4162f4:	b.eq	416350 <ascii_strlower_n@plt+0x11f48>  // b.none
  4162f8:	str	w8, [x19]
  4162fc:	ldr	x19, [sp, #16]
  416300:	mov	x0, xzr
  416304:	ldp	x29, x30, [sp], #32
  416308:	ret
  41630c:	ldr	x0, [x19, #8]
  416310:	bl	4039d8 <free@plt>
  416314:	mov	x0, x19
  416318:	bl	4039d8 <free@plt>
  41631c:	ldr	x19, [sp, #16]
  416320:	mov	x0, xzr
  416324:	ldp	x29, x30, [sp], #32
  416328:	ret
  41632c:	adrp	x1, 422000 <ascii_strlower_n@plt+0x1dbf8>
  416330:	adrp	x2, 422000 <ascii_strlower_n@plt+0x1dbf8>
  416334:	adrp	x4, 422000 <ascii_strlower_n@plt+0x1dbf8>
  416338:	add	x1, x1, #0xa5b
  41633c:	add	x2, x2, #0x86e
  416340:	add	x4, x4, #0xa68
  416344:	mov	w3, #0x84                  	// #132
  416348:	mov	w0, wzr
  41634c:	bl	403a98 <log_assert_failed_realm@plt>
  416350:	adrp	x1, 422000 <ascii_strlower_n@plt+0x1dbf8>
  416354:	adrp	x2, 422000 <ascii_strlower_n@plt+0x1dbf8>
  416358:	adrp	x4, 422000 <ascii_strlower_n@plt+0x1dbf8>
  41635c:	add	x1, x1, #0xa0a
  416360:	add	x2, x2, #0x86e
  416364:	add	x4, x4, #0xa68
  416368:	mov	w3, #0x83                  	// #131
  41636c:	mov	w0, wzr
  416370:	bl	403a98 <log_assert_failed_realm@plt>
  416374:	stp	x29, x30, [sp, #-16]!
  416378:	mov	x29, sp
  41637c:	cbz	x0, 4163b8 <ascii_strlower_n@plt+0x11fb0>
  416380:	ldrh	w8, [x0, #4]
  416384:	cmp	w8, #0x1
  416388:	b.ne	4163ac <ascii_strlower_n@plt+0x11fa4>  // b.any
  41638c:	ldrh	w8, [x0, #6]
  416390:	cmp	w8, #0x1c
  416394:	b.eq	4163a0 <ascii_strlower_n@plt+0x11f98>  // b.none
  416398:	cmp	w8, #0x1
  41639c:	b.ne	4163ac <ascii_strlower_n@plt+0x11fa4>  // b.any
  4163a0:	mov	w0, #0x1                   	// #1
  4163a4:	ldp	x29, x30, [sp], #16
  4163a8:	ret
  4163ac:	mov	w0, wzr
  4163b0:	ldp	x29, x30, [sp], #16
  4163b4:	ret
  4163b8:	adrp	x1, 422000 <ascii_strlower_n@plt+0x1dbf8>
  4163bc:	adrp	x2, 422000 <ascii_strlower_n@plt+0x1dbf8>
  4163c0:	adrp	x4, 422000 <ascii_strlower_n@plt+0x1dbf8>
  4163c4:	add	x1, x1, #0x4fe
  4163c8:	add	x2, x2, #0x86e
  4163cc:	add	x4, x4, #0xaa3
  4163d0:	mov	w3, #0xa1                  	// #161
  4163d4:	bl	403a98 <log_assert_failed_realm@plt>
  4163d8:	stp	x29, x30, [sp, #-48]!
  4163dc:	stp	x22, x21, [sp, #16]
  4163e0:	stp	x20, x19, [sp, #32]
  4163e4:	mov	x29, sp
  4163e8:	cbz	x0, 41649c <ascii_strlower_n@plt+0x12094>
  4163ec:	ldrh	w8, [x0, #6]
  4163f0:	mov	x19, x0
  4163f4:	cmp	w8, #0xc
  4163f8:	b.ne	416448 <ascii_strlower_n@plt+0x12040>  // b.any
  4163fc:	ldr	x8, [x19, #8]
  416400:	add	x21, x19, #0x10
  416404:	cmp	x8, #0x0
  416408:	csel	x20, x21, x8, eq  // eq = none
  41640c:	mov	x0, x20
  416410:	bl	4040e8 <dns_name_is_root@plt>
  416414:	adrp	x22, 422000 <ascii_strlower_n@plt+0x1dbf8>
  416418:	add	x22, x22, #0xaa1
  41641c:	tst	w0, #0x1
  416420:	adrp	x1, 422000 <ascii_strlower_n@plt+0x1dbf8>
  416424:	csel	x0, x22, x20, ne  // ne = any
  416428:	add	x1, x1, #0xb19
  41642c:	bl	404238 <dns_name_endswith@plt>
  416430:	cbz	w0, 41645c <ascii_strlower_n@plt+0x12054>
  416434:	mov	w0, #0x1                   	// #1
  416438:	ldp	x20, x19, [sp, #32]
  41643c:	ldp	x22, x21, [sp, #16]
  416440:	ldp	x29, x30, [sp], #48
  416444:	ret
  416448:	mov	w0, wzr
  41644c:	ldp	x20, x19, [sp, #32]
  416450:	ldp	x22, x21, [sp, #16]
  416454:	ldp	x29, x30, [sp], #48
  416458:	ret
  41645c:	ldr	x8, [x19, #8]
  416460:	cmp	x8, #0x0
  416464:	csel	x19, x21, x8, eq  // eq = none
  416468:	mov	x0, x19
  41646c:	bl	4040e8 <dns_name_is_root@plt>
  416470:	tst	w0, #0x1
  416474:	adrp	x1, 422000 <ascii_strlower_n@plt+0x1dbf8>
  416478:	csel	x0, x22, x19, ne  // ne = any
  41647c:	add	x1, x1, #0xb24
  416480:	bl	404238 <dns_name_endswith@plt>
  416484:	cmp	w0, #0x0
  416488:	cset	w0, ne  // ne = any
  41648c:	ldp	x20, x19, [sp, #32]
  416490:	ldp	x22, x21, [sp, #16]
  416494:	ldp	x29, x30, [sp], #48
  416498:	ret
  41649c:	adrp	x1, 422000 <ascii_strlower_n@plt+0x1dbf8>
  4164a0:	adrp	x2, 422000 <ascii_strlower_n@plt+0x1dbf8>
  4164a4:	adrp	x4, 422000 <ascii_strlower_n@plt+0x1dbf8>
  4164a8:	add	x1, x1, #0x4fe
  4164ac:	add	x2, x2, #0x86e
  4164b0:	add	x4, x4, #0xadd
  4164b4:	mov	w3, #0xa9                  	// #169
  4164b8:	bl	403a98 <log_assert_failed_realm@plt>
  4164bc:	stp	x29, x30, [sp, #-64]!
  4164c0:	cmp	x0, x1
  4164c4:	str	x23, [sp, #16]
  4164c8:	stp	x22, x21, [sp, #32]
  4164cc:	stp	x20, x19, [sp, #48]
  4164d0:	mov	x29, sp
  4164d4:	b.eq	416544 <ascii_strlower_n@plt+0x1213c>  // b.none
  4164d8:	adrp	x23, 422000 <ascii_strlower_n@plt+0x1dbf8>
  4164dc:	mov	x19, x1
  4164e0:	mov	x20, x0
  4164e4:	add	x23, x23, #0xaa1
  4164e8:	cbz	x0, 41654c <ascii_strlower_n@plt+0x12144>
  4164ec:	ldr	x8, [x20, #8]
  4164f0:	add	x9, x20, #0x10
  4164f4:	cmp	x8, #0x0
  4164f8:	csel	x21, x9, x8, eq  // eq = none
  4164fc:	mov	x0, x21
  416500:	bl	4040e8 <dns_name_is_root@plt>
  416504:	tst	w0, #0x1
  416508:	csel	x21, x23, x21, ne  // ne = any
  41650c:	cbz	x19, 416554 <ascii_strlower_n@plt+0x1214c>
  416510:	ldr	x8, [x19, #8]
  416514:	add	x9, x19, #0x10
  416518:	cmp	x8, #0x0
  41651c:	csel	x22, x9, x8, eq  // eq = none
  416520:	mov	x0, x22
  416524:	bl	4040e8 <dns_name_is_root@plt>
  416528:	tst	w0, #0x1
  41652c:	csel	x1, x23, x22, ne  // ne = any
  416530:	mov	x0, x21
  416534:	bl	404248 <dns_name_equal@plt>
  416538:	cmp	w0, #0x1
  41653c:	b.ge	416568 <ascii_strlower_n@plt+0x12160>  // b.tcont
  416540:	b	416590 <ascii_strlower_n@plt+0x12188>
  416544:	mov	w0, #0x1                   	// #1
  416548:	b	416590 <ascii_strlower_n@plt+0x12188>
  41654c:	mov	x21, xzr
  416550:	cbnz	x19, 416510 <ascii_strlower_n@plt+0x12108>
  416554:	mov	x1, xzr
  416558:	mov	x0, x21
  41655c:	bl	404248 <dns_name_equal@plt>
  416560:	cmp	w0, #0x1
  416564:	b.lt	416590 <ascii_strlower_n@plt+0x12188>  // b.tstop
  416568:	ldrh	w8, [x20, #4]
  41656c:	ldrh	w9, [x19, #4]
  416570:	cmp	w8, w9
  416574:	b.ne	41658c <ascii_strlower_n@plt+0x12184>  // b.any
  416578:	ldrh	w8, [x20, #6]
  41657c:	ldrh	w9, [x19, #6]
  416580:	cmp	w8, w9
  416584:	cset	w0, eq  // eq = none
  416588:	b	416590 <ascii_strlower_n@plt+0x12188>
  41658c:	mov	w0, wzr
  416590:	ldp	x20, x19, [sp, #48]
  416594:	ldp	x22, x21, [sp, #32]
  416598:	ldr	x23, [sp, #16]
  41659c:	ldp	x29, x30, [sp], #64
  4165a0:	ret
  4165a4:	stp	x29, x30, [sp, #-80]!
  4165a8:	str	x25, [sp, #16]
  4165ac:	stp	x24, x23, [sp, #32]
  4165b0:	stp	x22, x21, [sp, #48]
  4165b4:	stp	x20, x19, [sp, #64]
  4165b8:	mov	x29, sp
  4165bc:	cbz	x0, 41670c <ascii_strlower_n@plt+0x12304>
  4165c0:	mov	x19, x1
  4165c4:	cbz	x1, 41672c <ascii_strlower_n@plt+0x12324>
  4165c8:	ldr	x8, [x19, #8]
  4165cc:	mov	x21, x0
  4165d0:	cmp	x8, x0
  4165d4:	b.eq	416614 <ascii_strlower_n@plt+0x1220c>  // b.none
  4165d8:	ldrh	w10, [x8, #4]
  4165dc:	ldrh	w9, [x21, #4]
  4165e0:	mov	x20, x2
  4165e4:	cmp	w10, w9
  4165e8:	b.eq	4165f4 <ascii_strlower_n@plt+0x121ec>  // b.none
  4165ec:	cmp	w9, #0xff
  4165f0:	b.ne	41660c <ascii_strlower_n@plt+0x12204>  // b.any
  4165f4:	ldrh	w10, [x8, #6]
  4165f8:	ldrh	w9, [x21, #6]
  4165fc:	cmp	w10, w9
  416600:	b.eq	41661c <ascii_strlower_n@plt+0x12214>  // b.none
  416604:	cmp	w9, #0xff
  416608:	b.eq	41661c <ascii_strlower_n@plt+0x12214>  // b.none
  41660c:	mov	w22, wzr
  416610:	b	4166f0 <ascii_strlower_n@plt+0x122e8>
  416614:	mov	w22, #0x1                   	// #1
  416618:	b	4166f0 <ascii_strlower_n@plt+0x122e8>
  41661c:	ldr	x9, [x8, #8]
  416620:	add	x8, x8, #0x10
  416624:	cmp	x9, #0x0
  416628:	csel	x22, x8, x9, eq  // eq = none
  41662c:	mov	x0, x22
  416630:	bl	4040e8 <dns_name_is_root@plt>
  416634:	ldr	x8, [x21, #8]
  416638:	adrp	x24, 422000 <ascii_strlower_n@plt+0x1dbf8>
  41663c:	add	x24, x24, #0xaa1
  416640:	tst	w0, #0x1
  416644:	csel	x22, x24, x22, ne  // ne = any
  416648:	add	x25, x21, #0x10
  41664c:	cmp	x8, #0x0
  416650:	csel	x23, x25, x8, eq  // eq = none
  416654:	mov	x0, x23
  416658:	bl	4040e8 <dns_name_is_root@plt>
  41665c:	tst	w0, #0x1
  416660:	csel	x1, x24, x23, ne  // ne = any
  416664:	mov	x0, x22
  416668:	bl	404248 <dns_name_equal@plt>
  41666c:	mov	w22, w0
  416670:	cbnz	w0, 4166f0 <ascii_strlower_n@plt+0x122e8>
  416674:	cbz	x20, 41660c <ascii_strlower_n@plt+0x12204>
  416678:	str	xzr, [x29, #24]
  41667c:	ldr	x8, [x21, #8]
  416680:	cmp	x8, #0x0
  416684:	csel	x21, x25, x8, eq  // eq = none
  416688:	mov	x0, x21
  41668c:	bl	4040e8 <dns_name_is_root@plt>
  416690:	tst	w0, #0x1
  416694:	csel	x0, x24, x21, ne  // ne = any
  416698:	add	x3, x29, #0x18
  41669c:	mov	x1, x20
  4166a0:	mov	w2, wzr
  4166a4:	bl	403df8 <dns_name_concat@plt>
  4166a8:	tbnz	w0, #31, 4166e4 <ascii_strlower_n@plt+0x122dc>
  4166ac:	ldr	x8, [x19, #8]
  4166b0:	cbz	x8, 4166d8 <ascii_strlower_n@plt+0x122d0>
  4166b4:	ldr	x9, [x8, #8]
  4166b8:	add	x8, x8, #0x10
  4166bc:	cmp	x9, #0x0
  4166c0:	csel	x19, x8, x9, eq  // eq = none
  4166c4:	mov	x0, x19
  4166c8:	bl	4040e8 <dns_name_is_root@plt>
  4166cc:	tst	w0, #0x1
  4166d0:	csel	x0, x24, x19, ne  // ne = any
  4166d4:	b	4166dc <ascii_strlower_n@plt+0x122d4>
  4166d8:	mov	x0, xzr
  4166dc:	ldr	x1, [x29, #24]
  4166e0:	bl	404248 <dns_name_equal@plt>
  4166e4:	mov	w22, w0
  4166e8:	ldr	x0, [x29, #24]
  4166ec:	bl	4039d8 <free@plt>
  4166f0:	mov	w0, w22
  4166f4:	ldp	x20, x19, [sp, #64]
  4166f8:	ldp	x22, x21, [sp, #48]
  4166fc:	ldp	x24, x23, [sp, #32]
  416700:	ldr	x25, [sp, #16]
  416704:	ldp	x29, x30, [sp], #80
  416708:	ret
  41670c:	adrp	x1, 422000 <ascii_strlower_n@plt+0x1dbf8>
  416710:	adrp	x2, 422000 <ascii_strlower_n@plt+0x1dbf8>
  416714:	adrp	x4, 422000 <ascii_strlower_n@plt+0x1dbf8>
  416718:	add	x1, x1, #0x4fe
  41671c:	add	x2, x2, #0x86e
  416720:	add	x4, x4, #0xb2f
  416724:	mov	w3, #0xcb                  	// #203
  416728:	bl	403a98 <log_assert_failed_realm@plt>
  41672c:	adrp	x1, 422000 <ascii_strlower_n@plt+0x1dbf8>
  416730:	adrp	x2, 422000 <ascii_strlower_n@plt+0x1dbf8>
  416734:	adrp	x4, 422000 <ascii_strlower_n@plt+0x1dbf8>
  416738:	add	x1, x1, #0x14e
  41673c:	add	x2, x2, #0x86e
  416740:	add	x4, x4, #0xb2f
  416744:	mov	w3, #0xcc                  	// #204
  416748:	mov	w0, wzr
  41674c:	bl	403a98 <log_assert_failed_realm@plt>
  416750:	sub	sp, sp, #0x50
  416754:	stp	x29, x30, [sp, #16]
  416758:	stp	x24, x23, [sp, #32]
  41675c:	stp	x22, x21, [sp, #48]
  416760:	stp	x20, x19, [sp, #64]
  416764:	add	x29, sp, #0x10
  416768:	cbz	x0, 416958 <ascii_strlower_n@plt+0x12550>
  41676c:	mov	x19, x1
  416770:	cbz	x1, 416978 <ascii_strlower_n@plt+0x12570>
  416774:	ldrh	w9, [x19, #4]
  416778:	ldrh	w8, [x0, #4]
  41677c:	mov	x20, x2
  416780:	mov	x21, x0
  416784:	cmp	w9, w8
  416788:	b.eq	416794 <ascii_strlower_n@plt+0x1238c>  // b.none
  41678c:	cmp	w8, #0xff
  416790:	b.ne	416924 <ascii_strlower_n@plt+0x1251c>  // b.any
  416794:	ldrh	w8, [x19, #6]
  416798:	cmp	w8, #0x27
  41679c:	b.eq	416804 <ascii_strlower_n@plt+0x123fc>  // b.none
  4167a0:	cmp	w8, #0x5
  4167a4:	b.ne	416924 <ascii_strlower_n@plt+0x1251c>  // b.any
  4167a8:	ldr	x8, [x21, #8]
  4167ac:	add	x9, x21, #0x10
  4167b0:	cmp	x8, #0x0
  4167b4:	csel	x22, x9, x8, eq  // eq = none
  4167b8:	mov	x0, x22
  4167bc:	bl	4040e8 <dns_name_is_root@plt>
  4167c0:	ldr	x8, [x19, #8]
  4167c4:	adrp	x24, 422000 <ascii_strlower_n@plt+0x1dbf8>
  4167c8:	add	x24, x24, #0xaa1
  4167cc:	tst	w0, #0x1
  4167d0:	csel	x22, x24, x22, ne  // ne = any
  4167d4:	add	x9, x19, #0x10
  4167d8:	cmp	x8, #0x0
  4167dc:	csel	x23, x9, x8, eq  // eq = none
  4167e0:	mov	x0, x23
  4167e4:	bl	4040e8 <dns_name_is_root@plt>
  4167e8:	tst	w0, #0x1
  4167ec:	csel	x1, x24, x23, ne  // ne = any
  4167f0:	mov	x0, x22
  4167f4:	bl	404248 <dns_name_equal@plt>
  4167f8:	mov	w22, w0
  4167fc:	cbnz	w0, 416928 <ascii_strlower_n@plt+0x12520>
  416800:	b	41685c <ascii_strlower_n@plt+0x12454>
  416804:	ldr	x8, [x21, #8]
  416808:	add	x9, x21, #0x10
  41680c:	cmp	x8, #0x0
  416810:	csel	x22, x9, x8, eq  // eq = none
  416814:	mov	x0, x22
  416818:	bl	4040e8 <dns_name_is_root@plt>
  41681c:	ldr	x8, [x19, #8]
  416820:	adrp	x24, 422000 <ascii_strlower_n@plt+0x1dbf8>
  416824:	add	x24, x24, #0xaa1
  416828:	tst	w0, #0x1
  41682c:	csel	x22, x24, x22, ne  // ne = any
  416830:	add	x9, x19, #0x10
  416834:	cmp	x8, #0x0
  416838:	csel	x23, x9, x8, eq  // eq = none
  41683c:	mov	x0, x23
  416840:	bl	4040e8 <dns_name_is_root@plt>
  416844:	tst	w0, #0x1
  416848:	csel	x1, x24, x23, ne  // ne = any
  41684c:	mov	x0, x22
  416850:	bl	404238 <dns_name_endswith@plt>
  416854:	mov	w22, w0
  416858:	cbnz	w0, 416928 <ascii_strlower_n@plt+0x12520>
  41685c:	cbz	x20, 416924 <ascii_strlower_n@plt+0x1251c>
  416860:	str	xzr, [sp, #8]
  416864:	ldr	x8, [x21, #8]
  416868:	add	x9, x21, #0x10
  41686c:	cmp	x8, #0x0
  416870:	csel	x21, x9, x8, eq  // eq = none
  416874:	mov	x0, x21
  416878:	bl	4040e8 <dns_name_is_root@plt>
  41687c:	adrp	x23, 422000 <ascii_strlower_n@plt+0x1dbf8>
  416880:	add	x23, x23, #0xaa1
  416884:	tst	w0, #0x1
  416888:	csel	x0, x23, x21, ne  // ne = any
  41688c:	add	x3, sp, #0x8
  416890:	mov	x1, x20
  416894:	mov	w2, wzr
  416898:	bl	403df8 <dns_name_concat@plt>
  41689c:	tbnz	w0, #31, 416910 <ascii_strlower_n@plt+0x12508>
  4168a0:	ldrh	w8, [x19, #6]
  4168a4:	cmp	w8, #0x27
  4168a8:	b.eq	4168e4 <ascii_strlower_n@plt+0x124dc>  // b.none
  4168ac:	cmp	w8, #0x5
  4168b0:	b.ne	416944 <ascii_strlower_n@plt+0x1253c>  // b.any
  4168b4:	ldr	x8, [x19, #8]
  4168b8:	ldr	x20, [sp, #8]
  4168bc:	add	x9, x19, #0x10
  4168c0:	cmp	x8, #0x0
  4168c4:	csel	x19, x9, x8, eq  // eq = none
  4168c8:	mov	x0, x19
  4168cc:	bl	4040e8 <dns_name_is_root@plt>
  4168d0:	tst	w0, #0x1
  4168d4:	csel	x1, x23, x19, ne  // ne = any
  4168d8:	mov	x0, x20
  4168dc:	bl	404248 <dns_name_equal@plt>
  4168e0:	b	416910 <ascii_strlower_n@plt+0x12508>
  4168e4:	ldr	x8, [x19, #8]
  4168e8:	ldr	x20, [sp, #8]
  4168ec:	add	x9, x19, #0x10
  4168f0:	cmp	x8, #0x0
  4168f4:	csel	x19, x9, x8, eq  // eq = none
  4168f8:	mov	x0, x19
  4168fc:	bl	4040e8 <dns_name_is_root@plt>
  416900:	tst	w0, #0x1
  416904:	csel	x1, x23, x19, ne  // ne = any
  416908:	mov	x0, x20
  41690c:	bl	404238 <dns_name_endswith@plt>
  416910:	mov	w22, w0
  416914:	mov	w19, wzr
  416918:	ldr	x0, [sp, #8]
  41691c:	bl	4039d8 <free@plt>
  416920:	cbz	w19, 416928 <ascii_strlower_n@plt+0x12520>
  416924:	mov	w22, wzr
  416928:	mov	w0, w22
  41692c:	ldp	x20, x19, [sp, #64]
  416930:	ldp	x22, x21, [sp, #48]
  416934:	ldp	x24, x23, [sp, #32]
  416938:	ldp	x29, x30, [sp, #16]
  41693c:	add	sp, sp, #0x50
  416940:	ret
  416944:	mov	w19, #0x1                   	// #1
  416948:	ldr	x0, [sp, #8]
  41694c:	bl	4039d8 <free@plt>
  416950:	cbnz	w19, 416924 <ascii_strlower_n@plt+0x1251c>
  416954:	b	416928 <ascii_strlower_n@plt+0x12520>
  416958:	adrp	x1, 422000 <ascii_strlower_n@plt+0x1dbf8>
  41695c:	adrp	x2, 422000 <ascii_strlower_n@plt+0x1dbf8>
  416960:	adrp	x4, 422000 <ascii_strlower_n@plt+0x1dbf8>
  416964:	add	x1, x1, #0x4fe
  416968:	add	x2, x2, #0x86e
  41696c:	add	x4, x4, #0xb88
  416970:	mov	w3, #0xef                  	// #239
  416974:	bl	403a98 <log_assert_failed_realm@plt>
  416978:	adrp	x1, 41e000 <ascii_strlower_n@plt+0x19bf8>
  41697c:	adrp	x2, 422000 <ascii_strlower_n@plt+0x1dbf8>
  416980:	adrp	x4, 422000 <ascii_strlower_n@plt+0x1dbf8>
  416984:	add	x1, x1, #0x860
  416988:	add	x2, x2, #0x86e
  41698c:	add	x4, x4, #0xb88
  416990:	mov	w3, #0xf0                  	// #240
  416994:	mov	w0, wzr
  416998:	bl	403a98 <log_assert_failed_realm@plt>
  41699c:	stp	x29, x30, [sp, #-48]!
  4169a0:	str	x21, [sp, #16]
  4169a4:	stp	x20, x19, [sp, #32]
  4169a8:	mov	x29, sp
  4169ac:	cbz	x1, 416a44 <ascii_strlower_n@plt+0x1263c>
  4169b0:	cbz	x0, 416a68 <ascii_strlower_n@plt+0x12660>
  4169b4:	ldrh	w8, [x1, #4]
  4169b8:	ldrh	w9, [x0, #4]
  4169bc:	mov	x19, x1
  4169c0:	cmp	w8, w9
  4169c4:	b.ne	416a30 <ascii_strlower_n@plt+0x12628>  // b.any
  4169c8:	ldrh	w8, [x19, #6]
  4169cc:	cmp	w8, #0x6
  4169d0:	b.ne	416a30 <ascii_strlower_n@plt+0x12628>  // b.any
  4169d4:	ldr	x8, [x0, #8]
  4169d8:	add	x9, x0, #0x10
  4169dc:	cmp	x8, #0x0
  4169e0:	csel	x20, x9, x8, eq  // eq = none
  4169e4:	mov	x0, x20
  4169e8:	bl	4040e8 <dns_name_is_root@plt>
  4169ec:	ldr	x8, [x19, #8]
  4169f0:	adrp	x21, 422000 <ascii_strlower_n@plt+0x1dbf8>
  4169f4:	add	x21, x21, #0xaa1
  4169f8:	tst	w0, #0x1
  4169fc:	csel	x20, x21, x20, ne  // ne = any
  416a00:	add	x9, x19, #0x10
  416a04:	cmp	x8, #0x0
  416a08:	csel	x19, x9, x8, eq  // eq = none
  416a0c:	mov	x0, x19
  416a10:	bl	4040e8 <dns_name_is_root@plt>
  416a14:	tst	w0, #0x1
  416a18:	csel	x1, x21, x19, ne  // ne = any
  416a1c:	mov	x0, x20
  416a20:	ldp	x20, x19, [sp, #32]
  416a24:	ldr	x21, [sp, #16]
  416a28:	ldp	x29, x30, [sp], #48
  416a2c:	b	404238 <dns_name_endswith@plt>
  416a30:	ldp	x20, x19, [sp, #32]
  416a34:	ldr	x21, [sp, #16]
  416a38:	mov	w0, wzr
  416a3c:	ldp	x29, x30, [sp], #48
  416a40:	ret
  416a44:	adrp	x1, 422000 <ascii_strlower_n@plt+0x1dbf8>
  416a48:	adrp	x2, 422000 <ascii_strlower_n@plt+0x1dbf8>
  416a4c:	adrp	x4, 422000 <ascii_strlower_n@plt+0x1dbf8>
  416a50:	add	x1, x1, #0xbf0
  416a54:	add	x2, x2, #0x86e
  416a58:	add	x4, x4, #0xbf4
  416a5c:	mov	w3, #0x110                 	// #272
  416a60:	mov	w0, wzr
  416a64:	bl	403a98 <log_assert_failed_realm@plt>
  416a68:	adrp	x1, 422000 <ascii_strlower_n@plt+0x1dbf8>
  416a6c:	adrp	x2, 422000 <ascii_strlower_n@plt+0x1dbf8>
  416a70:	adrp	x4, 422000 <ascii_strlower_n@plt+0x1dbf8>
  416a74:	add	x1, x1, #0x4fe
  416a78:	add	x2, x2, #0x86e
  416a7c:	add	x4, x4, #0xbf4
  416a80:	mov	w3, #0x111                 	// #273
  416a84:	bl	403a98 <log_assert_failed_realm@plt>
  416a88:	stp	x29, x30, [sp, #-48]!
  416a8c:	str	x21, [sp, #16]
  416a90:	stp	x20, x19, [sp, #32]
  416a94:	mov	x29, sp
  416a98:	cbz	x0, 416b00 <ascii_strlower_n@plt+0x126f8>
  416a9c:	ldr	x8, [x0, #8]
  416aa0:	add	x9, x0, #0x10
  416aa4:	mov	x20, x0
  416aa8:	mov	x19, x1
  416aac:	cmp	x8, #0x0
  416ab0:	csel	x21, x9, x8, eq  // eq = none
  416ab4:	mov	x0, x21
  416ab8:	bl	4040e8 <dns_name_is_root@plt>
  416abc:	adrp	x8, 422000 <ascii_strlower_n@plt+0x1dbf8>
  416ac0:	add	x8, x8, #0xaa1
  416ac4:	tst	w0, #0x1
  416ac8:	csel	x0, x8, x21, ne  // ne = any
  416acc:	mov	x1, x19
  416ad0:	bl	404258 <dns_name_hash_func@plt>
  416ad4:	add	x0, x20, #0x4
  416ad8:	mov	w1, #0x2                   	// #2
  416adc:	mov	x2, x19
  416ae0:	bl	4041e8 <siphash24_compress@plt>
  416ae4:	add	x0, x20, #0x6
  416ae8:	mov	x2, x19
  416aec:	ldp	x20, x19, [sp, #32]
  416af0:	ldr	x21, [sp, #16]
  416af4:	mov	w1, #0x2                   	// #2
  416af8:	ldp	x29, x30, [sp], #48
  416afc:	b	4041e8 <siphash24_compress@plt>
  416b00:	adrp	x1, 421000 <ascii_strlower_n@plt+0x1cbf8>
  416b04:	adrp	x2, 422000 <ascii_strlower_n@plt+0x1dbf8>
  416b08:	adrp	x4, 423000 <ascii_strlower_n@plt+0x1ebf8>
  416b0c:	add	x1, x1, #0xfd2
  416b10:	add	x2, x2, #0x86e
  416b14:	add	x4, x4, #0x312
  416b18:	mov	w3, #0x11f                 	// #287
  416b1c:	bl	403a98 <log_assert_failed_realm@plt>
  416b20:	stp	x29, x30, [sp, #-64]!
  416b24:	str	x23, [sp, #16]
  416b28:	adrp	x23, 422000 <ascii_strlower_n@plt+0x1dbf8>
  416b2c:	stp	x20, x19, [sp, #48]
  416b30:	mov	x19, x1
  416b34:	mov	x20, x0
  416b38:	add	x23, x23, #0xaa1
  416b3c:	stp	x22, x21, [sp, #32]
  416b40:	mov	x29, sp
  416b44:	cbz	x0, 416b9c <ascii_strlower_n@plt+0x12794>
  416b48:	ldr	x8, [x20, #8]
  416b4c:	add	x9, x20, #0x10
  416b50:	cmp	x8, #0x0
  416b54:	csel	x21, x9, x8, eq  // eq = none
  416b58:	mov	x0, x21
  416b5c:	bl	4040e8 <dns_name_is_root@plt>
  416b60:	tst	w0, #0x1
  416b64:	csel	x21, x23, x21, ne  // ne = any
  416b68:	cbz	x19, 416ba4 <ascii_strlower_n@plt+0x1279c>
  416b6c:	ldr	x8, [x19, #8]
  416b70:	add	x9, x19, #0x10
  416b74:	cmp	x8, #0x0
  416b78:	csel	x22, x9, x8, eq  // eq = none
  416b7c:	mov	x0, x22
  416b80:	bl	4040e8 <dns_name_is_root@plt>
  416b84:	tst	w0, #0x1
  416b88:	csel	x1, x23, x22, ne  // ne = any
  416b8c:	mov	x0, x21
  416b90:	bl	404268 <dns_name_compare_func@plt>
  416b94:	cbnz	w0, 416be0 <ascii_strlower_n@plt+0x127d8>
  416b98:	b	416bb4 <ascii_strlower_n@plt+0x127ac>
  416b9c:	mov	x21, xzr
  416ba0:	cbnz	x19, 416b6c <ascii_strlower_n@plt+0x12764>
  416ba4:	mov	x1, xzr
  416ba8:	mov	x0, x21
  416bac:	bl	404268 <dns_name_compare_func@plt>
  416bb0:	cbnz	w0, 416be0 <ascii_strlower_n@plt+0x127d8>
  416bb4:	ldrh	w8, [x20, #6]
  416bb8:	ldrh	w9, [x19, #6]
  416bbc:	cmp	w8, w9
  416bc0:	cset	w8, hi  // hi = pmore
  416bc4:	csinv	w0, w8, wzr, cs  // cs = hs, nlast
  416bc8:	cbnz	w0, 416be0 <ascii_strlower_n@plt+0x127d8>
  416bcc:	ldrh	w8, [x20, #4]
  416bd0:	ldrh	w9, [x19, #4]
  416bd4:	cmp	w8, w9
  416bd8:	cset	w8, hi  // hi = pmore
  416bdc:	csinv	w0, w8, wzr, cs  // cs = hs, nlast
  416be0:	ldp	x20, x19, [sp, #48]
  416be4:	ldp	x22, x21, [sp, #32]
  416be8:	ldr	x23, [sp, #16]
  416bec:	ldp	x29, x30, [sp], #64
  416bf0:	ret
  416bf4:	sub	sp, sp, #0x50
  416bf8:	stp	x29, x30, [sp, #16]
  416bfc:	stp	x24, x23, [sp, #32]
  416c00:	stp	x22, x21, [sp, #48]
  416c04:	stp	x20, x19, [sp, #64]
  416c08:	mov	x21, x0
  416c0c:	ldrh	w0, [x0, #4]
  416c10:	add	x29, sp, #0x10
  416c14:	mov	x20, x2
  416c18:	mov	x19, x1
  416c1c:	bl	41d93c <ascii_strlower_n@plt+0x19534>
  416c20:	ldrh	w8, [x21, #6]
  416c24:	mov	x23, x0
  416c28:	mov	w0, w8
  416c2c:	bl	41d148 <ascii_strlower_n@plt+0x18d40>
  416c30:	mov	x22, x0
  416c34:	cbz	x21, 416c64 <ascii_strlower_n@plt+0x1285c>
  416c38:	ldr	x8, [x21, #8]
  416c3c:	add	x9, x21, #0x10
  416c40:	cmp	x8, #0x0
  416c44:	csel	x24, x9, x8, eq  // eq = none
  416c48:	mov	x0, x24
  416c4c:	bl	4040e8 <dns_name_is_root@plt>
  416c50:	adrp	x8, 422000 <ascii_strlower_n@plt+0x1dbf8>
  416c54:	add	x8, x8, #0xaa1
  416c58:	tst	w0, #0x1
  416c5c:	csel	x3, x8, x24, ne  // ne = any
  416c60:	b	416c68 <ascii_strlower_n@plt+0x12860>
  416c64:	mov	x3, xzr
  416c68:	adrp	x8, 41e000 <ascii_strlower_n@plt+0x19bf8>
  416c6c:	adrp	x9, 422000 <ascii_strlower_n@plt+0x1dbf8>
  416c70:	add	x8, x8, #0x804
  416c74:	cmp	x23, #0x0
  416c78:	add	x9, x9, #0xc58
  416c7c:	csel	x4, x8, x23, eq  // eq = none
  416c80:	csel	x5, x8, x9, ne  // ne = any
  416c84:	cbz	x23, 416c90 <ascii_strlower_n@plt+0x12888>
  416c88:	mov	w6, wzr
  416c8c:	b	416c94 <ascii_strlower_n@plt+0x1288c>
  416c90:	ldrh	w6, [x21, #4]
  416c94:	adrp	x9, 422000 <ascii_strlower_n@plt+0x1dbf8>
  416c98:	cmp	x22, #0x0
  416c9c:	add	x9, x9, #0xc5e
  416ca0:	csel	x7, x8, x22, eq  // eq = none
  416ca4:	csel	x8, x8, x9, ne  // ne = any
  416ca8:	cbz	x22, 416cb4 <ascii_strlower_n@plt+0x128ac>
  416cac:	mov	w9, wzr
  416cb0:	b	416cb8 <ascii_strlower_n@plt+0x128b0>
  416cb4:	ldrh	w9, [x21, #6]
  416cb8:	adrp	x2, 422000 <ascii_strlower_n@plt+0x1dbf8>
  416cbc:	add	x2, x2, #0xc43
  416cc0:	mov	x0, x19
  416cc4:	mov	x1, x20
  416cc8:	str	w9, [sp, #8]
  416ccc:	str	x8, [sp]
  416cd0:	bl	404278 <snprintf@plt>
  416cd4:	mov	x0, x19
  416cd8:	ldp	x20, x19, [sp, #64]
  416cdc:	ldp	x22, x21, [sp, #48]
  416ce0:	ldp	x24, x23, [sp, #32]
  416ce4:	ldp	x29, x30, [sp, #16]
  416ce8:	add	sp, sp, #0x50
  416cec:	ret
  416cf0:	stp	x29, x30, [sp, #-80]!
  416cf4:	str	x25, [sp, #16]
  416cf8:	stp	x24, x23, [sp, #32]
  416cfc:	stp	x22, x21, [sp, #48]
  416d00:	stp	x20, x19, [sp, #64]
  416d04:	mov	x29, sp
  416d08:	cbz	x0, 416ea0 <ascii_strlower_n@plt+0x12a98>
  416d0c:	mov	x20, x1
  416d10:	cbz	x1, 416ec0 <ascii_strlower_n@plt+0x12ab8>
  416d14:	ldr	x23, [x0]
  416d18:	mov	x19, x0
  416d1c:	cbz	x23, 416df0 <ascii_strlower_n@plt+0x129e8>
  416d20:	ldr	x24, [x20]
  416d24:	cbz	x24, 416df0 <ascii_strlower_n@plt+0x129e8>
  416d28:	ldr	w8, [x23]
  416d2c:	cmn	w8, #0x1
  416d30:	b.eq	416df0 <ascii_strlower_n@plt+0x129e8>  // b.none
  416d34:	ldr	w8, [x24]
  416d38:	cmn	w8, #0x1
  416d3c:	b.eq	416df0 <ascii_strlower_n@plt+0x129e8>  // b.none
  416d40:	cmp	x23, x24
  416d44:	b.eq	416e98 <ascii_strlower_n@plt+0x12a90>  // b.none
  416d48:	ldr	x8, [x23, #8]
  416d4c:	add	x9, x23, #0x10
  416d50:	cmp	x8, #0x0
  416d54:	csel	x21, x9, x8, eq  // eq = none
  416d58:	mov	x0, x21
  416d5c:	bl	4040e8 <dns_name_is_root@plt>
  416d60:	ldr	x8, [x24, #8]
  416d64:	adrp	x25, 422000 <ascii_strlower_n@plt+0x1dbf8>
  416d68:	add	x25, x25, #0xaa1
  416d6c:	tst	w0, #0x1
  416d70:	csel	x21, x25, x21, ne  // ne = any
  416d74:	add	x9, x24, #0x10
  416d78:	cmp	x8, #0x0
  416d7c:	csel	x22, x9, x8, eq  // eq = none
  416d80:	mov	x0, x22
  416d84:	bl	4040e8 <dns_name_is_root@plt>
  416d88:	tst	w0, #0x1
  416d8c:	csel	x1, x25, x22, ne  // ne = any
  416d90:	mov	x0, x21
  416d94:	bl	404248 <dns_name_equal@plt>
  416d98:	cmp	w0, #0x1
  416d9c:	b.lt	416df0 <ascii_strlower_n@plt+0x129e8>  // b.tstop
  416da0:	ldrh	w8, [x23, #4]
  416da4:	ldrh	w9, [x24, #4]
  416da8:	cmp	w8, w9
  416dac:	b.ne	416df0 <ascii_strlower_n@plt+0x129e8>  // b.any
  416db0:	ldrh	w8, [x23, #6]
  416db4:	ldrh	w9, [x24, #6]
  416db8:	cmp	w8, w9
  416dbc:	b.ne	416df0 <ascii_strlower_n@plt+0x129e8>  // b.any
  416dc0:	ldr	x21, [x19]
  416dc4:	ldr	x22, [x20]
  416dc8:	ldr	w8, [x21]
  416dcc:	ldr	w9, [x22]
  416dd0:	cmp	w8, w9
  416dd4:	b.ls	416e0c <ascii_strlower_n@plt+0x12a04>  // b.plast
  416dd8:	cbz	x22, 416e40 <ascii_strlower_n@plt+0x12a38>
  416ddc:	subs	w8, w9, #0x1
  416de0:	b.eq	416e2c <ascii_strlower_n@plt+0x12a24>  // b.none
  416de4:	cbz	w9, 416ee4 <ascii_strlower_n@plt+0x12adc>
  416de8:	str	w8, [x22]
  416dec:	b	416e40 <ascii_strlower_n@plt+0x12a38>
  416df0:	mov	w0, wzr
  416df4:	ldp	x20, x19, [sp, #64]
  416df8:	ldp	x22, x21, [sp, #48]
  416dfc:	ldp	x24, x23, [sp, #32]
  416e00:	ldr	x25, [sp, #16]
  416e04:	ldp	x29, x30, [sp], #80
  416e08:	ret
  416e0c:	cbz	x21, 416e78 <ascii_strlower_n@plt+0x12a70>
  416e10:	subs	w9, w8, #0x1
  416e14:	b.eq	416e64 <ascii_strlower_n@plt+0x12a5c>  // b.none
  416e18:	cbz	w8, 416ee4 <ascii_strlower_n@plt+0x12adc>
  416e1c:	cmn	w8, #0x1
  416e20:	b.eq	416f50 <ascii_strlower_n@plt+0x12b48>  // b.none
  416e24:	str	w9, [x21]
  416e28:	b	416e78 <ascii_strlower_n@plt+0x12a70>
  416e2c:	ldr	x0, [x22, #8]
  416e30:	bl	4039d8 <free@plt>
  416e34:	mov	x0, x22
  416e38:	bl	4039d8 <free@plt>
  416e3c:	ldr	x21, [x19]
  416e40:	cbz	x21, 416e5c <ascii_strlower_n@plt+0x12a54>
  416e44:	ldr	w8, [x21]
  416e48:	cbz	w8, 416f08 <ascii_strlower_n@plt+0x12b00>
  416e4c:	cmn	w8, #0x1
  416e50:	b.eq	416f2c <ascii_strlower_n@plt+0x12b24>  // b.none
  416e54:	add	w8, w8, #0x1
  416e58:	str	w8, [x21]
  416e5c:	str	x21, [x20]
  416e60:	b	416e98 <ascii_strlower_n@plt+0x12a90>
  416e64:	ldr	x0, [x21, #8]
  416e68:	bl	4039d8 <free@plt>
  416e6c:	mov	x0, x21
  416e70:	bl	4039d8 <free@plt>
  416e74:	ldr	x22, [x20]
  416e78:	cbz	x22, 416e94 <ascii_strlower_n@plt+0x12a8c>
  416e7c:	ldr	w8, [x22]
  416e80:	cbz	w8, 416f08 <ascii_strlower_n@plt+0x12b00>
  416e84:	cmn	w8, #0x1
  416e88:	b.eq	416f2c <ascii_strlower_n@plt+0x12b24>  // b.none
  416e8c:	add	w8, w8, #0x1
  416e90:	str	w8, [x22]
  416e94:	str	x22, [x19]
  416e98:	mov	w0, #0x1                   	// #1
  416e9c:	b	416df4 <ascii_strlower_n@plt+0x129ec>
  416ea0:	adrp	x1, 422000 <ascii_strlower_n@plt+0x1dbf8>
  416ea4:	adrp	x2, 422000 <ascii_strlower_n@plt+0x1dbf8>
  416ea8:	adrp	x4, 422000 <ascii_strlower_n@plt+0x1dbf8>
  416eac:	add	x1, x1, #0xc63
  416eb0:	add	x2, x2, #0x86e
  416eb4:	add	x4, x4, #0xc65
  416eb8:	mov	w3, #0x14d                 	// #333
  416ebc:	bl	403a98 <log_assert_failed_realm@plt>
  416ec0:	adrp	x1, 420000 <ascii_strlower_n@plt+0x1bbf8>
  416ec4:	adrp	x2, 422000 <ascii_strlower_n@plt+0x1dbf8>
  416ec8:	adrp	x4, 422000 <ascii_strlower_n@plt+0x1dbf8>
  416ecc:	add	x1, x1, #0xaf
  416ed0:	add	x2, x2, #0x86e
  416ed4:	add	x4, x4, #0xc65
  416ed8:	mov	w3, #0x14e                 	// #334
  416edc:	mov	w0, wzr
  416ee0:	bl	403a98 <log_assert_failed_realm@plt>
  416ee4:	adrp	x1, 422000 <ascii_strlower_n@plt+0x1dbf8>
  416ee8:	adrp	x2, 422000 <ascii_strlower_n@plt+0x1dbf8>
  416eec:	adrp	x4, 422000 <ascii_strlower_n@plt+0x1dbf8>
  416ef0:	add	x1, x1, #0xa5b
  416ef4:	add	x2, x2, #0x86e
  416ef8:	add	x4, x4, #0xa68
  416efc:	mov	w3, #0x84                  	// #132
  416f00:	mov	w0, wzr
  416f04:	bl	403a98 <log_assert_failed_realm@plt>
  416f08:	adrp	x1, 422000 <ascii_strlower_n@plt+0x1dbf8>
  416f0c:	adrp	x2, 422000 <ascii_strlower_n@plt+0x1dbf8>
  416f10:	adrp	x4, 422000 <ascii_strlower_n@plt+0x1dbf8>
  416f14:	add	x1, x1, #0xa5b
  416f18:	add	x2, x2, #0x86e
  416f1c:	add	x4, x4, #0xa24
  416f20:	mov	w3, #0x79                  	// #121
  416f24:	mov	w0, wzr
  416f28:	bl	403a98 <log_assert_failed_realm@plt>
  416f2c:	adrp	x1, 422000 <ascii_strlower_n@plt+0x1dbf8>
  416f30:	adrp	x2, 422000 <ascii_strlower_n@plt+0x1dbf8>
  416f34:	adrp	x4, 422000 <ascii_strlower_n@plt+0x1dbf8>
  416f38:	add	x1, x1, #0xa0a
  416f3c:	add	x2, x2, #0x86e
  416f40:	add	x4, x4, #0xa24
  416f44:	mov	w3, #0x77                  	// #119
  416f48:	mov	w0, wzr
  416f4c:	bl	403a98 <log_assert_failed_realm@plt>
  416f50:	adrp	x1, 422000 <ascii_strlower_n@plt+0x1dbf8>
  416f54:	adrp	x2, 422000 <ascii_strlower_n@plt+0x1dbf8>
  416f58:	adrp	x4, 422000 <ascii_strlower_n@plt+0x1dbf8>
  416f5c:	add	x1, x1, #0xa0a
  416f60:	add	x2, x2, #0x86e
  416f64:	add	x4, x4, #0xa68
  416f68:	mov	w3, #0x83                  	// #131
  416f6c:	mov	w0, wzr
  416f70:	bl	403a98 <log_assert_failed_realm@plt>
  416f74:	stp	x29, x30, [sp, #-32]!
  416f78:	stp	x20, x19, [sp, #16]
  416f7c:	mov	x19, x0
  416f80:	mov	w0, #0x1                   	// #1
  416f84:	mov	w1, #0x80                  	// #128
  416f88:	mov	x29, sp
  416f8c:	mov	w20, #0x1                   	// #1
  416f90:	bl	404068 <calloc@plt>
  416f94:	cbz	x0, 416fc4 <ascii_strlower_n@plt+0x12bbc>
  416f98:	str	w20, [x0]
  416f9c:	cbz	x19, 416fb8 <ascii_strlower_n@plt+0x12bb0>
  416fa0:	ldr	w8, [x19]
  416fa4:	cbz	w8, 416fd0 <ascii_strlower_n@plt+0x12bc8>
  416fa8:	cmn	w8, #0x1
  416fac:	b.eq	416ff4 <ascii_strlower_n@plt+0x12bec>  // b.none
  416fb0:	add	w8, w8, #0x1
  416fb4:	str	w8, [x19]
  416fb8:	mov	x8, #0xffffffffffffffff    	// #-1
  416fbc:	str	x19, [x0, #8]
  416fc0:	stp	x8, x8, [x0, #32]
  416fc4:	ldp	x20, x19, [sp, #16]
  416fc8:	ldp	x29, x30, [sp], #32
  416fcc:	ret
  416fd0:	adrp	x1, 422000 <ascii_strlower_n@plt+0x1dbf8>
  416fd4:	adrp	x2, 422000 <ascii_strlower_n@plt+0x1dbf8>
  416fd8:	adrp	x4, 422000 <ascii_strlower_n@plt+0x1dbf8>
  416fdc:	add	x1, x1, #0xa5b
  416fe0:	add	x2, x2, #0x86e
  416fe4:	add	x4, x4, #0xa24
  416fe8:	mov	w3, #0x79                  	// #121
  416fec:	mov	w0, wzr
  416ff0:	bl	403a98 <log_assert_failed_realm@plt>
  416ff4:	adrp	x1, 422000 <ascii_strlower_n@plt+0x1dbf8>
  416ff8:	adrp	x2, 422000 <ascii_strlower_n@plt+0x1dbf8>
  416ffc:	adrp	x4, 422000 <ascii_strlower_n@plt+0x1dbf8>
  417000:	add	x1, x1, #0xa0a
  417004:	add	x2, x2, #0x86e
  417008:	add	x4, x4, #0xa24
  41700c:	mov	w3, #0x77                  	// #119
  417010:	mov	w0, wzr
  417014:	bl	403a98 <log_assert_failed_realm@plt>
  417018:	stp	x29, x30, [sp, #-64]!
  41701c:	str	x23, [sp, #16]
  417020:	stp	x22, x21, [sp, #32]
  417024:	stp	x20, x19, [sp, #48]
  417028:	mov	x29, sp
  41702c:	cbz	x2, 41710c <ascii_strlower_n@plt+0x12d04>
  417030:	mov	w22, w0
  417034:	mov	x0, x2
  417038:	mov	x20, x2
  41703c:	mov	w21, w1
  417040:	bl	403d28 <strlen@plt>
  417044:	add	x1, x0, #0x11
  417048:	mov	w0, #0x1                   	// #1
  41704c:	mov	w23, #0x1                   	// #1
  417050:	bl	404068 <calloc@plt>
  417054:	cbz	x0, 4170d0 <ascii_strlower_n@plt+0x12cc8>
  417058:	mov	x19, x0
  41705c:	str	w23, [x0]
  417060:	strh	w22, [x0, #4]
  417064:	strh	w21, [x0, #6]
  417068:	add	x0, x0, #0x10
  41706c:	mov	x1, x20
  417070:	bl	404218 <strcpy@plt>
  417074:	mov	w0, #0x1                   	// #1
  417078:	mov	w1, #0x80                  	// #128
  41707c:	bl	404068 <calloc@plt>
  417080:	mov	x20, x0
  417084:	cbz	x0, 4170d8 <ascii_strlower_n@plt+0x12cd0>
  417088:	ldr	w8, [x19]
  41708c:	mov	w9, #0x1                   	// #1
  417090:	str	w9, [x20]
  417094:	cbz	w8, 417178 <ascii_strlower_n@plt+0x12d70>
  417098:	cmn	w8, #0x1
  41709c:	b.eq	41719c <ascii_strlower_n@plt+0x12d94>  // b.none
  4170a0:	add	w8, w8, #0x1
  4170a4:	mov	x9, #0xffffffffffffffff    	// #-1
  4170a8:	str	x19, [x20, #8]
  4170ac:	str	w8, [x19]
  4170b0:	stp	x9, x9, [x20, #32]
  4170b4:	subs	w9, w8, #0x1
  4170b8:	b.eq	4170e4 <ascii_strlower_n@plt+0x12cdc>  // b.none
  4170bc:	cbz	w8, 417130 <ascii_strlower_n@plt+0x12d28>
  4170c0:	cmn	w8, #0x1
  4170c4:	b.eq	417154 <ascii_strlower_n@plt+0x12d4c>  // b.none
  4170c8:	str	w9, [x19]
  4170cc:	b	4170f4 <ascii_strlower_n@plt+0x12cec>
  4170d0:	mov	x20, xzr
  4170d4:	b	4170f4 <ascii_strlower_n@plt+0x12cec>
  4170d8:	ldr	w8, [x19]
  4170dc:	subs	w9, w8, #0x1
  4170e0:	b.ne	4170bc <ascii_strlower_n@plt+0x12cb4>  // b.any
  4170e4:	ldr	x0, [x19, #8]
  4170e8:	bl	4039d8 <free@plt>
  4170ec:	mov	x0, x19
  4170f0:	bl	4039d8 <free@plt>
  4170f4:	mov	x0, x20
  4170f8:	ldp	x20, x19, [sp, #48]
  4170fc:	ldp	x22, x21, [sp, #32]
  417100:	ldr	x23, [sp, #16]
  417104:	ldp	x29, x30, [sp], #64
  417108:	ret
  41710c:	adrp	x1, 420000 <ascii_strlower_n@plt+0x1bbf8>
  417110:	adrp	x2, 422000 <ascii_strlower_n@plt+0x1dbf8>
  417114:	adrp	x4, 422000 <ascii_strlower_n@plt+0x1dbf8>
  417118:	add	x1, x1, #0x89f
  41711c:	add	x2, x2, #0x86e
  417120:	add	x4, x4, #0x88c
  417124:	mov	w3, #0x17                  	// #23
  417128:	mov	w0, wzr
  41712c:	bl	403a98 <log_assert_failed_realm@plt>
  417130:	adrp	x1, 422000 <ascii_strlower_n@plt+0x1dbf8>
  417134:	adrp	x2, 422000 <ascii_strlower_n@plt+0x1dbf8>
  417138:	adrp	x4, 422000 <ascii_strlower_n@plt+0x1dbf8>
  41713c:	add	x1, x1, #0xa5b
  417140:	add	x2, x2, #0x86e
  417144:	add	x4, x4, #0xa68
  417148:	mov	w3, #0x84                  	// #132
  41714c:	mov	w0, wzr
  417150:	bl	403a98 <log_assert_failed_realm@plt>
  417154:	adrp	x1, 422000 <ascii_strlower_n@plt+0x1dbf8>
  417158:	adrp	x2, 422000 <ascii_strlower_n@plt+0x1dbf8>
  41715c:	adrp	x4, 422000 <ascii_strlower_n@plt+0x1dbf8>
  417160:	add	x1, x1, #0xa0a
  417164:	add	x2, x2, #0x86e
  417168:	add	x4, x4, #0xa68
  41716c:	mov	w3, #0x83                  	// #131
  417170:	mov	w0, wzr
  417174:	bl	403a98 <log_assert_failed_realm@plt>
  417178:	adrp	x1, 422000 <ascii_strlower_n@plt+0x1dbf8>
  41717c:	adrp	x2, 422000 <ascii_strlower_n@plt+0x1dbf8>
  417180:	adrp	x4, 422000 <ascii_strlower_n@plt+0x1dbf8>
  417184:	add	x1, x1, #0xa5b
  417188:	add	x2, x2, #0x86e
  41718c:	add	x4, x4, #0xa24
  417190:	mov	w3, #0x79                  	// #121
  417194:	mov	w0, wzr
  417198:	bl	403a98 <log_assert_failed_realm@plt>
  41719c:	adrp	x1, 422000 <ascii_strlower_n@plt+0x1dbf8>
  4171a0:	adrp	x2, 422000 <ascii_strlower_n@plt+0x1dbf8>
  4171a4:	adrp	x4, 422000 <ascii_strlower_n@plt+0x1dbf8>
  4171a8:	add	x1, x1, #0xa0a
  4171ac:	add	x2, x2, #0x86e
  4171b0:	add	x4, x4, #0xa24
  4171b4:	mov	w3, #0x77                  	// #119
  4171b8:	mov	w0, wzr
  4171bc:	bl	403a98 <log_assert_failed_realm@plt>
  4171c0:	stp	x29, x30, [sp, #-16]!
  4171c4:	mov	x29, sp
  4171c8:	cbz	x0, 4171dc <ascii_strlower_n@plt+0x12dd4>
  4171cc:	ldr	w8, [x0]
  4171d0:	cbz	w8, 4171e4 <ascii_strlower_n@plt+0x12ddc>
  4171d4:	add	w8, w8, #0x1
  4171d8:	str	w8, [x0]
  4171dc:	ldp	x29, x30, [sp], #16
  4171e0:	ret
  4171e4:	adrp	x1, 421000 <ascii_strlower_n@plt+0x1cbf8>
  4171e8:	adrp	x2, 422000 <ascii_strlower_n@plt+0x1dbf8>
  4171ec:	adrp	x4, 422000 <ascii_strlower_n@plt+0x1dbf8>
  4171f0:	add	x1, x1, #0xc49
  4171f4:	add	x2, x2, #0x86e
  4171f8:	add	x4, x4, #0xca9
  4171fc:	mov	w3, #0x1ec                 	// #492
  417200:	mov	w0, wzr
  417204:	bl	403a98 <log_assert_failed_realm@plt>
  417208:	stp	x29, x30, [sp, #-32]!
  41720c:	stp	x20, x19, [sp, #16]
  417210:	mov	x29, sp
  417214:	cbz	x0, 417230 <ascii_strlower_n@plt+0x12e28>
  417218:	ldr	w8, [x0]
  41721c:	mov	x19, x0
  417220:	cbz	w8, 417378 <ascii_strlower_n@plt+0x12f70>
  417224:	subs	w8, w8, #0x1
  417228:	str	w8, [x19]
  41722c:	b.eq	417240 <ascii_strlower_n@plt+0x12e38>  // b.none
  417230:	ldp	x20, x19, [sp, #16]
  417234:	mov	x0, xzr
  417238:	ldp	x29, x30, [sp], #32
  41723c:	ret
  417240:	ldr	x8, [x19, #8]
  417244:	cbz	x8, 4172d8 <ascii_strlower_n@plt+0x12ed0>
  417248:	ldrh	w9, [x8, #6]
  41724c:	sub	w8, w9, #0x1
  417250:	cmp	w8, #0x62
  417254:	b.hi	417314 <ascii_strlower_n@plt+0x12f0c>  // b.pmore
  417258:	adrp	x9, 425000 <ascii_strlower_n@plt+0x20bf8>
  41725c:	add	x9, x9, #0x172
  417260:	adr	x10, 417270 <ascii_strlower_n@plt+0x12e68>
  417264:	ldrb	w11, [x9, x8]
  417268:	add	x10, x10, x11, lsl #2
  41726c:	br	x10
  417270:	ldr	x0, [x19, #80]
  417274:	b	417284 <ascii_strlower_n@plt+0x12e7c>
  417278:	ldr	x0, [x19, #80]
  41727c:	bl	4039d8 <free@plt>
  417280:	ldr	x0, [x19, #88]
  417284:	bl	4039d8 <free@plt>
  417288:	ldrb	w8, [x19, #48]
  41728c:	tbz	w8, #0, 417298 <ascii_strlower_n@plt+0x12e90>
  417290:	ldr	x0, [x19, #80]
  417294:	bl	4039d8 <free@plt>
  417298:	ldr	x0, [x19, #56]
  41729c:	bl	4039d8 <free@plt>
  4172a0:	ldr	x20, [x19, #8]
  4172a4:	cbz	x20, 4172d8 <ascii_strlower_n@plt+0x12ed0>
  4172a8:	ldr	w9, [x20]
  4172ac:	subs	w8, w9, #0x1
  4172b0:	b.eq	4172c8 <ascii_strlower_n@plt+0x12ec0>  // b.none
  4172b4:	cbz	w9, 41739c <ascii_strlower_n@plt+0x12f94>
  4172b8:	cmn	w9, #0x1
  4172bc:	b.eq	4173c0 <ascii_strlower_n@plt+0x12fb8>  // b.none
  4172c0:	str	w8, [x20]
  4172c4:	b	4172d8 <ascii_strlower_n@plt+0x12ed0>
  4172c8:	ldr	x0, [x20, #8]
  4172cc:	bl	4039d8 <free@plt>
  4172d0:	mov	x0, x20
  4172d4:	bl	4039d8 <free@plt>
  4172d8:	ldr	x0, [x19, #16]
  4172dc:	bl	4039d8 <free@plt>
  4172e0:	mov	x0, x19
  4172e4:	bl	4039d8 <free@plt>
  4172e8:	ldp	x20, x19, [sp, #16]
  4172ec:	mov	x0, xzr
  4172f0:	ldp	x29, x30, [sp], #32
  4172f4:	ret
  4172f8:	ldr	x0, [x19, #80]
  4172fc:	cbz	x0, 417288 <ascii_strlower_n@plt+0x12e80>
  417300:	ldr	x20, [x0, #8]
  417304:	bl	4039d8 <free@plt>
  417308:	mov	x0, x20
  41730c:	cbnz	x20, 417300 <ascii_strlower_n@plt+0x12ef8>
  417310:	b	417288 <ascii_strlower_n@plt+0x12e80>
  417314:	cmp	w9, #0x101
  417318:	b.ne	41732c <ascii_strlower_n@plt+0x12f24>  // b.any
  41731c:	ldr	x0, [x19, #88]
  417320:	bl	4039d8 <free@plt>
  417324:	ldr	x0, [x19, #96]
  417328:	b	417284 <ascii_strlower_n@plt+0x12e7c>
  41732c:	ldrb	w8, [x19, #48]
  417330:	tbz	w8, #0, 417270 <ascii_strlower_n@plt+0x12e68>
  417334:	b	417288 <ascii_strlower_n@plt+0x12e80>
  417338:	ldr	x0, [x19, #104]
  41733c:	bl	4039d8 <free@plt>
  417340:	ldr	x0, [x19, #112]
  417344:	b	417284 <ascii_strlower_n@plt+0x12e7c>
  417348:	ldr	x0, [x19, #104]
  41734c:	bl	4039d8 <free@plt>
  417350:	ldr	x0, [x19, #88]
  417354:	bl	4039d8 <free@plt>
  417358:	ldr	x0, [x19, #120]
  41735c:	bl	404288 <bitmap_free@plt>
  417360:	b	417288 <ascii_strlower_n@plt+0x12e80>
  417364:	ldr	x0, [x19, #80]
  417368:	bl	4039d8 <free@plt>
  41736c:	ldr	x0, [x19, #88]
  417370:	bl	404288 <bitmap_free@plt>
  417374:	b	417288 <ascii_strlower_n@plt+0x12e80>
  417378:	adrp	x1, 421000 <ascii_strlower_n@plt+0x1cbf8>
  41737c:	adrp	x2, 422000 <ascii_strlower_n@plt+0x1dbf8>
  417380:	adrp	x4, 422000 <ascii_strlower_n@plt+0x1dbf8>
  417384:	add	x1, x1, #0xc49
  417388:	add	x2, x2, #0x86e
  41738c:	add	x4, x4, #0xce9
  417390:	mov	w3, #0x1ec                 	// #492
  417394:	mov	w0, wzr
  417398:	bl	403a98 <log_assert_failed_realm@plt>
  41739c:	adrp	x1, 422000 <ascii_strlower_n@plt+0x1dbf8>
  4173a0:	adrp	x2, 422000 <ascii_strlower_n@plt+0x1dbf8>
  4173a4:	adrp	x4, 422000 <ascii_strlower_n@plt+0x1dbf8>
  4173a8:	add	x1, x1, #0xa5b
  4173ac:	add	x2, x2, #0x86e
  4173b0:	add	x4, x4, #0xa68
  4173b4:	mov	w3, #0x84                  	// #132
  4173b8:	mov	w0, wzr
  4173bc:	bl	403a98 <log_assert_failed_realm@plt>
  4173c0:	adrp	x1, 422000 <ascii_strlower_n@plt+0x1dbf8>
  4173c4:	adrp	x2, 422000 <ascii_strlower_n@plt+0x1dbf8>
  4173c8:	adrp	x4, 422000 <ascii_strlower_n@plt+0x1dbf8>
  4173cc:	add	x1, x1, #0xa0a
  4173d0:	add	x2, x2, #0x86e
  4173d4:	add	x4, x4, #0xa68
  4173d8:	mov	w3, #0x83                  	// #131
  4173dc:	mov	w0, wzr
  4173e0:	bl	403a98 <log_assert_failed_realm@plt>
  4173e4:	stp	x29, x30, [sp, #-64]!
  4173e8:	mov	x29, sp
  4173ec:	str	x23, [sp, #16]
  4173f0:	stp	x22, x21, [sp, #32]
  4173f4:	stp	x20, x19, [sp, #48]
  4173f8:	str	xzr, [x29, #24]
  4173fc:	cbz	x0, 417524 <ascii_strlower_n@plt+0x1311c>
  417400:	mov	x8, x2
  417404:	cbz	x2, 417544 <ascii_strlower_n@plt+0x1313c>
  417408:	mov	x22, x3
  41740c:	cbz	x3, 417568 <ascii_strlower_n@plt+0x13160>
  417410:	mov	x21, x0
  417414:	add	x2, x29, #0x18
  417418:	mov	w0, w1
  41741c:	mov	x1, x8
  417420:	bl	404298 <dns_name_reverse@plt>
  417424:	tbnz	w0, #31, 4174a0 <ascii_strlower_n@plt+0x13098>
  417428:	ldr	x20, [x29, #24]
  41742c:	cbz	x20, 41758c <ascii_strlower_n@plt+0x13184>
  417430:	mov	w0, #0x1                   	// #1
  417434:	mov	w1, #0x10                  	// #16
  417438:	bl	404068 <calloc@plt>
  41743c:	mov	x19, x0
  417440:	cbz	x0, 41750c <ascii_strlower_n@plt+0x13104>
  417444:	mov	x8, #0x100000001           	// #4294967297
  417448:	movk	x8, #0xc, lsl #48
  41744c:	mov	w0, #0x1                   	// #1
  417450:	mov	w1, #0x80                  	// #128
  417454:	stp	x8, x20, [x19]
  417458:	str	xzr, [x29, #24]
  41745c:	mov	w20, #0x1                   	// #1
  417460:	bl	404068 <calloc@plt>
  417464:	mov	x23, x0
  417468:	cbz	x0, 417510 <ascii_strlower_n@plt+0x13108>
  41746c:	mov	w8, #0x2                   	// #2
  417470:	mov	x9, #0xffffffffffffffff    	// #-1
  417474:	mov	x0, x22
  417478:	str	w20, [x23]
  41747c:	str	x19, [x23, #8]
  417480:	str	w8, [x19]
  417484:	stp	x9, x9, [x23, #32]
  417488:	bl	403ae8 <strdup@plt>
  41748c:	str	x0, [x23, #80]
  417490:	cbz	x0, 417510 <ascii_strlower_n@plt+0x13108>
  417494:	mov	w20, wzr
  417498:	str	x23, [x21]
  41749c:	b	4174a8 <ascii_strlower_n@plt+0x130a0>
  4174a0:	mov	w20, w0
  4174a4:	mov	x19, xzr
  4174a8:	mov	x23, xzr
  4174ac:	ldr	x0, [x29, #24]
  4174b0:	bl	4039d8 <free@plt>
  4174b4:	cbz	x23, 4174c0 <ascii_strlower_n@plt+0x130b8>
  4174b8:	mov	x0, x23
  4174bc:	bl	417208 <ascii_strlower_n@plt+0x12e00>
  4174c0:	cbz	x19, 4174f4 <ascii_strlower_n@plt+0x130ec>
  4174c4:	ldr	w9, [x19]
  4174c8:	subs	w8, w9, #0x1
  4174cc:	b.eq	4174e4 <ascii_strlower_n@plt+0x130dc>  // b.none
  4174d0:	cbz	w9, 4175b0 <ascii_strlower_n@plt+0x131a8>
  4174d4:	cmn	w9, #0x1
  4174d8:	b.eq	4175d4 <ascii_strlower_n@plt+0x131cc>  // b.none
  4174dc:	str	w8, [x19]
  4174e0:	b	4174f4 <ascii_strlower_n@plt+0x130ec>
  4174e4:	ldr	x0, [x19, #8]
  4174e8:	bl	4039d8 <free@plt>
  4174ec:	mov	x0, x19
  4174f0:	bl	4039d8 <free@plt>
  4174f4:	mov	w0, w20
  4174f8:	ldp	x20, x19, [sp, #48]
  4174fc:	ldp	x22, x21, [sp, #32]
  417500:	ldr	x23, [sp, #16]
  417504:	ldp	x29, x30, [sp], #64
  417508:	ret
  41750c:	mov	x23, xzr
  417510:	mov	w20, #0xfffffff4            	// #-12
  417514:	ldr	x0, [x29, #24]
  417518:	bl	4039d8 <free@plt>
  41751c:	cbnz	x23, 4174b8 <ascii_strlower_n@plt+0x130b0>
  417520:	b	4174c0 <ascii_strlower_n@plt+0x130b8>
  417524:	adrp	x1, 420000 <ascii_strlower_n@plt+0x1bbf8>
  417528:	adrp	x2, 422000 <ascii_strlower_n@plt+0x1dbf8>
  41752c:	adrp	x4, 422000 <ascii_strlower_n@plt+0x1dbf8>
  417530:	add	x1, x1, #0x41e
  417534:	add	x2, x2, #0x86e
  417538:	add	x4, x4, #0xd2b
  41753c:	mov	w3, #0x1f4                 	// #500
  417540:	bl	403a98 <log_assert_failed_realm@plt>
  417544:	adrp	x1, 420000 <ascii_strlower_n@plt+0x1bbf8>
  417548:	adrp	x2, 422000 <ascii_strlower_n@plt+0x1dbf8>
  41754c:	adrp	x4, 422000 <ascii_strlower_n@plt+0x1dbf8>
  417550:	add	x1, x1, #0xde8
  417554:	add	x2, x2, #0x86e
  417558:	add	x4, x4, #0xd2b
  41755c:	mov	w3, #0x1f5                 	// #501
  417560:	mov	w0, wzr
  417564:	bl	403a98 <log_assert_failed_realm@plt>
  417568:	adrp	x1, 422000 <ascii_strlower_n@plt+0x1dbf8>
  41756c:	adrp	x2, 422000 <ascii_strlower_n@plt+0x1dbf8>
  417570:	adrp	x4, 422000 <ascii_strlower_n@plt+0x1dbf8>
  417574:	add	x1, x1, #0xd95
  417578:	add	x2, x2, #0x86e
  41757c:	add	x4, x4, #0xd2b
  417580:	mov	w3, #0x1f6                 	// #502
  417584:	mov	w0, wzr
  417588:	bl	403a98 <log_assert_failed_realm@plt>
  41758c:	adrp	x1, 420000 <ascii_strlower_n@plt+0x1bbf8>
  417590:	adrp	x2, 422000 <ascii_strlower_n@plt+0x1dbf8>
  417594:	adrp	x4, 422000 <ascii_strlower_n@plt+0x1dbf8>
  417598:	add	x1, x1, #0x89f
  41759c:	add	x2, x2, #0x86e
  4175a0:	add	x4, x4, #0x9c1
  4175a4:	mov	w3, #0x62                  	// #98
  4175a8:	mov	w0, wzr
  4175ac:	bl	403a98 <log_assert_failed_realm@plt>
  4175b0:	adrp	x1, 422000 <ascii_strlower_n@plt+0x1dbf8>
  4175b4:	adrp	x2, 422000 <ascii_strlower_n@plt+0x1dbf8>
  4175b8:	adrp	x4, 422000 <ascii_strlower_n@plt+0x1dbf8>
  4175bc:	add	x1, x1, #0xa5b
  4175c0:	add	x2, x2, #0x86e
  4175c4:	add	x4, x4, #0xa68
  4175c8:	mov	w3, #0x84                  	// #132
  4175cc:	mov	w0, wzr
  4175d0:	bl	403a98 <log_assert_failed_realm@plt>
  4175d4:	adrp	x1, 422000 <ascii_strlower_n@plt+0x1dbf8>
  4175d8:	adrp	x2, 422000 <ascii_strlower_n@plt+0x1dbf8>
  4175dc:	adrp	x4, 422000 <ascii_strlower_n@plt+0x1dbf8>
  4175e0:	add	x1, x1, #0xa0a
  4175e4:	add	x2, x2, #0x86e
  4175e8:	add	x4, x4, #0xa68
  4175ec:	mov	w3, #0x83                  	// #131
  4175f0:	mov	w0, wzr
  4175f4:	bl	403a98 <log_assert_failed_realm@plt>
  4175f8:	stp	x29, x30, [sp, #-32]!
  4175fc:	stp	x20, x19, [sp, #16]
  417600:	mov	x29, sp
  417604:	cbz	x0, 4176a0 <ascii_strlower_n@plt+0x13298>
  417608:	mov	x20, x2
  41760c:	cbz	x2, 4176c0 <ascii_strlower_n@plt+0x132b8>
  417610:	mov	x19, x0
  417614:	cmp	w1, #0x2
  417618:	b.eq	417638 <ascii_strlower_n@plt+0x13230>  // b.none
  41761c:	cmp	w1, #0xa
  417620:	b.eq	41765c <ascii_strlower_n@plt+0x13254>  // b.none
  417624:	cbz	w1, 4176e4 <ascii_strlower_n@plt+0x132dc>
  417628:	mov	w0, #0xffffff9f            	// #-97
  41762c:	ldp	x20, x19, [sp, #16]
  417630:	ldp	x29, x30, [sp], #32
  417634:	ret
  417638:	mov	w0, #0x1                   	// #1
  41763c:	mov	w1, #0x1                   	// #1
  417640:	mov	x2, x3
  417644:	bl	417018 <ascii_strlower_n@plt+0x12c10>
  417648:	cbz	x0, 417690 <ascii_strlower_n@plt+0x13288>
  41764c:	ldr	w9, [x20]
  417650:	mov	x8, x0
  417654:	str	w9, [x0, #80]
  417658:	b	41767c <ascii_strlower_n@plt+0x13274>
  41765c:	mov	w0, #0x1                   	// #1
  417660:	mov	w1, #0x1c                  	// #28
  417664:	mov	x2, x3
  417668:	bl	417018 <ascii_strlower_n@plt+0x12c10>
  41766c:	cbz	x0, 417690 <ascii_strlower_n@plt+0x13288>
  417670:	ldr	q0, [x20]
  417674:	mov	x8, x0
  417678:	str	q0, [x0, #80]
  41767c:	mov	w0, wzr
  417680:	str	x8, [x19]
  417684:	ldp	x20, x19, [sp, #16]
  417688:	ldp	x29, x30, [sp], #32
  41768c:	ret
  417690:	mov	w0, #0xfffffff4            	// #-12
  417694:	ldp	x20, x19, [sp, #16]
  417698:	ldp	x29, x30, [sp], #32
  41769c:	ret
  4176a0:	adrp	x1, 420000 <ascii_strlower_n@plt+0x1bbf8>
  4176a4:	adrp	x2, 422000 <ascii_strlower_n@plt+0x1dbf8>
  4176a8:	adrp	x4, 422000 <ascii_strlower_n@plt+0x1dbf8>
  4176ac:	add	x1, x1, #0x41e
  4176b0:	add	x2, x2, #0x86e
  4176b4:	add	x4, x4, #0xd9e
  4176b8:	mov	w3, #0x212                 	// #530
  4176bc:	bl	403a98 <log_assert_failed_realm@plt>
  4176c0:	adrp	x1, 420000 <ascii_strlower_n@plt+0x1bbf8>
  4176c4:	adrp	x2, 422000 <ascii_strlower_n@plt+0x1dbf8>
  4176c8:	adrp	x4, 422000 <ascii_strlower_n@plt+0x1dbf8>
  4176cc:	add	x1, x1, #0xde8
  4176d0:	add	x2, x2, #0x86e
  4176d4:	add	x4, x4, #0xd9e
  4176d8:	mov	w3, #0x213                 	// #531
  4176dc:	mov	w0, wzr
  4176e0:	bl	403a98 <log_assert_failed_realm@plt>
  4176e4:	adrp	x1, 422000 <ascii_strlower_n@plt+0x1dbf8>
  4176e8:	adrp	x2, 422000 <ascii_strlower_n@plt+0x1dbf8>
  4176ec:	adrp	x4, 422000 <ascii_strlower_n@plt+0x1dbf8>
  4176f0:	add	x1, x1, #0xe08
  4176f4:	add	x2, x2, #0x86e
  4176f8:	add	x4, x4, #0xd9e
  4176fc:	mov	w3, #0x214                 	// #532
  417700:	mov	w0, wzr
  417704:	bl	403a98 <log_assert_failed_realm@plt>
  417708:	stp	x29, x30, [sp, #-32]!
  41770c:	stp	x20, x19, [sp, #16]
  417710:	ldrb	w8, [x0, #48]
  417714:	ldrb	w9, [x1, #48]
  417718:	mov	x29, sp
  41771c:	and	w8, w8, #0x1
  417720:	and	w9, w9, #0x1
  417724:	cmp	w8, w9
  417728:	b.ne	417778 <ascii_strlower_n@plt+0x13370>  // b.any
  41772c:	mov	x19, x1
  417730:	mov	x20, x0
  417734:	cbnz	w8, 41785c <ascii_strlower_n@plt+0x13454>
  417738:	ldr	x8, [x20, #8]
  41773c:	ldrh	w9, [x8, #6]
  417740:	sub	w8, w9, #0x1
  417744:	cmp	w8, #0x62
  417748:	b.hi	41780c <ascii_strlower_n@plt+0x13404>  // b.pmore
  41774c:	adrp	x9, 425000 <ascii_strlower_n@plt+0x20bf8>
  417750:	add	x9, x9, #0x1d6
  417754:	adr	x10, 417764 <ascii_strlower_n@plt+0x1335c>
  417758:	ldrh	w11, [x9, x8, lsl #1]
  41775c:	add	x10, x10, x11, lsl #2
  417760:	br	x10
  417764:	ldr	x0, [x20, #80]
  417768:	ldr	x1, [x19, #80]
  41776c:	ldp	x20, x19, [sp, #16]
  417770:	ldp	x29, x30, [sp], #32
  417774:	b	404248 <dns_name_equal@plt>
  417778:	mov	w0, wzr
  41777c:	ldp	x20, x19, [sp, #16]
  417780:	ldp	x29, x30, [sp], #32
  417784:	ret
  417788:	ldrh	w8, [x20, #80]
  41778c:	ldrh	w9, [x19, #80]
  417790:	cmp	w8, w9
  417794:	b.ne	417c48 <ascii_strlower_n@plt+0x13840>  // b.any
  417798:	ldrb	w8, [x20, #82]
  41779c:	ldrb	w9, [x19, #82]
  4177a0:	cmp	w8, w9
  4177a4:	b.ne	417c48 <ascii_strlower_n@plt+0x13840>  // b.any
  4177a8:	ldrb	w8, [x20, #83]
  4177ac:	ldrb	w9, [x19, #83]
  4177b0:	cmp	w8, w9
  4177b4:	b.eq	417ae8 <ascii_strlower_n@plt+0x136e0>  // b.none
  4177b8:	b	417c48 <ascii_strlower_n@plt+0x13840>
  4177bc:	ldr	x20, [x20, #80]
  4177c0:	ldr	x19, [x19, #80]
  4177c4:	cmp	x20, x19
  4177c8:	b.eq	417b10 <ascii_strlower_n@plt+0x13708>  // b.none
  4177cc:	cbz	x19, 417c58 <ascii_strlower_n@plt+0x13850>
  4177d0:	cbz	x20, 417c58 <ascii_strlower_n@plt+0x13850>
  4177d4:	ldr	x2, [x20]
  4177d8:	ldr	x8, [x19]
  4177dc:	cmp	x2, x8
  4177e0:	b.ne	417c48 <ascii_strlower_n@plt+0x13840>  // b.any
  4177e4:	add	x0, x20, #0x18
  4177e8:	add	x1, x19, #0x18
  4177ec:	bl	4042a8 <bcmp@plt>
  4177f0:	cbnz	w0, 417c48 <ascii_strlower_n@plt+0x13840>
  4177f4:	ldr	x20, [x20, #8]
  4177f8:	ldr	x19, [x19, #8]
  4177fc:	mov	w0, #0x1                   	// #1
  417800:	cmp	x20, x19
  417804:	b.ne	4177cc <ascii_strlower_n@plt+0x133c4>  // b.any
  417808:	b	41777c <ascii_strlower_n@plt+0x13374>
  41780c:	cmp	w9, #0x101
  417810:	b.ne	41785c <ascii_strlower_n@plt+0x13454>  // b.any
  417814:	ldrb	w8, [x20, #80]
  417818:	ldrb	w9, [x19, #80]
  41781c:	cmp	w8, w9
  417820:	b.ne	417c48 <ascii_strlower_n@plt+0x13840>  // b.any
  417824:	ldr	x0, [x20, #88]
  417828:	ldr	x1, [x19, #88]
  41782c:	bl	403b38 <strcmp@plt>
  417830:	cbnz	w0, 417c48 <ascii_strlower_n@plt+0x13840>
  417834:	ldr	x2, [x20, #104]
  417838:	ldr	x8, [x19, #104]
  41783c:	cmp	x2, x8
  417840:	b.ne	417c48 <ascii_strlower_n@plt+0x13840>  // b.any
  417844:	cbz	x2, 417b10 <ascii_strlower_n@plt+0x13708>
  417848:	ldr	x0, [x20, #96]
  41784c:	cbz	x0, 417c7c <ascii_strlower_n@plt+0x13874>
  417850:	ldr	x1, [x19, #96]
  417854:	cbnz	x1, 417880 <ascii_strlower_n@plt+0x13478>
  417858:	b	417c9c <ascii_strlower_n@plt+0x13894>
  41785c:	ldr	x2, [x20, #88]
  417860:	ldr	x8, [x19, #88]
  417864:	cmp	x2, x8
  417868:	b.ne	417c48 <ascii_strlower_n@plt+0x13840>  // b.any
  41786c:	cbz	x2, 417b10 <ascii_strlower_n@plt+0x13708>
  417870:	ldr	x0, [x20, #80]
  417874:	cbz	x0, 417c7c <ascii_strlower_n@plt+0x13874>
  417878:	ldr	x1, [x19, #80]
  41787c:	cbz	x1, 417c9c <ascii_strlower_n@plt+0x13894>
  417880:	bl	4042a8 <bcmp@plt>
  417884:	cmp	w0, #0x0
  417888:	cset	w0, eq  // eq = none
  41788c:	ldp	x20, x19, [sp, #16]
  417890:	ldp	x29, x30, [sp], #32
  417894:	ret
  417898:	ldrb	w8, [x20, #80]
  41789c:	ldrb	w9, [x19, #80]
  4178a0:	cmp	w8, w9
  4178a4:	b.ne	417c48 <ascii_strlower_n@plt+0x13840>  // b.any
  4178a8:	ldrb	w8, [x20, #81]
  4178ac:	ldrb	w9, [x19, #81]
  4178b0:	cmp	w8, w9
  4178b4:	b.ne	417c48 <ascii_strlower_n@plt+0x13840>  // b.any
  4178b8:	ldrb	w8, [x20, #82]
  4178bc:	ldrb	w9, [x19, #82]
  4178c0:	cmp	w8, w9
  4178c4:	b.ne	417c48 <ascii_strlower_n@plt+0x13840>  // b.any
  4178c8:	b	417ae8 <ascii_strlower_n@plt+0x136e0>
  4178cc:	ldp	x8, x9, [x20, #80]
  4178d0:	ldp	x10, x11, [x19, #80]
  4178d4:	eor	x8, x8, x10
  4178d8:	eor	x9, x9, x11
  4178dc:	orr	x8, x8, x9
  4178e0:	cmp	x8, #0x0
  4178e4:	cset	w0, eq  // eq = none
  4178e8:	ldp	x20, x19, [sp, #16]
  4178ec:	ldp	x29, x30, [sp], #32
  4178f0:	ret
  4178f4:	ldrh	w8, [x20, #80]
  4178f8:	ldrh	w9, [x19, #80]
  4178fc:	cmp	w8, w9
  417900:	b.ne	417c48 <ascii_strlower_n@plt+0x13840>  // b.any
  417904:	ldr	x0, [x20, #88]
  417908:	ldr	x1, [x19, #88]
  41790c:	ldp	x20, x19, [sp, #16]
  417910:	ldp	x29, x30, [sp], #32
  417914:	b	404248 <dns_name_equal@plt>
  417918:	ldr	x0, [x20, #80]
  41791c:	ldr	x1, [x19, #80]
  417920:	bl	404248 <dns_name_equal@plt>
  417924:	cbz	w0, 41777c <ascii_strlower_n@plt+0x13374>
  417928:	ldr	x0, [x20, #88]
  41792c:	ldr	x1, [x19, #88]
  417930:	bl	4042b8 <bitmap_equal@plt>
  417934:	and	w0, w0, #0x1
  417938:	ldp	x20, x19, [sp, #16]
  41793c:	ldp	x29, x30, [sp], #32
  417940:	ret
  417944:	ldr	w8, [x20, #80]
  417948:	ldr	w9, [x19, #80]
  41794c:	cmp	w8, w9
  417950:	cset	w0, eq  // eq = none
  417954:	ldp	x20, x19, [sp, #16]
  417958:	ldp	x29, x30, [sp], #32
  41795c:	ret
  417960:	ldr	x0, [x20, #80]
  417964:	ldr	x1, [x19, #80]
  417968:	bl	404248 <dns_name_equal@plt>
  41796c:	cmp	w0, #0x1
  417970:	b.lt	41777c <ascii_strlower_n@plt+0x13374>  // b.tstop
  417974:	ldr	x0, [x20, #88]
  417978:	ldr	x1, [x19, #88]
  41797c:	bl	404248 <dns_name_equal@plt>
  417980:	cmp	w0, #0x1
  417984:	b.lt	41777c <ascii_strlower_n@plt+0x13374>  // b.tstop
  417988:	ldr	w8, [x20, #96]
  41798c:	ldr	w9, [x19, #96]
  417990:	cmp	w8, w9
  417994:	b.ne	417c48 <ascii_strlower_n@plt+0x13840>  // b.any
  417998:	ldr	w8, [x20, #100]
  41799c:	ldr	w9, [x19, #100]
  4179a0:	cmp	w8, w9
  4179a4:	b.ne	417c48 <ascii_strlower_n@plt+0x13840>  // b.any
  4179a8:	ldr	w8, [x20, #104]
  4179ac:	ldr	w9, [x19, #104]
  4179b0:	cmp	w8, w9
  4179b4:	b.ne	417c48 <ascii_strlower_n@plt+0x13840>  // b.any
  4179b8:	ldr	w8, [x20, #108]
  4179bc:	ldr	w9, [x19, #108]
  4179c0:	cmp	w8, w9
  4179c4:	b.ne	417c48 <ascii_strlower_n@plt+0x13840>  // b.any
  4179c8:	ldr	w8, [x20, #112]
  4179cc:	ldr	w9, [x19, #112]
  4179d0:	b	41794c <ascii_strlower_n@plt+0x13544>
  4179d4:	ldrb	w8, [x20, #80]
  4179d8:	ldrb	w9, [x19, #80]
  4179dc:	cmp	w8, w9
  4179e0:	b.ne	417c48 <ascii_strlower_n@plt+0x13840>  // b.any
  4179e4:	ldrb	w8, [x20, #81]
  4179e8:	ldrb	w9, [x19, #81]
  4179ec:	cmp	w8, w9
  4179f0:	b.ne	417c48 <ascii_strlower_n@plt+0x13840>  // b.any
  4179f4:	ldrh	w8, [x20, #82]
  4179f8:	ldrh	w9, [x19, #82]
  4179fc:	cmp	w8, w9
  417a00:	b.ne	417c48 <ascii_strlower_n@plt+0x13840>  // b.any
  417a04:	ldr	x2, [x20, #96]
  417a08:	ldr	x8, [x19, #96]
  417a0c:	cmp	x2, x8
  417a10:	b.ne	417c48 <ascii_strlower_n@plt+0x13840>  // b.any
  417a14:	cbz	x2, 417a30 <ascii_strlower_n@plt+0x13628>
  417a18:	ldr	x0, [x20, #88]
  417a1c:	cbz	x0, 417c7c <ascii_strlower_n@plt+0x13874>
  417a20:	ldr	x1, [x19, #88]
  417a24:	cbz	x1, 417c9c <ascii_strlower_n@plt+0x13894>
  417a28:	bl	4042a8 <bcmp@plt>
  417a2c:	cbnz	w0, 417c48 <ascii_strlower_n@plt+0x13840>
  417a30:	ldr	x2, [x20, #112]
  417a34:	ldr	x8, [x19, #112]
  417a38:	cmp	x2, x8
  417a3c:	b.ne	417c48 <ascii_strlower_n@plt+0x13840>  // b.any
  417a40:	cbz	x2, 417a5c <ascii_strlower_n@plt+0x13654>
  417a44:	ldr	x0, [x20, #104]
  417a48:	cbz	x0, 417c7c <ascii_strlower_n@plt+0x13874>
  417a4c:	ldr	x1, [x19, #104]
  417a50:	cbz	x1, 417c9c <ascii_strlower_n@plt+0x13894>
  417a54:	bl	4042a8 <bcmp@plt>
  417a58:	cbnz	w0, 417c48 <ascii_strlower_n@plt+0x13840>
  417a5c:	ldr	x0, [x20, #120]
  417a60:	ldr	x1, [x19, #120]
  417a64:	b	417930 <ascii_strlower_n@plt+0x13528>
  417a68:	ldr	x0, [x20, #80]
  417a6c:	ldr	x1, [x19, #80]
  417a70:	bl	4042c8 <strcasecmp@plt>
  417a74:	cbnz	w0, 417c48 <ascii_strlower_n@plt+0x13840>
  417a78:	ldr	x0, [x20, #88]
  417a7c:	ldr	x1, [x19, #88]
  417a80:	bl	4042c8 <strcasecmp@plt>
  417a84:	b	417884 <ascii_strlower_n@plt+0x1347c>
  417a88:	ldr	x0, [x20, #88]
  417a8c:	ldr	x1, [x19, #88]
  417a90:	bl	404248 <dns_name_equal@plt>
  417a94:	cmp	w0, #0x1
  417a98:	b.lt	41777c <ascii_strlower_n@plt+0x13374>  // b.tstop
  417a9c:	ldrh	w8, [x20, #80]
  417aa0:	ldrh	w9, [x19, #80]
  417aa4:	cmp	w8, w9
  417aa8:	b.ne	417c48 <ascii_strlower_n@plt+0x13840>  // b.any
  417aac:	ldrh	w8, [x20, #82]
  417ab0:	ldrh	w9, [x19, #82]
  417ab4:	cmp	w8, w9
  417ab8:	b.ne	417c48 <ascii_strlower_n@plt+0x13840>  // b.any
  417abc:	ldrh	w8, [x20, #84]
  417ac0:	ldrh	w9, [x19, #84]
  417ac4:	b	41794c <ascii_strlower_n@plt+0x13544>
  417ac8:	ldrb	w8, [x20, #80]
  417acc:	ldrb	w9, [x19, #80]
  417ad0:	cmp	w8, w9
  417ad4:	b.ne	417c48 <ascii_strlower_n@plt+0x13840>  // b.any
  417ad8:	ldrb	w8, [x20, #81]
  417adc:	ldrb	w9, [x19, #81]
  417ae0:	cmp	w8, w9
  417ae4:	b.ne	417c48 <ascii_strlower_n@plt+0x13840>  // b.any
  417ae8:	ldr	x2, [x20, #96]
  417aec:	ldr	x8, [x19, #96]
  417af0:	cmp	x2, x8
  417af4:	b.ne	417c48 <ascii_strlower_n@plt+0x13840>  // b.any
  417af8:	cbz	x2, 417b10 <ascii_strlower_n@plt+0x13708>
  417afc:	ldr	x0, [x20, #88]
  417b00:	cbz	x0, 417c7c <ascii_strlower_n@plt+0x13874>
  417b04:	ldr	x1, [x19, #88]
  417b08:	cbnz	x1, 417880 <ascii_strlower_n@plt+0x13478>
  417b0c:	b	417c9c <ascii_strlower_n@plt+0x13894>
  417b10:	mov	w0, #0x1                   	// #1
  417b14:	ldp	x20, x19, [sp, #16]
  417b18:	ldp	x29, x30, [sp], #32
  417b1c:	ret
  417b20:	ldrh	w8, [x20, #80]
  417b24:	ldrh	w9, [x19, #80]
  417b28:	cmp	w8, w9
  417b2c:	b.ne	417c48 <ascii_strlower_n@plt+0x13840>  // b.any
  417b30:	ldrb	w8, [x20, #82]
  417b34:	ldrb	w9, [x19, #82]
  417b38:	cmp	w8, w9
  417b3c:	b.ne	417c48 <ascii_strlower_n@plt+0x13840>  // b.any
  417b40:	ldrb	w8, [x20, #83]
  417b44:	ldrb	w9, [x19, #83]
  417b48:	cmp	w8, w9
  417b4c:	b.ne	417c48 <ascii_strlower_n@plt+0x13840>  // b.any
  417b50:	ldr	w8, [x20, #84]
  417b54:	ldr	w9, [x19, #84]
  417b58:	cmp	w8, w9
  417b5c:	b.ne	417c48 <ascii_strlower_n@plt+0x13840>  // b.any
  417b60:	ldr	w8, [x20, #88]
  417b64:	ldr	w9, [x19, #88]
  417b68:	cmp	w8, w9
  417b6c:	b.ne	417c48 <ascii_strlower_n@plt+0x13840>  // b.any
  417b70:	ldr	w8, [x20, #92]
  417b74:	ldr	w9, [x19, #92]
  417b78:	cmp	w8, w9
  417b7c:	b.ne	417c48 <ascii_strlower_n@plt+0x13840>  // b.any
  417b80:	ldrh	w8, [x20, #96]
  417b84:	ldrh	w9, [x19, #96]
  417b88:	cmp	w8, w9
  417b8c:	b.ne	417c48 <ascii_strlower_n@plt+0x13840>  // b.any
  417b90:	ldr	x2, [x20, #120]
  417b94:	ldr	x8, [x19, #120]
  417b98:	cmp	x2, x8
  417b9c:	b.ne	417c48 <ascii_strlower_n@plt+0x13840>  // b.any
  417ba0:	cbz	x2, 417bbc <ascii_strlower_n@plt+0x137b4>
  417ba4:	ldr	x0, [x20, #112]
  417ba8:	cbz	x0, 417c7c <ascii_strlower_n@plt+0x13874>
  417bac:	ldr	x1, [x19, #112]
  417bb0:	cbz	x1, 417c9c <ascii_strlower_n@plt+0x13894>
  417bb4:	bl	4042a8 <bcmp@plt>
  417bb8:	cbnz	w0, 417c48 <ascii_strlower_n@plt+0x13840>
  417bbc:	ldr	x0, [x20, #104]
  417bc0:	ldr	x1, [x19, #104]
  417bc4:	bl	404248 <dns_name_equal@plt>
  417bc8:	cmp	w0, #0x0
  417bcc:	cset	w0, ne  // ne = any
  417bd0:	ldp	x20, x19, [sp, #16]
  417bd4:	ldp	x29, x30, [sp], #32
  417bd8:	ret
  417bdc:	ldrb	w8, [x20, #80]
  417be0:	ldrb	w9, [x19, #80]
  417be4:	cmp	w8, w9
  417be8:	b.ne	417cc0 <ascii_strlower_n@plt+0x138b8>  // b.any
  417bec:	ldrb	w8, [x20, #81]
  417bf0:	ldrb	w9, [x19, #81]
  417bf4:	cmp	w8, w9
  417bf8:	b.ne	417c48 <ascii_strlower_n@plt+0x13840>  // b.any
  417bfc:	ldrb	w8, [x20, #82]
  417c00:	ldrb	w9, [x19, #82]
  417c04:	cmp	w8, w9
  417c08:	b.ne	417c48 <ascii_strlower_n@plt+0x13840>  // b.any
  417c0c:	ldrb	w8, [x20, #83]
  417c10:	ldrb	w9, [x19, #83]
  417c14:	cmp	w8, w9
  417c18:	b.ne	417c48 <ascii_strlower_n@plt+0x13840>  // b.any
  417c1c:	ldr	w8, [x20, #84]
  417c20:	ldr	w9, [x19, #84]
  417c24:	cmp	w8, w9
  417c28:	b.ne	417c48 <ascii_strlower_n@plt+0x13840>  // b.any
  417c2c:	ldr	w8, [x20, #88]
  417c30:	ldr	w9, [x19, #88]
  417c34:	cmp	w8, w9
  417c38:	b.ne	417c48 <ascii_strlower_n@plt+0x13840>  // b.any
  417c3c:	ldr	w8, [x20, #92]
  417c40:	ldr	w9, [x19, #92]
  417c44:	b	41794c <ascii_strlower_n@plt+0x13544>
  417c48:	mov	w0, wzr
  417c4c:	ldp	x20, x19, [sp, #16]
  417c50:	ldp	x29, x30, [sp], #32
  417c54:	ret
  417c58:	cmp	x19, #0x0
  417c5c:	cset	w8, eq  // eq = none
  417c60:	cmp	x20, #0x0
  417c64:	cset	w9, eq  // eq = none
  417c68:	eor	w8, w8, w9
  417c6c:	eor	w0, w8, #0x1
  417c70:	ldp	x20, x19, [sp, #16]
  417c74:	ldp	x29, x30, [sp], #32
  417c78:	ret
  417c7c:	adrp	x1, 423000 <ascii_strlower_n@plt+0x1ebf8>
  417c80:	adrp	x2, 422000 <ascii_strlower_n@plt+0x1dbf8>
  417c84:	adrp	x4, 423000 <ascii_strlower_n@plt+0x1ebf8>
  417c88:	add	x1, x1, #0x35c
  417c8c:	add	x2, x2, #0x547
  417c90:	add	x4, x4, #0x35f
  417c94:	mov	w3, #0x1c                  	// #28
  417c98:	bl	403a98 <log_assert_failed_realm@plt>
  417c9c:	adrp	x1, 423000 <ascii_strlower_n@plt+0x1ebf8>
  417ca0:	adrp	x2, 422000 <ascii_strlower_n@plt+0x1dbf8>
  417ca4:	adrp	x4, 423000 <ascii_strlower_n@plt+0x1ebf8>
  417ca8:	add	x1, x1, #0x393
  417cac:	add	x2, x2, #0x547
  417cb0:	add	x4, x4, #0x35f
  417cb4:	mov	w3, #0x1d                  	// #29
  417cb8:	mov	w0, wzr
  417cbc:	bl	403a98 <log_assert_failed_realm@plt>
  417cc0:	adrp	x1, 422000 <ascii_strlower_n@plt+0x1dbf8>
  417cc4:	adrp	x2, 422000 <ascii_strlower_n@plt+0x1dbf8>
  417cc8:	adrp	x4, 422000 <ascii_strlower_n@plt+0x1dbf8>
  417ccc:	add	x1, x1, #0xe0f
  417cd0:	add	x2, x2, #0x86e
  417cd4:	add	x4, x4, #0xe30
  417cd8:	mov	w3, #0x26d                 	// #621
  417cdc:	mov	w0, wzr
  417ce0:	bl	403a98 <log_assert_failed_realm@plt>
  417ce4:	stp	x29, x30, [sp, #-32]!
  417ce8:	cmp	x0, x1
  417cec:	stp	x20, x19, [sp, #16]
  417cf0:	mov	x29, sp
  417cf4:	b.eq	417d38 <ascii_strlower_n@plt+0x13930>  // b.none
  417cf8:	mov	x20, x1
  417cfc:	mov	x19, x0
  417d00:	cbz	x19, 417d58 <ascii_strlower_n@plt+0x13950>
  417d04:	cbz	x20, 417d58 <ascii_strlower_n@plt+0x13950>
  417d08:	ldr	x2, [x19]
  417d0c:	ldr	x8, [x20]
  417d10:	cmp	x2, x8
  417d14:	b.ne	417d48 <ascii_strlower_n@plt+0x13940>  // b.any
  417d18:	add	x0, x19, #0x18
  417d1c:	add	x1, x20, #0x18
  417d20:	bl	4042a8 <bcmp@plt>
  417d24:	cbnz	w0, 417d48 <ascii_strlower_n@plt+0x13940>
  417d28:	ldr	x19, [x19, #8]
  417d2c:	ldr	x20, [x20, #8]
  417d30:	cmp	x19, x20
  417d34:	b.ne	417d00 <ascii_strlower_n@plt+0x138f8>  // b.any
  417d38:	mov	w0, #0x1                   	// #1
  417d3c:	ldp	x20, x19, [sp, #16]
  417d40:	ldp	x29, x30, [sp], #32
  417d44:	ret
  417d48:	mov	w0, wzr
  417d4c:	ldp	x20, x19, [sp, #16]
  417d50:	ldp	x29, x30, [sp], #32
  417d54:	ret
  417d58:	cmp	x20, #0x0
  417d5c:	cset	w8, eq  // eq = none
  417d60:	cmp	x19, #0x0
  417d64:	cset	w9, eq  // eq = none
  417d68:	eor	w8, w9, w8
  417d6c:	eor	w0, w8, #0x1
  417d70:	ldp	x20, x19, [sp, #16]
  417d74:	ldp	x29, x30, [sp], #32
  417d78:	ret
  417d7c:	stp	x29, x30, [sp, #-80]!
  417d80:	str	x25, [sp, #16]
  417d84:	stp	x24, x23, [sp, #32]
  417d88:	stp	x22, x21, [sp, #48]
  417d8c:	stp	x20, x19, [sp, #64]
  417d90:	mov	x29, sp
  417d94:	cbz	x0, 417ea0 <ascii_strlower_n@plt+0x13a98>
  417d98:	mov	x19, x1
  417d9c:	cbz	x1, 417ec0 <ascii_strlower_n@plt+0x13ab8>
  417da0:	mov	x20, x0
  417da4:	cmp	x0, x19
  417da8:	b.eq	417e20 <ascii_strlower_n@plt+0x13a18>  // b.none
  417dac:	ldr	x23, [x20, #8]
  417db0:	ldr	x24, [x19, #8]
  417db4:	cmp	x23, x24
  417db8:	b.eq	417e64 <ascii_strlower_n@plt+0x13a5c>  // b.none
  417dbc:	adrp	x25, 422000 <ascii_strlower_n@plt+0x1dbf8>
  417dc0:	add	x25, x25, #0xaa1
  417dc4:	cbz	x23, 417e28 <ascii_strlower_n@plt+0x13a20>
  417dc8:	ldr	x8, [x23, #8]
  417dcc:	add	x9, x23, #0x10
  417dd0:	cmp	x8, #0x0
  417dd4:	csel	x21, x9, x8, eq  // eq = none
  417dd8:	mov	x0, x21
  417ddc:	bl	4040e8 <dns_name_is_root@plt>
  417de0:	tst	w0, #0x1
  417de4:	csel	x21, x25, x21, ne  // ne = any
  417de8:	cbz	x24, 417e30 <ascii_strlower_n@plt+0x13a28>
  417dec:	ldr	x8, [x24, #8]
  417df0:	add	x9, x24, #0x10
  417df4:	cmp	x8, #0x0
  417df8:	csel	x22, x9, x8, eq  // eq = none
  417dfc:	mov	x0, x22
  417e00:	bl	4040e8 <dns_name_is_root@plt>
  417e04:	tst	w0, #0x1
  417e08:	csel	x1, x25, x22, ne  // ne = any
  417e0c:	mov	x0, x21
  417e10:	bl	404248 <dns_name_equal@plt>
  417e14:	cmp	w0, #0x1
  417e18:	b.ge	417e44 <ascii_strlower_n@plt+0x13a3c>  // b.tcont
  417e1c:	b	417e88 <ascii_strlower_n@plt+0x13a80>
  417e20:	mov	w0, #0x1                   	// #1
  417e24:	b	417e88 <ascii_strlower_n@plt+0x13a80>
  417e28:	mov	x21, xzr
  417e2c:	cbnz	x24, 417dec <ascii_strlower_n@plt+0x139e4>
  417e30:	mov	x1, xzr
  417e34:	mov	x0, x21
  417e38:	bl	404248 <dns_name_equal@plt>
  417e3c:	cmp	w0, #0x1
  417e40:	b.lt	417e88 <ascii_strlower_n@plt+0x13a80>  // b.tstop
  417e44:	ldrh	w8, [x23, #4]
  417e48:	ldrh	w9, [x24, #4]
  417e4c:	cmp	w8, w9
  417e50:	b.ne	417e84 <ascii_strlower_n@plt+0x13a7c>  // b.any
  417e54:	ldrh	w8, [x23, #6]
  417e58:	ldrh	w9, [x24, #6]
  417e5c:	cmp	w8, w9
  417e60:	b.ne	417e84 <ascii_strlower_n@plt+0x13a7c>  // b.any
  417e64:	mov	x0, x20
  417e68:	mov	x1, x19
  417e6c:	ldp	x20, x19, [sp, #64]
  417e70:	ldp	x22, x21, [sp, #48]
  417e74:	ldp	x24, x23, [sp, #32]
  417e78:	ldr	x25, [sp, #16]
  417e7c:	ldp	x29, x30, [sp], #80
  417e80:	b	417708 <ascii_strlower_n@plt+0x13300>
  417e84:	mov	w0, wzr
  417e88:	ldp	x20, x19, [sp, #64]
  417e8c:	ldp	x22, x21, [sp, #48]
  417e90:	ldp	x24, x23, [sp, #32]
  417e94:	ldr	x25, [sp, #16]
  417e98:	ldp	x29, x30, [sp], #80
  417e9c:	ret
  417ea0:	adrp	x1, 422000 <ascii_strlower_n@plt+0x1dbf8>
  417ea4:	adrp	x2, 422000 <ascii_strlower_n@plt+0x1dbf8>
  417ea8:	adrp	x4, 422000 <ascii_strlower_n@plt+0x1dbf8>
  417eac:	add	x1, x1, #0xc63
  417eb0:	add	x2, x2, #0x86e
  417eb4:	add	x4, x4, #0xe8c
  417eb8:	mov	w3, #0x2b3                 	// #691
  417ebc:	bl	403a98 <log_assert_failed_realm@plt>
  417ec0:	adrp	x1, 420000 <ascii_strlower_n@plt+0x1bbf8>
  417ec4:	adrp	x2, 422000 <ascii_strlower_n@plt+0x1dbf8>
  417ec8:	adrp	x4, 422000 <ascii_strlower_n@plt+0x1dbf8>
  417ecc:	add	x1, x1, #0xaf
  417ed0:	add	x2, x2, #0x86e
  417ed4:	add	x4, x4, #0xe8c
  417ed8:	mov	w3, #0x2b4                 	// #692
  417edc:	mov	w0, wzr
  417ee0:	bl	403a98 <log_assert_failed_realm@plt>
  417ee4:	stp	d11, d10, [sp, #-112]!
  417ee8:	stp	d9, d8, [sp, #16]
  417eec:	stp	x29, x30, [sp, #32]
  417ef0:	stp	x28, x25, [sp, #48]
  417ef4:	stp	x24, x23, [sp, #64]
  417ef8:	stp	x22, x21, [sp, #80]
  417efc:	stp	x20, x19, [sp, #96]
  417f00:	mov	x29, sp
  417f04:	sub	sp, sp, #0x1b0
  417f08:	stur	xzr, [x29, #-72]
  417f0c:	cbz	x0, 4189e4 <ascii_strlower_n@plt+0x145dc>
  417f10:	ldr	x20, [x0, #16]
  417f14:	mov	x19, x0
  417f18:	cbnz	x20, 418940 <ascii_strlower_n@plt+0x14538>
  417f1c:	ldr	x23, [x19, #8]
  417f20:	ldrh	w0, [x23, #4]
  417f24:	bl	41d93c <ascii_strlower_n@plt+0x19534>
  417f28:	ldrh	w8, [x23, #6]
  417f2c:	mov	x21, x0
  417f30:	mov	w0, w8
  417f34:	bl	41d148 <ascii_strlower_n@plt+0x18d40>
  417f38:	mov	x20, x0
  417f3c:	cbz	x23, 417f6c <ascii_strlower_n@plt+0x13b64>
  417f40:	ldr	x8, [x23, #8]
  417f44:	add	x9, x23, #0x10
  417f48:	cmp	x8, #0x0
  417f4c:	csel	x22, x9, x8, eq  // eq = none
  417f50:	mov	x0, x22
  417f54:	bl	4040e8 <dns_name_is_root@plt>
  417f58:	adrp	x8, 422000 <ascii_strlower_n@plt+0x1dbf8>
  417f5c:	add	x8, x8, #0xaa1
  417f60:	tst	w0, #0x1
  417f64:	csel	x3, x8, x22, ne  // ne = any
  417f68:	b	417f70 <ascii_strlower_n@plt+0x13b68>
  417f6c:	mov	x3, xzr
  417f70:	adrp	x25, 41e000 <ascii_strlower_n@plt+0x19bf8>
  417f74:	adrp	x8, 422000 <ascii_strlower_n@plt+0x1dbf8>
  417f78:	add	x25, x25, #0x804
  417f7c:	cmp	x21, #0x0
  417f80:	add	x8, x8, #0xc58
  417f84:	csel	x4, x25, x21, eq  // eq = none
  417f88:	csel	x5, x25, x8, ne  // ne = any
  417f8c:	cbz	x21, 417f98 <ascii_strlower_n@plt+0x13b90>
  417f90:	mov	w6, wzr
  417f94:	b	417f9c <ascii_strlower_n@plt+0x13b94>
  417f98:	ldrh	w6, [x23, #4]
  417f9c:	adrp	x22, 422000 <ascii_strlower_n@plt+0x1dbf8>
  417fa0:	cmp	x20, #0x0
  417fa4:	add	x22, x22, #0xc5e
  417fa8:	csel	x7, x25, x20, eq  // eq = none
  417fac:	csel	x8, x25, x22, ne  // ne = any
  417fb0:	cbz	x20, 417fbc <ascii_strlower_n@plt+0x13bb4>
  417fb4:	mov	w9, wzr
  417fb8:	b	417fc0 <ascii_strlower_n@plt+0x13bb8>
  417fbc:	ldrh	w9, [x23, #6]
  417fc0:	adrp	x2, 422000 <ascii_strlower_n@plt+0x1dbf8>
  417fc4:	add	x2, x2, #0xc43
  417fc8:	add	x0, sp, #0x50
  417fcc:	mov	w1, #0x118                 	// #280
  417fd0:	str	w9, [sp, #8]
  417fd4:	str	x8, [sp]
  417fd8:	bl	404278 <snprintf@plt>
  417fdc:	ldrb	w8, [x19, #48]
  417fe0:	tbnz	w8, #0, 4180d0 <ascii_strlower_n@plt+0x13cc8>
  417fe4:	ldr	x8, [x19, #8]
  417fe8:	ldrh	w9, [x8, #6]
  417fec:	sub	w8, w9, #0x1
  417ff0:	cmp	w8, #0x62
  417ff4:	b.hi	418048 <ascii_strlower_n@plt+0x13c40>  // b.pmore
  417ff8:	adrp	x9, 425000 <ascii_strlower_n@plt+0x20bf8>
  417ffc:	add	x9, x9, #0x29c
  418000:	adr	x10, 418010 <ascii_strlower_n@plt+0x13c08>
  418004:	ldrh	w11, [x9, x8, lsl #1]
  418008:	add	x10, x10, x11, lsl #2
  41800c:	br	x10
  418010:	ldr	x2, [x19, #80]
  418014:	b	4186fc <ascii_strlower_n@plt+0x142f4>
  418018:	ldr	x20, [x19, #80]
  41801c:	cbz	x20, 418478 <ascii_strlower_n@plt+0x14070>
  418020:	mov	w8, #0x1                   	// #1
  418024:	mov	x9, x20
  418028:	ldp	x10, x9, [x9]
  41802c:	mov	w11, #0x3                   	// #3
  418030:	bfi	x11, x10, #2, #62
  418034:	add	x8, x11, x8
  418038:	cbnz	x9, 418028 <ascii_strlower_n@plt+0x13c20>
  41803c:	cmp	x8, #0x0
  418040:	csinc	x0, x8, xzr, ne  // ne = any
  418044:	b	41847c <ascii_strlower_n@plt+0x14074>
  418048:	cmp	w9, #0x101
  41804c:	b.ne	4180d0 <ascii_strlower_n@plt+0x13cc8>  // b.any
  418050:	ldp	x0, x1, [x19, #96]
  418054:	bl	4042d8 <octescape@plt>
  418058:	mov	x20, x0
  41805c:	cbz	x0, 418940 <ascii_strlower_n@plt+0x14538>
  418060:	ldrb	w3, [x19, #80]
  418064:	adrp	x8, 423000 <ascii_strlower_n@plt+0x1ebf8>
  418068:	ldr	x4, [x19, #88]
  41806c:	add	x8, x8, #0x6f
  418070:	adrp	x9, 423000 <ascii_strlower_n@plt+0x1ebf8>
  418074:	cmp	w3, #0x0
  418078:	add	x9, x9, #0x82
  41807c:	adrp	x10, 420000 <ascii_strlower_n@plt+0x1bbf8>
  418080:	csel	x6, x25, x8, eq  // eq = none
  418084:	tst	w3, #0x80
  418088:	add	x10, x10, #0xbb3
  41808c:	csel	x7, x25, x9, eq  // eq = none
  418090:	tst	w3, #0x7f
  418094:	adrp	x1, 423000 <ascii_strlower_n@plt+0x1ebf8>
  418098:	and	w11, w3, #0x7f
  41809c:	csel	x8, x25, x10, eq  // eq = none
  4180a0:	add	x1, x1, #0x57
  4180a4:	sub	x0, x29, #0x40
  4180a8:	add	x2, sp, #0x50
  4180ac:	mov	x5, x20
  4180b0:	str	w11, [sp, #8]
  4180b4:	str	x8, [sp]
  4180b8:	bl	403e18 <asprintf@plt>
  4180bc:	mov	w21, w0
  4180c0:	mov	x0, x20
  4180c4:	bl	4039d8 <free@plt>
  4180c8:	tbz	w21, #31, 418718 <ascii_strlower_n@plt+0x14310>
  4180cc:	b	41893c <ascii_strlower_n@plt+0x14534>
  4180d0:	ldp	x0, x1, [x19, #80]
  4180d4:	bl	4042e8 <hexmem@plt>
  4180d8:	stur	x0, [x29, #-72]
  4180dc:	cbz	x0, 41893c <ascii_strlower_n@plt+0x14534>
  4180e0:	ldr	x3, [x19, #88]
  4180e4:	adrp	x1, 423000 <ascii_strlower_n@plt+0x1ebf8>
  4180e8:	mov	x4, x0
  4180ec:	add	x1, x1, #0x8c
  4180f0:	sub	x0, x29, #0x40
  4180f4:	add	x2, sp, #0x50
  4180f8:	bl	403e18 <asprintf@plt>
  4180fc:	tbz	w0, #31, 418718 <ascii_strlower_n@plt+0x14310>
  418100:	b	41893c <ascii_strlower_n@plt+0x14534>
  418104:	ldr	x0, [x19, #88]
  418108:	bl	418ab4 <ascii_strlower_n@plt+0x146ac>
  41810c:	stur	x0, [x29, #-72]
  418110:	cbz	x0, 41893c <ascii_strlower_n@plt+0x14534>
  418114:	ldr	x3, [x19, #80]
  418118:	adrp	x1, 422000 <ascii_strlower_n@plt+0x1dbf8>
  41811c:	mov	x4, x0
  418120:	add	x1, x1, #0xfd8
  418124:	sub	x0, x29, #0x40
  418128:	add	x2, sp, #0x50
  41812c:	bl	403e18 <asprintf@plt>
  418130:	tbz	w0, #31, 418718 <ascii_strlower_n@plt+0x14310>
  418134:	b	41893c <ascii_strlower_n@plt+0x14534>
  418138:	ldr	x8, [x19, #88]
  41813c:	ldrh	w3, [x19, #80]
  418140:	ldrh	w4, [x19, #82]
  418144:	ldrh	w5, [x19, #84]
  418148:	adrp	x9, 420000 <ascii_strlower_n@plt+0x1bbf8>
  41814c:	add	x9, x9, #0x5cc
  418150:	cmp	x8, #0x0
  418154:	csel	x6, x9, x8, eq  // eq = none
  418158:	b	4182ec <ascii_strlower_n@plt+0x13ee4>
  41815c:	ldp	x0, x1, [x19, #88]
  418160:	bl	4042e8 <hexmem@plt>
  418164:	stur	x0, [x29, #-72]
  418168:	cbz	x0, 41893c <ascii_strlower_n@plt+0x14534>
  41816c:	ldrb	w3, [x19, #80]
  418170:	ldrb	w4, [x19, #81]
  418174:	adrp	x1, 422000 <ascii_strlower_n@plt+0x1dbf8>
  418178:	mov	x5, x0
  41817c:	add	x1, x1, #0xf64
  418180:	sub	x0, x29, #0x40
  418184:	add	x2, sp, #0x50
  418188:	bl	403e18 <asprintf@plt>
  41818c:	tbz	w0, #31, 418718 <ascii_strlower_n@plt+0x14310>
  418190:	b	41893c <ascii_strlower_n@plt+0x14534>
  418194:	mov	w1, #0x1                   	// #1
  418198:	mov	x0, x19
  41819c:	bl	41da90 <ascii_strlower_n@plt+0x19688>
  4181a0:	ldrb	w8, [x19, #83]
  4181a4:	mov	w21, w0
  4181a8:	cmp	x8, #0xff
  4181ac:	b.eq	418724 <ascii_strlower_n@plt+0x1431c>  // b.none
  4181b0:	adrp	x9, 43e000 <ascii_strlower_n@plt+0x39bf8>
  4181b4:	add	x9, x9, #0x3f8
  4181b8:	ldr	x0, [x9, x8, lsl #3]
  4181bc:	bl	403ae8 <strdup@plt>
  4181c0:	stur	x0, [x29, #-64]
  4181c4:	cbz	x0, 4187fc <ascii_strlower_n@plt+0x143f4>
  4181c8:	mov	x20, x0
  4181cc:	b	418740 <ascii_strlower_n@plt+0x14338>
  4181d0:	add	x1, x19, #0x50
  4181d4:	add	x2, sp, #0x40
  4181d8:	mov	w0, #0x2                   	// #2
  4181dc:	str	xzr, [sp, #64]
  4181e0:	bl	403f68 <in_addr_to_string@plt>
  4181e4:	ldr	x2, [sp, #64]
  4181e8:	tbnz	w0, #31, 418804 <ascii_strlower_n@plt+0x143fc>
  4181ec:	adrp	x1, 420000 <ascii_strlower_n@plt+0x1bbf8>
  4181f0:	add	x1, x1, #0xbb3
  4181f4:	add	x0, sp, #0x50
  4181f8:	mov	x3, xzr
  4181fc:	bl	403f58 <strjoin_real@plt>
  418200:	ldr	x8, [sp, #64]
  418204:	mov	x20, x0
  418208:	stur	x0, [x29, #-64]
  41820c:	mov	x0, x8
  418210:	bl	4039d8 <free@plt>
  418214:	cbnz	x20, 418718 <ascii_strlower_n@plt+0x14310>
  418218:	b	418940 <ascii_strlower_n@plt+0x14538>
  41821c:	ldrb	w0, [x19, #80]
  418220:	bl	41d9d0 <ascii_strlower_n@plt+0x195c8>
  418224:	ldrb	w8, [x19, #81]
  418228:	mov	x20, x0
  41822c:	mov	w0, w8
  418230:	bl	41da10 <ascii_strlower_n@plt+0x19608>
  418234:	ldrb	w8, [x19, #82]
  418238:	mov	x21, x0
  41823c:	mov	w0, w8
  418240:	bl	41da50 <ascii_strlower_n@plt+0x19648>
  418244:	ldp	x8, x1, [x19, #88]
  418248:	mov	x22, x0
  41824c:	mov	x0, x8
  418250:	bl	4042e8 <hexmem@plt>
  418254:	stur	x0, [x29, #-72]
  418258:	cbz	x0, 41893c <ascii_strlower_n@plt+0x14534>
  41825c:	ldrb	w3, [x19, #80]
  418260:	ldrb	w4, [x19, #81]
  418264:	ldrb	w5, [x19, #82]
  418268:	adrp	x1, 422000 <ascii_strlower_n@plt+0x1dbf8>
  41826c:	mov	x6, x0
  418270:	add	x1, x1, #0xff8
  418274:	sub	x0, x29, #0x40
  418278:	add	x2, sp, #0x50
  41827c:	mov	x7, x20
  418280:	stp	x21, x22, [sp]
  418284:	bl	403e18 <asprintf@plt>
  418288:	tbz	w0, #31, 418718 <ascii_strlower_n@plt+0x14310>
  41828c:	b	41893c <ascii_strlower_n@plt+0x14534>
  418290:	add	x1, x19, #0x50
  418294:	sub	x2, x29, #0x48
  418298:	mov	w0, #0xa                   	// #10
  41829c:	bl	403f68 <in_addr_to_string@plt>
  4182a0:	tbnz	w0, #31, 41893c <ascii_strlower_n@plt+0x14534>
  4182a4:	ldur	x2, [x29, #-72]
  4182a8:	b	4186fc <ascii_strlower_n@plt+0x142f4>
  4182ac:	ldp	x2, x4, [x19, #80]
  4182b0:	adrp	x1, 420000 <ascii_strlower_n@plt+0x1bbf8>
  4182b4:	add	x1, x1, #0xbb3
  4182b8:	add	x0, sp, #0x50
  4182bc:	mov	x3, x1
  4182c0:	mov	x5, xzr
  4182c4:	bl	403f58 <strjoin_real@plt>
  4182c8:	b	418710 <ascii_strlower_n@plt+0x14308>
  4182cc:	ldp	x0, x1, [x19, #88]
  4182d0:	bl	4042e8 <hexmem@plt>
  4182d4:	stur	x0, [x29, #-72]
  4182d8:	cbz	x0, 41893c <ascii_strlower_n@plt+0x14534>
  4182dc:	ldrh	w3, [x19, #80]
  4182e0:	ldrb	w4, [x19, #82]
  4182e4:	ldrb	w5, [x19, #83]
  4182e8:	mov	x6, x0
  4182ec:	adrp	x1, 422000 <ascii_strlower_n@plt+0x1dbf8>
  4182f0:	add	x1, x1, #0xf1f
  4182f4:	sub	x0, x29, #0x40
  4182f8:	add	x2, sp, #0x50
  4182fc:	bl	403e18 <asprintf@plt>
  418300:	tbz	w0, #31, 418718 <ascii_strlower_n@plt+0x14310>
  418304:	b	41893c <ascii_strlower_n@plt+0x14534>
  418308:	ldp	x9, x10, [x19, #80]
  41830c:	adrp	x8, 420000 <ascii_strlower_n@plt+0x1bbf8>
  418310:	ldp	w5, w6, [x19, #96]
  418314:	ldp	w7, w11, [x19, #104]
  418318:	ldr	w12, [x19, #112]
  41831c:	add	x8, x8, #0x5cc
  418320:	cmp	x9, #0x0
  418324:	csel	x3, x8, x9, eq  // eq = none
  418328:	cmp	x10, #0x0
  41832c:	adrp	x1, 422000 <ascii_strlower_n@plt+0x1dbf8>
  418330:	csel	x4, x8, x10, eq  // eq = none
  418334:	add	x1, x1, #0xf2e
  418338:	sub	x0, x29, #0x40
  41833c:	add	x2, sp, #0x50
  418340:	str	w12, [sp, #8]
  418344:	str	w11, [sp]
  418348:	bl	403e18 <asprintf@plt>
  41834c:	tbz	w0, #31, 418718 <ascii_strlower_n@plt+0x14310>
  418350:	b	41893c <ascii_strlower_n@plt+0x14534>
  418354:	ldrb	w8, [x19, #80]
  418358:	cbnz	w8, 418a04 <ascii_strlower_n@plt+0x145fc>
  41835c:	ldp	w23, w20, [x19, #84]
  418360:	ldr	w10, [x19, #92]
  418364:	ldrb	w8, [x19, #81]
  418368:	ldrb	w25, [x19, #82]
  41836c:	ldrb	w24, [x19, #83]
  418370:	mov	w11, #0x80000000            	// #-2147483648
  418374:	mov	w9, #0x967f                	// #38527
  418378:	eor	w12, w23, #0x80000000
  41837c:	sub	w13, w11, w23
  418380:	cmp	w23, #0x0
  418384:	movk	w9, #0x98, lsl #16
  418388:	csel	w21, w12, w13, lt  // lt = tstop
  41838c:	eor	w12, w20, #0x80000000
  418390:	sub	w11, w11, w20
  418394:	cmp	w20, #0x0
  418398:	csel	w22, w12, w11, lt  // lt = tstop
  41839c:	cmp	w10, w9
  4183a0:	b.ls	418594 <ascii_strlower_n@plt+0x1418c>  // b.plast
  4183a4:	mov	w9, #0x6980                	// #27008
  4183a8:	movk	w9, #0xff67, lsl #16
  4183ac:	add	w9, w10, w9
  4183b0:	ucvtf	d8, w9
  4183b4:	b	4185a4 <ascii_strlower_n@plt+0x1419c>
  4183b8:	ldrh	w3, [x19, #80]
  4183bc:	ldr	x4, [x19, #88]
  4183c0:	adrp	x1, 422000 <ascii_strlower_n@plt+0x1dbf8>
  4183c4:	add	x1, x1, #0xf46
  4183c8:	sub	x0, x29, #0x40
  4183cc:	add	x2, sp, #0x50
  4183d0:	bl	403e18 <asprintf@plt>
  4183d4:	tbz	w0, #31, 418718 <ascii_strlower_n@plt+0x14310>
  4183d8:	b	41893c <ascii_strlower_n@plt+0x14534>
  4183dc:	ldrh	w0, [x19, #80]
  4183e0:	bl	41d148 <ascii_strlower_n@plt+0x18d40>
  4183e4:	ldrb	w8, [x19, #82]
  4183e8:	mov	x21, x0
  4183ec:	cmp	x8, #0xff
  4183f0:	b.eq	41880c <ascii_strlower_n@plt+0x14404>  // b.none
  4183f4:	adrp	x9, 43e000 <ascii_strlower_n@plt+0x39bf8>
  4183f8:	add	x9, x9, #0x3f8
  4183fc:	ldr	x0, [x9, x8, lsl #3]
  418400:	bl	403ae8 <strdup@plt>
  418404:	stur	x0, [x29, #-64]
  418408:	cbz	x0, 41893c <ascii_strlower_n@plt+0x14534>
  41840c:	mov	x20, x0
  418410:	b	418828 <ascii_strlower_n@plt+0x14420>
  418414:	adrp	x1, 420000 <ascii_strlower_n@plt+0x1bbf8>
  418418:	add	x1, x1, #0xb4b
  41841c:	sub	x0, x29, #0x40
  418420:	add	x2, sp, #0x50
  418424:	bl	403e18 <asprintf@plt>
  418428:	tbnz	w0, #31, 41893c <ascii_strlower_n@plt+0x14534>
  41842c:	ldp	x21, x22, [x19, #80]
  418430:	mov	w20, w0
  418434:	bl	4042f8 <columns@plt>
  418438:	mov	w5, w0
  41843c:	sub	x0, x29, #0x40
  418440:	mov	w4, #0x8                   	// #8
  418444:	mov	w1, w20
  418448:	mov	x2, x21
  41844c:	mov	x3, x22
  418450:	bl	404308 <base64_append@plt>
  418454:	tbz	w0, #31, 418718 <ascii_strlower_n@plt+0x14310>
  418458:	b	41893c <ascii_strlower_n@plt+0x14534>
  41845c:	ldr	x1, [x19, #96]
  418460:	cbz	x1, 4188a8 <ascii_strlower_n@plt+0x144a0>
  418464:	ldr	x0, [x19, #88]
  418468:	bl	4042e8 <hexmem@plt>
  41846c:	mov	x20, x0
  418470:	cbnz	x0, 4188ac <ascii_strlower_n@plt+0x144a4>
  418474:	b	418940 <ascii_strlower_n@plt+0x14538>
  418478:	mov	w0, #0x1                   	// #1
  41847c:	bl	4040c8 <malloc@plt>
  418480:	cbz	x0, 418588 <ascii_strlower_n@plt+0x14180>
  418484:	mov	x2, x0
  418488:	mov	x11, x0
  41848c:	cbz	x20, 41857c <ascii_strlower_n@plt+0x14174>
  418490:	mov	w10, #0x851f                	// #34079
  418494:	mov	w12, #0xcccd                	// #52429
  418498:	mov	w8, #0x22                  	// #34
  41849c:	mov	w9, #0x5c                  	// #92
  4184a0:	movk	w10, #0x51eb, lsl #16
  4184a4:	movk	w12, #0xcccc, lsl #16
  4184a8:	mov	w13, #0xa                   	// #10
  4184ac:	mov	w14, #0x20                  	// #32
  4184b0:	mov	x11, x2
  4184b4:	mov	x15, x20
  4184b8:	b	4184c8 <ascii_strlower_n@plt+0x140c0>
  4184bc:	strb	w8, [x11], #1
  4184c0:	ldr	x15, [x15, #8]
  4184c4:	cbz	x15, 41857c <ascii_strlower_n@plt+0x14174>
  4184c8:	cmp	x15, x20
  4184cc:	b.eq	4184d4 <ascii_strlower_n@plt+0x140cc>  // b.none
  4184d0:	strb	w14, [x11], #1
  4184d4:	strb	w8, [x11], #1
  4184d8:	ldr	x16, [x15]
  4184dc:	cbz	x16, 4184bc <ascii_strlower_n@plt+0x140b4>
  4184e0:	mov	x16, xzr
  4184e4:	add	x17, x15, #0x18
  4184e8:	b	418554 <ascii_strlower_n@plt+0x1414c>
  4184ec:	strb	w9, [x11]
  4184f0:	ldrb	w18, [x17, x16]
  4184f4:	mul	x18, x18, x10
  4184f8:	lsr	x18, x18, #37
  4184fc:	orr	w18, w18, #0x30
  418500:	strb	w18, [x11, #1]
  418504:	ldrb	w18, [x17, x16]
  418508:	mul	x18, x18, x12
  41850c:	lsr	x18, x18, #35
  418510:	mul	x0, x18, x12
  418514:	lsr	x0, x0, #35
  418518:	msub	w18, w0, w13, w18
  41851c:	orr	w18, w18, #0x30
  418520:	strb	w18, [x11, #2]
  418524:	ldrb	w18, [x17, x16]
  418528:	umull	x0, w18, w12
  41852c:	lsr	x0, x0, #35
  418530:	msub	w18, w0, w13, w18
  418534:	orr	w18, w18, #0x30
  418538:	add	x0, x11, #0x4
  41853c:	strb	w18, [x11, #3]
  418540:	ldr	x18, [x15]
  418544:	add	x16, x16, #0x1
  418548:	mov	x11, x0
  41854c:	cmp	x16, x18
  418550:	b.cs	4184bc <ascii_strlower_n@plt+0x140b4>  // b.hs, b.nlast
  418554:	ldrb	w18, [x17, x16]
  418558:	cmp	w18, #0x22
  41855c:	b.eq	4184ec <ascii_strlower_n@plt+0x140e4>  // b.none
  418560:	sub	w0, w18, #0x20
  418564:	and	w0, w0, #0xff
  418568:	cmp	w0, #0x5f
  41856c:	b.cs	4184ec <ascii_strlower_n@plt+0x140e4>  // b.hs, b.nlast
  418570:	add	x0, x11, #0x1
  418574:	strb	w18, [x11]
  418578:	b	418540 <ascii_strlower_n@plt+0x14138>
  41857c:	strb	wzr, [x11]
  418580:	stur	x2, [x29, #-72]
  418584:	b	4186fc <ascii_strlower_n@plt+0x142f4>
  418588:	mov	x20, xzr
  41858c:	stur	xzr, [x29, #-72]
  418590:	b	418940 <ascii_strlower_n@plt+0x14538>
  418594:	sub	w9, w9, w10
  418598:	add	w9, w9, #0x1
  41859c:	ucvtf	d0, w9
  4185a0:	fneg	d8, d0
  4185a4:	lsr	w9, w8, #4
  4185a8:	and	w8, w8, #0xf
  4185ac:	scvtf	d0, w8
  4185b0:	scvtf	d9, w9
  4185b4:	bl	404318 <exp10@plt>
  4185b8:	and	w9, w25, #0xf
  4185bc:	fmul	d9, d0, d9
  4185c0:	lsr	w8, w25, #4
  4185c4:	scvtf	d0, w9
  4185c8:	scvtf	d10, w8
  4185cc:	bl	404318 <exp10@plt>
  4185d0:	and	w9, w24, #0xf
  4185d4:	fmul	d10, d0, d10
  4185d8:	lsr	w8, w24, #4
  4185dc:	scvtf	d0, w9
  4185e0:	scvtf	d11, w8
  4185e4:	bl	404318 <exp10@plt>
  4185e8:	mov	w8, #0xb273                	// #45683
  4185ec:	movk	w8, #0x45e7, lsl #16
  4185f0:	cmp	w23, #0x0
  4185f4:	mov	w14, #0x53                  	// #83
  4185f8:	mov	w15, #0x4e                  	// #78
  4185fc:	csel	w4, w15, w14, lt  // lt = tstop
  418600:	smull	x14, w21, w8
  418604:	mov	w9, #0xbe59                	// #48729
  418608:	smull	x8, w22, w8
  41860c:	lsr	x15, x14, #32
  418610:	lsr	x14, x14, #63
  418614:	movk	w9, #0x4a90, lsl #16
  418618:	mov	w12, #0xea60                	// #60000
  41861c:	add	w14, w14, w15, asr #14
  418620:	lsr	x15, x8, #32
  418624:	lsr	x8, x8, #63
  418628:	mov	w10, #0x8889                	// #34953
  41862c:	add	w8, w8, w15, asr #14
  418630:	smull	x15, w21, w9
  418634:	smull	x9, w22, w9
  418638:	msub	w17, w14, w12, w21
  41863c:	fmul	d5, d0, d11
  418640:	movk	w10, #0x8888, lsl #16
  418644:	scvtf	d0, w17
  418648:	lsr	x17, x9, #32
  41864c:	lsr	x9, x9, #63
  418650:	mov	x13, #0x400000000000        	// #70368744177664
  418654:	add	w5, w9, w17, asr #20
  418658:	smull	x9, w14, w10
  41865c:	smull	x10, w8, w10
  418660:	movk	x13, #0x408f, lsl #48
  418664:	msub	w12, w8, w12, w22
  418668:	lsr	x9, x9, #32
  41866c:	lsr	x10, x10, #32
  418670:	mov	w16, #0x57                  	// #87
  418674:	fmov	d1, x13
  418678:	mov	w13, #0x45                  	// #69
  41867c:	cmp	w20, #0x0
  418680:	scvtf	d2, w12
  418684:	lsr	x12, x15, #32
  418688:	lsr	x15, x15, #63
  41868c:	add	w9, w9, w14
  418690:	add	w10, w10, w8
  418694:	mov	x18, #0x4059000000000000    	// #4636737291354636288
  418698:	csel	w7, w13, w16, lt  // lt = tstop
  41869c:	add	w2, w15, w12, asr #20
  4186a0:	asr	w12, w9, #5
  4186a4:	asr	w13, w10, #5
  4186a8:	mov	w11, #0x3c                  	// #60
  4186ac:	fmov	d6, x18
  4186b0:	add	w9, w12, w9, lsr #31
  4186b4:	add	w10, w13, w10, lsr #31
  4186b8:	adrp	x1, 423000 <ascii_strlower_n@plt+0x1ebf8>
  4186bc:	fdiv	d0, d0, d1
  4186c0:	fdiv	d1, d2, d1
  4186c4:	fdiv	d2, d8, d6
  4186c8:	fdiv	d3, d9, d6
  4186cc:	fdiv	d4, d10, d6
  4186d0:	msub	w3, w9, w11, w14
  4186d4:	msub	w6, w10, w11, w8
  4186d8:	fdiv	d5, d5, d6
  4186dc:	add	x1, x1, #0x396
  4186e0:	sub	x0, x29, #0x40
  4186e4:	bl	403e18 <asprintf@plt>
  4186e8:	ldur	x8, [x29, #-64]
  4186ec:	cmp	w0, #0x0
  4186f0:	csel	x2, xzr, x8, lt  // lt = tstop
  4186f4:	stur	x2, [x29, #-72]
  4186f8:	cbz	x2, 41893c <ascii_strlower_n@plt+0x14534>
  4186fc:	adrp	x1, 420000 <ascii_strlower_n@plt+0x1bbf8>
  418700:	add	x1, x1, #0xbb3
  418704:	add	x0, sp, #0x50
  418708:	mov	x3, xzr
  41870c:	bl	403f58 <strjoin_real@plt>
  418710:	stur	x0, [x29, #-64]
  418714:	cbz	x0, 41893c <ascii_strlower_n@plt+0x14534>
  418718:	ldur	x20, [x29, #-64]
  41871c:	str	x20, [x19, #16]
  418720:	b	418940 <ascii_strlower_n@plt+0x14538>
  418724:	adrp	x1, 420000 <ascii_strlower_n@plt+0x1bbf8>
  418728:	add	x1, x1, #0x194
  41872c:	sub	x0, x29, #0x40
  418730:	mov	w2, #0xff                  	// #255
  418734:	bl	403e18 <asprintf@plt>
  418738:	tbnz	w0, #31, 4187fc <ascii_strlower_n@plt+0x143f4>
  41873c:	ldur	x20, [x29, #-64]
  418740:	ldrh	w3, [x19, #80]
  418744:	ldrb	w4, [x19, #82]
  418748:	adrp	x1, 422000 <ascii_strlower_n@plt+0x1dbf8>
  41874c:	add	x1, x1, #0xf64
  418750:	sub	x0, x29, #0x40
  418754:	add	x2, sp, #0x50
  418758:	mov	x5, x20
  41875c:	bl	403e18 <asprintf@plt>
  418760:	tbnz	w0, #31, 418934 <ascii_strlower_n@plt+0x1452c>
  418764:	ldp	x23, x24, [x19, #88]
  418768:	mov	w22, w0
  41876c:	bl	4042f8 <columns@plt>
  418770:	mov	w5, w0
  418774:	sub	x0, x29, #0x40
  418778:	mov	w4, #0x8                   	// #8
  41877c:	mov	w1, w22
  418780:	mov	x2, x23
  418784:	mov	x3, x24
  418788:	bl	404308 <base64_append@plt>
  41878c:	tbnz	w0, #31, 418934 <ascii_strlower_n@plt+0x1452c>
  418790:	ldrh	w8, [x19, #80]
  418794:	adrp	x9, 422000 <ascii_strlower_n@plt+0x1dbf8>
  418798:	ldur	x2, [x29, #-64]
  41879c:	add	x9, x9, #0xfa2
  4187a0:	adrp	x10, 422000 <ascii_strlower_n@plt+0x1dbf8>
  4187a4:	tst	w8, #0x1
  4187a8:	add	x10, x10, #0xfa7
  4187ac:	adrp	x11, 422000 <ascii_strlower_n@plt+0x1dbf8>
  4187b0:	csel	x3, x25, x9, eq  // eq = none
  4187b4:	tst	w8, #0x80
  4187b8:	add	x11, x11, #0xfaf
  4187bc:	csel	x4, x25, x10, eq  // eq = none
  4187c0:	tst	w8, #0x100
  4187c4:	adrp	x1, 422000 <ascii_strlower_n@plt+0x1dbf8>
  4187c8:	csel	x5, x25, x11, eq  // eq = none
  4187cc:	and	w6, w21, #0xffff
  4187d0:	add	x1, x1, #0xf70
  4187d4:	add	x0, sp, #0x40
  4187d8:	bl	403e18 <asprintf@plt>
  4187dc:	tbnz	w0, #31, 418934 <ascii_strlower_n@plt+0x1452c>
  4187e0:	ldur	x0, [x29, #-64]
  4187e4:	bl	4039d8 <free@plt>
  4187e8:	ldr	x8, [sp, #64]
  4187ec:	mov	x0, x20
  4187f0:	stur	x8, [x29, #-64]
  4187f4:	bl	4039d8 <free@plt>
  4187f8:	b	418718 <ascii_strlower_n@plt+0x14310>
  4187fc:	mov	x20, xzr
  418800:	b	418934 <ascii_strlower_n@plt+0x1452c>
  418804:	mov	x0, x2
  418808:	b	418938 <ascii_strlower_n@plt+0x14530>
  41880c:	adrp	x1, 420000 <ascii_strlower_n@plt+0x1bbf8>
  418810:	add	x1, x1, #0x194
  418814:	sub	x0, x29, #0x40
  418818:	mov	w2, #0xff                  	// #255
  41881c:	bl	403e18 <asprintf@plt>
  418820:	tbnz	w0, #31, 41893c <ascii_strlower_n@plt+0x14534>
  418824:	ldur	x20, [x29, #-64]
  418828:	ldr	w8, [x19, #88]
  41882c:	sub	x0, x29, #0x8
  418830:	sub	x1, x29, #0x40
  418834:	stur	x8, [x29, #-8]
  418838:	bl	404328 <gmtime_r@plt>
  41883c:	cbz	x0, 418934 <ascii_strlower_n@plt+0x1452c>
  418840:	adrp	x2, 423000 <ascii_strlower_n@plt+0x1ebf8>
  418844:	add	x2, x2, #0x3ca
  418848:	add	x0, sp, #0x40
  41884c:	sub	x3, x29, #0x40
  418850:	mov	w1, #0xf                   	// #15
  418854:	bl	404338 <strftime@plt>
  418858:	cbz	x0, 418934 <ascii_strlower_n@plt+0x1452c>
  41885c:	ldr	w8, [x19, #92]
  418860:	sub	x0, x29, #0x8
  418864:	sub	x1, x29, #0x40
  418868:	stur	x8, [x29, #-8]
  41886c:	bl	404328 <gmtime_r@plt>
  418870:	cbz	x0, 418934 <ascii_strlower_n@plt+0x1452c>
  418874:	adrp	x2, 423000 <ascii_strlower_n@plt+0x1ebf8>
  418878:	add	x2, x2, #0x3ca
  41887c:	add	x0, sp, #0x30
  418880:	sub	x3, x29, #0x40
  418884:	mov	w1, #0xf                   	// #15
  418888:	bl	404338 <strftime@plt>
  41888c:	cbz	x0, 418934 <ascii_strlower_n@plt+0x1452c>
  418890:	cmp	x21, #0x0
  418894:	cset	w4, eq  // eq = none
  418898:	csel	x3, x21, x22, ne  // ne = any
  41889c:	cbz	x21, 418970 <ascii_strlower_n@plt+0x14568>
  4188a0:	mov	w5, wzr
  4188a4:	b	418974 <ascii_strlower_n@plt+0x1456c>
  4188a8:	mov	x20, xzr
  4188ac:	ldp	x0, x1, [x19, #104]
  4188b0:	mov	w2, wzr
  4188b4:	bl	404348 <base32hexmem@plt>
  4188b8:	cbz	x0, 418934 <ascii_strlower_n@plt+0x1452c>
  4188bc:	mov	x21, x0
  4188c0:	ldr	x0, [x19, #120]
  4188c4:	bl	418ab4 <ascii_strlower_n@plt+0x146ac>
  4188c8:	stur	x0, [x29, #-72]
  4188cc:	cbz	x0, 41892c <ascii_strlower_n@plt+0x14524>
  4188d0:	ldr	x9, [x19, #96]
  4188d4:	ldrb	w3, [x19, #80]
  4188d8:	ldrb	w4, [x19, #81]
  4188dc:	ldrh	w5, [x19, #82]
  4188e0:	adrp	x10, 422000 <ascii_strlower_n@plt+0x1dbf8>
  4188e4:	add	x10, x10, #0xff6
  4188e8:	cmp	x9, #0x0
  4188ec:	adrp	x1, 422000 <ascii_strlower_n@plt+0x1dbf8>
  4188f0:	mov	x8, x0
  4188f4:	csel	x6, x10, x20, eq  // eq = none
  4188f8:	add	x1, x1, #0xfe1
  4188fc:	sub	x0, x29, #0x40
  418900:	add	x2, sp, #0x50
  418904:	mov	x7, x21
  418908:	str	x8, [sp]
  41890c:	bl	403e18 <asprintf@plt>
  418910:	mov	w22, w0
  418914:	mov	x0, x21
  418918:	bl	4039d8 <free@plt>
  41891c:	mov	x0, x20
  418920:	bl	4039d8 <free@plt>
  418924:	tbz	w22, #31, 418718 <ascii_strlower_n@plt+0x14310>
  418928:	b	41893c <ascii_strlower_n@plt+0x14534>
  41892c:	mov	x0, x21
  418930:	bl	4039d8 <free@plt>
  418934:	mov	x0, x20
  418938:	bl	4039d8 <free@plt>
  41893c:	mov	x20, xzr
  418940:	ldur	x0, [x29, #-72]
  418944:	bl	4039d8 <free@plt>
  418948:	mov	x0, x20
  41894c:	add	sp, sp, #0x1b0
  418950:	ldp	x20, x19, [sp, #96]
  418954:	ldp	x22, x21, [sp, #80]
  418958:	ldp	x24, x23, [sp, #64]
  41895c:	ldp	x28, x25, [sp, #48]
  418960:	ldp	x29, x30, [sp, #32]
  418964:	ldp	d9, d8, [sp, #16]
  418968:	ldp	d11, d10, [sp], #112
  41896c:	ret
  418970:	ldrh	w5, [x19, #80]
  418974:	ldrh	w9, [x19, #96]
  418978:	ldr	x10, [x19, #104]
  41897c:	ldrb	w7, [x19, #83]
  418980:	ldr	w8, [x19, #84]
  418984:	adrp	x1, 422000 <ascii_strlower_n@plt+0x1dbf8>
  418988:	str	x10, [sp, #32]
  41898c:	str	w9, [sp, #24]
  418990:	add	x9, sp, #0x30
  418994:	add	x10, sp, #0x40
  418998:	add	x1, x1, #0xfb9
  41899c:	sub	x0, x29, #0x40
  4189a0:	add	x2, sp, #0x50
  4189a4:	mov	x6, x20
  4189a8:	stp	x10, x9, [sp, #8]
  4189ac:	str	w8, [sp]
  4189b0:	bl	403e18 <asprintf@plt>
  4189b4:	tbnz	w0, #31, 418934 <ascii_strlower_n@plt+0x1452c>
  4189b8:	ldp	x22, x23, [x19, #112]
  4189bc:	mov	w21, w0
  4189c0:	bl	4042f8 <columns@plt>
  4189c4:	mov	w5, w0
  4189c8:	sub	x0, x29, #0x40
  4189cc:	mov	w4, #0x8                   	// #8
  4189d0:	mov	w1, w21
  4189d4:	mov	x2, x22
  4189d8:	mov	x3, x23
  4189dc:	bl	404308 <base64_append@plt>
  4189e0:	b	4180bc <ascii_strlower_n@plt+0x13cb4>
  4189e4:	adrp	x1, 422000 <ascii_strlower_n@plt+0x1dbf8>
  4189e8:	adrp	x2, 422000 <ascii_strlower_n@plt+0x1dbf8>
  4189ec:	adrp	x4, 422000 <ascii_strlower_n@plt+0x1dbf8>
  4189f0:	add	x1, x1, #0x14e
  4189f4:	add	x2, x2, #0x86e
  4189f8:	add	x4, x4, #0xee0
  4189fc:	mov	w3, #0x338                 	// #824
  418a00:	bl	403a98 <log_assert_failed_realm@plt>
  418a04:	adrp	x1, 422000 <ascii_strlower_n@plt+0x1dbf8>
  418a08:	adrp	x2, 422000 <ascii_strlower_n@plt+0x1dbf8>
  418a0c:	adrp	x4, 422000 <ascii_strlower_n@plt+0x1dbf8>
  418a10:	add	x1, x1, #0xf4f
  418a14:	add	x2, x2, #0x86e
  418a18:	add	x4, x4, #0xee0
  418a1c:	mov	w3, #0x396                 	// #918
  418a20:	mov	w0, wzr
  418a24:	bl	403a98 <log_assert_failed_realm@plt>
  418a28:	stp	x29, x30, [sp, #-32]!
  418a2c:	cmp	w0, #0xff
  418a30:	str	x19, [sp, #16]
  418a34:	mov	x29, sp
  418a38:	b.ls	418a4c <ascii_strlower_n@plt+0x14644>  // b.plast
  418a3c:	mov	w0, #0xffffffde            	// #-34
  418a40:	ldr	x19, [sp, #16]
  418a44:	ldp	x29, x30, [sp], #32
  418a48:	ret
  418a4c:	mov	x19, x1
  418a50:	b.ne	418a74 <ascii_strlower_n@plt+0x1466c>  // b.any
  418a54:	adrp	x1, 420000 <ascii_strlower_n@plt+0x1bbf8>
  418a58:	add	x1, x1, #0x194
  418a5c:	add	x0, x29, #0x18
  418a60:	mov	w2, #0xff                  	// #255
  418a64:	bl	403e18 <asprintf@plt>
  418a68:	tbnz	w0, #31, 418aa4 <ascii_strlower_n@plt+0x1469c>
  418a6c:	ldr	x8, [x29, #24]
  418a70:	b	418a90 <ascii_strlower_n@plt+0x14688>
  418a74:	adrp	x8, 43e000 <ascii_strlower_n@plt+0x39bf8>
  418a78:	add	x8, x8, #0x3f8
  418a7c:	ldr	x0, [x8, w0, uxtw #3]
  418a80:	bl	403ae8 <strdup@plt>
  418a84:	str	x0, [x29, #24]
  418a88:	cbz	x0, 418aa4 <ascii_strlower_n@plt+0x1469c>
  418a8c:	mov	x8, x0
  418a90:	mov	w0, wzr
  418a94:	str	x8, [x19]
  418a98:	ldr	x19, [sp, #16]
  418a9c:	ldp	x29, x30, [sp], #32
  418aa0:	ret
  418aa4:	mov	w0, #0xfffffff4            	// #-12
  418aa8:	ldr	x19, [sp, #16]
  418aac:	ldp	x29, x30, [sp], #32
  418ab0:	ret
  418ab4:	sub	sp, sp, #0x50
  418ab8:	stp	x29, x30, [sp, #48]
  418abc:	add	x29, sp, #0x30
  418ac0:	add	x1, sp, #0x18
  418ac4:	add	x2, sp, #0x14
  418ac8:	stp	x20, x19, [sp, #64]
  418acc:	mov	x19, x0
  418ad0:	stur	xzr, [x29, #-8]
  418ad4:	str	wzr, [sp, #24]
  418ad8:	bl	404138 <bitmap_iterate@plt>
  418adc:	mov	w8, w0
  418ae0:	mov	x0, xzr
  418ae4:	tbz	w8, #0, 418b5c <ascii_strlower_n@plt+0x14754>
  418ae8:	adrp	x20, 423000 <ascii_strlower_n@plt+0x1ebf8>
  418aec:	add	x20, x20, #0x3d7
  418af0:	b	418b20 <ascii_strlower_n@plt+0x14718>
  418af4:	ldr	w0, [sp, #20]
  418af8:	bl	41d148 <ascii_strlower_n@plt+0x18d40>
  418afc:	mov	x1, x0
  418b00:	sub	x0, x29, #0x8
  418b04:	bl	403a78 <strv_extend@plt>
  418b08:	tbnz	w0, #31, 418b50 <ascii_strlower_n@plt+0x14748>
  418b0c:	add	x1, sp, #0x18
  418b10:	add	x2, sp, #0x14
  418b14:	mov	x0, x19
  418b18:	bl	404138 <bitmap_iterate@plt>
  418b1c:	tbz	w0, #0, 418b58 <ascii_strlower_n@plt+0x14750>
  418b20:	ldr	w0, [sp, #20]
  418b24:	bl	41d148 <ascii_strlower_n@plt+0x18d40>
  418b28:	cbnz	x0, 418af4 <ascii_strlower_n@plt+0x146ec>
  418b2c:	ldr	w2, [sp, #20]
  418b30:	add	x0, sp, #0x8
  418b34:	mov	x1, x20
  418b38:	bl	403e18 <asprintf@plt>
  418b3c:	tbnz	w0, #31, 418b50 <ascii_strlower_n@plt+0x14748>
  418b40:	ldr	x1, [sp, #8]
  418b44:	sub	x0, x29, #0x8
  418b48:	bl	403f48 <strv_consume@plt>
  418b4c:	tbz	w0, #31, 418b0c <ascii_strlower_n@plt+0x14704>
  418b50:	mov	x19, xzr
  418b54:	b	418ba8 <ascii_strlower_n@plt+0x147a0>
  418b58:	ldur	x0, [x29, #-8]
  418b5c:	adrp	x1, 420000 <ascii_strlower_n@plt+0x1bbf8>
  418b60:	add	x1, x1, #0xbb3
  418b64:	mov	x2, xzr
  418b68:	bl	404358 <strv_join_prefix@plt>
  418b6c:	mov	x19, x0
  418b70:	cbz	x0, 418ba8 <ascii_strlower_n@plt+0x147a0>
  418b74:	adrp	x0, 423000 <ascii_strlower_n@plt+0x1ebf8>
  418b78:	adrp	x2, 423000 <ascii_strlower_n@plt+0x1ebf8>
  418b7c:	add	x0, x0, #0x3de
  418b80:	add	x2, x2, #0x3e1
  418b84:	mov	x1, x19
  418b88:	mov	x3, xzr
  418b8c:	bl	403f58 <strjoin_real@plt>
  418b90:	mov	x20, x0
  418b94:	mov	x0, x19
  418b98:	bl	4039d8 <free@plt>
  418b9c:	ldur	x0, [x29, #-8]
  418ba0:	cbnz	x0, 418bbc <ascii_strlower_n@plt+0x147b4>
  418ba4:	b	418bc0 <ascii_strlower_n@plt+0x147b8>
  418ba8:	mov	x20, xzr
  418bac:	mov	x0, x19
  418bb0:	bl	4039d8 <free@plt>
  418bb4:	ldur	x0, [x29, #-8]
  418bb8:	cbz	x0, 418bc0 <ascii_strlower_n@plt+0x147b8>
  418bbc:	bl	403aa8 <strv_free@plt>
  418bc0:	mov	x0, x20
  418bc4:	ldp	x20, x19, [sp, #64]
  418bc8:	ldp	x29, x30, [sp, #48]
  418bcc:	add	sp, sp, #0x50
  418bd0:	ret
  418bd4:	stp	x29, x30, [sp, #-16]!
  418bd8:	mov	x29, sp
  418bdc:	cbz	x0, 418c58 <ascii_strlower_n@plt+0x14850>
  418be0:	cbz	x1, 418c78 <ascii_strlower_n@plt+0x14870>
  418be4:	ldrb	w8, [x0, #48]
  418be8:	tbnz	w8, #0, 418c28 <ascii_strlower_n@plt+0x14820>
  418bec:	ldr	x8, [x0, #8]
  418bf0:	ldrh	w8, [x8, #6]
  418bf4:	sub	w8, w8, #0x1
  418bf8:	cmp	w8, #0x62
  418bfc:	b.hi	418c28 <ascii_strlower_n@plt+0x14820>  // b.pmore
  418c00:	adrp	x9, 425000 <ascii_strlower_n@plt+0x20bf8>
  418c04:	add	x9, x9, #0x362
  418c08:	adr	x10, 418c1c <ascii_strlower_n@plt+0x14814>
  418c0c:	ldrb	w11, [x9, x8]
  418c10:	add	x10, x10, x11, lsl #2
  418c14:	mov	x8, #0xffffffffffffffea    	// #-22
  418c18:	br	x10
  418c1c:	mov	x0, x8
  418c20:	ldp	x29, x30, [sp], #16
  418c24:	ret
  418c28:	ldr	x8, [x0, #80]
  418c2c:	str	x8, [x1]
  418c30:	ldr	x8, [x0, #88]
  418c34:	mov	x0, x8
  418c38:	ldp	x29, x30, [sp], #16
  418c3c:	ret
  418c40:	ldr	x8, [x0, #88]
  418c44:	str	x8, [x1]
  418c48:	ldr	x8, [x0, #96]
  418c4c:	mov	x0, x8
  418c50:	ldp	x29, x30, [sp], #16
  418c54:	ret
  418c58:	adrp	x1, 422000 <ascii_strlower_n@plt+0x1dbf8>
  418c5c:	adrp	x2, 422000 <ascii_strlower_n@plt+0x1dbf8>
  418c60:	adrp	x4, 423000 <ascii_strlower_n@plt+0x1ebf8>
  418c64:	add	x1, x1, #0x14e
  418c68:	add	x2, x2, #0x86e
  418c6c:	add	x4, x4, #0x99
  418c70:	mov	w3, #0x497                 	// #1175
  418c74:	bl	403a98 <log_assert_failed_realm@plt>
  418c78:	adrp	x1, 423000 <ascii_strlower_n@plt+0x1ebf8>
  418c7c:	adrp	x2, 422000 <ascii_strlower_n@plt+0x1dbf8>
  418c80:	adrp	x4, 423000 <ascii_strlower_n@plt+0x1ebf8>
  418c84:	add	x1, x1, #0xdb
  418c88:	add	x2, x2, #0x86e
  418c8c:	add	x4, x4, #0x99
  418c90:	mov	w3, #0x498                 	// #1176
  418c94:	mov	w0, wzr
  418c98:	bl	403a98 <log_assert_failed_realm@plt>
  418c9c:	sub	sp, sp, #0xe0
  418ca0:	add	x8, sp, #0x18
  418ca4:	movi	v0.2d, #0x0
  418ca8:	adrp	x9, 425000 <ascii_strlower_n@plt+0x20bf8>
  418cac:	stur	q0, [x8, #152]
  418cb0:	stur	q0, [x8, #136]
  418cb4:	stur	q0, [x8, #120]
  418cb8:	stp	q0, q0, [sp, #112]
  418cbc:	stp	q0, q0, [sp, #80]
  418cc0:	stp	q0, q0, [sp, #48]
  418cc4:	stur	q0, [sp, #32]
  418cc8:	ldr	d0, [x9, #1168]
  418ccc:	tst	w1, #0x1
  418cd0:	mov	w8, #0x5                   	// #5
  418cd4:	mov	w9, #0xd                   	// #13
  418cd8:	csel	w8, w9, w8, ne  // ne = any
  418cdc:	stp	x29, x30, [sp, #192]
  418ce0:	stp	x20, x19, [sp, #208]
  418ce4:	add	x29, sp, #0xc0
  418ce8:	str	d0, [sp, #24]
  418cec:	strb	w8, [sp, #184]
  418cf0:	cbz	x0, 418d98 <ascii_strlower_n@plt+0x14990>
  418cf4:	ldr	x8, [x0, #56]
  418cf8:	mov	w20, w1
  418cfc:	mov	x19, x0
  418d00:	cbz	x8, 418d10 <ascii_strlower_n@plt+0x14908>
  418d04:	ldrb	w8, [x19, #48]
  418d08:	eor	w8, w20, w8, lsr #1
  418d0c:	tbz	w8, #0, 418d84 <ascii_strlower_n@plt+0x1497c>
  418d10:	add	x0, sp, #0x18
  418d14:	add	x3, sp, #0x10
  418d18:	add	x4, sp, #0x8
  418d1c:	mov	x1, x19
  418d20:	mov	w2, wzr
  418d24:	bl	40f724 <ascii_strlower_n@plt+0xb31c>
  418d28:	tbnz	w0, #31, 418d88 <ascii_strlower_n@plt+0x14980>
  418d2c:	ldr	x8, [sp, #16]
  418d30:	cbnz	x8, 418db8 <ascii_strlower_n@plt+0x149b0>
  418d34:	ldr	x8, [sp, #64]
  418d38:	cbz	x8, 418ddc <ascii_strlower_n@plt+0x149d4>
  418d3c:	ldr	x0, [x19, #56]
  418d40:	bl	4039d8 <free@plt>
  418d44:	ldr	x8, [sp, #64]
  418d48:	ldrb	w9, [x19, #48]
  418d4c:	tst	w20, #0x1
  418d50:	mov	w10, #0x2                   	// #2
  418d54:	str	x8, [x19, #56]
  418d58:	ldr	x8, [sp, #32]
  418d5c:	csel	w10, w10, wzr, ne  // ne = any
  418d60:	and	w9, w9, #0xfffffffd
  418d64:	orr	w9, w9, w10
  418d68:	str	x8, [x19, #64]
  418d6c:	ldr	x8, [sp, #8]
  418d70:	add	x0, sp, #0x18
  418d74:	strb	w9, [x19, #48]
  418d78:	str	x8, [x19, #72]
  418d7c:	str	xzr, [sp, #64]
  418d80:	bl	40dbdc <ascii_strlower_n@plt+0x97d4>
  418d84:	mov	w0, wzr
  418d88:	ldp	x20, x19, [sp, #208]
  418d8c:	ldp	x29, x30, [sp, #192]
  418d90:	add	sp, sp, #0xe0
  418d94:	ret
  418d98:	adrp	x1, 422000 <ascii_strlower_n@plt+0x1dbf8>
  418d9c:	adrp	x2, 422000 <ascii_strlower_n@plt+0x1dbf8>
  418da0:	adrp	x4, 423000 <ascii_strlower_n@plt+0x1ebf8>
  418da4:	add	x1, x1, #0x14e
  418da8:	add	x2, x2, #0x86e
  418dac:	add	x4, x4, #0xdf
  418db0:	mov	w3, #0x4cb                 	// #1227
  418db4:	bl	403a98 <log_assert_failed_realm@plt>
  418db8:	adrp	x1, 423000 <ascii_strlower_n@plt+0x1ebf8>
  418dbc:	adrp	x2, 422000 <ascii_strlower_n@plt+0x1dbf8>
  418dc0:	adrp	x4, 423000 <ascii_strlower_n@plt+0x1ebf8>
  418dc4:	add	x1, x1, #0x122
  418dc8:	add	x2, x2, #0x86e
  418dcc:	add	x4, x4, #0xdf
  418dd0:	mov	w3, #0x4dc                 	// #1244
  418dd4:	mov	w0, wzr
  418dd8:	bl	403a98 <log_assert_failed_realm@plt>
  418ddc:	adrp	x1, 423000 <ascii_strlower_n@plt+0x1ebf8>
  418de0:	adrp	x2, 422000 <ascii_strlower_n@plt+0x1dbf8>
  418de4:	adrp	x4, 423000 <ascii_strlower_n@plt+0x1ebf8>
  418de8:	add	x1, x1, #0x12d
  418dec:	add	x2, x2, #0x86e
  418df0:	add	x4, x4, #0xdf
  418df4:	mov	w3, #0x4dd                 	// #1245
  418df8:	mov	w0, wzr
  418dfc:	bl	403a98 <log_assert_failed_realm@plt>
  418e00:	stp	x29, x30, [sp, #-48]!
  418e04:	str	x21, [sp, #16]
  418e08:	stp	x20, x19, [sp, #32]
  418e0c:	mov	x29, sp
  418e10:	cbz	x0, 418edc <ascii_strlower_n@plt+0x14ad4>
  418e14:	mov	x19, x1
  418e18:	cbz	x1, 418efc <ascii_strlower_n@plt+0x14af4>
  418e1c:	ldr	w1, [x0, #40]
  418e20:	mov	x20, x0
  418e24:	cmn	w1, #0x1
  418e28:	b.eq	418e80 <ascii_strlower_n@plt+0x14a78>  // b.none
  418e2c:	ldr	x8, [x20, #8]
  418e30:	cbz	x8, 418e94 <ascii_strlower_n@plt+0x14a8c>
  418e34:	ldr	x9, [x8, #8]
  418e38:	add	x8, x8, #0x10
  418e3c:	cmp	x9, #0x0
  418e40:	csel	x21, x8, x9, eq  // eq = none
  418e44:	mov	x0, x21
  418e48:	bl	4040e8 <dns_name_is_root@plt>
  418e4c:	ldr	w1, [x20, #40]
  418e50:	adrp	x8, 422000 <ascii_strlower_n@plt+0x1dbf8>
  418e54:	add	x8, x8, #0xaa1
  418e58:	tst	w0, #0x1
  418e5c:	csel	x0, x8, x21, ne  // ne = any
  418e60:	add	x2, x29, #0x18
  418e64:	str	x0, [x29, #24]
  418e68:	bl	404368 <dns_name_skip@plt>
  418e6c:	tbz	w0, #31, 418ea8 <ascii_strlower_n@plt+0x14aa0>
  418e70:	ldp	x20, x19, [sp, #32]
  418e74:	ldr	x21, [sp, #16]
  418e78:	ldp	x29, x30, [sp], #48
  418e7c:	ret
  418e80:	mov	w0, #0xffffffc3            	// #-61
  418e84:	ldp	x20, x19, [sp, #32]
  418e88:	ldr	x21, [sp, #16]
  418e8c:	ldp	x29, x30, [sp], #48
  418e90:	ret
  418e94:	mov	x0, xzr
  418e98:	add	x2, x29, #0x18
  418e9c:	str	x0, [x29, #24]
  418ea0:	bl	404368 <dns_name_skip@plt>
  418ea4:	tbnz	w0, #31, 418e70 <ascii_strlower_n@plt+0x14a68>
  418ea8:	cbz	w0, 418ec8 <ascii_strlower_n@plt+0x14ac0>
  418eac:	ldr	x8, [x29, #24]
  418eb0:	mov	w0, wzr
  418eb4:	str	x8, [x19]
  418eb8:	ldp	x20, x19, [sp, #32]
  418ebc:	ldr	x21, [sp, #16]
  418ec0:	ldp	x29, x30, [sp], #48
  418ec4:	ret
  418ec8:	mov	w0, #0xffffffea            	// #-22
  418ecc:	ldp	x20, x19, [sp, #32]
  418ed0:	ldr	x21, [sp, #16]
  418ed4:	ldp	x29, x30, [sp], #48
  418ed8:	ret
  418edc:	adrp	x1, 422000 <ascii_strlower_n@plt+0x1dbf8>
  418ee0:	adrp	x2, 422000 <ascii_strlower_n@plt+0x1dbf8>
  418ee4:	adrp	x4, 423000 <ascii_strlower_n@plt+0x1ebf8>
  418ee8:	add	x1, x1, #0x14e
  418eec:	add	x2, x2, #0x86e
  418ef0:	add	x4, x4, #0x13a
  418ef4:	mov	w3, #0x4ef                 	// #1263
  418ef8:	bl	403a98 <log_assert_failed_realm@plt>
  418efc:	adrp	x1, 420000 <ascii_strlower_n@plt+0x1bbf8>
  418f00:	adrp	x2, 422000 <ascii_strlower_n@plt+0x1dbf8>
  418f04:	adrp	x4, 423000 <ascii_strlower_n@plt+0x1ebf8>
  418f08:	add	x1, x1, #0x41e
  418f0c:	add	x2, x2, #0x86e
  418f10:	add	x4, x4, #0x13a
  418f14:	mov	w3, #0x4f0                 	// #1264
  418f18:	mov	w0, wzr
  418f1c:	bl	403a98 <log_assert_failed_realm@plt>
  418f20:	stp	x29, x30, [sp, #-48]!
  418f24:	str	x21, [sp, #16]
  418f28:	stp	x20, x19, [sp, #32]
  418f2c:	mov	x29, sp
  418f30:	cbz	x0, 418ffc <ascii_strlower_n@plt+0x14bf4>
  418f34:	mov	x19, x1
  418f38:	cbz	x1, 41901c <ascii_strlower_n@plt+0x14c14>
  418f3c:	ldr	w1, [x0, #44]
  418f40:	mov	x20, x0
  418f44:	cmn	w1, #0x1
  418f48:	b.eq	418fa0 <ascii_strlower_n@plt+0x14b98>  // b.none
  418f4c:	ldr	x8, [x20, #8]
  418f50:	cbz	x8, 418fb4 <ascii_strlower_n@plt+0x14bac>
  418f54:	ldr	x9, [x8, #8]
  418f58:	add	x8, x8, #0x10
  418f5c:	cmp	x9, #0x0
  418f60:	csel	x21, x8, x9, eq  // eq = none
  418f64:	mov	x0, x21
  418f68:	bl	4040e8 <dns_name_is_root@plt>
  418f6c:	ldr	w1, [x20, #44]
  418f70:	adrp	x8, 422000 <ascii_strlower_n@plt+0x1dbf8>
  418f74:	add	x8, x8, #0xaa1
  418f78:	tst	w0, #0x1
  418f7c:	csel	x0, x8, x21, ne  // ne = any
  418f80:	add	x2, x29, #0x18
  418f84:	str	x0, [x29, #24]
  418f88:	bl	404368 <dns_name_skip@plt>
  418f8c:	tbz	w0, #31, 418fc8 <ascii_strlower_n@plt+0x14bc0>
  418f90:	ldp	x20, x19, [sp, #32]
  418f94:	ldr	x21, [sp, #16]
  418f98:	ldp	x29, x30, [sp], #48
  418f9c:	ret
  418fa0:	mov	w0, #0xffffffc3            	// #-61
  418fa4:	ldp	x20, x19, [sp, #32]
  418fa8:	ldr	x21, [sp, #16]
  418fac:	ldp	x29, x30, [sp], #48
  418fb0:	ret
  418fb4:	mov	x0, xzr
  418fb8:	add	x2, x29, #0x18
  418fbc:	str	x0, [x29, #24]
  418fc0:	bl	404368 <dns_name_skip@plt>
  418fc4:	tbnz	w0, #31, 418f90 <ascii_strlower_n@plt+0x14b88>
  418fc8:	cbz	w0, 418fe8 <ascii_strlower_n@plt+0x14be0>
  418fcc:	ldr	x8, [x29, #24]
  418fd0:	mov	w0, wzr
  418fd4:	str	x8, [x19]
  418fd8:	ldp	x20, x19, [sp, #32]
  418fdc:	ldr	x21, [sp, #16]
  418fe0:	ldp	x29, x30, [sp], #48
  418fe4:	ret
  418fe8:	mov	w0, #0xffffffea            	// #-22
  418fec:	ldp	x20, x19, [sp, #32]
  418ff0:	ldr	x21, [sp, #16]
  418ff4:	ldp	x29, x30, [sp], #48
  418ff8:	ret
  418ffc:	adrp	x1, 422000 <ascii_strlower_n@plt+0x1dbf8>
  419000:	adrp	x2, 422000 <ascii_strlower_n@plt+0x1dbf8>
  419004:	adrp	x4, 423000 <ascii_strlower_n@plt+0x1ebf8>
  419008:	add	x1, x1, #0x14e
  41900c:	add	x2, x2, #0x86e
  419010:	add	x4, x4, #0x17d
  419014:	mov	w3, #0x506                 	// #1286
  419018:	bl	403a98 <log_assert_failed_realm@plt>
  41901c:	adrp	x1, 420000 <ascii_strlower_n@plt+0x1bbf8>
  419020:	adrp	x2, 422000 <ascii_strlower_n@plt+0x1dbf8>
  419024:	adrp	x4, 423000 <ascii_strlower_n@plt+0x1ebf8>
  419028:	add	x1, x1, #0x41e
  41902c:	add	x2, x2, #0x86e
  419030:	add	x4, x4, #0x17d
  419034:	mov	w3, #0x507                 	// #1287
  419038:	mov	w0, wzr
  41903c:	bl	403a98 <log_assert_failed_realm@plt>
  419040:	stp	x29, x30, [sp, #-48]!
  419044:	str	x21, [sp, #16]
  419048:	stp	x20, x19, [sp, #32]
  41904c:	mov	x29, sp
  419050:	cbz	x0, 419118 <ascii_strlower_n@plt+0x14d10>
  419054:	mov	x19, x1
  419058:	ldr	w1, [x0, #40]
  41905c:	mov	x20, x0
  419060:	cmn	w1, #0x1
  419064:	b.eq	4190bc <ascii_strlower_n@plt+0x14cb4>  // b.none
  419068:	ldr	x8, [x20, #8]
  41906c:	cbz	x8, 4190d0 <ascii_strlower_n@plt+0x14cc8>
  419070:	ldr	x9, [x8, #8]
  419074:	add	x8, x8, #0x10
  419078:	cmp	x9, #0x0
  41907c:	csel	x21, x8, x9, eq  // eq = none
  419080:	mov	x0, x21
  419084:	bl	4040e8 <dns_name_is_root@plt>
  419088:	ldr	w1, [x20, #40]
  41908c:	adrp	x8, 422000 <ascii_strlower_n@plt+0x1dbf8>
  419090:	add	x8, x8, #0xaa1
  419094:	tst	w0, #0x1
  419098:	csel	x0, x8, x21, ne  // ne = any
  41909c:	add	x2, x29, #0x18
  4190a0:	str	x0, [x29, #24]
  4190a4:	bl	404368 <dns_name_skip@plt>
  4190a8:	tbz	w0, #31, 4190e4 <ascii_strlower_n@plt+0x14cdc>
  4190ac:	ldp	x20, x19, [sp, #32]
  4190b0:	ldr	x21, [sp, #16]
  4190b4:	ldp	x29, x30, [sp], #48
  4190b8:	ret
  4190bc:	mov	w0, #0xffffffc3            	// #-61
  4190c0:	ldp	x20, x19, [sp, #32]
  4190c4:	ldr	x21, [sp, #16]
  4190c8:	ldp	x29, x30, [sp], #48
  4190cc:	ret
  4190d0:	mov	x0, xzr
  4190d4:	add	x2, x29, #0x18
  4190d8:	str	x0, [x29, #24]
  4190dc:	bl	404368 <dns_name_skip@plt>
  4190e0:	tbnz	w0, #31, 4190ac <ascii_strlower_n@plt+0x14ca4>
  4190e4:	cbz	w0, 419104 <ascii_strlower_n@plt+0x14cfc>
  4190e8:	ldr	x1, [x29, #24]
  4190ec:	mov	x0, x19
  4190f0:	bl	404248 <dns_name_equal@plt>
  4190f4:	ldp	x20, x19, [sp, #32]
  4190f8:	ldr	x21, [sp, #16]
  4190fc:	ldp	x29, x30, [sp], #48
  419100:	ret
  419104:	mov	w0, #0xffffffea            	// #-22
  419108:	ldp	x20, x19, [sp, #32]
  41910c:	ldr	x21, [sp, #16]
  419110:	ldp	x29, x30, [sp], #48
  419114:	ret
  419118:	adrp	x1, 422000 <ascii_strlower_n@plt+0x1dbf8>
  41911c:	adrp	x2, 422000 <ascii_strlower_n@plt+0x1dbf8>
  419120:	adrp	x4, 423000 <ascii_strlower_n@plt+0x1ebf8>
  419124:	add	x1, x1, #0x14e
  419128:	add	x2, x2, #0x86e
  41912c:	add	x4, x4, #0x1c0
  419130:	mov	w3, #0x51d                 	// #1309
  419134:	bl	403a98 <log_assert_failed_realm@plt>
  419138:	stp	x29, x30, [sp, #-32]!
  41913c:	str	x19, [sp, #16]
  419140:	mov	x29, sp
  419144:	cbz	x0, 4191fc <ascii_strlower_n@plt+0x14df4>
  419148:	ldr	w8, [x0, #44]
  41914c:	cmn	w8, #0x1
  419150:	b.eq	4191b4 <ascii_strlower_n@plt+0x14dac>  // b.none
  419154:	cmp	w8, #0x1
  419158:	b.eq	419170 <ascii_strlower_n@plt+0x14d68>  // b.none
  41915c:	cbnz	w8, 4191c4 <ascii_strlower_n@plt+0x14dbc>
  419160:	mov	w0, wzr
  419164:	ldr	x19, [sp, #16]
  419168:	ldp	x29, x30, [sp], #32
  41916c:	ret
  419170:	ldr	x8, [x0, #8]
  419174:	cbz	x8, 4191d4 <ascii_strlower_n@plt+0x14dcc>
  419178:	ldr	x9, [x8, #8]
  41917c:	add	x8, x8, #0x10
  419180:	cmp	x9, #0x0
  419184:	csel	x19, x8, x9, eq  // eq = none
  419188:	mov	x0, x19
  41918c:	bl	4040e8 <dns_name_is_root@plt>
  419190:	adrp	x8, 422000 <ascii_strlower_n@plt+0x1dbf8>
  419194:	add	x8, x8, #0xaa1
  419198:	tst	w0, #0x1
  41919c:	csel	x0, x8, x19, ne  // ne = any
  4191a0:	adrp	x1, 420000 <ascii_strlower_n@plt+0x1bbf8>
  4191a4:	add	x1, x1, #0x91c
  4191a8:	bl	404378 <dns_name_startswith@plt>
  4191ac:	tbz	w0, #31, 4191e8 <ascii_strlower_n@plt+0x14de0>
  4191b0:	b	419164 <ascii_strlower_n@plt+0x14d5c>
  4191b4:	mov	w0, #0xffffffc3            	// #-61
  4191b8:	ldr	x19, [sp, #16]
  4191bc:	ldp	x29, x30, [sp], #32
  4191c0:	ret
  4191c4:	mov	w0, #0x1                   	// #1
  4191c8:	ldr	x19, [sp, #16]
  4191cc:	ldp	x29, x30, [sp], #32
  4191d0:	ret
  4191d4:	mov	x0, xzr
  4191d8:	adrp	x1, 420000 <ascii_strlower_n@plt+0x1bbf8>
  4191dc:	add	x1, x1, #0x91c
  4191e0:	bl	404378 <dns_name_startswith@plt>
  4191e4:	tbnz	w0, #31, 419164 <ascii_strlower_n@plt+0x14d5c>
  4191e8:	cmp	w0, #0x0
  4191ec:	cset	w0, eq  // eq = none
  4191f0:	ldr	x19, [sp, #16]
  4191f4:	ldp	x29, x30, [sp], #32
  4191f8:	ret
  4191fc:	adrp	x1, 422000 <ascii_strlower_n@plt+0x1dbf8>
  419200:	adrp	x2, 422000 <ascii_strlower_n@plt+0x1dbf8>
  419204:	adrp	x4, 423000 <ascii_strlower_n@plt+0x1ebf8>
  419208:	add	x1, x1, #0x14e
  41920c:	add	x2, x2, #0x86e
  419210:	add	x4, x4, #0x205
  419214:	mov	w3, #0x529                 	// #1321
  419218:	bl	403a98 <log_assert_failed_realm@plt>
  41921c:	sub	sp, sp, #0x40
  419220:	stp	x29, x30, [sp, #16]
  419224:	stp	x22, x21, [sp, #32]
  419228:	stp	x20, x19, [sp, #48]
  41922c:	add	x29, sp, #0x10
  419230:	cbz	x0, 4195fc <ascii_strlower_n@plt+0x151f4>
  419234:	ldr	x22, [x0, #8]
  419238:	mov	x20, x0
  41923c:	cbz	x22, 41961c <ascii_strlower_n@plt+0x15214>
  419240:	ldr	x8, [x22, #8]
  419244:	add	x9, x22, #0x10
  419248:	mov	x19, x1
  41924c:	cmp	x8, #0x0
  419250:	csel	x21, x9, x8, eq  // eq = none
  419254:	mov	x0, x21
  419258:	bl	4040e8 <dns_name_is_root@plt>
  41925c:	adrp	x8, 422000 <ascii_strlower_n@plt+0x1dbf8>
  419260:	add	x8, x8, #0xaa1
  419264:	tst	w0, #0x1
  419268:	csel	x0, x8, x21, ne  // ne = any
  41926c:	mov	x1, x19
  419270:	bl	404258 <dns_name_hash_func@plt>
  419274:	add	x0, x22, #0x4
  419278:	mov	w1, #0x2                   	// #2
  41927c:	mov	x2, x19
  419280:	bl	4041e8 <siphash24_compress@plt>
  419284:	add	x0, x22, #0x6
  419288:	mov	w1, #0x2                   	// #2
  41928c:	mov	x2, x19
  419290:	bl	4041e8 <siphash24_compress@plt>
  419294:	ldrb	w8, [x20, #48]
  419298:	tbnz	w8, #0, 41936c <ascii_strlower_n@plt+0x14f64>
  41929c:	ldr	x8, [x20, #8]
  4192a0:	ldrh	w9, [x8, #6]
  4192a4:	sub	w8, w9, #0x1
  4192a8:	cmp	w8, #0x62
  4192ac:	b.hi	419340 <ascii_strlower_n@plt+0x14f38>  // b.pmore
  4192b0:	adrp	x9, 425000 <ascii_strlower_n@plt+0x20bf8>
  4192b4:	add	x9, x9, #0x3c5
  4192b8:	adr	x10, 4192c8 <ascii_strlower_n@plt+0x14ec0>
  4192bc:	ldrb	w11, [x9, x8]
  4192c0:	add	x10, x10, x11, lsl #2
  4192c4:	br	x10
  4192c8:	ldr	x0, [x20, #80]
  4192cc:	b	41947c <ascii_strlower_n@plt+0x15074>
  4192d0:	add	x0, x20, #0x50
  4192d4:	mov	w1, #0x2                   	// #2
  4192d8:	mov	x2, x19
  4192dc:	bl	4041e8 <siphash24_compress@plt>
  4192e0:	add	x0, x20, #0x52
  4192e4:	mov	w1, #0x1                   	// #1
  4192e8:	mov	x2, x19
  4192ec:	bl	4041e8 <siphash24_compress@plt>
  4192f0:	add	x0, x20, #0x53
  4192f4:	b	419520 <ascii_strlower_n@plt+0x15118>
  4192f8:	ldr	x20, [x20, #80]
  4192fc:	cbz	x20, 41932c <ascii_strlower_n@plt+0x14f24>
  419300:	ldr	x1, [x20]
  419304:	add	x0, x20, #0x18
  419308:	mov	x2, x19
  41930c:	bl	4041e8 <siphash24_compress@plt>
  419310:	sub	x0, x29, #0x4
  419314:	mov	w1, #0x1                   	// #1
  419318:	mov	x2, x19
  41931c:	sturb	wzr, [x29, #-4]
  419320:	bl	4041e8 <siphash24_compress@plt>
  419324:	ldr	x20, [x20, #8]
  419328:	cbnz	x20, 419300 <ascii_strlower_n@plt+0x14ef8>
  41932c:	ldp	x20, x19, [sp, #48]
  419330:	ldp	x22, x21, [sp, #32]
  419334:	ldp	x29, x30, [sp, #16]
  419338:	add	sp, sp, #0x40
  41933c:	ret
  419340:	cmp	w9, #0x101
  419344:	b.ne	41936c <ascii_strlower_n@plt+0x14f64>  // b.any
  419348:	add	x0, x20, #0x50
  41934c:	mov	w1, #0x1                   	// #1
  419350:	mov	x2, x19
  419354:	bl	4041e8 <siphash24_compress@plt>
  419358:	ldr	x0, [x20, #88]
  41935c:	mov	x1, x19
  419360:	bl	404388 <string_hash_func@plt>
  419364:	ldp	x0, x1, [x20, #96]
  419368:	b	419370 <ascii_strlower_n@plt+0x14f68>
  41936c:	ldp	x0, x1, [x20, #80]
  419370:	mov	x2, x19
  419374:	ldp	x20, x19, [sp, #48]
  419378:	ldp	x22, x21, [sp, #32]
  41937c:	ldp	x29, x30, [sp, #16]
  419380:	add	sp, sp, #0x40
  419384:	b	4041e8 <siphash24_compress@plt>
  419388:	ldr	x0, [x20, #80]
  41938c:	mov	x1, x19
  419390:	bl	404388 <string_hash_func@plt>
  419394:	ldr	x0, [x20, #88]
  419398:	mov	x1, x19
  41939c:	ldp	x20, x19, [sp, #48]
  4193a0:	ldp	x22, x21, [sp, #32]
  4193a4:	ldp	x29, x30, [sp, #16]
  4193a8:	add	sp, sp, #0x40
  4193ac:	b	404388 <string_hash_func@plt>
  4193b0:	add	x0, x20, #0x50
  4193b4:	mov	w1, #0x2                   	// #2
  4193b8:	mov	x2, x19
  4193bc:	bl	4041e8 <siphash24_compress@plt>
  4193c0:	add	x0, x20, #0x52
  4193c4:	mov	w1, #0x2                   	// #2
  4193c8:	mov	x2, x19
  4193cc:	bl	4041e8 <siphash24_compress@plt>
  4193d0:	add	x0, x20, #0x54
  4193d4:	b	41946c <ascii_strlower_n@plt+0x15064>
  4193d8:	add	x0, x20, #0x50
  4193dc:	mov	w1, #0x1                   	// #1
  4193e0:	mov	x2, x19
  4193e4:	bl	4041e8 <siphash24_compress@plt>
  4193e8:	add	x0, x20, #0x51
  4193ec:	mov	w1, #0x1                   	// #1
  4193f0:	mov	x2, x19
  4193f4:	bl	4041e8 <siphash24_compress@plt>
  4193f8:	add	x0, x20, #0x52
  4193fc:	b	419520 <ascii_strlower_n@plt+0x15118>
  419400:	add	x0, x20, #0x50
  419404:	b	419504 <ascii_strlower_n@plt+0x150fc>
  419408:	ldr	x0, [x20, #80]
  41940c:	mov	x1, x19
  419410:	bl	404258 <dns_name_hash_func@plt>
  419414:	ldr	x0, [x20, #88]
  419418:	mov	x1, x19
  41941c:	bl	404258 <dns_name_hash_func@plt>
  419420:	add	x0, x20, #0x60
  419424:	mov	w1, #0x4                   	// #4
  419428:	mov	x2, x19
  41942c:	bl	4041e8 <siphash24_compress@plt>
  419430:	add	x0, x20, #0x64
  419434:	mov	w1, #0x4                   	// #4
  419438:	mov	x2, x19
  41943c:	bl	4041e8 <siphash24_compress@plt>
  419440:	add	x0, x20, #0x68
  419444:	mov	w1, #0x4                   	// #4
  419448:	mov	x2, x19
  41944c:	bl	4041e8 <siphash24_compress@plt>
  419450:	add	x0, x20, #0x6c
  419454:	mov	w1, #0x4                   	// #4
  419458:	mov	x2, x19
  41945c:	bl	4041e8 <siphash24_compress@plt>
  419460:	add	x0, x20, #0x70
  419464:	b	419504 <ascii_strlower_n@plt+0x150fc>
  419468:	add	x0, x20, #0x50
  41946c:	mov	w1, #0x2                   	// #2
  419470:	mov	x2, x19
  419474:	bl	4041e8 <siphash24_compress@plt>
  419478:	ldr	x0, [x20, #88]
  41947c:	mov	x1, x19
  419480:	ldp	x20, x19, [sp, #48]
  419484:	ldp	x22, x21, [sp, #32]
  419488:	ldp	x29, x30, [sp, #16]
  41948c:	add	sp, sp, #0x40
  419490:	b	404258 <dns_name_hash_func@plt>
  419494:	add	x0, x20, #0x50
  419498:	mov	w1, #0x10                  	// #16
  41949c:	b	419370 <ascii_strlower_n@plt+0x14f68>
  4194a0:	add	x0, x20, #0x50
  4194a4:	mov	w1, #0x1                   	// #1
  4194a8:	mov	x2, x19
  4194ac:	bl	4041e8 <siphash24_compress@plt>
  4194b0:	add	x0, x20, #0x51
  4194b4:	mov	w1, #0x1                   	// #1
  4194b8:	mov	x2, x19
  4194bc:	bl	4041e8 <siphash24_compress@plt>
  4194c0:	add	x0, x20, #0x52
  4194c4:	mov	w1, #0x1                   	// #1
  4194c8:	mov	x2, x19
  4194cc:	bl	4041e8 <siphash24_compress@plt>
  4194d0:	add	x0, x20, #0x53
  4194d4:	mov	w1, #0x1                   	// #1
  4194d8:	mov	x2, x19
  4194dc:	bl	4041e8 <siphash24_compress@plt>
  4194e0:	add	x0, x20, #0x54
  4194e4:	mov	w1, #0x4                   	// #4
  4194e8:	mov	x2, x19
  4194ec:	bl	4041e8 <siphash24_compress@plt>
  4194f0:	add	x0, x20, #0x58
  4194f4:	mov	w1, #0x4                   	// #4
  4194f8:	mov	x2, x19
  4194fc:	bl	4041e8 <siphash24_compress@plt>
  419500:	add	x0, x20, #0x5c
  419504:	mov	w1, #0x4                   	// #4
  419508:	b	419370 <ascii_strlower_n@plt+0x14f68>
  41950c:	add	x0, x20, #0x50
  419510:	mov	w1, #0x1                   	// #1
  419514:	mov	x2, x19
  419518:	bl	4041e8 <siphash24_compress@plt>
  41951c:	add	x0, x20, #0x51
  419520:	mov	w1, #0x1                   	// #1
  419524:	mov	x2, x19
  419528:	bl	4041e8 <siphash24_compress@plt>
  41952c:	ldp	x0, x1, [x20, #88]
  419530:	b	419370 <ascii_strlower_n@plt+0x14f68>
  419534:	add	x0, x20, #0x50
  419538:	mov	w1, #0x2                   	// #2
  41953c:	mov	x2, x19
  419540:	bl	4041e8 <siphash24_compress@plt>
  419544:	add	x0, x20, #0x52
  419548:	mov	w1, #0x1                   	// #1
  41954c:	mov	x2, x19
  419550:	bl	4041e8 <siphash24_compress@plt>
  419554:	add	x0, x20, #0x53
  419558:	mov	w1, #0x1                   	// #1
  41955c:	mov	x2, x19
  419560:	bl	4041e8 <siphash24_compress@plt>
  419564:	add	x0, x20, #0x54
  419568:	mov	w1, #0x4                   	// #4
  41956c:	mov	x2, x19
  419570:	bl	4041e8 <siphash24_compress@plt>
  419574:	add	x0, x20, #0x58
  419578:	mov	w1, #0x4                   	// #4
  41957c:	mov	x2, x19
  419580:	bl	4041e8 <siphash24_compress@plt>
  419584:	add	x0, x20, #0x5c
  419588:	mov	w1, #0x4                   	// #4
  41958c:	mov	x2, x19
  419590:	bl	4041e8 <siphash24_compress@plt>
  419594:	add	x0, x20, #0x60
  419598:	mov	w1, #0x2                   	// #2
  41959c:	mov	x2, x19
  4195a0:	bl	4041e8 <siphash24_compress@plt>
  4195a4:	ldr	x0, [x20, #104]
  4195a8:	mov	x1, x19
  4195ac:	bl	404258 <dns_name_hash_func@plt>
  4195b0:	ldp	x0, x1, [x20, #112]
  4195b4:	b	419370 <ascii_strlower_n@plt+0x14f68>
  4195b8:	add	x0, x20, #0x50
  4195bc:	mov	w1, #0x1                   	// #1
  4195c0:	mov	x2, x19
  4195c4:	bl	4041e8 <siphash24_compress@plt>
  4195c8:	add	x0, x20, #0x51
  4195cc:	mov	w1, #0x1                   	// #1
  4195d0:	mov	x2, x19
  4195d4:	bl	4041e8 <siphash24_compress@plt>
  4195d8:	add	x0, x20, #0x52
  4195dc:	mov	w1, #0x2                   	// #2
  4195e0:	mov	x2, x19
  4195e4:	bl	4041e8 <siphash24_compress@plt>
  4195e8:	ldp	x0, x1, [x20, #88]
  4195ec:	mov	x2, x19
  4195f0:	bl	4041e8 <siphash24_compress@plt>
  4195f4:	ldp	x0, x1, [x20, #104]
  4195f8:	b	419370 <ascii_strlower_n@plt+0x14f68>
  4195fc:	adrp	x1, 422000 <ascii_strlower_n@plt+0x1dbf8>
  419600:	adrp	x2, 422000 <ascii_strlower_n@plt+0x1dbf8>
  419604:	adrp	x4, 423000 <ascii_strlower_n@plt+0x1ebf8>
  419608:	add	x1, x1, #0x14e
  41960c:	add	x2, x2, #0x86e
  419610:	add	x4, x4, #0x23f
  419614:	mov	w3, #0x53e                 	// #1342
  419618:	bl	403a98 <log_assert_failed_realm@plt>
  41961c:	adrp	x1, 421000 <ascii_strlower_n@plt+0x1cbf8>
  419620:	adrp	x2, 422000 <ascii_strlower_n@plt+0x1dbf8>
  419624:	adrp	x4, 423000 <ascii_strlower_n@plt+0x1ebf8>
  419628:	add	x1, x1, #0xfd2
  41962c:	add	x2, x2, #0x86e
  419630:	add	x4, x4, #0x312
  419634:	mov	w3, #0x11f                 	// #287
  419638:	mov	w0, wzr
  41963c:	bl	403a98 <log_assert_failed_realm@plt>
  419640:	stp	x29, x30, [sp, #-80]!
  419644:	stp	x24, x23, [sp, #32]
  419648:	stp	x22, x21, [sp, #48]
  41964c:	stp	x20, x19, [sp, #64]
  419650:	ldr	x23, [x0, #8]
  419654:	ldr	x24, [x1, #8]
  419658:	str	x25, [sp, #16]
  41965c:	adrp	x25, 422000 <ascii_strlower_n@plt+0x1dbf8>
  419660:	mov	x19, x1
  419664:	mov	x20, x0
  419668:	add	x25, x25, #0xaa1
  41966c:	mov	x29, sp
  419670:	cbz	x23, 4196c8 <ascii_strlower_n@plt+0x152c0>
  419674:	ldr	x8, [x23, #8]
  419678:	add	x9, x23, #0x10
  41967c:	cmp	x8, #0x0
  419680:	csel	x21, x9, x8, eq  // eq = none
  419684:	mov	x0, x21
  419688:	bl	4040e8 <dns_name_is_root@plt>
  41968c:	tst	w0, #0x1
  419690:	csel	x21, x25, x21, ne  // ne = any
  419694:	cbz	x24, 4196d0 <ascii_strlower_n@plt+0x152c8>
  419698:	ldr	x8, [x24, #8]
  41969c:	add	x9, x24, #0x10
  4196a0:	cmp	x8, #0x0
  4196a4:	csel	x22, x9, x8, eq  // eq = none
  4196a8:	mov	x0, x22
  4196ac:	bl	4040e8 <dns_name_is_root@plt>
  4196b0:	tst	w0, #0x1
  4196b4:	csel	x1, x25, x22, ne  // ne = any
  4196b8:	mov	x0, x21
  4196bc:	bl	404268 <dns_name_compare_func@plt>
  4196c0:	cbnz	w0, 41973c <ascii_strlower_n@plt+0x15334>
  4196c4:	b	4196e0 <ascii_strlower_n@plt+0x152d8>
  4196c8:	mov	x21, xzr
  4196cc:	cbnz	x24, 419698 <ascii_strlower_n@plt+0x15290>
  4196d0:	mov	x1, xzr
  4196d4:	mov	x0, x21
  4196d8:	bl	404268 <dns_name_compare_func@plt>
  4196dc:	cbnz	w0, 41973c <ascii_strlower_n@plt+0x15334>
  4196e0:	ldrh	w8, [x23, #6]
  4196e4:	ldrh	w9, [x24, #6]
  4196e8:	cmp	w8, w9
  4196ec:	cset	w8, hi  // hi = pmore
  4196f0:	csinv	w0, w8, wzr, cs  // cs = hs, nlast
  4196f4:	cbnz	w0, 419714 <ascii_strlower_n@plt+0x1530c>
  4196f8:	ldrh	w8, [x23, #4]
  4196fc:	ldrh	w9, [x24, #4]
  419700:	cmp	w8, w9
  419704:	cset	w0, hi  // hi = pmore
  419708:	b.cs	419714 <ascii_strlower_n@plt+0x1530c>  // b.hs, b.nlast
  41970c:	mov	w0, #0xffffffff            	// #-1
  419710:	b	41973c <ascii_strlower_n@plt+0x15334>
  419714:	cbnz	w0, 41973c <ascii_strlower_n@plt+0x15334>
  419718:	mov	x0, x20
  41971c:	mov	x1, x19
  419720:	bl	417d7c <ascii_strlower_n@plt+0x13974>
  419724:	cbz	w0, 419730 <ascii_strlower_n@plt+0x15328>
  419728:	mov	w0, wzr
  41972c:	b	41973c <ascii_strlower_n@plt+0x15334>
  419730:	cmp	x20, x19
  419734:	cset	w8, hi  // hi = pmore
  419738:	csinv	w0, w8, wzr, cs  // cs = hs, nlast
  41973c:	ldp	x20, x19, [sp, #64]
  419740:	ldp	x22, x21, [sp, #48]
  419744:	ldp	x24, x23, [sp, #32]
  419748:	ldr	x25, [sp, #16]
  41974c:	ldp	x29, x30, [sp], #80
  419750:	ret
  419754:	stp	x29, x30, [sp, #-48]!
  419758:	stp	x22, x21, [sp, #16]
  41975c:	stp	x20, x19, [sp, #32]
  419760:	mov	x29, sp
  419764:	cbz	x0, 419b08 <ascii_strlower_n@plt+0x15700>
  419768:	ldr	x21, [x0, #8]
  41976c:	mov	x20, x0
  419770:	mov	w0, #0x1                   	// #1
  419774:	mov	w1, #0x80                  	// #128
  419778:	mov	w22, #0x1                   	// #1
  41977c:	bl	404068 <calloc@plt>
  419780:	mov	x19, x0
  419784:	cbz	x0, 419af4 <ascii_strlower_n@plt+0x156ec>
  419788:	str	w22, [x19]
  41978c:	cbz	x21, 4197b0 <ascii_strlower_n@plt+0x153a8>
  419790:	ldr	w8, [x21]
  419794:	cbz	w8, 419b28 <ascii_strlower_n@plt+0x15720>
  419798:	cmn	w8, #0x1
  41979c:	b.eq	419b4c <ascii_strlower_n@plt+0x15744>  // b.none
  4197a0:	add	w8, w8, #0x1
  4197a4:	str	w8, [x21]
  4197a8:	ldrb	w8, [x19, #48]
  4197ac:	b	4197b4 <ascii_strlower_n@plt+0x153ac>
  4197b0:	mov	w8, wzr
  4197b4:	str	x21, [x19, #8]
  4197b8:	ldr	w9, [x20, #24]
  4197bc:	str	w9, [x19, #24]
  4197c0:	ldr	x9, [x20, #32]
  4197c4:	str	x9, [x19, #32]
  4197c8:	ldr	x9, [x20, #40]
  4197cc:	str	x9, [x19, #40]
  4197d0:	ldrb	w9, [x20, #48]
  4197d4:	bfxil	w8, w9, #0, #1
  4197d8:	strb	w8, [x19, #48]
  4197dc:	tbnz	w9, #0, 419900 <ascii_strlower_n@plt+0x154f8>
  4197e0:	ldrh	w9, [x21, #6]
  4197e4:	sub	w8, w9, #0x1
  4197e8:	cmp	w8, #0x62
  4197ec:	b.hi	4198c4 <ascii_strlower_n@plt+0x154bc>  // b.pmore
  4197f0:	adrp	x9, 425000 <ascii_strlower_n@plt+0x20bf8>
  4197f4:	add	x9, x9, #0x428
  4197f8:	adr	x10, 419808 <ascii_strlower_n@plt+0x15400>
  4197fc:	ldrb	w11, [x9, x8]
  419800:	add	x10, x10, x11, lsl #2
  419804:	br	x10
  419808:	ldr	x0, [x20, #80]
  41980c:	bl	403ae8 <strdup@plt>
  419810:	str	x0, [x19, #80]
  419814:	cbnz	x0, 419af4 <ascii_strlower_n@plt+0x156ec>
  419818:	b	419ae8 <ascii_strlower_n@plt+0x156e0>
  41981c:	ldr	q0, [x20, #80]
  419820:	str	q0, [x19, #80]
  419824:	b	419af4 <ascii_strlower_n@plt+0x156ec>
  419828:	ldrh	w8, [x20, #80]
  41982c:	strh	w8, [x19, #80]
  419830:	ldrb	w8, [x20, #82]
  419834:	strb	w8, [x19, #82]
  419838:	ldrb	w8, [x20, #83]
  41983c:	strb	w8, [x19, #83]
  419840:	b	419954 <ascii_strlower_n@plt+0x1554c>
  419844:	ldr	x21, [x20, #80]
  419848:	cbz	x21, 419ae4 <ascii_strlower_n@plt+0x156dc>
  41984c:	mov	x22, xzr
  419850:	mov	x20, xzr
  419854:	b	41986c <ascii_strlower_n@plt+0x15464>
  419858:	str	x22, [x0, #16]
  41985c:	str	x0, [x22, #8]
  419860:	ldr	x21, [x21, #8]
  419864:	mov	x22, x0
  419868:	cbz	x21, 4198b8 <ascii_strlower_n@plt+0x154b0>
  41986c:	ldr	x8, [x21]
  419870:	mov	x0, x21
  419874:	add	x1, x8, #0x19
  419878:	bl	404188 <memdup@plt>
  41987c:	cbz	x0, 419acc <ascii_strlower_n@plt+0x156c4>
  419880:	cbz	x22, 419898 <ascii_strlower_n@plt+0x15490>
  419884:	ldr	x8, [x22, #8]
  419888:	str	x8, [x0, #8]
  41988c:	cbz	x8, 419858 <ascii_strlower_n@plt+0x15450>
  419890:	str	x0, [x8, #16]
  419894:	b	419858 <ascii_strlower_n@plt+0x15450>
  419898:	str	x20, [x0, #8]
  41989c:	cbz	x20, 4198a4 <ascii_strlower_n@plt+0x1549c>
  4198a0:	str	x0, [x20, #16]
  4198a4:	str	xzr, [x0, #16]
  4198a8:	mov	x20, x0
  4198ac:	ldr	x21, [x21, #8]
  4198b0:	mov	x22, x0
  4198b4:	cbnz	x21, 41986c <ascii_strlower_n@plt+0x15464>
  4198b8:	str	x20, [x19, #80]
  4198bc:	cbnz	x20, 419af4 <ascii_strlower_n@plt+0x156ec>
  4198c0:	b	419ae8 <ascii_strlower_n@plt+0x156e0>
  4198c4:	cmp	w9, #0x101
  4198c8:	b.ne	419900 <ascii_strlower_n@plt+0x154f8>  // b.any
  4198cc:	ldrb	w8, [x20, #80]
  4198d0:	strb	w8, [x19, #80]
  4198d4:	ldr	x0, [x20, #88]
  4198d8:	bl	403ae8 <strdup@plt>
  4198dc:	str	x0, [x19, #88]
  4198e0:	cbz	x0, 419ae8 <ascii_strlower_n@plt+0x156e0>
  4198e4:	ldp	x0, x1, [x20, #96]
  4198e8:	bl	404188 <memdup@plt>
  4198ec:	str	x0, [x19, #96]
  4198f0:	cbz	x0, 419ae8 <ascii_strlower_n@plt+0x156e0>
  4198f4:	ldr	x8, [x20, #104]
  4198f8:	str	x8, [x19, #104]
  4198fc:	b	419af4 <ascii_strlower_n@plt+0x156ec>
  419900:	ldp	x0, x1, [x20, #80]
  419904:	bl	404188 <memdup@plt>
  419908:	str	x0, [x19, #80]
  41990c:	cbz	x0, 419ae8 <ascii_strlower_n@plt+0x156e0>
  419910:	ldr	x8, [x20, #88]
  419914:	str	x8, [x19, #88]
  419918:	b	419af4 <ascii_strlower_n@plt+0x156ec>
  41991c:	ldrb	w8, [x20, #80]
  419920:	strb	w8, [x19, #80]
  419924:	ldrb	w8, [x20, #81]
  419928:	strb	w8, [x19, #81]
  41992c:	ldrb	w8, [x20, #82]
  419930:	strb	w8, [x19, #82]
  419934:	b	419954 <ascii_strlower_n@plt+0x1554c>
  419938:	ldrh	w8, [x20, #80]
  41993c:	strh	w8, [x19, #80]
  419940:	b	4199dc <ascii_strlower_n@plt+0x155d4>
  419944:	ldrb	w8, [x20, #80]
  419948:	strb	w8, [x19, #80]
  41994c:	ldrb	w8, [x20, #81]
  419950:	strb	w8, [x19, #81]
  419954:	ldp	x0, x1, [x20, #88]
  419958:	bl	404188 <memdup@plt>
  41995c:	str	x0, [x19, #88]
  419960:	cbz	x0, 419ae8 <ascii_strlower_n@plt+0x156e0>
  419964:	ldr	x8, [x20, #96]
  419968:	str	x8, [x19, #96]
  41996c:	b	419af4 <ascii_strlower_n@plt+0x156ec>
  419970:	ldr	w8, [x20, #80]
  419974:	str	w8, [x19, #80]
  419978:	b	419af4 <ascii_strlower_n@plt+0x156ec>
  41997c:	ldr	x0, [x20, #80]
  419980:	bl	403ae8 <strdup@plt>
  419984:	str	x0, [x19, #80]
  419988:	cbz	x0, 419ae8 <ascii_strlower_n@plt+0x156e0>
  41998c:	ldr	x0, [x20, #88]
  419990:	bl	403ae8 <strdup@plt>
  419994:	str	x0, [x19, #88]
  419998:	cbz	x0, 419ae8 <ascii_strlower_n@plt+0x156e0>
  41999c:	ldr	q0, [x20, #96]
  4199a0:	str	q0, [x19, #96]
  4199a4:	ldr	w8, [x20, #112]
  4199a8:	str	w8, [x19, #112]
  4199ac:	b	419af4 <ascii_strlower_n@plt+0x156ec>
  4199b0:	ldr	x0, [x20, #80]
  4199b4:	bl	403ae8 <strdup@plt>
  4199b8:	str	x0, [x19, #80]
  4199bc:	cbnz	x0, 4199dc <ascii_strlower_n@plt+0x155d4>
  4199c0:	b	419ae8 <ascii_strlower_n@plt+0x156e0>
  4199c4:	ldrh	w8, [x20, #80]
  4199c8:	strh	w8, [x19, #80]
  4199cc:	ldrh	w8, [x20, #82]
  4199d0:	strh	w8, [x19, #82]
  4199d4:	ldrh	w8, [x20, #84]
  4199d8:	strh	w8, [x19, #84]
  4199dc:	ldr	x0, [x20, #88]
  4199e0:	bl	403ae8 <strdup@plt>
  4199e4:	str	x0, [x19, #88]
  4199e8:	cbnz	x0, 419af4 <ascii_strlower_n@plt+0x156ec>
  4199ec:	b	419ae8 <ascii_strlower_n@plt+0x156e0>
  4199f0:	ldrb	w8, [x20, #80]
  4199f4:	strb	w8, [x19, #80]
  4199f8:	ldrb	w8, [x20, #81]
  4199fc:	strb	w8, [x19, #81]
  419a00:	ldrh	w8, [x20, #82]
  419a04:	strh	w8, [x19, #82]
  419a08:	ldp	x0, x1, [x20, #88]
  419a0c:	bl	404188 <memdup@plt>
  419a10:	str	x0, [x19, #88]
  419a14:	cbz	x0, 419ae8 <ascii_strlower_n@plt+0x156e0>
  419a18:	ldp	x8, x0, [x20, #96]
  419a1c:	str	x8, [x19, #96]
  419a20:	ldr	x1, [x20, #112]
  419a24:	bl	404188 <memdup@plt>
  419a28:	ldr	x8, [x19, #112]
  419a2c:	str	x0, [x19, #104]
  419a30:	cbz	x8, 419ae8 <ascii_strlower_n@plt+0x156e0>
  419a34:	ldp	x8, x0, [x20, #112]
  419a38:	str	x8, [x19, #112]
  419a3c:	bl	404398 <bitmap_copy@plt>
  419a40:	str	x0, [x19, #120]
  419a44:	cbnz	x0, 419af4 <ascii_strlower_n@plt+0x156ec>
  419a48:	b	419ae8 <ascii_strlower_n@plt+0x156e0>
  419a4c:	ldrh	w8, [x20, #80]
  419a50:	strh	w8, [x19, #80]
  419a54:	ldrb	w8, [x20, #82]
  419a58:	strb	w8, [x19, #82]
  419a5c:	ldrb	w8, [x20, #83]
  419a60:	strb	w8, [x19, #83]
  419a64:	ldur	x8, [x20, #84]
  419a68:	stur	x8, [x19, #84]
  419a6c:	ldr	w8, [x20, #92]
  419a70:	str	w8, [x19, #92]
  419a74:	ldrh	w8, [x20, #96]
  419a78:	strh	w8, [x19, #96]
  419a7c:	ldr	x0, [x20, #104]
  419a80:	bl	403ae8 <strdup@plt>
  419a84:	str	x0, [x19, #104]
  419a88:	cbz	x0, 419ae8 <ascii_strlower_n@plt+0x156e0>
  419a8c:	ldp	x0, x1, [x20, #112]
  419a90:	bl	404188 <memdup@plt>
  419a94:	str	x0, [x19, #112]
  419a98:	cbz	x0, 419ae8 <ascii_strlower_n@plt+0x156e0>
  419a9c:	ldr	x8, [x20, #120]
  419aa0:	str	x8, [x19, #120]
  419aa4:	b	419af4 <ascii_strlower_n@plt+0x156ec>
  419aa8:	ldr	x0, [x20, #80]
  419aac:	bl	403ae8 <strdup@plt>
  419ab0:	str	x0, [x19, #80]
  419ab4:	cbz	x0, 419ae8 <ascii_strlower_n@plt+0x156e0>
  419ab8:	ldr	x0, [x20, #88]
  419abc:	bl	404398 <bitmap_copy@plt>
  419ac0:	str	x0, [x19, #88]
  419ac4:	cbnz	x0, 419af4 <ascii_strlower_n@plt+0x156ec>
  419ac8:	b	419ae8 <ascii_strlower_n@plt+0x156e0>
  419acc:	cbz	x20, 419ae4 <ascii_strlower_n@plt+0x156dc>
  419ad0:	ldr	x21, [x20, #8]
  419ad4:	mov	x0, x20
  419ad8:	bl	4039d8 <free@plt>
  419adc:	mov	x20, x21
  419ae0:	cbnz	x21, 419ad0 <ascii_strlower_n@plt+0x156c8>
  419ae4:	str	xzr, [x19, #80]
  419ae8:	mov	x0, x19
  419aec:	bl	417208 <ascii_strlower_n@plt+0x12e00>
  419af0:	mov	x19, xzr
  419af4:	mov	x0, x19
  419af8:	ldp	x20, x19, [sp, #32]
  419afc:	ldp	x22, x21, [sp, #16]
  419b00:	ldp	x29, x30, [sp], #48
  419b04:	ret
  419b08:	adrp	x1, 422000 <ascii_strlower_n@plt+0x1dbf8>
  419b0c:	adrp	x2, 422000 <ascii_strlower_n@plt+0x1dbf8>
  419b10:	adrp	x4, 423000 <ascii_strlower_n@plt+0x1ebf8>
  419b14:	add	x1, x1, #0x14e
  419b18:	add	x2, x2, #0x86e
  419b1c:	add	x4, x4, #0x28f
  419b20:	mov	w3, #0x5df                 	// #1503
  419b24:	bl	403a98 <log_assert_failed_realm@plt>
  419b28:	adrp	x1, 422000 <ascii_strlower_n@plt+0x1dbf8>
  419b2c:	adrp	x2, 422000 <ascii_strlower_n@plt+0x1dbf8>
  419b30:	adrp	x4, 422000 <ascii_strlower_n@plt+0x1dbf8>
  419b34:	add	x1, x1, #0xa5b
  419b38:	add	x2, x2, #0x86e
  419b3c:	add	x4, x4, #0xa24
  419b40:	mov	w3, #0x79                  	// #121
  419b44:	mov	w0, wzr
  419b48:	bl	403a98 <log_assert_failed_realm@plt>
  419b4c:	adrp	x1, 422000 <ascii_strlower_n@plt+0x1dbf8>
  419b50:	adrp	x2, 422000 <ascii_strlower_n@plt+0x1dbf8>
  419b54:	adrp	x4, 422000 <ascii_strlower_n@plt+0x1dbf8>
  419b58:	add	x1, x1, #0xa0a
  419b5c:	add	x2, x2, #0x86e
  419b60:	add	x4, x4, #0xa24
  419b64:	mov	w3, #0x77                  	// #119
  419b68:	mov	w0, wzr
  419b6c:	bl	403a98 <log_assert_failed_realm@plt>
  419b70:	stp	x29, x30, [sp, #-48]!
  419b74:	str	x21, [sp, #16]
  419b78:	stp	x20, x19, [sp, #32]
  419b7c:	mov	x29, sp
  419b80:	cbz	x0, 419bf8 <ascii_strlower_n@plt+0x157f0>
  419b84:	mov	x20, x0
  419b88:	mov	x21, xzr
  419b8c:	mov	x19, xzr
  419b90:	b	419ba8 <ascii_strlower_n@plt+0x157a0>
  419b94:	str	x21, [x0, #16]
  419b98:	str	x0, [x21, #8]
  419b9c:	ldr	x20, [x20, #8]
  419ba0:	mov	x21, x0
  419ba4:	cbz	x20, 419c18 <ascii_strlower_n@plt+0x15810>
  419ba8:	ldr	x8, [x20]
  419bac:	mov	x0, x20
  419bb0:	add	x1, x8, #0x19
  419bb4:	bl	404188 <memdup@plt>
  419bb8:	cbz	x0, 419c00 <ascii_strlower_n@plt+0x157f8>
  419bbc:	cbz	x21, 419bd4 <ascii_strlower_n@plt+0x157cc>
  419bc0:	ldr	x8, [x21, #8]
  419bc4:	str	x8, [x0, #8]
  419bc8:	cbz	x8, 419b94 <ascii_strlower_n@plt+0x1578c>
  419bcc:	str	x0, [x8, #16]
  419bd0:	b	419b94 <ascii_strlower_n@plt+0x1578c>
  419bd4:	str	x19, [x0, #8]
  419bd8:	cbz	x19, 419be0 <ascii_strlower_n@plt+0x157d8>
  419bdc:	str	x0, [x19, #16]
  419be0:	str	xzr, [x0, #16]
  419be4:	mov	x19, x0
  419be8:	ldr	x20, [x20, #8]
  419bec:	mov	x21, x0
  419bf0:	cbnz	x20, 419ba8 <ascii_strlower_n@plt+0x157a0>
  419bf4:	b	419c18 <ascii_strlower_n@plt+0x15810>
  419bf8:	mov	x19, xzr
  419bfc:	b	419c18 <ascii_strlower_n@plt+0x15810>
  419c00:	cbz	x19, 419c18 <ascii_strlower_n@plt+0x15810>
  419c04:	ldr	x20, [x19, #8]
  419c08:	mov	x0, x19
  419c0c:	bl	4039d8 <free@plt>
  419c10:	mov	x19, x20
  419c14:	cbnz	x20, 419c04 <ascii_strlower_n@plt+0x157fc>
  419c18:	mov	x0, x19
  419c1c:	ldp	x20, x19, [sp, #32]
  419c20:	ldr	x21, [sp, #16]
  419c24:	ldp	x29, x30, [sp], #48
  419c28:	ret
  419c2c:	stp	x29, x30, [sp, #-48]!
  419c30:	str	x21, [sp, #16]
  419c34:	stp	x20, x19, [sp, #32]
  419c38:	mov	x29, sp
  419c3c:	cbz	x0, 419ce8 <ascii_strlower_n@plt+0x158e0>
  419c40:	mov	x19, x0
  419c44:	ldr	x0, [x0]
  419c48:	ldr	x8, [x0, #8]
  419c4c:	ldrh	w8, [x8, #6]
  419c50:	cmp	w8, #0x29
  419c54:	b.ne	419c6c <ascii_strlower_n@plt+0x15864>  // b.any
  419c58:	mov	w0, #0xffffffea            	// #-22
  419c5c:	ldp	x20, x19, [sp, #32]
  419c60:	ldr	x21, [sp, #16]
  419c64:	ldp	x29, x30, [sp], #48
  419c68:	ret
  419c6c:	ldr	w8, [x0, #24]
  419c70:	cmp	w8, w1
  419c74:	csel	w21, w8, w1, cc  // cc = lo, ul, last
  419c78:	b.ls	419c90 <ascii_strlower_n@plt+0x15888>  // b.plast
  419c7c:	ldr	w8, [x0]
  419c80:	cmp	w8, #0x1
  419c84:	b.ne	419ca4 <ascii_strlower_n@plt+0x1589c>  // b.any
  419c88:	str	w21, [x0, #24]
  419c8c:	b	419cc0 <ascii_strlower_n@plt+0x158b8>
  419c90:	mov	w0, wzr
  419c94:	ldp	x20, x19, [sp, #32]
  419c98:	ldr	x21, [sp, #16]
  419c9c:	ldp	x29, x30, [sp], #48
  419ca0:	ret
  419ca4:	bl	419754 <ascii_strlower_n@plt+0x1534c>
  419ca8:	cbz	x0, 419cd4 <ascii_strlower_n@plt+0x158cc>
  419cac:	str	w21, [x0, #24]
  419cb0:	mov	x20, x0
  419cb4:	ldr	x0, [x19]
  419cb8:	bl	417208 <ascii_strlower_n@plt+0x12e00>
  419cbc:	str	x20, [x19]
  419cc0:	mov	w0, #0x1                   	// #1
  419cc4:	ldp	x20, x19, [sp, #32]
  419cc8:	ldr	x21, [sp, #16]
  419ccc:	ldp	x29, x30, [sp], #48
  419cd0:	ret
  419cd4:	mov	w0, #0xfffffff4            	// #-12
  419cd8:	ldp	x20, x19, [sp, #32]
  419cdc:	ldr	x21, [sp, #16]
  419ce0:	ldp	x29, x30, [sp], #48
  419ce4:	ret
  419ce8:	adrp	x1, 422000 <ascii_strlower_n@plt+0x1dbf8>
  419cec:	adrp	x2, 422000 <ascii_strlower_n@plt+0x1dbf8>
  419cf0:	adrp	x4, 423000 <ascii_strlower_n@plt+0x1ebf8>
  419cf4:	add	x1, x1, #0x14e
  419cf8:	add	x2, x2, #0x86e
  419cfc:	add	x4, x4, #0x2d0
  419d00:	mov	w3, #0x6a0                 	// #1696
  419d04:	bl	403a98 <log_assert_failed_realm@plt>
  419d08:	stp	x29, x30, [sp, #-32]!
  419d0c:	str	x19, [sp, #16]
  419d10:	mov	x29, sp
  419d14:	cbz	x0, 419d28 <ascii_strlower_n@plt+0x15920>
  419d18:	ldr	x19, [x0, #8]
  419d1c:	bl	4039d8 <free@plt>
  419d20:	mov	x0, x19
  419d24:	cbnz	x19, 419d18 <ascii_strlower_n@plt+0x15910>
  419d28:	ldr	x19, [sp, #16]
  419d2c:	mov	x0, xzr
  419d30:	ldp	x29, x30, [sp], #32
  419d34:	ret
  419d38:	stp	x29, x30, [sp, #-32]!
  419d3c:	str	x19, [sp, #16]
  419d40:	mov	x19, x0
  419d44:	mov	w0, #0x1                   	// #1
  419d48:	mov	w1, #0x19                  	// #25
  419d4c:	mov	x29, sp
  419d50:	bl	404068 <calloc@plt>
  419d54:	cbz	x0, 419d70 <ascii_strlower_n@plt+0x15968>
  419d58:	mov	x8, x0
  419d5c:	mov	w0, wzr
  419d60:	str	x8, [x19]
  419d64:	ldr	x19, [sp, #16]
  419d68:	ldp	x29, x30, [sp], #32
  419d6c:	ret
  419d70:	mov	w0, #0xfffffff4            	// #-12
  419d74:	ldr	x19, [sp, #16]
  419d78:	ldp	x29, x30, [sp], #32
  419d7c:	ret
  419d80:	stp	x29, x30, [sp, #-32]!
  419d84:	mov	x29, sp
  419d88:	str	x19, [sp, #16]
  419d8c:	str	wzr, [x29, #28]
  419d90:	cbz	x0, 419dbc <ascii_strlower_n@plt+0x159b4>
  419d94:	mov	x19, x0
  419d98:	adrp	x0, 43e000 <ascii_strlower_n@plt+0x39bf8>
  419d9c:	add	x0, x0, #0x3f8
  419da0:	mov	w1, #0xff                  	// #255
  419da4:	mov	x2, x19
  419da8:	bl	404208 <string_table_lookup@plt>
  419dac:	tbnz	w0, #31, 419dcc <ascii_strlower_n@plt+0x159c4>
  419db0:	ldr	x19, [sp, #16]
  419db4:	ldp	x29, x30, [sp], #32
  419db8:	ret
  419dbc:	mov	w0, #0xffffffff            	// #-1
  419dc0:	ldr	x19, [sp, #16]
  419dc4:	ldp	x29, x30, [sp], #32
  419dc8:	ret
  419dcc:	add	x2, x29, #0x1c
  419dd0:	mov	x0, x19
  419dd4:	mov	w1, wzr
  419dd8:	bl	4043a8 <safe_atou_full@plt>
  419ddc:	ldr	w8, [x29, #28]
  419de0:	mov	w9, #0xffffffff            	// #-1
  419de4:	cmp	w8, #0x100
  419de8:	ccmp	w0, w9, #0x4, cc  // cc = lo, ul, last
  419dec:	csinv	w0, w8, wzr, gt
  419df0:	ldr	x19, [sp, #16]
  419df4:	ldp	x29, x30, [sp], #32
  419df8:	ret
  419dfc:	stp	x29, x30, [sp, #-32]!
  419e00:	cmp	w0, #0xff
  419e04:	str	x19, [sp, #16]
  419e08:	mov	x29, sp
  419e0c:	b.ls	419e20 <ascii_strlower_n@plt+0x15a18>  // b.plast
  419e10:	mov	w0, #0xffffffde            	// #-34
  419e14:	ldr	x19, [sp, #16]
  419e18:	ldp	x29, x30, [sp], #32
  419e1c:	ret
  419e20:	mov	w2, w0
  419e24:	mov	x19, x1
  419e28:	cmp	w0, #0x4
  419e2c:	b.gt	419e50 <ascii_strlower_n@plt+0x15a48>
  419e30:	adrp	x8, 43e000 <ascii_strlower_n@plt+0x39bf8>
  419e34:	add	x8, x8, #0xbf0
  419e38:	ldr	x0, [x8, w2, uxtw #3]
  419e3c:	bl	403ae8 <strdup@plt>
  419e40:	str	x0, [x29, #24]
  419e44:	cbz	x0, 419e7c <ascii_strlower_n@plt+0x15a74>
  419e48:	mov	x8, x0
  419e4c:	b	419e68 <ascii_strlower_n@plt+0x15a60>
  419e50:	adrp	x1, 420000 <ascii_strlower_n@plt+0x1bbf8>
  419e54:	add	x1, x1, #0x194
  419e58:	add	x0, x29, #0x18
  419e5c:	bl	403e18 <asprintf@plt>
  419e60:	tbnz	w0, #31, 419e7c <ascii_strlower_n@plt+0x15a74>
  419e64:	ldr	x8, [x29, #24]
  419e68:	mov	w0, wzr
  419e6c:	str	x8, [x19]
  419e70:	ldr	x19, [sp, #16]
  419e74:	ldp	x29, x30, [sp], #32
  419e78:	ret
  419e7c:	mov	w0, #0xfffffff4            	// #-12
  419e80:	ldr	x19, [sp, #16]
  419e84:	ldp	x29, x30, [sp], #32
  419e88:	ret
  419e8c:	stp	x29, x30, [sp, #-32]!
  419e90:	mov	x29, sp
  419e94:	str	x19, [sp, #16]
  419e98:	str	wzr, [x29, #28]
  419e9c:	cbz	x0, 419ec8 <ascii_strlower_n@plt+0x15ac0>
  419ea0:	mov	x19, x0
  419ea4:	adrp	x0, 43e000 <ascii_strlower_n@plt+0x39bf8>
  419ea8:	add	x0, x0, #0xbf0
  419eac:	mov	w1, #0x5                   	// #5
  419eb0:	mov	x2, x19
  419eb4:	bl	404208 <string_table_lookup@plt>
  419eb8:	tbnz	w0, #31, 419ed8 <ascii_strlower_n@plt+0x15ad0>
  419ebc:	ldr	x19, [sp, #16]
  419ec0:	ldp	x29, x30, [sp], #32
  419ec4:	ret
  419ec8:	mov	w0, #0xffffffff            	// #-1
  419ecc:	ldr	x19, [sp, #16]
  419ed0:	ldp	x29, x30, [sp], #32
  419ed4:	ret
  419ed8:	add	x2, x29, #0x1c
  419edc:	mov	x0, x19
  419ee0:	mov	w1, wzr
  419ee4:	bl	4043a8 <safe_atou_full@plt>
  419ee8:	ldr	w8, [x29, #28]
  419eec:	mov	w9, #0xffffffff            	// #-1
  419ef0:	cmp	w8, #0x100
  419ef4:	ccmp	w0, w9, #0x4, cc  // cc = lo, ul, last
  419ef8:	csinv	w0, w8, wzr, gt
  419efc:	ldr	x19, [sp, #16]
  419f00:	ldp	x29, x30, [sp], #32
  419f04:	ret
  419f08:	stp	x29, x30, [sp, #-32]!
  419f0c:	lsl	x8, x0, #4
  419f10:	stp	x20, x19, [sp, #16]
  419f14:	mov	x19, x0
  419f18:	add	x1, x8, #0x18
  419f1c:	mov	w0, #0x1                   	// #1
  419f20:	mov	x29, sp
  419f24:	mov	w20, #0x1                   	// #1
  419f28:	bl	404068 <calloc@plt>
  419f2c:	cbz	x0, 419f38 <ascii_strlower_n@plt+0x15b30>
  419f30:	str	w20, [x0]
  419f34:	str	x19, [x0, #16]
  419f38:	ldp	x20, x19, [sp, #16]
  419f3c:	ldp	x29, x30, [sp], #32
  419f40:	ret
  419f44:	stp	x29, x30, [sp, #-16]!
  419f48:	mov	x29, sp
  419f4c:	cbz	x0, 419f60 <ascii_strlower_n@plt+0x15b58>
  419f50:	ldr	w8, [x0]
  419f54:	cbz	w8, 419f68 <ascii_strlower_n@plt+0x15b60>
  419f58:	add	w8, w8, #0x1
  419f5c:	str	w8, [x0]
  419f60:	ldp	x29, x30, [sp], #16
  419f64:	ret
  419f68:	adrp	x1, 421000 <ascii_strlower_n@plt+0x1cbf8>
  419f6c:	adrp	x2, 423000 <ascii_strlower_n@plt+0x1ebf8>
  419f70:	adrp	x4, 423000 <ascii_strlower_n@plt+0x1ebf8>
  419f74:	add	x1, x1, #0xc49
  419f78:	add	x2, x2, #0x4b3
  419f7c:	add	x4, x4, #0x4d5
  419f80:	mov	w3, #0x2b                  	// #43
  419f84:	mov	w0, wzr
  419f88:	bl	403a98 <log_assert_failed_realm@plt>
  419f8c:	stp	x29, x30, [sp, #-48]!
  419f90:	str	x21, [sp, #16]
  419f94:	stp	x20, x19, [sp, #32]
  419f98:	mov	x29, sp
  419f9c:	cbz	x0, 419ffc <ascii_strlower_n@plt+0x15bf4>
  419fa0:	ldr	w8, [x0]
  419fa4:	mov	x19, x0
  419fa8:	cbz	w8, 41a010 <ascii_strlower_n@plt+0x15c08>
  419fac:	subs	w8, w8, #0x1
  419fb0:	str	w8, [x19]
  419fb4:	b.ne	419ffc <ascii_strlower_n@plt+0x15bf4>  // b.any
  419fb8:	ldr	x8, [x19, #8]
  419fbc:	cbz	x8, 419ff4 <ascii_strlower_n@plt+0x15bec>
  419fc0:	ldr	x0, [x19, #24]
  419fc4:	bl	417208 <ascii_strlower_n@plt+0x12e00>
  419fc8:	ldr	x8, [x19, #8]
  419fcc:	cmp	x8, #0x2
  419fd0:	b.cc	419ff4 <ascii_strlower_n@plt+0x15bec>  // b.lo, b.ul, b.last
  419fd4:	add	x20, x19, #0x28
  419fd8:	mov	w21, #0x1                   	// #1
  419fdc:	ldr	x0, [x20], #16
  419fe0:	bl	417208 <ascii_strlower_n@plt+0x12e00>
  419fe4:	ldr	x8, [x19, #8]
  419fe8:	add	x21, x21, #0x1
  419fec:	cmp	x21, x8
  419ff0:	b.cc	419fdc <ascii_strlower_n@plt+0x15bd4>  // b.lo, b.ul, b.last
  419ff4:	mov	x0, x19
  419ff8:	bl	4039d8 <free@plt>
  419ffc:	ldp	x20, x19, [sp, #32]
  41a000:	ldr	x21, [sp, #16]
  41a004:	mov	x0, xzr
  41a008:	ldp	x29, x30, [sp], #48
  41a00c:	ret
  41a010:	adrp	x1, 421000 <ascii_strlower_n@plt+0x1cbf8>
  41a014:	adrp	x2, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41a018:	adrp	x4, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41a01c:	add	x1, x1, #0xc49
  41a020:	add	x2, x2, #0x4b3
  41a024:	add	x4, x4, #0x4fc
  41a028:	mov	w3, #0x2b                  	// #43
  41a02c:	mov	w0, wzr
  41a030:	bl	403a98 <log_assert_failed_realm@plt>
  41a034:	stp	x29, x30, [sp, #-80]!
  41a038:	str	x25, [sp, #16]
  41a03c:	stp	x24, x23, [sp, #32]
  41a040:	stp	x22, x21, [sp, #48]
  41a044:	stp	x20, x19, [sp, #64]
  41a048:	mov	x29, sp
  41a04c:	cbz	x1, 41a18c <ascii_strlower_n@plt+0x15d84>
  41a050:	mov	x22, x0
  41a054:	cbz	x0, 41a168 <ascii_strlower_n@plt+0x15d60>
  41a058:	ldr	w8, [x22]
  41a05c:	cmp	w8, #0x1
  41a060:	b.ls	41a06c <ascii_strlower_n@plt+0x15c64>  // b.plast
  41a064:	mov	w0, #0xfffffff0            	// #-16
  41a068:	b	41a16c <ascii_strlower_n@plt+0x15d64>
  41a06c:	ldr	x8, [x22, #8]
  41a070:	mov	w19, w3
  41a074:	mov	w21, w2
  41a078:	mov	x20, x1
  41a07c:	cbz	x8, 41a134 <ascii_strlower_n@plt+0x15d2c>
  41a080:	mov	x24, xzr
  41a084:	add	x23, x22, #0x18
  41a088:	b	41a0a0 <ascii_strlower_n@plt+0x15c98>
  41a08c:	ldr	x25, [x22, #8]
  41a090:	add	x24, x24, #0x1
  41a094:	add	x23, x23, #0x10
  41a098:	cmp	x24, x25
  41a09c:	b.cs	41a138 <ascii_strlower_n@plt+0x15d30>  // b.hs, b.nlast
  41a0a0:	ldr	w8, [x23, #8]
  41a0a4:	cmp	w8, w21
  41a0a8:	b.ne	41a08c <ascii_strlower_n@plt+0x15c84>  // b.any
  41a0ac:	ldr	x8, [x23]
  41a0b0:	ldr	x1, [x20, #8]
  41a0b4:	ldr	x0, [x8, #8]
  41a0b8:	bl	4164bc <ascii_strlower_n@plt+0x120b4>
  41a0bc:	tbnz	w0, #31, 41a16c <ascii_strlower_n@plt+0x15d64>
  41a0c0:	cbz	w0, 41a08c <ascii_strlower_n@plt+0x15c84>
  41a0c4:	ldr	x0, [x23]
  41a0c8:	ldr	w8, [x20, #24]
  41a0cc:	ldr	w9, [x0, #24]
  41a0d0:	cmp	w8, #0x0
  41a0d4:	cset	w8, eq  // eq = none
  41a0d8:	cmp	w9, #0x0
  41a0dc:	cset	w9, eq  // eq = none
  41a0e0:	eor	w8, w8, w9
  41a0e4:	tbnz	w8, #0, 41a184 <ascii_strlower_n@plt+0x15d7c>
  41a0e8:	mov	x1, x20
  41a0ec:	bl	417708 <ascii_strlower_n@plt+0x13300>
  41a0f0:	tbnz	w0, #31, 41a16c <ascii_strlower_n@plt+0x15d64>
  41a0f4:	cbz	w0, 41a08c <ascii_strlower_n@plt+0x15c84>
  41a0f8:	ldr	x8, [x23]
  41a0fc:	ldr	w9, [x20, #24]
  41a100:	ldr	w8, [x8, #24]
  41a104:	cmp	w9, w8
  41a108:	b.ls	41a120 <ascii_strlower_n@plt+0x15d18>  // b.plast
  41a10c:	mov	x0, x20
  41a110:	bl	4171c0 <ascii_strlower_n@plt+0x12db8>
  41a114:	ldr	x0, [x23]
  41a118:	bl	417208 <ascii_strlower_n@plt+0x12e00>
  41a11c:	str	x20, [x23]
  41a120:	ldr	w8, [x23, #12]
  41a124:	mov	w0, wzr
  41a128:	orr	w8, w8, w19
  41a12c:	str	w8, [x23, #12]
  41a130:	b	41a16c <ascii_strlower_n@plt+0x15d64>
  41a134:	mov	x25, xzr
  41a138:	ldr	x8, [x22, #16]
  41a13c:	cmp	x25, x8
  41a140:	b.cs	41a168 <ascii_strlower_n@plt+0x15d60>  // b.hs, b.nlast
  41a144:	add	x8, x25, #0x1
  41a148:	mov	x0, x20
  41a14c:	str	x8, [x22, #8]
  41a150:	bl	4171c0 <ascii_strlower_n@plt+0x12db8>
  41a154:	add	x8, x22, x25, lsl #4
  41a158:	str	x0, [x8, #24]
  41a15c:	mov	w0, #0x1                   	// #1
  41a160:	stp	w21, w19, [x8, #32]
  41a164:	b	41a16c <ascii_strlower_n@plt+0x15d64>
  41a168:	mov	w0, #0xffffffe4            	// #-28
  41a16c:	ldp	x20, x19, [sp, #64]
  41a170:	ldp	x22, x21, [sp, #48]
  41a174:	ldp	x24, x23, [sp, #32]
  41a178:	ldr	x25, [sp, #16]
  41a17c:	ldp	x29, x30, [sp], #80
  41a180:	ret
  41a184:	mov	w0, #0xffffffea            	// #-22
  41a188:	b	41a16c <ascii_strlower_n@plt+0x15d64>
  41a18c:	adrp	x1, 422000 <ascii_strlower_n@plt+0x1dbf8>
  41a190:	adrp	x2, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41a194:	adrp	x4, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41a198:	add	x1, x1, #0x14e
  41a19c:	add	x2, x2, #0x4b3
  41a1a0:	add	x4, x4, #0x525
  41a1a4:	mov	w3, #0x51                  	// #81
  41a1a8:	mov	w0, wzr
  41a1ac:	bl	403a98 <log_assert_failed_realm@plt>
  41a1b0:	stp	x29, x30, [sp, #-48]!
  41a1b4:	stp	x22, x21, [sp, #16]
  41a1b8:	stp	x20, x19, [sp, #32]
  41a1bc:	mov	x29, sp
  41a1c0:	cbz	x0, 41a214 <ascii_strlower_n@plt+0x15e0c>
  41a1c4:	mov	x21, x1
  41a1c8:	cbz	x1, 41a234 <ascii_strlower_n@plt+0x15e2c>
  41a1cc:	mov	w1, #0x1                   	// #1
  41a1d0:	mov	w19, w3
  41a1d4:	mov	w20, w2
  41a1d8:	mov	x22, x0
  41a1dc:	bl	41a258 <ascii_strlower_n@plt+0x15e50>
  41a1e0:	tbnz	w0, #31, 41a204 <ascii_strlower_n@plt+0x15dfc>
  41a1e4:	ldr	x0, [x22]
  41a1e8:	mov	x1, x21
  41a1ec:	mov	w2, w20
  41a1f0:	mov	w3, w19
  41a1f4:	ldp	x20, x19, [sp, #32]
  41a1f8:	ldp	x22, x21, [sp, #16]
  41a1fc:	ldp	x29, x30, [sp], #48
  41a200:	b	41a034 <ascii_strlower_n@plt+0x15c2c>
  41a204:	ldp	x20, x19, [sp, #32]
  41a208:	ldp	x22, x21, [sp, #16]
  41a20c:	ldp	x29, x30, [sp], #48
  41a210:	ret
  41a214:	adrp	x1, 422000 <ascii_strlower_n@plt+0x1dbf8>
  41a218:	adrp	x2, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41a21c:	adrp	x4, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41a220:	add	x1, x1, #0xc63
  41a224:	add	x2, x2, #0x4b3
  41a228:	add	x4, x4, #0x56f
  41a22c:	mov	w3, #0x8d                  	// #141
  41a230:	bl	403a98 <log_assert_failed_realm@plt>
  41a234:	adrp	x1, 422000 <ascii_strlower_n@plt+0x1dbf8>
  41a238:	adrp	x2, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41a23c:	adrp	x4, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41a240:	add	x1, x1, #0x14e
  41a244:	add	x2, x2, #0x4b3
  41a248:	add	x4, x4, #0x56f
  41a24c:	mov	w3, #0x8e                  	// #142
  41a250:	mov	w0, wzr
  41a254:	bl	403a98 <log_assert_failed_realm@plt>
  41a258:	stp	x29, x30, [sp, #-80]!
  41a25c:	stp	x26, x25, [sp, #16]
  41a260:	stp	x24, x23, [sp, #32]
  41a264:	stp	x22, x21, [sp, #48]
  41a268:	stp	x20, x19, [sp, #64]
  41a26c:	mov	x29, sp
  41a270:	cbz	x0, 41a488 <ascii_strlower_n@plt+0x16080>
  41a274:	mov	x20, x1
  41a278:	cbz	x1, 41a39c <ascii_strlower_n@plt+0x15f94>
  41a27c:	ldr	x21, [x0]
  41a280:	mov	x19, x0
  41a284:	cbz	x21, 41a340 <ascii_strlower_n@plt+0x15f38>
  41a288:	ldr	w8, [x21]
  41a28c:	ldr	x9, [x21, #8]
  41a290:	cmp	w8, #0x1
  41a294:	add	x22, x9, x20
  41a298:	b.ls	41a364 <ascii_strlower_n@plt+0x15f5c>  // b.plast
  41a29c:	mov	w1, #0x18                  	// #24
  41a2a0:	bfi	x1, x22, #5, #59
  41a2a4:	mov	w0, #0x1                   	// #1
  41a2a8:	mov	w23, #0x1                   	// #1
  41a2ac:	bl	404068 <calloc@plt>
  41a2b0:	cbz	x0, 41a3a4 <ascii_strlower_n@plt+0x15f9c>
  41a2b4:	lsl	x8, x22, #1
  41a2b8:	str	w23, [x0]
  41a2bc:	str	x8, [x0, #16]
  41a2c0:	ldr	x8, [x21, #8]
  41a2c4:	mov	x20, x0
  41a2c8:	cbz	x8, 41a410 <ascii_strlower_n@plt+0x16008>
  41a2cc:	ldr	x0, [x21, #24]
  41a2d0:	cbz	x0, 41a31c <ascii_strlower_n@plt+0x15f14>
  41a2d4:	mov	x22, xzr
  41a2d8:	add	x23, x21, #0x28
  41a2dc:	ldp	x24, x8, [x20, #8]
  41a2e0:	cmp	x24, x8
  41a2e4:	b.cs	41a3ac <ascii_strlower_n@plt+0x15fa4>  // b.hs, b.nlast
  41a2e8:	ldp	w25, w26, [x23, #-8]
  41a2ec:	add	x8, x24, #0x1
  41a2f0:	str	x8, [x20, #8]
  41a2f4:	bl	4171c0 <ascii_strlower_n@plt+0x12db8>
  41a2f8:	add	x8, x20, x24, lsl #4
  41a2fc:	str	x0, [x8, #24]
  41a300:	stp	w25, w26, [x8, #32]
  41a304:	ldr	x8, [x21, #8]
  41a308:	add	x22, x22, #0x1
  41a30c:	cmp	x22, x8
  41a310:	b.cs	41a408 <ascii_strlower_n@plt+0x16000>  // b.hs, b.nlast
  41a314:	ldr	x0, [x23], #16
  41a318:	cbnz	x0, 41a2dc <ascii_strlower_n@plt+0x15ed4>
  41a31c:	adrp	x1, 422000 <ascii_strlower_n@plt+0x1dbf8>
  41a320:	adrp	x2, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41a324:	adrp	x4, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41a328:	add	x1, x1, #0x14e
  41a32c:	add	x2, x2, #0x4b3
  41a330:	add	x4, x4, #0xa30
  41a334:	mov	w3, #0x2e                  	// #46
  41a338:	mov	w0, wzr
  41a33c:	bl	403a98 <log_assert_failed_realm@plt>
  41a340:	lsl	x8, x20, #4
  41a344:	add	x1, x8, #0x18
  41a348:	mov	w0, #0x1                   	// #1
  41a34c:	mov	w21, #0x1                   	// #1
  41a350:	bl	404068 <calloc@plt>
  41a354:	cbz	x0, 41a3a4 <ascii_strlower_n@plt+0x15f9c>
  41a358:	mov	x8, x0
  41a35c:	str	w21, [x0]
  41a360:	b	41a38c <ascii_strlower_n@plt+0x15f84>
  41a364:	ldr	x8, [x21, #16]
  41a368:	cmp	x8, x22
  41a36c:	b.cs	41a39c <ascii_strlower_n@plt+0x15f94>  // b.hs, b.nlast
  41a370:	mov	w1, #0x18                  	// #24
  41a374:	bfi	x1, x22, #5, #59
  41a378:	mov	x0, x21
  41a37c:	bl	4040b8 <realloc@plt>
  41a380:	cbz	x0, 41a3a4 <ascii_strlower_n@plt+0x15f9c>
  41a384:	mov	x8, x0
  41a388:	lsl	x20, x22, #1
  41a38c:	mov	w0, wzr
  41a390:	str	x20, [x8, #16]
  41a394:	str	x8, [x19]
  41a398:	b	41a470 <ascii_strlower_n@plt+0x16068>
  41a39c:	mov	w0, wzr
  41a3a0:	b	41a470 <ascii_strlower_n@plt+0x16068>
  41a3a4:	mov	w0, #0xfffffff4            	// #-12
  41a3a8:	b	41a470 <ascii_strlower_n@plt+0x16068>
  41a3ac:	ldr	w8, [x20]
  41a3b0:	cbz	w8, 41a4a8 <ascii_strlower_n@plt+0x160a0>
  41a3b4:	subs	w8, w8, #0x1
  41a3b8:	str	w8, [x20]
  41a3bc:	b.ne	41a400 <ascii_strlower_n@plt+0x15ff8>  // b.any
  41a3c0:	cbz	x24, 41a3f8 <ascii_strlower_n@plt+0x15ff0>
  41a3c4:	ldr	x0, [x20, #24]
  41a3c8:	bl	417208 <ascii_strlower_n@plt+0x12e00>
  41a3cc:	ldr	x8, [x20, #8]
  41a3d0:	cmp	x8, #0x2
  41a3d4:	b.cc	41a3f8 <ascii_strlower_n@plt+0x15ff0>  // b.lo, b.ul, b.last
  41a3d8:	add	x19, x20, #0x28
  41a3dc:	mov	w21, #0x1                   	// #1
  41a3e0:	ldr	x0, [x19], #16
  41a3e4:	bl	417208 <ascii_strlower_n@plt+0x12e00>
  41a3e8:	ldr	x8, [x20, #8]
  41a3ec:	add	x21, x21, #0x1
  41a3f0:	cmp	x21, x8
  41a3f4:	b.cc	41a3e0 <ascii_strlower_n@plt+0x15fd8>  // b.lo, b.ul, b.last
  41a3f8:	mov	x0, x20
  41a3fc:	bl	4039d8 <free@plt>
  41a400:	mov	w0, #0xffffffe4            	// #-28
  41a404:	b	41a470 <ascii_strlower_n@plt+0x16068>
  41a408:	ldr	x21, [x19]
  41a40c:	cbz	x21, 41a468 <ascii_strlower_n@plt+0x16060>
  41a410:	ldr	w8, [x21]
  41a414:	cbz	w8, 41a4a8 <ascii_strlower_n@plt+0x160a0>
  41a418:	subs	w8, w8, #0x1
  41a41c:	str	w8, [x21]
  41a420:	b.ne	41a468 <ascii_strlower_n@plt+0x16060>  // b.any
  41a424:	ldr	x8, [x21, #8]
  41a428:	cbz	x8, 41a460 <ascii_strlower_n@plt+0x16058>
  41a42c:	ldr	x0, [x21, #24]
  41a430:	bl	417208 <ascii_strlower_n@plt+0x12e00>
  41a434:	ldr	x8, [x21, #8]
  41a438:	cmp	x8, #0x2
  41a43c:	b.cc	41a460 <ascii_strlower_n@plt+0x16058>  // b.lo, b.ul, b.last
  41a440:	add	x22, x21, #0x28
  41a444:	mov	w23, #0x1                   	// #1
  41a448:	ldr	x0, [x22], #16
  41a44c:	bl	417208 <ascii_strlower_n@plt+0x12e00>
  41a450:	ldr	x8, [x21, #8]
  41a454:	add	x23, x23, #0x1
  41a458:	cmp	x23, x8
  41a45c:	b.cc	41a448 <ascii_strlower_n@plt+0x16040>  // b.lo, b.ul, b.last
  41a460:	mov	x0, x21
  41a464:	bl	4039d8 <free@plt>
  41a468:	mov	w0, wzr
  41a46c:	str	x20, [x19]
  41a470:	ldp	x20, x19, [sp, #64]
  41a474:	ldp	x22, x21, [sp, #48]
  41a478:	ldp	x24, x23, [sp, #32]
  41a47c:	ldp	x26, x25, [sp, #16]
  41a480:	ldp	x29, x30, [sp], #80
  41a484:	ret
  41a488:	adrp	x1, 422000 <ascii_strlower_n@plt+0x1dbf8>
  41a48c:	adrp	x2, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41a490:	adrp	x4, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41a494:	add	x1, x1, #0xc63
  41a498:	add	x2, x2, #0x4b3
  41a49c:	add	x4, x4, #0x96f
  41a4a0:	mov	w3, #0x28d                 	// #653
  41a4a4:	bl	403a98 <log_assert_failed_realm@plt>
  41a4a8:	adrp	x1, 421000 <ascii_strlower_n@plt+0x1cbf8>
  41a4ac:	adrp	x2, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41a4b0:	adrp	x4, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41a4b4:	add	x1, x1, #0xc49
  41a4b8:	add	x2, x2, #0x4b3
  41a4bc:	add	x4, x4, #0x4fc
  41a4c0:	mov	w3, #0x2b                  	// #43
  41a4c4:	mov	w0, wzr
  41a4c8:	bl	403a98 <log_assert_failed_realm@plt>
  41a4cc:	stp	x29, x30, [sp, #-64]!
  41a4d0:	str	x23, [sp, #16]
  41a4d4:	mov	x23, x1
  41a4d8:	stp	x22, x21, [sp, #32]
  41a4dc:	mov	w22, w2
  41a4e0:	mov	x21, x0
  41a4e4:	mov	w0, #0x1                   	// #1
  41a4e8:	mov	w1, #0x6                   	// #6
  41a4ec:	mov	x2, x23
  41a4f0:	stp	x20, x19, [sp, #48]
  41a4f4:	mov	x29, sp
  41a4f8:	mov	w20, w3
  41a4fc:	bl	417018 <ascii_strlower_n@plt+0x12c10>
  41a500:	cbz	x0, 41a560 <ascii_strlower_n@plt+0x16158>
  41a504:	mov	x19, x0
  41a508:	str	w22, [x0, #24]
  41a50c:	mov	x0, x23
  41a510:	bl	403ae8 <strdup@plt>
  41a514:	str	x0, [x19, #80]
  41a518:	cbz	x0, 41a568 <ascii_strlower_n@plt+0x16160>
  41a51c:	adrp	x0, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41a520:	add	x0, x0, #0x5c1
  41a524:	mov	x1, x23
  41a528:	mov	x2, xzr
  41a52c:	bl	403f58 <strjoin_real@plt>
  41a530:	str	x0, [x19, #88]
  41a534:	cbz	x0, 41a568 <ascii_strlower_n@plt+0x16160>
  41a538:	movi	v0.4s, #0x1
  41a53c:	mov	w3, #0x1                   	// #1
  41a540:	mov	x0, x21
  41a544:	mov	x1, x19
  41a548:	mov	w2, w20
  41a54c:	str	q0, [x19, #96]
  41a550:	str	w22, [x19, #112]
  41a554:	bl	41a034 <ascii_strlower_n@plt+0x15c2c>
  41a558:	mov	w20, w0
  41a55c:	b	41a56c <ascii_strlower_n@plt+0x16164>
  41a560:	mov	w20, #0xfffffff4            	// #-12
  41a564:	b	41a574 <ascii_strlower_n@plt+0x1616c>
  41a568:	mov	w20, #0xfffffff4            	// #-12
  41a56c:	mov	x0, x19
  41a570:	bl	417208 <ascii_strlower_n@plt+0x12e00>
  41a574:	mov	w0, w20
  41a578:	ldp	x20, x19, [sp, #48]
  41a57c:	ldp	x22, x21, [sp, #32]
  41a580:	ldr	x23, [sp, #16]
  41a584:	ldp	x29, x30, [sp], #64
  41a588:	ret
  41a58c:	stp	x29, x30, [sp, #-80]!
  41a590:	stp	x26, x25, [sp, #16]
  41a594:	stp	x24, x23, [sp, #32]
  41a598:	stp	x22, x21, [sp, #48]
  41a59c:	stp	x20, x19, [sp, #64]
  41a5a0:	mov	x29, sp
  41a5a4:	cbz	x1, 41a6e4 <ascii_strlower_n@plt+0x162dc>
  41a5a8:	mov	x19, x2
  41a5ac:	mov	x21, x0
  41a5b0:	cbz	x0, 41a6b4 <ascii_strlower_n@plt+0x162ac>
  41a5b4:	ldr	x8, [x21, #8]
  41a5b8:	mov	x20, x1
  41a5bc:	cbz	x8, 41a654 <ascii_strlower_n@plt+0x1624c>
  41a5c0:	ldr	x1, [x21, #24]
  41a5c4:	ldr	w23, [x21, #36]
  41a5c8:	ldr	x8, [x21, #8]
  41a5cc:	cbz	x19, 41a664 <ascii_strlower_n@plt+0x1625c>
  41a5d0:	cbz	x8, 41a6b4 <ascii_strlower_n@plt+0x162ac>
  41a5d4:	mov	w24, wzr
  41a5d8:	mov	w22, wzr
  41a5dc:	mov	x25, xzr
  41a5e0:	add	x26, x21, #0x34
  41a5e4:	b	41a5f8 <ascii_strlower_n@plt+0x161f0>
  41a5e8:	ldur	x1, [x26, #-12]
  41a5ec:	ldr	w23, [x26], #16
  41a5f0:	cmp	x25, x8
  41a5f4:	b.cs	41a648 <ascii_strlower_n@plt+0x16240>  // b.hs, b.nlast
  41a5f8:	mov	x0, x20
  41a5fc:	mov	x2, xzr
  41a600:	bl	4165a4 <ascii_strlower_n@plt+0x1219c>
  41a604:	tbnz	w0, #31, 41a6c4 <ascii_strlower_n@plt+0x162bc>
  41a608:	ldr	x8, [x21, #8]
  41a60c:	tst	w24, #0x1
  41a610:	csinv	w9, w22, wzr, ne  // ne = any
  41a614:	cmp	w0, #0x0
  41a618:	cset	w10, ne  // ne = any
  41a61c:	and	w9, w9, w23
  41a620:	add	x25, x25, #0x1
  41a624:	csel	w22, w22, w9, eq  // eq = none
  41a628:	cmp	x25, x8
  41a62c:	orr	w24, w24, w10
  41a630:	b.cc	41a5e8 <ascii_strlower_n@plt+0x161e0>  // b.lo, b.ul, b.last
  41a634:	mov	x1, xzr
  41a638:	mov	w23, wzr
  41a63c:	cmp	x25, x8
  41a640:	add	x26, x26, #0x10
  41a644:	b.cc	41a5f8 <ascii_strlower_n@plt+0x161f0>  // b.lo, b.ul, b.last
  41a648:	and	w0, w24, #0x1
  41a64c:	cbnz	x19, 41a6c0 <ascii_strlower_n@plt+0x162b8>
  41a650:	b	41a6c4 <ascii_strlower_n@plt+0x162bc>
  41a654:	mov	x1, xzr
  41a658:	mov	w23, wzr
  41a65c:	ldr	x8, [x21, #8]
  41a660:	cbnz	x19, 41a5d0 <ascii_strlower_n@plt+0x161c8>
  41a664:	cbz	x8, 41a6b4 <ascii_strlower_n@plt+0x162ac>
  41a668:	mov	x22, xzr
  41a66c:	add	x23, x21, #0x28
  41a670:	b	41a680 <ascii_strlower_n@plt+0x16278>
  41a674:	ldr	x1, [x23], #16
  41a678:	cmp	x22, x8
  41a67c:	b.cs	41a6b4 <ascii_strlower_n@plt+0x162ac>  // b.hs, b.nlast
  41a680:	mov	x0, x20
  41a684:	mov	x2, xzr
  41a688:	bl	4165a4 <ascii_strlower_n@plt+0x1219c>
  41a68c:	tbnz	w0, #31, 41a6c4 <ascii_strlower_n@plt+0x162bc>
  41a690:	cbnz	w0, 41a6dc <ascii_strlower_n@plt+0x162d4>
  41a694:	ldr	x8, [x21, #8]
  41a698:	add	x22, x22, #0x1
  41a69c:	cmp	x22, x8
  41a6a0:	b.cc	41a674 <ascii_strlower_n@plt+0x1626c>  // b.lo, b.ul, b.last
  41a6a4:	mov	x1, xzr
  41a6a8:	cmp	x22, x8
  41a6ac:	add	x23, x23, #0x10
  41a6b0:	b.cc	41a680 <ascii_strlower_n@plt+0x16278>  // b.lo, b.ul, b.last
  41a6b4:	mov	w0, wzr
  41a6b8:	mov	w22, wzr
  41a6bc:	cbz	x19, 41a6c4 <ascii_strlower_n@plt+0x162bc>
  41a6c0:	str	w22, [x19]
  41a6c4:	ldp	x20, x19, [sp, #64]
  41a6c8:	ldp	x22, x21, [sp, #48]
  41a6cc:	ldp	x24, x23, [sp, #32]
  41a6d0:	ldp	x26, x25, [sp, #16]
  41a6d4:	ldp	x29, x30, [sp], #80
  41a6d8:	ret
  41a6dc:	mov	w0, #0x1                   	// #1
  41a6e0:	b	41a6c4 <ascii_strlower_n@plt+0x162bc>
  41a6e4:	adrp	x1, 422000 <ascii_strlower_n@plt+0x1dbf8>
  41a6e8:	adrp	x2, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41a6ec:	adrp	x4, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41a6f0:	add	x1, x1, #0x4fe
  41a6f4:	add	x2, x2, #0x4b3
  41a6f8:	add	x4, x4, #0x5c7
  41a6fc:	mov	w3, #0xb7                  	// #183
  41a700:	mov	w0, wzr
  41a704:	bl	403a98 <log_assert_failed_realm@plt>
  41a708:	cbz	x0, 41a784 <ascii_strlower_n@plt+0x1637c>
  41a70c:	ldr	x8, [x0, #8]
  41a710:	cbz	x8, 41a724 <ascii_strlower_n@plt+0x1631c>
  41a714:	ldr	x11, [x0, #24]
  41a718:	ldr	x8, [x0, #8]
  41a71c:	cbnz	x8, 41a730 <ascii_strlower_n@plt+0x16328>
  41a720:	b	41a780 <ascii_strlower_n@plt+0x16378>
  41a724:	mov	x11, xzr
  41a728:	ldr	x8, [x0, #8]
  41a72c:	cbz	x8, 41a780 <ascii_strlower_n@plt+0x16378>
  41a730:	mov	x9, xzr
  41a734:	add	x10, x0, #0x28
  41a738:	mov	w0, #0x1                   	// #1
  41a73c:	b	41a74c <ascii_strlower_n@plt+0x16344>
  41a740:	ldr	x11, [x10], #16
  41a744:	cmp	x8, x9
  41a748:	b.eq	41a780 <ascii_strlower_n@plt+0x16378>  // b.none
  41a74c:	ldr	x11, [x11, #8]
  41a750:	ldrh	w11, [x11, #6]
  41a754:	cmp	w11, #0x2f
  41a758:	b.eq	41a784 <ascii_strlower_n@plt+0x1637c>  // b.none
  41a75c:	cmp	w11, #0x32
  41a760:	b.eq	41a784 <ascii_strlower_n@plt+0x1637c>  // b.none
  41a764:	add	x9, x9, #0x1
  41a768:	cmp	x9, x8
  41a76c:	b.cc	41a740 <ascii_strlower_n@plt+0x16338>  // b.lo, b.ul, b.last
  41a770:	mov	x11, xzr
  41a774:	cmp	x8, x9
  41a778:	add	x10, x10, #0x10
  41a77c:	b.ne	41a74c <ascii_strlower_n@plt+0x16344>  // b.any
  41a780:	mov	w0, wzr
  41a784:	ret
  41a788:	sub	sp, sp, #0x40
  41a78c:	stp	x29, x30, [sp, #16]
  41a790:	stp	x22, x21, [sp, #32]
  41a794:	stp	x20, x19, [sp, #48]
  41a798:	add	x29, sp, #0x10
  41a79c:	cbz	x0, 41a83c <ascii_strlower_n@plt+0x16434>
  41a7a0:	ldr	x8, [x0, #8]
  41a7a4:	mov	x19, x1
  41a7a8:	mov	x20, x0
  41a7ac:	cbz	x8, 41a7b4 <ascii_strlower_n@plt+0x163ac>
  41a7b0:	ldr	x8, [x20, #24]
  41a7b4:	ldr	x9, [x20, #8]
  41a7b8:	cbz	x9, 41a838 <ascii_strlower_n@plt+0x16430>
  41a7bc:	mov	x21, xzr
  41a7c0:	add	x22, x20, #0x28
  41a7c4:	b	41a7d4 <ascii_strlower_n@plt+0x163cc>
  41a7c8:	ldr	x8, [x22], #16
  41a7cc:	cmp	x21, x9
  41a7d0:	b.cs	41a838 <ascii_strlower_n@plt+0x16430>  // b.hs, b.nlast
  41a7d4:	ldr	x0, [x8, #8]
  41a7d8:	ldrh	w8, [x0, #6]
  41a7dc:	cmp	w8, #0x32
  41a7e0:	b.ne	41a818 <ascii_strlower_n@plt+0x16410>  // b.any
  41a7e4:	bl	415fcc <ascii_strlower_n@plt+0x11bc4>
  41a7e8:	str	x0, [sp, #8]
  41a7ec:	add	x0, sp, #0x8
  41a7f0:	mov	w2, #0x3f                  	// #63
  41a7f4:	mov	x1, xzr
  41a7f8:	mov	w3, wzr
  41a7fc:	bl	404108 <dns_label_unescape@plt>
  41a800:	tbnz	w0, #31, 41a83c <ascii_strlower_n@plt+0x16434>
  41a804:	cbz	w0, 41a818 <ascii_strlower_n@plt+0x16410>
  41a808:	ldr	x0, [sp, #8]
  41a80c:	mov	x1, x19
  41a810:	bl	404248 <dns_name_equal@plt>
  41a814:	cbnz	w0, 41a83c <ascii_strlower_n@plt+0x16434>
  41a818:	ldr	x9, [x20, #8]
  41a81c:	add	x21, x21, #0x1
  41a820:	cmp	x21, x9
  41a824:	b.cc	41a7c8 <ascii_strlower_n@plt+0x163c0>  // b.lo, b.ul, b.last
  41a828:	mov	x8, xzr
  41a82c:	cmp	x21, x9
  41a830:	add	x22, x22, #0x10
  41a834:	b.cc	41a7d4 <ascii_strlower_n@plt+0x163cc>  // b.lo, b.ul, b.last
  41a838:	mov	w0, wzr
  41a83c:	ldp	x20, x19, [sp, #48]
  41a840:	ldp	x22, x21, [sp, #32]
  41a844:	ldp	x29, x30, [sp, #16]
  41a848:	add	sp, sp, #0x40
  41a84c:	ret
  41a850:	sub	sp, sp, #0x70
  41a854:	stp	x29, x30, [sp, #16]
  41a858:	stp	x28, x27, [sp, #32]
  41a85c:	stp	x26, x25, [sp, #48]
  41a860:	stp	x24, x23, [sp, #64]
  41a864:	stp	x22, x21, [sp, #80]
  41a868:	stp	x20, x19, [sp, #96]
  41a86c:	add	x29, sp, #0x10
  41a870:	cbz	x1, 41a9a4 <ascii_strlower_n@plt+0x1659c>
  41a874:	ldrh	w8, [x1, #6]
  41a878:	mov	x21, x1
  41a87c:	mov	x22, x0
  41a880:	mov	w0, wzr
  41a884:	cmp	w8, #0x6
  41a888:	b.eq	41a984 <ascii_strlower_n@plt+0x1657c>  // b.none
  41a88c:	cbz	x22, 41a984 <ascii_strlower_n@plt+0x1657c>
  41a890:	ldr	x8, [x22, #8]
  41a894:	mov	x20, x2
  41a898:	str	x3, [sp, #8]
  41a89c:	cbz	x8, 41a964 <ascii_strlower_n@plt+0x1655c>
  41a8a0:	ldr	x28, [x22, #24]
  41a8a4:	ldr	w24, [x22, #36]
  41a8a8:	ldr	x8, [x22, #8]
  41a8ac:	cbz	x8, 41a974 <ascii_strlower_n@plt+0x1656c>
  41a8b0:	mov	x25, xzr
  41a8b4:	mov	w19, wzr
  41a8b8:	mov	x26, xzr
  41a8bc:	add	x27, x22, #0x34
  41a8c0:	b	41a8d4 <ascii_strlower_n@plt+0x164cc>
  41a8c4:	ldur	x28, [x27, #-12]
  41a8c8:	ldr	w24, [x27], #16
  41a8cc:	cmp	x26, x8
  41a8d0:	b.cs	41a944 <ascii_strlower_n@plt+0x1653c>  // b.hs, b.nlast
  41a8d4:	ldr	x1, [x28, #8]
  41a8d8:	mov	x0, x21
  41a8dc:	bl	41699c <ascii_strlower_n@plt+0x12594>
  41a8e0:	tbnz	w0, #31, 41a984 <ascii_strlower_n@plt+0x1657c>
  41a8e4:	cbz	w0, 41a920 <ascii_strlower_n@plt+0x16518>
  41a8e8:	cbz	x25, 41a918 <ascii_strlower_n@plt+0x16510>
  41a8ec:	ldr	x0, [x28, #8]
  41a8f0:	bl	415fcc <ascii_strlower_n@plt+0x11bc4>
  41a8f4:	ldr	x8, [x25, #8]
  41a8f8:	mov	x23, x0
  41a8fc:	mov	x0, x8
  41a900:	bl	415fcc <ascii_strlower_n@plt+0x11bc4>
  41a904:	mov	x1, x0
  41a908:	mov	x0, x23
  41a90c:	bl	404238 <dns_name_endswith@plt>
  41a910:	tbnz	w0, #31, 41a984 <ascii_strlower_n@plt+0x1657c>
  41a914:	cbnz	w0, 41a920 <ascii_strlower_n@plt+0x16518>
  41a918:	mov	x25, x28
  41a91c:	mov	w19, w24
  41a920:	ldr	x8, [x22, #8]
  41a924:	add	x26, x26, #0x1
  41a928:	cmp	x26, x8
  41a92c:	b.cc	41a8c4 <ascii_strlower_n@plt+0x164bc>  // b.lo, b.ul, b.last
  41a930:	mov	x28, xzr
  41a934:	mov	w24, wzr
  41a938:	cmp	x26, x8
  41a93c:	add	x27, x27, #0x10
  41a940:	b.cc	41a8d4 <ascii_strlower_n@plt+0x164cc>  // b.lo, b.ul, b.last
  41a944:	cbz	x25, 41a980 <ascii_strlower_n@plt+0x16578>
  41a948:	cbz	x20, 41a950 <ascii_strlower_n@plt+0x16548>
  41a94c:	str	x25, [x20]
  41a950:	ldr	x8, [sp, #8]
  41a954:	cbz	x8, 41a95c <ascii_strlower_n@plt+0x16554>
  41a958:	str	w19, [x8]
  41a95c:	mov	w0, #0x1                   	// #1
  41a960:	b	41a984 <ascii_strlower_n@plt+0x1657c>
  41a964:	mov	x28, xzr
  41a968:	mov	w24, wzr
  41a96c:	ldr	x8, [x22, #8]
  41a970:	cbnz	x8, 41a8b0 <ascii_strlower_n@plt+0x164a8>
  41a974:	mov	w19, wzr
  41a978:	mov	x25, xzr
  41a97c:	cbnz	x25, 41a948 <ascii_strlower_n@plt+0x16540>
  41a980:	mov	w0, wzr
  41a984:	ldp	x20, x19, [sp, #96]
  41a988:	ldp	x22, x21, [sp, #80]
  41a98c:	ldp	x24, x23, [sp, #64]
  41a990:	ldp	x26, x25, [sp, #48]
  41a994:	ldp	x28, x27, [sp, #32]
  41a998:	ldp	x29, x30, [sp, #16]
  41a99c:	add	sp, sp, #0x70
  41a9a0:	ret
  41a9a4:	adrp	x1, 422000 <ascii_strlower_n@plt+0x1dbf8>
  41a9a8:	adrp	x2, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41a9ac:	adrp	x4, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41a9b0:	add	x1, x1, #0x4fe
  41a9b4:	add	x2, x2, #0x4b3
  41a9b8:	add	x4, x4, #0x617
  41a9bc:	mov	w3, #0xfc                  	// #252
  41a9c0:	mov	w0, wzr
  41a9c4:	bl	403a98 <log_assert_failed_realm@plt>
  41a9c8:	stp	x29, x30, [sp, #-80]!
  41a9cc:	stp	x26, x25, [sp, #16]
  41a9d0:	stp	x24, x23, [sp, #32]
  41a9d4:	stp	x22, x21, [sp, #48]
  41a9d8:	stp	x20, x19, [sp, #64]
  41a9dc:	mov	x29, sp
  41a9e0:	cbz	x1, 41aac4 <ascii_strlower_n@plt+0x166bc>
  41a9e4:	mov	x22, x0
  41a9e8:	ldrh	w0, [x1, #6]
  41a9ec:	mov	x19, x3
  41a9f0:	mov	x20, x2
  41a9f4:	mov	x21, x1
  41a9f8:	bl	41d75c <ascii_strlower_n@plt+0x19354>
  41a9fc:	mov	w8, w0
  41aa00:	mov	w0, wzr
  41aa04:	tbz	w8, #0, 41aaac <ascii_strlower_n@plt+0x166a4>
  41aa08:	cbz	x22, 41aaac <ascii_strlower_n@plt+0x166a4>
  41aa0c:	ldr	x8, [x22, #8]
  41aa10:	cbz	x8, 41aa28 <ascii_strlower_n@plt+0x16620>
  41aa14:	ldr	x23, [x22, #24]
  41aa18:	ldr	w24, [x22, #36]
  41aa1c:	ldr	x8, [x22, #8]
  41aa20:	cbnz	x8, 41aa38 <ascii_strlower_n@plt+0x16630>
  41aa24:	b	41aa90 <ascii_strlower_n@plt+0x16688>
  41aa28:	mov	x23, xzr
  41aa2c:	mov	w24, wzr
  41aa30:	ldr	x8, [x22, #8]
  41aa34:	cbz	x8, 41aa90 <ascii_strlower_n@plt+0x16688>
  41aa38:	mov	x25, xzr
  41aa3c:	add	x26, x22, #0x34
  41aa40:	b	41aa54 <ascii_strlower_n@plt+0x1664c>
  41aa44:	ldur	x23, [x26, #-12]
  41aa48:	ldr	w24, [x26], #16
  41aa4c:	cmp	x25, x8
  41aa50:	b.cs	41aa90 <ascii_strlower_n@plt+0x16688>  // b.hs, b.nlast
  41aa54:	ldr	x1, [x23, #8]
  41aa58:	mov	x0, x21
  41aa5c:	mov	x2, xzr
  41aa60:	bl	416750 <ascii_strlower_n@plt+0x12348>
  41aa64:	tbnz	w0, #31, 41aaac <ascii_strlower_n@plt+0x166a4>
  41aa68:	cbnz	w0, 41aa98 <ascii_strlower_n@plt+0x16690>
  41aa6c:	ldr	x8, [x22, #8]
  41aa70:	add	x25, x25, #0x1
  41aa74:	cmp	x25, x8
  41aa78:	b.cc	41aa44 <ascii_strlower_n@plt+0x1663c>  // b.lo, b.ul, b.last
  41aa7c:	mov	x23, xzr
  41aa80:	mov	w24, wzr
  41aa84:	cmp	x25, x8
  41aa88:	add	x26, x26, #0x10
  41aa8c:	b.cc	41aa54 <ascii_strlower_n@plt+0x1664c>  // b.lo, b.ul, b.last
  41aa90:	mov	w0, wzr
  41aa94:	b	41aaac <ascii_strlower_n@plt+0x166a4>
  41aa98:	cbz	x20, 41aaa0 <ascii_strlower_n@plt+0x16698>
  41aa9c:	str	x23, [x20]
  41aaa0:	cbz	x19, 41aaa8 <ascii_strlower_n@plt+0x166a0>
  41aaa4:	str	w24, [x19]
  41aaa8:	mov	w0, #0x1                   	// #1
  41aaac:	ldp	x20, x19, [sp, #64]
  41aab0:	ldp	x22, x21, [sp, #48]
  41aab4:	ldp	x24, x23, [sp, #32]
  41aab8:	ldp	x26, x25, [sp, #16]
  41aabc:	ldp	x29, x30, [sp], #80
  41aac0:	ret
  41aac4:	adrp	x1, 422000 <ascii_strlower_n@plt+0x1dbf8>
  41aac8:	adrp	x2, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41aacc:	adrp	x4, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41aad0:	add	x1, x1, #0x4fe
  41aad4:	add	x2, x2, #0x4b3
  41aad8:	add	x4, x4, #0x67c
  41aadc:	mov	w3, #0x125                 	// #293
  41aae0:	mov	w0, wzr
  41aae4:	bl	403a98 <log_assert_failed_realm@plt>
  41aae8:	stp	x29, x30, [sp, #-96]!
  41aaec:	str	x27, [sp, #16]
  41aaf0:	stp	x26, x25, [sp, #32]
  41aaf4:	stp	x24, x23, [sp, #48]
  41aaf8:	stp	x22, x21, [sp, #64]
  41aafc:	stp	x20, x19, [sp, #80]
  41ab00:	mov	x29, sp
  41ab04:	cbz	x2, 41ad0c <ascii_strlower_n@plt+0x16904>
  41ab08:	mov	x20, x2
  41ab0c:	mov	x21, x1
  41ab10:	mov	x23, x0
  41ab14:	cbz	x0, 41abc8 <ascii_strlower_n@plt+0x167c0>
  41ab18:	ldr	x8, [x23, #8]
  41ab1c:	cbz	x8, 41abc8 <ascii_strlower_n@plt+0x167c0>
  41ab20:	cbz	x21, 41abe8 <ascii_strlower_n@plt+0x167e0>
  41ab24:	ldr	x9, [x21, #8]
  41ab28:	cbz	x9, 41abe8 <ascii_strlower_n@plt+0x167e0>
  41ab2c:	add	x22, x9, x8
  41ab30:	lsl	x8, x22, #4
  41ab34:	add	x1, x8, #0x18
  41ab38:	mov	w0, #0x1                   	// #1
  41ab3c:	mov	w24, #0x1                   	// #1
  41ab40:	bl	404068 <calloc@plt>
  41ab44:	cbz	x0, 41ac20 <ascii_strlower_n@plt+0x16818>
  41ab48:	str	w24, [x0]
  41ab4c:	str	x22, [x0, #16]
  41ab50:	mov	x19, x0
  41ab54:	ldr	x0, [x23, #24]
  41ab58:	cbz	x0, 41aba4 <ascii_strlower_n@plt+0x1679c>
  41ab5c:	mov	x22, xzr
  41ab60:	add	x24, x23, #0x28
  41ab64:	ldp	x25, x8, [x19, #8]
  41ab68:	cmp	x25, x8
  41ab6c:	b.cs	41ac28 <ascii_strlower_n@plt+0x16820>  // b.hs, b.nlast
  41ab70:	ldp	w26, w27, [x24, #-8]
  41ab74:	add	x8, x25, #0x1
  41ab78:	str	x8, [x19, #8]
  41ab7c:	bl	4171c0 <ascii_strlower_n@plt+0x12db8>
  41ab80:	add	x8, x19, x25, lsl #4
  41ab84:	str	x0, [x8, #24]
  41ab88:	stp	w26, w27, [x8, #32]
  41ab8c:	ldr	x8, [x23, #8]
  41ab90:	add	x22, x22, #0x1
  41ab94:	cmp	x22, x8
  41ab98:	b.cs	41ac88 <ascii_strlower_n@plt+0x16880>  // b.hs, b.nlast
  41ab9c:	ldr	x0, [x24], #16
  41aba0:	cbnz	x0, 41ab64 <ascii_strlower_n@plt+0x1675c>
  41aba4:	adrp	x1, 422000 <ascii_strlower_n@plt+0x1dbf8>
  41aba8:	adrp	x2, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41abac:	adrp	x4, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41abb0:	add	x1, x1, #0x14e
  41abb4:	add	x2, x2, #0x4b3
  41abb8:	add	x4, x4, #0xa30
  41abbc:	mov	w3, #0x2e                  	// #46
  41abc0:	mov	w0, wzr
  41abc4:	bl	403a98 <log_assert_failed_realm@plt>
  41abc8:	cbz	x21, 41abdc <ascii_strlower_n@plt+0x167d4>
  41abcc:	ldr	w8, [x21]
  41abd0:	cbz	w8, 41ad30 <ascii_strlower_n@plt+0x16928>
  41abd4:	add	w8, w8, #0x1
  41abd8:	str	w8, [x21]
  41abdc:	mov	w22, wzr
  41abe0:	str	x21, [x20]
  41abe4:	b	41ac00 <ascii_strlower_n@plt+0x167f8>
  41abe8:	ldr	w8, [x23]
  41abec:	cbz	w8, 41ad30 <ascii_strlower_n@plt+0x16928>
  41abf0:	add	w8, w8, #0x1
  41abf4:	mov	w22, wzr
  41abf8:	str	w8, [x23]
  41abfc:	str	x23, [x20]
  41ac00:	mov	w0, w22
  41ac04:	ldp	x20, x19, [sp, #80]
  41ac08:	ldp	x22, x21, [sp, #64]
  41ac0c:	ldp	x24, x23, [sp, #48]
  41ac10:	ldp	x26, x25, [sp, #32]
  41ac14:	ldr	x27, [sp, #16]
  41ac18:	ldp	x29, x30, [sp], #96
  41ac1c:	ret
  41ac20:	mov	w22, #0xfffffff4            	// #-12
  41ac24:	b	41ac00 <ascii_strlower_n@plt+0x167f8>
  41ac28:	mov	w22, #0xffffffe4            	// #-28
  41ac2c:	ldr	w8, [x19]
  41ac30:	cbz	w8, 41ace4 <ascii_strlower_n@plt+0x168dc>
  41ac34:	subs	w8, w8, #0x1
  41ac38:	str	w8, [x19]
  41ac3c:	b.ne	41ac00 <ascii_strlower_n@plt+0x167f8>  // b.any
  41ac40:	ldr	x8, [x19, #8]
  41ac44:	cbz	x8, 41ac7c <ascii_strlower_n@plt+0x16874>
  41ac48:	ldr	x0, [x19, #24]
  41ac4c:	bl	417208 <ascii_strlower_n@plt+0x12e00>
  41ac50:	ldr	x8, [x19, #8]
  41ac54:	cmp	x8, #0x2
  41ac58:	b.cc	41ac7c <ascii_strlower_n@plt+0x16874>  // b.lo, b.ul, b.last
  41ac5c:	add	x20, x19, #0x28
  41ac60:	mov	w21, #0x1                   	// #1
  41ac64:	ldr	x0, [x20], #16
  41ac68:	bl	417208 <ascii_strlower_n@plt+0x12e00>
  41ac6c:	ldr	x8, [x19, #8]
  41ac70:	add	x21, x21, #0x1
  41ac74:	cmp	x21, x8
  41ac78:	b.cc	41ac64 <ascii_strlower_n@plt+0x1685c>  // b.lo, b.ul, b.last
  41ac7c:	mov	x0, x19
  41ac80:	bl	4039d8 <free@plt>
  41ac84:	b	41ac00 <ascii_strlower_n@plt+0x167f8>
  41ac88:	ldr	x8, [x21, #8]
  41ac8c:	cbz	x8, 41ad00 <ascii_strlower_n@plt+0x168f8>
  41ac90:	ldr	x1, [x21, #24]
  41ac94:	ldp	w2, w3, [x21, #32]
  41ac98:	mov	x0, x19
  41ac9c:	bl	41a034 <ascii_strlower_n@plt+0x15c2c>
  41aca0:	tbnz	w0, #31, 41acd8 <ascii_strlower_n@plt+0x168d0>
  41aca4:	mov	x23, xzr
  41aca8:	add	x8, x21, #0x34
  41acac:	ldr	x9, [x21, #8]
  41acb0:	add	x23, x23, #0x1
  41acb4:	cmp	x23, x9
  41acb8:	b.cs	41ad00 <ascii_strlower_n@plt+0x168f8>  // b.hs, b.nlast
  41acbc:	ldur	x1, [x8, #-12]
  41acc0:	ldp	w2, w3, [x8, #-4]
  41acc4:	mov	x0, x19
  41acc8:	add	x24, x8, #0x10
  41accc:	bl	41a034 <ascii_strlower_n@plt+0x15c2c>
  41acd0:	mov	x8, x24
  41acd4:	tbz	w0, #31, 41acac <ascii_strlower_n@plt+0x168a4>
  41acd8:	mov	w22, w0
  41acdc:	ldr	w8, [x19]
  41ace0:	cbnz	w8, 41ac34 <ascii_strlower_n@plt+0x1682c>
  41ace4:	adrp	x1, 421000 <ascii_strlower_n@plt+0x1cbf8>
  41ace8:	adrp	x2, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41acec:	adrp	x4, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41acf0:	add	x1, x1, #0xc49
  41acf4:	add	x2, x2, #0x4b3
  41acf8:	add	x4, x4, #0x4fc
  41acfc:	b	41ad48 <ascii_strlower_n@plt+0x16940>
  41ad00:	mov	w22, wzr
  41ad04:	str	x19, [x20]
  41ad08:	b	41ac00 <ascii_strlower_n@plt+0x167f8>
  41ad0c:	adrp	x1, 420000 <ascii_strlower_n@plt+0x1bbf8>
  41ad10:	adrp	x2, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41ad14:	adrp	x4, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41ad18:	add	x1, x1, #0x41e
  41ad1c:	add	x2, x2, #0x4b3
  41ad20:	add	x4, x4, #0x6ec
  41ad24:	mov	w3, #0x13f                 	// #319
  41ad28:	mov	w0, wzr
  41ad2c:	bl	403a98 <log_assert_failed_realm@plt>
  41ad30:	adrp	x1, 421000 <ascii_strlower_n@plt+0x1cbf8>
  41ad34:	adrp	x2, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41ad38:	adrp	x4, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41ad3c:	add	x1, x1, #0xc49
  41ad40:	add	x2, x2, #0x4b3
  41ad44:	add	x4, x4, #0x4d5
  41ad48:	mov	w3, #0x2b                  	// #43
  41ad4c:	mov	w0, wzr
  41ad50:	bl	403a98 <log_assert_failed_realm@plt>
  41ad54:	sub	sp, sp, #0x40
  41ad58:	stp	x29, x30, [sp, #16]
  41ad5c:	stp	x22, x21, [sp, #32]
  41ad60:	stp	x20, x19, [sp, #48]
  41ad64:	add	x29, sp, #0x10
  41ad68:	cbz	x0, 41ae00 <ascii_strlower_n@plt+0x169f8>
  41ad6c:	mov	x19, x0
  41ad70:	ldr	x0, [x0]
  41ad74:	add	x2, sp, #0x8
  41ad78:	bl	41aae8 <ascii_strlower_n@plt+0x166e0>
  41ad7c:	tbnz	w0, #31, 41adec <ascii_strlower_n@plt+0x169e4>
  41ad80:	ldr	x20, [x19]
  41ad84:	cbz	x20, 41ade0 <ascii_strlower_n@plt+0x169d8>
  41ad88:	ldr	w8, [x20]
  41ad8c:	cbz	w8, 41ae20 <ascii_strlower_n@plt+0x16a18>
  41ad90:	subs	w8, w8, #0x1
  41ad94:	str	w8, [x20]
  41ad98:	b.ne	41ade0 <ascii_strlower_n@plt+0x169d8>  // b.any
  41ad9c:	ldr	x8, [x20, #8]
  41ada0:	cbz	x8, 41add8 <ascii_strlower_n@plt+0x169d0>
  41ada4:	ldr	x0, [x20, #24]
  41ada8:	bl	417208 <ascii_strlower_n@plt+0x12e00>
  41adac:	ldr	x8, [x20, #8]
  41adb0:	cmp	x8, #0x2
  41adb4:	b.cc	41add8 <ascii_strlower_n@plt+0x169d0>  // b.lo, b.ul, b.last
  41adb8:	add	x21, x20, #0x28
  41adbc:	mov	w22, #0x1                   	// #1
  41adc0:	ldr	x0, [x21], #16
  41adc4:	bl	417208 <ascii_strlower_n@plt+0x12e00>
  41adc8:	ldr	x8, [x20, #8]
  41adcc:	add	x22, x22, #0x1
  41add0:	cmp	x22, x8
  41add4:	b.cc	41adc0 <ascii_strlower_n@plt+0x169b8>  // b.lo, b.ul, b.last
  41add8:	mov	x0, x20
  41addc:	bl	4039d8 <free@plt>
  41ade0:	ldr	x8, [sp, #8]
  41ade4:	mov	w0, wzr
  41ade8:	str	x8, [x19]
  41adec:	ldp	x20, x19, [sp, #48]
  41adf0:	ldp	x22, x21, [sp, #32]
  41adf4:	ldp	x29, x30, [sp, #16]
  41adf8:	add	sp, sp, #0x40
  41adfc:	ret
  41ae00:	adrp	x1, 422000 <ascii_strlower_n@plt+0x1dbf8>
  41ae04:	adrp	x2, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41ae08:	adrp	x4, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41ae0c:	add	x1, x1, #0xc63
  41ae10:	add	x2, x2, #0x4b3
  41ae14:	add	x4, x4, #0x729
  41ae18:	mov	w3, #0x160                 	// #352
  41ae1c:	bl	403a98 <log_assert_failed_realm@plt>
  41ae20:	adrp	x1, 421000 <ascii_strlower_n@plt+0x1cbf8>
  41ae24:	adrp	x2, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41ae28:	adrp	x4, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41ae2c:	add	x1, x1, #0xc49
  41ae30:	add	x2, x2, #0x4b3
  41ae34:	add	x4, x4, #0x4fc
  41ae38:	mov	w3, #0x2b                  	// #43
  41ae3c:	mov	w0, wzr
  41ae40:	bl	403a98 <log_assert_failed_realm@plt>
  41ae44:	sub	sp, sp, #0x60
  41ae48:	stp	x29, x30, [sp, #16]
  41ae4c:	stp	x26, x25, [sp, #32]
  41ae50:	stp	x24, x23, [sp, #48]
  41ae54:	stp	x22, x21, [sp, #64]
  41ae58:	stp	x20, x19, [sp, #80]
  41ae5c:	add	x29, sp, #0x10
  41ae60:	cbz	x0, 41b1ec <ascii_strlower_n@plt+0x16de4>
  41ae64:	mov	x20, x1
  41ae68:	cbz	x1, 41b20c <ascii_strlower_n@plt+0x16e04>
  41ae6c:	ldr	x9, [x0]
  41ae70:	mov	x19, x0
  41ae74:	cbz	x9, 41af70 <ascii_strlower_n@plt+0x16b68>
  41ae78:	ldr	x8, [x9, #8]
  41ae7c:	cbz	x8, 41ae84 <ascii_strlower_n@plt+0x16a7c>
  41ae80:	ldr	x8, [x9, #24]
  41ae84:	ldr	x9, [x9, #8]
  41ae88:	mov	w21, wzr
  41ae8c:	mov	w22, wzr
  41ae90:	mov	x24, xzr
  41ae94:	mov	w25, #0x28                  	// #40
  41ae98:	b	41aea8 <ascii_strlower_n@plt+0x16aa0>
  41ae9c:	ldr	x8, [x10, x25]
  41aea0:	add	x25, x25, #0x10
  41aea4:	cbz	x10, 41af00 <ascii_strlower_n@plt+0x16af8>
  41aea8:	cmp	x24, x9
  41aeac:	b.cs	41af00 <ascii_strlower_n@plt+0x16af8>  // b.hs, b.nlast
  41aeb0:	ldr	x0, [x8, #8]
  41aeb4:	mov	x1, x20
  41aeb8:	bl	4164bc <ascii_strlower_n@plt+0x120b4>
  41aebc:	mov	w23, w0
  41aec0:	tbnz	w0, #31, 41b16c <ascii_strlower_n@plt+0x16d64>
  41aec4:	cmp	w23, #0x0
  41aec8:	cset	w8, ne  // ne = any
  41aecc:	cset	w9, eq  // eq = none
  41aed0:	orr	w21, w21, w8
  41aed4:	orr	w22, w22, w9
  41aed8:	tbz	w21, #0, 41aee0 <ascii_strlower_n@plt+0x16ad8>
  41aedc:	tbnz	w22, #0, 41af78 <ascii_strlower_n@plt+0x16b70>
  41aee0:	ldr	x10, [x19]
  41aee4:	add	x24, x24, #0x1
  41aee8:	ldr	x9, [x10, #8]
  41aeec:	cmp	x24, x9
  41aef0:	b.cc	41ae9c <ascii_strlower_n@plt+0x16a94>  // b.lo, b.ul, b.last
  41aef4:	mov	x8, xzr
  41aef8:	add	x25, x25, #0x10
  41aefc:	cbnz	x10, 41aea8 <ascii_strlower_n@plt+0x16aa0>
  41af00:	tbz	w21, #0, 41af70 <ascii_strlower_n@plt+0x16b68>
  41af04:	ldr	x21, [x19]
  41af08:	tbnz	w22, #0, 41af7c <ascii_strlower_n@plt+0x16b74>
  41af0c:	cbz	x21, 41af68 <ascii_strlower_n@plt+0x16b60>
  41af10:	ldr	w8, [x21]
  41af14:	cbz	w8, 41b230 <ascii_strlower_n@plt+0x16e28>
  41af18:	subs	w8, w8, #0x1
  41af1c:	str	w8, [x21]
  41af20:	b.ne	41af68 <ascii_strlower_n@plt+0x16b60>  // b.any
  41af24:	ldr	x8, [x21, #8]
  41af28:	cbz	x8, 41af60 <ascii_strlower_n@plt+0x16b58>
  41af2c:	ldr	x0, [x21, #24]
  41af30:	bl	417208 <ascii_strlower_n@plt+0x12e00>
  41af34:	ldr	x8, [x21, #8]
  41af38:	cmp	x8, #0x2
  41af3c:	b.cc	41af60 <ascii_strlower_n@plt+0x16b58>  // b.lo, b.ul, b.last
  41af40:	add	x20, x21, #0x28
  41af44:	mov	w22, #0x1                   	// #1
  41af48:	ldr	x0, [x20], #16
  41af4c:	bl	417208 <ascii_strlower_n@plt+0x12e00>
  41af50:	ldr	x8, [x21, #8]
  41af54:	add	x22, x22, #0x1
  41af58:	cmp	x22, x8
  41af5c:	b.cc	41af48 <ascii_strlower_n@plt+0x16b40>  // b.lo, b.ul, b.last
  41af60:	mov	x0, x21
  41af64:	bl	4039d8 <free@plt>
  41af68:	str	xzr, [x19]
  41af6c:	b	41b168 <ascii_strlower_n@plt+0x16d60>
  41af70:	mov	w23, wzr
  41af74:	b	41b16c <ascii_strlower_n@plt+0x16d64>
  41af78:	ldr	x21, [x19]
  41af7c:	ldr	w8, [x21]
  41af80:	ldr	x23, [x21, #8]
  41af84:	cmp	w8, #0x1
  41af88:	b.ls	41afc8 <ascii_strlower_n@plt+0x16bc0>  // b.plast
  41af8c:	lsl	x8, x23, #4
  41af90:	add	x1, x8, #0x18
  41af94:	mov	w0, #0x1                   	// #1
  41af98:	mov	w24, #0x1                   	// #1
  41af9c:	bl	404068 <calloc@plt>
  41afa0:	cbz	x0, 41b064 <ascii_strlower_n@plt+0x16c5c>
  41afa4:	str	w24, [x0]
  41afa8:	str	x23, [x0, #16]
  41afac:	ldr	x8, [x21, #8]
  41afb0:	mov	x22, x0
  41afb4:	cbz	x8, 41b06c <ascii_strlower_n@plt+0x16c64>
  41afb8:	ldr	x24, [x21, #24]
  41afbc:	ldr	d0, [x21, #32]
  41afc0:	cbnz	x8, 41b078 <ascii_strlower_n@plt+0x16c70>
  41afc4:	b	41b110 <ascii_strlower_n@plt+0x16d08>
  41afc8:	cbz	x23, 41b168 <ascii_strlower_n@plt+0x16d60>
  41afcc:	mov	x22, xzr
  41afd0:	eor	x24, xzr, #0xfffffffffffffff
  41afd4:	add	x8, x21, x22, lsl #4
  41afd8:	ldr	x8, [x8, #24]
  41afdc:	mov	x1, x20
  41afe0:	ldr	x0, [x8, #8]
  41afe4:	bl	4164bc <ascii_strlower_n@plt+0x120b4>
  41afe8:	mov	w23, w0
  41afec:	tbnz	w0, #31, 41b16c <ascii_strlower_n@plt+0x16d64>
  41aff0:	cbz	w23, 41b044 <ascii_strlower_n@plt+0x16c3c>
  41aff4:	ldr	x8, [x19]
  41aff8:	lsl	x21, x22, #4
  41affc:	add	x8, x8, x21
  41b000:	ldr	x0, [x8, #24]
  41b004:	bl	417208 <ascii_strlower_n@plt+0x12e00>
  41b008:	ldr	x8, [x19]
  41b00c:	ldr	x9, [x8, #8]
  41b010:	add	x8, x8, x21
  41b014:	add	x0, x8, #0x18
  41b018:	add	x1, x8, #0x28
  41b01c:	add	x8, x9, x24
  41b020:	lsl	x2, x8, #4
  41b024:	bl	4043b8 <memmove@plt>
  41b028:	ldr	x21, [x19]
  41b02c:	ldr	x8, [x21, #8]
  41b030:	sub	x8, x8, #0x1
  41b034:	cmp	x22, x8
  41b038:	str	x8, [x21, #8]
  41b03c:	b.cc	41afd4 <ascii_strlower_n@plt+0x16bcc>  // b.lo, b.ul, b.last
  41b040:	b	41b168 <ascii_strlower_n@plt+0x16d60>
  41b044:	ldr	x21, [x19]
  41b048:	add	x22, x22, #0x1
  41b04c:	mov	w23, #0x1                   	// #1
  41b050:	ldr	x8, [x21, #8]
  41b054:	cmp	x22, x8
  41b058:	b.cs	41b16c <ascii_strlower_n@plt+0x16d64>  // b.hs, b.nlast
  41b05c:	eor	x24, x22, #0xfffffffffffffff
  41b060:	b	41afd4 <ascii_strlower_n@plt+0x16bcc>
  41b064:	mov	w23, #0xfffffff4            	// #-12
  41b068:	b	41b16c <ascii_strlower_n@plt+0x16d64>
  41b06c:	mov	x24, xzr
  41b070:	movi	v0.2d, #0x0
  41b074:	cbz	x8, 41b110 <ascii_strlower_n@plt+0x16d08>
  41b078:	mov	x25, xzr
  41b07c:	mov	x26, xzr
  41b080:	b	41b09c <ascii_strlower_n@plt+0x16c94>
  41b084:	add	x9, x21, x25
  41b088:	ldr	x24, [x9, #40]
  41b08c:	ldr	d0, [x9, #48]
  41b090:	cmp	x26, x8
  41b094:	add	x25, x25, #0x10
  41b098:	b.cs	41b110 <ascii_strlower_n@plt+0x16d08>  // b.hs, b.nlast
  41b09c:	ldr	x0, [x24, #8]
  41b0a0:	mov	x1, x20
  41b0a4:	str	q0, [sp]
  41b0a8:	bl	4164bc <ascii_strlower_n@plt+0x120b4>
  41b0ac:	mov	w23, w0
  41b0b0:	tbnz	w0, #31, 41b190 <ascii_strlower_n@plt+0x16d88>
  41b0b4:	cbnz	w23, 41b0e4 <ascii_strlower_n@plt+0x16cdc>
  41b0b8:	ldp	x21, x8, [x22, #8]
  41b0bc:	cmp	x21, x8
  41b0c0:	b.cs	41b18c <ascii_strlower_n@plt+0x16d84>  // b.hs, b.nlast
  41b0c4:	add	x8, x21, #0x1
  41b0c8:	mov	x0, x24
  41b0cc:	str	x8, [x22, #8]
  41b0d0:	bl	4171c0 <ascii_strlower_n@plt+0x12db8>
  41b0d4:	ldr	q0, [sp]
  41b0d8:	add	x8, x22, x21, lsl #4
  41b0dc:	str	x0, [x8, #24]
  41b0e0:	str	d0, [x8, #32]
  41b0e4:	ldr	x21, [x19]
  41b0e8:	add	x26, x26, #0x1
  41b0ec:	ldr	x8, [x21, #8]
  41b0f0:	cmp	x26, x8
  41b0f4:	b.cc	41b084 <ascii_strlower_n@plt+0x16c7c>  // b.lo, b.ul, b.last
  41b0f8:	cbz	x21, 41b164 <ascii_strlower_n@plt+0x16d5c>
  41b0fc:	mov	x24, xzr
  41b100:	movi	v0.2d, #0x0
  41b104:	cmp	x26, x8
  41b108:	add	x25, x25, #0x10
  41b10c:	b.cc	41b09c <ascii_strlower_n@plt+0x16c94>  // b.lo, b.ul, b.last
  41b110:	ldr	w9, [x21]
  41b114:	cbz	w9, 41b230 <ascii_strlower_n@plt+0x16e28>
  41b118:	subs	w9, w9, #0x1
  41b11c:	str	w9, [x21]
  41b120:	b.ne	41b164 <ascii_strlower_n@plt+0x16d5c>  // b.any
  41b124:	cbz	x8, 41b15c <ascii_strlower_n@plt+0x16d54>
  41b128:	ldr	x0, [x21, #24]
  41b12c:	bl	417208 <ascii_strlower_n@plt+0x12e00>
  41b130:	ldr	x8, [x21, #8]
  41b134:	cmp	x8, #0x2
  41b138:	b.cc	41b15c <ascii_strlower_n@plt+0x16d54>  // b.lo, b.ul, b.last
  41b13c:	add	x20, x21, #0x28
  41b140:	mov	w23, #0x1                   	// #1
  41b144:	ldr	x0, [x20], #16
  41b148:	bl	417208 <ascii_strlower_n@plt+0x12e00>
  41b14c:	ldr	x8, [x21, #8]
  41b150:	add	x23, x23, #0x1
  41b154:	cmp	x23, x8
  41b158:	b.cc	41b144 <ascii_strlower_n@plt+0x16d3c>  // b.lo, b.ul, b.last
  41b15c:	mov	x0, x21
  41b160:	bl	4039d8 <free@plt>
  41b164:	str	x22, [x19]
  41b168:	mov	w23, #0x1                   	// #1
  41b16c:	mov	w0, w23
  41b170:	ldp	x20, x19, [sp, #80]
  41b174:	ldp	x22, x21, [sp, #64]
  41b178:	ldp	x24, x23, [sp, #48]
  41b17c:	ldp	x26, x25, [sp, #32]
  41b180:	ldp	x29, x30, [sp, #16]
  41b184:	add	sp, sp, #0x60
  41b188:	ret
  41b18c:	mov	w23, #0xffffffe4            	// #-28
  41b190:	ldr	w8, [x22]
  41b194:	cbz	w8, 41b230 <ascii_strlower_n@plt+0x16e28>
  41b198:	subs	w8, w8, #0x1
  41b19c:	str	w8, [x22]
  41b1a0:	b.ne	41b16c <ascii_strlower_n@plt+0x16d64>  // b.any
  41b1a4:	ldr	x8, [x22, #8]
  41b1a8:	cbz	x8, 41b1e0 <ascii_strlower_n@plt+0x16dd8>
  41b1ac:	ldr	x0, [x22, #24]
  41b1b0:	bl	417208 <ascii_strlower_n@plt+0x12e00>
  41b1b4:	ldr	x8, [x22, #8]
  41b1b8:	cmp	x8, #0x2
  41b1bc:	b.cc	41b1e0 <ascii_strlower_n@plt+0x16dd8>  // b.lo, b.ul, b.last
  41b1c0:	add	x19, x22, #0x28
  41b1c4:	mov	w20, #0x1                   	// #1
  41b1c8:	ldr	x0, [x19], #16
  41b1cc:	bl	417208 <ascii_strlower_n@plt+0x12e00>
  41b1d0:	ldr	x8, [x22, #8]
  41b1d4:	add	x20, x20, #0x1
  41b1d8:	cmp	x20, x8
  41b1dc:	b.cc	41b1c8 <ascii_strlower_n@plt+0x16dc0>  // b.lo, b.ul, b.last
  41b1e0:	mov	x0, x22
  41b1e4:	bl	4039d8 <free@plt>
  41b1e8:	b	41b16c <ascii_strlower_n@plt+0x16d64>
  41b1ec:	adrp	x1, 422000 <ascii_strlower_n@plt+0x1dbf8>
  41b1f0:	adrp	x2, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41b1f4:	adrp	x4, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41b1f8:	add	x1, x1, #0xc63
  41b1fc:	add	x2, x2, #0x4b3
  41b200:	add	x4, x4, #0x75a
  41b204:	mov	w3, #0x172                 	// #370
  41b208:	bl	403a98 <log_assert_failed_realm@plt>
  41b20c:	adrp	x1, 422000 <ascii_strlower_n@plt+0x1dbf8>
  41b210:	adrp	x2, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41b214:	adrp	x4, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41b218:	add	x1, x1, #0x4fe
  41b21c:	add	x2, x2, #0x4b3
  41b220:	add	x4, x4, #0x75a
  41b224:	mov	w3, #0x173                 	// #371
  41b228:	mov	w0, wzr
  41b22c:	bl	403a98 <log_assert_failed_realm@plt>
  41b230:	adrp	x1, 421000 <ascii_strlower_n@plt+0x1cbf8>
  41b234:	adrp	x2, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41b238:	adrp	x4, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41b23c:	add	x1, x1, #0xc49
  41b240:	add	x2, x2, #0x4b3
  41b244:	add	x4, x4, #0x4fc
  41b248:	mov	w3, #0x2b                  	// #43
  41b24c:	mov	w0, wzr
  41b250:	bl	403a98 <log_assert_failed_realm@plt>
  41b254:	sub	sp, sp, #0x60
  41b258:	stp	x29, x30, [sp, #16]
  41b25c:	stp	x26, x25, [sp, #32]
  41b260:	stp	x24, x23, [sp, #48]
  41b264:	stp	x22, x21, [sp, #64]
  41b268:	stp	x20, x19, [sp, #80]
  41b26c:	add	x29, sp, #0x10
  41b270:	cbz	x0, 41b600 <ascii_strlower_n@plt+0x171f8>
  41b274:	mov	x20, x1
  41b278:	cbz	x1, 41b620 <ascii_strlower_n@plt+0x17218>
  41b27c:	ldr	x8, [x0]
  41b280:	mov	x19, x0
  41b284:	cbz	x8, 41b384 <ascii_strlower_n@plt+0x16f7c>
  41b288:	ldr	x9, [x8, #8]
  41b28c:	cbz	x9, 41b298 <ascii_strlower_n@plt+0x16e90>
  41b290:	ldr	x0, [x8, #24]
  41b294:	b	41b29c <ascii_strlower_n@plt+0x16e94>
  41b298:	mov	x0, xzr
  41b29c:	ldr	x8, [x8, #8]
  41b2a0:	mov	w21, wzr
  41b2a4:	mov	w22, wzr
  41b2a8:	mov	x24, xzr
  41b2ac:	mov	w25, #0x28                  	// #40
  41b2b0:	b	41b2c0 <ascii_strlower_n@plt+0x16eb8>
  41b2b4:	ldr	x0, [x9, x25]
  41b2b8:	add	x25, x25, #0x10
  41b2bc:	cbz	x9, 41b314 <ascii_strlower_n@plt+0x16f0c>
  41b2c0:	cmp	x24, x8
  41b2c4:	b.cs	41b314 <ascii_strlower_n@plt+0x16f0c>  // b.hs, b.nlast
  41b2c8:	mov	x1, x20
  41b2cc:	bl	417d7c <ascii_strlower_n@plt+0x13974>
  41b2d0:	mov	w23, w0
  41b2d4:	tbnz	w0, #31, 41b580 <ascii_strlower_n@plt+0x17178>
  41b2d8:	cmp	w23, #0x0
  41b2dc:	cset	w8, ne  // ne = any
  41b2e0:	cset	w9, eq  // eq = none
  41b2e4:	orr	w21, w21, w8
  41b2e8:	orr	w22, w22, w9
  41b2ec:	tbz	w21, #0, 41b2f4 <ascii_strlower_n@plt+0x16eec>
  41b2f0:	tbnz	w22, #0, 41b38c <ascii_strlower_n@plt+0x16f84>
  41b2f4:	ldr	x9, [x19]
  41b2f8:	add	x24, x24, #0x1
  41b2fc:	ldr	x8, [x9, #8]
  41b300:	cmp	x24, x8
  41b304:	b.cc	41b2b4 <ascii_strlower_n@plt+0x16eac>  // b.lo, b.ul, b.last
  41b308:	mov	x0, xzr
  41b30c:	add	x25, x25, #0x10
  41b310:	cbnz	x9, 41b2c0 <ascii_strlower_n@plt+0x16eb8>
  41b314:	tbz	w21, #0, 41b384 <ascii_strlower_n@plt+0x16f7c>
  41b318:	ldr	x21, [x19]
  41b31c:	tbnz	w22, #0, 41b390 <ascii_strlower_n@plt+0x16f88>
  41b320:	cbz	x21, 41b37c <ascii_strlower_n@plt+0x16f74>
  41b324:	ldr	w8, [x21]
  41b328:	cbz	w8, 41b668 <ascii_strlower_n@plt+0x17260>
  41b32c:	subs	w8, w8, #0x1
  41b330:	str	w8, [x21]
  41b334:	b.ne	41b37c <ascii_strlower_n@plt+0x16f74>  // b.any
  41b338:	ldr	x8, [x21, #8]
  41b33c:	cbz	x8, 41b374 <ascii_strlower_n@plt+0x16f6c>
  41b340:	ldr	x0, [x21, #24]
  41b344:	bl	417208 <ascii_strlower_n@plt+0x12e00>
  41b348:	ldr	x8, [x21, #8]
  41b34c:	cmp	x8, #0x2
  41b350:	b.cc	41b374 <ascii_strlower_n@plt+0x16f6c>  // b.lo, b.ul, b.last
  41b354:	add	x20, x21, #0x28
  41b358:	mov	w22, #0x1                   	// #1
  41b35c:	ldr	x0, [x20], #16
  41b360:	bl	417208 <ascii_strlower_n@plt+0x12e00>
  41b364:	ldr	x8, [x21, #8]
  41b368:	add	x22, x22, #0x1
  41b36c:	cmp	x22, x8
  41b370:	b.cc	41b35c <ascii_strlower_n@plt+0x16f54>  // b.lo, b.ul, b.last
  41b374:	mov	x0, x21
  41b378:	bl	4039d8 <free@plt>
  41b37c:	str	xzr, [x19]
  41b380:	b	41b57c <ascii_strlower_n@plt+0x17174>
  41b384:	mov	w23, wzr
  41b388:	b	41b580 <ascii_strlower_n@plt+0x17178>
  41b38c:	ldr	x21, [x19]
  41b390:	ldr	w8, [x21]
  41b394:	ldr	x23, [x21, #8]
  41b398:	cmp	w8, #0x1
  41b39c:	b.ls	41b3dc <ascii_strlower_n@plt+0x16fd4>  // b.plast
  41b3a0:	lsl	x8, x23, #4
  41b3a4:	add	x1, x8, #0x18
  41b3a8:	mov	w0, #0x1                   	// #1
  41b3ac:	mov	w24, #0x1                   	// #1
  41b3b0:	bl	404068 <calloc@plt>
  41b3b4:	cbz	x0, 41b474 <ascii_strlower_n@plt+0x1706c>
  41b3b8:	str	w24, [x0]
  41b3bc:	str	x23, [x0, #16]
  41b3c0:	ldr	x8, [x21, #8]
  41b3c4:	mov	x22, x0
  41b3c8:	cbz	x8, 41b47c <ascii_strlower_n@plt+0x17074>
  41b3cc:	ldr	x24, [x21, #24]
  41b3d0:	ldr	d0, [x21, #32]
  41b3d4:	cbnz	x8, 41b488 <ascii_strlower_n@plt+0x17080>
  41b3d8:	b	41b524 <ascii_strlower_n@plt+0x1711c>
  41b3dc:	cbz	x23, 41b57c <ascii_strlower_n@plt+0x17174>
  41b3e0:	mov	x22, xzr
  41b3e4:	eor	x24, xzr, #0xfffffffffffffff
  41b3e8:	add	x8, x21, x22, lsl #4
  41b3ec:	ldr	x0, [x8, #24]
  41b3f0:	mov	x1, x20
  41b3f4:	bl	417d7c <ascii_strlower_n@plt+0x13974>
  41b3f8:	mov	w23, w0
  41b3fc:	tbnz	w0, #31, 41b580 <ascii_strlower_n@plt+0x17178>
  41b400:	cbz	w23, 41b454 <ascii_strlower_n@plt+0x1704c>
  41b404:	ldr	x8, [x19]
  41b408:	lsl	x21, x22, #4
  41b40c:	add	x8, x8, x21
  41b410:	ldr	x0, [x8, #24]
  41b414:	bl	417208 <ascii_strlower_n@plt+0x12e00>
  41b418:	ldr	x8, [x19]
  41b41c:	ldr	x9, [x8, #8]
  41b420:	add	x8, x8, x21
  41b424:	add	x0, x8, #0x18
  41b428:	add	x1, x8, #0x28
  41b42c:	add	x8, x9, x24
  41b430:	lsl	x2, x8, #4
  41b434:	bl	4043b8 <memmove@plt>
  41b438:	ldr	x21, [x19]
  41b43c:	ldr	x8, [x21, #8]
  41b440:	sub	x8, x8, #0x1
  41b444:	cmp	x22, x8
  41b448:	str	x8, [x21, #8]
  41b44c:	b.cc	41b3e8 <ascii_strlower_n@plt+0x16fe0>  // b.lo, b.ul, b.last
  41b450:	b	41b57c <ascii_strlower_n@plt+0x17174>
  41b454:	ldr	x21, [x19]
  41b458:	add	x22, x22, #0x1
  41b45c:	mov	w23, #0x1                   	// #1
  41b460:	ldr	x8, [x21, #8]
  41b464:	cmp	x22, x8
  41b468:	b.cs	41b580 <ascii_strlower_n@plt+0x17178>  // b.hs, b.nlast
  41b46c:	eor	x24, x22, #0xfffffffffffffff
  41b470:	b	41b3e8 <ascii_strlower_n@plt+0x16fe0>
  41b474:	mov	w23, #0xfffffff4            	// #-12
  41b478:	b	41b580 <ascii_strlower_n@plt+0x17178>
  41b47c:	mov	x24, xzr
  41b480:	movi	v0.2d, #0x0
  41b484:	cbz	x8, 41b524 <ascii_strlower_n@plt+0x1711c>
  41b488:	mov	x25, xzr
  41b48c:	mov	x26, xzr
  41b490:	b	41b4ac <ascii_strlower_n@plt+0x170a4>
  41b494:	add	x9, x21, x25
  41b498:	ldr	x24, [x9, #40]
  41b49c:	ldr	d0, [x9, #48]
  41b4a0:	cmp	x26, x8
  41b4a4:	add	x25, x25, #0x10
  41b4a8:	b.cs	41b524 <ascii_strlower_n@plt+0x1711c>  // b.hs, b.nlast
  41b4ac:	mov	x0, x24
  41b4b0:	mov	x1, x20
  41b4b4:	str	q0, [sp]
  41b4b8:	bl	417d7c <ascii_strlower_n@plt+0x13974>
  41b4bc:	mov	w23, w0
  41b4c0:	tbnz	w0, #31, 41b5a4 <ascii_strlower_n@plt+0x1719c>
  41b4c4:	cbnz	w23, 41b4f8 <ascii_strlower_n@plt+0x170f0>
  41b4c8:	cbz	x24, 41b644 <ascii_strlower_n@plt+0x1723c>
  41b4cc:	ldp	x21, x8, [x22, #8]
  41b4d0:	cmp	x21, x8
  41b4d4:	b.cs	41b5a0 <ascii_strlower_n@plt+0x17198>  // b.hs, b.nlast
  41b4d8:	add	x8, x21, #0x1
  41b4dc:	mov	x0, x24
  41b4e0:	str	x8, [x22, #8]
  41b4e4:	bl	4171c0 <ascii_strlower_n@plt+0x12db8>
  41b4e8:	ldr	q0, [sp]
  41b4ec:	add	x8, x22, x21, lsl #4
  41b4f0:	str	x0, [x8, #24]
  41b4f4:	str	d0, [x8, #32]
  41b4f8:	ldr	x21, [x19]
  41b4fc:	add	x26, x26, #0x1
  41b500:	ldr	x8, [x21, #8]
  41b504:	cmp	x26, x8
  41b508:	b.cc	41b494 <ascii_strlower_n@plt+0x1708c>  // b.lo, b.ul, b.last
  41b50c:	cbz	x21, 41b578 <ascii_strlower_n@plt+0x17170>
  41b510:	mov	x24, xzr
  41b514:	movi	v0.2d, #0x0
  41b518:	cmp	x26, x8
  41b51c:	add	x25, x25, #0x10
  41b520:	b.cc	41b4ac <ascii_strlower_n@plt+0x170a4>  // b.lo, b.ul, b.last
  41b524:	ldr	w9, [x21]
  41b528:	cbz	w9, 41b668 <ascii_strlower_n@plt+0x17260>
  41b52c:	subs	w9, w9, #0x1
  41b530:	str	w9, [x21]
  41b534:	b.ne	41b578 <ascii_strlower_n@plt+0x17170>  // b.any
  41b538:	cbz	x8, 41b570 <ascii_strlower_n@plt+0x17168>
  41b53c:	ldr	x0, [x21, #24]
  41b540:	bl	417208 <ascii_strlower_n@plt+0x12e00>
  41b544:	ldr	x8, [x21, #8]
  41b548:	cmp	x8, #0x2
  41b54c:	b.cc	41b570 <ascii_strlower_n@plt+0x17168>  // b.lo, b.ul, b.last
  41b550:	add	x20, x21, #0x28
  41b554:	mov	w23, #0x1                   	// #1
  41b558:	ldr	x0, [x20], #16
  41b55c:	bl	417208 <ascii_strlower_n@plt+0x12e00>
  41b560:	ldr	x8, [x21, #8]
  41b564:	add	x23, x23, #0x1
  41b568:	cmp	x23, x8
  41b56c:	b.cc	41b558 <ascii_strlower_n@plt+0x17150>  // b.lo, b.ul, b.last
  41b570:	mov	x0, x21
  41b574:	bl	4039d8 <free@plt>
  41b578:	str	x22, [x19]
  41b57c:	mov	w23, #0x1                   	// #1
  41b580:	mov	w0, w23
  41b584:	ldp	x20, x19, [sp, #80]
  41b588:	ldp	x22, x21, [sp, #64]
  41b58c:	ldp	x24, x23, [sp, #48]
  41b590:	ldp	x26, x25, [sp, #32]
  41b594:	ldp	x29, x30, [sp, #16]
  41b598:	add	sp, sp, #0x60
  41b59c:	ret
  41b5a0:	mov	w23, #0xffffffe4            	// #-28
  41b5a4:	ldr	w8, [x22]
  41b5a8:	cbz	w8, 41b668 <ascii_strlower_n@plt+0x17260>
  41b5ac:	subs	w8, w8, #0x1
  41b5b0:	str	w8, [x22]
  41b5b4:	b.ne	41b580 <ascii_strlower_n@plt+0x17178>  // b.any
  41b5b8:	ldr	x8, [x22, #8]
  41b5bc:	cbz	x8, 41b5f4 <ascii_strlower_n@plt+0x171ec>
  41b5c0:	ldr	x0, [x22, #24]
  41b5c4:	bl	417208 <ascii_strlower_n@plt+0x12e00>
  41b5c8:	ldr	x8, [x22, #8]
  41b5cc:	cmp	x8, #0x2
  41b5d0:	b.cc	41b5f4 <ascii_strlower_n@plt+0x171ec>  // b.lo, b.ul, b.last
  41b5d4:	add	x19, x22, #0x28
  41b5d8:	mov	w20, #0x1                   	// #1
  41b5dc:	ldr	x0, [x19], #16
  41b5e0:	bl	417208 <ascii_strlower_n@plt+0x12e00>
  41b5e4:	ldr	x8, [x22, #8]
  41b5e8:	add	x20, x20, #0x1
  41b5ec:	cmp	x20, x8
  41b5f0:	b.cc	41b5dc <ascii_strlower_n@plt+0x171d4>  // b.lo, b.ul, b.last
  41b5f4:	mov	x0, x22
  41b5f8:	bl	4039d8 <free@plt>
  41b5fc:	b	41b580 <ascii_strlower_n@plt+0x17178>
  41b600:	adrp	x1, 422000 <ascii_strlower_n@plt+0x1dbf8>
  41b604:	adrp	x2, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41b608:	adrp	x4, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41b60c:	add	x1, x1, #0xc63
  41b610:	add	x2, x2, #0x4b3
  41b614:	add	x4, x4, #0x79d
  41b618:	mov	w3, #0x1c7                 	// #455
  41b61c:	bl	403a98 <log_assert_failed_realm@plt>
  41b620:	adrp	x1, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41b624:	adrp	x2, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41b628:	adrp	x4, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41b62c:	add	x1, x1, #0x7dc
  41b630:	add	x2, x2, #0x4b3
  41b634:	add	x4, x4, #0x79d
  41b638:	mov	w3, #0x1c8                 	// #456
  41b63c:	mov	w0, wzr
  41b640:	bl	403a98 <log_assert_failed_realm@plt>
  41b644:	adrp	x1, 422000 <ascii_strlower_n@plt+0x1dbf8>
  41b648:	adrp	x2, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41b64c:	adrp	x4, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41b650:	add	x1, x1, #0x14e
  41b654:	add	x2, x2, #0x4b3
  41b658:	add	x4, x4, #0xa30
  41b65c:	mov	w3, #0x2e                  	// #46
  41b660:	mov	w0, wzr
  41b664:	bl	403a98 <log_assert_failed_realm@plt>
  41b668:	adrp	x1, 421000 <ascii_strlower_n@plt+0x1cbf8>
  41b66c:	adrp	x2, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41b670:	adrp	x4, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41b674:	add	x1, x1, #0xc49
  41b678:	add	x2, x2, #0x4b3
  41b67c:	add	x4, x4, #0x4fc
  41b680:	mov	w3, #0x2b                  	// #43
  41b684:	mov	w0, wzr
  41b688:	bl	403a98 <log_assert_failed_realm@plt>
  41b68c:	stp	x29, x30, [sp, #-96]!
  41b690:	str	x27, [sp, #16]
  41b694:	stp	x26, x25, [sp, #32]
  41b698:	stp	x24, x23, [sp, #48]
  41b69c:	stp	x22, x21, [sp, #64]
  41b6a0:	stp	x20, x19, [sp, #80]
  41b6a4:	mov	x29, sp
  41b6a8:	cbz	x0, 41b798 <ascii_strlower_n@plt+0x17390>
  41b6ac:	mov	x20, x2
  41b6b0:	cbz	x2, 41b7b8 <ascii_strlower_n@plt+0x173b0>
  41b6b4:	mov	x21, x1
  41b6b8:	cbz	x1, 41b778 <ascii_strlower_n@plt+0x17370>
  41b6bc:	ldr	x8, [x21, #8]
  41b6c0:	mov	w19, w3
  41b6c4:	mov	x22, x0
  41b6c8:	cbz	x8, 41b6e0 <ascii_strlower_n@plt+0x172d8>
  41b6cc:	ldr	x23, [x21, #24]
  41b6d0:	ldp	w24, w27, [x21, #32]
  41b6d4:	ldr	x8, [x21, #8]
  41b6d8:	cbnz	x8, 41b6f4 <ascii_strlower_n@plt+0x172ec>
  41b6dc:	b	41b778 <ascii_strlower_n@plt+0x17370>
  41b6e0:	mov	w24, wzr
  41b6e4:	mov	x23, xzr
  41b6e8:	mov	w27, wzr
  41b6ec:	ldr	x8, [x21, #8]
  41b6f0:	cbz	x8, 41b778 <ascii_strlower_n@plt+0x17370>
  41b6f4:	mov	x25, xzr
  41b6f8:	add	x26, x21, #0x34
  41b6fc:	b	41b714 <ascii_strlower_n@plt+0x1730c>
  41b700:	ldur	x23, [x26, #-12]
  41b704:	ldp	w24, w27, [x26, #-4]
  41b708:	cmp	x25, x8
  41b70c:	add	x26, x26, #0x10
  41b710:	b.cs	41b778 <ascii_strlower_n@plt+0x17370>  // b.hs, b.nlast
  41b714:	ldr	x0, [x23, #8]
  41b718:	mov	x1, x20
  41b71c:	bl	4164bc <ascii_strlower_n@plt+0x120b4>
  41b720:	tbnz	w0, #31, 41b77c <ascii_strlower_n@plt+0x17374>
  41b724:	cbz	w0, 41b750 <ascii_strlower_n@plt+0x17348>
  41b728:	mov	w1, #0x1                   	// #1
  41b72c:	mov	x0, x22
  41b730:	bl	41a258 <ascii_strlower_n@plt+0x15e50>
  41b734:	tbnz	w0, #31, 41b77c <ascii_strlower_n@plt+0x17374>
  41b738:	ldr	x0, [x22]
  41b73c:	orr	w3, w27, w19
  41b740:	mov	x1, x23
  41b744:	mov	w2, w24
  41b748:	bl	41a034 <ascii_strlower_n@plt+0x15c2c>
  41b74c:	tbnz	w0, #31, 41b77c <ascii_strlower_n@plt+0x17374>
  41b750:	ldr	x8, [x21, #8]
  41b754:	add	x25, x25, #0x1
  41b758:	cmp	x25, x8
  41b75c:	b.cc	41b700 <ascii_strlower_n@plt+0x172f8>  // b.lo, b.ul, b.last
  41b760:	mov	w24, wzr
  41b764:	mov	x23, xzr
  41b768:	mov	w27, wzr
  41b76c:	cmp	x25, x8
  41b770:	add	x26, x26, #0x10
  41b774:	b.cc	41b714 <ascii_strlower_n@plt+0x1730c>  // b.lo, b.ul, b.last
  41b778:	mov	w0, wzr
  41b77c:	ldp	x20, x19, [sp, #80]
  41b780:	ldp	x22, x21, [sp, #64]
  41b784:	ldp	x24, x23, [sp, #48]
  41b788:	ldp	x26, x25, [sp, #32]
  41b78c:	ldr	x27, [sp, #16]
  41b790:	ldp	x29, x30, [sp], #96
  41b794:	ret
  41b798:	adrp	x1, 422000 <ascii_strlower_n@plt+0x1dbf8>
  41b79c:	adrp	x2, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41b7a0:	adrp	x4, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41b7a4:	add	x1, x1, #0xc63
  41b7a8:	add	x2, x2, #0x4b3
  41b7ac:	add	x4, x4, #0x7df
  41b7b0:	mov	w3, #0x21b                 	// #539
  41b7b4:	bl	403a98 <log_assert_failed_realm@plt>
  41b7b8:	adrp	x1, 422000 <ascii_strlower_n@plt+0x1dbf8>
  41b7bc:	adrp	x2, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41b7c0:	adrp	x4, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41b7c4:	add	x1, x1, #0x4fe
  41b7c8:	add	x2, x2, #0x4b3
  41b7cc:	add	x4, x4, #0x7df
  41b7d0:	mov	w3, #0x21c                 	// #540
  41b7d4:	mov	w0, wzr
  41b7d8:	bl	403a98 <log_assert_failed_realm@plt>
  41b7dc:	stp	x29, x30, [sp, #-96]!
  41b7e0:	stp	x28, x27, [sp, #16]
  41b7e4:	stp	x26, x25, [sp, #32]
  41b7e8:	stp	x24, x23, [sp, #48]
  41b7ec:	stp	x22, x21, [sp, #64]
  41b7f0:	stp	x20, x19, [sp, #80]
  41b7f4:	mov	x29, sp
  41b7f8:	cbz	x0, 41b8dc <ascii_strlower_n@plt+0x174d4>
  41b7fc:	mov	x21, x1
  41b800:	cbz	x1, 41b8fc <ascii_strlower_n@plt+0x174f4>
  41b804:	mov	x19, x2
  41b808:	cbz	x2, 41b920 <ascii_strlower_n@plt+0x17518>
  41b80c:	ldr	x25, [x21]
  41b810:	cbz	x25, 41b8b8 <ascii_strlower_n@plt+0x174b0>
  41b814:	ldr	x8, [x25, #8]
  41b818:	cbz	x8, 41b8b8 <ascii_strlower_n@plt+0x174b0>
  41b81c:	ldr	x23, [x25, #24]
  41b820:	mov	x22, x0
  41b824:	ldp	w24, w28, [x25, #32]
  41b828:	mov	x1, x19
  41b82c:	ldr	x0, [x23, #8]
  41b830:	mov	w20, w3
  41b834:	bl	4164bc <ascii_strlower_n@plt+0x120b4>
  41b838:	tbnz	w0, #31, 41b89c <ascii_strlower_n@plt+0x17494>
  41b83c:	mov	x26, xzr
  41b840:	add	x27, x25, #0x34
  41b844:	cbz	w0, 41b870 <ascii_strlower_n@plt+0x17468>
  41b848:	mov	w1, #0x1                   	// #1
  41b84c:	mov	x0, x22
  41b850:	bl	41a258 <ascii_strlower_n@plt+0x15e50>
  41b854:	tbnz	w0, #31, 41b89c <ascii_strlower_n@plt+0x17494>
  41b858:	ldr	x0, [x22]
  41b85c:	orr	w3, w28, w20
  41b860:	mov	x1, x23
  41b864:	mov	w2, w24
  41b868:	bl	41a034 <ascii_strlower_n@plt+0x15c2c>
  41b86c:	tbnz	w0, #31, 41b89c <ascii_strlower_n@plt+0x17494>
  41b870:	ldr	x8, [x25, #8]
  41b874:	add	x26, x26, #0x1
  41b878:	cmp	x26, x8
  41b87c:	b.cs	41b8b8 <ascii_strlower_n@plt+0x174b0>  // b.hs, b.nlast
  41b880:	ldur	x23, [x27, #-12]
  41b884:	ldp	w24, w28, [x27, #-4]
  41b888:	mov	x1, x19
  41b88c:	add	x27, x27, #0x10
  41b890:	ldr	x0, [x23, #8]
  41b894:	bl	4164bc <ascii_strlower_n@plt+0x120b4>
  41b898:	tbz	w0, #31, 41b844 <ascii_strlower_n@plt+0x1743c>
  41b89c:	ldp	x20, x19, [sp, #80]
  41b8a0:	ldp	x22, x21, [sp, #64]
  41b8a4:	ldp	x24, x23, [sp, #48]
  41b8a8:	ldp	x26, x25, [sp, #32]
  41b8ac:	ldp	x28, x27, [sp, #16]
  41b8b0:	ldp	x29, x30, [sp], #96
  41b8b4:	ret
  41b8b8:	mov	x0, x21
  41b8bc:	mov	x1, x19
  41b8c0:	ldp	x20, x19, [sp, #80]
  41b8c4:	ldp	x22, x21, [sp, #64]
  41b8c8:	ldp	x24, x23, [sp, #48]
  41b8cc:	ldp	x26, x25, [sp, #32]
  41b8d0:	ldp	x28, x27, [sp, #16]
  41b8d4:	ldp	x29, x30, [sp], #96
  41b8d8:	b	41ae44 <ascii_strlower_n@plt+0x16a3c>
  41b8dc:	adrp	x1, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41b8e0:	adrp	x2, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41b8e4:	adrp	x4, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41b8e8:	add	x1, x1, #0x83d
  41b8ec:	add	x2, x2, #0x4b3
  41b8f0:	add	x4, x4, #0x840
  41b8f4:	mov	w3, #0x238                 	// #568
  41b8f8:	bl	403a98 <log_assert_failed_realm@plt>
  41b8fc:	adrp	x1, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41b900:	adrp	x2, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41b904:	adrp	x4, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41b908:	add	x1, x1, #0x89f
  41b90c:	add	x2, x2, #0x4b3
  41b910:	add	x4, x4, #0x840
  41b914:	mov	w3, #0x239                 	// #569
  41b918:	mov	w0, wzr
  41b91c:	bl	403a98 <log_assert_failed_realm@plt>
  41b920:	adrp	x1, 422000 <ascii_strlower_n@plt+0x1dbf8>
  41b924:	adrp	x2, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41b928:	adrp	x4, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41b92c:	add	x1, x1, #0x4fe
  41b930:	add	x2, x2, #0x4b3
  41b934:	add	x4, x4, #0x840
  41b938:	mov	w3, #0x23a                 	// #570
  41b93c:	mov	w0, wzr
  41b940:	bl	403a98 <log_assert_failed_realm@plt>
  41b944:	stp	x29, x30, [sp, #-80]!
  41b948:	str	x25, [sp, #16]
  41b94c:	stp	x24, x23, [sp, #32]
  41b950:	stp	x22, x21, [sp, #48]
  41b954:	stp	x20, x19, [sp, #64]
  41b958:	mov	x29, sp
  41b95c:	cbz	x0, 41ba50 <ascii_strlower_n@plt+0x17648>
  41b960:	ldr	x8, [x0, #8]
  41b964:	mov	x19, x0
  41b968:	cmp	x8, #0x2
  41b96c:	b.cc	41ba50 <ascii_strlower_n@plt+0x17648>  // b.lo, b.ul, b.last
  41b970:	lsr	x9, x8, #60
  41b974:	cbnz	x9, 41ba6c <ascii_strlower_n@plt+0x17664>
  41b978:	cmp	x8, #0x40, lsl #12
  41b97c:	b.hi	41ba78 <ascii_strlower_n@plt+0x17670>  // b.pmore
  41b980:	mov	x9, sp
  41b984:	sub	x21, x8, #0x1
  41b988:	sub	x20, x9, x8, lsl #4
  41b98c:	mov	sp, x20
  41b990:	mov	x22, xzr
  41b994:	mov	x23, xzr
  41b998:	and	w24, w1, #0x1
  41b99c:	add	x25, x19, #0x18
  41b9a0:	b	41b9c8 <ascii_strlower_n@plt+0x175c0>
  41b9a4:	add	x9, x23, #0x1
  41b9a8:	mov	x8, x23
  41b9ac:	mov	x23, x9
  41b9b0:	ldr	q0, [x25], #16
  41b9b4:	add	x22, x22, #0x1
  41b9b8:	str	q0, [x20, x8, lsl #4]
  41b9bc:	ldr	x8, [x19, #8]
  41b9c0:	cmp	x22, x8
  41b9c4:	b.cs	41ba34 <ascii_strlower_n@plt+0x1762c>  // b.hs, b.nlast
  41b9c8:	ldr	x8, [x25]
  41b9cc:	ldr	x9, [x8, #8]
  41b9d0:	ldrh	w10, [x9, #4]
  41b9d4:	cmp	w10, #0x1
  41b9d8:	b.ne	41b9a4 <ascii_strlower_n@plt+0x1759c>  // b.any
  41b9dc:	ldrh	w9, [x9, #6]
  41b9e0:	cmp	w9, #0x1
  41b9e4:	b.ne	41ba08 <ascii_strlower_n@plt+0x17600>  // b.any
  41b9e8:	add	x1, x8, #0x50
  41b9ec:	mov	w0, #0x2                   	// #2
  41b9f0:	bl	4043c8 <in_addr_is_link_local@plt>
  41b9f4:	cmp	w0, w24
  41b9f8:	b.ne	41ba24 <ascii_strlower_n@plt+0x1761c>  // b.any
  41b9fc:	ldr	x8, [x25]
  41ba00:	ldr	x9, [x8, #8]
  41ba04:	ldrh	w9, [x9, #6]
  41ba08:	cmp	w9, #0x1c
  41ba0c:	b.ne	41b9a4 <ascii_strlower_n@plt+0x1759c>  // b.any
  41ba10:	add	x1, x8, #0x50
  41ba14:	mov	w0, #0xa                   	// #10
  41ba18:	bl	4043c8 <in_addr_is_link_local@plt>
  41ba1c:	cmp	w0, w24
  41ba20:	b.eq	41b9a4 <ascii_strlower_n@plt+0x1759c>  // b.none
  41ba24:	sub	x9, x21, #0x1
  41ba28:	mov	x8, x21
  41ba2c:	mov	x21, x9
  41ba30:	b	41b9b0 <ascii_strlower_n@plt+0x175a8>
  41ba34:	add	x9, x21, #0x1
  41ba38:	cmp	x23, x9
  41ba3c:	b.ne	41ba9c <ascii_strlower_n@plt+0x17694>  // b.any
  41ba40:	lsl	x2, x8, #4
  41ba44:	add	x0, x19, #0x18
  41ba48:	mov	x1, x20
  41ba4c:	bl	403c68 <memcpy@plt>
  41ba50:	mov	sp, x29
  41ba54:	ldp	x20, x19, [sp, #64]
  41ba58:	ldp	x22, x21, [sp, #48]
  41ba5c:	ldp	x24, x23, [sp, #32]
  41ba60:	ldr	x25, [sp, #16]
  41ba64:	ldp	x29, x30, [sp], #80
  41ba68:	ret
  41ba6c:	adrp	x1, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41ba70:	add	x1, x1, #0x8a4
  41ba74:	b	41ba80 <ascii_strlower_n@plt+0x17678>
  41ba78:	adrp	x1, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41ba7c:	add	x1, x1, #0x90b
  41ba80:	adrp	x2, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41ba84:	adrp	x4, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41ba88:	add	x2, x2, #0x4b3
  41ba8c:	add	x4, x4, #0x8d8
  41ba90:	mov	w3, #0x253                 	// #595
  41ba94:	mov	w0, wzr
  41ba98:	bl	403a98 <log_assert_failed_realm@plt>
  41ba9c:	adrp	x1, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41baa0:	adrp	x2, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41baa4:	adrp	x4, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41baa8:	add	x1, x1, #0x933
  41baac:	add	x2, x2, #0x4b3
  41bab0:	add	x4, x4, #0x8d8
  41bab4:	mov	w3, #0x260                 	// #608
  41bab8:	mov	w0, wzr
  41babc:	bl	403a98 <log_assert_failed_realm@plt>
  41bac0:	stp	x29, x30, [sp, #-48]!
  41bac4:	str	x21, [sp, #16]
  41bac8:	stp	x20, x19, [sp, #32]
  41bacc:	mov	x29, sp
  41bad0:	cbz	x0, 41bb98 <ascii_strlower_n@plt+0x17790>
  41bad4:	mov	x20, x1
  41bad8:	cbz	x1, 41bb70 <ascii_strlower_n@plt+0x17768>
  41badc:	mov	x19, x0
  41bae0:	ldr	x0, [x0]
  41bae4:	cbz	x0, 41bb08 <ascii_strlower_n@plt+0x17700>
  41bae8:	ldr	w8, [x0]
  41baec:	cmp	w8, #0x1
  41baf0:	b.ls	41bb2c <ascii_strlower_n@plt+0x17724>  // b.plast
  41baf4:	mov	w0, #0xfffffff0            	// #-16
  41baf8:	ldp	x20, x19, [sp, #32]
  41bafc:	ldr	x21, [sp, #16]
  41bb00:	ldp	x29, x30, [sp], #48
  41bb04:	ret
  41bb08:	lsl	x8, x20, #4
  41bb0c:	add	x1, x8, #0x18
  41bb10:	mov	w0, #0x1                   	// #1
  41bb14:	mov	w21, #0x1                   	// #1
  41bb18:	bl	404068 <calloc@plt>
  41bb1c:	cbz	x0, 41bb84 <ascii_strlower_n@plt+0x1777c>
  41bb20:	mov	x8, x0
  41bb24:	str	w21, [x0]
  41bb28:	b	41bb54 <ascii_strlower_n@plt+0x1774c>
  41bb2c:	ldp	x8, x9, [x0, #8]
  41bb30:	add	x20, x8, x20
  41bb34:	cmp	x9, x20
  41bb38:	b.cs	41bb70 <ascii_strlower_n@plt+0x17768>  // b.hs, b.nlast
  41bb3c:	mov	w1, #0x18                  	// #24
  41bb40:	bfi	x1, x20, #5, #59
  41bb44:	bl	4040b8 <realloc@plt>
  41bb48:	cbz	x0, 41bb84 <ascii_strlower_n@plt+0x1777c>
  41bb4c:	mov	x8, x0
  41bb50:	lsl	x20, x20, #1
  41bb54:	mov	w0, wzr
  41bb58:	str	x20, [x8, #16]
  41bb5c:	str	x8, [x19]
  41bb60:	ldp	x20, x19, [sp, #32]
  41bb64:	ldr	x21, [sp, #16]
  41bb68:	ldp	x29, x30, [sp], #48
  41bb6c:	ret
  41bb70:	mov	w0, wzr
  41bb74:	ldp	x20, x19, [sp, #32]
  41bb78:	ldr	x21, [sp, #16]
  41bb7c:	ldp	x29, x30, [sp], #48
  41bb80:	ret
  41bb84:	mov	w0, #0xfffffff4            	// #-12
  41bb88:	ldp	x20, x19, [sp, #32]
  41bb8c:	ldr	x21, [sp, #16]
  41bb90:	ldp	x29, x30, [sp], #48
  41bb94:	ret
  41bb98:	adrp	x1, 422000 <ascii_strlower_n@plt+0x1dbf8>
  41bb9c:	adrp	x2, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41bba0:	adrp	x4, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41bba4:	add	x1, x1, #0xc63
  41bba8:	add	x2, x2, #0x4b3
  41bbac:	add	x4, x4, #0x942
  41bbb0:	mov	w3, #0x267                 	// #615
  41bbb4:	bl	403a98 <log_assert_failed_realm@plt>
  41bbb8:	stp	x29, x30, [sp, #-96]!
  41bbbc:	stp	x28, x27, [sp, #16]
  41bbc0:	stp	x26, x25, [sp, #32]
  41bbc4:	stp	x24, x23, [sp, #48]
  41bbc8:	stp	x22, x21, [sp, #64]
  41bbcc:	stp	x20, x19, [sp, #80]
  41bbd0:	adrp	x8, 43f000 <ascii_strlower_n@plt+0x3abf8>
  41bbd4:	ldr	x8, [x8, #2688]
  41bbd8:	cmp	x1, #0x0
  41bbdc:	mov	x29, sp
  41bbe0:	ldr	x8, [x8]
  41bbe4:	csel	x20, x8, x1, eq  // eq = none
  41bbe8:	cbz	x0, 41bd68 <ascii_strlower_n@plt+0x17960>
  41bbec:	ldr	x8, [x0, #8]
  41bbf0:	mov	x19, x0
  41bbf4:	cbz	x8, 41bc0c <ascii_strlower_n@plt+0x17804>
  41bbf8:	ldr	x24, [x19, #24]
  41bbfc:	ldp	w28, w27, [x19, #32]
  41bc00:	ldr	x8, [x19, #8]
  41bc04:	cbnz	x8, 41bc20 <ascii_strlower_n@plt+0x17818>
  41bc08:	b	41bd68 <ascii_strlower_n@plt+0x17960>
  41bc0c:	mov	w28, wzr
  41bc10:	mov	x24, xzr
  41bc14:	mov	w27, wzr
  41bc18:	ldr	x8, [x19, #8]
  41bc1c:	cbz	x8, 41bd68 <ascii_strlower_n@plt+0x17960>
  41bc20:	adrp	x21, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41bc24:	adrp	x22, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41bc28:	adrp	x23, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41bc2c:	mov	x25, xzr
  41bc30:	add	x26, x19, #0x34
  41bc34:	add	x21, x21, #0x4b3
  41bc38:	add	x22, x22, #0x9a5
  41bc3c:	add	x23, x23, #0x9b8
  41bc40:	b	41bc58 <ascii_strlower_n@plt+0x17850>
  41bc44:	ldur	x24, [x26, #-12]
  41bc48:	ldp	w28, w27, [x26, #-4]
  41bc4c:	cmp	x25, x8
  41bc50:	add	x26, x26, #0x10
  41bc54:	b.cs	41bd68 <ascii_strlower_n@plt+0x17960>  // b.hs, b.nlast
  41bc58:	mov	w0, #0x9                   	// #9
  41bc5c:	mov	x1, x20
  41bc60:	bl	403d38 <fputc@plt>
  41bc64:	mov	x0, x24
  41bc68:	bl	417ee4 <ascii_strlower_n@plt+0x13adc>
  41bc6c:	cbz	x0, 41bcf0 <ascii_strlower_n@plt+0x178e8>
  41bc70:	mov	x1, x20
  41bc74:	bl	4043d8 <fputs@plt>
  41bc78:	and	w8, w27, #0x7
  41bc7c:	orr	w8, w8, w28
  41bc80:	cbz	w8, 41bc9c <ascii_strlower_n@plt+0x17894>
  41bc84:	adrp	x0, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41bc88:	mov	w1, #0x2                   	// #2
  41bc8c:	mov	w2, #0x1                   	// #1
  41bc90:	add	x0, x0, #0x9b5
  41bc94:	mov	x3, x20
  41bc98:	bl	403f78 <fwrite@plt>
  41bc9c:	cbz	w28, 41bcac <ascii_strlower_n@plt+0x178a4>
  41bca0:	mov	x0, x23
  41bca4:	mov	w1, w28
  41bca8:	bl	403a58 <printf@plt>
  41bcac:	tbnz	w27, #0, 41bd2c <ascii_strlower_n@plt+0x17924>
  41bcb0:	tbnz	w27, #1, 41bd48 <ascii_strlower_n@plt+0x17940>
  41bcb4:	tbz	w27, #2, 41bcd0 <ascii_strlower_n@plt+0x178c8>
  41bcb8:	adrp	x0, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41bcbc:	mov	w1, #0xd                   	// #13
  41bcc0:	mov	w2, #0x1                   	// #1
  41bcc4:	add	x0, x0, #0x9dd
  41bcc8:	mov	x3, x20
  41bccc:	bl	403f78 <fwrite@plt>
  41bcd0:	mov	w0, #0xa                   	// #10
  41bcd4:	mov	x1, x20
  41bcd8:	bl	403d38 <fputc@plt>
  41bcdc:	ldr	x8, [x19, #8]
  41bce0:	add	x25, x25, #0x1
  41bce4:	cmp	x25, x8
  41bce8:	b.cc	41bc44 <ascii_strlower_n@plt+0x1783c>  // b.lo, b.ul, b.last
  41bcec:	b	41bd10 <ascii_strlower_n@plt+0x17908>
  41bcf0:	mov	w2, #0x2b8                 	// #696
  41bcf4:	mov	x1, x21
  41bcf8:	mov	x3, x22
  41bcfc:	bl	403a28 <log_oom_internal@plt>
  41bd00:	ldr	x8, [x19, #8]
  41bd04:	add	x25, x25, #0x1
  41bd08:	cmp	x25, x8
  41bd0c:	b.cc	41bc44 <ascii_strlower_n@plt+0x1783c>  // b.lo, b.ul, b.last
  41bd10:	mov	w28, wzr
  41bd14:	mov	x24, xzr
  41bd18:	mov	w27, wzr
  41bd1c:	cmp	x25, x8
  41bd20:	add	x26, x26, #0x10
  41bd24:	b.cc	41bc58 <ascii_strlower_n@plt+0x17850>  // b.lo, b.ul, b.last
  41bd28:	b	41bd68 <ascii_strlower_n@plt+0x17960>
  41bd2c:	adrp	x0, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41bd30:	mov	w1, #0xe                   	// #14
  41bd34:	mov	w2, #0x1                   	// #1
  41bd38:	add	x0, x0, #0x9c4
  41bd3c:	mov	x3, x20
  41bd40:	bl	403f78 <fwrite@plt>
  41bd44:	tbz	w27, #1, 41bcb4 <ascii_strlower_n@plt+0x178ac>
  41bd48:	adrp	x0, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41bd4c:	mov	w1, #0x9                   	// #9
  41bd50:	mov	w2, #0x1                   	// #1
  41bd54:	add	x0, x0, #0x9d3
  41bd58:	mov	x3, x20
  41bd5c:	bl	403f78 <fwrite@plt>
  41bd60:	tbnz	w27, #2, 41bcb8 <ascii_strlower_n@plt+0x178b0>
  41bd64:	b	41bcd0 <ascii_strlower_n@plt+0x178c8>
  41bd68:	ldp	x20, x19, [sp, #80]
  41bd6c:	ldp	x22, x21, [sp, #64]
  41bd70:	ldp	x24, x23, [sp, #48]
  41bd74:	ldp	x26, x25, [sp, #32]
  41bd78:	ldp	x28, x27, [sp, #16]
  41bd7c:	ldp	x29, x30, [sp], #96
  41bd80:	ret
  41bd84:	sub	sp, sp, #0x50
  41bd88:	stp	x29, x30, [sp, #16]
  41bd8c:	stp	x24, x23, [sp, #32]
  41bd90:	stp	x22, x21, [sp, #48]
  41bd94:	stp	x20, x19, [sp, #64]
  41bd98:	add	x29, sp, #0x10
  41bd9c:	cbz	x1, 41beb8 <ascii_strlower_n@plt+0x17ab0>
  41bda0:	ldr	x8, [x1, #8]
  41bda4:	mov	x19, x1
  41bda8:	mov	x20, x0
  41bdac:	ldrh	w8, [x8, #6]
  41bdb0:	cmp	w8, #0x5
  41bdb4:	ccmp	x0, #0x0, #0x4, eq  // eq = none
  41bdb8:	b.eq	41be88 <ascii_strlower_n@plt+0x17a80>  // b.none
  41bdbc:	ldr	x8, [x20, #8]
  41bdc0:	cbz	x8, 41bdc8 <ascii_strlower_n@plt+0x179c0>
  41bdc4:	ldr	x8, [x20, #24]
  41bdc8:	ldr	x9, [x20, #8]
  41bdcc:	cbz	x9, 41be88 <ascii_strlower_n@plt+0x17a80>
  41bdd0:	mov	x23, xzr
  41bdd4:	add	x24, x20, #0x28
  41bdd8:	b	41bde8 <ascii_strlower_n@plt+0x179e0>
  41bddc:	ldr	x8, [x24], #16
  41bde0:	cmp	x23, x9
  41bde4:	b.cs	41be88 <ascii_strlower_n@plt+0x17a80>  // b.hs, b.nlast
  41bde8:	str	xzr, [sp, #8]
  41bdec:	ldr	x0, [x8, #8]
  41bdf0:	ldrh	w9, [x0, #6]
  41bdf4:	cmp	w9, #0x27
  41bdf8:	b.ne	41be60 <ascii_strlower_n@plt+0x17a58>  // b.any
  41bdfc:	ldr	x9, [x19, #8]
  41be00:	ldrh	w10, [x0, #4]
  41be04:	ldrh	w9, [x9, #4]
  41be08:	cmp	w10, w9
  41be0c:	b.ne	41be60 <ascii_strlower_n@plt+0x17a58>  // b.any
  41be10:	ldr	x21, [x19, #80]
  41be14:	ldr	x22, [x8, #80]
  41be18:	bl	415fcc <ascii_strlower_n@plt+0x11bc4>
  41be1c:	mov	x2, x0
  41be20:	add	x3, sp, #0x8
  41be24:	mov	x0, x21
  41be28:	mov	x1, x22
  41be2c:	bl	404228 <dns_name_change_suffix@plt>
  41be30:	mov	w21, w0
  41be34:	tbnz	w0, #31, 41beac <ascii_strlower_n@plt+0x17aa4>
  41be38:	cbz	w21, 41be60 <ascii_strlower_n@plt+0x17a58>
  41be3c:	ldr	x0, [x19, #8]
  41be40:	ldr	x21, [sp, #8]
  41be44:	bl	415fcc <ascii_strlower_n@plt+0x11bc4>
  41be48:	mov	x1, x0
  41be4c:	mov	x0, x21
  41be50:	bl	404248 <dns_name_equal@plt>
  41be54:	mov	w21, w0
  41be58:	tbnz	w0, #31, 41beac <ascii_strlower_n@plt+0x17aa4>
  41be5c:	cbnz	w21, 41bea8 <ascii_strlower_n@plt+0x17aa0>
  41be60:	ldr	x0, [sp, #8]
  41be64:	bl	4039d8 <free@plt>
  41be68:	ldr	x9, [x20, #8]
  41be6c:	add	x23, x23, #0x1
  41be70:	cmp	x23, x9
  41be74:	b.cc	41bddc <ascii_strlower_n@plt+0x179d4>  // b.lo, b.ul, b.last
  41be78:	mov	x8, xzr
  41be7c:	cmp	x23, x9
  41be80:	add	x24, x24, #0x10
  41be84:	b.cc	41bde8 <ascii_strlower_n@plt+0x179e0>  // b.lo, b.ul, b.last
  41be88:	mov	w21, wzr
  41be8c:	mov	w0, w21
  41be90:	ldp	x20, x19, [sp, #64]
  41be94:	ldp	x22, x21, [sp, #48]
  41be98:	ldp	x24, x23, [sp, #32]
  41be9c:	ldp	x29, x30, [sp, #16]
  41bea0:	add	sp, sp, #0x50
  41bea4:	ret
  41bea8:	mov	w21, #0x1                   	// #1
  41beac:	ldr	x0, [sp, #8]
  41beb0:	bl	4039d8 <free@plt>
  41beb4:	b	41be8c <ascii_strlower_n@plt+0x17a84>
  41beb8:	adrp	x1, 41e000 <ascii_strlower_n@plt+0x19bf8>
  41bebc:	adrp	x2, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41bec0:	adrp	x4, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41bec4:	add	x1, x1, #0x860
  41bec8:	add	x2, x2, #0x4b3
  41becc:	add	x4, x4, #0x9eb
  41bed0:	mov	w3, #0x2d2                 	// #722
  41bed4:	mov	w0, wzr
  41bed8:	bl	403a98 <log_assert_failed_realm@plt>
  41bedc:	stp	x29, x30, [sp, #-32]!
  41bee0:	stp	x20, x19, [sp, #16]
  41bee4:	mov	x29, sp
  41bee8:	cbz	x0, 41bf1c <ascii_strlower_n@plt+0x17b14>
  41beec:	lsl	x8, x0, #3
  41bef0:	mov	x19, x0
  41bef4:	add	x1, x8, #0x18
  41bef8:	mov	w0, #0x1                   	// #1
  41befc:	mov	w20, #0x1                   	// #1
  41bf00:	bl	404068 <calloc@plt>
  41bf04:	cbz	x0, 41bf10 <ascii_strlower_n@plt+0x17b08>
  41bf08:	str	w20, [x0]
  41bf0c:	str	x19, [x0, #16]
  41bf10:	ldp	x20, x19, [sp, #16]
  41bf14:	ldp	x29, x30, [sp], #32
  41bf18:	ret
  41bf1c:	adrp	x1, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41bf20:	adrp	x2, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41bf24:	adrp	x4, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41bf28:	add	x1, x1, #0xa7e
  41bf2c:	add	x2, x2, #0xa87
  41bf30:	add	x4, x4, #0xaab
  41bf34:	mov	w3, #0xb                   	// #11
  41bf38:	bl	403a98 <log_assert_failed_realm@plt>
  41bf3c:	stp	x29, x30, [sp, #-16]!
  41bf40:	mov	x29, sp
  41bf44:	cbz	x0, 41bf58 <ascii_strlower_n@plt+0x17b50>
  41bf48:	ldr	w8, [x0]
  41bf4c:	cbz	w8, 41bf60 <ascii_strlower_n@plt+0x17b58>
  41bf50:	add	w8, w8, #0x1
  41bf54:	str	w8, [x0]
  41bf58:	ldp	x29, x30, [sp], #16
  41bf5c:	ret
  41bf60:	adrp	x1, 421000 <ascii_strlower_n@plt+0x1cbf8>
  41bf64:	adrp	x2, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41bf68:	adrp	x4, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41bf6c:	add	x1, x1, #0xc49
  41bf70:	add	x2, x2, #0xa87
  41bf74:	add	x4, x4, #0xad1
  41bf78:	mov	w3, #0x21                  	// #33
  41bf7c:	mov	w0, wzr
  41bf80:	bl	403a98 <log_assert_failed_realm@plt>
  41bf84:	stp	x29, x30, [sp, #-48]!
  41bf88:	str	x21, [sp, #16]
  41bf8c:	stp	x20, x19, [sp, #32]
  41bf90:	mov	x29, sp
  41bf94:	cbz	x0, 41bfe0 <ascii_strlower_n@plt+0x17bd8>
  41bf98:	ldr	w8, [x0]
  41bf9c:	mov	x19, x0
  41bfa0:	cbz	w8, 41bff4 <ascii_strlower_n@plt+0x17bec>
  41bfa4:	subs	w8, w8, #0x1
  41bfa8:	str	w8, [x19]
  41bfac:	b.ne	41bfe0 <ascii_strlower_n@plt+0x17bd8>  // b.any
  41bfb0:	ldr	x8, [x19, #8]
  41bfb4:	cbz	x8, 41bfd8 <ascii_strlower_n@plt+0x17bd0>
  41bfb8:	mov	x20, xzr
  41bfbc:	add	x21, x19, #0x18
  41bfc0:	ldr	x0, [x21, x20, lsl #3]
  41bfc4:	bl	4162cc <ascii_strlower_n@plt+0x11ec4>
  41bfc8:	ldr	x8, [x19, #8]
  41bfcc:	add	x20, x20, #0x1
  41bfd0:	cmp	x20, x8
  41bfd4:	b.cc	41bfc0 <ascii_strlower_n@plt+0x17bb8>  // b.lo, b.ul, b.last
  41bfd8:	mov	x0, x19
  41bfdc:	bl	4039d8 <free@plt>
  41bfe0:	ldp	x20, x19, [sp, #32]
  41bfe4:	ldr	x21, [sp, #16]
  41bfe8:	mov	x0, xzr
  41bfec:	ldp	x29, x30, [sp], #48
  41bff0:	ret
  41bff4:	adrp	x1, 421000 <ascii_strlower_n@plt+0x1cbf8>
  41bff8:	adrp	x2, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41bffc:	adrp	x4, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41c000:	add	x1, x1, #0xc49
  41c004:	add	x2, x2, #0xa87
  41c008:	add	x4, x4, #0xafe
  41c00c:	mov	w3, #0x21                  	// #33
  41c010:	mov	w0, wzr
  41c014:	bl	403a98 <log_assert_failed_realm@plt>
  41c018:	stp	x29, x30, [sp, #-32]!
  41c01c:	str	x19, [sp, #16]
  41c020:	mov	x29, sp
  41c024:	cbz	x1, 41c07c <ascii_strlower_n@plt+0x17c74>
  41c028:	mov	x19, x0
  41c02c:	cbz	x0, 41c0a0 <ascii_strlower_n@plt+0x17c98>
  41c030:	ldp	x8, x9, [x19, #8]
  41c034:	cmp	x8, x9
  41c038:	b.cs	41c06c <ascii_strlower_n@plt+0x17c64>  // b.hs, b.nlast
  41c03c:	mov	x0, x1
  41c040:	bl	416010 <ascii_strlower_n@plt+0x11c08>
  41c044:	ldr	x9, [x19, #8]
  41c048:	mov	x8, x0
  41c04c:	mov	w0, wzr
  41c050:	add	x10, x9, #0x1
  41c054:	add	x9, x19, x9, lsl #3
  41c058:	str	x10, [x19, #8]
  41c05c:	str	x8, [x9, #24]
  41c060:	ldr	x19, [sp, #16]
  41c064:	ldp	x29, x30, [sp], #32
  41c068:	ret
  41c06c:	mov	w0, #0xffffffe4            	// #-28
  41c070:	ldr	x19, [sp, #16]
  41c074:	ldp	x29, x30, [sp], #32
  41c078:	ret
  41c07c:	adrp	x1, 422000 <ascii_strlower_n@plt+0x1dbf8>
  41c080:	adrp	x2, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41c084:	adrp	x4, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41c088:	add	x1, x1, #0x4fe
  41c08c:	add	x2, x2, #0xa87
  41c090:	add	x4, x4, #0xb2d
  41c094:	mov	w3, #0x26                  	// #38
  41c098:	mov	w0, wzr
  41c09c:	bl	403a98 <log_assert_failed_realm@plt>
  41c0a0:	adrp	x1, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41c0a4:	adrp	x2, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41c0a8:	adrp	x4, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41c0ac:	add	x1, x1, #0xb67
  41c0b0:	add	x2, x2, #0xa87
  41c0b4:	add	x4, x4, #0xb2d
  41c0b8:	mov	w3, #0x27                  	// #39
  41c0bc:	mov	w0, wzr
  41c0c0:	bl	403a98 <log_assert_failed_realm@plt>
  41c0c4:	stp	x29, x30, [sp, #-48]!
  41c0c8:	stp	x22, x21, [sp, #16]
  41c0cc:	stp	x20, x19, [sp, #32]
  41c0d0:	mov	x29, sp
  41c0d4:	cbz	x1, 41c180 <ascii_strlower_n@plt+0x17d78>
  41c0d8:	mov	x19, x0
  41c0dc:	cbz	x0, 41c158 <ascii_strlower_n@plt+0x17d50>
  41c0e0:	ldr	x8, [x19, #8]
  41c0e4:	mov	x20, x1
  41c0e8:	cbz	x8, 41c118 <ascii_strlower_n@plt+0x17d10>
  41c0ec:	mov	x21, xzr
  41c0f0:	add	x22, x19, #0x18
  41c0f4:	ldr	x0, [x22, x21, lsl #3]
  41c0f8:	mov	x1, x20
  41c0fc:	bl	4164bc <ascii_strlower_n@plt+0x120b4>
  41c100:	tbnz	w0, #31, 41c148 <ascii_strlower_n@plt+0x17d40>
  41c104:	cbnz	w0, 41c16c <ascii_strlower_n@plt+0x17d64>
  41c108:	ldr	x8, [x19, #8]
  41c10c:	add	x21, x21, #0x1
  41c110:	cmp	x21, x8
  41c114:	b.cc	41c0f4 <ascii_strlower_n@plt+0x17cec>  // b.lo, b.ul, b.last
  41c118:	ldr	x9, [x19, #16]
  41c11c:	cmp	x8, x9
  41c120:	b.cs	41c158 <ascii_strlower_n@plt+0x17d50>  // b.hs, b.nlast
  41c124:	mov	x0, x20
  41c128:	bl	416010 <ascii_strlower_n@plt+0x11c08>
  41c12c:	ldr	x9, [x19, #8]
  41c130:	mov	x8, x0
  41c134:	mov	w0, wzr
  41c138:	add	x10, x9, #0x1
  41c13c:	add	x9, x19, x9, lsl #3
  41c140:	str	x10, [x19, #8]
  41c144:	str	x8, [x9, #24]
  41c148:	ldp	x20, x19, [sp, #32]
  41c14c:	ldp	x22, x21, [sp, #16]
  41c150:	ldp	x29, x30, [sp], #48
  41c154:	ret
  41c158:	mov	w0, #0xffffffe4            	// #-28
  41c15c:	ldp	x20, x19, [sp, #32]
  41c160:	ldp	x22, x21, [sp, #16]
  41c164:	ldp	x29, x30, [sp], #48
  41c168:	ret
  41c16c:	mov	w0, wzr
  41c170:	ldp	x20, x19, [sp, #32]
  41c174:	ldp	x22, x21, [sp, #16]
  41c178:	ldp	x29, x30, [sp], #48
  41c17c:	ret
  41c180:	adrp	x1, 422000 <ascii_strlower_n@plt+0x1dbf8>
  41c184:	adrp	x2, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41c188:	adrp	x4, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41c18c:	add	x1, x1, #0x4fe
  41c190:	add	x2, x2, #0xa87
  41c194:	add	x4, x4, #0xb69
  41c198:	mov	w3, #0x33                  	// #51
  41c19c:	mov	w0, wzr
  41c1a0:	bl	403a98 <log_assert_failed_realm@plt>
  41c1a4:	stp	x29, x30, [sp, #-64]!
  41c1a8:	str	x23, [sp, #16]
  41c1ac:	stp	x22, x21, [sp, #32]
  41c1b0:	stp	x20, x19, [sp, #48]
  41c1b4:	mov	x29, sp
  41c1b8:	cbz	x1, 41c218 <ascii_strlower_n@plt+0x17e10>
  41c1bc:	mov	x21, x0
  41c1c0:	cbz	x0, 41c200 <ascii_strlower_n@plt+0x17df8>
  41c1c4:	ldr	x8, [x21, #8]
  41c1c8:	cbz	x8, 41c200 <ascii_strlower_n@plt+0x17df8>
  41c1cc:	mov	x19, x2
  41c1d0:	mov	x20, x1
  41c1d4:	mov	x22, xzr
  41c1d8:	add	x23, x21, #0x18
  41c1dc:	ldr	x0, [x23, x22, lsl #3]
  41c1e0:	mov	x1, x20
  41c1e4:	mov	x2, x19
  41c1e8:	bl	4165a4 <ascii_strlower_n@plt+0x1219c>
  41c1ec:	cbnz	w0, 41c204 <ascii_strlower_n@plt+0x17dfc>
  41c1f0:	ldr	x8, [x21, #8]
  41c1f4:	add	x22, x22, #0x1
  41c1f8:	cmp	x22, x8
  41c1fc:	b.cc	41c1dc <ascii_strlower_n@plt+0x17dd4>  // b.lo, b.ul, b.last
  41c200:	mov	w0, wzr
  41c204:	ldp	x20, x19, [sp, #48]
  41c208:	ldp	x22, x21, [sp, #32]
  41c20c:	ldr	x23, [sp, #16]
  41c210:	ldp	x29, x30, [sp], #64
  41c214:	ret
  41c218:	adrp	x1, 422000 <ascii_strlower_n@plt+0x1dbf8>
  41c21c:	adrp	x2, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41c220:	adrp	x4, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41c224:	add	x1, x1, #0x14e
  41c228:	add	x2, x2, #0xa87
  41c22c:	add	x4, x4, #0xb9f
  41c230:	mov	w3, #0x47                  	// #71
  41c234:	mov	w0, wzr
  41c238:	bl	403a98 <log_assert_failed_realm@plt>
  41c23c:	stp	x29, x30, [sp, #-64]!
  41c240:	str	x23, [sp, #16]
  41c244:	stp	x22, x21, [sp, #32]
  41c248:	stp	x20, x19, [sp, #48]
  41c24c:	mov	x29, sp
  41c250:	cbz	x1, 41c2d8 <ascii_strlower_n@plt+0x17ed0>
  41c254:	mov	x21, x0
  41c258:	cbz	x0, 41c2c0 <ascii_strlower_n@plt+0x17eb8>
  41c25c:	ldr	x8, [x1, #8]
  41c260:	mov	x19, x2
  41c264:	mov	x20, x1
  41c268:	ldrh	w8, [x8, #6]
  41c26c:	cmp	w8, #0x27
  41c270:	b.eq	41c27c <ascii_strlower_n@plt+0x17e74>  // b.none
  41c274:	cmp	w8, #0x5
  41c278:	b.ne	41c2c0 <ascii_strlower_n@plt+0x17eb8>  // b.any
  41c27c:	ldr	x8, [x21, #8]
  41c280:	cbz	x8, 41c2c0 <ascii_strlower_n@plt+0x17eb8>
  41c284:	mov	x22, xzr
  41c288:	add	x23, x21, #0x18
  41c28c:	ldr	x8, [x23, x22, lsl #3]
  41c290:	ldrh	w0, [x8, #6]
  41c294:	bl	41d75c <ascii_strlower_n@plt+0x19354>
  41c298:	tbz	w0, #0, 41c2c0 <ascii_strlower_n@plt+0x17eb8>
  41c29c:	ldr	x0, [x23, x22, lsl #3]
  41c2a0:	ldr	x1, [x20, #8]
  41c2a4:	mov	x2, x19
  41c2a8:	bl	416750 <ascii_strlower_n@plt+0x12348>
  41c2ac:	cbnz	w0, 41c2c4 <ascii_strlower_n@plt+0x17ebc>
  41c2b0:	ldr	x8, [x21, #8]
  41c2b4:	add	x22, x22, #0x1
  41c2b8:	cmp	x22, x8
  41c2bc:	b.cc	41c28c <ascii_strlower_n@plt+0x17e84>  // b.lo, b.ul, b.last
  41c2c0:	mov	w0, wzr
  41c2c4:	ldp	x20, x19, [sp, #48]
  41c2c8:	ldp	x22, x21, [sp, #32]
  41c2cc:	ldr	x23, [sp, #16]
  41c2d0:	ldp	x29, x30, [sp], #64
  41c2d4:	ret
  41c2d8:	adrp	x1, 422000 <ascii_strlower_n@plt+0x1dbf8>
  41c2dc:	adrp	x2, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41c2e0:	adrp	x4, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41c2e4:	add	x1, x1, #0x14e
  41c2e8:	add	x2, x2, #0xa87
  41c2ec:	add	x4, x4, #0xbed
  41c2f0:	mov	w3, #0x59                  	// #89
  41c2f4:	mov	w0, wzr
  41c2f8:	bl	403a98 <log_assert_failed_realm@plt>
  41c2fc:	stp	x29, x30, [sp, #-48]!
  41c300:	stp	x22, x21, [sp, #16]
  41c304:	stp	x20, x19, [sp, #32]
  41c308:	mov	x29, sp
  41c30c:	cbz	x0, 41c3a4 <ascii_strlower_n@plt+0x17f9c>
  41c310:	ldr	x8, [x0, #8]
  41c314:	mov	w9, #0xfffe                	// #65534
  41c318:	mov	x19, x0
  41c31c:	sub	x8, x8, #0x1
  41c320:	cmp	x8, x9
  41c324:	b.ls	41c330 <ascii_strlower_n@plt+0x17f28>  // b.plast
  41c328:	mov	w0, wzr
  41c32c:	b	41c3a4 <ascii_strlower_n@plt+0x17f9c>
  41c330:	ldr	x0, [x19, #24]
  41c334:	bl	415fcc <ascii_strlower_n@plt+0x11bc4>
  41c338:	cbz	x0, 41c3a4 <ascii_strlower_n@plt+0x17f9c>
  41c33c:	ldr	x8, [x19, #8]
  41c340:	cbz	x8, 41c390 <ascii_strlower_n@plt+0x17f88>
  41c344:	mov	x20, x0
  41c348:	mov	x21, xzr
  41c34c:	add	x22, x19, #0x18
  41c350:	ldr	x0, [x22, x21, lsl #3]
  41c354:	cbz	x0, 41c3b4 <ascii_strlower_n@plt+0x17fac>
  41c358:	cbz	x21, 41c374 <ascii_strlower_n@plt+0x17f6c>
  41c35c:	bl	415fcc <ascii_strlower_n@plt+0x11bc4>
  41c360:	mov	x1, x20
  41c364:	bl	404248 <dns_name_equal@plt>
  41c368:	cmp	w0, #0x1
  41c36c:	b.lt	41c3a4 <ascii_strlower_n@plt+0x17f9c>  // b.tstop
  41c370:	ldr	x0, [x22, x21, lsl #3]
  41c374:	ldrh	w0, [x0, #6]
  41c378:	bl	41d6cc <ascii_strlower_n@plt+0x192c4>
  41c37c:	tbz	w0, #0, 41c328 <ascii_strlower_n@plt+0x17f20>
  41c380:	ldr	x8, [x19, #8]
  41c384:	add	x21, x21, #0x1
  41c388:	cmp	x21, x8
  41c38c:	b.cc	41c350 <ascii_strlower_n@plt+0x17f48>  // b.lo, b.ul, b.last
  41c390:	mov	w0, #0x1                   	// #1
  41c394:	ldp	x20, x19, [sp, #32]
  41c398:	ldp	x22, x21, [sp, #16]
  41c39c:	ldp	x29, x30, [sp], #48
  41c3a0:	ret
  41c3a4:	ldp	x20, x19, [sp, #32]
  41c3a8:	ldp	x22, x21, [sp, #16]
  41c3ac:	ldp	x29, x30, [sp], #48
  41c3b0:	ret
  41c3b4:	adrp	x1, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41c3b8:	adrp	x2, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41c3bc:	adrp	x4, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41c3c0:	add	x1, x1, #0xc47
  41c3c4:	add	x2, x2, #0xa87
  41c3c8:	add	x4, x4, #0xc52
  41c3cc:	mov	w3, #0x82                  	// #130
  41c3d0:	bl	403a98 <log_assert_failed_realm@plt>
  41c3d4:	stp	x29, x30, [sp, #-48]!
  41c3d8:	stp	x22, x21, [sp, #16]
  41c3dc:	stp	x20, x19, [sp, #32]
  41c3e0:	mov	x29, sp
  41c3e4:	cbz	x1, 41c44c <ascii_strlower_n@plt+0x18044>
  41c3e8:	mov	x20, x0
  41c3ec:	cbz	x0, 41c438 <ascii_strlower_n@plt+0x18030>
  41c3f0:	ldr	x8, [x20, #8]
  41c3f4:	cbz	x8, 41c438 <ascii_strlower_n@plt+0x18030>
  41c3f8:	mov	x19, x1
  41c3fc:	mov	x21, xzr
  41c400:	add	x22, x20, #0x18
  41c404:	ldr	x0, [x22, x21, lsl #3]
  41c408:	mov	x1, x19
  41c40c:	bl	4164bc <ascii_strlower_n@plt+0x120b4>
  41c410:	cbnz	w0, 41c428 <ascii_strlower_n@plt+0x18020>
  41c414:	ldr	x8, [x20, #8]
  41c418:	add	x21, x21, #0x1
  41c41c:	cmp	x21, x8
  41c420:	b.cc	41c404 <ascii_strlower_n@plt+0x17ffc>  // b.lo, b.ul, b.last
  41c424:	mov	w0, wzr
  41c428:	ldp	x20, x19, [sp, #32]
  41c42c:	ldp	x22, x21, [sp, #16]
  41c430:	ldp	x29, x30, [sp], #48
  41c434:	ret
  41c438:	mov	w0, wzr
  41c43c:	ldp	x20, x19, [sp, #32]
  41c440:	ldp	x22, x21, [sp, #16]
  41c444:	ldp	x29, x30, [sp], #48
  41c448:	ret
  41c44c:	adrp	x1, 421000 <ascii_strlower_n@plt+0x1cbf8>
  41c450:	adrp	x2, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41c454:	adrp	x4, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41c458:	add	x1, x1, #0xfd2
  41c45c:	add	x2, x2, #0xa87
  41c460:	add	x4, x4, #0xc85
  41c464:	mov	w3, #0x95                  	// #149
  41c468:	mov	w0, wzr
  41c46c:	bl	403a98 <log_assert_failed_realm@plt>
  41c470:	stp	x29, x30, [sp, #-64]!
  41c474:	cmp	x0, x1
  41c478:	stp	x24, x23, [sp, #16]
  41c47c:	stp	x22, x21, [sp, #32]
  41c480:	stp	x20, x19, [sp, #48]
  41c484:	mov	x29, sp
  41c488:	b.eq	41c580 <ascii_strlower_n@plt+0x18178>  // b.none
  41c48c:	mov	x19, x1
  41c490:	mov	x20, x0
  41c494:	cbz	x0, 41c56c <ascii_strlower_n@plt+0x18164>
  41c498:	ldr	x8, [x20, #8]
  41c49c:	cbz	x19, 41c574 <ascii_strlower_n@plt+0x1816c>
  41c4a0:	cbz	x8, 41c500 <ascii_strlower_n@plt+0x180f8>
  41c4a4:	mov	x22, xzr
  41c4a8:	add	x23, x19, #0x18
  41c4ac:	add	x8, x20, x22, lsl #3
  41c4b0:	ldr	x21, [x8, #24]
  41c4b4:	cbz	x21, 41c5a0 <ascii_strlower_n@plt+0x18198>
  41c4b8:	ldr	x8, [x19, #8]
  41c4bc:	cbz	x8, 41c588 <ascii_strlower_n@plt+0x18180>
  41c4c0:	mov	x24, xzr
  41c4c4:	ldr	x0, [x23, x24, lsl #3]
  41c4c8:	mov	x1, x21
  41c4cc:	bl	4164bc <ascii_strlower_n@plt+0x120b4>
  41c4d0:	cbnz	w0, 41c4e8 <ascii_strlower_n@plt+0x180e0>
  41c4d4:	ldr	x8, [x19, #8]
  41c4d8:	add	x24, x24, #0x1
  41c4dc:	cmp	x24, x8
  41c4e0:	b.cc	41c4c4 <ascii_strlower_n@plt+0x180bc>  // b.lo, b.ul, b.last
  41c4e4:	b	41c588 <ascii_strlower_n@plt+0x18180>
  41c4e8:	cmp	w0, #0x1
  41c4ec:	b.lt	41c58c <ascii_strlower_n@plt+0x18184>  // b.tstop
  41c4f0:	ldr	x8, [x20, #8]
  41c4f4:	add	x22, x22, #0x1
  41c4f8:	cmp	x22, x8
  41c4fc:	b.cc	41c4ac <ascii_strlower_n@plt+0x180a4>  // b.lo, b.ul, b.last
  41c500:	ldr	x8, [x19, #8]
  41c504:	cbz	x8, 41c580 <ascii_strlower_n@plt+0x18178>
  41c508:	mov	x22, xzr
  41c50c:	add	x23, x20, #0x18
  41c510:	add	x8, x19, x22, lsl #3
  41c514:	ldr	x21, [x8, #24]
  41c518:	cbz	x21, 41c5a0 <ascii_strlower_n@plt+0x18198>
  41c51c:	ldr	x8, [x20, #8]
  41c520:	cbz	x8, 41c588 <ascii_strlower_n@plt+0x18180>
  41c524:	mov	x24, xzr
  41c528:	ldr	x0, [x23, x24, lsl #3]
  41c52c:	mov	x1, x21
  41c530:	bl	4164bc <ascii_strlower_n@plt+0x120b4>
  41c534:	cbnz	w0, 41c54c <ascii_strlower_n@plt+0x18144>
  41c538:	ldr	x8, [x20, #8]
  41c53c:	add	x24, x24, #0x1
  41c540:	cmp	x24, x8
  41c544:	b.cc	41c528 <ascii_strlower_n@plt+0x18120>  // b.lo, b.ul, b.last
  41c548:	b	41c588 <ascii_strlower_n@plt+0x18180>
  41c54c:	cmp	w0, #0x0
  41c550:	b.le	41c58c <ascii_strlower_n@plt+0x18184>
  41c554:	ldr	x8, [x19, #8]
  41c558:	add	x22, x22, #0x1
  41c55c:	mov	w0, #0x1                   	// #1
  41c560:	cmp	x22, x8
  41c564:	b.cc	41c510 <ascii_strlower_n@plt+0x18108>  // b.lo, b.ul, b.last
  41c568:	b	41c58c <ascii_strlower_n@plt+0x18184>
  41c56c:	cbz	x19, 41c580 <ascii_strlower_n@plt+0x18178>
  41c570:	ldr	x8, [x19, #8]
  41c574:	cmp	x8, #0x0
  41c578:	cset	w0, eq  // eq = none
  41c57c:	b	41c58c <ascii_strlower_n@plt+0x18184>
  41c580:	mov	w0, #0x1                   	// #1
  41c584:	b	41c58c <ascii_strlower_n@plt+0x18184>
  41c588:	mov	w0, wzr
  41c58c:	ldp	x20, x19, [sp, #48]
  41c590:	ldp	x22, x21, [sp, #32]
  41c594:	ldp	x24, x23, [sp, #16]
  41c598:	ldp	x29, x30, [sp], #64
  41c59c:	ret
  41c5a0:	adrp	x1, 421000 <ascii_strlower_n@plt+0x1cbf8>
  41c5a4:	adrp	x2, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41c5a8:	adrp	x4, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41c5ac:	add	x1, x1, #0xfd2
  41c5b0:	add	x2, x2, #0xa87
  41c5b4:	add	x4, x4, #0xc85
  41c5b8:	mov	w3, #0x95                  	// #149
  41c5bc:	mov	w0, wzr
  41c5c0:	bl	403a98 <log_assert_failed_realm@plt>
  41c5c4:	stp	x29, x30, [sp, #-96]!
  41c5c8:	str	x27, [sp, #16]
  41c5cc:	stp	x26, x25, [sp, #32]
  41c5d0:	stp	x24, x23, [sp, #48]
  41c5d4:	stp	x22, x21, [sp, #64]
  41c5d8:	stp	x20, x19, [sp, #80]
  41c5dc:	mov	x29, sp
  41c5e0:	cbz	x1, 41c858 <ascii_strlower_n@plt+0x18450>
  41c5e4:	mov	x19, x2
  41c5e8:	cbz	x2, 41c87c <ascii_strlower_n@plt+0x18474>
  41c5ec:	ldr	x8, [x1, #8]
  41c5f0:	mov	x20, x1
  41c5f4:	mov	x21, x0
  41c5f8:	ldrh	w8, [x8, #6]
  41c5fc:	cmp	w8, #0x27
  41c600:	b.eq	41c60c <ascii_strlower_n@plt+0x18204>  // b.none
  41c604:	cmp	w8, #0x5
  41c608:	b.ne	41c8a0 <ascii_strlower_n@plt+0x18498>  // b.any
  41c60c:	cbz	x21, 41c6ec <ascii_strlower_n@plt+0x182e4>
  41c610:	ldr	x9, [x21, #8]
  41c614:	cbz	x9, 41c6ec <ascii_strlower_n@plt+0x182e4>
  41c618:	add	x24, x20, #0x50
  41c61c:	mov	w25, #0x3                   	// #3
  41c620:	ldr	x22, [x21, x25, lsl #3]
  41c624:	and	w8, w8, #0xffff
  41c628:	cmp	w8, #0x5
  41c62c:	mov	x8, x24
  41c630:	str	xzr, [x29, #24]
  41c634:	b.eq	41c674 <ascii_strlower_n@plt+0x1826c>  // b.none
  41c638:	mov	x0, x22
  41c63c:	bl	415fcc <ascii_strlower_n@plt+0x11bc4>
  41c640:	ldr	x8, [x20, #8]
  41c644:	mov	x23, x0
  41c648:	mov	x0, x8
  41c64c:	bl	415fcc <ascii_strlower_n@plt+0x11bc4>
  41c650:	ldr	x2, [x20, #80]
  41c654:	mov	x1, x0
  41c658:	add	x3, x29, #0x18
  41c65c:	mov	x0, x23
  41c660:	bl	404228 <dns_name_change_suffix@plt>
  41c664:	mov	w23, w0
  41c668:	tbnz	w0, #31, 41c6bc <ascii_strlower_n@plt+0x182b4>
  41c66c:	cbz	w23, 41c694 <ascii_strlower_n@plt+0x1828c>
  41c670:	add	x8, x29, #0x18
  41c674:	ldr	x23, [x8]
  41c678:	mov	x0, x22
  41c67c:	bl	415fcc <ascii_strlower_n@plt+0x11bc4>
  41c680:	mov	x1, x23
  41c684:	bl	404248 <dns_name_equal@plt>
  41c688:	mov	w23, w0
  41c68c:	tbnz	w0, #31, 41c6bc <ascii_strlower_n@plt+0x182b4>
  41c690:	cbz	w23, 41c6d4 <ascii_strlower_n@plt+0x182cc>
  41c694:	ldr	x0, [x29, #24]
  41c698:	bl	4039d8 <free@plt>
  41c69c:	ldr	x8, [x21, #8]
  41c6a0:	sub	x9, x25, #0x2
  41c6a4:	cmp	x9, x8
  41c6a8:	b.cs	41c6ec <ascii_strlower_n@plt+0x182e4>  // b.hs, b.nlast
  41c6ac:	ldr	x8, [x20, #8]
  41c6b0:	add	x25, x25, #0x1
  41c6b4:	ldrh	w8, [x8, #6]
  41c6b8:	b	41c620 <ascii_strlower_n@plt+0x18218>
  41c6bc:	mov	w24, wzr
  41c6c0:	mov	w22, #0x1                   	// #1
  41c6c4:	ldr	x0, [x29, #24]
  41c6c8:	bl	4039d8 <free@plt>
  41c6cc:	cbnz	w24, 41c6e8 <ascii_strlower_n@plt+0x182e0>
  41c6d0:	b	41c6f4 <ascii_strlower_n@plt+0x182ec>
  41c6d4:	mov	w22, wzr
  41c6d8:	mov	w24, #0x1                   	// #1
  41c6dc:	ldr	x0, [x29, #24]
  41c6e0:	bl	4039d8 <free@plt>
  41c6e4:	cbz	w24, 41c6f4 <ascii_strlower_n@plt+0x182ec>
  41c6e8:	cbz	w22, 41c714 <ascii_strlower_n@plt+0x1830c>
  41c6ec:	mov	w23, wzr
  41c6f0:	str	xzr, [x19]
  41c6f4:	mov	w0, w23
  41c6f8:	ldp	x20, x19, [sp, #80]
  41c6fc:	ldp	x22, x21, [sp, #64]
  41c700:	ldp	x24, x23, [sp, #48]
  41c704:	ldp	x26, x25, [sp, #32]
  41c708:	ldr	x27, [sp, #16]
  41c70c:	ldp	x29, x30, [sp], #96
  41c710:	ret
  41c714:	ldr	x23, [x21, #8]
  41c718:	cbz	x23, 41c8c4 <ascii_strlower_n@plt+0x184bc>
  41c71c:	lsl	x8, x23, #3
  41c720:	add	x1, x8, #0x18
  41c724:	mov	w0, #0x1                   	// #1
  41c728:	mov	w24, #0x1                   	// #1
  41c72c:	bl	404068 <calloc@plt>
  41c730:	cbz	x0, 41c7f0 <ascii_strlower_n@plt+0x183e8>
  41c734:	str	w24, [x0]
  41c738:	str	x23, [x0, #16]
  41c73c:	mov	x22, x0
  41c740:	ldr	x0, [x21, #24]
  41c744:	mov	x1, x20
  41c748:	bl	415d58 <ascii_strlower_n@plt+0x11950>
  41c74c:	cbz	x0, 41c7e8 <ascii_strlower_n@plt+0x183e0>
  41c750:	mov	x24, x0
  41c754:	mov	x25, xzr
  41c758:	add	x26, x22, #0x18
  41c75c:	ldr	x8, [x22, #8]
  41c760:	cbz	x8, 41c790 <ascii_strlower_n@plt+0x18388>
  41c764:	mov	x27, xzr
  41c768:	ldr	x0, [x26, x27, lsl #3]
  41c76c:	mov	x1, x24
  41c770:	bl	4164bc <ascii_strlower_n@plt+0x120b4>
  41c774:	mov	w23, w0
  41c778:	tbnz	w0, #31, 41c808 <ascii_strlower_n@plt+0x18400>
  41c77c:	cbnz	w23, 41c7b8 <ascii_strlower_n@plt+0x183b0>
  41c780:	ldr	x8, [x22, #8]
  41c784:	add	x27, x27, #0x1
  41c788:	cmp	x27, x8
  41c78c:	b.cc	41c768 <ascii_strlower_n@plt+0x18360>  // b.lo, b.ul, b.last
  41c790:	ldr	x9, [x22, #16]
  41c794:	cmp	x8, x9
  41c798:	b.cs	41c804 <ascii_strlower_n@plt+0x183fc>  // b.hs, b.nlast
  41c79c:	mov	x0, x24
  41c7a0:	bl	416010 <ascii_strlower_n@plt+0x11c08>
  41c7a4:	ldr	x8, [x22, #8]
  41c7a8:	add	x9, x8, #0x1
  41c7ac:	add	x8, x22, x8, lsl #3
  41c7b0:	str	x9, [x22, #8]
  41c7b4:	str	x0, [x8, #24]
  41c7b8:	mov	x0, x24
  41c7bc:	bl	4162cc <ascii_strlower_n@plt+0x11ec4>
  41c7c0:	ldr	x8, [x21, #8]
  41c7c4:	add	x25, x25, #0x1
  41c7c8:	cmp	x25, x8
  41c7cc:	b.cs	41c7f8 <ascii_strlower_n@plt+0x183f0>  // b.hs, b.nlast
  41c7d0:	add	x8, x21, x25, lsl #3
  41c7d4:	ldr	x0, [x8, #24]
  41c7d8:	mov	x1, x20
  41c7dc:	bl	415d58 <ascii_strlower_n@plt+0x11950>
  41c7e0:	mov	x24, x0
  41c7e4:	cbnz	x0, 41c75c <ascii_strlower_n@plt+0x18354>
  41c7e8:	mov	w23, #0xfffffff4            	// #-12
  41c7ec:	b	41c810 <ascii_strlower_n@plt+0x18408>
  41c7f0:	mov	w23, #0xfffffff4            	// #-12
  41c7f4:	b	41c6f4 <ascii_strlower_n@plt+0x182ec>
  41c7f8:	str	x22, [x19]
  41c7fc:	mov	w23, #0x1                   	// #1
  41c800:	b	41c6f4 <ascii_strlower_n@plt+0x182ec>
  41c804:	mov	w23, #0xffffffe4            	// #-28
  41c808:	mov	x0, x24
  41c80c:	bl	4162cc <ascii_strlower_n@plt+0x11ec4>
  41c810:	ldr	w8, [x22]
  41c814:	cbz	w8, 41c8e8 <ascii_strlower_n@plt+0x184e0>
  41c818:	subs	w8, w8, #0x1
  41c81c:	str	w8, [x22]
  41c820:	b.ne	41c6f4 <ascii_strlower_n@plt+0x182ec>  // b.any
  41c824:	ldr	x8, [x22, #8]
  41c828:	cbz	x8, 41c84c <ascii_strlower_n@plt+0x18444>
  41c82c:	mov	x19, xzr
  41c830:	add	x20, x22, #0x18
  41c834:	ldr	x0, [x20, x19, lsl #3]
  41c838:	bl	4162cc <ascii_strlower_n@plt+0x11ec4>
  41c83c:	ldr	x8, [x22, #8]
  41c840:	add	x19, x19, #0x1
  41c844:	cmp	x19, x8
  41c848:	b.cc	41c834 <ascii_strlower_n@plt+0x1842c>  // b.lo, b.ul, b.last
  41c84c:	mov	x0, x22
  41c850:	bl	4039d8 <free@plt>
  41c854:	b	41c6f4 <ascii_strlower_n@plt+0x182ec>
  41c858:	adrp	x1, 41e000 <ascii_strlower_n@plt+0x19bf8>
  41c85c:	adrp	x2, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41c860:	adrp	x4, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41c864:	add	x1, x1, #0x860
  41c868:	add	x2, x2, #0xa87
  41c86c:	add	x4, x4, #0xcc6
  41c870:	mov	w3, #0xc6                  	// #198
  41c874:	mov	w0, wzr
  41c878:	bl	403a98 <log_assert_failed_realm@plt>
  41c87c:	adrp	x1, 420000 <ascii_strlower_n@plt+0x1bbf8>
  41c880:	adrp	x2, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41c884:	adrp	x4, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41c888:	add	x1, x1, #0x41e
  41c88c:	add	x2, x2, #0xa87
  41c890:	add	x4, x4, #0xcc6
  41c894:	mov	w3, #0xc7                  	// #199
  41c898:	mov	w0, wzr
  41c89c:	bl	403a98 <log_assert_failed_realm@plt>
  41c8a0:	adrp	x1, 422000 <ascii_strlower_n@plt+0x1dbf8>
  41c8a4:	adrp	x2, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41c8a8:	adrp	x4, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41c8ac:	add	x1, x1, #0x934
  41c8b0:	add	x2, x2, #0xa87
  41c8b4:	add	x4, x4, #0xcc6
  41c8b8:	mov	w3, #0xc8                  	// #200
  41c8bc:	mov	w0, wzr
  41c8c0:	bl	403a98 <log_assert_failed_realm@plt>
  41c8c4:	adrp	x1, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41c8c8:	adrp	x2, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41c8cc:	adrp	x4, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41c8d0:	add	x1, x1, #0xa7e
  41c8d4:	add	x2, x2, #0xa87
  41c8d8:	add	x4, x4, #0xaab
  41c8dc:	mov	w3, #0xb                   	// #11
  41c8e0:	mov	w0, wzr
  41c8e4:	bl	403a98 <log_assert_failed_realm@plt>
  41c8e8:	adrp	x1, 421000 <ascii_strlower_n@plt+0x1cbf8>
  41c8ec:	adrp	x2, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41c8f0:	adrp	x4, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41c8f4:	add	x1, x1, #0xc49
  41c8f8:	add	x2, x2, #0xa87
  41c8fc:	add	x4, x4, #0xafe
  41c900:	mov	w3, #0x21                  	// #33
  41c904:	mov	w0, wzr
  41c908:	bl	403a98 <log_assert_failed_realm@plt>
  41c90c:	cbz	x0, 41c920 <ascii_strlower_n@plt+0x18518>
  41c910:	ldr	x8, [x0, #8]
  41c914:	cbz	x8, 41c920 <ascii_strlower_n@plt+0x18518>
  41c918:	ldr	x0, [x0, #24]
  41c91c:	b	415fcc <ascii_strlower_n@plt+0x11bc4>
  41c920:	mov	x0, xzr
  41c924:	ret
  41c928:	sub	sp, sp, #0x60
  41c92c:	stp	x29, x30, [sp, #16]
  41c930:	stp	x26, x25, [sp, #32]
  41c934:	stp	x24, x23, [sp, #48]
  41c938:	stp	x22, x21, [sp, #64]
  41c93c:	stp	x20, x19, [sp, #80]
  41c940:	add	x29, sp, #0x10
  41c944:	str	xzr, [sp, #8]
  41c948:	cbz	x0, 41cbd4 <ascii_strlower_n@plt+0x187cc>
  41c94c:	mov	x21, x2
  41c950:	cbz	x2, 41cbf4 <ascii_strlower_n@plt+0x187ec>
  41c954:	mov	w23, w1
  41c958:	mov	x19, xzr
  41c95c:	cmp	w1, #0xa
  41c960:	mov	w22, #0xffffff9f            	// #-97
  41c964:	b.hi	41cb48 <ascii_strlower_n@plt+0x18740>  // b.pmore
  41c968:	mov	w8, #0x1                   	// #1
  41c96c:	lsl	w8, w8, w23
  41c970:	mov	w9, #0x405                 	// #1029
  41c974:	tst	w8, w9
  41c978:	b.eq	41cb48 <ascii_strlower_n@plt+0x18740>  // b.none
  41c97c:	mov	x20, x0
  41c980:	tbz	w3, #0, 41c9b4 <ascii_strlower_n@plt+0x185ac>
  41c984:	add	x1, sp, #0x8
  41c988:	mov	x0, x21
  41c98c:	bl	4043e8 <dns_name_apply_idna@plt>
  41c990:	mov	w22, w0
  41c994:	tbnz	w0, #31, 41cafc <ascii_strlower_n@plt+0x186f4>
  41c998:	cbz	w22, 41cb24 <ascii_strlower_n@plt+0x1871c>
  41c99c:	ldr	x19, [sp, #8]
  41c9a0:	mov	x0, x21
  41c9a4:	mov	x1, x19
  41c9a8:	bl	403b38 <strcmp@plt>
  41c9ac:	mov	x21, x19
  41c9b0:	cbz	w0, 41cb24 <ascii_strlower_n@plt+0x1871c>
  41c9b4:	cmp	w23, #0x0
  41c9b8:	mov	w24, #0x1                   	// #1
  41c9bc:	cinc	x22, x24, eq  // eq = none
  41c9c0:	lsl	x8, x22, #3
  41c9c4:	add	x1, x8, #0x18
  41c9c8:	mov	w0, #0x1                   	// #1
  41c9cc:	bl	404068 <calloc@plt>
  41c9d0:	mov	x19, x0
  41c9d4:	cbz	x0, 41cb10 <ascii_strlower_n@plt+0x18708>
  41c9d8:	cmp	w23, #0xa
  41c9dc:	str	w24, [x19]
  41c9e0:	str	x22, [x19, #16]
  41c9e4:	b.ne	41ca6c <ascii_strlower_n@plt+0x18664>  // b.any
  41c9e8:	mov	w0, #0x1                   	// #1
  41c9ec:	mov	w1, #0x1c                  	// #28
  41c9f0:	mov	x2, x21
  41c9f4:	bl	415cc0 <ascii_strlower_n@plt+0x118b8>
  41c9f8:	cbz	x0, 41cb10 <ascii_strlower_n@plt+0x18708>
  41c9fc:	ldr	x8, [x19, #8]
  41ca00:	mov	x21, x0
  41ca04:	cbz	x8, 41ca38 <ascii_strlower_n@plt+0x18630>
  41ca08:	mov	x23, xzr
  41ca0c:	add	x24, x19, #0x18
  41ca10:	ldr	x0, [x24, x23, lsl #3]
  41ca14:	mov	x1, x21
  41ca18:	bl	4164bc <ascii_strlower_n@plt+0x120b4>
  41ca1c:	mov	w22, w0
  41ca20:	tbnz	w0, #31, 41cb40 <ascii_strlower_n@plt+0x18738>
  41ca24:	cbnz	w22, 41ca60 <ascii_strlower_n@plt+0x18658>
  41ca28:	ldr	x8, [x19, #8]
  41ca2c:	add	x23, x23, #0x1
  41ca30:	cmp	x23, x8
  41ca34:	b.cc	41ca10 <ascii_strlower_n@plt+0x18608>  // b.lo, b.ul, b.last
  41ca38:	ldr	x9, [x19, #16]
  41ca3c:	cmp	x8, x9
  41ca40:	b.cs	41cb3c <ascii_strlower_n@plt+0x18734>  // b.hs, b.nlast
  41ca44:	mov	x0, x21
  41ca48:	bl	416010 <ascii_strlower_n@plt+0x11c08>
  41ca4c:	ldr	x8, [x19, #8]
  41ca50:	add	x9, x8, #0x1
  41ca54:	add	x8, x19, x8, lsl #3
  41ca58:	str	x9, [x19, #8]
  41ca5c:	str	x0, [x8, #24]
  41ca60:	mov	x0, x21
  41ca64:	bl	4162cc <ascii_strlower_n@plt+0x11ec4>
  41ca68:	b	41caf4 <ascii_strlower_n@plt+0x186ec>
  41ca6c:	mov	w0, #0x1                   	// #1
  41ca70:	mov	w1, #0x1                   	// #1
  41ca74:	mov	x2, x21
  41ca78:	bl	415cc0 <ascii_strlower_n@plt+0x118b8>
  41ca7c:	cbz	x0, 41cb10 <ascii_strlower_n@plt+0x18708>
  41ca80:	ldr	x8, [x19, #8]
  41ca84:	mov	x24, x0
  41ca88:	cbz	x8, 41cabc <ascii_strlower_n@plt+0x186b4>
  41ca8c:	mov	x25, xzr
  41ca90:	add	x26, x19, #0x18
  41ca94:	ldr	x0, [x26, x25, lsl #3]
  41ca98:	mov	x1, x24
  41ca9c:	bl	4164bc <ascii_strlower_n@plt+0x120b4>
  41caa0:	mov	w22, w0
  41caa4:	tbnz	w0, #31, 41cbbc <ascii_strlower_n@plt+0x187b4>
  41caa8:	cbnz	w22, 41cae4 <ascii_strlower_n@plt+0x186dc>
  41caac:	ldr	x8, [x19, #8]
  41cab0:	add	x25, x25, #0x1
  41cab4:	cmp	x25, x8
  41cab8:	b.cc	41ca94 <ascii_strlower_n@plt+0x1868c>  // b.lo, b.ul, b.last
  41cabc:	ldr	x9, [x19, #16]
  41cac0:	cmp	x8, x9
  41cac4:	b.cs	41cbb8 <ascii_strlower_n@plt+0x187b0>  // b.hs, b.nlast
  41cac8:	mov	x0, x24
  41cacc:	bl	416010 <ascii_strlower_n@plt+0x11c08>
  41cad0:	ldr	x8, [x19, #8]
  41cad4:	add	x9, x8, #0x1
  41cad8:	add	x8, x19, x8, lsl #3
  41cadc:	str	x9, [x19, #8]
  41cae0:	str	x0, [x8, #24]
  41cae4:	mov	x0, x24
  41cae8:	bl	4162cc <ascii_strlower_n@plt+0x11ec4>
  41caec:	cmp	w23, #0x2
  41caf0:	b.ne	41c9e8 <ascii_strlower_n@plt+0x185e0>  // b.any
  41caf4:	mov	w22, wzr
  41caf8:	str	x19, [x20]
  41cafc:	mov	x19, xzr
  41cb00:	ldr	x0, [sp, #8]
  41cb04:	bl	4039d8 <free@plt>
  41cb08:	cbnz	x19, 41cb54 <ascii_strlower_n@plt+0x1874c>
  41cb0c:	b	41cb98 <ascii_strlower_n@plt+0x18790>
  41cb10:	mov	w22, #0xfffffff4            	// #-12
  41cb14:	ldr	x0, [sp, #8]
  41cb18:	bl	4039d8 <free@plt>
  41cb1c:	cbnz	x19, 41cb54 <ascii_strlower_n@plt+0x1874c>
  41cb20:	b	41cb98 <ascii_strlower_n@plt+0x18790>
  41cb24:	mov	x19, xzr
  41cb28:	mov	w22, #0xffffff8e            	// #-114
  41cb2c:	ldr	x0, [sp, #8]
  41cb30:	bl	4039d8 <free@plt>
  41cb34:	cbnz	x19, 41cb54 <ascii_strlower_n@plt+0x1874c>
  41cb38:	b	41cb98 <ascii_strlower_n@plt+0x18790>
  41cb3c:	mov	w22, #0xffffffe4            	// #-28
  41cb40:	mov	x0, x21
  41cb44:	bl	4162cc <ascii_strlower_n@plt+0x11ec4>
  41cb48:	ldr	x0, [sp, #8]
  41cb4c:	bl	4039d8 <free@plt>
  41cb50:	cbz	x19, 41cb98 <ascii_strlower_n@plt+0x18790>
  41cb54:	ldr	w8, [x19]
  41cb58:	cbz	w8, 41cc18 <ascii_strlower_n@plt+0x18810>
  41cb5c:	subs	w8, w8, #0x1
  41cb60:	str	w8, [x19]
  41cb64:	b.ne	41cb98 <ascii_strlower_n@plt+0x18790>  // b.any
  41cb68:	ldr	x8, [x19, #8]
  41cb6c:	cbz	x8, 41cb90 <ascii_strlower_n@plt+0x18788>
  41cb70:	mov	x20, xzr
  41cb74:	add	x21, x19, #0x18
  41cb78:	ldr	x0, [x21, x20, lsl #3]
  41cb7c:	bl	4162cc <ascii_strlower_n@plt+0x11ec4>
  41cb80:	ldr	x8, [x19, #8]
  41cb84:	add	x20, x20, #0x1
  41cb88:	cmp	x20, x8
  41cb8c:	b.cc	41cb78 <ascii_strlower_n@plt+0x18770>  // b.lo, b.ul, b.last
  41cb90:	mov	x0, x19
  41cb94:	bl	4039d8 <free@plt>
  41cb98:	mov	w0, w22
  41cb9c:	ldp	x20, x19, [sp, #80]
  41cba0:	ldp	x22, x21, [sp, #64]
  41cba4:	ldp	x24, x23, [sp, #48]
  41cba8:	ldp	x26, x25, [sp, #32]
  41cbac:	ldp	x29, x30, [sp, #16]
  41cbb0:	add	sp, sp, #0x60
  41cbb4:	ret
  41cbb8:	mov	w22, #0xffffffe4            	// #-28
  41cbbc:	mov	x0, x24
  41cbc0:	bl	4162cc <ascii_strlower_n@plt+0x11ec4>
  41cbc4:	ldr	x0, [sp, #8]
  41cbc8:	bl	4039d8 <free@plt>
  41cbcc:	cbnz	x19, 41cb54 <ascii_strlower_n@plt+0x1874c>
  41cbd0:	b	41cb98 <ascii_strlower_n@plt+0x18790>
  41cbd4:	adrp	x1, 420000 <ascii_strlower_n@plt+0x1bbf8>
  41cbd8:	adrp	x2, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41cbdc:	adrp	x4, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41cbe0:	add	x1, x1, #0x41e
  41cbe4:	add	x2, x2, #0xa87
  41cbe8:	add	x4, x4, #0xd20
  41cbec:	mov	w3, #0x115                 	// #277
  41cbf0:	bl	403a98 <log_assert_failed_realm@plt>
  41cbf4:	adrp	x1, 420000 <ascii_strlower_n@plt+0x1bbf8>
  41cbf8:	adrp	x2, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41cbfc:	adrp	x4, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41cc00:	add	x1, x1, #0x89f
  41cc04:	add	x2, x2, #0xa87
  41cc08:	add	x4, x4, #0xd20
  41cc0c:	mov	w3, #0x116                 	// #278
  41cc10:	mov	w0, wzr
  41cc14:	bl	403a98 <log_assert_failed_realm@plt>
  41cc18:	adrp	x1, 421000 <ascii_strlower_n@plt+0x1cbf8>
  41cc1c:	adrp	x2, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41cc20:	adrp	x4, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41cc24:	add	x1, x1, #0xc49
  41cc28:	add	x2, x2, #0xa87
  41cc2c:	add	x4, x4, #0xafe
  41cc30:	mov	w3, #0x21                  	// #33
  41cc34:	mov	w0, wzr
  41cc38:	bl	403a98 <log_assert_failed_realm@plt>
  41cc3c:	sub	sp, sp, #0x50
  41cc40:	stp	x29, x30, [sp, #16]
  41cc44:	stp	x24, x23, [sp, #32]
  41cc48:	stp	x22, x21, [sp, #48]
  41cc4c:	stp	x20, x19, [sp, #64]
  41cc50:	add	x29, sp, #0x10
  41cc54:	str	xzr, [sp, #8]
  41cc58:	cbz	x0, 41ce24 <ascii_strlower_n@plt+0x18a1c>
  41cc5c:	mov	x8, x2
  41cc60:	cbz	x2, 41ce44 <ascii_strlower_n@plt+0x18a3c>
  41cc64:	mov	x19, xzr
  41cc68:	cmp	w1, #0xa
  41cc6c:	mov	w21, #0xffffff9f            	// #-97
  41cc70:	b.hi	41cd80 <ascii_strlower_n@plt+0x18978>  // b.pmore
  41cc74:	mov	w9, #0x1                   	// #1
  41cc78:	lsl	w9, w9, w1
  41cc7c:	mov	w10, #0x405                 	// #1029
  41cc80:	tst	w9, w10
  41cc84:	mov	x20, x19
  41cc88:	b.eq	41cd98 <ascii_strlower_n@plt+0x18990>  // b.none
  41cc8c:	mov	x22, x0
  41cc90:	add	x2, sp, #0x8
  41cc94:	mov	w0, w1
  41cc98:	mov	x1, x8
  41cc9c:	bl	404298 <dns_name_reverse@plt>
  41cca0:	tbnz	w0, #31, 41cd4c <ascii_strlower_n@plt+0x18944>
  41cca4:	mov	w0, #0x1                   	// #1
  41cca8:	mov	w1, #0x20                  	// #32
  41ccac:	mov	w19, #0x1                   	// #1
  41ccb0:	bl	404068 <calloc@plt>
  41ccb4:	mov	x20, x0
  41ccb8:	cbz	x0, 41cd68 <ascii_strlower_n@plt+0x18960>
  41ccbc:	ldr	x2, [sp, #8]
  41ccc0:	mov	w0, #0x1                   	// #1
  41ccc4:	mov	w1, #0xc                   	// #12
  41ccc8:	str	w19, [x20]
  41cccc:	str	x19, [x20, #16]
  41ccd0:	bl	416084 <ascii_strlower_n@plt+0x11c7c>
  41ccd4:	mov	x19, x0
  41ccd8:	cbz	x0, 41cd94 <ascii_strlower_n@plt+0x1898c>
  41ccdc:	ldr	x8, [x20, #8]
  41cce0:	str	xzr, [sp, #8]
  41cce4:	cbz	x8, 41cd18 <ascii_strlower_n@plt+0x18910>
  41cce8:	mov	x23, xzr
  41ccec:	add	x24, x20, #0x18
  41ccf0:	ldr	x0, [x24, x23, lsl #3]
  41ccf4:	mov	x1, x19
  41ccf8:	bl	4164bc <ascii_strlower_n@plt+0x120b4>
  41ccfc:	mov	w21, w0
  41cd00:	tbnz	w0, #31, 41cd98 <ascii_strlower_n@plt+0x18990>
  41cd04:	cbnz	w21, 41cd40 <ascii_strlower_n@plt+0x18938>
  41cd08:	ldr	x8, [x20, #8]
  41cd0c:	add	x23, x23, #0x1
  41cd10:	cmp	x23, x8
  41cd14:	b.cc	41ccf0 <ascii_strlower_n@plt+0x188e8>  // b.lo, b.ul, b.last
  41cd18:	ldr	x9, [x20, #16]
  41cd1c:	cmp	x8, x9
  41cd20:	b.cs	41ce10 <ascii_strlower_n@plt+0x18a08>  // b.hs, b.nlast
  41cd24:	mov	x0, x19
  41cd28:	bl	416010 <ascii_strlower_n@plt+0x11c08>
  41cd2c:	ldr	x8, [x20, #8]
  41cd30:	add	x9, x8, #0x1
  41cd34:	add	x8, x20, x8, lsl #3
  41cd38:	str	x9, [x20, #8]
  41cd3c:	str	x0, [x8, #24]
  41cd40:	mov	w21, wzr
  41cd44:	str	x20, [x22]
  41cd48:	b	41cd54 <ascii_strlower_n@plt+0x1894c>
  41cd4c:	mov	w21, w0
  41cd50:	mov	x19, xzr
  41cd54:	mov	x20, xzr
  41cd58:	ldr	x0, [sp, #8]
  41cd5c:	bl	4039d8 <free@plt>
  41cd60:	cbnz	x20, 41cda4 <ascii_strlower_n@plt+0x1899c>
  41cd64:	b	41cde8 <ascii_strlower_n@plt+0x189e0>
  41cd68:	mov	x19, xzr
  41cd6c:	mov	w21, #0xfffffff4            	// #-12
  41cd70:	ldr	x0, [sp, #8]
  41cd74:	bl	4039d8 <free@plt>
  41cd78:	cbnz	x20, 41cda4 <ascii_strlower_n@plt+0x1899c>
  41cd7c:	b	41cde8 <ascii_strlower_n@plt+0x189e0>
  41cd80:	mov	x20, x19
  41cd84:	ldr	x0, [sp, #8]
  41cd88:	bl	4039d8 <free@plt>
  41cd8c:	cbnz	x20, 41cda4 <ascii_strlower_n@plt+0x1899c>
  41cd90:	b	41cde8 <ascii_strlower_n@plt+0x189e0>
  41cd94:	mov	w21, #0xfffffff4            	// #-12
  41cd98:	ldr	x0, [sp, #8]
  41cd9c:	bl	4039d8 <free@plt>
  41cda0:	cbz	x20, 41cde8 <ascii_strlower_n@plt+0x189e0>
  41cda4:	ldr	w8, [x20]
  41cda8:	cbz	w8, 41ce68 <ascii_strlower_n@plt+0x18a60>
  41cdac:	subs	w8, w8, #0x1
  41cdb0:	str	w8, [x20]
  41cdb4:	b.ne	41cde8 <ascii_strlower_n@plt+0x189e0>  // b.any
  41cdb8:	ldr	x8, [x20, #8]
  41cdbc:	cbz	x8, 41cde0 <ascii_strlower_n@plt+0x189d8>
  41cdc0:	mov	x22, xzr
  41cdc4:	add	x23, x20, #0x18
  41cdc8:	ldr	x0, [x23, x22, lsl #3]
  41cdcc:	bl	4162cc <ascii_strlower_n@plt+0x11ec4>
  41cdd0:	ldr	x8, [x20, #8]
  41cdd4:	add	x22, x22, #0x1
  41cdd8:	cmp	x22, x8
  41cddc:	b.cc	41cdc8 <ascii_strlower_n@plt+0x189c0>  // b.lo, b.ul, b.last
  41cde0:	mov	x0, x20
  41cde4:	bl	4039d8 <free@plt>
  41cde8:	cbz	x19, 41cdf4 <ascii_strlower_n@plt+0x189ec>
  41cdec:	mov	x0, x19
  41cdf0:	bl	4162cc <ascii_strlower_n@plt+0x11ec4>
  41cdf4:	mov	w0, w21
  41cdf8:	ldp	x20, x19, [sp, #64]
  41cdfc:	ldp	x22, x21, [sp, #48]
  41ce00:	ldp	x24, x23, [sp, #32]
  41ce04:	ldp	x29, x30, [sp, #16]
  41ce08:	add	sp, sp, #0x50
  41ce0c:	ret
  41ce10:	mov	w21, #0xffffffe4            	// #-28
  41ce14:	ldr	x0, [sp, #8]
  41ce18:	bl	4039d8 <free@plt>
  41ce1c:	cbnz	x20, 41cda4 <ascii_strlower_n@plt+0x1899c>
  41ce20:	b	41cde8 <ascii_strlower_n@plt+0x189e0>
  41ce24:	adrp	x1, 420000 <ascii_strlower_n@plt+0x1bbf8>
  41ce28:	adrp	x2, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41ce2c:	adrp	x4, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41ce30:	add	x1, x1, #0x41e
  41ce34:	add	x2, x2, #0xa87
  41ce38:	add	x4, x4, #0xd67
  41ce3c:	mov	w3, #0x150                 	// #336
  41ce40:	bl	403a98 <log_assert_failed_realm@plt>
  41ce44:	adrp	x1, 422000 <ascii_strlower_n@plt+0x1dbf8>
  41ce48:	adrp	x2, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41ce4c:	adrp	x4, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41ce50:	add	x1, x1, #0xc63
  41ce54:	add	x2, x2, #0xa87
  41ce58:	add	x4, x4, #0xd67
  41ce5c:	mov	w3, #0x151                 	// #337
  41ce60:	mov	w0, wzr
  41ce64:	bl	403a98 <log_assert_failed_realm@plt>
  41ce68:	adrp	x1, 421000 <ascii_strlower_n@plt+0x1cbf8>
  41ce6c:	adrp	x2, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41ce70:	adrp	x4, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41ce74:	add	x1, x1, #0xc49
  41ce78:	add	x2, x2, #0xa87
  41ce7c:	add	x4, x4, #0xafe
  41ce80:	mov	w3, #0x21                  	// #33
  41ce84:	mov	w0, wzr
  41ce88:	bl	403a98 <log_assert_failed_realm@plt>
  41ce8c:	sub	sp, sp, #0x60
  41ce90:	stp	x29, x30, [sp, #16]
  41ce94:	stp	x26, x25, [sp, #32]
  41ce98:	stp	x24, x23, [sp, #48]
  41ce9c:	stp	x22, x21, [sp, #64]
  41cea0:	stp	x20, x19, [sp, #80]
  41cea4:	add	x29, sp, #0x10
  41cea8:	stp	xzr, xzr, [sp]
  41ceac:	cbz	x0, 41d104 <ascii_strlower_n@plt+0x18cfc>
  41ceb0:	mov	x23, x3
  41ceb4:	cbz	x3, 41cf14 <ascii_strlower_n@plt+0x18b0c>
  41ceb8:	mov	w24, w4
  41cebc:	mov	x20, x2
  41cec0:	mov	x19, x1
  41cec4:	mov	x21, x0
  41cec8:	cbz	x2, 41cf10 <ascii_strlower_n@plt+0x18b08>
  41cecc:	tbz	w5, #0, 41cef0 <ascii_strlower_n@plt+0x18ae8>
  41ced0:	add	x1, sp, #0x8
  41ced4:	mov	x0, x23
  41ced8:	bl	4043e8 <dns_name_apply_idna@plt>
  41cedc:	mov	w22, w0
  41cee0:	tbnz	w0, #31, 41d05c <ascii_strlower_n@plt+0x18c54>
  41cee4:	ldr	x8, [sp, #8]
  41cee8:	cmp	w22, #0x0
  41ceec:	csel	x23, x23, x8, eq  // eq = none
  41cef0:	mov	x3, sp
  41cef4:	mov	x0, x19
  41cef8:	mov	x1, x20
  41cefc:	mov	x2, x23
  41cf00:	bl	4043f8 <dns_service_join@plt>
  41cf04:	tbnz	w0, #31, 41d058 <ascii_strlower_n@plt+0x18c50>
  41cf08:	ldr	x23, [sp]
  41cf0c:	b	41cf24 <ascii_strlower_n@plt+0x18b1c>
  41cf10:	cbz	x19, 41cf24 <ascii_strlower_n@plt+0x18b1c>
  41cf14:	mov	x20, xzr
  41cf18:	mov	x19, xzr
  41cf1c:	mov	w22, #0xffffffea            	// #-22
  41cf20:	b	41d080 <ascii_strlower_n@plt+0x18c78>
  41cf24:	tst	w24, #0x1
  41cf28:	mov	w20, #0x1                   	// #1
  41cf2c:	cinc	x22, x20, ne  // ne = any
  41cf30:	lsl	x8, x22, #3
  41cf34:	add	x1, x8, #0x18
  41cf38:	mov	w0, #0x1                   	// #1
  41cf3c:	bl	404068 <calloc@plt>
  41cf40:	mov	x19, x0
  41cf44:	cbz	x0, 41d068 <ascii_strlower_n@plt+0x18c60>
  41cf48:	mov	w0, #0x1                   	// #1
  41cf4c:	mov	w1, #0x21                  	// #33
  41cf50:	mov	x2, x23
  41cf54:	str	w20, [x19]
  41cf58:	str	x22, [x19, #16]
  41cf5c:	bl	415cc0 <ascii_strlower_n@plt+0x118b8>
  41cf60:	mov	x20, x0
  41cf64:	cbz	x0, 41d074 <ascii_strlower_n@plt+0x18c6c>
  41cf68:	ldr	x8, [x19, #8]
  41cf6c:	cbz	x8, 41cfa0 <ascii_strlower_n@plt+0x18b98>
  41cf70:	mov	x25, xzr
  41cf74:	add	x26, x19, #0x18
  41cf78:	ldr	x0, [x26, x25, lsl #3]
  41cf7c:	mov	x1, x20
  41cf80:	bl	4164bc <ascii_strlower_n@plt+0x120b4>
  41cf84:	mov	w22, w0
  41cf88:	tbnz	w0, #31, 41d080 <ascii_strlower_n@plt+0x18c78>
  41cf8c:	cbnz	w22, 41cfc8 <ascii_strlower_n@plt+0x18bc0>
  41cf90:	ldr	x8, [x19, #8]
  41cf94:	add	x25, x25, #0x1
  41cf98:	cmp	x25, x8
  41cf9c:	b.cc	41cf78 <ascii_strlower_n@plt+0x18b70>  // b.lo, b.ul, b.last
  41cfa0:	ldr	x9, [x19, #16]
  41cfa4:	cmp	x8, x9
  41cfa8:	b.cs	41d07c <ascii_strlower_n@plt+0x18c74>  // b.hs, b.nlast
  41cfac:	mov	x0, x20
  41cfb0:	bl	416010 <ascii_strlower_n@plt+0x11c08>
  41cfb4:	ldr	x8, [x19, #8]
  41cfb8:	add	x9, x8, #0x1
  41cfbc:	add	x8, x19, x8, lsl #3
  41cfc0:	str	x9, [x19, #8]
  41cfc4:	str	x0, [x8, #24]
  41cfc8:	tbz	w24, #0, 41d04c <ascii_strlower_n@plt+0x18c44>
  41cfcc:	mov	x0, x20
  41cfd0:	bl	4162cc <ascii_strlower_n@plt+0x11ec4>
  41cfd4:	mov	w0, #0x1                   	// #1
  41cfd8:	mov	w1, #0x10                  	// #16
  41cfdc:	mov	x2, x23
  41cfe0:	bl	415cc0 <ascii_strlower_n@plt+0x118b8>
  41cfe4:	mov	x20, x0
  41cfe8:	cbz	x0, 41d074 <ascii_strlower_n@plt+0x18c6c>
  41cfec:	ldr	x8, [x19, #8]
  41cff0:	cbz	x8, 41d024 <ascii_strlower_n@plt+0x18c1c>
  41cff4:	mov	x23, xzr
  41cff8:	add	x24, x19, #0x18
  41cffc:	ldr	x0, [x24, x23, lsl #3]
  41d000:	mov	x1, x20
  41d004:	bl	4164bc <ascii_strlower_n@plt+0x120b4>
  41d008:	mov	w22, w0
  41d00c:	tbnz	w0, #31, 41d080 <ascii_strlower_n@plt+0x18c78>
  41d010:	cbnz	w22, 41d04c <ascii_strlower_n@plt+0x18c44>
  41d014:	ldr	x8, [x19, #8]
  41d018:	add	x23, x23, #0x1
  41d01c:	cmp	x23, x8
  41d020:	b.cc	41cffc <ascii_strlower_n@plt+0x18bf4>  // b.lo, b.ul, b.last
  41d024:	ldr	x9, [x19, #16]
  41d028:	cmp	x8, x9
  41d02c:	b.cs	41d07c <ascii_strlower_n@plt+0x18c74>  // b.hs, b.nlast
  41d030:	mov	x0, x20
  41d034:	bl	416010 <ascii_strlower_n@plt+0x11c08>
  41d038:	ldr	x8, [x19, #8]
  41d03c:	add	x9, x8, #0x1
  41d040:	add	x8, x19, x8, lsl #3
  41d044:	str	x9, [x19, #8]
  41d048:	str	x0, [x8, #24]
  41d04c:	mov	w22, wzr
  41d050:	str	x19, [x21]
  41d054:	b	41d060 <ascii_strlower_n@plt+0x18c58>
  41d058:	mov	w22, w0
  41d05c:	mov	x20, xzr
  41d060:	mov	x19, xzr
  41d064:	b	41d080 <ascii_strlower_n@plt+0x18c78>
  41d068:	mov	x20, xzr
  41d06c:	mov	w22, #0xfffffff4            	// #-12
  41d070:	b	41d080 <ascii_strlower_n@plt+0x18c78>
  41d074:	mov	w22, #0xfffffff4            	// #-12
  41d078:	b	41d080 <ascii_strlower_n@plt+0x18c78>
  41d07c:	mov	w22, #0xffffffe4            	// #-28
  41d080:	ldr	x0, [sp]
  41d084:	bl	4039d8 <free@plt>
  41d088:	ldr	x0, [sp, #8]
  41d08c:	bl	4039d8 <free@plt>
  41d090:	cbz	x19, 41d0d8 <ascii_strlower_n@plt+0x18cd0>
  41d094:	ldr	w8, [x19]
  41d098:	cbz	w8, 41d124 <ascii_strlower_n@plt+0x18d1c>
  41d09c:	subs	w8, w8, #0x1
  41d0a0:	str	w8, [x19]
  41d0a4:	b.ne	41d0d8 <ascii_strlower_n@plt+0x18cd0>  // b.any
  41d0a8:	ldr	x8, [x19, #8]
  41d0ac:	cbz	x8, 41d0d0 <ascii_strlower_n@plt+0x18cc8>
  41d0b0:	mov	x21, xzr
  41d0b4:	add	x23, x19, #0x18
  41d0b8:	ldr	x0, [x23, x21, lsl #3]
  41d0bc:	bl	4162cc <ascii_strlower_n@plt+0x11ec4>
  41d0c0:	ldr	x8, [x19, #8]
  41d0c4:	add	x21, x21, #0x1
  41d0c8:	cmp	x21, x8
  41d0cc:	b.cc	41d0b8 <ascii_strlower_n@plt+0x18cb0>  // b.lo, b.ul, b.last
  41d0d0:	mov	x0, x19
  41d0d4:	bl	4039d8 <free@plt>
  41d0d8:	cbz	x20, 41d0e4 <ascii_strlower_n@plt+0x18cdc>
  41d0dc:	mov	x0, x20
  41d0e0:	bl	4162cc <ascii_strlower_n@plt+0x11ec4>
  41d0e4:	mov	w0, w22
  41d0e8:	ldp	x20, x19, [sp, #80]
  41d0ec:	ldp	x22, x21, [sp, #64]
  41d0f0:	ldp	x24, x23, [sp, #48]
  41d0f4:	ldp	x26, x25, [sp, #32]
  41d0f8:	ldp	x29, x30, [sp, #16]
  41d0fc:	add	sp, sp, #0x60
  41d100:	ret
  41d104:	adrp	x1, 420000 <ascii_strlower_n@plt+0x1bbf8>
  41d108:	adrp	x2, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41d10c:	adrp	x4, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41d110:	add	x1, x1, #0x41e
  41d114:	add	x2, x2, #0xa87
  41d118:	add	x4, x4, #0xdb6
  41d11c:	mov	w3, #0x17b                 	// #379
  41d120:	bl	403a98 <log_assert_failed_realm@plt>
  41d124:	adrp	x1, 421000 <ascii_strlower_n@plt+0x1cbf8>
  41d128:	adrp	x2, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41d12c:	adrp	x4, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41d130:	add	x1, x1, #0xc49
  41d134:	add	x2, x2, #0xa87
  41d138:	add	x4, x4, #0xafe
  41d13c:	mov	w3, #0x21                  	// #33
  41d140:	mov	w0, wzr
  41d144:	bl	403a98 <log_assert_failed_realm@plt>
  41d148:	sub	w8, w0, #0x1
  41d14c:	cmp	w8, #0x100
  41d150:	b.hi	41d180 <ascii_strlower_n@plt+0x18d78>  // b.pmore
  41d154:	adrp	x9, 425000 <ascii_strlower_n@plt+0x20bf8>
  41d158:	add	x9, x9, #0x498
  41d15c:	adr	x10, 41d174 <ascii_strlower_n@plt+0x18d6c>
  41d160:	ldrb	w11, [x9, x8]
  41d164:	add	x10, x10, x11, lsl #2
  41d168:	adrp	x0, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41d16c:	add	x0, x0, #0xe1b
  41d170:	br	x10
  41d174:	adrp	x0, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41d178:	add	x0, x0, #0xe1d
  41d17c:	ret
  41d180:	cmp	w0, #0x8, lsl #12
  41d184:	b.eq	41d514 <ascii_strlower_n@plt+0x1910c>  // b.none
  41d188:	mov	w8, #0x8001                	// #32769
  41d18c:	cmp	w0, w8
  41d190:	b.ne	41d1a0 <ascii_strlower_n@plt+0x18d98>  // b.any
  41d194:	adrp	x0, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41d198:	add	x0, x0, #0xf8c
  41d19c:	ret
  41d1a0:	mov	x0, xzr
  41d1a4:	ret
  41d1a8:	adrp	x0, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41d1ac:	add	x0, x0, #0xe20
  41d1b0:	ret
  41d1b4:	adrp	x0, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41d1b8:	add	x0, x0, #0xe23
  41d1bc:	ret
  41d1c0:	adrp	x0, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41d1c4:	add	x0, x0, #0xe26
  41d1c8:	ret
  41d1cc:	adrp	x0, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41d1d0:	add	x0, x0, #0xe2c
  41d1d4:	ret
  41d1d8:	adrp	x0, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41d1dc:	add	x0, x0, #0xe30
  41d1e0:	ret
  41d1e4:	adrp	x0, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41d1e8:	add	x0, x0, #0xe33
  41d1ec:	ret
  41d1f0:	adrp	x0, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41d1f4:	add	x0, x0, #0xe36
  41d1f8:	ret
  41d1fc:	adrp	x0, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41d200:	add	x0, x0, #0xe39
  41d204:	ret
  41d208:	adrp	x0, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41d20c:	add	x0, x0, #0xe3e
  41d210:	ret
  41d214:	adrp	x0, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41d218:	add	x0, x0, #0xe42
  41d21c:	ret
  41d220:	adrp	x0, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41d224:	add	x0, x0, #0xe46
  41d228:	ret
  41d22c:	adrp	x0, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41d230:	add	x0, x0, #0xe4c
  41d234:	ret
  41d238:	adrp	x0, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41d23c:	add	x0, x0, #0xe52
  41d240:	ret
  41d244:	adrp	x0, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41d248:	add	x0, x0, #0xe55
  41d24c:	ret
  41d250:	adrp	x0, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41d254:	add	x0, x0, #0xe59
  41d258:	ret
  41d25c:	adrp	x0, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41d260:	add	x0, x0, #0xe5c
  41d264:	ret
  41d268:	adrp	x0, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41d26c:	add	x0, x0, #0xe62
  41d270:	ret
  41d274:	adrp	x0, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41d278:	add	x0, x0, #0xe66
  41d27c:	ret
  41d280:	adrp	x0, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41d284:	add	x0, x0, #0xe6b
  41d288:	ret
  41d28c:	adrp	x0, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41d290:	add	x0, x0, #0xe6e
  41d294:	ret
  41d298:	adrp	x0, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41d29c:	add	x0, x0, #0xe73
  41d2a0:	ret
  41d2a4:	adrp	x0, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41d2a8:	add	x0, x0, #0xe7c
  41d2ac:	ret
  41d2b0:	adrp	x0, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41d2b4:	add	x0, x0, #0xe80
  41d2b8:	ret
  41d2bc:	adrp	x0, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41d2c0:	add	x0, x0, #0xe84
  41d2c4:	ret
  41d2c8:	adrp	x0, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41d2cc:	add	x0, x0, #0xe87
  41d2d0:	ret
  41d2d4:	adrp	x0, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41d2d8:	add	x0, x0, #0xe8c
  41d2dc:	ret
  41d2e0:	adrp	x0, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41d2e4:	add	x0, x0, #0xe91
  41d2e8:	ret
  41d2ec:	adrp	x0, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41d2f0:	add	x0, x0, #0xe95
  41d2f4:	ret
  41d2f8:	adrp	x0, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41d2fc:	add	x0, x0, #0xe99
  41d300:	ret
  41d304:	adrp	x0, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41d308:	add	x0, x0, #0xe9d
  41d30c:	ret
  41d310:	adrp	x0, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41d314:	add	x0, x0, #0xea4
  41d318:	ret
  41d31c:	adrp	x0, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41d320:	add	x0, x0, #0xea8
  41d324:	ret
  41d328:	adrp	x0, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41d32c:	add	x0, x0, #0xead
  41d330:	ret
  41d334:	adrp	x0, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41d338:	add	x0, x0, #0xeb3
  41d33c:	ret
  41d340:	adrp	x0, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41d344:	add	x0, x0, #0xeb6
  41d348:	ret
  41d34c:	adrp	x0, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41d350:	add	x0, x0, #0xebb
  41d354:	ret
  41d358:	adrp	x0, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41d35c:	add	x0, x0, #0xebe
  41d360:	ret
  41d364:	adrp	x0, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41d368:	add	x0, x0, #0xec4
  41d36c:	ret
  41d370:	adrp	x0, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41d374:	add	x0, x0, #0xec9
  41d378:	ret
  41d37c:	adrp	x0, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41d380:	add	x0, x0, #0xecd
  41d384:	ret
  41d388:	adrp	x0, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41d38c:	add	x0, x0, #0xed1
  41d390:	ret
  41d394:	adrp	x0, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41d398:	add	x0, x0, #0xed4
  41d39c:	ret
  41d3a0:	adrp	x0, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41d3a4:	add	x0, x0, #0xeda
  41d3a8:	ret
  41d3ac:	adrp	x0, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41d3b0:	add	x0, x0, #0xee3
  41d3b4:	ret
  41d3b8:	adrp	x0, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41d3bc:	add	x0, x0, #0xee9
  41d3c0:	ret
  41d3c4:	adrp	x0, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41d3c8:	add	x0, x0, #0xeee
  41d3cc:	ret
  41d3d0:	adrp	x0, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41d3d4:	add	x0, x0, #0xef5
  41d3d8:	ret
  41d3dc:	adrp	x0, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41d3e0:	add	x0, x0, #0xefb
  41d3e4:	ret
  41d3e8:	adrp	x0, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41d3ec:	add	x0, x0, #0xf01
  41d3f0:	ret
  41d3f4:	adrp	x0, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41d3f8:	add	x0, x0, #0xf0c
  41d3fc:	ret
  41d400:	adrp	x0, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41d404:	add	x0, x0, #0xf11
  41d408:	ret
  41d40c:	adrp	x0, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41d410:	add	x0, x0, #0xf15
  41d414:	ret
  41d418:	adrp	x0, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41d41c:	add	x0, x0, #0xf1b
  41d420:	ret
  41d424:	adrp	x0, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41d428:	add	x0, x0, #0xf20
  41d42c:	ret
  41d430:	adrp	x0, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41d434:	add	x0, x0, #0xf27
  41d438:	ret
  41d43c:	adrp	x0, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41d440:	add	x0, x0, #0xf2b
  41d444:	ret
  41d448:	adrp	x0, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41d44c:	add	x0, x0, #0xf33
  41d450:	ret
  41d454:	adrp	x0, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41d458:	add	x0, x0, #0xf3e
  41d45c:	ret
  41d460:	adrp	x0, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41d464:	add	x0, x0, #0xf42
  41d468:	ret
  41d46c:	adrp	x0, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41d470:	add	x0, x0, #0xf46
  41d474:	ret
  41d478:	adrp	x0, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41d47c:	add	x0, x0, #0xf4a
  41d480:	ret
  41d484:	adrp	x0, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41d488:	add	x0, x0, #0xf4e
  41d48c:	ret
  41d490:	adrp	x0, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41d494:	add	x0, x0, #0xf51
  41d498:	ret
  41d49c:	adrp	x0, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41d4a0:	add	x0, x0, #0xf57
  41d4a4:	ret
  41d4a8:	adrp	x0, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41d4ac:	add	x0, x0, #0xf5d
  41d4b0:	ret
  41d4b4:	adrp	x0, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41d4b8:	add	x0, x0, #0xf62
  41d4bc:	ret
  41d4c0:	adrp	x0, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41d4c4:	add	x0, x0, #0xf67
  41d4c8:	ret
  41d4cc:	adrp	x0, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41d4d0:	add	x0, x0, #0xf6c
  41d4d4:	ret
  41d4d8:	adrp	x0, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41d4dc:	add	x0, x0, #0xf71
  41d4e0:	ret
  41d4e4:	adrp	x0, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41d4e8:	add	x0, x0, #0xf77
  41d4ec:	ret
  41d4f0:	adrp	x0, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41d4f4:	add	x0, x0, #0xf7d
  41d4f8:	ret
  41d4fc:	adrp	x0, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41d500:	add	x0, x0, #0xf81
  41d504:	ret
  41d508:	adrp	x0, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41d50c:	add	x0, x0, #0xf85
  41d510:	ret
  41d514:	adrp	x0, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41d518:	add	x0, x0, #0xf89
  41d51c:	ret
  41d520:	stp	x29, x30, [sp, #-32]!
  41d524:	str	x19, [sp, #16]
  41d528:	mov	x29, sp
  41d52c:	cbz	x0, 41d65c <ascii_strlower_n@plt+0x19254>
  41d530:	mov	x19, x0
  41d534:	bl	403d28 <strlen@plt>
  41d538:	sub	x8, x0, #0x1
  41d53c:	cmp	x8, #0x9
  41d540:	b.hi	41d610 <ascii_strlower_n@plt+0x19208>  // b.pmore
  41d544:	adrp	x9, 425000 <ascii_strlower_n@plt+0x20bf8>
  41d548:	cmp	w0, #0x1
  41d54c:	add	x9, x9, #0x599
  41d550:	b.ne	41d55c <ascii_strlower_n@plt+0x19154>  // b.any
  41d554:	mov	w10, #0x1                   	// #1
  41d558:	b	41d568 <ascii_strlower_n@plt+0x19160>
  41d55c:	ldrb	w10, [x19, #1]
  41d560:	ldrb	w10, [x9, x10]
  41d564:	add	w10, w10, w0
  41d568:	ldrb	w11, [x19]
  41d56c:	ldrb	w8, [x19, x8]
  41d570:	ldrb	w12, [x9, x11]
  41d574:	ldrb	w8, [x9, x8]
  41d578:	add	x9, x12, w10, uxtw
  41d57c:	add	x8, x9, x8
  41d580:	cmp	w8, #0xb1
  41d584:	b.hi	41d610 <ascii_strlower_n@plt+0x19208>  // b.pmore
  41d588:	adrp	x9, 43e000 <ascii_strlower_n@plt+0x39bf8>
  41d58c:	lsl	x10, x8, #4
  41d590:	add	x9, x9, #0xc18
  41d594:	ldr	x12, [x9, x10]
  41d598:	cbz	x12, 41d610 <ascii_strlower_n@plt+0x19208>
  41d59c:	ldrb	w13, [x12]
  41d5a0:	eor	w10, w13, w11
  41d5a4:	tst	w10, #0xffffffdf
  41d5a8:	b.ne	41d610 <ascii_strlower_n@plt+0x19208>  // b.any
  41d5ac:	adrp	x10, 425000 <ascii_strlower_n@plt+0x20bf8>
  41d5b0:	add	x10, x10, #0x699
  41d5b4:	ldrb	w14, [x10, x11]
  41d5b8:	ldrb	w13, [x10, x13]
  41d5bc:	cmp	w14, w13
  41d5c0:	cset	w13, eq  // eq = none
  41d5c4:	cbz	w11, 41d5f8 <ascii_strlower_n@plt+0x191f0>
  41d5c8:	b.ne	41d5f8 <ascii_strlower_n@plt+0x191f0>  // b.any
  41d5cc:	add	x11, x12, #0x1
  41d5d0:	add	x12, x19, #0x1
  41d5d4:	ldrb	w16, [x12], #1
  41d5d8:	ldrb	w13, [x11], #1
  41d5dc:	ldrb	w14, [x10, x16]
  41d5e0:	ldrb	w15, [x10, x13]
  41d5e4:	cmp	w14, w15
  41d5e8:	cset	w13, eq  // eq = none
  41d5ec:	cbz	x16, 41d5f8 <ascii_strlower_n@plt+0x191f0>
  41d5f0:	cmp	w14, w15
  41d5f4:	b.eq	41d5d4 <ascii_strlower_n@plt+0x191cc>  // b.none
  41d5f8:	cbz	w13, 41d610 <ascii_strlower_n@plt+0x19208>
  41d5fc:	add	x8, x9, x8, lsl #4
  41d600:	ldr	w0, [x8, #8]
  41d604:	ldr	x19, [sp, #16]
  41d608:	ldp	x29, x30, [sp], #32
  41d60c:	ret
  41d610:	adrp	x1, 422000 <ascii_strlower_n@plt+0x1dbf8>
  41d614:	add	x1, x1, #0xc5e
  41d618:	mov	w2, #0x4                   	// #4
  41d61c:	mov	x0, x19
  41d620:	bl	403fb8 <strncasecmp@plt>
  41d624:	cbz	w0, 41d638 <ascii_strlower_n@plt+0x19230>
  41d628:	mov	w0, #0xffffffff            	// #-1
  41d62c:	ldr	x19, [sp, #16]
  41d630:	ldp	x29, x30, [sp], #32
  41d634:	ret
  41d638:	add	x0, x19, #0x4
  41d63c:	add	x2, x29, #0x1c
  41d640:	mov	w1, wzr
  41d644:	bl	4043a8 <safe_atou_full@plt>
  41d648:	tbnz	w0, #31, 41d628 <ascii_strlower_n@plt+0x19220>
  41d64c:	ldr	w0, [x29, #28]
  41d650:	cmp	w0, #0x10, lsl #12
  41d654:	b.cc	41d604 <ascii_strlower_n@plt+0x191fc>  // b.lo, b.ul, b.last
  41d658:	b	41d628 <ascii_strlower_n@plt+0x19220>
  41d65c:	adrp	x1, 41e000 <ascii_strlower_n@plt+0x19bf8>
  41d660:	adrp	x2, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41d664:	adrp	x4, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41d668:	add	x1, x1, #0x712
  41d66c:	add	x2, x2, #0xf93
  41d670:	add	x4, x4, #0xfaa
  41d674:	mov	w3, #0x18                  	// #24
  41d678:	bl	403a98 <log_assert_failed_realm@plt>
  41d67c:	and	w8, w0, #0xffff
  41d680:	sub	w9, w8, #0xf9
  41d684:	cmp	w9, #0x6
  41d688:	b.hi	41d6a8 <ascii_strlower_n@plt+0x192a0>  // b.pmore
  41d68c:	mov	w10, #0x1                   	// #1
  41d690:	lsl	w9, w10, w9
  41d694:	mov	w10, #0x4f                  	// #79
  41d698:	tst	w9, w10
  41d69c:	b.eq	41d6a8 <ascii_strlower_n@plt+0x192a0>  // b.none
  41d6a0:	mov	w0, #0x1                   	// #1
  41d6a4:	ret
  41d6a8:	cmp	w8, #0x29
  41d6ac:	b.eq	41d6a0 <ascii_strlower_n@plt+0x19298>  // b.none
  41d6b0:	cbz	w8, 41d6a0 <ascii_strlower_n@plt+0x19298>
  41d6b4:	mov	w0, wzr
  41d6b8:	ret
  41d6bc:	and	w8, w0, #0xffff
  41d6c0:	cmp	w8, #0xff
  41d6c4:	cset	w0, eq  // eq = none
  41d6c8:	ret
  41d6cc:	and	w8, w0, #0xffff
  41d6d0:	cmp	w8, #0x2e
  41d6d4:	b.hi	41d6f4 <ascii_strlower_n@plt+0x192ec>  // b.pmore
  41d6d8:	and	x9, x0, #0xffff
  41d6dc:	mov	w10, #0x1                   	// #1
  41d6e0:	lsl	x9, x10, x9
  41d6e4:	mov	x10, #0x1                   	// #1
  41d6e8:	movk	x10, #0x4200, lsl #32
  41d6ec:	tst	x9, x10
  41d6f0:	b.ne	41d700 <ascii_strlower_n@plt+0x192f8>  // b.any
  41d6f4:	sub	w8, w8, #0xf9
  41d6f8:	cmp	w8, #0x2
  41d6fc:	b.cs	41d708 <ascii_strlower_n@plt+0x19300>  // b.hs, b.nlast
  41d700:	mov	w0, wzr
  41d704:	ret
  41d708:	mov	w0, #0x1                   	// #1
  41d70c:	ret
  41d710:	and	w8, w0, #0xffff
  41d714:	sub	w8, w8, #0xfb
  41d718:	cmp	w8, #0x2
  41d71c:	cset	w0, cc  // cc = lo, ul, last
  41d720:	ret
  41d724:	sub	w8, w0, #0xfb
  41d728:	and	w9, w8, #0xffff
  41d72c:	cmp	w9, #0x4
  41d730:	b.hi	41d744 <ascii_strlower_n@plt+0x1933c>  // b.pmore
  41d734:	mov	w9, #0xc                   	// #12
  41d738:	lsr	w8, w9, w8
  41d73c:	and	w0, w8, #0x1
  41d740:	ret
  41d744:	mov	w0, #0x1                   	// #1
  41d748:	ret
  41d74c:	and	w8, w0, #0xffff
  41d750:	cmp	w8, #0xff
  41d754:	cset	w0, ne  // ne = any
  41d758:	ret
  41d75c:	and	w9, w0, #0xffff
  41d760:	mov	w8, w0
  41d764:	cmp	w9, #0x32
  41d768:	mov	w0, wzr
  41d76c:	b.hi	41d794 <ascii_strlower_n@plt+0x1938c>  // b.pmore
  41d770:	and	x8, x8, #0xffff
  41d774:	mov	w10, #0x1                   	// #1
  41d778:	lsl	x8, x10, x8
  41d77c:	mov	x10, #0x21                  	// #33
  41d780:	movk	x10, #0x4300, lsl #16
  41d784:	movk	x10, #0xc280, lsl #32
  41d788:	movk	x10, #0x4, lsl #48
  41d78c:	tst	x8, x10
  41d790:	b.ne	41d7b4 <ascii_strlower_n@plt+0x193ac>  // b.any
  41d794:	sub	w8, w9, #0xf9
  41d798:	cmp	w8, #0x6
  41d79c:	b.hi	41d7b8 <ascii_strlower_n@plt+0x193b0>  // b.pmore
  41d7a0:	mov	w9, #0x1                   	// #1
  41d7a4:	lsl	w8, w9, w8
  41d7a8:	mov	w9, #0x4f                  	// #79
  41d7ac:	tst	w8, w9
  41d7b0:	b.eq	41d7b8 <ascii_strlower_n@plt+0x193b0>  // b.none
  41d7b4:	ret
  41d7b8:	mov	w0, #0x1                   	// #1
  41d7bc:	ret
  41d7c0:	and	w9, w0, #0xffff
  41d7c4:	mov	w8, w0
  41d7c8:	cmp	w9, #0x32
  41d7cc:	mov	w0, wzr
  41d7d0:	b.ls	41d7fc <ascii_strlower_n@plt+0x193f4>  // b.plast
  41d7d4:	sub	w8, w9, #0xf9
  41d7d8:	cmp	w8, #0x6
  41d7dc:	b.hi	41d7f4 <ascii_strlower_n@plt+0x193ec>  // b.pmore
  41d7e0:	mov	w9, #0x1                   	// #1
  41d7e4:	lsl	w8, w9, w8
  41d7e8:	mov	w9, #0x4f                  	// #79
  41d7ec:	tst	w8, w9
  41d7f0:	b.ne	41d81c <ascii_strlower_n@plt+0x19414>  // b.any
  41d7f4:	mov	w0, #0x1                   	// #1
  41d7f8:	ret
  41d7fc:	and	x8, x8, #0xffff
  41d800:	mov	w10, #0x1                   	// #1
  41d804:	lsl	x8, x10, x8
  41d808:	mov	x10, #0x41                  	// #65
  41d80c:	movk	x10, #0x280, lsl #32
  41d810:	movk	x10, #0x4, lsl #48
  41d814:	tst	x8, x10
  41d818:	b.eq	41d7d4 <ascii_strlower_n@plt+0x193cc>  // b.none
  41d81c:	ret
  41d820:	sub	w8, w0, #0x2
  41d824:	and	w9, w8, #0xffff
  41d828:	cmp	w9, #0x31
  41d82c:	b.hi	41d848 <ascii_strlower_n@plt+0x19440>  // b.pmore
  41d830:	mov	x9, #0x11                  	// #17
  41d834:	movk	x9, #0x4000, lsl #32
  41d838:	movk	x9, #0x2, lsl #48
  41d83c:	lsr	x8, x9, x8
  41d840:	and	w0, w8, #0x1
  41d844:	ret
  41d848:	mov	w0, wzr
  41d84c:	ret
  41d850:	sub	w8, w0, #0x2b
  41d854:	and	w9, w8, #0xffff
  41d858:	cmp	w9, #0x8
  41d85c:	b.hi	41d870 <ascii_strlower_n@plt+0x19468>  // b.pmore
  41d860:	mov	w9, #0x1b9                 	// #441
  41d864:	lsr	w8, w9, w8
  41d868:	and	w0, w8, #0x1
  41d86c:	ret
  41d870:	mov	w0, wzr
  41d874:	ret
  41d878:	and	w8, w0, #0xffff
  41d87c:	cmp	w8, #0x26
  41d880:	b.hi	41d8ac <ascii_strlower_n@plt+0x194a4>  // b.pmore
  41d884:	and	x9, x0, #0xffff
  41d888:	mov	w10, #0x1                   	// #1
  41d88c:	lsl	x9, x10, x9
  41d890:	mov	x10, #0x4f98                	// #20376
  41d894:	movk	x10, #0x4000, lsl #16
  41d898:	movk	x10, #0x40, lsl #32
  41d89c:	tst	x9, x10
  41d8a0:	b.eq	41d8ac <ascii_strlower_n@plt+0x194a4>  // b.none
  41d8a4:	mov	w0, #0x1                   	// #1
  41d8a8:	ret
  41d8ac:	sub	w8, w8, #0xfd
  41d8b0:	cmp	w8, #0x2
  41d8b4:	b.cc	41d8a4 <ascii_strlower_n@plt+0x1949c>  // b.lo, b.ul, b.last
  41d8b8:	mov	w0, wzr
  41d8bc:	ret
  41d8c0:	and	w8, w0, #0xffff
  41d8c4:	cmp	w8, #0x3d
  41d8c8:	b.hi	41d8f0 <ascii_strlower_n@plt+0x194e8>  // b.pmore
  41d8cc:	and	x9, x0, #0xffff
  41d8d0:	mov	w10, #0x1                   	// #1
  41d8d4:	lsl	x9, x10, x9
  41d8d8:	mov	x10, #0x382000000000        	// #61710090108928
  41d8dc:	movk	x10, #0x3011, lsl #48
  41d8e0:	tst	x9, x10
  41d8e4:	b.eq	41d8f0 <ascii_strlower_n@plt+0x194e8>  // b.none
  41d8e8:	mov	w0, #0x1                   	// #1
  41d8ec:	ret
  41d8f0:	cmp	w8, #0x101
  41d8f4:	b.eq	41d8e8 <ascii_strlower_n@plt+0x194e0>  // b.none
  41d8f8:	mov	w0, wzr
  41d8fc:	ret
  41d900:	and	w8, w0, #0xffff
  41d904:	cmp	w8, #0x1
  41d908:	b.eq	41d924 <ascii_strlower_n@plt+0x1951c>  // b.none
  41d90c:	cmp	w8, #0xff
  41d910:	b.eq	41d92c <ascii_strlower_n@plt+0x19524>  // b.none
  41d914:	cmp	w8, #0x1c
  41d918:	b.ne	41d934 <ascii_strlower_n@plt+0x1952c>  // b.any
  41d91c:	mov	w0, #0xa                   	// #10
  41d920:	ret
  41d924:	mov	w0, #0x2                   	// #2
  41d928:	ret
  41d92c:	mov	w0, wzr
  41d930:	ret
  41d934:	mov	w0, #0xffffffea            	// #-22
  41d938:	ret
  41d93c:	and	w8, w0, #0xffff
  41d940:	adrp	x9, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41d944:	add	x9, x9, #0xf7d
  41d948:	adrp	x10, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41d94c:	cmp	w8, #0xff
  41d950:	add	x10, x10, #0xfd1
  41d954:	csel	x9, x9, xzr, eq  // eq = none
  41d958:	cmp	w8, #0x1
  41d95c:	csel	x0, x10, x9, eq  // eq = none
  41d960:	ret
  41d964:	stp	x29, x30, [sp, #-32]!
  41d968:	str	x19, [sp, #16]
  41d96c:	mov	x29, sp
  41d970:	cbz	x0, 41d9b0 <ascii_strlower_n@plt+0x195a8>
  41d974:	adrp	x1, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41d978:	add	x1, x1, #0xfd1
  41d97c:	mov	x19, x0
  41d980:	bl	4042c8 <strcasecmp@plt>
  41d984:	cbz	w0, 41d9c0 <ascii_strlower_n@plt+0x195b8>
  41d988:	adrp	x1, 423000 <ascii_strlower_n@plt+0x1ebf8>
  41d98c:	add	x1, x1, #0xf7d
  41d990:	mov	x0, x19
  41d994:	bl	4042c8 <strcasecmp@plt>
  41d998:	cmp	w0, #0x0
  41d99c:	mov	w8, #0xff                  	// #255
  41d9a0:	csinv	w0, w8, wzr, eq  // eq = none
  41d9a4:	ldr	x19, [sp, #16]
  41d9a8:	ldp	x29, x30, [sp], #32
  41d9ac:	ret
  41d9b0:	mov	w0, #0xffffffff            	// #-1
  41d9b4:	ldr	x19, [sp, #16]
  41d9b8:	ldp	x29, x30, [sp], #32
  41d9bc:	ret
  41d9c0:	mov	w0, #0x1                   	// #1
  41d9c4:	ldr	x19, [sp, #16]
  41d9c8:	ldp	x29, x30, [sp], #32
  41d9cc:	ret
  41d9d0:	add	w8, w0, #0x1
  41d9d4:	and	w9, w8, #0xff
  41d9d8:	cmp	w9, #0x5
  41d9dc:	b.cs	41d9f4 <ascii_strlower_n@plt+0x195ec>  // b.hs, b.nlast
  41d9e0:	adrp	x9, 43f000 <ascii_strlower_n@plt+0x3abf8>
  41d9e4:	sxtb	x8, w8
  41d9e8:	add	x9, x9, #0x738
  41d9ec:	ldr	x0, [x9, x8, lsl #3]
  41d9f0:	ret
  41d9f4:	and	w8, w0, #0xff
  41d9f8:	sub	w8, w8, #0x4
  41d9fc:	adrp	x9, 424000 <ascii_strlower_n@plt+0x1fbf8>
  41da00:	add	x9, x9, #0x32
  41da04:	cmp	w8, #0xfb
  41da08:	csel	x0, x9, xzr, cc  // cc = lo, ul, last
  41da0c:	ret
  41da10:	add	w8, w0, #0x1
  41da14:	and	w9, w8, #0xff
  41da18:	cmp	w9, #0x3
  41da1c:	b.cs	41da34 <ascii_strlower_n@plt+0x1962c>  // b.hs, b.nlast
  41da20:	adrp	x9, 43f000 <ascii_strlower_n@plt+0x3abf8>
  41da24:	sxtb	x8, w8
  41da28:	add	x9, x9, #0x760
  41da2c:	ldr	x0, [x9, x8, lsl #3]
  41da30:	ret
  41da34:	and	w8, w0, #0xff
  41da38:	sub	w8, w8, #0x2
  41da3c:	adrp	x9, 424000 <ascii_strlower_n@plt+0x1fbf8>
  41da40:	add	x9, x9, #0x32
  41da44:	cmp	w8, #0xfd
  41da48:	csel	x0, x9, xzr, cc  // cc = lo, ul, last
  41da4c:	ret
  41da50:	add	w8, w0, #0x1
  41da54:	and	w9, w8, #0xff
  41da58:	cmp	w9, #0x4
  41da5c:	b.cs	41da74 <ascii_strlower_n@plt+0x1966c>  // b.hs, b.nlast
  41da60:	adrp	x9, 43f000 <ascii_strlower_n@plt+0x3abf8>
  41da64:	sxtb	x8, w8
  41da68:	add	x9, x9, #0x778
  41da6c:	ldr	x0, [x9, x8, lsl #3]
  41da70:	ret
  41da74:	and	w8, w0, #0xff
  41da78:	sub	w8, w8, #0x3
  41da7c:	adrp	x9, 424000 <ascii_strlower_n@plt+0x1fbf8>
  41da80:	add	x9, x9, #0x32
  41da84:	cmp	w8, #0xfc
  41da88:	csel	x0, x9, xzr, cc  // cc = lo, ul, last
  41da8c:	ret
  41da90:	stp	x29, x30, [sp, #-16]!
  41da94:	mov	x29, sp
  41da98:	cbz	x0, 41db48 <ascii_strlower_n@plt+0x19740>
  41da9c:	ldr	x8, [x0, #8]
  41daa0:	ldrh	w8, [x8, #6]
  41daa4:	cmp	w8, #0x30
  41daa8:	b.ne	41db68 <ascii_strlower_n@plt+0x19760>  // b.any
  41daac:	ldrh	w8, [x0, #80]
  41dab0:	ldrh	w10, [x0, #82]
  41dab4:	ldr	x9, [x0, #96]
  41dab8:	tst	w1, #0x1
  41dabc:	and	w11, w8, #0xffffff7f
  41dac0:	lsl	w10, w10, #16
  41dac4:	csel	w8, w11, w8, ne  // ne = any
  41dac8:	rev	w10, w10
  41dacc:	add	w8, w10, w8
  41dad0:	cbz	x9, 41db3c <ascii_strlower_n@plt+0x19734>
  41dad4:	ldr	x10, [x0, #88]
  41dad8:	cmp	x9, #0x1
  41dadc:	b.ne	41dae8 <ascii_strlower_n@plt+0x196e0>  // b.any
  41dae0:	mov	x11, xzr
  41dae4:	b	41db1c <ascii_strlower_n@plt+0x19714>
  41dae8:	and	x11, x9, #0xfffffffffffffffe
  41daec:	mov	w12, wzr
  41daf0:	add	x13, x10, #0x1
  41daf4:	mov	x14, x11
  41daf8:	ldurb	w15, [x13, #-1]
  41dafc:	ldrb	w16, [x13], #2
  41db00:	subs	x14, x14, #0x2
  41db04:	add	w8, w8, w15, lsl #8
  41db08:	add	w12, w12, w16
  41db0c:	b.ne	41daf8 <ascii_strlower_n@plt+0x196f0>  // b.any
  41db10:	cmp	x9, x11
  41db14:	add	w8, w12, w8
  41db18:	b.eq	41db3c <ascii_strlower_n@plt+0x19734>  // b.none
  41db1c:	ldrb	w12, [x10, x11]
  41db20:	tst	x11, #0x1
  41db24:	add	x11, x11, #0x1
  41db28:	lsl	w13, w12, #8
  41db2c:	csel	w12, w13, w12, eq  // eq = none
  41db30:	cmp	x11, x9
  41db34:	add	w8, w12, w8
  41db38:	b.cc	41db1c <ascii_strlower_n@plt+0x19714>  // b.lo, b.ul, b.last
  41db3c:	add	w0, w8, w8, lsr #16
  41db40:	ldp	x29, x30, [sp], #16
  41db44:	ret
  41db48:	adrp	x1, 424000 <ascii_strlower_n@plt+0x1fbf8>
  41db4c:	adrp	x2, 424000 <ascii_strlower_n@plt+0x1fbf8>
  41db50:	adrp	x4, 424000 <ascii_strlower_n@plt+0x1fbf8>
  41db54:	add	x1, x1, #0x84
  41db58:	add	x2, x2, #0x8e
  41db5c:	add	x4, x4, #0xb0
  41db60:	mov	w3, #0x2a                  	// #42
  41db64:	bl	403a98 <log_assert_failed_realm@plt>
  41db68:	adrp	x1, 424000 <ascii_strlower_n@plt+0x1fbf8>
  41db6c:	adrp	x2, 424000 <ascii_strlower_n@plt+0x1fbf8>
  41db70:	adrp	x4, 424000 <ascii_strlower_n@plt+0x1fbf8>
  41db74:	add	x1, x1, #0xe3
  41db78:	add	x2, x2, #0x8e
  41db7c:	add	x4, x4, #0xb0
  41db80:	mov	w3, #0x2b                  	// #43
  41db84:	mov	w0, wzr
  41db88:	bl	403a98 <log_assert_failed_realm@plt>
  41db8c:	sub	sp, sp, #0x50
  41db90:	cmp	x2, #0x2
  41db94:	stp	x29, x30, [sp, #16]
  41db98:	stp	x24, x23, [sp, #32]
  41db9c:	stp	x22, x21, [sp, #48]
  41dba0:	stp	x20, x19, [sp, #64]
  41dba4:	add	x29, sp, #0x10
  41dba8:	str	x0, [sp, #8]
  41dbac:	b.cs	41dbb8 <ascii_strlower_n@plt+0x197b0>  // b.hs, b.nlast
  41dbb0:	mov	w21, #0xffffff97            	// #-105
  41dbb4:	b	41dc70 <ascii_strlower_n@plt+0x19868>
  41dbb8:	add	x0, sp, #0x8
  41dbbc:	mov	w3, wzr
  41dbc0:	mov	x20, x2
  41dbc4:	mov	x19, x1
  41dbc8:	bl	404108 <dns_label_unescape@plt>
  41dbcc:	mov	w21, w0
  41dbd0:	tbnz	w0, #31, 41dc70 <ascii_strlower_n@plt+0x19868>
  41dbd4:	mov	x23, xzr
  41dbd8:	mov	w24, #0x2e                  	// #46
  41dbdc:	cbz	w21, 41dc48 <ascii_strlower_n@plt+0x19840>
  41dbe0:	mov	w22, w21
  41dbe4:	add	x8, x22, #0x2
  41dbe8:	cmp	x20, x8
  41dbec:	b.cc	41dbb0 <ascii_strlower_n@plt+0x197a8>  // b.lo, b.ul, b.last
  41dbf0:	mov	w1, #0x2e                  	// #46
  41dbf4:	mov	x0, x19
  41dbf8:	mov	x2, x22
  41dbfc:	bl	404148 <memchr@plt>
  41dc00:	cbnz	x0, 41dc54 <ascii_strlower_n@plt+0x1984c>
  41dc04:	mov	x0, x19
  41dc08:	mov	x1, x22
  41dc0c:	bl	404408 <ascii_strlower_n@plt>
  41dc10:	add	w8, w21, #0x1
  41dc14:	sxtw	x8, w8
  41dc18:	strb	w24, [x19, x22]
  41dc1c:	add	x19, x19, x8
  41dc20:	sub	x20, x20, x8
  41dc24:	add	x0, sp, #0x8
  41dc28:	mov	x1, x19
  41dc2c:	mov	x2, x20
  41dc30:	mov	w3, wzr
  41dc34:	add	x23, x23, x8
  41dc38:	bl	404108 <dns_label_unescape@plt>
  41dc3c:	mov	w21, w0
  41dc40:	tbz	w0, #31, 41dbdc <ascii_strlower_n@plt+0x197d4>
  41dc44:	b	41dc70 <ascii_strlower_n@plt+0x19868>
  41dc48:	cbz	x23, 41dc5c <ascii_strlower_n@plt+0x19854>
  41dc4c:	mov	w21, w23
  41dc50:	b	41dc70 <ascii_strlower_n@plt+0x19868>
  41dc54:	mov	w21, #0xffffffea            	// #-22
  41dc58:	b	41dc70 <ascii_strlower_n@plt+0x19868>
  41dc5c:	cmp	x20, #0x2
  41dc60:	b.ls	41dc8c <ascii_strlower_n@plt+0x19884>  // b.plast
  41dc64:	mov	w8, #0x2e                  	// #46
  41dc68:	strh	w8, [x19]
  41dc6c:	mov	w21, #0x1                   	// #1
  41dc70:	mov	w0, w21
  41dc74:	ldp	x20, x19, [sp, #64]
  41dc78:	ldp	x22, x21, [sp, #48]
  41dc7c:	ldp	x24, x23, [sp, #32]
  41dc80:	ldp	x29, x30, [sp, #16]
  41dc84:	add	sp, sp, #0x50
  41dc88:	ret
  41dc8c:	adrp	x1, 424000 <ascii_strlower_n@plt+0x1fbf8>
  41dc90:	adrp	x2, 424000 <ascii_strlower_n@plt+0x1fbf8>
  41dc94:	adrp	x4, 424000 <ascii_strlower_n@plt+0x1fbf8>
  41dc98:	add	x1, x1, #0x108
  41dc9c:	add	x2, x2, #0x8e
  41dca0:	add	x4, x4, #0x117
  41dca4:	mov	w3, #0x65                  	// #101
  41dca8:	mov	w0, wzr
  41dcac:	bl	403a98 <log_assert_failed_realm@plt>
  41dcb0:	mov	w0, #0xffffffa1            	// #-95
  41dcb4:	ret
  41dcb8:	mov	w0, #0xffffffa1            	// #-95
  41dcbc:	ret
  41dcc0:	mov	w0, #0xffffffa1            	// #-95
  41dcc4:	ret
  41dcc8:	mov	w0, #0xffffffa1            	// #-95
  41dccc:	ret
  41dcd0:	mov	w0, #0xffffffa1            	// #-95
  41dcd4:	ret
  41dcd8:	mov	w0, #0xffffffa1            	// #-95
  41dcdc:	ret
  41dce0:	mov	w0, #0xffffffa1            	// #-95
  41dce4:	ret
  41dce8:	mov	w0, #0xffffffa1            	// #-95
  41dcec:	ret
  41dcf0:	mov	w0, #0xffffffa1            	// #-95
  41dcf4:	ret
  41dcf8:	mov	w0, #0xffffffa1            	// #-95
  41dcfc:	ret
  41dd00:	cmp	w0, #0xa
  41dd04:	b.ls	41dd10 <ascii_strlower_n@plt+0x19908>  // b.plast
  41dd08:	mov	x0, xzr
  41dd0c:	ret
  41dd10:	adrp	x8, 43f000 <ascii_strlower_n@plt+0x3abf8>
  41dd14:	add	x8, x8, #0x798
  41dd18:	ldr	x0, [x8, w0, uxtw #3]
  41dd1c:	ret
  41dd20:	stp	x29, x30, [sp, #-16]!
  41dd24:	mov	x2, x0
  41dd28:	adrp	x0, 43f000 <ascii_strlower_n@plt+0x3abf8>
  41dd2c:	add	x0, x0, #0x798
  41dd30:	mov	w1, #0xb                   	// #11
  41dd34:	mov	x29, sp
  41dd38:	bl	404208 <string_table_lookup@plt>
  41dd3c:	ldp	x29, x30, [sp], #16
  41dd40:	ret
  41dd44:	cmp	w0, #0x3
  41dd48:	b.ls	41dd54 <ascii_strlower_n@plt+0x1994c>  // b.plast
  41dd4c:	mov	x0, xzr
  41dd50:	ret
  41dd54:	adrp	x8, 43f000 <ascii_strlower_n@plt+0x3abf8>
  41dd58:	add	x8, x8, #0x7f0
  41dd5c:	ldr	x0, [x8, w0, uxtw #3]
  41dd60:	ret
  41dd64:	stp	x29, x30, [sp, #-16]!
  41dd68:	mov	x2, x0
  41dd6c:	adrp	x0, 43f000 <ascii_strlower_n@plt+0x3abf8>
  41dd70:	add	x0, x0, #0x7f0
  41dd74:	mov	w1, #0x4                   	// #4
  41dd78:	mov	x29, sp
  41dd7c:	bl	404208 <string_table_lookup@plt>
  41dd80:	ldp	x29, x30, [sp], #16
  41dd84:	ret
  41dd88:	stp	x29, x30, [sp, #-64]!
  41dd8c:	mov	x29, sp
  41dd90:	stp	x19, x20, [sp, #16]
  41dd94:	adrp	x20, 43e000 <ascii_strlower_n@plt+0x39bf8>
  41dd98:	add	x20, x20, #0x2c0
  41dd9c:	stp	x21, x22, [sp, #32]
  41dda0:	adrp	x21, 43e000 <ascii_strlower_n@plt+0x39bf8>
  41dda4:	add	x21, x21, #0x2b8
  41dda8:	sub	x20, x20, x21
  41ddac:	mov	w22, w0
  41ddb0:	stp	x23, x24, [sp, #48]
  41ddb4:	mov	x23, x1
  41ddb8:	mov	x24, x2
  41ddbc:	bl	403920 <__libc_start_main@plt-0x38>
  41ddc0:	cmp	xzr, x20, asr #3
  41ddc4:	b.eq	41ddf0 <ascii_strlower_n@plt+0x199e8>  // b.none
  41ddc8:	asr	x20, x20, #3
  41ddcc:	mov	x19, #0x0                   	// #0
  41ddd0:	ldr	x3, [x21, x19, lsl #3]
  41ddd4:	mov	x2, x24
  41ddd8:	add	x19, x19, #0x1
  41dddc:	mov	x1, x23
  41dde0:	mov	w0, w22
  41dde4:	blr	x3
  41dde8:	cmp	x20, x19
  41ddec:	b.ne	41ddd0 <ascii_strlower_n@plt+0x199c8>  // b.any
  41ddf0:	ldp	x19, x20, [sp, #16]
  41ddf4:	ldp	x21, x22, [sp, #32]
  41ddf8:	ldp	x23, x24, [sp, #48]
  41ddfc:	ldp	x29, x30, [sp], #64
  41de00:	ret
  41de04:	nop
  41de08:	ret

Disassembly of section .fini:

000000000041de0c <.fini>:
  41de0c:	stp	x29, x30, [sp, #-16]!
  41de10:	mov	x29, sp
  41de14:	ldp	x29, x30, [sp], #16
  41de18:	ret
