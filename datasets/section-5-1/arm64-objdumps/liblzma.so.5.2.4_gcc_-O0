
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//liblzma.so.5.2.4_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000003058 <.init>:
    3058:	stp	x29, x30, [sp, #-16]!
    305c:	mov	x29, sp
    3060:	bl	3570 <pthread_cond_timedwait@plt+0x10>
    3064:	ldp	x29, x30, [sp], #16
    3068:	ret

Disassembly of section .plt:

0000000000003070 <memcpy@plt-0x20>:
    3070:	stp	x16, x30, [sp, #-16]!
    3074:	adrp	x16, 46000 <lzma_mode_is_supported@@XZ_5.0+0x2b368>
    3078:	ldr	x17, [x16, #4088]
    307c:	add	x16, x16, #0xff8
    3080:	br	x17
    3084:	nop
    3088:	nop
    308c:	nop

0000000000003090 <memcpy@plt>:
    3090:	adrp	x16, 47000 <memcpy@GLIBC_2.17>
    3094:	ldr	x17, [x16]
    3098:	add	x16, x16, #0x0
    309c:	br	x17

00000000000030a0 <lzma_index_iter_rewind@plt>:
    30a0:	adrp	x16, 47000 <memcpy@GLIBC_2.17>
    30a4:	ldr	x17, [x16, #8]
    30a8:	add	x16, x16, #0x8
    30ac:	br	x17

00000000000030b0 <memmove@plt>:
    30b0:	adrp	x16, 47000 <memcpy@GLIBC_2.17>
    30b4:	ldr	x17, [x16, #16]
    30b8:	add	x16, x16, #0x10
    30bc:	br	x17

00000000000030c0 <pthread_sigmask@plt>:
    30c0:	adrp	x16, 47000 <memcpy@GLIBC_2.17>
    30c4:	ldr	x17, [x16, #24]
    30c8:	add	x16, x16, #0x18
    30cc:	br	x17

00000000000030d0 <lzma_block_buffer_encode@plt>:
    30d0:	adrp	x16, 47000 <memcpy@GLIBC_2.17>
    30d4:	ldr	x17, [x16, #32]
    30d8:	add	x16, x16, #0x20
    30dc:	br	x17

00000000000030e0 <lzma_check_is_supported@plt>:
    30e0:	adrp	x16, 47000 <memcpy@GLIBC_2.17>
    30e4:	ldr	x17, [x16, #40]
    30e8:	add	x16, x16, #0x28
    30ec:	br	x17

00000000000030f0 <lzma_filter_flags_size@plt>:
    30f0:	adrp	x16, 47000 <memcpy@GLIBC_2.17>
    30f4:	ldr	x17, [x16, #48]
    30f8:	add	x16, x16, #0x30
    30fc:	br	x17

0000000000003100 <lzma_index_buffer_encode@plt>:
    3100:	adrp	x16, 47000 <memcpy@GLIBC_2.17>
    3104:	ldr	x17, [x16, #56]
    3108:	add	x16, x16, #0x38
    310c:	br	x17

0000000000003110 <lzma_stream_flags_compare@plt>:
    3110:	adrp	x16, 47000 <memcpy@GLIBC_2.17>
    3114:	ldr	x17, [x16, #64]
    3118:	add	x16, x16, #0x40
    311c:	br	x17

0000000000003120 <lzma_block_buffer_bound@plt>:
    3120:	adrp	x16, 47000 <memcpy@GLIBC_2.17>
    3124:	ldr	x17, [x16, #72]
    3128:	add	x16, x16, #0x48
    312c:	br	x17

0000000000003130 <lzma_index_hash_decode@plt>:
    3130:	adrp	x16, 47000 <memcpy@GLIBC_2.17>
    3134:	ldr	x17, [x16, #80]
    3138:	add	x16, x16, #0x50
    313c:	br	x17

0000000000003140 <__cxa_finalize@plt>:
    3140:	adrp	x16, 47000 <memcpy@GLIBC_2.17>
    3144:	ldr	x17, [x16, #88]
    3148:	add	x16, x16, #0x58
    314c:	br	x17

0000000000003150 <clock_gettime@plt>:
    3150:	adrp	x16, 47000 <memcpy@GLIBC_2.17>
    3154:	ldr	x17, [x16, #96]
    3158:	add	x16, x16, #0x60
    315c:	br	x17

0000000000003160 <lzma_block_header_size@plt>:
    3160:	adrp	x16, 47000 <memcpy@GLIBC_2.17>
    3164:	ldr	x17, [x16, #104]
    3168:	add	x16, x16, #0x68
    316c:	br	x17

0000000000003170 <sigfillset@plt>:
    3170:	adrp	x16, 47000 <memcpy@GLIBC_2.17>
    3174:	ldr	x17, [x16, #112]
    3178:	add	x16, x16, #0x70
    317c:	br	x17

0000000000003180 <lzma_index_memusage@plt>:
    3180:	adrp	x16, 47000 <memcpy@GLIBC_2.17>
    3184:	ldr	x17, [x16, #120]
    3188:	add	x16, x16, #0x78
    318c:	br	x17

0000000000003190 <lzma_block_unpadded_size@plt>:
    3190:	adrp	x16, 47000 <memcpy@GLIBC_2.17>
    3194:	ldr	x17, [x16, #128]
    3198:	add	x16, x16, #0x80
    319c:	br	x17

00000000000031a0 <malloc@plt>:
    31a0:	adrp	x16, 47000 <memcpy@GLIBC_2.17>
    31a4:	ldr	x17, [x16, #136]
    31a8:	add	x16, x16, #0x88
    31ac:	br	x17

00000000000031b0 <lzma_index_hash_append@plt>:
    31b0:	adrp	x16, 47000 <memcpy@GLIBC_2.17>
    31b4:	ldr	x17, [x16, #144]
    31b8:	add	x16, x16, #0x90
    31bc:	br	x17

00000000000031c0 <lzma_crc32@plt>:
    31c0:	adrp	x16, 47000 <memcpy@GLIBC_2.17>
    31c4:	ldr	x17, [x16, #152]
    31c8:	add	x16, x16, #0x98
    31cc:	br	x17

00000000000031d0 <lzma_index_checks@plt>:
    31d0:	adrp	x16, 47000 <memcpy@GLIBC_2.17>
    31d4:	ldr	x17, [x16, #160]
    31d8:	add	x16, x16, #0xa0
    31dc:	br	x17

00000000000031e0 <pthread_condattr_destroy@plt>:
    31e0:	adrp	x16, 47000 <memcpy@GLIBC_2.17>
    31e4:	ldr	x17, [x16, #168]
    31e8:	add	x16, x16, #0xa8
    31ec:	br	x17

00000000000031f0 <lzma_stream_buffer_encode@plt>:
    31f0:	adrp	x16, 47000 <memcpy@GLIBC_2.17>
    31f4:	ldr	x17, [x16, #176]
    31f8:	add	x16, x16, #0xb0
    31fc:	br	x17

0000000000003200 <pthread_cond_signal@plt>:
    3200:	adrp	x16, 47000 <memcpy@GLIBC_2.17>
    3204:	ldr	x17, [x16, #184]
    3208:	add	x16, x16, #0xb8
    320c:	br	x17

0000000000003210 <lzma_stream_footer_encode@plt>:
    3210:	adrp	x16, 47000 <memcpy@GLIBC_2.17>
    3214:	ldr	x17, [x16, #192]
    3218:	add	x16, x16, #0xc0
    321c:	br	x17

0000000000003220 <lzma_raw_encoder_memusage@plt>:
    3220:	adrp	x16, 47000 <memcpy@GLIBC_2.17>
    3224:	ldr	x17, [x16, #200]
    3228:	add	x16, x16, #0xc8
    322c:	br	x17

0000000000003230 <memset@plt>:
    3230:	adrp	x16, 47000 <memcpy@GLIBC_2.17>
    3234:	ldr	x17, [x16, #208]
    3238:	add	x16, x16, #0xd0
    323c:	br	x17

0000000000003240 <lzma_filters_copy@plt>:
    3240:	adrp	x16, 47000 <memcpy@GLIBC_2.17>
    3244:	ldr	x17, [x16, #216]
    3248:	add	x16, x16, #0xd8
    324c:	br	x17

0000000000003250 <lzma_properties_decode@plt>:
    3250:	adrp	x16, 47000 <memcpy@GLIBC_2.17>
    3254:	ldr	x17, [x16, #224]
    3258:	add	x16, x16, #0xe0
    325c:	br	x17

0000000000003260 <calloc@plt>:
    3260:	adrp	x16, 47000 <memcpy@GLIBC_2.17>
    3264:	ldr	x17, [x16, #232]
    3268:	add	x16, x16, #0xe8
    326c:	br	x17

0000000000003270 <lzma_check_size@plt>:
    3270:	adrp	x16, 47000 <memcpy@GLIBC_2.17>
    3274:	ldr	x17, [x16, #240]
    3278:	add	x16, x16, #0xf0
    327c:	br	x17

0000000000003280 <lzma_index_hash_init@plt>:
    3280:	adrp	x16, 47000 <memcpy@GLIBC_2.17>
    3284:	ldr	x17, [x16, #248]
    3288:	add	x16, x16, #0xf8
    328c:	br	x17

0000000000003290 <lzma_crc64@plt>:
    3290:	adrp	x16, 47000 <memcpy@GLIBC_2.17>
    3294:	ldr	x17, [x16, #256]
    3298:	add	x16, x16, #0x100
    329c:	br	x17

00000000000032a0 <pthread_mutex_init@plt>:
    32a0:	adrp	x16, 47000 <memcpy@GLIBC_2.17>
    32a4:	ldr	x17, [x16, #264]
    32a8:	add	x16, x16, #0x108
    32ac:	br	x17

00000000000032b0 <pthread_create@plt>:
    32b0:	adrp	x16, 47000 <memcpy@GLIBC_2.17>
    32b4:	ldr	x17, [x16, #272]
    32b8:	add	x16, x16, #0x110
    32bc:	br	x17

00000000000032c0 <__gmon_start__@plt>:
    32c0:	adrp	x16, 47000 <memcpy@GLIBC_2.17>
    32c4:	ldr	x17, [x16, #280]
    32c8:	add	x16, x16, #0x118
    32cc:	br	x17

00000000000032d0 <pthread_join@plt>:
    32d0:	adrp	x16, 47000 <memcpy@GLIBC_2.17>
    32d4:	ldr	x17, [x16, #288]
    32d8:	add	x16, x16, #0x120
    32dc:	br	x17

00000000000032e0 <lzma_raw_decoder_memusage@plt>:
    32e0:	adrp	x16, 47000 <memcpy@GLIBC_2.17>
    32e4:	ldr	x17, [x16, #296]
    32e8:	add	x16, x16, #0x128
    32ec:	br	x17

00000000000032f0 <sched_getaffinity@plt>:
    32f0:	adrp	x16, 47000 <memcpy@GLIBC_2.17>
    32f4:	ldr	x17, [x16, #304]
    32f8:	add	x16, x16, #0x130
    32fc:	br	x17

0000000000003300 <lzma_index_append@plt>:
    3300:	adrp	x16, 47000 <memcpy@GLIBC_2.17>
    3304:	ldr	x17, [x16, #312]
    3308:	add	x16, x16, #0x138
    330c:	br	x17

0000000000003310 <lzma_index_hash_end@plt>:
    3310:	adrp	x16, 47000 <memcpy@GLIBC_2.17>
    3314:	ldr	x17, [x16, #320]
    3318:	add	x16, x16, #0x140
    331c:	br	x17

0000000000003320 <lzma_end@plt>:
    3320:	adrp	x16, 47000 <memcpy@GLIBC_2.17>
    3324:	ldr	x17, [x16, #328]
    3328:	add	x16, x16, #0x148
    332c:	br	x17

0000000000003330 <memcmp@plt>:
    3330:	adrp	x16, 47000 <memcpy@GLIBC_2.17>
    3334:	ldr	x17, [x16, #336]
    3338:	add	x16, x16, #0x150
    333c:	br	x17

0000000000003340 <lzma_block_header_decode@plt>:
    3340:	adrp	x16, 47000 <memcpy@GLIBC_2.17>
    3344:	ldr	x17, [x16, #344]
    3348:	add	x16, x16, #0x158
    334c:	br	x17

0000000000003350 <lzma_filter_flags_encode@plt>:
    3350:	adrp	x16, 47000 <memcpy@GLIBC_2.17>
    3354:	ldr	x17, [x16, #352]
    3358:	add	x16, x16, #0x160
    335c:	br	x17

0000000000003360 <lzma_index_file_size@plt>:
    3360:	adrp	x16, 47000 <memcpy@GLIBC_2.17>
    3364:	ldr	x17, [x16, #360]
    3368:	add	x16, x16, #0x168
    336c:	br	x17

0000000000003370 <lzma_properties_size@plt>:
    3370:	adrp	x16, 47000 <memcpy@GLIBC_2.17>
    3374:	ldr	x17, [x16, #368]
    3378:	add	x16, x16, #0x170
    337c:	br	x17

0000000000003380 <free@plt>:
    3380:	adrp	x16, 47000 <memcpy@GLIBC_2.17>
    3384:	ldr	x17, [x16, #376]
    3388:	add	x16, x16, #0x178
    338c:	br	x17

0000000000003390 <lzma_stream_header_encode@plt>:
    3390:	adrp	x16, 47000 <memcpy@GLIBC_2.17>
    3394:	ldr	x17, [x16, #384]
    3398:	add	x16, x16, #0x180
    339c:	br	x17

00000000000033a0 <pthread_cond_wait@plt>:
    33a0:	adrp	x16, 47000 <memcpy@GLIBC_2.17>
    33a4:	ldr	x17, [x16, #392]
    33a8:	add	x16, x16, #0x188
    33ac:	br	x17

00000000000033b0 <lzma_index_init@plt>:
    33b0:	adrp	x16, 47000 <memcpy@GLIBC_2.17>
    33b4:	ldr	x17, [x16, #400]
    33b8:	add	x16, x16, #0x190
    33bc:	br	x17

00000000000033c0 <lzma_vli_decode@plt>:
    33c0:	adrp	x16, 47000 <memcpy@GLIBC_2.17>
    33c4:	ldr	x17, [x16, #408]
    33c8:	add	x16, x16, #0x198
    33cc:	br	x17

00000000000033d0 <pthread_condattr_init@plt>:
    33d0:	adrp	x16, 47000 <memcpy@GLIBC_2.17>
    33d4:	ldr	x17, [x16, #416]
    33d8:	add	x16, x16, #0x1a0
    33dc:	br	x17

00000000000033e0 <lzma_index_end@plt>:
    33e0:	adrp	x16, 47000 <memcpy@GLIBC_2.17>
    33e4:	ldr	x17, [x16, #424]
    33e8:	add	x16, x16, #0x1a8
    33ec:	br	x17

00000000000033f0 <__sched_cpucount@plt>:
    33f0:	adrp	x16, 47000 <memcpy@GLIBC_2.17>
    33f4:	ldr	x17, [x16, #432]
    33f8:	add	x16, x16, #0x1b0
    33fc:	br	x17

0000000000003400 <lzma_properties_encode@plt>:
    3400:	adrp	x16, 47000 <memcpy@GLIBC_2.17>
    3404:	ldr	x17, [x16, #440]
    3408:	add	x16, x16, #0x1b8
    340c:	br	x17

0000000000003410 <pthread_mutex_destroy@plt>:
    3410:	adrp	x16, 47000 <memcpy@GLIBC_2.17>
    3414:	ldr	x17, [x16, #448]
    3418:	add	x16, x16, #0x1c0
    341c:	br	x17

0000000000003420 <pthread_cond_init@plt>:
    3420:	adrp	x16, 47000 <memcpy@GLIBC_2.17>
    3424:	ldr	x17, [x16, #456]
    3428:	add	x16, x16, #0x1c8
    342c:	br	x17

0000000000003430 <lzma_stream_footer_decode@plt>:
    3430:	adrp	x16, 47000 <memcpy@GLIBC_2.17>
    3434:	ldr	x17, [x16, #464]
    3438:	add	x16, x16, #0x1d0
    343c:	br	x17

0000000000003440 <lzma_lzma_preset@plt>:
    3440:	adrp	x16, 47000 <memcpy@GLIBC_2.17>
    3444:	ldr	x17, [x16, #472]
    3448:	add	x16, x16, #0x1d8
    344c:	br	x17

0000000000003450 <lzma_vli_encode@plt>:
    3450:	adrp	x16, 47000 <memcpy@GLIBC_2.17>
    3454:	ldr	x17, [x16, #480]
    3458:	add	x16, x16, #0x1e0
    345c:	br	x17

0000000000003460 <lzma_index_iter_next@plt>:
    3460:	adrp	x16, 47000 <memcpy@GLIBC_2.17>
    3464:	ldr	x17, [x16, #488]
    3468:	add	x16, x16, #0x1e8
    346c:	br	x17

0000000000003470 <sysconf@plt>:
    3470:	adrp	x16, 47000 <memcpy@GLIBC_2.17>
    3474:	ldr	x17, [x16, #496]
    3478:	add	x16, x16, #0x1f0
    347c:	br	x17

0000000000003480 <lzma_vli_size@plt>:
    3480:	adrp	x16, 47000 <memcpy@GLIBC_2.17>
    3484:	ldr	x17, [x16, #504]
    3488:	add	x16, x16, #0x1f8
    348c:	br	x17

0000000000003490 <pthread_condattr_setclock@plt>:
    3490:	adrp	x16, 47000 <memcpy@GLIBC_2.17>
    3494:	ldr	x17, [x16, #512]
    3498:	add	x16, x16, #0x200
    349c:	br	x17

00000000000034a0 <lzma_stream_encoder@plt>:
    34a0:	adrp	x16, 47000 <memcpy@GLIBC_2.17>
    34a4:	ldr	x17, [x16, #520]
    34a8:	add	x16, x16, #0x208
    34ac:	br	x17

00000000000034b0 <lzma_index_iter_init@plt>:
    34b0:	adrp	x16, 47000 <memcpy@GLIBC_2.17>
    34b4:	ldr	x17, [x16, #528]
    34b8:	add	x16, x16, #0x210
    34bc:	br	x17

00000000000034c0 <lzma_block_uncomp_encode@plt>:
    34c0:	adrp	x16, 47000 <memcpy@GLIBC_2.17>
    34c4:	ldr	x17, [x16, #536]
    34c8:	add	x16, x16, #0x218
    34cc:	br	x17

00000000000034d0 <lzma_index_hash_size@plt>:
    34d0:	adrp	x16, 47000 <memcpy@GLIBC_2.17>
    34d4:	ldr	x17, [x16, #544]
    34d8:	add	x16, x16, #0x220
    34dc:	br	x17

00000000000034e0 <lzma_index_block_count@plt>:
    34e0:	adrp	x16, 47000 <memcpy@GLIBC_2.17>
    34e4:	ldr	x17, [x16, #552]
    34e8:	add	x16, x16, #0x228
    34ec:	br	x17

00000000000034f0 <lzma_stream_header_decode@plt>:
    34f0:	adrp	x16, 47000 <memcpy@GLIBC_2.17>
    34f4:	ldr	x17, [x16, #560]
    34f8:	add	x16, x16, #0x230
    34fc:	br	x17

0000000000003500 <lzma_filter_flags_decode@plt>:
    3500:	adrp	x16, 47000 <memcpy@GLIBC_2.17>
    3504:	ldr	x17, [x16, #568]
    3508:	add	x16, x16, #0x238
    350c:	br	x17

0000000000003510 <lzma_index_size@plt>:
    3510:	adrp	x16, 47000 <memcpy@GLIBC_2.17>
    3514:	ldr	x17, [x16, #576]
    3518:	add	x16, x16, #0x240
    351c:	br	x17

0000000000003520 <pthread_cond_destroy@plt>:
    3520:	adrp	x16, 47000 <memcpy@GLIBC_2.17>
    3524:	ldr	x17, [x16, #584]
    3528:	add	x16, x16, #0x248
    352c:	br	x17

0000000000003530 <pthread_mutex_lock@plt>:
    3530:	adrp	x16, 47000 <memcpy@GLIBC_2.17>
    3534:	ldr	x17, [x16, #592]
    3538:	add	x16, x16, #0x250
    353c:	br	x17

0000000000003540 <lzma_block_header_encode@plt>:
    3540:	adrp	x16, 47000 <memcpy@GLIBC_2.17>
    3544:	ldr	x17, [x16, #600]
    3548:	add	x16, x16, #0x258
    354c:	br	x17

0000000000003550 <pthread_mutex_unlock@plt>:
    3550:	adrp	x16, 47000 <memcpy@GLIBC_2.17>
    3554:	ldr	x17, [x16, #608]
    3558:	add	x16, x16, #0x260
    355c:	br	x17

0000000000003560 <pthread_cond_timedwait@plt>:
    3560:	adrp	x16, 47000 <memcpy@GLIBC_2.17>
    3564:	ldr	x17, [x16, #616]
    3568:	add	x16, x16, #0x268
    356c:	br	x17

Disassembly of section .text:

0000000000003570 <lzma_version_number@@XZ_5.0-0x174>:
    3570:	adrp	x0, 46000 <lzma_mode_is_supported@@XZ_5.0+0x2b368>
    3574:	ldr	x0, [x0, #3968]
    3578:	cbz	x0, 3580 <pthread_cond_timedwait@plt+0x20>
    357c:	b	32c0 <__gmon_start__@plt>
    3580:	ret
    3584:	nop
    3588:	adrp	x0, 47000 <lzma_mode_is_supported@@XZ_5.0+0x2c368>
    358c:	add	x0, x0, #0x278
    3590:	adrp	x1, 47000 <lzma_mode_is_supported@@XZ_5.0+0x2c368>
    3594:	add	x1, x1, #0x278
    3598:	cmp	x1, x0
    359c:	b.eq	35b4 <pthread_cond_timedwait@plt+0x54>  // b.none
    35a0:	adrp	x1, 46000 <lzma_mode_is_supported@@XZ_5.0+0x2b368>
    35a4:	ldr	x1, [x1, #3904]
    35a8:	cbz	x1, 35b4 <pthread_cond_timedwait@plt+0x54>
    35ac:	mov	x16, x1
    35b0:	br	x16
    35b4:	ret
    35b8:	adrp	x0, 47000 <lzma_mode_is_supported@@XZ_5.0+0x2c368>
    35bc:	add	x0, x0, #0x278
    35c0:	adrp	x1, 47000 <lzma_mode_is_supported@@XZ_5.0+0x2c368>
    35c4:	add	x1, x1, #0x278
    35c8:	sub	x1, x1, x0
    35cc:	lsr	x2, x1, #63
    35d0:	add	x1, x2, x1, asr #3
    35d4:	cmp	xzr, x1, asr #1
    35d8:	asr	x1, x1, #1
    35dc:	b.eq	35f4 <pthread_cond_timedwait@plt+0x94>  // b.none
    35e0:	adrp	x2, 46000 <lzma_mode_is_supported@@XZ_5.0+0x2b368>
    35e4:	ldr	x2, [x2, #4040]
    35e8:	cbz	x2, 35f4 <pthread_cond_timedwait@plt+0x94>
    35ec:	mov	x16, x2
    35f0:	br	x16
    35f4:	ret
    35f8:	stp	x29, x30, [sp, #-32]!
    35fc:	mov	x29, sp
    3600:	str	x19, [sp, #16]
    3604:	adrp	x19, 47000 <lzma_mode_is_supported@@XZ_5.0+0x2c368>
    3608:	ldrb	w0, [x19, #632]
    360c:	cbnz	w0, 3634 <pthread_cond_timedwait@plt+0xd4>
    3610:	adrp	x0, 46000 <lzma_mode_is_supported@@XZ_5.0+0x2b368>
    3614:	ldr	x0, [x0, #3920]
    3618:	cbz	x0, 3628 <pthread_cond_timedwait@plt+0xc8>
    361c:	adrp	x0, 47000 <lzma_mode_is_supported@@XZ_5.0+0x2c368>
    3620:	ldr	x0, [x0, #624]
    3624:	bl	3140 <__cxa_finalize@plt>
    3628:	bl	3588 <pthread_cond_timedwait@plt+0x28>
    362c:	mov	w0, #0x1                   	// #1
    3630:	strb	w0, [x19, #632]
    3634:	ldr	x19, [sp, #16]
    3638:	ldp	x29, x30, [sp], #32
    363c:	ret
    3640:	b	35b8 <pthread_cond_timedwait@plt+0x58>
    3644:	stp	x29, x30, [sp, #-48]!
    3648:	mov	x29, sp
    364c:	str	xzr, [sp, #40]
    3650:	mov	w0, #0x1e                  	// #30
    3654:	bl	3470 <sysconf@plt>
    3658:	str	x0, [sp, #32]
    365c:	mov	w0, #0x55                  	// #85
    3660:	bl	3470 <sysconf@plt>
    3664:	str	x0, [sp, #24]
    3668:	ldr	x0, [sp, #32]
    366c:	cmn	x0, #0x1
    3670:	b.eq	3690 <pthread_cond_timedwait@plt+0x130>  // b.none
    3674:	ldr	x0, [sp, #24]
    3678:	cmn	x0, #0x1
    367c:	b.eq	3690 <pthread_cond_timedwait@plt+0x130>  // b.none
    3680:	ldr	x1, [sp, #32]
    3684:	ldr	x0, [sp, #24]
    3688:	mul	x0, x1, x0
    368c:	str	x0, [sp, #40]
    3690:	ldr	x0, [sp, #40]
    3694:	ldp	x29, x30, [sp], #48
    3698:	ret
    369c:	stp	x29, x30, [sp, #-160]!
    36a0:	mov	x29, sp
    36a4:	str	wzr, [sp, #156]
    36a8:	add	x0, sp, #0x18
    36ac:	mov	x2, x0
    36b0:	mov	x1, #0x80                  	// #128
    36b4:	mov	w0, #0x0                   	// #0
    36b8:	bl	32f0 <sched_getaffinity@plt>
    36bc:	cmp	w0, #0x0
    36c0:	b.ne	36d8 <pthread_cond_timedwait@plt+0x178>  // b.any
    36c4:	add	x0, sp, #0x18
    36c8:	mov	x1, x0
    36cc:	mov	x0, #0x80                  	// #128
    36d0:	bl	33f0 <__sched_cpucount@plt>
    36d4:	str	w0, [sp, #156]
    36d8:	ldr	w0, [sp, #156]
    36dc:	ldp	x29, x30, [sp], #160
    36e0:	ret

00000000000036e4 <lzma_version_number@@XZ_5.0>:
    36e4:	mov	w0, #0x3eca                	// #16074
    36e8:	movk	w0, #0x2fb, lsl #16
    36ec:	ret

00000000000036f0 <lzma_version_string@@XZ_5.0>:
    36f0:	adrp	x0, 2b000 <lzma_mode_is_supported@@XZ_5.0+0x10368>
    36f4:	add	x0, x0, #0xf60
    36f8:	ret
    36fc:	stp	x29, x30, [sp, #-48]!
    3700:	mov	x29, sp
    3704:	str	x0, [sp, #24]
    3708:	str	x1, [sp, #16]
    370c:	ldr	x0, [sp, #24]
    3710:	cmp	x0, #0x0
    3714:	b.ne	3720 <lzma_version_string@@XZ_5.0+0x30>  // b.any
    3718:	mov	x0, #0x1                   	// #1
    371c:	str	x0, [sp, #24]
    3720:	ldr	x0, [sp, #16]
    3724:	cmp	x0, #0x0
    3728:	b.eq	3760 <lzma_version_string@@XZ_5.0+0x70>  // b.none
    372c:	ldr	x0, [sp, #16]
    3730:	ldr	x0, [x0]
    3734:	cmp	x0, #0x0
    3738:	b.eq	3760 <lzma_version_string@@XZ_5.0+0x70>  // b.none
    373c:	ldr	x0, [sp, #16]
    3740:	ldr	x3, [x0]
    3744:	ldr	x0, [sp, #16]
    3748:	ldr	x0, [x0, #16]
    374c:	ldr	x2, [sp, #24]
    3750:	mov	x1, #0x1                   	// #1
    3754:	blr	x3
    3758:	str	x0, [sp, #40]
    375c:	b	376c <lzma_version_string@@XZ_5.0+0x7c>
    3760:	ldr	x0, [sp, #24]
    3764:	bl	31a0 <malloc@plt>
    3768:	str	x0, [sp, #40]
    376c:	ldr	x0, [sp, #40]
    3770:	ldp	x29, x30, [sp], #48
    3774:	ret
    3778:	stp	x29, x30, [sp, #-48]!
    377c:	mov	x29, sp
    3780:	str	x0, [sp, #24]
    3784:	str	x1, [sp, #16]
    3788:	ldr	x0, [sp, #24]
    378c:	cmp	x0, #0x0
    3790:	b.ne	379c <lzma_version_string@@XZ_5.0+0xac>  // b.any
    3794:	mov	x0, #0x1                   	// #1
    3798:	str	x0, [sp, #24]
    379c:	ldr	x0, [sp, #16]
    37a0:	cmp	x0, #0x0
    37a4:	b.eq	37f8 <lzma_version_string@@XZ_5.0+0x108>  // b.none
    37a8:	ldr	x0, [sp, #16]
    37ac:	ldr	x0, [x0]
    37b0:	cmp	x0, #0x0
    37b4:	b.eq	37f8 <lzma_version_string@@XZ_5.0+0x108>  // b.none
    37b8:	ldr	x0, [sp, #16]
    37bc:	ldr	x3, [x0]
    37c0:	ldr	x0, [sp, #16]
    37c4:	ldr	x0, [x0, #16]
    37c8:	ldr	x2, [sp, #24]
    37cc:	mov	x1, #0x1                   	// #1
    37d0:	blr	x3
    37d4:	str	x0, [sp, #40]
    37d8:	ldr	x0, [sp, #40]
    37dc:	cmp	x0, #0x0
    37e0:	b.eq	3808 <lzma_version_string@@XZ_5.0+0x118>  // b.none
    37e4:	ldr	x2, [sp, #24]
    37e8:	mov	w1, #0x0                   	// #0
    37ec:	ldr	x0, [sp, #40]
    37f0:	bl	3230 <memset@plt>
    37f4:	b	3808 <lzma_version_string@@XZ_5.0+0x118>
    37f8:	ldr	x1, [sp, #24]
    37fc:	mov	x0, #0x1                   	// #1
    3800:	bl	3260 <calloc@plt>
    3804:	str	x0, [sp, #40]
    3808:	ldr	x0, [sp, #40]
    380c:	ldp	x29, x30, [sp], #48
    3810:	ret
    3814:	stp	x29, x30, [sp, #-32]!
    3818:	mov	x29, sp
    381c:	str	x0, [sp, #24]
    3820:	str	x1, [sp, #16]
    3824:	ldr	x0, [sp, #16]
    3828:	cmp	x0, #0x0
    382c:	b.eq	385c <lzma_version_string@@XZ_5.0+0x16c>  // b.none
    3830:	ldr	x0, [sp, #16]
    3834:	ldr	x0, [x0, #8]
    3838:	cmp	x0, #0x0
    383c:	b.eq	385c <lzma_version_string@@XZ_5.0+0x16c>  // b.none
    3840:	ldr	x0, [sp, #16]
    3844:	ldr	x2, [x0, #8]
    3848:	ldr	x0, [sp, #16]
    384c:	ldr	x0, [x0, #16]
    3850:	ldr	x1, [sp, #24]
    3854:	blr	x2
    3858:	b	3864 <lzma_version_string@@XZ_5.0+0x174>
    385c:	ldr	x0, [sp, #24]
    3860:	bl	3380 <free@plt>
    3864:	nop
    3868:	ldp	x29, x30, [sp], #32
    386c:	ret
    3870:	stp	x29, x30, [sp, #-96]!
    3874:	mov	x29, sp
    3878:	str	x0, [sp, #56]
    387c:	str	x1, [sp, #48]
    3880:	str	x2, [sp, #40]
    3884:	str	x3, [sp, #32]
    3888:	str	x4, [sp, #24]
    388c:	str	x5, [sp, #16]
    3890:	ldr	x0, [sp, #48]
    3894:	ldr	x0, [x0]
    3898:	ldr	x1, [sp, #40]
    389c:	sub	x0, x1, x0
    38a0:	str	x0, [sp, #88]
    38a4:	ldr	x0, [sp, #24]
    38a8:	ldr	x0, [x0]
    38ac:	ldr	x1, [sp, #16]
    38b0:	sub	x0, x1, x0
    38b4:	str	x0, [sp, #80]
    38b8:	ldr	x0, [sp, #88]
    38bc:	ldr	x2, [sp, #80]
    38c0:	ldr	x1, [sp, #80]
    38c4:	cmp	x2, x0
    38c8:	csel	x0, x1, x0, ls  // ls = plast
    38cc:	str	x0, [sp, #72]
    38d0:	ldr	x0, [sp, #24]
    38d4:	ldr	x0, [x0]
    38d8:	ldr	x1, [sp, #32]
    38dc:	add	x3, x1, x0
    38e0:	ldr	x0, [sp, #48]
    38e4:	ldr	x0, [x0]
    38e8:	ldr	x1, [sp, #56]
    38ec:	add	x0, x1, x0
    38f0:	ldr	x2, [sp, #72]
    38f4:	mov	x1, x0
    38f8:	mov	x0, x3
    38fc:	bl	3090 <memcpy@plt>
    3900:	ldr	x0, [sp, #48]
    3904:	ldr	x1, [x0]
    3908:	ldr	x0, [sp, #72]
    390c:	add	x1, x1, x0
    3910:	ldr	x0, [sp, #48]
    3914:	str	x1, [x0]
    3918:	ldr	x0, [sp, #24]
    391c:	ldr	x1, [x0]
    3920:	ldr	x0, [sp, #72]
    3924:	add	x1, x1, x0
    3928:	ldr	x0, [sp, #24]
    392c:	str	x1, [x0]
    3930:	ldr	x0, [sp, #72]
    3934:	ldp	x29, x30, [sp], #96
    3938:	ret
    393c:	stp	x29, x30, [sp, #-48]!
    3940:	mov	x29, sp
    3944:	str	x0, [sp, #40]
    3948:	str	x1, [sp, #32]
    394c:	str	x2, [sp, #24]
    3950:	ldr	x0, [sp, #24]
    3954:	ldr	x0, [x0, #8]
    3958:	mov	x1, x0
    395c:	ldr	x0, [sp, #40]
    3960:	ldr	x0, [x0, #16]
    3964:	cmp	x1, x0
    3968:	b.eq	3978 <lzma_version_string@@XZ_5.0+0x288>  // b.none
    396c:	ldr	x1, [sp, #32]
    3970:	ldr	x0, [sp, #40]
    3974:	bl	3a48 <lzma_version_string@@XZ_5.0+0x358>
    3978:	ldr	x0, [sp, #24]
    397c:	ldr	x0, [x0, #8]
    3980:	mov	x1, x0
    3984:	ldr	x0, [sp, #40]
    3988:	str	x1, [x0, #16]
    398c:	ldr	x0, [sp, #24]
    3990:	ldr	x1, [x0]
    3994:	ldr	x0, [sp, #40]
    3998:	str	x1, [x0, #8]
    399c:	ldr	x0, [sp, #24]
    39a0:	ldr	x0, [x0, #8]
    39a4:	cmp	x0, #0x0
    39a8:	b.eq	39c8 <lzma_version_string@@XZ_5.0+0x2d8>  // b.none
    39ac:	ldr	x0, [sp, #24]
    39b0:	ldr	x3, [x0, #8]
    39b4:	ldr	x2, [sp, #24]
    39b8:	ldr	x1, [sp, #32]
    39bc:	ldr	x0, [sp, #40]
    39c0:	blr	x3
    39c4:	b	39cc <lzma_version_string@@XZ_5.0+0x2dc>
    39c8:	mov	w0, #0x0                   	// #0
    39cc:	ldp	x29, x30, [sp], #48
    39d0:	ret
    39d4:	stp	x29, x30, [sp, #-48]!
    39d8:	mov	x29, sp
    39dc:	str	x0, [sp, #40]
    39e0:	str	x1, [sp, #32]
    39e4:	str	x2, [sp, #24]
    39e8:	ldr	x0, [sp, #24]
    39ec:	ldr	x1, [x0]
    39f0:	ldr	x0, [sp, #40]
    39f4:	ldr	x0, [x0, #8]
    39f8:	cmp	x1, x0
    39fc:	b.eq	3a08 <lzma_version_string@@XZ_5.0+0x318>  // b.none
    3a00:	mov	w0, #0xb                   	// #11
    3a04:	b	3a40 <lzma_version_string@@XZ_5.0+0x350>
    3a08:	ldr	x0, [sp, #24]
    3a0c:	ldr	x0, [x0]
    3a10:	cmn	x0, #0x1
    3a14:	b.ne	3a20 <lzma_version_string@@XZ_5.0+0x330>  // b.any
    3a18:	mov	w0, #0x0                   	// #0
    3a1c:	b	3a40 <lzma_version_string@@XZ_5.0+0x350>
    3a20:	ldr	x0, [sp, #40]
    3a24:	ldr	x4, [x0, #64]
    3a28:	ldr	x0, [sp, #40]
    3a2c:	ldr	x0, [x0]
    3a30:	ldr	x3, [sp, #24]
    3a34:	mov	x2, #0x0                   	// #0
    3a38:	ldr	x1, [sp, #32]
    3a3c:	blr	x4
    3a40:	ldp	x29, x30, [sp], #48
    3a44:	ret
    3a48:	stp	x29, x30, [sp, #-112]!
    3a4c:	mov	x29, sp
    3a50:	str	x0, [sp, #24]
    3a54:	str	x1, [sp, #16]
    3a58:	ldr	x0, [sp, #24]
    3a5c:	ldr	x0, [x0, #16]
    3a60:	cmp	x0, #0x0
    3a64:	b.eq	3af4 <lzma_version_string@@XZ_5.0+0x404>  // b.none
    3a68:	ldr	x0, [sp, #24]
    3a6c:	ldr	x0, [x0, #32]
    3a70:	cmp	x0, #0x0
    3a74:	b.eq	3a94 <lzma_version_string@@XZ_5.0+0x3a4>  // b.none
    3a78:	ldr	x0, [sp, #24]
    3a7c:	ldr	x2, [x0, #32]
    3a80:	ldr	x0, [sp, #24]
    3a84:	ldr	x0, [x0]
    3a88:	ldr	x1, [sp, #16]
    3a8c:	blr	x2
    3a90:	b	3aa4 <lzma_version_string@@XZ_5.0+0x3b4>
    3a94:	ldr	x0, [sp, #24]
    3a98:	ldr	x0, [x0]
    3a9c:	ldr	x1, [sp, #16]
    3aa0:	bl	3814 <lzma_version_string@@XZ_5.0+0x124>
    3aa4:	ldr	x0, [sp, #24]
    3aa8:	str	xzr, [x0]
    3aac:	ldr	x0, [sp, #24]
    3ab0:	mov	x1, #0xffffffffffffffff    	// #-1
    3ab4:	str	x1, [x0, #8]
    3ab8:	ldr	x0, [sp, #24]
    3abc:	str	xzr, [x0, #16]
    3ac0:	ldr	x0, [sp, #24]
    3ac4:	str	xzr, [x0, #24]
    3ac8:	ldr	x0, [sp, #24]
    3acc:	str	xzr, [x0, #32]
    3ad0:	ldr	x0, [sp, #24]
    3ad4:	str	xzr, [x0, #40]
    3ad8:	ldr	x0, [sp, #24]
    3adc:	str	xzr, [x0, #48]
    3ae0:	ldr	x0, [sp, #24]
    3ae4:	str	xzr, [x0, #56]
    3ae8:	ldr	x0, [sp, #24]
    3aec:	str	xzr, [x0, #64]
    3af0:	nop
    3af4:	nop
    3af8:	ldp	x29, x30, [sp], #112
    3afc:	ret
    3b00:	stp	x29, x30, [sp, #-112]!
    3b04:	mov	x29, sp
    3b08:	str	x0, [sp, #24]
    3b0c:	ldr	x0, [sp, #24]
    3b10:	cmp	x0, #0x0
    3b14:	b.ne	3b20 <lzma_version_string@@XZ_5.0+0x430>  // b.any
    3b18:	mov	w0, #0xb                   	// #11
    3b1c:	b	3bdc <lzma_version_string@@XZ_5.0+0x4ec>
    3b20:	ldr	x0, [sp, #24]
    3b24:	ldr	x0, [x0, #56]
    3b28:	cmp	x0, #0x0
    3b2c:	b.ne	3b98 <lzma_version_string@@XZ_5.0+0x4a8>  // b.any
    3b30:	ldr	x0, [sp, #24]
    3b34:	ldr	x0, [x0, #48]
    3b38:	mov	x1, x0
    3b3c:	mov	x0, #0x60                  	// #96
    3b40:	bl	36fc <lzma_version_string@@XZ_5.0+0xc>
    3b44:	mov	x1, x0
    3b48:	ldr	x0, [sp, #24]
    3b4c:	str	x1, [x0, #56]
    3b50:	ldr	x0, [sp, #24]
    3b54:	ldr	x0, [x0, #56]
    3b58:	cmp	x0, #0x0
    3b5c:	b.ne	3b68 <lzma_version_string@@XZ_5.0+0x478>  // b.any
    3b60:	mov	w0, #0x5                   	// #5
    3b64:	b	3bdc <lzma_version_string@@XZ_5.0+0x4ec>
    3b68:	ldr	x0, [sp, #24]
    3b6c:	ldr	x0, [x0, #56]
    3b70:	str	xzr, [x0]
    3b74:	mov	x1, #0xffffffffffffffff    	// #-1
    3b78:	str	x1, [x0, #8]
    3b7c:	str	xzr, [x0, #16]
    3b80:	str	xzr, [x0, #24]
    3b84:	str	xzr, [x0, #32]
    3b88:	str	xzr, [x0, #40]
    3b8c:	str	xzr, [x0, #48]
    3b90:	str	xzr, [x0, #56]
    3b94:	str	xzr, [x0, #64]
    3b98:	ldr	x0, [sp, #24]
    3b9c:	ldr	x0, [x0, #56]
    3ba0:	add	x0, x0, #0x58
    3ba4:	mov	x2, #0x5                   	// #5
    3ba8:	mov	w1, #0x0                   	// #0
    3bac:	bl	3230 <memset@plt>
    3bb0:	ldr	x0, [sp, #24]
    3bb4:	ldr	x0, [x0, #56]
    3bb8:	str	wzr, [x0, #72]
    3bbc:	ldr	x0, [sp, #24]
    3bc0:	ldr	x0, [x0, #56]
    3bc4:	strb	wzr, [x0, #93]
    3bc8:	ldr	x0, [sp, #24]
    3bcc:	str	xzr, [x0, #16]
    3bd0:	ldr	x0, [sp, #24]
    3bd4:	str	xzr, [x0, #40]
    3bd8:	mov	w0, #0x0                   	// #0
    3bdc:	ldp	x29, x30, [sp], #112
    3be0:	ret

0000000000003be4 <lzma_code@@XZ_5.0>:
    3be4:	sub	sp, sp, #0x50
    3be8:	stp	x29, x30, [sp, #16]
    3bec:	add	x29, sp, #0x10
    3bf0:	str	x0, [sp, #40]
    3bf4:	str	w1, [sp, #36]
    3bf8:	ldr	x0, [sp, #40]
    3bfc:	ldr	x0, [x0]
    3c00:	cmp	x0, #0x0
    3c04:	b.ne	3c18 <lzma_code@@XZ_5.0+0x34>  // b.any
    3c08:	ldr	x0, [sp, #40]
    3c0c:	ldr	x0, [x0, #8]
    3c10:	cmp	x0, #0x0
    3c14:	b.ne	3c8c <lzma_code@@XZ_5.0+0xa8>  // b.any
    3c18:	ldr	x0, [sp, #40]
    3c1c:	ldr	x0, [x0, #24]
    3c20:	cmp	x0, #0x0
    3c24:	b.ne	3c38 <lzma_code@@XZ_5.0+0x54>  // b.any
    3c28:	ldr	x0, [sp, #40]
    3c2c:	ldr	x0, [x0, #32]
    3c30:	cmp	x0, #0x0
    3c34:	b.ne	3c8c <lzma_code@@XZ_5.0+0xa8>  // b.any
    3c38:	ldr	x0, [sp, #40]
    3c3c:	ldr	x0, [x0, #56]
    3c40:	cmp	x0, #0x0
    3c44:	b.eq	3c8c <lzma_code@@XZ_5.0+0xa8>  // b.none
    3c48:	ldr	x0, [sp, #40]
    3c4c:	ldr	x0, [x0, #56]
    3c50:	ldr	x0, [x0, #24]
    3c54:	cmp	x0, #0x0
    3c58:	b.eq	3c8c <lzma_code@@XZ_5.0+0xa8>  // b.none
    3c5c:	ldr	w0, [sp, #36]
    3c60:	cmp	w0, #0x4
    3c64:	b.hi	3c8c <lzma_code@@XZ_5.0+0xa8>  // b.pmore
    3c68:	ldr	x0, [sp, #40]
    3c6c:	ldr	x1, [x0, #56]
    3c70:	ldr	w0, [sp, #36]
    3c74:	add	x0, x1, x0
    3c78:	ldrb	w0, [x0, #88]
    3c7c:	eor	w0, w0, #0x1
    3c80:	and	w0, w0, #0xff
    3c84:	cmp	w0, #0x0
    3c88:	b.eq	3c94 <lzma_code@@XZ_5.0+0xb0>  // b.none
    3c8c:	mov	w0, #0xb                   	// #11
    3c90:	b	41ac <lzma_code@@XZ_5.0+0x5c8>
    3c94:	ldr	x0, [sp, #40]
    3c98:	ldr	x0, [x0, #64]
    3c9c:	cmp	x0, #0x0
    3ca0:	b.ne	3d34 <lzma_code@@XZ_5.0+0x150>  // b.any
    3ca4:	ldr	x0, [sp, #40]
    3ca8:	ldr	x0, [x0, #72]
    3cac:	cmp	x0, #0x0
    3cb0:	b.ne	3d34 <lzma_code@@XZ_5.0+0x150>  // b.any
    3cb4:	ldr	x0, [sp, #40]
    3cb8:	ldr	x0, [x0, #80]
    3cbc:	cmp	x0, #0x0
    3cc0:	b.ne	3d34 <lzma_code@@XZ_5.0+0x150>  // b.any
    3cc4:	ldr	x0, [sp, #40]
    3cc8:	ldr	x0, [x0, #88]
    3ccc:	cmp	x0, #0x0
    3cd0:	b.ne	3d34 <lzma_code@@XZ_5.0+0x150>  // b.any
    3cd4:	ldr	x0, [sp, #40]
    3cd8:	ldr	x0, [x0, #96]
    3cdc:	cmp	x0, #0x0
    3ce0:	b.ne	3d34 <lzma_code@@XZ_5.0+0x150>  // b.any
    3ce4:	ldr	x0, [sp, #40]
    3ce8:	ldr	x0, [x0, #104]
    3cec:	cmp	x0, #0x0
    3cf0:	b.ne	3d34 <lzma_code@@XZ_5.0+0x150>  // b.any
    3cf4:	ldr	x0, [sp, #40]
    3cf8:	ldr	x0, [x0, #112]
    3cfc:	cmp	x0, #0x0
    3d00:	b.ne	3d34 <lzma_code@@XZ_5.0+0x150>  // b.any
    3d04:	ldr	x0, [sp, #40]
    3d08:	ldr	x0, [x0, #120]
    3d0c:	cmp	x0, #0x0
    3d10:	b.ne	3d34 <lzma_code@@XZ_5.0+0x150>  // b.any
    3d14:	ldr	x0, [sp, #40]
    3d18:	ldr	w0, [x0, #128]
    3d1c:	cmp	w0, #0x0
    3d20:	b.ne	3d34 <lzma_code@@XZ_5.0+0x150>  // b.any
    3d24:	ldr	x0, [sp, #40]
    3d28:	ldr	w0, [x0, #132]
    3d2c:	cmp	w0, #0x0
    3d30:	b.eq	3d3c <lzma_code@@XZ_5.0+0x158>  // b.none
    3d34:	mov	w0, #0x8                   	// #8
    3d38:	b	41ac <lzma_code@@XZ_5.0+0x5c8>
    3d3c:	ldr	x0, [sp, #40]
    3d40:	ldr	x0, [x0, #56]
    3d44:	ldr	w0, [x0, #72]
    3d48:	cmp	w0, #0x5
    3d4c:	b.eq	3f14 <lzma_code@@XZ_5.0+0x330>  // b.none
    3d50:	cmp	w0, #0x5
    3d54:	b.hi	3f1c <lzma_code@@XZ_5.0+0x338>  // b.pmore
    3d58:	cmp	w0, #0x4
    3d5c:	b.eq	3ee4 <lzma_code@@XZ_5.0+0x300>  // b.none
    3d60:	cmp	w0, #0x4
    3d64:	b.hi	3f1c <lzma_code@@XZ_5.0+0x338>  // b.pmore
    3d68:	cmp	w0, #0x3
    3d6c:	b.eq	3eb4 <lzma_code@@XZ_5.0+0x2d0>  // b.none
    3d70:	cmp	w0, #0x3
    3d74:	b.hi	3f1c <lzma_code@@XZ_5.0+0x338>  // b.pmore
    3d78:	cmp	w0, #0x2
    3d7c:	b.eq	3e84 <lzma_code@@XZ_5.0+0x2a0>  // b.none
    3d80:	cmp	w0, #0x2
    3d84:	b.hi	3f1c <lzma_code@@XZ_5.0+0x338>  // b.pmore
    3d88:	cmp	w0, #0x0
    3d8c:	b.eq	3d9c <lzma_code@@XZ_5.0+0x1b8>  // b.none
    3d90:	cmp	w0, #0x1
    3d94:	b.eq	3e54 <lzma_code@@XZ_5.0+0x270>  // b.none
    3d98:	b	3f1c <lzma_code@@XZ_5.0+0x338>
    3d9c:	ldr	w0, [sp, #36]
    3da0:	cmp	w0, #0x4
    3da4:	b.eq	3e38 <lzma_code@@XZ_5.0+0x254>  // b.none
    3da8:	ldr	w0, [sp, #36]
    3dac:	cmp	w0, #0x4
    3db0:	b.hi	3f24 <lzma_code@@XZ_5.0+0x340>  // b.pmore
    3db4:	ldr	w0, [sp, #36]
    3db8:	cmp	w0, #0x3
    3dbc:	b.eq	3e24 <lzma_code@@XZ_5.0+0x240>  // b.none
    3dc0:	ldr	w0, [sp, #36]
    3dc4:	cmp	w0, #0x3
    3dc8:	b.hi	3f24 <lzma_code@@XZ_5.0+0x340>  // b.pmore
    3dcc:	ldr	w0, [sp, #36]
    3dd0:	cmp	w0, #0x2
    3dd4:	b.eq	3e10 <lzma_code@@XZ_5.0+0x22c>  // b.none
    3dd8:	ldr	w0, [sp, #36]
    3ddc:	cmp	w0, #0x2
    3de0:	b.hi	3f24 <lzma_code@@XZ_5.0+0x340>  // b.pmore
    3de4:	ldr	w0, [sp, #36]
    3de8:	cmp	w0, #0x0
    3dec:	b.eq	3e4c <lzma_code@@XZ_5.0+0x268>  // b.none
    3df0:	ldr	w0, [sp, #36]
    3df4:	cmp	w0, #0x1
    3df8:	b.ne	3f24 <lzma_code@@XZ_5.0+0x340>  // b.any
    3dfc:	ldr	x0, [sp, #40]
    3e00:	ldr	x0, [x0, #56]
    3e04:	mov	w1, #0x1                   	// #1
    3e08:	str	w1, [x0, #72]
    3e0c:	b	3e50 <lzma_code@@XZ_5.0+0x26c>
    3e10:	ldr	x0, [sp, #40]
    3e14:	ldr	x0, [x0, #56]
    3e18:	mov	w1, #0x2                   	// #2
    3e1c:	str	w1, [x0, #72]
    3e20:	b	3e50 <lzma_code@@XZ_5.0+0x26c>
    3e24:	ldr	x0, [sp, #40]
    3e28:	ldr	x0, [x0, #56]
    3e2c:	mov	w1, #0x3                   	// #3
    3e30:	str	w1, [x0, #72]
    3e34:	b	3e50 <lzma_code@@XZ_5.0+0x26c>
    3e38:	ldr	x0, [sp, #40]
    3e3c:	ldr	x0, [x0, #56]
    3e40:	mov	w1, #0x4                   	// #4
    3e44:	str	w1, [x0, #72]
    3e48:	b	3e50 <lzma_code@@XZ_5.0+0x26c>
    3e4c:	nop
    3e50:	b	3f24 <lzma_code@@XZ_5.0+0x340>
    3e54:	ldr	w0, [sp, #36]
    3e58:	cmp	w0, #0x1
    3e5c:	b.ne	3e7c <lzma_code@@XZ_5.0+0x298>  // b.any
    3e60:	ldr	x0, [sp, #40]
    3e64:	ldr	x0, [x0, #56]
    3e68:	ldr	x1, [x0, #80]
    3e6c:	ldr	x0, [sp, #40]
    3e70:	ldr	x0, [x0, #8]
    3e74:	cmp	x1, x0
    3e78:	b.eq	3f2c <lzma_code@@XZ_5.0+0x348>  // b.none
    3e7c:	mov	w0, #0xb                   	// #11
    3e80:	b	41ac <lzma_code@@XZ_5.0+0x5c8>
    3e84:	ldr	w0, [sp, #36]
    3e88:	cmp	w0, #0x2
    3e8c:	b.ne	3eac <lzma_code@@XZ_5.0+0x2c8>  // b.any
    3e90:	ldr	x0, [sp, #40]
    3e94:	ldr	x0, [x0, #56]
    3e98:	ldr	x1, [x0, #80]
    3e9c:	ldr	x0, [sp, #40]
    3ea0:	ldr	x0, [x0, #8]
    3ea4:	cmp	x1, x0
    3ea8:	b.eq	3f34 <lzma_code@@XZ_5.0+0x350>  // b.none
    3eac:	mov	w0, #0xb                   	// #11
    3eb0:	b	41ac <lzma_code@@XZ_5.0+0x5c8>
    3eb4:	ldr	w0, [sp, #36]
    3eb8:	cmp	w0, #0x3
    3ebc:	b.ne	3edc <lzma_code@@XZ_5.0+0x2f8>  // b.any
    3ec0:	ldr	x0, [sp, #40]
    3ec4:	ldr	x0, [x0, #56]
    3ec8:	ldr	x1, [x0, #80]
    3ecc:	ldr	x0, [sp, #40]
    3ed0:	ldr	x0, [x0, #8]
    3ed4:	cmp	x1, x0
    3ed8:	b.eq	3f3c <lzma_code@@XZ_5.0+0x358>  // b.none
    3edc:	mov	w0, #0xb                   	// #11
    3ee0:	b	41ac <lzma_code@@XZ_5.0+0x5c8>
    3ee4:	ldr	w0, [sp, #36]
    3ee8:	cmp	w0, #0x4
    3eec:	b.ne	3f0c <lzma_code@@XZ_5.0+0x328>  // b.any
    3ef0:	ldr	x0, [sp, #40]
    3ef4:	ldr	x0, [x0, #56]
    3ef8:	ldr	x1, [x0, #80]
    3efc:	ldr	x0, [sp, #40]
    3f00:	ldr	x0, [x0, #8]
    3f04:	cmp	x1, x0
    3f08:	b.eq	3f44 <lzma_code@@XZ_5.0+0x360>  // b.none
    3f0c:	mov	w0, #0xb                   	// #11
    3f10:	b	41ac <lzma_code@@XZ_5.0+0x5c8>
    3f14:	mov	w0, #0x1                   	// #1
    3f18:	b	41ac <lzma_code@@XZ_5.0+0x5c8>
    3f1c:	mov	w0, #0xb                   	// #11
    3f20:	b	41ac <lzma_code@@XZ_5.0+0x5c8>
    3f24:	nop
    3f28:	b	3f48 <lzma_code@@XZ_5.0+0x364>
    3f2c:	nop
    3f30:	b	3f48 <lzma_code@@XZ_5.0+0x364>
    3f34:	nop
    3f38:	b	3f48 <lzma_code@@XZ_5.0+0x364>
    3f3c:	nop
    3f40:	b	3f48 <lzma_code@@XZ_5.0+0x364>
    3f44:	nop
    3f48:	str	xzr, [sp, #64]
    3f4c:	str	xzr, [sp, #56]
    3f50:	ldr	x0, [sp, #40]
    3f54:	ldr	x0, [x0, #56]
    3f58:	ldr	x8, [x0, #24]
    3f5c:	ldr	x0, [sp, #40]
    3f60:	ldr	x0, [x0, #56]
    3f64:	ldr	x9, [x0]
    3f68:	ldr	x0, [sp, #40]
    3f6c:	ldr	x1, [x0, #48]
    3f70:	ldr	x0, [sp, #40]
    3f74:	ldr	x2, [x0]
    3f78:	ldr	x0, [sp, #40]
    3f7c:	ldr	x4, [x0, #8]
    3f80:	ldr	x0, [sp, #40]
    3f84:	ldr	x5, [x0, #24]
    3f88:	ldr	x0, [sp, #40]
    3f8c:	ldr	x7, [x0, #32]
    3f90:	add	x6, sp, #0x38
    3f94:	add	x3, sp, #0x40
    3f98:	ldr	w0, [sp, #36]
    3f9c:	str	w0, [sp]
    3fa0:	mov	x0, x9
    3fa4:	blr	x8
    3fa8:	str	w0, [sp, #76]
    3fac:	ldr	x0, [sp, #40]
    3fb0:	ldr	x1, [x0]
    3fb4:	ldr	x0, [sp, #64]
    3fb8:	add	x1, x1, x0
    3fbc:	ldr	x0, [sp, #40]
    3fc0:	str	x1, [x0]
    3fc4:	ldr	x0, [sp, #40]
    3fc8:	ldr	x1, [x0, #8]
    3fcc:	ldr	x0, [sp, #64]
    3fd0:	sub	x1, x1, x0
    3fd4:	ldr	x0, [sp, #40]
    3fd8:	str	x1, [x0, #8]
    3fdc:	ldr	x0, [sp, #40]
    3fe0:	ldr	x1, [x0, #16]
    3fe4:	ldr	x0, [sp, #64]
    3fe8:	add	x1, x1, x0
    3fec:	ldr	x0, [sp, #40]
    3ff0:	str	x1, [x0, #16]
    3ff4:	ldr	x0, [sp, #40]
    3ff8:	ldr	x1, [x0, #24]
    3ffc:	ldr	x0, [sp, #56]
    4000:	add	x1, x1, x0
    4004:	ldr	x0, [sp, #40]
    4008:	str	x1, [x0, #24]
    400c:	ldr	x0, [sp, #40]
    4010:	ldr	x1, [x0, #32]
    4014:	ldr	x0, [sp, #56]
    4018:	sub	x1, x1, x0
    401c:	ldr	x0, [sp, #40]
    4020:	str	x1, [x0, #32]
    4024:	ldr	x0, [sp, #40]
    4028:	ldr	x1, [x0, #40]
    402c:	ldr	x0, [sp, #56]
    4030:	add	x1, x1, x0
    4034:	ldr	x0, [sp, #40]
    4038:	str	x1, [x0, #40]
    403c:	ldr	x0, [sp, #40]
    4040:	ldr	x0, [x0, #56]
    4044:	ldr	x1, [sp, #40]
    4048:	ldr	x1, [x1, #8]
    404c:	str	x1, [x0, #80]
    4050:	ldr	w0, [sp, #76]
    4054:	cmp	w0, #0x20
    4058:	b.eq	4114 <lzma_code@@XZ_5.0+0x530>  // b.none
    405c:	ldr	w0, [sp, #76]
    4060:	cmp	w0, #0x20
    4064:	b.hi	4194 <lzma_code@@XZ_5.0+0x5b0>  // b.pmore
    4068:	ldr	w0, [sp, #76]
    406c:	cmp	w0, #0x6
    4070:	b.eq	4184 <lzma_code@@XZ_5.0+0x5a0>  // b.none
    4074:	ldr	w0, [sp, #76]
    4078:	cmp	w0, #0x6
    407c:	b.hi	4194 <lzma_code@@XZ_5.0+0x5b0>  // b.pmore
    4080:	ldr	w0, [sp, #76]
    4084:	cmp	w0, #0x4
    4088:	b.hi	4194 <lzma_code@@XZ_5.0+0x5b0>  // b.pmore
    408c:	ldr	w0, [sp, #76]
    4090:	cmp	w0, #0x2
    4094:	b.cs	4184 <lzma_code@@XZ_5.0+0x5a0>  // b.hs, b.nlast
    4098:	ldr	w0, [sp, #76]
    409c:	cmp	w0, #0x0
    40a0:	b.eq	40b4 <lzma_code@@XZ_5.0+0x4d0>  // b.none
    40a4:	ldr	w0, [sp, #76]
    40a8:	cmp	w0, #0x1
    40ac:	b.eq	4128 <lzma_code@@XZ_5.0+0x544>  // b.none
    40b0:	b	4194 <lzma_code@@XZ_5.0+0x5b0>
    40b4:	ldr	x0, [sp, #56]
    40b8:	cmp	x0, #0x0
    40bc:	b.ne	4100 <lzma_code@@XZ_5.0+0x51c>  // b.any
    40c0:	ldr	x0, [sp, #64]
    40c4:	cmp	x0, #0x0
    40c8:	b.ne	4100 <lzma_code@@XZ_5.0+0x51c>  // b.any
    40cc:	ldr	x0, [sp, #40]
    40d0:	ldr	x0, [x0, #56]
    40d4:	ldrb	w0, [x0, #93]
    40d8:	cmp	w0, #0x0
    40dc:	b.eq	40ec <lzma_code@@XZ_5.0+0x508>  // b.none
    40e0:	mov	w0, #0xa                   	// #10
    40e4:	str	w0, [sp, #76]
    40e8:	b	4110 <lzma_code@@XZ_5.0+0x52c>
    40ec:	ldr	x0, [sp, #40]
    40f0:	ldr	x0, [x0, #56]
    40f4:	mov	w1, #0x1                   	// #1
    40f8:	strb	w1, [x0, #93]
    40fc:	b	4110 <lzma_code@@XZ_5.0+0x52c>
    4100:	ldr	x0, [sp, #40]
    4104:	ldr	x0, [x0, #56]
    4108:	strb	wzr, [x0, #93]
    410c:	b	41a8 <lzma_code@@XZ_5.0+0x5c4>
    4110:	b	41a8 <lzma_code@@XZ_5.0+0x5c4>
    4114:	ldr	x0, [sp, #40]
    4118:	ldr	x0, [x0, #56]
    411c:	strb	wzr, [x0, #93]
    4120:	str	wzr, [sp, #76]
    4124:	b	41a8 <lzma_code@@XZ_5.0+0x5c4>
    4128:	ldr	x0, [sp, #40]
    412c:	ldr	x0, [x0, #56]
    4130:	ldr	w0, [x0, #72]
    4134:	cmp	w0, #0x1
    4138:	b.eq	4164 <lzma_code@@XZ_5.0+0x580>  // b.none
    413c:	ldr	x0, [sp, #40]
    4140:	ldr	x0, [x0, #56]
    4144:	ldr	w0, [x0, #72]
    4148:	cmp	w0, #0x2
    414c:	b.eq	4164 <lzma_code@@XZ_5.0+0x580>  // b.none
    4150:	ldr	x0, [sp, #40]
    4154:	ldr	x0, [x0, #56]
    4158:	ldr	w0, [x0, #72]
    415c:	cmp	w0, #0x4
    4160:	b.ne	4174 <lzma_code@@XZ_5.0+0x590>  // b.any
    4164:	ldr	x0, [sp, #40]
    4168:	ldr	x0, [x0, #56]
    416c:	str	wzr, [x0, #72]
    4170:	b	4184 <lzma_code@@XZ_5.0+0x5a0>
    4174:	ldr	x0, [sp, #40]
    4178:	ldr	x0, [x0, #56]
    417c:	mov	w1, #0x5                   	// #5
    4180:	str	w1, [x0, #72]
    4184:	ldr	x0, [sp, #40]
    4188:	ldr	x0, [x0, #56]
    418c:	strb	wzr, [x0, #93]
    4190:	b	41a8 <lzma_code@@XZ_5.0+0x5c4>
    4194:	ldr	x0, [sp, #40]
    4198:	ldr	x0, [x0, #56]
    419c:	mov	w1, #0x6                   	// #6
    41a0:	str	w1, [x0, #72]
    41a4:	nop
    41a8:	ldr	w0, [sp, #76]
    41ac:	ldp	x29, x30, [sp, #16]
    41b0:	add	sp, sp, #0x50
    41b4:	ret

00000000000041b8 <lzma_end@@XZ_5.0>:
    41b8:	stp	x29, x30, [sp, #-32]!
    41bc:	mov	x29, sp
    41c0:	str	x0, [sp, #24]
    41c4:	ldr	x0, [sp, #24]
    41c8:	cmp	x0, #0x0
    41cc:	b.eq	4228 <lzma_end@@XZ_5.0+0x70>  // b.none
    41d0:	ldr	x0, [sp, #24]
    41d4:	ldr	x0, [x0, #56]
    41d8:	cmp	x0, #0x0
    41dc:	b.eq	4228 <lzma_end@@XZ_5.0+0x70>  // b.none
    41e0:	ldr	x0, [sp, #24]
    41e4:	ldr	x0, [x0, #56]
    41e8:	mov	x2, x0
    41ec:	ldr	x0, [sp, #24]
    41f0:	ldr	x0, [x0, #48]
    41f4:	mov	x1, x0
    41f8:	mov	x0, x2
    41fc:	bl	3a48 <lzma_version_string@@XZ_5.0+0x358>
    4200:	ldr	x0, [sp, #24]
    4204:	ldr	x2, [x0, #56]
    4208:	ldr	x0, [sp, #24]
    420c:	ldr	x0, [x0, #48]
    4210:	mov	x1, x0
    4214:	mov	x0, x2
    4218:	bl	3814 <lzma_version_string@@XZ_5.0+0x124>
    421c:	ldr	x0, [sp, #24]
    4220:	str	xzr, [x0, #56]
    4224:	nop
    4228:	nop
    422c:	ldp	x29, x30, [sp], #32
    4230:	ret

0000000000004234 <lzma_get_progress@@XZ_5.2>:
    4234:	stp	x29, x30, [sp, #-48]!
    4238:	mov	x29, sp
    423c:	str	x0, [sp, #40]
    4240:	str	x1, [sp, #32]
    4244:	str	x2, [sp, #24]
    4248:	ldr	x0, [sp, #40]
    424c:	ldr	x0, [x0, #56]
    4250:	ldr	x0, [x0, #40]
    4254:	cmp	x0, #0x0
    4258:	b.eq	4284 <lzma_get_progress@@XZ_5.2+0x50>  // b.none
    425c:	ldr	x0, [sp, #40]
    4260:	ldr	x0, [x0, #56]
    4264:	ldr	x3, [x0, #40]
    4268:	ldr	x0, [sp, #40]
    426c:	ldr	x0, [x0, #56]
    4270:	ldr	x0, [x0]
    4274:	ldr	x2, [sp, #24]
    4278:	ldr	x1, [sp, #32]
    427c:	blr	x3
    4280:	b	42a8 <lzma_get_progress@@XZ_5.2+0x74>
    4284:	ldr	x0, [sp, #40]
    4288:	ldr	x1, [x0, #16]
    428c:	ldr	x0, [sp, #32]
    4290:	str	x1, [x0]
    4294:	ldr	x0, [sp, #40]
    4298:	ldr	x1, [x0, #40]
    429c:	ldr	x0, [sp, #24]
    42a0:	str	x1, [x0]
    42a4:	nop
    42a8:	ldp	x29, x30, [sp], #48
    42ac:	ret

00000000000042b0 <lzma_get_check@@XZ_5.0>:
    42b0:	stp	x29, x30, [sp, #-32]!
    42b4:	mov	x29, sp
    42b8:	str	x0, [sp, #24]
    42bc:	ldr	x0, [sp, #24]
    42c0:	ldr	x0, [x0, #56]
    42c4:	ldr	x0, [x0, #48]
    42c8:	cmp	x0, #0x0
    42cc:	b.ne	42d8 <lzma_get_check@@XZ_5.0+0x28>  // b.any
    42d0:	mov	w0, #0x0                   	// #0
    42d4:	b	42f4 <lzma_get_check@@XZ_5.0+0x44>
    42d8:	ldr	x0, [sp, #24]
    42dc:	ldr	x0, [x0, #56]
    42e0:	ldr	x1, [x0, #48]
    42e4:	ldr	x0, [sp, #24]
    42e8:	ldr	x0, [x0, #56]
    42ec:	ldr	x0, [x0]
    42f0:	blr	x1
    42f4:	ldp	x29, x30, [sp], #32
    42f8:	ret

00000000000042fc <lzma_memusage@@XZ_5.0>:
    42fc:	stp	x29, x30, [sp, #-48]!
    4300:	mov	x29, sp
    4304:	str	x0, [sp, #24]
    4308:	ldr	x0, [sp, #24]
    430c:	cmp	x0, #0x0
    4310:	b.eq	4368 <lzma_memusage@@XZ_5.0+0x6c>  // b.none
    4314:	ldr	x0, [sp, #24]
    4318:	ldr	x0, [x0, #56]
    431c:	cmp	x0, #0x0
    4320:	b.eq	4368 <lzma_memusage@@XZ_5.0+0x6c>  // b.none
    4324:	ldr	x0, [sp, #24]
    4328:	ldr	x0, [x0, #56]
    432c:	ldr	x0, [x0, #56]
    4330:	cmp	x0, #0x0
    4334:	b.eq	4368 <lzma_memusage@@XZ_5.0+0x6c>  // b.none
    4338:	ldr	x0, [sp, #24]
    433c:	ldr	x0, [x0, #56]
    4340:	ldr	x4, [x0, #56]
    4344:	ldr	x0, [sp, #24]
    4348:	ldr	x0, [x0, #56]
    434c:	ldr	x0, [x0]
    4350:	add	x2, sp, #0x20
    4354:	add	x1, sp, #0x28
    4358:	mov	x3, #0x0                   	// #0
    435c:	blr	x4
    4360:	cmp	w0, #0x0
    4364:	b.eq	4370 <lzma_memusage@@XZ_5.0+0x74>  // b.none
    4368:	mov	x0, #0x0                   	// #0
    436c:	b	4374 <lzma_memusage@@XZ_5.0+0x78>
    4370:	ldr	x0, [sp, #40]
    4374:	ldp	x29, x30, [sp], #48
    4378:	ret

000000000000437c <lzma_memlimit_get@@XZ_5.0>:
    437c:	stp	x29, x30, [sp, #-48]!
    4380:	mov	x29, sp
    4384:	str	x0, [sp, #24]
    4388:	ldr	x0, [sp, #24]
    438c:	cmp	x0, #0x0
    4390:	b.eq	43e8 <lzma_memlimit_get@@XZ_5.0+0x6c>  // b.none
    4394:	ldr	x0, [sp, #24]
    4398:	ldr	x0, [x0, #56]
    439c:	cmp	x0, #0x0
    43a0:	b.eq	43e8 <lzma_memlimit_get@@XZ_5.0+0x6c>  // b.none
    43a4:	ldr	x0, [sp, #24]
    43a8:	ldr	x0, [x0, #56]
    43ac:	ldr	x0, [x0, #56]
    43b0:	cmp	x0, #0x0
    43b4:	b.eq	43e8 <lzma_memlimit_get@@XZ_5.0+0x6c>  // b.none
    43b8:	ldr	x0, [sp, #24]
    43bc:	ldr	x0, [x0, #56]
    43c0:	ldr	x4, [x0, #56]
    43c4:	ldr	x0, [sp, #24]
    43c8:	ldr	x0, [x0, #56]
    43cc:	ldr	x0, [x0]
    43d0:	add	x2, sp, #0x28
    43d4:	add	x1, sp, #0x20
    43d8:	mov	x3, #0x0                   	// #0
    43dc:	blr	x4
    43e0:	cmp	w0, #0x0
    43e4:	b.eq	43f0 <lzma_memlimit_get@@XZ_5.0+0x74>  // b.none
    43e8:	mov	x0, #0x0                   	// #0
    43ec:	b	43f4 <lzma_memlimit_get@@XZ_5.0+0x78>
    43f0:	ldr	x0, [sp, #40]
    43f4:	ldp	x29, x30, [sp], #48
    43f8:	ret

00000000000043fc <lzma_memlimit_set@@XZ_5.0>:
    43fc:	stp	x29, x30, [sp, #-48]!
    4400:	mov	x29, sp
    4404:	str	x0, [sp, #24]
    4408:	str	x1, [sp, #16]
    440c:	ldr	x0, [sp, #24]
    4410:	cmp	x0, #0x0
    4414:	b.eq	443c <lzma_memlimit_set@@XZ_5.0+0x40>  // b.none
    4418:	ldr	x0, [sp, #24]
    441c:	ldr	x0, [x0, #56]
    4420:	cmp	x0, #0x0
    4424:	b.eq	443c <lzma_memlimit_set@@XZ_5.0+0x40>  // b.none
    4428:	ldr	x0, [sp, #24]
    442c:	ldr	x0, [x0, #56]
    4430:	ldr	x0, [x0, #56]
    4434:	cmp	x0, #0x0
    4438:	b.ne	4444 <lzma_memlimit_set@@XZ_5.0+0x48>  // b.any
    443c:	mov	w0, #0xb                   	// #11
    4440:	b	4480 <lzma_memlimit_set@@XZ_5.0+0x84>
    4444:	ldr	x0, [sp, #16]
    4448:	cmp	x0, #0x0
    444c:	b.ne	4458 <lzma_memlimit_set@@XZ_5.0+0x5c>  // b.any
    4450:	mov	x0, #0x1                   	// #1
    4454:	str	x0, [sp, #16]
    4458:	ldr	x0, [sp, #24]
    445c:	ldr	x0, [x0, #56]
    4460:	ldr	x4, [x0, #56]
    4464:	ldr	x0, [sp, #24]
    4468:	ldr	x0, [x0, #56]
    446c:	ldr	x0, [x0]
    4470:	add	x2, sp, #0x28
    4474:	add	x1, sp, #0x20
    4478:	ldr	x3, [sp, #16]
    447c:	blr	x4
    4480:	ldp	x29, x30, [sp], #48
    4484:	ret
    4488:	sub	sp, sp, #0x10
    448c:	str	x0, [sp, #8]
    4490:	ldr	x0, [sp, #8]
    4494:	add	x0, x0, #0x3
    4498:	and	x0, x0, #0xfffffffffffffffc
    449c:	add	sp, sp, #0x10
    44a0:	ret

00000000000044a4 <lzma_block_compressed_size@@XZ_5.0>:
    44a4:	stp	x29, x30, [sp, #-64]!
    44a8:	mov	x29, sp
    44ac:	str	x19, [sp, #16]
    44b0:	str	x0, [sp, #40]
    44b4:	str	x1, [sp, #32]
    44b8:	ldr	x0, [sp, #40]
    44bc:	bl	3190 <lzma_block_unpadded_size@plt>
    44c0:	cmp	x0, #0x0
    44c4:	b.ne	44d0 <lzma_block_compressed_size@@XZ_5.0+0x2c>  // b.any
    44c8:	mov	w0, #0xb                   	// #11
    44cc:	b	4550 <lzma_block_compressed_size@@XZ_5.0+0xac>
    44d0:	ldr	x0, [sp, #40]
    44d4:	ldr	w19, [x0, #4]
    44d8:	ldr	x0, [sp, #40]
    44dc:	ldr	w0, [x0, #8]
    44e0:	bl	3270 <lzma_check_size@plt>
    44e4:	add	w0, w19, w0
    44e8:	str	w0, [sp, #60]
    44ec:	ldr	w0, [sp, #60]
    44f0:	ldr	x1, [sp, #32]
    44f4:	cmp	x1, x0
    44f8:	b.hi	4504 <lzma_block_compressed_size@@XZ_5.0+0x60>  // b.pmore
    44fc:	mov	w0, #0x9                   	// #9
    4500:	b	4550 <lzma_block_compressed_size@@XZ_5.0+0xac>
    4504:	ldr	w0, [sp, #60]
    4508:	ldr	x1, [sp, #32]
    450c:	sub	x0, x1, x0
    4510:	str	x0, [sp, #48]
    4514:	ldr	x0, [sp, #40]
    4518:	ldr	x0, [x0, #16]
    451c:	cmn	x0, #0x1
    4520:	b.eq	4540 <lzma_block_compressed_size@@XZ_5.0+0x9c>  // b.none
    4524:	ldr	x0, [sp, #40]
    4528:	ldr	x0, [x0, #16]
    452c:	ldr	x1, [sp, #48]
    4530:	cmp	x1, x0
    4534:	b.eq	4540 <lzma_block_compressed_size@@XZ_5.0+0x9c>  // b.none
    4538:	mov	w0, #0x9                   	// #9
    453c:	b	4550 <lzma_block_compressed_size@@XZ_5.0+0xac>
    4540:	ldr	x0, [sp, #40]
    4544:	ldr	x1, [sp, #48]
    4548:	str	x1, [x0, #16]
    454c:	mov	w0, #0x0                   	// #0
    4550:	ldr	x19, [sp, #16]
    4554:	ldp	x29, x30, [sp], #64
    4558:	ret

000000000000455c <lzma_block_unpadded_size@@XZ_5.0>:
    455c:	stp	x29, x30, [sp, #-64]!
    4560:	mov	x29, sp
    4564:	str	x19, [sp, #16]
    4568:	str	x0, [sp, #40]
    456c:	ldr	x0, [sp, #40]
    4570:	cmp	x0, #0x0
    4574:	b.eq	45fc <lzma_block_unpadded_size@@XZ_5.0+0xa0>  // b.none
    4578:	ldr	x0, [sp, #40]
    457c:	ldr	w0, [x0]
    4580:	cmp	w0, #0x1
    4584:	b.hi	45fc <lzma_block_unpadded_size@@XZ_5.0+0xa0>  // b.pmore
    4588:	ldr	x0, [sp, #40]
    458c:	ldr	w0, [x0, #4]
    4590:	cmp	w0, #0x7
    4594:	b.ls	45fc <lzma_block_unpadded_size@@XZ_5.0+0xa0>  // b.plast
    4598:	ldr	x0, [sp, #40]
    459c:	ldr	w0, [x0, #4]
    45a0:	cmp	w0, #0x400
    45a4:	b.hi	45fc <lzma_block_unpadded_size@@XZ_5.0+0xa0>  // b.pmore
    45a8:	ldr	x0, [sp, #40]
    45ac:	ldr	w0, [x0, #4]
    45b0:	and	w0, w0, #0x3
    45b4:	cmp	w0, #0x0
    45b8:	b.ne	45fc <lzma_block_unpadded_size@@XZ_5.0+0xa0>  // b.any
    45bc:	ldr	x0, [sp, #40]
    45c0:	ldr	x0, [x0, #16]
    45c4:	cmp	x0, #0x0
    45c8:	b.ge	45dc <lzma_block_unpadded_size@@XZ_5.0+0x80>  // b.tcont
    45cc:	ldr	x0, [sp, #40]
    45d0:	ldr	x0, [x0, #16]
    45d4:	cmn	x0, #0x1
    45d8:	b.ne	45fc <lzma_block_unpadded_size@@XZ_5.0+0xa0>  // b.any
    45dc:	ldr	x0, [sp, #40]
    45e0:	ldr	x0, [x0, #16]
    45e4:	cmp	x0, #0x0
    45e8:	b.eq	45fc <lzma_block_unpadded_size@@XZ_5.0+0xa0>  // b.none
    45ec:	ldr	x0, [sp, #40]
    45f0:	ldr	w0, [x0, #8]
    45f4:	cmp	w0, #0xf
    45f8:	b.ls	4604 <lzma_block_unpadded_size@@XZ_5.0+0xa8>  // b.plast
    45fc:	mov	x0, #0x0                   	// #0
    4600:	b	4668 <lzma_block_unpadded_size@@XZ_5.0+0x10c>
    4604:	ldr	x0, [sp, #40]
    4608:	ldr	x0, [x0, #16]
    460c:	cmn	x0, #0x1
    4610:	b.ne	461c <lzma_block_unpadded_size@@XZ_5.0+0xc0>  // b.any
    4614:	mov	x0, #0xffffffffffffffff    	// #-1
    4618:	b	4668 <lzma_block_unpadded_size@@XZ_5.0+0x10c>
    461c:	ldr	x0, [sp, #40]
    4620:	ldr	x1, [x0, #16]
    4624:	ldr	x0, [sp, #40]
    4628:	ldr	w0, [x0, #4]
    462c:	mov	w0, w0
    4630:	add	x19, x1, x0
    4634:	ldr	x0, [sp, #40]
    4638:	ldr	w0, [x0, #8]
    463c:	bl	3270 <lzma_check_size@plt>
    4640:	mov	w0, w0
    4644:	add	x0, x19, x0
    4648:	str	x0, [sp, #56]
    464c:	ldr	x1, [sp, #56]
    4650:	mov	x0, #0x7ffffffffffffffc    	// #9223372036854775804
    4654:	cmp	x1, x0
    4658:	b.ls	4664 <lzma_block_unpadded_size@@XZ_5.0+0x108>  // b.plast
    465c:	mov	x0, #0x0                   	// #0
    4660:	b	4668 <lzma_block_unpadded_size@@XZ_5.0+0x10c>
    4664:	ldr	x0, [sp, #56]
    4668:	ldr	x19, [sp, #16]
    466c:	ldp	x29, x30, [sp], #64
    4670:	ret

0000000000004674 <lzma_block_total_size@@XZ_5.0>:
    4674:	stp	x29, x30, [sp, #-48]!
    4678:	mov	x29, sp
    467c:	str	x0, [sp, #24]
    4680:	ldr	x0, [sp, #24]
    4684:	bl	3190 <lzma_block_unpadded_size@plt>
    4688:	str	x0, [sp, #40]
    468c:	ldr	x0, [sp, #40]
    4690:	cmn	x0, #0x1
    4694:	b.eq	46a4 <lzma_block_total_size@@XZ_5.0+0x30>  // b.none
    4698:	ldr	x0, [sp, #40]
    469c:	bl	4488 <lzma_memlimit_set@@XZ_5.0+0x8c>
    46a0:	str	x0, [sp, #40]
    46a4:	ldr	x0, [sp, #40]
    46a8:	ldp	x29, x30, [sp], #48
    46ac:	ret
    46b0:	stp	x29, x30, [sp, #-32]!
    46b4:	mov	x29, sp
    46b8:	str	x0, [sp, #24]
    46bc:	str	w1, [sp, #20]
    46c0:	ldr	x0, [sp, #24]
    46c4:	add	x0, x0, #0x50
    46c8:	ldr	w1, [sp, #20]
    46cc:	bl	3440 <lzma_lzma_preset@plt>
    46d0:	and	w0, w0, #0xff
    46d4:	cmp	w0, #0x0
    46d8:	b.eq	46e4 <lzma_block_total_size@@XZ_5.0+0x70>  // b.none
    46dc:	mov	w0, #0x1                   	// #1
    46e0:	b	4710 <lzma_block_total_size@@XZ_5.0+0x9c>
    46e4:	ldr	x0, [sp, #24]
    46e8:	mov	x1, #0x21                  	// #33
    46ec:	str	x1, [x0]
    46f0:	ldr	x0, [sp, #24]
    46f4:	add	x1, x0, #0x50
    46f8:	ldr	x0, [sp, #24]
    46fc:	str	x1, [x0, #8]
    4700:	ldr	x0, [sp, #24]
    4704:	mov	x1, #0xffffffffffffffff    	// #-1
    4708:	str	x1, [x0, #16]
    470c:	mov	w0, #0x0                   	// #0
    4710:	ldp	x29, x30, [sp], #32
    4714:	ret

0000000000004718 <lzma_filters_copy@@XZ_5.0>:
    4718:	stp	x29, x30, [sp, #-96]!
    471c:	mov	x29, sp
    4720:	str	x19, [sp, #16]
    4724:	str	x0, [sp, #56]
    4728:	str	x1, [sp, #48]
    472c:	str	x2, [sp, #40]
    4730:	ldr	x0, [sp, #56]
    4734:	cmp	x0, #0x0
    4738:	b.eq	4748 <lzma_filters_copy@@XZ_5.0+0x30>  // b.none
    473c:	ldr	x0, [sp, #48]
    4740:	cmp	x0, #0x0
    4744:	b.ne	4750 <lzma_filters_copy@@XZ_5.0+0x38>  // b.any
    4748:	mov	w0, #0xb                   	// #11
    474c:	b	49c8 <lzma_filters_copy@@XZ_5.0+0x2b0>
    4750:	str	xzr, [sp, #80]
    4754:	b	492c <lzma_filters_copy@@XZ_5.0+0x214>
    4758:	ldr	x0, [sp, #80]
    475c:	cmp	x0, #0x4
    4760:	b.ne	4770 <lzma_filters_copy@@XZ_5.0+0x58>  // b.any
    4764:	mov	w0, #0x8                   	// #8
    4768:	str	w0, [sp, #92]
    476c:	b	497c <lzma_filters_copy@@XZ_5.0+0x264>
    4770:	ldr	x0, [sp, #80]
    4774:	lsl	x0, x0, #4
    4778:	ldr	x1, [sp, #56]
    477c:	add	x1, x1, x0
    4780:	ldr	x0, [sp, #80]
    4784:	lsl	x0, x0, #4
    4788:	ldr	x2, [sp, #48]
    478c:	add	x0, x2, x0
    4790:	ldr	x1, [x1]
    4794:	str	x1, [x0]
    4798:	ldr	x0, [sp, #80]
    479c:	lsl	x0, x0, #4
    47a0:	ldr	x1, [sp, #56]
    47a4:	add	x0, x1, x0
    47a8:	ldr	x0, [x0, #8]
    47ac:	cmp	x0, #0x0
    47b0:	b.ne	47cc <lzma_filters_copy@@XZ_5.0+0xb4>  // b.any
    47b4:	ldr	x0, [sp, #80]
    47b8:	lsl	x0, x0, #4
    47bc:	ldr	x1, [sp, #48]
    47c0:	add	x0, x1, x0
    47c4:	str	xzr, [x0, #8]
    47c8:	b	4920 <lzma_filters_copy@@XZ_5.0+0x208>
    47cc:	str	xzr, [sp, #72]
    47d0:	b	4818 <lzma_filters_copy@@XZ_5.0+0x100>
    47d4:	adrp	x0, 2b000 <lzma_mode_is_supported@@XZ_5.0+0x10368>
    47d8:	add	x2, x0, #0xf68
    47dc:	ldr	x1, [sp, #72]
    47e0:	mov	x0, x1
    47e4:	lsl	x0, x0, #1
    47e8:	add	x0, x0, x1
    47ec:	lsl	x0, x0, #3
    47f0:	add	x0, x2, x0
    47f4:	ldr	x0, [x0]
    47f8:	cmn	x0, #0x1
    47fc:	b.ne	480c <lzma_filters_copy@@XZ_5.0+0xf4>  // b.any
    4800:	mov	w0, #0x8                   	// #8
    4804:	str	w0, [sp, #92]
    4808:	b	497c <lzma_filters_copy@@XZ_5.0+0x264>
    480c:	ldr	x0, [sp, #72]
    4810:	add	x0, x0, #0x1
    4814:	str	x0, [sp, #72]
    4818:	ldr	x0, [sp, #80]
    481c:	lsl	x0, x0, #4
    4820:	ldr	x1, [sp, #56]
    4824:	add	x0, x1, x0
    4828:	ldr	x2, [x0]
    482c:	adrp	x0, 2b000 <lzma_mode_is_supported@@XZ_5.0+0x10368>
    4830:	add	x3, x0, #0xf68
    4834:	ldr	x1, [sp, #72]
    4838:	mov	x0, x1
    483c:	lsl	x0, x0, #1
    4840:	add	x0, x0, x1
    4844:	lsl	x0, x0, #3
    4848:	add	x0, x3, x0
    484c:	ldr	x0, [x0]
    4850:	cmp	x2, x0
    4854:	b.ne	47d4 <lzma_filters_copy@@XZ_5.0+0xbc>  // b.any
    4858:	adrp	x0, 2b000 <lzma_mode_is_supported@@XZ_5.0+0x10368>
    485c:	add	x2, x0, #0xf68
    4860:	ldr	x1, [sp, #72]
    4864:	mov	x0, x1
    4868:	lsl	x0, x0, #1
    486c:	add	x0, x0, x1
    4870:	lsl	x0, x0, #3
    4874:	add	x0, x2, x0
    4878:	ldr	x2, [x0, #8]
    487c:	ldr	x0, [sp, #80]
    4880:	lsl	x0, x0, #4
    4884:	ldr	x1, [sp, #48]
    4888:	add	x19, x1, x0
    488c:	ldr	x1, [sp, #40]
    4890:	mov	x0, x2
    4894:	bl	36fc <lzma_version_string@@XZ_5.0+0xc>
    4898:	str	x0, [x19, #8]
    489c:	ldr	x0, [sp, #80]
    48a0:	lsl	x0, x0, #4
    48a4:	ldr	x1, [sp, #48]
    48a8:	add	x0, x1, x0
    48ac:	ldr	x0, [x0, #8]
    48b0:	cmp	x0, #0x0
    48b4:	b.ne	48c4 <lzma_filters_copy@@XZ_5.0+0x1ac>  // b.any
    48b8:	mov	w0, #0x5                   	// #5
    48bc:	str	w0, [sp, #92]
    48c0:	b	497c <lzma_filters_copy@@XZ_5.0+0x264>
    48c4:	ldr	x0, [sp, #80]
    48c8:	lsl	x0, x0, #4
    48cc:	ldr	x1, [sp, #48]
    48d0:	add	x0, x1, x0
    48d4:	ldr	x3, [x0, #8]
    48d8:	ldr	x0, [sp, #80]
    48dc:	lsl	x0, x0, #4
    48e0:	ldr	x1, [sp, #56]
    48e4:	add	x0, x1, x0
    48e8:	ldr	x4, [x0, #8]
    48ec:	adrp	x0, 2b000 <lzma_mode_is_supported@@XZ_5.0+0x10368>
    48f0:	add	x2, x0, #0xf68
    48f4:	ldr	x1, [sp, #72]
    48f8:	mov	x0, x1
    48fc:	lsl	x0, x0, #1
    4900:	add	x0, x0, x1
    4904:	lsl	x0, x0, #3
    4908:	add	x0, x2, x0
    490c:	ldr	x0, [x0, #8]
    4910:	mov	x2, x0
    4914:	mov	x1, x4
    4918:	mov	x0, x3
    491c:	bl	3090 <memcpy@plt>
    4920:	ldr	x0, [sp, #80]
    4924:	add	x0, x0, #0x1
    4928:	str	x0, [sp, #80]
    492c:	ldr	x0, [sp, #80]
    4930:	lsl	x0, x0, #4
    4934:	ldr	x1, [sp, #56]
    4938:	add	x0, x1, x0
    493c:	ldr	x0, [x0]
    4940:	cmn	x0, #0x1
    4944:	b.ne	4758 <lzma_filters_copy@@XZ_5.0+0x40>  // b.any
    4948:	ldr	x0, [sp, #80]
    494c:	lsl	x0, x0, #4
    4950:	ldr	x1, [sp, #48]
    4954:	add	x0, x1, x0
    4958:	mov	x1, #0xffffffffffffffff    	// #-1
    495c:	str	x1, [x0]
    4960:	ldr	x0, [sp, #80]
    4964:	lsl	x0, x0, #4
    4968:	ldr	x1, [sp, #48]
    496c:	add	x0, x1, x0
    4970:	str	xzr, [x0, #8]
    4974:	mov	w0, #0x0                   	// #0
    4978:	b	49c8 <lzma_filters_copy@@XZ_5.0+0x2b0>
    497c:	b	49b0 <lzma_filters_copy@@XZ_5.0+0x298>
    4980:	ldr	x0, [sp, #80]
    4984:	lsl	x0, x0, #4
    4988:	ldr	x1, [sp, #48]
    498c:	add	x0, x1, x0
    4990:	ldr	x0, [x0, #8]
    4994:	ldr	x1, [sp, #40]
    4998:	bl	3814 <lzma_version_string@@XZ_5.0+0x124>
    499c:	ldr	x0, [sp, #80]
    49a0:	lsl	x0, x0, #4
    49a4:	ldr	x1, [sp, #48]
    49a8:	add	x0, x1, x0
    49ac:	str	xzr, [x0, #8]
    49b0:	ldr	x0, [sp, #80]
    49b4:	sub	x1, x0, #0x1
    49b8:	str	x1, [sp, #80]
    49bc:	cmp	x0, #0x0
    49c0:	b.ne	4980 <lzma_filters_copy@@XZ_5.0+0x268>  // b.any
    49c4:	ldr	w0, [sp, #92]
    49c8:	ldr	x19, [sp, #16]
    49cc:	ldp	x29, x30, [sp], #96
    49d0:	ret
    49d4:	sub	sp, sp, #0x40
    49d8:	str	x0, [sp, #8]
    49dc:	str	x1, [sp]
    49e0:	ldr	x0, [sp, #8]
    49e4:	cmp	x0, #0x0
    49e8:	b.eq	49fc <lzma_filters_copy@@XZ_5.0+0x2e4>  // b.none
    49ec:	ldr	x0, [sp, #8]
    49f0:	ldr	x0, [x0]
    49f4:	cmn	x0, #0x1
    49f8:	b.ne	4a04 <lzma_filters_copy@@XZ_5.0+0x2ec>  // b.any
    49fc:	mov	w0, #0xb                   	// #11
    4a00:	b	4bac <lzma_filters_copy@@XZ_5.0+0x494>
    4a04:	str	xzr, [sp, #56]
    4a08:	mov	w0, #0x1                   	// #1
    4a0c:	strb	w0, [sp, #55]
    4a10:	strb	wzr, [sp, #31]
    4a14:	str	xzr, [sp, #40]
    4a18:	str	xzr, [sp, #32]
    4a1c:	b	4a60 <lzma_filters_copy@@XZ_5.0+0x348>
    4a20:	adrp	x0, 2b000 <lzma_mode_is_supported@@XZ_5.0+0x10368>
    4a24:	add	x2, x0, #0xf68
    4a28:	ldr	x1, [sp, #32]
    4a2c:	mov	x0, x1
    4a30:	lsl	x0, x0, #1
    4a34:	add	x0, x0, x1
    4a38:	lsl	x0, x0, #3
    4a3c:	add	x0, x2, x0
    4a40:	ldr	x0, [x0]
    4a44:	cmn	x0, #0x1
    4a48:	b.ne	4a54 <lzma_filters_copy@@XZ_5.0+0x33c>  // b.any
    4a4c:	mov	w0, #0x8                   	// #8
    4a50:	b	4bac <lzma_filters_copy@@XZ_5.0+0x494>
    4a54:	ldr	x0, [sp, #32]
    4a58:	add	x0, x0, #0x1
    4a5c:	str	x0, [sp, #32]
    4a60:	ldr	x0, [sp, #40]
    4a64:	lsl	x0, x0, #4
    4a68:	ldr	x1, [sp, #8]
    4a6c:	add	x0, x1, x0
    4a70:	ldr	x2, [x0]
    4a74:	adrp	x0, 2b000 <lzma_mode_is_supported@@XZ_5.0+0x10368>
    4a78:	add	x3, x0, #0xf68
    4a7c:	ldr	x1, [sp, #32]
    4a80:	mov	x0, x1
    4a84:	lsl	x0, x0, #1
    4a88:	add	x0, x0, x1
    4a8c:	lsl	x0, x0, #3
    4a90:	add	x0, x3, x0
    4a94:	ldr	x0, [x0]
    4a98:	cmp	x2, x0
    4a9c:	b.ne	4a20 <lzma_filters_copy@@XZ_5.0+0x308>  // b.any
    4aa0:	ldrb	w0, [sp, #55]
    4aa4:	eor	w0, w0, #0x1
    4aa8:	and	w0, w0, #0xff
    4aac:	cmp	w0, #0x0
    4ab0:	b.eq	4abc <lzma_filters_copy@@XZ_5.0+0x3a4>  // b.none
    4ab4:	mov	w0, #0x8                   	// #8
    4ab8:	b	4bac <lzma_filters_copy@@XZ_5.0+0x494>
    4abc:	adrp	x0, 2b000 <lzma_mode_is_supported@@XZ_5.0+0x10368>
    4ac0:	add	x2, x0, #0xf68
    4ac4:	ldr	x1, [sp, #32]
    4ac8:	mov	x0, x1
    4acc:	lsl	x0, x0, #1
    4ad0:	add	x0, x0, x1
    4ad4:	lsl	x0, x0, #3
    4ad8:	add	x0, x2, x0
    4adc:	ldrb	w0, [x0, #16]
    4ae0:	strb	w0, [sp, #55]
    4ae4:	adrp	x0, 2b000 <lzma_mode_is_supported@@XZ_5.0+0x10368>
    4ae8:	add	x2, x0, #0xf68
    4aec:	ldr	x1, [sp, #32]
    4af0:	mov	x0, x1
    4af4:	lsl	x0, x0, #1
    4af8:	add	x0, x0, x1
    4afc:	lsl	x0, x0, #3
    4b00:	add	x0, x2, x0
    4b04:	ldrb	w0, [x0, #17]
    4b08:	strb	w0, [sp, #31]
    4b0c:	adrp	x0, 2b000 <lzma_mode_is_supported@@XZ_5.0+0x10368>
    4b10:	add	x2, x0, #0xf68
    4b14:	ldr	x1, [sp, #32]
    4b18:	mov	x0, x1
    4b1c:	lsl	x0, x0, #1
    4b20:	add	x0, x0, x1
    4b24:	lsl	x0, x0, #3
    4b28:	add	x0, x2, x0
    4b2c:	ldrb	w0, [x0, #18]
    4b30:	and	x0, x0, #0xff
    4b34:	ldr	x1, [sp, #56]
    4b38:	add	x0, x1, x0
    4b3c:	str	x0, [sp, #56]
    4b40:	ldr	x0, [sp, #40]
    4b44:	add	x0, x0, #0x1
    4b48:	str	x0, [sp, #40]
    4b4c:	ldr	x0, [sp, #40]
    4b50:	lsl	x0, x0, #4
    4b54:	ldr	x1, [sp, #8]
    4b58:	add	x0, x1, x0
    4b5c:	ldr	x0, [x0]
    4b60:	cmn	x0, #0x1
    4b64:	b.ne	4a18 <lzma_filters_copy@@XZ_5.0+0x300>  // b.any
    4b68:	ldr	x0, [sp, #40]
    4b6c:	cmp	x0, #0x4
    4b70:	b.hi	4b94 <lzma_filters_copy@@XZ_5.0+0x47c>  // b.pmore
    4b74:	ldrb	w0, [sp, #31]
    4b78:	eor	w0, w0, #0x1
    4b7c:	and	w0, w0, #0xff
    4b80:	cmp	w0, #0x0
    4b84:	b.ne	4b94 <lzma_filters_copy@@XZ_5.0+0x47c>  // b.any
    4b88:	ldr	x0, [sp, #56]
    4b8c:	cmp	x0, #0x3
    4b90:	b.ls	4b9c <lzma_filters_copy@@XZ_5.0+0x484>  // b.plast
    4b94:	mov	w0, #0x8                   	// #8
    4b98:	b	4bac <lzma_filters_copy@@XZ_5.0+0x494>
    4b9c:	ldr	x0, [sp]
    4ba0:	ldr	x1, [sp, #40]
    4ba4:	str	x1, [x0]
    4ba8:	mov	w0, #0x0                   	// #0
    4bac:	add	sp, sp, #0x40
    4bb0:	ret
    4bb4:	stp	x29, x30, [sp, #-256]!
    4bb8:	mov	x29, sp
    4bbc:	str	x0, [sp, #56]
    4bc0:	str	x1, [sp, #48]
    4bc4:	str	x2, [sp, #40]
    4bc8:	str	x3, [sp, #32]
    4bcc:	strb	w4, [sp, #31]
    4bd0:	add	x0, sp, #0xc0
    4bd4:	mov	x1, x0
    4bd8:	ldr	x0, [sp, #40]
    4bdc:	bl	49d4 <lzma_filters_copy@@XZ_5.0+0x2bc>
    4be0:	str	w0, [sp, #236]
    4be4:	ldr	w0, [sp, #236]
    4be8:	cmp	w0, #0x0
    4bec:	b.eq	4bf8 <lzma_filters_copy@@XZ_5.0+0x4e0>  // b.none
    4bf0:	ldr	w0, [sp, #236]
    4bf4:	b	4e64 <lzma_filters_copy@@XZ_5.0+0x74c>
    4bf8:	ldrb	w0, [sp, #31]
    4bfc:	cmp	w0, #0x0
    4c00:	b.eq	4d08 <lzma_filters_copy@@XZ_5.0+0x5f0>  // b.none
    4c04:	str	xzr, [sp, #248]
    4c08:	b	4cf4 <lzma_filters_copy@@XZ_5.0+0x5dc>
    4c0c:	ldr	x1, [sp, #192]
    4c10:	ldr	x0, [sp, #248]
    4c14:	sub	x0, x1, x0
    4c18:	sub	x0, x0, #0x1
    4c1c:	str	x0, [sp, #216]
    4c20:	ldr	x0, [sp, #248]
    4c24:	lsl	x0, x0, #4
    4c28:	ldr	x1, [sp, #40]
    4c2c:	add	x0, x1, x0
    4c30:	ldr	x0, [x0]
    4c34:	ldr	x1, [sp, #32]
    4c38:	blr	x1
    4c3c:	str	x0, [sp, #208]
    4c40:	ldr	x0, [sp, #208]
    4c44:	cmp	x0, #0x0
    4c48:	b.eq	4c5c <lzma_filters_copy@@XZ_5.0+0x544>  // b.none
    4c4c:	ldr	x0, [sp, #208]
    4c50:	ldr	x0, [x0, #8]
    4c54:	cmp	x0, #0x0
    4c58:	b.ne	4c64 <lzma_filters_copy@@XZ_5.0+0x54c>  // b.any
    4c5c:	mov	w0, #0x8                   	// #8
    4c60:	b	4e64 <lzma_filters_copy@@XZ_5.0+0x74c>
    4c64:	ldr	x0, [sp, #248]
    4c68:	lsl	x0, x0, #4
    4c6c:	ldr	x1, [sp, #40]
    4c70:	add	x0, x1, x0
    4c74:	ldr	x2, [x0]
    4c78:	ldr	x1, [sp, #216]
    4c7c:	mov	x0, x1
    4c80:	lsl	x0, x0, #1
    4c84:	add	x0, x0, x1
    4c88:	lsl	x0, x0, #3
    4c8c:	add	x1, sp, #0x48
    4c90:	str	x2, [x1, x0]
    4c94:	ldr	x0, [sp, #208]
    4c98:	ldr	x2, [x0, #8]
    4c9c:	ldr	x1, [sp, #216]
    4ca0:	mov	x0, x1
    4ca4:	lsl	x0, x0, #1
    4ca8:	add	x0, x0, x1
    4cac:	lsl	x0, x0, #3
    4cb0:	add	x1, sp, #0x50
    4cb4:	str	x2, [x1, x0]
    4cb8:	ldr	x0, [sp, #248]
    4cbc:	lsl	x0, x0, #4
    4cc0:	ldr	x1, [sp, #40]
    4cc4:	add	x0, x1, x0
    4cc8:	ldr	x2, [x0, #8]
    4ccc:	ldr	x1, [sp, #216]
    4cd0:	mov	x0, x1
    4cd4:	lsl	x0, x0, #1
    4cd8:	add	x0, x0, x1
    4cdc:	lsl	x0, x0, #3
    4ce0:	add	x1, sp, #0x58
    4ce4:	str	x2, [x1, x0]
    4ce8:	ldr	x0, [sp, #248]
    4cec:	add	x0, x0, #0x1
    4cf0:	str	x0, [sp, #248]
    4cf4:	ldr	x0, [sp, #192]
    4cf8:	ldr	x1, [sp, #248]
    4cfc:	cmp	x1, x0
    4d00:	b.cc	4c0c <lzma_filters_copy@@XZ_5.0+0x4f4>  // b.lo, b.ul, b.last
    4d04:	b	4df4 <lzma_filters_copy@@XZ_5.0+0x6dc>
    4d08:	str	xzr, [sp, #240]
    4d0c:	b	4de4 <lzma_filters_copy@@XZ_5.0+0x6cc>
    4d10:	ldr	x0, [sp, #240]
    4d14:	lsl	x0, x0, #4
    4d18:	ldr	x1, [sp, #40]
    4d1c:	add	x0, x1, x0
    4d20:	ldr	x0, [x0]
    4d24:	ldr	x1, [sp, #32]
    4d28:	blr	x1
    4d2c:	str	x0, [sp, #224]
    4d30:	ldr	x0, [sp, #224]
    4d34:	cmp	x0, #0x0
    4d38:	b.eq	4d4c <lzma_filters_copy@@XZ_5.0+0x634>  // b.none
    4d3c:	ldr	x0, [sp, #224]
    4d40:	ldr	x0, [x0, #8]
    4d44:	cmp	x0, #0x0
    4d48:	b.ne	4d54 <lzma_filters_copy@@XZ_5.0+0x63c>  // b.any
    4d4c:	mov	w0, #0x8                   	// #8
    4d50:	b	4e64 <lzma_filters_copy@@XZ_5.0+0x74c>
    4d54:	ldr	x0, [sp, #240]
    4d58:	lsl	x0, x0, #4
    4d5c:	ldr	x1, [sp, #40]
    4d60:	add	x0, x1, x0
    4d64:	ldr	x2, [x0]
    4d68:	ldr	x1, [sp, #240]
    4d6c:	mov	x0, x1
    4d70:	lsl	x0, x0, #1
    4d74:	add	x0, x0, x1
    4d78:	lsl	x0, x0, #3
    4d7c:	add	x1, sp, #0x48
    4d80:	str	x2, [x1, x0]
    4d84:	ldr	x0, [sp, #224]
    4d88:	ldr	x2, [x0, #8]
    4d8c:	ldr	x1, [sp, #240]
    4d90:	mov	x0, x1
    4d94:	lsl	x0, x0, #1
    4d98:	add	x0, x0, x1
    4d9c:	lsl	x0, x0, #3
    4da0:	add	x1, sp, #0x50
    4da4:	str	x2, [x1, x0]
    4da8:	ldr	x0, [sp, #240]
    4dac:	lsl	x0, x0, #4
    4db0:	ldr	x1, [sp, #40]
    4db4:	add	x0, x1, x0
    4db8:	ldr	x2, [x0, #8]
    4dbc:	ldr	x1, [sp, #240]
    4dc0:	mov	x0, x1
    4dc4:	lsl	x0, x0, #1
    4dc8:	add	x0, x0, x1
    4dcc:	lsl	x0, x0, #3
    4dd0:	add	x1, sp, #0x58
    4dd4:	str	x2, [x1, x0]
    4dd8:	ldr	x0, [sp, #240]
    4ddc:	add	x0, x0, #0x1
    4de0:	str	x0, [sp, #240]
    4de4:	ldr	x0, [sp, #192]
    4de8:	ldr	x1, [sp, #240]
    4dec:	cmp	x1, x0
    4df0:	b.cc	4d10 <lzma_filters_copy@@XZ_5.0+0x5f8>  // b.lo, b.ul, b.last
    4df4:	ldr	x1, [sp, #192]
    4df8:	mov	x0, x1
    4dfc:	lsl	x0, x0, #1
    4e00:	add	x0, x0, x1
    4e04:	lsl	x0, x0, #3
    4e08:	add	x1, sp, #0x48
    4e0c:	mov	x2, #0xffffffffffffffff    	// #-1
    4e10:	str	x2, [x1, x0]
    4e14:	ldr	x1, [sp, #192]
    4e18:	mov	x0, x1
    4e1c:	lsl	x0, x0, #1
    4e20:	add	x0, x0, x1
    4e24:	lsl	x0, x0, #3
    4e28:	add	x1, sp, #0x50
    4e2c:	str	xzr, [x1, x0]
    4e30:	add	x0, sp, #0x48
    4e34:	mov	x2, x0
    4e38:	ldr	x1, [sp, #48]
    4e3c:	ldr	x0, [sp, #56]
    4e40:	bl	393c <lzma_version_string@@XZ_5.0+0x24c>
    4e44:	str	w0, [sp, #204]
    4e48:	ldr	w0, [sp, #204]
    4e4c:	cmp	w0, #0x0
    4e50:	b.eq	4e60 <lzma_filters_copy@@XZ_5.0+0x748>  // b.none
    4e54:	ldr	x1, [sp, #48]
    4e58:	ldr	x0, [sp, #56]
    4e5c:	bl	3a48 <lzma_version_string@@XZ_5.0+0x358>
    4e60:	ldr	w0, [sp, #204]
    4e64:	ldp	x29, x30, [sp], #256
    4e68:	ret
    4e6c:	stp	x29, x30, [sp, #-80]!
    4e70:	mov	x29, sp
    4e74:	str	x0, [sp, #24]
    4e78:	str	x1, [sp, #16]
    4e7c:	add	x0, sp, #0x28
    4e80:	mov	x1, x0
    4e84:	ldr	x0, [sp, #16]
    4e88:	bl	49d4 <lzma_filters_copy@@XZ_5.0+0x2bc>
    4e8c:	cmp	w0, #0x0
    4e90:	b.eq	4e9c <lzma_filters_copy@@XZ_5.0+0x784>  // b.none
    4e94:	mov	x0, #0xffffffffffffffff    	// #-1
    4e98:	b	4f70 <lzma_filters_copy@@XZ_5.0+0x858>
    4e9c:	str	xzr, [sp, #72]
    4ea0:	str	xzr, [sp, #64]
    4ea4:	ldr	x0, [sp, #64]
    4ea8:	lsl	x0, x0, #4
    4eac:	ldr	x1, [sp, #16]
    4eb0:	add	x0, x1, x0
    4eb4:	ldr	x0, [x0]
    4eb8:	ldr	x1, [sp, #24]
    4ebc:	blr	x1
    4ec0:	str	x0, [sp, #56]
    4ec4:	ldr	x0, [sp, #56]
    4ec8:	cmp	x0, #0x0
    4ecc:	b.ne	4ed8 <lzma_filters_copy@@XZ_5.0+0x7c0>  // b.any
    4ed0:	mov	x0, #0xffffffffffffffff    	// #-1
    4ed4:	b	4f70 <lzma_filters_copy@@XZ_5.0+0x858>
    4ed8:	ldr	x0, [sp, #56]
    4edc:	ldr	x0, [x0, #16]
    4ee0:	cmp	x0, #0x0
    4ee4:	b.ne	4ef8 <lzma_filters_copy@@XZ_5.0+0x7e0>  // b.any
    4ee8:	ldr	x0, [sp, #72]
    4eec:	add	x0, x0, #0x400
    4ef0:	str	x0, [sp, #72]
    4ef4:	b	4f40 <lzma_filters_copy@@XZ_5.0+0x828>
    4ef8:	ldr	x0, [sp, #56]
    4efc:	ldr	x1, [x0, #16]
    4f00:	ldr	x0, [sp, #64]
    4f04:	lsl	x0, x0, #4
    4f08:	ldr	x2, [sp, #16]
    4f0c:	add	x0, x2, x0
    4f10:	ldr	x0, [x0, #8]
    4f14:	blr	x1
    4f18:	str	x0, [sp, #48]
    4f1c:	ldr	x0, [sp, #48]
    4f20:	cmn	x0, #0x1
    4f24:	b.ne	4f30 <lzma_filters_copy@@XZ_5.0+0x818>  // b.any
    4f28:	mov	x0, #0xffffffffffffffff    	// #-1
    4f2c:	b	4f70 <lzma_filters_copy@@XZ_5.0+0x858>
    4f30:	ldr	x1, [sp, #72]
    4f34:	ldr	x0, [sp, #48]
    4f38:	add	x0, x1, x0
    4f3c:	str	x0, [sp, #72]
    4f40:	ldr	x0, [sp, #64]
    4f44:	add	x0, x0, #0x1
    4f48:	str	x0, [sp, #64]
    4f4c:	ldr	x0, [sp, #64]
    4f50:	lsl	x0, x0, #4
    4f54:	ldr	x1, [sp, #16]
    4f58:	add	x0, x1, x0
    4f5c:	ldr	x0, [x0]
    4f60:	cmn	x0, #0x1
    4f64:	b.ne	4ea4 <lzma_filters_copy@@XZ_5.0+0x78c>  // b.any
    4f68:	ldr	x0, [sp, #72]
    4f6c:	add	x0, x0, #0x8, lsl #12
    4f70:	ldp	x29, x30, [sp], #80
    4f74:	ret

0000000000004f78 <lzma_physmem@@XZ_5.0>:
    4f78:	stp	x29, x30, [sp, #-16]!
    4f7c:	mov	x29, sp
    4f80:	bl	3644 <pthread_cond_timedwait@plt+0xe4>
    4f84:	ldp	x29, x30, [sp], #16
    4f88:	ret
    4f8c:	sub	sp, sp, #0x10
    4f90:	str	w0, [sp, #12]
    4f94:	ldr	w0, [sp, #12]
    4f98:	clz	w0, w0
    4f9c:	eor	w0, w0, #0x1f
    4fa0:	add	sp, sp, #0x10
    4fa4:	ret
    4fa8:	sub	sp, sp, #0x10
    4fac:	str	w0, [sp, #12]
    4fb0:	ldr	w0, [sp, #12]
    4fb4:	rbit	w0, w0
    4fb8:	clz	w0, w0
    4fbc:	add	sp, sp, #0x10
    4fc0:	ret
    4fc4:	sub	sp, sp, #0x10
    4fc8:	str	x0, [sp, #8]
    4fcc:	ldr	x0, [sp, #8]
    4fd0:	add	x0, x0, #0x3
    4fd4:	and	x0, x0, #0xfffffffffffffffc
    4fd8:	add	sp, sp, #0x10
    4fdc:	ret
    4fe0:	stp	x29, x30, [sp, #-32]!
    4fe4:	mov	x29, sp
    4fe8:	str	x0, [sp, #24]
    4fec:	str	x1, [sp, #16]
    4ff0:	ldr	x0, [sp, #24]
    4ff4:	bl	3480 <lzma_vli_size@plt>
    4ff8:	add	w0, w0, #0x1
    4ffc:	mov	w1, w0
    5000:	ldr	x0, [sp, #16]
    5004:	add	x0, x1, x0
    5008:	add	x0, x0, #0x4
    500c:	ldp	x29, x30, [sp], #32
    5010:	ret
    5014:	stp	x29, x30, [sp, #-32]!
    5018:	mov	x29, sp
    501c:	str	x0, [sp, #24]
    5020:	str	x1, [sp, #16]
    5024:	ldr	x1, [sp, #16]
    5028:	ldr	x0, [sp, #24]
    502c:	bl	4fe0 <lzma_physmem@@XZ_5.0+0x68>
    5030:	bl	4fc4 <lzma_physmem@@XZ_5.0+0x4c>
    5034:	ldp	x29, x30, [sp], #32
    5038:	ret
    503c:	sub	sp, sp, #0x10
    5040:	str	x0, [sp, #8]
    5044:	ldr	x0, [sp, #8]
    5048:	str	xzr, [x0]
    504c:	ldr	x0, [sp, #8]
    5050:	str	xzr, [x0, #8]
    5054:	ldr	x0, [sp, #8]
    5058:	str	xzr, [x0, #16]
    505c:	ldr	x0, [sp, #8]
    5060:	str	wzr, [x0, #24]
    5064:	nop
    5068:	add	sp, sp, #0x10
    506c:	ret
    5070:	stp	x29, x30, [sp, #-48]!
    5074:	mov	x29, sp
    5078:	str	x0, [sp, #40]
    507c:	str	x1, [sp, #32]
    5080:	str	x2, [sp, #24]
    5084:	ldr	x0, [sp, #40]
    5088:	ldr	x0, [x0, #24]
    508c:	cmp	x0, #0x0
    5090:	b.eq	50a8 <lzma_physmem@@XZ_5.0+0x130>  // b.none
    5094:	ldr	x0, [sp, #40]
    5098:	ldr	x0, [x0, #24]
    509c:	ldr	x2, [sp, #24]
    50a0:	ldr	x1, [sp, #32]
    50a4:	bl	5070 <lzma_physmem@@XZ_5.0+0xf8>
    50a8:	ldr	x0, [sp, #40]
    50ac:	ldr	x0, [x0, #32]
    50b0:	cmp	x0, #0x0
    50b4:	b.eq	50cc <lzma_physmem@@XZ_5.0+0x154>  // b.none
    50b8:	ldr	x0, [sp, #40]
    50bc:	ldr	x0, [x0, #32]
    50c0:	ldr	x2, [sp, #24]
    50c4:	ldr	x1, [sp, #32]
    50c8:	bl	5070 <lzma_physmem@@XZ_5.0+0xf8>
    50cc:	ldr	x2, [sp, #24]
    50d0:	ldr	x1, [sp, #32]
    50d4:	ldr	x0, [sp, #40]
    50d8:	blr	x2
    50dc:	nop
    50e0:	ldp	x29, x30, [sp], #48
    50e4:	ret
    50e8:	stp	x29, x30, [sp, #-48]!
    50ec:	mov	x29, sp
    50f0:	str	x0, [sp, #40]
    50f4:	str	x1, [sp, #32]
    50f8:	str	x2, [sp, #24]
    50fc:	ldr	x0, [sp, #40]
    5100:	ldr	x0, [x0]
    5104:	cmp	x0, #0x0
    5108:	b.eq	5124 <lzma_physmem@@XZ_5.0+0x1ac>  // b.none
    510c:	ldr	x0, [sp, #40]
    5110:	ldr	x0, [x0]
    5114:	ldr	x2, [sp, #24]
    5118:	ldr	x1, [sp, #32]
    511c:	bl	5070 <lzma_physmem@@XZ_5.0+0xf8>
    5120:	nop
    5124:	nop
    5128:	ldp	x29, x30, [sp], #48
    512c:	ret
    5130:	stp	x29, x30, [sp, #-64]!
    5134:	mov	x29, sp
    5138:	str	x19, [sp, #16]
    513c:	str	x0, [sp, #40]
    5140:	str	x1, [sp, #32]
    5144:	ldr	x0, [sp, #40]
    5148:	ldr	x1, [x0, #16]
    514c:	ldr	x0, [sp, #32]
    5150:	str	x1, [x0, #16]
    5154:	ldr	x0, [sp, #32]
    5158:	str	xzr, [x0, #24]
    515c:	ldr	x0, [sp, #32]
    5160:	str	xzr, [x0, #32]
    5164:	ldr	x0, [sp, #40]
    5168:	ldr	w0, [x0, #24]
    516c:	add	w1, w0, #0x1
    5170:	ldr	x0, [sp, #40]
    5174:	str	w1, [x0, #24]
    5178:	ldr	x0, [sp, #40]
    517c:	ldr	x0, [x0]
    5180:	cmp	x0, #0x0
    5184:	b.ne	51b0 <lzma_physmem@@XZ_5.0+0x238>  // b.any
    5188:	ldr	x0, [sp, #40]
    518c:	ldr	x1, [sp, #32]
    5190:	str	x1, [x0]
    5194:	ldr	x0, [sp, #40]
    5198:	ldr	x1, [sp, #32]
    519c:	str	x1, [x0, #8]
    51a0:	ldr	x0, [sp, #40]
    51a4:	ldr	x1, [sp, #32]
    51a8:	str	x1, [x0, #16]
    51ac:	b	52d0 <lzma_physmem@@XZ_5.0+0x358>
    51b0:	ldr	x0, [sp, #40]
    51b4:	ldr	x0, [x0, #16]
    51b8:	ldr	x1, [sp, #32]
    51bc:	str	x1, [x0, #32]
    51c0:	ldr	x0, [sp, #40]
    51c4:	ldr	x1, [sp, #32]
    51c8:	str	x1, [x0, #16]
    51cc:	ldr	x0, [sp, #40]
    51d0:	ldr	w19, [x0, #24]
    51d4:	ldr	x0, [sp, #40]
    51d8:	ldr	w0, [x0, #24]
    51dc:	bl	4f8c <lzma_physmem@@XZ_5.0+0x14>
    51e0:	mov	w1, w0
    51e4:	mov	w0, #0x1                   	// #1
    51e8:	lsl	w0, w0, w1
    51ec:	eor	w0, w19, w0
    51f0:	str	w0, [sp, #60]
    51f4:	ldr	w0, [sp, #60]
    51f8:	cmp	w0, #0x0
    51fc:	b.eq	52cc <lzma_physmem@@XZ_5.0+0x354>  // b.none
    5200:	ldr	x0, [sp, #40]
    5204:	ldr	w0, [x0, #24]
    5208:	bl	4fa8 <lzma_physmem@@XZ_5.0+0x30>
    520c:	add	w0, w0, #0x2
    5210:	str	w0, [sp, #60]
    5214:	ldr	x0, [sp, #32]
    5218:	ldr	x0, [x0, #16]
    521c:	str	x0, [sp, #32]
    5220:	ldr	w0, [sp, #60]
    5224:	sub	w0, w0, #0x1
    5228:	str	w0, [sp, #60]
    522c:	ldr	w0, [sp, #60]
    5230:	cmp	w0, #0x0
    5234:	b.ne	5214 <lzma_physmem@@XZ_5.0+0x29c>  // b.any
    5238:	ldr	x0, [sp, #32]
    523c:	ldr	x0, [x0, #32]
    5240:	str	x0, [sp, #48]
    5244:	ldr	x0, [sp, #32]
    5248:	ldr	x0, [x0, #16]
    524c:	cmp	x0, #0x0
    5250:	b.ne	5264 <lzma_physmem@@XZ_5.0+0x2ec>  // b.any
    5254:	ldr	x0, [sp, #40]
    5258:	ldr	x1, [sp, #48]
    525c:	str	x1, [x0]
    5260:	b	5274 <lzma_physmem@@XZ_5.0+0x2fc>
    5264:	ldr	x0, [sp, #32]
    5268:	ldr	x0, [x0, #16]
    526c:	ldr	x1, [sp, #48]
    5270:	str	x1, [x0, #32]
    5274:	ldr	x0, [sp, #32]
    5278:	ldr	x1, [x0, #16]
    527c:	ldr	x0, [sp, #48]
    5280:	str	x1, [x0, #16]
    5284:	ldr	x0, [sp, #48]
    5288:	ldr	x1, [x0, #24]
    528c:	ldr	x0, [sp, #32]
    5290:	str	x1, [x0, #32]
    5294:	ldr	x0, [sp, #32]
    5298:	ldr	x0, [x0, #32]
    529c:	cmp	x0, #0x0
    52a0:	b.eq	52b4 <lzma_physmem@@XZ_5.0+0x33c>  // b.none
    52a4:	ldr	x0, [sp, #32]
    52a8:	ldr	x0, [x0, #32]
    52ac:	ldr	x1, [sp, #32]
    52b0:	str	x1, [x0, #16]
    52b4:	ldr	x0, [sp, #48]
    52b8:	ldr	x1, [sp, #32]
    52bc:	str	x1, [x0, #24]
    52c0:	ldr	x0, [sp, #32]
    52c4:	ldr	x1, [sp, #48]
    52c8:	str	x1, [x0, #16]
    52cc:	nop
    52d0:	ldr	x19, [sp, #16]
    52d4:	ldp	x29, x30, [sp], #64
    52d8:	ret
    52dc:	sub	sp, sp, #0x10
    52e0:	str	x0, [sp, #8]
    52e4:	ldr	x0, [sp, #8]
    52e8:	ldr	x0, [x0, #32]
    52ec:	cmp	x0, #0x0
    52f0:	b.eq	5334 <lzma_physmem@@XZ_5.0+0x3bc>  // b.none
    52f4:	ldr	x0, [sp, #8]
    52f8:	ldr	x0, [x0, #32]
    52fc:	str	x0, [sp, #8]
    5300:	b	5310 <lzma_physmem@@XZ_5.0+0x398>
    5304:	ldr	x0, [sp, #8]
    5308:	ldr	x0, [x0, #24]
    530c:	str	x0, [sp, #8]
    5310:	ldr	x0, [sp, #8]
    5314:	ldr	x0, [x0, #24]
    5318:	cmp	x0, #0x0
    531c:	b.ne	5304 <lzma_physmem@@XZ_5.0+0x38c>  // b.any
    5320:	ldr	x0, [sp, #8]
    5324:	b	5364 <lzma_physmem@@XZ_5.0+0x3ec>
    5328:	ldr	x0, [sp, #8]
    532c:	ldr	x0, [x0, #16]
    5330:	str	x0, [sp, #8]
    5334:	ldr	x0, [sp, #8]
    5338:	ldr	x0, [x0, #16]
    533c:	cmp	x0, #0x0
    5340:	b.eq	535c <lzma_physmem@@XZ_5.0+0x3e4>  // b.none
    5344:	ldr	x0, [sp, #8]
    5348:	ldr	x0, [x0, #16]
    534c:	ldr	x0, [x0, #32]
    5350:	ldr	x1, [sp, #8]
    5354:	cmp	x1, x0
    5358:	b.eq	5328 <lzma_physmem@@XZ_5.0+0x3b0>  // b.none
    535c:	ldr	x0, [sp, #8]
    5360:	ldr	x0, [x0, #16]
    5364:	add	sp, sp, #0x10
    5368:	ret
    536c:	sub	sp, sp, #0x20
    5370:	str	x0, [sp, #8]
    5374:	str	x1, [sp]
    5378:	str	xzr, [sp, #24]
    537c:	ldr	x0, [sp, #8]
    5380:	ldr	x0, [x0]
    5384:	str	x0, [sp, #16]
    5388:	b	53c4 <lzma_physmem@@XZ_5.0+0x44c>
    538c:	ldr	x0, [sp, #16]
    5390:	ldr	x0, [x0]
    5394:	ldr	x1, [sp]
    5398:	cmp	x1, x0
    539c:	b.cs	53b0 <lzma_physmem@@XZ_5.0+0x438>  // b.hs, b.nlast
    53a0:	ldr	x0, [sp, #16]
    53a4:	ldr	x0, [x0, #24]
    53a8:	str	x0, [sp, #16]
    53ac:	b	53c4 <lzma_physmem@@XZ_5.0+0x44c>
    53b0:	ldr	x0, [sp, #16]
    53b4:	str	x0, [sp, #24]
    53b8:	ldr	x0, [sp, #16]
    53bc:	ldr	x0, [x0, #32]
    53c0:	str	x0, [sp, #16]
    53c4:	ldr	x0, [sp, #16]
    53c8:	cmp	x0, #0x0
    53cc:	b.ne	538c <lzma_physmem@@XZ_5.0+0x414>  // b.any
    53d0:	ldr	x0, [sp, #24]
    53d4:	add	sp, sp, #0x20
    53d8:	ret
    53dc:	stp	x29, x30, [sp, #-80]!
    53e0:	mov	x29, sp
    53e4:	str	x0, [sp, #56]
    53e8:	str	x1, [sp, #48]
    53ec:	str	w2, [sp, #44]
    53f0:	str	x3, [sp, #32]
    53f4:	str	x4, [sp, #24]
    53f8:	ldr	x1, [sp, #24]
    53fc:	mov	x0, #0xa8                  	// #168
    5400:	bl	36fc <lzma_version_string@@XZ_5.0+0xc>
    5404:	str	x0, [sp, #72]
    5408:	ldr	x0, [sp, #72]
    540c:	cmp	x0, #0x0
    5410:	b.ne	541c <lzma_physmem@@XZ_5.0+0x4a4>  // b.any
    5414:	mov	x0, #0x0                   	// #0
    5418:	b	5498 <lzma_physmem@@XZ_5.0+0x520>
    541c:	ldr	x0, [sp, #72]
    5420:	ldr	x1, [sp, #48]
    5424:	str	x1, [x0]
    5428:	ldr	x0, [sp, #72]
    542c:	ldr	x1, [sp, #56]
    5430:	str	x1, [x0, #8]
    5434:	ldr	x0, [sp, #72]
    5438:	str	xzr, [x0, #16]
    543c:	ldr	x0, [sp, #72]
    5440:	str	xzr, [x0, #24]
    5444:	ldr	x0, [sp, #72]
    5448:	str	xzr, [x0, #32]
    544c:	ldr	x0, [sp, #72]
    5450:	ldr	w1, [sp, #44]
    5454:	str	w1, [x0, #40]
    5458:	ldr	x0, [sp, #72]
    545c:	ldr	x1, [sp, #32]
    5460:	str	x1, [x0, #48]
    5464:	ldr	x0, [sp, #72]
    5468:	add	x0, x0, #0x38
    546c:	bl	503c <lzma_physmem@@XZ_5.0+0xc4>
    5470:	ldr	x0, [sp, #72]
    5474:	str	xzr, [x0, #88]
    5478:	ldr	x0, [sp, #72]
    547c:	str	xzr, [x0, #96]
    5480:	ldr	x0, [sp, #72]
    5484:	mov	w1, #0xffffffff            	// #-1
    5488:	str	w1, [x0, #104]
    548c:	ldr	x0, [sp, #72]
    5490:	str	xzr, [x0, #160]
    5494:	ldr	x0, [sp, #72]
    5498:	ldp	x29, x30, [sp], #80
    549c:	ret
    54a0:	stp	x29, x30, [sp, #-48]!
    54a4:	mov	x29, sp
    54a8:	str	x0, [sp, #24]
    54ac:	str	x1, [sp, #16]
    54b0:	ldr	x0, [sp, #24]
    54b4:	str	x0, [sp, #40]
    54b8:	ldr	x0, [sp, #40]
    54bc:	add	x3, x0, #0x38
    54c0:	adrp	x0, 46000 <lzma_mode_is_supported@@XZ_5.0+0x2b368>
    54c4:	ldr	x2, [x0, #3992]
    54c8:	ldr	x1, [sp, #16]
    54cc:	mov	x0, x3
    54d0:	bl	50e8 <lzma_physmem@@XZ_5.0+0x170>
    54d4:	ldr	x1, [sp, #16]
    54d8:	ldr	x0, [sp, #40]
    54dc:	bl	3814 <lzma_version_string@@XZ_5.0+0x124>
    54e0:	nop
    54e4:	ldp	x29, x30, [sp], #48
    54e8:	ret
    54ec:	stp	x29, x30, [sp, #-48]!
    54f0:	mov	x29, sp
    54f4:	str	x0, [sp, #24]
    54f8:	ldr	x1, [sp, #24]
    54fc:	mov	x0, #0x50                  	// #80
    5500:	bl	36fc <lzma_version_string@@XZ_5.0+0xc>
    5504:	str	x0, [sp, #40]
    5508:	ldr	x0, [sp, #40]
    550c:	cmp	x0, #0x0
    5510:	b.eq	5550 <lzma_physmem@@XZ_5.0+0x5d8>  // b.none
    5514:	ldr	x0, [sp, #40]
    5518:	bl	503c <lzma_physmem@@XZ_5.0+0xc4>
    551c:	ldr	x0, [sp, #40]
    5520:	str	xzr, [x0, #32]
    5524:	ldr	x0, [sp, #40]
    5528:	str	xzr, [x0, #40]
    552c:	ldr	x0, [sp, #40]
    5530:	str	xzr, [x0, #48]
    5534:	ldr	x0, [sp, #40]
    5538:	str	xzr, [x0, #56]
    553c:	ldr	x0, [sp, #40]
    5540:	mov	x1, #0x200                 	// #512
    5544:	str	x1, [x0, #64]
    5548:	ldr	x0, [sp, #40]
    554c:	str	wzr, [x0, #72]
    5550:	ldr	x0, [sp, #40]
    5554:	ldp	x29, x30, [sp], #48
    5558:	ret

000000000000555c <lzma_index_init@@XZ_5.0>:
    555c:	stp	x29, x30, [sp, #-48]!
    5560:	mov	x29, sp
    5564:	str	x0, [sp, #24]
    5568:	ldr	x0, [sp, #24]
    556c:	bl	54ec <lzma_physmem@@XZ_5.0+0x574>
    5570:	str	x0, [sp, #40]
    5574:	ldr	x0, [sp, #40]
    5578:	cmp	x0, #0x0
    557c:	b.ne	5588 <lzma_index_init@@XZ_5.0+0x2c>  // b.any
    5580:	mov	x0, #0x0                   	// #0
    5584:	b	55d4 <lzma_index_init@@XZ_5.0+0x78>
    5588:	ldr	x4, [sp, #24]
    558c:	mov	x3, #0x0                   	// #0
    5590:	mov	w2, #0x1                   	// #1
    5594:	mov	x1, #0x0                   	// #0
    5598:	mov	x0, #0x0                   	// #0
    559c:	bl	53dc <lzma_physmem@@XZ_5.0+0x464>
    55a0:	str	x0, [sp, #32]
    55a4:	ldr	x0, [sp, #32]
    55a8:	cmp	x0, #0x0
    55ac:	b.ne	55c4 <lzma_index_init@@XZ_5.0+0x68>  // b.any
    55b0:	ldr	x1, [sp, #24]
    55b4:	ldr	x0, [sp, #40]
    55b8:	bl	3814 <lzma_version_string@@XZ_5.0+0x124>
    55bc:	mov	x0, #0x0                   	// #0
    55c0:	b	55d4 <lzma_index_init@@XZ_5.0+0x78>
    55c4:	ldr	x0, [sp, #40]
    55c8:	ldr	x1, [sp, #32]
    55cc:	bl	5130 <lzma_physmem@@XZ_5.0+0x1b8>
    55d0:	ldr	x0, [sp, #40]
    55d4:	ldp	x29, x30, [sp], #48
    55d8:	ret

00000000000055dc <lzma_index_end@@XZ_5.0>:
    55dc:	stp	x29, x30, [sp, #-32]!
    55e0:	mov	x29, sp
    55e4:	str	x0, [sp, #24]
    55e8:	str	x1, [sp, #16]
    55ec:	ldr	x0, [sp, #24]
    55f0:	cmp	x0, #0x0
    55f4:	b.eq	5620 <lzma_index_end@@XZ_5.0+0x44>  // b.none
    55f8:	ldr	x3, [sp, #24]
    55fc:	adrp	x0, 5000 <lzma_physmem@@XZ_5.0+0x88>
    5600:	add	x2, x0, #0x4a0
    5604:	ldr	x1, [sp, #16]
    5608:	mov	x0, x3
    560c:	bl	50e8 <lzma_physmem@@XZ_5.0+0x170>
    5610:	ldr	x1, [sp, #16]
    5614:	ldr	x0, [sp, #24]
    5618:	bl	3814 <lzma_version_string@@XZ_5.0+0x124>
    561c:	nop
    5620:	nop
    5624:	ldp	x29, x30, [sp], #32
    5628:	ret
    562c:	sub	sp, sp, #0x10
    5630:	str	x0, [sp, #8]
    5634:	str	x1, [sp]
    5638:	ldr	x1, [sp]
    563c:	mov	x0, #0xffffffffffffffc     	// #1152921504606846972
    5640:	cmp	x1, x0
    5644:	b.cc	5654 <lzma_index_end@@XZ_5.0+0x78>  // b.lo, b.ul, b.last
    5648:	mov	x0, #0xfffffffffffffffb    	// #-5
    564c:	movk	x0, #0xfff, lsl #48
    5650:	str	x0, [sp]
    5654:	ldr	x0, [sp, #8]
    5658:	ldr	x1, [sp]
    565c:	str	x1, [x0, #64]
    5660:	nop
    5664:	add	sp, sp, #0x10
    5668:	ret

000000000000566c <lzma_index_memusage@@XZ_5.0>:
    566c:	sub	sp, sp, #0x50
    5670:	str	x0, [sp, #8]
    5674:	str	x1, [sp]
    5678:	mov	x0, #0x20                  	// #32
    567c:	str	x0, [sp, #72]
    5680:	ldr	x0, [sp, #72]
    5684:	add	x0, x0, #0x74
    5688:	lsl	x0, x0, #1
    568c:	str	x0, [sp, #64]
    5690:	ldr	x1, [sp, #72]
    5694:	mov	x0, #0x2040                	// #8256
    5698:	add	x0, x1, x0
    569c:	str	x0, [sp, #56]
    56a0:	ldr	x0, [sp]
    56a4:	add	x0, x0, #0x1ff
    56a8:	lsr	x0, x0, #9
    56ac:	str	x0, [sp, #48]
    56b0:	ldr	x1, [sp, #8]
    56b4:	ldr	x0, [sp, #64]
    56b8:	mul	x0, x1, x0
    56bc:	str	x0, [sp, #40]
    56c0:	ldr	x1, [sp, #48]
    56c4:	ldr	x0, [sp, #56]
    56c8:	mul	x0, x1, x0
    56cc:	str	x0, [sp, #32]
    56d0:	ldr	x0, [sp, #72]
    56d4:	add	x0, x0, #0x50
    56d8:	str	x0, [sp, #24]
    56dc:	ldr	x0, [sp, #24]
    56e0:	mvn	x0, x0
    56e4:	str	x0, [sp, #16]
    56e8:	ldr	x0, [sp, #8]
    56ec:	cmp	x0, #0x0
    56f0:	b.eq	5758 <lzma_index_memusage@@XZ_5.0+0xec>  // b.none
    56f4:	ldr	x1, [sp, #8]
    56f8:	mov	x0, #0xffffffff            	// #4294967295
    56fc:	cmp	x1, x0
    5700:	b.hi	5758 <lzma_index_memusage@@XZ_5.0+0xec>  // b.pmore
    5704:	ldr	x0, [sp]
    5708:	cmp	x0, #0x0
    570c:	b.lt	5758 <lzma_index_memusage@@XZ_5.0+0xec>  // b.tstop
    5710:	ldr	x1, [sp, #16]
    5714:	ldr	x0, [sp, #64]
    5718:	udiv	x0, x1, x0
    571c:	ldr	x1, [sp, #8]
    5720:	cmp	x1, x0
    5724:	b.hi	5758 <lzma_index_memusage@@XZ_5.0+0xec>  // b.pmore
    5728:	ldr	x1, [sp, #16]
    572c:	ldr	x0, [sp, #56]
    5730:	udiv	x0, x1, x0
    5734:	ldr	x1, [sp, #48]
    5738:	cmp	x1, x0
    573c:	b.hi	5758 <lzma_index_memusage@@XZ_5.0+0xec>  // b.pmore
    5740:	ldr	x1, [sp, #16]
    5744:	ldr	x0, [sp, #40]
    5748:	sub	x0, x1, x0
    574c:	ldr	x1, [sp, #32]
    5750:	cmp	x1, x0
    5754:	b.ls	5760 <lzma_index_memusage@@XZ_5.0+0xf4>  // b.plast
    5758:	mov	x0, #0xffffffffffffffff    	// #-1
    575c:	b	5774 <lzma_index_memusage@@XZ_5.0+0x108>
    5760:	ldr	x1, [sp, #24]
    5764:	ldr	x0, [sp, #40]
    5768:	add	x1, x1, x0
    576c:	ldr	x0, [sp, #32]
    5770:	add	x0, x1, x0
    5774:	add	sp, sp, #0x50
    5778:	ret

000000000000577c <lzma_index_memused@@XZ_5.0>:
    577c:	stp	x29, x30, [sp, #-32]!
    5780:	mov	x29, sp
    5784:	str	x0, [sp, #24]
    5788:	ldr	x0, [sp, #24]
    578c:	ldr	w0, [x0, #24]
    5790:	mov	w2, w0
    5794:	ldr	x0, [sp, #24]
    5798:	ldr	x0, [x0, #48]
    579c:	mov	x1, x0
    57a0:	mov	x0, x2
    57a4:	bl	3180 <lzma_index_memusage@plt>
    57a8:	ldp	x29, x30, [sp], #32
    57ac:	ret

00000000000057b0 <lzma_index_block_count@@XZ_5.0>:
    57b0:	sub	sp, sp, #0x10
    57b4:	str	x0, [sp, #8]
    57b8:	ldr	x0, [sp, #8]
    57bc:	ldr	x0, [x0, #48]
    57c0:	add	sp, sp, #0x10
    57c4:	ret

00000000000057c8 <lzma_index_stream_count@@XZ_5.0>:
    57c8:	sub	sp, sp, #0x10
    57cc:	str	x0, [sp, #8]
    57d0:	ldr	x0, [sp, #8]
    57d4:	ldr	w0, [x0, #24]
    57d8:	mov	w0, w0
    57dc:	add	sp, sp, #0x10
    57e0:	ret

00000000000057e4 <lzma_index_size@@XZ_5.0>:
    57e4:	stp	x29, x30, [sp, #-32]!
    57e8:	mov	x29, sp
    57ec:	str	x0, [sp, #24]
    57f0:	ldr	x0, [sp, #24]
    57f4:	ldr	x2, [x0, #48]
    57f8:	ldr	x0, [sp, #24]
    57fc:	ldr	x0, [x0, #56]
    5800:	mov	x1, x0
    5804:	mov	x0, x2
    5808:	bl	5014 <lzma_physmem@@XZ_5.0+0x9c>
    580c:	ldp	x29, x30, [sp], #32
    5810:	ret

0000000000005814 <lzma_index_total_size@@XZ_5.0>:
    5814:	sub	sp, sp, #0x10
    5818:	str	x0, [sp, #8]
    581c:	ldr	x0, [sp, #8]
    5820:	ldr	x0, [x0, #40]
    5824:	add	sp, sp, #0x10
    5828:	ret

000000000000582c <lzma_index_stream_size@@XZ_5.0>:
    582c:	stp	x29, x30, [sp, #-48]!
    5830:	mov	x29, sp
    5834:	str	x19, [sp, #16]
    5838:	str	x0, [sp, #40]
    583c:	ldr	x0, [sp, #40]
    5840:	ldr	x19, [x0, #40]
    5844:	ldr	x0, [sp, #40]
    5848:	ldr	x2, [x0, #48]
    584c:	ldr	x0, [sp, #40]
    5850:	ldr	x0, [x0, #56]
    5854:	mov	x1, x0
    5858:	mov	x0, x2
    585c:	bl	5014 <lzma_physmem@@XZ_5.0+0x9c>
    5860:	add	x0, x19, x0
    5864:	add	x0, x0, #0x18
    5868:	ldr	x19, [sp, #16]
    586c:	ldp	x29, x30, [sp], #48
    5870:	ret
    5874:	stp	x29, x30, [sp, #-96]!
    5878:	mov	x29, sp
    587c:	str	x19, [sp, #16]
    5880:	str	x0, [sp, #72]
    5884:	str	x1, [sp, #64]
    5888:	str	x2, [sp, #56]
    588c:	str	x3, [sp, #48]
    5890:	str	x4, [sp, #40]
    5894:	ldr	x1, [sp, #72]
    5898:	ldr	x0, [sp, #40]
    589c:	add	x19, x1, x0
    58a0:	ldr	x0, [sp, #64]
    58a4:	bl	4fc4 <lzma_physmem@@XZ_5.0+0x4c>
    58a8:	add	x0, x19, x0
    58ac:	add	x0, x0, #0x18
    58b0:	str	x0, [sp, #88]
    58b4:	ldr	x0, [sp, #88]
    58b8:	cmp	x0, #0x0
    58bc:	b.ge	58c8 <lzma_index_stream_size@@XZ_5.0+0x9c>  // b.tcont
    58c0:	mov	x0, #0xffffffffffffffff    	// #-1
    58c4:	b	58fc <lzma_index_stream_size@@XZ_5.0+0xd0>
    58c8:	ldr	x1, [sp, #48]
    58cc:	ldr	x0, [sp, #56]
    58d0:	bl	5014 <lzma_physmem@@XZ_5.0+0x9c>
    58d4:	mov	x1, x0
    58d8:	ldr	x0, [sp, #88]
    58dc:	add	x0, x0, x1
    58e0:	str	x0, [sp, #88]
    58e4:	ldr	x0, [sp, #88]
    58e8:	cmp	x0, #0x0
    58ec:	b.ge	58f8 <lzma_index_stream_size@@XZ_5.0+0xcc>  // b.tcont
    58f0:	mov	x0, #0xffffffffffffffff    	// #-1
    58f4:	b	58fc <lzma_index_stream_size@@XZ_5.0+0xd0>
    58f8:	ldr	x0, [sp, #88]
    58fc:	ldr	x19, [sp, #16]
    5900:	ldp	x29, x30, [sp], #96
    5904:	ret

0000000000005908 <lzma_index_file_size@@XZ_5.0>:
    5908:	stp	x29, x30, [sp, #-48]!
    590c:	mov	x29, sp
    5910:	str	x0, [sp, #24]
    5914:	ldr	x0, [sp, #24]
    5918:	ldr	x0, [x0, #16]
    591c:	str	x0, [sp, #40]
    5920:	ldr	x0, [sp, #40]
    5924:	ldr	x0, [x0, #72]
    5928:	str	x0, [sp, #32]
    592c:	ldr	x0, [sp, #40]
    5930:	ldr	x5, [x0, #8]
    5934:	ldr	x0, [sp, #32]
    5938:	cmp	x0, #0x0
    593c:	b.eq	5960 <lzma_index_file_size@@XZ_5.0+0x58>  // b.none
    5940:	ldr	x0, [sp, #32]
    5944:	ldr	x0, [x0, #56]
    5948:	ldr	x1, [sp, #32]
    594c:	add	x0, x0, #0x4
    5950:	lsl	x0, x0, #4
    5954:	add	x0, x1, x0
    5958:	ldr	x0, [x0, #8]
    595c:	b	5964 <lzma_index_file_size@@XZ_5.0+0x5c>
    5960:	mov	x0, #0x0                   	// #0
    5964:	ldr	x1, [sp, #40]
    5968:	ldr	x2, [x1, #88]
    596c:	ldr	x1, [sp, #40]
    5970:	ldr	x3, [x1, #96]
    5974:	ldr	x1, [sp, #40]
    5978:	ldr	x1, [x1, #160]
    597c:	mov	x4, x1
    5980:	mov	x1, x0
    5984:	mov	x0, x5
    5988:	bl	5874 <lzma_index_stream_size@@XZ_5.0+0x48>
    598c:	ldp	x29, x30, [sp], #48
    5990:	ret

0000000000005994 <lzma_index_uncompressed_size@@XZ_5.0>:
    5994:	sub	sp, sp, #0x10
    5998:	str	x0, [sp, #8]
    599c:	ldr	x0, [sp, #8]
    59a0:	ldr	x0, [x0, #32]
    59a4:	add	sp, sp, #0x10
    59a8:	ret

00000000000059ac <lzma_index_checks@@XZ_5.0>:
    59ac:	sub	sp, sp, #0x20
    59b0:	str	x0, [sp, #8]
    59b4:	ldr	x0, [sp, #8]
    59b8:	ldr	w0, [x0, #72]
    59bc:	str	w0, [sp, #28]
    59c0:	ldr	x0, [sp, #8]
    59c4:	ldr	x0, [x0, #16]
    59c8:	str	x0, [sp, #16]
    59cc:	ldr	x0, [sp, #16]
    59d0:	ldr	w0, [x0, #104]
    59d4:	cmn	w0, #0x1
    59d8:	b.eq	59f8 <lzma_index_checks@@XZ_5.0+0x4c>  // b.none
    59dc:	ldr	x0, [sp, #16]
    59e0:	ldr	w0, [x0, #120]
    59e4:	mov	w1, #0x1                   	// #1
    59e8:	lsl	w0, w1, w0
    59ec:	ldr	w1, [sp, #28]
    59f0:	orr	w0, w1, w0
    59f4:	str	w0, [sp, #28]
    59f8:	ldr	w0, [sp, #28]
    59fc:	add	sp, sp, #0x20
    5a00:	ret
    5a04:	stp	x29, x30, [sp, #-32]!
    5a08:	mov	x29, sp
    5a0c:	str	x0, [sp, #24]
    5a10:	ldr	x0, [sp, #24]
    5a14:	ldr	x2, [x0, #48]
    5a18:	ldr	x0, [sp, #24]
    5a1c:	ldr	x0, [x0, #56]
    5a20:	mov	x1, x0
    5a24:	mov	x0, x2
    5a28:	bl	4fe0 <lzma_physmem@@XZ_5.0+0x68>
    5a2c:	mov	w1, w0
    5a30:	mov	w0, #0x4                   	// #4
    5a34:	sub	w0, w0, w1
    5a38:	and	w0, w0, #0x3
    5a3c:	ldp	x29, x30, [sp], #32
    5a40:	ret

0000000000005a44 <lzma_index_stream_flags@@XZ_5.0>:
    5a44:	stp	x29, x30, [sp, #-48]!
    5a48:	mov	x29, sp
    5a4c:	str	x0, [sp, #24]
    5a50:	str	x1, [sp, #16]
    5a54:	ldr	x0, [sp, #24]
    5a58:	cmp	x0, #0x0
    5a5c:	b.eq	5a6c <lzma_index_stream_flags@@XZ_5.0+0x28>  // b.none
    5a60:	ldr	x0, [sp, #16]
    5a64:	cmp	x0, #0x0
    5a68:	b.ne	5a74 <lzma_index_stream_flags@@XZ_5.0+0x30>  // b.any
    5a6c:	mov	w0, #0xb                   	// #11
    5a70:	b	5ad4 <lzma_index_stream_flags@@XZ_5.0+0x90>
    5a74:	ldr	x1, [sp, #16]
    5a78:	ldr	x0, [sp, #16]
    5a7c:	bl	3110 <lzma_stream_flags_compare@plt>
    5a80:	str	w0, [sp, #44]
    5a84:	ldr	w0, [sp, #44]
    5a88:	cmp	w0, #0x0
    5a8c:	b.eq	5a98 <lzma_index_stream_flags@@XZ_5.0+0x54>  // b.none
    5a90:	ldr	w0, [sp, #44]
    5a94:	b	5ad4 <lzma_index_stream_flags@@XZ_5.0+0x90>
    5a98:	ldr	x0, [sp, #24]
    5a9c:	ldr	x0, [x0, #16]
    5aa0:	str	x0, [sp, #32]
    5aa4:	ldr	x0, [sp, #32]
    5aa8:	add	x0, x0, #0x68
    5aac:	ldr	x1, [sp, #16]
    5ab0:	ldp	x2, x3, [x1]
    5ab4:	stp	x2, x3, [x0]
    5ab8:	ldp	x2, x3, [x1, #16]
    5abc:	stp	x2, x3, [x0, #16]
    5ac0:	ldp	x2, x3, [x1, #32]
    5ac4:	stp	x2, x3, [x0, #32]
    5ac8:	ldr	x1, [x1, #48]
    5acc:	str	x1, [x0, #48]
    5ad0:	mov	w0, #0x0                   	// #0
    5ad4:	ldp	x29, x30, [sp], #48
    5ad8:	ret

0000000000005adc <lzma_index_stream_padding@@XZ_5.0>:
    5adc:	stp	x29, x30, [sp, #-48]!
    5ae0:	mov	x29, sp
    5ae4:	str	x0, [sp, #24]
    5ae8:	str	x1, [sp, #16]
    5aec:	ldr	x0, [sp, #24]
    5af0:	cmp	x0, #0x0
    5af4:	b.eq	5b14 <lzma_index_stream_padding@@XZ_5.0+0x38>  // b.none
    5af8:	ldr	x0, [sp, #16]
    5afc:	cmp	x0, #0x0
    5b00:	b.lt	5b14 <lzma_index_stream_padding@@XZ_5.0+0x38>  // b.tstop
    5b04:	ldr	x0, [sp, #16]
    5b08:	and	x0, x0, #0x3
    5b0c:	cmp	x0, #0x0
    5b10:	b.eq	5b1c <lzma_index_stream_padding@@XZ_5.0+0x40>  // b.none
    5b14:	mov	w0, #0xb                   	// #11
    5b18:	b	5b7c <lzma_index_stream_padding@@XZ_5.0+0xa0>
    5b1c:	ldr	x0, [sp, #24]
    5b20:	ldr	x0, [x0, #16]
    5b24:	str	x0, [sp, #40]
    5b28:	ldr	x0, [sp, #40]
    5b2c:	ldr	x0, [x0, #160]
    5b30:	str	x0, [sp, #32]
    5b34:	ldr	x0, [sp, #40]
    5b38:	str	xzr, [x0, #160]
    5b3c:	ldr	x0, [sp, #24]
    5b40:	bl	3360 <lzma_index_file_size@plt>
    5b44:	mov	x1, x0
    5b48:	ldr	x0, [sp, #16]
    5b4c:	add	x0, x1, x0
    5b50:	cmp	x0, #0x0
    5b54:	b.ge	5b6c <lzma_index_stream_padding@@XZ_5.0+0x90>  // b.tcont
    5b58:	ldr	x0, [sp, #40]
    5b5c:	ldr	x1, [sp, #32]
    5b60:	str	x1, [x0, #160]
    5b64:	mov	w0, #0x9                   	// #9
    5b68:	b	5b7c <lzma_index_stream_padding@@XZ_5.0+0xa0>
    5b6c:	ldr	x0, [sp, #40]
    5b70:	ldr	x1, [sp, #16]
    5b74:	str	x1, [x0, #160]
    5b78:	mov	w0, #0x0                   	// #0
    5b7c:	ldp	x29, x30, [sp], #48
    5b80:	ret

0000000000005b84 <lzma_index_append@@XZ_5.0>:
    5b84:	stp	x29, x30, [sp, #-112]!
    5b88:	mov	x29, sp
    5b8c:	str	x19, [sp, #16]
    5b90:	str	x0, [sp, #56]
    5b94:	str	x1, [sp, #48]
    5b98:	str	x2, [sp, #40]
    5b9c:	str	x3, [sp, #32]
    5ba0:	ldr	x0, [sp, #56]
    5ba4:	cmp	x0, #0x0
    5ba8:	b.eq	5bd4 <lzma_index_append@@XZ_5.0+0x50>  // b.none
    5bac:	ldr	x0, [sp, #40]
    5bb0:	cmp	x0, #0x4
    5bb4:	b.ls	5bd4 <lzma_index_append@@XZ_5.0+0x50>  // b.plast
    5bb8:	ldr	x1, [sp, #40]
    5bbc:	mov	x0, #0x7ffffffffffffffc    	// #9223372036854775804
    5bc0:	cmp	x1, x0
    5bc4:	b.hi	5bd4 <lzma_index_append@@XZ_5.0+0x50>  // b.pmore
    5bc8:	ldr	x0, [sp, #32]
    5bcc:	cmp	x0, #0x0
    5bd0:	b.ge	5bdc <lzma_index_append@@XZ_5.0+0x58>  // b.tcont
    5bd4:	mov	w0, #0xb                   	// #11
    5bd8:	b	5ecc <lzma_index_append@@XZ_5.0+0x348>
    5bdc:	ldr	x0, [sp, #56]
    5be0:	ldr	x0, [x0, #16]
    5be4:	str	x0, [sp, #96]
    5be8:	ldr	x0, [sp, #96]
    5bec:	ldr	x0, [x0, #72]
    5bf0:	str	x0, [sp, #104]
    5bf4:	ldr	x0, [sp, #104]
    5bf8:	cmp	x0, #0x0
    5bfc:	b.eq	5c24 <lzma_index_append@@XZ_5.0+0xa0>  // b.none
    5c00:	ldr	x0, [sp, #104]
    5c04:	ldr	x0, [x0, #56]
    5c08:	ldr	x1, [sp, #104]
    5c0c:	add	x0, x0, #0x4
    5c10:	lsl	x0, x0, #4
    5c14:	add	x0, x1, x0
    5c18:	ldr	x0, [x0, #8]
    5c1c:	bl	4fc4 <lzma_physmem@@XZ_5.0+0x4c>
    5c20:	b	5c28 <lzma_index_append@@XZ_5.0+0xa4>
    5c24:	mov	x0, #0x0                   	// #0
    5c28:	str	x0, [sp, #88]
    5c2c:	ldr	x0, [sp, #104]
    5c30:	cmp	x0, #0x0
    5c34:	b.eq	5c58 <lzma_index_append@@XZ_5.0+0xd4>  // b.none
    5c38:	ldr	x0, [sp, #104]
    5c3c:	ldr	x0, [x0, #56]
    5c40:	ldr	x1, [sp, #104]
    5c44:	add	x0, x0, #0x4
    5c48:	lsl	x0, x0, #4
    5c4c:	add	x0, x1, x0
    5c50:	ldr	x0, [x0]
    5c54:	b	5c5c <lzma_index_append@@XZ_5.0+0xd8>
    5c58:	mov	x0, #0x0                   	// #0
    5c5c:	str	x0, [sp, #80]
    5c60:	ldr	x0, [sp, #40]
    5c64:	bl	3480 <lzma_vli_size@plt>
    5c68:	mov	w19, w0
    5c6c:	ldr	x0, [sp, #32]
    5c70:	bl	3480 <lzma_vli_size@plt>
    5c74:	add	w0, w19, w0
    5c78:	str	w0, [sp, #76]
    5c7c:	ldr	x0, [sp, #96]
    5c80:	ldr	x5, [x0, #8]
    5c84:	ldr	x1, [sp, #88]
    5c88:	ldr	x0, [sp, #40]
    5c8c:	add	x6, x1, x0
    5c90:	ldr	x0, [sp, #96]
    5c94:	ldr	x0, [x0, #88]
    5c98:	add	x2, x0, #0x1
    5c9c:	ldr	x0, [sp, #96]
    5ca0:	ldr	x1, [x0, #96]
    5ca4:	ldr	w0, [sp, #76]
    5ca8:	add	x1, x1, x0
    5cac:	ldr	x0, [sp, #96]
    5cb0:	ldr	x0, [x0, #160]
    5cb4:	mov	x4, x0
    5cb8:	mov	x3, x1
    5cbc:	mov	x1, x6
    5cc0:	mov	x0, x5
    5cc4:	bl	5874 <lzma_index_stream_size@@XZ_5.0+0x48>
    5cc8:	cmn	x0, #0x1
    5ccc:	b.ne	5cd8 <lzma_index_append@@XZ_5.0+0x154>  // b.any
    5cd0:	mov	w0, #0x9                   	// #9
    5cd4:	b	5ecc <lzma_index_append@@XZ_5.0+0x348>
    5cd8:	ldr	x0, [sp, #56]
    5cdc:	ldr	x0, [x0, #48]
    5ce0:	add	x2, x0, #0x1
    5ce4:	ldr	x0, [sp, #56]
    5ce8:	ldr	x1, [x0, #56]
    5cec:	ldr	w0, [sp, #76]
    5cf0:	add	x0, x1, x0
    5cf4:	mov	x1, x0
    5cf8:	mov	x0, x2
    5cfc:	bl	5014 <lzma_physmem@@XZ_5.0+0x9c>
    5d00:	mov	x1, x0
    5d04:	mov	x0, #0x400000000           	// #17179869184
    5d08:	cmp	x1, x0
    5d0c:	b.ls	5d18 <lzma_index_append@@XZ_5.0+0x194>  // b.plast
    5d10:	mov	w0, #0x9                   	// #9
    5d14:	b	5ecc <lzma_index_append@@XZ_5.0+0x348>
    5d18:	ldr	x0, [sp, #104]
    5d1c:	cmp	x0, #0x0
    5d20:	b.eq	5d58 <lzma_index_append@@XZ_5.0+0x1d4>  // b.none
    5d24:	ldr	x0, [sp, #104]
    5d28:	ldr	x0, [x0, #56]
    5d2c:	add	x1, x0, #0x1
    5d30:	ldr	x0, [sp, #104]
    5d34:	ldr	x0, [x0, #48]
    5d38:	cmp	x1, x0
    5d3c:	b.cs	5d58 <lzma_index_append@@XZ_5.0+0x1d4>  // b.hs, b.nlast
    5d40:	ldr	x0, [sp, #104]
    5d44:	ldr	x0, [x0, #56]
    5d48:	add	x1, x0, #0x1
    5d4c:	ldr	x0, [sp, #104]
    5d50:	str	x1, [x0, #56]
    5d54:	b	5de8 <lzma_index_append@@XZ_5.0+0x264>
    5d58:	ldr	x0, [sp, #56]
    5d5c:	ldr	x0, [x0, #64]
    5d60:	add	x0, x0, #0x4
    5d64:	lsl	x0, x0, #4
    5d68:	ldr	x1, [sp, #48]
    5d6c:	bl	36fc <lzma_version_string@@XZ_5.0+0xc>
    5d70:	str	x0, [sp, #104]
    5d74:	ldr	x0, [sp, #104]
    5d78:	cmp	x0, #0x0
    5d7c:	b.ne	5d88 <lzma_index_append@@XZ_5.0+0x204>  // b.any
    5d80:	mov	w0, #0x5                   	// #5
    5d84:	b	5ecc <lzma_index_append@@XZ_5.0+0x348>
    5d88:	ldr	x0, [sp, #104]
    5d8c:	str	xzr, [x0, #56]
    5d90:	ldr	x0, [sp, #56]
    5d94:	ldr	x1, [x0, #64]
    5d98:	ldr	x0, [sp, #104]
    5d9c:	str	x1, [x0, #48]
    5da0:	ldr	x0, [sp, #56]
    5da4:	mov	x1, #0x200                 	// #512
    5da8:	str	x1, [x0, #64]
    5dac:	ldr	x0, [sp, #104]
    5db0:	ldr	x1, [sp, #80]
    5db4:	str	x1, [x0]
    5db8:	ldr	x0, [sp, #104]
    5dbc:	ldr	x1, [sp, #88]
    5dc0:	str	x1, [x0, #8]
    5dc4:	ldr	x0, [sp, #96]
    5dc8:	ldr	x0, [x0, #88]
    5dcc:	add	x1, x0, #0x1
    5dd0:	ldr	x0, [sp, #104]
    5dd4:	str	x1, [x0, #40]
    5dd8:	ldr	x0, [sp, #96]
    5ddc:	add	x0, x0, #0x38
    5de0:	ldr	x1, [sp, #104]
    5de4:	bl	5130 <lzma_physmem@@XZ_5.0+0x1b8>
    5de8:	ldr	x0, [sp, #104]
    5dec:	ldr	x0, [x0, #56]
    5df0:	ldr	x2, [sp, #80]
    5df4:	ldr	x1, [sp, #32]
    5df8:	add	x1, x2, x1
    5dfc:	ldr	x2, [sp, #104]
    5e00:	add	x0, x0, #0x4
    5e04:	lsl	x0, x0, #4
    5e08:	add	x0, x2, x0
    5e0c:	str	x1, [x0]
    5e10:	ldr	x0, [sp, #104]
    5e14:	ldr	x0, [x0, #56]
    5e18:	ldr	x2, [sp, #88]
    5e1c:	ldr	x1, [sp, #40]
    5e20:	add	x1, x2, x1
    5e24:	ldr	x2, [sp, #104]
    5e28:	add	x0, x0, #0x4
    5e2c:	lsl	x0, x0, #4
    5e30:	add	x0, x2, x0
    5e34:	str	x1, [x0, #8]
    5e38:	ldr	x0, [sp, #96]
    5e3c:	ldr	x0, [x0, #88]
    5e40:	add	x1, x0, #0x1
    5e44:	ldr	x0, [sp, #96]
    5e48:	str	x1, [x0, #88]
    5e4c:	ldr	x0, [sp, #96]
    5e50:	ldr	x1, [x0, #96]
    5e54:	ldr	w0, [sp, #76]
    5e58:	add	x1, x1, x0
    5e5c:	ldr	x0, [sp, #96]
    5e60:	str	x1, [x0, #96]
    5e64:	ldr	x0, [sp, #40]
    5e68:	bl	4fc4 <lzma_physmem@@XZ_5.0+0x4c>
    5e6c:	mov	x1, x0
    5e70:	ldr	x0, [sp, #56]
    5e74:	ldr	x0, [x0, #40]
    5e78:	add	x1, x1, x0
    5e7c:	ldr	x0, [sp, #56]
    5e80:	str	x1, [x0, #40]
    5e84:	ldr	x0, [sp, #56]
    5e88:	ldr	x1, [x0, #32]
    5e8c:	ldr	x0, [sp, #32]
    5e90:	add	x1, x1, x0
    5e94:	ldr	x0, [sp, #56]
    5e98:	str	x1, [x0, #32]
    5e9c:	ldr	x0, [sp, #56]
    5ea0:	ldr	x0, [x0, #48]
    5ea4:	add	x1, x0, #0x1
    5ea8:	ldr	x0, [sp, #56]
    5eac:	str	x1, [x0, #48]
    5eb0:	ldr	x0, [sp, #56]
    5eb4:	ldr	x1, [x0, #56]
    5eb8:	ldr	w0, [sp, #76]
    5ebc:	add	x1, x1, x0
    5ec0:	ldr	x0, [sp, #56]
    5ec4:	str	x1, [x0, #56]
    5ec8:	mov	w0, #0x0                   	// #0
    5ecc:	ldr	x19, [sp, #16]
    5ed0:	ldp	x29, x30, [sp], #112
    5ed4:	ret
    5ed8:	stp	x29, x30, [sp, #-48]!
    5edc:	mov	x29, sp
    5ee0:	str	x0, [sp, #24]
    5ee4:	str	x1, [sp, #16]
    5ee8:	ldr	x0, [sp, #16]
    5eec:	ldr	x0, [x0, #24]
    5ef0:	str	x0, [sp, #40]
    5ef4:	ldr	x0, [sp, #16]
    5ef8:	ldr	x0, [x0, #32]
    5efc:	str	x0, [sp, #32]
    5f00:	ldr	x0, [sp, #40]
    5f04:	cmp	x0, #0x0
    5f08:	b.eq	5f18 <lzma_index_append@@XZ_5.0+0x394>  // b.none
    5f0c:	ldr	x1, [sp, #40]
    5f10:	ldr	x0, [sp, #24]
    5f14:	bl	5ed8 <lzma_index_append@@XZ_5.0+0x354>
    5f18:	ldr	x0, [sp, #16]
    5f1c:	ldr	x1, [x0]
    5f20:	ldr	x0, [sp, #24]
    5f24:	ldr	x0, [x0]
    5f28:	add	x1, x1, x0
    5f2c:	ldr	x0, [sp, #16]
    5f30:	str	x1, [x0]
    5f34:	ldr	x0, [sp, #16]
    5f38:	ldr	x1, [x0, #8]
    5f3c:	ldr	x0, [sp, #24]
    5f40:	ldr	x0, [x0, #8]
    5f44:	add	x1, x1, x0
    5f48:	ldr	x0, [sp, #16]
    5f4c:	str	x1, [x0, #8]
    5f50:	ldr	x0, [sp, #16]
    5f54:	ldr	w1, [x0, #40]
    5f58:	ldr	x0, [sp, #24]
    5f5c:	ldr	w0, [x0, #24]
    5f60:	add	w1, w1, w0
    5f64:	ldr	x0, [sp, #16]
    5f68:	str	w1, [x0, #40]
    5f6c:	ldr	x0, [sp, #16]
    5f70:	ldr	x1, [x0, #48]
    5f74:	ldr	x0, [sp, #24]
    5f78:	ldr	x0, [x0, #16]
    5f7c:	add	x1, x1, x0
    5f80:	ldr	x0, [sp, #16]
    5f84:	str	x1, [x0, #48]
    5f88:	ldr	x0, [sp, #24]
    5f8c:	ldr	x0, [x0, #32]
    5f90:	ldr	x1, [sp, #16]
    5f94:	bl	5130 <lzma_physmem@@XZ_5.0+0x1b8>
    5f98:	ldr	x0, [sp, #32]
    5f9c:	cmp	x0, #0x0
    5fa0:	b.eq	5fb4 <lzma_index_append@@XZ_5.0+0x430>  // b.none
    5fa4:	ldr	x1, [sp, #32]
    5fa8:	ldr	x0, [sp, #24]
    5fac:	bl	5ed8 <lzma_index_append@@XZ_5.0+0x354>
    5fb0:	nop
    5fb4:	nop
    5fb8:	ldp	x29, x30, [sp], #48
    5fbc:	ret

0000000000005fc0 <lzma_index_cat@@XZ_5.0>:
    5fc0:	stp	x29, x30, [sp, #-144]!
    5fc4:	mov	x29, sp
    5fc8:	str	x0, [sp, #40]
    5fcc:	str	x1, [sp, #32]
    5fd0:	str	x2, [sp, #24]
    5fd4:	ldr	x0, [sp, #40]
    5fd8:	bl	3360 <lzma_index_file_size@plt>
    5fdc:	str	x0, [sp, #136]
    5fe0:	ldr	x0, [sp, #32]
    5fe4:	bl	3360 <lzma_index_file_size@plt>
    5fe8:	mov	x1, x0
    5fec:	ldr	x0, [sp, #136]
    5ff0:	add	x0, x1, x0
    5ff4:	cmp	x0, #0x0
    5ff8:	b.lt	6018 <lzma_index_cat@@XZ_5.0+0x58>  // b.tstop
    5ffc:	ldr	x0, [sp, #40]
    6000:	ldr	x1, [x0, #32]
    6004:	ldr	x0, [sp, #32]
    6008:	ldr	x0, [x0, #32]
    600c:	add	x0, x1, x0
    6010:	cmp	x0, #0x0
    6014:	b.ge	6020 <lzma_index_cat@@XZ_5.0+0x60>  // b.tcont
    6018:	mov	w0, #0x9                   	// #9
    601c:	b	62d0 <lzma_index_cat@@XZ_5.0+0x310>
    6020:	ldr	x0, [sp, #40]
    6024:	ldr	x2, [x0, #48]
    6028:	ldr	x0, [sp, #40]
    602c:	ldr	x0, [x0, #56]
    6030:	mov	x1, x0
    6034:	mov	x0, x2
    6038:	bl	4fe0 <lzma_physmem@@XZ_5.0+0x68>
    603c:	str	x0, [sp, #128]
    6040:	ldr	x0, [sp, #32]
    6044:	ldr	x2, [x0, #48]
    6048:	ldr	x0, [sp, #32]
    604c:	ldr	x0, [x0, #56]
    6050:	mov	x1, x0
    6054:	mov	x0, x2
    6058:	bl	4fe0 <lzma_physmem@@XZ_5.0+0x68>
    605c:	str	x0, [sp, #120]
    6060:	ldr	x1, [sp, #128]
    6064:	ldr	x0, [sp, #120]
    6068:	add	x0, x1, x0
    606c:	bl	4fc4 <lzma_physmem@@XZ_5.0+0x4c>
    6070:	mov	x1, x0
    6074:	mov	x0, #0x400000000           	// #17179869184
    6078:	cmp	x1, x0
    607c:	b.ls	6088 <lzma_index_cat@@XZ_5.0+0xc8>  // b.plast
    6080:	mov	w0, #0x9                   	// #9
    6084:	b	62d0 <lzma_index_cat@@XZ_5.0+0x310>
    6088:	ldr	x0, [sp, #40]
    608c:	ldr	x0, [x0, #16]
    6090:	str	x0, [sp, #112]
    6094:	ldr	x0, [sp, #112]
    6098:	ldr	x0, [x0, #72]
    609c:	str	x0, [sp, #104]
    60a0:	ldr	x0, [sp, #104]
    60a4:	cmp	x0, #0x0
    60a8:	b.eq	61ec <lzma_index_cat@@XZ_5.0+0x22c>  // b.none
    60ac:	ldr	x0, [sp, #104]
    60b0:	ldr	x0, [x0, #56]
    60b4:	add	x1, x0, #0x1
    60b8:	ldr	x0, [sp, #104]
    60bc:	ldr	x0, [x0, #48]
    60c0:	cmp	x1, x0
    60c4:	b.cs	61ec <lzma_index_cat@@XZ_5.0+0x22c>  // b.hs, b.nlast
    60c8:	ldr	x0, [sp, #104]
    60cc:	ldr	x0, [x0, #56]
    60d0:	add	x0, x0, #0x5
    60d4:	lsl	x0, x0, #4
    60d8:	ldr	x1, [sp, #24]
    60dc:	bl	36fc <lzma_version_string@@XZ_5.0+0xc>
    60e0:	str	x0, [sp, #96]
    60e4:	ldr	x0, [sp, #96]
    60e8:	cmp	x0, #0x0
    60ec:	b.ne	60f8 <lzma_index_cat@@XZ_5.0+0x138>  // b.any
    60f0:	mov	w0, #0x5                   	// #5
    60f4:	b	62d0 <lzma_index_cat@@XZ_5.0+0x310>
    60f8:	ldr	x0, [sp, #96]
    60fc:	ldr	x1, [sp, #104]
    6100:	ldp	x2, x3, [x1]
    6104:	stp	x2, x3, [x0]
    6108:	ldp	x2, x3, [x1, #16]
    610c:	stp	x2, x3, [x0, #16]
    6110:	ldr	x1, [x1, #32]
    6114:	str	x1, [x0, #32]
    6118:	ldr	x0, [sp, #104]
    611c:	ldr	x0, [x0, #56]
    6120:	add	x1, x0, #0x1
    6124:	ldr	x0, [sp, #96]
    6128:	str	x1, [x0, #48]
    612c:	ldr	x0, [sp, #104]
    6130:	ldr	x1, [x0, #56]
    6134:	ldr	x0, [sp, #96]
    6138:	str	x1, [x0, #56]
    613c:	ldr	x0, [sp, #104]
    6140:	ldr	x1, [x0, #40]
    6144:	ldr	x0, [sp, #96]
    6148:	str	x1, [x0, #40]
    614c:	ldr	x0, [sp, #96]
    6150:	add	x3, x0, #0x40
    6154:	ldr	x0, [sp, #104]
    6158:	add	x1, x0, #0x40
    615c:	ldr	x0, [sp, #96]
    6160:	ldr	x0, [x0, #48]
    6164:	lsl	x0, x0, #4
    6168:	mov	x2, x0
    616c:	mov	x0, x3
    6170:	bl	3090 <memcpy@plt>
    6174:	ldr	x0, [sp, #104]
    6178:	ldr	x0, [x0, #16]
    617c:	cmp	x0, #0x0
    6180:	b.eq	6194 <lzma_index_cat@@XZ_5.0+0x1d4>  // b.none
    6184:	ldr	x0, [sp, #104]
    6188:	ldr	x0, [x0, #16]
    618c:	ldr	x1, [sp, #96]
    6190:	str	x1, [x0, #32]
    6194:	ldr	x0, [sp, #112]
    6198:	ldr	x1, [x0, #64]
    619c:	ldr	x0, [sp, #104]
    61a0:	cmp	x1, x0
    61a4:	b.ne	61c0 <lzma_index_cat@@XZ_5.0+0x200>  // b.any
    61a8:	ldr	x1, [sp, #96]
    61ac:	ldr	x0, [sp, #112]
    61b0:	str	x1, [x0, #64]
    61b4:	ldr	x1, [sp, #96]
    61b8:	ldr	x0, [sp, #112]
    61bc:	str	x1, [x0, #56]
    61c0:	ldr	x0, [sp, #112]
    61c4:	ldr	x1, [x0, #72]
    61c8:	ldr	x0, [sp, #104]
    61cc:	cmp	x1, x0
    61d0:	b.ne	61e0 <lzma_index_cat@@XZ_5.0+0x220>  // b.any
    61d4:	ldr	x1, [sp, #96]
    61d8:	ldr	x0, [sp, #112]
    61dc:	str	x1, [x0, #72]
    61e0:	ldr	x1, [sp, #24]
    61e4:	ldr	x0, [sp, #104]
    61e8:	bl	3814 <lzma_version_string@@XZ_5.0+0x124>
    61ec:	ldr	x0, [sp, #40]
    61f0:	ldr	x0, [x0, #32]
    61f4:	str	x0, [sp, #56]
    61f8:	ldr	x0, [sp, #136]
    61fc:	str	x0, [sp, #64]
    6200:	ldr	x0, [sp, #40]
    6204:	ldr	x0, [x0, #48]
    6208:	str	x0, [sp, #72]
    620c:	ldr	x0, [sp, #40]
    6210:	ldr	w0, [x0, #24]
    6214:	str	w0, [sp, #80]
    6218:	ldr	x0, [sp, #40]
    621c:	str	x0, [sp, #88]
    6220:	ldr	x0, [sp, #32]
    6224:	ldr	x1, [x0]
    6228:	add	x0, sp, #0x38
    622c:	bl	5ed8 <lzma_index_append@@XZ_5.0+0x354>
    6230:	ldr	x0, [sp, #40]
    6234:	ldr	x1, [x0, #32]
    6238:	ldr	x0, [sp, #32]
    623c:	ldr	x0, [x0, #32]
    6240:	add	x1, x1, x0
    6244:	ldr	x0, [sp, #40]
    6248:	str	x1, [x0, #32]
    624c:	ldr	x0, [sp, #40]
    6250:	ldr	x1, [x0, #40]
    6254:	ldr	x0, [sp, #32]
    6258:	ldr	x0, [x0, #40]
    625c:	add	x1, x1, x0
    6260:	ldr	x0, [sp, #40]
    6264:	str	x1, [x0, #40]
    6268:	ldr	x0, [sp, #40]
    626c:	ldr	x1, [x0, #48]
    6270:	ldr	x0, [sp, #32]
    6274:	ldr	x0, [x0, #48]
    6278:	add	x1, x1, x0
    627c:	ldr	x0, [sp, #40]
    6280:	str	x1, [x0, #48]
    6284:	ldr	x0, [sp, #40]
    6288:	ldr	x1, [x0, #56]
    628c:	ldr	x0, [sp, #32]
    6290:	ldr	x0, [x0, #56]
    6294:	add	x1, x1, x0
    6298:	ldr	x0, [sp, #40]
    629c:	str	x1, [x0, #56]
    62a0:	ldr	x0, [sp, #40]
    62a4:	bl	31d0 <lzma_index_checks@plt>
    62a8:	mov	w1, w0
    62ac:	ldr	x0, [sp, #32]
    62b0:	ldr	w0, [x0, #72]
    62b4:	orr	w1, w1, w0
    62b8:	ldr	x0, [sp, #40]
    62bc:	str	w1, [x0, #72]
    62c0:	ldr	x1, [sp, #24]
    62c4:	ldr	x0, [sp, #32]
    62c8:	bl	3814 <lzma_version_string@@XZ_5.0+0x124>
    62cc:	mov	w0, #0x0                   	// #0
    62d0:	ldp	x29, x30, [sp], #144
    62d4:	ret
    62d8:	stp	x29, x30, [sp, #-64]!
    62dc:	mov	x29, sp
    62e0:	str	x0, [sp, #24]
    62e4:	str	x1, [sp, #16]
    62e8:	ldr	x0, [sp, #24]
    62ec:	ldr	x1, [x0, #88]
    62f0:	mov	x0, #0xffffffffffffffc     	// #1152921504606846972
    62f4:	cmp	x1, x0
    62f8:	b.cc	6304 <lzma_index_cat@@XZ_5.0+0x344>  // b.lo, b.ul, b.last
    62fc:	mov	x0, #0x0                   	// #0
    6300:	b	64d0 <lzma_index_cat@@XZ_5.0+0x510>
    6304:	ldr	x0, [sp, #24]
    6308:	ldr	x5, [x0, #8]
    630c:	ldr	x0, [sp, #24]
    6310:	ldr	x1, [x0]
    6314:	ldr	x0, [sp, #24]
    6318:	ldr	w2, [x0, #40]
    631c:	ldr	x0, [sp, #24]
    6320:	ldr	x0, [x0, #48]
    6324:	ldr	x4, [sp, #16]
    6328:	mov	x3, x0
    632c:	mov	x0, x5
    6330:	bl	53dc <lzma_physmem@@XZ_5.0+0x464>
    6334:	str	x0, [sp, #40]
    6338:	ldr	x0, [sp, #40]
    633c:	cmp	x0, #0x0
    6340:	b.ne	634c <lzma_index_cat@@XZ_5.0+0x38c>  // b.any
    6344:	mov	x0, #0x0                   	// #0
    6348:	b	64d0 <lzma_index_cat@@XZ_5.0+0x510>
    634c:	ldr	x0, [sp, #24]
    6350:	ldr	x1, [x0, #88]
    6354:	ldr	x0, [sp, #40]
    6358:	str	x1, [x0, #88]
    635c:	ldr	x0, [sp, #24]
    6360:	ldr	x1, [x0, #96]
    6364:	ldr	x0, [sp, #40]
    6368:	str	x1, [x0, #96]
    636c:	ldr	x0, [sp, #40]
    6370:	add	x2, x0, #0x68
    6374:	ldr	x0, [sp, #24]
    6378:	add	x1, x0, #0x68
    637c:	mov	x0, x2
    6380:	ldp	x2, x3, [x1]
    6384:	stp	x2, x3, [x0]
    6388:	ldp	x2, x3, [x1, #16]
    638c:	stp	x2, x3, [x0, #16]
    6390:	ldp	x2, x3, [x1, #32]
    6394:	stp	x2, x3, [x0, #32]
    6398:	ldr	x1, [x1, #48]
    639c:	str	x1, [x0, #48]
    63a0:	ldr	x0, [sp, #24]
    63a4:	ldr	x1, [x0, #160]
    63a8:	ldr	x0, [sp, #40]
    63ac:	str	x1, [x0, #160]
    63b0:	ldr	x0, [sp, #24]
    63b4:	ldr	x0, [x0, #64]
    63b8:	cmp	x0, #0x0
    63bc:	b.ne	63c8 <lzma_index_cat@@XZ_5.0+0x408>  // b.any
    63c0:	ldr	x0, [sp, #40]
    63c4:	b	64d0 <lzma_index_cat@@XZ_5.0+0x510>
    63c8:	ldr	x0, [sp, #24]
    63cc:	ldr	x0, [x0, #88]
    63d0:	add	x0, x0, #0x4
    63d4:	lsl	x0, x0, #4
    63d8:	ldr	x1, [sp, #16]
    63dc:	bl	36fc <lzma_version_string@@XZ_5.0+0xc>
    63e0:	str	x0, [sp, #32]
    63e4:	ldr	x0, [sp, #32]
    63e8:	cmp	x0, #0x0
    63ec:	b.ne	6404 <lzma_index_cat@@XZ_5.0+0x444>  // b.any
    63f0:	ldr	x1, [sp, #16]
    63f4:	ldr	x0, [sp, #40]
    63f8:	bl	54a0 <lzma_physmem@@XZ_5.0+0x528>
    63fc:	mov	x0, #0x0                   	// #0
    6400:	b	64d0 <lzma_index_cat@@XZ_5.0+0x510>
    6404:	ldr	x0, [sp, #32]
    6408:	str	xzr, [x0]
    640c:	ldr	x0, [sp, #32]
    6410:	str	xzr, [x0, #8]
    6414:	ldr	x0, [sp, #32]
    6418:	mov	x1, #0x1                   	// #1
    641c:	str	x1, [x0, #40]
    6420:	ldr	x0, [sp, #24]
    6424:	ldr	x1, [x0, #88]
    6428:	ldr	x0, [sp, #32]
    642c:	str	x1, [x0, #48]
    6430:	ldr	x0, [sp, #24]
    6434:	ldr	x0, [x0, #88]
    6438:	sub	x1, x0, #0x1
    643c:	ldr	x0, [sp, #32]
    6440:	str	x1, [x0, #56]
    6444:	ldr	x0, [sp, #24]
    6448:	ldr	x0, [x0, #64]
    644c:	str	x0, [sp, #56]
    6450:	str	xzr, [sp, #48]
    6454:	ldr	x0, [sp, #32]
    6458:	add	x1, x0, #0x40
    645c:	ldr	x0, [sp, #48]
    6460:	lsl	x0, x0, #4
    6464:	add	x3, x1, x0
    6468:	ldr	x0, [sp, #56]
    646c:	add	x1, x0, #0x40
    6470:	ldr	x0, [sp, #56]
    6474:	ldr	x0, [x0, #56]
    6478:	add	x0, x0, #0x1
    647c:	lsl	x0, x0, #4
    6480:	mov	x2, x0
    6484:	mov	x0, x3
    6488:	bl	3090 <memcpy@plt>
    648c:	ldr	x0, [sp, #56]
    6490:	ldr	x1, [x0, #56]
    6494:	ldr	x0, [sp, #48]
    6498:	add	x0, x1, x0
    649c:	add	x0, x0, #0x1
    64a0:	str	x0, [sp, #48]
    64a4:	ldr	x0, [sp, #56]
    64a8:	bl	52dc <lzma_physmem@@XZ_5.0+0x364>
    64ac:	str	x0, [sp, #56]
    64b0:	ldr	x0, [sp, #56]
    64b4:	cmp	x0, #0x0
    64b8:	b.ne	6454 <lzma_index_cat@@XZ_5.0+0x494>  // b.any
    64bc:	ldr	x0, [sp, #40]
    64c0:	add	x0, x0, #0x38
    64c4:	ldr	x1, [sp, #32]
    64c8:	bl	5130 <lzma_physmem@@XZ_5.0+0x1b8>
    64cc:	ldr	x0, [sp, #40]
    64d0:	ldp	x29, x30, [sp], #64
    64d4:	ret

00000000000064d8 <lzma_index_dup@@XZ_5.0>:
    64d8:	stp	x29, x30, [sp, #-64]!
    64dc:	mov	x29, sp
    64e0:	str	x0, [sp, #24]
    64e4:	str	x1, [sp, #16]
    64e8:	ldr	x0, [sp, #16]
    64ec:	bl	54ec <lzma_physmem@@XZ_5.0+0x574>
    64f0:	str	x0, [sp, #48]
    64f4:	ldr	x0, [sp, #48]
    64f8:	cmp	x0, #0x0
    64fc:	b.ne	6508 <lzma_index_dup@@XZ_5.0+0x30>  // b.any
    6500:	mov	x0, #0x0                   	// #0
    6504:	b	65ac <lzma_index_dup@@XZ_5.0+0xd4>
    6508:	ldr	x0, [sp, #24]
    650c:	ldr	x1, [x0, #32]
    6510:	ldr	x0, [sp, #48]
    6514:	str	x1, [x0, #32]
    6518:	ldr	x0, [sp, #24]
    651c:	ldr	x1, [x0, #40]
    6520:	ldr	x0, [sp, #48]
    6524:	str	x1, [x0, #40]
    6528:	ldr	x0, [sp, #24]
    652c:	ldr	x1, [x0, #48]
    6530:	ldr	x0, [sp, #48]
    6534:	str	x1, [x0, #48]
    6538:	ldr	x0, [sp, #24]
    653c:	ldr	x1, [x0, #56]
    6540:	ldr	x0, [sp, #48]
    6544:	str	x1, [x0, #56]
    6548:	ldr	x0, [sp, #24]
    654c:	ldr	x0, [x0, #8]
    6550:	str	x0, [sp, #56]
    6554:	ldr	x1, [sp, #16]
    6558:	ldr	x0, [sp, #56]
    655c:	bl	62d8 <lzma_index_cat@@XZ_5.0+0x318>
    6560:	str	x0, [sp, #40]
    6564:	ldr	x0, [sp, #40]
    6568:	cmp	x0, #0x0
    656c:	b.ne	6584 <lzma_index_dup@@XZ_5.0+0xac>  // b.any
    6570:	ldr	x1, [sp, #16]
    6574:	ldr	x0, [sp, #48]
    6578:	bl	33e0 <lzma_index_end@plt>
    657c:	mov	x0, #0x0                   	// #0
    6580:	b	65ac <lzma_index_dup@@XZ_5.0+0xd4>
    6584:	ldr	x0, [sp, #48]
    6588:	ldr	x1, [sp, #40]
    658c:	bl	5130 <lzma_physmem@@XZ_5.0+0x1b8>
    6590:	ldr	x0, [sp, #56]
    6594:	bl	52dc <lzma_physmem@@XZ_5.0+0x364>
    6598:	str	x0, [sp, #56]
    659c:	ldr	x0, [sp, #56]
    65a0:	cmp	x0, #0x0
    65a4:	b.ne	6554 <lzma_index_dup@@XZ_5.0+0x7c>  // b.any
    65a8:	ldr	x0, [sp, #48]
    65ac:	ldp	x29, x30, [sp], #64
    65b0:	ret
    65b4:	stp	x29, x30, [sp, #-96]!
    65b8:	mov	x29, sp
    65bc:	str	x19, [sp, #16]
    65c0:	str	x0, [sp, #40]
    65c4:	ldr	x0, [sp, #40]
    65c8:	ldr	x0, [x0, #256]
    65cc:	str	x0, [sp, #88]
    65d0:	ldr	x0, [sp, #40]
    65d4:	ldr	x0, [x0, #264]
    65d8:	str	x0, [sp, #80]
    65dc:	ldr	x0, [sp, #40]
    65e0:	ldr	x0, [x0, #272]
    65e4:	str	x0, [sp, #72]
    65e8:	ldr	x0, [sp, #40]
    65ec:	ldr	x0, [x0, #280]
    65f0:	str	x0, [sp, #64]
    65f4:	ldr	x0, [sp, #72]
    65f8:	cmp	x0, #0x0
    65fc:	b.ne	6610 <lzma_index_dup@@XZ_5.0+0x138>  // b.any
    6600:	ldr	x0, [sp, #40]
    6604:	mov	x1, #0x2                   	// #2
    6608:	str	x1, [x0, #288]
    660c:	b	668c <lzma_index_dup@@XZ_5.0+0x1b4>
    6610:	ldr	x0, [sp, #88]
    6614:	ldr	x1, [x0, #16]
    6618:	ldr	x0, [sp, #80]
    661c:	cmp	x1, x0
    6620:	b.ne	6638 <lzma_index_dup@@XZ_5.0+0x160>  // b.any
    6624:	ldr	x0, [sp, #80]
    6628:	ldr	x1, [x0, #72]
    662c:	ldr	x0, [sp, #72]
    6630:	cmp	x1, x0
    6634:	b.eq	6644 <lzma_index_dup@@XZ_5.0+0x16c>  // b.none
    6638:	ldr	x0, [sp, #40]
    663c:	str	xzr, [x0, #288]
    6640:	b	668c <lzma_index_dup@@XZ_5.0+0x1b4>
    6644:	ldr	x0, [sp, #80]
    6648:	ldr	x1, [x0, #64]
    664c:	ldr	x0, [sp, #72]
    6650:	cmp	x1, x0
    6654:	b.eq	6678 <lzma_index_dup@@XZ_5.0+0x1a0>  // b.none
    6658:	ldr	x0, [sp, #40]
    665c:	mov	x1, #0x1                   	// #1
    6660:	str	x1, [x0, #288]
    6664:	ldr	x0, [sp, #72]
    6668:	ldr	x1, [x0, #16]
    666c:	ldr	x0, [sp, #40]
    6670:	str	x1, [x0, #272]
    6674:	b	668c <lzma_index_dup@@XZ_5.0+0x1b4>
    6678:	ldr	x0, [sp, #40]
    667c:	mov	x1, #0x2                   	// #2
    6680:	str	x1, [x0, #288]
    6684:	ldr	x0, [sp, #40]
    6688:	str	xzr, [x0, #272]
    668c:	ldr	x0, [sp, #80]
    6690:	ldr	w0, [x0, #40]
    6694:	mov	w1, w0
    6698:	ldr	x0, [sp, #40]
    669c:	str	x1, [x0, #32]
    66a0:	ldr	x0, [sp, #80]
    66a4:	ldr	x1, [x0, #88]
    66a8:	ldr	x0, [sp, #40]
    66ac:	str	x1, [x0, #40]
    66b0:	ldr	x0, [sp, #80]
    66b4:	ldr	x1, [x0, #8]
    66b8:	ldr	x0, [sp, #40]
    66bc:	str	x1, [x0, #48]
    66c0:	ldr	x0, [sp, #80]
    66c4:	ldr	x1, [x0]
    66c8:	ldr	x0, [sp, #40]
    66cc:	str	x1, [x0, #56]
    66d0:	ldr	x0, [sp, #80]
    66d4:	ldr	w0, [x0, #104]
    66d8:	cmn	w0, #0x1
    66dc:	b.eq	66ec <lzma_index_dup@@XZ_5.0+0x214>  // b.none
    66e0:	ldr	x0, [sp, #80]
    66e4:	add	x0, x0, #0x68
    66e8:	b	66f0 <lzma_index_dup@@XZ_5.0+0x218>
    66ec:	mov	x0, #0x0                   	// #0
    66f0:	ldr	x1, [sp, #40]
    66f4:	str	x0, [x1]
    66f8:	ldr	x0, [sp, #80]
    66fc:	ldr	x1, [x0, #160]
    6700:	ldr	x0, [sp, #40]
    6704:	str	x1, [x0, #80]
    6708:	ldr	x0, [sp, #80]
    670c:	ldr	x0, [x0, #72]
    6710:	cmp	x0, #0x0
    6714:	b.ne	673c <lzma_index_dup@@XZ_5.0+0x264>  // b.any
    6718:	mov	x1, #0x0                   	// #0
    671c:	mov	x0, #0x0                   	// #0
    6720:	bl	5014 <lzma_physmem@@XZ_5.0+0x9c>
    6724:	add	x1, x0, #0x18
    6728:	ldr	x0, [sp, #40]
    672c:	str	x1, [x0, #64]
    6730:	ldr	x0, [sp, #40]
    6734:	str	xzr, [x0, #72]
    6738:	b	67bc <lzma_index_dup@@XZ_5.0+0x2e4>
    673c:	ldr	x0, [sp, #80]
    6740:	ldr	x0, [x0, #72]
    6744:	str	x0, [sp, #56]
    6748:	ldr	x0, [sp, #80]
    674c:	ldr	x2, [x0, #88]
    6750:	ldr	x0, [sp, #80]
    6754:	ldr	x0, [x0, #96]
    6758:	mov	x1, x0
    675c:	mov	x0, x2
    6760:	bl	5014 <lzma_physmem@@XZ_5.0+0x9c>
    6764:	mov	x19, x0
    6768:	ldr	x0, [sp, #56]
    676c:	ldr	x0, [x0, #56]
    6770:	ldr	x1, [sp, #56]
    6774:	add	x0, x0, #0x4
    6778:	lsl	x0, x0, #4
    677c:	add	x0, x1, x0
    6780:	ldr	x0, [x0, #8]
    6784:	bl	4fc4 <lzma_physmem@@XZ_5.0+0x4c>
    6788:	add	x0, x19, x0
    678c:	add	x1, x0, #0x18
    6790:	ldr	x0, [sp, #40]
    6794:	str	x1, [x0, #64]
    6798:	ldr	x0, [sp, #56]
    679c:	ldr	x0, [x0, #56]
    67a0:	ldr	x1, [sp, #56]
    67a4:	add	x0, x0, #0x4
    67a8:	lsl	x0, x0, #4
    67ac:	add	x0, x1, x0
    67b0:	ldr	x1, [x0]
    67b4:	ldr	x0, [sp, #40]
    67b8:	str	x1, [x0, #72]
    67bc:	ldr	x0, [sp, #72]
    67c0:	cmp	x0, #0x0
    67c4:	b.eq	6938 <lzma_index_dup@@XZ_5.0+0x460>  // b.none
    67c8:	ldr	x0, [sp, #72]
    67cc:	ldr	x1, [x0, #40]
    67d0:	ldr	x0, [sp, #64]
    67d4:	add	x1, x1, x0
    67d8:	ldr	x0, [sp, #40]
    67dc:	str	x1, [x0, #144]
    67e0:	ldr	x0, [sp, #40]
    67e4:	ldr	x1, [x0, #144]
    67e8:	ldr	x0, [sp, #80]
    67ec:	ldr	x0, [x0, #48]
    67f0:	add	x1, x1, x0
    67f4:	ldr	x0, [sp, #40]
    67f8:	str	x1, [x0, #120]
    67fc:	ldr	x0, [sp, #64]
    6800:	cmp	x0, #0x0
    6804:	b.ne	6814 <lzma_index_dup@@XZ_5.0+0x33c>  // b.any
    6808:	ldr	x0, [sp, #72]
    680c:	ldr	x0, [x0, #8]
    6810:	b	6834 <lzma_index_dup@@XZ_5.0+0x35c>
    6814:	ldr	x0, [sp, #64]
    6818:	sub	x0, x0, #0x1
    681c:	ldr	x1, [sp, #72]
    6820:	add	x0, x0, #0x4
    6824:	lsl	x0, x0, #4
    6828:	add	x0, x1, x0
    682c:	ldr	x0, [x0, #8]
    6830:	bl	4fc4 <lzma_physmem@@XZ_5.0+0x4c>
    6834:	ldr	x1, [sp, #40]
    6838:	str	x0, [x1, #152]
    683c:	ldr	x0, [sp, #64]
    6840:	cmp	x0, #0x0
    6844:	b.ne	6854 <lzma_index_dup@@XZ_5.0+0x37c>  // b.any
    6848:	ldr	x0, [sp, #72]
    684c:	ldr	x0, [x0]
    6850:	b	6870 <lzma_index_dup@@XZ_5.0+0x398>
    6854:	ldr	x0, [sp, #64]
    6858:	sub	x0, x0, #0x1
    685c:	ldr	x1, [sp, #72]
    6860:	add	x0, x0, #0x4
    6864:	lsl	x0, x0, #4
    6868:	add	x0, x1, x0
    686c:	ldr	x0, [x0]
    6870:	ldr	x1, [sp, #40]
    6874:	str	x0, [x1, #160]
    6878:	ldr	x1, [sp, #72]
    687c:	ldr	x0, [sp, #64]
    6880:	add	x0, x0, #0x4
    6884:	lsl	x0, x0, #4
    6888:	add	x0, x1, x0
    688c:	ldr	x1, [x0]
    6890:	ldr	x0, [sp, #40]
    6894:	ldr	x0, [x0, #160]
    6898:	sub	x1, x1, x0
    689c:	ldr	x0, [sp, #40]
    68a0:	str	x1, [x0, #168]
    68a4:	ldr	x1, [sp, #72]
    68a8:	ldr	x0, [sp, #64]
    68ac:	add	x0, x0, #0x4
    68b0:	lsl	x0, x0, #4
    68b4:	add	x0, x1, x0
    68b8:	ldr	x1, [x0, #8]
    68bc:	ldr	x0, [sp, #40]
    68c0:	ldr	x0, [x0, #152]
    68c4:	sub	x1, x1, x0
    68c8:	ldr	x0, [sp, #40]
    68cc:	str	x1, [x0, #176]
    68d0:	ldr	x0, [sp, #40]
    68d4:	ldr	x0, [x0, #176]
    68d8:	bl	4fc4 <lzma_physmem@@XZ_5.0+0x4c>
    68dc:	mov	x1, x0
    68e0:	ldr	x0, [sp, #40]
    68e4:	str	x1, [x0, #184]
    68e8:	ldr	x0, [sp, #40]
    68ec:	ldr	x0, [x0, #152]
    68f0:	add	x1, x0, #0xc
    68f4:	ldr	x0, [sp, #40]
    68f8:	str	x1, [x0, #152]
    68fc:	ldr	x0, [sp, #40]
    6900:	ldr	x1, [x0, #152]
    6904:	ldr	x0, [sp, #40]
    6908:	ldr	x0, [x0, #48]
    690c:	add	x1, x1, x0
    6910:	ldr	x0, [sp, #40]
    6914:	str	x1, [x0, #128]
    6918:	ldr	x0, [sp, #40]
    691c:	ldr	x1, [x0, #160]
    6920:	ldr	x0, [sp, #40]
    6924:	ldr	x0, [x0, #56]
    6928:	add	x1, x1, x0
    692c:	ldr	x0, [sp, #40]
    6930:	str	x1, [x0, #136]
    6934:	nop
    6938:	nop
    693c:	ldr	x19, [sp, #16]
    6940:	ldp	x29, x30, [sp], #96
    6944:	ret

0000000000006948 <lzma_index_iter_init@@XZ_5.0>:
    6948:	stp	x29, x30, [sp, #-32]!
    694c:	mov	x29, sp
    6950:	str	x0, [sp, #24]
    6954:	str	x1, [sp, #16]
    6958:	ldr	x0, [sp, #24]
    695c:	ldr	x1, [sp, #16]
    6960:	str	x1, [x0, #256]
    6964:	ldr	x0, [sp, #24]
    6968:	bl	30a0 <lzma_index_iter_rewind@plt>
    696c:	nop
    6970:	ldp	x29, x30, [sp], #32
    6974:	ret

0000000000006978 <lzma_index_iter_rewind@@XZ_5.0>:
    6978:	sub	sp, sp, #0x10
    697c:	str	x0, [sp, #8]
    6980:	ldr	x0, [sp, #8]
    6984:	str	xzr, [x0, #264]
    6988:	ldr	x0, [sp, #8]
    698c:	str	xzr, [x0, #272]
    6990:	ldr	x0, [sp, #8]
    6994:	str	xzr, [x0, #280]
    6998:	ldr	x0, [sp, #8]
    699c:	str	xzr, [x0, #288]
    69a0:	nop
    69a4:	add	sp, sp, #0x10
    69a8:	ret

00000000000069ac <lzma_index_iter_next@@XZ_5.0>:
    69ac:	stp	x29, x30, [sp, #-64]!
    69b0:	mov	x29, sp
    69b4:	str	x0, [sp, #24]
    69b8:	str	w1, [sp, #20]
    69bc:	ldr	w0, [sp, #20]
    69c0:	cmp	w0, #0x3
    69c4:	b.ls	69d0 <lzma_index_iter_next@@XZ_5.0+0x24>  // b.plast
    69c8:	mov	w0, #0x1                   	// #1
    69cc:	b	6c18 <lzma_index_iter_next@@XZ_5.0+0x26c>
    69d0:	ldr	x0, [sp, #24]
    69d4:	ldr	x0, [x0, #256]
    69d8:	str	x0, [sp, #32]
    69dc:	ldr	x0, [sp, #24]
    69e0:	ldr	x0, [x0, #264]
    69e4:	str	x0, [sp, #56]
    69e8:	str	xzr, [sp, #48]
    69ec:	ldr	x0, [sp, #24]
    69f0:	ldr	x0, [x0, #280]
    69f4:	str	x0, [sp, #40]
    69f8:	ldr	w0, [sp, #20]
    69fc:	cmp	w0, #0x1
    6a00:	b.eq	6a64 <lzma_index_iter_next@@XZ_5.0+0xb8>  // b.none
    6a04:	ldr	x0, [sp, #24]
    6a08:	ldr	x0, [x0, #288]
    6a0c:	cmp	x0, #0x2
    6a10:	b.eq	6a54 <lzma_index_iter_next@@XZ_5.0+0xa8>  // b.none
    6a14:	cmp	x0, #0x2
    6a18:	b.hi	6a68 <lzma_index_iter_next@@XZ_5.0+0xbc>  // b.pmore
    6a1c:	cmp	x0, #0x0
    6a20:	b.eq	6a30 <lzma_index_iter_next@@XZ_5.0+0x84>  // b.none
    6a24:	cmp	x0, #0x1
    6a28:	b.eq	6a40 <lzma_index_iter_next@@XZ_5.0+0x94>  // b.none
    6a2c:	b	6a68 <lzma_index_iter_next@@XZ_5.0+0xbc>
    6a30:	ldr	x0, [sp, #24]
    6a34:	ldr	x0, [x0, #272]
    6a38:	str	x0, [sp, #48]
    6a3c:	b	6a68 <lzma_index_iter_next@@XZ_5.0+0xbc>
    6a40:	ldr	x0, [sp, #24]
    6a44:	ldr	x0, [x0, #272]
    6a48:	bl	52dc <lzma_physmem@@XZ_5.0+0x364>
    6a4c:	str	x0, [sp, #48]
    6a50:	b	6a68 <lzma_index_iter_next@@XZ_5.0+0xbc>
    6a54:	ldr	x0, [sp, #56]
    6a58:	ldr	x0, [x0, #64]
    6a5c:	str	x0, [sp, #48]
    6a60:	b	6a68 <lzma_index_iter_next@@XZ_5.0+0xbc>
    6a64:	nop
    6a68:	ldr	x0, [sp, #56]
    6a6c:	cmp	x0, #0x0
    6a70:	b.ne	6ad4 <lzma_index_iter_next@@XZ_5.0+0x128>  // b.any
    6a74:	ldr	x0, [sp, #32]
    6a78:	ldr	x0, [x0, #8]
    6a7c:	str	x0, [sp, #56]
    6a80:	ldr	w0, [sp, #20]
    6a84:	cmp	w0, #0x1
    6a88:	b.ls	6ac0 <lzma_index_iter_next@@XZ_5.0+0x114>  // b.plast
    6a8c:	b	6ab0 <lzma_index_iter_next@@XZ_5.0+0x104>
    6a90:	ldr	x0, [sp, #56]
    6a94:	bl	52dc <lzma_physmem@@XZ_5.0+0x364>
    6a98:	str	x0, [sp, #56]
    6a9c:	ldr	x0, [sp, #56]
    6aa0:	cmp	x0, #0x0
    6aa4:	b.ne	6ab0 <lzma_index_iter_next@@XZ_5.0+0x104>  // b.any
    6aa8:	mov	w0, #0x1                   	// #1
    6aac:	b	6c18 <lzma_index_iter_next@@XZ_5.0+0x26c>
    6ab0:	ldr	x0, [sp, #56]
    6ab4:	ldr	x0, [x0, #64]
    6ab8:	cmp	x0, #0x0
    6abc:	b.eq	6a90 <lzma_index_iter_next@@XZ_5.0+0xe4>  // b.none
    6ac0:	ldr	x0, [sp, #56]
    6ac4:	ldr	x0, [x0, #64]
    6ac8:	str	x0, [sp, #48]
    6acc:	str	xzr, [sp, #40]
    6ad0:	b	6b74 <lzma_index_iter_next@@XZ_5.0+0x1c8>
    6ad4:	ldr	x0, [sp, #48]
    6ad8:	cmp	x0, #0x0
    6adc:	b.eq	6b04 <lzma_index_iter_next@@XZ_5.0+0x158>  // b.none
    6ae0:	ldr	x0, [sp, #48]
    6ae4:	ldr	x0, [x0, #56]
    6ae8:	ldr	x1, [sp, #40]
    6aec:	cmp	x1, x0
    6af0:	b.cs	6b04 <lzma_index_iter_next@@XZ_5.0+0x158>  // b.hs, b.nlast
    6af4:	ldr	x0, [sp, #40]
    6af8:	add	x0, x0, #0x1
    6afc:	str	x0, [sp, #40]
    6b00:	b	6b74 <lzma_index_iter_next@@XZ_5.0+0x1c8>
    6b04:	str	xzr, [sp, #40]
    6b08:	ldr	x0, [sp, #48]
    6b0c:	cmp	x0, #0x0
    6b10:	b.eq	6b20 <lzma_index_iter_next@@XZ_5.0+0x174>  // b.none
    6b14:	ldr	x0, [sp, #48]
    6b18:	bl	52dc <lzma_physmem@@XZ_5.0+0x364>
    6b1c:	str	x0, [sp, #48]
    6b20:	ldr	x0, [sp, #48]
    6b24:	cmp	x0, #0x0
    6b28:	b.ne	6b74 <lzma_index_iter_next@@XZ_5.0+0x1c8>  // b.any
    6b2c:	ldr	x0, [sp, #56]
    6b30:	bl	52dc <lzma_physmem@@XZ_5.0+0x364>
    6b34:	str	x0, [sp, #56]
    6b38:	ldr	x0, [sp, #56]
    6b3c:	cmp	x0, #0x0
    6b40:	b.ne	6b4c <lzma_index_iter_next@@XZ_5.0+0x1a0>  // b.any
    6b44:	mov	w0, #0x1                   	// #1
    6b48:	b	6c18 <lzma_index_iter_next@@XZ_5.0+0x26c>
    6b4c:	ldr	w0, [sp, #20]
    6b50:	cmp	w0, #0x1
    6b54:	b.ls	6b68 <lzma_index_iter_next@@XZ_5.0+0x1bc>  // b.plast
    6b58:	ldr	x0, [sp, #56]
    6b5c:	ldr	x0, [x0, #64]
    6b60:	cmp	x0, #0x0
    6b64:	b.eq	6b2c <lzma_index_iter_next@@XZ_5.0+0x180>  // b.none
    6b68:	ldr	x0, [sp, #56]
    6b6c:	ldr	x0, [x0, #64]
    6b70:	str	x0, [sp, #48]
    6b74:	ldr	w0, [sp, #20]
    6b78:	cmp	w0, #0x3
    6b7c:	b.ne	6be8 <lzma_index_iter_next@@XZ_5.0+0x23c>  // b.any
    6b80:	ldr	x0, [sp, #40]
    6b84:	cmp	x0, #0x0
    6b88:	b.ne	6ba8 <lzma_index_iter_next@@XZ_5.0+0x1fc>  // b.any
    6b8c:	ldr	x0, [sp, #48]
    6b90:	ldr	x1, [x0]
    6b94:	ldr	x0, [sp, #48]
    6b98:	ldr	x0, [x0, #64]
    6b9c:	cmp	x1, x0
    6ba0:	b.ne	6be8 <lzma_index_iter_next@@XZ_5.0+0x23c>  // b.any
    6ba4:	b	6a68 <lzma_index_iter_next@@XZ_5.0+0xbc>
    6ba8:	ldr	x0, [sp, #40]
    6bac:	sub	x0, x0, #0x1
    6bb0:	ldr	x1, [sp, #48]
    6bb4:	add	x0, x0, #0x4
    6bb8:	lsl	x0, x0, #4
    6bbc:	add	x0, x1, x0
    6bc0:	ldr	x1, [x0]
    6bc4:	ldr	x2, [sp, #48]
    6bc8:	ldr	x0, [sp, #40]
    6bcc:	add	x0, x0, #0x4
    6bd0:	lsl	x0, x0, #4
    6bd4:	add	x0, x2, x0
    6bd8:	ldr	x0, [x0]
    6bdc:	cmp	x1, x0
    6be0:	b.ne	6be8 <lzma_index_iter_next@@XZ_5.0+0x23c>  // b.any
    6be4:	b	6a68 <lzma_index_iter_next@@XZ_5.0+0xbc>
    6be8:	ldr	x0, [sp, #24]
    6bec:	ldr	x1, [sp, #56]
    6bf0:	str	x1, [x0, #264]
    6bf4:	ldr	x0, [sp, #24]
    6bf8:	ldr	x1, [sp, #48]
    6bfc:	str	x1, [x0, #272]
    6c00:	ldr	x0, [sp, #24]
    6c04:	ldr	x1, [sp, #40]
    6c08:	str	x1, [x0, #280]
    6c0c:	ldr	x0, [sp, #24]
    6c10:	bl	65b4 <lzma_index_dup@@XZ_5.0+0xdc>
    6c14:	mov	w0, #0x0                   	// #0
    6c18:	ldp	x29, x30, [sp], #64
    6c1c:	ret

0000000000006c20 <lzma_index_iter_locate@@XZ_5.0>:
    6c20:	stp	x29, x30, [sp, #-80]!
    6c24:	mov	x29, sp
    6c28:	str	x0, [sp, #24]
    6c2c:	str	x1, [sp, #16]
    6c30:	ldr	x0, [sp, #24]
    6c34:	ldr	x0, [x0, #256]
    6c38:	str	x0, [sp, #56]
    6c3c:	ldr	x0, [sp, #56]
    6c40:	ldr	x0, [x0, #32]
    6c44:	ldr	x1, [sp, #16]
    6c48:	cmp	x1, x0
    6c4c:	b.cc	6c58 <lzma_index_iter_locate@@XZ_5.0+0x38>  // b.lo, b.ul, b.last
    6c50:	mov	w0, #0x1                   	// #1
    6c54:	b	6d3c <lzma_index_iter_locate@@XZ_5.0+0x11c>
    6c58:	ldr	x0, [sp, #56]
    6c5c:	ldr	x1, [sp, #16]
    6c60:	bl	536c <lzma_physmem@@XZ_5.0+0x3f4>
    6c64:	str	x0, [sp, #48]
    6c68:	ldr	x0, [sp, #48]
    6c6c:	ldr	x0, [x0]
    6c70:	ldr	x1, [sp, #16]
    6c74:	sub	x0, x1, x0
    6c78:	str	x0, [sp, #16]
    6c7c:	ldr	x0, [sp, #48]
    6c80:	add	x0, x0, #0x38
    6c84:	ldr	x1, [sp, #16]
    6c88:	bl	536c <lzma_physmem@@XZ_5.0+0x3f4>
    6c8c:	str	x0, [sp, #40]
    6c90:	str	xzr, [sp, #72]
    6c94:	ldr	x0, [sp, #40]
    6c98:	ldr	x0, [x0, #56]
    6c9c:	str	x0, [sp, #64]
    6ca0:	b	6cfc <lzma_index_iter_locate@@XZ_5.0+0xdc>
    6ca4:	ldr	x1, [sp, #64]
    6ca8:	ldr	x0, [sp, #72]
    6cac:	sub	x0, x1, x0
    6cb0:	lsr	x0, x0, #1
    6cb4:	ldr	x1, [sp, #72]
    6cb8:	add	x0, x1, x0
    6cbc:	str	x0, [sp, #32]
    6cc0:	ldr	x1, [sp, #40]
    6cc4:	ldr	x0, [sp, #32]
    6cc8:	add	x0, x0, #0x4
    6ccc:	lsl	x0, x0, #4
    6cd0:	add	x0, x1, x0
    6cd4:	ldr	x0, [x0]
    6cd8:	ldr	x1, [sp, #16]
    6cdc:	cmp	x1, x0
    6ce0:	b.cc	6cf4 <lzma_index_iter_locate@@XZ_5.0+0xd4>  // b.lo, b.ul, b.last
    6ce4:	ldr	x0, [sp, #32]
    6ce8:	add	x0, x0, #0x1
    6cec:	str	x0, [sp, #72]
    6cf0:	b	6cfc <lzma_index_iter_locate@@XZ_5.0+0xdc>
    6cf4:	ldr	x0, [sp, #32]
    6cf8:	str	x0, [sp, #64]
    6cfc:	ldr	x1, [sp, #72]
    6d00:	ldr	x0, [sp, #64]
    6d04:	cmp	x1, x0
    6d08:	b.cc	6ca4 <lzma_index_iter_locate@@XZ_5.0+0x84>  // b.lo, b.ul, b.last
    6d0c:	ldr	x0, [sp, #24]
    6d10:	ldr	x1, [sp, #48]
    6d14:	str	x1, [x0, #264]
    6d18:	ldr	x0, [sp, #24]
    6d1c:	ldr	x1, [sp, #40]
    6d20:	str	x1, [x0, #272]
    6d24:	ldr	x0, [sp, #24]
    6d28:	ldr	x1, [sp, #72]
    6d2c:	str	x1, [x0, #280]
    6d30:	ldr	x0, [sp, #24]
    6d34:	bl	65b4 <lzma_index_dup@@XZ_5.0+0xdc>
    6d38:	mov	w0, #0x0                   	// #0
    6d3c:	ldp	x29, x30, [sp], #80
    6d40:	ret
    6d44:	sub	sp, sp, #0x10
    6d48:	str	x0, [sp, #8]
    6d4c:	ldr	x0, [sp, #8]
    6d50:	ldr	x0, [x0, #8]
    6d54:	cmp	x0, #0x3
    6d58:	b.ls	6d8c <lzma_index_iter_locate@@XZ_5.0+0x16c>  // b.plast
    6d5c:	ldr	x0, [sp, #8]
    6d60:	ldr	x1, [x0, #8]
    6d64:	mov	x0, #0x400000000           	// #17179869184
    6d68:	cmp	x1, x0
    6d6c:	b.hi	6d8c <lzma_index_iter_locate@@XZ_5.0+0x16c>  // b.pmore
    6d70:	ldr	x0, [sp, #8]
    6d74:	ldr	x0, [x0, #8]
    6d78:	and	x0, x0, #0x3
    6d7c:	cmp	x0, #0x0
    6d80:	b.ne	6d8c <lzma_index_iter_locate@@XZ_5.0+0x16c>  // b.any
    6d84:	mov	w0, #0x1                   	// #1
    6d88:	b	6d90 <lzma_index_iter_locate@@XZ_5.0+0x170>
    6d8c:	mov	w0, #0x0                   	// #0
    6d90:	and	w0, w0, #0x1
    6d94:	and	w0, w0, #0xff
    6d98:	add	sp, sp, #0x10
    6d9c:	ret

0000000000006da0 <lzma_stream_flags_compare@@XZ_5.0>:
    6da0:	stp	x29, x30, [sp, #-32]!
    6da4:	mov	x29, sp
    6da8:	str	x0, [sp, #24]
    6dac:	str	x1, [sp, #16]
    6db0:	ldr	x0, [sp, #24]
    6db4:	ldr	w0, [x0]
    6db8:	cmp	w0, #0x0
    6dbc:	b.ne	6dd0 <lzma_stream_flags_compare@@XZ_5.0+0x30>  // b.any
    6dc0:	ldr	x0, [sp, #16]
    6dc4:	ldr	w0, [x0]
    6dc8:	cmp	w0, #0x0
    6dcc:	b.eq	6dd8 <lzma_stream_flags_compare@@XZ_5.0+0x38>  // b.none
    6dd0:	mov	w0, #0x8                   	// #8
    6dd4:	b	6ea4 <lzma_stream_flags_compare@@XZ_5.0+0x104>
    6dd8:	ldr	x0, [sp, #24]
    6ddc:	ldr	w0, [x0, #16]
    6de0:	cmp	w0, #0xf
    6de4:	b.hi	6df8 <lzma_stream_flags_compare@@XZ_5.0+0x58>  // b.pmore
    6de8:	ldr	x0, [sp, #16]
    6dec:	ldr	w0, [x0, #16]
    6df0:	cmp	w0, #0xf
    6df4:	b.ls	6e00 <lzma_stream_flags_compare@@XZ_5.0+0x60>  // b.plast
    6df8:	mov	w0, #0xb                   	// #11
    6dfc:	b	6ea4 <lzma_stream_flags_compare@@XZ_5.0+0x104>
    6e00:	ldr	x0, [sp, #24]
    6e04:	ldr	w1, [x0, #16]
    6e08:	ldr	x0, [sp, #16]
    6e0c:	ldr	w0, [x0, #16]
    6e10:	cmp	w1, w0
    6e14:	b.eq	6e20 <lzma_stream_flags_compare@@XZ_5.0+0x80>  // b.none
    6e18:	mov	w0, #0x9                   	// #9
    6e1c:	b	6ea4 <lzma_stream_flags_compare@@XZ_5.0+0x104>
    6e20:	ldr	x0, [sp, #24]
    6e24:	ldr	x0, [x0, #8]
    6e28:	cmn	x0, #0x1
    6e2c:	b.eq	6ea0 <lzma_stream_flags_compare@@XZ_5.0+0x100>  // b.none
    6e30:	ldr	x0, [sp, #16]
    6e34:	ldr	x0, [x0, #8]
    6e38:	cmn	x0, #0x1
    6e3c:	b.eq	6ea0 <lzma_stream_flags_compare@@XZ_5.0+0x100>  // b.none
    6e40:	ldr	x0, [sp, #24]
    6e44:	bl	6d44 <lzma_index_iter_locate@@XZ_5.0+0x124>
    6e48:	and	w0, w0, #0xff
    6e4c:	eor	w0, w0, #0x1
    6e50:	and	w0, w0, #0xff
    6e54:	cmp	w0, #0x0
    6e58:	b.ne	6e78 <lzma_stream_flags_compare@@XZ_5.0+0xd8>  // b.any
    6e5c:	ldr	x0, [sp, #16]
    6e60:	bl	6d44 <lzma_index_iter_locate@@XZ_5.0+0x124>
    6e64:	and	w0, w0, #0xff
    6e68:	eor	w0, w0, #0x1
    6e6c:	and	w0, w0, #0xff
    6e70:	cmp	w0, #0x0
    6e74:	b.eq	6e80 <lzma_stream_flags_compare@@XZ_5.0+0xe0>  // b.none
    6e78:	mov	w0, #0xb                   	// #11
    6e7c:	b	6ea4 <lzma_stream_flags_compare@@XZ_5.0+0x104>
    6e80:	ldr	x0, [sp, #24]
    6e84:	ldr	x1, [x0, #8]
    6e88:	ldr	x0, [sp, #16]
    6e8c:	ldr	x0, [x0, #8]
    6e90:	cmp	x1, x0
    6e94:	b.eq	6ea0 <lzma_stream_flags_compare@@XZ_5.0+0x100>  // b.none
    6e98:	mov	w0, #0x9                   	// #9
    6e9c:	b	6ea4 <lzma_stream_flags_compare@@XZ_5.0+0x104>
    6ea0:	mov	w0, #0x0                   	// #0
    6ea4:	ldp	x29, x30, [sp], #32
    6ea8:	ret

0000000000006eac <lzma_vli_size@@XZ_5.0>:
    6eac:	sub	sp, sp, #0x20
    6eb0:	str	x0, [sp, #8]
    6eb4:	ldr	x0, [sp, #8]
    6eb8:	cmp	x0, #0x0
    6ebc:	b.ge	6ec8 <lzma_vli_size@@XZ_5.0+0x1c>  // b.tcont
    6ec0:	mov	w0, #0x0                   	// #0
    6ec4:	b	6ef4 <lzma_vli_size@@XZ_5.0+0x48>
    6ec8:	str	wzr, [sp, #28]
    6ecc:	ldr	x0, [sp, #8]
    6ed0:	lsr	x0, x0, #7
    6ed4:	str	x0, [sp, #8]
    6ed8:	ldr	w0, [sp, #28]
    6edc:	add	w0, w0, #0x1
    6ee0:	str	w0, [sp, #28]
    6ee4:	ldr	x0, [sp, #8]
    6ee8:	cmp	x0, #0x0
    6eec:	b.ne	6ecc <lzma_vli_size@@XZ_5.0+0x20>  // b.any
    6ef0:	ldr	w0, [sp, #28]
    6ef4:	add	sp, sp, #0x20
    6ef8:	ret

0000000000006efc <lzma_cputhreads@@XZ_5.2>:
    6efc:	stp	x29, x30, [sp, #-16]!
    6f00:	mov	x29, sp
    6f04:	bl	369c <pthread_cond_timedwait@plt+0x13c>
    6f08:	ldp	x29, x30, [sp], #16
    6f0c:	ret
    6f10:	sub	sp, sp, #0x10
    6f14:	str	x0, [sp, #8]
    6f18:	str	w1, [sp, #4]
    6f1c:	ldr	w0, [sp, #4]
    6f20:	and	w1, w0, #0xff
    6f24:	ldr	x0, [sp, #8]
    6f28:	strb	w1, [x0]
    6f2c:	ldr	w0, [sp, #4]
    6f30:	lsr	w1, w0, #8
    6f34:	ldr	x0, [sp, #8]
    6f38:	add	x0, x0, #0x1
    6f3c:	and	w1, w1, #0xff
    6f40:	strb	w1, [x0]
    6f44:	ldr	w0, [sp, #4]
    6f48:	lsr	w1, w0, #16
    6f4c:	ldr	x0, [sp, #8]
    6f50:	add	x0, x0, #0x2
    6f54:	and	w1, w1, #0xff
    6f58:	strb	w1, [x0]
    6f5c:	ldr	w0, [sp, #4]
    6f60:	lsr	w1, w0, #24
    6f64:	ldr	x0, [sp, #8]
    6f68:	add	x0, x0, #0x3
    6f6c:	and	w1, w1, #0xff
    6f70:	strb	w1, [x0]
    6f74:	nop
    6f78:	add	sp, sp, #0x10
    6f7c:	ret
    6f80:	sub	sp, sp, #0x70
    6f84:	stp	x29, x30, [sp, #16]
    6f88:	add	x29, sp, #0x10
    6f8c:	str	x0, [sp, #88]
    6f90:	str	x1, [sp, #80]
    6f94:	str	x2, [sp, #72]
    6f98:	str	x3, [sp, #64]
    6f9c:	str	x4, [sp, #56]
    6fa0:	str	x5, [sp, #48]
    6fa4:	str	x6, [sp, #40]
    6fa8:	str	x7, [sp, #32]
    6fac:	ldr	x0, [sp, #88]
    6fb0:	str	x0, [sp, #104]
    6fb4:	b	7070 <lzma_cputhreads@@XZ_5.2+0x174>
    6fb8:	ldr	x0, [sp, #104]
    6fbc:	ldr	w0, [x0, #72]
    6fc0:	cmp	w0, #0x0
    6fc4:	b.eq	6fd4 <lzma_cputhreads@@XZ_5.2+0xd8>  // b.none
    6fc8:	cmp	w0, #0x1
    6fcc:	b.eq	7028 <lzma_cputhreads@@XZ_5.2+0x12c>  // b.none
    6fd0:	b	7068 <lzma_cputhreads@@XZ_5.2+0x16c>
    6fd4:	ldr	x0, [sp, #104]
    6fd8:	add	x6, x0, #0x58
    6fdc:	ldr	x0, [sp, #104]
    6fe0:	add	x0, x0, #0x50
    6fe4:	ldr	x5, [sp, #32]
    6fe8:	ldr	x4, [sp, #40]
    6fec:	ldr	x3, [sp, #48]
    6ff0:	mov	x2, #0xd                   	// #13
    6ff4:	mov	x1, x0
    6ff8:	mov	x0, x6
    6ffc:	bl	3870 <lzma_version_string@@XZ_5.0+0x180>
    7000:	ldr	x0, [sp, #104]
    7004:	ldr	x0, [x0, #80]
    7008:	cmp	x0, #0xc
    700c:	b.hi	7018 <lzma_cputhreads@@XZ_5.2+0x11c>  // b.pmore
    7010:	mov	w0, #0x0                   	// #0
    7014:	b	7088 <lzma_cputhreads@@XZ_5.2+0x18c>
    7018:	ldr	x0, [sp, #104]
    701c:	mov	w1, #0x1                   	// #1
    7020:	str	w1, [x0, #72]
    7024:	b	7070 <lzma_cputhreads@@XZ_5.2+0x174>
    7028:	ldr	x0, [sp, #104]
    702c:	ldr	x8, [x0, #24]
    7030:	ldr	x0, [sp, #104]
    7034:	ldr	x9, [x0]
    7038:	ldr	w0, [sp, #112]
    703c:	str	w0, [sp]
    7040:	ldr	x7, [sp, #32]
    7044:	ldr	x6, [sp, #40]
    7048:	ldr	x5, [sp, #48]
    704c:	ldr	x4, [sp, #56]
    7050:	ldr	x3, [sp, #64]
    7054:	ldr	x2, [sp, #72]
    7058:	ldr	x1, [sp, #80]
    705c:	mov	x0, x9
    7060:	blr	x8
    7064:	b	7088 <lzma_cputhreads@@XZ_5.2+0x18c>
    7068:	mov	w0, #0xb                   	// #11
    706c:	b	7088 <lzma_cputhreads@@XZ_5.2+0x18c>
    7070:	ldr	x0, [sp, #40]
    7074:	ldr	x0, [x0]
    7078:	ldr	x1, [sp, #32]
    707c:	cmp	x1, x0
    7080:	b.hi	6fb8 <lzma_cputhreads@@XZ_5.2+0xbc>  // b.pmore
    7084:	mov	w0, #0x0                   	// #0
    7088:	ldp	x29, x30, [sp, #16]
    708c:	add	sp, sp, #0x70
    7090:	ret
    7094:	stp	x29, x30, [sp, #-48]!
    7098:	mov	x29, sp
    709c:	str	x0, [sp, #24]
    70a0:	str	x1, [sp, #16]
    70a4:	ldr	x0, [sp, #24]
    70a8:	str	x0, [sp, #40]
    70ac:	ldr	x0, [sp, #40]
    70b0:	ldr	x1, [sp, #16]
    70b4:	bl	3a48 <lzma_version_string@@XZ_5.0+0x358>
    70b8:	ldr	x1, [sp, #16]
    70bc:	ldr	x0, [sp, #40]
    70c0:	bl	3814 <lzma_version_string@@XZ_5.0+0x124>
    70c4:	nop
    70c8:	ldp	x29, x30, [sp], #48
    70cc:	ret
    70d0:	stp	x29, x30, [sp, #-192]!
    70d4:	mov	x29, sp
    70d8:	str	x0, [sp, #40]
    70dc:	str	x1, [sp, #32]
    70e0:	str	x2, [sp, #24]
    70e4:	ldr	x0, [sp, #40]
    70e8:	ldr	x1, [x0, #16]
    70ec:	adrp	x0, 7000 <lzma_cputhreads@@XZ_5.2+0x104>
    70f0:	add	x0, x0, #0xd0
    70f4:	cmp	x1, x0
    70f8:	b.eq	7108 <lzma_cputhreads@@XZ_5.2+0x20c>  // b.none
    70fc:	ldr	x1, [sp, #32]
    7100:	ldr	x0, [sp, #40]
    7104:	bl	3a48 <lzma_version_string@@XZ_5.0+0x358>
    7108:	adrp	x0, 7000 <lzma_cputhreads@@XZ_5.2+0x104>
    710c:	add	x1, x0, #0xd0
    7110:	ldr	x0, [sp, #40]
    7114:	str	x1, [x0, #16]
    7118:	ldr	x0, [sp, #40]
    711c:	ldr	x0, [x0]
    7120:	str	x0, [sp, #184]
    7124:	ldr	x0, [sp, #184]
    7128:	cmp	x0, #0x0
    712c:	b.ne	71cc <lzma_cputhreads@@XZ_5.2+0x2d0>  // b.any
    7130:	ldr	x1, [sp, #32]
    7134:	mov	x0, #0x68                  	// #104
    7138:	bl	36fc <lzma_version_string@@XZ_5.0+0xc>
    713c:	str	x0, [sp, #184]
    7140:	ldr	x0, [sp, #184]
    7144:	cmp	x0, #0x0
    7148:	b.ne	7154 <lzma_cputhreads@@XZ_5.2+0x258>  // b.any
    714c:	mov	w0, #0x5                   	// #5
    7150:	b	7308 <lzma_cputhreads@@XZ_5.2+0x40c>
    7154:	ldr	x0, [sp, #40]
    7158:	ldr	x1, [sp, #184]
    715c:	str	x1, [x0]
    7160:	ldr	x0, [sp, #40]
    7164:	adrp	x1, 6000 <lzma_index_cat@@XZ_5.0+0x40>
    7168:	add	x1, x1, #0xf80
    716c:	str	x1, [x0, #24]
    7170:	ldr	x0, [sp, #40]
    7174:	adrp	x1, 7000 <lzma_cputhreads@@XZ_5.2+0x104>
    7178:	add	x1, x1, #0x94
    717c:	str	x1, [x0, #32]
    7180:	ldr	x0, [sp, #184]
    7184:	str	xzr, [x0]
    7188:	ldr	x0, [sp, #184]
    718c:	mov	x1, #0xffffffffffffffff    	// #-1
    7190:	str	x1, [x0, #8]
    7194:	ldr	x0, [sp, #184]
    7198:	str	xzr, [x0, #16]
    719c:	ldr	x0, [sp, #184]
    71a0:	str	xzr, [x0, #24]
    71a4:	ldr	x0, [sp, #184]
    71a8:	str	xzr, [x0, #32]
    71ac:	ldr	x0, [sp, #184]
    71b0:	str	xzr, [x0, #40]
    71b4:	ldr	x0, [sp, #184]
    71b8:	str	xzr, [x0, #48]
    71bc:	ldr	x0, [sp, #184]
    71c0:	str	xzr, [x0, #56]
    71c4:	ldr	x0, [sp, #184]
    71c8:	str	xzr, [x0, #64]
    71cc:	ldr	x0, [sp, #184]
    71d0:	str	wzr, [x0, #72]
    71d4:	ldr	x0, [sp, #184]
    71d8:	str	xzr, [x0, #80]
    71dc:	ldr	x0, [sp, #184]
    71e0:	add	x0, x0, #0x58
    71e4:	mov	x1, x0
    71e8:	ldr	x0, [sp, #24]
    71ec:	bl	1aba4 <lzma_lzma_preset@@XZ_5.0+0x25c0>
    71f0:	and	w0, w0, #0xff
    71f4:	cmp	w0, #0x0
    71f8:	b.eq	7204 <lzma_cputhreads@@XZ_5.2+0x308>  // b.none
    71fc:	mov	w0, #0x8                   	// #8
    7200:	b	7308 <lzma_cputhreads@@XZ_5.2+0x40c>
    7204:	ldr	x0, [sp, #24]
    7208:	ldr	w0, [x0]
    720c:	cmp	w0, #0xfff
    7210:	b.hi	721c <lzma_cputhreads@@XZ_5.2+0x320>  // b.pmore
    7214:	mov	w0, #0x8                   	// #8
    7218:	b	7308 <lzma_cputhreads@@XZ_5.2+0x40c>
    721c:	ldr	x0, [sp, #24]
    7220:	ldr	w0, [x0]
    7224:	sub	w0, w0, #0x1
    7228:	str	w0, [sp, #180]
    722c:	ldr	w0, [sp, #180]
    7230:	lsr	w0, w0, #2
    7234:	ldr	w1, [sp, #180]
    7238:	orr	w0, w1, w0
    723c:	str	w0, [sp, #180]
    7240:	ldr	w0, [sp, #180]
    7244:	lsr	w0, w0, #3
    7248:	ldr	w1, [sp, #180]
    724c:	orr	w0, w1, w0
    7250:	str	w0, [sp, #180]
    7254:	ldr	w0, [sp, #180]
    7258:	lsr	w0, w0, #4
    725c:	ldr	w1, [sp, #180]
    7260:	orr	w0, w1, w0
    7264:	str	w0, [sp, #180]
    7268:	ldr	w0, [sp, #180]
    726c:	lsr	w0, w0, #8
    7270:	ldr	w1, [sp, #180]
    7274:	orr	w0, w1, w0
    7278:	str	w0, [sp, #180]
    727c:	ldr	w0, [sp, #180]
    7280:	lsr	w0, w0, #16
    7284:	ldr	w1, [sp, #180]
    7288:	orr	w0, w1, w0
    728c:	str	w0, [sp, #180]
    7290:	ldr	w0, [sp, #180]
    7294:	cmn	w0, #0x1
    7298:	b.eq	72a8 <lzma_cputhreads@@XZ_5.2+0x3ac>  // b.none
    729c:	ldr	w0, [sp, #180]
    72a0:	add	w0, w0, #0x1
    72a4:	str	w0, [sp, #180]
    72a8:	ldr	x0, [sp, #184]
    72ac:	add	x0, x0, #0x58
    72b0:	add	x0, x0, #0x1
    72b4:	ldr	w1, [sp, #180]
    72b8:	bl	6f10 <lzma_cputhreads@@XZ_5.2+0x14>
    72bc:	ldr	x0, [sp, #184]
    72c0:	add	x0, x0, #0x58
    72c4:	add	x0, x0, #0x5
    72c8:	mov	x2, #0x8                   	// #8
    72cc:	mov	w1, #0xff                  	// #255
    72d0:	bl	3230 <memset@plt>
    72d4:	stp	xzr, xzr, [sp, #128]
    72d8:	stp	xzr, xzr, [sp, #144]
    72dc:	stp	xzr, xzr, [sp, #160]
    72e0:	adrp	x0, 46000 <lzma_mode_is_supported@@XZ_5.0+0x2b368>
    72e4:	ldr	x0, [x0, #4056]
    72e8:	str	x0, [sp, #136]
    72ec:	ldr	x0, [sp, #24]
    72f0:	str	x0, [sp, #144]
    72f4:	ldr	x0, [sp, #184]
    72f8:	add	x1, sp, #0x80
    72fc:	mov	x2, x1
    7300:	ldr	x1, [sp, #32]
    7304:	bl	393c <lzma_version_string@@XZ_5.0+0x24c>
    7308:	ldp	x29, x30, [sp], #192
    730c:	ret

0000000000007310 <lzma_alone_encoder@@XZ_5.0>:
    7310:	stp	x29, x30, [sp, #-48]!
    7314:	mov	x29, sp
    7318:	str	x0, [sp, #24]
    731c:	str	x1, [sp, #16]
    7320:	ldr	x0, [sp, #24]
    7324:	bl	3b00 <lzma_version_string@@XZ_5.0+0x410>
    7328:	str	w0, [sp, #44]
    732c:	ldr	w0, [sp, #44]
    7330:	cmp	w0, #0x0
    7334:	b.eq	7340 <lzma_alone_encoder@@XZ_5.0+0x30>  // b.none
    7338:	ldr	w0, [sp, #44]
    733c:	b	73a8 <lzma_alone_encoder@@XZ_5.0+0x98>
    7340:	ldr	x0, [sp, #24]
    7344:	ldr	x0, [x0, #56]
    7348:	mov	x3, x0
    734c:	ldr	x0, [sp, #24]
    7350:	ldr	x0, [x0, #48]
    7354:	ldr	x2, [sp, #16]
    7358:	mov	x1, x0
    735c:	mov	x0, x3
    7360:	bl	70d0 <lzma_cputhreads@@XZ_5.2+0x1d4>
    7364:	str	w0, [sp, #40]
    7368:	ldr	w0, [sp, #40]
    736c:	cmp	w0, #0x0
    7370:	b.eq	7384 <lzma_alone_encoder@@XZ_5.0+0x74>  // b.none
    7374:	ldr	x0, [sp, #24]
    7378:	bl	3320 <lzma_end@plt>
    737c:	ldr	w0, [sp, #40]
    7380:	b	73a8 <lzma_alone_encoder@@XZ_5.0+0x98>
    7384:	ldr	x0, [sp, #24]
    7388:	ldr	x0, [x0, #56]
    738c:	mov	w1, #0x1                   	// #1
    7390:	strb	w1, [x0, #88]
    7394:	ldr	x0, [sp, #24]
    7398:	ldr	x0, [x0, #56]
    739c:	mov	w1, #0x1                   	// #1
    73a0:	strb	w1, [x0, #91]
    73a4:	mov	w0, #0x0                   	// #0
    73a8:	ldp	x29, x30, [sp], #48
    73ac:	ret
    73b0:	sub	sp, sp, #0x20
    73b4:	str	x0, [sp, #8]
    73b8:	ldr	x1, [sp, #8]
    73bc:	mov	x0, #0xfffffffffffffbbc    	// #-1092
    73c0:	movk	x0, #0x7fff, lsl #48
    73c4:	cmp	x1, x0
    73c8:	b.ls	73d4 <lzma_alone_encoder@@XZ_5.0+0xc4>  // b.plast
    73cc:	mov	x0, #0x0                   	// #0
    73d0:	b	7428 <lzma_alone_encoder@@XZ_5.0+0x118>
    73d4:	ldr	x1, [sp, #8]
    73d8:	mov	x0, #0xffff                	// #65535
    73dc:	add	x0, x1, x0
    73e0:	lsr	x1, x0, #16
    73e4:	mov	x0, x1
    73e8:	lsl	x0, x0, #1
    73ec:	add	x0, x0, x1
    73f0:	add	x0, x0, #0x1
    73f4:	str	x0, [sp, #24]
    73f8:	mov	x1, #0xfffffffffffffbbc    	// #-1092
    73fc:	movk	x1, #0x7fff, lsl #48
    7400:	ldr	x0, [sp, #24]
    7404:	sub	x0, x1, x0
    7408:	ldr	x1, [sp, #8]
    740c:	cmp	x1, x0
    7410:	b.ls	741c <lzma_alone_encoder@@XZ_5.0+0x10c>  // b.plast
    7414:	mov	x0, #0x0                   	// #0
    7418:	b	7428 <lzma_alone_encoder@@XZ_5.0+0x118>
    741c:	ldr	x1, [sp, #8]
    7420:	ldr	x0, [sp, #24]
    7424:	add	x0, x1, x0
    7428:	add	sp, sp, #0x20
    742c:	ret
    7430:	stp	x29, x30, [sp, #-48]!
    7434:	mov	x29, sp
    7438:	str	x0, [sp, #24]
    743c:	ldr	x0, [sp, #24]
    7440:	bl	73b0 <lzma_alone_encoder@@XZ_5.0+0xa0>
    7444:	str	x0, [sp, #40]
    7448:	ldr	x0, [sp, #40]
    744c:	cmp	x0, #0x0
    7450:	b.ne	745c <lzma_alone_encoder@@XZ_5.0+0x14c>  // b.any
    7454:	mov	x0, #0x0                   	// #0
    7458:	b	7474 <lzma_alone_encoder@@XZ_5.0+0x164>
    745c:	ldr	x0, [sp, #40]
    7460:	add	x0, x0, #0x3
    7464:	and	x0, x0, #0xfffffffffffffffc
    7468:	str	x0, [sp, #40]
    746c:	ldr	x0, [sp, #40]
    7470:	add	x0, x0, #0x5c
    7474:	ldp	x29, x30, [sp], #48
    7478:	ret

000000000000747c <lzma_block_buffer_bound@@XZ_5.0>:
    747c:	stp	x29, x30, [sp, #-48]!
    7480:	mov	x29, sp
    7484:	str	x0, [sp, #24]
    7488:	ldr	x0, [sp, #24]
    748c:	bl	7430 <lzma_alone_encoder@@XZ_5.0+0x120>
    7490:	str	x0, [sp, #40]
    7494:	ldr	x0, [sp, #40]
    7498:	ldp	x29, x30, [sp], #48
    749c:	ret
    74a0:	stp	x29, x30, [sp, #-240]!
    74a4:	mov	x29, sp
    74a8:	str	x0, [sp, #56]
    74ac:	str	x1, [sp, #48]
    74b0:	str	x2, [sp, #40]
    74b4:	str	x3, [sp, #32]
    74b8:	str	x4, [sp, #24]
    74bc:	str	x5, [sp, #16]
    74c0:	stp	xzr, xzr, [sp, #96]
    74c4:	stp	xzr, xzr, [sp, #112]
    74c8:	stp	xzr, xzr, [sp, #128]
    74cc:	stp	xzr, xzr, [sp, #144]
    74d0:	stp	xzr, xzr, [sp, #160]
    74d4:	stp	xzr, xzr, [sp, #176]
    74d8:	stp	xzr, xzr, [sp, #192]
    74dc:	mov	w0, #0x1000                	// #4096
    74e0:	str	w0, [sp, #96]
    74e4:	mov	x0, #0x21                  	// #33
    74e8:	str	x0, [sp, #64]
    74ec:	add	x0, sp, #0x60
    74f0:	str	x0, [sp, #72]
    74f4:	mov	x0, #0xffffffffffffffff    	// #-1
    74f8:	str	x0, [sp, #80]
    74fc:	ldr	x0, [sp, #56]
    7500:	ldr	x0, [x0, #32]
    7504:	str	x0, [sp, #216]
    7508:	ldr	x0, [sp, #56]
    750c:	add	x1, sp, #0x40
    7510:	str	x1, [x0, #32]
    7514:	ldr	x0, [sp, #56]
    7518:	bl	3160 <lzma_block_header_size@plt>
    751c:	cmp	w0, #0x0
    7520:	b.eq	7538 <lzma_block_buffer_bound@@XZ_5.0+0xbc>  // b.none
    7524:	ldr	x0, [sp, #56]
    7528:	ldr	x1, [sp, #216]
    752c:	str	x1, [x0, #32]
    7530:	mov	w0, #0xb                   	// #11
    7534:	b	7720 <lzma_block_buffer_bound@@XZ_5.0+0x2a4>
    7538:	ldr	x0, [sp, #24]
    753c:	ldr	x0, [x0]
    7540:	ldr	x1, [sp, #16]
    7544:	sub	x1, x1, x0
    7548:	ldr	x0, [sp, #56]
    754c:	ldr	w0, [x0, #4]
    7550:	mov	w2, w0
    7554:	ldr	x0, [sp, #56]
    7558:	ldr	x0, [x0, #16]
    755c:	add	x0, x2, x0
    7560:	cmp	x1, x0
    7564:	b.cs	757c <lzma_block_buffer_bound@@XZ_5.0+0x100>  // b.hs, b.nlast
    7568:	ldr	x0, [sp, #56]
    756c:	ldr	x1, [sp, #216]
    7570:	str	x1, [x0, #32]
    7574:	mov	w0, #0xa                   	// #10
    7578:	b	7720 <lzma_block_buffer_bound@@XZ_5.0+0x2a4>
    757c:	ldr	x0, [sp, #24]
    7580:	ldr	x0, [x0]
    7584:	ldr	x1, [sp, #32]
    7588:	add	x0, x1, x0
    758c:	mov	x1, x0
    7590:	ldr	x0, [sp, #56]
    7594:	bl	3540 <lzma_block_header_encode@plt>
    7598:	cmp	w0, #0x0
    759c:	b.eq	75b4 <lzma_block_buffer_bound@@XZ_5.0+0x138>  // b.none
    75a0:	ldr	x0, [sp, #56]
    75a4:	ldr	x1, [sp, #216]
    75a8:	str	x1, [x0, #32]
    75ac:	mov	w0, #0xb                   	// #11
    75b0:	b	7720 <lzma_block_buffer_bound@@XZ_5.0+0x2a4>
    75b4:	ldr	x0, [sp, #56]
    75b8:	ldr	x1, [sp, #216]
    75bc:	str	x1, [x0, #32]
    75c0:	ldr	x0, [sp, #24]
    75c4:	ldr	x1, [x0]
    75c8:	ldr	x0, [sp, #56]
    75cc:	ldr	w0, [x0, #4]
    75d0:	mov	w0, w0
    75d4:	add	x1, x1, x0
    75d8:	ldr	x0, [sp, #24]
    75dc:	str	x1, [x0]
    75e0:	str	xzr, [sp, #232]
    75e4:	mov	w0, #0x1                   	// #1
    75e8:	strb	w0, [sp, #231]
    75ec:	b	76ec <lzma_block_buffer_bound@@XZ_5.0+0x270>
    75f0:	ldr	x0, [sp, #24]
    75f4:	ldr	x0, [x0]
    75f8:	add	x2, x0, #0x1
    75fc:	ldr	x1, [sp, #24]
    7600:	str	x2, [x1]
    7604:	ldr	x1, [sp, #32]
    7608:	add	x0, x1, x0
    760c:	ldrb	w1, [sp, #231]
    7610:	strb	w1, [x0]
    7614:	mov	w0, #0x2                   	// #2
    7618:	strb	w0, [sp, #231]
    761c:	ldr	x1, [sp, #40]
    7620:	ldr	x0, [sp, #232]
    7624:	sub	x0, x1, x0
    7628:	mov	x1, #0x10000               	// #65536
    762c:	cmp	x0, #0x10, lsl #12
    7630:	csel	x0, x0, x1, ls  // ls = plast
    7634:	str	x0, [sp, #208]
    7638:	ldr	x0, [sp, #208]
    763c:	sub	x0, x0, #0x1
    7640:	lsr	x3, x0, #8
    7644:	ldr	x0, [sp, #24]
    7648:	ldr	x0, [x0]
    764c:	add	x2, x0, #0x1
    7650:	ldr	x1, [sp, #24]
    7654:	str	x2, [x1]
    7658:	ldr	x1, [sp, #32]
    765c:	add	x0, x1, x0
    7660:	and	w1, w3, #0xff
    7664:	strb	w1, [x0]
    7668:	ldr	x0, [sp, #208]
    766c:	and	w1, w0, #0xff
    7670:	ldr	x0, [sp, #24]
    7674:	ldr	x0, [x0]
    7678:	add	x3, x0, #0x1
    767c:	ldr	x2, [sp, #24]
    7680:	str	x3, [x2]
    7684:	ldr	x2, [sp, #32]
    7688:	add	x0, x2, x0
    768c:	sub	w1, w1, #0x1
    7690:	and	w1, w1, #0xff
    7694:	strb	w1, [x0]
    7698:	ldr	x0, [sp, #24]
    769c:	ldr	x0, [x0]
    76a0:	ldr	x1, [sp, #32]
    76a4:	add	x3, x1, x0
    76a8:	ldr	x1, [sp, #48]
    76ac:	ldr	x0, [sp, #232]
    76b0:	add	x0, x1, x0
    76b4:	ldr	x2, [sp, #208]
    76b8:	mov	x1, x0
    76bc:	mov	x0, x3
    76c0:	bl	3090 <memcpy@plt>
    76c4:	ldr	x1, [sp, #232]
    76c8:	ldr	x0, [sp, #208]
    76cc:	add	x0, x1, x0
    76d0:	str	x0, [sp, #232]
    76d4:	ldr	x0, [sp, #24]
    76d8:	ldr	x1, [x0]
    76dc:	ldr	x0, [sp, #208]
    76e0:	add	x1, x1, x0
    76e4:	ldr	x0, [sp, #24]
    76e8:	str	x1, [x0]
    76ec:	ldr	x1, [sp, #232]
    76f0:	ldr	x0, [sp, #40]
    76f4:	cmp	x1, x0
    76f8:	b.cc	75f0 <lzma_block_buffer_bound@@XZ_5.0+0x174>  // b.lo, b.ul, b.last
    76fc:	ldr	x0, [sp, #24]
    7700:	ldr	x0, [x0]
    7704:	add	x2, x0, #0x1
    7708:	ldr	x1, [sp, #24]
    770c:	str	x2, [x1]
    7710:	ldr	x1, [sp, #32]
    7714:	add	x0, x1, x0
    7718:	strb	wzr, [x0]
    771c:	mov	w0, #0x0                   	// #0
    7720:	ldp	x29, x30, [sp], #240
    7724:	ret
    7728:	sub	sp, sp, #0x110
    772c:	stp	x29, x30, [sp, #16]
    7730:	add	x29, sp, #0x10
    7734:	str	x0, [sp, #88]
    7738:	str	x1, [sp, #80]
    773c:	str	x2, [sp, #72]
    7740:	str	x3, [sp, #64]
    7744:	str	x4, [sp, #56]
    7748:	str	x5, [sp, #48]
    774c:	str	x6, [sp, #40]
    7750:	ldr	x0, [sp, #88]
    7754:	bl	3160 <lzma_block_header_size@plt>
    7758:	str	w0, [sp, #264]
    775c:	ldr	w0, [sp, #264]
    7760:	cmp	w0, #0x0
    7764:	b.eq	7770 <lzma_block_buffer_bound@@XZ_5.0+0x2f4>  // b.none
    7768:	ldr	w0, [sp, #264]
    776c:	b	7934 <lzma_block_buffer_bound@@XZ_5.0+0x4b8>
    7770:	ldr	x0, [sp, #48]
    7774:	ldr	x0, [x0]
    7778:	ldr	x1, [sp, #40]
    777c:	sub	x1, x1, x0
    7780:	ldr	x0, [sp, #88]
    7784:	ldr	w0, [x0, #4]
    7788:	mov	w0, w0
    778c:	cmp	x1, x0
    7790:	b.hi	779c <lzma_block_buffer_bound@@XZ_5.0+0x320>  // b.pmore
    7794:	mov	w0, #0xa                   	// #10
    7798:	b	7934 <lzma_block_buffer_bound@@XZ_5.0+0x4b8>
    779c:	ldr	x0, [sp, #48]
    77a0:	ldr	x0, [x0]
    77a4:	str	x0, [sp, #256]
    77a8:	ldr	x0, [sp, #48]
    77ac:	ldr	x1, [x0]
    77b0:	ldr	x0, [sp, #88]
    77b4:	ldr	w0, [x0, #4]
    77b8:	mov	w0, w0
    77bc:	add	x1, x1, x0
    77c0:	ldr	x0, [sp, #48]
    77c4:	str	x1, [x0]
    77c8:	ldr	x0, [sp, #48]
    77cc:	ldr	x0, [x0]
    77d0:	ldr	x1, [sp, #40]
    77d4:	sub	x1, x1, x0
    77d8:	ldr	x0, [sp, #88]
    77dc:	ldr	x0, [x0, #16]
    77e0:	cmp	x1, x0
    77e4:	b.ls	7800 <lzma_block_buffer_bound@@XZ_5.0+0x384>  // b.plast
    77e8:	ldr	x0, [sp, #48]
    77ec:	ldr	x1, [x0]
    77f0:	ldr	x0, [sp, #88]
    77f4:	ldr	x0, [x0, #16]
    77f8:	add	x0, x1, x0
    77fc:	str	x0, [sp, #40]
    7800:	str	xzr, [sp, #184]
    7804:	mov	x0, #0xffffffffffffffff    	// #-1
    7808:	str	x0, [sp, #192]
    780c:	str	xzr, [sp, #200]
    7810:	str	xzr, [sp, #208]
    7814:	str	xzr, [sp, #216]
    7818:	str	xzr, [sp, #224]
    781c:	str	xzr, [sp, #232]
    7820:	str	xzr, [sp, #240]
    7824:	str	xzr, [sp, #248]
    7828:	ldr	x0, [sp, #88]
    782c:	ldr	x1, [x0, #32]
    7830:	add	x0, sp, #0xb8
    7834:	mov	x2, x1
    7838:	ldr	x1, [sp, #80]
    783c:	bl	8c00 <lzma_filters_update@@XZ_5.0+0x124>
    7840:	str	w0, [sp, #268]
    7844:	ldr	w0, [sp, #268]
    7848:	cmp	w0, #0x0
    784c:	b.ne	7890 <lzma_block_buffer_bound@@XZ_5.0+0x414>  // b.any
    7850:	str	xzr, [sp, #104]
    7854:	ldr	x8, [sp, #208]
    7858:	ldr	x9, [sp, #184]
    785c:	add	x1, sp, #0x68
    7860:	mov	w0, #0x3                   	// #3
    7864:	str	w0, [sp]
    7868:	ldr	x7, [sp, #40]
    786c:	ldr	x6, [sp, #48]
    7870:	ldr	x5, [sp, #56]
    7874:	ldr	x4, [sp, #64]
    7878:	mov	x3, x1
    787c:	ldr	x2, [sp, #72]
    7880:	ldr	x1, [sp, #80]
    7884:	mov	x0, x9
    7888:	blr	x8
    788c:	str	w0, [sp, #268]
    7890:	add	x0, sp, #0xb8
    7894:	ldr	x1, [sp, #80]
    7898:	bl	3a48 <lzma_version_string@@XZ_5.0+0x358>
    789c:	ldr	w0, [sp, #268]
    78a0:	cmp	w0, #0x1
    78a4:	b.ne	7904 <lzma_block_buffer_bound@@XZ_5.0+0x488>  // b.any
    78a8:	ldr	x0, [sp, #48]
    78ac:	ldr	x1, [x0]
    78b0:	ldr	x0, [sp, #88]
    78b4:	ldr	w0, [x0, #4]
    78b8:	mov	w2, w0
    78bc:	ldr	x0, [sp, #256]
    78c0:	add	x0, x2, x0
    78c4:	sub	x1, x1, x0
    78c8:	ldr	x0, [sp, #88]
    78cc:	str	x1, [x0, #16]
    78d0:	ldr	x1, [sp, #56]
    78d4:	ldr	x0, [sp, #256]
    78d8:	add	x0, x1, x0
    78dc:	mov	x1, x0
    78e0:	ldr	x0, [sp, #88]
    78e4:	bl	3540 <lzma_block_header_encode@plt>
    78e8:	str	w0, [sp, #268]
    78ec:	ldr	w0, [sp, #268]
    78f0:	cmp	w0, #0x0
    78f4:	b.eq	7918 <lzma_block_buffer_bound@@XZ_5.0+0x49c>  // b.none
    78f8:	mov	w0, #0xb                   	// #11
    78fc:	str	w0, [sp, #268]
    7900:	b	7918 <lzma_block_buffer_bound@@XZ_5.0+0x49c>
    7904:	ldr	w0, [sp, #268]
    7908:	cmp	w0, #0x0
    790c:	b.ne	7918 <lzma_block_buffer_bound@@XZ_5.0+0x49c>  // b.any
    7910:	mov	w0, #0xa                   	// #10
    7914:	str	w0, [sp, #268]
    7918:	ldr	w0, [sp, #268]
    791c:	cmp	w0, #0x0
    7920:	b.eq	7930 <lzma_block_buffer_bound@@XZ_5.0+0x4b4>  // b.none
    7924:	ldr	x0, [sp, #48]
    7928:	ldr	x1, [sp, #256]
    792c:	str	x1, [x0]
    7930:	ldr	w0, [sp, #268]
    7934:	ldp	x29, x30, [sp, #16]
    7938:	add	sp, sp, #0x110
    793c:	ret
    7940:	stp	x29, x30, [sp, #-224]!
    7944:	mov	x29, sp
    7948:	str	x0, [sp, #72]
    794c:	str	x1, [sp, #64]
    7950:	str	x2, [sp, #56]
    7954:	str	x3, [sp, #48]
    7958:	str	x4, [sp, #40]
    795c:	str	x5, [sp, #32]
    7960:	str	x6, [sp, #24]
    7964:	strb	w7, [sp, #23]
    7968:	ldr	x0, [sp, #72]
    796c:	cmp	x0, #0x0
    7970:	b.eq	79b8 <lzma_block_buffer_bound@@XZ_5.0+0x53c>  // b.none
    7974:	ldr	x0, [sp, #56]
    7978:	cmp	x0, #0x0
    797c:	b.ne	798c <lzma_block_buffer_bound@@XZ_5.0+0x510>  // b.any
    7980:	ldr	x0, [sp, #48]
    7984:	cmp	x0, #0x0
    7988:	b.ne	79b8 <lzma_block_buffer_bound@@XZ_5.0+0x53c>  // b.any
    798c:	ldr	x0, [sp, #40]
    7990:	cmp	x0, #0x0
    7994:	b.eq	79b8 <lzma_block_buffer_bound@@XZ_5.0+0x53c>  // b.none
    7998:	ldr	x0, [sp, #32]
    799c:	cmp	x0, #0x0
    79a0:	b.eq	79b8 <lzma_block_buffer_bound@@XZ_5.0+0x53c>  // b.none
    79a4:	ldr	x0, [sp, #32]
    79a8:	ldr	x0, [x0]
    79ac:	ldr	x1, [sp, #24]
    79b0:	cmp	x1, x0
    79b4:	b.cs	79c0 <lzma_block_buffer_bound@@XZ_5.0+0x544>  // b.hs, b.nlast
    79b8:	mov	w0, #0xb                   	// #11
    79bc:	b	7c34 <lzma_block_buffer_bound@@XZ_5.0+0x7b8>
    79c0:	ldr	x0, [sp, #72]
    79c4:	ldr	w0, [x0]
    79c8:	cmp	w0, #0x1
    79cc:	b.ls	79d8 <lzma_block_buffer_bound@@XZ_5.0+0x55c>  // b.plast
    79d0:	mov	w0, #0x8                   	// #8
    79d4:	b	7c34 <lzma_block_buffer_bound@@XZ_5.0+0x7b8>
    79d8:	ldr	x0, [sp, #72]
    79dc:	ldr	w0, [x0, #8]
    79e0:	cmp	w0, #0xf
    79e4:	b.hi	7a04 <lzma_block_buffer_bound@@XZ_5.0+0x588>  // b.pmore
    79e8:	ldrb	w0, [sp, #23]
    79ec:	cmp	w0, #0x0
    79f0:	b.eq	7a0c <lzma_block_buffer_bound@@XZ_5.0+0x590>  // b.none
    79f4:	ldr	x0, [sp, #72]
    79f8:	ldr	x0, [x0, #32]
    79fc:	cmp	x0, #0x0
    7a00:	b.ne	7a0c <lzma_block_buffer_bound@@XZ_5.0+0x590>  // b.any
    7a04:	mov	w0, #0xb                   	// #11
    7a08:	b	7c34 <lzma_block_buffer_bound@@XZ_5.0+0x7b8>
    7a0c:	ldr	x0, [sp, #72]
    7a10:	ldr	w0, [x0, #8]
    7a14:	bl	30e0 <lzma_check_is_supported@plt>
    7a18:	and	w0, w0, #0xff
    7a1c:	cmp	w0, #0x0
    7a20:	b.ne	7a2c <lzma_block_buffer_bound@@XZ_5.0+0x5b0>  // b.any
    7a24:	mov	w0, #0x3                   	// #3
    7a28:	b	7c34 <lzma_block_buffer_bound@@XZ_5.0+0x7b8>
    7a2c:	ldr	x0, [sp, #32]
    7a30:	ldr	x0, [x0]
    7a34:	ldr	x1, [sp, #24]
    7a38:	sub	x0, x1, x0
    7a3c:	and	x0, x0, #0x3
    7a40:	ldr	x1, [sp, #24]
    7a44:	sub	x0, x1, x0
    7a48:	str	x0, [sp, #24]
    7a4c:	ldr	x0, [sp, #72]
    7a50:	ldr	w0, [x0, #8]
    7a54:	bl	3270 <lzma_check_size@plt>
    7a58:	mov	w0, w0
    7a5c:	str	x0, [sp, #200]
    7a60:	ldr	x0, [sp, #32]
    7a64:	ldr	x0, [x0]
    7a68:	ldr	x1, [sp, #24]
    7a6c:	sub	x0, x1, x0
    7a70:	ldr	x1, [sp, #200]
    7a74:	cmp	x1, x0
    7a78:	b.cc	7a84 <lzma_block_buffer_bound@@XZ_5.0+0x608>  // b.lo, b.ul, b.last
    7a7c:	mov	w0, #0xa                   	// #10
    7a80:	b	7c34 <lzma_block_buffer_bound@@XZ_5.0+0x7b8>
    7a84:	ldr	x1, [sp, #24]
    7a88:	ldr	x0, [sp, #200]
    7a8c:	sub	x0, x1, x0
    7a90:	str	x0, [sp, #24]
    7a94:	ldr	x0, [sp, #72]
    7a98:	ldr	x1, [sp, #48]
    7a9c:	str	x1, [x0, #24]
    7aa0:	ldr	x0, [sp, #48]
    7aa4:	bl	73b0 <lzma_alone_encoder@@XZ_5.0+0xa0>
    7aa8:	mov	x1, x0
    7aac:	ldr	x0, [sp, #72]
    7ab0:	str	x1, [x0, #16]
    7ab4:	ldr	x0, [sp, #72]
    7ab8:	ldr	x0, [x0, #16]
    7abc:	cmp	x0, #0x0
    7ac0:	b.ne	7acc <lzma_block_buffer_bound@@XZ_5.0+0x650>  // b.any
    7ac4:	mov	w0, #0x9                   	// #9
    7ac8:	b	7c34 <lzma_block_buffer_bound@@XZ_5.0+0x7b8>
    7acc:	mov	w0, #0xa                   	// #10
    7ad0:	str	w0, [sp, #220]
    7ad4:	ldrb	w0, [sp, #23]
    7ad8:	cmp	w0, #0x0
    7adc:	b.eq	7b04 <lzma_block_buffer_bound@@XZ_5.0+0x688>  // b.none
    7ae0:	ldr	x6, [sp, #24]
    7ae4:	ldr	x5, [sp, #32]
    7ae8:	ldr	x4, [sp, #40]
    7aec:	ldr	x3, [sp, #48]
    7af0:	ldr	x2, [sp, #56]
    7af4:	ldr	x1, [sp, #64]
    7af8:	ldr	x0, [sp, #72]
    7afc:	bl	7728 <lzma_block_buffer_bound@@XZ_5.0+0x2ac>
    7b00:	str	w0, [sp, #220]
    7b04:	ldr	w0, [sp, #220]
    7b08:	cmp	w0, #0x0
    7b0c:	b.eq	7b58 <lzma_block_buffer_bound@@XZ_5.0+0x6dc>  // b.none
    7b10:	ldr	w0, [sp, #220]
    7b14:	cmp	w0, #0xa
    7b18:	b.eq	7b24 <lzma_block_buffer_bound@@XZ_5.0+0x6a8>  // b.none
    7b1c:	ldr	w0, [sp, #220]
    7b20:	b	7c34 <lzma_block_buffer_bound@@XZ_5.0+0x7b8>
    7b24:	ldr	x5, [sp, #24]
    7b28:	ldr	x4, [sp, #32]
    7b2c:	ldr	x3, [sp, #40]
    7b30:	ldr	x2, [sp, #48]
    7b34:	ldr	x1, [sp, #56]
    7b38:	ldr	x0, [sp, #72]
    7b3c:	bl	74a0 <lzma_block_buffer_bound@@XZ_5.0+0x24>
    7b40:	str	w0, [sp, #196]
    7b44:	ldr	w0, [sp, #196]
    7b48:	cmp	w0, #0x0
    7b4c:	b.eq	7b58 <lzma_block_buffer_bound@@XZ_5.0+0x6dc>  // b.none
    7b50:	ldr	w0, [sp, #196]
    7b54:	b	7c34 <lzma_block_buffer_bound@@XZ_5.0+0x7b8>
    7b58:	ldr	x0, [sp, #72]
    7b5c:	ldr	x0, [x0, #16]
    7b60:	str	x0, [sp, #208]
    7b64:	b	7b94 <lzma_block_buffer_bound@@XZ_5.0+0x718>
    7b68:	ldr	x0, [sp, #32]
    7b6c:	ldr	x0, [x0]
    7b70:	add	x2, x0, #0x1
    7b74:	ldr	x1, [sp, #32]
    7b78:	str	x2, [x1]
    7b7c:	ldr	x1, [sp, #40]
    7b80:	add	x0, x1, x0
    7b84:	strb	wzr, [x0]
    7b88:	ldr	x0, [sp, #208]
    7b8c:	add	x0, x0, #0x1
    7b90:	str	x0, [sp, #208]
    7b94:	ldr	x0, [sp, #208]
    7b98:	and	x0, x0, #0x3
    7b9c:	cmp	x0, #0x0
    7ba0:	b.ne	7b68 <lzma_block_buffer_bound@@XZ_5.0+0x6ec>  // b.any
    7ba4:	ldr	x0, [sp, #200]
    7ba8:	cmp	x0, #0x0
    7bac:	b.eq	7c30 <lzma_block_buffer_bound@@XZ_5.0+0x7b4>  // b.none
    7bb0:	ldr	x0, [sp, #72]
    7bb4:	ldr	w1, [x0, #8]
    7bb8:	add	x0, sp, #0x58
    7bbc:	bl	119e0 <lzma_check_size@@XZ_5.0+0x34>
    7bc0:	ldr	x0, [sp, #72]
    7bc4:	ldr	w1, [x0, #8]
    7bc8:	add	x0, sp, #0x58
    7bcc:	ldr	x3, [sp, #48]
    7bd0:	ldr	x2, [sp, #56]
    7bd4:	bl	11a78 <lzma_check_size@@XZ_5.0+0xcc>
    7bd8:	ldr	x0, [sp, #72]
    7bdc:	ldr	w1, [x0, #8]
    7be0:	add	x0, sp, #0x58
    7be4:	bl	11b38 <lzma_check_size@@XZ_5.0+0x18c>
    7be8:	ldr	x0, [sp, #72]
    7bec:	add	x0, x0, #0x28
    7bf0:	add	x1, sp, #0x58
    7bf4:	ldr	x2, [sp, #200]
    7bf8:	bl	3090 <memcpy@plt>
    7bfc:	ldr	x0, [sp, #32]
    7c00:	ldr	x0, [x0]
    7c04:	ldr	x1, [sp, #40]
    7c08:	add	x0, x1, x0
    7c0c:	add	x1, sp, #0x58
    7c10:	ldr	x2, [sp, #200]
    7c14:	bl	3090 <memcpy@plt>
    7c18:	ldr	x0, [sp, #32]
    7c1c:	ldr	x1, [x0]
    7c20:	ldr	x0, [sp, #200]
    7c24:	add	x1, x1, x0
    7c28:	ldr	x0, [sp, #32]
    7c2c:	str	x1, [x0]
    7c30:	mov	w0, #0x0                   	// #0
    7c34:	ldp	x29, x30, [sp], #224
    7c38:	ret

0000000000007c3c <lzma_block_buffer_encode@@XZ_5.0>:
    7c3c:	stp	x29, x30, [sp, #-80]!
    7c40:	mov	x29, sp
    7c44:	str	x0, [sp, #72]
    7c48:	str	x1, [sp, #64]
    7c4c:	str	x2, [sp, #56]
    7c50:	str	x3, [sp, #48]
    7c54:	str	x4, [sp, #40]
    7c58:	str	x5, [sp, #32]
    7c5c:	str	x6, [sp, #24]
    7c60:	mov	w7, #0x1                   	// #1
    7c64:	ldr	x6, [sp, #24]
    7c68:	ldr	x5, [sp, #32]
    7c6c:	ldr	x4, [sp, #40]
    7c70:	ldr	x3, [sp, #48]
    7c74:	ldr	x2, [sp, #56]
    7c78:	ldr	x1, [sp, #64]
    7c7c:	ldr	x0, [sp, #72]
    7c80:	bl	7940 <lzma_block_buffer_bound@@XZ_5.0+0x4c4>
    7c84:	ldp	x29, x30, [sp], #80
    7c88:	ret

0000000000007c8c <lzma_block_uncomp_encode@@XZ_5.2>:
    7c8c:	stp	x29, x30, [sp, #-64]!
    7c90:	mov	x29, sp
    7c94:	str	x0, [sp, #56]
    7c98:	str	x1, [sp, #48]
    7c9c:	str	x2, [sp, #40]
    7ca0:	str	x3, [sp, #32]
    7ca4:	str	x4, [sp, #24]
    7ca8:	str	x5, [sp, #16]
    7cac:	mov	w7, #0x0                   	// #0
    7cb0:	ldr	x6, [sp, #16]
    7cb4:	ldr	x5, [sp, #24]
    7cb8:	ldr	x4, [sp, #32]
    7cbc:	ldr	x3, [sp, #40]
    7cc0:	ldr	x2, [sp, #48]
    7cc4:	mov	x1, #0x0                   	// #0
    7cc8:	ldr	x0, [sp, #56]
    7ccc:	bl	7940 <lzma_block_buffer_bound@@XZ_5.0+0x4c4>
    7cd0:	ldp	x29, x30, [sp], #64
    7cd4:	ret
    7cd8:	sub	sp, sp, #0xa0
    7cdc:	stp	x29, x30, [sp, #16]
    7ce0:	add	x29, sp, #0x10
    7ce4:	str	x0, [sp, #88]
    7ce8:	str	x1, [sp, #80]
    7cec:	str	x2, [sp, #72]
    7cf0:	str	x3, [sp, #64]
    7cf4:	str	x4, [sp, #56]
    7cf8:	str	x5, [sp, #48]
    7cfc:	str	x6, [sp, #40]
    7d00:	str	x7, [sp, #32]
    7d04:	ldr	x0, [sp, #88]
    7d08:	str	x0, [sp, #152]
    7d0c:	ldr	x0, [sp, #152]
    7d10:	ldr	x0, [x0, #96]
    7d14:	mov	x1, #0x7fffffffffffffff    	// #9223372036854775807
    7d18:	sub	x1, x1, x0
    7d1c:	ldr	x0, [sp, #64]
    7d20:	ldr	x0, [x0]
    7d24:	ldr	x2, [sp, #56]
    7d28:	sub	x0, x2, x0
    7d2c:	cmp	x1, x0
    7d30:	b.cs	7d3c <lzma_block_uncomp_encode@@XZ_5.2+0xb0>  // b.hs, b.nlast
    7d34:	mov	w0, #0x9                   	// #9
    7d38:	b	8010 <lzma_block_uncomp_encode@@XZ_5.2+0x384>
    7d3c:	ldr	x0, [sp, #152]
    7d40:	ldr	w0, [x0, #80]
    7d44:	cmp	w0, #0x2
    7d48:	b.eq	7f80 <lzma_block_uncomp_encode@@XZ_5.2+0x2f4>  // b.none
    7d4c:	cmp	w0, #0x2
    7d50:	b.hi	800c <lzma_block_uncomp_encode@@XZ_5.2+0x380>  // b.pmore
    7d54:	cmp	w0, #0x0
    7d58:	b.eq	7d68 <lzma_block_uncomp_encode@@XZ_5.2+0xdc>  // b.none
    7d5c:	cmp	w0, #0x1
    7d60:	b.eq	7f24 <lzma_block_uncomp_encode@@XZ_5.2+0x298>  // b.none
    7d64:	b	800c <lzma_block_uncomp_encode@@XZ_5.2+0x380>
    7d68:	ldr	x0, [sp, #64]
    7d6c:	ldr	x0, [x0]
    7d70:	str	x0, [sp, #144]
    7d74:	ldr	x0, [sp, #40]
    7d78:	ldr	x0, [x0]
    7d7c:	str	x0, [sp, #136]
    7d80:	ldr	x0, [sp, #152]
    7d84:	ldr	x8, [x0, #24]
    7d88:	ldr	x0, [sp, #152]
    7d8c:	ldr	x9, [x0]
    7d90:	ldr	w0, [sp, #160]
    7d94:	str	w0, [sp]
    7d98:	ldr	x7, [sp, #32]
    7d9c:	ldr	x6, [sp, #40]
    7da0:	ldr	x5, [sp, #48]
    7da4:	ldr	x4, [sp, #56]
    7da8:	ldr	x3, [sp, #64]
    7dac:	ldr	x2, [sp, #72]
    7db0:	ldr	x1, [sp, #80]
    7db4:	mov	x0, x9
    7db8:	blr	x8
    7dbc:	str	w0, [sp, #132]
    7dc0:	ldr	x0, [sp, #64]
    7dc4:	ldr	x1, [x0]
    7dc8:	ldr	x0, [sp, #144]
    7dcc:	sub	x0, x1, x0
    7dd0:	str	x0, [sp, #120]
    7dd4:	ldr	x0, [sp, #40]
    7dd8:	ldr	x1, [x0]
    7ddc:	ldr	x0, [sp, #136]
    7de0:	sub	x0, x1, x0
    7de4:	str	x0, [sp, #112]
    7de8:	ldr	x0, [sp, #152]
    7dec:	ldr	x0, [x0, #88]
    7df0:	mov	x1, #0xfffffffffffffbbc    	// #-1092
    7df4:	movk	x1, #0x7fff, lsl #48
    7df8:	sub	x0, x1, x0
    7dfc:	ldr	x1, [sp, #112]
    7e00:	cmp	x1, x0
    7e04:	b.ls	7e10 <lzma_block_uncomp_encode@@XZ_5.2+0x184>  // b.plast
    7e08:	mov	w0, #0x9                   	// #9
    7e0c:	b	8010 <lzma_block_uncomp_encode@@XZ_5.2+0x384>
    7e10:	ldr	x0, [sp, #152]
    7e14:	ldr	x1, [x0, #88]
    7e18:	ldr	x0, [sp, #112]
    7e1c:	add	x1, x1, x0
    7e20:	ldr	x0, [sp, #152]
    7e24:	str	x1, [x0, #88]
    7e28:	ldr	x0, [sp, #152]
    7e2c:	ldr	x1, [x0, #96]
    7e30:	ldr	x0, [sp, #120]
    7e34:	add	x1, x1, x0
    7e38:	ldr	x0, [sp, #152]
    7e3c:	str	x1, [x0, #96]
    7e40:	ldr	x0, [sp, #152]
    7e44:	add	x4, x0, #0x70
    7e48:	ldr	x0, [sp, #152]
    7e4c:	ldr	x0, [x0, #72]
    7e50:	ldr	w5, [x0, #8]
    7e54:	ldr	x1, [sp, #72]
    7e58:	ldr	x0, [sp, #144]
    7e5c:	add	x0, x1, x0
    7e60:	ldr	x3, [sp, #120]
    7e64:	mov	x2, x0
    7e68:	mov	w1, w5
    7e6c:	mov	x0, x4
    7e70:	bl	11a78 <lzma_check_size@@XZ_5.0+0xcc>
    7e74:	ldr	w0, [sp, #132]
    7e78:	cmp	w0, #0x1
    7e7c:	b.ne	7e8c <lzma_block_uncomp_encode@@XZ_5.2+0x200>  // b.any
    7e80:	ldr	w0, [sp, #160]
    7e84:	cmp	w0, #0x1
    7e88:	b.ne	7e94 <lzma_block_uncomp_encode@@XZ_5.2+0x208>  // b.any
    7e8c:	ldr	w0, [sp, #132]
    7e90:	b	8010 <lzma_block_uncomp_encode@@XZ_5.2+0x384>
    7e94:	ldr	x0, [sp, #152]
    7e98:	ldr	x0, [x0, #72]
    7e9c:	ldr	x1, [sp, #152]
    7ea0:	ldr	x1, [x1, #88]
    7ea4:	str	x1, [x0, #16]
    7ea8:	ldr	x0, [sp, #152]
    7eac:	ldr	x0, [x0, #72]
    7eb0:	ldr	x1, [sp, #152]
    7eb4:	ldr	x1, [x1, #96]
    7eb8:	str	x1, [x0, #24]
    7ebc:	ldr	x0, [sp, #152]
    7ec0:	mov	w1, #0x1                   	// #1
    7ec4:	str	w1, [x0, #80]
    7ec8:	b	7f24 <lzma_block_uncomp_encode@@XZ_5.2+0x298>
    7ecc:	ldr	x0, [sp, #40]
    7ed0:	ldr	x0, [x0]
    7ed4:	ldr	x1, [sp, #32]
    7ed8:	cmp	x1, x0
    7edc:	b.hi	7ee8 <lzma_block_uncomp_encode@@XZ_5.2+0x25c>  // b.pmore
    7ee0:	mov	w0, #0x0                   	// #0
    7ee4:	b	8010 <lzma_block_uncomp_encode@@XZ_5.2+0x384>
    7ee8:	ldr	x0, [sp, #40]
    7eec:	ldr	x0, [x0]
    7ef0:	ldr	x1, [sp, #48]
    7ef4:	add	x0, x1, x0
    7ef8:	strb	wzr, [x0]
    7efc:	ldr	x0, [sp, #40]
    7f00:	ldr	x0, [x0]
    7f04:	add	x1, x0, #0x1
    7f08:	ldr	x0, [sp, #40]
    7f0c:	str	x1, [x0]
    7f10:	ldr	x0, [sp, #152]
    7f14:	ldr	x0, [x0, #88]
    7f18:	add	x1, x0, #0x1
    7f1c:	ldr	x0, [sp, #152]
    7f20:	str	x1, [x0, #88]
    7f24:	ldr	x0, [sp, #152]
    7f28:	ldr	x0, [x0, #88]
    7f2c:	and	x0, x0, #0x3
    7f30:	cmp	x0, #0x0
    7f34:	b.ne	7ecc <lzma_block_uncomp_encode@@XZ_5.2+0x240>  // b.any
    7f38:	ldr	x0, [sp, #152]
    7f3c:	ldr	x0, [x0, #72]
    7f40:	ldr	w0, [x0, #8]
    7f44:	cmp	w0, #0x0
    7f48:	b.ne	7f54 <lzma_block_uncomp_encode@@XZ_5.2+0x2c8>  // b.any
    7f4c:	mov	w0, #0x1                   	// #1
    7f50:	b	8010 <lzma_block_uncomp_encode@@XZ_5.2+0x384>
    7f54:	ldr	x0, [sp, #152]
    7f58:	add	x2, x0, #0x70
    7f5c:	ldr	x0, [sp, #152]
    7f60:	ldr	x0, [x0, #72]
    7f64:	ldr	w0, [x0, #8]
    7f68:	mov	w1, w0
    7f6c:	mov	x0, x2
    7f70:	bl	11b38 <lzma_check_size@@XZ_5.0+0x18c>
    7f74:	ldr	x0, [sp, #152]
    7f78:	mov	w1, #0x2                   	// #2
    7f7c:	str	w1, [x0, #80]
    7f80:	ldr	x0, [sp, #152]
    7f84:	ldr	x0, [x0, #72]
    7f88:	ldr	w0, [x0, #8]
    7f8c:	bl	3270 <lzma_check_size@plt>
    7f90:	mov	w0, w0
    7f94:	str	x0, [sp, #104]
    7f98:	ldr	x0, [sp, #152]
    7f9c:	add	x6, x0, #0x70
    7fa0:	ldr	x0, [sp, #152]
    7fa4:	add	x0, x0, #0x68
    7fa8:	ldr	x5, [sp, #32]
    7fac:	ldr	x4, [sp, #40]
    7fb0:	ldr	x3, [sp, #48]
    7fb4:	ldr	x2, [sp, #104]
    7fb8:	mov	x1, x0
    7fbc:	mov	x0, x6
    7fc0:	bl	3870 <lzma_version_string@@XZ_5.0+0x180>
    7fc4:	ldr	x0, [sp, #152]
    7fc8:	ldr	x0, [x0, #104]
    7fcc:	ldr	x1, [sp, #104]
    7fd0:	cmp	x1, x0
    7fd4:	b.ls	7fe0 <lzma_block_uncomp_encode@@XZ_5.2+0x354>  // b.plast
    7fd8:	mov	w0, #0x0                   	// #0
    7fdc:	b	8010 <lzma_block_uncomp_encode@@XZ_5.2+0x384>
    7fe0:	ldr	x0, [sp, #152]
    7fe4:	ldr	x0, [x0, #72]
    7fe8:	add	x3, x0, #0x28
    7fec:	ldr	x0, [sp, #152]
    7ff0:	add	x0, x0, #0x70
    7ff4:	ldr	x2, [sp, #104]
    7ff8:	mov	x1, x0
    7ffc:	mov	x0, x3
    8000:	bl	3090 <memcpy@plt>
    8004:	mov	w0, #0x1                   	// #1
    8008:	b	8010 <lzma_block_uncomp_encode@@XZ_5.2+0x384>
    800c:	mov	w0, #0xb                   	// #11
    8010:	ldp	x29, x30, [sp, #16]
    8014:	add	sp, sp, #0xa0
    8018:	ret
    801c:	stp	x29, x30, [sp, #-48]!
    8020:	mov	x29, sp
    8024:	str	x0, [sp, #24]
    8028:	str	x1, [sp, #16]
    802c:	ldr	x0, [sp, #24]
    8030:	str	x0, [sp, #40]
    8034:	ldr	x0, [sp, #40]
    8038:	ldr	x1, [sp, #16]
    803c:	bl	3a48 <lzma_version_string@@XZ_5.0+0x358>
    8040:	ldr	x1, [sp, #16]
    8044:	ldr	x0, [sp, #40]
    8048:	bl	3814 <lzma_version_string@@XZ_5.0+0x124>
    804c:	nop
    8050:	ldp	x29, x30, [sp], #48
    8054:	ret
    8058:	stp	x29, x30, [sp, #-64]!
    805c:	mov	x29, sp
    8060:	str	x0, [sp, #40]
    8064:	str	x1, [sp, #32]
    8068:	str	x2, [sp, #24]
    806c:	str	x3, [sp, #16]
    8070:	ldr	x0, [sp, #40]
    8074:	str	x0, [sp, #56]
    8078:	ldr	x0, [sp, #56]
    807c:	ldr	w0, [x0, #80]
    8080:	cmp	w0, #0x0
    8084:	b.eq	8090 <lzma_block_uncomp_encode@@XZ_5.2+0x404>  // b.none
    8088:	mov	w0, #0xb                   	// #11
    808c:	b	80a0 <lzma_block_uncomp_encode@@XZ_5.2+0x414>
    8090:	ldr	x0, [sp, #56]
    8094:	ldr	x2, [sp, #16]
    8098:	ldr	x1, [sp, #32]
    809c:	bl	39d4 <lzma_version_string@@XZ_5.0+0x2e4>
    80a0:	ldp	x29, x30, [sp], #64
    80a4:	ret
    80a8:	stp	x29, x30, [sp, #-128]!
    80ac:	mov	x29, sp
    80b0:	str	x0, [sp, #40]
    80b4:	str	x1, [sp, #32]
    80b8:	str	x2, [sp, #24]
    80bc:	ldr	x0, [sp, #40]
    80c0:	ldr	x1, [x0, #16]
    80c4:	adrp	x0, 8000 <lzma_block_uncomp_encode@@XZ_5.2+0x374>
    80c8:	add	x0, x0, #0xa8
    80cc:	cmp	x1, x0
    80d0:	b.eq	80e0 <lzma_block_uncomp_encode@@XZ_5.2+0x454>  // b.none
    80d4:	ldr	x1, [sp, #32]
    80d8:	ldr	x0, [sp, #40]
    80dc:	bl	3a48 <lzma_version_string@@XZ_5.0+0x358>
    80e0:	adrp	x0, 8000 <lzma_block_uncomp_encode@@XZ_5.2+0x374>
    80e4:	add	x1, x0, #0xa8
    80e8:	ldr	x0, [sp, #40]
    80ec:	str	x1, [x0, #16]
    80f0:	ldr	x0, [sp, #24]
    80f4:	cmp	x0, #0x0
    80f8:	b.ne	8104 <lzma_block_uncomp_encode@@XZ_5.2+0x478>  // b.any
    80fc:	mov	w0, #0xb                   	// #11
    8100:	b	827c <lzma_block_uncomp_encode@@XZ_5.2+0x5f0>
    8104:	ldr	x0, [sp, #24]
    8108:	ldr	w0, [x0]
    810c:	cmp	w0, #0x1
    8110:	b.ls	811c <lzma_block_uncomp_encode@@XZ_5.2+0x490>  // b.plast
    8114:	mov	w0, #0x8                   	// #8
    8118:	b	827c <lzma_block_uncomp_encode@@XZ_5.2+0x5f0>
    811c:	ldr	x0, [sp, #24]
    8120:	ldr	w0, [x0, #8]
    8124:	cmp	w0, #0xf
    8128:	b.ls	8134 <lzma_block_uncomp_encode@@XZ_5.2+0x4a8>  // b.plast
    812c:	mov	w0, #0xb                   	// #11
    8130:	b	827c <lzma_block_uncomp_encode@@XZ_5.2+0x5f0>
    8134:	ldr	x0, [sp, #24]
    8138:	ldr	w0, [x0, #8]
    813c:	bl	30e0 <lzma_check_is_supported@plt>
    8140:	and	w0, w0, #0xff
    8144:	cmp	w0, #0x0
    8148:	b.ne	8154 <lzma_block_uncomp_encode@@XZ_5.2+0x4c8>  // b.any
    814c:	mov	w0, #0x3                   	// #3
    8150:	b	827c <lzma_block_uncomp_encode@@XZ_5.2+0x5f0>
    8154:	ldr	x0, [sp, #40]
    8158:	ldr	x0, [x0]
    815c:	str	x0, [sp, #120]
    8160:	ldr	x0, [sp, #120]
    8164:	cmp	x0, #0x0
    8168:	b.ne	8218 <lzma_block_uncomp_encode@@XZ_5.2+0x58c>  // b.any
    816c:	ldr	x1, [sp, #32]
    8170:	mov	x0, #0xd8                  	// #216
    8174:	bl	36fc <lzma_version_string@@XZ_5.0+0xc>
    8178:	str	x0, [sp, #120]
    817c:	ldr	x0, [sp, #120]
    8180:	cmp	x0, #0x0
    8184:	b.ne	8190 <lzma_block_uncomp_encode@@XZ_5.2+0x504>  // b.any
    8188:	mov	w0, #0x5                   	// #5
    818c:	b	827c <lzma_block_uncomp_encode@@XZ_5.2+0x5f0>
    8190:	ldr	x0, [sp, #40]
    8194:	ldr	x1, [sp, #120]
    8198:	str	x1, [x0]
    819c:	ldr	x0, [sp, #40]
    81a0:	adrp	x1, 7000 <lzma_cputhreads@@XZ_5.2+0x104>
    81a4:	add	x1, x1, #0xcd8
    81a8:	str	x1, [x0, #24]
    81ac:	ldr	x0, [sp, #40]
    81b0:	adrp	x1, 8000 <lzma_block_uncomp_encode@@XZ_5.2+0x374>
    81b4:	add	x1, x1, #0x1c
    81b8:	str	x1, [x0, #32]
    81bc:	ldr	x0, [sp, #40]
    81c0:	adrp	x1, 8000 <lzma_block_uncomp_encode@@XZ_5.2+0x374>
    81c4:	add	x1, x1, #0x58
    81c8:	str	x1, [x0, #64]
    81cc:	ldr	x0, [sp, #120]
    81d0:	str	xzr, [x0]
    81d4:	ldr	x0, [sp, #120]
    81d8:	mov	x1, #0xffffffffffffffff    	// #-1
    81dc:	str	x1, [x0, #8]
    81e0:	ldr	x0, [sp, #120]
    81e4:	str	xzr, [x0, #16]
    81e8:	ldr	x0, [sp, #120]
    81ec:	str	xzr, [x0, #24]
    81f0:	ldr	x0, [sp, #120]
    81f4:	str	xzr, [x0, #32]
    81f8:	ldr	x0, [sp, #120]
    81fc:	str	xzr, [x0, #40]
    8200:	ldr	x0, [sp, #120]
    8204:	str	xzr, [x0, #48]
    8208:	ldr	x0, [sp, #120]
    820c:	str	xzr, [x0, #56]
    8210:	ldr	x0, [sp, #120]
    8214:	str	xzr, [x0, #64]
    8218:	ldr	x0, [sp, #120]
    821c:	str	wzr, [x0, #80]
    8220:	ldr	x0, [sp, #120]
    8224:	ldr	x1, [sp, #24]
    8228:	str	x1, [x0, #72]
    822c:	ldr	x0, [sp, #120]
    8230:	str	xzr, [x0, #88]
    8234:	ldr	x0, [sp, #120]
    8238:	str	xzr, [x0, #96]
    823c:	ldr	x0, [sp, #120]
    8240:	str	xzr, [x0, #104]
    8244:	ldr	x0, [sp, #120]
    8248:	add	x2, x0, #0x70
    824c:	ldr	x0, [sp, #24]
    8250:	ldr	w0, [x0, #8]
    8254:	mov	w1, w0
    8258:	mov	x0, x2
    825c:	bl	119e0 <lzma_check_size@@XZ_5.0+0x34>
    8260:	ldr	x3, [sp, #120]
    8264:	ldr	x0, [sp, #24]
    8268:	ldr	x0, [x0, #32]
    826c:	mov	x2, x0
    8270:	ldr	x1, [sp, #32]
    8274:	mov	x0, x3
    8278:	bl	8c00 <lzma_filters_update@@XZ_5.0+0x124>
    827c:	ldp	x29, x30, [sp], #128
    8280:	ret

0000000000008284 <lzma_block_encoder@@XZ_5.0>:
    8284:	stp	x29, x30, [sp, #-48]!
    8288:	mov	x29, sp
    828c:	str	x0, [sp, #24]
    8290:	str	x1, [sp, #16]
    8294:	ldr	x0, [sp, #24]
    8298:	bl	3b00 <lzma_version_string@@XZ_5.0+0x410>
    829c:	str	w0, [sp, #44]
    82a0:	ldr	w0, [sp, #44]
    82a4:	cmp	w0, #0x0
    82a8:	b.eq	82b4 <lzma_block_encoder@@XZ_5.0+0x30>  // b.none
    82ac:	ldr	w0, [sp, #44]
    82b0:	b	831c <lzma_block_encoder@@XZ_5.0+0x98>
    82b4:	ldr	x0, [sp, #24]
    82b8:	ldr	x0, [x0, #56]
    82bc:	mov	x3, x0
    82c0:	ldr	x0, [sp, #24]
    82c4:	ldr	x0, [x0, #48]
    82c8:	ldr	x2, [sp, #16]
    82cc:	mov	x1, x0
    82d0:	mov	x0, x3
    82d4:	bl	80a8 <lzma_block_uncomp_encode@@XZ_5.2+0x41c>
    82d8:	str	w0, [sp, #40]
    82dc:	ldr	w0, [sp, #40]
    82e0:	cmp	w0, #0x0
    82e4:	b.eq	82f8 <lzma_block_encoder@@XZ_5.0+0x74>  // b.none
    82e8:	ldr	x0, [sp, #24]
    82ec:	bl	3320 <lzma_end@plt>
    82f0:	ldr	w0, [sp, #40]
    82f4:	b	831c <lzma_block_encoder@@XZ_5.0+0x98>
    82f8:	ldr	x0, [sp, #24]
    82fc:	ldr	x0, [x0, #56]
    8300:	mov	w1, #0x1                   	// #1
    8304:	strb	w1, [x0, #88]
    8308:	ldr	x0, [sp, #24]
    830c:	ldr	x0, [x0, #56]
    8310:	mov	w1, #0x1                   	// #1
    8314:	strb	w1, [x0, #91]
    8318:	mov	w0, #0x0                   	// #0
    831c:	ldp	x29, x30, [sp], #48
    8320:	ret
    8324:	sub	sp, sp, #0x10
    8328:	str	x0, [sp, #8]
    832c:	str	w1, [sp, #4]
    8330:	ldr	w0, [sp, #4]
    8334:	and	w1, w0, #0xff
    8338:	ldr	x0, [sp, #8]
    833c:	strb	w1, [x0]
    8340:	ldr	w0, [sp, #4]
    8344:	lsr	w1, w0, #8
    8348:	ldr	x0, [sp, #8]
    834c:	add	x0, x0, #0x1
    8350:	and	w1, w1, #0xff
    8354:	strb	w1, [x0]
    8358:	ldr	w0, [sp, #4]
    835c:	lsr	w1, w0, #16
    8360:	ldr	x0, [sp, #8]
    8364:	add	x0, x0, #0x2
    8368:	and	w1, w1, #0xff
    836c:	strb	w1, [x0]
    8370:	ldr	w0, [sp, #4]
    8374:	lsr	w1, w0, #24
    8378:	ldr	x0, [sp, #8]
    837c:	add	x0, x0, #0x3
    8380:	and	w1, w1, #0xff
    8384:	strb	w1, [x0]
    8388:	nop
    838c:	add	sp, sp, #0x10
    8390:	ret

0000000000008394 <lzma_block_header_size@@XZ_5.0>:
    8394:	stp	x29, x30, [sp, #-64]!
    8398:	mov	x29, sp
    839c:	str	x0, [sp, #24]
    83a0:	ldr	x0, [sp, #24]
    83a4:	ldr	w0, [x0]
    83a8:	cmp	w0, #0x1
    83ac:	b.ls	83b8 <lzma_block_header_size@@XZ_5.0+0x24>  // b.plast
    83b0:	mov	w0, #0x8                   	// #8
    83b4:	b	8528 <lzma_block_header_size@@XZ_5.0+0x194>
    83b8:	mov	w0, #0x6                   	// #6
    83bc:	str	w0, [sp, #60]
    83c0:	ldr	x0, [sp, #24]
    83c4:	ldr	x0, [x0, #16]
    83c8:	cmn	x0, #0x1
    83cc:	b.eq	8414 <lzma_block_header_size@@XZ_5.0+0x80>  // b.none
    83d0:	ldr	x0, [sp, #24]
    83d4:	ldr	x0, [x0, #16]
    83d8:	bl	3480 <lzma_vli_size@plt>
    83dc:	str	w0, [sp, #44]
    83e0:	ldr	w0, [sp, #44]
    83e4:	cmp	w0, #0x0
    83e8:	b.eq	83fc <lzma_block_header_size@@XZ_5.0+0x68>  // b.none
    83ec:	ldr	x0, [sp, #24]
    83f0:	ldr	x0, [x0, #16]
    83f4:	cmp	x0, #0x0
    83f8:	b.ne	8404 <lzma_block_header_size@@XZ_5.0+0x70>  // b.any
    83fc:	mov	w0, #0xb                   	// #11
    8400:	b	8528 <lzma_block_header_size@@XZ_5.0+0x194>
    8404:	ldr	w1, [sp, #60]
    8408:	ldr	w0, [sp, #44]
    840c:	add	w0, w1, w0
    8410:	str	w0, [sp, #60]
    8414:	ldr	x0, [sp, #24]
    8418:	ldr	x0, [x0, #24]
    841c:	cmn	x0, #0x1
    8420:	b.eq	8458 <lzma_block_header_size@@XZ_5.0+0xc4>  // b.none
    8424:	ldr	x0, [sp, #24]
    8428:	ldr	x0, [x0, #24]
    842c:	bl	3480 <lzma_vli_size@plt>
    8430:	str	w0, [sp, #40]
    8434:	ldr	w0, [sp, #40]
    8438:	cmp	w0, #0x0
    843c:	b.ne	8448 <lzma_block_header_size@@XZ_5.0+0xb4>  // b.any
    8440:	mov	w0, #0xb                   	// #11
    8444:	b	8528 <lzma_block_header_size@@XZ_5.0+0x194>
    8448:	ldr	w1, [sp, #60]
    844c:	ldr	w0, [sp, #40]
    8450:	add	w0, w1, w0
    8454:	str	w0, [sp, #60]
    8458:	ldr	x0, [sp, #24]
    845c:	ldr	x0, [x0, #32]
    8460:	cmp	x0, #0x0
    8464:	b.eq	847c <lzma_block_header_size@@XZ_5.0+0xe8>  // b.none
    8468:	ldr	x0, [sp, #24]
    846c:	ldr	x0, [x0, #32]
    8470:	ldr	x0, [x0]
    8474:	cmn	x0, #0x1
    8478:	b.ne	8484 <lzma_block_header_size@@XZ_5.0+0xf0>  // b.any
    847c:	mov	w0, #0xb                   	// #11
    8480:	b	8528 <lzma_block_header_size@@XZ_5.0+0x194>
    8484:	str	xzr, [sp, #48]
    8488:	b	84f0 <lzma_block_header_size@@XZ_5.0+0x15c>
    848c:	ldr	x0, [sp, #48]
    8490:	cmp	x0, #0x4
    8494:	b.ne	84a0 <lzma_block_header_size@@XZ_5.0+0x10c>  // b.any
    8498:	mov	w0, #0xb                   	// #11
    849c:	b	8528 <lzma_block_header_size@@XZ_5.0+0x194>
    84a0:	ldr	x0, [sp, #24]
    84a4:	ldr	x1, [x0, #32]
    84a8:	ldr	x0, [sp, #48]
    84ac:	lsl	x0, x0, #4
    84b0:	add	x1, x1, x0
    84b4:	add	x0, sp, #0x20
    84b8:	bl	30f0 <lzma_filter_flags_size@plt>
    84bc:	str	w0, [sp, #36]
    84c0:	ldr	w0, [sp, #36]
    84c4:	cmp	w0, #0x0
    84c8:	b.eq	84d4 <lzma_block_header_size@@XZ_5.0+0x140>  // b.none
    84cc:	ldr	w0, [sp, #36]
    84d0:	b	8528 <lzma_block_header_size@@XZ_5.0+0x194>
    84d4:	ldr	w0, [sp, #32]
    84d8:	ldr	w1, [sp, #60]
    84dc:	add	w0, w1, w0
    84e0:	str	w0, [sp, #60]
    84e4:	ldr	x0, [sp, #48]
    84e8:	add	x0, x0, #0x1
    84ec:	str	x0, [sp, #48]
    84f0:	ldr	x0, [sp, #24]
    84f4:	ldr	x1, [x0, #32]
    84f8:	ldr	x0, [sp, #48]
    84fc:	lsl	x0, x0, #4
    8500:	add	x0, x1, x0
    8504:	ldr	x0, [x0]
    8508:	cmn	x0, #0x1
    850c:	b.ne	848c <lzma_block_header_size@@XZ_5.0+0xf8>  // b.any
    8510:	ldr	w0, [sp, #60]
    8514:	add	w0, w0, #0x3
    8518:	and	w1, w0, #0xfffffffc
    851c:	ldr	x0, [sp, #24]
    8520:	str	w1, [x0, #4]
    8524:	mov	w0, #0x0                   	// #0
    8528:	ldp	x29, x30, [sp], #64
    852c:	ret

0000000000008530 <lzma_block_header_encode@@XZ_5.0>:
    8530:	stp	x29, x30, [sp, #-96]!
    8534:	mov	x29, sp
    8538:	str	x19, [sp, #16]
    853c:	str	x0, [sp, #40]
    8540:	str	x1, [sp, #32]
    8544:	ldr	x0, [sp, #40]
    8548:	bl	3190 <lzma_block_unpadded_size@plt>
    854c:	cmp	x0, #0x0
    8550:	b.eq	8574 <lzma_block_header_encode@@XZ_5.0+0x44>  // b.none
    8554:	ldr	x0, [sp, #40]
    8558:	ldr	x0, [x0, #24]
    855c:	cmp	x0, #0x0
    8560:	b.ge	857c <lzma_block_header_encode@@XZ_5.0+0x4c>  // b.tcont
    8564:	ldr	x0, [sp, #40]
    8568:	ldr	x0, [x0, #24]
    856c:	cmn	x0, #0x1
    8570:	b.eq	857c <lzma_block_header_encode@@XZ_5.0+0x4c>  // b.none
    8574:	mov	w0, #0xb                   	// #11
    8578:	b	87bc <lzma_block_header_encode@@XZ_5.0+0x28c>
    857c:	ldr	x0, [sp, #40]
    8580:	ldr	w0, [x0, #4]
    8584:	sub	w0, w0, #0x4
    8588:	mov	w0, w0
    858c:	str	x0, [sp, #80]
    8590:	ldr	x0, [sp, #80]
    8594:	lsr	x0, x0, #2
    8598:	and	w1, w0, #0xff
    859c:	ldr	x0, [sp, #32]
    85a0:	strb	w1, [x0]
    85a4:	ldr	x0, [sp, #32]
    85a8:	add	x0, x0, #0x1
    85ac:	strb	wzr, [x0]
    85b0:	mov	x0, #0x2                   	// #2
    85b4:	str	x0, [sp, #56]
    85b8:	ldr	x0, [sp, #40]
    85bc:	ldr	x0, [x0, #16]
    85c0:	cmn	x0, #0x1
    85c4:	b.eq	8620 <lzma_block_header_encode@@XZ_5.0+0xf0>  // b.none
    85c8:	ldr	x0, [sp, #40]
    85cc:	ldr	x0, [x0, #16]
    85d0:	add	x1, sp, #0x38
    85d4:	ldr	x4, [sp, #80]
    85d8:	mov	x3, x1
    85dc:	ldr	x2, [sp, #32]
    85e0:	mov	x1, #0x0                   	// #0
    85e4:	bl	3450 <lzma_vli_encode@plt>
    85e8:	str	w0, [sp, #76]
    85ec:	ldr	w0, [sp, #76]
    85f0:	cmp	w0, #0x0
    85f4:	b.eq	8600 <lzma_block_header_encode@@XZ_5.0+0xd0>  // b.none
    85f8:	ldr	w0, [sp, #76]
    85fc:	b	87bc <lzma_block_header_encode@@XZ_5.0+0x28c>
    8600:	ldr	x0, [sp, #32]
    8604:	add	x0, x0, #0x1
    8608:	ldrb	w1, [x0]
    860c:	ldr	x0, [sp, #32]
    8610:	add	x0, x0, #0x1
    8614:	orr	w1, w1, #0x40
    8618:	and	w1, w1, #0xff
    861c:	strb	w1, [x0]
    8620:	ldr	x0, [sp, #40]
    8624:	ldr	x0, [x0, #24]
    8628:	cmn	x0, #0x1
    862c:	b.eq	8688 <lzma_block_header_encode@@XZ_5.0+0x158>  // b.none
    8630:	ldr	x0, [sp, #40]
    8634:	ldr	x0, [x0, #24]
    8638:	add	x1, sp, #0x38
    863c:	ldr	x4, [sp, #80]
    8640:	mov	x3, x1
    8644:	ldr	x2, [sp, #32]
    8648:	mov	x1, #0x0                   	// #0
    864c:	bl	3450 <lzma_vli_encode@plt>
    8650:	str	w0, [sp, #72]
    8654:	ldr	w0, [sp, #72]
    8658:	cmp	w0, #0x0
    865c:	b.eq	8668 <lzma_block_header_encode@@XZ_5.0+0x138>  // b.none
    8660:	ldr	w0, [sp, #72]
    8664:	b	87bc <lzma_block_header_encode@@XZ_5.0+0x28c>
    8668:	ldr	x0, [sp, #32]
    866c:	add	x0, x0, #0x1
    8670:	ldrb	w1, [x0]
    8674:	ldr	x0, [sp, #32]
    8678:	add	x0, x0, #0x1
    867c:	orr	w1, w1, #0xffffff80
    8680:	and	w1, w1, #0xff
    8684:	strb	w1, [x0]
    8688:	ldr	x0, [sp, #40]
    868c:	ldr	x0, [x0, #32]
    8690:	cmp	x0, #0x0
    8694:	b.eq	86ac <lzma_block_header_encode@@XZ_5.0+0x17c>  // b.none
    8698:	ldr	x0, [sp, #40]
    869c:	ldr	x0, [x0, #32]
    86a0:	ldr	x0, [x0]
    86a4:	cmn	x0, #0x1
    86a8:	b.ne	86b4 <lzma_block_header_encode@@XZ_5.0+0x184>  // b.any
    86ac:	mov	w0, #0xb                   	// #11
    86b0:	b	87bc <lzma_block_header_encode@@XZ_5.0+0x28c>
    86b4:	str	xzr, [sp, #88]
    86b8:	ldr	x0, [sp, #88]
    86bc:	cmp	x0, #0x4
    86c0:	b.ne	86cc <lzma_block_header_encode@@XZ_5.0+0x19c>  // b.any
    86c4:	mov	w0, #0xb                   	// #11
    86c8:	b	87bc <lzma_block_header_encode@@XZ_5.0+0x28c>
    86cc:	ldr	x0, [sp, #40]
    86d0:	ldr	x1, [x0, #32]
    86d4:	ldr	x0, [sp, #88]
    86d8:	lsl	x0, x0, #4
    86dc:	add	x0, x1, x0
    86e0:	add	x1, sp, #0x38
    86e4:	ldr	x3, [sp, #80]
    86e8:	mov	x2, x1
    86ec:	ldr	x1, [sp, #32]
    86f0:	bl	3350 <lzma_filter_flags_encode@plt>
    86f4:	str	w0, [sp, #68]
    86f8:	ldr	w0, [sp, #68]
    86fc:	cmp	w0, #0x0
    8700:	b.eq	870c <lzma_block_header_encode@@XZ_5.0+0x1dc>  // b.none
    8704:	ldr	w0, [sp, #68]
    8708:	b	87bc <lzma_block_header_encode@@XZ_5.0+0x28c>
    870c:	ldr	x0, [sp, #40]
    8710:	ldr	x1, [x0, #32]
    8714:	ldr	x0, [sp, #88]
    8718:	add	x0, x0, #0x1
    871c:	str	x0, [sp, #88]
    8720:	ldr	x0, [sp, #88]
    8724:	lsl	x0, x0, #4
    8728:	add	x0, x1, x0
    872c:	ldr	x0, [x0]
    8730:	cmn	x0, #0x1
    8734:	b.ne	86b8 <lzma_block_header_encode@@XZ_5.0+0x188>  // b.any
    8738:	ldr	x0, [sp, #32]
    873c:	add	x0, x0, #0x1
    8740:	ldrb	w2, [x0]
    8744:	ldr	x0, [sp, #88]
    8748:	and	w0, w0, #0xff
    874c:	sub	w0, w0, #0x1
    8750:	and	w1, w0, #0xff
    8754:	ldr	x0, [sp, #32]
    8758:	add	x0, x0, #0x1
    875c:	orr	w1, w2, w1
    8760:	and	w1, w1, #0xff
    8764:	strb	w1, [x0]
    8768:	ldr	x0, [sp, #56]
    876c:	ldr	x1, [sp, #32]
    8770:	add	x3, x1, x0
    8774:	ldr	x0, [sp, #56]
    8778:	ldr	x1, [sp, #80]
    877c:	sub	x0, x1, x0
    8780:	mov	x2, x0
    8784:	mov	w1, #0x0                   	// #0
    8788:	mov	x0, x3
    878c:	bl	3230 <memset@plt>
    8790:	ldr	x1, [sp, #32]
    8794:	ldr	x0, [sp, #80]
    8798:	add	x19, x1, x0
    879c:	mov	w2, #0x0                   	// #0
    87a0:	ldr	x1, [sp, #80]
    87a4:	ldr	x0, [sp, #32]
    87a8:	bl	31c0 <lzma_crc32@plt>
    87ac:	mov	w1, w0
    87b0:	mov	x0, x19
    87b4:	bl	8324 <lzma_block_encoder@@XZ_5.0+0xa0>
    87b8:	mov	w0, #0x0                   	// #0
    87bc:	ldr	x19, [sp, #16]
    87c0:	ldp	x29, x30, [sp], #96
    87c4:	ret

00000000000087c8 <lzma_easy_buffer_encode@@XZ_5.0>:
    87c8:	stp	x29, x30, [sp, #-272]!
    87cc:	mov	x29, sp
    87d0:	str	w0, [sp, #76]
    87d4:	str	w1, [sp, #72]
    87d8:	str	x2, [sp, #64]
    87dc:	str	x3, [sp, #56]
    87e0:	str	x4, [sp, #48]
    87e4:	str	x5, [sp, #40]
    87e8:	str	x6, [sp, #32]
    87ec:	str	x7, [sp, #24]
    87f0:	add	x0, sp, #0x50
    87f4:	ldr	w1, [sp, #76]
    87f8:	bl	46b0 <lzma_block_total_size@@XZ_5.0+0x3c>
    87fc:	and	w0, w0, #0xff
    8800:	cmp	w0, #0x0
    8804:	b.eq	8810 <lzma_easy_buffer_encode@@XZ_5.0+0x48>  // b.none
    8808:	mov	w0, #0x8                   	// #8
    880c:	b	8834 <lzma_easy_buffer_encode@@XZ_5.0+0x6c>
    8810:	add	x0, sp, #0x50
    8814:	ldr	x7, [sp, #24]
    8818:	ldr	x6, [sp, #32]
    881c:	ldr	x5, [sp, #40]
    8820:	ldr	x4, [sp, #48]
    8824:	ldr	x3, [sp, #56]
    8828:	ldr	x2, [sp, #64]
    882c:	ldr	w1, [sp, #72]
    8830:	bl	31f0 <lzma_stream_buffer_encode@plt>
    8834:	ldp	x29, x30, [sp], #272
    8838:	ret

000000000000883c <lzma_easy_encoder@@XZ_5.0>:
    883c:	stp	x29, x30, [sp, #-224]!
    8840:	mov	x29, sp
    8844:	str	x0, [sp, #24]
    8848:	str	w1, [sp, #20]
    884c:	str	w2, [sp, #16]
    8850:	add	x0, sp, #0x20
    8854:	ldr	w1, [sp, #20]
    8858:	bl	46b0 <lzma_block_total_size@@XZ_5.0+0x3c>
    885c:	and	w0, w0, #0xff
    8860:	cmp	w0, #0x0
    8864:	b.eq	8870 <lzma_easy_encoder@@XZ_5.0+0x34>  // b.none
    8868:	mov	w0, #0x8                   	// #8
    886c:	b	8884 <lzma_easy_encoder@@XZ_5.0+0x48>
    8870:	add	x0, sp, #0x20
    8874:	ldr	w2, [sp, #16]
    8878:	mov	x1, x0
    887c:	ldr	x0, [sp, #24]
    8880:	bl	34a0 <lzma_stream_encoder@plt>
    8884:	ldp	x29, x30, [sp], #224
    8888:	ret

000000000000888c <lzma_easy_encoder_memusage@@XZ_5.0>:
    888c:	stp	x29, x30, [sp, #-224]!
    8890:	mov	x29, sp
    8894:	str	w0, [sp, #28]
    8898:	add	x0, sp, #0x20
    889c:	ldr	w1, [sp, #28]
    88a0:	bl	46b0 <lzma_block_total_size@@XZ_5.0+0x3c>
    88a4:	and	w0, w0, #0xff
    88a8:	cmp	w0, #0x0
    88ac:	b.eq	88b8 <lzma_easy_encoder_memusage@@XZ_5.0+0x2c>  // b.none
    88b0:	mov	x0, #0xffffffff            	// #4294967295
    88b4:	b	88c0 <lzma_easy_encoder_memusage@@XZ_5.0+0x34>
    88b8:	add	x0, sp, #0x20
    88bc:	bl	3220 <lzma_raw_encoder_memusage@plt>
    88c0:	ldp	x29, x30, [sp], #224
    88c4:	ret

00000000000088c8 <lzma_raw_buffer_encode@@XZ_5.0>:
    88c8:	sub	sp, sp, #0x110
    88cc:	stp	x29, x30, [sp, #16]
    88d0:	add	x29, sp, #0x10
    88d4:	str	x0, [sp, #88]
    88d8:	str	x1, [sp, #80]
    88dc:	str	x2, [sp, #72]
    88e0:	str	x3, [sp, #64]
    88e4:	str	x4, [sp, #56]
    88e8:	str	x5, [sp, #48]
    88ec:	str	x6, [sp, #40]
    88f0:	ldr	x0, [sp, #72]
    88f4:	cmp	x0, #0x0
    88f8:	b.ne	8908 <lzma_raw_buffer_encode@@XZ_5.0+0x40>  // b.any
    88fc:	ldr	x0, [sp, #64]
    8900:	cmp	x0, #0x0
    8904:	b.ne	8934 <lzma_raw_buffer_encode@@XZ_5.0+0x6c>  // b.any
    8908:	ldr	x0, [sp, #56]
    890c:	cmp	x0, #0x0
    8910:	b.eq	8934 <lzma_raw_buffer_encode@@XZ_5.0+0x6c>  // b.none
    8914:	ldr	x0, [sp, #48]
    8918:	cmp	x0, #0x0
    891c:	b.eq	8934 <lzma_raw_buffer_encode@@XZ_5.0+0x6c>  // b.none
    8920:	ldr	x0, [sp, #48]
    8924:	ldr	x0, [x0]
    8928:	ldr	x1, [sp, #40]
    892c:	cmp	x1, x0
    8930:	b.cs	893c <lzma_raw_buffer_encode@@XZ_5.0+0x74>  // b.hs, b.nlast
    8934:	mov	w0, #0xb                   	// #11
    8938:	b	8a1c <lzma_raw_buffer_encode@@XZ_5.0+0x154>
    893c:	str	xzr, [sp, #184]
    8940:	mov	x0, #0xffffffffffffffff    	// #-1
    8944:	str	x0, [sp, #192]
    8948:	str	xzr, [sp, #200]
    894c:	str	xzr, [sp, #208]
    8950:	str	xzr, [sp, #216]
    8954:	str	xzr, [sp, #224]
    8958:	str	xzr, [sp, #232]
    895c:	str	xzr, [sp, #240]
    8960:	str	xzr, [sp, #248]
    8964:	add	x0, sp, #0xb8
    8968:	ldr	x2, [sp, #88]
    896c:	ldr	x1, [sp, #80]
    8970:	bl	8c00 <lzma_filters_update@@XZ_5.0+0x124>
    8974:	str	w0, [sp, #264]
    8978:	ldr	w0, [sp, #264]
    897c:	cmp	w0, #0x0
    8980:	b.eq	898c <lzma_raw_buffer_encode@@XZ_5.0+0xc4>  // b.none
    8984:	ldr	w0, [sp, #264]
    8988:	b	8a1c <lzma_raw_buffer_encode@@XZ_5.0+0x154>
    898c:	ldr	x0, [sp, #48]
    8990:	ldr	x0, [x0]
    8994:	str	x0, [sp, #256]
    8998:	str	xzr, [sp, #104]
    899c:	ldr	x8, [sp, #208]
    89a0:	ldr	x9, [sp, #184]
    89a4:	add	x1, sp, #0x68
    89a8:	mov	w0, #0x3                   	// #3
    89ac:	str	w0, [sp]
    89b0:	ldr	x7, [sp, #40]
    89b4:	ldr	x6, [sp, #48]
    89b8:	ldr	x5, [sp, #56]
    89bc:	ldr	x4, [sp, #64]
    89c0:	mov	x3, x1
    89c4:	ldr	x2, [sp, #72]
    89c8:	ldr	x1, [sp, #80]
    89cc:	mov	x0, x9
    89d0:	blr	x8
    89d4:	str	w0, [sp, #268]
    89d8:	add	x0, sp, #0xb8
    89dc:	ldr	x1, [sp, #80]
    89e0:	bl	3a48 <lzma_version_string@@XZ_5.0+0x358>
    89e4:	ldr	w0, [sp, #268]
    89e8:	cmp	w0, #0x1
    89ec:	b.ne	89f8 <lzma_raw_buffer_encode@@XZ_5.0+0x130>  // b.any
    89f0:	str	wzr, [sp, #268]
    89f4:	b	8a18 <lzma_raw_buffer_encode@@XZ_5.0+0x150>
    89f8:	ldr	w0, [sp, #268]
    89fc:	cmp	w0, #0x0
    8a00:	b.ne	8a0c <lzma_raw_buffer_encode@@XZ_5.0+0x144>  // b.any
    8a04:	mov	w0, #0xa                   	// #10
    8a08:	str	w0, [sp, #268]
    8a0c:	ldr	x0, [sp, #48]
    8a10:	ldr	x1, [sp, #256]
    8a14:	str	x1, [x0]
    8a18:	ldr	w0, [sp, #268]
    8a1c:	ldp	x29, x30, [sp, #16]
    8a20:	add	sp, sp, #0x110
    8a24:	ret
    8a28:	sub	sp, sp, #0x20
    8a2c:	str	x0, [sp, #8]
    8a30:	str	xzr, [sp, #24]
    8a34:	b	8a9c <lzma_raw_buffer_encode@@XZ_5.0+0x1d4>
    8a38:	adrp	x0, 46000 <lzma_mode_is_supported@@XZ_5.0+0x2b368>
    8a3c:	add	x2, x0, #0xa00
    8a40:	ldr	x1, [sp, #24]
    8a44:	mov	x0, x1
    8a48:	lsl	x0, x0, #3
    8a4c:	sub	x0, x0, x1
    8a50:	lsl	x0, x0, #3
    8a54:	add	x0, x2, x0
    8a58:	ldr	x0, [x0]
    8a5c:	ldr	x1, [sp, #8]
    8a60:	cmp	x1, x0
    8a64:	b.ne	8a90 <lzma_raw_buffer_encode@@XZ_5.0+0x1c8>  // b.any
    8a68:	ldr	x1, [sp, #24]
    8a6c:	mov	x0, x1
    8a70:	lsl	x0, x0, #3
    8a74:	sub	x0, x0, x1
    8a78:	lsl	x0, x0, #3
    8a7c:	mov	x1, x0
    8a80:	adrp	x0, 46000 <lzma_mode_is_supported@@XZ_5.0+0x2b368>
    8a84:	add	x0, x0, #0xa00
    8a88:	add	x0, x1, x0
    8a8c:	b	8aac <lzma_raw_buffer_encode@@XZ_5.0+0x1e4>
    8a90:	ldr	x0, [sp, #24]
    8a94:	add	x0, x0, #0x1
    8a98:	str	x0, [sp, #24]
    8a9c:	ldr	x0, [sp, #24]
    8aa0:	cmp	x0, #0x8
    8aa4:	b.ls	8a38 <lzma_raw_buffer_encode@@XZ_5.0+0x170>  // b.plast
    8aa8:	mov	x0, #0x0                   	// #0
    8aac:	add	sp, sp, #0x20
    8ab0:	ret

0000000000008ab4 <lzma_filter_encoder_is_supported@@XZ_5.0>:
    8ab4:	stp	x29, x30, [sp, #-32]!
    8ab8:	mov	x29, sp
    8abc:	str	x0, [sp, #24]
    8ac0:	ldr	x0, [sp, #24]
    8ac4:	bl	8a28 <lzma_raw_buffer_encode@@XZ_5.0+0x160>
    8ac8:	cmp	x0, #0x0
    8acc:	cset	w0, ne  // ne = any
    8ad0:	and	w0, w0, #0xff
    8ad4:	ldp	x29, x30, [sp], #32
    8ad8:	ret

0000000000008adc <lzma_filters_update@@XZ_5.0>:
    8adc:	stp	x29, x30, [sp, #-128]!
    8ae0:	mov	x29, sp
    8ae4:	str	x0, [sp, #24]
    8ae8:	str	x1, [sp, #16]
    8aec:	ldr	x0, [sp, #24]
    8af0:	ldr	x0, [x0, #56]
    8af4:	ldr	x0, [x0, #64]
    8af8:	cmp	x0, #0x0
    8afc:	b.ne	8b08 <lzma_filters_update@@XZ_5.0+0x2c>  // b.any
    8b00:	mov	w0, #0xb                   	// #11
    8b04:	b	8bf8 <lzma_filters_update@@XZ_5.0+0x11c>
    8b08:	ldr	x0, [sp, #16]
    8b0c:	bl	3220 <lzma_raw_encoder_memusage@plt>
    8b10:	cmn	x0, #0x1
    8b14:	b.ne	8b20 <lzma_filters_update@@XZ_5.0+0x44>  // b.any
    8b18:	mov	w0, #0x8                   	// #8
    8b1c:	b	8bf8 <lzma_filters_update@@XZ_5.0+0x11c>
    8b20:	mov	x0, #0x1                   	// #1
    8b24:	str	x0, [sp, #120]
    8b28:	b	8b38 <lzma_filters_update@@XZ_5.0+0x5c>
    8b2c:	ldr	x0, [sp, #120]
    8b30:	add	x0, x0, #0x1
    8b34:	str	x0, [sp, #120]
    8b38:	ldr	x0, [sp, #120]
    8b3c:	lsl	x0, x0, #4
    8b40:	ldr	x1, [sp, #16]
    8b44:	add	x0, x1, x0
    8b48:	ldr	x0, [x0]
    8b4c:	cmn	x0, #0x1
    8b50:	b.ne	8b2c <lzma_filters_update@@XZ_5.0+0x50>  // b.any
    8b54:	str	xzr, [sp, #112]
    8b58:	b	8b9c <lzma_filters_update@@XZ_5.0+0xc0>
    8b5c:	ldr	x0, [sp, #112]
    8b60:	lsl	x0, x0, #4
    8b64:	ldr	x1, [sp, #16]
    8b68:	add	x0, x1, x0
    8b6c:	ldr	x2, [sp, #120]
    8b70:	ldr	x1, [sp, #112]
    8b74:	sub	x1, x2, x1
    8b78:	sub	x1, x1, #0x1
    8b7c:	lsl	x1, x1, #4
    8b80:	add	x2, sp, #0x20
    8b84:	add	x2, x2, x1
    8b88:	ldp	x0, x1, [x0]
    8b8c:	stp	x0, x1, [x2]
    8b90:	ldr	x0, [sp, #112]
    8b94:	add	x0, x0, #0x1
    8b98:	str	x0, [sp, #112]
    8b9c:	ldr	x1, [sp, #112]
    8ba0:	ldr	x0, [sp, #120]
    8ba4:	cmp	x1, x0
    8ba8:	b.cc	8b5c <lzma_filters_update@@XZ_5.0+0x80>  // b.lo, b.ul, b.last
    8bac:	ldr	x0, [sp, #120]
    8bb0:	lsl	x0, x0, #4
    8bb4:	add	x1, sp, #0x20
    8bb8:	mov	x2, #0xffffffffffffffff    	// #-1
    8bbc:	str	x2, [x1, x0]
    8bc0:	ldr	x0, [sp, #24]
    8bc4:	ldr	x0, [x0, #56]
    8bc8:	ldr	x4, [x0, #64]
    8bcc:	ldr	x0, [sp, #24]
    8bd0:	ldr	x0, [x0, #56]
    8bd4:	ldr	x5, [x0]
    8bd8:	ldr	x0, [sp, #24]
    8bdc:	ldr	x0, [x0, #48]
    8be0:	add	x1, sp, #0x20
    8be4:	mov	x3, x1
    8be8:	ldr	x2, [sp, #16]
    8bec:	mov	x1, x0
    8bf0:	mov	x0, x5
    8bf4:	blr	x4
    8bf8:	ldp	x29, x30, [sp], #128
    8bfc:	ret
    8c00:	stp	x29, x30, [sp, #-48]!
    8c04:	mov	x29, sp
    8c08:	str	x0, [sp, #40]
    8c0c:	str	x1, [sp, #32]
    8c10:	str	x2, [sp, #24]
    8c14:	mov	w4, #0x1                   	// #1
    8c18:	adrp	x0, 8000 <lzma_block_uncomp_encode@@XZ_5.2+0x374>
    8c1c:	add	x3, x0, #0xa28
    8c20:	ldr	x2, [sp, #24]
    8c24:	ldr	x1, [sp, #32]
    8c28:	ldr	x0, [sp, #40]
    8c2c:	bl	4bb4 <lzma_filters_copy@@XZ_5.0+0x49c>
    8c30:	ldp	x29, x30, [sp], #48
    8c34:	ret

0000000000008c38 <lzma_raw_encoder@@XZ_5.0>:
    8c38:	stp	x29, x30, [sp, #-48]!
    8c3c:	mov	x29, sp
    8c40:	str	x0, [sp, #24]
    8c44:	str	x1, [sp, #16]
    8c48:	ldr	x0, [sp, #24]
    8c4c:	bl	3b00 <lzma_version_string@@XZ_5.0+0x410>
    8c50:	str	w0, [sp, #44]
    8c54:	ldr	w0, [sp, #44]
    8c58:	cmp	w0, #0x0
    8c5c:	b.eq	8c68 <lzma_raw_encoder@@XZ_5.0+0x30>  // b.none
    8c60:	ldr	w0, [sp, #44]
    8c64:	b	8ce8 <lzma_raw_encoder@@XZ_5.0+0xb0>
    8c68:	ldr	x0, [sp, #24]
    8c6c:	ldr	x0, [x0, #56]
    8c70:	mov	x5, x0
    8c74:	ldr	x0, [sp, #24]
    8c78:	ldr	x1, [x0, #48]
    8c7c:	mov	w4, #0x1                   	// #1
    8c80:	adrp	x0, 8000 <lzma_block_uncomp_encode@@XZ_5.2+0x374>
    8c84:	add	x3, x0, #0xa28
    8c88:	ldr	x2, [sp, #16]
    8c8c:	mov	x0, x5
    8c90:	bl	4bb4 <lzma_filters_copy@@XZ_5.0+0x49c>
    8c94:	str	w0, [sp, #40]
    8c98:	ldr	w0, [sp, #40]
    8c9c:	cmp	w0, #0x0
    8ca0:	b.eq	8cb4 <lzma_raw_encoder@@XZ_5.0+0x7c>  // b.none
    8ca4:	ldr	x0, [sp, #24]
    8ca8:	bl	3320 <lzma_end@plt>
    8cac:	ldr	w0, [sp, #40]
    8cb0:	b	8ce8 <lzma_raw_encoder@@XZ_5.0+0xb0>
    8cb4:	ldr	x0, [sp, #24]
    8cb8:	ldr	x0, [x0, #56]
    8cbc:	mov	w1, #0x1                   	// #1
    8cc0:	strb	w1, [x0, #88]
    8cc4:	ldr	x0, [sp, #24]
    8cc8:	ldr	x0, [x0, #56]
    8ccc:	mov	w1, #0x1                   	// #1
    8cd0:	strb	w1, [x0, #89]
    8cd4:	ldr	x0, [sp, #24]
    8cd8:	ldr	x0, [x0, #56]
    8cdc:	mov	w1, #0x1                   	// #1
    8ce0:	strb	w1, [x0, #91]
    8ce4:	mov	w0, #0x0                   	// #0
    8ce8:	ldp	x29, x30, [sp], #48
    8cec:	ret

0000000000008cf0 <lzma_raw_encoder_memusage@@XZ_5.0>:
    8cf0:	stp	x29, x30, [sp, #-32]!
    8cf4:	mov	x29, sp
    8cf8:	str	x0, [sp, #24]
    8cfc:	ldr	x1, [sp, #24]
    8d00:	adrp	x0, 8000 <lzma_block_uncomp_encode@@XZ_5.2+0x374>
    8d04:	add	x0, x0, #0xa28
    8d08:	bl	4e6c <lzma_filters_copy@@XZ_5.0+0x754>
    8d0c:	ldp	x29, x30, [sp], #32
    8d10:	ret
    8d14:	stp	x29, x30, [sp, #-64]!
    8d18:	mov	x29, sp
    8d1c:	str	x0, [sp, #24]
    8d20:	str	xzr, [sp, #56]
    8d24:	str	xzr, [sp, #48]
    8d28:	b	8db4 <lzma_raw_encoder_memusage@@XZ_5.0+0xc4>
    8d2c:	ldr	x0, [sp, #48]
    8d30:	lsl	x0, x0, #4
    8d34:	ldr	x1, [sp, #24]
    8d38:	add	x0, x1, x0
    8d3c:	ldr	x0, [x0]
    8d40:	bl	8a28 <lzma_raw_buffer_encode@@XZ_5.0+0x160>
    8d44:	str	x0, [sp, #40]
    8d48:	ldr	x0, [sp, #40]
    8d4c:	ldr	x0, [x0, #24]
    8d50:	cmp	x0, #0x0
    8d54:	b.eq	8da8 <lzma_raw_encoder_memusage@@XZ_5.0+0xb8>  // b.none
    8d58:	ldr	x0, [sp, #40]
    8d5c:	ldr	x1, [x0, #24]
    8d60:	ldr	x0, [sp, #48]
    8d64:	lsl	x0, x0, #4
    8d68:	ldr	x2, [sp, #24]
    8d6c:	add	x0, x2, x0
    8d70:	ldr	x0, [x0, #8]
    8d74:	blr	x1
    8d78:	str	x0, [sp, #32]
    8d7c:	ldr	x0, [sp, #32]
    8d80:	cmp	x0, #0x0
    8d84:	b.ne	8d90 <lzma_raw_encoder_memusage@@XZ_5.0+0xa0>  // b.any
    8d88:	mov	x0, #0x0                   	// #0
    8d8c:	b	8dd4 <lzma_raw_encoder_memusage@@XZ_5.0+0xe4>
    8d90:	ldr	x1, [sp, #32]
    8d94:	ldr	x0, [sp, #56]
    8d98:	cmp	x1, x0
    8d9c:	b.ls	8da8 <lzma_raw_encoder_memusage@@XZ_5.0+0xb8>  // b.plast
    8da0:	ldr	x0, [sp, #32]
    8da4:	str	x0, [sp, #56]
    8da8:	ldr	x0, [sp, #48]
    8dac:	add	x0, x0, #0x1
    8db0:	str	x0, [sp, #48]
    8db4:	ldr	x0, [sp, #48]
    8db8:	lsl	x0, x0, #4
    8dbc:	ldr	x1, [sp, #24]
    8dc0:	add	x0, x1, x0
    8dc4:	ldr	x0, [x0]
    8dc8:	cmn	x0, #0x1
    8dcc:	b.ne	8d2c <lzma_raw_encoder_memusage@@XZ_5.0+0x3c>  // b.any
    8dd0:	ldr	x0, [sp, #56]
    8dd4:	ldp	x29, x30, [sp], #64
    8dd8:	ret

0000000000008ddc <lzma_properties_size@@XZ_5.0>:
    8ddc:	stp	x29, x30, [sp, #-48]!
    8de0:	mov	x29, sp
    8de4:	str	x0, [sp, #24]
    8de8:	str	x1, [sp, #16]
    8dec:	ldr	x0, [sp, #16]
    8df0:	ldr	x0, [x0]
    8df4:	bl	8a28 <lzma_raw_buffer_encode@@XZ_5.0+0x160>
    8df8:	str	x0, [sp, #40]
    8dfc:	ldr	x0, [sp, #40]
    8e00:	cmp	x0, #0x0
    8e04:	b.ne	8e28 <lzma_properties_size@@XZ_5.0+0x4c>  // b.any
    8e08:	ldr	x0, [sp, #16]
    8e0c:	ldr	x0, [x0]
    8e10:	cmp	x0, #0x0
    8e14:	b.lt	8e20 <lzma_properties_size@@XZ_5.0+0x44>  // b.tstop
    8e18:	mov	w0, #0x8                   	// #8
    8e1c:	b	8e6c <lzma_properties_size@@XZ_5.0+0x90>
    8e20:	mov	w0, #0xb                   	// #11
    8e24:	b	8e6c <lzma_properties_size@@XZ_5.0+0x90>
    8e28:	ldr	x0, [sp, #40]
    8e2c:	ldr	x0, [x0, #32]
    8e30:	cmp	x0, #0x0
    8e34:	b.ne	8e50 <lzma_properties_size@@XZ_5.0+0x74>  // b.any
    8e38:	ldr	x0, [sp, #40]
    8e3c:	ldr	w1, [x0, #40]
    8e40:	ldr	x0, [sp, #24]
    8e44:	str	w1, [x0]
    8e48:	mov	w0, #0x0                   	// #0
    8e4c:	b	8e6c <lzma_properties_size@@XZ_5.0+0x90>
    8e50:	ldr	x0, [sp, #40]
    8e54:	ldr	x2, [x0, #32]
    8e58:	ldr	x0, [sp, #16]
    8e5c:	ldr	x0, [x0, #8]
    8e60:	mov	x1, x0
    8e64:	ldr	x0, [sp, #24]
    8e68:	blr	x2
    8e6c:	ldp	x29, x30, [sp], #48
    8e70:	ret

0000000000008e74 <lzma_properties_encode@@XZ_5.0>:
    8e74:	stp	x29, x30, [sp, #-48]!
    8e78:	mov	x29, sp
    8e7c:	str	x0, [sp, #24]
    8e80:	str	x1, [sp, #16]
    8e84:	ldr	x0, [sp, #24]
    8e88:	ldr	x0, [x0]
    8e8c:	bl	8a28 <lzma_raw_buffer_encode@@XZ_5.0+0x160>
    8e90:	str	x0, [sp, #40]
    8e94:	ldr	x0, [sp, #40]
    8e98:	cmp	x0, #0x0
    8e9c:	b.ne	8ea8 <lzma_properties_encode@@XZ_5.0+0x34>  // b.any
    8ea0:	mov	w0, #0xb                   	// #11
    8ea4:	b	8ed8 <lzma_properties_encode@@XZ_5.0+0x64>
    8ea8:	ldr	x0, [sp, #40]
    8eac:	ldr	x0, [x0, #48]
    8eb0:	cmp	x0, #0x0
    8eb4:	b.ne	8ec0 <lzma_properties_encode@@XZ_5.0+0x4c>  // b.any
    8eb8:	mov	w0, #0x0                   	// #0
    8ebc:	b	8ed8 <lzma_properties_encode@@XZ_5.0+0x64>
    8ec0:	ldr	x0, [sp, #40]
    8ec4:	ldr	x2, [x0, #48]
    8ec8:	ldr	x0, [sp, #24]
    8ecc:	ldr	x0, [x0, #8]
    8ed0:	ldr	x1, [sp, #16]
    8ed4:	blr	x2
    8ed8:	ldp	x29, x30, [sp], #48
    8edc:	ret

0000000000008ee0 <lzma_filter_flags_size@@XZ_5.0>:
    8ee0:	stp	x29, x30, [sp, #-64]!
    8ee4:	mov	x29, sp
    8ee8:	stp	x19, x20, [sp, #16]
    8eec:	str	x0, [sp, #40]
    8ef0:	str	x1, [sp, #32]
    8ef4:	ldr	x0, [sp, #32]
    8ef8:	ldr	x1, [x0]
    8efc:	mov	x0, #0x3fffffffffffffff    	// #4611686018427387903
    8f00:	cmp	x1, x0
    8f04:	b.ls	8f10 <lzma_filter_flags_size@@XZ_5.0+0x30>  // b.plast
    8f08:	mov	w0, #0xb                   	// #11
    8f0c:	b	8f70 <lzma_filter_flags_size@@XZ_5.0+0x90>
    8f10:	ldr	x1, [sp, #32]
    8f14:	ldr	x0, [sp, #40]
    8f18:	bl	3370 <lzma_properties_size@plt>
    8f1c:	str	w0, [sp, #60]
    8f20:	ldr	w0, [sp, #60]
    8f24:	cmp	w0, #0x0
    8f28:	b.eq	8f34 <lzma_filter_flags_size@@XZ_5.0+0x54>  // b.none
    8f2c:	ldr	w0, [sp, #60]
    8f30:	b	8f70 <lzma_filter_flags_size@@XZ_5.0+0x90>
    8f34:	ldr	x0, [sp, #40]
    8f38:	ldr	w19, [x0]
    8f3c:	ldr	x0, [sp, #32]
    8f40:	ldr	x0, [x0]
    8f44:	bl	3480 <lzma_vli_size@plt>
    8f48:	mov	w20, w0
    8f4c:	ldr	x0, [sp, #40]
    8f50:	ldr	w0, [x0]
    8f54:	mov	w0, w0
    8f58:	bl	3480 <lzma_vli_size@plt>
    8f5c:	add	w0, w20, w0
    8f60:	add	w1, w19, w0
    8f64:	ldr	x0, [sp, #40]
    8f68:	str	w1, [x0]
    8f6c:	mov	w0, #0x0                   	// #0
    8f70:	ldp	x19, x20, [sp, #16]
    8f74:	ldp	x29, x30, [sp], #64
    8f78:	ret

0000000000008f7c <lzma_filter_flags_encode@@XZ_5.0>:
    8f7c:	stp	x29, x30, [sp, #-80]!
    8f80:	mov	x29, sp
    8f84:	str	x0, [sp, #40]
    8f88:	str	x1, [sp, #32]
    8f8c:	str	x2, [sp, #24]
    8f90:	str	x3, [sp, #16]
    8f94:	ldr	x0, [sp, #40]
    8f98:	ldr	x1, [x0]
    8f9c:	mov	x0, #0x3fffffffffffffff    	// #4611686018427387903
    8fa0:	cmp	x1, x0
    8fa4:	b.ls	8fb0 <lzma_filter_flags_encode@@XZ_5.0+0x34>  // b.plast
    8fa8:	mov	w0, #0xb                   	// #11
    8fac:	b	90b8 <lzma_filter_flags_encode@@XZ_5.0+0x13c>
    8fb0:	ldr	x0, [sp, #40]
    8fb4:	ldr	x0, [x0]
    8fb8:	ldr	x4, [sp, #16]
    8fbc:	ldr	x3, [sp, #24]
    8fc0:	ldr	x2, [sp, #32]
    8fc4:	mov	x1, #0x0                   	// #0
    8fc8:	bl	3450 <lzma_vli_encode@plt>
    8fcc:	str	w0, [sp, #76]
    8fd0:	ldr	w0, [sp, #76]
    8fd4:	cmp	w0, #0x0
    8fd8:	b.eq	8fe4 <lzma_filter_flags_encode@@XZ_5.0+0x68>  // b.none
    8fdc:	ldr	w0, [sp, #76]
    8fe0:	b	90b8 <lzma_filter_flags_encode@@XZ_5.0+0x13c>
    8fe4:	add	x0, sp, #0x3c
    8fe8:	ldr	x1, [sp, #40]
    8fec:	bl	3370 <lzma_properties_size@plt>
    8ff0:	str	w0, [sp, #72]
    8ff4:	ldr	w0, [sp, #72]
    8ff8:	cmp	w0, #0x0
    8ffc:	b.eq	9008 <lzma_filter_flags_encode@@XZ_5.0+0x8c>  // b.none
    9000:	ldr	w0, [sp, #72]
    9004:	b	90b8 <lzma_filter_flags_encode@@XZ_5.0+0x13c>
    9008:	ldr	w0, [sp, #60]
    900c:	mov	w0, w0
    9010:	ldr	x4, [sp, #16]
    9014:	ldr	x3, [sp, #24]
    9018:	ldr	x2, [sp, #32]
    901c:	mov	x1, #0x0                   	// #0
    9020:	bl	3450 <lzma_vli_encode@plt>
    9024:	str	w0, [sp, #68]
    9028:	ldr	w0, [sp, #68]
    902c:	cmp	w0, #0x0
    9030:	b.eq	903c <lzma_filter_flags_encode@@XZ_5.0+0xc0>  // b.none
    9034:	ldr	w0, [sp, #68]
    9038:	b	90b8 <lzma_filter_flags_encode@@XZ_5.0+0x13c>
    903c:	ldr	x0, [sp, #24]
    9040:	ldr	x0, [x0]
    9044:	ldr	x1, [sp, #16]
    9048:	sub	x1, x1, x0
    904c:	ldr	w0, [sp, #60]
    9050:	mov	w0, w0
    9054:	cmp	x1, x0
    9058:	b.cs	9064 <lzma_filter_flags_encode@@XZ_5.0+0xe8>  // b.hs, b.nlast
    905c:	mov	w0, #0xb                   	// #11
    9060:	b	90b8 <lzma_filter_flags_encode@@XZ_5.0+0x13c>
    9064:	ldr	x0, [sp, #24]
    9068:	ldr	x0, [x0]
    906c:	ldr	x1, [sp, #32]
    9070:	add	x0, x1, x0
    9074:	mov	x1, x0
    9078:	ldr	x0, [sp, #40]
    907c:	bl	3400 <lzma_properties_encode@plt>
    9080:	str	w0, [sp, #64]
    9084:	ldr	w0, [sp, #64]
    9088:	cmp	w0, #0x0
    908c:	b.eq	9098 <lzma_filter_flags_encode@@XZ_5.0+0x11c>  // b.none
    9090:	ldr	w0, [sp, #64]
    9094:	b	90b8 <lzma_filter_flags_encode@@XZ_5.0+0x13c>
    9098:	ldr	x0, [sp, #24]
    909c:	ldr	x1, [x0]
    90a0:	ldr	w0, [sp, #60]
    90a4:	mov	w0, w0
    90a8:	add	x1, x1, x0
    90ac:	ldr	x0, [sp, #24]
    90b0:	str	x1, [x0]
    90b4:	mov	w0, #0x0                   	// #0
    90b8:	ldp	x29, x30, [sp], #80
    90bc:	ret
    90c0:	stp	x29, x30, [sp, #-128]!
    90c4:	mov	x29, sp
    90c8:	str	x0, [sp, #72]
    90cc:	str	x1, [sp, #64]
    90d0:	str	x2, [sp, #56]
    90d4:	str	x3, [sp, #48]
    90d8:	str	x4, [sp, #40]
    90dc:	str	x5, [sp, #32]
    90e0:	str	x6, [sp, #24]
    90e4:	str	x7, [sp, #16]
    90e8:	ldr	x0, [sp, #72]
    90ec:	str	x0, [sp, #112]
    90f0:	ldr	x0, [sp, #24]
    90f4:	ldr	x0, [x0]
    90f8:	str	x0, [sp, #104]
    90fc:	str	wzr, [sp, #124]
    9100:	b	93ec <lzma_filter_flags_encode@@XZ_5.0+0x470>
    9104:	ldr	x0, [sp, #112]
    9108:	ldr	w0, [x0]
    910c:	cmp	w0, #0x6
    9110:	b.eq	9358 <lzma_filter_flags_encode@@XZ_5.0+0x3dc>  // b.none
    9114:	cmp	w0, #0x6
    9118:	b.hi	93e4 <lzma_filter_flags_encode@@XZ_5.0+0x468>  // b.pmore
    911c:	cmp	w0, #0x5
    9120:	b.eq	92c0 <lzma_filter_flags_encode@@XZ_5.0+0x344>  // b.none
    9124:	cmp	w0, #0x5
    9128:	b.hi	93e4 <lzma_filter_flags_encode@@XZ_5.0+0x468>  // b.pmore
    912c:	cmp	w0, #0x4
    9130:	b.eq	91f4 <lzma_filter_flags_encode@@XZ_5.0+0x278>  // b.none
    9134:	cmp	w0, #0x4
    9138:	b.hi	93e4 <lzma_filter_flags_encode@@XZ_5.0+0x468>  // b.pmore
    913c:	cmp	w0, #0x3
    9140:	b.hi	93e4 <lzma_filter_flags_encode@@XZ_5.0+0x468>  // b.pmore
    9144:	cmp	w0, #0x2
    9148:	b.cs	9244 <lzma_filter_flags_encode@@XZ_5.0+0x2c8>  // b.hs, b.nlast
    914c:	cmp	w0, #0x0
    9150:	b.eq	9160 <lzma_filter_flags_encode@@XZ_5.0+0x1e4>  // b.none
    9154:	cmp	w0, #0x1
    9158:	b.eq	9198 <lzma_filter_flags_encode@@XZ_5.0+0x21c>  // b.none
    915c:	b	93e4 <lzma_filter_flags_encode@@XZ_5.0+0x468>
    9160:	ldr	x0, [sp, #24]
    9164:	ldr	x0, [x0]
    9168:	ldr	x1, [sp, #32]
    916c:	add	x0, x1, x0
    9170:	strb	wzr, [x0]
    9174:	ldr	x0, [sp, #24]
    9178:	ldr	x0, [x0]
    917c:	add	x1, x0, #0x1
    9180:	ldr	x0, [sp, #24]
    9184:	str	x1, [x0]
    9188:	ldr	x0, [sp, #112]
    918c:	mov	w1, #0x1                   	// #1
    9190:	str	w1, [x0]
    9194:	b	93ec <lzma_filter_flags_encode@@XZ_5.0+0x470>
    9198:	ldr	x0, [sp, #112]
    919c:	ldr	x0, [x0, #8]
    91a0:	bl	34e0 <lzma_index_block_count@plt>
    91a4:	str	x0, [sp, #88]
    91a8:	ldr	x0, [sp, #112]
    91ac:	add	x0, x0, #0x140
    91b0:	ldr	x4, [sp, #16]
    91b4:	ldr	x3, [sp, #24]
    91b8:	ldr	x2, [sp, #32]
    91bc:	mov	x1, x0
    91c0:	ldr	x0, [sp, #88]
    91c4:	bl	3450 <lzma_vli_encode@plt>
    91c8:	str	w0, [sp, #124]
    91cc:	ldr	w0, [sp, #124]
    91d0:	cmp	w0, #0x1
    91d4:	b.ne	9404 <lzma_filter_flags_encode@@XZ_5.0+0x488>  // b.any
    91d8:	str	wzr, [sp, #124]
    91dc:	ldr	x0, [sp, #112]
    91e0:	str	xzr, [x0, #320]
    91e4:	ldr	x0, [sp, #112]
    91e8:	mov	w1, #0x4                   	// #4
    91ec:	str	w1, [x0]
    91f0:	b	93ec <lzma_filter_flags_encode@@XZ_5.0+0x470>
    91f4:	ldr	x0, [sp, #112]
    91f8:	add	x0, x0, #0x10
    91fc:	mov	w1, #0x2                   	// #2
    9200:	bl	3460 <lzma_index_iter_next@plt>
    9204:	and	w0, w0, #0xff
    9208:	cmp	w0, #0x0
    920c:	b.eq	9238 <lzma_filter_flags_encode@@XZ_5.0+0x2bc>  // b.none
    9210:	ldr	x0, [sp, #112]
    9214:	ldr	x0, [x0, #8]
    9218:	bl	5a04 <lzma_index_checks@@XZ_5.0+0x58>
    921c:	mov	w1, w0
    9220:	ldr	x0, [sp, #112]
    9224:	str	x1, [x0, #320]
    9228:	ldr	x0, [sp, #112]
    922c:	mov	w1, #0x5                   	// #5
    9230:	str	w1, [x0]
    9234:	b	93ec <lzma_filter_flags_encode@@XZ_5.0+0x470>
    9238:	ldr	x0, [sp, #112]
    923c:	mov	w1, #0x2                   	// #2
    9240:	str	w1, [x0]
    9244:	ldr	x0, [sp, #112]
    9248:	ldr	w0, [x0]
    924c:	cmp	w0, #0x2
    9250:	b.ne	9260 <lzma_filter_flags_encode@@XZ_5.0+0x2e4>  // b.any
    9254:	ldr	x0, [sp, #112]
    9258:	ldr	x0, [x0, #192]
    925c:	b	9268 <lzma_filter_flags_encode@@XZ_5.0+0x2ec>
    9260:	ldr	x0, [sp, #112]
    9264:	ldr	x0, [x0, #184]
    9268:	str	x0, [sp, #96]
    926c:	ldr	x0, [sp, #112]
    9270:	add	x0, x0, #0x140
    9274:	ldr	x4, [sp, #16]
    9278:	ldr	x3, [sp, #24]
    927c:	ldr	x2, [sp, #32]
    9280:	mov	x1, x0
    9284:	ldr	x0, [sp, #96]
    9288:	bl	3450 <lzma_vli_encode@plt>
    928c:	str	w0, [sp, #124]
    9290:	ldr	w0, [sp, #124]
    9294:	cmp	w0, #0x1
    9298:	b.ne	940c <lzma_filter_flags_encode@@XZ_5.0+0x490>  // b.any
    929c:	str	wzr, [sp, #124]
    92a0:	ldr	x0, [sp, #112]
    92a4:	str	xzr, [x0, #320]
    92a8:	ldr	x0, [sp, #112]
    92ac:	ldr	w0, [x0]
    92b0:	add	w1, w0, #0x1
    92b4:	ldr	x0, [sp, #112]
    92b8:	str	w1, [x0]
    92bc:	b	93ec <lzma_filter_flags_encode@@XZ_5.0+0x470>
    92c0:	ldr	x0, [sp, #112]
    92c4:	ldr	x0, [x0, #320]
    92c8:	cmp	x0, #0x0
    92cc:	b.eq	9308 <lzma_filter_flags_encode@@XZ_5.0+0x38c>  // b.none
    92d0:	ldr	x0, [sp, #112]
    92d4:	ldr	x0, [x0, #320]
    92d8:	sub	x1, x0, #0x1
    92dc:	ldr	x0, [sp, #112]
    92e0:	str	x1, [x0, #320]
    92e4:	ldr	x0, [sp, #24]
    92e8:	ldr	x0, [x0]
    92ec:	add	x2, x0, #0x1
    92f0:	ldr	x1, [sp, #24]
    92f4:	str	x2, [x1]
    92f8:	ldr	x1, [sp, #32]
    92fc:	add	x0, x1, x0
    9300:	strb	wzr, [x0]
    9304:	b	93ec <lzma_filter_flags_encode@@XZ_5.0+0x470>
    9308:	ldr	x1, [sp, #32]
    930c:	ldr	x0, [sp, #104]
    9310:	add	x3, x1, x0
    9314:	ldr	x0, [sp, #24]
    9318:	ldr	x1, [x0]
    931c:	ldr	x0, [sp, #104]
    9320:	sub	x1, x1, x0
    9324:	ldr	x0, [sp, #112]
    9328:	ldr	w0, [x0, #328]
    932c:	mov	w2, w0
    9330:	mov	x0, x3
    9334:	bl	31c0 <lzma_crc32@plt>
    9338:	mov	w1, w0
    933c:	ldr	x0, [sp, #112]
    9340:	str	w1, [x0, #328]
    9344:	ldr	x0, [sp, #112]
    9348:	mov	w1, #0x6                   	// #6
    934c:	str	w1, [x0]
    9350:	b	9358 <lzma_filter_flags_encode@@XZ_5.0+0x3dc>
    9354:	nop
    9358:	ldr	x0, [sp, #24]
    935c:	ldr	x0, [x0]
    9360:	ldr	x1, [sp, #16]
    9364:	cmp	x1, x0
    9368:	b.ne	9374 <lzma_filter_flags_encode@@XZ_5.0+0x3f8>  // b.any
    936c:	mov	w0, #0x0                   	// #0
    9370:	b	9450 <lzma_filter_flags_encode@@XZ_5.0+0x4d4>
    9374:	ldr	x0, [sp, #112]
    9378:	ldr	w1, [x0, #328]
    937c:	ldr	x0, [sp, #112]
    9380:	ldr	x0, [x0, #320]
    9384:	lsl	w0, w0, #3
    9388:	lsr	w2, w1, w0
    938c:	ldr	x0, [sp, #24]
    9390:	ldr	x0, [x0]
    9394:	ldr	x1, [sp, #32]
    9398:	add	x0, x1, x0
    939c:	and	w1, w2, #0xff
    93a0:	strb	w1, [x0]
    93a4:	ldr	x0, [sp, #24]
    93a8:	ldr	x0, [x0]
    93ac:	add	x1, x0, #0x1
    93b0:	ldr	x0, [sp, #24]
    93b4:	str	x1, [x0]
    93b8:	ldr	x0, [sp, #112]
    93bc:	ldr	x0, [x0, #320]
    93c0:	add	x1, x0, #0x1
    93c4:	ldr	x0, [sp, #112]
    93c8:	str	x1, [x0, #320]
    93cc:	ldr	x0, [sp, #112]
    93d0:	ldr	x0, [x0, #320]
    93d4:	cmp	x0, #0x3
    93d8:	b.ls	9354 <lzma_filter_flags_encode@@XZ_5.0+0x3d8>  // b.plast
    93dc:	mov	w0, #0x1                   	// #1
    93e0:	b	9450 <lzma_filter_flags_encode@@XZ_5.0+0x4d4>
    93e4:	mov	w0, #0xb                   	// #11
    93e8:	b	9450 <lzma_filter_flags_encode@@XZ_5.0+0x4d4>
    93ec:	ldr	x0, [sp, #24]
    93f0:	ldr	x0, [x0]
    93f4:	ldr	x1, [sp, #16]
    93f8:	cmp	x1, x0
    93fc:	b.hi	9104 <lzma_filter_flags_encode@@XZ_5.0+0x188>  // b.pmore
    9400:	b	9410 <lzma_filter_flags_encode@@XZ_5.0+0x494>
    9404:	nop
    9408:	b	9410 <lzma_filter_flags_encode@@XZ_5.0+0x494>
    940c:	nop
    9410:	ldr	x1, [sp, #32]
    9414:	ldr	x0, [sp, #104]
    9418:	add	x3, x1, x0
    941c:	ldr	x0, [sp, #24]
    9420:	ldr	x1, [x0]
    9424:	ldr	x0, [sp, #104]
    9428:	sub	x1, x1, x0
    942c:	ldr	x0, [sp, #112]
    9430:	ldr	w0, [x0, #328]
    9434:	mov	w2, w0
    9438:	mov	x0, x3
    943c:	bl	31c0 <lzma_crc32@plt>
    9440:	mov	w1, w0
    9444:	ldr	x0, [sp, #112]
    9448:	str	w1, [x0, #328]
    944c:	ldr	w0, [sp, #124]
    9450:	ldp	x29, x30, [sp], #128
    9454:	ret
    9458:	stp	x29, x30, [sp, #-32]!
    945c:	mov	x29, sp
    9460:	str	x0, [sp, #24]
    9464:	str	x1, [sp, #16]
    9468:	ldr	x1, [sp, #16]
    946c:	ldr	x0, [sp, #24]
    9470:	bl	3814 <lzma_version_string@@XZ_5.0+0x124>
    9474:	nop
    9478:	ldp	x29, x30, [sp], #32
    947c:	ret
    9480:	stp	x29, x30, [sp, #-32]!
    9484:	mov	x29, sp
    9488:	str	x0, [sp, #24]
    948c:	str	x1, [sp, #16]
    9490:	ldr	x0, [sp, #24]
    9494:	add	x0, x0, #0x10
    9498:	ldr	x1, [sp, #16]
    949c:	bl	34b0 <lzma_index_iter_init@plt>
    94a0:	ldr	x0, [sp, #24]
    94a4:	str	wzr, [x0]
    94a8:	ldr	x0, [sp, #24]
    94ac:	ldr	x1, [sp, #16]
    94b0:	str	x1, [x0, #8]
    94b4:	ldr	x0, [sp, #24]
    94b8:	str	xzr, [x0, #320]
    94bc:	ldr	x0, [sp, #24]
    94c0:	str	wzr, [x0, #328]
    94c4:	nop
    94c8:	ldp	x29, x30, [sp], #32
    94cc:	ret
    94d0:	stp	x29, x30, [sp, #-48]!
    94d4:	mov	x29, sp
    94d8:	str	x0, [sp, #40]
    94dc:	str	x1, [sp, #32]
    94e0:	str	x2, [sp, #24]
    94e4:	ldr	x0, [sp, #40]
    94e8:	ldr	x1, [x0, #16]
    94ec:	adrp	x0, 9000 <lzma_filter_flags_encode@@XZ_5.0+0x84>
    94f0:	add	x0, x0, #0x4d0
    94f4:	cmp	x1, x0
    94f8:	b.eq	9508 <lzma_filter_flags_encode@@XZ_5.0+0x58c>  // b.none
    94fc:	ldr	x1, [sp, #32]
    9500:	ldr	x0, [sp, #40]
    9504:	bl	3a48 <lzma_version_string@@XZ_5.0+0x358>
    9508:	adrp	x0, 9000 <lzma_filter_flags_encode@@XZ_5.0+0x84>
    950c:	add	x1, x0, #0x4d0
    9510:	ldr	x0, [sp, #40]
    9514:	str	x1, [x0, #16]
    9518:	ldr	x0, [sp, #24]
    951c:	cmp	x0, #0x0
    9520:	b.ne	952c <lzma_filter_flags_encode@@XZ_5.0+0x5b0>  // b.any
    9524:	mov	w0, #0xb                   	// #11
    9528:	b	95a0 <lzma_filter_flags_encode@@XZ_5.0+0x624>
    952c:	ldr	x0, [sp, #40]
    9530:	ldr	x0, [x0]
    9534:	cmp	x0, #0x0
    9538:	b.ne	958c <lzma_filter_flags_encode@@XZ_5.0+0x610>  // b.any
    953c:	ldr	x1, [sp, #32]
    9540:	mov	x0, #0x150                 	// #336
    9544:	bl	36fc <lzma_version_string@@XZ_5.0+0xc>
    9548:	mov	x1, x0
    954c:	ldr	x0, [sp, #40]
    9550:	str	x1, [x0]
    9554:	ldr	x0, [sp, #40]
    9558:	ldr	x0, [x0]
    955c:	cmp	x0, #0x0
    9560:	b.ne	956c <lzma_filter_flags_encode@@XZ_5.0+0x5f0>  // b.any
    9564:	mov	w0, #0x5                   	// #5
    9568:	b	95a0 <lzma_filter_flags_encode@@XZ_5.0+0x624>
    956c:	ldr	x0, [sp, #40]
    9570:	adrp	x1, 9000 <lzma_filter_flags_encode@@XZ_5.0+0x84>
    9574:	add	x1, x1, #0xc0
    9578:	str	x1, [x0, #24]
    957c:	ldr	x0, [sp, #40]
    9580:	adrp	x1, 9000 <lzma_filter_flags_encode@@XZ_5.0+0x84>
    9584:	add	x1, x1, #0x458
    9588:	str	x1, [x0, #32]
    958c:	ldr	x0, [sp, #40]
    9590:	ldr	x0, [x0]
    9594:	ldr	x1, [sp, #24]
    9598:	bl	9480 <lzma_filter_flags_encode@@XZ_5.0+0x504>
    959c:	mov	w0, #0x0                   	// #0
    95a0:	ldp	x29, x30, [sp], #48
    95a4:	ret

00000000000095a8 <lzma_index_encoder@@XZ_5.0>:
    95a8:	stp	x29, x30, [sp, #-48]!
    95ac:	mov	x29, sp
    95b0:	str	x0, [sp, #24]
    95b4:	str	x1, [sp, #16]
    95b8:	ldr	x0, [sp, #24]
    95bc:	bl	3b00 <lzma_version_string@@XZ_5.0+0x410>
    95c0:	str	w0, [sp, #44]
    95c4:	ldr	w0, [sp, #44]
    95c8:	cmp	w0, #0x0
    95cc:	b.eq	95d8 <lzma_index_encoder@@XZ_5.0+0x30>  // b.none
    95d0:	ldr	w0, [sp, #44]
    95d4:	b	9640 <lzma_index_encoder@@XZ_5.0+0x98>
    95d8:	ldr	x0, [sp, #24]
    95dc:	ldr	x0, [x0, #56]
    95e0:	mov	x3, x0
    95e4:	ldr	x0, [sp, #24]
    95e8:	ldr	x0, [x0, #48]
    95ec:	ldr	x2, [sp, #16]
    95f0:	mov	x1, x0
    95f4:	mov	x0, x3
    95f8:	bl	94d0 <lzma_filter_flags_encode@@XZ_5.0+0x554>
    95fc:	str	w0, [sp, #40]
    9600:	ldr	w0, [sp, #40]
    9604:	cmp	w0, #0x0
    9608:	b.eq	961c <lzma_index_encoder@@XZ_5.0+0x74>  // b.none
    960c:	ldr	x0, [sp, #24]
    9610:	bl	3320 <lzma_end@plt>
    9614:	ldr	w0, [sp, #40]
    9618:	b	9640 <lzma_index_encoder@@XZ_5.0+0x98>
    961c:	ldr	x0, [sp, #24]
    9620:	ldr	x0, [x0, #56]
    9624:	mov	w1, #0x1                   	// #1
    9628:	strb	w1, [x0, #88]
    962c:	ldr	x0, [sp, #24]
    9630:	ldr	x0, [x0, #56]
    9634:	mov	w1, #0x1                   	// #1
    9638:	strb	w1, [x0, #91]
    963c:	mov	w0, #0x0                   	// #0
    9640:	ldp	x29, x30, [sp], #48
    9644:	ret

0000000000009648 <lzma_index_buffer_encode@@XZ_5.0>:
    9648:	sub	sp, sp, #0x1b0
    964c:	stp	x29, x30, [sp, #16]
    9650:	add	x29, sp, #0x10
    9654:	str	x19, [sp, #32]
    9658:	str	x0, [sp, #72]
    965c:	str	x1, [sp, #64]
    9660:	str	x2, [sp, #56]
    9664:	str	x3, [sp, #48]
    9668:	ldr	x0, [sp, #72]
    966c:	cmp	x0, #0x0
    9670:	b.eq	96a0 <lzma_index_buffer_encode@@XZ_5.0+0x58>  // b.none
    9674:	ldr	x0, [sp, #64]
    9678:	cmp	x0, #0x0
    967c:	b.eq	96a0 <lzma_index_buffer_encode@@XZ_5.0+0x58>  // b.none
    9680:	ldr	x0, [sp, #56]
    9684:	cmp	x0, #0x0
    9688:	b.eq	96a0 <lzma_index_buffer_encode@@XZ_5.0+0x58>  // b.none
    968c:	ldr	x0, [sp, #56]
    9690:	ldr	x0, [x0]
    9694:	ldr	x1, [sp, #48]
    9698:	cmp	x1, x0
    969c:	b.cs	96a8 <lzma_index_buffer_encode@@XZ_5.0+0x60>  // b.hs, b.nlast
    96a0:	mov	w0, #0xb                   	// #11
    96a4:	b	9740 <lzma_index_buffer_encode@@XZ_5.0+0xf8>
    96a8:	ldr	x0, [sp, #56]
    96ac:	ldr	x0, [x0]
    96b0:	ldr	x1, [sp, #48]
    96b4:	sub	x19, x1, x0
    96b8:	ldr	x0, [sp, #72]
    96bc:	bl	3510 <lzma_index_size@plt>
    96c0:	cmp	x19, x0
    96c4:	b.cs	96d0 <lzma_index_buffer_encode@@XZ_5.0+0x88>  // b.hs, b.nlast
    96c8:	mov	w0, #0xa                   	// #10
    96cc:	b	9740 <lzma_index_buffer_encode@@XZ_5.0+0xf8>
    96d0:	add	x0, sp, #0x50
    96d4:	ldr	x1, [sp, #72]
    96d8:	bl	9480 <lzma_filter_flags_encode@@XZ_5.0+0x504>
    96dc:	ldr	x0, [sp, #56]
    96e0:	ldr	x0, [x0]
    96e4:	str	x0, [sp, #416]
    96e8:	add	x0, sp, #0x50
    96ec:	str	wzr, [sp]
    96f0:	ldr	x7, [sp, #48]
    96f4:	ldr	x6, [sp, #56]
    96f8:	ldr	x5, [sp, #64]
    96fc:	mov	x4, #0x0                   	// #0
    9700:	mov	x3, #0x0                   	// #0
    9704:	mov	x2, #0x0                   	// #0
    9708:	mov	x1, #0x0                   	// #0
    970c:	bl	90c0 <lzma_filter_flags_encode@@XZ_5.0+0x144>
    9710:	str	w0, [sp, #428]
    9714:	ldr	w0, [sp, #428]
    9718:	cmp	w0, #0x1
    971c:	b.ne	9728 <lzma_index_buffer_encode@@XZ_5.0+0xe0>  // b.any
    9720:	str	wzr, [sp, #428]
    9724:	b	973c <lzma_index_buffer_encode@@XZ_5.0+0xf4>
    9728:	ldr	x0, [sp, #56]
    972c:	ldr	x1, [sp, #416]
    9730:	str	x1, [x0]
    9734:	mov	w0, #0xb                   	// #11
    9738:	str	w0, [sp, #428]
    973c:	ldr	w0, [sp, #428]
    9740:	ldr	x19, [sp, #32]
    9744:	ldp	x29, x30, [sp, #16]
    9748:	add	sp, sp, #0x1b0
    974c:	ret

0000000000009750 <lzma_stream_buffer_bound@@XZ_5.0>:
    9750:	stp	x29, x30, [sp, #-48]!
    9754:	mov	x29, sp
    9758:	str	x0, [sp, #24]
    975c:	ldr	x0, [sp, #24]
    9760:	bl	3120 <lzma_block_buffer_bound@plt>
    9764:	str	x0, [sp, #40]
    9768:	ldr	x0, [sp, #40]
    976c:	cmp	x0, #0x0
    9770:	b.ne	977c <lzma_stream_buffer_bound@@XZ_5.0+0x2c>  // b.any
    9774:	mov	x0, #0x0                   	// #0
    9778:	b	97a0 <lzma_stream_buffer_bound@@XZ_5.0+0x50>
    977c:	mov	x1, #0x7fffffffffffffff    	// #9223372036854775807
    9780:	ldr	x0, [sp, #40]
    9784:	sub	x0, x1, x0
    9788:	cmp	x0, #0x2f
    978c:	b.hi	9798 <lzma_stream_buffer_bound@@XZ_5.0+0x48>  // b.pmore
    9790:	mov	x0, #0x0                   	// #0
    9794:	b	97a0 <lzma_stream_buffer_bound@@XZ_5.0+0x50>
    9798:	ldr	x0, [sp, #40]
    979c:	add	x0, x0, #0x30
    97a0:	ldp	x29, x30, [sp], #48
    97a4:	ret

00000000000097a8 <lzma_stream_buffer_encode@@XZ_5.0>:
    97a8:	stp	x29, x30, [sp, #-368]!
    97ac:	mov	x29, sp
    97b0:	str	x0, [sp, #72]
    97b4:	str	w1, [sp, #68]
    97b8:	str	x2, [sp, #56]
    97bc:	str	x3, [sp, #48]
    97c0:	str	x4, [sp, #40]
    97c4:	str	x5, [sp, #32]
    97c8:	str	x6, [sp, #24]
    97cc:	str	x7, [sp, #16]
    97d0:	ldr	x0, [sp, #72]
    97d4:	cmp	x0, #0x0
    97d8:	b.eq	982c <lzma_stream_buffer_encode@@XZ_5.0+0x84>  // b.none
    97dc:	ldr	w0, [sp, #68]
    97e0:	cmp	w0, #0xf
    97e4:	b.hi	982c <lzma_stream_buffer_encode@@XZ_5.0+0x84>  // b.pmore
    97e8:	ldr	x0, [sp, #48]
    97ec:	cmp	x0, #0x0
    97f0:	b.ne	9800 <lzma_stream_buffer_encode@@XZ_5.0+0x58>  // b.any
    97f4:	ldr	x0, [sp, #40]
    97f8:	cmp	x0, #0x0
    97fc:	b.ne	982c <lzma_stream_buffer_encode@@XZ_5.0+0x84>  // b.any
    9800:	ldr	x0, [sp, #32]
    9804:	cmp	x0, #0x0
    9808:	b.eq	982c <lzma_stream_buffer_encode@@XZ_5.0+0x84>  // b.none
    980c:	ldr	x0, [sp, #24]
    9810:	cmp	x0, #0x0
    9814:	b.eq	982c <lzma_stream_buffer_encode@@XZ_5.0+0x84>  // b.none
    9818:	ldr	x0, [sp, #24]
    981c:	ldr	x0, [x0]
    9820:	ldr	x1, [sp, #16]
    9824:	cmp	x1, x0
    9828:	b.cs	9834 <lzma_stream_buffer_encode@@XZ_5.0+0x8c>  // b.hs, b.nlast
    982c:	mov	w0, #0xb                   	// #11
    9830:	b	9a44 <lzma_stream_buffer_encode@@XZ_5.0+0x29c>
    9834:	ldr	w0, [sp, #68]
    9838:	bl	30e0 <lzma_check_is_supported@plt>
    983c:	and	w0, w0, #0xff
    9840:	cmp	w0, #0x0
    9844:	b.ne	9850 <lzma_stream_buffer_encode@@XZ_5.0+0xa8>  // b.any
    9848:	mov	w0, #0x3                   	// #3
    984c:	b	9a44 <lzma_stream_buffer_encode@@XZ_5.0+0x29c>
    9850:	ldr	x0, [sp, #24]
    9854:	ldr	x0, [x0]
    9858:	str	x0, [sp, #344]
    985c:	ldr	x0, [sp, #344]
    9860:	ldr	x1, [sp, #16]
    9864:	sub	x0, x1, x0
    9868:	cmp	x0, #0x18
    986c:	b.hi	9878 <lzma_stream_buffer_encode@@XZ_5.0+0xd0>  // b.pmore
    9870:	mov	w0, #0xa                   	// #10
    9874:	b	9a44 <lzma_stream_buffer_encode@@XZ_5.0+0x29c>
    9878:	ldr	x0, [sp, #16]
    987c:	sub	x0, x0, #0xc
    9880:	str	x0, [sp, #16]
    9884:	stp	xzr, xzr, [sp, #288]
    9888:	stp	xzr, xzr, [sp, #304]
    988c:	stp	xzr, xzr, [sp, #320]
    9890:	str	xzr, [sp, #336]
    9894:	ldr	w0, [sp, #68]
    9898:	str	w0, [sp, #304]
    989c:	ldr	x0, [sp, #344]
    98a0:	ldr	x1, [sp, #32]
    98a4:	add	x1, x1, x0
    98a8:	add	x0, sp, #0x120
    98ac:	bl	3390 <lzma_stream_header_encode@plt>
    98b0:	cmp	w0, #0x0
    98b4:	b.eq	98c0 <lzma_stream_buffer_encode@@XZ_5.0+0x118>  // b.none
    98b8:	mov	w0, #0xb                   	// #11
    98bc:	b	9a44 <lzma_stream_buffer_encode@@XZ_5.0+0x29c>
    98c0:	ldr	x0, [sp, #344]
    98c4:	add	x0, x0, #0xc
    98c8:	str	x0, [sp, #344]
    98cc:	stp	xzr, xzr, [sp, #80]
    98d0:	stp	xzr, xzr, [sp, #96]
    98d4:	stp	xzr, xzr, [sp, #112]
    98d8:	stp	xzr, xzr, [sp, #128]
    98dc:	stp	xzr, xzr, [sp, #144]
    98e0:	stp	xzr, xzr, [sp, #160]
    98e4:	stp	xzr, xzr, [sp, #176]
    98e8:	stp	xzr, xzr, [sp, #192]
    98ec:	stp	xzr, xzr, [sp, #208]
    98f0:	stp	xzr, xzr, [sp, #224]
    98f4:	stp	xzr, xzr, [sp, #240]
    98f8:	stp	xzr, xzr, [sp, #256]
    98fc:	stp	xzr, xzr, [sp, #272]
    9900:	ldr	w0, [sp, #68]
    9904:	str	w0, [sp, #88]
    9908:	ldr	x0, [sp, #72]
    990c:	str	x0, [sp, #112]
    9910:	ldr	x0, [sp, #40]
    9914:	cmp	x0, #0x0
    9918:	b.eq	9958 <lzma_stream_buffer_encode@@XZ_5.0+0x1b0>  // b.none
    991c:	add	x1, sp, #0x158
    9920:	add	x0, sp, #0x50
    9924:	ldr	x6, [sp, #16]
    9928:	mov	x5, x1
    992c:	ldr	x4, [sp, #32]
    9930:	ldr	x3, [sp, #40]
    9934:	ldr	x2, [sp, #48]
    9938:	ldr	x1, [sp, #56]
    993c:	bl	30d0 <lzma_block_buffer_encode@plt>
    9940:	str	w0, [sp, #360]
    9944:	ldr	w0, [sp, #360]
    9948:	cmp	w0, #0x0
    994c:	b.eq	9958 <lzma_stream_buffer_encode@@XZ_5.0+0x1b0>  // b.none
    9950:	ldr	w0, [sp, #360]
    9954:	b	9a44 <lzma_stream_buffer_encode@@XZ_5.0+0x29c>
    9958:	ldr	x0, [sp, #56]
    995c:	bl	33b0 <lzma_index_init@plt>
    9960:	str	x0, [sp, #352]
    9964:	ldr	x0, [sp, #352]
    9968:	cmp	x0, #0x0
    996c:	b.ne	9978 <lzma_stream_buffer_encode@@XZ_5.0+0x1d0>  // b.any
    9970:	mov	w0, #0x5                   	// #5
    9974:	b	9a44 <lzma_stream_buffer_encode@@XZ_5.0+0x29c>
    9978:	str	wzr, [sp, #364]
    997c:	ldr	x0, [sp, #40]
    9980:	cmp	x0, #0x0
    9984:	b.eq	99b0 <lzma_stream_buffer_encode@@XZ_5.0+0x208>  // b.none
    9988:	add	x0, sp, #0x50
    998c:	bl	3190 <lzma_block_unpadded_size@plt>
    9990:	mov	x1, x0
    9994:	ldr	x0, [sp, #104]
    9998:	mov	x3, x0
    999c:	mov	x2, x1
    99a0:	ldr	x1, [sp, #56]
    99a4:	ldr	x0, [sp, #352]
    99a8:	bl	3300 <lzma_index_append@plt>
    99ac:	str	w0, [sp, #364]
    99b0:	ldr	w0, [sp, #364]
    99b4:	cmp	w0, #0x0
    99b8:	b.ne	99e4 <lzma_stream_buffer_encode@@XZ_5.0+0x23c>  // b.any
    99bc:	add	x0, sp, #0x158
    99c0:	ldr	x3, [sp, #16]
    99c4:	mov	x2, x0
    99c8:	ldr	x1, [sp, #32]
    99cc:	ldr	x0, [sp, #352]
    99d0:	bl	3100 <lzma_index_buffer_encode@plt>
    99d4:	str	w0, [sp, #364]
    99d8:	ldr	x0, [sp, #352]
    99dc:	bl	3510 <lzma_index_size@plt>
    99e0:	str	x0, [sp, #296]
    99e4:	ldr	x1, [sp, #56]
    99e8:	ldr	x0, [sp, #352]
    99ec:	bl	33e0 <lzma_index_end@plt>
    99f0:	ldr	w0, [sp, #364]
    99f4:	cmp	w0, #0x0
    99f8:	b.eq	9a04 <lzma_stream_buffer_encode@@XZ_5.0+0x25c>  // b.none
    99fc:	ldr	w0, [sp, #364]
    9a00:	b	9a44 <lzma_stream_buffer_encode@@XZ_5.0+0x29c>
    9a04:	ldr	x0, [sp, #344]
    9a08:	ldr	x1, [sp, #32]
    9a0c:	add	x1, x1, x0
    9a10:	add	x0, sp, #0x120
    9a14:	bl	3210 <lzma_stream_footer_encode@plt>
    9a18:	cmp	w0, #0x0
    9a1c:	b.eq	9a28 <lzma_stream_buffer_encode@@XZ_5.0+0x280>  // b.none
    9a20:	mov	w0, #0xb                   	// #11
    9a24:	b	9a44 <lzma_stream_buffer_encode@@XZ_5.0+0x29c>
    9a28:	ldr	x0, [sp, #344]
    9a2c:	add	x0, x0, #0xc
    9a30:	str	x0, [sp, #344]
    9a34:	ldr	x1, [sp, #344]
    9a38:	ldr	x0, [sp, #24]
    9a3c:	str	x1, [x0]
    9a40:	mov	w0, #0x0                   	// #0
    9a44:	ldp	x29, x30, [sp], #368
    9a48:	ret
    9a4c:	stp	x29, x30, [sp, #-48]!
    9a50:	mov	x29, sp
    9a54:	str	x0, [sp, #24]
    9a58:	str	x1, [sp, #16]
    9a5c:	ldr	x0, [sp, #24]
    9a60:	mov	x1, #0xffffffffffffffff    	// #-1
    9a64:	str	x1, [x0, #96]
    9a68:	ldr	x0, [sp, #24]
    9a6c:	mov	x1, #0xffffffffffffffff    	// #-1
    9a70:	str	x1, [x0, #104]
    9a74:	ldr	x0, [sp, #24]
    9a78:	add	x0, x0, #0x50
    9a7c:	bl	3160 <lzma_block_header_size@plt>
    9a80:	str	w0, [sp, #44]
    9a84:	ldr	w0, [sp, #44]
    9a88:	cmp	w0, #0x0
    9a8c:	b.eq	9a98 <lzma_stream_buffer_encode@@XZ_5.0+0x2f0>  // b.none
    9a90:	ldr	w0, [sp, #44]
    9a94:	b	9ab8 <lzma_stream_buffer_encode@@XZ_5.0+0x310>
    9a98:	ldr	x0, [sp, #24]
    9a9c:	add	x3, x0, #0x8
    9aa0:	ldr	x0, [sp, #24]
    9aa4:	add	x0, x0, #0x50
    9aa8:	mov	x2, x0
    9aac:	ldr	x1, [sp, #16]
    9ab0:	mov	x0, x3
    9ab4:	bl	80a8 <lzma_block_uncomp_encode@@XZ_5.2+0x41c>
    9ab8:	ldp	x29, x30, [sp], #48
    9abc:	ret
    9ac0:	sub	sp, sp, #0xc0
    9ac4:	stp	x29, x30, [sp, #16]
    9ac8:	add	x29, sp, #0x10
    9acc:	str	x0, [sp, #88]
    9ad0:	str	x1, [sp, #80]
    9ad4:	str	x2, [sp, #72]
    9ad8:	str	x3, [sp, #64]
    9adc:	str	x4, [sp, #56]
    9ae0:	str	x5, [sp, #48]
    9ae4:	str	x6, [sp, #40]
    9ae8:	str	x7, [sp, #32]
    9aec:	ldr	x0, [sp, #88]
    9af0:	str	x0, [sp, #184]
    9af4:	b	9e70 <lzma_stream_buffer_encode@@XZ_5.0+0x6c8>
    9af8:	ldr	x0, [sp, #184]
    9afc:	ldr	w0, [x0]
    9b00:	cmp	w0, #0x5
    9b04:	b.eq	9b54 <lzma_stream_buffer_encode@@XZ_5.0+0x3ac>  // b.none
    9b08:	cmp	w0, #0x5
    9b0c:	b.hi	9e68 <lzma_stream_buffer_encode@@XZ_5.0+0x6c0>  // b.pmore
    9b10:	cmp	w0, #0x4
    9b14:	b.eq	9db4 <lzma_stream_buffer_encode@@XZ_5.0+0x60c>  // b.none
    9b18:	cmp	w0, #0x4
    9b1c:	b.hi	9e68 <lzma_stream_buffer_encode@@XZ_5.0+0x6c0>  // b.pmore
    9b20:	cmp	w0, #0x3
    9b24:	b.eq	9cec <lzma_stream_buffer_encode@@XZ_5.0+0x544>  // b.none
    9b28:	cmp	w0, #0x3
    9b2c:	b.hi	9e68 <lzma_stream_buffer_encode@@XZ_5.0+0x6c0>  // b.pmore
    9b30:	cmp	w0, #0x2
    9b34:	b.eq	9b54 <lzma_stream_buffer_encode@@XZ_5.0+0x3ac>  // b.none
    9b38:	cmp	w0, #0x2
    9b3c:	b.hi	9e68 <lzma_stream_buffer_encode@@XZ_5.0+0x6c0>  // b.pmore
    9b40:	cmp	w0, #0x0
    9b44:	b.eq	9b54 <lzma_stream_buffer_encode@@XZ_5.0+0x3ac>  // b.none
    9b48:	cmp	w0, #0x1
    9b4c:	b.eq	9bdc <lzma_stream_buffer_encode@@XZ_5.0+0x434>  // b.none
    9b50:	b	9e68 <lzma_stream_buffer_encode@@XZ_5.0+0x6c0>
    9b54:	ldr	x0, [sp, #184]
    9b58:	add	x6, x0, #0x1d0
    9b5c:	ldr	x0, [sp, #184]
    9b60:	add	x1, x0, #0x1c0
    9b64:	ldr	x0, [sp, #184]
    9b68:	ldr	x0, [x0, #456]
    9b6c:	ldr	x5, [sp, #32]
    9b70:	ldr	x4, [sp, #40]
    9b74:	ldr	x3, [sp, #48]
    9b78:	mov	x2, x0
    9b7c:	mov	x0, x6
    9b80:	bl	3870 <lzma_version_string@@XZ_5.0+0x180>
    9b84:	ldr	x0, [sp, #184]
    9b88:	ldr	x1, [x0, #448]
    9b8c:	ldr	x0, [sp, #184]
    9b90:	ldr	x0, [x0, #456]
    9b94:	cmp	x1, x0
    9b98:	b.cs	9ba4 <lzma_stream_buffer_encode@@XZ_5.0+0x3fc>  // b.hs, b.nlast
    9b9c:	mov	w0, #0x0                   	// #0
    9ba0:	b	9e88 <lzma_stream_buffer_encode@@XZ_5.0+0x6e0>
    9ba4:	ldr	x0, [sp, #184]
    9ba8:	ldr	w0, [x0]
    9bac:	cmp	w0, #0x5
    9bb0:	b.ne	9bbc <lzma_stream_buffer_encode@@XZ_5.0+0x414>  // b.any
    9bb4:	mov	w0, #0x1                   	// #1
    9bb8:	b	9e88 <lzma_stream_buffer_encode@@XZ_5.0+0x6e0>
    9bbc:	ldr	x0, [sp, #184]
    9bc0:	str	xzr, [x0, #448]
    9bc4:	ldr	x0, [sp, #184]
    9bc8:	ldr	w0, [x0]
    9bcc:	add	w1, w0, #0x1
    9bd0:	ldr	x0, [sp, #184]
    9bd4:	str	w1, [x0]
    9bd8:	b	9e70 <lzma_stream_buffer_encode@@XZ_5.0+0x6c8>
    9bdc:	ldr	x0, [sp, #64]
    9be0:	ldr	x0, [x0]
    9be4:	ldr	x1, [sp, #56]
    9be8:	cmp	x1, x0
    9bec:	b.ne	9c58 <lzma_stream_buffer_encode@@XZ_5.0+0x4b0>  // b.any
    9bf0:	ldr	w0, [sp, #192]
    9bf4:	cmp	w0, #0x3
    9bf8:	b.eq	9c10 <lzma_stream_buffer_encode@@XZ_5.0+0x468>  // b.none
    9bfc:	ldr	w0, [sp, #192]
    9c00:	cmp	w0, #0x0
    9c04:	cset	w0, ne  // ne = any
    9c08:	and	w0, w0, #0xff
    9c0c:	b	9e88 <lzma_stream_buffer_encode@@XZ_5.0+0x6e0>
    9c10:	ldr	x0, [sp, #184]
    9c14:	add	x3, x0, #0x170
    9c18:	ldr	x0, [sp, #184]
    9c1c:	ldr	x0, [x0, #440]
    9c20:	mov	x2, x0
    9c24:	ldr	x1, [sp, #80]
    9c28:	mov	x0, x3
    9c2c:	bl	94d0 <lzma_filter_flags_encode@@XZ_5.0+0x554>
    9c30:	str	w0, [sp, #156]
    9c34:	ldr	w0, [sp, #156]
    9c38:	cmp	w0, #0x0
    9c3c:	b.eq	9c48 <lzma_stream_buffer_encode@@XZ_5.0+0x4a0>  // b.none
    9c40:	ldr	w0, [sp, #156]
    9c44:	b	9e88 <lzma_stream_buffer_encode@@XZ_5.0+0x6e0>
    9c48:	ldr	x0, [sp, #184]
    9c4c:	mov	w1, #0x4                   	// #4
    9c50:	str	w1, [x0]
    9c54:	b	9e70 <lzma_stream_buffer_encode@@XZ_5.0+0x6c8>
    9c58:	ldr	x0, [sp, #184]
    9c5c:	ldrb	w0, [x0, #4]
    9c60:	eor	w0, w0, #0x1
    9c64:	and	w0, w0, #0xff
    9c68:	cmp	w0, #0x0
    9c6c:	b.eq	9c94 <lzma_stream_buffer_encode@@XZ_5.0+0x4ec>  // b.none
    9c70:	ldr	x1, [sp, #80]
    9c74:	ldr	x0, [sp, #184]
    9c78:	bl	9a4c <lzma_stream_buffer_encode@@XZ_5.0+0x2a4>
    9c7c:	str	w0, [sp, #160]
    9c80:	ldr	w0, [sp, #160]
    9c84:	cmp	w0, #0x0
    9c88:	b.eq	9c94 <lzma_stream_buffer_encode@@XZ_5.0+0x4ec>  // b.none
    9c8c:	ldr	w0, [sp, #160]
    9c90:	b	9e88 <lzma_stream_buffer_encode@@XZ_5.0+0x6e0>
    9c94:	ldr	x0, [sp, #184]
    9c98:	strb	wzr, [x0, #4]
    9c9c:	ldr	x0, [sp, #184]
    9ca0:	add	x2, x0, #0x50
    9ca4:	ldr	x0, [sp, #184]
    9ca8:	add	x0, x0, #0x1d0
    9cac:	mov	x1, x0
    9cb0:	mov	x0, x2
    9cb4:	bl	3540 <lzma_block_header_encode@plt>
    9cb8:	cmp	w0, #0x0
    9cbc:	b.eq	9cc8 <lzma_stream_buffer_encode@@XZ_5.0+0x520>  // b.none
    9cc0:	mov	w0, #0xb                   	// #11
    9cc4:	b	9e88 <lzma_stream_buffer_encode@@XZ_5.0+0x6e0>
    9cc8:	ldr	x0, [sp, #184]
    9ccc:	ldr	w0, [x0, #84]
    9cd0:	mov	w1, w0
    9cd4:	ldr	x0, [sp, #184]
    9cd8:	str	x1, [x0, #456]
    9cdc:	ldr	x0, [sp, #184]
    9ce0:	mov	w1, #0x2                   	// #2
    9ce4:	str	w1, [x0]
    9ce8:	b	9e70 <lzma_stream_buffer_encode@@XZ_5.0+0x6c8>
    9cec:	ldr	x0, [sp, #184]
    9cf0:	ldr	x8, [x0, #32]
    9cf4:	ldr	x0, [sp, #184]
    9cf8:	ldr	x9, [x0, #8]
    9cfc:	adrp	x0, 2c000 <lzma_mode_is_supported@@XZ_5.0+0x11368>
    9d00:	add	x0, x0, #0x68
    9d04:	ldr	w1, [sp, #192]
    9d08:	ldr	w0, [x0, x1, lsl #2]
    9d0c:	str	w0, [sp]
    9d10:	ldr	x7, [sp, #32]
    9d14:	ldr	x6, [sp, #40]
    9d18:	ldr	x5, [sp, #48]
    9d1c:	ldr	x4, [sp, #56]
    9d20:	ldr	x3, [sp, #64]
    9d24:	ldr	x2, [sp, #72]
    9d28:	ldr	x1, [sp, #80]
    9d2c:	mov	x0, x9
    9d30:	blr	x8
    9d34:	str	w0, [sp, #176]
    9d38:	ldr	w0, [sp, #176]
    9d3c:	cmp	w0, #0x1
    9d40:	b.ne	9d50 <lzma_stream_buffer_encode@@XZ_5.0+0x5a8>  // b.any
    9d44:	ldr	w0, [sp, #192]
    9d48:	cmp	w0, #0x1
    9d4c:	b.ne	9d58 <lzma_stream_buffer_encode@@XZ_5.0+0x5b0>  // b.any
    9d50:	ldr	w0, [sp, #176]
    9d54:	b	9e88 <lzma_stream_buffer_encode@@XZ_5.0+0x6e0>
    9d58:	ldr	x0, [sp, #184]
    9d5c:	add	x0, x0, #0x50
    9d60:	bl	3190 <lzma_block_unpadded_size@plt>
    9d64:	str	x0, [sp, #168]
    9d68:	ldr	x0, [sp, #184]
    9d6c:	ldr	x4, [x0, #440]
    9d70:	ldr	x0, [sp, #184]
    9d74:	ldr	x0, [x0, #104]
    9d78:	mov	x3, x0
    9d7c:	ldr	x2, [sp, #168]
    9d80:	ldr	x1, [sp, #80]
    9d84:	mov	x0, x4
    9d88:	bl	3300 <lzma_index_append@plt>
    9d8c:	str	w0, [sp, #164]
    9d90:	ldr	w0, [sp, #164]
    9d94:	cmp	w0, #0x0
    9d98:	b.eq	9da4 <lzma_stream_buffer_encode@@XZ_5.0+0x5fc>  // b.none
    9d9c:	ldr	w0, [sp, #164]
    9da0:	b	9e88 <lzma_stream_buffer_encode@@XZ_5.0+0x6e0>
    9da4:	ldr	x0, [sp, #184]
    9da8:	mov	w1, #0x1                   	// #1
    9dac:	str	w1, [x0]
    9db0:	b	9e70 <lzma_stream_buffer_encode@@XZ_5.0+0x6c8>
    9db4:	ldr	x0, [sp, #184]
    9db8:	ldr	x8, [x0, #392]
    9dbc:	ldr	x0, [sp, #184]
    9dc0:	ldr	x0, [x0, #368]
    9dc4:	str	wzr, [sp]
    9dc8:	ldr	x7, [sp, #32]
    9dcc:	ldr	x6, [sp, #40]
    9dd0:	ldr	x5, [sp, #48]
    9dd4:	mov	x4, #0x0                   	// #0
    9dd8:	mov	x3, #0x0                   	// #0
    9ddc:	mov	x2, #0x0                   	// #0
    9de0:	ldr	x1, [sp, #80]
    9de4:	blr	x8
    9de8:	str	w0, [sp, #180]
    9dec:	ldr	w0, [sp, #180]
    9df0:	cmp	w0, #0x1
    9df4:	b.eq	9e00 <lzma_stream_buffer_encode@@XZ_5.0+0x658>  // b.none
    9df8:	ldr	w0, [sp, #180]
    9dfc:	b	9e88 <lzma_stream_buffer_encode@@XZ_5.0+0x6e0>
    9e00:	stp	xzr, xzr, [sp, #96]
    9e04:	stp	xzr, xzr, [sp, #112]
    9e08:	stp	xzr, xzr, [sp, #128]
    9e0c:	str	xzr, [sp, #144]
    9e10:	ldr	x0, [sp, #184]
    9e14:	ldr	x0, [x0, #440]
    9e18:	bl	3510 <lzma_index_size@plt>
    9e1c:	str	x0, [sp, #104]
    9e20:	ldr	x0, [sp, #184]
    9e24:	ldr	w0, [x0, #88]
    9e28:	str	w0, [sp, #112]
    9e2c:	ldr	x0, [sp, #184]
    9e30:	add	x1, x0, #0x1d0
    9e34:	add	x0, sp, #0x60
    9e38:	bl	3210 <lzma_stream_footer_encode@plt>
    9e3c:	cmp	w0, #0x0
    9e40:	b.eq	9e4c <lzma_stream_buffer_encode@@XZ_5.0+0x6a4>  // b.none
    9e44:	mov	w0, #0xb                   	// #11
    9e48:	b	9e88 <lzma_stream_buffer_encode@@XZ_5.0+0x6e0>
    9e4c:	ldr	x0, [sp, #184]
    9e50:	mov	x1, #0xc                   	// #12
    9e54:	str	x1, [x0, #456]
    9e58:	ldr	x0, [sp, #184]
    9e5c:	mov	w1, #0x5                   	// #5
    9e60:	str	w1, [x0]
    9e64:	b	9e70 <lzma_stream_buffer_encode@@XZ_5.0+0x6c8>
    9e68:	mov	w0, #0xb                   	// #11
    9e6c:	b	9e88 <lzma_stream_buffer_encode@@XZ_5.0+0x6e0>
    9e70:	ldr	x0, [sp, #40]
    9e74:	ldr	x0, [x0]
    9e78:	ldr	x1, [sp, #32]
    9e7c:	cmp	x1, x0
    9e80:	b.hi	9af8 <lzma_stream_buffer_encode@@XZ_5.0+0x350>  // b.pmore
    9e84:	mov	w0, #0x0                   	// #0
    9e88:	ldp	x29, x30, [sp, #16]
    9e8c:	add	sp, sp, #0xc0
    9e90:	ret
    9e94:	stp	x29, x30, [sp, #-48]!
    9e98:	mov	x29, sp
    9e9c:	str	x0, [sp, #24]
    9ea0:	str	x1, [sp, #16]
    9ea4:	ldr	x0, [sp, #24]
    9ea8:	str	x0, [sp, #32]
    9eac:	ldr	x0, [sp, #32]
    9eb0:	add	x0, x0, #0x8
    9eb4:	ldr	x1, [sp, #16]
    9eb8:	bl	3a48 <lzma_version_string@@XZ_5.0+0x358>
    9ebc:	ldr	x0, [sp, #32]
    9ec0:	add	x0, x0, #0x170
    9ec4:	ldr	x1, [sp, #16]
    9ec8:	bl	3a48 <lzma_version_string@@XZ_5.0+0x358>
    9ecc:	ldr	x0, [sp, #32]
    9ed0:	ldr	x0, [x0, #440]
    9ed4:	ldr	x1, [sp, #16]
    9ed8:	bl	33e0 <lzma_index_end@plt>
    9edc:	str	xzr, [sp, #40]
    9ee0:	b	9f10 <lzma_stream_buffer_encode@@XZ_5.0+0x768>
    9ee4:	ldr	x1, [sp, #32]
    9ee8:	ldr	x0, [sp, #40]
    9eec:	add	x0, x0, #0x12
    9ef0:	lsl	x0, x0, #4
    9ef4:	add	x0, x1, x0
    9ef8:	ldr	x0, [x0, #8]
    9efc:	ldr	x1, [sp, #16]
    9f00:	bl	3814 <lzma_version_string@@XZ_5.0+0x124>
    9f04:	ldr	x0, [sp, #40]
    9f08:	add	x0, x0, #0x1
    9f0c:	str	x0, [sp, #40]
    9f10:	ldr	x1, [sp, #32]
    9f14:	ldr	x0, [sp, #40]
    9f18:	add	x0, x0, #0x12
    9f1c:	lsl	x0, x0, #4
    9f20:	add	x0, x1, x0
    9f24:	ldr	x0, [x0]
    9f28:	cmn	x0, #0x1
    9f2c:	b.ne	9ee4 <lzma_stream_buffer_encode@@XZ_5.0+0x73c>  // b.any
    9f30:	ldr	x1, [sp, #16]
    9f34:	ldr	x0, [sp, #32]
    9f38:	bl	3814 <lzma_version_string@@XZ_5.0+0x124>
    9f3c:	nop
    9f40:	ldp	x29, x30, [sp], #48
    9f44:	ret
    9f48:	stp	x29, x30, [sp, #-80]!
    9f4c:	mov	x29, sp
    9f50:	str	x0, [sp, #40]
    9f54:	str	x1, [sp, #32]
    9f58:	str	x2, [sp, #24]
    9f5c:	str	x3, [sp, #16]
    9f60:	ldr	x0, [sp, #40]
    9f64:	str	x0, [sp, #64]
    9f68:	ldr	x0, [sp, #64]
    9f6c:	ldr	w0, [x0]
    9f70:	cmp	w0, #0x1
    9f74:	b.hi	9fd0 <lzma_stream_buffer_encode@@XZ_5.0+0x828>  // b.pmore
    9f78:	ldr	x0, [sp, #64]
    9f7c:	strb	wzr, [x0, #4]
    9f80:	ldr	x0, [sp, #64]
    9f84:	ldr	x1, [sp, #24]
    9f88:	str	x1, [x0, #112]
    9f8c:	ldr	x1, [sp, #32]
    9f90:	ldr	x0, [sp, #64]
    9f94:	bl	9a4c <lzma_stream_buffer_encode@@XZ_5.0+0x2a4>
    9f98:	str	w0, [sp, #56]
    9f9c:	ldr	x0, [sp, #64]
    9fa0:	add	x1, x0, #0x120
    9fa4:	ldr	x0, [sp, #64]
    9fa8:	str	x1, [x0, #112]
    9fac:	ldr	w0, [sp, #56]
    9fb0:	cmp	w0, #0x0
    9fb4:	b.eq	9fc0 <lzma_stream_buffer_encode@@XZ_5.0+0x818>  // b.none
    9fb8:	ldr	w0, [sp, #56]
    9fbc:	b	a08c <lzma_stream_buffer_encode@@XZ_5.0+0x8e4>
    9fc0:	ldr	x0, [sp, #64]
    9fc4:	mov	w1, #0x1                   	// #1
    9fc8:	strb	w1, [x0, #4]
    9fcc:	b	a020 <lzma_stream_buffer_encode@@XZ_5.0+0x878>
    9fd0:	ldr	x0, [sp, #64]
    9fd4:	ldr	w0, [x0]
    9fd8:	cmp	w0, #0x3
    9fdc:	b.hi	a018 <lzma_stream_buffer_encode@@XZ_5.0+0x870>  // b.pmore
    9fe0:	ldr	x0, [sp, #64]
    9fe4:	ldr	x4, [x0, #72]
    9fe8:	ldr	x0, [sp, #64]
    9fec:	ldr	x0, [x0, #8]
    9ff0:	ldr	x3, [sp, #16]
    9ff4:	ldr	x2, [sp, #24]
    9ff8:	ldr	x1, [sp, #32]
    9ffc:	blr	x4
    a000:	str	w0, [sp, #60]
    a004:	ldr	w0, [sp, #60]
    a008:	cmp	w0, #0x0
    a00c:	b.eq	a020 <lzma_stream_buffer_encode@@XZ_5.0+0x878>  // b.none
    a010:	ldr	w0, [sp, #60]
    a014:	b	a08c <lzma_stream_buffer_encode@@XZ_5.0+0x8e4>
    a018:	mov	w0, #0xb                   	// #11
    a01c:	b	a08c <lzma_stream_buffer_encode@@XZ_5.0+0x8e4>
    a020:	str	xzr, [sp, #72]
    a024:	b	a054 <lzma_stream_buffer_encode@@XZ_5.0+0x8ac>
    a028:	ldr	x1, [sp, #64]
    a02c:	ldr	x0, [sp, #72]
    a030:	add	x0, x0, #0x12
    a034:	lsl	x0, x0, #4
    a038:	add	x0, x1, x0
    a03c:	ldr	x0, [x0, #8]
    a040:	ldr	x1, [sp, #32]
    a044:	bl	3814 <lzma_version_string@@XZ_5.0+0x124>
    a048:	ldr	x0, [sp, #72]
    a04c:	add	x0, x0, #0x1
    a050:	str	x0, [sp, #72]
    a054:	ldr	x1, [sp, #64]
    a058:	ldr	x0, [sp, #72]
    a05c:	add	x0, x0, #0x12
    a060:	lsl	x0, x0, #4
    a064:	add	x0, x1, x0
    a068:	ldr	x0, [x0]
    a06c:	cmn	x0, #0x1
    a070:	b.ne	a028 <lzma_stream_buffer_encode@@XZ_5.0+0x880>  // b.any
    a074:	ldr	x0, [sp, #64]
    a078:	add	x0, x0, #0x120
    a07c:	ldr	x2, [sp, #32]
    a080:	mov	x1, x0
    a084:	ldr	x0, [sp, #24]
    a088:	bl	3240 <lzma_filters_copy@plt>
    a08c:	ldp	x29, x30, [sp], #80
    a090:	ret
    a094:	stp	x29, x30, [sp, #-192]!
    a098:	mov	x29, sp
    a09c:	str	x0, [sp, #40]
    a0a0:	str	x1, [sp, #32]
    a0a4:	str	x2, [sp, #24]
    a0a8:	str	w3, [sp, #20]
    a0ac:	ldr	x0, [sp, #40]
    a0b0:	ldr	x1, [x0, #16]
    a0b4:	adrp	x0, a000 <lzma_stream_buffer_encode@@XZ_5.0+0x858>
    a0b8:	add	x0, x0, #0x94
    a0bc:	cmp	x1, x0
    a0c0:	b.eq	a0d0 <lzma_stream_buffer_encode@@XZ_5.0+0x928>  // b.none
    a0c4:	ldr	x1, [sp, #32]
    a0c8:	ldr	x0, [sp, #40]
    a0cc:	bl	3a48 <lzma_version_string@@XZ_5.0+0x358>
    a0d0:	adrp	x0, a000 <lzma_stream_buffer_encode@@XZ_5.0+0x858>
    a0d4:	add	x1, x0, #0x94
    a0d8:	ldr	x0, [sp, #40]
    a0dc:	str	x1, [x0, #16]
    a0e0:	ldr	x0, [sp, #24]
    a0e4:	cmp	x0, #0x0
    a0e8:	b.ne	a0f4 <lzma_stream_buffer_encode@@XZ_5.0+0x94c>  // b.any
    a0ec:	mov	w0, #0xb                   	// #11
    a0f0:	b	a2d8 <lzma_stream_buffer_encode@@XZ_5.0+0xb30>
    a0f4:	ldr	x0, [sp, #40]
    a0f8:	ldr	x0, [x0]
    a0fc:	str	x0, [sp, #184]
    a100:	ldr	x0, [sp, #184]
    a104:	cmp	x0, #0x0
    a108:	b.ne	a218 <lzma_stream_buffer_encode@@XZ_5.0+0xa70>  // b.any
    a10c:	ldr	x1, [sp, #32]
    a110:	mov	x0, #0x5d0                 	// #1488
    a114:	bl	36fc <lzma_version_string@@XZ_5.0+0xc>
    a118:	str	x0, [sp, #184]
    a11c:	ldr	x0, [sp, #184]
    a120:	cmp	x0, #0x0
    a124:	b.ne	a130 <lzma_stream_buffer_encode@@XZ_5.0+0x988>  // b.any
    a128:	mov	w0, #0x5                   	// #5
    a12c:	b	a2d8 <lzma_stream_buffer_encode@@XZ_5.0+0xb30>
    a130:	ldr	x0, [sp, #40]
    a134:	ldr	x1, [sp, #184]
    a138:	str	x1, [x0]
    a13c:	ldr	x0, [sp, #40]
    a140:	adrp	x1, 9000 <lzma_filter_flags_encode@@XZ_5.0+0x84>
    a144:	add	x1, x1, #0xac0
    a148:	str	x1, [x0, #24]
    a14c:	ldr	x0, [sp, #40]
    a150:	adrp	x1, 9000 <lzma_filter_flags_encode@@XZ_5.0+0x84>
    a154:	add	x1, x1, #0xe94
    a158:	str	x1, [x0, #32]
    a15c:	ldr	x0, [sp, #40]
    a160:	adrp	x1, 9000 <lzma_filter_flags_encode@@XZ_5.0+0x84>
    a164:	add	x1, x1, #0xf48
    a168:	str	x1, [x0, #64]
    a16c:	ldr	x0, [sp, #184]
    a170:	mov	x1, #0xffffffffffffffff    	// #-1
    a174:	str	x1, [x0, #288]
    a178:	ldr	x0, [sp, #184]
    a17c:	str	xzr, [x0, #8]
    a180:	ldr	x0, [sp, #184]
    a184:	mov	x1, #0xffffffffffffffff    	// #-1
    a188:	str	x1, [x0, #16]
    a18c:	ldr	x0, [sp, #184]
    a190:	str	xzr, [x0, #24]
    a194:	ldr	x0, [sp, #184]
    a198:	str	xzr, [x0, #32]
    a19c:	ldr	x0, [sp, #184]
    a1a0:	str	xzr, [x0, #40]
    a1a4:	ldr	x0, [sp, #184]
    a1a8:	str	xzr, [x0, #48]
    a1ac:	ldr	x0, [sp, #184]
    a1b0:	str	xzr, [x0, #56]
    a1b4:	ldr	x0, [sp, #184]
    a1b8:	str	xzr, [x0, #64]
    a1bc:	ldr	x0, [sp, #184]
    a1c0:	str	xzr, [x0, #72]
    a1c4:	ldr	x0, [sp, #184]
    a1c8:	str	xzr, [x0, #368]
    a1cc:	ldr	x0, [sp, #184]
    a1d0:	mov	x1, #0xffffffffffffffff    	// #-1
    a1d4:	str	x1, [x0, #376]
    a1d8:	ldr	x0, [sp, #184]
    a1dc:	str	xzr, [x0, #384]
    a1e0:	ldr	x0, [sp, #184]
    a1e4:	str	xzr, [x0, #392]
    a1e8:	ldr	x0, [sp, #184]
    a1ec:	str	xzr, [x0, #400]
    a1f0:	ldr	x0, [sp, #184]
    a1f4:	str	xzr, [x0, #408]
    a1f8:	ldr	x0, [sp, #184]
    a1fc:	str	xzr, [x0, #416]
    a200:	ldr	x0, [sp, #184]
    a204:	str	xzr, [x0, #424]
    a208:	ldr	x0, [sp, #184]
    a20c:	str	xzr, [x0, #432]
    a210:	ldr	x0, [sp, #184]
    a214:	str	xzr, [x0, #440]
    a218:	ldr	x0, [sp, #184]
    a21c:	str	wzr, [x0]
    a220:	ldr	x0, [sp, #184]
    a224:	str	wzr, [x0, #80]
    a228:	ldr	x0, [sp, #184]
    a22c:	ldr	w1, [sp, #20]
    a230:	str	w1, [x0, #88]
    a234:	ldr	x0, [sp, #184]
    a238:	ldr	x0, [x0, #440]
    a23c:	ldr	x1, [sp, #32]
    a240:	bl	33e0 <lzma_index_end@plt>
    a244:	ldr	x0, [sp, #32]
    a248:	bl	33b0 <lzma_index_init@plt>
    a24c:	mov	x1, x0
    a250:	ldr	x0, [sp, #184]
    a254:	str	x1, [x0, #440]
    a258:	ldr	x0, [sp, #184]
    a25c:	ldr	x0, [x0, #440]
    a260:	cmp	x0, #0x0
    a264:	b.ne	a270 <lzma_stream_buffer_encode@@XZ_5.0+0xac8>  // b.any
    a268:	mov	w0, #0x5                   	// #5
    a26c:	b	a2d8 <lzma_stream_buffer_encode@@XZ_5.0+0xb30>
    a270:	stp	xzr, xzr, [sp, #120]
    a274:	stp	xzr, xzr, [sp, #136]
    a278:	stp	xzr, xzr, [sp, #152]
    a27c:	str	xzr, [sp, #168]
    a280:	ldr	w0, [sp, #20]
    a284:	str	w0, [sp, #136]
    a288:	ldr	x0, [sp, #184]
    a28c:	add	x1, x0, #0x1d0
    a290:	add	x0, sp, #0x78
    a294:	bl	3390 <lzma_stream_header_encode@plt>
    a298:	str	w0, [sp, #180]
    a29c:	ldr	w0, [sp, #180]
    a2a0:	cmp	w0, #0x0
    a2a4:	b.eq	a2b0 <lzma_stream_buffer_encode@@XZ_5.0+0xb08>  // b.none
    a2a8:	ldr	w0, [sp, #180]
    a2ac:	b	a2d8 <lzma_stream_buffer_encode@@XZ_5.0+0xb30>
    a2b0:	ldr	x0, [sp, #184]
    a2b4:	str	xzr, [x0, #448]
    a2b8:	ldr	x0, [sp, #184]
    a2bc:	mov	x1, #0xc                   	// #12
    a2c0:	str	x1, [x0, #456]
    a2c4:	mov	x3, #0x0                   	// #0
    a2c8:	ldr	x2, [sp, #24]
    a2cc:	ldr	x1, [sp, #32]
    a2d0:	ldr	x0, [sp, #184]
    a2d4:	bl	9f48 <lzma_stream_buffer_encode@@XZ_5.0+0x7a0>
    a2d8:	ldp	x29, x30, [sp], #192
    a2dc:	ret

000000000000a2e0 <lzma_stream_encoder@@XZ_5.0>:
    a2e0:	stp	x29, x30, [sp, #-64]!
    a2e4:	mov	x29, sp
    a2e8:	str	x0, [sp, #40]
    a2ec:	str	x1, [sp, #32]
    a2f0:	str	w2, [sp, #28]
    a2f4:	ldr	x0, [sp, #40]
    a2f8:	bl	3b00 <lzma_version_string@@XZ_5.0+0x410>
    a2fc:	str	w0, [sp, #60]
    a300:	ldr	w0, [sp, #60]
    a304:	cmp	w0, #0x0
    a308:	b.eq	a314 <lzma_stream_encoder@@XZ_5.0+0x34>  // b.none
    a30c:	ldr	w0, [sp, #60]
    a310:	b	a3b0 <lzma_stream_encoder@@XZ_5.0+0xd0>
    a314:	ldr	x0, [sp, #40]
    a318:	ldr	x0, [x0, #56]
    a31c:	mov	x4, x0
    a320:	ldr	x0, [sp, #40]
    a324:	ldr	x0, [x0, #48]
    a328:	ldr	w3, [sp, #28]
    a32c:	ldr	x2, [sp, #32]
    a330:	mov	x1, x0
    a334:	mov	x0, x4
    a338:	bl	a094 <lzma_stream_buffer_encode@@XZ_5.0+0x8ec>
    a33c:	str	w0, [sp, #56]
    a340:	ldr	w0, [sp, #56]
    a344:	cmp	w0, #0x0
    a348:	b.eq	a35c <lzma_stream_encoder@@XZ_5.0+0x7c>  // b.none
    a34c:	ldr	x0, [sp, #40]
    a350:	bl	3320 <lzma_end@plt>
    a354:	ldr	w0, [sp, #56]
    a358:	b	a3b0 <lzma_stream_encoder@@XZ_5.0+0xd0>
    a35c:	ldr	x0, [sp, #40]
    a360:	ldr	x0, [x0, #56]
    a364:	mov	w1, #0x1                   	// #1
    a368:	strb	w1, [x0, #88]
    a36c:	ldr	x0, [sp, #40]
    a370:	ldr	x0, [x0, #56]
    a374:	mov	w1, #0x1                   	// #1
    a378:	strb	w1, [x0, #89]
    a37c:	ldr	x0, [sp, #40]
    a380:	ldr	x0, [x0, #56]
    a384:	mov	w1, #0x1                   	// #1
    a388:	strb	w1, [x0, #90]
    a38c:	ldr	x0, [sp, #40]
    a390:	ldr	x0, [x0, #56]
    a394:	mov	w1, #0x1                   	// #1
    a398:	strb	w1, [x0, #92]
    a39c:	ldr	x0, [sp, #40]
    a3a0:	ldr	x0, [x0, #56]
    a3a4:	mov	w1, #0x1                   	// #1
    a3a8:	strb	w1, [x0, #91]
    a3ac:	mov	w0, #0x0                   	// #0
    a3b0:	ldp	x29, x30, [sp], #64
    a3b4:	ret
    a3b8:	sub	sp, sp, #0x10
    a3bc:	str	x0, [sp, #8]
    a3c0:	str	w1, [sp, #4]
    a3c4:	ldr	w0, [sp, #4]
    a3c8:	and	w1, w0, #0xff
    a3cc:	ldr	x0, [sp, #8]
    a3d0:	strb	w1, [x0]
    a3d4:	ldr	w0, [sp, #4]
    a3d8:	lsr	w1, w0, #8
    a3dc:	ldr	x0, [sp, #8]
    a3e0:	add	x0, x0, #0x1
    a3e4:	and	w1, w1, #0xff
    a3e8:	strb	w1, [x0]
    a3ec:	ldr	w0, [sp, #4]
    a3f0:	lsr	w1, w0, #16
    a3f4:	ldr	x0, [sp, #8]
    a3f8:	add	x0, x0, #0x2
    a3fc:	and	w1, w1, #0xff
    a400:	strb	w1, [x0]
    a404:	ldr	w0, [sp, #4]
    a408:	lsr	w1, w0, #24
    a40c:	ldr	x0, [sp, #8]
    a410:	add	x0, x0, #0x3
    a414:	and	w1, w1, #0xff
    a418:	strb	w1, [x0]
    a41c:	nop
    a420:	add	sp, sp, #0x10
    a424:	ret
    a428:	sub	sp, sp, #0x10
    a42c:	str	x0, [sp, #8]
    a430:	ldr	x0, [sp, #8]
    a434:	ldr	x0, [x0, #8]
    a438:	cmp	x0, #0x3
    a43c:	b.ls	a470 <lzma_stream_encoder@@XZ_5.0+0x190>  // b.plast
    a440:	ldr	x0, [sp, #8]
    a444:	ldr	x1, [x0, #8]
    a448:	mov	x0, #0x400000000           	// #17179869184
    a44c:	cmp	x1, x0
    a450:	b.hi	a470 <lzma_stream_encoder@@XZ_5.0+0x190>  // b.pmore
    a454:	ldr	x0, [sp, #8]
    a458:	ldr	x0, [x0, #8]
    a45c:	and	x0, x0, #0x3
    a460:	cmp	x0, #0x0
    a464:	b.ne	a470 <lzma_stream_encoder@@XZ_5.0+0x190>  // b.any
    a468:	mov	w0, #0x1                   	// #1
    a46c:	b	a474 <lzma_stream_encoder@@XZ_5.0+0x194>
    a470:	mov	w0, #0x0                   	// #0
    a474:	and	w0, w0, #0x1
    a478:	and	w0, w0, #0xff
    a47c:	add	sp, sp, #0x10
    a480:	ret
    a484:	sub	sp, sp, #0x10
    a488:	str	x0, [sp, #8]
    a48c:	str	x1, [sp]
    a490:	ldr	x0, [sp, #8]
    a494:	ldr	w0, [x0, #16]
    a498:	cmp	w0, #0xf
    a49c:	b.ls	a4a8 <lzma_stream_encoder@@XZ_5.0+0x1c8>  // b.plast
    a4a0:	mov	w0, #0x1                   	// #1
    a4a4:	b	a4cc <lzma_stream_encoder@@XZ_5.0+0x1ec>
    a4a8:	ldr	x0, [sp]
    a4ac:	strb	wzr, [x0]
    a4b0:	ldr	x0, [sp, #8]
    a4b4:	ldr	w1, [x0, #16]
    a4b8:	ldr	x0, [sp]
    a4bc:	add	x0, x0, #0x1
    a4c0:	and	w1, w1, #0xff
    a4c4:	strb	w1, [x0]
    a4c8:	mov	w0, #0x0                   	// #0
    a4cc:	add	sp, sp, #0x10
    a4d0:	ret

000000000000a4d4 <lzma_stream_header_encode@@XZ_5.0>:
    a4d4:	stp	x29, x30, [sp, #-48]!
    a4d8:	mov	x29, sp
    a4dc:	str	x0, [sp, #24]
    a4e0:	str	x1, [sp, #16]
    a4e4:	ldr	x0, [sp, #24]
    a4e8:	ldr	w0, [x0]
    a4ec:	cmp	w0, #0x0
    a4f0:	b.eq	a4fc <lzma_stream_header_encode@@XZ_5.0+0x28>  // b.none
    a4f4:	mov	w0, #0x8                   	// #8
    a4f8:	b	a570 <lzma_stream_header_encode@@XZ_5.0+0x9c>
    a4fc:	ldr	x2, [sp, #16]
    a500:	adrp	x0, 46000 <lzma_mode_is_supported@@XZ_5.0+0x2b368>
    a504:	ldr	x1, [x0, #3936]
    a508:	mov	x0, x2
    a50c:	ldr	w2, [x1]
    a510:	str	w2, [x0]
    a514:	ldrh	w1, [x1, #4]
    a518:	strh	w1, [x0, #4]
    a51c:	ldr	x0, [sp, #16]
    a520:	add	x0, x0, #0x6
    a524:	mov	x1, x0
    a528:	ldr	x0, [sp, #24]
    a52c:	bl	a484 <lzma_stream_encoder@@XZ_5.0+0x1a4>
    a530:	and	w0, w0, #0xff
    a534:	cmp	w0, #0x0
    a538:	b.eq	a544 <lzma_stream_header_encode@@XZ_5.0+0x70>  // b.none
    a53c:	mov	w0, #0xb                   	// #11
    a540:	b	a570 <lzma_stream_header_encode@@XZ_5.0+0x9c>
    a544:	ldr	x0, [sp, #16]
    a548:	add	x0, x0, #0x6
    a54c:	mov	w2, #0x0                   	// #0
    a550:	mov	x1, #0x2                   	// #2
    a554:	bl	31c0 <lzma_crc32@plt>
    a558:	str	w0, [sp, #44]
    a55c:	ldr	x0, [sp, #16]
    a560:	add	x0, x0, #0x8
    a564:	ldr	w1, [sp, #44]
    a568:	bl	a3b8 <lzma_stream_encoder@@XZ_5.0+0xd8>
    a56c:	mov	w0, #0x0                   	// #0
    a570:	ldp	x29, x30, [sp], #48
    a574:	ret

000000000000a578 <lzma_stream_footer_encode@@XZ_5.0>:
    a578:	stp	x29, x30, [sp, #-48]!
    a57c:	mov	x29, sp
    a580:	str	x0, [sp, #24]
    a584:	str	x1, [sp, #16]
    a588:	ldr	x0, [sp, #24]
    a58c:	ldr	w0, [x0]
    a590:	cmp	w0, #0x0
    a594:	b.eq	a5a0 <lzma_stream_footer_encode@@XZ_5.0+0x28>  // b.none
    a598:	mov	w0, #0x8                   	// #8
    a59c:	b	a650 <lzma_stream_footer_encode@@XZ_5.0+0xd8>
    a5a0:	ldr	x0, [sp, #24]
    a5a4:	bl	a428 <lzma_stream_encoder@@XZ_5.0+0x148>
    a5a8:	and	w0, w0, #0xff
    a5ac:	eor	w0, w0, #0x1
    a5b0:	and	w0, w0, #0xff
    a5b4:	cmp	w0, #0x0
    a5b8:	b.eq	a5c4 <lzma_stream_footer_encode@@XZ_5.0+0x4c>  // b.none
    a5bc:	mov	w0, #0xb                   	// #11
    a5c0:	b	a650 <lzma_stream_footer_encode@@XZ_5.0+0xd8>
    a5c4:	ldr	x0, [sp, #16]
    a5c8:	add	x2, x0, #0x4
    a5cc:	ldr	x0, [sp, #24]
    a5d0:	ldr	x0, [x0, #8]
    a5d4:	lsr	x0, x0, #2
    a5d8:	sub	w0, w0, #0x1
    a5dc:	mov	w1, w0
    a5e0:	mov	x0, x2
    a5e4:	bl	a3b8 <lzma_stream_encoder@@XZ_5.0+0xd8>
    a5e8:	ldr	x0, [sp, #16]
    a5ec:	add	x0, x0, #0x8
    a5f0:	mov	x1, x0
    a5f4:	ldr	x0, [sp, #24]
    a5f8:	bl	a484 <lzma_stream_encoder@@XZ_5.0+0x1a4>
    a5fc:	and	w0, w0, #0xff
    a600:	cmp	w0, #0x0
    a604:	b.eq	a610 <lzma_stream_footer_encode@@XZ_5.0+0x98>  // b.none
    a608:	mov	w0, #0xb                   	// #11
    a60c:	b	a650 <lzma_stream_footer_encode@@XZ_5.0+0xd8>
    a610:	ldr	x0, [sp, #16]
    a614:	add	x0, x0, #0x4
    a618:	mov	w2, #0x0                   	// #0
    a61c:	mov	x1, #0x6                   	// #6
    a620:	bl	31c0 <lzma_crc32@plt>
    a624:	str	w0, [sp, #44]
    a628:	ldr	w1, [sp, #44]
    a62c:	ldr	x0, [sp, #16]
    a630:	bl	a3b8 <lzma_stream_encoder@@XZ_5.0+0xd8>
    a634:	ldr	x0, [sp, #16]
    a638:	add	x0, x0, #0xa
    a63c:	adrp	x1, 46000 <lzma_mode_is_supported@@XZ_5.0+0x2b368>
    a640:	ldr	x1, [x1, #3976]
    a644:	ldrh	w1, [x1]
    a648:	strh	w1, [x0]
    a64c:	mov	w0, #0x0                   	// #0
    a650:	ldp	x29, x30, [sp], #48
    a654:	ret

000000000000a658 <lzma_vli_encode@@XZ_5.0>:
    a658:	sub	sp, sp, #0x40
    a65c:	str	x0, [sp, #40]
    a660:	str	x1, [sp, #32]
    a664:	str	x2, [sp, #24]
    a668:	str	x3, [sp, #16]
    a66c:	str	x4, [sp, #8]
    a670:	str	xzr, [sp, #56]
    a674:	ldr	x0, [sp, #32]
    a678:	cmp	x0, #0x0
    a67c:	b.ne	a6a4 <lzma_vli_encode@@XZ_5.0+0x4c>  // b.any
    a680:	add	x0, sp, #0x38
    a684:	str	x0, [sp, #32]
    a688:	ldr	x0, [sp, #16]
    a68c:	ldr	x0, [x0]
    a690:	ldr	x1, [sp, #8]
    a694:	cmp	x1, x0
    a698:	b.hi	a6c0 <lzma_vli_encode@@XZ_5.0+0x68>  // b.pmore
    a69c:	mov	w0, #0xb                   	// #11
    a6a0:	b	a7fc <lzma_vli_encode@@XZ_5.0+0x1a4>
    a6a4:	ldr	x0, [sp, #16]
    a6a8:	ldr	x0, [x0]
    a6ac:	ldr	x1, [sp, #8]
    a6b0:	cmp	x1, x0
    a6b4:	b.hi	a6c0 <lzma_vli_encode@@XZ_5.0+0x68>  // b.pmore
    a6b8:	mov	w0, #0xa                   	// #10
    a6bc:	b	a7fc <lzma_vli_encode@@XZ_5.0+0x1a4>
    a6c0:	ldr	x0, [sp, #32]
    a6c4:	ldr	x0, [x0]
    a6c8:	cmp	x0, #0x8
    a6cc:	b.hi	a6dc <lzma_vli_encode@@XZ_5.0+0x84>  // b.pmore
    a6d0:	ldr	x0, [sp, #40]
    a6d4:	cmp	x0, #0x0
    a6d8:	b.ge	a6e4 <lzma_vli_encode@@XZ_5.0+0x8c>  // b.tcont
    a6dc:	mov	w0, #0xb                   	// #11
    a6e0:	b	a7fc <lzma_vli_encode@@XZ_5.0+0x1a4>
    a6e4:	ldr	x0, [sp, #32]
    a6e8:	ldr	x0, [x0]
    a6ec:	mov	w1, w0
    a6f0:	mov	w0, w1
    a6f4:	lsl	w0, w0, #3
    a6f8:	sub	w0, w0, w1
    a6fc:	ldr	x1, [sp, #40]
    a700:	lsr	x0, x1, x0
    a704:	str	x0, [sp, #40]
    a708:	b	a798 <lzma_vli_encode@@XZ_5.0+0x140>
    a70c:	ldr	x0, [sp, #32]
    a710:	ldr	x0, [x0]
    a714:	add	x1, x0, #0x1
    a718:	ldr	x0, [sp, #32]
    a71c:	str	x1, [x0]
    a720:	ldr	x0, [sp, #40]
    a724:	and	w1, w0, #0xff
    a728:	ldr	x0, [sp, #16]
    a72c:	ldr	x0, [x0]
    a730:	ldr	x2, [sp, #24]
    a734:	add	x0, x2, x0
    a738:	orr	w1, w1, #0xffffff80
    a73c:	and	w1, w1, #0xff
    a740:	strb	w1, [x0]
    a744:	ldr	x0, [sp, #40]
    a748:	lsr	x0, x0, #7
    a74c:	str	x0, [sp, #40]
    a750:	ldr	x0, [sp, #16]
    a754:	ldr	x0, [x0]
    a758:	add	x1, x0, #0x1
    a75c:	ldr	x0, [sp, #16]
    a760:	str	x1, [x0]
    a764:	ldr	x0, [sp, #16]
    a768:	ldr	x0, [x0]
    a76c:	ldr	x1, [sp, #8]
    a770:	cmp	x1, x0
    a774:	b.ne	a798 <lzma_vli_encode@@XZ_5.0+0x140>  // b.any
    a778:	add	x0, sp, #0x38
    a77c:	ldr	x1, [sp, #32]
    a780:	cmp	x1, x0
    a784:	b.ne	a790 <lzma_vli_encode@@XZ_5.0+0x138>  // b.any
    a788:	mov	w0, #0xb                   	// #11
    a78c:	b	a7fc <lzma_vli_encode@@XZ_5.0+0x1a4>
    a790:	mov	w0, #0x0                   	// #0
    a794:	b	a7fc <lzma_vli_encode@@XZ_5.0+0x1a4>
    a798:	ldr	x0, [sp, #40]
    a79c:	cmp	x0, #0x7f
    a7a0:	b.hi	a70c <lzma_vli_encode@@XZ_5.0+0xb4>  // b.pmore
    a7a4:	ldr	x0, [sp, #16]
    a7a8:	ldr	x0, [x0]
    a7ac:	ldr	x1, [sp, #24]
    a7b0:	add	x0, x1, x0
    a7b4:	ldr	x1, [sp, #40]
    a7b8:	and	w1, w1, #0xff
    a7bc:	strb	w1, [x0]
    a7c0:	ldr	x0, [sp, #16]
    a7c4:	ldr	x0, [x0]
    a7c8:	add	x1, x0, #0x1
    a7cc:	ldr	x0, [sp, #16]
    a7d0:	str	x1, [x0]
    a7d4:	ldr	x0, [sp, #32]
    a7d8:	ldr	x0, [x0]
    a7dc:	add	x1, x0, #0x1
    a7e0:	ldr	x0, [sp, #32]
    a7e4:	str	x1, [x0]
    a7e8:	add	x0, sp, #0x38
    a7ec:	ldr	x1, [sp, #32]
    a7f0:	cmp	x1, x0
    a7f4:	cset	w0, ne  // ne = any
    a7f8:	and	w0, w0, #0xff
    a7fc:	add	sp, sp, #0x40
    a800:	ret
    a804:	sub	sp, sp, #0x20
    a808:	str	x0, [sp, #24]
    a80c:	str	x1, [sp, #16]
    a810:	str	x2, [sp, #8]
    a814:	str	w3, [sp, #4]
    a818:	ldr	w0, [sp, #4]
    a81c:	cmp	w0, #0x4, lsl #12
    a820:	b.hi	a834 <lzma_vli_encode@@XZ_5.0+0x1dc>  // b.pmore
    a824:	ldr	x1, [sp, #8]
    a828:	mov	x0, #0xffffffffffff        	// #281474976710655
    a82c:	cmp	x1, x0
    a830:	b.ls	a83c <lzma_vli_encode@@XZ_5.0+0x1e4>  // b.plast
    a834:	mov	w0, #0x8                   	// #8
    a838:	b	a86c <lzma_vli_encode@@XZ_5.0+0x214>
    a83c:	ldr	w0, [sp, #4]
    a840:	lsl	w1, w0, #1
    a844:	ldr	x0, [sp, #16]
    a848:	str	w1, [x0]
    a84c:	ldr	x0, [sp, #16]
    a850:	ldr	w0, [x0]
    a854:	mov	w1, w0
    a858:	ldr	x0, [sp, #8]
    a85c:	mul	x1, x1, x0
    a860:	ldr	x0, [sp, #24]
    a864:	str	x1, [x0]
    a868:	mov	w0, #0x0                   	// #0
    a86c:	add	sp, sp, #0x20
    a870:	ret
    a874:	stp	x29, x30, [sp, #-48]!
    a878:	mov	x29, sp
    a87c:	str	x0, [sp, #24]
    a880:	str	w1, [sp, #20]
    a884:	add	x1, sp, #0x24
    a888:	add	x0, sp, #0x28
    a88c:	ldr	w3, [sp, #20]
    a890:	ldr	x2, [sp, #24]
    a894:	bl	a804 <lzma_vli_encode@@XZ_5.0+0x1ac>
    a898:	cmp	w0, #0x0
    a89c:	b.eq	a8a8 <lzma_vli_encode@@XZ_5.0+0x250>  // b.none
    a8a0:	mov	x0, #0xffffffffffffffff    	// #-1
    a8a4:	b	a8d0 <lzma_vli_encode@@XZ_5.0+0x278>
    a8a8:	ldr	w0, [sp, #36]
    a8ac:	mov	w1, w0
    a8b0:	mov	x0, x1
    a8b4:	lsl	x0, x0, #2
    a8b8:	add	x0, x0, x1
    a8bc:	lsl	x0, x0, #3
    a8c0:	mov	x1, x0
    a8c4:	ldr	x0, [sp, #40]
    a8c8:	add	x0, x1, x0
    a8cc:	add	x0, x0, #0x30
    a8d0:	ldp	x29, x30, [sp], #48
    a8d4:	ret
    a8d8:	stp	x29, x30, [sp, #-80]!
    a8dc:	mov	x29, sp
    a8e0:	str	x0, [sp, #40]
    a8e4:	str	x1, [sp, #32]
    a8e8:	str	x2, [sp, #24]
    a8ec:	str	w3, [sp, #20]
    a8f0:	add	x1, sp, #0x3c
    a8f4:	add	x0, sp, #0x40
    a8f8:	ldr	w3, [sp, #20]
    a8fc:	ldr	x2, [sp, #24]
    a900:	bl	a804 <lzma_vli_encode@@XZ_5.0+0x1ac>
    a904:	str	w0, [sp, #76]
    a908:	ldr	w0, [sp, #76]
    a90c:	cmp	w0, #0x0
    a910:	b.eq	a91c <lzma_vli_encode@@XZ_5.0+0x2c4>  // b.none
    a914:	ldr	w0, [sp, #76]
    a918:	b	a9fc <lzma_vli_encode@@XZ_5.0+0x3a4>
    a91c:	ldr	x0, [sp, #40]
    a920:	ldr	x0, [x0, #16]
    a924:	ldr	x1, [sp, #24]
    a928:	cmp	x1, x0
    a92c:	b.ne	a944 <lzma_vli_encode@@XZ_5.0+0x2ec>  // b.any
    a930:	ldr	x0, [sp, #40]
    a934:	ldr	w1, [x0, #24]
    a938:	ldr	w0, [sp, #60]
    a93c:	cmp	w1, w0
    a940:	b.eq	a9c8 <lzma_vli_encode@@XZ_5.0+0x370>  // b.none
    a944:	ldr	x1, [sp, #32]
    a948:	ldr	x0, [sp, #40]
    a94c:	bl	aa04 <lzma_vli_encode@@XZ_5.0+0x3ac>
    a950:	ldr	w0, [sp, #60]
    a954:	mov	w1, w0
    a958:	mov	x0, x1
    a95c:	lsl	x0, x0, #2
    a960:	add	x0, x0, x1
    a964:	lsl	x0, x0, #3
    a968:	ldr	x1, [sp, #32]
    a96c:	bl	36fc <lzma_version_string@@XZ_5.0+0xc>
    a970:	mov	x1, x0
    a974:	ldr	x0, [sp, #40]
    a978:	str	x1, [x0]
    a97c:	ldr	x0, [sp, #64]
    a980:	ldr	x1, [sp, #32]
    a984:	bl	36fc <lzma_version_string@@XZ_5.0+0xc>
    a988:	mov	x1, x0
    a98c:	ldr	x0, [sp, #40]
    a990:	str	x1, [x0, #8]
    a994:	ldr	x0, [sp, #40]
    a998:	ldr	x0, [x0]
    a99c:	cmp	x0, #0x0
    a9a0:	b.eq	a9b4 <lzma_vli_encode@@XZ_5.0+0x35c>  // b.none
    a9a4:	ldr	x0, [sp, #40]
    a9a8:	ldr	x0, [x0, #8]
    a9ac:	cmp	x0, #0x0
    a9b0:	b.ne	a9c8 <lzma_vli_encode@@XZ_5.0+0x370>  // b.any
    a9b4:	ldr	x1, [sp, #32]
    a9b8:	ldr	x0, [sp, #40]
    a9bc:	bl	aa04 <lzma_vli_encode@@XZ_5.0+0x3ac>
    a9c0:	mov	w0, #0x5                   	// #5
    a9c4:	b	a9fc <lzma_vli_encode@@XZ_5.0+0x3a4>
    a9c8:	ldr	x0, [sp, #40]
    a9cc:	ldr	x1, [sp, #24]
    a9d0:	str	x1, [x0, #16]
    a9d4:	ldr	w1, [sp, #60]
    a9d8:	ldr	x0, [sp, #40]
    a9dc:	str	w1, [x0, #24]
    a9e0:	ldr	x0, [sp, #40]
    a9e4:	str	wzr, [x0, #28]
    a9e8:	ldr	x0, [sp, #40]
    a9ec:	str	wzr, [x0, #32]
    a9f0:	ldr	x0, [sp, #40]
    a9f4:	str	xzr, [x0, #40]
    a9f8:	mov	w0, #0x0                   	// #0
    a9fc:	ldp	x29, x30, [sp], #80
    aa00:	ret
    aa04:	stp	x29, x30, [sp, #-32]!
    aa08:	mov	x29, sp
    aa0c:	str	x0, [sp, #24]
    aa10:	str	x1, [sp, #16]
    aa14:	ldr	x0, [sp, #24]
    aa18:	ldr	x0, [x0]
    aa1c:	ldr	x1, [sp, #16]
    aa20:	bl	3814 <lzma_version_string@@XZ_5.0+0x124>
    aa24:	ldr	x0, [sp, #24]
    aa28:	str	xzr, [x0]
    aa2c:	ldr	x0, [sp, #24]
    aa30:	ldr	x0, [x0, #8]
    aa34:	ldr	x1, [sp, #16]
    aa38:	bl	3814 <lzma_version_string@@XZ_5.0+0x124>
    aa3c:	ldr	x0, [sp, #24]
    aa40:	str	xzr, [x0, #8]
    aa44:	nop
    aa48:	ldp	x29, x30, [sp], #32
    aa4c:	ret
    aa50:	sub	sp, sp, #0x20
    aa54:	str	x0, [sp, #8]
    aa58:	ldr	x0, [sp, #8]
    aa5c:	ldr	x2, [x0]
    aa60:	ldr	x0, [sp, #8]
    aa64:	ldr	w0, [x0, #28]
    aa68:	mov	w1, w0
    aa6c:	mov	x0, x1
    aa70:	lsl	x0, x0, #2
    aa74:	add	x0, x0, x1
    aa78:	lsl	x0, x0, #3
    aa7c:	add	x0, x2, x0
    aa80:	str	x0, [sp, #24]
    aa84:	ldr	x0, [sp, #8]
    aa88:	ldr	x1, [x0, #8]
    aa8c:	ldr	x0, [sp, #8]
    aa90:	ldr	w0, [x0, #28]
    aa94:	mov	w2, w0
    aa98:	ldr	x0, [sp, #8]
    aa9c:	ldr	x0, [x0, #16]
    aaa0:	mul	x0, x2, x0
    aaa4:	add	x1, x1, x0
    aaa8:	ldr	x0, [sp, #24]
    aaac:	str	x1, [x0]
    aab0:	ldr	x0, [sp, #24]
    aab4:	str	xzr, [x0, #8]
    aab8:	ldr	x0, [sp, #24]
    aabc:	strb	wzr, [x0, #32]
    aac0:	ldr	x0, [sp, #8]
    aac4:	ldr	w0, [x0, #28]
    aac8:	add	w1, w0, #0x1
    aacc:	ldr	x0, [sp, #8]
    aad0:	str	w1, [x0, #28]
    aad4:	ldr	x0, [sp, #8]
    aad8:	ldr	w1, [x0, #28]
    aadc:	ldr	x0, [sp, #8]
    aae0:	ldr	w0, [x0, #24]
    aae4:	cmp	w1, w0
    aae8:	b.ne	aaf4 <lzma_vli_encode@@XZ_5.0+0x49c>  // b.any
    aaec:	ldr	x0, [sp, #8]
    aaf0:	str	wzr, [x0, #28]
    aaf4:	ldr	x0, [sp, #8]
    aaf8:	ldr	w0, [x0, #32]
    aafc:	add	w1, w0, #0x1
    ab00:	ldr	x0, [sp, #8]
    ab04:	str	w1, [x0, #32]
    ab08:	ldr	x0, [sp, #24]
    ab0c:	add	sp, sp, #0x20
    ab10:	ret
    ab14:	sub	sp, sp, #0x20
    ab18:	str	x0, [sp, #8]
    ab1c:	ldr	x0, [sp, #8]
    ab20:	ldr	w1, [x0, #28]
    ab24:	ldr	x0, [sp, #8]
    ab28:	ldr	w0, [x0, #32]
    ab2c:	sub	w0, w1, w0
    ab30:	str	w0, [sp, #28]
    ab34:	ldr	x0, [sp, #8]
    ab38:	ldr	w1, [x0, #28]
    ab3c:	ldr	x0, [sp, #8]
    ab40:	ldr	w0, [x0, #32]
    ab44:	cmp	w1, w0
    ab48:	b.cs	ab60 <lzma_vli_encode@@XZ_5.0+0x508>  // b.hs, b.nlast
    ab4c:	ldr	x0, [sp, #8]
    ab50:	ldr	w0, [x0, #24]
    ab54:	ldr	w1, [sp, #28]
    ab58:	add	w0, w1, w0
    ab5c:	str	w0, [sp, #28]
    ab60:	ldr	x0, [sp, #8]
    ab64:	ldr	x2, [x0]
    ab68:	ldr	w1, [sp, #28]
    ab6c:	mov	x0, x1
    ab70:	lsl	x0, x0, #2
    ab74:	add	x0, x0, x1
    ab78:	lsl	x0, x0, #3
    ab7c:	add	x0, x2, x0
    ab80:	ldrb	w0, [x0, #32]
    ab84:	add	sp, sp, #0x20
    ab88:	ret
    ab8c:	stp	x29, x30, [sp, #-80]!
    ab90:	mov	x29, sp
    ab94:	str	x0, [sp, #56]
    ab98:	str	x1, [sp, #48]
    ab9c:	str	x2, [sp, #40]
    aba0:	str	x3, [sp, #32]
    aba4:	str	x4, [sp, #24]
    aba8:	str	x5, [sp, #16]
    abac:	ldr	x0, [sp, #56]
    abb0:	ldr	w0, [x0, #32]
    abb4:	cmp	w0, #0x0
    abb8:	b.ne	abc4 <lzma_vli_encode@@XZ_5.0+0x56c>  // b.any
    abbc:	mov	w0, #0x0                   	// #0
    abc0:	b	acdc <lzma_vli_encode@@XZ_5.0+0x684>
    abc4:	ldr	x0, [sp, #56]
    abc8:	ldr	w1, [x0, #28]
    abcc:	ldr	x0, [sp, #56]
    abd0:	ldr	w0, [x0, #32]
    abd4:	sub	w0, w1, w0
    abd8:	str	w0, [sp, #76]
    abdc:	ldr	x0, [sp, #56]
    abe0:	ldr	w1, [x0, #28]
    abe4:	ldr	x0, [sp, #56]
    abe8:	ldr	w0, [x0, #32]
    abec:	cmp	w1, w0
    abf0:	b.cs	ac08 <lzma_vli_encode@@XZ_5.0+0x5b0>  // b.hs, b.nlast
    abf4:	ldr	x0, [sp, #56]
    abf8:	ldr	w0, [x0, #24]
    abfc:	ldr	w1, [sp, #76]
    ac00:	add	w0, w1, w0
    ac04:	str	w0, [sp, #76]
    ac08:	ldr	x0, [sp, #56]
    ac0c:	ldr	x2, [x0]
    ac10:	ldr	w1, [sp, #76]
    ac14:	mov	x0, x1
    ac18:	lsl	x0, x0, #2
    ac1c:	add	x0, x0, x1
    ac20:	lsl	x0, x0, #3
    ac24:	add	x0, x2, x0
    ac28:	str	x0, [sp, #64]
    ac2c:	ldr	x0, [sp, #64]
    ac30:	ldrb	w0, [x0, #32]
    ac34:	eor	w0, w0, #0x1
    ac38:	and	w0, w0, #0xff
    ac3c:	cmp	w0, #0x0
    ac40:	b.eq	ac4c <lzma_vli_encode@@XZ_5.0+0x5f4>  // b.none
    ac44:	mov	w0, #0x0                   	// #0
    ac48:	b	acdc <lzma_vli_encode@@XZ_5.0+0x684>
    ac4c:	ldr	x0, [sp, #64]
    ac50:	ldr	x6, [x0]
    ac54:	ldr	x0, [sp, #56]
    ac58:	add	x1, x0, #0x28
    ac5c:	ldr	x0, [sp, #64]
    ac60:	ldr	x0, [x0, #8]
    ac64:	ldr	x5, [sp, #32]
    ac68:	ldr	x4, [sp, #40]
    ac6c:	ldr	x3, [sp, #48]
    ac70:	mov	x2, x0
    ac74:	mov	x0, x6
    ac78:	bl	3870 <lzma_version_string@@XZ_5.0+0x180>
    ac7c:	ldr	x0, [sp, #56]
    ac80:	ldr	x1, [x0, #40]
    ac84:	ldr	x0, [sp, #64]
    ac88:	ldr	x0, [x0, #8]
    ac8c:	cmp	x1, x0
    ac90:	b.cs	ac9c <lzma_vli_encode@@XZ_5.0+0x644>  // b.hs, b.nlast
    ac94:	mov	w0, #0x0                   	// #0
    ac98:	b	acdc <lzma_vli_encode@@XZ_5.0+0x684>
    ac9c:	ldr	x0, [sp, #64]
    aca0:	ldr	x1, [x0, #16]
    aca4:	ldr	x0, [sp, #24]
    aca8:	str	x1, [x0]
    acac:	ldr	x0, [sp, #64]
    acb0:	ldr	x1, [x0, #24]
    acb4:	ldr	x0, [sp, #16]
    acb8:	str	x1, [x0]
    acbc:	ldr	x0, [sp, #56]
    acc0:	ldr	w0, [x0, #32]
    acc4:	sub	w1, w0, #0x1
    acc8:	ldr	x0, [sp, #56]
    accc:	str	w1, [x0, #32]
    acd0:	ldr	x0, [sp, #56]
    acd4:	str	xzr, [x0, #40]
    acd8:	mov	w0, #0x1                   	// #1
    acdc:	ldp	x29, x30, [sp], #80
    ace0:	ret
    ace4:	stp	x29, x30, [sp, #-64]!
    ace8:	mov	x29, sp
    acec:	str	w0, [sp, #44]
    acf0:	str	x1, [sp, #32]
    acf4:	str	x2, [sp, #24]
    acf8:	ldr	x2, [sp, #24]
    acfc:	ldr	x1, [sp, #32]
    ad00:	ldr	w0, [sp, #44]
    ad04:	bl	30c0 <pthread_sigmask@plt>
    ad08:	str	w0, [sp, #60]
    ad0c:	nop
    ad10:	ldp	x29, x30, [sp], #64
    ad14:	ret
    ad18:	stp	x29, x30, [sp, #-320]!
    ad1c:	mov	x29, sp
    ad20:	str	x0, [sp, #40]
    ad24:	str	x1, [sp, #32]
    ad28:	str	x2, [sp, #24]
    ad2c:	add	x0, sp, #0x38
    ad30:	bl	3170 <sigfillset@plt>
    ad34:	add	x1, sp, #0xb8
    ad38:	add	x0, sp, #0x38
    ad3c:	mov	x2, x1
    ad40:	mov	x1, x0
    ad44:	mov	w0, #0x2                   	// #2
    ad48:	bl	ace4 <lzma_vli_encode@@XZ_5.0+0x68c>
    ad4c:	ldr	x3, [sp, #24]
    ad50:	ldr	x2, [sp, #32]
    ad54:	mov	x1, #0x0                   	// #0
    ad58:	ldr	x0, [sp, #40]
    ad5c:	bl	32b0 <pthread_create@plt>
    ad60:	str	w0, [sp, #316]
    ad64:	add	x0, sp, #0xb8
    ad68:	mov	x2, #0x0                   	// #0
    ad6c:	mov	x1, x0
    ad70:	mov	w0, #0x2                   	// #2
    ad74:	bl	ace4 <lzma_vli_encode@@XZ_5.0+0x68c>
    ad78:	ldr	w0, [sp, #316]
    ad7c:	ldp	x29, x30, [sp], #320
    ad80:	ret
    ad84:	stp	x29, x30, [sp, #-32]!
    ad88:	mov	x29, sp
    ad8c:	str	x0, [sp, #24]
    ad90:	mov	x1, #0x0                   	// #0
    ad94:	ldr	x0, [sp, #24]
    ad98:	bl	32d0 <pthread_join@plt>
    ad9c:	ldp	x29, x30, [sp], #32
    ada0:	ret
    ada4:	stp	x29, x30, [sp, #-32]!
    ada8:	mov	x29, sp
    adac:	str	x0, [sp, #24]
    adb0:	mov	x1, #0x0                   	// #0
    adb4:	ldr	x0, [sp, #24]
    adb8:	bl	32a0 <pthread_mutex_init@plt>
    adbc:	ldp	x29, x30, [sp], #32
    adc0:	ret
    adc4:	stp	x29, x30, [sp, #-48]!
    adc8:	mov	x29, sp
    adcc:	str	x0, [sp, #24]
    add0:	ldr	x0, [sp, #24]
    add4:	bl	3410 <pthread_mutex_destroy@plt>
    add8:	str	w0, [sp, #44]
    addc:	nop
    ade0:	ldp	x29, x30, [sp], #48
    ade4:	ret
    ade8:	stp	x29, x30, [sp, #-48]!
    adec:	mov	x29, sp
    adf0:	str	x0, [sp, #24]
    adf4:	ldr	x0, [sp, #24]
    adf8:	bl	3530 <pthread_mutex_lock@plt>
    adfc:	str	w0, [sp, #44]
    ae00:	nop
    ae04:	ldp	x29, x30, [sp], #48
    ae08:	ret
    ae0c:	stp	x29, x30, [sp, #-48]!
    ae10:	mov	x29, sp
    ae14:	str	x0, [sp, #24]
    ae18:	ldr	x0, [sp, #24]
    ae1c:	bl	3550 <pthread_mutex_unlock@plt>
    ae20:	str	w0, [sp, #44]
    ae24:	nop
    ae28:	ldp	x29, x30, [sp], #48
    ae2c:	ret
    ae30:	stp	x29, x30, [sp, #-64]!
    ae34:	mov	x29, sp
    ae38:	str	x0, [sp, #24]
    ae3c:	add	x0, sp, #0x28
    ae40:	mov	x1, x0
    ae44:	mov	w0, #0x1                   	// #1
    ae48:	bl	3150 <clock_gettime@plt>
    ae4c:	cmp	w0, #0x0
    ae50:	b.ne	aeb8 <lzma_vli_encode@@XZ_5.0+0x860>  // b.any
    ae54:	add	x0, sp, #0x20
    ae58:	bl	33d0 <pthread_condattr_init@plt>
    ae5c:	cmp	w0, #0x0
    ae60:	b.ne	aeb8 <lzma_vli_encode@@XZ_5.0+0x860>  // b.any
    ae64:	add	x0, sp, #0x20
    ae68:	mov	w1, #0x1                   	// #1
    ae6c:	bl	3490 <pthread_condattr_setclock@plt>
    ae70:	str	w0, [sp, #60]
    ae74:	ldr	w0, [sp, #60]
    ae78:	cmp	w0, #0x0
    ae7c:	b.ne	ae90 <lzma_vli_encode@@XZ_5.0+0x838>  // b.any
    ae80:	ldr	x0, [sp, #24]
    ae84:	add	x1, sp, #0x20
    ae88:	bl	3420 <pthread_cond_init@plt>
    ae8c:	str	w0, [sp, #60]
    ae90:	add	x0, sp, #0x20
    ae94:	bl	31e0 <pthread_condattr_destroy@plt>
    ae98:	ldr	w0, [sp, #60]
    ae9c:	cmp	w0, #0x0
    aea0:	b.ne	aeb8 <lzma_vli_encode@@XZ_5.0+0x860>  // b.any
    aea4:	ldr	x0, [sp, #24]
    aea8:	mov	w1, #0x1                   	// #1
    aeac:	str	w1, [x0, #48]
    aeb0:	mov	w0, #0x0                   	// #0
    aeb4:	b	aecc <lzma_vli_encode@@XZ_5.0+0x874>
    aeb8:	ldr	x0, [sp, #24]
    aebc:	str	wzr, [x0, #48]
    aec0:	ldr	x0, [sp, #24]
    aec4:	mov	x1, #0x0                   	// #0
    aec8:	bl	3420 <pthread_cond_init@plt>
    aecc:	ldp	x29, x30, [sp], #64
    aed0:	ret
    aed4:	stp	x29, x30, [sp, #-48]!
    aed8:	mov	x29, sp
    aedc:	str	x0, [sp, #24]
    aee0:	ldr	x0, [sp, #24]
    aee4:	bl	3520 <pthread_cond_destroy@plt>
    aee8:	str	w0, [sp, #44]
    aeec:	nop
    aef0:	ldp	x29, x30, [sp], #48
    aef4:	ret
    aef8:	stp	x29, x30, [sp, #-48]!
    aefc:	mov	x29, sp
    af00:	str	x0, [sp, #24]
    af04:	ldr	x0, [sp, #24]
    af08:	bl	3200 <pthread_cond_signal@plt>
    af0c:	str	w0, [sp, #44]
    af10:	nop
    af14:	ldp	x29, x30, [sp], #48
    af18:	ret
    af1c:	stp	x29, x30, [sp, #-48]!
    af20:	mov	x29, sp
    af24:	str	x0, [sp, #24]
    af28:	str	x1, [sp, #16]
    af2c:	ldr	x0, [sp, #24]
    af30:	ldr	x1, [sp, #16]
    af34:	bl	33a0 <pthread_cond_wait@plt>
    af38:	str	w0, [sp, #44]
    af3c:	nop
    af40:	ldp	x29, x30, [sp], #48
    af44:	ret
    af48:	stp	x29, x30, [sp, #-64]!
    af4c:	mov	x29, sp
    af50:	str	x0, [sp, #40]
    af54:	str	x1, [sp, #32]
    af58:	str	x2, [sp, #24]
    af5c:	ldr	x0, [sp, #40]
    af60:	ldr	x2, [sp, #24]
    af64:	ldr	x1, [sp, #32]
    af68:	bl	3560 <pthread_cond_timedwait@plt>
    af6c:	str	w0, [sp, #60]
    af70:	ldr	w0, [sp, #60]
    af74:	ldp	x29, x30, [sp], #64
    af78:	ret
    af7c:	stp	x29, x30, [sp, #-80]!
    af80:	mov	x29, sp
    af84:	str	x0, [sp, #40]
    af88:	str	x1, [sp, #32]
    af8c:	str	w2, [sp, #28]
    af90:	ldr	w1, [sp, #28]
    af94:	mov	w0, #0x4dd3                	// #19923
    af98:	movk	w0, #0x1062, lsl #16
    af9c:	umull	x0, w1, w0
    afa0:	lsr	x0, x0, #32
    afa4:	lsr	w0, w0, #6
    afa8:	mov	w1, w0
    afac:	ldr	x0, [sp, #40]
    afb0:	str	x1, [x0]
    afb4:	ldr	w1, [sp, #28]
    afb8:	mov	w0, #0x4dd3                	// #19923
    afbc:	movk	w0, #0x1062, lsl #16
    afc0:	umull	x0, w1, w0
    afc4:	lsr	x0, x0, #32
    afc8:	lsr	w0, w0, #6
    afcc:	mov	w2, #0x3e8                 	// #1000
    afd0:	mul	w0, w0, w2
    afd4:	sub	w0, w1, w0
    afd8:	mov	w1, #0x4240                	// #16960
    afdc:	movk	w1, #0xf, lsl #16
    afe0:	mul	w0, w0, w1
    afe4:	mov	w1, w0
    afe8:	ldr	x0, [sp, #40]
    afec:	str	x1, [x0, #8]
    aff0:	ldr	x0, [sp, #32]
    aff4:	ldr	w0, [x0, #48]
    aff8:	add	x1, sp, #0x38
    affc:	bl	3150 <clock_gettime@plt>
    b000:	str	w0, [sp, #76]
    b004:	ldr	x0, [sp, #40]
    b008:	ldr	x1, [x0]
    b00c:	ldr	x0, [sp, #56]
    b010:	add	x1, x1, x0
    b014:	ldr	x0, [sp, #40]
    b018:	str	x1, [x0]
    b01c:	ldr	x0, [sp, #40]
    b020:	ldr	x1, [x0, #8]
    b024:	ldr	x0, [sp, #64]
    b028:	add	x1, x1, x0
    b02c:	ldr	x0, [sp, #40]
    b030:	str	x1, [x0, #8]
    b034:	ldr	x0, [sp, #40]
    b038:	ldr	x1, [x0, #8]
    b03c:	mov	x0, #0xc9ff                	// #51711
    b040:	movk	x0, #0x3b9a, lsl #16
    b044:	cmp	x1, x0
    b048:	b.le	b07c <lzma_vli_encode@@XZ_5.0+0xa24>
    b04c:	ldr	x0, [sp, #40]
    b050:	ldr	x1, [x0, #8]
    b054:	mov	x0, #0xffffffffffff3600    	// #-51712
    b058:	movk	x0, #0xc465, lsl #16
    b05c:	add	x1, x1, x0
    b060:	ldr	x0, [sp, #40]
    b064:	str	x1, [x0, #8]
    b068:	ldr	x0, [sp, #40]
    b06c:	ldr	x0, [x0]
    b070:	add	x1, x0, #0x1
    b074:	ldr	x0, [sp, #40]
    b078:	str	x1, [x0]
    b07c:	nop
    b080:	ldp	x29, x30, [sp], #80
    b084:	ret
    b088:	sub	sp, sp, #0x10
    b08c:	str	x0, [sp, #8]
    b090:	ldr	x0, [sp, #8]
    b094:	ldr	w1, [x0, #32]
    b098:	ldr	x0, [sp, #8]
    b09c:	ldr	w0, [x0, #24]
    b0a0:	cmp	w1, w0
    b0a4:	cset	w0, cc  // cc = lo, ul, last
    b0a8:	and	w0, w0, #0xff
    b0ac:	add	sp, sp, #0x10
    b0b0:	ret
    b0b4:	sub	sp, sp, #0x10
    b0b8:	str	x0, [sp, #8]
    b0bc:	ldr	x0, [sp, #8]
    b0c0:	ldr	w0, [x0, #32]
    b0c4:	cmp	w0, #0x0
    b0c8:	cset	w0, eq  // eq = none
    b0cc:	and	w0, w0, #0xff
    b0d0:	add	sp, sp, #0x10
    b0d4:	ret
    b0d8:	stp	x29, x30, [sp, #-48]!
    b0dc:	mov	x29, sp
    b0e0:	str	x0, [sp, #24]
    b0e4:	str	w1, [sp, #20]
    b0e8:	str	wzr, [sp, #44]
    b0ec:	b	b148 <lzma_vli_encode@@XZ_5.0+0xaf0>
    b0f0:	str	wzr, [sp, #40]
    b0f4:	b	b134 <lzma_vli_encode@@XZ_5.0+0xadc>
    b0f8:	ldr	x0, [sp, #24]
    b0fc:	ldr	x0, [x0, #32]
    b100:	ldr	w0, [x0, #308]
    b104:	cmp	w0, #0x0
    b108:	b.ne	b11c <lzma_vli_encode@@XZ_5.0+0xac4>  // b.any
    b10c:	ldr	x0, [sp, #24]
    b110:	ldr	x0, [x0, #32]
    b114:	ldr	w1, [sp, #20]
    b118:	str	w1, [x0, #308]
    b11c:	ldr	x0, [sp, #24]
    b120:	ldr	x0, [x0, #32]
    b124:	add	x0, x0, #0x198
    b128:	bl	aef8 <lzma_vli_encode@@XZ_5.0+0x8a0>
    b12c:	mov	w0, #0x1                   	// #1
    b130:	str	w0, [sp, #40]
    b134:	ldr	w0, [sp, #40]
    b138:	cmp	w0, #0x0
    b13c:	b.eq	b0f8 <lzma_vli_encode@@XZ_5.0+0xaa0>  // b.none
    b140:	mov	w0, #0x1                   	// #1
    b144:	str	w0, [sp, #44]
    b148:	ldr	w0, [sp, #44]
    b14c:	cmp	w0, #0x0
    b150:	b.eq	b16c <lzma_vli_encode@@XZ_5.0+0xb14>  // b.none
    b154:	ldr	x0, [sp, #24]
    b158:	ldr	x0, [x0, #32]
    b15c:	add	x0, x0, #0x168
    b160:	bl	ae0c <lzma_vli_encode@@XZ_5.0+0x7b4>
    b164:	mov	w0, #0x0                   	// #0
    b168:	b	b180 <lzma_vli_encode@@XZ_5.0+0xb28>
    b16c:	ldr	x0, [sp, #24]
    b170:	ldr	x0, [x0, #32]
    b174:	add	x0, x0, #0x168
    b178:	bl	ade8 <lzma_vli_encode@@XZ_5.0+0x790>
    b17c:	mov	w0, #0x1                   	// #1
    b180:	cmp	w0, #0x0
    b184:	b.ne	b0f0 <lzma_vli_encode@@XZ_5.0+0xa98>  // b.any
    b188:	nop
    b18c:	ldp	x29, x30, [sp], #48
    b190:	ret
    b194:	sub	sp, sp, #0x150
    b198:	stp	x29, x30, [sp, #16]
    b19c:	add	x29, sp, #0x10
    b1a0:	str	x19, [sp, #32]
    b1a4:	str	x0, [sp, #56]
    b1a8:	str	w1, [sp, #52]
    b1ac:	ldr	x0, [sp, #56]
    b1b0:	ldr	x0, [x0, #32]
    b1b4:	ldr	w4, [x0, #192]
    b1b8:	ldr	x0, [sp, #56]
    b1bc:	ldr	x0, [x0, #32]
    b1c0:	ldr	x3, [x0, #272]
    b1c4:	ldr	x0, [sp, #56]
    b1c8:	ldr	x0, [x0, #32]
    b1cc:	ldr	x2, [x0, #8]
    b1d0:	ldr	x0, [sp, #56]
    b1d4:	ldr	x0, [x0, #32]
    b1d8:	add	x1, x0, #0x10
    b1dc:	ldr	x0, [sp, #56]
    b1e0:	add	x0, x0, #0x88
    b1e4:	stp	xzr, xzr, [x0]
    b1e8:	stp	xzr, xzr, [x0, #16]
    b1ec:	stp	xzr, xzr, [x0, #32]
    b1f0:	stp	xzr, xzr, [x0, #48]
    b1f4:	stp	xzr, xzr, [x0, #64]
    b1f8:	stp	xzr, xzr, [x0, #80]
    b1fc:	stp	xzr, xzr, [x0, #96]
    b200:	stp	xzr, xzr, [x0, #112]
    b204:	stp	xzr, xzr, [x0, #128]
    b208:	stp	xzr, xzr, [x0, #144]
    b20c:	stp	xzr, xzr, [x0, #160]
    b210:	stp	xzr, xzr, [x0, #176]
    b214:	stp	xzr, xzr, [x0, #192]
    b218:	ldr	x0, [sp, #56]
    b21c:	str	w4, [x0, #144]
    b220:	ldr	x0, [sp, #56]
    b224:	str	x3, [x0, #152]
    b228:	ldr	x0, [sp, #56]
    b22c:	str	x2, [x0, #160]
    b230:	ldr	x0, [sp, #56]
    b234:	str	x1, [x0, #168]
    b238:	ldr	x0, [sp, #56]
    b23c:	add	x0, x0, #0x88
    b240:	bl	3160 <lzma_block_header_size@plt>
    b244:	str	w0, [sp, #292]
    b248:	ldr	w0, [sp, #292]
    b24c:	cmp	w0, #0x0
    b250:	b.eq	b268 <lzma_vli_encode@@XZ_5.0+0xc10>  // b.none
    b254:	ldr	w1, [sp, #292]
    b258:	ldr	x0, [sp, #56]
    b25c:	bl	b0d8 <lzma_vli_encode@@XZ_5.0+0xa80>
    b260:	mov	w0, #0x3                   	// #3
    b264:	b	b694 <lzma_vli_encode@@XZ_5.0+0x103c>
    b268:	ldr	x0, [sp, #56]
    b26c:	add	x3, x0, #0x40
    b270:	ldr	x0, [sp, #56]
    b274:	ldr	x1, [x0, #40]
    b278:	ldr	x0, [sp, #56]
    b27c:	add	x0, x0, #0x88
    b280:	mov	x2, x0
    b284:	mov	x0, x3
    b288:	bl	80a8 <lzma_block_uncomp_encode@@XZ_5.2+0x41c>
    b28c:	str	w0, [sp, #292]
    b290:	ldr	w0, [sp, #292]
    b294:	cmp	w0, #0x0
    b298:	b.eq	b2b0 <lzma_vli_encode@@XZ_5.0+0xc58>  // b.none
    b29c:	ldr	w1, [sp, #292]
    b2a0:	ldr	x0, [sp, #56]
    b2a4:	bl	b0d8 <lzma_vli_encode@@XZ_5.0+0xa80>
    b2a8:	mov	w0, #0x3                   	// #3
    b2ac:	b	b694 <lzma_vli_encode@@XZ_5.0+0x103c>
    b2b0:	str	xzr, [sp, #64]
    b2b4:	str	xzr, [sp, #328]
    b2b8:	ldr	x0, [sp, #56]
    b2bc:	ldr	w1, [x0, #140]
    b2c0:	ldr	x0, [sp, #56]
    b2c4:	ldr	x0, [x0, #24]
    b2c8:	mov	w1, w1
    b2cc:	str	x1, [x0, #8]
    b2d0:	ldr	x0, [sp, #56]
    b2d4:	ldr	x0, [x0, #32]
    b2d8:	ldr	x0, [x0, #272]
    b2dc:	str	x0, [sp, #280]
    b2e0:	str	wzr, [sp, #324]
    b2e4:	b	b388 <lzma_vli_encode@@XZ_5.0+0xd30>
    b2e8:	str	wzr, [sp, #320]
    b2ec:	b	b374 <lzma_vli_encode@@XZ_5.0+0xd1c>
    b2f0:	ldr	x1, [sp, #64]
    b2f4:	ldr	x0, [sp, #56]
    b2f8:	str	x1, [x0, #48]
    b2fc:	ldr	x0, [sp, #56]
    b300:	ldr	x0, [x0, #24]
    b304:	ldr	x1, [x0, #8]
    b308:	ldr	x0, [sp, #56]
    b30c:	str	x1, [x0, #56]
    b310:	b	b330 <lzma_vli_encode@@XZ_5.0+0xcd8>
    b314:	ldr	x0, [sp, #56]
    b318:	add	x2, x0, #0x190
    b31c:	ldr	x0, [sp, #56]
    b320:	add	x0, x0, #0x160
    b324:	mov	x1, x0
    b328:	mov	x0, x2
    b32c:	bl	af1c <lzma_vli_encode@@XZ_5.0+0x8c4>
    b330:	ldr	x0, [sp, #56]
    b334:	ldr	x0, [x0, #16]
    b338:	ldr	x1, [sp, #328]
    b33c:	cmp	x1, x0
    b340:	b.ne	b354 <lzma_vli_encode@@XZ_5.0+0xcfc>  // b.any
    b344:	ldr	x0, [sp, #56]
    b348:	ldr	w0, [x0]
    b34c:	cmp	w0, #0x1
    b350:	b.eq	b314 <lzma_vli_encode@@XZ_5.0+0xcbc>  // b.none
    b354:	ldr	x0, [sp, #56]
    b358:	ldr	w0, [x0]
    b35c:	str	w0, [sp, #52]
    b360:	ldr	x0, [sp, #56]
    b364:	ldr	x0, [x0, #16]
    b368:	str	x0, [sp, #328]
    b36c:	mov	w0, #0x1                   	// #1
    b370:	str	w0, [sp, #320]
    b374:	ldr	w0, [sp, #320]
    b378:	cmp	w0, #0x0
    b37c:	b.eq	b2f0 <lzma_vli_encode@@XZ_5.0+0xc98>  // b.none
    b380:	mov	w0, #0x1                   	// #1
    b384:	str	w0, [sp, #324]
    b388:	ldr	w0, [sp, #324]
    b38c:	cmp	w0, #0x0
    b390:	b.eq	b3a8 <lzma_vli_encode@@XZ_5.0+0xd50>  // b.none
    b394:	ldr	x0, [sp, #56]
    b398:	add	x0, x0, #0x160
    b39c:	bl	ae0c <lzma_vli_encode@@XZ_5.0+0x7b4>
    b3a0:	mov	w0, #0x0                   	// #0
    b3a4:	b	b3b8 <lzma_vli_encode@@XZ_5.0+0xd60>
    b3a8:	ldr	x0, [sp, #56]
    b3ac:	add	x0, x0, #0x160
    b3b0:	bl	ade8 <lzma_vli_encode@@XZ_5.0+0x790>
    b3b4:	mov	w0, #0x1                   	// #1
    b3b8:	cmp	w0, #0x0
    b3bc:	b.ne	b2e8 <lzma_vli_encode@@XZ_5.0+0xc90>  // b.any
    b3c0:	ldr	w0, [sp, #52]
    b3c4:	cmp	w0, #0x2
    b3c8:	b.ls	b3d4 <lzma_vli_encode@@XZ_5.0+0xd7c>  // b.plast
    b3cc:	ldr	w0, [sp, #52]
    b3d0:	b	b694 <lzma_vli_encode@@XZ_5.0+0x103c>
    b3d4:	ldr	w0, [sp, #52]
    b3d8:	cmp	w0, #0x2
    b3dc:	b.ne	b3e8 <lzma_vli_encode@@XZ_5.0+0xd90>  // b.any
    b3e0:	mov	w0, #0x3                   	// #3
    b3e4:	b	b3ec <lzma_vli_encode@@XZ_5.0+0xd94>
    b3e8:	mov	w0, #0x0                   	// #0
    b3ec:	str	w0, [sp, #316]
    b3f0:	ldr	x0, [sp, #328]
    b3f4:	str	x0, [sp, #304]
    b3f8:	ldr	x0, [sp, #64]
    b3fc:	ldr	x1, [sp, #328]
    b400:	sub	x1, x1, x0
    b404:	adrp	x0, 2c000 <lzma_mode_is_supported@@XZ_5.0+0x11368>
    b408:	add	x0, x0, #0x80
    b40c:	ldr	x0, [x0]
    b410:	cmp	x1, x0
    b414:	b.ls	b434 <lzma_vli_encode@@XZ_5.0+0xddc>  // b.plast
    b418:	ldr	x1, [sp, #64]
    b41c:	adrp	x0, 2c000 <lzma_mode_is_supported@@XZ_5.0+0x11368>
    b420:	add	x0, x0, #0x80
    b424:	ldr	x0, [x0]
    b428:	add	x0, x1, x0
    b42c:	str	x0, [sp, #304]
    b430:	str	wzr, [sp, #316]
    b434:	ldr	x0, [sp, #56]
    b438:	ldr	x8, [x0, #88]
    b43c:	ldr	x0, [sp, #56]
    b440:	ldr	x9, [x0, #64]
    b444:	ldr	x0, [sp, #56]
    b448:	ldr	x1, [x0, #40]
    b44c:	ldr	x0, [sp, #56]
    b450:	ldr	x2, [x0, #8]
    b454:	ldr	x0, [sp, #56]
    b458:	ldr	x0, [x0, #24]
    b45c:	ldr	x4, [x0]
    b460:	ldr	x0, [sp, #56]
    b464:	ldr	x0, [x0, #24]
    b468:	add	x5, x0, #0x8
    b46c:	add	x3, sp, #0x40
    b470:	ldr	w0, [sp, #316]
    b474:	str	w0, [sp]
    b478:	ldr	x7, [sp, #280]
    b47c:	mov	x6, x5
    b480:	mov	x5, x4
    b484:	ldr	x4, [sp, #304]
    b488:	mov	x0, x9
    b48c:	blr	x8
    b490:	str	w0, [sp, #292]
    b494:	ldr	w0, [sp, #292]
    b498:	cmp	w0, #0x0
    b49c:	b.ne	b4b8 <lzma_vli_encode@@XZ_5.0+0xe60>  // b.any
    b4a0:	ldr	x0, [sp, #56]
    b4a4:	ldr	x0, [x0, #24]
    b4a8:	ldr	x0, [x0, #8]
    b4ac:	ldr	x1, [sp, #280]
    b4b0:	cmp	x1, x0
    b4b4:	b.hi	b2e0 <lzma_vli_encode@@XZ_5.0+0xc88>  // b.pmore
    b4b8:	ldr	w0, [sp, #292]
    b4bc:	cmp	w0, #0x0
    b4c0:	b.eq	b514 <lzma_vli_encode@@XZ_5.0+0xebc>  // b.none
    b4c4:	ldr	w0, [sp, #292]
    b4c8:	cmp	w0, #0x1
    b4cc:	b.ne	b640 <lzma_vli_encode@@XZ_5.0+0xfe8>  // b.any
    b4d0:	ldr	x0, [sp, #56]
    b4d4:	add	x2, x0, #0x88
    b4d8:	ldr	x0, [sp, #56]
    b4dc:	ldr	x0, [x0, #24]
    b4e0:	ldr	x0, [x0]
    b4e4:	mov	x1, x0
    b4e8:	mov	x0, x2
    b4ec:	bl	3540 <lzma_block_header_encode@plt>
    b4f0:	str	w0, [sp, #292]
    b4f4:	ldr	w0, [sp, #292]
    b4f8:	cmp	w0, #0x0
    b4fc:	b.eq	b654 <lzma_vli_encode@@XZ_5.0+0xffc>  // b.none
    b500:	ldr	w1, [sp, #292]
    b504:	ldr	x0, [sp, #56]
    b508:	bl	b0d8 <lzma_vli_encode@@XZ_5.0+0xa80>
    b50c:	mov	w0, #0x3                   	// #3
    b510:	b	b694 <lzma_vli_encode@@XZ_5.0+0x103c>
    b514:	str	wzr, [sp, #300]
    b518:	b	b584 <lzma_vli_encode@@XZ_5.0+0xf2c>
    b51c:	str	wzr, [sp, #296]
    b520:	b	b570 <lzma_vli_encode@@XZ_5.0+0xf18>
    b524:	ldr	x0, [sp, #56]
    b528:	add	x2, x0, #0x190
    b52c:	ldr	x0, [sp, #56]
    b530:	add	x0, x0, #0x160
    b534:	mov	x1, x0
    b538:	mov	x0, x2
    b53c:	bl	af1c <lzma_vli_encode@@XZ_5.0+0x8c4>
    b540:	ldr	x0, [sp, #56]
    b544:	ldr	w0, [x0]
    b548:	cmp	w0, #0x1
    b54c:	b.eq	b524 <lzma_vli_encode@@XZ_5.0+0xecc>  // b.none
    b550:	ldr	x0, [sp, #56]
    b554:	ldr	w0, [x0]
    b558:	str	w0, [sp, #52]
    b55c:	ldr	x0, [sp, #56]
    b560:	ldr	x0, [x0, #16]
    b564:	str	x0, [sp, #328]
    b568:	mov	w0, #0x1                   	// #1
    b56c:	str	w0, [sp, #296]
    b570:	ldr	w0, [sp, #296]
    b574:	cmp	w0, #0x0
    b578:	b.eq	b540 <lzma_vli_encode@@XZ_5.0+0xee8>  // b.none
    b57c:	mov	w0, #0x1                   	// #1
    b580:	str	w0, [sp, #300]
    b584:	ldr	w0, [sp, #300]
    b588:	cmp	w0, #0x0
    b58c:	b.eq	b5a4 <lzma_vli_encode@@XZ_5.0+0xf4c>  // b.none
    b590:	ldr	x0, [sp, #56]
    b594:	add	x0, x0, #0x160
    b598:	bl	ae0c <lzma_vli_encode@@XZ_5.0+0x7b4>
    b59c:	mov	w0, #0x0                   	// #0
    b5a0:	b	b5b4 <lzma_vli_encode@@XZ_5.0+0xf5c>
    b5a4:	ldr	x0, [sp, #56]
    b5a8:	add	x0, x0, #0x160
    b5ac:	bl	ade8 <lzma_vli_encode@@XZ_5.0+0x790>
    b5b0:	mov	w0, #0x1                   	// #1
    b5b4:	cmp	w0, #0x0
    b5b8:	b.ne	b51c <lzma_vli_encode@@XZ_5.0+0xec4>  // b.any
    b5bc:	ldr	w0, [sp, #52]
    b5c0:	cmp	w0, #0x2
    b5c4:	b.ls	b5d0 <lzma_vli_encode@@XZ_5.0+0xf78>  // b.plast
    b5c8:	ldr	w0, [sp, #52]
    b5cc:	b	b694 <lzma_vli_encode@@XZ_5.0+0x103c>
    b5d0:	ldr	x0, [sp, #56]
    b5d4:	ldr	x0, [x0, #24]
    b5d8:	str	xzr, [x0, #8]
    b5dc:	ldr	x0, [sp, #56]
    b5e0:	add	x6, x0, #0x88
    b5e4:	ldr	x0, [sp, #56]
    b5e8:	ldr	x1, [x0, #8]
    b5ec:	ldr	x0, [sp, #56]
    b5f0:	ldr	x0, [x0, #24]
    b5f4:	ldr	x2, [x0]
    b5f8:	ldr	x0, [sp, #56]
    b5fc:	ldr	x0, [x0, #24]
    b600:	add	x0, x0, #0x8
    b604:	ldr	x5, [sp, #280]
    b608:	mov	x4, x0
    b60c:	mov	x3, x2
    b610:	ldr	x2, [sp, #328]
    b614:	mov	x0, x6
    b618:	bl	34c0 <lzma_block_uncomp_encode@plt>
    b61c:	str	w0, [sp, #292]
    b620:	ldr	w0, [sp, #292]
    b624:	cmp	w0, #0x0
    b628:	b.eq	b65c <lzma_vli_encode@@XZ_5.0+0x1004>  // b.none
    b62c:	mov	w1, #0xb                   	// #11
    b630:	ldr	x0, [sp, #56]
    b634:	bl	b0d8 <lzma_vli_encode@@XZ_5.0+0xa80>
    b638:	mov	w0, #0x3                   	// #3
    b63c:	b	b694 <lzma_vli_encode@@XZ_5.0+0x103c>
    b640:	ldr	w1, [sp, #292]
    b644:	ldr	x0, [sp, #56]
    b648:	bl	b0d8 <lzma_vli_encode@@XZ_5.0+0xa80>
    b64c:	mov	w0, #0x3                   	// #3
    b650:	b	b694 <lzma_vli_encode@@XZ_5.0+0x103c>
    b654:	nop
    b658:	b	b660 <lzma_vli_encode@@XZ_5.0+0x1008>
    b65c:	nop
    b660:	ldr	x0, [sp, #56]
    b664:	add	x1, x0, #0x88
    b668:	ldr	x0, [sp, #56]
    b66c:	ldr	x19, [x0, #24]
    b670:	mov	x0, x1
    b674:	bl	3190 <lzma_block_unpadded_size@plt>
    b678:	str	x0, [x19, #16]
    b67c:	ldr	x0, [sp, #56]
    b680:	ldr	x0, [x0, #24]
    b684:	ldr	x1, [sp, #56]
    b688:	ldr	x1, [x1, #160]
    b68c:	str	x1, [x0, #24]
    b690:	mov	w0, #0x2                   	// #2
    b694:	ldr	x19, [sp, #32]
    b698:	ldp	x29, x30, [sp, #16]
    b69c:	add	sp, sp, #0x150
    b6a0:	ret
    b6a4:	stp	x29, x30, [sp, #-80]!
    b6a8:	mov	x29, sp
    b6ac:	str	x0, [sp, #24]
    b6b0:	ldr	x0, [sp, #24]
    b6b4:	str	x0, [sp, #40]
    b6b8:	str	wzr, [sp, #76]
    b6bc:	str	wzr, [sp, #72]
    b6c0:	b	b748 <lzma_vli_encode@@XZ_5.0+0x10f0>
    b6c4:	str	wzr, [sp, #68]
    b6c8:	b	b734 <lzma_vli_encode@@XZ_5.0+0x10dc>
    b6cc:	ldr	x0, [sp, #40]
    b6d0:	ldr	w0, [x0]
    b6d4:	cmp	w0, #0x3
    b6d8:	b.ne	b6f0 <lzma_vli_encode@@XZ_5.0+0x1098>  // b.any
    b6dc:	ldr	x0, [sp, #40]
    b6e0:	str	wzr, [x0]
    b6e4:	ldr	x0, [sp, #40]
    b6e8:	add	x0, x0, #0x190
    b6ec:	bl	aef8 <lzma_vli_encode@@XZ_5.0+0x8a0>
    b6f0:	ldr	x0, [sp, #40]
    b6f4:	ldr	w0, [x0]
    b6f8:	str	w0, [sp, #76]
    b6fc:	ldr	w0, [sp, #76]
    b700:	cmp	w0, #0x0
    b704:	b.ne	b728 <lzma_vli_encode@@XZ_5.0+0x10d0>  // b.any
    b708:	ldr	x0, [sp, #40]
    b70c:	add	x2, x0, #0x190
    b710:	ldr	x0, [sp, #40]
    b714:	add	x0, x0, #0x160
    b718:	mov	x1, x0
    b71c:	mov	x0, x2
    b720:	bl	af1c <lzma_vli_encode@@XZ_5.0+0x8c4>
    b724:	b	b6cc <lzma_vli_encode@@XZ_5.0+0x1074>
    b728:	nop
    b72c:	mov	w0, #0x1                   	// #1
    b730:	str	w0, [sp, #68]
    b734:	ldr	w0, [sp, #68]
    b738:	cmp	w0, #0x0
    b73c:	b.eq	b6cc <lzma_vli_encode@@XZ_5.0+0x1074>  // b.none
    b740:	mov	w0, #0x1                   	// #1
    b744:	str	w0, [sp, #72]
    b748:	ldr	w0, [sp, #72]
    b74c:	cmp	w0, #0x0
    b750:	b.eq	b768 <lzma_vli_encode@@XZ_5.0+0x1110>  // b.none
    b754:	ldr	x0, [sp, #40]
    b758:	add	x0, x0, #0x160
    b75c:	bl	ae0c <lzma_vli_encode@@XZ_5.0+0x7b4>
    b760:	mov	w0, #0x0                   	// #0
    b764:	b	b778 <lzma_vli_encode@@XZ_5.0+0x1120>
    b768:	ldr	x0, [sp, #40]
    b76c:	add	x0, x0, #0x160
    b770:	bl	ade8 <lzma_vli_encode@@XZ_5.0+0x790>
    b774:	mov	w0, #0x1                   	// #1
    b778:	cmp	w0, #0x0
    b77c:	b.ne	b6c4 <lzma_vli_encode@@XZ_5.0+0x106c>  // b.any
    b780:	ldr	w0, [sp, #76]
    b784:	cmp	w0, #0x2
    b788:	b.hi	b79c <lzma_vli_encode@@XZ_5.0+0x1144>  // b.pmore
    b78c:	ldr	w1, [sp, #76]
    b790:	ldr	x0, [sp, #40]
    b794:	bl	b194 <lzma_vli_encode@@XZ_5.0+0xb3c>
    b798:	str	w0, [sp, #76]
    b79c:	ldr	w0, [sp, #76]
    b7a0:	cmp	w0, #0x4
    b7a4:	b.eq	b950 <lzma_vli_encode@@XZ_5.0+0x12f8>  // b.none
    b7a8:	str	wzr, [sp, #64]
    b7ac:	b	b7f8 <lzma_vli_encode@@XZ_5.0+0x11a0>
    b7b0:	str	wzr, [sp, #60]
    b7b4:	b	b7e4 <lzma_vli_encode@@XZ_5.0+0x118c>
    b7b8:	ldr	x0, [sp, #40]
    b7bc:	ldr	w0, [x0]
    b7c0:	cmp	w0, #0x4
    b7c4:	b.eq	b7dc <lzma_vli_encode@@XZ_5.0+0x1184>  // b.none
    b7c8:	ldr	x0, [sp, #40]
    b7cc:	str	wzr, [x0]
    b7d0:	ldr	x0, [sp, #40]
    b7d4:	add	x0, x0, #0x190
    b7d8:	bl	aef8 <lzma_vli_encode@@XZ_5.0+0x8a0>
    b7dc:	mov	w0, #0x1                   	// #1
    b7e0:	str	w0, [sp, #60]
    b7e4:	ldr	w0, [sp, #60]
    b7e8:	cmp	w0, #0x0
    b7ec:	b.eq	b7b8 <lzma_vli_encode@@XZ_5.0+0x1160>  // b.none
    b7f0:	mov	w0, #0x1                   	// #1
    b7f4:	str	w0, [sp, #64]
    b7f8:	ldr	w0, [sp, #64]
    b7fc:	cmp	w0, #0x0
    b800:	b.eq	b818 <lzma_vli_encode@@XZ_5.0+0x11c0>  // b.none
    b804:	ldr	x0, [sp, #40]
    b808:	add	x0, x0, #0x160
    b80c:	bl	ae0c <lzma_vli_encode@@XZ_5.0+0x7b4>
    b810:	mov	w0, #0x0                   	// #0
    b814:	b	b828 <lzma_vli_encode@@XZ_5.0+0x11d0>
    b818:	ldr	x0, [sp, #40]
    b81c:	add	x0, x0, #0x160
    b820:	bl	ade8 <lzma_vli_encode@@XZ_5.0+0x790>
    b824:	mov	w0, #0x1                   	// #1
    b828:	cmp	w0, #0x0
    b82c:	b.ne	b7b0 <lzma_vli_encode@@XZ_5.0+0x1158>  // b.any
    b830:	str	wzr, [sp, #56]
    b834:	b	b90c <lzma_vli_encode@@XZ_5.0+0x12b4>
    b838:	str	wzr, [sp, #52]
    b83c:	b	b8f8 <lzma_vli_encode@@XZ_5.0+0x12a0>
    b840:	ldr	x0, [sp, #40]
    b844:	ldr	x0, [x0, #24]
    b848:	ldr	w1, [sp, #76]
    b84c:	cmp	w1, #0x2
    b850:	cset	w1, eq  // eq = none
    b854:	and	w1, w1, #0xff
    b858:	strb	w1, [x0, #32]
    b85c:	ldr	x0, [sp, #40]
    b860:	ldr	x0, [x0, #32]
    b864:	ldr	x2, [x0, #344]
    b868:	ldr	x0, [sp, #40]
    b86c:	ldr	x0, [x0, #24]
    b870:	ldr	x1, [x0, #24]
    b874:	ldr	x0, [sp, #40]
    b878:	ldr	x0, [x0, #32]
    b87c:	add	x1, x2, x1
    b880:	str	x1, [x0, #344]
    b884:	ldr	x0, [sp, #40]
    b888:	ldr	x0, [x0, #32]
    b88c:	ldr	x2, [x0, #352]
    b890:	ldr	x0, [sp, #40]
    b894:	ldr	x0, [x0, #24]
    b898:	ldr	x1, [x0, #8]
    b89c:	ldr	x0, [sp, #40]
    b8a0:	ldr	x0, [x0, #32]
    b8a4:	add	x1, x2, x1
    b8a8:	str	x1, [x0, #352]
    b8ac:	ldr	x0, [sp, #40]
    b8b0:	str	xzr, [x0, #48]
    b8b4:	ldr	x0, [sp, #40]
    b8b8:	str	xzr, [x0, #56]
    b8bc:	ldr	x0, [sp, #40]
    b8c0:	ldr	x0, [x0, #32]
    b8c4:	ldr	x1, [x0, #328]
    b8c8:	ldr	x0, [sp, #40]
    b8cc:	str	x1, [x0, #344]
    b8d0:	ldr	x0, [sp, #40]
    b8d4:	ldr	x0, [x0, #32]
    b8d8:	ldr	x1, [sp, #40]
    b8dc:	str	x1, [x0, #328]
    b8e0:	ldr	x0, [sp, #40]
    b8e4:	ldr	x0, [x0, #32]
    b8e8:	add	x0, x0, #0x198
    b8ec:	bl	aef8 <lzma_vli_encode@@XZ_5.0+0x8a0>
    b8f0:	mov	w0, #0x1                   	// #1
    b8f4:	str	w0, [sp, #52]
    b8f8:	ldr	w0, [sp, #52]
    b8fc:	cmp	w0, #0x0
    b900:	b.eq	b840 <lzma_vli_encode@@XZ_5.0+0x11e8>  // b.none
    b904:	mov	w0, #0x1                   	// #1
    b908:	str	w0, [sp, #56]
    b90c:	ldr	w0, [sp, #56]
    b910:	cmp	w0, #0x0
    b914:	b.eq	b930 <lzma_vli_encode@@XZ_5.0+0x12d8>  // b.none
    b918:	ldr	x0, [sp, #40]
    b91c:	ldr	x0, [x0, #32]
    b920:	add	x0, x0, #0x168
    b924:	bl	ae0c <lzma_vli_encode@@XZ_5.0+0x7b4>
    b928:	mov	w0, #0x0                   	// #0
    b92c:	b	b944 <lzma_vli_encode@@XZ_5.0+0x12ec>
    b930:	ldr	x0, [sp, #40]
    b934:	ldr	x0, [x0, #32]
    b938:	add	x0, x0, #0x168
    b93c:	bl	ade8 <lzma_vli_encode@@XZ_5.0+0x790>
    b940:	mov	w0, #0x1                   	// #1
    b944:	cmp	w0, #0x0
    b948:	b.ne	b838 <lzma_vli_encode@@XZ_5.0+0x11e0>  // b.any
    b94c:	b	b6bc <lzma_vli_encode@@XZ_5.0+0x1064>
    b950:	nop
    b954:	ldr	x0, [sp, #40]
    b958:	add	x0, x0, #0x160
    b95c:	bl	adc4 <lzma_vli_encode@@XZ_5.0+0x76c>
    b960:	ldr	x0, [sp, #40]
    b964:	add	x0, x0, #0x190
    b968:	bl	aed4 <lzma_vli_encode@@XZ_5.0+0x87c>
    b96c:	ldr	x0, [sp, #40]
    b970:	add	x2, x0, #0x40
    b974:	ldr	x0, [sp, #40]
    b978:	ldr	x0, [x0, #40]
    b97c:	mov	x1, x0
    b980:	mov	x0, x2
    b984:	bl	3a48 <lzma_version_string@@XZ_5.0+0x358>
    b988:	ldr	x0, [sp, #40]
    b98c:	ldr	x2, [x0, #8]
    b990:	ldr	x0, [sp, #40]
    b994:	ldr	x0, [x0, #40]
    b998:	mov	x1, x0
    b99c:	mov	x0, x2
    b9a0:	bl	3814 <lzma_version_string@@XZ_5.0+0x124>
    b9a4:	mov	x0, #0x0                   	// #0
    b9a8:	ldp	x29, x30, [sp], #80
    b9ac:	ret
    b9b0:	stp	x29, x30, [sp, #-64]!
    b9b4:	mov	x29, sp
    b9b8:	str	x0, [sp, #24]
    b9bc:	strb	w1, [sp, #23]
    b9c0:	str	wzr, [sp, #60]
    b9c4:	b	bae0 <lzma_vli_encode@@XZ_5.0+0x1488>
    b9c8:	str	wzr, [sp, #56]
    b9cc:	b	ba54 <lzma_vli_encode@@XZ_5.0+0x13fc>
    b9d0:	str	wzr, [sp, #52]
    b9d4:	b	ba40 <lzma_vli_encode@@XZ_5.0+0x13e8>
    b9d8:	ldr	x0, [sp, #24]
    b9dc:	ldr	x2, [x0, #312]
    b9e0:	ldr	w1, [sp, #60]
    b9e4:	mov	x0, x1
    b9e8:	lsl	x0, x0, #3
    b9ec:	sub	x0, x0, x1
    b9f0:	lsl	x0, x0, #2
    b9f4:	add	x0, x0, x1
    b9f8:	lsl	x0, x0, #4
    b9fc:	add	x0, x2, x0
    ba00:	mov	w1, #0x3                   	// #3
    ba04:	str	w1, [x0]
    ba08:	ldr	x0, [sp, #24]
    ba0c:	ldr	x2, [x0, #312]
    ba10:	ldr	w1, [sp, #60]
    ba14:	mov	x0, x1
    ba18:	lsl	x0, x0, #3
    ba1c:	sub	x0, x0, x1
    ba20:	lsl	x0, x0, #2
    ba24:	add	x0, x0, x1
    ba28:	lsl	x0, x0, #4
    ba2c:	add	x0, x2, x0
    ba30:	add	x0, x0, #0x190
    ba34:	bl	aef8 <lzma_vli_encode@@XZ_5.0+0x8a0>
    ba38:	mov	w0, #0x1                   	// #1
    ba3c:	str	w0, [sp, #52]
    ba40:	ldr	w0, [sp, #52]
    ba44:	cmp	w0, #0x0
    ba48:	b.eq	b9d8 <lzma_vli_encode@@XZ_5.0+0x1380>  // b.none
    ba4c:	mov	w0, #0x1                   	// #1
    ba50:	str	w0, [sp, #56]
    ba54:	ldr	w0, [sp, #56]
    ba58:	cmp	w0, #0x0
    ba5c:	b.eq	ba98 <lzma_vli_encode@@XZ_5.0+0x1440>  // b.none
    ba60:	ldr	x0, [sp, #24]
    ba64:	ldr	x2, [x0, #312]
    ba68:	ldr	w1, [sp, #60]
    ba6c:	mov	x0, x1
    ba70:	lsl	x0, x0, #3
    ba74:	sub	x0, x0, x1
    ba78:	lsl	x0, x0, #2
    ba7c:	add	x0, x0, x1
    ba80:	lsl	x0, x0, #4
    ba84:	add	x0, x2, x0
    ba88:	add	x0, x0, #0x160
    ba8c:	bl	ae0c <lzma_vli_encode@@XZ_5.0+0x7b4>
    ba90:	mov	w0, #0x0                   	// #0
    ba94:	b	bacc <lzma_vli_encode@@XZ_5.0+0x1474>
    ba98:	ldr	x0, [sp, #24]
    ba9c:	ldr	x2, [x0, #312]
    baa0:	ldr	w1, [sp, #60]
    baa4:	mov	x0, x1
    baa8:	lsl	x0, x0, #3
    baac:	sub	x0, x0, x1
    bab0:	lsl	x0, x0, #2
    bab4:	add	x0, x0, x1
    bab8:	lsl	x0, x0, #4
    babc:	add	x0, x2, x0
    bac0:	add	x0, x0, #0x160
    bac4:	bl	ade8 <lzma_vli_encode@@XZ_5.0+0x790>
    bac8:	mov	w0, #0x1                   	// #1
    bacc:	cmp	w0, #0x0
    bad0:	b.ne	b9d0 <lzma_vli_encode@@XZ_5.0+0x1378>  // b.any
    bad4:	ldr	w0, [sp, #60]
    bad8:	add	w0, w0, #0x1
    badc:	str	w0, [sp, #60]
    bae0:	ldr	x0, [sp, #24]
    bae4:	ldr	w0, [x0, #324]
    bae8:	ldr	w1, [sp, #60]
    baec:	cmp	w1, w0
    baf0:	b.cc	b9c8 <lzma_vli_encode@@XZ_5.0+0x1370>  // b.lo, b.ul, b.last
    baf4:	ldrb	w0, [sp, #23]
    baf8:	eor	w0, w0, #0x1
    bafc:	and	w0, w0, #0xff
    bb00:	cmp	w0, #0x0
    bb04:	b.ne	bc78 <lzma_vli_encode@@XZ_5.0+0x1620>  // b.any
    bb08:	str	wzr, [sp, #48]
    bb0c:	b	bc60 <lzma_vli_encode@@XZ_5.0+0x1608>
    bb10:	str	wzr, [sp, #44]
    bb14:	b	bbd4 <lzma_vli_encode@@XZ_5.0+0x157c>
    bb18:	str	wzr, [sp, #40]
    bb1c:	b	bbc0 <lzma_vli_encode@@XZ_5.0+0x1568>
    bb20:	ldr	x0, [sp, #24]
    bb24:	ldr	x2, [x0, #312]
    bb28:	ldr	w1, [sp, #48]
    bb2c:	mov	x0, x1
    bb30:	lsl	x0, x0, #3
    bb34:	sub	x0, x0, x1
    bb38:	lsl	x0, x0, #2
    bb3c:	add	x0, x0, x1
    bb40:	lsl	x0, x0, #4
    bb44:	add	x0, x2, x0
    bb48:	add	x3, x0, #0x190
    bb4c:	ldr	x0, [sp, #24]
    bb50:	ldr	x2, [x0, #312]
    bb54:	ldr	w1, [sp, #48]
    bb58:	mov	x0, x1
    bb5c:	lsl	x0, x0, #3
    bb60:	sub	x0, x0, x1
    bb64:	lsl	x0, x0, #2
    bb68:	add	x0, x0, x1
    bb6c:	lsl	x0, x0, #4
    bb70:	add	x0, x2, x0
    bb74:	add	x0, x0, #0x160
    bb78:	mov	x1, x0
    bb7c:	mov	x0, x3
    bb80:	bl	af1c <lzma_vli_encode@@XZ_5.0+0x8c4>
    bb84:	ldr	x0, [sp, #24]
    bb88:	ldr	x2, [x0, #312]
    bb8c:	ldr	w1, [sp, #48]
    bb90:	mov	x0, x1
    bb94:	lsl	x0, x0, #3
    bb98:	sub	x0, x0, x1
    bb9c:	lsl	x0, x0, #2
    bba0:	add	x0, x0, x1
    bba4:	lsl	x0, x0, #4
    bba8:	add	x0, x2, x0
    bbac:	ldr	w0, [x0]
    bbb0:	cmp	w0, #0x0
    bbb4:	b.ne	bb20 <lzma_vli_encode@@XZ_5.0+0x14c8>  // b.any
    bbb8:	mov	w0, #0x1                   	// #1
    bbbc:	str	w0, [sp, #40]
    bbc0:	ldr	w0, [sp, #40]
    bbc4:	cmp	w0, #0x0
    bbc8:	b.eq	bb84 <lzma_vli_encode@@XZ_5.0+0x152c>  // b.none
    bbcc:	mov	w0, #0x1                   	// #1
    bbd0:	str	w0, [sp, #44]
    bbd4:	ldr	w0, [sp, #44]
    bbd8:	cmp	w0, #0x0
    bbdc:	b.eq	bc18 <lzma_vli_encode@@XZ_5.0+0x15c0>  // b.none
    bbe0:	ldr	x0, [sp, #24]
    bbe4:	ldr	x2, [x0, #312]
    bbe8:	ldr	w1, [sp, #48]
    bbec:	mov	x0, x1
    bbf0:	lsl	x0, x0, #3
    bbf4:	sub	x0, x0, x1
    bbf8:	lsl	x0, x0, #2
    bbfc:	add	x0, x0, x1
    bc00:	lsl	x0, x0, #4
    bc04:	add	x0, x2, x0
    bc08:	add	x0, x0, #0x160
    bc0c:	bl	ae0c <lzma_vli_encode@@XZ_5.0+0x7b4>
    bc10:	mov	w0, #0x0                   	// #0
    bc14:	b	bc4c <lzma_vli_encode@@XZ_5.0+0x15f4>
    bc18:	ldr	x0, [sp, #24]
    bc1c:	ldr	x2, [x0, #312]
    bc20:	ldr	w1, [sp, #48]
    bc24:	mov	x0, x1
    bc28:	lsl	x0, x0, #3
    bc2c:	sub	x0, x0, x1
    bc30:	lsl	x0, x0, #2
    bc34:	add	x0, x0, x1
    bc38:	lsl	x0, x0, #4
    bc3c:	add	x0, x2, x0
    bc40:	add	x0, x0, #0x160
    bc44:	bl	ade8 <lzma_vli_encode@@XZ_5.0+0x790>
    bc48:	mov	w0, #0x1                   	// #1
    bc4c:	cmp	w0, #0x0
    bc50:	b.ne	bb18 <lzma_vli_encode@@XZ_5.0+0x14c0>  // b.any
    bc54:	ldr	w0, [sp, #48]
    bc58:	add	w0, w0, #0x1
    bc5c:	str	w0, [sp, #48]
    bc60:	ldr	x0, [sp, #24]
    bc64:	ldr	w0, [x0, #324]
    bc68:	ldr	w1, [sp, #48]
    bc6c:	cmp	w1, w0
    bc70:	b.cc	bb10 <lzma_vli_encode@@XZ_5.0+0x14b8>  // b.lo, b.ul, b.last
    bc74:	b	bc7c <lzma_vli_encode@@XZ_5.0+0x1624>
    bc78:	nop
    bc7c:	ldp	x29, x30, [sp], #64
    bc80:	ret
    bc84:	stp	x29, x30, [sp, #-64]!
    bc88:	mov	x29, sp
    bc8c:	str	x0, [sp, #24]
    bc90:	str	x1, [sp, #16]
    bc94:	str	wzr, [sp, #60]
    bc98:	b	bdb4 <lzma_vli_encode@@XZ_5.0+0x175c>
    bc9c:	str	wzr, [sp, #56]
    bca0:	b	bd28 <lzma_vli_encode@@XZ_5.0+0x16d0>
    bca4:	str	wzr, [sp, #52]
    bca8:	b	bd14 <lzma_vli_encode@@XZ_5.0+0x16bc>
    bcac:	ldr	x0, [sp, #24]
    bcb0:	ldr	x2, [x0, #312]
    bcb4:	ldr	w1, [sp, #60]
    bcb8:	mov	x0, x1
    bcbc:	lsl	x0, x0, #3
    bcc0:	sub	x0, x0, x1
    bcc4:	lsl	x0, x0, #2
    bcc8:	add	x0, x0, x1
    bccc:	lsl	x0, x0, #4
    bcd0:	add	x0, x2, x0
    bcd4:	mov	w1, #0x4                   	// #4
    bcd8:	str	w1, [x0]
    bcdc:	ldr	x0, [sp, #24]
    bce0:	ldr	x2, [x0, #312]
    bce4:	ldr	w1, [sp, #60]
    bce8:	mov	x0, x1
    bcec:	lsl	x0, x0, #3
    bcf0:	sub	x0, x0, x1
    bcf4:	lsl	x0, x0, #2
    bcf8:	add	x0, x0, x1
    bcfc:	lsl	x0, x0, #4
    bd00:	add	x0, x2, x0
    bd04:	add	x0, x0, #0x190
    bd08:	bl	aef8 <lzma_vli_encode@@XZ_5.0+0x8a0>
    bd0c:	mov	w0, #0x1                   	// #1
    bd10:	str	w0, [sp, #52]
    bd14:	ldr	w0, [sp, #52]
    bd18:	cmp	w0, #0x0
    bd1c:	b.eq	bcac <lzma_vli_encode@@XZ_5.0+0x1654>  // b.none
    bd20:	mov	w0, #0x1                   	// #1
    bd24:	str	w0, [sp, #56]
    bd28:	ldr	w0, [sp, #56]
    bd2c:	cmp	w0, #0x0
    bd30:	b.eq	bd6c <lzma_vli_encode@@XZ_5.0+0x1714>  // b.none
    bd34:	ldr	x0, [sp, #24]
    bd38:	ldr	x2, [x0, #312]
    bd3c:	ldr	w1, [sp, #60]
    bd40:	mov	x0, x1
    bd44:	lsl	x0, x0, #3
    bd48:	sub	x0, x0, x1
    bd4c:	lsl	x0, x0, #2
    bd50:	add	x0, x0, x1
    bd54:	lsl	x0, x0, #4
    bd58:	add	x0, x2, x0
    bd5c:	add	x0, x0, #0x160
    bd60:	bl	ae0c <lzma_vli_encode@@XZ_5.0+0x7b4>
    bd64:	mov	w0, #0x0                   	// #0
    bd68:	b	bda0 <lzma_vli_encode@@XZ_5.0+0x1748>
    bd6c:	ldr	x0, [sp, #24]
    bd70:	ldr	x2, [x0, #312]
    bd74:	ldr	w1, [sp, #60]
    bd78:	mov	x0, x1
    bd7c:	lsl	x0, x0, #3
    bd80:	sub	x0, x0, x1
    bd84:	lsl	x0, x0, #2
    bd88:	add	x0, x0, x1
    bd8c:	lsl	x0, x0, #4
    bd90:	add	x0, x2, x0
    bd94:	add	x0, x0, #0x160
    bd98:	bl	ade8 <lzma_vli_encode@@XZ_5.0+0x790>
    bd9c:	mov	w0, #0x1                   	// #1
    bda0:	cmp	w0, #0x0
    bda4:	b.ne	bca4 <lzma_vli_encode@@XZ_5.0+0x164c>  // b.any
    bda8:	ldr	w0, [sp, #60]
    bdac:	add	w0, w0, #0x1
    bdb0:	str	w0, [sp, #60]
    bdb4:	ldr	x0, [sp, #24]
    bdb8:	ldr	w0, [x0, #324]
    bdbc:	ldr	w1, [sp, #60]
    bdc0:	cmp	w1, w0
    bdc4:	b.cc	bc9c <lzma_vli_encode@@XZ_5.0+0x1644>  // b.lo, b.ul, b.last
    bdc8:	str	wzr, [sp, #48]
    bdcc:	b	be10 <lzma_vli_encode@@XZ_5.0+0x17b8>
    bdd0:	ldr	x0, [sp, #24]
    bdd4:	ldr	x2, [x0, #312]
    bdd8:	ldr	w1, [sp, #48]
    bddc:	mov	x0, x1
    bde0:	lsl	x0, x0, #3
    bde4:	sub	x0, x0, x1
    bde8:	lsl	x0, x0, #2
    bdec:	add	x0, x0, x1
    bdf0:	lsl	x0, x0, #4
    bdf4:	add	x0, x2, x0
    bdf8:	ldr	x0, [x0, #456]
    bdfc:	bl	ad84 <lzma_vli_encode@@XZ_5.0+0x72c>
    be00:	str	w0, [sp, #44]
    be04:	ldr	w0, [sp, #48]
    be08:	add	w0, w0, #0x1
    be0c:	str	w0, [sp, #48]
    be10:	ldr	x0, [sp, #24]
    be14:	ldr	w0, [x0, #324]
    be18:	ldr	w1, [sp, #48]
    be1c:	cmp	w1, w0
    be20:	b.cc	bdd0 <lzma_vli_encode@@XZ_5.0+0x1778>  // b.lo, b.ul, b.last
    be24:	ldr	x0, [sp, #24]
    be28:	ldr	x0, [x0, #312]
    be2c:	ldr	x1, [sp, #16]
    be30:	bl	3814 <lzma_version_string@@XZ_5.0+0x124>
    be34:	nop
    be38:	ldp	x29, x30, [sp], #64
    be3c:	ret
    be40:	stp	x29, x30, [sp, #-112]!
    be44:	mov	x29, sp
    be48:	str	x0, [sp, #24]
    be4c:	str	x1, [sp, #16]
    be50:	ldr	x0, [sp, #24]
    be54:	ldr	x2, [x0, #312]
    be58:	ldr	x0, [sp, #24]
    be5c:	ldr	w0, [x0, #324]
    be60:	mov	w1, w0
    be64:	mov	x0, x1
    be68:	lsl	x0, x0, #3
    be6c:	sub	x0, x0, x1
    be70:	lsl	x0, x0, #2
    be74:	add	x0, x0, x1
    be78:	lsl	x0, x0, #4
    be7c:	add	x0, x2, x0
    be80:	str	x0, [sp, #104]
    be84:	ldr	x0, [sp, #24]
    be88:	ldr	x0, [x0, #8]
    be8c:	ldr	x1, [sp, #16]
    be90:	bl	36fc <lzma_version_string@@XZ_5.0+0xc>
    be94:	mov	x1, x0
    be98:	ldr	x0, [sp, #104]
    be9c:	str	x1, [x0, #8]
    bea0:	ldr	x0, [sp, #104]
    bea4:	ldr	x0, [x0, #8]
    bea8:	cmp	x0, #0x0
    beac:	b.ne	beb8 <lzma_vli_encode@@XZ_5.0+0x1860>  // b.any
    beb0:	mov	w0, #0x5                   	// #5
    beb4:	b	bfe8 <lzma_vli_encode@@XZ_5.0+0x1990>
    beb8:	ldr	x0, [sp, #104]
    bebc:	add	x0, x0, #0x160
    bec0:	bl	ada4 <lzma_vli_encode@@XZ_5.0+0x74c>
    bec4:	cmp	w0, #0x0
    bec8:	b.ne	bfd0 <lzma_vli_encode@@XZ_5.0+0x1978>  // b.any
    becc:	ldr	x0, [sp, #104]
    bed0:	add	x0, x0, #0x190
    bed4:	bl	ae30 <lzma_vli_encode@@XZ_5.0+0x7d8>
    bed8:	cmp	w0, #0x0
    bedc:	b.ne	bfbc <lzma_vli_encode@@XZ_5.0+0x1964>  // b.any
    bee0:	ldr	x0, [sp, #104]
    bee4:	str	wzr, [x0]
    bee8:	ldr	x0, [sp, #104]
    beec:	ldr	x1, [sp, #16]
    bef0:	str	x1, [x0, #40]
    bef4:	ldr	x0, [sp, #104]
    bef8:	ldr	x1, [sp, #24]
    befc:	str	x1, [x0, #32]
    bf00:	ldr	x0, [sp, #104]
    bf04:	str	xzr, [x0, #48]
    bf08:	ldr	x0, [sp, #104]
    bf0c:	str	xzr, [x0, #56]
    bf10:	ldr	x0, [sp, #104]
    bf14:	str	xzr, [x0, #64]
    bf18:	ldr	x0, [sp, #104]
    bf1c:	mov	x1, #0xffffffffffffffff    	// #-1
    bf20:	str	x1, [x0, #72]
    bf24:	ldr	x0, [sp, #104]
    bf28:	str	xzr, [x0, #80]
    bf2c:	ldr	x0, [sp, #104]
    bf30:	str	xzr, [x0, #88]
    bf34:	ldr	x0, [sp, #104]
    bf38:	str	xzr, [x0, #96]
    bf3c:	ldr	x0, [sp, #104]
    bf40:	str	xzr, [x0, #104]
    bf44:	ldr	x0, [sp, #104]
    bf48:	str	xzr, [x0, #112]
    bf4c:	ldr	x0, [sp, #104]
    bf50:	str	xzr, [x0, #120]
    bf54:	ldr	x0, [sp, #104]
    bf58:	str	xzr, [x0, #128]
    bf5c:	ldr	x0, [sp, #104]
    bf60:	add	x3, x0, #0x1c8
    bf64:	ldr	x2, [sp, #104]
    bf68:	adrp	x0, b000 <lzma_vli_encode@@XZ_5.0+0x9a8>
    bf6c:	add	x1, x0, #0x6a4
    bf70:	mov	x0, x3
    bf74:	bl	ad18 <lzma_vli_encode@@XZ_5.0+0x6c0>
    bf78:	cmp	w0, #0x0
    bf7c:	b.ne	bfa8 <lzma_vli_encode@@XZ_5.0+0x1950>  // b.any
    bf80:	ldr	x0, [sp, #24]
    bf84:	ldr	w0, [x0, #324]
    bf88:	add	w1, w0, #0x1
    bf8c:	ldr	x0, [sp, #24]
    bf90:	str	w1, [x0, #324]
    bf94:	ldr	x0, [sp, #24]
    bf98:	ldr	x1, [sp, #104]
    bf9c:	str	x1, [x0, #336]
    bfa0:	mov	w0, #0x0                   	// #0
    bfa4:	b	bfe8 <lzma_vli_encode@@XZ_5.0+0x1990>
    bfa8:	nop
    bfac:	ldr	x0, [sp, #104]
    bfb0:	add	x0, x0, #0x190
    bfb4:	bl	aed4 <lzma_vli_encode@@XZ_5.0+0x87c>
    bfb8:	b	bfc0 <lzma_vli_encode@@XZ_5.0+0x1968>
    bfbc:	nop
    bfc0:	ldr	x0, [sp, #104]
    bfc4:	add	x0, x0, #0x160
    bfc8:	bl	adc4 <lzma_vli_encode@@XZ_5.0+0x76c>
    bfcc:	b	bfd4 <lzma_vli_encode@@XZ_5.0+0x197c>
    bfd0:	nop
    bfd4:	ldr	x0, [sp, #104]
    bfd8:	ldr	x0, [x0, #8]
    bfdc:	ldr	x1, [sp, #16]
    bfe0:	bl	3814 <lzma_version_string@@XZ_5.0+0x124>
    bfe4:	mov	w0, #0x5                   	// #5
    bfe8:	ldp	x29, x30, [sp], #112
    bfec:	ret
    bff0:	stp	x29, x30, [sp, #-80]!
    bff4:	mov	x29, sp
    bff8:	str	x19, [sp, #16]
    bffc:	str	x0, [sp, #40]
    c000:	str	x1, [sp, #32]
    c004:	ldr	x0, [sp, #40]
    c008:	add	x0, x0, #0x100
    c00c:	bl	b088 <lzma_vli_encode@@XZ_5.0+0xa30>
    c010:	and	w0, w0, #0xff
    c014:	eor	w0, w0, #0x1
    c018:	and	w0, w0, #0xff
    c01c:	cmp	w0, #0x0
    c020:	b.eq	c02c <lzma_vli_encode@@XZ_5.0+0x19d4>  // b.none
    c024:	mov	w0, #0x0                   	// #0
    c028:	b	c1d0 <lzma_vli_encode@@XZ_5.0+0x1b78>
    c02c:	str	wzr, [sp, #76]
    c030:	b	c08c <lzma_vli_encode@@XZ_5.0+0x1a34>
    c034:	str	wzr, [sp, #72]
    c038:	b	c078 <lzma_vli_encode@@XZ_5.0+0x1a20>
    c03c:	ldr	x0, [sp, #40]
    c040:	ldr	x0, [x0, #328]
    c044:	cmp	x0, #0x0
    c048:	b.eq	c070 <lzma_vli_encode@@XZ_5.0+0x1a18>  // b.none
    c04c:	ldr	x0, [sp, #40]
    c050:	ldr	x1, [x0, #328]
    c054:	ldr	x0, [sp, #40]
    c058:	str	x1, [x0, #336]
    c05c:	ldr	x0, [sp, #40]
    c060:	ldr	x0, [x0, #328]
    c064:	ldr	x1, [x0, #344]
    c068:	ldr	x0, [sp, #40]
    c06c:	str	x1, [x0, #328]
    c070:	mov	w0, #0x1                   	// #1
    c074:	str	w0, [sp, #72]
    c078:	ldr	w0, [sp, #72]
    c07c:	cmp	w0, #0x0
    c080:	b.eq	c03c <lzma_vli_encode@@XZ_5.0+0x19e4>  // b.none
    c084:	mov	w0, #0x1                   	// #1
    c088:	str	w0, [sp, #76]
    c08c:	ldr	w0, [sp, #76]
    c090:	cmp	w0, #0x0
    c094:	b.eq	c0ac <lzma_vli_encode@@XZ_5.0+0x1a54>  // b.none
    c098:	ldr	x0, [sp, #40]
    c09c:	add	x0, x0, #0x168
    c0a0:	bl	ae0c <lzma_vli_encode@@XZ_5.0+0x7b4>
    c0a4:	mov	w0, #0x0                   	// #0
    c0a8:	b	c0bc <lzma_vli_encode@@XZ_5.0+0x1a64>
    c0ac:	ldr	x0, [sp, #40]
    c0b0:	add	x0, x0, #0x168
    c0b4:	bl	ade8 <lzma_vli_encode@@XZ_5.0+0x790>
    c0b8:	mov	w0, #0x1                   	// #1
    c0bc:	cmp	w0, #0x0
    c0c0:	b.ne	c034 <lzma_vli_encode@@XZ_5.0+0x19dc>  // b.any
    c0c4:	ldr	x0, [sp, #40]
    c0c8:	ldr	x0, [x0, #336]
    c0cc:	cmp	x0, #0x0
    c0d0:	b.ne	c118 <lzma_vli_encode@@XZ_5.0+0x1ac0>  // b.any
    c0d4:	ldr	x0, [sp, #40]
    c0d8:	ldr	w1, [x0, #324]
    c0dc:	ldr	x0, [sp, #40]
    c0e0:	ldr	w0, [x0, #320]
    c0e4:	cmp	w1, w0
    c0e8:	b.ne	c0f4 <lzma_vli_encode@@XZ_5.0+0x1a9c>  // b.any
    c0ec:	mov	w0, #0x0                   	// #0
    c0f0:	b	c1d0 <lzma_vli_encode@@XZ_5.0+0x1b78>
    c0f4:	ldr	x1, [sp, #32]
    c0f8:	ldr	x0, [sp, #40]
    c0fc:	bl	be40 <lzma_vli_encode@@XZ_5.0+0x17e8>
    c100:	str	w0, [sp, #60]
    c104:	ldr	w0, [sp, #60]
    c108:	cmp	w0, #0x0
    c10c:	b.eq	c118 <lzma_vli_encode@@XZ_5.0+0x1ac0>  // b.none
    c110:	ldr	w0, [sp, #60]
    c114:	b	c1d0 <lzma_vli_encode@@XZ_5.0+0x1b78>
    c118:	str	wzr, [sp, #68]
    c11c:	b	c18c <lzma_vli_encode@@XZ_5.0+0x1b34>
    c120:	str	wzr, [sp, #64]
    c124:	b	c178 <lzma_vli_encode@@XZ_5.0+0x1b20>
    c128:	ldr	x0, [sp, #40]
    c12c:	ldr	x0, [x0, #336]
    c130:	mov	w1, #0x1                   	// #1
    c134:	str	w1, [x0]
    c138:	ldr	x0, [sp, #40]
    c13c:	ldr	x0, [x0, #336]
    c140:	str	xzr, [x0, #16]
    c144:	ldr	x0, [sp, #40]
    c148:	add	x1, x0, #0x100
    c14c:	ldr	x0, [sp, #40]
    c150:	ldr	x19, [x0, #336]
    c154:	mov	x0, x1
    c158:	bl	aa50 <lzma_vli_encode@@XZ_5.0+0x3f8>
    c15c:	str	x0, [x19, #24]
    c160:	ldr	x0, [sp, #40]
    c164:	ldr	x0, [x0, #336]
    c168:	add	x0, x0, #0x190
    c16c:	bl	aef8 <lzma_vli_encode@@XZ_5.0+0x8a0>
    c170:	mov	w0, #0x1                   	// #1
    c174:	str	w0, [sp, #64]
    c178:	ldr	w0, [sp, #64]
    c17c:	cmp	w0, #0x0
    c180:	b.eq	c128 <lzma_vli_encode@@XZ_5.0+0x1ad0>  // b.none
    c184:	mov	w0, #0x1                   	// #1
    c188:	str	w0, [sp, #68]
    c18c:	ldr	w0, [sp, #68]
    c190:	cmp	w0, #0x0
    c194:	b.eq	c1b0 <lzma_vli_encode@@XZ_5.0+0x1b58>  // b.none
    c198:	ldr	x0, [sp, #40]
    c19c:	ldr	x0, [x0, #336]
    c1a0:	add	x0, x0, #0x160
    c1a4:	bl	ae0c <lzma_vli_encode@@XZ_5.0+0x7b4>
    c1a8:	mov	w0, #0x0                   	// #0
    c1ac:	b	c1c4 <lzma_vli_encode@@XZ_5.0+0x1b6c>
    c1b0:	ldr	x0, [sp, #40]
    c1b4:	ldr	x0, [x0, #336]
    c1b8:	add	x0, x0, #0x160
    c1bc:	bl	ade8 <lzma_vli_encode@@XZ_5.0+0x790>
    c1c0:	mov	w0, #0x1                   	// #1
    c1c4:	cmp	w0, #0x0
    c1c8:	b.ne	c120 <lzma_vli_encode@@XZ_5.0+0x1ac8>  // b.any
    c1cc:	mov	w0, #0x0                   	// #0
    c1d0:	ldr	x19, [sp, #16]
    c1d4:	ldp	x29, x30, [sp], #80
    c1d8:	ret
    c1dc:	stp	x29, x30, [sp, #-112]!
    c1e0:	mov	x29, sp
    c1e4:	str	x0, [sp, #56]
    c1e8:	str	x1, [sp, #48]
    c1ec:	str	x2, [sp, #40]
    c1f0:	str	x3, [sp, #32]
    c1f4:	str	x4, [sp, #24]
    c1f8:	str	w5, [sp, #20]
    c1fc:	b	c430 <lzma_vli_encode@@XZ_5.0+0x1dd8>
    c200:	ldr	x0, [sp, #56]
    c204:	ldr	x0, [x0, #336]
    c208:	cmp	x0, #0x0
    c20c:	b.ne	c238 <lzma_vli_encode@@XZ_5.0+0x1be0>  // b.any
    c210:	ldr	x1, [sp, #48]
    c214:	ldr	x0, [sp, #56]
    c218:	bl	bff0 <lzma_vli_encode@@XZ_5.0+0x1998>
    c21c:	str	w0, [sp, #84]
    c220:	ldr	x0, [sp, #56]
    c224:	ldr	x0, [x0, #336]
    c228:	cmp	x0, #0x0
    c22c:	b.ne	c238 <lzma_vli_encode@@XZ_5.0+0x1be0>  // b.any
    c230:	ldr	w0, [sp, #84]
    c234:	b	c464 <lzma_vli_encode@@XZ_5.0+0x1e0c>
    c238:	ldr	x0, [sp, #56]
    c23c:	ldr	x0, [x0, #336]
    c240:	ldr	x0, [x0, #16]
    c244:	str	x0, [sp, #72]
    c248:	ldr	x0, [sp, #56]
    c24c:	ldr	x0, [x0, #336]
    c250:	ldr	x1, [x0, #8]
    c254:	ldr	x0, [sp, #56]
    c258:	ldr	x2, [x0, #8]
    c25c:	add	x0, sp, #0x48
    c260:	mov	x5, x2
    c264:	mov	x4, x0
    c268:	mov	x3, x1
    c26c:	ldr	x2, [sp, #24]
    c270:	ldr	x1, [sp, #32]
    c274:	ldr	x0, [sp, #40]
    c278:	bl	3870 <lzma_version_string@@XZ_5.0+0x180>
    c27c:	ldr	x0, [sp, #56]
    c280:	ldr	x1, [x0, #8]
    c284:	ldr	x0, [sp, #72]
    c288:	cmp	x1, x0
    c28c:	b.eq	c2b0 <lzma_vli_encode@@XZ_5.0+0x1c58>  // b.none
    c290:	ldr	x0, [sp, #32]
    c294:	ldr	x0, [x0]
    c298:	ldr	x1, [sp, #24]
    c29c:	cmp	x1, x0
    c2a0:	b.ne	c2b8 <lzma_vli_encode@@XZ_5.0+0x1c60>  // b.any
    c2a4:	ldr	w0, [sp, #20]
    c2a8:	cmp	w0, #0x0
    c2ac:	b.eq	c2b8 <lzma_vli_encode@@XZ_5.0+0x1c60>  // b.none
    c2b0:	mov	w0, #0x1                   	// #1
    c2b4:	b	c2bc <lzma_vli_encode@@XZ_5.0+0x1c64>
    c2b8:	mov	w0, #0x0                   	// #0
    c2bc:	strb	w0, [sp, #83]
    c2c0:	ldrb	w0, [sp, #83]
    c2c4:	and	w0, w0, #0x1
    c2c8:	strb	w0, [sp, #83]
    c2cc:	strb	wzr, [sp, #111]
    c2d0:	str	wzr, [sp, #104]
    c2d4:	b	c358 <lzma_vli_encode@@XZ_5.0+0x1d00>
    c2d8:	str	wzr, [sp, #100]
    c2dc:	b	c344 <lzma_vli_encode@@XZ_5.0+0x1cec>
    c2e0:	ldr	x0, [sp, #56]
    c2e4:	ldr	x0, [x0, #336]
    c2e8:	ldr	w0, [x0]
    c2ec:	cmp	w0, #0x0
    c2f0:	b.ne	c300 <lzma_vli_encode@@XZ_5.0+0x1ca8>  // b.any
    c2f4:	mov	w0, #0x1                   	// #1
    c2f8:	strb	w0, [sp, #111]
    c2fc:	b	c33c <lzma_vli_encode@@XZ_5.0+0x1ce4>
    c300:	ldr	x0, [sp, #56]
    c304:	ldr	x0, [x0, #336]
    c308:	ldr	x1, [sp, #72]
    c30c:	str	x1, [x0, #16]
    c310:	ldrb	w0, [sp, #83]
    c314:	cmp	w0, #0x0
    c318:	b.eq	c32c <lzma_vli_encode@@XZ_5.0+0x1cd4>  // b.none
    c31c:	ldr	x0, [sp, #56]
    c320:	ldr	x0, [x0, #336]
    c324:	mov	w1, #0x2                   	// #2
    c328:	str	w1, [x0]
    c32c:	ldr	x0, [sp, #56]
    c330:	ldr	x0, [x0, #336]
    c334:	add	x0, x0, #0x190
    c338:	bl	aef8 <lzma_vli_encode@@XZ_5.0+0x8a0>
    c33c:	mov	w0, #0x1                   	// #1
    c340:	str	w0, [sp, #100]
    c344:	ldr	w0, [sp, #100]
    c348:	cmp	w0, #0x0
    c34c:	b.eq	c2e0 <lzma_vli_encode@@XZ_5.0+0x1c88>  // b.none
    c350:	mov	w0, #0x1                   	// #1
    c354:	str	w0, [sp, #104]
    c358:	ldr	w0, [sp, #104]
    c35c:	cmp	w0, #0x0
    c360:	b.eq	c37c <lzma_vli_encode@@XZ_5.0+0x1d24>  // b.none
    c364:	ldr	x0, [sp, #56]
    c368:	ldr	x0, [x0, #336]
    c36c:	add	x0, x0, #0x160
    c370:	bl	ae0c <lzma_vli_encode@@XZ_5.0+0x7b4>
    c374:	mov	w0, #0x0                   	// #0
    c378:	b	c390 <lzma_vli_encode@@XZ_5.0+0x1d38>
    c37c:	ldr	x0, [sp, #56]
    c380:	ldr	x0, [x0, #336]
    c384:	add	x0, x0, #0x160
    c388:	bl	ade8 <lzma_vli_encode@@XZ_5.0+0x790>
    c38c:	mov	w0, #0x1                   	// #1
    c390:	cmp	w0, #0x0
    c394:	b.ne	c2d8 <lzma_vli_encode@@XZ_5.0+0x1c80>  // b.any
    c398:	ldrb	w0, [sp, #111]
    c39c:	cmp	w0, #0x0
    c3a0:	b.eq	c41c <lzma_vli_encode@@XZ_5.0+0x1dc4>  // b.none
    c3a4:	str	wzr, [sp, #92]
    c3a8:	b	c3dc <lzma_vli_encode@@XZ_5.0+0x1d84>
    c3ac:	str	wzr, [sp, #88]
    c3b0:	b	c3c8 <lzma_vli_encode@@XZ_5.0+0x1d70>
    c3b4:	ldr	x0, [sp, #56]
    c3b8:	ldr	w0, [x0, #308]
    c3bc:	str	w0, [sp, #96]
    c3c0:	mov	w0, #0x1                   	// #1
    c3c4:	str	w0, [sp, #88]
    c3c8:	ldr	w0, [sp, #88]
    c3cc:	cmp	w0, #0x0
    c3d0:	b.eq	c3b4 <lzma_vli_encode@@XZ_5.0+0x1d5c>  // b.none
    c3d4:	mov	w0, #0x1                   	// #1
    c3d8:	str	w0, [sp, #92]
    c3dc:	ldr	w0, [sp, #92]
    c3e0:	cmp	w0, #0x0
    c3e4:	b.eq	c3fc <lzma_vli_encode@@XZ_5.0+0x1da4>  // b.none
    c3e8:	ldr	x0, [sp, #56]
    c3ec:	add	x0, x0, #0x168
    c3f0:	bl	ae0c <lzma_vli_encode@@XZ_5.0+0x7b4>
    c3f4:	mov	w0, #0x0                   	// #0
    c3f8:	b	c40c <lzma_vli_encode@@XZ_5.0+0x1db4>
    c3fc:	ldr	x0, [sp, #56]
    c400:	add	x0, x0, #0x168
    c404:	bl	ade8 <lzma_vli_encode@@XZ_5.0+0x790>
    c408:	mov	w0, #0x1                   	// #1
    c40c:	cmp	w0, #0x0
    c410:	b.ne	c3ac <lzma_vli_encode@@XZ_5.0+0x1d54>  // b.any
    c414:	ldr	w0, [sp, #96]
    c418:	b	c464 <lzma_vli_encode@@XZ_5.0+0x1e0c>
    c41c:	ldrb	w0, [sp, #83]
    c420:	cmp	w0, #0x0
    c424:	b.eq	c430 <lzma_vli_encode@@XZ_5.0+0x1dd8>  // b.none
    c428:	ldr	x0, [sp, #56]
    c42c:	str	xzr, [x0, #336]
    c430:	ldr	x0, [sp, #32]
    c434:	ldr	x0, [x0]
    c438:	ldr	x1, [sp, #24]
    c43c:	cmp	x1, x0
    c440:	b.hi	c200 <lzma_vli_encode@@XZ_5.0+0x1ba8>  // b.pmore
    c444:	ldr	x0, [sp, #56]
    c448:	ldr	x0, [x0, #336]
    c44c:	cmp	x0, #0x0
    c450:	b.eq	c460 <lzma_vli_encode@@XZ_5.0+0x1e08>  // b.none
    c454:	ldr	w0, [sp, #20]
    c458:	cmp	w0, #0x0
    c45c:	b.ne	c200 <lzma_vli_encode@@XZ_5.0+0x1ba8>  // b.any
    c460:	mov	w0, #0x0                   	// #0
    c464:	ldp	x29, x30, [sp], #112
    c468:	ret
    c46c:	stp	x29, x30, [sp, #-64]!
    c470:	mov	x29, sp
    c474:	str	x0, [sp, #40]
    c478:	str	x1, [sp, #32]
    c47c:	str	x2, [sp, #24]
    c480:	strb	w3, [sp, #23]
    c484:	ldr	x0, [sp, #40]
    c488:	ldr	w0, [x0, #304]
    c48c:	cmp	w0, #0x0
    c490:	b.eq	c4d4 <lzma_vli_encode@@XZ_5.0+0x1e7c>  // b.none
    c494:	ldr	x0, [sp, #24]
    c498:	ldrb	w0, [x0]
    c49c:	eor	w0, w0, #0x1
    c4a0:	and	w0, w0, #0xff
    c4a4:	cmp	w0, #0x0
    c4a8:	b.eq	c4d4 <lzma_vli_encode@@XZ_5.0+0x1e7c>  // b.none
    c4ac:	ldr	x0, [sp, #24]
    c4b0:	mov	w1, #0x1                   	// #1
    c4b4:	strb	w1, [x0]
    c4b8:	ldr	x0, [sp, #40]
    c4bc:	add	x1, x0, #0x198
    c4c0:	ldr	x0, [sp, #40]
    c4c4:	ldr	w0, [x0, #304]
    c4c8:	mov	w2, w0
    c4cc:	ldr	x0, [sp, #32]
    c4d0:	bl	af7c <lzma_vli_encode@@XZ_5.0+0x924>
    c4d4:	strb	wzr, [sp, #63]
    c4d8:	str	wzr, [sp, #56]
    c4dc:	b	c5e8 <lzma_vli_encode@@XZ_5.0+0x1f90>
    c4e0:	str	wzr, [sp, #52]
    c4e4:	b	c5d4 <lzma_vli_encode@@XZ_5.0+0x1f7c>
    c4e8:	ldr	x0, [sp, #40]
    c4ec:	ldr	w0, [x0, #304]
    c4f0:	cmp	w0, #0x0
    c4f4:	b.eq	c528 <lzma_vli_encode@@XZ_5.0+0x1ed0>  // b.none
    c4f8:	ldr	x0, [sp, #40]
    c4fc:	add	x3, x0, #0x198
    c500:	ldr	x0, [sp, #40]
    c504:	add	x0, x0, #0x168
    c508:	ldr	x2, [sp, #32]
    c50c:	mov	x1, x0
    c510:	mov	x0, x3
    c514:	bl	af48 <lzma_vli_encode@@XZ_5.0+0x8f0>
    c518:	cmp	w0, #0x0
    c51c:	cset	w0, ne  // ne = any
    c520:	strb	w0, [sp, #63]
    c524:	b	c544 <lzma_vli_encode@@XZ_5.0+0x1eec>
    c528:	ldr	x0, [sp, #40]
    c52c:	add	x2, x0, #0x198
    c530:	ldr	x0, [sp, #40]
    c534:	add	x0, x0, #0x168
    c538:	mov	x1, x0
    c53c:	mov	x0, x2
    c540:	bl	af1c <lzma_vli_encode@@XZ_5.0+0x8c4>
    c544:	ldrb	w0, [sp, #23]
    c548:	eor	w0, w0, #0x1
    c54c:	and	w0, w0, #0xff
    c550:	cmp	w0, #0x0
    c554:	b.ne	c588 <lzma_vli_encode@@XZ_5.0+0x1f30>  // b.any
    c558:	ldr	x0, [sp, #40]
    c55c:	ldr	x0, [x0, #328]
    c560:	cmp	x0, #0x0
    c564:	b.eq	c588 <lzma_vli_encode@@XZ_5.0+0x1f30>  // b.none
    c568:	ldr	x0, [sp, #40]
    c56c:	add	x0, x0, #0x100
    c570:	bl	b088 <lzma_vli_encode@@XZ_5.0+0xa30>
    c574:	and	w0, w0, #0xff
    c578:	eor	w0, w0, #0x1
    c57c:	and	w0, w0, #0xff
    c580:	cmp	w0, #0x0
    c584:	b.eq	c5cc <lzma_vli_encode@@XZ_5.0+0x1f74>  // b.none
    c588:	ldr	x0, [sp, #40]
    c58c:	add	x0, x0, #0x100
    c590:	bl	ab14 <lzma_vli_encode@@XZ_5.0+0x4bc>
    c594:	and	w0, w0, #0xff
    c598:	eor	w0, w0, #0x1
    c59c:	and	w0, w0, #0xff
    c5a0:	cmp	w0, #0x0
    c5a4:	b.eq	c5cc <lzma_vli_encode@@XZ_5.0+0x1f74>  // b.none
    c5a8:	ldr	x0, [sp, #40]
    c5ac:	ldr	w0, [x0, #308]
    c5b0:	cmp	w0, #0x0
    c5b4:	b.ne	c5cc <lzma_vli_encode@@XZ_5.0+0x1f74>  // b.any
    c5b8:	ldrb	w0, [sp, #63]
    c5bc:	eor	w0, w0, #0x1
    c5c0:	and	w0, w0, #0xff
    c5c4:	cmp	w0, #0x0
    c5c8:	b.ne	c4e8 <lzma_vli_encode@@XZ_5.0+0x1e90>  // b.any
    c5cc:	mov	w0, #0x1                   	// #1
    c5d0:	str	w0, [sp, #52]
    c5d4:	ldr	w0, [sp, #52]
    c5d8:	cmp	w0, #0x0
    c5dc:	b.eq	c544 <lzma_vli_encode@@XZ_5.0+0x1eec>  // b.none
    c5e0:	mov	w0, #0x1                   	// #1
    c5e4:	str	w0, [sp, #56]
    c5e8:	ldr	w0, [sp, #56]
    c5ec:	cmp	w0, #0x0
    c5f0:	b.eq	c608 <lzma_vli_encode@@XZ_5.0+0x1fb0>  // b.none
    c5f4:	ldr	x0, [sp, #40]
    c5f8:	add	x0, x0, #0x168
    c5fc:	bl	ae0c <lzma_vli_encode@@XZ_5.0+0x7b4>
    c600:	mov	w0, #0x0                   	// #0
    c604:	b	c618 <lzma_vli_encode@@XZ_5.0+0x1fc0>
    c608:	ldr	x0, [sp, #40]
    c60c:	add	x0, x0, #0x168
    c610:	bl	ade8 <lzma_vli_encode@@XZ_5.0+0x790>
    c614:	mov	w0, #0x1                   	// #1
    c618:	cmp	w0, #0x0
    c61c:	b.ne	c4e0 <lzma_vli_encode@@XZ_5.0+0x1e88>  // b.any
    c620:	ldrb	w0, [sp, #63]
    c624:	ldp	x29, x30, [sp], #64
    c628:	ret
    c62c:	sub	sp, sp, #0xc0
    c630:	stp	x29, x30, [sp, #16]
    c634:	add	x29, sp, #0x10
    c638:	str	x19, [sp, #32]
    c63c:	str	x0, [sp, #104]
    c640:	str	x1, [sp, #96]
    c644:	str	x2, [sp, #88]
    c648:	str	x3, [sp, #80]
    c64c:	str	x4, [sp, #72]
    c650:	str	x5, [sp, #64]
    c654:	str	x6, [sp, #56]
    c658:	str	x7, [sp, #48]
    c65c:	ldr	x0, [sp, #104]
    c660:	str	x0, [sp, #168]
    c664:	ldr	x0, [sp, #168]
    c668:	ldr	w0, [x0]
    c66c:	cmp	w0, #0x3
    c670:	b.eq	ca44 <lzma_vli_encode@@XZ_5.0+0x23ec>  // b.none
    c674:	cmp	w0, #0x3
    c678:	b.hi	ca88 <lzma_vli_encode@@XZ_5.0+0x2430>  // b.pmore
    c67c:	cmp	w0, #0x2
    c680:	b.eq	c9a8 <lzma_vli_encode@@XZ_5.0+0x2350>  // b.none
    c684:	cmp	w0, #0x2
    c688:	b.hi	ca88 <lzma_vli_encode@@XZ_5.0+0x2430>  // b.pmore
    c68c:	cmp	w0, #0x0
    c690:	b.eq	c6a0 <lzma_vli_encode@@XZ_5.0+0x2048>  // b.none
    c694:	cmp	w0, #0x1
    c698:	b.eq	c6f8 <lzma_vli_encode@@XZ_5.0+0x20a0>  // b.none
    c69c:	b	ca88 <lzma_vli_encode@@XZ_5.0+0x2430>
    c6a0:	ldr	x0, [sp, #168]
    c6a4:	add	x6, x0, #0xe8
    c6a8:	ldr	x0, [sp, #168]
    c6ac:	add	x0, x0, #0xf8
    c6b0:	ldr	x5, [sp, #48]
    c6b4:	ldr	x4, [sp, #56]
    c6b8:	ldr	x3, [sp, #64]
    c6bc:	mov	x2, #0xc                   	// #12
    c6c0:	mov	x1, x0
    c6c4:	mov	x0, x6
    c6c8:	bl	3870 <lzma_version_string@@XZ_5.0+0x180>
    c6cc:	ldr	x0, [sp, #168]
    c6d0:	ldr	x0, [x0, #248]
    c6d4:	cmp	x0, #0xb
    c6d8:	b.hi	c6e4 <lzma_vli_encode@@XZ_5.0+0x208c>  // b.pmore
    c6dc:	mov	w0, #0x0                   	// #0
    c6e0:	b	ca8c <lzma_vli_encode@@XZ_5.0+0x2434>
    c6e4:	ldr	x0, [sp, #168]
    c6e8:	str	xzr, [x0, #248]
    c6ec:	ldr	x0, [sp, #168]
    c6f0:	mov	w1, #0x1                   	// #1
    c6f4:	str	w1, [x0]
    c6f8:	str	xzr, [sp, #152]
    c6fc:	str	xzr, [sp, #144]
    c700:	str	wzr, [sp, #188]
    c704:	strb	wzr, [sp, #143]
    c708:	str	wzr, [sp, #184]
    c70c:	b	c780 <lzma_vli_encode@@XZ_5.0+0x2128>
    c710:	str	wzr, [sp, #180]
    c714:	b	c764 <lzma_vli_encode@@XZ_5.0+0x210c>
    c718:	ldr	x0, [sp, #168]
    c71c:	ldr	w0, [x0, #308]
    c720:	str	w0, [sp, #188]
    c724:	ldr	w0, [sp, #188]
    c728:	cmp	w0, #0x0
    c72c:	b.ne	c774 <lzma_vli_encode@@XZ_5.0+0x211c>  // b.any
    c730:	ldr	x0, [sp, #168]
    c734:	add	x0, x0, #0x100
    c738:	add	x2, sp, #0x90
    c73c:	add	x1, sp, #0x98
    c740:	mov	x5, x2
    c744:	mov	x4, x1
    c748:	ldr	x3, [sp, #48]
    c74c:	ldr	x2, [sp, #56]
    c750:	ldr	x1, [sp, #64]
    c754:	bl	ab8c <lzma_vli_encode@@XZ_5.0+0x534>
    c758:	str	w0, [sp, #188]
    c75c:	mov	w0, #0x1                   	// #1
    c760:	str	w0, [sp, #180]
    c764:	ldr	w0, [sp, #180]
    c768:	cmp	w0, #0x0
    c76c:	b.eq	c718 <lzma_vli_encode@@XZ_5.0+0x20c0>  // b.none
    c770:	b	c778 <lzma_vli_encode@@XZ_5.0+0x2120>
    c774:	nop
    c778:	mov	w0, #0x1                   	// #1
    c77c:	str	w0, [sp, #184]
    c780:	ldr	w0, [sp, #184]
    c784:	cmp	w0, #0x0
    c788:	b.eq	c7a0 <lzma_vli_encode@@XZ_5.0+0x2148>  // b.none
    c78c:	ldr	x0, [sp, #168]
    c790:	add	x0, x0, #0x168
    c794:	bl	ae0c <lzma_vli_encode@@XZ_5.0+0x7b4>
    c798:	mov	w0, #0x0                   	// #0
    c79c:	b	c7b0 <lzma_vli_encode@@XZ_5.0+0x2158>
    c7a0:	ldr	x0, [sp, #168]
    c7a4:	add	x0, x0, #0x168
    c7a8:	bl	ade8 <lzma_vli_encode@@XZ_5.0+0x790>
    c7ac:	mov	w0, #0x1                   	// #1
    c7b0:	cmp	w0, #0x0
    c7b4:	b.ne	c710 <lzma_vli_encode@@XZ_5.0+0x20b8>  // b.any
    c7b8:	ldr	w0, [sp, #188]
    c7bc:	cmp	w0, #0x1
    c7c0:	b.ne	c7fc <lzma_vli_encode@@XZ_5.0+0x21a4>  // b.any
    c7c4:	ldr	x0, [sp, #168]
    c7c8:	ldr	x0, [x0, #96]
    c7cc:	ldr	x1, [sp, #152]
    c7d0:	ldr	x2, [sp, #144]
    c7d4:	mov	x3, x2
    c7d8:	mov	x2, x1
    c7dc:	ldr	x1, [sp, #96]
    c7e0:	bl	3300 <lzma_index_append@plt>
    c7e4:	str	w0, [sp, #188]
    c7e8:	ldr	x0, [sp, #56]
    c7ec:	ldr	x0, [x0]
    c7f0:	ldr	x1, [sp, #48]
    c7f4:	cmp	x1, x0
    c7f8:	b.hi	c934 <lzma_vli_encode@@XZ_5.0+0x22dc>  // b.pmore
    c7fc:	ldr	w0, [sp, #188]
    c800:	cmp	w0, #0x0
    c804:	b.eq	c81c <lzma_vli_encode@@XZ_5.0+0x21c4>  // b.none
    c808:	mov	w1, #0x0                   	// #0
    c80c:	ldr	x0, [sp, #168]
    c810:	bl	b9b0 <lzma_vli_encode@@XZ_5.0+0x1358>
    c814:	ldr	w0, [sp, #188]
    c818:	b	ca8c <lzma_vli_encode@@XZ_5.0+0x2434>
    c81c:	ldr	w5, [sp, #192]
    c820:	ldr	x4, [sp, #72]
    c824:	ldr	x3, [sp, #80]
    c828:	ldr	x2, [sp, #88]
    c82c:	ldr	x1, [sp, #96]
    c830:	ldr	x0, [sp, #168]
    c834:	bl	c1dc <lzma_vli_encode@@XZ_5.0+0x1b84>
    c838:	str	w0, [sp, #188]
    c83c:	ldr	w0, [sp, #188]
    c840:	cmp	w0, #0x0
    c844:	b.eq	c85c <lzma_vli_encode@@XZ_5.0+0x2204>  // b.none
    c848:	mov	w1, #0x0                   	// #0
    c84c:	ldr	x0, [sp, #168]
    c850:	bl	b9b0 <lzma_vli_encode@@XZ_5.0+0x1358>
    c854:	ldr	w0, [sp, #188]
    c858:	b	ca8c <lzma_vli_encode@@XZ_5.0+0x2434>
    c85c:	ldr	x0, [sp, #80]
    c860:	ldr	x0, [x0]
    c864:	ldr	x1, [sp, #72]
    c868:	cmp	x1, x0
    c86c:	b.ne	c8d0 <lzma_vli_encode@@XZ_5.0+0x2278>  // b.any
    c870:	ldr	w0, [sp, #192]
    c874:	cmp	w0, #0x0
    c878:	b.ne	c884 <lzma_vli_encode@@XZ_5.0+0x222c>  // b.any
    c87c:	mov	w0, #0x0                   	// #0
    c880:	b	ca8c <lzma_vli_encode@@XZ_5.0+0x2434>
    c884:	ldr	w0, [sp, #192]
    c888:	cmp	w0, #0x4
    c88c:	b.ne	c898 <lzma_vli_encode@@XZ_5.0+0x2240>  // b.any
    c890:	mov	w0, #0x1                   	// #1
    c894:	b	ca8c <lzma_vli_encode@@XZ_5.0+0x2434>
    c898:	ldr	x0, [sp, #168]
    c89c:	add	x0, x0, #0x100
    c8a0:	bl	b0b4 <lzma_vli_encode@@XZ_5.0+0xa5c>
    c8a4:	and	w0, w0, #0xff
    c8a8:	cmp	w0, #0x0
    c8ac:	b.eq	c8d0 <lzma_vli_encode@@XZ_5.0+0x2278>  // b.none
    c8b0:	ldr	w0, [sp, #192]
    c8b4:	cmp	w0, #0x3
    c8b8:	b.eq	c93c <lzma_vli_encode@@XZ_5.0+0x22e4>  // b.none
    c8bc:	ldr	w0, [sp, #192]
    c8c0:	cmp	w0, #0x2
    c8c4:	b.ne	c8d0 <lzma_vli_encode@@XZ_5.0+0x2278>  // b.any
    c8c8:	mov	w0, #0x1                   	// #1
    c8cc:	b	ca8c <lzma_vli_encode@@XZ_5.0+0x2434>
    c8d0:	ldr	x0, [sp, #56]
    c8d4:	ldr	x0, [x0]
    c8d8:	ldr	x1, [sp, #48]
    c8dc:	cmp	x1, x0
    c8e0:	b.ne	c8ec <lzma_vli_encode@@XZ_5.0+0x2294>  // b.any
    c8e4:	mov	w0, #0x0                   	// #0
    c8e8:	b	ca8c <lzma_vli_encode@@XZ_5.0+0x2434>
    c8ec:	ldr	x0, [sp, #80]
    c8f0:	ldr	x0, [x0]
    c8f4:	ldr	x1, [sp, #72]
    c8f8:	cmp	x1, x0
    c8fc:	cset	w0, hi  // hi = pmore
    c900:	and	w2, w0, #0xff
    c904:	add	x1, sp, #0x8f
    c908:	add	x0, sp, #0x78
    c90c:	mov	w3, w2
    c910:	mov	x2, x1
    c914:	mov	x1, x0
    c918:	ldr	x0, [sp, #168]
    c91c:	bl	c46c <lzma_vli_encode@@XZ_5.0+0x1e14>
    c920:	and	w0, w0, #0xff
    c924:	cmp	w0, #0x0
    c928:	b.eq	c708 <lzma_vli_encode@@XZ_5.0+0x20b0>  // b.none
    c92c:	mov	w0, #0x20                  	// #32
    c930:	b	ca8c <lzma_vli_encode@@XZ_5.0+0x2434>
    c934:	nop
    c938:	b	c708 <lzma_vli_encode@@XZ_5.0+0x20b0>
    c93c:	nop
    c940:	ldr	x0, [sp, #168]
    c944:	add	x3, x0, #0x68
    c948:	ldr	x0, [sp, #168]
    c94c:	ldr	x0, [x0, #96]
    c950:	mov	x2, x0
    c954:	ldr	x1, [sp, #96]
    c958:	mov	x0, x3
    c95c:	bl	94d0 <lzma_filter_flags_encode@@XZ_5.0+0x554>
    c960:	str	w0, [sp, #164]
    c964:	ldr	w0, [sp, #164]
    c968:	cmp	w0, #0x0
    c96c:	b.eq	c978 <lzma_vli_encode@@XZ_5.0+0x2320>  // b.none
    c970:	ldr	w0, [sp, #164]
    c974:	b	ca8c <lzma_vli_encode@@XZ_5.0+0x2434>
    c978:	ldr	x0, [sp, #168]
    c97c:	mov	w1, #0x2                   	// #2
    c980:	str	w1, [x0]
    c984:	ldr	x0, [sp, #168]
    c988:	ldr	x19, [x0, #352]
    c98c:	ldr	x0, [sp, #168]
    c990:	ldr	x0, [x0, #96]
    c994:	bl	3510 <lzma_index_size@plt>
    c998:	add	x0, x19, x0
    c99c:	add	x1, x0, #0xc
    c9a0:	ldr	x0, [sp, #168]
    c9a4:	str	x1, [x0, #352]
    c9a8:	ldr	x0, [sp, #168]
    c9ac:	ldr	x8, [x0, #128]
    c9b0:	ldr	x0, [sp, #168]
    c9b4:	ldr	x0, [x0, #104]
    c9b8:	str	wzr, [sp]
    c9bc:	ldr	x7, [sp, #48]
    c9c0:	ldr	x6, [sp, #56]
    c9c4:	ldr	x5, [sp, #64]
    c9c8:	mov	x4, #0x0                   	// #0
    c9cc:	mov	x3, #0x0                   	// #0
    c9d0:	mov	x2, #0x0                   	// #0
    c9d4:	ldr	x1, [sp, #96]
    c9d8:	blr	x8
    c9dc:	str	w0, [sp, #160]
    c9e0:	ldr	w0, [sp, #160]
    c9e4:	cmp	w0, #0x1
    c9e8:	b.eq	c9f4 <lzma_vli_encode@@XZ_5.0+0x239c>  // b.none
    c9ec:	ldr	w0, [sp, #160]
    c9f0:	b	ca8c <lzma_vli_encode@@XZ_5.0+0x2434>
    c9f4:	ldr	x0, [sp, #168]
    c9f8:	ldr	x0, [x0, #96]
    c9fc:	bl	3510 <lzma_index_size@plt>
    ca00:	mov	x1, x0
    ca04:	ldr	x0, [sp, #168]
    ca08:	str	x1, [x0, #184]
    ca0c:	ldr	x0, [sp, #168]
    ca10:	add	x2, x0, #0xb0
    ca14:	ldr	x0, [sp, #168]
    ca18:	add	x0, x0, #0xe8
    ca1c:	mov	x1, x0
    ca20:	mov	x0, x2
    ca24:	bl	3210 <lzma_stream_footer_encode@plt>
    ca28:	cmp	w0, #0x0
    ca2c:	b.eq	ca38 <lzma_vli_encode@@XZ_5.0+0x23e0>  // b.none
    ca30:	mov	w0, #0xb                   	// #11
    ca34:	b	ca8c <lzma_vli_encode@@XZ_5.0+0x2434>
    ca38:	ldr	x0, [sp, #168]
    ca3c:	mov	w1, #0x3                   	// #3
    ca40:	str	w1, [x0]
    ca44:	ldr	x0, [sp, #168]
    ca48:	add	x6, x0, #0xe8
    ca4c:	ldr	x0, [sp, #168]
    ca50:	add	x0, x0, #0xf8
    ca54:	ldr	x5, [sp, #48]
    ca58:	ldr	x4, [sp, #56]
    ca5c:	ldr	x3, [sp, #64]
    ca60:	mov	x2, #0xc                   	// #12
    ca64:	mov	x1, x0
    ca68:	mov	x0, x6
    ca6c:	bl	3870 <lzma_version_string@@XZ_5.0+0x180>
    ca70:	ldr	x0, [sp, #168]
    ca74:	ldr	x0, [x0, #248]
    ca78:	cmp	x0, #0xb
    ca7c:	cset	w0, hi  // hi = pmore
    ca80:	and	w0, w0, #0xff
    ca84:	b	ca8c <lzma_vli_encode@@XZ_5.0+0x2434>
    ca88:	mov	w0, #0xb                   	// #11
    ca8c:	ldr	x19, [sp, #32]
    ca90:	ldp	x29, x30, [sp, #16]
    ca94:	add	sp, sp, #0xc0
    ca98:	ret
    ca9c:	stp	x29, x30, [sp, #-48]!
    caa0:	mov	x29, sp
    caa4:	str	x0, [sp, #24]
    caa8:	str	x1, [sp, #16]
    caac:	ldr	x0, [sp, #24]
    cab0:	str	x0, [sp, #32]
    cab4:	ldr	x1, [sp, #16]
    cab8:	ldr	x0, [sp, #32]
    cabc:	bl	bc84 <lzma_vli_encode@@XZ_5.0+0x162c>
    cac0:	ldr	x0, [sp, #32]
    cac4:	add	x0, x0, #0x100
    cac8:	ldr	x1, [sp, #16]
    cacc:	bl	aa04 <lzma_vli_encode@@XZ_5.0+0x3ac>
    cad0:	str	xzr, [sp, #40]
    cad4:	b	cb04 <lzma_vli_encode@@XZ_5.0+0x24ac>
    cad8:	ldr	x1, [sp, #32]
    cadc:	ldr	x0, [sp, #40]
    cae0:	add	x0, x0, #0x1
    cae4:	lsl	x0, x0, #4
    cae8:	add	x0, x1, x0
    caec:	ldr	x0, [x0, #8]
    caf0:	ldr	x1, [sp, #16]
    caf4:	bl	3814 <lzma_version_string@@XZ_5.0+0x124>
    caf8:	ldr	x0, [sp, #40]
    cafc:	add	x0, x0, #0x1
    cb00:	str	x0, [sp, #40]
    cb04:	ldr	x1, [sp, #32]
    cb08:	ldr	x0, [sp, #40]
    cb0c:	add	x0, x0, #0x1
    cb10:	lsl	x0, x0, #4
    cb14:	add	x0, x1, x0
    cb18:	ldr	x0, [x0]
    cb1c:	cmn	x0, #0x1
    cb20:	b.ne	cad8 <lzma_vli_encode@@XZ_5.0+0x2480>  // b.any
    cb24:	ldr	x0, [sp, #32]
    cb28:	add	x0, x0, #0x68
    cb2c:	ldr	x1, [sp, #16]
    cb30:	bl	3a48 <lzma_version_string@@XZ_5.0+0x358>
    cb34:	ldr	x0, [sp, #32]
    cb38:	ldr	x0, [x0, #96]
    cb3c:	ldr	x1, [sp, #16]
    cb40:	bl	33e0 <lzma_index_end@plt>
    cb44:	ldr	x0, [sp, #32]
    cb48:	add	x0, x0, #0x198
    cb4c:	bl	aed4 <lzma_vli_encode@@XZ_5.0+0x87c>
    cb50:	ldr	x0, [sp, #32]
    cb54:	add	x0, x0, #0x168
    cb58:	bl	adc4 <lzma_vli_encode@@XZ_5.0+0x76c>
    cb5c:	ldr	x1, [sp, #16]
    cb60:	ldr	x0, [sp, #32]
    cb64:	bl	3814 <lzma_version_string@@XZ_5.0+0x124>
    cb68:	nop
    cb6c:	ldp	x29, x30, [sp], #48
    cb70:	ret
    cb74:	stp	x29, x30, [sp, #-64]!
    cb78:	mov	x29, sp
    cb7c:	str	x0, [sp, #56]
    cb80:	str	x1, [sp, #48]
    cb84:	str	x2, [sp, #40]
    cb88:	str	x3, [sp, #32]
    cb8c:	str	x4, [sp, #24]
    cb90:	ldr	x0, [sp, #56]
    cb94:	cmp	x0, #0x0
    cb98:	b.ne	cba4 <lzma_vli_encode@@XZ_5.0+0x254c>  // b.any
    cb9c:	mov	w0, #0xb                   	// #11
    cba0:	b	ccd8 <lzma_vli_encode@@XZ_5.0+0x2680>
    cba4:	ldr	x0, [sp, #56]
    cba8:	ldr	w0, [x0]
    cbac:	cmp	w0, #0x0
    cbb0:	b.ne	cbd4 <lzma_vli_encode@@XZ_5.0+0x257c>  // b.any
    cbb4:	ldr	x0, [sp, #56]
    cbb8:	ldr	w0, [x0, #4]
    cbbc:	cmp	w0, #0x0
    cbc0:	b.eq	cbd4 <lzma_vli_encode@@XZ_5.0+0x257c>  // b.none
    cbc4:	ldr	x0, [sp, #56]
    cbc8:	ldr	w0, [x0, #4]
    cbcc:	cmp	w0, #0x4, lsl #12
    cbd0:	b.ls	cbdc <lzma_vli_encode@@XZ_5.0+0x2584>  // b.plast
    cbd4:	mov	w0, #0x8                   	// #8
    cbd8:	b	ccd8 <lzma_vli_encode@@XZ_5.0+0x2680>
    cbdc:	ldr	x0, [sp, #56]
    cbe0:	ldr	x0, [x0, #24]
    cbe4:	cmp	x0, #0x0
    cbe8:	b.eq	cc00 <lzma_vli_encode@@XZ_5.0+0x25a8>  // b.none
    cbec:	ldr	x0, [sp, #56]
    cbf0:	ldr	x1, [x0, #24]
    cbf4:	ldr	x0, [sp, #40]
    cbf8:	str	x1, [x0]
    cbfc:	b	cc34 <lzma_vli_encode@@XZ_5.0+0x25dc>
    cc00:	ldr	x0, [sp, #56]
    cc04:	ldr	w0, [x0, #20]
    cc08:	mov	w1, w0
    cc0c:	ldr	x0, [sp, #48]
    cc10:	bl	46b0 <lzma_block_total_size@@XZ_5.0+0x3c>
    cc14:	and	w0, w0, #0xff
    cc18:	cmp	w0, #0x0
    cc1c:	b.eq	cc28 <lzma_vli_encode@@XZ_5.0+0x25d0>  // b.none
    cc20:	mov	w0, #0x8                   	// #8
    cc24:	b	ccd8 <lzma_vli_encode@@XZ_5.0+0x2680>
    cc28:	ldr	x1, [sp, #48]
    cc2c:	ldr	x0, [sp, #40]
    cc30:	str	x1, [x0]
    cc34:	ldr	x0, [sp, #56]
    cc38:	ldr	x0, [x0, #8]
    cc3c:	cmp	x0, #0x0
    cc40:	b.eq	cc74 <lzma_vli_encode@@XZ_5.0+0x261c>  // b.none
    cc44:	ldr	x0, [sp, #56]
    cc48:	ldr	x1, [x0, #8]
    cc4c:	mov	x0, #0x3ffffffffffff       	// #1125899906842623
    cc50:	cmp	x1, x0
    cc54:	b.ls	cc60 <lzma_vli_encode@@XZ_5.0+0x2608>  // b.plast
    cc58:	mov	w0, #0x8                   	// #8
    cc5c:	b	ccd8 <lzma_vli_encode@@XZ_5.0+0x2680>
    cc60:	ldr	x0, [sp, #56]
    cc64:	ldr	x1, [x0, #8]
    cc68:	ldr	x0, [sp, #32]
    cc6c:	str	x1, [x0]
    cc70:	b	cca4 <lzma_vli_encode@@XZ_5.0+0x264c>
    cc74:	ldr	x0, [sp, #40]
    cc78:	ldr	x0, [x0]
    cc7c:	bl	8d14 <lzma_raw_encoder_memusage@@XZ_5.0+0x24>
    cc80:	mov	x1, x0
    cc84:	ldr	x0, [sp, #32]
    cc88:	str	x1, [x0]
    cc8c:	ldr	x0, [sp, #32]
    cc90:	ldr	x0, [x0]
    cc94:	cmp	x0, #0x0
    cc98:	b.ne	cca4 <lzma_vli_encode@@XZ_5.0+0x264c>  // b.any
    cc9c:	mov	w0, #0x8                   	// #8
    cca0:	b	ccd8 <lzma_vli_encode@@XZ_5.0+0x2680>
    cca4:	ldr	x0, [sp, #32]
    cca8:	ldr	x0, [x0]
    ccac:	bl	7430 <lzma_alone_encoder@@XZ_5.0+0x120>
    ccb0:	mov	x1, x0
    ccb4:	ldr	x0, [sp, #24]
    ccb8:	str	x1, [x0]
    ccbc:	ldr	x0, [sp, #24]
    ccc0:	ldr	x0, [x0]
    ccc4:	cmp	x0, #0x0
    ccc8:	b.ne	ccd4 <lzma_vli_encode@@XZ_5.0+0x267c>  // b.any
    cccc:	mov	w0, #0x5                   	// #5
    ccd0:	b	ccd8 <lzma_vli_encode@@XZ_5.0+0x2680>
    ccd4:	mov	w0, #0x0                   	// #0
    ccd8:	ldp	x29, x30, [sp], #64
    ccdc:	ret
    cce0:	stp	x29, x30, [sp, #-80]!
    cce4:	mov	x29, sp
    cce8:	str	x0, [sp, #40]
    ccec:	str	x1, [sp, #32]
    ccf0:	str	x2, [sp, #24]
    ccf4:	ldr	x0, [sp, #40]
    ccf8:	str	x0, [sp, #48]
    ccfc:	str	wzr, [sp, #76]
    cd00:	b	cea0 <lzma_vli_encode@@XZ_5.0+0x2848>
    cd04:	str	wzr, [sp, #72]
    cd08:	b	ce8c <lzma_vli_encode@@XZ_5.0+0x2834>
    cd0c:	ldr	x0, [sp, #48]
    cd10:	ldr	x1, [x0, #344]
    cd14:	ldr	x0, [sp, #32]
    cd18:	str	x1, [x0]
    cd1c:	ldr	x0, [sp, #48]
    cd20:	ldr	x1, [x0, #352]
    cd24:	ldr	x0, [sp, #24]
    cd28:	str	x1, [x0]
    cd2c:	str	xzr, [sp, #64]
    cd30:	b	ce6c <lzma_vli_encode@@XZ_5.0+0x2814>
    cd34:	str	wzr, [sp, #60]
    cd38:	b	cde0 <lzma_vli_encode@@XZ_5.0+0x2788>
    cd3c:	str	wzr, [sp, #56]
    cd40:	b	cdcc <lzma_vli_encode@@XZ_5.0+0x2774>
    cd44:	ldr	x0, [sp, #32]
    cd48:	ldr	x2, [x0]
    cd4c:	ldr	x0, [sp, #48]
    cd50:	ldr	x3, [x0, #312]
    cd54:	ldr	x1, [sp, #64]
    cd58:	mov	x0, x1
    cd5c:	lsl	x0, x0, #3
    cd60:	sub	x0, x0, x1
    cd64:	lsl	x0, x0, #2
    cd68:	add	x0, x0, x1
    cd6c:	lsl	x0, x0, #4
    cd70:	add	x0, x3, x0
    cd74:	ldr	x0, [x0, #48]
    cd78:	add	x1, x2, x0
    cd7c:	ldr	x0, [sp, #32]
    cd80:	str	x1, [x0]
    cd84:	ldr	x0, [sp, #24]
    cd88:	ldr	x2, [x0]
    cd8c:	ldr	x0, [sp, #48]
    cd90:	ldr	x3, [x0, #312]
    cd94:	ldr	x1, [sp, #64]
    cd98:	mov	x0, x1
    cd9c:	lsl	x0, x0, #3
    cda0:	sub	x0, x0, x1
    cda4:	lsl	x0, x0, #2
    cda8:	add	x0, x0, x1
    cdac:	lsl	x0, x0, #4
    cdb0:	add	x0, x3, x0
    cdb4:	ldr	x0, [x0, #56]
    cdb8:	add	x1, x2, x0
    cdbc:	ldr	x0, [sp, #24]
    cdc0:	str	x1, [x0]
    cdc4:	mov	w0, #0x1                   	// #1
    cdc8:	str	w0, [sp, #56]
    cdcc:	ldr	w0, [sp, #56]
    cdd0:	cmp	w0, #0x0
    cdd4:	b.eq	cd44 <lzma_vli_encode@@XZ_5.0+0x26ec>  // b.none
    cdd8:	mov	w0, #0x1                   	// #1
    cddc:	str	w0, [sp, #60]
    cde0:	ldr	w0, [sp, #60]
    cde4:	cmp	w0, #0x0
    cde8:	b.eq	ce24 <lzma_vli_encode@@XZ_5.0+0x27cc>  // b.none
    cdec:	ldr	x0, [sp, #48]
    cdf0:	ldr	x2, [x0, #312]
    cdf4:	ldr	x1, [sp, #64]
    cdf8:	mov	x0, x1
    cdfc:	lsl	x0, x0, #3
    ce00:	sub	x0, x0, x1
    ce04:	lsl	x0, x0, #2
    ce08:	add	x0, x0, x1
    ce0c:	lsl	x0, x0, #4
    ce10:	add	x0, x2, x0
    ce14:	add	x0, x0, #0x160
    ce18:	bl	ae0c <lzma_vli_encode@@XZ_5.0+0x7b4>
    ce1c:	mov	w0, #0x0                   	// #0
    ce20:	b	ce58 <lzma_vli_encode@@XZ_5.0+0x2800>
    ce24:	ldr	x0, [sp, #48]
    ce28:	ldr	x2, [x0, #312]
    ce2c:	ldr	x1, [sp, #64]
    ce30:	mov	x0, x1
    ce34:	lsl	x0, x0, #3
    ce38:	sub	x0, x0, x1
    ce3c:	lsl	x0, x0, #2
    ce40:	add	x0, x0, x1
    ce44:	lsl	x0, x0, #4
    ce48:	add	x0, x2, x0
    ce4c:	add	x0, x0, #0x160
    ce50:	bl	ade8 <lzma_vli_encode@@XZ_5.0+0x790>
    ce54:	mov	w0, #0x1                   	// #1
    ce58:	cmp	w0, #0x0
    ce5c:	b.ne	cd3c <lzma_vli_encode@@XZ_5.0+0x26e4>  // b.any
    ce60:	ldr	x0, [sp, #64]
    ce64:	add	x0, x0, #0x1
    ce68:	str	x0, [sp, #64]
    ce6c:	ldr	x0, [sp, #48]
    ce70:	ldr	w0, [x0, #324]
    ce74:	mov	w0, w0
    ce78:	ldr	x1, [sp, #64]
    ce7c:	cmp	x1, x0
    ce80:	b.cc	cd34 <lzma_vli_encode@@XZ_5.0+0x26dc>  // b.lo, b.ul, b.last
    ce84:	mov	w0, #0x1                   	// #1
    ce88:	str	w0, [sp, #72]
    ce8c:	ldr	w0, [sp, #72]
    ce90:	cmp	w0, #0x0
    ce94:	b.eq	cd0c <lzma_vli_encode@@XZ_5.0+0x26b4>  // b.none
    ce98:	mov	w0, #0x1                   	// #1
    ce9c:	str	w0, [sp, #76]
    cea0:	ldr	w0, [sp, #76]
    cea4:	cmp	w0, #0x0
    cea8:	b.eq	cec0 <lzma_vli_encode@@XZ_5.0+0x2868>  // b.none
    ceac:	ldr	x0, [sp, #48]
    ceb0:	add	x0, x0, #0x168
    ceb4:	bl	ae0c <lzma_vli_encode@@XZ_5.0+0x7b4>
    ceb8:	mov	w0, #0x0                   	// #0
    cebc:	b	ced0 <lzma_vli_encode@@XZ_5.0+0x2878>
    cec0:	ldr	x0, [sp, #48]
    cec4:	add	x0, x0, #0x168
    cec8:	bl	ade8 <lzma_vli_encode@@XZ_5.0+0x790>
    cecc:	mov	w0, #0x1                   	// #1
    ced0:	cmp	w0, #0x0
    ced4:	b.ne	cd04 <lzma_vli_encode@@XZ_5.0+0x26ac>  // b.any
    ced8:	nop
    cedc:	ldp	x29, x30, [sp], #80
    cee0:	ret
    cee4:	stp	x29, x30, [sp, #-368]!
    cee8:	mov	x29, sp
    ceec:	str	x0, [sp, #40]
    cef0:	str	x1, [sp, #32]
    cef4:	str	x2, [sp, #24]
    cef8:	ldr	x0, [sp, #40]
    cefc:	ldr	x1, [x0, #16]
    cf00:	adrp	x0, c000 <lzma_vli_encode@@XZ_5.0+0x19a8>
    cf04:	add	x0, x0, #0xee4
    cf08:	cmp	x1, x0
    cf0c:	b.eq	cf1c <lzma_vli_encode@@XZ_5.0+0x28c4>  // b.none
    cf10:	ldr	x1, [sp, #32]
    cf14:	ldr	x0, [sp, #40]
    cf18:	bl	3a48 <lzma_version_string@@XZ_5.0+0x358>
    cf1c:	adrp	x0, c000 <lzma_vli_encode@@XZ_5.0+0x19a8>
    cf20:	add	x1, x0, #0xee4
    cf24:	ldr	x0, [sp, #40]
    cf28:	str	x1, [x0, #16]
    cf2c:	add	x3, sp, #0x78
    cf30:	add	x2, sp, #0x80
    cf34:	add	x1, sp, #0x88
    cf38:	add	x0, sp, #0x90
    cf3c:	mov	x4, x3
    cf40:	mov	x3, x2
    cf44:	mov	x2, x1
    cf48:	mov	x1, x0
    cf4c:	ldr	x0, [sp, #24]
    cf50:	bl	cb74 <lzma_vli_encode@@XZ_5.0+0x251c>
    cf54:	str	w0, [sp, #348]
    cf58:	ldr	w0, [sp, #348]
    cf5c:	cmp	w0, #0x0
    cf60:	b.eq	cf6c <lzma_vli_encode@@XZ_5.0+0x2914>  // b.none
    cf64:	ldr	w0, [sp, #348]
    cf68:	b	d384 <lzma_vli_encode@@XZ_5.0+0x2d2c>
    cf6c:	ldr	x0, [sp, #136]
    cf70:	bl	3220 <lzma_raw_encoder_memusage@plt>
    cf74:	cmn	x0, #0x1
    cf78:	b.ne	cf84 <lzma_vli_encode@@XZ_5.0+0x292c>  // b.any
    cf7c:	mov	w0, #0x8                   	// #8
    cf80:	b	d384 <lzma_vli_encode@@XZ_5.0+0x2d2c>
    cf84:	ldr	x0, [sp, #24]
    cf88:	ldr	w0, [x0, #32]
    cf8c:	cmp	w0, #0xf
    cf90:	b.ls	cf9c <lzma_vli_encode@@XZ_5.0+0x2944>  // b.plast
    cf94:	mov	w0, #0xb                   	// #11
    cf98:	b	d384 <lzma_vli_encode@@XZ_5.0+0x2d2c>
    cf9c:	ldr	x0, [sp, #24]
    cfa0:	ldr	w0, [x0, #32]
    cfa4:	bl	30e0 <lzma_check_is_supported@plt>
    cfa8:	and	w0, w0, #0xff
    cfac:	cmp	w0, #0x0
    cfb0:	b.ne	cfbc <lzma_vli_encode@@XZ_5.0+0x2964>  // b.any
    cfb4:	mov	w0, #0x3                   	// #3
    cfb8:	b	d384 <lzma_vli_encode@@XZ_5.0+0x2d2c>
    cfbc:	ldr	x0, [sp, #40]
    cfc0:	ldr	x0, [x0]
    cfc4:	str	x0, [sp, #360]
    cfc8:	ldr	x0, [sp, #360]
    cfcc:	cmp	x0, #0x0
    cfd0:	b.ne	d12c <lzma_vli_encode@@XZ_5.0+0x2ad4>  // b.any
    cfd4:	ldr	x1, [sp, #32]
    cfd8:	mov	x0, #0x1d0                 	// #464
    cfdc:	bl	36fc <lzma_version_string@@XZ_5.0+0xc>
    cfe0:	str	x0, [sp, #360]
    cfe4:	ldr	x0, [sp, #360]
    cfe8:	cmp	x0, #0x0
    cfec:	b.ne	cff8 <lzma_vli_encode@@XZ_5.0+0x29a0>  // b.any
    cff0:	mov	w0, #0x5                   	// #5
    cff4:	b	d384 <lzma_vli_encode@@XZ_5.0+0x2d2c>
    cff8:	ldr	x0, [sp, #40]
    cffc:	ldr	x1, [sp, #360]
    d000:	str	x1, [x0]
    d004:	ldr	x0, [sp, #360]
    d008:	add	x0, x0, #0x168
    d00c:	bl	ada4 <lzma_vli_encode@@XZ_5.0+0x74c>
    d010:	cmp	w0, #0x0
    d014:	b.eq	d034 <lzma_vli_encode@@XZ_5.0+0x29dc>  // b.none
    d018:	ldr	x1, [sp, #32]
    d01c:	ldr	x0, [sp, #360]
    d020:	bl	3814 <lzma_version_string@@XZ_5.0+0x124>
    d024:	ldr	x0, [sp, #40]
    d028:	str	xzr, [x0]
    d02c:	mov	w0, #0x5                   	// #5
    d030:	b	d384 <lzma_vli_encode@@XZ_5.0+0x2d2c>
    d034:	ldr	x0, [sp, #360]
    d038:	add	x0, x0, #0x198
    d03c:	bl	ae30 <lzma_vli_encode@@XZ_5.0+0x7d8>
    d040:	cmp	w0, #0x0
    d044:	b.eq	d070 <lzma_vli_encode@@XZ_5.0+0x2a18>  // b.none
    d048:	ldr	x0, [sp, #360]
    d04c:	add	x0, x0, #0x168
    d050:	bl	adc4 <lzma_vli_encode@@XZ_5.0+0x76c>
    d054:	ldr	x1, [sp, #32]
    d058:	ldr	x0, [sp, #360]
    d05c:	bl	3814 <lzma_version_string@@XZ_5.0+0x124>
    d060:	ldr	x0, [sp, #40]
    d064:	str	xzr, [x0]
    d068:	mov	w0, #0x5                   	// #5
    d06c:	b	d384 <lzma_vli_encode@@XZ_5.0+0x2d2c>
    d070:	ldr	x0, [sp, #40]
    d074:	adrp	x1, c000 <lzma_vli_encode@@XZ_5.0+0x19a8>
    d078:	add	x1, x1, #0x62c
    d07c:	str	x1, [x0, #24]
    d080:	ldr	x0, [sp, #40]
    d084:	adrp	x1, c000 <lzma_vli_encode@@XZ_5.0+0x19a8>
    d088:	add	x1, x1, #0xa9c
    d08c:	str	x1, [x0, #32]
    d090:	ldr	x0, [sp, #40]
    d094:	adrp	x1, c000 <lzma_vli_encode@@XZ_5.0+0x19a8>
    d098:	add	x1, x1, #0xce0
    d09c:	str	x1, [x0, #40]
    d0a0:	ldr	x0, [sp, #360]
    d0a4:	mov	x1, #0xffffffffffffffff    	// #-1
    d0a8:	str	x1, [x0, #16]
    d0ac:	ldr	x0, [sp, #360]
    d0b0:	str	xzr, [x0, #104]
    d0b4:	ldr	x0, [sp, #360]
    d0b8:	mov	x1, #0xffffffffffffffff    	// #-1
    d0bc:	str	x1, [x0, #112]
    d0c0:	ldr	x0, [sp, #360]
    d0c4:	str	xzr, [x0, #120]
    d0c8:	ldr	x0, [sp, #360]
    d0cc:	str	xzr, [x0, #128]
    d0d0:	ldr	x0, [sp, #360]
    d0d4:	str	xzr, [x0, #136]
    d0d8:	ldr	x0, [sp, #360]
    d0dc:	str	xzr, [x0, #144]
    d0e0:	ldr	x0, [sp, #360]
    d0e4:	str	xzr, [x0, #152]
    d0e8:	ldr	x0, [sp, #360]
    d0ec:	str	xzr, [x0, #160]
    d0f0:	ldr	x0, [sp, #360]
    d0f4:	str	xzr, [x0, #168]
    d0f8:	ldr	x0, [sp, #360]
    d0fc:	str	xzr, [x0, #96]
    d100:	ldr	x0, [sp, #360]
    d104:	add	x0, x0, #0x100
    d108:	mov	x2, #0x30                  	// #48
    d10c:	mov	w1, #0x0                   	// #0
    d110:	bl	3230 <memset@plt>
    d114:	ldr	x0, [sp, #360]
    d118:	str	xzr, [x0, #312]
    d11c:	ldr	x0, [sp, #360]
    d120:	str	wzr, [x0, #320]
    d124:	ldr	x0, [sp, #360]
    d128:	str	wzr, [x0, #324]
    d12c:	ldr	x0, [sp, #360]
    d130:	str	wzr, [x0]
    d134:	ldr	x1, [sp, #128]
    d138:	ldr	x0, [sp, #360]
    d13c:	str	x1, [x0, #8]
    d140:	ldr	x0, [sp, #360]
    d144:	str	wzr, [x0, #308]
    d148:	ldr	x0, [sp, #360]
    d14c:	str	xzr, [x0, #336]
    d150:	ldr	x0, [sp, #360]
    d154:	ldr	w1, [x0, #320]
    d158:	ldr	x0, [sp, #24]
    d15c:	ldr	w0, [x0, #4]
    d160:	cmp	w1, w0
    d164:	b.eq	d1f8 <lzma_vli_encode@@XZ_5.0+0x2ba0>  // b.none
    d168:	ldr	x1, [sp, #32]
    d16c:	ldr	x0, [sp, #360]
    d170:	bl	bc84 <lzma_vli_encode@@XZ_5.0+0x162c>
    d174:	ldr	x0, [sp, #360]
    d178:	str	xzr, [x0, #312]
    d17c:	ldr	x0, [sp, #360]
    d180:	str	wzr, [x0, #320]
    d184:	ldr	x0, [sp, #360]
    d188:	str	wzr, [x0, #324]
    d18c:	ldr	x0, [sp, #360]
    d190:	str	xzr, [x0, #328]
    d194:	ldr	x0, [sp, #24]
    d198:	ldr	w0, [x0, #4]
    d19c:	mov	w1, w0
    d1a0:	mov	x0, x1
    d1a4:	lsl	x0, x0, #3
    d1a8:	sub	x0, x0, x1
    d1ac:	lsl	x0, x0, #2
    d1b0:	add	x0, x0, x1
    d1b4:	lsl	x0, x0, #4
    d1b8:	ldr	x1, [sp, #32]
    d1bc:	bl	36fc <lzma_version_string@@XZ_5.0+0xc>
    d1c0:	mov	x1, x0
    d1c4:	ldr	x0, [sp, #360]
    d1c8:	str	x1, [x0, #312]
    d1cc:	ldr	x0, [sp, #360]
    d1d0:	ldr	x0, [x0, #312]
    d1d4:	cmp	x0, #0x0
    d1d8:	b.ne	d1e4 <lzma_vli_encode@@XZ_5.0+0x2b8c>  // b.any
    d1dc:	mov	w0, #0x5                   	// #5
    d1e0:	b	d384 <lzma_vli_encode@@XZ_5.0+0x2d2c>
    d1e4:	ldr	x0, [sp, #24]
    d1e8:	ldr	w1, [x0, #4]
    d1ec:	ldr	x0, [sp, #360]
    d1f0:	str	w1, [x0, #320]
    d1f4:	b	d204 <lzma_vli_encode@@XZ_5.0+0x2bac>
    d1f8:	mov	w1, #0x1                   	// #1
    d1fc:	ldr	x0, [sp, #360]
    d200:	bl	b9b0 <lzma_vli_encode@@XZ_5.0+0x1358>
    d204:	ldr	x0, [sp, #360]
    d208:	add	x4, x0, #0x100
    d20c:	ldr	x1, [sp, #120]
    d210:	ldr	x0, [sp, #24]
    d214:	ldr	w0, [x0, #4]
    d218:	mov	w3, w0
    d21c:	mov	x2, x1
    d220:	ldr	x1, [sp, #32]
    d224:	mov	x0, x4
    d228:	bl	a8d8 <lzma_vli_encode@@XZ_5.0+0x280>
    d22c:	str	w0, [sp, #344]
    d230:	ldr	w0, [sp, #344]
    d234:	cmp	w0, #0x0
    d238:	b.eq	d244 <lzma_vli_encode@@XZ_5.0+0x2bec>  // b.none
    d23c:	ldr	w0, [sp, #344]
    d240:	b	d384 <lzma_vli_encode@@XZ_5.0+0x2d2c>
    d244:	ldr	x0, [sp, #24]
    d248:	ldr	w1, [x0, #16]
    d24c:	ldr	x0, [sp, #360]
    d250:	str	w1, [x0, #304]
    d254:	str	xzr, [sp, #352]
    d258:	b	d288 <lzma_vli_encode@@XZ_5.0+0x2c30>
    d25c:	ldr	x1, [sp, #360]
    d260:	ldr	x0, [sp, #352]
    d264:	add	x0, x0, #0x1
    d268:	lsl	x0, x0, #4
    d26c:	add	x0, x1, x0
    d270:	ldr	x0, [x0, #8]
    d274:	ldr	x1, [sp, #32]
    d278:	bl	3814 <lzma_version_string@@XZ_5.0+0x124>
    d27c:	ldr	x0, [sp, #352]
    d280:	add	x0, x0, #0x1
    d284:	str	x0, [sp, #352]
    d288:	ldr	x1, [sp, #360]
    d28c:	ldr	x0, [sp, #352]
    d290:	add	x0, x0, #0x1
    d294:	lsl	x0, x0, #4
    d298:	add	x0, x1, x0
    d29c:	ldr	x0, [x0]
    d2a0:	cmn	x0, #0x1
    d2a4:	b.ne	d25c <lzma_vli_encode@@XZ_5.0+0x2c04>  // b.any
    d2a8:	ldr	x3, [sp, #136]
    d2ac:	ldr	x0, [sp, #360]
    d2b0:	add	x0, x0, #0x10
    d2b4:	ldr	x2, [sp, #32]
    d2b8:	mov	x1, x0
    d2bc:	mov	x0, x3
    d2c0:	bl	3240 <lzma_filters_copy@plt>
    d2c4:	str	w0, [sp, #340]
    d2c8:	ldr	w0, [sp, #340]
    d2cc:	cmp	w0, #0x0
    d2d0:	b.eq	d2dc <lzma_vli_encode@@XZ_5.0+0x2c84>  // b.none
    d2d4:	ldr	w0, [sp, #340]
    d2d8:	b	d384 <lzma_vli_encode@@XZ_5.0+0x2d2c>
    d2dc:	ldr	x0, [sp, #360]
    d2e0:	ldr	x0, [x0, #96]
    d2e4:	ldr	x1, [sp, #32]
    d2e8:	bl	33e0 <lzma_index_end@plt>
    d2ec:	ldr	x0, [sp, #32]
    d2f0:	bl	33b0 <lzma_index_init@plt>
    d2f4:	mov	x1, x0
    d2f8:	ldr	x0, [sp, #360]
    d2fc:	str	x1, [x0, #96]
    d300:	ldr	x0, [sp, #360]
    d304:	ldr	x0, [x0, #96]
    d308:	cmp	x0, #0x0
    d30c:	b.ne	d318 <lzma_vli_encode@@XZ_5.0+0x2cc0>  // b.any
    d310:	mov	w0, #0x5                   	// #5
    d314:	b	d384 <lzma_vli_encode@@XZ_5.0+0x2d2c>
    d318:	ldr	x0, [sp, #360]
    d31c:	str	wzr, [x0, #176]
    d320:	ldr	x0, [sp, #24]
    d324:	ldr	w1, [x0, #32]
    d328:	ldr	x0, [sp, #360]
    d32c:	str	w1, [x0, #192]
    d330:	ldr	x0, [sp, #360]
    d334:	add	x2, x0, #0xb0
    d338:	ldr	x0, [sp, #360]
    d33c:	add	x0, x0, #0xe8
    d340:	mov	x1, x0
    d344:	mov	x0, x2
    d348:	bl	3390 <lzma_stream_header_encode@plt>
    d34c:	str	w0, [sp, #336]
    d350:	ldr	w0, [sp, #336]
    d354:	cmp	w0, #0x0
    d358:	b.eq	d364 <lzma_vli_encode@@XZ_5.0+0x2d0c>  // b.none
    d35c:	ldr	w0, [sp, #336]
    d360:	b	d384 <lzma_vli_encode@@XZ_5.0+0x2d2c>
    d364:	ldr	x0, [sp, #360]
    d368:	str	xzr, [x0, #248]
    d36c:	ldr	x0, [sp, #360]
    d370:	str	xzr, [x0, #344]
    d374:	ldr	x0, [sp, #360]
    d378:	mov	x1, #0xc                   	// #12
    d37c:	str	x1, [x0, #352]
    d380:	mov	w0, #0x0                   	// #0
    d384:	ldp	x29, x30, [sp], #368
    d388:	ret

000000000000d38c <lzma_stream_encoder_mt@@XZ_5.2>:
    d38c:	stp	x29, x30, [sp, #-48]!
    d390:	mov	x29, sp
    d394:	str	x0, [sp, #24]
    d398:	str	x1, [sp, #16]
    d39c:	ldr	x0, [sp, #24]
    d3a0:	bl	3b00 <lzma_version_string@@XZ_5.0+0x410>
    d3a4:	str	w0, [sp, #44]
    d3a8:	ldr	w0, [sp, #44]
    d3ac:	cmp	w0, #0x0
    d3b0:	b.eq	d3bc <lzma_stream_encoder_mt@@XZ_5.2+0x30>  // b.none
    d3b4:	ldr	w0, [sp, #44]
    d3b8:	b	d444 <lzma_stream_encoder_mt@@XZ_5.2+0xb8>
    d3bc:	ldr	x0, [sp, #24]
    d3c0:	ldr	x0, [x0, #56]
    d3c4:	mov	x3, x0
    d3c8:	ldr	x0, [sp, #24]
    d3cc:	ldr	x0, [x0, #48]
    d3d0:	ldr	x2, [sp, #16]
    d3d4:	mov	x1, x0
    d3d8:	mov	x0, x3
    d3dc:	bl	cee4 <lzma_vli_encode@@XZ_5.0+0x288c>
    d3e0:	str	w0, [sp, #40]
    d3e4:	ldr	w0, [sp, #40]
    d3e8:	cmp	w0, #0x0
    d3ec:	b.eq	d400 <lzma_stream_encoder_mt@@XZ_5.2+0x74>  // b.none
    d3f0:	ldr	x0, [sp, #24]
    d3f4:	bl	3320 <lzma_end@plt>
    d3f8:	ldr	w0, [sp, #40]
    d3fc:	b	d444 <lzma_stream_encoder_mt@@XZ_5.2+0xb8>
    d400:	ldr	x0, [sp, #24]
    d404:	ldr	x0, [x0, #56]
    d408:	mov	w1, #0x1                   	// #1
    d40c:	strb	w1, [x0, #88]
    d410:	ldr	x0, [sp, #24]
    d414:	ldr	x0, [x0, #56]
    d418:	mov	w1, #0x1                   	// #1
    d41c:	strb	w1, [x0, #90]
    d420:	ldr	x0, [sp, #24]
    d424:	ldr	x0, [x0, #56]
    d428:	mov	w1, #0x1                   	// #1
    d42c:	strb	w1, [x0, #92]
    d430:	ldr	x0, [sp, #24]
    d434:	ldr	x0, [x0, #56]
    d438:	mov	w1, #0x1                   	// #1
    d43c:	strb	w1, [x0, #91]
    d440:	mov	w0, #0x0                   	// #0
    d444:	ldp	x29, x30, [sp], #48
    d448:	ret

000000000000d44c <lzma_stream_encoder_mt_memusage@@XZ_5.2>:
    d44c:	stp	x29, x30, [sp, #-288]!
    d450:	mov	x29, sp
    d454:	str	x0, [sp, #24]
    d458:	add	x3, sp, #0x28
    d45c:	add	x2, sp, #0x30
    d460:	add	x1, sp, #0x38
    d464:	add	x0, sp, #0x40
    d468:	mov	x4, x3
    d46c:	mov	x3, x2
    d470:	mov	x2, x1
    d474:	mov	x1, x0
    d478:	ldr	x0, [sp, #24]
    d47c:	bl	cb74 <lzma_vli_encode@@XZ_5.0+0x251c>
    d480:	cmp	w0, #0x0
    d484:	b.eq	d490 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x44>  // b.none
    d488:	mov	x0, #0xffffffffffffffff    	// #-1
    d48c:	b	d5c4 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x178>
    d490:	ldr	x0, [sp, #24]
    d494:	ldr	w0, [x0, #4]
    d498:	mov	w1, w0
    d49c:	ldr	x0, [sp, #48]
    d4a0:	mul	x0, x1, x0
    d4a4:	str	x0, [sp, #280]
    d4a8:	ldr	x0, [sp, #56]
    d4ac:	bl	3220 <lzma_raw_encoder_memusage@plt>
    d4b0:	str	x0, [sp, #272]
    d4b4:	ldr	x0, [sp, #272]
    d4b8:	cmn	x0, #0x1
    d4bc:	b.ne	d4c8 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x7c>  // b.any
    d4c0:	mov	x0, #0xffffffffffffffff    	// #-1
    d4c4:	b	d5c4 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x178>
    d4c8:	ldr	x0, [sp, #24]
    d4cc:	ldr	w0, [x0, #4]
    d4d0:	mov	w0, w0
    d4d4:	ldr	x1, [sp, #272]
    d4d8:	mul	x0, x1, x0
    d4dc:	str	x0, [sp, #272]
    d4e0:	ldr	x2, [sp, #40]
    d4e4:	ldr	x0, [sp, #24]
    d4e8:	ldr	w0, [x0, #4]
    d4ec:	mov	w1, w0
    d4f0:	mov	x0, x2
    d4f4:	bl	a874 <lzma_vli_encode@@XZ_5.0+0x21c>
    d4f8:	str	x0, [sp, #264]
    d4fc:	ldr	x0, [sp, #264]
    d500:	cmn	x0, #0x1
    d504:	b.ne	d510 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0xc4>  // b.any
    d508:	mov	x0, #0xffffffffffffffff    	// #-1
    d50c:	b	d5c4 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x178>
    d510:	ldr	x0, [sp, #24]
    d514:	ldr	w0, [x0, #4]
    d518:	mov	w1, w0
    d51c:	mov	x0, x1
    d520:	lsl	x0, x0, #3
    d524:	sub	x0, x0, x1
    d528:	lsl	x0, x0, #2
    d52c:	add	x0, x0, x1
    d530:	lsl	x0, x0, #4
    d534:	mov	x1, x0
    d538:	mov	x0, #0x81d0                	// #33232
    d53c:	add	x0, x1, x0
    d540:	str	x0, [sp, #256]
    d544:	ldr	x0, [sp, #256]
    d548:	mvn	x0, x0
    d54c:	ldr	x1, [sp, #280]
    d550:	cmp	x1, x0
    d554:	b.ls	d560 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x114>  // b.plast
    d558:	mov	x0, #0xffffffffffffffff    	// #-1
    d55c:	b	d5c4 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x178>
    d560:	ldr	x1, [sp, #256]
    d564:	ldr	x0, [sp, #280]
    d568:	add	x0, x1, x0
    d56c:	str	x0, [sp, #256]
    d570:	ldr	x0, [sp, #256]
    d574:	mvn	x0, x0
    d578:	ldr	x1, [sp, #272]
    d57c:	cmp	x1, x0
    d580:	b.ls	d58c <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x140>  // b.plast
    d584:	mov	x0, #0xffffffffffffffff    	// #-1
    d588:	b	d5c4 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x178>
    d58c:	ldr	x1, [sp, #256]
    d590:	ldr	x0, [sp, #272]
    d594:	add	x0, x1, x0
    d598:	str	x0, [sp, #256]
    d59c:	ldr	x0, [sp, #256]
    d5a0:	mvn	x0, x0
    d5a4:	ldr	x1, [sp, #264]
    d5a8:	cmp	x1, x0
    d5ac:	b.ls	d5b8 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x16c>  // b.plast
    d5b0:	mov	x0, #0xffffffffffffffff    	// #-1
    d5b4:	b	d5c4 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x178>
    d5b8:	ldr	x1, [sp, #256]
    d5bc:	ldr	x0, [sp, #264]
    d5c0:	add	x0, x1, x0
    d5c4:	ldp	x29, x30, [sp], #288
    d5c8:	ret
    d5cc:	sub	sp, sp, #0xa0
    d5d0:	stp	x29, x30, [sp, #16]
    d5d4:	add	x29, sp, #0x10
    d5d8:	str	x0, [sp, #88]
    d5dc:	str	x1, [sp, #80]
    d5e0:	str	x2, [sp, #72]
    d5e4:	str	x3, [sp, #64]
    d5e8:	str	x4, [sp, #56]
    d5ec:	str	x5, [sp, #48]
    d5f0:	str	x6, [sp, #40]
    d5f4:	str	x7, [sp, #32]
    d5f8:	ldr	x0, [sp, #88]
    d5fc:	str	x0, [sp, #152]
    d600:	b	d9bc <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x570>
    d604:	ldr	x0, [sp, #152]
    d608:	ldr	w0, [x0, #72]
    d60c:	cmp	w0, #0x4
    d610:	b.eq	d974 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x528>  // b.none
    d614:	cmp	w0, #0x4
    d618:	b.hi	d9b4 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x568>  // b.pmore
    d61c:	cmp	w0, #0x3
    d620:	b.eq	d8d8 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x48c>  // b.none
    d624:	cmp	w0, #0x3
    d628:	b.hi	d9b4 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x568>  // b.pmore
    d62c:	cmp	w0, #0x2
    d630:	b.eq	d7f8 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x3ac>  // b.none
    d634:	cmp	w0, #0x2
    d638:	b.hi	d9b4 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x568>  // b.pmore
    d63c:	cmp	w0, #0x0
    d640:	b.eq	d650 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x204>  // b.none
    d644:	cmp	w0, #0x1
    d648:	b.eq	d6b0 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x264>  // b.none
    d64c:	b	d9b4 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x568>
    d650:	ldr	x0, [sp, #152]
    d654:	add	x2, x0, #0x70
    d658:	ldr	x0, [sp, #64]
    d65c:	ldr	x0, [x0]
    d660:	ldr	x1, [sp, #72]
    d664:	add	x0, x1, x0
    d668:	ldrb	w0, [x0]
    d66c:	mov	w1, w0
    d670:	mov	x0, x2
    d674:	bl	28204 <lzma_mode_is_supported@@XZ_5.0+0xd56c>
    d678:	and	w0, w0, #0xff
    d67c:	cmp	w0, #0x0
    d680:	b.eq	d68c <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x240>  // b.none
    d684:	mov	w0, #0x7                   	// #7
    d688:	b	d9f8 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x5ac>
    d68c:	ldr	x0, [sp, #152]
    d690:	mov	w1, #0x1                   	// #1
    d694:	str	w1, [x0, #72]
    d698:	ldr	x0, [sp, #64]
    d69c:	ldr	x0, [x0]
    d6a0:	add	x1, x0, #0x1
    d6a4:	ldr	x0, [sp, #64]
    d6a8:	str	x1, [x0]
    d6ac:	b	d9bc <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x570>
    d6b0:	ldr	x0, [sp, #152]
    d6b4:	ldr	w0, [x0, #112]
    d6b8:	ldr	x1, [sp, #64]
    d6bc:	ldr	x1, [x1]
    d6c0:	ldr	x2, [sp, #72]
    d6c4:	add	x1, x2, x1
    d6c8:	ldrb	w1, [x1]
    d6cc:	and	x2, x1, #0xff
    d6d0:	ldr	x1, [sp, #152]
    d6d4:	ldr	x1, [x1, #80]
    d6d8:	lsl	w1, w1, #3
    d6dc:	lsl	x1, x2, x1
    d6e0:	orr	w1, w0, w1
    d6e4:	ldr	x0, [sp, #152]
    d6e8:	str	w1, [x0, #112]
    d6ec:	ldr	x0, [sp, #152]
    d6f0:	ldr	x0, [x0, #80]
    d6f4:	add	x1, x0, #0x1
    d6f8:	ldr	x0, [sp, #152]
    d6fc:	str	x1, [x0, #80]
    d700:	ldr	x0, [sp, #152]
    d704:	ldr	x0, [x0, #80]
    d708:	cmp	x0, #0x4
    d70c:	b.ne	d7e0 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x394>  // b.any
    d710:	ldr	x0, [sp, #152]
    d714:	ldrb	w0, [x0, #76]
    d718:	cmp	w0, #0x0
    d71c:	b.eq	d7cc <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x380>  // b.none
    d720:	ldr	x0, [sp, #152]
    d724:	ldr	w0, [x0, #112]
    d728:	cmn	w0, #0x1
    d72c:	b.eq	d7cc <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x380>  // b.none
    d730:	ldr	x0, [sp, #152]
    d734:	ldr	w0, [x0, #112]
    d738:	sub	w0, w0, #0x1
    d73c:	str	w0, [sp, #144]
    d740:	ldr	w0, [sp, #144]
    d744:	lsr	w0, w0, #2
    d748:	ldr	w1, [sp, #144]
    d74c:	orr	w0, w1, w0
    d750:	str	w0, [sp, #144]
    d754:	ldr	w0, [sp, #144]
    d758:	lsr	w0, w0, #3
    d75c:	ldr	w1, [sp, #144]
    d760:	orr	w0, w1, w0
    d764:	str	w0, [sp, #144]
    d768:	ldr	w0, [sp, #144]
    d76c:	lsr	w0, w0, #4
    d770:	ldr	w1, [sp, #144]
    d774:	orr	w0, w1, w0
    d778:	str	w0, [sp, #144]
    d77c:	ldr	w0, [sp, #144]
    d780:	lsr	w0, w0, #8
    d784:	ldr	w1, [sp, #144]
    d788:	orr	w0, w1, w0
    d78c:	str	w0, [sp, #144]
    d790:	ldr	w0, [sp, #144]
    d794:	lsr	w0, w0, #16
    d798:	ldr	w1, [sp, #144]
    d79c:	orr	w0, w1, w0
    d7a0:	str	w0, [sp, #144]
    d7a4:	ldr	w0, [sp, #144]
    d7a8:	add	w0, w0, #0x1
    d7ac:	str	w0, [sp, #144]
    d7b0:	ldr	x0, [sp, #152]
    d7b4:	ldr	w0, [x0, #112]
    d7b8:	ldr	w1, [sp, #144]
    d7bc:	cmp	w1, w0
    d7c0:	b.eq	d7cc <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x380>  // b.none
    d7c4:	mov	w0, #0x7                   	// #7
    d7c8:	b	d9f8 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x5ac>
    d7cc:	ldr	x0, [sp, #152]
    d7d0:	str	xzr, [x0, #80]
    d7d4:	ldr	x0, [sp, #152]
    d7d8:	mov	w1, #0x2                   	// #2
    d7dc:	str	w1, [x0, #72]
    d7e0:	ldr	x0, [sp, #64]
    d7e4:	ldr	x0, [x0]
    d7e8:	add	x1, x0, #0x1
    d7ec:	ldr	x0, [sp, #64]
    d7f0:	str	x1, [x0]
    d7f4:	b	d9bc <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x570>
    d7f8:	ldr	x0, [sp, #152]
    d7fc:	ldr	x1, [x0, #88]
    d800:	ldr	x0, [sp, #64]
    d804:	ldr	x0, [x0]
    d808:	ldr	x2, [sp, #72]
    d80c:	add	x0, x2, x0
    d810:	ldrb	w0, [x0]
    d814:	and	x2, x0, #0xff
    d818:	ldr	x0, [sp, #152]
    d81c:	ldr	x0, [x0, #80]
    d820:	lsl	w0, w0, #3
    d824:	lsl	x0, x2, x0
    d828:	orr	x1, x1, x0
    d82c:	ldr	x0, [sp, #152]
    d830:	str	x1, [x0, #88]
    d834:	ldr	x0, [sp, #64]
    d838:	ldr	x0, [x0]
    d83c:	add	x1, x0, #0x1
    d840:	ldr	x0, [sp, #64]
    d844:	str	x1, [x0]
    d848:	ldr	x0, [sp, #152]
    d84c:	ldr	x0, [x0, #80]
    d850:	add	x1, x0, #0x1
    d854:	ldr	x0, [sp, #152]
    d858:	str	x1, [x0, #80]
    d85c:	ldr	x0, [sp, #152]
    d860:	ldr	x0, [x0, #80]
    d864:	cmp	x0, #0x7
    d868:	b.hi	d870 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x424>  // b.pmore
    d86c:	b	d9bc <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x570>
    d870:	ldr	x0, [sp, #152]
    d874:	ldrb	w0, [x0, #76]
    d878:	cmp	w0, #0x0
    d87c:	b.eq	d8ac <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x460>  // b.none
    d880:	ldr	x0, [sp, #152]
    d884:	ldr	x0, [x0, #88]
    d888:	cmn	x0, #0x1
    d88c:	b.eq	d8ac <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x460>  // b.none
    d890:	ldr	x0, [sp, #152]
    d894:	ldr	x1, [x0, #88]
    d898:	mov	x0, #0x3fffffffff          	// #274877906943
    d89c:	cmp	x1, x0
    d8a0:	b.ls	d8ac <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x460>  // b.plast
    d8a4:	mov	w0, #0x7                   	// #7
    d8a8:	b	d9f8 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x5ac>
    d8ac:	ldr	x0, [sp, #152]
    d8b0:	add	x0, x0, #0x70
    d8b4:	bl	28328 <lzma_mode_is_supported@@XZ_5.0+0xd690>
    d8b8:	add	x1, x0, #0x8, lsl #12
    d8bc:	ldr	x0, [sp, #152]
    d8c0:	str	x1, [x0, #104]
    d8c4:	ldr	x0, [sp, #152]
    d8c8:	str	xzr, [x0, #80]
    d8cc:	ldr	x0, [sp, #152]
    d8d0:	mov	w1, #0x3                   	// #3
    d8d4:	str	w1, [x0, #72]
    d8d8:	ldr	x0, [sp, #152]
    d8dc:	ldr	x1, [x0, #104]
    d8e0:	ldr	x0, [sp, #152]
    d8e4:	ldr	x0, [x0, #96]
    d8e8:	cmp	x1, x0
    d8ec:	b.ls	d8f8 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x4ac>  // b.plast
    d8f0:	mov	w0, #0x6                   	// #6
    d8f4:	b	d9f8 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x5ac>
    d8f8:	stp	xzr, xzr, [sp, #96]
    d8fc:	stp	xzr, xzr, [sp, #112]
    d900:	stp	xzr, xzr, [sp, #128]
    d904:	adrp	x0, 46000 <lzma_mode_is_supported@@XZ_5.0+0x2b368>
    d908:	ldr	x0, [x0, #3944]
    d90c:	str	x0, [sp, #104]
    d910:	ldr	x0, [sp, #152]
    d914:	add	x0, x0, #0x70
    d918:	str	x0, [sp, #112]
    d91c:	ldr	x0, [sp, #152]
    d920:	add	x1, sp, #0x60
    d924:	mov	x2, x1
    d928:	ldr	x1, [sp, #80]
    d92c:	bl	393c <lzma_version_string@@XZ_5.0+0x24c>
    d930:	str	w0, [sp, #148]
    d934:	ldr	w0, [sp, #148]
    d938:	cmp	w0, #0x0
    d93c:	b.eq	d948 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x4fc>  // b.none
    d940:	ldr	w0, [sp, #148]
    d944:	b	d9f8 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x5ac>
    d948:	ldr	x0, [sp, #152]
    d94c:	ldr	x2, [x0]
    d950:	ldr	x0, [sp, #152]
    d954:	ldr	x0, [x0, #88]
    d958:	mov	x1, x0
    d95c:	mov	x0, x2
    d960:	bl	185a8 <lzma_mf_is_supported@@XZ_5.0+0x2d20>
    d964:	ldr	x0, [sp, #152]
    d968:	mov	w1, #0x4                   	// #4
    d96c:	str	w1, [x0, #72]
    d970:	b	d9bc <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x570>
    d974:	ldr	x0, [sp, #152]
    d978:	ldr	x8, [x0, #24]
    d97c:	ldr	x0, [sp, #152]
    d980:	ldr	x9, [x0]
    d984:	ldr	w0, [sp, #160]
    d988:	str	w0, [sp]
    d98c:	ldr	x7, [sp, #32]
    d990:	ldr	x6, [sp, #40]
    d994:	ldr	x5, [sp, #48]
    d998:	ldr	x4, [sp, #56]
    d99c:	ldr	x3, [sp, #64]
    d9a0:	ldr	x2, [sp, #72]
    d9a4:	ldr	x1, [sp, #80]
    d9a8:	mov	x0, x9
    d9ac:	blr	x8
    d9b0:	b	d9f8 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x5ac>
    d9b4:	mov	w0, #0xb                   	// #11
    d9b8:	b	d9f8 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x5ac>
    d9bc:	ldr	x0, [sp, #40]
    d9c0:	ldr	x0, [x0]
    d9c4:	ldr	x1, [sp, #32]
    d9c8:	cmp	x1, x0
    d9cc:	b.ls	d9f4 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x5a8>  // b.plast
    d9d0:	ldr	x0, [sp, #152]
    d9d4:	ldr	w0, [x0, #72]
    d9d8:	cmp	w0, #0x4
    d9dc:	b.eq	d604 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x1b8>  // b.none
    d9e0:	ldr	x0, [sp, #64]
    d9e4:	ldr	x0, [x0]
    d9e8:	ldr	x1, [sp, #56]
    d9ec:	cmp	x1, x0
    d9f0:	b.hi	d604 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x1b8>  // b.pmore
    d9f4:	mov	w0, #0x0                   	// #0
    d9f8:	ldp	x29, x30, [sp, #16]
    d9fc:	add	sp, sp, #0xa0
    da00:	ret
    da04:	stp	x29, x30, [sp, #-48]!
    da08:	mov	x29, sp
    da0c:	str	x0, [sp, #24]
    da10:	str	x1, [sp, #16]
    da14:	ldr	x0, [sp, #24]
    da18:	str	x0, [sp, #40]
    da1c:	ldr	x0, [sp, #40]
    da20:	ldr	x1, [sp, #16]
    da24:	bl	3a48 <lzma_version_string@@XZ_5.0+0x358>
    da28:	ldr	x1, [sp, #16]
    da2c:	ldr	x0, [sp, #40]
    da30:	bl	3814 <lzma_version_string@@XZ_5.0+0x124>
    da34:	nop
    da38:	ldp	x29, x30, [sp], #48
    da3c:	ret
    da40:	sub	sp, sp, #0x30
    da44:	str	x0, [sp, #24]
    da48:	str	x1, [sp, #16]
    da4c:	str	x2, [sp, #8]
    da50:	str	x3, [sp]
    da54:	ldr	x0, [sp, #24]
    da58:	str	x0, [sp, #40]
    da5c:	ldr	x0, [sp, #40]
    da60:	ldr	x1, [x0, #104]
    da64:	ldr	x0, [sp, #16]
    da68:	str	x1, [x0]
    da6c:	ldr	x0, [sp, #40]
    da70:	ldr	x1, [x0, #96]
    da74:	ldr	x0, [sp, #8]
    da78:	str	x1, [x0]
    da7c:	ldr	x0, [sp]
    da80:	cmp	x0, #0x0
    da84:	b.eq	dab0 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x664>  // b.none
    da88:	ldr	x0, [sp, #40]
    da8c:	ldr	x0, [x0, #104]
    da90:	ldr	x1, [sp]
    da94:	cmp	x1, x0
    da98:	b.cs	daa4 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x658>  // b.hs, b.nlast
    da9c:	mov	w0, #0x6                   	// #6
    daa0:	b	dab4 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x668>
    daa4:	ldr	x0, [sp, #40]
    daa8:	ldr	x1, [sp]
    daac:	str	x1, [x0, #96]
    dab0:	mov	w0, #0x0                   	// #0
    dab4:	add	sp, sp, #0x30
    dab8:	ret
    dabc:	stp	x29, x30, [sp, #-128]!
    dac0:	mov	x29, sp
    dac4:	str	x0, [sp, #40]
    dac8:	str	x1, [sp, #32]
    dacc:	str	x2, [sp, #24]
    dad0:	strb	w3, [sp, #23]
    dad4:	ldr	x0, [sp, #40]
    dad8:	ldr	x1, [x0, #16]
    dadc:	adrp	x0, d000 <lzma_vli_encode@@XZ_5.0+0x29a8>
    dae0:	add	x0, x0, #0xabc
    dae4:	cmp	x1, x0
    dae8:	b.eq	daf8 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x6ac>  // b.none
    daec:	ldr	x1, [sp, #32]
    daf0:	ldr	x0, [sp, #40]
    daf4:	bl	3a48 <lzma_version_string@@XZ_5.0+0x358>
    daf8:	adrp	x0, d000 <lzma_vli_encode@@XZ_5.0+0x29a8>
    dafc:	add	x1, x0, #0xabc
    db00:	ldr	x0, [sp, #40]
    db04:	str	x1, [x0, #16]
    db08:	ldr	x0, [sp, #40]
    db0c:	ldr	x0, [x0]
    db10:	str	x0, [sp, #120]
    db14:	ldr	x0, [sp, #120]
    db18:	cmp	x0, #0x0
    db1c:	b.ne	dbcc <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x780>  // b.any
    db20:	ldr	x1, [sp, #32]
    db24:	mov	x0, #0xe0                  	// #224
    db28:	bl	36fc <lzma_version_string@@XZ_5.0+0xc>
    db2c:	str	x0, [sp, #120]
    db30:	ldr	x0, [sp, #120]
    db34:	cmp	x0, #0x0
    db38:	b.ne	db44 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x6f8>  // b.any
    db3c:	mov	w0, #0x5                   	// #5
    db40:	b	dc38 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x7ec>
    db44:	ldr	x0, [sp, #40]
    db48:	ldr	x1, [sp, #120]
    db4c:	str	x1, [x0]
    db50:	ldr	x0, [sp, #40]
    db54:	adrp	x1, d000 <lzma_vli_encode@@XZ_5.0+0x29a8>
    db58:	add	x1, x1, #0x5cc
    db5c:	str	x1, [x0, #24]
    db60:	ldr	x0, [sp, #40]
    db64:	adrp	x1, d000 <lzma_vli_encode@@XZ_5.0+0x29a8>
    db68:	add	x1, x1, #0xa04
    db6c:	str	x1, [x0, #32]
    db70:	ldr	x0, [sp, #40]
    db74:	adrp	x1, d000 <lzma_vli_encode@@XZ_5.0+0x29a8>
    db78:	add	x1, x1, #0xa40
    db7c:	str	x1, [x0, #56]
    db80:	ldr	x0, [sp, #120]
    db84:	str	xzr, [x0]
    db88:	ldr	x0, [sp, #120]
    db8c:	mov	x1, #0xffffffffffffffff    	// #-1
    db90:	str	x1, [x0, #8]
    db94:	ldr	x0, [sp, #120]
    db98:	str	xzr, [x0, #16]
    db9c:	ldr	x0, [sp, #120]
    dba0:	str	xzr, [x0, #24]
    dba4:	ldr	x0, [sp, #120]
    dba8:	str	xzr, [x0, #32]
    dbac:	ldr	x0, [sp, #120]
    dbb0:	str	xzr, [x0, #40]
    dbb4:	ldr	x0, [sp, #120]
    dbb8:	str	xzr, [x0, #48]
    dbbc:	ldr	x0, [sp, #120]
    dbc0:	str	xzr, [x0, #56]
    dbc4:	ldr	x0, [sp, #120]
    dbc8:	str	xzr, [x0, #64]
    dbcc:	ldr	x0, [sp, #120]
    dbd0:	str	wzr, [x0, #72]
    dbd4:	ldr	x0, [sp, #120]
    dbd8:	ldrb	w1, [sp, #23]
    dbdc:	strb	w1, [x0, #76]
    dbe0:	ldr	x0, [sp, #120]
    dbe4:	str	xzr, [x0, #80]
    dbe8:	ldr	x0, [sp, #120]
    dbec:	str	wzr, [x0, #112]
    dbf0:	ldr	x0, [sp, #120]
    dbf4:	str	xzr, [x0, #120]
    dbf8:	ldr	x0, [sp, #120]
    dbfc:	str	wzr, [x0, #128]
    dc00:	ldr	x0, [sp, #120]
    dc04:	str	xzr, [x0, #88]
    dc08:	ldr	x0, [sp, #24]
    dc0c:	cmp	x0, #0x0
    dc10:	b.eq	dc1c <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x7d0>  // b.none
    dc14:	ldr	x0, [sp, #24]
    dc18:	b	dc20 <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x7d4>
    dc1c:	mov	x0, #0x1                   	// #1
    dc20:	ldr	x1, [sp, #120]
    dc24:	str	x0, [x1, #96]
    dc28:	ldr	x0, [sp, #120]
    dc2c:	mov	x1, #0x8000                	// #32768
    dc30:	str	x1, [x0, #104]
    dc34:	mov	w0, #0x0                   	// #0
    dc38:	ldp	x29, x30, [sp], #128
    dc3c:	ret

000000000000dc40 <lzma_alone_decoder@@XZ_5.0>:
    dc40:	stp	x29, x30, [sp, #-48]!
    dc44:	mov	x29, sp
    dc48:	str	x0, [sp, #24]
    dc4c:	str	x1, [sp, #16]
    dc50:	ldr	x0, [sp, #24]
    dc54:	bl	3b00 <lzma_version_string@@XZ_5.0+0x410>
    dc58:	str	w0, [sp, #44]
    dc5c:	ldr	w0, [sp, #44]
    dc60:	cmp	w0, #0x0
    dc64:	b.eq	dc70 <lzma_alone_decoder@@XZ_5.0+0x30>  // b.none
    dc68:	ldr	w0, [sp, #44]
    dc6c:	b	dcdc <lzma_alone_decoder@@XZ_5.0+0x9c>
    dc70:	ldr	x0, [sp, #24]
    dc74:	ldr	x0, [x0, #56]
    dc78:	mov	x4, x0
    dc7c:	ldr	x0, [sp, #24]
    dc80:	ldr	x0, [x0, #48]
    dc84:	mov	w3, #0x0                   	// #0
    dc88:	ldr	x2, [sp, #16]
    dc8c:	mov	x1, x0
    dc90:	mov	x0, x4
    dc94:	bl	dabc <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x670>
    dc98:	str	w0, [sp, #40]
    dc9c:	ldr	w0, [sp, #40]
    dca0:	cmp	w0, #0x0
    dca4:	b.eq	dcb8 <lzma_alone_decoder@@XZ_5.0+0x78>  // b.none
    dca8:	ldr	x0, [sp, #24]
    dcac:	bl	3320 <lzma_end@plt>
    dcb0:	ldr	w0, [sp, #40]
    dcb4:	b	dcdc <lzma_alone_decoder@@XZ_5.0+0x9c>
    dcb8:	ldr	x0, [sp, #24]
    dcbc:	ldr	x0, [x0, #56]
    dcc0:	mov	w1, #0x1                   	// #1
    dcc4:	strb	w1, [x0, #88]
    dcc8:	ldr	x0, [sp, #24]
    dccc:	ldr	x0, [x0, #56]
    dcd0:	mov	w1, #0x1                   	// #1
    dcd4:	strb	w1, [x0, #91]
    dcd8:	mov	w0, #0x0                   	// #0
    dcdc:	ldp	x29, x30, [sp], #48
    dce0:	ret
    dce4:	sub	sp, sp, #0x80
    dce8:	stp	x29, x30, [sp, #16]
    dcec:	add	x29, sp, #0x10
    dcf0:	str	x0, [sp, #88]
    dcf4:	str	x1, [sp, #80]
    dcf8:	str	x2, [sp, #72]
    dcfc:	str	x3, [sp, #64]
    dd00:	str	x4, [sp, #56]
    dd04:	str	x5, [sp, #48]
    dd08:	str	x6, [sp, #40]
    dd0c:	str	x7, [sp, #32]
    dd10:	ldr	x0, [sp, #88]
    dd14:	str	x0, [sp, #120]
    dd18:	ldr	x0, [sp, #120]
    dd1c:	ldr	w0, [x0, #84]
    dd20:	cmp	w0, #0x2
    dd24:	b.eq	deac <lzma_alone_decoder@@XZ_5.0+0x26c>  // b.none
    dd28:	cmp	w0, #0x2
    dd2c:	b.hi	dedc <lzma_alone_decoder@@XZ_5.0+0x29c>  // b.pmore
    dd30:	cmp	w0, #0x0
    dd34:	b.eq	dd44 <lzma_alone_decoder@@XZ_5.0+0x104>  // b.none
    dd38:	cmp	w0, #0x1
    dd3c:	b.eq	de38 <lzma_alone_decoder@@XZ_5.0+0x1f8>  // b.none
    dd40:	b	dedc <lzma_alone_decoder@@XZ_5.0+0x29c>
    dd44:	ldr	x0, [sp, #64]
    dd48:	ldr	x0, [x0]
    dd4c:	ldr	x1, [sp, #56]
    dd50:	cmp	x1, x0
    dd54:	b.hi	dd60 <lzma_alone_decoder@@XZ_5.0+0x120>  // b.pmore
    dd58:	mov	w0, #0x0                   	// #0
    dd5c:	b	dee0 <lzma_alone_decoder@@XZ_5.0+0x2a0>
    dd60:	ldr	x0, [sp, #120]
    dd64:	mov	w1, #0x1                   	// #1
    dd68:	str	w1, [x0, #84]
    dd6c:	ldr	x0, [sp, #64]
    dd70:	ldr	x0, [x0]
    dd74:	ldr	x1, [sp, #72]
    dd78:	add	x0, x1, x0
    dd7c:	ldrb	w0, [x0]
    dd80:	cmp	w0, #0xfd
    dd84:	b.ne	ddc8 <lzma_alone_decoder@@XZ_5.0+0x188>  // b.any
    dd88:	ldr	x4, [sp, #120]
    dd8c:	ldr	x0, [sp, #120]
    dd90:	ldr	x1, [x0, #72]
    dd94:	ldr	x0, [sp, #120]
    dd98:	ldr	w0, [x0, #80]
    dd9c:	mov	w3, w0
    dda0:	mov	x2, x1
    dda4:	ldr	x1, [sp, #80]
    dda8:	mov	x0, x4
    ddac:	bl	11274 <lzma_stream_buffer_decode@@XZ_5.0+0xa50>
    ddb0:	str	w0, [sp, #112]
    ddb4:	ldr	w0, [sp, #112]
    ddb8:	cmp	w0, #0x0
    ddbc:	b.eq	de38 <lzma_alone_decoder@@XZ_5.0+0x1f8>  // b.none
    ddc0:	ldr	w0, [sp, #112]
    ddc4:	b	dee0 <lzma_alone_decoder@@XZ_5.0+0x2a0>
    ddc8:	ldr	x4, [sp, #120]
    ddcc:	ldr	x0, [sp, #120]
    ddd0:	ldr	x0, [x0, #72]
    ddd4:	mov	w3, #0x1                   	// #1
    ddd8:	mov	x2, x0
    dddc:	ldr	x1, [sp, #80]
    dde0:	mov	x0, x4
    dde4:	bl	dabc <lzma_stream_encoder_mt_memusage@@XZ_5.2+0x670>
    dde8:	str	w0, [sp, #116]
    ddec:	ldr	w0, [sp, #116]
    ddf0:	cmp	w0, #0x0
    ddf4:	b.eq	de00 <lzma_alone_decoder@@XZ_5.0+0x1c0>  // b.none
    ddf8:	ldr	w0, [sp, #116]
    ddfc:	b	dee0 <lzma_alone_decoder@@XZ_5.0+0x2a0>
    de00:	ldr	x0, [sp, #120]
    de04:	ldr	w0, [x0, #80]
    de08:	and	w0, w0, #0x1
    de0c:	cmp	w0, #0x0
    de10:	b.eq	de1c <lzma_alone_decoder@@XZ_5.0+0x1dc>  // b.none
    de14:	mov	w0, #0x2                   	// #2
    de18:	b	dee0 <lzma_alone_decoder@@XZ_5.0+0x2a0>
    de1c:	ldr	x0, [sp, #120]
    de20:	ldr	w0, [x0, #80]
    de24:	and	w0, w0, #0x4
    de28:	cmp	w0, #0x0
    de2c:	b.eq	de38 <lzma_alone_decoder@@XZ_5.0+0x1f8>  // b.none
    de30:	mov	w0, #0x4                   	// #4
    de34:	b	dee0 <lzma_alone_decoder@@XZ_5.0+0x2a0>
    de38:	ldr	x0, [sp, #120]
    de3c:	ldr	x8, [x0, #24]
    de40:	ldr	x0, [sp, #120]
    de44:	ldr	x9, [x0]
    de48:	ldr	w0, [sp, #128]
    de4c:	str	w0, [sp]
    de50:	ldr	x7, [sp, #32]
    de54:	ldr	x6, [sp, #40]
    de58:	ldr	x5, [sp, #48]
    de5c:	ldr	x4, [sp, #56]
    de60:	ldr	x3, [sp, #64]
    de64:	ldr	x2, [sp, #72]
    de68:	ldr	x1, [sp, #80]
    de6c:	mov	x0, x9
    de70:	blr	x8
    de74:	str	w0, [sp, #108]
    de78:	ldr	w0, [sp, #108]
    de7c:	cmp	w0, #0x1
    de80:	b.ne	de98 <lzma_alone_decoder@@XZ_5.0+0x258>  // b.any
    de84:	ldr	x0, [sp, #120]
    de88:	ldr	w0, [x0, #80]
    de8c:	and	w0, w0, #0x8
    de90:	cmp	w0, #0x0
    de94:	b.ne	dea0 <lzma_alone_decoder@@XZ_5.0+0x260>  // b.any
    de98:	ldr	w0, [sp, #108]
    de9c:	b	dee0 <lzma_alone_decoder@@XZ_5.0+0x2a0>
    dea0:	ldr	x0, [sp, #120]
    dea4:	mov	w1, #0x2                   	// #2
    dea8:	str	w1, [x0, #84]
    deac:	ldr	x0, [sp, #64]
    deb0:	ldr	x0, [x0]
    deb4:	ldr	x1, [sp, #56]
    deb8:	cmp	x1, x0
    debc:	b.ls	dec8 <lzma_alone_decoder@@XZ_5.0+0x288>  // b.plast
    dec0:	mov	w0, #0x9                   	// #9
    dec4:	b	dee0 <lzma_alone_decoder@@XZ_5.0+0x2a0>
    dec8:	ldr	w0, [sp, #128]
    decc:	cmp	w0, #0x3
    ded0:	cset	w0, eq  // eq = none
    ded4:	and	w0, w0, #0xff
    ded8:	b	dee0 <lzma_alone_decoder@@XZ_5.0+0x2a0>
    dedc:	mov	w0, #0xb                   	// #11
    dee0:	ldp	x29, x30, [sp, #16]
    dee4:	add	sp, sp, #0x80
    dee8:	ret
    deec:	stp	x29, x30, [sp, #-48]!
    def0:	mov	x29, sp
    def4:	str	x0, [sp, #24]
    def8:	str	x1, [sp, #16]
    defc:	ldr	x0, [sp, #24]
    df00:	str	x0, [sp, #40]
    df04:	ldr	x0, [sp, #40]
    df08:	ldr	x1, [sp, #16]
    df0c:	bl	3a48 <lzma_version_string@@XZ_5.0+0x358>
    df10:	ldr	x1, [sp, #16]
    df14:	ldr	x0, [sp, #40]
    df18:	bl	3814 <lzma_version_string@@XZ_5.0+0x124>
    df1c:	nop
    df20:	ldp	x29, x30, [sp], #48
    df24:	ret
    df28:	stp	x29, x30, [sp, #-48]!
    df2c:	mov	x29, sp
    df30:	str	x0, [sp, #24]
    df34:	ldr	x0, [sp, #24]
    df38:	str	x0, [sp, #40]
    df3c:	ldr	x0, [sp, #40]
    df40:	ldr	x0, [x0, #48]
    df44:	cmp	x0, #0x0
    df48:	b.eq	df64 <lzma_alone_decoder@@XZ_5.0+0x324>  // b.none
    df4c:	ldr	x0, [sp, #40]
    df50:	ldr	x1, [x0, #48]
    df54:	ldr	x0, [sp, #40]
    df58:	ldr	x0, [x0]
    df5c:	blr	x1
    df60:	b	df68 <lzma_alone_decoder@@XZ_5.0+0x328>
    df64:	mov	w0, #0x0                   	// #0
    df68:	ldp	x29, x30, [sp], #48
    df6c:	ret
    df70:	stp	x29, x30, [sp, #-64]!
    df74:	mov	x29, sp
    df78:	str	x0, [sp, #40]
    df7c:	str	x1, [sp, #32]
    df80:	str	x2, [sp, #24]
    df84:	str	x3, [sp, #16]
    df88:	ldr	x0, [sp, #40]
    df8c:	str	x0, [sp, #48]
    df90:	ldr	x0, [sp, #48]
    df94:	ldr	x0, [x0, #56]
    df98:	cmp	x0, #0x0
    df9c:	b.eq	dfc8 <lzma_alone_decoder@@XZ_5.0+0x388>  // b.none
    dfa0:	ldr	x0, [sp, #48]
    dfa4:	ldr	x4, [x0, #56]
    dfa8:	ldr	x0, [sp, #48]
    dfac:	ldr	x0, [x0]
    dfb0:	ldr	x3, [sp, #16]
    dfb4:	ldr	x2, [sp, #24]
    dfb8:	ldr	x1, [sp, #32]
    dfbc:	blr	x4
    dfc0:	str	w0, [sp, #60]
    dfc4:	b	e010 <lzma_alone_decoder@@XZ_5.0+0x3d0>
    dfc8:	ldr	x0, [sp, #32]
    dfcc:	mov	x1, #0x8000                	// #32768
    dfd0:	str	x1, [x0]
    dfd4:	ldr	x0, [sp, #48]
    dfd8:	ldr	x1, [x0, #72]
    dfdc:	ldr	x0, [sp, #24]
    dfe0:	str	x1, [x0]
    dfe4:	str	wzr, [sp, #60]
    dfe8:	ldr	x0, [sp, #16]
    dfec:	cmp	x0, #0x0
    dff0:	b.eq	e010 <lzma_alone_decoder@@XZ_5.0+0x3d0>  // b.none
    dff4:	ldr	x0, [sp, #32]
    dff8:	ldr	x0, [x0]
    dffc:	ldr	x1, [sp, #16]
    e000:	cmp	x1, x0
    e004:	b.cs	e010 <lzma_alone_decoder@@XZ_5.0+0x3d0>  // b.hs, b.nlast
    e008:	mov	w0, #0x6                   	// #6
    e00c:	str	w0, [sp, #60]
    e010:	ldr	w0, [sp, #60]
    e014:	cmp	w0, #0x0
    e018:	b.ne	e034 <lzma_alone_decoder@@XZ_5.0+0x3f4>  // b.any
    e01c:	ldr	x0, [sp, #16]
    e020:	cmp	x0, #0x0
    e024:	b.eq	e034 <lzma_alone_decoder@@XZ_5.0+0x3f4>  // b.none
    e028:	ldr	x0, [sp, #48]
    e02c:	ldr	x1, [sp, #16]
    e030:	str	x1, [x0, #72]
    e034:	ldr	w0, [sp, #60]
    e038:	ldp	x29, x30, [sp], #64
    e03c:	ret
    e040:	stp	x29, x30, [sp, #-128]!
    e044:	mov	x29, sp
    e048:	str	x0, [sp, #40]
    e04c:	str	x1, [sp, #32]
    e050:	str	x2, [sp, #24]
    e054:	str	w3, [sp, #20]
    e058:	ldr	x0, [sp, #40]
    e05c:	ldr	x1, [x0, #16]
    e060:	adrp	x0, e000 <lzma_alone_decoder@@XZ_5.0+0x3c0>
    e064:	add	x0, x0, #0x40
    e068:	cmp	x1, x0
    e06c:	b.eq	e07c <lzma_alone_decoder@@XZ_5.0+0x43c>  // b.none
    e070:	ldr	x1, [sp, #32]
    e074:	ldr	x0, [sp, #40]
    e078:	bl	3a48 <lzma_version_string@@XZ_5.0+0x358>
    e07c:	adrp	x0, e000 <lzma_alone_decoder@@XZ_5.0+0x3c0>
    e080:	add	x1, x0, #0x40
    e084:	ldr	x0, [sp, #40]
    e088:	str	x1, [x0, #16]
    e08c:	ldr	w0, [sp, #20]
    e090:	and	w0, w0, #0xffffffe0
    e094:	cmp	w0, #0x0
    e098:	b.eq	e0a4 <lzma_alone_decoder@@XZ_5.0+0x464>  // b.none
    e09c:	mov	w0, #0x8                   	// #8
    e0a0:	b	e1b0 <lzma_alone_decoder@@XZ_5.0+0x570>
    e0a4:	ldr	x0, [sp, #40]
    e0a8:	ldr	x0, [x0]
    e0ac:	str	x0, [sp, #120]
    e0b0:	ldr	x0, [sp, #120]
    e0b4:	cmp	x0, #0x0
    e0b8:	b.ne	e178 <lzma_alone_decoder@@XZ_5.0+0x538>  // b.any
    e0bc:	ldr	x1, [sp, #32]
    e0c0:	mov	x0, #0x58                  	// #88
    e0c4:	bl	36fc <lzma_version_string@@XZ_5.0+0xc>
    e0c8:	str	x0, [sp, #120]
    e0cc:	ldr	x0, [sp, #120]
    e0d0:	cmp	x0, #0x0
    e0d4:	b.ne	e0e0 <lzma_alone_decoder@@XZ_5.0+0x4a0>  // b.any
    e0d8:	mov	w0, #0x5                   	// #5
    e0dc:	b	e1b0 <lzma_alone_decoder@@XZ_5.0+0x570>
    e0e0:	ldr	x0, [sp, #40]
    e0e4:	ldr	x1, [sp, #120]
    e0e8:	str	x1, [x0]
    e0ec:	ldr	x0, [sp, #40]
    e0f0:	adrp	x1, d000 <lzma_vli_encode@@XZ_5.0+0x29a8>
    e0f4:	add	x1, x1, #0xce4
    e0f8:	str	x1, [x0, #24]
    e0fc:	ldr	x0, [sp, #40]
    e100:	adrp	x1, d000 <lzma_vli_encode@@XZ_5.0+0x29a8>
    e104:	add	x1, x1, #0xeec
    e108:	str	x1, [x0, #32]
    e10c:	ldr	x0, [sp, #40]
    e110:	adrp	x1, d000 <lzma_vli_encode@@XZ_5.0+0x29a8>
    e114:	add	x1, x1, #0xf28
    e118:	str	x1, [x0, #48]
    e11c:	ldr	x0, [sp, #40]
    e120:	adrp	x1, d000 <lzma_vli_encode@@XZ_5.0+0x29a8>
    e124:	add	x1, x1, #0xf70
    e128:	str	x1, [x0, #56]
    e12c:	ldr	x0, [sp, #120]
    e130:	str	xzr, [x0]
    e134:	ldr	x0, [sp, #120]
    e138:	mov	x1, #0xffffffffffffffff    	// #-1
    e13c:	str	x1, [x0, #8]
    e140:	ldr	x0, [sp, #120]
    e144:	str	xzr, [x0, #16]
    e148:	ldr	x0, [sp, #120]
    e14c:	str	xzr, [x0, #24]
    e150:	ldr	x0, [sp, #120]
    e154:	str	xzr, [x0, #32]
    e158:	ldr	x0, [sp, #120]
    e15c:	str	xzr, [x0, #40]
    e160:	ldr	x0, [sp, #120]
    e164:	str	xzr, [x0, #48]
    e168:	ldr	x0, [sp, #120]
    e16c:	str	xzr, [x0, #56]
    e170:	ldr	x0, [sp, #120]
    e174:	str	xzr, [x0, #64]
    e178:	ldr	x0, [sp, #24]
    e17c:	cmp	x0, #0x0
    e180:	b.eq	e18c <lzma_alone_decoder@@XZ_5.0+0x54c>  // b.none
    e184:	ldr	x0, [sp, #24]
    e188:	b	e190 <lzma_alone_decoder@@XZ_5.0+0x550>
    e18c:	mov	x0, #0x1                   	// #1
    e190:	ldr	x1, [sp, #120]
    e194:	str	x0, [x1, #72]
    e198:	ldr	x0, [sp, #120]
    e19c:	ldr	w1, [sp, #20]
    e1a0:	str	w1, [x0, #80]
    e1a4:	ldr	x0, [sp, #120]
    e1a8:	str	wzr, [x0, #84]
    e1ac:	mov	w0, #0x0                   	// #0
    e1b0:	ldp	x29, x30, [sp], #128
    e1b4:	ret

000000000000e1b8 <lzma_auto_decoder@@XZ_5.0>:
    e1b8:	stp	x29, x30, [sp, #-64]!
    e1bc:	mov	x29, sp
    e1c0:	str	x0, [sp, #40]
    e1c4:	str	x1, [sp, #32]
    e1c8:	str	w2, [sp, #28]
    e1cc:	ldr	x0, [sp, #40]
    e1d0:	bl	3b00 <lzma_version_string@@XZ_5.0+0x410>
    e1d4:	str	w0, [sp, #60]
    e1d8:	ldr	w0, [sp, #60]
    e1dc:	cmp	w0, #0x0
    e1e0:	b.eq	e1ec <lzma_auto_decoder@@XZ_5.0+0x34>  // b.none
    e1e4:	ldr	w0, [sp, #60]
    e1e8:	b	e258 <lzma_auto_decoder@@XZ_5.0+0xa0>
    e1ec:	ldr	x0, [sp, #40]
    e1f0:	ldr	x0, [x0, #56]
    e1f4:	mov	x4, x0
    e1f8:	ldr	x0, [sp, #40]
    e1fc:	ldr	x0, [x0, #48]
    e200:	ldr	w3, [sp, #28]
    e204:	ldr	x2, [sp, #32]
    e208:	mov	x1, x0
    e20c:	mov	x0, x4
    e210:	bl	e040 <lzma_alone_decoder@@XZ_5.0+0x400>
    e214:	str	w0, [sp, #56]
    e218:	ldr	w0, [sp, #56]
    e21c:	cmp	w0, #0x0
    e220:	b.eq	e234 <lzma_auto_decoder@@XZ_5.0+0x7c>  // b.none
    e224:	ldr	x0, [sp, #40]
    e228:	bl	3320 <lzma_end@plt>
    e22c:	ldr	w0, [sp, #56]
    e230:	b	e258 <lzma_auto_decoder@@XZ_5.0+0xa0>
    e234:	ldr	x0, [sp, #40]
    e238:	ldr	x0, [x0, #56]
    e23c:	mov	w1, #0x1                   	// #1
    e240:	strb	w1, [x0, #88]
    e244:	ldr	x0, [sp, #40]
    e248:	ldr	x0, [x0, #56]
    e24c:	mov	w1, #0x1                   	// #1
    e250:	strb	w1, [x0, #91]
    e254:	mov	w0, #0x0                   	// #0
    e258:	ldp	x29, x30, [sp], #64
    e25c:	ret

000000000000e260 <lzma_block_buffer_decode@@XZ_5.0>:
    e260:	sub	sp, sp, #0x110
    e264:	stp	x29, x30, [sp, #16]
    e268:	add	x29, sp, #0x10
    e26c:	str	x0, [sp, #88]
    e270:	str	x1, [sp, #80]
    e274:	str	x2, [sp, #72]
    e278:	str	x3, [sp, #64]
    e27c:	str	x4, [sp, #56]
    e280:	str	x5, [sp, #48]
    e284:	str	x6, [sp, #40]
    e288:	str	x7, [sp, #32]
    e28c:	ldr	x0, [sp, #64]
    e290:	cmp	x0, #0x0
    e294:	b.eq	e30c <lzma_block_buffer_decode@@XZ_5.0+0xac>  // b.none
    e298:	ldr	x0, [sp, #72]
    e29c:	cmp	x0, #0x0
    e2a0:	b.ne	e2b8 <lzma_block_buffer_decode@@XZ_5.0+0x58>  // b.any
    e2a4:	ldr	x0, [sp, #64]
    e2a8:	ldr	x0, [x0]
    e2ac:	ldr	x1, [sp, #56]
    e2b0:	cmp	x1, x0
    e2b4:	b.ne	e30c <lzma_block_buffer_decode@@XZ_5.0+0xac>  // b.any
    e2b8:	ldr	x0, [sp, #64]
    e2bc:	ldr	x0, [x0]
    e2c0:	ldr	x1, [sp, #56]
    e2c4:	cmp	x1, x0
    e2c8:	b.cc	e30c <lzma_block_buffer_decode@@XZ_5.0+0xac>  // b.lo, b.ul, b.last
    e2cc:	ldr	x0, [sp, #40]
    e2d0:	cmp	x0, #0x0
    e2d4:	b.eq	e30c <lzma_block_buffer_decode@@XZ_5.0+0xac>  // b.none
    e2d8:	ldr	x0, [sp, #48]
    e2dc:	cmp	x0, #0x0
    e2e0:	b.ne	e2f8 <lzma_block_buffer_decode@@XZ_5.0+0x98>  // b.any
    e2e4:	ldr	x0, [sp, #40]
    e2e8:	ldr	x0, [x0]
    e2ec:	ldr	x1, [sp, #32]
    e2f0:	cmp	x1, x0
    e2f4:	b.ne	e30c <lzma_block_buffer_decode@@XZ_5.0+0xac>  // b.any
    e2f8:	ldr	x0, [sp, #40]
    e2fc:	ldr	x0, [x0]
    e300:	ldr	x1, [sp, #32]
    e304:	cmp	x1, x0
    e308:	b.cs	e314 <lzma_block_buffer_decode@@XZ_5.0+0xb4>  // b.hs, b.nlast
    e30c:	mov	w0, #0xb                   	// #11
    e310:	b	e41c <lzma_block_buffer_decode@@XZ_5.0+0x1bc>
    e314:	str	xzr, [sp, #176]
    e318:	mov	x0, #0xffffffffffffffff    	// #-1
    e31c:	str	x0, [sp, #184]
    e320:	str	xzr, [sp, #192]
    e324:	str	xzr, [sp, #200]
    e328:	str	xzr, [sp, #208]
    e32c:	str	xzr, [sp, #216]
    e330:	str	xzr, [sp, #224]
    e334:	str	xzr, [sp, #232]
    e338:	str	xzr, [sp, #240]
    e33c:	add	x0, sp, #0xb0
    e340:	ldr	x2, [sp, #88]
    e344:	ldr	x1, [sp, #80]
    e348:	bl	e930 <lzma_block_buffer_decode@@XZ_5.0+0x6d0>
    e34c:	str	w0, [sp, #268]
    e350:	ldr	w0, [sp, #268]
    e354:	cmp	w0, #0x0
    e358:	b.ne	e40c <lzma_block_buffer_decode@@XZ_5.0+0x1ac>  // b.any
    e35c:	ldr	x0, [sp, #64]
    e360:	ldr	x0, [x0]
    e364:	str	x0, [sp, #256]
    e368:	ldr	x0, [sp, #40]
    e36c:	ldr	x0, [x0]
    e370:	str	x0, [sp, #248]
    e374:	ldr	x8, [sp, #200]
    e378:	ldr	x9, [sp, #176]
    e37c:	mov	w0, #0x3                   	// #3
    e380:	str	w0, [sp]
    e384:	ldr	x7, [sp, #32]
    e388:	ldr	x6, [sp, #40]
    e38c:	ldr	x5, [sp, #48]
    e390:	ldr	x4, [sp, #56]
    e394:	ldr	x3, [sp, #64]
    e398:	ldr	x2, [sp, #72]
    e39c:	ldr	x1, [sp, #80]
    e3a0:	mov	x0, x9
    e3a4:	blr	x8
    e3a8:	str	w0, [sp, #268]
    e3ac:	ldr	w0, [sp, #268]
    e3b0:	cmp	w0, #0x1
    e3b4:	b.ne	e3c0 <lzma_block_buffer_decode@@XZ_5.0+0x160>  // b.any
    e3b8:	str	wzr, [sp, #268]
    e3bc:	b	e40c <lzma_block_buffer_decode@@XZ_5.0+0x1ac>
    e3c0:	ldr	w0, [sp, #268]
    e3c4:	cmp	w0, #0x0
    e3c8:	b.ne	e3f4 <lzma_block_buffer_decode@@XZ_5.0+0x194>  // b.any
    e3cc:	ldr	x0, [sp, #64]
    e3d0:	ldr	x0, [x0]
    e3d4:	ldr	x1, [sp, #56]
    e3d8:	cmp	x1, x0
    e3dc:	b.ne	e3ec <lzma_block_buffer_decode@@XZ_5.0+0x18c>  // b.any
    e3e0:	mov	w0, #0x9                   	// #9
    e3e4:	str	w0, [sp, #268]
    e3e8:	b	e3f4 <lzma_block_buffer_decode@@XZ_5.0+0x194>
    e3ec:	mov	w0, #0xa                   	// #10
    e3f0:	str	w0, [sp, #268]
    e3f4:	ldr	x0, [sp, #64]
    e3f8:	ldr	x1, [sp, #256]
    e3fc:	str	x1, [x0]
    e400:	ldr	x0, [sp, #40]
    e404:	ldr	x1, [sp, #248]
    e408:	str	x1, [x0]
    e40c:	add	x0, sp, #0xb0
    e410:	ldr	x1, [sp, #80]
    e414:	bl	3a48 <lzma_version_string@@XZ_5.0+0x358>
    e418:	ldr	w0, [sp, #268]
    e41c:	ldp	x29, x30, [sp, #16]
    e420:	add	sp, sp, #0x110
    e424:	ret
    e428:	sub	sp, sp, #0x20
    e42c:	str	x0, [sp, #24]
    e430:	str	x1, [sp, #16]
    e434:	str	x2, [sp, #8]
    e438:	ldr	x0, [sp, #8]
    e43c:	cmp	x0, #0x0
    e440:	b.ge	e44c <lzma_block_buffer_decode@@XZ_5.0+0x1ec>  // b.tcont
    e444:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
    e448:	str	x0, [sp, #8]
    e44c:	ldr	x0, [sp, #24]
    e450:	ldr	x0, [x0]
    e454:	ldr	x1, [sp, #8]
    e458:	cmp	x1, x0
    e45c:	b.cc	e47c <lzma_block_buffer_decode@@XZ_5.0+0x21c>  // b.lo, b.ul, b.last
    e460:	ldr	x0, [sp, #24]
    e464:	ldr	x0, [x0]
    e468:	ldr	x1, [sp, #8]
    e46c:	sub	x0, x1, x0
    e470:	ldr	x1, [sp, #16]
    e474:	cmp	x1, x0
    e478:	b.ls	e484 <lzma_block_buffer_decode@@XZ_5.0+0x224>  // b.plast
    e47c:	mov	w0, #0x1                   	// #1
    e480:	b	e4a0 <lzma_block_buffer_decode@@XZ_5.0+0x240>
    e484:	ldr	x0, [sp, #24]
    e488:	ldr	x1, [x0]
    e48c:	ldr	x0, [sp, #16]
    e490:	add	x1, x1, x0
    e494:	ldr	x0, [sp, #24]
    e498:	str	x1, [x0]
    e49c:	mov	w0, #0x0                   	// #0
    e4a0:	add	sp, sp, #0x20
    e4a4:	ret
    e4a8:	sub	sp, sp, #0x10
    e4ac:	str	x0, [sp, #8]
    e4b0:	str	x1, [sp]
    e4b4:	ldr	x0, [sp]
    e4b8:	cmn	x0, #0x1
    e4bc:	b.eq	e4d0 <lzma_block_buffer_decode@@XZ_5.0+0x270>  // b.none
    e4c0:	ldr	x1, [sp]
    e4c4:	ldr	x0, [sp, #8]
    e4c8:	cmp	x1, x0
    e4cc:	b.ne	e4d8 <lzma_block_buffer_decode@@XZ_5.0+0x278>  // b.any
    e4d0:	mov	w0, #0x1                   	// #1
    e4d4:	b	e4dc <lzma_block_buffer_decode@@XZ_5.0+0x27c>
    e4d8:	mov	w0, #0x0                   	// #0
    e4dc:	and	w0, w0, #0x1
    e4e0:	and	w0, w0, #0xff
    e4e4:	add	sp, sp, #0x10
    e4e8:	ret
    e4ec:	sub	sp, sp, #0xa0
    e4f0:	stp	x29, x30, [sp, #16]
    e4f4:	add	x29, sp, #0x10
    e4f8:	str	x0, [sp, #88]
    e4fc:	str	x1, [sp, #80]
    e500:	str	x2, [sp, #72]
    e504:	str	x3, [sp, #64]
    e508:	str	x4, [sp, #56]
    e50c:	str	x5, [sp, #48]
    e510:	str	x6, [sp, #40]
    e514:	str	x7, [sp, #32]
    e518:	ldr	x0, [sp, #88]
    e51c:	str	x0, [sp, #152]
    e520:	ldr	x0, [sp, #152]
    e524:	ldr	w0, [x0]
    e528:	cmp	w0, #0x2
    e52c:	b.eq	e80c <lzma_block_buffer_decode@@XZ_5.0+0x5ac>  // b.none
    e530:	cmp	w0, #0x2
    e534:	b.hi	e8e0 <lzma_block_buffer_decode@@XZ_5.0+0x680>  // b.pmore
    e538:	cmp	w0, #0x0
    e53c:	b.eq	e54c <lzma_block_buffer_decode@@XZ_5.0+0x2ec>  // b.none
    e540:	cmp	w0, #0x1
    e544:	b.eq	e798 <lzma_block_buffer_decode@@XZ_5.0+0x538>  // b.none
    e548:	b	e8e0 <lzma_block_buffer_decode@@XZ_5.0+0x680>
    e54c:	ldr	x0, [sp, #64]
    e550:	ldr	x0, [x0]
    e554:	str	x0, [sp, #144]
    e558:	ldr	x0, [sp, #40]
    e55c:	ldr	x0, [x0]
    e560:	str	x0, [sp, #136]
    e564:	ldr	x0, [sp, #152]
    e568:	ldr	x8, [x0, #32]
    e56c:	ldr	x0, [sp, #152]
    e570:	ldr	x9, [x0, #8]
    e574:	ldr	w0, [sp, #160]
    e578:	str	w0, [sp]
    e57c:	ldr	x7, [sp, #32]
    e580:	ldr	x6, [sp, #40]
    e584:	ldr	x5, [sp, #48]
    e588:	ldr	x4, [sp, #56]
    e58c:	ldr	x3, [sp, #64]
    e590:	ldr	x2, [sp, #72]
    e594:	ldr	x1, [sp, #80]
    e598:	mov	x0, x9
    e59c:	blr	x8
    e5a0:	str	w0, [sp, #132]
    e5a4:	ldr	x0, [sp, #64]
    e5a8:	ldr	x1, [x0]
    e5ac:	ldr	x0, [sp, #144]
    e5b0:	sub	x0, x1, x0
    e5b4:	str	x0, [sp, #120]
    e5b8:	ldr	x0, [sp, #40]
    e5bc:	ldr	x1, [x0]
    e5c0:	ldr	x0, [sp, #136]
    e5c4:	sub	x0, x1, x0
    e5c8:	str	x0, [sp, #112]
    e5cc:	ldr	x0, [sp, #152]
    e5d0:	add	x3, x0, #0x58
    e5d4:	ldr	x0, [sp, #152]
    e5d8:	ldr	x0, [x0, #104]
    e5dc:	mov	x2, x0
    e5e0:	ldr	x1, [sp, #120]
    e5e4:	mov	x0, x3
    e5e8:	bl	e428 <lzma_block_buffer_decode@@XZ_5.0+0x1c8>
    e5ec:	and	w0, w0, #0xff
    e5f0:	cmp	w0, #0x0
    e5f4:	b.ne	e628 <lzma_block_buffer_decode@@XZ_5.0+0x3c8>  // b.any
    e5f8:	ldr	x0, [sp, #152]
    e5fc:	add	x3, x0, #0x60
    e600:	ldr	x0, [sp, #152]
    e604:	ldr	x0, [x0, #80]
    e608:	ldr	x0, [x0, #24]
    e60c:	mov	x2, x0
    e610:	ldr	x1, [sp, #112]
    e614:	mov	x0, x3
    e618:	bl	e428 <lzma_block_buffer_decode@@XZ_5.0+0x1c8>
    e61c:	and	w0, w0, #0xff
    e620:	cmp	w0, #0x0
    e624:	b.eq	e630 <lzma_block_buffer_decode@@XZ_5.0+0x3d0>  // b.none
    e628:	mov	w0, #0x9                   	// #9
    e62c:	b	e8e4 <lzma_block_buffer_decode@@XZ_5.0+0x684>
    e630:	ldr	x0, [sp, #152]
    e634:	ldrb	w0, [x0, #224]
    e638:	eor	w0, w0, #0x1
    e63c:	and	w0, w0, #0xff
    e640:	cmp	w0, #0x0
    e644:	b.eq	e67c <lzma_block_buffer_decode@@XZ_5.0+0x41c>  // b.none
    e648:	ldr	x0, [sp, #152]
    e64c:	add	x4, x0, #0x78
    e650:	ldr	x0, [sp, #152]
    e654:	ldr	x0, [x0, #80]
    e658:	ldr	w5, [x0, #8]
    e65c:	ldr	x1, [sp, #48]
    e660:	ldr	x0, [sp, #136]
    e664:	add	x0, x1, x0
    e668:	ldr	x3, [sp, #112]
    e66c:	mov	x2, x0
    e670:	mov	w1, w5
    e674:	mov	x0, x4
    e678:	bl	11a78 <lzma_check_size@@XZ_5.0+0xcc>
    e67c:	ldr	w0, [sp, #132]
    e680:	cmp	w0, #0x1
    e684:	b.eq	e690 <lzma_block_buffer_decode@@XZ_5.0+0x430>  // b.none
    e688:	ldr	w0, [sp, #132]
    e68c:	b	e8e4 <lzma_block_buffer_decode@@XZ_5.0+0x684>
    e690:	ldr	x0, [sp, #152]
    e694:	ldr	x2, [x0, #88]
    e698:	ldr	x0, [sp, #152]
    e69c:	ldr	x0, [x0, #80]
    e6a0:	ldr	x0, [x0, #16]
    e6a4:	mov	x1, x0
    e6a8:	mov	x0, x2
    e6ac:	bl	e4a8 <lzma_block_buffer_decode@@XZ_5.0+0x248>
    e6b0:	and	w0, w0, #0xff
    e6b4:	eor	w0, w0, #0x1
    e6b8:	and	w0, w0, #0xff
    e6bc:	cmp	w0, #0x0
    e6c0:	b.ne	e6f8 <lzma_block_buffer_decode@@XZ_5.0+0x498>  // b.any
    e6c4:	ldr	x0, [sp, #152]
    e6c8:	ldr	x2, [x0, #96]
    e6cc:	ldr	x0, [sp, #152]
    e6d0:	ldr	x0, [x0, #80]
    e6d4:	ldr	x0, [x0, #24]
    e6d8:	mov	x1, x0
    e6dc:	mov	x0, x2
    e6e0:	bl	e4a8 <lzma_block_buffer_decode@@XZ_5.0+0x248>
    e6e4:	and	w0, w0, #0xff
    e6e8:	eor	w0, w0, #0x1
    e6ec:	and	w0, w0, #0xff
    e6f0:	cmp	w0, #0x0
    e6f4:	b.eq	e700 <lzma_block_buffer_decode@@XZ_5.0+0x4a0>  // b.none
    e6f8:	mov	w0, #0x9                   	// #9
    e6fc:	b	e8e4 <lzma_block_buffer_decode@@XZ_5.0+0x684>
    e700:	ldr	x0, [sp, #152]
    e704:	ldr	x0, [x0, #80]
    e708:	ldr	x1, [sp, #152]
    e70c:	ldr	x1, [x1, #88]
    e710:	str	x1, [x0, #16]
    e714:	ldr	x0, [sp, #152]
    e718:	ldr	x0, [x0, #80]
    e71c:	ldr	x1, [sp, #152]
    e720:	ldr	x1, [x1, #96]
    e724:	str	x1, [x0, #24]
    e728:	ldr	x0, [sp, #152]
    e72c:	mov	w1, #0x1                   	// #1
    e730:	str	w1, [x0]
    e734:	b	e798 <lzma_block_buffer_decode@@XZ_5.0+0x538>
    e738:	ldr	x0, [sp, #64]
    e73c:	ldr	x0, [x0]
    e740:	ldr	x1, [sp, #56]
    e744:	cmp	x1, x0
    e748:	b.hi	e754 <lzma_block_buffer_decode@@XZ_5.0+0x4f4>  // b.pmore
    e74c:	mov	w0, #0x0                   	// #0
    e750:	b	e8e4 <lzma_block_buffer_decode@@XZ_5.0+0x684>
    e754:	ldr	x0, [sp, #152]
    e758:	ldr	x0, [x0, #88]
    e75c:	add	x1, x0, #0x1
    e760:	ldr	x0, [sp, #152]
    e764:	str	x1, [x0, #88]
    e768:	ldr	x0, [sp, #64]
    e76c:	ldr	x0, [x0]
    e770:	add	x2, x0, #0x1
    e774:	ldr	x1, [sp, #64]
    e778:	str	x2, [x1]
    e77c:	ldr	x1, [sp, #72]
    e780:	add	x0, x1, x0
    e784:	ldrb	w0, [x0]
    e788:	cmp	w0, #0x0
    e78c:	b.eq	e798 <lzma_block_buffer_decode@@XZ_5.0+0x538>  // b.none
    e790:	mov	w0, #0x9                   	// #9
    e794:	b	e8e4 <lzma_block_buffer_decode@@XZ_5.0+0x684>
    e798:	ldr	x0, [sp, #152]
    e79c:	ldr	x0, [x0, #88]
    e7a0:	and	x0, x0, #0x3
    e7a4:	cmp	x0, #0x0
    e7a8:	b.ne	e738 <lzma_block_buffer_decode@@XZ_5.0+0x4d8>  // b.any
    e7ac:	ldr	x0, [sp, #152]
    e7b0:	ldr	x0, [x0, #80]
    e7b4:	ldr	w0, [x0, #8]
    e7b8:	cmp	w0, #0x0
    e7bc:	b.ne	e7c8 <lzma_block_buffer_decode@@XZ_5.0+0x568>  // b.any
    e7c0:	mov	w0, #0x1                   	// #1
    e7c4:	b	e8e4 <lzma_block_buffer_decode@@XZ_5.0+0x684>
    e7c8:	ldr	x0, [sp, #152]
    e7cc:	ldrb	w0, [x0, #224]
    e7d0:	eor	w0, w0, #0x1
    e7d4:	and	w0, w0, #0xff
    e7d8:	cmp	w0, #0x0
    e7dc:	b.eq	e800 <lzma_block_buffer_decode@@XZ_5.0+0x5a0>  // b.none
    e7e0:	ldr	x0, [sp, #152]
    e7e4:	add	x2, x0, #0x78
    e7e8:	ldr	x0, [sp, #152]
    e7ec:	ldr	x0, [x0, #80]
    e7f0:	ldr	w0, [x0, #8]
    e7f4:	mov	w1, w0
    e7f8:	mov	x0, x2
    e7fc:	bl	11b38 <lzma_check_size@@XZ_5.0+0x18c>
    e800:	ldr	x0, [sp, #152]
    e804:	mov	w1, #0x2                   	// #2
    e808:	str	w1, [x0]
    e80c:	ldr	x0, [sp, #152]
    e810:	ldr	x0, [x0, #80]
    e814:	ldr	w0, [x0, #8]
    e818:	bl	3270 <lzma_check_size@plt>
    e81c:	mov	w0, w0
    e820:	str	x0, [sp, #104]
    e824:	ldr	x0, [sp, #152]
    e828:	ldr	x0, [x0, #80]
    e82c:	add	x1, x0, #0x28
    e830:	ldr	x0, [sp, #152]
    e834:	add	x0, x0, #0x70
    e838:	ldr	x5, [sp, #104]
    e83c:	mov	x4, x0
    e840:	mov	x3, x1
    e844:	ldr	x2, [sp, #56]
    e848:	ldr	x1, [sp, #64]
    e84c:	ldr	x0, [sp, #72]
    e850:	bl	3870 <lzma_version_string@@XZ_5.0+0x180>
    e854:	ldr	x0, [sp, #152]
    e858:	ldr	x0, [x0, #112]
    e85c:	ldr	x1, [sp, #104]
    e860:	cmp	x1, x0
    e864:	b.ls	e870 <lzma_block_buffer_decode@@XZ_5.0+0x610>  // b.plast
    e868:	mov	w0, #0x0                   	// #0
    e86c:	b	e8e4 <lzma_block_buffer_decode@@XZ_5.0+0x684>
    e870:	ldr	x0, [sp, #152]
    e874:	ldrb	w0, [x0, #224]
    e878:	eor	w0, w0, #0x1
    e87c:	and	w0, w0, #0xff
    e880:	cmp	w0, #0x0
    e884:	b.eq	e8d8 <lzma_block_buffer_decode@@XZ_5.0+0x678>  // b.none
    e888:	ldr	x0, [sp, #152]
    e88c:	ldr	x0, [x0, #80]
    e890:	ldr	w0, [x0, #8]
    e894:	bl	30e0 <lzma_check_is_supported@plt>
    e898:	and	w0, w0, #0xff
    e89c:	cmp	w0, #0x0
    e8a0:	b.eq	e8d8 <lzma_block_buffer_decode@@XZ_5.0+0x678>  // b.none
    e8a4:	ldr	x0, [sp, #152]
    e8a8:	ldr	x0, [x0, #80]
    e8ac:	add	x3, x0, #0x28
    e8b0:	ldr	x0, [sp, #152]
    e8b4:	add	x0, x0, #0x78
    e8b8:	ldr	x2, [sp, #104]
    e8bc:	mov	x1, x0
    e8c0:	mov	x0, x3
    e8c4:	bl	3330 <memcmp@plt>
    e8c8:	cmp	w0, #0x0
    e8cc:	b.eq	e8d8 <lzma_block_buffer_decode@@XZ_5.0+0x678>  // b.none
    e8d0:	mov	w0, #0x9                   	// #9
    e8d4:	b	e8e4 <lzma_block_buffer_decode@@XZ_5.0+0x684>
    e8d8:	mov	w0, #0x1                   	// #1
    e8dc:	b	e8e4 <lzma_block_buffer_decode@@XZ_5.0+0x684>
    e8e0:	mov	w0, #0xb                   	// #11
    e8e4:	ldp	x29, x30, [sp, #16]
    e8e8:	add	sp, sp, #0xa0
    e8ec:	ret
    e8f0:	stp	x29, x30, [sp, #-48]!
    e8f4:	mov	x29, sp
    e8f8:	str	x0, [sp, #24]
    e8fc:	str	x1, [sp, #16]
    e900:	ldr	x0, [sp, #24]
    e904:	str	x0, [sp, #40]
    e908:	ldr	x0, [sp, #40]
    e90c:	add	x0, x0, #0x8
    e910:	ldr	x1, [sp, #16]
    e914:	bl	3a48 <lzma_version_string@@XZ_5.0+0x358>
    e918:	ldr	x1, [sp, #16]
    e91c:	ldr	x0, [sp, #40]
    e920:	bl	3814 <lzma_version_string@@XZ_5.0+0x124>
    e924:	nop
    e928:	ldp	x29, x30, [sp], #48
    e92c:	ret
    e930:	stp	x29, x30, [sp, #-144]!
    e934:	mov	x29, sp
    e938:	str	x19, [sp, #16]
    e93c:	str	x0, [sp, #56]
    e940:	str	x1, [sp, #48]
    e944:	str	x2, [sp, #40]
    e948:	ldr	x0, [sp, #56]
    e94c:	ldr	x1, [x0, #16]
    e950:	adrp	x0, e000 <lzma_alone_decoder@@XZ_5.0+0x3c0>
    e954:	add	x0, x0, #0x930
    e958:	cmp	x1, x0
    e95c:	b.eq	e96c <lzma_block_buffer_decode@@XZ_5.0+0x70c>  // b.none
    e960:	ldr	x1, [sp, #48]
    e964:	ldr	x0, [sp, #56]
    e968:	bl	3a48 <lzma_version_string@@XZ_5.0+0x358>
    e96c:	adrp	x0, e000 <lzma_alone_decoder@@XZ_5.0+0x3c0>
    e970:	add	x1, x0, #0x930
    e974:	ldr	x0, [sp, #56]
    e978:	str	x1, [x0, #16]
    e97c:	ldr	x0, [sp, #40]
    e980:	bl	3190 <lzma_block_unpadded_size@plt>
    e984:	cmp	x0, #0x0
    e988:	b.eq	e9ac <lzma_block_buffer_decode@@XZ_5.0+0x74c>  // b.none
    e98c:	ldr	x0, [sp, #40]
    e990:	ldr	x0, [x0, #24]
    e994:	cmp	x0, #0x0
    e998:	b.ge	e9b4 <lzma_block_buffer_decode@@XZ_5.0+0x754>  // b.tcont
    e99c:	ldr	x0, [sp, #40]
    e9a0:	ldr	x0, [x0, #24]
    e9a4:	cmn	x0, #0x1
    e9a8:	b.eq	e9b4 <lzma_block_buffer_decode@@XZ_5.0+0x754>  // b.none
    e9ac:	mov	w0, #0xb                   	// #11
    e9b0:	b	eb50 <lzma_block_buffer_decode@@XZ_5.0+0x8f0>
    e9b4:	ldr	x0, [sp, #56]
    e9b8:	ldr	x0, [x0]
    e9bc:	str	x0, [sp, #136]
    e9c0:	ldr	x0, [sp, #136]
    e9c4:	cmp	x0, #0x0
    e9c8:	b.ne	ea68 <lzma_block_buffer_decode@@XZ_5.0+0x808>  // b.any
    e9cc:	ldr	x1, [sp, #48]
    e9d0:	mov	x0, #0xe8                  	// #232
    e9d4:	bl	36fc <lzma_version_string@@XZ_5.0+0xc>
    e9d8:	str	x0, [sp, #136]
    e9dc:	ldr	x0, [sp, #136]
    e9e0:	cmp	x0, #0x0
    e9e4:	b.ne	e9f0 <lzma_block_buffer_decode@@XZ_5.0+0x790>  // b.any
    e9e8:	mov	w0, #0x5                   	// #5
    e9ec:	b	eb50 <lzma_block_buffer_decode@@XZ_5.0+0x8f0>
    e9f0:	ldr	x0, [sp, #56]
    e9f4:	ldr	x1, [sp, #136]
    e9f8:	str	x1, [x0]
    e9fc:	ldr	x0, [sp, #56]
    ea00:	adrp	x1, e000 <lzma_alone_decoder@@XZ_5.0+0x3c0>
    ea04:	add	x1, x1, #0x4ec
    ea08:	str	x1, [x0, #24]
    ea0c:	ldr	x0, [sp, #56]
    ea10:	adrp	x1, e000 <lzma_alone_decoder@@XZ_5.0+0x3c0>
    ea14:	add	x1, x1, #0x8f0
    ea18:	str	x1, [x0, #32]
    ea1c:	ldr	x0, [sp, #136]
    ea20:	str	xzr, [x0, #8]
    ea24:	ldr	x0, [sp, #136]
    ea28:	mov	x1, #0xffffffffffffffff    	// #-1
    ea2c:	str	x1, [x0, #16]
    ea30:	ldr	x0, [sp, #136]
    ea34:	str	xzr, [x0, #24]
    ea38:	ldr	x0, [sp, #136]
    ea3c:	str	xzr, [x0, #32]
    ea40:	ldr	x0, [sp, #136]
    ea44:	str	xzr, [x0, #40]
    ea48:	ldr	x0, [sp, #136]
    ea4c:	str	xzr, [x0, #48]
    ea50:	ldr	x0, [sp, #136]
    ea54:	str	xzr, [x0, #56]
    ea58:	ldr	x0, [sp, #136]
    ea5c:	str	xzr, [x0, #64]
    ea60:	ldr	x0, [sp, #136]
    ea64:	str	xzr, [x0, #72]
    ea68:	ldr	x0, [sp, #136]
    ea6c:	str	wzr, [x0]
    ea70:	ldr	x0, [sp, #136]
    ea74:	ldr	x1, [sp, #40]
    ea78:	str	x1, [x0, #80]
    ea7c:	ldr	x0, [sp, #136]
    ea80:	str	xzr, [x0, #88]
    ea84:	ldr	x0, [sp, #136]
    ea88:	str	xzr, [x0, #96]
    ea8c:	ldr	x0, [sp, #40]
    ea90:	ldr	x0, [x0, #16]
    ea94:	cmn	x0, #0x1
    ea98:	b.ne	eac8 <lzma_block_buffer_decode@@XZ_5.0+0x868>  // b.any
    ea9c:	ldr	x0, [sp, #40]
    eaa0:	ldr	w0, [x0, #4]
    eaa4:	mov	w19, w0
    eaa8:	ldr	x0, [sp, #40]
    eaac:	ldr	w0, [x0, #8]
    eab0:	bl	3270 <lzma_check_size@plt>
    eab4:	mov	w0, w0
    eab8:	add	x0, x19, x0
    eabc:	mov	x1, #0x7ffffffffffffffc    	// #9223372036854775804
    eac0:	sub	x0, x1, x0
    eac4:	b	ead0 <lzma_block_buffer_decode@@XZ_5.0+0x870>
    eac8:	ldr	x0, [sp, #40]
    eacc:	ldr	x0, [x0, #16]
    ead0:	ldr	x1, [sp, #136]
    ead4:	str	x0, [x1, #104]
    ead8:	ldr	x0, [sp, #136]
    eadc:	str	xzr, [x0, #112]
    eae0:	ldr	x0, [sp, #136]
    eae4:	add	x2, x0, #0x78
    eae8:	ldr	x0, [sp, #40]
    eaec:	ldr	w0, [x0, #8]
    eaf0:	mov	w1, w0
    eaf4:	mov	x0, x2
    eaf8:	bl	119e0 <lzma_check_size@@XZ_5.0+0x34>
    eafc:	ldr	x0, [sp, #40]
    eb00:	ldr	w0, [x0]
    eb04:	cmp	w0, #0x0
    eb08:	b.eq	eb24 <lzma_block_buffer_decode@@XZ_5.0+0x8c4>  // b.none
    eb0c:	ldr	x0, [sp, #40]
    eb10:	ldrb	w0, [x0, #200]
    eb14:	cmp	w0, #0x0
    eb18:	b.eq	eb24 <lzma_block_buffer_decode@@XZ_5.0+0x8c4>  // b.none
    eb1c:	mov	w1, #0x1                   	// #1
    eb20:	b	eb28 <lzma_block_buffer_decode@@XZ_5.0+0x8c8>
    eb24:	mov	w1, #0x0                   	// #0
    eb28:	ldr	x0, [sp, #136]
    eb2c:	strb	w1, [x0, #224]
    eb30:	ldr	x0, [sp, #136]
    eb34:	add	x3, x0, #0x8
    eb38:	ldr	x0, [sp, #40]
    eb3c:	ldr	x0, [x0, #32]
    eb40:	mov	x2, x0
    eb44:	ldr	x1, [sp, #48]
    eb48:	mov	x0, x3
    eb4c:	bl	f2e4 <lzma_filter_decoder_is_supported@@XZ_5.0+0x28>
    eb50:	ldr	x19, [sp, #16]
    eb54:	ldp	x29, x30, [sp], #144
    eb58:	ret

000000000000eb5c <lzma_block_decoder@@XZ_5.0>:
    eb5c:	stp	x29, x30, [sp, #-48]!
    eb60:	mov	x29, sp
    eb64:	str	x0, [sp, #24]
    eb68:	str	x1, [sp, #16]
    eb6c:	ldr	x0, [sp, #24]
    eb70:	bl	3b00 <lzma_version_string@@XZ_5.0+0x410>
    eb74:	str	w0, [sp, #44]
    eb78:	ldr	w0, [sp, #44]
    eb7c:	cmp	w0, #0x0
    eb80:	b.eq	eb8c <lzma_block_decoder@@XZ_5.0+0x30>  // b.none
    eb84:	ldr	w0, [sp, #44]
    eb88:	b	ebf4 <lzma_block_decoder@@XZ_5.0+0x98>
    eb8c:	ldr	x0, [sp, #24]
    eb90:	ldr	x0, [x0, #56]
    eb94:	mov	x3, x0
    eb98:	ldr	x0, [sp, #24]
    eb9c:	ldr	x0, [x0, #48]
    eba0:	ldr	x2, [sp, #16]
    eba4:	mov	x1, x0
    eba8:	mov	x0, x3
    ebac:	bl	e930 <lzma_block_buffer_decode@@XZ_5.0+0x6d0>
    ebb0:	str	w0, [sp, #40]
    ebb4:	ldr	w0, [sp, #40]
    ebb8:	cmp	w0, #0x0
    ebbc:	b.eq	ebd0 <lzma_block_decoder@@XZ_5.0+0x74>  // b.none
    ebc0:	ldr	x0, [sp, #24]
    ebc4:	bl	3320 <lzma_end@plt>
    ebc8:	ldr	w0, [sp, #40]
    ebcc:	b	ebf4 <lzma_block_decoder@@XZ_5.0+0x98>
    ebd0:	ldr	x0, [sp, #24]
    ebd4:	ldr	x0, [x0, #56]
    ebd8:	mov	w1, #0x1                   	// #1
    ebdc:	strb	w1, [x0, #88]
    ebe0:	ldr	x0, [sp, #24]
    ebe4:	ldr	x0, [x0, #56]
    ebe8:	mov	w1, #0x1                   	// #1
    ebec:	strb	w1, [x0, #91]
    ebf0:	mov	w0, #0x0                   	// #0
    ebf4:	ldp	x29, x30, [sp], #48
    ebf8:	ret
    ebfc:	sub	sp, sp, #0x20
    ec00:	str	x0, [sp, #8]
    ec04:	ldr	x0, [sp, #8]
    ec08:	ldrb	w0, [x0]
    ec0c:	str	w0, [sp, #28]
    ec10:	ldr	x0, [sp, #8]
    ec14:	add	x0, x0, #0x1
    ec18:	ldrb	w0, [x0]
    ec1c:	lsl	w0, w0, #8
    ec20:	ldr	w1, [sp, #28]
    ec24:	orr	w0, w1, w0
    ec28:	str	w0, [sp, #28]
    ec2c:	ldr	x0, [sp, #8]
    ec30:	add	x0, x0, #0x2
    ec34:	ldrb	w0, [x0]
    ec38:	lsl	w0, w0, #16
    ec3c:	ldr	w1, [sp, #28]
    ec40:	orr	w0, w1, w0
    ec44:	str	w0, [sp, #28]
    ec48:	ldr	x0, [sp, #8]
    ec4c:	add	x0, x0, #0x3
    ec50:	ldrb	w0, [x0]
    ec54:	lsl	w0, w0, #24
    ec58:	ldr	w1, [sp, #28]
    ec5c:	orr	w0, w1, w0
    ec60:	str	w0, [sp, #28]
    ec64:	ldr	w0, [sp, #28]
    ec68:	add	sp, sp, #0x20
    ec6c:	ret
    ec70:	stp	x29, x30, [sp, #-48]!
    ec74:	mov	x29, sp
    ec78:	str	x0, [sp, #24]
    ec7c:	str	x1, [sp, #16]
    ec80:	str	xzr, [sp, #40]
    ec84:	b	ece8 <lzma_block_decoder@@XZ_5.0+0x18c>
    ec88:	ldr	x0, [sp, #24]
    ec8c:	ldr	x1, [x0, #32]
    ec90:	ldr	x0, [sp, #40]
    ec94:	lsl	x0, x0, #4
    ec98:	add	x0, x1, x0
    ec9c:	ldr	x0, [x0, #8]
    eca0:	ldr	x1, [sp, #16]
    eca4:	bl	3814 <lzma_version_string@@XZ_5.0+0x124>
    eca8:	ldr	x0, [sp, #24]
    ecac:	ldr	x1, [x0, #32]
    ecb0:	ldr	x0, [sp, #40]
    ecb4:	lsl	x0, x0, #4
    ecb8:	add	x0, x1, x0
    ecbc:	mov	x1, #0xffffffffffffffff    	// #-1
    ecc0:	str	x1, [x0]
    ecc4:	ldr	x0, [sp, #24]
    ecc8:	ldr	x1, [x0, #32]
    eccc:	ldr	x0, [sp, #40]
    ecd0:	lsl	x0, x0, #4
    ecd4:	add	x0, x1, x0
    ecd8:	str	xzr, [x0, #8]
    ecdc:	ldr	x0, [sp, #40]
    ece0:	add	x0, x0, #0x1
    ece4:	str	x0, [sp, #40]
    ece8:	ldr	x0, [sp, #40]
    ecec:	cmp	x0, #0x3
    ecf0:	b.ls	ec88 <lzma_block_decoder@@XZ_5.0+0x12c>  // b.plast
    ecf4:	nop
    ecf8:	ldp	x29, x30, [sp], #48
    ecfc:	ret

000000000000ed00 <lzma_block_header_decode@@XZ_5.0>:
    ed00:	stp	x29, x30, [sp, #-128]!
    ed04:	mov	x29, sp
    ed08:	str	x19, [sp, #16]
    ed0c:	str	x0, [sp, #56]
    ed10:	str	x1, [sp, #48]
    ed14:	str	x2, [sp, #40]
    ed18:	str	xzr, [sp, #120]
    ed1c:	b	ed60 <lzma_block_header_decode@@XZ_5.0+0x60>
    ed20:	ldr	x0, [sp, #56]
    ed24:	ldr	x1, [x0, #32]
    ed28:	ldr	x0, [sp, #120]
    ed2c:	lsl	x0, x0, #4
    ed30:	add	x0, x1, x0
    ed34:	mov	x1, #0xffffffffffffffff    	// #-1
    ed38:	str	x1, [x0]
    ed3c:	ldr	x0, [sp, #56]
    ed40:	ldr	x1, [x0, #32]
    ed44:	ldr	x0, [sp, #120]
    ed48:	lsl	x0, x0, #4
    ed4c:	add	x0, x1, x0
    ed50:	str	xzr, [x0, #8]
    ed54:	ldr	x0, [sp, #120]
    ed58:	add	x0, x0, #0x1
    ed5c:	str	x0, [sp, #120]
    ed60:	ldr	x0, [sp, #120]
    ed64:	cmp	x0, #0x4
    ed68:	b.ls	ed20 <lzma_block_header_decode@@XZ_5.0+0x20>  // b.plast
    ed6c:	ldr	x0, [sp, #56]
    ed70:	ldr	w0, [x0]
    ed74:	cmp	w0, #0x1
    ed78:	b.ls	ed88 <lzma_block_header_decode@@XZ_5.0+0x88>  // b.plast
    ed7c:	ldr	x0, [sp, #56]
    ed80:	mov	w1, #0x1                   	// #1
    ed84:	str	w1, [x0]
    ed88:	ldr	x0, [sp, #56]
    ed8c:	strb	wzr, [x0, #200]
    ed90:	ldr	x0, [sp, #40]
    ed94:	ldrb	w0, [x0]
    ed98:	add	w0, w0, #0x1
    ed9c:	lsl	w1, w0, #2
    eda0:	ldr	x0, [sp, #56]
    eda4:	ldr	w0, [x0, #4]
    eda8:	cmp	w1, w0
    edac:	b.ne	edc0 <lzma_block_header_decode@@XZ_5.0+0xc0>  // b.any
    edb0:	ldr	x0, [sp, #56]
    edb4:	ldr	w0, [x0, #8]
    edb8:	cmp	w0, #0xf
    edbc:	b.ls	edc8 <lzma_block_header_decode@@XZ_5.0+0xc8>  // b.plast
    edc0:	mov	w0, #0xb                   	// #11
    edc4:	b	efe4 <lzma_block_header_decode@@XZ_5.0+0x2e4>
    edc8:	ldr	x0, [sp, #56]
    edcc:	ldr	w0, [x0, #4]
    edd0:	sub	w0, w0, #0x4
    edd4:	mov	w0, w0
    edd8:	str	x0, [sp, #104]
    eddc:	mov	w2, #0x0                   	// #0
    ede0:	ldr	x1, [sp, #104]
    ede4:	ldr	x0, [sp, #40]
    ede8:	bl	31c0 <lzma_crc32@plt>
    edec:	mov	w19, w0
    edf0:	ldr	x1, [sp, #40]
    edf4:	ldr	x0, [sp, #104]
    edf8:	add	x0, x1, x0
    edfc:	bl	ebfc <lzma_block_decoder@@XZ_5.0+0xa0>
    ee00:	cmp	w19, w0
    ee04:	b.eq	ee10 <lzma_block_header_decode@@XZ_5.0+0x110>  // b.none
    ee08:	mov	w0, #0x9                   	// #9
    ee0c:	b	efe4 <lzma_block_header_decode@@XZ_5.0+0x2e4>
    ee10:	ldr	x0, [sp, #40]
    ee14:	add	x0, x0, #0x1
    ee18:	ldrb	w0, [x0]
    ee1c:	and	w0, w0, #0x3c
    ee20:	cmp	w0, #0x0
    ee24:	b.eq	ee30 <lzma_block_header_decode@@XZ_5.0+0x130>  // b.none
    ee28:	mov	w0, #0x8                   	// #8
    ee2c:	b	efe4 <lzma_block_header_decode@@XZ_5.0+0x2e4>
    ee30:	mov	x0, #0x2                   	// #2
    ee34:	str	x0, [sp, #72]
    ee38:	ldr	x0, [sp, #40]
    ee3c:	add	x0, x0, #0x1
    ee40:	ldrb	w0, [x0]
    ee44:	and	w0, w0, #0x40
    ee48:	cmp	w0, #0x0
    ee4c:	b.eq	eea0 <lzma_block_header_decode@@XZ_5.0+0x1a0>  // b.none
    ee50:	ldr	x0, [sp, #56]
    ee54:	add	x0, x0, #0x10
    ee58:	add	x1, sp, #0x48
    ee5c:	ldr	x4, [sp, #104]
    ee60:	mov	x3, x1
    ee64:	ldr	x2, [sp, #40]
    ee68:	mov	x1, #0x0                   	// #0
    ee6c:	bl	33c0 <lzma_vli_decode@plt>
    ee70:	str	w0, [sp, #100]
    ee74:	ldr	w0, [sp, #100]
    ee78:	cmp	w0, #0x0
    ee7c:	b.eq	ee88 <lzma_block_header_decode@@XZ_5.0+0x188>  // b.none
    ee80:	ldr	w0, [sp, #100]
    ee84:	b	efe4 <lzma_block_header_decode@@XZ_5.0+0x2e4>
    ee88:	ldr	x0, [sp, #56]
    ee8c:	bl	3190 <lzma_block_unpadded_size@plt>
    ee90:	cmp	x0, #0x0
    ee94:	b.ne	eeac <lzma_block_header_decode@@XZ_5.0+0x1ac>  // b.any
    ee98:	mov	w0, #0x9                   	// #9
    ee9c:	b	efe4 <lzma_block_header_decode@@XZ_5.0+0x2e4>
    eea0:	ldr	x0, [sp, #56]
    eea4:	mov	x1, #0xffffffffffffffff    	// #-1
    eea8:	str	x1, [x0, #16]
    eeac:	ldr	x0, [sp, #40]
    eeb0:	add	x0, x0, #0x1
    eeb4:	ldrb	w0, [x0]
    eeb8:	sxtb	w0, w0
    eebc:	cmp	w0, #0x0
    eec0:	b.ge	eefc <lzma_block_header_decode@@XZ_5.0+0x1fc>  // b.tcont
    eec4:	ldr	x0, [sp, #56]
    eec8:	add	x0, x0, #0x18
    eecc:	add	x1, sp, #0x48
    eed0:	ldr	x4, [sp, #104]
    eed4:	mov	x3, x1
    eed8:	ldr	x2, [sp, #40]
    eedc:	mov	x1, #0x0                   	// #0
    eee0:	bl	33c0 <lzma_vli_decode@plt>
    eee4:	str	w0, [sp, #96]
    eee8:	ldr	w0, [sp, #96]
    eeec:	cmp	w0, #0x0
    eef0:	b.eq	ef08 <lzma_block_header_decode@@XZ_5.0+0x208>  // b.none
    eef4:	ldr	w0, [sp, #96]
    eef8:	b	efe4 <lzma_block_header_decode@@XZ_5.0+0x2e4>
    eefc:	ldr	x0, [sp, #56]
    ef00:	mov	x1, #0xffffffffffffffff    	// #-1
    ef04:	str	x1, [x0, #24]
    ef08:	ldr	x0, [sp, #40]
    ef0c:	add	x0, x0, #0x1
    ef10:	ldrb	w0, [x0]
    ef14:	and	w0, w0, #0x3
    ef18:	add	w0, w0, #0x1
    ef1c:	sxtw	x0, w0
    ef20:	str	x0, [sp, #88]
    ef24:	str	xzr, [sp, #112]
    ef28:	b	ef88 <lzma_block_header_decode@@XZ_5.0+0x288>
    ef2c:	ldr	x0, [sp, #56]
    ef30:	ldr	x1, [x0, #32]
    ef34:	ldr	x0, [sp, #112]
    ef38:	lsl	x0, x0, #4
    ef3c:	add	x0, x1, x0
    ef40:	add	x1, sp, #0x48
    ef44:	ldr	x4, [sp, #104]
    ef48:	mov	x3, x1
    ef4c:	ldr	x2, [sp, #40]
    ef50:	ldr	x1, [sp, #48]
    ef54:	bl	3500 <lzma_filter_flags_decode@plt>
    ef58:	str	w0, [sp, #84]
    ef5c:	ldr	w0, [sp, #84]
    ef60:	cmp	w0, #0x0
    ef64:	b.eq	ef7c <lzma_block_header_decode@@XZ_5.0+0x27c>  // b.none
    ef68:	ldr	x1, [sp, #48]
    ef6c:	ldr	x0, [sp, #56]
    ef70:	bl	ec70 <lzma_block_decoder@@XZ_5.0+0x114>
    ef74:	ldr	w0, [sp, #84]
    ef78:	b	efe4 <lzma_block_header_decode@@XZ_5.0+0x2e4>
    ef7c:	ldr	x0, [sp, #112]
    ef80:	add	x0, x0, #0x1
    ef84:	str	x0, [sp, #112]
    ef88:	ldr	x1, [sp, #112]
    ef8c:	ldr	x0, [sp, #88]
    ef90:	cmp	x1, x0
    ef94:	b.cc	ef2c <lzma_block_header_decode@@XZ_5.0+0x22c>  // b.lo, b.ul, b.last
    ef98:	b	efd0 <lzma_block_header_decode@@XZ_5.0+0x2d0>
    ef9c:	ldr	x0, [sp, #72]
    efa0:	add	x1, x0, #0x1
    efa4:	str	x1, [sp, #72]
    efa8:	ldr	x1, [sp, #40]
    efac:	add	x0, x1, x0
    efb0:	ldrb	w0, [x0]
    efb4:	cmp	w0, #0x0
    efb8:	b.eq	efd0 <lzma_block_header_decode@@XZ_5.0+0x2d0>  // b.none
    efbc:	ldr	x1, [sp, #48]
    efc0:	ldr	x0, [sp, #56]
    efc4:	bl	ec70 <lzma_block_decoder@@XZ_5.0+0x114>
    efc8:	mov	w0, #0x8                   	// #8
    efcc:	b	efe4 <lzma_block_header_decode@@XZ_5.0+0x2e4>
    efd0:	ldr	x0, [sp, #72]
    efd4:	ldr	x1, [sp, #104]
    efd8:	cmp	x1, x0
    efdc:	b.hi	ef9c <lzma_block_header_decode@@XZ_5.0+0x29c>  // b.pmore
    efe0:	mov	w0, #0x0                   	// #0
    efe4:	ldr	x19, [sp, #16]
    efe8:	ldp	x29, x30, [sp], #128
    efec:	ret

000000000000eff0 <lzma_easy_decoder_memusage@@XZ_5.0>:
    eff0:	stp	x29, x30, [sp, #-224]!
    eff4:	mov	x29, sp
    eff8:	str	w0, [sp, #28]
    effc:	add	x0, sp, #0x20
    f000:	ldr	w1, [sp, #28]
    f004:	bl	46b0 <lzma_block_total_size@@XZ_5.0+0x3c>
    f008:	and	w0, w0, #0xff
    f00c:	cmp	w0, #0x0
    f010:	b.eq	f01c <lzma_easy_decoder_memusage@@XZ_5.0+0x2c>  // b.none
    f014:	mov	x0, #0xffffffff            	// #4294967295
    f018:	b	f024 <lzma_easy_decoder_memusage@@XZ_5.0+0x34>
    f01c:	add	x0, sp, #0x20
    f020:	bl	32e0 <lzma_raw_decoder_memusage@plt>
    f024:	ldp	x29, x30, [sp], #224
    f028:	ret

000000000000f02c <lzma_raw_buffer_decode@@XZ_5.0>:
    f02c:	sub	sp, sp, #0x120
    f030:	stp	x29, x30, [sp, #16]
    f034:	add	x29, sp, #0x10
    f038:	str	x0, [sp, #88]
    f03c:	str	x1, [sp, #80]
    f040:	str	x2, [sp, #72]
    f044:	str	x3, [sp, #64]
    f048:	str	x4, [sp, #56]
    f04c:	str	x5, [sp, #48]
    f050:	str	x6, [sp, #40]
    f054:	str	x7, [sp, #32]
    f058:	ldr	x0, [sp, #72]
    f05c:	cmp	x0, #0x0
    f060:	b.eq	f0b0 <lzma_raw_buffer_decode@@XZ_5.0+0x84>  // b.none
    f064:	ldr	x0, [sp, #64]
    f068:	cmp	x0, #0x0
    f06c:	b.eq	f0b0 <lzma_raw_buffer_decode@@XZ_5.0+0x84>  // b.none
    f070:	ldr	x0, [sp, #64]
    f074:	ldr	x0, [x0]
    f078:	ldr	x1, [sp, #56]
    f07c:	cmp	x1, x0
    f080:	b.cc	f0b0 <lzma_raw_buffer_decode@@XZ_5.0+0x84>  // b.lo, b.ul, b.last
    f084:	ldr	x0, [sp, #48]
    f088:	cmp	x0, #0x0
    f08c:	b.eq	f0b0 <lzma_raw_buffer_decode@@XZ_5.0+0x84>  // b.none
    f090:	ldr	x0, [sp, #40]
    f094:	cmp	x0, #0x0
    f098:	b.eq	f0b0 <lzma_raw_buffer_decode@@XZ_5.0+0x84>  // b.none
    f09c:	ldr	x0, [sp, #40]
    f0a0:	ldr	x0, [x0]
    f0a4:	ldr	x1, [sp, #32]
    f0a8:	cmp	x1, x0
    f0ac:	b.cs	f0b8 <lzma_raw_buffer_decode@@XZ_5.0+0x8c>  // b.hs, b.nlast
    f0b0:	mov	w0, #0xb                   	// #11
    f0b4:	b	f240 <lzma_raw_buffer_decode@@XZ_5.0+0x214>
    f0b8:	str	xzr, [sp, #192]
    f0bc:	mov	x0, #0xffffffffffffffff    	// #-1
    f0c0:	str	x0, [sp, #200]
    f0c4:	str	xzr, [sp, #208]
    f0c8:	str	xzr, [sp, #216]
    f0cc:	str	xzr, [sp, #224]
    f0d0:	str	xzr, [sp, #232]
    f0d4:	str	xzr, [sp, #240]
    f0d8:	str	xzr, [sp, #248]
    f0dc:	str	xzr, [sp, #256]
    f0e0:	add	x0, sp, #0xc0
    f0e4:	ldr	x2, [sp, #88]
    f0e8:	ldr	x1, [sp, #80]
    f0ec:	bl	f2e4 <lzma_filter_decoder_is_supported@@XZ_5.0+0x28>
    f0f0:	str	w0, [sp, #280]
    f0f4:	ldr	w0, [sp, #280]
    f0f8:	cmp	w0, #0x0
    f0fc:	b.eq	f108 <lzma_raw_buffer_decode@@XZ_5.0+0xdc>  // b.none
    f100:	ldr	w0, [sp, #280]
    f104:	b	f240 <lzma_raw_buffer_decode@@XZ_5.0+0x214>
    f108:	ldr	x0, [sp, #64]
    f10c:	ldr	x0, [x0]
    f110:	str	x0, [sp, #272]
    f114:	ldr	x0, [sp, #40]
    f118:	ldr	x0, [x0]
    f11c:	str	x0, [sp, #264]
    f120:	ldr	x8, [sp, #216]
    f124:	ldr	x9, [sp, #192]
    f128:	mov	w0, #0x3                   	// #3
    f12c:	str	w0, [sp]
    f130:	ldr	x7, [sp, #32]
    f134:	ldr	x6, [sp, #40]
    f138:	ldr	x5, [sp, #48]
    f13c:	ldr	x4, [sp, #56]
    f140:	ldr	x3, [sp, #64]
    f144:	ldr	x2, [sp, #72]
    f148:	ldr	x1, [sp, #80]
    f14c:	mov	x0, x9
    f150:	blr	x8
    f154:	str	w0, [sp, #284]
    f158:	ldr	w0, [sp, #284]
    f15c:	cmp	w0, #0x1
    f160:	b.ne	f16c <lzma_raw_buffer_decode@@XZ_5.0+0x140>  // b.any
    f164:	str	wzr, [sp, #284]
    f168:	b	f230 <lzma_raw_buffer_decode@@XZ_5.0+0x204>
    f16c:	ldr	w0, [sp, #284]
    f170:	cmp	w0, #0x0
    f174:	b.ne	f218 <lzma_raw_buffer_decode@@XZ_5.0+0x1ec>  // b.any
    f178:	ldr	x0, [sp, #64]
    f17c:	ldr	x0, [x0]
    f180:	ldr	x1, [sp, #56]
    f184:	cmp	x1, x0
    f188:	b.eq	f198 <lzma_raw_buffer_decode@@XZ_5.0+0x16c>  // b.none
    f18c:	mov	w0, #0xa                   	// #10
    f190:	str	w0, [sp, #284]
    f194:	b	f218 <lzma_raw_buffer_decode@@XZ_5.0+0x1ec>
    f198:	ldr	x0, [sp, #40]
    f19c:	ldr	x0, [x0]
    f1a0:	ldr	x1, [sp, #32]
    f1a4:	cmp	x1, x0
    f1a8:	b.eq	f1b8 <lzma_raw_buffer_decode@@XZ_5.0+0x18c>  // b.none
    f1ac:	mov	w0, #0x9                   	// #9
    f1b0:	str	w0, [sp, #284]
    f1b4:	b	f218 <lzma_raw_buffer_decode@@XZ_5.0+0x1ec>
    f1b8:	str	xzr, [sp, #104]
    f1bc:	ldr	x8, [sp, #216]
    f1c0:	ldr	x9, [sp, #192]
    f1c4:	add	x2, sp, #0x68
    f1c8:	add	x1, sp, #0x70
    f1cc:	mov	w0, #0x3                   	// #3
    f1d0:	str	w0, [sp]
    f1d4:	mov	x7, #0x1                   	// #1
    f1d8:	mov	x6, x2
    f1dc:	mov	x5, x1
    f1e0:	ldr	x4, [sp, #56]
    f1e4:	ldr	x3, [sp, #64]
    f1e8:	ldr	x2, [sp, #72]
    f1ec:	ldr	x1, [sp, #80]
    f1f0:	mov	x0, x9
    f1f4:	blr	x8
    f1f8:	ldr	x0, [sp, #104]
    f1fc:	cmp	x0, #0x1
    f200:	b.ne	f210 <lzma_raw_buffer_decode@@XZ_5.0+0x1e4>  // b.any
    f204:	mov	w0, #0xa                   	// #10
    f208:	str	w0, [sp, #284]
    f20c:	b	f218 <lzma_raw_buffer_decode@@XZ_5.0+0x1ec>
    f210:	mov	w0, #0x9                   	// #9
    f214:	str	w0, [sp, #284]
    f218:	ldr	x0, [sp, #64]
    f21c:	ldr	x1, [sp, #272]
    f220:	str	x1, [x0]
    f224:	ldr	x0, [sp, #40]
    f228:	ldr	x1, [sp, #264]
    f22c:	str	x1, [x0]
    f230:	add	x0, sp, #0xc0
    f234:	ldr	x1, [sp, #80]
    f238:	bl	3a48 <lzma_version_string@@XZ_5.0+0x358>
    f23c:	ldr	w0, [sp, #284]
    f240:	ldp	x29, x30, [sp, #16]
    f244:	add	sp, sp, #0x120
    f248:	ret
    f24c:	sub	sp, sp, #0x20
    f250:	str	x0, [sp, #8]
    f254:	str	xzr, [sp, #24]
    f258:	b	f2a4 <lzma_raw_buffer_decode@@XZ_5.0+0x278>
    f25c:	adrp	x0, 46000 <lzma_mode_is_supported@@XZ_5.0+0x2b368>
    f260:	add	x1, x0, #0xbf8
    f264:	ldr	x0, [sp, #24]
    f268:	lsl	x0, x0, #5
    f26c:	add	x0, x1, x0
    f270:	ldr	x0, [x0]
    f274:	ldr	x1, [sp, #8]
    f278:	cmp	x1, x0
    f27c:	b.ne	f298 <lzma_raw_buffer_decode@@XZ_5.0+0x26c>  // b.any
    f280:	ldr	x0, [sp, #24]
    f284:	lsl	x1, x0, #5
    f288:	adrp	x0, 46000 <lzma_mode_is_supported@@XZ_5.0+0x2b368>
    f28c:	add	x0, x0, #0xbf8
    f290:	add	x0, x1, x0
    f294:	b	f2b4 <lzma_raw_buffer_decode@@XZ_5.0+0x288>
    f298:	ldr	x0, [sp, #24]
    f29c:	add	x0, x0, #0x1
    f2a0:	str	x0, [sp, #24]
    f2a4:	ldr	x0, [sp, #24]
    f2a8:	cmp	x0, #0x8
    f2ac:	b.ls	f25c <lzma_raw_buffer_decode@@XZ_5.0+0x230>  // b.plast
    f2b0:	mov	x0, #0x0                   	// #0
    f2b4:	add	sp, sp, #0x20
    f2b8:	ret

000000000000f2bc <lzma_filter_decoder_is_supported@@XZ_5.0>:
    f2bc:	stp	x29, x30, [sp, #-32]!
    f2c0:	mov	x29, sp
    f2c4:	str	x0, [sp, #24]
    f2c8:	ldr	x0, [sp, #24]
    f2cc:	bl	f24c <lzma_raw_buffer_decode@@XZ_5.0+0x220>
    f2d0:	cmp	x0, #0x0
    f2d4:	cset	w0, ne  // ne = any
    f2d8:	and	w0, w0, #0xff
    f2dc:	ldp	x29, x30, [sp], #32
    f2e0:	ret
    f2e4:	stp	x29, x30, [sp, #-48]!
    f2e8:	mov	x29, sp
    f2ec:	str	x0, [sp, #40]
    f2f0:	str	x1, [sp, #32]
    f2f4:	str	x2, [sp, #24]
    f2f8:	mov	w4, #0x0                   	// #0
    f2fc:	adrp	x0, f000 <lzma_easy_decoder_memusage@@XZ_5.0+0x10>
    f300:	add	x3, x0, #0x24c
    f304:	ldr	x2, [sp, #24]
    f308:	ldr	x1, [sp, #32]
    f30c:	ldr	x0, [sp, #40]
    f310:	bl	4bb4 <lzma_filters_copy@@XZ_5.0+0x49c>
    f314:	ldp	x29, x30, [sp], #48
    f318:	ret

000000000000f31c <lzma_raw_decoder@@XZ_5.0>:
    f31c:	stp	x29, x30, [sp, #-48]!
    f320:	mov	x29, sp
    f324:	str	x0, [sp, #24]
    f328:	str	x1, [sp, #16]
    f32c:	ldr	x0, [sp, #24]
    f330:	bl	3b00 <lzma_version_string@@XZ_5.0+0x410>
    f334:	str	w0, [sp, #44]
    f338:	ldr	w0, [sp, #44]
    f33c:	cmp	w0, #0x0
    f340:	b.eq	f34c <lzma_raw_decoder@@XZ_5.0+0x30>  // b.none
    f344:	ldr	w0, [sp, #44]
    f348:	b	f3b4 <lzma_raw_decoder@@XZ_5.0+0x98>
    f34c:	ldr	x0, [sp, #24]
    f350:	ldr	x0, [x0, #56]
    f354:	mov	x3, x0
    f358:	ldr	x0, [sp, #24]
    f35c:	ldr	x0, [x0, #48]
    f360:	ldr	x2, [sp, #16]
    f364:	mov	x1, x0
    f368:	mov	x0, x3
    f36c:	bl	f2e4 <lzma_filter_decoder_is_supported@@XZ_5.0+0x28>
    f370:	str	w0, [sp, #40]
    f374:	ldr	w0, [sp, #40]
    f378:	cmp	w0, #0x0
    f37c:	b.eq	f390 <lzma_raw_decoder@@XZ_5.0+0x74>  // b.none
    f380:	ldr	x0, [sp, #24]
    f384:	bl	3320 <lzma_end@plt>
    f388:	ldr	w0, [sp, #40]
    f38c:	b	f3b4 <lzma_raw_decoder@@XZ_5.0+0x98>
    f390:	ldr	x0, [sp, #24]
    f394:	ldr	x0, [x0, #56]
    f398:	mov	w1, #0x1                   	// #1
    f39c:	strb	w1, [x0, #88]
    f3a0:	ldr	x0, [sp, #24]
    f3a4:	ldr	x0, [x0, #56]
    f3a8:	mov	w1, #0x1                   	// #1
    f3ac:	strb	w1, [x0, #91]
    f3b0:	mov	w0, #0x0                   	// #0
    f3b4:	ldp	x29, x30, [sp], #48
    f3b8:	ret

000000000000f3bc <lzma_raw_decoder_memusage@@XZ_5.0>:
    f3bc:	stp	x29, x30, [sp, #-32]!
    f3c0:	mov	x29, sp
    f3c4:	str	x0, [sp, #24]
    f3c8:	ldr	x1, [sp, #24]
    f3cc:	adrp	x0, f000 <lzma_easy_decoder_memusage@@XZ_5.0+0x10>
    f3d0:	add	x0, x0, #0x24c
    f3d4:	bl	4e6c <lzma_filters_copy@@XZ_5.0+0x754>
    f3d8:	ldp	x29, x30, [sp], #32
    f3dc:	ret

000000000000f3e0 <lzma_properties_decode@@XZ_5.0>:
    f3e0:	stp	x29, x30, [sp, #-64]!
    f3e4:	mov	x29, sp
    f3e8:	str	x0, [sp, #40]
    f3ec:	str	x1, [sp, #32]
    f3f0:	str	x2, [sp, #24]
    f3f4:	str	x3, [sp, #16]
    f3f8:	ldr	x0, [sp, #40]
    f3fc:	str	xzr, [x0, #8]
    f400:	ldr	x0, [sp, #40]
    f404:	ldr	x0, [x0]
    f408:	bl	f24c <lzma_raw_buffer_decode@@XZ_5.0+0x220>
    f40c:	str	x0, [sp, #56]
    f410:	ldr	x0, [sp, #56]
    f414:	cmp	x0, #0x0
    f418:	b.ne	f424 <lzma_properties_decode@@XZ_5.0+0x44>  // b.any
    f41c:	mov	w0, #0x8                   	// #8
    f420:	b	f470 <lzma_properties_decode@@XZ_5.0+0x90>
    f424:	ldr	x0, [sp, #56]
    f428:	ldr	x0, [x0, #24]
    f42c:	cmp	x0, #0x0
    f430:	b.ne	f450 <lzma_properties_decode@@XZ_5.0+0x70>  // b.any
    f434:	ldr	x0, [sp, #16]
    f438:	cmp	x0, #0x0
    f43c:	b.ne	f448 <lzma_properties_decode@@XZ_5.0+0x68>  // b.any
    f440:	mov	w0, #0x0                   	// #0
    f444:	b	f470 <lzma_properties_decode@@XZ_5.0+0x90>
    f448:	mov	w0, #0x8                   	// #8
    f44c:	b	f470 <lzma_properties_decode@@XZ_5.0+0x90>
    f450:	ldr	x0, [sp, #56]
    f454:	ldr	x4, [x0, #24]
    f458:	ldr	x0, [sp, #40]
    f45c:	add	x0, x0, #0x8
    f460:	ldr	x3, [sp, #16]
    f464:	ldr	x2, [sp, #24]
    f468:	ldr	x1, [sp, #32]
    f46c:	blr	x4
    f470:	ldp	x29, x30, [sp], #64
    f474:	ret

000000000000f478 <lzma_filter_flags_decode@@XZ_5.0>:
    f478:	stp	x29, x30, [sp, #-96]!
    f47c:	mov	x29, sp
    f480:	str	x0, [sp, #56]
    f484:	str	x1, [sp, #48]
    f488:	str	x2, [sp, #40]
    f48c:	str	x3, [sp, #32]
    f490:	str	x4, [sp, #24]
    f494:	ldr	x0, [sp, #56]
    f498:	str	xzr, [x0, #8]
    f49c:	ldr	x0, [sp, #56]
    f4a0:	ldr	x4, [sp, #24]
    f4a4:	ldr	x3, [sp, #32]
    f4a8:	ldr	x2, [sp, #40]
    f4ac:	mov	x1, #0x0                   	// #0
    f4b0:	bl	33c0 <lzma_vli_decode@plt>
    f4b4:	str	w0, [sp, #92]
    f4b8:	ldr	w0, [sp, #92]
    f4bc:	cmp	w0, #0x0
    f4c0:	b.eq	f4cc <lzma_filter_flags_decode@@XZ_5.0+0x54>  // b.none
    f4c4:	ldr	w0, [sp, #92]
    f4c8:	b	f584 <lzma_filter_flags_decode@@XZ_5.0+0x10c>
    f4cc:	ldr	x0, [sp, #56]
    f4d0:	ldr	x1, [x0]
    f4d4:	mov	x0, #0x3fffffffffffffff    	// #4611686018427387903
    f4d8:	cmp	x1, x0
    f4dc:	b.ls	f4e8 <lzma_filter_flags_decode@@XZ_5.0+0x70>  // b.plast
    f4e0:	mov	w0, #0x9                   	// #9
    f4e4:	b	f584 <lzma_filter_flags_decode@@XZ_5.0+0x10c>
    f4e8:	add	x0, sp, #0x48
    f4ec:	ldr	x4, [sp, #24]
    f4f0:	ldr	x3, [sp, #32]
    f4f4:	ldr	x2, [sp, #40]
    f4f8:	mov	x1, #0x0                   	// #0
    f4fc:	bl	33c0 <lzma_vli_decode@plt>
    f500:	str	w0, [sp, #88]
    f504:	ldr	w0, [sp, #88]
    f508:	cmp	w0, #0x0
    f50c:	b.eq	f518 <lzma_filter_flags_decode@@XZ_5.0+0xa0>  // b.none
    f510:	ldr	w0, [sp, #88]
    f514:	b	f584 <lzma_filter_flags_decode@@XZ_5.0+0x10c>
    f518:	ldr	x0, [sp, #32]
    f51c:	ldr	x0, [x0]
    f520:	ldr	x1, [sp, #24]
    f524:	sub	x1, x1, x0
    f528:	ldr	x0, [sp, #72]
    f52c:	cmp	x1, x0
    f530:	b.cs	f53c <lzma_filter_flags_decode@@XZ_5.0+0xc4>  // b.hs, b.nlast
    f534:	mov	w0, #0x9                   	// #9
    f538:	b	f584 <lzma_filter_flags_decode@@XZ_5.0+0x10c>
    f53c:	ldr	x0, [sp, #32]
    f540:	ldr	x0, [x0]
    f544:	ldr	x1, [sp, #40]
    f548:	add	x0, x1, x0
    f54c:	ldr	x1, [sp, #72]
    f550:	mov	x3, x1
    f554:	mov	x2, x0
    f558:	ldr	x1, [sp, #48]
    f55c:	ldr	x0, [sp, #56]
    f560:	bl	3250 <lzma_properties_decode@plt>
    f564:	str	w0, [sp, #84]
    f568:	ldr	x0, [sp, #32]
    f56c:	ldr	x1, [x0]
    f570:	ldr	x0, [sp, #72]
    f574:	add	x1, x1, x0
    f578:	ldr	x0, [sp, #32]
    f57c:	str	x1, [x0]
    f580:	ldr	w0, [sp, #84]
    f584:	ldp	x29, x30, [sp], #96
    f588:	ret
    f58c:	stp	x29, x30, [sp, #-128]!
    f590:	mov	x29, sp
    f594:	str	x0, [sp, #72]
    f598:	str	x1, [sp, #64]
    f59c:	str	x2, [sp, #56]
    f5a0:	str	x3, [sp, #48]
    f5a4:	str	x4, [sp, #40]
    f5a8:	str	x5, [sp, #32]
    f5ac:	str	x6, [sp, #24]
    f5b0:	str	x7, [sp, #16]
    f5b4:	ldr	x0, [sp, #72]
    f5b8:	str	x0, [sp, #112]
    f5bc:	ldr	x0, [sp, #48]
    f5c0:	ldr	x0, [x0]
    f5c4:	str	x0, [sp, #104]
    f5c8:	str	wzr, [sp, #124]
    f5cc:	b	f9f4 <lzma_filter_flags_decode@@XZ_5.0+0x57c>
    f5d0:	ldr	x0, [sp, #112]
    f5d4:	ldr	w0, [x0]
    f5d8:	cmp	w0, #0x7
    f5dc:	b.eq	f93c <lzma_filter_flags_decode@@XZ_5.0+0x4c4>  // b.none
    f5e0:	cmp	w0, #0x7
    f5e4:	b.hi	f9ec <lzma_filter_flags_decode@@XZ_5.0+0x574>  // b.pmore
    f5e8:	cmp	w0, #0x6
    f5ec:	b.eq	f898 <lzma_filter_flags_decode@@XZ_5.0+0x420>  // b.none
    f5f0:	cmp	w0, #0x6
    f5f4:	b.hi	f9ec <lzma_filter_flags_decode@@XZ_5.0+0x574>  // b.pmore
    f5f8:	cmp	w0, #0x5
    f5fc:	b.eq	f874 <lzma_filter_flags_decode@@XZ_5.0+0x3fc>  // b.none
    f600:	cmp	w0, #0x5
    f604:	b.hi	f9ec <lzma_filter_flags_decode@@XZ_5.0+0x574>  // b.pmore
    f608:	cmp	w0, #0x4
    f60c:	b.hi	f9ec <lzma_filter_flags_decode@@XZ_5.0+0x574>  // b.pmore
    f610:	cmp	w0, #0x3
    f614:	b.cs	f744 <lzma_filter_flags_decode@@XZ_5.0+0x2cc>  // b.hs, b.nlast
    f618:	cmp	w0, #0x2
    f61c:	b.eq	f6c8 <lzma_filter_flags_decode@@XZ_5.0+0x250>  // b.none
    f620:	cmp	w0, #0x2
    f624:	b.hi	f9ec <lzma_filter_flags_decode@@XZ_5.0+0x574>  // b.pmore
    f628:	cmp	w0, #0x0
    f62c:	b.eq	f63c <lzma_filter_flags_decode@@XZ_5.0+0x1c4>  // b.none
    f630:	cmp	w0, #0x1
    f634:	b.eq	f67c <lzma_filter_flags_decode@@XZ_5.0+0x204>  // b.none
    f638:	b	f9ec <lzma_filter_flags_decode@@XZ_5.0+0x574>
    f63c:	ldr	x0, [sp, #48]
    f640:	ldr	x0, [x0]
    f644:	add	x2, x0, #0x1
    f648:	ldr	x1, [sp, #48]
    f64c:	str	x2, [x1]
    f650:	ldr	x1, [sp, #56]
    f654:	add	x0, x1, x0
    f658:	ldrb	w0, [x0]
    f65c:	cmp	w0, #0x0
    f660:	b.eq	f66c <lzma_filter_flags_decode@@XZ_5.0+0x1f4>  // b.none
    f664:	mov	w0, #0x9                   	// #9
    f668:	b	fa58 <lzma_filter_flags_decode@@XZ_5.0+0x5e0>
    f66c:	ldr	x0, [sp, #112]
    f670:	mov	w1, #0x1                   	// #1
    f674:	str	w1, [x0]
    f678:	b	f9f4 <lzma_filter_flags_decode@@XZ_5.0+0x57c>
    f67c:	ldr	x0, [sp, #112]
    f680:	add	x5, x0, #0x20
    f684:	ldr	x0, [sp, #112]
    f688:	add	x0, x0, #0x38
    f68c:	ldr	x4, [sp, #40]
    f690:	ldr	x3, [sp, #48]
    f694:	ldr	x2, [sp, #56]
    f698:	mov	x1, x0
    f69c:	mov	x0, x5
    f6a0:	bl	33c0 <lzma_vli_decode@plt>
    f6a4:	str	w0, [sp, #124]
    f6a8:	ldr	w0, [sp, #124]
    f6ac:	cmp	w0, #0x1
    f6b0:	b.ne	fa0c <lzma_filter_flags_decode@@XZ_5.0+0x594>  // b.any
    f6b4:	ldr	x0, [sp, #112]
    f6b8:	str	xzr, [x0, #56]
    f6bc:	ldr	x0, [sp, #112]
    f6c0:	mov	w1, #0x2                   	// #2
    f6c4:	str	w1, [x0]
    f6c8:	ldr	x0, [sp, #112]
    f6cc:	ldr	x0, [x0, #32]
    f6d0:	mov	x1, x0
    f6d4:	mov	x0, #0x1                   	// #1
    f6d8:	bl	3180 <lzma_index_memusage@plt>
    f6dc:	mov	x1, x0
    f6e0:	ldr	x0, [sp, #112]
    f6e4:	ldr	x0, [x0, #8]
    f6e8:	cmp	x1, x0
    f6ec:	b.ls	f6fc <lzma_filter_flags_decode@@XZ_5.0+0x284>  // b.plast
    f6f0:	mov	w0, #0x6                   	// #6
    f6f4:	str	w0, [sp, #124]
    f6f8:	b	fa18 <lzma_filter_flags_decode@@XZ_5.0+0x5a0>
    f6fc:	ldr	x0, [sp, #112]
    f700:	ldr	x2, [x0, #16]
    f704:	ldr	x0, [sp, #112]
    f708:	ldr	x0, [x0, #32]
    f70c:	mov	x1, x0
    f710:	mov	x0, x2
    f714:	bl	562c <lzma_index_end@@XZ_5.0+0x50>
    f718:	str	wzr, [sp, #124]
    f71c:	ldr	x0, [sp, #112]
    f720:	ldr	x0, [x0, #32]
    f724:	cmp	x0, #0x0
    f728:	b.ne	f734 <lzma_filter_flags_decode@@XZ_5.0+0x2bc>  // b.any
    f72c:	mov	w0, #0x5                   	// #5
    f730:	b	f738 <lzma_filter_flags_decode@@XZ_5.0+0x2c0>
    f734:	mov	w0, #0x3                   	// #3
    f738:	ldr	x1, [sp, #112]
    f73c:	str	w0, [x1]
    f740:	b	f9f4 <lzma_filter_flags_decode@@XZ_5.0+0x57c>
    f744:	ldr	x0, [sp, #112]
    f748:	ldr	w0, [x0]
    f74c:	cmp	w0, #0x3
    f750:	b.ne	f760 <lzma_filter_flags_decode@@XZ_5.0+0x2e8>  // b.any
    f754:	ldr	x0, [sp, #112]
    f758:	add	x0, x0, #0x28
    f75c:	b	f768 <lzma_filter_flags_decode@@XZ_5.0+0x2f0>
    f760:	ldr	x0, [sp, #112]
    f764:	add	x0, x0, #0x30
    f768:	str	x0, [sp, #96]
    f76c:	ldr	x0, [sp, #112]
    f770:	add	x0, x0, #0x38
    f774:	ldr	x4, [sp, #40]
    f778:	ldr	x3, [sp, #48]
    f77c:	ldr	x2, [sp, #56]
    f780:	mov	x1, x0
    f784:	ldr	x0, [sp, #96]
    f788:	bl	33c0 <lzma_vli_decode@plt>
    f78c:	str	w0, [sp, #124]
    f790:	ldr	w0, [sp, #124]
    f794:	cmp	w0, #0x1
    f798:	b.ne	fa14 <lzma_filter_flags_decode@@XZ_5.0+0x59c>  // b.any
    f79c:	str	wzr, [sp, #124]
    f7a0:	ldr	x0, [sp, #112]
    f7a4:	str	xzr, [x0, #56]
    f7a8:	ldr	x0, [sp, #112]
    f7ac:	ldr	w0, [x0]
    f7b0:	cmp	w0, #0x3
    f7b4:	b.ne	f7f4 <lzma_filter_flags_decode@@XZ_5.0+0x37c>  // b.any
    f7b8:	ldr	x0, [sp, #112]
    f7bc:	ldr	x0, [x0, #40]
    f7c0:	cmp	x0, #0x4
    f7c4:	b.ls	f7dc <lzma_filter_flags_decode@@XZ_5.0+0x364>  // b.plast
    f7c8:	ldr	x0, [sp, #112]
    f7cc:	ldr	x1, [x0, #40]
    f7d0:	mov	x0, #0x7ffffffffffffffc    	// #9223372036854775804
    f7d4:	cmp	x1, x0
    f7d8:	b.ls	f7e4 <lzma_filter_flags_decode@@XZ_5.0+0x36c>  // b.plast
    f7dc:	mov	w0, #0x9                   	// #9
    f7e0:	b	fa58 <lzma_filter_flags_decode@@XZ_5.0+0x5e0>
    f7e4:	ldr	x0, [sp, #112]
    f7e8:	mov	w1, #0x4                   	// #4
    f7ec:	str	w1, [x0]
    f7f0:	b	f9f4 <lzma_filter_flags_decode@@XZ_5.0+0x57c>
    f7f4:	ldr	x0, [sp, #112]
    f7f8:	ldr	x4, [x0, #16]
    f7fc:	ldr	x0, [sp, #112]
    f800:	ldr	x1, [x0, #40]
    f804:	ldr	x0, [sp, #112]
    f808:	ldr	x0, [x0, #48]
    f80c:	mov	x3, x0
    f810:	mov	x2, x1
    f814:	ldr	x1, [sp, #64]
    f818:	mov	x0, x4
    f81c:	bl	3300 <lzma_index_append@plt>
    f820:	str	w0, [sp, #92]
    f824:	ldr	w0, [sp, #92]
    f828:	cmp	w0, #0x0
    f82c:	b.eq	f838 <lzma_filter_flags_decode@@XZ_5.0+0x3c0>  // b.none
    f830:	ldr	w0, [sp, #92]
    f834:	b	fa58 <lzma_filter_flags_decode@@XZ_5.0+0x5e0>
    f838:	ldr	x0, [sp, #112]
    f83c:	ldr	x0, [x0, #32]
    f840:	sub	x1, x0, #0x1
    f844:	ldr	x0, [sp, #112]
    f848:	str	x1, [x0, #32]
    f84c:	ldr	x0, [sp, #112]
    f850:	ldr	x0, [x0, #32]
    f854:	cmp	x0, #0x0
    f858:	b.ne	f864 <lzma_filter_flags_decode@@XZ_5.0+0x3ec>  // b.any
    f85c:	mov	w0, #0x5                   	// #5
    f860:	b	f868 <lzma_filter_flags_decode@@XZ_5.0+0x3f0>
    f864:	mov	w0, #0x3                   	// #3
    f868:	ldr	x1, [sp, #112]
    f86c:	str	w0, [x1]
    f870:	b	f9f4 <lzma_filter_flags_decode@@XZ_5.0+0x57c>
    f874:	ldr	x0, [sp, #112]
    f878:	ldr	x0, [x0, #16]
    f87c:	bl	5a04 <lzma_index_checks@@XZ_5.0+0x58>
    f880:	mov	w1, w0
    f884:	ldr	x0, [sp, #112]
    f888:	str	x1, [x0, #56]
    f88c:	ldr	x0, [sp, #112]
    f890:	mov	w1, #0x6                   	// #6
    f894:	str	w1, [x0]
    f898:	ldr	x0, [sp, #112]
    f89c:	ldr	x0, [x0, #56]
    f8a0:	cmp	x0, #0x0
    f8a4:	b.eq	f8ec <lzma_filter_flags_decode@@XZ_5.0+0x474>  // b.none
    f8a8:	ldr	x0, [sp, #112]
    f8ac:	ldr	x0, [x0, #56]
    f8b0:	sub	x1, x0, #0x1
    f8b4:	ldr	x0, [sp, #112]
    f8b8:	str	x1, [x0, #56]
    f8bc:	ldr	x0, [sp, #48]
    f8c0:	ldr	x0, [x0]
    f8c4:	add	x2, x0, #0x1
    f8c8:	ldr	x1, [sp, #48]
    f8cc:	str	x2, [x1]
    f8d0:	ldr	x1, [sp, #56]
    f8d4:	add	x0, x1, x0
    f8d8:	ldrb	w0, [x0]
    f8dc:	cmp	w0, #0x0
    f8e0:	b.eq	f9f4 <lzma_filter_flags_decode@@XZ_5.0+0x57c>  // b.none
    f8e4:	mov	w0, #0x9                   	// #9
    f8e8:	b	fa58 <lzma_filter_flags_decode@@XZ_5.0+0x5e0>
    f8ec:	ldr	x1, [sp, #56]
    f8f0:	ldr	x0, [sp, #104]
    f8f4:	add	x3, x1, x0
    f8f8:	ldr	x0, [sp, #48]
    f8fc:	ldr	x1, [x0]
    f900:	ldr	x0, [sp, #104]
    f904:	sub	x1, x1, x0
    f908:	ldr	x0, [sp, #112]
    f90c:	ldr	w0, [x0, #64]
    f910:	mov	w2, w0
    f914:	mov	x0, x3
    f918:	bl	31c0 <lzma_crc32@plt>
    f91c:	mov	w1, w0
    f920:	ldr	x0, [sp, #112]
    f924:	str	w1, [x0, #64]
    f928:	ldr	x0, [sp, #112]
    f92c:	mov	w1, #0x7                   	// #7
    f930:	str	w1, [x0]
    f934:	b	f93c <lzma_filter_flags_decode@@XZ_5.0+0x4c4>
    f938:	nop
    f93c:	ldr	x0, [sp, #48]
    f940:	ldr	x0, [x0]
    f944:	ldr	x1, [sp, #40]
    f948:	cmp	x1, x0
    f94c:	b.ne	f958 <lzma_filter_flags_decode@@XZ_5.0+0x4e0>  // b.any
    f950:	mov	w0, #0x0                   	// #0
    f954:	b	fa58 <lzma_filter_flags_decode@@XZ_5.0+0x5e0>
    f958:	ldr	x0, [sp, #112]
    f95c:	ldr	w1, [x0, #64]
    f960:	ldr	x0, [sp, #112]
    f964:	ldr	x0, [x0, #56]
    f968:	lsl	w0, w0, #3
    f96c:	lsr	w0, w1, w0
    f970:	and	w1, w0, #0xff
    f974:	ldr	x0, [sp, #48]
    f978:	ldr	x0, [x0]
    f97c:	add	x3, x0, #0x1
    f980:	ldr	x2, [sp, #48]
    f984:	str	x3, [x2]
    f988:	ldr	x2, [sp, #56]
    f98c:	add	x0, x2, x0
    f990:	ldrb	w0, [x0]
    f994:	cmp	w1, w0
    f998:	b.eq	f9a4 <lzma_filter_flags_decode@@XZ_5.0+0x52c>  // b.none
    f99c:	mov	w0, #0x9                   	// #9
    f9a0:	b	fa58 <lzma_filter_flags_decode@@XZ_5.0+0x5e0>
    f9a4:	ldr	x0, [sp, #112]
    f9a8:	ldr	x0, [x0, #56]
    f9ac:	add	x1, x0, #0x1
    f9b0:	ldr	x0, [sp, #112]
    f9b4:	str	x1, [x0, #56]
    f9b8:	ldr	x0, [sp, #112]
    f9bc:	ldr	x0, [x0, #56]
    f9c0:	cmp	x0, #0x3
    f9c4:	b.ls	f938 <lzma_filter_flags_decode@@XZ_5.0+0x4c0>  // b.plast
    f9c8:	ldr	x0, [sp, #112]
    f9cc:	ldr	x0, [x0, #24]
    f9d0:	ldr	x1, [sp, #112]
    f9d4:	ldr	x1, [x1, #16]
    f9d8:	str	x1, [x0]
    f9dc:	ldr	x0, [sp, #112]
    f9e0:	str	xzr, [x0, #16]
    f9e4:	mov	w0, #0x1                   	// #1
    f9e8:	b	fa58 <lzma_filter_flags_decode@@XZ_5.0+0x5e0>
    f9ec:	mov	w0, #0xb                   	// #11
    f9f0:	b	fa58 <lzma_filter_flags_decode@@XZ_5.0+0x5e0>
    f9f4:	ldr	x0, [sp, #48]
    f9f8:	ldr	x0, [x0]
    f9fc:	ldr	x1, [sp, #40]
    fa00:	cmp	x1, x0
    fa04:	b.hi	f5d0 <lzma_filter_flags_decode@@XZ_5.0+0x158>  // b.pmore
    fa08:	b	fa18 <lzma_filter_flags_decode@@XZ_5.0+0x5a0>
    fa0c:	nop
    fa10:	b	fa18 <lzma_filter_flags_decode@@XZ_5.0+0x5a0>
    fa14:	nop
    fa18:	ldr	x1, [sp, #56]
    fa1c:	ldr	x0, [sp, #104]
    fa20:	add	x3, x1, x0
    fa24:	ldr	x0, [sp, #48]
    fa28:	ldr	x1, [x0]
    fa2c:	ldr	x0, [sp, #104]
    fa30:	sub	x1, x1, x0
    fa34:	ldr	x0, [sp, #112]
    fa38:	ldr	w0, [x0, #64]
    fa3c:	mov	w2, w0
    fa40:	mov	x0, x3
    fa44:	bl	31c0 <lzma_crc32@plt>
    fa48:	mov	w1, w0
    fa4c:	ldr	x0, [sp, #112]
    fa50:	str	w1, [x0, #64]
    fa54:	ldr	w0, [sp, #124]
    fa58:	ldp	x29, x30, [sp], #128
    fa5c:	ret
    fa60:	stp	x29, x30, [sp, #-48]!
    fa64:	mov	x29, sp
    fa68:	str	x0, [sp, #24]
    fa6c:	str	x1, [sp, #16]
    fa70:	ldr	x0, [sp, #24]
    fa74:	str	x0, [sp, #40]
    fa78:	ldr	x0, [sp, #40]
    fa7c:	ldr	x0, [x0, #16]
    fa80:	ldr	x1, [sp, #16]
    fa84:	bl	33e0 <lzma_index_end@plt>
    fa88:	ldr	x1, [sp, #16]
    fa8c:	ldr	x0, [sp, #40]
    fa90:	bl	3814 <lzma_version_string@@XZ_5.0+0x124>
    fa94:	nop
    fa98:	ldp	x29, x30, [sp], #48
    fa9c:	ret
    faa0:	stp	x29, x30, [sp, #-64]!
    faa4:	mov	x29, sp
    faa8:	str	x0, [sp, #40]
    faac:	str	x1, [sp, #32]
    fab0:	str	x2, [sp, #24]
    fab4:	str	x3, [sp, #16]
    fab8:	ldr	x0, [sp, #40]
    fabc:	str	x0, [sp, #56]
    fac0:	ldr	x0, [sp, #56]
    fac4:	ldr	x0, [x0, #32]
    fac8:	mov	x1, x0
    facc:	mov	x0, #0x1                   	// #1
    fad0:	bl	3180 <lzma_index_memusage@plt>
    fad4:	mov	x1, x0
    fad8:	ldr	x0, [sp, #32]
    fadc:	str	x1, [x0]
    fae0:	ldr	x0, [sp, #56]
    fae4:	ldr	x1, [x0, #8]
    fae8:	ldr	x0, [sp, #24]
    faec:	str	x1, [x0]
    faf0:	ldr	x0, [sp, #16]
    faf4:	cmp	x0, #0x0
    faf8:	b.eq	fb24 <lzma_filter_flags_decode@@XZ_5.0+0x6ac>  // b.none
    fafc:	ldr	x0, [sp, #32]
    fb00:	ldr	x0, [x0]
    fb04:	ldr	x1, [sp, #16]
    fb08:	cmp	x1, x0
    fb0c:	b.cs	fb18 <lzma_filter_flags_decode@@XZ_5.0+0x6a0>  // b.hs, b.nlast
    fb10:	mov	w0, #0x6                   	// #6
    fb14:	b	fb28 <lzma_filter_flags_decode@@XZ_5.0+0x6b0>
    fb18:	ldr	x0, [sp, #56]
    fb1c:	ldr	x1, [sp, #16]
    fb20:	str	x1, [x0, #8]
    fb24:	mov	w0, #0x0                   	// #0
    fb28:	ldp	x29, x30, [sp], #64
    fb2c:	ret
    fb30:	stp	x29, x30, [sp, #-48]!
    fb34:	mov	x29, sp
    fb38:	str	x0, [sp, #40]
    fb3c:	str	x1, [sp, #32]
    fb40:	str	x2, [sp, #24]
    fb44:	str	x3, [sp, #16]
    fb48:	ldr	x0, [sp, #40]
    fb4c:	ldr	x1, [sp, #24]
    fb50:	str	x1, [x0, #24]
    fb54:	ldr	x0, [sp, #24]
    fb58:	str	xzr, [x0]
    fb5c:	ldr	x0, [sp, #32]
    fb60:	bl	33b0 <lzma_index_init@plt>
    fb64:	mov	x1, x0
    fb68:	ldr	x0, [sp, #40]
    fb6c:	str	x1, [x0, #16]
    fb70:	ldr	x0, [sp, #40]
    fb74:	ldr	x0, [x0, #16]
    fb78:	cmp	x0, #0x0
    fb7c:	b.ne	fb88 <lzma_filter_flags_decode@@XZ_5.0+0x710>  // b.any
    fb80:	mov	w0, #0x5                   	// #5
    fb84:	b	fbcc <lzma_filter_flags_decode@@XZ_5.0+0x754>
    fb88:	ldr	x0, [sp, #40]
    fb8c:	str	wzr, [x0]
    fb90:	ldr	x0, [sp, #16]
    fb94:	cmp	x0, #0x0
    fb98:	b.eq	fba4 <lzma_filter_flags_decode@@XZ_5.0+0x72c>  // b.none
    fb9c:	ldr	x0, [sp, #16]
    fba0:	b	fba8 <lzma_filter_flags_decode@@XZ_5.0+0x730>
    fba4:	mov	x0, #0x1                   	// #1
    fba8:	ldr	x1, [sp, #40]
    fbac:	str	x0, [x1, #8]
    fbb0:	ldr	x0, [sp, #40]
    fbb4:	str	xzr, [x0, #32]
    fbb8:	ldr	x0, [sp, #40]
    fbbc:	str	xzr, [x0, #56]
    fbc0:	ldr	x0, [sp, #40]
    fbc4:	str	wzr, [x0, #64]
    fbc8:	mov	w0, #0x0                   	// #0
    fbcc:	ldp	x29, x30, [sp], #48
    fbd0:	ret
    fbd4:	stp	x29, x30, [sp, #-64]!
    fbd8:	mov	x29, sp
    fbdc:	str	x0, [sp, #40]
    fbe0:	str	x1, [sp, #32]
    fbe4:	str	x2, [sp, #24]
    fbe8:	str	x3, [sp, #16]
    fbec:	ldr	x0, [sp, #40]
    fbf0:	ldr	x1, [x0, #16]
    fbf4:	adrp	x0, f000 <lzma_easy_decoder_memusage@@XZ_5.0+0x10>
    fbf8:	add	x0, x0, #0xbd4
    fbfc:	cmp	x1, x0
    fc00:	b.eq	fc10 <lzma_filter_flags_decode@@XZ_5.0+0x798>  // b.none
    fc04:	ldr	x1, [sp, #32]
    fc08:	ldr	x0, [sp, #40]
    fc0c:	bl	3a48 <lzma_version_string@@XZ_5.0+0x358>
    fc10:	adrp	x0, f000 <lzma_easy_decoder_memusage@@XZ_5.0+0x10>
    fc14:	add	x1, x0, #0xbd4
    fc18:	ldr	x0, [sp, #40]
    fc1c:	str	x1, [x0, #16]
    fc20:	ldr	x0, [sp, #24]
    fc24:	cmp	x0, #0x0
    fc28:	b.ne	fc34 <lzma_filter_flags_decode@@XZ_5.0+0x7bc>  // b.any
    fc2c:	mov	w0, #0xb                   	// #11
    fc30:	b	fcdc <lzma_filter_flags_decode@@XZ_5.0+0x864>
    fc34:	ldr	x0, [sp, #40]
    fc38:	ldr	x0, [x0]
    fc3c:	str	x0, [sp, #56]
    fc40:	ldr	x0, [sp, #56]
    fc44:	cmp	x0, #0x0
    fc48:	b.ne	fcb8 <lzma_filter_flags_decode@@XZ_5.0+0x840>  // b.any
    fc4c:	ldr	x1, [sp, #32]
    fc50:	mov	x0, #0x48                  	// #72
    fc54:	bl	36fc <lzma_version_string@@XZ_5.0+0xc>
    fc58:	str	x0, [sp, #56]
    fc5c:	ldr	x0, [sp, #56]
    fc60:	cmp	x0, #0x0
    fc64:	b.ne	fc70 <lzma_filter_flags_decode@@XZ_5.0+0x7f8>  // b.any
    fc68:	mov	w0, #0x5                   	// #5
    fc6c:	b	fcdc <lzma_filter_flags_decode@@XZ_5.0+0x864>
    fc70:	ldr	x0, [sp, #40]
    fc74:	ldr	x1, [sp, #56]
    fc78:	str	x1, [x0]
    fc7c:	ldr	x0, [sp, #40]
    fc80:	adrp	x1, f000 <lzma_easy_decoder_memusage@@XZ_5.0+0x10>
    fc84:	add	x1, x1, #0x58c
    fc88:	str	x1, [x0, #24]
    fc8c:	ldr	x0, [sp, #40]
    fc90:	adrp	x1, f000 <lzma_easy_decoder_memusage@@XZ_5.0+0x10>
    fc94:	add	x1, x1, #0xa60
    fc98:	str	x1, [x0, #32]
    fc9c:	ldr	x0, [sp, #40]
    fca0:	adrp	x1, f000 <lzma_easy_decoder_memusage@@XZ_5.0+0x10>
    fca4:	add	x1, x1, #0xaa0
    fca8:	str	x1, [x0, #56]
    fcac:	ldr	x0, [sp, #56]
    fcb0:	str	xzr, [x0, #16]
    fcb4:	b	fcc8 <lzma_filter_flags_decode@@XZ_5.0+0x850>
    fcb8:	ldr	x0, [sp, #56]
    fcbc:	ldr	x0, [x0, #16]
    fcc0:	ldr	x1, [sp, #32]
    fcc4:	bl	33e0 <lzma_index_end@plt>
    fcc8:	ldr	x3, [sp, #16]
    fccc:	ldr	x2, [sp, #24]
    fcd0:	ldr	x1, [sp, #32]
    fcd4:	ldr	x0, [sp, #56]
    fcd8:	bl	fb30 <lzma_filter_flags_decode@@XZ_5.0+0x6b8>
    fcdc:	ldp	x29, x30, [sp], #64
    fce0:	ret

000000000000fce4 <lzma_index_decoder@@XZ_5.0>:
    fce4:	stp	x29, x30, [sp, #-64]!
    fce8:	mov	x29, sp
    fcec:	str	x0, [sp, #40]
    fcf0:	str	x1, [sp, #32]
    fcf4:	str	x2, [sp, #24]
    fcf8:	ldr	x0, [sp, #40]
    fcfc:	bl	3b00 <lzma_version_string@@XZ_5.0+0x410>
    fd00:	str	w0, [sp, #60]
    fd04:	ldr	w0, [sp, #60]
    fd08:	cmp	w0, #0x0
    fd0c:	b.eq	fd18 <lzma_index_decoder@@XZ_5.0+0x34>  // b.none
    fd10:	ldr	w0, [sp, #60]
    fd14:	b	fd84 <lzma_index_decoder@@XZ_5.0+0xa0>
    fd18:	ldr	x0, [sp, #40]
    fd1c:	ldr	x0, [x0, #56]
    fd20:	mov	x4, x0
    fd24:	ldr	x0, [sp, #40]
    fd28:	ldr	x0, [x0, #48]
    fd2c:	ldr	x3, [sp, #24]
    fd30:	ldr	x2, [sp, #32]
    fd34:	mov	x1, x0
    fd38:	mov	x0, x4
    fd3c:	bl	fbd4 <lzma_filter_flags_decode@@XZ_5.0+0x75c>
    fd40:	str	w0, [sp, #56]
    fd44:	ldr	w0, [sp, #56]
    fd48:	cmp	w0, #0x0
    fd4c:	b.eq	fd60 <lzma_index_decoder@@XZ_5.0+0x7c>  // b.none
    fd50:	ldr	x0, [sp, #40]
    fd54:	bl	3320 <lzma_end@plt>
    fd58:	ldr	w0, [sp, #56]
    fd5c:	b	fd84 <lzma_index_decoder@@XZ_5.0+0xa0>
    fd60:	ldr	x0, [sp, #40]
    fd64:	ldr	x0, [x0, #56]
    fd68:	mov	w1, #0x1                   	// #1
    fd6c:	strb	w1, [x0, #88]
    fd70:	ldr	x0, [sp, #40]
    fd74:	ldr	x0, [x0, #56]
    fd78:	mov	w1, #0x1                   	// #1
    fd7c:	strb	w1, [x0, #91]
    fd80:	mov	w0, #0x0                   	// #0
    fd84:	ldp	x29, x30, [sp], #64
    fd88:	ret

000000000000fd8c <lzma_index_buffer_decode@@XZ_5.0>:
    fd8c:	sub	sp, sp, #0xb0
    fd90:	stp	x29, x30, [sp, #16]
    fd94:	add	x29, sp, #0x10
    fd98:	str	x0, [sp, #72]
    fd9c:	str	x1, [sp, #64]
    fda0:	str	x2, [sp, #56]
    fda4:	str	x3, [sp, #48]
    fda8:	str	x4, [sp, #40]
    fdac:	str	x5, [sp, #32]
    fdb0:	ldr	x0, [sp, #72]
    fdb4:	cmp	x0, #0x0
    fdb8:	b.eq	fdf4 <lzma_index_buffer_decode@@XZ_5.0+0x68>  // b.none
    fdbc:	ldr	x0, [sp, #64]
    fdc0:	cmp	x0, #0x0
    fdc4:	b.eq	fdf4 <lzma_index_buffer_decode@@XZ_5.0+0x68>  // b.none
    fdc8:	ldr	x0, [sp, #48]
    fdcc:	cmp	x0, #0x0
    fdd0:	b.eq	fdf4 <lzma_index_buffer_decode@@XZ_5.0+0x68>  // b.none
    fdd4:	ldr	x0, [sp, #40]
    fdd8:	cmp	x0, #0x0
    fddc:	b.eq	fdf4 <lzma_index_buffer_decode@@XZ_5.0+0x68>  // b.none
    fde0:	ldr	x0, [sp, #40]
    fde4:	ldr	x0, [x0]
    fde8:	ldr	x1, [sp, #32]
    fdec:	cmp	x1, x0
    fdf0:	b.cs	fdfc <lzma_index_buffer_decode@@XZ_5.0+0x70>  // b.hs, b.nlast
    fdf4:	mov	w0, #0xb                   	// #11
    fdf8:	b	fed8 <lzma_index_buffer_decode@@XZ_5.0+0x14c>
    fdfc:	ldr	x0, [sp, #64]
    fe00:	ldr	x1, [x0]
    fe04:	add	x0, sp, #0x58
    fe08:	mov	x3, x1
    fe0c:	ldr	x2, [sp, #72]
    fe10:	ldr	x1, [sp, #56]
    fe14:	bl	fb30 <lzma_filter_flags_decode@@XZ_5.0+0x6b8>
    fe18:	str	w0, [sp, #168]
    fe1c:	ldr	w0, [sp, #168]
    fe20:	cmp	w0, #0x0
    fe24:	b.eq	fe30 <lzma_index_buffer_decode@@XZ_5.0+0xa4>  // b.none
    fe28:	ldr	w0, [sp, #168]
    fe2c:	b	fed8 <lzma_index_buffer_decode@@XZ_5.0+0x14c>
    fe30:	ldr	x0, [sp, #40]
    fe34:	ldr	x0, [x0]
    fe38:	str	x0, [sp, #160]
    fe3c:	add	x0, sp, #0x58
    fe40:	str	wzr, [sp]
    fe44:	mov	x7, #0x0                   	// #0
    fe48:	mov	x6, #0x0                   	// #0
    fe4c:	mov	x5, #0x0                   	// #0
    fe50:	ldr	x4, [sp, #32]
    fe54:	ldr	x3, [sp, #40]
    fe58:	ldr	x2, [sp, #48]
    fe5c:	ldr	x1, [sp, #56]
    fe60:	bl	f58c <lzma_filter_flags_decode@@XZ_5.0+0x114>
    fe64:	str	w0, [sp, #172]
    fe68:	ldr	w0, [sp, #172]
    fe6c:	cmp	w0, #0x1
    fe70:	b.ne	fe7c <lzma_index_buffer_decode@@XZ_5.0+0xf0>  // b.any
    fe74:	str	wzr, [sp, #172]
    fe78:	b	fed4 <lzma_index_buffer_decode@@XZ_5.0+0x148>
    fe7c:	ldr	x0, [sp, #104]
    fe80:	ldr	x1, [sp, #56]
    fe84:	bl	33e0 <lzma_index_end@plt>
    fe88:	ldr	x0, [sp, #40]
    fe8c:	ldr	x1, [sp, #160]
    fe90:	str	x1, [x0]
    fe94:	ldr	w0, [sp, #172]
    fe98:	cmp	w0, #0x0
    fe9c:	b.ne	feac <lzma_index_buffer_decode@@XZ_5.0+0x120>  // b.any
    fea0:	mov	w0, #0x9                   	// #9
    fea4:	str	w0, [sp, #172]
    fea8:	b	fed4 <lzma_index_buffer_decode@@XZ_5.0+0x148>
    feac:	ldr	w0, [sp, #172]
    feb0:	cmp	w0, #0x6
    feb4:	b.ne	fed4 <lzma_index_buffer_decode@@XZ_5.0+0x148>  // b.any
    feb8:	ldr	x0, [sp, #120]
    febc:	mov	x1, x0
    fec0:	mov	x0, #0x1                   	// #1
    fec4:	bl	3180 <lzma_index_memusage@plt>
    fec8:	mov	x1, x0
    fecc:	ldr	x0, [sp, #64]
    fed0:	str	x1, [x0]
    fed4:	ldr	w0, [sp, #172]
    fed8:	ldp	x29, x30, [sp, #16]
    fedc:	add	sp, sp, #0xb0
    fee0:	ret
    fee4:	sub	sp, sp, #0x10
    fee8:	str	x0, [sp, #8]
    feec:	ldr	x0, [sp, #8]
    fef0:	add	x0, x0, #0x3
    fef4:	and	x0, x0, #0xfffffffffffffffc
    fef8:	add	sp, sp, #0x10
    fefc:	ret
    ff00:	stp	x29, x30, [sp, #-32]!
    ff04:	mov	x29, sp
    ff08:	str	x0, [sp, #24]
    ff0c:	str	x1, [sp, #16]
    ff10:	ldr	x0, [sp, #24]
    ff14:	bl	3480 <lzma_vli_size@plt>
    ff18:	add	w0, w0, #0x1
    ff1c:	mov	w1, w0
    ff20:	ldr	x0, [sp, #16]
    ff24:	add	x0, x1, x0
    ff28:	add	x0, x0, #0x4
    ff2c:	ldp	x29, x30, [sp], #32
    ff30:	ret
    ff34:	stp	x29, x30, [sp, #-32]!
    ff38:	mov	x29, sp
    ff3c:	str	x0, [sp, #24]
    ff40:	str	x1, [sp, #16]
    ff44:	ldr	x1, [sp, #16]
    ff48:	ldr	x0, [sp, #24]
    ff4c:	bl	ff00 <lzma_index_buffer_decode@@XZ_5.0+0x174>
    ff50:	bl	fee4 <lzma_index_buffer_decode@@XZ_5.0+0x158>
    ff54:	ldp	x29, x30, [sp], #32
    ff58:	ret
    ff5c:	stp	x29, x30, [sp, #-48]!
    ff60:	mov	x29, sp
    ff64:	str	x0, [sp, #40]
    ff68:	str	x1, [sp, #32]
    ff6c:	str	x2, [sp, #24]
    ff70:	ldr	x1, [sp, #24]
    ff74:	ldr	x0, [sp, #32]
    ff78:	bl	ff34 <lzma_index_buffer_decode@@XZ_5.0+0x1a8>
    ff7c:	mov	x1, x0
    ff80:	ldr	x0, [sp, #40]
    ff84:	add	x0, x1, x0
    ff88:	add	x0, x0, #0x18
    ff8c:	ldp	x29, x30, [sp], #48
    ff90:	ret

000000000000ff94 <lzma_index_hash_init@@XZ_5.0>:
    ff94:	stp	x29, x30, [sp, #-32]!
    ff98:	mov	x29, sp
    ff9c:	str	x0, [sp, #24]
    ffa0:	str	x1, [sp, #16]
    ffa4:	ldr	x0, [sp, #24]
    ffa8:	cmp	x0, #0x0
    ffac:	b.ne	ffd4 <lzma_index_hash_init@@XZ_5.0+0x40>  // b.any
    ffb0:	ldr	x1, [sp, #16]
    ffb4:	mov	x0, #0x140                 	// #320
    ffb8:	bl	36fc <lzma_version_string@@XZ_5.0+0xc>
    ffbc:	str	x0, [sp, #24]
    ffc0:	ldr	x0, [sp, #24]
    ffc4:	cmp	x0, #0x0
    ffc8:	b.ne	ffd4 <lzma_index_hash_init@@XZ_5.0+0x40>  // b.any
    ffcc:	mov	x0, #0x0                   	// #0
    ffd0:	b	10060 <lzma_index_hash_init@@XZ_5.0+0xcc>
    ffd4:	ldr	x0, [sp, #24]
    ffd8:	str	wzr, [x0]
    ffdc:	ldr	x0, [sp, #24]
    ffe0:	str	xzr, [x0, #8]
    ffe4:	ldr	x0, [sp, #24]
    ffe8:	str	xzr, [x0, #16]
    ffec:	ldr	x0, [sp, #24]
    fff0:	str	xzr, [x0, #24]
    fff4:	ldr	x0, [sp, #24]
    fff8:	str	xzr, [x0, #32]
    fffc:	ldr	x0, [sp, #24]
   10000:	str	xzr, [x0, #144]
   10004:	ldr	x0, [sp, #24]
   10008:	str	xzr, [x0, #152]
   1000c:	ldr	x0, [sp, #24]
   10010:	str	xzr, [x0, #160]
   10014:	ldr	x0, [sp, #24]
   10018:	str	xzr, [x0, #168]
   1001c:	ldr	x0, [sp, #24]
   10020:	str	xzr, [x0, #288]
   10024:	ldr	x0, [sp, #24]
   10028:	str	xzr, [x0, #296]
   1002c:	ldr	x0, [sp, #24]
   10030:	str	xzr, [x0, #304]
   10034:	ldr	x0, [sp, #24]
   10038:	str	wzr, [x0, #312]
   1003c:	ldr	x0, [sp, #24]
   10040:	add	x0, x0, #0x28
   10044:	mov	w1, #0xa                   	// #10
   10048:	bl	119e0 <lzma_check_size@@XZ_5.0+0x34>
   1004c:	ldr	x0, [sp, #24]
   10050:	add	x0, x0, #0xb0
   10054:	mov	w1, #0xa                   	// #10
   10058:	bl	119e0 <lzma_check_size@@XZ_5.0+0x34>
   1005c:	ldr	x0, [sp, #24]
   10060:	ldp	x29, x30, [sp], #32
   10064:	ret

0000000000010068 <lzma_index_hash_end@@XZ_5.0>:
   10068:	stp	x29, x30, [sp, #-32]!
   1006c:	mov	x29, sp
   10070:	str	x0, [sp, #24]
   10074:	str	x1, [sp, #16]
   10078:	ldr	x1, [sp, #16]
   1007c:	ldr	x0, [sp, #24]
   10080:	bl	3814 <lzma_version_string@@XZ_5.0+0x124>
   10084:	nop
   10088:	ldp	x29, x30, [sp], #32
   1008c:	ret

0000000000010090 <lzma_index_hash_size@@XZ_5.0>:
   10090:	stp	x29, x30, [sp, #-32]!
   10094:	mov	x29, sp
   10098:	str	x0, [sp, #24]
   1009c:	ldr	x0, [sp, #24]
   100a0:	ldr	x2, [x0, #24]
   100a4:	ldr	x0, [sp, #24]
   100a8:	ldr	x0, [x0, #32]
   100ac:	mov	x1, x0
   100b0:	mov	x0, x2
   100b4:	bl	ff34 <lzma_index_buffer_decode@@XZ_5.0+0x1a8>
   100b8:	ldp	x29, x30, [sp], #32
   100bc:	ret
   100c0:	stp	x29, x30, [sp, #-80]!
   100c4:	mov	x29, sp
   100c8:	stp	x19, x20, [sp, #16]
   100cc:	str	x0, [sp, #56]
   100d0:	str	x1, [sp, #48]
   100d4:	str	x2, [sp, #40]
   100d8:	ldr	x0, [sp, #48]
   100dc:	bl	fee4 <lzma_index_buffer_decode@@XZ_5.0+0x158>
   100e0:	mov	x1, x0
   100e4:	ldr	x0, [sp, #56]
   100e8:	ldr	x0, [x0]
   100ec:	add	x1, x1, x0
   100f0:	ldr	x0, [sp, #56]
   100f4:	str	x1, [x0]
   100f8:	ldr	x0, [sp, #56]
   100fc:	ldr	x1, [x0, #8]
   10100:	ldr	x0, [sp, #40]
   10104:	add	x1, x1, x0
   10108:	ldr	x0, [sp, #56]
   1010c:	str	x1, [x0, #8]
   10110:	ldr	x0, [sp, #56]
   10114:	ldr	x19, [x0, #24]
   10118:	ldr	x0, [sp, #48]
   1011c:	bl	3480 <lzma_vli_size@plt>
   10120:	mov	w20, w0
   10124:	ldr	x0, [sp, #40]
   10128:	bl	3480 <lzma_vli_size@plt>
   1012c:	add	w0, w20, w0
   10130:	mov	w0, w0
   10134:	add	x1, x19, x0
   10138:	ldr	x0, [sp, #56]
   1013c:	str	x1, [x0, #24]
   10140:	ldr	x0, [sp, #56]
   10144:	ldr	x0, [x0, #16]
   10148:	add	x1, x0, #0x1
   1014c:	ldr	x0, [sp, #56]
   10150:	str	x1, [x0, #16]
   10154:	ldr	x0, [sp, #48]
   10158:	str	x0, [sp, #64]
   1015c:	ldr	x0, [sp, #40]
   10160:	str	x0, [sp, #72]
   10164:	ldr	x0, [sp, #56]
   10168:	add	x0, x0, #0x20
   1016c:	add	x1, sp, #0x40
   10170:	mov	x3, #0x10                  	// #16
   10174:	mov	x2, x1
   10178:	mov	w1, #0xa                   	// #10
   1017c:	bl	11a78 <lzma_check_size@@XZ_5.0+0xcc>
   10180:	mov	w0, #0x0                   	// #0
   10184:	ldp	x19, x20, [sp, #16]
   10188:	ldp	x29, x30, [sp], #80
   1018c:	ret

0000000000010190 <lzma_index_hash_append@@XZ_5.0>:
   10190:	stp	x29, x30, [sp, #-64]!
   10194:	mov	x29, sp
   10198:	str	x0, [sp, #40]
   1019c:	str	x1, [sp, #32]
   101a0:	str	x2, [sp, #24]
   101a4:	ldr	x0, [sp, #40]
   101a8:	ldr	w0, [x0]
   101ac:	cmp	w0, #0x0
   101b0:	b.ne	101dc <lzma_index_hash_append@@XZ_5.0+0x4c>  // b.any
   101b4:	ldr	x0, [sp, #32]
   101b8:	cmp	x0, #0x4
   101bc:	b.ls	101dc <lzma_index_hash_append@@XZ_5.0+0x4c>  // b.plast
   101c0:	ldr	x1, [sp, #32]
   101c4:	mov	x0, #0x7ffffffffffffffc    	// #9223372036854775804
   101c8:	cmp	x1, x0
   101cc:	b.hi	101dc <lzma_index_hash_append@@XZ_5.0+0x4c>  // b.pmore
   101d0:	ldr	x0, [sp, #24]
   101d4:	cmp	x0, #0x0
   101d8:	b.ge	101e4 <lzma_index_hash_append@@XZ_5.0+0x54>  // b.tcont
   101dc:	mov	w0, #0xb                   	// #11
   101e0:	b	10294 <lzma_index_hash_append@@XZ_5.0+0x104>
   101e4:	ldr	x0, [sp, #40]
   101e8:	add	x0, x0, #0x8
   101ec:	ldr	x2, [sp, #24]
   101f0:	ldr	x1, [sp, #32]
   101f4:	bl	100c0 <lzma_index_hash_size@@XZ_5.0+0x30>
   101f8:	str	w0, [sp, #60]
   101fc:	ldr	w0, [sp, #60]
   10200:	cmp	w0, #0x0
   10204:	b.eq	10210 <lzma_index_hash_append@@XZ_5.0+0x80>  // b.none
   10208:	ldr	w0, [sp, #60]
   1020c:	b	10294 <lzma_index_hash_append@@XZ_5.0+0x104>
   10210:	ldr	x0, [sp, #40]
   10214:	ldr	x0, [x0, #8]
   10218:	cmp	x0, #0x0
   1021c:	b.lt	10288 <lzma_index_hash_append@@XZ_5.0+0xf8>  // b.tstop
   10220:	ldr	x0, [sp, #40]
   10224:	ldr	x0, [x0, #16]
   10228:	cmp	x0, #0x0
   1022c:	b.lt	10288 <lzma_index_hash_append@@XZ_5.0+0xf8>  // b.tstop
   10230:	ldr	x0, [sp, #40]
   10234:	ldr	x2, [x0, #24]
   10238:	ldr	x0, [sp, #40]
   1023c:	ldr	x0, [x0, #32]
   10240:	mov	x1, x0
   10244:	mov	x0, x2
   10248:	bl	ff34 <lzma_index_buffer_decode@@XZ_5.0+0x1a8>
   1024c:	mov	x1, x0
   10250:	mov	x0, #0x400000000           	// #17179869184
   10254:	cmp	x1, x0
   10258:	b.hi	10288 <lzma_index_hash_append@@XZ_5.0+0xf8>  // b.pmore
   1025c:	ldr	x0, [sp, #40]
   10260:	ldr	x3, [x0, #8]
   10264:	ldr	x0, [sp, #40]
   10268:	ldr	x1, [x0, #24]
   1026c:	ldr	x0, [sp, #40]
   10270:	ldr	x0, [x0, #32]
   10274:	mov	x2, x0
   10278:	mov	x0, x3
   1027c:	bl	ff5c <lzma_index_buffer_decode@@XZ_5.0+0x1d0>
   10280:	cmp	x0, #0x0
   10284:	b.ge	10290 <lzma_index_hash_append@@XZ_5.0+0x100>  // b.tcont
   10288:	mov	w0, #0x9                   	// #9
   1028c:	b	10294 <lzma_index_hash_append@@XZ_5.0+0x104>
   10290:	mov	w0, #0x0                   	// #0
   10294:	ldp	x29, x30, [sp], #64
   10298:	ret

000000000001029c <lzma_index_hash_decode@@XZ_5.0>:
   1029c:	stp	x29, x30, [sp, #-96]!
   102a0:	mov	x29, sp
   102a4:	stp	x19, x20, [sp, #16]
   102a8:	str	x0, [sp, #56]
   102ac:	str	x1, [sp, #48]
   102b0:	str	x2, [sp, #40]
   102b4:	str	x3, [sp, #32]
   102b8:	ldr	x0, [sp, #40]
   102bc:	ldr	x0, [x0]
   102c0:	ldr	x1, [sp, #32]
   102c4:	cmp	x1, x0
   102c8:	b.hi	102d4 <lzma_index_hash_decode@@XZ_5.0+0x38>  // b.pmore
   102cc:	mov	w0, #0xa                   	// #10
   102d0:	b	10818 <lzma_index_hash_decode@@XZ_5.0+0x57c>
   102d4:	ldr	x0, [sp, #40]
   102d8:	ldr	x0, [x0]
   102dc:	str	x0, [sp, #80]
   102e0:	str	wzr, [sp, #92]
   102e4:	b	107b4 <lzma_index_hash_decode@@XZ_5.0+0x518>
   102e8:	ldr	x0, [sp, #56]
   102ec:	ldr	w0, [x0]
   102f0:	cmp	w0, #0x6
   102f4:	b.eq	10718 <lzma_index_hash_decode@@XZ_5.0+0x47c>  // b.none
   102f8:	cmp	w0, #0x6
   102fc:	b.hi	107ac <lzma_index_hash_decode@@XZ_5.0+0x510>  // b.pmore
   10300:	cmp	w0, #0x5
   10304:	b.eq	105c8 <lzma_index_hash_decode@@XZ_5.0+0x32c>  // b.none
   10308:	cmp	w0, #0x5
   1030c:	b.hi	107ac <lzma_index_hash_decode@@XZ_5.0+0x510>  // b.pmore
   10310:	cmp	w0, #0x4
   10314:	b.eq	10588 <lzma_index_hash_decode@@XZ_5.0+0x2ec>  // b.none
   10318:	cmp	w0, #0x4
   1031c:	b.hi	107ac <lzma_index_hash_decode@@XZ_5.0+0x510>  // b.pmore
   10320:	cmp	w0, #0x3
   10324:	b.hi	107ac <lzma_index_hash_decode@@XZ_5.0+0x510>  // b.pmore
   10328:	cmp	w0, #0x2
   1032c:	b.cs	10410 <lzma_index_hash_decode@@XZ_5.0+0x174>  // b.hs, b.nlast
   10330:	cmp	w0, #0x0
   10334:	b.eq	10344 <lzma_index_hash_decode@@XZ_5.0+0xa8>  // b.none
   10338:	cmp	w0, #0x1
   1033c:	b.eq	10384 <lzma_index_hash_decode@@XZ_5.0+0xe8>  // b.none
   10340:	b	107ac <lzma_index_hash_decode@@XZ_5.0+0x510>
   10344:	ldr	x0, [sp, #40]
   10348:	ldr	x0, [x0]
   1034c:	add	x2, x0, #0x1
   10350:	ldr	x1, [sp, #40]
   10354:	str	x2, [x1]
   10358:	ldr	x1, [sp, #48]
   1035c:	add	x0, x1, x0
   10360:	ldrb	w0, [x0]
   10364:	cmp	w0, #0x0
   10368:	b.eq	10374 <lzma_index_hash_decode@@XZ_5.0+0xd8>  // b.none
   1036c:	mov	w0, #0x9                   	// #9
   10370:	b	10818 <lzma_index_hash_decode@@XZ_5.0+0x57c>
   10374:	ldr	x0, [sp, #56]
   10378:	mov	w1, #0x1                   	// #1
   1037c:	str	w1, [x0]
   10380:	b	107b4 <lzma_index_hash_decode@@XZ_5.0+0x518>
   10384:	ldr	x0, [sp, #56]
   10388:	add	x5, x0, #0x118
   1038c:	ldr	x0, [sp, #56]
   10390:	add	x0, x0, #0x130
   10394:	ldr	x4, [sp, #32]
   10398:	ldr	x3, [sp, #40]
   1039c:	ldr	x2, [sp, #48]
   103a0:	mov	x1, x0
   103a4:	mov	x0, x5
   103a8:	bl	33c0 <lzma_vli_decode@plt>
   103ac:	str	w0, [sp, #92]
   103b0:	ldr	w0, [sp, #92]
   103b4:	cmp	w0, #0x1
   103b8:	b.ne	107cc <lzma_index_hash_decode@@XZ_5.0+0x530>  // b.any
   103bc:	ldr	x0, [sp, #56]
   103c0:	ldr	x1, [x0, #280]
   103c4:	ldr	x0, [sp, #56]
   103c8:	ldr	x0, [x0, #24]
   103cc:	cmp	x1, x0
   103d0:	b.eq	103dc <lzma_index_hash_decode@@XZ_5.0+0x140>  // b.none
   103d4:	mov	w0, #0x9                   	// #9
   103d8:	b	10818 <lzma_index_hash_decode@@XZ_5.0+0x57c>
   103dc:	str	wzr, [sp, #92]
   103e0:	ldr	x0, [sp, #56]
   103e4:	str	xzr, [x0, #304]
   103e8:	ldr	x0, [sp, #56]
   103ec:	ldr	x0, [x0, #280]
   103f0:	cmp	x0, #0x0
   103f4:	b.ne	10400 <lzma_index_hash_decode@@XZ_5.0+0x164>  // b.any
   103f8:	mov	w0, #0x4                   	// #4
   103fc:	b	10404 <lzma_index_hash_decode@@XZ_5.0+0x168>
   10400:	mov	w0, #0x2                   	// #2
   10404:	ldr	x1, [sp, #56]
   10408:	str	w0, [x1]
   1040c:	b	107b4 <lzma_index_hash_decode@@XZ_5.0+0x518>
   10410:	ldr	x0, [sp, #56]
   10414:	ldr	w0, [x0]
   10418:	cmp	w0, #0x2
   1041c:	b.ne	1042c <lzma_index_hash_decode@@XZ_5.0+0x190>  // b.any
   10420:	ldr	x0, [sp, #56]
   10424:	add	x0, x0, #0x120
   10428:	b	10434 <lzma_index_hash_decode@@XZ_5.0+0x198>
   1042c:	ldr	x0, [sp, #56]
   10430:	add	x0, x0, #0x128
   10434:	str	x0, [sp, #72]
   10438:	ldr	x0, [sp, #56]
   1043c:	add	x0, x0, #0x130
   10440:	ldr	x4, [sp, #32]
   10444:	ldr	x3, [sp, #40]
   10448:	ldr	x2, [sp, #48]
   1044c:	mov	x1, x0
   10450:	ldr	x0, [sp, #72]
   10454:	bl	33c0 <lzma_vli_decode@plt>
   10458:	str	w0, [sp, #92]
   1045c:	ldr	w0, [sp, #92]
   10460:	cmp	w0, #0x1
   10464:	b.ne	107d4 <lzma_index_hash_decode@@XZ_5.0+0x538>  // b.any
   10468:	str	wzr, [sp, #92]
   1046c:	ldr	x0, [sp, #56]
   10470:	str	xzr, [x0, #304]
   10474:	ldr	x0, [sp, #56]
   10478:	ldr	w0, [x0]
   1047c:	cmp	w0, #0x2
   10480:	b.ne	104c0 <lzma_index_hash_decode@@XZ_5.0+0x224>  // b.any
   10484:	ldr	x0, [sp, #56]
   10488:	ldr	x0, [x0, #288]
   1048c:	cmp	x0, #0x4
   10490:	b.ls	104a8 <lzma_index_hash_decode@@XZ_5.0+0x20c>  // b.plast
   10494:	ldr	x0, [sp, #56]
   10498:	ldr	x1, [x0, #288]
   1049c:	mov	x0, #0x7ffffffffffffffc    	// #9223372036854775804
   104a0:	cmp	x1, x0
   104a4:	b.ls	104b0 <lzma_index_hash_decode@@XZ_5.0+0x214>  // b.plast
   104a8:	mov	w0, #0x9                   	// #9
   104ac:	b	10818 <lzma_index_hash_decode@@XZ_5.0+0x57c>
   104b0:	ldr	x0, [sp, #56]
   104b4:	mov	w1, #0x3                   	// #3
   104b8:	str	w1, [x0]
   104bc:	b	107b4 <lzma_index_hash_decode@@XZ_5.0+0x518>
   104c0:	ldr	x0, [sp, #56]
   104c4:	add	x3, x0, #0x90
   104c8:	ldr	x0, [sp, #56]
   104cc:	ldr	x1, [x0, #288]
   104d0:	ldr	x0, [sp, #56]
   104d4:	ldr	x0, [x0, #296]
   104d8:	mov	x2, x0
   104dc:	mov	x0, x3
   104e0:	bl	100c0 <lzma_index_hash_size@@XZ_5.0+0x30>
   104e4:	str	w0, [sp, #68]
   104e8:	ldr	w0, [sp, #68]
   104ec:	cmp	w0, #0x0
   104f0:	b.eq	104fc <lzma_index_hash_decode@@XZ_5.0+0x260>  // b.none
   104f4:	ldr	w0, [sp, #68]
   104f8:	b	10818 <lzma_index_hash_decode@@XZ_5.0+0x57c>
   104fc:	ldr	x0, [sp, #56]
   10500:	ldr	x1, [x0, #8]
   10504:	ldr	x0, [sp, #56]
   10508:	ldr	x0, [x0, #144]
   1050c:	cmp	x1, x0
   10510:	b.cc	10544 <lzma_index_hash_decode@@XZ_5.0+0x2a8>  // b.lo, b.ul, b.last
   10514:	ldr	x0, [sp, #56]
   10518:	ldr	x1, [x0, #16]
   1051c:	ldr	x0, [sp, #56]
   10520:	ldr	x0, [x0, #152]
   10524:	cmp	x1, x0
   10528:	b.cc	10544 <lzma_index_hash_decode@@XZ_5.0+0x2a8>  // b.lo, b.ul, b.last
   1052c:	ldr	x0, [sp, #56]
   10530:	ldr	x1, [x0, #32]
   10534:	ldr	x0, [sp, #56]
   10538:	ldr	x0, [x0, #168]
   1053c:	cmp	x1, x0
   10540:	b.cs	1054c <lzma_index_hash_decode@@XZ_5.0+0x2b0>  // b.hs, b.nlast
   10544:	mov	w0, #0x9                   	// #9
   10548:	b	10818 <lzma_index_hash_decode@@XZ_5.0+0x57c>
   1054c:	ldr	x0, [sp, #56]
   10550:	ldr	x0, [x0, #280]
   10554:	sub	x1, x0, #0x1
   10558:	ldr	x0, [sp, #56]
   1055c:	str	x1, [x0, #280]
   10560:	ldr	x0, [sp, #56]
   10564:	ldr	x0, [x0, #280]
   10568:	cmp	x0, #0x0
   1056c:	b.ne	10578 <lzma_index_hash_decode@@XZ_5.0+0x2dc>  // b.any
   10570:	mov	w0, #0x4                   	// #4
   10574:	b	1057c <lzma_index_hash_decode@@XZ_5.0+0x2e0>
   10578:	mov	w0, #0x2                   	// #2
   1057c:	ldr	x1, [sp, #56]
   10580:	str	w0, [x1]
   10584:	b	107b4 <lzma_index_hash_decode@@XZ_5.0+0x518>
   10588:	ldr	x0, [sp, #56]
   1058c:	ldr	x2, [x0, #160]
   10590:	ldr	x0, [sp, #56]
   10594:	ldr	x0, [x0, #168]
   10598:	mov	x1, x0
   1059c:	mov	x0, x2
   105a0:	bl	ff00 <lzma_index_buffer_decode@@XZ_5.0+0x174>
   105a4:	mov	x1, x0
   105a8:	mov	x0, #0x4                   	// #4
   105ac:	sub	x0, x0, x1
   105b0:	and	x1, x0, #0x3
   105b4:	ldr	x0, [sp, #56]
   105b8:	str	x1, [x0, #304]
   105bc:	ldr	x0, [sp, #56]
   105c0:	mov	w1, #0x5                   	// #5
   105c4:	str	w1, [x0]
   105c8:	ldr	x0, [sp, #56]
   105cc:	ldr	x0, [x0, #304]
   105d0:	cmp	x0, #0x0
   105d4:	b.eq	1061c <lzma_index_hash_decode@@XZ_5.0+0x380>  // b.none
   105d8:	ldr	x0, [sp, #56]
   105dc:	ldr	x0, [x0, #304]
   105e0:	sub	x1, x0, #0x1
   105e4:	ldr	x0, [sp, #56]
   105e8:	str	x1, [x0, #304]
   105ec:	ldr	x0, [sp, #40]
   105f0:	ldr	x0, [x0]
   105f4:	add	x2, x0, #0x1
   105f8:	ldr	x1, [sp, #40]
   105fc:	str	x2, [x1]
   10600:	ldr	x1, [sp, #48]
   10604:	add	x0, x1, x0
   10608:	ldrb	w0, [x0]
   1060c:	cmp	w0, #0x0
   10610:	b.eq	107b4 <lzma_index_hash_decode@@XZ_5.0+0x518>  // b.none
   10614:	mov	w0, #0x9                   	// #9
   10618:	b	10818 <lzma_index_hash_decode@@XZ_5.0+0x57c>
   1061c:	ldr	x0, [sp, #56]
   10620:	ldr	x1, [x0, #8]
   10624:	ldr	x0, [sp, #56]
   10628:	ldr	x0, [x0, #144]
   1062c:	cmp	x1, x0
   10630:	b.ne	10664 <lzma_index_hash_decode@@XZ_5.0+0x3c8>  // b.any
   10634:	ldr	x0, [sp, #56]
   10638:	ldr	x1, [x0, #16]
   1063c:	ldr	x0, [sp, #56]
   10640:	ldr	x0, [x0, #152]
   10644:	cmp	x1, x0
   10648:	b.ne	10664 <lzma_index_hash_decode@@XZ_5.0+0x3c8>  // b.any
   1064c:	ldr	x0, [sp, #56]
   10650:	ldr	x1, [x0, #32]
   10654:	ldr	x0, [sp, #56]
   10658:	ldr	x0, [x0, #168]
   1065c:	cmp	x1, x0
   10660:	b.eq	1066c <lzma_index_hash_decode@@XZ_5.0+0x3d0>  // b.none
   10664:	mov	w0, #0x9                   	// #9
   10668:	b	10818 <lzma_index_hash_decode@@XZ_5.0+0x57c>
   1066c:	ldr	x0, [sp, #56]
   10670:	add	x0, x0, #0x28
   10674:	mov	w1, #0xa                   	// #10
   10678:	bl	11b38 <lzma_check_size@@XZ_5.0+0x18c>
   1067c:	ldr	x0, [sp, #56]
   10680:	add	x0, x0, #0xb0
   10684:	mov	w1, #0xa                   	// #10
   10688:	bl	11b38 <lzma_check_size@@XZ_5.0+0x18c>
   1068c:	ldr	x0, [sp, #56]
   10690:	add	x19, x0, #0x28
   10694:	ldr	x0, [sp, #56]
   10698:	add	x20, x0, #0xb0
   1069c:	mov	w0, #0xa                   	// #10
   106a0:	bl	3270 <lzma_check_size@plt>
   106a4:	mov	w0, w0
   106a8:	mov	x2, x0
   106ac:	mov	x1, x20
   106b0:	mov	x0, x19
   106b4:	bl	3330 <memcmp@plt>
   106b8:	cmp	w0, #0x0
   106bc:	b.eq	106c8 <lzma_index_hash_decode@@XZ_5.0+0x42c>  // b.none
   106c0:	mov	w0, #0x9                   	// #9
   106c4:	b	10818 <lzma_index_hash_decode@@XZ_5.0+0x57c>
   106c8:	ldr	x1, [sp, #48]
   106cc:	ldr	x0, [sp, #80]
   106d0:	add	x3, x1, x0
   106d4:	ldr	x0, [sp, #40]
   106d8:	ldr	x1, [x0]
   106dc:	ldr	x0, [sp, #80]
   106e0:	sub	x1, x1, x0
   106e4:	ldr	x0, [sp, #56]
   106e8:	ldr	w0, [x0, #312]
   106ec:	mov	w2, w0
   106f0:	mov	x0, x3
   106f4:	bl	31c0 <lzma_crc32@plt>
   106f8:	mov	w1, w0
   106fc:	ldr	x0, [sp, #56]
   10700:	str	w1, [x0, #312]
   10704:	ldr	x0, [sp, #56]
   10708:	mov	w1, #0x6                   	// #6
   1070c:	str	w1, [x0]
   10710:	b	10718 <lzma_index_hash_decode@@XZ_5.0+0x47c>
   10714:	nop
   10718:	ldr	x0, [sp, #40]
   1071c:	ldr	x0, [x0]
   10720:	ldr	x1, [sp, #32]
   10724:	cmp	x1, x0
   10728:	b.ne	10734 <lzma_index_hash_decode@@XZ_5.0+0x498>  // b.any
   1072c:	mov	w0, #0x0                   	// #0
   10730:	b	10818 <lzma_index_hash_decode@@XZ_5.0+0x57c>
   10734:	ldr	x0, [sp, #56]
   10738:	ldr	w1, [x0, #312]
   1073c:	ldr	x0, [sp, #56]
   10740:	ldr	x0, [x0, #304]
   10744:	lsl	w0, w0, #3
   10748:	lsr	w0, w1, w0
   1074c:	and	w1, w0, #0xff
   10750:	ldr	x0, [sp, #40]
   10754:	ldr	x0, [x0]
   10758:	add	x3, x0, #0x1
   1075c:	ldr	x2, [sp, #40]
   10760:	str	x3, [x2]
   10764:	ldr	x2, [sp, #48]
   10768:	add	x0, x2, x0
   1076c:	ldrb	w0, [x0]
   10770:	cmp	w1, w0
   10774:	b.eq	10780 <lzma_index_hash_decode@@XZ_5.0+0x4e4>  // b.none
   10778:	mov	w0, #0x9                   	// #9
   1077c:	b	10818 <lzma_index_hash_decode@@XZ_5.0+0x57c>
   10780:	ldr	x0, [sp, #56]
   10784:	ldr	x0, [x0, #304]
   10788:	add	x1, x0, #0x1
   1078c:	ldr	x0, [sp, #56]
   10790:	str	x1, [x0, #304]
   10794:	ldr	x0, [sp, #56]
   10798:	ldr	x0, [x0, #304]
   1079c:	cmp	x0, #0x3
   107a0:	b.ls	10714 <lzma_index_hash_decode@@XZ_5.0+0x478>  // b.plast
   107a4:	mov	w0, #0x1                   	// #1
   107a8:	b	10818 <lzma_index_hash_decode@@XZ_5.0+0x57c>
   107ac:	mov	w0, #0xb                   	// #11
   107b0:	b	10818 <lzma_index_hash_decode@@XZ_5.0+0x57c>
   107b4:	ldr	x0, [sp, #40]
   107b8:	ldr	x0, [x0]
   107bc:	ldr	x1, [sp, #32]
   107c0:	cmp	x1, x0
   107c4:	b.hi	102e8 <lzma_index_hash_decode@@XZ_5.0+0x4c>  // b.pmore
   107c8:	b	107d8 <lzma_index_hash_decode@@XZ_5.0+0x53c>
   107cc:	nop
   107d0:	b	107d8 <lzma_index_hash_decode@@XZ_5.0+0x53c>
   107d4:	nop
   107d8:	ldr	x1, [sp, #48]
   107dc:	ldr	x0, [sp, #80]
   107e0:	add	x3, x1, x0
   107e4:	ldr	x0, [sp, #40]
   107e8:	ldr	x1, [x0]
   107ec:	ldr	x0, [sp, #80]
   107f0:	sub	x1, x1, x0
   107f4:	ldr	x0, [sp, #56]
   107f8:	ldr	w0, [x0, #312]
   107fc:	mov	w2, w0
   10800:	mov	x0, x3
   10804:	bl	31c0 <lzma_crc32@plt>
   10808:	mov	w1, w0
   1080c:	ldr	x0, [sp, #56]
   10810:	str	w1, [x0, #312]
   10814:	ldr	w0, [sp, #92]
   10818:	ldp	x19, x20, [sp, #16]
   1081c:	ldp	x29, x30, [sp], #96
   10820:	ret

0000000000010824 <lzma_stream_buffer_decode@@XZ_5.0>:
   10824:	sub	sp, sp, #0x110
   10828:	stp	x29, x30, [sp, #16]
   1082c:	add	x29, sp, #0x10
   10830:	str	x0, [sp, #88]
   10834:	str	w1, [sp, #84]
   10838:	str	x2, [sp, #72]
   1083c:	str	x3, [sp, #64]
   10840:	str	x4, [sp, #56]
   10844:	str	x5, [sp, #48]
   10848:	str	x6, [sp, #40]
   1084c:	str	x7, [sp, #32]
   10850:	ldr	x0, [sp, #56]
   10854:	cmp	x0, #0x0
   10858:	b.eq	108d0 <lzma_stream_buffer_decode@@XZ_5.0+0xac>  // b.none
   1085c:	ldr	x0, [sp, #64]
   10860:	cmp	x0, #0x0
   10864:	b.ne	1087c <lzma_stream_buffer_decode@@XZ_5.0+0x58>  // b.any
   10868:	ldr	x0, [sp, #56]
   1086c:	ldr	x0, [x0]
   10870:	ldr	x1, [sp, #48]
   10874:	cmp	x1, x0
   10878:	b.ne	108d0 <lzma_stream_buffer_decode@@XZ_5.0+0xac>  // b.any
   1087c:	ldr	x0, [sp, #56]
   10880:	ldr	x0, [x0]
   10884:	ldr	x1, [sp, #48]
   10888:	cmp	x1, x0
   1088c:	b.cc	108d0 <lzma_stream_buffer_decode@@XZ_5.0+0xac>  // b.lo, b.ul, b.last
   10890:	ldr	x0, [sp, #32]
   10894:	cmp	x0, #0x0
   10898:	b.eq	108d0 <lzma_stream_buffer_decode@@XZ_5.0+0xac>  // b.none
   1089c:	ldr	x0, [sp, #40]
   108a0:	cmp	x0, #0x0
   108a4:	b.ne	108bc <lzma_stream_buffer_decode@@XZ_5.0+0x98>  // b.any
   108a8:	ldr	x0, [sp, #32]
   108ac:	ldr	x0, [x0]
   108b0:	ldr	x1, [sp, #272]
   108b4:	cmp	x1, x0
   108b8:	b.ne	108d0 <lzma_stream_buffer_decode@@XZ_5.0+0xac>  // b.any
   108bc:	ldr	x0, [sp, #32]
   108c0:	ldr	x0, [x0]
   108c4:	ldr	x1, [sp, #272]
   108c8:	cmp	x1, x0
   108cc:	b.cs	108d8 <lzma_stream_buffer_decode@@XZ_5.0+0xb4>  // b.hs, b.nlast
   108d0:	mov	w0, #0xb                   	// #11
   108d4:	b	10a30 <lzma_stream_buffer_decode@@XZ_5.0+0x20c>
   108d8:	ldr	w0, [sp, #84]
   108dc:	and	w0, w0, #0x4
   108e0:	cmp	w0, #0x0
   108e4:	b.eq	108f0 <lzma_stream_buffer_decode@@XZ_5.0+0xcc>  // b.none
   108e8:	mov	w0, #0xb                   	// #11
   108ec:	b	10a30 <lzma_stream_buffer_decode@@XZ_5.0+0x20c>
   108f0:	str	xzr, [sp, #176]
   108f4:	mov	x0, #0xffffffffffffffff    	// #-1
   108f8:	str	x0, [sp, #184]
   108fc:	str	xzr, [sp, #192]
   10900:	str	xzr, [sp, #200]
   10904:	str	xzr, [sp, #208]
   10908:	str	xzr, [sp, #216]
   1090c:	str	xzr, [sp, #224]
   10910:	str	xzr, [sp, #232]
   10914:	str	xzr, [sp, #240]
   10918:	ldr	x0, [sp, #88]
   1091c:	ldr	x1, [x0]
   10920:	add	x0, sp, #0xb0
   10924:	ldr	w3, [sp, #84]
   10928:	mov	x2, x1
   1092c:	ldr	x1, [sp, #72]
   10930:	bl	11274 <lzma_stream_buffer_decode@@XZ_5.0+0xa50>
   10934:	str	w0, [sp, #268]
   10938:	ldr	w0, [sp, #268]
   1093c:	cmp	w0, #0x0
   10940:	b.ne	10a20 <lzma_stream_buffer_decode@@XZ_5.0+0x1fc>  // b.any
   10944:	ldr	x0, [sp, #56]
   10948:	ldr	x0, [x0]
   1094c:	str	x0, [sp, #256]
   10950:	ldr	x0, [sp, #32]
   10954:	ldr	x0, [x0]
   10958:	str	x0, [sp, #248]
   1095c:	ldr	x8, [sp, #200]
   10960:	ldr	x9, [sp, #176]
   10964:	mov	w0, #0x3                   	// #3
   10968:	str	w0, [sp]
   1096c:	ldr	x7, [sp, #272]
   10970:	ldr	x6, [sp, #32]
   10974:	ldr	x5, [sp, #40]
   10978:	ldr	x4, [sp, #48]
   1097c:	ldr	x3, [sp, #56]
   10980:	ldr	x2, [sp, #64]
   10984:	ldr	x1, [sp, #72]
   10988:	mov	x0, x9
   1098c:	blr	x8
   10990:	str	w0, [sp, #268]
   10994:	ldr	w0, [sp, #268]
   10998:	cmp	w0, #0x1
   1099c:	b.ne	109a8 <lzma_stream_buffer_decode@@XZ_5.0+0x184>  // b.any
   109a0:	str	wzr, [sp, #268]
   109a4:	b	10a20 <lzma_stream_buffer_decode@@XZ_5.0+0x1fc>
   109a8:	ldr	x0, [sp, #56]
   109ac:	ldr	x1, [sp, #256]
   109b0:	str	x1, [x0]
   109b4:	ldr	x0, [sp, #32]
   109b8:	ldr	x1, [sp, #248]
   109bc:	str	x1, [x0]
   109c0:	ldr	w0, [sp, #268]
   109c4:	cmp	w0, #0x0
   109c8:	b.ne	109f8 <lzma_stream_buffer_decode@@XZ_5.0+0x1d4>  // b.any
   109cc:	ldr	x0, [sp, #56]
   109d0:	ldr	x0, [x0]
   109d4:	ldr	x1, [sp, #48]
   109d8:	cmp	x1, x0
   109dc:	b.ne	109ec <lzma_stream_buffer_decode@@XZ_5.0+0x1c8>  // b.any
   109e0:	mov	w0, #0x9                   	// #9
   109e4:	str	w0, [sp, #268]
   109e8:	b	10a20 <lzma_stream_buffer_decode@@XZ_5.0+0x1fc>
   109ec:	mov	w0, #0xa                   	// #10
   109f0:	str	w0, [sp, #268]
   109f4:	b	10a20 <lzma_stream_buffer_decode@@XZ_5.0+0x1fc>
   109f8:	ldr	w0, [sp, #268]
   109fc:	cmp	w0, #0x6
   10a00:	b.ne	10a20 <lzma_stream_buffer_decode@@XZ_5.0+0x1fc>  // b.any
   10a04:	ldr	x4, [sp, #232]
   10a08:	ldr	x0, [sp, #176]
   10a0c:	add	x1, sp, #0x60
   10a10:	mov	x3, #0x0                   	// #0
   10a14:	mov	x2, x1
   10a18:	ldr	x1, [sp, #88]
   10a1c:	blr	x4
   10a20:	add	x0, sp, #0xb0
   10a24:	ldr	x1, [sp, #72]
   10a28:	bl	3a48 <lzma_version_string@@XZ_5.0+0x358>
   10a2c:	ldr	w0, [sp, #268]
   10a30:	ldp	x29, x30, [sp, #16]
   10a34:	add	sp, sp, #0x110
   10a38:	ret
   10a3c:	stp	x29, x30, [sp, #-32]!
   10a40:	mov	x29, sp
   10a44:	str	x0, [sp, #24]
   10a48:	str	x1, [sp, #16]
   10a4c:	ldr	x0, [sp, #24]
   10a50:	ldr	x0, [x0, #344]
   10a54:	ldr	x1, [sp, #16]
   10a58:	bl	3280 <lzma_index_hash_init@plt>
   10a5c:	mov	x1, x0
   10a60:	ldr	x0, [sp, #24]
   10a64:	str	x1, [x0, #344]
   10a68:	ldr	x0, [sp, #24]
   10a6c:	ldr	x0, [x0, #344]
   10a70:	cmp	x0, #0x0
   10a74:	b.ne	10a80 <lzma_stream_buffer_decode@@XZ_5.0+0x25c>  // b.any
   10a78:	mov	w0, #0x5                   	// #5
   10a7c:	b	10a94 <lzma_stream_buffer_decode@@XZ_5.0+0x270>
   10a80:	ldr	x0, [sp, #24]
   10a84:	str	wzr, [x0]
   10a88:	ldr	x0, [sp, #24]
   10a8c:	str	xzr, [x0, #376]
   10a90:	mov	w0, #0x0                   	// #0
   10a94:	ldp	x29, x30, [sp], #32
   10a98:	ret
   10a9c:	sub	sp, sp, #0x100
   10aa0:	stp	x29, x30, [sp, #16]
   10aa4:	add	x29, sp, #0x10
   10aa8:	str	x19, [sp, #32]
   10aac:	str	x0, [sp, #104]
   10ab0:	str	x1, [sp, #96]
   10ab4:	str	x2, [sp, #88]
   10ab8:	str	x3, [sp, #80]
   10abc:	str	x4, [sp, #72]
   10ac0:	str	x5, [sp, #64]
   10ac4:	str	x6, [sp, #56]
   10ac8:	str	x7, [sp, #48]
   10acc:	ldr	x0, [sp, #104]
   10ad0:	str	x0, [sp, #232]
   10ad4:	ldr	x0, [sp, #232]
   10ad8:	ldr	w0, [x0]
   10adc:	cmp	w0, #0x5
   10ae0:	b.eq	11080 <lzma_stream_buffer_decode@@XZ_5.0+0x85c>  // b.none
   10ae4:	cmp	w0, #0x5
   10ae8:	b.hi	11168 <lzma_stream_buffer_decode@@XZ_5.0+0x944>  // b.pmore
   10aec:	cmp	w0, #0x4
   10af0:	b.eq	10f80 <lzma_stream_buffer_decode@@XZ_5.0+0x75c>  // b.none
   10af4:	cmp	w0, #0x4
   10af8:	b.hi	11168 <lzma_stream_buffer_decode@@XZ_5.0+0x944>  // b.pmore
   10afc:	cmp	w0, #0x3
   10b00:	b.eq	10f28 <lzma_stream_buffer_decode@@XZ_5.0+0x704>  // b.none
   10b04:	cmp	w0, #0x3
   10b08:	b.hi	11168 <lzma_stream_buffer_decode@@XZ_5.0+0x944>  // b.pmore
   10b0c:	cmp	w0, #0x2
   10b10:	b.eq	10e80 <lzma_stream_buffer_decode@@XZ_5.0+0x65c>  // b.none
   10b14:	cmp	w0, #0x2
   10b18:	b.hi	11168 <lzma_stream_buffer_decode@@XZ_5.0+0x944>  // b.pmore
   10b1c:	cmp	w0, #0x0
   10b20:	b.eq	10b30 <lzma_stream_buffer_decode@@XZ_5.0+0x30c>  // b.none
   10b24:	cmp	w0, #0x1
   10b28:	b.eq	10c68 <lzma_stream_buffer_decode@@XZ_5.0+0x444>  // b.none
   10b2c:	b	11168 <lzma_stream_buffer_decode@@XZ_5.0+0x944>
   10b30:	ldr	x0, [sp, #232]
   10b34:	add	x1, x0, #0x180
   10b38:	ldr	x0, [sp, #232]
   10b3c:	add	x0, x0, #0x178
   10b40:	mov	x5, #0xc                   	// #12
   10b44:	mov	x4, x0
   10b48:	mov	x3, x1
   10b4c:	ldr	x2, [sp, #72]
   10b50:	ldr	x1, [sp, #80]
   10b54:	ldr	x0, [sp, #88]
   10b58:	bl	3870 <lzma_version_string@@XZ_5.0+0x180>
   10b5c:	ldr	x0, [sp, #232]
   10b60:	ldr	x0, [x0, #376]
   10b64:	cmp	x0, #0xb
   10b68:	b.hi	10b74 <lzma_stream_buffer_decode@@XZ_5.0+0x350>  // b.pmore
   10b6c:	mov	w0, #0x0                   	// #0
   10b70:	b	11178 <lzma_stream_buffer_decode@@XZ_5.0+0x954>
   10b74:	ldr	x0, [sp, #232]
   10b78:	str	xzr, [x0, #376]
   10b7c:	ldr	x0, [sp, #232]
   10b80:	add	x2, x0, #0x120
   10b84:	ldr	x0, [sp, #232]
   10b88:	add	x0, x0, #0x180
   10b8c:	mov	x1, x0
   10b90:	mov	x0, x2
   10b94:	bl	34f0 <lzma_stream_header_decode@plt>
   10b98:	str	w0, [sp, #212]
   10b9c:	ldr	w0, [sp, #212]
   10ba0:	cmp	w0, #0x0
   10ba4:	b.eq	10bd4 <lzma_stream_buffer_decode@@XZ_5.0+0x3b0>  // b.none
   10ba8:	ldr	w0, [sp, #212]
   10bac:	cmp	w0, #0x7
   10bb0:	b.ne	10bc4 <lzma_stream_buffer_decode@@XZ_5.0+0x3a0>  // b.any
   10bb4:	ldr	x0, [sp, #232]
   10bb8:	ldrb	w0, [x0, #373]
   10bbc:	cmp	w0, #0x0
   10bc0:	b.eq	10bcc <lzma_stream_buffer_decode@@XZ_5.0+0x3a8>  // b.none
   10bc4:	ldr	w0, [sp, #212]
   10bc8:	b	11178 <lzma_stream_buffer_decode@@XZ_5.0+0x954>
   10bcc:	mov	w0, #0x9                   	// #9
   10bd0:	b	11178 <lzma_stream_buffer_decode@@XZ_5.0+0x954>
   10bd4:	ldr	x0, [sp, #232]
   10bd8:	strb	wzr, [x0, #373]
   10bdc:	ldr	x0, [sp, #232]
   10be0:	ldr	w1, [x0, #304]
   10be4:	ldr	x0, [sp, #232]
   10be8:	str	w1, [x0, #88]
   10bec:	ldr	x0, [sp, #232]
   10bf0:	mov	w1, #0x1                   	// #1
   10bf4:	str	w1, [x0]
   10bf8:	ldr	x0, [sp, #232]
   10bfc:	ldrb	w0, [x0, #368]
   10c00:	cmp	w0, #0x0
   10c04:	b.eq	10c20 <lzma_stream_buffer_decode@@XZ_5.0+0x3fc>  // b.none
   10c08:	ldr	x0, [sp, #232]
   10c0c:	ldr	w0, [x0, #304]
   10c10:	cmp	w0, #0x0
   10c14:	b.ne	10c20 <lzma_stream_buffer_decode@@XZ_5.0+0x3fc>  // b.any
   10c18:	mov	w0, #0x2                   	// #2
   10c1c:	b	11178 <lzma_stream_buffer_decode@@XZ_5.0+0x954>
   10c20:	ldr	x0, [sp, #232]
   10c24:	ldrb	w0, [x0, #369]
   10c28:	cmp	w0, #0x0
   10c2c:	b.eq	10c50 <lzma_stream_buffer_decode@@XZ_5.0+0x42c>  // b.none
   10c30:	ldr	x0, [sp, #232]
   10c34:	ldr	w0, [x0, #304]
   10c38:	bl	30e0 <lzma_check_is_supported@plt>
   10c3c:	and	w0, w0, #0xff
   10c40:	cmp	w0, #0x0
   10c44:	b.ne	10c50 <lzma_stream_buffer_decode@@XZ_5.0+0x42c>  // b.any
   10c48:	mov	w0, #0x3                   	// #3
   10c4c:	b	11178 <lzma_stream_buffer_decode@@XZ_5.0+0x954>
   10c50:	ldr	x0, [sp, #232]
   10c54:	ldrb	w0, [x0, #370]
   10c58:	cmp	w0, #0x0
   10c5c:	b.eq	10c68 <lzma_stream_buffer_decode@@XZ_5.0+0x444>  // b.none
   10c60:	mov	w0, #0x4                   	// #4
   10c64:	b	11178 <lzma_stream_buffer_decode@@XZ_5.0+0x954>
   10c68:	ldr	x0, [sp, #80]
   10c6c:	ldr	x0, [x0]
   10c70:	ldr	x1, [sp, #72]
   10c74:	cmp	x1, x0
   10c78:	b.hi	10c84 <lzma_stream_buffer_decode@@XZ_5.0+0x460>  // b.pmore
   10c7c:	mov	w0, #0x0                   	// #0
   10c80:	b	11178 <lzma_stream_buffer_decode@@XZ_5.0+0x954>
   10c84:	ldr	x0, [sp, #232]
   10c88:	ldr	x0, [x0, #376]
   10c8c:	cmp	x0, #0x0
   10c90:	b.ne	10ce4 <lzma_stream_buffer_decode@@XZ_5.0+0x4c0>  // b.any
   10c94:	ldr	x0, [sp, #80]
   10c98:	ldr	x0, [x0]
   10c9c:	ldr	x1, [sp, #88]
   10ca0:	add	x0, x1, x0
   10ca4:	ldrb	w0, [x0]
   10ca8:	cmp	w0, #0x0
   10cac:	b.ne	10cc0 <lzma_stream_buffer_decode@@XZ_5.0+0x49c>  // b.any
   10cb0:	ldr	x0, [sp, #232]
   10cb4:	mov	w1, #0x3                   	// #3
   10cb8:	str	w1, [x0]
   10cbc:	b	10ad4 <lzma_stream_buffer_decode@@XZ_5.0+0x2b0>
   10cc0:	ldr	x0, [sp, #80]
   10cc4:	ldr	x0, [x0]
   10cc8:	ldr	x1, [sp, #88]
   10ccc:	add	x0, x1, x0
   10cd0:	ldrb	w0, [x0]
   10cd4:	add	w0, w0, #0x1
   10cd8:	lsl	w1, w0, #2
   10cdc:	ldr	x0, [sp, #232]
   10ce0:	str	w1, [x0, #84]
   10ce4:	ldr	x0, [sp, #232]
   10ce8:	add	x1, x0, #0x180
   10cec:	ldr	x0, [sp, #232]
   10cf0:	add	x2, x0, #0x178
   10cf4:	ldr	x0, [sp, #232]
   10cf8:	ldr	w0, [x0, #84]
   10cfc:	mov	w0, w0
   10d00:	mov	x5, x0
   10d04:	mov	x4, x2
   10d08:	mov	x3, x1
   10d0c:	ldr	x2, [sp, #72]
   10d10:	ldr	x1, [sp, #80]
   10d14:	ldr	x0, [sp, #88]
   10d18:	bl	3870 <lzma_version_string@@XZ_5.0+0x180>
   10d1c:	ldr	x0, [sp, #232]
   10d20:	ldr	x1, [x0, #376]
   10d24:	ldr	x0, [sp, #232]
   10d28:	ldr	w0, [x0, #84]
   10d2c:	mov	w0, w0
   10d30:	cmp	x1, x0
   10d34:	b.cs	10d40 <lzma_stream_buffer_decode@@XZ_5.0+0x51c>  // b.hs, b.nlast
   10d38:	mov	w0, #0x0                   	// #0
   10d3c:	b	11178 <lzma_stream_buffer_decode@@XZ_5.0+0x954>
   10d40:	ldr	x0, [sp, #232]
   10d44:	str	xzr, [x0, #376]
   10d48:	ldr	x0, [sp, #232]
   10d4c:	mov	w1, #0x1                   	// #1
   10d50:	str	w1, [x0, #80]
   10d54:	ldr	x0, [sp, #232]
   10d58:	add	x1, sp, #0x70
   10d5c:	str	x1, [x0, #112]
   10d60:	ldr	x0, [sp, #232]
   10d64:	add	x3, x0, #0x50
   10d68:	ldr	x0, [sp, #232]
   10d6c:	add	x0, x0, #0x180
   10d70:	mov	x2, x0
   10d74:	ldr	x1, [sp, #96]
   10d78:	mov	x0, x3
   10d7c:	bl	3340 <lzma_block_header_decode@plt>
   10d80:	str	w0, [sp, #208]
   10d84:	ldr	w0, [sp, #208]
   10d88:	cmp	w0, #0x0
   10d8c:	b.eq	10d98 <lzma_stream_buffer_decode@@XZ_5.0+0x574>  // b.none
   10d90:	ldr	w0, [sp, #208]
   10d94:	b	11178 <lzma_stream_buffer_decode@@XZ_5.0+0x954>
   10d98:	ldr	x0, [sp, #232]
   10d9c:	ldrb	w0, [x0, #371]
   10da0:	mov	w1, w0
   10da4:	ldr	x0, [sp, #232]
   10da8:	strb	w1, [x0, #280]
   10dac:	add	x0, sp, #0x70
   10db0:	bl	32e0 <lzma_raw_decoder_memusage@plt>
   10db4:	str	x0, [sp, #200]
   10db8:	ldr	x0, [sp, #200]
   10dbc:	cmn	x0, #0x1
   10dc0:	b.ne	10dd0 <lzma_stream_buffer_decode@@XZ_5.0+0x5ac>  // b.any
   10dc4:	mov	w0, #0x8                   	// #8
   10dc8:	str	w0, [sp, #252]
   10dcc:	b	10e20 <lzma_stream_buffer_decode@@XZ_5.0+0x5fc>
   10dd0:	ldr	x0, [sp, #232]
   10dd4:	ldr	x1, [sp, #200]
   10dd8:	str	x1, [x0, #360]
   10ddc:	ldr	x0, [sp, #232]
   10de0:	ldr	x0, [x0, #352]
   10de4:	ldr	x1, [sp, #200]
   10de8:	cmp	x1, x0
   10dec:	b.ls	10dfc <lzma_stream_buffer_decode@@XZ_5.0+0x5d8>  // b.plast
   10df0:	mov	w0, #0x6                   	// #6
   10df4:	str	w0, [sp, #252]
   10df8:	b	10e20 <lzma_stream_buffer_decode@@XZ_5.0+0x5fc>
   10dfc:	ldr	x0, [sp, #232]
   10e00:	add	x3, x0, #0x8
   10e04:	ldr	x0, [sp, #232]
   10e08:	add	x0, x0, #0x50
   10e0c:	mov	x2, x0
   10e10:	ldr	x1, [sp, #96]
   10e14:	mov	x0, x3
   10e18:	bl	e930 <lzma_block_buffer_decode@@XZ_5.0+0x6d0>
   10e1c:	str	w0, [sp, #252]
   10e20:	str	xzr, [sp, #240]
   10e24:	b	10e4c <lzma_stream_buffer_decode@@XZ_5.0+0x628>
   10e28:	ldr	x0, [sp, #240]
   10e2c:	lsl	x0, x0, #4
   10e30:	add	x1, sp, #0x78
   10e34:	ldr	x0, [x1, x0]
   10e38:	ldr	x1, [sp, #96]
   10e3c:	bl	3814 <lzma_version_string@@XZ_5.0+0x124>
   10e40:	ldr	x0, [sp, #240]
   10e44:	add	x0, x0, #0x1
   10e48:	str	x0, [sp, #240]
   10e4c:	ldr	x0, [sp, #240]
   10e50:	cmp	x0, #0x3
   10e54:	b.ls	10e28 <lzma_stream_buffer_decode@@XZ_5.0+0x604>  // b.plast
   10e58:	ldr	x0, [sp, #232]
   10e5c:	str	xzr, [x0, #112]
   10e60:	ldr	w0, [sp, #252]
   10e64:	cmp	w0, #0x0
   10e68:	b.eq	10e74 <lzma_stream_buffer_decode@@XZ_5.0+0x650>  // b.none
   10e6c:	ldr	w0, [sp, #252]
   10e70:	b	11178 <lzma_stream_buffer_decode@@XZ_5.0+0x954>
   10e74:	ldr	x0, [sp, #232]
   10e78:	mov	w1, #0x2                   	// #2
   10e7c:	str	w1, [x0]
   10e80:	ldr	x0, [sp, #232]
   10e84:	ldr	x8, [x0, #32]
   10e88:	ldr	x0, [sp, #232]
   10e8c:	ldr	x9, [x0, #8]
   10e90:	ldr	w0, [sp, #256]
   10e94:	str	w0, [sp]
   10e98:	ldr	x7, [sp, #48]
   10e9c:	ldr	x6, [sp, #56]
   10ea0:	ldr	x5, [sp, #64]
   10ea4:	ldr	x4, [sp, #72]
   10ea8:	ldr	x3, [sp, #80]
   10eac:	ldr	x2, [sp, #88]
   10eb0:	ldr	x1, [sp, #96]
   10eb4:	mov	x0, x9
   10eb8:	blr	x8
   10ebc:	str	w0, [sp, #196]
   10ec0:	ldr	w0, [sp, #196]
   10ec4:	cmp	w0, #0x1
   10ec8:	b.eq	10ed4 <lzma_stream_buffer_decode@@XZ_5.0+0x6b0>  // b.none
   10ecc:	ldr	w0, [sp, #196]
   10ed0:	b	11178 <lzma_stream_buffer_decode@@XZ_5.0+0x954>
   10ed4:	ldr	x0, [sp, #232]
   10ed8:	ldr	x19, [x0, #344]
   10edc:	ldr	x0, [sp, #232]
   10ee0:	add	x0, x0, #0x50
   10ee4:	bl	3190 <lzma_block_unpadded_size@plt>
   10ee8:	mov	x1, x0
   10eec:	ldr	x0, [sp, #232]
   10ef0:	ldr	x0, [x0, #104]
   10ef4:	mov	x2, x0
   10ef8:	mov	x0, x19
   10efc:	bl	31b0 <lzma_index_hash_append@plt>
   10f00:	str	w0, [sp, #192]
   10f04:	ldr	w0, [sp, #192]
   10f08:	cmp	w0, #0x0
   10f0c:	b.eq	10f18 <lzma_stream_buffer_decode@@XZ_5.0+0x6f4>  // b.none
   10f10:	ldr	w0, [sp, #192]
   10f14:	b	11178 <lzma_stream_buffer_decode@@XZ_5.0+0x954>
   10f18:	ldr	x0, [sp, #232]
   10f1c:	mov	w1, #0x1                   	// #1
   10f20:	str	w1, [x0]
   10f24:	b	11174 <lzma_stream_buffer_decode@@XZ_5.0+0x950>
   10f28:	ldr	x0, [sp, #80]
   10f2c:	ldr	x0, [x0]
   10f30:	ldr	x1, [sp, #72]
   10f34:	cmp	x1, x0
   10f38:	b.hi	10f44 <lzma_stream_buffer_decode@@XZ_5.0+0x720>  // b.pmore
   10f3c:	mov	w0, #0x0                   	// #0
   10f40:	b	11178 <lzma_stream_buffer_decode@@XZ_5.0+0x954>
   10f44:	ldr	x0, [sp, #232]
   10f48:	ldr	x0, [x0, #344]
   10f4c:	ldr	x3, [sp, #72]
   10f50:	ldr	x2, [sp, #80]
   10f54:	ldr	x1, [sp, #88]
   10f58:	bl	3130 <lzma_index_hash_decode@plt>
   10f5c:	str	w0, [sp, #228]
   10f60:	ldr	w0, [sp, #228]
   10f64:	cmp	w0, #0x1
   10f68:	b.eq	10f74 <lzma_stream_buffer_decode@@XZ_5.0+0x750>  // b.none
   10f6c:	ldr	w0, [sp, #228]
   10f70:	b	11178 <lzma_stream_buffer_decode@@XZ_5.0+0x954>
   10f74:	ldr	x0, [sp, #232]
   10f78:	mov	w1, #0x4                   	// #4
   10f7c:	str	w1, [x0]
   10f80:	ldr	x0, [sp, #232]
   10f84:	add	x1, x0, #0x180
   10f88:	ldr	x0, [sp, #232]
   10f8c:	add	x0, x0, #0x178
   10f90:	mov	x5, #0xc                   	// #12
   10f94:	mov	x4, x0
   10f98:	mov	x3, x1
   10f9c:	ldr	x2, [sp, #72]
   10fa0:	ldr	x1, [sp, #80]
   10fa4:	ldr	x0, [sp, #88]
   10fa8:	bl	3870 <lzma_version_string@@XZ_5.0+0x180>
   10fac:	ldr	x0, [sp, #232]
   10fb0:	ldr	x0, [x0, #376]
   10fb4:	cmp	x0, #0xb
   10fb8:	b.hi	10fc4 <lzma_stream_buffer_decode@@XZ_5.0+0x7a0>  // b.pmore
   10fbc:	mov	w0, #0x0                   	// #0
   10fc0:	b	11178 <lzma_stream_buffer_decode@@XZ_5.0+0x954>
   10fc4:	ldr	x0, [sp, #232]
   10fc8:	str	xzr, [x0, #376]
   10fcc:	ldr	x0, [sp, #232]
   10fd0:	add	x1, x0, #0x180
   10fd4:	add	x0, sp, #0x70
   10fd8:	bl	3430 <lzma_stream_footer_decode@plt>
   10fdc:	str	w0, [sp, #224]
   10fe0:	ldr	w0, [sp, #224]
   10fe4:	cmp	w0, #0x0
   10fe8:	b.eq	11008 <lzma_stream_buffer_decode@@XZ_5.0+0x7e4>  // b.none
   10fec:	ldr	w0, [sp, #224]
   10ff0:	cmp	w0, #0x7
   10ff4:	b.eq	11000 <lzma_stream_buffer_decode@@XZ_5.0+0x7dc>  // b.none
   10ff8:	ldr	w0, [sp, #224]
   10ffc:	b	11178 <lzma_stream_buffer_decode@@XZ_5.0+0x954>
   11000:	mov	w0, #0x9                   	// #9
   11004:	b	11178 <lzma_stream_buffer_decode@@XZ_5.0+0x954>
   11008:	ldr	x0, [sp, #232]
   1100c:	ldr	x0, [x0, #344]
   11010:	bl	34d0 <lzma_index_hash_size@plt>
   11014:	mov	x1, x0
   11018:	ldr	x0, [sp, #120]
   1101c:	cmp	x1, x0
   11020:	b.eq	1102c <lzma_stream_buffer_decode@@XZ_5.0+0x808>  // b.none
   11024:	mov	w0, #0x9                   	// #9
   11028:	b	11178 <lzma_stream_buffer_decode@@XZ_5.0+0x954>
   1102c:	ldr	x0, [sp, #232]
   11030:	add	x0, x0, #0x120
   11034:	add	x1, sp, #0x70
   11038:	bl	3110 <lzma_stream_flags_compare@plt>
   1103c:	str	w0, [sp, #220]
   11040:	ldr	w0, [sp, #220]
   11044:	cmp	w0, #0x0
   11048:	b.eq	11054 <lzma_stream_buffer_decode@@XZ_5.0+0x830>  // b.none
   1104c:	ldr	w0, [sp, #220]
   11050:	b	11178 <lzma_stream_buffer_decode@@XZ_5.0+0x954>
   11054:	ldr	x0, [sp, #232]
   11058:	ldrb	w0, [x0, #372]
   1105c:	eor	w0, w0, #0x1
   11060:	and	w0, w0, #0xff
   11064:	cmp	w0, #0x0
   11068:	b.eq	11074 <lzma_stream_buffer_decode@@XZ_5.0+0x850>  // b.none
   1106c:	mov	w0, #0x1                   	// #1
   11070:	b	11178 <lzma_stream_buffer_decode@@XZ_5.0+0x954>
   11074:	ldr	x0, [sp, #232]
   11078:	mov	w1, #0x5                   	// #5
   1107c:	str	w1, [x0]
   11080:	ldr	x0, [sp, #80]
   11084:	ldr	x0, [x0]
   11088:	ldr	x1, [sp, #72]
   1108c:	cmp	x1, x0
   11090:	b.hi	110c8 <lzma_stream_buffer_decode@@XZ_5.0+0x8a4>  // b.pmore
   11094:	ldr	w0, [sp, #256]
   11098:	cmp	w0, #0x3
   1109c:	b.eq	110a8 <lzma_stream_buffer_decode@@XZ_5.0+0x884>  // b.none
   110a0:	mov	w0, #0x0                   	// #0
   110a4:	b	11178 <lzma_stream_buffer_decode@@XZ_5.0+0x954>
   110a8:	ldr	x0, [sp, #232]
   110ac:	ldr	x0, [x0, #376]
   110b0:	cmp	x0, #0x0
   110b4:	b.ne	110c0 <lzma_stream_buffer_decode@@XZ_5.0+0x89c>  // b.any
   110b8:	mov	w0, #0x1                   	// #1
   110bc:	b	11178 <lzma_stream_buffer_decode@@XZ_5.0+0x954>
   110c0:	mov	w0, #0x9                   	// #9
   110c4:	b	11178 <lzma_stream_buffer_decode@@XZ_5.0+0x954>
   110c8:	ldr	x0, [sp, #80]
   110cc:	ldr	x0, [x0]
   110d0:	ldr	x1, [sp, #88]
   110d4:	add	x0, x1, x0
   110d8:	ldrb	w0, [x0]
   110dc:	cmp	w0, #0x0
   110e0:	b.ne	11114 <lzma_stream_buffer_decode@@XZ_5.0+0x8f0>  // b.any
   110e4:	ldr	x0, [sp, #80]
   110e8:	ldr	x0, [x0]
   110ec:	add	x1, x0, #0x1
   110f0:	ldr	x0, [sp, #80]
   110f4:	str	x1, [x0]
   110f8:	ldr	x0, [sp, #232]
   110fc:	ldr	x0, [x0, #376]
   11100:	add	x0, x0, #0x1
   11104:	and	x1, x0, #0x3
   11108:	ldr	x0, [sp, #232]
   1110c:	str	x1, [x0, #376]
   11110:	b	11080 <lzma_stream_buffer_decode@@XZ_5.0+0x85c>
   11114:	nop
   11118:	ldr	x0, [sp, #232]
   1111c:	ldr	x0, [x0, #376]
   11120:	cmp	x0, #0x0
   11124:	b.eq	11144 <lzma_stream_buffer_decode@@XZ_5.0+0x920>  // b.none
   11128:	ldr	x0, [sp, #80]
   1112c:	ldr	x0, [x0]
   11130:	add	x1, x0, #0x1
   11134:	ldr	x0, [sp, #80]
   11138:	str	x1, [x0]
   1113c:	mov	w0, #0x9                   	// #9
   11140:	b	11178 <lzma_stream_buffer_decode@@XZ_5.0+0x954>
   11144:	ldr	x1, [sp, #96]
   11148:	ldr	x0, [sp, #232]
   1114c:	bl	10a3c <lzma_stream_buffer_decode@@XZ_5.0+0x218>
   11150:	str	w0, [sp, #216]
   11154:	ldr	w0, [sp, #216]
   11158:	cmp	w0, #0x0
   1115c:	b.eq	11170 <lzma_stream_buffer_decode@@XZ_5.0+0x94c>  // b.none
   11160:	ldr	w0, [sp, #216]
   11164:	b	11178 <lzma_stream_buffer_decode@@XZ_5.0+0x954>
   11168:	mov	w0, #0xb                   	// #11
   1116c:	b	11178 <lzma_stream_buffer_decode@@XZ_5.0+0x954>
   11170:	nop
   11174:	b	10ad4 <lzma_stream_buffer_decode@@XZ_5.0+0x2b0>
   11178:	ldr	x19, [sp, #32]
   1117c:	ldp	x29, x30, [sp, #16]
   11180:	add	sp, sp, #0x100
   11184:	ret
   11188:	stp	x29, x30, [sp, #-48]!
   1118c:	mov	x29, sp
   11190:	str	x0, [sp, #24]
   11194:	str	x1, [sp, #16]
   11198:	ldr	x0, [sp, #24]
   1119c:	str	x0, [sp, #40]
   111a0:	ldr	x0, [sp, #40]
   111a4:	add	x0, x0, #0x8
   111a8:	ldr	x1, [sp, #16]
   111ac:	bl	3a48 <lzma_version_string@@XZ_5.0+0x358>
   111b0:	ldr	x0, [sp, #40]
   111b4:	ldr	x0, [x0, #344]
   111b8:	ldr	x1, [sp, #16]
   111bc:	bl	3310 <lzma_index_hash_end@plt>
   111c0:	ldr	x1, [sp, #16]
   111c4:	ldr	x0, [sp, #40]
   111c8:	bl	3814 <lzma_version_string@@XZ_5.0+0x124>
   111cc:	nop
   111d0:	ldp	x29, x30, [sp], #48
   111d4:	ret
   111d8:	sub	sp, sp, #0x20
   111dc:	str	x0, [sp, #8]
   111e0:	ldr	x0, [sp, #8]
   111e4:	str	x0, [sp, #24]
   111e8:	ldr	x0, [sp, #24]
   111ec:	ldr	w0, [x0, #304]
   111f0:	add	sp, sp, #0x20
   111f4:	ret
   111f8:	sub	sp, sp, #0x30
   111fc:	str	x0, [sp, #24]
   11200:	str	x1, [sp, #16]
   11204:	str	x2, [sp, #8]
   11208:	str	x3, [sp]
   1120c:	ldr	x0, [sp, #24]
   11210:	str	x0, [sp, #40]
   11214:	ldr	x0, [sp, #40]
   11218:	ldr	x1, [x0, #360]
   1121c:	ldr	x0, [sp, #16]
   11220:	str	x1, [x0]
   11224:	ldr	x0, [sp, #40]
   11228:	ldr	x1, [x0, #352]
   1122c:	ldr	x0, [sp, #8]
   11230:	str	x1, [x0]
   11234:	ldr	x0, [sp]
   11238:	cmp	x0, #0x0
   1123c:	b.eq	11268 <lzma_stream_buffer_decode@@XZ_5.0+0xa44>  // b.none
   11240:	ldr	x0, [sp, #40]
   11244:	ldr	x0, [x0, #360]
   11248:	ldr	x1, [sp]
   1124c:	cmp	x1, x0
   11250:	b.cs	1125c <lzma_stream_buffer_decode@@XZ_5.0+0xa38>  // b.hs, b.nlast
   11254:	mov	w0, #0x6                   	// #6
   11258:	b	1126c <lzma_stream_buffer_decode@@XZ_5.0+0xa48>
   1125c:	ldr	x0, [sp, #40]
   11260:	ldr	x1, [sp]
   11264:	str	x1, [x0, #352]
   11268:	mov	w0, #0x0                   	// #0
   1126c:	add	sp, sp, #0x30
   11270:	ret
   11274:	stp	x29, x30, [sp, #-128]!
   11278:	mov	x29, sp
   1127c:	str	x0, [sp, #40]
   11280:	str	x1, [sp, #32]
   11284:	str	x2, [sp, #24]
   11288:	str	w3, [sp, #20]
   1128c:	ldr	x0, [sp, #40]
   11290:	ldr	x1, [x0, #16]
   11294:	adrp	x0, 11000 <lzma_stream_buffer_decode@@XZ_5.0+0x7dc>
   11298:	add	x0, x0, #0x274
   1129c:	cmp	x1, x0
   112a0:	b.eq	112b0 <lzma_stream_buffer_decode@@XZ_5.0+0xa8c>  // b.none
   112a4:	ldr	x1, [sp, #32]
   112a8:	ldr	x0, [sp, #40]
   112ac:	bl	3a48 <lzma_version_string@@XZ_5.0+0x358>
   112b0:	adrp	x0, 11000 <lzma_stream_buffer_decode@@XZ_5.0+0x7dc>
   112b4:	add	x1, x0, #0x274
   112b8:	ldr	x0, [sp, #40]
   112bc:	str	x1, [x0, #16]
   112c0:	ldr	w0, [sp, #20]
   112c4:	and	w0, w0, #0xffffffe0
   112c8:	cmp	w0, #0x0
   112cc:	b.eq	112d8 <lzma_stream_buffer_decode@@XZ_5.0+0xab4>  // b.none
   112d0:	mov	w0, #0x8                   	// #8
   112d4:	b	11484 <lzma_stream_buffer_decode@@XZ_5.0+0xc60>
   112d8:	ldr	x0, [sp, #40]
   112dc:	ldr	x0, [x0]
   112e0:	str	x0, [sp, #120]
   112e4:	ldr	x0, [sp, #120]
   112e8:	cmp	x0, #0x0
   112ec:	b.ne	113b4 <lzma_stream_buffer_decode@@XZ_5.0+0xb90>  // b.any
   112f0:	ldr	x1, [sp, #32]
   112f4:	mov	x0, #0x580                 	// #1408
   112f8:	bl	36fc <lzma_version_string@@XZ_5.0+0xc>
   112fc:	str	x0, [sp, #120]
   11300:	ldr	x0, [sp, #120]
   11304:	cmp	x0, #0x0
   11308:	b.ne	11314 <lzma_stream_buffer_decode@@XZ_5.0+0xaf0>  // b.any
   1130c:	mov	w0, #0x5                   	// #5
   11310:	b	11484 <lzma_stream_buffer_decode@@XZ_5.0+0xc60>
   11314:	ldr	x0, [sp, #40]
   11318:	ldr	x1, [sp, #120]
   1131c:	str	x1, [x0]
   11320:	ldr	x0, [sp, #40]
   11324:	adrp	x1, 10000 <lzma_index_hash_init@@XZ_5.0+0x6c>
   11328:	add	x1, x1, #0xa9c
   1132c:	str	x1, [x0, #24]
   11330:	ldr	x0, [sp, #40]
   11334:	adrp	x1, 11000 <lzma_stream_buffer_decode@@XZ_5.0+0x7dc>
   11338:	add	x1, x1, #0x188
   1133c:	str	x1, [x0, #32]
   11340:	ldr	x0, [sp, #40]
   11344:	adrp	x1, 11000 <lzma_stream_buffer_decode@@XZ_5.0+0x7dc>
   11348:	add	x1, x1, #0x1d8
   1134c:	str	x1, [x0, #48]
   11350:	ldr	x0, [sp, #40]
   11354:	adrp	x1, 11000 <lzma_stream_buffer_decode@@XZ_5.0+0x7dc>
   11358:	add	x1, x1, #0x1f8
   1135c:	str	x1, [x0, #56]
   11360:	ldr	x0, [sp, #120]
   11364:	str	xzr, [x0, #8]
   11368:	ldr	x0, [sp, #120]
   1136c:	mov	x1, #0xffffffffffffffff    	// #-1
   11370:	str	x1, [x0, #16]
   11374:	ldr	x0, [sp, #120]
   11378:	str	xzr, [x0, #24]
   1137c:	ldr	x0, [sp, #120]
   11380:	str	xzr, [x0, #32]
   11384:	ldr	x0, [sp, #120]
   11388:	str	xzr, [x0, #40]
   1138c:	ldr	x0, [sp, #120]
   11390:	str	xzr, [x0, #48]
   11394:	ldr	x0, [sp, #120]
   11398:	str	xzr, [x0, #56]
   1139c:	ldr	x0, [sp, #120]
   113a0:	str	xzr, [x0, #64]
   113a4:	ldr	x0, [sp, #120]
   113a8:	str	xzr, [x0, #72]
   113ac:	ldr	x0, [sp, #120]
   113b0:	str	xzr, [x0, #344]
   113b4:	ldr	x0, [sp, #24]
   113b8:	cmp	x0, #0x0
   113bc:	b.eq	113c8 <lzma_stream_buffer_decode@@XZ_5.0+0xba4>  // b.none
   113c0:	ldr	x0, [sp, #24]
   113c4:	b	113cc <lzma_stream_buffer_decode@@XZ_5.0+0xba8>
   113c8:	mov	x0, #0x1                   	// #1
   113cc:	ldr	x1, [sp, #120]
   113d0:	str	x0, [x1, #352]
   113d4:	ldr	x0, [sp, #120]
   113d8:	mov	x1, #0x8000                	// #32768
   113dc:	str	x1, [x0, #360]
   113e0:	ldr	w0, [sp, #20]
   113e4:	and	w0, w0, #0x1
   113e8:	cmp	w0, #0x0
   113ec:	cset	w0, ne  // ne = any
   113f0:	and	w1, w0, #0xff
   113f4:	ldr	x0, [sp, #120]
   113f8:	strb	w1, [x0, #368]
   113fc:	ldr	w0, [sp, #20]
   11400:	and	w0, w0, #0x2
   11404:	cmp	w0, #0x0
   11408:	cset	w0, ne  // ne = any
   1140c:	and	w1, w0, #0xff
   11410:	ldr	x0, [sp, #120]
   11414:	strb	w1, [x0, #369]
   11418:	ldr	w0, [sp, #20]
   1141c:	and	w0, w0, #0x4
   11420:	cmp	w0, #0x0
   11424:	cset	w0, ne  // ne = any
   11428:	and	w1, w0, #0xff
   1142c:	ldr	x0, [sp, #120]
   11430:	strb	w1, [x0, #370]
   11434:	ldr	w0, [sp, #20]
   11438:	and	w0, w0, #0x10
   1143c:	cmp	w0, #0x0
   11440:	cset	w0, ne  // ne = any
   11444:	and	w1, w0, #0xff
   11448:	ldr	x0, [sp, #120]
   1144c:	strb	w1, [x0, #371]
   11450:	ldr	w0, [sp, #20]
   11454:	and	w0, w0, #0x8
   11458:	cmp	w0, #0x0
   1145c:	cset	w0, ne  // ne = any
   11460:	and	w1, w0, #0xff
   11464:	ldr	x0, [sp, #120]
   11468:	strb	w1, [x0, #372]
   1146c:	ldr	x0, [sp, #120]
   11470:	mov	w1, #0x1                   	// #1
   11474:	strb	w1, [x0, #373]
   11478:	ldr	x1, [sp, #32]
   1147c:	ldr	x0, [sp, #120]
   11480:	bl	10a3c <lzma_stream_buffer_decode@@XZ_5.0+0x218>
   11484:	ldp	x29, x30, [sp], #128
   11488:	ret

000000000001148c <lzma_stream_decoder@@XZ_5.0>:
   1148c:	stp	x29, x30, [sp, #-64]!
   11490:	mov	x29, sp
   11494:	str	x0, [sp, #40]
   11498:	str	x1, [sp, #32]
   1149c:	str	w2, [sp, #28]
   114a0:	ldr	x0, [sp, #40]
   114a4:	bl	3b00 <lzma_version_string@@XZ_5.0+0x410>
   114a8:	str	w0, [sp, #60]
   114ac:	ldr	w0, [sp, #60]
   114b0:	cmp	w0, #0x0
   114b4:	b.eq	114c0 <lzma_stream_decoder@@XZ_5.0+0x34>  // b.none
   114b8:	ldr	w0, [sp, #60]
   114bc:	b	1152c <lzma_stream_decoder@@XZ_5.0+0xa0>
   114c0:	ldr	x0, [sp, #40]
   114c4:	ldr	x0, [x0, #56]
   114c8:	mov	x4, x0
   114cc:	ldr	x0, [sp, #40]
   114d0:	ldr	x0, [x0, #48]
   114d4:	ldr	w3, [sp, #28]
   114d8:	ldr	x2, [sp, #32]
   114dc:	mov	x1, x0
   114e0:	mov	x0, x4
   114e4:	bl	11274 <lzma_stream_buffer_decode@@XZ_5.0+0xa50>
   114e8:	str	w0, [sp, #56]
   114ec:	ldr	w0, [sp, #56]
   114f0:	cmp	w0, #0x0
   114f4:	b.eq	11508 <lzma_stream_decoder@@XZ_5.0+0x7c>  // b.none
   114f8:	ldr	x0, [sp, #40]
   114fc:	bl	3320 <lzma_end@plt>
   11500:	ldr	w0, [sp, #56]
   11504:	b	1152c <lzma_stream_decoder@@XZ_5.0+0xa0>
   11508:	ldr	x0, [sp, #40]
   1150c:	ldr	x0, [x0, #56]
   11510:	mov	w1, #0x1                   	// #1
   11514:	strb	w1, [x0, #88]
   11518:	ldr	x0, [sp, #40]
   1151c:	ldr	x0, [x0, #56]
   11520:	mov	w1, #0x1                   	// #1
   11524:	strb	w1, [x0, #91]
   11528:	mov	w0, #0x0                   	// #0
   1152c:	ldp	x29, x30, [sp], #64
   11530:	ret
   11534:	sub	sp, sp, #0x20
   11538:	str	x0, [sp, #8]
   1153c:	ldr	x0, [sp, #8]
   11540:	ldrb	w0, [x0]
   11544:	str	w0, [sp, #28]
   11548:	ldr	x0, [sp, #8]
   1154c:	add	x0, x0, #0x1
   11550:	ldrb	w0, [x0]
   11554:	lsl	w0, w0, #8
   11558:	ldr	w1, [sp, #28]
   1155c:	orr	w0, w1, w0
   11560:	str	w0, [sp, #28]
   11564:	ldr	x0, [sp, #8]
   11568:	add	x0, x0, #0x2
   1156c:	ldrb	w0, [x0]
   11570:	lsl	w0, w0, #16
   11574:	ldr	w1, [sp, #28]
   11578:	orr	w0, w1, w0
   1157c:	str	w0, [sp, #28]
   11580:	ldr	x0, [sp, #8]
   11584:	add	x0, x0, #0x3
   11588:	ldrb	w0, [x0]
   1158c:	lsl	w0, w0, #24
   11590:	ldr	w1, [sp, #28]
   11594:	orr	w0, w1, w0
   11598:	str	w0, [sp, #28]
   1159c:	ldr	w0, [sp, #28]
   115a0:	add	sp, sp, #0x20
   115a4:	ret
   115a8:	sub	sp, sp, #0x10
   115ac:	str	x0, [sp, #8]
   115b0:	str	x1, [sp]
   115b4:	ldr	x0, [sp]
   115b8:	ldrb	w0, [x0]
   115bc:	cmp	w0, #0x0
   115c0:	b.ne	115dc <lzma_stream_decoder@@XZ_5.0+0x150>  // b.any
   115c4:	ldr	x0, [sp]
   115c8:	add	x0, x0, #0x1
   115cc:	ldrb	w0, [x0]
   115d0:	and	w0, w0, #0xf0
   115d4:	cmp	w0, #0x0
   115d8:	b.eq	115e4 <lzma_stream_decoder@@XZ_5.0+0x158>  // b.none
   115dc:	mov	w0, #0x1                   	// #1
   115e0:	b	1160c <lzma_stream_decoder@@XZ_5.0+0x180>
   115e4:	ldr	x0, [sp, #8]
   115e8:	str	wzr, [x0]
   115ec:	ldr	x0, [sp]
   115f0:	add	x0, x0, #0x1
   115f4:	ldrb	w0, [x0]
   115f8:	and	w0, w0, #0xf
   115fc:	mov	w1, w0
   11600:	ldr	x0, [sp, #8]
   11604:	str	w1, [x0, #16]
   11608:	mov	w0, #0x0                   	// #0
   1160c:	add	sp, sp, #0x10
   11610:	ret

0000000000011614 <lzma_stream_header_decode@@XZ_5.0>:
   11614:	stp	x29, x30, [sp, #-48]!
   11618:	mov	x29, sp
   1161c:	str	x0, [sp, #24]
   11620:	str	x1, [sp, #16]
   11624:	mov	x2, #0x6                   	// #6
   11628:	adrp	x0, 46000 <lzma_mode_is_supported@@XZ_5.0+0x2b368>
   1162c:	ldr	x1, [x0, #3936]
   11630:	ldr	x0, [sp, #16]
   11634:	bl	3330 <memcmp@plt>
   11638:	cmp	w0, #0x0
   1163c:	b.eq	11648 <lzma_stream_header_decode@@XZ_5.0+0x34>  // b.none
   11640:	mov	w0, #0x7                   	// #7
   11644:	b	116bc <lzma_stream_header_decode@@XZ_5.0+0xa8>
   11648:	ldr	x0, [sp, #16]
   1164c:	add	x0, x0, #0x6
   11650:	mov	w2, #0x0                   	// #0
   11654:	mov	x1, #0x2                   	// #2
   11658:	bl	31c0 <lzma_crc32@plt>
   1165c:	str	w0, [sp, #44]
   11660:	ldr	x0, [sp, #16]
   11664:	add	x0, x0, #0x8
   11668:	bl	11534 <lzma_stream_decoder@@XZ_5.0+0xa8>
   1166c:	mov	w1, w0
   11670:	ldr	w0, [sp, #44]
   11674:	cmp	w0, w1
   11678:	b.eq	11684 <lzma_stream_header_decode@@XZ_5.0+0x70>  // b.none
   1167c:	mov	w0, #0x9                   	// #9
   11680:	b	116bc <lzma_stream_header_decode@@XZ_5.0+0xa8>
   11684:	ldr	x0, [sp, #16]
   11688:	add	x0, x0, #0x6
   1168c:	mov	x1, x0
   11690:	ldr	x0, [sp, #24]
   11694:	bl	115a8 <lzma_stream_decoder@@XZ_5.0+0x11c>
   11698:	and	w0, w0, #0xff
   1169c:	cmp	w0, #0x0
   116a0:	b.eq	116ac <lzma_stream_header_decode@@XZ_5.0+0x98>  // b.none
   116a4:	mov	w0, #0x8                   	// #8
   116a8:	b	116bc <lzma_stream_header_decode@@XZ_5.0+0xa8>
   116ac:	ldr	x0, [sp, #24]
   116b0:	mov	x1, #0xffffffffffffffff    	// #-1
   116b4:	str	x1, [x0, #8]
   116b8:	mov	w0, #0x0                   	// #0
   116bc:	ldp	x29, x30, [sp], #48
   116c0:	ret

00000000000116c4 <lzma_stream_footer_decode@@XZ_5.0>:
   116c4:	stp	x29, x30, [sp, #-48]!
   116c8:	mov	x29, sp
   116cc:	str	x0, [sp, #24]
   116d0:	str	x1, [sp, #16]
   116d4:	ldr	x0, [sp, #16]
   116d8:	add	x3, x0, #0xa
   116dc:	mov	x2, #0x2                   	// #2
   116e0:	adrp	x0, 46000 <lzma_mode_is_supported@@XZ_5.0+0x2b368>
   116e4:	ldr	x1, [x0, #3976]
   116e8:	mov	x0, x3
   116ec:	bl	3330 <memcmp@plt>
   116f0:	cmp	w0, #0x0
   116f4:	b.eq	11700 <lzma_stream_footer_decode@@XZ_5.0+0x3c>  // b.none
   116f8:	mov	w0, #0x7                   	// #7
   116fc:	b	11794 <lzma_stream_footer_decode@@XZ_5.0+0xd0>
   11700:	ldr	x0, [sp, #16]
   11704:	add	x0, x0, #0x4
   11708:	mov	w2, #0x0                   	// #0
   1170c:	mov	x1, #0x6                   	// #6
   11710:	bl	31c0 <lzma_crc32@plt>
   11714:	str	w0, [sp, #44]
   11718:	ldr	x0, [sp, #16]
   1171c:	bl	11534 <lzma_stream_decoder@@XZ_5.0+0xa8>
   11720:	mov	w1, w0
   11724:	ldr	w0, [sp, #44]
   11728:	cmp	w0, w1
   1172c:	b.eq	11738 <lzma_stream_footer_decode@@XZ_5.0+0x74>  // b.none
   11730:	mov	w0, #0x9                   	// #9
   11734:	b	11794 <lzma_stream_footer_decode@@XZ_5.0+0xd0>
   11738:	ldr	x0, [sp, #16]
   1173c:	add	x0, x0, #0x8
   11740:	mov	x1, x0
   11744:	ldr	x0, [sp, #24]
   11748:	bl	115a8 <lzma_stream_decoder@@XZ_5.0+0x11c>
   1174c:	and	w0, w0, #0xff
   11750:	cmp	w0, #0x0
   11754:	b.eq	11760 <lzma_stream_footer_decode@@XZ_5.0+0x9c>  // b.none
   11758:	mov	w0, #0x8                   	// #8
   1175c:	b	11794 <lzma_stream_footer_decode@@XZ_5.0+0xd0>
   11760:	ldr	x0, [sp, #16]
   11764:	add	x0, x0, #0x4
   11768:	bl	11534 <lzma_stream_decoder@@XZ_5.0+0xa8>
   1176c:	mov	w1, w0
   11770:	ldr	x0, [sp, #24]
   11774:	str	x1, [x0, #8]
   11778:	ldr	x0, [sp, #24]
   1177c:	ldr	x0, [x0, #8]
   11780:	add	x0, x0, #0x1
   11784:	lsl	x1, x0, #2
   11788:	ldr	x0, [sp, #24]
   1178c:	str	x1, [x0, #8]
   11790:	mov	w0, #0x0                   	// #0
   11794:	ldp	x29, x30, [sp], #48
   11798:	ret

000000000001179c <lzma_vli_decode@@XZ_5.0>:
   1179c:	sub	sp, sp, #0x40
   117a0:	str	x0, [sp, #40]
   117a4:	str	x1, [sp, #32]
   117a8:	str	x2, [sp, #24]
   117ac:	str	x3, [sp, #16]
   117b0:	str	x4, [sp, #8]
   117b4:	str	xzr, [sp, #48]
   117b8:	ldr	x0, [sp, #32]
   117bc:	cmp	x0, #0x0
   117c0:	b.ne	117f0 <lzma_vli_decode@@XZ_5.0+0x54>  // b.any
   117c4:	add	x0, sp, #0x30
   117c8:	str	x0, [sp, #32]
   117cc:	ldr	x0, [sp, #40]
   117d0:	str	xzr, [x0]
   117d4:	ldr	x0, [sp, #16]
   117d8:	ldr	x0, [x0]
   117dc:	ldr	x1, [sp, #8]
   117e0:	cmp	x1, x0
   117e4:	b.hi	11868 <lzma_vli_decode@@XZ_5.0+0xcc>  // b.pmore
   117e8:	mov	w0, #0x9                   	// #9
   117ec:	b	11970 <lzma_vli_decode@@XZ_5.0+0x1d4>
   117f0:	ldr	x0, [sp, #32]
   117f4:	ldr	x0, [x0]
   117f8:	cmp	x0, #0x0
   117fc:	b.ne	11808 <lzma_vli_decode@@XZ_5.0+0x6c>  // b.any
   11800:	ldr	x0, [sp, #40]
   11804:	str	xzr, [x0]
   11808:	ldr	x0, [sp, #32]
   1180c:	ldr	x0, [x0]
   11810:	cmp	x0, #0x8
   11814:	b.hi	11844 <lzma_vli_decode@@XZ_5.0+0xa8>  // b.pmore
   11818:	ldr	x0, [sp, #40]
   1181c:	ldr	x1, [x0]
   11820:	ldr	x0, [sp, #32]
   11824:	ldr	x0, [x0]
   11828:	mov	w2, w0
   1182c:	mov	w0, w2
   11830:	lsl	w0, w0, #3
   11834:	sub	w0, w0, w2
   11838:	lsr	x0, x1, x0
   1183c:	cmp	x0, #0x0
   11840:	b.eq	1184c <lzma_vli_decode@@XZ_5.0+0xb0>  // b.none
   11844:	mov	w0, #0xb                   	// #11
   11848:	b	11970 <lzma_vli_decode@@XZ_5.0+0x1d4>
   1184c:	ldr	x0, [sp, #16]
   11850:	ldr	x0, [x0]
   11854:	ldr	x1, [sp, #8]
   11858:	cmp	x1, x0
   1185c:	b.hi	11868 <lzma_vli_decode@@XZ_5.0+0xcc>  // b.pmore
   11860:	mov	w0, #0xa                   	// #10
   11864:	b	11970 <lzma_vli_decode@@XZ_5.0+0x1d4>
   11868:	ldr	x0, [sp, #16]
   1186c:	ldr	x0, [x0]
   11870:	ldr	x1, [sp, #24]
   11874:	add	x0, x1, x0
   11878:	ldrb	w0, [x0]
   1187c:	strb	w0, [sp, #63]
   11880:	ldr	x0, [sp, #16]
   11884:	ldr	x0, [x0]
   11888:	add	x1, x0, #0x1
   1188c:	ldr	x0, [sp, #16]
   11890:	str	x1, [x0]
   11894:	ldr	x0, [sp, #40]
   11898:	ldr	x1, [x0]
   1189c:	ldrb	w0, [sp, #63]
   118a0:	and	x2, x0, #0x7f
   118a4:	ldr	x0, [sp, #32]
   118a8:	ldr	x0, [x0]
   118ac:	mov	w3, w0
   118b0:	mov	w0, w3
   118b4:	lsl	w0, w0, #3
   118b8:	sub	w0, w0, w3
   118bc:	lsl	x0, x2, x0
   118c0:	add	x1, x1, x0
   118c4:	ldr	x0, [sp, #40]
   118c8:	str	x1, [x0]
   118cc:	ldr	x0, [sp, #32]
   118d0:	ldr	x0, [x0]
   118d4:	add	x1, x0, #0x1
   118d8:	ldr	x0, [sp, #32]
   118dc:	str	x1, [x0]
   118e0:	ldrsb	w0, [sp, #63]
   118e4:	cmp	w0, #0x0
   118e8:	b.lt	11928 <lzma_vli_decode@@XZ_5.0+0x18c>  // b.tstop
   118ec:	ldrb	w0, [sp, #63]
   118f0:	cmp	w0, #0x0
   118f4:	b.ne	11910 <lzma_vli_decode@@XZ_5.0+0x174>  // b.any
   118f8:	ldr	x0, [sp, #32]
   118fc:	ldr	x0, [x0]
   11900:	cmp	x0, #0x1
   11904:	b.ls	11910 <lzma_vli_decode@@XZ_5.0+0x174>  // b.plast
   11908:	mov	w0, #0x9                   	// #9
   1190c:	b	11970 <lzma_vli_decode@@XZ_5.0+0x1d4>
   11910:	add	x0, sp, #0x30
   11914:	ldr	x1, [sp, #32]
   11918:	cmp	x1, x0
   1191c:	cset	w0, ne  // ne = any
   11920:	and	w0, w0, #0xff
   11924:	b	11970 <lzma_vli_decode@@XZ_5.0+0x1d4>
   11928:	ldr	x0, [sp, #32]
   1192c:	ldr	x0, [x0]
   11930:	cmp	x0, #0x9
   11934:	b.ne	11940 <lzma_vli_decode@@XZ_5.0+0x1a4>  // b.any
   11938:	mov	w0, #0x9                   	// #9
   1193c:	b	11970 <lzma_vli_decode@@XZ_5.0+0x1d4>
   11940:	ldr	x0, [sp, #16]
   11944:	ldr	x0, [x0]
   11948:	ldr	x1, [sp, #8]
   1194c:	cmp	x1, x0
   11950:	b.hi	11868 <lzma_vli_decode@@XZ_5.0+0xcc>  // b.pmore
   11954:	add	x0, sp, #0x30
   11958:	ldr	x1, [sp, #32]
   1195c:	cmp	x1, x0
   11960:	b.ne	1196c <lzma_vli_decode@@XZ_5.0+0x1d0>  // b.any
   11964:	mov	w0, #0x9                   	// #9
   11968:	b	11970 <lzma_vli_decode@@XZ_5.0+0x1d4>
   1196c:	mov	w0, #0x0                   	// #0
   11970:	add	sp, sp, #0x40
   11974:	ret

0000000000011978 <lzma_check_is_supported@@XZ_5.0>:
   11978:	sub	sp, sp, #0x10
   1197c:	str	w0, [sp, #12]
   11980:	ldr	w0, [sp, #12]
   11984:	cmp	w0, #0xf
   11988:	b.ls	11994 <lzma_check_is_supported@@XZ_5.0+0x1c>  // b.plast
   1198c:	mov	w0, #0x0                   	// #0
   11990:	b	119a4 <lzma_check_is_supported@@XZ_5.0+0x2c>
   11994:	adrp	x0, 2c000 <lzma_mode_is_supported@@XZ_5.0+0x11368>
   11998:	add	x1, x0, #0x88
   1199c:	ldr	w0, [sp, #12]
   119a0:	ldrb	w0, [x1, x0]
   119a4:	add	sp, sp, #0x10
   119a8:	ret

00000000000119ac <lzma_check_size@@XZ_5.0>:
   119ac:	sub	sp, sp, #0x10
   119b0:	str	w0, [sp, #12]
   119b4:	ldr	w0, [sp, #12]
   119b8:	cmp	w0, #0xf
   119bc:	b.ls	119c8 <lzma_check_size@@XZ_5.0+0x1c>  // b.plast
   119c0:	mov	w0, #0xffffffff            	// #-1
   119c4:	b	119d8 <lzma_check_size@@XZ_5.0+0x2c>
   119c8:	adrp	x0, 2c000 <lzma_mode_is_supported@@XZ_5.0+0x11368>
   119cc:	add	x1, x0, #0x98
   119d0:	ldr	w0, [sp, #12]
   119d4:	ldrb	w0, [x1, x0]
   119d8:	add	sp, sp, #0x10
   119dc:	ret
   119e0:	stp	x29, x30, [sp, #-32]!
   119e4:	mov	x29, sp
   119e8:	str	x0, [sp, #24]
   119ec:	str	w1, [sp, #20]
   119f0:	ldr	w0, [sp, #20]
   119f4:	cmp	w0, #0xa
   119f8:	b.eq	11a54 <lzma_check_size@@XZ_5.0+0xa8>  // b.none
   119fc:	ldr	w0, [sp, #20]
   11a00:	cmp	w0, #0xa
   11a04:	b.hi	11a60 <lzma_check_size@@XZ_5.0+0xb4>  // b.pmore
   11a08:	ldr	w0, [sp, #20]
   11a0c:	cmp	w0, #0x4
   11a10:	b.eq	11a48 <lzma_check_size@@XZ_5.0+0x9c>  // b.none
   11a14:	ldr	w0, [sp, #20]
   11a18:	cmp	w0, #0x4
   11a1c:	b.hi	11a60 <lzma_check_size@@XZ_5.0+0xb4>  // b.pmore
   11a20:	ldr	w0, [sp, #20]
   11a24:	cmp	w0, #0x0
   11a28:	b.eq	11a68 <lzma_check_size@@XZ_5.0+0xbc>  // b.none
   11a2c:	ldr	w0, [sp, #20]
   11a30:	cmp	w0, #0x1
   11a34:	b.eq	11a3c <lzma_check_size@@XZ_5.0+0x90>  // b.none
   11a38:	b	11a60 <lzma_check_size@@XZ_5.0+0xb4>
   11a3c:	ldr	x0, [sp, #24]
   11a40:	str	wzr, [x0, #64]
   11a44:	b	11a6c <lzma_check_size@@XZ_5.0+0xc0>
   11a48:	ldr	x0, [sp, #24]
   11a4c:	str	xzr, [x0, #64]
   11a50:	b	11a6c <lzma_check_size@@XZ_5.0+0xc0>
   11a54:	ldr	x0, [sp, #24]
   11a58:	bl	14780 <lzma_crc64@@XZ_5.0+0x2950>
   11a5c:	b	11a6c <lzma_check_size@@XZ_5.0+0xc0>
   11a60:	nop
   11a64:	b	11a6c <lzma_check_size@@XZ_5.0+0xc0>
   11a68:	nop
   11a6c:	nop
   11a70:	ldp	x29, x30, [sp], #32
   11a74:	ret
   11a78:	stp	x29, x30, [sp, #-48]!
   11a7c:	mov	x29, sp
   11a80:	str	x0, [sp, #40]
   11a84:	str	w1, [sp, #36]
   11a88:	str	x2, [sp, #24]
   11a8c:	str	x3, [sp, #16]
   11a90:	ldr	w0, [sp, #36]
   11a94:	cmp	w0, #0xa
   11a98:	b.eq	11b14 <lzma_check_size@@XZ_5.0+0x168>  // b.none
   11a9c:	ldr	w0, [sp, #36]
   11aa0:	cmp	w0, #0xa
   11aa4:	b.hi	11b28 <lzma_check_size@@XZ_5.0+0x17c>  // b.pmore
   11aa8:	ldr	w0, [sp, #36]
   11aac:	cmp	w0, #0x1
   11ab0:	b.eq	11ac4 <lzma_check_size@@XZ_5.0+0x118>  // b.none
   11ab4:	ldr	w0, [sp, #36]
   11ab8:	cmp	w0, #0x4
   11abc:	b.eq	11aec <lzma_check_size@@XZ_5.0+0x140>  // b.none
   11ac0:	b	11b28 <lzma_check_size@@XZ_5.0+0x17c>
   11ac4:	ldr	x0, [sp, #40]
   11ac8:	ldr	w0, [x0, #64]
   11acc:	mov	w2, w0
   11ad0:	ldr	x1, [sp, #16]
   11ad4:	ldr	x0, [sp, #24]
   11ad8:	bl	31c0 <lzma_crc32@plt>
   11adc:	mov	w1, w0
   11ae0:	ldr	x0, [sp, #40]
   11ae4:	str	w1, [x0, #64]
   11ae8:	b	11b2c <lzma_check_size@@XZ_5.0+0x180>
   11aec:	ldr	x0, [sp, #40]
   11af0:	ldr	x0, [x0, #64]
   11af4:	mov	x2, x0
   11af8:	ldr	x1, [sp, #16]
   11afc:	ldr	x0, [sp, #24]
   11b00:	bl	3290 <lzma_crc64@plt>
   11b04:	mov	x1, x0
   11b08:	ldr	x0, [sp, #40]
   11b0c:	str	x1, [x0, #64]
   11b10:	b	11b2c <lzma_check_size@@XZ_5.0+0x180>
   11b14:	ldr	x2, [sp, #40]
   11b18:	ldr	x1, [sp, #16]
   11b1c:	ldr	x0, [sp, #24]
   11b20:	bl	147bc <lzma_crc64@@XZ_5.0+0x298c>
   11b24:	b	11b2c <lzma_check_size@@XZ_5.0+0x180>
   11b28:	nop
   11b2c:	nop
   11b30:	ldp	x29, x30, [sp], #48
   11b34:	ret
   11b38:	stp	x29, x30, [sp, #-32]!
   11b3c:	mov	x29, sp
   11b40:	str	x0, [sp, #24]
   11b44:	str	w1, [sp, #20]
   11b48:	ldr	w0, [sp, #20]
   11b4c:	cmp	w0, #0xa
   11b50:	b.eq	11ba4 <lzma_check_size@@XZ_5.0+0x1f8>  // b.none
   11b54:	ldr	w0, [sp, #20]
   11b58:	cmp	w0, #0xa
   11b5c:	b.hi	11bb0 <lzma_check_size@@XZ_5.0+0x204>  // b.pmore
   11b60:	ldr	w0, [sp, #20]
   11b64:	cmp	w0, #0x1
   11b68:	b.eq	11b7c <lzma_check_size@@XZ_5.0+0x1d0>  // b.none
   11b6c:	ldr	w0, [sp, #20]
   11b70:	cmp	w0, #0x4
   11b74:	b.eq	11b90 <lzma_check_size@@XZ_5.0+0x1e4>  // b.none
   11b78:	b	11bb0 <lzma_check_size@@XZ_5.0+0x204>
   11b7c:	ldr	x0, [sp, #24]
   11b80:	ldr	w1, [x0, #64]
   11b84:	ldr	x0, [sp, #24]
   11b88:	str	w1, [x0]
   11b8c:	b	11bb4 <lzma_check_size@@XZ_5.0+0x208>
   11b90:	ldr	x0, [sp, #24]
   11b94:	ldr	x1, [x0, #64]
   11b98:	ldr	x0, [sp, #24]
   11b9c:	str	x1, [x0]
   11ba0:	b	11bb4 <lzma_check_size@@XZ_5.0+0x208>
   11ba4:	ldr	x0, [sp, #24]
   11ba8:	bl	14890 <lzma_crc64@@XZ_5.0+0x2a60>
   11bac:	b	11bb4 <lzma_check_size@@XZ_5.0+0x208>
   11bb0:	nop
   11bb4:	nop
   11bb8:	ldp	x29, x30, [sp], #32
   11bbc:	ret

0000000000011bc0 <lzma_crc32@@XZ_5.0>:
   11bc0:	sub	sp, sp, #0x30
   11bc4:	str	x0, [sp, #24]
   11bc8:	str	x1, [sp, #16]
   11bcc:	str	w2, [sp, #12]
   11bd0:	ldr	w0, [sp, #12]
   11bd4:	mvn	w0, w0
   11bd8:	str	w0, [sp, #12]
   11bdc:	ldr	x0, [sp, #16]
   11be0:	cmp	x0, #0x8
   11be4:	b.ls	11e0c <lzma_crc32@@XZ_5.0+0x24c>  // b.plast
   11be8:	b	11c38 <lzma_crc32@@XZ_5.0+0x78>
   11bec:	ldr	x0, [sp, #24]
   11bf0:	add	x1, x0, #0x1
   11bf4:	str	x1, [sp, #24]
   11bf8:	ldrb	w0, [x0]
   11bfc:	mov	w1, w0
   11c00:	ldr	w0, [sp, #12]
   11c04:	and	w0, w0, #0xff
   11c08:	eor	w1, w1, w0
   11c0c:	adrp	x0, 46000 <lzma_mode_is_supported@@XZ_5.0+0x2b368>
   11c10:	ldr	x0, [x0, #3952]
   11c14:	mov	w1, w1
   11c18:	ldr	w1, [x0, x1, lsl #2]
   11c1c:	ldr	w0, [sp, #12]
   11c20:	lsr	w0, w0, #8
   11c24:	eor	w0, w1, w0
   11c28:	str	w0, [sp, #12]
   11c2c:	ldr	x0, [sp, #16]
   11c30:	sub	x0, x0, #0x1
   11c34:	str	x0, [sp, #16]
   11c38:	ldr	x0, [sp, #24]
   11c3c:	and	x0, x0, #0x7
   11c40:	cmp	x0, #0x0
   11c44:	b.ne	11bec <lzma_crc32@@XZ_5.0+0x2c>  // b.any
   11c48:	ldr	x0, [sp, #16]
   11c4c:	and	x0, x0, #0xfffffffffffffff8
   11c50:	ldr	x1, [sp, #24]
   11c54:	add	x0, x1, x0
   11c58:	str	x0, [sp, #40]
   11c5c:	ldr	x0, [sp, #16]
   11c60:	and	x0, x0, #0x7
   11c64:	str	x0, [sp, #16]
   11c68:	b	11db8 <lzma_crc32@@XZ_5.0+0x1f8>
   11c6c:	ldr	x0, [sp, #24]
   11c70:	ldr	w0, [x0]
   11c74:	ldr	w1, [sp, #12]
   11c78:	eor	w0, w1, w0
   11c7c:	str	w0, [sp, #12]
   11c80:	ldr	x0, [sp, #24]
   11c84:	add	x0, x0, #0x4
   11c88:	str	x0, [sp, #24]
   11c8c:	ldr	w0, [sp, #12]
   11c90:	and	w1, w0, #0xff
   11c94:	adrp	x0, 46000 <lzma_mode_is_supported@@XZ_5.0+0x2b368>
   11c98:	ldr	x0, [x0, #3952]
   11c9c:	mov	w1, w1
   11ca0:	add	x1, x1, #0x700
   11ca4:	ldr	w1, [x0, x1, lsl #2]
   11ca8:	ldr	w0, [sp, #12]
   11cac:	lsr	w0, w0, #8
   11cb0:	and	w2, w0, #0xff
   11cb4:	adrp	x0, 46000 <lzma_mode_is_supported@@XZ_5.0+0x2b368>
   11cb8:	ldr	x0, [x0, #3952]
   11cbc:	mov	w2, w2
   11cc0:	add	x2, x2, #0x600
   11cc4:	ldr	w0, [x0, x2, lsl #2]
   11cc8:	eor	w1, w1, w0
   11ccc:	ldr	w0, [sp, #12]
   11cd0:	lsr	w0, w0, #16
   11cd4:	and	w2, w0, #0xff
   11cd8:	adrp	x0, 46000 <lzma_mode_is_supported@@XZ_5.0+0x2b368>
   11cdc:	ldr	x0, [x0, #3952]
   11ce0:	mov	w2, w2
   11ce4:	add	x2, x2, #0x500
   11ce8:	ldr	w0, [x0, x2, lsl #2]
   11cec:	eor	w1, w1, w0
   11cf0:	ldr	w0, [sp, #12]
   11cf4:	lsr	w2, w0, #24
   11cf8:	adrp	x0, 46000 <lzma_mode_is_supported@@XZ_5.0+0x2b368>
   11cfc:	ldr	x0, [x0, #3952]
   11d00:	mov	w2, w2
   11d04:	add	x2, x2, #0x400
   11d08:	ldr	w0, [x0, x2, lsl #2]
   11d0c:	eor	w0, w1, w0
   11d10:	str	w0, [sp, #12]
   11d14:	ldr	x0, [sp, #24]
   11d18:	ldr	w0, [x0]
   11d1c:	str	w0, [sp, #36]
   11d20:	ldr	x0, [sp, #24]
   11d24:	add	x0, x0, #0x4
   11d28:	str	x0, [sp, #24]
   11d2c:	ldr	w0, [sp, #36]
   11d30:	and	w1, w0, #0xff
   11d34:	adrp	x0, 46000 <lzma_mode_is_supported@@XZ_5.0+0x2b368>
   11d38:	ldr	x0, [x0, #3952]
   11d3c:	mov	w1, w1
   11d40:	add	x1, x1, #0x300
   11d44:	ldr	w1, [x0, x1, lsl #2]
   11d48:	ldr	w0, [sp, #36]
   11d4c:	lsr	w0, w0, #8
   11d50:	and	w2, w0, #0xff
   11d54:	adrp	x0, 46000 <lzma_mode_is_supported@@XZ_5.0+0x2b368>
   11d58:	ldr	x0, [x0, #3952]
   11d5c:	mov	w2, w2
   11d60:	add	x2, x2, #0x200
   11d64:	ldr	w0, [x0, x2, lsl #2]
   11d68:	eor	w1, w1, w0
   11d6c:	ldr	w0, [sp, #12]
   11d70:	eor	w1, w1, w0
   11d74:	ldr	w0, [sp, #36]
   11d78:	lsr	w0, w0, #16
   11d7c:	and	w2, w0, #0xff
   11d80:	adrp	x0, 46000 <lzma_mode_is_supported@@XZ_5.0+0x2b368>
   11d84:	ldr	x0, [x0, #3952]
   11d88:	mov	w2, w2
   11d8c:	add	x2, x2, #0x100
   11d90:	ldr	w0, [x0, x2, lsl #2]
   11d94:	eor	w1, w1, w0
   11d98:	ldr	w0, [sp, #36]
   11d9c:	lsr	w2, w0, #24
   11da0:	adrp	x0, 46000 <lzma_mode_is_supported@@XZ_5.0+0x2b368>
   11da4:	ldr	x0, [x0, #3952]
   11da8:	mov	w2, w2
   11dac:	ldr	w0, [x0, x2, lsl #2]
   11db0:	eor	w0, w1, w0
   11db4:	str	w0, [sp, #12]
   11db8:	ldr	x1, [sp, #24]
   11dbc:	ldr	x0, [sp, #40]
   11dc0:	cmp	x1, x0
   11dc4:	b.cc	11c6c <lzma_crc32@@XZ_5.0+0xac>  // b.lo, b.ul, b.last
   11dc8:	b	11e0c <lzma_crc32@@XZ_5.0+0x24c>
   11dcc:	ldr	x0, [sp, #24]
   11dd0:	add	x1, x0, #0x1
   11dd4:	str	x1, [sp, #24]
   11dd8:	ldrb	w0, [x0]
   11ddc:	mov	w1, w0
   11de0:	ldr	w0, [sp, #12]
   11de4:	and	w0, w0, #0xff
   11de8:	eor	w1, w1, w0
   11dec:	adrp	x0, 46000 <lzma_mode_is_supported@@XZ_5.0+0x2b368>
   11df0:	ldr	x0, [x0, #3952]
   11df4:	mov	w1, w1
   11df8:	ldr	w1, [x0, x1, lsl #2]
   11dfc:	ldr	w0, [sp, #12]
   11e00:	lsr	w0, w0, #8
   11e04:	eor	w0, w1, w0
   11e08:	str	w0, [sp, #12]
   11e0c:	ldr	x0, [sp, #16]
   11e10:	sub	x1, x0, #0x1
   11e14:	str	x1, [sp, #16]
   11e18:	cmp	x0, #0x0
   11e1c:	b.ne	11dcc <lzma_crc32@@XZ_5.0+0x20c>  // b.any
   11e20:	ldr	w0, [sp, #12]
   11e24:	mvn	w0, w0
   11e28:	add	sp, sp, #0x30
   11e2c:	ret

0000000000011e30 <lzma_crc64@@XZ_5.0>:
   11e30:	sub	sp, sp, #0x30
   11e34:	str	x0, [sp, #24]
   11e38:	str	x1, [sp, #16]
   11e3c:	str	x2, [sp, #8]
   11e40:	ldr	x0, [sp, #8]
   11e44:	mvn	x0, x0
   11e48:	str	x0, [sp, #8]
   11e4c:	ldr	x0, [sp, #16]
   11e50:	cmp	x0, #0x4
   11e54:	b.ls	11fd8 <lzma_crc64@@XZ_5.0+0x1a8>  // b.plast
   11e58:	b	11ea4 <lzma_crc64@@XZ_5.0+0x74>
   11e5c:	ldr	x0, [sp, #24]
   11e60:	add	x1, x0, #0x1
   11e64:	str	x1, [sp, #24]
   11e68:	ldrb	w0, [x0]
   11e6c:	and	x1, x0, #0xff
   11e70:	ldr	x0, [sp, #8]
   11e74:	and	x0, x0, #0xff
   11e78:	eor	x1, x1, x0
   11e7c:	adrp	x0, 46000 <lzma_mode_is_supported@@XZ_5.0+0x2b368>
   11e80:	ldr	x0, [x0, #3984]
   11e84:	ldr	x1, [x0, x1, lsl #3]
   11e88:	ldr	x0, [sp, #8]
   11e8c:	lsr	x0, x0, #8
   11e90:	eor	x0, x1, x0
   11e94:	str	x0, [sp, #8]
   11e98:	ldr	x0, [sp, #16]
   11e9c:	sub	x0, x0, #0x1
   11ea0:	str	x0, [sp, #16]
   11ea4:	ldr	x0, [sp, #24]
   11ea8:	and	x0, x0, #0x3
   11eac:	cmp	x0, #0x0
   11eb0:	b.ne	11e5c <lzma_crc64@@XZ_5.0+0x2c>  // b.any
   11eb4:	ldr	x0, [sp, #16]
   11eb8:	and	x0, x0, #0xfffffffffffffffc
   11ebc:	ldr	x1, [sp, #24]
   11ec0:	add	x0, x1, x0
   11ec4:	str	x0, [sp, #40]
   11ec8:	ldr	x0, [sp, #16]
   11ecc:	and	x0, x0, #0x3
   11ed0:	str	x0, [sp, #16]
   11ed4:	b	11f88 <lzma_crc64@@XZ_5.0+0x158>
   11ed8:	ldr	x0, [sp, #24]
   11edc:	ldr	w0, [x0]
   11ee0:	ldr	x1, [sp, #8]
   11ee4:	eor	w0, w0, w1
   11ee8:	str	w0, [sp, #36]
   11eec:	ldr	x0, [sp, #24]
   11ef0:	add	x0, x0, #0x4
   11ef4:	str	x0, [sp, #24]
   11ef8:	ldr	w0, [sp, #36]
   11efc:	and	w1, w0, #0xff
   11f00:	adrp	x0, 46000 <lzma_mode_is_supported@@XZ_5.0+0x2b368>
   11f04:	ldr	x0, [x0, #3984]
   11f08:	mov	w1, w1
   11f0c:	add	x1, x1, #0x300
   11f10:	ldr	x1, [x0, x1, lsl #3]
   11f14:	ldr	w0, [sp, #36]
   11f18:	lsr	w0, w0, #8
   11f1c:	and	w2, w0, #0xff
   11f20:	adrp	x0, 46000 <lzma_mode_is_supported@@XZ_5.0+0x2b368>
   11f24:	ldr	x0, [x0, #3984]
   11f28:	mov	w2, w2
   11f2c:	add	x2, x2, #0x200
   11f30:	ldr	x0, [x0, x2, lsl #3]
   11f34:	eor	x1, x1, x0
   11f38:	ldr	x0, [sp, #8]
   11f3c:	lsr	x0, x0, #32
   11f40:	eor	x1, x1, x0
   11f44:	ldr	w0, [sp, #36]
   11f48:	lsr	w0, w0, #16
   11f4c:	and	w2, w0, #0xff
   11f50:	adrp	x0, 46000 <lzma_mode_is_supported@@XZ_5.0+0x2b368>
   11f54:	ldr	x0, [x0, #3984]
   11f58:	mov	w2, w2
   11f5c:	add	x2, x2, #0x100
   11f60:	ldr	x0, [x0, x2, lsl #3]
   11f64:	eor	x1, x1, x0
   11f68:	ldr	w0, [sp, #36]
   11f6c:	lsr	w2, w0, #24
   11f70:	adrp	x0, 46000 <lzma_mode_is_supported@@XZ_5.0+0x2b368>
   11f74:	ldr	x0, [x0, #3984]
   11f78:	mov	w2, w2
   11f7c:	ldr	x0, [x0, x2, lsl #3]
   11f80:	eor	x0, x1, x0
   11f84:	str	x0, [sp, #8]
   11f88:	ldr	x1, [sp, #24]
   11f8c:	ldr	x0, [sp, #40]
   11f90:	cmp	x1, x0
   11f94:	b.cc	11ed8 <lzma_crc64@@XZ_5.0+0xa8>  // b.lo, b.ul, b.last
   11f98:	b	11fd8 <lzma_crc64@@XZ_5.0+0x1a8>
   11f9c:	ldr	x0, [sp, #24]
   11fa0:	add	x1, x0, #0x1
   11fa4:	str	x1, [sp, #24]
   11fa8:	ldrb	w0, [x0]
   11fac:	and	x1, x0, #0xff
   11fb0:	ldr	x0, [sp, #8]
   11fb4:	and	x0, x0, #0xff
   11fb8:	eor	x1, x1, x0
   11fbc:	adrp	x0, 46000 <lzma_mode_is_supported@@XZ_5.0+0x2b368>
   11fc0:	ldr	x0, [x0, #3984]
   11fc4:	ldr	x1, [x0, x1, lsl #3]
   11fc8:	ldr	x0, [sp, #8]
   11fcc:	lsr	x0, x0, #8
   11fd0:	eor	x0, x1, x0
   11fd4:	str	x0, [sp, #8]
   11fd8:	ldr	x0, [sp, #16]
   11fdc:	sub	x1, x0, #0x1
   11fe0:	str	x1, [sp, #16]
   11fe4:	cmp	x0, #0x0
   11fe8:	b.ne	11f9c <lzma_crc64@@XZ_5.0+0x16c>  // b.any
   11fec:	ldr	x0, [sp, #8]
   11ff0:	mvn	x0, x0
   11ff4:	add	sp, sp, #0x30
   11ff8:	ret
   11ffc:	sub	sp, sp, #0x10
   12000:	str	w0, [sp, #12]
   12004:	ldr	w0, [sp, #12]
   12008:	rev	w0, w0
   1200c:	add	sp, sp, #0x10
   12010:	ret
   12014:	sub	sp, sp, #0x10
   12018:	str	x0, [sp, #8]
   1201c:	ldr	x0, [sp, #8]
   12020:	rev	x0, x0
   12024:	add	sp, sp, #0x10
   12028:	ret
   1202c:	sub	sp, sp, #0x10
   12030:	str	w0, [sp, #12]
   12034:	str	w1, [sp, #8]
   12038:	ldr	w0, [sp, #8]
   1203c:	ldr	w1, [sp, #12]
   12040:	ror	w0, w1, w0
   12044:	add	sp, sp, #0x10
   12048:	ret
   1204c:	stp	x29, x30, [sp, #-176]!
   12050:	mov	x29, sp
   12054:	stp	x19, x20, [sp, #16]
   12058:	str	x21, [sp, #32]
   1205c:	str	x0, [sp, #56]
   12060:	str	x1, [sp, #48]
   12064:	add	x0, sp, #0x48
   12068:	mov	x2, #0x20                  	// #32
   1206c:	ldr	x1, [sp, #56]
   12070:	bl	3090 <memcpy@plt>
   12074:	ldr	w19, [sp, #88]
   12078:	ldr	w20, [sp, #88]
   1207c:	ldr	w0, [sp, #88]
   12080:	mov	w1, #0xe                   	// #14
   12084:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   12088:	eor	w0, w20, w0
   1208c:	mov	w1, #0x5                   	// #5
   12090:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   12094:	eor	w0, w19, w0
   12098:	mov	w1, #0x6                   	// #6
   1209c:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   120a0:	mov	w4, w0
   120a4:	ldr	w1, [sp, #96]
   120a8:	ldr	w2, [sp, #88]
   120ac:	ldr	w3, [sp, #92]
   120b0:	ldr	w0, [sp, #96]
   120b4:	eor	w0, w3, w0
   120b8:	and	w0, w2, w0
   120bc:	eor	w0, w1, w0
   120c0:	add	w1, w4, w0
   120c4:	mov	w0, #0x2f98                	// #12184
   120c8:	movk	w0, #0x428a, lsl #16
   120cc:	add	w19, w1, w0
   120d0:	ldr	x0, [sp, #48]
   120d4:	ldr	w0, [x0]
   120d8:	bl	11ffc <lzma_crc64@@XZ_5.0+0x1cc>
   120dc:	str	w0, [sp, #104]
   120e0:	ldr	w0, [sp, #104]
   120e4:	add	w1, w19, w0
   120e8:	ldr	w0, [sp, #100]
   120ec:	add	w0, w1, w0
   120f0:	str	w0, [sp, #100]
   120f4:	ldr	w1, [sp, #84]
   120f8:	ldr	w0, [sp, #100]
   120fc:	add	w0, w1, w0
   12100:	str	w0, [sp, #84]
   12104:	ldr	w19, [sp, #72]
   12108:	ldr	w20, [sp, #72]
   1210c:	ldr	w0, [sp, #72]
   12110:	mov	w1, #0x9                   	// #9
   12114:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   12118:	eor	w0, w20, w0
   1211c:	mov	w1, #0xb                   	// #11
   12120:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   12124:	eor	w0, w19, w0
   12128:	mov	w1, #0x2                   	// #2
   1212c:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   12130:	mov	w3, w0
   12134:	ldr	w1, [sp, #72]
   12138:	ldr	w2, [sp, #76]
   1213c:	ldr	w0, [sp, #80]
   12140:	eor	w0, w2, w0
   12144:	and	w1, w1, w0
   12148:	ldr	w2, [sp, #76]
   1214c:	ldr	w0, [sp, #80]
   12150:	and	w0, w2, w0
   12154:	add	w0, w1, w0
   12158:	add	w1, w3, w0
   1215c:	ldr	w0, [sp, #100]
   12160:	add	w0, w1, w0
   12164:	str	w0, [sp, #100]
   12168:	ldr	w19, [sp, #84]
   1216c:	ldr	w20, [sp, #84]
   12170:	ldr	w0, [sp, #84]
   12174:	mov	w1, #0xe                   	// #14
   12178:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   1217c:	eor	w0, w20, w0
   12180:	mov	w1, #0x5                   	// #5
   12184:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   12188:	eor	w0, w19, w0
   1218c:	mov	w1, #0x6                   	// #6
   12190:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   12194:	mov	w4, w0
   12198:	ldr	w1, [sp, #92]
   1219c:	ldr	w2, [sp, #84]
   121a0:	ldr	w3, [sp, #88]
   121a4:	ldr	w0, [sp, #92]
   121a8:	eor	w0, w3, w0
   121ac:	and	w0, w2, w0
   121b0:	eor	w0, w1, w0
   121b4:	add	w1, w4, w0
   121b8:	mov	w0, #0x4491                	// #17553
   121bc:	movk	w0, #0x7137, lsl #16
   121c0:	add	w19, w1, w0
   121c4:	ldr	x0, [sp, #48]
   121c8:	add	x0, x0, #0x4
   121cc:	ldr	w0, [x0]
   121d0:	bl	11ffc <lzma_crc64@@XZ_5.0+0x1cc>
   121d4:	str	w0, [sp, #108]
   121d8:	ldr	w0, [sp, #108]
   121dc:	add	w1, w19, w0
   121e0:	ldr	w0, [sp, #96]
   121e4:	add	w0, w1, w0
   121e8:	str	w0, [sp, #96]
   121ec:	ldr	w1, [sp, #80]
   121f0:	ldr	w0, [sp, #96]
   121f4:	add	w0, w1, w0
   121f8:	str	w0, [sp, #80]
   121fc:	ldr	w19, [sp, #100]
   12200:	ldr	w20, [sp, #100]
   12204:	ldr	w0, [sp, #100]
   12208:	mov	w1, #0x9                   	// #9
   1220c:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   12210:	eor	w0, w20, w0
   12214:	mov	w1, #0xb                   	// #11
   12218:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   1221c:	eor	w0, w19, w0
   12220:	mov	w1, #0x2                   	// #2
   12224:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   12228:	mov	w3, w0
   1222c:	ldr	w1, [sp, #100]
   12230:	ldr	w2, [sp, #72]
   12234:	ldr	w0, [sp, #76]
   12238:	eor	w0, w2, w0
   1223c:	and	w1, w1, w0
   12240:	ldr	w2, [sp, #72]
   12244:	ldr	w0, [sp, #76]
   12248:	and	w0, w2, w0
   1224c:	add	w0, w1, w0
   12250:	add	w1, w3, w0
   12254:	ldr	w0, [sp, #96]
   12258:	add	w0, w1, w0
   1225c:	str	w0, [sp, #96]
   12260:	ldr	w19, [sp, #80]
   12264:	ldr	w20, [sp, #80]
   12268:	ldr	w0, [sp, #80]
   1226c:	mov	w1, #0xe                   	// #14
   12270:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   12274:	eor	w0, w20, w0
   12278:	mov	w1, #0x5                   	// #5
   1227c:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   12280:	eor	w0, w19, w0
   12284:	mov	w1, #0x6                   	// #6
   12288:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   1228c:	mov	w4, w0
   12290:	ldr	w1, [sp, #88]
   12294:	ldr	w2, [sp, #80]
   12298:	ldr	w3, [sp, #84]
   1229c:	ldr	w0, [sp, #88]
   122a0:	eor	w0, w3, w0
   122a4:	and	w0, w2, w0
   122a8:	eor	w0, w1, w0
   122ac:	add	w1, w4, w0
   122b0:	mov	w0, #0xfbcf                	// #64463
   122b4:	movk	w0, #0xb5c0, lsl #16
   122b8:	add	w19, w1, w0
   122bc:	ldr	x0, [sp, #48]
   122c0:	add	x0, x0, #0x8
   122c4:	ldr	w0, [x0]
   122c8:	bl	11ffc <lzma_crc64@@XZ_5.0+0x1cc>
   122cc:	str	w0, [sp, #112]
   122d0:	ldr	w0, [sp, #112]
   122d4:	add	w1, w19, w0
   122d8:	ldr	w0, [sp, #92]
   122dc:	add	w0, w1, w0
   122e0:	str	w0, [sp, #92]
   122e4:	ldr	w1, [sp, #76]
   122e8:	ldr	w0, [sp, #92]
   122ec:	add	w0, w1, w0
   122f0:	str	w0, [sp, #76]
   122f4:	ldr	w19, [sp, #96]
   122f8:	ldr	w20, [sp, #96]
   122fc:	ldr	w0, [sp, #96]
   12300:	mov	w1, #0x9                   	// #9
   12304:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   12308:	eor	w0, w20, w0
   1230c:	mov	w1, #0xb                   	// #11
   12310:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   12314:	eor	w0, w19, w0
   12318:	mov	w1, #0x2                   	// #2
   1231c:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   12320:	mov	w3, w0
   12324:	ldr	w1, [sp, #96]
   12328:	ldr	w2, [sp, #100]
   1232c:	ldr	w0, [sp, #72]
   12330:	eor	w0, w2, w0
   12334:	and	w1, w1, w0
   12338:	ldr	w2, [sp, #100]
   1233c:	ldr	w0, [sp, #72]
   12340:	and	w0, w2, w0
   12344:	add	w0, w1, w0
   12348:	add	w1, w3, w0
   1234c:	ldr	w0, [sp, #92]
   12350:	add	w0, w1, w0
   12354:	str	w0, [sp, #92]
   12358:	ldr	w19, [sp, #76]
   1235c:	ldr	w20, [sp, #76]
   12360:	ldr	w0, [sp, #76]
   12364:	mov	w1, #0xe                   	// #14
   12368:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   1236c:	eor	w0, w20, w0
   12370:	mov	w1, #0x5                   	// #5
   12374:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   12378:	eor	w0, w19, w0
   1237c:	mov	w1, #0x6                   	// #6
   12380:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   12384:	mov	w4, w0
   12388:	ldr	w1, [sp, #84]
   1238c:	ldr	w2, [sp, #76]
   12390:	ldr	w3, [sp, #80]
   12394:	ldr	w0, [sp, #84]
   12398:	eor	w0, w3, w0
   1239c:	and	w0, w2, w0
   123a0:	eor	w0, w1, w0
   123a4:	add	w1, w4, w0
   123a8:	mov	w0, #0xdba5                	// #56229
   123ac:	movk	w0, #0xe9b5, lsl #16
   123b0:	add	w19, w1, w0
   123b4:	ldr	x0, [sp, #48]
   123b8:	add	x0, x0, #0xc
   123bc:	ldr	w0, [x0]
   123c0:	bl	11ffc <lzma_crc64@@XZ_5.0+0x1cc>
   123c4:	str	w0, [sp, #116]
   123c8:	ldr	w0, [sp, #116]
   123cc:	add	w1, w19, w0
   123d0:	ldr	w0, [sp, #88]
   123d4:	add	w0, w1, w0
   123d8:	str	w0, [sp, #88]
   123dc:	ldr	w1, [sp, #72]
   123e0:	ldr	w0, [sp, #88]
   123e4:	add	w0, w1, w0
   123e8:	str	w0, [sp, #72]
   123ec:	ldr	w19, [sp, #92]
   123f0:	ldr	w20, [sp, #92]
   123f4:	ldr	w0, [sp, #92]
   123f8:	mov	w1, #0x9                   	// #9
   123fc:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   12400:	eor	w0, w20, w0
   12404:	mov	w1, #0xb                   	// #11
   12408:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   1240c:	eor	w0, w19, w0
   12410:	mov	w1, #0x2                   	// #2
   12414:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   12418:	mov	w3, w0
   1241c:	ldr	w1, [sp, #92]
   12420:	ldr	w2, [sp, #96]
   12424:	ldr	w0, [sp, #100]
   12428:	eor	w0, w2, w0
   1242c:	and	w1, w1, w0
   12430:	ldr	w2, [sp, #96]
   12434:	ldr	w0, [sp, #100]
   12438:	and	w0, w2, w0
   1243c:	add	w0, w1, w0
   12440:	add	w1, w3, w0
   12444:	ldr	w0, [sp, #88]
   12448:	add	w0, w1, w0
   1244c:	str	w0, [sp, #88]
   12450:	ldr	w19, [sp, #72]
   12454:	ldr	w20, [sp, #72]
   12458:	ldr	w0, [sp, #72]
   1245c:	mov	w1, #0xe                   	// #14
   12460:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   12464:	eor	w0, w20, w0
   12468:	mov	w1, #0x5                   	// #5
   1246c:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   12470:	eor	w0, w19, w0
   12474:	mov	w1, #0x6                   	// #6
   12478:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   1247c:	mov	w4, w0
   12480:	ldr	w1, [sp, #80]
   12484:	ldr	w2, [sp, #72]
   12488:	ldr	w3, [sp, #76]
   1248c:	ldr	w0, [sp, #80]
   12490:	eor	w0, w3, w0
   12494:	and	w0, w2, w0
   12498:	eor	w0, w1, w0
   1249c:	add	w1, w4, w0
   124a0:	mov	w0, #0xc25b                	// #49755
   124a4:	movk	w0, #0x3956, lsl #16
   124a8:	add	w19, w1, w0
   124ac:	ldr	x0, [sp, #48]
   124b0:	add	x0, x0, #0x10
   124b4:	ldr	w0, [x0]
   124b8:	bl	11ffc <lzma_crc64@@XZ_5.0+0x1cc>
   124bc:	str	w0, [sp, #120]
   124c0:	ldr	w0, [sp, #120]
   124c4:	add	w1, w19, w0
   124c8:	ldr	w0, [sp, #84]
   124cc:	add	w0, w1, w0
   124d0:	str	w0, [sp, #84]
   124d4:	ldr	w1, [sp, #100]
   124d8:	ldr	w0, [sp, #84]
   124dc:	add	w0, w1, w0
   124e0:	str	w0, [sp, #100]
   124e4:	ldr	w19, [sp, #88]
   124e8:	ldr	w20, [sp, #88]
   124ec:	ldr	w0, [sp, #88]
   124f0:	mov	w1, #0x9                   	// #9
   124f4:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   124f8:	eor	w0, w20, w0
   124fc:	mov	w1, #0xb                   	// #11
   12500:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   12504:	eor	w0, w19, w0
   12508:	mov	w1, #0x2                   	// #2
   1250c:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   12510:	mov	w3, w0
   12514:	ldr	w1, [sp, #88]
   12518:	ldr	w2, [sp, #92]
   1251c:	ldr	w0, [sp, #96]
   12520:	eor	w0, w2, w0
   12524:	and	w1, w1, w0
   12528:	ldr	w2, [sp, #92]
   1252c:	ldr	w0, [sp, #96]
   12530:	and	w0, w2, w0
   12534:	add	w0, w1, w0
   12538:	add	w1, w3, w0
   1253c:	ldr	w0, [sp, #84]
   12540:	add	w0, w1, w0
   12544:	str	w0, [sp, #84]
   12548:	ldr	w19, [sp, #100]
   1254c:	ldr	w20, [sp, #100]
   12550:	ldr	w0, [sp, #100]
   12554:	mov	w1, #0xe                   	// #14
   12558:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   1255c:	eor	w0, w20, w0
   12560:	mov	w1, #0x5                   	// #5
   12564:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   12568:	eor	w0, w19, w0
   1256c:	mov	w1, #0x6                   	// #6
   12570:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   12574:	mov	w4, w0
   12578:	ldr	w1, [sp, #76]
   1257c:	ldr	w2, [sp, #100]
   12580:	ldr	w3, [sp, #72]
   12584:	ldr	w0, [sp, #76]
   12588:	eor	w0, w3, w0
   1258c:	and	w0, w2, w0
   12590:	eor	w0, w1, w0
   12594:	add	w1, w4, w0
   12598:	mov	w0, #0x11f1                	// #4593
   1259c:	movk	w0, #0x59f1, lsl #16
   125a0:	add	w19, w1, w0
   125a4:	ldr	x0, [sp, #48]
   125a8:	add	x0, x0, #0x14
   125ac:	ldr	w0, [x0]
   125b0:	bl	11ffc <lzma_crc64@@XZ_5.0+0x1cc>
   125b4:	str	w0, [sp, #124]
   125b8:	ldr	w0, [sp, #124]
   125bc:	add	w1, w19, w0
   125c0:	ldr	w0, [sp, #80]
   125c4:	add	w0, w1, w0
   125c8:	str	w0, [sp, #80]
   125cc:	ldr	w1, [sp, #96]
   125d0:	ldr	w0, [sp, #80]
   125d4:	add	w0, w1, w0
   125d8:	str	w0, [sp, #96]
   125dc:	ldr	w19, [sp, #84]
   125e0:	ldr	w20, [sp, #84]
   125e4:	ldr	w0, [sp, #84]
   125e8:	mov	w1, #0x9                   	// #9
   125ec:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   125f0:	eor	w0, w20, w0
   125f4:	mov	w1, #0xb                   	// #11
   125f8:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   125fc:	eor	w0, w19, w0
   12600:	mov	w1, #0x2                   	// #2
   12604:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   12608:	mov	w3, w0
   1260c:	ldr	w1, [sp, #84]
   12610:	ldr	w2, [sp, #88]
   12614:	ldr	w0, [sp, #92]
   12618:	eor	w0, w2, w0
   1261c:	and	w1, w1, w0
   12620:	ldr	w2, [sp, #88]
   12624:	ldr	w0, [sp, #92]
   12628:	and	w0, w2, w0
   1262c:	add	w0, w1, w0
   12630:	add	w1, w3, w0
   12634:	ldr	w0, [sp, #80]
   12638:	add	w0, w1, w0
   1263c:	str	w0, [sp, #80]
   12640:	ldr	w19, [sp, #96]
   12644:	ldr	w20, [sp, #96]
   12648:	ldr	w0, [sp, #96]
   1264c:	mov	w1, #0xe                   	// #14
   12650:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   12654:	eor	w0, w20, w0
   12658:	mov	w1, #0x5                   	// #5
   1265c:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   12660:	eor	w0, w19, w0
   12664:	mov	w1, #0x6                   	// #6
   12668:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   1266c:	mov	w4, w0
   12670:	ldr	w1, [sp, #72]
   12674:	ldr	w2, [sp, #96]
   12678:	ldr	w3, [sp, #100]
   1267c:	ldr	w0, [sp, #72]
   12680:	eor	w0, w3, w0
   12684:	and	w0, w2, w0
   12688:	eor	w0, w1, w0
   1268c:	add	w1, w4, w0
   12690:	mov	w0, #0x82a4                	// #33444
   12694:	movk	w0, #0x923f, lsl #16
   12698:	add	w19, w1, w0
   1269c:	ldr	x0, [sp, #48]
   126a0:	add	x0, x0, #0x18
   126a4:	ldr	w0, [x0]
   126a8:	bl	11ffc <lzma_crc64@@XZ_5.0+0x1cc>
   126ac:	str	w0, [sp, #128]
   126b0:	ldr	w0, [sp, #128]
   126b4:	add	w1, w19, w0
   126b8:	ldr	w0, [sp, #76]
   126bc:	add	w0, w1, w0
   126c0:	str	w0, [sp, #76]
   126c4:	ldr	w1, [sp, #92]
   126c8:	ldr	w0, [sp, #76]
   126cc:	add	w0, w1, w0
   126d0:	str	w0, [sp, #92]
   126d4:	ldr	w19, [sp, #80]
   126d8:	ldr	w20, [sp, #80]
   126dc:	ldr	w0, [sp, #80]
   126e0:	mov	w1, #0x9                   	// #9
   126e4:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   126e8:	eor	w0, w20, w0
   126ec:	mov	w1, #0xb                   	// #11
   126f0:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   126f4:	eor	w0, w19, w0
   126f8:	mov	w1, #0x2                   	// #2
   126fc:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   12700:	mov	w3, w0
   12704:	ldr	w1, [sp, #80]
   12708:	ldr	w2, [sp, #84]
   1270c:	ldr	w0, [sp, #88]
   12710:	eor	w0, w2, w0
   12714:	and	w1, w1, w0
   12718:	ldr	w2, [sp, #84]
   1271c:	ldr	w0, [sp, #88]
   12720:	and	w0, w2, w0
   12724:	add	w0, w1, w0
   12728:	add	w1, w3, w0
   1272c:	ldr	w0, [sp, #76]
   12730:	add	w0, w1, w0
   12734:	str	w0, [sp, #76]
   12738:	ldr	w19, [sp, #92]
   1273c:	ldr	w20, [sp, #92]
   12740:	ldr	w0, [sp, #92]
   12744:	mov	w1, #0xe                   	// #14
   12748:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   1274c:	eor	w0, w20, w0
   12750:	mov	w1, #0x5                   	// #5
   12754:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   12758:	eor	w0, w19, w0
   1275c:	mov	w1, #0x6                   	// #6
   12760:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   12764:	mov	w4, w0
   12768:	ldr	w1, [sp, #100]
   1276c:	ldr	w2, [sp, #92]
   12770:	ldr	w3, [sp, #96]
   12774:	ldr	w0, [sp, #100]
   12778:	eor	w0, w3, w0
   1277c:	and	w0, w2, w0
   12780:	eor	w0, w1, w0
   12784:	add	w1, w4, w0
   12788:	mov	w0, #0x5ed5                	// #24277
   1278c:	movk	w0, #0xab1c, lsl #16
   12790:	add	w19, w1, w0
   12794:	ldr	x0, [sp, #48]
   12798:	add	x0, x0, #0x1c
   1279c:	ldr	w0, [x0]
   127a0:	bl	11ffc <lzma_crc64@@XZ_5.0+0x1cc>
   127a4:	str	w0, [sp, #132]
   127a8:	ldr	w0, [sp, #132]
   127ac:	add	w1, w19, w0
   127b0:	ldr	w0, [sp, #72]
   127b4:	add	w0, w1, w0
   127b8:	str	w0, [sp, #72]
   127bc:	ldr	w1, [sp, #88]
   127c0:	ldr	w0, [sp, #72]
   127c4:	add	w0, w1, w0
   127c8:	str	w0, [sp, #88]
   127cc:	ldr	w19, [sp, #76]
   127d0:	ldr	w20, [sp, #76]
   127d4:	ldr	w0, [sp, #76]
   127d8:	mov	w1, #0x9                   	// #9
   127dc:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   127e0:	eor	w0, w20, w0
   127e4:	mov	w1, #0xb                   	// #11
   127e8:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   127ec:	eor	w0, w19, w0
   127f0:	mov	w1, #0x2                   	// #2
   127f4:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   127f8:	mov	w3, w0
   127fc:	ldr	w1, [sp, #76]
   12800:	ldr	w2, [sp, #80]
   12804:	ldr	w0, [sp, #84]
   12808:	eor	w0, w2, w0
   1280c:	and	w1, w1, w0
   12810:	ldr	w2, [sp, #80]
   12814:	ldr	w0, [sp, #84]
   12818:	and	w0, w2, w0
   1281c:	add	w0, w1, w0
   12820:	add	w1, w3, w0
   12824:	ldr	w0, [sp, #72]
   12828:	add	w0, w1, w0
   1282c:	str	w0, [sp, #72]
   12830:	ldr	w19, [sp, #88]
   12834:	ldr	w20, [sp, #88]
   12838:	ldr	w0, [sp, #88]
   1283c:	mov	w1, #0xe                   	// #14
   12840:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   12844:	eor	w0, w20, w0
   12848:	mov	w1, #0x5                   	// #5
   1284c:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   12850:	eor	w0, w19, w0
   12854:	mov	w1, #0x6                   	// #6
   12858:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   1285c:	mov	w4, w0
   12860:	ldr	w1, [sp, #96]
   12864:	ldr	w2, [sp, #88]
   12868:	ldr	w3, [sp, #92]
   1286c:	ldr	w0, [sp, #96]
   12870:	eor	w0, w3, w0
   12874:	and	w0, w2, w0
   12878:	eor	w0, w1, w0
   1287c:	add	w1, w4, w0
   12880:	mov	w0, #0xaa98                	// #43672
   12884:	movk	w0, #0xd807, lsl #16
   12888:	add	w19, w1, w0
   1288c:	ldr	x0, [sp, #48]
   12890:	add	x0, x0, #0x20
   12894:	ldr	w0, [x0]
   12898:	bl	11ffc <lzma_crc64@@XZ_5.0+0x1cc>
   1289c:	str	w0, [sp, #136]
   128a0:	ldr	w0, [sp, #136]
   128a4:	add	w1, w19, w0
   128a8:	ldr	w0, [sp, #100]
   128ac:	add	w0, w1, w0
   128b0:	str	w0, [sp, #100]
   128b4:	ldr	w1, [sp, #84]
   128b8:	ldr	w0, [sp, #100]
   128bc:	add	w0, w1, w0
   128c0:	str	w0, [sp, #84]
   128c4:	ldr	w19, [sp, #72]
   128c8:	ldr	w20, [sp, #72]
   128cc:	ldr	w0, [sp, #72]
   128d0:	mov	w1, #0x9                   	// #9
   128d4:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   128d8:	eor	w0, w20, w0
   128dc:	mov	w1, #0xb                   	// #11
   128e0:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   128e4:	eor	w0, w19, w0
   128e8:	mov	w1, #0x2                   	// #2
   128ec:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   128f0:	mov	w3, w0
   128f4:	ldr	w1, [sp, #72]
   128f8:	ldr	w2, [sp, #76]
   128fc:	ldr	w0, [sp, #80]
   12900:	eor	w0, w2, w0
   12904:	and	w1, w1, w0
   12908:	ldr	w2, [sp, #76]
   1290c:	ldr	w0, [sp, #80]
   12910:	and	w0, w2, w0
   12914:	add	w0, w1, w0
   12918:	add	w1, w3, w0
   1291c:	ldr	w0, [sp, #100]
   12920:	add	w0, w1, w0
   12924:	str	w0, [sp, #100]
   12928:	ldr	w19, [sp, #84]
   1292c:	ldr	w20, [sp, #84]
   12930:	ldr	w0, [sp, #84]
   12934:	mov	w1, #0xe                   	// #14
   12938:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   1293c:	eor	w0, w20, w0
   12940:	mov	w1, #0x5                   	// #5
   12944:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   12948:	eor	w0, w19, w0
   1294c:	mov	w1, #0x6                   	// #6
   12950:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   12954:	mov	w4, w0
   12958:	ldr	w1, [sp, #92]
   1295c:	ldr	w2, [sp, #84]
   12960:	ldr	w3, [sp, #88]
   12964:	ldr	w0, [sp, #92]
   12968:	eor	w0, w3, w0
   1296c:	and	w0, w2, w0
   12970:	eor	w0, w1, w0
   12974:	add	w1, w4, w0
   12978:	mov	w0, #0x5b01                	// #23297
   1297c:	movk	w0, #0x1283, lsl #16
   12980:	add	w19, w1, w0
   12984:	ldr	x0, [sp, #48]
   12988:	add	x0, x0, #0x24
   1298c:	ldr	w0, [x0]
   12990:	bl	11ffc <lzma_crc64@@XZ_5.0+0x1cc>
   12994:	str	w0, [sp, #140]
   12998:	ldr	w0, [sp, #140]
   1299c:	add	w1, w19, w0
   129a0:	ldr	w0, [sp, #96]
   129a4:	add	w0, w1, w0
   129a8:	str	w0, [sp, #96]
   129ac:	ldr	w1, [sp, #80]
   129b0:	ldr	w0, [sp, #96]
   129b4:	add	w0, w1, w0
   129b8:	str	w0, [sp, #80]
   129bc:	ldr	w19, [sp, #100]
   129c0:	ldr	w20, [sp, #100]
   129c4:	ldr	w0, [sp, #100]
   129c8:	mov	w1, #0x9                   	// #9
   129cc:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   129d0:	eor	w0, w20, w0
   129d4:	mov	w1, #0xb                   	// #11
   129d8:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   129dc:	eor	w0, w19, w0
   129e0:	mov	w1, #0x2                   	// #2
   129e4:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   129e8:	mov	w3, w0
   129ec:	ldr	w1, [sp, #100]
   129f0:	ldr	w2, [sp, #72]
   129f4:	ldr	w0, [sp, #76]
   129f8:	eor	w0, w2, w0
   129fc:	and	w1, w1, w0
   12a00:	ldr	w2, [sp, #72]
   12a04:	ldr	w0, [sp, #76]
   12a08:	and	w0, w2, w0
   12a0c:	add	w0, w1, w0
   12a10:	add	w1, w3, w0
   12a14:	ldr	w0, [sp, #96]
   12a18:	add	w0, w1, w0
   12a1c:	str	w0, [sp, #96]
   12a20:	ldr	w19, [sp, #80]
   12a24:	ldr	w20, [sp, #80]
   12a28:	ldr	w0, [sp, #80]
   12a2c:	mov	w1, #0xe                   	// #14
   12a30:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   12a34:	eor	w0, w20, w0
   12a38:	mov	w1, #0x5                   	// #5
   12a3c:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   12a40:	eor	w0, w19, w0
   12a44:	mov	w1, #0x6                   	// #6
   12a48:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   12a4c:	mov	w4, w0
   12a50:	ldr	w1, [sp, #88]
   12a54:	ldr	w2, [sp, #80]
   12a58:	ldr	w3, [sp, #84]
   12a5c:	ldr	w0, [sp, #88]
   12a60:	eor	w0, w3, w0
   12a64:	and	w0, w2, w0
   12a68:	eor	w0, w1, w0
   12a6c:	add	w1, w4, w0
   12a70:	mov	w0, #0x85be                	// #34238
   12a74:	movk	w0, #0x2431, lsl #16
   12a78:	add	w19, w1, w0
   12a7c:	ldr	x0, [sp, #48]
   12a80:	add	x0, x0, #0x28
   12a84:	ldr	w0, [x0]
   12a88:	bl	11ffc <lzma_crc64@@XZ_5.0+0x1cc>
   12a8c:	str	w0, [sp, #144]
   12a90:	ldr	w0, [sp, #144]
   12a94:	add	w1, w19, w0
   12a98:	ldr	w0, [sp, #92]
   12a9c:	add	w0, w1, w0
   12aa0:	str	w0, [sp, #92]
   12aa4:	ldr	w1, [sp, #76]
   12aa8:	ldr	w0, [sp, #92]
   12aac:	add	w0, w1, w0
   12ab0:	str	w0, [sp, #76]
   12ab4:	ldr	w19, [sp, #96]
   12ab8:	ldr	w20, [sp, #96]
   12abc:	ldr	w0, [sp, #96]
   12ac0:	mov	w1, #0x9                   	// #9
   12ac4:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   12ac8:	eor	w0, w20, w0
   12acc:	mov	w1, #0xb                   	// #11
   12ad0:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   12ad4:	eor	w0, w19, w0
   12ad8:	mov	w1, #0x2                   	// #2
   12adc:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   12ae0:	mov	w3, w0
   12ae4:	ldr	w1, [sp, #96]
   12ae8:	ldr	w2, [sp, #100]
   12aec:	ldr	w0, [sp, #72]
   12af0:	eor	w0, w2, w0
   12af4:	and	w1, w1, w0
   12af8:	ldr	w2, [sp, #100]
   12afc:	ldr	w0, [sp, #72]
   12b00:	and	w0, w2, w0
   12b04:	add	w0, w1, w0
   12b08:	add	w1, w3, w0
   12b0c:	ldr	w0, [sp, #92]
   12b10:	add	w0, w1, w0
   12b14:	str	w0, [sp, #92]
   12b18:	ldr	w19, [sp, #76]
   12b1c:	ldr	w20, [sp, #76]
   12b20:	ldr	w0, [sp, #76]
   12b24:	mov	w1, #0xe                   	// #14
   12b28:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   12b2c:	eor	w0, w20, w0
   12b30:	mov	w1, #0x5                   	// #5
   12b34:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   12b38:	eor	w0, w19, w0
   12b3c:	mov	w1, #0x6                   	// #6
   12b40:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   12b44:	mov	w4, w0
   12b48:	ldr	w1, [sp, #84]
   12b4c:	ldr	w2, [sp, #76]
   12b50:	ldr	w3, [sp, #80]
   12b54:	ldr	w0, [sp, #84]
   12b58:	eor	w0, w3, w0
   12b5c:	and	w0, w2, w0
   12b60:	eor	w0, w1, w0
   12b64:	add	w1, w4, w0
   12b68:	mov	w0, #0x7dc3                	// #32195
   12b6c:	movk	w0, #0x550c, lsl #16
   12b70:	add	w19, w1, w0
   12b74:	ldr	x0, [sp, #48]
   12b78:	add	x0, x0, #0x2c
   12b7c:	ldr	w0, [x0]
   12b80:	bl	11ffc <lzma_crc64@@XZ_5.0+0x1cc>
   12b84:	str	w0, [sp, #148]
   12b88:	ldr	w0, [sp, #148]
   12b8c:	add	w1, w19, w0
   12b90:	ldr	w0, [sp, #88]
   12b94:	add	w0, w1, w0
   12b98:	str	w0, [sp, #88]
   12b9c:	ldr	w1, [sp, #72]
   12ba0:	ldr	w0, [sp, #88]
   12ba4:	add	w0, w1, w0
   12ba8:	str	w0, [sp, #72]
   12bac:	ldr	w19, [sp, #92]
   12bb0:	ldr	w20, [sp, #92]
   12bb4:	ldr	w0, [sp, #92]
   12bb8:	mov	w1, #0x9                   	// #9
   12bbc:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   12bc0:	eor	w0, w20, w0
   12bc4:	mov	w1, #0xb                   	// #11
   12bc8:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   12bcc:	eor	w0, w19, w0
   12bd0:	mov	w1, #0x2                   	// #2
   12bd4:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   12bd8:	mov	w3, w0
   12bdc:	ldr	w1, [sp, #92]
   12be0:	ldr	w2, [sp, #96]
   12be4:	ldr	w0, [sp, #100]
   12be8:	eor	w0, w2, w0
   12bec:	and	w1, w1, w0
   12bf0:	ldr	w2, [sp, #96]
   12bf4:	ldr	w0, [sp, #100]
   12bf8:	and	w0, w2, w0
   12bfc:	add	w0, w1, w0
   12c00:	add	w1, w3, w0
   12c04:	ldr	w0, [sp, #88]
   12c08:	add	w0, w1, w0
   12c0c:	str	w0, [sp, #88]
   12c10:	ldr	w19, [sp, #72]
   12c14:	ldr	w20, [sp, #72]
   12c18:	ldr	w0, [sp, #72]
   12c1c:	mov	w1, #0xe                   	// #14
   12c20:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   12c24:	eor	w0, w20, w0
   12c28:	mov	w1, #0x5                   	// #5
   12c2c:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   12c30:	eor	w0, w19, w0
   12c34:	mov	w1, #0x6                   	// #6
   12c38:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   12c3c:	mov	w4, w0
   12c40:	ldr	w1, [sp, #80]
   12c44:	ldr	w2, [sp, #72]
   12c48:	ldr	w3, [sp, #76]
   12c4c:	ldr	w0, [sp, #80]
   12c50:	eor	w0, w3, w0
   12c54:	and	w0, w2, w0
   12c58:	eor	w0, w1, w0
   12c5c:	add	w1, w4, w0
   12c60:	mov	w0, #0x5d74                	// #23924
   12c64:	movk	w0, #0x72be, lsl #16
   12c68:	add	w19, w1, w0
   12c6c:	ldr	x0, [sp, #48]
   12c70:	add	x0, x0, #0x30
   12c74:	ldr	w0, [x0]
   12c78:	bl	11ffc <lzma_crc64@@XZ_5.0+0x1cc>
   12c7c:	str	w0, [sp, #152]
   12c80:	ldr	w0, [sp, #152]
   12c84:	add	w1, w19, w0
   12c88:	ldr	w0, [sp, #84]
   12c8c:	add	w0, w1, w0
   12c90:	str	w0, [sp, #84]
   12c94:	ldr	w1, [sp, #100]
   12c98:	ldr	w0, [sp, #84]
   12c9c:	add	w0, w1, w0
   12ca0:	str	w0, [sp, #100]
   12ca4:	ldr	w19, [sp, #88]
   12ca8:	ldr	w20, [sp, #88]
   12cac:	ldr	w0, [sp, #88]
   12cb0:	mov	w1, #0x9                   	// #9
   12cb4:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   12cb8:	eor	w0, w20, w0
   12cbc:	mov	w1, #0xb                   	// #11
   12cc0:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   12cc4:	eor	w0, w19, w0
   12cc8:	mov	w1, #0x2                   	// #2
   12ccc:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   12cd0:	mov	w3, w0
   12cd4:	ldr	w1, [sp, #88]
   12cd8:	ldr	w2, [sp, #92]
   12cdc:	ldr	w0, [sp, #96]
   12ce0:	eor	w0, w2, w0
   12ce4:	and	w1, w1, w0
   12ce8:	ldr	w2, [sp, #92]
   12cec:	ldr	w0, [sp, #96]
   12cf0:	and	w0, w2, w0
   12cf4:	add	w0, w1, w0
   12cf8:	add	w1, w3, w0
   12cfc:	ldr	w0, [sp, #84]
   12d00:	add	w0, w1, w0
   12d04:	str	w0, [sp, #84]
   12d08:	ldr	w19, [sp, #100]
   12d0c:	ldr	w20, [sp, #100]
   12d10:	ldr	w0, [sp, #100]
   12d14:	mov	w1, #0xe                   	// #14
   12d18:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   12d1c:	eor	w0, w20, w0
   12d20:	mov	w1, #0x5                   	// #5
   12d24:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   12d28:	eor	w0, w19, w0
   12d2c:	mov	w1, #0x6                   	// #6
   12d30:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   12d34:	mov	w4, w0
   12d38:	ldr	w1, [sp, #76]
   12d3c:	ldr	w2, [sp, #100]
   12d40:	ldr	w3, [sp, #72]
   12d44:	ldr	w0, [sp, #76]
   12d48:	eor	w0, w3, w0
   12d4c:	and	w0, w2, w0
   12d50:	eor	w0, w1, w0
   12d54:	add	w1, w4, w0
   12d58:	mov	w0, #0xb1fe                	// #45566
   12d5c:	movk	w0, #0x80de, lsl #16
   12d60:	add	w19, w1, w0
   12d64:	ldr	x0, [sp, #48]
   12d68:	add	x0, x0, #0x34
   12d6c:	ldr	w0, [x0]
   12d70:	bl	11ffc <lzma_crc64@@XZ_5.0+0x1cc>
   12d74:	str	w0, [sp, #156]
   12d78:	ldr	w0, [sp, #156]
   12d7c:	add	w1, w19, w0
   12d80:	ldr	w0, [sp, #80]
   12d84:	add	w0, w1, w0
   12d88:	str	w0, [sp, #80]
   12d8c:	ldr	w1, [sp, #96]
   12d90:	ldr	w0, [sp, #80]
   12d94:	add	w0, w1, w0
   12d98:	str	w0, [sp, #96]
   12d9c:	ldr	w19, [sp, #84]
   12da0:	ldr	w20, [sp, #84]
   12da4:	ldr	w0, [sp, #84]
   12da8:	mov	w1, #0x9                   	// #9
   12dac:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   12db0:	eor	w0, w20, w0
   12db4:	mov	w1, #0xb                   	// #11
   12db8:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   12dbc:	eor	w0, w19, w0
   12dc0:	mov	w1, #0x2                   	// #2
   12dc4:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   12dc8:	mov	w3, w0
   12dcc:	ldr	w1, [sp, #84]
   12dd0:	ldr	w2, [sp, #88]
   12dd4:	ldr	w0, [sp, #92]
   12dd8:	eor	w0, w2, w0
   12ddc:	and	w1, w1, w0
   12de0:	ldr	w2, [sp, #88]
   12de4:	ldr	w0, [sp, #92]
   12de8:	and	w0, w2, w0
   12dec:	add	w0, w1, w0
   12df0:	add	w1, w3, w0
   12df4:	ldr	w0, [sp, #80]
   12df8:	add	w0, w1, w0
   12dfc:	str	w0, [sp, #80]
   12e00:	ldr	w19, [sp, #96]
   12e04:	ldr	w20, [sp, #96]
   12e08:	ldr	w0, [sp, #96]
   12e0c:	mov	w1, #0xe                   	// #14
   12e10:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   12e14:	eor	w0, w20, w0
   12e18:	mov	w1, #0x5                   	// #5
   12e1c:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   12e20:	eor	w0, w19, w0
   12e24:	mov	w1, #0x6                   	// #6
   12e28:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   12e2c:	mov	w4, w0
   12e30:	ldr	w1, [sp, #72]
   12e34:	ldr	w2, [sp, #96]
   12e38:	ldr	w3, [sp, #100]
   12e3c:	ldr	w0, [sp, #72]
   12e40:	eor	w0, w3, w0
   12e44:	and	w0, w2, w0
   12e48:	eor	w0, w1, w0
   12e4c:	add	w1, w4, w0
   12e50:	mov	w0, #0x6a7                 	// #1703
   12e54:	movk	w0, #0x9bdc, lsl #16
   12e58:	add	w19, w1, w0
   12e5c:	ldr	x0, [sp, #48]
   12e60:	add	x0, x0, #0x38
   12e64:	ldr	w0, [x0]
   12e68:	bl	11ffc <lzma_crc64@@XZ_5.0+0x1cc>
   12e6c:	str	w0, [sp, #160]
   12e70:	ldr	w0, [sp, #160]
   12e74:	add	w1, w19, w0
   12e78:	ldr	w0, [sp, #76]
   12e7c:	add	w0, w1, w0
   12e80:	str	w0, [sp, #76]
   12e84:	ldr	w1, [sp, #92]
   12e88:	ldr	w0, [sp, #76]
   12e8c:	add	w0, w1, w0
   12e90:	str	w0, [sp, #92]
   12e94:	ldr	w19, [sp, #80]
   12e98:	ldr	w20, [sp, #80]
   12e9c:	ldr	w0, [sp, #80]
   12ea0:	mov	w1, #0x9                   	// #9
   12ea4:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   12ea8:	eor	w0, w20, w0
   12eac:	mov	w1, #0xb                   	// #11
   12eb0:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   12eb4:	eor	w0, w19, w0
   12eb8:	mov	w1, #0x2                   	// #2
   12ebc:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   12ec0:	mov	w3, w0
   12ec4:	ldr	w1, [sp, #80]
   12ec8:	ldr	w2, [sp, #84]
   12ecc:	ldr	w0, [sp, #88]
   12ed0:	eor	w0, w2, w0
   12ed4:	and	w1, w1, w0
   12ed8:	ldr	w2, [sp, #84]
   12edc:	ldr	w0, [sp, #88]
   12ee0:	and	w0, w2, w0
   12ee4:	add	w0, w1, w0
   12ee8:	add	w1, w3, w0
   12eec:	ldr	w0, [sp, #76]
   12ef0:	add	w0, w1, w0
   12ef4:	str	w0, [sp, #76]
   12ef8:	ldr	w19, [sp, #92]
   12efc:	ldr	w20, [sp, #92]
   12f00:	ldr	w0, [sp, #92]
   12f04:	mov	w1, #0xe                   	// #14
   12f08:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   12f0c:	eor	w0, w20, w0
   12f10:	mov	w1, #0x5                   	// #5
   12f14:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   12f18:	eor	w0, w19, w0
   12f1c:	mov	w1, #0x6                   	// #6
   12f20:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   12f24:	mov	w4, w0
   12f28:	ldr	w1, [sp, #100]
   12f2c:	ldr	w2, [sp, #92]
   12f30:	ldr	w3, [sp, #96]
   12f34:	ldr	w0, [sp, #100]
   12f38:	eor	w0, w3, w0
   12f3c:	and	w0, w2, w0
   12f40:	eor	w0, w1, w0
   12f44:	add	w1, w4, w0
   12f48:	mov	w0, #0xf174                	// #61812
   12f4c:	movk	w0, #0xc19b, lsl #16
   12f50:	add	w19, w1, w0
   12f54:	ldr	x0, [sp, #48]
   12f58:	add	x0, x0, #0x3c
   12f5c:	ldr	w0, [x0]
   12f60:	bl	11ffc <lzma_crc64@@XZ_5.0+0x1cc>
   12f64:	str	w0, [sp, #164]
   12f68:	ldr	w0, [sp, #164]
   12f6c:	add	w1, w19, w0
   12f70:	ldr	w0, [sp, #72]
   12f74:	add	w0, w1, w0
   12f78:	str	w0, [sp, #72]
   12f7c:	ldr	w1, [sp, #88]
   12f80:	ldr	w0, [sp, #72]
   12f84:	add	w0, w1, w0
   12f88:	str	w0, [sp, #88]
   12f8c:	ldr	w19, [sp, #76]
   12f90:	ldr	w20, [sp, #76]
   12f94:	ldr	w0, [sp, #76]
   12f98:	mov	w1, #0x9                   	// #9
   12f9c:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   12fa0:	eor	w0, w20, w0
   12fa4:	mov	w1, #0xb                   	// #11
   12fa8:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   12fac:	eor	w0, w19, w0
   12fb0:	mov	w1, #0x2                   	// #2
   12fb4:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   12fb8:	mov	w3, w0
   12fbc:	ldr	w1, [sp, #76]
   12fc0:	ldr	w2, [sp, #80]
   12fc4:	ldr	w0, [sp, #84]
   12fc8:	eor	w0, w2, w0
   12fcc:	and	w1, w1, w0
   12fd0:	ldr	w2, [sp, #80]
   12fd4:	ldr	w0, [sp, #84]
   12fd8:	and	w0, w2, w0
   12fdc:	add	w0, w1, w0
   12fe0:	add	w1, w3, w0
   12fe4:	ldr	w0, [sp, #72]
   12fe8:	add	w0, w1, w0
   12fec:	str	w0, [sp, #72]
   12ff0:	mov	w0, #0x10                  	// #16
   12ff4:	str	w0, [sp, #172]
   12ff8:	b	14640 <lzma_crc64@@XZ_5.0+0x2810>
   12ffc:	ldr	w19, [sp, #160]
   13000:	ldr	w0, [sp, #160]
   13004:	mov	w1, #0x2                   	// #2
   13008:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   1300c:	eor	w0, w19, w0
   13010:	mov	w1, #0x11                  	// #17
   13014:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   13018:	mov	w1, w0
   1301c:	ldr	w0, [sp, #160]
   13020:	lsr	w0, w0, #10
   13024:	eor	w1, w1, w0
   13028:	ldr	w0, [sp, #140]
   1302c:	add	w19, w1, w0
   13030:	ldr	w20, [sp, #108]
   13034:	ldr	w0, [sp, #108]
   13038:	mov	w1, #0xb                   	// #11
   1303c:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   13040:	eor	w0, w20, w0
   13044:	mov	w1, #0x7                   	// #7
   13048:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   1304c:	mov	w1, w0
   13050:	ldr	w0, [sp, #108]
   13054:	lsr	w0, w0, #3
   13058:	eor	w0, w1, w0
   1305c:	add	w19, w19, w0
   13060:	ldr	w20, [sp, #88]
   13064:	ldr	w21, [sp, #88]
   13068:	ldr	w0, [sp, #88]
   1306c:	mov	w1, #0xe                   	// #14
   13070:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   13074:	eor	w0, w21, w0
   13078:	mov	w1, #0x5                   	// #5
   1307c:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   13080:	eor	w0, w20, w0
   13084:	mov	w1, #0x6                   	// #6
   13088:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   1308c:	mov	w4, w0
   13090:	ldr	w1, [sp, #96]
   13094:	ldr	w2, [sp, #88]
   13098:	ldr	w3, [sp, #92]
   1309c:	ldr	w0, [sp, #96]
   130a0:	eor	w0, w3, w0
   130a4:	and	w0, w2, w0
   130a8:	eor	w0, w1, w0
   130ac:	add	w1, w4, w0
   130b0:	adrp	x0, 30000 <lzma_mode_is_supported@@XZ_5.0+0x15368>
   130b4:	add	x0, x0, #0xa8
   130b8:	ldr	w2, [sp, #172]
   130bc:	ldr	w0, [x0, x2, lsl #2]
   130c0:	add	w1, w1, w0
   130c4:	ldr	w0, [sp, #104]
   130c8:	add	w0, w19, w0
   130cc:	str	w0, [sp, #104]
   130d0:	ldr	w0, [sp, #104]
   130d4:	add	w1, w1, w0
   130d8:	ldr	w0, [sp, #100]
   130dc:	add	w0, w1, w0
   130e0:	str	w0, [sp, #100]
   130e4:	ldr	w1, [sp, #84]
   130e8:	ldr	w0, [sp, #100]
   130ec:	add	w0, w1, w0
   130f0:	str	w0, [sp, #84]
   130f4:	ldr	w19, [sp, #72]
   130f8:	ldr	w20, [sp, #72]
   130fc:	ldr	w0, [sp, #72]
   13100:	mov	w1, #0x9                   	// #9
   13104:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   13108:	eor	w0, w20, w0
   1310c:	mov	w1, #0xb                   	// #11
   13110:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   13114:	eor	w0, w19, w0
   13118:	mov	w1, #0x2                   	// #2
   1311c:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   13120:	mov	w3, w0
   13124:	ldr	w1, [sp, #72]
   13128:	ldr	w2, [sp, #76]
   1312c:	ldr	w0, [sp, #80]
   13130:	eor	w0, w2, w0
   13134:	and	w1, w1, w0
   13138:	ldr	w2, [sp, #76]
   1313c:	ldr	w0, [sp, #80]
   13140:	and	w0, w2, w0
   13144:	add	w0, w1, w0
   13148:	add	w1, w3, w0
   1314c:	ldr	w0, [sp, #100]
   13150:	add	w0, w1, w0
   13154:	str	w0, [sp, #100]
   13158:	ldr	w19, [sp, #164]
   1315c:	ldr	w0, [sp, #164]
   13160:	mov	w1, #0x2                   	// #2
   13164:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   13168:	eor	w0, w19, w0
   1316c:	mov	w1, #0x11                  	// #17
   13170:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   13174:	mov	w1, w0
   13178:	ldr	w0, [sp, #164]
   1317c:	lsr	w0, w0, #10
   13180:	eor	w1, w1, w0
   13184:	ldr	w0, [sp, #144]
   13188:	add	w19, w1, w0
   1318c:	ldr	w20, [sp, #112]
   13190:	ldr	w0, [sp, #112]
   13194:	mov	w1, #0xb                   	// #11
   13198:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   1319c:	eor	w0, w20, w0
   131a0:	mov	w1, #0x7                   	// #7
   131a4:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   131a8:	mov	w1, w0
   131ac:	ldr	w0, [sp, #112]
   131b0:	lsr	w0, w0, #3
   131b4:	eor	w0, w1, w0
   131b8:	add	w19, w19, w0
   131bc:	ldr	w20, [sp, #84]
   131c0:	ldr	w21, [sp, #84]
   131c4:	ldr	w0, [sp, #84]
   131c8:	mov	w1, #0xe                   	// #14
   131cc:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   131d0:	eor	w0, w21, w0
   131d4:	mov	w1, #0x5                   	// #5
   131d8:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   131dc:	eor	w0, w20, w0
   131e0:	mov	w1, #0x6                   	// #6
   131e4:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   131e8:	mov	w4, w0
   131ec:	ldr	w1, [sp, #92]
   131f0:	ldr	w2, [sp, #84]
   131f4:	ldr	w3, [sp, #88]
   131f8:	ldr	w0, [sp, #92]
   131fc:	eor	w0, w3, w0
   13200:	and	w0, w2, w0
   13204:	eor	w0, w1, w0
   13208:	add	w1, w4, w0
   1320c:	ldr	w0, [sp, #172]
   13210:	add	w2, w0, #0x1
   13214:	adrp	x0, 30000 <lzma_mode_is_supported@@XZ_5.0+0x15368>
   13218:	add	x0, x0, #0xa8
   1321c:	mov	w2, w2
   13220:	ldr	w0, [x0, x2, lsl #2]
   13224:	add	w1, w1, w0
   13228:	ldr	w0, [sp, #108]
   1322c:	add	w0, w19, w0
   13230:	str	w0, [sp, #108]
   13234:	ldr	w0, [sp, #108]
   13238:	add	w1, w1, w0
   1323c:	ldr	w0, [sp, #96]
   13240:	add	w0, w1, w0
   13244:	str	w0, [sp, #96]
   13248:	ldr	w1, [sp, #80]
   1324c:	ldr	w0, [sp, #96]
   13250:	add	w0, w1, w0
   13254:	str	w0, [sp, #80]
   13258:	ldr	w19, [sp, #100]
   1325c:	ldr	w20, [sp, #100]
   13260:	ldr	w0, [sp, #100]
   13264:	mov	w1, #0x9                   	// #9
   13268:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   1326c:	eor	w0, w20, w0
   13270:	mov	w1, #0xb                   	// #11
   13274:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   13278:	eor	w0, w19, w0
   1327c:	mov	w1, #0x2                   	// #2
   13280:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   13284:	mov	w3, w0
   13288:	ldr	w1, [sp, #100]
   1328c:	ldr	w2, [sp, #72]
   13290:	ldr	w0, [sp, #76]
   13294:	eor	w0, w2, w0
   13298:	and	w1, w1, w0
   1329c:	ldr	w2, [sp, #72]
   132a0:	ldr	w0, [sp, #76]
   132a4:	and	w0, w2, w0
   132a8:	add	w0, w1, w0
   132ac:	add	w1, w3, w0
   132b0:	ldr	w0, [sp, #96]
   132b4:	add	w0, w1, w0
   132b8:	str	w0, [sp, #96]
   132bc:	ldr	w19, [sp, #104]
   132c0:	ldr	w0, [sp, #104]
   132c4:	mov	w1, #0x2                   	// #2
   132c8:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   132cc:	eor	w0, w19, w0
   132d0:	mov	w1, #0x11                  	// #17
   132d4:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   132d8:	mov	w1, w0
   132dc:	ldr	w0, [sp, #104]
   132e0:	lsr	w0, w0, #10
   132e4:	eor	w1, w1, w0
   132e8:	ldr	w0, [sp, #148]
   132ec:	add	w19, w1, w0
   132f0:	ldr	w20, [sp, #116]
   132f4:	ldr	w0, [sp, #116]
   132f8:	mov	w1, #0xb                   	// #11
   132fc:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   13300:	eor	w0, w20, w0
   13304:	mov	w1, #0x7                   	// #7
   13308:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   1330c:	mov	w1, w0
   13310:	ldr	w0, [sp, #116]
   13314:	lsr	w0, w0, #3
   13318:	eor	w0, w1, w0
   1331c:	add	w19, w19, w0
   13320:	ldr	w20, [sp, #80]
   13324:	ldr	w21, [sp, #80]
   13328:	ldr	w0, [sp, #80]
   1332c:	mov	w1, #0xe                   	// #14
   13330:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   13334:	eor	w0, w21, w0
   13338:	mov	w1, #0x5                   	// #5
   1333c:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   13340:	eor	w0, w20, w0
   13344:	mov	w1, #0x6                   	// #6
   13348:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   1334c:	mov	w4, w0
   13350:	ldr	w1, [sp, #88]
   13354:	ldr	w2, [sp, #80]
   13358:	ldr	w3, [sp, #84]
   1335c:	ldr	w0, [sp, #88]
   13360:	eor	w0, w3, w0
   13364:	and	w0, w2, w0
   13368:	eor	w0, w1, w0
   1336c:	add	w1, w4, w0
   13370:	ldr	w0, [sp, #172]
   13374:	add	w2, w0, #0x2
   13378:	adrp	x0, 30000 <lzma_mode_is_supported@@XZ_5.0+0x15368>
   1337c:	add	x0, x0, #0xa8
   13380:	mov	w2, w2
   13384:	ldr	w0, [x0, x2, lsl #2]
   13388:	add	w1, w1, w0
   1338c:	ldr	w0, [sp, #112]
   13390:	add	w0, w19, w0
   13394:	str	w0, [sp, #112]
   13398:	ldr	w0, [sp, #112]
   1339c:	add	w1, w1, w0
   133a0:	ldr	w0, [sp, #92]
   133a4:	add	w0, w1, w0
   133a8:	str	w0, [sp, #92]
   133ac:	ldr	w1, [sp, #76]
   133b0:	ldr	w0, [sp, #92]
   133b4:	add	w0, w1, w0
   133b8:	str	w0, [sp, #76]
   133bc:	ldr	w19, [sp, #96]
   133c0:	ldr	w20, [sp, #96]
   133c4:	ldr	w0, [sp, #96]
   133c8:	mov	w1, #0x9                   	// #9
   133cc:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   133d0:	eor	w0, w20, w0
   133d4:	mov	w1, #0xb                   	// #11
   133d8:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   133dc:	eor	w0, w19, w0
   133e0:	mov	w1, #0x2                   	// #2
   133e4:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   133e8:	mov	w3, w0
   133ec:	ldr	w1, [sp, #96]
   133f0:	ldr	w2, [sp, #100]
   133f4:	ldr	w0, [sp, #72]
   133f8:	eor	w0, w2, w0
   133fc:	and	w1, w1, w0
   13400:	ldr	w2, [sp, #100]
   13404:	ldr	w0, [sp, #72]
   13408:	and	w0, w2, w0
   1340c:	add	w0, w1, w0
   13410:	add	w1, w3, w0
   13414:	ldr	w0, [sp, #92]
   13418:	add	w0, w1, w0
   1341c:	str	w0, [sp, #92]
   13420:	ldr	w19, [sp, #108]
   13424:	ldr	w0, [sp, #108]
   13428:	mov	w1, #0x2                   	// #2
   1342c:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   13430:	eor	w0, w19, w0
   13434:	mov	w1, #0x11                  	// #17
   13438:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   1343c:	mov	w1, w0
   13440:	ldr	w0, [sp, #108]
   13444:	lsr	w0, w0, #10
   13448:	eor	w1, w1, w0
   1344c:	ldr	w0, [sp, #152]
   13450:	add	w19, w1, w0
   13454:	ldr	w20, [sp, #120]
   13458:	ldr	w0, [sp, #120]
   1345c:	mov	w1, #0xb                   	// #11
   13460:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   13464:	eor	w0, w20, w0
   13468:	mov	w1, #0x7                   	// #7
   1346c:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   13470:	mov	w1, w0
   13474:	ldr	w0, [sp, #120]
   13478:	lsr	w0, w0, #3
   1347c:	eor	w0, w1, w0
   13480:	add	w19, w19, w0
   13484:	ldr	w20, [sp, #76]
   13488:	ldr	w21, [sp, #76]
   1348c:	ldr	w0, [sp, #76]
   13490:	mov	w1, #0xe                   	// #14
   13494:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   13498:	eor	w0, w21, w0
   1349c:	mov	w1, #0x5                   	// #5
   134a0:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   134a4:	eor	w0, w20, w0
   134a8:	mov	w1, #0x6                   	// #6
   134ac:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   134b0:	mov	w4, w0
   134b4:	ldr	w1, [sp, #84]
   134b8:	ldr	w2, [sp, #76]
   134bc:	ldr	w3, [sp, #80]
   134c0:	ldr	w0, [sp, #84]
   134c4:	eor	w0, w3, w0
   134c8:	and	w0, w2, w0
   134cc:	eor	w0, w1, w0
   134d0:	add	w1, w4, w0
   134d4:	ldr	w0, [sp, #172]
   134d8:	add	w2, w0, #0x3
   134dc:	adrp	x0, 30000 <lzma_mode_is_supported@@XZ_5.0+0x15368>
   134e0:	add	x0, x0, #0xa8
   134e4:	mov	w2, w2
   134e8:	ldr	w0, [x0, x2, lsl #2]
   134ec:	add	w1, w1, w0
   134f0:	ldr	w0, [sp, #116]
   134f4:	add	w0, w19, w0
   134f8:	str	w0, [sp, #116]
   134fc:	ldr	w0, [sp, #116]
   13500:	add	w1, w1, w0
   13504:	ldr	w0, [sp, #88]
   13508:	add	w0, w1, w0
   1350c:	str	w0, [sp, #88]
   13510:	ldr	w1, [sp, #72]
   13514:	ldr	w0, [sp, #88]
   13518:	add	w0, w1, w0
   1351c:	str	w0, [sp, #72]
   13520:	ldr	w19, [sp, #92]
   13524:	ldr	w20, [sp, #92]
   13528:	ldr	w0, [sp, #92]
   1352c:	mov	w1, #0x9                   	// #9
   13530:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   13534:	eor	w0, w20, w0
   13538:	mov	w1, #0xb                   	// #11
   1353c:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   13540:	eor	w0, w19, w0
   13544:	mov	w1, #0x2                   	// #2
   13548:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   1354c:	mov	w3, w0
   13550:	ldr	w1, [sp, #92]
   13554:	ldr	w2, [sp, #96]
   13558:	ldr	w0, [sp, #100]
   1355c:	eor	w0, w2, w0
   13560:	and	w1, w1, w0
   13564:	ldr	w2, [sp, #96]
   13568:	ldr	w0, [sp, #100]
   1356c:	and	w0, w2, w0
   13570:	add	w0, w1, w0
   13574:	add	w1, w3, w0
   13578:	ldr	w0, [sp, #88]
   1357c:	add	w0, w1, w0
   13580:	str	w0, [sp, #88]
   13584:	ldr	w19, [sp, #112]
   13588:	ldr	w0, [sp, #112]
   1358c:	mov	w1, #0x2                   	// #2
   13590:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   13594:	eor	w0, w19, w0
   13598:	mov	w1, #0x11                  	// #17
   1359c:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   135a0:	mov	w1, w0
   135a4:	ldr	w0, [sp, #112]
   135a8:	lsr	w0, w0, #10
   135ac:	eor	w1, w1, w0
   135b0:	ldr	w0, [sp, #156]
   135b4:	add	w19, w1, w0
   135b8:	ldr	w20, [sp, #124]
   135bc:	ldr	w0, [sp, #124]
   135c0:	mov	w1, #0xb                   	// #11
   135c4:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   135c8:	eor	w0, w20, w0
   135cc:	mov	w1, #0x7                   	// #7
   135d0:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   135d4:	mov	w1, w0
   135d8:	ldr	w0, [sp, #124]
   135dc:	lsr	w0, w0, #3
   135e0:	eor	w0, w1, w0
   135e4:	add	w19, w19, w0
   135e8:	ldr	w20, [sp, #72]
   135ec:	ldr	w21, [sp, #72]
   135f0:	ldr	w0, [sp, #72]
   135f4:	mov	w1, #0xe                   	// #14
   135f8:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   135fc:	eor	w0, w21, w0
   13600:	mov	w1, #0x5                   	// #5
   13604:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   13608:	eor	w0, w20, w0
   1360c:	mov	w1, #0x6                   	// #6
   13610:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   13614:	mov	w4, w0
   13618:	ldr	w1, [sp, #80]
   1361c:	ldr	w2, [sp, #72]
   13620:	ldr	w3, [sp, #76]
   13624:	ldr	w0, [sp, #80]
   13628:	eor	w0, w3, w0
   1362c:	and	w0, w2, w0
   13630:	eor	w0, w1, w0
   13634:	add	w1, w4, w0
   13638:	ldr	w0, [sp, #172]
   1363c:	add	w2, w0, #0x4
   13640:	adrp	x0, 30000 <lzma_mode_is_supported@@XZ_5.0+0x15368>
   13644:	add	x0, x0, #0xa8
   13648:	mov	w2, w2
   1364c:	ldr	w0, [x0, x2, lsl #2]
   13650:	add	w1, w1, w0
   13654:	ldr	w0, [sp, #120]
   13658:	add	w0, w19, w0
   1365c:	str	w0, [sp, #120]
   13660:	ldr	w0, [sp, #120]
   13664:	add	w1, w1, w0
   13668:	ldr	w0, [sp, #84]
   1366c:	add	w0, w1, w0
   13670:	str	w0, [sp, #84]
   13674:	ldr	w1, [sp, #100]
   13678:	ldr	w0, [sp, #84]
   1367c:	add	w0, w1, w0
   13680:	str	w0, [sp, #100]
   13684:	ldr	w19, [sp, #88]
   13688:	ldr	w20, [sp, #88]
   1368c:	ldr	w0, [sp, #88]
   13690:	mov	w1, #0x9                   	// #9
   13694:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   13698:	eor	w0, w20, w0
   1369c:	mov	w1, #0xb                   	// #11
   136a0:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   136a4:	eor	w0, w19, w0
   136a8:	mov	w1, #0x2                   	// #2
   136ac:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   136b0:	mov	w3, w0
   136b4:	ldr	w1, [sp, #88]
   136b8:	ldr	w2, [sp, #92]
   136bc:	ldr	w0, [sp, #96]
   136c0:	eor	w0, w2, w0
   136c4:	and	w1, w1, w0
   136c8:	ldr	w2, [sp, #92]
   136cc:	ldr	w0, [sp, #96]
   136d0:	and	w0, w2, w0
   136d4:	add	w0, w1, w0
   136d8:	add	w1, w3, w0
   136dc:	ldr	w0, [sp, #84]
   136e0:	add	w0, w1, w0
   136e4:	str	w0, [sp, #84]
   136e8:	ldr	w19, [sp, #116]
   136ec:	ldr	w0, [sp, #116]
   136f0:	mov	w1, #0x2                   	// #2
   136f4:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   136f8:	eor	w0, w19, w0
   136fc:	mov	w1, #0x11                  	// #17
   13700:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   13704:	mov	w1, w0
   13708:	ldr	w0, [sp, #116]
   1370c:	lsr	w0, w0, #10
   13710:	eor	w1, w1, w0
   13714:	ldr	w0, [sp, #160]
   13718:	add	w19, w1, w0
   1371c:	ldr	w20, [sp, #128]
   13720:	ldr	w0, [sp, #128]
   13724:	mov	w1, #0xb                   	// #11
   13728:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   1372c:	eor	w0, w20, w0
   13730:	mov	w1, #0x7                   	// #7
   13734:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   13738:	mov	w1, w0
   1373c:	ldr	w0, [sp, #128]
   13740:	lsr	w0, w0, #3
   13744:	eor	w0, w1, w0
   13748:	add	w19, w19, w0
   1374c:	ldr	w20, [sp, #100]
   13750:	ldr	w21, [sp, #100]
   13754:	ldr	w0, [sp, #100]
   13758:	mov	w1, #0xe                   	// #14
   1375c:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   13760:	eor	w0, w21, w0
   13764:	mov	w1, #0x5                   	// #5
   13768:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   1376c:	eor	w0, w20, w0
   13770:	mov	w1, #0x6                   	// #6
   13774:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   13778:	mov	w4, w0
   1377c:	ldr	w1, [sp, #76]
   13780:	ldr	w2, [sp, #100]
   13784:	ldr	w3, [sp, #72]
   13788:	ldr	w0, [sp, #76]
   1378c:	eor	w0, w3, w0
   13790:	and	w0, w2, w0
   13794:	eor	w0, w1, w0
   13798:	add	w1, w4, w0
   1379c:	ldr	w0, [sp, #172]
   137a0:	add	w2, w0, #0x5
   137a4:	adrp	x0, 30000 <lzma_mode_is_supported@@XZ_5.0+0x15368>
   137a8:	add	x0, x0, #0xa8
   137ac:	mov	w2, w2
   137b0:	ldr	w0, [x0, x2, lsl #2]
   137b4:	add	w1, w1, w0
   137b8:	ldr	w0, [sp, #124]
   137bc:	add	w0, w19, w0
   137c0:	str	w0, [sp, #124]
   137c4:	ldr	w0, [sp, #124]
   137c8:	add	w1, w1, w0
   137cc:	ldr	w0, [sp, #80]
   137d0:	add	w0, w1, w0
   137d4:	str	w0, [sp, #80]
   137d8:	ldr	w1, [sp, #96]
   137dc:	ldr	w0, [sp, #80]
   137e0:	add	w0, w1, w0
   137e4:	str	w0, [sp, #96]
   137e8:	ldr	w19, [sp, #84]
   137ec:	ldr	w20, [sp, #84]
   137f0:	ldr	w0, [sp, #84]
   137f4:	mov	w1, #0x9                   	// #9
   137f8:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   137fc:	eor	w0, w20, w0
   13800:	mov	w1, #0xb                   	// #11
   13804:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   13808:	eor	w0, w19, w0
   1380c:	mov	w1, #0x2                   	// #2
   13810:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   13814:	mov	w3, w0
   13818:	ldr	w1, [sp, #84]
   1381c:	ldr	w2, [sp, #88]
   13820:	ldr	w0, [sp, #92]
   13824:	eor	w0, w2, w0
   13828:	and	w1, w1, w0
   1382c:	ldr	w2, [sp, #88]
   13830:	ldr	w0, [sp, #92]
   13834:	and	w0, w2, w0
   13838:	add	w0, w1, w0
   1383c:	add	w1, w3, w0
   13840:	ldr	w0, [sp, #80]
   13844:	add	w0, w1, w0
   13848:	str	w0, [sp, #80]
   1384c:	ldr	w19, [sp, #120]
   13850:	ldr	w0, [sp, #120]
   13854:	mov	w1, #0x2                   	// #2
   13858:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   1385c:	eor	w0, w19, w0
   13860:	mov	w1, #0x11                  	// #17
   13864:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   13868:	mov	w1, w0
   1386c:	ldr	w0, [sp, #120]
   13870:	lsr	w0, w0, #10
   13874:	eor	w1, w1, w0
   13878:	ldr	w0, [sp, #164]
   1387c:	add	w19, w1, w0
   13880:	ldr	w20, [sp, #132]
   13884:	ldr	w0, [sp, #132]
   13888:	mov	w1, #0xb                   	// #11
   1388c:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   13890:	eor	w0, w20, w0
   13894:	mov	w1, #0x7                   	// #7
   13898:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   1389c:	mov	w1, w0
   138a0:	ldr	w0, [sp, #132]
   138a4:	lsr	w0, w0, #3
   138a8:	eor	w0, w1, w0
   138ac:	add	w19, w19, w0
   138b0:	ldr	w20, [sp, #96]
   138b4:	ldr	w21, [sp, #96]
   138b8:	ldr	w0, [sp, #96]
   138bc:	mov	w1, #0xe                   	// #14
   138c0:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   138c4:	eor	w0, w21, w0
   138c8:	mov	w1, #0x5                   	// #5
   138cc:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   138d0:	eor	w0, w20, w0
   138d4:	mov	w1, #0x6                   	// #6
   138d8:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   138dc:	mov	w4, w0
   138e0:	ldr	w1, [sp, #72]
   138e4:	ldr	w2, [sp, #96]
   138e8:	ldr	w3, [sp, #100]
   138ec:	ldr	w0, [sp, #72]
   138f0:	eor	w0, w3, w0
   138f4:	and	w0, w2, w0
   138f8:	eor	w0, w1, w0
   138fc:	add	w1, w4, w0
   13900:	ldr	w0, [sp, #172]
   13904:	add	w2, w0, #0x6
   13908:	adrp	x0, 30000 <lzma_mode_is_supported@@XZ_5.0+0x15368>
   1390c:	add	x0, x0, #0xa8
   13910:	mov	w2, w2
   13914:	ldr	w0, [x0, x2, lsl #2]
   13918:	add	w1, w1, w0
   1391c:	ldr	w0, [sp, #128]
   13920:	add	w0, w19, w0
   13924:	str	w0, [sp, #128]
   13928:	ldr	w0, [sp, #128]
   1392c:	add	w1, w1, w0
   13930:	ldr	w0, [sp, #76]
   13934:	add	w0, w1, w0
   13938:	str	w0, [sp, #76]
   1393c:	ldr	w1, [sp, #92]
   13940:	ldr	w0, [sp, #76]
   13944:	add	w0, w1, w0
   13948:	str	w0, [sp, #92]
   1394c:	ldr	w19, [sp, #80]
   13950:	ldr	w20, [sp, #80]
   13954:	ldr	w0, [sp, #80]
   13958:	mov	w1, #0x9                   	// #9
   1395c:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   13960:	eor	w0, w20, w0
   13964:	mov	w1, #0xb                   	// #11
   13968:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   1396c:	eor	w0, w19, w0
   13970:	mov	w1, #0x2                   	// #2
   13974:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   13978:	mov	w3, w0
   1397c:	ldr	w1, [sp, #80]
   13980:	ldr	w2, [sp, #84]
   13984:	ldr	w0, [sp, #88]
   13988:	eor	w0, w2, w0
   1398c:	and	w1, w1, w0
   13990:	ldr	w2, [sp, #84]
   13994:	ldr	w0, [sp, #88]
   13998:	and	w0, w2, w0
   1399c:	add	w0, w1, w0
   139a0:	add	w1, w3, w0
   139a4:	ldr	w0, [sp, #76]
   139a8:	add	w0, w1, w0
   139ac:	str	w0, [sp, #76]
   139b0:	ldr	w19, [sp, #124]
   139b4:	ldr	w0, [sp, #124]
   139b8:	mov	w1, #0x2                   	// #2
   139bc:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   139c0:	eor	w0, w19, w0
   139c4:	mov	w1, #0x11                  	// #17
   139c8:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   139cc:	mov	w1, w0
   139d0:	ldr	w0, [sp, #124]
   139d4:	lsr	w0, w0, #10
   139d8:	eor	w1, w1, w0
   139dc:	ldr	w0, [sp, #104]
   139e0:	add	w19, w1, w0
   139e4:	ldr	w20, [sp, #136]
   139e8:	ldr	w0, [sp, #136]
   139ec:	mov	w1, #0xb                   	// #11
   139f0:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   139f4:	eor	w0, w20, w0
   139f8:	mov	w1, #0x7                   	// #7
   139fc:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   13a00:	mov	w1, w0
   13a04:	ldr	w0, [sp, #136]
   13a08:	lsr	w0, w0, #3
   13a0c:	eor	w0, w1, w0
   13a10:	add	w19, w19, w0
   13a14:	ldr	w20, [sp, #92]
   13a18:	ldr	w21, [sp, #92]
   13a1c:	ldr	w0, [sp, #92]
   13a20:	mov	w1, #0xe                   	// #14
   13a24:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   13a28:	eor	w0, w21, w0
   13a2c:	mov	w1, #0x5                   	// #5
   13a30:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   13a34:	eor	w0, w20, w0
   13a38:	mov	w1, #0x6                   	// #6
   13a3c:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   13a40:	mov	w4, w0
   13a44:	ldr	w1, [sp, #100]
   13a48:	ldr	w2, [sp, #92]
   13a4c:	ldr	w3, [sp, #96]
   13a50:	ldr	w0, [sp, #100]
   13a54:	eor	w0, w3, w0
   13a58:	and	w0, w2, w0
   13a5c:	eor	w0, w1, w0
   13a60:	add	w1, w4, w0
   13a64:	ldr	w0, [sp, #172]
   13a68:	add	w2, w0, #0x7
   13a6c:	adrp	x0, 30000 <lzma_mode_is_supported@@XZ_5.0+0x15368>
   13a70:	add	x0, x0, #0xa8
   13a74:	mov	w2, w2
   13a78:	ldr	w0, [x0, x2, lsl #2]
   13a7c:	add	w1, w1, w0
   13a80:	ldr	w0, [sp, #132]
   13a84:	add	w0, w19, w0
   13a88:	str	w0, [sp, #132]
   13a8c:	ldr	w0, [sp, #132]
   13a90:	add	w1, w1, w0
   13a94:	ldr	w0, [sp, #72]
   13a98:	add	w0, w1, w0
   13a9c:	str	w0, [sp, #72]
   13aa0:	ldr	w1, [sp, #88]
   13aa4:	ldr	w0, [sp, #72]
   13aa8:	add	w0, w1, w0
   13aac:	str	w0, [sp, #88]
   13ab0:	ldr	w19, [sp, #76]
   13ab4:	ldr	w20, [sp, #76]
   13ab8:	ldr	w0, [sp, #76]
   13abc:	mov	w1, #0x9                   	// #9
   13ac0:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   13ac4:	eor	w0, w20, w0
   13ac8:	mov	w1, #0xb                   	// #11
   13acc:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   13ad0:	eor	w0, w19, w0
   13ad4:	mov	w1, #0x2                   	// #2
   13ad8:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   13adc:	mov	w3, w0
   13ae0:	ldr	w1, [sp, #76]
   13ae4:	ldr	w2, [sp, #80]
   13ae8:	ldr	w0, [sp, #84]
   13aec:	eor	w0, w2, w0
   13af0:	and	w1, w1, w0
   13af4:	ldr	w2, [sp, #80]
   13af8:	ldr	w0, [sp, #84]
   13afc:	and	w0, w2, w0
   13b00:	add	w0, w1, w0
   13b04:	add	w1, w3, w0
   13b08:	ldr	w0, [sp, #72]
   13b0c:	add	w0, w1, w0
   13b10:	str	w0, [sp, #72]
   13b14:	ldr	w19, [sp, #128]
   13b18:	ldr	w0, [sp, #128]
   13b1c:	mov	w1, #0x2                   	// #2
   13b20:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   13b24:	eor	w0, w19, w0
   13b28:	mov	w1, #0x11                  	// #17
   13b2c:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   13b30:	mov	w1, w0
   13b34:	ldr	w0, [sp, #128]
   13b38:	lsr	w0, w0, #10
   13b3c:	eor	w1, w1, w0
   13b40:	ldr	w0, [sp, #108]
   13b44:	add	w19, w1, w0
   13b48:	ldr	w20, [sp, #140]
   13b4c:	ldr	w0, [sp, #140]
   13b50:	mov	w1, #0xb                   	// #11
   13b54:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   13b58:	eor	w0, w20, w0
   13b5c:	mov	w1, #0x7                   	// #7
   13b60:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   13b64:	mov	w1, w0
   13b68:	ldr	w0, [sp, #140]
   13b6c:	lsr	w0, w0, #3
   13b70:	eor	w0, w1, w0
   13b74:	add	w19, w19, w0
   13b78:	ldr	w20, [sp, #88]
   13b7c:	ldr	w21, [sp, #88]
   13b80:	ldr	w0, [sp, #88]
   13b84:	mov	w1, #0xe                   	// #14
   13b88:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   13b8c:	eor	w0, w21, w0
   13b90:	mov	w1, #0x5                   	// #5
   13b94:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   13b98:	eor	w0, w20, w0
   13b9c:	mov	w1, #0x6                   	// #6
   13ba0:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   13ba4:	mov	w4, w0
   13ba8:	ldr	w1, [sp, #96]
   13bac:	ldr	w2, [sp, #88]
   13bb0:	ldr	w3, [sp, #92]
   13bb4:	ldr	w0, [sp, #96]
   13bb8:	eor	w0, w3, w0
   13bbc:	and	w0, w2, w0
   13bc0:	eor	w0, w1, w0
   13bc4:	add	w1, w4, w0
   13bc8:	ldr	w0, [sp, #172]
   13bcc:	add	w2, w0, #0x8
   13bd0:	adrp	x0, 30000 <lzma_mode_is_supported@@XZ_5.0+0x15368>
   13bd4:	add	x0, x0, #0xa8
   13bd8:	mov	w2, w2
   13bdc:	ldr	w0, [x0, x2, lsl #2]
   13be0:	add	w1, w1, w0
   13be4:	ldr	w0, [sp, #136]
   13be8:	add	w0, w19, w0
   13bec:	str	w0, [sp, #136]
   13bf0:	ldr	w0, [sp, #136]
   13bf4:	add	w1, w1, w0
   13bf8:	ldr	w0, [sp, #100]
   13bfc:	add	w0, w1, w0
   13c00:	str	w0, [sp, #100]
   13c04:	ldr	w1, [sp, #84]
   13c08:	ldr	w0, [sp, #100]
   13c0c:	add	w0, w1, w0
   13c10:	str	w0, [sp, #84]
   13c14:	ldr	w19, [sp, #72]
   13c18:	ldr	w20, [sp, #72]
   13c1c:	ldr	w0, [sp, #72]
   13c20:	mov	w1, #0x9                   	// #9
   13c24:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   13c28:	eor	w0, w20, w0
   13c2c:	mov	w1, #0xb                   	// #11
   13c30:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   13c34:	eor	w0, w19, w0
   13c38:	mov	w1, #0x2                   	// #2
   13c3c:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   13c40:	mov	w3, w0
   13c44:	ldr	w1, [sp, #72]
   13c48:	ldr	w2, [sp, #76]
   13c4c:	ldr	w0, [sp, #80]
   13c50:	eor	w0, w2, w0
   13c54:	and	w1, w1, w0
   13c58:	ldr	w2, [sp, #76]
   13c5c:	ldr	w0, [sp, #80]
   13c60:	and	w0, w2, w0
   13c64:	add	w0, w1, w0
   13c68:	add	w1, w3, w0
   13c6c:	ldr	w0, [sp, #100]
   13c70:	add	w0, w1, w0
   13c74:	str	w0, [sp, #100]
   13c78:	ldr	w19, [sp, #132]
   13c7c:	ldr	w0, [sp, #132]
   13c80:	mov	w1, #0x2                   	// #2
   13c84:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   13c88:	eor	w0, w19, w0
   13c8c:	mov	w1, #0x11                  	// #17
   13c90:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   13c94:	mov	w1, w0
   13c98:	ldr	w0, [sp, #132]
   13c9c:	lsr	w0, w0, #10
   13ca0:	eor	w1, w1, w0
   13ca4:	ldr	w0, [sp, #112]
   13ca8:	add	w19, w1, w0
   13cac:	ldr	w20, [sp, #144]
   13cb0:	ldr	w0, [sp, #144]
   13cb4:	mov	w1, #0xb                   	// #11
   13cb8:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   13cbc:	eor	w0, w20, w0
   13cc0:	mov	w1, #0x7                   	// #7
   13cc4:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   13cc8:	mov	w1, w0
   13ccc:	ldr	w0, [sp, #144]
   13cd0:	lsr	w0, w0, #3
   13cd4:	eor	w0, w1, w0
   13cd8:	add	w19, w19, w0
   13cdc:	ldr	w20, [sp, #84]
   13ce0:	ldr	w21, [sp, #84]
   13ce4:	ldr	w0, [sp, #84]
   13ce8:	mov	w1, #0xe                   	// #14
   13cec:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   13cf0:	eor	w0, w21, w0
   13cf4:	mov	w1, #0x5                   	// #5
   13cf8:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   13cfc:	eor	w0, w20, w0
   13d00:	mov	w1, #0x6                   	// #6
   13d04:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   13d08:	mov	w4, w0
   13d0c:	ldr	w1, [sp, #92]
   13d10:	ldr	w2, [sp, #84]
   13d14:	ldr	w3, [sp, #88]
   13d18:	ldr	w0, [sp, #92]
   13d1c:	eor	w0, w3, w0
   13d20:	and	w0, w2, w0
   13d24:	eor	w0, w1, w0
   13d28:	add	w1, w4, w0
   13d2c:	ldr	w0, [sp, #172]
   13d30:	add	w2, w0, #0x9
   13d34:	adrp	x0, 30000 <lzma_mode_is_supported@@XZ_5.0+0x15368>
   13d38:	add	x0, x0, #0xa8
   13d3c:	mov	w2, w2
   13d40:	ldr	w0, [x0, x2, lsl #2]
   13d44:	add	w1, w1, w0
   13d48:	ldr	w0, [sp, #140]
   13d4c:	add	w0, w19, w0
   13d50:	str	w0, [sp, #140]
   13d54:	ldr	w0, [sp, #140]
   13d58:	add	w1, w1, w0
   13d5c:	ldr	w0, [sp, #96]
   13d60:	add	w0, w1, w0
   13d64:	str	w0, [sp, #96]
   13d68:	ldr	w1, [sp, #80]
   13d6c:	ldr	w0, [sp, #96]
   13d70:	add	w0, w1, w0
   13d74:	str	w0, [sp, #80]
   13d78:	ldr	w19, [sp, #100]
   13d7c:	ldr	w20, [sp, #100]
   13d80:	ldr	w0, [sp, #100]
   13d84:	mov	w1, #0x9                   	// #9
   13d88:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   13d8c:	eor	w0, w20, w0
   13d90:	mov	w1, #0xb                   	// #11
   13d94:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   13d98:	eor	w0, w19, w0
   13d9c:	mov	w1, #0x2                   	// #2
   13da0:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   13da4:	mov	w3, w0
   13da8:	ldr	w1, [sp, #100]
   13dac:	ldr	w2, [sp, #72]
   13db0:	ldr	w0, [sp, #76]
   13db4:	eor	w0, w2, w0
   13db8:	and	w1, w1, w0
   13dbc:	ldr	w2, [sp, #72]
   13dc0:	ldr	w0, [sp, #76]
   13dc4:	and	w0, w2, w0
   13dc8:	add	w0, w1, w0
   13dcc:	add	w1, w3, w0
   13dd0:	ldr	w0, [sp, #96]
   13dd4:	add	w0, w1, w0
   13dd8:	str	w0, [sp, #96]
   13ddc:	ldr	w19, [sp, #136]
   13de0:	ldr	w0, [sp, #136]
   13de4:	mov	w1, #0x2                   	// #2
   13de8:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   13dec:	eor	w0, w19, w0
   13df0:	mov	w1, #0x11                  	// #17
   13df4:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   13df8:	mov	w1, w0
   13dfc:	ldr	w0, [sp, #136]
   13e00:	lsr	w0, w0, #10
   13e04:	eor	w1, w1, w0
   13e08:	ldr	w0, [sp, #116]
   13e0c:	add	w19, w1, w0
   13e10:	ldr	w20, [sp, #148]
   13e14:	ldr	w0, [sp, #148]
   13e18:	mov	w1, #0xb                   	// #11
   13e1c:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   13e20:	eor	w0, w20, w0
   13e24:	mov	w1, #0x7                   	// #7
   13e28:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   13e2c:	mov	w1, w0
   13e30:	ldr	w0, [sp, #148]
   13e34:	lsr	w0, w0, #3
   13e38:	eor	w0, w1, w0
   13e3c:	add	w19, w19, w0
   13e40:	ldr	w20, [sp, #80]
   13e44:	ldr	w21, [sp, #80]
   13e48:	ldr	w0, [sp, #80]
   13e4c:	mov	w1, #0xe                   	// #14
   13e50:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   13e54:	eor	w0, w21, w0
   13e58:	mov	w1, #0x5                   	// #5
   13e5c:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   13e60:	eor	w0, w20, w0
   13e64:	mov	w1, #0x6                   	// #6
   13e68:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   13e6c:	mov	w4, w0
   13e70:	ldr	w1, [sp, #88]
   13e74:	ldr	w2, [sp, #80]
   13e78:	ldr	w3, [sp, #84]
   13e7c:	ldr	w0, [sp, #88]
   13e80:	eor	w0, w3, w0
   13e84:	and	w0, w2, w0
   13e88:	eor	w0, w1, w0
   13e8c:	add	w1, w4, w0
   13e90:	ldr	w0, [sp, #172]
   13e94:	add	w2, w0, #0xa
   13e98:	adrp	x0, 30000 <lzma_mode_is_supported@@XZ_5.0+0x15368>
   13e9c:	add	x0, x0, #0xa8
   13ea0:	mov	w2, w2
   13ea4:	ldr	w0, [x0, x2, lsl #2]
   13ea8:	add	w1, w1, w0
   13eac:	ldr	w0, [sp, #144]
   13eb0:	add	w0, w19, w0
   13eb4:	str	w0, [sp, #144]
   13eb8:	ldr	w0, [sp, #144]
   13ebc:	add	w1, w1, w0
   13ec0:	ldr	w0, [sp, #92]
   13ec4:	add	w0, w1, w0
   13ec8:	str	w0, [sp, #92]
   13ecc:	ldr	w1, [sp, #76]
   13ed0:	ldr	w0, [sp, #92]
   13ed4:	add	w0, w1, w0
   13ed8:	str	w0, [sp, #76]
   13edc:	ldr	w19, [sp, #96]
   13ee0:	ldr	w20, [sp, #96]
   13ee4:	ldr	w0, [sp, #96]
   13ee8:	mov	w1, #0x9                   	// #9
   13eec:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   13ef0:	eor	w0, w20, w0
   13ef4:	mov	w1, #0xb                   	// #11
   13ef8:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   13efc:	eor	w0, w19, w0
   13f00:	mov	w1, #0x2                   	// #2
   13f04:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   13f08:	mov	w3, w0
   13f0c:	ldr	w1, [sp, #96]
   13f10:	ldr	w2, [sp, #100]
   13f14:	ldr	w0, [sp, #72]
   13f18:	eor	w0, w2, w0
   13f1c:	and	w1, w1, w0
   13f20:	ldr	w2, [sp, #100]
   13f24:	ldr	w0, [sp, #72]
   13f28:	and	w0, w2, w0
   13f2c:	add	w0, w1, w0
   13f30:	add	w1, w3, w0
   13f34:	ldr	w0, [sp, #92]
   13f38:	add	w0, w1, w0
   13f3c:	str	w0, [sp, #92]
   13f40:	ldr	w19, [sp, #140]
   13f44:	ldr	w0, [sp, #140]
   13f48:	mov	w1, #0x2                   	// #2
   13f4c:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   13f50:	eor	w0, w19, w0
   13f54:	mov	w1, #0x11                  	// #17
   13f58:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   13f5c:	mov	w1, w0
   13f60:	ldr	w0, [sp, #140]
   13f64:	lsr	w0, w0, #10
   13f68:	eor	w1, w1, w0
   13f6c:	ldr	w0, [sp, #120]
   13f70:	add	w19, w1, w0
   13f74:	ldr	w20, [sp, #152]
   13f78:	ldr	w0, [sp, #152]
   13f7c:	mov	w1, #0xb                   	// #11
   13f80:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   13f84:	eor	w0, w20, w0
   13f88:	mov	w1, #0x7                   	// #7
   13f8c:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   13f90:	mov	w1, w0
   13f94:	ldr	w0, [sp, #152]
   13f98:	lsr	w0, w0, #3
   13f9c:	eor	w0, w1, w0
   13fa0:	add	w19, w19, w0
   13fa4:	ldr	w20, [sp, #76]
   13fa8:	ldr	w21, [sp, #76]
   13fac:	ldr	w0, [sp, #76]
   13fb0:	mov	w1, #0xe                   	// #14
   13fb4:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   13fb8:	eor	w0, w21, w0
   13fbc:	mov	w1, #0x5                   	// #5
   13fc0:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   13fc4:	eor	w0, w20, w0
   13fc8:	mov	w1, #0x6                   	// #6
   13fcc:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   13fd0:	mov	w4, w0
   13fd4:	ldr	w1, [sp, #84]
   13fd8:	ldr	w2, [sp, #76]
   13fdc:	ldr	w3, [sp, #80]
   13fe0:	ldr	w0, [sp, #84]
   13fe4:	eor	w0, w3, w0
   13fe8:	and	w0, w2, w0
   13fec:	eor	w0, w1, w0
   13ff0:	add	w1, w4, w0
   13ff4:	ldr	w0, [sp, #172]
   13ff8:	add	w2, w0, #0xb
   13ffc:	adrp	x0, 30000 <lzma_mode_is_supported@@XZ_5.0+0x15368>
   14000:	add	x0, x0, #0xa8
   14004:	mov	w2, w2
   14008:	ldr	w0, [x0, x2, lsl #2]
   1400c:	add	w1, w1, w0
   14010:	ldr	w0, [sp, #148]
   14014:	add	w0, w19, w0
   14018:	str	w0, [sp, #148]
   1401c:	ldr	w0, [sp, #148]
   14020:	add	w1, w1, w0
   14024:	ldr	w0, [sp, #88]
   14028:	add	w0, w1, w0
   1402c:	str	w0, [sp, #88]
   14030:	ldr	w1, [sp, #72]
   14034:	ldr	w0, [sp, #88]
   14038:	add	w0, w1, w0
   1403c:	str	w0, [sp, #72]
   14040:	ldr	w19, [sp, #92]
   14044:	ldr	w20, [sp, #92]
   14048:	ldr	w0, [sp, #92]
   1404c:	mov	w1, #0x9                   	// #9
   14050:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   14054:	eor	w0, w20, w0
   14058:	mov	w1, #0xb                   	// #11
   1405c:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   14060:	eor	w0, w19, w0
   14064:	mov	w1, #0x2                   	// #2
   14068:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   1406c:	mov	w3, w0
   14070:	ldr	w1, [sp, #92]
   14074:	ldr	w2, [sp, #96]
   14078:	ldr	w0, [sp, #100]
   1407c:	eor	w0, w2, w0
   14080:	and	w1, w1, w0
   14084:	ldr	w2, [sp, #96]
   14088:	ldr	w0, [sp, #100]
   1408c:	and	w0, w2, w0
   14090:	add	w0, w1, w0
   14094:	add	w1, w3, w0
   14098:	ldr	w0, [sp, #88]
   1409c:	add	w0, w1, w0
   140a0:	str	w0, [sp, #88]
   140a4:	ldr	w19, [sp, #144]
   140a8:	ldr	w0, [sp, #144]
   140ac:	mov	w1, #0x2                   	// #2
   140b0:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   140b4:	eor	w0, w19, w0
   140b8:	mov	w1, #0x11                  	// #17
   140bc:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   140c0:	mov	w1, w0
   140c4:	ldr	w0, [sp, #144]
   140c8:	lsr	w0, w0, #10
   140cc:	eor	w1, w1, w0
   140d0:	ldr	w0, [sp, #124]
   140d4:	add	w19, w1, w0
   140d8:	ldr	w20, [sp, #156]
   140dc:	ldr	w0, [sp, #156]
   140e0:	mov	w1, #0xb                   	// #11
   140e4:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   140e8:	eor	w0, w20, w0
   140ec:	mov	w1, #0x7                   	// #7
   140f0:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   140f4:	mov	w1, w0
   140f8:	ldr	w0, [sp, #156]
   140fc:	lsr	w0, w0, #3
   14100:	eor	w0, w1, w0
   14104:	add	w19, w19, w0
   14108:	ldr	w20, [sp, #72]
   1410c:	ldr	w21, [sp, #72]
   14110:	ldr	w0, [sp, #72]
   14114:	mov	w1, #0xe                   	// #14
   14118:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   1411c:	eor	w0, w21, w0
   14120:	mov	w1, #0x5                   	// #5
   14124:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   14128:	eor	w0, w20, w0
   1412c:	mov	w1, #0x6                   	// #6
   14130:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   14134:	mov	w4, w0
   14138:	ldr	w1, [sp, #80]
   1413c:	ldr	w2, [sp, #72]
   14140:	ldr	w3, [sp, #76]
   14144:	ldr	w0, [sp, #80]
   14148:	eor	w0, w3, w0
   1414c:	and	w0, w2, w0
   14150:	eor	w0, w1, w0
   14154:	add	w1, w4, w0
   14158:	ldr	w0, [sp, #172]
   1415c:	add	w2, w0, #0xc
   14160:	adrp	x0, 30000 <lzma_mode_is_supported@@XZ_5.0+0x15368>
   14164:	add	x0, x0, #0xa8
   14168:	mov	w2, w2
   1416c:	ldr	w0, [x0, x2, lsl #2]
   14170:	add	w1, w1, w0
   14174:	ldr	w0, [sp, #152]
   14178:	add	w0, w19, w0
   1417c:	str	w0, [sp, #152]
   14180:	ldr	w0, [sp, #152]
   14184:	add	w1, w1, w0
   14188:	ldr	w0, [sp, #84]
   1418c:	add	w0, w1, w0
   14190:	str	w0, [sp, #84]
   14194:	ldr	w1, [sp, #100]
   14198:	ldr	w0, [sp, #84]
   1419c:	add	w0, w1, w0
   141a0:	str	w0, [sp, #100]
   141a4:	ldr	w19, [sp, #88]
   141a8:	ldr	w20, [sp, #88]
   141ac:	ldr	w0, [sp, #88]
   141b0:	mov	w1, #0x9                   	// #9
   141b4:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   141b8:	eor	w0, w20, w0
   141bc:	mov	w1, #0xb                   	// #11
   141c0:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   141c4:	eor	w0, w19, w0
   141c8:	mov	w1, #0x2                   	// #2
   141cc:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   141d0:	mov	w3, w0
   141d4:	ldr	w1, [sp, #88]
   141d8:	ldr	w2, [sp, #92]
   141dc:	ldr	w0, [sp, #96]
   141e0:	eor	w0, w2, w0
   141e4:	and	w1, w1, w0
   141e8:	ldr	w2, [sp, #92]
   141ec:	ldr	w0, [sp, #96]
   141f0:	and	w0, w2, w0
   141f4:	add	w0, w1, w0
   141f8:	add	w1, w3, w0
   141fc:	ldr	w0, [sp, #84]
   14200:	add	w0, w1, w0
   14204:	str	w0, [sp, #84]
   14208:	ldr	w19, [sp, #148]
   1420c:	ldr	w0, [sp, #148]
   14210:	mov	w1, #0x2                   	// #2
   14214:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   14218:	eor	w0, w19, w0
   1421c:	mov	w1, #0x11                  	// #17
   14220:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   14224:	mov	w1, w0
   14228:	ldr	w0, [sp, #148]
   1422c:	lsr	w0, w0, #10
   14230:	eor	w1, w1, w0
   14234:	ldr	w0, [sp, #128]
   14238:	add	w19, w1, w0
   1423c:	ldr	w20, [sp, #160]
   14240:	ldr	w0, [sp, #160]
   14244:	mov	w1, #0xb                   	// #11
   14248:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   1424c:	eor	w0, w20, w0
   14250:	mov	w1, #0x7                   	// #7
   14254:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   14258:	mov	w1, w0
   1425c:	ldr	w0, [sp, #160]
   14260:	lsr	w0, w0, #3
   14264:	eor	w0, w1, w0
   14268:	add	w19, w19, w0
   1426c:	ldr	w20, [sp, #100]
   14270:	ldr	w21, [sp, #100]
   14274:	ldr	w0, [sp, #100]
   14278:	mov	w1, #0xe                   	// #14
   1427c:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   14280:	eor	w0, w21, w0
   14284:	mov	w1, #0x5                   	// #5
   14288:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   1428c:	eor	w0, w20, w0
   14290:	mov	w1, #0x6                   	// #6
   14294:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   14298:	mov	w4, w0
   1429c:	ldr	w1, [sp, #76]
   142a0:	ldr	w2, [sp, #100]
   142a4:	ldr	w3, [sp, #72]
   142a8:	ldr	w0, [sp, #76]
   142ac:	eor	w0, w3, w0
   142b0:	and	w0, w2, w0
   142b4:	eor	w0, w1, w0
   142b8:	add	w1, w4, w0
   142bc:	ldr	w0, [sp, #172]
   142c0:	add	w2, w0, #0xd
   142c4:	adrp	x0, 30000 <lzma_mode_is_supported@@XZ_5.0+0x15368>
   142c8:	add	x0, x0, #0xa8
   142cc:	mov	w2, w2
   142d0:	ldr	w0, [x0, x2, lsl #2]
   142d4:	add	w1, w1, w0
   142d8:	ldr	w0, [sp, #156]
   142dc:	add	w0, w19, w0
   142e0:	str	w0, [sp, #156]
   142e4:	ldr	w0, [sp, #156]
   142e8:	add	w1, w1, w0
   142ec:	ldr	w0, [sp, #80]
   142f0:	add	w0, w1, w0
   142f4:	str	w0, [sp, #80]
   142f8:	ldr	w1, [sp, #96]
   142fc:	ldr	w0, [sp, #80]
   14300:	add	w0, w1, w0
   14304:	str	w0, [sp, #96]
   14308:	ldr	w19, [sp, #84]
   1430c:	ldr	w20, [sp, #84]
   14310:	ldr	w0, [sp, #84]
   14314:	mov	w1, #0x9                   	// #9
   14318:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   1431c:	eor	w0, w20, w0
   14320:	mov	w1, #0xb                   	// #11
   14324:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   14328:	eor	w0, w19, w0
   1432c:	mov	w1, #0x2                   	// #2
   14330:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   14334:	mov	w3, w0
   14338:	ldr	w1, [sp, #84]
   1433c:	ldr	w2, [sp, #88]
   14340:	ldr	w0, [sp, #92]
   14344:	eor	w0, w2, w0
   14348:	and	w1, w1, w0
   1434c:	ldr	w2, [sp, #88]
   14350:	ldr	w0, [sp, #92]
   14354:	and	w0, w2, w0
   14358:	add	w0, w1, w0
   1435c:	add	w1, w3, w0
   14360:	ldr	w0, [sp, #80]
   14364:	add	w0, w1, w0
   14368:	str	w0, [sp, #80]
   1436c:	ldr	w19, [sp, #152]
   14370:	ldr	w0, [sp, #152]
   14374:	mov	w1, #0x2                   	// #2
   14378:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   1437c:	eor	w0, w19, w0
   14380:	mov	w1, #0x11                  	// #17
   14384:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   14388:	mov	w1, w0
   1438c:	ldr	w0, [sp, #152]
   14390:	lsr	w0, w0, #10
   14394:	eor	w1, w1, w0
   14398:	ldr	w0, [sp, #132]
   1439c:	add	w19, w1, w0
   143a0:	ldr	w20, [sp, #164]
   143a4:	ldr	w0, [sp, #164]
   143a8:	mov	w1, #0xb                   	// #11
   143ac:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   143b0:	eor	w0, w20, w0
   143b4:	mov	w1, #0x7                   	// #7
   143b8:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   143bc:	mov	w1, w0
   143c0:	ldr	w0, [sp, #164]
   143c4:	lsr	w0, w0, #3
   143c8:	eor	w0, w1, w0
   143cc:	add	w19, w19, w0
   143d0:	ldr	w20, [sp, #96]
   143d4:	ldr	w21, [sp, #96]
   143d8:	ldr	w0, [sp, #96]
   143dc:	mov	w1, #0xe                   	// #14
   143e0:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   143e4:	eor	w0, w21, w0
   143e8:	mov	w1, #0x5                   	// #5
   143ec:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   143f0:	eor	w0, w20, w0
   143f4:	mov	w1, #0x6                   	// #6
   143f8:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   143fc:	mov	w4, w0
   14400:	ldr	w1, [sp, #72]
   14404:	ldr	w2, [sp, #96]
   14408:	ldr	w3, [sp, #100]
   1440c:	ldr	w0, [sp, #72]
   14410:	eor	w0, w3, w0
   14414:	and	w0, w2, w0
   14418:	eor	w0, w1, w0
   1441c:	add	w1, w4, w0
   14420:	ldr	w0, [sp, #172]
   14424:	add	w2, w0, #0xe
   14428:	adrp	x0, 30000 <lzma_mode_is_supported@@XZ_5.0+0x15368>
   1442c:	add	x0, x0, #0xa8
   14430:	mov	w2, w2
   14434:	ldr	w0, [x0, x2, lsl #2]
   14438:	add	w1, w1, w0
   1443c:	ldr	w0, [sp, #160]
   14440:	add	w0, w19, w0
   14444:	str	w0, [sp, #160]
   14448:	ldr	w0, [sp, #160]
   1444c:	add	w1, w1, w0
   14450:	ldr	w0, [sp, #76]
   14454:	add	w0, w1, w0
   14458:	str	w0, [sp, #76]
   1445c:	ldr	w1, [sp, #92]
   14460:	ldr	w0, [sp, #76]
   14464:	add	w0, w1, w0
   14468:	str	w0, [sp, #92]
   1446c:	ldr	w19, [sp, #80]
   14470:	ldr	w20, [sp, #80]
   14474:	ldr	w0, [sp, #80]
   14478:	mov	w1, #0x9                   	// #9
   1447c:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   14480:	eor	w0, w20, w0
   14484:	mov	w1, #0xb                   	// #11
   14488:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   1448c:	eor	w0, w19, w0
   14490:	mov	w1, #0x2                   	// #2
   14494:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   14498:	mov	w3, w0
   1449c:	ldr	w1, [sp, #80]
   144a0:	ldr	w2, [sp, #84]
   144a4:	ldr	w0, [sp, #88]
   144a8:	eor	w0, w2, w0
   144ac:	and	w1, w1, w0
   144b0:	ldr	w2, [sp, #84]
   144b4:	ldr	w0, [sp, #88]
   144b8:	and	w0, w2, w0
   144bc:	add	w0, w1, w0
   144c0:	add	w1, w3, w0
   144c4:	ldr	w0, [sp, #76]
   144c8:	add	w0, w1, w0
   144cc:	str	w0, [sp, #76]
   144d0:	ldr	w19, [sp, #156]
   144d4:	ldr	w0, [sp, #156]
   144d8:	mov	w1, #0x2                   	// #2
   144dc:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   144e0:	eor	w0, w19, w0
   144e4:	mov	w1, #0x11                  	// #17
   144e8:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   144ec:	mov	w1, w0
   144f0:	ldr	w0, [sp, #156]
   144f4:	lsr	w0, w0, #10
   144f8:	eor	w1, w1, w0
   144fc:	ldr	w0, [sp, #136]
   14500:	add	w19, w1, w0
   14504:	ldr	w20, [sp, #104]
   14508:	ldr	w0, [sp, #104]
   1450c:	mov	w1, #0xb                   	// #11
   14510:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   14514:	eor	w0, w20, w0
   14518:	mov	w1, #0x7                   	// #7
   1451c:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   14520:	mov	w1, w0
   14524:	ldr	w0, [sp, #104]
   14528:	lsr	w0, w0, #3
   1452c:	eor	w0, w1, w0
   14530:	add	w19, w19, w0
   14534:	ldr	w20, [sp, #92]
   14538:	ldr	w21, [sp, #92]
   1453c:	ldr	w0, [sp, #92]
   14540:	mov	w1, #0xe                   	// #14
   14544:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   14548:	eor	w0, w21, w0
   1454c:	mov	w1, #0x5                   	// #5
   14550:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   14554:	eor	w0, w20, w0
   14558:	mov	w1, #0x6                   	// #6
   1455c:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   14560:	mov	w4, w0
   14564:	ldr	w1, [sp, #100]
   14568:	ldr	w2, [sp, #92]
   1456c:	ldr	w3, [sp, #96]
   14570:	ldr	w0, [sp, #100]
   14574:	eor	w0, w3, w0
   14578:	and	w0, w2, w0
   1457c:	eor	w0, w1, w0
   14580:	add	w1, w4, w0
   14584:	ldr	w0, [sp, #172]
   14588:	add	w2, w0, #0xf
   1458c:	adrp	x0, 30000 <lzma_mode_is_supported@@XZ_5.0+0x15368>
   14590:	add	x0, x0, #0xa8
   14594:	mov	w2, w2
   14598:	ldr	w0, [x0, x2, lsl #2]
   1459c:	add	w1, w1, w0
   145a0:	ldr	w0, [sp, #164]
   145a4:	add	w0, w19, w0
   145a8:	str	w0, [sp, #164]
   145ac:	ldr	w0, [sp, #164]
   145b0:	add	w1, w1, w0
   145b4:	ldr	w0, [sp, #72]
   145b8:	add	w0, w1, w0
   145bc:	str	w0, [sp, #72]
   145c0:	ldr	w1, [sp, #88]
   145c4:	ldr	w0, [sp, #72]
   145c8:	add	w0, w1, w0
   145cc:	str	w0, [sp, #88]
   145d0:	ldr	w19, [sp, #76]
   145d4:	ldr	w20, [sp, #76]
   145d8:	ldr	w0, [sp, #76]
   145dc:	mov	w1, #0x9                   	// #9
   145e0:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   145e4:	eor	w0, w20, w0
   145e8:	mov	w1, #0xb                   	// #11
   145ec:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   145f0:	eor	w0, w19, w0
   145f4:	mov	w1, #0x2                   	// #2
   145f8:	bl	1202c <lzma_crc64@@XZ_5.0+0x1fc>
   145fc:	mov	w3, w0
   14600:	ldr	w1, [sp, #76]
   14604:	ldr	w2, [sp, #80]
   14608:	ldr	w0, [sp, #84]
   1460c:	eor	w0, w2, w0
   14610:	and	w1, w1, w0
   14614:	ldr	w2, [sp, #80]
   14618:	ldr	w0, [sp, #84]
   1461c:	and	w0, w2, w0
   14620:	add	w0, w1, w0
   14624:	add	w1, w3, w0
   14628:	ldr	w0, [sp, #72]
   1462c:	add	w0, w1, w0
   14630:	str	w0, [sp, #72]
   14634:	ldr	w0, [sp, #172]
   14638:	add	w0, w0, #0x10
   1463c:	str	w0, [sp, #172]
   14640:	ldr	w0, [sp, #172]
   14644:	cmp	w0, #0x3f
   14648:	b.ls	12ffc <lzma_crc64@@XZ_5.0+0x11cc>  // b.plast
   1464c:	ldr	x0, [sp, #56]
   14650:	ldr	w1, [x0]
   14654:	ldr	w0, [sp, #72]
   14658:	add	w1, w1, w0
   1465c:	ldr	x0, [sp, #56]
   14660:	str	w1, [x0]
   14664:	ldr	x0, [sp, #56]
   14668:	add	x0, x0, #0x4
   1466c:	ldr	w2, [x0]
   14670:	ldr	w1, [sp, #76]
   14674:	ldr	x0, [sp, #56]
   14678:	add	x0, x0, #0x4
   1467c:	add	w1, w2, w1
   14680:	str	w1, [x0]
   14684:	ldr	x0, [sp, #56]
   14688:	add	x0, x0, #0x8
   1468c:	ldr	w2, [x0]
   14690:	ldr	w1, [sp, #80]
   14694:	ldr	x0, [sp, #56]
   14698:	add	x0, x0, #0x8
   1469c:	add	w1, w2, w1
   146a0:	str	w1, [x0]
   146a4:	ldr	x0, [sp, #56]
   146a8:	add	x0, x0, #0xc
   146ac:	ldr	w2, [x0]
   146b0:	ldr	w1, [sp, #84]
   146b4:	ldr	x0, [sp, #56]
   146b8:	add	x0, x0, #0xc
   146bc:	add	w1, w2, w1
   146c0:	str	w1, [x0]
   146c4:	ldr	x0, [sp, #56]
   146c8:	add	x0, x0, #0x10
   146cc:	ldr	w2, [x0]
   146d0:	ldr	w1, [sp, #88]
   146d4:	ldr	x0, [sp, #56]
   146d8:	add	x0, x0, #0x10
   146dc:	add	w1, w2, w1
   146e0:	str	w1, [x0]
   146e4:	ldr	x0, [sp, #56]
   146e8:	add	x0, x0, #0x14
   146ec:	ldr	w2, [x0]
   146f0:	ldr	w1, [sp, #92]
   146f4:	ldr	x0, [sp, #56]
   146f8:	add	x0, x0, #0x14
   146fc:	add	w1, w2, w1
   14700:	str	w1, [x0]
   14704:	ldr	x0, [sp, #56]
   14708:	add	x0, x0, #0x18
   1470c:	ldr	w2, [x0]
   14710:	ldr	w1, [sp, #96]
   14714:	ldr	x0, [sp, #56]
   14718:	add	x0, x0, #0x18
   1471c:	add	w1, w2, w1
   14720:	str	w1, [x0]
   14724:	ldr	x0, [sp, #56]
   14728:	add	x0, x0, #0x1c
   1472c:	ldr	w2, [x0]
   14730:	ldr	w1, [sp, #100]
   14734:	ldr	x0, [sp, #56]
   14738:	add	x0, x0, #0x1c
   1473c:	add	w1, w2, w1
   14740:	str	w1, [x0]
   14744:	nop
   14748:	ldp	x19, x20, [sp, #16]
   1474c:	ldr	x21, [sp, #32]
   14750:	ldp	x29, x30, [sp], #176
   14754:	ret
   14758:	stp	x29, x30, [sp, #-32]!
   1475c:	mov	x29, sp
   14760:	str	x0, [sp, #24]
   14764:	ldr	x0, [sp, #24]
   14768:	add	x0, x0, #0x40
   1476c:	ldr	x1, [sp, #24]
   14770:	bl	1204c <lzma_crc64@@XZ_5.0+0x21c>
   14774:	nop
   14778:	ldp	x29, x30, [sp], #32
   1477c:	ret
   14780:	stp	x29, x30, [sp, #-32]!
   14784:	mov	x29, sp
   14788:	str	x0, [sp, #24]
   1478c:	ldr	x0, [sp, #24]
   14790:	add	x3, x0, #0x40
   14794:	mov	x2, #0x20                  	// #32
   14798:	adrp	x0, 30000 <lzma_mode_is_supported@@XZ_5.0+0x15368>
   1479c:	add	x1, x0, #0x1a8
   147a0:	mov	x0, x3
   147a4:	bl	3090 <memcpy@plt>
   147a8:	ldr	x0, [sp, #24]
   147ac:	str	xzr, [x0, #96]
   147b0:	nop
   147b4:	ldp	x29, x30, [sp], #32
   147b8:	ret
   147bc:	stp	x29, x30, [sp, #-64]!
   147c0:	mov	x29, sp
   147c4:	str	x0, [sp, #40]
   147c8:	str	x1, [sp, #32]
   147cc:	str	x2, [sp, #24]
   147d0:	b	14878 <lzma_crc64@@XZ_5.0+0x2a48>
   147d4:	ldr	x0, [sp, #24]
   147d8:	ldr	x0, [x0, #96]
   147dc:	and	x0, x0, #0x3f
   147e0:	str	x0, [sp, #48]
   147e4:	mov	x1, #0x40                  	// #64
   147e8:	ldr	x0, [sp, #48]
   147ec:	sub	x0, x1, x0
   147f0:	str	x0, [sp, #56]
   147f4:	ldr	x1, [sp, #56]
   147f8:	ldr	x0, [sp, #32]
   147fc:	cmp	x1, x0
   14800:	b.ls	1480c <lzma_crc64@@XZ_5.0+0x29dc>  // b.plast
   14804:	ldr	x0, [sp, #32]
   14808:	str	x0, [sp, #56]
   1480c:	ldr	x1, [sp, #24]
   14810:	ldr	x0, [sp, #48]
   14814:	add	x0, x1, x0
   14818:	ldr	x2, [sp, #56]
   1481c:	ldr	x1, [sp, #40]
   14820:	bl	3090 <memcpy@plt>
   14824:	ldr	x1, [sp, #40]
   14828:	ldr	x0, [sp, #56]
   1482c:	add	x0, x1, x0
   14830:	str	x0, [sp, #40]
   14834:	ldr	x1, [sp, #32]
   14838:	ldr	x0, [sp, #56]
   1483c:	sub	x0, x1, x0
   14840:	str	x0, [sp, #32]
   14844:	ldr	x0, [sp, #24]
   14848:	ldr	x1, [x0, #96]
   1484c:	ldr	x0, [sp, #56]
   14850:	add	x1, x1, x0
   14854:	ldr	x0, [sp, #24]
   14858:	str	x1, [x0, #96]
   1485c:	ldr	x0, [sp, #24]
   14860:	ldr	x0, [x0, #96]
   14864:	and	x0, x0, #0x3f
   14868:	cmp	x0, #0x0
   1486c:	b.ne	14878 <lzma_crc64@@XZ_5.0+0x2a48>  // b.any
   14870:	ldr	x0, [sp, #24]
   14874:	bl	14758 <lzma_crc64@@XZ_5.0+0x2928>
   14878:	ldr	x0, [sp, #32]
   1487c:	cmp	x0, #0x0
   14880:	b.ne	147d4 <lzma_crc64@@XZ_5.0+0x29a4>  // b.any
   14884:	nop
   14888:	ldp	x29, x30, [sp], #64
   1488c:	ret
   14890:	stp	x29, x30, [sp, #-48]!
   14894:	mov	x29, sp
   14898:	str	x0, [sp, #24]
   1489c:	ldr	x0, [sp, #24]
   148a0:	ldr	x0, [x0, #96]
   148a4:	and	x0, x0, #0x3f
   148a8:	str	x0, [sp, #40]
   148ac:	ldr	x0, [sp, #40]
   148b0:	add	x1, x0, #0x1
   148b4:	str	x1, [sp, #40]
   148b8:	ldr	x1, [sp, #24]
   148bc:	mov	w2, #0xffffff80            	// #-128
   148c0:	strb	w2, [x1, x0]
   148c4:	b	148f4 <lzma_crc64@@XZ_5.0+0x2ac4>
   148c8:	ldr	x0, [sp, #40]
   148cc:	cmp	x0, #0x40
   148d0:	b.ne	148e0 <lzma_crc64@@XZ_5.0+0x2ab0>  // b.any
   148d4:	ldr	x0, [sp, #24]
   148d8:	bl	14758 <lzma_crc64@@XZ_5.0+0x2928>
   148dc:	str	xzr, [sp, #40]
   148e0:	ldr	x0, [sp, #40]
   148e4:	add	x1, x0, #0x1
   148e8:	str	x1, [sp, #40]
   148ec:	ldr	x1, [sp, #24]
   148f0:	strb	wzr, [x1, x0]
   148f4:	ldr	x0, [sp, #40]
   148f8:	cmp	x0, #0x38
   148fc:	b.ne	148c8 <lzma_crc64@@XZ_5.0+0x2a98>  // b.any
   14900:	ldr	x0, [sp, #24]
   14904:	ldr	x0, [x0, #96]
   14908:	lsl	x1, x0, #3
   1490c:	ldr	x0, [sp, #24]
   14910:	str	x1, [x0, #96]
   14914:	ldr	x0, [sp, #24]
   14918:	ldr	x0, [x0, #96]
   1491c:	bl	12014 <lzma_crc64@@XZ_5.0+0x1e4>
   14920:	mov	x1, x0
   14924:	ldr	x0, [sp, #24]
   14928:	str	x1, [x0, #56]
   1492c:	ldr	x0, [sp, #24]
   14930:	bl	14758 <lzma_crc64@@XZ_5.0+0x2928>
   14934:	str	xzr, [sp, #32]
   14938:	b	1496c <lzma_crc64@@XZ_5.0+0x2b3c>
   1493c:	ldr	x0, [sp, #24]
   14940:	ldr	x1, [sp, #32]
   14944:	add	x1, x1, #0x10
   14948:	ldr	w0, [x0, x1, lsl #2]
   1494c:	bl	11ffc <lzma_crc64@@XZ_5.0+0x1cc>
   14950:	mov	w2, w0
   14954:	ldr	x0, [sp, #24]
   14958:	ldr	x1, [sp, #32]
   1495c:	str	w2, [x0, x1, lsl #2]
   14960:	ldr	x0, [sp, #32]
   14964:	add	x0, x0, #0x1
   14968:	str	x0, [sp, #32]
   1496c:	ldr	x0, [sp, #32]
   14970:	cmp	x0, #0x7
   14974:	b.ls	1493c <lzma_crc64@@XZ_5.0+0x2b0c>  // b.plast
   14978:	nop
   1497c:	ldp	x29, x30, [sp], #48
   14980:	ret
   14984:	stp	x29, x30, [sp, #-48]!
   14988:	mov	x29, sp
   1498c:	str	x0, [sp, #24]
   14990:	ldr	x0, [sp, #24]
   14994:	ldr	w1, [x0, #24]
   14998:	ldr	x0, [sp, #24]
   1499c:	ldr	w0, [x0, #12]
   149a0:	sub	w0, w1, w0
   149a4:	and	w0, w0, #0xfffffff0
   149a8:	str	w0, [sp, #44]
   149ac:	ldr	x0, [sp, #24]
   149b0:	ldr	w1, [x0, #36]
   149b4:	ldr	w0, [sp, #44]
   149b8:	sub	w0, w1, w0
   149bc:	mov	w0, w0
   149c0:	str	x0, [sp, #32]
   149c4:	ldr	x0, [sp, #24]
   149c8:	ldr	x3, [x0]
   149cc:	ldr	x0, [sp, #24]
   149d0:	ldr	x1, [x0]
   149d4:	ldr	w0, [sp, #44]
   149d8:	add	x0, x1, x0
   149dc:	ldr	x2, [sp, #32]
   149e0:	mov	x1, x0
   149e4:	mov	x0, x3
   149e8:	bl	30b0 <memmove@plt>
   149ec:	ldr	x0, [sp, #24]
   149f0:	ldr	w1, [x0, #20]
   149f4:	ldr	w0, [sp, #44]
   149f8:	add	w1, w1, w0
   149fc:	ldr	x0, [sp, #24]
   14a00:	str	w1, [x0, #20]
   14a04:	ldr	x0, [sp, #24]
   14a08:	ldr	w1, [x0, #24]
   14a0c:	ldr	w0, [sp, #44]
   14a10:	sub	w1, w1, w0
   14a14:	ldr	x0, [sp, #24]
   14a18:	str	w1, [x0, #24]
   14a1c:	ldr	x0, [sp, #24]
   14a20:	ldr	w1, [x0, #32]
   14a24:	ldr	w0, [sp, #44]
   14a28:	sub	w1, w1, w0
   14a2c:	ldr	x0, [sp, #24]
   14a30:	str	w1, [x0, #32]
   14a34:	ldr	x0, [sp, #24]
   14a38:	ldr	w1, [x0, #36]
   14a3c:	ldr	w0, [sp, #44]
   14a40:	sub	w1, w1, w0
   14a44:	ldr	x0, [sp, #24]
   14a48:	str	w1, [x0, #36]
   14a4c:	nop
   14a50:	ldp	x29, x30, [sp], #48
   14a54:	ret
   14a58:	sub	sp, sp, #0x60
   14a5c:	stp	x29, x30, [sp, #16]
   14a60:	add	x29, sp, #0x10
   14a64:	str	x0, [sp, #72]
   14a68:	str	x1, [sp, #64]
   14a6c:	str	x2, [sp, #56]
   14a70:	str	x3, [sp, #48]
   14a74:	str	x4, [sp, #40]
   14a78:	str	w5, [sp, #36]
   14a7c:	ldr	x0, [sp, #72]
   14a80:	ldr	w1, [x0, #56]
   14a84:	ldr	x0, [sp, #72]
   14a88:	ldr	w2, [x0, #40]
   14a8c:	ldr	x0, [sp, #72]
   14a90:	ldr	w0, [x0, #48]
   14a94:	sub	w0, w2, w0
   14a98:	cmp	w1, w0
   14a9c:	b.cc	14aac <lzma_crc64@@XZ_5.0+0x2c7c>  // b.lo, b.ul, b.last
   14aa0:	ldr	x0, [sp, #72]
   14aa4:	add	x0, x0, #0x20
   14aa8:	bl	14984 <lzma_crc64@@XZ_5.0+0x2b54>
   14aac:	ldr	x0, [sp, #72]
   14ab0:	ldr	w0, [x0, #68]
   14ab4:	mov	w0, w0
   14ab8:	str	x0, [sp, #80]
   14abc:	ldr	x0, [sp, #72]
   14ac0:	ldr	x0, [x0, #176]
   14ac4:	cmp	x0, #0x0
   14ac8:	b.ne	14b34 <lzma_crc64@@XZ_5.0+0x2d04>  // b.any
   14acc:	ldr	x0, [sp, #72]
   14ad0:	ldr	x1, [x0, #32]
   14ad4:	ldr	x0, [sp, #72]
   14ad8:	ldr	w0, [x0, #40]
   14adc:	mov	w2, w0
   14ae0:	add	x0, sp, #0x50
   14ae4:	mov	x5, x2
   14ae8:	mov	x4, x0
   14aec:	mov	x3, x1
   14af0:	ldr	x2, [sp, #40]
   14af4:	ldr	x1, [sp, #48]
   14af8:	ldr	x0, [sp, #56]
   14afc:	bl	3870 <lzma_version_string@@XZ_5.0+0x180>
   14b00:	ldr	w0, [sp, #36]
   14b04:	cmp	w0, #0x0
   14b08:	b.eq	14b28 <lzma_crc64@@XZ_5.0+0x2cf8>  // b.none
   14b0c:	ldr	x0, [sp, #48]
   14b10:	ldr	x0, [x0]
   14b14:	ldr	x1, [sp, #40]
   14b18:	cmp	x1, x0
   14b1c:	b.ne	14b28 <lzma_crc64@@XZ_5.0+0x2cf8>  // b.any
   14b20:	mov	w0, #0x1                   	// #1
   14b24:	b	14b2c <lzma_crc64@@XZ_5.0+0x2cfc>
   14b28:	mov	w0, #0x0                   	// #0
   14b2c:	str	w0, [sp, #92]
   14b30:	b	14b8c <lzma_crc64@@XZ_5.0+0x2d5c>
   14b34:	ldr	x0, [sp, #72]
   14b38:	ldr	x8, [x0, #176]
   14b3c:	ldr	x0, [sp, #72]
   14b40:	ldr	x9, [x0, #152]
   14b44:	ldr	x0, [sp, #72]
   14b48:	ldr	x1, [x0, #32]
   14b4c:	ldr	x0, [sp, #72]
   14b50:	ldr	w0, [x0, #40]
   14b54:	mov	w3, w0
   14b58:	add	x2, sp, #0x50
   14b5c:	ldr	w0, [sp, #36]
   14b60:	str	w0, [sp]
   14b64:	mov	x7, x3
   14b68:	mov	x6, x2
   14b6c:	mov	x5, x1
   14b70:	ldr	x4, [sp, #40]
   14b74:	ldr	x3, [sp, #48]
   14b78:	ldr	x2, [sp, #56]
   14b7c:	ldr	x1, [sp, #64]
   14b80:	mov	x0, x9
   14b84:	blr	x8
   14b88:	str	w0, [sp, #92]
   14b8c:	ldr	x0, [sp, #80]
   14b90:	mov	w1, w0
   14b94:	ldr	x0, [sp, #72]
   14b98:	str	w1, [x0, #68]
   14b9c:	ldr	w0, [sp, #92]
   14ba0:	cmp	w0, #0x1
   14ba4:	b.ne	14bcc <lzma_crc64@@XZ_5.0+0x2d9c>  // b.any
   14ba8:	str	wzr, [sp, #92]
   14bac:	ldr	x0, [sp, #72]
   14bb0:	ldr	w1, [sp, #36]
   14bb4:	str	w1, [x0, #136]
   14bb8:	ldr	x0, [sp, #72]
   14bbc:	ldr	w1, [x0, #68]
   14bc0:	ldr	x0, [sp, #72]
   14bc4:	str	w1, [x0, #64]
   14bc8:	b	14c00 <lzma_crc64@@XZ_5.0+0x2dd0>
   14bcc:	ldr	x0, [sp, #72]
   14bd0:	ldr	w1, [x0, #68]
   14bd4:	ldr	x0, [sp, #72]
   14bd8:	ldr	w0, [x0, #48]
   14bdc:	cmp	w1, w0
   14be0:	b.ls	14c00 <lzma_crc64@@XZ_5.0+0x2dd0>  // b.plast
   14be4:	ldr	x0, [sp, #72]
   14be8:	ldr	w1, [x0, #68]
   14bec:	ldr	x0, [sp, #72]
   14bf0:	ldr	w0, [x0, #48]
   14bf4:	sub	w1, w1, w0
   14bf8:	ldr	x0, [sp, #72]
   14bfc:	str	w1, [x0, #64]
   14c00:	ldr	x0, [sp, #72]
   14c04:	ldr	w0, [x0, #72]
   14c08:	cmp	w0, #0x0
   14c0c:	b.eq	14c6c <lzma_crc64@@XZ_5.0+0x2e3c>  // b.none
   14c10:	ldr	x0, [sp, #72]
   14c14:	ldr	w1, [x0, #56]
   14c18:	ldr	x0, [sp, #72]
   14c1c:	ldr	w0, [x0, #64]
   14c20:	cmp	w1, w0
   14c24:	b.cs	14c6c <lzma_crc64@@XZ_5.0+0x2e3c>  // b.hs, b.nlast
   14c28:	ldr	x0, [sp, #72]
   14c2c:	ldr	w0, [x0, #72]
   14c30:	str	w0, [sp, #88]
   14c34:	ldr	x0, [sp, #72]
   14c38:	str	wzr, [x0, #72]
   14c3c:	ldr	x0, [sp, #72]
   14c40:	ldr	w1, [x0, #56]
   14c44:	ldr	w0, [sp, #88]
   14c48:	sub	w1, w1, w0
   14c4c:	ldr	x0, [sp, #72]
   14c50:	str	w1, [x0, #56]
   14c54:	ldr	x0, [sp, #72]
   14c58:	ldr	x2, [x0, #88]
   14c5c:	ldr	x0, [sp, #72]
   14c60:	add	x0, x0, #0x20
   14c64:	ldr	w1, [sp, #88]
   14c68:	blr	x2
   14c6c:	ldr	w0, [sp, #92]
   14c70:	ldp	x29, x30, [sp, #16]
   14c74:	add	sp, sp, #0x60
   14c78:	ret
   14c7c:	stp	x29, x30, [sp, #-96]!
   14c80:	mov	x29, sp
   14c84:	str	x0, [sp, #72]
   14c88:	str	x1, [sp, #64]
   14c8c:	str	x2, [sp, #56]
   14c90:	str	x3, [sp, #48]
   14c94:	str	x4, [sp, #40]
   14c98:	str	x5, [sp, #32]
   14c9c:	str	x6, [sp, #24]
   14ca0:	str	x7, [sp, #16]
   14ca4:	ldr	x0, [sp, #72]
   14ca8:	str	x0, [sp, #88]
   14cac:	b	14d5c <lzma_crc64@@XZ_5.0+0x2f2c>
   14cb0:	ldr	x0, [sp, #88]
   14cb4:	ldr	w0, [x0, #136]
   14cb8:	cmp	w0, #0x0
   14cbc:	b.ne	14d0c <lzma_crc64@@XZ_5.0+0x2edc>  // b.any
   14cc0:	ldr	x0, [sp, #88]
   14cc4:	ldr	w1, [x0, #56]
   14cc8:	ldr	x0, [sp, #88]
   14ccc:	ldr	w0, [x0, #64]
   14cd0:	cmp	w1, w0
   14cd4:	b.cc	14d0c <lzma_crc64@@XZ_5.0+0x2edc>  // b.lo, b.ul, b.last
   14cd8:	ldr	w5, [sp, #96]
   14cdc:	ldr	x4, [sp, #40]
   14ce0:	ldr	x3, [sp, #48]
   14ce4:	ldr	x2, [sp, #56]
   14ce8:	ldr	x1, [sp, #64]
   14cec:	ldr	x0, [sp, #88]
   14cf0:	bl	14a58 <lzma_crc64@@XZ_5.0+0x2c28>
   14cf4:	str	w0, [sp, #84]
   14cf8:	ldr	w0, [sp, #84]
   14cfc:	cmp	w0, #0x0
   14d00:	b.eq	14d0c <lzma_crc64@@XZ_5.0+0x2edc>  // b.none
   14d04:	ldr	w0, [sp, #84]
   14d08:	b	14d94 <lzma_crc64@@XZ_5.0+0x2f64>
   14d0c:	ldr	x0, [sp, #88]
   14d10:	ldr	x5, [x0, #8]
   14d14:	ldr	x0, [sp, #88]
   14d18:	ldr	x6, [x0]
   14d1c:	ldr	x0, [sp, #88]
   14d20:	add	x0, x0, #0x20
   14d24:	ldr	x4, [sp, #16]
   14d28:	ldr	x3, [sp, #24]
   14d2c:	ldr	x2, [sp, #32]
   14d30:	mov	x1, x0
   14d34:	mov	x0, x6
   14d38:	blr	x5
   14d3c:	str	w0, [sp, #80]
   14d40:	ldr	w0, [sp, #80]
   14d44:	cmp	w0, #0x0
   14d48:	b.eq	14d5c <lzma_crc64@@XZ_5.0+0x2f2c>  // b.none
   14d4c:	ldr	x0, [sp, #88]
   14d50:	str	wzr, [x0, #136]
   14d54:	ldr	w0, [sp, #80]
   14d58:	b	14d94 <lzma_crc64@@XZ_5.0+0x2f64>
   14d5c:	ldr	x0, [sp, #24]
   14d60:	ldr	x0, [x0]
   14d64:	ldr	x1, [sp, #16]
   14d68:	cmp	x1, x0
   14d6c:	b.ls	14d90 <lzma_crc64@@XZ_5.0+0x2f60>  // b.plast
   14d70:	ldr	x0, [sp, #48]
   14d74:	ldr	x0, [x0]
   14d78:	ldr	x1, [sp, #40]
   14d7c:	cmp	x1, x0
   14d80:	b.hi	14cb0 <lzma_crc64@@XZ_5.0+0x2e80>  // b.pmore
   14d84:	ldr	w0, [sp, #96]
   14d88:	cmp	w0, #0x0
   14d8c:	b.ne	14cb0 <lzma_crc64@@XZ_5.0+0x2e80>  // b.any
   14d90:	mov	w0, #0x0                   	// #0
   14d94:	ldp	x29, x30, [sp], #96
   14d98:	ret
   14d9c:	stp	x29, x30, [sp, #-80]!
   14da0:	mov	x29, sp
   14da4:	str	x0, [sp, #40]
   14da8:	str	x1, [sp, #32]
   14dac:	str	x2, [sp, #24]
   14db0:	ldr	x0, [sp, #24]
   14db4:	ldr	x0, [x0, #8]
   14db8:	cmp	x0, #0xfff
   14dbc:	b.ls	14dec <lzma_crc64@@XZ_5.0+0x2fbc>  // b.plast
   14dc0:	ldr	x0, [sp, #24]
   14dc4:	ldr	x1, [x0, #8]
   14dc8:	mov	x0, #0x60000000            	// #1610612736
   14dcc:	cmp	x1, x0
   14dd0:	b.hi	14dec <lzma_crc64@@XZ_5.0+0x2fbc>  // b.pmore
   14dd4:	ldr	x0, [sp, #24]
   14dd8:	ldr	x1, [x0, #32]
   14ddc:	ldr	x0, [sp, #24]
   14de0:	ldr	x0, [x0, #24]
   14de4:	cmp	x1, x0
   14de8:	b.ls	14df4 <lzma_crc64@@XZ_5.0+0x2fc4>  // b.plast
   14dec:	mov	w0, #0x1                   	// #1
   14df0:	b	152a8 <lzma_crc64@@XZ_5.0+0x3478>
   14df4:	ldr	x0, [sp, #24]
   14df8:	ldr	x0, [x0]
   14dfc:	mov	w1, w0
   14e00:	ldr	x0, [sp, #24]
   14e04:	ldr	x0, [x0, #8]
   14e08:	add	w1, w1, w0
   14e0c:	ldr	x0, [sp, #40]
   14e10:	str	w1, [x0, #12]
   14e14:	ldr	x0, [sp, #24]
   14e18:	ldr	x0, [x0, #16]
   14e1c:	mov	w1, w0
   14e20:	ldr	x0, [sp, #24]
   14e24:	ldr	x0, [x0, #24]
   14e28:	add	w1, w1, w0
   14e2c:	ldr	x0, [sp, #40]
   14e30:	str	w1, [x0, #16]
   14e34:	ldr	x0, [sp, #24]
   14e38:	ldr	x0, [x0, #8]
   14e3c:	lsr	x0, x0, #1
   14e40:	str	w0, [sp, #76]
   14e44:	ldr	w1, [sp, #76]
   14e48:	mov	w0, #0x40000000            	// #1073741824
   14e4c:	cmp	w1, w0
   14e50:	b.ls	14e60 <lzma_crc64@@XZ_5.0+0x3030>  // b.plast
   14e54:	ldr	w0, [sp, #76]
   14e58:	lsr	w0, w0, #1
   14e5c:	str	w0, [sp, #76]
   14e60:	ldr	x0, [sp, #24]
   14e64:	ldr	x1, [x0]
   14e68:	ldr	x0, [sp, #24]
   14e6c:	ldr	x0, [x0, #24]
   14e70:	add	x1, x1, x0
   14e74:	ldr	x0, [sp, #24]
   14e78:	ldr	x0, [x0, #16]
   14e7c:	add	x0, x1, x0
   14e80:	lsr	x0, x0, #1
   14e84:	mov	w1, w0
   14e88:	ldr	w0, [sp, #76]
   14e8c:	add	w0, w1, w0
   14e90:	add	w0, w0, #0x80, lsl #12
   14e94:	str	w0, [sp, #76]
   14e98:	ldr	x0, [sp, #40]
   14e9c:	ldr	w0, [x0, #8]
   14ea0:	str	w0, [sp, #68]
   14ea4:	ldr	x0, [sp, #40]
   14ea8:	ldr	w1, [x0, #12]
   14eac:	ldr	w0, [sp, #76]
   14eb0:	add	w1, w1, w0
   14eb4:	ldr	x0, [sp, #40]
   14eb8:	ldr	w0, [x0, #16]
   14ebc:	add	w1, w1, w0
   14ec0:	ldr	x0, [sp, #40]
   14ec4:	str	w1, [x0, #8]
   14ec8:	ldr	x0, [sp, #40]
   14ecc:	ldr	x0, [x0]
   14ed0:	cmp	x0, #0x0
   14ed4:	b.eq	14f04 <lzma_crc64@@XZ_5.0+0x30d4>  // b.none
   14ed8:	ldr	x0, [sp, #40]
   14edc:	ldr	w0, [x0, #8]
   14ee0:	ldr	w1, [sp, #68]
   14ee4:	cmp	w1, w0
   14ee8:	b.eq	14f04 <lzma_crc64@@XZ_5.0+0x30d4>  // b.none
   14eec:	ldr	x0, [sp, #40]
   14ef0:	ldr	x0, [x0]
   14ef4:	ldr	x1, [sp, #32]
   14ef8:	bl	3814 <lzma_version_string@@XZ_5.0+0x124>
   14efc:	ldr	x0, [sp, #40]
   14f00:	str	xzr, [x0]
   14f04:	ldr	x0, [sp, #24]
   14f08:	ldr	x0, [x0, #24]
   14f0c:	mov	w1, w0
   14f10:	ldr	x0, [sp, #40]
   14f14:	str	w1, [x0, #100]
   14f18:	ldr	x0, [sp, #24]
   14f1c:	ldr	x0, [x0, #32]
   14f20:	mov	w1, w0
   14f24:	ldr	x0, [sp, #40]
   14f28:	str	w1, [x0, #96]
   14f2c:	ldr	x0, [sp, #24]
   14f30:	ldr	x0, [x0, #8]
   14f34:	add	w1, w0, #0x1
   14f38:	ldr	x0, [sp, #40]
   14f3c:	str	w1, [x0, #84]
   14f40:	ldr	x0, [sp, #24]
   14f44:	ldr	w0, [x0, #40]
   14f48:	cmp	w0, #0x14
   14f4c:	b.eq	1501c <lzma_crc64@@XZ_5.0+0x31ec>  // b.none
   14f50:	cmp	w0, #0x14
   14f54:	b.hi	15040 <lzma_crc64@@XZ_5.0+0x3210>  // b.pmore
   14f58:	cmp	w0, #0x13
   14f5c:	b.eq	14ff8 <lzma_crc64@@XZ_5.0+0x31c8>  // b.none
   14f60:	cmp	w0, #0x13
   14f64:	b.hi	15040 <lzma_crc64@@XZ_5.0+0x3210>  // b.pmore
   14f68:	cmp	w0, #0x12
   14f6c:	b.eq	14fd4 <lzma_crc64@@XZ_5.0+0x31a4>  // b.none
   14f70:	cmp	w0, #0x12
   14f74:	b.hi	15040 <lzma_crc64@@XZ_5.0+0x3210>  // b.pmore
   14f78:	cmp	w0, #0x3
   14f7c:	b.eq	14f8c <lzma_crc64@@XZ_5.0+0x315c>  // b.none
   14f80:	cmp	w0, #0x4
   14f84:	b.eq	14fb0 <lzma_crc64@@XZ_5.0+0x3180>  // b.none
   14f88:	b	15040 <lzma_crc64@@XZ_5.0+0x3210>
   14f8c:	ldr	x0, [sp, #40]
   14f90:	adrp	x1, 46000 <lzma_mode_is_supported@@XZ_5.0+0x2b368>
   14f94:	ldr	x1, [x1, #3896]
   14f98:	str	x1, [x0, #48]
   14f9c:	ldr	x0, [sp, #40]
   14fa0:	adrp	x1, 46000 <lzma_mode_is_supported@@XZ_5.0+0x2b368>
   14fa4:	ldr	x1, [x1, #3912]
   14fa8:	str	x1, [x0, #56]
   14fac:	b	15048 <lzma_crc64@@XZ_5.0+0x3218>
   14fb0:	ldr	x0, [sp, #40]
   14fb4:	adrp	x1, 46000 <lzma_mode_is_supported@@XZ_5.0+0x2b368>
   14fb8:	ldr	x1, [x1, #4064]
   14fbc:	str	x1, [x0, #48]
   14fc0:	ldr	x0, [sp, #40]
   14fc4:	adrp	x1, 46000 <lzma_mode_is_supported@@XZ_5.0+0x2b368>
   14fc8:	ldr	x1, [x1, #4024]
   14fcc:	str	x1, [x0, #56]
   14fd0:	b	15048 <lzma_crc64@@XZ_5.0+0x3218>
   14fd4:	ldr	x0, [sp, #40]
   14fd8:	adrp	x1, 46000 <lzma_mode_is_supported@@XZ_5.0+0x2b368>
   14fdc:	ldr	x1, [x1, #4048]
   14fe0:	str	x1, [x0, #48]
   14fe4:	ldr	x0, [sp, #40]
   14fe8:	adrp	x1, 46000 <lzma_mode_is_supported@@XZ_5.0+0x2b368>
   14fec:	ldr	x1, [x1, #4032]
   14ff0:	str	x1, [x0, #56]
   14ff4:	b	15048 <lzma_crc64@@XZ_5.0+0x3218>
   14ff8:	ldr	x0, [sp, #40]
   14ffc:	adrp	x1, 46000 <lzma_mode_is_supported@@XZ_5.0+0x2b368>
   15000:	ldr	x1, [x1, #3888]
   15004:	str	x1, [x0, #48]
   15008:	ldr	x0, [sp, #40]
   1500c:	adrp	x1, 46000 <lzma_mode_is_supported@@XZ_5.0+0x2b368>
   15010:	ldr	x1, [x1, #3928]
   15014:	str	x1, [x0, #56]
   15018:	b	15048 <lzma_crc64@@XZ_5.0+0x3218>
   1501c:	ldr	x0, [sp, #40]
   15020:	adrp	x1, 46000 <lzma_mode_is_supported@@XZ_5.0+0x2b368>
   15024:	ldr	x1, [x1, #4016]
   15028:	str	x1, [x0, #48]
   1502c:	ldr	x0, [sp, #40]
   15030:	adrp	x1, 46000 <lzma_mode_is_supported@@XZ_5.0+0x2b368>
   15034:	ldr	x1, [x1, #4000]
   15038:	str	x1, [x0, #56]
   1503c:	b	15048 <lzma_crc64@@XZ_5.0+0x3218>
   15040:	mov	w0, #0x1                   	// #1
   15044:	b	152a8 <lzma_crc64@@XZ_5.0+0x3478>
   15048:	ldr	x0, [sp, #24]
   1504c:	ldr	w0, [x0, #40]
   15050:	and	w0, w0, #0xf
   15054:	str	w0, [sp, #64]
   15058:	ldr	x0, [sp, #40]
   1505c:	ldr	w0, [x0, #96]
   15060:	ldr	w1, [sp, #64]
   15064:	cmp	w1, w0
   15068:	b.ls	15074 <lzma_crc64@@XZ_5.0+0x3244>  // b.plast
   1506c:	mov	w0, #0x1                   	// #1
   15070:	b	152a8 <lzma_crc64@@XZ_5.0+0x3478>
   15074:	ldr	x0, [sp, #24]
   15078:	ldr	w0, [x0, #40]
   1507c:	and	w0, w0, #0x10
   15080:	cmp	w0, #0x0
   15084:	cset	w0, ne  // ne = any
   15088:	strb	w0, [sp, #63]
   1508c:	ldr	w0, [sp, #64]
   15090:	cmp	w0, #0x2
   15094:	b.ne	150a4 <lzma_crc64@@XZ_5.0+0x3274>  // b.any
   15098:	mov	w0, #0xffff                	// #65535
   1509c:	str	w0, [sp, #72]
   150a0:	b	15150 <lzma_crc64@@XZ_5.0+0x3320>
   150a4:	ldr	x0, [sp, #24]
   150a8:	ldr	x0, [x0, #8]
   150ac:	sub	w0, w0, #0x1
   150b0:	str	w0, [sp, #72]
   150b4:	ldr	w0, [sp, #72]
   150b8:	lsr	w0, w0, #1
   150bc:	ldr	w1, [sp, #72]
   150c0:	orr	w0, w1, w0
   150c4:	str	w0, [sp, #72]
   150c8:	ldr	w0, [sp, #72]
   150cc:	lsr	w0, w0, #2
   150d0:	ldr	w1, [sp, #72]
   150d4:	orr	w0, w1, w0
   150d8:	str	w0, [sp, #72]
   150dc:	ldr	w0, [sp, #72]
   150e0:	lsr	w0, w0, #4
   150e4:	ldr	w1, [sp, #72]
   150e8:	orr	w0, w1, w0
   150ec:	str	w0, [sp, #72]
   150f0:	ldr	w0, [sp, #72]
   150f4:	lsr	w0, w0, #8
   150f8:	ldr	w1, [sp, #72]
   150fc:	orr	w0, w1, w0
   15100:	str	w0, [sp, #72]
   15104:	ldr	w0, [sp, #72]
   15108:	lsr	w0, w0, #1
   1510c:	str	w0, [sp, #72]
   15110:	ldr	w0, [sp, #72]
   15114:	orr	w0, w0, #0xffff
   15118:	str	w0, [sp, #72]
   1511c:	ldr	w1, [sp, #72]
   15120:	mov	w0, #0x1000000             	// #16777216
   15124:	cmp	w1, w0
   15128:	b.ls	15150 <lzma_crc64@@XZ_5.0+0x3320>  // b.plast
   1512c:	ldr	w0, [sp, #64]
   15130:	cmp	w0, #0x3
   15134:	b.ne	15144 <lzma_crc64@@XZ_5.0+0x3314>  // b.any
   15138:	mov	w0, #0xffffff              	// #16777215
   1513c:	str	w0, [sp, #72]
   15140:	b	15150 <lzma_crc64@@XZ_5.0+0x3320>
   15144:	ldr	w0, [sp, #72]
   15148:	lsr	w0, w0, #1
   1514c:	str	w0, [sp, #72]
   15150:	ldr	x0, [sp, #40]
   15154:	ldr	w1, [sp, #72]
   15158:	str	w1, [x0, #88]
   1515c:	ldr	w0, [sp, #72]
   15160:	add	w0, w0, #0x1
   15164:	str	w0, [sp, #72]
   15168:	ldr	w0, [sp, #64]
   1516c:	cmp	w0, #0x2
   15170:	b.ls	15180 <lzma_crc64@@XZ_5.0+0x3350>  // b.plast
   15174:	ldr	w0, [sp, #72]
   15178:	add	w0, w0, #0x400
   1517c:	str	w0, [sp, #72]
   15180:	ldr	w0, [sp, #64]
   15184:	cmp	w0, #0x3
   15188:	b.ls	15198 <lzma_crc64@@XZ_5.0+0x3368>  // b.plast
   1518c:	ldr	w0, [sp, #72]
   15190:	add	w0, w0, #0x10, lsl #12
   15194:	str	w0, [sp, #72]
   15198:	ldr	x0, [sp, #40]
   1519c:	ldr	w0, [x0, #108]
   151a0:	str	w0, [sp, #56]
   151a4:	ldr	x0, [sp, #40]
   151a8:	ldr	w0, [x0, #112]
   151ac:	str	w0, [sp, #52]
   151b0:	ldr	x0, [sp, #40]
   151b4:	ldr	w1, [sp, #72]
   151b8:	str	w1, [x0, #108]
   151bc:	ldr	x0, [sp, #40]
   151c0:	ldr	w1, [x0, #84]
   151c4:	ldr	x0, [sp, #40]
   151c8:	str	w1, [x0, #112]
   151cc:	ldrb	w0, [sp, #63]
   151d0:	cmp	w0, #0x0
   151d4:	b.eq	151ec <lzma_crc64@@XZ_5.0+0x33bc>  // b.none
   151d8:	ldr	x0, [sp, #40]
   151dc:	ldr	w0, [x0, #112]
   151e0:	lsl	w1, w0, #1
   151e4:	ldr	x0, [sp, #40]
   151e8:	str	w1, [x0, #112]
   151ec:	ldr	x0, [sp, #40]
   151f0:	ldr	w0, [x0, #108]
   151f4:	ldr	w1, [sp, #56]
   151f8:	cmp	w1, w0
   151fc:	b.ne	15214 <lzma_crc64@@XZ_5.0+0x33e4>  // b.any
   15200:	ldr	x0, [sp, #40]
   15204:	ldr	w0, [x0, #112]
   15208:	ldr	w1, [sp, #52]
   1520c:	cmp	w1, w0
   15210:	b.eq	15244 <lzma_crc64@@XZ_5.0+0x3414>  // b.none
   15214:	ldr	x0, [sp, #40]
   15218:	ldr	x0, [x0, #64]
   1521c:	ldr	x1, [sp, #32]
   15220:	bl	3814 <lzma_version_string@@XZ_5.0+0x124>
   15224:	ldr	x0, [sp, #40]
   15228:	str	xzr, [x0, #64]
   1522c:	ldr	x0, [sp, #40]
   15230:	ldr	x0, [x0, #72]
   15234:	ldr	x1, [sp, #32]
   15238:	bl	3814 <lzma_version_string@@XZ_5.0+0x124>
   1523c:	ldr	x0, [sp, #40]
   15240:	str	xzr, [x0, #72]
   15244:	ldr	x0, [sp, #24]
   15248:	ldr	w1, [x0, #44]
   1524c:	ldr	x0, [sp, #40]
   15250:	str	w1, [x0, #92]
   15254:	ldr	x0, [sp, #40]
   15258:	ldr	w0, [x0, #92]
   1525c:	cmp	w0, #0x0
   15260:	b.ne	152a4 <lzma_crc64@@XZ_5.0+0x3474>  // b.any
   15264:	ldrb	w0, [sp, #63]
   15268:	cmp	w0, #0x0
   1526c:	b.eq	1528c <lzma_crc64@@XZ_5.0+0x345c>  // b.none
   15270:	ldr	x0, [sp, #40]
   15274:	ldr	w0, [x0, #96]
   15278:	lsr	w0, w0, #1
   1527c:	add	w1, w0, #0x10
   15280:	ldr	x0, [sp, #40]
   15284:	str	w1, [x0, #92]
   15288:	b	152a4 <lzma_crc64@@XZ_5.0+0x3474>
   1528c:	ldr	x0, [sp, #40]
   15290:	ldr	w0, [x0, #96]
   15294:	lsr	w0, w0, #2
   15298:	add	w1, w0, #0x4
   1529c:	ldr	x0, [sp, #40]
   152a0:	str	w1, [x0, #92]
   152a4:	mov	w0, #0x0                   	// #0
   152a8:	ldp	x29, x30, [sp], #80
   152ac:	ret
   152b0:	stp	x29, x30, [sp, #-48]!
   152b4:	mov	x29, sp
   152b8:	str	x0, [sp, #40]
   152bc:	str	x1, [sp, #32]
   152c0:	str	x2, [sp, #24]
   152c4:	ldr	x0, [sp, #40]
   152c8:	ldr	x0, [x0]
   152cc:	cmp	x0, #0x0
   152d0:	b.ne	1530c <lzma_crc64@@XZ_5.0+0x34dc>  // b.any
   152d4:	ldr	x0, [sp, #40]
   152d8:	ldr	w0, [x0, #8]
   152dc:	mov	w0, w0
   152e0:	ldr	x1, [sp, #32]
   152e4:	bl	36fc <lzma_version_string@@XZ_5.0+0xc>
   152e8:	mov	x1, x0
   152ec:	ldr	x0, [sp, #40]
   152f0:	str	x1, [x0]
   152f4:	ldr	x0, [sp, #40]
   152f8:	ldr	x0, [x0]
   152fc:	cmp	x0, #0x0
   15300:	b.ne	1530c <lzma_crc64@@XZ_5.0+0x34dc>  // b.any
   15304:	mov	w0, #0x1                   	// #1
   15308:	b	154e0 <lzma_crc64@@XZ_5.0+0x36b0>
   1530c:	ldr	x0, [sp, #40]
   15310:	ldr	w1, [x0, #84]
   15314:	ldr	x0, [sp, #40]
   15318:	str	w1, [x0, #20]
   1531c:	ldr	x0, [sp, #40]
   15320:	str	wzr, [x0, #24]
   15324:	ldr	x0, [sp, #40]
   15328:	str	wzr, [x0, #28]
   1532c:	ldr	x0, [sp, #40]
   15330:	str	wzr, [x0, #32]
   15334:	ldr	x0, [sp, #40]
   15338:	str	wzr, [x0, #36]
   1533c:	ldr	x0, [sp, #40]
   15340:	str	wzr, [x0, #40]
   15344:	ldr	x0, [sp, #40]
   15348:	ldr	x0, [x0, #64]
   1534c:	cmp	x0, #0x0
   15350:	b.ne	153f4 <lzma_crc64@@XZ_5.0+0x35c4>  // b.any
   15354:	ldr	x0, [sp, #40]
   15358:	ldr	w0, [x0, #108]
   1535c:	mov	w0, w0
   15360:	lsl	x0, x0, #2
   15364:	ldr	x1, [sp, #32]
   15368:	bl	3778 <lzma_version_string@@XZ_5.0+0x88>
   1536c:	mov	x1, x0
   15370:	ldr	x0, [sp, #40]
   15374:	str	x1, [x0, #64]
   15378:	ldr	x0, [sp, #40]
   1537c:	ldr	w0, [x0, #112]
   15380:	mov	w0, w0
   15384:	lsl	x0, x0, #2
   15388:	ldr	x1, [sp, #32]
   1538c:	bl	36fc <lzma_version_string@@XZ_5.0+0xc>
   15390:	mov	x1, x0
   15394:	ldr	x0, [sp, #40]
   15398:	str	x1, [x0, #72]
   1539c:	ldr	x0, [sp, #40]
   153a0:	ldr	x0, [x0, #64]
   153a4:	cmp	x0, #0x0
   153a8:	b.eq	153bc <lzma_crc64@@XZ_5.0+0x358c>  // b.none
   153ac:	ldr	x0, [sp, #40]
   153b0:	ldr	x0, [x0, #72]
   153b4:	cmp	x0, #0x0
   153b8:	b.ne	1541c <lzma_crc64@@XZ_5.0+0x35ec>  // b.any
   153bc:	ldr	x0, [sp, #40]
   153c0:	ldr	x0, [x0, #64]
   153c4:	ldr	x1, [sp, #32]
   153c8:	bl	3814 <lzma_version_string@@XZ_5.0+0x124>
   153cc:	ldr	x0, [sp, #40]
   153d0:	str	xzr, [x0, #64]
   153d4:	ldr	x0, [sp, #40]
   153d8:	ldr	x0, [x0, #72]
   153dc:	ldr	x1, [sp, #32]
   153e0:	bl	3814 <lzma_version_string@@XZ_5.0+0x124>
   153e4:	ldr	x0, [sp, #40]
   153e8:	str	xzr, [x0, #72]
   153ec:	mov	w0, #0x1                   	// #1
   153f0:	b	154e0 <lzma_crc64@@XZ_5.0+0x36b0>
   153f4:	ldr	x0, [sp, #40]
   153f8:	ldr	x3, [x0, #64]
   153fc:	ldr	x0, [sp, #40]
   15400:	ldr	w0, [x0, #108]
   15404:	mov	w0, w0
   15408:	lsl	x0, x0, #2
   1540c:	mov	x2, x0
   15410:	mov	w1, #0x0                   	// #0
   15414:	mov	x0, x3
   15418:	bl	3230 <memset@plt>
   1541c:	ldr	x0, [sp, #40]
   15420:	str	wzr, [x0, #80]
   15424:	ldr	x0, [sp, #24]
   15428:	ldr	x0, [x0, #48]
   1542c:	cmp	x0, #0x0
   15430:	b.eq	154d4 <lzma_crc64@@XZ_5.0+0x36a4>  // b.none
   15434:	ldr	x0, [sp, #24]
   15438:	ldr	w0, [x0, #56]
   1543c:	cmp	w0, #0x0
   15440:	b.eq	154d4 <lzma_crc64@@XZ_5.0+0x36a4>  // b.none
   15444:	ldr	x0, [sp, #40]
   15448:	ldr	w1, [x0, #8]
   1544c:	ldr	x0, [sp, #24]
   15450:	ldr	w0, [x0, #56]
   15454:	cmp	w1, w0
   15458:	csel	w1, w1, w0, ls  // ls = plast
   1545c:	ldr	x0, [sp, #40]
   15460:	str	w1, [x0, #36]
   15464:	ldr	x0, [sp, #40]
   15468:	ldr	x3, [x0]
   1546c:	ldr	x0, [sp, #24]
   15470:	ldr	x1, [x0, #48]
   15474:	ldr	x0, [sp, #24]
   15478:	ldr	w0, [x0, #56]
   1547c:	mov	w2, w0
   15480:	ldr	x0, [sp, #40]
   15484:	ldr	w0, [x0, #36]
   15488:	mov	w0, w0
   1548c:	sub	x0, x2, x0
   15490:	add	x1, x1, x0
   15494:	ldr	x0, [sp, #40]
   15498:	ldr	w0, [x0, #36]
   1549c:	mov	w0, w0
   154a0:	mov	x2, x0
   154a4:	mov	x0, x3
   154a8:	bl	3090 <memcpy@plt>
   154ac:	ldr	x0, [sp, #40]
   154b0:	mov	w1, #0x1                   	// #1
   154b4:	str	w1, [x0, #104]
   154b8:	ldr	x0, [sp, #40]
   154bc:	ldr	x2, [x0, #56]
   154c0:	ldr	x0, [sp, #40]
   154c4:	ldr	w0, [x0, #36]
   154c8:	mov	w1, w0
   154cc:	ldr	x0, [sp, #40]
   154d0:	blr	x2
   154d4:	ldr	x0, [sp, #40]
   154d8:	str	wzr, [x0, #104]
   154dc:	mov	w0, #0x0                   	// #0
   154e0:	ldp	x29, x30, [sp], #48
   154e4:	ret
   154e8:	stp	x29, x30, [sp, #-160]!
   154ec:	mov	x29, sp
   154f0:	str	x0, [sp, #24]
   154f4:	stp	xzr, xzr, [sp, #40]
   154f8:	stp	xzr, xzr, [sp, #56]
   154fc:	stp	xzr, xzr, [sp, #72]
   15500:	stp	xzr, xzr, [sp, #88]
   15504:	stp	xzr, xzr, [sp, #104]
   15508:	stp	xzr, xzr, [sp, #120]
   1550c:	stp	xzr, xzr, [sp, #136]
   15510:	str	xzr, [sp, #152]
   15514:	add	x0, sp, #0x28
   15518:	ldr	x2, [sp, #24]
   1551c:	mov	x1, #0x0                   	// #0
   15520:	bl	14d9c <lzma_crc64@@XZ_5.0+0x2f6c>
   15524:	and	w0, w0, #0xff
   15528:	cmp	w0, #0x0
   1552c:	b.eq	15538 <lzma_crc64@@XZ_5.0+0x3708>  // b.none
   15530:	mov	x0, #0xffffffffffffffff    	// #-1
   15534:	b	15560 <lzma_crc64@@XZ_5.0+0x3730>
   15538:	ldr	w0, [sp, #148]
   1553c:	mov	w1, w0
   15540:	ldr	w0, [sp, #152]
   15544:	mov	w0, w0
   15548:	add	x0, x1, x0
   1554c:	lsl	x1, x0, #2
   15550:	ldr	w0, [sp, #48]
   15554:	mov	w0, w0
   15558:	add	x0, x1, x0
   1555c:	add	x0, x0, #0xe0
   15560:	ldp	x29, x30, [sp], #160
   15564:	ret
   15568:	stp	x29, x30, [sp, #-48]!
   1556c:	mov	x29, sp
   15570:	str	x0, [sp, #24]
   15574:	str	x1, [sp, #16]
   15578:	ldr	x0, [sp, #24]
   1557c:	str	x0, [sp, #40]
   15580:	ldr	x0, [sp, #40]
   15584:	add	x0, x0, #0x98
   15588:	ldr	x1, [sp, #16]
   1558c:	bl	3a48 <lzma_version_string@@XZ_5.0+0x358>
   15590:	ldr	x0, [sp, #40]
   15594:	ldr	x0, [x0, #104]
   15598:	ldr	x1, [sp, #16]
   1559c:	bl	3814 <lzma_version_string@@XZ_5.0+0x124>
   155a0:	ldr	x0, [sp, #40]
   155a4:	ldr	x0, [x0, #96]
   155a8:	ldr	x1, [sp, #16]
   155ac:	bl	3814 <lzma_version_string@@XZ_5.0+0x124>
   155b0:	ldr	x0, [sp, #40]
   155b4:	ldr	x0, [x0, #32]
   155b8:	ldr	x1, [sp, #16]
   155bc:	bl	3814 <lzma_version_string@@XZ_5.0+0x124>
   155c0:	ldr	x0, [sp, #40]
   155c4:	ldr	x0, [x0, #16]
   155c8:	cmp	x0, #0x0
   155cc:	b.eq	155ec <lzma_crc64@@XZ_5.0+0x37bc>  // b.none
   155d0:	ldr	x0, [sp, #40]
   155d4:	ldr	x2, [x0, #16]
   155d8:	ldr	x0, [sp, #40]
   155dc:	ldr	x0, [x0]
   155e0:	ldr	x1, [sp, #16]
   155e4:	blr	x2
   155e8:	b	155fc <lzma_crc64@@XZ_5.0+0x37cc>
   155ec:	ldr	x0, [sp, #40]
   155f0:	ldr	x0, [x0]
   155f4:	ldr	x1, [sp, #16]
   155f8:	bl	3814 <lzma_version_string@@XZ_5.0+0x124>
   155fc:	ldr	x1, [sp, #16]
   15600:	ldr	x0, [sp, #40]
   15604:	bl	3814 <lzma_version_string@@XZ_5.0+0x124>
   15608:	nop
   1560c:	ldp	x29, x30, [sp], #48
   15610:	ret
   15614:	stp	x29, x30, [sp, #-64]!
   15618:	mov	x29, sp
   1561c:	str	x0, [sp, #40]
   15620:	str	x1, [sp, #32]
   15624:	str	x2, [sp, #24]
   15628:	str	x3, [sp, #16]
   1562c:	ldr	x0, [sp, #40]
   15630:	str	x0, [sp, #56]
   15634:	ldr	x0, [sp, #56]
   15638:	ldr	x0, [x0, #24]
   1563c:	cmp	x0, #0x0
   15640:	b.ne	1564c <lzma_crc64@@XZ_5.0+0x381c>  // b.any
   15644:	mov	w0, #0xb                   	// #11
   15648:	b	1569c <lzma_crc64@@XZ_5.0+0x386c>
   1564c:	ldr	x0, [sp, #56]
   15650:	ldr	x2, [x0, #24]
   15654:	ldr	x0, [sp, #56]
   15658:	ldr	x0, [x0]
   1565c:	ldr	x1, [sp, #16]
   15660:	blr	x2
   15664:	str	w0, [sp, #52]
   15668:	ldr	w0, [sp, #52]
   1566c:	cmp	w0, #0x0
   15670:	b.eq	1567c <lzma_crc64@@XZ_5.0+0x384c>  // b.none
   15674:	ldr	w0, [sp, #52]
   15678:	b	1569c <lzma_crc64@@XZ_5.0+0x386c>
   1567c:	ldr	x0, [sp, #56]
   15680:	add	x3, x0, #0x98
   15684:	ldr	x0, [sp, #16]
   15688:	add	x0, x0, #0x10
   1568c:	mov	x2, x0
   15690:	ldr	x1, [sp, #32]
   15694:	mov	x0, x3
   15698:	bl	39d4 <lzma_version_string@@XZ_5.0+0x2e4>
   1569c:	ldp	x29, x30, [sp], #64
   156a0:	ret
   156a4:	stp	x29, x30, [sp, #-208]!
   156a8:	mov	x29, sp
   156ac:	str	x0, [sp, #40]
   156b0:	str	x1, [sp, #32]
   156b4:	str	x2, [sp, #24]
   156b8:	str	x3, [sp, #16]
   156bc:	ldr	x0, [sp, #40]
   156c0:	ldr	x0, [x0]
   156c4:	str	x0, [sp, #200]
   156c8:	ldr	x0, [sp, #200]
   156cc:	cmp	x0, #0x0
   156d0:	b.ne	157c8 <lzma_crc64@@XZ_5.0+0x3998>  // b.any
   156d4:	ldr	x1, [sp, #32]
   156d8:	mov	x0, #0xe0                  	// #224
   156dc:	bl	36fc <lzma_version_string@@XZ_5.0+0xc>
   156e0:	str	x0, [sp, #200]
   156e4:	ldr	x0, [sp, #200]
   156e8:	cmp	x0, #0x0
   156ec:	b.ne	156f8 <lzma_crc64@@XZ_5.0+0x38c8>  // b.any
   156f0:	mov	w0, #0x5                   	// #5
   156f4:	b	15880 <lzma_crc64@@XZ_5.0+0x3a50>
   156f8:	ldr	x0, [sp, #40]
   156fc:	ldr	x1, [sp, #200]
   15700:	str	x1, [x0]
   15704:	ldr	x0, [sp, #40]
   15708:	adrp	x1, 14000 <lzma_crc64@@XZ_5.0+0x21d0>
   1570c:	add	x1, x1, #0xc7c
   15710:	str	x1, [x0, #24]
   15714:	ldr	x0, [sp, #40]
   15718:	adrp	x1, 15000 <lzma_crc64@@XZ_5.0+0x31d0>
   1571c:	add	x1, x1, #0x568
   15720:	str	x1, [x0, #32]
   15724:	ldr	x0, [sp, #40]
   15728:	adrp	x1, 15000 <lzma_crc64@@XZ_5.0+0x31d0>
   1572c:	add	x1, x1, #0x614
   15730:	str	x1, [x0, #64]
   15734:	ldr	x0, [sp, #200]
   15738:	str	xzr, [x0]
   1573c:	ldr	x0, [sp, #200]
   15740:	str	xzr, [x0, #8]
   15744:	ldr	x0, [sp, #200]
   15748:	str	xzr, [x0, #16]
   1574c:	ldr	x0, [sp, #200]
   15750:	str	xzr, [x0, #32]
   15754:	ldr	x0, [sp, #200]
   15758:	str	wzr, [x0, #40]
   1575c:	ldr	x0, [sp, #200]
   15760:	str	xzr, [x0, #96]
   15764:	ldr	x0, [sp, #200]
   15768:	str	xzr, [x0, #104]
   1576c:	ldr	x0, [sp, #200]
   15770:	str	wzr, [x0, #140]
   15774:	ldr	x0, [sp, #200]
   15778:	str	wzr, [x0, #144]
   1577c:	ldr	x0, [sp, #200]
   15780:	str	xzr, [x0, #152]
   15784:	ldr	x0, [sp, #200]
   15788:	mov	x1, #0xffffffffffffffff    	// #-1
   1578c:	str	x1, [x0, #160]
   15790:	ldr	x0, [sp, #200]
   15794:	str	xzr, [x0, #168]
   15798:	ldr	x0, [sp, #200]
   1579c:	str	xzr, [x0, #176]
   157a0:	ldr	x0, [sp, #200]
   157a4:	str	xzr, [x0, #184]
   157a8:	ldr	x0, [sp, #200]
   157ac:	str	xzr, [x0, #192]
   157b0:	ldr	x0, [sp, #200]
   157b4:	str	xzr, [x0, #200]
   157b8:	ldr	x0, [sp, #200]
   157bc:	str	xzr, [x0, #208]
   157c0:	ldr	x0, [sp, #200]
   157c4:	str	xzr, [x0, #216]
   157c8:	ldr	x5, [sp, #200]
   157cc:	ldr	x0, [sp, #24]
   157d0:	ldr	x0, [x0, #16]
   157d4:	add	x1, sp, #0x80
   157d8:	ldr	x4, [sp, #16]
   157dc:	mov	x3, x1
   157e0:	mov	x2, x0
   157e4:	ldr	x1, [sp, #32]
   157e8:	mov	x0, x5
   157ec:	blr	x4
   157f0:	str	w0, [sp, #196]
   157f4:	ldr	w0, [sp, #196]
   157f8:	cmp	w0, #0x0
   157fc:	b.eq	15808 <lzma_crc64@@XZ_5.0+0x39d8>  // b.none
   15800:	ldr	w0, [sp, #196]
   15804:	b	15880 <lzma_crc64@@XZ_5.0+0x3a50>
   15808:	ldr	x0, [sp, #200]
   1580c:	add	x0, x0, #0x20
   15810:	add	x1, sp, #0x80
   15814:	mov	x2, x1
   15818:	ldr	x1, [sp, #32]
   1581c:	bl	14d9c <lzma_crc64@@XZ_5.0+0x2f6c>
   15820:	and	w0, w0, #0xff
   15824:	cmp	w0, #0x0
   15828:	b.eq	15834 <lzma_crc64@@XZ_5.0+0x3a04>  // b.none
   1582c:	mov	w0, #0x8                   	// #8
   15830:	b	15880 <lzma_crc64@@XZ_5.0+0x3a50>
   15834:	ldr	x0, [sp, #200]
   15838:	add	x0, x0, #0x20
   1583c:	add	x1, sp, #0x80
   15840:	mov	x2, x1
   15844:	ldr	x1, [sp, #32]
   15848:	bl	152b0 <lzma_crc64@@XZ_5.0+0x3480>
   1584c:	and	w0, w0, #0xff
   15850:	cmp	w0, #0x0
   15854:	b.eq	15860 <lzma_crc64@@XZ_5.0+0x3a30>  // b.none
   15858:	mov	w0, #0x5                   	// #5
   1585c:	b	15880 <lzma_crc64@@XZ_5.0+0x3a50>
   15860:	ldr	x0, [sp, #200]
   15864:	add	x3, x0, #0x98
   15868:	ldr	x0, [sp, #24]
   1586c:	add	x0, x0, #0x18
   15870:	mov	x2, x0
   15874:	ldr	x1, [sp, #32]
   15878:	mov	x0, x3
   1587c:	bl	393c <lzma_version_string@@XZ_5.0+0x24c>
   15880:	ldp	x29, x30, [sp], #208
   15884:	ret

0000000000015888 <lzma_mf_is_supported@@XZ_5.0>:
   15888:	sub	sp, sp, #0x20
   1588c:	str	w0, [sp, #12]
   15890:	strb	wzr, [sp, #31]
   15894:	ldr	w0, [sp, #12]
   15898:	cmp	w0, #0x3
   1589c:	b.ne	158a8 <lzma_mf_is_supported@@XZ_5.0+0x20>  // b.any
   158a0:	mov	w0, #0x1                   	// #1
   158a4:	strb	w0, [sp, #31]
   158a8:	ldr	w0, [sp, #12]
   158ac:	cmp	w0, #0x4
   158b0:	b.ne	158bc <lzma_mf_is_supported@@XZ_5.0+0x34>  // b.any
   158b4:	mov	w0, #0x1                   	// #1
   158b8:	strb	w0, [sp, #31]
   158bc:	ldr	w0, [sp, #12]
   158c0:	cmp	w0, #0x12
   158c4:	b.ne	158d0 <lzma_mf_is_supported@@XZ_5.0+0x48>  // b.any
   158c8:	mov	w0, #0x1                   	// #1
   158cc:	strb	w0, [sp, #31]
   158d0:	ldr	w0, [sp, #12]
   158d4:	cmp	w0, #0x13
   158d8:	b.ne	158e4 <lzma_mf_is_supported@@XZ_5.0+0x5c>  // b.any
   158dc:	mov	w0, #0x1                   	// #1
   158e0:	strb	w0, [sp, #31]
   158e4:	ldr	w0, [sp, #12]
   158e8:	cmp	w0, #0x14
   158ec:	b.ne	158f8 <lzma_mf_is_supported@@XZ_5.0+0x70>  // b.any
   158f0:	mov	w0, #0x1                   	// #1
   158f4:	strb	w0, [sp, #31]
   158f8:	ldrb	w0, [sp, #31]
   158fc:	add	sp, sp, #0x20
   15900:	ret
   15904:	sub	sp, sp, #0x10
   15908:	str	x0, [sp, #8]
   1590c:	ldr	x0, [sp, #8]
   15910:	ldr	x1, [x0]
   15914:	ldr	x0, [sp, #8]
   15918:	ldr	w0, [x0, #24]
   1591c:	mov	w0, w0
   15920:	add	x0, x1, x0
   15924:	add	sp, sp, #0x10
   15928:	ret
   1592c:	sub	sp, sp, #0x10
   15930:	str	x0, [sp, #8]
   15934:	ldr	x0, [sp, #8]
   15938:	ldr	w1, [x0, #36]
   1593c:	ldr	x0, [sp, #8]
   15940:	ldr	w0, [x0, #24]
   15944:	sub	w0, w1, w0
   15948:	add	sp, sp, #0x10
   1594c:	ret
   15950:	stp	x29, x30, [sp, #-112]!
   15954:	mov	x29, sp
   15958:	str	x0, [sp, #40]
   1595c:	str	x1, [sp, #32]
   15960:	str	x2, [sp, #24]
   15964:	ldr	x0, [sp, #40]
   15968:	ldr	x2, [x0, #48]
   1596c:	ldr	x1, [sp, #24]
   15970:	ldr	x0, [sp, #40]
   15974:	blr	x2
   15978:	str	w0, [sp, #100]
   1597c:	str	wzr, [sp, #108]
   15980:	ldr	w0, [sp, #100]
   15984:	cmp	w0, #0x0
   15988:	b.eq	15aa0 <lzma_mf_is_supported@@XZ_5.0+0x218>  // b.none
   1598c:	ldr	w0, [sp, #100]
   15990:	sub	w0, w0, #0x1
   15994:	mov	w0, w0
   15998:	lsl	x0, x0, #3
   1599c:	ldr	x1, [sp, #24]
   159a0:	add	x0, x1, x0
   159a4:	ldr	w0, [x0]
   159a8:	str	w0, [sp, #108]
   159ac:	ldr	x0, [sp, #40]
   159b0:	ldr	w0, [x0, #96]
   159b4:	ldr	w1, [sp, #108]
   159b8:	cmp	w1, w0
   159bc:	b.ne	15aa0 <lzma_mf_is_supported@@XZ_5.0+0x218>  // b.any
   159c0:	ldr	x0, [sp, #40]
   159c4:	bl	1592c <lzma_mf_is_supported@@XZ_5.0+0xa4>
   159c8:	add	w0, w0, #0x1
   159cc:	str	w0, [sp, #104]
   159d0:	ldr	x0, [sp, #40]
   159d4:	ldr	w0, [x0, #100]
   159d8:	ldr	w1, [sp, #104]
   159dc:	cmp	w1, w0
   159e0:	b.ls	159f0 <lzma_mf_is_supported@@XZ_5.0+0x168>  // b.plast
   159e4:	ldr	x0, [sp, #40]
   159e8:	ldr	w0, [x0, #100]
   159ec:	str	w0, [sp, #104]
   159f0:	ldr	x0, [sp, #40]
   159f4:	bl	15904 <lzma_mf_is_supported@@XZ_5.0+0x7c>
   159f8:	sub	x0, x0, #0x1
   159fc:	str	x0, [sp, #88]
   15a00:	ldr	w0, [sp, #100]
   15a04:	sub	w0, w0, #0x1
   15a08:	mov	w0, w0
   15a0c:	lsl	x0, x0, #3
   15a10:	ldr	x1, [sp, #24]
   15a14:	add	x0, x1, x0
   15a18:	ldr	w0, [x0, #4]
   15a1c:	mov	w0, w0
   15a20:	mvn	x0, x0
   15a24:	ldr	x1, [sp, #88]
   15a28:	add	x0, x1, x0
   15a2c:	str	x0, [sp, #80]
   15a30:	ldr	x0, [sp, #88]
   15a34:	str	x0, [sp, #72]
   15a38:	ldr	x0, [sp, #80]
   15a3c:	str	x0, [sp, #64]
   15a40:	ldr	w0, [sp, #108]
   15a44:	str	w0, [sp, #60]
   15a48:	ldr	w0, [sp, #104]
   15a4c:	str	w0, [sp, #56]
   15a50:	b	15a60 <lzma_mf_is_supported@@XZ_5.0+0x1d8>
   15a54:	ldr	w0, [sp, #60]
   15a58:	add	w0, w0, #0x1
   15a5c:	str	w0, [sp, #60]
   15a60:	ldr	w1, [sp, #56]
   15a64:	ldr	w0, [sp, #60]
   15a68:	cmp	w1, w0
   15a6c:	b.ls	15a98 <lzma_mf_is_supported@@XZ_5.0+0x210>  // b.plast
   15a70:	ldr	w0, [sp, #60]
   15a74:	ldr	x1, [sp, #72]
   15a78:	add	x0, x1, x0
   15a7c:	ldrb	w1, [x0]
   15a80:	ldr	w0, [sp, #60]
   15a84:	ldr	x2, [sp, #64]
   15a88:	add	x0, x2, x0
   15a8c:	ldrb	w0, [x0]
   15a90:	cmp	w1, w0
   15a94:	b.eq	15a54 <lzma_mf_is_supported@@XZ_5.0+0x1cc>  // b.none
   15a98:	ldr	w0, [sp, #60]
   15a9c:	str	w0, [sp, #108]
   15aa0:	ldr	x0, [sp, #32]
   15aa4:	ldr	w1, [sp, #100]
   15aa8:	str	w1, [x0]
   15aac:	ldr	x0, [sp, #40]
   15ab0:	ldr	w0, [x0, #28]
   15ab4:	add	w1, w0, #0x1
   15ab8:	ldr	x0, [sp, #40]
   15abc:	str	w1, [x0, #28]
   15ac0:	ldr	w0, [sp, #108]
   15ac4:	ldp	x29, x30, [sp], #112
   15ac8:	ret
   15acc:	sub	sp, sp, #0x20
   15ad0:	str	x0, [sp, #8]
   15ad4:	ldr	x0, [sp, #8]
   15ad8:	ldr	w0, [x0, #84]
   15adc:	mvn	w0, w0
   15ae0:	str	w0, [sp, #20]
   15ae4:	str	wzr, [sp, #28]
   15ae8:	b	15b70 <lzma_mf_is_supported@@XZ_5.0+0x2e8>
   15aec:	ldr	x0, [sp, #8]
   15af0:	ldr	x1, [x0, #64]
   15af4:	ldr	w0, [sp, #28]
   15af8:	lsl	x0, x0, #2
   15afc:	add	x0, x1, x0
   15b00:	ldr	w0, [x0]
   15b04:	ldr	w1, [sp, #20]
   15b08:	cmp	w1, w0
   15b0c:	b.cc	15b2c <lzma_mf_is_supported@@XZ_5.0+0x2a4>  // b.lo, b.ul, b.last
   15b10:	ldr	x0, [sp, #8]
   15b14:	ldr	x1, [x0, #64]
   15b18:	ldr	w0, [sp, #28]
   15b1c:	lsl	x0, x0, #2
   15b20:	add	x0, x1, x0
   15b24:	str	wzr, [x0]
   15b28:	b	15b64 <lzma_mf_is_supported@@XZ_5.0+0x2dc>
   15b2c:	ldr	x0, [sp, #8]
   15b30:	ldr	x1, [x0, #64]
   15b34:	ldr	w0, [sp, #28]
   15b38:	lsl	x0, x0, #2
   15b3c:	add	x0, x1, x0
   15b40:	ldr	w2, [x0]
   15b44:	ldr	x0, [sp, #8]
   15b48:	ldr	x1, [x0, #64]
   15b4c:	ldr	w0, [sp, #28]
   15b50:	lsl	x0, x0, #2
   15b54:	add	x0, x1, x0
   15b58:	ldr	w1, [sp, #20]
   15b5c:	sub	w1, w2, w1
   15b60:	str	w1, [x0]
   15b64:	ldr	w0, [sp, #28]
   15b68:	add	w0, w0, #0x1
   15b6c:	str	w0, [sp, #28]
   15b70:	ldr	x0, [sp, #8]
   15b74:	ldr	w0, [x0, #108]
   15b78:	ldr	w1, [sp, #28]
   15b7c:	cmp	w1, w0
   15b80:	b.cc	15aec <lzma_mf_is_supported@@XZ_5.0+0x264>  // b.lo, b.ul, b.last
   15b84:	str	wzr, [sp, #24]
   15b88:	b	15c10 <lzma_mf_is_supported@@XZ_5.0+0x388>
   15b8c:	ldr	x0, [sp, #8]
   15b90:	ldr	x1, [x0, #72]
   15b94:	ldr	w0, [sp, #24]
   15b98:	lsl	x0, x0, #2
   15b9c:	add	x0, x1, x0
   15ba0:	ldr	w0, [x0]
   15ba4:	ldr	w1, [sp, #20]
   15ba8:	cmp	w1, w0
   15bac:	b.cc	15bcc <lzma_mf_is_supported@@XZ_5.0+0x344>  // b.lo, b.ul, b.last
   15bb0:	ldr	x0, [sp, #8]
   15bb4:	ldr	x1, [x0, #72]
   15bb8:	ldr	w0, [sp, #24]
   15bbc:	lsl	x0, x0, #2
   15bc0:	add	x0, x1, x0
   15bc4:	str	wzr, [x0]
   15bc8:	b	15c04 <lzma_mf_is_supported@@XZ_5.0+0x37c>
   15bcc:	ldr	x0, [sp, #8]
   15bd0:	ldr	x1, [x0, #72]
   15bd4:	ldr	w0, [sp, #24]
   15bd8:	lsl	x0, x0, #2
   15bdc:	add	x0, x1, x0
   15be0:	ldr	w2, [x0]
   15be4:	ldr	x0, [sp, #8]
   15be8:	ldr	x1, [x0, #72]
   15bec:	ldr	w0, [sp, #24]
   15bf0:	lsl	x0, x0, #2
   15bf4:	add	x0, x1, x0
   15bf8:	ldr	w1, [sp, #20]
   15bfc:	sub	w1, w2, w1
   15c00:	str	w1, [x0]
   15c04:	ldr	w0, [sp, #24]
   15c08:	add	w0, w0, #0x1
   15c0c:	str	w0, [sp, #24]
   15c10:	ldr	x0, [sp, #8]
   15c14:	ldr	w0, [x0, #112]
   15c18:	ldr	w1, [sp, #24]
   15c1c:	cmp	w1, w0
   15c20:	b.cc	15b8c <lzma_mf_is_supported@@XZ_5.0+0x304>  // b.lo, b.ul, b.last
   15c24:	ldr	x0, [sp, #8]
   15c28:	ldr	w1, [x0, #20]
   15c2c:	ldr	w0, [sp, #20]
   15c30:	sub	w1, w1, w0
   15c34:	ldr	x0, [sp, #8]
   15c38:	str	w1, [x0, #20]
   15c3c:	nop
   15c40:	add	sp, sp, #0x20
   15c44:	ret
   15c48:	stp	x29, x30, [sp, #-32]!
   15c4c:	mov	x29, sp
   15c50:	str	x0, [sp, #24]
   15c54:	ldr	x0, [sp, #24]
   15c58:	ldr	w0, [x0, #80]
   15c5c:	add	w1, w0, #0x1
   15c60:	ldr	x0, [sp, #24]
   15c64:	str	w1, [x0, #80]
   15c68:	ldr	x0, [sp, #24]
   15c6c:	ldr	w1, [x0, #80]
   15c70:	ldr	x0, [sp, #24]
   15c74:	ldr	w0, [x0, #84]
   15c78:	cmp	w1, w0
   15c7c:	b.ne	15c88 <lzma_mf_is_supported@@XZ_5.0+0x400>  // b.any
   15c80:	ldr	x0, [sp, #24]
   15c84:	str	wzr, [x0, #80]
   15c88:	ldr	x0, [sp, #24]
   15c8c:	ldr	w0, [x0, #24]
   15c90:	add	w1, w0, #0x1
   15c94:	ldr	x0, [sp, #24]
   15c98:	str	w1, [x0, #24]
   15c9c:	ldr	x0, [sp, #24]
   15ca0:	ldr	w1, [x0, #24]
   15ca4:	ldr	x0, [sp, #24]
   15ca8:	ldr	w0, [x0, #20]
   15cac:	add	w0, w1, w0
   15cb0:	cmn	w0, #0x1
   15cb4:	cset	w0, eq  // eq = none
   15cb8:	and	w0, w0, #0xff
   15cbc:	and	x0, x0, #0xff
   15cc0:	cmp	x0, #0x0
   15cc4:	b.eq	15cd0 <lzma_mf_is_supported@@XZ_5.0+0x448>  // b.none
   15cc8:	ldr	x0, [sp, #24]
   15ccc:	bl	15acc <lzma_mf_is_supported@@XZ_5.0+0x244>
   15cd0:	nop
   15cd4:	ldp	x29, x30, [sp], #32
   15cd8:	ret
   15cdc:	sub	sp, sp, #0x10
   15ce0:	str	x0, [sp, #8]
   15ce4:	ldr	x0, [sp, #8]
   15ce8:	ldr	w0, [x0, #24]
   15cec:	add	w1, w0, #0x1
   15cf0:	ldr	x0, [sp, #8]
   15cf4:	str	w1, [x0, #24]
   15cf8:	ldr	x0, [sp, #8]
   15cfc:	ldr	w0, [x0, #40]
   15d00:	add	w1, w0, #0x1
   15d04:	ldr	x0, [sp, #8]
   15d08:	str	w1, [x0, #40]
   15d0c:	nop
   15d10:	add	sp, sp, #0x10
   15d14:	ret
   15d18:	sub	sp, sp, #0x60
   15d1c:	str	w0, [sp, #44]
   15d20:	str	w1, [sp, #40]
   15d24:	str	x2, [sp, #32]
   15d28:	str	w3, [sp, #28]
   15d2c:	str	w4, [sp, #24]
   15d30:	str	x5, [sp, #16]
   15d34:	str	w6, [sp, #12]
   15d38:	str	w7, [sp, #8]
   15d3c:	ldr	w0, [sp, #12]
   15d40:	lsl	x0, x0, #2
   15d44:	ldr	x1, [sp, #16]
   15d48:	add	x0, x1, x0
   15d4c:	ldr	w1, [sp, #28]
   15d50:	str	w1, [x0]
   15d54:	ldr	w1, [sp, #40]
   15d58:	ldr	w0, [sp, #28]
   15d5c:	sub	w0, w1, w0
   15d60:	str	w0, [sp, #92]
   15d64:	ldr	w0, [sp, #24]
   15d68:	sub	w1, w0, #0x1
   15d6c:	str	w1, [sp, #24]
   15d70:	cmp	w0, #0x0
   15d74:	b.eq	15d88 <lzma_mf_is_supported@@XZ_5.0+0x500>  // b.none
   15d78:	ldr	w1, [sp, #92]
   15d7c:	ldr	w0, [sp, #8]
   15d80:	cmp	w1, w0
   15d84:	b.cc	15d90 <lzma_mf_is_supported@@XZ_5.0+0x508>  // b.lo, b.ul, b.last
   15d88:	ldr	x0, [sp, #96]
   15d8c:	b	15eec <lzma_mf_is_supported@@XZ_5.0+0x664>
   15d90:	ldr	w0, [sp, #92]
   15d94:	neg	x0, x0
   15d98:	ldr	x1, [sp, #32]
   15d9c:	add	x0, x1, x0
   15da0:	str	x0, [sp, #80]
   15da4:	ldr	w1, [sp, #12]
   15da8:	ldr	w0, [sp, #92]
   15dac:	sub	w1, w1, w0
   15db0:	ldr	w2, [sp, #92]
   15db4:	ldr	w0, [sp, #12]
   15db8:	cmp	w2, w0
   15dbc:	b.ls	15dc8 <lzma_mf_is_supported@@XZ_5.0+0x540>  // b.plast
   15dc0:	ldr	w0, [sp, #8]
   15dc4:	b	15dcc <lzma_mf_is_supported@@XZ_5.0+0x544>
   15dc8:	mov	w0, #0x0                   	// #0
   15dcc:	add	w0, w0, w1
   15dd0:	mov	w0, w0
   15dd4:	lsl	x0, x0, #2
   15dd8:	ldr	x1, [sp, #16]
   15ddc:	add	x0, x1, x0
   15de0:	ldr	w0, [x0]
   15de4:	str	w0, [sp, #28]
   15de8:	ldr	w0, [sp, #104]
   15dec:	ldr	x1, [sp, #80]
   15df0:	add	x0, x1, x0
   15df4:	ldrb	w1, [x0]
   15df8:	ldr	w0, [sp, #104]
   15dfc:	ldr	x2, [sp, #32]
   15e00:	add	x0, x2, x0
   15e04:	ldrb	w0, [x0]
   15e08:	cmp	w1, w0
   15e0c:	b.ne	15d54 <lzma_mf_is_supported@@XZ_5.0+0x4cc>  // b.any
   15e10:	ldr	x0, [sp, #80]
   15e14:	ldrb	w1, [x0]
   15e18:	ldr	x0, [sp, #32]
   15e1c:	ldrb	w0, [x0]
   15e20:	cmp	w1, w0
   15e24:	b.ne	15d54 <lzma_mf_is_supported@@XZ_5.0+0x4cc>  // b.any
   15e28:	ldr	x0, [sp, #80]
   15e2c:	str	x0, [sp, #64]
   15e30:	ldr	x0, [sp, #32]
   15e34:	str	x0, [sp, #56]
   15e38:	mov	w0, #0x1                   	// #1
   15e3c:	str	w0, [sp, #52]
   15e40:	ldr	w0, [sp, #44]
   15e44:	str	w0, [sp, #48]
   15e48:	b	15e58 <lzma_mf_is_supported@@XZ_5.0+0x5d0>
   15e4c:	ldr	w0, [sp, #52]
   15e50:	add	w0, w0, #0x1
   15e54:	str	w0, [sp, #52]
   15e58:	ldr	w1, [sp, #48]
   15e5c:	ldr	w0, [sp, #52]
   15e60:	cmp	w1, w0
   15e64:	b.ls	15e90 <lzma_mf_is_supported@@XZ_5.0+0x608>  // b.plast
   15e68:	ldr	w0, [sp, #52]
   15e6c:	ldr	x1, [sp, #64]
   15e70:	add	x0, x1, x0
   15e74:	ldrb	w1, [x0]
   15e78:	ldr	w0, [sp, #52]
   15e7c:	ldr	x2, [sp, #56]
   15e80:	add	x0, x2, x0
   15e84:	ldrb	w0, [x0]
   15e88:	cmp	w1, w0
   15e8c:	b.eq	15e4c <lzma_mf_is_supported@@XZ_5.0+0x5c4>  // b.none
   15e90:	ldr	w0, [sp, #52]
   15e94:	str	w0, [sp, #76]
   15e98:	ldr	w1, [sp, #104]
   15e9c:	ldr	w0, [sp, #76]
   15ea0:	cmp	w1, w0
   15ea4:	b.cs	15d54 <lzma_mf_is_supported@@XZ_5.0+0x4cc>  // b.hs, b.nlast
   15ea8:	ldr	w0, [sp, #76]
   15eac:	str	w0, [sp, #104]
   15eb0:	ldr	x0, [sp, #96]
   15eb4:	ldr	w1, [sp, #76]
   15eb8:	str	w1, [x0]
   15ebc:	ldr	w0, [sp, #92]
   15ec0:	sub	w1, w0, #0x1
   15ec4:	ldr	x0, [sp, #96]
   15ec8:	str	w1, [x0, #4]
   15ecc:	ldr	x0, [sp, #96]
   15ed0:	add	x0, x0, #0x8
   15ed4:	str	x0, [sp, #96]
   15ed8:	ldr	w1, [sp, #76]
   15edc:	ldr	w0, [sp, #44]
   15ee0:	cmp	w1, w0
   15ee4:	b.ne	15d54 <lzma_mf_is_supported@@XZ_5.0+0x4cc>  // b.any
   15ee8:	ldr	x0, [sp, #96]
   15eec:	add	sp, sp, #0x60
   15ef0:	ret
   15ef4:	sub	sp, sp, #0x80
   15ef8:	stp	x29, x30, [sp, #16]
   15efc:	add	x29, sp, #0x10
   15f00:	str	x0, [sp, #40]
   15f04:	str	x1, [sp, #32]
   15f08:	ldr	x0, [sp, #40]
   15f0c:	bl	1592c <lzma_mf_is_supported@@XZ_5.0+0xa4>
   15f10:	str	w0, [sp, #124]
   15f14:	ldr	x0, [sp, #40]
   15f18:	ldr	w0, [x0, #96]
   15f1c:	ldr	w1, [sp, #124]
   15f20:	cmp	w1, w0
   15f24:	b.cc	15f38 <lzma_mf_is_supported@@XZ_5.0+0x6b0>  // b.lo, b.ul, b.last
   15f28:	ldr	x0, [sp, #40]
   15f2c:	ldr	w0, [x0, #96]
   15f30:	str	w0, [sp, #124]
   15f34:	b	15f54 <lzma_mf_is_supported@@XZ_5.0+0x6cc>
   15f38:	ldr	w0, [sp, #124]
   15f3c:	cmp	w0, #0x2
   15f40:	b.hi	15f54 <lzma_mf_is_supported@@XZ_5.0+0x6cc>  // b.pmore
   15f44:	ldr	x0, [sp, #40]
   15f48:	bl	15cdc <lzma_mf_is_supported@@XZ_5.0+0x454>
   15f4c:	mov	w0, #0x0                   	// #0
   15f50:	b	1620c <lzma_mf_is_supported@@XZ_5.0+0x984>
   15f54:	ldr	x0, [sp, #40]
   15f58:	bl	15904 <lzma_mf_is_supported@@XZ_5.0+0x7c>
   15f5c:	str	x0, [sp, #104]
   15f60:	ldr	x0, [sp, #40]
   15f64:	ldr	w1, [x0, #24]
   15f68:	ldr	x0, [sp, #40]
   15f6c:	ldr	w0, [x0, #20]
   15f70:	add	w0, w1, w0
   15f74:	str	w0, [sp, #100]
   15f78:	str	wzr, [sp, #120]
   15f7c:	ldr	x0, [sp, #104]
   15f80:	ldrb	w0, [x0]
   15f84:	mov	w1, w0
   15f88:	adrp	x0, 46000 <lzma_mode_is_supported@@XZ_5.0+0x2b368>
   15f8c:	ldr	x0, [x0, #3952]
   15f90:	sxtw	x1, w1
   15f94:	ldr	w0, [x0, x1, lsl #2]
   15f98:	ldr	x1, [sp, #104]
   15f9c:	add	x1, x1, #0x1
   15fa0:	ldrb	w1, [x1]
   15fa4:	eor	w0, w0, w1
   15fa8:	str	w0, [sp, #96]
   15fac:	ldr	w0, [sp, #96]
   15fb0:	and	w0, w0, #0x3ff
   15fb4:	str	w0, [sp, #92]
   15fb8:	ldr	x0, [sp, #104]
   15fbc:	add	x0, x0, #0x2
   15fc0:	ldrb	w0, [x0]
   15fc4:	lsl	w1, w0, #8
   15fc8:	ldr	w0, [sp, #96]
   15fcc:	eor	w1, w1, w0
   15fd0:	ldr	x0, [sp, #40]
   15fd4:	ldr	w0, [x0, #88]
   15fd8:	and	w0, w1, w0
   15fdc:	str	w0, [sp, #88]
   15fe0:	ldr	x0, [sp, #40]
   15fe4:	ldr	x1, [x0, #64]
   15fe8:	ldr	w0, [sp, #92]
   15fec:	lsl	x0, x0, #2
   15ff0:	add	x0, x1, x0
   15ff4:	ldr	w0, [x0]
   15ff8:	ldr	w1, [sp, #100]
   15ffc:	sub	w0, w1, w0
   16000:	str	w0, [sp, #84]
   16004:	ldr	x0, [sp, #40]
   16008:	ldr	x1, [x0, #64]
   1600c:	ldr	w0, [sp, #88]
   16010:	add	w0, w0, #0x400
   16014:	mov	w0, w0
   16018:	lsl	x0, x0, #2
   1601c:	add	x0, x1, x0
   16020:	ldr	w0, [x0]
   16024:	str	w0, [sp, #80]
   16028:	ldr	x0, [sp, #40]
   1602c:	ldr	x1, [x0, #64]
   16030:	ldr	w0, [sp, #92]
   16034:	lsl	x0, x0, #2
   16038:	add	x0, x1, x0
   1603c:	ldr	w1, [sp, #100]
   16040:	str	w1, [x0]
   16044:	ldr	x0, [sp, #40]
   16048:	ldr	x1, [x0, #64]
   1604c:	ldr	w0, [sp, #88]
   16050:	add	w0, w0, #0x400
   16054:	mov	w0, w0
   16058:	lsl	x0, x0, #2
   1605c:	add	x0, x1, x0
   16060:	ldr	w1, [sp, #100]
   16064:	str	w1, [x0]
   16068:	mov	w0, #0x2                   	// #2
   1606c:	str	w0, [sp, #116]
   16070:	ldr	x0, [sp, #40]
   16074:	ldr	w0, [x0, #84]
   16078:	ldr	w1, [sp, #84]
   1607c:	cmp	w1, w0
   16080:	b.cs	1618c <lzma_mf_is_supported@@XZ_5.0+0x904>  // b.hs, b.nlast
   16084:	ldr	w0, [sp, #84]
   16088:	neg	x0, x0
   1608c:	ldr	x1, [sp, #104]
   16090:	add	x0, x1, x0
   16094:	ldrb	w1, [x0]
   16098:	ldr	x0, [sp, #104]
   1609c:	ldrb	w0, [x0]
   160a0:	cmp	w1, w0
   160a4:	b.ne	1618c <lzma_mf_is_supported@@XZ_5.0+0x904>  // b.any
   160a8:	ldr	w0, [sp, #84]
   160ac:	neg	x0, x0
   160b0:	ldr	x1, [sp, #104]
   160b4:	add	x0, x1, x0
   160b8:	str	x0, [sp, #72]
   160bc:	ldr	x0, [sp, #104]
   160c0:	str	x0, [sp, #64]
   160c4:	ldr	w0, [sp, #116]
   160c8:	str	w0, [sp, #60]
   160cc:	ldr	w0, [sp, #124]
   160d0:	str	w0, [sp, #56]
   160d4:	b	160e4 <lzma_mf_is_supported@@XZ_5.0+0x85c>
   160d8:	ldr	w0, [sp, #60]
   160dc:	add	w0, w0, #0x1
   160e0:	str	w0, [sp, #60]
   160e4:	ldr	w1, [sp, #56]
   160e8:	ldr	w0, [sp, #60]
   160ec:	cmp	w1, w0
   160f0:	b.ls	1611c <lzma_mf_is_supported@@XZ_5.0+0x894>  // b.plast
   160f4:	ldr	w0, [sp, #60]
   160f8:	ldr	x1, [sp, #72]
   160fc:	add	x0, x1, x0
   16100:	ldrb	w1, [x0]
   16104:	ldr	w0, [sp, #60]
   16108:	ldr	x2, [sp, #64]
   1610c:	add	x0, x2, x0
   16110:	ldrb	w0, [x0]
   16114:	cmp	w1, w0
   16118:	b.eq	160d8 <lzma_mf_is_supported@@XZ_5.0+0x850>  // b.none
   1611c:	ldr	w0, [sp, #60]
   16120:	str	w0, [sp, #116]
   16124:	ldr	x0, [sp, #32]
   16128:	ldr	w1, [sp, #116]
   1612c:	str	w1, [x0]
   16130:	ldr	w0, [sp, #84]
   16134:	sub	w1, w0, #0x1
   16138:	ldr	x0, [sp, #32]
   1613c:	str	w1, [x0, #4]
   16140:	mov	w0, #0x1                   	// #1
   16144:	str	w0, [sp, #120]
   16148:	ldr	w1, [sp, #116]
   1614c:	ldr	w0, [sp, #124]
   16150:	cmp	w1, w0
   16154:	b.ne	1618c <lzma_mf_is_supported@@XZ_5.0+0x904>  // b.any
   16158:	ldr	x0, [sp, #40]
   1615c:	ldr	x1, [x0, #72]
   16160:	ldr	x0, [sp, #40]
   16164:	ldr	w0, [x0, #80]
   16168:	mov	w0, w0
   1616c:	lsl	x0, x0, #2
   16170:	add	x0, x1, x0
   16174:	ldr	w1, [sp, #80]
   16178:	str	w1, [x0]
   1617c:	ldr	x0, [sp, #40]
   16180:	bl	15c48 <lzma_mf_is_supported@@XZ_5.0+0x3c0>
   16184:	mov	w0, #0x1                   	// #1
   16188:	b	1620c <lzma_mf_is_supported@@XZ_5.0+0x984>
   1618c:	ldr	x0, [sp, #40]
   16190:	ldr	w2, [x0, #92]
   16194:	ldr	x0, [sp, #40]
   16198:	ldr	x3, [x0, #72]
   1619c:	ldr	x0, [sp, #40]
   161a0:	ldr	w4, [x0, #80]
   161a4:	ldr	x0, [sp, #40]
   161a8:	ldr	w5, [x0, #84]
   161ac:	ldr	w0, [sp, #120]
   161b0:	lsl	x0, x0, #3
   161b4:	ldr	x1, [sp, #32]
   161b8:	add	x0, x1, x0
   161bc:	ldr	w1, [sp, #116]
   161c0:	str	w1, [sp, #8]
   161c4:	str	x0, [sp]
   161c8:	mov	w7, w5
   161cc:	mov	w6, w4
   161d0:	mov	x5, x3
   161d4:	mov	w4, w2
   161d8:	ldr	w3, [sp, #80]
   161dc:	ldr	x2, [sp, #104]
   161e0:	ldr	w1, [sp, #100]
   161e4:	ldr	w0, [sp, #124]
   161e8:	bl	15d18 <lzma_mf_is_supported@@XZ_5.0+0x490>
   161ec:	mov	x1, x0
   161f0:	ldr	x0, [sp, #32]
   161f4:	sub	x0, x1, x0
   161f8:	asr	x0, x0, #3
   161fc:	str	w0, [sp, #120]
   16200:	ldr	x0, [sp, #40]
   16204:	bl	15c48 <lzma_mf_is_supported@@XZ_5.0+0x3c0>
   16208:	ldr	w0, [sp, #120]
   1620c:	ldp	x29, x30, [sp, #16]
   16210:	add	sp, sp, #0x80
   16214:	ret
   16218:	stp	x29, x30, [sp, #-64]!
   1621c:	mov	x29, sp
   16220:	str	x0, [sp, #24]
   16224:	str	w1, [sp, #20]
   16228:	ldr	x0, [sp, #24]
   1622c:	bl	1592c <lzma_mf_is_supported@@XZ_5.0+0xa4>
   16230:	cmp	w0, #0x2
   16234:	b.hi	16244 <lzma_mf_is_supported@@XZ_5.0+0x9bc>  // b.pmore
   16238:	ldr	x0, [sp, #24]
   1623c:	bl	15cdc <lzma_mf_is_supported@@XZ_5.0+0x454>
   16240:	b	1635c <lzma_mf_is_supported@@XZ_5.0+0xad4>
   16244:	ldr	x0, [sp, #24]
   16248:	bl	15904 <lzma_mf_is_supported@@XZ_5.0+0x7c>
   1624c:	str	x0, [sp, #56]
   16250:	ldr	x0, [sp, #24]
   16254:	ldr	w1, [x0, #24]
   16258:	ldr	x0, [sp, #24]
   1625c:	ldr	w0, [x0, #20]
   16260:	add	w0, w1, w0
   16264:	str	w0, [sp, #52]
   16268:	ldr	x0, [sp, #56]
   1626c:	ldrb	w0, [x0]
   16270:	mov	w1, w0
   16274:	adrp	x0, 46000 <lzma_mode_is_supported@@XZ_5.0+0x2b368>
   16278:	ldr	x0, [x0, #3952]
   1627c:	sxtw	x1, w1
   16280:	ldr	w0, [x0, x1, lsl #2]
   16284:	ldr	x1, [sp, #56]
   16288:	add	x1, x1, #0x1
   1628c:	ldrb	w1, [x1]
   16290:	eor	w0, w0, w1
   16294:	str	w0, [sp, #48]
   16298:	ldr	w0, [sp, #48]
   1629c:	and	w0, w0, #0x3ff
   162a0:	str	w0, [sp, #44]
   162a4:	ldr	x0, [sp, #56]
   162a8:	add	x0, x0, #0x2
   162ac:	ldrb	w0, [x0]
   162b0:	lsl	w1, w0, #8
   162b4:	ldr	w0, [sp, #48]
   162b8:	eor	w1, w1, w0
   162bc:	ldr	x0, [sp, #24]
   162c0:	ldr	w0, [x0, #88]
   162c4:	and	w0, w1, w0
   162c8:	str	w0, [sp, #40]
   162cc:	ldr	x0, [sp, #24]
   162d0:	ldr	x1, [x0, #64]
   162d4:	ldr	w0, [sp, #40]
   162d8:	add	w0, w0, #0x400
   162dc:	mov	w0, w0
   162e0:	lsl	x0, x0, #2
   162e4:	add	x0, x1, x0
   162e8:	ldr	w0, [x0]
   162ec:	str	w0, [sp, #36]
   162f0:	ldr	x0, [sp, #24]
   162f4:	ldr	x1, [x0, #64]
   162f8:	ldr	w0, [sp, #44]
   162fc:	lsl	x0, x0, #2
   16300:	add	x0, x1, x0
   16304:	ldr	w1, [sp, #52]
   16308:	str	w1, [x0]
   1630c:	ldr	x0, [sp, #24]
   16310:	ldr	x1, [x0, #64]
   16314:	ldr	w0, [sp, #40]
   16318:	add	w0, w0, #0x400
   1631c:	mov	w0, w0
   16320:	lsl	x0, x0, #2
   16324:	add	x0, x1, x0
   16328:	ldr	w1, [sp, #52]
   1632c:	str	w1, [x0]
   16330:	ldr	x0, [sp, #24]
   16334:	ldr	x1, [x0, #72]
   16338:	ldr	x0, [sp, #24]
   1633c:	ldr	w0, [x0, #80]
   16340:	mov	w0, w0
   16344:	lsl	x0, x0, #2
   16348:	add	x0, x1, x0
   1634c:	ldr	w1, [sp, #36]
   16350:	str	w1, [x0]
   16354:	ldr	x0, [sp, #24]
   16358:	bl	15c48 <lzma_mf_is_supported@@XZ_5.0+0x3c0>
   1635c:	ldr	w0, [sp, #20]
   16360:	sub	w0, w0, #0x1
   16364:	str	w0, [sp, #20]
   16368:	ldr	w0, [sp, #20]
   1636c:	cmp	w0, #0x0
   16370:	b.ne	16228 <lzma_mf_is_supported@@XZ_5.0+0x9a0>  // b.any
   16374:	nop
   16378:	nop
   1637c:	ldp	x29, x30, [sp], #64
   16380:	ret
   16384:	sub	sp, sp, #0x80
   16388:	stp	x29, x30, [sp, #16]
   1638c:	add	x29, sp, #0x10
   16390:	str	x0, [sp, #40]
   16394:	str	x1, [sp, #32]
   16398:	ldr	x0, [sp, #40]
   1639c:	bl	1592c <lzma_mf_is_supported@@XZ_5.0+0xa4>
   163a0:	str	w0, [sp, #124]
   163a4:	ldr	x0, [sp, #40]
   163a8:	ldr	w0, [x0, #96]
   163ac:	ldr	w1, [sp, #124]
   163b0:	cmp	w1, w0
   163b4:	b.cc	163c8 <lzma_mf_is_supported@@XZ_5.0+0xb40>  // b.lo, b.ul, b.last
   163b8:	ldr	x0, [sp, #40]
   163bc:	ldr	w0, [x0, #96]
   163c0:	str	w0, [sp, #124]
   163c4:	b	163e4 <lzma_mf_is_supported@@XZ_5.0+0xb5c>
   163c8:	ldr	w0, [sp, #124]
   163cc:	cmp	w0, #0x3
   163d0:	b.hi	163e4 <lzma_mf_is_supported@@XZ_5.0+0xb5c>  // b.pmore
   163d4:	ldr	x0, [sp, #40]
   163d8:	bl	15cdc <lzma_mf_is_supported@@XZ_5.0+0x454>
   163dc:	mov	w0, #0x0                   	// #0
   163e0:	b	1680c <lzma_mf_is_supported@@XZ_5.0+0xf84>
   163e4:	ldr	x0, [sp, #40]
   163e8:	bl	15904 <lzma_mf_is_supported@@XZ_5.0+0x7c>
   163ec:	str	x0, [sp, #104]
   163f0:	ldr	x0, [sp, #40]
   163f4:	ldr	w1, [x0, #24]
   163f8:	ldr	x0, [sp, #40]
   163fc:	ldr	w0, [x0, #20]
   16400:	add	w0, w1, w0
   16404:	str	w0, [sp, #100]
   16408:	str	wzr, [sp, #120]
   1640c:	ldr	x0, [sp, #104]
   16410:	ldrb	w0, [x0]
   16414:	mov	w1, w0
   16418:	adrp	x0, 46000 <lzma_mode_is_supported@@XZ_5.0+0x2b368>
   1641c:	ldr	x0, [x0, #3952]
   16420:	sxtw	x1, w1
   16424:	ldr	w0, [x0, x1, lsl #2]
   16428:	ldr	x1, [sp, #104]
   1642c:	add	x1, x1, #0x1
   16430:	ldrb	w1, [x1]
   16434:	eor	w0, w0, w1
   16438:	str	w0, [sp, #96]
   1643c:	ldr	w0, [sp, #96]
   16440:	and	w0, w0, #0x3ff
   16444:	str	w0, [sp, #92]
   16448:	ldr	x0, [sp, #104]
   1644c:	add	x0, x0, #0x2
   16450:	ldrb	w0, [x0]
   16454:	lsl	w1, w0, #8
   16458:	ldr	w0, [sp, #96]
   1645c:	eor	w0, w1, w0
   16460:	and	w0, w0, #0xffff
   16464:	str	w0, [sp, #88]
   16468:	ldr	x0, [sp, #104]
   1646c:	add	x0, x0, #0x2
   16470:	ldrb	w0, [x0]
   16474:	lsl	w1, w0, #8
   16478:	ldr	w0, [sp, #96]
   1647c:	eor	w1, w1, w0
   16480:	ldr	x0, [sp, #104]
   16484:	add	x0, x0, #0x3
   16488:	ldrb	w0, [x0]
   1648c:	mov	w2, w0
   16490:	adrp	x0, 46000 <lzma_mode_is_supported@@XZ_5.0+0x2b368>
   16494:	ldr	x0, [x0, #3952]
   16498:	sxtw	x2, w2
   1649c:	ldr	w0, [x0, x2, lsl #2]
   164a0:	lsl	w0, w0, #5
   164a4:	eor	w1, w1, w0
   164a8:	ldr	x0, [sp, #40]
   164ac:	ldr	w0, [x0, #88]
   164b0:	and	w0, w1, w0
   164b4:	str	w0, [sp, #84]
   164b8:	ldr	x0, [sp, #40]
   164bc:	ldr	x1, [x0, #64]
   164c0:	ldr	w0, [sp, #92]
   164c4:	lsl	x0, x0, #2
   164c8:	add	x0, x1, x0
   164cc:	ldr	w0, [x0]
   164d0:	ldr	w1, [sp, #100]
   164d4:	sub	w0, w1, w0
   164d8:	str	w0, [sp, #116]
   164dc:	ldr	x0, [sp, #40]
   164e0:	ldr	x1, [x0, #64]
   164e4:	ldr	w0, [sp, #88]
   164e8:	add	w0, w0, #0x400
   164ec:	mov	w0, w0
   164f0:	lsl	x0, x0, #2
   164f4:	add	x0, x1, x0
   164f8:	ldr	w0, [x0]
   164fc:	ldr	w1, [sp, #100]
   16500:	sub	w0, w1, w0
   16504:	str	w0, [sp, #80]
   16508:	ldr	x0, [sp, #40]
   1650c:	ldr	x1, [x0, #64]
   16510:	ldr	w2, [sp, #84]
   16514:	mov	w0, #0x400                 	// #1024
   16518:	movk	w0, #0x1, lsl #16
   1651c:	add	w0, w2, w0
   16520:	mov	w0, w0
   16524:	lsl	x0, x0, #2
   16528:	add	x0, x1, x0
   1652c:	ldr	w0, [x0]
   16530:	str	w0, [sp, #76]
   16534:	ldr	x0, [sp, #40]
   16538:	ldr	x1, [x0, #64]
   1653c:	ldr	w0, [sp, #92]
   16540:	lsl	x0, x0, #2
   16544:	add	x0, x1, x0
   16548:	ldr	w1, [sp, #100]
   1654c:	str	w1, [x0]
   16550:	ldr	x0, [sp, #40]
   16554:	ldr	x1, [x0, #64]
   16558:	ldr	w0, [sp, #88]
   1655c:	add	w0, w0, #0x400
   16560:	mov	w0, w0
   16564:	lsl	x0, x0, #2
   16568:	add	x0, x1, x0
   1656c:	ldr	w1, [sp, #100]
   16570:	str	w1, [x0]
   16574:	ldr	x0, [sp, #40]
   16578:	ldr	x1, [x0, #64]
   1657c:	ldr	w2, [sp, #84]
   16580:	mov	w0, #0x400                 	// #1024
   16584:	movk	w0, #0x1, lsl #16
   16588:	add	w0, w2, w0
   1658c:	mov	w0, w0
   16590:	lsl	x0, x0, #2
   16594:	add	x0, x1, x0
   16598:	ldr	w1, [sp, #100]
   1659c:	str	w1, [x0]
   165a0:	mov	w0, #0x1                   	// #1
   165a4:	str	w0, [sp, #112]
   165a8:	ldr	x0, [sp, #40]
   165ac:	ldr	w0, [x0, #84]
   165b0:	ldr	w1, [sp, #116]
   165b4:	cmp	w1, w0
   165b8:	b.cs	1660c <lzma_mf_is_supported@@XZ_5.0+0xd84>  // b.hs, b.nlast
   165bc:	ldr	w0, [sp, #116]
   165c0:	neg	x0, x0
   165c4:	ldr	x1, [sp, #104]
   165c8:	add	x0, x1, x0
   165cc:	ldrb	w1, [x0]
   165d0:	ldr	x0, [sp, #104]
   165d4:	ldrb	w0, [x0]
   165d8:	cmp	w1, w0
   165dc:	b.ne	1660c <lzma_mf_is_supported@@XZ_5.0+0xd84>  // b.any
   165e0:	mov	w0, #0x2                   	// #2
   165e4:	str	w0, [sp, #112]
   165e8:	ldr	x0, [sp, #32]
   165ec:	mov	w1, #0x2                   	// #2
   165f0:	str	w1, [x0]
   165f4:	ldr	w0, [sp, #116]
   165f8:	sub	w1, w0, #0x1
   165fc:	ldr	x0, [sp, #32]
   16600:	str	w1, [x0, #4]
   16604:	mov	w0, #0x1                   	// #1
   16608:	str	w0, [sp, #120]
   1660c:	ldr	w1, [sp, #116]
   16610:	ldr	w0, [sp, #80]
   16614:	cmp	w1, w0
   16618:	b.eq	1668c <lzma_mf_is_supported@@XZ_5.0+0xe04>  // b.none
   1661c:	ldr	x0, [sp, #40]
   16620:	ldr	w0, [x0, #84]
   16624:	ldr	w1, [sp, #80]
   16628:	cmp	w1, w0
   1662c:	b.cs	1668c <lzma_mf_is_supported@@XZ_5.0+0xe04>  // b.hs, b.nlast
   16630:	ldr	w0, [sp, #80]
   16634:	neg	x0, x0
   16638:	ldr	x1, [sp, #104]
   1663c:	add	x0, x1, x0
   16640:	ldrb	w1, [x0]
   16644:	ldr	x0, [sp, #104]
   16648:	ldrb	w0, [x0]
   1664c:	cmp	w1, w0
   16650:	b.ne	1668c <lzma_mf_is_supported@@XZ_5.0+0xe04>  // b.any
   16654:	mov	w0, #0x3                   	// #3
   16658:	str	w0, [sp, #112]
   1665c:	ldr	w0, [sp, #120]
   16660:	add	w1, w0, #0x1
   16664:	str	w1, [sp, #120]
   16668:	mov	w0, w0
   1666c:	lsl	x0, x0, #3
   16670:	ldr	x1, [sp, #32]
   16674:	add	x0, x1, x0
   16678:	ldr	w1, [sp, #80]
   1667c:	sub	w1, w1, #0x1
   16680:	str	w1, [x0, #4]
   16684:	ldr	w0, [sp, #80]
   16688:	str	w0, [sp, #116]
   1668c:	ldr	w0, [sp, #120]
   16690:	cmp	w0, #0x0
   16694:	b.eq	16778 <lzma_mf_is_supported@@XZ_5.0+0xef0>  // b.none
   16698:	ldr	w0, [sp, #116]
   1669c:	neg	x0, x0
   166a0:	ldr	x1, [sp, #104]
   166a4:	add	x0, x1, x0
   166a8:	str	x0, [sp, #64]
   166ac:	ldr	x0, [sp, #104]
   166b0:	str	x0, [sp, #56]
   166b4:	ldr	w0, [sp, #112]
   166b8:	str	w0, [sp, #52]
   166bc:	ldr	w0, [sp, #124]
   166c0:	str	w0, [sp, #48]
   166c4:	b	166d4 <lzma_mf_is_supported@@XZ_5.0+0xe4c>
   166c8:	ldr	w0, [sp, #52]
   166cc:	add	w0, w0, #0x1
   166d0:	str	w0, [sp, #52]
   166d4:	ldr	w1, [sp, #48]
   166d8:	ldr	w0, [sp, #52]
   166dc:	cmp	w1, w0
   166e0:	b.ls	1670c <lzma_mf_is_supported@@XZ_5.0+0xe84>  // b.plast
   166e4:	ldr	w0, [sp, #52]
   166e8:	ldr	x1, [sp, #64]
   166ec:	add	x0, x1, x0
   166f0:	ldrb	w1, [x0]
   166f4:	ldr	w0, [sp, #52]
   166f8:	ldr	x2, [sp, #56]
   166fc:	add	x0, x2, x0
   16700:	ldrb	w0, [x0]
   16704:	cmp	w1, w0
   16708:	b.eq	166c8 <lzma_mf_is_supported@@XZ_5.0+0xe40>  // b.none
   1670c:	ldr	w0, [sp, #52]
   16710:	str	w0, [sp, #112]
   16714:	ldr	w0, [sp, #120]
   16718:	sub	w0, w0, #0x1
   1671c:	mov	w0, w0
   16720:	lsl	x0, x0, #3
   16724:	ldr	x1, [sp, #32]
   16728:	add	x0, x1, x0
   1672c:	ldr	w1, [sp, #112]
   16730:	str	w1, [x0]
   16734:	ldr	w1, [sp, #112]
   16738:	ldr	w0, [sp, #124]
   1673c:	cmp	w1, w0
   16740:	b.ne	16778 <lzma_mf_is_supported@@XZ_5.0+0xef0>  // b.any
   16744:	ldr	x0, [sp, #40]
   16748:	ldr	x1, [x0, #72]
   1674c:	ldr	x0, [sp, #40]
   16750:	ldr	w0, [x0, #80]
   16754:	mov	w0, w0
   16758:	lsl	x0, x0, #2
   1675c:	add	x0, x1, x0
   16760:	ldr	w1, [sp, #76]
   16764:	str	w1, [x0]
   16768:	ldr	x0, [sp, #40]
   1676c:	bl	15c48 <lzma_mf_is_supported@@XZ_5.0+0x3c0>
   16770:	ldr	w0, [sp, #120]
   16774:	b	1680c <lzma_mf_is_supported@@XZ_5.0+0xf84>
   16778:	ldr	w0, [sp, #112]
   1677c:	cmp	w0, #0x2
   16780:	b.hi	1678c <lzma_mf_is_supported@@XZ_5.0+0xf04>  // b.pmore
   16784:	mov	w0, #0x3                   	// #3
   16788:	str	w0, [sp, #112]
   1678c:	ldr	x0, [sp, #40]
   16790:	ldr	w2, [x0, #92]
   16794:	ldr	x0, [sp, #40]
   16798:	ldr	x3, [x0, #72]
   1679c:	ldr	x0, [sp, #40]
   167a0:	ldr	w4, [x0, #80]
   167a4:	ldr	x0, [sp, #40]
   167a8:	ldr	w5, [x0, #84]
   167ac:	ldr	w0, [sp, #120]
   167b0:	lsl	x0, x0, #3
   167b4:	ldr	x1, [sp, #32]
   167b8:	add	x0, x1, x0
   167bc:	ldr	w1, [sp, #112]
   167c0:	str	w1, [sp, #8]
   167c4:	str	x0, [sp]
   167c8:	mov	w7, w5
   167cc:	mov	w6, w4
   167d0:	mov	x5, x3
   167d4:	mov	w4, w2
   167d8:	ldr	w3, [sp, #76]
   167dc:	ldr	x2, [sp, #104]
   167e0:	ldr	w1, [sp, #100]
   167e4:	ldr	w0, [sp, #124]
   167e8:	bl	15d18 <lzma_mf_is_supported@@XZ_5.0+0x490>
   167ec:	mov	x1, x0
   167f0:	ldr	x0, [sp, #32]
   167f4:	sub	x0, x1, x0
   167f8:	asr	x0, x0, #3
   167fc:	str	w0, [sp, #120]
   16800:	ldr	x0, [sp, #40]
   16804:	bl	15c48 <lzma_mf_is_supported@@XZ_5.0+0x3c0>
   16808:	ldr	w0, [sp, #120]
   1680c:	ldp	x29, x30, [sp, #16]
   16810:	add	sp, sp, #0x80
   16814:	ret
   16818:	stp	x29, x30, [sp, #-64]!
   1681c:	mov	x29, sp
   16820:	str	x0, [sp, #24]
   16824:	str	w1, [sp, #20]
   16828:	ldr	x0, [sp, #24]
   1682c:	bl	1592c <lzma_mf_is_supported@@XZ_5.0+0xa4>
   16830:	cmp	w0, #0x3
   16834:	b.hi	16844 <lzma_mf_is_supported@@XZ_5.0+0xfbc>  // b.pmore
   16838:	ldr	x0, [sp, #24]
   1683c:	bl	15cdc <lzma_mf_is_supported@@XZ_5.0+0x454>
   16840:	b	169d8 <lzma_mf_is_supported@@XZ_5.0+0x1150>
   16844:	ldr	x0, [sp, #24]
   16848:	bl	15904 <lzma_mf_is_supported@@XZ_5.0+0x7c>
   1684c:	str	x0, [sp, #56]
   16850:	ldr	x0, [sp, #24]
   16854:	ldr	w1, [x0, #24]
   16858:	ldr	x0, [sp, #24]
   1685c:	ldr	w0, [x0, #20]
   16860:	add	w0, w1, w0
   16864:	str	w0, [sp, #52]
   16868:	ldr	x0, [sp, #56]
   1686c:	ldrb	w0, [x0]
   16870:	mov	w1, w0
   16874:	adrp	x0, 46000 <lzma_mode_is_supported@@XZ_5.0+0x2b368>
   16878:	ldr	x0, [x0, #3952]
   1687c:	sxtw	x1, w1
   16880:	ldr	w0, [x0, x1, lsl #2]
   16884:	ldr	x1, [sp, #56]
   16888:	add	x1, x1, #0x1
   1688c:	ldrb	w1, [x1]
   16890:	eor	w0, w0, w1
   16894:	str	w0, [sp, #48]
   16898:	ldr	w0, [sp, #48]
   1689c:	and	w0, w0, #0x3ff
   168a0:	str	w0, [sp, #44]
   168a4:	ldr	x0, [sp, #56]
   168a8:	add	x0, x0, #0x2
   168ac:	ldrb	w0, [x0]
   168b0:	lsl	w1, w0, #8
   168b4:	ldr	w0, [sp, #48]
   168b8:	eor	w0, w1, w0
   168bc:	and	w0, w0, #0xffff
   168c0:	str	w0, [sp, #40]
   168c4:	ldr	x0, [sp, #56]
   168c8:	add	x0, x0, #0x2
   168cc:	ldrb	w0, [x0]
   168d0:	lsl	w1, w0, #8
   168d4:	ldr	w0, [sp, #48]
   168d8:	eor	w1, w1, w0
   168dc:	ldr	x0, [sp, #56]
   168e0:	add	x0, x0, #0x3
   168e4:	ldrb	w0, [x0]
   168e8:	mov	w2, w0
   168ec:	adrp	x0, 46000 <lzma_mode_is_supported@@XZ_5.0+0x2b368>
   168f0:	ldr	x0, [x0, #3952]
   168f4:	sxtw	x2, w2
   168f8:	ldr	w0, [x0, x2, lsl #2]
   168fc:	lsl	w0, w0, #5
   16900:	eor	w1, w1, w0
   16904:	ldr	x0, [sp, #24]
   16908:	ldr	w0, [x0, #88]
   1690c:	and	w0, w1, w0
   16910:	str	w0, [sp, #36]
   16914:	ldr	x0, [sp, #24]
   16918:	ldr	x1, [x0, #64]
   1691c:	ldr	w2, [sp, #36]
   16920:	mov	w0, #0x400                 	// #1024
   16924:	movk	w0, #0x1, lsl #16
   16928:	add	w0, w2, w0
   1692c:	mov	w0, w0
   16930:	lsl	x0, x0, #2
   16934:	add	x0, x1, x0
   16938:	ldr	w0, [x0]
   1693c:	str	w0, [sp, #32]
   16940:	ldr	x0, [sp, #24]
   16944:	ldr	x1, [x0, #64]
   16948:	ldr	w0, [sp, #44]
   1694c:	lsl	x0, x0, #2
   16950:	add	x0, x1, x0
   16954:	ldr	w1, [sp, #52]
   16958:	str	w1, [x0]
   1695c:	ldr	x0, [sp, #24]
   16960:	ldr	x1, [x0, #64]
   16964:	ldr	w0, [sp, #40]
   16968:	add	w0, w0, #0x400
   1696c:	mov	w0, w0
   16970:	lsl	x0, x0, #2
   16974:	add	x0, x1, x0
   16978:	ldr	w1, [sp, #52]
   1697c:	str	w1, [x0]
   16980:	ldr	x0, [sp, #24]
   16984:	ldr	x1, [x0, #64]
   16988:	ldr	w2, [sp, #36]
   1698c:	mov	w0, #0x400                 	// #1024
   16990:	movk	w0, #0x1, lsl #16
   16994:	add	w0, w2, w0
   16998:	mov	w0, w0
   1699c:	lsl	x0, x0, #2
   169a0:	add	x0, x1, x0
   169a4:	ldr	w1, [sp, #52]
   169a8:	str	w1, [x0]
   169ac:	ldr	x0, [sp, #24]
   169b0:	ldr	x1, [x0, #72]
   169b4:	ldr	x0, [sp, #24]
   169b8:	ldr	w0, [x0, #80]
   169bc:	mov	w0, w0
   169c0:	lsl	x0, x0, #2
   169c4:	add	x0, x1, x0
   169c8:	ldr	w1, [sp, #32]
   169cc:	str	w1, [x0]
   169d0:	ldr	x0, [sp, #24]
   169d4:	bl	15c48 <lzma_mf_is_supported@@XZ_5.0+0x3c0>
   169d8:	ldr	w0, [sp, #20]
   169dc:	sub	w0, w0, #0x1
   169e0:	str	w0, [sp, #20]
   169e4:	ldr	w0, [sp, #20]
   169e8:	cmp	w0, #0x0
   169ec:	b.ne	16828 <lzma_mf_is_supported@@XZ_5.0+0xfa0>  // b.any
   169f0:	nop
   169f4:	nop
   169f8:	ldp	x29, x30, [sp], #64
   169fc:	ret
   16a00:	sub	sp, sp, #0x80
   16a04:	str	w0, [sp, #44]
   16a08:	str	w1, [sp, #40]
   16a0c:	str	x2, [sp, #32]
   16a10:	str	w3, [sp, #28]
   16a14:	str	w4, [sp, #24]
   16a18:	str	x5, [sp, #16]
   16a1c:	str	w6, [sp, #12]
   16a20:	str	w7, [sp, #8]
   16a24:	ldr	w0, [sp, #12]
   16a28:	lsl	w0, w0, #1
   16a2c:	mov	w0, w0
   16a30:	add	x0, x0, #0x1
   16a34:	lsl	x0, x0, #2
   16a38:	ldr	x1, [sp, #16]
   16a3c:	add	x0, x1, x0
   16a40:	str	x0, [sp, #120]
   16a44:	ldr	w0, [sp, #12]
   16a48:	lsl	w0, w0, #1
   16a4c:	mov	w0, w0
   16a50:	lsl	x0, x0, #2
   16a54:	ldr	x1, [sp, #16]
   16a58:	add	x0, x1, x0
   16a5c:	str	x0, [sp, #112]
   16a60:	str	wzr, [sp, #108]
   16a64:	str	wzr, [sp, #104]
   16a68:	ldr	w1, [sp, #40]
   16a6c:	ldr	w0, [sp, #28]
   16a70:	sub	w0, w1, w0
   16a74:	str	w0, [sp, #96]
   16a78:	ldr	w0, [sp, #24]
   16a7c:	sub	w1, w0, #0x1
   16a80:	str	w1, [sp, #24]
   16a84:	cmp	w0, #0x0
   16a88:	b.eq	16a9c <lzma_mf_is_supported@@XZ_5.0+0x1214>  // b.none
   16a8c:	ldr	w1, [sp, #96]
   16a90:	ldr	w0, [sp, #8]
   16a94:	cmp	w1, w0
   16a98:	b.cc	16ab4 <lzma_mf_is_supported@@XZ_5.0+0x122c>  // b.lo, b.ul, b.last
   16a9c:	ldr	x0, [sp, #120]
   16aa0:	str	wzr, [x0]
   16aa4:	ldr	x0, [sp, #112]
   16aa8:	str	wzr, [x0]
   16aac:	ldr	x0, [sp, #128]
   16ab0:	b	16cbc <lzma_mf_is_supported@@XZ_5.0+0x1434>
   16ab4:	ldr	w1, [sp, #12]
   16ab8:	ldr	w0, [sp, #96]
   16abc:	sub	w1, w1, w0
   16ac0:	ldr	w2, [sp, #96]
   16ac4:	ldr	w0, [sp, #12]
   16ac8:	cmp	w2, w0
   16acc:	b.ls	16ad8 <lzma_mf_is_supported@@XZ_5.0+0x1250>  // b.plast
   16ad0:	ldr	w0, [sp, #8]
   16ad4:	b	16adc <lzma_mf_is_supported@@XZ_5.0+0x1254>
   16ad8:	mov	w0, #0x0                   	// #0
   16adc:	add	w0, w0, w1
   16ae0:	lsl	w0, w0, #1
   16ae4:	mov	w0, w0
   16ae8:	lsl	x0, x0, #2
   16aec:	ldr	x1, [sp, #16]
   16af0:	add	x0, x1, x0
   16af4:	str	x0, [sp, #88]
   16af8:	ldr	w0, [sp, #96]
   16afc:	neg	x0, x0
   16b00:	ldr	x1, [sp, #32]
   16b04:	add	x0, x1, x0
   16b08:	str	x0, [sp, #80]
   16b0c:	ldr	w0, [sp, #108]
   16b10:	ldr	w2, [sp, #104]
   16b14:	ldr	w1, [sp, #104]
   16b18:	cmp	w2, w0
   16b1c:	csel	w0, w1, w0, ls  // ls = plast
   16b20:	str	w0, [sp, #100]
   16b24:	ldr	w0, [sp, #100]
   16b28:	ldr	x1, [sp, #80]
   16b2c:	add	x0, x1, x0
   16b30:	ldrb	w1, [x0]
   16b34:	ldr	w0, [sp, #100]
   16b38:	ldr	x2, [sp, #32]
   16b3c:	add	x0, x2, x0
   16b40:	ldrb	w0, [x0]
   16b44:	cmp	w1, w0
   16b48:	b.ne	16c38 <lzma_mf_is_supported@@XZ_5.0+0x13b0>  // b.any
   16b4c:	ldr	w0, [sp, #100]
   16b50:	add	w0, w0, #0x1
   16b54:	ldr	x1, [sp, #80]
   16b58:	str	x1, [sp, #72]
   16b5c:	ldr	x1, [sp, #32]
   16b60:	str	x1, [sp, #64]
   16b64:	str	w0, [sp, #60]
   16b68:	ldr	w0, [sp, #44]
   16b6c:	str	w0, [sp, #56]
   16b70:	b	16b80 <lzma_mf_is_supported@@XZ_5.0+0x12f8>
   16b74:	ldr	w0, [sp, #60]
   16b78:	add	w0, w0, #0x1
   16b7c:	str	w0, [sp, #60]
   16b80:	ldr	w1, [sp, #56]
   16b84:	ldr	w0, [sp, #60]
   16b88:	cmp	w1, w0
   16b8c:	b.ls	16bb8 <lzma_mf_is_supported@@XZ_5.0+0x1330>  // b.plast
   16b90:	ldr	w0, [sp, #60]
   16b94:	ldr	x1, [sp, #72]
   16b98:	add	x0, x1, x0
   16b9c:	ldrb	w1, [x0]
   16ba0:	ldr	w0, [sp, #60]
   16ba4:	ldr	x2, [sp, #64]
   16ba8:	add	x0, x2, x0
   16bac:	ldrb	w0, [x0]
   16bb0:	cmp	w1, w0
   16bb4:	b.eq	16b74 <lzma_mf_is_supported@@XZ_5.0+0x12ec>  // b.none
   16bb8:	ldr	w0, [sp, #60]
   16bbc:	str	w0, [sp, #100]
   16bc0:	ldr	w1, [sp, #136]
   16bc4:	ldr	w0, [sp, #100]
   16bc8:	cmp	w1, w0
   16bcc:	b.cs	16c38 <lzma_mf_is_supported@@XZ_5.0+0x13b0>  // b.hs, b.nlast
   16bd0:	ldr	w0, [sp, #100]
   16bd4:	str	w0, [sp, #136]
   16bd8:	ldr	x0, [sp, #128]
   16bdc:	ldr	w1, [sp, #100]
   16be0:	str	w1, [x0]
   16be4:	ldr	w0, [sp, #96]
   16be8:	sub	w1, w0, #0x1
   16bec:	ldr	x0, [sp, #128]
   16bf0:	str	w1, [x0, #4]
   16bf4:	ldr	x0, [sp, #128]
   16bf8:	add	x0, x0, #0x8
   16bfc:	str	x0, [sp, #128]
   16c00:	ldr	w1, [sp, #100]
   16c04:	ldr	w0, [sp, #44]
   16c08:	cmp	w1, w0
   16c0c:	b.ne	16c38 <lzma_mf_is_supported@@XZ_5.0+0x13b0>  // b.any
   16c10:	ldr	x0, [sp, #88]
   16c14:	ldr	w1, [x0]
   16c18:	ldr	x0, [sp, #112]
   16c1c:	str	w1, [x0]
   16c20:	ldr	x0, [sp, #88]
   16c24:	ldr	w1, [x0, #4]
   16c28:	ldr	x0, [sp, #120]
   16c2c:	str	w1, [x0]
   16c30:	ldr	x0, [sp, #128]
   16c34:	b	16cbc <lzma_mf_is_supported@@XZ_5.0+0x1434>
   16c38:	ldr	w0, [sp, #100]
   16c3c:	ldr	x1, [sp, #80]
   16c40:	add	x0, x1, x0
   16c44:	ldrb	w1, [x0]
   16c48:	ldr	w0, [sp, #100]
   16c4c:	ldr	x2, [sp, #32]
   16c50:	add	x0, x2, x0
   16c54:	ldrb	w0, [x0]
   16c58:	cmp	w1, w0
   16c5c:	b.cs	16c90 <lzma_mf_is_supported@@XZ_5.0+0x1408>  // b.hs, b.nlast
   16c60:	ldr	x0, [sp, #112]
   16c64:	ldr	w1, [sp, #28]
   16c68:	str	w1, [x0]
   16c6c:	ldr	x0, [sp, #88]
   16c70:	add	x0, x0, #0x4
   16c74:	str	x0, [sp, #112]
   16c78:	ldr	x0, [sp, #112]
   16c7c:	ldr	w0, [x0]
   16c80:	str	w0, [sp, #28]
   16c84:	ldr	w0, [sp, #100]
   16c88:	str	w0, [sp, #104]
   16c8c:	b	16a68 <lzma_mf_is_supported@@XZ_5.0+0x11e0>
   16c90:	ldr	x0, [sp, #120]
   16c94:	ldr	w1, [sp, #28]
   16c98:	str	w1, [x0]
   16c9c:	ldr	x0, [sp, #88]
   16ca0:	str	x0, [sp, #120]
   16ca4:	ldr	x0, [sp, #120]
   16ca8:	ldr	w0, [x0]
   16cac:	str	w0, [sp, #28]
   16cb0:	ldr	w0, [sp, #100]
   16cb4:	str	w0, [sp, #108]
   16cb8:	b	16a68 <lzma_mf_is_supported@@XZ_5.0+0x11e0>
   16cbc:	add	sp, sp, #0x80
   16cc0:	ret
   16cc4:	sub	sp, sp, #0x80
   16cc8:	str	w0, [sp, #44]
   16ccc:	str	w1, [sp, #40]
   16cd0:	str	x2, [sp, #32]
   16cd4:	str	w3, [sp, #28]
   16cd8:	str	w4, [sp, #24]
   16cdc:	str	x5, [sp, #16]
   16ce0:	str	w6, [sp, #12]
   16ce4:	str	w7, [sp, #8]
   16ce8:	ldr	w0, [sp, #12]
   16cec:	lsl	w0, w0, #1
   16cf0:	mov	w0, w0
   16cf4:	add	x0, x0, #0x1
   16cf8:	lsl	x0, x0, #2
   16cfc:	ldr	x1, [sp, #16]
   16d00:	add	x0, x1, x0
   16d04:	str	x0, [sp, #120]
   16d08:	ldr	w0, [sp, #12]
   16d0c:	lsl	w0, w0, #1
   16d10:	mov	w0, w0
   16d14:	lsl	x0, x0, #2
   16d18:	ldr	x1, [sp, #16]
   16d1c:	add	x0, x1, x0
   16d20:	str	x0, [sp, #112]
   16d24:	str	wzr, [sp, #108]
   16d28:	str	wzr, [sp, #104]
   16d2c:	ldr	w1, [sp, #40]
   16d30:	ldr	w0, [sp, #28]
   16d34:	sub	w0, w1, w0
   16d38:	str	w0, [sp, #96]
   16d3c:	ldr	w0, [sp, #24]
   16d40:	sub	w1, w0, #0x1
   16d44:	str	w1, [sp, #24]
   16d48:	cmp	w0, #0x0
   16d4c:	b.eq	16d60 <lzma_mf_is_supported@@XZ_5.0+0x14d8>  // b.none
   16d50:	ldr	w1, [sp, #96]
   16d54:	ldr	w0, [sp, #8]
   16d58:	cmp	w1, w0
   16d5c:	b.cc	16d74 <lzma_mf_is_supported@@XZ_5.0+0x14ec>  // b.lo, b.ul, b.last
   16d60:	ldr	x0, [sp, #120]
   16d64:	str	wzr, [x0]
   16d68:	ldr	x0, [sp, #112]
   16d6c:	str	wzr, [x0]
   16d70:	b	16f38 <lzma_mf_is_supported@@XZ_5.0+0x16b0>
   16d74:	ldr	w1, [sp, #12]
   16d78:	ldr	w0, [sp, #96]
   16d7c:	sub	w1, w1, w0
   16d80:	ldr	w2, [sp, #96]
   16d84:	ldr	w0, [sp, #12]
   16d88:	cmp	w2, w0
   16d8c:	b.ls	16d98 <lzma_mf_is_supported@@XZ_5.0+0x1510>  // b.plast
   16d90:	ldr	w0, [sp, #8]
   16d94:	b	16d9c <lzma_mf_is_supported@@XZ_5.0+0x1514>
   16d98:	mov	w0, #0x0                   	// #0
   16d9c:	add	w0, w0, w1
   16da0:	lsl	w0, w0, #1
   16da4:	mov	w0, w0
   16da8:	lsl	x0, x0, #2
   16dac:	ldr	x1, [sp, #16]
   16db0:	add	x0, x1, x0
   16db4:	str	x0, [sp, #88]
   16db8:	ldr	w0, [sp, #96]
   16dbc:	neg	x0, x0
   16dc0:	ldr	x1, [sp, #32]
   16dc4:	add	x0, x1, x0
   16dc8:	str	x0, [sp, #80]
   16dcc:	ldr	w0, [sp, #108]
   16dd0:	ldr	w2, [sp, #104]
   16dd4:	ldr	w1, [sp, #104]
   16dd8:	cmp	w2, w0
   16ddc:	csel	w0, w1, w0, ls  // ls = plast
   16de0:	str	w0, [sp, #100]
   16de4:	ldr	w0, [sp, #100]
   16de8:	ldr	x1, [sp, #80]
   16dec:	add	x0, x1, x0
   16df0:	ldrb	w1, [x0]
   16df4:	ldr	w0, [sp, #100]
   16df8:	ldr	x2, [sp, #32]
   16dfc:	add	x0, x2, x0
   16e00:	ldrb	w0, [x0]
   16e04:	cmp	w1, w0
   16e08:	b.ne	16eb4 <lzma_mf_is_supported@@XZ_5.0+0x162c>  // b.any
   16e0c:	ldr	w0, [sp, #100]
   16e10:	add	w0, w0, #0x1
   16e14:	ldr	x1, [sp, #80]
   16e18:	str	x1, [sp, #72]
   16e1c:	ldr	x1, [sp, #32]
   16e20:	str	x1, [sp, #64]
   16e24:	str	w0, [sp, #60]
   16e28:	ldr	w0, [sp, #44]
   16e2c:	str	w0, [sp, #56]
   16e30:	b	16e40 <lzma_mf_is_supported@@XZ_5.0+0x15b8>
   16e34:	ldr	w0, [sp, #60]
   16e38:	add	w0, w0, #0x1
   16e3c:	str	w0, [sp, #60]
   16e40:	ldr	w1, [sp, #56]
   16e44:	ldr	w0, [sp, #60]
   16e48:	cmp	w1, w0
   16e4c:	b.ls	16e78 <lzma_mf_is_supported@@XZ_5.0+0x15f0>  // b.plast
   16e50:	ldr	w0, [sp, #60]
   16e54:	ldr	x1, [sp, #72]
   16e58:	add	x0, x1, x0
   16e5c:	ldrb	w1, [x0]
   16e60:	ldr	w0, [sp, #60]
   16e64:	ldr	x2, [sp, #64]
   16e68:	add	x0, x2, x0
   16e6c:	ldrb	w0, [x0]
   16e70:	cmp	w1, w0
   16e74:	b.eq	16e34 <lzma_mf_is_supported@@XZ_5.0+0x15ac>  // b.none
   16e78:	ldr	w0, [sp, #60]
   16e7c:	str	w0, [sp, #100]
   16e80:	ldr	w1, [sp, #100]
   16e84:	ldr	w0, [sp, #44]
   16e88:	cmp	w1, w0
   16e8c:	b.ne	16eb4 <lzma_mf_is_supported@@XZ_5.0+0x162c>  // b.any
   16e90:	ldr	x0, [sp, #88]
   16e94:	ldr	w1, [x0]
   16e98:	ldr	x0, [sp, #112]
   16e9c:	str	w1, [x0]
   16ea0:	ldr	x0, [sp, #88]
   16ea4:	ldr	w1, [x0, #4]
   16ea8:	ldr	x0, [sp, #120]
   16eac:	str	w1, [x0]
   16eb0:	b	16f38 <lzma_mf_is_supported@@XZ_5.0+0x16b0>
   16eb4:	ldr	w0, [sp, #100]
   16eb8:	ldr	x1, [sp, #80]
   16ebc:	add	x0, x1, x0
   16ec0:	ldrb	w1, [x0]
   16ec4:	ldr	w0, [sp, #100]
   16ec8:	ldr	x2, [sp, #32]
   16ecc:	add	x0, x2, x0
   16ed0:	ldrb	w0, [x0]
   16ed4:	cmp	w1, w0
   16ed8:	b.cs	16f0c <lzma_mf_is_supported@@XZ_5.0+0x1684>  // b.hs, b.nlast
   16edc:	ldr	x0, [sp, #112]
   16ee0:	ldr	w1, [sp, #28]
   16ee4:	str	w1, [x0]
   16ee8:	ldr	x0, [sp, #88]
   16eec:	add	x0, x0, #0x4
   16ef0:	str	x0, [sp, #112]
   16ef4:	ldr	x0, [sp, #112]
   16ef8:	ldr	w0, [x0]
   16efc:	str	w0, [sp, #28]
   16f00:	ldr	w0, [sp, #100]
   16f04:	str	w0, [sp, #104]
   16f08:	b	16d2c <lzma_mf_is_supported@@XZ_5.0+0x14a4>
   16f0c:	ldr	x0, [sp, #120]
   16f10:	ldr	w1, [sp, #28]
   16f14:	str	w1, [x0]
   16f18:	ldr	x0, [sp, #88]
   16f1c:	str	x0, [sp, #120]
   16f20:	ldr	x0, [sp, #120]
   16f24:	ldr	w0, [x0]
   16f28:	str	w0, [sp, #28]
   16f2c:	ldr	w0, [sp, #100]
   16f30:	str	w0, [sp, #108]
   16f34:	b	16d2c <lzma_mf_is_supported@@XZ_5.0+0x14a4>
   16f38:	add	sp, sp, #0x80
   16f3c:	ret
   16f40:	sub	sp, sp, #0x50
   16f44:	stp	x29, x30, [sp, #16]
   16f48:	add	x29, sp, #0x10
   16f4c:	str	x0, [sp, #40]
   16f50:	str	x1, [sp, #32]
   16f54:	ldr	x0, [sp, #40]
   16f58:	bl	1592c <lzma_mf_is_supported@@XZ_5.0+0xa4>
   16f5c:	str	w0, [sp, #76]
   16f60:	ldr	x0, [sp, #40]
   16f64:	ldr	w0, [x0, #96]
   16f68:	ldr	w1, [sp, #76]
   16f6c:	cmp	w1, w0
   16f70:	b.cc	16f84 <lzma_mf_is_supported@@XZ_5.0+0x16fc>  // b.lo, b.ul, b.last
   16f74:	ldr	x0, [sp, #40]
   16f78:	ldr	w0, [x0, #96]
   16f7c:	str	w0, [sp, #76]
   16f80:	b	16fb0 <lzma_mf_is_supported@@XZ_5.0+0x1728>
   16f84:	ldr	w0, [sp, #76]
   16f88:	cmp	w0, #0x1
   16f8c:	b.ls	16fa0 <lzma_mf_is_supported@@XZ_5.0+0x1718>  // b.plast
   16f90:	ldr	x0, [sp, #40]
   16f94:	ldr	w0, [x0, #104]
   16f98:	cmp	w0, #0x1
   16f9c:	b.ne	16fb0 <lzma_mf_is_supported@@XZ_5.0+0x1728>  // b.any
   16fa0:	ldr	x0, [sp, #40]
   16fa4:	bl	15cdc <lzma_mf_is_supported@@XZ_5.0+0x454>
   16fa8:	mov	w0, #0x0                   	// #0
   16fac:	b	170b4 <lzma_mf_is_supported@@XZ_5.0+0x182c>
   16fb0:	ldr	x0, [sp, #40]
   16fb4:	bl	15904 <lzma_mf_is_supported@@XZ_5.0+0x7c>
   16fb8:	str	x0, [sp, #64]
   16fbc:	ldr	x0, [sp, #40]
   16fc0:	ldr	w1, [x0, #24]
   16fc4:	ldr	x0, [sp, #40]
   16fc8:	ldr	w0, [x0, #20]
   16fcc:	add	w0, w1, w0
   16fd0:	str	w0, [sp, #60]
   16fd4:	str	wzr, [sp, #56]
   16fd8:	ldr	x0, [sp, #64]
   16fdc:	ldrb	w0, [x0]
   16fe0:	mov	w1, w0
   16fe4:	ldr	x0, [sp, #64]
   16fe8:	add	x0, x0, #0x1
   16fec:	ldrb	w0, [x0]
   16ff0:	lsl	w0, w0, #8
   16ff4:	orr	w0, w1, w0
   16ff8:	str	w0, [sp, #52]
   16ffc:	ldr	x0, [sp, #40]
   17000:	ldr	x1, [x0, #64]
   17004:	ldr	w0, [sp, #52]
   17008:	lsl	x0, x0, #2
   1700c:	add	x0, x1, x0
   17010:	ldr	w0, [x0]
   17014:	str	w0, [sp, #48]
   17018:	ldr	x0, [sp, #40]
   1701c:	ldr	x1, [x0, #64]
   17020:	ldr	w0, [sp, #52]
   17024:	lsl	x0, x0, #2
   17028:	add	x0, x1, x0
   1702c:	ldr	w1, [sp, #60]
   17030:	str	w1, [x0]
   17034:	ldr	x0, [sp, #40]
   17038:	ldr	w2, [x0, #92]
   1703c:	ldr	x0, [sp, #40]
   17040:	ldr	x3, [x0, #72]
   17044:	ldr	x0, [sp, #40]
   17048:	ldr	w4, [x0, #80]
   1704c:	ldr	x0, [sp, #40]
   17050:	ldr	w5, [x0, #84]
   17054:	ldr	w0, [sp, #56]
   17058:	lsl	x0, x0, #3
   1705c:	ldr	x1, [sp, #32]
   17060:	add	x0, x1, x0
   17064:	mov	w1, #0x1                   	// #1
   17068:	str	w1, [sp, #8]
   1706c:	str	x0, [sp]
   17070:	mov	w7, w5
   17074:	mov	w6, w4
   17078:	mov	x5, x3
   1707c:	mov	w4, w2
   17080:	ldr	w3, [sp, #48]
   17084:	ldr	x2, [sp, #64]
   17088:	ldr	w1, [sp, #60]
   1708c:	ldr	w0, [sp, #76]
   17090:	bl	16a00 <lzma_mf_is_supported@@XZ_5.0+0x1178>
   17094:	mov	x1, x0
   17098:	ldr	x0, [sp, #32]
   1709c:	sub	x0, x1, x0
   170a0:	asr	x0, x0, #3
   170a4:	str	w0, [sp, #56]
   170a8:	ldr	x0, [sp, #40]
   170ac:	bl	15c48 <lzma_mf_is_supported@@XZ_5.0+0x3c0>
   170b0:	ldr	w0, [sp, #56]
   170b4:	ldp	x29, x30, [sp, #16]
   170b8:	add	sp, sp, #0x50
   170bc:	ret
   170c0:	stp	x29, x30, [sp, #-64]!
   170c4:	mov	x29, sp
   170c8:	str	x0, [sp, #24]
   170cc:	str	w1, [sp, #20]
   170d0:	ldr	x0, [sp, #24]
   170d4:	bl	1592c <lzma_mf_is_supported@@XZ_5.0+0xa4>
   170d8:	str	w0, [sp, #60]
   170dc:	ldr	x0, [sp, #24]
   170e0:	ldr	w0, [x0, #96]
   170e4:	ldr	w1, [sp, #60]
   170e8:	cmp	w1, w0
   170ec:	b.cc	17100 <lzma_mf_is_supported@@XZ_5.0+0x1878>  // b.lo, b.ul, b.last
   170f0:	ldr	x0, [sp, #24]
   170f4:	ldr	w0, [x0, #96]
   170f8:	str	w0, [sp, #60]
   170fc:	b	17128 <lzma_mf_is_supported@@XZ_5.0+0x18a0>
   17100:	ldr	w0, [sp, #60]
   17104:	cmp	w0, #0x1
   17108:	b.ls	1711c <lzma_mf_is_supported@@XZ_5.0+0x1894>  // b.plast
   1710c:	ldr	x0, [sp, #24]
   17110:	ldr	w0, [x0, #104]
   17114:	cmp	w0, #0x1
   17118:	b.ne	17128 <lzma_mf_is_supported@@XZ_5.0+0x18a0>  // b.any
   1711c:	ldr	x0, [sp, #24]
   17120:	bl	15cdc <lzma_mf_is_supported@@XZ_5.0+0x454>
   17124:	b	171f4 <lzma_mf_is_supported@@XZ_5.0+0x196c>
   17128:	ldr	x0, [sp, #24]
   1712c:	bl	15904 <lzma_mf_is_supported@@XZ_5.0+0x7c>
   17130:	str	x0, [sp, #48]
   17134:	ldr	x0, [sp, #24]
   17138:	ldr	w1, [x0, #24]
   1713c:	ldr	x0, [sp, #24]
   17140:	ldr	w0, [x0, #20]
   17144:	add	w0, w1, w0
   17148:	str	w0, [sp, #44]
   1714c:	ldr	x0, [sp, #48]
   17150:	ldrb	w0, [x0]
   17154:	mov	w1, w0
   17158:	ldr	x0, [sp, #48]
   1715c:	add	x0, x0, #0x1
   17160:	ldrb	w0, [x0]
   17164:	lsl	w0, w0, #8
   17168:	orr	w0, w1, w0
   1716c:	str	w0, [sp, #40]
   17170:	ldr	x0, [sp, #24]
   17174:	ldr	x1, [x0, #64]
   17178:	ldr	w0, [sp, #40]
   1717c:	lsl	x0, x0, #2
   17180:	add	x0, x1, x0
   17184:	ldr	w0, [x0]
   17188:	str	w0, [sp, #36]
   1718c:	ldr	x0, [sp, #24]
   17190:	ldr	x1, [x0, #64]
   17194:	ldr	w0, [sp, #40]
   17198:	lsl	x0, x0, #2
   1719c:	add	x0, x1, x0
   171a0:	ldr	w1, [sp, #44]
   171a4:	str	w1, [x0]
   171a8:	ldr	x0, [sp, #24]
   171ac:	ldr	w1, [x0, #92]
   171b0:	ldr	x0, [sp, #24]
   171b4:	ldr	x2, [x0, #72]
   171b8:	ldr	x0, [sp, #24]
   171bc:	ldr	w3, [x0, #80]
   171c0:	ldr	x0, [sp, #24]
   171c4:	ldr	w0, [x0, #84]
   171c8:	mov	w7, w0
   171cc:	mov	w6, w3
   171d0:	mov	x5, x2
   171d4:	mov	w4, w1
   171d8:	ldr	w3, [sp, #36]
   171dc:	ldr	x2, [sp, #48]
   171e0:	ldr	w1, [sp, #44]
   171e4:	ldr	w0, [sp, #60]
   171e8:	bl	16cc4 <lzma_mf_is_supported@@XZ_5.0+0x143c>
   171ec:	ldr	x0, [sp, #24]
   171f0:	bl	15c48 <lzma_mf_is_supported@@XZ_5.0+0x3c0>
   171f4:	ldr	w0, [sp, #20]
   171f8:	sub	w0, w0, #0x1
   171fc:	str	w0, [sp, #20]
   17200:	ldr	w0, [sp, #20]
   17204:	cmp	w0, #0x0
   17208:	b.ne	170d0 <lzma_mf_is_supported@@XZ_5.0+0x1848>  // b.any
   1720c:	nop
   17210:	nop
   17214:	ldp	x29, x30, [sp], #64
   17218:	ret
   1721c:	sub	sp, sp, #0x80
   17220:	stp	x29, x30, [sp, #16]
   17224:	add	x29, sp, #0x10
   17228:	str	x0, [sp, #40]
   1722c:	str	x1, [sp, #32]
   17230:	ldr	x0, [sp, #40]
   17234:	bl	1592c <lzma_mf_is_supported@@XZ_5.0+0xa4>
   17238:	str	w0, [sp, #124]
   1723c:	ldr	x0, [sp, #40]
   17240:	ldr	w0, [x0, #96]
   17244:	ldr	w1, [sp, #124]
   17248:	cmp	w1, w0
   1724c:	b.cc	17260 <lzma_mf_is_supported@@XZ_5.0+0x19d8>  // b.lo, b.ul, b.last
   17250:	ldr	x0, [sp, #40]
   17254:	ldr	w0, [x0, #96]
   17258:	str	w0, [sp, #124]
   1725c:	b	1728c <lzma_mf_is_supported@@XZ_5.0+0x1a04>
   17260:	ldr	w0, [sp, #124]
   17264:	cmp	w0, #0x2
   17268:	b.ls	1727c <lzma_mf_is_supported@@XZ_5.0+0x19f4>  // b.plast
   1726c:	ldr	x0, [sp, #40]
   17270:	ldr	w0, [x0, #104]
   17274:	cmp	w0, #0x1
   17278:	b.ne	1728c <lzma_mf_is_supported@@XZ_5.0+0x1a04>  // b.any
   1727c:	ldr	x0, [sp, #40]
   17280:	bl	15cdc <lzma_mf_is_supported@@XZ_5.0+0x454>
   17284:	mov	w0, #0x0                   	// #0
   17288:	b	17564 <lzma_mf_is_supported@@XZ_5.0+0x1cdc>
   1728c:	ldr	x0, [sp, #40]
   17290:	bl	15904 <lzma_mf_is_supported@@XZ_5.0+0x7c>
   17294:	str	x0, [sp, #104]
   17298:	ldr	x0, [sp, #40]
   1729c:	ldr	w1, [x0, #24]
   172a0:	ldr	x0, [sp, #40]
   172a4:	ldr	w0, [x0, #20]
   172a8:	add	w0, w1, w0
   172ac:	str	w0, [sp, #100]
   172b0:	str	wzr, [sp, #120]
   172b4:	ldr	x0, [sp, #104]
   172b8:	ldrb	w0, [x0]
   172bc:	mov	w1, w0
   172c0:	adrp	x0, 46000 <lzma_mode_is_supported@@XZ_5.0+0x2b368>
   172c4:	ldr	x0, [x0, #3952]
   172c8:	sxtw	x1, w1
   172cc:	ldr	w0, [x0, x1, lsl #2]
   172d0:	ldr	x1, [sp, #104]
   172d4:	add	x1, x1, #0x1
   172d8:	ldrb	w1, [x1]
   172dc:	eor	w0, w0, w1
   172e0:	str	w0, [sp, #96]
   172e4:	ldr	w0, [sp, #96]
   172e8:	and	w0, w0, #0x3ff
   172ec:	str	w0, [sp, #92]
   172f0:	ldr	x0, [sp, #104]
   172f4:	add	x0, x0, #0x2
   172f8:	ldrb	w0, [x0]
   172fc:	lsl	w1, w0, #8
   17300:	ldr	w0, [sp, #96]
   17304:	eor	w1, w1, w0
   17308:	ldr	x0, [sp, #40]
   1730c:	ldr	w0, [x0, #88]
   17310:	and	w0, w1, w0
   17314:	str	w0, [sp, #88]
   17318:	ldr	x0, [sp, #40]
   1731c:	ldr	x1, [x0, #64]
   17320:	ldr	w0, [sp, #92]
   17324:	lsl	x0, x0, #2
   17328:	add	x0, x1, x0
   1732c:	ldr	w0, [x0]
   17330:	ldr	w1, [sp, #100]
   17334:	sub	w0, w1, w0
   17338:	str	w0, [sp, #84]
   1733c:	ldr	x0, [sp, #40]
   17340:	ldr	x1, [x0, #64]
   17344:	ldr	w0, [sp, #88]
   17348:	add	w0, w0, #0x400
   1734c:	mov	w0, w0
   17350:	lsl	x0, x0, #2
   17354:	add	x0, x1, x0
   17358:	ldr	w0, [x0]
   1735c:	str	w0, [sp, #80]
   17360:	ldr	x0, [sp, #40]
   17364:	ldr	x1, [x0, #64]
   17368:	ldr	w0, [sp, #92]
   1736c:	lsl	x0, x0, #2
   17370:	add	x0, x1, x0
   17374:	ldr	w1, [sp, #100]
   17378:	str	w1, [x0]
   1737c:	ldr	x0, [sp, #40]
   17380:	ldr	x1, [x0, #64]
   17384:	ldr	w0, [sp, #88]
   17388:	add	w0, w0, #0x400
   1738c:	mov	w0, w0
   17390:	lsl	x0, x0, #2
   17394:	add	x0, x1, x0
   17398:	ldr	w1, [sp, #100]
   1739c:	str	w1, [x0]
   173a0:	mov	w0, #0x2                   	// #2
   173a4:	str	w0, [sp, #116]
   173a8:	ldr	x0, [sp, #40]
   173ac:	ldr	w0, [x0, #84]
   173b0:	ldr	w1, [sp, #84]
   173b4:	cmp	w1, w0
   173b8:	b.cs	174e4 <lzma_mf_is_supported@@XZ_5.0+0x1c5c>  // b.hs, b.nlast
   173bc:	ldr	w0, [sp, #84]
   173c0:	neg	x0, x0
   173c4:	ldr	x1, [sp, #104]
   173c8:	add	x0, x1, x0
   173cc:	ldrb	w1, [x0]
   173d0:	ldr	x0, [sp, #104]
   173d4:	ldrb	w0, [x0]
   173d8:	cmp	w1, w0
   173dc:	b.ne	174e4 <lzma_mf_is_supported@@XZ_5.0+0x1c5c>  // b.any
   173e0:	ldr	w0, [sp, #84]
   173e4:	neg	x0, x0
   173e8:	ldr	x1, [sp, #104]
   173ec:	add	x0, x1, x0
   173f0:	ldr	x1, [sp, #104]
   173f4:	str	x1, [sp, #72]
   173f8:	str	x0, [sp, #64]
   173fc:	ldr	w0, [sp, #116]
   17400:	str	w0, [sp, #60]
   17404:	ldr	w0, [sp, #124]
   17408:	str	w0, [sp, #56]
   1740c:	b	1741c <lzma_mf_is_supported@@XZ_5.0+0x1b94>
   17410:	ldr	w0, [sp, #60]
   17414:	add	w0, w0, #0x1
   17418:	str	w0, [sp, #60]
   1741c:	ldr	w1, [sp, #56]
   17420:	ldr	w0, [sp, #60]
   17424:	cmp	w1, w0
   17428:	b.ls	17454 <lzma_mf_is_supported@@XZ_5.0+0x1bcc>  // b.plast
   1742c:	ldr	w0, [sp, #60]
   17430:	ldr	x1, [sp, #72]
   17434:	add	x0, x1, x0
   17438:	ldrb	w1, [x0]
   1743c:	ldr	w0, [sp, #60]
   17440:	ldr	x2, [sp, #64]
   17444:	add	x0, x2, x0
   17448:	ldrb	w0, [x0]
   1744c:	cmp	w1, w0
   17450:	b.eq	17410 <lzma_mf_is_supported@@XZ_5.0+0x1b88>  // b.none
   17454:	ldr	w0, [sp, #60]
   17458:	str	w0, [sp, #116]
   1745c:	ldr	x0, [sp, #32]
   17460:	ldr	w1, [sp, #116]
   17464:	str	w1, [x0]
   17468:	ldr	w0, [sp, #84]
   1746c:	sub	w1, w0, #0x1
   17470:	ldr	x0, [sp, #32]
   17474:	str	w1, [x0, #4]
   17478:	mov	w0, #0x1                   	// #1
   1747c:	str	w0, [sp, #120]
   17480:	ldr	w1, [sp, #116]
   17484:	ldr	w0, [sp, #124]
   17488:	cmp	w1, w0
   1748c:	b.ne	174e4 <lzma_mf_is_supported@@XZ_5.0+0x1c5c>  // b.any
   17490:	ldr	x0, [sp, #40]
   17494:	ldr	w1, [x0, #92]
   17498:	ldr	x0, [sp, #40]
   1749c:	ldr	x2, [x0, #72]
   174a0:	ldr	x0, [sp, #40]
   174a4:	ldr	w3, [x0, #80]
   174a8:	ldr	x0, [sp, #40]
   174ac:	ldr	w0, [x0, #84]
   174b0:	mov	w7, w0
   174b4:	mov	w6, w3
   174b8:	mov	x5, x2
   174bc:	mov	w4, w1
   174c0:	ldr	w3, [sp, #80]
   174c4:	ldr	x2, [sp, #104]
   174c8:	ldr	w1, [sp, #100]
   174cc:	ldr	w0, [sp, #124]
   174d0:	bl	16cc4 <lzma_mf_is_supported@@XZ_5.0+0x143c>
   174d4:	ldr	x0, [sp, #40]
   174d8:	bl	15c48 <lzma_mf_is_supported@@XZ_5.0+0x3c0>
   174dc:	mov	w0, #0x1                   	// #1
   174e0:	b	17564 <lzma_mf_is_supported@@XZ_5.0+0x1cdc>
   174e4:	ldr	x0, [sp, #40]
   174e8:	ldr	w2, [x0, #92]
   174ec:	ldr	x0, [sp, #40]
   174f0:	ldr	x3, [x0, #72]
   174f4:	ldr	x0, [sp, #40]
   174f8:	ldr	w4, [x0, #80]
   174fc:	ldr	x0, [sp, #40]
   17500:	ldr	w5, [x0, #84]
   17504:	ldr	w0, [sp, #120]
   17508:	lsl	x0, x0, #3
   1750c:	ldr	x1, [sp, #32]
   17510:	add	x0, x1, x0
   17514:	ldr	w1, [sp, #116]
   17518:	str	w1, [sp, #8]
   1751c:	str	x0, [sp]
   17520:	mov	w7, w5
   17524:	mov	w6, w4
   17528:	mov	x5, x3
   1752c:	mov	w4, w2
   17530:	ldr	w3, [sp, #80]
   17534:	ldr	x2, [sp, #104]
   17538:	ldr	w1, [sp, #100]
   1753c:	ldr	w0, [sp, #124]
   17540:	bl	16a00 <lzma_mf_is_supported@@XZ_5.0+0x1178>
   17544:	mov	x1, x0
   17548:	ldr	x0, [sp, #32]
   1754c:	sub	x0, x1, x0
   17550:	asr	x0, x0, #3
   17554:	str	w0, [sp, #120]
   17558:	ldr	x0, [sp, #40]
   1755c:	bl	15c48 <lzma_mf_is_supported@@XZ_5.0+0x3c0>
   17560:	ldr	w0, [sp, #120]
   17564:	ldp	x29, x30, [sp, #16]
   17568:	add	sp, sp, #0x80
   1756c:	ret
   17570:	stp	x29, x30, [sp, #-80]!
   17574:	mov	x29, sp
   17578:	str	x0, [sp, #24]
   1757c:	str	w1, [sp, #20]
   17580:	ldr	x0, [sp, #24]
   17584:	bl	1592c <lzma_mf_is_supported@@XZ_5.0+0xa4>
   17588:	str	w0, [sp, #76]
   1758c:	ldr	x0, [sp, #24]
   17590:	ldr	w0, [x0, #96]
   17594:	ldr	w1, [sp, #76]
   17598:	cmp	w1, w0
   1759c:	b.cc	175b0 <lzma_mf_is_supported@@XZ_5.0+0x1d28>  // b.lo, b.ul, b.last
   175a0:	ldr	x0, [sp, #24]
   175a4:	ldr	w0, [x0, #96]
   175a8:	str	w0, [sp, #76]
   175ac:	b	175d8 <lzma_mf_is_supported@@XZ_5.0+0x1d50>
   175b0:	ldr	w0, [sp, #76]
   175b4:	cmp	w0, #0x2
   175b8:	b.ls	175cc <lzma_mf_is_supported@@XZ_5.0+0x1d44>  // b.plast
   175bc:	ldr	x0, [sp, #24]
   175c0:	ldr	w0, [x0, #104]
   175c4:	cmp	w0, #0x1
   175c8:	b.ne	175d8 <lzma_mf_is_supported@@XZ_5.0+0x1d50>  // b.any
   175cc:	ldr	x0, [sp, #24]
   175d0:	bl	15cdc <lzma_mf_is_supported@@XZ_5.0+0x454>
   175d4:	b	17710 <lzma_mf_is_supported@@XZ_5.0+0x1e88>
   175d8:	ldr	x0, [sp, #24]
   175dc:	bl	15904 <lzma_mf_is_supported@@XZ_5.0+0x7c>
   175e0:	str	x0, [sp, #64]
   175e4:	ldr	x0, [sp, #24]
   175e8:	ldr	w1, [x0, #24]
   175ec:	ldr	x0, [sp, #24]
   175f0:	ldr	w0, [x0, #20]
   175f4:	add	w0, w1, w0
   175f8:	str	w0, [sp, #60]
   175fc:	ldr	x0, [sp, #64]
   17600:	ldrb	w0, [x0]
   17604:	mov	w1, w0
   17608:	adrp	x0, 46000 <lzma_mode_is_supported@@XZ_5.0+0x2b368>
   1760c:	ldr	x0, [x0, #3952]
   17610:	sxtw	x1, w1
   17614:	ldr	w0, [x0, x1, lsl #2]
   17618:	ldr	x1, [sp, #64]
   1761c:	add	x1, x1, #0x1
   17620:	ldrb	w1, [x1]
   17624:	eor	w0, w0, w1
   17628:	str	w0, [sp, #56]
   1762c:	ldr	w0, [sp, #56]
   17630:	and	w0, w0, #0x3ff
   17634:	str	w0, [sp, #52]
   17638:	ldr	x0, [sp, #64]
   1763c:	add	x0, x0, #0x2
   17640:	ldrb	w0, [x0]
   17644:	lsl	w1, w0, #8
   17648:	ldr	w0, [sp, #56]
   1764c:	eor	w1, w1, w0
   17650:	ldr	x0, [sp, #24]
   17654:	ldr	w0, [x0, #88]
   17658:	and	w0, w1, w0
   1765c:	str	w0, [sp, #48]
   17660:	ldr	x0, [sp, #24]
   17664:	ldr	x1, [x0, #64]
   17668:	ldr	w0, [sp, #48]
   1766c:	add	w0, w0, #0x400
   17670:	mov	w0, w0
   17674:	lsl	x0, x0, #2
   17678:	add	x0, x1, x0
   1767c:	ldr	w0, [x0]
   17680:	str	w0, [sp, #44]
   17684:	ldr	x0, [sp, #24]
   17688:	ldr	x1, [x0, #64]
   1768c:	ldr	w0, [sp, #52]
   17690:	lsl	x0, x0, #2
   17694:	add	x0, x1, x0
   17698:	ldr	w1, [sp, #60]
   1769c:	str	w1, [x0]
   176a0:	ldr	x0, [sp, #24]
   176a4:	ldr	x1, [x0, #64]
   176a8:	ldr	w0, [sp, #48]
   176ac:	add	w0, w0, #0x400
   176b0:	mov	w0, w0
   176b4:	lsl	x0, x0, #2
   176b8:	add	x0, x1, x0
   176bc:	ldr	w1, [sp, #60]
   176c0:	str	w1, [x0]
   176c4:	ldr	x0, [sp, #24]
   176c8:	ldr	w1, [x0, #92]
   176cc:	ldr	x0, [sp, #24]
   176d0:	ldr	x2, [x0, #72]
   176d4:	ldr	x0, [sp, #24]
   176d8:	ldr	w3, [x0, #80]
   176dc:	ldr	x0, [sp, #24]
   176e0:	ldr	w0, [x0, #84]
   176e4:	mov	w7, w0
   176e8:	mov	w6, w3
   176ec:	mov	x5, x2
   176f0:	mov	w4, w1
   176f4:	ldr	w3, [sp, #44]
   176f8:	ldr	x2, [sp, #64]
   176fc:	ldr	w1, [sp, #60]
   17700:	ldr	w0, [sp, #76]
   17704:	bl	16cc4 <lzma_mf_is_supported@@XZ_5.0+0x143c>
   17708:	ldr	x0, [sp, #24]
   1770c:	bl	15c48 <lzma_mf_is_supported@@XZ_5.0+0x3c0>
   17710:	ldr	w0, [sp, #20]
   17714:	sub	w0, w0, #0x1
   17718:	str	w0, [sp, #20]
   1771c:	ldr	w0, [sp, #20]
   17720:	cmp	w0, #0x0
   17724:	b.ne	17580 <lzma_mf_is_supported@@XZ_5.0+0x1cf8>  // b.any
   17728:	nop
   1772c:	nop
   17730:	ldp	x29, x30, [sp], #80
   17734:	ret
   17738:	sub	sp, sp, #0x80
   1773c:	stp	x29, x30, [sp, #16]
   17740:	add	x29, sp, #0x10
   17744:	str	x0, [sp, #40]
   17748:	str	x1, [sp, #32]
   1774c:	ldr	x0, [sp, #40]
   17750:	bl	1592c <lzma_mf_is_supported@@XZ_5.0+0xa4>
   17754:	str	w0, [sp, #124]
   17758:	ldr	x0, [sp, #40]
   1775c:	ldr	w0, [x0, #96]
   17760:	ldr	w1, [sp, #124]
   17764:	cmp	w1, w0
   17768:	b.cc	1777c <lzma_mf_is_supported@@XZ_5.0+0x1ef4>  // b.lo, b.ul, b.last
   1776c:	ldr	x0, [sp, #40]
   17770:	ldr	w0, [x0, #96]
   17774:	str	w0, [sp, #124]
   17778:	b	177a8 <lzma_mf_is_supported@@XZ_5.0+0x1f20>
   1777c:	ldr	w0, [sp, #124]
   17780:	cmp	w0, #0x3
   17784:	b.ls	17798 <lzma_mf_is_supported@@XZ_5.0+0x1f10>  // b.plast
   17788:	ldr	x0, [sp, #40]
   1778c:	ldr	w0, [x0, #104]
   17790:	cmp	w0, #0x1
   17794:	b.ne	177a8 <lzma_mf_is_supported@@XZ_5.0+0x1f20>  // b.any
   17798:	ldr	x0, [sp, #40]
   1779c:	bl	15cdc <lzma_mf_is_supported@@XZ_5.0+0x454>
   177a0:	mov	w0, #0x0                   	// #0
   177a4:	b	17bf0 <lzma_mf_is_supported@@XZ_5.0+0x2368>
   177a8:	ldr	x0, [sp, #40]
   177ac:	bl	15904 <lzma_mf_is_supported@@XZ_5.0+0x7c>
   177b0:	str	x0, [sp, #104]
   177b4:	ldr	x0, [sp, #40]
   177b8:	ldr	w1, [x0, #24]
   177bc:	ldr	x0, [sp, #40]
   177c0:	ldr	w0, [x0, #20]
   177c4:	add	w0, w1, w0
   177c8:	str	w0, [sp, #100]
   177cc:	str	wzr, [sp, #120]
   177d0:	ldr	x0, [sp, #104]
   177d4:	ldrb	w0, [x0]
   177d8:	mov	w1, w0
   177dc:	adrp	x0, 46000 <lzma_mode_is_supported@@XZ_5.0+0x2b368>
   177e0:	ldr	x0, [x0, #3952]
   177e4:	sxtw	x1, w1
   177e8:	ldr	w0, [x0, x1, lsl #2]
   177ec:	ldr	x1, [sp, #104]
   177f0:	add	x1, x1, #0x1
   177f4:	ldrb	w1, [x1]
   177f8:	eor	w0, w0, w1
   177fc:	str	w0, [sp, #96]
   17800:	ldr	w0, [sp, #96]
   17804:	and	w0, w0, #0x3ff
   17808:	str	w0, [sp, #92]
   1780c:	ldr	x0, [sp, #104]
   17810:	add	x0, x0, #0x2
   17814:	ldrb	w0, [x0]
   17818:	lsl	w1, w0, #8
   1781c:	ldr	w0, [sp, #96]
   17820:	eor	w0, w1, w0
   17824:	and	w0, w0, #0xffff
   17828:	str	w0, [sp, #88]
   1782c:	ldr	x0, [sp, #104]
   17830:	add	x0, x0, #0x2
   17834:	ldrb	w0, [x0]
   17838:	lsl	w1, w0, #8
   1783c:	ldr	w0, [sp, #96]
   17840:	eor	w1, w1, w0
   17844:	ldr	x0, [sp, #104]
   17848:	add	x0, x0, #0x3
   1784c:	ldrb	w0, [x0]
   17850:	mov	w2, w0
   17854:	adrp	x0, 46000 <lzma_mode_is_supported@@XZ_5.0+0x2b368>
   17858:	ldr	x0, [x0, #3952]
   1785c:	sxtw	x2, w2
   17860:	ldr	w0, [x0, x2, lsl #2]
   17864:	lsl	w0, w0, #5
   17868:	eor	w1, w1, w0
   1786c:	ldr	x0, [sp, #40]
   17870:	ldr	w0, [x0, #88]
   17874:	and	w0, w1, w0
   17878:	str	w0, [sp, #84]
   1787c:	ldr	x0, [sp, #40]
   17880:	ldr	x1, [x0, #64]
   17884:	ldr	w0, [sp, #92]
   17888:	lsl	x0, x0, #2
   1788c:	add	x0, x1, x0
   17890:	ldr	w0, [x0]
   17894:	ldr	w1, [sp, #100]
   17898:	sub	w0, w1, w0
   1789c:	str	w0, [sp, #116]
   178a0:	ldr	x0, [sp, #40]
   178a4:	ldr	x1, [x0, #64]
   178a8:	ldr	w0, [sp, #88]
   178ac:	add	w0, w0, #0x400
   178b0:	mov	w0, w0
   178b4:	lsl	x0, x0, #2
   178b8:	add	x0, x1, x0
   178bc:	ldr	w0, [x0]
   178c0:	ldr	w1, [sp, #100]
   178c4:	sub	w0, w1, w0
   178c8:	str	w0, [sp, #80]
   178cc:	ldr	x0, [sp, #40]
   178d0:	ldr	x1, [x0, #64]
   178d4:	ldr	w2, [sp, #84]
   178d8:	mov	w0, #0x400                 	// #1024
   178dc:	movk	w0, #0x1, lsl #16
   178e0:	add	w0, w2, w0
   178e4:	mov	w0, w0
   178e8:	lsl	x0, x0, #2
   178ec:	add	x0, x1, x0
   178f0:	ldr	w0, [x0]
   178f4:	str	w0, [sp, #76]
   178f8:	ldr	x0, [sp, #40]
   178fc:	ldr	x1, [x0, #64]
   17900:	ldr	w0, [sp, #92]
   17904:	lsl	x0, x0, #2
   17908:	add	x0, x1, x0
   1790c:	ldr	w1, [sp, #100]
   17910:	str	w1, [x0]
   17914:	ldr	x0, [sp, #40]
   17918:	ldr	x1, [x0, #64]
   1791c:	ldr	w0, [sp, #88]
   17920:	add	w0, w0, #0x400
   17924:	mov	w0, w0
   17928:	lsl	x0, x0, #2
   1792c:	add	x0, x1, x0
   17930:	ldr	w1, [sp, #100]
   17934:	str	w1, [x0]
   17938:	ldr	x0, [sp, #40]
   1793c:	ldr	x1, [x0, #64]
   17940:	ldr	w2, [sp, #84]
   17944:	mov	w0, #0x400                 	// #1024
   17948:	movk	w0, #0x1, lsl #16
   1794c:	add	w0, w2, w0
   17950:	mov	w0, w0
   17954:	lsl	x0, x0, #2
   17958:	add	x0, x1, x0
   1795c:	ldr	w1, [sp, #100]
   17960:	str	w1, [x0]
   17964:	mov	w0, #0x1                   	// #1
   17968:	str	w0, [sp, #112]
   1796c:	ldr	x0, [sp, #40]
   17970:	ldr	w0, [x0, #84]
   17974:	ldr	w1, [sp, #116]
   17978:	cmp	w1, w0
   1797c:	b.cs	179d0 <lzma_mf_is_supported@@XZ_5.0+0x2148>  // b.hs, b.nlast
   17980:	ldr	w0, [sp, #116]
   17984:	neg	x0, x0
   17988:	ldr	x1, [sp, #104]
   1798c:	add	x0, x1, x0
   17990:	ldrb	w1, [x0]
   17994:	ldr	x0, [sp, #104]
   17998:	ldrb	w0, [x0]
   1799c:	cmp	w1, w0
   179a0:	b.ne	179d0 <lzma_mf_is_supported@@XZ_5.0+0x2148>  // b.any
   179a4:	mov	w0, #0x2                   	// #2
   179a8:	str	w0, [sp, #112]
   179ac:	ldr	x0, [sp, #32]
   179b0:	mov	w1, #0x2                   	// #2
   179b4:	str	w1, [x0]
   179b8:	ldr	w0, [sp, #116]
   179bc:	sub	w1, w0, #0x1
   179c0:	ldr	x0, [sp, #32]
   179c4:	str	w1, [x0, #4]
   179c8:	mov	w0, #0x1                   	// #1
   179cc:	str	w0, [sp, #120]
   179d0:	ldr	w1, [sp, #116]
   179d4:	ldr	w0, [sp, #80]
   179d8:	cmp	w1, w0
   179dc:	b.eq	17a50 <lzma_mf_is_supported@@XZ_5.0+0x21c8>  // b.none
   179e0:	ldr	x0, [sp, #40]
   179e4:	ldr	w0, [x0, #84]
   179e8:	ldr	w1, [sp, #80]
   179ec:	cmp	w1, w0
   179f0:	b.cs	17a50 <lzma_mf_is_supported@@XZ_5.0+0x21c8>  // b.hs, b.nlast
   179f4:	ldr	w0, [sp, #80]
   179f8:	neg	x0, x0
   179fc:	ldr	x1, [sp, #104]
   17a00:	add	x0, x1, x0
   17a04:	ldrb	w1, [x0]
   17a08:	ldr	x0, [sp, #104]
   17a0c:	ldrb	w0, [x0]
   17a10:	cmp	w1, w0
   17a14:	b.ne	17a50 <lzma_mf_is_supported@@XZ_5.0+0x21c8>  // b.any
   17a18:	mov	w0, #0x3                   	// #3
   17a1c:	str	w0, [sp, #112]
   17a20:	ldr	w0, [sp, #120]
   17a24:	add	w1, w0, #0x1
   17a28:	str	w1, [sp, #120]
   17a2c:	mov	w0, w0
   17a30:	lsl	x0, x0, #3
   17a34:	ldr	x1, [sp, #32]
   17a38:	add	x0, x1, x0
   17a3c:	ldr	w1, [sp, #80]
   17a40:	sub	w1, w1, #0x1
   17a44:	str	w1, [x0, #4]
   17a48:	ldr	w0, [sp, #80]
   17a4c:	str	w0, [sp, #116]
   17a50:	ldr	w0, [sp, #120]
   17a54:	cmp	w0, #0x0
   17a58:	b.eq	17b5c <lzma_mf_is_supported@@XZ_5.0+0x22d4>  // b.none
   17a5c:	ldr	w0, [sp, #116]
   17a60:	neg	x0, x0
   17a64:	ldr	x1, [sp, #104]
   17a68:	add	x0, x1, x0
   17a6c:	ldr	x1, [sp, #104]
   17a70:	str	x1, [sp, #64]
   17a74:	str	x0, [sp, #56]
   17a78:	ldr	w0, [sp, #112]
   17a7c:	str	w0, [sp, #52]
   17a80:	ldr	w0, [sp, #124]
   17a84:	str	w0, [sp, #48]
   17a88:	b	17a98 <lzma_mf_is_supported@@XZ_5.0+0x2210>
   17a8c:	ldr	w0, [sp, #52]
   17a90:	add	w0, w0, #0x1
   17a94:	str	w0, [sp, #52]
   17a98:	ldr	w1, [sp, #48]
   17a9c:	ldr	w0, [sp, #52]
   17aa0:	cmp	w1, w0
   17aa4:	b.ls	17ad0 <lzma_mf_is_supported@@XZ_5.0+0x2248>  // b.plast
   17aa8:	ldr	w0, [sp, #52]
   17aac:	ldr	x1, [sp, #64]
   17ab0:	add	x0, x1, x0
   17ab4:	ldrb	w1, [x0]
   17ab8:	ldr	w0, [sp, #52]
   17abc:	ldr	x2, [sp, #56]
   17ac0:	add	x0, x2, x0
   17ac4:	ldrb	w0, [x0]
   17ac8:	cmp	w1, w0
   17acc:	b.eq	17a8c <lzma_mf_is_supported@@XZ_5.0+0x2204>  // b.none
   17ad0:	ldr	w0, [sp, #52]
   17ad4:	str	w0, [sp, #112]
   17ad8:	ldr	w0, [sp, #120]
   17adc:	sub	w0, w0, #0x1
   17ae0:	mov	w0, w0
   17ae4:	lsl	x0, x0, #3
   17ae8:	ldr	x1, [sp, #32]
   17aec:	add	x0, x1, x0
   17af0:	ldr	w1, [sp, #112]
   17af4:	str	w1, [x0]
   17af8:	ldr	w1, [sp, #112]
   17afc:	ldr	w0, [sp, #124]
   17b00:	cmp	w1, w0
   17b04:	b.ne	17b5c <lzma_mf_is_supported@@XZ_5.0+0x22d4>  // b.any
   17b08:	ldr	x0, [sp, #40]
   17b0c:	ldr	w1, [x0, #92]
   17b10:	ldr	x0, [sp, #40]
   17b14:	ldr	x2, [x0, #72]
   17b18:	ldr	x0, [sp, #40]
   17b1c:	ldr	w3, [x0, #80]
   17b20:	ldr	x0, [sp, #40]
   17b24:	ldr	w0, [x0, #84]
   17b28:	mov	w7, w0
   17b2c:	mov	w6, w3
   17b30:	mov	x5, x2
   17b34:	mov	w4, w1
   17b38:	ldr	w3, [sp, #76]
   17b3c:	ldr	x2, [sp, #104]
   17b40:	ldr	w1, [sp, #100]
   17b44:	ldr	w0, [sp, #124]
   17b48:	bl	16cc4 <lzma_mf_is_supported@@XZ_5.0+0x143c>
   17b4c:	ldr	x0, [sp, #40]
   17b50:	bl	15c48 <lzma_mf_is_supported@@XZ_5.0+0x3c0>
   17b54:	ldr	w0, [sp, #120]
   17b58:	b	17bf0 <lzma_mf_is_supported@@XZ_5.0+0x2368>
   17b5c:	ldr	w0, [sp, #112]
   17b60:	cmp	w0, #0x2
   17b64:	b.hi	17b70 <lzma_mf_is_supported@@XZ_5.0+0x22e8>  // b.pmore
   17b68:	mov	w0, #0x3                   	// #3
   17b6c:	str	w0, [sp, #112]
   17b70:	ldr	x0, [sp, #40]
   17b74:	ldr	w2, [x0, #92]
   17b78:	ldr	x0, [sp, #40]
   17b7c:	ldr	x3, [x0, #72]
   17b80:	ldr	x0, [sp, #40]
   17b84:	ldr	w4, [x0, #80]
   17b88:	ldr	x0, [sp, #40]
   17b8c:	ldr	w5, [x0, #84]
   17b90:	ldr	w0, [sp, #120]
   17b94:	lsl	x0, x0, #3
   17b98:	ldr	x1, [sp, #32]
   17b9c:	add	x0, x1, x0
   17ba0:	ldr	w1, [sp, #112]
   17ba4:	str	w1, [sp, #8]
   17ba8:	str	x0, [sp]
   17bac:	mov	w7, w5
   17bb0:	mov	w6, w4
   17bb4:	mov	x5, x3
   17bb8:	mov	w4, w2
   17bbc:	ldr	w3, [sp, #76]
   17bc0:	ldr	x2, [sp, #104]
   17bc4:	ldr	w1, [sp, #100]
   17bc8:	ldr	w0, [sp, #124]
   17bcc:	bl	16a00 <lzma_mf_is_supported@@XZ_5.0+0x1178>
   17bd0:	mov	x1, x0
   17bd4:	ldr	x0, [sp, #32]
   17bd8:	sub	x0, x1, x0
   17bdc:	asr	x0, x0, #3
   17be0:	str	w0, [sp, #120]
   17be4:	ldr	x0, [sp, #40]
   17be8:	bl	15c48 <lzma_mf_is_supported@@XZ_5.0+0x3c0>
   17bec:	ldr	w0, [sp, #120]
   17bf0:	ldp	x29, x30, [sp, #16]
   17bf4:	add	sp, sp, #0x80
   17bf8:	ret
   17bfc:	stp	x29, x30, [sp, #-80]!
   17c00:	mov	x29, sp
   17c04:	str	x0, [sp, #24]
   17c08:	str	w1, [sp, #20]
   17c0c:	ldr	x0, [sp, #24]
   17c10:	bl	1592c <lzma_mf_is_supported@@XZ_5.0+0xa4>
   17c14:	str	w0, [sp, #76]
   17c18:	ldr	x0, [sp, #24]
   17c1c:	ldr	w0, [x0, #96]
   17c20:	ldr	w1, [sp, #76]
   17c24:	cmp	w1, w0
   17c28:	b.cc	17c3c <lzma_mf_is_supported@@XZ_5.0+0x23b4>  // b.lo, b.ul, b.last
   17c2c:	ldr	x0, [sp, #24]
   17c30:	ldr	w0, [x0, #96]
   17c34:	str	w0, [sp, #76]
   17c38:	b	17c64 <lzma_mf_is_supported@@XZ_5.0+0x23dc>
   17c3c:	ldr	w0, [sp, #76]
   17c40:	cmp	w0, #0x3
   17c44:	b.ls	17c58 <lzma_mf_is_supported@@XZ_5.0+0x23d0>  // b.plast
   17c48:	ldr	x0, [sp, #24]
   17c4c:	ldr	w0, [x0, #104]
   17c50:	cmp	w0, #0x1
   17c54:	b.ne	17c64 <lzma_mf_is_supported@@XZ_5.0+0x23dc>  // b.any
   17c58:	ldr	x0, [sp, #24]
   17c5c:	bl	15cdc <lzma_mf_is_supported@@XZ_5.0+0x454>
   17c60:	b	17e18 <lzma_mf_is_supported@@XZ_5.0+0x2590>
   17c64:	ldr	x0, [sp, #24]
   17c68:	bl	15904 <lzma_mf_is_supported@@XZ_5.0+0x7c>
   17c6c:	str	x0, [sp, #64]
   17c70:	ldr	x0, [sp, #24]
   17c74:	ldr	w1, [x0, #24]
   17c78:	ldr	x0, [sp, #24]
   17c7c:	ldr	w0, [x0, #20]
   17c80:	add	w0, w1, w0
   17c84:	str	w0, [sp, #60]
   17c88:	ldr	x0, [sp, #64]
   17c8c:	ldrb	w0, [x0]
   17c90:	mov	w1, w0
   17c94:	adrp	x0, 46000 <lzma_mode_is_supported@@XZ_5.0+0x2b368>
   17c98:	ldr	x0, [x0, #3952]
   17c9c:	sxtw	x1, w1
   17ca0:	ldr	w0, [x0, x1, lsl #2]
   17ca4:	ldr	x1, [sp, #64]
   17ca8:	add	x1, x1, #0x1
   17cac:	ldrb	w1, [x1]
   17cb0:	eor	w0, w0, w1
   17cb4:	str	w0, [sp, #56]
   17cb8:	ldr	w0, [sp, #56]
   17cbc:	and	w0, w0, #0x3ff
   17cc0:	str	w0, [sp, #52]
   17cc4:	ldr	x0, [sp, #64]
   17cc8:	add	x0, x0, #0x2
   17ccc:	ldrb	w0, [x0]
   17cd0:	lsl	w1, w0, #8
   17cd4:	ldr	w0, [sp, #56]
   17cd8:	eor	w0, w1, w0
   17cdc:	and	w0, w0, #0xffff
   17ce0:	str	w0, [sp, #48]
   17ce4:	ldr	x0, [sp, #64]
   17ce8:	add	x0, x0, #0x2
   17cec:	ldrb	w0, [x0]
   17cf0:	lsl	w1, w0, #8
   17cf4:	ldr	w0, [sp, #56]
   17cf8:	eor	w1, w1, w0
   17cfc:	ldr	x0, [sp, #64]
   17d00:	add	x0, x0, #0x3
   17d04:	ldrb	w0, [x0]
   17d08:	mov	w2, w0
   17d0c:	adrp	x0, 46000 <lzma_mode_is_supported@@XZ_5.0+0x2b368>
   17d10:	ldr	x0, [x0, #3952]
   17d14:	sxtw	x2, w2
   17d18:	ldr	w0, [x0, x2, lsl #2]
   17d1c:	lsl	w0, w0, #5
   17d20:	eor	w1, w1, w0
   17d24:	ldr	x0, [sp, #24]
   17d28:	ldr	w0, [x0, #88]
   17d2c:	and	w0, w1, w0
   17d30:	str	w0, [sp, #44]
   17d34:	ldr	x0, [sp, #24]
   17d38:	ldr	x1, [x0, #64]
   17d3c:	ldr	w2, [sp, #44]
   17d40:	mov	w0, #0x400                 	// #1024
   17d44:	movk	w0, #0x1, lsl #16
   17d48:	add	w0, w2, w0
   17d4c:	mov	w0, w0
   17d50:	lsl	x0, x0, #2
   17d54:	add	x0, x1, x0
   17d58:	ldr	w0, [x0]
   17d5c:	str	w0, [sp, #40]
   17d60:	ldr	x0, [sp, #24]
   17d64:	ldr	x1, [x0, #64]
   17d68:	ldr	w0, [sp, #52]
   17d6c:	lsl	x0, x0, #2
   17d70:	add	x0, x1, x0
   17d74:	ldr	w1, [sp, #60]
   17d78:	str	w1, [x0]
   17d7c:	ldr	x0, [sp, #24]
   17d80:	ldr	x1, [x0, #64]
   17d84:	ldr	w0, [sp, #48]
   17d88:	add	w0, w0, #0x400
   17d8c:	mov	w0, w0
   17d90:	lsl	x0, x0, #2
   17d94:	add	x0, x1, x0
   17d98:	ldr	w1, [sp, #60]
   17d9c:	str	w1, [x0]
   17da0:	ldr	x0, [sp, #24]
   17da4:	ldr	x1, [x0, #64]
   17da8:	ldr	w2, [sp, #44]
   17dac:	mov	w0, #0x400                 	// #1024
   17db0:	movk	w0, #0x1, lsl #16
   17db4:	add	w0, w2, w0
   17db8:	mov	w0, w0
   17dbc:	lsl	x0, x0, #2
   17dc0:	add	x0, x1, x0
   17dc4:	ldr	w1, [sp, #60]
   17dc8:	str	w1, [x0]
   17dcc:	ldr	x0, [sp, #24]
   17dd0:	ldr	w1, [x0, #92]
   17dd4:	ldr	x0, [sp, #24]
   17dd8:	ldr	x2, [x0, #72]
   17ddc:	ldr	x0, [sp, #24]
   17de0:	ldr	w3, [x0, #80]
   17de4:	ldr	x0, [sp, #24]
   17de8:	ldr	w0, [x0, #84]
   17dec:	mov	w7, w0
   17df0:	mov	w6, w3
   17df4:	mov	x5, x2
   17df8:	mov	w4, w1
   17dfc:	ldr	w3, [sp, #40]
   17e00:	ldr	x2, [sp, #64]
   17e04:	ldr	w1, [sp, #60]
   17e08:	ldr	w0, [sp, #76]
   17e0c:	bl	16cc4 <lzma_mf_is_supported@@XZ_5.0+0x143c>
   17e10:	ldr	x0, [sp, #24]
   17e14:	bl	15c48 <lzma_mf_is_supported@@XZ_5.0+0x3c0>
   17e18:	ldr	w0, [sp, #20]
   17e1c:	sub	w0, w0, #0x1
   17e20:	str	w0, [sp, #20]
   17e24:	ldr	w0, [sp, #20]
   17e28:	cmp	w0, #0x0
   17e2c:	b.ne	17c0c <lzma_mf_is_supported@@XZ_5.0+0x2384>  // b.any
   17e30:	nop
   17e34:	nop
   17e38:	ldp	x29, x30, [sp], #80
   17e3c:	ret
   17e40:	sub	sp, sp, #0x10
   17e44:	str	x0, [sp, #8]
   17e48:	ldr	x0, [sp, #8]
   17e4c:	str	xzr, [x0, #8]
   17e50:	ldr	x0, [sp, #8]
   17e54:	str	xzr, [x0, #16]
   17e58:	ldr	x0, [sp, #8]
   17e5c:	ldr	x1, [x0]
   17e60:	ldr	x0, [sp, #8]
   17e64:	ldr	x0, [x0, #32]
   17e68:	sub	x0, x0, #0x1
   17e6c:	add	x0, x1, x0
   17e70:	strb	wzr, [x0]
   17e74:	ldr	x0, [sp, #8]
   17e78:	strb	wzr, [x0, #40]
   17e7c:	nop
   17e80:	add	sp, sp, #0x10
   17e84:	ret
   17e88:	stp	x29, x30, [sp, #-112]!
   17e8c:	mov	x29, sp
   17e90:	str	x0, [sp, #72]
   17e94:	str	x1, [sp, #64]
   17e98:	str	x2, [sp, #56]
   17e9c:	str	x3, [sp, #48]
   17ea0:	str	x4, [sp, #40]
   17ea4:	str	x5, [sp, #32]
   17ea8:	str	x6, [sp, #24]
   17eac:	ldr	x0, [sp, #72]
   17eb0:	ldr	x1, [x0, #8]
   17eb4:	ldr	x0, [sp, #72]
   17eb8:	ldr	x0, [x0, #32]
   17ebc:	cmp	x1, x0
   17ec0:	b.ne	17ecc <lzma_mf_is_supported@@XZ_5.0+0x2644>  // b.any
   17ec4:	ldr	x0, [sp, #72]
   17ec8:	str	xzr, [x0, #8]
   17ecc:	ldr	x0, [sp, #72]
   17ed0:	ldr	x0, [x0, #8]
   17ed4:	str	x0, [sp, #104]
   17ed8:	ldr	x0, [sp, #72]
   17edc:	ldr	x2, [x0, #8]
   17ee0:	ldr	x0, [sp, #72]
   17ee4:	ldr	x1, [x0, #32]
   17ee8:	ldr	x0, [sp, #72]
   17eec:	ldr	x0, [x0, #8]
   17ef0:	sub	x1, x1, x0
   17ef4:	ldr	x0, [sp, #32]
   17ef8:	ldr	x0, [x0]
   17efc:	ldr	x3, [sp, #24]
   17f00:	sub	x0, x3, x0
   17f04:	cmp	x1, x0
   17f08:	csel	x0, x1, x0, ls  // ls = plast
   17f0c:	add	x1, x2, x0
   17f10:	ldr	x0, [sp, #72]
   17f14:	str	x1, [x0, #24]
   17f18:	ldr	x0, [sp, #72]
   17f1c:	ldr	x5, [x0, #56]
   17f20:	ldr	x0, [sp, #72]
   17f24:	ldr	x0, [x0, #48]
   17f28:	ldr	x1, [sp, #72]
   17f2c:	ldr	x4, [sp, #48]
   17f30:	ldr	x3, [sp, #56]
   17f34:	ldr	x2, [sp, #64]
   17f38:	blr	x5
   17f3c:	str	w0, [sp, #100]
   17f40:	ldr	x0, [sp, #72]
   17f44:	ldr	x1, [x0, #8]
   17f48:	ldr	x0, [sp, #104]
   17f4c:	sub	x0, x1, x0
   17f50:	str	x0, [sp, #88]
   17f54:	ldr	x0, [sp, #32]
   17f58:	ldr	x0, [x0]
   17f5c:	ldr	x1, [sp, #40]
   17f60:	add	x3, x1, x0
   17f64:	ldr	x0, [sp, #72]
   17f68:	ldr	x1, [x0]
   17f6c:	ldr	x0, [sp, #104]
   17f70:	add	x0, x1, x0
   17f74:	ldr	x2, [sp, #88]
   17f78:	mov	x1, x0
   17f7c:	mov	x0, x3
   17f80:	bl	3090 <memcpy@plt>
   17f84:	ldr	x0, [sp, #32]
   17f88:	ldr	x1, [x0]
   17f8c:	ldr	x0, [sp, #88]
   17f90:	add	x1, x1, x0
   17f94:	ldr	x0, [sp, #32]
   17f98:	str	x1, [x0]
   17f9c:	ldr	x0, [sp, #72]
   17fa0:	ldrb	w0, [x0, #40]
   17fa4:	cmp	w0, #0x0
   17fa8:	b.eq	17fdc <lzma_mf_is_supported@@XZ_5.0+0x2754>  // b.none
   17fac:	ldr	x0, [sp, #72]
   17fb0:	bl	17e40 <lzma_mf_is_supported@@XZ_5.0+0x25b8>
   17fb4:	ldr	w0, [sp, #100]
   17fb8:	cmp	w0, #0x0
   17fbc:	b.ne	17fd4 <lzma_mf_is_supported@@XZ_5.0+0x274c>  // b.any
   17fc0:	ldr	x0, [sp, #32]
   17fc4:	ldr	x0, [x0]
   17fc8:	ldr	x1, [sp, #24]
   17fcc:	cmp	x1, x0
   17fd0:	b.ne	17eac <lzma_mf_is_supported@@XZ_5.0+0x2624>  // b.any
   17fd4:	ldr	w0, [sp, #100]
   17fd8:	b	18018 <lzma_mf_is_supported@@XZ_5.0+0x2790>
   17fdc:	ldr	w0, [sp, #100]
   17fe0:	cmp	w0, #0x0
   17fe4:	b.ne	18014 <lzma_mf_is_supported@@XZ_5.0+0x278c>  // b.any
   17fe8:	ldr	x0, [sp, #32]
   17fec:	ldr	x0, [x0]
   17ff0:	ldr	x1, [sp, #24]
   17ff4:	cmp	x1, x0
   17ff8:	b.eq	18014 <lzma_mf_is_supported@@XZ_5.0+0x278c>  // b.none
   17ffc:	ldr	x0, [sp, #72]
   18000:	ldr	x1, [x0, #8]
   18004:	ldr	x0, [sp, #72]
   18008:	ldr	x0, [x0, #32]
   1800c:	cmp	x1, x0
   18010:	b.cs	17eac <lzma_mf_is_supported@@XZ_5.0+0x2624>  // b.hs, b.nlast
   18014:	ldr	w0, [sp, #100]
   18018:	ldp	x29, x30, [sp], #112
   1801c:	ret
   18020:	sub	sp, sp, #0x70
   18024:	stp	x29, x30, [sp, #16]
   18028:	add	x29, sp, #0x10
   1802c:	str	x0, [sp, #88]
   18030:	str	x1, [sp, #80]
   18034:	str	x2, [sp, #72]
   18038:	str	x3, [sp, #64]
   1803c:	str	x4, [sp, #56]
   18040:	str	x5, [sp, #48]
   18044:	str	x6, [sp, #40]
   18048:	str	x7, [sp, #32]
   1804c:	ldr	x0, [sp, #88]
   18050:	str	x0, [sp, #104]
   18054:	ldr	x0, [sp, #104]
   18058:	ldr	x0, [x0, #112]
   1805c:	cmp	x0, #0x0
   18060:	b.ne	18230 <lzma_mf_is_supported@@XZ_5.0+0x29a8>  // b.any
   18064:	ldr	x6, [sp, #32]
   18068:	ldr	x5, [sp, #40]
   1806c:	ldr	x4, [sp, #48]
   18070:	ldr	x3, [sp, #56]
   18074:	ldr	x2, [sp, #64]
   18078:	ldr	x1, [sp, #72]
   1807c:	ldr	x0, [sp, #104]
   18080:	bl	17e88 <lzma_mf_is_supported@@XZ_5.0+0x2600>
   18084:	b	18248 <lzma_mf_is_supported@@XZ_5.0+0x29c0>
   18088:	ldr	x0, [sp, #104]
   1808c:	ldrb	w0, [x0, #160]
   18090:	eor	w0, w0, #0x1
   18094:	and	w0, w0, #0xff
   18098:	cmp	w0, #0x0
   1809c:	b.eq	18158 <lzma_mf_is_supported@@XZ_5.0+0x28d0>  // b.none
   180a0:	ldr	x0, [sp, #104]
   180a4:	ldr	x1, [x0, #168]
   180a8:	ldr	x0, [sp, #104]
   180ac:	ldr	x0, [x0, #176]
   180b0:	cmp	x1, x0
   180b4:	b.ne	18158 <lzma_mf_is_supported@@XZ_5.0+0x28d0>  // b.any
   180b8:	ldr	x0, [sp, #104]
   180bc:	str	xzr, [x0, #168]
   180c0:	ldr	x0, [sp, #104]
   180c4:	str	xzr, [x0, #176]
   180c8:	ldr	x0, [sp, #104]
   180cc:	ldr	x8, [x0, #112]
   180d0:	ldr	x0, [sp, #104]
   180d4:	ldr	x9, [x0, #88]
   180d8:	ldr	x0, [sp, #104]
   180dc:	add	x1, x0, #0xb8
   180e0:	ldr	x0, [sp, #104]
   180e4:	add	x2, x0, #0xb0
   180e8:	ldr	w0, [sp, #112]
   180ec:	str	w0, [sp]
   180f0:	mov	x7, #0x1000                	// #4096
   180f4:	mov	x6, x2
   180f8:	mov	x5, x1
   180fc:	ldr	x4, [sp, #56]
   18100:	ldr	x3, [sp, #64]
   18104:	ldr	x2, [sp, #72]
   18108:	ldr	x1, [sp, #80]
   1810c:	mov	x0, x9
   18110:	blr	x8
   18114:	str	w0, [sp, #100]
   18118:	ldr	w0, [sp, #100]
   1811c:	cmp	w0, #0x1
   18120:	b.ne	18134 <lzma_mf_is_supported@@XZ_5.0+0x28ac>  // b.any
   18124:	ldr	x0, [sp, #104]
   18128:	mov	w1, #0x1                   	// #1
   1812c:	strb	w1, [x0, #160]
   18130:	b	18158 <lzma_mf_is_supported@@XZ_5.0+0x28d0>
   18134:	ldr	w0, [sp, #100]
   18138:	cmp	w0, #0x0
   1813c:	b.ne	18150 <lzma_mf_is_supported@@XZ_5.0+0x28c8>  // b.any
   18140:	ldr	x0, [sp, #104]
   18144:	ldr	x0, [x0, #176]
   18148:	cmp	x0, #0x0
   1814c:	b.ne	18158 <lzma_mf_is_supported@@XZ_5.0+0x28d0>  // b.any
   18150:	ldr	w0, [sp, #100]
   18154:	b	18248 <lzma_mf_is_supported@@XZ_5.0+0x29c0>
   18158:	ldr	x0, [sp, #104]
   1815c:	ldrb	w0, [x0, #161]
   18160:	cmp	w0, #0x0
   18164:	b.eq	181a0 <lzma_mf_is_supported@@XZ_5.0+0x2918>  // b.none
   18168:	ldr	x0, [sp, #104]
   1816c:	ldr	x0, [x0, #176]
   18170:	cmp	x0, #0x0
   18174:	b.eq	18180 <lzma_mf_is_supported@@XZ_5.0+0x28f8>  // b.none
   18178:	mov	w0, #0x9                   	// #9
   1817c:	b	18248 <lzma_mf_is_supported@@XZ_5.0+0x29c0>
   18180:	ldr	x0, [sp, #104]
   18184:	ldrb	w0, [x0, #160]
   18188:	cmp	w0, #0x0
   1818c:	b.eq	18198 <lzma_mf_is_supported@@XZ_5.0+0x2910>  // b.none
   18190:	mov	w0, #0x1                   	// #1
   18194:	b	18248 <lzma_mf_is_supported@@XZ_5.0+0x29c0>
   18198:	mov	w0, #0x0                   	// #0
   1819c:	b	18248 <lzma_mf_is_supported@@XZ_5.0+0x29c0>
   181a0:	ldr	x0, [sp, #104]
   181a4:	add	x1, x0, #0xb8
   181a8:	ldr	x0, [sp, #104]
   181ac:	add	x2, x0, #0xa8
   181b0:	ldr	x0, [sp, #104]
   181b4:	ldr	x0, [x0, #176]
   181b8:	ldr	x6, [sp, #32]
   181bc:	ldr	x5, [sp, #40]
   181c0:	ldr	x4, [sp, #48]
   181c4:	mov	x3, x0
   181c8:	ldr	x0, [sp, #104]
   181cc:	bl	17e88 <lzma_mf_is_supported@@XZ_5.0+0x2600>
   181d0:	str	w0, [sp, #96]
   181d4:	ldr	w0, [sp, #96]
   181d8:	cmp	w0, #0x1
   181dc:	b.ne	181f0 <lzma_mf_is_supported@@XZ_5.0+0x2968>  // b.any
   181e0:	ldr	x0, [sp, #104]
   181e4:	mov	w1, #0x1                   	// #1
   181e8:	strb	w1, [x0, #161]
   181ec:	b	18230 <lzma_mf_is_supported@@XZ_5.0+0x29a8>
   181f0:	ldr	w0, [sp, #96]
   181f4:	cmp	w0, #0x0
   181f8:	b.eq	18204 <lzma_mf_is_supported@@XZ_5.0+0x297c>  // b.none
   181fc:	ldr	w0, [sp, #96]
   18200:	b	18248 <lzma_mf_is_supported@@XZ_5.0+0x29c0>
   18204:	ldr	x0, [sp, #104]
   18208:	ldrb	w0, [x0, #160]
   1820c:	cmp	w0, #0x0
   18210:	b.eq	18230 <lzma_mf_is_supported@@XZ_5.0+0x29a8>  // b.none
   18214:	ldr	x0, [sp, #40]
   18218:	ldr	x0, [x0]
   1821c:	ldr	x1, [sp, #32]
   18220:	cmp	x1, x0
   18224:	b.ls	18230 <lzma_mf_is_supported@@XZ_5.0+0x29a8>  // b.plast
   18228:	mov	w0, #0x9                   	// #9
   1822c:	b	18248 <lzma_mf_is_supported@@XZ_5.0+0x29c0>
   18230:	ldr	x0, [sp, #40]
   18234:	ldr	x0, [x0]
   18238:	ldr	x1, [sp, #32]
   1823c:	cmp	x1, x0
   18240:	b.hi	18088 <lzma_mf_is_supported@@XZ_5.0+0x2800>  // b.pmore
   18244:	mov	w0, #0x0                   	// #0
   18248:	ldp	x29, x30, [sp, #16]
   1824c:	add	sp, sp, #0x70
   18250:	ret
   18254:	stp	x29, x30, [sp, #-48]!
   18258:	mov	x29, sp
   1825c:	str	x0, [sp, #24]
   18260:	str	x1, [sp, #16]
   18264:	ldr	x0, [sp, #24]
   18268:	str	x0, [sp, #40]
   1826c:	ldr	x0, [sp, #40]
   18270:	add	x0, x0, #0x58
   18274:	ldr	x1, [sp, #16]
   18278:	bl	3a48 <lzma_version_string@@XZ_5.0+0x358>
   1827c:	ldr	x0, [sp, #40]
   18280:	ldr	x0, [x0]
   18284:	ldr	x1, [sp, #16]
   18288:	bl	3814 <lzma_version_string@@XZ_5.0+0x124>
   1828c:	ldr	x0, [sp, #40]
   18290:	ldr	x0, [x0, #80]
   18294:	cmp	x0, #0x0
   18298:	b.eq	182b8 <lzma_mf_is_supported@@XZ_5.0+0x2a30>  // b.none
   1829c:	ldr	x0, [sp, #40]
   182a0:	ldr	x2, [x0, #80]
   182a4:	ldr	x0, [sp, #40]
   182a8:	ldr	x0, [x0, #48]
   182ac:	ldr	x1, [sp, #16]
   182b0:	blr	x2
   182b4:	b	182c8 <lzma_mf_is_supported@@XZ_5.0+0x2a40>
   182b8:	ldr	x0, [sp, #40]
   182bc:	ldr	x0, [x0, #48]
   182c0:	ldr	x1, [sp, #16]
   182c4:	bl	3814 <lzma_version_string@@XZ_5.0+0x124>
   182c8:	ldr	x1, [sp, #16]
   182cc:	ldr	x0, [sp, #40]
   182d0:	bl	3814 <lzma_version_string@@XZ_5.0+0x124>
   182d4:	nop
   182d8:	ldp	x29, x30, [sp], #48
   182dc:	ret
   182e0:	stp	x29, x30, [sp, #-176]!
   182e4:	mov	x29, sp
   182e8:	str	x0, [sp, #40]
   182ec:	str	x1, [sp, #32]
   182f0:	str	x2, [sp, #24]
   182f4:	str	x3, [sp, #16]
   182f8:	ldr	x0, [sp, #40]
   182fc:	ldr	x0, [x0]
   18300:	str	x0, [sp, #168]
   18304:	ldr	x0, [sp, #168]
   18308:	cmp	x0, #0x0
   1830c:	b.ne	183e4 <lzma_mf_is_supported@@XZ_5.0+0x2b5c>  // b.any
   18310:	ldr	x1, [sp, #32]
   18314:	mov	x0, #0x10b8                	// #4280
   18318:	bl	36fc <lzma_version_string@@XZ_5.0+0xc>
   1831c:	str	x0, [sp, #168]
   18320:	ldr	x0, [sp, #168]
   18324:	cmp	x0, #0x0
   18328:	b.ne	18334 <lzma_mf_is_supported@@XZ_5.0+0x2aac>  // b.any
   1832c:	mov	w0, #0x5                   	// #5
   18330:	b	18584 <lzma_mf_is_supported@@XZ_5.0+0x2cfc>
   18334:	ldr	x0, [sp, #40]
   18338:	ldr	x1, [sp, #168]
   1833c:	str	x1, [x0]
   18340:	ldr	x0, [sp, #40]
   18344:	adrp	x1, 18000 <lzma_mf_is_supported@@XZ_5.0+0x2778>
   18348:	add	x1, x1, #0x20
   1834c:	str	x1, [x0, #24]
   18350:	ldr	x0, [sp, #40]
   18354:	adrp	x1, 18000 <lzma_mf_is_supported@@XZ_5.0+0x2778>
   18358:	add	x1, x1, #0x254
   1835c:	str	x1, [x0, #32]
   18360:	ldr	x0, [sp, #168]
   18364:	str	xzr, [x0]
   18368:	ldr	x0, [sp, #168]
   1836c:	str	xzr, [x0, #32]
   18370:	ldr	x0, [sp, #168]
   18374:	str	xzr, [x0, #48]
   18378:	ldr	x0, [sp, #168]
   1837c:	str	xzr, [x0, #56]
   18380:	ldr	x0, [sp, #168]
   18384:	str	xzr, [x0, #64]
   18388:	ldr	x0, [sp, #168]
   1838c:	str	xzr, [x0, #72]
   18390:	ldr	x0, [sp, #168]
   18394:	str	xzr, [x0, #80]
   18398:	ldr	x0, [sp, #168]
   1839c:	str	xzr, [x0, #88]
   183a0:	ldr	x0, [sp, #168]
   183a4:	mov	x1, #0xffffffffffffffff    	// #-1
   183a8:	str	x1, [x0, #96]
   183ac:	ldr	x0, [sp, #168]
   183b0:	str	xzr, [x0, #104]
   183b4:	ldr	x0, [sp, #168]
   183b8:	str	xzr, [x0, #112]
   183bc:	ldr	x0, [sp, #168]
   183c0:	str	xzr, [x0, #120]
   183c4:	ldr	x0, [sp, #168]
   183c8:	str	xzr, [x0, #128]
   183cc:	ldr	x0, [sp, #168]
   183d0:	str	xzr, [x0, #136]
   183d4:	ldr	x0, [sp, #168]
   183d8:	str	xzr, [x0, #144]
   183dc:	ldr	x0, [sp, #168]
   183e0:	str	xzr, [x0, #152]
   183e4:	ldr	x0, [sp, #168]
   183e8:	add	x5, x0, #0x30
   183ec:	ldr	x0, [sp, #24]
   183f0:	ldr	x0, [x0, #16]
   183f4:	add	x1, sp, #0x78
   183f8:	ldr	x4, [sp, #16]
   183fc:	mov	x3, x1
   18400:	mov	x2, x0
   18404:	ldr	x1, [sp, #32]
   18408:	mov	x0, x5
   1840c:	blr	x4
   18410:	str	w0, [sp, #164]
   18414:	ldr	w0, [sp, #164]
   18418:	cmp	w0, #0x0
   1841c:	b.eq	18428 <lzma_mf_is_supported@@XZ_5.0+0x2ba0>  // b.none
   18420:	ldr	w0, [sp, #164]
   18424:	b	18584 <lzma_mf_is_supported@@XZ_5.0+0x2cfc>
   18428:	ldr	x0, [sp, #120]
   1842c:	cmp	x0, #0xfff
   18430:	b.hi	1843c <lzma_mf_is_supported@@XZ_5.0+0x2bb4>  // b.pmore
   18434:	mov	x0, #0x1000                	// #4096
   18438:	str	x0, [sp, #120]
   1843c:	ldr	x0, [sp, #120]
   18440:	cmn	x0, #0x10
   18444:	b.ls	18450 <lzma_mf_is_supported@@XZ_5.0+0x2bc8>  // b.plast
   18448:	mov	w0, #0x5                   	// #5
   1844c:	b	18584 <lzma_mf_is_supported@@XZ_5.0+0x2cfc>
   18450:	ldr	x0, [sp, #120]
   18454:	add	x0, x0, #0xf
   18458:	and	x0, x0, #0xfffffffffffffff0
   1845c:	str	x0, [sp, #120]
   18460:	ldr	x0, [sp, #168]
   18464:	ldr	x1, [x0, #32]
   18468:	ldr	x0, [sp, #120]
   1846c:	cmp	x1, x0
   18470:	b.eq	184c0 <lzma_mf_is_supported@@XZ_5.0+0x2c38>  // b.none
   18474:	ldr	x0, [sp, #168]
   18478:	ldr	x0, [x0]
   1847c:	ldr	x1, [sp, #32]
   18480:	bl	3814 <lzma_version_string@@XZ_5.0+0x124>
   18484:	ldr	x0, [sp, #120]
   18488:	ldr	x1, [sp, #32]
   1848c:	bl	36fc <lzma_version_string@@XZ_5.0+0xc>
   18490:	mov	x1, x0
   18494:	ldr	x0, [sp, #168]
   18498:	str	x1, [x0]
   1849c:	ldr	x0, [sp, #168]
   184a0:	ldr	x0, [x0]
   184a4:	cmp	x0, #0x0
   184a8:	b.ne	184b4 <lzma_mf_is_supported@@XZ_5.0+0x2c2c>  // b.any
   184ac:	mov	w0, #0x5                   	// #5
   184b0:	b	18584 <lzma_mf_is_supported@@XZ_5.0+0x2cfc>
   184b4:	ldr	x1, [sp, #120]
   184b8:	ldr	x0, [sp, #168]
   184bc:	str	x1, [x0, #32]
   184c0:	ldr	x0, [sp, #40]
   184c4:	ldr	x0, [x0]
   184c8:	bl	17e40 <lzma_mf_is_supported@@XZ_5.0+0x25b8>
   184cc:	ldr	x0, [sp, #128]
   184d0:	cmp	x0, #0x0
   184d4:	b.eq	18544 <lzma_mf_is_supported@@XZ_5.0+0x2cbc>  // b.none
   184d8:	ldr	x0, [sp, #136]
   184dc:	cmp	x0, #0x0
   184e0:	b.eq	18544 <lzma_mf_is_supported@@XZ_5.0+0x2cbc>  // b.none
   184e4:	ldr	x1, [sp, #120]
   184e8:	ldr	x0, [sp, #136]
   184ec:	cmp	x1, x0
   184f0:	csel	x0, x1, x0, ls  // ls = plast
   184f4:	str	x0, [sp, #152]
   184f8:	ldr	x1, [sp, #136]
   184fc:	ldr	x0, [sp, #152]
   18500:	sub	x0, x1, x0
   18504:	str	x0, [sp, #144]
   18508:	ldr	x0, [sp, #168]
   1850c:	ldr	x3, [x0]
   18510:	ldr	x1, [sp, #128]
   18514:	ldr	x0, [sp, #144]
   18518:	add	x0, x1, x0
   1851c:	ldr	x2, [sp, #152]
   18520:	mov	x1, x0
   18524:	mov	x0, x3
   18528:	bl	3090 <memcpy@plt>
   1852c:	ldr	x0, [sp, #168]
   18530:	ldr	x1, [sp, #152]
   18534:	str	x1, [x0, #8]
   18538:	ldr	x0, [sp, #168]
   1853c:	ldr	x1, [sp, #152]
   18540:	str	x1, [x0, #16]
   18544:	ldr	x0, [sp, #168]
   18548:	strb	wzr, [x0, #160]
   1854c:	ldr	x0, [sp, #168]
   18550:	strb	wzr, [x0, #161]
   18554:	ldr	x0, [sp, #168]
   18558:	str	xzr, [x0, #168]
   1855c:	ldr	x0, [sp, #168]
   18560:	str	xzr, [x0, #176]
   18564:	ldr	x0, [sp, #168]
   18568:	add	x3, x0, #0x58
   1856c:	ldr	x0, [sp, #24]
   18570:	add	x0, x0, #0x18
   18574:	mov	x2, x0
   18578:	ldr	x1, [sp, #32]
   1857c:	mov	x0, x3
   18580:	bl	393c <lzma_version_string@@XZ_5.0+0x24c>
   18584:	ldp	x29, x30, [sp], #176
   18588:	ret
   1858c:	sub	sp, sp, #0x10
   18590:	str	x0, [sp, #8]
   18594:	ldr	x1, [sp, #8]
   18598:	mov	x0, #0x10b8                	// #4280
   1859c:	add	x0, x1, x0
   185a0:	add	sp, sp, #0x10
   185a4:	ret
   185a8:	stp	x29, x30, [sp, #-48]!
   185ac:	mov	x29, sp
   185b0:	str	x0, [sp, #24]
   185b4:	str	x1, [sp, #16]
   185b8:	ldr	x0, [sp, #24]
   185bc:	str	x0, [sp, #40]
   185c0:	ldr	x0, [sp, #40]
   185c4:	ldr	x2, [x0, #72]
   185c8:	ldr	x0, [sp, #40]
   185cc:	ldr	x0, [x0, #48]
   185d0:	ldr	x1, [sp, #16]
   185d4:	blr	x2
   185d8:	nop
   185dc:	ldp	x29, x30, [sp], #48
   185e0:	ret

00000000000185e4 <lzma_lzma_preset@@XZ_5.0>:
   185e4:	sub	sp, sp, #0x20
   185e8:	str	x0, [sp, #8]
   185ec:	str	w1, [sp, #4]
   185f0:	ldr	w0, [sp, #4]
   185f4:	and	w0, w0, #0x1f
   185f8:	str	w0, [sp, #28]
   185fc:	ldr	w0, [sp, #4]
   18600:	and	w0, w0, #0xffffffe0
   18604:	str	w0, [sp, #24]
   18608:	mov	w0, #0x80000000            	// #-2147483648
   1860c:	str	w0, [sp, #20]
   18610:	ldr	w0, [sp, #28]
   18614:	cmp	w0, #0x9
   18618:	b.hi	18634 <lzma_lzma_preset@@XZ_5.0+0x50>  // b.pmore
   1861c:	ldr	w0, [sp, #20]
   18620:	mvn	w1, w0
   18624:	ldr	w0, [sp, #24]
   18628:	and	w0, w1, w0
   1862c:	cmp	w0, #0x0
   18630:	b.eq	1863c <lzma_lzma_preset@@XZ_5.0+0x58>  // b.none
   18634:	mov	w0, #0x1                   	// #1
   18638:	b	187cc <lzma_lzma_preset@@XZ_5.0+0x1e8>
   1863c:	ldr	x0, [sp, #8]
   18640:	str	xzr, [x0, #8]
   18644:	ldr	x0, [sp, #8]
   18648:	str	wzr, [x0, #16]
   1864c:	ldr	x0, [sp, #8]
   18650:	mov	w1, #0x3                   	// #3
   18654:	str	w1, [x0, #20]
   18658:	ldr	x0, [sp, #8]
   1865c:	str	wzr, [x0, #24]
   18660:	ldr	x0, [sp, #8]
   18664:	mov	w1, #0x2                   	// #2
   18668:	str	w1, [x0, #28]
   1866c:	adrp	x0, 30000 <lzma_mode_is_supported@@XZ_5.0+0x15368>
   18670:	add	x1, x0, #0x1c8
   18674:	ldr	w0, [sp, #28]
   18678:	ldrb	w0, [x1, x0]
   1867c:	mov	w1, w0
   18680:	mov	w0, #0x1                   	// #1
   18684:	lsl	w1, w0, w1
   18688:	ldr	x0, [sp, #8]
   1868c:	str	w1, [x0]
   18690:	ldr	w0, [sp, #28]
   18694:	cmp	w0, #0x3
   18698:	b.hi	18708 <lzma_lzma_preset@@XZ_5.0+0x124>  // b.pmore
   1869c:	ldr	x0, [sp, #8]
   186a0:	mov	w1, #0x1                   	// #1
   186a4:	str	w1, [x0, #32]
   186a8:	ldr	w0, [sp, #28]
   186ac:	cmp	w0, #0x0
   186b0:	b.ne	186bc <lzma_lzma_preset@@XZ_5.0+0xd8>  // b.any
   186b4:	mov	w0, #0x3                   	// #3
   186b8:	b	186c0 <lzma_lzma_preset@@XZ_5.0+0xdc>
   186bc:	mov	w0, #0x4                   	// #4
   186c0:	ldr	x1, [sp, #8]
   186c4:	str	w0, [x1, #40]
   186c8:	ldr	w0, [sp, #28]
   186cc:	cmp	w0, #0x1
   186d0:	b.hi	186dc <lzma_lzma_preset@@XZ_5.0+0xf8>  // b.pmore
   186d4:	mov	w0, #0x80                  	// #128
   186d8:	b	186e0 <lzma_lzma_preset@@XZ_5.0+0xfc>
   186dc:	mov	w0, #0x111                 	// #273
   186e0:	ldr	x1, [sp, #8]
   186e4:	str	w0, [x1, #36]
   186e8:	adrp	x0, 30000 <lzma_mode_is_supported@@XZ_5.0+0x15368>
   186ec:	add	x1, x0, #0x1d8
   186f0:	ldr	w0, [sp, #28]
   186f4:	ldrb	w0, [x1, x0]
   186f8:	mov	w1, w0
   186fc:	ldr	x0, [sp, #8]
   18700:	str	w1, [x0, #44]
   18704:	b	1875c <lzma_lzma_preset@@XZ_5.0+0x178>
   18708:	ldr	x0, [sp, #8]
   1870c:	mov	w1, #0x2                   	// #2
   18710:	str	w1, [x0, #32]
   18714:	ldr	x0, [sp, #8]
   18718:	mov	w1, #0x14                  	// #20
   1871c:	str	w1, [x0, #40]
   18720:	ldr	w0, [sp, #28]
   18724:	cmp	w0, #0x4
   18728:	b.eq	18748 <lzma_lzma_preset@@XZ_5.0+0x164>  // b.none
   1872c:	ldr	w0, [sp, #28]
   18730:	cmp	w0, #0x5
   18734:	b.ne	18740 <lzma_lzma_preset@@XZ_5.0+0x15c>  // b.any
   18738:	mov	w0, #0x20                  	// #32
   1873c:	b	1874c <lzma_lzma_preset@@XZ_5.0+0x168>
   18740:	mov	w0, #0x40                  	// #64
   18744:	b	1874c <lzma_lzma_preset@@XZ_5.0+0x168>
   18748:	mov	w0, #0x10                  	// #16
   1874c:	ldr	x1, [sp, #8]
   18750:	str	w0, [x1, #36]
   18754:	ldr	x0, [sp, #8]
   18758:	str	wzr, [x0, #44]
   1875c:	ldr	w0, [sp, #24]
   18760:	cmp	w0, #0x0
   18764:	b.ge	187c8 <lzma_lzma_preset@@XZ_5.0+0x1e4>  // b.tcont
   18768:	ldr	x0, [sp, #8]
   1876c:	mov	w1, #0x2                   	// #2
   18770:	str	w1, [x0, #32]
   18774:	ldr	x0, [sp, #8]
   18778:	mov	w1, #0x14                  	// #20
   1877c:	str	w1, [x0, #40]
   18780:	ldr	w0, [sp, #28]
   18784:	cmp	w0, #0x3
   18788:	b.eq	18798 <lzma_lzma_preset@@XZ_5.0+0x1b4>  // b.none
   1878c:	ldr	w0, [sp, #28]
   18790:	cmp	w0, #0x5
   18794:	b.ne	187b0 <lzma_lzma_preset@@XZ_5.0+0x1cc>  // b.any
   18798:	ldr	x0, [sp, #8]
   1879c:	mov	w1, #0xc0                  	// #192
   187a0:	str	w1, [x0, #36]
   187a4:	ldr	x0, [sp, #8]
   187a8:	str	wzr, [x0, #44]
   187ac:	b	187c8 <lzma_lzma_preset@@XZ_5.0+0x1e4>
   187b0:	ldr	x0, [sp, #8]
   187b4:	mov	w1, #0x111                 	// #273
   187b8:	str	w1, [x0, #36]
   187bc:	ldr	x0, [sp, #8]
   187c0:	mov	w1, #0x200                 	// #512
   187c4:	str	w1, [x0, #44]
   187c8:	mov	w0, #0x0                   	// #0
   187cc:	add	sp, sp, #0x20
   187d0:	ret
   187d4:	sub	sp, sp, #0x10
   187d8:	str	x0, [sp, #8]
   187dc:	str	w1, [sp, #4]
   187e0:	ldr	w0, [sp, #4]
   187e4:	and	w1, w0, #0xff
   187e8:	ldr	x0, [sp, #8]
   187ec:	strb	w1, [x0]
   187f0:	ldr	w0, [sp, #4]
   187f4:	lsr	w1, w0, #8
   187f8:	ldr	x0, [sp, #8]
   187fc:	add	x0, x0, #0x1
   18800:	and	w1, w1, #0xff
   18804:	strb	w1, [x0]
   18808:	ldr	w0, [sp, #4]
   1880c:	lsr	w1, w0, #16
   18810:	ldr	x0, [sp, #8]
   18814:	add	x0, x0, #0x2
   18818:	and	w1, w1, #0xff
   1881c:	strb	w1, [x0]
   18820:	ldr	w0, [sp, #4]
   18824:	lsr	w1, w0, #24
   18828:	ldr	x0, [sp, #8]
   1882c:	add	x0, x0, #0x3
   18830:	and	w1, w1, #0xff
   18834:	strb	w1, [x0]
   18838:	nop
   1883c:	add	sp, sp, #0x10
   18840:	ret
   18844:	sub	sp, sp, #0x10
   18848:	str	x0, [sp, #8]
   1884c:	ldr	x0, [sp, #8]
   18850:	ldr	w1, [x0, #24]
   18854:	ldr	x0, [sp, #8]
   18858:	ldr	w0, [x0, #28]
   1885c:	sub	w0, w1, w0
   18860:	add	sp, sp, #0x10
   18864:	ret
   18868:	stp	x29, x30, [sp, #-32]!
   1886c:	mov	x29, sp
   18870:	str	x0, [sp, #24]
   18874:	str	w1, [sp, #20]
   18878:	ldr	w0, [sp, #20]
   1887c:	cmp	w0, #0x0
   18880:	b.eq	188b0 <lzma_lzma_preset@@XZ_5.0+0x2cc>  // b.none
   18884:	ldr	x0, [sp, #24]
   18888:	ldr	x2, [x0, #56]
   1888c:	ldr	w1, [sp, #20]
   18890:	ldr	x0, [sp, #24]
   18894:	blr	x2
   18898:	ldr	x0, [sp, #24]
   1889c:	ldr	w1, [x0, #28]
   188a0:	ldr	w0, [sp, #20]
   188a4:	add	w1, w1, w0
   188a8:	ldr	x0, [sp, #24]
   188ac:	str	w1, [x0, #28]
   188b0:	nop
   188b4:	ldp	x29, x30, [sp], #32
   188b8:	ret
   188bc:	sub	sp, sp, #0x10
   188c0:	strh	w0, [sp, #14]
   188c4:	str	w1, [sp, #8]
   188c8:	ldrh	w1, [sp, #14]
   188cc:	ldr	w0, [sp, #8]
   188d0:	neg	w0, w0
   188d4:	and	w0, w0, #0x7ff
   188d8:	eor	w0, w1, w0
   188dc:	lsr	w2, w0, #4
   188e0:	adrp	x0, 46000 <lzma_mode_is_supported@@XZ_5.0+0x2b368>
   188e4:	ldr	x1, [x0, #3960]
   188e8:	mov	w0, w2
   188ec:	ldrb	w0, [x1, x0]
   188f0:	add	sp, sp, #0x10
   188f4:	ret
   188f8:	sub	sp, sp, #0x10
   188fc:	strh	w0, [sp, #14]
   18900:	ldrh	w0, [sp, #14]
   18904:	lsr	w0, w0, #4
   18908:	and	w0, w0, #0xffff
   1890c:	mov	w2, w0
   18910:	adrp	x0, 46000 <lzma_mode_is_supported@@XZ_5.0+0x2b368>
   18914:	ldr	x1, [x0, #3960]
   18918:	sxtw	x0, w2
   1891c:	ldrb	w0, [x1, x0]
   18920:	add	sp, sp, #0x10
   18924:	ret
   18928:	sub	sp, sp, #0x10
   1892c:	strh	w0, [sp, #14]
   18930:	ldrh	w0, [sp, #14]
   18934:	lsr	w0, w0, #4
   18938:	and	w0, w0, #0xffff
   1893c:	eor	w0, w0, #0x7f
   18940:	and	w0, w0, #0xffff
   18944:	mov	w2, w0
   18948:	adrp	x0, 46000 <lzma_mode_is_supported@@XZ_5.0+0x2b368>
   1894c:	ldr	x1, [x0, #3960]
   18950:	mov	w0, w2
   18954:	ldrb	w0, [x1, x0]
   18958:	add	sp, sp, #0x10
   1895c:	ret
   18960:	stp	x29, x30, [sp, #-48]!
   18964:	mov	x29, sp
   18968:	str	x0, [sp, #24]
   1896c:	str	w1, [sp, #20]
   18970:	str	w2, [sp, #16]
   18974:	str	wzr, [sp, #44]
   18978:	ldr	w0, [sp, #20]
   1897c:	mov	w1, #0x1                   	// #1
   18980:	lsl	w0, w1, w0
   18984:	ldr	w1, [sp, #16]
   18988:	add	w0, w1, w0
   1898c:	str	w0, [sp, #16]
   18990:	ldr	w0, [sp, #16]
   18994:	and	w0, w0, #0x1
   18998:	str	w0, [sp, #40]
   1899c:	ldr	w0, [sp, #16]
   189a0:	lsr	w0, w0, #1
   189a4:	str	w0, [sp, #16]
   189a8:	ldr	w0, [sp, #16]
   189ac:	lsl	x0, x0, #1
   189b0:	ldr	x1, [sp, #24]
   189b4:	add	x0, x1, x0
   189b8:	ldrh	w0, [x0]
   189bc:	ldr	w1, [sp, #40]
   189c0:	bl	188bc <lzma_lzma_preset@@XZ_5.0+0x2d8>
   189c4:	mov	w1, w0
   189c8:	ldr	w0, [sp, #44]
   189cc:	add	w0, w0, w1
   189d0:	str	w0, [sp, #44]
   189d4:	ldr	w0, [sp, #16]
   189d8:	cmp	w0, #0x1
   189dc:	b.ne	18990 <lzma_lzma_preset@@XZ_5.0+0x3ac>  // b.any
   189e0:	ldr	w0, [sp, #44]
   189e4:	ldp	x29, x30, [sp], #48
   189e8:	ret
   189ec:	sub	sp, sp, #0x10
   189f0:	str	x0, [sp, #8]
   189f4:	ldr	x0, [sp, #8]
   189f8:	str	xzr, [x0]
   189fc:	ldr	x0, [sp, #8]
   18a00:	mov	x1, #0x1                   	// #1
   18a04:	str	x1, [x0, #8]
   18a08:	ldr	x0, [sp, #8]
   18a0c:	mov	w1, #0xffffffff            	// #-1
   18a10:	str	w1, [x0, #16]
   18a14:	ldr	x0, [sp, #8]
   18a18:	strb	wzr, [x0, #20]
   18a1c:	ldr	x0, [sp, #8]
   18a20:	str	xzr, [x0, #24]
   18a24:	ldr	x0, [sp, #8]
   18a28:	str	xzr, [x0, #32]
   18a2c:	nop
   18a30:	add	sp, sp, #0x10
   18a34:	ret
   18a38:	sub	sp, sp, #0x20
   18a3c:	str	x0, [sp, #24]
   18a40:	str	x1, [sp, #16]
   18a44:	str	w2, [sp, #12]
   18a48:	ldr	x0, [sp, #24]
   18a4c:	ldr	x0, [x0, #24]
   18a50:	ldr	x1, [sp, #24]
   18a54:	add	x0, x0, #0x8
   18a58:	lsl	x0, x0, #2
   18a5c:	add	x0, x1, x0
   18a60:	ldr	w1, [sp, #12]
   18a64:	str	w1, [x0, #8]
   18a68:	ldr	x0, [sp, #24]
   18a6c:	ldr	x1, [x0, #24]
   18a70:	ldr	x0, [sp, #24]
   18a74:	add	x1, x1, #0x22
   18a78:	ldr	x2, [sp, #16]
   18a7c:	str	x2, [x0, x1, lsl #3]
   18a80:	ldr	x0, [sp, #24]
   18a84:	ldr	x0, [x0, #24]
   18a88:	add	x1, x0, #0x1
   18a8c:	ldr	x0, [sp, #24]
   18a90:	str	x1, [x0, #24]
   18a94:	nop
   18a98:	add	sp, sp, #0x20
   18a9c:	ret
   18aa0:	stp	x29, x30, [sp, #-64]!
   18aa4:	mov	x29, sp
   18aa8:	str	x0, [sp, #40]
   18aac:	str	x1, [sp, #32]
   18ab0:	str	w2, [sp, #28]
   18ab4:	str	w3, [sp, #24]
   18ab8:	mov	w0, #0x1                   	// #1
   18abc:	str	w0, [sp, #60]
   18ac0:	ldr	w0, [sp, #28]
   18ac4:	sub	w0, w0, #0x1
   18ac8:	str	w0, [sp, #28]
   18acc:	ldr	w0, [sp, #28]
   18ad0:	ldr	w1, [sp, #24]
   18ad4:	lsr	w0, w1, w0
   18ad8:	and	w0, w0, #0x1
   18adc:	str	w0, [sp, #56]
   18ae0:	ldr	w0, [sp, #60]
   18ae4:	lsl	x0, x0, #1
   18ae8:	ldr	x1, [sp, #32]
   18aec:	add	x0, x1, x0
   18af0:	ldr	w2, [sp, #56]
   18af4:	mov	x1, x0
   18af8:	ldr	x0, [sp, #40]
   18afc:	bl	18a38 <lzma_lzma_preset@@XZ_5.0+0x454>
   18b00:	ldr	w0, [sp, #60]
   18b04:	lsl	w0, w0, #1
   18b08:	ldr	w1, [sp, #56]
   18b0c:	add	w0, w1, w0
   18b10:	str	w0, [sp, #60]
   18b14:	ldr	w0, [sp, #28]
   18b18:	cmp	w0, #0x0
   18b1c:	b.ne	18ac0 <lzma_lzma_preset@@XZ_5.0+0x4dc>  // b.any
   18b20:	nop
   18b24:	nop
   18b28:	ldp	x29, x30, [sp], #64
   18b2c:	ret
   18b30:	stp	x29, x30, [sp, #-64]!
   18b34:	mov	x29, sp
   18b38:	str	x0, [sp, #40]
   18b3c:	str	x1, [sp, #32]
   18b40:	str	w2, [sp, #28]
   18b44:	str	w3, [sp, #24]
   18b48:	mov	w0, #0x1                   	// #1
   18b4c:	str	w0, [sp, #60]
   18b50:	ldr	w0, [sp, #24]
   18b54:	and	w0, w0, #0x1
   18b58:	str	w0, [sp, #56]
   18b5c:	ldr	w0, [sp, #24]
   18b60:	lsr	w0, w0, #1
   18b64:	str	w0, [sp, #24]
   18b68:	ldr	w0, [sp, #60]
   18b6c:	lsl	x0, x0, #1
   18b70:	ldr	x1, [sp, #32]
   18b74:	add	x0, x1, x0
   18b78:	ldr	w2, [sp, #56]
   18b7c:	mov	x1, x0
   18b80:	ldr	x0, [sp, #40]
   18b84:	bl	18a38 <lzma_lzma_preset@@XZ_5.0+0x454>
   18b88:	ldr	w0, [sp, #60]
   18b8c:	lsl	w0, w0, #1
   18b90:	ldr	w1, [sp, #56]
   18b94:	add	w0, w1, w0
   18b98:	str	w0, [sp, #60]
   18b9c:	ldr	w0, [sp, #28]
   18ba0:	sub	w0, w0, #0x1
   18ba4:	str	w0, [sp, #28]
   18ba8:	ldr	w0, [sp, #28]
   18bac:	cmp	w0, #0x0
   18bb0:	b.ne	18b50 <lzma_lzma_preset@@XZ_5.0+0x56c>  // b.any
   18bb4:	nop
   18bb8:	nop
   18bbc:	ldp	x29, x30, [sp], #64
   18bc0:	ret
   18bc4:	sub	sp, sp, #0x10
   18bc8:	str	x0, [sp, #8]
   18bcc:	str	w1, [sp, #4]
   18bd0:	str	w2, [sp]
   18bd4:	ldr	w0, [sp]
   18bd8:	sub	w0, w0, #0x1
   18bdc:	str	w0, [sp]
   18be0:	ldr	w0, [sp]
   18be4:	ldr	w1, [sp, #4]
   18be8:	lsr	w0, w1, w0
   18bec:	and	w1, w0, #0x1
   18bf0:	ldr	x0, [sp, #8]
   18bf4:	ldr	x0, [x0, #24]
   18bf8:	add	x3, x0, #0x1
   18bfc:	ldr	x2, [sp, #8]
   18c00:	str	x3, [x2, #24]
   18c04:	add	w1, w1, #0x2
   18c08:	ldr	x2, [sp, #8]
   18c0c:	add	x0, x0, #0x8
   18c10:	lsl	x0, x0, #2
   18c14:	add	x0, x2, x0
   18c18:	str	w1, [x0, #8]
   18c1c:	ldr	w0, [sp]
   18c20:	cmp	w0, #0x0
   18c24:	b.ne	18bd4 <lzma_lzma_preset@@XZ_5.0+0x5f0>  // b.any
   18c28:	nop
   18c2c:	nop
   18c30:	add	sp, sp, #0x10
   18c34:	ret
   18c38:	sub	sp, sp, #0x20
   18c3c:	str	x0, [sp, #8]
   18c40:	str	xzr, [sp, #24]
   18c44:	b	18c80 <lzma_lzma_preset@@XZ_5.0+0x69c>
   18c48:	ldr	x0, [sp, #8]
   18c4c:	ldr	x0, [x0, #24]
   18c50:	add	x2, x0, #0x1
   18c54:	ldr	x1, [sp, #8]
   18c58:	str	x2, [x1, #24]
   18c5c:	ldr	x1, [sp, #8]
   18c60:	add	x0, x0, #0x8
   18c64:	lsl	x0, x0, #2
   18c68:	add	x0, x1, x0
   18c6c:	mov	w1, #0x4                   	// #4
   18c70:	str	w1, [x0, #8]
   18c74:	ldr	x0, [sp, #24]
   18c78:	add	x0, x0, #0x1
   18c7c:	str	x0, [sp, #24]
   18c80:	ldr	x0, [sp, #24]
   18c84:	cmp	x0, #0x4
   18c88:	b.ls	18c48 <lzma_lzma_preset@@XZ_5.0+0x664>  // b.plast
   18c8c:	nop
   18c90:	nop
   18c94:	add	sp, sp, #0x20
   18c98:	ret
   18c9c:	sub	sp, sp, #0x20
   18ca0:	str	x0, [sp, #24]
   18ca4:	str	x1, [sp, #16]
   18ca8:	str	x2, [sp, #8]
   18cac:	str	x3, [sp]
   18cb0:	ldr	x0, [sp, #24]
   18cb4:	ldr	x0, [x0]
   18cb8:	mov	w1, w0
   18cbc:	mov	w0, #0xfeffffff            	// #-16777217
   18cc0:	cmp	w1, w0
   18cc4:	b.ls	18cdc <lzma_lzma_preset@@XZ_5.0+0x6f8>  // b.plast
   18cc8:	ldr	x0, [sp, #24]
   18ccc:	ldr	x0, [x0]
   18cd0:	lsr	x0, x0, #32
   18cd4:	cmp	w0, #0x0
   18cd8:	b.eq	18d88 <lzma_lzma_preset@@XZ_5.0+0x7a4>  // b.none
   18cdc:	ldr	x0, [sp, #8]
   18ce0:	ldr	x0, [x0]
   18ce4:	ldr	x1, [sp]
   18ce8:	cmp	x1, x0
   18cec:	b.ne	18cf8 <lzma_lzma_preset@@XZ_5.0+0x714>  // b.any
   18cf0:	mov	w0, #0x1                   	// #1
   18cf4:	b	18db8 <lzma_lzma_preset@@XZ_5.0+0x7d4>
   18cf8:	ldr	x0, [sp, #24]
   18cfc:	ldrb	w2, [x0, #20]
   18d00:	ldr	x0, [sp, #24]
   18d04:	ldr	x0, [x0]
   18d08:	lsr	x0, x0, #32
   18d0c:	and	w1, w0, #0xff
   18d10:	ldr	x0, [sp, #8]
   18d14:	ldr	x0, [x0]
   18d18:	ldr	x3, [sp, #16]
   18d1c:	add	x0, x3, x0
   18d20:	add	w1, w2, w1
   18d24:	and	w1, w1, #0xff
   18d28:	strb	w1, [x0]
   18d2c:	ldr	x0, [sp, #8]
   18d30:	ldr	x0, [x0]
   18d34:	add	x1, x0, #0x1
   18d38:	ldr	x0, [sp, #8]
   18d3c:	str	x1, [x0]
   18d40:	ldr	x0, [sp, #24]
   18d44:	mov	w1, #0xffffffff            	// #-1
   18d48:	strb	w1, [x0, #20]
   18d4c:	ldr	x0, [sp, #24]
   18d50:	ldr	x0, [x0, #8]
   18d54:	sub	x1, x0, #0x1
   18d58:	ldr	x0, [sp, #24]
   18d5c:	str	x1, [x0, #8]
   18d60:	ldr	x0, [sp, #24]
   18d64:	ldr	x0, [x0, #8]
   18d68:	cmp	x0, #0x0
   18d6c:	b.ne	18cdc <lzma_lzma_preset@@XZ_5.0+0x6f8>  // b.any
   18d70:	ldr	x0, [sp, #24]
   18d74:	ldr	x0, [x0]
   18d78:	lsr	x0, x0, #24
   18d7c:	and	w1, w0, #0xff
   18d80:	ldr	x0, [sp, #24]
   18d84:	strb	w1, [x0, #20]
   18d88:	ldr	x0, [sp, #24]
   18d8c:	ldr	x0, [x0, #8]
   18d90:	add	x1, x0, #0x1
   18d94:	ldr	x0, [sp, #24]
   18d98:	str	x1, [x0, #8]
   18d9c:	ldr	x0, [sp, #24]
   18da0:	ldr	x0, [x0]
   18da4:	lsl	x0, x0, #8
   18da8:	and	x1, x0, #0xffffffff
   18dac:	ldr	x0, [sp, #24]
   18db0:	str	x1, [x0]
   18db4:	mov	w0, #0x0                   	// #0
   18db8:	add	sp, sp, #0x20
   18dbc:	ret
   18dc0:	stp	x29, x30, [sp, #-64]!
   18dc4:	mov	x29, sp
   18dc8:	str	x0, [sp, #40]
   18dcc:	str	x1, [sp, #32]
   18dd0:	str	x2, [sp, #24]
   18dd4:	str	x3, [sp, #16]
   18dd8:	b	19078 <lzma_lzma_preset@@XZ_5.0+0xa94>
   18ddc:	ldr	x0, [sp, #40]
   18de0:	ldr	w1, [x0, #16]
   18de4:	mov	w0, #0xffffff              	// #16777215
   18de8:	cmp	w1, w0
   18dec:	b.hi	18e2c <lzma_lzma_preset@@XZ_5.0+0x848>  // b.pmore
   18df0:	ldr	x3, [sp, #16]
   18df4:	ldr	x2, [sp, #24]
   18df8:	ldr	x1, [sp, #32]
   18dfc:	ldr	x0, [sp, #40]
   18e00:	bl	18c9c <lzma_lzma_preset@@XZ_5.0+0x6b8>
   18e04:	and	w0, w0, #0xff
   18e08:	cmp	w0, #0x0
   18e0c:	b.eq	18e18 <lzma_lzma_preset@@XZ_5.0+0x834>  // b.none
   18e10:	mov	w0, #0x1                   	// #1
   18e14:	b	190a4 <lzma_lzma_preset@@XZ_5.0+0xac0>
   18e18:	ldr	x0, [sp, #40]
   18e1c:	ldr	w0, [x0, #16]
   18e20:	lsl	w1, w0, #8
   18e24:	ldr	x0, [sp, #40]
   18e28:	str	w1, [x0, #16]
   18e2c:	ldr	x0, [sp, #40]
   18e30:	ldr	x0, [x0, #32]
   18e34:	ldr	x1, [sp, #40]
   18e38:	add	x0, x0, #0x8
   18e3c:	lsl	x0, x0, #2
   18e40:	add	x0, x1, x0
   18e44:	ldr	w0, [x0, #8]
   18e48:	cmp	w0, #0x4
   18e4c:	b.eq	18ff0 <lzma_lzma_preset@@XZ_5.0+0xa0c>  // b.none
   18e50:	cmp	w0, #0x4
   18e54:	b.hi	19060 <lzma_lzma_preset@@XZ_5.0+0xa7c>  // b.pmore
   18e58:	cmp	w0, #0x3
   18e5c:	b.eq	18fb8 <lzma_lzma_preset@@XZ_5.0+0x9d4>  // b.none
   18e60:	cmp	w0, #0x3
   18e64:	b.hi	19060 <lzma_lzma_preset@@XZ_5.0+0xa7c>  // b.pmore
   18e68:	cmp	w0, #0x2
   18e6c:	b.eq	18fa0 <lzma_lzma_preset@@XZ_5.0+0x9bc>  // b.none
   18e70:	cmp	w0, #0x2
   18e74:	b.hi	19060 <lzma_lzma_preset@@XZ_5.0+0xa7c>  // b.pmore
   18e78:	cmp	w0, #0x0
   18e7c:	b.eq	18e8c <lzma_lzma_preset@@XZ_5.0+0x8a8>  // b.none
   18e80:	cmp	w0, #0x1
   18e84:	b.eq	18f04 <lzma_lzma_preset@@XZ_5.0+0x920>  // b.none
   18e88:	b	19060 <lzma_lzma_preset@@XZ_5.0+0xa7c>
   18e8c:	ldr	x0, [sp, #40]
   18e90:	ldr	x1, [x0, #32]
   18e94:	ldr	x0, [sp, #40]
   18e98:	add	x1, x1, #0x22
   18e9c:	ldr	x0, [x0, x1, lsl #3]
   18ea0:	ldrh	w0, [x0]
   18ea4:	strh	w0, [sp, #54]
   18ea8:	ldr	x0, [sp, #40]
   18eac:	ldr	w0, [x0, #16]
   18eb0:	lsr	w1, w0, #11
   18eb4:	ldrh	w0, [sp, #54]
   18eb8:	mul	w1, w1, w0
   18ebc:	ldr	x0, [sp, #40]
   18ec0:	str	w1, [x0, #16]
   18ec4:	ldrh	w0, [sp, #54]
   18ec8:	mov	w1, #0x800                 	// #2048
   18ecc:	sub	w0, w1, w0
   18ed0:	lsr	w0, w0, #5
   18ed4:	and	w0, w0, #0xffff
   18ed8:	ldrh	w1, [sp, #54]
   18edc:	add	w0, w0, w1
   18ee0:	strh	w0, [sp, #54]
   18ee4:	ldr	x0, [sp, #40]
   18ee8:	ldr	x1, [x0, #32]
   18eec:	ldr	x0, [sp, #40]
   18ef0:	add	x1, x1, #0x22
   18ef4:	ldr	x0, [x0, x1, lsl #3]
   18ef8:	ldrh	w1, [sp, #54]
   18efc:	strh	w1, [x0]
   18f00:	b	19064 <lzma_lzma_preset@@XZ_5.0+0xa80>
   18f04:	ldr	x0, [sp, #40]
   18f08:	ldr	x1, [x0, #32]
   18f0c:	ldr	x0, [sp, #40]
   18f10:	add	x1, x1, #0x22
   18f14:	ldr	x0, [x0, x1, lsl #3]
   18f18:	ldrh	w0, [x0]
   18f1c:	strh	w0, [sp, #62]
   18f20:	ldrh	w1, [sp, #62]
   18f24:	ldr	x0, [sp, #40]
   18f28:	ldr	w0, [x0, #16]
   18f2c:	lsr	w0, w0, #11
   18f30:	mul	w0, w1, w0
   18f34:	str	w0, [sp, #56]
   18f38:	ldr	x0, [sp, #40]
   18f3c:	ldr	x1, [x0]
   18f40:	ldr	w0, [sp, #56]
   18f44:	add	x1, x1, x0
   18f48:	ldr	x0, [sp, #40]
   18f4c:	str	x1, [x0]
   18f50:	ldr	x0, [sp, #40]
   18f54:	ldr	w1, [x0, #16]
   18f58:	ldr	w0, [sp, #56]
   18f5c:	sub	w1, w1, w0
   18f60:	ldr	x0, [sp, #40]
   18f64:	str	w1, [x0, #16]
   18f68:	ldrh	w0, [sp, #62]
   18f6c:	lsr	w0, w0, #5
   18f70:	and	w0, w0, #0xffff
   18f74:	ldrh	w1, [sp, #62]
   18f78:	sub	w0, w1, w0
   18f7c:	strh	w0, [sp, #62]
   18f80:	ldr	x0, [sp, #40]
   18f84:	ldr	x1, [x0, #32]
   18f88:	ldr	x0, [sp, #40]
   18f8c:	add	x1, x1, #0x22
   18f90:	ldr	x0, [x0, x1, lsl #3]
   18f94:	ldrh	w1, [sp, #62]
   18f98:	strh	w1, [x0]
   18f9c:	b	19064 <lzma_lzma_preset@@XZ_5.0+0xa80>
   18fa0:	ldr	x0, [sp, #40]
   18fa4:	ldr	w0, [x0, #16]
   18fa8:	lsr	w1, w0, #1
   18fac:	ldr	x0, [sp, #40]
   18fb0:	str	w1, [x0, #16]
   18fb4:	b	19064 <lzma_lzma_preset@@XZ_5.0+0xa80>
   18fb8:	ldr	x0, [sp, #40]
   18fbc:	ldr	w0, [x0, #16]
   18fc0:	lsr	w1, w0, #1
   18fc4:	ldr	x0, [sp, #40]
   18fc8:	str	w1, [x0, #16]
   18fcc:	ldr	x0, [sp, #40]
   18fd0:	ldr	x1, [x0]
   18fd4:	ldr	x0, [sp, #40]
   18fd8:	ldr	w0, [x0, #16]
   18fdc:	mov	w0, w0
   18fe0:	add	x1, x1, x0
   18fe4:	ldr	x0, [sp, #40]
   18fe8:	str	x1, [x0]
   18fec:	b	19064 <lzma_lzma_preset@@XZ_5.0+0xa80>
   18ff0:	ldr	x0, [sp, #40]
   18ff4:	mov	w1, #0xffffffff            	// #-1
   18ff8:	str	w1, [x0, #16]
   18ffc:	ldr	x3, [sp, #16]
   19000:	ldr	x2, [sp, #24]
   19004:	ldr	x1, [sp, #32]
   19008:	ldr	x0, [sp, #40]
   1900c:	bl	18c9c <lzma_lzma_preset@@XZ_5.0+0x6b8>
   19010:	and	w0, w0, #0xff
   19014:	cmp	w0, #0x0
   19018:	b.eq	19024 <lzma_lzma_preset@@XZ_5.0+0xa40>  // b.none
   1901c:	mov	w0, #0x1                   	// #1
   19020:	b	190a4 <lzma_lzma_preset@@XZ_5.0+0xac0>
   19024:	ldr	x0, [sp, #40]
   19028:	ldr	x0, [x0, #32]
   1902c:	add	x1, x0, #0x1
   19030:	ldr	x0, [sp, #40]
   19034:	str	x1, [x0, #32]
   19038:	ldr	x0, [sp, #40]
   1903c:	ldr	x1, [x0, #32]
   19040:	ldr	x0, [sp, #40]
   19044:	ldr	x0, [x0, #24]
   19048:	cmp	x1, x0
   1904c:	b.cc	18ffc <lzma_lzma_preset@@XZ_5.0+0xa18>  // b.lo, b.ul, b.last
   19050:	ldr	x0, [sp, #40]
   19054:	bl	189ec <lzma_lzma_preset@@XZ_5.0+0x408>
   19058:	mov	w0, #0x0                   	// #0
   1905c:	b	190a4 <lzma_lzma_preset@@XZ_5.0+0xac0>
   19060:	nop
   19064:	ldr	x0, [sp, #40]
   19068:	ldr	x0, [x0, #32]
   1906c:	add	x1, x0, #0x1
   19070:	ldr	x0, [sp, #40]
   19074:	str	x1, [x0, #32]
   19078:	ldr	x0, [sp, #40]
   1907c:	ldr	x1, [x0, #32]
   19080:	ldr	x0, [sp, #40]
   19084:	ldr	x0, [x0, #24]
   19088:	cmp	x1, x0
   1908c:	b.cc	18ddc <lzma_lzma_preset@@XZ_5.0+0x7f8>  // b.lo, b.ul, b.last
   19090:	ldr	x0, [sp, #40]
   19094:	str	xzr, [x0, #24]
   19098:	ldr	x0, [sp, #40]
   1909c:	str	xzr, [x0, #32]
   190a0:	mov	w0, #0x0                   	// #0
   190a4:	ldp	x29, x30, [sp], #64
   190a8:	ret
   190ac:	sub	sp, sp, #0x10
   190b0:	str	x0, [sp, #8]
   190b4:	ldr	x0, [sp, #8]
   190b8:	ldr	x0, [x0, #8]
   190bc:	add	x0, x0, #0x4
   190c0:	add	sp, sp, #0x10
   190c4:	ret
   190c8:	sub	sp, sp, #0x10
   190cc:	str	x0, [sp, #8]
   190d0:	ldr	x0, [sp, #8]
   190d4:	ldr	w0, [x0, #20]
   190d8:	cmp	w0, #0x4
   190dc:	b.hi	19124 <lzma_lzma_preset@@XZ_5.0+0xb40>  // b.pmore
   190e0:	ldr	x0, [sp, #8]
   190e4:	ldr	w0, [x0, #24]
   190e8:	cmp	w0, #0x4
   190ec:	b.hi	19124 <lzma_lzma_preset@@XZ_5.0+0xb40>  // b.pmore
   190f0:	ldr	x0, [sp, #8]
   190f4:	ldr	w1, [x0, #20]
   190f8:	ldr	x0, [sp, #8]
   190fc:	ldr	w0, [x0, #24]
   19100:	add	w0, w1, w0
   19104:	cmp	w0, #0x4
   19108:	b.hi	19124 <lzma_lzma_preset@@XZ_5.0+0xb40>  // b.pmore
   1910c:	ldr	x0, [sp, #8]
   19110:	ldr	w0, [x0, #28]
   19114:	cmp	w0, #0x4
   19118:	b.hi	19124 <lzma_lzma_preset@@XZ_5.0+0xb40>  // b.pmore
   1911c:	mov	w0, #0x1                   	// #1
   19120:	b	19128 <lzma_lzma_preset@@XZ_5.0+0xb44>
   19124:	mov	w0, #0x0                   	// #0
   19128:	and	w0, w0, #0x1
   1912c:	and	w0, w0, #0xff
   19130:	add	sp, sp, #0x10
   19134:	ret
   19138:	sub	sp, sp, #0x20
   1913c:	str	x0, [sp, #8]
   19140:	str	w1, [sp, #4]
   19144:	str	w2, [sp]
   19148:	ldr	w1, [sp, #4]
   1914c:	ldr	w0, [sp]
   19150:	add	w0, w1, w0
   19154:	mov	w1, #0x1                   	// #1
   19158:	lsl	w0, w1, w0
   1915c:	str	w0, [sp, #20]
   19160:	str	wzr, [sp, #28]
   19164:	b	191c0 <lzma_lzma_preset@@XZ_5.0+0xbdc>
   19168:	str	wzr, [sp, #24]
   1916c:	b	191a8 <lzma_lzma_preset@@XZ_5.0+0xbc4>
   19170:	ldr	w1, [sp, #28]
   19174:	mov	x0, x1
   19178:	lsl	x0, x0, #1
   1917c:	add	x0, x0, x1
   19180:	lsl	x0, x0, #9
   19184:	mov	x1, x0
   19188:	ldr	x0, [sp, #8]
   1918c:	add	x0, x0, x1
   19190:	ldr	w1, [sp, #24]
   19194:	mov	w2, #0x400                 	// #1024
   19198:	strh	w2, [x0, x1, lsl #1]
   1919c:	ldr	w0, [sp, #24]
   191a0:	add	w0, w0, #0x1
   191a4:	str	w0, [sp, #24]
   191a8:	ldr	w0, [sp, #24]
   191ac:	cmp	w0, #0x2ff
   191b0:	b.ls	19170 <lzma_lzma_preset@@XZ_5.0+0xb8c>  // b.plast
   191b4:	ldr	w0, [sp, #28]
   191b8:	add	w0, w0, #0x1
   191bc:	str	w0, [sp, #28]
   191c0:	ldr	w1, [sp, #28]
   191c4:	ldr	w0, [sp, #20]
   191c8:	cmp	w1, w0
   191cc:	b.cc	19168 <lzma_lzma_preset@@XZ_5.0+0xb84>  // b.lo, b.ul, b.last
   191d0:	nop
   191d4:	add	sp, sp, #0x20
   191d8:	ret
   191dc:	sub	sp, sp, #0x10
   191e0:	str	w0, [sp, #12]
   191e4:	ldr	w1, [sp, #12]
   191e8:	mov	w0, #0x1fff                	// #8191
   191ec:	cmp	w1, w0
   191f0:	b.hi	19208 <lzma_lzma_preset@@XZ_5.0+0xc24>  // b.pmore
   191f4:	adrp	x0, 46000 <lzma_mode_is_supported@@XZ_5.0+0x2b368>
   191f8:	ldr	x1, [x0, #4008]
   191fc:	ldr	w0, [sp, #12]
   19200:	ldrb	w0, [x1, x0]
   19204:	b	19254 <lzma_lzma_preset@@XZ_5.0+0xc70>
   19208:	ldr	w1, [sp, #12]
   1920c:	mov	w0, #0x1ffffff             	// #33554431
   19210:	cmp	w1, w0
   19214:	b.hi	19238 <lzma_lzma_preset@@XZ_5.0+0xc54>  // b.pmore
   19218:	ldr	w0, [sp, #12]
   1921c:	lsr	w2, w0, #12
   19220:	adrp	x0, 46000 <lzma_mode_is_supported@@XZ_5.0+0x2b368>
   19224:	ldr	x1, [x0, #4008]
   19228:	mov	w0, w2
   1922c:	ldrb	w0, [x1, x0]
   19230:	add	w0, w0, #0x18
   19234:	b	19254 <lzma_lzma_preset@@XZ_5.0+0xc70>
   19238:	ldr	w0, [sp, #12]
   1923c:	lsr	w2, w0, #24
   19240:	adrp	x0, 46000 <lzma_mode_is_supported@@XZ_5.0+0x2b368>
   19244:	ldr	x1, [x0, #4008]
   19248:	mov	w0, w2
   1924c:	ldrb	w0, [x1, x0]
   19250:	add	w0, w0, #0x30
   19254:	add	sp, sp, #0x10
   19258:	ret
   1925c:	stp	x29, x30, [sp, #-64]!
   19260:	mov	x29, sp
   19264:	str	x0, [sp, #40]
   19268:	str	x1, [sp, #32]
   1926c:	str	w2, [sp, #28]
   19270:	str	w3, [sp, #24]
   19274:	mov	w0, #0x100                 	// #256
   19278:	str	w0, [sp, #60]
   1927c:	ldr	w0, [sp, #24]
   19280:	add	w0, w0, #0x100
   19284:	str	w0, [sp, #24]
   19288:	ldr	w0, [sp, #28]
   1928c:	lsl	w0, w0, #1
   19290:	str	w0, [sp, #28]
   19294:	ldr	w1, [sp, #28]
   19298:	ldr	w0, [sp, #60]
   1929c:	and	w0, w1, w0
   192a0:	str	w0, [sp, #56]
   192a4:	ldr	w1, [sp, #60]
   192a8:	ldr	w0, [sp, #56]
   192ac:	add	w1, w1, w0
   192b0:	ldr	w0, [sp, #24]
   192b4:	lsr	w0, w0, #8
   192b8:	add	w0, w1, w0
   192bc:	str	w0, [sp, #52]
   192c0:	ldr	w0, [sp, #24]
   192c4:	lsr	w0, w0, #7
   192c8:	and	w0, w0, #0x1
   192cc:	str	w0, [sp, #48]
   192d0:	ldr	w0, [sp, #52]
   192d4:	lsl	x0, x0, #1
   192d8:	ldr	x1, [sp, #32]
   192dc:	add	x0, x1, x0
   192e0:	ldr	w2, [sp, #48]
   192e4:	mov	x1, x0
   192e8:	ldr	x0, [sp, #40]
   192ec:	bl	18a38 <lzma_lzma_preset@@XZ_5.0+0x454>
   192f0:	ldr	w0, [sp, #24]
   192f4:	lsl	w0, w0, #1
   192f8:	str	w0, [sp, #24]
   192fc:	ldr	w1, [sp, #28]
   19300:	ldr	w0, [sp, #24]
   19304:	eor	w0, w1, w0
   19308:	mvn	w0, w0
   1930c:	ldr	w1, [sp, #60]
   19310:	and	w0, w1, w0
   19314:	str	w0, [sp, #60]
   19318:	ldr	w1, [sp, #24]
   1931c:	mov	w0, #0xffff                	// #65535
   19320:	cmp	w1, w0
   19324:	b.ls	19288 <lzma_lzma_preset@@XZ_5.0+0xca4>  // b.plast
   19328:	nop
   1932c:	nop
   19330:	ldp	x29, x30, [sp], #64
   19334:	ret
   19338:	stp	x29, x30, [sp, #-80]!
   1933c:	mov	x29, sp
   19340:	str	x0, [sp, #40]
   19344:	str	x1, [sp, #32]
   19348:	str	w2, [sp, #28]
   1934c:	ldr	x0, [sp, #32]
   19350:	ldr	x1, [x0]
   19354:	ldr	x0, [sp, #32]
   19358:	ldr	w2, [x0, #24]
   1935c:	ldr	x0, [sp, #32]
   19360:	ldr	w0, [x0, #28]
   19364:	sub	w0, w2, w0
   19368:	mov	w0, w0
   1936c:	add	x0, x1, x0
   19370:	ldrb	w0, [x0]
   19374:	strb	w0, [sp, #79]
   19378:	ldr	x0, [sp, #40]
   1937c:	ldr	w1, [x0, #2968]
   19380:	ldr	w0, [sp, #28]
   19384:	and	w1, w1, w0
   19388:	ldr	x0, [sp, #40]
   1938c:	ldr	w0, [x0, #2964]
   19390:	lsl	w0, w1, w0
   19394:	ldr	x1, [sp, #32]
   19398:	ldr	x2, [x1]
   1939c:	ldr	x1, [sp, #32]
   193a0:	ldr	w3, [x1, #24]
   193a4:	ldr	x1, [sp, #32]
   193a8:	ldr	w1, [x1, #28]
   193ac:	sub	w1, w3, w1
   193b0:	sub	w1, w1, #0x1
   193b4:	mov	w1, w1
   193b8:	add	x1, x2, x1
   193bc:	ldrb	w1, [x1]
   193c0:	mov	w3, w1
   193c4:	ldr	x1, [sp, #40]
   193c8:	ldr	w1, [x1, #2964]
   193cc:	mov	w2, #0x8                   	// #8
   193d0:	sub	w1, w2, w1
   193d4:	asr	w1, w3, w1
   193d8:	add	w0, w0, w1
   193dc:	mov	w1, w0
   193e0:	mov	x0, x1
   193e4:	lsl	x0, x0, #1
   193e8:	add	x0, x0, x1
   193ec:	lsl	x0, x0, #9
   193f0:	add	x0, x0, #0xb90
   193f4:	ldr	x1, [sp, #40]
   193f8:	add	x0, x1, x0
   193fc:	add	x0, x0, #0xc
   19400:	str	x0, [sp, #64]
   19404:	ldr	x0, [sp, #40]
   19408:	ldr	w0, [x0, #736]
   1940c:	cmp	w0, #0x6
   19410:	b.hi	19430 <lzma_lzma_preset@@XZ_5.0+0xe4c>  // b.pmore
   19414:	ldr	x0, [sp, #40]
   19418:	ldrb	w1, [sp, #79]
   1941c:	mov	w3, w1
   19420:	mov	w2, #0x8                   	// #8
   19424:	ldr	x1, [sp, #64]
   19428:	bl	18aa0 <lzma_lzma_preset@@XZ_5.0+0x4bc>
   1942c:	b	19488 <lzma_lzma_preset@@XZ_5.0+0xea4>
   19430:	ldr	x0, [sp, #32]
   19434:	ldr	x1, [x0]
   19438:	ldr	x0, [sp, #32]
   1943c:	ldr	w2, [x0, #24]
   19440:	ldr	x0, [sp, #40]
   19444:	ldr	w0, [x0, #740]
   19448:	sub	w2, w2, w0
   1944c:	ldr	x0, [sp, #32]
   19450:	ldr	w0, [x0, #28]
   19454:	sub	w0, w2, w0
   19458:	sub	w0, w0, #0x1
   1945c:	mov	w0, w0
   19460:	add	x0, x1, x0
   19464:	ldrb	w0, [x0]
   19468:	strb	w0, [sp, #63]
   1946c:	ldr	x0, [sp, #40]
   19470:	ldrb	w1, [sp, #63]
   19474:	ldrb	w2, [sp, #79]
   19478:	mov	w3, w2
   1947c:	mov	w2, w1
   19480:	ldr	x1, [sp, #64]
   19484:	bl	1925c <lzma_lzma_preset@@XZ_5.0+0xc78>
   19488:	ldr	x0, [sp, #40]
   1948c:	ldr	w0, [x0, #736]
   19490:	cmp	w0, #0x3
   19494:	b.ls	194c8 <lzma_lzma_preset@@XZ_5.0+0xee4>  // b.plast
   19498:	ldr	x0, [sp, #40]
   1949c:	ldr	w0, [x0, #736]
   194a0:	cmp	w0, #0x9
   194a4:	b.hi	194b8 <lzma_lzma_preset@@XZ_5.0+0xed4>  // b.pmore
   194a8:	ldr	x0, [sp, #40]
   194ac:	ldr	w0, [x0, #736]
   194b0:	sub	w0, w0, #0x3
   194b4:	b	194cc <lzma_lzma_preset@@XZ_5.0+0xee8>
   194b8:	ldr	x0, [sp, #40]
   194bc:	ldr	w0, [x0, #736]
   194c0:	sub	w0, w0, #0x6
   194c4:	b	194cc <lzma_lzma_preset@@XZ_5.0+0xee8>
   194c8:	mov	w0, #0x0                   	// #0
   194cc:	ldr	x1, [sp, #40]
   194d0:	str	w0, [x1, #736]
   194d4:	nop
   194d8:	ldp	x29, x30, [sp], #80
   194dc:	ret
   194e0:	stp	x29, x30, [sp, #-64]!
   194e4:	mov	x29, sp
   194e8:	str	x0, [sp, #24]
   194ec:	str	w1, [sp, #20]
   194f0:	ldr	x0, [sp, #24]
   194f4:	add	x0, x0, #0x4, lsl #12
   194f8:	ldr	w0, [x0, #2052]
   194fc:	str	w0, [sp, #56]
   19500:	ldr	x1, [sp, #24]
   19504:	ldr	w2, [sp, #20]
   19508:	mov	x0, #0x1200                	// #4608
   1950c:	add	x0, x2, x0
   19510:	lsl	x0, x0, #2
   19514:	add	x0, x1, x0
   19518:	ldr	w1, [sp, #56]
   1951c:	str	w1, [x0, #8]
   19520:	ldr	x0, [sp, #24]
   19524:	ldrh	w0, [x0]
   19528:	bl	188f8 <lzma_lzma_preset@@XZ_5.0+0x314>
   1952c:	str	w0, [sp, #52]
   19530:	ldr	x0, [sp, #24]
   19534:	ldrh	w0, [x0]
   19538:	bl	18928 <lzma_lzma_preset@@XZ_5.0+0x344>
   1953c:	str	w0, [sp, #48]
   19540:	ldr	x0, [sp, #24]
   19544:	ldrh	w0, [x0, #2]
   19548:	bl	188f8 <lzma_lzma_preset@@XZ_5.0+0x314>
   1954c:	mov	w1, w0
   19550:	ldr	w0, [sp, #48]
   19554:	add	w0, w0, w1
   19558:	str	w0, [sp, #44]
   1955c:	ldr	x0, [sp, #24]
   19560:	ldrh	w0, [x0, #2]
   19564:	bl	18928 <lzma_lzma_preset@@XZ_5.0+0x344>
   19568:	mov	w1, w0
   1956c:	ldr	w0, [sp, #48]
   19570:	add	w0, w0, w1
   19574:	str	w0, [sp, #40]
   19578:	ldr	w1, [sp, #20]
   1957c:	mov	x0, x1
   19580:	lsl	x0, x0, #4
   19584:	add	x0, x0, x1
   19588:	lsl	x0, x0, #6
   1958c:	add	x0, x0, #0x400
   19590:	ldr	x1, [sp, #24]
   19594:	add	x0, x1, x0
   19598:	add	x0, x0, #0x4
   1959c:	str	x0, [sp, #32]
   195a0:	str	wzr, [sp, #60]
   195a4:	b	195f4 <lzma_lzma_preset@@XZ_5.0+0x1010>
   195a8:	ldr	w0, [sp, #20]
   195ac:	lsl	x0, x0, #4
   195b0:	ldr	x1, [sp, #24]
   195b4:	add	x0, x1, x0
   195b8:	add	x0, x0, #0x4
   195bc:	ldr	w2, [sp, #60]
   195c0:	mov	w1, #0x3                   	// #3
   195c4:	bl	18960 <lzma_lzma_preset@@XZ_5.0+0x37c>
   195c8:	mov	w2, w0
   195cc:	ldr	w0, [sp, #60]
   195d0:	lsl	x0, x0, #2
   195d4:	ldr	x1, [sp, #32]
   195d8:	add	x0, x1, x0
   195dc:	ldr	w1, [sp, #52]
   195e0:	add	w1, w2, w1
   195e4:	str	w1, [x0]
   195e8:	ldr	w0, [sp, #60]
   195ec:	add	w0, w0, #0x1
   195f0:	str	w0, [sp, #60]
   195f4:	ldr	w1, [sp, #60]
   195f8:	ldr	w0, [sp, #56]
   195fc:	cmp	w1, w0
   19600:	b.cs	19670 <lzma_lzma_preset@@XZ_5.0+0x108c>  // b.hs, b.nlast
   19604:	ldr	w0, [sp, #60]
   19608:	cmp	w0, #0x7
   1960c:	b.ls	195a8 <lzma_lzma_preset@@XZ_5.0+0xfc4>  // b.plast
   19610:	b	19670 <lzma_lzma_preset@@XZ_5.0+0x108c>
   19614:	ldr	w0, [sp, #20]
   19618:	add	x0, x0, #0x10
   1961c:	lsl	x0, x0, #4
   19620:	ldr	x1, [sp, #24]
   19624:	add	x0, x1, x0
   19628:	add	x3, x0, #0x4
   1962c:	ldr	w0, [sp, #60]
   19630:	sub	w0, w0, #0x8
   19634:	mov	w2, w0
   19638:	mov	w1, #0x3                   	// #3
   1963c:	mov	x0, x3
   19640:	bl	18960 <lzma_lzma_preset@@XZ_5.0+0x37c>
   19644:	mov	w2, w0
   19648:	ldr	w0, [sp, #60]
   1964c:	lsl	x0, x0, #2
   19650:	ldr	x1, [sp, #32]
   19654:	add	x0, x1, x0
   19658:	ldr	w1, [sp, #44]
   1965c:	add	w1, w2, w1
   19660:	str	w1, [x0]
   19664:	ldr	w0, [sp, #60]
   19668:	add	w0, w0, #0x1
   1966c:	str	w0, [sp, #60]
   19670:	ldr	w1, [sp, #60]
   19674:	ldr	w0, [sp, #56]
   19678:	cmp	w1, w0
   1967c:	b.cs	196dc <lzma_lzma_preset@@XZ_5.0+0x10f8>  // b.hs, b.nlast
   19680:	ldr	w0, [sp, #60]
   19684:	cmp	w0, #0xf
   19688:	b.ls	19614 <lzma_lzma_preset@@XZ_5.0+0x1030>  // b.plast
   1968c:	b	196dc <lzma_lzma_preset@@XZ_5.0+0x10f8>
   19690:	ldr	x0, [sp, #24]
   19694:	add	x3, x0, #0x204
   19698:	ldr	w0, [sp, #60]
   1969c:	sub	w0, w0, #0x10
   196a0:	mov	w2, w0
   196a4:	mov	w1, #0x8                   	// #8
   196a8:	mov	x0, x3
   196ac:	bl	18960 <lzma_lzma_preset@@XZ_5.0+0x37c>
   196b0:	mov	w2, w0
   196b4:	ldr	w0, [sp, #60]
   196b8:	lsl	x0, x0, #2
   196bc:	ldr	x1, [sp, #32]
   196c0:	add	x0, x1, x0
   196c4:	ldr	w1, [sp, #40]
   196c8:	add	w1, w2, w1
   196cc:	str	w1, [x0]
   196d0:	ldr	w0, [sp, #60]
   196d4:	add	w0, w0, #0x1
   196d8:	str	w0, [sp, #60]
   196dc:	ldr	w1, [sp, #60]
   196e0:	ldr	w0, [sp, #56]
   196e4:	cmp	w1, w0
   196e8:	b.cc	19690 <lzma_lzma_preset@@XZ_5.0+0x10ac>  // b.lo, b.ul, b.last
   196ec:	nop
   196f0:	ldp	x29, x30, [sp], #64
   196f4:	ret
   196f8:	stp	x29, x30, [sp, #-48]!
   196fc:	mov	x29, sp
   19700:	str	x0, [sp, #40]
   19704:	str	x1, [sp, #32]
   19708:	str	w2, [sp, #28]
   1970c:	str	w3, [sp, #24]
   19710:	strb	w4, [sp, #23]
   19714:	ldr	w0, [sp, #24]
   19718:	sub	w0, w0, #0x2
   1971c:	str	w0, [sp, #24]
   19720:	ldr	w0, [sp, #24]
   19724:	cmp	w0, #0x7
   19728:	b.hi	1976c <lzma_lzma_preset@@XZ_5.0+0x1188>  // b.pmore
   1972c:	ldr	x0, [sp, #32]
   19730:	mov	w2, #0x0                   	// #0
   19734:	mov	x1, x0
   19738:	ldr	x0, [sp, #40]
   1973c:	bl	18a38 <lzma_lzma_preset@@XZ_5.0+0x454>
   19740:	ldr	w0, [sp, #28]
   19744:	lsl	x0, x0, #4
   19748:	ldr	x1, [sp, #32]
   1974c:	add	x0, x1, x0
   19750:	add	x0, x0, #0x4
   19754:	ldr	w3, [sp, #24]
   19758:	mov	w2, #0x3                   	// #3
   1975c:	mov	x1, x0
   19760:	ldr	x0, [sp, #40]
   19764:	bl	18aa0 <lzma_lzma_preset@@XZ_5.0+0x4bc>
   19768:	b	19820 <lzma_lzma_preset@@XZ_5.0+0x123c>
   1976c:	ldr	x0, [sp, #32]
   19770:	mov	w2, #0x1                   	// #1
   19774:	mov	x1, x0
   19778:	ldr	x0, [sp, #40]
   1977c:	bl	18a38 <lzma_lzma_preset@@XZ_5.0+0x454>
   19780:	ldr	w0, [sp, #24]
   19784:	sub	w0, w0, #0x8
   19788:	str	w0, [sp, #24]
   1978c:	ldr	w0, [sp, #24]
   19790:	cmp	w0, #0x7
   19794:	b.hi	197e0 <lzma_lzma_preset@@XZ_5.0+0x11fc>  // b.pmore
   19798:	ldr	x0, [sp, #32]
   1979c:	add	x0, x0, #0x2
   197a0:	mov	w2, #0x0                   	// #0
   197a4:	mov	x1, x0
   197a8:	ldr	x0, [sp, #40]
   197ac:	bl	18a38 <lzma_lzma_preset@@XZ_5.0+0x454>
   197b0:	ldr	w0, [sp, #28]
   197b4:	add	x0, x0, #0x10
   197b8:	lsl	x0, x0, #4
   197bc:	ldr	x1, [sp, #32]
   197c0:	add	x0, x1, x0
   197c4:	add	x0, x0, #0x4
   197c8:	ldr	w3, [sp, #24]
   197cc:	mov	w2, #0x3                   	// #3
   197d0:	mov	x1, x0
   197d4:	ldr	x0, [sp, #40]
   197d8:	bl	18aa0 <lzma_lzma_preset@@XZ_5.0+0x4bc>
   197dc:	b	19820 <lzma_lzma_preset@@XZ_5.0+0x123c>
   197e0:	ldr	x0, [sp, #32]
   197e4:	add	x0, x0, #0x2
   197e8:	mov	w2, #0x1                   	// #1
   197ec:	mov	x1, x0
   197f0:	ldr	x0, [sp, #40]
   197f4:	bl	18a38 <lzma_lzma_preset@@XZ_5.0+0x454>
   197f8:	ldr	w0, [sp, #24]
   197fc:	sub	w0, w0, #0x8
   19800:	str	w0, [sp, #24]
   19804:	ldr	x0, [sp, #32]
   19808:	add	x0, x0, #0x204
   1980c:	ldr	w3, [sp, #24]
   19810:	mov	w2, #0x8                   	// #8
   19814:	mov	x1, x0
   19818:	ldr	x0, [sp, #40]
   1981c:	bl	18aa0 <lzma_lzma_preset@@XZ_5.0+0x4bc>
   19820:	ldrb	w0, [sp, #23]
   19824:	eor	w0, w0, #0x1
   19828:	and	w0, w0, #0xff
   1982c:	cmp	w0, #0x0
   19830:	b.eq	198a0 <lzma_lzma_preset@@XZ_5.0+0x12bc>  // b.none
   19834:	ldr	x1, [sp, #32]
   19838:	ldr	w2, [sp, #28]
   1983c:	mov	x0, #0x1200                	// #4608
   19840:	add	x0, x2, x0
   19844:	lsl	x0, x0, #2
   19848:	add	x0, x1, x0
   1984c:	ldr	w0, [x0, #8]
   19850:	sub	w1, w0, #0x1
   19854:	ldr	x2, [sp, #32]
   19858:	ldr	w3, [sp, #28]
   1985c:	mov	x0, #0x1200                	// #4608
   19860:	add	x0, x3, x0
   19864:	lsl	x0, x0, #2
   19868:	add	x0, x2, x0
   1986c:	str	w1, [x0, #8]
   19870:	ldr	x1, [sp, #32]
   19874:	ldr	w2, [sp, #28]
   19878:	mov	x0, #0x1200                	// #4608
   1987c:	add	x0, x2, x0
   19880:	lsl	x0, x0, #2
   19884:	add	x0, x1, x0
   19888:	ldr	w0, [x0, #8]
   1988c:	cmp	w0, #0x0
   19890:	b.ne	198a0 <lzma_lzma_preset@@XZ_5.0+0x12bc>  // b.any
   19894:	ldr	w1, [sp, #28]
   19898:	ldr	x0, [sp, #32]
   1989c:	bl	194e0 <lzma_lzma_preset@@XZ_5.0+0xefc>
   198a0:	nop
   198a4:	ldp	x29, x30, [sp], #48
   198a8:	ret
   198ac:	stp	x29, x30, [sp, #-80]!
   198b0:	mov	x29, sp
   198b4:	str	x0, [sp, #40]
   198b8:	str	w1, [sp, #36]
   198bc:	str	w2, [sp, #32]
   198c0:	str	w3, [sp, #28]
   198c4:	ldr	x0, [sp, #40]
   198c8:	ldr	w0, [x0, #736]
   198cc:	cmp	w0, #0x6
   198d0:	b.hi	198dc <lzma_lzma_preset@@XZ_5.0+0x12f8>  // b.pmore
   198d4:	mov	w0, #0x7                   	// #7
   198d8:	b	198e0 <lzma_lzma_preset@@XZ_5.0+0x12fc>
   198dc:	mov	w0, #0xa                   	// #10
   198e0:	ldr	x1, [sp, #40]
   198e4:	str	w0, [x1, #736]
   198e8:	ldr	x5, [sp, #40]
   198ec:	ldr	x1, [sp, #40]
   198f0:	mov	x0, #0x7200                	// #29184
   198f4:	add	x1, x1, x0
   198f8:	ldr	x0, [sp, #40]
   198fc:	ldrb	w0, [x0, #2956]
   19900:	mov	w4, w0
   19904:	ldr	w3, [sp, #28]
   19908:	ldr	w2, [sp, #36]
   1990c:	mov	x0, x5
   19910:	bl	196f8 <lzma_lzma_preset@@XZ_5.0+0x1114>
   19914:	ldr	w0, [sp, #32]
   19918:	bl	191dc <lzma_lzma_preset@@XZ_5.0+0xbf8>
   1991c:	str	w0, [sp, #76]
   19920:	ldr	w2, [sp, #28]
   19924:	ldr	w1, [sp, #28]
   19928:	mov	w0, #0x5                   	// #5
   1992c:	cmp	w2, #0x5
   19930:	csel	w0, w1, w0, ls  // ls = plast
   19934:	sub	w0, w0, #0x2
   19938:	str	w0, [sp, #72]
   1993c:	ldr	x4, [sp, #40]
   19940:	ldr	w0, [sp, #72]
   19944:	lsl	x1, x0, #7
   19948:	mov	x0, #0x6ef0                	// #28400
   1994c:	add	x0, x1, x0
   19950:	ldr	x1, [sp, #40]
   19954:	add	x0, x1, x0
   19958:	add	x0, x0, #0xc
   1995c:	ldr	w3, [sp, #76]
   19960:	mov	w2, #0x6                   	// #6
   19964:	mov	x1, x0
   19968:	mov	x0, x4
   1996c:	bl	18aa0 <lzma_lzma_preset@@XZ_5.0+0x4bc>
   19970:	ldr	w0, [sp, #76]
   19974:	cmp	w0, #0x3
   19978:	b.ls	19a64 <lzma_lzma_preset@@XZ_5.0+0x1480>  // b.plast
   1997c:	ldr	w0, [sp, #76]
   19980:	lsr	w0, w0, #1
   19984:	sub	w0, w0, #0x1
   19988:	str	w0, [sp, #68]
   1998c:	ldr	w0, [sp, #76]
   19990:	and	w0, w0, #0x1
   19994:	orr	w1, w0, #0x2
   19998:	ldr	w0, [sp, #68]
   1999c:	lsl	w0, w1, w0
   199a0:	str	w0, [sp, #64]
   199a4:	ldr	w1, [sp, #32]
   199a8:	ldr	w0, [sp, #64]
   199ac:	sub	w0, w1, w0
   199b0:	str	w0, [sp, #60]
   199b4:	ldr	w0, [sp, #76]
   199b8:	cmp	w0, #0xd
   199bc:	b.hi	19a00 <lzma_lzma_preset@@XZ_5.0+0x141c>  // b.pmore
   199c0:	ldr	x4, [sp, #40]
   199c4:	ldr	x1, [sp, #40]
   199c8:	mov	x0, #0x70fc                	// #28924
   199cc:	add	x1, x1, x0
   199d0:	ldr	w2, [sp, #64]
   199d4:	ldr	w0, [sp, #76]
   199d8:	sub	x0, x2, x0
   199dc:	lsl	x0, x0, #1
   199e0:	sub	x0, x0, #0x2
   199e4:	add	x0, x1, x0
   199e8:	ldr	w3, [sp, #60]
   199ec:	ldr	w2, [sp, #68]
   199f0:	mov	x1, x0
   199f4:	mov	x0, x4
   199f8:	bl	18b30 <lzma_lzma_preset@@XZ_5.0+0x54c>
   199fc:	b	19a64 <lzma_lzma_preset@@XZ_5.0+0x1480>
   19a00:	ldr	x3, [sp, #40]
   19a04:	ldr	w0, [sp, #60]
   19a08:	lsr	w1, w0, #4
   19a0c:	ldr	w0, [sp, #68]
   19a10:	sub	w0, w0, #0x4
   19a14:	mov	w2, w0
   19a18:	mov	x0, x3
   19a1c:	bl	18bc4 <lzma_lzma_preset@@XZ_5.0+0x5e0>
   19a20:	ldr	x4, [sp, #40]
   19a24:	ldr	x1, [sp, #40]
   19a28:	mov	x0, #0x71e0                	// #29152
   19a2c:	add	x1, x1, x0
   19a30:	ldr	w0, [sp, #60]
   19a34:	and	w0, w0, #0xf
   19a38:	mov	w3, w0
   19a3c:	mov	w2, #0x4                   	// #4
   19a40:	mov	x0, x4
   19a44:	bl	18b30 <lzma_lzma_preset@@XZ_5.0+0x54c>
   19a48:	ldr	x0, [sp, #40]
   19a4c:	add	x0, x0, #0x10, lsl #12
   19a50:	ldr	w0, [x0, #3800]
   19a54:	add	w1, w0, #0x1
   19a58:	ldr	x0, [sp, #40]
   19a5c:	add	x0, x0, #0x10, lsl #12
   19a60:	str	w1, [x0, #3800]
   19a64:	ldr	x0, [sp, #40]
   19a68:	ldr	w1, [x0, #748]
   19a6c:	ldr	x0, [sp, #40]
   19a70:	str	w1, [x0, #752]
   19a74:	ldr	x0, [sp, #40]
   19a78:	ldr	w1, [x0, #744]
   19a7c:	ldr	x0, [sp, #40]
   19a80:	str	w1, [x0, #748]
   19a84:	ldr	x0, [sp, #40]
   19a88:	ldr	w1, [x0, #740]
   19a8c:	ldr	x0, [sp, #40]
   19a90:	str	w1, [x0, #744]
   19a94:	ldr	x0, [sp, #40]
   19a98:	ldr	w1, [sp, #32]
   19a9c:	str	w1, [x0, #740]
   19aa0:	ldr	x0, [sp, #40]
   19aa4:	add	x0, x0, #0x10, lsl #12
   19aa8:	ldr	w0, [x0, #3732]
   19aac:	add	w1, w0, #0x1
   19ab0:	ldr	x0, [sp, #40]
   19ab4:	add	x0, x0, #0x10, lsl #12
   19ab8:	str	w1, [x0, #3732]
   19abc:	nop
   19ac0:	ldp	x29, x30, [sp], #80
   19ac4:	ret
   19ac8:	stp	x29, x30, [sp, #-64]!
   19acc:	mov	x29, sp
   19ad0:	str	x0, [sp, #40]
   19ad4:	str	w1, [sp, #36]
   19ad8:	str	w2, [sp, #32]
   19adc:	str	w3, [sp, #28]
   19ae0:	ldr	w0, [sp, #32]
   19ae4:	cmp	w0, #0x0
   19ae8:	b.ne	19b78 <lzma_lzma_preset@@XZ_5.0+0x1594>  // b.any
   19aec:	ldr	x3, [sp, #40]
   19af0:	ldr	x0, [sp, #40]
   19af4:	ldr	w0, [x0, #736]
   19af8:	mov	w1, w0
   19afc:	mov	x0, #0x3698                	// #13976
   19b00:	add	x0, x1, x0
   19b04:	lsl	x0, x0, #1
   19b08:	ldr	x1, [sp, #40]
   19b0c:	add	x0, x1, x0
   19b10:	add	x0, x0, #0x4
   19b14:	mov	w2, #0x0                   	// #0
   19b18:	mov	x1, x0
   19b1c:	mov	x0, x3
   19b20:	bl	18a38 <lzma_lzma_preset@@XZ_5.0+0x454>
   19b24:	ldr	x3, [sp, #40]
   19b28:	ldr	x0, [sp, #40]
   19b2c:	ldr	w0, [x0, #736]
   19b30:	ldr	w1, [sp, #36]
   19b34:	mov	w0, w0
   19b38:	lsl	x0, x0, #4
   19b3c:	add	x1, x1, x0
   19b40:	mov	x0, #0x36b8                	// #14008
   19b44:	add	x0, x1, x0
   19b48:	lsl	x0, x0, #1
   19b4c:	ldr	x1, [sp, #40]
   19b50:	add	x0, x1, x0
   19b54:	add	x1, x0, #0xc
   19b58:	ldr	w0, [sp, #28]
   19b5c:	cmp	w0, #0x1
   19b60:	cset	w0, ne  // ne = any
   19b64:	and	w0, w0, #0xff
   19b68:	mov	w2, w0
   19b6c:	mov	x0, x3
   19b70:	bl	18a38 <lzma_lzma_preset@@XZ_5.0+0x454>
   19b74:	b	19cd0 <lzma_lzma_preset@@XZ_5.0+0x16ec>
   19b78:	ldr	x1, [sp, #40]
   19b7c:	ldr	w0, [sp, #32]
   19b80:	add	x0, x0, #0xb8
   19b84:	lsl	x0, x0, #2
   19b88:	add	x0, x1, x0
   19b8c:	ldr	w0, [x0, #4]
   19b90:	str	w0, [sp, #60]
   19b94:	ldr	x3, [sp, #40]
   19b98:	ldr	x0, [sp, #40]
   19b9c:	ldr	w0, [x0, #736]
   19ba0:	mov	w1, w0
   19ba4:	mov	x0, #0x3698                	// #13976
   19ba8:	add	x0, x1, x0
   19bac:	lsl	x0, x0, #1
   19bb0:	ldr	x1, [sp, #40]
   19bb4:	add	x0, x1, x0
   19bb8:	add	x0, x0, #0x4
   19bbc:	mov	w2, #0x1                   	// #1
   19bc0:	mov	x1, x0
   19bc4:	mov	x0, x3
   19bc8:	bl	18a38 <lzma_lzma_preset@@XZ_5.0+0x454>
   19bcc:	ldr	w0, [sp, #32]
   19bd0:	cmp	w0, #0x1
   19bd4:	b.ne	19c14 <lzma_lzma_preset@@XZ_5.0+0x1630>  // b.any
   19bd8:	ldr	x3, [sp, #40]
   19bdc:	ldr	x0, [sp, #40]
   19be0:	ldr	w0, [x0, #736]
   19be4:	mov	w1, w0
   19be8:	mov	x0, #0x36a0                	// #13984
   19bec:	add	x0, x1, x0
   19bf0:	lsl	x0, x0, #1
   19bf4:	ldr	x1, [sp, #40]
   19bf8:	add	x0, x1, x0
   19bfc:	add	x0, x0, #0xc
   19c00:	mov	w2, #0x0                   	// #0
   19c04:	mov	x1, x0
   19c08:	mov	x0, x3
   19c0c:	bl	18a38 <lzma_lzma_preset@@XZ_5.0+0x454>
   19c10:	b	19cb4 <lzma_lzma_preset@@XZ_5.0+0x16d0>
   19c14:	ldr	x3, [sp, #40]
   19c18:	ldr	x0, [sp, #40]
   19c1c:	ldr	w0, [x0, #736]
   19c20:	mov	w1, w0
   19c24:	mov	x0, #0x36a0                	// #13984
   19c28:	add	x0, x1, x0
   19c2c:	lsl	x0, x0, #1
   19c30:	ldr	x1, [sp, #40]
   19c34:	add	x0, x1, x0
   19c38:	add	x0, x0, #0xc
   19c3c:	mov	w2, #0x1                   	// #1
   19c40:	mov	x1, x0
   19c44:	mov	x0, x3
   19c48:	bl	18a38 <lzma_lzma_preset@@XZ_5.0+0x454>
   19c4c:	ldr	x3, [sp, #40]
   19c50:	ldr	x0, [sp, #40]
   19c54:	ldr	w0, [x0, #736]
   19c58:	mov	w1, w0
   19c5c:	mov	x0, #0x36b0                	// #14000
   19c60:	add	x0, x1, x0
   19c64:	lsl	x0, x0, #1
   19c68:	ldr	x1, [sp, #40]
   19c6c:	add	x0, x1, x0
   19c70:	add	x1, x0, #0x4
   19c74:	ldr	w0, [sp, #32]
   19c78:	sub	w0, w0, #0x2
   19c7c:	mov	w2, w0
   19c80:	mov	x0, x3
   19c84:	bl	18a38 <lzma_lzma_preset@@XZ_5.0+0x454>
   19c88:	ldr	w0, [sp, #32]
   19c8c:	cmp	w0, #0x3
   19c90:	b.ne	19ca4 <lzma_lzma_preset@@XZ_5.0+0x16c0>  // b.any
   19c94:	ldr	x0, [sp, #40]
   19c98:	ldr	w1, [x0, #748]
   19c9c:	ldr	x0, [sp, #40]
   19ca0:	str	w1, [x0, #752]
   19ca4:	ldr	x0, [sp, #40]
   19ca8:	ldr	w1, [x0, #744]
   19cac:	ldr	x0, [sp, #40]
   19cb0:	str	w1, [x0, #748]
   19cb4:	ldr	x0, [sp, #40]
   19cb8:	ldr	w1, [x0, #740]
   19cbc:	ldr	x0, [sp, #40]
   19cc0:	str	w1, [x0, #744]
   19cc4:	ldr	x0, [sp, #40]
   19cc8:	ldr	w1, [sp, #60]
   19ccc:	str	w1, [x0, #740]
   19cd0:	ldr	w0, [sp, #28]
   19cd4:	cmp	w0, #0x1
   19cd8:	b.ne	19d04 <lzma_lzma_preset@@XZ_5.0+0x1720>  // b.any
   19cdc:	ldr	x0, [sp, #40]
   19ce0:	ldr	w0, [x0, #736]
   19ce4:	cmp	w0, #0x6
   19ce8:	b.hi	19cf4 <lzma_lzma_preset@@XZ_5.0+0x1710>  // b.pmore
   19cec:	mov	w0, #0x9                   	// #9
   19cf0:	b	19cf8 <lzma_lzma_preset@@XZ_5.0+0x1714>
   19cf4:	mov	w0, #0xb                   	// #11
   19cf8:	ldr	x1, [sp, #40]
   19cfc:	str	w0, [x1, #736]
   19d00:	b	19d54 <lzma_lzma_preset@@XZ_5.0+0x1770>
   19d04:	ldr	x5, [sp, #40]
   19d08:	ldr	x1, [sp, #40]
   19d0c:	mov	x0, #0xba48                	// #47688
   19d10:	add	x1, x1, x0
   19d14:	ldr	x0, [sp, #40]
   19d18:	ldrb	w0, [x0, #2956]
   19d1c:	mov	w4, w0
   19d20:	ldr	w3, [sp, #28]
   19d24:	ldr	w2, [sp, #36]
   19d28:	mov	x0, x5
   19d2c:	bl	196f8 <lzma_lzma_preset@@XZ_5.0+0x1114>
   19d30:	ldr	x0, [sp, #40]
   19d34:	ldr	w0, [x0, #736]
   19d38:	cmp	w0, #0x6
   19d3c:	b.hi	19d48 <lzma_lzma_preset@@XZ_5.0+0x1764>  // b.pmore
   19d40:	mov	w0, #0x8                   	// #8
   19d44:	b	19d4c <lzma_lzma_preset@@XZ_5.0+0x1768>
   19d48:	mov	w0, #0xb                   	// #11
   19d4c:	ldr	x1, [sp, #40]
   19d50:	str	w0, [x1, #736]
   19d54:	nop
   19d58:	ldp	x29, x30, [sp], #64
   19d5c:	ret
   19d60:	stp	x29, x30, [sp, #-64]!
   19d64:	mov	x29, sp
   19d68:	str	x0, [sp, #40]
   19d6c:	str	x1, [sp, #32]
   19d70:	str	w2, [sp, #28]
   19d74:	str	w3, [sp, #24]
   19d78:	str	w4, [sp, #20]
   19d7c:	ldr	x0, [sp, #40]
   19d80:	ldr	w0, [x0, #2960]
   19d84:	ldr	w1, [sp, #20]
   19d88:	and	w0, w1, w0
   19d8c:	str	w0, [sp, #60]
   19d90:	ldr	w0, [sp, #28]
   19d94:	cmn	w0, #0x1
   19d98:	b.ne	19df4 <lzma_lzma_preset@@XZ_5.0+0x1810>  // b.any
   19d9c:	ldr	x3, [sp, #40]
   19da0:	ldr	x0, [sp, #40]
   19da4:	ldr	w0, [x0, #736]
   19da8:	ldr	w1, [sp, #60]
   19dac:	mov	w0, w0
   19db0:	lsl	x0, x0, #4
   19db4:	add	x1, x1, x0
   19db8:	mov	x0, #0x35c8                	// #13768
   19dbc:	add	x0, x1, x0
   19dc0:	lsl	x0, x0, #1
   19dc4:	ldr	x1, [sp, #40]
   19dc8:	add	x0, x1, x0
   19dcc:	add	x0, x0, #0xc
   19dd0:	mov	w2, #0x0                   	// #0
   19dd4:	mov	x1, x0
   19dd8:	mov	x0, x3
   19ddc:	bl	18a38 <lzma_lzma_preset@@XZ_5.0+0x454>
   19de0:	ldr	w2, [sp, #20]
   19de4:	ldr	x1, [sp, #32]
   19de8:	ldr	x0, [sp, #40]
   19dec:	bl	19338 <lzma_lzma_preset@@XZ_5.0+0xd54>
   19df0:	b	19ee8 <lzma_lzma_preset@@XZ_5.0+0x1904>
   19df4:	ldr	x3, [sp, #40]
   19df8:	ldr	x0, [sp, #40]
   19dfc:	ldr	w0, [x0, #736]
   19e00:	ldr	w1, [sp, #60]
   19e04:	mov	w0, w0
   19e08:	lsl	x0, x0, #4
   19e0c:	add	x1, x1, x0
   19e10:	mov	x0, #0x35c8                	// #13768
   19e14:	add	x0, x1, x0
   19e18:	lsl	x0, x0, #1
   19e1c:	ldr	x1, [sp, #40]
   19e20:	add	x0, x1, x0
   19e24:	add	x0, x0, #0xc
   19e28:	mov	w2, #0x1                   	// #1
   19e2c:	mov	x1, x0
   19e30:	mov	x0, x3
   19e34:	bl	18a38 <lzma_lzma_preset@@XZ_5.0+0x454>
   19e38:	ldr	w0, [sp, #28]
   19e3c:	cmp	w0, #0x3
   19e40:	b.hi	19e94 <lzma_lzma_preset@@XZ_5.0+0x18b0>  // b.pmore
   19e44:	ldr	x3, [sp, #40]
   19e48:	ldr	x0, [sp, #40]
   19e4c:	ldr	w0, [x0, #736]
   19e50:	mov	w1, w0
   19e54:	mov	x0, #0x3688                	// #13960
   19e58:	add	x0, x1, x0
   19e5c:	lsl	x0, x0, #1
   19e60:	ldr	x1, [sp, #40]
   19e64:	add	x0, x1, x0
   19e68:	add	x0, x0, #0xc
   19e6c:	mov	w2, #0x1                   	// #1
   19e70:	mov	x1, x0
   19e74:	mov	x0, x3
   19e78:	bl	18a38 <lzma_lzma_preset@@XZ_5.0+0x454>
   19e7c:	ldr	w3, [sp, #24]
   19e80:	ldr	w2, [sp, #28]
   19e84:	ldr	w1, [sp, #60]
   19e88:	ldr	x0, [sp, #40]
   19e8c:	bl	19ac8 <lzma_lzma_preset@@XZ_5.0+0x14e4>
   19e90:	b	19ee8 <lzma_lzma_preset@@XZ_5.0+0x1904>
   19e94:	ldr	x3, [sp, #40]
   19e98:	ldr	x0, [sp, #40]
   19e9c:	ldr	w0, [x0, #736]
   19ea0:	mov	w1, w0
   19ea4:	mov	x0, #0x3688                	// #13960
   19ea8:	add	x0, x1, x0
   19eac:	lsl	x0, x0, #1
   19eb0:	ldr	x1, [sp, #40]
   19eb4:	add	x0, x1, x0
   19eb8:	add	x0, x0, #0xc
   19ebc:	mov	w2, #0x0                   	// #0
   19ec0:	mov	x1, x0
   19ec4:	mov	x0, x3
   19ec8:	bl	18a38 <lzma_lzma_preset@@XZ_5.0+0x454>
   19ecc:	ldr	w0, [sp, #28]
   19ed0:	sub	w0, w0, #0x4
   19ed4:	ldr	w3, [sp, #24]
   19ed8:	mov	w2, w0
   19edc:	ldr	w1, [sp, #60]
   19ee0:	ldr	x0, [sp, #40]
   19ee4:	bl	198ac <lzma_lzma_preset@@XZ_5.0+0x12c8>
   19ee8:	ldr	x0, [sp, #32]
   19eec:	ldr	w1, [x0, #28]
   19ef0:	ldr	w0, [sp, #24]
   19ef4:	sub	w1, w1, w0
   19ef8:	ldr	x0, [sp, #32]
   19efc:	str	w1, [x0, #28]
   19f00:	nop
   19f04:	ldp	x29, x30, [sp], #64
   19f08:	ret
   19f0c:	stp	x29, x30, [sp, #-32]!
   19f10:	mov	x29, sp
   19f14:	str	x0, [sp, #24]
   19f18:	str	x1, [sp, #16]
   19f1c:	ldr	x0, [sp, #16]
   19f20:	ldr	w1, [x0, #24]
   19f24:	ldr	x0, [sp, #16]
   19f28:	ldr	w0, [x0, #32]
   19f2c:	cmp	w1, w0
   19f30:	b.ne	19f4c <lzma_lzma_preset@@XZ_5.0+0x1968>  // b.any
   19f34:	ldr	x0, [sp, #16]
   19f38:	ldr	w0, [x0, #104]
   19f3c:	cmp	w0, #0x0
   19f40:	b.ne	19fa8 <lzma_lzma_preset@@XZ_5.0+0x19c4>  // b.any
   19f44:	mov	w0, #0x0                   	// #0
   19f48:	b	19fb8 <lzma_lzma_preset@@XZ_5.0+0x19d4>
   19f4c:	mov	w1, #0x1                   	// #1
   19f50:	ldr	x0, [sp, #16]
   19f54:	bl	18868 <lzma_lzma_preset@@XZ_5.0+0x284>
   19f58:	ldr	x0, [sp, #16]
   19f5c:	str	wzr, [x0, #28]
   19f60:	ldr	x3, [sp, #24]
   19f64:	ldr	x1, [sp, #24]
   19f68:	mov	x0, #0x6b9c                	// #27548
   19f6c:	add	x0, x1, x0
   19f70:	mov	w2, #0x0                   	// #0
   19f74:	mov	x1, x0
   19f78:	mov	x0, x3
   19f7c:	bl	18a38 <lzma_lzma_preset@@XZ_5.0+0x454>
   19f80:	ldr	x4, [sp, #24]
   19f84:	ldr	x0, [sp, #24]
   19f88:	add	x1, x0, #0xb9c
   19f8c:	ldr	x0, [sp, #16]
   19f90:	ldr	x0, [x0]
   19f94:	ldrb	w0, [x0]
   19f98:	mov	w3, w0
   19f9c:	mov	w2, #0x8                   	// #8
   19fa0:	mov	x0, x4
   19fa4:	bl	18aa0 <lzma_lzma_preset@@XZ_5.0+0x4bc>
   19fa8:	ldr	x0, [sp, #24]
   19fac:	mov	w1, #0x1                   	// #1
   19fb0:	strb	w1, [x0, #2957]
   19fb4:	mov	w0, #0x1                   	// #1
   19fb8:	ldp	x29, x30, [sp], #32
   19fbc:	ret
   19fc0:	stp	x29, x30, [sp, #-48]!
   19fc4:	mov	x29, sp
   19fc8:	str	x0, [sp, #24]
   19fcc:	str	w1, [sp, #20]
   19fd0:	ldr	x0, [sp, #24]
   19fd4:	ldr	w0, [x0, #2960]
   19fd8:	ldr	w1, [sp, #20]
   19fdc:	and	w0, w1, w0
   19fe0:	str	w0, [sp, #44]
   19fe4:	ldr	x3, [sp, #24]
   19fe8:	ldr	x0, [sp, #24]
   19fec:	ldr	w0, [x0, #736]
   19ff0:	ldr	w1, [sp, #44]
   19ff4:	mov	w0, w0
   19ff8:	lsl	x0, x0, #4
   19ffc:	add	x1, x1, x0
   1a000:	mov	x0, #0x35c8                	// #13768
   1a004:	add	x0, x1, x0
   1a008:	lsl	x0, x0, #1
   1a00c:	ldr	x1, [sp, #24]
   1a010:	add	x0, x1, x0
   1a014:	add	x0, x0, #0xc
   1a018:	mov	w2, #0x1                   	// #1
   1a01c:	mov	x1, x0
   1a020:	mov	x0, x3
   1a024:	bl	18a38 <lzma_lzma_preset@@XZ_5.0+0x454>
   1a028:	ldr	x3, [sp, #24]
   1a02c:	ldr	x0, [sp, #24]
   1a030:	ldr	w0, [x0, #736]
   1a034:	mov	w1, w0
   1a038:	mov	x0, #0x3688                	// #13960
   1a03c:	add	x0, x1, x0
   1a040:	lsl	x0, x0, #1
   1a044:	ldr	x1, [sp, #24]
   1a048:	add	x0, x1, x0
   1a04c:	add	x0, x0, #0xc
   1a050:	mov	w2, #0x0                   	// #0
   1a054:	mov	x1, x0
   1a058:	mov	x0, x3
   1a05c:	bl	18a38 <lzma_lzma_preset@@XZ_5.0+0x454>
   1a060:	mov	w3, #0x2                   	// #2
   1a064:	mov	w2, #0xffffffff            	// #-1
   1a068:	ldr	w1, [sp, #44]
   1a06c:	ldr	x0, [sp, #24]
   1a070:	bl	198ac <lzma_lzma_preset@@XZ_5.0+0x12c8>
   1a074:	nop
   1a078:	ldp	x29, x30, [sp], #48
   1a07c:	ret
   1a080:	stp	x29, x30, [sp, #-96]!
   1a084:	mov	x29, sp
   1a088:	str	x19, [sp, #16]
   1a08c:	str	x0, [sp, #72]
   1a090:	str	x1, [sp, #64]
   1a094:	str	x2, [sp, #56]
   1a098:	str	x3, [sp, #48]
   1a09c:	str	x4, [sp, #40]
   1a0a0:	str	w5, [sp, #36]
   1a0a4:	ldr	x0, [sp, #72]
   1a0a8:	ldrb	w0, [x0, #2957]
   1a0ac:	eor	w0, w0, #0x1
   1a0b0:	and	w0, w0, #0xff
   1a0b4:	cmp	w0, #0x0
   1a0b8:	b.eq	1a0e4 <lzma_lzma_preset@@XZ_5.0+0x1b00>  // b.none
   1a0bc:	ldr	x1, [sp, #64]
   1a0c0:	ldr	x0, [sp, #72]
   1a0c4:	bl	19f0c <lzma_lzma_preset@@XZ_5.0+0x1928>
   1a0c8:	and	w0, w0, #0xff
   1a0cc:	eor	w0, w0, #0x1
   1a0d0:	and	w0, w0, #0xff
   1a0d4:	cmp	w0, #0x0
   1a0d8:	b.eq	1a0e4 <lzma_lzma_preset@@XZ_5.0+0x1b00>  // b.none
   1a0dc:	mov	w0, #0x0                   	// #0
   1a0e0:	b	1a2a4 <lzma_lzma_preset@@XZ_5.0+0x1cc0>
   1a0e4:	ldr	x0, [sp, #64]
   1a0e8:	bl	18844 <lzma_lzma_preset@@XZ_5.0+0x260>
   1a0ec:	str	w0, [sp, #92]
   1a0f0:	ldr	x0, [sp, #72]
   1a0f4:	ldr	x3, [sp, #40]
   1a0f8:	ldr	x2, [sp, #48]
   1a0fc:	ldr	x1, [sp, #56]
   1a100:	bl	18dc0 <lzma_lzma_preset@@XZ_5.0+0x7dc>
   1a104:	and	w0, w0, #0xff
   1a108:	cmp	w0, #0x0
   1a10c:	b.eq	1a118 <lzma_lzma_preset@@XZ_5.0+0x1b34>  // b.none
   1a110:	mov	w0, #0x0                   	// #0
   1a114:	b	1a2a4 <lzma_lzma_preset@@XZ_5.0+0x1cc0>
   1a118:	ldr	w0, [sp, #36]
   1a11c:	cmn	w0, #0x1
   1a120:	b.eq	1a164 <lzma_lzma_preset@@XZ_5.0+0x1b80>  // b.none
   1a124:	ldr	x0, [sp, #64]
   1a128:	ldr	w1, [x0, #24]
   1a12c:	ldr	x0, [sp, #64]
   1a130:	ldr	w0, [x0, #28]
   1a134:	sub	w0, w1, w0
   1a138:	ldr	w1, [sp, #36]
   1a13c:	cmp	w1, w0
   1a140:	b.ls	1a22c <lzma_lzma_preset@@XZ_5.0+0x1c48>  // b.plast
   1a144:	ldr	x0, [sp, #48]
   1a148:	ldr	x19, [x0]
   1a14c:	ldr	x0, [sp, #72]
   1a150:	bl	190ac <lzma_lzma_preset@@XZ_5.0+0xac8>
   1a154:	add	x1, x19, x0
   1a158:	mov	x0, #0xeffe                	// #61438
   1a15c:	cmp	x1, x0
   1a160:	b.hi	1a22c <lzma_lzma_preset@@XZ_5.0+0x1c48>  // b.pmore
   1a164:	ldr	x0, [sp, #64]
   1a168:	ldr	w1, [x0, #24]
   1a16c:	ldr	x0, [sp, #64]
   1a170:	ldr	w0, [x0, #32]
   1a174:	cmp	w1, w0
   1a178:	b.cc	1a1a4 <lzma_lzma_preset@@XZ_5.0+0x1bc0>  // b.lo, b.ul, b.last
   1a17c:	ldr	x0, [sp, #64]
   1a180:	ldr	w0, [x0, #104]
   1a184:	cmp	w0, #0x0
   1a188:	b.ne	1a194 <lzma_lzma_preset@@XZ_5.0+0x1bb0>  // b.any
   1a18c:	mov	w0, #0x0                   	// #0
   1a190:	b	1a2a4 <lzma_lzma_preset@@XZ_5.0+0x1cc0>
   1a194:	ldr	x0, [sp, #64]
   1a198:	ldr	w0, [x0, #28]
   1a19c:	cmp	w0, #0x0
   1a1a0:	b.eq	1a228 <lzma_lzma_preset@@XZ_5.0+0x1c44>  // b.none
   1a1a4:	ldr	x0, [sp, #72]
   1a1a8:	ldrb	w0, [x0, #2956]
   1a1ac:	cmp	w0, #0x0
   1a1b0:	b.eq	1a1d4 <lzma_lzma_preset@@XZ_5.0+0x1bf0>  // b.none
   1a1b4:	add	x1, sp, #0x58
   1a1b8:	add	x0, sp, #0x54
   1a1bc:	mov	x3, x1
   1a1c0:	mov	x2, x0
   1a1c4:	ldr	x1, [sp, #64]
   1a1c8:	ldr	x0, [sp, #72]
   1a1cc:	bl	1ad70 <lzma_mode_is_supported@@XZ_5.0+0xd8>
   1a1d0:	b	1a1f4 <lzma_lzma_preset@@XZ_5.0+0x1c10>
   1a1d4:	add	x1, sp, #0x58
   1a1d8:	add	x0, sp, #0x54
   1a1dc:	ldr	w4, [sp, #92]
   1a1e0:	mov	x3, x1
   1a1e4:	mov	x2, x0
   1a1e8:	ldr	x1, [sp, #64]
   1a1ec:	ldr	x0, [sp, #72]
   1a1f0:	bl	1ea84 <lzma_mode_is_supported@@XZ_5.0+0x3dec>
   1a1f4:	ldr	w0, [sp, #84]
   1a1f8:	ldr	w1, [sp, #88]
   1a1fc:	ldr	w4, [sp, #92]
   1a200:	mov	w3, w1
   1a204:	mov	w2, w0
   1a208:	ldr	x1, [sp, #64]
   1a20c:	ldr	x0, [sp, #72]
   1a210:	bl	19d60 <lzma_lzma_preset@@XZ_5.0+0x177c>
   1a214:	ldr	w0, [sp, #88]
   1a218:	ldr	w1, [sp, #92]
   1a21c:	add	w0, w1, w0
   1a220:	str	w0, [sp, #92]
   1a224:	b	1a0f0 <lzma_lzma_preset@@XZ_5.0+0x1b0c>
   1a228:	nop
   1a22c:	ldr	x0, [sp, #72]
   1a230:	ldrb	w0, [x0, #2958]
   1a234:	eor	w0, w0, #0x1
   1a238:	and	w0, w0, #0xff
   1a23c:	cmp	w0, #0x0
   1a240:	b.eq	1a298 <lzma_lzma_preset@@XZ_5.0+0x1cb4>  // b.none
   1a244:	ldr	x0, [sp, #72]
   1a248:	mov	w1, #0x1                   	// #1
   1a24c:	strb	w1, [x0, #2958]
   1a250:	ldr	w0, [sp, #36]
   1a254:	cmn	w0, #0x1
   1a258:	b.ne	1a268 <lzma_lzma_preset@@XZ_5.0+0x1c84>  // b.any
   1a25c:	ldr	w1, [sp, #92]
   1a260:	ldr	x0, [sp, #72]
   1a264:	bl	19fc0 <lzma_lzma_preset@@XZ_5.0+0x19dc>
   1a268:	ldr	x0, [sp, #72]
   1a26c:	bl	18c38 <lzma_lzma_preset@@XZ_5.0+0x654>
   1a270:	ldr	x0, [sp, #72]
   1a274:	ldr	x3, [sp, #40]
   1a278:	ldr	x2, [sp, #48]
   1a27c:	ldr	x1, [sp, #56]
   1a280:	bl	18dc0 <lzma_lzma_preset@@XZ_5.0+0x7dc>
   1a284:	and	w0, w0, #0xff
   1a288:	cmp	w0, #0x0
   1a28c:	b.eq	1a298 <lzma_lzma_preset@@XZ_5.0+0x1cb4>  // b.none
   1a290:	mov	w0, #0x0                   	// #0
   1a294:	b	1a2a4 <lzma_lzma_preset@@XZ_5.0+0x1cc0>
   1a298:	ldr	x0, [sp, #72]
   1a29c:	strb	wzr, [x0, #2958]
   1a2a0:	mov	w0, #0x1                   	// #1
   1a2a4:	ldr	x19, [sp, #16]
   1a2a8:	ldp	x29, x30, [sp], #96
   1a2ac:	ret
   1a2b0:	stp	x29, x30, [sp, #-64]!
   1a2b4:	mov	x29, sp
   1a2b8:	str	x0, [sp, #56]
   1a2bc:	str	x1, [sp, #48]
   1a2c0:	str	x2, [sp, #40]
   1a2c4:	str	x3, [sp, #32]
   1a2c8:	str	x4, [sp, #24]
   1a2cc:	ldr	x0, [sp, #48]
   1a2d0:	ldr	w0, [x0, #104]
   1a2d4:	cmp	w0, #0x1
   1a2d8:	cset	w0, eq  // eq = none
   1a2dc:	and	w0, w0, #0xff
   1a2e0:	and	x0, x0, #0xff
   1a2e4:	cmp	x0, #0x0
   1a2e8:	b.eq	1a2f4 <lzma_lzma_preset@@XZ_5.0+0x1d10>  // b.none
   1a2ec:	mov	w0, #0x8                   	// #8
   1a2f0:	b	1a310 <lzma_lzma_preset@@XZ_5.0+0x1d2c>
   1a2f4:	mov	w5, #0xffffffff            	// #-1
   1a2f8:	ldr	x4, [sp, #24]
   1a2fc:	ldr	x3, [sp, #32]
   1a300:	ldr	x2, [sp, #40]
   1a304:	ldr	x1, [sp, #48]
   1a308:	ldr	x0, [sp, #56]
   1a30c:	bl	1a080 <lzma_lzma_preset@@XZ_5.0+0x1a9c>
   1a310:	ldp	x29, x30, [sp], #64
   1a314:	ret
   1a318:	stp	x29, x30, [sp, #-32]!
   1a31c:	mov	x29, sp
   1a320:	str	x0, [sp, #24]
   1a324:	ldr	x0, [sp, #24]
   1a328:	bl	190c8 <lzma_lzma_preset@@XZ_5.0+0xae4>
   1a32c:	and	w0, w0, #0xff
   1a330:	cmp	w0, #0x0
   1a334:	b.eq	1a380 <lzma_lzma_preset@@XZ_5.0+0x1d9c>  // b.none
   1a338:	ldr	x0, [sp, #24]
   1a33c:	ldr	w0, [x0, #36]
   1a340:	cmp	w0, #0x1
   1a344:	b.ls	1a380 <lzma_lzma_preset@@XZ_5.0+0x1d9c>  // b.plast
   1a348:	ldr	x0, [sp, #24]
   1a34c:	ldr	w0, [x0, #36]
   1a350:	cmp	w0, #0x111
   1a354:	b.hi	1a380 <lzma_lzma_preset@@XZ_5.0+0x1d9c>  // b.pmore
   1a358:	ldr	x0, [sp, #24]
   1a35c:	ldr	w0, [x0, #32]
   1a360:	cmp	w0, #0x1
   1a364:	b.eq	1a378 <lzma_lzma_preset@@XZ_5.0+0x1d94>  // b.none
   1a368:	ldr	x0, [sp, #24]
   1a36c:	ldr	w0, [x0, #32]
   1a370:	cmp	w0, #0x2
   1a374:	b.ne	1a380 <lzma_lzma_preset@@XZ_5.0+0x1d9c>  // b.any
   1a378:	mov	w0, #0x1                   	// #1
   1a37c:	b	1a384 <lzma_lzma_preset@@XZ_5.0+0x1da0>
   1a380:	mov	w0, #0x0                   	// #0
   1a384:	and	w0, w0, #0x1
   1a388:	and	w0, w0, #0xff
   1a38c:	ldp	x29, x30, [sp], #32
   1a390:	ret
   1a394:	sub	sp, sp, #0x10
   1a398:	str	x0, [sp, #8]
   1a39c:	str	x1, [sp]
   1a3a0:	ldr	x0, [sp, #8]
   1a3a4:	mov	x1, #0x1000                	// #4096
   1a3a8:	str	x1, [x0]
   1a3ac:	ldr	x0, [sp]
   1a3b0:	ldr	w0, [x0]
   1a3b4:	mov	w1, w0
   1a3b8:	ldr	x0, [sp, #8]
   1a3bc:	str	x1, [x0, #8]
   1a3c0:	ldr	x0, [sp, #8]
   1a3c4:	mov	x1, #0x1001                	// #4097
   1a3c8:	str	x1, [x0, #16]
   1a3cc:	ldr	x0, [sp, #8]
   1a3d0:	mov	x1, #0x111                 	// #273
   1a3d4:	str	x1, [x0, #24]
   1a3d8:	ldr	x0, [sp]
   1a3dc:	ldr	w0, [x0, #36]
   1a3e0:	mov	w1, w0
   1a3e4:	ldr	x0, [sp, #8]
   1a3e8:	str	x1, [x0, #32]
   1a3ec:	ldr	x0, [sp]
   1a3f0:	ldr	w1, [x0, #40]
   1a3f4:	ldr	x0, [sp, #8]
   1a3f8:	str	w1, [x0, #40]
   1a3fc:	ldr	x0, [sp]
   1a400:	ldr	w1, [x0, #44]
   1a404:	ldr	x0, [sp, #8]
   1a408:	str	w1, [x0, #44]
   1a40c:	ldr	x0, [sp]
   1a410:	ldr	x1, [x0, #8]
   1a414:	ldr	x0, [sp, #8]
   1a418:	str	x1, [x0, #48]
   1a41c:	ldr	x0, [sp]
   1a420:	ldr	w1, [x0, #16]
   1a424:	ldr	x0, [sp, #8]
   1a428:	str	w1, [x0, #56]
   1a42c:	nop
   1a430:	add	sp, sp, #0x10
   1a434:	ret
   1a438:	stp	x29, x30, [sp, #-64]!
   1a43c:	mov	x29, sp
   1a440:	str	x0, [sp, #24]
   1a444:	str	w1, [sp, #20]
   1a448:	strb	w2, [sp, #19]
   1a44c:	ldr	x0, [sp, #24]
   1a450:	mov	w1, #0x400                 	// #1024
   1a454:	strh	w1, [x0]
   1a458:	ldr	x0, [sp, #24]
   1a45c:	mov	w1, #0x400                 	// #1024
   1a460:	strh	w1, [x0, #2]
   1a464:	str	xzr, [sp, #56]
   1a468:	b	1a504 <lzma_lzma_preset@@XZ_5.0+0x1f20>
   1a46c:	str	wzr, [sp, #52]
   1a470:	b	1a4a4 <lzma_lzma_preset@@XZ_5.0+0x1ec0>
   1a474:	ldr	x1, [sp, #24]
   1a478:	ldr	w0, [sp, #52]
   1a47c:	ldr	x2, [sp, #56]
   1a480:	lsl	x2, x2, #3
   1a484:	add	x0, x2, x0
   1a488:	lsl	x0, x0, #1
   1a48c:	add	x0, x1, x0
   1a490:	mov	w1, #0x400                 	// #1024
   1a494:	strh	w1, [x0, #4]
   1a498:	ldr	w0, [sp, #52]
   1a49c:	add	w0, w0, #0x1
   1a4a0:	str	w0, [sp, #52]
   1a4a4:	ldr	w0, [sp, #52]
   1a4a8:	cmp	w0, #0x7
   1a4ac:	b.ls	1a474 <lzma_lzma_preset@@XZ_5.0+0x1e90>  // b.plast
   1a4b0:	str	wzr, [sp, #48]
   1a4b4:	b	1a4ec <lzma_lzma_preset@@XZ_5.0+0x1f08>
   1a4b8:	ldr	x1, [sp, #24]
   1a4bc:	ldr	w0, [sp, #48]
   1a4c0:	ldr	x2, [sp, #56]
   1a4c4:	lsl	x2, x2, #3
   1a4c8:	add	x0, x2, x0
   1a4cc:	add	x0, x0, #0x80
   1a4d0:	lsl	x0, x0, #1
   1a4d4:	add	x0, x1, x0
   1a4d8:	mov	w1, #0x400                 	// #1024
   1a4dc:	strh	w1, [x0, #4]
   1a4e0:	ldr	w0, [sp, #48]
   1a4e4:	add	w0, w0, #0x1
   1a4e8:	str	w0, [sp, #48]
   1a4ec:	ldr	w0, [sp, #48]
   1a4f0:	cmp	w0, #0x7
   1a4f4:	b.ls	1a4b8 <lzma_lzma_preset@@XZ_5.0+0x1ed4>  // b.plast
   1a4f8:	ldr	x0, [sp, #56]
   1a4fc:	add	x0, x0, #0x1
   1a500:	str	x0, [sp, #56]
   1a504:	ldr	w0, [sp, #20]
   1a508:	ldr	x1, [sp, #56]
   1a50c:	cmp	x1, x0
   1a510:	b.cc	1a46c <lzma_lzma_preset@@XZ_5.0+0x1e88>  // b.lo, b.ul, b.last
   1a514:	str	wzr, [sp, #44]
   1a518:	b	1a544 <lzma_lzma_preset@@XZ_5.0+0x1f60>
   1a51c:	ldr	x1, [sp, #24]
   1a520:	ldr	w0, [sp, #44]
   1a524:	add	x0, x0, #0x100
   1a528:	lsl	x0, x0, #1
   1a52c:	add	x0, x1, x0
   1a530:	mov	w1, #0x400                 	// #1024
   1a534:	strh	w1, [x0, #4]
   1a538:	ldr	w0, [sp, #44]
   1a53c:	add	w0, w0, #0x1
   1a540:	str	w0, [sp, #44]
   1a544:	ldr	w0, [sp, #44]
   1a548:	cmp	w0, #0xff
   1a54c:	b.ls	1a51c <lzma_lzma_preset@@XZ_5.0+0x1f38>  // b.plast
   1a550:	ldrb	w0, [sp, #19]
   1a554:	eor	w0, w0, #0x1
   1a558:	and	w0, w0, #0xff
   1a55c:	cmp	w0, #0x0
   1a560:	b.eq	1a598 <lzma_lzma_preset@@XZ_5.0+0x1fb4>  // b.none
   1a564:	str	wzr, [sp, #40]
   1a568:	b	1a584 <lzma_lzma_preset@@XZ_5.0+0x1fa0>
   1a56c:	ldr	w1, [sp, #40]
   1a570:	ldr	x0, [sp, #24]
   1a574:	bl	194e0 <lzma_lzma_preset@@XZ_5.0+0xefc>
   1a578:	ldr	w0, [sp, #40]
   1a57c:	add	w0, w0, #0x1
   1a580:	str	w0, [sp, #40]
   1a584:	ldr	w1, [sp, #40]
   1a588:	ldr	w0, [sp, #20]
   1a58c:	cmp	w1, w0
   1a590:	b.cc	1a56c <lzma_lzma_preset@@XZ_5.0+0x1f88>  // b.lo, b.ul, b.last
   1a594:	nop
   1a598:	nop
   1a59c:	ldp	x29, x30, [sp], #64
   1a5a0:	ret
   1a5a4:	stp	x29, x30, [sp, #-80]!
   1a5a8:	mov	x29, sp
   1a5ac:	str	x0, [sp, #24]
   1a5b0:	str	x1, [sp, #16]
   1a5b4:	ldr	x0, [sp, #16]
   1a5b8:	bl	1a318 <lzma_lzma_preset@@XZ_5.0+0x1d34>
   1a5bc:	and	w0, w0, #0xff
   1a5c0:	eor	w0, w0, #0x1
   1a5c4:	and	w0, w0, #0xff
   1a5c8:	cmp	w0, #0x0
   1a5cc:	b.eq	1a5d8 <lzma_lzma_preset@@XZ_5.0+0x1ff4>  // b.none
   1a5d0:	mov	w0, #0x8                   	// #8
   1a5d4:	b	1a930 <lzma_lzma_preset@@XZ_5.0+0x234c>
   1a5d8:	ldr	x0, [sp, #16]
   1a5dc:	ldr	w0, [x0, #28]
   1a5e0:	mov	w1, #0x1                   	// #1
   1a5e4:	lsl	w0, w1, w0
   1a5e8:	sub	w1, w0, #0x1
   1a5ec:	ldr	x0, [sp, #24]
   1a5f0:	str	w1, [x0, #2960]
   1a5f4:	ldr	x0, [sp, #16]
   1a5f8:	ldr	w1, [x0, #20]
   1a5fc:	ldr	x0, [sp, #24]
   1a600:	str	w1, [x0, #2964]
   1a604:	ldr	x0, [sp, #16]
   1a608:	ldr	w0, [x0, #24]
   1a60c:	mov	w1, #0x1                   	// #1
   1a610:	lsl	w0, w1, w0
   1a614:	sub	w1, w0, #0x1
   1a618:	ldr	x0, [sp, #24]
   1a61c:	str	w1, [x0, #2968]
   1a620:	ldr	x0, [sp, #24]
   1a624:	bl	189ec <lzma_lzma_preset@@XZ_5.0+0x408>
   1a628:	ldr	x0, [sp, #24]
   1a62c:	str	wzr, [x0, #736]
   1a630:	str	xzr, [sp, #72]
   1a634:	b	1a65c <lzma_lzma_preset@@XZ_5.0+0x2078>
   1a638:	ldr	x1, [sp, #24]
   1a63c:	ldr	x0, [sp, #72]
   1a640:	add	x0, x0, #0xb8
   1a644:	lsl	x0, x0, #2
   1a648:	add	x0, x1, x0
   1a64c:	str	wzr, [x0, #4]
   1a650:	ldr	x0, [sp, #72]
   1a654:	add	x0, x0, #0x1
   1a658:	str	x0, [sp, #72]
   1a65c:	ldr	x0, [sp, #72]
   1a660:	cmp	x0, #0x3
   1a664:	b.ls	1a638 <lzma_lzma_preset@@XZ_5.0+0x2054>  // b.plast
   1a668:	ldr	x0, [sp, #24]
   1a66c:	add	x3, x0, #0xb9c
   1a670:	ldr	x0, [sp, #16]
   1a674:	ldr	w1, [x0, #20]
   1a678:	ldr	x0, [sp, #16]
   1a67c:	ldr	w0, [x0, #24]
   1a680:	mov	w2, w0
   1a684:	mov	x0, x3
   1a688:	bl	19138 <lzma_lzma_preset@@XZ_5.0+0xb54>
   1a68c:	str	xzr, [sp, #64]
   1a690:	b	1a7a4 <lzma_lzma_preset@@XZ_5.0+0x21c0>
   1a694:	str	xzr, [sp, #56]
   1a698:	b	1a700 <lzma_lzma_preset@@XZ_5.0+0x211c>
   1a69c:	ldr	x1, [sp, #24]
   1a6a0:	ldr	x0, [sp, #64]
   1a6a4:	lsl	x2, x0, #4
   1a6a8:	ldr	x0, [sp, #56]
   1a6ac:	add	x2, x2, x0
   1a6b0:	mov	x0, #0x35c8                	// #13768
   1a6b4:	add	x0, x2, x0
   1a6b8:	lsl	x0, x0, #1
   1a6bc:	add	x0, x1, x0
   1a6c0:	mov	w1, #0x400                 	// #1024
   1a6c4:	strh	w1, [x0, #12]
   1a6c8:	ldr	x1, [sp, #24]
   1a6cc:	ldr	x0, [sp, #64]
   1a6d0:	lsl	x2, x0, #4
   1a6d4:	ldr	x0, [sp, #56]
   1a6d8:	add	x2, x2, x0
   1a6dc:	mov	x0, #0x36b8                	// #14008
   1a6e0:	add	x0, x2, x0
   1a6e4:	lsl	x0, x0, #1
   1a6e8:	add	x0, x1, x0
   1a6ec:	mov	w1, #0x400                 	// #1024
   1a6f0:	strh	w1, [x0, #12]
   1a6f4:	ldr	x0, [sp, #56]
   1a6f8:	add	x0, x0, #0x1
   1a6fc:	str	x0, [sp, #56]
   1a700:	ldr	x0, [sp, #24]
   1a704:	ldr	w0, [x0, #2960]
   1a708:	mov	w0, w0
   1a70c:	ldr	x1, [sp, #56]
   1a710:	cmp	x1, x0
   1a714:	b.ls	1a69c <lzma_lzma_preset@@XZ_5.0+0x20b8>  // b.plast
   1a718:	ldr	x1, [sp, #24]
   1a71c:	ldr	x2, [sp, #64]
   1a720:	mov	x0, #0x3688                	// #13960
   1a724:	add	x0, x2, x0
   1a728:	lsl	x0, x0, #1
   1a72c:	add	x0, x1, x0
   1a730:	mov	w1, #0x400                 	// #1024
   1a734:	strh	w1, [x0, #12]
   1a738:	ldr	x1, [sp, #24]
   1a73c:	ldr	x2, [sp, #64]
   1a740:	mov	x0, #0x3698                	// #13976
   1a744:	add	x0, x2, x0
   1a748:	lsl	x0, x0, #1
   1a74c:	add	x0, x1, x0
   1a750:	mov	w1, #0x400                 	// #1024
   1a754:	strh	w1, [x0, #4]
   1a758:	ldr	x1, [sp, #24]
   1a75c:	ldr	x2, [sp, #64]
   1a760:	mov	x0, #0x36a0                	// #13984
   1a764:	add	x0, x2, x0
   1a768:	lsl	x0, x0, #1
   1a76c:	add	x0, x1, x0
   1a770:	mov	w1, #0x400                 	// #1024
   1a774:	strh	w1, [x0, #12]
   1a778:	ldr	x1, [sp, #24]
   1a77c:	ldr	x2, [sp, #64]
   1a780:	mov	x0, #0x36b0                	// #14000
   1a784:	add	x0, x2, x0
   1a788:	lsl	x0, x0, #1
   1a78c:	add	x0, x1, x0
   1a790:	mov	w1, #0x400                 	// #1024
   1a794:	strh	w1, [x0, #4]
   1a798:	ldr	x0, [sp, #64]
   1a79c:	add	x0, x0, #0x1
   1a7a0:	str	x0, [sp, #64]
   1a7a4:	ldr	x0, [sp, #64]
   1a7a8:	cmp	x0, #0xb
   1a7ac:	b.ls	1a694 <lzma_lzma_preset@@XZ_5.0+0x20b0>  // b.plast
   1a7b0:	str	xzr, [sp, #48]
   1a7b4:	b	1a7e4 <lzma_lzma_preset@@XZ_5.0+0x2200>
   1a7b8:	ldr	x1, [sp, #24]
   1a7bc:	ldr	x2, [sp, #48]
   1a7c0:	mov	x0, #0x3878                	// #14456
   1a7c4:	add	x0, x2, x0
   1a7c8:	lsl	x0, x0, #1
   1a7cc:	add	x0, x1, x0
   1a7d0:	mov	w1, #0x400                 	// #1024
   1a7d4:	strh	w1, [x0, #12]
   1a7d8:	ldr	x0, [sp, #48]
   1a7dc:	add	x0, x0, #0x1
   1a7e0:	str	x0, [sp, #48]
   1a7e4:	ldr	x0, [sp, #48]
   1a7e8:	cmp	x0, #0x71
   1a7ec:	b.ls	1a7b8 <lzma_lzma_preset@@XZ_5.0+0x21d4>  // b.plast
   1a7f0:	str	xzr, [sp, #40]
   1a7f4:	b	1a850 <lzma_lzma_preset@@XZ_5.0+0x226c>
   1a7f8:	str	wzr, [sp, #36]
   1a7fc:	b	1a838 <lzma_lzma_preset@@XZ_5.0+0x2254>
   1a800:	ldr	x1, [sp, #24]
   1a804:	ldr	w0, [sp, #36]
   1a808:	ldr	x2, [sp, #40]
   1a80c:	lsl	x2, x2, #6
   1a810:	add	x2, x2, x0
   1a814:	mov	x0, #0x3778                	// #14200
   1a818:	add	x0, x2, x0
   1a81c:	lsl	x0, x0, #1
   1a820:	add	x0, x1, x0
   1a824:	mov	w1, #0x400                 	// #1024
   1a828:	strh	w1, [x0, #12]
   1a82c:	ldr	w0, [sp, #36]
   1a830:	add	w0, w0, #0x1
   1a834:	str	w0, [sp, #36]
   1a838:	ldr	w0, [sp, #36]
   1a83c:	cmp	w0, #0x3f
   1a840:	b.ls	1a800 <lzma_lzma_preset@@XZ_5.0+0x221c>  // b.plast
   1a844:	ldr	x0, [sp, #40]
   1a848:	add	x0, x0, #0x1
   1a84c:	str	x0, [sp, #40]
   1a850:	ldr	x0, [sp, #40]
   1a854:	cmp	x0, #0x3
   1a858:	b.ls	1a7f8 <lzma_lzma_preset@@XZ_5.0+0x2214>  // b.plast
   1a85c:	str	wzr, [sp, #32]
   1a860:	b	1a888 <lzma_lzma_preset@@XZ_5.0+0x22a4>
   1a864:	ldr	x0, [sp, #24]
   1a868:	ldr	w2, [sp, #32]
   1a86c:	mov	x1, #0x38f0                	// #14576
   1a870:	add	x1, x2, x1
   1a874:	mov	w2, #0x400                 	// #1024
   1a878:	strh	w2, [x0, x1, lsl #1]
   1a87c:	ldr	w0, [sp, #32]
   1a880:	add	w0, w0, #0x1
   1a884:	str	w0, [sp, #32]
   1a888:	ldr	w0, [sp, #32]
   1a88c:	cmp	w0, #0xf
   1a890:	b.ls	1a864 <lzma_lzma_preset@@XZ_5.0+0x2280>  // b.plast
   1a894:	ldr	x1, [sp, #24]
   1a898:	mov	x0, #0x7200                	// #29184
   1a89c:	add	x3, x1, x0
   1a8a0:	ldr	x0, [sp, #16]
   1a8a4:	ldr	w0, [x0, #28]
   1a8a8:	mov	w1, #0x1                   	// #1
   1a8ac:	lsl	w1, w1, w0
   1a8b0:	ldr	x0, [sp, #24]
   1a8b4:	ldrb	w0, [x0, #2956]
   1a8b8:	mov	w2, w0
   1a8bc:	mov	x0, x3
   1a8c0:	bl	1a438 <lzma_lzma_preset@@XZ_5.0+0x1e54>
   1a8c4:	ldr	x1, [sp, #24]
   1a8c8:	mov	x0, #0xba48                	// #47688
   1a8cc:	add	x3, x1, x0
   1a8d0:	ldr	x0, [sp, #16]
   1a8d4:	ldr	w0, [x0, #28]
   1a8d8:	mov	w1, #0x1                   	// #1
   1a8dc:	lsl	w1, w1, w0
   1a8e0:	ldr	x0, [sp, #24]
   1a8e4:	ldrb	w0, [x0, #2956]
   1a8e8:	mov	w2, w0
   1a8ec:	mov	x0, x3
   1a8f0:	bl	1a438 <lzma_lzma_preset@@XZ_5.0+0x1e54>
   1a8f4:	ldr	x0, [sp, #24]
   1a8f8:	add	x0, x0, #0x10, lsl #12
   1a8fc:	mov	w1, #0x7fffffff            	// #2147483647
   1a900:	str	w1, [x0, #3732]
   1a904:	ldr	x0, [sp, #24]
   1a908:	add	x0, x0, #0x10, lsl #12
   1a90c:	mov	w1, #0x7fffffff            	// #2147483647
   1a910:	str	w1, [x0, #3800]
   1a914:	ldr	x0, [sp, #24]
   1a918:	add	x0, x0, #0x10, lsl #12
   1a91c:	str	wzr, [x0, #3804]
   1a920:	ldr	x0, [sp, #24]
   1a924:	add	x0, x0, #0x10, lsl #12
   1a928:	str	wzr, [x0, #3808]
   1a92c:	mov	w0, #0x0                   	// #0
   1a930:	ldp	x29, x30, [sp], #80
   1a934:	ret
   1a938:	stp	x29, x30, [sp, #-64]!
   1a93c:	mov	x29, sp
   1a940:	str	x0, [sp, #40]
   1a944:	str	x1, [sp, #32]
   1a948:	str	x2, [sp, #24]
   1a94c:	str	x3, [sp, #16]
   1a950:	ldr	x0, [sp, #40]
   1a954:	ldr	x0, [x0]
   1a958:	cmp	x0, #0x0
   1a95c:	b.ne	1a994 <lzma_lzma_preset@@XZ_5.0+0x23b0>  // b.any
   1a960:	ldr	x1, [sp, #32]
   1a964:	mov	x0, #0xcee8                	// #52968
   1a968:	movk	x0, #0x3, lsl #16
   1a96c:	bl	36fc <lzma_version_string@@XZ_5.0+0xc>
   1a970:	mov	x1, x0
   1a974:	ldr	x0, [sp, #40]
   1a978:	str	x1, [x0]
   1a97c:	ldr	x0, [sp, #40]
   1a980:	ldr	x0, [x0]
   1a984:	cmp	x0, #0x0
   1a988:	b.ne	1a994 <lzma_lzma_preset@@XZ_5.0+0x23b0>  // b.any
   1a98c:	mov	w0, #0x5                   	// #5
   1a990:	b	1aab0 <lzma_lzma_preset@@XZ_5.0+0x24cc>
   1a994:	ldr	x0, [sp, #40]
   1a998:	ldr	x0, [x0]
   1a99c:	str	x0, [sp, #48]
   1a9a0:	ldr	x0, [sp, #24]
   1a9a4:	ldr	w0, [x0, #32]
   1a9a8:	cmp	w0, #0x1
   1a9ac:	b.eq	1a9bc <lzma_lzma_preset@@XZ_5.0+0x23d8>  // b.none
   1a9b0:	cmp	w0, #0x2
   1a9b4:	b.eq	1a9cc <lzma_lzma_preset@@XZ_5.0+0x23e8>  // b.none
   1a9b8:	b	1aa4c <lzma_lzma_preset@@XZ_5.0+0x2468>
   1a9bc:	ldr	x0, [sp, #48]
   1a9c0:	mov	w1, #0x1                   	// #1
   1a9c4:	strb	w1, [x0, #2956]
   1a9c8:	b	1aa54 <lzma_lzma_preset@@XZ_5.0+0x2470>
   1a9cc:	ldr	x0, [sp, #48]
   1a9d0:	strb	wzr, [x0, #2956]
   1a9d4:	str	wzr, [sp, #60]
   1a9d8:	b	1a9e8 <lzma_lzma_preset@@XZ_5.0+0x2404>
   1a9dc:	ldr	w0, [sp, #60]
   1a9e0:	add	w0, w0, #0x1
   1a9e4:	str	w0, [sp, #60]
   1a9e8:	ldr	w0, [sp, #60]
   1a9ec:	mov	w1, #0x1                   	// #1
   1a9f0:	lsl	w1, w1, w0
   1a9f4:	ldr	x0, [sp, #24]
   1a9f8:	ldr	w0, [x0]
   1a9fc:	cmp	w1, w0
   1aa00:	b.cc	1a9dc <lzma_lzma_preset@@XZ_5.0+0x23f8>  // b.lo, b.ul, b.last
   1aa04:	ldr	w0, [sp, #60]
   1aa08:	lsl	w1, w0, #1
   1aa0c:	ldr	x0, [sp, #48]
   1aa10:	add	x0, x0, #0x10, lsl #12
   1aa14:	str	w1, [x0, #3728]
   1aa18:	ldr	x0, [sp, #24]
   1aa1c:	ldr	w0, [x0, #36]
   1aa20:	sub	w1, w0, #0x1
   1aa24:	ldr	x0, [sp, #48]
   1aa28:	add	x0, x0, #0x8, lsl #12
   1aa2c:	str	w1, [x0, #14852]
   1aa30:	ldr	x0, [sp, #24]
   1aa34:	ldr	w0, [x0, #36]
   1aa38:	sub	w1, w0, #0x1
   1aa3c:	ldr	x0, [sp, #48]
   1aa40:	add	x0, x0, #0x10, lsl #12
   1aa44:	str	w1, [x0, #588]
   1aa48:	b	1aa54 <lzma_lzma_preset@@XZ_5.0+0x2470>
   1aa4c:	mov	w0, #0x8                   	// #8
   1aa50:	b	1aab0 <lzma_lzma_preset@@XZ_5.0+0x24cc>
   1aa54:	ldr	x0, [sp, #24]
   1aa58:	ldr	x0, [x0, #8]
   1aa5c:	cmp	x0, #0x0
   1aa60:	b.eq	1aa7c <lzma_lzma_preset@@XZ_5.0+0x2498>  // b.none
   1aa64:	ldr	x0, [sp, #24]
   1aa68:	ldr	w0, [x0, #16]
   1aa6c:	cmp	w0, #0x0
   1aa70:	b.eq	1aa7c <lzma_lzma_preset@@XZ_5.0+0x2498>  // b.none
   1aa74:	mov	w0, #0x1                   	// #1
   1aa78:	b	1aa80 <lzma_lzma_preset@@XZ_5.0+0x249c>
   1aa7c:	mov	w0, #0x0                   	// #0
   1aa80:	and	w0, w0, #0x1
   1aa84:	and	w1, w0, #0xff
   1aa88:	ldr	x0, [sp, #48]
   1aa8c:	strb	w1, [x0, #2957]
   1aa90:	ldr	x0, [sp, #48]
   1aa94:	strb	wzr, [x0, #2958]
   1aa98:	ldr	x1, [sp, #24]
   1aa9c:	ldr	x0, [sp, #16]
   1aaa0:	bl	1a394 <lzma_lzma_preset@@XZ_5.0+0x1db0>
   1aaa4:	ldr	x1, [sp, #24]
   1aaa8:	ldr	x0, [sp, #48]
   1aaac:	bl	1a5a4 <lzma_lzma_preset@@XZ_5.0+0x1fc0>
   1aab0:	ldp	x29, x30, [sp], #64
   1aab4:	ret
   1aab8:	stp	x29, x30, [sp, #-48]!
   1aabc:	mov	x29, sp
   1aac0:	str	x0, [sp, #40]
   1aac4:	str	x1, [sp, #32]
   1aac8:	str	x2, [sp, #24]
   1aacc:	str	x3, [sp, #16]
   1aad0:	ldr	x0, [sp, #40]
   1aad4:	adrp	x1, 1a000 <lzma_lzma_preset@@XZ_5.0+0x1a1c>
   1aad8:	add	x1, x1, #0x2b0
   1aadc:	str	x1, [x0, #8]
   1aae0:	ldr	x0, [sp, #40]
   1aae4:	ldr	x3, [sp, #16]
   1aae8:	ldr	x2, [sp, #24]
   1aaec:	ldr	x1, [sp, #32]
   1aaf0:	bl	1a938 <lzma_lzma_preset@@XZ_5.0+0x2354>
   1aaf4:	ldp	x29, x30, [sp], #48
   1aaf8:	ret
   1aafc:	stp	x29, x30, [sp, #-48]!
   1ab00:	mov	x29, sp
   1ab04:	str	x0, [sp, #40]
   1ab08:	str	x1, [sp, #32]
   1ab0c:	str	x2, [sp, #24]
   1ab10:	adrp	x0, 1a000 <lzma_lzma_preset@@XZ_5.0+0x1a1c>
   1ab14:	add	x3, x0, #0xab8
   1ab18:	ldr	x2, [sp, #24]
   1ab1c:	ldr	x1, [sp, #32]
   1ab20:	ldr	x0, [sp, #40]
   1ab24:	bl	156a4 <lzma_crc64@@XZ_5.0+0x3874>
   1ab28:	ldp	x29, x30, [sp], #48
   1ab2c:	ret
   1ab30:	stp	x29, x30, [sp, #-112]!
   1ab34:	mov	x29, sp
   1ab38:	str	x0, [sp, #24]
   1ab3c:	ldr	x0, [sp, #24]
   1ab40:	bl	1a318 <lzma_lzma_preset@@XZ_5.0+0x1d34>
   1ab44:	and	w0, w0, #0xff
   1ab48:	eor	w0, w0, #0x1
   1ab4c:	and	w0, w0, #0xff
   1ab50:	cmp	w0, #0x0
   1ab54:	b.eq	1ab60 <lzma_lzma_preset@@XZ_5.0+0x257c>  // b.none
   1ab58:	mov	x0, #0xffffffffffffffff    	// #-1
   1ab5c:	b	1ab9c <lzma_lzma_preset@@XZ_5.0+0x25b8>
   1ab60:	add	x0, sp, #0x28
   1ab64:	ldr	x1, [sp, #24]
   1ab68:	bl	1a394 <lzma_lzma_preset@@XZ_5.0+0x1db0>
   1ab6c:	add	x0, sp, #0x28
   1ab70:	bl	154e8 <lzma_crc64@@XZ_5.0+0x36b8>
   1ab74:	str	x0, [sp, #104]
   1ab78:	ldr	x0, [sp, #104]
   1ab7c:	cmn	x0, #0x1
   1ab80:	b.ne	1ab8c <lzma_lzma_preset@@XZ_5.0+0x25a8>  // b.any
   1ab84:	mov	x0, #0xffffffffffffffff    	// #-1
   1ab88:	b	1ab9c <lzma_lzma_preset@@XZ_5.0+0x25b8>
   1ab8c:	ldr	x1, [sp, #104]
   1ab90:	mov	x0, #0xcee8                	// #52968
   1ab94:	movk	x0, #0x3, lsl #16
   1ab98:	add	x0, x1, x0
   1ab9c:	ldp	x29, x30, [sp], #112
   1aba0:	ret
   1aba4:	stp	x29, x30, [sp, #-32]!
   1aba8:	mov	x29, sp
   1abac:	str	x0, [sp, #24]
   1abb0:	str	x1, [sp, #16]
   1abb4:	ldr	x0, [sp, #24]
   1abb8:	bl	190c8 <lzma_lzma_preset@@XZ_5.0+0xae4>
   1abbc:	and	w0, w0, #0xff
   1abc0:	eor	w0, w0, #0x1
   1abc4:	and	w0, w0, #0xff
   1abc8:	cmp	w0, #0x0
   1abcc:	b.eq	1abd8 <lzma_lzma_preset@@XZ_5.0+0x25f4>  // b.none
   1abd0:	mov	w0, #0x1                   	// #1
   1abd4:	b	1ac30 <lzma_lzma_preset@@XZ_5.0+0x264c>
   1abd8:	ldr	x0, [sp, #24]
   1abdc:	ldr	w1, [x0, #28]
   1abe0:	mov	w0, w1
   1abe4:	lsl	w0, w0, #2
   1abe8:	add	w1, w0, w1
   1abec:	ldr	x0, [sp, #24]
   1abf0:	ldr	w0, [x0, #24]
   1abf4:	add	w0, w1, w0
   1abf8:	and	w0, w0, #0xff
   1abfc:	mov	w1, w0
   1ac00:	mov	w0, w1
   1ac04:	ubfiz	w0, w0, #3, #5
   1ac08:	add	w0, w0, w1
   1ac0c:	and	w1, w0, #0xff
   1ac10:	ldr	x0, [sp, #24]
   1ac14:	ldr	w0, [x0, #20]
   1ac18:	and	w0, w0, #0xff
   1ac1c:	add	w0, w1, w0
   1ac20:	and	w1, w0, #0xff
   1ac24:	ldr	x0, [sp, #16]
   1ac28:	strb	w1, [x0]
   1ac2c:	mov	w0, #0x0                   	// #0
   1ac30:	ldp	x29, x30, [sp], #32
   1ac34:	ret
   1ac38:	stp	x29, x30, [sp, #-48]!
   1ac3c:	mov	x29, sp
   1ac40:	str	x0, [sp, #24]
   1ac44:	str	x1, [sp, #16]
   1ac48:	ldr	x0, [sp, #24]
   1ac4c:	str	x0, [sp, #40]
   1ac50:	ldr	x1, [sp, #16]
   1ac54:	ldr	x0, [sp, #40]
   1ac58:	bl	1aba4 <lzma_lzma_preset@@XZ_5.0+0x25c0>
   1ac5c:	and	w0, w0, #0xff
   1ac60:	cmp	w0, #0x0
   1ac64:	b.eq	1ac70 <lzma_lzma_preset@@XZ_5.0+0x268c>  // b.none
   1ac68:	mov	w0, #0xb                   	// #11
   1ac6c:	b	1ac90 <lzma_lzma_preset@@XZ_5.0+0x26ac>
   1ac70:	ldr	x0, [sp, #16]
   1ac74:	add	x2, x0, #0x1
   1ac78:	ldr	x0, [sp, #40]
   1ac7c:	ldr	w0, [x0]
   1ac80:	mov	w1, w0
   1ac84:	mov	x0, x2
   1ac88:	bl	187d4 <lzma_lzma_preset@@XZ_5.0+0x1f0>
   1ac8c:	mov	w0, #0x0                   	// #0
   1ac90:	ldp	x29, x30, [sp], #48
   1ac94:	ret

000000000001ac98 <lzma_mode_is_supported@@XZ_5.0>:
   1ac98:	sub	sp, sp, #0x10
   1ac9c:	str	w0, [sp, #12]
   1aca0:	ldr	w0, [sp, #12]
   1aca4:	cmp	w0, #0x1
   1aca8:	b.eq	1acb8 <lzma_mode_is_supported@@XZ_5.0+0x20>  // b.none
   1acac:	ldr	w0, [sp, #12]
   1acb0:	cmp	w0, #0x2
   1acb4:	b.ne	1acc0 <lzma_mode_is_supported@@XZ_5.0+0x28>  // b.any
   1acb8:	mov	w0, #0x1                   	// #1
   1acbc:	b	1acc4 <lzma_mode_is_supported@@XZ_5.0+0x2c>
   1acc0:	mov	w0, #0x0                   	// #0
   1acc4:	and	w0, w0, #0xff
   1acc8:	add	sp, sp, #0x10
   1accc:	ret
   1acd0:	sub	sp, sp, #0x10
   1acd4:	str	x0, [sp, #8]
   1acd8:	ldr	x0, [sp, #8]
   1acdc:	ldr	x1, [x0]
   1ace0:	ldr	x0, [sp, #8]
   1ace4:	ldr	w0, [x0, #24]
   1ace8:	mov	w0, w0
   1acec:	add	x0, x1, x0
   1acf0:	add	sp, sp, #0x10
   1acf4:	ret
   1acf8:	sub	sp, sp, #0x10
   1acfc:	str	x0, [sp, #8]
   1ad00:	ldr	x0, [sp, #8]
   1ad04:	ldr	w1, [x0, #36]
   1ad08:	ldr	x0, [sp, #8]
   1ad0c:	ldr	w0, [x0, #24]
   1ad10:	sub	w0, w1, w0
   1ad14:	add	sp, sp, #0x10
   1ad18:	ret
   1ad1c:	stp	x29, x30, [sp, #-32]!
   1ad20:	mov	x29, sp
   1ad24:	str	x0, [sp, #24]
   1ad28:	str	w1, [sp, #20]
   1ad2c:	ldr	w0, [sp, #20]
   1ad30:	cmp	w0, #0x0
   1ad34:	b.eq	1ad64 <lzma_mode_is_supported@@XZ_5.0+0xcc>  // b.none
   1ad38:	ldr	x0, [sp, #24]
   1ad3c:	ldr	x2, [x0, #56]
   1ad40:	ldr	w1, [sp, #20]
   1ad44:	ldr	x0, [sp, #24]
   1ad48:	blr	x2
   1ad4c:	ldr	x0, [sp, #24]
   1ad50:	ldr	w1, [x0, #28]
   1ad54:	ldr	w0, [sp, #20]
   1ad58:	add	w1, w1, w0
   1ad5c:	ldr	x0, [sp, #24]
   1ad60:	str	w1, [x0, #28]
   1ad64:	nop
   1ad68:	ldp	x29, x30, [sp], #32
   1ad6c:	ret
   1ad70:	stp	x29, x30, [sp, #-160]!
   1ad74:	mov	x29, sp
   1ad78:	str	x0, [sp, #40]
   1ad7c:	str	x1, [sp, #32]
   1ad80:	str	x2, [sp, #24]
   1ad84:	str	x3, [sp, #16]
   1ad88:	ldr	x0, [sp, #32]
   1ad8c:	ldr	w0, [x0, #96]
   1ad90:	str	w0, [sp, #132]
   1ad94:	ldr	x0, [sp, #32]
   1ad98:	ldr	w0, [x0, #28]
   1ad9c:	cmp	w0, #0x0
   1ada0:	b.ne	1adc8 <lzma_mode_is_supported@@XZ_5.0+0x130>  // b.any
   1ada4:	ldr	x0, [sp, #40]
   1ada8:	add	x1, x0, #0x2f4
   1adac:	add	x0, sp, #0x3c
   1adb0:	mov	x2, x1
   1adb4:	mov	x1, x0
   1adb8:	ldr	x0, [sp, #32]
   1adbc:	bl	15950 <lzma_mf_is_supported@@XZ_5.0+0xc8>
   1adc0:	str	w0, [sp, #156]
   1adc4:	b	1ade0 <lzma_mode_is_supported@@XZ_5.0+0x148>
   1adc8:	ldr	x0, [sp, #40]
   1adcc:	ldr	w0, [x0, #2952]
   1add0:	str	w0, [sp, #156]
   1add4:	ldr	x0, [sp, #40]
   1add8:	ldr	w0, [x0, #2948]
   1addc:	str	w0, [sp, #60]
   1ade0:	ldr	x0, [sp, #32]
   1ade4:	bl	1acd0 <lzma_mode_is_supported@@XZ_5.0+0x38>
   1ade8:	sub	x0, x0, #0x1
   1adec:	str	x0, [sp, #120]
   1adf0:	ldr	x0, [sp, #32]
   1adf4:	bl	1acf8 <lzma_mode_is_supported@@XZ_5.0+0x60>
   1adf8:	add	w0, w0, #0x1
   1adfc:	cmp	w0, #0x110
   1ae00:	b.hi	1ae14 <lzma_mode_is_supported@@XZ_5.0+0x17c>  // b.pmore
   1ae04:	ldr	x0, [sp, #32]
   1ae08:	bl	1acf8 <lzma_mode_is_supported@@XZ_5.0+0x60>
   1ae0c:	add	w0, w0, #0x1
   1ae10:	b	1ae18 <lzma_mode_is_supported@@XZ_5.0+0x180>
   1ae14:	mov	w0, #0x111                 	// #273
   1ae18:	str	w0, [sp, #116]
   1ae1c:	ldr	w0, [sp, #116]
   1ae20:	cmp	w0, #0x1
   1ae24:	b.hi	1ae44 <lzma_mode_is_supported@@XZ_5.0+0x1ac>  // b.pmore
   1ae28:	ldr	x0, [sp, #24]
   1ae2c:	mov	w1, #0xffffffff            	// #-1
   1ae30:	str	w1, [x0]
   1ae34:	ldr	x0, [sp, #16]
   1ae38:	mov	w1, #0x1                   	// #1
   1ae3c:	str	w1, [x0]
   1ae40:	b	1b3e0 <lzma_mode_is_supported@@XZ_5.0+0x748>
   1ae44:	str	wzr, [sp, #152]
   1ae48:	str	wzr, [sp, #148]
   1ae4c:	str	wzr, [sp, #144]
   1ae50:	b	1af9c <lzma_mode_is_supported@@XZ_5.0+0x304>
   1ae54:	ldr	x1, [sp, #40]
   1ae58:	ldr	w0, [sp, #144]
   1ae5c:	add	x0, x0, #0xb8
   1ae60:	lsl	x0, x0, #2
   1ae64:	add	x0, x1, x0
   1ae68:	ldr	w0, [x0, #4]
   1ae6c:	mov	w0, w0
   1ae70:	mvn	x0, x0
   1ae74:	ldr	x1, [sp, #120]
   1ae78:	add	x0, x1, x0
   1ae7c:	str	x0, [sp, #96]
   1ae80:	ldr	x0, [sp, #120]
   1ae84:	ldrb	w1, [x0]
   1ae88:	ldr	x0, [sp, #96]
   1ae8c:	ldrb	w0, [x0]
   1ae90:	cmp	w1, w0
   1ae94:	b.ne	1af8c <lzma_mode_is_supported@@XZ_5.0+0x2f4>  // b.any
   1ae98:	ldr	x0, [sp, #120]
   1ae9c:	add	x0, x0, #0x1
   1aea0:	ldrb	w1, [x0]
   1aea4:	ldr	x0, [sp, #96]
   1aea8:	add	x0, x0, #0x1
   1aeac:	ldrb	w0, [x0]
   1aeb0:	cmp	w1, w0
   1aeb4:	b.ne	1af8c <lzma_mode_is_supported@@XZ_5.0+0x2f4>  // b.any
   1aeb8:	ldr	x0, [sp, #120]
   1aebc:	str	x0, [sp, #80]
   1aec0:	ldr	x0, [sp, #96]
   1aec4:	str	x0, [sp, #72]
   1aec8:	mov	w0, #0x2                   	// #2
   1aecc:	str	w0, [sp, #68]
   1aed0:	ldr	w0, [sp, #116]
   1aed4:	str	w0, [sp, #64]
   1aed8:	b	1aee8 <lzma_mode_is_supported@@XZ_5.0+0x250>
   1aedc:	ldr	w0, [sp, #68]
   1aee0:	add	w0, w0, #0x1
   1aee4:	str	w0, [sp, #68]
   1aee8:	ldr	w1, [sp, #64]
   1aeec:	ldr	w0, [sp, #68]
   1aef0:	cmp	w1, w0
   1aef4:	b.ls	1af20 <lzma_mode_is_supported@@XZ_5.0+0x288>  // b.plast
   1aef8:	ldr	w0, [sp, #68]
   1aefc:	ldr	x1, [sp, #80]
   1af00:	add	x0, x1, x0
   1af04:	ldrb	w1, [x0]
   1af08:	ldr	w0, [sp, #68]
   1af0c:	ldr	x2, [sp, #72]
   1af10:	add	x0, x2, x0
   1af14:	ldrb	w0, [x0]
   1af18:	cmp	w1, w0
   1af1c:	b.eq	1aedc <lzma_mode_is_supported@@XZ_5.0+0x244>  // b.none
   1af20:	ldr	w0, [sp, #68]
   1af24:	str	w0, [sp, #92]
   1af28:	ldr	w1, [sp, #92]
   1af2c:	ldr	w0, [sp, #132]
   1af30:	cmp	w1, w0
   1af34:	b.cc	1af68 <lzma_mode_is_supported@@XZ_5.0+0x2d0>  // b.lo, b.ul, b.last
   1af38:	ldr	x0, [sp, #24]
   1af3c:	ldr	w1, [sp, #144]
   1af40:	str	w1, [x0]
   1af44:	ldr	x0, [sp, #16]
   1af48:	ldr	w1, [sp, #92]
   1af4c:	str	w1, [x0]
   1af50:	ldr	w0, [sp, #92]
   1af54:	sub	w0, w0, #0x1
   1af58:	mov	w1, w0
   1af5c:	ldr	x0, [sp, #32]
   1af60:	bl	1ad1c <lzma_mode_is_supported@@XZ_5.0+0x84>
   1af64:	b	1b3e0 <lzma_mode_is_supported@@XZ_5.0+0x748>
   1af68:	ldr	w1, [sp, #92]
   1af6c:	ldr	w0, [sp, #152]
   1af70:	cmp	w1, w0
   1af74:	b.ls	1af90 <lzma_mode_is_supported@@XZ_5.0+0x2f8>  // b.plast
   1af78:	ldr	w0, [sp, #144]
   1af7c:	str	w0, [sp, #148]
   1af80:	ldr	w0, [sp, #92]
   1af84:	str	w0, [sp, #152]
   1af88:	b	1af90 <lzma_mode_is_supported@@XZ_5.0+0x2f8>
   1af8c:	nop
   1af90:	ldr	w0, [sp, #144]
   1af94:	add	w0, w0, #0x1
   1af98:	str	w0, [sp, #144]
   1af9c:	ldr	w0, [sp, #144]
   1afa0:	cmp	w0, #0x3
   1afa4:	b.ls	1ae54 <lzma_mode_is_supported@@XZ_5.0+0x1bc>  // b.plast
   1afa8:	ldr	w1, [sp, #156]
   1afac:	ldr	w0, [sp, #132]
   1afb0:	cmp	w1, w0
   1afb4:	b.cc	1b008 <lzma_mode_is_supported@@XZ_5.0+0x370>  // b.lo, b.ul, b.last
   1afb8:	ldr	w0, [sp, #60]
   1afbc:	sub	w0, w0, #0x1
   1afc0:	ldr	x1, [sp, #40]
   1afc4:	mov	w0, w0
   1afc8:	add	x0, x0, #0x5e
   1afcc:	lsl	x0, x0, #3
   1afd0:	add	x0, x1, x0
   1afd4:	ldr	w0, [x0, #8]
   1afd8:	add	w1, w0, #0x4
   1afdc:	ldr	x0, [sp, #24]
   1afe0:	str	w1, [x0]
   1afe4:	ldr	x0, [sp, #16]
   1afe8:	ldr	w1, [sp, #156]
   1afec:	str	w1, [x0]
   1aff0:	ldr	w0, [sp, #156]
   1aff4:	sub	w0, w0, #0x1
   1aff8:	mov	w1, w0
   1affc:	ldr	x0, [sp, #32]
   1b000:	bl	1ad1c <lzma_mode_is_supported@@XZ_5.0+0x84>
   1b004:	b	1b3e0 <lzma_mode_is_supported@@XZ_5.0+0x748>
   1b008:	str	wzr, [sp, #140]
   1b00c:	ldr	w0, [sp, #156]
   1b010:	cmp	w0, #0x1
   1b014:	b.ls	1b128 <lzma_mode_is_supported@@XZ_5.0+0x490>  // b.plast
   1b018:	ldr	w0, [sp, #60]
   1b01c:	sub	w0, w0, #0x1
   1b020:	ldr	x1, [sp, #40]
   1b024:	mov	w0, w0
   1b028:	add	x0, x0, #0x5e
   1b02c:	lsl	x0, x0, #3
   1b030:	add	x0, x1, x0
   1b034:	ldr	w0, [x0, #8]
   1b038:	str	w0, [sp, #140]
   1b03c:	b	1b0c4 <lzma_mode_is_supported@@XZ_5.0+0x42c>
   1b040:	ldr	w0, [sp, #140]
   1b044:	lsr	w1, w0, #7
   1b048:	ldr	w0, [sp, #60]
   1b04c:	sub	w0, w0, #0x2
   1b050:	ldr	x2, [sp, #40]
   1b054:	mov	w0, w0
   1b058:	add	x0, x0, #0x5e
   1b05c:	lsl	x0, x0, #3
   1b060:	add	x0, x2, x0
   1b064:	ldr	w0, [x0, #8]
   1b068:	cmp	w1, w0
   1b06c:	b.ls	1b104 <lzma_mode_is_supported@@XZ_5.0+0x46c>  // b.plast
   1b070:	ldr	w0, [sp, #60]
   1b074:	sub	w0, w0, #0x1
   1b078:	str	w0, [sp, #60]
   1b07c:	ldr	w0, [sp, #60]
   1b080:	sub	w0, w0, #0x1
   1b084:	ldr	x1, [sp, #40]
   1b088:	mov	w0, w0
   1b08c:	add	x0, x0, #0x5e
   1b090:	lsl	x0, x0, #3
   1b094:	add	x0, x1, x0
   1b098:	ldr	w0, [x0, #4]
   1b09c:	str	w0, [sp, #156]
   1b0a0:	ldr	w0, [sp, #60]
   1b0a4:	sub	w0, w0, #0x1
   1b0a8:	ldr	x1, [sp, #40]
   1b0ac:	mov	w0, w0
   1b0b0:	add	x0, x0, #0x5e
   1b0b4:	lsl	x0, x0, #3
   1b0b8:	add	x0, x1, x0
   1b0bc:	ldr	w0, [x0, #8]
   1b0c0:	str	w0, [sp, #140]
   1b0c4:	ldr	w0, [sp, #60]
   1b0c8:	cmp	w0, #0x1
   1b0cc:	b.ls	1b108 <lzma_mode_is_supported@@XZ_5.0+0x470>  // b.plast
   1b0d0:	ldr	w0, [sp, #60]
   1b0d4:	sub	w0, w0, #0x2
   1b0d8:	ldr	x1, [sp, #40]
   1b0dc:	mov	w0, w0
   1b0e0:	add	x0, x0, #0x5e
   1b0e4:	lsl	x0, x0, #3
   1b0e8:	add	x0, x1, x0
   1b0ec:	ldr	w0, [x0, #4]
   1b0f0:	add	w0, w0, #0x1
   1b0f4:	ldr	w1, [sp, #156]
   1b0f8:	cmp	w1, w0
   1b0fc:	b.eq	1b040 <lzma_mode_is_supported@@XZ_5.0+0x3a8>  // b.none
   1b100:	b	1b108 <lzma_mode_is_supported@@XZ_5.0+0x470>
   1b104:	nop
   1b108:	ldr	w0, [sp, #156]
   1b10c:	cmp	w0, #0x2
   1b110:	b.ne	1b128 <lzma_mode_is_supported@@XZ_5.0+0x490>  // b.any
   1b114:	ldr	w0, [sp, #140]
   1b118:	cmp	w0, #0x7f
   1b11c:	b.ls	1b128 <lzma_mode_is_supported@@XZ_5.0+0x490>  // b.plast
   1b120:	mov	w0, #0x1                   	// #1
   1b124:	str	w0, [sp, #156]
   1b128:	ldr	w0, [sp, #152]
   1b12c:	cmp	w0, #0x1
   1b130:	b.ls	1b1b8 <lzma_mode_is_supported@@XZ_5.0+0x520>  // b.plast
   1b134:	ldr	w0, [sp, #152]
   1b138:	add	w0, w0, #0x1
   1b13c:	ldr	w1, [sp, #156]
   1b140:	cmp	w1, w0
   1b144:	b.ls	1b188 <lzma_mode_is_supported@@XZ_5.0+0x4f0>  // b.plast
   1b148:	ldr	w0, [sp, #152]
   1b14c:	add	w0, w0, #0x2
   1b150:	ldr	w1, [sp, #156]
   1b154:	cmp	w1, w0
   1b158:	b.hi	1b168 <lzma_mode_is_supported@@XZ_5.0+0x4d0>  // b.pmore
   1b15c:	ldr	w0, [sp, #140]
   1b160:	cmp	w0, #0x200
   1b164:	b.hi	1b188 <lzma_mode_is_supported@@XZ_5.0+0x4f0>  // b.pmore
   1b168:	ldr	w0, [sp, #152]
   1b16c:	add	w0, w0, #0x3
   1b170:	ldr	w1, [sp, #156]
   1b174:	cmp	w1, w0
   1b178:	b.hi	1b1b8 <lzma_mode_is_supported@@XZ_5.0+0x520>  // b.pmore
   1b17c:	ldr	w0, [sp, #140]
   1b180:	cmp	w0, #0x8, lsl #12
   1b184:	b.ls	1b1b8 <lzma_mode_is_supported@@XZ_5.0+0x520>  // b.plast
   1b188:	ldr	x0, [sp, #24]
   1b18c:	ldr	w1, [sp, #148]
   1b190:	str	w1, [x0]
   1b194:	ldr	x0, [sp, #16]
   1b198:	ldr	w1, [sp, #152]
   1b19c:	str	w1, [x0]
   1b1a0:	ldr	w0, [sp, #152]
   1b1a4:	sub	w0, w0, #0x1
   1b1a8:	mov	w1, w0
   1b1ac:	ldr	x0, [sp, #32]
   1b1b0:	bl	1ad1c <lzma_mode_is_supported@@XZ_5.0+0x84>
   1b1b4:	b	1b3e0 <lzma_mode_is_supported@@XZ_5.0+0x748>
   1b1b8:	ldr	w0, [sp, #156]
   1b1bc:	cmp	w0, #0x1
   1b1c0:	b.ls	1b1d0 <lzma_mode_is_supported@@XZ_5.0+0x538>  // b.plast
   1b1c4:	ldr	w0, [sp, #116]
   1b1c8:	cmp	w0, #0x2
   1b1cc:	b.hi	1b1ec <lzma_mode_is_supported@@XZ_5.0+0x554>  // b.pmore
   1b1d0:	ldr	x0, [sp, #24]
   1b1d4:	mov	w1, #0xffffffff            	// #-1
   1b1d8:	str	w1, [x0]
   1b1dc:	ldr	x0, [sp, #16]
   1b1e0:	mov	w1, #0x1                   	// #1
   1b1e4:	str	w1, [x0]
   1b1e8:	b	1b3e0 <lzma_mode_is_supported@@XZ_5.0+0x748>
   1b1ec:	ldr	x0, [sp, #40]
   1b1f0:	add	x1, x0, #0xb84
   1b1f4:	ldr	x0, [sp, #40]
   1b1f8:	add	x0, x0, #0x2f4
   1b1fc:	mov	x2, x0
   1b200:	ldr	x0, [sp, #32]
   1b204:	bl	15950 <lzma_mf_is_supported@@XZ_5.0+0xc8>
   1b208:	mov	w1, w0
   1b20c:	ldr	x0, [sp, #40]
   1b210:	str	w1, [x0, #2952]
   1b214:	ldr	x0, [sp, #40]
   1b218:	ldr	w0, [x0, #2952]
   1b21c:	cmp	w0, #0x1
   1b220:	b.ls	1b308 <lzma_mode_is_supported@@XZ_5.0+0x670>  // b.plast
   1b224:	ldr	x0, [sp, #40]
   1b228:	ldr	w0, [x0, #2948]
   1b22c:	sub	w0, w0, #0x1
   1b230:	ldr	x1, [sp, #40]
   1b234:	mov	w0, w0
   1b238:	add	x0, x0, #0x5e
   1b23c:	lsl	x0, x0, #3
   1b240:	add	x0, x1, x0
   1b244:	ldr	w0, [x0, #8]
   1b248:	str	w0, [sp, #112]
   1b24c:	ldr	x0, [sp, #40]
   1b250:	ldr	w0, [x0, #2952]
   1b254:	ldr	w1, [sp, #156]
   1b258:	cmp	w1, w0
   1b25c:	b.hi	1b270 <lzma_mode_is_supported@@XZ_5.0+0x5d8>  // b.pmore
   1b260:	ldr	w1, [sp, #112]
   1b264:	ldr	w0, [sp, #140]
   1b268:	cmp	w1, w0
   1b26c:	b.cc	1b2ec <lzma_mode_is_supported@@XZ_5.0+0x654>  // b.lo, b.ul, b.last
   1b270:	ldr	x0, [sp, #40]
   1b274:	ldr	w1, [x0, #2952]
   1b278:	ldr	w0, [sp, #156]
   1b27c:	add	w0, w0, #0x1
   1b280:	cmp	w1, w0
   1b284:	b.ne	1b29c <lzma_mode_is_supported@@XZ_5.0+0x604>  // b.any
   1b288:	ldr	w0, [sp, #112]
   1b28c:	lsr	w0, w0, #7
   1b290:	ldr	w1, [sp, #140]
   1b294:	cmp	w1, w0
   1b298:	b.cs	1b2ec <lzma_mode_is_supported@@XZ_5.0+0x654>  // b.hs, b.nlast
   1b29c:	ldr	x0, [sp, #40]
   1b2a0:	ldr	w1, [x0, #2952]
   1b2a4:	ldr	w0, [sp, #156]
   1b2a8:	add	w0, w0, #0x1
   1b2ac:	cmp	w1, w0
   1b2b0:	b.hi	1b2ec <lzma_mode_is_supported@@XZ_5.0+0x654>  // b.pmore
   1b2b4:	ldr	x0, [sp, #40]
   1b2b8:	ldr	w0, [x0, #2952]
   1b2bc:	add	w0, w0, #0x1
   1b2c0:	ldr	w1, [sp, #156]
   1b2c4:	cmp	w1, w0
   1b2c8:	b.hi	1b308 <lzma_mode_is_supported@@XZ_5.0+0x670>  // b.pmore
   1b2cc:	ldr	w0, [sp, #156]
   1b2d0:	cmp	w0, #0x2
   1b2d4:	b.ls	1b308 <lzma_mode_is_supported@@XZ_5.0+0x670>  // b.plast
   1b2d8:	ldr	w0, [sp, #140]
   1b2dc:	lsr	w0, w0, #7
   1b2e0:	ldr	w1, [sp, #112]
   1b2e4:	cmp	w1, w0
   1b2e8:	b.cs	1b308 <lzma_mode_is_supported@@XZ_5.0+0x670>  // b.hs, b.nlast
   1b2ec:	ldr	x0, [sp, #24]
   1b2f0:	mov	w1, #0xffffffff            	// #-1
   1b2f4:	str	w1, [x0]
   1b2f8:	ldr	x0, [sp, #16]
   1b2fc:	mov	w1, #0x1                   	// #1
   1b300:	str	w1, [x0]
   1b304:	b	1b3e0 <lzma_mode_is_supported@@XZ_5.0+0x748>
   1b308:	ldr	x0, [sp, #120]
   1b30c:	add	x0, x0, #0x1
   1b310:	str	x0, [sp, #120]
   1b314:	ldr	w0, [sp, #156]
   1b318:	sub	w0, w0, #0x1
   1b31c:	mov	w1, #0x2                   	// #2
   1b320:	cmp	w0, #0x2
   1b324:	csel	w0, w0, w1, cs  // cs = hs, nlast
   1b328:	str	w0, [sp, #108]
   1b32c:	str	wzr, [sp, #136]
   1b330:	b	1b3a0 <lzma_mode_is_supported@@XZ_5.0+0x708>
   1b334:	ldr	x1, [sp, #40]
   1b338:	ldr	w0, [sp, #136]
   1b33c:	add	x0, x0, #0xb8
   1b340:	lsl	x0, x0, #2
   1b344:	add	x0, x1, x0
   1b348:	ldr	w0, [x0, #4]
   1b34c:	mov	w0, w0
   1b350:	mvn	x0, x0
   1b354:	ldr	x1, [sp, #120]
   1b358:	add	x0, x1, x0
   1b35c:	ldr	w1, [sp, #108]
   1b360:	mov	x2, x1
   1b364:	mov	x1, x0
   1b368:	ldr	x0, [sp, #120]
   1b36c:	bl	3330 <memcmp@plt>
   1b370:	cmp	w0, #0x0
   1b374:	b.ne	1b394 <lzma_mode_is_supported@@XZ_5.0+0x6fc>  // b.any
   1b378:	ldr	x0, [sp, #24]
   1b37c:	mov	w1, #0xffffffff            	// #-1
   1b380:	str	w1, [x0]
   1b384:	ldr	x0, [sp, #16]
   1b388:	mov	w1, #0x1                   	// #1
   1b38c:	str	w1, [x0]
   1b390:	b	1b3e0 <lzma_mode_is_supported@@XZ_5.0+0x748>
   1b394:	ldr	w0, [sp, #136]
   1b398:	add	w0, w0, #0x1
   1b39c:	str	w0, [sp, #136]
   1b3a0:	ldr	w0, [sp, #136]
   1b3a4:	cmp	w0, #0x3
   1b3a8:	b.ls	1b334 <lzma_mode_is_supported@@XZ_5.0+0x69c>  // b.plast
   1b3ac:	ldr	w0, [sp, #140]
   1b3b0:	add	w1, w0, #0x4
   1b3b4:	ldr	x0, [sp, #24]
   1b3b8:	str	w1, [x0]
   1b3bc:	ldr	x0, [sp, #16]
   1b3c0:	ldr	w1, [sp, #156]
   1b3c4:	str	w1, [x0]
   1b3c8:	ldr	w0, [sp, #156]
   1b3cc:	sub	w0, w0, #0x2
   1b3d0:	mov	w1, w0
   1b3d4:	ldr	x0, [sp, #32]
   1b3d8:	bl	1ad1c <lzma_mode_is_supported@@XZ_5.0+0x84>
   1b3dc:	nop
   1b3e0:	ldp	x29, x30, [sp], #160
   1b3e4:	ret
   1b3e8:	sub	sp, sp, #0x10
   1b3ec:	str	x0, [sp, #8]
   1b3f0:	ldr	x0, [sp, #8]
   1b3f4:	ldr	x1, [x0]
   1b3f8:	ldr	x0, [sp, #8]
   1b3fc:	ldr	w0, [x0, #24]
   1b400:	mov	w0, w0
   1b404:	add	x0, x1, x0
   1b408:	add	sp, sp, #0x10
   1b40c:	ret
   1b410:	sub	sp, sp, #0x10
   1b414:	str	x0, [sp, #8]
   1b418:	ldr	x0, [sp, #8]
   1b41c:	ldr	w1, [x0, #36]
   1b420:	ldr	x0, [sp, #8]
   1b424:	ldr	w0, [x0, #24]
   1b428:	sub	w0, w1, w0
   1b42c:	add	sp, sp, #0x10
   1b430:	ret
   1b434:	stp	x29, x30, [sp, #-32]!
   1b438:	mov	x29, sp
   1b43c:	str	x0, [sp, #24]
   1b440:	str	w1, [sp, #20]
   1b444:	ldr	w0, [sp, #20]
   1b448:	cmp	w0, #0x0
   1b44c:	b.eq	1b47c <lzma_mode_is_supported@@XZ_5.0+0x7e4>  // b.none
   1b450:	ldr	x0, [sp, #24]
   1b454:	ldr	x2, [x0, #56]
   1b458:	ldr	w1, [sp, #20]
   1b45c:	ldr	x0, [sp, #24]
   1b460:	blr	x2
   1b464:	ldr	x0, [sp, #24]
   1b468:	ldr	w1, [x0, #28]
   1b46c:	ldr	w0, [sp, #20]
   1b470:	add	w1, w1, w0
   1b474:	ldr	x0, [sp, #24]
   1b478:	str	w1, [x0, #28]
   1b47c:	nop
   1b480:	ldp	x29, x30, [sp], #32
   1b484:	ret
   1b488:	sub	sp, sp, #0x10
   1b48c:	strh	w0, [sp, #14]
   1b490:	str	w1, [sp, #8]
   1b494:	ldrh	w1, [sp, #14]
   1b498:	ldr	w0, [sp, #8]
   1b49c:	neg	w0, w0
   1b4a0:	and	w0, w0, #0x7ff
   1b4a4:	eor	w0, w1, w0
   1b4a8:	lsr	w2, w0, #4
   1b4ac:	adrp	x0, 46000 <lzma_mode_is_supported@@XZ_5.0+0x2b368>
   1b4b0:	ldr	x1, [x0, #3960]
   1b4b4:	mov	w0, w2
   1b4b8:	ldrb	w0, [x1, x0]
   1b4bc:	add	sp, sp, #0x10
   1b4c0:	ret
   1b4c4:	sub	sp, sp, #0x10
   1b4c8:	strh	w0, [sp, #14]
   1b4cc:	ldrh	w0, [sp, #14]
   1b4d0:	lsr	w0, w0, #4
   1b4d4:	and	w0, w0, #0xffff
   1b4d8:	mov	w2, w0
   1b4dc:	adrp	x0, 46000 <lzma_mode_is_supported@@XZ_5.0+0x2b368>
   1b4e0:	ldr	x1, [x0, #3960]
   1b4e4:	sxtw	x0, w2
   1b4e8:	ldrb	w0, [x1, x0]
   1b4ec:	add	sp, sp, #0x10
   1b4f0:	ret
   1b4f4:	sub	sp, sp, #0x10
   1b4f8:	strh	w0, [sp, #14]
   1b4fc:	ldrh	w0, [sp, #14]
   1b500:	lsr	w0, w0, #4
   1b504:	and	w0, w0, #0xffff
   1b508:	eor	w0, w0, #0x7f
   1b50c:	and	w0, w0, #0xffff
   1b510:	mov	w2, w0
   1b514:	adrp	x0, 46000 <lzma_mode_is_supported@@XZ_5.0+0x2b368>
   1b518:	ldr	x1, [x0, #3960]
   1b51c:	mov	w0, w2
   1b520:	ldrb	w0, [x1, x0]
   1b524:	add	sp, sp, #0x10
   1b528:	ret
   1b52c:	stp	x29, x30, [sp, #-48]!
   1b530:	mov	x29, sp
   1b534:	str	x0, [sp, #24]
   1b538:	str	w1, [sp, #20]
   1b53c:	str	w2, [sp, #16]
   1b540:	str	wzr, [sp, #44]
   1b544:	ldr	w0, [sp, #20]
   1b548:	mov	w1, #0x1                   	// #1
   1b54c:	lsl	w0, w1, w0
   1b550:	ldr	w1, [sp, #16]
   1b554:	add	w0, w1, w0
   1b558:	str	w0, [sp, #16]
   1b55c:	ldr	w0, [sp, #16]
   1b560:	and	w0, w0, #0x1
   1b564:	str	w0, [sp, #40]
   1b568:	ldr	w0, [sp, #16]
   1b56c:	lsr	w0, w0, #1
   1b570:	str	w0, [sp, #16]
   1b574:	ldr	w0, [sp, #16]
   1b578:	lsl	x0, x0, #1
   1b57c:	ldr	x1, [sp, #24]
   1b580:	add	x0, x1, x0
   1b584:	ldrh	w0, [x0]
   1b588:	ldr	w1, [sp, #40]
   1b58c:	bl	1b488 <lzma_mode_is_supported@@XZ_5.0+0x7f0>
   1b590:	mov	w1, w0
   1b594:	ldr	w0, [sp, #44]
   1b598:	add	w0, w0, w1
   1b59c:	str	w0, [sp, #44]
   1b5a0:	ldr	w0, [sp, #16]
   1b5a4:	cmp	w0, #0x1
   1b5a8:	b.ne	1b55c <lzma_mode_is_supported@@XZ_5.0+0x8c4>  // b.any
   1b5ac:	ldr	w0, [sp, #44]
   1b5b0:	ldp	x29, x30, [sp], #48
   1b5b4:	ret
   1b5b8:	stp	x29, x30, [sp, #-48]!
   1b5bc:	mov	x29, sp
   1b5c0:	str	x0, [sp, #24]
   1b5c4:	str	w1, [sp, #20]
   1b5c8:	str	w2, [sp, #16]
   1b5cc:	str	wzr, [sp, #44]
   1b5d0:	mov	w0, #0x1                   	// #1
   1b5d4:	str	w0, [sp, #40]
   1b5d8:	ldr	w0, [sp, #16]
   1b5dc:	and	w0, w0, #0x1
   1b5e0:	str	w0, [sp, #36]
   1b5e4:	ldr	w0, [sp, #16]
   1b5e8:	lsr	w0, w0, #1
   1b5ec:	str	w0, [sp, #16]
   1b5f0:	ldr	w0, [sp, #40]
   1b5f4:	lsl	x0, x0, #1
   1b5f8:	ldr	x1, [sp, #24]
   1b5fc:	add	x0, x1, x0
   1b600:	ldrh	w0, [x0]
   1b604:	ldr	w1, [sp, #36]
   1b608:	bl	1b488 <lzma_mode_is_supported@@XZ_5.0+0x7f0>
   1b60c:	mov	w1, w0
   1b610:	ldr	w0, [sp, #44]
   1b614:	add	w0, w0, w1
   1b618:	str	w0, [sp, #44]
   1b61c:	ldr	w0, [sp, #40]
   1b620:	lsl	w0, w0, #1
   1b624:	ldr	w1, [sp, #36]
   1b628:	add	w0, w1, w0
   1b62c:	str	w0, [sp, #40]
   1b630:	ldr	w0, [sp, #20]
   1b634:	sub	w0, w0, #0x1
   1b638:	str	w0, [sp, #20]
   1b63c:	ldr	w0, [sp, #20]
   1b640:	cmp	w0, #0x0
   1b644:	b.ne	1b5d8 <lzma_mode_is_supported@@XZ_5.0+0x940>  // b.any
   1b648:	ldr	w0, [sp, #44]
   1b64c:	ldp	x29, x30, [sp], #48
   1b650:	ret
   1b654:	sub	sp, sp, #0x10
   1b658:	str	w0, [sp, #12]
   1b65c:	ldr	w0, [sp, #12]
   1b660:	lsl	w0, w0, #4
   1b664:	add	sp, sp, #0x10
   1b668:	ret
   1b66c:	sub	sp, sp, #0x10
   1b670:	str	w0, [sp, #12]
   1b674:	ldr	w1, [sp, #12]
   1b678:	mov	w0, #0x1fff                	// #8191
   1b67c:	cmp	w1, w0
   1b680:	b.hi	1b698 <lzma_mode_is_supported@@XZ_5.0+0xa00>  // b.pmore
   1b684:	adrp	x0, 46000 <lzma_mode_is_supported@@XZ_5.0+0x2b368>
   1b688:	ldr	x1, [x0, #4008]
   1b68c:	ldr	w0, [sp, #12]
   1b690:	ldrb	w0, [x1, x0]
   1b694:	b	1b6e4 <lzma_mode_is_supported@@XZ_5.0+0xa4c>
   1b698:	ldr	w1, [sp, #12]
   1b69c:	mov	w0, #0x1ffffff             	// #33554431
   1b6a0:	cmp	w1, w0
   1b6a4:	b.hi	1b6c8 <lzma_mode_is_supported@@XZ_5.0+0xa30>  // b.pmore
   1b6a8:	ldr	w0, [sp, #12]
   1b6ac:	lsr	w2, w0, #12
   1b6b0:	adrp	x0, 46000 <lzma_mode_is_supported@@XZ_5.0+0x2b368>
   1b6b4:	ldr	x1, [x0, #4008]
   1b6b8:	mov	w0, w2
   1b6bc:	ldrb	w0, [x1, x0]
   1b6c0:	add	w0, w0, #0x18
   1b6c4:	b	1b6e4 <lzma_mode_is_supported@@XZ_5.0+0xa4c>
   1b6c8:	ldr	w0, [sp, #12]
   1b6cc:	lsr	w2, w0, #24
   1b6d0:	adrp	x0, 46000 <lzma_mode_is_supported@@XZ_5.0+0x2b368>
   1b6d4:	ldr	x1, [x0, #4008]
   1b6d8:	mov	w0, w2
   1b6dc:	ldrb	w0, [x1, x0]
   1b6e0:	add	w0, w0, #0x30
   1b6e4:	add	sp, sp, #0x10
   1b6e8:	ret
   1b6ec:	sub	sp, sp, #0x10
   1b6f0:	str	w0, [sp, #12]
   1b6f4:	ldr	w1, [sp, #12]
   1b6f8:	mov	w0, #0x7ffff               	// #524287
   1b6fc:	cmp	w1, w0
   1b700:	b.hi	1b724 <lzma_mode_is_supported@@XZ_5.0+0xa8c>  // b.pmore
   1b704:	ldr	w0, [sp, #12]
   1b708:	lsr	w2, w0, #6
   1b70c:	adrp	x0, 46000 <lzma_mode_is_supported@@XZ_5.0+0x2b368>
   1b710:	ldr	x1, [x0, #4008]
   1b714:	mov	w0, w2
   1b718:	ldrb	w0, [x1, x0]
   1b71c:	add	w0, w0, #0xc
   1b720:	b	1b76c <lzma_mode_is_supported@@XZ_5.0+0xad4>
   1b724:	ldr	w0, [sp, #12]
   1b728:	cmp	w0, #0x0
   1b72c:	b.lt	1b750 <lzma_mode_is_supported@@XZ_5.0+0xab8>  // b.tstop
   1b730:	ldr	w0, [sp, #12]
   1b734:	lsr	w2, w0, #18
   1b738:	adrp	x0, 46000 <lzma_mode_is_supported@@XZ_5.0+0x2b368>
   1b73c:	ldr	x1, [x0, #4008]
   1b740:	mov	w0, w2
   1b744:	ldrb	w0, [x1, x0]
   1b748:	add	w0, w0, #0x24
   1b74c:	b	1b76c <lzma_mode_is_supported@@XZ_5.0+0xad4>
   1b750:	ldr	w0, [sp, #12]
   1b754:	lsr	w2, w0, #30
   1b758:	adrp	x0, 46000 <lzma_mode_is_supported@@XZ_5.0+0x2b368>
   1b75c:	ldr	x1, [x0, #4008]
   1b760:	mov	w0, w2
   1b764:	ldrb	w0, [x1, x0]
   1b768:	add	w0, w0, #0x3c
   1b76c:	add	sp, sp, #0x10
   1b770:	ret
   1b774:	stp	x29, x30, [sp, #-80]!
   1b778:	mov	x29, sp
   1b77c:	str	x0, [sp, #40]
   1b780:	str	w1, [sp, #36]
   1b784:	str	w2, [sp, #32]
   1b788:	strb	w3, [sp, #31]
   1b78c:	str	w4, [sp, #24]
   1b790:	str	w5, [sp, #20]
   1b794:	ldr	x0, [sp, #40]
   1b798:	ldr	w1, [x0, #2968]
   1b79c:	ldr	w0, [sp, #36]
   1b7a0:	and	w1, w1, w0
   1b7a4:	ldr	x0, [sp, #40]
   1b7a8:	ldr	w0, [x0, #2964]
   1b7ac:	lsl	w1, w1, w0
   1b7b0:	ldr	x0, [sp, #40]
   1b7b4:	ldr	w0, [x0, #2964]
   1b7b8:	mov	w2, #0x8                   	// #8
   1b7bc:	sub	w0, w2, w0
   1b7c0:	ldr	w2, [sp, #32]
   1b7c4:	lsr	w0, w2, w0
   1b7c8:	add	w0, w1, w0
   1b7cc:	mov	w1, w0
   1b7d0:	mov	x0, x1
   1b7d4:	lsl	x0, x0, #1
   1b7d8:	add	x0, x0, x1
   1b7dc:	lsl	x0, x0, #9
   1b7e0:	add	x0, x0, #0xb90
   1b7e4:	ldr	x1, [sp, #40]
   1b7e8:	add	x0, x1, x0
   1b7ec:	add	x0, x0, #0xc
   1b7f0:	str	x0, [sp, #64]
   1b7f4:	str	wzr, [sp, #76]
   1b7f8:	ldrb	w0, [sp, #31]
   1b7fc:	eor	w0, w0, #0x1
   1b800:	and	w0, w0, #0xff
   1b804:	cmp	w0, #0x0
   1b808:	b.eq	1b824 <lzma_mode_is_supported@@XZ_5.0+0xb8c>  // b.none
   1b80c:	ldr	w2, [sp, #20]
   1b810:	mov	w1, #0x8                   	// #8
   1b814:	ldr	x0, [sp, #64]
   1b818:	bl	1b52c <lzma_mode_is_supported@@XZ_5.0+0x894>
   1b81c:	str	w0, [sp, #76]
   1b820:	b	1b8e4 <lzma_mode_is_supported@@XZ_5.0+0xc4c>
   1b824:	mov	w0, #0x100                 	// #256
   1b828:	str	w0, [sp, #72]
   1b82c:	ldr	w0, [sp, #20]
   1b830:	add	w0, w0, #0x100
   1b834:	str	w0, [sp, #20]
   1b838:	ldr	w0, [sp, #24]
   1b83c:	lsl	w0, w0, #1
   1b840:	str	w0, [sp, #24]
   1b844:	ldr	w1, [sp, #24]
   1b848:	ldr	w0, [sp, #72]
   1b84c:	and	w0, w1, w0
   1b850:	str	w0, [sp, #60]
   1b854:	ldr	w1, [sp, #72]
   1b858:	ldr	w0, [sp, #60]
   1b85c:	add	w1, w1, w0
   1b860:	ldr	w0, [sp, #20]
   1b864:	lsr	w0, w0, #8
   1b868:	add	w0, w1, w0
   1b86c:	str	w0, [sp, #56]
   1b870:	ldr	w0, [sp, #20]
   1b874:	lsr	w0, w0, #7
   1b878:	and	w0, w0, #0x1
   1b87c:	str	w0, [sp, #52]
   1b880:	ldr	w0, [sp, #56]
   1b884:	lsl	x0, x0, #1
   1b888:	ldr	x1, [sp, #64]
   1b88c:	add	x0, x1, x0
   1b890:	ldrh	w0, [x0]
   1b894:	ldr	w1, [sp, #52]
   1b898:	bl	1b488 <lzma_mode_is_supported@@XZ_5.0+0x7f0>
   1b89c:	mov	w1, w0
   1b8a0:	ldr	w0, [sp, #76]
   1b8a4:	add	w0, w0, w1
   1b8a8:	str	w0, [sp, #76]
   1b8ac:	ldr	w0, [sp, #20]
   1b8b0:	lsl	w0, w0, #1
   1b8b4:	str	w0, [sp, #20]
   1b8b8:	ldr	w1, [sp, #24]
   1b8bc:	ldr	w0, [sp, #20]
   1b8c0:	eor	w0, w1, w0
   1b8c4:	mvn	w0, w0
   1b8c8:	ldr	w1, [sp, #72]
   1b8cc:	and	w0, w1, w0
   1b8d0:	str	w0, [sp, #72]
   1b8d4:	ldr	w1, [sp, #20]
   1b8d8:	mov	w0, #0xffff                	// #65535
   1b8dc:	cmp	w1, w0
   1b8e0:	b.ls	1b838 <lzma_mode_is_supported@@XZ_5.0+0xba0>  // b.plast
   1b8e4:	ldr	w0, [sp, #76]
   1b8e8:	ldp	x29, x30, [sp], #80
   1b8ec:	ret
   1b8f0:	sub	sp, sp, #0x10
   1b8f4:	str	x0, [sp, #8]
   1b8f8:	str	w1, [sp, #4]
   1b8fc:	str	w2, [sp]
   1b900:	ldr	w0, [sp, #4]
   1b904:	sub	w0, w0, #0x2
   1b908:	ldr	x2, [sp, #8]
   1b90c:	mov	w3, w0
   1b910:	ldr	w1, [sp]
   1b914:	mov	x0, x1
   1b918:	lsl	x0, x0, #4
   1b91c:	add	x0, x0, x1
   1b920:	lsl	x0, x0, #4
   1b924:	add	x0, x0, x3
   1b928:	add	x0, x0, #0x100
   1b92c:	lsl	x0, x0, #2
   1b930:	add	x0, x2, x0
   1b934:	ldr	w0, [x0, #4]
   1b938:	add	sp, sp, #0x10
   1b93c:	ret
   1b940:	stp	x29, x30, [sp, #-48]!
   1b944:	mov	x29, sp
   1b948:	str	x19, [sp, #16]
   1b94c:	str	x0, [sp, #40]
   1b950:	str	w1, [sp, #36]
   1b954:	str	w2, [sp, #32]
   1b958:	ldr	x1, [sp, #40]
   1b95c:	ldr	w2, [sp, #36]
   1b960:	mov	x0, #0x3698                	// #13976
   1b964:	add	x0, x2, x0
   1b968:	lsl	x0, x0, #1
   1b96c:	add	x0, x1, x0
   1b970:	ldrh	w0, [x0, #4]
   1b974:	bl	1b4c4 <lzma_mode_is_supported@@XZ_5.0+0x82c>
   1b978:	mov	w19, w0
   1b97c:	ldr	x1, [sp, #40]
   1b980:	ldr	w0, [sp, #32]
   1b984:	ldr	w2, [sp, #36]
   1b988:	lsl	x2, x2, #4
   1b98c:	add	x2, x2, x0
   1b990:	mov	x0, #0x36b8                	// #14008
   1b994:	add	x0, x2, x0
   1b998:	lsl	x0, x0, #1
   1b99c:	add	x0, x1, x0
   1b9a0:	ldrh	w0, [x0, #12]
   1b9a4:	bl	1b4c4 <lzma_mode_is_supported@@XZ_5.0+0x82c>
   1b9a8:	add	w0, w19, w0
   1b9ac:	ldr	x19, [sp, #16]
   1b9b0:	ldp	x29, x30, [sp], #48
   1b9b4:	ret
   1b9b8:	stp	x29, x30, [sp, #-64]!
   1b9bc:	mov	x29, sp
   1b9c0:	str	x0, [sp, #40]
   1b9c4:	str	w1, [sp, #36]
   1b9c8:	str	w2, [sp, #32]
   1b9cc:	str	w3, [sp, #28]
   1b9d0:	ldr	w0, [sp, #36]
   1b9d4:	cmp	w0, #0x0
   1b9d8:	b.ne	1ba40 <lzma_mode_is_supported@@XZ_5.0+0xda8>  // b.any
   1b9dc:	ldr	x1, [sp, #40]
   1b9e0:	ldr	w2, [sp, #32]
   1b9e4:	mov	x0, #0x3698                	// #13976
   1b9e8:	add	x0, x2, x0
   1b9ec:	lsl	x0, x0, #1
   1b9f0:	add	x0, x1, x0
   1b9f4:	ldrh	w0, [x0, #4]
   1b9f8:	bl	1b4c4 <lzma_mode_is_supported@@XZ_5.0+0x82c>
   1b9fc:	str	w0, [sp, #60]
   1ba00:	ldr	x1, [sp, #40]
   1ba04:	ldr	w0, [sp, #28]
   1ba08:	ldr	w2, [sp, #32]
   1ba0c:	lsl	x2, x2, #4
   1ba10:	add	x2, x2, x0
   1ba14:	mov	x0, #0x36b8                	// #14008
   1ba18:	add	x0, x2, x0
   1ba1c:	lsl	x0, x0, #1
   1ba20:	add	x0, x1, x0
   1ba24:	ldrh	w0, [x0, #12]
   1ba28:	bl	1b4f4 <lzma_mode_is_supported@@XZ_5.0+0x85c>
   1ba2c:	mov	w1, w0
   1ba30:	ldr	w0, [sp, #60]
   1ba34:	add	w0, w0, w1
   1ba38:	str	w0, [sp, #60]
   1ba3c:	b	1bb14 <lzma_mode_is_supported@@XZ_5.0+0xe7c>
   1ba40:	ldr	x1, [sp, #40]
   1ba44:	ldr	w2, [sp, #32]
   1ba48:	mov	x0, #0x3698                	// #13976
   1ba4c:	add	x0, x2, x0
   1ba50:	lsl	x0, x0, #1
   1ba54:	add	x0, x1, x0
   1ba58:	ldrh	w0, [x0, #4]
   1ba5c:	bl	1b4f4 <lzma_mode_is_supported@@XZ_5.0+0x85c>
   1ba60:	str	w0, [sp, #60]
   1ba64:	ldr	w0, [sp, #36]
   1ba68:	cmp	w0, #0x1
   1ba6c:	b.ne	1baa4 <lzma_mode_is_supported@@XZ_5.0+0xe0c>  // b.any
   1ba70:	ldr	x1, [sp, #40]
   1ba74:	ldr	w2, [sp, #32]
   1ba78:	mov	x0, #0x36a0                	// #13984
   1ba7c:	add	x0, x2, x0
   1ba80:	lsl	x0, x0, #1
   1ba84:	add	x0, x1, x0
   1ba88:	ldrh	w0, [x0, #12]
   1ba8c:	bl	1b4c4 <lzma_mode_is_supported@@XZ_5.0+0x82c>
   1ba90:	mov	w1, w0
   1ba94:	ldr	w0, [sp, #60]
   1ba98:	add	w0, w0, w1
   1ba9c:	str	w0, [sp, #60]
   1baa0:	b	1bb14 <lzma_mode_is_supported@@XZ_5.0+0xe7c>
   1baa4:	ldr	x1, [sp, #40]
   1baa8:	ldr	w2, [sp, #32]
   1baac:	mov	x0, #0x36a0                	// #13984
   1bab0:	add	x0, x2, x0
   1bab4:	lsl	x0, x0, #1
   1bab8:	add	x0, x1, x0
   1babc:	ldrh	w0, [x0, #12]
   1bac0:	bl	1b4f4 <lzma_mode_is_supported@@XZ_5.0+0x85c>
   1bac4:	mov	w1, w0
   1bac8:	ldr	w0, [sp, #60]
   1bacc:	add	w0, w0, w1
   1bad0:	str	w0, [sp, #60]
   1bad4:	ldr	x1, [sp, #40]
   1bad8:	ldr	w2, [sp, #32]
   1badc:	mov	x0, #0x36b0                	// #14000
   1bae0:	add	x0, x2, x0
   1bae4:	lsl	x0, x0, #1
   1bae8:	add	x0, x1, x0
   1baec:	ldrh	w2, [x0, #4]
   1baf0:	ldr	w0, [sp, #36]
   1baf4:	sub	w0, w0, #0x2
   1baf8:	mov	w1, w0
   1bafc:	mov	w0, w2
   1bb00:	bl	1b488 <lzma_mode_is_supported@@XZ_5.0+0x7f0>
   1bb04:	mov	w1, w0
   1bb08:	ldr	w0, [sp, #60]
   1bb0c:	add	w0, w0, w1
   1bb10:	str	w0, [sp, #60]
   1bb14:	ldr	w0, [sp, #60]
   1bb18:	ldp	x29, x30, [sp], #64
   1bb1c:	ret
   1bb20:	stp	x29, x30, [sp, #-64]!
   1bb24:	mov	x29, sp
   1bb28:	str	x19, [sp, #16]
   1bb2c:	str	x0, [sp, #56]
   1bb30:	str	w1, [sp, #52]
   1bb34:	str	w2, [sp, #48]
   1bb38:	str	w3, [sp, #44]
   1bb3c:	str	w4, [sp, #40]
   1bb40:	ldr	x1, [sp, #56]
   1bb44:	mov	x0, #0xba48                	// #47688
   1bb48:	add	x0, x1, x0
   1bb4c:	ldr	w2, [sp, #40]
   1bb50:	ldr	w1, [sp, #48]
   1bb54:	bl	1b8f0 <lzma_mode_is_supported@@XZ_5.0+0xc58>
   1bb58:	mov	w19, w0
   1bb5c:	ldr	w3, [sp, #40]
   1bb60:	ldr	w2, [sp, #44]
   1bb64:	ldr	w1, [sp, #52]
   1bb68:	ldr	x0, [sp, #56]
   1bb6c:	bl	1b9b8 <lzma_mode_is_supported@@XZ_5.0+0xd20>
   1bb70:	add	w0, w19, w0
   1bb74:	ldr	x19, [sp, #16]
   1bb78:	ldp	x29, x30, [sp], #64
   1bb7c:	ret
   1bb80:	stp	x29, x30, [sp, #-64]!
   1bb84:	mov	x29, sp
   1bb88:	str	x0, [sp, #40]
   1bb8c:	str	w1, [sp, #36]
   1bb90:	str	w2, [sp, #32]
   1bb94:	str	w3, [sp, #28]
   1bb98:	ldr	w2, [sp, #32]
   1bb9c:	ldr	w1, [sp, #32]
   1bba0:	mov	w0, #0x5                   	// #5
   1bba4:	cmp	w2, #0x5
   1bba8:	csel	w0, w1, w0, ls  // ls = plast
   1bbac:	sub	w0, w0, #0x2
   1bbb0:	str	w0, [sp, #56]
   1bbb4:	ldr	w0, [sp, #36]
   1bbb8:	cmp	w0, #0x7f
   1bbbc:	b.hi	1bbe8 <lzma_mode_is_supported@@XZ_5.0+0xf50>  // b.pmore
   1bbc0:	ldr	x0, [sp, #40]
   1bbc4:	ldr	w1, [sp, #36]
   1bbc8:	ldr	w2, [sp, #56]
   1bbcc:	lsl	x2, x2, #7
   1bbd0:	add	x2, x2, x1
   1bbd4:	mov	x1, #0x41a4                	// #16804
   1bbd8:	add	x1, x2, x1
   1bbdc:	ldr	w0, [x0, x1, lsl #2]
   1bbe0:	str	w0, [sp, #60]
   1bbe4:	b	1bc40 <lzma_mode_is_supported@@XZ_5.0+0xfa8>
   1bbe8:	ldr	w0, [sp, #36]
   1bbec:	bl	1b6ec <lzma_mode_is_supported@@XZ_5.0+0xa54>
   1bbf0:	str	w0, [sp, #52]
   1bbf4:	ldr	x0, [sp, #40]
   1bbf8:	ldr	w1, [sp, #52]
   1bbfc:	ldr	w2, [sp, #56]
   1bc00:	lsl	x2, x2, #6
   1bc04:	add	x2, x2, x1
   1bc08:	mov	x1, #0x40a4                	// #16548
   1bc0c:	add	x1, x2, x1
   1bc10:	ldr	w1, [x0, x1, lsl #2]
   1bc14:	ldr	w0, [sp, #36]
   1bc18:	and	w0, w0, #0xf
   1bc1c:	ldr	x2, [sp, #40]
   1bc20:	mov	w3, w0
   1bc24:	mov	x0, #0x43a4                	// #17316
   1bc28:	add	x0, x3, x0
   1bc2c:	lsl	x0, x0, #2
   1bc30:	add	x0, x2, x0
   1bc34:	ldr	w0, [x0, #8]
   1bc38:	add	w0, w1, w0
   1bc3c:	str	w0, [sp, #60]
   1bc40:	ldr	x1, [sp, #40]
   1bc44:	mov	x0, #0x7200                	// #29184
   1bc48:	add	x0, x1, x0
   1bc4c:	ldr	w2, [sp, #28]
   1bc50:	ldr	w1, [sp, #32]
   1bc54:	bl	1b8f0 <lzma_mode_is_supported@@XZ_5.0+0xc58>
   1bc58:	mov	w1, w0
   1bc5c:	ldr	w0, [sp, #60]
   1bc60:	add	w0, w0, w1
   1bc64:	str	w0, [sp, #60]
   1bc68:	ldr	w0, [sp, #60]
   1bc6c:	ldp	x29, x30, [sp], #64
   1bc70:	ret
   1bc74:	stp	x29, x30, [sp, #-96]!
   1bc78:	mov	x29, sp
   1bc7c:	str	x19, [sp, #16]
   1bc80:	str	x0, [sp, #40]
   1bc84:	str	wzr, [sp, #92]
   1bc88:	b	1bde8 <lzma_mode_is_supported@@XZ_5.0+0x1150>
   1bc8c:	ldr	w0, [sp, #92]
   1bc90:	lsl	x1, x0, #8
   1bc94:	mov	x0, #0x290                 	// #656
   1bc98:	movk	x0, #0x1, lsl #16
   1bc9c:	add	x0, x1, x0
   1bca0:	ldr	x1, [sp, #40]
   1bca4:	add	x0, x1, x0
   1bca8:	str	x0, [sp, #48]
   1bcac:	str	wzr, [sp, #88]
   1bcb0:	b	1bd00 <lzma_mode_is_supported@@XZ_5.0+0x1068>
   1bcb4:	ldr	w0, [sp, #92]
   1bcb8:	lsl	x1, x0, #7
   1bcbc:	mov	x0, #0x6ef0                	// #28400
   1bcc0:	add	x0, x1, x0
   1bcc4:	ldr	x1, [sp, #40]
   1bcc8:	add	x0, x1, x0
   1bccc:	add	x3, x0, #0xc
   1bcd0:	ldr	w0, [sp, #88]
   1bcd4:	lsl	x0, x0, #2
   1bcd8:	ldr	x1, [sp, #48]
   1bcdc:	add	x19, x1, x0
   1bce0:	ldr	w2, [sp, #88]
   1bce4:	mov	w1, #0x6                   	// #6
   1bce8:	mov	x0, x3
   1bcec:	bl	1b52c <lzma_mode_is_supported@@XZ_5.0+0x894>
   1bcf0:	str	w0, [x19]
   1bcf4:	ldr	w0, [sp, #88]
   1bcf8:	add	w0, w0, #0x1
   1bcfc:	str	w0, [sp, #88]
   1bd00:	ldr	x0, [sp, #40]
   1bd04:	add	x0, x0, #0x10, lsl #12
   1bd08:	ldr	w0, [x0, #3728]
   1bd0c:	ldr	w1, [sp, #88]
   1bd10:	cmp	w1, w0
   1bd14:	b.cc	1bcb4 <lzma_mode_is_supported@@XZ_5.0+0x101c>  // b.lo, b.ul, b.last
   1bd18:	mov	w0, #0xe                   	// #14
   1bd1c:	str	w0, [sp, #84]
   1bd20:	b	1bd70 <lzma_mode_is_supported@@XZ_5.0+0x10d8>
   1bd24:	ldr	w0, [sp, #84]
   1bd28:	lsr	w0, w0, #1
   1bd2c:	sub	w0, w0, #0x5
   1bd30:	bl	1b654 <lzma_mode_is_supported@@XZ_5.0+0x9bc>
   1bd34:	mov	w3, w0
   1bd38:	ldr	w0, [sp, #84]
   1bd3c:	lsl	x0, x0, #2
   1bd40:	ldr	x1, [sp, #48]
   1bd44:	add	x0, x1, x0
   1bd48:	ldr	w1, [x0]
   1bd4c:	ldr	w0, [sp, #84]
   1bd50:	lsl	x0, x0, #2
   1bd54:	ldr	x2, [sp, #48]
   1bd58:	add	x0, x2, x0
   1bd5c:	add	w1, w3, w1
   1bd60:	str	w1, [x0]
   1bd64:	ldr	w0, [sp, #84]
   1bd68:	add	w0, w0, #0x1
   1bd6c:	str	w0, [sp, #84]
   1bd70:	ldr	x0, [sp, #40]
   1bd74:	add	x0, x0, #0x10, lsl #12
   1bd78:	ldr	w0, [x0, #3728]
   1bd7c:	ldr	w1, [sp, #84]
   1bd80:	cmp	w1, w0
   1bd84:	b.cc	1bd24 <lzma_mode_is_supported@@XZ_5.0+0x108c>  // b.lo, b.ul, b.last
   1bd88:	str	wzr, [sp, #80]
   1bd8c:	b	1bdd0 <lzma_mode_is_supported@@XZ_5.0+0x1138>
   1bd90:	ldr	w0, [sp, #80]
   1bd94:	lsl	x0, x0, #2
   1bd98:	ldr	x1, [sp, #48]
   1bd9c:	add	x0, x1, x0
   1bda0:	ldr	w2, [x0]
   1bda4:	ldr	x0, [sp, #40]
   1bda8:	ldr	w1, [sp, #80]
   1bdac:	ldr	w3, [sp, #92]
   1bdb0:	lsl	x3, x3, #7
   1bdb4:	add	x3, x3, x1
   1bdb8:	mov	x1, #0x41a4                	// #16804
   1bdbc:	add	x1, x3, x1
   1bdc0:	str	w2, [x0, x1, lsl #2]
   1bdc4:	ldr	w0, [sp, #80]
   1bdc8:	add	w0, w0, #0x1
   1bdcc:	str	w0, [sp, #80]
   1bdd0:	ldr	w0, [sp, #80]
   1bdd4:	cmp	w0, #0x3
   1bdd8:	b.ls	1bd90 <lzma_mode_is_supported@@XZ_5.0+0x10f8>  // b.plast
   1bddc:	ldr	w0, [sp, #92]
   1bde0:	add	w0, w0, #0x1
   1bde4:	str	w0, [sp, #92]
   1bde8:	ldr	w0, [sp, #92]
   1bdec:	cmp	w0, #0x3
   1bdf0:	b.ls	1bc8c <lzma_mode_is_supported@@XZ_5.0+0xff4>  // b.plast
   1bdf4:	mov	w0, #0x4                   	// #4
   1bdf8:	str	w0, [sp, #76]
   1bdfc:	b	1beec <lzma_mode_is_supported@@XZ_5.0+0x1254>
   1be00:	ldr	w0, [sp, #76]
   1be04:	bl	1b66c <lzma_mode_is_supported@@XZ_5.0+0x9d4>
   1be08:	str	w0, [sp, #68]
   1be0c:	ldr	w0, [sp, #68]
   1be10:	lsr	w0, w0, #1
   1be14:	sub	w0, w0, #0x1
   1be18:	str	w0, [sp, #64]
   1be1c:	ldr	w0, [sp, #68]
   1be20:	and	w0, w0, #0x1
   1be24:	orr	w1, w0, #0x2
   1be28:	ldr	w0, [sp, #64]
   1be2c:	lsl	w0, w1, w0
   1be30:	str	w0, [sp, #60]
   1be34:	ldr	x1, [sp, #40]
   1be38:	mov	x0, #0x70fc                	// #28924
   1be3c:	add	x1, x1, x0
   1be40:	ldr	w2, [sp, #60]
   1be44:	ldr	w0, [sp, #68]
   1be48:	sub	x0, x2, x0
   1be4c:	lsl	x0, x0, #1
   1be50:	sub	x0, x0, #0x2
   1be54:	add	x3, x1, x0
   1be58:	ldr	w1, [sp, #76]
   1be5c:	ldr	w0, [sp, #60]
   1be60:	sub	w0, w1, w0
   1be64:	mov	w2, w0
   1be68:	ldr	w1, [sp, #64]
   1be6c:	mov	x0, x3
   1be70:	bl	1b5b8 <lzma_mode_is_supported@@XZ_5.0+0x920>
   1be74:	str	w0, [sp, #56]
   1be78:	str	wzr, [sp, #72]
   1be7c:	b	1bed4 <lzma_mode_is_supported@@XZ_5.0+0x123c>
   1be80:	ldr	x0, [sp, #40]
   1be84:	ldr	w1, [sp, #68]
   1be88:	ldr	w2, [sp, #72]
   1be8c:	lsl	x2, x2, #6
   1be90:	add	x2, x2, x1
   1be94:	mov	x1, #0x40a4                	// #16548
   1be98:	add	x1, x2, x1
   1be9c:	ldr	w1, [x0, x1, lsl #2]
   1bea0:	ldr	w0, [sp, #56]
   1bea4:	add	w2, w1, w0
   1bea8:	ldr	x0, [sp, #40]
   1beac:	ldr	w1, [sp, #76]
   1beb0:	ldr	w3, [sp, #72]
   1beb4:	lsl	x3, x3, #7
   1beb8:	add	x3, x3, x1
   1bebc:	mov	x1, #0x41a4                	// #16804
   1bec0:	add	x1, x3, x1
   1bec4:	str	w2, [x0, x1, lsl #2]
   1bec8:	ldr	w0, [sp, #72]
   1becc:	add	w0, w0, #0x1
   1bed0:	str	w0, [sp, #72]
   1bed4:	ldr	w0, [sp, #72]
   1bed8:	cmp	w0, #0x3
   1bedc:	b.ls	1be80 <lzma_mode_is_supported@@XZ_5.0+0x11e8>  // b.plast
   1bee0:	ldr	w0, [sp, #76]
   1bee4:	add	w0, w0, #0x1
   1bee8:	str	w0, [sp, #76]
   1beec:	ldr	w0, [sp, #76]
   1bef0:	cmp	w0, #0x7f
   1bef4:	b.ls	1be00 <lzma_mode_is_supported@@XZ_5.0+0x1168>  // b.plast
   1bef8:	ldr	x0, [sp, #40]
   1befc:	add	x0, x0, #0x10, lsl #12
   1bf00:	str	wzr, [x0, #3732]
   1bf04:	nop
   1bf08:	ldr	x19, [sp, #16]
   1bf0c:	ldp	x29, x30, [sp], #96
   1bf10:	ret
   1bf14:	stp	x29, x30, [sp, #-48]!
   1bf18:	mov	x29, sp
   1bf1c:	str	x0, [sp, #24]
   1bf20:	str	wzr, [sp, #44]
   1bf24:	b	1bf6c <lzma_mode_is_supported@@XZ_5.0+0x12d4>
   1bf28:	ldr	x1, [sp, #24]
   1bf2c:	mov	x0, #0x71e0                	// #29152
   1bf30:	add	x0, x1, x0
   1bf34:	ldr	w2, [sp, #44]
   1bf38:	mov	w1, #0x4                   	// #4
   1bf3c:	bl	1b5b8 <lzma_mode_is_supported@@XZ_5.0+0x920>
   1bf40:	mov	w3, w0
   1bf44:	ldr	x1, [sp, #24]
   1bf48:	ldr	w2, [sp, #44]
   1bf4c:	mov	x0, #0x43a4                	// #17316
   1bf50:	add	x0, x2, x0
   1bf54:	lsl	x0, x0, #2
   1bf58:	add	x0, x1, x0
   1bf5c:	str	w3, [x0, #8]
   1bf60:	ldr	w0, [sp, #44]
   1bf64:	add	w0, w0, #0x1
   1bf68:	str	w0, [sp, #44]
   1bf6c:	ldr	w0, [sp, #44]
   1bf70:	cmp	w0, #0xf
   1bf74:	b.ls	1bf28 <lzma_mode_is_supported@@XZ_5.0+0x1290>  // b.plast
   1bf78:	ldr	x0, [sp, #24]
   1bf7c:	add	x0, x0, #0x10, lsl #12
   1bf80:	str	wzr, [x0, #3800]
   1bf84:	nop
   1bf88:	ldp	x29, x30, [sp], #48
   1bf8c:	ret
   1bf90:	sub	sp, sp, #0x10
   1bf94:	str	x0, [sp, #8]
   1bf98:	ldr	x0, [sp, #8]
   1bf9c:	mov	w1, #0xffffffff            	// #-1
   1bfa0:	str	w1, [x0, #24]
   1bfa4:	ldr	x0, [sp, #8]
   1bfa8:	strb	wzr, [x0, #4]
   1bfac:	nop
   1bfb0:	add	sp, sp, #0x10
   1bfb4:	ret
   1bfb8:	sub	sp, sp, #0x10
   1bfbc:	str	x0, [sp, #8]
   1bfc0:	ldr	x0, [sp, #8]
   1bfc4:	str	wzr, [x0, #24]
   1bfc8:	ldr	x0, [sp, #8]
   1bfcc:	strb	wzr, [x0, #4]
   1bfd0:	nop
   1bfd4:	add	sp, sp, #0x10
   1bfd8:	ret
   1bfdc:	stp	x29, x30, [sp, #-64]!
   1bfe0:	mov	x29, sp
   1bfe4:	str	x0, [sp, #40]
   1bfe8:	str	x1, [sp, #32]
   1bfec:	str	x2, [sp, #24]
   1bff0:	str	w3, [sp, #20]
   1bff4:	ldr	x0, [sp, #40]
   1bff8:	add	x0, x0, #0x10, lsl #12
   1bffc:	ldr	w1, [sp, #20]
   1c000:	str	w1, [x0, #3804]
   1c004:	ldr	x2, [sp, #40]
   1c008:	ldr	w1, [sp, #20]
   1c00c:	mov	x0, x1
   1c010:	lsl	x0, x0, #1
   1c014:	add	x0, x0, x1
   1c018:	lsl	x0, x0, #2
   1c01c:	sub	x0, x0, x1
   1c020:	lsl	x0, x0, #2
   1c024:	add	x0, x2, x0
   1c028:	add	x0, x0, #0x10, lsl #12
   1c02c:	ldr	w0, [x0, #3832]
   1c030:	str	w0, [sp, #60]
   1c034:	ldr	x2, [sp, #40]
   1c038:	ldr	w1, [sp, #20]
   1c03c:	mov	x0, x1
   1c040:	lsl	x0, x0, #1
   1c044:	add	x0, x0, x1
   1c048:	lsl	x0, x0, #2
   1c04c:	sub	x0, x0, x1
   1c050:	lsl	x0, x0, #2
   1c054:	add	x0, x2, x0
   1c058:	add	x0, x0, #0x10, lsl #12
   1c05c:	ldr	w0, [x0, #3836]
   1c060:	str	w0, [sp, #56]
   1c064:	ldr	x2, [sp, #40]
   1c068:	ldr	w1, [sp, #20]
   1c06c:	mov	x0, x1
   1c070:	lsl	x0, x0, #1
   1c074:	add	x0, x0, x1
   1c078:	lsl	x0, x0, #2
   1c07c:	sub	x0, x0, x1
   1c080:	lsl	x0, x0, #2
   1c084:	add	x0, x2, x0
   1c088:	add	x0, x0, #0x10, lsl #12
   1c08c:	ldrb	w0, [x0, #3816]
   1c090:	cmp	w0, #0x0
   1c094:	b.eq	1c22c <lzma_mode_is_supported@@XZ_5.0+0x1594>  // b.none
   1c098:	ldr	w1, [sp, #60]
   1c09c:	mov	x0, x1
   1c0a0:	lsl	x0, x0, #1
   1c0a4:	add	x0, x0, x1
   1c0a8:	lsl	x0, x0, #2
   1c0ac:	sub	x0, x0, x1
   1c0b0:	lsl	x0, x0, #2
   1c0b4:	mov	x1, #0xee0                 	// #3808
   1c0b8:	movk	x1, #0x1, lsl #16
   1c0bc:	add	x0, x0, x1
   1c0c0:	ldr	x1, [sp, #40]
   1c0c4:	add	x0, x1, x0
   1c0c8:	add	x0, x0, #0x4
   1c0cc:	bl	1bf90 <lzma_mode_is_supported@@XZ_5.0+0x12f8>
   1c0d0:	ldr	w0, [sp, #60]
   1c0d4:	sub	w2, w0, #0x1
   1c0d8:	ldr	x3, [sp, #40]
   1c0dc:	ldr	w1, [sp, #60]
   1c0e0:	mov	x0, x1
   1c0e4:	lsl	x0, x0, #1
   1c0e8:	add	x0, x0, x1
   1c0ec:	lsl	x0, x0, #2
   1c0f0:	sub	x0, x0, x1
   1c0f4:	lsl	x0, x0, #2
   1c0f8:	add	x0, x3, x0
   1c0fc:	add	x0, x0, #0x10, lsl #12
   1c100:	str	w2, [x0, #3832]
   1c104:	ldr	x2, [sp, #40]
   1c108:	ldr	w1, [sp, #20]
   1c10c:	mov	x0, x1
   1c110:	lsl	x0, x0, #1
   1c114:	add	x0, x0, x1
   1c118:	lsl	x0, x0, #2
   1c11c:	sub	x0, x0, x1
   1c120:	lsl	x0, x0, #2
   1c124:	add	x0, x2, x0
   1c128:	add	x0, x0, #0x10, lsl #12
   1c12c:	ldrb	w0, [x0, #3817]
   1c130:	cmp	w0, #0x0
   1c134:	b.eq	1c22c <lzma_mode_is_supported@@XZ_5.0+0x1594>  // b.none
   1c138:	ldr	w0, [sp, #60]
   1c13c:	sub	w0, w0, #0x1
   1c140:	ldr	x2, [sp, #40]
   1c144:	mov	w1, w0
   1c148:	mov	x0, x1
   1c14c:	lsl	x0, x0, #1
   1c150:	add	x0, x0, x1
   1c154:	lsl	x0, x0, #2
   1c158:	sub	x0, x0, x1
   1c15c:	lsl	x0, x0, #2
   1c160:	add	x0, x2, x0
   1c164:	add	x0, x0, #0x10, lsl #12
   1c168:	strb	wzr, [x0, #3816]
   1c16c:	ldr	w0, [sp, #60]
   1c170:	sub	w4, w0, #0x1
   1c174:	ldr	x2, [sp, #40]
   1c178:	ldr	w1, [sp, #20]
   1c17c:	mov	x0, x1
   1c180:	lsl	x0, x0, #1
   1c184:	add	x0, x0, x1
   1c188:	lsl	x0, x0, #2
   1c18c:	sub	x0, x0, x1
   1c190:	lsl	x0, x0, #2
   1c194:	add	x0, x2, x0
   1c198:	add	x0, x0, #0x10, lsl #12
   1c19c:	ldr	w2, [x0, #3820]
   1c1a0:	ldr	x3, [sp, #40]
   1c1a4:	mov	w1, w4
   1c1a8:	mov	x0, x1
   1c1ac:	lsl	x0, x0, #1
   1c1b0:	add	x0, x0, x1
   1c1b4:	lsl	x0, x0, #2
   1c1b8:	sub	x0, x0, x1
   1c1bc:	lsl	x0, x0, #2
   1c1c0:	add	x0, x3, x0
   1c1c4:	add	x0, x0, #0x10, lsl #12
   1c1c8:	str	w2, [x0, #3832]
   1c1cc:	ldr	w0, [sp, #60]
   1c1d0:	sub	w4, w0, #0x1
   1c1d4:	ldr	x2, [sp, #40]
   1c1d8:	ldr	w1, [sp, #20]
   1c1dc:	mov	x0, x1
   1c1e0:	lsl	x0, x0, #1
   1c1e4:	add	x0, x0, x1
   1c1e8:	lsl	x0, x0, #2
   1c1ec:	sub	x0, x0, x1
   1c1f0:	lsl	x0, x0, #2
   1c1f4:	add	x0, x2, x0
   1c1f8:	add	x0, x0, #0x10, lsl #12
   1c1fc:	ldr	w2, [x0, #3824]
   1c200:	ldr	x3, [sp, #40]
   1c204:	mov	w1, w4
   1c208:	mov	x0, x1
   1c20c:	lsl	x0, x0, #1
   1c210:	add	x0, x0, x1
   1c214:	lsl	x0, x0, #2
   1c218:	sub	x0, x0, x1
   1c21c:	lsl	x0, x0, #2
   1c220:	add	x0, x3, x0
   1c224:	add	x0, x0, #0x10, lsl #12
   1c228:	str	w2, [x0, #3836]
   1c22c:	ldr	w0, [sp, #60]
   1c230:	str	w0, [sp, #52]
   1c234:	ldr	w0, [sp, #56]
   1c238:	str	w0, [sp, #48]
   1c23c:	ldr	x2, [sp, #40]
   1c240:	ldr	w1, [sp, #52]
   1c244:	mov	x0, x1
   1c248:	lsl	x0, x0, #1
   1c24c:	add	x0, x0, x1
   1c250:	lsl	x0, x0, #2
   1c254:	sub	x0, x0, x1
   1c258:	lsl	x0, x0, #2
   1c25c:	add	x0, x2, x0
   1c260:	add	x0, x0, #0x10, lsl #12
   1c264:	ldr	w0, [x0, #3836]
   1c268:	str	w0, [sp, #56]
   1c26c:	ldr	x2, [sp, #40]
   1c270:	ldr	w1, [sp, #52]
   1c274:	mov	x0, x1
   1c278:	lsl	x0, x0, #1
   1c27c:	add	x0, x0, x1
   1c280:	lsl	x0, x0, #2
   1c284:	sub	x0, x0, x1
   1c288:	lsl	x0, x0, #2
   1c28c:	add	x0, x2, x0
   1c290:	add	x0, x0, #0x10, lsl #12
   1c294:	ldr	w0, [x0, #3832]
   1c298:	str	w0, [sp, #60]
   1c29c:	ldr	x2, [sp, #40]
   1c2a0:	ldr	w1, [sp, #52]
   1c2a4:	mov	x0, x1
   1c2a8:	lsl	x0, x0, #1
   1c2ac:	add	x0, x0, x1
   1c2b0:	lsl	x0, x0, #2
   1c2b4:	sub	x0, x0, x1
   1c2b8:	lsl	x0, x0, #2
   1c2bc:	add	x0, x2, x0
   1c2c0:	add	x0, x0, #0x10, lsl #12
   1c2c4:	ldr	w1, [sp, #48]
   1c2c8:	str	w1, [x0, #3836]
   1c2cc:	ldr	x2, [sp, #40]
   1c2d0:	ldr	w1, [sp, #52]
   1c2d4:	mov	x0, x1
   1c2d8:	lsl	x0, x0, #1
   1c2dc:	add	x0, x0, x1
   1c2e0:	lsl	x0, x0, #2
   1c2e4:	sub	x0, x0, x1
   1c2e8:	lsl	x0, x0, #2
   1c2ec:	add	x0, x2, x0
   1c2f0:	add	x0, x0, #0x10, lsl #12
   1c2f4:	ldr	w1, [sp, #20]
   1c2f8:	str	w1, [x0, #3832]
   1c2fc:	ldr	w0, [sp, #52]
   1c300:	str	w0, [sp, #20]
   1c304:	ldr	w0, [sp, #20]
   1c308:	cmp	w0, #0x0
   1c30c:	b.ne	1c064 <lzma_mode_is_supported@@XZ_5.0+0x13cc>  // b.any
   1c310:	ldr	x0, [sp, #40]
   1c314:	add	x0, x0, #0x10, lsl #12
   1c318:	ldr	w1, [x0, #3832]
   1c31c:	ldr	x0, [sp, #40]
   1c320:	add	x0, x0, #0x10, lsl #12
   1c324:	str	w1, [x0, #3808]
   1c328:	ldr	x0, [sp, #40]
   1c32c:	add	x0, x0, #0x10, lsl #12
   1c330:	ldr	w1, [x0, #3832]
   1c334:	ldr	x0, [sp, #32]
   1c338:	str	w1, [x0]
   1c33c:	ldr	x0, [sp, #40]
   1c340:	add	x0, x0, #0x10, lsl #12
   1c344:	ldr	w1, [x0, #3836]
   1c348:	ldr	x0, [sp, #24]
   1c34c:	str	w1, [x0]
   1c350:	nop
   1c354:	ldp	x29, x30, [sp], #64
   1c358:	ret
   1c35c:	stp	x29, x30, [sp, #-240]!
   1c360:	mov	x29, sp
   1c364:	str	x19, [sp, #16]
   1c368:	str	x0, [sp, #72]
   1c36c:	str	x1, [sp, #64]
   1c370:	str	x2, [sp, #56]
   1c374:	str	x3, [sp, #48]
   1c378:	str	w4, [sp, #44]
   1c37c:	ldr	x0, [sp, #64]
   1c380:	ldr	w0, [x0, #96]
   1c384:	str	w0, [sp, #204]
   1c388:	ldr	x0, [sp, #64]
   1c38c:	ldr	w0, [x0, #28]
   1c390:	cmp	w0, #0x0
   1c394:	b.ne	1c3bc <lzma_mode_is_supported@@XZ_5.0+0x1724>  // b.any
   1c398:	ldr	x0, [sp, #72]
   1c39c:	add	x1, x0, #0x2f4
   1c3a0:	add	x0, sp, #0x6c
   1c3a4:	mov	x2, x1
   1c3a8:	mov	x1, x0
   1c3ac:	ldr	x0, [sp, #64]
   1c3b0:	bl	15950 <lzma_mf_is_supported@@XZ_5.0+0xc8>
   1c3b4:	str	w0, [sp, #236]
   1c3b8:	b	1c3d4 <lzma_mode_is_supported@@XZ_5.0+0x173c>
   1c3bc:	ldr	x0, [sp, #72]
   1c3c0:	ldr	w0, [x0, #2952]
   1c3c4:	str	w0, [sp, #236]
   1c3c8:	ldr	x0, [sp, #72]
   1c3cc:	ldr	w0, [x0, #2948]
   1c3d0:	str	w0, [sp, #108]
   1c3d4:	ldr	x0, [sp, #64]
   1c3d8:	bl	1b410 <lzma_mode_is_supported@@XZ_5.0+0x778>
   1c3dc:	add	w0, w0, #0x1
   1c3e0:	cmp	w0, #0x110
   1c3e4:	b.hi	1c3f8 <lzma_mode_is_supported@@XZ_5.0+0x1760>  // b.pmore
   1c3e8:	ldr	x0, [sp, #64]
   1c3ec:	bl	1b410 <lzma_mode_is_supported@@XZ_5.0+0x778>
   1c3f0:	add	w0, w0, #0x1
   1c3f4:	b	1c3fc <lzma_mode_is_supported@@XZ_5.0+0x1764>
   1c3f8:	mov	w0, #0x111                 	// #273
   1c3fc:	str	w0, [sp, #200]
   1c400:	ldr	w0, [sp, #200]
   1c404:	cmp	w0, #0x1
   1c408:	b.hi	1c42c <lzma_mode_is_supported@@XZ_5.0+0x1794>  // b.pmore
   1c40c:	ldr	x0, [sp, #56]
   1c410:	mov	w1, #0xffffffff            	// #-1
   1c414:	str	w1, [x0]
   1c418:	ldr	x0, [sp, #48]
   1c41c:	mov	w1, #0x1                   	// #1
   1c420:	str	w1, [x0]
   1c424:	mov	w0, #0xffffffff            	// #-1
   1c428:	b	1cd48 <lzma_mode_is_supported@@XZ_5.0+0x20b0>
   1c42c:	ldr	x0, [sp, #64]
   1c430:	bl	1b3e8 <lzma_mode_is_supported@@XZ_5.0+0x750>
   1c434:	sub	x0, x0, #0x1
   1c438:	str	x0, [sp, #192]
   1c43c:	str	wzr, [sp, #232]
   1c440:	str	wzr, [sp, #228]
   1c444:	b	1c578 <lzma_mode_is_supported@@XZ_5.0+0x18e0>
   1c448:	ldr	x1, [sp, #72]
   1c44c:	ldr	w0, [sp, #228]
   1c450:	add	x0, x0, #0xb8
   1c454:	lsl	x0, x0, #2
   1c458:	add	x0, x1, x0
   1c45c:	ldr	w0, [x0, #4]
   1c460:	mov	w0, w0
   1c464:	mvn	x0, x0
   1c468:	ldr	x1, [sp, #192]
   1c46c:	add	x0, x1, x0
   1c470:	str	x0, [sp, #136]
   1c474:	ldr	x0, [sp, #192]
   1c478:	ldrb	w1, [x0]
   1c47c:	ldr	x0, [sp, #136]
   1c480:	ldrb	w0, [x0]
   1c484:	cmp	w1, w0
   1c488:	b.ne	1c4ac <lzma_mode_is_supported@@XZ_5.0+0x1814>  // b.any
   1c48c:	ldr	x0, [sp, #192]
   1c490:	add	x0, x0, #0x1
   1c494:	ldrb	w1, [x0]
   1c498:	ldr	x0, [sp, #136]
   1c49c:	add	x0, x0, #0x1
   1c4a0:	ldrb	w0, [x0]
   1c4a4:	cmp	w1, w0
   1c4a8:	b.eq	1c4c0 <lzma_mode_is_supported@@XZ_5.0+0x1828>  // b.none
   1c4ac:	ldr	w0, [sp, #228]
   1c4b0:	lsl	x0, x0, #2
   1c4b4:	add	x1, sp, #0x58
   1c4b8:	str	wzr, [x1, x0]
   1c4bc:	b	1c56c <lzma_mode_is_supported@@XZ_5.0+0x18d4>
   1c4c0:	ldr	x0, [sp, #192]
   1c4c4:	str	x0, [sp, #128]
   1c4c8:	ldr	x0, [sp, #136]
   1c4cc:	str	x0, [sp, #120]
   1c4d0:	mov	w0, #0x2                   	// #2
   1c4d4:	str	w0, [sp, #116]
   1c4d8:	ldr	w0, [sp, #200]
   1c4dc:	str	w0, [sp, #112]
   1c4e0:	b	1c4f0 <lzma_mode_is_supported@@XZ_5.0+0x1858>
   1c4e4:	ldr	w0, [sp, #116]
   1c4e8:	add	w0, w0, #0x1
   1c4ec:	str	w0, [sp, #116]
   1c4f0:	ldr	w1, [sp, #112]
   1c4f4:	ldr	w0, [sp, #116]
   1c4f8:	cmp	w1, w0
   1c4fc:	b.ls	1c528 <lzma_mode_is_supported@@XZ_5.0+0x1890>  // b.plast
   1c500:	ldr	w0, [sp, #116]
   1c504:	ldr	x1, [sp, #128]
   1c508:	add	x0, x1, x0
   1c50c:	ldrb	w1, [x0]
   1c510:	ldr	w0, [sp, #116]
   1c514:	ldr	x2, [sp, #120]
   1c518:	add	x0, x2, x0
   1c51c:	ldrb	w0, [x0]
   1c520:	cmp	w1, w0
   1c524:	b.eq	1c4e4 <lzma_mode_is_supported@@XZ_5.0+0x184c>  // b.none
   1c528:	ldr	w2, [sp, #116]
   1c52c:	ldr	w0, [sp, #228]
   1c530:	lsl	x0, x0, #2
   1c534:	add	x1, sp, #0x58
   1c538:	str	w2, [x1, x0]
   1c53c:	ldr	w0, [sp, #228]
   1c540:	lsl	x0, x0, #2
   1c544:	add	x1, sp, #0x58
   1c548:	ldr	w1, [x1, x0]
   1c54c:	ldr	w0, [sp, #232]
   1c550:	lsl	x0, x0, #2
   1c554:	add	x2, sp, #0x58
   1c558:	ldr	w0, [x2, x0]
   1c55c:	cmp	w1, w0
   1c560:	b.ls	1c56c <lzma_mode_is_supported@@XZ_5.0+0x18d4>  // b.plast
   1c564:	ldr	w0, [sp, #228]
   1c568:	str	w0, [sp, #232]
   1c56c:	ldr	w0, [sp, #228]
   1c570:	add	w0, w0, #0x1
   1c574:	str	w0, [sp, #228]
   1c578:	ldr	w0, [sp, #228]
   1c57c:	cmp	w0, #0x3
   1c580:	b.ls	1c448 <lzma_mode_is_supported@@XZ_5.0+0x17b0>  // b.plast
   1c584:	ldr	w0, [sp, #232]
   1c588:	lsl	x0, x0, #2
   1c58c:	add	x1, sp, #0x58
   1c590:	ldr	w0, [x1, x0]
   1c594:	ldr	w1, [sp, #204]
   1c598:	cmp	w1, w0
   1c59c:	b.hi	1c5e4 <lzma_mode_is_supported@@XZ_5.0+0x194c>  // b.pmore
   1c5a0:	ldr	x0, [sp, #56]
   1c5a4:	ldr	w1, [sp, #232]
   1c5a8:	str	w1, [x0]
   1c5ac:	ldr	w0, [sp, #232]
   1c5b0:	lsl	x0, x0, #2
   1c5b4:	add	x1, sp, #0x58
   1c5b8:	ldr	w1, [x1, x0]
   1c5bc:	ldr	x0, [sp, #48]
   1c5c0:	str	w1, [x0]
   1c5c4:	ldr	x0, [sp, #48]
   1c5c8:	ldr	w0, [x0]
   1c5cc:	sub	w0, w0, #0x1
   1c5d0:	mov	w1, w0
   1c5d4:	ldr	x0, [sp, #64]
   1c5d8:	bl	1b434 <lzma_mode_is_supported@@XZ_5.0+0x79c>
   1c5dc:	mov	w0, #0xffffffff            	// #-1
   1c5e0:	b	1cd48 <lzma_mode_is_supported@@XZ_5.0+0x20b0>
   1c5e4:	ldr	w1, [sp, #236]
   1c5e8:	ldr	w0, [sp, #204]
   1c5ec:	cmp	w1, w0
   1c5f0:	b.cc	1c648 <lzma_mode_is_supported@@XZ_5.0+0x19b0>  // b.lo, b.ul, b.last
   1c5f4:	ldr	w0, [sp, #108]
   1c5f8:	sub	w0, w0, #0x1
   1c5fc:	ldr	x1, [sp, #72]
   1c600:	mov	w0, w0
   1c604:	add	x0, x0, #0x5e
   1c608:	lsl	x0, x0, #3
   1c60c:	add	x0, x1, x0
   1c610:	ldr	w0, [x0, #8]
   1c614:	add	w1, w0, #0x4
   1c618:	ldr	x0, [sp, #56]
   1c61c:	str	w1, [x0]
   1c620:	ldr	x0, [sp, #48]
   1c624:	ldr	w1, [sp, #236]
   1c628:	str	w1, [x0]
   1c62c:	ldr	w0, [sp, #236]
   1c630:	sub	w0, w0, #0x1
   1c634:	mov	w1, w0
   1c638:	ldr	x0, [sp, #64]
   1c63c:	bl	1b434 <lzma_mode_is_supported@@XZ_5.0+0x79c>
   1c640:	mov	w0, #0xffffffff            	// #-1
   1c644:	b	1cd48 <lzma_mode_is_supported@@XZ_5.0+0x20b0>
   1c648:	ldr	x0, [sp, #192]
   1c64c:	ldrb	w0, [x0]
   1c650:	strb	w0, [sp, #191]
   1c654:	ldr	x0, [sp, #72]
   1c658:	ldr	w0, [x0, #740]
   1c65c:	mov	w0, w0
   1c660:	mvn	x0, x0
   1c664:	ldr	x1, [sp, #192]
   1c668:	add	x0, x1, x0
   1c66c:	ldrb	w0, [x0]
   1c670:	strb	w0, [sp, #190]
   1c674:	ldr	w0, [sp, #236]
   1c678:	cmp	w0, #0x1
   1c67c:	b.hi	1c6c8 <lzma_mode_is_supported@@XZ_5.0+0x1a30>  // b.pmore
   1c680:	ldrb	w1, [sp, #191]
   1c684:	ldrb	w0, [sp, #190]
   1c688:	cmp	w1, w0
   1c68c:	b.eq	1c6c8 <lzma_mode_is_supported@@XZ_5.0+0x1a30>  // b.none
   1c690:	ldr	w0, [sp, #232]
   1c694:	lsl	x0, x0, #2
   1c698:	add	x1, sp, #0x58
   1c69c:	ldr	w0, [x1, x0]
   1c6a0:	cmp	w0, #0x1
   1c6a4:	b.hi	1c6c8 <lzma_mode_is_supported@@XZ_5.0+0x1a30>  // b.pmore
   1c6a8:	ldr	x0, [sp, #56]
   1c6ac:	mov	w1, #0xffffffff            	// #-1
   1c6b0:	str	w1, [x0]
   1c6b4:	ldr	x0, [sp, #48]
   1c6b8:	mov	w1, #0x1                   	// #1
   1c6bc:	str	w1, [x0]
   1c6c0:	mov	w0, #0xffffffff            	// #-1
   1c6c4:	b	1cd48 <lzma_mode_is_supported@@XZ_5.0+0x20b0>
   1c6c8:	ldr	x0, [sp, #72]
   1c6cc:	ldr	w1, [x0, #736]
   1c6d0:	ldr	x0, [sp, #72]
   1c6d4:	add	x0, x0, #0x10, lsl #12
   1c6d8:	str	w1, [x0, #3812]
   1c6dc:	ldr	x0, [sp, #72]
   1c6e0:	ldr	w0, [x0, #2960]
   1c6e4:	ldr	w1, [sp, #44]
   1c6e8:	and	w0, w1, w0
   1c6ec:	str	w0, [sp, #184]
   1c6f0:	ldr	x0, [sp, #72]
   1c6f4:	ldr	w2, [x0, #736]
   1c6f8:	ldr	x1, [sp, #72]
   1c6fc:	ldr	w0, [sp, #184]
   1c700:	mov	w2, w2
   1c704:	lsl	x2, x2, #4
   1c708:	add	x2, x2, x0
   1c70c:	mov	x0, #0x35c8                	// #13768
   1c710:	add	x0, x2, x0
   1c714:	lsl	x0, x0, #1
   1c718:	add	x0, x1, x0
   1c71c:	ldrh	w0, [x0, #12]
   1c720:	bl	1b4c4 <lzma_mode_is_supported@@XZ_5.0+0x82c>
   1c724:	mov	w19, w0
   1c728:	ldr	x0, [sp, #192]
   1c72c:	sub	x0, x0, #0x1
   1c730:	ldrb	w0, [x0]
   1c734:	mov	w6, w0
   1c738:	ldr	x0, [sp, #72]
   1c73c:	ldr	w0, [x0, #736]
   1c740:	cmp	w0, #0x6
   1c744:	cset	w0, hi  // hi = pmore
   1c748:	and	w2, w0, #0xff
   1c74c:	ldrb	w0, [sp, #190]
   1c750:	ldrb	w1, [sp, #191]
   1c754:	mov	w5, w1
   1c758:	mov	w4, w0
   1c75c:	mov	w3, w2
   1c760:	mov	w2, w6
   1c764:	ldr	w1, [sp, #44]
   1c768:	ldr	x0, [sp, #72]
   1c76c:	bl	1b774 <lzma_mode_is_supported@@XZ_5.0+0xadc>
   1c770:	add	w1, w19, w0
   1c774:	ldr	x0, [sp, #72]
   1c778:	add	x0, x0, #0x10, lsl #12
   1c77c:	str	w1, [x0, #3872]
   1c780:	ldr	x1, [sp, #72]
   1c784:	mov	x0, #0xf10                 	// #3856
   1c788:	movk	x0, #0x1, lsl #16
   1c78c:	add	x0, x1, x0
   1c790:	bl	1bf90 <lzma_mode_is_supported@@XZ_5.0+0x12f8>
   1c794:	ldr	x0, [sp, #72]
   1c798:	ldr	w2, [x0, #736]
   1c79c:	ldr	x1, [sp, #72]
   1c7a0:	ldr	w0, [sp, #184]
   1c7a4:	mov	w2, w2
   1c7a8:	lsl	x2, x2, #4
   1c7ac:	add	x2, x2, x0
   1c7b0:	mov	x0, #0x35c8                	// #13768
   1c7b4:	add	x0, x2, x0
   1c7b8:	lsl	x0, x0, #1
   1c7bc:	add	x0, x1, x0
   1c7c0:	ldrh	w0, [x0, #12]
   1c7c4:	bl	1b4f4 <lzma_mode_is_supported@@XZ_5.0+0x85c>
   1c7c8:	str	w0, [sp, #180]
   1c7cc:	ldr	x0, [sp, #72]
   1c7d0:	ldr	w0, [x0, #736]
   1c7d4:	ldr	x1, [sp, #72]
   1c7d8:	mov	w2, w0
   1c7dc:	mov	x0, #0x3688                	// #13960
   1c7e0:	add	x0, x2, x0
   1c7e4:	lsl	x0, x0, #1
   1c7e8:	add	x0, x1, x0
   1c7ec:	ldrh	w0, [x0, #12]
   1c7f0:	bl	1b4f4 <lzma_mode_is_supported@@XZ_5.0+0x85c>
   1c7f4:	mov	w1, w0
   1c7f8:	ldr	w0, [sp, #180]
   1c7fc:	add	w0, w0, w1
   1c800:	str	w0, [sp, #176]
   1c804:	ldrb	w1, [sp, #190]
   1c808:	ldrb	w0, [sp, #191]
   1c80c:	cmp	w1, w0
   1c810:	b.ne	1c878 <lzma_mode_is_supported@@XZ_5.0+0x1be0>  // b.any
   1c814:	ldr	x0, [sp, #72]
   1c818:	ldr	w0, [x0, #736]
   1c81c:	ldr	w2, [sp, #184]
   1c820:	mov	w1, w0
   1c824:	ldr	x0, [sp, #72]
   1c828:	bl	1b940 <lzma_mode_is_supported@@XZ_5.0+0xca8>
   1c82c:	mov	w1, w0
   1c830:	ldr	w0, [sp, #176]
   1c834:	add	w0, w0, w1
   1c838:	str	w0, [sp, #172]
   1c83c:	ldr	x0, [sp, #72]
   1c840:	add	x0, x0, #0x10, lsl #12
   1c844:	ldr	w0, [x0, #3872]
   1c848:	ldr	w1, [sp, #172]
   1c84c:	cmp	w1, w0
   1c850:	b.cs	1c878 <lzma_mode_is_supported@@XZ_5.0+0x1be0>  // b.hs, b.nlast
   1c854:	ldr	x0, [sp, #72]
   1c858:	add	x0, x0, #0x10, lsl #12
   1c85c:	ldr	w1, [sp, #172]
   1c860:	str	w1, [x0, #3872]
   1c864:	ldr	x1, [sp, #72]
   1c868:	mov	x0, #0xf10                 	// #3856
   1c86c:	movk	x0, #0x1, lsl #16
   1c870:	add	x0, x1, x0
   1c874:	bl	1bfb8 <lzma_mode_is_supported@@XZ_5.0+0x1320>
   1c878:	ldr	w0, [sp, #232]
   1c87c:	lsl	x0, x0, #2
   1c880:	add	x1, sp, #0x58
   1c884:	ldr	w0, [x1, x0]
   1c888:	ldr	w2, [sp, #236]
   1c88c:	ldr	w1, [sp, #236]
   1c890:	cmp	w2, w0
   1c894:	csel	w0, w1, w0, cs  // cs = hs, nlast
   1c898:	str	w0, [sp, #168]
   1c89c:	ldr	w0, [sp, #168]
   1c8a0:	cmp	w0, #0x1
   1c8a4:	b.hi	1c8d0 <lzma_mode_is_supported@@XZ_5.0+0x1c38>  // b.pmore
   1c8a8:	ldr	x0, [sp, #72]
   1c8ac:	add	x0, x0, #0x10, lsl #12
   1c8b0:	ldr	w1, [x0, #3880]
   1c8b4:	ldr	x0, [sp, #56]
   1c8b8:	str	w1, [x0]
   1c8bc:	ldr	x0, [sp, #48]
   1c8c0:	mov	w1, #0x1                   	// #1
   1c8c4:	str	w1, [x0]
   1c8c8:	mov	w0, #0xffffffff            	// #-1
   1c8cc:	b	1cd48 <lzma_mode_is_supported@@XZ_5.0+0x20b0>
   1c8d0:	ldr	x0, [sp, #72]
   1c8d4:	add	x0, x0, #0x10, lsl #12
   1c8d8:	str	wzr, [x0, #3876]
   1c8dc:	str	wzr, [sp, #224]
   1c8e0:	b	1c924 <lzma_mode_is_supported@@XZ_5.0+0x1c8c>
   1c8e4:	ldr	x1, [sp, #72]
   1c8e8:	ldr	w0, [sp, #224]
   1c8ec:	add	x0, x0, #0xb8
   1c8f0:	lsl	x0, x0, #2
   1c8f4:	add	x0, x1, x0
   1c8f8:	ldr	w1, [x0, #4]
   1c8fc:	ldr	x2, [sp, #72]
   1c900:	ldr	w3, [sp, #224]
   1c904:	mov	x0, #0x43bc                	// #17340
   1c908:	add	x0, x3, x0
   1c90c:	lsl	x0, x0, #2
   1c910:	add	x0, x2, x0
   1c914:	str	w1, [x0, #16]
   1c918:	ldr	w0, [sp, #224]
   1c91c:	add	w0, w0, #0x1
   1c920:	str	w0, [sp, #224]
   1c924:	ldr	w0, [sp, #224]
   1c928:	cmp	w0, #0x3
   1c92c:	b.ls	1c8e4 <lzma_mode_is_supported@@XZ_5.0+0x1c4c>  // b.plast
   1c930:	ldr	w0, [sp, #168]
   1c934:	str	w0, [sp, #220]
   1c938:	ldr	x2, [sp, #72]
   1c93c:	ldr	w1, [sp, #220]
   1c940:	mov	x0, x1
   1c944:	lsl	x0, x0, #1
   1c948:	add	x0, x0, x1
   1c94c:	lsl	x0, x0, #2
   1c950:	sub	x0, x0, x1
   1c954:	lsl	x0, x0, #2
   1c958:	add	x0, x2, x0
   1c95c:	add	x0, x0, #0x10, lsl #12
   1c960:	mov	w1, #0x40000000            	// #1073741824
   1c964:	str	w1, [x0, #3828]
   1c968:	ldr	w0, [sp, #220]
   1c96c:	sub	w0, w0, #0x1
   1c970:	str	w0, [sp, #220]
   1c974:	ldr	w0, [sp, #220]
   1c978:	cmp	w0, #0x1
   1c97c:	b.hi	1c938 <lzma_mode_is_supported@@XZ_5.0+0x1ca0>  // b.pmore
   1c980:	str	wzr, [sp, #216]
   1c984:	b	1cb18 <lzma_mode_is_supported@@XZ_5.0+0x1e80>
   1c988:	ldr	w0, [sp, #216]
   1c98c:	lsl	x0, x0, #2
   1c990:	add	x1, sp, #0x58
   1c994:	ldr	w0, [x1, x0]
   1c998:	str	w0, [sp, #212]
   1c99c:	ldr	w0, [sp, #212]
   1c9a0:	cmp	w0, #0x1
   1c9a4:	b.ls	1cb08 <lzma_mode_is_supported@@XZ_5.0+0x1e70>  // b.plast
   1c9a8:	ldr	x0, [sp, #72]
   1c9ac:	ldr	w0, [x0, #736]
   1c9b0:	ldr	w3, [sp, #184]
   1c9b4:	mov	w2, w0
   1c9b8:	ldr	w1, [sp, #216]
   1c9bc:	ldr	x0, [sp, #72]
   1c9c0:	bl	1b9b8 <lzma_mode_is_supported@@XZ_5.0+0xd20>
   1c9c4:	mov	w1, w0
   1c9c8:	ldr	w0, [sp, #176]
   1c9cc:	add	w0, w0, w1
   1c9d0:	str	w0, [sp, #152]
   1c9d4:	ldr	x1, [sp, #72]
   1c9d8:	mov	x0, #0xba48                	// #47688
   1c9dc:	add	x0, x1, x0
   1c9e0:	ldr	w2, [sp, #184]
   1c9e4:	ldr	w1, [sp, #212]
   1c9e8:	bl	1b8f0 <lzma_mode_is_supported@@XZ_5.0+0xc58>
   1c9ec:	mov	w1, w0
   1c9f0:	ldr	w0, [sp, #152]
   1c9f4:	add	w0, w0, w1
   1c9f8:	str	w0, [sp, #148]
   1c9fc:	ldr	x2, [sp, #72]
   1ca00:	ldr	w1, [sp, #212]
   1ca04:	mov	x0, x1
   1ca08:	lsl	x0, x0, #1
   1ca0c:	add	x0, x0, x1
   1ca10:	lsl	x0, x0, #2
   1ca14:	sub	x0, x0, x1
   1ca18:	lsl	x0, x0, #2
   1ca1c:	add	x0, x2, x0
   1ca20:	add	x0, x0, #0x10, lsl #12
   1ca24:	ldr	w0, [x0, #3828]
   1ca28:	ldr	w1, [sp, #148]
   1ca2c:	cmp	w1, w0
   1ca30:	b.cs	1caec <lzma_mode_is_supported@@XZ_5.0+0x1e54>  // b.hs, b.nlast
   1ca34:	ldr	x2, [sp, #72]
   1ca38:	ldr	w1, [sp, #212]
   1ca3c:	mov	x0, x1
   1ca40:	lsl	x0, x0, #1
   1ca44:	add	x0, x0, x1
   1ca48:	lsl	x0, x0, #2
   1ca4c:	sub	x0, x0, x1
   1ca50:	lsl	x0, x0, #2
   1ca54:	add	x0, x2, x0
   1ca58:	add	x0, x0, #0x10, lsl #12
   1ca5c:	ldr	w1, [sp, #148]
   1ca60:	str	w1, [x0, #3828]
   1ca64:	ldr	x2, [sp, #72]
   1ca68:	ldr	w1, [sp, #212]
   1ca6c:	mov	x0, x1
   1ca70:	lsl	x0, x0, #1
   1ca74:	add	x0, x0, x1
   1ca78:	lsl	x0, x0, #2
   1ca7c:	sub	x0, x0, x1
   1ca80:	lsl	x0, x0, #2
   1ca84:	add	x0, x2, x0
   1ca88:	add	x0, x0, #0x10, lsl #12
   1ca8c:	str	wzr, [x0, #3832]
   1ca90:	ldr	x2, [sp, #72]
   1ca94:	ldr	w1, [sp, #212]
   1ca98:	mov	x0, x1
   1ca9c:	lsl	x0, x0, #1
   1caa0:	add	x0, x0, x1
   1caa4:	lsl	x0, x0, #2
   1caa8:	sub	x0, x0, x1
   1caac:	lsl	x0, x0, #2
   1cab0:	add	x0, x2, x0
   1cab4:	add	x0, x0, #0x10, lsl #12
   1cab8:	ldr	w1, [sp, #216]
   1cabc:	str	w1, [x0, #3836]
   1cac0:	ldr	x2, [sp, #72]
   1cac4:	ldr	w1, [sp, #212]
   1cac8:	mov	x0, x1
   1cacc:	lsl	x0, x0, #1
   1cad0:	add	x0, x0, x1
   1cad4:	lsl	x0, x0, #2
   1cad8:	sub	x0, x0, x1
   1cadc:	lsl	x0, x0, #2
   1cae0:	add	x0, x2, x0
   1cae4:	add	x0, x0, #0x10, lsl #12
   1cae8:	strb	wzr, [x0, #3816]
   1caec:	ldr	w0, [sp, #212]
   1caf0:	sub	w0, w0, #0x1
   1caf4:	str	w0, [sp, #212]
   1caf8:	ldr	w0, [sp, #212]
   1cafc:	cmp	w0, #0x1
   1cb00:	b.hi	1c9d4 <lzma_mode_is_supported@@XZ_5.0+0x1d3c>  // b.pmore
   1cb04:	b	1cb0c <lzma_mode_is_supported@@XZ_5.0+0x1e74>
   1cb08:	nop
   1cb0c:	ldr	w0, [sp, #216]
   1cb10:	add	w0, w0, #0x1
   1cb14:	str	w0, [sp, #216]
   1cb18:	ldr	w0, [sp, #216]
   1cb1c:	cmp	w0, #0x3
   1cb20:	b.ls	1c988 <lzma_mode_is_supported@@XZ_5.0+0x1cf0>  // b.plast
   1cb24:	ldr	x0, [sp, #72]
   1cb28:	ldr	w0, [x0, #736]
   1cb2c:	ldr	x1, [sp, #72]
   1cb30:	mov	w2, w0
   1cb34:	mov	x0, #0x3688                	// #13960
   1cb38:	add	x0, x2, x0
   1cb3c:	lsl	x0, x0, #1
   1cb40:	add	x0, x1, x0
   1cb44:	ldrh	w0, [x0, #12]
   1cb48:	bl	1b4c4 <lzma_mode_is_supported@@XZ_5.0+0x82c>
   1cb4c:	mov	w1, w0
   1cb50:	ldr	w0, [sp, #180]
   1cb54:	add	w0, w0, w1
   1cb58:	str	w0, [sp, #164]
   1cb5c:	ldr	w0, [sp, #88]
   1cb60:	mov	w1, #0x1                   	// #1
   1cb64:	cmp	w0, #0x0
   1cb68:	csel	w0, w0, w1, ne  // ne = any
   1cb6c:	add	w0, w0, #0x1
   1cb70:	str	w0, [sp, #220]
   1cb74:	ldr	w1, [sp, #220]
   1cb78:	ldr	w0, [sp, #236]
   1cb7c:	cmp	w1, w0
   1cb80:	b.hi	1cd44 <lzma_mode_is_supported@@XZ_5.0+0x20ac>  // b.pmore
   1cb84:	str	wzr, [sp, #208]
   1cb88:	b	1cb98 <lzma_mode_is_supported@@XZ_5.0+0x1f00>
   1cb8c:	ldr	w0, [sp, #208]
   1cb90:	add	w0, w0, #0x1
   1cb94:	str	w0, [sp, #208]
   1cb98:	ldr	x1, [sp, #72]
   1cb9c:	ldr	w0, [sp, #208]
   1cba0:	add	x0, x0, #0x5e
   1cba4:	lsl	x0, x0, #3
   1cba8:	add	x0, x1, x0
   1cbac:	ldr	w0, [x0, #4]
   1cbb0:	ldr	w1, [sp, #220]
   1cbb4:	cmp	w1, w0
   1cbb8:	b.hi	1cb8c <lzma_mode_is_supported@@XZ_5.0+0x1ef4>  // b.pmore
   1cbbc:	ldr	x1, [sp, #72]
   1cbc0:	ldr	w0, [sp, #208]
   1cbc4:	add	x0, x0, #0x5e
   1cbc8:	lsl	x0, x0, #3
   1cbcc:	add	x0, x1, x0
   1cbd0:	ldr	w0, [x0, #8]
   1cbd4:	str	w0, [sp, #160]
   1cbd8:	ldr	w3, [sp, #184]
   1cbdc:	ldr	w2, [sp, #220]
   1cbe0:	ldr	w1, [sp, #160]
   1cbe4:	ldr	x0, [sp, #72]
   1cbe8:	bl	1bb80 <lzma_mode_is_supported@@XZ_5.0+0xee8>
   1cbec:	mov	w1, w0
   1cbf0:	ldr	w0, [sp, #164]
   1cbf4:	add	w0, w0, w1
   1cbf8:	str	w0, [sp, #156]
   1cbfc:	ldr	x2, [sp, #72]
   1cc00:	ldr	w1, [sp, #220]
   1cc04:	mov	x0, x1
   1cc08:	lsl	x0, x0, #1
   1cc0c:	add	x0, x0, x1
   1cc10:	lsl	x0, x0, #2
   1cc14:	sub	x0, x0, x1
   1cc18:	lsl	x0, x0, #2
   1cc1c:	add	x0, x2, x0
   1cc20:	add	x0, x0, #0x10, lsl #12
   1cc24:	ldr	w0, [x0, #3828]
   1cc28:	ldr	w1, [sp, #156]
   1cc2c:	cmp	w1, w0
   1cc30:	b.cs	1ccf0 <lzma_mode_is_supported@@XZ_5.0+0x2058>  // b.hs, b.nlast
   1cc34:	ldr	x2, [sp, #72]
   1cc38:	ldr	w1, [sp, #220]
   1cc3c:	mov	x0, x1
   1cc40:	lsl	x0, x0, #1
   1cc44:	add	x0, x0, x1
   1cc48:	lsl	x0, x0, #2
   1cc4c:	sub	x0, x0, x1
   1cc50:	lsl	x0, x0, #2
   1cc54:	add	x0, x2, x0
   1cc58:	add	x0, x0, #0x10, lsl #12
   1cc5c:	ldr	w1, [sp, #156]
   1cc60:	str	w1, [x0, #3828]
   1cc64:	ldr	x2, [sp, #72]
   1cc68:	ldr	w1, [sp, #220]
   1cc6c:	mov	x0, x1
   1cc70:	lsl	x0, x0, #1
   1cc74:	add	x0, x0, x1
   1cc78:	lsl	x0, x0, #2
   1cc7c:	sub	x0, x0, x1
   1cc80:	lsl	x0, x0, #2
   1cc84:	add	x0, x2, x0
   1cc88:	add	x0, x0, #0x10, lsl #12
   1cc8c:	str	wzr, [x0, #3832]
   1cc90:	ldr	w0, [sp, #160]
   1cc94:	add	w2, w0, #0x4
   1cc98:	ldr	x3, [sp, #72]
   1cc9c:	ldr	w1, [sp, #220]
   1cca0:	mov	x0, x1
   1cca4:	lsl	x0, x0, #1
   1cca8:	add	x0, x0, x1
   1ccac:	lsl	x0, x0, #2
   1ccb0:	sub	x0, x0, x1
   1ccb4:	lsl	x0, x0, #2
   1ccb8:	add	x0, x3, x0
   1ccbc:	add	x0, x0, #0x10, lsl #12
   1ccc0:	str	w2, [x0, #3836]
   1ccc4:	ldr	x2, [sp, #72]
   1ccc8:	ldr	w1, [sp, #220]
   1cccc:	mov	x0, x1
   1ccd0:	lsl	x0, x0, #1
   1ccd4:	add	x0, x0, x1
   1ccd8:	lsl	x0, x0, #2
   1ccdc:	sub	x0, x0, x1
   1cce0:	lsl	x0, x0, #2
   1cce4:	add	x0, x2, x0
   1cce8:	add	x0, x0, #0x10, lsl #12
   1ccec:	strb	wzr, [x0, #3816]
   1ccf0:	ldr	x1, [sp, #72]
   1ccf4:	ldr	w0, [sp, #208]
   1ccf8:	add	x0, x0, #0x5e
   1ccfc:	lsl	x0, x0, #3
   1cd00:	add	x0, x1, x0
   1cd04:	ldr	w0, [x0, #4]
   1cd08:	ldr	w1, [sp, #220]
   1cd0c:	cmp	w1, w0
   1cd10:	b.ne	1cd30 <lzma_mode_is_supported@@XZ_5.0+0x2098>  // b.any
   1cd14:	ldr	w0, [sp, #208]
   1cd18:	add	w0, w0, #0x1
   1cd1c:	str	w0, [sp, #208]
   1cd20:	ldr	w0, [sp, #108]
   1cd24:	ldr	w1, [sp, #208]
   1cd28:	cmp	w1, w0
   1cd2c:	b.eq	1cd40 <lzma_mode_is_supported@@XZ_5.0+0x20a8>  // b.none
   1cd30:	ldr	w0, [sp, #220]
   1cd34:	add	w0, w0, #0x1
   1cd38:	str	w0, [sp, #220]
   1cd3c:	b	1cbbc <lzma_mode_is_supported@@XZ_5.0+0x1f24>
   1cd40:	nop
   1cd44:	ldr	w0, [sp, #168]
   1cd48:	ldr	x19, [sp, #16]
   1cd4c:	ldp	x29, x30, [sp], #240
   1cd50:	ret
   1cd54:	stp	x29, x30, [sp, #-352]!
   1cd58:	mov	x29, sp
   1cd5c:	str	x19, [sp, #16]
   1cd60:	str	x0, [sp, #72]
   1cd64:	str	x1, [sp, #64]
   1cd68:	str	x2, [sp, #56]
   1cd6c:	str	w3, [sp, #52]
   1cd70:	str	w4, [sp, #48]
   1cd74:	str	w5, [sp, #44]
   1cd78:	str	w6, [sp, #40]
   1cd7c:	str	w7, [sp, #36]
   1cd80:	ldr	x0, [sp, #72]
   1cd84:	ldr	w0, [x0, #2948]
   1cd88:	str	w0, [sp, #348]
   1cd8c:	ldr	x0, [sp, #72]
   1cd90:	ldr	w0, [x0, #2952]
   1cd94:	str	w0, [sp, #344]
   1cd98:	ldr	x2, [sp, #72]
   1cd9c:	ldr	w1, [sp, #44]
   1cda0:	mov	x0, x1
   1cda4:	lsl	x0, x0, #1
   1cda8:	add	x0, x0, x1
   1cdac:	lsl	x0, x0, #2
   1cdb0:	sub	x0, x0, x1
   1cdb4:	lsl	x0, x0, #2
   1cdb8:	add	x0, x2, x0
   1cdbc:	add	x0, x0, #0x10, lsl #12
   1cdc0:	ldr	w0, [x0, #3832]
   1cdc4:	str	w0, [sp, #340]
   1cdc8:	ldr	x2, [sp, #72]
   1cdcc:	ldr	w1, [sp, #44]
   1cdd0:	mov	x0, x1
   1cdd4:	lsl	x0, x0, #1
   1cdd8:	add	x0, x0, x1
   1cddc:	lsl	x0, x0, #2
   1cde0:	sub	x0, x0, x1
   1cde4:	lsl	x0, x0, #2
   1cde8:	add	x0, x2, x0
   1cdec:	add	x0, x0, #0x10, lsl #12
   1cdf0:	ldrb	w0, [x0, #3816]
   1cdf4:	cmp	w0, #0x0
   1cdf8:	b.eq	1cf78 <lzma_mode_is_supported@@XZ_5.0+0x22e0>  // b.none
   1cdfc:	ldr	w0, [sp, #340]
   1ce00:	sub	w0, w0, #0x1
   1ce04:	str	w0, [sp, #340]
   1ce08:	ldr	x2, [sp, #72]
   1ce0c:	ldr	w1, [sp, #44]
   1ce10:	mov	x0, x1
   1ce14:	lsl	x0, x0, #1
   1ce18:	add	x0, x0, x1
   1ce1c:	lsl	x0, x0, #2
   1ce20:	sub	x0, x0, x1
   1ce24:	lsl	x0, x0, #2
   1ce28:	add	x0, x2, x0
   1ce2c:	add	x0, x0, #0x10, lsl #12
   1ce30:	ldrb	w0, [x0, #3817]
   1ce34:	cmp	w0, #0x0
   1ce38:	b.eq	1cf0c <lzma_mode_is_supported@@XZ_5.0+0x2274>  // b.none
   1ce3c:	ldr	x2, [sp, #72]
   1ce40:	ldr	w1, [sp, #44]
   1ce44:	mov	x0, x1
   1ce48:	lsl	x0, x0, #1
   1ce4c:	add	x0, x0, x1
   1ce50:	lsl	x0, x0, #2
   1ce54:	sub	x0, x0, x1
   1ce58:	lsl	x0, x0, #2
   1ce5c:	add	x0, x2, x0
   1ce60:	add	x0, x0, #0x10, lsl #12
   1ce64:	ldr	w0, [x0, #3820]
   1ce68:	ldr	x2, [sp, #72]
   1ce6c:	mov	w1, w0
   1ce70:	mov	x0, x1
   1ce74:	lsl	x0, x0, #1
   1ce78:	add	x0, x0, x1
   1ce7c:	lsl	x0, x0, #2
   1ce80:	sub	x0, x0, x1
   1ce84:	lsl	x0, x0, #2
   1ce88:	add	x0, x2, x0
   1ce8c:	add	x0, x0, #0x10, lsl #12
   1ce90:	ldr	w0, [x0, #3812]
   1ce94:	str	w0, [sp, #336]
   1ce98:	ldr	x2, [sp, #72]
   1ce9c:	ldr	w1, [sp, #44]
   1cea0:	mov	x0, x1
   1cea4:	lsl	x0, x0, #1
   1cea8:	add	x0, x0, x1
   1ceac:	lsl	x0, x0, #2
   1ceb0:	sub	x0, x0, x1
   1ceb4:	lsl	x0, x0, #2
   1ceb8:	add	x0, x2, x0
   1cebc:	add	x0, x0, #0x10, lsl #12
   1cec0:	ldr	w0, [x0, #3824]
   1cec4:	cmp	w0, #0x3
   1cec8:	b.hi	1ceec <lzma_mode_is_supported@@XZ_5.0+0x2254>  // b.pmore
   1cecc:	ldr	w0, [sp, #336]
   1ced0:	cmp	w0, #0x6
   1ced4:	b.hi	1cee0 <lzma_mode_is_supported@@XZ_5.0+0x2248>  // b.pmore
   1ced8:	mov	w0, #0x8                   	// #8
   1cedc:	b	1cee4 <lzma_mode_is_supported@@XZ_5.0+0x224c>
   1cee0:	mov	w0, #0xb                   	// #11
   1cee4:	str	w0, [sp, #336]
   1cee8:	b	1cf3c <lzma_mode_is_supported@@XZ_5.0+0x22a4>
   1ceec:	ldr	w0, [sp, #336]
   1cef0:	cmp	w0, #0x6
   1cef4:	b.hi	1cf00 <lzma_mode_is_supported@@XZ_5.0+0x2268>  // b.pmore
   1cef8:	mov	w0, #0x7                   	// #7
   1cefc:	b	1cf04 <lzma_mode_is_supported@@XZ_5.0+0x226c>
   1cf00:	mov	w0, #0xa                   	// #10
   1cf04:	str	w0, [sp, #336]
   1cf08:	b	1cf3c <lzma_mode_is_supported@@XZ_5.0+0x22a4>
   1cf0c:	ldr	x2, [sp, #72]
   1cf10:	ldr	w1, [sp, #340]
   1cf14:	mov	x0, x1
   1cf18:	lsl	x0, x0, #1
   1cf1c:	add	x0, x0, x1
   1cf20:	lsl	x0, x0, #2
   1cf24:	sub	x0, x0, x1
   1cf28:	lsl	x0, x0, #2
   1cf2c:	add	x0, x2, x0
   1cf30:	add	x0, x0, #0x10, lsl #12
   1cf34:	ldr	w0, [x0, #3812]
   1cf38:	str	w0, [sp, #336]
   1cf3c:	ldr	w0, [sp, #336]
   1cf40:	cmp	w0, #0x3
   1cf44:	b.ls	1cf6c <lzma_mode_is_supported@@XZ_5.0+0x22d4>  // b.plast
   1cf48:	ldr	w0, [sp, #336]
   1cf4c:	cmp	w0, #0x9
   1cf50:	b.hi	1cf60 <lzma_mode_is_supported@@XZ_5.0+0x22c8>  // b.pmore
   1cf54:	ldr	w0, [sp, #336]
   1cf58:	sub	w0, w0, #0x3
   1cf5c:	b	1cf70 <lzma_mode_is_supported@@XZ_5.0+0x22d8>
   1cf60:	ldr	w0, [sp, #336]
   1cf64:	sub	w0, w0, #0x6
   1cf68:	b	1cf70 <lzma_mode_is_supported@@XZ_5.0+0x22d8>
   1cf6c:	mov	w0, #0x0                   	// #0
   1cf70:	str	w0, [sp, #336]
   1cf74:	b	1cfa8 <lzma_mode_is_supported@@XZ_5.0+0x2310>
   1cf78:	ldr	x2, [sp, #72]
   1cf7c:	ldr	w1, [sp, #340]
   1cf80:	mov	x0, x1
   1cf84:	lsl	x0, x0, #1
   1cf88:	add	x0, x0, x1
   1cf8c:	lsl	x0, x0, #2
   1cf90:	sub	x0, x0, x1
   1cf94:	lsl	x0, x0, #2
   1cf98:	add	x0, x2, x0
   1cf9c:	add	x0, x0, #0x10, lsl #12
   1cfa0:	ldr	w0, [x0, #3812]
   1cfa4:	str	w0, [sp, #336]
   1cfa8:	ldr	w0, [sp, #44]
   1cfac:	sub	w0, w0, #0x1
   1cfb0:	ldr	w1, [sp, #340]
   1cfb4:	cmp	w1, w0
   1cfb8:	b.ne	1d04c <lzma_mode_is_supported@@XZ_5.0+0x23b4>  // b.any
   1cfbc:	ldr	x2, [sp, #72]
   1cfc0:	ldr	w1, [sp, #44]
   1cfc4:	mov	x0, x1
   1cfc8:	lsl	x0, x0, #1
   1cfcc:	add	x0, x0, x1
   1cfd0:	lsl	x0, x0, #2
   1cfd4:	sub	x0, x0, x1
   1cfd8:	lsl	x0, x0, #2
   1cfdc:	add	x0, x2, x0
   1cfe0:	add	x0, x0, #0x10, lsl #12
   1cfe4:	ldr	w0, [x0, #3836]
   1cfe8:	cmp	w0, #0x0
   1cfec:	b.ne	1d010 <lzma_mode_is_supported@@XZ_5.0+0x2378>  // b.any
   1cff0:	ldr	w0, [sp, #336]
   1cff4:	cmp	w0, #0x6
   1cff8:	b.hi	1d004 <lzma_mode_is_supported@@XZ_5.0+0x236c>  // b.pmore
   1cffc:	mov	w0, #0x9                   	// #9
   1d000:	b	1d008 <lzma_mode_is_supported@@XZ_5.0+0x2370>
   1d004:	mov	w0, #0xb                   	// #11
   1d008:	str	w0, [sp, #336]
   1d00c:	b	1d368 <lzma_mode_is_supported@@XZ_5.0+0x26d0>
   1d010:	ldr	w0, [sp, #336]
   1d014:	cmp	w0, #0x3
   1d018:	b.ls	1d040 <lzma_mode_is_supported@@XZ_5.0+0x23a8>  // b.plast
   1d01c:	ldr	w0, [sp, #336]
   1d020:	cmp	w0, #0x9
   1d024:	b.hi	1d034 <lzma_mode_is_supported@@XZ_5.0+0x239c>  // b.pmore
   1d028:	ldr	w0, [sp, #336]
   1d02c:	sub	w0, w0, #0x3
   1d030:	b	1d044 <lzma_mode_is_supported@@XZ_5.0+0x23ac>
   1d034:	ldr	w0, [sp, #336]
   1d038:	sub	w0, w0, #0x6
   1d03c:	b	1d044 <lzma_mode_is_supported@@XZ_5.0+0x23ac>
   1d040:	mov	w0, #0x0                   	// #0
   1d044:	str	w0, [sp, #336]
   1d048:	b	1d368 <lzma_mode_is_supported@@XZ_5.0+0x26d0>
   1d04c:	ldr	x2, [sp, #72]
   1d050:	ldr	w1, [sp, #44]
   1d054:	mov	x0, x1
   1d058:	lsl	x0, x0, #1
   1d05c:	add	x0, x0, x1
   1d060:	lsl	x0, x0, #2
   1d064:	sub	x0, x0, x1
   1d068:	lsl	x0, x0, #2
   1d06c:	add	x0, x2, x0
   1d070:	add	x0, x0, #0x10, lsl #12
   1d074:	ldrb	w0, [x0, #3816]
   1d078:	cmp	w0, #0x0
   1d07c:	b.eq	1d134 <lzma_mode_is_supported@@XZ_5.0+0x249c>  // b.none
   1d080:	ldr	x2, [sp, #72]
   1d084:	ldr	w1, [sp, #44]
   1d088:	mov	x0, x1
   1d08c:	lsl	x0, x0, #1
   1d090:	add	x0, x0, x1
   1d094:	lsl	x0, x0, #2
   1d098:	sub	x0, x0, x1
   1d09c:	lsl	x0, x0, #2
   1d0a0:	add	x0, x2, x0
   1d0a4:	add	x0, x0, #0x10, lsl #12
   1d0a8:	ldrb	w0, [x0, #3817]
   1d0ac:	cmp	w0, #0x0
   1d0b0:	b.eq	1d134 <lzma_mode_is_supported@@XZ_5.0+0x249c>  // b.none
   1d0b4:	ldr	x2, [sp, #72]
   1d0b8:	ldr	w1, [sp, #44]
   1d0bc:	mov	x0, x1
   1d0c0:	lsl	x0, x0, #1
   1d0c4:	add	x0, x0, x1
   1d0c8:	lsl	x0, x0, #2
   1d0cc:	sub	x0, x0, x1
   1d0d0:	lsl	x0, x0, #2
   1d0d4:	add	x0, x2, x0
   1d0d8:	add	x0, x0, #0x10, lsl #12
   1d0dc:	ldr	w0, [x0, #3820]
   1d0e0:	str	w0, [sp, #340]
   1d0e4:	ldr	x2, [sp, #72]
   1d0e8:	ldr	w1, [sp, #44]
   1d0ec:	mov	x0, x1
   1d0f0:	lsl	x0, x0, #1
   1d0f4:	add	x0, x0, x1
   1d0f8:	lsl	x0, x0, #2
   1d0fc:	sub	x0, x0, x1
   1d100:	lsl	x0, x0, #2
   1d104:	add	x0, x2, x0
   1d108:	add	x0, x0, #0x10, lsl #12
   1d10c:	ldr	w0, [x0, #3824]
   1d110:	str	w0, [sp, #332]
   1d114:	ldr	w0, [sp, #336]
   1d118:	cmp	w0, #0x6
   1d11c:	b.hi	1d128 <lzma_mode_is_supported@@XZ_5.0+0x2490>  // b.pmore
   1d120:	mov	w0, #0x8                   	// #8
   1d124:	b	1d12c <lzma_mode_is_supported@@XZ_5.0+0x2494>
   1d128:	mov	w0, #0xb                   	// #11
   1d12c:	str	w0, [sp, #336]
   1d130:	b	1d1ac <lzma_mode_is_supported@@XZ_5.0+0x2514>
   1d134:	ldr	x2, [sp, #72]
   1d138:	ldr	w1, [sp, #44]
   1d13c:	mov	x0, x1
   1d140:	lsl	x0, x0, #1
   1d144:	add	x0, x0, x1
   1d148:	lsl	x0, x0, #2
   1d14c:	sub	x0, x0, x1
   1d150:	lsl	x0, x0, #2
   1d154:	add	x0, x2, x0
   1d158:	add	x0, x0, #0x10, lsl #12
   1d15c:	ldr	w0, [x0, #3836]
   1d160:	str	w0, [sp, #332]
   1d164:	ldr	w0, [sp, #332]
   1d168:	cmp	w0, #0x3
   1d16c:	b.hi	1d190 <lzma_mode_is_supported@@XZ_5.0+0x24f8>  // b.pmore
   1d170:	ldr	w0, [sp, #336]
   1d174:	cmp	w0, #0x6
   1d178:	b.hi	1d184 <lzma_mode_is_supported@@XZ_5.0+0x24ec>  // b.pmore
   1d17c:	mov	w0, #0x8                   	// #8
   1d180:	b	1d188 <lzma_mode_is_supported@@XZ_5.0+0x24f0>
   1d184:	mov	w0, #0xb                   	// #11
   1d188:	str	w0, [sp, #336]
   1d18c:	b	1d1ac <lzma_mode_is_supported@@XZ_5.0+0x2514>
   1d190:	ldr	w0, [sp, #336]
   1d194:	cmp	w0, #0x6
   1d198:	b.hi	1d1a4 <lzma_mode_is_supported@@XZ_5.0+0x250c>  // b.pmore
   1d19c:	mov	w0, #0x7                   	// #7
   1d1a0:	b	1d1a8 <lzma_mode_is_supported@@XZ_5.0+0x2510>
   1d1a4:	mov	w0, #0xa                   	// #10
   1d1a8:	str	w0, [sp, #336]
   1d1ac:	ldr	w0, [sp, #332]
   1d1b0:	cmp	w0, #0x3
   1d1b4:	b.hi	1d2e0 <lzma_mode_is_supported@@XZ_5.0+0x2648>  // b.pmore
   1d1b8:	ldr	x2, [sp, #72]
   1d1bc:	ldr	w3, [sp, #332]
   1d1c0:	ldr	w1, [sp, #340]
   1d1c4:	mov	x0, x1
   1d1c8:	lsl	x0, x0, #1
   1d1cc:	add	x0, x0, x1
   1d1d0:	lsl	x0, x0, #2
   1d1d4:	sub	x0, x0, x1
   1d1d8:	add	x1, x0, x3
   1d1dc:	mov	x0, #0x43bc                	// #17340
   1d1e0:	add	x0, x1, x0
   1d1e4:	lsl	x0, x0, #2
   1d1e8:	add	x0, x2, x0
   1d1ec:	ldr	w1, [x0, #16]
   1d1f0:	ldr	x0, [sp, #64]
   1d1f4:	str	w1, [x0]
   1d1f8:	mov	w0, #0x1                   	// #1
   1d1fc:	str	w0, [sp, #328]
   1d200:	b	1d264 <lzma_mode_is_supported@@XZ_5.0+0x25cc>
   1d204:	ldr	w0, [sp, #328]
   1d208:	sub	w4, w0, #0x1
   1d20c:	ldr	w0, [sp, #328]
   1d210:	lsl	x0, x0, #2
   1d214:	ldr	x1, [sp, #64]
   1d218:	add	x2, x1, x0
   1d21c:	ldr	x3, [sp, #72]
   1d220:	mov	w4, w4
   1d224:	ldr	w1, [sp, #340]
   1d228:	mov	x0, x1
   1d22c:	lsl	x0, x0, #1
   1d230:	add	x0, x0, x1
   1d234:	lsl	x0, x0, #2
   1d238:	sub	x0, x0, x1
   1d23c:	add	x1, x0, x4
   1d240:	mov	x0, #0x43bc                	// #17340
   1d244:	add	x0, x1, x0
   1d248:	lsl	x0, x0, #2
   1d24c:	add	x0, x3, x0
   1d250:	ldr	w0, [x0, #16]
   1d254:	str	w0, [x2]
   1d258:	ldr	w0, [sp, #328]
   1d25c:	add	w0, w0, #0x1
   1d260:	str	w0, [sp, #328]
   1d264:	ldr	w1, [sp, #328]
   1d268:	ldr	w0, [sp, #332]
   1d26c:	cmp	w1, w0
   1d270:	b.ls	1d204 <lzma_mode_is_supported@@XZ_5.0+0x256c>  // b.plast
   1d274:	b	1d2d0 <lzma_mode_is_supported@@XZ_5.0+0x2638>
   1d278:	ldr	w0, [sp, #328]
   1d27c:	lsl	x0, x0, #2
   1d280:	ldr	x1, [sp, #64]
   1d284:	add	x2, x1, x0
   1d288:	ldr	x3, [sp, #72]
   1d28c:	ldr	w4, [sp, #328]
   1d290:	ldr	w1, [sp, #340]
   1d294:	mov	x0, x1
   1d298:	lsl	x0, x0, #1
   1d29c:	add	x0, x0, x1
   1d2a0:	lsl	x0, x0, #2
   1d2a4:	sub	x0, x0, x1
   1d2a8:	add	x1, x0, x4
   1d2ac:	mov	x0, #0x43bc                	// #17340
   1d2b0:	add	x0, x1, x0
   1d2b4:	lsl	x0, x0, #2
   1d2b8:	add	x0, x3, x0
   1d2bc:	ldr	w0, [x0, #16]
   1d2c0:	str	w0, [x2]
   1d2c4:	ldr	w0, [sp, #328]
   1d2c8:	add	w0, w0, #0x1
   1d2cc:	str	w0, [sp, #328]
   1d2d0:	ldr	w0, [sp, #328]
   1d2d4:	cmp	w0, #0x3
   1d2d8:	b.ls	1d278 <lzma_mode_is_supported@@XZ_5.0+0x25e0>  // b.plast
   1d2dc:	b	1d368 <lzma_mode_is_supported@@XZ_5.0+0x26d0>
   1d2e0:	ldr	w0, [sp, #332]
   1d2e4:	sub	w1, w0, #0x4
   1d2e8:	ldr	x0, [sp, #64]
   1d2ec:	str	w1, [x0]
   1d2f0:	mov	w0, #0x1                   	// #1
   1d2f4:	str	w0, [sp, #324]
   1d2f8:	b	1d35c <lzma_mode_is_supported@@XZ_5.0+0x26c4>
   1d2fc:	ldr	w0, [sp, #324]
   1d300:	sub	w4, w0, #0x1
   1d304:	ldr	w0, [sp, #324]
   1d308:	lsl	x0, x0, #2
   1d30c:	ldr	x1, [sp, #64]
   1d310:	add	x2, x1, x0
   1d314:	ldr	x3, [sp, #72]
   1d318:	mov	w4, w4
   1d31c:	ldr	w1, [sp, #340]
   1d320:	mov	x0, x1
   1d324:	lsl	x0, x0, #1
   1d328:	add	x0, x0, x1
   1d32c:	lsl	x0, x0, #2
   1d330:	sub	x0, x0, x1
   1d334:	add	x1, x0, x4
   1d338:	mov	x0, #0x43bc                	// #17340
   1d33c:	add	x0, x1, x0
   1d340:	lsl	x0, x0, #2
   1d344:	add	x0, x3, x0
   1d348:	ldr	w0, [x0, #16]
   1d34c:	str	w0, [x2]
   1d350:	ldr	w0, [sp, #324]
   1d354:	add	w0, w0, #0x1
   1d358:	str	w0, [sp, #324]
   1d35c:	ldr	w0, [sp, #324]
   1d360:	cmp	w0, #0x3
   1d364:	b.ls	1d2fc <lzma_mode_is_supported@@XZ_5.0+0x2664>  // b.plast
   1d368:	ldr	x2, [sp, #72]
   1d36c:	ldr	w1, [sp, #44]
   1d370:	mov	x0, x1
   1d374:	lsl	x0, x0, #1
   1d378:	add	x0, x0, x1
   1d37c:	lsl	x0, x0, #2
   1d380:	sub	x0, x0, x1
   1d384:	lsl	x0, x0, #2
   1d388:	add	x0, x2, x0
   1d38c:	add	x0, x0, #0x10, lsl #12
   1d390:	ldr	w1, [sp, #336]
   1d394:	str	w1, [x0, #3812]
   1d398:	str	wzr, [sp, #320]
   1d39c:	b	1d3f8 <lzma_mode_is_supported@@XZ_5.0+0x2760>
   1d3a0:	ldr	w0, [sp, #320]
   1d3a4:	lsl	x0, x0, #2
   1d3a8:	ldr	x1, [sp, #64]
   1d3ac:	add	x0, x1, x0
   1d3b0:	ldr	w2, [x0]
   1d3b4:	ldr	x3, [sp, #72]
   1d3b8:	ldr	w4, [sp, #320]
   1d3bc:	ldr	w1, [sp, #44]
   1d3c0:	mov	x0, x1
   1d3c4:	lsl	x0, x0, #1
   1d3c8:	add	x0, x0, x1
   1d3cc:	lsl	x0, x0, #2
   1d3d0:	sub	x0, x0, x1
   1d3d4:	add	x1, x0, x4
   1d3d8:	mov	x0, #0x43bc                	// #17340
   1d3dc:	add	x0, x1, x0
   1d3e0:	lsl	x0, x0, #2
   1d3e4:	add	x0, x3, x0
   1d3e8:	str	w2, [x0, #16]
   1d3ec:	ldr	w0, [sp, #320]
   1d3f0:	add	w0, w0, #0x1
   1d3f4:	str	w0, [sp, #320]
   1d3f8:	ldr	w0, [sp, #320]
   1d3fc:	cmp	w0, #0x3
   1d400:	b.ls	1d3a0 <lzma_mode_is_supported@@XZ_5.0+0x2708>  // b.plast
   1d404:	ldr	x2, [sp, #72]
   1d408:	ldr	w1, [sp, #44]
   1d40c:	mov	x0, x1
   1d410:	lsl	x0, x0, #1
   1d414:	add	x0, x0, x1
   1d418:	lsl	x0, x0, #2
   1d41c:	sub	x0, x0, x1
   1d420:	lsl	x0, x0, #2
   1d424:	add	x0, x2, x0
   1d428:	add	x0, x0, #0x10, lsl #12
   1d42c:	ldr	w0, [x0, #3828]
   1d430:	str	w0, [sp, #284]
   1d434:	ldr	x0, [sp, #56]
   1d438:	ldrb	w0, [x0]
   1d43c:	strb	w0, [sp, #283]
   1d440:	ldr	x0, [sp, #64]
   1d444:	ldr	w0, [x0]
   1d448:	mov	w0, w0
   1d44c:	mvn	x0, x0
   1d450:	ldr	x1, [sp, #56]
   1d454:	add	x0, x1, x0
   1d458:	ldrb	w0, [x0]
   1d45c:	strb	w0, [sp, #282]
   1d460:	ldr	x0, [sp, #72]
   1d464:	ldr	w0, [x0, #2960]
   1d468:	ldr	w1, [sp, #48]
   1d46c:	and	w0, w1, w0
   1d470:	str	w0, [sp, #276]
   1d474:	ldr	x1, [sp, #72]
   1d478:	ldr	w0, [sp, #276]
   1d47c:	ldr	w2, [sp, #336]
   1d480:	lsl	x2, x2, #4
   1d484:	add	x2, x2, x0
   1d488:	mov	x0, #0x35c8                	// #13768
   1d48c:	add	x0, x2, x0
   1d490:	lsl	x0, x0, #1
   1d494:	add	x0, x1, x0
   1d498:	ldrh	w0, [x0, #12]
   1d49c:	bl	1b4c4 <lzma_mode_is_supported@@XZ_5.0+0x82c>
   1d4a0:	mov	w1, w0
   1d4a4:	ldr	w0, [sp, #284]
   1d4a8:	add	w19, w1, w0
   1d4ac:	ldr	x0, [sp, #56]
   1d4b0:	sub	x0, x0, #0x1
   1d4b4:	ldrb	w0, [x0]
   1d4b8:	mov	w6, w0
   1d4bc:	ldr	w0, [sp, #336]
   1d4c0:	cmp	w0, #0x6
   1d4c4:	cset	w0, hi  // hi = pmore
   1d4c8:	and	w2, w0, #0xff
   1d4cc:	ldrb	w0, [sp, #282]
   1d4d0:	ldrb	w1, [sp, #283]
   1d4d4:	mov	w5, w1
   1d4d8:	mov	w4, w0
   1d4dc:	mov	w3, w2
   1d4e0:	mov	w2, w6
   1d4e4:	ldr	w1, [sp, #48]
   1d4e8:	ldr	x0, [sp, #72]
   1d4ec:	bl	1b774 <lzma_mode_is_supported@@XZ_5.0+0xadc>
   1d4f0:	add	w0, w19, w0
   1d4f4:	str	w0, [sp, #272]
   1d4f8:	strb	wzr, [sp, #319]
   1d4fc:	ldr	w0, [sp, #44]
   1d500:	add	w0, w0, #0x1
   1d504:	ldr	x2, [sp, #72]
   1d508:	mov	w1, w0
   1d50c:	mov	x0, x1
   1d510:	lsl	x0, x0, #1
   1d514:	add	x0, x0, x1
   1d518:	lsl	x0, x0, #2
   1d51c:	sub	x0, x0, x1
   1d520:	lsl	x0, x0, #2
   1d524:	add	x0, x2, x0
   1d528:	add	x0, x0, #0x10, lsl #12
   1d52c:	ldr	w0, [x0, #3828]
   1d530:	ldr	w1, [sp, #272]
   1d534:	cmp	w1, w0
   1d538:	b.cs	1d5f4 <lzma_mode_is_supported@@XZ_5.0+0x295c>  // b.hs, b.nlast
   1d53c:	ldr	w0, [sp, #44]
   1d540:	add	w0, w0, #0x1
   1d544:	ldr	x2, [sp, #72]
   1d548:	mov	w1, w0
   1d54c:	mov	x0, x1
   1d550:	lsl	x0, x0, #1
   1d554:	add	x0, x0, x1
   1d558:	lsl	x0, x0, #2
   1d55c:	sub	x0, x0, x1
   1d560:	lsl	x0, x0, #2
   1d564:	add	x0, x2, x0
   1d568:	add	x0, x0, #0x10, lsl #12
   1d56c:	ldr	w1, [sp, #272]
   1d570:	str	w1, [x0, #3828]
   1d574:	ldr	w0, [sp, #44]
   1d578:	add	w0, w0, #0x1
   1d57c:	ldr	x2, [sp, #72]
   1d580:	mov	w1, w0
   1d584:	mov	x0, x1
   1d588:	lsl	x0, x0, #1
   1d58c:	add	x0, x0, x1
   1d590:	lsl	x0, x0, #2
   1d594:	sub	x0, x0, x1
   1d598:	lsl	x0, x0, #2
   1d59c:	add	x0, x2, x0
   1d5a0:	add	x0, x0, #0x10, lsl #12
   1d5a4:	ldr	w1, [sp, #44]
   1d5a8:	str	w1, [x0, #3832]
   1d5ac:	ldr	w0, [sp, #44]
   1d5b0:	add	w0, w0, #0x1
   1d5b4:	mov	w1, w0
   1d5b8:	mov	x0, x1
   1d5bc:	lsl	x0, x0, #1
   1d5c0:	add	x0, x0, x1
   1d5c4:	lsl	x0, x0, #2
   1d5c8:	sub	x0, x0, x1
   1d5cc:	lsl	x0, x0, #2
   1d5d0:	mov	x1, #0xee0                 	// #3808
   1d5d4:	movk	x1, #0x1, lsl #16
   1d5d8:	add	x0, x0, x1
   1d5dc:	ldr	x1, [sp, #72]
   1d5e0:	add	x0, x1, x0
   1d5e4:	add	x0, x0, #0x4
   1d5e8:	bl	1bf90 <lzma_mode_is_supported@@XZ_5.0+0x12f8>
   1d5ec:	mov	w0, #0x1                   	// #1
   1d5f0:	strb	w0, [sp, #319]
   1d5f4:	ldr	x1, [sp, #72]
   1d5f8:	ldr	w0, [sp, #276]
   1d5fc:	ldr	w2, [sp, #336]
   1d600:	lsl	x2, x2, #4
   1d604:	add	x2, x2, x0
   1d608:	mov	x0, #0x35c8                	// #13768
   1d60c:	add	x0, x2, x0
   1d610:	lsl	x0, x0, #1
   1d614:	add	x0, x1, x0
   1d618:	ldrh	w0, [x0, #12]
   1d61c:	bl	1b4f4 <lzma_mode_is_supported@@XZ_5.0+0x85c>
   1d620:	mov	w1, w0
   1d624:	ldr	w0, [sp, #284]
   1d628:	add	w0, w0, w1
   1d62c:	str	w0, [sp, #268]
   1d630:	ldr	x1, [sp, #72]
   1d634:	ldr	w2, [sp, #336]
   1d638:	mov	x0, #0x3688                	// #13960
   1d63c:	add	x0, x2, x0
   1d640:	lsl	x0, x0, #1
   1d644:	add	x0, x1, x0
   1d648:	ldrh	w0, [x0, #12]
   1d64c:	bl	1b4f4 <lzma_mode_is_supported@@XZ_5.0+0x85c>
   1d650:	mov	w1, w0
   1d654:	ldr	w0, [sp, #268]
   1d658:	add	w0, w0, w1
   1d65c:	str	w0, [sp, #264]
   1d660:	ldrb	w1, [sp, #282]
   1d664:	ldrb	w0, [sp, #283]
   1d668:	cmp	w1, w0
   1d66c:	b.ne	1d804 <lzma_mode_is_supported@@XZ_5.0+0x2b6c>  // b.any
   1d670:	ldr	w0, [sp, #44]
   1d674:	add	w0, w0, #0x1
   1d678:	ldr	x2, [sp, #72]
   1d67c:	mov	w1, w0
   1d680:	mov	x0, x1
   1d684:	lsl	x0, x0, #1
   1d688:	add	x0, x0, x1
   1d68c:	lsl	x0, x0, #2
   1d690:	sub	x0, x0, x1
   1d694:	lsl	x0, x0, #2
   1d698:	add	x0, x2, x0
   1d69c:	add	x0, x0, #0x10, lsl #12
   1d6a0:	ldr	w0, [x0, #3832]
   1d6a4:	ldr	w1, [sp, #44]
   1d6a8:	cmp	w1, w0
   1d6ac:	b.ls	1d6ec <lzma_mode_is_supported@@XZ_5.0+0x2a54>  // b.plast
   1d6b0:	ldr	w0, [sp, #44]
   1d6b4:	add	w0, w0, #0x1
   1d6b8:	ldr	x2, [sp, #72]
   1d6bc:	mov	w1, w0
   1d6c0:	mov	x0, x1
   1d6c4:	lsl	x0, x0, #1
   1d6c8:	add	x0, x0, x1
   1d6cc:	lsl	x0, x0, #2
   1d6d0:	sub	x0, x0, x1
   1d6d4:	lsl	x0, x0, #2
   1d6d8:	add	x0, x2, x0
   1d6dc:	add	x0, x0, #0x10, lsl #12
   1d6e0:	ldr	w0, [x0, #3836]
   1d6e4:	cmp	w0, #0x0
   1d6e8:	b.eq	1d804 <lzma_mode_is_supported@@XZ_5.0+0x2b6c>  // b.none
   1d6ec:	ldr	w2, [sp, #276]
   1d6f0:	ldr	w1, [sp, #336]
   1d6f4:	ldr	x0, [sp, #72]
   1d6f8:	bl	1b940 <lzma_mode_is_supported@@XZ_5.0+0xca8>
   1d6fc:	mov	w1, w0
   1d700:	ldr	w0, [sp, #264]
   1d704:	add	w0, w0, w1
   1d708:	str	w0, [sp, #260]
   1d70c:	ldr	w0, [sp, #44]
   1d710:	add	w0, w0, #0x1
   1d714:	ldr	x2, [sp, #72]
   1d718:	mov	w1, w0
   1d71c:	mov	x0, x1
   1d720:	lsl	x0, x0, #1
   1d724:	add	x0, x0, x1
   1d728:	lsl	x0, x0, #2
   1d72c:	sub	x0, x0, x1
   1d730:	lsl	x0, x0, #2
   1d734:	add	x0, x2, x0
   1d738:	add	x0, x0, #0x10, lsl #12
   1d73c:	ldr	w0, [x0, #3828]
   1d740:	ldr	w1, [sp, #260]
   1d744:	cmp	w1, w0
   1d748:	b.hi	1d804 <lzma_mode_is_supported@@XZ_5.0+0x2b6c>  // b.pmore
   1d74c:	ldr	w0, [sp, #44]
   1d750:	add	w0, w0, #0x1
   1d754:	ldr	x2, [sp, #72]
   1d758:	mov	w1, w0
   1d75c:	mov	x0, x1
   1d760:	lsl	x0, x0, #1
   1d764:	add	x0, x0, x1
   1d768:	lsl	x0, x0, #2
   1d76c:	sub	x0, x0, x1
   1d770:	lsl	x0, x0, #2
   1d774:	add	x0, x2, x0
   1d778:	add	x0, x0, #0x10, lsl #12
   1d77c:	ldr	w1, [sp, #260]
   1d780:	str	w1, [x0, #3828]
   1d784:	ldr	w0, [sp, #44]
   1d788:	add	w0, w0, #0x1
   1d78c:	ldr	x2, [sp, #72]
   1d790:	mov	w1, w0
   1d794:	mov	x0, x1
   1d798:	lsl	x0, x0, #1
   1d79c:	add	x0, x0, x1
   1d7a0:	lsl	x0, x0, #2
   1d7a4:	sub	x0, x0, x1
   1d7a8:	lsl	x0, x0, #2
   1d7ac:	add	x0, x2, x0
   1d7b0:	add	x0, x0, #0x10, lsl #12
   1d7b4:	ldr	w1, [sp, #44]
   1d7b8:	str	w1, [x0, #3832]
   1d7bc:	ldr	w0, [sp, #44]
   1d7c0:	add	w0, w0, #0x1
   1d7c4:	mov	w1, w0
   1d7c8:	mov	x0, x1
   1d7cc:	lsl	x0, x0, #1
   1d7d0:	add	x0, x0, x1
   1d7d4:	lsl	x0, x0, #2
   1d7d8:	sub	x0, x0, x1
   1d7dc:	lsl	x0, x0, #2
   1d7e0:	mov	x1, #0xee0                 	// #3808
   1d7e4:	movk	x1, #0x1, lsl #16
   1d7e8:	add	x0, x0, x1
   1d7ec:	ldr	x1, [sp, #72]
   1d7f0:	add	x0, x1, x0
   1d7f4:	add	x0, x0, #0x4
   1d7f8:	bl	1bfb8 <lzma_mode_is_supported@@XZ_5.0+0x1320>
   1d7fc:	mov	w0, #0x1                   	// #1
   1d800:	strb	w0, [sp, #319]
   1d804:	ldr	w0, [sp, #36]
   1d808:	cmp	w0, #0x1
   1d80c:	b.hi	1d818 <lzma_mode_is_supported@@XZ_5.0+0x2b80>  // b.pmore
   1d810:	ldr	w0, [sp, #52]
   1d814:	b	1ea78 <lzma_mode_is_supported@@XZ_5.0+0x3de0>
   1d818:	ldr	w0, [sp, #36]
   1d81c:	ldr	w2, [sp, #40]
   1d820:	ldr	w1, [sp, #40]
   1d824:	cmp	w2, w0
   1d828:	csel	w0, w1, w0, ls  // ls = plast
   1d82c:	str	w0, [sp, #256]
   1d830:	ldrb	w0, [sp, #319]
   1d834:	eor	w0, w0, #0x1
   1d838:	and	w0, w0, #0xff
   1d83c:	cmp	w0, #0x0
   1d840:	b.eq	1db74 <lzma_mode_is_supported@@XZ_5.0+0x2edc>  // b.none
   1d844:	ldrb	w1, [sp, #282]
   1d848:	ldrb	w0, [sp, #283]
   1d84c:	cmp	w1, w0
   1d850:	b.eq	1db74 <lzma_mode_is_supported@@XZ_5.0+0x2edc>  // b.none
   1d854:	ldr	x0, [sp, #64]
   1d858:	ldr	w0, [x0]
   1d85c:	mov	w0, w0
   1d860:	mvn	x0, x0
   1d864:	ldr	x1, [sp, #56]
   1d868:	add	x0, x1, x0
   1d86c:	str	x0, [sp, #248]
   1d870:	ldr	w0, [sp, #40]
   1d874:	add	w0, w0, #0x1
   1d878:	ldr	w2, [sp, #36]
   1d87c:	ldr	w1, [sp, #36]
   1d880:	cmp	w2, w0
   1d884:	csel	w0, w1, w0, ls  // ls = plast
   1d888:	str	w0, [sp, #244]
   1d88c:	ldr	x0, [sp, #56]
   1d890:	str	x0, [sp, #120]
   1d894:	ldr	x0, [sp, #248]
   1d898:	str	x0, [sp, #112]
   1d89c:	mov	w0, #0x1                   	// #1
   1d8a0:	str	w0, [sp, #108]
   1d8a4:	ldr	w0, [sp, #244]
   1d8a8:	str	w0, [sp, #104]
   1d8ac:	b	1d8bc <lzma_mode_is_supported@@XZ_5.0+0x2c24>
   1d8b0:	ldr	w0, [sp, #108]
   1d8b4:	add	w0, w0, #0x1
   1d8b8:	str	w0, [sp, #108]
   1d8bc:	ldr	w1, [sp, #104]
   1d8c0:	ldr	w0, [sp, #108]
   1d8c4:	cmp	w1, w0
   1d8c8:	b.ls	1d8f4 <lzma_mode_is_supported@@XZ_5.0+0x2c5c>  // b.plast
   1d8cc:	ldr	w0, [sp, #108]
   1d8d0:	ldr	x1, [sp, #120]
   1d8d4:	add	x0, x1, x0
   1d8d8:	ldrb	w1, [x0]
   1d8dc:	ldr	w0, [sp, #108]
   1d8e0:	ldr	x2, [sp, #112]
   1d8e4:	add	x0, x2, x0
   1d8e8:	ldrb	w0, [x0]
   1d8ec:	cmp	w1, w0
   1d8f0:	b.eq	1d8b0 <lzma_mode_is_supported@@XZ_5.0+0x2c18>  // b.none
   1d8f4:	ldr	w0, [sp, #108]
   1d8f8:	sub	w0, w0, #0x1
   1d8fc:	str	w0, [sp, #240]
   1d900:	ldr	w0, [sp, #240]
   1d904:	cmp	w0, #0x1
   1d908:	b.ls	1db74 <lzma_mode_is_supported@@XZ_5.0+0x2edc>  // b.plast
   1d90c:	ldr	w0, [sp, #336]
   1d910:	str	w0, [sp, #236]
   1d914:	ldr	w0, [sp, #236]
   1d918:	cmp	w0, #0x3
   1d91c:	b.ls	1d944 <lzma_mode_is_supported@@XZ_5.0+0x2cac>  // b.plast
   1d920:	ldr	w0, [sp, #236]
   1d924:	cmp	w0, #0x9
   1d928:	b.hi	1d938 <lzma_mode_is_supported@@XZ_5.0+0x2ca0>  // b.pmore
   1d92c:	ldr	w0, [sp, #236]
   1d930:	sub	w0, w0, #0x3
   1d934:	b	1d948 <lzma_mode_is_supported@@XZ_5.0+0x2cb0>
   1d938:	ldr	w0, [sp, #236]
   1d93c:	sub	w0, w0, #0x6
   1d940:	b	1d948 <lzma_mode_is_supported@@XZ_5.0+0x2cb0>
   1d944:	mov	w0, #0x0                   	// #0
   1d948:	str	w0, [sp, #236]
   1d94c:	ldr	w0, [sp, #48]
   1d950:	add	w1, w0, #0x1
   1d954:	ldr	x0, [sp, #72]
   1d958:	ldr	w0, [x0, #2960]
   1d95c:	and	w0, w1, w0
   1d960:	str	w0, [sp, #232]
   1d964:	ldr	x1, [sp, #72]
   1d968:	ldr	w0, [sp, #232]
   1d96c:	ldr	w2, [sp, #236]
   1d970:	lsl	x2, x2, #4
   1d974:	add	x2, x2, x0
   1d978:	mov	x0, #0x35c8                	// #13768
   1d97c:	add	x0, x2, x0
   1d980:	lsl	x0, x0, #1
   1d984:	add	x0, x1, x0
   1d988:	ldrh	w0, [x0, #12]
   1d98c:	bl	1b4f4 <lzma_mode_is_supported@@XZ_5.0+0x85c>
   1d990:	mov	w1, w0
   1d994:	ldr	w0, [sp, #272]
   1d998:	add	w19, w1, w0
   1d99c:	ldr	x1, [sp, #72]
   1d9a0:	ldr	w2, [sp, #236]
   1d9a4:	mov	x0, #0x3688                	// #13960
   1d9a8:	add	x0, x2, x0
   1d9ac:	lsl	x0, x0, #1
   1d9b0:	add	x0, x1, x0
   1d9b4:	ldrh	w0, [x0, #12]
   1d9b8:	bl	1b4f4 <lzma_mode_is_supported@@XZ_5.0+0x85c>
   1d9bc:	add	w0, w19, w0
   1d9c0:	str	w0, [sp, #228]
   1d9c4:	ldr	w1, [sp, #44]
   1d9c8:	ldr	w0, [sp, #240]
   1d9cc:	add	w0, w1, w0
   1d9d0:	add	w0, w0, #0x1
   1d9d4:	str	w0, [sp, #224]
   1d9d8:	b	1da18 <lzma_mode_is_supported@@XZ_5.0+0x2d80>
   1d9dc:	ldr	w0, [sp, #52]
   1d9e0:	add	w0, w0, #0x1
   1d9e4:	str	w0, [sp, #52]
   1d9e8:	ldr	x2, [sp, #72]
   1d9ec:	ldr	w1, [sp, #52]
   1d9f0:	mov	x0, x1
   1d9f4:	lsl	x0, x0, #1
   1d9f8:	add	x0, x0, x1
   1d9fc:	lsl	x0, x0, #2
   1da00:	sub	x0, x0, x1
   1da04:	lsl	x0, x0, #2
   1da08:	add	x0, x2, x0
   1da0c:	add	x0, x0, #0x10, lsl #12
   1da10:	mov	w1, #0x40000000            	// #1073741824
   1da14:	str	w1, [x0, #3828]
   1da18:	ldr	w1, [sp, #52]
   1da1c:	ldr	w0, [sp, #224]
   1da20:	cmp	w1, w0
   1da24:	b.cc	1d9dc <lzma_mode_is_supported@@XZ_5.0+0x2d44>  // b.lo, b.ul, b.last
   1da28:	ldr	w4, [sp, #232]
   1da2c:	ldr	w3, [sp, #236]
   1da30:	ldr	w2, [sp, #240]
   1da34:	mov	w1, #0x0                   	// #0
   1da38:	ldr	x0, [sp, #72]
   1da3c:	bl	1bb20 <lzma_mode_is_supported@@XZ_5.0+0xe88>
   1da40:	mov	w1, w0
   1da44:	ldr	w0, [sp, #228]
   1da48:	add	w0, w0, w1
   1da4c:	str	w0, [sp, #220]
   1da50:	ldr	x2, [sp, #72]
   1da54:	ldr	w1, [sp, #224]
   1da58:	mov	x0, x1
   1da5c:	lsl	x0, x0, #1
   1da60:	add	x0, x0, x1
   1da64:	lsl	x0, x0, #2
   1da68:	sub	x0, x0, x1
   1da6c:	lsl	x0, x0, #2
   1da70:	add	x0, x2, x0
   1da74:	add	x0, x0, #0x10, lsl #12
   1da78:	ldr	w0, [x0, #3828]
   1da7c:	ldr	w1, [sp, #220]
   1da80:	cmp	w1, w0
   1da84:	b.cs	1db74 <lzma_mode_is_supported@@XZ_5.0+0x2edc>  // b.hs, b.nlast
   1da88:	ldr	x2, [sp, #72]
   1da8c:	ldr	w1, [sp, #224]
   1da90:	mov	x0, x1
   1da94:	lsl	x0, x0, #1
   1da98:	add	x0, x0, x1
   1da9c:	lsl	x0, x0, #2
   1daa0:	sub	x0, x0, x1
   1daa4:	lsl	x0, x0, #2
   1daa8:	add	x0, x2, x0
   1daac:	add	x0, x0, #0x10, lsl #12
   1dab0:	ldr	w1, [sp, #220]
   1dab4:	str	w1, [x0, #3828]
   1dab8:	ldr	w0, [sp, #44]
   1dabc:	add	w2, w0, #0x1
   1dac0:	ldr	x3, [sp, #72]
   1dac4:	ldr	w1, [sp, #224]
   1dac8:	mov	x0, x1
   1dacc:	lsl	x0, x0, #1
   1dad0:	add	x0, x0, x1
   1dad4:	lsl	x0, x0, #2
   1dad8:	sub	x0, x0, x1
   1dadc:	lsl	x0, x0, #2
   1dae0:	add	x0, x3, x0
   1dae4:	add	x0, x0, #0x10, lsl #12
   1dae8:	str	w2, [x0, #3832]
   1daec:	ldr	x2, [sp, #72]
   1daf0:	ldr	w1, [sp, #224]
   1daf4:	mov	x0, x1
   1daf8:	lsl	x0, x0, #1
   1dafc:	add	x0, x0, x1
   1db00:	lsl	x0, x0, #2
   1db04:	sub	x0, x0, x1
   1db08:	lsl	x0, x0, #2
   1db0c:	add	x0, x2, x0
   1db10:	add	x0, x0, #0x10, lsl #12
   1db14:	str	wzr, [x0, #3836]
   1db18:	ldr	x2, [sp, #72]
   1db1c:	ldr	w1, [sp, #224]
   1db20:	mov	x0, x1
   1db24:	lsl	x0, x0, #1
   1db28:	add	x0, x0, x1
   1db2c:	lsl	x0, x0, #2
   1db30:	sub	x0, x0, x1
   1db34:	lsl	x0, x0, #2
   1db38:	add	x0, x2, x0
   1db3c:	add	x0, x0, #0x10, lsl #12
   1db40:	mov	w1, #0x1                   	// #1
   1db44:	strb	w1, [x0, #3816]
   1db48:	ldr	x2, [sp, #72]
   1db4c:	ldr	w1, [sp, #224]
   1db50:	mov	x0, x1
   1db54:	lsl	x0, x0, #1
   1db58:	add	x0, x0, x1
   1db5c:	lsl	x0, x0, #2
   1db60:	sub	x0, x0, x1
   1db64:	lsl	x0, x0, #2
   1db68:	add	x0, x2, x0
   1db6c:	add	x0, x0, #0x10, lsl #12
   1db70:	strb	wzr, [x0, #3817]
   1db74:	mov	w0, #0x2                   	// #2
   1db78:	str	w0, [sp, #312]
   1db7c:	str	wzr, [sp, #308]
   1db80:	b	1e2ec <lzma_mode_is_supported@@XZ_5.0+0x3654>
   1db84:	ldr	w0, [sp, #308]
   1db88:	lsl	x0, x0, #2
   1db8c:	ldr	x1, [sp, #64]
   1db90:	add	x0, x1, x0
   1db94:	ldr	w0, [x0]
   1db98:	mov	w0, w0
   1db9c:	mvn	x0, x0
   1dba0:	ldr	x1, [sp, #56]
   1dba4:	add	x0, x1, x0
   1dba8:	str	x0, [sp, #168]
   1dbac:	ldr	x0, [sp, #56]
   1dbb0:	ldrb	w1, [x0]
   1dbb4:	ldr	x0, [sp, #168]
   1dbb8:	ldrb	w0, [x0]
   1dbbc:	cmp	w1, w0
   1dbc0:	b.ne	1e2dc <lzma_mode_is_supported@@XZ_5.0+0x3644>  // b.any
   1dbc4:	ldr	x0, [sp, #56]
   1dbc8:	add	x0, x0, #0x1
   1dbcc:	ldrb	w1, [x0]
   1dbd0:	ldr	x0, [sp, #168]
   1dbd4:	add	x0, x0, #0x1
   1dbd8:	ldrb	w0, [x0]
   1dbdc:	cmp	w1, w0
   1dbe0:	b.ne	1e2dc <lzma_mode_is_supported@@XZ_5.0+0x3644>  // b.any
   1dbe4:	ldr	x0, [sp, #56]
   1dbe8:	str	x0, [sp, #96]
   1dbec:	ldr	x0, [sp, #168]
   1dbf0:	str	x0, [sp, #88]
   1dbf4:	mov	w0, #0x2                   	// #2
   1dbf8:	str	w0, [sp, #84]
   1dbfc:	ldr	w0, [sp, #256]
   1dc00:	str	w0, [sp, #80]
   1dc04:	b	1dc14 <lzma_mode_is_supported@@XZ_5.0+0x2f7c>
   1dc08:	ldr	w0, [sp, #84]
   1dc0c:	add	w0, w0, #0x1
   1dc10:	str	w0, [sp, #84]
   1dc14:	ldr	w1, [sp, #80]
   1dc18:	ldr	w0, [sp, #84]
   1dc1c:	cmp	w1, w0
   1dc20:	b.ls	1dc4c <lzma_mode_is_supported@@XZ_5.0+0x2fb4>  // b.plast
   1dc24:	ldr	w0, [sp, #84]
   1dc28:	ldr	x1, [sp, #96]
   1dc2c:	add	x0, x1, x0
   1dc30:	ldrb	w1, [x0]
   1dc34:	ldr	w0, [sp, #84]
   1dc38:	ldr	x2, [sp, #88]
   1dc3c:	add	x0, x2, x0
   1dc40:	ldrb	w0, [x0]
   1dc44:	cmp	w1, w0
   1dc48:	b.eq	1dc08 <lzma_mode_is_supported@@XZ_5.0+0x2f70>  // b.none
   1dc4c:	ldr	w0, [sp, #84]
   1dc50:	str	w0, [sp, #304]
   1dc54:	b	1dc94 <lzma_mode_is_supported@@XZ_5.0+0x2ffc>
   1dc58:	ldr	w0, [sp, #52]
   1dc5c:	add	w0, w0, #0x1
   1dc60:	str	w0, [sp, #52]
   1dc64:	ldr	x2, [sp, #72]
   1dc68:	ldr	w1, [sp, #52]
   1dc6c:	mov	x0, x1
   1dc70:	lsl	x0, x0, #1
   1dc74:	add	x0, x0, x1
   1dc78:	lsl	x0, x0, #2
   1dc7c:	sub	x0, x0, x1
   1dc80:	lsl	x0, x0, #2
   1dc84:	add	x0, x2, x0
   1dc88:	add	x0, x0, #0x10, lsl #12
   1dc8c:	mov	w1, #0x40000000            	// #1073741824
   1dc90:	str	w1, [x0, #3828]
   1dc94:	ldr	w1, [sp, #44]
   1dc98:	ldr	w0, [sp, #304]
   1dc9c:	add	w0, w1, w0
   1dca0:	ldr	w1, [sp, #52]
   1dca4:	cmp	w1, w0
   1dca8:	b.cc	1dc58 <lzma_mode_is_supported@@XZ_5.0+0x2fc0>  // b.lo, b.ul, b.last
   1dcac:	ldr	w0, [sp, #304]
   1dcb0:	str	w0, [sp, #164]
   1dcb4:	ldr	w3, [sp, #276]
   1dcb8:	ldr	w2, [sp, #336]
   1dcbc:	ldr	w1, [sp, #308]
   1dcc0:	ldr	x0, [sp, #72]
   1dcc4:	bl	1b9b8 <lzma_mode_is_supported@@XZ_5.0+0xd20>
   1dcc8:	mov	w1, w0
   1dccc:	ldr	w0, [sp, #264]
   1dcd0:	add	w0, w0, w1
   1dcd4:	str	w0, [sp, #160]
   1dcd8:	ldr	x1, [sp, #72]
   1dcdc:	mov	x0, #0xba48                	// #47688
   1dce0:	add	x0, x1, x0
   1dce4:	ldr	w2, [sp, #276]
   1dce8:	ldr	w1, [sp, #304]
   1dcec:	bl	1b8f0 <lzma_mode_is_supported@@XZ_5.0+0xc58>
   1dcf0:	mov	w1, w0
   1dcf4:	ldr	w0, [sp, #160]
   1dcf8:	add	w0, w0, w1
   1dcfc:	str	w0, [sp, #156]
   1dd00:	ldr	w1, [sp, #44]
   1dd04:	ldr	w0, [sp, #304]
   1dd08:	add	w0, w1, w0
   1dd0c:	ldr	x2, [sp, #72]
   1dd10:	mov	w1, w0
   1dd14:	mov	x0, x1
   1dd18:	lsl	x0, x0, #1
   1dd1c:	add	x0, x0, x1
   1dd20:	lsl	x0, x0, #2
   1dd24:	sub	x0, x0, x1
   1dd28:	lsl	x0, x0, #2
   1dd2c:	add	x0, x2, x0
   1dd30:	add	x0, x0, #0x10, lsl #12
   1dd34:	ldr	w0, [x0, #3828]
   1dd38:	ldr	w1, [sp, #156]
   1dd3c:	cmp	w1, w0
   1dd40:	b.cs	1de30 <lzma_mode_is_supported@@XZ_5.0+0x3198>  // b.hs, b.nlast
   1dd44:	ldr	w1, [sp, #44]
   1dd48:	ldr	w0, [sp, #304]
   1dd4c:	add	w0, w1, w0
   1dd50:	ldr	x2, [sp, #72]
   1dd54:	mov	w1, w0
   1dd58:	mov	x0, x1
   1dd5c:	lsl	x0, x0, #1
   1dd60:	add	x0, x0, x1
   1dd64:	lsl	x0, x0, #2
   1dd68:	sub	x0, x0, x1
   1dd6c:	lsl	x0, x0, #2
   1dd70:	add	x0, x2, x0
   1dd74:	add	x0, x0, #0x10, lsl #12
   1dd78:	ldr	w1, [sp, #156]
   1dd7c:	str	w1, [x0, #3828]
   1dd80:	ldr	w1, [sp, #44]
   1dd84:	ldr	w0, [sp, #304]
   1dd88:	add	w0, w1, w0
   1dd8c:	ldr	x2, [sp, #72]
   1dd90:	mov	w1, w0
   1dd94:	mov	x0, x1
   1dd98:	lsl	x0, x0, #1
   1dd9c:	add	x0, x0, x1
   1dda0:	lsl	x0, x0, #2
   1dda4:	sub	x0, x0, x1
   1dda8:	lsl	x0, x0, #2
   1ddac:	add	x0, x2, x0
   1ddb0:	add	x0, x0, #0x10, lsl #12
   1ddb4:	ldr	w1, [sp, #44]
   1ddb8:	str	w1, [x0, #3832]
   1ddbc:	ldr	w1, [sp, #44]
   1ddc0:	ldr	w0, [sp, #304]
   1ddc4:	add	w0, w1, w0
   1ddc8:	ldr	x2, [sp, #72]
   1ddcc:	mov	w1, w0
   1ddd0:	mov	x0, x1
   1ddd4:	lsl	x0, x0, #1
   1ddd8:	add	x0, x0, x1
   1dddc:	lsl	x0, x0, #2
   1dde0:	sub	x0, x0, x1
   1dde4:	lsl	x0, x0, #2
   1dde8:	add	x0, x2, x0
   1ddec:	add	x0, x0, #0x10, lsl #12
   1ddf0:	ldr	w1, [sp, #308]
   1ddf4:	str	w1, [x0, #3836]
   1ddf8:	ldr	w1, [sp, #44]
   1ddfc:	ldr	w0, [sp, #304]
   1de00:	add	w0, w1, w0
   1de04:	ldr	x2, [sp, #72]
   1de08:	mov	w1, w0
   1de0c:	mov	x0, x1
   1de10:	lsl	x0, x0, #1
   1de14:	add	x0, x0, x1
   1de18:	lsl	x0, x0, #2
   1de1c:	sub	x0, x0, x1
   1de20:	lsl	x0, x0, #2
   1de24:	add	x0, x2, x0
   1de28:	add	x0, x0, #0x10, lsl #12
   1de2c:	strb	wzr, [x0, #3816]
   1de30:	ldr	w0, [sp, #304]
   1de34:	sub	w0, w0, #0x1
   1de38:	str	w0, [sp, #304]
   1de3c:	ldr	w0, [sp, #304]
   1de40:	cmp	w0, #0x1
   1de44:	b.hi	1dcd8 <lzma_mode_is_supported@@XZ_5.0+0x3040>  // b.pmore
   1de48:	ldr	w0, [sp, #164]
   1de4c:	str	w0, [sp, #304]
   1de50:	ldr	w0, [sp, #308]
   1de54:	cmp	w0, #0x0
   1de58:	b.ne	1de68 <lzma_mode_is_supported@@XZ_5.0+0x31d0>  // b.any
   1de5c:	ldr	w0, [sp, #304]
   1de60:	add	w0, w0, #0x1
   1de64:	str	w0, [sp, #312]
   1de68:	ldr	w0, [sp, #304]
   1de6c:	add	w0, w0, #0x1
   1de70:	str	w0, [sp, #300]
   1de74:	ldr	w1, [sp, #300]
   1de78:	ldr	w0, [sp, #40]
   1de7c:	add	w0, w1, w0
   1de80:	ldr	w2, [sp, #36]
   1de84:	ldr	w1, [sp, #36]
   1de88:	cmp	w2, w0
   1de8c:	csel	w0, w1, w0, ls  // ls = plast
   1de90:	str	w0, [sp, #152]
   1de94:	b	1dea4 <lzma_mode_is_supported@@XZ_5.0+0x320c>
   1de98:	ldr	w0, [sp, #300]
   1de9c:	add	w0, w0, #0x1
   1dea0:	str	w0, [sp, #300]
   1dea4:	ldr	w1, [sp, #300]
   1dea8:	ldr	w0, [sp, #152]
   1deac:	cmp	w1, w0
   1deb0:	b.cs	1dedc <lzma_mode_is_supported@@XZ_5.0+0x3244>  // b.hs, b.nlast
   1deb4:	ldr	w0, [sp, #300]
   1deb8:	ldr	x1, [sp, #56]
   1debc:	add	x0, x1, x0
   1dec0:	ldrb	w1, [x0]
   1dec4:	ldr	w0, [sp, #300]
   1dec8:	ldr	x2, [sp, #168]
   1decc:	add	x0, x2, x0
   1ded0:	ldrb	w0, [x0]
   1ded4:	cmp	w1, w0
   1ded8:	b.eq	1de98 <lzma_mode_is_supported@@XZ_5.0+0x3200>  // b.none
   1dedc:	ldr	w1, [sp, #300]
   1dee0:	ldr	w0, [sp, #304]
   1dee4:	sub	w0, w1, w0
   1dee8:	sub	w0, w0, #0x1
   1deec:	str	w0, [sp, #300]
   1def0:	ldr	w0, [sp, #300]
   1def4:	cmp	w0, #0x1
   1def8:	b.ls	1e2e0 <lzma_mode_is_supported@@XZ_5.0+0x3648>  // b.plast
   1defc:	ldr	w0, [sp, #336]
   1df00:	str	w0, [sp, #148]
   1df04:	ldr	w0, [sp, #148]
   1df08:	cmp	w0, #0x6
   1df0c:	b.hi	1df18 <lzma_mode_is_supported@@XZ_5.0+0x3280>  // b.pmore
   1df10:	mov	w0, #0x8                   	// #8
   1df14:	b	1df1c <lzma_mode_is_supported@@XZ_5.0+0x3284>
   1df18:	mov	w0, #0xb                   	// #11
   1df1c:	str	w0, [sp, #148]
   1df20:	ldr	w1, [sp, #48]
   1df24:	ldr	w0, [sp, #304]
   1df28:	add	w1, w1, w0
   1df2c:	ldr	x0, [sp, #72]
   1df30:	ldr	w0, [x0, #2960]
   1df34:	and	w0, w1, w0
   1df38:	str	w0, [sp, #144]
   1df3c:	ldr	x1, [sp, #72]
   1df40:	mov	x0, #0xba48                	// #47688
   1df44:	add	x0, x1, x0
   1df48:	ldr	w2, [sp, #276]
   1df4c:	ldr	w1, [sp, #304]
   1df50:	bl	1b8f0 <lzma_mode_is_supported@@XZ_5.0+0xc58>
   1df54:	mov	w1, w0
   1df58:	ldr	w0, [sp, #160]
   1df5c:	add	w19, w1, w0
   1df60:	ldr	x1, [sp, #72]
   1df64:	ldr	w0, [sp, #144]
   1df68:	ldr	w2, [sp, #148]
   1df6c:	lsl	x2, x2, #4
   1df70:	add	x2, x2, x0
   1df74:	mov	x0, #0x35c8                	// #13768
   1df78:	add	x0, x2, x0
   1df7c:	lsl	x0, x0, #1
   1df80:	add	x0, x1, x0
   1df84:	ldrh	w0, [x0, #12]
   1df88:	bl	1b4c4 <lzma_mode_is_supported@@XZ_5.0+0x82c>
   1df8c:	add	w19, w19, w0
   1df90:	ldr	w1, [sp, #48]
   1df94:	ldr	w0, [sp, #304]
   1df98:	add	w6, w1, w0
   1df9c:	ldr	w0, [sp, #304]
   1dfa0:	sub	w0, w0, #0x1
   1dfa4:	mov	w0, w0
   1dfa8:	ldr	x1, [sp, #56]
   1dfac:	add	x0, x1, x0
   1dfb0:	ldrb	w0, [x0]
   1dfb4:	mov	w2, w0
   1dfb8:	ldr	w0, [sp, #304]
   1dfbc:	ldr	x1, [sp, #168]
   1dfc0:	add	x0, x1, x0
   1dfc4:	ldrb	w0, [x0]
   1dfc8:	mov	w3, w0
   1dfcc:	ldr	w0, [sp, #304]
   1dfd0:	ldr	x1, [sp, #56]
   1dfd4:	add	x0, x1, x0
   1dfd8:	ldrb	w0, [x0]
   1dfdc:	mov	w5, w0
   1dfe0:	mov	w4, w3
   1dfe4:	mov	w3, #0x1                   	// #1
   1dfe8:	mov	w1, w6
   1dfec:	ldr	x0, [sp, #72]
   1dff0:	bl	1b774 <lzma_mode_is_supported@@XZ_5.0+0xadc>
   1dff4:	add	w0, w19, w0
   1dff8:	str	w0, [sp, #140]
   1dffc:	ldr	w0, [sp, #148]
   1e000:	cmp	w0, #0x3
   1e004:	b.ls	1e02c <lzma_mode_is_supported@@XZ_5.0+0x3394>  // b.plast
   1e008:	ldr	w0, [sp, #148]
   1e00c:	cmp	w0, #0x9
   1e010:	b.hi	1e020 <lzma_mode_is_supported@@XZ_5.0+0x3388>  // b.pmore
   1e014:	ldr	w0, [sp, #148]
   1e018:	sub	w0, w0, #0x3
   1e01c:	b	1e030 <lzma_mode_is_supported@@XZ_5.0+0x3398>
   1e020:	ldr	w0, [sp, #148]
   1e024:	sub	w0, w0, #0x6
   1e028:	b	1e030 <lzma_mode_is_supported@@XZ_5.0+0x3398>
   1e02c:	mov	w0, #0x0                   	// #0
   1e030:	str	w0, [sp, #148]
   1e034:	ldr	w1, [sp, #48]
   1e038:	ldr	w0, [sp, #304]
   1e03c:	add	w0, w1, w0
   1e040:	add	w1, w0, #0x1
   1e044:	ldr	x0, [sp, #72]
   1e048:	ldr	w0, [x0, #2960]
   1e04c:	and	w0, w1, w0
   1e050:	str	w0, [sp, #144]
   1e054:	ldr	x1, [sp, #72]
   1e058:	ldr	w0, [sp, #144]
   1e05c:	ldr	w2, [sp, #148]
   1e060:	lsl	x2, x2, #4
   1e064:	add	x2, x2, x0
   1e068:	mov	x0, #0x35c8                	// #13768
   1e06c:	add	x0, x2, x0
   1e070:	lsl	x0, x0, #1
   1e074:	add	x0, x1, x0
   1e078:	ldrh	w0, [x0, #12]
   1e07c:	bl	1b4f4 <lzma_mode_is_supported@@XZ_5.0+0x85c>
   1e080:	mov	w1, w0
   1e084:	ldr	w0, [sp, #140]
   1e088:	add	w19, w1, w0
   1e08c:	ldr	x1, [sp, #72]
   1e090:	ldr	w2, [sp, #148]
   1e094:	mov	x0, #0x3688                	// #13960
   1e098:	add	x0, x2, x0
   1e09c:	lsl	x0, x0, #1
   1e0a0:	add	x0, x1, x0
   1e0a4:	ldrh	w0, [x0, #12]
   1e0a8:	bl	1b4f4 <lzma_mode_is_supported@@XZ_5.0+0x85c>
   1e0ac:	add	w0, w19, w0
   1e0b0:	str	w0, [sp, #136]
   1e0b4:	ldr	w1, [sp, #44]
   1e0b8:	ldr	w0, [sp, #304]
   1e0bc:	add	w1, w1, w0
   1e0c0:	ldr	w0, [sp, #300]
   1e0c4:	add	w0, w1, w0
   1e0c8:	add	w0, w0, #0x1
   1e0cc:	str	w0, [sp, #132]
   1e0d0:	b	1e110 <lzma_mode_is_supported@@XZ_5.0+0x3478>
   1e0d4:	ldr	w0, [sp, #52]
   1e0d8:	add	w0, w0, #0x1
   1e0dc:	str	w0, [sp, #52]
   1e0e0:	ldr	x2, [sp, #72]
   1e0e4:	ldr	w1, [sp, #52]
   1e0e8:	mov	x0, x1
   1e0ec:	lsl	x0, x0, #1
   1e0f0:	add	x0, x0, x1
   1e0f4:	lsl	x0, x0, #2
   1e0f8:	sub	x0, x0, x1
   1e0fc:	lsl	x0, x0, #2
   1e100:	add	x0, x2, x0
   1e104:	add	x0, x0, #0x10, lsl #12
   1e108:	mov	w1, #0x40000000            	// #1073741824
   1e10c:	str	w1, [x0, #3828]
   1e110:	ldr	w1, [sp, #52]
   1e114:	ldr	w0, [sp, #132]
   1e118:	cmp	w1, w0
   1e11c:	b.cc	1e0d4 <lzma_mode_is_supported@@XZ_5.0+0x343c>  // b.lo, b.ul, b.last
   1e120:	ldr	w4, [sp, #144]
   1e124:	ldr	w3, [sp, #148]
   1e128:	ldr	w2, [sp, #300]
   1e12c:	mov	w1, #0x0                   	// #0
   1e130:	ldr	x0, [sp, #72]
   1e134:	bl	1bb20 <lzma_mode_is_supported@@XZ_5.0+0xe88>
   1e138:	mov	w1, w0
   1e13c:	ldr	w0, [sp, #136]
   1e140:	add	w0, w0, w1
   1e144:	str	w0, [sp, #128]
   1e148:	ldr	x2, [sp, #72]
   1e14c:	ldr	w1, [sp, #132]
   1e150:	mov	x0, x1
   1e154:	lsl	x0, x0, #1
   1e158:	add	x0, x0, x1
   1e15c:	lsl	x0, x0, #2
   1e160:	sub	x0, x0, x1
   1e164:	lsl	x0, x0, #2
   1e168:	add	x0, x2, x0
   1e16c:	add	x0, x0, #0x10, lsl #12
   1e170:	ldr	w0, [x0, #3828]
   1e174:	ldr	w1, [sp, #128]
   1e178:	cmp	w1, w0
   1e17c:	b.cs	1e2e0 <lzma_mode_is_supported@@XZ_5.0+0x3648>  // b.hs, b.nlast
   1e180:	ldr	x2, [sp, #72]
   1e184:	ldr	w1, [sp, #132]
   1e188:	mov	x0, x1
   1e18c:	lsl	x0, x0, #1
   1e190:	add	x0, x0, x1
   1e194:	lsl	x0, x0, #2
   1e198:	sub	x0, x0, x1
   1e19c:	lsl	x0, x0, #2
   1e1a0:	add	x0, x2, x0
   1e1a4:	add	x0, x0, #0x10, lsl #12
   1e1a8:	ldr	w1, [sp, #128]
   1e1ac:	str	w1, [x0, #3828]
   1e1b0:	ldr	w1, [sp, #44]
   1e1b4:	ldr	w0, [sp, #304]
   1e1b8:	add	w0, w1, w0
   1e1bc:	add	w2, w0, #0x1
   1e1c0:	ldr	x3, [sp, #72]
   1e1c4:	ldr	w1, [sp, #132]
   1e1c8:	mov	x0, x1
   1e1cc:	lsl	x0, x0, #1
   1e1d0:	add	x0, x0, x1
   1e1d4:	lsl	x0, x0, #2
   1e1d8:	sub	x0, x0, x1
   1e1dc:	lsl	x0, x0, #2
   1e1e0:	add	x0, x3, x0
   1e1e4:	add	x0, x0, #0x10, lsl #12
   1e1e8:	str	w2, [x0, #3832]
   1e1ec:	ldr	x2, [sp, #72]
   1e1f0:	ldr	w1, [sp, #132]
   1e1f4:	mov	x0, x1
   1e1f8:	lsl	x0, x0, #1
   1e1fc:	add	x0, x0, x1
   1e200:	lsl	x0, x0, #2
   1e204:	sub	x0, x0, x1
   1e208:	lsl	x0, x0, #2
   1e20c:	add	x0, x2, x0
   1e210:	add	x0, x0, #0x10, lsl #12
   1e214:	str	wzr, [x0, #3836]
   1e218:	ldr	x2, [sp, #72]
   1e21c:	ldr	w1, [sp, #132]
   1e220:	mov	x0, x1
   1e224:	lsl	x0, x0, #1
   1e228:	add	x0, x0, x1
   1e22c:	lsl	x0, x0, #2
   1e230:	sub	x0, x0, x1
   1e234:	lsl	x0, x0, #2
   1e238:	add	x0, x2, x0
   1e23c:	add	x0, x0, #0x10, lsl #12
   1e240:	mov	w1, #0x1                   	// #1
   1e244:	strb	w1, [x0, #3816]
   1e248:	ldr	x2, [sp, #72]
   1e24c:	ldr	w1, [sp, #132]
   1e250:	mov	x0, x1
   1e254:	lsl	x0, x0, #1
   1e258:	add	x0, x0, x1
   1e25c:	lsl	x0, x0, #2
   1e260:	sub	x0, x0, x1
   1e264:	lsl	x0, x0, #2
   1e268:	add	x0, x2, x0
   1e26c:	add	x0, x0, #0x10, lsl #12
   1e270:	mov	w1, #0x1                   	// #1
   1e274:	strb	w1, [x0, #3817]
   1e278:	ldr	x2, [sp, #72]
   1e27c:	ldr	w1, [sp, #132]
   1e280:	mov	x0, x1
   1e284:	lsl	x0, x0, #1
   1e288:	add	x0, x0, x1
   1e28c:	lsl	x0, x0, #2
   1e290:	sub	x0, x0, x1
   1e294:	lsl	x0, x0, #2
   1e298:	add	x0, x2, x0
   1e29c:	add	x0, x0, #0x10, lsl #12
   1e2a0:	ldr	w1, [sp, #44]
   1e2a4:	str	w1, [x0, #3820]
   1e2a8:	ldr	x2, [sp, #72]
   1e2ac:	ldr	w1, [sp, #132]
   1e2b0:	mov	x0, x1
   1e2b4:	lsl	x0, x0, #1
   1e2b8:	add	x0, x0, x1
   1e2bc:	lsl	x0, x0, #2
   1e2c0:	sub	x0, x0, x1
   1e2c4:	lsl	x0, x0, #2
   1e2c8:	add	x0, x2, x0
   1e2cc:	add	x0, x0, #0x10, lsl #12
   1e2d0:	ldr	w1, [sp, #308]
   1e2d4:	str	w1, [x0, #3824]
   1e2d8:	b	1e2e0 <lzma_mode_is_supported@@XZ_5.0+0x3648>
   1e2dc:	nop
   1e2e0:	ldr	w0, [sp, #308]
   1e2e4:	add	w0, w0, #0x1
   1e2e8:	str	w0, [sp, #308]
   1e2ec:	ldr	w0, [sp, #308]
   1e2f0:	cmp	w0, #0x3
   1e2f4:	b.ls	1db84 <lzma_mode_is_supported@@XZ_5.0+0x2eec>  // b.plast
   1e2f8:	ldr	w1, [sp, #344]
   1e2fc:	ldr	w0, [sp, #256]
   1e300:	cmp	w1, w0
   1e304:	b.ls	1e370 <lzma_mode_is_supported@@XZ_5.0+0x36d8>  // b.plast
   1e308:	ldr	w0, [sp, #256]
   1e30c:	str	w0, [sp, #344]
   1e310:	str	wzr, [sp, #348]
   1e314:	b	1e324 <lzma_mode_is_supported@@XZ_5.0+0x368c>
   1e318:	ldr	w0, [sp, #348]
   1e31c:	add	w0, w0, #0x1
   1e320:	str	w0, [sp, #348]
   1e324:	ldr	x1, [sp, #72]
   1e328:	ldr	w0, [sp, #348]
   1e32c:	add	x0, x0, #0x5e
   1e330:	lsl	x0, x0, #3
   1e334:	add	x0, x1, x0
   1e338:	ldr	w0, [x0, #4]
   1e33c:	ldr	w1, [sp, #344]
   1e340:	cmp	w1, w0
   1e344:	b.hi	1e318 <lzma_mode_is_supported@@XZ_5.0+0x3680>  // b.pmore
   1e348:	ldr	w0, [sp, #348]
   1e34c:	add	w1, w0, #0x1
   1e350:	str	w1, [sp, #348]
   1e354:	ldr	x1, [sp, #72]
   1e358:	mov	w0, w0
   1e35c:	add	x0, x0, #0x5e
   1e360:	lsl	x0, x0, #3
   1e364:	add	x0, x1, x0
   1e368:	ldr	w1, [sp, #344]
   1e36c:	str	w1, [x0, #4]
   1e370:	ldr	w1, [sp, #344]
   1e374:	ldr	w0, [sp, #312]
   1e378:	cmp	w1, w0
   1e37c:	b.cc	1ea74 <lzma_mode_is_supported@@XZ_5.0+0x3ddc>  // b.lo, b.ul, b.last
   1e380:	ldr	x1, [sp, #72]
   1e384:	ldr	w2, [sp, #336]
   1e388:	mov	x0, #0x3688                	// #13960
   1e38c:	add	x0, x2, x0
   1e390:	lsl	x0, x0, #1
   1e394:	add	x0, x1, x0
   1e398:	ldrh	w0, [x0, #12]
   1e39c:	bl	1b4c4 <lzma_mode_is_supported@@XZ_5.0+0x82c>
   1e3a0:	mov	w1, w0
   1e3a4:	ldr	w0, [sp, #268]
   1e3a8:	add	w0, w0, w1
   1e3ac:	str	w0, [sp, #216]
   1e3b0:	b	1e3f0 <lzma_mode_is_supported@@XZ_5.0+0x3758>
   1e3b4:	ldr	w0, [sp, #52]
   1e3b8:	add	w0, w0, #0x1
   1e3bc:	str	w0, [sp, #52]
   1e3c0:	ldr	x2, [sp, #72]
   1e3c4:	ldr	w1, [sp, #52]
   1e3c8:	mov	x0, x1
   1e3cc:	lsl	x0, x0, #1
   1e3d0:	add	x0, x0, x1
   1e3d4:	lsl	x0, x0, #2
   1e3d8:	sub	x0, x0, x1
   1e3dc:	lsl	x0, x0, #2
   1e3e0:	add	x0, x2, x0
   1e3e4:	add	x0, x0, #0x10, lsl #12
   1e3e8:	mov	w1, #0x40000000            	// #1073741824
   1e3ec:	str	w1, [x0, #3828]
   1e3f0:	ldr	w1, [sp, #44]
   1e3f4:	ldr	w0, [sp, #344]
   1e3f8:	add	w0, w1, w0
   1e3fc:	ldr	w1, [sp, #52]
   1e400:	cmp	w1, w0
   1e404:	b.cc	1e3b4 <lzma_mode_is_supported@@XZ_5.0+0x371c>  // b.lo, b.ul, b.last
   1e408:	str	wzr, [sp, #296]
   1e40c:	b	1e41c <lzma_mode_is_supported@@XZ_5.0+0x3784>
   1e410:	ldr	w0, [sp, #296]
   1e414:	add	w0, w0, #0x1
   1e418:	str	w0, [sp, #296]
   1e41c:	ldr	x1, [sp, #72]
   1e420:	ldr	w0, [sp, #296]
   1e424:	add	x0, x0, #0x5e
   1e428:	lsl	x0, x0, #3
   1e42c:	add	x0, x1, x0
   1e430:	ldr	w0, [x0, #4]
   1e434:	ldr	w1, [sp, #312]
   1e438:	cmp	w1, w0
   1e43c:	b.hi	1e410 <lzma_mode_is_supported@@XZ_5.0+0x3778>  // b.pmore
   1e440:	ldr	w0, [sp, #312]
   1e444:	str	w0, [sp, #292]
   1e448:	ldr	x1, [sp, #72]
   1e44c:	ldr	w0, [sp, #296]
   1e450:	add	x0, x0, #0x5e
   1e454:	lsl	x0, x0, #3
   1e458:	add	x0, x1, x0
   1e45c:	ldr	w0, [x0, #8]
   1e460:	str	w0, [sp, #212]
   1e464:	ldr	w3, [sp, #276]
   1e468:	ldr	w2, [sp, #292]
   1e46c:	ldr	w1, [sp, #212]
   1e470:	ldr	x0, [sp, #72]
   1e474:	bl	1bb80 <lzma_mode_is_supported@@XZ_5.0+0xee8>
   1e478:	mov	w1, w0
   1e47c:	ldr	w0, [sp, #216]
   1e480:	add	w0, w0, w1
   1e484:	str	w0, [sp, #208]
   1e488:	ldr	w1, [sp, #44]
   1e48c:	ldr	w0, [sp, #292]
   1e490:	add	w0, w1, w0
   1e494:	ldr	x2, [sp, #72]
   1e498:	mov	w1, w0
   1e49c:	mov	x0, x1
   1e4a0:	lsl	x0, x0, #1
   1e4a4:	add	x0, x0, x1
   1e4a8:	lsl	x0, x0, #2
   1e4ac:	sub	x0, x0, x1
   1e4b0:	lsl	x0, x0, #2
   1e4b4:	add	x0, x2, x0
   1e4b8:	add	x0, x0, #0x10, lsl #12
   1e4bc:	ldr	w0, [x0, #3828]
   1e4c0:	ldr	w1, [sp, #208]
   1e4c4:	cmp	w1, w0
   1e4c8:	b.cs	1e5bc <lzma_mode_is_supported@@XZ_5.0+0x3924>  // b.hs, b.nlast
   1e4cc:	ldr	w1, [sp, #44]
   1e4d0:	ldr	w0, [sp, #292]
   1e4d4:	add	w0, w1, w0
   1e4d8:	ldr	x2, [sp, #72]
   1e4dc:	mov	w1, w0
   1e4e0:	mov	x0, x1
   1e4e4:	lsl	x0, x0, #1
   1e4e8:	add	x0, x0, x1
   1e4ec:	lsl	x0, x0, #2
   1e4f0:	sub	x0, x0, x1
   1e4f4:	lsl	x0, x0, #2
   1e4f8:	add	x0, x2, x0
   1e4fc:	add	x0, x0, #0x10, lsl #12
   1e500:	ldr	w1, [sp, #208]
   1e504:	str	w1, [x0, #3828]
   1e508:	ldr	w1, [sp, #44]
   1e50c:	ldr	w0, [sp, #292]
   1e510:	add	w0, w1, w0
   1e514:	ldr	x2, [sp, #72]
   1e518:	mov	w1, w0
   1e51c:	mov	x0, x1
   1e520:	lsl	x0, x0, #1
   1e524:	add	x0, x0, x1
   1e528:	lsl	x0, x0, #2
   1e52c:	sub	x0, x0, x1
   1e530:	lsl	x0, x0, #2
   1e534:	add	x0, x2, x0
   1e538:	add	x0, x0, #0x10, lsl #12
   1e53c:	ldr	w1, [sp, #44]
   1e540:	str	w1, [x0, #3832]
   1e544:	ldr	w1, [sp, #44]
   1e548:	ldr	w0, [sp, #292]
   1e54c:	add	w1, w1, w0
   1e550:	ldr	w0, [sp, #212]
   1e554:	add	w2, w0, #0x4
   1e558:	ldr	x3, [sp, #72]
   1e55c:	mov	w1, w1
   1e560:	mov	x0, x1
   1e564:	lsl	x0, x0, #1
   1e568:	add	x0, x0, x1
   1e56c:	lsl	x0, x0, #2
   1e570:	sub	x0, x0, x1
   1e574:	lsl	x0, x0, #2
   1e578:	add	x0, x3, x0
   1e57c:	add	x0, x0, #0x10, lsl #12
   1e580:	str	w2, [x0, #3836]
   1e584:	ldr	w1, [sp, #44]
   1e588:	ldr	w0, [sp, #292]
   1e58c:	add	w0, w1, w0
   1e590:	ldr	x2, [sp, #72]
   1e594:	mov	w1, w0
   1e598:	mov	x0, x1
   1e59c:	lsl	x0, x0, #1
   1e5a0:	add	x0, x0, x1
   1e5a4:	lsl	x0, x0, #2
   1e5a8:	sub	x0, x0, x1
   1e5ac:	lsl	x0, x0, #2
   1e5b0:	add	x0, x2, x0
   1e5b4:	add	x0, x0, #0x10, lsl #12
   1e5b8:	strb	wzr, [x0, #3816]
   1e5bc:	ldr	x1, [sp, #72]
   1e5c0:	ldr	w0, [sp, #296]
   1e5c4:	add	x0, x0, #0x5e
   1e5c8:	lsl	x0, x0, #3
   1e5cc:	add	x0, x1, x0
   1e5d0:	ldr	w0, [x0, #4]
   1e5d4:	ldr	w1, [sp, #292]
   1e5d8:	cmp	w1, w0
   1e5dc:	b.ne	1ea60 <lzma_mode_is_supported@@XZ_5.0+0x3dc8>  // b.any
   1e5e0:	ldr	w0, [sp, #212]
   1e5e4:	mvn	x0, x0
   1e5e8:	ldr	x1, [sp, #56]
   1e5ec:	add	x0, x1, x0
   1e5f0:	str	x0, [sp, #200]
   1e5f4:	ldr	w0, [sp, #292]
   1e5f8:	add	w0, w0, #0x1
   1e5fc:	str	w0, [sp, #288]
   1e600:	ldr	w1, [sp, #288]
   1e604:	ldr	w0, [sp, #40]
   1e608:	add	w0, w1, w0
   1e60c:	ldr	w2, [sp, #36]
   1e610:	ldr	w1, [sp, #36]
   1e614:	cmp	w2, w0
   1e618:	csel	w0, w1, w0, ls  // ls = plast
   1e61c:	str	w0, [sp, #196]
   1e620:	b	1e630 <lzma_mode_is_supported@@XZ_5.0+0x3998>
   1e624:	ldr	w0, [sp, #288]
   1e628:	add	w0, w0, #0x1
   1e62c:	str	w0, [sp, #288]
   1e630:	ldr	w1, [sp, #288]
   1e634:	ldr	w0, [sp, #196]
   1e638:	cmp	w1, w0
   1e63c:	b.cs	1e668 <lzma_mode_is_supported@@XZ_5.0+0x39d0>  // b.hs, b.nlast
   1e640:	ldr	w0, [sp, #288]
   1e644:	ldr	x1, [sp, #56]
   1e648:	add	x0, x1, x0
   1e64c:	ldrb	w1, [x0]
   1e650:	ldr	w0, [sp, #288]
   1e654:	ldr	x2, [sp, #200]
   1e658:	add	x0, x2, x0
   1e65c:	ldrb	w0, [x0]
   1e660:	cmp	w1, w0
   1e664:	b.eq	1e624 <lzma_mode_is_supported@@XZ_5.0+0x398c>  // b.none
   1e668:	ldr	w1, [sp, #288]
   1e66c:	ldr	w0, [sp, #292]
   1e670:	sub	w0, w1, w0
   1e674:	sub	w0, w0, #0x1
   1e678:	str	w0, [sp, #288]
   1e67c:	ldr	w0, [sp, #288]
   1e680:	cmp	w0, #0x1
   1e684:	b.ls	1ea44 <lzma_mode_is_supported@@XZ_5.0+0x3dac>  // b.plast
   1e688:	ldr	w0, [sp, #336]
   1e68c:	str	w0, [sp, #192]
   1e690:	ldr	w0, [sp, #192]
   1e694:	cmp	w0, #0x6
   1e698:	b.hi	1e6a4 <lzma_mode_is_supported@@XZ_5.0+0x3a0c>  // b.pmore
   1e69c:	mov	w0, #0x7                   	// #7
   1e6a0:	b	1e6a8 <lzma_mode_is_supported@@XZ_5.0+0x3a10>
   1e6a4:	mov	w0, #0xa                   	// #10
   1e6a8:	str	w0, [sp, #192]
   1e6ac:	ldr	w1, [sp, #48]
   1e6b0:	ldr	w0, [sp, #292]
   1e6b4:	add	w1, w1, w0
   1e6b8:	ldr	x0, [sp, #72]
   1e6bc:	ldr	w0, [x0, #2960]
   1e6c0:	and	w0, w1, w0
   1e6c4:	str	w0, [sp, #188]
   1e6c8:	ldr	x1, [sp, #72]
   1e6cc:	ldr	w0, [sp, #188]
   1e6d0:	ldr	w2, [sp, #192]
   1e6d4:	lsl	x2, x2, #4
   1e6d8:	add	x2, x2, x0
   1e6dc:	mov	x0, #0x35c8                	// #13768
   1e6e0:	add	x0, x2, x0
   1e6e4:	lsl	x0, x0, #1
   1e6e8:	add	x0, x1, x0
   1e6ec:	ldrh	w0, [x0, #12]
   1e6f0:	bl	1b4c4 <lzma_mode_is_supported@@XZ_5.0+0x82c>
   1e6f4:	mov	w1, w0
   1e6f8:	ldr	w0, [sp, #208]
   1e6fc:	add	w19, w1, w0
   1e700:	ldr	w1, [sp, #48]
   1e704:	ldr	w0, [sp, #292]
   1e708:	add	w6, w1, w0
   1e70c:	ldr	w0, [sp, #292]
   1e710:	sub	w0, w0, #0x1
   1e714:	mov	w0, w0
   1e718:	ldr	x1, [sp, #56]
   1e71c:	add	x0, x1, x0
   1e720:	ldrb	w0, [x0]
   1e724:	mov	w2, w0
   1e728:	ldr	w0, [sp, #292]
   1e72c:	ldr	x1, [sp, #200]
   1e730:	add	x0, x1, x0
   1e734:	ldrb	w0, [x0]
   1e738:	mov	w3, w0
   1e73c:	ldr	w0, [sp, #292]
   1e740:	ldr	x1, [sp, #56]
   1e744:	add	x0, x1, x0
   1e748:	ldrb	w0, [x0]
   1e74c:	mov	w5, w0
   1e750:	mov	w4, w3
   1e754:	mov	w3, #0x1                   	// #1
   1e758:	mov	w1, w6
   1e75c:	ldr	x0, [sp, #72]
   1e760:	bl	1b774 <lzma_mode_is_supported@@XZ_5.0+0xadc>
   1e764:	add	w0, w19, w0
   1e768:	str	w0, [sp, #184]
   1e76c:	ldr	w0, [sp, #192]
   1e770:	cmp	w0, #0x3
   1e774:	b.ls	1e79c <lzma_mode_is_supported@@XZ_5.0+0x3b04>  // b.plast
   1e778:	ldr	w0, [sp, #192]
   1e77c:	cmp	w0, #0x9
   1e780:	b.hi	1e790 <lzma_mode_is_supported@@XZ_5.0+0x3af8>  // b.pmore
   1e784:	ldr	w0, [sp, #192]
   1e788:	sub	w0, w0, #0x3
   1e78c:	b	1e7a0 <lzma_mode_is_supported@@XZ_5.0+0x3b08>
   1e790:	ldr	w0, [sp, #192]
   1e794:	sub	w0, w0, #0x6
   1e798:	b	1e7a0 <lzma_mode_is_supported@@XZ_5.0+0x3b08>
   1e79c:	mov	w0, #0x0                   	// #0
   1e7a0:	str	w0, [sp, #192]
   1e7a4:	ldr	w0, [sp, #188]
   1e7a8:	add	w1, w0, #0x1
   1e7ac:	ldr	x0, [sp, #72]
   1e7b0:	ldr	w0, [x0, #2960]
   1e7b4:	and	w0, w1, w0
   1e7b8:	str	w0, [sp, #188]
   1e7bc:	ldr	x1, [sp, #72]
   1e7c0:	ldr	w0, [sp, #188]
   1e7c4:	ldr	w2, [sp, #192]
   1e7c8:	lsl	x2, x2, #4
   1e7cc:	add	x2, x2, x0
   1e7d0:	mov	x0, #0x35c8                	// #13768
   1e7d4:	add	x0, x2, x0
   1e7d8:	lsl	x0, x0, #1
   1e7dc:	add	x0, x1, x0
   1e7e0:	ldrh	w0, [x0, #12]
   1e7e4:	bl	1b4f4 <lzma_mode_is_supported@@XZ_5.0+0x85c>
   1e7e8:	mov	w1, w0
   1e7ec:	ldr	w0, [sp, #184]
   1e7f0:	add	w19, w1, w0
   1e7f4:	ldr	x1, [sp, #72]
   1e7f8:	ldr	w2, [sp, #192]
   1e7fc:	mov	x0, #0x3688                	// #13960
   1e800:	add	x0, x2, x0
   1e804:	lsl	x0, x0, #1
   1e808:	add	x0, x1, x0
   1e80c:	ldrh	w0, [x0, #12]
   1e810:	bl	1b4f4 <lzma_mode_is_supported@@XZ_5.0+0x85c>
   1e814:	add	w0, w19, w0
   1e818:	str	w0, [sp, #180]
   1e81c:	ldr	w1, [sp, #44]
   1e820:	ldr	w0, [sp, #292]
   1e824:	add	w1, w1, w0
   1e828:	ldr	w0, [sp, #288]
   1e82c:	add	w0, w1, w0
   1e830:	add	w0, w0, #0x1
   1e834:	str	w0, [sp, #176]
   1e838:	b	1e878 <lzma_mode_is_supported@@XZ_5.0+0x3be0>
   1e83c:	ldr	w0, [sp, #52]
   1e840:	add	w0, w0, #0x1
   1e844:	str	w0, [sp, #52]
   1e848:	ldr	x2, [sp, #72]
   1e84c:	ldr	w1, [sp, #52]
   1e850:	mov	x0, x1
   1e854:	lsl	x0, x0, #1
   1e858:	add	x0, x0, x1
   1e85c:	lsl	x0, x0, #2
   1e860:	sub	x0, x0, x1
   1e864:	lsl	x0, x0, #2
   1e868:	add	x0, x2, x0
   1e86c:	add	x0, x0, #0x10, lsl #12
   1e870:	mov	w1, #0x40000000            	// #1073741824
   1e874:	str	w1, [x0, #3828]
   1e878:	ldr	w1, [sp, #52]
   1e87c:	ldr	w0, [sp, #176]
   1e880:	cmp	w1, w0
   1e884:	b.cc	1e83c <lzma_mode_is_supported@@XZ_5.0+0x3ba4>  // b.lo, b.ul, b.last
   1e888:	ldr	w4, [sp, #188]
   1e88c:	ldr	w3, [sp, #192]
   1e890:	ldr	w2, [sp, #288]
   1e894:	mov	w1, #0x0                   	// #0
   1e898:	ldr	x0, [sp, #72]
   1e89c:	bl	1bb20 <lzma_mode_is_supported@@XZ_5.0+0xe88>
   1e8a0:	mov	w1, w0
   1e8a4:	ldr	w0, [sp, #180]
   1e8a8:	add	w0, w0, w1
   1e8ac:	str	w0, [sp, #208]
   1e8b0:	ldr	x2, [sp, #72]
   1e8b4:	ldr	w1, [sp, #176]
   1e8b8:	mov	x0, x1
   1e8bc:	lsl	x0, x0, #1
   1e8c0:	add	x0, x0, x1
   1e8c4:	lsl	x0, x0, #2
   1e8c8:	sub	x0, x0, x1
   1e8cc:	lsl	x0, x0, #2
   1e8d0:	add	x0, x2, x0
   1e8d4:	add	x0, x0, #0x10, lsl #12
   1e8d8:	ldr	w0, [x0, #3828]
   1e8dc:	ldr	w1, [sp, #208]
   1e8e0:	cmp	w1, w0
   1e8e4:	b.cs	1ea44 <lzma_mode_is_supported@@XZ_5.0+0x3dac>  // b.hs, b.nlast
   1e8e8:	ldr	x2, [sp, #72]
   1e8ec:	ldr	w1, [sp, #176]
   1e8f0:	mov	x0, x1
   1e8f4:	lsl	x0, x0, #1
   1e8f8:	add	x0, x0, x1
   1e8fc:	lsl	x0, x0, #2
   1e900:	sub	x0, x0, x1
   1e904:	lsl	x0, x0, #2
   1e908:	add	x0, x2, x0
   1e90c:	add	x0, x0, #0x10, lsl #12
   1e910:	ldr	w1, [sp, #208]
   1e914:	str	w1, [x0, #3828]
   1e918:	ldr	w1, [sp, #44]
   1e91c:	ldr	w0, [sp, #292]
   1e920:	add	w0, w1, w0
   1e924:	add	w2, w0, #0x1
   1e928:	ldr	x3, [sp, #72]
   1e92c:	ldr	w1, [sp, #176]
   1e930:	mov	x0, x1
   1e934:	lsl	x0, x0, #1
   1e938:	add	x0, x0, x1
   1e93c:	lsl	x0, x0, #2
   1e940:	sub	x0, x0, x1
   1e944:	lsl	x0, x0, #2
   1e948:	add	x0, x3, x0
   1e94c:	add	x0, x0, #0x10, lsl #12
   1e950:	str	w2, [x0, #3832]
   1e954:	ldr	x2, [sp, #72]
   1e958:	ldr	w1, [sp, #176]
   1e95c:	mov	x0, x1
   1e960:	lsl	x0, x0, #1
   1e964:	add	x0, x0, x1
   1e968:	lsl	x0, x0, #2
   1e96c:	sub	x0, x0, x1
   1e970:	lsl	x0, x0, #2
   1e974:	add	x0, x2, x0
   1e978:	add	x0, x0, #0x10, lsl #12
   1e97c:	str	wzr, [x0, #3836]
   1e980:	ldr	x2, [sp, #72]
   1e984:	ldr	w1, [sp, #176]
   1e988:	mov	x0, x1
   1e98c:	lsl	x0, x0, #1
   1e990:	add	x0, x0, x1
   1e994:	lsl	x0, x0, #2
   1e998:	sub	x0, x0, x1
   1e99c:	lsl	x0, x0, #2
   1e9a0:	add	x0, x2, x0
   1e9a4:	add	x0, x0, #0x10, lsl #12
   1e9a8:	mov	w1, #0x1                   	// #1
   1e9ac:	strb	w1, [x0, #3816]
   1e9b0:	ldr	x2, [sp, #72]
   1e9b4:	ldr	w1, [sp, #176]
   1e9b8:	mov	x0, x1
   1e9bc:	lsl	x0, x0, #1
   1e9c0:	add	x0, x0, x1
   1e9c4:	lsl	x0, x0, #2
   1e9c8:	sub	x0, x0, x1
   1e9cc:	lsl	x0, x0, #2
   1e9d0:	add	x0, x2, x0
   1e9d4:	add	x0, x0, #0x10, lsl #12
   1e9d8:	mov	w1, #0x1                   	// #1
   1e9dc:	strb	w1, [x0, #3817]
   1e9e0:	ldr	x2, [sp, #72]
   1e9e4:	ldr	w1, [sp, #176]
   1e9e8:	mov	x0, x1
   1e9ec:	lsl	x0, x0, #1
   1e9f0:	add	x0, x0, x1
   1e9f4:	lsl	x0, x0, #2
   1e9f8:	sub	x0, x0, x1
   1e9fc:	lsl	x0, x0, #2
   1ea00:	add	x0, x2, x0
   1ea04:	add	x0, x0, #0x10, lsl #12
   1ea08:	ldr	w1, [sp, #44]
   1ea0c:	str	w1, [x0, #3820]
   1ea10:	ldr	w0, [sp, #212]
   1ea14:	add	w2, w0, #0x4
   1ea18:	ldr	x3, [sp, #72]
   1ea1c:	ldr	w1, [sp, #176]
   1ea20:	mov	x0, x1
   1ea24:	lsl	x0, x0, #1
   1ea28:	add	x0, x0, x1
   1ea2c:	lsl	x0, x0, #2
   1ea30:	sub	x0, x0, x1
   1ea34:	lsl	x0, x0, #2
   1ea38:	add	x0, x3, x0
   1ea3c:	add	x0, x0, #0x10, lsl #12
   1ea40:	str	w2, [x0, #3824]
   1ea44:	ldr	w0, [sp, #296]
   1ea48:	add	w0, w0, #0x1
   1ea4c:	str	w0, [sp, #296]
   1ea50:	ldr	w1, [sp, #296]
   1ea54:	ldr	w0, [sp, #348]
   1ea58:	cmp	w1, w0
   1ea5c:	b.eq	1ea70 <lzma_mode_is_supported@@XZ_5.0+0x3dd8>  // b.none
   1ea60:	ldr	w0, [sp, #292]
   1ea64:	add	w0, w0, #0x1
   1ea68:	str	w0, [sp, #292]
   1ea6c:	b	1e448 <lzma_mode_is_supported@@XZ_5.0+0x37b0>
   1ea70:	nop
   1ea74:	ldr	w0, [sp, #52]
   1ea78:	ldr	x19, [sp, #16]
   1ea7c:	ldp	x29, x30, [sp], #352
   1ea80:	ret
   1ea84:	stp	x29, x30, [sp, #-128]!
   1ea88:	mov	x29, sp
   1ea8c:	stp	x19, x20, [sp, #16]
   1ea90:	str	x21, [sp, #32]
   1ea94:	str	x0, [sp, #88]
   1ea98:	str	x1, [sp, #80]
   1ea9c:	str	x2, [sp, #72]
   1eaa0:	str	x3, [sp, #64]
   1eaa4:	str	w4, [sp, #60]
   1eaa8:	ldr	x0, [sp, #88]
   1eaac:	add	x0, x0, #0x10, lsl #12
   1eab0:	ldr	w1, [x0, #3804]
   1eab4:	ldr	x0, [sp, #88]
   1eab8:	add	x0, x0, #0x10, lsl #12
   1eabc:	ldr	w0, [x0, #3808]
   1eac0:	cmp	w1, w0
   1eac4:	b.eq	1eba0 <lzma_mode_is_supported@@XZ_5.0+0x3f08>  // b.none
   1eac8:	ldr	x0, [sp, #88]
   1eacc:	add	x0, x0, #0x10, lsl #12
   1ead0:	ldr	w0, [x0, #3808]
   1ead4:	ldr	x2, [sp, #88]
   1ead8:	mov	w1, w0
   1eadc:	mov	x0, x1
   1eae0:	lsl	x0, x0, #1
   1eae4:	add	x0, x0, x1
   1eae8:	lsl	x0, x0, #2
   1eaec:	sub	x0, x0, x1
   1eaf0:	lsl	x0, x0, #2
   1eaf4:	add	x0, x2, x0
   1eaf8:	add	x0, x0, #0x10, lsl #12
   1eafc:	ldr	w1, [x0, #3832]
   1eb00:	ldr	x0, [sp, #88]
   1eb04:	add	x0, x0, #0x10, lsl #12
   1eb08:	ldr	w0, [x0, #3808]
   1eb0c:	sub	w1, w1, w0
   1eb10:	ldr	x0, [sp, #64]
   1eb14:	str	w1, [x0]
   1eb18:	ldr	x0, [sp, #88]
   1eb1c:	add	x0, x0, #0x10, lsl #12
   1eb20:	ldr	w0, [x0, #3808]
   1eb24:	ldr	x2, [sp, #88]
   1eb28:	mov	w1, w0
   1eb2c:	mov	x0, x1
   1eb30:	lsl	x0, x0, #1
   1eb34:	add	x0, x0, x1
   1eb38:	lsl	x0, x0, #2
   1eb3c:	sub	x0, x0, x1
   1eb40:	lsl	x0, x0, #2
   1eb44:	add	x0, x2, x0
   1eb48:	add	x0, x0, #0x10, lsl #12
   1eb4c:	ldr	w1, [x0, #3836]
   1eb50:	ldr	x0, [sp, #72]
   1eb54:	str	w1, [x0]
   1eb58:	ldr	x0, [sp, #88]
   1eb5c:	add	x0, x0, #0x10, lsl #12
   1eb60:	ldr	w0, [x0, #3808]
   1eb64:	ldr	x2, [sp, #88]
   1eb68:	mov	w1, w0
   1eb6c:	mov	x0, x1
   1eb70:	lsl	x0, x0, #1
   1eb74:	add	x0, x0, x1
   1eb78:	lsl	x0, x0, #2
   1eb7c:	sub	x0, x0, x1
   1eb80:	lsl	x0, x0, #2
   1eb84:	add	x0, x2, x0
   1eb88:	add	x0, x0, #0x10, lsl #12
   1eb8c:	ldr	w1, [x0, #3832]
   1eb90:	ldr	x0, [sp, #88]
   1eb94:	add	x0, x0, #0x10, lsl #12
   1eb98:	str	w1, [x0, #3808]
   1eb9c:	b	1ed30 <lzma_mode_is_supported@@XZ_5.0+0x4098>
   1eba0:	ldr	x0, [sp, #80]
   1eba4:	ldr	w0, [x0, #28]
   1eba8:	cmp	w0, #0x0
   1ebac:	b.ne	1ebe8 <lzma_mode_is_supported@@XZ_5.0+0x3f50>  // b.any
   1ebb0:	ldr	x0, [sp, #88]
   1ebb4:	add	x0, x0, #0x10, lsl #12
   1ebb8:	ldr	w0, [x0, #3732]
   1ebbc:	cmp	w0, #0x7f
   1ebc0:	b.ls	1ebcc <lzma_mode_is_supported@@XZ_5.0+0x3f34>  // b.plast
   1ebc4:	ldr	x0, [sp, #88]
   1ebc8:	bl	1bc74 <lzma_mode_is_supported@@XZ_5.0+0xfdc>
   1ebcc:	ldr	x0, [sp, #88]
   1ebd0:	add	x0, x0, #0x10, lsl #12
   1ebd4:	ldr	w0, [x0, #3800]
   1ebd8:	cmp	w0, #0xf
   1ebdc:	b.ls	1ebe8 <lzma_mode_is_supported@@XZ_5.0+0x3f50>  // b.plast
   1ebe0:	ldr	x0, [sp, #88]
   1ebe4:	bl	1bf14 <lzma_mode_is_supported@@XZ_5.0+0x127c>
   1ebe8:	ldr	w4, [sp, #60]
   1ebec:	ldr	x3, [sp, #64]
   1ebf0:	ldr	x2, [sp, #72]
   1ebf4:	ldr	x1, [sp, #80]
   1ebf8:	ldr	x0, [sp, #88]
   1ebfc:	bl	1c35c <lzma_mode_is_supported@@XZ_5.0+0x16c4>
   1ec00:	str	w0, [sp, #124]
   1ec04:	ldr	w0, [sp, #124]
   1ec08:	cmn	w0, #0x1
   1ec0c:	b.eq	1ed2c <lzma_mode_is_supported@@XZ_5.0+0x4094>  // b.none
   1ec10:	ldr	x0, [sp, #88]
   1ec14:	add	x0, x0, #0x2e4
   1ec18:	ldp	x0, x1, [x0]
   1ec1c:	stp	x0, x1, [sp, #104]
   1ec20:	mov	w0, #0x1                   	// #1
   1ec24:	str	w0, [sp, #120]
   1ec28:	b	1ecfc <lzma_mode_is_supported@@XZ_5.0+0x4064>
   1ec2c:	ldr	x0, [sp, #88]
   1ec30:	add	x1, x0, #0xb84
   1ec34:	ldr	x0, [sp, #88]
   1ec38:	add	x0, x0, #0x2f4
   1ec3c:	mov	x2, x0
   1ec40:	ldr	x0, [sp, #80]
   1ec44:	bl	15950 <lzma_mf_is_supported@@XZ_5.0+0xc8>
   1ec48:	mov	w1, w0
   1ec4c:	ldr	x0, [sp, #88]
   1ec50:	str	w1, [x0, #2952]
   1ec54:	ldr	x0, [sp, #88]
   1ec58:	ldr	w1, [x0, #2952]
   1ec5c:	ldr	x0, [sp, #80]
   1ec60:	ldr	w0, [x0, #96]
   1ec64:	cmp	w1, w0
   1ec68:	b.cs	1ed10 <lzma_mode_is_supported@@XZ_5.0+0x4078>  // b.hs, b.nlast
   1ec6c:	ldr	x0, [sp, #80]
   1ec70:	bl	1b3e8 <lzma_mode_is_supported@@XZ_5.0+0x750>
   1ec74:	sub	x19, x0, #0x1
   1ec78:	ldr	w1, [sp, #60]
   1ec7c:	ldr	w0, [sp, #120]
   1ec80:	add	w20, w1, w0
   1ec84:	ldr	x0, [sp, #80]
   1ec88:	ldr	w21, [x0, #96]
   1ec8c:	ldr	x0, [sp, #80]
   1ec90:	bl	1b410 <lzma_mode_is_supported@@XZ_5.0+0x778>
   1ec94:	add	w1, w0, #0x1
   1ec98:	mov	w2, #0xfff                 	// #4095
   1ec9c:	ldr	w0, [sp, #120]
   1eca0:	sub	w0, w2, w0
   1eca4:	cmp	w1, w0
   1eca8:	b.cs	1ecbc <lzma_mode_is_supported@@XZ_5.0+0x4024>  // b.hs, b.nlast
   1ecac:	ldr	x0, [sp, #80]
   1ecb0:	bl	1b410 <lzma_mode_is_supported@@XZ_5.0+0x778>
   1ecb4:	add	w0, w0, #0x1
   1ecb8:	b	1ecc8 <lzma_mode_is_supported@@XZ_5.0+0x4030>
   1ecbc:	mov	w1, #0xfff                 	// #4095
   1ecc0:	ldr	w0, [sp, #120]
   1ecc4:	sub	w0, w1, w0
   1ecc8:	add	x1, sp, #0x68
   1eccc:	mov	w7, w0
   1ecd0:	mov	w6, w21
   1ecd4:	ldr	w5, [sp, #120]
   1ecd8:	mov	w4, w20
   1ecdc:	ldr	w3, [sp, #124]
   1ece0:	mov	x2, x19
   1ece4:	ldr	x0, [sp, #88]
   1ece8:	bl	1cd54 <lzma_mode_is_supported@@XZ_5.0+0x20bc>
   1ecec:	str	w0, [sp, #124]
   1ecf0:	ldr	w0, [sp, #120]
   1ecf4:	add	w0, w0, #0x1
   1ecf8:	str	w0, [sp, #120]
   1ecfc:	ldr	w1, [sp, #120]
   1ed00:	ldr	w0, [sp, #124]
   1ed04:	cmp	w1, w0
   1ed08:	b.cc	1ec2c <lzma_mode_is_supported@@XZ_5.0+0x3f94>  // b.lo, b.ul, b.last
   1ed0c:	b	1ed14 <lzma_mode_is_supported@@XZ_5.0+0x407c>
   1ed10:	nop
   1ed14:	ldr	w3, [sp, #120]
   1ed18:	ldr	x2, [sp, #72]
   1ed1c:	ldr	x1, [sp, #64]
   1ed20:	ldr	x0, [sp, #88]
   1ed24:	bl	1bfdc <lzma_mode_is_supported@@XZ_5.0+0x1344>
   1ed28:	b	1ed30 <lzma_mode_is_supported@@XZ_5.0+0x4098>
   1ed2c:	nop
   1ed30:	ldp	x19, x20, [sp, #16]
   1ed34:	ldr	x21, [sp, #32]
   1ed38:	ldp	x29, x30, [sp], #128
   1ed3c:	ret
   1ed40:	sub	sp, sp, #0x20
   1ed44:	str	x0, [sp, #8]
   1ed48:	ldr	x0, [sp, #8]
   1ed4c:	ldrb	w0, [x0]
   1ed50:	str	w0, [sp, #28]
   1ed54:	ldr	x0, [sp, #8]
   1ed58:	add	x0, x0, #0x1
   1ed5c:	ldrb	w0, [x0]
   1ed60:	lsl	w0, w0, #8
   1ed64:	ldr	w1, [sp, #28]
   1ed68:	orr	w0, w1, w0
   1ed6c:	str	w0, [sp, #28]
   1ed70:	ldr	x0, [sp, #8]
   1ed74:	add	x0, x0, #0x2
   1ed78:	ldrb	w0, [x0]
   1ed7c:	lsl	w0, w0, #16
   1ed80:	ldr	w1, [sp, #28]
   1ed84:	orr	w0, w1, w0
   1ed88:	str	w0, [sp, #28]
   1ed8c:	ldr	x0, [sp, #8]
   1ed90:	add	x0, x0, #0x3
   1ed94:	ldrb	w0, [x0]
   1ed98:	lsl	w0, w0, #24
   1ed9c:	ldr	w1, [sp, #28]
   1eda0:	orr	w0, w1, w0
   1eda4:	str	w0, [sp, #28]
   1eda8:	ldr	w0, [sp, #28]
   1edac:	add	sp, sp, #0x20
   1edb0:	ret
   1edb4:	sub	sp, sp, #0x10
   1edb8:	str	x0, [sp, #8]
   1edbc:	str	w1, [sp, #4]
   1edc0:	ldr	x0, [sp, #8]
   1edc4:	ldr	x1, [x0]
   1edc8:	ldr	x0, [sp, #8]
   1edcc:	ldr	x2, [x0, #8]
   1edd0:	ldr	w0, [sp, #4]
   1edd4:	sub	x2, x2, x0
   1edd8:	ldr	w3, [sp, #4]
   1eddc:	ldr	x0, [sp, #8]
   1ede0:	ldr	x0, [x0, #8]
   1ede4:	cmp	x3, x0
   1ede8:	b.cc	1edf8 <lzma_mode_is_supported@@XZ_5.0+0x4160>  // b.lo, b.ul, b.last
   1edec:	ldr	x0, [sp, #8]
   1edf0:	ldr	x0, [x0, #32]
   1edf4:	b	1edfc <lzma_mode_is_supported@@XZ_5.0+0x4164>
   1edf8:	mov	x0, #0x0                   	// #0
   1edfc:	add	x0, x0, x2
   1ee00:	sub	x0, x0, #0x1
   1ee04:	add	x0, x1, x0
   1ee08:	ldrb	w0, [x0]
   1ee0c:	add	sp, sp, #0x10
   1ee10:	ret
   1ee14:	sub	sp, sp, #0x10
   1ee18:	str	x0, [sp, #8]
   1ee1c:	str	x1, [sp]
   1ee20:	ldr	x0, [sp, #8]
   1ee24:	ldr	x0, [x0, #16]
   1ee28:	ldr	x1, [sp]
   1ee2c:	cmp	x1, x0
   1ee30:	cset	w0, cc  // cc = lo, ul, last
   1ee34:	and	w0, w0, #0xff
   1ee38:	add	sp, sp, #0x10
   1ee3c:	ret
   1ee40:	stp	x29, x30, [sp, #-96]!
   1ee44:	mov	x29, sp
   1ee48:	str	x19, [sp, #16]
   1ee4c:	str	x0, [sp, #56]
   1ee50:	str	w1, [sp, #52]
   1ee54:	str	x2, [sp, #40]
   1ee58:	ldr	x0, [sp, #56]
   1ee5c:	ldr	x1, [x0, #24]
   1ee60:	ldr	x0, [sp, #56]
   1ee64:	ldr	x0, [x0, #8]
   1ee68:	sub	x0, x1, x0
   1ee6c:	str	x0, [sp, #80]
   1ee70:	ldr	x0, [sp, #40]
   1ee74:	ldr	w0, [x0]
   1ee78:	mov	w0, w0
   1ee7c:	ldr	x2, [sp, #80]
   1ee80:	ldr	x1, [sp, #80]
   1ee84:	cmp	x2, x0
   1ee88:	csel	x0, x1, x0, ls  // ls = plast
   1ee8c:	str	w0, [sp, #92]
   1ee90:	ldr	x0, [sp, #40]
   1ee94:	ldr	w1, [x0]
   1ee98:	ldr	w0, [sp, #92]
   1ee9c:	sub	w1, w1, w0
   1eea0:	ldr	x0, [sp, #40]
   1eea4:	str	w1, [x0]
   1eea8:	ldr	w1, [sp, #52]
   1eeac:	ldr	w0, [sp, #92]
   1eeb0:	cmp	w1, w0
   1eeb4:	b.cs	1ef10 <lzma_mode_is_supported@@XZ_5.0+0x4278>  // b.hs, b.nlast
   1eeb8:	ldr	x0, [sp, #56]
   1eebc:	ldr	x1, [x0]
   1eec0:	ldr	x0, [sp, #56]
   1eec4:	ldr	x0, [x0, #8]
   1eec8:	add	x19, x1, x0
   1eecc:	ldr	w1, [sp, #52]
   1eed0:	ldr	x0, [sp, #56]
   1eed4:	bl	1edb4 <lzma_mode_is_supported@@XZ_5.0+0x411c>
   1eed8:	and	w0, w0, #0xff
   1eedc:	strb	w0, [x19]
   1eee0:	ldr	x0, [sp, #56]
   1eee4:	ldr	x0, [x0, #8]
   1eee8:	add	x1, x0, #0x1
   1eeec:	ldr	x0, [sp, #56]
   1eef0:	str	x1, [x0, #8]
   1eef4:	ldr	w0, [sp, #92]
   1eef8:	sub	w0, w0, #0x1
   1eefc:	str	w0, [sp, #92]
   1ef00:	ldr	w0, [sp, #92]
   1ef04:	cmp	w0, #0x0
   1ef08:	b.ne	1eeb8 <lzma_mode_is_supported@@XZ_5.0+0x4220>  // b.any
   1ef0c:	b	1f0d4 <lzma_mode_is_supported@@XZ_5.0+0x443c>
   1ef10:	ldr	w1, [sp, #52]
   1ef14:	ldr	x0, [sp, #56]
   1ef18:	ldr	x0, [x0, #8]
   1ef1c:	cmp	x1, x0
   1ef20:	b.cs	1ef88 <lzma_mode_is_supported@@XZ_5.0+0x42f0>  // b.hs, b.nlast
   1ef24:	ldr	x0, [sp, #56]
   1ef28:	ldr	x1, [x0]
   1ef2c:	ldr	x0, [sp, #56]
   1ef30:	ldr	x0, [x0, #8]
   1ef34:	add	x3, x1, x0
   1ef38:	ldr	x0, [sp, #56]
   1ef3c:	ldr	x1, [x0]
   1ef40:	ldr	x0, [sp, #56]
   1ef44:	ldr	x2, [x0, #8]
   1ef48:	ldr	w0, [sp, #52]
   1ef4c:	sub	x0, x2, x0
   1ef50:	sub	x0, x0, #0x1
   1ef54:	add	x0, x1, x0
   1ef58:	ldr	w1, [sp, #92]
   1ef5c:	mov	x2, x1
   1ef60:	mov	x1, x0
   1ef64:	mov	x0, x3
   1ef68:	bl	3090 <memcpy@plt>
   1ef6c:	ldr	x0, [sp, #56]
   1ef70:	ldr	x1, [x0, #8]
   1ef74:	ldr	w0, [sp, #92]
   1ef78:	add	x1, x1, x0
   1ef7c:	ldr	x0, [sp, #56]
   1ef80:	str	x1, [x0, #8]
   1ef84:	b	1f0d4 <lzma_mode_is_supported@@XZ_5.0+0x443c>
   1ef88:	ldr	x0, [sp, #56]
   1ef8c:	ldr	x0, [x0, #8]
   1ef90:	mov	w1, w0
   1ef94:	ldr	w0, [sp, #52]
   1ef98:	sub	w0, w1, w0
   1ef9c:	ldr	x1, [sp, #56]
   1efa0:	ldr	x1, [x1, #32]
   1efa4:	add	w0, w0, w1
   1efa8:	sub	w0, w0, #0x1
   1efac:	str	w0, [sp, #76]
   1efb0:	ldr	x0, [sp, #56]
   1efb4:	ldr	x0, [x0, #32]
   1efb8:	mov	w1, w0
   1efbc:	ldr	w0, [sp, #76]
   1efc0:	sub	w0, w1, w0
   1efc4:	str	w0, [sp, #72]
   1efc8:	ldr	w1, [sp, #72]
   1efcc:	ldr	w0, [sp, #92]
   1efd0:	cmp	w1, w0
   1efd4:	b.cs	1f084 <lzma_mode_is_supported@@XZ_5.0+0x43ec>  // b.hs, b.nlast
   1efd8:	ldr	x0, [sp, #56]
   1efdc:	ldr	x1, [x0]
   1efe0:	ldr	x0, [sp, #56]
   1efe4:	ldr	x0, [x0, #8]
   1efe8:	add	x3, x1, x0
   1efec:	ldr	x0, [sp, #56]
   1eff0:	ldr	x1, [x0]
   1eff4:	ldr	w0, [sp, #76]
   1eff8:	add	x0, x1, x0
   1effc:	ldr	w1, [sp, #72]
   1f000:	mov	x2, x1
   1f004:	mov	x1, x0
   1f008:	mov	x0, x3
   1f00c:	bl	30b0 <memmove@plt>
   1f010:	ldr	x0, [sp, #56]
   1f014:	ldr	x1, [x0, #8]
   1f018:	ldr	w0, [sp, #72]
   1f01c:	add	x1, x1, x0
   1f020:	ldr	x0, [sp, #56]
   1f024:	str	x1, [x0, #8]
   1f028:	ldr	w1, [sp, #92]
   1f02c:	ldr	w0, [sp, #72]
   1f030:	sub	w0, w1, w0
   1f034:	str	w0, [sp, #72]
   1f038:	ldr	x0, [sp, #56]
   1f03c:	ldr	x1, [x0]
   1f040:	ldr	x0, [sp, #56]
   1f044:	ldr	x0, [x0, #8]
   1f048:	add	x3, x1, x0
   1f04c:	ldr	x0, [sp, #56]
   1f050:	ldr	x0, [x0]
   1f054:	ldr	w1, [sp, #72]
   1f058:	mov	x2, x1
   1f05c:	mov	x1, x0
   1f060:	mov	x0, x3
   1f064:	bl	3090 <memcpy@plt>
   1f068:	ldr	x0, [sp, #56]
   1f06c:	ldr	x1, [x0, #8]
   1f070:	ldr	w0, [sp, #72]
   1f074:	add	x1, x1, x0
   1f078:	ldr	x0, [sp, #56]
   1f07c:	str	x1, [x0, #8]
   1f080:	b	1f0d4 <lzma_mode_is_supported@@XZ_5.0+0x443c>
   1f084:	ldr	x0, [sp, #56]
   1f088:	ldr	x1, [x0]
   1f08c:	ldr	x0, [sp, #56]
   1f090:	ldr	x0, [x0, #8]
   1f094:	add	x3, x1, x0
   1f098:	ldr	x0, [sp, #56]
   1f09c:	ldr	x1, [x0]
   1f0a0:	ldr	w0, [sp, #76]
   1f0a4:	add	x0, x1, x0
   1f0a8:	ldr	w1, [sp, #92]
   1f0ac:	mov	x2, x1
   1f0b0:	mov	x1, x0
   1f0b4:	mov	x0, x3
   1f0b8:	bl	30b0 <memmove@plt>
   1f0bc:	ldr	x0, [sp, #56]
   1f0c0:	ldr	x1, [x0, #8]
   1f0c4:	ldr	w0, [sp, #92]
   1f0c8:	add	x1, x1, x0
   1f0cc:	ldr	x0, [sp, #56]
   1f0d0:	str	x1, [x0, #8]
   1f0d4:	ldr	x0, [sp, #56]
   1f0d8:	ldr	x1, [x0, #16]
   1f0dc:	ldr	x0, [sp, #56]
   1f0e0:	ldr	x0, [x0, #8]
   1f0e4:	cmp	x1, x0
   1f0e8:	b.cs	1f0fc <lzma_mode_is_supported@@XZ_5.0+0x4464>  // b.hs, b.nlast
   1f0ec:	ldr	x0, [sp, #56]
   1f0f0:	ldr	x1, [x0, #8]
   1f0f4:	ldr	x0, [sp, #56]
   1f0f8:	str	x1, [x0, #16]
   1f0fc:	ldr	x0, [sp, #40]
   1f100:	ldr	w0, [x0]
   1f104:	cmp	w0, #0x0
   1f108:	cset	w0, ne  // ne = any
   1f10c:	and	w0, w0, #0xff
   1f110:	and	x0, x0, #0xff
   1f114:	cmp	x0, #0x0
   1f118:	cset	w0, ne  // ne = any
   1f11c:	and	w0, w0, #0xff
   1f120:	ldr	x19, [sp, #16]
   1f124:	ldp	x29, x30, [sp], #96
   1f128:	ret
   1f12c:	sub	sp, sp, #0x10
   1f130:	str	x0, [sp, #8]
   1f134:	strb	w1, [sp, #7]
   1f138:	ldr	x0, [sp, #8]
   1f13c:	ldr	x1, [x0, #8]
   1f140:	ldr	x0, [sp, #8]
   1f144:	ldr	x0, [x0, #24]
   1f148:	cmp	x1, x0
   1f14c:	cset	w0, eq  // eq = none
   1f150:	and	w0, w0, #0xff
   1f154:	and	x0, x0, #0xff
   1f158:	cmp	x0, #0x0
   1f15c:	b.eq	1f168 <lzma_mode_is_supported@@XZ_5.0+0x44d0>  // b.none
   1f160:	mov	w0, #0x1                   	// #1
   1f164:	b	1f1bc <lzma_mode_is_supported@@XZ_5.0+0x4524>
   1f168:	ldr	x0, [sp, #8]
   1f16c:	ldr	x1, [x0]
   1f170:	ldr	x0, [sp, #8]
   1f174:	ldr	x0, [x0, #8]
   1f178:	add	x3, x0, #0x1
   1f17c:	ldr	x2, [sp, #8]
   1f180:	str	x3, [x2, #8]
   1f184:	add	x0, x1, x0
   1f188:	ldrb	w1, [sp, #7]
   1f18c:	strb	w1, [x0]
   1f190:	ldr	x0, [sp, #8]
   1f194:	ldr	x1, [x0, #8]
   1f198:	ldr	x0, [sp, #8]
   1f19c:	ldr	x0, [x0, #16]
   1f1a0:	cmp	x1, x0
   1f1a4:	b.ls	1f1b8 <lzma_mode_is_supported@@XZ_5.0+0x4520>  // b.plast
   1f1a8:	ldr	x0, [sp, #8]
   1f1ac:	ldr	x1, [x0, #8]
   1f1b0:	ldr	x0, [sp, #8]
   1f1b4:	str	x1, [x0, #16]
   1f1b8:	mov	w0, #0x0                   	// #0
   1f1bc:	add	sp, sp, #0x10
   1f1c0:	ret
   1f1c4:	sub	sp, sp, #0x10
   1f1c8:	str	x0, [sp, #8]
   1f1cc:	ldr	x0, [sp, #8]
   1f1d0:	ldr	w0, [x0, #20]
   1f1d4:	cmp	w0, #0x4
   1f1d8:	b.hi	1f220 <lzma_mode_is_supported@@XZ_5.0+0x4588>  // b.pmore
   1f1dc:	ldr	x0, [sp, #8]
   1f1e0:	ldr	w0, [x0, #24]
   1f1e4:	cmp	w0, #0x4
   1f1e8:	b.hi	1f220 <lzma_mode_is_supported@@XZ_5.0+0x4588>  // b.pmore
   1f1ec:	ldr	x0, [sp, #8]
   1f1f0:	ldr	w1, [x0, #20]
   1f1f4:	ldr	x0, [sp, #8]
   1f1f8:	ldr	w0, [x0, #24]
   1f1fc:	add	w0, w1, w0
   1f200:	cmp	w0, #0x4
   1f204:	b.hi	1f220 <lzma_mode_is_supported@@XZ_5.0+0x4588>  // b.pmore
   1f208:	ldr	x0, [sp, #8]
   1f20c:	ldr	w0, [x0, #28]
   1f210:	cmp	w0, #0x4
   1f214:	b.hi	1f220 <lzma_mode_is_supported@@XZ_5.0+0x4588>  // b.pmore
   1f218:	mov	w0, #0x1                   	// #1
   1f21c:	b	1f224 <lzma_mode_is_supported@@XZ_5.0+0x458c>
   1f220:	mov	w0, #0x0                   	// #0
   1f224:	and	w0, w0, #0x1
   1f228:	and	w0, w0, #0xff
   1f22c:	add	sp, sp, #0x10
   1f230:	ret
   1f234:	sub	sp, sp, #0x20
   1f238:	str	x0, [sp, #8]
   1f23c:	str	w1, [sp, #4]
   1f240:	str	w2, [sp]
   1f244:	ldr	w1, [sp, #4]
   1f248:	ldr	w0, [sp]
   1f24c:	add	w0, w1, w0
   1f250:	mov	w1, #0x1                   	// #1
   1f254:	lsl	w0, w1, w0
   1f258:	str	w0, [sp, #20]
   1f25c:	str	wzr, [sp, #28]
   1f260:	b	1f2bc <lzma_mode_is_supported@@XZ_5.0+0x4624>
   1f264:	str	wzr, [sp, #24]
   1f268:	b	1f2a4 <lzma_mode_is_supported@@XZ_5.0+0x460c>
   1f26c:	ldr	w1, [sp, #28]
   1f270:	mov	x0, x1
   1f274:	lsl	x0, x0, #1
   1f278:	add	x0, x0, x1
   1f27c:	lsl	x0, x0, #9
   1f280:	mov	x1, x0
   1f284:	ldr	x0, [sp, #8]
   1f288:	add	x0, x0, x1
   1f28c:	ldr	w1, [sp, #24]
   1f290:	mov	w2, #0x400                 	// #1024
   1f294:	strh	w2, [x0, x1, lsl #1]
   1f298:	ldr	w0, [sp, #24]
   1f29c:	add	w0, w0, #0x1
   1f2a0:	str	w0, [sp, #24]
   1f2a4:	ldr	w0, [sp, #24]
   1f2a8:	cmp	w0, #0x2ff
   1f2ac:	b.ls	1f26c <lzma_mode_is_supported@@XZ_5.0+0x45d4>  // b.plast
   1f2b0:	ldr	w0, [sp, #28]
   1f2b4:	add	w0, w0, #0x1
   1f2b8:	str	w0, [sp, #28]
   1f2bc:	ldr	w1, [sp, #28]
   1f2c0:	ldr	w0, [sp, #20]
   1f2c4:	cmp	w1, w0
   1f2c8:	b.cc	1f264 <lzma_mode_is_supported@@XZ_5.0+0x45cc>  // b.lo, b.ul, b.last
   1f2cc:	nop
   1f2d0:	add	sp, sp, #0x20
   1f2d4:	ret
   1f2d8:	sub	sp, sp, #0x20
   1f2dc:	str	x0, [sp, #24]
   1f2e0:	str	x1, [sp, #16]
   1f2e4:	str	x2, [sp, #8]
   1f2e8:	str	x3, [sp]
   1f2ec:	b	1f394 <lzma_mode_is_supported@@XZ_5.0+0x46fc>
   1f2f0:	ldr	x0, [sp, #8]
   1f2f4:	ldr	x0, [x0]
   1f2f8:	ldr	x1, [sp]
   1f2fc:	cmp	x1, x0
   1f300:	b.ne	1f30c <lzma_mode_is_supported@@XZ_5.0+0x4674>  // b.any
   1f304:	mov	w0, #0x0                   	// #0
   1f308:	b	1f3a8 <lzma_mode_is_supported@@XZ_5.0+0x4710>
   1f30c:	ldr	x0, [sp, #24]
   1f310:	ldr	w0, [x0, #8]
   1f314:	cmp	w0, #0x5
   1f318:	b.ne	1f340 <lzma_mode_is_supported@@XZ_5.0+0x46a8>  // b.any
   1f31c:	ldr	x0, [sp, #8]
   1f320:	ldr	x0, [x0]
   1f324:	ldr	x1, [sp, #16]
   1f328:	add	x0, x1, x0
   1f32c:	ldrb	w0, [x0]
   1f330:	cmp	w0, #0x0
   1f334:	b.eq	1f340 <lzma_mode_is_supported@@XZ_5.0+0x46a8>  // b.none
   1f338:	mov	w0, #0x9                   	// #9
   1f33c:	b	1f3a8 <lzma_mode_is_supported@@XZ_5.0+0x4710>
   1f340:	ldr	x0, [sp, #24]
   1f344:	ldr	w0, [x0, #4]
   1f348:	lsl	w0, w0, #8
   1f34c:	ldr	x1, [sp, #8]
   1f350:	ldr	x1, [x1]
   1f354:	ldr	x2, [sp, #16]
   1f358:	add	x1, x2, x1
   1f35c:	ldrb	w1, [x1]
   1f360:	orr	w1, w0, w1
   1f364:	ldr	x0, [sp, #24]
   1f368:	str	w1, [x0, #4]
   1f36c:	ldr	x0, [sp, #8]
   1f370:	ldr	x0, [x0]
   1f374:	add	x1, x0, #0x1
   1f378:	ldr	x0, [sp, #8]
   1f37c:	str	x1, [x0]
   1f380:	ldr	x0, [sp, #24]
   1f384:	ldr	w0, [x0, #8]
   1f388:	sub	w1, w0, #0x1
   1f38c:	ldr	x0, [sp, #24]
   1f390:	str	w1, [x0, #8]
   1f394:	ldr	x0, [sp, #24]
   1f398:	ldr	w0, [x0, #8]
   1f39c:	cmp	w0, #0x0
   1f3a0:	b.ne	1f2f0 <lzma_mode_is_supported@@XZ_5.0+0x4658>  // b.any
   1f3a4:	mov	w0, #0x1                   	// #1
   1f3a8:	add	sp, sp, #0x20
   1f3ac:	ret
   1f3b0:	stp	x29, x30, [sp, #-288]!
   1f3b4:	mov	x29, sp
   1f3b8:	str	x19, [sp, #16]
   1f3bc:	str	x0, [sp, #72]
   1f3c0:	str	x1, [sp, #64]
   1f3c4:	str	x2, [sp, #56]
   1f3c8:	str	x3, [sp, #48]
   1f3cc:	str	x4, [sp, #40]
   1f3d0:	ldr	x0, [sp, #72]
   1f3d4:	str	x0, [sp, #216]
   1f3d8:	ldr	x1, [sp, #216]
   1f3dc:	mov	x0, #0x6e6c                	// #28268
   1f3e0:	add	x0, x1, x0
   1f3e4:	ldr	x3, [sp, #40]
   1f3e8:	ldr	x2, [sp, #48]
   1f3ec:	ldr	x1, [sp, #56]
   1f3f0:	bl	1f2d8 <lzma_mode_is_supported@@XZ_5.0+0x4640>
   1f3f4:	str	w0, [sp, #212]
   1f3f8:	ldr	w0, [sp, #212]
   1f3fc:	cmp	w0, #0x1
   1f400:	b.eq	1f40c <lzma_mode_is_supported@@XZ_5.0+0x4774>  // b.none
   1f404:	ldr	w0, [sp, #212]
   1f408:	b	27abc <lzma_mode_is_supported@@XZ_5.0+0xce24>
   1f40c:	ldr	x1, [sp, #64]
   1f410:	add	x0, sp, #0x70
   1f414:	ldp	x2, x3, [x1]
   1f418:	stp	x2, x3, [x0]
   1f41c:	ldp	x2, x3, [x1, #16]
   1f420:	stp	x2, x3, [x0, #16]
   1f424:	ldp	x2, x3, [x1, #32]
   1f428:	stp	x2, x3, [x0, #32]
   1f42c:	ldr	x0, [sp, #120]
   1f430:	str	x0, [sp, #200]
   1f434:	ldr	x0, [sp, #216]
   1f438:	add	x0, x0, #0x7, lsl #12
   1f43c:	sub	x1, x0, #0x194
   1f440:	add	x0, sp, #0x60
   1f444:	ldr	x2, [x1]
   1f448:	str	x2, [x0]
   1f44c:	ldr	w1, [x1, #8]
   1f450:	str	w1, [x0, #8]
   1f454:	ldr	x0, [sp, #48]
   1f458:	ldr	x0, [x0]
   1f45c:	str	x0, [sp, #280]
   1f460:	ldr	x0, [sp, #216]
   1f464:	add	x0, x0, #0x4, lsl #12
   1f468:	ldr	w0, [x0, #11896]
   1f46c:	str	w0, [sp, #276]
   1f470:	ldr	x0, [sp, #216]
   1f474:	add	x0, x0, #0x4, lsl #12
   1f478:	ldr	w0, [x0, #11900]
   1f47c:	str	w0, [sp, #272]
   1f480:	ldr	x0, [sp, #216]
   1f484:	add	x0, x0, #0x4, lsl #12
   1f488:	ldr	w0, [x0, #11904]
   1f48c:	str	w0, [sp, #268]
   1f490:	ldr	x0, [sp, #216]
   1f494:	add	x0, x0, #0x4, lsl #12
   1f498:	ldr	w0, [x0, #11908]
   1f49c:	str	w0, [sp, #264]
   1f4a0:	ldr	x0, [sp, #216]
   1f4a4:	add	x0, x0, #0x4, lsl #12
   1f4a8:	ldr	w0, [x0, #11912]
   1f4ac:	str	w0, [sp, #260]
   1f4b0:	ldr	x0, [sp, #216]
   1f4b4:	add	x0, x0, #0x4, lsl #12
   1f4b8:	ldr	w0, [x0, #11916]
   1f4bc:	str	w0, [sp, #196]
   1f4c0:	ldr	x0, [sp, #216]
   1f4c4:	ldr	x0, [x0, #28328]
   1f4c8:	str	x0, [sp, #248]
   1f4cc:	ldr	x0, [sp, #216]
   1f4d0:	add	x0, x0, #0x4, lsl #12
   1f4d4:	ldr	w0, [x0, #11952]
   1f4d8:	str	w0, [sp, #244]
   1f4dc:	ldr	x0, [sp, #216]
   1f4e0:	add	x0, x0, #0x4, lsl #12
   1f4e4:	ldr	w0, [x0, #11956]
   1f4e8:	str	w0, [sp, #240]
   1f4ec:	ldr	x0, [sp, #216]
   1f4f0:	add	x0, x0, #0x4, lsl #12
   1f4f4:	ldr	w0, [x0, #11960]
   1f4f8:	str	w0, [sp, #236]
   1f4fc:	ldr	x0, [sp, #216]
   1f500:	add	x0, x0, #0x4, lsl #12
   1f504:	ldr	w0, [x0, #11964]
   1f508:	str	w0, [sp, #92]
   1f50c:	ldr	x0, [sp, #216]
   1f510:	add	x0, x0, #0x4, lsl #12
   1f514:	ldr	w0, [x0, #11924]
   1f518:	str	w0, [sp, #192]
   1f51c:	ldr	x0, [sp, #216]
   1f520:	add	x0, x0, #0x4, lsl #12
   1f524:	ldr	w0, [x0, #11920]
   1f528:	str	w0, [sp, #188]
   1f52c:	ldr	x0, [sp, #120]
   1f530:	mov	w1, w0
   1f534:	ldr	w0, [sp, #196]
   1f538:	and	w0, w0, w1
   1f53c:	str	w0, [sp, #232]
   1f540:	str	wzr, [sp, #228]
   1f544:	ldr	x0, [sp, #216]
   1f548:	ldr	x0, [x0, #28312]
   1f54c:	cmn	x0, #0x1
   1f550:	cset	w0, ne  // ne = any
   1f554:	strb	w0, [sp, #187]
   1f558:	ldrb	w0, [sp, #187]
   1f55c:	cmp	w0, #0x0
   1f560:	b.eq	1f594 <lzma_mode_is_supported@@XZ_5.0+0x48fc>  // b.none
   1f564:	ldr	x0, [sp, #216]
   1f568:	ldr	x1, [x0, #28312]
   1f56c:	ldr	x2, [sp, #136]
   1f570:	ldr	x0, [sp, #120]
   1f574:	sub	x0, x2, x0
   1f578:	cmp	x1, x0
   1f57c:	b.cs	1f594 <lzma_mode_is_supported@@XZ_5.0+0x48fc>  // b.hs, b.nlast
   1f580:	ldr	x1, [sp, #120]
   1f584:	ldr	x0, [sp, #216]
   1f588:	ldr	x0, [x0, #28312]
   1f58c:	add	x0, x1, x0
   1f590:	str	x0, [sp, #136]
   1f594:	ldr	x0, [sp, #216]
   1f598:	add	x0, x0, #0x4, lsl #12
   1f59c:	ldr	w0, [x0, #11936]
   1f5a0:	cmp	w0, #0x46
   1f5a4:	b.hi	27878 <lzma_mode_is_supported@@XZ_5.0+0xcbe0>  // b.pmore
   1f5a8:	adrp	x1, 32000 <lzma_mode_is_supported@@XZ_5.0+0x17368>
   1f5ac:	add	x1, x1, #0x1e0
   1f5b0:	ldr	w0, [x1, w0, uxtw #2]
   1f5b4:	adr	x1, 1f5c0 <lzma_mode_is_supported@@XZ_5.0+0x4928>
   1f5b8:	add	x0, x1, w0, sxtw #2
   1f5bc:	br	x0
   1f5c0:	nop
   1f5c4:	ldr	x0, [sp, #120]
   1f5c8:	mov	w1, w0
   1f5cc:	ldr	w0, [sp, #196]
   1f5d0:	and	w0, w0, w1
   1f5d4:	str	w0, [sp, #232]
   1f5d8:	ldrb	w0, [sp, #187]
   1f5dc:	and	x0, x0, #0xff
   1f5e0:	cmp	x0, #0x0
   1f5e4:	b.eq	1f608 <lzma_mode_is_supported@@XZ_5.0+0x4970>  // b.none
   1f5e8:	ldr	x1, [sp, #120]
   1f5ec:	ldr	x0, [sp, #136]
   1f5f0:	cmp	x1, x0
   1f5f4:	cset	w0, eq  // eq = none
   1f5f8:	and	w0, w0, #0xff
   1f5fc:	and	x0, x0, #0xff
   1f600:	cmp	x0, #0x0
   1f604:	b.ne	27874 <lzma_mode_is_supported@@XZ_5.0+0xcbdc>  // b.any
   1f608:	ldr	w1, [sp, #96]
   1f60c:	mov	w0, #0xffffff              	// #16777215
   1f610:	cmp	w1, w0
   1f614:	b.hi	1f680 <lzma_mode_is_supported@@XZ_5.0+0x49e8>  // b.pmore
   1f618:	ldr	x1, [sp, #280]
   1f61c:	ldr	x0, [sp, #40]
   1f620:	cmp	x1, x0
   1f624:	cset	w0, eq  // eq = none
   1f628:	and	w0, w0, #0xff
   1f62c:	and	x0, x0, #0xff
   1f630:	cmp	x0, #0x0
   1f634:	b.eq	1f64c <lzma_mode_is_supported@@XZ_5.0+0x49b4>  // b.none
   1f638:	ldr	x0, [sp, #216]
   1f63c:	add	x0, x0, #0x4, lsl #12
   1f640:	mov	w1, #0x1                   	// #1
   1f644:	str	w1, [x0, #11936]
   1f648:	b	278fc <lzma_mode_is_supported@@XZ_5.0+0xcc64>
   1f64c:	ldr	w0, [sp, #96]
   1f650:	lsl	w0, w0, #8
   1f654:	str	w0, [sp, #96]
   1f658:	ldr	w0, [sp, #100]
   1f65c:	lsl	w1, w0, #8
   1f660:	ldr	x0, [sp, #280]
   1f664:	add	x2, x0, #0x1
   1f668:	str	x2, [sp, #280]
   1f66c:	ldr	x2, [sp, #56]
   1f670:	add	x0, x2, x0
   1f674:	ldrb	w0, [x0]
   1f678:	orr	w0, w1, w0
   1f67c:	str	w0, [sp, #100]
   1f680:	ldr	w0, [sp, #96]
   1f684:	lsr	w0, w0, #11
   1f688:	ldr	x1, [sp, #216]
   1f68c:	ldr	w2, [sp, #232]
   1f690:	ldr	w3, [sp, #276]
   1f694:	lsl	x3, x3, #4
   1f698:	add	x2, x3, x2
   1f69c:	add	x2, x2, #0x3, lsl #12
   1f6a0:	ldrh	w1, [x1, x2, lsl #1]
   1f6a4:	mul	w0, w0, w1
   1f6a8:	str	w0, [sp, #180]
   1f6ac:	ldr	w0, [sp, #100]
   1f6b0:	ldr	w1, [sp, #180]
   1f6b4:	cmp	w1, w0
   1f6b8:	b.ls	21448 <lzma_mode_is_supported@@XZ_5.0+0x67b0>  // b.plast
   1f6bc:	ldr	w0, [sp, #180]
   1f6c0:	str	w0, [sp, #96]
   1f6c4:	ldr	x0, [sp, #216]
   1f6c8:	ldr	w1, [sp, #232]
   1f6cc:	ldr	w2, [sp, #276]
   1f6d0:	lsl	x2, x2, #4
   1f6d4:	add	x1, x2, x1
   1f6d8:	add	x1, x1, #0x3, lsl #12
   1f6dc:	ldrh	w1, [x0, x1, lsl #1]
   1f6e0:	ldr	x0, [sp, #216]
   1f6e4:	ldr	w2, [sp, #232]
   1f6e8:	ldr	w3, [sp, #276]
   1f6ec:	lsl	x3, x3, #4
   1f6f0:	add	x2, x3, x2
   1f6f4:	add	x2, x2, #0x3, lsl #12
   1f6f8:	ldrh	w0, [x0, x2, lsl #1]
   1f6fc:	mov	w2, w0
   1f700:	mov	w0, #0x800                 	// #2048
   1f704:	sub	w0, w0, w2
   1f708:	lsr	w0, w0, #5
   1f70c:	and	w0, w0, #0xffff
   1f710:	add	w0, w1, w0
   1f714:	and	w3, w0, #0xffff
   1f718:	ldr	x0, [sp, #216]
   1f71c:	ldr	w1, [sp, #232]
   1f720:	ldr	w2, [sp, #276]
   1f724:	lsl	x2, x2, #4
   1f728:	add	x1, x2, x1
   1f72c:	add	x1, x1, #0x3, lsl #12
   1f730:	mov	w2, w3
   1f734:	strh	w2, [x0, x1, lsl #1]
   1f738:	ldr	x1, [sp, #120]
   1f73c:	ldr	w0, [sp, #192]
   1f740:	and	x1, x1, x0
   1f744:	ldr	w0, [sp, #188]
   1f748:	lsl	x19, x1, x0
   1f74c:	add	x0, sp, #0x70
   1f750:	mov	w1, #0x0                   	// #0
   1f754:	bl	1edb4 <lzma_mode_is_supported@@XZ_5.0+0x411c>
   1f758:	and	w0, w0, #0xff
   1f75c:	mov	w2, w0
   1f760:	mov	w1, #0x8                   	// #8
   1f764:	ldr	w0, [sp, #188]
   1f768:	sub	w0, w1, w0
   1f76c:	asr	w0, w2, w0
   1f770:	sxtw	x0, w0
   1f774:	add	x1, x19, x0
   1f778:	mov	x0, x1
   1f77c:	lsl	x0, x0, #1
   1f780:	add	x0, x0, x1
   1f784:	lsl	x0, x0, #9
   1f788:	ldr	x1, [sp, #216]
   1f78c:	add	x0, x1, x0
   1f790:	str	x0, [sp, #248]
   1f794:	mov	w0, #0x1                   	// #1
   1f798:	str	w0, [sp, #244]
   1f79c:	ldr	w0, [sp, #276]
   1f7a0:	cmp	w0, #0x6
   1f7a4:	b.hi	2046c <lzma_mode_is_supported@@XZ_5.0+0x57d4>  // b.pmore
   1f7a8:	ldr	w1, [sp, #96]
   1f7ac:	mov	w0, #0xffffff              	// #16777215
   1f7b0:	cmp	w1, w0
   1f7b4:	b.hi	1f820 <lzma_mode_is_supported@@XZ_5.0+0x4b88>  // b.pmore
   1f7b8:	ldr	x1, [sp, #280]
   1f7bc:	ldr	x0, [sp, #40]
   1f7c0:	cmp	x1, x0
   1f7c4:	cset	w0, eq  // eq = none
   1f7c8:	and	w0, w0, #0xff
   1f7cc:	and	x0, x0, #0xff
   1f7d0:	cmp	x0, #0x0
   1f7d4:	b.eq	1f7ec <lzma_mode_is_supported@@XZ_5.0+0x4b54>  // b.none
   1f7d8:	ldr	x0, [sp, #216]
   1f7dc:	add	x0, x0, #0x4, lsl #12
   1f7e0:	mov	w1, #0x2                   	// #2
   1f7e4:	str	w1, [x0, #11936]
   1f7e8:	b	278fc <lzma_mode_is_supported@@XZ_5.0+0xcc64>
   1f7ec:	ldr	w0, [sp, #96]
   1f7f0:	lsl	w0, w0, #8
   1f7f4:	str	w0, [sp, #96]
   1f7f8:	ldr	w0, [sp, #100]
   1f7fc:	lsl	w1, w0, #8
   1f800:	ldr	x0, [sp, #280]
   1f804:	add	x2, x0, #0x1
   1f808:	str	x2, [sp, #280]
   1f80c:	ldr	x2, [sp, #56]
   1f810:	add	x0, x2, x0
   1f814:	ldrb	w0, [x0]
   1f818:	orr	w0, w1, w0
   1f81c:	str	w0, [sp, #100]
   1f820:	ldr	w0, [sp, #96]
   1f824:	lsr	w0, w0, #11
   1f828:	ldr	w1, [sp, #244]
   1f82c:	lsl	x1, x1, #1
   1f830:	ldr	x2, [sp, #248]
   1f834:	add	x1, x2, x1
   1f838:	ldrh	w1, [x1]
   1f83c:	mul	w0, w0, w1
   1f840:	str	w0, [sp, #180]
   1f844:	ldr	w0, [sp, #100]
   1f848:	ldr	w1, [sp, #180]
   1f84c:	cmp	w1, w0
   1f850:	b.ls	1f8c4 <lzma_mode_is_supported@@XZ_5.0+0x4c2c>  // b.plast
   1f854:	ldr	w0, [sp, #180]
   1f858:	str	w0, [sp, #96]
   1f85c:	ldr	w0, [sp, #244]
   1f860:	lsl	x0, x0, #1
   1f864:	ldr	x1, [sp, #248]
   1f868:	add	x0, x1, x0
   1f86c:	ldrh	w2, [x0]
   1f870:	ldr	w0, [sp, #244]
   1f874:	lsl	x0, x0, #1
   1f878:	ldr	x1, [sp, #248]
   1f87c:	add	x0, x1, x0
   1f880:	ldrh	w0, [x0]
   1f884:	mov	w1, w0
   1f888:	mov	w0, #0x800                 	// #2048
   1f88c:	sub	w0, w0, w1
   1f890:	lsr	w0, w0, #5
   1f894:	and	w1, w0, #0xffff
   1f898:	ldr	w0, [sp, #244]
   1f89c:	lsl	x0, x0, #1
   1f8a0:	ldr	x3, [sp, #248]
   1f8a4:	add	x0, x3, x0
   1f8a8:	add	w1, w2, w1
   1f8ac:	and	w1, w1, #0xffff
   1f8b0:	strh	w1, [x0]
   1f8b4:	ldr	w0, [sp, #244]
   1f8b8:	lsl	w0, w0, #1
   1f8bc:	str	w0, [sp, #244]
   1f8c0:	b	1f940 <lzma_mode_is_supported@@XZ_5.0+0x4ca8>
   1f8c4:	ldr	w1, [sp, #96]
   1f8c8:	ldr	w0, [sp, #180]
   1f8cc:	sub	w0, w1, w0
   1f8d0:	str	w0, [sp, #96]
   1f8d4:	ldr	w1, [sp, #100]
   1f8d8:	ldr	w0, [sp, #180]
   1f8dc:	sub	w0, w1, w0
   1f8e0:	str	w0, [sp, #100]
   1f8e4:	ldr	w0, [sp, #244]
   1f8e8:	lsl	x0, x0, #1
   1f8ec:	ldr	x1, [sp, #248]
   1f8f0:	add	x0, x1, x0
   1f8f4:	ldrh	w2, [x0]
   1f8f8:	ldr	w0, [sp, #244]
   1f8fc:	lsl	x0, x0, #1
   1f900:	ldr	x1, [sp, #248]
   1f904:	add	x0, x1, x0
   1f908:	ldrh	w0, [x0]
   1f90c:	lsr	w0, w0, #5
   1f910:	and	w1, w0, #0xffff
   1f914:	ldr	w0, [sp, #244]
   1f918:	lsl	x0, x0, #1
   1f91c:	ldr	x3, [sp, #248]
   1f920:	add	x0, x3, x0
   1f924:	sub	w1, w2, w1
   1f928:	and	w1, w1, #0xffff
   1f92c:	strh	w1, [x0]
   1f930:	ldr	w0, [sp, #244]
   1f934:	lsl	w0, w0, #1
   1f938:	add	w0, w0, #0x1
   1f93c:	str	w0, [sp, #244]
   1f940:	ldr	w1, [sp, #96]
   1f944:	mov	w0, #0xffffff              	// #16777215
   1f948:	cmp	w1, w0
   1f94c:	b.hi	1f9b8 <lzma_mode_is_supported@@XZ_5.0+0x4d20>  // b.pmore
   1f950:	ldr	x1, [sp, #280]
   1f954:	ldr	x0, [sp, #40]
   1f958:	cmp	x1, x0
   1f95c:	cset	w0, eq  // eq = none
   1f960:	and	w0, w0, #0xff
   1f964:	and	x0, x0, #0xff
   1f968:	cmp	x0, #0x0
   1f96c:	b.eq	1f984 <lzma_mode_is_supported@@XZ_5.0+0x4cec>  // b.none
   1f970:	ldr	x0, [sp, #216]
   1f974:	add	x0, x0, #0x4, lsl #12
   1f978:	mov	w1, #0x3                   	// #3
   1f97c:	str	w1, [x0, #11936]
   1f980:	b	278fc <lzma_mode_is_supported@@XZ_5.0+0xcc64>
   1f984:	ldr	w0, [sp, #96]
   1f988:	lsl	w0, w0, #8
   1f98c:	str	w0, [sp, #96]
   1f990:	ldr	w0, [sp, #100]
   1f994:	lsl	w1, w0, #8
   1f998:	ldr	x0, [sp, #280]
   1f99c:	add	x2, x0, #0x1
   1f9a0:	str	x2, [sp, #280]
   1f9a4:	ldr	x2, [sp, #56]
   1f9a8:	add	x0, x2, x0
   1f9ac:	ldrb	w0, [x0]
   1f9b0:	orr	w0, w1, w0
   1f9b4:	str	w0, [sp, #100]
   1f9b8:	ldr	w0, [sp, #96]
   1f9bc:	lsr	w0, w0, #11
   1f9c0:	ldr	w1, [sp, #244]
   1f9c4:	lsl	x1, x1, #1
   1f9c8:	ldr	x2, [sp, #248]
   1f9cc:	add	x1, x2, x1
   1f9d0:	ldrh	w1, [x1]
   1f9d4:	mul	w0, w0, w1
   1f9d8:	str	w0, [sp, #180]
   1f9dc:	ldr	w0, [sp, #100]
   1f9e0:	ldr	w1, [sp, #180]
   1f9e4:	cmp	w1, w0
   1f9e8:	b.ls	1fa5c <lzma_mode_is_supported@@XZ_5.0+0x4dc4>  // b.plast
   1f9ec:	ldr	w0, [sp, #180]
   1f9f0:	str	w0, [sp, #96]
   1f9f4:	ldr	w0, [sp, #244]
   1f9f8:	lsl	x0, x0, #1
   1f9fc:	ldr	x1, [sp, #248]
   1fa00:	add	x0, x1, x0
   1fa04:	ldrh	w2, [x0]
   1fa08:	ldr	w0, [sp, #244]
   1fa0c:	lsl	x0, x0, #1
   1fa10:	ldr	x1, [sp, #248]
   1fa14:	add	x0, x1, x0
   1fa18:	ldrh	w0, [x0]
   1fa1c:	mov	w1, w0
   1fa20:	mov	w0, #0x800                 	// #2048
   1fa24:	sub	w0, w0, w1
   1fa28:	lsr	w0, w0, #5
   1fa2c:	and	w1, w0, #0xffff
   1fa30:	ldr	w0, [sp, #244]
   1fa34:	lsl	x0, x0, #1
   1fa38:	ldr	x3, [sp, #248]
   1fa3c:	add	x0, x3, x0
   1fa40:	add	w1, w2, w1
   1fa44:	and	w1, w1, #0xffff
   1fa48:	strh	w1, [x0]
   1fa4c:	ldr	w0, [sp, #244]
   1fa50:	lsl	w0, w0, #1
   1fa54:	str	w0, [sp, #244]
   1fa58:	b	1fad8 <lzma_mode_is_supported@@XZ_5.0+0x4e40>
   1fa5c:	ldr	w1, [sp, #96]
   1fa60:	ldr	w0, [sp, #180]
   1fa64:	sub	w0, w1, w0
   1fa68:	str	w0, [sp, #96]
   1fa6c:	ldr	w1, [sp, #100]
   1fa70:	ldr	w0, [sp, #180]
   1fa74:	sub	w0, w1, w0
   1fa78:	str	w0, [sp, #100]
   1fa7c:	ldr	w0, [sp, #244]
   1fa80:	lsl	x0, x0, #1
   1fa84:	ldr	x1, [sp, #248]
   1fa88:	add	x0, x1, x0
   1fa8c:	ldrh	w2, [x0]
   1fa90:	ldr	w0, [sp, #244]
   1fa94:	lsl	x0, x0, #1
   1fa98:	ldr	x1, [sp, #248]
   1fa9c:	add	x0, x1, x0
   1faa0:	ldrh	w0, [x0]
   1faa4:	lsr	w0, w0, #5
   1faa8:	and	w1, w0, #0xffff
   1faac:	ldr	w0, [sp, #244]
   1fab0:	lsl	x0, x0, #1
   1fab4:	ldr	x3, [sp, #248]
   1fab8:	add	x0, x3, x0
   1fabc:	sub	w1, w2, w1
   1fac0:	and	w1, w1, #0xffff
   1fac4:	strh	w1, [x0]
   1fac8:	ldr	w0, [sp, #244]
   1facc:	lsl	w0, w0, #1
   1fad0:	add	w0, w0, #0x1
   1fad4:	str	w0, [sp, #244]
   1fad8:	ldr	w1, [sp, #96]
   1fadc:	mov	w0, #0xffffff              	// #16777215
   1fae0:	cmp	w1, w0
   1fae4:	b.hi	1fb50 <lzma_mode_is_supported@@XZ_5.0+0x4eb8>  // b.pmore
   1fae8:	ldr	x1, [sp, #280]
   1faec:	ldr	x0, [sp, #40]
   1faf0:	cmp	x1, x0
   1faf4:	cset	w0, eq  // eq = none
   1faf8:	and	w0, w0, #0xff
   1fafc:	and	x0, x0, #0xff
   1fb00:	cmp	x0, #0x0
   1fb04:	b.eq	1fb1c <lzma_mode_is_supported@@XZ_5.0+0x4e84>  // b.none
   1fb08:	ldr	x0, [sp, #216]
   1fb0c:	add	x0, x0, #0x4, lsl #12
   1fb10:	mov	w1, #0x4                   	// #4
   1fb14:	str	w1, [x0, #11936]
   1fb18:	b	278fc <lzma_mode_is_supported@@XZ_5.0+0xcc64>
   1fb1c:	ldr	w0, [sp, #96]
   1fb20:	lsl	w0, w0, #8
   1fb24:	str	w0, [sp, #96]
   1fb28:	ldr	w0, [sp, #100]
   1fb2c:	lsl	w1, w0, #8
   1fb30:	ldr	x0, [sp, #280]
   1fb34:	add	x2, x0, #0x1
   1fb38:	str	x2, [sp, #280]
   1fb3c:	ldr	x2, [sp, #56]
   1fb40:	add	x0, x2, x0
   1fb44:	ldrb	w0, [x0]
   1fb48:	orr	w0, w1, w0
   1fb4c:	str	w0, [sp, #100]
   1fb50:	ldr	w0, [sp, #96]
   1fb54:	lsr	w0, w0, #11
   1fb58:	ldr	w1, [sp, #244]
   1fb5c:	lsl	x1, x1, #1
   1fb60:	ldr	x2, [sp, #248]
   1fb64:	add	x1, x2, x1
   1fb68:	ldrh	w1, [x1]
   1fb6c:	mul	w0, w0, w1
   1fb70:	str	w0, [sp, #180]
   1fb74:	ldr	w0, [sp, #100]
   1fb78:	ldr	w1, [sp, #180]
   1fb7c:	cmp	w1, w0
   1fb80:	b.ls	1fbf4 <lzma_mode_is_supported@@XZ_5.0+0x4f5c>  // b.plast
   1fb84:	ldr	w0, [sp, #180]
   1fb88:	str	w0, [sp, #96]
   1fb8c:	ldr	w0, [sp, #244]
   1fb90:	lsl	x0, x0, #1
   1fb94:	ldr	x1, [sp, #248]
   1fb98:	add	x0, x1, x0
   1fb9c:	ldrh	w2, [x0]
   1fba0:	ldr	w0, [sp, #244]
   1fba4:	lsl	x0, x0, #1
   1fba8:	ldr	x1, [sp, #248]
   1fbac:	add	x0, x1, x0
   1fbb0:	ldrh	w0, [x0]
   1fbb4:	mov	w1, w0
   1fbb8:	mov	w0, #0x800                 	// #2048
   1fbbc:	sub	w0, w0, w1
   1fbc0:	lsr	w0, w0, #5
   1fbc4:	and	w1, w0, #0xffff
   1fbc8:	ldr	w0, [sp, #244]
   1fbcc:	lsl	x0, x0, #1
   1fbd0:	ldr	x3, [sp, #248]
   1fbd4:	add	x0, x3, x0
   1fbd8:	add	w1, w2, w1
   1fbdc:	and	w1, w1, #0xffff
   1fbe0:	strh	w1, [x0]
   1fbe4:	ldr	w0, [sp, #244]
   1fbe8:	lsl	w0, w0, #1
   1fbec:	str	w0, [sp, #244]
   1fbf0:	b	1fc70 <lzma_mode_is_supported@@XZ_5.0+0x4fd8>
   1fbf4:	ldr	w1, [sp, #96]
   1fbf8:	ldr	w0, [sp, #180]
   1fbfc:	sub	w0, w1, w0
   1fc00:	str	w0, [sp, #96]
   1fc04:	ldr	w1, [sp, #100]
   1fc08:	ldr	w0, [sp, #180]
   1fc0c:	sub	w0, w1, w0
   1fc10:	str	w0, [sp, #100]
   1fc14:	ldr	w0, [sp, #244]
   1fc18:	lsl	x0, x0, #1
   1fc1c:	ldr	x1, [sp, #248]
   1fc20:	add	x0, x1, x0
   1fc24:	ldrh	w2, [x0]
   1fc28:	ldr	w0, [sp, #244]
   1fc2c:	lsl	x0, x0, #1
   1fc30:	ldr	x1, [sp, #248]
   1fc34:	add	x0, x1, x0
   1fc38:	ldrh	w0, [x0]
   1fc3c:	lsr	w0, w0, #5
   1fc40:	and	w1, w0, #0xffff
   1fc44:	ldr	w0, [sp, #244]
   1fc48:	lsl	x0, x0, #1
   1fc4c:	ldr	x3, [sp, #248]
   1fc50:	add	x0, x3, x0
   1fc54:	sub	w1, w2, w1
   1fc58:	and	w1, w1, #0xffff
   1fc5c:	strh	w1, [x0]
   1fc60:	ldr	w0, [sp, #244]
   1fc64:	lsl	w0, w0, #1
   1fc68:	add	w0, w0, #0x1
   1fc6c:	str	w0, [sp, #244]
   1fc70:	ldr	w1, [sp, #96]
   1fc74:	mov	w0, #0xffffff              	// #16777215
   1fc78:	cmp	w1, w0
   1fc7c:	b.hi	1fce8 <lzma_mode_is_supported@@XZ_5.0+0x5050>  // b.pmore
   1fc80:	ldr	x1, [sp, #280]
   1fc84:	ldr	x0, [sp, #40]
   1fc88:	cmp	x1, x0
   1fc8c:	cset	w0, eq  // eq = none
   1fc90:	and	w0, w0, #0xff
   1fc94:	and	x0, x0, #0xff
   1fc98:	cmp	x0, #0x0
   1fc9c:	b.eq	1fcb4 <lzma_mode_is_supported@@XZ_5.0+0x501c>  // b.none
   1fca0:	ldr	x0, [sp, #216]
   1fca4:	add	x0, x0, #0x4, lsl #12
   1fca8:	mov	w1, #0x5                   	// #5
   1fcac:	str	w1, [x0, #11936]
   1fcb0:	b	278fc <lzma_mode_is_supported@@XZ_5.0+0xcc64>
   1fcb4:	ldr	w0, [sp, #96]
   1fcb8:	lsl	w0, w0, #8
   1fcbc:	str	w0, [sp, #96]
   1fcc0:	ldr	w0, [sp, #100]
   1fcc4:	lsl	w1, w0, #8
   1fcc8:	ldr	x0, [sp, #280]
   1fccc:	add	x2, x0, #0x1
   1fcd0:	str	x2, [sp, #280]
   1fcd4:	ldr	x2, [sp, #56]
   1fcd8:	add	x0, x2, x0
   1fcdc:	ldrb	w0, [x0]
   1fce0:	orr	w0, w1, w0
   1fce4:	str	w0, [sp, #100]
   1fce8:	ldr	w0, [sp, #96]
   1fcec:	lsr	w0, w0, #11
   1fcf0:	ldr	w1, [sp, #244]
   1fcf4:	lsl	x1, x1, #1
   1fcf8:	ldr	x2, [sp, #248]
   1fcfc:	add	x1, x2, x1
   1fd00:	ldrh	w1, [x1]
   1fd04:	mul	w0, w0, w1
   1fd08:	str	w0, [sp, #180]
   1fd0c:	ldr	w0, [sp, #100]
   1fd10:	ldr	w1, [sp, #180]
   1fd14:	cmp	w1, w0
   1fd18:	b.ls	1fd8c <lzma_mode_is_supported@@XZ_5.0+0x50f4>  // b.plast
   1fd1c:	ldr	w0, [sp, #180]
   1fd20:	str	w0, [sp, #96]
   1fd24:	ldr	w0, [sp, #244]
   1fd28:	lsl	x0, x0, #1
   1fd2c:	ldr	x1, [sp, #248]
   1fd30:	add	x0, x1, x0
   1fd34:	ldrh	w2, [x0]
   1fd38:	ldr	w0, [sp, #244]
   1fd3c:	lsl	x0, x0, #1
   1fd40:	ldr	x1, [sp, #248]
   1fd44:	add	x0, x1, x0
   1fd48:	ldrh	w0, [x0]
   1fd4c:	mov	w1, w0
   1fd50:	mov	w0, #0x800                 	// #2048
   1fd54:	sub	w0, w0, w1
   1fd58:	lsr	w0, w0, #5
   1fd5c:	and	w1, w0, #0xffff
   1fd60:	ldr	w0, [sp, #244]
   1fd64:	lsl	x0, x0, #1
   1fd68:	ldr	x3, [sp, #248]
   1fd6c:	add	x0, x3, x0
   1fd70:	add	w1, w2, w1
   1fd74:	and	w1, w1, #0xffff
   1fd78:	strh	w1, [x0]
   1fd7c:	ldr	w0, [sp, #244]
   1fd80:	lsl	w0, w0, #1
   1fd84:	str	w0, [sp, #244]
   1fd88:	b	1fe08 <lzma_mode_is_supported@@XZ_5.0+0x5170>
   1fd8c:	ldr	w1, [sp, #96]
   1fd90:	ldr	w0, [sp, #180]
   1fd94:	sub	w0, w1, w0
   1fd98:	str	w0, [sp, #96]
   1fd9c:	ldr	w1, [sp, #100]
   1fda0:	ldr	w0, [sp, #180]
   1fda4:	sub	w0, w1, w0
   1fda8:	str	w0, [sp, #100]
   1fdac:	ldr	w0, [sp, #244]
   1fdb0:	lsl	x0, x0, #1
   1fdb4:	ldr	x1, [sp, #248]
   1fdb8:	add	x0, x1, x0
   1fdbc:	ldrh	w2, [x0]
   1fdc0:	ldr	w0, [sp, #244]
   1fdc4:	lsl	x0, x0, #1
   1fdc8:	ldr	x1, [sp, #248]
   1fdcc:	add	x0, x1, x0
   1fdd0:	ldrh	w0, [x0]
   1fdd4:	lsr	w0, w0, #5
   1fdd8:	and	w1, w0, #0xffff
   1fddc:	ldr	w0, [sp, #244]
   1fde0:	lsl	x0, x0, #1
   1fde4:	ldr	x3, [sp, #248]
   1fde8:	add	x0, x3, x0
   1fdec:	sub	w1, w2, w1
   1fdf0:	and	w1, w1, #0xffff
   1fdf4:	strh	w1, [x0]
   1fdf8:	ldr	w0, [sp, #244]
   1fdfc:	lsl	w0, w0, #1
   1fe00:	add	w0, w0, #0x1
   1fe04:	str	w0, [sp, #244]
   1fe08:	ldr	w1, [sp, #96]
   1fe0c:	mov	w0, #0xffffff              	// #16777215
   1fe10:	cmp	w1, w0
   1fe14:	b.hi	1fe80 <lzma_mode_is_supported@@XZ_5.0+0x51e8>  // b.pmore
   1fe18:	ldr	x1, [sp, #280]
   1fe1c:	ldr	x0, [sp, #40]
   1fe20:	cmp	x1, x0
   1fe24:	cset	w0, eq  // eq = none
   1fe28:	and	w0, w0, #0xff
   1fe2c:	and	x0, x0, #0xff
   1fe30:	cmp	x0, #0x0
   1fe34:	b.eq	1fe4c <lzma_mode_is_supported@@XZ_5.0+0x51b4>  // b.none
   1fe38:	ldr	x0, [sp, #216]
   1fe3c:	add	x0, x0, #0x4, lsl #12
   1fe40:	mov	w1, #0x6                   	// #6
   1fe44:	str	w1, [x0, #11936]
   1fe48:	b	278fc <lzma_mode_is_supported@@XZ_5.0+0xcc64>
   1fe4c:	ldr	w0, [sp, #96]
   1fe50:	lsl	w0, w0, #8
   1fe54:	str	w0, [sp, #96]
   1fe58:	ldr	w0, [sp, #100]
   1fe5c:	lsl	w1, w0, #8
   1fe60:	ldr	x0, [sp, #280]
   1fe64:	add	x2, x0, #0x1
   1fe68:	str	x2, [sp, #280]
   1fe6c:	ldr	x2, [sp, #56]
   1fe70:	add	x0, x2, x0
   1fe74:	ldrb	w0, [x0]
   1fe78:	orr	w0, w1, w0
   1fe7c:	str	w0, [sp, #100]
   1fe80:	ldr	w0, [sp, #96]
   1fe84:	lsr	w0, w0, #11
   1fe88:	ldr	w1, [sp, #244]
   1fe8c:	lsl	x1, x1, #1
   1fe90:	ldr	x2, [sp, #248]
   1fe94:	add	x1, x2, x1
   1fe98:	ldrh	w1, [x1]
   1fe9c:	mul	w0, w0, w1
   1fea0:	str	w0, [sp, #180]
   1fea4:	ldr	w0, [sp, #100]
   1fea8:	ldr	w1, [sp, #180]
   1feac:	cmp	w1, w0
   1feb0:	b.ls	1ff24 <lzma_mode_is_supported@@XZ_5.0+0x528c>  // b.plast
   1feb4:	ldr	w0, [sp, #180]
   1feb8:	str	w0, [sp, #96]
   1febc:	ldr	w0, [sp, #244]
   1fec0:	lsl	x0, x0, #1
   1fec4:	ldr	x1, [sp, #248]
   1fec8:	add	x0, x1, x0
   1fecc:	ldrh	w2, [x0]
   1fed0:	ldr	w0, [sp, #244]
   1fed4:	lsl	x0, x0, #1
   1fed8:	ldr	x1, [sp, #248]
   1fedc:	add	x0, x1, x0
   1fee0:	ldrh	w0, [x0]
   1fee4:	mov	w1, w0
   1fee8:	mov	w0, #0x800                 	// #2048
   1feec:	sub	w0, w0, w1
   1fef0:	lsr	w0, w0, #5
   1fef4:	and	w1, w0, #0xffff
   1fef8:	ldr	w0, [sp, #244]
   1fefc:	lsl	x0, x0, #1
   1ff00:	ldr	x3, [sp, #248]
   1ff04:	add	x0, x3, x0
   1ff08:	add	w1, w2, w1
   1ff0c:	and	w1, w1, #0xffff
   1ff10:	strh	w1, [x0]
   1ff14:	ldr	w0, [sp, #244]
   1ff18:	lsl	w0, w0, #1
   1ff1c:	str	w0, [sp, #244]
   1ff20:	b	1ffa0 <lzma_mode_is_supported@@XZ_5.0+0x5308>
   1ff24:	ldr	w1, [sp, #96]
   1ff28:	ldr	w0, [sp, #180]
   1ff2c:	sub	w0, w1, w0
   1ff30:	str	w0, [sp, #96]
   1ff34:	ldr	w1, [sp, #100]
   1ff38:	ldr	w0, [sp, #180]
   1ff3c:	sub	w0, w1, w0
   1ff40:	str	w0, [sp, #100]
   1ff44:	ldr	w0, [sp, #244]
   1ff48:	lsl	x0, x0, #1
   1ff4c:	ldr	x1, [sp, #248]
   1ff50:	add	x0, x1, x0
   1ff54:	ldrh	w2, [x0]
   1ff58:	ldr	w0, [sp, #244]
   1ff5c:	lsl	x0, x0, #1
   1ff60:	ldr	x1, [sp, #248]
   1ff64:	add	x0, x1, x0
   1ff68:	ldrh	w0, [x0]
   1ff6c:	lsr	w0, w0, #5
   1ff70:	and	w1, w0, #0xffff
   1ff74:	ldr	w0, [sp, #244]
   1ff78:	lsl	x0, x0, #1
   1ff7c:	ldr	x3, [sp, #248]
   1ff80:	add	x0, x3, x0
   1ff84:	sub	w1, w2, w1
   1ff88:	and	w1, w1, #0xffff
   1ff8c:	strh	w1, [x0]
   1ff90:	ldr	w0, [sp, #244]
   1ff94:	lsl	w0, w0, #1
   1ff98:	add	w0, w0, #0x1
   1ff9c:	str	w0, [sp, #244]
   1ffa0:	ldr	w1, [sp, #96]
   1ffa4:	mov	w0, #0xffffff              	// #16777215
   1ffa8:	cmp	w1, w0
   1ffac:	b.hi	20018 <lzma_mode_is_supported@@XZ_5.0+0x5380>  // b.pmore
   1ffb0:	ldr	x1, [sp, #280]
   1ffb4:	ldr	x0, [sp, #40]
   1ffb8:	cmp	x1, x0
   1ffbc:	cset	w0, eq  // eq = none
   1ffc0:	and	w0, w0, #0xff
   1ffc4:	and	x0, x0, #0xff
   1ffc8:	cmp	x0, #0x0
   1ffcc:	b.eq	1ffe4 <lzma_mode_is_supported@@XZ_5.0+0x534c>  // b.none
   1ffd0:	ldr	x0, [sp, #216]
   1ffd4:	add	x0, x0, #0x4, lsl #12
   1ffd8:	mov	w1, #0x7                   	// #7
   1ffdc:	str	w1, [x0, #11936]
   1ffe0:	b	278fc <lzma_mode_is_supported@@XZ_5.0+0xcc64>
   1ffe4:	ldr	w0, [sp, #96]
   1ffe8:	lsl	w0, w0, #8
   1ffec:	str	w0, [sp, #96]
   1fff0:	ldr	w0, [sp, #100]
   1fff4:	lsl	w1, w0, #8
   1fff8:	ldr	x0, [sp, #280]
   1fffc:	add	x2, x0, #0x1
   20000:	str	x2, [sp, #280]
   20004:	ldr	x2, [sp, #56]
   20008:	add	x0, x2, x0
   2000c:	ldrb	w0, [x0]
   20010:	orr	w0, w1, w0
   20014:	str	w0, [sp, #100]
   20018:	ldr	w0, [sp, #96]
   2001c:	lsr	w0, w0, #11
   20020:	ldr	w1, [sp, #244]
   20024:	lsl	x1, x1, #1
   20028:	ldr	x2, [sp, #248]
   2002c:	add	x1, x2, x1
   20030:	ldrh	w1, [x1]
   20034:	mul	w0, w0, w1
   20038:	str	w0, [sp, #180]
   2003c:	ldr	w0, [sp, #100]
   20040:	ldr	w1, [sp, #180]
   20044:	cmp	w1, w0
   20048:	b.ls	200bc <lzma_mode_is_supported@@XZ_5.0+0x5424>  // b.plast
   2004c:	ldr	w0, [sp, #180]
   20050:	str	w0, [sp, #96]
   20054:	ldr	w0, [sp, #244]
   20058:	lsl	x0, x0, #1
   2005c:	ldr	x1, [sp, #248]
   20060:	add	x0, x1, x0
   20064:	ldrh	w2, [x0]
   20068:	ldr	w0, [sp, #244]
   2006c:	lsl	x0, x0, #1
   20070:	ldr	x1, [sp, #248]
   20074:	add	x0, x1, x0
   20078:	ldrh	w0, [x0]
   2007c:	mov	w1, w0
   20080:	mov	w0, #0x800                 	// #2048
   20084:	sub	w0, w0, w1
   20088:	lsr	w0, w0, #5
   2008c:	and	w1, w0, #0xffff
   20090:	ldr	w0, [sp, #244]
   20094:	lsl	x0, x0, #1
   20098:	ldr	x3, [sp, #248]
   2009c:	add	x0, x3, x0
   200a0:	add	w1, w2, w1
   200a4:	and	w1, w1, #0xffff
   200a8:	strh	w1, [x0]
   200ac:	ldr	w0, [sp, #244]
   200b0:	lsl	w0, w0, #1
   200b4:	str	w0, [sp, #244]
   200b8:	b	20138 <lzma_mode_is_supported@@XZ_5.0+0x54a0>
   200bc:	ldr	w1, [sp, #96]
   200c0:	ldr	w0, [sp, #180]
   200c4:	sub	w0, w1, w0
   200c8:	str	w0, [sp, #96]
   200cc:	ldr	w1, [sp, #100]
   200d0:	ldr	w0, [sp, #180]
   200d4:	sub	w0, w1, w0
   200d8:	str	w0, [sp, #100]
   200dc:	ldr	w0, [sp, #244]
   200e0:	lsl	x0, x0, #1
   200e4:	ldr	x1, [sp, #248]
   200e8:	add	x0, x1, x0
   200ec:	ldrh	w2, [x0]
   200f0:	ldr	w0, [sp, #244]
   200f4:	lsl	x0, x0, #1
   200f8:	ldr	x1, [sp, #248]
   200fc:	add	x0, x1, x0
   20100:	ldrh	w0, [x0]
   20104:	lsr	w0, w0, #5
   20108:	and	w1, w0, #0xffff
   2010c:	ldr	w0, [sp, #244]
   20110:	lsl	x0, x0, #1
   20114:	ldr	x3, [sp, #248]
   20118:	add	x0, x3, x0
   2011c:	sub	w1, w2, w1
   20120:	and	w1, w1, #0xffff
   20124:	strh	w1, [x0]
   20128:	ldr	w0, [sp, #244]
   2012c:	lsl	w0, w0, #1
   20130:	add	w0, w0, #0x1
   20134:	str	w0, [sp, #244]
   20138:	ldr	w1, [sp, #96]
   2013c:	mov	w0, #0xffffff              	// #16777215
   20140:	cmp	w1, w0
   20144:	b.hi	201b0 <lzma_mode_is_supported@@XZ_5.0+0x5518>  // b.pmore
   20148:	ldr	x1, [sp, #280]
   2014c:	ldr	x0, [sp, #40]
   20150:	cmp	x1, x0
   20154:	cset	w0, eq  // eq = none
   20158:	and	w0, w0, #0xff
   2015c:	and	x0, x0, #0xff
   20160:	cmp	x0, #0x0
   20164:	b.eq	2017c <lzma_mode_is_supported@@XZ_5.0+0x54e4>  // b.none
   20168:	ldr	x0, [sp, #216]
   2016c:	add	x0, x0, #0x4, lsl #12
   20170:	mov	w1, #0x8                   	// #8
   20174:	str	w1, [x0, #11936]
   20178:	b	278fc <lzma_mode_is_supported@@XZ_5.0+0xcc64>
   2017c:	ldr	w0, [sp, #96]
   20180:	lsl	w0, w0, #8
   20184:	str	w0, [sp, #96]
   20188:	ldr	w0, [sp, #100]
   2018c:	lsl	w1, w0, #8
   20190:	ldr	x0, [sp, #280]
   20194:	add	x2, x0, #0x1
   20198:	str	x2, [sp, #280]
   2019c:	ldr	x2, [sp, #56]
   201a0:	add	x0, x2, x0
   201a4:	ldrb	w0, [x0]
   201a8:	orr	w0, w1, w0
   201ac:	str	w0, [sp, #100]
   201b0:	ldr	w0, [sp, #96]
   201b4:	lsr	w0, w0, #11
   201b8:	ldr	w1, [sp, #244]
   201bc:	lsl	x1, x1, #1
   201c0:	ldr	x2, [sp, #248]
   201c4:	add	x1, x2, x1
   201c8:	ldrh	w1, [x1]
   201cc:	mul	w0, w0, w1
   201d0:	str	w0, [sp, #180]
   201d4:	ldr	w0, [sp, #100]
   201d8:	ldr	w1, [sp, #180]
   201dc:	cmp	w1, w0
   201e0:	b.ls	20254 <lzma_mode_is_supported@@XZ_5.0+0x55bc>  // b.plast
   201e4:	ldr	w0, [sp, #180]
   201e8:	str	w0, [sp, #96]
   201ec:	ldr	w0, [sp, #244]
   201f0:	lsl	x0, x0, #1
   201f4:	ldr	x1, [sp, #248]
   201f8:	add	x0, x1, x0
   201fc:	ldrh	w2, [x0]
   20200:	ldr	w0, [sp, #244]
   20204:	lsl	x0, x0, #1
   20208:	ldr	x1, [sp, #248]
   2020c:	add	x0, x1, x0
   20210:	ldrh	w0, [x0]
   20214:	mov	w1, w0
   20218:	mov	w0, #0x800                 	// #2048
   2021c:	sub	w0, w0, w1
   20220:	lsr	w0, w0, #5
   20224:	and	w1, w0, #0xffff
   20228:	ldr	w0, [sp, #244]
   2022c:	lsl	x0, x0, #1
   20230:	ldr	x3, [sp, #248]
   20234:	add	x0, x3, x0
   20238:	add	w1, w2, w1
   2023c:	and	w1, w1, #0xffff
   20240:	strh	w1, [x0]
   20244:	ldr	w0, [sp, #244]
   20248:	lsl	w0, w0, #1
   2024c:	str	w0, [sp, #244]
   20250:	b	202d0 <lzma_mode_is_supported@@XZ_5.0+0x5638>
   20254:	ldr	w1, [sp, #96]
   20258:	ldr	w0, [sp, #180]
   2025c:	sub	w0, w1, w0
   20260:	str	w0, [sp, #96]
   20264:	ldr	w1, [sp, #100]
   20268:	ldr	w0, [sp, #180]
   2026c:	sub	w0, w1, w0
   20270:	str	w0, [sp, #100]
   20274:	ldr	w0, [sp, #244]
   20278:	lsl	x0, x0, #1
   2027c:	ldr	x1, [sp, #248]
   20280:	add	x0, x1, x0
   20284:	ldrh	w2, [x0]
   20288:	ldr	w0, [sp, #244]
   2028c:	lsl	x0, x0, #1
   20290:	ldr	x1, [sp, #248]
   20294:	add	x0, x1, x0
   20298:	ldrh	w0, [x0]
   2029c:	lsr	w0, w0, #5
   202a0:	and	w1, w0, #0xffff
   202a4:	ldr	w0, [sp, #244]
   202a8:	lsl	x0, x0, #1
   202ac:	ldr	x3, [sp, #248]
   202b0:	add	x0, x3, x0
   202b4:	sub	w1, w2, w1
   202b8:	and	w1, w1, #0xffff
   202bc:	strh	w1, [x0]
   202c0:	ldr	w0, [sp, #244]
   202c4:	lsl	w0, w0, #1
   202c8:	add	w0, w0, #0x1
   202cc:	str	w0, [sp, #244]
   202d0:	ldr	w1, [sp, #96]
   202d4:	mov	w0, #0xffffff              	// #16777215
   202d8:	cmp	w1, w0
   202dc:	b.hi	20348 <lzma_mode_is_supported@@XZ_5.0+0x56b0>  // b.pmore
   202e0:	ldr	x1, [sp, #280]
   202e4:	ldr	x0, [sp, #40]
   202e8:	cmp	x1, x0
   202ec:	cset	w0, eq  // eq = none
   202f0:	and	w0, w0, #0xff
   202f4:	and	x0, x0, #0xff
   202f8:	cmp	x0, #0x0
   202fc:	b.eq	20314 <lzma_mode_is_supported@@XZ_5.0+0x567c>  // b.none
   20300:	ldr	x0, [sp, #216]
   20304:	add	x0, x0, #0x4, lsl #12
   20308:	mov	w1, #0x9                   	// #9
   2030c:	str	w1, [x0, #11936]
   20310:	b	278fc <lzma_mode_is_supported@@XZ_5.0+0xcc64>
   20314:	ldr	w0, [sp, #96]
   20318:	lsl	w0, w0, #8
   2031c:	str	w0, [sp, #96]
   20320:	ldr	w0, [sp, #100]
   20324:	lsl	w1, w0, #8
   20328:	ldr	x0, [sp, #280]
   2032c:	add	x2, x0, #0x1
   20330:	str	x2, [sp, #280]
   20334:	ldr	x2, [sp, #56]
   20338:	add	x0, x2, x0
   2033c:	ldrb	w0, [x0]
   20340:	orr	w0, w1, w0
   20344:	str	w0, [sp, #100]
   20348:	ldr	w0, [sp, #96]
   2034c:	lsr	w0, w0, #11
   20350:	ldr	w1, [sp, #244]
   20354:	lsl	x1, x1, #1
   20358:	ldr	x2, [sp, #248]
   2035c:	add	x1, x2, x1
   20360:	ldrh	w1, [x1]
   20364:	mul	w0, w0, w1
   20368:	str	w0, [sp, #180]
   2036c:	ldr	w0, [sp, #100]
   20370:	ldr	w1, [sp, #180]
   20374:	cmp	w1, w0
   20378:	b.ls	203ec <lzma_mode_is_supported@@XZ_5.0+0x5754>  // b.plast
   2037c:	ldr	w0, [sp, #180]
   20380:	str	w0, [sp, #96]
   20384:	ldr	w0, [sp, #244]
   20388:	lsl	x0, x0, #1
   2038c:	ldr	x1, [sp, #248]
   20390:	add	x0, x1, x0
   20394:	ldrh	w2, [x0]
   20398:	ldr	w0, [sp, #244]
   2039c:	lsl	x0, x0, #1
   203a0:	ldr	x1, [sp, #248]
   203a4:	add	x0, x1, x0
   203a8:	ldrh	w0, [x0]
   203ac:	mov	w1, w0
   203b0:	mov	w0, #0x800                 	// #2048
   203b4:	sub	w0, w0, w1
   203b8:	lsr	w0, w0, #5
   203bc:	and	w1, w0, #0xffff
   203c0:	ldr	w0, [sp, #244]
   203c4:	lsl	x0, x0, #1
   203c8:	ldr	x3, [sp, #248]
   203cc:	add	x0, x3, x0
   203d0:	add	w1, w2, w1
   203d4:	and	w1, w1, #0xffff
   203d8:	strh	w1, [x0]
   203dc:	ldr	w0, [sp, #244]
   203e0:	lsl	w0, w0, #1
   203e4:	str	w0, [sp, #244]
   203e8:	b	21400 <lzma_mode_is_supported@@XZ_5.0+0x6768>
   203ec:	ldr	w1, [sp, #96]
   203f0:	ldr	w0, [sp, #180]
   203f4:	sub	w0, w1, w0
   203f8:	str	w0, [sp, #96]
   203fc:	ldr	w1, [sp, #100]
   20400:	ldr	w0, [sp, #180]
   20404:	sub	w0, w1, w0
   20408:	str	w0, [sp, #100]
   2040c:	ldr	w0, [sp, #244]
   20410:	lsl	x0, x0, #1
   20414:	ldr	x1, [sp, #248]
   20418:	add	x0, x1, x0
   2041c:	ldrh	w2, [x0]
   20420:	ldr	w0, [sp, #244]
   20424:	lsl	x0, x0, #1
   20428:	ldr	x1, [sp, #248]
   2042c:	add	x0, x1, x0
   20430:	ldrh	w0, [x0]
   20434:	lsr	w0, w0, #5
   20438:	and	w1, w0, #0xffff
   2043c:	ldr	w0, [sp, #244]
   20440:	lsl	x0, x0, #1
   20444:	ldr	x3, [sp, #248]
   20448:	add	x0, x3, x0
   2044c:	sub	w1, w2, w1
   20450:	and	w1, w1, #0xffff
   20454:	strh	w1, [x0]
   20458:	ldr	w0, [sp, #244]
   2045c:	lsl	w0, w0, #1
   20460:	add	w0, w0, #0x1
   20464:	str	w0, [sp, #244]
   20468:	b	21400 <lzma_mode_is_supported@@XZ_5.0+0x6768>
   2046c:	add	x0, sp, #0x70
   20470:	ldr	w1, [sp, #272]
   20474:	bl	1edb4 <lzma_mode_is_supported@@XZ_5.0+0x411c>
   20478:	and	w0, w0, #0xff
   2047c:	lsl	w0, w0, #1
   20480:	str	w0, [sp, #92]
   20484:	mov	w0, #0x100                 	// #256
   20488:	str	w0, [sp, #236]
   2048c:	ldr	w0, [sp, #92]
   20490:	ldr	w1, [sp, #236]
   20494:	and	w0, w1, w0
   20498:	str	w0, [sp, #164]
   2049c:	ldr	w1, [sp, #236]
   204a0:	ldr	w0, [sp, #164]
   204a4:	add	w0, w1, w0
   204a8:	ldr	w1, [sp, #244]
   204ac:	add	w0, w1, w0
   204b0:	str	w0, [sp, #160]
   204b4:	ldr	w1, [sp, #96]
   204b8:	mov	w0, #0xffffff              	// #16777215
   204bc:	cmp	w1, w0
   204c0:	b.hi	2052c <lzma_mode_is_supported@@XZ_5.0+0x5894>  // b.pmore
   204c4:	ldr	x1, [sp, #280]
   204c8:	ldr	x0, [sp, #40]
   204cc:	cmp	x1, x0
   204d0:	cset	w0, eq  // eq = none
   204d4:	and	w0, w0, #0xff
   204d8:	and	x0, x0, #0xff
   204dc:	cmp	x0, #0x0
   204e0:	b.eq	204f8 <lzma_mode_is_supported@@XZ_5.0+0x5860>  // b.none
   204e4:	ldr	x0, [sp, #216]
   204e8:	add	x0, x0, #0x4, lsl #12
   204ec:	mov	w1, #0xa                   	// #10
   204f0:	str	w1, [x0, #11936]
   204f4:	b	278fc <lzma_mode_is_supported@@XZ_5.0+0xcc64>
   204f8:	ldr	w0, [sp, #96]
   204fc:	lsl	w0, w0, #8
   20500:	str	w0, [sp, #96]
   20504:	ldr	w0, [sp, #100]
   20508:	lsl	w1, w0, #8
   2050c:	ldr	x0, [sp, #280]
   20510:	add	x2, x0, #0x1
   20514:	str	x2, [sp, #280]
   20518:	ldr	x2, [sp, #56]
   2051c:	add	x0, x2, x0
   20520:	ldrb	w0, [x0]
   20524:	orr	w0, w1, w0
   20528:	str	w0, [sp, #100]
   2052c:	ldr	w0, [sp, #96]
   20530:	lsr	w0, w0, #11
   20534:	ldr	w1, [sp, #160]
   20538:	lsl	x1, x1, #1
   2053c:	ldr	x2, [sp, #248]
   20540:	add	x1, x2, x1
   20544:	ldrh	w1, [x1]
   20548:	mul	w0, w0, w1
   2054c:	str	w0, [sp, #180]
   20550:	ldr	w0, [sp, #100]
   20554:	ldr	w1, [sp, #180]
   20558:	cmp	w1, w0
   2055c:	b.ls	205e4 <lzma_mode_is_supported@@XZ_5.0+0x594c>  // b.plast
   20560:	ldr	w0, [sp, #180]
   20564:	str	w0, [sp, #96]
   20568:	ldr	w0, [sp, #160]
   2056c:	lsl	x0, x0, #1
   20570:	ldr	x1, [sp, #248]
   20574:	add	x0, x1, x0
   20578:	ldrh	w2, [x0]
   2057c:	ldr	w0, [sp, #160]
   20580:	lsl	x0, x0, #1
   20584:	ldr	x1, [sp, #248]
   20588:	add	x0, x1, x0
   2058c:	ldrh	w0, [x0]
   20590:	mov	w1, w0
   20594:	mov	w0, #0x800                 	// #2048
   20598:	sub	w0, w0, w1
   2059c:	lsr	w0, w0, #5
   205a0:	and	w1, w0, #0xffff
   205a4:	ldr	w0, [sp, #160]
   205a8:	lsl	x0, x0, #1
   205ac:	ldr	x3, [sp, #248]
   205b0:	add	x0, x3, x0
   205b4:	add	w1, w2, w1
   205b8:	and	w1, w1, #0xffff
   205bc:	strh	w1, [x0]
   205c0:	ldr	w0, [sp, #244]
   205c4:	lsl	w0, w0, #1
   205c8:	str	w0, [sp, #244]
   205cc:	ldr	w0, [sp, #164]
   205d0:	mvn	w0, w0
   205d4:	ldr	w1, [sp, #236]
   205d8:	and	w0, w1, w0
   205dc:	str	w0, [sp, #236]
   205e0:	b	20670 <lzma_mode_is_supported@@XZ_5.0+0x59d8>
   205e4:	ldr	w1, [sp, #96]
   205e8:	ldr	w0, [sp, #180]
   205ec:	sub	w0, w1, w0
   205f0:	str	w0, [sp, #96]
   205f4:	ldr	w1, [sp, #100]
   205f8:	ldr	w0, [sp, #180]
   205fc:	sub	w0, w1, w0
   20600:	str	w0, [sp, #100]
   20604:	ldr	w0, [sp, #160]
   20608:	lsl	x0, x0, #1
   2060c:	ldr	x1, [sp, #248]
   20610:	add	x0, x1, x0
   20614:	ldrh	w2, [x0]
   20618:	ldr	w0, [sp, #160]
   2061c:	lsl	x0, x0, #1
   20620:	ldr	x1, [sp, #248]
   20624:	add	x0, x1, x0
   20628:	ldrh	w0, [x0]
   2062c:	lsr	w0, w0, #5
   20630:	and	w1, w0, #0xffff
   20634:	ldr	w0, [sp, #160]
   20638:	lsl	x0, x0, #1
   2063c:	ldr	x3, [sp, #248]
   20640:	add	x0, x3, x0
   20644:	sub	w1, w2, w1
   20648:	and	w1, w1, #0xffff
   2064c:	strh	w1, [x0]
   20650:	ldr	w0, [sp, #244]
   20654:	lsl	w0, w0, #1
   20658:	add	w0, w0, #0x1
   2065c:	str	w0, [sp, #244]
   20660:	ldr	w1, [sp, #236]
   20664:	ldr	w0, [sp, #164]
   20668:	and	w0, w1, w0
   2066c:	str	w0, [sp, #236]
   20670:	ldr	w0, [sp, #92]
   20674:	lsl	w0, w0, #1
   20678:	str	w0, [sp, #92]
   2067c:	ldr	w0, [sp, #92]
   20680:	ldr	w1, [sp, #236]
   20684:	and	w0, w1, w0
   20688:	str	w0, [sp, #164]
   2068c:	ldr	w1, [sp, #236]
   20690:	ldr	w0, [sp, #164]
   20694:	add	w0, w1, w0
   20698:	ldr	w1, [sp, #244]
   2069c:	add	w0, w1, w0
   206a0:	str	w0, [sp, #160]
   206a4:	ldr	w1, [sp, #96]
   206a8:	mov	w0, #0xffffff              	// #16777215
   206ac:	cmp	w1, w0
   206b0:	b.hi	2071c <lzma_mode_is_supported@@XZ_5.0+0x5a84>  // b.pmore
   206b4:	ldr	x1, [sp, #280]
   206b8:	ldr	x0, [sp, #40]
   206bc:	cmp	x1, x0
   206c0:	cset	w0, eq  // eq = none
   206c4:	and	w0, w0, #0xff
   206c8:	and	x0, x0, #0xff
   206cc:	cmp	x0, #0x0
   206d0:	b.eq	206e8 <lzma_mode_is_supported@@XZ_5.0+0x5a50>  // b.none
   206d4:	ldr	x0, [sp, #216]
   206d8:	add	x0, x0, #0x4, lsl #12
   206dc:	mov	w1, #0xb                   	// #11
   206e0:	str	w1, [x0, #11936]
   206e4:	b	278fc <lzma_mode_is_supported@@XZ_5.0+0xcc64>
   206e8:	ldr	w0, [sp, #96]
   206ec:	lsl	w0, w0, #8
   206f0:	str	w0, [sp, #96]
   206f4:	ldr	w0, [sp, #100]
   206f8:	lsl	w1, w0, #8
   206fc:	ldr	x0, [sp, #280]
   20700:	add	x2, x0, #0x1
   20704:	str	x2, [sp, #280]
   20708:	ldr	x2, [sp, #56]
   2070c:	add	x0, x2, x0
   20710:	ldrb	w0, [x0]
   20714:	orr	w0, w1, w0
   20718:	str	w0, [sp, #100]
   2071c:	ldr	w0, [sp, #96]
   20720:	lsr	w0, w0, #11
   20724:	ldr	w1, [sp, #160]
   20728:	lsl	x1, x1, #1
   2072c:	ldr	x2, [sp, #248]
   20730:	add	x1, x2, x1
   20734:	ldrh	w1, [x1]
   20738:	mul	w0, w0, w1
   2073c:	str	w0, [sp, #180]
   20740:	ldr	w0, [sp, #100]
   20744:	ldr	w1, [sp, #180]
   20748:	cmp	w1, w0
   2074c:	b.ls	207d4 <lzma_mode_is_supported@@XZ_5.0+0x5b3c>  // b.plast
   20750:	ldr	w0, [sp, #180]
   20754:	str	w0, [sp, #96]
   20758:	ldr	w0, [sp, #160]
   2075c:	lsl	x0, x0, #1
   20760:	ldr	x1, [sp, #248]
   20764:	add	x0, x1, x0
   20768:	ldrh	w2, [x0]
   2076c:	ldr	w0, [sp, #160]
   20770:	lsl	x0, x0, #1
   20774:	ldr	x1, [sp, #248]
   20778:	add	x0, x1, x0
   2077c:	ldrh	w0, [x0]
   20780:	mov	w1, w0
   20784:	mov	w0, #0x800                 	// #2048
   20788:	sub	w0, w0, w1
   2078c:	lsr	w0, w0, #5
   20790:	and	w1, w0, #0xffff
   20794:	ldr	w0, [sp, #160]
   20798:	lsl	x0, x0, #1
   2079c:	ldr	x3, [sp, #248]
   207a0:	add	x0, x3, x0
   207a4:	add	w1, w2, w1
   207a8:	and	w1, w1, #0xffff
   207ac:	strh	w1, [x0]
   207b0:	ldr	w0, [sp, #244]
   207b4:	lsl	w0, w0, #1
   207b8:	str	w0, [sp, #244]
   207bc:	ldr	w0, [sp, #164]
   207c0:	mvn	w0, w0
   207c4:	ldr	w1, [sp, #236]
   207c8:	and	w0, w1, w0
   207cc:	str	w0, [sp, #236]
   207d0:	b	20860 <lzma_mode_is_supported@@XZ_5.0+0x5bc8>
   207d4:	ldr	w1, [sp, #96]
   207d8:	ldr	w0, [sp, #180]
   207dc:	sub	w0, w1, w0
   207e0:	str	w0, [sp, #96]
   207e4:	ldr	w1, [sp, #100]
   207e8:	ldr	w0, [sp, #180]
   207ec:	sub	w0, w1, w0
   207f0:	str	w0, [sp, #100]
   207f4:	ldr	w0, [sp, #160]
   207f8:	lsl	x0, x0, #1
   207fc:	ldr	x1, [sp, #248]
   20800:	add	x0, x1, x0
   20804:	ldrh	w2, [x0]
   20808:	ldr	w0, [sp, #160]
   2080c:	lsl	x0, x0, #1
   20810:	ldr	x1, [sp, #248]
   20814:	add	x0, x1, x0
   20818:	ldrh	w0, [x0]
   2081c:	lsr	w0, w0, #5
   20820:	and	w1, w0, #0xffff
   20824:	ldr	w0, [sp, #160]
   20828:	lsl	x0, x0, #1
   2082c:	ldr	x3, [sp, #248]
   20830:	add	x0, x3, x0
   20834:	sub	w1, w2, w1
   20838:	and	w1, w1, #0xffff
   2083c:	strh	w1, [x0]
   20840:	ldr	w0, [sp, #244]
   20844:	lsl	w0, w0, #1
   20848:	add	w0, w0, #0x1
   2084c:	str	w0, [sp, #244]
   20850:	ldr	w1, [sp, #236]
   20854:	ldr	w0, [sp, #164]
   20858:	and	w0, w1, w0
   2085c:	str	w0, [sp, #236]
   20860:	ldr	w0, [sp, #92]
   20864:	lsl	w0, w0, #1
   20868:	str	w0, [sp, #92]
   2086c:	ldr	w0, [sp, #92]
   20870:	ldr	w1, [sp, #236]
   20874:	and	w0, w1, w0
   20878:	str	w0, [sp, #164]
   2087c:	ldr	w1, [sp, #236]
   20880:	ldr	w0, [sp, #164]
   20884:	add	w0, w1, w0
   20888:	ldr	w1, [sp, #244]
   2088c:	add	w0, w1, w0
   20890:	str	w0, [sp, #160]
   20894:	ldr	w1, [sp, #96]
   20898:	mov	w0, #0xffffff              	// #16777215
   2089c:	cmp	w1, w0
   208a0:	b.hi	2090c <lzma_mode_is_supported@@XZ_5.0+0x5c74>  // b.pmore
   208a4:	ldr	x1, [sp, #280]
   208a8:	ldr	x0, [sp, #40]
   208ac:	cmp	x1, x0
   208b0:	cset	w0, eq  // eq = none
   208b4:	and	w0, w0, #0xff
   208b8:	and	x0, x0, #0xff
   208bc:	cmp	x0, #0x0
   208c0:	b.eq	208d8 <lzma_mode_is_supported@@XZ_5.0+0x5c40>  // b.none
   208c4:	ldr	x0, [sp, #216]
   208c8:	add	x0, x0, #0x4, lsl #12
   208cc:	mov	w1, #0xc                   	// #12
   208d0:	str	w1, [x0, #11936]
   208d4:	b	278fc <lzma_mode_is_supported@@XZ_5.0+0xcc64>
   208d8:	ldr	w0, [sp, #96]
   208dc:	lsl	w0, w0, #8
   208e0:	str	w0, [sp, #96]
   208e4:	ldr	w0, [sp, #100]
   208e8:	lsl	w1, w0, #8
   208ec:	ldr	x0, [sp, #280]
   208f0:	add	x2, x0, #0x1
   208f4:	str	x2, [sp, #280]
   208f8:	ldr	x2, [sp, #56]
   208fc:	add	x0, x2, x0
   20900:	ldrb	w0, [x0]
   20904:	orr	w0, w1, w0
   20908:	str	w0, [sp, #100]
   2090c:	ldr	w0, [sp, #96]
   20910:	lsr	w0, w0, #11
   20914:	ldr	w1, [sp, #160]
   20918:	lsl	x1, x1, #1
   2091c:	ldr	x2, [sp, #248]
   20920:	add	x1, x2, x1
   20924:	ldrh	w1, [x1]
   20928:	mul	w0, w0, w1
   2092c:	str	w0, [sp, #180]
   20930:	ldr	w0, [sp, #100]
   20934:	ldr	w1, [sp, #180]
   20938:	cmp	w1, w0
   2093c:	b.ls	209c4 <lzma_mode_is_supported@@XZ_5.0+0x5d2c>  // b.plast
   20940:	ldr	w0, [sp, #180]
   20944:	str	w0, [sp, #96]
   20948:	ldr	w0, [sp, #160]
   2094c:	lsl	x0, x0, #1
   20950:	ldr	x1, [sp, #248]
   20954:	add	x0, x1, x0
   20958:	ldrh	w2, [x0]
   2095c:	ldr	w0, [sp, #160]
   20960:	lsl	x0, x0, #1
   20964:	ldr	x1, [sp, #248]
   20968:	add	x0, x1, x0
   2096c:	ldrh	w0, [x0]
   20970:	mov	w1, w0
   20974:	mov	w0, #0x800                 	// #2048
   20978:	sub	w0, w0, w1
   2097c:	lsr	w0, w0, #5
   20980:	and	w1, w0, #0xffff
   20984:	ldr	w0, [sp, #160]
   20988:	lsl	x0, x0, #1
   2098c:	ldr	x3, [sp, #248]
   20990:	add	x0, x3, x0
   20994:	add	w1, w2, w1
   20998:	and	w1, w1, #0xffff
   2099c:	strh	w1, [x0]
   209a0:	ldr	w0, [sp, #244]
   209a4:	lsl	w0, w0, #1
   209a8:	str	w0, [sp, #244]
   209ac:	ldr	w0, [sp, #164]
   209b0:	mvn	w0, w0
   209b4:	ldr	w1, [sp, #236]
   209b8:	and	w0, w1, w0
   209bc:	str	w0, [sp, #236]
   209c0:	b	20a50 <lzma_mode_is_supported@@XZ_5.0+0x5db8>
   209c4:	ldr	w1, [sp, #96]
   209c8:	ldr	w0, [sp, #180]
   209cc:	sub	w0, w1, w0
   209d0:	str	w0, [sp, #96]
   209d4:	ldr	w1, [sp, #100]
   209d8:	ldr	w0, [sp, #180]
   209dc:	sub	w0, w1, w0
   209e0:	str	w0, [sp, #100]
   209e4:	ldr	w0, [sp, #160]
   209e8:	lsl	x0, x0, #1
   209ec:	ldr	x1, [sp, #248]
   209f0:	add	x0, x1, x0
   209f4:	ldrh	w2, [x0]
   209f8:	ldr	w0, [sp, #160]
   209fc:	lsl	x0, x0, #1
   20a00:	ldr	x1, [sp, #248]
   20a04:	add	x0, x1, x0
   20a08:	ldrh	w0, [x0]
   20a0c:	lsr	w0, w0, #5
   20a10:	and	w1, w0, #0xffff
   20a14:	ldr	w0, [sp, #160]
   20a18:	lsl	x0, x0, #1
   20a1c:	ldr	x3, [sp, #248]
   20a20:	add	x0, x3, x0
   20a24:	sub	w1, w2, w1
   20a28:	and	w1, w1, #0xffff
   20a2c:	strh	w1, [x0]
   20a30:	ldr	w0, [sp, #244]
   20a34:	lsl	w0, w0, #1
   20a38:	add	w0, w0, #0x1
   20a3c:	str	w0, [sp, #244]
   20a40:	ldr	w1, [sp, #236]
   20a44:	ldr	w0, [sp, #164]
   20a48:	and	w0, w1, w0
   20a4c:	str	w0, [sp, #236]
   20a50:	ldr	w0, [sp, #92]
   20a54:	lsl	w0, w0, #1
   20a58:	str	w0, [sp, #92]
   20a5c:	ldr	w0, [sp, #92]
   20a60:	ldr	w1, [sp, #236]
   20a64:	and	w0, w1, w0
   20a68:	str	w0, [sp, #164]
   20a6c:	ldr	w1, [sp, #236]
   20a70:	ldr	w0, [sp, #164]
   20a74:	add	w0, w1, w0
   20a78:	ldr	w1, [sp, #244]
   20a7c:	add	w0, w1, w0
   20a80:	str	w0, [sp, #160]
   20a84:	ldr	w1, [sp, #96]
   20a88:	mov	w0, #0xffffff              	// #16777215
   20a8c:	cmp	w1, w0
   20a90:	b.hi	20afc <lzma_mode_is_supported@@XZ_5.0+0x5e64>  // b.pmore
   20a94:	ldr	x1, [sp, #280]
   20a98:	ldr	x0, [sp, #40]
   20a9c:	cmp	x1, x0
   20aa0:	cset	w0, eq  // eq = none
   20aa4:	and	w0, w0, #0xff
   20aa8:	and	x0, x0, #0xff
   20aac:	cmp	x0, #0x0
   20ab0:	b.eq	20ac8 <lzma_mode_is_supported@@XZ_5.0+0x5e30>  // b.none
   20ab4:	ldr	x0, [sp, #216]
   20ab8:	add	x0, x0, #0x4, lsl #12
   20abc:	mov	w1, #0xd                   	// #13
   20ac0:	str	w1, [x0, #11936]
   20ac4:	b	278fc <lzma_mode_is_supported@@XZ_5.0+0xcc64>
   20ac8:	ldr	w0, [sp, #96]
   20acc:	lsl	w0, w0, #8
   20ad0:	str	w0, [sp, #96]
   20ad4:	ldr	w0, [sp, #100]
   20ad8:	lsl	w1, w0, #8
   20adc:	ldr	x0, [sp, #280]
   20ae0:	add	x2, x0, #0x1
   20ae4:	str	x2, [sp, #280]
   20ae8:	ldr	x2, [sp, #56]
   20aec:	add	x0, x2, x0
   20af0:	ldrb	w0, [x0]
   20af4:	orr	w0, w1, w0
   20af8:	str	w0, [sp, #100]
   20afc:	ldr	w0, [sp, #96]
   20b00:	lsr	w0, w0, #11
   20b04:	ldr	w1, [sp, #160]
   20b08:	lsl	x1, x1, #1
   20b0c:	ldr	x2, [sp, #248]
   20b10:	add	x1, x2, x1
   20b14:	ldrh	w1, [x1]
   20b18:	mul	w0, w0, w1
   20b1c:	str	w0, [sp, #180]
   20b20:	ldr	w0, [sp, #100]
   20b24:	ldr	w1, [sp, #180]
   20b28:	cmp	w1, w0
   20b2c:	b.ls	20bb4 <lzma_mode_is_supported@@XZ_5.0+0x5f1c>  // b.plast
   20b30:	ldr	w0, [sp, #180]
   20b34:	str	w0, [sp, #96]
   20b38:	ldr	w0, [sp, #160]
   20b3c:	lsl	x0, x0, #1
   20b40:	ldr	x1, [sp, #248]
   20b44:	add	x0, x1, x0
   20b48:	ldrh	w2, [x0]
   20b4c:	ldr	w0, [sp, #160]
   20b50:	lsl	x0, x0, #1
   20b54:	ldr	x1, [sp, #248]
   20b58:	add	x0, x1, x0
   20b5c:	ldrh	w0, [x0]
   20b60:	mov	w1, w0
   20b64:	mov	w0, #0x800                 	// #2048
   20b68:	sub	w0, w0, w1
   20b6c:	lsr	w0, w0, #5
   20b70:	and	w1, w0, #0xffff
   20b74:	ldr	w0, [sp, #160]
   20b78:	lsl	x0, x0, #1
   20b7c:	ldr	x3, [sp, #248]
   20b80:	add	x0, x3, x0
   20b84:	add	w1, w2, w1
   20b88:	and	w1, w1, #0xffff
   20b8c:	strh	w1, [x0]
   20b90:	ldr	w0, [sp, #244]
   20b94:	lsl	w0, w0, #1
   20b98:	str	w0, [sp, #244]
   20b9c:	ldr	w0, [sp, #164]
   20ba0:	mvn	w0, w0
   20ba4:	ldr	w1, [sp, #236]
   20ba8:	and	w0, w1, w0
   20bac:	str	w0, [sp, #236]
   20bb0:	b	20c40 <lzma_mode_is_supported@@XZ_5.0+0x5fa8>
   20bb4:	ldr	w1, [sp, #96]
   20bb8:	ldr	w0, [sp, #180]
   20bbc:	sub	w0, w1, w0
   20bc0:	str	w0, [sp, #96]
   20bc4:	ldr	w1, [sp, #100]
   20bc8:	ldr	w0, [sp, #180]
   20bcc:	sub	w0, w1, w0
   20bd0:	str	w0, [sp, #100]
   20bd4:	ldr	w0, [sp, #160]
   20bd8:	lsl	x0, x0, #1
   20bdc:	ldr	x1, [sp, #248]
   20be0:	add	x0, x1, x0
   20be4:	ldrh	w2, [x0]
   20be8:	ldr	w0, [sp, #160]
   20bec:	lsl	x0, x0, #1
   20bf0:	ldr	x1, [sp, #248]
   20bf4:	add	x0, x1, x0
   20bf8:	ldrh	w0, [x0]
   20bfc:	lsr	w0, w0, #5
   20c00:	and	w1, w0, #0xffff
   20c04:	ldr	w0, [sp, #160]
   20c08:	lsl	x0, x0, #1
   20c0c:	ldr	x3, [sp, #248]
   20c10:	add	x0, x3, x0
   20c14:	sub	w1, w2, w1
   20c18:	and	w1, w1, #0xffff
   20c1c:	strh	w1, [x0]
   20c20:	ldr	w0, [sp, #244]
   20c24:	lsl	w0, w0, #1
   20c28:	add	w0, w0, #0x1
   20c2c:	str	w0, [sp, #244]
   20c30:	ldr	w1, [sp, #236]
   20c34:	ldr	w0, [sp, #164]
   20c38:	and	w0, w1, w0
   20c3c:	str	w0, [sp, #236]
   20c40:	ldr	w0, [sp, #92]
   20c44:	lsl	w0, w0, #1
   20c48:	str	w0, [sp, #92]
   20c4c:	ldr	w0, [sp, #92]
   20c50:	ldr	w1, [sp, #236]
   20c54:	and	w0, w1, w0
   20c58:	str	w0, [sp, #164]
   20c5c:	ldr	w1, [sp, #236]
   20c60:	ldr	w0, [sp, #164]
   20c64:	add	w0, w1, w0
   20c68:	ldr	w1, [sp, #244]
   20c6c:	add	w0, w1, w0
   20c70:	str	w0, [sp, #160]
   20c74:	ldr	w1, [sp, #96]
   20c78:	mov	w0, #0xffffff              	// #16777215
   20c7c:	cmp	w1, w0
   20c80:	b.hi	20cec <lzma_mode_is_supported@@XZ_5.0+0x6054>  // b.pmore
   20c84:	ldr	x1, [sp, #280]
   20c88:	ldr	x0, [sp, #40]
   20c8c:	cmp	x1, x0
   20c90:	cset	w0, eq  // eq = none
   20c94:	and	w0, w0, #0xff
   20c98:	and	x0, x0, #0xff
   20c9c:	cmp	x0, #0x0
   20ca0:	b.eq	20cb8 <lzma_mode_is_supported@@XZ_5.0+0x6020>  // b.none
   20ca4:	ldr	x0, [sp, #216]
   20ca8:	add	x0, x0, #0x4, lsl #12
   20cac:	mov	w1, #0xe                   	// #14
   20cb0:	str	w1, [x0, #11936]
   20cb4:	b	278fc <lzma_mode_is_supported@@XZ_5.0+0xcc64>
   20cb8:	ldr	w0, [sp, #96]
   20cbc:	lsl	w0, w0, #8
   20cc0:	str	w0, [sp, #96]
   20cc4:	ldr	w0, [sp, #100]
   20cc8:	lsl	w1, w0, #8
   20ccc:	ldr	x0, [sp, #280]
   20cd0:	add	x2, x0, #0x1
   20cd4:	str	x2, [sp, #280]
   20cd8:	ldr	x2, [sp, #56]
   20cdc:	add	x0, x2, x0
   20ce0:	ldrb	w0, [x0]
   20ce4:	orr	w0, w1, w0
   20ce8:	str	w0, [sp, #100]
   20cec:	ldr	w0, [sp, #96]
   20cf0:	lsr	w0, w0, #11
   20cf4:	ldr	w1, [sp, #160]
   20cf8:	lsl	x1, x1, #1
   20cfc:	ldr	x2, [sp, #248]
   20d00:	add	x1, x2, x1
   20d04:	ldrh	w1, [x1]
   20d08:	mul	w0, w0, w1
   20d0c:	str	w0, [sp, #180]
   20d10:	ldr	w0, [sp, #100]
   20d14:	ldr	w1, [sp, #180]
   20d18:	cmp	w1, w0
   20d1c:	b.ls	20da4 <lzma_mode_is_supported@@XZ_5.0+0x610c>  // b.plast
   20d20:	ldr	w0, [sp, #180]
   20d24:	str	w0, [sp, #96]
   20d28:	ldr	w0, [sp, #160]
   20d2c:	lsl	x0, x0, #1
   20d30:	ldr	x1, [sp, #248]
   20d34:	add	x0, x1, x0
   20d38:	ldrh	w2, [x0]
   20d3c:	ldr	w0, [sp, #160]
   20d40:	lsl	x0, x0, #1
   20d44:	ldr	x1, [sp, #248]
   20d48:	add	x0, x1, x0
   20d4c:	ldrh	w0, [x0]
   20d50:	mov	w1, w0
   20d54:	mov	w0, #0x800                 	// #2048
   20d58:	sub	w0, w0, w1
   20d5c:	lsr	w0, w0, #5
   20d60:	and	w1, w0, #0xffff
   20d64:	ldr	w0, [sp, #160]
   20d68:	lsl	x0, x0, #1
   20d6c:	ldr	x3, [sp, #248]
   20d70:	add	x0, x3, x0
   20d74:	add	w1, w2, w1
   20d78:	and	w1, w1, #0xffff
   20d7c:	strh	w1, [x0]
   20d80:	ldr	w0, [sp, #244]
   20d84:	lsl	w0, w0, #1
   20d88:	str	w0, [sp, #244]
   20d8c:	ldr	w0, [sp, #164]
   20d90:	mvn	w0, w0
   20d94:	ldr	w1, [sp, #236]
   20d98:	and	w0, w1, w0
   20d9c:	str	w0, [sp, #236]
   20da0:	b	20e30 <lzma_mode_is_supported@@XZ_5.0+0x6198>
   20da4:	ldr	w1, [sp, #96]
   20da8:	ldr	w0, [sp, #180]
   20dac:	sub	w0, w1, w0
   20db0:	str	w0, [sp, #96]
   20db4:	ldr	w1, [sp, #100]
   20db8:	ldr	w0, [sp, #180]
   20dbc:	sub	w0, w1, w0
   20dc0:	str	w0, [sp, #100]
   20dc4:	ldr	w0, [sp, #160]
   20dc8:	lsl	x0, x0, #1
   20dcc:	ldr	x1, [sp, #248]
   20dd0:	add	x0, x1, x0
   20dd4:	ldrh	w2, [x0]
   20dd8:	ldr	w0, [sp, #160]
   20ddc:	lsl	x0, x0, #1
   20de0:	ldr	x1, [sp, #248]
   20de4:	add	x0, x1, x0
   20de8:	ldrh	w0, [x0]
   20dec:	lsr	w0, w0, #5
   20df0:	and	w1, w0, #0xffff
   20df4:	ldr	w0, [sp, #160]
   20df8:	lsl	x0, x0, #1
   20dfc:	ldr	x3, [sp, #248]
   20e00:	add	x0, x3, x0
   20e04:	sub	w1, w2, w1
   20e08:	and	w1, w1, #0xffff
   20e0c:	strh	w1, [x0]
   20e10:	ldr	w0, [sp, #244]
   20e14:	lsl	w0, w0, #1
   20e18:	add	w0, w0, #0x1
   20e1c:	str	w0, [sp, #244]
   20e20:	ldr	w1, [sp, #236]
   20e24:	ldr	w0, [sp, #164]
   20e28:	and	w0, w1, w0
   20e2c:	str	w0, [sp, #236]
   20e30:	ldr	w0, [sp, #92]
   20e34:	lsl	w0, w0, #1
   20e38:	str	w0, [sp, #92]
   20e3c:	ldr	w0, [sp, #92]
   20e40:	ldr	w1, [sp, #236]
   20e44:	and	w0, w1, w0
   20e48:	str	w0, [sp, #164]
   20e4c:	ldr	w1, [sp, #236]
   20e50:	ldr	w0, [sp, #164]
   20e54:	add	w0, w1, w0
   20e58:	ldr	w1, [sp, #244]
   20e5c:	add	w0, w1, w0
   20e60:	str	w0, [sp, #160]
   20e64:	ldr	w1, [sp, #96]
   20e68:	mov	w0, #0xffffff              	// #16777215
   20e6c:	cmp	w1, w0
   20e70:	b.hi	20edc <lzma_mode_is_supported@@XZ_5.0+0x6244>  // b.pmore
   20e74:	ldr	x1, [sp, #280]
   20e78:	ldr	x0, [sp, #40]
   20e7c:	cmp	x1, x0
   20e80:	cset	w0, eq  // eq = none
   20e84:	and	w0, w0, #0xff
   20e88:	and	x0, x0, #0xff
   20e8c:	cmp	x0, #0x0
   20e90:	b.eq	20ea8 <lzma_mode_is_supported@@XZ_5.0+0x6210>  // b.none
   20e94:	ldr	x0, [sp, #216]
   20e98:	add	x0, x0, #0x4, lsl #12
   20e9c:	mov	w1, #0xf                   	// #15
   20ea0:	str	w1, [x0, #11936]
   20ea4:	b	278fc <lzma_mode_is_supported@@XZ_5.0+0xcc64>
   20ea8:	ldr	w0, [sp, #96]
   20eac:	lsl	w0, w0, #8
   20eb0:	str	w0, [sp, #96]
   20eb4:	ldr	w0, [sp, #100]
   20eb8:	lsl	w1, w0, #8
   20ebc:	ldr	x0, [sp, #280]
   20ec0:	add	x2, x0, #0x1
   20ec4:	str	x2, [sp, #280]
   20ec8:	ldr	x2, [sp, #56]
   20ecc:	add	x0, x2, x0
   20ed0:	ldrb	w0, [x0]
   20ed4:	orr	w0, w1, w0
   20ed8:	str	w0, [sp, #100]
   20edc:	ldr	w0, [sp, #96]
   20ee0:	lsr	w0, w0, #11
   20ee4:	ldr	w1, [sp, #160]
   20ee8:	lsl	x1, x1, #1
   20eec:	ldr	x2, [sp, #248]
   20ef0:	add	x1, x2, x1
   20ef4:	ldrh	w1, [x1]
   20ef8:	mul	w0, w0, w1
   20efc:	str	w0, [sp, #180]
   20f00:	ldr	w0, [sp, #100]
   20f04:	ldr	w1, [sp, #180]
   20f08:	cmp	w1, w0
   20f0c:	b.ls	20f94 <lzma_mode_is_supported@@XZ_5.0+0x62fc>  // b.plast
   20f10:	ldr	w0, [sp, #180]
   20f14:	str	w0, [sp, #96]
   20f18:	ldr	w0, [sp, #160]
   20f1c:	lsl	x0, x0, #1
   20f20:	ldr	x1, [sp, #248]
   20f24:	add	x0, x1, x0
   20f28:	ldrh	w2, [x0]
   20f2c:	ldr	w0, [sp, #160]
   20f30:	lsl	x0, x0, #1
   20f34:	ldr	x1, [sp, #248]
   20f38:	add	x0, x1, x0
   20f3c:	ldrh	w0, [x0]
   20f40:	mov	w1, w0
   20f44:	mov	w0, #0x800                 	// #2048
   20f48:	sub	w0, w0, w1
   20f4c:	lsr	w0, w0, #5
   20f50:	and	w1, w0, #0xffff
   20f54:	ldr	w0, [sp, #160]
   20f58:	lsl	x0, x0, #1
   20f5c:	ldr	x3, [sp, #248]
   20f60:	add	x0, x3, x0
   20f64:	add	w1, w2, w1
   20f68:	and	w1, w1, #0xffff
   20f6c:	strh	w1, [x0]
   20f70:	ldr	w0, [sp, #244]
   20f74:	lsl	w0, w0, #1
   20f78:	str	w0, [sp, #244]
   20f7c:	ldr	w0, [sp, #164]
   20f80:	mvn	w0, w0
   20f84:	ldr	w1, [sp, #236]
   20f88:	and	w0, w1, w0
   20f8c:	str	w0, [sp, #236]
   20f90:	b	21020 <lzma_mode_is_supported@@XZ_5.0+0x6388>
   20f94:	ldr	w1, [sp, #96]
   20f98:	ldr	w0, [sp, #180]
   20f9c:	sub	w0, w1, w0
   20fa0:	str	w0, [sp, #96]
   20fa4:	ldr	w1, [sp, #100]
   20fa8:	ldr	w0, [sp, #180]
   20fac:	sub	w0, w1, w0
   20fb0:	str	w0, [sp, #100]
   20fb4:	ldr	w0, [sp, #160]
   20fb8:	lsl	x0, x0, #1
   20fbc:	ldr	x1, [sp, #248]
   20fc0:	add	x0, x1, x0
   20fc4:	ldrh	w2, [x0]
   20fc8:	ldr	w0, [sp, #160]
   20fcc:	lsl	x0, x0, #1
   20fd0:	ldr	x1, [sp, #248]
   20fd4:	add	x0, x1, x0
   20fd8:	ldrh	w0, [x0]
   20fdc:	lsr	w0, w0, #5
   20fe0:	and	w1, w0, #0xffff
   20fe4:	ldr	w0, [sp, #160]
   20fe8:	lsl	x0, x0, #1
   20fec:	ldr	x3, [sp, #248]
   20ff0:	add	x0, x3, x0
   20ff4:	sub	w1, w2, w1
   20ff8:	and	w1, w1, #0xffff
   20ffc:	strh	w1, [x0]
   21000:	ldr	w0, [sp, #244]
   21004:	lsl	w0, w0, #1
   21008:	add	w0, w0, #0x1
   2100c:	str	w0, [sp, #244]
   21010:	ldr	w1, [sp, #236]
   21014:	ldr	w0, [sp, #164]
   21018:	and	w0, w1, w0
   2101c:	str	w0, [sp, #236]
   21020:	ldr	w0, [sp, #92]
   21024:	lsl	w0, w0, #1
   21028:	str	w0, [sp, #92]
   2102c:	ldr	w0, [sp, #92]
   21030:	ldr	w1, [sp, #236]
   21034:	and	w0, w1, w0
   21038:	str	w0, [sp, #164]
   2103c:	ldr	w1, [sp, #236]
   21040:	ldr	w0, [sp, #164]
   21044:	add	w0, w1, w0
   21048:	ldr	w1, [sp, #244]
   2104c:	add	w0, w1, w0
   21050:	str	w0, [sp, #160]
   21054:	ldr	w1, [sp, #96]
   21058:	mov	w0, #0xffffff              	// #16777215
   2105c:	cmp	w1, w0
   21060:	b.hi	210cc <lzma_mode_is_supported@@XZ_5.0+0x6434>  // b.pmore
   21064:	ldr	x1, [sp, #280]
   21068:	ldr	x0, [sp, #40]
   2106c:	cmp	x1, x0
   21070:	cset	w0, eq  // eq = none
   21074:	and	w0, w0, #0xff
   21078:	and	x0, x0, #0xff
   2107c:	cmp	x0, #0x0
   21080:	b.eq	21098 <lzma_mode_is_supported@@XZ_5.0+0x6400>  // b.none
   21084:	ldr	x0, [sp, #216]
   21088:	add	x0, x0, #0x4, lsl #12
   2108c:	mov	w1, #0x10                  	// #16
   21090:	str	w1, [x0, #11936]
   21094:	b	278fc <lzma_mode_is_supported@@XZ_5.0+0xcc64>
   21098:	ldr	w0, [sp, #96]
   2109c:	lsl	w0, w0, #8
   210a0:	str	w0, [sp, #96]
   210a4:	ldr	w0, [sp, #100]
   210a8:	lsl	w1, w0, #8
   210ac:	ldr	x0, [sp, #280]
   210b0:	add	x2, x0, #0x1
   210b4:	str	x2, [sp, #280]
   210b8:	ldr	x2, [sp, #56]
   210bc:	add	x0, x2, x0
   210c0:	ldrb	w0, [x0]
   210c4:	orr	w0, w1, w0
   210c8:	str	w0, [sp, #100]
   210cc:	ldr	w0, [sp, #96]
   210d0:	lsr	w0, w0, #11
   210d4:	ldr	w1, [sp, #160]
   210d8:	lsl	x1, x1, #1
   210dc:	ldr	x2, [sp, #248]
   210e0:	add	x1, x2, x1
   210e4:	ldrh	w1, [x1]
   210e8:	mul	w0, w0, w1
   210ec:	str	w0, [sp, #180]
   210f0:	ldr	w0, [sp, #100]
   210f4:	ldr	w1, [sp, #180]
   210f8:	cmp	w1, w0
   210fc:	b.ls	21184 <lzma_mode_is_supported@@XZ_5.0+0x64ec>  // b.plast
   21100:	ldr	w0, [sp, #180]
   21104:	str	w0, [sp, #96]
   21108:	ldr	w0, [sp, #160]
   2110c:	lsl	x0, x0, #1
   21110:	ldr	x1, [sp, #248]
   21114:	add	x0, x1, x0
   21118:	ldrh	w2, [x0]
   2111c:	ldr	w0, [sp, #160]
   21120:	lsl	x0, x0, #1
   21124:	ldr	x1, [sp, #248]
   21128:	add	x0, x1, x0
   2112c:	ldrh	w0, [x0]
   21130:	mov	w1, w0
   21134:	mov	w0, #0x800                 	// #2048
   21138:	sub	w0, w0, w1
   2113c:	lsr	w0, w0, #5
   21140:	and	w1, w0, #0xffff
   21144:	ldr	w0, [sp, #160]
   21148:	lsl	x0, x0, #1
   2114c:	ldr	x3, [sp, #248]
   21150:	add	x0, x3, x0
   21154:	add	w1, w2, w1
   21158:	and	w1, w1, #0xffff
   2115c:	strh	w1, [x0]
   21160:	ldr	w0, [sp, #244]
   21164:	lsl	w0, w0, #1
   21168:	str	w0, [sp, #244]
   2116c:	ldr	w0, [sp, #164]
   21170:	mvn	w0, w0
   21174:	ldr	w1, [sp, #236]
   21178:	and	w0, w1, w0
   2117c:	str	w0, [sp, #236]
   21180:	b	21210 <lzma_mode_is_supported@@XZ_5.0+0x6578>
   21184:	ldr	w1, [sp, #96]
   21188:	ldr	w0, [sp, #180]
   2118c:	sub	w0, w1, w0
   21190:	str	w0, [sp, #96]
   21194:	ldr	w1, [sp, #100]
   21198:	ldr	w0, [sp, #180]
   2119c:	sub	w0, w1, w0
   211a0:	str	w0, [sp, #100]
   211a4:	ldr	w0, [sp, #160]
   211a8:	lsl	x0, x0, #1
   211ac:	ldr	x1, [sp, #248]
   211b0:	add	x0, x1, x0
   211b4:	ldrh	w2, [x0]
   211b8:	ldr	w0, [sp, #160]
   211bc:	lsl	x0, x0, #1
   211c0:	ldr	x1, [sp, #248]
   211c4:	add	x0, x1, x0
   211c8:	ldrh	w0, [x0]
   211cc:	lsr	w0, w0, #5
   211d0:	and	w1, w0, #0xffff
   211d4:	ldr	w0, [sp, #160]
   211d8:	lsl	x0, x0, #1
   211dc:	ldr	x3, [sp, #248]
   211e0:	add	x0, x3, x0
   211e4:	sub	w1, w2, w1
   211e8:	and	w1, w1, #0xffff
   211ec:	strh	w1, [x0]
   211f0:	ldr	w0, [sp, #244]
   211f4:	lsl	w0, w0, #1
   211f8:	add	w0, w0, #0x1
   211fc:	str	w0, [sp, #244]
   21200:	ldr	w1, [sp, #236]
   21204:	ldr	w0, [sp, #164]
   21208:	and	w0, w1, w0
   2120c:	str	w0, [sp, #236]
   21210:	ldr	w0, [sp, #92]
   21214:	lsl	w0, w0, #1
   21218:	str	w0, [sp, #92]
   2121c:	ldr	w0, [sp, #92]
   21220:	ldr	w1, [sp, #236]
   21224:	and	w0, w1, w0
   21228:	str	w0, [sp, #164]
   2122c:	ldr	w1, [sp, #236]
   21230:	ldr	w0, [sp, #164]
   21234:	add	w0, w1, w0
   21238:	ldr	w1, [sp, #244]
   2123c:	add	w0, w1, w0
   21240:	str	w0, [sp, #160]
   21244:	ldr	w1, [sp, #96]
   21248:	mov	w0, #0xffffff              	// #16777215
   2124c:	cmp	w1, w0
   21250:	b.hi	212bc <lzma_mode_is_supported@@XZ_5.0+0x6624>  // b.pmore
   21254:	ldr	x1, [sp, #280]
   21258:	ldr	x0, [sp, #40]
   2125c:	cmp	x1, x0
   21260:	cset	w0, eq  // eq = none
   21264:	and	w0, w0, #0xff
   21268:	and	x0, x0, #0xff
   2126c:	cmp	x0, #0x0
   21270:	b.eq	21288 <lzma_mode_is_supported@@XZ_5.0+0x65f0>  // b.none
   21274:	ldr	x0, [sp, #216]
   21278:	add	x0, x0, #0x4, lsl #12
   2127c:	mov	w1, #0x11                  	// #17
   21280:	str	w1, [x0, #11936]
   21284:	b	278fc <lzma_mode_is_supported@@XZ_5.0+0xcc64>
   21288:	ldr	w0, [sp, #96]
   2128c:	lsl	w0, w0, #8
   21290:	str	w0, [sp, #96]
   21294:	ldr	w0, [sp, #100]
   21298:	lsl	w1, w0, #8
   2129c:	ldr	x0, [sp, #280]
   212a0:	add	x2, x0, #0x1
   212a4:	str	x2, [sp, #280]
   212a8:	ldr	x2, [sp, #56]
   212ac:	add	x0, x2, x0
   212b0:	ldrb	w0, [x0]
   212b4:	orr	w0, w1, w0
   212b8:	str	w0, [sp, #100]
   212bc:	ldr	w0, [sp, #96]
   212c0:	lsr	w0, w0, #11
   212c4:	ldr	w1, [sp, #160]
   212c8:	lsl	x1, x1, #1
   212cc:	ldr	x2, [sp, #248]
   212d0:	add	x1, x2, x1
   212d4:	ldrh	w1, [x1]
   212d8:	mul	w0, w0, w1
   212dc:	str	w0, [sp, #180]
   212e0:	ldr	w0, [sp, #100]
   212e4:	ldr	w1, [sp, #180]
   212e8:	cmp	w1, w0
   212ec:	b.ls	21374 <lzma_mode_is_supported@@XZ_5.0+0x66dc>  // b.plast
   212f0:	ldr	w0, [sp, #180]
   212f4:	str	w0, [sp, #96]
   212f8:	ldr	w0, [sp, #160]
   212fc:	lsl	x0, x0, #1
   21300:	ldr	x1, [sp, #248]
   21304:	add	x0, x1, x0
   21308:	ldrh	w2, [x0]
   2130c:	ldr	w0, [sp, #160]
   21310:	lsl	x0, x0, #1
   21314:	ldr	x1, [sp, #248]
   21318:	add	x0, x1, x0
   2131c:	ldrh	w0, [x0]
   21320:	mov	w1, w0
   21324:	mov	w0, #0x800                 	// #2048
   21328:	sub	w0, w0, w1
   2132c:	lsr	w0, w0, #5
   21330:	and	w1, w0, #0xffff
   21334:	ldr	w0, [sp, #160]
   21338:	lsl	x0, x0, #1
   2133c:	ldr	x3, [sp, #248]
   21340:	add	x0, x3, x0
   21344:	add	w1, w2, w1
   21348:	and	w1, w1, #0xffff
   2134c:	strh	w1, [x0]
   21350:	ldr	w0, [sp, #244]
   21354:	lsl	w0, w0, #1
   21358:	str	w0, [sp, #244]
   2135c:	ldr	w0, [sp, #164]
   21360:	mvn	w0, w0
   21364:	ldr	w1, [sp, #236]
   21368:	and	w0, w1, w0
   2136c:	str	w0, [sp, #236]
   21370:	b	21400 <lzma_mode_is_supported@@XZ_5.0+0x6768>
   21374:	ldr	w1, [sp, #96]
   21378:	ldr	w0, [sp, #180]
   2137c:	sub	w0, w1, w0
   21380:	str	w0, [sp, #96]
   21384:	ldr	w1, [sp, #100]
   21388:	ldr	w0, [sp, #180]
   2138c:	sub	w0, w1, w0
   21390:	str	w0, [sp, #100]
   21394:	ldr	w0, [sp, #160]
   21398:	lsl	x0, x0, #1
   2139c:	ldr	x1, [sp, #248]
   213a0:	add	x0, x1, x0
   213a4:	ldrh	w2, [x0]
   213a8:	ldr	w0, [sp, #160]
   213ac:	lsl	x0, x0, #1
   213b0:	ldr	x1, [sp, #248]
   213b4:	add	x0, x1, x0
   213b8:	ldrh	w0, [x0]
   213bc:	lsr	w0, w0, #5
   213c0:	and	w1, w0, #0xffff
   213c4:	ldr	w0, [sp, #160]
   213c8:	lsl	x0, x0, #1
   213cc:	ldr	x3, [sp, #248]
   213d0:	add	x0, x3, x0
   213d4:	sub	w1, w2, w1
   213d8:	and	w1, w1, #0xffff
   213dc:	strh	w1, [x0]
   213e0:	ldr	w0, [sp, #244]
   213e4:	lsl	w0, w0, #1
   213e8:	add	w0, w0, #0x1
   213ec:	str	w0, [sp, #244]
   213f0:	ldr	w1, [sp, #236]
   213f4:	ldr	w0, [sp, #164]
   213f8:	and	w0, w1, w0
   213fc:	str	w0, [sp, #236]
   21400:	adrp	x0, 32000 <lzma_mode_is_supported@@XZ_5.0+0x17368>
   21404:	add	x0, x0, #0x300
   21408:	ldr	w1, [sp, #276]
   2140c:	ldr	w0, [x0, x1, lsl #2]
   21410:	str	w0, [sp, #276]
   21414:	ldr	w0, [sp, #244]
   21418:	and	w1, w0, #0xff
   2141c:	add	x0, sp, #0x70
   21420:	bl	1f12c <lzma_mode_is_supported@@XZ_5.0+0x4494>
   21424:	and	w0, w0, #0xff
   21428:	and	x0, x0, #0xff
   2142c:	cmp	x0, #0x0
   21430:	b.eq	27864 <lzma_mode_is_supported@@XZ_5.0+0xcbcc>  // b.none
   21434:	ldr	x0, [sp, #216]
   21438:	add	x0, x0, #0x4, lsl #12
   2143c:	mov	w1, #0x12                  	// #18
   21440:	str	w1, [x0, #11936]
   21444:	b	278fc <lzma_mode_is_supported@@XZ_5.0+0xcc64>
   21448:	ldr	w1, [sp, #96]
   2144c:	ldr	w0, [sp, #180]
   21450:	sub	w0, w1, w0
   21454:	str	w0, [sp, #96]
   21458:	ldr	w1, [sp, #100]
   2145c:	ldr	w0, [sp, #180]
   21460:	sub	w0, w1, w0
   21464:	str	w0, [sp, #100]
   21468:	ldr	x0, [sp, #216]
   2146c:	ldr	w1, [sp, #232]
   21470:	ldr	w2, [sp, #276]
   21474:	lsl	x2, x2, #4
   21478:	add	x1, x2, x1
   2147c:	add	x1, x1, #0x3, lsl #12
   21480:	ldrh	w1, [x0, x1, lsl #1]
   21484:	ldr	x0, [sp, #216]
   21488:	ldr	w2, [sp, #232]
   2148c:	ldr	w3, [sp, #276]
   21490:	lsl	x3, x3, #4
   21494:	add	x2, x3, x2
   21498:	add	x2, x2, #0x3, lsl #12
   2149c:	ldrh	w0, [x0, x2, lsl #1]
   214a0:	lsr	w0, w0, #5
   214a4:	and	w0, w0, #0xffff
   214a8:	sub	w0, w1, w0
   214ac:	and	w3, w0, #0xffff
   214b0:	ldr	x0, [sp, #216]
   214b4:	ldr	w1, [sp, #232]
   214b8:	ldr	w2, [sp, #276]
   214bc:	lsl	x2, x2, #4
   214c0:	add	x1, x2, x1
   214c4:	add	x1, x1, #0x3, lsl #12
   214c8:	mov	w2, w3
   214cc:	strh	w2, [x0, x1, lsl #1]
   214d0:	ldr	w1, [sp, #96]
   214d4:	mov	w0, #0xffffff              	// #16777215
   214d8:	cmp	w1, w0
   214dc:	b.hi	21548 <lzma_mode_is_supported@@XZ_5.0+0x68b0>  // b.pmore
   214e0:	ldr	x1, [sp, #280]
   214e4:	ldr	x0, [sp, #40]
   214e8:	cmp	x1, x0
   214ec:	cset	w0, eq  // eq = none
   214f0:	and	w0, w0, #0xff
   214f4:	and	x0, x0, #0xff
   214f8:	cmp	x0, #0x0
   214fc:	b.eq	21514 <lzma_mode_is_supported@@XZ_5.0+0x687c>  // b.none
   21500:	ldr	x0, [sp, #216]
   21504:	add	x0, x0, #0x4, lsl #12
   21508:	mov	w1, #0x13                  	// #19
   2150c:	str	w1, [x0, #11936]
   21510:	b	278fc <lzma_mode_is_supported@@XZ_5.0+0xcc64>
   21514:	ldr	w0, [sp, #96]
   21518:	lsl	w0, w0, #8
   2151c:	str	w0, [sp, #96]
   21520:	ldr	w0, [sp, #100]
   21524:	lsl	w1, w0, #8
   21528:	ldr	x0, [sp, #280]
   2152c:	add	x2, x0, #0x1
   21530:	str	x2, [sp, #280]
   21534:	ldr	x2, [sp, #56]
   21538:	add	x0, x2, x0
   2153c:	ldrb	w0, [x0]
   21540:	orr	w0, w1, w0
   21544:	str	w0, [sp, #100]
   21548:	ldr	w0, [sp, #96]
   2154c:	lsr	w0, w0, #11
   21550:	ldr	x1, [sp, #216]
   21554:	ldr	w3, [sp, #276]
   21558:	mov	x2, #0x30c0                	// #12480
   2155c:	add	x2, x3, x2
   21560:	ldrh	w1, [x1, x2, lsl #1]
   21564:	mul	w0, w0, w1
   21568:	str	w0, [sp, #180]
   2156c:	ldr	w0, [sp, #100]
   21570:	ldr	w1, [sp, #180]
   21574:	cmp	w1, w0
   21578:	b.ls	2516c <lzma_mode_is_supported@@XZ_5.0+0xa4d4>  // b.plast
   2157c:	ldr	w0, [sp, #180]
   21580:	str	w0, [sp, #96]
   21584:	ldr	x0, [sp, #216]
   21588:	ldr	w2, [sp, #276]
   2158c:	mov	x1, #0x30c0                	// #12480
   21590:	add	x1, x2, x1
   21594:	ldrh	w1, [x0, x1, lsl #1]
   21598:	ldr	x0, [sp, #216]
   2159c:	ldr	w3, [sp, #276]
   215a0:	mov	x2, #0x30c0                	// #12480
   215a4:	add	x2, x3, x2
   215a8:	ldrh	w0, [x0, x2, lsl #1]
   215ac:	mov	w2, w0
   215b0:	mov	w0, #0x800                 	// #2048
   215b4:	sub	w0, w0, w2
   215b8:	lsr	w0, w0, #5
   215bc:	and	w0, w0, #0xffff
   215c0:	add	w0, w1, w0
   215c4:	and	w3, w0, #0xffff
   215c8:	ldr	x0, [sp, #216]
   215cc:	ldr	w2, [sp, #276]
   215d0:	mov	x1, #0x30c0                	// #12480
   215d4:	add	x1, x2, x1
   215d8:	mov	w2, w3
   215dc:	strh	w2, [x0, x1, lsl #1]
   215e0:	ldr	w0, [sp, #276]
   215e4:	cmp	w0, #0x6
   215e8:	b.hi	215f4 <lzma_mode_is_supported@@XZ_5.0+0x695c>  // b.pmore
   215ec:	mov	w0, #0x7                   	// #7
   215f0:	b	215f8 <lzma_mode_is_supported@@XZ_5.0+0x6960>
   215f4:	mov	w0, #0xa                   	// #10
   215f8:	str	w0, [sp, #276]
   215fc:	ldr	w0, [sp, #264]
   21600:	str	w0, [sp, #260]
   21604:	ldr	w0, [sp, #268]
   21608:	str	w0, [sp, #264]
   2160c:	ldr	w0, [sp, #272]
   21610:	str	w0, [sp, #268]
   21614:	mov	w0, #0x1                   	// #1
   21618:	str	w0, [sp, #244]
   2161c:	ldr	w1, [sp, #96]
   21620:	mov	w0, #0xffffff              	// #16777215
   21624:	cmp	w1, w0
   21628:	b.hi	21694 <lzma_mode_is_supported@@XZ_5.0+0x69fc>  // b.pmore
   2162c:	ldr	x1, [sp, #280]
   21630:	ldr	x0, [sp, #40]
   21634:	cmp	x1, x0
   21638:	cset	w0, eq  // eq = none
   2163c:	and	w0, w0, #0xff
   21640:	and	x0, x0, #0xff
   21644:	cmp	x0, #0x0
   21648:	b.eq	21660 <lzma_mode_is_supported@@XZ_5.0+0x69c8>  // b.none
   2164c:	ldr	x0, [sp, #216]
   21650:	add	x0, x0, #0x4, lsl #12
   21654:	mov	w1, #0x14                  	// #20
   21658:	str	w1, [x0, #11936]
   2165c:	b	278fc <lzma_mode_is_supported@@XZ_5.0+0xcc64>
   21660:	ldr	w0, [sp, #96]
   21664:	lsl	w0, w0, #8
   21668:	str	w0, [sp, #96]
   2166c:	ldr	w0, [sp, #100]
   21670:	lsl	w1, w0, #8
   21674:	ldr	x0, [sp, #280]
   21678:	add	x2, x0, #0x1
   2167c:	str	x2, [sp, #280]
   21680:	ldr	x2, [sp, #56]
   21684:	add	x0, x2, x0
   21688:	ldrb	w0, [x0]
   2168c:	orr	w0, w1, w0
   21690:	str	w0, [sp, #100]
   21694:	ldr	w0, [sp, #96]
   21698:	lsr	w0, w0, #11
   2169c:	ldr	x1, [sp, #216]
   216a0:	add	x1, x1, #0x6, lsl #12
   216a4:	ldrh	w1, [x1, #1636]
   216a8:	mul	w0, w0, w1
   216ac:	str	w0, [sp, #180]
   216b0:	ldr	w0, [sp, #100]
   216b4:	ldr	w1, [sp, #180]
   216b8:	cmp	w1, w0
   216bc:	b.ls	21d9c <lzma_mode_is_supported@@XZ_5.0+0x7104>  // b.plast
   216c0:	ldr	w0, [sp, #180]
   216c4:	str	w0, [sp, #96]
   216c8:	ldr	x0, [sp, #216]
   216cc:	add	x0, x0, #0x6, lsl #12
   216d0:	ldrh	w1, [x0, #1636]
   216d4:	ldr	x0, [sp, #216]
   216d8:	add	x0, x0, #0x6, lsl #12
   216dc:	ldrh	w0, [x0, #1636]
   216e0:	mov	w2, w0
   216e4:	mov	w0, #0x800                 	// #2048
   216e8:	sub	w0, w0, w2
   216ec:	lsr	w0, w0, #5
   216f0:	and	w0, w0, #0xffff
   216f4:	add	w0, w1, w0
   216f8:	and	w1, w0, #0xffff
   216fc:	ldr	x0, [sp, #216]
   21700:	add	x0, x0, #0x6, lsl #12
   21704:	strh	w1, [x0, #1636]
   21708:	ldr	w1, [sp, #96]
   2170c:	mov	w0, #0xffffff              	// #16777215
   21710:	cmp	w1, w0
   21714:	b.hi	21780 <lzma_mode_is_supported@@XZ_5.0+0x6ae8>  // b.pmore
   21718:	ldr	x1, [sp, #280]
   2171c:	ldr	x0, [sp, #40]
   21720:	cmp	x1, x0
   21724:	cset	w0, eq  // eq = none
   21728:	and	w0, w0, #0xff
   2172c:	and	x0, x0, #0xff
   21730:	cmp	x0, #0x0
   21734:	b.eq	2174c <lzma_mode_is_supported@@XZ_5.0+0x6ab4>  // b.none
   21738:	ldr	x0, [sp, #216]
   2173c:	add	x0, x0, #0x4, lsl #12
   21740:	mov	w1, #0x15                  	// #21
   21744:	str	w1, [x0, #11936]
   21748:	b	278fc <lzma_mode_is_supported@@XZ_5.0+0xcc64>
   2174c:	ldr	w0, [sp, #96]
   21750:	lsl	w0, w0, #8
   21754:	str	w0, [sp, #96]
   21758:	ldr	w0, [sp, #100]
   2175c:	lsl	w1, w0, #8
   21760:	ldr	x0, [sp, #280]
   21764:	add	x2, x0, #0x1
   21768:	str	x2, [sp, #280]
   2176c:	ldr	x2, [sp, #56]
   21770:	add	x0, x2, x0
   21774:	ldrb	w0, [x0]
   21778:	orr	w0, w1, w0
   2177c:	str	w0, [sp, #100]
   21780:	ldr	w0, [sp, #96]
   21784:	lsr	w0, w0, #11
   21788:	ldr	x2, [sp, #216]
   2178c:	ldr	w1, [sp, #244]
   21790:	ldr	w3, [sp, #232]
   21794:	lsl	x3, x3, #3
   21798:	add	x3, x3, x1
   2179c:	mov	x1, #0x3330                	// #13104
   217a0:	add	x1, x3, x1
   217a4:	lsl	x1, x1, #1
   217a8:	add	x1, x2, x1
   217ac:	ldrh	w1, [x1, #8]
   217b0:	mul	w0, w0, w1
   217b4:	str	w0, [sp, #180]
   217b8:	ldr	w0, [sp, #100]
   217bc:	ldr	w1, [sp, #180]
   217c0:	cmp	w1, w0
   217c4:	b.ls	21878 <lzma_mode_is_supported@@XZ_5.0+0x6be0>  // b.plast
   217c8:	ldr	w0, [sp, #180]
   217cc:	str	w0, [sp, #96]
   217d0:	ldr	x1, [sp, #216]
   217d4:	ldr	w0, [sp, #244]
   217d8:	ldr	w2, [sp, #232]
   217dc:	lsl	x2, x2, #3
   217e0:	add	x2, x2, x0
   217e4:	mov	x0, #0x3330                	// #13104
   217e8:	add	x0, x2, x0
   217ec:	lsl	x0, x0, #1
   217f0:	add	x0, x1, x0
   217f4:	ldrh	w1, [x0, #8]
   217f8:	ldr	x2, [sp, #216]
   217fc:	ldr	w0, [sp, #244]
   21800:	ldr	w3, [sp, #232]
   21804:	lsl	x3, x3, #3
   21808:	add	x3, x3, x0
   2180c:	mov	x0, #0x3330                	// #13104
   21810:	add	x0, x3, x0
   21814:	lsl	x0, x0, #1
   21818:	add	x0, x2, x0
   2181c:	ldrh	w0, [x0, #8]
   21820:	mov	w2, w0
   21824:	mov	w0, #0x800                 	// #2048
   21828:	sub	w0, w0, w2
   2182c:	lsr	w0, w0, #5
   21830:	and	w0, w0, #0xffff
   21834:	add	w0, w1, w0
   21838:	and	w3, w0, #0xffff
   2183c:	ldr	x1, [sp, #216]
   21840:	ldr	w0, [sp, #244]
   21844:	ldr	w2, [sp, #232]
   21848:	lsl	x2, x2, #3
   2184c:	add	x2, x2, x0
   21850:	mov	x0, #0x3330                	// #13104
   21854:	add	x0, x2, x0
   21858:	lsl	x0, x0, #1
   2185c:	add	x0, x1, x0
   21860:	mov	w1, w3
   21864:	strh	w1, [x0, #8]
   21868:	ldr	w0, [sp, #244]
   2186c:	lsl	w0, w0, #1
   21870:	str	w0, [sp, #244]
   21874:	b	21934 <lzma_mode_is_supported@@XZ_5.0+0x6c9c>
   21878:	ldr	w1, [sp, #96]
   2187c:	ldr	w0, [sp, #180]
   21880:	sub	w0, w1, w0
   21884:	str	w0, [sp, #96]
   21888:	ldr	w1, [sp, #100]
   2188c:	ldr	w0, [sp, #180]
   21890:	sub	w0, w1, w0
   21894:	str	w0, [sp, #100]
   21898:	ldr	x1, [sp, #216]
   2189c:	ldr	w0, [sp, #244]
   218a0:	ldr	w2, [sp, #232]
   218a4:	lsl	x2, x2, #3
   218a8:	add	x2, x2, x0
   218ac:	mov	x0, #0x3330                	// #13104
   218b0:	add	x0, x2, x0
   218b4:	lsl	x0, x0, #1
   218b8:	add	x0, x1, x0
   218bc:	ldrh	w1, [x0, #8]
   218c0:	ldr	x2, [sp, #216]
   218c4:	ldr	w0, [sp, #244]
   218c8:	ldr	w3, [sp, #232]
   218cc:	lsl	x3, x3, #3
   218d0:	add	x3, x3, x0
   218d4:	mov	x0, #0x3330                	// #13104
   218d8:	add	x0, x3, x0
   218dc:	lsl	x0, x0, #1
   218e0:	add	x0, x2, x0
   218e4:	ldrh	w0, [x0, #8]
   218e8:	lsr	w0, w0, #5
   218ec:	and	w0, w0, #0xffff
   218f0:	sub	w0, w1, w0
   218f4:	and	w3, w0, #0xffff
   218f8:	ldr	x1, [sp, #216]
   218fc:	ldr	w0, [sp, #244]
   21900:	ldr	w2, [sp, #232]
   21904:	lsl	x2, x2, #3
   21908:	add	x2, x2, x0
   2190c:	mov	x0, #0x3330                	// #13104
   21910:	add	x0, x2, x0
   21914:	lsl	x0, x0, #1
   21918:	add	x0, x1, x0
   2191c:	mov	w1, w3
   21920:	strh	w1, [x0, #8]
   21924:	ldr	w0, [sp, #244]
   21928:	lsl	w0, w0, #1
   2192c:	add	w0, w0, #0x1
   21930:	str	w0, [sp, #244]
   21934:	ldr	w1, [sp, #96]
   21938:	mov	w0, #0xffffff              	// #16777215
   2193c:	cmp	w1, w0
   21940:	b.hi	219ac <lzma_mode_is_supported@@XZ_5.0+0x6d14>  // b.pmore
   21944:	ldr	x1, [sp, #280]
   21948:	ldr	x0, [sp, #40]
   2194c:	cmp	x1, x0
   21950:	cset	w0, eq  // eq = none
   21954:	and	w0, w0, #0xff
   21958:	and	x0, x0, #0xff
   2195c:	cmp	x0, #0x0
   21960:	b.eq	21978 <lzma_mode_is_supported@@XZ_5.0+0x6ce0>  // b.none
   21964:	ldr	x0, [sp, #216]
   21968:	add	x0, x0, #0x4, lsl #12
   2196c:	mov	w1, #0x16                  	// #22
   21970:	str	w1, [x0, #11936]
   21974:	b	278fc <lzma_mode_is_supported@@XZ_5.0+0xcc64>
   21978:	ldr	w0, [sp, #96]
   2197c:	lsl	w0, w0, #8
   21980:	str	w0, [sp, #96]
   21984:	ldr	w0, [sp, #100]
   21988:	lsl	w1, w0, #8
   2198c:	ldr	x0, [sp, #280]
   21990:	add	x2, x0, #0x1
   21994:	str	x2, [sp, #280]
   21998:	ldr	x2, [sp, #56]
   2199c:	add	x0, x2, x0
   219a0:	ldrb	w0, [x0]
   219a4:	orr	w0, w1, w0
   219a8:	str	w0, [sp, #100]
   219ac:	ldr	w0, [sp, #96]
   219b0:	lsr	w0, w0, #11
   219b4:	ldr	x2, [sp, #216]
   219b8:	ldr	w1, [sp, #244]
   219bc:	ldr	w3, [sp, #232]
   219c0:	lsl	x3, x3, #3
   219c4:	add	x3, x3, x1
   219c8:	mov	x1, #0x3330                	// #13104
   219cc:	add	x1, x3, x1
   219d0:	lsl	x1, x1, #1
   219d4:	add	x1, x2, x1
   219d8:	ldrh	w1, [x1, #8]
   219dc:	mul	w0, w0, w1
   219e0:	str	w0, [sp, #180]
   219e4:	ldr	w0, [sp, #100]
   219e8:	ldr	w1, [sp, #180]
   219ec:	cmp	w1, w0
   219f0:	b.ls	21aa4 <lzma_mode_is_supported@@XZ_5.0+0x6e0c>  // b.plast
   219f4:	ldr	w0, [sp, #180]
   219f8:	str	w0, [sp, #96]
   219fc:	ldr	x1, [sp, #216]
   21a00:	ldr	w0, [sp, #244]
   21a04:	ldr	w2, [sp, #232]
   21a08:	lsl	x2, x2, #3
   21a0c:	add	x2, x2, x0
   21a10:	mov	x0, #0x3330                	// #13104
   21a14:	add	x0, x2, x0
   21a18:	lsl	x0, x0, #1
   21a1c:	add	x0, x1, x0
   21a20:	ldrh	w1, [x0, #8]
   21a24:	ldr	x2, [sp, #216]
   21a28:	ldr	w0, [sp, #244]
   21a2c:	ldr	w3, [sp, #232]
   21a30:	lsl	x3, x3, #3
   21a34:	add	x3, x3, x0
   21a38:	mov	x0, #0x3330                	// #13104
   21a3c:	add	x0, x3, x0
   21a40:	lsl	x0, x0, #1
   21a44:	add	x0, x2, x0
   21a48:	ldrh	w0, [x0, #8]
   21a4c:	mov	w2, w0
   21a50:	mov	w0, #0x800                 	// #2048
   21a54:	sub	w0, w0, w2
   21a58:	lsr	w0, w0, #5
   21a5c:	and	w0, w0, #0xffff
   21a60:	add	w0, w1, w0
   21a64:	and	w3, w0, #0xffff
   21a68:	ldr	x1, [sp, #216]
   21a6c:	ldr	w0, [sp, #244]
   21a70:	ldr	w2, [sp, #232]
   21a74:	lsl	x2, x2, #3
   21a78:	add	x2, x2, x0
   21a7c:	mov	x0, #0x3330                	// #13104
   21a80:	add	x0, x2, x0
   21a84:	lsl	x0, x0, #1
   21a88:	add	x0, x1, x0
   21a8c:	mov	w1, w3
   21a90:	strh	w1, [x0, #8]
   21a94:	ldr	w0, [sp, #244]
   21a98:	lsl	w0, w0, #1
   21a9c:	str	w0, [sp, #244]
   21aa0:	b	21b60 <lzma_mode_is_supported@@XZ_5.0+0x6ec8>
   21aa4:	ldr	w1, [sp, #96]
   21aa8:	ldr	w0, [sp, #180]
   21aac:	sub	w0, w1, w0
   21ab0:	str	w0, [sp, #96]
   21ab4:	ldr	w1, [sp, #100]
   21ab8:	ldr	w0, [sp, #180]
   21abc:	sub	w0, w1, w0
   21ac0:	str	w0, [sp, #100]
   21ac4:	ldr	x1, [sp, #216]
   21ac8:	ldr	w0, [sp, #244]
   21acc:	ldr	w2, [sp, #232]
   21ad0:	lsl	x2, x2, #3
   21ad4:	add	x2, x2, x0
   21ad8:	mov	x0, #0x3330                	// #13104
   21adc:	add	x0, x2, x0
   21ae0:	lsl	x0, x0, #1
   21ae4:	add	x0, x1, x0
   21ae8:	ldrh	w1, [x0, #8]
   21aec:	ldr	x2, [sp, #216]
   21af0:	ldr	w0, [sp, #244]
   21af4:	ldr	w3, [sp, #232]
   21af8:	lsl	x3, x3, #3
   21afc:	add	x3, x3, x0
   21b00:	mov	x0, #0x3330                	// #13104
   21b04:	add	x0, x3, x0
   21b08:	lsl	x0, x0, #1
   21b0c:	add	x0, x2, x0
   21b10:	ldrh	w0, [x0, #8]
   21b14:	lsr	w0, w0, #5
   21b18:	and	w0, w0, #0xffff
   21b1c:	sub	w0, w1, w0
   21b20:	and	w3, w0, #0xffff
   21b24:	ldr	x1, [sp, #216]
   21b28:	ldr	w0, [sp, #244]
   21b2c:	ldr	w2, [sp, #232]
   21b30:	lsl	x2, x2, #3
   21b34:	add	x2, x2, x0
   21b38:	mov	x0, #0x3330                	// #13104
   21b3c:	add	x0, x2, x0
   21b40:	lsl	x0, x0, #1
   21b44:	add	x0, x1, x0
   21b48:	mov	w1, w3
   21b4c:	strh	w1, [x0, #8]
   21b50:	ldr	w0, [sp, #244]
   21b54:	lsl	w0, w0, #1
   21b58:	add	w0, w0, #0x1
   21b5c:	str	w0, [sp, #244]
   21b60:	ldr	w1, [sp, #96]
   21b64:	mov	w0, #0xffffff              	// #16777215
   21b68:	cmp	w1, w0
   21b6c:	b.hi	21bd8 <lzma_mode_is_supported@@XZ_5.0+0x6f40>  // b.pmore
   21b70:	ldr	x1, [sp, #280]
   21b74:	ldr	x0, [sp, #40]
   21b78:	cmp	x1, x0
   21b7c:	cset	w0, eq  // eq = none
   21b80:	and	w0, w0, #0xff
   21b84:	and	x0, x0, #0xff
   21b88:	cmp	x0, #0x0
   21b8c:	b.eq	21ba4 <lzma_mode_is_supported@@XZ_5.0+0x6f0c>  // b.none
   21b90:	ldr	x0, [sp, #216]
   21b94:	add	x0, x0, #0x4, lsl #12
   21b98:	mov	w1, #0x17                  	// #23
   21b9c:	str	w1, [x0, #11936]
   21ba0:	b	278fc <lzma_mode_is_supported@@XZ_5.0+0xcc64>
   21ba4:	ldr	w0, [sp, #96]
   21ba8:	lsl	w0, w0, #8
   21bac:	str	w0, [sp, #96]
   21bb0:	ldr	w0, [sp, #100]
   21bb4:	lsl	w1, w0, #8
   21bb8:	ldr	x0, [sp, #280]
   21bbc:	add	x2, x0, #0x1
   21bc0:	str	x2, [sp, #280]
   21bc4:	ldr	x2, [sp, #56]
   21bc8:	add	x0, x2, x0
   21bcc:	ldrb	w0, [x0]
   21bd0:	orr	w0, w1, w0
   21bd4:	str	w0, [sp, #100]
   21bd8:	ldr	w0, [sp, #96]
   21bdc:	lsr	w0, w0, #11
   21be0:	ldr	x2, [sp, #216]
   21be4:	ldr	w1, [sp, #244]
   21be8:	ldr	w3, [sp, #232]
   21bec:	lsl	x3, x3, #3
   21bf0:	add	x3, x3, x1
   21bf4:	mov	x1, #0x3330                	// #13104
   21bf8:	add	x1, x3, x1
   21bfc:	lsl	x1, x1, #1
   21c00:	add	x1, x2, x1
   21c04:	ldrh	w1, [x1, #8]
   21c08:	mul	w0, w0, w1
   21c0c:	str	w0, [sp, #180]
   21c10:	ldr	w0, [sp, #100]
   21c14:	ldr	w1, [sp, #180]
   21c18:	cmp	w1, w0
   21c1c:	b.ls	21cd0 <lzma_mode_is_supported@@XZ_5.0+0x7038>  // b.plast
   21c20:	ldr	w0, [sp, #180]
   21c24:	str	w0, [sp, #96]
   21c28:	ldr	x1, [sp, #216]
   21c2c:	ldr	w0, [sp, #244]
   21c30:	ldr	w2, [sp, #232]
   21c34:	lsl	x2, x2, #3
   21c38:	add	x2, x2, x0
   21c3c:	mov	x0, #0x3330                	// #13104
   21c40:	add	x0, x2, x0
   21c44:	lsl	x0, x0, #1
   21c48:	add	x0, x1, x0
   21c4c:	ldrh	w1, [x0, #8]
   21c50:	ldr	x2, [sp, #216]
   21c54:	ldr	w0, [sp, #244]
   21c58:	ldr	w3, [sp, #232]
   21c5c:	lsl	x3, x3, #3
   21c60:	add	x3, x3, x0
   21c64:	mov	x0, #0x3330                	// #13104
   21c68:	add	x0, x3, x0
   21c6c:	lsl	x0, x0, #1
   21c70:	add	x0, x2, x0
   21c74:	ldrh	w0, [x0, #8]
   21c78:	mov	w2, w0
   21c7c:	mov	w0, #0x800                 	// #2048
   21c80:	sub	w0, w0, w2
   21c84:	lsr	w0, w0, #5
   21c88:	and	w0, w0, #0xffff
   21c8c:	add	w0, w1, w0
   21c90:	and	w3, w0, #0xffff
   21c94:	ldr	x1, [sp, #216]
   21c98:	ldr	w0, [sp, #244]
   21c9c:	ldr	w2, [sp, #232]
   21ca0:	lsl	x2, x2, #3
   21ca4:	add	x2, x2, x0
   21ca8:	mov	x0, #0x3330                	// #13104
   21cac:	add	x0, x2, x0
   21cb0:	lsl	x0, x0, #1
   21cb4:	add	x0, x1, x0
   21cb8:	mov	w1, w3
   21cbc:	strh	w1, [x0, #8]
   21cc0:	ldr	w0, [sp, #244]
   21cc4:	lsl	w0, w0, #1
   21cc8:	str	w0, [sp, #244]
   21ccc:	b	21d8c <lzma_mode_is_supported@@XZ_5.0+0x70f4>
   21cd0:	ldr	w1, [sp, #96]
   21cd4:	ldr	w0, [sp, #180]
   21cd8:	sub	w0, w1, w0
   21cdc:	str	w0, [sp, #96]
   21ce0:	ldr	w1, [sp, #100]
   21ce4:	ldr	w0, [sp, #180]
   21ce8:	sub	w0, w1, w0
   21cec:	str	w0, [sp, #100]
   21cf0:	ldr	x1, [sp, #216]
   21cf4:	ldr	w0, [sp, #244]
   21cf8:	ldr	w2, [sp, #232]
   21cfc:	lsl	x2, x2, #3
   21d00:	add	x2, x2, x0
   21d04:	mov	x0, #0x3330                	// #13104
   21d08:	add	x0, x2, x0
   21d0c:	lsl	x0, x0, #1
   21d10:	add	x0, x1, x0
   21d14:	ldrh	w1, [x0, #8]
   21d18:	ldr	x2, [sp, #216]
   21d1c:	ldr	w0, [sp, #244]
   21d20:	ldr	w3, [sp, #232]
   21d24:	lsl	x3, x3, #3
   21d28:	add	x3, x3, x0
   21d2c:	mov	x0, #0x3330                	// #13104
   21d30:	add	x0, x3, x0
   21d34:	lsl	x0, x0, #1
   21d38:	add	x0, x2, x0
   21d3c:	ldrh	w0, [x0, #8]
   21d40:	lsr	w0, w0, #5
   21d44:	and	w0, w0, #0xffff
   21d48:	sub	w0, w1, w0
   21d4c:	and	w3, w0, #0xffff
   21d50:	ldr	x1, [sp, #216]
   21d54:	ldr	w0, [sp, #244]
   21d58:	ldr	w2, [sp, #232]
   21d5c:	lsl	x2, x2, #3
   21d60:	add	x2, x2, x0
   21d64:	mov	x0, #0x3330                	// #13104
   21d68:	add	x0, x2, x0
   21d6c:	lsl	x0, x0, #1
   21d70:	add	x0, x1, x0
   21d74:	mov	w1, w3
   21d78:	strh	w1, [x0, #8]
   21d7c:	ldr	w0, [sp, #244]
   21d80:	lsl	w0, w0, #1
   21d84:	add	w0, w0, #0x1
   21d88:	str	w0, [sp, #244]
   21d8c:	ldr	w0, [sp, #244]
   21d90:	sub	w0, w0, #0x6
   21d94:	str	w0, [sp, #92]
   21d98:	b	23490 <lzma_mode_is_supported@@XZ_5.0+0x87f8>
   21d9c:	ldr	w1, [sp, #96]
   21da0:	ldr	w0, [sp, #180]
   21da4:	sub	w0, w1, w0
   21da8:	str	w0, [sp, #96]
   21dac:	ldr	w1, [sp, #100]
   21db0:	ldr	w0, [sp, #180]
   21db4:	sub	w0, w1, w0
   21db8:	str	w0, [sp, #100]
   21dbc:	ldr	x0, [sp, #216]
   21dc0:	add	x0, x0, #0x6, lsl #12
   21dc4:	ldrh	w1, [x0, #1636]
   21dc8:	ldr	x0, [sp, #216]
   21dcc:	add	x0, x0, #0x6, lsl #12
   21dd0:	ldrh	w0, [x0, #1636]
   21dd4:	lsr	w0, w0, #5
   21dd8:	and	w0, w0, #0xffff
   21ddc:	sub	w0, w1, w0
   21de0:	and	w1, w0, #0xffff
   21de4:	ldr	x0, [sp, #216]
   21de8:	add	x0, x0, #0x6, lsl #12
   21dec:	strh	w1, [x0, #1636]
   21df0:	ldr	w1, [sp, #96]
   21df4:	mov	w0, #0xffffff              	// #16777215
   21df8:	cmp	w1, w0
   21dfc:	b.hi	21e68 <lzma_mode_is_supported@@XZ_5.0+0x71d0>  // b.pmore
   21e00:	ldr	x1, [sp, #280]
   21e04:	ldr	x0, [sp, #40]
   21e08:	cmp	x1, x0
   21e0c:	cset	w0, eq  // eq = none
   21e10:	and	w0, w0, #0xff
   21e14:	and	x0, x0, #0xff
   21e18:	cmp	x0, #0x0
   21e1c:	b.eq	21e34 <lzma_mode_is_supported@@XZ_5.0+0x719c>  // b.none
   21e20:	ldr	x0, [sp, #216]
   21e24:	add	x0, x0, #0x4, lsl #12
   21e28:	mov	w1, #0x18                  	// #24
   21e2c:	str	w1, [x0, #11936]
   21e30:	b	278fc <lzma_mode_is_supported@@XZ_5.0+0xcc64>
   21e34:	ldr	w0, [sp, #96]
   21e38:	lsl	w0, w0, #8
   21e3c:	str	w0, [sp, #96]
   21e40:	ldr	w0, [sp, #100]
   21e44:	lsl	w1, w0, #8
   21e48:	ldr	x0, [sp, #280]
   21e4c:	add	x2, x0, #0x1
   21e50:	str	x2, [sp, #280]
   21e54:	ldr	x2, [sp, #56]
   21e58:	add	x0, x2, x0
   21e5c:	ldrb	w0, [x0]
   21e60:	orr	w0, w1, w0
   21e64:	str	w0, [sp, #100]
   21e68:	ldr	w0, [sp, #96]
   21e6c:	lsr	w0, w0, #11
   21e70:	ldr	x1, [sp, #216]
   21e74:	add	x1, x1, #0x6, lsl #12
   21e78:	ldrh	w1, [x1, #1638]
   21e7c:	mul	w0, w0, w1
   21e80:	str	w0, [sp, #180]
   21e84:	ldr	w0, [sp, #100]
   21e88:	ldr	w1, [sp, #180]
   21e8c:	cmp	w1, w0
   21e90:	b.ls	22570 <lzma_mode_is_supported@@XZ_5.0+0x78d8>  // b.plast
   21e94:	ldr	w0, [sp, #180]
   21e98:	str	w0, [sp, #96]
   21e9c:	ldr	x0, [sp, #216]
   21ea0:	add	x0, x0, #0x6, lsl #12
   21ea4:	ldrh	w1, [x0, #1638]
   21ea8:	ldr	x0, [sp, #216]
   21eac:	add	x0, x0, #0x6, lsl #12
   21eb0:	ldrh	w0, [x0, #1638]
   21eb4:	mov	w2, w0
   21eb8:	mov	w0, #0x800                 	// #2048
   21ebc:	sub	w0, w0, w2
   21ec0:	lsr	w0, w0, #5
   21ec4:	and	w0, w0, #0xffff
   21ec8:	add	w0, w1, w0
   21ecc:	and	w1, w0, #0xffff
   21ed0:	ldr	x0, [sp, #216]
   21ed4:	add	x0, x0, #0x6, lsl #12
   21ed8:	strh	w1, [x0, #1638]
   21edc:	ldr	w1, [sp, #96]
   21ee0:	mov	w0, #0xffffff              	// #16777215
   21ee4:	cmp	w1, w0
   21ee8:	b.hi	21f54 <lzma_mode_is_supported@@XZ_5.0+0x72bc>  // b.pmore
   21eec:	ldr	x1, [sp, #280]
   21ef0:	ldr	x0, [sp, #40]
   21ef4:	cmp	x1, x0
   21ef8:	cset	w0, eq  // eq = none
   21efc:	and	w0, w0, #0xff
   21f00:	and	x0, x0, #0xff
   21f04:	cmp	x0, #0x0
   21f08:	b.eq	21f20 <lzma_mode_is_supported@@XZ_5.0+0x7288>  // b.none
   21f0c:	ldr	x0, [sp, #216]
   21f10:	add	x0, x0, #0x4, lsl #12
   21f14:	mov	w1, #0x19                  	// #25
   21f18:	str	w1, [x0, #11936]
   21f1c:	b	278fc <lzma_mode_is_supported@@XZ_5.0+0xcc64>
   21f20:	ldr	w0, [sp, #96]
   21f24:	lsl	w0, w0, #8
   21f28:	str	w0, [sp, #96]
   21f2c:	ldr	w0, [sp, #100]
   21f30:	lsl	w1, w0, #8
   21f34:	ldr	x0, [sp, #280]
   21f38:	add	x2, x0, #0x1
   21f3c:	str	x2, [sp, #280]
   21f40:	ldr	x2, [sp, #56]
   21f44:	add	x0, x2, x0
   21f48:	ldrb	w0, [x0]
   21f4c:	orr	w0, w1, w0
   21f50:	str	w0, [sp, #100]
   21f54:	ldr	w0, [sp, #96]
   21f58:	lsr	w0, w0, #11
   21f5c:	ldr	x2, [sp, #216]
   21f60:	ldr	w1, [sp, #244]
   21f64:	ldr	w3, [sp, #232]
   21f68:	lsl	x3, x3, #3
   21f6c:	add	x3, x3, x1
   21f70:	mov	x1, #0x33b0                	// #13232
   21f74:	add	x1, x3, x1
   21f78:	lsl	x1, x1, #1
   21f7c:	add	x1, x2, x1
   21f80:	ldrh	w1, [x1, #8]
   21f84:	mul	w0, w0, w1
   21f88:	str	w0, [sp, #180]
   21f8c:	ldr	w0, [sp, #100]
   21f90:	ldr	w1, [sp, #180]
   21f94:	cmp	w1, w0
   21f98:	b.ls	2204c <lzma_mode_is_supported@@XZ_5.0+0x73b4>  // b.plast
   21f9c:	ldr	w0, [sp, #180]
   21fa0:	str	w0, [sp, #96]
   21fa4:	ldr	x1, [sp, #216]
   21fa8:	ldr	w0, [sp, #244]
   21fac:	ldr	w2, [sp, #232]
   21fb0:	lsl	x2, x2, #3
   21fb4:	add	x2, x2, x0
   21fb8:	mov	x0, #0x33b0                	// #13232
   21fbc:	add	x0, x2, x0
   21fc0:	lsl	x0, x0, #1
   21fc4:	add	x0, x1, x0
   21fc8:	ldrh	w1, [x0, #8]
   21fcc:	ldr	x2, [sp, #216]
   21fd0:	ldr	w0, [sp, #244]
   21fd4:	ldr	w3, [sp, #232]
   21fd8:	lsl	x3, x3, #3
   21fdc:	add	x3, x3, x0
   21fe0:	mov	x0, #0x33b0                	// #13232
   21fe4:	add	x0, x3, x0
   21fe8:	lsl	x0, x0, #1
   21fec:	add	x0, x2, x0
   21ff0:	ldrh	w0, [x0, #8]
   21ff4:	mov	w2, w0
   21ff8:	mov	w0, #0x800                 	// #2048
   21ffc:	sub	w0, w0, w2
   22000:	lsr	w0, w0, #5
   22004:	and	w0, w0, #0xffff
   22008:	add	w0, w1, w0
   2200c:	and	w3, w0, #0xffff
   22010:	ldr	x1, [sp, #216]
   22014:	ldr	w0, [sp, #244]
   22018:	ldr	w2, [sp, #232]
   2201c:	lsl	x2, x2, #3
   22020:	add	x2, x2, x0
   22024:	mov	x0, #0x33b0                	// #13232
   22028:	add	x0, x2, x0
   2202c:	lsl	x0, x0, #1
   22030:	add	x0, x1, x0
   22034:	mov	w1, w3
   22038:	strh	w1, [x0, #8]
   2203c:	ldr	w0, [sp, #244]
   22040:	lsl	w0, w0, #1
   22044:	str	w0, [sp, #244]
   22048:	b	22108 <lzma_mode_is_supported@@XZ_5.0+0x7470>
   2204c:	ldr	w1, [sp, #96]
   22050:	ldr	w0, [sp, #180]
   22054:	sub	w0, w1, w0
   22058:	str	w0, [sp, #96]
   2205c:	ldr	w1, [sp, #100]
   22060:	ldr	w0, [sp, #180]
   22064:	sub	w0, w1, w0
   22068:	str	w0, [sp, #100]
   2206c:	ldr	x1, [sp, #216]
   22070:	ldr	w0, [sp, #244]
   22074:	ldr	w2, [sp, #232]
   22078:	lsl	x2, x2, #3
   2207c:	add	x2, x2, x0
   22080:	mov	x0, #0x33b0                	// #13232
   22084:	add	x0, x2, x0
   22088:	lsl	x0, x0, #1
   2208c:	add	x0, x1, x0
   22090:	ldrh	w1, [x0, #8]
   22094:	ldr	x2, [sp, #216]
   22098:	ldr	w0, [sp, #244]
   2209c:	ldr	w3, [sp, #232]
   220a0:	lsl	x3, x3, #3
   220a4:	add	x3, x3, x0
   220a8:	mov	x0, #0x33b0                	// #13232
   220ac:	add	x0, x3, x0
   220b0:	lsl	x0, x0, #1
   220b4:	add	x0, x2, x0
   220b8:	ldrh	w0, [x0, #8]
   220bc:	lsr	w0, w0, #5
   220c0:	and	w0, w0, #0xffff
   220c4:	sub	w0, w1, w0
   220c8:	and	w3, w0, #0xffff
   220cc:	ldr	x1, [sp, #216]
   220d0:	ldr	w0, [sp, #244]
   220d4:	ldr	w2, [sp, #232]
   220d8:	lsl	x2, x2, #3
   220dc:	add	x2, x2, x0
   220e0:	mov	x0, #0x33b0                	// #13232
   220e4:	add	x0, x2, x0
   220e8:	lsl	x0, x0, #1
   220ec:	add	x0, x1, x0
   220f0:	mov	w1, w3
   220f4:	strh	w1, [x0, #8]
   220f8:	ldr	w0, [sp, #244]
   220fc:	lsl	w0, w0, #1
   22100:	add	w0, w0, #0x1
   22104:	str	w0, [sp, #244]
   22108:	ldr	w1, [sp, #96]
   2210c:	mov	w0, #0xffffff              	// #16777215
   22110:	cmp	w1, w0
   22114:	b.hi	22180 <lzma_mode_is_supported@@XZ_5.0+0x74e8>  // b.pmore
   22118:	ldr	x1, [sp, #280]
   2211c:	ldr	x0, [sp, #40]
   22120:	cmp	x1, x0
   22124:	cset	w0, eq  // eq = none
   22128:	and	w0, w0, #0xff
   2212c:	and	x0, x0, #0xff
   22130:	cmp	x0, #0x0
   22134:	b.eq	2214c <lzma_mode_is_supported@@XZ_5.0+0x74b4>  // b.none
   22138:	ldr	x0, [sp, #216]
   2213c:	add	x0, x0, #0x4, lsl #12
   22140:	mov	w1, #0x1a                  	// #26
   22144:	str	w1, [x0, #11936]
   22148:	b	278fc <lzma_mode_is_supported@@XZ_5.0+0xcc64>
   2214c:	ldr	w0, [sp, #96]
   22150:	lsl	w0, w0, #8
   22154:	str	w0, [sp, #96]
   22158:	ldr	w0, [sp, #100]
   2215c:	lsl	w1, w0, #8
   22160:	ldr	x0, [sp, #280]
   22164:	add	x2, x0, #0x1
   22168:	str	x2, [sp, #280]
   2216c:	ldr	x2, [sp, #56]
   22170:	add	x0, x2, x0
   22174:	ldrb	w0, [x0]
   22178:	orr	w0, w1, w0
   2217c:	str	w0, [sp, #100]
   22180:	ldr	w0, [sp, #96]
   22184:	lsr	w0, w0, #11
   22188:	ldr	x2, [sp, #216]
   2218c:	ldr	w1, [sp, #244]
   22190:	ldr	w3, [sp, #232]
   22194:	lsl	x3, x3, #3
   22198:	add	x3, x3, x1
   2219c:	mov	x1, #0x33b0                	// #13232
   221a0:	add	x1, x3, x1
   221a4:	lsl	x1, x1, #1
   221a8:	add	x1, x2, x1
   221ac:	ldrh	w1, [x1, #8]
   221b0:	mul	w0, w0, w1
   221b4:	str	w0, [sp, #180]
   221b8:	ldr	w0, [sp, #100]
   221bc:	ldr	w1, [sp, #180]
   221c0:	cmp	w1, w0
   221c4:	b.ls	22278 <lzma_mode_is_supported@@XZ_5.0+0x75e0>  // b.plast
   221c8:	ldr	w0, [sp, #180]
   221cc:	str	w0, [sp, #96]
   221d0:	ldr	x1, [sp, #216]
   221d4:	ldr	w0, [sp, #244]
   221d8:	ldr	w2, [sp, #232]
   221dc:	lsl	x2, x2, #3
   221e0:	add	x2, x2, x0
   221e4:	mov	x0, #0x33b0                	// #13232
   221e8:	add	x0, x2, x0
   221ec:	lsl	x0, x0, #1
   221f0:	add	x0, x1, x0
   221f4:	ldrh	w1, [x0, #8]
   221f8:	ldr	x2, [sp, #216]
   221fc:	ldr	w0, [sp, #244]
   22200:	ldr	w3, [sp, #232]
   22204:	lsl	x3, x3, #3
   22208:	add	x3, x3, x0
   2220c:	mov	x0, #0x33b0                	// #13232
   22210:	add	x0, x3, x0
   22214:	lsl	x0, x0, #1
   22218:	add	x0, x2, x0
   2221c:	ldrh	w0, [x0, #8]
   22220:	mov	w2, w0
   22224:	mov	w0, #0x800                 	// #2048
   22228:	sub	w0, w0, w2
   2222c:	lsr	w0, w0, #5
   22230:	and	w0, w0, #0xffff
   22234:	add	w0, w1, w0
   22238:	and	w3, w0, #0xffff
   2223c:	ldr	x1, [sp, #216]
   22240:	ldr	w0, [sp, #244]
   22244:	ldr	w2, [sp, #232]
   22248:	lsl	x2, x2, #3
   2224c:	add	x2, x2, x0
   22250:	mov	x0, #0x33b0                	// #13232
   22254:	add	x0, x2, x0
   22258:	lsl	x0, x0, #1
   2225c:	add	x0, x1, x0
   22260:	mov	w1, w3
   22264:	strh	w1, [x0, #8]
   22268:	ldr	w0, [sp, #244]
   2226c:	lsl	w0, w0, #1
   22270:	str	w0, [sp, #244]
   22274:	b	22334 <lzma_mode_is_supported@@XZ_5.0+0x769c>
   22278:	ldr	w1, [sp, #96]
   2227c:	ldr	w0, [sp, #180]
   22280:	sub	w0, w1, w0
   22284:	str	w0, [sp, #96]
   22288:	ldr	w1, [sp, #100]
   2228c:	ldr	w0, [sp, #180]
   22290:	sub	w0, w1, w0
   22294:	str	w0, [sp, #100]
   22298:	ldr	x1, [sp, #216]
   2229c:	ldr	w0, [sp, #244]
   222a0:	ldr	w2, [sp, #232]
   222a4:	lsl	x2, x2, #3
   222a8:	add	x2, x2, x0
   222ac:	mov	x0, #0x33b0                	// #13232
   222b0:	add	x0, x2, x0
   222b4:	lsl	x0, x0, #1
   222b8:	add	x0, x1, x0
   222bc:	ldrh	w1, [x0, #8]
   222c0:	ldr	x2, [sp, #216]
   222c4:	ldr	w0, [sp, #244]
   222c8:	ldr	w3, [sp, #232]
   222cc:	lsl	x3, x3, #3
   222d0:	add	x3, x3, x0
   222d4:	mov	x0, #0x33b0                	// #13232
   222d8:	add	x0, x3, x0
   222dc:	lsl	x0, x0, #1
   222e0:	add	x0, x2, x0
   222e4:	ldrh	w0, [x0, #8]
   222e8:	lsr	w0, w0, #5
   222ec:	and	w0, w0, #0xffff
   222f0:	sub	w0, w1, w0
   222f4:	and	w3, w0, #0xffff
   222f8:	ldr	x1, [sp, #216]
   222fc:	ldr	w0, [sp, #244]
   22300:	ldr	w2, [sp, #232]
   22304:	lsl	x2, x2, #3
   22308:	add	x2, x2, x0
   2230c:	mov	x0, #0x33b0                	// #13232
   22310:	add	x0, x2, x0
   22314:	lsl	x0, x0, #1
   22318:	add	x0, x1, x0
   2231c:	mov	w1, w3
   22320:	strh	w1, [x0, #8]
   22324:	ldr	w0, [sp, #244]
   22328:	lsl	w0, w0, #1
   2232c:	add	w0, w0, #0x1
   22330:	str	w0, [sp, #244]
   22334:	ldr	w1, [sp, #96]
   22338:	mov	w0, #0xffffff              	// #16777215
   2233c:	cmp	w1, w0
   22340:	b.hi	223ac <lzma_mode_is_supported@@XZ_5.0+0x7714>  // b.pmore
   22344:	ldr	x1, [sp, #280]
   22348:	ldr	x0, [sp, #40]
   2234c:	cmp	x1, x0
   22350:	cset	w0, eq  // eq = none
   22354:	and	w0, w0, #0xff
   22358:	and	x0, x0, #0xff
   2235c:	cmp	x0, #0x0
   22360:	b.eq	22378 <lzma_mode_is_supported@@XZ_5.0+0x76e0>  // b.none
   22364:	ldr	x0, [sp, #216]
   22368:	add	x0, x0, #0x4, lsl #12
   2236c:	mov	w1, #0x1b                  	// #27
   22370:	str	w1, [x0, #11936]
   22374:	b	278fc <lzma_mode_is_supported@@XZ_5.0+0xcc64>
   22378:	ldr	w0, [sp, #96]
   2237c:	lsl	w0, w0, #8
   22380:	str	w0, [sp, #96]
   22384:	ldr	w0, [sp, #100]
   22388:	lsl	w1, w0, #8
   2238c:	ldr	x0, [sp, #280]
   22390:	add	x2, x0, #0x1
   22394:	str	x2, [sp, #280]
   22398:	ldr	x2, [sp, #56]
   2239c:	add	x0, x2, x0
   223a0:	ldrb	w0, [x0]
   223a4:	orr	w0, w1, w0
   223a8:	str	w0, [sp, #100]
   223ac:	ldr	w0, [sp, #96]
   223b0:	lsr	w0, w0, #11
   223b4:	ldr	x2, [sp, #216]
   223b8:	ldr	w1, [sp, #244]
   223bc:	ldr	w3, [sp, #232]
   223c0:	lsl	x3, x3, #3
   223c4:	add	x3, x3, x1
   223c8:	mov	x1, #0x33b0                	// #13232
   223cc:	add	x1, x3, x1
   223d0:	lsl	x1, x1, #1
   223d4:	add	x1, x2, x1
   223d8:	ldrh	w1, [x1, #8]
   223dc:	mul	w0, w0, w1
   223e0:	str	w0, [sp, #180]
   223e4:	ldr	w0, [sp, #100]
   223e8:	ldr	w1, [sp, #180]
   223ec:	cmp	w1, w0
   223f0:	b.ls	224a4 <lzma_mode_is_supported@@XZ_5.0+0x780c>  // b.plast
   223f4:	ldr	w0, [sp, #180]
   223f8:	str	w0, [sp, #96]
   223fc:	ldr	x1, [sp, #216]
   22400:	ldr	w0, [sp, #244]
   22404:	ldr	w2, [sp, #232]
   22408:	lsl	x2, x2, #3
   2240c:	add	x2, x2, x0
   22410:	mov	x0, #0x33b0                	// #13232
   22414:	add	x0, x2, x0
   22418:	lsl	x0, x0, #1
   2241c:	add	x0, x1, x0
   22420:	ldrh	w1, [x0, #8]
   22424:	ldr	x2, [sp, #216]
   22428:	ldr	w0, [sp, #244]
   2242c:	ldr	w3, [sp, #232]
   22430:	lsl	x3, x3, #3
   22434:	add	x3, x3, x0
   22438:	mov	x0, #0x33b0                	// #13232
   2243c:	add	x0, x3, x0
   22440:	lsl	x0, x0, #1
   22444:	add	x0, x2, x0
   22448:	ldrh	w0, [x0, #8]
   2244c:	mov	w2, w0
   22450:	mov	w0, #0x800                 	// #2048
   22454:	sub	w0, w0, w2
   22458:	lsr	w0, w0, #5
   2245c:	and	w0, w0, #0xffff
   22460:	add	w0, w1, w0
   22464:	and	w3, w0, #0xffff
   22468:	ldr	x1, [sp, #216]
   2246c:	ldr	w0, [sp, #244]
   22470:	ldr	w2, [sp, #232]
   22474:	lsl	x2, x2, #3
   22478:	add	x2, x2, x0
   2247c:	mov	x0, #0x33b0                	// #13232
   22480:	add	x0, x2, x0
   22484:	lsl	x0, x0, #1
   22488:	add	x0, x1, x0
   2248c:	mov	w1, w3
   22490:	strh	w1, [x0, #8]
   22494:	ldr	w0, [sp, #244]
   22498:	lsl	w0, w0, #1
   2249c:	str	w0, [sp, #244]
   224a0:	b	22560 <lzma_mode_is_supported@@XZ_5.0+0x78c8>
   224a4:	ldr	w1, [sp, #96]
   224a8:	ldr	w0, [sp, #180]
   224ac:	sub	w0, w1, w0
   224b0:	str	w0, [sp, #96]
   224b4:	ldr	w1, [sp, #100]
   224b8:	ldr	w0, [sp, #180]
   224bc:	sub	w0, w1, w0
   224c0:	str	w0, [sp, #100]
   224c4:	ldr	x1, [sp, #216]
   224c8:	ldr	w0, [sp, #244]
   224cc:	ldr	w2, [sp, #232]
   224d0:	lsl	x2, x2, #3
   224d4:	add	x2, x2, x0
   224d8:	mov	x0, #0x33b0                	// #13232
   224dc:	add	x0, x2, x0
   224e0:	lsl	x0, x0, #1
   224e4:	add	x0, x1, x0
   224e8:	ldrh	w1, [x0, #8]
   224ec:	ldr	x2, [sp, #216]
   224f0:	ldr	w0, [sp, #244]
   224f4:	ldr	w3, [sp, #232]
   224f8:	lsl	x3, x3, #3
   224fc:	add	x3, x3, x0
   22500:	mov	x0, #0x33b0                	// #13232
   22504:	add	x0, x3, x0
   22508:	lsl	x0, x0, #1
   2250c:	add	x0, x2, x0
   22510:	ldrh	w0, [x0, #8]
   22514:	lsr	w0, w0, #5
   22518:	and	w0, w0, #0xffff
   2251c:	sub	w0, w1, w0
   22520:	and	w3, w0, #0xffff
   22524:	ldr	x1, [sp, #216]
   22528:	ldr	w0, [sp, #244]
   2252c:	ldr	w2, [sp, #232]
   22530:	lsl	x2, x2, #3
   22534:	add	x2, x2, x0
   22538:	mov	x0, #0x33b0                	// #13232
   2253c:	add	x0, x2, x0
   22540:	lsl	x0, x0, #1
   22544:	add	x0, x1, x0
   22548:	mov	w1, w3
   2254c:	strh	w1, [x0, #8]
   22550:	ldr	w0, [sp, #244]
   22554:	lsl	w0, w0, #1
   22558:	add	w0, w0, #0x1
   2255c:	str	w0, [sp, #244]
   22560:	ldr	w0, [sp, #244]
   22564:	add	w0, w0, #0x2
   22568:	str	w0, [sp, #92]
   2256c:	b	23490 <lzma_mode_is_supported@@XZ_5.0+0x87f8>
   22570:	ldr	w1, [sp, #96]
   22574:	ldr	w0, [sp, #180]
   22578:	sub	w0, w1, w0
   2257c:	str	w0, [sp, #96]
   22580:	ldr	w1, [sp, #100]
   22584:	ldr	w0, [sp, #180]
   22588:	sub	w0, w1, w0
   2258c:	str	w0, [sp, #100]
   22590:	ldr	x0, [sp, #216]
   22594:	add	x0, x0, #0x6, lsl #12
   22598:	ldrh	w1, [x0, #1638]
   2259c:	ldr	x0, [sp, #216]
   225a0:	add	x0, x0, #0x6, lsl #12
   225a4:	ldrh	w0, [x0, #1638]
   225a8:	lsr	w0, w0, #5
   225ac:	and	w0, w0, #0xffff
   225b0:	sub	w0, w1, w0
   225b4:	and	w1, w0, #0xffff
   225b8:	ldr	x0, [sp, #216]
   225bc:	add	x0, x0, #0x6, lsl #12
   225c0:	strh	w1, [x0, #1638]
   225c4:	ldr	w1, [sp, #96]
   225c8:	mov	w0, #0xffffff              	// #16777215
   225cc:	cmp	w1, w0
   225d0:	b.hi	2263c <lzma_mode_is_supported@@XZ_5.0+0x79a4>  // b.pmore
   225d4:	ldr	x1, [sp, #280]
   225d8:	ldr	x0, [sp, #40]
   225dc:	cmp	x1, x0
   225e0:	cset	w0, eq  // eq = none
   225e4:	and	w0, w0, #0xff
   225e8:	and	x0, x0, #0xff
   225ec:	cmp	x0, #0x0
   225f0:	b.eq	22608 <lzma_mode_is_supported@@XZ_5.0+0x7970>  // b.none
   225f4:	ldr	x0, [sp, #216]
   225f8:	add	x0, x0, #0x4, lsl #12
   225fc:	mov	w1, #0x1c                  	// #28
   22600:	str	w1, [x0, #11936]
   22604:	b	278fc <lzma_mode_is_supported@@XZ_5.0+0xcc64>
   22608:	ldr	w0, [sp, #96]
   2260c:	lsl	w0, w0, #8
   22610:	str	w0, [sp, #96]
   22614:	ldr	w0, [sp, #100]
   22618:	lsl	w1, w0, #8
   2261c:	ldr	x0, [sp, #280]
   22620:	add	x2, x0, #0x1
   22624:	str	x2, [sp, #280]
   22628:	ldr	x2, [sp, #56]
   2262c:	add	x0, x2, x0
   22630:	ldrb	w0, [x0]
   22634:	orr	w0, w1, w0
   22638:	str	w0, [sp, #100]
   2263c:	ldr	w0, [sp, #96]
   22640:	lsr	w0, w0, #11
   22644:	ldr	x2, [sp, #216]
   22648:	ldr	w3, [sp, #244]
   2264c:	mov	x1, #0x3430                	// #13360
   22650:	add	x1, x3, x1
   22654:	lsl	x1, x1, #1
   22658:	add	x1, x2, x1
   2265c:	ldrh	w1, [x1, #8]
   22660:	mul	w0, w0, w1
   22664:	str	w0, [sp, #180]
   22668:	ldr	w0, [sp, #100]
   2266c:	ldr	w1, [sp, #180]
   22670:	cmp	w1, w0
   22674:	b.ls	22704 <lzma_mode_is_supported@@XZ_5.0+0x7a6c>  // b.plast
   22678:	ldr	w0, [sp, #180]
   2267c:	str	w0, [sp, #96]
   22680:	ldr	x1, [sp, #216]
   22684:	ldr	w2, [sp, #244]
   22688:	mov	x0, #0x3430                	// #13360
   2268c:	add	x0, x2, x0
   22690:	lsl	x0, x0, #1
   22694:	add	x0, x1, x0
   22698:	ldrh	w1, [x0, #8]
   2269c:	ldr	x2, [sp, #216]
   226a0:	ldr	w3, [sp, #244]
   226a4:	mov	x0, #0x3430                	// #13360
   226a8:	add	x0, x3, x0
   226ac:	lsl	x0, x0, #1
   226b0:	add	x0, x2, x0
   226b4:	ldrh	w0, [x0, #8]
   226b8:	mov	w2, w0
   226bc:	mov	w0, #0x800                 	// #2048
   226c0:	sub	w0, w0, w2
   226c4:	lsr	w0, w0, #5
   226c8:	and	w0, w0, #0xffff
   226cc:	add	w0, w1, w0
   226d0:	and	w3, w0, #0xffff
   226d4:	ldr	x1, [sp, #216]
   226d8:	ldr	w2, [sp, #244]
   226dc:	mov	x0, #0x3430                	// #13360
   226e0:	add	x0, x2, x0
   226e4:	lsl	x0, x0, #1
   226e8:	add	x0, x1, x0
   226ec:	mov	w1, w3
   226f0:	strh	w1, [x0, #8]
   226f4:	ldr	w0, [sp, #244]
   226f8:	lsl	w0, w0, #1
   226fc:	str	w0, [sp, #244]
   22700:	b	2279c <lzma_mode_is_supported@@XZ_5.0+0x7b04>
   22704:	ldr	w1, [sp, #96]
   22708:	ldr	w0, [sp, #180]
   2270c:	sub	w0, w1, w0
   22710:	str	w0, [sp, #96]
   22714:	ldr	w1, [sp, #100]
   22718:	ldr	w0, [sp, #180]
   2271c:	sub	w0, w1, w0
   22720:	str	w0, [sp, #100]
   22724:	ldr	x1, [sp, #216]
   22728:	ldr	w2, [sp, #244]
   2272c:	mov	x0, #0x3430                	// #13360
   22730:	add	x0, x2, x0
   22734:	lsl	x0, x0, #1
   22738:	add	x0, x1, x0
   2273c:	ldrh	w1, [x0, #8]
   22740:	ldr	x2, [sp, #216]
   22744:	ldr	w3, [sp, #244]
   22748:	mov	x0, #0x3430                	// #13360
   2274c:	add	x0, x3, x0
   22750:	lsl	x0, x0, #1
   22754:	add	x0, x2, x0
   22758:	ldrh	w0, [x0, #8]
   2275c:	lsr	w0, w0, #5
   22760:	and	w0, w0, #0xffff
   22764:	sub	w0, w1, w0
   22768:	and	w3, w0, #0xffff
   2276c:	ldr	x1, [sp, #216]
   22770:	ldr	w2, [sp, #244]
   22774:	mov	x0, #0x3430                	// #13360
   22778:	add	x0, x2, x0
   2277c:	lsl	x0, x0, #1
   22780:	add	x0, x1, x0
   22784:	mov	w1, w3
   22788:	strh	w1, [x0, #8]
   2278c:	ldr	w0, [sp, #244]
   22790:	lsl	w0, w0, #1
   22794:	add	w0, w0, #0x1
   22798:	str	w0, [sp, #244]
   2279c:	ldr	w1, [sp, #96]
   227a0:	mov	w0, #0xffffff              	// #16777215
   227a4:	cmp	w1, w0
   227a8:	b.hi	22814 <lzma_mode_is_supported@@XZ_5.0+0x7b7c>  // b.pmore
   227ac:	ldr	x1, [sp, #280]
   227b0:	ldr	x0, [sp, #40]
   227b4:	cmp	x1, x0
   227b8:	cset	w0, eq  // eq = none
   227bc:	and	w0, w0, #0xff
   227c0:	and	x0, x0, #0xff
   227c4:	cmp	x0, #0x0
   227c8:	b.eq	227e0 <lzma_mode_is_supported@@XZ_5.0+0x7b48>  // b.none
   227cc:	ldr	x0, [sp, #216]
   227d0:	add	x0, x0, #0x4, lsl #12
   227d4:	mov	w1, #0x1d                  	// #29
   227d8:	str	w1, [x0, #11936]
   227dc:	b	278fc <lzma_mode_is_supported@@XZ_5.0+0xcc64>
   227e0:	ldr	w0, [sp, #96]
   227e4:	lsl	w0, w0, #8
   227e8:	str	w0, [sp, #96]
   227ec:	ldr	w0, [sp, #100]
   227f0:	lsl	w1, w0, #8
   227f4:	ldr	x0, [sp, #280]
   227f8:	add	x2, x0, #0x1
   227fc:	str	x2, [sp, #280]
   22800:	ldr	x2, [sp, #56]
   22804:	add	x0, x2, x0
   22808:	ldrb	w0, [x0]
   2280c:	orr	w0, w1, w0
   22810:	str	w0, [sp, #100]
   22814:	ldr	w0, [sp, #96]
   22818:	lsr	w0, w0, #11
   2281c:	ldr	x2, [sp, #216]
   22820:	ldr	w3, [sp, #244]
   22824:	mov	x1, #0x3430                	// #13360
   22828:	add	x1, x3, x1
   2282c:	lsl	x1, x1, #1
   22830:	add	x1, x2, x1
   22834:	ldrh	w1, [x1, #8]
   22838:	mul	w0, w0, w1
   2283c:	str	w0, [sp, #180]
   22840:	ldr	w0, [sp, #100]
   22844:	ldr	w1, [sp, #180]
   22848:	cmp	w1, w0
   2284c:	b.ls	228dc <lzma_mode_is_supported@@XZ_5.0+0x7c44>  // b.plast
   22850:	ldr	w0, [sp, #180]
   22854:	str	w0, [sp, #96]
   22858:	ldr	x1, [sp, #216]
   2285c:	ldr	w2, [sp, #244]
   22860:	mov	x0, #0x3430                	// #13360
   22864:	add	x0, x2, x0
   22868:	lsl	x0, x0, #1
   2286c:	add	x0, x1, x0
   22870:	ldrh	w1, [x0, #8]
   22874:	ldr	x2, [sp, #216]
   22878:	ldr	w3, [sp, #244]
   2287c:	mov	x0, #0x3430                	// #13360
   22880:	add	x0, x3, x0
   22884:	lsl	x0, x0, #1
   22888:	add	x0, x2, x0
   2288c:	ldrh	w0, [x0, #8]
   22890:	mov	w2, w0
   22894:	mov	w0, #0x800                 	// #2048
   22898:	sub	w0, w0, w2
   2289c:	lsr	w0, w0, #5
   228a0:	and	w0, w0, #0xffff
   228a4:	add	w0, w1, w0
   228a8:	and	w3, w0, #0xffff
   228ac:	ldr	x1, [sp, #216]
   228b0:	ldr	w2, [sp, #244]
   228b4:	mov	x0, #0x3430                	// #13360
   228b8:	add	x0, x2, x0
   228bc:	lsl	x0, x0, #1
   228c0:	add	x0, x1, x0
   228c4:	mov	w1, w3
   228c8:	strh	w1, [x0, #8]
   228cc:	ldr	w0, [sp, #244]
   228d0:	lsl	w0, w0, #1
   228d4:	str	w0, [sp, #244]
   228d8:	b	22974 <lzma_mode_is_supported@@XZ_5.0+0x7cdc>
   228dc:	ldr	w1, [sp, #96]
   228e0:	ldr	w0, [sp, #180]
   228e4:	sub	w0, w1, w0
   228e8:	str	w0, [sp, #96]
   228ec:	ldr	w1, [sp, #100]
   228f0:	ldr	w0, [sp, #180]
   228f4:	sub	w0, w1, w0
   228f8:	str	w0, [sp, #100]
   228fc:	ldr	x1, [sp, #216]
   22900:	ldr	w2, [sp, #244]
   22904:	mov	x0, #0x3430                	// #13360
   22908:	add	x0, x2, x0
   2290c:	lsl	x0, x0, #1
   22910:	add	x0, x1, x0
   22914:	ldrh	w1, [x0, #8]
   22918:	ldr	x2, [sp, #216]
   2291c:	ldr	w3, [sp, #244]
   22920:	mov	x0, #0x3430                	// #13360
   22924:	add	x0, x3, x0
   22928:	lsl	x0, x0, #1
   2292c:	add	x0, x2, x0
   22930:	ldrh	w0, [x0, #8]
   22934:	lsr	w0, w0, #5
   22938:	and	w0, w0, #0xffff
   2293c:	sub	w0, w1, w0
   22940:	and	w3, w0, #0xffff
   22944:	ldr	x1, [sp, #216]
   22948:	ldr	w2, [sp, #244]
   2294c:	mov	x0, #0x3430                	// #13360
   22950:	add	x0, x2, x0
   22954:	lsl	x0, x0, #1
   22958:	add	x0, x1, x0
   2295c:	mov	w1, w3
   22960:	strh	w1, [x0, #8]
   22964:	ldr	w0, [sp, #244]
   22968:	lsl	w0, w0, #1
   2296c:	add	w0, w0, #0x1
   22970:	str	w0, [sp, #244]
   22974:	ldr	w1, [sp, #96]
   22978:	mov	w0, #0xffffff              	// #16777215
   2297c:	cmp	w1, w0
   22980:	b.hi	229ec <lzma_mode_is_supported@@XZ_5.0+0x7d54>  // b.pmore
   22984:	ldr	x1, [sp, #280]
   22988:	ldr	x0, [sp, #40]
   2298c:	cmp	x1, x0
   22990:	cset	w0, eq  // eq = none
   22994:	and	w0, w0, #0xff
   22998:	and	x0, x0, #0xff
   2299c:	cmp	x0, #0x0
   229a0:	b.eq	229b8 <lzma_mode_is_supported@@XZ_5.0+0x7d20>  // b.none
   229a4:	ldr	x0, [sp, #216]
   229a8:	add	x0, x0, #0x4, lsl #12
   229ac:	mov	w1, #0x1e                  	// #30
   229b0:	str	w1, [x0, #11936]
   229b4:	b	278fc <lzma_mode_is_supported@@XZ_5.0+0xcc64>
   229b8:	ldr	w0, [sp, #96]
   229bc:	lsl	w0, w0, #8
   229c0:	str	w0, [sp, #96]
   229c4:	ldr	w0, [sp, #100]
   229c8:	lsl	w1, w0, #8
   229cc:	ldr	x0, [sp, #280]
   229d0:	add	x2, x0, #0x1
   229d4:	str	x2, [sp, #280]
   229d8:	ldr	x2, [sp, #56]
   229dc:	add	x0, x2, x0
   229e0:	ldrb	w0, [x0]
   229e4:	orr	w0, w1, w0
   229e8:	str	w0, [sp, #100]
   229ec:	ldr	w0, [sp, #96]
   229f0:	lsr	w0, w0, #11
   229f4:	ldr	x2, [sp, #216]
   229f8:	ldr	w3, [sp, #244]
   229fc:	mov	x1, #0x3430                	// #13360
   22a00:	add	x1, x3, x1
   22a04:	lsl	x1, x1, #1
   22a08:	add	x1, x2, x1
   22a0c:	ldrh	w1, [x1, #8]
   22a10:	mul	w0, w0, w1
   22a14:	str	w0, [sp, #180]
   22a18:	ldr	w0, [sp, #100]
   22a1c:	ldr	w1, [sp, #180]
   22a20:	cmp	w1, w0
   22a24:	b.ls	22ab4 <lzma_mode_is_supported@@XZ_5.0+0x7e1c>  // b.plast
   22a28:	ldr	w0, [sp, #180]
   22a2c:	str	w0, [sp, #96]
   22a30:	ldr	x1, [sp, #216]
   22a34:	ldr	w2, [sp, #244]
   22a38:	mov	x0, #0x3430                	// #13360
   22a3c:	add	x0, x2, x0
   22a40:	lsl	x0, x0, #1
   22a44:	add	x0, x1, x0
   22a48:	ldrh	w1, [x0, #8]
   22a4c:	ldr	x2, [sp, #216]
   22a50:	ldr	w3, [sp, #244]
   22a54:	mov	x0, #0x3430                	// #13360
   22a58:	add	x0, x3, x0
   22a5c:	lsl	x0, x0, #1
   22a60:	add	x0, x2, x0
   22a64:	ldrh	w0, [x0, #8]
   22a68:	mov	w2, w0
   22a6c:	mov	w0, #0x800                 	// #2048
   22a70:	sub	w0, w0, w2
   22a74:	lsr	w0, w0, #5
   22a78:	and	w0, w0, #0xffff
   22a7c:	add	w0, w1, w0
   22a80:	and	w3, w0, #0xffff
   22a84:	ldr	x1, [sp, #216]
   22a88:	ldr	w2, [sp, #244]
   22a8c:	mov	x0, #0x3430                	// #13360
   22a90:	add	x0, x2, x0
   22a94:	lsl	x0, x0, #1
   22a98:	add	x0, x1, x0
   22a9c:	mov	w1, w3
   22aa0:	strh	w1, [x0, #8]
   22aa4:	ldr	w0, [sp, #244]
   22aa8:	lsl	w0, w0, #1
   22aac:	str	w0, [sp, #244]
   22ab0:	b	22b4c <lzma_mode_is_supported@@XZ_5.0+0x7eb4>
   22ab4:	ldr	w1, [sp, #96]
   22ab8:	ldr	w0, [sp, #180]
   22abc:	sub	w0, w1, w0
   22ac0:	str	w0, [sp, #96]
   22ac4:	ldr	w1, [sp, #100]
   22ac8:	ldr	w0, [sp, #180]
   22acc:	sub	w0, w1, w0
   22ad0:	str	w0, [sp, #100]
   22ad4:	ldr	x1, [sp, #216]
   22ad8:	ldr	w2, [sp, #244]
   22adc:	mov	x0, #0x3430                	// #13360
   22ae0:	add	x0, x2, x0
   22ae4:	lsl	x0, x0, #1
   22ae8:	add	x0, x1, x0
   22aec:	ldrh	w1, [x0, #8]
   22af0:	ldr	x2, [sp, #216]
   22af4:	ldr	w3, [sp, #244]
   22af8:	mov	x0, #0x3430                	// #13360
   22afc:	add	x0, x3, x0
   22b00:	lsl	x0, x0, #1
   22b04:	add	x0, x2, x0
   22b08:	ldrh	w0, [x0, #8]
   22b0c:	lsr	w0, w0, #5
   22b10:	and	w0, w0, #0xffff
   22b14:	sub	w0, w1, w0
   22b18:	and	w3, w0, #0xffff
   22b1c:	ldr	x1, [sp, #216]
   22b20:	ldr	w2, [sp, #244]
   22b24:	mov	x0, #0x3430                	// #13360
   22b28:	add	x0, x2, x0
   22b2c:	lsl	x0, x0, #1
   22b30:	add	x0, x1, x0
   22b34:	mov	w1, w3
   22b38:	strh	w1, [x0, #8]
   22b3c:	ldr	w0, [sp, #244]
   22b40:	lsl	w0, w0, #1
   22b44:	add	w0, w0, #0x1
   22b48:	str	w0, [sp, #244]
   22b4c:	ldr	w1, [sp, #96]
   22b50:	mov	w0, #0xffffff              	// #16777215
   22b54:	cmp	w1, w0
   22b58:	b.hi	22bc4 <lzma_mode_is_supported@@XZ_5.0+0x7f2c>  // b.pmore
   22b5c:	ldr	x1, [sp, #280]
   22b60:	ldr	x0, [sp, #40]
   22b64:	cmp	x1, x0
   22b68:	cset	w0, eq  // eq = none
   22b6c:	and	w0, w0, #0xff
   22b70:	and	x0, x0, #0xff
   22b74:	cmp	x0, #0x0
   22b78:	b.eq	22b90 <lzma_mode_is_supported@@XZ_5.0+0x7ef8>  // b.none
   22b7c:	ldr	x0, [sp, #216]
   22b80:	add	x0, x0, #0x4, lsl #12
   22b84:	mov	w1, #0x1f                  	// #31
   22b88:	str	w1, [x0, #11936]
   22b8c:	b	278fc <lzma_mode_is_supported@@XZ_5.0+0xcc64>
   22b90:	ldr	w0, [sp, #96]
   22b94:	lsl	w0, w0, #8
   22b98:	str	w0, [sp, #96]
   22b9c:	ldr	w0, [sp, #100]
   22ba0:	lsl	w1, w0, #8
   22ba4:	ldr	x0, [sp, #280]
   22ba8:	add	x2, x0, #0x1
   22bac:	str	x2, [sp, #280]
   22bb0:	ldr	x2, [sp, #56]
   22bb4:	add	x0, x2, x0
   22bb8:	ldrb	w0, [x0]
   22bbc:	orr	w0, w1, w0
   22bc0:	str	w0, [sp, #100]
   22bc4:	ldr	w0, [sp, #96]
   22bc8:	lsr	w0, w0, #11
   22bcc:	ldr	x2, [sp, #216]
   22bd0:	ldr	w3, [sp, #244]
   22bd4:	mov	x1, #0x3430                	// #13360
   22bd8:	add	x1, x3, x1
   22bdc:	lsl	x1, x1, #1
   22be0:	add	x1, x2, x1
   22be4:	ldrh	w1, [x1, #8]
   22be8:	mul	w0, w0, w1
   22bec:	str	w0, [sp, #180]
   22bf0:	ldr	w0, [sp, #100]
   22bf4:	ldr	w1, [sp, #180]
   22bf8:	cmp	w1, w0
   22bfc:	b.ls	22c8c <lzma_mode_is_supported@@XZ_5.0+0x7ff4>  // b.plast
   22c00:	ldr	w0, [sp, #180]
   22c04:	str	w0, [sp, #96]
   22c08:	ldr	x1, [sp, #216]
   22c0c:	ldr	w2, [sp, #244]
   22c10:	mov	x0, #0x3430                	// #13360
   22c14:	add	x0, x2, x0
   22c18:	lsl	x0, x0, #1
   22c1c:	add	x0, x1, x0
   22c20:	ldrh	w1, [x0, #8]
   22c24:	ldr	x2, [sp, #216]
   22c28:	ldr	w3, [sp, #244]
   22c2c:	mov	x0, #0x3430                	// #13360
   22c30:	add	x0, x3, x0
   22c34:	lsl	x0, x0, #1
   22c38:	add	x0, x2, x0
   22c3c:	ldrh	w0, [x0, #8]
   22c40:	mov	w2, w0
   22c44:	mov	w0, #0x800                 	// #2048
   22c48:	sub	w0, w0, w2
   22c4c:	lsr	w0, w0, #5
   22c50:	and	w0, w0, #0xffff
   22c54:	add	w0, w1, w0
   22c58:	and	w3, w0, #0xffff
   22c5c:	ldr	x1, [sp, #216]
   22c60:	ldr	w2, [sp, #244]
   22c64:	mov	x0, #0x3430                	// #13360
   22c68:	add	x0, x2, x0
   22c6c:	lsl	x0, x0, #1
   22c70:	add	x0, x1, x0
   22c74:	mov	w1, w3
   22c78:	strh	w1, [x0, #8]
   22c7c:	ldr	w0, [sp, #244]
   22c80:	lsl	w0, w0, #1
   22c84:	str	w0, [sp, #244]
   22c88:	b	22d24 <lzma_mode_is_supported@@XZ_5.0+0x808c>
   22c8c:	ldr	w1, [sp, #96]
   22c90:	ldr	w0, [sp, #180]
   22c94:	sub	w0, w1, w0
   22c98:	str	w0, [sp, #96]
   22c9c:	ldr	w1, [sp, #100]
   22ca0:	ldr	w0, [sp, #180]
   22ca4:	sub	w0, w1, w0
   22ca8:	str	w0, [sp, #100]
   22cac:	ldr	x1, [sp, #216]
   22cb0:	ldr	w2, [sp, #244]
   22cb4:	mov	x0, #0x3430                	// #13360
   22cb8:	add	x0, x2, x0
   22cbc:	lsl	x0, x0, #1
   22cc0:	add	x0, x1, x0
   22cc4:	ldrh	w1, [x0, #8]
   22cc8:	ldr	x2, [sp, #216]
   22ccc:	ldr	w3, [sp, #244]
   22cd0:	mov	x0, #0x3430                	// #13360
   22cd4:	add	x0, x3, x0
   22cd8:	lsl	x0, x0, #1
   22cdc:	add	x0, x2, x0
   22ce0:	ldrh	w0, [x0, #8]
   22ce4:	lsr	w0, w0, #5
   22ce8:	and	w0, w0, #0xffff
   22cec:	sub	w0, w1, w0
   22cf0:	and	w3, w0, #0xffff
   22cf4:	ldr	x1, [sp, #216]
   22cf8:	ldr	w2, [sp, #244]
   22cfc:	mov	x0, #0x3430                	// #13360
   22d00:	add	x0, x2, x0
   22d04:	lsl	x0, x0, #1
   22d08:	add	x0, x1, x0
   22d0c:	mov	w1, w3
   22d10:	strh	w1, [x0, #8]
   22d14:	ldr	w0, [sp, #244]
   22d18:	lsl	w0, w0, #1
   22d1c:	add	w0, w0, #0x1
   22d20:	str	w0, [sp, #244]
   22d24:	ldr	w1, [sp, #96]
   22d28:	mov	w0, #0xffffff              	// #16777215
   22d2c:	cmp	w1, w0
   22d30:	b.hi	22d9c <lzma_mode_is_supported@@XZ_5.0+0x8104>  // b.pmore
   22d34:	ldr	x1, [sp, #280]
   22d38:	ldr	x0, [sp, #40]
   22d3c:	cmp	x1, x0
   22d40:	cset	w0, eq  // eq = none
   22d44:	and	w0, w0, #0xff
   22d48:	and	x0, x0, #0xff
   22d4c:	cmp	x0, #0x0
   22d50:	b.eq	22d68 <lzma_mode_is_supported@@XZ_5.0+0x80d0>  // b.none
   22d54:	ldr	x0, [sp, #216]
   22d58:	add	x0, x0, #0x4, lsl #12
   22d5c:	mov	w1, #0x20                  	// #32
   22d60:	str	w1, [x0, #11936]
   22d64:	b	278fc <lzma_mode_is_supported@@XZ_5.0+0xcc64>
   22d68:	ldr	w0, [sp, #96]
   22d6c:	lsl	w0, w0, #8
   22d70:	str	w0, [sp, #96]
   22d74:	ldr	w0, [sp, #100]
   22d78:	lsl	w1, w0, #8
   22d7c:	ldr	x0, [sp, #280]
   22d80:	add	x2, x0, #0x1
   22d84:	str	x2, [sp, #280]
   22d88:	ldr	x2, [sp, #56]
   22d8c:	add	x0, x2, x0
   22d90:	ldrb	w0, [x0]
   22d94:	orr	w0, w1, w0
   22d98:	str	w0, [sp, #100]
   22d9c:	ldr	w0, [sp, #96]
   22da0:	lsr	w0, w0, #11
   22da4:	ldr	x2, [sp, #216]
   22da8:	ldr	w3, [sp, #244]
   22dac:	mov	x1, #0x3430                	// #13360
   22db0:	add	x1, x3, x1
   22db4:	lsl	x1, x1, #1
   22db8:	add	x1, x2, x1
   22dbc:	ldrh	w1, [x1, #8]
   22dc0:	mul	w0, w0, w1
   22dc4:	str	w0, [sp, #180]
   22dc8:	ldr	w0, [sp, #100]
   22dcc:	ldr	w1, [sp, #180]
   22dd0:	cmp	w1, w0
   22dd4:	b.ls	22e64 <lzma_mode_is_supported@@XZ_5.0+0x81cc>  // b.plast
   22dd8:	ldr	w0, [sp, #180]
   22ddc:	str	w0, [sp, #96]
   22de0:	ldr	x1, [sp, #216]
   22de4:	ldr	w2, [sp, #244]
   22de8:	mov	x0, #0x3430                	// #13360
   22dec:	add	x0, x2, x0
   22df0:	lsl	x0, x0, #1
   22df4:	add	x0, x1, x0
   22df8:	ldrh	w1, [x0, #8]
   22dfc:	ldr	x2, [sp, #216]
   22e00:	ldr	w3, [sp, #244]
   22e04:	mov	x0, #0x3430                	// #13360
   22e08:	add	x0, x3, x0
   22e0c:	lsl	x0, x0, #1
   22e10:	add	x0, x2, x0
   22e14:	ldrh	w0, [x0, #8]
   22e18:	mov	w2, w0
   22e1c:	mov	w0, #0x800                 	// #2048
   22e20:	sub	w0, w0, w2
   22e24:	lsr	w0, w0, #5
   22e28:	and	w0, w0, #0xffff
   22e2c:	add	w0, w1, w0
   22e30:	and	w3, w0, #0xffff
   22e34:	ldr	x1, [sp, #216]
   22e38:	ldr	w2, [sp, #244]
   22e3c:	mov	x0, #0x3430                	// #13360
   22e40:	add	x0, x2, x0
   22e44:	lsl	x0, x0, #1
   22e48:	add	x0, x1, x0
   22e4c:	mov	w1, w3
   22e50:	strh	w1, [x0, #8]
   22e54:	ldr	w0, [sp, #244]
   22e58:	lsl	w0, w0, #1
   22e5c:	str	w0, [sp, #244]
   22e60:	b	22efc <lzma_mode_is_supported@@XZ_5.0+0x8264>
   22e64:	ldr	w1, [sp, #96]
   22e68:	ldr	w0, [sp, #180]
   22e6c:	sub	w0, w1, w0
   22e70:	str	w0, [sp, #96]
   22e74:	ldr	w1, [sp, #100]
   22e78:	ldr	w0, [sp, #180]
   22e7c:	sub	w0, w1, w0
   22e80:	str	w0, [sp, #100]
   22e84:	ldr	x1, [sp, #216]
   22e88:	ldr	w2, [sp, #244]
   22e8c:	mov	x0, #0x3430                	// #13360
   22e90:	add	x0, x2, x0
   22e94:	lsl	x0, x0, #1
   22e98:	add	x0, x1, x0
   22e9c:	ldrh	w1, [x0, #8]
   22ea0:	ldr	x2, [sp, #216]
   22ea4:	ldr	w3, [sp, #244]
   22ea8:	mov	x0, #0x3430                	// #13360
   22eac:	add	x0, x3, x0
   22eb0:	lsl	x0, x0, #1
   22eb4:	add	x0, x2, x0
   22eb8:	ldrh	w0, [x0, #8]
   22ebc:	lsr	w0, w0, #5
   22ec0:	and	w0, w0, #0xffff
   22ec4:	sub	w0, w1, w0
   22ec8:	and	w3, w0, #0xffff
   22ecc:	ldr	x1, [sp, #216]
   22ed0:	ldr	w2, [sp, #244]
   22ed4:	mov	x0, #0x3430                	// #13360
   22ed8:	add	x0, x2, x0
   22edc:	lsl	x0, x0, #1
   22ee0:	add	x0, x1, x0
   22ee4:	mov	w1, w3
   22ee8:	strh	w1, [x0, #8]
   22eec:	ldr	w0, [sp, #244]
   22ef0:	lsl	w0, w0, #1
   22ef4:	add	w0, w0, #0x1
   22ef8:	str	w0, [sp, #244]
   22efc:	ldr	w1, [sp, #96]
   22f00:	mov	w0, #0xffffff              	// #16777215
   22f04:	cmp	w1, w0
   22f08:	b.hi	22f74 <lzma_mode_is_supported@@XZ_5.0+0x82dc>  // b.pmore
   22f0c:	ldr	x1, [sp, #280]
   22f10:	ldr	x0, [sp, #40]
   22f14:	cmp	x1, x0
   22f18:	cset	w0, eq  // eq = none
   22f1c:	and	w0, w0, #0xff
   22f20:	and	x0, x0, #0xff
   22f24:	cmp	x0, #0x0
   22f28:	b.eq	22f40 <lzma_mode_is_supported@@XZ_5.0+0x82a8>  // b.none
   22f2c:	ldr	x0, [sp, #216]
   22f30:	add	x0, x0, #0x4, lsl #12
   22f34:	mov	w1, #0x21                  	// #33
   22f38:	str	w1, [x0, #11936]
   22f3c:	b	278fc <lzma_mode_is_supported@@XZ_5.0+0xcc64>
   22f40:	ldr	w0, [sp, #96]
   22f44:	lsl	w0, w0, #8
   22f48:	str	w0, [sp, #96]
   22f4c:	ldr	w0, [sp, #100]
   22f50:	lsl	w1, w0, #8
   22f54:	ldr	x0, [sp, #280]
   22f58:	add	x2, x0, #0x1
   22f5c:	str	x2, [sp, #280]
   22f60:	ldr	x2, [sp, #56]
   22f64:	add	x0, x2, x0
   22f68:	ldrb	w0, [x0]
   22f6c:	orr	w0, w1, w0
   22f70:	str	w0, [sp, #100]
   22f74:	ldr	w0, [sp, #96]
   22f78:	lsr	w0, w0, #11
   22f7c:	ldr	x2, [sp, #216]
   22f80:	ldr	w3, [sp, #244]
   22f84:	mov	x1, #0x3430                	// #13360
   22f88:	add	x1, x3, x1
   22f8c:	lsl	x1, x1, #1
   22f90:	add	x1, x2, x1
   22f94:	ldrh	w1, [x1, #8]
   22f98:	mul	w0, w0, w1
   22f9c:	str	w0, [sp, #180]
   22fa0:	ldr	w0, [sp, #100]
   22fa4:	ldr	w1, [sp, #180]
   22fa8:	cmp	w1, w0
   22fac:	b.ls	2303c <lzma_mode_is_supported@@XZ_5.0+0x83a4>  // b.plast
   22fb0:	ldr	w0, [sp, #180]
   22fb4:	str	w0, [sp, #96]
   22fb8:	ldr	x1, [sp, #216]
   22fbc:	ldr	w2, [sp, #244]
   22fc0:	mov	x0, #0x3430                	// #13360
   22fc4:	add	x0, x2, x0
   22fc8:	lsl	x0, x0, #1
   22fcc:	add	x0, x1, x0
   22fd0:	ldrh	w1, [x0, #8]
   22fd4:	ldr	x2, [sp, #216]
   22fd8:	ldr	w3, [sp, #244]
   22fdc:	mov	x0, #0x3430                	// #13360
   22fe0:	add	x0, x3, x0
   22fe4:	lsl	x0, x0, #1
   22fe8:	add	x0, x2, x0
   22fec:	ldrh	w0, [x0, #8]
   22ff0:	mov	w2, w0
   22ff4:	mov	w0, #0x800                 	// #2048
   22ff8:	sub	w0, w0, w2
   22ffc:	lsr	w0, w0, #5
   23000:	and	w0, w0, #0xffff
   23004:	add	w0, w1, w0
   23008:	and	w3, w0, #0xffff
   2300c:	ldr	x1, [sp, #216]
   23010:	ldr	w2, [sp, #244]
   23014:	mov	x0, #0x3430                	// #13360
   23018:	add	x0, x2, x0
   2301c:	lsl	x0, x0, #1
   23020:	add	x0, x1, x0
   23024:	mov	w1, w3
   23028:	strh	w1, [x0, #8]
   2302c:	ldr	w0, [sp, #244]
   23030:	lsl	w0, w0, #1
   23034:	str	w0, [sp, #244]
   23038:	b	230d4 <lzma_mode_is_supported@@XZ_5.0+0x843c>
   2303c:	ldr	w1, [sp, #96]
   23040:	ldr	w0, [sp, #180]
   23044:	sub	w0, w1, w0
   23048:	str	w0, [sp, #96]
   2304c:	ldr	w1, [sp, #100]
   23050:	ldr	w0, [sp, #180]
   23054:	sub	w0, w1, w0
   23058:	str	w0, [sp, #100]
   2305c:	ldr	x1, [sp, #216]
   23060:	ldr	w2, [sp, #244]
   23064:	mov	x0, #0x3430                	// #13360
   23068:	add	x0, x2, x0
   2306c:	lsl	x0, x0, #1
   23070:	add	x0, x1, x0
   23074:	ldrh	w1, [x0, #8]
   23078:	ldr	x2, [sp, #216]
   2307c:	ldr	w3, [sp, #244]
   23080:	mov	x0, #0x3430                	// #13360
   23084:	add	x0, x3, x0
   23088:	lsl	x0, x0, #1
   2308c:	add	x0, x2, x0
   23090:	ldrh	w0, [x0, #8]
   23094:	lsr	w0, w0, #5
   23098:	and	w0, w0, #0xffff
   2309c:	sub	w0, w1, w0
   230a0:	and	w3, w0, #0xffff
   230a4:	ldr	x1, [sp, #216]
   230a8:	ldr	w2, [sp, #244]
   230ac:	mov	x0, #0x3430                	// #13360
   230b0:	add	x0, x2, x0
   230b4:	lsl	x0, x0, #1
   230b8:	add	x0, x1, x0
   230bc:	mov	w1, w3
   230c0:	strh	w1, [x0, #8]
   230c4:	ldr	w0, [sp, #244]
   230c8:	lsl	w0, w0, #1
   230cc:	add	w0, w0, #0x1
   230d0:	str	w0, [sp, #244]
   230d4:	ldr	w1, [sp, #96]
   230d8:	mov	w0, #0xffffff              	// #16777215
   230dc:	cmp	w1, w0
   230e0:	b.hi	2314c <lzma_mode_is_supported@@XZ_5.0+0x84b4>  // b.pmore
   230e4:	ldr	x1, [sp, #280]
   230e8:	ldr	x0, [sp, #40]
   230ec:	cmp	x1, x0
   230f0:	cset	w0, eq  // eq = none
   230f4:	and	w0, w0, #0xff
   230f8:	and	x0, x0, #0xff
   230fc:	cmp	x0, #0x0
   23100:	b.eq	23118 <lzma_mode_is_supported@@XZ_5.0+0x8480>  // b.none
   23104:	ldr	x0, [sp, #216]
   23108:	add	x0, x0, #0x4, lsl #12
   2310c:	mov	w1, #0x22                  	// #34
   23110:	str	w1, [x0, #11936]
   23114:	b	278fc <lzma_mode_is_supported@@XZ_5.0+0xcc64>
   23118:	ldr	w0, [sp, #96]
   2311c:	lsl	w0, w0, #8
   23120:	str	w0, [sp, #96]
   23124:	ldr	w0, [sp, #100]
   23128:	lsl	w1, w0, #8
   2312c:	ldr	x0, [sp, #280]
   23130:	add	x2, x0, #0x1
   23134:	str	x2, [sp, #280]
   23138:	ldr	x2, [sp, #56]
   2313c:	add	x0, x2, x0
   23140:	ldrb	w0, [x0]
   23144:	orr	w0, w1, w0
   23148:	str	w0, [sp, #100]
   2314c:	ldr	w0, [sp, #96]
   23150:	lsr	w0, w0, #11
   23154:	ldr	x2, [sp, #216]
   23158:	ldr	w3, [sp, #244]
   2315c:	mov	x1, #0x3430                	// #13360
   23160:	add	x1, x3, x1
   23164:	lsl	x1, x1, #1
   23168:	add	x1, x2, x1
   2316c:	ldrh	w1, [x1, #8]
   23170:	mul	w0, w0, w1
   23174:	str	w0, [sp, #180]
   23178:	ldr	w0, [sp, #100]
   2317c:	ldr	w1, [sp, #180]
   23180:	cmp	w1, w0
   23184:	b.ls	23214 <lzma_mode_is_supported@@XZ_5.0+0x857c>  // b.plast
   23188:	ldr	w0, [sp, #180]
   2318c:	str	w0, [sp, #96]
   23190:	ldr	x1, [sp, #216]
   23194:	ldr	w2, [sp, #244]
   23198:	mov	x0, #0x3430                	// #13360
   2319c:	add	x0, x2, x0
   231a0:	lsl	x0, x0, #1
   231a4:	add	x0, x1, x0
   231a8:	ldrh	w1, [x0, #8]
   231ac:	ldr	x2, [sp, #216]
   231b0:	ldr	w3, [sp, #244]
   231b4:	mov	x0, #0x3430                	// #13360
   231b8:	add	x0, x3, x0
   231bc:	lsl	x0, x0, #1
   231c0:	add	x0, x2, x0
   231c4:	ldrh	w0, [x0, #8]
   231c8:	mov	w2, w0
   231cc:	mov	w0, #0x800                 	// #2048
   231d0:	sub	w0, w0, w2
   231d4:	lsr	w0, w0, #5
   231d8:	and	w0, w0, #0xffff
   231dc:	add	w0, w1, w0
   231e0:	and	w3, w0, #0xffff
   231e4:	ldr	x1, [sp, #216]
   231e8:	ldr	w2, [sp, #244]
   231ec:	mov	x0, #0x3430                	// #13360
   231f0:	add	x0, x2, x0
   231f4:	lsl	x0, x0, #1
   231f8:	add	x0, x1, x0
   231fc:	mov	w1, w3
   23200:	strh	w1, [x0, #8]
   23204:	ldr	w0, [sp, #244]
   23208:	lsl	w0, w0, #1
   2320c:	str	w0, [sp, #244]
   23210:	b	232ac <lzma_mode_is_supported@@XZ_5.0+0x8614>
   23214:	ldr	w1, [sp, #96]
   23218:	ldr	w0, [sp, #180]
   2321c:	sub	w0, w1, w0
   23220:	str	w0, [sp, #96]
   23224:	ldr	w1, [sp, #100]
   23228:	ldr	w0, [sp, #180]
   2322c:	sub	w0, w1, w0
   23230:	str	w0, [sp, #100]
   23234:	ldr	x1, [sp, #216]
   23238:	ldr	w2, [sp, #244]
   2323c:	mov	x0, #0x3430                	// #13360
   23240:	add	x0, x2, x0
   23244:	lsl	x0, x0, #1
   23248:	add	x0, x1, x0
   2324c:	ldrh	w1, [x0, #8]
   23250:	ldr	x2, [sp, #216]
   23254:	ldr	w3, [sp, #244]
   23258:	mov	x0, #0x3430                	// #13360
   2325c:	add	x0, x3, x0
   23260:	lsl	x0, x0, #1
   23264:	add	x0, x2, x0
   23268:	ldrh	w0, [x0, #8]
   2326c:	lsr	w0, w0, #5
   23270:	and	w0, w0, #0xffff
   23274:	sub	w0, w1, w0
   23278:	and	w3, w0, #0xffff
   2327c:	ldr	x1, [sp, #216]
   23280:	ldr	w2, [sp, #244]
   23284:	mov	x0, #0x3430                	// #13360
   23288:	add	x0, x2, x0
   2328c:	lsl	x0, x0, #1
   23290:	add	x0, x1, x0
   23294:	mov	w1, w3
   23298:	strh	w1, [x0, #8]
   2329c:	ldr	w0, [sp, #244]
   232a0:	lsl	w0, w0, #1
   232a4:	add	w0, w0, #0x1
   232a8:	str	w0, [sp, #244]
   232ac:	ldr	w1, [sp, #96]
   232b0:	mov	w0, #0xffffff              	// #16777215
   232b4:	cmp	w1, w0
   232b8:	b.hi	23324 <lzma_mode_is_supported@@XZ_5.0+0x868c>  // b.pmore
   232bc:	ldr	x1, [sp, #280]
   232c0:	ldr	x0, [sp, #40]
   232c4:	cmp	x1, x0
   232c8:	cset	w0, eq  // eq = none
   232cc:	and	w0, w0, #0xff
   232d0:	and	x0, x0, #0xff
   232d4:	cmp	x0, #0x0
   232d8:	b.eq	232f0 <lzma_mode_is_supported@@XZ_5.0+0x8658>  // b.none
   232dc:	ldr	x0, [sp, #216]
   232e0:	add	x0, x0, #0x4, lsl #12
   232e4:	mov	w1, #0x23                  	// #35
   232e8:	str	w1, [x0, #11936]
   232ec:	b	278fc <lzma_mode_is_supported@@XZ_5.0+0xcc64>
   232f0:	ldr	w0, [sp, #96]
   232f4:	lsl	w0, w0, #8
   232f8:	str	w0, [sp, #96]
   232fc:	ldr	w0, [sp, #100]
   23300:	lsl	w1, w0, #8
   23304:	ldr	x0, [sp, #280]
   23308:	add	x2, x0, #0x1
   2330c:	str	x2, [sp, #280]
   23310:	ldr	x2, [sp, #56]
   23314:	add	x0, x2, x0
   23318:	ldrb	w0, [x0]
   2331c:	orr	w0, w1, w0
   23320:	str	w0, [sp, #100]
   23324:	ldr	w0, [sp, #96]
   23328:	lsr	w0, w0, #11
   2332c:	ldr	x2, [sp, #216]
   23330:	ldr	w3, [sp, #244]
   23334:	mov	x1, #0x3430                	// #13360
   23338:	add	x1, x3, x1
   2333c:	lsl	x1, x1, #1
   23340:	add	x1, x2, x1
   23344:	ldrh	w1, [x1, #8]
   23348:	mul	w0, w0, w1
   2334c:	str	w0, [sp, #180]
   23350:	ldr	w0, [sp, #100]
   23354:	ldr	w1, [sp, #180]
   23358:	cmp	w1, w0
   2335c:	b.ls	233ec <lzma_mode_is_supported@@XZ_5.0+0x8754>  // b.plast
   23360:	ldr	w0, [sp, #180]
   23364:	str	w0, [sp, #96]
   23368:	ldr	x1, [sp, #216]
   2336c:	ldr	w2, [sp, #244]
   23370:	mov	x0, #0x3430                	// #13360
   23374:	add	x0, x2, x0
   23378:	lsl	x0, x0, #1
   2337c:	add	x0, x1, x0
   23380:	ldrh	w1, [x0, #8]
   23384:	ldr	x2, [sp, #216]
   23388:	ldr	w3, [sp, #244]
   2338c:	mov	x0, #0x3430                	// #13360
   23390:	add	x0, x3, x0
   23394:	lsl	x0, x0, #1
   23398:	add	x0, x2, x0
   2339c:	ldrh	w0, [x0, #8]
   233a0:	mov	w2, w0
   233a4:	mov	w0, #0x800                 	// #2048
   233a8:	sub	w0, w0, w2
   233ac:	lsr	w0, w0, #5
   233b0:	and	w0, w0, #0xffff
   233b4:	add	w0, w1, w0
   233b8:	and	w3, w0, #0xffff
   233bc:	ldr	x1, [sp, #216]
   233c0:	ldr	w2, [sp, #244]
   233c4:	mov	x0, #0x3430                	// #13360
   233c8:	add	x0, x2, x0
   233cc:	lsl	x0, x0, #1
   233d0:	add	x0, x1, x0
   233d4:	mov	w1, w3
   233d8:	strh	w1, [x0, #8]
   233dc:	ldr	w0, [sp, #244]
   233e0:	lsl	w0, w0, #1
   233e4:	str	w0, [sp, #244]
   233e8:	b	23484 <lzma_mode_is_supported@@XZ_5.0+0x87ec>
   233ec:	ldr	w1, [sp, #96]
   233f0:	ldr	w0, [sp, #180]
   233f4:	sub	w0, w1, w0
   233f8:	str	w0, [sp, #96]
   233fc:	ldr	w1, [sp, #100]
   23400:	ldr	w0, [sp, #180]
   23404:	sub	w0, w1, w0
   23408:	str	w0, [sp, #100]
   2340c:	ldr	x1, [sp, #216]
   23410:	ldr	w2, [sp, #244]
   23414:	mov	x0, #0x3430                	// #13360
   23418:	add	x0, x2, x0
   2341c:	lsl	x0, x0, #1
   23420:	add	x0, x1, x0
   23424:	ldrh	w1, [x0, #8]
   23428:	ldr	x2, [sp, #216]
   2342c:	ldr	w3, [sp, #244]
   23430:	mov	x0, #0x3430                	// #13360
   23434:	add	x0, x3, x0
   23438:	lsl	x0, x0, #1
   2343c:	add	x0, x2, x0
   23440:	ldrh	w0, [x0, #8]
   23444:	lsr	w0, w0, #5
   23448:	and	w0, w0, #0xffff
   2344c:	sub	w0, w1, w0
   23450:	and	w3, w0, #0xffff
   23454:	ldr	x1, [sp, #216]
   23458:	ldr	w2, [sp, #244]
   2345c:	mov	x0, #0x3430                	// #13360
   23460:	add	x0, x2, x0
   23464:	lsl	x0, x0, #1
   23468:	add	x0, x1, x0
   2346c:	mov	w1, w3
   23470:	strh	w1, [x0, #8]
   23474:	ldr	w0, [sp, #244]
   23478:	lsl	w0, w0, #1
   2347c:	add	w0, w0, #0x1
   23480:	str	w0, [sp, #244]
   23484:	ldr	w0, [sp, #244]
   23488:	sub	w0, w0, #0xee
   2348c:	str	w0, [sp, #92]
   23490:	ldr	w0, [sp, #92]
   23494:	mov	w1, #0x5                   	// #5
   23498:	cmp	w0, #0x5
   2349c:	csel	w0, w0, w1, ls  // ls = plast
   234a0:	sub	w0, w0, #0x2
   234a4:	mov	w0, w0
   234a8:	lsl	x1, x0, #7
   234ac:	mov	x0, #0x6360                	// #25440
   234b0:	add	x0, x1, x0
   234b4:	ldr	x1, [sp, #216]
   234b8:	add	x0, x1, x0
   234bc:	str	x0, [sp, #248]
   234c0:	mov	w0, #0x1                   	// #1
   234c4:	str	w0, [sp, #244]
   234c8:	ldr	w1, [sp, #96]
   234cc:	mov	w0, #0xffffff              	// #16777215
   234d0:	cmp	w1, w0
   234d4:	b.hi	23540 <lzma_mode_is_supported@@XZ_5.0+0x88a8>  // b.pmore
   234d8:	ldr	x1, [sp, #280]
   234dc:	ldr	x0, [sp, #40]
   234e0:	cmp	x1, x0
   234e4:	cset	w0, eq  // eq = none
   234e8:	and	w0, w0, #0xff
   234ec:	and	x0, x0, #0xff
   234f0:	cmp	x0, #0x0
   234f4:	b.eq	2350c <lzma_mode_is_supported@@XZ_5.0+0x8874>  // b.none
   234f8:	ldr	x0, [sp, #216]
   234fc:	add	x0, x0, #0x4, lsl #12
   23500:	mov	w1, #0x24                  	// #36
   23504:	str	w1, [x0, #11936]
   23508:	b	278fc <lzma_mode_is_supported@@XZ_5.0+0xcc64>
   2350c:	ldr	w0, [sp, #96]
   23510:	lsl	w0, w0, #8
   23514:	str	w0, [sp, #96]
   23518:	ldr	w0, [sp, #100]
   2351c:	lsl	w1, w0, #8
   23520:	ldr	x0, [sp, #280]
   23524:	add	x2, x0, #0x1
   23528:	str	x2, [sp, #280]
   2352c:	ldr	x2, [sp, #56]
   23530:	add	x0, x2, x0
   23534:	ldrb	w0, [x0]
   23538:	orr	w0, w1, w0
   2353c:	str	w0, [sp, #100]
   23540:	ldr	w0, [sp, #96]
   23544:	lsr	w0, w0, #11
   23548:	ldr	w1, [sp, #244]
   2354c:	lsl	x1, x1, #1
   23550:	ldr	x2, [sp, #248]
   23554:	add	x1, x2, x1
   23558:	ldrh	w1, [x1]
   2355c:	mul	w0, w0, w1
   23560:	str	w0, [sp, #180]
   23564:	ldr	w0, [sp, #100]
   23568:	ldr	w1, [sp, #180]
   2356c:	cmp	w1, w0
   23570:	b.ls	235e4 <lzma_mode_is_supported@@XZ_5.0+0x894c>  // b.plast
   23574:	ldr	w0, [sp, #180]
   23578:	str	w0, [sp, #96]
   2357c:	ldr	w0, [sp, #244]
   23580:	lsl	x0, x0, #1
   23584:	ldr	x1, [sp, #248]
   23588:	add	x0, x1, x0
   2358c:	ldrh	w2, [x0]
   23590:	ldr	w0, [sp, #244]
   23594:	lsl	x0, x0, #1
   23598:	ldr	x1, [sp, #248]
   2359c:	add	x0, x1, x0
   235a0:	ldrh	w0, [x0]
   235a4:	mov	w1, w0
   235a8:	mov	w0, #0x800                 	// #2048
   235ac:	sub	w0, w0, w1
   235b0:	lsr	w0, w0, #5
   235b4:	and	w1, w0, #0xffff
   235b8:	ldr	w0, [sp, #244]
   235bc:	lsl	x0, x0, #1
   235c0:	ldr	x3, [sp, #248]
   235c4:	add	x0, x3, x0
   235c8:	add	w1, w2, w1
   235cc:	and	w1, w1, #0xffff
   235d0:	strh	w1, [x0]
   235d4:	ldr	w0, [sp, #244]
   235d8:	lsl	w0, w0, #1
   235dc:	str	w0, [sp, #244]
   235e0:	b	23660 <lzma_mode_is_supported@@XZ_5.0+0x89c8>
   235e4:	ldr	w1, [sp, #96]
   235e8:	ldr	w0, [sp, #180]
   235ec:	sub	w0, w1, w0
   235f0:	str	w0, [sp, #96]
   235f4:	ldr	w1, [sp, #100]
   235f8:	ldr	w0, [sp, #180]
   235fc:	sub	w0, w1, w0
   23600:	str	w0, [sp, #100]
   23604:	ldr	w0, [sp, #244]
   23608:	lsl	x0, x0, #1
   2360c:	ldr	x1, [sp, #248]
   23610:	add	x0, x1, x0
   23614:	ldrh	w2, [x0]
   23618:	ldr	w0, [sp, #244]
   2361c:	lsl	x0, x0, #1
   23620:	ldr	x1, [sp, #248]
   23624:	add	x0, x1, x0
   23628:	ldrh	w0, [x0]
   2362c:	lsr	w0, w0, #5
   23630:	and	w1, w0, #0xffff
   23634:	ldr	w0, [sp, #244]
   23638:	lsl	x0, x0, #1
   2363c:	ldr	x3, [sp, #248]
   23640:	add	x0, x3, x0
   23644:	sub	w1, w2, w1
   23648:	and	w1, w1, #0xffff
   2364c:	strh	w1, [x0]
   23650:	ldr	w0, [sp, #244]
   23654:	lsl	w0, w0, #1
   23658:	add	w0, w0, #0x1
   2365c:	str	w0, [sp, #244]
   23660:	ldr	w1, [sp, #96]
   23664:	mov	w0, #0xffffff              	// #16777215
   23668:	cmp	w1, w0
   2366c:	b.hi	236d8 <lzma_mode_is_supported@@XZ_5.0+0x8a40>  // b.pmore
   23670:	ldr	x1, [sp, #280]
   23674:	ldr	x0, [sp, #40]
   23678:	cmp	x1, x0
   2367c:	cset	w0, eq  // eq = none
   23680:	and	w0, w0, #0xff
   23684:	and	x0, x0, #0xff
   23688:	cmp	x0, #0x0
   2368c:	b.eq	236a4 <lzma_mode_is_supported@@XZ_5.0+0x8a0c>  // b.none
   23690:	ldr	x0, [sp, #216]
   23694:	add	x0, x0, #0x4, lsl #12
   23698:	mov	w1, #0x25                  	// #37
   2369c:	str	w1, [x0, #11936]
   236a0:	b	278fc <lzma_mode_is_supported@@XZ_5.0+0xcc64>
   236a4:	ldr	w0, [sp, #96]
   236a8:	lsl	w0, w0, #8
   236ac:	str	w0, [sp, #96]
   236b0:	ldr	w0, [sp, #100]
   236b4:	lsl	w1, w0, #8
   236b8:	ldr	x0, [sp, #280]
   236bc:	add	x2, x0, #0x1
   236c0:	str	x2, [sp, #280]
   236c4:	ldr	x2, [sp, #56]
   236c8:	add	x0, x2, x0
   236cc:	ldrb	w0, [x0]
   236d0:	orr	w0, w1, w0
   236d4:	str	w0, [sp, #100]
   236d8:	ldr	w0, [sp, #96]
   236dc:	lsr	w0, w0, #11
   236e0:	ldr	w1, [sp, #244]
   236e4:	lsl	x1, x1, #1
   236e8:	ldr	x2, [sp, #248]
   236ec:	add	x1, x2, x1
   236f0:	ldrh	w1, [x1]
   236f4:	mul	w0, w0, w1
   236f8:	str	w0, [sp, #180]
   236fc:	ldr	w0, [sp, #100]
   23700:	ldr	w1, [sp, #180]
   23704:	cmp	w1, w0
   23708:	b.ls	2377c <lzma_mode_is_supported@@XZ_5.0+0x8ae4>  // b.plast
   2370c:	ldr	w0, [sp, #180]
   23710:	str	w0, [sp, #96]
   23714:	ldr	w0, [sp, #244]
   23718:	lsl	x0, x0, #1
   2371c:	ldr	x1, [sp, #248]
   23720:	add	x0, x1, x0
   23724:	ldrh	w2, [x0]
   23728:	ldr	w0, [sp, #244]
   2372c:	lsl	x0, x0, #1
   23730:	ldr	x1, [sp, #248]
   23734:	add	x0, x1, x0
   23738:	ldrh	w0, [x0]
   2373c:	mov	w1, w0
   23740:	mov	w0, #0x800                 	// #2048
   23744:	sub	w0, w0, w1
   23748:	lsr	w0, w0, #5
   2374c:	and	w1, w0, #0xffff
   23750:	ldr	w0, [sp, #244]
   23754:	lsl	x0, x0, #1
   23758:	ldr	x3, [sp, #248]
   2375c:	add	x0, x3, x0
   23760:	add	w1, w2, w1
   23764:	and	w1, w1, #0xffff
   23768:	strh	w1, [x0]
   2376c:	ldr	w0, [sp, #244]
   23770:	lsl	w0, w0, #1
   23774:	str	w0, [sp, #244]
   23778:	b	237f8 <lzma_mode_is_supported@@XZ_5.0+0x8b60>
   2377c:	ldr	w1, [sp, #96]
   23780:	ldr	w0, [sp, #180]
   23784:	sub	w0, w1, w0
   23788:	str	w0, [sp, #96]
   2378c:	ldr	w1, [sp, #100]
   23790:	ldr	w0, [sp, #180]
   23794:	sub	w0, w1, w0
   23798:	str	w0, [sp, #100]
   2379c:	ldr	w0, [sp, #244]
   237a0:	lsl	x0, x0, #1
   237a4:	ldr	x1, [sp, #248]
   237a8:	add	x0, x1, x0
   237ac:	ldrh	w2, [x0]
   237b0:	ldr	w0, [sp, #244]
   237b4:	lsl	x0, x0, #1
   237b8:	ldr	x1, [sp, #248]
   237bc:	add	x0, x1, x0
   237c0:	ldrh	w0, [x0]
   237c4:	lsr	w0, w0, #5
   237c8:	and	w1, w0, #0xffff
   237cc:	ldr	w0, [sp, #244]
   237d0:	lsl	x0, x0, #1
   237d4:	ldr	x3, [sp, #248]
   237d8:	add	x0, x3, x0
   237dc:	sub	w1, w2, w1
   237e0:	and	w1, w1, #0xffff
   237e4:	strh	w1, [x0]
   237e8:	ldr	w0, [sp, #244]
   237ec:	lsl	w0, w0, #1
   237f0:	add	w0, w0, #0x1
   237f4:	str	w0, [sp, #244]
   237f8:	ldr	w1, [sp, #96]
   237fc:	mov	w0, #0xffffff              	// #16777215
   23800:	cmp	w1, w0
   23804:	b.hi	23870 <lzma_mode_is_supported@@XZ_5.0+0x8bd8>  // b.pmore
   23808:	ldr	x1, [sp, #280]
   2380c:	ldr	x0, [sp, #40]
   23810:	cmp	x1, x0
   23814:	cset	w0, eq  // eq = none
   23818:	and	w0, w0, #0xff
   2381c:	and	x0, x0, #0xff
   23820:	cmp	x0, #0x0
   23824:	b.eq	2383c <lzma_mode_is_supported@@XZ_5.0+0x8ba4>  // b.none
   23828:	ldr	x0, [sp, #216]
   2382c:	add	x0, x0, #0x4, lsl #12
   23830:	mov	w1, #0x26                  	// #38
   23834:	str	w1, [x0, #11936]
   23838:	b	278fc <lzma_mode_is_supported@@XZ_5.0+0xcc64>
   2383c:	ldr	w0, [sp, #96]
   23840:	lsl	w0, w0, #8
   23844:	str	w0, [sp, #96]
   23848:	ldr	w0, [sp, #100]
   2384c:	lsl	w1, w0, #8
   23850:	ldr	x0, [sp, #280]
   23854:	add	x2, x0, #0x1
   23858:	str	x2, [sp, #280]
   2385c:	ldr	x2, [sp, #56]
   23860:	add	x0, x2, x0
   23864:	ldrb	w0, [x0]
   23868:	orr	w0, w1, w0
   2386c:	str	w0, [sp, #100]
   23870:	ldr	w0, [sp, #96]
   23874:	lsr	w0, w0, #11
   23878:	ldr	w1, [sp, #244]
   2387c:	lsl	x1, x1, #1
   23880:	ldr	x2, [sp, #248]
   23884:	add	x1, x2, x1
   23888:	ldrh	w1, [x1]
   2388c:	mul	w0, w0, w1
   23890:	str	w0, [sp, #180]
   23894:	ldr	w0, [sp, #100]
   23898:	ldr	w1, [sp, #180]
   2389c:	cmp	w1, w0
   238a0:	b.ls	23914 <lzma_mode_is_supported@@XZ_5.0+0x8c7c>  // b.plast
   238a4:	ldr	w0, [sp, #180]
   238a8:	str	w0, [sp, #96]
   238ac:	ldr	w0, [sp, #244]
   238b0:	lsl	x0, x0, #1
   238b4:	ldr	x1, [sp, #248]
   238b8:	add	x0, x1, x0
   238bc:	ldrh	w2, [x0]
   238c0:	ldr	w0, [sp, #244]
   238c4:	lsl	x0, x0, #1
   238c8:	ldr	x1, [sp, #248]
   238cc:	add	x0, x1, x0
   238d0:	ldrh	w0, [x0]
   238d4:	mov	w1, w0
   238d8:	mov	w0, #0x800                 	// #2048
   238dc:	sub	w0, w0, w1
   238e0:	lsr	w0, w0, #5
   238e4:	and	w1, w0, #0xffff
   238e8:	ldr	w0, [sp, #244]
   238ec:	lsl	x0, x0, #1
   238f0:	ldr	x3, [sp, #248]
   238f4:	add	x0, x3, x0
   238f8:	add	w1, w2, w1
   238fc:	and	w1, w1, #0xffff
   23900:	strh	w1, [x0]
   23904:	ldr	w0, [sp, #244]
   23908:	lsl	w0, w0, #1
   2390c:	str	w0, [sp, #244]
   23910:	b	23990 <lzma_mode_is_supported@@XZ_5.0+0x8cf8>
   23914:	ldr	w1, [sp, #96]
   23918:	ldr	w0, [sp, #180]
   2391c:	sub	w0, w1, w0
   23920:	str	w0, [sp, #96]
   23924:	ldr	w1, [sp, #100]
   23928:	ldr	w0, [sp, #180]
   2392c:	sub	w0, w1, w0
   23930:	str	w0, [sp, #100]
   23934:	ldr	w0, [sp, #244]
   23938:	lsl	x0, x0, #1
   2393c:	ldr	x1, [sp, #248]
   23940:	add	x0, x1, x0
   23944:	ldrh	w2, [x0]
   23948:	ldr	w0, [sp, #244]
   2394c:	lsl	x0, x0, #1
   23950:	ldr	x1, [sp, #248]
   23954:	add	x0, x1, x0
   23958:	ldrh	w0, [x0]
   2395c:	lsr	w0, w0, #5
   23960:	and	w1, w0, #0xffff
   23964:	ldr	w0, [sp, #244]
   23968:	lsl	x0, x0, #1
   2396c:	ldr	x3, [sp, #248]
   23970:	add	x0, x3, x0
   23974:	sub	w1, w2, w1
   23978:	and	w1, w1, #0xffff
   2397c:	strh	w1, [x0]
   23980:	ldr	w0, [sp, #244]
   23984:	lsl	w0, w0, #1
   23988:	add	w0, w0, #0x1
   2398c:	str	w0, [sp, #244]
   23990:	ldr	w1, [sp, #96]
   23994:	mov	w0, #0xffffff              	// #16777215
   23998:	cmp	w1, w0
   2399c:	b.hi	23a08 <lzma_mode_is_supported@@XZ_5.0+0x8d70>  // b.pmore
   239a0:	ldr	x1, [sp, #280]
   239a4:	ldr	x0, [sp, #40]
   239a8:	cmp	x1, x0
   239ac:	cset	w0, eq  // eq = none
   239b0:	and	w0, w0, #0xff
   239b4:	and	x0, x0, #0xff
   239b8:	cmp	x0, #0x0
   239bc:	b.eq	239d4 <lzma_mode_is_supported@@XZ_5.0+0x8d3c>  // b.none
   239c0:	ldr	x0, [sp, #216]
   239c4:	add	x0, x0, #0x4, lsl #12
   239c8:	mov	w1, #0x27                  	// #39
   239cc:	str	w1, [x0, #11936]
   239d0:	b	278fc <lzma_mode_is_supported@@XZ_5.0+0xcc64>
   239d4:	ldr	w0, [sp, #96]
   239d8:	lsl	w0, w0, #8
   239dc:	str	w0, [sp, #96]
   239e0:	ldr	w0, [sp, #100]
   239e4:	lsl	w1, w0, #8
   239e8:	ldr	x0, [sp, #280]
   239ec:	add	x2, x0, #0x1
   239f0:	str	x2, [sp, #280]
   239f4:	ldr	x2, [sp, #56]
   239f8:	add	x0, x2, x0
   239fc:	ldrb	w0, [x0]
   23a00:	orr	w0, w1, w0
   23a04:	str	w0, [sp, #100]
   23a08:	ldr	w0, [sp, #96]
   23a0c:	lsr	w0, w0, #11
   23a10:	ldr	w1, [sp, #244]
   23a14:	lsl	x1, x1, #1
   23a18:	ldr	x2, [sp, #248]
   23a1c:	add	x1, x2, x1
   23a20:	ldrh	w1, [x1]
   23a24:	mul	w0, w0, w1
   23a28:	str	w0, [sp, #180]
   23a2c:	ldr	w0, [sp, #100]
   23a30:	ldr	w1, [sp, #180]
   23a34:	cmp	w1, w0
   23a38:	b.ls	23aac <lzma_mode_is_supported@@XZ_5.0+0x8e14>  // b.plast
   23a3c:	ldr	w0, [sp, #180]
   23a40:	str	w0, [sp, #96]
   23a44:	ldr	w0, [sp, #244]
   23a48:	lsl	x0, x0, #1
   23a4c:	ldr	x1, [sp, #248]
   23a50:	add	x0, x1, x0
   23a54:	ldrh	w2, [x0]
   23a58:	ldr	w0, [sp, #244]
   23a5c:	lsl	x0, x0, #1
   23a60:	ldr	x1, [sp, #248]
   23a64:	add	x0, x1, x0
   23a68:	ldrh	w0, [x0]
   23a6c:	mov	w1, w0
   23a70:	mov	w0, #0x800                 	// #2048
   23a74:	sub	w0, w0, w1
   23a78:	lsr	w0, w0, #5
   23a7c:	and	w1, w0, #0xffff
   23a80:	ldr	w0, [sp, #244]
   23a84:	lsl	x0, x0, #1
   23a88:	ldr	x3, [sp, #248]
   23a8c:	add	x0, x3, x0
   23a90:	add	w1, w2, w1
   23a94:	and	w1, w1, #0xffff
   23a98:	strh	w1, [x0]
   23a9c:	ldr	w0, [sp, #244]
   23aa0:	lsl	w0, w0, #1
   23aa4:	str	w0, [sp, #244]
   23aa8:	b	23b28 <lzma_mode_is_supported@@XZ_5.0+0x8e90>
   23aac:	ldr	w1, [sp, #96]
   23ab0:	ldr	w0, [sp, #180]
   23ab4:	sub	w0, w1, w0
   23ab8:	str	w0, [sp, #96]
   23abc:	ldr	w1, [sp, #100]
   23ac0:	ldr	w0, [sp, #180]
   23ac4:	sub	w0, w1, w0
   23ac8:	str	w0, [sp, #100]
   23acc:	ldr	w0, [sp, #244]
   23ad0:	lsl	x0, x0, #1
   23ad4:	ldr	x1, [sp, #248]
   23ad8:	add	x0, x1, x0
   23adc:	ldrh	w2, [x0]
   23ae0:	ldr	w0, [sp, #244]
   23ae4:	lsl	x0, x0, #1
   23ae8:	ldr	x1, [sp, #248]
   23aec:	add	x0, x1, x0
   23af0:	ldrh	w0, [x0]
   23af4:	lsr	w0, w0, #5
   23af8:	and	w1, w0, #0xffff
   23afc:	ldr	w0, [sp, #244]
   23b00:	lsl	x0, x0, #1
   23b04:	ldr	x3, [sp, #248]
   23b08:	add	x0, x3, x0
   23b0c:	sub	w1, w2, w1
   23b10:	and	w1, w1, #0xffff
   23b14:	strh	w1, [x0]
   23b18:	ldr	w0, [sp, #244]
   23b1c:	lsl	w0, w0, #1
   23b20:	add	w0, w0, #0x1
   23b24:	str	w0, [sp, #244]
   23b28:	ldr	w1, [sp, #96]
   23b2c:	mov	w0, #0xffffff              	// #16777215
   23b30:	cmp	w1, w0
   23b34:	b.hi	23ba0 <lzma_mode_is_supported@@XZ_5.0+0x8f08>  // b.pmore
   23b38:	ldr	x1, [sp, #280]
   23b3c:	ldr	x0, [sp, #40]
   23b40:	cmp	x1, x0
   23b44:	cset	w0, eq  // eq = none
   23b48:	and	w0, w0, #0xff
   23b4c:	and	x0, x0, #0xff
   23b50:	cmp	x0, #0x0
   23b54:	b.eq	23b6c <lzma_mode_is_supported@@XZ_5.0+0x8ed4>  // b.none
   23b58:	ldr	x0, [sp, #216]
   23b5c:	add	x0, x0, #0x4, lsl #12
   23b60:	mov	w1, #0x28                  	// #40
   23b64:	str	w1, [x0, #11936]
   23b68:	b	278fc <lzma_mode_is_supported@@XZ_5.0+0xcc64>
   23b6c:	ldr	w0, [sp, #96]
   23b70:	lsl	w0, w0, #8
   23b74:	str	w0, [sp, #96]
   23b78:	ldr	w0, [sp, #100]
   23b7c:	lsl	w1, w0, #8
   23b80:	ldr	x0, [sp, #280]
   23b84:	add	x2, x0, #0x1
   23b88:	str	x2, [sp, #280]
   23b8c:	ldr	x2, [sp, #56]
   23b90:	add	x0, x2, x0
   23b94:	ldrb	w0, [x0]
   23b98:	orr	w0, w1, w0
   23b9c:	str	w0, [sp, #100]
   23ba0:	ldr	w0, [sp, #96]
   23ba4:	lsr	w0, w0, #11
   23ba8:	ldr	w1, [sp, #244]
   23bac:	lsl	x1, x1, #1
   23bb0:	ldr	x2, [sp, #248]
   23bb4:	add	x1, x2, x1
   23bb8:	ldrh	w1, [x1]
   23bbc:	mul	w0, w0, w1
   23bc0:	str	w0, [sp, #180]
   23bc4:	ldr	w0, [sp, #100]
   23bc8:	ldr	w1, [sp, #180]
   23bcc:	cmp	w1, w0
   23bd0:	b.ls	23c44 <lzma_mode_is_supported@@XZ_5.0+0x8fac>  // b.plast
   23bd4:	ldr	w0, [sp, #180]
   23bd8:	str	w0, [sp, #96]
   23bdc:	ldr	w0, [sp, #244]
   23be0:	lsl	x0, x0, #1
   23be4:	ldr	x1, [sp, #248]
   23be8:	add	x0, x1, x0
   23bec:	ldrh	w2, [x0]
   23bf0:	ldr	w0, [sp, #244]
   23bf4:	lsl	x0, x0, #1
   23bf8:	ldr	x1, [sp, #248]
   23bfc:	add	x0, x1, x0
   23c00:	ldrh	w0, [x0]
   23c04:	mov	w1, w0
   23c08:	mov	w0, #0x800                 	// #2048
   23c0c:	sub	w0, w0, w1
   23c10:	lsr	w0, w0, #5
   23c14:	and	w1, w0, #0xffff
   23c18:	ldr	w0, [sp, #244]
   23c1c:	lsl	x0, x0, #1
   23c20:	ldr	x3, [sp, #248]
   23c24:	add	x0, x3, x0
   23c28:	add	w1, w2, w1
   23c2c:	and	w1, w1, #0xffff
   23c30:	strh	w1, [x0]
   23c34:	ldr	w0, [sp, #244]
   23c38:	lsl	w0, w0, #1
   23c3c:	str	w0, [sp, #244]
   23c40:	b	23cc0 <lzma_mode_is_supported@@XZ_5.0+0x9028>
   23c44:	ldr	w1, [sp, #96]
   23c48:	ldr	w0, [sp, #180]
   23c4c:	sub	w0, w1, w0
   23c50:	str	w0, [sp, #96]
   23c54:	ldr	w1, [sp, #100]
   23c58:	ldr	w0, [sp, #180]
   23c5c:	sub	w0, w1, w0
   23c60:	str	w0, [sp, #100]
   23c64:	ldr	w0, [sp, #244]
   23c68:	lsl	x0, x0, #1
   23c6c:	ldr	x1, [sp, #248]
   23c70:	add	x0, x1, x0
   23c74:	ldrh	w2, [x0]
   23c78:	ldr	w0, [sp, #244]
   23c7c:	lsl	x0, x0, #1
   23c80:	ldr	x1, [sp, #248]
   23c84:	add	x0, x1, x0
   23c88:	ldrh	w0, [x0]
   23c8c:	lsr	w0, w0, #5
   23c90:	and	w1, w0, #0xffff
   23c94:	ldr	w0, [sp, #244]
   23c98:	lsl	x0, x0, #1
   23c9c:	ldr	x3, [sp, #248]
   23ca0:	add	x0, x3, x0
   23ca4:	sub	w1, w2, w1
   23ca8:	and	w1, w1, #0xffff
   23cac:	strh	w1, [x0]
   23cb0:	ldr	w0, [sp, #244]
   23cb4:	lsl	w0, w0, #1
   23cb8:	add	w0, w0, #0x1
   23cbc:	str	w0, [sp, #244]
   23cc0:	ldr	w1, [sp, #96]
   23cc4:	mov	w0, #0xffffff              	// #16777215
   23cc8:	cmp	w1, w0
   23ccc:	b.hi	23d38 <lzma_mode_is_supported@@XZ_5.0+0x90a0>  // b.pmore
   23cd0:	ldr	x1, [sp, #280]
   23cd4:	ldr	x0, [sp, #40]
   23cd8:	cmp	x1, x0
   23cdc:	cset	w0, eq  // eq = none
   23ce0:	and	w0, w0, #0xff
   23ce4:	and	x0, x0, #0xff
   23ce8:	cmp	x0, #0x0
   23cec:	b.eq	23d04 <lzma_mode_is_supported@@XZ_5.0+0x906c>  // b.none
   23cf0:	ldr	x0, [sp, #216]
   23cf4:	add	x0, x0, #0x4, lsl #12
   23cf8:	mov	w1, #0x29                  	// #41
   23cfc:	str	w1, [x0, #11936]
   23d00:	b	278fc <lzma_mode_is_supported@@XZ_5.0+0xcc64>
   23d04:	ldr	w0, [sp, #96]
   23d08:	lsl	w0, w0, #8
   23d0c:	str	w0, [sp, #96]
   23d10:	ldr	w0, [sp, #100]
   23d14:	lsl	w1, w0, #8
   23d18:	ldr	x0, [sp, #280]
   23d1c:	add	x2, x0, #0x1
   23d20:	str	x2, [sp, #280]
   23d24:	ldr	x2, [sp, #56]
   23d28:	add	x0, x2, x0
   23d2c:	ldrb	w0, [x0]
   23d30:	orr	w0, w1, w0
   23d34:	str	w0, [sp, #100]
   23d38:	ldr	w0, [sp, #96]
   23d3c:	lsr	w0, w0, #11
   23d40:	ldr	w1, [sp, #244]
   23d44:	lsl	x1, x1, #1
   23d48:	ldr	x2, [sp, #248]
   23d4c:	add	x1, x2, x1
   23d50:	ldrh	w1, [x1]
   23d54:	mul	w0, w0, w1
   23d58:	str	w0, [sp, #180]
   23d5c:	ldr	w0, [sp, #100]
   23d60:	ldr	w1, [sp, #180]
   23d64:	cmp	w1, w0
   23d68:	b.ls	23ddc <lzma_mode_is_supported@@XZ_5.0+0x9144>  // b.plast
   23d6c:	ldr	w0, [sp, #180]
   23d70:	str	w0, [sp, #96]
   23d74:	ldr	w0, [sp, #244]
   23d78:	lsl	x0, x0, #1
   23d7c:	ldr	x1, [sp, #248]
   23d80:	add	x0, x1, x0
   23d84:	ldrh	w2, [x0]
   23d88:	ldr	w0, [sp, #244]
   23d8c:	lsl	x0, x0, #1
   23d90:	ldr	x1, [sp, #248]
   23d94:	add	x0, x1, x0
   23d98:	ldrh	w0, [x0]
   23d9c:	mov	w1, w0
   23da0:	mov	w0, #0x800                 	// #2048
   23da4:	sub	w0, w0, w1
   23da8:	lsr	w0, w0, #5
   23dac:	and	w1, w0, #0xffff
   23db0:	ldr	w0, [sp, #244]
   23db4:	lsl	x0, x0, #1
   23db8:	ldr	x3, [sp, #248]
   23dbc:	add	x0, x3, x0
   23dc0:	add	w1, w2, w1
   23dc4:	and	w1, w1, #0xffff
   23dc8:	strh	w1, [x0]
   23dcc:	ldr	w0, [sp, #244]
   23dd0:	lsl	w0, w0, #1
   23dd4:	str	w0, [sp, #244]
   23dd8:	b	23e58 <lzma_mode_is_supported@@XZ_5.0+0x91c0>
   23ddc:	ldr	w1, [sp, #96]
   23de0:	ldr	w0, [sp, #180]
   23de4:	sub	w0, w1, w0
   23de8:	str	w0, [sp, #96]
   23dec:	ldr	w1, [sp, #100]
   23df0:	ldr	w0, [sp, #180]
   23df4:	sub	w0, w1, w0
   23df8:	str	w0, [sp, #100]
   23dfc:	ldr	w0, [sp, #244]
   23e00:	lsl	x0, x0, #1
   23e04:	ldr	x1, [sp, #248]
   23e08:	add	x0, x1, x0
   23e0c:	ldrh	w2, [x0]
   23e10:	ldr	w0, [sp, #244]
   23e14:	lsl	x0, x0, #1
   23e18:	ldr	x1, [sp, #248]
   23e1c:	add	x0, x1, x0
   23e20:	ldrh	w0, [x0]
   23e24:	lsr	w0, w0, #5
   23e28:	and	w1, w0, #0xffff
   23e2c:	ldr	w0, [sp, #244]
   23e30:	lsl	x0, x0, #1
   23e34:	ldr	x3, [sp, #248]
   23e38:	add	x0, x3, x0
   23e3c:	sub	w1, w2, w1
   23e40:	and	w1, w1, #0xffff
   23e44:	strh	w1, [x0]
   23e48:	ldr	w0, [sp, #244]
   23e4c:	lsl	w0, w0, #1
   23e50:	add	w0, w0, #0x1
   23e54:	str	w0, [sp, #244]
   23e58:	ldr	w0, [sp, #244]
   23e5c:	sub	w0, w0, #0x40
   23e60:	str	w0, [sp, #244]
   23e64:	ldr	w0, [sp, #244]
   23e68:	cmp	w0, #0x3
   23e6c:	b.hi	23e7c <lzma_mode_is_supported@@XZ_5.0+0x91e4>  // b.pmore
   23e70:	ldr	w0, [sp, #244]
   23e74:	str	w0, [sp, #272]
   23e78:	b	2513c <lzma_mode_is_supported@@XZ_5.0+0xa4a4>
   23e7c:	ldr	w0, [sp, #244]
   23e80:	lsr	w0, w0, #1
   23e84:	sub	w0, w0, #0x1
   23e88:	str	w0, [sp, #240]
   23e8c:	ldr	w0, [sp, #244]
   23e90:	and	w0, w0, #0x1
   23e94:	add	w0, w0, #0x2
   23e98:	str	w0, [sp, #272]
   23e9c:	ldr	w0, [sp, #244]
   23ea0:	cmp	w0, #0xd
   23ea4:	b.hi	2480c <lzma_mode_is_supported@@XZ_5.0+0x9b74>  // b.pmore
   23ea8:	ldr	w0, [sp, #240]
   23eac:	ldr	w1, [sp, #272]
   23eb0:	lsl	w0, w1, w0
   23eb4:	str	w0, [sp, #272]
   23eb8:	ldr	x1, [sp, #216]
   23ebc:	mov	x0, #0x6560                	// #25952
   23ec0:	add	x1, x1, x0
   23ec4:	ldr	w2, [sp, #272]
   23ec8:	ldr	w0, [sp, #244]
   23ecc:	sub	x0, x2, x0
   23ed0:	lsl	x0, x0, #1
   23ed4:	sub	x0, x0, #0x2
   23ed8:	add	x0, x1, x0
   23edc:	str	x0, [sp, #248]
   23ee0:	mov	w0, #0x1                   	// #1
   23ee4:	str	w0, [sp, #244]
   23ee8:	str	wzr, [sp, #236]
   23eec:	ldr	w0, [sp, #240]
   23ef0:	cmp	w0, #0x5
   23ef4:	b.eq	23f50 <lzma_mode_is_supported@@XZ_5.0+0x92b8>  // b.none
   23ef8:	ldr	w0, [sp, #240]
   23efc:	cmp	w0, #0x5
   23f00:	b.hi	2513c <lzma_mode_is_supported@@XZ_5.0+0xa4a4>  // b.pmore
   23f04:	ldr	w0, [sp, #240]
   23f08:	cmp	w0, #0x4
   23f0c:	b.eq	2410c <lzma_mode_is_supported@@XZ_5.0+0x9474>  // b.none
   23f10:	ldr	w0, [sp, #240]
   23f14:	cmp	w0, #0x4
   23f18:	b.hi	2513c <lzma_mode_is_supported@@XZ_5.0+0xa4a4>  // b.pmore
   23f1c:	ldr	w0, [sp, #240]
   23f20:	cmp	w0, #0x3
   23f24:	b.eq	242d8 <lzma_mode_is_supported@@XZ_5.0+0x9640>  // b.none
   23f28:	ldr	w0, [sp, #240]
   23f2c:	cmp	w0, #0x3
   23f30:	b.hi	2513c <lzma_mode_is_supported@@XZ_5.0+0xa4a4>  // b.pmore
   23f34:	ldr	w0, [sp, #240]
   23f38:	cmp	w0, #0x1
   23f3c:	b.eq	24670 <lzma_mode_is_supported@@XZ_5.0+0x99d8>  // b.none
   23f40:	ldr	w0, [sp, #240]
   23f44:	cmp	w0, #0x2
   23f48:	b.eq	244a4 <lzma_mode_is_supported@@XZ_5.0+0x980c>  // b.none
   23f4c:	b	2513c <lzma_mode_is_supported@@XZ_5.0+0xa4a4>
   23f50:	ldr	w1, [sp, #96]
   23f54:	mov	w0, #0xffffff              	// #16777215
   23f58:	cmp	w1, w0
   23f5c:	b.hi	23fc8 <lzma_mode_is_supported@@XZ_5.0+0x9330>  // b.pmore
   23f60:	ldr	x1, [sp, #280]
   23f64:	ldr	x0, [sp, #40]
   23f68:	cmp	x1, x0
   23f6c:	cset	w0, eq  // eq = none
   23f70:	and	w0, w0, #0xff
   23f74:	and	x0, x0, #0xff
   23f78:	cmp	x0, #0x0
   23f7c:	b.eq	23f94 <lzma_mode_is_supported@@XZ_5.0+0x92fc>  // b.none
   23f80:	ldr	x0, [sp, #216]
   23f84:	add	x0, x0, #0x4, lsl #12
   23f88:	mov	w1, #0x2a                  	// #42
   23f8c:	str	w1, [x0, #11936]
   23f90:	b	278fc <lzma_mode_is_supported@@XZ_5.0+0xcc64>
   23f94:	ldr	w0, [sp, #96]
   23f98:	lsl	w0, w0, #8
   23f9c:	str	w0, [sp, #96]
   23fa0:	ldr	w0, [sp, #100]
   23fa4:	lsl	w1, w0, #8
   23fa8:	ldr	x0, [sp, #280]
   23fac:	add	x2, x0, #0x1
   23fb0:	str	x2, [sp, #280]
   23fb4:	ldr	x2, [sp, #56]
   23fb8:	add	x0, x2, x0
   23fbc:	ldrb	w0, [x0]
   23fc0:	orr	w0, w1, w0
   23fc4:	str	w0, [sp, #100]
   23fc8:	ldr	w0, [sp, #96]
   23fcc:	lsr	w0, w0, #11
   23fd0:	ldr	w1, [sp, #244]
   23fd4:	lsl	x1, x1, #1
   23fd8:	ldr	x2, [sp, #248]
   23fdc:	add	x1, x2, x1
   23fe0:	ldrh	w1, [x1]
   23fe4:	mul	w0, w0, w1
   23fe8:	str	w0, [sp, #180]
   23fec:	ldr	w0, [sp, #100]
   23ff0:	ldr	w1, [sp, #180]
   23ff4:	cmp	w1, w0
   23ff8:	b.ls	2406c <lzma_mode_is_supported@@XZ_5.0+0x93d4>  // b.plast
   23ffc:	ldr	w0, [sp, #180]
   24000:	str	w0, [sp, #96]
   24004:	ldr	w0, [sp, #244]
   24008:	lsl	x0, x0, #1
   2400c:	ldr	x1, [sp, #248]
   24010:	add	x0, x1, x0
   24014:	ldrh	w2, [x0]
   24018:	ldr	w0, [sp, #244]
   2401c:	lsl	x0, x0, #1
   24020:	ldr	x1, [sp, #248]
   24024:	add	x0, x1, x0
   24028:	ldrh	w0, [x0]
   2402c:	mov	w1, w0
   24030:	mov	w0, #0x800                 	// #2048
   24034:	sub	w0, w0, w1
   24038:	lsr	w0, w0, #5
   2403c:	and	w1, w0, #0xffff
   24040:	ldr	w0, [sp, #244]
   24044:	lsl	x0, x0, #1
   24048:	ldr	x3, [sp, #248]
   2404c:	add	x0, x3, x0
   24050:	add	w1, w2, w1
   24054:	and	w1, w1, #0xffff
   24058:	strh	w1, [x0]
   2405c:	ldr	w0, [sp, #244]
   24060:	lsl	w0, w0, #1
   24064:	str	w0, [sp, #244]
   24068:	b	240f4 <lzma_mode_is_supported@@XZ_5.0+0x945c>
   2406c:	ldr	w1, [sp, #96]
   24070:	ldr	w0, [sp, #180]
   24074:	sub	w0, w1, w0
   24078:	str	w0, [sp, #96]
   2407c:	ldr	w1, [sp, #100]
   24080:	ldr	w0, [sp, #180]
   24084:	sub	w0, w1, w0
   24088:	str	w0, [sp, #100]
   2408c:	ldr	w0, [sp, #244]
   24090:	lsl	x0, x0, #1
   24094:	ldr	x1, [sp, #248]
   24098:	add	x0, x1, x0
   2409c:	ldrh	w2, [x0]
   240a0:	ldr	w0, [sp, #244]
   240a4:	lsl	x0, x0, #1
   240a8:	ldr	x1, [sp, #248]
   240ac:	add	x0, x1, x0
   240b0:	ldrh	w0, [x0]
   240b4:	lsr	w0, w0, #5
   240b8:	and	w1, w0, #0xffff
   240bc:	ldr	w0, [sp, #244]
   240c0:	lsl	x0, x0, #1
   240c4:	ldr	x3, [sp, #248]
   240c8:	add	x0, x3, x0
   240cc:	sub	w1, w2, w1
   240d0:	and	w1, w1, #0xffff
   240d4:	strh	w1, [x0]
   240d8:	ldr	w0, [sp, #244]
   240dc:	lsl	w0, w0, #1
   240e0:	add	w0, w0, #0x1
   240e4:	str	w0, [sp, #244]
   240e8:	ldr	w0, [sp, #272]
   240ec:	add	w0, w0, #0x1
   240f0:	str	w0, [sp, #272]
   240f4:	ldr	w0, [sp, #236]
   240f8:	add	w0, w0, #0x1
   240fc:	str	w0, [sp, #236]
   24100:	ldr	w0, [sp, #240]
   24104:	sub	w0, w0, #0x1
   24108:	str	w0, [sp, #240]
   2410c:	ldr	w1, [sp, #96]
   24110:	mov	w0, #0xffffff              	// #16777215
   24114:	cmp	w1, w0
   24118:	b.hi	24184 <lzma_mode_is_supported@@XZ_5.0+0x94ec>  // b.pmore
   2411c:	ldr	x1, [sp, #280]
   24120:	ldr	x0, [sp, #40]
   24124:	cmp	x1, x0
   24128:	cset	w0, eq  // eq = none
   2412c:	and	w0, w0, #0xff
   24130:	and	x0, x0, #0xff
   24134:	cmp	x0, #0x0
   24138:	b.eq	24150 <lzma_mode_is_supported@@XZ_5.0+0x94b8>  // b.none
   2413c:	ldr	x0, [sp, #216]
   24140:	add	x0, x0, #0x4, lsl #12
   24144:	mov	w1, #0x2a                  	// #42
   24148:	str	w1, [x0, #11936]
   2414c:	b	278fc <lzma_mode_is_supported@@XZ_5.0+0xcc64>
   24150:	ldr	w0, [sp, #96]
   24154:	lsl	w0, w0, #8
   24158:	str	w0, [sp, #96]
   2415c:	ldr	w0, [sp, #100]
   24160:	lsl	w1, w0, #8
   24164:	ldr	x0, [sp, #280]
   24168:	add	x2, x0, #0x1
   2416c:	str	x2, [sp, #280]
   24170:	ldr	x2, [sp, #56]
   24174:	add	x0, x2, x0
   24178:	ldrb	w0, [x0]
   2417c:	orr	w0, w1, w0
   24180:	str	w0, [sp, #100]
   24184:	ldr	w0, [sp, #96]
   24188:	lsr	w0, w0, #11
   2418c:	ldr	w1, [sp, #244]
   24190:	lsl	x1, x1, #1
   24194:	ldr	x2, [sp, #248]
   24198:	add	x1, x2, x1
   2419c:	ldrh	w1, [x1]
   241a0:	mul	w0, w0, w1
   241a4:	str	w0, [sp, #180]
   241a8:	ldr	w0, [sp, #100]
   241ac:	ldr	w1, [sp, #180]
   241b0:	cmp	w1, w0
   241b4:	b.ls	24228 <lzma_mode_is_supported@@XZ_5.0+0x9590>  // b.plast
   241b8:	ldr	w0, [sp, #180]
   241bc:	str	w0, [sp, #96]
   241c0:	ldr	w0, [sp, #244]
   241c4:	lsl	x0, x0, #1
   241c8:	ldr	x1, [sp, #248]
   241cc:	add	x0, x1, x0
   241d0:	ldrh	w2, [x0]
   241d4:	ldr	w0, [sp, #244]
   241d8:	lsl	x0, x0, #1
   241dc:	ldr	x1, [sp, #248]
   241e0:	add	x0, x1, x0
   241e4:	ldrh	w0, [x0]
   241e8:	mov	w1, w0
   241ec:	mov	w0, #0x800                 	// #2048
   241f0:	sub	w0, w0, w1
   241f4:	lsr	w0, w0, #5
   241f8:	and	w1, w0, #0xffff
   241fc:	ldr	w0, [sp, #244]
   24200:	lsl	x0, x0, #1
   24204:	ldr	x3, [sp, #248]
   24208:	add	x0, x3, x0
   2420c:	add	w1, w2, w1
   24210:	and	w1, w1, #0xffff
   24214:	strh	w1, [x0]
   24218:	ldr	w0, [sp, #244]
   2421c:	lsl	w0, w0, #1
   24220:	str	w0, [sp, #244]
   24224:	b	242c0 <lzma_mode_is_supported@@XZ_5.0+0x9628>
   24228:	ldr	w1, [sp, #96]
   2422c:	ldr	w0, [sp, #180]
   24230:	sub	w0, w1, w0
   24234:	str	w0, [sp, #96]
   24238:	ldr	w1, [sp, #100]
   2423c:	ldr	w0, [sp, #180]
   24240:	sub	w0, w1, w0
   24244:	str	w0, [sp, #100]
   24248:	ldr	w0, [sp, #244]
   2424c:	lsl	x0, x0, #1
   24250:	ldr	x1, [sp, #248]
   24254:	add	x0, x1, x0
   24258:	ldrh	w2, [x0]
   2425c:	ldr	w0, [sp, #244]
   24260:	lsl	x0, x0, #1
   24264:	ldr	x1, [sp, #248]
   24268:	add	x0, x1, x0
   2426c:	ldrh	w0, [x0]
   24270:	lsr	w0, w0, #5
   24274:	and	w1, w0, #0xffff
   24278:	ldr	w0, [sp, #244]
   2427c:	lsl	x0, x0, #1
   24280:	ldr	x3, [sp, #248]
   24284:	add	x0, x3, x0
   24288:	sub	w1, w2, w1
   2428c:	and	w1, w1, #0xffff
   24290:	strh	w1, [x0]
   24294:	ldr	w0, [sp, #244]
   24298:	lsl	w0, w0, #1
   2429c:	add	w0, w0, #0x1
   242a0:	str	w0, [sp, #244]
   242a4:	ldr	w0, [sp, #236]
   242a8:	mov	w1, #0x1                   	// #1
   242ac:	lsl	w0, w1, w0
   242b0:	mov	w1, w0
   242b4:	ldr	w0, [sp, #272]
   242b8:	add	w0, w0, w1
   242bc:	str	w0, [sp, #272]
   242c0:	ldr	w0, [sp, #236]
   242c4:	add	w0, w0, #0x1
   242c8:	str	w0, [sp, #236]
   242cc:	ldr	w0, [sp, #240]
   242d0:	sub	w0, w0, #0x1
   242d4:	str	w0, [sp, #240]
   242d8:	ldr	w1, [sp, #96]
   242dc:	mov	w0, #0xffffff              	// #16777215
   242e0:	cmp	w1, w0
   242e4:	b.hi	24350 <lzma_mode_is_supported@@XZ_5.0+0x96b8>  // b.pmore
   242e8:	ldr	x1, [sp, #280]
   242ec:	ldr	x0, [sp, #40]
   242f0:	cmp	x1, x0
   242f4:	cset	w0, eq  // eq = none
   242f8:	and	w0, w0, #0xff
   242fc:	and	x0, x0, #0xff
   24300:	cmp	x0, #0x0
   24304:	b.eq	2431c <lzma_mode_is_supported@@XZ_5.0+0x9684>  // b.none
   24308:	ldr	x0, [sp, #216]
   2430c:	add	x0, x0, #0x4, lsl #12
   24310:	mov	w1, #0x2a                  	// #42
   24314:	str	w1, [x0, #11936]
   24318:	b	278fc <lzma_mode_is_supported@@XZ_5.0+0xcc64>
   2431c:	ldr	w0, [sp, #96]
   24320:	lsl	w0, w0, #8
   24324:	str	w0, [sp, #96]
   24328:	ldr	w0, [sp, #100]
   2432c:	lsl	w1, w0, #8
   24330:	ldr	x0, [sp, #280]
   24334:	add	x2, x0, #0x1
   24338:	str	x2, [sp, #280]
   2433c:	ldr	x2, [sp, #56]
   24340:	add	x0, x2, x0
   24344:	ldrb	w0, [x0]
   24348:	orr	w0, w1, w0
   2434c:	str	w0, [sp, #100]
   24350:	ldr	w0, [sp, #96]
   24354:	lsr	w0, w0, #11
   24358:	ldr	w1, [sp, #244]
   2435c:	lsl	x1, x1, #1
   24360:	ldr	x2, [sp, #248]
   24364:	add	x1, x2, x1
   24368:	ldrh	w1, [x1]
   2436c:	mul	w0, w0, w1
   24370:	str	w0, [sp, #180]
   24374:	ldr	w0, [sp, #100]
   24378:	ldr	w1, [sp, #180]
   2437c:	cmp	w1, w0
   24380:	b.ls	243f4 <lzma_mode_is_supported@@XZ_5.0+0x975c>  // b.plast
   24384:	ldr	w0, [sp, #180]
   24388:	str	w0, [sp, #96]
   2438c:	ldr	w0, [sp, #244]
   24390:	lsl	x0, x0, #1
   24394:	ldr	x1, [sp, #248]
   24398:	add	x0, x1, x0
   2439c:	ldrh	w2, [x0]
   243a0:	ldr	w0, [sp, #244]
   243a4:	lsl	x0, x0, #1
   243a8:	ldr	x1, [sp, #248]
   243ac:	add	x0, x1, x0
   243b0:	ldrh	w0, [x0]
   243b4:	mov	w1, w0
   243b8:	mov	w0, #0x800                 	// #2048
   243bc:	sub	w0, w0, w1
   243c0:	lsr	w0, w0, #5
   243c4:	and	w1, w0, #0xffff
   243c8:	ldr	w0, [sp, #244]
   243cc:	lsl	x0, x0, #1
   243d0:	ldr	x3, [sp, #248]
   243d4:	add	x0, x3, x0
   243d8:	add	w1, w2, w1
   243dc:	and	w1, w1, #0xffff
   243e0:	strh	w1, [x0]
   243e4:	ldr	w0, [sp, #244]
   243e8:	lsl	w0, w0, #1
   243ec:	str	w0, [sp, #244]
   243f0:	b	2448c <lzma_mode_is_supported@@XZ_5.0+0x97f4>
   243f4:	ldr	w1, [sp, #96]
   243f8:	ldr	w0, [sp, #180]
   243fc:	sub	w0, w1, w0
   24400:	str	w0, [sp, #96]
   24404:	ldr	w1, [sp, #100]
   24408:	ldr	w0, [sp, #180]
   2440c:	sub	w0, w1, w0
   24410:	str	w0, [sp, #100]
   24414:	ldr	w0, [sp, #244]
   24418:	lsl	x0, x0, #1
   2441c:	ldr	x1, [sp, #248]
   24420:	add	x0, x1, x0
   24424:	ldrh	w2, [x0]
   24428:	ldr	w0, [sp, #244]
   2442c:	lsl	x0, x0, #1
   24430:	ldr	x1, [sp, #248]
   24434:	add	x0, x1, x0
   24438:	ldrh	w0, [x0]
   2443c:	lsr	w0, w0, #5
   24440:	and	w1, w0, #0xffff
   24444:	ldr	w0, [sp, #244]
   24448:	lsl	x0, x0, #1
   2444c:	ldr	x3, [sp, #248]
   24450:	add	x0, x3, x0
   24454:	sub	w1, w2, w1
   24458:	and	w1, w1, #0xffff
   2445c:	strh	w1, [x0]
   24460:	ldr	w0, [sp, #244]
   24464:	lsl	w0, w0, #1
   24468:	add	w0, w0, #0x1
   2446c:	str	w0, [sp, #244]
   24470:	ldr	w0, [sp, #236]
   24474:	mov	w1, #0x1                   	// #1
   24478:	lsl	w0, w1, w0
   2447c:	mov	w1, w0
   24480:	ldr	w0, [sp, #272]
   24484:	add	w0, w0, w1
   24488:	str	w0, [sp, #272]
   2448c:	ldr	w0, [sp, #236]
   24490:	add	w0, w0, #0x1
   24494:	str	w0, [sp, #236]
   24498:	ldr	w0, [sp, #240]
   2449c:	sub	w0, w0, #0x1
   244a0:	str	w0, [sp, #240]
   244a4:	ldr	w1, [sp, #96]
   244a8:	mov	w0, #0xffffff              	// #16777215
   244ac:	cmp	w1, w0
   244b0:	b.hi	2451c <lzma_mode_is_supported@@XZ_5.0+0x9884>  // b.pmore
   244b4:	ldr	x1, [sp, #280]
   244b8:	ldr	x0, [sp, #40]
   244bc:	cmp	x1, x0
   244c0:	cset	w0, eq  // eq = none
   244c4:	and	w0, w0, #0xff
   244c8:	and	x0, x0, #0xff
   244cc:	cmp	x0, #0x0
   244d0:	b.eq	244e8 <lzma_mode_is_supported@@XZ_5.0+0x9850>  // b.none
   244d4:	ldr	x0, [sp, #216]
   244d8:	add	x0, x0, #0x4, lsl #12
   244dc:	mov	w1, #0x2a                  	// #42
   244e0:	str	w1, [x0, #11936]
   244e4:	b	278fc <lzma_mode_is_supported@@XZ_5.0+0xcc64>
   244e8:	ldr	w0, [sp, #96]
   244ec:	lsl	w0, w0, #8
   244f0:	str	w0, [sp, #96]
   244f4:	ldr	w0, [sp, #100]
   244f8:	lsl	w1, w0, #8
   244fc:	ldr	x0, [sp, #280]
   24500:	add	x2, x0, #0x1
   24504:	str	x2, [sp, #280]
   24508:	ldr	x2, [sp, #56]
   2450c:	add	x0, x2, x0
   24510:	ldrb	w0, [x0]
   24514:	orr	w0, w1, w0
   24518:	str	w0, [sp, #100]
   2451c:	ldr	w0, [sp, #96]
   24520:	lsr	w0, w0, #11
   24524:	ldr	w1, [sp, #244]
   24528:	lsl	x1, x1, #1
   2452c:	ldr	x2, [sp, #248]
   24530:	add	x1, x2, x1
   24534:	ldrh	w1, [x1]
   24538:	mul	w0, w0, w1
   2453c:	str	w0, [sp, #180]
   24540:	ldr	w0, [sp, #100]
   24544:	ldr	w1, [sp, #180]
   24548:	cmp	w1, w0
   2454c:	b.ls	245c0 <lzma_mode_is_supported@@XZ_5.0+0x9928>  // b.plast
   24550:	ldr	w0, [sp, #180]
   24554:	str	w0, [sp, #96]
   24558:	ldr	w0, [sp, #244]
   2455c:	lsl	x0, x0, #1
   24560:	ldr	x1, [sp, #248]
   24564:	add	x0, x1, x0
   24568:	ldrh	w2, [x0]
   2456c:	ldr	w0, [sp, #244]
   24570:	lsl	x0, x0, #1
   24574:	ldr	x1, [sp, #248]
   24578:	add	x0, x1, x0
   2457c:	ldrh	w0, [x0]
   24580:	mov	w1, w0
   24584:	mov	w0, #0x800                 	// #2048
   24588:	sub	w0, w0, w1
   2458c:	lsr	w0, w0, #5
   24590:	and	w1, w0, #0xffff
   24594:	ldr	w0, [sp, #244]
   24598:	lsl	x0, x0, #1
   2459c:	ldr	x3, [sp, #248]
   245a0:	add	x0, x3, x0
   245a4:	add	w1, w2, w1
   245a8:	and	w1, w1, #0xffff
   245ac:	strh	w1, [x0]
   245b0:	ldr	w0, [sp, #244]
   245b4:	lsl	w0, w0, #1
   245b8:	str	w0, [sp, #244]
   245bc:	b	24658 <lzma_mode_is_supported@@XZ_5.0+0x99c0>
   245c0:	ldr	w1, [sp, #96]
   245c4:	ldr	w0, [sp, #180]
   245c8:	sub	w0, w1, w0
   245cc:	str	w0, [sp, #96]
   245d0:	ldr	w1, [sp, #100]
   245d4:	ldr	w0, [sp, #180]
   245d8:	sub	w0, w1, w0
   245dc:	str	w0, [sp, #100]
   245e0:	ldr	w0, [sp, #244]
   245e4:	lsl	x0, x0, #1
   245e8:	ldr	x1, [sp, #248]
   245ec:	add	x0, x1, x0
   245f0:	ldrh	w2, [x0]
   245f4:	ldr	w0, [sp, #244]
   245f8:	lsl	x0, x0, #1
   245fc:	ldr	x1, [sp, #248]
   24600:	add	x0, x1, x0
   24604:	ldrh	w0, [x0]
   24608:	lsr	w0, w0, #5
   2460c:	and	w1, w0, #0xffff
   24610:	ldr	w0, [sp, #244]
   24614:	lsl	x0, x0, #1
   24618:	ldr	x3, [sp, #248]
   2461c:	add	x0, x3, x0
   24620:	sub	w1, w2, w1
   24624:	and	w1, w1, #0xffff
   24628:	strh	w1, [x0]
   2462c:	ldr	w0, [sp, #244]
   24630:	lsl	w0, w0, #1
   24634:	add	w0, w0, #0x1
   24638:	str	w0, [sp, #244]
   2463c:	ldr	w0, [sp, #236]
   24640:	mov	w1, #0x1                   	// #1
   24644:	lsl	w0, w1, w0
   24648:	mov	w1, w0
   2464c:	ldr	w0, [sp, #272]
   24650:	add	w0, w0, w1
   24654:	str	w0, [sp, #272]
   24658:	ldr	w0, [sp, #236]
   2465c:	add	w0, w0, #0x1
   24660:	str	w0, [sp, #236]
   24664:	ldr	w0, [sp, #240]
   24668:	sub	w0, w0, #0x1
   2466c:	str	w0, [sp, #240]
   24670:	ldr	w1, [sp, #96]
   24674:	mov	w0, #0xffffff              	// #16777215
   24678:	cmp	w1, w0
   2467c:	b.hi	246e8 <lzma_mode_is_supported@@XZ_5.0+0x9a50>  // b.pmore
   24680:	ldr	x1, [sp, #280]
   24684:	ldr	x0, [sp, #40]
   24688:	cmp	x1, x0
   2468c:	cset	w0, eq  // eq = none
   24690:	and	w0, w0, #0xff
   24694:	and	x0, x0, #0xff
   24698:	cmp	x0, #0x0
   2469c:	b.eq	246b4 <lzma_mode_is_supported@@XZ_5.0+0x9a1c>  // b.none
   246a0:	ldr	x0, [sp, #216]
   246a4:	add	x0, x0, #0x4, lsl #12
   246a8:	mov	w1, #0x2a                  	// #42
   246ac:	str	w1, [x0, #11936]
   246b0:	b	278fc <lzma_mode_is_supported@@XZ_5.0+0xcc64>
   246b4:	ldr	w0, [sp, #96]
   246b8:	lsl	w0, w0, #8
   246bc:	str	w0, [sp, #96]
   246c0:	ldr	w0, [sp, #100]
   246c4:	lsl	w1, w0, #8
   246c8:	ldr	x0, [sp, #280]
   246cc:	add	x2, x0, #0x1
   246d0:	str	x2, [sp, #280]
   246d4:	ldr	x2, [sp, #56]
   246d8:	add	x0, x2, x0
   246dc:	ldrb	w0, [x0]
   246e0:	orr	w0, w1, w0
   246e4:	str	w0, [sp, #100]
   246e8:	ldr	w0, [sp, #96]
   246ec:	lsr	w0, w0, #11
   246f0:	ldr	w1, [sp, #244]
   246f4:	lsl	x1, x1, #1
   246f8:	ldr	x2, [sp, #248]
   246fc:	add	x1, x2, x1
   24700:	ldrh	w1, [x1]
   24704:	mul	w0, w0, w1
   24708:	str	w0, [sp, #180]
   2470c:	ldr	w0, [sp, #100]
   24710:	ldr	w1, [sp, #180]
   24714:	cmp	w1, w0
   24718:	b.ls	24780 <lzma_mode_is_supported@@XZ_5.0+0x9ae8>  // b.plast
   2471c:	ldr	w0, [sp, #180]
   24720:	str	w0, [sp, #96]
   24724:	ldr	w0, [sp, #244]
   24728:	lsl	x0, x0, #1
   2472c:	ldr	x1, [sp, #248]
   24730:	add	x0, x1, x0
   24734:	ldrh	w2, [x0]
   24738:	ldr	w0, [sp, #244]
   2473c:	lsl	x0, x0, #1
   24740:	ldr	x1, [sp, #248]
   24744:	add	x0, x1, x0
   24748:	ldrh	w0, [x0]
   2474c:	mov	w1, w0
   24750:	mov	w0, #0x800                 	// #2048
   24754:	sub	w0, w0, w1
   24758:	lsr	w0, w0, #5
   2475c:	and	w1, w0, #0xffff
   24760:	ldr	w0, [sp, #244]
   24764:	lsl	x0, x0, #1
   24768:	ldr	x3, [sp, #248]
   2476c:	add	x0, x3, x0
   24770:	add	w1, w2, w1
   24774:	and	w1, w1, #0xffff
   24778:	strh	w1, [x0]
   2477c:	b	2513c <lzma_mode_is_supported@@XZ_5.0+0xa4a4>
   24780:	ldr	w1, [sp, #96]
   24784:	ldr	w0, [sp, #180]
   24788:	sub	w0, w1, w0
   2478c:	str	w0, [sp, #96]
   24790:	ldr	w1, [sp, #100]
   24794:	ldr	w0, [sp, #180]
   24798:	sub	w0, w1, w0
   2479c:	str	w0, [sp, #100]
   247a0:	ldr	w0, [sp, #244]
   247a4:	lsl	x0, x0, #1
   247a8:	ldr	x1, [sp, #248]
   247ac:	add	x0, x1, x0
   247b0:	ldrh	w2, [x0]
   247b4:	ldr	w0, [sp, #244]
   247b8:	lsl	x0, x0, #1
   247bc:	ldr	x1, [sp, #248]
   247c0:	add	x0, x1, x0
   247c4:	ldrh	w0, [x0]
   247c8:	lsr	w0, w0, #5
   247cc:	and	w1, w0, #0xffff
   247d0:	ldr	w0, [sp, #244]
   247d4:	lsl	x0, x0, #1
   247d8:	ldr	x3, [sp, #248]
   247dc:	add	x0, x3, x0
   247e0:	sub	w1, w2, w1
   247e4:	and	w1, w1, #0xffff
   247e8:	strh	w1, [x0]
   247ec:	ldr	w0, [sp, #236]
   247f0:	mov	w1, #0x1                   	// #1
   247f4:	lsl	w0, w1, w0
   247f8:	mov	w1, w0
   247fc:	ldr	w0, [sp, #272]
   24800:	add	w0, w0, w1
   24804:	str	w0, [sp, #272]
   24808:	b	2513c <lzma_mode_is_supported@@XZ_5.0+0xa4a4>
   2480c:	ldr	w0, [sp, #240]
   24810:	sub	w0, w0, #0x4
   24814:	str	w0, [sp, #240]
   24818:	b	24820 <lzma_mode_is_supported@@XZ_5.0+0x9b88>
   2481c:	nop
   24820:	ldr	w1, [sp, #96]
   24824:	mov	w0, #0xffffff              	// #16777215
   24828:	cmp	w1, w0
   2482c:	b.hi	24898 <lzma_mode_is_supported@@XZ_5.0+0x9c00>  // b.pmore
   24830:	ldr	x1, [sp, #280]
   24834:	ldr	x0, [sp, #40]
   24838:	cmp	x1, x0
   2483c:	cset	w0, eq  // eq = none
   24840:	and	w0, w0, #0xff
   24844:	and	x0, x0, #0xff
   24848:	cmp	x0, #0x0
   2484c:	b.eq	24864 <lzma_mode_is_supported@@XZ_5.0+0x9bcc>  // b.none
   24850:	ldr	x0, [sp, #216]
   24854:	add	x0, x0, #0x4, lsl #12
   24858:	mov	w1, #0x2b                  	// #43
   2485c:	str	w1, [x0, #11936]
   24860:	b	278fc <lzma_mode_is_supported@@XZ_5.0+0xcc64>
   24864:	ldr	w0, [sp, #96]
   24868:	lsl	w0, w0, #8
   2486c:	str	w0, [sp, #96]
   24870:	ldr	w0, [sp, #100]
   24874:	lsl	w1, w0, #8
   24878:	ldr	x0, [sp, #280]
   2487c:	add	x2, x0, #0x1
   24880:	str	x2, [sp, #280]
   24884:	ldr	x2, [sp, #56]
   24888:	add	x0, x2, x0
   2488c:	ldrb	w0, [x0]
   24890:	orr	w0, w1, w0
   24894:	str	w0, [sp, #100]
   24898:	ldr	w0, [sp, #96]
   2489c:	lsr	w0, w0, #1
   248a0:	str	w0, [sp, #96]
   248a4:	ldr	w1, [sp, #100]
   248a8:	ldr	w0, [sp, #96]
   248ac:	sub	w0, w1, w0
   248b0:	str	w0, [sp, #100]
   248b4:	ldr	w0, [sp, #100]
   248b8:	asr	w0, w0, #31
   248bc:	str	w0, [sp, #180]
   248c0:	ldr	w1, [sp, #100]
   248c4:	ldr	w2, [sp, #96]
   248c8:	ldr	w0, [sp, #180]
   248cc:	and	w0, w2, w0
   248d0:	add	w0, w1, w0
   248d4:	str	w0, [sp, #100]
   248d8:	ldr	w0, [sp, #272]
   248dc:	lsl	w1, w0, #1
   248e0:	ldr	w0, [sp, #180]
   248e4:	add	w0, w1, w0
   248e8:	add	w0, w0, #0x1
   248ec:	str	w0, [sp, #272]
   248f0:	ldr	w0, [sp, #240]
   248f4:	sub	w0, w0, #0x1
   248f8:	str	w0, [sp, #240]
   248fc:	ldr	w0, [sp, #240]
   24900:	cmp	w0, #0x0
   24904:	b.ne	2481c <lzma_mode_is_supported@@XZ_5.0+0x9b84>  // b.any
   24908:	ldr	w0, [sp, #272]
   2490c:	lsl	w0, w0, #4
   24910:	str	w0, [sp, #272]
   24914:	mov	w0, #0x1                   	// #1
   24918:	str	w0, [sp, #244]
   2491c:	ldr	w1, [sp, #96]
   24920:	mov	w0, #0xffffff              	// #16777215
   24924:	cmp	w1, w0
   24928:	b.hi	24994 <lzma_mode_is_supported@@XZ_5.0+0x9cfc>  // b.pmore
   2492c:	ldr	x1, [sp, #280]
   24930:	ldr	x0, [sp, #40]
   24934:	cmp	x1, x0
   24938:	cset	w0, eq  // eq = none
   2493c:	and	w0, w0, #0xff
   24940:	and	x0, x0, #0xff
   24944:	cmp	x0, #0x0
   24948:	b.eq	24960 <lzma_mode_is_supported@@XZ_5.0+0x9cc8>  // b.none
   2494c:	ldr	x0, [sp, #216]
   24950:	add	x0, x0, #0x4, lsl #12
   24954:	mov	w1, #0x2c                  	// #44
   24958:	str	w1, [x0, #11936]
   2495c:	b	278fc <lzma_mode_is_supported@@XZ_5.0+0xcc64>
   24960:	ldr	w0, [sp, #96]
   24964:	lsl	w0, w0, #8
   24968:	str	w0, [sp, #96]
   2496c:	ldr	w0, [sp, #100]
   24970:	lsl	w1, w0, #8
   24974:	ldr	x0, [sp, #280]
   24978:	add	x2, x0, #0x1
   2497c:	str	x2, [sp, #280]
   24980:	ldr	x2, [sp, #56]
   24984:	add	x0, x2, x0
   24988:	ldrb	w0, [x0]
   2498c:	orr	w0, w1, w0
   24990:	str	w0, [sp, #100]
   24994:	ldr	w0, [sp, #96]
   24998:	lsr	w0, w0, #11
   2499c:	ldr	x2, [sp, #216]
   249a0:	ldr	w3, [sp, #244]
   249a4:	mov	x1, #0x3320                	// #13088
   249a8:	add	x1, x3, x1
   249ac:	lsl	x1, x1, #1
   249b0:	add	x1, x2, x1
   249b4:	ldrh	w1, [x1, #4]
   249b8:	mul	w0, w0, w1
   249bc:	str	w0, [sp, #180]
   249c0:	ldr	w0, [sp, #100]
   249c4:	ldr	w1, [sp, #180]
   249c8:	cmp	w1, w0
   249cc:	b.ls	24a5c <lzma_mode_is_supported@@XZ_5.0+0x9dc4>  // b.plast
   249d0:	ldr	w0, [sp, #180]
   249d4:	str	w0, [sp, #96]
   249d8:	ldr	x1, [sp, #216]
   249dc:	ldr	w2, [sp, #244]
   249e0:	mov	x0, #0x3320                	// #13088
   249e4:	add	x0, x2, x0
   249e8:	lsl	x0, x0, #1
   249ec:	add	x0, x1, x0
   249f0:	ldrh	w1, [x0, #4]
   249f4:	ldr	x2, [sp, #216]
   249f8:	ldr	w3, [sp, #244]
   249fc:	mov	x0, #0x3320                	// #13088
   24a00:	add	x0, x3, x0
   24a04:	lsl	x0, x0, #1
   24a08:	add	x0, x2, x0
   24a0c:	ldrh	w0, [x0, #4]
   24a10:	mov	w2, w0
   24a14:	mov	w0, #0x800                 	// #2048
   24a18:	sub	w0, w0, w2
   24a1c:	lsr	w0, w0, #5
   24a20:	and	w0, w0, #0xffff
   24a24:	add	w0, w1, w0
   24a28:	and	w3, w0, #0xffff
   24a2c:	ldr	x1, [sp, #216]
   24a30:	ldr	w2, [sp, #244]
   24a34:	mov	x0, #0x3320                	// #13088
   24a38:	add	x0, x2, x0
   24a3c:	lsl	x0, x0, #1
   24a40:	add	x0, x1, x0
   24a44:	mov	w1, w3
   24a48:	strh	w1, [x0, #4]
   24a4c:	ldr	w0, [sp, #244]
   24a50:	lsl	w0, w0, #1
   24a54:	str	w0, [sp, #244]
   24a58:	b	24b00 <lzma_mode_is_supported@@XZ_5.0+0x9e68>
   24a5c:	ldr	w1, [sp, #96]
   24a60:	ldr	w0, [sp, #180]
   24a64:	sub	w0, w1, w0
   24a68:	str	w0, [sp, #96]
   24a6c:	ldr	w1, [sp, #100]
   24a70:	ldr	w0, [sp, #180]
   24a74:	sub	w0, w1, w0
   24a78:	str	w0, [sp, #100]
   24a7c:	ldr	x1, [sp, #216]
   24a80:	ldr	w2, [sp, #244]
   24a84:	mov	x0, #0x3320                	// #13088
   24a88:	add	x0, x2, x0
   24a8c:	lsl	x0, x0, #1
   24a90:	add	x0, x1, x0
   24a94:	ldrh	w1, [x0, #4]
   24a98:	ldr	x2, [sp, #216]
   24a9c:	ldr	w3, [sp, #244]
   24aa0:	mov	x0, #0x3320                	// #13088
   24aa4:	add	x0, x3, x0
   24aa8:	lsl	x0, x0, #1
   24aac:	add	x0, x2, x0
   24ab0:	ldrh	w0, [x0, #4]
   24ab4:	lsr	w0, w0, #5
   24ab8:	and	w0, w0, #0xffff
   24abc:	sub	w0, w1, w0
   24ac0:	and	w3, w0, #0xffff
   24ac4:	ldr	x1, [sp, #216]
   24ac8:	ldr	w2, [sp, #244]
   24acc:	mov	x0, #0x3320                	// #13088
   24ad0:	add	x0, x2, x0
   24ad4:	lsl	x0, x0, #1
   24ad8:	add	x0, x1, x0
   24adc:	mov	w1, w3
   24ae0:	strh	w1, [x0, #4]
   24ae4:	ldr	w0, [sp, #244]
   24ae8:	lsl	w0, w0, #1
   24aec:	add	w0, w0, #0x1
   24af0:	str	w0, [sp, #244]
   24af4:	ldr	w0, [sp, #272]
   24af8:	add	w0, w0, #0x1
   24afc:	str	w0, [sp, #272]
   24b00:	ldr	w1, [sp, #96]
   24b04:	mov	w0, #0xffffff              	// #16777215
   24b08:	cmp	w1, w0
   24b0c:	b.hi	24b78 <lzma_mode_is_supported@@XZ_5.0+0x9ee0>  // b.pmore
   24b10:	ldr	x1, [sp, #280]
   24b14:	ldr	x0, [sp, #40]
   24b18:	cmp	x1, x0
   24b1c:	cset	w0, eq  // eq = none
   24b20:	and	w0, w0, #0xff
   24b24:	and	x0, x0, #0xff
   24b28:	cmp	x0, #0x0
   24b2c:	b.eq	24b44 <lzma_mode_is_supported@@XZ_5.0+0x9eac>  // b.none
   24b30:	ldr	x0, [sp, #216]
   24b34:	add	x0, x0, #0x4, lsl #12
   24b38:	mov	w1, #0x2d                  	// #45
   24b3c:	str	w1, [x0, #11936]
   24b40:	b	278fc <lzma_mode_is_supported@@XZ_5.0+0xcc64>
   24b44:	ldr	w0, [sp, #96]
   24b48:	lsl	w0, w0, #8
   24b4c:	str	w0, [sp, #96]
   24b50:	ldr	w0, [sp, #100]
   24b54:	lsl	w1, w0, #8
   24b58:	ldr	x0, [sp, #280]
   24b5c:	add	x2, x0, #0x1
   24b60:	str	x2, [sp, #280]
   24b64:	ldr	x2, [sp, #56]
   24b68:	add	x0, x2, x0
   24b6c:	ldrb	w0, [x0]
   24b70:	orr	w0, w1, w0
   24b74:	str	w0, [sp, #100]
   24b78:	ldr	w0, [sp, #96]
   24b7c:	lsr	w0, w0, #11
   24b80:	ldr	x2, [sp, #216]
   24b84:	ldr	w3, [sp, #244]
   24b88:	mov	x1, #0x3320                	// #13088
   24b8c:	add	x1, x3, x1
   24b90:	lsl	x1, x1, #1
   24b94:	add	x1, x2, x1
   24b98:	ldrh	w1, [x1, #4]
   24b9c:	mul	w0, w0, w1
   24ba0:	str	w0, [sp, #180]
   24ba4:	ldr	w0, [sp, #100]
   24ba8:	ldr	w1, [sp, #180]
   24bac:	cmp	w1, w0
   24bb0:	b.ls	24c40 <lzma_mode_is_supported@@XZ_5.0+0x9fa8>  // b.plast
   24bb4:	ldr	w0, [sp, #180]
   24bb8:	str	w0, [sp, #96]
   24bbc:	ldr	x1, [sp, #216]
   24bc0:	ldr	w2, [sp, #244]
   24bc4:	mov	x0, #0x3320                	// #13088
   24bc8:	add	x0, x2, x0
   24bcc:	lsl	x0, x0, #1
   24bd0:	add	x0, x1, x0
   24bd4:	ldrh	w1, [x0, #4]
   24bd8:	ldr	x2, [sp, #216]
   24bdc:	ldr	w3, [sp, #244]
   24be0:	mov	x0, #0x3320                	// #13088
   24be4:	add	x0, x3, x0
   24be8:	lsl	x0, x0, #1
   24bec:	add	x0, x2, x0
   24bf0:	ldrh	w0, [x0, #4]
   24bf4:	mov	w2, w0
   24bf8:	mov	w0, #0x800                 	// #2048
   24bfc:	sub	w0, w0, w2
   24c00:	lsr	w0, w0, #5
   24c04:	and	w0, w0, #0xffff
   24c08:	add	w0, w1, w0
   24c0c:	and	w3, w0, #0xffff
   24c10:	ldr	x1, [sp, #216]
   24c14:	ldr	w2, [sp, #244]
   24c18:	mov	x0, #0x3320                	// #13088
   24c1c:	add	x0, x2, x0
   24c20:	lsl	x0, x0, #1
   24c24:	add	x0, x1, x0
   24c28:	mov	w1, w3
   24c2c:	strh	w1, [x0, #4]
   24c30:	ldr	w0, [sp, #244]
   24c34:	lsl	w0, w0, #1
   24c38:	str	w0, [sp, #244]
   24c3c:	b	24ce4 <lzma_mode_is_supported@@XZ_5.0+0xa04c>
   24c40:	ldr	w1, [sp, #96]
   24c44:	ldr	w0, [sp, #180]
   24c48:	sub	w0, w1, w0
   24c4c:	str	w0, [sp, #96]
   24c50:	ldr	w1, [sp, #100]
   24c54:	ldr	w0, [sp, #180]
   24c58:	sub	w0, w1, w0
   24c5c:	str	w0, [sp, #100]
   24c60:	ldr	x1, [sp, #216]
   24c64:	ldr	w2, [sp, #244]
   24c68:	mov	x0, #0x3320                	// #13088
   24c6c:	add	x0, x2, x0
   24c70:	lsl	x0, x0, #1
   24c74:	add	x0, x1, x0
   24c78:	ldrh	w1, [x0, #4]
   24c7c:	ldr	x2, [sp, #216]
   24c80:	ldr	w3, [sp, #244]
   24c84:	mov	x0, #0x3320                	// #13088
   24c88:	add	x0, x3, x0
   24c8c:	lsl	x0, x0, #1
   24c90:	add	x0, x2, x0
   24c94:	ldrh	w0, [x0, #4]
   24c98:	lsr	w0, w0, #5
   24c9c:	and	w0, w0, #0xffff
   24ca0:	sub	w0, w1, w0
   24ca4:	and	w3, w0, #0xffff
   24ca8:	ldr	x1, [sp, #216]
   24cac:	ldr	w2, [sp, #244]
   24cb0:	mov	x0, #0x3320                	// #13088
   24cb4:	add	x0, x2, x0
   24cb8:	lsl	x0, x0, #1
   24cbc:	add	x0, x1, x0
   24cc0:	mov	w1, w3
   24cc4:	strh	w1, [x0, #4]
   24cc8:	ldr	w0, [sp, #244]
   24ccc:	lsl	w0, w0, #1
   24cd0:	add	w0, w0, #0x1
   24cd4:	str	w0, [sp, #244]
   24cd8:	ldr	w0, [sp, #272]
   24cdc:	add	w0, w0, #0x2
   24ce0:	str	w0, [sp, #272]
   24ce4:	ldr	w1, [sp, #96]
   24ce8:	mov	w0, #0xffffff              	// #16777215
   24cec:	cmp	w1, w0
   24cf0:	b.hi	24d5c <lzma_mode_is_supported@@XZ_5.0+0xa0c4>  // b.pmore
   24cf4:	ldr	x1, [sp, #280]
   24cf8:	ldr	x0, [sp, #40]
   24cfc:	cmp	x1, x0
   24d00:	cset	w0, eq  // eq = none
   24d04:	and	w0, w0, #0xff
   24d08:	and	x0, x0, #0xff
   24d0c:	cmp	x0, #0x0
   24d10:	b.eq	24d28 <lzma_mode_is_supported@@XZ_5.0+0xa090>  // b.none
   24d14:	ldr	x0, [sp, #216]
   24d18:	add	x0, x0, #0x4, lsl #12
   24d1c:	mov	w1, #0x2e                  	// #46
   24d20:	str	w1, [x0, #11936]
   24d24:	b	278fc <lzma_mode_is_supported@@XZ_5.0+0xcc64>
   24d28:	ldr	w0, [sp, #96]
   24d2c:	lsl	w0, w0, #8
   24d30:	str	w0, [sp, #96]
   24d34:	ldr	w0, [sp, #100]
   24d38:	lsl	w1, w0, #8
   24d3c:	ldr	x0, [sp, #280]
   24d40:	add	x2, x0, #0x1
   24d44:	str	x2, [sp, #280]
   24d48:	ldr	x2, [sp, #56]
   24d4c:	add	x0, x2, x0
   24d50:	ldrb	w0, [x0]
   24d54:	orr	w0, w1, w0
   24d58:	str	w0, [sp, #100]
   24d5c:	ldr	w0, [sp, #96]
   24d60:	lsr	w0, w0, #11
   24d64:	ldr	x2, [sp, #216]
   24d68:	ldr	w3, [sp, #244]
   24d6c:	mov	x1, #0x3320                	// #13088
   24d70:	add	x1, x3, x1
   24d74:	lsl	x1, x1, #1
   24d78:	add	x1, x2, x1
   24d7c:	ldrh	w1, [x1, #4]
   24d80:	mul	w0, w0, w1
   24d84:	str	w0, [sp, #180]
   24d88:	ldr	w0, [sp, #100]
   24d8c:	ldr	w1, [sp, #180]
   24d90:	cmp	w1, w0
   24d94:	b.ls	24e24 <lzma_mode_is_supported@@XZ_5.0+0xa18c>  // b.plast
   24d98:	ldr	w0, [sp, #180]
   24d9c:	str	w0, [sp, #96]
   24da0:	ldr	x1, [sp, #216]
   24da4:	ldr	w2, [sp, #244]
   24da8:	mov	x0, #0x3320                	// #13088
   24dac:	add	x0, x2, x0
   24db0:	lsl	x0, x0, #1
   24db4:	add	x0, x1, x0
   24db8:	ldrh	w1, [x0, #4]
   24dbc:	ldr	x2, [sp, #216]
   24dc0:	ldr	w3, [sp, #244]
   24dc4:	mov	x0, #0x3320                	// #13088
   24dc8:	add	x0, x3, x0
   24dcc:	lsl	x0, x0, #1
   24dd0:	add	x0, x2, x0
   24dd4:	ldrh	w0, [x0, #4]
   24dd8:	mov	w2, w0
   24ddc:	mov	w0, #0x800                 	// #2048
   24de0:	sub	w0, w0, w2
   24de4:	lsr	w0, w0, #5
   24de8:	and	w0, w0, #0xffff
   24dec:	add	w0, w1, w0
   24df0:	and	w3, w0, #0xffff
   24df4:	ldr	x1, [sp, #216]
   24df8:	ldr	w2, [sp, #244]
   24dfc:	mov	x0, #0x3320                	// #13088
   24e00:	add	x0, x2, x0
   24e04:	lsl	x0, x0, #1
   24e08:	add	x0, x1, x0
   24e0c:	mov	w1, w3
   24e10:	strh	w1, [x0, #4]
   24e14:	ldr	w0, [sp, #244]
   24e18:	lsl	w0, w0, #1
   24e1c:	str	w0, [sp, #244]
   24e20:	b	24ec8 <lzma_mode_is_supported@@XZ_5.0+0xa230>
   24e24:	ldr	w1, [sp, #96]
   24e28:	ldr	w0, [sp, #180]
   24e2c:	sub	w0, w1, w0
   24e30:	str	w0, [sp, #96]
   24e34:	ldr	w1, [sp, #100]
   24e38:	ldr	w0, [sp, #180]
   24e3c:	sub	w0, w1, w0
   24e40:	str	w0, [sp, #100]
   24e44:	ldr	x1, [sp, #216]
   24e48:	ldr	w2, [sp, #244]
   24e4c:	mov	x0, #0x3320                	// #13088
   24e50:	add	x0, x2, x0
   24e54:	lsl	x0, x0, #1
   24e58:	add	x0, x1, x0
   24e5c:	ldrh	w1, [x0, #4]
   24e60:	ldr	x2, [sp, #216]
   24e64:	ldr	w3, [sp, #244]
   24e68:	mov	x0, #0x3320                	// #13088
   24e6c:	add	x0, x3, x0
   24e70:	lsl	x0, x0, #1
   24e74:	add	x0, x2, x0
   24e78:	ldrh	w0, [x0, #4]
   24e7c:	lsr	w0, w0, #5
   24e80:	and	w0, w0, #0xffff
   24e84:	sub	w0, w1, w0
   24e88:	and	w3, w0, #0xffff
   24e8c:	ldr	x1, [sp, #216]
   24e90:	ldr	w2, [sp, #244]
   24e94:	mov	x0, #0x3320                	// #13088
   24e98:	add	x0, x2, x0
   24e9c:	lsl	x0, x0, #1
   24ea0:	add	x0, x1, x0
   24ea4:	mov	w1, w3
   24ea8:	strh	w1, [x0, #4]
   24eac:	ldr	w0, [sp, #244]
   24eb0:	lsl	w0, w0, #1
   24eb4:	add	w0, w0, #0x1
   24eb8:	str	w0, [sp, #244]
   24ebc:	ldr	w0, [sp, #272]
   24ec0:	add	w0, w0, #0x4
   24ec4:	str	w0, [sp, #272]
   24ec8:	ldr	w1, [sp, #96]
   24ecc:	mov	w0, #0xffffff              	// #16777215
   24ed0:	cmp	w1, w0
   24ed4:	b.hi	24f40 <lzma_mode_is_supported@@XZ_5.0+0xa2a8>  // b.pmore
   24ed8:	ldr	x1, [sp, #280]
   24edc:	ldr	x0, [sp, #40]
   24ee0:	cmp	x1, x0
   24ee4:	cset	w0, eq  // eq = none
   24ee8:	and	w0, w0, #0xff
   24eec:	and	x0, x0, #0xff
   24ef0:	cmp	x0, #0x0
   24ef4:	b.eq	24f0c <lzma_mode_is_supported@@XZ_5.0+0xa274>  // b.none
   24ef8:	ldr	x0, [sp, #216]
   24efc:	add	x0, x0, #0x4, lsl #12
   24f00:	mov	w1, #0x2f                  	// #47
   24f04:	str	w1, [x0, #11936]
   24f08:	b	278fc <lzma_mode_is_supported@@XZ_5.0+0xcc64>
   24f0c:	ldr	w0, [sp, #96]
   24f10:	lsl	w0, w0, #8
   24f14:	str	w0, [sp, #96]
   24f18:	ldr	w0, [sp, #100]
   24f1c:	lsl	w1, w0, #8
   24f20:	ldr	x0, [sp, #280]
   24f24:	add	x2, x0, #0x1
   24f28:	str	x2, [sp, #280]
   24f2c:	ldr	x2, [sp, #56]
   24f30:	add	x0, x2, x0
   24f34:	ldrb	w0, [x0]
   24f38:	orr	w0, w1, w0
   24f3c:	str	w0, [sp, #100]
   24f40:	ldr	w0, [sp, #96]
   24f44:	lsr	w0, w0, #11
   24f48:	ldr	x2, [sp, #216]
   24f4c:	ldr	w3, [sp, #244]
   24f50:	mov	x1, #0x3320                	// #13088
   24f54:	add	x1, x3, x1
   24f58:	lsl	x1, x1, #1
   24f5c:	add	x1, x2, x1
   24f60:	ldrh	w1, [x1, #4]
   24f64:	mul	w0, w0, w1
   24f68:	str	w0, [sp, #180]
   24f6c:	ldr	w0, [sp, #100]
   24f70:	ldr	w1, [sp, #180]
   24f74:	cmp	w1, w0
   24f78:	b.ls	24ffc <lzma_mode_is_supported@@XZ_5.0+0xa364>  // b.plast
   24f7c:	ldr	w0, [sp, #180]
   24f80:	str	w0, [sp, #96]
   24f84:	ldr	x1, [sp, #216]
   24f88:	ldr	w2, [sp, #244]
   24f8c:	mov	x0, #0x3320                	// #13088
   24f90:	add	x0, x2, x0
   24f94:	lsl	x0, x0, #1
   24f98:	add	x0, x1, x0
   24f9c:	ldrh	w1, [x0, #4]
   24fa0:	ldr	x2, [sp, #216]
   24fa4:	ldr	w3, [sp, #244]
   24fa8:	mov	x0, #0x3320                	// #13088
   24fac:	add	x0, x3, x0
   24fb0:	lsl	x0, x0, #1
   24fb4:	add	x0, x2, x0
   24fb8:	ldrh	w0, [x0, #4]
   24fbc:	mov	w2, w0
   24fc0:	mov	w0, #0x800                 	// #2048
   24fc4:	sub	w0, w0, w2
   24fc8:	lsr	w0, w0, #5
   24fcc:	and	w0, w0, #0xffff
   24fd0:	add	w0, w1, w0
   24fd4:	and	w3, w0, #0xffff
   24fd8:	ldr	x1, [sp, #216]
   24fdc:	ldr	w2, [sp, #244]
   24fe0:	mov	x0, #0x3320                	// #13088
   24fe4:	add	x0, x2, x0
   24fe8:	lsl	x0, x0, #1
   24fec:	add	x0, x1, x0
   24ff0:	mov	w1, w3
   24ff4:	strh	w1, [x0, #4]
   24ff8:	b	25090 <lzma_mode_is_supported@@XZ_5.0+0xa3f8>
   24ffc:	ldr	w1, [sp, #96]
   25000:	ldr	w0, [sp, #180]
   25004:	sub	w0, w1, w0
   25008:	str	w0, [sp, #96]
   2500c:	ldr	w1, [sp, #100]
   25010:	ldr	w0, [sp, #180]
   25014:	sub	w0, w1, w0
   25018:	str	w0, [sp, #100]
   2501c:	ldr	x1, [sp, #216]
   25020:	ldr	w2, [sp, #244]
   25024:	mov	x0, #0x3320                	// #13088
   25028:	add	x0, x2, x0
   2502c:	lsl	x0, x0, #1
   25030:	add	x0, x1, x0
   25034:	ldrh	w1, [x0, #4]
   25038:	ldr	x2, [sp, #216]
   2503c:	ldr	w3, [sp, #244]
   25040:	mov	x0, #0x3320                	// #13088
   25044:	add	x0, x3, x0
   25048:	lsl	x0, x0, #1
   2504c:	add	x0, x2, x0
   25050:	ldrh	w0, [x0, #4]
   25054:	lsr	w0, w0, #5
   25058:	and	w0, w0, #0xffff
   2505c:	sub	w0, w1, w0
   25060:	and	w3, w0, #0xffff
   25064:	ldr	x1, [sp, #216]
   25068:	ldr	w2, [sp, #244]
   2506c:	mov	x0, #0x3320                	// #13088
   25070:	add	x0, x2, x0
   25074:	lsl	x0, x0, #1
   25078:	add	x0, x1, x0
   2507c:	mov	w1, w3
   25080:	strh	w1, [x0, #4]
   25084:	ldr	w0, [sp, #272]
   25088:	add	w0, w0, #0x8
   2508c:	str	w0, [sp, #272]
   25090:	ldr	w0, [sp, #272]
   25094:	cmn	w0, #0x1
   25098:	b.ne	2513c <lzma_mode_is_supported@@XZ_5.0+0xa4a4>  // b.any
   2509c:	ldr	x0, [sp, #216]
   250a0:	ldr	x0, [x0, #28312]
   250a4:	cmn	x0, #0x1
   250a8:	b.eq	250b8 <lzma_mode_is_supported@@XZ_5.0+0xa420>  // b.none
   250ac:	mov	w0, #0x9                   	// #9
   250b0:	str	w0, [sp, #228]
   250b4:	b	278fc <lzma_mode_is_supported@@XZ_5.0+0xcc64>
   250b8:	ldr	w1, [sp, #96]
   250bc:	mov	w0, #0xffffff              	// #16777215
   250c0:	cmp	w1, w0
   250c4:	b.hi	25130 <lzma_mode_is_supported@@XZ_5.0+0xa498>  // b.pmore
   250c8:	ldr	x1, [sp, #280]
   250cc:	ldr	x0, [sp, #40]
   250d0:	cmp	x1, x0
   250d4:	cset	w0, eq  // eq = none
   250d8:	and	w0, w0, #0xff
   250dc:	and	x0, x0, #0xff
   250e0:	cmp	x0, #0x0
   250e4:	b.eq	250fc <lzma_mode_is_supported@@XZ_5.0+0xa464>  // b.none
   250e8:	ldr	x0, [sp, #216]
   250ec:	add	x0, x0, #0x4, lsl #12
   250f0:	mov	w1, #0x30                  	// #48
   250f4:	str	w1, [x0, #11936]
   250f8:	b	278fc <lzma_mode_is_supported@@XZ_5.0+0xcc64>
   250fc:	ldr	w0, [sp, #96]
   25100:	lsl	w0, w0, #8
   25104:	str	w0, [sp, #96]
   25108:	ldr	w0, [sp, #100]
   2510c:	lsl	w1, w0, #8
   25110:	ldr	x0, [sp, #280]
   25114:	add	x2, x0, #0x1
   25118:	str	x2, [sp, #280]
   2511c:	ldr	x2, [sp, #56]
   25120:	add	x0, x2, x0
   25124:	ldrb	w0, [x0]
   25128:	orr	w0, w1, w0
   2512c:	str	w0, [sp, #100]
   25130:	mov	w0, #0x1                   	// #1
   25134:	str	w0, [sp, #228]
   25138:	b	278fc <lzma_mode_is_supported@@XZ_5.0+0xcc64>
   2513c:	ldr	w1, [sp, #272]
   25140:	add	x0, sp, #0x70
   25144:	bl	1ee14 <lzma_mode_is_supported@@XZ_5.0+0x417c>
   25148:	and	w0, w0, #0xff
   2514c:	eor	w0, w0, #0x1
   25150:	and	w0, w0, #0xff
   25154:	and	x0, x0, #0xff
   25158:	cmp	x0, #0x0
   2515c:	b.eq	2782c <lzma_mode_is_supported@@XZ_5.0+0xcb94>  // b.none
   25160:	mov	w0, #0x9                   	// #9
   25164:	str	w0, [sp, #228]
   25168:	b	278fc <lzma_mode_is_supported@@XZ_5.0+0xcc64>
   2516c:	ldr	w1, [sp, #96]
   25170:	ldr	w0, [sp, #180]
   25174:	sub	w0, w1, w0
   25178:	str	w0, [sp, #96]
   2517c:	ldr	w1, [sp, #100]
   25180:	ldr	w0, [sp, #180]
   25184:	sub	w0, w1, w0
   25188:	str	w0, [sp, #100]
   2518c:	ldr	x0, [sp, #216]
   25190:	ldr	w2, [sp, #276]
   25194:	mov	x1, #0x30c0                	// #12480
   25198:	add	x1, x2, x1
   2519c:	ldrh	w1, [x0, x1, lsl #1]
   251a0:	ldr	x0, [sp, #216]
   251a4:	ldr	w3, [sp, #276]
   251a8:	mov	x2, #0x30c0                	// #12480
   251ac:	add	x2, x3, x2
   251b0:	ldrh	w0, [x0, x2, lsl #1]
   251b4:	lsr	w0, w0, #5
   251b8:	and	w0, w0, #0xffff
   251bc:	sub	w0, w1, w0
   251c0:	and	w3, w0, #0xffff
   251c4:	ldr	x0, [sp, #216]
   251c8:	ldr	w2, [sp, #276]
   251cc:	mov	x1, #0x30c0                	// #12480
   251d0:	add	x1, x2, x1
   251d4:	mov	w2, w3
   251d8:	strh	w2, [x0, x1, lsl #1]
   251dc:	add	x0, sp, #0x70
   251e0:	mov	x1, #0x0                   	// #0
   251e4:	bl	1ee14 <lzma_mode_is_supported@@XZ_5.0+0x417c>
   251e8:	and	w0, w0, #0xff
   251ec:	eor	w0, w0, #0x1
   251f0:	and	w0, w0, #0xff
   251f4:	and	x0, x0, #0xff
   251f8:	cmp	x0, #0x0
   251fc:	b.eq	2520c <lzma_mode_is_supported@@XZ_5.0+0xa574>  // b.none
   25200:	mov	w0, #0x9                   	// #9
   25204:	str	w0, [sp, #228]
   25208:	b	278fc <lzma_mode_is_supported@@XZ_5.0+0xcc64>
   2520c:	ldr	w1, [sp, #96]
   25210:	mov	w0, #0xffffff              	// #16777215
   25214:	cmp	w1, w0
   25218:	b.hi	25284 <lzma_mode_is_supported@@XZ_5.0+0xa5ec>  // b.pmore
   2521c:	ldr	x1, [sp, #280]
   25220:	ldr	x0, [sp, #40]
   25224:	cmp	x1, x0
   25228:	cset	w0, eq  // eq = none
   2522c:	and	w0, w0, #0xff
   25230:	and	x0, x0, #0xff
   25234:	cmp	x0, #0x0
   25238:	b.eq	25250 <lzma_mode_is_supported@@XZ_5.0+0xa5b8>  // b.none
   2523c:	ldr	x0, [sp, #216]
   25240:	add	x0, x0, #0x4, lsl #12
   25244:	mov	w1, #0x31                  	// #49
   25248:	str	w1, [x0, #11936]
   2524c:	b	278fc <lzma_mode_is_supported@@XZ_5.0+0xcc64>
   25250:	ldr	w0, [sp, #96]
   25254:	lsl	w0, w0, #8
   25258:	str	w0, [sp, #96]
   2525c:	ldr	w0, [sp, #100]
   25260:	lsl	w1, w0, #8
   25264:	ldr	x0, [sp, #280]
   25268:	add	x2, x0, #0x1
   2526c:	str	x2, [sp, #280]
   25270:	ldr	x2, [sp, #56]
   25274:	add	x0, x2, x0
   25278:	ldrb	w0, [x0]
   2527c:	orr	w0, w1, w0
   25280:	str	w0, [sp, #100]
   25284:	ldr	w0, [sp, #96]
   25288:	lsr	w0, w0, #11
   2528c:	ldr	x2, [sp, #216]
   25290:	ldr	w3, [sp, #276]
   25294:	mov	x1, #0x30c8                	// #12488
   25298:	add	x1, x3, x1
   2529c:	lsl	x1, x1, #1
   252a0:	add	x1, x2, x1
   252a4:	ldrh	w1, [x1, #8]
   252a8:	mul	w0, w0, w1
   252ac:	str	w0, [sp, #180]
   252b0:	ldr	w0, [sp, #100]
   252b4:	ldr	w1, [sp, #180]
   252b8:	cmp	w1, w0
   252bc:	b.ls	2556c <lzma_mode_is_supported@@XZ_5.0+0xa8d4>  // b.plast
   252c0:	ldr	w0, [sp, #180]
   252c4:	str	w0, [sp, #96]
   252c8:	ldr	x1, [sp, #216]
   252cc:	ldr	w2, [sp, #276]
   252d0:	mov	x0, #0x30c8                	// #12488
   252d4:	add	x0, x2, x0
   252d8:	lsl	x0, x0, #1
   252dc:	add	x0, x1, x0
   252e0:	ldrh	w1, [x0, #8]
   252e4:	ldr	x2, [sp, #216]
   252e8:	ldr	w3, [sp, #276]
   252ec:	mov	x0, #0x30c8                	// #12488
   252f0:	add	x0, x3, x0
   252f4:	lsl	x0, x0, #1
   252f8:	add	x0, x2, x0
   252fc:	ldrh	w0, [x0, #8]
   25300:	mov	w2, w0
   25304:	mov	w0, #0x800                 	// #2048
   25308:	sub	w0, w0, w2
   2530c:	lsr	w0, w0, #5
   25310:	and	w0, w0, #0xffff
   25314:	add	w0, w1, w0
   25318:	and	w3, w0, #0xffff
   2531c:	ldr	x1, [sp, #216]
   25320:	ldr	w2, [sp, #276]
   25324:	mov	x0, #0x30c8                	// #12488
   25328:	add	x0, x2, x0
   2532c:	lsl	x0, x0, #1
   25330:	add	x0, x1, x0
   25334:	mov	w1, w3
   25338:	strh	w1, [x0, #8]
   2533c:	ldr	w1, [sp, #96]
   25340:	mov	w0, #0xffffff              	// #16777215
   25344:	cmp	w1, w0
   25348:	b.hi	253b4 <lzma_mode_is_supported@@XZ_5.0+0xa71c>  // b.pmore
   2534c:	ldr	x1, [sp, #280]
   25350:	ldr	x0, [sp, #40]
   25354:	cmp	x1, x0
   25358:	cset	w0, eq  // eq = none
   2535c:	and	w0, w0, #0xff
   25360:	and	x0, x0, #0xff
   25364:	cmp	x0, #0x0
   25368:	b.eq	25380 <lzma_mode_is_supported@@XZ_5.0+0xa6e8>  // b.none
   2536c:	ldr	x0, [sp, #216]
   25370:	add	x0, x0, #0x4, lsl #12
   25374:	mov	w1, #0x33                  	// #51
   25378:	str	w1, [x0, #11936]
   2537c:	b	278fc <lzma_mode_is_supported@@XZ_5.0+0xcc64>
   25380:	ldr	w0, [sp, #96]
   25384:	lsl	w0, w0, #8
   25388:	str	w0, [sp, #96]
   2538c:	ldr	w0, [sp, #100]
   25390:	lsl	w1, w0, #8
   25394:	ldr	x0, [sp, #280]
   25398:	add	x2, x0, #0x1
   2539c:	str	x2, [sp, #280]
   253a0:	ldr	x2, [sp, #56]
   253a4:	add	x0, x2, x0
   253a8:	ldrb	w0, [x0]
   253ac:	orr	w0, w1, w0
   253b0:	str	w0, [sp, #100]
   253b4:	ldr	w0, [sp, #96]
   253b8:	lsr	w0, w0, #11
   253bc:	ldr	x1, [sp, #216]
   253c0:	ldr	w2, [sp, #232]
   253c4:	ldr	w3, [sp, #276]
   253c8:	lsl	x3, x3, #4
   253cc:	add	x3, x3, x2
   253d0:	mov	x2, #0x30f0                	// #12528
   253d4:	add	x2, x3, x2
   253d8:	ldrh	w1, [x1, x2, lsl #1]
   253dc:	mul	w0, w0, w1
   253e0:	str	w0, [sp, #180]
   253e4:	ldr	w0, [sp, #100]
   253e8:	ldr	w1, [sp, #180]
   253ec:	cmp	w1, w0
   253f0:	b.ls	254d4 <lzma_mode_is_supported@@XZ_5.0+0xa83c>  // b.plast
   253f4:	ldr	w0, [sp, #180]
   253f8:	str	w0, [sp, #96]
   253fc:	ldr	x0, [sp, #216]
   25400:	ldr	w1, [sp, #232]
   25404:	ldr	w2, [sp, #276]
   25408:	lsl	x2, x2, #4
   2540c:	add	x2, x2, x1
   25410:	mov	x1, #0x30f0                	// #12528
   25414:	add	x1, x2, x1
   25418:	ldrh	w1, [x0, x1, lsl #1]
   2541c:	ldr	x0, [sp, #216]
   25420:	ldr	w2, [sp, #232]
   25424:	ldr	w3, [sp, #276]
   25428:	lsl	x3, x3, #4
   2542c:	add	x3, x3, x2
   25430:	mov	x2, #0x30f0                	// #12528
   25434:	add	x2, x3, x2
   25438:	ldrh	w0, [x0, x2, lsl #1]
   2543c:	mov	w2, w0
   25440:	mov	w0, #0x800                 	// #2048
   25444:	sub	w0, w0, w2
   25448:	lsr	w0, w0, #5
   2544c:	and	w0, w0, #0xffff
   25450:	add	w0, w1, w0
   25454:	and	w3, w0, #0xffff
   25458:	ldr	x0, [sp, #216]
   2545c:	ldr	w1, [sp, #232]
   25460:	ldr	w2, [sp, #276]
   25464:	lsl	x2, x2, #4
   25468:	add	x2, x2, x1
   2546c:	mov	x1, #0x30f0                	// #12528
   25470:	add	x1, x2, x1
   25474:	mov	w2, w3
   25478:	strh	w2, [x0, x1, lsl #1]
   2547c:	ldr	w0, [sp, #276]
   25480:	cmp	w0, #0x6
   25484:	b.hi	25490 <lzma_mode_is_supported@@XZ_5.0+0xa7f8>  // b.pmore
   25488:	mov	w0, #0x9                   	// #9
   2548c:	b	25494 <lzma_mode_is_supported@@XZ_5.0+0xa7fc>
   25490:	mov	w0, #0xb                   	// #11
   25494:	str	w0, [sp, #276]
   25498:	add	x0, sp, #0x70
   2549c:	ldr	w1, [sp, #272]
   254a0:	bl	1edb4 <lzma_mode_is_supported@@XZ_5.0+0x411c>
   254a4:	and	w1, w0, #0xff
   254a8:	add	x0, sp, #0x70
   254ac:	bl	1f12c <lzma_mode_is_supported@@XZ_5.0+0x4494>
   254b0:	and	w0, w0, #0xff
   254b4:	and	x0, x0, #0xff
   254b8:	cmp	x0, #0x0
   254bc:	b.eq	2786c <lzma_mode_is_supported@@XZ_5.0+0xcbd4>  // b.none
   254c0:	ldr	x0, [sp, #216]
   254c4:	add	x0, x0, #0x4, lsl #12
   254c8:	mov	w1, #0x32                  	// #50
   254cc:	str	w1, [x0, #11936]
   254d0:	b	278fc <lzma_mode_is_supported@@XZ_5.0+0xcc64>
   254d4:	ldr	w1, [sp, #96]
   254d8:	ldr	w0, [sp, #180]
   254dc:	sub	w0, w1, w0
   254e0:	str	w0, [sp, #96]
   254e4:	ldr	w1, [sp, #100]
   254e8:	ldr	w0, [sp, #180]
   254ec:	sub	w0, w1, w0
   254f0:	str	w0, [sp, #100]
   254f4:	ldr	x0, [sp, #216]
   254f8:	ldr	w1, [sp, #232]
   254fc:	ldr	w2, [sp, #276]
   25500:	lsl	x2, x2, #4
   25504:	add	x2, x2, x1
   25508:	mov	x1, #0x30f0                	// #12528
   2550c:	add	x1, x2, x1
   25510:	ldrh	w1, [x0, x1, lsl #1]
   25514:	ldr	x0, [sp, #216]
   25518:	ldr	w2, [sp, #232]
   2551c:	ldr	w3, [sp, #276]
   25520:	lsl	x3, x3, #4
   25524:	add	x3, x3, x2
   25528:	mov	x2, #0x30f0                	// #12528
   2552c:	add	x2, x3, x2
   25530:	ldrh	w0, [x0, x2, lsl #1]
   25534:	lsr	w0, w0, #5
   25538:	and	w0, w0, #0xffff
   2553c:	sub	w0, w1, w0
   25540:	and	w3, w0, #0xffff
   25544:	ldr	x0, [sp, #216]
   25548:	ldr	w1, [sp, #232]
   2554c:	ldr	w2, [sp, #276]
   25550:	lsl	x2, x2, #4
   25554:	add	x2, x2, x1
   25558:	mov	x1, #0x30f0                	// #12528
   2555c:	add	x1, x2, x1
   25560:	mov	w2, w3
   25564:	strh	w2, [x0, x1, lsl #1]
   25568:	b	25994 <lzma_mode_is_supported@@XZ_5.0+0xacfc>
   2556c:	ldr	w1, [sp, #96]
   25570:	ldr	w0, [sp, #180]
   25574:	sub	w0, w1, w0
   25578:	str	w0, [sp, #96]
   2557c:	ldr	w1, [sp, #100]
   25580:	ldr	w0, [sp, #180]
   25584:	sub	w0, w1, w0
   25588:	str	w0, [sp, #100]
   2558c:	ldr	x1, [sp, #216]
   25590:	ldr	w2, [sp, #276]
   25594:	mov	x0, #0x30c8                	// #12488
   25598:	add	x0, x2, x0
   2559c:	lsl	x0, x0, #1
   255a0:	add	x0, x1, x0
   255a4:	ldrh	w1, [x0, #8]
   255a8:	ldr	x2, [sp, #216]
   255ac:	ldr	w3, [sp, #276]
   255b0:	mov	x0, #0x30c8                	// #12488
   255b4:	add	x0, x3, x0
   255b8:	lsl	x0, x0, #1
   255bc:	add	x0, x2, x0
   255c0:	ldrh	w0, [x0, #8]
   255c4:	lsr	w0, w0, #5
   255c8:	and	w0, w0, #0xffff
   255cc:	sub	w0, w1, w0
   255d0:	and	w3, w0, #0xffff
   255d4:	ldr	x1, [sp, #216]
   255d8:	ldr	w2, [sp, #276]
   255dc:	mov	x0, #0x30c8                	// #12488
   255e0:	add	x0, x2, x0
   255e4:	lsl	x0, x0, #1
   255e8:	add	x0, x1, x0
   255ec:	mov	w1, w3
   255f0:	strh	w1, [x0, #8]
   255f4:	ldr	w1, [sp, #96]
   255f8:	mov	w0, #0xffffff              	// #16777215
   255fc:	cmp	w1, w0
   25600:	b.hi	2566c <lzma_mode_is_supported@@XZ_5.0+0xa9d4>  // b.pmore
   25604:	ldr	x1, [sp, #280]
   25608:	ldr	x0, [sp, #40]
   2560c:	cmp	x1, x0
   25610:	cset	w0, eq  // eq = none
   25614:	and	w0, w0, #0xff
   25618:	and	x0, x0, #0xff
   2561c:	cmp	x0, #0x0
   25620:	b.eq	25638 <lzma_mode_is_supported@@XZ_5.0+0xa9a0>  // b.none
   25624:	ldr	x0, [sp, #216]
   25628:	add	x0, x0, #0x4, lsl #12
   2562c:	mov	w1, #0x34                  	// #52
   25630:	str	w1, [x0, #11936]
   25634:	b	278fc <lzma_mode_is_supported@@XZ_5.0+0xcc64>
   25638:	ldr	w0, [sp, #96]
   2563c:	lsl	w0, w0, #8
   25640:	str	w0, [sp, #96]
   25644:	ldr	w0, [sp, #100]
   25648:	lsl	w1, w0, #8
   2564c:	ldr	x0, [sp, #280]
   25650:	add	x2, x0, #0x1
   25654:	str	x2, [sp, #280]
   25658:	ldr	x2, [sp, #56]
   2565c:	add	x0, x2, x0
   25660:	ldrb	w0, [x0]
   25664:	orr	w0, w1, w0
   25668:	str	w0, [sp, #100]
   2566c:	ldr	w0, [sp, #96]
   25670:	lsr	w0, w0, #11
   25674:	ldr	x1, [sp, #216]
   25678:	ldr	w3, [sp, #276]
   2567c:	mov	x2, #0x30d8                	// #12504
   25680:	add	x2, x3, x2
   25684:	ldrh	w1, [x1, x2, lsl #1]
   25688:	mul	w0, w0, w1
   2568c:	str	w0, [sp, #180]
   25690:	ldr	w0, [sp, #100]
   25694:	ldr	w1, [sp, #180]
   25698:	cmp	w1, w0
   2569c:	b.ls	25720 <lzma_mode_is_supported@@XZ_5.0+0xaa88>  // b.plast
   256a0:	ldr	w0, [sp, #180]
   256a4:	str	w0, [sp, #96]
   256a8:	ldr	x0, [sp, #216]
   256ac:	ldr	w2, [sp, #276]
   256b0:	mov	x1, #0x30d8                	// #12504
   256b4:	add	x1, x2, x1
   256b8:	ldrh	w1, [x0, x1, lsl #1]
   256bc:	ldr	x0, [sp, #216]
   256c0:	ldr	w3, [sp, #276]
   256c4:	mov	x2, #0x30d8                	// #12504
   256c8:	add	x2, x3, x2
   256cc:	ldrh	w0, [x0, x2, lsl #1]
   256d0:	mov	w2, w0
   256d4:	mov	w0, #0x800                 	// #2048
   256d8:	sub	w0, w0, w2
   256dc:	lsr	w0, w0, #5
   256e0:	and	w0, w0, #0xffff
   256e4:	add	w0, w1, w0
   256e8:	and	w3, w0, #0xffff
   256ec:	ldr	x0, [sp, #216]
   256f0:	ldr	w2, [sp, #276]
   256f4:	mov	x1, #0x30d8                	// #12504
   256f8:	add	x1, x2, x1
   256fc:	mov	w2, w3
   25700:	strh	w2, [x0, x1, lsl #1]
   25704:	ldr	w0, [sp, #268]
   25708:	str	w0, [sp, #176]
   2570c:	ldr	w0, [sp, #272]
   25710:	str	w0, [sp, #268]
   25714:	ldr	w0, [sp, #176]
   25718:	str	w0, [sp, #272]
   2571c:	b	25994 <lzma_mode_is_supported@@XZ_5.0+0xacfc>
   25720:	ldr	w1, [sp, #96]
   25724:	ldr	w0, [sp, #180]
   25728:	sub	w0, w1, w0
   2572c:	str	w0, [sp, #96]
   25730:	ldr	w1, [sp, #100]
   25734:	ldr	w0, [sp, #180]
   25738:	sub	w0, w1, w0
   2573c:	str	w0, [sp, #100]
   25740:	ldr	x0, [sp, #216]
   25744:	ldr	w2, [sp, #276]
   25748:	mov	x1, #0x30d8                	// #12504
   2574c:	add	x1, x2, x1
   25750:	ldrh	w1, [x0, x1, lsl #1]
   25754:	ldr	x0, [sp, #216]
   25758:	ldr	w3, [sp, #276]
   2575c:	mov	x2, #0x30d8                	// #12504
   25760:	add	x2, x3, x2
   25764:	ldrh	w0, [x0, x2, lsl #1]
   25768:	lsr	w0, w0, #5
   2576c:	and	w0, w0, #0xffff
   25770:	sub	w0, w1, w0
   25774:	and	w3, w0, #0xffff
   25778:	ldr	x0, [sp, #216]
   2577c:	ldr	w2, [sp, #276]
   25780:	mov	x1, #0x30d8                	// #12504
   25784:	add	x1, x2, x1
   25788:	mov	w2, w3
   2578c:	strh	w2, [x0, x1, lsl #1]
   25790:	ldr	w1, [sp, #96]
   25794:	mov	w0, #0xffffff              	// #16777215
   25798:	cmp	w1, w0
   2579c:	b.hi	25808 <lzma_mode_is_supported@@XZ_5.0+0xab70>  // b.pmore
   257a0:	ldr	x1, [sp, #280]
   257a4:	ldr	x0, [sp, #40]
   257a8:	cmp	x1, x0
   257ac:	cset	w0, eq  // eq = none
   257b0:	and	w0, w0, #0xff
   257b4:	and	x0, x0, #0xff
   257b8:	cmp	x0, #0x0
   257bc:	b.eq	257d4 <lzma_mode_is_supported@@XZ_5.0+0xab3c>  // b.none
   257c0:	ldr	x0, [sp, #216]
   257c4:	add	x0, x0, #0x4, lsl #12
   257c8:	mov	w1, #0x35                  	// #53
   257cc:	str	w1, [x0, #11936]
   257d0:	b	278fc <lzma_mode_is_supported@@XZ_5.0+0xcc64>
   257d4:	ldr	w0, [sp, #96]
   257d8:	lsl	w0, w0, #8
   257dc:	str	w0, [sp, #96]
   257e0:	ldr	w0, [sp, #100]
   257e4:	lsl	w1, w0, #8
   257e8:	ldr	x0, [sp, #280]
   257ec:	add	x2, x0, #0x1
   257f0:	str	x2, [sp, #280]
   257f4:	ldr	x2, [sp, #56]
   257f8:	add	x0, x2, x0
   257fc:	ldrb	w0, [x0]
   25800:	orr	w0, w1, w0
   25804:	str	w0, [sp, #100]
   25808:	ldr	w0, [sp, #96]
   2580c:	lsr	w0, w0, #11
   25810:	ldr	x2, [sp, #216]
   25814:	ldr	w3, [sp, #276]
   25818:	mov	x1, #0x30e0                	// #12512
   2581c:	add	x1, x3, x1
   25820:	lsl	x1, x1, #1
   25824:	add	x1, x2, x1
   25828:	ldrh	w1, [x1, #8]
   2582c:	mul	w0, w0, w1
   25830:	str	w0, [sp, #180]
   25834:	ldr	w0, [sp, #100]
   25838:	ldr	w1, [sp, #180]
   2583c:	cmp	w1, w0
   25840:	b.ls	258e4 <lzma_mode_is_supported@@XZ_5.0+0xac4c>  // b.plast
   25844:	ldr	w0, [sp, #180]
   25848:	str	w0, [sp, #96]
   2584c:	ldr	x1, [sp, #216]
   25850:	ldr	w2, [sp, #276]
   25854:	mov	x0, #0x30e0                	// #12512
   25858:	add	x0, x2, x0
   2585c:	lsl	x0, x0, #1
   25860:	add	x0, x1, x0
   25864:	ldrh	w1, [x0, #8]
   25868:	ldr	x2, [sp, #216]
   2586c:	ldr	w3, [sp, #276]
   25870:	mov	x0, #0x30e0                	// #12512
   25874:	add	x0, x3, x0
   25878:	lsl	x0, x0, #1
   2587c:	add	x0, x2, x0
   25880:	ldrh	w0, [x0, #8]
   25884:	mov	w2, w0
   25888:	mov	w0, #0x800                 	// #2048
   2588c:	sub	w0, w0, w2
   25890:	lsr	w0, w0, #5
   25894:	and	w0, w0, #0xffff
   25898:	add	w0, w1, w0
   2589c:	and	w3, w0, #0xffff
   258a0:	ldr	x1, [sp, #216]
   258a4:	ldr	w2, [sp, #276]
   258a8:	mov	x0, #0x30e0                	// #12512
   258ac:	add	x0, x2, x0
   258b0:	lsl	x0, x0, #1
   258b4:	add	x0, x1, x0
   258b8:	mov	w1, w3
   258bc:	strh	w1, [x0, #8]
   258c0:	ldr	w0, [sp, #264]
   258c4:	str	w0, [sp, #168]
   258c8:	ldr	w0, [sp, #268]
   258cc:	str	w0, [sp, #264]
   258d0:	ldr	w0, [sp, #272]
   258d4:	str	w0, [sp, #268]
   258d8:	ldr	w0, [sp, #168]
   258dc:	str	w0, [sp, #272]
   258e0:	b	25994 <lzma_mode_is_supported@@XZ_5.0+0xacfc>
   258e4:	ldr	w1, [sp, #96]
   258e8:	ldr	w0, [sp, #180]
   258ec:	sub	w0, w1, w0
   258f0:	str	w0, [sp, #96]
   258f4:	ldr	w1, [sp, #100]
   258f8:	ldr	w0, [sp, #180]
   258fc:	sub	w0, w1, w0
   25900:	str	w0, [sp, #100]
   25904:	ldr	x1, [sp, #216]
   25908:	ldr	w2, [sp, #276]
   2590c:	mov	x0, #0x30e0                	// #12512
   25910:	add	x0, x2, x0
   25914:	lsl	x0, x0, #1
   25918:	add	x0, x1, x0
   2591c:	ldrh	w1, [x0, #8]
   25920:	ldr	x2, [sp, #216]
   25924:	ldr	w3, [sp, #276]
   25928:	mov	x0, #0x30e0                	// #12512
   2592c:	add	x0, x3, x0
   25930:	lsl	x0, x0, #1
   25934:	add	x0, x2, x0
   25938:	ldrh	w0, [x0, #8]
   2593c:	lsr	w0, w0, #5
   25940:	and	w0, w0, #0xffff
   25944:	sub	w0, w1, w0
   25948:	and	w3, w0, #0xffff
   2594c:	ldr	x1, [sp, #216]
   25950:	ldr	w2, [sp, #276]
   25954:	mov	x0, #0x30e0                	// #12512
   25958:	add	x0, x2, x0
   2595c:	lsl	x0, x0, #1
   25960:	add	x0, x1, x0
   25964:	mov	w1, w3
   25968:	strh	w1, [x0, #8]
   2596c:	ldr	w0, [sp, #260]
   25970:	str	w0, [sp, #172]
   25974:	ldr	w0, [sp, #264]
   25978:	str	w0, [sp, #260]
   2597c:	ldr	w0, [sp, #268]
   25980:	str	w0, [sp, #264]
   25984:	ldr	w0, [sp, #272]
   25988:	str	w0, [sp, #268]
   2598c:	ldr	w0, [sp, #172]
   25990:	str	w0, [sp, #272]
   25994:	ldr	w0, [sp, #276]
   25998:	cmp	w0, #0x6
   2599c:	b.hi	259a8 <lzma_mode_is_supported@@XZ_5.0+0xad10>  // b.pmore
   259a0:	mov	w0, #0x8                   	// #8
   259a4:	b	259ac <lzma_mode_is_supported@@XZ_5.0+0xad14>
   259a8:	mov	w0, #0xb                   	// #11
   259ac:	str	w0, [sp, #276]
   259b0:	mov	w0, #0x1                   	// #1
   259b4:	str	w0, [sp, #244]
   259b8:	ldr	w1, [sp, #96]
   259bc:	mov	w0, #0xffffff              	// #16777215
   259c0:	cmp	w1, w0
   259c4:	b.hi	25a30 <lzma_mode_is_supported@@XZ_5.0+0xad98>  // b.pmore
   259c8:	ldr	x1, [sp, #280]
   259cc:	ldr	x0, [sp, #40]
   259d0:	cmp	x1, x0
   259d4:	cset	w0, eq  // eq = none
   259d8:	and	w0, w0, #0xff
   259dc:	and	x0, x0, #0xff
   259e0:	cmp	x0, #0x0
   259e4:	b.eq	259fc <lzma_mode_is_supported@@XZ_5.0+0xad64>  // b.none
   259e8:	ldr	x0, [sp, #216]
   259ec:	add	x0, x0, #0x4, lsl #12
   259f0:	mov	w1, #0x36                  	// #54
   259f4:	str	w1, [x0, #11936]
   259f8:	b	278fc <lzma_mode_is_supported@@XZ_5.0+0xcc64>
   259fc:	ldr	w0, [sp, #96]
   25a00:	lsl	w0, w0, #8
   25a04:	str	w0, [sp, #96]
   25a08:	ldr	w0, [sp, #100]
   25a0c:	lsl	w1, w0, #8
   25a10:	ldr	x0, [sp, #280]
   25a14:	add	x2, x0, #0x1
   25a18:	str	x2, [sp, #280]
   25a1c:	ldr	x2, [sp, #56]
   25a20:	add	x0, x2, x0
   25a24:	ldrb	w0, [x0]
   25a28:	orr	w0, w1, w0
   25a2c:	str	w0, [sp, #100]
   25a30:	ldr	w0, [sp, #96]
   25a34:	lsr	w0, w0, #11
   25a38:	ldr	x1, [sp, #216]
   25a3c:	add	x1, x1, #0x6, lsl #12
   25a40:	ldrh	w1, [x1, #2664]
   25a44:	mul	w0, w0, w1
   25a48:	str	w0, [sp, #180]
   25a4c:	ldr	w0, [sp, #100]
   25a50:	ldr	w1, [sp, #180]
   25a54:	cmp	w1, w0
   25a58:	b.ls	26138 <lzma_mode_is_supported@@XZ_5.0+0xb4a0>  // b.plast
   25a5c:	ldr	w0, [sp, #180]
   25a60:	str	w0, [sp, #96]
   25a64:	ldr	x0, [sp, #216]
   25a68:	add	x0, x0, #0x6, lsl #12
   25a6c:	ldrh	w1, [x0, #2664]
   25a70:	ldr	x0, [sp, #216]
   25a74:	add	x0, x0, #0x6, lsl #12
   25a78:	ldrh	w0, [x0, #2664]
   25a7c:	mov	w2, w0
   25a80:	mov	w0, #0x800                 	// #2048
   25a84:	sub	w0, w0, w2
   25a88:	lsr	w0, w0, #5
   25a8c:	and	w0, w0, #0xffff
   25a90:	add	w0, w1, w0
   25a94:	and	w1, w0, #0xffff
   25a98:	ldr	x0, [sp, #216]
   25a9c:	add	x0, x0, #0x6, lsl #12
   25aa0:	strh	w1, [x0, #2664]
   25aa4:	ldr	w1, [sp, #96]
   25aa8:	mov	w0, #0xffffff              	// #16777215
   25aac:	cmp	w1, w0
   25ab0:	b.hi	25b1c <lzma_mode_is_supported@@XZ_5.0+0xae84>  // b.pmore
   25ab4:	ldr	x1, [sp, #280]
   25ab8:	ldr	x0, [sp, #40]
   25abc:	cmp	x1, x0
   25ac0:	cset	w0, eq  // eq = none
   25ac4:	and	w0, w0, #0xff
   25ac8:	and	x0, x0, #0xff
   25acc:	cmp	x0, #0x0
   25ad0:	b.eq	25ae8 <lzma_mode_is_supported@@XZ_5.0+0xae50>  // b.none
   25ad4:	ldr	x0, [sp, #216]
   25ad8:	add	x0, x0, #0x4, lsl #12
   25adc:	mov	w1, #0x37                  	// #55
   25ae0:	str	w1, [x0, #11936]
   25ae4:	b	278fc <lzma_mode_is_supported@@XZ_5.0+0xcc64>
   25ae8:	ldr	w0, [sp, #96]
   25aec:	lsl	w0, w0, #8
   25af0:	str	w0, [sp, #96]
   25af4:	ldr	w0, [sp, #100]
   25af8:	lsl	w1, w0, #8
   25afc:	ldr	x0, [sp, #280]
   25b00:	add	x2, x0, #0x1
   25b04:	str	x2, [sp, #280]
   25b08:	ldr	x2, [sp, #56]
   25b0c:	add	x0, x2, x0
   25b10:	ldrb	w0, [x0]
   25b14:	orr	w0, w1, w0
   25b18:	str	w0, [sp, #100]
   25b1c:	ldr	w0, [sp, #96]
   25b20:	lsr	w0, w0, #11
   25b24:	ldr	x2, [sp, #216]
   25b28:	ldr	w1, [sp, #244]
   25b2c:	ldr	w3, [sp, #232]
   25b30:	lsl	x3, x3, #3
   25b34:	add	x3, x3, x1
   25b38:	mov	x1, #0x3530                	// #13616
   25b3c:	add	x1, x3, x1
   25b40:	lsl	x1, x1, #1
   25b44:	add	x1, x2, x1
   25b48:	ldrh	w1, [x1, #12]
   25b4c:	mul	w0, w0, w1
   25b50:	str	w0, [sp, #180]
   25b54:	ldr	w0, [sp, #100]
   25b58:	ldr	w1, [sp, #180]
   25b5c:	cmp	w1, w0
   25b60:	b.ls	25c14 <lzma_mode_is_supported@@XZ_5.0+0xaf7c>  // b.plast
   25b64:	ldr	w0, [sp, #180]
   25b68:	str	w0, [sp, #96]
   25b6c:	ldr	x1, [sp, #216]
   25b70:	ldr	w0, [sp, #244]
   25b74:	ldr	w2, [sp, #232]
   25b78:	lsl	x2, x2, #3
   25b7c:	add	x2, x2, x0
   25b80:	mov	x0, #0x3530                	// #13616
   25b84:	add	x0, x2, x0
   25b88:	lsl	x0, x0, #1
   25b8c:	add	x0, x1, x0
   25b90:	ldrh	w1, [x0, #12]
   25b94:	ldr	x2, [sp, #216]
   25b98:	ldr	w0, [sp, #244]
   25b9c:	ldr	w3, [sp, #232]
   25ba0:	lsl	x3, x3, #3
   25ba4:	add	x3, x3, x0
   25ba8:	mov	x0, #0x3530                	// #13616
   25bac:	add	x0, x3, x0
   25bb0:	lsl	x0, x0, #1
   25bb4:	add	x0, x2, x0
   25bb8:	ldrh	w0, [x0, #12]
   25bbc:	mov	w2, w0
   25bc0:	mov	w0, #0x800                 	// #2048
   25bc4:	sub	w0, w0, w2
   25bc8:	lsr	w0, w0, #5
   25bcc:	and	w0, w0, #0xffff
   25bd0:	add	w0, w1, w0
   25bd4:	and	w3, w0, #0xffff
   25bd8:	ldr	x1, [sp, #216]
   25bdc:	ldr	w0, [sp, #244]
   25be0:	ldr	w2, [sp, #232]
   25be4:	lsl	x2, x2, #3
   25be8:	add	x2, x2, x0
   25bec:	mov	x0, #0x3530                	// #13616
   25bf0:	add	x0, x2, x0
   25bf4:	lsl	x0, x0, #1
   25bf8:	add	x0, x1, x0
   25bfc:	mov	w1, w3
   25c00:	strh	w1, [x0, #12]
   25c04:	ldr	w0, [sp, #244]
   25c08:	lsl	w0, w0, #1
   25c0c:	str	w0, [sp, #244]
   25c10:	b	25cd0 <lzma_mode_is_supported@@XZ_5.0+0xb038>
   25c14:	ldr	w1, [sp, #96]
   25c18:	ldr	w0, [sp, #180]
   25c1c:	sub	w0, w1, w0
   25c20:	str	w0, [sp, #96]
   25c24:	ldr	w1, [sp, #100]
   25c28:	ldr	w0, [sp, #180]
   25c2c:	sub	w0, w1, w0
   25c30:	str	w0, [sp, #100]
   25c34:	ldr	x1, [sp, #216]
   25c38:	ldr	w0, [sp, #244]
   25c3c:	ldr	w2, [sp, #232]
   25c40:	lsl	x2, x2, #3
   25c44:	add	x2, x2, x0
   25c48:	mov	x0, #0x3530                	// #13616
   25c4c:	add	x0, x2, x0
   25c50:	lsl	x0, x0, #1
   25c54:	add	x0, x1, x0
   25c58:	ldrh	w1, [x0, #12]
   25c5c:	ldr	x2, [sp, #216]
   25c60:	ldr	w0, [sp, #244]
   25c64:	ldr	w3, [sp, #232]
   25c68:	lsl	x3, x3, #3
   25c6c:	add	x3, x3, x0
   25c70:	mov	x0, #0x3530                	// #13616
   25c74:	add	x0, x3, x0
   25c78:	lsl	x0, x0, #1
   25c7c:	add	x0, x2, x0
   25c80:	ldrh	w0, [x0, #12]
   25c84:	lsr	w0, w0, #5
   25c88:	and	w0, w0, #0xffff
   25c8c:	sub	w0, w1, w0
   25c90:	and	w3, w0, #0xffff
   25c94:	ldr	x1, [sp, #216]
   25c98:	ldr	w0, [sp, #244]
   25c9c:	ldr	w2, [sp, #232]
   25ca0:	lsl	x2, x2, #3
   25ca4:	add	x2, x2, x0
   25ca8:	mov	x0, #0x3530                	// #13616
   25cac:	add	x0, x2, x0
   25cb0:	lsl	x0, x0, #1
   25cb4:	add	x0, x1, x0
   25cb8:	mov	w1, w3
   25cbc:	strh	w1, [x0, #12]
   25cc0:	ldr	w0, [sp, #244]
   25cc4:	lsl	w0, w0, #1
   25cc8:	add	w0, w0, #0x1
   25ccc:	str	w0, [sp, #244]
   25cd0:	ldr	w1, [sp, #96]
   25cd4:	mov	w0, #0xffffff              	// #16777215
   25cd8:	cmp	w1, w0
   25cdc:	b.hi	25d48 <lzma_mode_is_supported@@XZ_5.0+0xb0b0>  // b.pmore
   25ce0:	ldr	x1, [sp, #280]
   25ce4:	ldr	x0, [sp, #40]
   25ce8:	cmp	x1, x0
   25cec:	cset	w0, eq  // eq = none
   25cf0:	and	w0, w0, #0xff
   25cf4:	and	x0, x0, #0xff
   25cf8:	cmp	x0, #0x0
   25cfc:	b.eq	25d14 <lzma_mode_is_supported@@XZ_5.0+0xb07c>  // b.none
   25d00:	ldr	x0, [sp, #216]
   25d04:	add	x0, x0, #0x4, lsl #12
   25d08:	mov	w1, #0x38                  	// #56
   25d0c:	str	w1, [x0, #11936]
   25d10:	b	278fc <lzma_mode_is_supported@@XZ_5.0+0xcc64>
   25d14:	ldr	w0, [sp, #96]
   25d18:	lsl	w0, w0, #8
   25d1c:	str	w0, [sp, #96]
   25d20:	ldr	w0, [sp, #100]
   25d24:	lsl	w1, w0, #8
   25d28:	ldr	x0, [sp, #280]
   25d2c:	add	x2, x0, #0x1
   25d30:	str	x2, [sp, #280]
   25d34:	ldr	x2, [sp, #56]
   25d38:	add	x0, x2, x0
   25d3c:	ldrb	w0, [x0]
   25d40:	orr	w0, w1, w0
   25d44:	str	w0, [sp, #100]
   25d48:	ldr	w0, [sp, #96]
   25d4c:	lsr	w0, w0, #11
   25d50:	ldr	x2, [sp, #216]
   25d54:	ldr	w1, [sp, #244]
   25d58:	ldr	w3, [sp, #232]
   25d5c:	lsl	x3, x3, #3
   25d60:	add	x3, x3, x1
   25d64:	mov	x1, #0x3530                	// #13616
   25d68:	add	x1, x3, x1
   25d6c:	lsl	x1, x1, #1
   25d70:	add	x1, x2, x1
   25d74:	ldrh	w1, [x1, #12]
   25d78:	mul	w0, w0, w1
   25d7c:	str	w0, [sp, #180]
   25d80:	ldr	w0, [sp, #100]
   25d84:	ldr	w1, [sp, #180]
   25d88:	cmp	w1, w0
   25d8c:	b.ls	25e40 <lzma_mode_is_supported@@XZ_5.0+0xb1a8>  // b.plast
   25d90:	ldr	w0, [sp, #180]
   25d94:	str	w0, [sp, #96]
   25d98:	ldr	x1, [sp, #216]
   25d9c:	ldr	w0, [sp, #244]
   25da0:	ldr	w2, [sp, #232]
   25da4:	lsl	x2, x2, #3
   25da8:	add	x2, x2, x0
   25dac:	mov	x0, #0x3530                	// #13616
   25db0:	add	x0, x2, x0
   25db4:	lsl	x0, x0, #1
   25db8:	add	x0, x1, x0
   25dbc:	ldrh	w1, [x0, #12]
   25dc0:	ldr	x2, [sp, #216]
   25dc4:	ldr	w0, [sp, #244]
   25dc8:	ldr	w3, [sp, #232]
   25dcc:	lsl	x3, x3, #3
   25dd0:	add	x3, x3, x0
   25dd4:	mov	x0, #0x3530                	// #13616
   25dd8:	add	x0, x3, x0
   25ddc:	lsl	x0, x0, #1
   25de0:	add	x0, x2, x0
   25de4:	ldrh	w0, [x0, #12]
   25de8:	mov	w2, w0
   25dec:	mov	w0, #0x800                 	// #2048
   25df0:	sub	w0, w0, w2
   25df4:	lsr	w0, w0, #5
   25df8:	and	w0, w0, #0xffff
   25dfc:	add	w0, w1, w0
   25e00:	and	w3, w0, #0xffff
   25e04:	ldr	x1, [sp, #216]
   25e08:	ldr	w0, [sp, #244]
   25e0c:	ldr	w2, [sp, #232]
   25e10:	lsl	x2, x2, #3
   25e14:	add	x2, x2, x0
   25e18:	mov	x0, #0x3530                	// #13616
   25e1c:	add	x0, x2, x0
   25e20:	lsl	x0, x0, #1
   25e24:	add	x0, x1, x0
   25e28:	mov	w1, w3
   25e2c:	strh	w1, [x0, #12]
   25e30:	ldr	w0, [sp, #244]
   25e34:	lsl	w0, w0, #1
   25e38:	str	w0, [sp, #244]
   25e3c:	b	25efc <lzma_mode_is_supported@@XZ_5.0+0xb264>
   25e40:	ldr	w1, [sp, #96]
   25e44:	ldr	w0, [sp, #180]
   25e48:	sub	w0, w1, w0
   25e4c:	str	w0, [sp, #96]
   25e50:	ldr	w1, [sp, #100]
   25e54:	ldr	w0, [sp, #180]
   25e58:	sub	w0, w1, w0
   25e5c:	str	w0, [sp, #100]
   25e60:	ldr	x1, [sp, #216]
   25e64:	ldr	w0, [sp, #244]
   25e68:	ldr	w2, [sp, #232]
   25e6c:	lsl	x2, x2, #3
   25e70:	add	x2, x2, x0
   25e74:	mov	x0, #0x3530                	// #13616
   25e78:	add	x0, x2, x0
   25e7c:	lsl	x0, x0, #1
   25e80:	add	x0, x1, x0
   25e84:	ldrh	w1, [x0, #12]
   25e88:	ldr	x2, [sp, #216]
   25e8c:	ldr	w0, [sp, #244]
   25e90:	ldr	w3, [sp, #232]
   25e94:	lsl	x3, x3, #3
   25e98:	add	x3, x3, x0
   25e9c:	mov	x0, #0x3530                	// #13616
   25ea0:	add	x0, x3, x0
   25ea4:	lsl	x0, x0, #1
   25ea8:	add	x0, x2, x0
   25eac:	ldrh	w0, [x0, #12]
   25eb0:	lsr	w0, w0, #5
   25eb4:	and	w0, w0, #0xffff
   25eb8:	sub	w0, w1, w0
   25ebc:	and	w3, w0, #0xffff
   25ec0:	ldr	x1, [sp, #216]
   25ec4:	ldr	w0, [sp, #244]
   25ec8:	ldr	w2, [sp, #232]
   25ecc:	lsl	x2, x2, #3
   25ed0:	add	x2, x2, x0
   25ed4:	mov	x0, #0x3530                	// #13616
   25ed8:	add	x0, x2, x0
   25edc:	lsl	x0, x0, #1
   25ee0:	add	x0, x1, x0
   25ee4:	mov	w1, w3
   25ee8:	strh	w1, [x0, #12]
   25eec:	ldr	w0, [sp, #244]
   25ef0:	lsl	w0, w0, #1
   25ef4:	add	w0, w0, #0x1
   25ef8:	str	w0, [sp, #244]
   25efc:	ldr	w1, [sp, #96]
   25f00:	mov	w0, #0xffffff              	// #16777215
   25f04:	cmp	w1, w0
   25f08:	b.hi	25f74 <lzma_mode_is_supported@@XZ_5.0+0xb2dc>  // b.pmore
   25f0c:	ldr	x1, [sp, #280]
   25f10:	ldr	x0, [sp, #40]
   25f14:	cmp	x1, x0
   25f18:	cset	w0, eq  // eq = none
   25f1c:	and	w0, w0, #0xff
   25f20:	and	x0, x0, #0xff
   25f24:	cmp	x0, #0x0
   25f28:	b.eq	25f40 <lzma_mode_is_supported@@XZ_5.0+0xb2a8>  // b.none
   25f2c:	ldr	x0, [sp, #216]
   25f30:	add	x0, x0, #0x4, lsl #12
   25f34:	mov	w1, #0x39                  	// #57
   25f38:	str	w1, [x0, #11936]
   25f3c:	b	278fc <lzma_mode_is_supported@@XZ_5.0+0xcc64>
   25f40:	ldr	w0, [sp, #96]
   25f44:	lsl	w0, w0, #8
   25f48:	str	w0, [sp, #96]
   25f4c:	ldr	w0, [sp, #100]
   25f50:	lsl	w1, w0, #8
   25f54:	ldr	x0, [sp, #280]
   25f58:	add	x2, x0, #0x1
   25f5c:	str	x2, [sp, #280]
   25f60:	ldr	x2, [sp, #56]
   25f64:	add	x0, x2, x0
   25f68:	ldrb	w0, [x0]
   25f6c:	orr	w0, w1, w0
   25f70:	str	w0, [sp, #100]
   25f74:	ldr	w0, [sp, #96]
   25f78:	lsr	w0, w0, #11
   25f7c:	ldr	x2, [sp, #216]
   25f80:	ldr	w1, [sp, #244]
   25f84:	ldr	w3, [sp, #232]
   25f88:	lsl	x3, x3, #3
   25f8c:	add	x3, x3, x1
   25f90:	mov	x1, #0x3530                	// #13616
   25f94:	add	x1, x3, x1
   25f98:	lsl	x1, x1, #1
   25f9c:	add	x1, x2, x1
   25fa0:	ldrh	w1, [x1, #12]
   25fa4:	mul	w0, w0, w1
   25fa8:	str	w0, [sp, #180]
   25fac:	ldr	w0, [sp, #100]
   25fb0:	ldr	w1, [sp, #180]
   25fb4:	cmp	w1, w0
   25fb8:	b.ls	2606c <lzma_mode_is_supported@@XZ_5.0+0xb3d4>  // b.plast
   25fbc:	ldr	w0, [sp, #180]
   25fc0:	str	w0, [sp, #96]
   25fc4:	ldr	x1, [sp, #216]
   25fc8:	ldr	w0, [sp, #244]
   25fcc:	ldr	w2, [sp, #232]
   25fd0:	lsl	x2, x2, #3
   25fd4:	add	x2, x2, x0
   25fd8:	mov	x0, #0x3530                	// #13616
   25fdc:	add	x0, x2, x0
   25fe0:	lsl	x0, x0, #1
   25fe4:	add	x0, x1, x0
   25fe8:	ldrh	w1, [x0, #12]
   25fec:	ldr	x2, [sp, #216]
   25ff0:	ldr	w0, [sp, #244]
   25ff4:	ldr	w3, [sp, #232]
   25ff8:	lsl	x3, x3, #3
   25ffc:	add	x3, x3, x0
   26000:	mov	x0, #0x3530                	// #13616
   26004:	add	x0, x3, x0
   26008:	lsl	x0, x0, #1
   2600c:	add	x0, x2, x0
   26010:	ldrh	w0, [x0, #12]
   26014:	mov	w2, w0
   26018:	mov	w0, #0x800                 	// #2048
   2601c:	sub	w0, w0, w2
   26020:	lsr	w0, w0, #5
   26024:	and	w0, w0, #0xffff
   26028:	add	w0, w1, w0
   2602c:	and	w3, w0, #0xffff
   26030:	ldr	x1, [sp, #216]
   26034:	ldr	w0, [sp, #244]
   26038:	ldr	w2, [sp, #232]
   2603c:	lsl	x2, x2, #3
   26040:	add	x2, x2, x0
   26044:	mov	x0, #0x3530                	// #13616
   26048:	add	x0, x2, x0
   2604c:	lsl	x0, x0, #1
   26050:	add	x0, x1, x0
   26054:	mov	w1, w3
   26058:	strh	w1, [x0, #12]
   2605c:	ldr	w0, [sp, #244]
   26060:	lsl	w0, w0, #1
   26064:	str	w0, [sp, #244]
   26068:	b	26128 <lzma_mode_is_supported@@XZ_5.0+0xb490>
   2606c:	ldr	w1, [sp, #96]
   26070:	ldr	w0, [sp, #180]
   26074:	sub	w0, w1, w0
   26078:	str	w0, [sp, #96]
   2607c:	ldr	w1, [sp, #100]
   26080:	ldr	w0, [sp, #180]
   26084:	sub	w0, w1, w0
   26088:	str	w0, [sp, #100]
   2608c:	ldr	x1, [sp, #216]
   26090:	ldr	w0, [sp, #244]
   26094:	ldr	w2, [sp, #232]
   26098:	lsl	x2, x2, #3
   2609c:	add	x2, x2, x0
   260a0:	mov	x0, #0x3530                	// #13616
   260a4:	add	x0, x2, x0
   260a8:	lsl	x0, x0, #1
   260ac:	add	x0, x1, x0
   260b0:	ldrh	w1, [x0, #12]
   260b4:	ldr	x2, [sp, #216]
   260b8:	ldr	w0, [sp, #244]
   260bc:	ldr	w3, [sp, #232]
   260c0:	lsl	x3, x3, #3
   260c4:	add	x3, x3, x0
   260c8:	mov	x0, #0x3530                	// #13616
   260cc:	add	x0, x3, x0
   260d0:	lsl	x0, x0, #1
   260d4:	add	x0, x2, x0
   260d8:	ldrh	w0, [x0, #12]
   260dc:	lsr	w0, w0, #5
   260e0:	and	w0, w0, #0xffff
   260e4:	sub	w0, w1, w0
   260e8:	and	w3, w0, #0xffff
   260ec:	ldr	x1, [sp, #216]
   260f0:	ldr	w0, [sp, #244]
   260f4:	ldr	w2, [sp, #232]
   260f8:	lsl	x2, x2, #3
   260fc:	add	x2, x2, x0
   26100:	mov	x0, #0x3530                	// #13616
   26104:	add	x0, x2, x0
   26108:	lsl	x0, x0, #1
   2610c:	add	x0, x1, x0
   26110:	mov	w1, w3
   26114:	strh	w1, [x0, #12]
   26118:	ldr	w0, [sp, #244]
   2611c:	lsl	w0, w0, #1
   26120:	add	w0, w0, #0x1
   26124:	str	w0, [sp, #244]
   26128:	ldr	w0, [sp, #244]
   2612c:	sub	w0, w0, #0x6
   26130:	str	w0, [sp, #92]
   26134:	b	2782c <lzma_mode_is_supported@@XZ_5.0+0xcb94>
   26138:	ldr	w1, [sp, #96]
   2613c:	ldr	w0, [sp, #180]
   26140:	sub	w0, w1, w0
   26144:	str	w0, [sp, #96]
   26148:	ldr	w1, [sp, #100]
   2614c:	ldr	w0, [sp, #180]
   26150:	sub	w0, w1, w0
   26154:	str	w0, [sp, #100]
   26158:	ldr	x0, [sp, #216]
   2615c:	add	x0, x0, #0x6, lsl #12
   26160:	ldrh	w1, [x0, #2664]
   26164:	ldr	x0, [sp, #216]
   26168:	add	x0, x0, #0x6, lsl #12
   2616c:	ldrh	w0, [x0, #2664]
   26170:	lsr	w0, w0, #5
   26174:	and	w0, w0, #0xffff
   26178:	sub	w0, w1, w0
   2617c:	and	w1, w0, #0xffff
   26180:	ldr	x0, [sp, #216]
   26184:	add	x0, x0, #0x6, lsl #12
   26188:	strh	w1, [x0, #2664]
   2618c:	ldr	w1, [sp, #96]
   26190:	mov	w0, #0xffffff              	// #16777215
   26194:	cmp	w1, w0
   26198:	b.hi	26204 <lzma_mode_is_supported@@XZ_5.0+0xb56c>  // b.pmore
   2619c:	ldr	x1, [sp, #280]
   261a0:	ldr	x0, [sp, #40]
   261a4:	cmp	x1, x0
   261a8:	cset	w0, eq  // eq = none
   261ac:	and	w0, w0, #0xff
   261b0:	and	x0, x0, #0xff
   261b4:	cmp	x0, #0x0
   261b8:	b.eq	261d0 <lzma_mode_is_supported@@XZ_5.0+0xb538>  // b.none
   261bc:	ldr	x0, [sp, #216]
   261c0:	add	x0, x0, #0x4, lsl #12
   261c4:	mov	w1, #0x3a                  	// #58
   261c8:	str	w1, [x0, #11936]
   261cc:	b	278fc <lzma_mode_is_supported@@XZ_5.0+0xcc64>
   261d0:	ldr	w0, [sp, #96]
   261d4:	lsl	w0, w0, #8
   261d8:	str	w0, [sp, #96]
   261dc:	ldr	w0, [sp, #100]
   261e0:	lsl	w1, w0, #8
   261e4:	ldr	x0, [sp, #280]
   261e8:	add	x2, x0, #0x1
   261ec:	str	x2, [sp, #280]
   261f0:	ldr	x2, [sp, #56]
   261f4:	add	x0, x2, x0
   261f8:	ldrb	w0, [x0]
   261fc:	orr	w0, w1, w0
   26200:	str	w0, [sp, #100]
   26204:	ldr	w0, [sp, #96]
   26208:	lsr	w0, w0, #11
   2620c:	ldr	x1, [sp, #216]
   26210:	add	x1, x1, #0x6, lsl #12
   26214:	ldrh	w1, [x1, #2666]
   26218:	mul	w0, w0, w1
   2621c:	str	w0, [sp, #180]
   26220:	ldr	w0, [sp, #100]
   26224:	ldr	w1, [sp, #180]
   26228:	cmp	w1, w0
   2622c:	b.ls	2690c <lzma_mode_is_supported@@XZ_5.0+0xbc74>  // b.plast
   26230:	ldr	w0, [sp, #180]
   26234:	str	w0, [sp, #96]
   26238:	ldr	x0, [sp, #216]
   2623c:	add	x0, x0, #0x6, lsl #12
   26240:	ldrh	w1, [x0, #2666]
   26244:	ldr	x0, [sp, #216]
   26248:	add	x0, x0, #0x6, lsl #12
   2624c:	ldrh	w0, [x0, #2666]
   26250:	mov	w2, w0
   26254:	mov	w0, #0x800                 	// #2048
   26258:	sub	w0, w0, w2
   2625c:	lsr	w0, w0, #5
   26260:	and	w0, w0, #0xffff
   26264:	add	w0, w1, w0
   26268:	and	w1, w0, #0xffff
   2626c:	ldr	x0, [sp, #216]
   26270:	add	x0, x0, #0x6, lsl #12
   26274:	strh	w1, [x0, #2666]
   26278:	ldr	w1, [sp, #96]
   2627c:	mov	w0, #0xffffff              	// #16777215
   26280:	cmp	w1, w0
   26284:	b.hi	262f0 <lzma_mode_is_supported@@XZ_5.0+0xb658>  // b.pmore
   26288:	ldr	x1, [sp, #280]
   2628c:	ldr	x0, [sp, #40]
   26290:	cmp	x1, x0
   26294:	cset	w0, eq  // eq = none
   26298:	and	w0, w0, #0xff
   2629c:	and	x0, x0, #0xff
   262a0:	cmp	x0, #0x0
   262a4:	b.eq	262bc <lzma_mode_is_supported@@XZ_5.0+0xb624>  // b.none
   262a8:	ldr	x0, [sp, #216]
   262ac:	add	x0, x0, #0x4, lsl #12
   262b0:	mov	w1, #0x3b                  	// #59
   262b4:	str	w1, [x0, #11936]
   262b8:	b	278fc <lzma_mode_is_supported@@XZ_5.0+0xcc64>
   262bc:	ldr	w0, [sp, #96]
   262c0:	lsl	w0, w0, #8
   262c4:	str	w0, [sp, #96]
   262c8:	ldr	w0, [sp, #100]
   262cc:	lsl	w1, w0, #8
   262d0:	ldr	x0, [sp, #280]
   262d4:	add	x2, x0, #0x1
   262d8:	str	x2, [sp, #280]
   262dc:	ldr	x2, [sp, #56]
   262e0:	add	x0, x2, x0
   262e4:	ldrb	w0, [x0]
   262e8:	orr	w0, w1, w0
   262ec:	str	w0, [sp, #100]
   262f0:	ldr	w0, [sp, #96]
   262f4:	lsr	w0, w0, #11
   262f8:	ldr	x2, [sp, #216]
   262fc:	ldr	w1, [sp, #244]
   26300:	ldr	w3, [sp, #232]
   26304:	lsl	x3, x3, #3
   26308:	add	x3, x3, x1
   2630c:	mov	x1, #0x35b0                	// #13744
   26310:	add	x1, x3, x1
   26314:	lsl	x1, x1, #1
   26318:	add	x1, x2, x1
   2631c:	ldrh	w1, [x1, #12]
   26320:	mul	w0, w0, w1
   26324:	str	w0, [sp, #180]
   26328:	ldr	w0, [sp, #100]
   2632c:	ldr	w1, [sp, #180]
   26330:	cmp	w1, w0
   26334:	b.ls	263e8 <lzma_mode_is_supported@@XZ_5.0+0xb750>  // b.plast
   26338:	ldr	w0, [sp, #180]
   2633c:	str	w0, [sp, #96]
   26340:	ldr	x1, [sp, #216]
   26344:	ldr	w0, [sp, #244]
   26348:	ldr	w2, [sp, #232]
   2634c:	lsl	x2, x2, #3
   26350:	add	x2, x2, x0
   26354:	mov	x0, #0x35b0                	// #13744
   26358:	add	x0, x2, x0
   2635c:	lsl	x0, x0, #1
   26360:	add	x0, x1, x0
   26364:	ldrh	w1, [x0, #12]
   26368:	ldr	x2, [sp, #216]
   2636c:	ldr	w0, [sp, #244]
   26370:	ldr	w3, [sp, #232]
   26374:	lsl	x3, x3, #3
   26378:	add	x3, x3, x0
   2637c:	mov	x0, #0x35b0                	// #13744
   26380:	add	x0, x3, x0
   26384:	lsl	x0, x0, #1
   26388:	add	x0, x2, x0
   2638c:	ldrh	w0, [x0, #12]
   26390:	mov	w2, w0
   26394:	mov	w0, #0x800                 	// #2048
   26398:	sub	w0, w0, w2
   2639c:	lsr	w0, w0, #5
   263a0:	and	w0, w0, #0xffff
   263a4:	add	w0, w1, w0
   263a8:	and	w3, w0, #0xffff
   263ac:	ldr	x1, [sp, #216]
   263b0:	ldr	w0, [sp, #244]
   263b4:	ldr	w2, [sp, #232]
   263b8:	lsl	x2, x2, #3
   263bc:	add	x2, x2, x0
   263c0:	mov	x0, #0x35b0                	// #13744
   263c4:	add	x0, x2, x0
   263c8:	lsl	x0, x0, #1
   263cc:	add	x0, x1, x0
   263d0:	mov	w1, w3
   263d4:	strh	w1, [x0, #12]
   263d8:	ldr	w0, [sp, #244]
   263dc:	lsl	w0, w0, #1
   263e0:	str	w0, [sp, #244]
   263e4:	b	264a4 <lzma_mode_is_supported@@XZ_5.0+0xb80c>
   263e8:	ldr	w1, [sp, #96]
   263ec:	ldr	w0, [sp, #180]
   263f0:	sub	w0, w1, w0
   263f4:	str	w0, [sp, #96]
   263f8:	ldr	w1, [sp, #100]
   263fc:	ldr	w0, [sp, #180]
   26400:	sub	w0, w1, w0
   26404:	str	w0, [sp, #100]
   26408:	ldr	x1, [sp, #216]
   2640c:	ldr	w0, [sp, #244]
   26410:	ldr	w2, [sp, #232]
   26414:	lsl	x2, x2, #3
   26418:	add	x2, x2, x0
   2641c:	mov	x0, #0x35b0                	// #13744
   26420:	add	x0, x2, x0
   26424:	lsl	x0, x0, #1
   26428:	add	x0, x1, x0
   2642c:	ldrh	w1, [x0, #12]
   26430:	ldr	x2, [sp, #216]
   26434:	ldr	w0, [sp, #244]
   26438:	ldr	w3, [sp, #232]
   2643c:	lsl	x3, x3, #3
   26440:	add	x3, x3, x0
   26444:	mov	x0, #0x35b0                	// #13744
   26448:	add	x0, x3, x0
   2644c:	lsl	x0, x0, #1
   26450:	add	x0, x2, x0
   26454:	ldrh	w0, [x0, #12]
   26458:	lsr	w0, w0, #5
   2645c:	and	w0, w0, #0xffff
   26460:	sub	w0, w1, w0
   26464:	and	w3, w0, #0xffff
   26468:	ldr	x1, [sp, #216]
   2646c:	ldr	w0, [sp, #244]
   26470:	ldr	w2, [sp, #232]
   26474:	lsl	x2, x2, #3
   26478:	add	x2, x2, x0
   2647c:	mov	x0, #0x35b0                	// #13744
   26480:	add	x0, x2, x0
   26484:	lsl	x0, x0, #1
   26488:	add	x0, x1, x0
   2648c:	mov	w1, w3
   26490:	strh	w1, [x0, #12]
   26494:	ldr	w0, [sp, #244]
   26498:	lsl	w0, w0, #1
   2649c:	add	w0, w0, #0x1
   264a0:	str	w0, [sp, #244]
   264a4:	ldr	w1, [sp, #96]
   264a8:	mov	w0, #0xffffff              	// #16777215
   264ac:	cmp	w1, w0
   264b0:	b.hi	2651c <lzma_mode_is_supported@@XZ_5.0+0xb884>  // b.pmore
   264b4:	ldr	x1, [sp, #280]
   264b8:	ldr	x0, [sp, #40]
   264bc:	cmp	x1, x0
   264c0:	cset	w0, eq  // eq = none
   264c4:	and	w0, w0, #0xff
   264c8:	and	x0, x0, #0xff
   264cc:	cmp	x0, #0x0
   264d0:	b.eq	264e8 <lzma_mode_is_supported@@XZ_5.0+0xb850>  // b.none
   264d4:	ldr	x0, [sp, #216]
   264d8:	add	x0, x0, #0x4, lsl #12
   264dc:	mov	w1, #0x3c                  	// #60
   264e0:	str	w1, [x0, #11936]
   264e4:	b	278fc <lzma_mode_is_supported@@XZ_5.0+0xcc64>
   264e8:	ldr	w0, [sp, #96]
   264ec:	lsl	w0, w0, #8
   264f0:	str	w0, [sp, #96]
   264f4:	ldr	w0, [sp, #100]
   264f8:	lsl	w1, w0, #8
   264fc:	ldr	x0, [sp, #280]
   26500:	add	x2, x0, #0x1
   26504:	str	x2, [sp, #280]
   26508:	ldr	x2, [sp, #56]
   2650c:	add	x0, x2, x0
   26510:	ldrb	w0, [x0]
   26514:	orr	w0, w1, w0
   26518:	str	w0, [sp, #100]
   2651c:	ldr	w0, [sp, #96]
   26520:	lsr	w0, w0, #11
   26524:	ldr	x2, [sp, #216]
   26528:	ldr	w1, [sp, #244]
   2652c:	ldr	w3, [sp, #232]
   26530:	lsl	x3, x3, #3
   26534:	add	x3, x3, x1
   26538:	mov	x1, #0x35b0                	// #13744
   2653c:	add	x1, x3, x1
   26540:	lsl	x1, x1, #1
   26544:	add	x1, x2, x1
   26548:	ldrh	w1, [x1, #12]
   2654c:	mul	w0, w0, w1
   26550:	str	w0, [sp, #180]
   26554:	ldr	w0, [sp, #100]
   26558:	ldr	w1, [sp, #180]
   2655c:	cmp	w1, w0
   26560:	b.ls	26614 <lzma_mode_is_supported@@XZ_5.0+0xb97c>  // b.plast
   26564:	ldr	w0, [sp, #180]
   26568:	str	w0, [sp, #96]
   2656c:	ldr	x1, [sp, #216]
   26570:	ldr	w0, [sp, #244]
   26574:	ldr	w2, [sp, #232]
   26578:	lsl	x2, x2, #3
   2657c:	add	x2, x2, x0
   26580:	mov	x0, #0x35b0                	// #13744
   26584:	add	x0, x2, x0
   26588:	lsl	x0, x0, #1
   2658c:	add	x0, x1, x0
   26590:	ldrh	w1, [x0, #12]
   26594:	ldr	x2, [sp, #216]
   26598:	ldr	w0, [sp, #244]
   2659c:	ldr	w3, [sp, #232]
   265a0:	lsl	x3, x3, #3
   265a4:	add	x3, x3, x0
   265a8:	mov	x0, #0x35b0                	// #13744
   265ac:	add	x0, x3, x0
   265b0:	lsl	x0, x0, #1
   265b4:	add	x0, x2, x0
   265b8:	ldrh	w0, [x0, #12]
   265bc:	mov	w2, w0
   265c0:	mov	w0, #0x800                 	// #2048
   265c4:	sub	w0, w0, w2
   265c8:	lsr	w0, w0, #5
   265cc:	and	w0, w0, #0xffff
   265d0:	add	w0, w1, w0
   265d4:	and	w3, w0, #0xffff
   265d8:	ldr	x1, [sp, #216]
   265dc:	ldr	w0, [sp, #244]
   265e0:	ldr	w2, [sp, #232]
   265e4:	lsl	x2, x2, #3
   265e8:	add	x2, x2, x0
   265ec:	mov	x0, #0x35b0                	// #13744
   265f0:	add	x0, x2, x0
   265f4:	lsl	x0, x0, #1
   265f8:	add	x0, x1, x0
   265fc:	mov	w1, w3
   26600:	strh	w1, [x0, #12]
   26604:	ldr	w0, [sp, #244]
   26608:	lsl	w0, w0, #1
   2660c:	str	w0, [sp, #244]
   26610:	b	266d0 <lzma_mode_is_supported@@XZ_5.0+0xba38>
   26614:	ldr	w1, [sp, #96]
   26618:	ldr	w0, [sp, #180]
   2661c:	sub	w0, w1, w0
   26620:	str	w0, [sp, #96]
   26624:	ldr	w1, [sp, #100]
   26628:	ldr	w0, [sp, #180]
   2662c:	sub	w0, w1, w0
   26630:	str	w0, [sp, #100]
   26634:	ldr	x1, [sp, #216]
   26638:	ldr	w0, [sp, #244]
   2663c:	ldr	w2, [sp, #232]
   26640:	lsl	x2, x2, #3
   26644:	add	x2, x2, x0
   26648:	mov	x0, #0x35b0                	// #13744
   2664c:	add	x0, x2, x0
   26650:	lsl	x0, x0, #1
   26654:	add	x0, x1, x0
   26658:	ldrh	w1, [x0, #12]
   2665c:	ldr	x2, [sp, #216]
   26660:	ldr	w0, [sp, #244]
   26664:	ldr	w3, [sp, #232]
   26668:	lsl	x3, x3, #3
   2666c:	add	x3, x3, x0
   26670:	mov	x0, #0x35b0                	// #13744
   26674:	add	x0, x3, x0
   26678:	lsl	x0, x0, #1
   2667c:	add	x0, x2, x0
   26680:	ldrh	w0, [x0, #12]
   26684:	lsr	w0, w0, #5
   26688:	and	w0, w0, #0xffff
   2668c:	sub	w0, w1, w0
   26690:	and	w3, w0, #0xffff
   26694:	ldr	x1, [sp, #216]
   26698:	ldr	w0, [sp, #244]
   2669c:	ldr	w2, [sp, #232]
   266a0:	lsl	x2, x2, #3
   266a4:	add	x2, x2, x0
   266a8:	mov	x0, #0x35b0                	// #13744
   266ac:	add	x0, x2, x0
   266b0:	lsl	x0, x0, #1
   266b4:	add	x0, x1, x0
   266b8:	mov	w1, w3
   266bc:	strh	w1, [x0, #12]
   266c0:	ldr	w0, [sp, #244]
   266c4:	lsl	w0, w0, #1
   266c8:	add	w0, w0, #0x1
   266cc:	str	w0, [sp, #244]
   266d0:	ldr	w1, [sp, #96]
   266d4:	mov	w0, #0xffffff              	// #16777215
   266d8:	cmp	w1, w0
   266dc:	b.hi	26748 <lzma_mode_is_supported@@XZ_5.0+0xbab0>  // b.pmore
   266e0:	ldr	x1, [sp, #280]
   266e4:	ldr	x0, [sp, #40]
   266e8:	cmp	x1, x0
   266ec:	cset	w0, eq  // eq = none
   266f0:	and	w0, w0, #0xff
   266f4:	and	x0, x0, #0xff
   266f8:	cmp	x0, #0x0
   266fc:	b.eq	26714 <lzma_mode_is_supported@@XZ_5.0+0xba7c>  // b.none
   26700:	ldr	x0, [sp, #216]
   26704:	add	x0, x0, #0x4, lsl #12
   26708:	mov	w1, #0x3d                  	// #61
   2670c:	str	w1, [x0, #11936]
   26710:	b	278fc <lzma_mode_is_supported@@XZ_5.0+0xcc64>
   26714:	ldr	w0, [sp, #96]
   26718:	lsl	w0, w0, #8
   2671c:	str	w0, [sp, #96]
   26720:	ldr	w0, [sp, #100]
   26724:	lsl	w1, w0, #8
   26728:	ldr	x0, [sp, #280]
   2672c:	add	x2, x0, #0x1
   26730:	str	x2, [sp, #280]
   26734:	ldr	x2, [sp, #56]
   26738:	add	x0, x2, x0
   2673c:	ldrb	w0, [x0]
   26740:	orr	w0, w1, w0
   26744:	str	w0, [sp, #100]
   26748:	ldr	w0, [sp, #96]
   2674c:	lsr	w0, w0, #11
   26750:	ldr	x2, [sp, #216]
   26754:	ldr	w1, [sp, #244]
   26758:	ldr	w3, [sp, #232]
   2675c:	lsl	x3, x3, #3
   26760:	add	x3, x3, x1
   26764:	mov	x1, #0x35b0                	// #13744
   26768:	add	x1, x3, x1
   2676c:	lsl	x1, x1, #1
   26770:	add	x1, x2, x1
   26774:	ldrh	w1, [x1, #12]
   26778:	mul	w0, w0, w1
   2677c:	str	w0, [sp, #180]
   26780:	ldr	w0, [sp, #100]
   26784:	ldr	w1, [sp, #180]
   26788:	cmp	w1, w0
   2678c:	b.ls	26840 <lzma_mode_is_supported@@XZ_5.0+0xbba8>  // b.plast
   26790:	ldr	w0, [sp, #180]
   26794:	str	w0, [sp, #96]
   26798:	ldr	x1, [sp, #216]
   2679c:	ldr	w0, [sp, #244]
   267a0:	ldr	w2, [sp, #232]
   267a4:	lsl	x2, x2, #3
   267a8:	add	x2, x2, x0
   267ac:	mov	x0, #0x35b0                	// #13744
   267b0:	add	x0, x2, x0
   267b4:	lsl	x0, x0, #1
   267b8:	add	x0, x1, x0
   267bc:	ldrh	w1, [x0, #12]
   267c0:	ldr	x2, [sp, #216]
   267c4:	ldr	w0, [sp, #244]
   267c8:	ldr	w3, [sp, #232]
   267cc:	lsl	x3, x3, #3
   267d0:	add	x3, x3, x0
   267d4:	mov	x0, #0x35b0                	// #13744
   267d8:	add	x0, x3, x0
   267dc:	lsl	x0, x0, #1
   267e0:	add	x0, x2, x0
   267e4:	ldrh	w0, [x0, #12]
   267e8:	mov	w2, w0
   267ec:	mov	w0, #0x800                 	// #2048
   267f0:	sub	w0, w0, w2
   267f4:	lsr	w0, w0, #5
   267f8:	and	w0, w0, #0xffff
   267fc:	add	w0, w1, w0
   26800:	and	w3, w0, #0xffff
   26804:	ldr	x1, [sp, #216]
   26808:	ldr	w0, [sp, #244]
   2680c:	ldr	w2, [sp, #232]
   26810:	lsl	x2, x2, #3
   26814:	add	x2, x2, x0
   26818:	mov	x0, #0x35b0                	// #13744
   2681c:	add	x0, x2, x0
   26820:	lsl	x0, x0, #1
   26824:	add	x0, x1, x0
   26828:	mov	w1, w3
   2682c:	strh	w1, [x0, #12]
   26830:	ldr	w0, [sp, #244]
   26834:	lsl	w0, w0, #1
   26838:	str	w0, [sp, #244]
   2683c:	b	268fc <lzma_mode_is_supported@@XZ_5.0+0xbc64>
   26840:	ldr	w1, [sp, #96]
   26844:	ldr	w0, [sp, #180]
   26848:	sub	w0, w1, w0
   2684c:	str	w0, [sp, #96]
   26850:	ldr	w1, [sp, #100]
   26854:	ldr	w0, [sp, #180]
   26858:	sub	w0, w1, w0
   2685c:	str	w0, [sp, #100]
   26860:	ldr	x1, [sp, #216]
   26864:	ldr	w0, [sp, #244]
   26868:	ldr	w2, [sp, #232]
   2686c:	lsl	x2, x2, #3
   26870:	add	x2, x2, x0
   26874:	mov	x0, #0x35b0                	// #13744
   26878:	add	x0, x2, x0
   2687c:	lsl	x0, x0, #1
   26880:	add	x0, x1, x0
   26884:	ldrh	w1, [x0, #12]
   26888:	ldr	x2, [sp, #216]
   2688c:	ldr	w0, [sp, #244]
   26890:	ldr	w3, [sp, #232]
   26894:	lsl	x3, x3, #3
   26898:	add	x3, x3, x0
   2689c:	mov	x0, #0x35b0                	// #13744
   268a0:	add	x0, x3, x0
   268a4:	lsl	x0, x0, #1
   268a8:	add	x0, x2, x0
   268ac:	ldrh	w0, [x0, #12]
   268b0:	lsr	w0, w0, #5
   268b4:	and	w0, w0, #0xffff
   268b8:	sub	w0, w1, w0
   268bc:	and	w3, w0, #0xffff
   268c0:	ldr	x1, [sp, #216]
   268c4:	ldr	w0, [sp, #244]
   268c8:	ldr	w2, [sp, #232]
   268cc:	lsl	x2, x2, #3
   268d0:	add	x2, x2, x0
   268d4:	mov	x0, #0x35b0                	// #13744
   268d8:	add	x0, x2, x0
   268dc:	lsl	x0, x0, #1
   268e0:	add	x0, x1, x0
   268e4:	mov	w1, w3
   268e8:	strh	w1, [x0, #12]
   268ec:	ldr	w0, [sp, #244]
   268f0:	lsl	w0, w0, #1
   268f4:	add	w0, w0, #0x1
   268f8:	str	w0, [sp, #244]
   268fc:	ldr	w0, [sp, #244]
   26900:	add	w0, w0, #0x2
   26904:	str	w0, [sp, #92]
   26908:	b	2782c <lzma_mode_is_supported@@XZ_5.0+0xcb94>
   2690c:	ldr	w1, [sp, #96]
   26910:	ldr	w0, [sp, #180]
   26914:	sub	w0, w1, w0
   26918:	str	w0, [sp, #96]
   2691c:	ldr	w1, [sp, #100]
   26920:	ldr	w0, [sp, #180]
   26924:	sub	w0, w1, w0
   26928:	str	w0, [sp, #100]
   2692c:	ldr	x0, [sp, #216]
   26930:	add	x0, x0, #0x6, lsl #12
   26934:	ldrh	w1, [x0, #2666]
   26938:	ldr	x0, [sp, #216]
   2693c:	add	x0, x0, #0x6, lsl #12
   26940:	ldrh	w0, [x0, #2666]
   26944:	lsr	w0, w0, #5
   26948:	and	w0, w0, #0xffff
   2694c:	sub	w0, w1, w0
   26950:	and	w1, w0, #0xffff
   26954:	ldr	x0, [sp, #216]
   26958:	add	x0, x0, #0x6, lsl #12
   2695c:	strh	w1, [x0, #2666]
   26960:	ldr	w1, [sp, #96]
   26964:	mov	w0, #0xffffff              	// #16777215
   26968:	cmp	w1, w0
   2696c:	b.hi	269d8 <lzma_mode_is_supported@@XZ_5.0+0xbd40>  // b.pmore
   26970:	ldr	x1, [sp, #280]
   26974:	ldr	x0, [sp, #40]
   26978:	cmp	x1, x0
   2697c:	cset	w0, eq  // eq = none
   26980:	and	w0, w0, #0xff
   26984:	and	x0, x0, #0xff
   26988:	cmp	x0, #0x0
   2698c:	b.eq	269a4 <lzma_mode_is_supported@@XZ_5.0+0xbd0c>  // b.none
   26990:	ldr	x0, [sp, #216]
   26994:	add	x0, x0, #0x4, lsl #12
   26998:	mov	w1, #0x3e                  	// #62
   2699c:	str	w1, [x0, #11936]
   269a0:	b	278fc <lzma_mode_is_supported@@XZ_5.0+0xcc64>
   269a4:	ldr	w0, [sp, #96]
   269a8:	lsl	w0, w0, #8
   269ac:	str	w0, [sp, #96]
   269b0:	ldr	w0, [sp, #100]
   269b4:	lsl	w1, w0, #8
   269b8:	ldr	x0, [sp, #280]
   269bc:	add	x2, x0, #0x1
   269c0:	str	x2, [sp, #280]
   269c4:	ldr	x2, [sp, #56]
   269c8:	add	x0, x2, x0
   269cc:	ldrb	w0, [x0]
   269d0:	orr	w0, w1, w0
   269d4:	str	w0, [sp, #100]
   269d8:	ldr	w0, [sp, #96]
   269dc:	lsr	w0, w0, #11
   269e0:	ldr	x2, [sp, #216]
   269e4:	ldr	w3, [sp, #244]
   269e8:	mov	x1, #0x3630                	// #13872
   269ec:	add	x1, x3, x1
   269f0:	lsl	x1, x1, #1
   269f4:	add	x1, x2, x1
   269f8:	ldrh	w1, [x1, #12]
   269fc:	mul	w0, w0, w1
   26a00:	str	w0, [sp, #180]
   26a04:	ldr	w0, [sp, #100]
   26a08:	ldr	w1, [sp, #180]
   26a0c:	cmp	w1, w0
   26a10:	b.ls	26aa0 <lzma_mode_is_supported@@XZ_5.0+0xbe08>  // b.plast
   26a14:	ldr	w0, [sp, #180]
   26a18:	str	w0, [sp, #96]
   26a1c:	ldr	x1, [sp, #216]
   26a20:	ldr	w2, [sp, #244]
   26a24:	mov	x0, #0x3630                	// #13872
   26a28:	add	x0, x2, x0
   26a2c:	lsl	x0, x0, #1
   26a30:	add	x0, x1, x0
   26a34:	ldrh	w1, [x0, #12]
   26a38:	ldr	x2, [sp, #216]
   26a3c:	ldr	w3, [sp, #244]
   26a40:	mov	x0, #0x3630                	// #13872
   26a44:	add	x0, x3, x0
   26a48:	lsl	x0, x0, #1
   26a4c:	add	x0, x2, x0
   26a50:	ldrh	w0, [x0, #12]
   26a54:	mov	w2, w0
   26a58:	mov	w0, #0x800                 	// #2048
   26a5c:	sub	w0, w0, w2
   26a60:	lsr	w0, w0, #5
   26a64:	and	w0, w0, #0xffff
   26a68:	add	w0, w1, w0
   26a6c:	and	w3, w0, #0xffff
   26a70:	ldr	x1, [sp, #216]
   26a74:	ldr	w2, [sp, #244]
   26a78:	mov	x0, #0x3630                	// #13872
   26a7c:	add	x0, x2, x0
   26a80:	lsl	x0, x0, #1
   26a84:	add	x0, x1, x0
   26a88:	mov	w1, w3
   26a8c:	strh	w1, [x0, #12]
   26a90:	ldr	w0, [sp, #244]
   26a94:	lsl	w0, w0, #1
   26a98:	str	w0, [sp, #244]
   26a9c:	b	26b38 <lzma_mode_is_supported@@XZ_5.0+0xbea0>
   26aa0:	ldr	w1, [sp, #96]
   26aa4:	ldr	w0, [sp, #180]
   26aa8:	sub	w0, w1, w0
   26aac:	str	w0, [sp, #96]
   26ab0:	ldr	w1, [sp, #100]
   26ab4:	ldr	w0, [sp, #180]
   26ab8:	sub	w0, w1, w0
   26abc:	str	w0, [sp, #100]
   26ac0:	ldr	x1, [sp, #216]
   26ac4:	ldr	w2, [sp, #244]
   26ac8:	mov	x0, #0x3630                	// #13872
   26acc:	add	x0, x2, x0
   26ad0:	lsl	x0, x0, #1
   26ad4:	add	x0, x1, x0
   26ad8:	ldrh	w1, [x0, #12]
   26adc:	ldr	x2, [sp, #216]
   26ae0:	ldr	w3, [sp, #244]
   26ae4:	mov	x0, #0x3630                	// #13872
   26ae8:	add	x0, x3, x0
   26aec:	lsl	x0, x0, #1
   26af0:	add	x0, x2, x0
   26af4:	ldrh	w0, [x0, #12]
   26af8:	lsr	w0, w0, #5
   26afc:	and	w0, w0, #0xffff
   26b00:	sub	w0, w1, w0
   26b04:	and	w3, w0, #0xffff
   26b08:	ldr	x1, [sp, #216]
   26b0c:	ldr	w2, [sp, #244]
   26b10:	mov	x0, #0x3630                	// #13872
   26b14:	add	x0, x2, x0
   26b18:	lsl	x0, x0, #1
   26b1c:	add	x0, x1, x0
   26b20:	mov	w1, w3
   26b24:	strh	w1, [x0, #12]
   26b28:	ldr	w0, [sp, #244]
   26b2c:	lsl	w0, w0, #1
   26b30:	add	w0, w0, #0x1
   26b34:	str	w0, [sp, #244]
   26b38:	ldr	w1, [sp, #96]
   26b3c:	mov	w0, #0xffffff              	// #16777215
   26b40:	cmp	w1, w0
   26b44:	b.hi	26bb0 <lzma_mode_is_supported@@XZ_5.0+0xbf18>  // b.pmore
   26b48:	ldr	x1, [sp, #280]
   26b4c:	ldr	x0, [sp, #40]
   26b50:	cmp	x1, x0
   26b54:	cset	w0, eq  // eq = none
   26b58:	and	w0, w0, #0xff
   26b5c:	and	x0, x0, #0xff
   26b60:	cmp	x0, #0x0
   26b64:	b.eq	26b7c <lzma_mode_is_supported@@XZ_5.0+0xbee4>  // b.none
   26b68:	ldr	x0, [sp, #216]
   26b6c:	add	x0, x0, #0x4, lsl #12
   26b70:	mov	w1, #0x3f                  	// #63
   26b74:	str	w1, [x0, #11936]
   26b78:	b	278fc <lzma_mode_is_supported@@XZ_5.0+0xcc64>
   26b7c:	ldr	w0, [sp, #96]
   26b80:	lsl	w0, w0, #8
   26b84:	str	w0, [sp, #96]
   26b88:	ldr	w0, [sp, #100]
   26b8c:	lsl	w1, w0, #8
   26b90:	ldr	x0, [sp, #280]
   26b94:	add	x2, x0, #0x1
   26b98:	str	x2, [sp, #280]
   26b9c:	ldr	x2, [sp, #56]
   26ba0:	add	x0, x2, x0
   26ba4:	ldrb	w0, [x0]
   26ba8:	orr	w0, w1, w0
   26bac:	str	w0, [sp, #100]
   26bb0:	ldr	w0, [sp, #96]
   26bb4:	lsr	w0, w0, #11
   26bb8:	ldr	x2, [sp, #216]
   26bbc:	ldr	w3, [sp, #244]
   26bc0:	mov	x1, #0x3630                	// #13872
   26bc4:	add	x1, x3, x1
   26bc8:	lsl	x1, x1, #1
   26bcc:	add	x1, x2, x1
   26bd0:	ldrh	w1, [x1, #12]
   26bd4:	mul	w0, w0, w1
   26bd8:	str	w0, [sp, #180]
   26bdc:	ldr	w0, [sp, #100]
   26be0:	ldr	w1, [sp, #180]
   26be4:	cmp	w1, w0
   26be8:	b.ls	26c78 <lzma_mode_is_supported@@XZ_5.0+0xbfe0>  // b.plast
   26bec:	ldr	w0, [sp, #180]
   26bf0:	str	w0, [sp, #96]
   26bf4:	ldr	x1, [sp, #216]
   26bf8:	ldr	w2, [sp, #244]
   26bfc:	mov	x0, #0x3630                	// #13872
   26c00:	add	x0, x2, x0
   26c04:	lsl	x0, x0, #1
   26c08:	add	x0, x1, x0
   26c0c:	ldrh	w1, [x0, #12]
   26c10:	ldr	x2, [sp, #216]
   26c14:	ldr	w3, [sp, #244]
   26c18:	mov	x0, #0x3630                	// #13872
   26c1c:	add	x0, x3, x0
   26c20:	lsl	x0, x0, #1
   26c24:	add	x0, x2, x0
   26c28:	ldrh	w0, [x0, #12]
   26c2c:	mov	w2, w0
   26c30:	mov	w0, #0x800                 	// #2048
   26c34:	sub	w0, w0, w2
   26c38:	lsr	w0, w0, #5
   26c3c:	and	w0, w0, #0xffff
   26c40:	add	w0, w1, w0
   26c44:	and	w3, w0, #0xffff
   26c48:	ldr	x1, [sp, #216]
   26c4c:	ldr	w2, [sp, #244]
   26c50:	mov	x0, #0x3630                	// #13872
   26c54:	add	x0, x2, x0
   26c58:	lsl	x0, x0, #1
   26c5c:	add	x0, x1, x0
   26c60:	mov	w1, w3
   26c64:	strh	w1, [x0, #12]
   26c68:	ldr	w0, [sp, #244]
   26c6c:	lsl	w0, w0, #1
   26c70:	str	w0, [sp, #244]
   26c74:	b	26d10 <lzma_mode_is_supported@@XZ_5.0+0xc078>
   26c78:	ldr	w1, [sp, #96]
   26c7c:	ldr	w0, [sp, #180]
   26c80:	sub	w0, w1, w0
   26c84:	str	w0, [sp, #96]
   26c88:	ldr	w1, [sp, #100]
   26c8c:	ldr	w0, [sp, #180]
   26c90:	sub	w0, w1, w0
   26c94:	str	w0, [sp, #100]
   26c98:	ldr	x1, [sp, #216]
   26c9c:	ldr	w2, [sp, #244]
   26ca0:	mov	x0, #0x3630                	// #13872
   26ca4:	add	x0, x2, x0
   26ca8:	lsl	x0, x0, #1
   26cac:	add	x0, x1, x0
   26cb0:	ldrh	w1, [x0, #12]
   26cb4:	ldr	x2, [sp, #216]
   26cb8:	ldr	w3, [sp, #244]
   26cbc:	mov	x0, #0x3630                	// #13872
   26cc0:	add	x0, x3, x0
   26cc4:	lsl	x0, x0, #1
   26cc8:	add	x0, x2, x0
   26ccc:	ldrh	w0, [x0, #12]
   26cd0:	lsr	w0, w0, #5
   26cd4:	and	w0, w0, #0xffff
   26cd8:	sub	w0, w1, w0
   26cdc:	and	w3, w0, #0xffff
   26ce0:	ldr	x1, [sp, #216]
   26ce4:	ldr	w2, [sp, #244]
   26ce8:	mov	x0, #0x3630                	// #13872
   26cec:	add	x0, x2, x0
   26cf0:	lsl	x0, x0, #1
   26cf4:	add	x0, x1, x0
   26cf8:	mov	w1, w3
   26cfc:	strh	w1, [x0, #12]
   26d00:	ldr	w0, [sp, #244]
   26d04:	lsl	w0, w0, #1
   26d08:	add	w0, w0, #0x1
   26d0c:	str	w0, [sp, #244]
   26d10:	ldr	w1, [sp, #96]
   26d14:	mov	w0, #0xffffff              	// #16777215
   26d18:	cmp	w1, w0
   26d1c:	b.hi	26d88 <lzma_mode_is_supported@@XZ_5.0+0xc0f0>  // b.pmore
   26d20:	ldr	x1, [sp, #280]
   26d24:	ldr	x0, [sp, #40]
   26d28:	cmp	x1, x0
   26d2c:	cset	w0, eq  // eq = none
   26d30:	and	w0, w0, #0xff
   26d34:	and	x0, x0, #0xff
   26d38:	cmp	x0, #0x0
   26d3c:	b.eq	26d54 <lzma_mode_is_supported@@XZ_5.0+0xc0bc>  // b.none
   26d40:	ldr	x0, [sp, #216]
   26d44:	add	x0, x0, #0x4, lsl #12
   26d48:	mov	w1, #0x40                  	// #64
   26d4c:	str	w1, [x0, #11936]
   26d50:	b	278fc <lzma_mode_is_supported@@XZ_5.0+0xcc64>
   26d54:	ldr	w0, [sp, #96]
   26d58:	lsl	w0, w0, #8
   26d5c:	str	w0, [sp, #96]
   26d60:	ldr	w0, [sp, #100]
   26d64:	lsl	w1, w0, #8
   26d68:	ldr	x0, [sp, #280]
   26d6c:	add	x2, x0, #0x1
   26d70:	str	x2, [sp, #280]
   26d74:	ldr	x2, [sp, #56]
   26d78:	add	x0, x2, x0
   26d7c:	ldrb	w0, [x0]
   26d80:	orr	w0, w1, w0
   26d84:	str	w0, [sp, #100]
   26d88:	ldr	w0, [sp, #96]
   26d8c:	lsr	w0, w0, #11
   26d90:	ldr	x2, [sp, #216]
   26d94:	ldr	w3, [sp, #244]
   26d98:	mov	x1, #0x3630                	// #13872
   26d9c:	add	x1, x3, x1
   26da0:	lsl	x1, x1, #1
   26da4:	add	x1, x2, x1
   26da8:	ldrh	w1, [x1, #12]
   26dac:	mul	w0, w0, w1
   26db0:	str	w0, [sp, #180]
   26db4:	ldr	w0, [sp, #100]
   26db8:	ldr	w1, [sp, #180]
   26dbc:	cmp	w1, w0
   26dc0:	b.ls	26e50 <lzma_mode_is_supported@@XZ_5.0+0xc1b8>  // b.plast
   26dc4:	ldr	w0, [sp, #180]
   26dc8:	str	w0, [sp, #96]
   26dcc:	ldr	x1, [sp, #216]
   26dd0:	ldr	w2, [sp, #244]
   26dd4:	mov	x0, #0x3630                	// #13872
   26dd8:	add	x0, x2, x0
   26ddc:	lsl	x0, x0, #1
   26de0:	add	x0, x1, x0
   26de4:	ldrh	w1, [x0, #12]
   26de8:	ldr	x2, [sp, #216]
   26dec:	ldr	w3, [sp, #244]
   26df0:	mov	x0, #0x3630                	// #13872
   26df4:	add	x0, x3, x0
   26df8:	lsl	x0, x0, #1
   26dfc:	add	x0, x2, x0
   26e00:	ldrh	w0, [x0, #12]
   26e04:	mov	w2, w0
   26e08:	mov	w0, #0x800                 	// #2048
   26e0c:	sub	w0, w0, w2
   26e10:	lsr	w0, w0, #5
   26e14:	and	w0, w0, #0xffff
   26e18:	add	w0, w1, w0
   26e1c:	and	w3, w0, #0xffff
   26e20:	ldr	x1, [sp, #216]
   26e24:	ldr	w2, [sp, #244]
   26e28:	mov	x0, #0x3630                	// #13872
   26e2c:	add	x0, x2, x0
   26e30:	lsl	x0, x0, #1
   26e34:	add	x0, x1, x0
   26e38:	mov	w1, w3
   26e3c:	strh	w1, [x0, #12]
   26e40:	ldr	w0, [sp, #244]
   26e44:	lsl	w0, w0, #1
   26e48:	str	w0, [sp, #244]
   26e4c:	b	26ee8 <lzma_mode_is_supported@@XZ_5.0+0xc250>
   26e50:	ldr	w1, [sp, #96]
   26e54:	ldr	w0, [sp, #180]
   26e58:	sub	w0, w1, w0
   26e5c:	str	w0, [sp, #96]
   26e60:	ldr	w1, [sp, #100]
   26e64:	ldr	w0, [sp, #180]
   26e68:	sub	w0, w1, w0
   26e6c:	str	w0, [sp, #100]
   26e70:	ldr	x1, [sp, #216]
   26e74:	ldr	w2, [sp, #244]
   26e78:	mov	x0, #0x3630                	// #13872
   26e7c:	add	x0, x2, x0
   26e80:	lsl	x0, x0, #1
   26e84:	add	x0, x1, x0
   26e88:	ldrh	w1, [x0, #12]
   26e8c:	ldr	x2, [sp, #216]
   26e90:	ldr	w3, [sp, #244]
   26e94:	mov	x0, #0x3630                	// #13872
   26e98:	add	x0, x3, x0
   26e9c:	lsl	x0, x0, #1
   26ea0:	add	x0, x2, x0
   26ea4:	ldrh	w0, [x0, #12]
   26ea8:	lsr	w0, w0, #5
   26eac:	and	w0, w0, #0xffff
   26eb0:	sub	w0, w1, w0
   26eb4:	and	w3, w0, #0xffff
   26eb8:	ldr	x1, [sp, #216]
   26ebc:	ldr	w2, [sp, #244]
   26ec0:	mov	x0, #0x3630                	// #13872
   26ec4:	add	x0, x2, x0
   26ec8:	lsl	x0, x0, #1
   26ecc:	add	x0, x1, x0
   26ed0:	mov	w1, w3
   26ed4:	strh	w1, [x0, #12]
   26ed8:	ldr	w0, [sp, #244]
   26edc:	lsl	w0, w0, #1
   26ee0:	add	w0, w0, #0x1
   26ee4:	str	w0, [sp, #244]
   26ee8:	ldr	w1, [sp, #96]
   26eec:	mov	w0, #0xffffff              	// #16777215
   26ef0:	cmp	w1, w0
   26ef4:	b.hi	26f60 <lzma_mode_is_supported@@XZ_5.0+0xc2c8>  // b.pmore
   26ef8:	ldr	x1, [sp, #280]
   26efc:	ldr	x0, [sp, #40]
   26f00:	cmp	x1, x0
   26f04:	cset	w0, eq  // eq = none
   26f08:	and	w0, w0, #0xff
   26f0c:	and	x0, x0, #0xff
   26f10:	cmp	x0, #0x0
   26f14:	b.eq	26f2c <lzma_mode_is_supported@@XZ_5.0+0xc294>  // b.none
   26f18:	ldr	x0, [sp, #216]
   26f1c:	add	x0, x0, #0x4, lsl #12
   26f20:	mov	w1, #0x41                  	// #65
   26f24:	str	w1, [x0, #11936]
   26f28:	b	278fc <lzma_mode_is_supported@@XZ_5.0+0xcc64>
   26f2c:	ldr	w0, [sp, #96]
   26f30:	lsl	w0, w0, #8
   26f34:	str	w0, [sp, #96]
   26f38:	ldr	w0, [sp, #100]
   26f3c:	lsl	w1, w0, #8
   26f40:	ldr	x0, [sp, #280]
   26f44:	add	x2, x0, #0x1
   26f48:	str	x2, [sp, #280]
   26f4c:	ldr	x2, [sp, #56]
   26f50:	add	x0, x2, x0
   26f54:	ldrb	w0, [x0]
   26f58:	orr	w0, w1, w0
   26f5c:	str	w0, [sp, #100]
   26f60:	ldr	w0, [sp, #96]
   26f64:	lsr	w0, w0, #11
   26f68:	ldr	x2, [sp, #216]
   26f6c:	ldr	w3, [sp, #244]
   26f70:	mov	x1, #0x3630                	// #13872
   26f74:	add	x1, x3, x1
   26f78:	lsl	x1, x1, #1
   26f7c:	add	x1, x2, x1
   26f80:	ldrh	w1, [x1, #12]
   26f84:	mul	w0, w0, w1
   26f88:	str	w0, [sp, #180]
   26f8c:	ldr	w0, [sp, #100]
   26f90:	ldr	w1, [sp, #180]
   26f94:	cmp	w1, w0
   26f98:	b.ls	27028 <lzma_mode_is_supported@@XZ_5.0+0xc390>  // b.plast
   26f9c:	ldr	w0, [sp, #180]
   26fa0:	str	w0, [sp, #96]
   26fa4:	ldr	x1, [sp, #216]
   26fa8:	ldr	w2, [sp, #244]
   26fac:	mov	x0, #0x3630                	// #13872
   26fb0:	add	x0, x2, x0
   26fb4:	lsl	x0, x0, #1
   26fb8:	add	x0, x1, x0
   26fbc:	ldrh	w1, [x0, #12]
   26fc0:	ldr	x2, [sp, #216]
   26fc4:	ldr	w3, [sp, #244]
   26fc8:	mov	x0, #0x3630                	// #13872
   26fcc:	add	x0, x3, x0
   26fd0:	lsl	x0, x0, #1
   26fd4:	add	x0, x2, x0
   26fd8:	ldrh	w0, [x0, #12]
   26fdc:	mov	w2, w0
   26fe0:	mov	w0, #0x800                 	// #2048
   26fe4:	sub	w0, w0, w2
   26fe8:	lsr	w0, w0, #5
   26fec:	and	w0, w0, #0xffff
   26ff0:	add	w0, w1, w0
   26ff4:	and	w3, w0, #0xffff
   26ff8:	ldr	x1, [sp, #216]
   26ffc:	ldr	w2, [sp, #244]
   27000:	mov	x0, #0x3630                	// #13872
   27004:	add	x0, x2, x0
   27008:	lsl	x0, x0, #1
   2700c:	add	x0, x1, x0
   27010:	mov	w1, w3
   27014:	strh	w1, [x0, #12]
   27018:	ldr	w0, [sp, #244]
   2701c:	lsl	w0, w0, #1
   27020:	str	w0, [sp, #244]
   27024:	b	270c0 <lzma_mode_is_supported@@XZ_5.0+0xc428>
   27028:	ldr	w1, [sp, #96]
   2702c:	ldr	w0, [sp, #180]
   27030:	sub	w0, w1, w0
   27034:	str	w0, [sp, #96]
   27038:	ldr	w1, [sp, #100]
   2703c:	ldr	w0, [sp, #180]
   27040:	sub	w0, w1, w0
   27044:	str	w0, [sp, #100]
   27048:	ldr	x1, [sp, #216]
   2704c:	ldr	w2, [sp, #244]
   27050:	mov	x0, #0x3630                	// #13872
   27054:	add	x0, x2, x0
   27058:	lsl	x0, x0, #1
   2705c:	add	x0, x1, x0
   27060:	ldrh	w1, [x0, #12]
   27064:	ldr	x2, [sp, #216]
   27068:	ldr	w3, [sp, #244]
   2706c:	mov	x0, #0x3630                	// #13872
   27070:	add	x0, x3, x0
   27074:	lsl	x0, x0, #1
   27078:	add	x0, x2, x0
   2707c:	ldrh	w0, [x0, #12]
   27080:	lsr	w0, w0, #5
   27084:	and	w0, w0, #0xffff
   27088:	sub	w0, w1, w0
   2708c:	and	w3, w0, #0xffff
   27090:	ldr	x1, [sp, #216]
   27094:	ldr	w2, [sp, #244]
   27098:	mov	x0, #0x3630                	// #13872
   2709c:	add	x0, x2, x0
   270a0:	lsl	x0, x0, #1
   270a4:	add	x0, x1, x0
   270a8:	mov	w1, w3
   270ac:	strh	w1, [x0, #12]
   270b0:	ldr	w0, [sp, #244]
   270b4:	lsl	w0, w0, #1
   270b8:	add	w0, w0, #0x1
   270bc:	str	w0, [sp, #244]
   270c0:	ldr	w1, [sp, #96]
   270c4:	mov	w0, #0xffffff              	// #16777215
   270c8:	cmp	w1, w0
   270cc:	b.hi	27138 <lzma_mode_is_supported@@XZ_5.0+0xc4a0>  // b.pmore
   270d0:	ldr	x1, [sp, #280]
   270d4:	ldr	x0, [sp, #40]
   270d8:	cmp	x1, x0
   270dc:	cset	w0, eq  // eq = none
   270e0:	and	w0, w0, #0xff
   270e4:	and	x0, x0, #0xff
   270e8:	cmp	x0, #0x0
   270ec:	b.eq	27104 <lzma_mode_is_supported@@XZ_5.0+0xc46c>  // b.none
   270f0:	ldr	x0, [sp, #216]
   270f4:	add	x0, x0, #0x4, lsl #12
   270f8:	mov	w1, #0x42                  	// #66
   270fc:	str	w1, [x0, #11936]
   27100:	b	278fc <lzma_mode_is_supported@@XZ_5.0+0xcc64>
   27104:	ldr	w0, [sp, #96]
   27108:	lsl	w0, w0, #8
   2710c:	str	w0, [sp, #96]
   27110:	ldr	w0, [sp, #100]
   27114:	lsl	w1, w0, #8
   27118:	ldr	x0, [sp, #280]
   2711c:	add	x2, x0, #0x1
   27120:	str	x2, [sp, #280]
   27124:	ldr	x2, [sp, #56]
   27128:	add	x0, x2, x0
   2712c:	ldrb	w0, [x0]
   27130:	orr	w0, w1, w0
   27134:	str	w0, [sp, #100]
   27138:	ldr	w0, [sp, #96]
   2713c:	lsr	w0, w0, #11
   27140:	ldr	x2, [sp, #216]
   27144:	ldr	w3, [sp, #244]
   27148:	mov	x1, #0x3630                	// #13872
   2714c:	add	x1, x3, x1
   27150:	lsl	x1, x1, #1
   27154:	add	x1, x2, x1
   27158:	ldrh	w1, [x1, #12]
   2715c:	mul	w0, w0, w1
   27160:	str	w0, [sp, #180]
   27164:	ldr	w0, [sp, #100]
   27168:	ldr	w1, [sp, #180]
   2716c:	cmp	w1, w0
   27170:	b.ls	27200 <lzma_mode_is_supported@@XZ_5.0+0xc568>  // b.plast
   27174:	ldr	w0, [sp, #180]
   27178:	str	w0, [sp, #96]
   2717c:	ldr	x1, [sp, #216]
   27180:	ldr	w2, [sp, #244]
   27184:	mov	x0, #0x3630                	// #13872
   27188:	add	x0, x2, x0
   2718c:	lsl	x0, x0, #1
   27190:	add	x0, x1, x0
   27194:	ldrh	w1, [x0, #12]
   27198:	ldr	x2, [sp, #216]
   2719c:	ldr	w3, [sp, #244]
   271a0:	mov	x0, #0x3630                	// #13872
   271a4:	add	x0, x3, x0
   271a8:	lsl	x0, x0, #1
   271ac:	add	x0, x2, x0
   271b0:	ldrh	w0, [x0, #12]
   271b4:	mov	w2, w0
   271b8:	mov	w0, #0x800                 	// #2048
   271bc:	sub	w0, w0, w2
   271c0:	lsr	w0, w0, #5
   271c4:	and	w0, w0, #0xffff
   271c8:	add	w0, w1, w0
   271cc:	and	w3, w0, #0xffff
   271d0:	ldr	x1, [sp, #216]
   271d4:	ldr	w2, [sp, #244]
   271d8:	mov	x0, #0x3630                	// #13872
   271dc:	add	x0, x2, x0
   271e0:	lsl	x0, x0, #1
   271e4:	add	x0, x1, x0
   271e8:	mov	w1, w3
   271ec:	strh	w1, [x0, #12]
   271f0:	ldr	w0, [sp, #244]
   271f4:	lsl	w0, w0, #1
   271f8:	str	w0, [sp, #244]
   271fc:	b	27298 <lzma_mode_is_supported@@XZ_5.0+0xc600>
   27200:	ldr	w1, [sp, #96]
   27204:	ldr	w0, [sp, #180]
   27208:	sub	w0, w1, w0
   2720c:	str	w0, [sp, #96]
   27210:	ldr	w1, [sp, #100]
   27214:	ldr	w0, [sp, #180]
   27218:	sub	w0, w1, w0
   2721c:	str	w0, [sp, #100]
   27220:	ldr	x1, [sp, #216]
   27224:	ldr	w2, [sp, #244]
   27228:	mov	x0, #0x3630                	// #13872
   2722c:	add	x0, x2, x0
   27230:	lsl	x0, x0, #1
   27234:	add	x0, x1, x0
   27238:	ldrh	w1, [x0, #12]
   2723c:	ldr	x2, [sp, #216]
   27240:	ldr	w3, [sp, #244]
   27244:	mov	x0, #0x3630                	// #13872
   27248:	add	x0, x3, x0
   2724c:	lsl	x0, x0, #1
   27250:	add	x0, x2, x0
   27254:	ldrh	w0, [x0, #12]
   27258:	lsr	w0, w0, #5
   2725c:	and	w0, w0, #0xffff
   27260:	sub	w0, w1, w0
   27264:	and	w3, w0, #0xffff
   27268:	ldr	x1, [sp, #216]
   2726c:	ldr	w2, [sp, #244]
   27270:	mov	x0, #0x3630                	// #13872
   27274:	add	x0, x2, x0
   27278:	lsl	x0, x0, #1
   2727c:	add	x0, x1, x0
   27280:	mov	w1, w3
   27284:	strh	w1, [x0, #12]
   27288:	ldr	w0, [sp, #244]
   2728c:	lsl	w0, w0, #1
   27290:	add	w0, w0, #0x1
   27294:	str	w0, [sp, #244]
   27298:	ldr	w1, [sp, #96]
   2729c:	mov	w0, #0xffffff              	// #16777215
   272a0:	cmp	w1, w0
   272a4:	b.hi	27310 <lzma_mode_is_supported@@XZ_5.0+0xc678>  // b.pmore
   272a8:	ldr	x1, [sp, #280]
   272ac:	ldr	x0, [sp, #40]
   272b0:	cmp	x1, x0
   272b4:	cset	w0, eq  // eq = none
   272b8:	and	w0, w0, #0xff
   272bc:	and	x0, x0, #0xff
   272c0:	cmp	x0, #0x0
   272c4:	b.eq	272dc <lzma_mode_is_supported@@XZ_5.0+0xc644>  // b.none
   272c8:	ldr	x0, [sp, #216]
   272cc:	add	x0, x0, #0x4, lsl #12
   272d0:	mov	w1, #0x43                  	// #67
   272d4:	str	w1, [x0, #11936]
   272d8:	b	278fc <lzma_mode_is_supported@@XZ_5.0+0xcc64>
   272dc:	ldr	w0, [sp, #96]
   272e0:	lsl	w0, w0, #8
   272e4:	str	w0, [sp, #96]
   272e8:	ldr	w0, [sp, #100]
   272ec:	lsl	w1, w0, #8
   272f0:	ldr	x0, [sp, #280]
   272f4:	add	x2, x0, #0x1
   272f8:	str	x2, [sp, #280]
   272fc:	ldr	x2, [sp, #56]
   27300:	add	x0, x2, x0
   27304:	ldrb	w0, [x0]
   27308:	orr	w0, w1, w0
   2730c:	str	w0, [sp, #100]
   27310:	ldr	w0, [sp, #96]
   27314:	lsr	w0, w0, #11
   27318:	ldr	x2, [sp, #216]
   2731c:	ldr	w3, [sp, #244]
   27320:	mov	x1, #0x3630                	// #13872
   27324:	add	x1, x3, x1
   27328:	lsl	x1, x1, #1
   2732c:	add	x1, x2, x1
   27330:	ldrh	w1, [x1, #12]
   27334:	mul	w0, w0, w1
   27338:	str	w0, [sp, #180]
   2733c:	ldr	w0, [sp, #100]
   27340:	ldr	w1, [sp, #180]
   27344:	cmp	w1, w0
   27348:	b.ls	273d8 <lzma_mode_is_supported@@XZ_5.0+0xc740>  // b.plast
   2734c:	ldr	w0, [sp, #180]
   27350:	str	w0, [sp, #96]
   27354:	ldr	x1, [sp, #216]
   27358:	ldr	w2, [sp, #244]
   2735c:	mov	x0, #0x3630                	// #13872
   27360:	add	x0, x2, x0
   27364:	lsl	x0, x0, #1
   27368:	add	x0, x1, x0
   2736c:	ldrh	w1, [x0, #12]
   27370:	ldr	x2, [sp, #216]
   27374:	ldr	w3, [sp, #244]
   27378:	mov	x0, #0x3630                	// #13872
   2737c:	add	x0, x3, x0
   27380:	lsl	x0, x0, #1
   27384:	add	x0, x2, x0
   27388:	ldrh	w0, [x0, #12]
   2738c:	mov	w2, w0
   27390:	mov	w0, #0x800                 	// #2048
   27394:	sub	w0, w0, w2
   27398:	lsr	w0, w0, #5
   2739c:	and	w0, w0, #0xffff
   273a0:	add	w0, w1, w0
   273a4:	and	w3, w0, #0xffff
   273a8:	ldr	x1, [sp, #216]
   273ac:	ldr	w2, [sp, #244]
   273b0:	mov	x0, #0x3630                	// #13872
   273b4:	add	x0, x2, x0
   273b8:	lsl	x0, x0, #1
   273bc:	add	x0, x1, x0
   273c0:	mov	w1, w3
   273c4:	strh	w1, [x0, #12]
   273c8:	ldr	w0, [sp, #244]
   273cc:	lsl	w0, w0, #1
   273d0:	str	w0, [sp, #244]
   273d4:	b	27470 <lzma_mode_is_supported@@XZ_5.0+0xc7d8>
   273d8:	ldr	w1, [sp, #96]
   273dc:	ldr	w0, [sp, #180]
   273e0:	sub	w0, w1, w0
   273e4:	str	w0, [sp, #96]
   273e8:	ldr	w1, [sp, #100]
   273ec:	ldr	w0, [sp, #180]
   273f0:	sub	w0, w1, w0
   273f4:	str	w0, [sp, #100]
   273f8:	ldr	x1, [sp, #216]
   273fc:	ldr	w2, [sp, #244]
   27400:	mov	x0, #0x3630                	// #13872
   27404:	add	x0, x2, x0
   27408:	lsl	x0, x0, #1
   2740c:	add	x0, x1, x0
   27410:	ldrh	w1, [x0, #12]
   27414:	ldr	x2, [sp, #216]
   27418:	ldr	w3, [sp, #244]
   2741c:	mov	x0, #0x3630                	// #13872
   27420:	add	x0, x3, x0
   27424:	lsl	x0, x0, #1
   27428:	add	x0, x2, x0
   2742c:	ldrh	w0, [x0, #12]
   27430:	lsr	w0, w0, #5
   27434:	and	w0, w0, #0xffff
   27438:	sub	w0, w1, w0
   2743c:	and	w3, w0, #0xffff
   27440:	ldr	x1, [sp, #216]
   27444:	ldr	w2, [sp, #244]
   27448:	mov	x0, #0x3630                	// #13872
   2744c:	add	x0, x2, x0
   27450:	lsl	x0, x0, #1
   27454:	add	x0, x1, x0
   27458:	mov	w1, w3
   2745c:	strh	w1, [x0, #12]
   27460:	ldr	w0, [sp, #244]
   27464:	lsl	w0, w0, #1
   27468:	add	w0, w0, #0x1
   2746c:	str	w0, [sp, #244]
   27470:	ldr	w1, [sp, #96]
   27474:	mov	w0, #0xffffff              	// #16777215
   27478:	cmp	w1, w0
   2747c:	b.hi	274e8 <lzma_mode_is_supported@@XZ_5.0+0xc850>  // b.pmore
   27480:	ldr	x1, [sp, #280]
   27484:	ldr	x0, [sp, #40]
   27488:	cmp	x1, x0
   2748c:	cset	w0, eq  // eq = none
   27490:	and	w0, w0, #0xff
   27494:	and	x0, x0, #0xff
   27498:	cmp	x0, #0x0
   2749c:	b.eq	274b4 <lzma_mode_is_supported@@XZ_5.0+0xc81c>  // b.none
   274a0:	ldr	x0, [sp, #216]
   274a4:	add	x0, x0, #0x4, lsl #12
   274a8:	mov	w1, #0x44                  	// #68
   274ac:	str	w1, [x0, #11936]
   274b0:	b	278fc <lzma_mode_is_supported@@XZ_5.0+0xcc64>
   274b4:	ldr	w0, [sp, #96]
   274b8:	lsl	w0, w0, #8
   274bc:	str	w0, [sp, #96]
   274c0:	ldr	w0, [sp, #100]
   274c4:	lsl	w1, w0, #8
   274c8:	ldr	x0, [sp, #280]
   274cc:	add	x2, x0, #0x1
   274d0:	str	x2, [sp, #280]
   274d4:	ldr	x2, [sp, #56]
   274d8:	add	x0, x2, x0
   274dc:	ldrb	w0, [x0]
   274e0:	orr	w0, w1, w0
   274e4:	str	w0, [sp, #100]
   274e8:	ldr	w0, [sp, #96]
   274ec:	lsr	w0, w0, #11
   274f0:	ldr	x2, [sp, #216]
   274f4:	ldr	w3, [sp, #244]
   274f8:	mov	x1, #0x3630                	// #13872
   274fc:	add	x1, x3, x1
   27500:	lsl	x1, x1, #1
   27504:	add	x1, x2, x1
   27508:	ldrh	w1, [x1, #12]
   2750c:	mul	w0, w0, w1
   27510:	str	w0, [sp, #180]
   27514:	ldr	w0, [sp, #100]
   27518:	ldr	w1, [sp, #180]
   2751c:	cmp	w1, w0
   27520:	b.ls	275b0 <lzma_mode_is_supported@@XZ_5.0+0xc918>  // b.plast
   27524:	ldr	w0, [sp, #180]
   27528:	str	w0, [sp, #96]
   2752c:	ldr	x1, [sp, #216]
   27530:	ldr	w2, [sp, #244]
   27534:	mov	x0, #0x3630                	// #13872
   27538:	add	x0, x2, x0
   2753c:	lsl	x0, x0, #1
   27540:	add	x0, x1, x0
   27544:	ldrh	w1, [x0, #12]
   27548:	ldr	x2, [sp, #216]
   2754c:	ldr	w3, [sp, #244]
   27550:	mov	x0, #0x3630                	// #13872
   27554:	add	x0, x3, x0
   27558:	lsl	x0, x0, #1
   2755c:	add	x0, x2, x0
   27560:	ldrh	w0, [x0, #12]
   27564:	mov	w2, w0
   27568:	mov	w0, #0x800                 	// #2048
   2756c:	sub	w0, w0, w2
   27570:	lsr	w0, w0, #5
   27574:	and	w0, w0, #0xffff
   27578:	add	w0, w1, w0
   2757c:	and	w3, w0, #0xffff
   27580:	ldr	x1, [sp, #216]
   27584:	ldr	w2, [sp, #244]
   27588:	mov	x0, #0x3630                	// #13872
   2758c:	add	x0, x2, x0
   27590:	lsl	x0, x0, #1
   27594:	add	x0, x1, x0
   27598:	mov	w1, w3
   2759c:	strh	w1, [x0, #12]
   275a0:	ldr	w0, [sp, #244]
   275a4:	lsl	w0, w0, #1
   275a8:	str	w0, [sp, #244]
   275ac:	b	27648 <lzma_mode_is_supported@@XZ_5.0+0xc9b0>
   275b0:	ldr	w1, [sp, #96]
   275b4:	ldr	w0, [sp, #180]
   275b8:	sub	w0, w1, w0
   275bc:	str	w0, [sp, #96]
   275c0:	ldr	w1, [sp, #100]
   275c4:	ldr	w0, [sp, #180]
   275c8:	sub	w0, w1, w0
   275cc:	str	w0, [sp, #100]
   275d0:	ldr	x1, [sp, #216]
   275d4:	ldr	w2, [sp, #244]
   275d8:	mov	x0, #0x3630                	// #13872
   275dc:	add	x0, x2, x0
   275e0:	lsl	x0, x0, #1
   275e4:	add	x0, x1, x0
   275e8:	ldrh	w1, [x0, #12]
   275ec:	ldr	x2, [sp, #216]
   275f0:	ldr	w3, [sp, #244]
   275f4:	mov	x0, #0x3630                	// #13872
   275f8:	add	x0, x3, x0
   275fc:	lsl	x0, x0, #1
   27600:	add	x0, x2, x0
   27604:	ldrh	w0, [x0, #12]
   27608:	lsr	w0, w0, #5
   2760c:	and	w0, w0, #0xffff
   27610:	sub	w0, w1, w0
   27614:	and	w3, w0, #0xffff
   27618:	ldr	x1, [sp, #216]
   2761c:	ldr	w2, [sp, #244]
   27620:	mov	x0, #0x3630                	// #13872
   27624:	add	x0, x2, x0
   27628:	lsl	x0, x0, #1
   2762c:	add	x0, x1, x0
   27630:	mov	w1, w3
   27634:	strh	w1, [x0, #12]
   27638:	ldr	w0, [sp, #244]
   2763c:	lsl	w0, w0, #1
   27640:	add	w0, w0, #0x1
   27644:	str	w0, [sp, #244]
   27648:	ldr	w1, [sp, #96]
   2764c:	mov	w0, #0xffffff              	// #16777215
   27650:	cmp	w1, w0
   27654:	b.hi	276c0 <lzma_mode_is_supported@@XZ_5.0+0xca28>  // b.pmore
   27658:	ldr	x1, [sp, #280]
   2765c:	ldr	x0, [sp, #40]
   27660:	cmp	x1, x0
   27664:	cset	w0, eq  // eq = none
   27668:	and	w0, w0, #0xff
   2766c:	and	x0, x0, #0xff
   27670:	cmp	x0, #0x0
   27674:	b.eq	2768c <lzma_mode_is_supported@@XZ_5.0+0xc9f4>  // b.none
   27678:	ldr	x0, [sp, #216]
   2767c:	add	x0, x0, #0x4, lsl #12
   27680:	mov	w1, #0x45                  	// #69
   27684:	str	w1, [x0, #11936]
   27688:	b	278fc <lzma_mode_is_supported@@XZ_5.0+0xcc64>
   2768c:	ldr	w0, [sp, #96]
   27690:	lsl	w0, w0, #8
   27694:	str	w0, [sp, #96]
   27698:	ldr	w0, [sp, #100]
   2769c:	lsl	w1, w0, #8
   276a0:	ldr	x0, [sp, #280]
   276a4:	add	x2, x0, #0x1
   276a8:	str	x2, [sp, #280]
   276ac:	ldr	x2, [sp, #56]
   276b0:	add	x0, x2, x0
   276b4:	ldrb	w0, [x0]
   276b8:	orr	w0, w1, w0
   276bc:	str	w0, [sp, #100]
   276c0:	ldr	w0, [sp, #96]
   276c4:	lsr	w0, w0, #11
   276c8:	ldr	x2, [sp, #216]
   276cc:	ldr	w3, [sp, #244]
   276d0:	mov	x1, #0x3630                	// #13872
   276d4:	add	x1, x3, x1
   276d8:	lsl	x1, x1, #1
   276dc:	add	x1, x2, x1
   276e0:	ldrh	w1, [x1, #12]
   276e4:	mul	w0, w0, w1
   276e8:	str	w0, [sp, #180]
   276ec:	ldr	w0, [sp, #100]
   276f0:	ldr	w1, [sp, #180]
   276f4:	cmp	w1, w0
   276f8:	b.ls	27788 <lzma_mode_is_supported@@XZ_5.0+0xcaf0>  // b.plast
   276fc:	ldr	w0, [sp, #180]
   27700:	str	w0, [sp, #96]
   27704:	ldr	x1, [sp, #216]
   27708:	ldr	w2, [sp, #244]
   2770c:	mov	x0, #0x3630                	// #13872
   27710:	add	x0, x2, x0
   27714:	lsl	x0, x0, #1
   27718:	add	x0, x1, x0
   2771c:	ldrh	w1, [x0, #12]
   27720:	ldr	x2, [sp, #216]
   27724:	ldr	w3, [sp, #244]
   27728:	mov	x0, #0x3630                	// #13872
   2772c:	add	x0, x3, x0
   27730:	lsl	x0, x0, #1
   27734:	add	x0, x2, x0
   27738:	ldrh	w0, [x0, #12]
   2773c:	mov	w2, w0
   27740:	mov	w0, #0x800                 	// #2048
   27744:	sub	w0, w0, w2
   27748:	lsr	w0, w0, #5
   2774c:	and	w0, w0, #0xffff
   27750:	add	w0, w1, w0
   27754:	and	w3, w0, #0xffff
   27758:	ldr	x1, [sp, #216]
   2775c:	ldr	w2, [sp, #244]
   27760:	mov	x0, #0x3630                	// #13872
   27764:	add	x0, x2, x0
   27768:	lsl	x0, x0, #1
   2776c:	add	x0, x1, x0
   27770:	mov	w1, w3
   27774:	strh	w1, [x0, #12]
   27778:	ldr	w0, [sp, #244]
   2777c:	lsl	w0, w0, #1
   27780:	str	w0, [sp, #244]
   27784:	b	27820 <lzma_mode_is_supported@@XZ_5.0+0xcb88>
   27788:	ldr	w1, [sp, #96]
   2778c:	ldr	w0, [sp, #180]
   27790:	sub	w0, w1, w0
   27794:	str	w0, [sp, #96]
   27798:	ldr	w1, [sp, #100]
   2779c:	ldr	w0, [sp, #180]
   277a0:	sub	w0, w1, w0
   277a4:	str	w0, [sp, #100]
   277a8:	ldr	x1, [sp, #216]
   277ac:	ldr	w2, [sp, #244]
   277b0:	mov	x0, #0x3630                	// #13872
   277b4:	add	x0, x2, x0
   277b8:	lsl	x0, x0, #1
   277bc:	add	x0, x1, x0
   277c0:	ldrh	w1, [x0, #12]
   277c4:	ldr	x2, [sp, #216]
   277c8:	ldr	w3, [sp, #244]
   277cc:	mov	x0, #0x3630                	// #13872
   277d0:	add	x0, x3, x0
   277d4:	lsl	x0, x0, #1
   277d8:	add	x0, x2, x0
   277dc:	ldrh	w0, [x0, #12]
   277e0:	lsr	w0, w0, #5
   277e4:	and	w0, w0, #0xffff
   277e8:	sub	w0, w1, w0
   277ec:	and	w3, w0, #0xffff
   277f0:	ldr	x1, [sp, #216]
   277f4:	ldr	w2, [sp, #244]
   277f8:	mov	x0, #0x3630                	// #13872
   277fc:	add	x0, x2, x0
   27800:	lsl	x0, x0, #1
   27804:	add	x0, x1, x0
   27808:	mov	w1, w3
   2780c:	strh	w1, [x0, #12]
   27810:	ldr	w0, [sp, #244]
   27814:	lsl	w0, w0, #1
   27818:	add	w0, w0, #0x1
   2781c:	str	w0, [sp, #244]
   27820:	ldr	w0, [sp, #244]
   27824:	sub	w0, w0, #0xee
   27828:	str	w0, [sp, #92]
   2782c:	add	x1, sp, #0x5c
   27830:	add	x0, sp, #0x70
   27834:	mov	x2, x1
   27838:	ldr	w1, [sp, #272]
   2783c:	bl	1ee40 <lzma_mode_is_supported@@XZ_5.0+0x41a8>
   27840:	and	w0, w0, #0xff
   27844:	and	x0, x0, #0xff
   27848:	cmp	x0, #0x0
   2784c:	b.eq	1f5c0 <lzma_mode_is_supported@@XZ_5.0+0x4928>  // b.none
   27850:	ldr	x0, [sp, #216]
   27854:	add	x0, x0, #0x4, lsl #12
   27858:	mov	w1, #0x46                  	// #70
   2785c:	str	w1, [x0, #11936]
   27860:	b	278fc <lzma_mode_is_supported@@XZ_5.0+0xcc64>
   27864:	nop
   27868:	b	1f5c0 <lzma_mode_is_supported@@XZ_5.0+0x4928>
   2786c:	nop
   27870:	b	1f5c0 <lzma_mode_is_supported@@XZ_5.0+0x4928>
   27874:	nop
   27878:	ldr	w1, [sp, #96]
   2787c:	mov	w0, #0xffffff              	// #16777215
   27880:	cmp	w1, w0
   27884:	b.hi	278ec <lzma_mode_is_supported@@XZ_5.0+0xcc54>  // b.pmore
   27888:	ldr	x1, [sp, #280]
   2788c:	ldr	x0, [sp, #40]
   27890:	cmp	x1, x0
   27894:	cset	w0, eq  // eq = none
   27898:	and	w0, w0, #0xff
   2789c:	and	x0, x0, #0xff
   278a0:	cmp	x0, #0x0
   278a4:	b.eq	278b8 <lzma_mode_is_supported@@XZ_5.0+0xcc20>  // b.none
   278a8:	ldr	x0, [sp, #216]
   278ac:	add	x0, x0, #0x4, lsl #12
   278b0:	str	wzr, [x0, #11936]
   278b4:	b	278fc <lzma_mode_is_supported@@XZ_5.0+0xcc64>
   278b8:	ldr	w0, [sp, #96]
   278bc:	lsl	w0, w0, #8
   278c0:	str	w0, [sp, #96]
   278c4:	ldr	w0, [sp, #100]
   278c8:	lsl	w1, w0, #8
   278cc:	ldr	x0, [sp, #280]
   278d0:	add	x2, x0, #0x1
   278d4:	str	x2, [sp, #280]
   278d8:	ldr	x2, [sp, #56]
   278dc:	add	x0, x2, x0
   278e0:	ldrb	w0, [x0]
   278e4:	orr	w0, w1, w0
   278e8:	str	w0, [sp, #100]
   278ec:	ldr	x0, [sp, #216]
   278f0:	add	x0, x0, #0x4, lsl #12
   278f4:	mov	w1, #0x1                   	// #1
   278f8:	str	w1, [x0, #11936]
   278fc:	ldr	x1, [sp, #120]
   27900:	ldr	x0, [sp, #64]
   27904:	str	x1, [x0, #8]
   27908:	ldr	x1, [sp, #128]
   2790c:	ldr	x0, [sp, #64]
   27910:	str	x1, [x0, #16]
   27914:	ldr	x0, [sp, #216]
   27918:	add	x0, x0, #0x7, lsl #12
   2791c:	sub	x0, x0, #0x194
   27920:	mov	x1, x0
   27924:	add	x0, sp, #0x60
   27928:	ldr	x2, [x0]
   2792c:	str	x2, [x1]
   27930:	ldr	w0, [x0, #8]
   27934:	str	w0, [x1, #8]
   27938:	ldr	x0, [sp, #48]
   2793c:	ldr	x1, [sp, #280]
   27940:	str	x1, [x0]
   27944:	ldr	x0, [sp, #216]
   27948:	add	x0, x0, #0x4, lsl #12
   2794c:	ldr	w1, [sp, #276]
   27950:	str	w1, [x0, #11896]
   27954:	ldr	x0, [sp, #216]
   27958:	add	x0, x0, #0x4, lsl #12
   2795c:	ldr	w1, [sp, #272]
   27960:	str	w1, [x0, #11900]
   27964:	ldr	x0, [sp, #216]
   27968:	add	x0, x0, #0x4, lsl #12
   2796c:	ldr	w1, [sp, #268]
   27970:	str	w1, [x0, #11904]
   27974:	ldr	x0, [sp, #216]
   27978:	add	x0, x0, #0x4, lsl #12
   2797c:	ldr	w1, [sp, #264]
   27980:	str	w1, [x0, #11908]
   27984:	ldr	x0, [sp, #216]
   27988:	add	x0, x0, #0x4, lsl #12
   2798c:	ldr	w1, [sp, #260]
   27990:	str	w1, [x0, #11912]
   27994:	ldr	x0, [sp, #216]
   27998:	ldr	x1, [sp, #248]
   2799c:	str	x1, [x0, #28328]
   279a0:	ldr	x0, [sp, #216]
   279a4:	add	x0, x0, #0x4, lsl #12
   279a8:	ldr	w1, [sp, #244]
   279ac:	str	w1, [x0, #11952]
   279b0:	ldr	x0, [sp, #216]
   279b4:	add	x0, x0, #0x4, lsl #12
   279b8:	ldr	w1, [sp, #240]
   279bc:	str	w1, [x0, #11956]
   279c0:	ldr	x0, [sp, #216]
   279c4:	add	x0, x0, #0x4, lsl #12
   279c8:	ldr	w1, [sp, #236]
   279cc:	str	w1, [x0, #11960]
   279d0:	ldr	w1, [sp, #92]
   279d4:	ldr	x0, [sp, #216]
   279d8:	add	x0, x0, #0x4, lsl #12
   279dc:	str	w1, [x0, #11964]
   279e0:	ldr	x0, [sp, #216]
   279e4:	ldr	x0, [x0, #28312]
   279e8:	cmn	x0, #0x1
   279ec:	b.eq	27a64 <lzma_mode_is_supported@@XZ_5.0+0xcdcc>  // b.none
   279f0:	ldr	x0, [sp, #216]
   279f4:	ldr	x1, [x0, #28312]
   279f8:	ldr	x0, [sp, #120]
   279fc:	ldr	x2, [sp, #200]
   27a00:	sub	x0, x2, x0
   27a04:	add	x1, x1, x0
   27a08:	ldr	x0, [sp, #216]
   27a0c:	str	x1, [x0, #28312]
   27a10:	ldr	x0, [sp, #216]
   27a14:	ldr	x0, [x0, #28312]
   27a18:	cmp	x0, #0x0
   27a1c:	b.ne	27a64 <lzma_mode_is_supported@@XZ_5.0+0xcdcc>  // b.any
   27a20:	ldr	w0, [sp, #228]
   27a24:	cmp	w0, #0x0
   27a28:	b.ne	27a64 <lzma_mode_is_supported@@XZ_5.0+0xcdcc>  // b.any
   27a2c:	ldr	x0, [sp, #216]
   27a30:	add	x0, x0, #0x4, lsl #12
   27a34:	ldr	w0, [x0, #11936]
   27a38:	cmp	w0, #0x0
   27a3c:	b.eq	27a64 <lzma_mode_is_supported@@XZ_5.0+0xcdcc>  // b.none
   27a40:	ldr	x0, [sp, #216]
   27a44:	add	x0, x0, #0x4, lsl #12
   27a48:	ldr	w0, [x0, #11936]
   27a4c:	cmp	w0, #0x1
   27a50:	b.ne	27a5c <lzma_mode_is_supported@@XZ_5.0+0xcdc4>  // b.any
   27a54:	mov	w0, #0x1                   	// #1
   27a58:	b	27a60 <lzma_mode_is_supported@@XZ_5.0+0xcdc8>
   27a5c:	mov	w0, #0x9                   	// #9
   27a60:	str	w0, [sp, #228]
   27a64:	ldr	w0, [sp, #228]
   27a68:	cmp	w0, #0x1
   27a6c:	b.ne	27ab8 <lzma_mode_is_supported@@XZ_5.0+0xce20>  // b.any
   27a70:	ldr	x0, [sp, #216]
   27a74:	add	x0, x0, #0x4, lsl #12
   27a78:	ldr	w0, [x0, #11888]
   27a7c:	cmp	w0, #0x0
   27a80:	b.eq	27a8c <lzma_mode_is_supported@@XZ_5.0+0xcdf4>  // b.none
   27a84:	mov	w0, #0x9                   	// #9
   27a88:	str	w0, [sp, #228]
   27a8c:	ldr	x0, [sp, #216]
   27a90:	add	x0, x0, #0x4, lsl #12
   27a94:	mov	w1, #0xffffffff            	// #-1
   27a98:	str	w1, [x0, #11884]
   27a9c:	ldr	x0, [sp, #216]
   27aa0:	add	x0, x0, #0x4, lsl #12
   27aa4:	str	wzr, [x0, #11888]
   27aa8:	ldr	x0, [sp, #216]
   27aac:	add	x0, x0, #0x4, lsl #12
   27ab0:	mov	w1, #0x5                   	// #5
   27ab4:	str	w1, [x0, #11892]
   27ab8:	ldr	w0, [sp, #228]
   27abc:	ldr	x19, [sp, #16]
   27ac0:	ldp	x29, x30, [sp], #288
   27ac4:	ret
   27ac8:	sub	sp, sp, #0x20
   27acc:	str	x0, [sp, #8]
   27ad0:	str	x1, [sp]
   27ad4:	ldr	x0, [sp, #8]
   27ad8:	str	x0, [sp, #24]
   27adc:	ldr	x0, [sp, #24]
   27ae0:	ldr	x1, [sp]
   27ae4:	str	x1, [x0, #28312]
   27ae8:	nop
   27aec:	add	sp, sp, #0x20
   27af0:	ret
   27af4:	stp	x29, x30, [sp, #-112]!
   27af8:	mov	x29, sp
   27afc:	str	x0, [sp, #24]
   27b00:	str	x1, [sp, #16]
   27b04:	ldr	x0, [sp, #24]
   27b08:	str	x0, [sp, #48]
   27b0c:	ldr	x0, [sp, #16]
   27b10:	str	x0, [sp, #40]
   27b14:	ldr	x0, [sp, #40]
   27b18:	ldr	w0, [x0, #28]
   27b1c:	mov	w1, #0x1                   	// #1
   27b20:	lsl	w0, w1, w0
   27b24:	sub	w1, w0, #0x1
   27b28:	ldr	x0, [sp, #48]
   27b2c:	add	x0, x0, #0x4, lsl #12
   27b30:	str	w1, [x0, #11916]
   27b34:	ldr	x3, [sp, #48]
   27b38:	ldr	x0, [sp, #40]
   27b3c:	ldr	w1, [x0, #20]
   27b40:	ldr	x0, [sp, #40]
   27b44:	ldr	w0, [x0, #24]
   27b48:	mov	w2, w0
   27b4c:	mov	x0, x3
   27b50:	bl	1f234 <lzma_mode_is_supported@@XZ_5.0+0x459c>
   27b54:	ldr	x0, [sp, #40]
   27b58:	ldr	w1, [x0, #20]
   27b5c:	ldr	x0, [sp, #48]
   27b60:	add	x0, x0, #0x4, lsl #12
   27b64:	str	w1, [x0, #11920]
   27b68:	ldr	x0, [sp, #40]
   27b6c:	ldr	w0, [x0, #24]
   27b70:	mov	w1, #0x1                   	// #1
   27b74:	lsl	w0, w1, w0
   27b78:	sub	w1, w0, #0x1
   27b7c:	ldr	x0, [sp, #48]
   27b80:	add	x0, x0, #0x4, lsl #12
   27b84:	str	w1, [x0, #11924]
   27b88:	ldr	x0, [sp, #48]
   27b8c:	add	x0, x0, #0x4, lsl #12
   27b90:	str	wzr, [x0, #11896]
   27b94:	ldr	x0, [sp, #48]
   27b98:	add	x0, x0, #0x4, lsl #12
   27b9c:	str	wzr, [x0, #11900]
   27ba0:	ldr	x0, [sp, #48]
   27ba4:	add	x0, x0, #0x4, lsl #12
   27ba8:	str	wzr, [x0, #11904]
   27bac:	ldr	x0, [sp, #48]
   27bb0:	add	x0, x0, #0x4, lsl #12
   27bb4:	str	wzr, [x0, #11908]
   27bb8:	ldr	x0, [sp, #48]
   27bbc:	add	x0, x0, #0x4, lsl #12
   27bc0:	str	wzr, [x0, #11912]
   27bc4:	ldr	x0, [sp, #40]
   27bc8:	ldr	w0, [x0, #28]
   27bcc:	mov	w1, #0x1                   	// #1
   27bd0:	lsl	w0, w1, w0
   27bd4:	sub	w1, w0, #0x1
   27bd8:	ldr	x0, [sp, #48]
   27bdc:	add	x0, x0, #0x4, lsl #12
   27be0:	str	w1, [x0, #11916]
   27be4:	ldr	x0, [sp, #48]
   27be8:	add	x0, x0, #0x4, lsl #12
   27bec:	mov	w1, #0xffffffff            	// #-1
   27bf0:	str	w1, [x0, #11884]
   27bf4:	ldr	x0, [sp, #48]
   27bf8:	add	x0, x0, #0x4, lsl #12
   27bfc:	str	wzr, [x0, #11888]
   27c00:	ldr	x0, [sp, #48]
   27c04:	add	x0, x0, #0x4, lsl #12
   27c08:	mov	w1, #0x5                   	// #5
   27c0c:	str	w1, [x0, #11892]
   27c10:	str	wzr, [sp, #108]
   27c14:	b	27d04 <lzma_mode_is_supported@@XZ_5.0+0xd06c>
   27c18:	str	wzr, [sp, #104]
   27c1c:	b	27c70 <lzma_mode_is_supported@@XZ_5.0+0xcfd8>
   27c20:	ldr	x0, [sp, #48]
   27c24:	ldr	w1, [sp, #104]
   27c28:	ldr	w2, [sp, #108]
   27c2c:	lsl	x2, x2, #4
   27c30:	add	x1, x2, x1
   27c34:	add	x1, x1, #0x3, lsl #12
   27c38:	mov	w2, #0x400                 	// #1024
   27c3c:	strh	w2, [x0, x1, lsl #1]
   27c40:	ldr	x0, [sp, #48]
   27c44:	ldr	w1, [sp, #104]
   27c48:	ldr	w2, [sp, #108]
   27c4c:	lsl	x2, x2, #4
   27c50:	add	x2, x2, x1
   27c54:	mov	x1, #0x30f0                	// #12528
   27c58:	add	x1, x2, x1
   27c5c:	mov	w2, #0x400                 	// #1024
   27c60:	strh	w2, [x0, x1, lsl #1]
   27c64:	ldr	w0, [sp, #104]
   27c68:	add	w0, w0, #0x1
   27c6c:	str	w0, [sp, #104]
   27c70:	ldr	x0, [sp, #48]
   27c74:	add	x0, x0, #0x4, lsl #12
   27c78:	ldr	w0, [x0, #11916]
   27c7c:	ldr	w1, [sp, #104]
   27c80:	cmp	w1, w0
   27c84:	b.ls	27c20 <lzma_mode_is_supported@@XZ_5.0+0xcf88>  // b.plast
   27c88:	ldr	x0, [sp, #48]
   27c8c:	ldr	w2, [sp, #108]
   27c90:	mov	x1, #0x30c0                	// #12480
   27c94:	add	x1, x2, x1
   27c98:	mov	w2, #0x400                 	// #1024
   27c9c:	strh	w2, [x0, x1, lsl #1]
   27ca0:	ldr	x1, [sp, #48]
   27ca4:	ldr	w2, [sp, #108]
   27ca8:	mov	x0, #0x30c8                	// #12488
   27cac:	add	x0, x2, x0
   27cb0:	lsl	x0, x0, #1
   27cb4:	add	x0, x1, x0
   27cb8:	mov	w1, #0x400                 	// #1024
   27cbc:	strh	w1, [x0, #8]
   27cc0:	ldr	x0, [sp, #48]
   27cc4:	ldr	w2, [sp, #108]
   27cc8:	mov	x1, #0x30d8                	// #12504
   27ccc:	add	x1, x2, x1
   27cd0:	mov	w2, #0x400                 	// #1024
   27cd4:	strh	w2, [x0, x1, lsl #1]
   27cd8:	ldr	x1, [sp, #48]
   27cdc:	ldr	w2, [sp, #108]
   27ce0:	mov	x0, #0x30e0                	// #12512
   27ce4:	add	x0, x2, x0
   27ce8:	lsl	x0, x0, #1
   27cec:	add	x0, x1, x0
   27cf0:	mov	w1, #0x400                 	// #1024
   27cf4:	strh	w1, [x0, #8]
   27cf8:	ldr	w0, [sp, #108]
   27cfc:	add	w0, w0, #0x1
   27d00:	str	w0, [sp, #108]
   27d04:	ldr	w0, [sp, #108]
   27d08:	cmp	w0, #0xb
   27d0c:	b.ls	27c18 <lzma_mode_is_supported@@XZ_5.0+0xcf80>  // b.plast
   27d10:	str	wzr, [sp, #100]
   27d14:	b	27d68 <lzma_mode_is_supported@@XZ_5.0+0xd0d0>
   27d18:	str	wzr, [sp, #96]
   27d1c:	b	27d50 <lzma_mode_is_supported@@XZ_5.0+0xd0b8>
   27d20:	ldr	x0, [sp, #48]
   27d24:	ldr	w1, [sp, #96]
   27d28:	ldr	w2, [sp, #100]
   27d2c:	lsl	x2, x2, #6
   27d30:	add	x2, x2, x1
   27d34:	mov	x1, #0x31b0                	// #12720
   27d38:	add	x1, x2, x1
   27d3c:	mov	w2, #0x400                 	// #1024
   27d40:	strh	w2, [x0, x1, lsl #1]
   27d44:	ldr	w0, [sp, #96]
   27d48:	add	w0, w0, #0x1
   27d4c:	str	w0, [sp, #96]
   27d50:	ldr	w0, [sp, #96]
   27d54:	cmp	w0, #0x3f
   27d58:	b.ls	27d20 <lzma_mode_is_supported@@XZ_5.0+0xd088>  // b.plast
   27d5c:	ldr	w0, [sp, #100]
   27d60:	add	w0, w0, #0x1
   27d64:	str	w0, [sp, #100]
   27d68:	ldr	w0, [sp, #100]
   27d6c:	cmp	w0, #0x3
   27d70:	b.ls	27d18 <lzma_mode_is_supported@@XZ_5.0+0xd080>  // b.plast
   27d74:	str	wzr, [sp, #92]
   27d78:	b	27da0 <lzma_mode_is_supported@@XZ_5.0+0xd108>
   27d7c:	ldr	x0, [sp, #48]
   27d80:	ldr	w2, [sp, #92]
   27d84:	mov	x1, #0x32b0                	// #12976
   27d88:	add	x1, x2, x1
   27d8c:	mov	w2, #0x400                 	// #1024
   27d90:	strh	w2, [x0, x1, lsl #1]
   27d94:	ldr	w0, [sp, #92]
   27d98:	add	w0, w0, #0x1
   27d9c:	str	w0, [sp, #92]
   27da0:	ldr	w0, [sp, #92]
   27da4:	cmp	w0, #0x71
   27da8:	b.ls	27d7c <lzma_mode_is_supported@@XZ_5.0+0xd0e4>  // b.plast
   27dac:	str	wzr, [sp, #88]
   27db0:	b	27de0 <lzma_mode_is_supported@@XZ_5.0+0xd148>
   27db4:	ldr	x1, [sp, #48]
   27db8:	ldr	w2, [sp, #88]
   27dbc:	mov	x0, #0x3320                	// #13088
   27dc0:	add	x0, x2, x0
   27dc4:	lsl	x0, x0, #1
   27dc8:	add	x0, x1, x0
   27dcc:	mov	w1, #0x400                 	// #1024
   27dd0:	strh	w1, [x0, #4]
   27dd4:	ldr	w0, [sp, #88]
   27dd8:	add	w0, w0, #0x1
   27ddc:	str	w0, [sp, #88]
   27de0:	ldr	w0, [sp, #88]
   27de4:	cmp	w0, #0xf
   27de8:	b.ls	27db4 <lzma_mode_is_supported@@XZ_5.0+0xd11c>  // b.plast
   27dec:	ldr	x0, [sp, #40]
   27df0:	ldr	w0, [x0, #28]
   27df4:	mov	w1, #0x1                   	// #1
   27df8:	lsl	w0, w1, w0
   27dfc:	str	w0, [sp, #36]
   27e00:	ldr	x0, [sp, #48]
   27e04:	add	x0, x0, #0x6, lsl #12
   27e08:	mov	w1, #0x400                 	// #1024
   27e0c:	strh	w1, [x0, #1636]
   27e10:	ldr	x0, [sp, #48]
   27e14:	add	x0, x0, #0x6, lsl #12
   27e18:	mov	w1, #0x400                 	// #1024
   27e1c:	strh	w1, [x0, #1638]
   27e20:	ldr	x0, [sp, #48]
   27e24:	add	x0, x0, #0x6, lsl #12
   27e28:	mov	w1, #0x400                 	// #1024
   27e2c:	strh	w1, [x0, #2664]
   27e30:	ldr	x0, [sp, #48]
   27e34:	add	x0, x0, #0x6, lsl #12
   27e38:	mov	w1, #0x400                 	// #1024
   27e3c:	strh	w1, [x0, #2666]
   27e40:	str	wzr, [sp, #84]
   27e44:	b	27f84 <lzma_mode_is_supported@@XZ_5.0+0xd2ec>
   27e48:	str	wzr, [sp, #80]
   27e4c:	b	27e88 <lzma_mode_is_supported@@XZ_5.0+0xd1f0>
   27e50:	ldr	x1, [sp, #48]
   27e54:	ldr	w0, [sp, #80]
   27e58:	ldr	w2, [sp, #84]
   27e5c:	lsl	x2, x2, #3
   27e60:	add	x2, x2, x0
   27e64:	mov	x0, #0x3330                	// #13104
   27e68:	add	x0, x2, x0
   27e6c:	lsl	x0, x0, #1
   27e70:	add	x0, x1, x0
   27e74:	mov	w1, #0x400                 	// #1024
   27e78:	strh	w1, [x0, #8]
   27e7c:	ldr	w0, [sp, #80]
   27e80:	add	w0, w0, #0x1
   27e84:	str	w0, [sp, #80]
   27e88:	ldr	w0, [sp, #80]
   27e8c:	cmp	w0, #0x7
   27e90:	b.ls	27e50 <lzma_mode_is_supported@@XZ_5.0+0xd1b8>  // b.plast
   27e94:	str	wzr, [sp, #76]
   27e98:	b	27ed4 <lzma_mode_is_supported@@XZ_5.0+0xd23c>
   27e9c:	ldr	x1, [sp, #48]
   27ea0:	ldr	w0, [sp, #76]
   27ea4:	ldr	w2, [sp, #84]
   27ea8:	lsl	x2, x2, #3
   27eac:	add	x2, x2, x0
   27eb0:	mov	x0, #0x33b0                	// #13232
   27eb4:	add	x0, x2, x0
   27eb8:	lsl	x0, x0, #1
   27ebc:	add	x0, x1, x0
   27ec0:	mov	w1, #0x400                 	// #1024
   27ec4:	strh	w1, [x0, #8]
   27ec8:	ldr	w0, [sp, #76]
   27ecc:	add	w0, w0, #0x1
   27ed0:	str	w0, [sp, #76]
   27ed4:	ldr	w0, [sp, #76]
   27ed8:	cmp	w0, #0x7
   27edc:	b.ls	27e9c <lzma_mode_is_supported@@XZ_5.0+0xd204>  // b.plast
   27ee0:	str	wzr, [sp, #72]
   27ee4:	b	27f20 <lzma_mode_is_supported@@XZ_5.0+0xd288>
   27ee8:	ldr	x1, [sp, #48]
   27eec:	ldr	w0, [sp, #72]
   27ef0:	ldr	w2, [sp, #84]
   27ef4:	lsl	x2, x2, #3
   27ef8:	add	x2, x2, x0
   27efc:	mov	x0, #0x3530                	// #13616
   27f00:	add	x0, x2, x0
   27f04:	lsl	x0, x0, #1
   27f08:	add	x0, x1, x0
   27f0c:	mov	w1, #0x400                 	// #1024
   27f10:	strh	w1, [x0, #12]
   27f14:	ldr	w0, [sp, #72]
   27f18:	add	w0, w0, #0x1
   27f1c:	str	w0, [sp, #72]
   27f20:	ldr	w0, [sp, #72]
   27f24:	cmp	w0, #0x7
   27f28:	b.ls	27ee8 <lzma_mode_is_supported@@XZ_5.0+0xd250>  // b.plast
   27f2c:	str	wzr, [sp, #68]
   27f30:	b	27f6c <lzma_mode_is_supported@@XZ_5.0+0xd2d4>
   27f34:	ldr	x1, [sp, #48]
   27f38:	ldr	w0, [sp, #68]
   27f3c:	ldr	w2, [sp, #84]
   27f40:	lsl	x2, x2, #3
   27f44:	add	x2, x2, x0
   27f48:	mov	x0, #0x35b0                	// #13744
   27f4c:	add	x0, x2, x0
   27f50:	lsl	x0, x0, #1
   27f54:	add	x0, x1, x0
   27f58:	mov	w1, #0x400                 	// #1024
   27f5c:	strh	w1, [x0, #12]
   27f60:	ldr	w0, [sp, #68]
   27f64:	add	w0, w0, #0x1
   27f68:	str	w0, [sp, #68]
   27f6c:	ldr	w0, [sp, #68]
   27f70:	cmp	w0, #0x7
   27f74:	b.ls	27f34 <lzma_mode_is_supported@@XZ_5.0+0xd29c>  // b.plast
   27f78:	ldr	w0, [sp, #84]
   27f7c:	add	w0, w0, #0x1
   27f80:	str	w0, [sp, #84]
   27f84:	ldr	w1, [sp, #84]
   27f88:	ldr	w0, [sp, #36]
   27f8c:	cmp	w1, w0
   27f90:	b.cc	27e48 <lzma_mode_is_supported@@XZ_5.0+0xd1b0>  // b.lo, b.ul, b.last
   27f94:	str	wzr, [sp, #64]
   27f98:	b	27fc8 <lzma_mode_is_supported@@XZ_5.0+0xd330>
   27f9c:	ldr	x1, [sp, #48]
   27fa0:	ldr	w2, [sp, #64]
   27fa4:	mov	x0, #0x3430                	// #13360
   27fa8:	add	x0, x2, x0
   27fac:	lsl	x0, x0, #1
   27fb0:	add	x0, x1, x0
   27fb4:	mov	w1, #0x400                 	// #1024
   27fb8:	strh	w1, [x0, #8]
   27fbc:	ldr	w0, [sp, #64]
   27fc0:	add	w0, w0, #0x1
   27fc4:	str	w0, [sp, #64]
   27fc8:	ldr	w0, [sp, #64]
   27fcc:	cmp	w0, #0xff
   27fd0:	b.ls	27f9c <lzma_mode_is_supported@@XZ_5.0+0xd304>  // b.plast
   27fd4:	str	wzr, [sp, #60]
   27fd8:	b	28008 <lzma_mode_is_supported@@XZ_5.0+0xd370>
   27fdc:	ldr	x1, [sp, #48]
   27fe0:	ldr	w2, [sp, #60]
   27fe4:	mov	x0, #0x3630                	// #13872
   27fe8:	add	x0, x2, x0
   27fec:	lsl	x0, x0, #1
   27ff0:	add	x0, x1, x0
   27ff4:	mov	w1, #0x400                 	// #1024
   27ff8:	strh	w1, [x0, #12]
   27ffc:	ldr	w0, [sp, #60]
   28000:	add	w0, w0, #0x1
   28004:	str	w0, [sp, #60]
   28008:	ldr	w0, [sp, #60]
   2800c:	cmp	w0, #0xff
   28010:	b.ls	27fdc <lzma_mode_is_supported@@XZ_5.0+0xd344>  // b.plast
   28014:	ldr	x0, [sp, #48]
   28018:	add	x0, x0, #0x4, lsl #12
   2801c:	mov	w1, #0x1                   	// #1
   28020:	str	w1, [x0, #11936]
   28024:	ldr	x0, [sp, #48]
   28028:	str	xzr, [x0, #28328]
   2802c:	ldr	x0, [sp, #48]
   28030:	add	x0, x0, #0x4, lsl #12
   28034:	str	wzr, [x0, #11952]
   28038:	ldr	x0, [sp, #48]
   2803c:	add	x0, x0, #0x4, lsl #12
   28040:	str	wzr, [x0, #11956]
   28044:	ldr	x0, [sp, #48]
   28048:	add	x0, x0, #0x4, lsl #12
   2804c:	str	wzr, [x0, #11960]
   28050:	ldr	x0, [sp, #48]
   28054:	add	x0, x0, #0x4, lsl #12
   28058:	str	wzr, [x0, #11964]
   2805c:	nop
   28060:	ldp	x29, x30, [sp], #112
   28064:	ret
   28068:	stp	x29, x30, [sp, #-64]!
   2806c:	mov	x29, sp
   28070:	str	x0, [sp, #40]
   28074:	str	x1, [sp, #32]
   28078:	str	x2, [sp, #24]
   2807c:	str	x3, [sp, #16]
   28080:	ldr	x0, [sp, #40]
   28084:	ldr	x0, [x0]
   28088:	cmp	x0, #0x0
   2808c:	b.ne	280f0 <lzma_mode_is_supported@@XZ_5.0+0xd458>  // b.any
   28090:	ldr	x1, [sp, #32]
   28094:	mov	x0, #0x6ec0                	// #28352
   28098:	bl	36fc <lzma_version_string@@XZ_5.0+0xc>
   2809c:	mov	x1, x0
   280a0:	ldr	x0, [sp, #40]
   280a4:	str	x1, [x0]
   280a8:	ldr	x0, [sp, #40]
   280ac:	ldr	x0, [x0]
   280b0:	cmp	x0, #0x0
   280b4:	b.ne	280c0 <lzma_mode_is_supported@@XZ_5.0+0xd428>  // b.any
   280b8:	mov	w0, #0x5                   	// #5
   280bc:	b	28134 <lzma_mode_is_supported@@XZ_5.0+0xd49c>
   280c0:	ldr	x0, [sp, #40]
   280c4:	adrp	x1, 1f000 <lzma_mode_is_supported@@XZ_5.0+0x4368>
   280c8:	add	x1, x1, #0x3b0
   280cc:	str	x1, [x0, #8]
   280d0:	ldr	x0, [sp, #40]
   280d4:	adrp	x1, 27000 <lzma_mode_is_supported@@XZ_5.0+0xc368>
   280d8:	add	x1, x1, #0xaf4
   280dc:	str	x1, [x0, #16]
   280e0:	ldr	x0, [sp, #40]
   280e4:	adrp	x1, 27000 <lzma_mode_is_supported@@XZ_5.0+0xc368>
   280e8:	add	x1, x1, #0xac8
   280ec:	str	x1, [x0, #24]
   280f0:	ldr	x0, [sp, #24]
   280f4:	str	x0, [sp, #56]
   280f8:	ldr	x0, [sp, #56]
   280fc:	ldr	w0, [x0]
   28100:	mov	w1, w0
   28104:	ldr	x0, [sp, #16]
   28108:	str	x1, [x0]
   2810c:	ldr	x0, [sp, #56]
   28110:	ldr	x1, [x0, #8]
   28114:	ldr	x0, [sp, #16]
   28118:	str	x1, [x0, #8]
   2811c:	ldr	x0, [sp, #56]
   28120:	ldr	w0, [x0, #16]
   28124:	mov	w1, w0
   28128:	ldr	x0, [sp, #16]
   2812c:	str	x1, [x0, #16]
   28130:	mov	w0, #0x0                   	// #0
   28134:	ldp	x29, x30, [sp], #64
   28138:	ret
   2813c:	stp	x29, x30, [sp, #-64]!
   28140:	mov	x29, sp
   28144:	str	x0, [sp, #40]
   28148:	str	x1, [sp, #32]
   2814c:	str	x2, [sp, #24]
   28150:	str	x3, [sp, #16]
   28154:	ldr	x0, [sp, #24]
   28158:	bl	1f1c4 <lzma_mode_is_supported@@XZ_5.0+0x452c>
   2815c:	and	w0, w0, #0xff
   28160:	eor	w0, w0, #0x1
   28164:	and	w0, w0, #0xff
   28168:	cmp	w0, #0x0
   2816c:	b.eq	28178 <lzma_mode_is_supported@@XZ_5.0+0xd4e0>  // b.none
   28170:	mov	w0, #0xb                   	// #11
   28174:	b	281c8 <lzma_mode_is_supported@@XZ_5.0+0xd530>
   28178:	ldr	x3, [sp, #16]
   2817c:	ldr	x2, [sp, #24]
   28180:	ldr	x1, [sp, #32]
   28184:	ldr	x0, [sp, #40]
   28188:	bl	28068 <lzma_mode_is_supported@@XZ_5.0+0xd3d0>
   2818c:	str	w0, [sp, #60]
   28190:	ldr	w0, [sp, #60]
   28194:	cmp	w0, #0x0
   28198:	b.eq	281a4 <lzma_mode_is_supported@@XZ_5.0+0xd50c>  // b.none
   2819c:	ldr	w0, [sp, #60]
   281a0:	b	281c8 <lzma_mode_is_supported@@XZ_5.0+0xd530>
   281a4:	ldr	x0, [sp, #40]
   281a8:	ldr	x0, [x0]
   281ac:	ldr	x1, [sp, #24]
   281b0:	bl	27af4 <lzma_mode_is_supported@@XZ_5.0+0xce5c>
   281b4:	ldr	x0, [sp, #40]
   281b8:	ldr	x0, [x0]
   281bc:	mov	x1, #0xffffffffffffffff    	// #-1
   281c0:	bl	27ac8 <lzma_mode_is_supported@@XZ_5.0+0xce30>
   281c4:	mov	w0, #0x0                   	// #0
   281c8:	ldp	x29, x30, [sp], #64
   281cc:	ret
   281d0:	stp	x29, x30, [sp, #-48]!
   281d4:	mov	x29, sp
   281d8:	str	x0, [sp, #40]
   281dc:	str	x1, [sp, #32]
   281e0:	str	x2, [sp, #24]
   281e4:	adrp	x0, 28000 <lzma_mode_is_supported@@XZ_5.0+0xd368>
   281e8:	add	x3, x0, #0x13c
   281ec:	ldr	x2, [sp, #24]
   281f0:	ldr	x1, [sp, #32]
   281f4:	ldr	x0, [sp, #40]
   281f8:	bl	182e0 <lzma_mf_is_supported@@XZ_5.0+0x2a58>
   281fc:	ldp	x29, x30, [sp], #48
   28200:	ret
   28204:	sub	sp, sp, #0x10
   28208:	str	x0, [sp, #8]
   2820c:	strb	w1, [sp, #7]
   28210:	ldrb	w0, [sp, #7]
   28214:	cmp	w0, #0xe0
   28218:	b.ls	28224 <lzma_mode_is_supported@@XZ_5.0+0xd58c>  // b.plast
   2821c:	mov	w0, #0x1                   	// #1
   28220:	b	282e8 <lzma_mode_is_supported@@XZ_5.0+0xd650>
   28224:	ldrb	w0, [sp, #7]
   28228:	mov	w1, #0xc16d                	// #49517
   2822c:	movk	w1, #0x6c16, lsl #16
   28230:	umull	x1, w0, w1
   28234:	lsr	x1, x1, #32
   28238:	sub	w0, w0, w1
   2823c:	lsr	w0, w0, #1
   28240:	add	w0, w0, w1
   28244:	lsr	w0, w0, #5
   28248:	and	w0, w0, #0xff
   2824c:	mov	w1, w0
   28250:	ldr	x0, [sp, #8]
   28254:	str	w1, [x0, #28]
   28258:	ldr	x0, [sp, #8]
   2825c:	ldr	w0, [x0, #28]
   28260:	and	w1, w0, #0xff
   28264:	mov	w0, #0x2d                  	// #45
   28268:	mul	w0, w1, w0
   2826c:	and	w0, w0, #0xff
   28270:	ldrb	w1, [sp, #7]
   28274:	sub	w0, w1, w0
   28278:	strb	w0, [sp, #7]
   2827c:	ldrb	w1, [sp, #7]
   28280:	mov	w0, #0x8e39                	// #36409
   28284:	movk	w0, #0x38e3, lsl #16
   28288:	umull	x0, w1, w0
   2828c:	lsr	x0, x0, #32
   28290:	lsr	w0, w0, #1
   28294:	and	w0, w0, #0xff
   28298:	mov	w1, w0
   2829c:	ldr	x0, [sp, #8]
   282a0:	str	w1, [x0, #24]
   282a4:	ldrb	w2, [sp, #7]
   282a8:	ldr	x0, [sp, #8]
   282ac:	ldr	w1, [x0, #24]
   282b0:	mov	w0, w1
   282b4:	lsl	w0, w0, #3
   282b8:	add	w0, w0, w1
   282bc:	sub	w1, w2, w0
   282c0:	ldr	x0, [sp, #8]
   282c4:	str	w1, [x0, #20]
   282c8:	ldr	x0, [sp, #8]
   282cc:	ldr	w1, [x0, #20]
   282d0:	ldr	x0, [sp, #8]
   282d4:	ldr	w0, [x0, #24]
   282d8:	add	w0, w1, w0
   282dc:	cmp	w0, #0x4
   282e0:	cset	w0, hi  // hi = pmore
   282e4:	and	w0, w0, #0xff
   282e8:	add	sp, sp, #0x10
   282ec:	ret
   282f0:	stp	x29, x30, [sp, #-48]!
   282f4:	mov	x29, sp
   282f8:	str	x0, [sp, #24]
   282fc:	ldr	x0, [sp, #24]
   28300:	str	x0, [sp, #40]
   28304:	ldr	x0, [sp, #40]
   28308:	ldr	w0, [x0]
   2830c:	mov	w0, w0
   28310:	bl	1858c <lzma_mf_is_supported@@XZ_5.0+0x2d04>
   28314:	mov	x1, x0
   28318:	mov	x0, #0x6ec0                	// #28352
   2831c:	add	x0, x1, x0
   28320:	ldp	x29, x30, [sp], #48
   28324:	ret
   28328:	stp	x29, x30, [sp, #-32]!
   2832c:	mov	x29, sp
   28330:	str	x0, [sp, #24]
   28334:	ldr	x0, [sp, #24]
   28338:	bl	1f1c4 <lzma_mode_is_supported@@XZ_5.0+0x452c>
   2833c:	and	w0, w0, #0xff
   28340:	eor	w0, w0, #0x1
   28344:	and	w0, w0, #0xff
   28348:	cmp	w0, #0x0
   2834c:	b.eq	28358 <lzma_mode_is_supported@@XZ_5.0+0xd6c0>  // b.none
   28350:	mov	x0, #0xffffffffffffffff    	// #-1
   28354:	b	28360 <lzma_mode_is_supported@@XZ_5.0+0xd6c8>
   28358:	ldr	x0, [sp, #24]
   2835c:	bl	282f0 <lzma_mode_is_supported@@XZ_5.0+0xd658>
   28360:	ldp	x29, x30, [sp], #32
   28364:	ret
   28368:	stp	x29, x30, [sp, #-64]!
   2836c:	mov	x29, sp
   28370:	str	x0, [sp, #40]
   28374:	str	x1, [sp, #32]
   28378:	str	x2, [sp, #24]
   2837c:	str	x3, [sp, #16]
   28380:	ldr	x0, [sp, #16]
   28384:	cmp	x0, #0x5
   28388:	b.eq	28394 <lzma_mode_is_supported@@XZ_5.0+0xd6fc>  // b.none
   2838c:	mov	w0, #0x8                   	// #8
   28390:	b	28428 <lzma_mode_is_supported@@XZ_5.0+0xd790>
   28394:	ldr	x1, [sp, #32]
   28398:	mov	x0, #0x70                  	// #112
   2839c:	bl	36fc <lzma_version_string@@XZ_5.0+0xc>
   283a0:	str	x0, [sp, #56]
   283a4:	ldr	x0, [sp, #56]
   283a8:	cmp	x0, #0x0
   283ac:	b.ne	283b8 <lzma_mode_is_supported@@XZ_5.0+0xd720>  // b.any
   283b0:	mov	w0, #0x5                   	// #5
   283b4:	b	28428 <lzma_mode_is_supported@@XZ_5.0+0xd790>
   283b8:	ldr	x0, [sp, #24]
   283bc:	ldrb	w0, [x0]
   283c0:	mov	w1, w0
   283c4:	ldr	x0, [sp, #56]
   283c8:	bl	28204 <lzma_mode_is_supported@@XZ_5.0+0xd56c>
   283cc:	and	w0, w0, #0xff
   283d0:	cmp	w0, #0x0
   283d4:	b.ne	28414 <lzma_mode_is_supported@@XZ_5.0+0xd77c>  // b.any
   283d8:	ldr	x0, [sp, #24]
   283dc:	add	x0, x0, #0x1
   283e0:	bl	1ed40 <lzma_mode_is_supported@@XZ_5.0+0x40a8>
   283e4:	mov	w1, w0
   283e8:	ldr	x0, [sp, #56]
   283ec:	str	w1, [x0]
   283f0:	ldr	x0, [sp, #56]
   283f4:	str	xzr, [x0, #8]
   283f8:	ldr	x0, [sp, #56]
   283fc:	str	wzr, [x0, #16]
   28400:	ldr	x0, [sp, #40]
   28404:	ldr	x1, [sp, #56]
   28408:	str	x1, [x0]
   2840c:	mov	w0, #0x0                   	// #0
   28410:	b	28428 <lzma_mode_is_supported@@XZ_5.0+0xd790>
   28414:	nop
   28418:	ldr	x1, [sp, #32]
   2841c:	ldr	x0, [sp, #56]
   28420:	bl	3814 <lzma_version_string@@XZ_5.0+0x124>
   28424:	mov	w0, #0x8                   	// #8
   28428:	ldp	x29, x30, [sp], #64
   2842c:	ret
   28430:	sub	sp, sp, #0x10
   28434:	str	x0, [sp, #8]
   28438:	ldr	x0, [sp, #8]
   2843c:	ldr	w1, [x0, #36]
   28440:	ldr	x0, [sp, #8]
   28444:	ldr	w0, [x0, #24]
   28448:	sub	w1, w1, w0
   2844c:	ldr	x0, [sp, #8]
   28450:	ldr	w0, [x0, #28]
   28454:	add	w0, w1, w0
   28458:	add	sp, sp, #0x10
   2845c:	ret
   28460:	stp	x29, x30, [sp, #-80]!
   28464:	mov	x29, sp
   28468:	str	x0, [sp, #56]
   2846c:	str	x1, [sp, #48]
   28470:	str	x2, [sp, #40]
   28474:	str	x3, [sp, #32]
   28478:	str	x4, [sp, #24]
   2847c:	ldr	x0, [sp, #40]
   28480:	ldr	x0, [x0]
   28484:	ldr	x1, [sp, #32]
   28488:	sub	x0, x1, x0
   2848c:	str	x0, [sp, #72]
   28490:	ldr	x0, [sp, #24]
   28494:	ldr	x0, [x0]
   28498:	ldr	x2, [sp, #72]
   2849c:	ldr	x1, [sp, #72]
   284a0:	cmp	x2, x0
   284a4:	csel	x0, x1, x0, ls  // ls = plast
   284a8:	str	x0, [sp, #64]
   284ac:	ldr	x0, [sp, #40]
   284b0:	ldr	x0, [x0]
   284b4:	ldr	x1, [sp, #48]
   284b8:	add	x3, x1, x0
   284bc:	ldr	x0, [sp, #56]
   284c0:	ldr	x1, [x0]
   284c4:	ldr	x0, [sp, #56]
   284c8:	ldr	w0, [x0, #24]
   284cc:	mov	w2, w0
   284d0:	ldr	x0, [sp, #24]
   284d4:	ldr	x0, [x0]
   284d8:	sub	x0, x2, x0
   284dc:	add	x0, x1, x0
   284e0:	ldr	x2, [sp, #64]
   284e4:	mov	x1, x0
   284e8:	mov	x0, x3
   284ec:	bl	3090 <memcpy@plt>
   284f0:	ldr	x0, [sp, #40]
   284f4:	ldr	x1, [x0]
   284f8:	ldr	x0, [sp, #64]
   284fc:	add	x1, x1, x0
   28500:	ldr	x0, [sp, #40]
   28504:	str	x1, [x0]
   28508:	ldr	x0, [sp, #24]
   2850c:	ldr	x1, [x0]
   28510:	ldr	x0, [sp, #64]
   28514:	sub	x1, x1, x0
   28518:	ldr	x0, [sp, #24]
   2851c:	str	x1, [x0]
   28520:	nop
   28524:	ldp	x29, x30, [sp], #80
   28528:	ret
   2852c:	sub	sp, sp, #0x10
   28530:	str	w0, [sp, #12]
   28534:	ldr	w1, [sp, #12]
   28538:	mov	w0, #0x1fff                	// #8191
   2853c:	cmp	w1, w0
   28540:	b.hi	28558 <lzma_mode_is_supported@@XZ_5.0+0xd8c0>  // b.pmore
   28544:	adrp	x0, 46000 <lzma_mode_is_supported@@XZ_5.0+0x2b368>
   28548:	ldr	x1, [x0, #4008]
   2854c:	ldr	w0, [sp, #12]
   28550:	ldrb	w0, [x1, x0]
   28554:	b	285a4 <lzma_mode_is_supported@@XZ_5.0+0xd90c>
   28558:	ldr	w1, [sp, #12]
   2855c:	mov	w0, #0x1ffffff             	// #33554431
   28560:	cmp	w1, w0
   28564:	b.hi	28588 <lzma_mode_is_supported@@XZ_5.0+0xd8f0>  // b.pmore
   28568:	ldr	w0, [sp, #12]
   2856c:	lsr	w2, w0, #12
   28570:	adrp	x0, 46000 <lzma_mode_is_supported@@XZ_5.0+0x2b368>
   28574:	ldr	x1, [x0, #4008]
   28578:	mov	w0, w2
   2857c:	ldrb	w0, [x1, x0]
   28580:	add	w0, w0, #0x18
   28584:	b	285a4 <lzma_mode_is_supported@@XZ_5.0+0xd90c>
   28588:	ldr	w0, [sp, #12]
   2858c:	lsr	w2, w0, #24
   28590:	adrp	x0, 46000 <lzma_mode_is_supported@@XZ_5.0+0x2b368>
   28594:	ldr	x1, [x0, #4008]
   28598:	mov	w0, w2
   2859c:	ldrb	w0, [x1, x0]
   285a0:	add	w0, w0, #0x30
   285a4:	add	sp, sp, #0x10
   285a8:	ret
   285ac:	stp	x29, x30, [sp, #-48]!
   285b0:	mov	x29, sp
   285b4:	str	x0, [sp, #24]
   285b8:	ldr	x0, [sp, #24]
   285bc:	ldrb	w0, [x0, #128]
   285c0:	cmp	w0, #0x0
   285c4:	b.eq	2860c <lzma_mode_is_supported@@XZ_5.0+0xd974>  // b.none
   285c8:	str	xzr, [sp, #40]
   285cc:	ldr	x0, [sp, #24]
   285d0:	ldrb	w0, [x0, #130]
   285d4:	cmp	w0, #0x0
   285d8:	b.eq	285f4 <lzma_mode_is_supported@@XZ_5.0+0xd95c>  // b.none
   285dc:	ldr	x1, [sp, #24]
   285e0:	ldr	x0, [sp, #40]
   285e4:	add	x0, x1, x0
   285e8:	mov	w1, #0xffffffe0            	// #-32
   285ec:	strb	w1, [x0, #160]
   285f0:	b	28650 <lzma_mode_is_supported@@XZ_5.0+0xd9b8>
   285f4:	ldr	x1, [sp, #24]
   285f8:	ldr	x0, [sp, #40]
   285fc:	add	x0, x1, x0
   28600:	mov	w1, #0xffffffc0            	// #-64
   28604:	strb	w1, [x0, #160]
   28608:	b	28650 <lzma_mode_is_supported@@XZ_5.0+0xd9b8>
   2860c:	mov	x0, #0x1                   	// #1
   28610:	str	x0, [sp, #40]
   28614:	ldr	x0, [sp, #24]
   28618:	ldrb	w0, [x0, #129]
   2861c:	cmp	w0, #0x0
   28620:	b.eq	2863c <lzma_mode_is_supported@@XZ_5.0+0xd9a4>  // b.none
   28624:	ldr	x1, [sp, #24]
   28628:	ldr	x0, [sp, #40]
   2862c:	add	x0, x1, x0
   28630:	mov	w1, #0xffffffa0            	// #-96
   28634:	strb	w1, [x0, #160]
   28638:	b	28650 <lzma_mode_is_supported@@XZ_5.0+0xd9b8>
   2863c:	ldr	x1, [sp, #24]
   28640:	ldr	x0, [sp, #40]
   28644:	add	x0, x1, x0
   28648:	mov	w1, #0xffffff80            	// #-128
   2864c:	strb	w1, [x0, #160]
   28650:	ldr	x0, [sp, #24]
   28654:	ldr	x1, [sp, #40]
   28658:	str	x1, [x0, #152]
   2865c:	ldr	x0, [sp, #24]
   28660:	ldr	x0, [x0, #136]
   28664:	sub	x0, x0, #0x1
   28668:	str	x0, [sp, #32]
   2866c:	ldr	x0, [sp, #40]
   28670:	add	x1, x0, #0x1
   28674:	str	x1, [sp, #40]
   28678:	ldr	x1, [sp, #24]
   2867c:	add	x1, x1, x0
   28680:	ldrb	w2, [x1, #160]
   28684:	ldr	x1, [sp, #32]
   28688:	lsr	x1, x1, #16
   2868c:	and	w1, w1, #0xff
   28690:	add	w1, w2, w1
   28694:	and	w2, w1, #0xff
   28698:	ldr	x1, [sp, #24]
   2869c:	add	x0, x1, x0
   286a0:	mov	w1, w2
   286a4:	strb	w1, [x0, #160]
   286a8:	ldr	x0, [sp, #32]
   286ac:	lsr	x2, x0, #8
   286b0:	ldr	x0, [sp, #40]
   286b4:	add	x1, x0, #0x1
   286b8:	str	x1, [sp, #40]
   286bc:	and	w2, w2, #0xff
   286c0:	ldr	x1, [sp, #24]
   286c4:	add	x0, x1, x0
   286c8:	mov	w1, w2
   286cc:	strb	w1, [x0, #160]
   286d0:	ldr	x0, [sp, #40]
   286d4:	add	x1, x0, #0x1
   286d8:	str	x1, [sp, #40]
   286dc:	ldr	x1, [sp, #32]
   286e0:	and	w2, w1, #0xff
   286e4:	ldr	x1, [sp, #24]
   286e8:	add	x0, x1, x0
   286ec:	mov	w1, w2
   286f0:	strb	w1, [x0, #160]
   286f4:	ldr	x0, [sp, #24]
   286f8:	ldr	x0, [x0, #144]
   286fc:	sub	x0, x0, #0x1
   28700:	str	x0, [sp, #32]
   28704:	ldr	x0, [sp, #32]
   28708:	lsr	x2, x0, #8
   2870c:	ldr	x0, [sp, #40]
   28710:	add	x1, x0, #0x1
   28714:	str	x1, [sp, #40]
   28718:	and	w2, w2, #0xff
   2871c:	ldr	x1, [sp, #24]
   28720:	add	x0, x1, x0
   28724:	mov	w1, w2
   28728:	strb	w1, [x0, #160]
   2872c:	ldr	x0, [sp, #40]
   28730:	add	x1, x0, #0x1
   28734:	str	x1, [sp, #40]
   28738:	ldr	x1, [sp, #32]
   2873c:	and	w2, w1, #0xff
   28740:	ldr	x1, [sp, #24]
   28744:	add	x0, x1, x0
   28748:	mov	w1, w2
   2874c:	strb	w1, [x0, #160]
   28750:	ldr	x0, [sp, #24]
   28754:	ldrb	w0, [x0, #128]
   28758:	cmp	w0, #0x0
   2875c:	b.eq	28784 <lzma_mode_is_supported@@XZ_5.0+0xdaec>  // b.none
   28760:	ldr	x0, [sp, #24]
   28764:	add	x2, x0, #0x10
   28768:	ldr	x0, [sp, #24]
   2876c:	add	x1, x0, #0xa0
   28770:	ldr	x0, [sp, #40]
   28774:	add	x0, x1, x0
   28778:	mov	x1, x0
   2877c:	mov	x0, x2
   28780:	bl	1aba4 <lzma_lzma_preset@@XZ_5.0+0x25c0>
   28784:	ldr	x0, [sp, #24]
   28788:	strb	wzr, [x0, #128]
   2878c:	ldr	x0, [sp, #24]
   28790:	strb	wzr, [x0, #129]
   28794:	ldr	x0, [sp, #24]
   28798:	strb	wzr, [x0, #130]
   2879c:	ldr	x0, [sp, #24]
   287a0:	ldr	x0, [x0, #144]
   287a4:	add	x1, x0, #0x6
   287a8:	ldr	x0, [sp, #24]
   287ac:	str	x1, [x0, #144]
   287b0:	nop
   287b4:	ldp	x29, x30, [sp], #48
   287b8:	ret
   287bc:	sub	sp, sp, #0x10
   287c0:	str	x0, [sp, #8]
   287c4:	ldr	x0, [sp, #8]
   287c8:	ldrb	w0, [x0, #130]
   287cc:	cmp	w0, #0x0
   287d0:	b.eq	287e4 <lzma_mode_is_supported@@XZ_5.0+0xdb4c>  // b.none
   287d4:	ldr	x0, [sp, #8]
   287d8:	mov	w1, #0x1                   	// #1
   287dc:	strb	w1, [x0, #160]
   287e0:	b	287f0 <lzma_mode_is_supported@@XZ_5.0+0xdb58>
   287e4:	ldr	x0, [sp, #8]
   287e8:	mov	w1, #0x2                   	// #2
   287ec:	strb	w1, [x0, #160]
   287f0:	ldr	x0, [sp, #8]
   287f4:	strb	wzr, [x0, #130]
   287f8:	ldr	x0, [sp, #8]
   287fc:	ldr	x0, [x0, #136]
   28800:	sub	x0, x0, #0x1
   28804:	lsr	x0, x0, #8
   28808:	and	w1, w0, #0xff
   2880c:	ldr	x0, [sp, #8]
   28810:	strb	w1, [x0, #161]
   28814:	ldr	x0, [sp, #8]
   28818:	ldr	x0, [x0, #136]
   2881c:	and	w0, w0, #0xff
   28820:	sub	w0, w0, #0x1
   28824:	and	w1, w0, #0xff
   28828:	ldr	x0, [sp, #8]
   2882c:	strb	w1, [x0, #162]
   28830:	ldr	x0, [sp, #8]
   28834:	str	xzr, [x0, #152]
   28838:	nop
   2883c:	add	sp, sp, #0x10
   28840:	ret
   28844:	stp	x29, x30, [sp, #-96]!
   28848:	mov	x29, sp
   2884c:	str	x0, [sp, #56]
   28850:	str	x1, [sp, #48]
   28854:	str	x2, [sp, #40]
   28858:	str	x3, [sp, #32]
   2885c:	str	x4, [sp, #24]
   28860:	ldr	x0, [sp, #56]
   28864:	str	x0, [sp, #80]
   28868:	b	28bd4 <lzma_mode_is_supported@@XZ_5.0+0xdf3c>
   2886c:	ldr	x0, [sp, #80]
   28870:	ldr	w0, [x0]
   28874:	cmp	w0, #0x4
   28878:	b.eq	28b90 <lzma_mode_is_supported@@XZ_5.0+0xdef8>  // b.none
   2887c:	cmp	w0, #0x4
   28880:	b.hi	28bd4 <lzma_mode_is_supported@@XZ_5.0+0xdf3c>  // b.pmore
   28884:	cmp	w0, #0x3
   28888:	b.eq	28b40 <lzma_mode_is_supported@@XZ_5.0+0xdea8>  // b.none
   2888c:	cmp	w0, #0x3
   28890:	b.hi	28bd4 <lzma_mode_is_supported@@XZ_5.0+0xdf3c>  // b.pmore
   28894:	cmp	w0, #0x2
   28898:	b.eq	28ae4 <lzma_mode_is_supported@@XZ_5.0+0xde4c>  // b.none
   2889c:	cmp	w0, #0x2
   288a0:	b.hi	28bd4 <lzma_mode_is_supported@@XZ_5.0+0xdf3c>  // b.pmore
   288a4:	cmp	w0, #0x0
   288a8:	b.eq	288b8 <lzma_mode_is_supported@@XZ_5.0+0xdc20>  // b.none
   288ac:	cmp	w0, #0x1
   288b0:	b.eq	28970 <lzma_mode_is_supported@@XZ_5.0+0xdcd8>  // b.none
   288b4:	b	28bd4 <lzma_mode_is_supported@@XZ_5.0+0xdf3c>
   288b8:	ldr	x0, [sp, #48]
   288bc:	bl	28430 <lzma_mode_is_supported@@XZ_5.0+0xd798>
   288c0:	cmp	w0, #0x0
   288c4:	b.ne	28910 <lzma_mode_is_supported@@XZ_5.0+0xdc78>  // b.any
   288c8:	ldr	x0, [sp, #48]
   288cc:	ldr	w0, [x0, #104]
   288d0:	cmp	w0, #0x3
   288d4:	b.ne	288f8 <lzma_mode_is_supported@@XZ_5.0+0xdc60>  // b.any
   288d8:	ldr	x0, [sp, #32]
   288dc:	ldr	x0, [x0]
   288e0:	add	x2, x0, #0x1
   288e4:	ldr	x1, [sp, #32]
   288e8:	str	x2, [x1]
   288ec:	ldr	x1, [sp, #40]
   288f0:	add	x0, x1, x0
   288f4:	strb	wzr, [x0]
   288f8:	ldr	x0, [sp, #48]
   288fc:	ldr	w0, [x0, #104]
   28900:	cmp	w0, #0x0
   28904:	cset	w0, ne  // ne = any
   28908:	and	w0, w0, #0xff
   2890c:	b	28bec <lzma_mode_is_supported@@XZ_5.0+0xdf54>
   28910:	ldr	x0, [sp, #80]
   28914:	ldrb	w0, [x0, #129]
   28918:	cmp	w0, #0x0
   2891c:	b.eq	28954 <lzma_mode_is_supported@@XZ_5.0+0xdcbc>  // b.none
   28920:	ldr	x0, [sp, #80]
   28924:	ldr	x2, [x0, #8]
   28928:	ldr	x0, [sp, #80]
   2892c:	add	x0, x0, #0x10
   28930:	mov	x1, x0
   28934:	mov	x0, x2
   28938:	bl	1a5a4 <lzma_lzma_preset@@XZ_5.0+0x1fc0>
   2893c:	str	w0, [sp, #76]
   28940:	ldr	w0, [sp, #76]
   28944:	cmp	w0, #0x0
   28948:	b.eq	28954 <lzma_mode_is_supported@@XZ_5.0+0xdcbc>  // b.none
   2894c:	ldr	w0, [sp, #76]
   28950:	b	28bec <lzma_mode_is_supported@@XZ_5.0+0xdf54>
   28954:	ldr	x0, [sp, #80]
   28958:	str	xzr, [x0, #136]
   2895c:	ldr	x0, [sp, #80]
   28960:	str	xzr, [x0, #144]
   28964:	ldr	x0, [sp, #80]
   28968:	mov	w1, #0x1                   	// #1
   2896c:	str	w1, [x0]
   28970:	ldr	x0, [sp, #80]
   28974:	ldr	x0, [x0, #136]
   28978:	mov	w1, w0
   2897c:	mov	w0, #0x200000              	// #2097152
   28980:	sub	w0, w0, w1
   28984:	str	w0, [sp, #72]
   28988:	ldr	x0, [sp, #48]
   2898c:	ldr	w0, [x0, #100]
   28990:	ldr	w1, [sp, #72]
   28994:	cmp	w1, w0
   28998:	b.cs	289a4 <lzma_mode_is_supported@@XZ_5.0+0xdd0c>  // b.hs, b.nlast
   2899c:	str	wzr, [sp, #92]
   289a0:	b	289d0 <lzma_mode_is_supported@@XZ_5.0+0xdd38>
   289a4:	ldr	x0, [sp, #48]
   289a8:	ldr	w1, [x0, #24]
   289ac:	ldr	x0, [sp, #48]
   289b0:	ldr	w0, [x0, #28]
   289b4:	sub	w1, w1, w0
   289b8:	ldr	w0, [sp, #72]
   289bc:	add	w1, w1, w0
   289c0:	ldr	x0, [sp, #48]
   289c4:	ldr	w0, [x0, #100]
   289c8:	sub	w0, w1, w0
   289cc:	str	w0, [sp, #92]
   289d0:	ldr	x0, [sp, #48]
   289d4:	ldr	w1, [x0, #24]
   289d8:	ldr	x0, [sp, #48]
   289dc:	ldr	w0, [x0, #28]
   289e0:	sub	w0, w1, w0
   289e4:	str	w0, [sp, #68]
   289e8:	ldr	x0, [sp, #80]
   289ec:	ldr	x6, [x0, #8]
   289f0:	ldr	x0, [sp, #80]
   289f4:	add	x0, x0, #0xa0
   289f8:	add	x1, x0, #0x6
   289fc:	ldr	x0, [sp, #80]
   28a00:	add	x0, x0, #0x90
   28a04:	ldr	w5, [sp, #92]
   28a08:	mov	x4, #0x10000               	// #65536
   28a0c:	mov	x3, x0
   28a10:	mov	x2, x1
   28a14:	ldr	x1, [sp, #48]
   28a18:	mov	x0, x6
   28a1c:	bl	1a080 <lzma_lzma_preset@@XZ_5.0+0x1a9c>
   28a20:	str	w0, [sp, #64]
   28a24:	ldr	x0, [sp, #80]
   28a28:	ldr	x1, [x0, #136]
   28a2c:	ldr	x0, [sp, #48]
   28a30:	ldr	w2, [x0, #24]
   28a34:	ldr	x0, [sp, #48]
   28a38:	ldr	w0, [x0, #28]
   28a3c:	sub	w2, w2, w0
   28a40:	ldr	w0, [sp, #68]
   28a44:	sub	w0, w2, w0
   28a48:	mov	w0, w0
   28a4c:	add	x1, x1, x0
   28a50:	ldr	x0, [sp, #80]
   28a54:	str	x1, [x0, #136]
   28a58:	ldr	w0, [sp, #64]
   28a5c:	cmp	w0, #0x1
   28a60:	b.eq	28a6c <lzma_mode_is_supported@@XZ_5.0+0xddd4>  // b.none
   28a64:	mov	w0, #0x0                   	// #0
   28a68:	b	28bec <lzma_mode_is_supported@@XZ_5.0+0xdf54>
   28a6c:	ldr	x0, [sp, #80]
   28a70:	ldr	x1, [x0, #144]
   28a74:	ldr	x0, [sp, #80]
   28a78:	ldr	x0, [x0, #136]
   28a7c:	cmp	x1, x0
   28a80:	b.cc	28ad0 <lzma_mode_is_supported@@XZ_5.0+0xde38>  // b.lo, b.ul, b.last
   28a84:	ldr	x0, [sp, #80]
   28a88:	ldr	x1, [x0, #136]
   28a8c:	ldr	x0, [sp, #48]
   28a90:	ldr	w0, [x0, #28]
   28a94:	mov	w0, w0
   28a98:	add	x1, x1, x0
   28a9c:	ldr	x0, [sp, #80]
   28aa0:	str	x1, [x0, #136]
   28aa4:	ldr	x0, [sp, #48]
   28aa8:	str	wzr, [x0, #28]
   28aac:	ldr	x0, [sp, #80]
   28ab0:	bl	287bc <lzma_mode_is_supported@@XZ_5.0+0xdb24>
   28ab4:	ldr	x0, [sp, #80]
   28ab8:	mov	w1, #0x1                   	// #1
   28abc:	strb	w1, [x0, #129]
   28ac0:	ldr	x0, [sp, #80]
   28ac4:	mov	w1, #0x3                   	// #3
   28ac8:	str	w1, [x0]
   28acc:	b	28bd4 <lzma_mode_is_supported@@XZ_5.0+0xdf3c>
   28ad0:	ldr	x0, [sp, #80]
   28ad4:	bl	285ac <lzma_mode_is_supported@@XZ_5.0+0xd914>
   28ad8:	ldr	x0, [sp, #80]
   28adc:	mov	w1, #0x2                   	// #2
   28ae0:	str	w1, [x0]
   28ae4:	ldr	x0, [sp, #80]
   28ae8:	add	x6, x0, #0xa0
   28aec:	ldr	x0, [sp, #80]
   28af0:	add	x1, x0, #0x98
   28af4:	ldr	x0, [sp, #80]
   28af8:	ldr	x0, [x0, #144]
   28afc:	ldr	x5, [sp, #24]
   28b00:	ldr	x4, [sp, #32]
   28b04:	ldr	x3, [sp, #40]
   28b08:	mov	x2, x0
   28b0c:	mov	x0, x6
   28b10:	bl	3870 <lzma_version_string@@XZ_5.0+0x180>
   28b14:	ldr	x0, [sp, #80]
   28b18:	ldr	x1, [x0, #152]
   28b1c:	ldr	x0, [sp, #80]
   28b20:	ldr	x0, [x0, #144]
   28b24:	cmp	x1, x0
   28b28:	b.eq	28b34 <lzma_mode_is_supported@@XZ_5.0+0xde9c>  // b.none
   28b2c:	mov	w0, #0x0                   	// #0
   28b30:	b	28bec <lzma_mode_is_supported@@XZ_5.0+0xdf54>
   28b34:	ldr	x0, [sp, #80]
   28b38:	str	wzr, [x0]
   28b3c:	b	28bd4 <lzma_mode_is_supported@@XZ_5.0+0xdf3c>
   28b40:	ldr	x0, [sp, #80]
   28b44:	add	x6, x0, #0xa0
   28b48:	ldr	x0, [sp, #80]
   28b4c:	add	x0, x0, #0x98
   28b50:	ldr	x5, [sp, #24]
   28b54:	ldr	x4, [sp, #32]
   28b58:	ldr	x3, [sp, #40]
   28b5c:	mov	x2, #0x3                   	// #3
   28b60:	mov	x1, x0
   28b64:	mov	x0, x6
   28b68:	bl	3870 <lzma_version_string@@XZ_5.0+0x180>
   28b6c:	ldr	x0, [sp, #80]
   28b70:	ldr	x0, [x0, #152]
   28b74:	cmp	x0, #0x3
   28b78:	b.eq	28b84 <lzma_mode_is_supported@@XZ_5.0+0xdeec>  // b.none
   28b7c:	mov	w0, #0x0                   	// #0
   28b80:	b	28bec <lzma_mode_is_supported@@XZ_5.0+0xdf54>
   28b84:	ldr	x0, [sp, #80]
   28b88:	mov	w1, #0x4                   	// #4
   28b8c:	str	w1, [x0]
   28b90:	ldr	x0, [sp, #80]
   28b94:	add	x0, x0, #0x88
   28b98:	mov	x4, x0
   28b9c:	ldr	x3, [sp, #24]
   28ba0:	ldr	x2, [sp, #32]
   28ba4:	ldr	x1, [sp, #40]
   28ba8:	ldr	x0, [sp, #48]
   28bac:	bl	28460 <lzma_mode_is_supported@@XZ_5.0+0xd7c8>
   28bb0:	ldr	x0, [sp, #80]
   28bb4:	ldr	x0, [x0, #136]
   28bb8:	cmp	x0, #0x0
   28bbc:	b.eq	28bc8 <lzma_mode_is_supported@@XZ_5.0+0xdf30>  // b.none
   28bc0:	mov	w0, #0x0                   	// #0
   28bc4:	b	28bec <lzma_mode_is_supported@@XZ_5.0+0xdf54>
   28bc8:	ldr	x0, [sp, #80]
   28bcc:	str	wzr, [x0]
   28bd0:	nop
   28bd4:	ldr	x0, [sp, #32]
   28bd8:	ldr	x0, [x0]
   28bdc:	ldr	x1, [sp, #24]
   28be0:	cmp	x1, x0
   28be4:	b.hi	2886c <lzma_mode_is_supported@@XZ_5.0+0xdbd4>  // b.pmore
   28be8:	mov	w0, #0x0                   	// #0
   28bec:	ldp	x29, x30, [sp], #96
   28bf0:	ret
   28bf4:	stp	x29, x30, [sp, #-48]!
   28bf8:	mov	x29, sp
   28bfc:	str	x0, [sp, #24]
   28c00:	str	x1, [sp, #16]
   28c04:	ldr	x0, [sp, #24]
   28c08:	str	x0, [sp, #40]
   28c0c:	ldr	x0, [sp, #40]
   28c10:	ldr	x0, [x0, #8]
   28c14:	ldr	x1, [sp, #16]
   28c18:	bl	3814 <lzma_version_string@@XZ_5.0+0x124>
   28c1c:	ldr	x1, [sp, #16]
   28c20:	ldr	x0, [sp, #40]
   28c24:	bl	3814 <lzma_version_string@@XZ_5.0+0x124>
   28c28:	nop
   28c2c:	ldp	x29, x30, [sp], #48
   28c30:	ret
   28c34:	sub	sp, sp, #0x20
   28c38:	str	x0, [sp, #8]
   28c3c:	str	x1, [sp]
   28c40:	ldr	x0, [sp, #8]
   28c44:	str	x0, [sp, #24]
   28c48:	ldr	x0, [sp]
   28c4c:	ldr	x0, [x0, #8]
   28c50:	cmp	x0, #0x0
   28c54:	b.eq	28c68 <lzma_mode_is_supported@@XZ_5.0+0xdfd0>  // b.none
   28c58:	ldr	x0, [sp, #24]
   28c5c:	ldr	w0, [x0]
   28c60:	cmp	w0, #0x0
   28c64:	b.eq	28c70 <lzma_mode_is_supported@@XZ_5.0+0xdfd8>  // b.none
   28c68:	mov	w0, #0xb                   	// #11
   28c6c:	b	28d64 <lzma_mode_is_supported@@XZ_5.0+0xe0cc>
   28c70:	ldr	x0, [sp]
   28c74:	ldr	x0, [x0, #8]
   28c78:	str	x0, [sp, #16]
   28c7c:	ldr	x0, [sp, #24]
   28c80:	ldr	w1, [x0, #36]
   28c84:	ldr	x0, [sp, #16]
   28c88:	ldr	w0, [x0, #20]
   28c8c:	cmp	w1, w0
   28c90:	b.ne	28cc4 <lzma_mode_is_supported@@XZ_5.0+0xe02c>  // b.any
   28c94:	ldr	x0, [sp, #24]
   28c98:	ldr	w1, [x0, #40]
   28c9c:	ldr	x0, [sp, #16]
   28ca0:	ldr	w0, [x0, #24]
   28ca4:	cmp	w1, w0
   28ca8:	b.ne	28cc4 <lzma_mode_is_supported@@XZ_5.0+0xe02c>  // b.any
   28cac:	ldr	x0, [sp, #24]
   28cb0:	ldr	w1, [x0, #44]
   28cb4:	ldr	x0, [sp, #16]
   28cb8:	ldr	w0, [x0, #28]
   28cbc:	cmp	w1, w0
   28cc0:	b.eq	28d60 <lzma_mode_is_supported@@XZ_5.0+0xe0c8>  // b.none
   28cc4:	ldr	x0, [sp, #16]
   28cc8:	ldr	w0, [x0, #20]
   28ccc:	cmp	w0, #0x4
   28cd0:	b.hi	28d10 <lzma_mode_is_supported@@XZ_5.0+0xe078>  // b.pmore
   28cd4:	ldr	x0, [sp, #16]
   28cd8:	ldr	w0, [x0, #24]
   28cdc:	cmp	w0, #0x4
   28ce0:	b.hi	28d10 <lzma_mode_is_supported@@XZ_5.0+0xe078>  // b.pmore
   28ce4:	ldr	x0, [sp, #16]
   28ce8:	ldr	w1, [x0, #20]
   28cec:	ldr	x0, [sp, #16]
   28cf0:	ldr	w0, [x0, #24]
   28cf4:	add	w0, w1, w0
   28cf8:	cmp	w0, #0x4
   28cfc:	b.hi	28d10 <lzma_mode_is_supported@@XZ_5.0+0xe078>  // b.pmore
   28d00:	ldr	x0, [sp, #16]
   28d04:	ldr	w0, [x0, #28]
   28d08:	cmp	w0, #0x4
   28d0c:	b.ls	28d18 <lzma_mode_is_supported@@XZ_5.0+0xe080>  // b.plast
   28d10:	mov	w0, #0x8                   	// #8
   28d14:	b	28d64 <lzma_mode_is_supported@@XZ_5.0+0xe0cc>
   28d18:	ldr	x0, [sp, #16]
   28d1c:	ldr	w1, [x0, #20]
   28d20:	ldr	x0, [sp, #24]
   28d24:	str	w1, [x0, #36]
   28d28:	ldr	x0, [sp, #16]
   28d2c:	ldr	w1, [x0, #24]
   28d30:	ldr	x0, [sp, #24]
   28d34:	str	w1, [x0, #40]
   28d38:	ldr	x0, [sp, #16]
   28d3c:	ldr	w1, [x0, #28]
   28d40:	ldr	x0, [sp, #24]
   28d44:	str	w1, [x0, #44]
   28d48:	ldr	x0, [sp, #24]
   28d4c:	mov	w1, #0x1                   	// #1
   28d50:	strb	w1, [x0, #128]
   28d54:	ldr	x0, [sp, #24]
   28d58:	mov	w1, #0x1                   	// #1
   28d5c:	strb	w1, [x0, #129]
   28d60:	mov	w0, #0x0                   	// #0
   28d64:	add	sp, sp, #0x20
   28d68:	ret
   28d6c:	stp	x29, x30, [sp, #-64]!
   28d70:	mov	x29, sp
   28d74:	str	x0, [sp, #40]
   28d78:	str	x1, [sp, #32]
   28d7c:	str	x2, [sp, #24]
   28d80:	str	x3, [sp, #16]
   28d84:	ldr	x0, [sp, #24]
   28d88:	cmp	x0, #0x0
   28d8c:	b.ne	28d98 <lzma_mode_is_supported@@XZ_5.0+0xe100>  // b.any
   28d90:	mov	w0, #0xb                   	// #11
   28d94:	b	28f30 <lzma_mode_is_supported@@XZ_5.0+0xe298>
   28d98:	ldr	x0, [sp, #40]
   28d9c:	ldr	x0, [x0]
   28da0:	str	x0, [sp, #56]
   28da4:	ldr	x0, [sp, #56]
   28da8:	cmp	x0, #0x0
   28dac:	b.ne	28e1c <lzma_mode_is_supported@@XZ_5.0+0xe184>  // b.any
   28db0:	ldr	x1, [sp, #32]
   28db4:	mov	x0, #0xa8                  	// #168
   28db8:	movk	x0, #0x1, lsl #16
   28dbc:	bl	36fc <lzma_version_string@@XZ_5.0+0xc>
   28dc0:	str	x0, [sp, #56]
   28dc4:	ldr	x0, [sp, #56]
   28dc8:	cmp	x0, #0x0
   28dcc:	b.ne	28dd8 <lzma_mode_is_supported@@XZ_5.0+0xe140>  // b.any
   28dd0:	mov	w0, #0x5                   	// #5
   28dd4:	b	28f30 <lzma_mode_is_supported@@XZ_5.0+0xe298>
   28dd8:	ldr	x0, [sp, #40]
   28ddc:	ldr	x1, [sp, #56]
   28de0:	str	x1, [x0]
   28de4:	ldr	x0, [sp, #40]
   28de8:	adrp	x1, 28000 <lzma_mode_is_supported@@XZ_5.0+0xd368>
   28dec:	add	x1, x1, #0x844
   28df0:	str	x1, [x0, #8]
   28df4:	ldr	x0, [sp, #40]
   28df8:	adrp	x1, 28000 <lzma_mode_is_supported@@XZ_5.0+0xd368>
   28dfc:	add	x1, x1, #0xbf4
   28e00:	str	x1, [x0, #16]
   28e04:	ldr	x0, [sp, #40]
   28e08:	adrp	x1, 28000 <lzma_mode_is_supported@@XZ_5.0+0xd368>
   28e0c:	add	x1, x1, #0xc34
   28e10:	str	x1, [x0, #24]
   28e14:	ldr	x0, [sp, #56]
   28e18:	str	xzr, [x0, #8]
   28e1c:	ldr	x0, [sp, #56]
   28e20:	add	x0, x0, #0x10
   28e24:	ldr	x1, [sp, #24]
   28e28:	ldp	x2, x3, [x1]
   28e2c:	stp	x2, x3, [x0]
   28e30:	ldp	x2, x3, [x1, #16]
   28e34:	stp	x2, x3, [x0, #16]
   28e38:	ldp	x2, x3, [x1, #32]
   28e3c:	stp	x2, x3, [x0, #32]
   28e40:	ldp	x2, x3, [x1, #48]
   28e44:	stp	x2, x3, [x0, #48]
   28e48:	ldp	x2, x3, [x1, #64]
   28e4c:	stp	x2, x3, [x0, #64]
   28e50:	ldp	x2, x3, [x1, #80]
   28e54:	stp	x2, x3, [x0, #80]
   28e58:	ldp	x2, x3, [x1, #96]
   28e5c:	stp	x2, x3, [x0, #96]
   28e60:	ldr	x0, [sp, #56]
   28e64:	str	wzr, [x0]
   28e68:	ldr	x0, [sp, #56]
   28e6c:	mov	w1, #0x1                   	// #1
   28e70:	strb	w1, [x0, #128]
   28e74:	ldr	x0, [sp, #56]
   28e78:	strb	wzr, [x0, #129]
   28e7c:	ldr	x0, [sp, #56]
   28e80:	ldr	x0, [x0, #24]
   28e84:	cmp	x0, #0x0
   28e88:	b.eq	28e9c <lzma_mode_is_supported@@XZ_5.0+0xe204>  // b.none
   28e8c:	ldr	x0, [sp, #56]
   28e90:	ldr	w0, [x0, #32]
   28e94:	cmp	w0, #0x0
   28e98:	b.ne	28ea4 <lzma_mode_is_supported@@XZ_5.0+0xe20c>  // b.any
   28e9c:	mov	w0, #0x1                   	// #1
   28ea0:	b	28ea8 <lzma_mode_is_supported@@XZ_5.0+0xe210>
   28ea4:	mov	w0, #0x0                   	// #0
   28ea8:	and	w0, w0, #0x1
   28eac:	and	w1, w0, #0xff
   28eb0:	ldr	x0, [sp, #56]
   28eb4:	strb	w1, [x0, #130]
   28eb8:	ldr	x0, [sp, #56]
   28ebc:	add	x4, x0, #0x8
   28ec0:	ldr	x0, [sp, #56]
   28ec4:	add	x0, x0, #0x10
   28ec8:	ldr	x3, [sp, #16]
   28ecc:	mov	x2, x0
   28ed0:	ldr	x1, [sp, #32]
   28ed4:	mov	x0, x4
   28ed8:	bl	1a938 <lzma_lzma_preset@@XZ_5.0+0x2354>
   28edc:	str	w0, [sp, #52]
   28ee0:	ldr	w0, [sp, #52]
   28ee4:	cmp	w0, #0x0
   28ee8:	b.eq	28ef4 <lzma_mode_is_supported@@XZ_5.0+0xe25c>  // b.none
   28eec:	ldr	w0, [sp, #52]
   28ef0:	b	28f30 <lzma_mode_is_supported@@XZ_5.0+0xe298>
   28ef4:	ldr	x0, [sp, #16]
   28ef8:	ldr	x1, [x0]
   28efc:	ldr	x0, [sp, #16]
   28f00:	ldr	x0, [x0, #8]
   28f04:	add	x1, x1, x0
   28f08:	mov	x0, #0xffff                	// #65535
   28f0c:	cmp	x1, x0
   28f10:	b.hi	28f2c <lzma_mode_is_supported@@XZ_5.0+0xe294>  // b.pmore
   28f14:	ldr	x0, [sp, #16]
   28f18:	ldr	x0, [x0, #8]
   28f1c:	mov	x1, #0x10000               	// #65536
   28f20:	sub	x1, x1, x0
   28f24:	ldr	x0, [sp, #16]
   28f28:	str	x1, [x0]
   28f2c:	mov	w0, #0x0                   	// #0
   28f30:	ldp	x29, x30, [sp], #64
   28f34:	ret
   28f38:	stp	x29, x30, [sp, #-48]!
   28f3c:	mov	x29, sp
   28f40:	str	x0, [sp, #40]
   28f44:	str	x1, [sp, #32]
   28f48:	str	x2, [sp, #24]
   28f4c:	adrp	x0, 28000 <lzma_mode_is_supported@@XZ_5.0+0xd368>
   28f50:	add	x3, x0, #0xd6c
   28f54:	ldr	x2, [sp, #24]
   28f58:	ldr	x1, [sp, #32]
   28f5c:	ldr	x0, [sp, #40]
   28f60:	bl	156a4 <lzma_crc64@@XZ_5.0+0x3874>
   28f64:	ldp	x29, x30, [sp], #48
   28f68:	ret
   28f6c:	stp	x29, x30, [sp, #-48]!
   28f70:	mov	x29, sp
   28f74:	str	x0, [sp, #24]
   28f78:	ldr	x0, [sp, #24]
   28f7c:	bl	1ab30 <lzma_lzma_preset@@XZ_5.0+0x254c>
   28f80:	str	x0, [sp, #40]
   28f84:	ldr	x0, [sp, #40]
   28f88:	cmn	x0, #0x1
   28f8c:	b.ne	28f98 <lzma_mode_is_supported@@XZ_5.0+0xe300>  // b.any
   28f90:	mov	x0, #0xffffffffffffffff    	// #-1
   28f94:	b	28fa8 <lzma_mode_is_supported@@XZ_5.0+0xe310>
   28f98:	ldr	x1, [sp, #40]
   28f9c:	mov	x0, #0xa8                  	// #168
   28fa0:	movk	x0, #0x1, lsl #16
   28fa4:	add	x0, x1, x0
   28fa8:	ldp	x29, x30, [sp], #48
   28fac:	ret
   28fb0:	stp	x29, x30, [sp, #-48]!
   28fb4:	mov	x29, sp
   28fb8:	str	x0, [sp, #24]
   28fbc:	str	x1, [sp, #16]
   28fc0:	ldr	x0, [sp, #24]
   28fc4:	str	x0, [sp, #40]
   28fc8:	ldr	x0, [sp, #40]
   28fcc:	ldr	w0, [x0]
   28fd0:	mov	w1, #0x1000                	// #4096
   28fd4:	cmp	w0, #0x1, lsl #12
   28fd8:	csel	w0, w0, w1, cs  // cs = hs, nlast
   28fdc:	str	w0, [sp, #36]
   28fe0:	ldr	w0, [sp, #36]
   28fe4:	sub	w0, w0, #0x1
   28fe8:	str	w0, [sp, #36]
   28fec:	ldr	w0, [sp, #36]
   28ff0:	lsr	w0, w0, #2
   28ff4:	ldr	w1, [sp, #36]
   28ff8:	orr	w0, w1, w0
   28ffc:	str	w0, [sp, #36]
   29000:	ldr	w0, [sp, #36]
   29004:	lsr	w0, w0, #3
   29008:	ldr	w1, [sp, #36]
   2900c:	orr	w0, w1, w0
   29010:	str	w0, [sp, #36]
   29014:	ldr	w0, [sp, #36]
   29018:	lsr	w0, w0, #4
   2901c:	ldr	w1, [sp, #36]
   29020:	orr	w0, w1, w0
   29024:	str	w0, [sp, #36]
   29028:	ldr	w0, [sp, #36]
   2902c:	lsr	w0, w0, #8
   29030:	ldr	w1, [sp, #36]
   29034:	orr	w0, w1, w0
   29038:	str	w0, [sp, #36]
   2903c:	ldr	w0, [sp, #36]
   29040:	lsr	w0, w0, #16
   29044:	ldr	w1, [sp, #36]
   29048:	orr	w0, w1, w0
   2904c:	str	w0, [sp, #36]
   29050:	ldr	w0, [sp, #36]
   29054:	cmn	w0, #0x1
   29058:	b.ne	2906c <lzma_mode_is_supported@@XZ_5.0+0xe3d4>  // b.any
   2905c:	ldr	x0, [sp, #16]
   29060:	mov	w1, #0x28                  	// #40
   29064:	strb	w1, [x0]
   29068:	b	2908c <lzma_mode_is_supported@@XZ_5.0+0xe3f4>
   2906c:	ldr	w0, [sp, #36]
   29070:	add	w0, w0, #0x1
   29074:	bl	2852c <lzma_mode_is_supported@@XZ_5.0+0xd894>
   29078:	and	w0, w0, #0xff
   2907c:	sub	w0, w0, #0x18
   29080:	and	w1, w0, #0xff
   29084:	ldr	x0, [sp, #16]
   29088:	strb	w1, [x0]
   2908c:	mov	w0, #0x0                   	// #0
   29090:	ldp	x29, x30, [sp], #48
   29094:	ret
   29098:	sub	sp, sp, #0x20
   2909c:	str	x0, [sp, #8]
   290a0:	ldr	x0, [sp, #8]
   290a4:	str	x0, [sp, #24]
   290a8:	ldr	x0, [sp, #24]
   290ac:	ldr	w0, [x0]
   290b0:	mov	w1, w0
   290b4:	mov	x0, x1
   290b8:	lsl	x0, x0, #1
   290bc:	add	x0, x0, x1
   290c0:	mov	x1, #0x100000              	// #1048576
   290c4:	cmp	x0, #0x100, lsl #12
   290c8:	csel	x0, x0, x1, cs  // cs = hs, nlast
   290cc:	add	sp, sp, #0x20
   290d0:	ret
   290d4:	stp	x29, x30, [sp, #-64]!
   290d8:	mov	x29, sp
   290dc:	str	x0, [sp, #56]
   290e0:	str	x1, [sp, #48]
   290e4:	str	x2, [sp, #40]
   290e8:	str	x3, [sp, #32]
   290ec:	str	x4, [sp, #24]
   290f0:	ldr	x0, [sp, #40]
   290f4:	ldr	x0, [x0]
   290f8:	ldr	x1, [sp, #32]
   290fc:	sub	x1, x1, x0
   29100:	ldr	x0, [sp, #24]
   29104:	ldr	x0, [x0]
   29108:	cmp	x1, x0
   2910c:	b.ls	29128 <lzma_mode_is_supported@@XZ_5.0+0xe490>  // b.plast
   29110:	ldr	x0, [sp, #40]
   29114:	ldr	x1, [x0]
   29118:	ldr	x0, [sp, #24]
   2911c:	ldr	x0, [x0]
   29120:	add	x0, x1, x0
   29124:	str	x0, [sp, #32]
   29128:	ldr	x0, [sp, #56]
   2912c:	ldr	x1, [x0]
   29130:	ldr	x0, [sp, #56]
   29134:	add	x2, x0, #0x8
   29138:	ldr	x0, [sp, #56]
   2913c:	ldr	x0, [x0, #24]
   29140:	mov	x5, x0
   29144:	mov	x4, x2
   29148:	mov	x3, x1
   2914c:	ldr	x2, [sp, #32]
   29150:	ldr	x1, [sp, #40]
   29154:	ldr	x0, [sp, #48]
   29158:	bl	3870 <lzma_version_string@@XZ_5.0+0x180>
   2915c:	mov	x1, x0
   29160:	ldr	x0, [sp, #24]
   29164:	ldr	x0, [x0]
   29168:	sub	x1, x0, x1
   2916c:	ldr	x0, [sp, #24]
   29170:	str	x1, [x0]
   29174:	ldr	x0, [sp, #56]
   29178:	ldr	x1, [x0, #8]
   2917c:	ldr	x0, [sp, #56]
   29180:	ldr	x0, [x0, #16]
   29184:	cmp	x1, x0
   29188:	b.ls	291a0 <lzma_mode_is_supported@@XZ_5.0+0xe508>  // b.plast
   2918c:	ldr	x0, [sp, #56]
   29190:	ldr	x1, [x0, #8]
   29194:	ldr	x0, [sp, #56]
   29198:	str	x1, [x0, #16]
   2919c:	nop
   291a0:	nop
   291a4:	ldp	x29, x30, [sp], #64
   291a8:	ret
   291ac:	sub	sp, sp, #0x10
   291b0:	str	x0, [sp, #8]
   291b4:	ldr	x0, [sp, #8]
   291b8:	mov	w1, #0x1                   	// #1
   291bc:	strb	w1, [x0, #40]
   291c0:	nop
   291c4:	add	sp, sp, #0x10
   291c8:	ret
   291cc:	stp	x29, x30, [sp, #-112]!
   291d0:	mov	x29, sp
   291d4:	str	x0, [sp, #56]
   291d8:	str	x1, [sp, #48]
   291dc:	str	x2, [sp, #40]
   291e0:	str	x3, [sp, #32]
   291e4:	str	x4, [sp, #24]
   291e8:	ldr	x0, [sp, #56]
   291ec:	str	x0, [sp, #104]
   291f0:	b	296c4 <lzma_mode_is_supported@@XZ_5.0+0xea2c>
   291f4:	ldr	x0, [sp, #104]
   291f8:	ldr	w0, [x0]
   291fc:	cmp	w0, #0x7
   29200:	b.eq	29678 <lzma_mode_is_supported@@XZ_5.0+0xe9e0>  // b.none
   29204:	cmp	w0, #0x7
   29208:	b.hi	296bc <lzma_mode_is_supported@@XZ_5.0+0xea24>  // b.pmore
   2920c:	cmp	w0, #0x6
   29210:	b.eq	295c4 <lzma_mode_is_supported@@XZ_5.0+0xe92c>  // b.none
   29214:	cmp	w0, #0x6
   29218:	b.hi	296bc <lzma_mode_is_supported@@XZ_5.0+0xea24>  // b.pmore
   2921c:	cmp	w0, #0x5
   29220:	b.eq	29548 <lzma_mode_is_supported@@XZ_5.0+0xe8b0>  // b.none
   29224:	cmp	w0, #0x5
   29228:	b.hi	296bc <lzma_mode_is_supported@@XZ_5.0+0xea24>  // b.pmore
   2922c:	cmp	w0, #0x4
   29230:	b.eq	294f8 <lzma_mode_is_supported@@XZ_5.0+0xe860>  // b.none
   29234:	cmp	w0, #0x4
   29238:	b.hi	296bc <lzma_mode_is_supported@@XZ_5.0+0xea24>  // b.pmore
   2923c:	cmp	w0, #0x3
   29240:	b.eq	294b8 <lzma_mode_is_supported@@XZ_5.0+0xe820>  // b.none
   29244:	cmp	w0, #0x3
   29248:	b.hi	296bc <lzma_mode_is_supported@@XZ_5.0+0xea24>  // b.pmore
   2924c:	cmp	w0, #0x2
   29250:	b.eq	29448 <lzma_mode_is_supported@@XZ_5.0+0xe7b0>  // b.none
   29254:	cmp	w0, #0x2
   29258:	b.hi	296bc <lzma_mode_is_supported@@XZ_5.0+0xea24>  // b.pmore
   2925c:	cmp	w0, #0x0
   29260:	b.eq	29270 <lzma_mode_is_supported@@XZ_5.0+0xe5d8>  // b.none
   29264:	cmp	w0, #0x1
   29268:	b.eq	293fc <lzma_mode_is_supported@@XZ_5.0+0xe764>  // b.none
   2926c:	b	296bc <lzma_mode_is_supported@@XZ_5.0+0xea24>
   29270:	ldr	x0, [sp, #32]
   29274:	ldr	x0, [x0]
   29278:	ldr	x1, [sp, #40]
   2927c:	add	x0, x1, x0
   29280:	ldrb	w0, [x0]
   29284:	str	w0, [sp, #76]
   29288:	ldr	x0, [sp, #32]
   2928c:	ldr	x0, [x0]
   29290:	add	x1, x0, #0x1
   29294:	ldr	x0, [sp, #32]
   29298:	str	x1, [x0]
   2929c:	ldr	w0, [sp, #76]
   292a0:	cmp	w0, #0x0
   292a4:	b.ne	292b0 <lzma_mode_is_supported@@XZ_5.0+0xe618>  // b.any
   292a8:	mov	w0, #0x1                   	// #1
   292ac:	b	296ec <lzma_mode_is_supported@@XZ_5.0+0xea54>
   292b0:	ldr	w0, [sp, #76]
   292b4:	cmp	w0, #0xdf
   292b8:	b.hi	292c8 <lzma_mode_is_supported@@XZ_5.0+0xe630>  // b.pmore
   292bc:	ldr	w0, [sp, #76]
   292c0:	cmp	w0, #0x1
   292c4:	b.ne	292e4 <lzma_mode_is_supported@@XZ_5.0+0xe64c>  // b.any
   292c8:	ldr	x0, [sp, #104]
   292cc:	mov	w1, #0x1                   	// #1
   292d0:	strb	w1, [x0, #64]
   292d4:	ldr	x0, [sp, #104]
   292d8:	mov	w1, #0x1                   	// #1
   292dc:	strb	w1, [x0, #65]
   292e0:	b	292fc <lzma_mode_is_supported@@XZ_5.0+0xe664>
   292e4:	ldr	x0, [sp, #104]
   292e8:	ldrb	w0, [x0, #65]
   292ec:	cmp	w0, #0x0
   292f0:	b.eq	292fc <lzma_mode_is_supported@@XZ_5.0+0xe664>  // b.none
   292f4:	mov	w0, #0x9                   	// #9
   292f8:	b	296ec <lzma_mode_is_supported@@XZ_5.0+0xea54>
   292fc:	ldr	w0, [sp, #76]
   29300:	cmp	w0, #0x7f
   29304:	b.ls	293a8 <lzma_mode_is_supported@@XZ_5.0+0xe710>  // b.plast
   29308:	ldr	w0, [sp, #76]
   2930c:	lsl	w0, w0, #16
   29310:	mov	w0, w0
   29314:	and	x1, x0, #0x1f0000
   29318:	ldr	x0, [sp, #104]
   2931c:	str	x1, [x0, #48]
   29320:	ldr	x0, [sp, #104]
   29324:	mov	w1, #0x1                   	// #1
   29328:	str	w1, [x0]
   2932c:	ldr	w0, [sp, #76]
   29330:	cmp	w0, #0xbf
   29334:	b.ls	29350 <lzma_mode_is_supported@@XZ_5.0+0xe6b8>  // b.plast
   29338:	ldr	x0, [sp, #104]
   2933c:	strb	wzr, [x0, #64]
   29340:	ldr	x0, [sp, #104]
   29344:	mov	w1, #0x5                   	// #5
   29348:	str	w1, [x0, #4]
   2934c:	b	293d4 <lzma_mode_is_supported@@XZ_5.0+0xe73c>
   29350:	ldr	x0, [sp, #104]
   29354:	ldrb	w0, [x0, #64]
   29358:	cmp	w0, #0x0
   2935c:	b.eq	29368 <lzma_mode_is_supported@@XZ_5.0+0xe6d0>  // b.none
   29360:	mov	w0, #0x9                   	// #9
   29364:	b	296ec <lzma_mode_is_supported@@XZ_5.0+0xea54>
   29368:	ldr	x0, [sp, #104]
   2936c:	mov	w1, #0x6                   	// #6
   29370:	str	w1, [x0, #4]
   29374:	ldr	w0, [sp, #76]
   29378:	cmp	w0, #0x9f
   2937c:	b.ls	293d4 <lzma_mode_is_supported@@XZ_5.0+0xe73c>  // b.plast
   29380:	ldr	x0, [sp, #104]
   29384:	ldr	x2, [x0, #24]
   29388:	ldr	x0, [sp, #104]
   2938c:	ldr	x3, [x0, #8]
   29390:	ldr	x0, [sp, #104]
   29394:	add	x0, x0, #0x48
   29398:	mov	x1, x0
   2939c:	mov	x0, x3
   293a0:	blr	x2
   293a4:	b	293d4 <lzma_mode_is_supported@@XZ_5.0+0xe73c>
   293a8:	ldr	w0, [sp, #76]
   293ac:	cmp	w0, #0x2
   293b0:	b.ls	293bc <lzma_mode_is_supported@@XZ_5.0+0xe724>  // b.plast
   293b4:	mov	w0, #0x9                   	// #9
   293b8:	b	296ec <lzma_mode_is_supported@@XZ_5.0+0xea54>
   293bc:	ldr	x0, [sp, #104]
   293c0:	mov	w1, #0x3                   	// #3
   293c4:	str	w1, [x0]
   293c8:	ldr	x0, [sp, #104]
   293cc:	mov	w1, #0x7                   	// #7
   293d0:	str	w1, [x0, #4]
   293d4:	ldr	x0, [sp, #104]
   293d8:	ldrb	w0, [x0, #65]
   293dc:	cmp	w0, #0x0
   293e0:	b.eq	296c4 <lzma_mode_is_supported@@XZ_5.0+0xea2c>  // b.none
   293e4:	ldr	x0, [sp, #104]
   293e8:	strb	wzr, [x0, #65]
   293ec:	ldr	x0, [sp, #48]
   293f0:	bl	291ac <lzma_mode_is_supported@@XZ_5.0+0xe514>
   293f4:	mov	w0, #0x0                   	// #0
   293f8:	b	296ec <lzma_mode_is_supported@@XZ_5.0+0xea54>
   293fc:	ldr	x0, [sp, #32]
   29400:	ldr	x0, [x0]
   29404:	add	x2, x0, #0x1
   29408:	ldr	x1, [sp, #32]
   2940c:	str	x2, [x1]
   29410:	ldr	x1, [sp, #40]
   29414:	add	x0, x1, x0
   29418:	ldrb	w0, [x0]
   2941c:	lsl	w2, w0, #8
   29420:	ldr	x0, [sp, #104]
   29424:	ldr	x1, [x0, #48]
   29428:	mov	w0, w2
   2942c:	add	x1, x1, x0
   29430:	ldr	x0, [sp, #104]
   29434:	str	x1, [x0, #48]
   29438:	ldr	x0, [sp, #104]
   2943c:	mov	w1, #0x2                   	// #2
   29440:	str	w1, [x0]
   29444:	b	296c4 <lzma_mode_is_supported@@XZ_5.0+0xea2c>
   29448:	ldr	x0, [sp, #32]
   2944c:	ldr	x0, [x0]
   29450:	add	x2, x0, #0x1
   29454:	ldr	x1, [sp, #32]
   29458:	str	x2, [x1]
   2945c:	ldr	x1, [sp, #40]
   29460:	add	x0, x1, x0
   29464:	ldrb	w0, [x0]
   29468:	add	w2, w0, #0x1
   2946c:	ldr	x0, [sp, #104]
   29470:	ldr	x1, [x0, #48]
   29474:	sxtw	x0, w2
   29478:	add	x1, x1, x0
   2947c:	ldr	x0, [sp, #104]
   29480:	str	x1, [x0, #48]
   29484:	ldr	x0, [sp, #104]
   29488:	mov	w1, #0x3                   	// #3
   2948c:	str	w1, [x0]
   29490:	ldr	x0, [sp, #104]
   29494:	ldr	x2, [x0, #32]
   29498:	ldr	x0, [sp, #104]
   2949c:	ldr	x3, [x0, #8]
   294a0:	ldr	x0, [sp, #104]
   294a4:	ldr	x0, [x0, #48]
   294a8:	mov	x1, x0
   294ac:	mov	x0, x3
   294b0:	blr	x2
   294b4:	b	296c4 <lzma_mode_is_supported@@XZ_5.0+0xea2c>
   294b8:	ldr	x0, [sp, #32]
   294bc:	ldr	x0, [x0]
   294c0:	add	x2, x0, #0x1
   294c4:	ldr	x1, [sp, #32]
   294c8:	str	x2, [x1]
   294cc:	ldr	x1, [sp, #40]
   294d0:	add	x0, x1, x0
   294d4:	ldrb	w0, [x0]
   294d8:	lsl	w0, w0, #8
   294dc:	mov	w1, w0
   294e0:	ldr	x0, [sp, #104]
   294e4:	str	x1, [x0, #56]
   294e8:	ldr	x0, [sp, #104]
   294ec:	mov	w1, #0x4                   	// #4
   294f0:	str	w1, [x0]
   294f4:	b	296c4 <lzma_mode_is_supported@@XZ_5.0+0xea2c>
   294f8:	ldr	x0, [sp, #32]
   294fc:	ldr	x0, [x0]
   29500:	add	x2, x0, #0x1
   29504:	ldr	x1, [sp, #32]
   29508:	str	x2, [x1]
   2950c:	ldr	x1, [sp, #40]
   29510:	add	x0, x1, x0
   29514:	ldrb	w0, [x0]
   29518:	add	w2, w0, #0x1
   2951c:	ldr	x0, [sp, #104]
   29520:	ldr	x1, [x0, #56]
   29524:	sxtw	x0, w2
   29528:	add	x1, x1, x0
   2952c:	ldr	x0, [sp, #104]
   29530:	str	x1, [x0, #56]
   29534:	ldr	x0, [sp, #104]
   29538:	ldr	w1, [x0, #4]
   2953c:	ldr	x0, [sp, #104]
   29540:	str	w1, [x0]
   29544:	b	296c4 <lzma_mode_is_supported@@XZ_5.0+0xea2c>
   29548:	ldr	x0, [sp, #104]
   2954c:	add	x3, x0, #0x48
   29550:	ldr	x0, [sp, #32]
   29554:	ldr	x0, [x0]
   29558:	add	x2, x0, #0x1
   2955c:	ldr	x1, [sp, #32]
   29560:	str	x2, [x1]
   29564:	ldr	x1, [sp, #40]
   29568:	add	x0, x1, x0
   2956c:	ldrb	w0, [x0]
   29570:	mov	w1, w0
   29574:	mov	x0, x3
   29578:	bl	28204 <lzma_mode_is_supported@@XZ_5.0+0xd56c>
   2957c:	and	w0, w0, #0xff
   29580:	cmp	w0, #0x0
   29584:	b.eq	29590 <lzma_mode_is_supported@@XZ_5.0+0xe8f8>  // b.none
   29588:	mov	w0, #0x9                   	// #9
   2958c:	b	296ec <lzma_mode_is_supported@@XZ_5.0+0xea54>
   29590:	ldr	x0, [sp, #104]
   29594:	ldr	x2, [x0, #24]
   29598:	ldr	x0, [sp, #104]
   2959c:	ldr	x3, [x0, #8]
   295a0:	ldr	x0, [sp, #104]
   295a4:	add	x0, x0, #0x48
   295a8:	mov	x1, x0
   295ac:	mov	x0, x3
   295b0:	blr	x2
   295b4:	ldr	x0, [sp, #104]
   295b8:	mov	w1, #0x6                   	// #6
   295bc:	str	w1, [x0]
   295c0:	b	296c4 <lzma_mode_is_supported@@XZ_5.0+0xea2c>
   295c4:	ldr	x0, [sp, #32]
   295c8:	ldr	x0, [x0]
   295cc:	str	x0, [sp, #96]
   295d0:	ldr	x0, [sp, #104]
   295d4:	ldr	x5, [x0, #16]
   295d8:	ldr	x0, [sp, #104]
   295dc:	ldr	x0, [x0, #8]
   295e0:	ldr	x4, [sp, #24]
   295e4:	ldr	x3, [sp, #32]
   295e8:	ldr	x2, [sp, #40]
   295ec:	ldr	x1, [sp, #48]
   295f0:	blr	x5
   295f4:	str	w0, [sp, #92]
   295f8:	ldr	x0, [sp, #32]
   295fc:	ldr	x1, [x0]
   29600:	ldr	x0, [sp, #96]
   29604:	sub	x0, x1, x0
   29608:	str	x0, [sp, #80]
   2960c:	ldr	x0, [sp, #104]
   29610:	ldr	x0, [x0, #56]
   29614:	ldr	x1, [sp, #80]
   29618:	cmp	x1, x0
   2961c:	b.ls	29628 <lzma_mode_is_supported@@XZ_5.0+0xe990>  // b.plast
   29620:	mov	w0, #0x9                   	// #9
   29624:	b	296ec <lzma_mode_is_supported@@XZ_5.0+0xea54>
   29628:	ldr	x0, [sp, #104]
   2962c:	ldr	x1, [x0, #56]
   29630:	ldr	x0, [sp, #80]
   29634:	sub	x1, x1, x0
   29638:	ldr	x0, [sp, #104]
   2963c:	str	x1, [x0, #56]
   29640:	ldr	w0, [sp, #92]
   29644:	cmp	w0, #0x1
   29648:	b.eq	29654 <lzma_mode_is_supported@@XZ_5.0+0xe9bc>  // b.none
   2964c:	ldr	w0, [sp, #92]
   29650:	b	296ec <lzma_mode_is_supported@@XZ_5.0+0xea54>
   29654:	ldr	x0, [sp, #104]
   29658:	ldr	x0, [x0, #56]
   2965c:	cmp	x0, #0x0
   29660:	b.eq	2966c <lzma_mode_is_supported@@XZ_5.0+0xe9d4>  // b.none
   29664:	mov	w0, #0x9                   	// #9
   29668:	b	296ec <lzma_mode_is_supported@@XZ_5.0+0xea54>
   2966c:	ldr	x0, [sp, #104]
   29670:	str	wzr, [x0]
   29674:	b	296c4 <lzma_mode_is_supported@@XZ_5.0+0xea2c>
   29678:	ldr	x0, [sp, #104]
   2967c:	add	x0, x0, #0x38
   29680:	mov	x4, x0
   29684:	ldr	x3, [sp, #24]
   29688:	ldr	x2, [sp, #32]
   2968c:	ldr	x1, [sp, #40]
   29690:	ldr	x0, [sp, #48]
   29694:	bl	290d4 <lzma_mode_is_supported@@XZ_5.0+0xe43c>
   29698:	ldr	x0, [sp, #104]
   2969c:	ldr	x0, [x0, #56]
   296a0:	cmp	x0, #0x0
   296a4:	b.eq	296b0 <lzma_mode_is_supported@@XZ_5.0+0xea18>  // b.none
   296a8:	mov	w0, #0x0                   	// #0
   296ac:	b	296ec <lzma_mode_is_supported@@XZ_5.0+0xea54>
   296b0:	ldr	x0, [sp, #104]
   296b4:	str	wzr, [x0]
   296b8:	b	296c4 <lzma_mode_is_supported@@XZ_5.0+0xea2c>
   296bc:	mov	w0, #0xb                   	// #11
   296c0:	b	296ec <lzma_mode_is_supported@@XZ_5.0+0xea54>
   296c4:	ldr	x0, [sp, #32]
   296c8:	ldr	x0, [x0]
   296cc:	ldr	x1, [sp, #24]
   296d0:	cmp	x1, x0
   296d4:	b.hi	291f4 <lzma_mode_is_supported@@XZ_5.0+0xe55c>  // b.pmore
   296d8:	ldr	x0, [sp, #104]
   296dc:	ldr	w0, [x0]
   296e0:	cmp	w0, #0x6
   296e4:	b.eq	291f4 <lzma_mode_is_supported@@XZ_5.0+0xe55c>  // b.none
   296e8:	mov	w0, #0x0                   	// #0
   296ec:	ldp	x29, x30, [sp], #112
   296f0:	ret
   296f4:	stp	x29, x30, [sp, #-48]!
   296f8:	mov	x29, sp
   296fc:	str	x0, [sp, #24]
   29700:	str	x1, [sp, #16]
   29704:	ldr	x0, [sp, #24]
   29708:	str	x0, [sp, #40]
   2970c:	ldr	x0, [sp, #40]
   29710:	ldr	x0, [x0, #8]
   29714:	ldr	x1, [sp, #16]
   29718:	bl	3814 <lzma_version_string@@XZ_5.0+0x124>
   2971c:	ldr	x1, [sp, #16]
   29720:	ldr	x0, [sp, #40]
   29724:	bl	3814 <lzma_version_string@@XZ_5.0+0x124>
   29728:	nop
   2972c:	ldp	x29, x30, [sp], #48
   29730:	ret
   29734:	stp	x29, x30, [sp, #-112]!
   29738:	mov	x29, sp
   2973c:	str	x0, [sp, #40]
   29740:	str	x1, [sp, #32]
   29744:	str	x2, [sp, #24]
   29748:	str	x3, [sp, #16]
   2974c:	ldr	x0, [sp, #40]
   29750:	ldr	x0, [x0]
   29754:	str	x0, [sp, #104]
   29758:	ldr	x0, [sp, #104]
   2975c:	cmp	x0, #0x0
   29760:	b.ne	297dc <lzma_mode_is_supported@@XZ_5.0+0xeb44>  // b.any
   29764:	ldr	x1, [sp, #32]
   29768:	mov	x0, #0xb8                  	// #184
   2976c:	bl	36fc <lzma_version_string@@XZ_5.0+0xc>
   29770:	str	x0, [sp, #104]
   29774:	ldr	x0, [sp, #104]
   29778:	cmp	x0, #0x0
   2977c:	b.ne	29788 <lzma_mode_is_supported@@XZ_5.0+0xeaf0>  // b.any
   29780:	mov	w0, #0x5                   	// #5
   29784:	b	2984c <lzma_mode_is_supported@@XZ_5.0+0xebb4>
   29788:	ldr	x0, [sp, #40]
   2978c:	ldr	x1, [sp, #104]
   29790:	str	x1, [x0]
   29794:	ldr	x0, [sp, #40]
   29798:	adrp	x1, 29000 <lzma_mode_is_supported@@XZ_5.0+0xe368>
   2979c:	add	x1, x1, #0x1cc
   297a0:	str	x1, [x0, #8]
   297a4:	ldr	x0, [sp, #40]
   297a8:	adrp	x1, 29000 <lzma_mode_is_supported@@XZ_5.0+0xe368>
   297ac:	add	x1, x1, #0x6f4
   297b0:	str	x1, [x0, #32]
   297b4:	ldr	x0, [sp, #104]
   297b8:	str	xzr, [x0, #8]
   297bc:	ldr	x0, [sp, #104]
   297c0:	str	xzr, [x0, #16]
   297c4:	ldr	x0, [sp, #104]
   297c8:	str	xzr, [x0, #24]
   297cc:	ldr	x0, [sp, #104]
   297d0:	str	xzr, [x0, #32]
   297d4:	ldr	x0, [sp, #104]
   297d8:	str	xzr, [x0, #40]
   297dc:	ldr	x0, [sp, #24]
   297e0:	str	x0, [sp, #96]
   297e4:	ldr	x0, [sp, #104]
   297e8:	str	wzr, [x0]
   297ec:	ldr	x0, [sp, #104]
   297f0:	mov	w1, #0x1                   	// #1
   297f4:	strb	w1, [x0, #64]
   297f8:	ldr	x0, [sp, #96]
   297fc:	ldr	x0, [x0, #8]
   29800:	cmp	x0, #0x0
   29804:	b.eq	29818 <lzma_mode_is_supported@@XZ_5.0+0xeb80>  // b.none
   29808:	ldr	x0, [sp, #96]
   2980c:	ldr	w0, [x0, #16]
   29810:	cmp	w0, #0x0
   29814:	b.ne	29820 <lzma_mode_is_supported@@XZ_5.0+0xeb88>  // b.any
   29818:	mov	w0, #0x1                   	// #1
   2981c:	b	29824 <lzma_mode_is_supported@@XZ_5.0+0xeb8c>
   29820:	mov	w0, #0x0                   	// #0
   29824:	and	w0, w0, #0x1
   29828:	and	w1, w0, #0xff
   2982c:	ldr	x0, [sp, #104]
   29830:	strb	w1, [x0, #65]
   29834:	ldr	x0, [sp, #104]
   29838:	add	x0, x0, #0x8
   2983c:	ldr	x3, [sp, #16]
   29840:	ldr	x2, [sp, #96]
   29844:	ldr	x1, [sp, #32]
   29848:	bl	28068 <lzma_mode_is_supported@@XZ_5.0+0xd3d0>
   2984c:	ldp	x29, x30, [sp], #112
   29850:	ret
   29854:	stp	x29, x30, [sp, #-48]!
   29858:	mov	x29, sp
   2985c:	str	x0, [sp, #40]
   29860:	str	x1, [sp, #32]
   29864:	str	x2, [sp, #24]
   29868:	adrp	x0, 29000 <lzma_mode_is_supported@@XZ_5.0+0xe368>
   2986c:	add	x3, x0, #0x734
   29870:	ldr	x2, [sp, #24]
   29874:	ldr	x1, [sp, #32]
   29878:	ldr	x0, [sp, #40]
   2987c:	bl	182e0 <lzma_mf_is_supported@@XZ_5.0+0x2a58>
   29880:	ldp	x29, x30, [sp], #48
   29884:	ret
   29888:	stp	x29, x30, [sp, #-32]!
   2988c:	mov	x29, sp
   29890:	str	x0, [sp, #24]
   29894:	ldr	x0, [sp, #24]
   29898:	bl	282f0 <lzma_mode_is_supported@@XZ_5.0+0xd658>
   2989c:	add	x0, x0, #0xb8
   298a0:	ldp	x29, x30, [sp], #32
   298a4:	ret
   298a8:	stp	x29, x30, [sp, #-64]!
   298ac:	mov	x29, sp
   298b0:	str	x0, [sp, #40]
   298b4:	str	x1, [sp, #32]
   298b8:	str	x2, [sp, #24]
   298bc:	str	x3, [sp, #16]
   298c0:	ldr	x0, [sp, #16]
   298c4:	cmp	x0, #0x1
   298c8:	b.eq	298d4 <lzma_mode_is_supported@@XZ_5.0+0xec3c>  // b.none
   298cc:	mov	w0, #0x8                   	// #8
   298d0:	b	299b0 <lzma_mode_is_supported@@XZ_5.0+0xed18>
   298d4:	ldr	x0, [sp, #24]
   298d8:	ldrb	w0, [x0]
   298dc:	and	w0, w0, #0xc0
   298e0:	cmp	w0, #0x0
   298e4:	b.eq	298f0 <lzma_mode_is_supported@@XZ_5.0+0xec58>  // b.none
   298e8:	mov	w0, #0x8                   	// #8
   298ec:	b	299b0 <lzma_mode_is_supported@@XZ_5.0+0xed18>
   298f0:	ldr	x0, [sp, #24]
   298f4:	ldrb	w0, [x0]
   298f8:	cmp	w0, #0x28
   298fc:	b.ls	29908 <lzma_mode_is_supported@@XZ_5.0+0xec70>  // b.plast
   29900:	mov	w0, #0x8                   	// #8
   29904:	b	299b0 <lzma_mode_is_supported@@XZ_5.0+0xed18>
   29908:	ldr	x1, [sp, #32]
   2990c:	mov	x0, #0x70                  	// #112
   29910:	bl	36fc <lzma_version_string@@XZ_5.0+0xc>
   29914:	str	x0, [sp, #56]
   29918:	ldr	x0, [sp, #56]
   2991c:	cmp	x0, #0x0
   29920:	b.ne	2992c <lzma_mode_is_supported@@XZ_5.0+0xec94>  // b.any
   29924:	mov	w0, #0x5                   	// #5
   29928:	b	299b0 <lzma_mode_is_supported@@XZ_5.0+0xed18>
   2992c:	ldr	x0, [sp, #24]
   29930:	ldrb	w0, [x0]
   29934:	cmp	w0, #0x28
   29938:	b.ne	2994c <lzma_mode_is_supported@@XZ_5.0+0xecb4>  // b.any
   2993c:	ldr	x0, [sp, #56]
   29940:	mov	w1, #0xffffffff            	// #-1
   29944:	str	w1, [x0]
   29948:	b	29990 <lzma_mode_is_supported@@XZ_5.0+0xecf8>
   2994c:	ldr	x0, [sp, #24]
   29950:	ldrb	w0, [x0]
   29954:	and	w0, w0, #0x1
   29958:	orr	w0, w0, #0x2
   2995c:	mov	w1, w0
   29960:	ldr	x0, [sp, #56]
   29964:	str	w1, [x0]
   29968:	ldr	x0, [sp, #56]
   2996c:	ldr	w1, [x0]
   29970:	ldr	x0, [sp, #24]
   29974:	ldrb	w0, [x0]
   29978:	lsr	w0, w0, #1
   2997c:	and	w0, w0, #0xff
   29980:	add	w0, w0, #0xb
   29984:	lsl	w1, w1, w0
   29988:	ldr	x0, [sp, #56]
   2998c:	str	w1, [x0]
   29990:	ldr	x0, [sp, #56]
   29994:	str	xzr, [x0, #8]
   29998:	ldr	x0, [sp, #56]
   2999c:	str	wzr, [x0, #16]
   299a0:	ldr	x0, [sp, #40]
   299a4:	ldr	x1, [sp, #56]
   299a8:	str	x1, [x0]
   299ac:	mov	w0, #0x0                   	// #0
   299b0:	ldp	x29, x30, [sp], #64
   299b4:	ret
   299b8:	stp	x29, x30, [sp, #-48]!
   299bc:	mov	x29, sp
   299c0:	str	x0, [sp, #24]
   299c4:	str	x1, [sp, #16]
   299c8:	ldr	x0, [sp, #24]
   299cc:	str	x0, [sp, #40]
   299d0:	ldr	x0, [sp, #40]
   299d4:	ldr	x1, [sp, #16]
   299d8:	bl	3a48 <lzma_version_string@@XZ_5.0+0x358>
   299dc:	ldr	x1, [sp, #16]
   299e0:	ldr	x0, [sp, #40]
   299e4:	bl	3814 <lzma_version_string@@XZ_5.0+0x124>
   299e8:	nop
   299ec:	ldp	x29, x30, [sp], #48
   299f0:	ret
   299f4:	stp	x29, x30, [sp, #-144]!
   299f8:	mov	x29, sp
   299fc:	str	x0, [sp, #40]
   29a00:	str	x1, [sp, #32]
   29a04:	str	x2, [sp, #24]
   29a08:	ldr	x0, [sp, #40]
   29a0c:	ldr	x0, [x0]
   29a10:	str	x0, [sp, #136]
   29a14:	ldr	x0, [sp, #136]
   29a18:	cmp	x0, #0x0
   29a1c:	b.ne	29aac <lzma_mode_is_supported@@XZ_5.0+0xee14>  // b.any
   29a20:	ldr	x1, [sp, #32]
   29a24:	mov	x0, #0x158                 	// #344
   29a28:	bl	36fc <lzma_version_string@@XZ_5.0+0xc>
   29a2c:	str	x0, [sp, #136]
   29a30:	ldr	x0, [sp, #136]
   29a34:	cmp	x0, #0x0
   29a38:	b.ne	29a44 <lzma_mode_is_supported@@XZ_5.0+0xedac>  // b.any
   29a3c:	mov	w0, #0x5                   	// #5
   29a40:	b	29b20 <lzma_mode_is_supported@@XZ_5.0+0xee88>
   29a44:	ldr	x0, [sp, #40]
   29a48:	ldr	x1, [sp, #136]
   29a4c:	str	x1, [x0]
   29a50:	ldr	x0, [sp, #40]
   29a54:	adrp	x1, 29000 <lzma_mode_is_supported@@XZ_5.0+0xe368>
   29a58:	add	x1, x1, #0x9b8
   29a5c:	str	x1, [x0, #32]
   29a60:	ldr	x0, [sp, #136]
   29a64:	str	xzr, [x0]
   29a68:	ldr	x0, [sp, #136]
   29a6c:	mov	x1, #0xffffffffffffffff    	// #-1
   29a70:	str	x1, [x0, #8]
   29a74:	ldr	x0, [sp, #136]
   29a78:	str	xzr, [x0, #16]
   29a7c:	ldr	x0, [sp, #136]
   29a80:	str	xzr, [x0, #24]
   29a84:	ldr	x0, [sp, #136]
   29a88:	str	xzr, [x0, #32]
   29a8c:	ldr	x0, [sp, #136]
   29a90:	str	xzr, [x0, #40]
   29a94:	ldr	x0, [sp, #136]
   29a98:	str	xzr, [x0, #48]
   29a9c:	ldr	x0, [sp, #136]
   29aa0:	str	xzr, [x0, #56]
   29aa4:	ldr	x0, [sp, #136]
   29aa8:	str	xzr, [x0, #64]
   29aac:	ldr	x0, [sp, #24]
   29ab0:	ldr	x0, [x0, #16]
   29ab4:	bl	29b28 <lzma_mode_is_supported@@XZ_5.0+0xee90>
   29ab8:	cmn	x0, #0x1
   29abc:	b.ne	29ac8 <lzma_mode_is_supported@@XZ_5.0+0xee30>  // b.any
   29ac0:	mov	w0, #0x8                   	// #8
   29ac4:	b	29b20 <lzma_mode_is_supported@@XZ_5.0+0xee88>
   29ac8:	ldr	x0, [sp, #24]
   29acc:	ldr	x0, [x0, #16]
   29ad0:	str	x0, [sp, #128]
   29ad4:	ldr	x0, [sp, #128]
   29ad8:	ldr	w0, [x0, #4]
   29adc:	mov	w1, w0
   29ae0:	ldr	x0, [sp, #136]
   29ae4:	str	x1, [x0, #72]
   29ae8:	ldr	x0, [sp, #136]
   29aec:	strb	wzr, [x0, #80]
   29af0:	ldr	x0, [sp, #136]
   29af4:	add	x0, x0, #0x51
   29af8:	mov	x2, #0x100                 	// #256
   29afc:	mov	w1, #0x0                   	// #0
   29b00:	bl	3230 <memset@plt>
   29b04:	ldr	x3, [sp, #136]
   29b08:	ldr	x0, [sp, #24]
   29b0c:	add	x0, x0, #0x18
   29b10:	mov	x2, x0
   29b14:	ldr	x1, [sp, #32]
   29b18:	mov	x0, x3
   29b1c:	bl	393c <lzma_version_string@@XZ_5.0+0x24c>
   29b20:	ldp	x29, x30, [sp], #144
   29b24:	ret
   29b28:	sub	sp, sp, #0x20
   29b2c:	str	x0, [sp, #8]
   29b30:	ldr	x0, [sp, #8]
   29b34:	str	x0, [sp, #24]
   29b38:	ldr	x0, [sp, #24]
   29b3c:	cmp	x0, #0x0
   29b40:	b.eq	29b74 <lzma_mode_is_supported@@XZ_5.0+0xeedc>  // b.none
   29b44:	ldr	x0, [sp, #24]
   29b48:	ldr	w0, [x0]
   29b4c:	cmp	w0, #0x0
   29b50:	b.ne	29b74 <lzma_mode_is_supported@@XZ_5.0+0xeedc>  // b.any
   29b54:	ldr	x0, [sp, #24]
   29b58:	ldr	w0, [x0, #4]
   29b5c:	cmp	w0, #0x0
   29b60:	b.eq	29b74 <lzma_mode_is_supported@@XZ_5.0+0xeedc>  // b.none
   29b64:	ldr	x0, [sp, #24]
   29b68:	ldr	w0, [x0, #4]
   29b6c:	cmp	w0, #0x100
   29b70:	b.ls	29b7c <lzma_mode_is_supported@@XZ_5.0+0xeee4>  // b.plast
   29b74:	mov	x0, #0xffffffffffffffff    	// #-1
   29b78:	b	29b80 <lzma_mode_is_supported@@XZ_5.0+0xeee8>
   29b7c:	mov	x0, #0x158                 	// #344
   29b80:	add	sp, sp, #0x20
   29b84:	ret
   29b88:	sub	sp, sp, #0x40
   29b8c:	str	x0, [sp, #24]
   29b90:	str	x1, [sp, #16]
   29b94:	str	x2, [sp, #8]
   29b98:	str	x3, [sp]
   29b9c:	ldr	x0, [sp, #24]
   29ba0:	ldr	x0, [x0, #72]
   29ba4:	str	x0, [sp, #48]
   29ba8:	str	xzr, [sp, #56]
   29bac:	b	29c4c <lzma_mode_is_supported@@XZ_5.0+0xefb4>
   29bb0:	ldr	x0, [sp, #24]
   29bb4:	ldrb	w0, [x0, #80]
   29bb8:	and	x1, x0, #0xff
   29bbc:	ldr	x0, [sp, #48]
   29bc0:	add	x0, x1, x0
   29bc4:	and	x0, x0, #0xff
   29bc8:	ldr	x1, [sp, #24]
   29bcc:	add	x0, x1, x0
   29bd0:	ldrb	w0, [x0, #81]
   29bd4:	strb	w0, [sp, #47]
   29bd8:	ldr	x1, [sp, #16]
   29bdc:	ldr	x0, [sp, #56]
   29be0:	add	x1, x1, x0
   29be4:	ldr	x0, [sp, #24]
   29be8:	ldrb	w0, [x0, #80]
   29bec:	sub	w2, w0, #0x1
   29bf0:	and	w3, w2, #0xff
   29bf4:	ldr	x2, [sp, #24]
   29bf8:	strb	w3, [x2, #80]
   29bfc:	ldrb	w2, [x1]
   29c00:	ldr	x1, [sp, #24]
   29c04:	sxtw	x0, w0
   29c08:	add	x0, x1, x0
   29c0c:	mov	w1, w2
   29c10:	strb	w1, [x0, #81]
   29c14:	ldr	x1, [sp, #16]
   29c18:	ldr	x0, [sp, #56]
   29c1c:	add	x0, x1, x0
   29c20:	ldrb	w2, [x0]
   29c24:	ldr	x1, [sp, #8]
   29c28:	ldr	x0, [sp, #56]
   29c2c:	add	x0, x1, x0
   29c30:	ldrb	w1, [sp, #47]
   29c34:	sub	w1, w2, w1
   29c38:	and	w1, w1, #0xff
   29c3c:	strb	w1, [x0]
   29c40:	ldr	x0, [sp, #56]
   29c44:	add	x0, x0, #0x1
   29c48:	str	x0, [sp, #56]
   29c4c:	ldr	x1, [sp, #56]
   29c50:	ldr	x0, [sp]
   29c54:	cmp	x1, x0
   29c58:	b.cc	29bb0 <lzma_mode_is_supported@@XZ_5.0+0xef18>  // b.lo, b.ul, b.last
   29c5c:	nop
   29c60:	nop
   29c64:	add	sp, sp, #0x40
   29c68:	ret
   29c6c:	sub	sp, sp, #0x40
   29c70:	str	x0, [sp, #24]
   29c74:	str	x1, [sp, #16]
   29c78:	str	x2, [sp, #8]
   29c7c:	ldr	x0, [sp, #24]
   29c80:	ldr	x0, [x0, #72]
   29c84:	str	x0, [sp, #48]
   29c88:	str	xzr, [sp, #56]
   29c8c:	b	29d2c <lzma_mode_is_supported@@XZ_5.0+0xf094>
   29c90:	ldr	x0, [sp, #24]
   29c94:	ldrb	w0, [x0, #80]
   29c98:	and	x1, x0, #0xff
   29c9c:	ldr	x0, [sp, #48]
   29ca0:	add	x0, x1, x0
   29ca4:	and	x0, x0, #0xff
   29ca8:	ldr	x1, [sp, #24]
   29cac:	add	x0, x1, x0
   29cb0:	ldrb	w0, [x0, #81]
   29cb4:	strb	w0, [sp, #47]
   29cb8:	ldr	x1, [sp, #16]
   29cbc:	ldr	x0, [sp, #56]
   29cc0:	add	x1, x1, x0
   29cc4:	ldr	x0, [sp, #24]
   29cc8:	ldrb	w0, [x0, #80]
   29ccc:	sub	w2, w0, #0x1
   29cd0:	and	w3, w2, #0xff
   29cd4:	ldr	x2, [sp, #24]
   29cd8:	strb	w3, [x2, #80]
   29cdc:	ldrb	w2, [x1]
   29ce0:	ldr	x1, [sp, #24]
   29ce4:	sxtw	x0, w0
   29ce8:	add	x0, x1, x0
   29cec:	mov	w1, w2
   29cf0:	strb	w1, [x0, #81]
   29cf4:	ldr	x1, [sp, #16]
   29cf8:	ldr	x0, [sp, #56]
   29cfc:	add	x0, x1, x0
   29d00:	ldrb	w2, [x0]
   29d04:	ldr	x1, [sp, #16]
   29d08:	ldr	x0, [sp, #56]
   29d0c:	add	x0, x1, x0
   29d10:	ldrb	w1, [sp, #47]
   29d14:	sub	w1, w2, w1
   29d18:	and	w1, w1, #0xff
   29d1c:	strb	w1, [x0]
   29d20:	ldr	x0, [sp, #56]
   29d24:	add	x0, x0, #0x1
   29d28:	str	x0, [sp, #56]
   29d2c:	ldr	x1, [sp, #56]
   29d30:	ldr	x0, [sp, #8]
   29d34:	cmp	x1, x0
   29d38:	b.cc	29c90 <lzma_mode_is_supported@@XZ_5.0+0xeff8>  // b.lo, b.ul, b.last
   29d3c:	nop
   29d40:	nop
   29d44:	add	sp, sp, #0x40
   29d48:	ret
   29d4c:	sub	sp, sp, #0x90
   29d50:	stp	x29, x30, [sp, #16]
   29d54:	add	x29, sp, #0x10
   29d58:	str	x0, [sp, #88]
   29d5c:	str	x1, [sp, #80]
   29d60:	str	x2, [sp, #72]
   29d64:	str	x3, [sp, #64]
   29d68:	str	x4, [sp, #56]
   29d6c:	str	x5, [sp, #48]
   29d70:	str	x6, [sp, #40]
   29d74:	str	x7, [sp, #32]
   29d78:	ldr	x0, [sp, #88]
   29d7c:	str	x0, [sp, #128]
   29d80:	ldr	x0, [sp, #128]
   29d84:	ldr	x0, [x0, #24]
   29d88:	cmp	x0, #0x0
   29d8c:	b.ne	29e68 <lzma_mode_is_supported@@XZ_5.0+0xf1d0>  // b.any
   29d90:	ldr	x0, [sp, #64]
   29d94:	ldr	x0, [x0]
   29d98:	ldr	x1, [sp, #56]
   29d9c:	sub	x0, x1, x0
   29da0:	str	x0, [sp, #112]
   29da4:	ldr	x0, [sp, #40]
   29da8:	ldr	x0, [x0]
   29dac:	ldr	x1, [sp, #32]
   29db0:	sub	x0, x1, x0
   29db4:	str	x0, [sp, #104]
   29db8:	ldr	x0, [sp, #112]
   29dbc:	ldr	x2, [sp, #104]
   29dc0:	ldr	x1, [sp, #104]
   29dc4:	cmp	x2, x0
   29dc8:	csel	x0, x1, x0, ls  // ls = plast
   29dcc:	str	x0, [sp, #96]
   29dd0:	ldr	x0, [sp, #64]
   29dd4:	ldr	x0, [x0]
   29dd8:	ldr	x1, [sp, #72]
   29ddc:	add	x4, x1, x0
   29de0:	ldr	x0, [sp, #40]
   29de4:	ldr	x0, [x0]
   29de8:	ldr	x1, [sp, #48]
   29dec:	add	x0, x1, x0
   29df0:	ldr	x3, [sp, #96]
   29df4:	mov	x2, x0
   29df8:	mov	x1, x4
   29dfc:	ldr	x0, [sp, #128]
   29e00:	bl	29b88 <lzma_mode_is_supported@@XZ_5.0+0xeef0>
   29e04:	ldr	x0, [sp, #64]
   29e08:	ldr	x1, [x0]
   29e0c:	ldr	x0, [sp, #96]
   29e10:	add	x1, x1, x0
   29e14:	ldr	x0, [sp, #64]
   29e18:	str	x1, [x0]
   29e1c:	ldr	x0, [sp, #40]
   29e20:	ldr	x1, [x0]
   29e24:	ldr	x0, [sp, #96]
   29e28:	add	x1, x1, x0
   29e2c:	ldr	x0, [sp, #40]
   29e30:	str	x1, [x0]
   29e34:	ldr	w0, [sp, #144]
   29e38:	cmp	w0, #0x0
   29e3c:	b.eq	29e5c <lzma_mode_is_supported@@XZ_5.0+0xf1c4>  // b.none
   29e40:	ldr	x0, [sp, #64]
   29e44:	ldr	x0, [x0]
   29e48:	ldr	x1, [sp, #56]
   29e4c:	cmp	x1, x0
   29e50:	b.ne	29e5c <lzma_mode_is_supported@@XZ_5.0+0xf1c4>  // b.any
   29e54:	mov	w0, #0x1                   	// #1
   29e58:	b	29e60 <lzma_mode_is_supported@@XZ_5.0+0xf1c8>
   29e5c:	mov	w0, #0x0                   	// #0
   29e60:	str	w0, [sp, #140]
   29e64:	b	29ee0 <lzma_mode_is_supported@@XZ_5.0+0xf248>
   29e68:	ldr	x0, [sp, #40]
   29e6c:	ldr	x0, [x0]
   29e70:	str	x0, [sp, #120]
   29e74:	ldr	x0, [sp, #128]
   29e78:	ldr	x8, [x0, #24]
   29e7c:	ldr	x0, [sp, #128]
   29e80:	ldr	x9, [x0]
   29e84:	ldr	w0, [sp, #144]
   29e88:	str	w0, [sp]
   29e8c:	ldr	x7, [sp, #32]
   29e90:	ldr	x6, [sp, #40]
   29e94:	ldr	x5, [sp, #48]
   29e98:	ldr	x4, [sp, #56]
   29e9c:	ldr	x3, [sp, #64]
   29ea0:	ldr	x2, [sp, #72]
   29ea4:	ldr	x1, [sp, #80]
   29ea8:	mov	x0, x9
   29eac:	blr	x8
   29eb0:	str	w0, [sp, #140]
   29eb4:	ldr	x1, [sp, #48]
   29eb8:	ldr	x0, [sp, #120]
   29ebc:	add	x3, x1, x0
   29ec0:	ldr	x0, [sp, #40]
   29ec4:	ldr	x1, [x0]
   29ec8:	ldr	x0, [sp, #120]
   29ecc:	sub	x0, x1, x0
   29ed0:	mov	x2, x0
   29ed4:	mov	x1, x3
   29ed8:	ldr	x0, [sp, #128]
   29edc:	bl	29c6c <lzma_mode_is_supported@@XZ_5.0+0xefd4>
   29ee0:	ldr	w0, [sp, #140]
   29ee4:	ldp	x29, x30, [sp, #16]
   29ee8:	add	sp, sp, #0x90
   29eec:	ret
   29ef0:	stp	x29, x30, [sp, #-64]!
   29ef4:	mov	x29, sp
   29ef8:	str	x0, [sp, #40]
   29efc:	str	x1, [sp, #32]
   29f00:	str	x2, [sp, #24]
   29f04:	str	x3, [sp, #16]
   29f08:	ldr	x0, [sp, #40]
   29f0c:	str	x0, [sp, #56]
   29f10:	ldr	x3, [sp, #56]
   29f14:	ldr	x0, [sp, #16]
   29f18:	add	x0, x0, #0x10
   29f1c:	mov	x2, x0
   29f20:	ldr	x1, [sp, #32]
   29f24:	mov	x0, x3
   29f28:	bl	39d4 <lzma_version_string@@XZ_5.0+0x2e4>
   29f2c:	ldp	x29, x30, [sp], #64
   29f30:	ret
   29f34:	stp	x29, x30, [sp, #-48]!
   29f38:	mov	x29, sp
   29f3c:	str	x0, [sp, #40]
   29f40:	str	x1, [sp, #32]
   29f44:	str	x2, [sp, #24]
   29f48:	ldr	x0, [sp, #40]
   29f4c:	adrp	x1, 29000 <lzma_mode_is_supported@@XZ_5.0+0xe368>
   29f50:	add	x1, x1, #0xd4c
   29f54:	str	x1, [x0, #24]
   29f58:	ldr	x0, [sp, #40]
   29f5c:	adrp	x1, 29000 <lzma_mode_is_supported@@XZ_5.0+0xe368>
   29f60:	add	x1, x1, #0xef0
   29f64:	str	x1, [x0, #64]
   29f68:	ldr	x2, [sp, #24]
   29f6c:	ldr	x1, [sp, #32]
   29f70:	ldr	x0, [sp, #40]
   29f74:	bl	299f4 <lzma_mode_is_supported@@XZ_5.0+0xed5c>
   29f78:	ldp	x29, x30, [sp], #48
   29f7c:	ret
   29f80:	stp	x29, x30, [sp, #-48]!
   29f84:	mov	x29, sp
   29f88:	str	x0, [sp, #24]
   29f8c:	str	x1, [sp, #16]
   29f90:	ldr	x0, [sp, #24]
   29f94:	bl	29b28 <lzma_mode_is_supported@@XZ_5.0+0xee90>
   29f98:	cmn	x0, #0x1
   29f9c:	b.ne	29fa8 <lzma_mode_is_supported@@XZ_5.0+0xf310>  // b.any
   29fa0:	mov	w0, #0xb                   	// #11
   29fa4:	b	29fd0 <lzma_mode_is_supported@@XZ_5.0+0xf338>
   29fa8:	ldr	x0, [sp, #24]
   29fac:	str	x0, [sp, #40]
   29fb0:	ldr	x0, [sp, #40]
   29fb4:	ldr	w0, [x0, #4]
   29fb8:	and	w0, w0, #0xff
   29fbc:	sub	w0, w0, #0x1
   29fc0:	and	w1, w0, #0xff
   29fc4:	ldr	x0, [sp, #16]
   29fc8:	strb	w1, [x0]
   29fcc:	mov	w0, #0x0                   	// #0
   29fd0:	ldp	x29, x30, [sp], #48
   29fd4:	ret
   29fd8:	sub	sp, sp, #0x30
   29fdc:	str	x0, [sp, #24]
   29fe0:	str	x1, [sp, #16]
   29fe4:	str	x2, [sp, #8]
   29fe8:	ldr	x0, [sp, #24]
   29fec:	ldr	x0, [x0, #72]
   29ff0:	str	x0, [sp, #32]
   29ff4:	str	xzr, [sp, #40]
   29ff8:	b	2a090 <lzma_mode_is_supported@@XZ_5.0+0xf3f8>
   29ffc:	ldr	x1, [sp, #16]
   2a000:	ldr	x0, [sp, #40]
   2a004:	add	x0, x1, x0
   2a008:	ldrb	w2, [x0]
   2a00c:	ldr	x0, [sp, #24]
   2a010:	ldrb	w0, [x0, #80]
   2a014:	and	x1, x0, #0xff
   2a018:	ldr	x0, [sp, #32]
   2a01c:	add	x0, x1, x0
   2a020:	and	x0, x0, #0xff
   2a024:	ldr	x1, [sp, #24]
   2a028:	add	x0, x1, x0
   2a02c:	ldrb	w1, [x0, #81]
   2a030:	ldr	x3, [sp, #16]
   2a034:	ldr	x0, [sp, #40]
   2a038:	add	x0, x3, x0
   2a03c:	add	w1, w2, w1
   2a040:	and	w1, w1, #0xff
   2a044:	strb	w1, [x0]
   2a048:	ldr	x1, [sp, #16]
   2a04c:	ldr	x0, [sp, #40]
   2a050:	add	x1, x1, x0
   2a054:	ldr	x0, [sp, #24]
   2a058:	ldrb	w0, [x0, #80]
   2a05c:	sub	w2, w0, #0x1
   2a060:	and	w3, w2, #0xff
   2a064:	ldr	x2, [sp, #24]
   2a068:	strb	w3, [x2, #80]
   2a06c:	ldrb	w2, [x1]
   2a070:	ldr	x1, [sp, #24]
   2a074:	sxtw	x0, w0
   2a078:	add	x0, x1, x0
   2a07c:	mov	w1, w2
   2a080:	strb	w1, [x0, #81]
   2a084:	ldr	x0, [sp, #40]
   2a088:	add	x0, x0, #0x1
   2a08c:	str	x0, [sp, #40]
   2a090:	ldr	x1, [sp, #40]
   2a094:	ldr	x0, [sp, #8]
   2a098:	cmp	x1, x0
   2a09c:	b.cc	29ffc <lzma_mode_is_supported@@XZ_5.0+0xf364>  // b.lo, b.ul, b.last
   2a0a0:	nop
   2a0a4:	nop
   2a0a8:	add	sp, sp, #0x30
   2a0ac:	ret
   2a0b0:	sub	sp, sp, #0x80
   2a0b4:	stp	x29, x30, [sp, #16]
   2a0b8:	add	x29, sp, #0x10
   2a0bc:	str	x0, [sp, #88]
   2a0c0:	str	x1, [sp, #80]
   2a0c4:	str	x2, [sp, #72]
   2a0c8:	str	x3, [sp, #64]
   2a0cc:	str	x4, [sp, #56]
   2a0d0:	str	x5, [sp, #48]
   2a0d4:	str	x6, [sp, #40]
   2a0d8:	str	x7, [sp, #32]
   2a0dc:	ldr	x0, [sp, #88]
   2a0e0:	str	x0, [sp, #120]
   2a0e4:	ldr	x0, [sp, #40]
   2a0e8:	ldr	x0, [x0]
   2a0ec:	str	x0, [sp, #112]
   2a0f0:	ldr	x0, [sp, #120]
   2a0f4:	ldr	x8, [x0, #24]
   2a0f8:	ldr	x0, [sp, #120]
   2a0fc:	ldr	x9, [x0]
   2a100:	ldr	w0, [sp, #128]
   2a104:	str	w0, [sp]
   2a108:	ldr	x7, [sp, #32]
   2a10c:	ldr	x6, [sp, #40]
   2a110:	ldr	x5, [sp, #48]
   2a114:	ldr	x4, [sp, #56]
   2a118:	ldr	x3, [sp, #64]
   2a11c:	ldr	x2, [sp, #72]
   2a120:	ldr	x1, [sp, #80]
   2a124:	mov	x0, x9
   2a128:	blr	x8
   2a12c:	str	w0, [sp, #108]
   2a130:	ldr	x1, [sp, #48]
   2a134:	ldr	x0, [sp, #112]
   2a138:	add	x3, x1, x0
   2a13c:	ldr	x0, [sp, #40]
   2a140:	ldr	x1, [x0]
   2a144:	ldr	x0, [sp, #112]
   2a148:	sub	x0, x1, x0
   2a14c:	mov	x2, x0
   2a150:	mov	x1, x3
   2a154:	ldr	x0, [sp, #120]
   2a158:	bl	29fd8 <lzma_mode_is_supported@@XZ_5.0+0xf340>
   2a15c:	ldr	w0, [sp, #108]
   2a160:	ldp	x29, x30, [sp, #16]
   2a164:	add	sp, sp, #0x80
   2a168:	ret
   2a16c:	stp	x29, x30, [sp, #-48]!
   2a170:	mov	x29, sp
   2a174:	str	x0, [sp, #40]
   2a178:	str	x1, [sp, #32]
   2a17c:	str	x2, [sp, #24]
   2a180:	ldr	x0, [sp, #40]
   2a184:	adrp	x1, 2a000 <lzma_mode_is_supported@@XZ_5.0+0xf368>
   2a188:	add	x1, x1, #0xb0
   2a18c:	str	x1, [x0, #24]
   2a190:	ldr	x2, [sp, #24]
   2a194:	ldr	x1, [sp, #32]
   2a198:	ldr	x0, [sp, #40]
   2a19c:	bl	299f4 <lzma_mode_is_supported@@XZ_5.0+0xed5c>
   2a1a0:	ldp	x29, x30, [sp], #48
   2a1a4:	ret
   2a1a8:	stp	x29, x30, [sp, #-64]!
   2a1ac:	mov	x29, sp
   2a1b0:	str	x0, [sp, #40]
   2a1b4:	str	x1, [sp, #32]
   2a1b8:	str	x2, [sp, #24]
   2a1bc:	str	x3, [sp, #16]
   2a1c0:	ldr	x0, [sp, #16]
   2a1c4:	cmp	x0, #0x1
   2a1c8:	b.eq	2a1d4 <lzma_mode_is_supported@@XZ_5.0+0xf53c>  // b.none
   2a1cc:	mov	w0, #0x8                   	// #8
   2a1d0:	b	2a228 <lzma_mode_is_supported@@XZ_5.0+0xf590>
   2a1d4:	ldr	x1, [sp, #32]
   2a1d8:	mov	x0, #0x28                  	// #40
   2a1dc:	bl	36fc <lzma_version_string@@XZ_5.0+0xc>
   2a1e0:	str	x0, [sp, #56]
   2a1e4:	ldr	x0, [sp, #56]
   2a1e8:	cmp	x0, #0x0
   2a1ec:	b.ne	2a1f8 <lzma_mode_is_supported@@XZ_5.0+0xf560>  // b.any
   2a1f0:	mov	w0, #0x5                   	// #5
   2a1f4:	b	2a228 <lzma_mode_is_supported@@XZ_5.0+0xf590>
   2a1f8:	ldr	x0, [sp, #56]
   2a1fc:	str	wzr, [x0]
   2a200:	ldr	x0, [sp, #24]
   2a204:	ldrb	w0, [x0]
   2a208:	add	w0, w0, #0x1
   2a20c:	mov	w1, w0
   2a210:	ldr	x0, [sp, #56]
   2a214:	str	w1, [x0, #4]
   2a218:	ldr	x0, [sp, #40]
   2a21c:	ldr	x1, [sp, #56]
   2a220:	str	x1, [x0]
   2a224:	mov	w0, #0x0                   	// #0
   2a228:	ldp	x29, x30, [sp], #64
   2a22c:	ret
   2a230:	sub	sp, sp, #0x70
   2a234:	stp	x29, x30, [sp, #16]
   2a238:	add	x29, sp, #0x10
   2a23c:	str	x0, [sp, #88]
   2a240:	str	x1, [sp, #80]
   2a244:	str	x2, [sp, #72]
   2a248:	str	x3, [sp, #64]
   2a24c:	str	x4, [sp, #56]
   2a250:	str	x5, [sp, #48]
   2a254:	str	x6, [sp, #40]
   2a258:	str	x7, [sp, #32]
   2a25c:	ldr	x0, [sp, #88]
   2a260:	ldr	x0, [x0, #24]
   2a264:	cmp	x0, #0x0
   2a268:	b.ne	2a2c8 <lzma_mode_is_supported@@XZ_5.0+0xf630>  // b.any
   2a26c:	ldr	x5, [sp, #32]
   2a270:	ldr	x4, [sp, #40]
   2a274:	ldr	x3, [sp, #48]
   2a278:	ldr	x2, [sp, #56]
   2a27c:	ldr	x1, [sp, #64]
   2a280:	ldr	x0, [sp, #72]
   2a284:	bl	3870 <lzma_version_string@@XZ_5.0+0x180>
   2a288:	ldr	x0, [sp, #88]
   2a28c:	ldrb	w0, [x0, #73]
   2a290:	cmp	w0, #0x0
   2a294:	b.eq	2a338 <lzma_mode_is_supported@@XZ_5.0+0xf6a0>  // b.none
   2a298:	ldr	w0, [sp, #112]
   2a29c:	cmp	w0, #0x3
   2a2a0:	b.ne	2a338 <lzma_mode_is_supported@@XZ_5.0+0xf6a0>  // b.any
   2a2a4:	ldr	x0, [sp, #64]
   2a2a8:	ldr	x0, [x0]
   2a2ac:	ldr	x1, [sp, #56]
   2a2b0:	cmp	x1, x0
   2a2b4:	b.ne	2a338 <lzma_mode_is_supported@@XZ_5.0+0xf6a0>  // b.any
   2a2b8:	ldr	x0, [sp, #88]
   2a2bc:	mov	w1, #0x1                   	// #1
   2a2c0:	strb	w1, [x0, #72]
   2a2c4:	b	2a338 <lzma_mode_is_supported@@XZ_5.0+0xf6a0>
   2a2c8:	ldr	x0, [sp, #88]
   2a2cc:	ldr	x8, [x0, #24]
   2a2d0:	ldr	x0, [sp, #88]
   2a2d4:	ldr	x9, [x0]
   2a2d8:	ldr	w0, [sp, #112]
   2a2dc:	str	w0, [sp]
   2a2e0:	ldr	x7, [sp, #32]
   2a2e4:	ldr	x6, [sp, #40]
   2a2e8:	ldr	x5, [sp, #48]
   2a2ec:	ldr	x4, [sp, #56]
   2a2f0:	ldr	x3, [sp, #64]
   2a2f4:	ldr	x2, [sp, #72]
   2a2f8:	ldr	x1, [sp, #80]
   2a2fc:	mov	x0, x9
   2a300:	blr	x8
   2a304:	str	w0, [sp, #108]
   2a308:	ldr	w0, [sp, #108]
   2a30c:	cmp	w0, #0x1
   2a310:	b.ne	2a324 <lzma_mode_is_supported@@XZ_5.0+0xf68c>  // b.any
   2a314:	ldr	x0, [sp, #88]
   2a318:	mov	w1, #0x1                   	// #1
   2a31c:	strb	w1, [x0, #72]
   2a320:	b	2a338 <lzma_mode_is_supported@@XZ_5.0+0xf6a0>
   2a324:	ldr	w0, [sp, #108]
   2a328:	cmp	w0, #0x0
   2a32c:	b.eq	2a338 <lzma_mode_is_supported@@XZ_5.0+0xf6a0>  // b.none
   2a330:	ldr	w0, [sp, #108]
   2a334:	b	2a33c <lzma_mode_is_supported@@XZ_5.0+0xf6a4>
   2a338:	mov	w0, #0x0                   	// #0
   2a33c:	ldp	x29, x30, [sp, #16]
   2a340:	add	sp, sp, #0x70
   2a344:	ret
   2a348:	stp	x29, x30, [sp, #-64]!
   2a34c:	mov	x29, sp
   2a350:	str	x0, [sp, #40]
   2a354:	str	x1, [sp, #32]
   2a358:	str	x2, [sp, #24]
   2a35c:	ldr	x0, [sp, #40]
   2a360:	ldr	x5, [x0, #80]
   2a364:	ldr	x0, [sp, #40]
   2a368:	ldr	x6, [x0, #88]
   2a36c:	ldr	x0, [sp, #40]
   2a370:	ldr	w1, [x0, #96]
   2a374:	ldr	x0, [sp, #40]
   2a378:	ldrb	w0, [x0, #73]
   2a37c:	ldr	x4, [sp, #24]
   2a380:	ldr	x3, [sp, #32]
   2a384:	mov	w2, w0
   2a388:	mov	x0, x6
   2a38c:	blr	x5
   2a390:	str	x0, [sp, #56]
   2a394:	ldr	x0, [sp, #40]
   2a398:	ldr	w0, [x0, #96]
   2a39c:	ldr	x1, [sp, #56]
   2a3a0:	add	w1, w0, w1
   2a3a4:	ldr	x0, [sp, #40]
   2a3a8:	str	w1, [x0, #96]
   2a3ac:	ldr	x0, [sp, #56]
   2a3b0:	ldp	x29, x30, [sp], #64
   2a3b4:	ret
   2a3b8:	sub	sp, sp, #0xb0
   2a3bc:	stp	x29, x30, [sp, #16]
   2a3c0:	add	x29, sp, #0x10
   2a3c4:	str	x0, [sp, #88]
   2a3c8:	str	x1, [sp, #80]
   2a3cc:	str	x2, [sp, #72]
   2a3d0:	str	x3, [sp, #64]
   2a3d4:	str	x4, [sp, #56]
   2a3d8:	str	x5, [sp, #48]
   2a3dc:	str	x6, [sp, #40]
   2a3e0:	str	x7, [sp, #32]
   2a3e4:	ldr	x0, [sp, #88]
   2a3e8:	str	x0, [sp, #168]
   2a3ec:	ldr	w0, [sp, #176]
   2a3f0:	cmp	w0, #0x1
   2a3f4:	b.ne	2a400 <lzma_mode_is_supported@@XZ_5.0+0xf768>  // b.any
   2a3f8:	mov	w0, #0x8                   	// #8
   2a3fc:	b	2a7b0 <lzma_mode_is_supported@@XZ_5.0+0xfb18>
   2a400:	ldr	x0, [sp, #168]
   2a404:	ldr	x1, [x0, #112]
   2a408:	ldr	x0, [sp, #168]
   2a40c:	ldr	x0, [x0, #120]
   2a410:	cmp	x1, x0
   2a414:	b.cs	2a480 <lzma_mode_is_supported@@XZ_5.0+0xf7e8>  // b.hs, b.nlast
   2a418:	ldr	x0, [sp, #168]
   2a41c:	add	x6, x0, #0x88
   2a420:	ldr	x0, [sp, #168]
   2a424:	add	x1, x0, #0x70
   2a428:	ldr	x0, [sp, #168]
   2a42c:	ldr	x0, [x0, #120]
   2a430:	ldr	x5, [sp, #32]
   2a434:	ldr	x4, [sp, #40]
   2a438:	ldr	x3, [sp, #48]
   2a43c:	mov	x2, x0
   2a440:	mov	x0, x6
   2a444:	bl	3870 <lzma_version_string@@XZ_5.0+0x180>
   2a448:	ldr	x0, [sp, #168]
   2a44c:	ldr	x1, [x0, #112]
   2a450:	ldr	x0, [sp, #168]
   2a454:	ldr	x0, [x0, #120]
   2a458:	cmp	x1, x0
   2a45c:	b.cs	2a468 <lzma_mode_is_supported@@XZ_5.0+0xf7d0>  // b.hs, b.nlast
   2a460:	mov	w0, #0x0                   	// #0
   2a464:	b	2a7b0 <lzma_mode_is_supported@@XZ_5.0+0xfb18>
   2a468:	ldr	x0, [sp, #168]
   2a46c:	ldrb	w0, [x0, #72]
   2a470:	cmp	w0, #0x0
   2a474:	b.eq	2a480 <lzma_mode_is_supported@@XZ_5.0+0xf7e8>  // b.none
   2a478:	mov	w0, #0x1                   	// #1
   2a47c:	b	2a7b0 <lzma_mode_is_supported@@XZ_5.0+0xfb18>
   2a480:	ldr	x0, [sp, #168]
   2a484:	str	xzr, [x0, #120]
   2a488:	ldr	x0, [sp, #40]
   2a48c:	ldr	x0, [x0]
   2a490:	ldr	x1, [sp, #32]
   2a494:	sub	x0, x1, x0
   2a498:	str	x0, [sp, #160]
   2a49c:	ldr	x0, [sp, #168]
   2a4a0:	ldr	x1, [x0, #128]
   2a4a4:	ldr	x0, [sp, #168]
   2a4a8:	ldr	x0, [x0, #112]
   2a4ac:	sub	x0, x1, x0
   2a4b0:	str	x0, [sp, #152]
   2a4b4:	ldr	x1, [sp, #160]
   2a4b8:	ldr	x0, [sp, #152]
   2a4bc:	cmp	x1, x0
   2a4c0:	b.hi	2a4d0 <lzma_mode_is_supported@@XZ_5.0+0xf838>  // b.pmore
   2a4c4:	ldr	x0, [sp, #152]
   2a4c8:	cmp	x0, #0x0
   2a4cc:	b.ne	2a630 <lzma_mode_is_supported@@XZ_5.0+0xf998>  // b.any
   2a4d0:	ldr	x0, [sp, #40]
   2a4d4:	ldr	x0, [x0]
   2a4d8:	str	x0, [sp, #144]
   2a4dc:	ldr	x0, [sp, #40]
   2a4e0:	ldr	x0, [x0]
   2a4e4:	ldr	x1, [sp, #48]
   2a4e8:	add	x3, x1, x0
   2a4ec:	ldr	x0, [sp, #168]
   2a4f0:	add	x1, x0, #0x88
   2a4f4:	ldr	x0, [sp, #168]
   2a4f8:	ldr	x0, [x0, #112]
   2a4fc:	add	x0, x1, x0
   2a500:	ldr	x2, [sp, #152]
   2a504:	mov	x1, x0
   2a508:	mov	x0, x3
   2a50c:	bl	3090 <memcpy@plt>
   2a510:	ldr	x0, [sp, #40]
   2a514:	ldr	x1, [x0]
   2a518:	ldr	x0, [sp, #152]
   2a51c:	add	x1, x1, x0
   2a520:	ldr	x0, [sp, #40]
   2a524:	str	x1, [x0]
   2a528:	ldr	w0, [sp, #176]
   2a52c:	str	w0, [sp]
   2a530:	ldr	x7, [sp, #32]
   2a534:	ldr	x6, [sp, #40]
   2a538:	ldr	x5, [sp, #48]
   2a53c:	ldr	x4, [sp, #56]
   2a540:	ldr	x3, [sp, #64]
   2a544:	ldr	x2, [sp, #72]
   2a548:	ldr	x1, [sp, #80]
   2a54c:	ldr	x0, [sp, #168]
   2a550:	bl	2a230 <lzma_mode_is_supported@@XZ_5.0+0xf598>
   2a554:	str	w0, [sp, #140]
   2a558:	ldr	w0, [sp, #140]
   2a55c:	cmp	w0, #0x0
   2a560:	b.eq	2a56c <lzma_mode_is_supported@@XZ_5.0+0xf8d4>  // b.none
   2a564:	ldr	w0, [sp, #140]
   2a568:	b	2a7b0 <lzma_mode_is_supported@@XZ_5.0+0xfb18>
   2a56c:	ldr	x0, [sp, #40]
   2a570:	ldr	x1, [x0]
   2a574:	ldr	x0, [sp, #144]
   2a578:	sub	x0, x1, x0
   2a57c:	str	x0, [sp, #128]
   2a580:	ldr	x1, [sp, #48]
   2a584:	ldr	x0, [sp, #144]
   2a588:	add	x0, x1, x0
   2a58c:	ldr	x2, [sp, #128]
   2a590:	mov	x1, x0
   2a594:	ldr	x0, [sp, #168]
   2a598:	bl	2a348 <lzma_mode_is_supported@@XZ_5.0+0xf6b0>
   2a59c:	str	x0, [sp, #120]
   2a5a0:	ldr	x1, [sp, #128]
   2a5a4:	ldr	x0, [sp, #120]
   2a5a8:	sub	x0, x1, x0
   2a5ac:	str	x0, [sp, #112]
   2a5b0:	ldr	x0, [sp, #168]
   2a5b4:	str	xzr, [x0, #112]
   2a5b8:	ldr	x0, [sp, #168]
   2a5bc:	ldr	x1, [sp, #112]
   2a5c0:	str	x1, [x0, #128]
   2a5c4:	ldr	x0, [sp, #168]
   2a5c8:	ldrb	w0, [x0, #72]
   2a5cc:	cmp	w0, #0x0
   2a5d0:	b.eq	2a5e0 <lzma_mode_is_supported@@XZ_5.0+0xf948>  // b.none
   2a5d4:	ldr	x0, [sp, #168]
   2a5d8:	str	xzr, [x0, #128]
   2a5dc:	b	2a694 <lzma_mode_is_supported@@XZ_5.0+0xf9fc>
   2a5e0:	ldr	x0, [sp, #112]
   2a5e4:	cmp	x0, #0x0
   2a5e8:	b.eq	2a694 <lzma_mode_is_supported@@XZ_5.0+0xf9fc>  // b.none
   2a5ec:	ldr	x0, [sp, #40]
   2a5f0:	ldr	x1, [x0]
   2a5f4:	ldr	x0, [sp, #112]
   2a5f8:	sub	x1, x1, x0
   2a5fc:	ldr	x0, [sp, #40]
   2a600:	str	x1, [x0]
   2a604:	ldr	x0, [sp, #168]
   2a608:	add	x3, x0, #0x88
   2a60c:	ldr	x0, [sp, #40]
   2a610:	ldr	x0, [x0]
   2a614:	ldr	x1, [sp, #48]
   2a618:	add	x0, x1, x0
   2a61c:	ldr	x2, [sp, #112]
   2a620:	mov	x1, x0
   2a624:	mov	x0, x3
   2a628:	bl	3090 <memcpy@plt>
   2a62c:	b	2a694 <lzma_mode_is_supported@@XZ_5.0+0xf9fc>
   2a630:	ldr	x0, [sp, #168]
   2a634:	ldr	x0, [x0, #112]
   2a638:	cmp	x0, #0x0
   2a63c:	b.eq	2a698 <lzma_mode_is_supported@@XZ_5.0+0xfa00>  // b.none
   2a640:	ldr	x0, [sp, #168]
   2a644:	add	x3, x0, #0x88
   2a648:	ldr	x0, [sp, #168]
   2a64c:	add	x1, x0, #0x88
   2a650:	ldr	x0, [sp, #168]
   2a654:	ldr	x0, [x0, #112]
   2a658:	add	x0, x1, x0
   2a65c:	ldr	x2, [sp, #152]
   2a660:	mov	x1, x0
   2a664:	mov	x0, x3
   2a668:	bl	30b0 <memmove@plt>
   2a66c:	ldr	x0, [sp, #168]
   2a670:	ldr	x1, [x0, #128]
   2a674:	ldr	x0, [sp, #168]
   2a678:	ldr	x0, [x0, #112]
   2a67c:	sub	x1, x1, x0
   2a680:	ldr	x0, [sp, #168]
   2a684:	str	x1, [x0, #128]
   2a688:	ldr	x0, [sp, #168]
   2a68c:	str	xzr, [x0, #112]
   2a690:	b	2a698 <lzma_mode_is_supported@@XZ_5.0+0xfa00>
   2a694:	nop
   2a698:	ldr	x0, [sp, #168]
   2a69c:	ldr	x0, [x0, #128]
   2a6a0:	cmp	x0, #0x0
   2a6a4:	b.eq	2a77c <lzma_mode_is_supported@@XZ_5.0+0xfae4>  // b.none
   2a6a8:	ldr	x0, [sp, #168]
   2a6ac:	add	x1, x0, #0x88
   2a6b0:	ldr	x0, [sp, #168]
   2a6b4:	add	x2, x0, #0x80
   2a6b8:	ldr	x0, [sp, #168]
   2a6bc:	ldr	x3, [x0, #104]
   2a6c0:	ldr	w0, [sp, #176]
   2a6c4:	str	w0, [sp]
   2a6c8:	mov	x7, x3
   2a6cc:	mov	x6, x2
   2a6d0:	mov	x5, x1
   2a6d4:	ldr	x4, [sp, #56]
   2a6d8:	ldr	x3, [sp, #64]
   2a6dc:	ldr	x2, [sp, #72]
   2a6e0:	ldr	x1, [sp, #80]
   2a6e4:	ldr	x0, [sp, #168]
   2a6e8:	bl	2a230 <lzma_mode_is_supported@@XZ_5.0+0xf598>
   2a6ec:	str	w0, [sp, #108]
   2a6f0:	ldr	w0, [sp, #108]
   2a6f4:	cmp	w0, #0x0
   2a6f8:	b.eq	2a704 <lzma_mode_is_supported@@XZ_5.0+0xfa6c>  // b.none
   2a6fc:	ldr	w0, [sp, #108]
   2a700:	b	2a7b0 <lzma_mode_is_supported@@XZ_5.0+0xfb18>
   2a704:	ldr	x0, [sp, #168]
   2a708:	add	x1, x0, #0x88
   2a70c:	ldr	x0, [sp, #168]
   2a710:	ldr	x0, [x0, #128]
   2a714:	mov	x2, x0
   2a718:	ldr	x0, [sp, #168]
   2a71c:	bl	2a348 <lzma_mode_is_supported@@XZ_5.0+0xf6b0>
   2a720:	mov	x1, x0
   2a724:	ldr	x0, [sp, #168]
   2a728:	str	x1, [x0, #120]
   2a72c:	ldr	x0, [sp, #168]
   2a730:	ldrb	w0, [x0, #72]
   2a734:	cmp	w0, #0x0
   2a738:	b.eq	2a74c <lzma_mode_is_supported@@XZ_5.0+0xfab4>  // b.none
   2a73c:	ldr	x0, [sp, #168]
   2a740:	ldr	x1, [x0, #128]
   2a744:	ldr	x0, [sp, #168]
   2a748:	str	x1, [x0, #120]
   2a74c:	ldr	x0, [sp, #168]
   2a750:	add	x6, x0, #0x88
   2a754:	ldr	x0, [sp, #168]
   2a758:	add	x1, x0, #0x70
   2a75c:	ldr	x0, [sp, #168]
   2a760:	ldr	x0, [x0, #120]
   2a764:	ldr	x5, [sp, #32]
   2a768:	ldr	x4, [sp, #40]
   2a76c:	ldr	x3, [sp, #48]
   2a770:	mov	x2, x0
   2a774:	mov	x0, x6
   2a778:	bl	3870 <lzma_version_string@@XZ_5.0+0x180>
   2a77c:	ldr	x0, [sp, #168]
   2a780:	ldrb	w0, [x0, #72]
   2a784:	cmp	w0, #0x0
   2a788:	b.eq	2a7ac <lzma_mode_is_supported@@XZ_5.0+0xfb14>  // b.none
   2a78c:	ldr	x0, [sp, #168]
   2a790:	ldr	x1, [x0, #112]
   2a794:	ldr	x0, [sp, #168]
   2a798:	ldr	x0, [x0, #128]
   2a79c:	cmp	x1, x0
   2a7a0:	b.ne	2a7ac <lzma_mode_is_supported@@XZ_5.0+0xfb14>  // b.any
   2a7a4:	mov	w0, #0x1                   	// #1
   2a7a8:	b	2a7b0 <lzma_mode_is_supported@@XZ_5.0+0xfb18>
   2a7ac:	mov	w0, #0x0                   	// #0
   2a7b0:	ldp	x29, x30, [sp, #16]
   2a7b4:	add	sp, sp, #0xb0
   2a7b8:	ret
   2a7bc:	stp	x29, x30, [sp, #-48]!
   2a7c0:	mov	x29, sp
   2a7c4:	str	x0, [sp, #24]
   2a7c8:	str	x1, [sp, #16]
   2a7cc:	ldr	x0, [sp, #24]
   2a7d0:	str	x0, [sp, #40]
   2a7d4:	ldr	x0, [sp, #40]
   2a7d8:	ldr	x1, [sp, #16]
   2a7dc:	bl	3a48 <lzma_version_string@@XZ_5.0+0x358>
   2a7e0:	ldr	x0, [sp, #40]
   2a7e4:	ldr	x0, [x0, #88]
   2a7e8:	ldr	x1, [sp, #16]
   2a7ec:	bl	3814 <lzma_version_string@@XZ_5.0+0x124>
   2a7f0:	ldr	x1, [sp, #16]
   2a7f4:	ldr	x0, [sp, #40]
   2a7f8:	bl	3814 <lzma_version_string@@XZ_5.0+0x124>
   2a7fc:	nop
   2a800:	ldp	x29, x30, [sp], #48
   2a804:	ret
   2a808:	stp	x29, x30, [sp, #-64]!
   2a80c:	mov	x29, sp
   2a810:	str	x0, [sp, #40]
   2a814:	str	x1, [sp, #32]
   2a818:	str	x2, [sp, #24]
   2a81c:	str	x3, [sp, #16]
   2a820:	ldr	x0, [sp, #40]
   2a824:	str	x0, [sp, #56]
   2a828:	ldr	x3, [sp, #56]
   2a82c:	ldr	x0, [sp, #16]
   2a830:	add	x0, x0, #0x10
   2a834:	mov	x2, x0
   2a838:	ldr	x1, [sp, #32]
   2a83c:	mov	x0, x3
   2a840:	bl	39d4 <lzma_version_string@@XZ_5.0+0x2e4>
   2a844:	ldp	x29, x30, [sp], #64
   2a848:	ret
   2a84c:	stp	x29, x30, [sp, #-176]!
   2a850:	mov	x29, sp
   2a854:	str	x0, [sp, #72]
   2a858:	str	x1, [sp, #64]
   2a85c:	str	x2, [sp, #56]
   2a860:	str	x3, [sp, #48]
   2a864:	str	x4, [sp, #40]
   2a868:	str	x5, [sp, #32]
   2a86c:	str	w6, [sp, #28]
   2a870:	strb	w7, [sp, #27]
   2a874:	ldr	x0, [sp, #72]
   2a878:	ldr	x0, [x0]
   2a87c:	str	x0, [sp, #168]
   2a880:	ldr	x0, [sp, #168]
   2a884:	cmp	x0, #0x0
   2a888:	b.ne	2a9a0 <lzma_mode_is_supported@@XZ_5.0+0xfd08>  // b.any
   2a88c:	ldr	x0, [sp, #32]
   2a890:	add	x0, x0, #0x44
   2a894:	lsl	x0, x0, #1
   2a898:	ldr	x1, [sp, #64]
   2a89c:	bl	36fc <lzma_version_string@@XZ_5.0+0xc>
   2a8a0:	str	x0, [sp, #168]
   2a8a4:	ldr	x0, [sp, #168]
   2a8a8:	cmp	x0, #0x0
   2a8ac:	b.ne	2a8b8 <lzma_mode_is_supported@@XZ_5.0+0xfc20>  // b.any
   2a8b0:	mov	w0, #0x5                   	// #5
   2a8b4:	b	2aa40 <lzma_mode_is_supported@@XZ_5.0+0xfda8>
   2a8b8:	ldr	x0, [sp, #72]
   2a8bc:	ldr	x1, [sp, #168]
   2a8c0:	str	x1, [x0]
   2a8c4:	ldr	x0, [sp, #72]
   2a8c8:	adrp	x1, 2a000 <lzma_mode_is_supported@@XZ_5.0+0xf368>
   2a8cc:	add	x1, x1, #0x3b8
   2a8d0:	str	x1, [x0, #24]
   2a8d4:	ldr	x0, [sp, #72]
   2a8d8:	adrp	x1, 2a000 <lzma_mode_is_supported@@XZ_5.0+0xf368>
   2a8dc:	add	x1, x1, #0x7bc
   2a8e0:	str	x1, [x0, #32]
   2a8e4:	ldr	x0, [sp, #72]
   2a8e8:	adrp	x1, 2a000 <lzma_mode_is_supported@@XZ_5.0+0xf368>
   2a8ec:	add	x1, x1, #0x808
   2a8f0:	str	x1, [x0, #64]
   2a8f4:	ldr	x0, [sp, #168]
   2a8f8:	str	xzr, [x0]
   2a8fc:	ldr	x0, [sp, #168]
   2a900:	mov	x1, #0xffffffffffffffff    	// #-1
   2a904:	str	x1, [x0, #8]
   2a908:	ldr	x0, [sp, #168]
   2a90c:	str	xzr, [x0, #16]
   2a910:	ldr	x0, [sp, #168]
   2a914:	str	xzr, [x0, #24]
   2a918:	ldr	x0, [sp, #168]
   2a91c:	str	xzr, [x0, #32]
   2a920:	ldr	x0, [sp, #168]
   2a924:	str	xzr, [x0, #40]
   2a928:	ldr	x0, [sp, #168]
   2a92c:	str	xzr, [x0, #48]
   2a930:	ldr	x0, [sp, #168]
   2a934:	str	xzr, [x0, #56]
   2a938:	ldr	x0, [sp, #168]
   2a93c:	str	xzr, [x0, #64]
   2a940:	ldr	x0, [sp, #168]
   2a944:	ldr	x1, [sp, #48]
   2a948:	str	x1, [x0, #80]
   2a94c:	ldr	x0, [sp, #32]
   2a950:	lsl	x1, x0, #1
   2a954:	ldr	x0, [sp, #168]
   2a958:	str	x1, [x0, #104]
   2a95c:	ldr	x0, [sp, #40]
   2a960:	cmp	x0, #0x0
   2a964:	b.eq	2a998 <lzma_mode_is_supported@@XZ_5.0+0xfd00>  // b.none
   2a968:	ldr	x1, [sp, #64]
   2a96c:	ldr	x0, [sp, #40]
   2a970:	bl	36fc <lzma_version_string@@XZ_5.0+0xc>
   2a974:	mov	x1, x0
   2a978:	ldr	x0, [sp, #168]
   2a97c:	str	x1, [x0, #88]
   2a980:	ldr	x0, [sp, #168]
   2a984:	ldr	x0, [x0, #88]
   2a988:	cmp	x0, #0x0
   2a98c:	b.ne	2a9a0 <lzma_mode_is_supported@@XZ_5.0+0xfd08>  // b.any
   2a990:	mov	w0, #0x5                   	// #5
   2a994:	b	2aa40 <lzma_mode_is_supported@@XZ_5.0+0xfda8>
   2a998:	ldr	x0, [sp, #168]
   2a99c:	str	xzr, [x0, #88]
   2a9a0:	ldr	x0, [sp, #56]
   2a9a4:	ldr	x0, [x0, #16]
   2a9a8:	cmp	x0, #0x0
   2a9ac:	b.eq	2a9f0 <lzma_mode_is_supported@@XZ_5.0+0xfd58>  // b.none
   2a9b0:	ldr	x0, [sp, #56]
   2a9b4:	ldr	x0, [x0, #16]
   2a9b8:	str	x0, [sp, #160]
   2a9bc:	ldr	x0, [sp, #160]
   2a9c0:	ldr	w1, [x0]
   2a9c4:	ldr	x0, [sp, #168]
   2a9c8:	str	w1, [x0, #96]
   2a9cc:	ldr	x0, [sp, #168]
   2a9d0:	ldr	w1, [x0, #96]
   2a9d4:	ldr	w0, [sp, #28]
   2a9d8:	sub	w0, w0, #0x1
   2a9dc:	and	w0, w1, w0
   2a9e0:	cmp	w0, #0x0
   2a9e4:	b.eq	2a9f8 <lzma_mode_is_supported@@XZ_5.0+0xfd60>  // b.none
   2a9e8:	mov	w0, #0x8                   	// #8
   2a9ec:	b	2aa40 <lzma_mode_is_supported@@XZ_5.0+0xfda8>
   2a9f0:	ldr	x0, [sp, #168]
   2a9f4:	str	wzr, [x0, #96]
   2a9f8:	ldr	x0, [sp, #168]
   2a9fc:	ldrb	w1, [sp, #27]
   2aa00:	strb	w1, [x0, #73]
   2aa04:	ldr	x0, [sp, #168]
   2aa08:	strb	wzr, [x0, #72]
   2aa0c:	ldr	x0, [sp, #168]
   2aa10:	str	xzr, [x0, #112]
   2aa14:	ldr	x0, [sp, #168]
   2aa18:	str	xzr, [x0, #120]
   2aa1c:	ldr	x0, [sp, #168]
   2aa20:	str	xzr, [x0, #128]
   2aa24:	ldr	x3, [sp, #168]
   2aa28:	ldr	x0, [sp, #56]
   2aa2c:	add	x0, x0, #0x18
   2aa30:	mov	x2, x0
   2aa34:	ldr	x1, [sp, #64]
   2aa38:	mov	x0, x3
   2aa3c:	bl	393c <lzma_version_string@@XZ_5.0+0x24c>
   2aa40:	ldp	x29, x30, [sp], #176
   2aa44:	ret
   2aa48:	sub	sp, sp, #0x10
   2aa4c:	str	x0, [sp, #8]
   2aa50:	str	w1, [sp, #4]
   2aa54:	ldr	w0, [sp, #4]
   2aa58:	and	w1, w0, #0xff
   2aa5c:	ldr	x0, [sp, #8]
   2aa60:	strb	w1, [x0]
   2aa64:	ldr	w0, [sp, #4]
   2aa68:	lsr	w1, w0, #8
   2aa6c:	ldr	x0, [sp, #8]
   2aa70:	add	x0, x0, #0x1
   2aa74:	and	w1, w1, #0xff
   2aa78:	strb	w1, [x0]
   2aa7c:	ldr	w0, [sp, #4]
   2aa80:	lsr	w1, w0, #16
   2aa84:	ldr	x0, [sp, #8]
   2aa88:	add	x0, x0, #0x2
   2aa8c:	and	w1, w1, #0xff
   2aa90:	strb	w1, [x0]
   2aa94:	ldr	w0, [sp, #4]
   2aa98:	lsr	w1, w0, #24
   2aa9c:	ldr	x0, [sp, #8]
   2aaa0:	add	x0, x0, #0x3
   2aaa4:	and	w1, w1, #0xff
   2aaa8:	strb	w1, [x0]
   2aaac:	nop
   2aab0:	add	sp, sp, #0x10
   2aab4:	ret
   2aab8:	sub	sp, sp, #0x20
   2aabc:	str	x0, [sp, #8]
   2aac0:	str	x1, [sp]
   2aac4:	ldr	x0, [sp]
   2aac8:	str	x0, [sp, #24]
   2aacc:	ldr	x0, [sp, #24]
   2aad0:	cmp	x0, #0x0
   2aad4:	b.eq	2aae8 <lzma_mode_is_supported@@XZ_5.0+0xfe50>  // b.none
   2aad8:	ldr	x0, [sp, #24]
   2aadc:	ldr	w0, [x0]
   2aae0:	cmp	w0, #0x0
   2aae4:	b.ne	2aaf0 <lzma_mode_is_supported@@XZ_5.0+0xfe58>  // b.any
   2aae8:	mov	w0, #0x0                   	// #0
   2aaec:	b	2aaf4 <lzma_mode_is_supported@@XZ_5.0+0xfe5c>
   2aaf0:	mov	w0, #0x4                   	// #4
   2aaf4:	ldr	x1, [sp, #8]
   2aaf8:	str	w0, [x1]
   2aafc:	mov	w0, #0x0                   	// #0
   2ab00:	add	sp, sp, #0x20
   2ab04:	ret
   2ab08:	stp	x29, x30, [sp, #-48]!
   2ab0c:	mov	x29, sp
   2ab10:	str	x0, [sp, #24]
   2ab14:	str	x1, [sp, #16]
   2ab18:	ldr	x0, [sp, #24]
   2ab1c:	str	x0, [sp, #40]
   2ab20:	ldr	x0, [sp, #40]
   2ab24:	cmp	x0, #0x0
   2ab28:	b.eq	2ab3c <lzma_mode_is_supported@@XZ_5.0+0xfea4>  // b.none
   2ab2c:	ldr	x0, [sp, #40]
   2ab30:	ldr	w0, [x0]
   2ab34:	cmp	w0, #0x0
   2ab38:	b.ne	2ab44 <lzma_mode_is_supported@@XZ_5.0+0xfeac>  // b.any
   2ab3c:	mov	w0, #0x0                   	// #0
   2ab40:	b	2ab5c <lzma_mode_is_supported@@XZ_5.0+0xfec4>
   2ab44:	ldr	x0, [sp, #40]
   2ab48:	ldr	w0, [x0]
   2ab4c:	mov	w1, w0
   2ab50:	ldr	x0, [sp, #16]
   2ab54:	bl	2aa48 <lzma_mode_is_supported@@XZ_5.0+0xfdb0>
   2ab58:	mov	w0, #0x0                   	// #0
   2ab5c:	ldp	x29, x30, [sp], #48
   2ab60:	ret
   2ab64:	sub	sp, sp, #0x20
   2ab68:	str	x0, [sp, #8]
   2ab6c:	ldr	x0, [sp, #8]
   2ab70:	ldrb	w0, [x0]
   2ab74:	str	w0, [sp, #28]
   2ab78:	ldr	x0, [sp, #8]
   2ab7c:	add	x0, x0, #0x1
   2ab80:	ldrb	w0, [x0]
   2ab84:	lsl	w0, w0, #8
   2ab88:	ldr	w1, [sp, #28]
   2ab8c:	orr	w0, w1, w0
   2ab90:	str	w0, [sp, #28]
   2ab94:	ldr	x0, [sp, #8]
   2ab98:	add	x0, x0, #0x2
   2ab9c:	ldrb	w0, [x0]
   2aba0:	lsl	w0, w0, #16
   2aba4:	ldr	w1, [sp, #28]
   2aba8:	orr	w0, w1, w0
   2abac:	str	w0, [sp, #28]
   2abb0:	ldr	x0, [sp, #8]
   2abb4:	add	x0, x0, #0x3
   2abb8:	ldrb	w0, [x0]
   2abbc:	lsl	w0, w0, #24
   2abc0:	ldr	w1, [sp, #28]
   2abc4:	orr	w0, w1, w0
   2abc8:	str	w0, [sp, #28]
   2abcc:	ldr	w0, [sp, #28]
   2abd0:	add	sp, sp, #0x20
   2abd4:	ret
   2abd8:	stp	x29, x30, [sp, #-64]!
   2abdc:	mov	x29, sp
   2abe0:	str	x0, [sp, #40]
   2abe4:	str	x1, [sp, #32]
   2abe8:	str	x2, [sp, #24]
   2abec:	str	x3, [sp, #16]
   2abf0:	ldr	x0, [sp, #16]
   2abf4:	cmp	x0, #0x0
   2abf8:	b.ne	2ac04 <lzma_mode_is_supported@@XZ_5.0+0xff6c>  // b.any
   2abfc:	mov	w0, #0x0                   	// #0
   2ac00:	b	2ac80 <lzma_mode_is_supported@@XZ_5.0+0xffe8>
   2ac04:	ldr	x0, [sp, #16]
   2ac08:	cmp	x0, #0x4
   2ac0c:	b.eq	2ac18 <lzma_mode_is_supported@@XZ_5.0+0xff80>  // b.none
   2ac10:	mov	w0, #0x8                   	// #8
   2ac14:	b	2ac80 <lzma_mode_is_supported@@XZ_5.0+0xffe8>
   2ac18:	ldr	x1, [sp, #32]
   2ac1c:	mov	x0, #0x4                   	// #4
   2ac20:	bl	36fc <lzma_version_string@@XZ_5.0+0xc>
   2ac24:	str	x0, [sp, #56]
   2ac28:	ldr	x0, [sp, #56]
   2ac2c:	cmp	x0, #0x0
   2ac30:	b.ne	2ac3c <lzma_mode_is_supported@@XZ_5.0+0xffa4>  // b.any
   2ac34:	mov	w0, #0x5                   	// #5
   2ac38:	b	2ac80 <lzma_mode_is_supported@@XZ_5.0+0xffe8>
   2ac3c:	ldr	x0, [sp, #24]
   2ac40:	bl	2ab64 <lzma_mode_is_supported@@XZ_5.0+0xfecc>
   2ac44:	mov	w1, w0
   2ac48:	ldr	x0, [sp, #56]
   2ac4c:	str	w1, [x0]
   2ac50:	ldr	x0, [sp, #56]
   2ac54:	ldr	w0, [x0]
   2ac58:	cmp	w0, #0x0
   2ac5c:	b.ne	2ac70 <lzma_mode_is_supported@@XZ_5.0+0xffd8>  // b.any
   2ac60:	ldr	x1, [sp, #32]
   2ac64:	ldr	x0, [sp, #56]
   2ac68:	bl	3814 <lzma_version_string@@XZ_5.0+0x124>
   2ac6c:	b	2ac7c <lzma_mode_is_supported@@XZ_5.0+0xffe4>
   2ac70:	ldr	x0, [sp, #40]
   2ac74:	ldr	x1, [sp, #56]
   2ac78:	str	x1, [x0]
   2ac7c:	mov	w0, #0x0                   	// #0
   2ac80:	ldp	x29, x30, [sp], #64
   2ac84:	ret
   2ac88:	sub	sp, sp, #0x60
   2ac8c:	str	x0, [sp, #24]
   2ac90:	str	w1, [sp, #20]
   2ac94:	strb	w2, [sp, #19]
   2ac98:	str	x3, [sp, #8]
   2ac9c:	str	x4, [sp]
   2aca0:	ldr	x0, [sp, #24]
   2aca4:	str	x0, [sp, #56]
   2aca8:	ldr	x0, [sp, #56]
   2acac:	ldr	w0, [x0]
   2acb0:	str	w0, [sp, #92]
   2acb4:	ldr	x0, [sp, #56]
   2acb8:	ldr	w0, [x0, #4]
   2acbc:	str	w0, [sp, #88]
   2acc0:	ldr	x0, [sp]
   2acc4:	cmp	x0, #0x4
   2acc8:	b.hi	2acd4 <lzma_mode_is_supported@@XZ_5.0+0x1003c>  // b.pmore
   2accc:	mov	x0, #0x0                   	// #0
   2acd0:	b	2b07c <lzma_mode_is_supported@@XZ_5.0+0x103e4>
   2acd4:	ldr	w1, [sp, #20]
   2acd8:	ldr	w0, [sp, #88]
   2acdc:	sub	w0, w1, w0
   2ace0:	cmp	w0, #0x5
   2ace4:	b.ls	2acf4 <lzma_mode_is_supported@@XZ_5.0+0x1005c>  // b.plast
   2ace8:	ldr	w0, [sp, #20]
   2acec:	sub	w0, w0, #0x5
   2acf0:	str	w0, [sp, #88]
   2acf4:	ldr	x0, [sp]
   2acf8:	sub	x0, x0, #0x5
   2acfc:	str	x0, [sp, #48]
   2ad00:	str	xzr, [sp, #80]
   2ad04:	b	2b050 <lzma_mode_is_supported@@XZ_5.0+0x103b8>
   2ad08:	ldr	x1, [sp, #8]
   2ad0c:	ldr	x0, [sp, #80]
   2ad10:	add	x0, x1, x0
   2ad14:	ldrb	w0, [x0]
   2ad18:	strb	w0, [sp, #47]
   2ad1c:	ldrb	w0, [sp, #47]
   2ad20:	cmp	w0, #0xe8
   2ad24:	b.eq	2ad44 <lzma_mode_is_supported@@XZ_5.0+0x100ac>  // b.none
   2ad28:	ldrb	w0, [sp, #47]
   2ad2c:	cmp	w0, #0xe9
   2ad30:	b.eq	2ad44 <lzma_mode_is_supported@@XZ_5.0+0x100ac>  // b.none
   2ad34:	ldr	x0, [sp, #80]
   2ad38:	add	x0, x0, #0x1
   2ad3c:	str	x0, [sp, #80]
   2ad40:	b	2b050 <lzma_mode_is_supported@@XZ_5.0+0x103b8>
   2ad44:	ldr	x0, [sp, #80]
   2ad48:	mov	w1, w0
   2ad4c:	ldr	w0, [sp, #20]
   2ad50:	add	w1, w1, w0
   2ad54:	ldr	w0, [sp, #88]
   2ad58:	sub	w0, w1, w0
   2ad5c:	str	w0, [sp, #40]
   2ad60:	ldr	x0, [sp, #80]
   2ad64:	mov	w1, w0
   2ad68:	ldr	w0, [sp, #20]
   2ad6c:	add	w0, w0, w1
   2ad70:	str	w0, [sp, #88]
   2ad74:	ldr	w0, [sp, #40]
   2ad78:	cmp	w0, #0x5
   2ad7c:	b.ls	2ad88 <lzma_mode_is_supported@@XZ_5.0+0x100f0>  // b.plast
   2ad80:	str	wzr, [sp, #92]
   2ad84:	b	2adc8 <lzma_mode_is_supported@@XZ_5.0+0x10130>
   2ad88:	str	wzr, [sp, #76]
   2ad8c:	b	2adb8 <lzma_mode_is_supported@@XZ_5.0+0x10120>
   2ad90:	ldr	w1, [sp, #92]
   2ad94:	mov	w0, #0x77                  	// #119
   2ad98:	and	w0, w1, w0
   2ad9c:	str	w0, [sp, #92]
   2ada0:	ldr	w0, [sp, #92]
   2ada4:	lsl	w0, w0, #1
   2ada8:	str	w0, [sp, #92]
   2adac:	ldr	w0, [sp, #76]
   2adb0:	add	w0, w0, #0x1
   2adb4:	str	w0, [sp, #76]
   2adb8:	ldr	w1, [sp, #76]
   2adbc:	ldr	w0, [sp, #40]
   2adc0:	cmp	w1, w0
   2adc4:	b.cc	2ad90 <lzma_mode_is_supported@@XZ_5.0+0x100f8>  // b.lo, b.ul, b.last
   2adc8:	ldr	x0, [sp, #80]
   2adcc:	add	x0, x0, #0x4
   2add0:	ldr	x1, [sp, #8]
   2add4:	add	x0, x1, x0
   2add8:	ldrb	w0, [x0]
   2addc:	strb	w0, [sp, #47]
   2ade0:	ldrb	w0, [sp, #47]
   2ade4:	cmp	w0, #0x0
   2ade8:	b.eq	2adf8 <lzma_mode_is_supported@@XZ_5.0+0x10160>  // b.none
   2adec:	ldrb	w0, [sp, #47]
   2adf0:	cmp	w0, #0xff
   2adf4:	b.ne	2b014 <lzma_mode_is_supported@@XZ_5.0+0x1037c>  // b.any
   2adf8:	ldr	w0, [sp, #92]
   2adfc:	lsr	w0, w0, #1
   2ae00:	and	w2, w0, #0x7
   2ae04:	adrp	x0, 32000 <lzma_mode_is_supported@@XZ_5.0+0x17368>
   2ae08:	add	x1, x0, #0x3b0
   2ae0c:	mov	w0, w2
   2ae10:	ldrb	w0, [x1, x0]
   2ae14:	cmp	w0, #0x0
   2ae18:	b.eq	2b014 <lzma_mode_is_supported@@XZ_5.0+0x1037c>  // b.none
   2ae1c:	ldr	w0, [sp, #92]
   2ae20:	lsr	w0, w0, #1
   2ae24:	cmp	w0, #0xf
   2ae28:	b.hi	2b014 <lzma_mode_is_supported@@XZ_5.0+0x1037c>  // b.pmore
   2ae2c:	ldrb	w0, [sp, #47]
   2ae30:	lsl	w1, w0, #24
   2ae34:	ldr	x0, [sp, #80]
   2ae38:	add	x0, x0, #0x3
   2ae3c:	ldr	x2, [sp, #8]
   2ae40:	add	x0, x2, x0
   2ae44:	ldrb	w0, [x0]
   2ae48:	lsl	w0, w0, #16
   2ae4c:	orr	w1, w1, w0
   2ae50:	ldr	x0, [sp, #80]
   2ae54:	add	x0, x0, #0x2
   2ae58:	ldr	x2, [sp, #8]
   2ae5c:	add	x0, x2, x0
   2ae60:	ldrb	w0, [x0]
   2ae64:	lsl	w0, w0, #8
   2ae68:	orr	w0, w1, w0
   2ae6c:	ldr	x1, [sp, #80]
   2ae70:	add	x1, x1, #0x1
   2ae74:	ldr	x2, [sp, #8]
   2ae78:	add	x1, x2, x1
   2ae7c:	ldrb	w1, [x1]
   2ae80:	orr	w0, w0, w1
   2ae84:	str	w0, [sp, #72]
   2ae88:	ldrb	w0, [sp, #19]
   2ae8c:	cmp	w0, #0x0
   2ae90:	b.eq	2aeb8 <lzma_mode_is_supported@@XZ_5.0+0x10220>  // b.none
   2ae94:	ldr	x0, [sp, #80]
   2ae98:	mov	w1, w0
   2ae9c:	ldr	w0, [sp, #20]
   2aea0:	add	w1, w1, w0
   2aea4:	ldr	w0, [sp, #72]
   2aea8:	add	w0, w1, w0
   2aeac:	add	w0, w0, #0x5
   2aeb0:	str	w0, [sp, #68]
   2aeb4:	b	2aed8 <lzma_mode_is_supported@@XZ_5.0+0x10240>
   2aeb8:	ldr	x0, [sp, #80]
   2aebc:	mov	w1, w0
   2aec0:	ldr	w0, [sp, #20]
   2aec4:	add	w0, w1, w0
   2aec8:	ldr	w1, [sp, #72]
   2aecc:	sub	w0, w1, w0
   2aed0:	sub	w0, w0, #0x5
   2aed4:	str	w0, [sp, #68]
   2aed8:	ldr	w0, [sp, #92]
   2aedc:	cmp	w0, #0x0
   2aee0:	b.eq	2af64 <lzma_mode_is_supported@@XZ_5.0+0x102cc>  // b.none
   2aee4:	ldr	w0, [sp, #92]
   2aee8:	lsr	w1, w0, #1
   2aeec:	adrp	x0, 32000 <lzma_mode_is_supported@@XZ_5.0+0x17368>
   2aef0:	add	x0, x0, #0x3b8
   2aef4:	mov	w1, w1
   2aef8:	ldr	w0, [x0, x1, lsl #2]
   2aefc:	str	w0, [sp, #36]
   2af00:	mov	w1, #0x3                   	// #3
   2af04:	ldr	w0, [sp, #36]
   2af08:	sub	w0, w1, w0
   2af0c:	lsl	w0, w0, #3
   2af10:	ldr	w1, [sp, #68]
   2af14:	lsr	w0, w1, w0
   2af18:	strb	w0, [sp, #47]
   2af1c:	ldrb	w0, [sp, #47]
   2af20:	cmp	w0, #0x0
   2af24:	b.eq	2af34 <lzma_mode_is_supported@@XZ_5.0+0x1029c>  // b.none
   2af28:	ldrb	w0, [sp, #47]
   2af2c:	cmp	w0, #0xff
   2af30:	b.ne	2af6c <lzma_mode_is_supported@@XZ_5.0+0x102d4>  // b.any
   2af34:	mov	w1, #0x4                   	// #4
   2af38:	ldr	w0, [sp, #36]
   2af3c:	sub	w0, w1, w0
   2af40:	lsl	w0, w0, #3
   2af44:	mov	w1, #0x1                   	// #1
   2af48:	lsl	w0, w1, w0
   2af4c:	sub	w0, w0, #0x1
   2af50:	mov	w1, w0
   2af54:	ldr	w0, [sp, #68]
   2af58:	eor	w0, w0, w1
   2af5c:	str	w0, [sp, #72]
   2af60:	b	2ae88 <lzma_mode_is_supported@@XZ_5.0+0x101f0>
   2af64:	nop
   2af68:	b	2af70 <lzma_mode_is_supported@@XZ_5.0+0x102d8>
   2af6c:	nop
   2af70:	ldr	w0, [sp, #68]
   2af74:	lsr	w0, w0, #24
   2af78:	and	w0, w0, #0xff
   2af7c:	and	w0, w0, #0x1
   2af80:	and	w2, w0, #0xff
   2af84:	ldr	x0, [sp, #80]
   2af88:	add	x0, x0, #0x4
   2af8c:	ldr	x1, [sp, #8]
   2af90:	add	x0, x1, x0
   2af94:	mov	w1, w2
   2af98:	neg	w1, w1
   2af9c:	and	w1, w1, #0xff
   2afa0:	strb	w1, [x0]
   2afa4:	ldr	w0, [sp, #68]
   2afa8:	lsr	w2, w0, #16
   2afac:	ldr	x0, [sp, #80]
   2afb0:	add	x0, x0, #0x3
   2afb4:	ldr	x1, [sp, #8]
   2afb8:	add	x0, x1, x0
   2afbc:	and	w1, w2, #0xff
   2afc0:	strb	w1, [x0]
   2afc4:	ldr	w0, [sp, #68]
   2afc8:	lsr	w2, w0, #8
   2afcc:	ldr	x0, [sp, #80]
   2afd0:	add	x0, x0, #0x2
   2afd4:	ldr	x1, [sp, #8]
   2afd8:	add	x0, x1, x0
   2afdc:	and	w1, w2, #0xff
   2afe0:	strb	w1, [x0]
   2afe4:	ldr	x0, [sp, #80]
   2afe8:	add	x0, x0, #0x1
   2afec:	ldr	x1, [sp, #8]
   2aff0:	add	x0, x1, x0
   2aff4:	ldr	w1, [sp, #68]
   2aff8:	and	w1, w1, #0xff
   2affc:	strb	w1, [x0]
   2b000:	ldr	x0, [sp, #80]
   2b004:	add	x0, x0, #0x5
   2b008:	str	x0, [sp, #80]
   2b00c:	str	wzr, [sp, #92]
   2b010:	b	2b050 <lzma_mode_is_supported@@XZ_5.0+0x103b8>
   2b014:	ldr	x0, [sp, #80]
   2b018:	add	x0, x0, #0x1
   2b01c:	str	x0, [sp, #80]
   2b020:	ldr	w0, [sp, #92]
   2b024:	orr	w0, w0, #0x1
   2b028:	str	w0, [sp, #92]
   2b02c:	ldrb	w0, [sp, #47]
   2b030:	cmp	w0, #0x0
   2b034:	b.eq	2b044 <lzma_mode_is_supported@@XZ_5.0+0x103ac>  // b.none
   2b038:	ldrb	w0, [sp, #47]
   2b03c:	cmp	w0, #0xff
   2b040:	b.ne	2b050 <lzma_mode_is_supported@@XZ_5.0+0x103b8>  // b.any
   2b044:	ldr	w0, [sp, #92]
   2b048:	orr	w0, w0, #0x10
   2b04c:	str	w0, [sp, #92]
   2b050:	ldr	x1, [sp, #80]
   2b054:	ldr	x0, [sp, #48]
   2b058:	cmp	x1, x0
   2b05c:	b.ls	2ad08 <lzma_mode_is_supported@@XZ_5.0+0x10070>  // b.plast
   2b060:	ldr	x0, [sp, #56]
   2b064:	ldr	w1, [sp, #92]
   2b068:	str	w1, [x0]
   2b06c:	ldr	x0, [sp, #56]
   2b070:	ldr	w1, [sp, #88]
   2b074:	str	w1, [x0, #4]
   2b078:	ldr	x0, [sp, #80]
   2b07c:	add	sp, sp, #0x60
   2b080:	ret
   2b084:	stp	x29, x30, [sp, #-80]!
   2b088:	mov	x29, sp
   2b08c:	str	x0, [sp, #40]
   2b090:	str	x1, [sp, #32]
   2b094:	str	x2, [sp, #24]
   2b098:	strb	w3, [sp, #23]
   2b09c:	ldrb	w7, [sp, #23]
   2b0a0:	mov	w6, #0x1                   	// #1
   2b0a4:	mov	x5, #0x5                   	// #5
   2b0a8:	mov	x4, #0x8                   	// #8
   2b0ac:	adrp	x0, 2a000 <lzma_mode_is_supported@@XZ_5.0+0xf368>
   2b0b0:	add	x3, x0, #0xc88
   2b0b4:	ldr	x2, [sp, #24]
   2b0b8:	ldr	x1, [sp, #32]
   2b0bc:	ldr	x0, [sp, #40]
   2b0c0:	bl	2a84c <lzma_mode_is_supported@@XZ_5.0+0xfbb4>
   2b0c4:	str	w0, [sp, #76]
   2b0c8:	ldr	w0, [sp, #76]
   2b0cc:	cmp	w0, #0x0
   2b0d0:	b.ne	2b100 <lzma_mode_is_supported@@XZ_5.0+0x10468>  // b.any
   2b0d4:	ldr	x0, [sp, #40]
   2b0d8:	ldr	x0, [x0]
   2b0dc:	str	x0, [sp, #64]
   2b0e0:	ldr	x0, [sp, #64]
   2b0e4:	ldr	x0, [x0, #88]
   2b0e8:	str	x0, [sp, #56]
   2b0ec:	ldr	x0, [sp, #56]
   2b0f0:	str	wzr, [x0]
   2b0f4:	ldr	x0, [sp, #56]
   2b0f8:	mov	w1, #0xfffffffb            	// #-5
   2b0fc:	str	w1, [x0, #4]
   2b100:	ldr	w0, [sp, #76]
   2b104:	ldp	x29, x30, [sp], #80
   2b108:	ret
   2b10c:	stp	x29, x30, [sp, #-48]!
   2b110:	mov	x29, sp
   2b114:	str	x0, [sp, #40]
   2b118:	str	x1, [sp, #32]
   2b11c:	str	x2, [sp, #24]
   2b120:	mov	w3, #0x1                   	// #1
   2b124:	ldr	x2, [sp, #24]
   2b128:	ldr	x1, [sp, #32]
   2b12c:	ldr	x0, [sp, #40]
   2b130:	bl	2b084 <lzma_mode_is_supported@@XZ_5.0+0x103ec>
   2b134:	ldp	x29, x30, [sp], #48
   2b138:	ret
   2b13c:	stp	x29, x30, [sp, #-48]!
   2b140:	mov	x29, sp
   2b144:	str	x0, [sp, #40]
   2b148:	str	x1, [sp, #32]
   2b14c:	str	x2, [sp, #24]
   2b150:	mov	w3, #0x0                   	// #0
   2b154:	ldr	x2, [sp, #24]
   2b158:	ldr	x1, [sp, #32]
   2b15c:	ldr	x0, [sp, #40]
   2b160:	bl	2b084 <lzma_mode_is_supported@@XZ_5.0+0x103ec>
   2b164:	ldp	x29, x30, [sp], #48
   2b168:	ret
   2b16c:	sub	sp, sp, #0x30
   2b170:	str	x0, [sp, #24]
   2b174:	str	w1, [sp, #20]
   2b178:	strb	w2, [sp, #19]
   2b17c:	str	x3, [sp, #8]
   2b180:	str	x4, [sp]
   2b184:	str	xzr, [sp, #40]
   2b188:	b	2b368 <lzma_mode_is_supported@@XZ_5.0+0x106d0>
   2b18c:	ldr	x1, [sp, #8]
   2b190:	ldr	x0, [sp, #40]
   2b194:	add	x0, x1, x0
   2b198:	ldrb	w0, [x0]
   2b19c:	lsr	w0, w0, #2
   2b1a0:	and	w0, w0, #0xff
   2b1a4:	cmp	w0, #0x12
   2b1a8:	b.ne	2b35c <lzma_mode_is_supported@@XZ_5.0+0x106c4>  // b.any
   2b1ac:	ldr	x0, [sp, #40]
   2b1b0:	add	x0, x0, #0x3
   2b1b4:	ldr	x1, [sp, #8]
   2b1b8:	add	x0, x1, x0
   2b1bc:	ldrb	w0, [x0]
   2b1c0:	and	w0, w0, #0x3
   2b1c4:	cmp	w0, #0x1
   2b1c8:	b.ne	2b35c <lzma_mode_is_supported@@XZ_5.0+0x106c4>  // b.any
   2b1cc:	ldr	x1, [sp, #8]
   2b1d0:	ldr	x0, [sp, #40]
   2b1d4:	add	x0, x1, x0
   2b1d8:	ldrb	w0, [x0]
   2b1dc:	lsl	w0, w0, #24
   2b1e0:	and	w1, w0, #0x3000000
   2b1e4:	ldr	x0, [sp, #40]
   2b1e8:	add	x0, x0, #0x1
   2b1ec:	ldr	x2, [sp, #8]
   2b1f0:	add	x0, x2, x0
   2b1f4:	ldrb	w0, [x0]
   2b1f8:	lsl	w0, w0, #16
   2b1fc:	orr	w1, w1, w0
   2b200:	ldr	x0, [sp, #40]
   2b204:	add	x0, x0, #0x2
   2b208:	ldr	x2, [sp, #8]
   2b20c:	add	x0, x2, x0
   2b210:	ldrb	w0, [x0]
   2b214:	lsl	w0, w0, #8
   2b218:	orr	w1, w1, w0
   2b21c:	ldr	x0, [sp, #40]
   2b220:	add	x0, x0, #0x3
   2b224:	ldr	x2, [sp, #8]
   2b228:	add	x0, x2, x0
   2b22c:	ldrb	w0, [x0]
   2b230:	and	w0, w0, #0xfffffffc
   2b234:	orr	w0, w1, w0
   2b238:	str	w0, [sp, #32]
   2b23c:	ldrb	w0, [sp, #19]
   2b240:	cmp	w0, #0x0
   2b244:	b.eq	2b268 <lzma_mode_is_supported@@XZ_5.0+0x105d0>  // b.none
   2b248:	ldr	x0, [sp, #40]
   2b24c:	mov	w1, w0
   2b250:	ldr	w0, [sp, #20]
   2b254:	add	w0, w1, w0
   2b258:	ldr	w1, [sp, #32]
   2b25c:	add	w0, w1, w0
   2b260:	str	w0, [sp, #36]
   2b264:	b	2b284 <lzma_mode_is_supported@@XZ_5.0+0x105ec>
   2b268:	ldr	x0, [sp, #40]
   2b26c:	mov	w1, w0
   2b270:	ldr	w0, [sp, #20]
   2b274:	add	w0, w1, w0
   2b278:	ldr	w1, [sp, #32]
   2b27c:	sub	w0, w1, w0
   2b280:	str	w0, [sp, #36]
   2b284:	ldr	w0, [sp, #36]
   2b288:	lsr	w0, w0, #24
   2b28c:	and	w0, w0, #0xff
   2b290:	and	w0, w0, #0x3
   2b294:	and	w2, w0, #0xff
   2b298:	ldr	x1, [sp, #8]
   2b29c:	ldr	x0, [sp, #40]
   2b2a0:	add	x0, x1, x0
   2b2a4:	mov	w1, #0x48                  	// #72
   2b2a8:	orr	w1, w2, w1
   2b2ac:	and	w1, w1, #0xff
   2b2b0:	strb	w1, [x0]
   2b2b4:	ldr	w0, [sp, #36]
   2b2b8:	lsr	w2, w0, #16
   2b2bc:	ldr	x0, [sp, #40]
   2b2c0:	add	x0, x0, #0x1
   2b2c4:	ldr	x1, [sp, #8]
   2b2c8:	add	x0, x1, x0
   2b2cc:	and	w1, w2, #0xff
   2b2d0:	strb	w1, [x0]
   2b2d4:	ldr	w0, [sp, #36]
   2b2d8:	lsr	w2, w0, #8
   2b2dc:	ldr	x0, [sp, #40]
   2b2e0:	add	x0, x0, #0x2
   2b2e4:	ldr	x1, [sp, #8]
   2b2e8:	add	x0, x1, x0
   2b2ec:	and	w1, w2, #0xff
   2b2f0:	strb	w1, [x0]
   2b2f4:	ldr	x0, [sp, #40]
   2b2f8:	add	x0, x0, #0x3
   2b2fc:	ldr	x1, [sp, #8]
   2b300:	add	x0, x1, x0
   2b304:	ldrb	w1, [x0]
   2b308:	ldr	x0, [sp, #40]
   2b30c:	add	x0, x0, #0x3
   2b310:	ldr	x2, [sp, #8]
   2b314:	add	x0, x2, x0
   2b318:	and	w1, w1, #0x3
   2b31c:	and	w1, w1, #0xff
   2b320:	strb	w1, [x0]
   2b324:	ldr	x0, [sp, #40]
   2b328:	add	x0, x0, #0x3
   2b32c:	ldr	x1, [sp, #8]
   2b330:	add	x0, x1, x0
   2b334:	ldrb	w2, [x0]
   2b338:	ldr	w0, [sp, #36]
   2b33c:	and	w1, w0, #0xff
   2b340:	ldr	x0, [sp, #40]
   2b344:	add	x0, x0, #0x3
   2b348:	ldr	x3, [sp, #8]
   2b34c:	add	x0, x3, x0
   2b350:	orr	w1, w2, w1
   2b354:	and	w1, w1, #0xff
   2b358:	strb	w1, [x0]
   2b35c:	ldr	x0, [sp, #40]
   2b360:	add	x0, x0, #0x4
   2b364:	str	x0, [sp, #40]
   2b368:	ldr	x0, [sp, #40]
   2b36c:	add	x0, x0, #0x4
   2b370:	ldr	x1, [sp]
   2b374:	cmp	x1, x0
   2b378:	b.cs	2b18c <lzma_mode_is_supported@@XZ_5.0+0x104f4>  // b.hs, b.nlast
   2b37c:	ldr	x0, [sp, #40]
   2b380:	add	sp, sp, #0x30
   2b384:	ret
   2b388:	stp	x29, x30, [sp, #-48]!
   2b38c:	mov	x29, sp
   2b390:	str	x0, [sp, #40]
   2b394:	str	x1, [sp, #32]
   2b398:	str	x2, [sp, #24]
   2b39c:	strb	w3, [sp, #23]
   2b3a0:	ldrb	w7, [sp, #23]
   2b3a4:	mov	w6, #0x4                   	// #4
   2b3a8:	mov	x5, #0x4                   	// #4
   2b3ac:	mov	x4, #0x0                   	// #0
   2b3b0:	adrp	x0, 2b000 <lzma_mode_is_supported@@XZ_5.0+0x10368>
   2b3b4:	add	x3, x0, #0x16c
   2b3b8:	ldr	x2, [sp, #24]
   2b3bc:	ldr	x1, [sp, #32]
   2b3c0:	ldr	x0, [sp, #40]
   2b3c4:	bl	2a84c <lzma_mode_is_supported@@XZ_5.0+0xfbb4>
   2b3c8:	ldp	x29, x30, [sp], #48
   2b3cc:	ret
   2b3d0:	stp	x29, x30, [sp, #-48]!
   2b3d4:	mov	x29, sp
   2b3d8:	str	x0, [sp, #40]
   2b3dc:	str	x1, [sp, #32]
   2b3e0:	str	x2, [sp, #24]
   2b3e4:	mov	w3, #0x1                   	// #1
   2b3e8:	ldr	x2, [sp, #24]
   2b3ec:	ldr	x1, [sp, #32]
   2b3f0:	ldr	x0, [sp, #40]
   2b3f4:	bl	2b388 <lzma_mode_is_supported@@XZ_5.0+0x106f0>
   2b3f8:	ldp	x29, x30, [sp], #48
   2b3fc:	ret
   2b400:	stp	x29, x30, [sp, #-48]!
   2b404:	mov	x29, sp
   2b408:	str	x0, [sp, #40]
   2b40c:	str	x1, [sp, #32]
   2b410:	str	x2, [sp, #24]
   2b414:	mov	w3, #0x0                   	// #0
   2b418:	ldr	x2, [sp, #24]
   2b41c:	ldr	x1, [sp, #32]
   2b420:	ldr	x0, [sp, #40]
   2b424:	bl	2b388 <lzma_mode_is_supported@@XZ_5.0+0x106f0>
   2b428:	ldp	x29, x30, [sp], #48
   2b42c:	ret
   2b430:	sub	sp, sp, #0x80
   2b434:	str	x0, [sp, #24]
   2b438:	str	w1, [sp, #20]
   2b43c:	strb	w2, [sp, #19]
   2b440:	str	x3, [sp, #8]
   2b444:	str	x4, [sp]
   2b448:	str	xzr, [sp, #120]
   2b44c:	b	2b6f0 <lzma_mode_is_supported@@XZ_5.0+0x10a58>
   2b450:	ldr	x1, [sp, #8]
   2b454:	ldr	x0, [sp, #120]
   2b458:	add	x0, x1, x0
   2b45c:	ldrb	w0, [x0]
   2b460:	and	w0, w0, #0x1f
   2b464:	str	w0, [sp, #68]
   2b468:	adrp	x0, 32000 <lzma_mode_is_supported@@XZ_5.0+0x17368>
   2b46c:	add	x0, x0, #0x3d8
   2b470:	ldr	w1, [sp, #68]
   2b474:	ldr	w0, [x0, x1, lsl #2]
   2b478:	str	w0, [sp, #64]
   2b47c:	mov	w0, #0x5                   	// #5
   2b480:	str	w0, [sp, #116]
   2b484:	str	xzr, [sp, #104]
   2b488:	b	2b6d8 <lzma_mode_is_supported@@XZ_5.0+0x10a40>
   2b48c:	ldr	x0, [sp, #104]
   2b490:	mov	w1, w0
   2b494:	ldr	w0, [sp, #64]
   2b498:	lsr	w0, w0, w1
   2b49c:	and	w0, w0, #0x1
   2b4a0:	cmp	w0, #0x0
   2b4a4:	b.eq	2b6bc <lzma_mode_is_supported@@XZ_5.0+0x10a24>  // b.none
   2b4a8:	ldr	w0, [sp, #116]
   2b4ac:	lsr	w0, w0, #3
   2b4b0:	mov	w0, w0
   2b4b4:	str	x0, [sp, #56]
   2b4b8:	ldr	w0, [sp, #116]
   2b4bc:	and	w0, w0, #0x7
   2b4c0:	str	w0, [sp, #52]
   2b4c4:	str	xzr, [sp, #96]
   2b4c8:	str	xzr, [sp, #88]
   2b4cc:	b	2b518 <lzma_mode_is_supported@@XZ_5.0+0x10880>
   2b4d0:	ldr	x1, [sp, #120]
   2b4d4:	ldr	x0, [sp, #88]
   2b4d8:	add	x1, x1, x0
   2b4dc:	ldr	x0, [sp, #56]
   2b4e0:	add	x0, x1, x0
   2b4e4:	ldr	x1, [sp, #8]
   2b4e8:	add	x0, x1, x0
   2b4ec:	ldrb	w0, [x0]
   2b4f0:	and	x1, x0, #0xff
   2b4f4:	ldr	x0, [sp, #88]
   2b4f8:	lsl	w0, w0, #3
   2b4fc:	lsl	x0, x1, x0
   2b500:	ldr	x1, [sp, #96]
   2b504:	add	x0, x1, x0
   2b508:	str	x0, [sp, #96]
   2b50c:	ldr	x0, [sp, #88]
   2b510:	add	x0, x0, #0x1
   2b514:	str	x0, [sp, #88]
   2b518:	ldr	x0, [sp, #88]
   2b51c:	cmp	x0, #0x5
   2b520:	b.ls	2b4d0 <lzma_mode_is_supported@@XZ_5.0+0x10838>  // b.plast
   2b524:	ldr	w0, [sp, #52]
   2b528:	ldr	x1, [sp, #96]
   2b52c:	lsr	x0, x1, x0
   2b530:	str	x0, [sp, #40]
   2b534:	ldr	x0, [sp, #40]
   2b538:	lsr	x0, x0, #37
   2b53c:	and	x0, x0, #0xf
   2b540:	cmp	x0, #0x5
   2b544:	b.ne	2b6c0 <lzma_mode_is_supported@@XZ_5.0+0x10a28>  // b.any
   2b548:	ldr	x0, [sp, #40]
   2b54c:	lsr	x0, x0, #9
   2b550:	and	x0, x0, #0x7
   2b554:	cmp	x0, #0x0
   2b558:	b.ne	2b6c0 <lzma_mode_is_supported@@XZ_5.0+0x10a28>  // b.any
   2b55c:	ldr	x0, [sp, #40]
   2b560:	lsr	x0, x0, #13
   2b564:	and	w0, w0, #0xfffff
   2b568:	str	w0, [sp, #36]
   2b56c:	ldr	x0, [sp, #40]
   2b570:	lsr	x0, x0, #36
   2b574:	lsl	w0, w0, #20
   2b578:	and	w0, w0, #0x100000
   2b57c:	ldr	w1, [sp, #36]
   2b580:	orr	w0, w1, w0
   2b584:	str	w0, [sp, #36]
   2b588:	ldr	w0, [sp, #36]
   2b58c:	lsl	w0, w0, #4
   2b590:	str	w0, [sp, #36]
   2b594:	ldrb	w0, [sp, #19]
   2b598:	cmp	w0, #0x0
   2b59c:	b.eq	2b5c0 <lzma_mode_is_supported@@XZ_5.0+0x10928>  // b.none
   2b5a0:	ldr	x0, [sp, #120]
   2b5a4:	mov	w1, w0
   2b5a8:	ldr	w0, [sp, #20]
   2b5ac:	add	w0, w1, w0
   2b5b0:	ldr	w1, [sp, #36]
   2b5b4:	add	w0, w1, w0
   2b5b8:	str	w0, [sp, #84]
   2b5bc:	b	2b5dc <lzma_mode_is_supported@@XZ_5.0+0x10944>
   2b5c0:	ldr	x0, [sp, #120]
   2b5c4:	mov	w1, w0
   2b5c8:	ldr	w0, [sp, #20]
   2b5cc:	add	w0, w1, w0
   2b5d0:	ldr	w1, [sp, #36]
   2b5d4:	sub	w0, w1, w0
   2b5d8:	str	w0, [sp, #84]
   2b5dc:	ldr	w0, [sp, #84]
   2b5e0:	lsr	w0, w0, #4
   2b5e4:	str	w0, [sp, #84]
   2b5e8:	ldr	x1, [sp, #40]
   2b5ec:	mov	x0, #0xffff000000001fff    	// #-281474976702465
   2b5f0:	movk	x0, #0xffee, lsl #32
   2b5f4:	and	x0, x1, x0
   2b5f8:	str	x0, [sp, #40]
   2b5fc:	ldr	w0, [sp, #84]
   2b600:	lsl	x0, x0, #13
   2b604:	and	x0, x0, #0x1ffffe000
   2b608:	ldr	x1, [sp, #40]
   2b60c:	orr	x0, x1, x0
   2b610:	str	x0, [sp, #40]
   2b614:	ldr	w0, [sp, #84]
   2b618:	lsl	x0, x0, #16
   2b61c:	and	x0, x0, #0x1000000000
   2b620:	ldr	x1, [sp, #40]
   2b624:	orr	x0, x1, x0
   2b628:	str	x0, [sp, #40]
   2b62c:	ldr	w0, [sp, #52]
   2b630:	mov	w1, #0x1                   	// #1
   2b634:	lsl	w0, w1, w0
   2b638:	sub	w0, w0, #0x1
   2b63c:	sxtw	x0, w0
   2b640:	ldr	x1, [sp, #96]
   2b644:	and	x0, x1, x0
   2b648:	str	x0, [sp, #96]
   2b64c:	ldr	w0, [sp, #52]
   2b650:	ldr	x1, [sp, #40]
   2b654:	lsl	x0, x1, x0
   2b658:	ldr	x1, [sp, #96]
   2b65c:	orr	x0, x1, x0
   2b660:	str	x0, [sp, #96]
   2b664:	str	xzr, [sp, #72]
   2b668:	b	2b6ac <lzma_mode_is_supported@@XZ_5.0+0x10a14>
   2b66c:	ldr	x0, [sp, #72]
   2b670:	lsl	w0, w0, #3
   2b674:	ldr	x1, [sp, #96]
   2b678:	lsr	x2, x1, x0
   2b67c:	ldr	x1, [sp, #120]
   2b680:	ldr	x0, [sp, #72]
   2b684:	add	x1, x1, x0
   2b688:	ldr	x0, [sp, #56]
   2b68c:	add	x0, x1, x0
   2b690:	ldr	x1, [sp, #8]
   2b694:	add	x0, x1, x0
   2b698:	and	w1, w2, #0xff
   2b69c:	strb	w1, [x0]
   2b6a0:	ldr	x0, [sp, #72]
   2b6a4:	add	x0, x0, #0x1
   2b6a8:	str	x0, [sp, #72]
   2b6ac:	ldr	x0, [sp, #72]
   2b6b0:	cmp	x0, #0x5
   2b6b4:	b.ls	2b66c <lzma_mode_is_supported@@XZ_5.0+0x109d4>  // b.plast
   2b6b8:	b	2b6c0 <lzma_mode_is_supported@@XZ_5.0+0x10a28>
   2b6bc:	nop
   2b6c0:	ldr	x0, [sp, #104]
   2b6c4:	add	x0, x0, #0x1
   2b6c8:	str	x0, [sp, #104]
   2b6cc:	ldr	w0, [sp, #116]
   2b6d0:	add	w0, w0, #0x29
   2b6d4:	str	w0, [sp, #116]
   2b6d8:	ldr	x0, [sp, #104]
   2b6dc:	cmp	x0, #0x2
   2b6e0:	b.ls	2b48c <lzma_mode_is_supported@@XZ_5.0+0x107f4>  // b.plast
   2b6e4:	ldr	x0, [sp, #120]
   2b6e8:	add	x0, x0, #0x10
   2b6ec:	str	x0, [sp, #120]
   2b6f0:	ldr	x0, [sp, #120]
   2b6f4:	add	x0, x0, #0x10
   2b6f8:	ldr	x1, [sp]
   2b6fc:	cmp	x1, x0
   2b700:	b.cs	2b450 <lzma_mode_is_supported@@XZ_5.0+0x107b8>  // b.hs, b.nlast
   2b704:	ldr	x0, [sp, #120]
   2b708:	add	sp, sp, #0x80
   2b70c:	ret
   2b710:	stp	x29, x30, [sp, #-48]!
   2b714:	mov	x29, sp
   2b718:	str	x0, [sp, #40]
   2b71c:	str	x1, [sp, #32]
   2b720:	str	x2, [sp, #24]
   2b724:	strb	w3, [sp, #23]
   2b728:	ldrb	w7, [sp, #23]
   2b72c:	mov	w6, #0x10                  	// #16
   2b730:	mov	x5, #0x10                  	// #16
   2b734:	mov	x4, #0x0                   	// #0
   2b738:	adrp	x0, 2b000 <lzma_mode_is_supported@@XZ_5.0+0x10368>
   2b73c:	add	x3, x0, #0x430
   2b740:	ldr	x2, [sp, #24]
   2b744:	ldr	x1, [sp, #32]
   2b748:	ldr	x0, [sp, #40]
   2b74c:	bl	2a84c <lzma_mode_is_supported@@XZ_5.0+0xfbb4>
   2b750:	ldp	x29, x30, [sp], #48
   2b754:	ret
   2b758:	stp	x29, x30, [sp, #-48]!
   2b75c:	mov	x29, sp
   2b760:	str	x0, [sp, #40]
   2b764:	str	x1, [sp, #32]
   2b768:	str	x2, [sp, #24]
   2b76c:	mov	w3, #0x1                   	// #1
   2b770:	ldr	x2, [sp, #24]
   2b774:	ldr	x1, [sp, #32]
   2b778:	ldr	x0, [sp, #40]
   2b77c:	bl	2b710 <lzma_mode_is_supported@@XZ_5.0+0x10a78>
   2b780:	ldp	x29, x30, [sp], #48
   2b784:	ret
   2b788:	stp	x29, x30, [sp, #-48]!
   2b78c:	mov	x29, sp
   2b790:	str	x0, [sp, #40]
   2b794:	str	x1, [sp, #32]
   2b798:	str	x2, [sp, #24]
   2b79c:	mov	w3, #0x0                   	// #0
   2b7a0:	ldr	x2, [sp, #24]
   2b7a4:	ldr	x1, [sp, #32]
   2b7a8:	ldr	x0, [sp, #40]
   2b7ac:	bl	2b710 <lzma_mode_is_supported@@XZ_5.0+0x10a78>
   2b7b0:	ldp	x29, x30, [sp], #48
   2b7b4:	ret
   2b7b8:	sub	sp, sp, #0x30
   2b7bc:	str	x0, [sp, #24]
   2b7c0:	str	w1, [sp, #20]
   2b7c4:	strb	w2, [sp, #19]
   2b7c8:	str	x3, [sp, #8]
   2b7cc:	str	x4, [sp]
   2b7d0:	str	xzr, [sp, #40]
   2b7d4:	b	2b90c <lzma_mode_is_supported@@XZ_5.0+0x10c74>
   2b7d8:	ldr	x0, [sp, #40]
   2b7dc:	add	x0, x0, #0x3
   2b7e0:	ldr	x1, [sp, #8]
   2b7e4:	add	x0, x1, x0
   2b7e8:	ldrb	w0, [x0]
   2b7ec:	cmp	w0, #0xeb
   2b7f0:	b.ne	2b900 <lzma_mode_is_supported@@XZ_5.0+0x10c68>  // b.any
   2b7f4:	ldr	x0, [sp, #40]
   2b7f8:	add	x0, x0, #0x2
   2b7fc:	ldr	x1, [sp, #8]
   2b800:	add	x0, x1, x0
   2b804:	ldrb	w0, [x0]
   2b808:	lsl	w1, w0, #16
   2b80c:	ldr	x0, [sp, #40]
   2b810:	add	x0, x0, #0x1
   2b814:	ldr	x2, [sp, #8]
   2b818:	add	x0, x2, x0
   2b81c:	ldrb	w0, [x0]
   2b820:	lsl	w0, w0, #8
   2b824:	orr	w0, w1, w0
   2b828:	ldr	x2, [sp, #8]
   2b82c:	ldr	x1, [sp, #40]
   2b830:	add	x1, x2, x1
   2b834:	ldrb	w1, [x1]
   2b838:	orr	w0, w0, w1
   2b83c:	str	w0, [sp, #32]
   2b840:	ldr	w0, [sp, #32]
   2b844:	lsl	w0, w0, #2
   2b848:	str	w0, [sp, #32]
   2b84c:	ldrb	w0, [sp, #19]
   2b850:	cmp	w0, #0x0
   2b854:	b.eq	2b87c <lzma_mode_is_supported@@XZ_5.0+0x10be4>  // b.none
   2b858:	ldr	x0, [sp, #40]
   2b85c:	mov	w1, w0
   2b860:	ldr	w0, [sp, #20]
   2b864:	add	w1, w1, w0
   2b868:	ldr	w0, [sp, #32]
   2b86c:	add	w0, w1, w0
   2b870:	add	w0, w0, #0x8
   2b874:	str	w0, [sp, #36]
   2b878:	b	2b89c <lzma_mode_is_supported@@XZ_5.0+0x10c04>
   2b87c:	ldr	x0, [sp, #40]
   2b880:	mov	w1, w0
   2b884:	ldr	w0, [sp, #20]
   2b888:	add	w0, w1, w0
   2b88c:	ldr	w1, [sp, #32]
   2b890:	sub	w0, w1, w0
   2b894:	sub	w0, w0, #0x8
   2b898:	str	w0, [sp, #36]
   2b89c:	ldr	w0, [sp, #36]
   2b8a0:	lsr	w0, w0, #2
   2b8a4:	str	w0, [sp, #36]
   2b8a8:	ldr	w0, [sp, #36]
   2b8ac:	lsr	w2, w0, #16
   2b8b0:	ldr	x0, [sp, #40]
   2b8b4:	add	x0, x0, #0x2
   2b8b8:	ldr	x1, [sp, #8]
   2b8bc:	add	x0, x1, x0
   2b8c0:	and	w1, w2, #0xff
   2b8c4:	strb	w1, [x0]
   2b8c8:	ldr	w0, [sp, #36]
   2b8cc:	lsr	w2, w0, #8
   2b8d0:	ldr	x0, [sp, #40]
   2b8d4:	add	x0, x0, #0x1
   2b8d8:	ldr	x1, [sp, #8]
   2b8dc:	add	x0, x1, x0
   2b8e0:	and	w1, w2, #0xff
   2b8e4:	strb	w1, [x0]
   2b8e8:	ldr	x1, [sp, #8]
   2b8ec:	ldr	x0, [sp, #40]
   2b8f0:	add	x0, x1, x0
   2b8f4:	ldr	w1, [sp, #36]
   2b8f8:	and	w1, w1, #0xff
   2b8fc:	strb	w1, [x0]
   2b900:	ldr	x0, [sp, #40]
   2b904:	add	x0, x0, #0x4
   2b908:	str	x0, [sp, #40]
   2b90c:	ldr	x0, [sp, #40]
   2b910:	add	x0, x0, #0x4
   2b914:	ldr	x1, [sp]
   2b918:	cmp	x1, x0
   2b91c:	b.cs	2b7d8 <lzma_mode_is_supported@@XZ_5.0+0x10b40>  // b.hs, b.nlast
   2b920:	ldr	x0, [sp, #40]
   2b924:	add	sp, sp, #0x30
   2b928:	ret
   2b92c:	stp	x29, x30, [sp, #-48]!
   2b930:	mov	x29, sp
   2b934:	str	x0, [sp, #40]
   2b938:	str	x1, [sp, #32]
   2b93c:	str	x2, [sp, #24]
   2b940:	strb	w3, [sp, #23]
   2b944:	ldrb	w7, [sp, #23]
   2b948:	mov	w6, #0x4                   	// #4
   2b94c:	mov	x5, #0x4                   	// #4
   2b950:	mov	x4, #0x0                   	// #0
   2b954:	adrp	x0, 2b000 <lzma_mode_is_supported@@XZ_5.0+0x10368>
   2b958:	add	x3, x0, #0x7b8
   2b95c:	ldr	x2, [sp, #24]
   2b960:	ldr	x1, [sp, #32]
   2b964:	ldr	x0, [sp, #40]
   2b968:	bl	2a84c <lzma_mode_is_supported@@XZ_5.0+0xfbb4>
   2b96c:	ldp	x29, x30, [sp], #48
   2b970:	ret
   2b974:	stp	x29, x30, [sp, #-48]!
   2b978:	mov	x29, sp
   2b97c:	str	x0, [sp, #40]
   2b980:	str	x1, [sp, #32]
   2b984:	str	x2, [sp, #24]
   2b988:	mov	w3, #0x1                   	// #1
   2b98c:	ldr	x2, [sp, #24]
   2b990:	ldr	x1, [sp, #32]
   2b994:	ldr	x0, [sp, #40]
   2b998:	bl	2b92c <lzma_mode_is_supported@@XZ_5.0+0x10c94>
   2b99c:	ldp	x29, x30, [sp], #48
   2b9a0:	ret
   2b9a4:	stp	x29, x30, [sp, #-48]!
   2b9a8:	mov	x29, sp
   2b9ac:	str	x0, [sp, #40]
   2b9b0:	str	x1, [sp, #32]
   2b9b4:	str	x2, [sp, #24]
   2b9b8:	mov	w3, #0x0                   	// #0
   2b9bc:	ldr	x2, [sp, #24]
   2b9c0:	ldr	x1, [sp, #32]
   2b9c4:	ldr	x0, [sp, #40]
   2b9c8:	bl	2b92c <lzma_mode_is_supported@@XZ_5.0+0x10c94>
   2b9cc:	ldp	x29, x30, [sp], #48
   2b9d0:	ret
   2b9d4:	sub	sp, sp, #0x30
   2b9d8:	str	x0, [sp, #24]
   2b9dc:	str	w1, [sp, #20]
   2b9e0:	strb	w2, [sp, #19]
   2b9e4:	str	x3, [sp, #8]
   2b9e8:	str	x4, [sp]
   2b9ec:	str	xzr, [sp, #40]
   2b9f0:	b	2bbb4 <lzma_mode_is_supported@@XZ_5.0+0x10f1c>
   2b9f4:	ldr	x0, [sp, #40]
   2b9f8:	add	x0, x0, #0x1
   2b9fc:	ldr	x1, [sp, #8]
   2ba00:	add	x0, x1, x0
   2ba04:	ldrb	w0, [x0]
   2ba08:	and	w0, w0, #0xf8
   2ba0c:	cmp	w0, #0xf0
   2ba10:	b.ne	2bba8 <lzma_mode_is_supported@@XZ_5.0+0x10f10>  // b.any
   2ba14:	ldr	x0, [sp, #40]
   2ba18:	add	x0, x0, #0x3
   2ba1c:	ldr	x1, [sp, #8]
   2ba20:	add	x0, x1, x0
   2ba24:	ldrb	w0, [x0]
   2ba28:	and	w0, w0, #0xf8
   2ba2c:	cmp	w0, #0xf8
   2ba30:	b.ne	2bba8 <lzma_mode_is_supported@@XZ_5.0+0x10f10>  // b.any
   2ba34:	ldr	x0, [sp, #40]
   2ba38:	add	x0, x0, #0x1
   2ba3c:	ldr	x1, [sp, #8]
   2ba40:	add	x0, x1, x0
   2ba44:	ldrb	w0, [x0]
   2ba48:	lsl	w0, w0, #19
   2ba4c:	and	w1, w0, #0x380000
   2ba50:	ldr	x2, [sp, #8]
   2ba54:	ldr	x0, [sp, #40]
   2ba58:	add	x0, x2, x0
   2ba5c:	ldrb	w0, [x0]
   2ba60:	lsl	w0, w0, #11
   2ba64:	orr	w1, w1, w0
   2ba68:	ldr	x0, [sp, #40]
   2ba6c:	add	x0, x0, #0x3
   2ba70:	ldr	x2, [sp, #8]
   2ba74:	add	x0, x2, x0
   2ba78:	ldrb	w0, [x0]
   2ba7c:	lsl	w0, w0, #8
   2ba80:	and	w0, w0, #0x700
   2ba84:	orr	w0, w1, w0
   2ba88:	ldr	x1, [sp, #40]
   2ba8c:	add	x1, x1, #0x2
   2ba90:	ldr	x2, [sp, #8]
   2ba94:	add	x1, x2, x1
   2ba98:	ldrb	w1, [x1]
   2ba9c:	orr	w0, w0, w1
   2baa0:	str	w0, [sp, #32]
   2baa4:	ldr	w0, [sp, #32]
   2baa8:	lsl	w0, w0, #1
   2baac:	str	w0, [sp, #32]
   2bab0:	ldrb	w0, [sp, #19]
   2bab4:	cmp	w0, #0x0
   2bab8:	b.eq	2bae0 <lzma_mode_is_supported@@XZ_5.0+0x10e48>  // b.none
   2babc:	ldr	x0, [sp, #40]
   2bac0:	mov	w1, w0
   2bac4:	ldr	w0, [sp, #20]
   2bac8:	add	w1, w1, w0
   2bacc:	ldr	w0, [sp, #32]
   2bad0:	add	w0, w1, w0
   2bad4:	add	w0, w0, #0x4
   2bad8:	str	w0, [sp, #36]
   2badc:	b	2bb00 <lzma_mode_is_supported@@XZ_5.0+0x10e68>
   2bae0:	ldr	x0, [sp, #40]
   2bae4:	mov	w1, w0
   2bae8:	ldr	w0, [sp, #20]
   2baec:	add	w0, w1, w0
   2baf0:	ldr	w1, [sp, #32]
   2baf4:	sub	w0, w1, w0
   2baf8:	sub	w0, w0, #0x4
   2bafc:	str	w0, [sp, #36]
   2bb00:	ldr	w0, [sp, #36]
   2bb04:	lsr	w0, w0, #1
   2bb08:	str	w0, [sp, #36]
   2bb0c:	ldr	w0, [sp, #36]
   2bb10:	lsr	w0, w0, #19
   2bb14:	and	w0, w0, #0xff
   2bb18:	and	w0, w0, #0x7
   2bb1c:	and	w1, w0, #0xff
   2bb20:	ldr	x0, [sp, #40]
   2bb24:	add	x0, x0, #0x1
   2bb28:	ldr	x2, [sp, #8]
   2bb2c:	add	x0, x2, x0
   2bb30:	orr	w1, w1, #0xfffffff0
   2bb34:	and	w1, w1, #0xff
   2bb38:	strb	w1, [x0]
   2bb3c:	ldr	w0, [sp, #36]
   2bb40:	lsr	w2, w0, #11
   2bb44:	ldr	x1, [sp, #8]
   2bb48:	ldr	x0, [sp, #40]
   2bb4c:	add	x0, x1, x0
   2bb50:	and	w1, w2, #0xff
   2bb54:	strb	w1, [x0]
   2bb58:	ldr	w0, [sp, #36]
   2bb5c:	lsr	w0, w0, #8
   2bb60:	and	w1, w0, #0xff
   2bb64:	ldr	x0, [sp, #40]
   2bb68:	add	x0, x0, #0x3
   2bb6c:	ldr	x2, [sp, #8]
   2bb70:	add	x0, x2, x0
   2bb74:	orr	w1, w1, #0xfffffff8
   2bb78:	and	w1, w1, #0xff
   2bb7c:	strb	w1, [x0]
   2bb80:	ldr	x0, [sp, #40]
   2bb84:	add	x0, x0, #0x2
   2bb88:	ldr	x1, [sp, #8]
   2bb8c:	add	x0, x1, x0
   2bb90:	ldr	w1, [sp, #36]
   2bb94:	and	w1, w1, #0xff
   2bb98:	strb	w1, [x0]
   2bb9c:	ldr	x0, [sp, #40]
   2bba0:	add	x0, x0, #0x2
   2bba4:	str	x0, [sp, #40]
   2bba8:	ldr	x0, [sp, #40]
   2bbac:	add	x0, x0, #0x2
   2bbb0:	str	x0, [sp, #40]
   2bbb4:	ldr	x0, [sp, #40]
   2bbb8:	add	x0, x0, #0x4
   2bbbc:	ldr	x1, [sp]
   2bbc0:	cmp	x1, x0
   2bbc4:	b.cs	2b9f4 <lzma_mode_is_supported@@XZ_5.0+0x10d5c>  // b.hs, b.nlast
   2bbc8:	ldr	x0, [sp, #40]
   2bbcc:	add	sp, sp, #0x30
   2bbd0:	ret
   2bbd4:	stp	x29, x30, [sp, #-48]!
   2bbd8:	mov	x29, sp
   2bbdc:	str	x0, [sp, #40]
   2bbe0:	str	x1, [sp, #32]
   2bbe4:	str	x2, [sp, #24]
   2bbe8:	strb	w3, [sp, #23]
   2bbec:	ldrb	w7, [sp, #23]
   2bbf0:	mov	w6, #0x2                   	// #2
   2bbf4:	mov	x5, #0x4                   	// #4
   2bbf8:	mov	x4, #0x0                   	// #0
   2bbfc:	adrp	x0, 2b000 <lzma_mode_is_supported@@XZ_5.0+0x10368>
   2bc00:	add	x3, x0, #0x9d4
   2bc04:	ldr	x2, [sp, #24]
   2bc08:	ldr	x1, [sp, #32]
   2bc0c:	ldr	x0, [sp, #40]
   2bc10:	bl	2a84c <lzma_mode_is_supported@@XZ_5.0+0xfbb4>
   2bc14:	ldp	x29, x30, [sp], #48
   2bc18:	ret
   2bc1c:	stp	x29, x30, [sp, #-48]!
   2bc20:	mov	x29, sp
   2bc24:	str	x0, [sp, #40]
   2bc28:	str	x1, [sp, #32]
   2bc2c:	str	x2, [sp, #24]
   2bc30:	mov	w3, #0x1                   	// #1
   2bc34:	ldr	x2, [sp, #24]
   2bc38:	ldr	x1, [sp, #32]
   2bc3c:	ldr	x0, [sp, #40]
   2bc40:	bl	2bbd4 <lzma_mode_is_supported@@XZ_5.0+0x10f3c>
   2bc44:	ldp	x29, x30, [sp], #48
   2bc48:	ret
   2bc4c:	stp	x29, x30, [sp, #-48]!
   2bc50:	mov	x29, sp
   2bc54:	str	x0, [sp, #40]
   2bc58:	str	x1, [sp, #32]
   2bc5c:	str	x2, [sp, #24]
   2bc60:	mov	w3, #0x0                   	// #0
   2bc64:	ldr	x2, [sp, #24]
   2bc68:	ldr	x1, [sp, #32]
   2bc6c:	ldr	x0, [sp, #40]
   2bc70:	bl	2bbd4 <lzma_mode_is_supported@@XZ_5.0+0x10f3c>
   2bc74:	ldp	x29, x30, [sp], #48
   2bc78:	ret
   2bc7c:	sub	sp, sp, #0x30
   2bc80:	str	x0, [sp, #24]
   2bc84:	str	w1, [sp, #20]
   2bc88:	strb	w2, [sp, #19]
   2bc8c:	str	x3, [sp, #8]
   2bc90:	str	x4, [sp]
   2bc94:	str	xzr, [sp, #40]
   2bc98:	b	2be84 <lzma_mode_is_supported@@XZ_5.0+0x111ec>
   2bc9c:	ldr	x1, [sp, #8]
   2bca0:	ldr	x0, [sp, #40]
   2bca4:	add	x0, x1, x0
   2bca8:	ldrb	w0, [x0]
   2bcac:	cmp	w0, #0x40
   2bcb0:	b.ne	2bcd4 <lzma_mode_is_supported@@XZ_5.0+0x1103c>  // b.any
   2bcb4:	ldr	x0, [sp, #40]
   2bcb8:	add	x0, x0, #0x1
   2bcbc:	ldr	x1, [sp, #8]
   2bcc0:	add	x0, x1, x0
   2bcc4:	ldrb	w0, [x0]
   2bcc8:	and	w0, w0, #0xc0
   2bccc:	cmp	w0, #0x0
   2bcd0:	b.eq	2bd0c <lzma_mode_is_supported@@XZ_5.0+0x11074>  // b.none
   2bcd4:	ldr	x1, [sp, #8]
   2bcd8:	ldr	x0, [sp, #40]
   2bcdc:	add	x0, x1, x0
   2bce0:	ldrb	w0, [x0]
   2bce4:	cmp	w0, #0x7f
   2bce8:	b.ne	2be78 <lzma_mode_is_supported@@XZ_5.0+0x111e0>  // b.any
   2bcec:	ldr	x0, [sp, #40]
   2bcf0:	add	x0, x0, #0x1
   2bcf4:	ldr	x1, [sp, #8]
   2bcf8:	add	x0, x1, x0
   2bcfc:	ldrb	w0, [x0]
   2bd00:	and	w0, w0, #0xc0
   2bd04:	cmp	w0, #0xc0
   2bd08:	b.ne	2be78 <lzma_mode_is_supported@@XZ_5.0+0x111e0>  // b.any
   2bd0c:	ldr	x1, [sp, #8]
   2bd10:	ldr	x0, [sp, #40]
   2bd14:	add	x0, x1, x0
   2bd18:	ldrb	w0, [x0]
   2bd1c:	lsl	w1, w0, #24
   2bd20:	ldr	x0, [sp, #40]
   2bd24:	add	x0, x0, #0x1
   2bd28:	ldr	x2, [sp, #8]
   2bd2c:	add	x0, x2, x0
   2bd30:	ldrb	w0, [x0]
   2bd34:	lsl	w0, w0, #16
   2bd38:	orr	w1, w1, w0
   2bd3c:	ldr	x0, [sp, #40]
   2bd40:	add	x0, x0, #0x2
   2bd44:	ldr	x2, [sp, #8]
   2bd48:	add	x0, x2, x0
   2bd4c:	ldrb	w0, [x0]
   2bd50:	lsl	w0, w0, #8
   2bd54:	orr	w0, w1, w0
   2bd58:	ldr	x1, [sp, #40]
   2bd5c:	add	x1, x1, #0x3
   2bd60:	ldr	x2, [sp, #8]
   2bd64:	add	x1, x2, x1
   2bd68:	ldrb	w1, [x1]
   2bd6c:	orr	w0, w0, w1
   2bd70:	str	w0, [sp, #32]
   2bd74:	ldr	w0, [sp, #32]
   2bd78:	lsl	w0, w0, #2
   2bd7c:	str	w0, [sp, #32]
   2bd80:	ldrb	w0, [sp, #19]
   2bd84:	cmp	w0, #0x0
   2bd88:	b.eq	2bdac <lzma_mode_is_supported@@XZ_5.0+0x11114>  // b.none
   2bd8c:	ldr	x0, [sp, #40]
   2bd90:	mov	w1, w0
   2bd94:	ldr	w0, [sp, #20]
   2bd98:	add	w0, w1, w0
   2bd9c:	ldr	w1, [sp, #32]
   2bda0:	add	w0, w1, w0
   2bda4:	str	w0, [sp, #36]
   2bda8:	b	2bdc8 <lzma_mode_is_supported@@XZ_5.0+0x11130>
   2bdac:	ldr	x0, [sp, #40]
   2bdb0:	mov	w1, w0
   2bdb4:	ldr	w0, [sp, #20]
   2bdb8:	add	w0, w1, w0
   2bdbc:	ldr	w1, [sp, #32]
   2bdc0:	sub	w0, w1, w0
   2bdc4:	str	w0, [sp, #36]
   2bdc8:	ldr	w0, [sp, #36]
   2bdcc:	lsr	w0, w0, #2
   2bdd0:	str	w0, [sp, #36]
   2bdd4:	ldr	w0, [sp, #36]
   2bdd8:	lsr	w0, w0, #22
   2bddc:	and	w0, w0, #0x1
   2bde0:	neg	w0, w0
   2bde4:	lsl	w0, w0, #22
   2bde8:	and	w1, w0, #0x3fffffff
   2bdec:	ldr	w0, [sp, #36]
   2bdf0:	and	w0, w0, #0x3fffff
   2bdf4:	orr	w0, w1, w0
   2bdf8:	orr	w0, w0, #0x40000000
   2bdfc:	str	w0, [sp, #36]
   2be00:	ldr	w0, [sp, #36]
   2be04:	lsr	w2, w0, #24
   2be08:	ldr	x1, [sp, #8]
   2be0c:	ldr	x0, [sp, #40]
   2be10:	add	x0, x1, x0
   2be14:	and	w1, w2, #0xff
   2be18:	strb	w1, [x0]
   2be1c:	ldr	w0, [sp, #36]
   2be20:	lsr	w2, w0, #16
   2be24:	ldr	x0, [sp, #40]
   2be28:	add	x0, x0, #0x1
   2be2c:	ldr	x1, [sp, #8]
   2be30:	add	x0, x1, x0
   2be34:	and	w1, w2, #0xff
   2be38:	strb	w1, [x0]
   2be3c:	ldr	w0, [sp, #36]
   2be40:	lsr	w2, w0, #8
   2be44:	ldr	x0, [sp, #40]
   2be48:	add	x0, x0, #0x2
   2be4c:	ldr	x1, [sp, #8]
   2be50:	add	x0, x1, x0
   2be54:	and	w1, w2, #0xff
   2be58:	strb	w1, [x0]
   2be5c:	ldr	x0, [sp, #40]
   2be60:	add	x0, x0, #0x3
   2be64:	ldr	x1, [sp, #8]
   2be68:	add	x0, x1, x0
   2be6c:	ldr	w1, [sp, #36]
   2be70:	and	w1, w1, #0xff
   2be74:	strb	w1, [x0]
   2be78:	ldr	x0, [sp, #40]
   2be7c:	add	x0, x0, #0x4
   2be80:	str	x0, [sp, #40]
   2be84:	ldr	x0, [sp, #40]
   2be88:	add	x0, x0, #0x4
   2be8c:	ldr	x1, [sp]
   2be90:	cmp	x1, x0
   2be94:	b.cs	2bc9c <lzma_mode_is_supported@@XZ_5.0+0x11004>  // b.hs, b.nlast
   2be98:	ldr	x0, [sp, #40]
   2be9c:	add	sp, sp, #0x30
   2bea0:	ret
   2bea4:	stp	x29, x30, [sp, #-48]!
   2bea8:	mov	x29, sp
   2beac:	str	x0, [sp, #40]
   2beb0:	str	x1, [sp, #32]
   2beb4:	str	x2, [sp, #24]
   2beb8:	strb	w3, [sp, #23]
   2bebc:	ldrb	w7, [sp, #23]
   2bec0:	mov	w6, #0x4                   	// #4
   2bec4:	mov	x5, #0x4                   	// #4
   2bec8:	mov	x4, #0x0                   	// #0
   2becc:	adrp	x0, 2b000 <lzma_mode_is_supported@@XZ_5.0+0x10368>
   2bed0:	add	x3, x0, #0xc7c
   2bed4:	ldr	x2, [sp, #24]
   2bed8:	ldr	x1, [sp, #32]
   2bedc:	ldr	x0, [sp, #40]
   2bee0:	bl	2a84c <lzma_mode_is_supported@@XZ_5.0+0xfbb4>
   2bee4:	ldp	x29, x30, [sp], #48
   2bee8:	ret
   2beec:	stp	x29, x30, [sp, #-48]!
   2bef0:	mov	x29, sp
   2bef4:	str	x0, [sp, #40]
   2bef8:	str	x1, [sp, #32]
   2befc:	str	x2, [sp, #24]
   2bf00:	mov	w3, #0x1                   	// #1
   2bf04:	ldr	x2, [sp, #24]
   2bf08:	ldr	x1, [sp, #32]
   2bf0c:	ldr	x0, [sp, #40]
   2bf10:	bl	2bea4 <lzma_mode_is_supported@@XZ_5.0+0x1120c>
   2bf14:	ldp	x29, x30, [sp], #48
   2bf18:	ret
   2bf1c:	stp	x29, x30, [sp, #-48]!
   2bf20:	mov	x29, sp
   2bf24:	str	x0, [sp, #40]
   2bf28:	str	x1, [sp, #32]
   2bf2c:	str	x2, [sp, #24]
   2bf30:	mov	w3, #0x0                   	// #0
   2bf34:	ldr	x2, [sp, #24]
   2bf38:	ldr	x1, [sp, #32]
   2bf3c:	ldr	x0, [sp, #40]
   2bf40:	bl	2bea4 <lzma_mode_is_supported@@XZ_5.0+0x1120c>
   2bf44:	ldp	x29, x30, [sp], #48
   2bf48:	ret

Disassembly of section .fini:

000000000002bf4c <.fini>:
   2bf4c:	stp	x29, x30, [sp, #-16]!
   2bf50:	mov	x29, sp
   2bf54:	ldp	x29, x30, [sp], #16
   2bf58:	ret
