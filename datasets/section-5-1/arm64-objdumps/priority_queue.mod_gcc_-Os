
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//priority_queue.mod_gcc_-Os:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_priority_queue_top-0x38>:
   0:	ldr	x3, [x0]
   4:	ldr	x4, [x0, #32]
   8:	mov	x0, #0x0                   	// #0
   c:	madd	x1, x1, x3, x4
  10:	madd	x2, x2, x3, x4
  14:	cmp	x3, x0
  18:	b.ne	20 <grub_priority_queue_top-0x18>  // b.any
  1c:	ret
  20:	ldrb	w5, [x2, x0]
  24:	ldrb	w4, [x1, x0]
  28:	strb	w5, [x1, x0]
  2c:	strb	w4, [x2, x0]
  30:	add	x0, x0, #0x1
  34:	b	14 <grub_priority_queue_top-0x24>

0000000000000038 <grub_priority_queue_top>:
  38:	ldr	x1, [x0, #16]
  3c:	cbz	x1, 48 <grub_priority_queue_top+0x10>
  40:	ldr	x0, [x0, #32]
  44:	ret
  48:	mov	x0, #0x0                   	// #0
  4c:	b	44 <grub_priority_queue_top+0xc>

0000000000000050 <grub_priority_queue_destroy>:
  50:	stp	x29, x30, [sp, #-32]!
  54:	mov	x29, sp
  58:	str	x19, [sp, #16]
  5c:	mov	x19, x0
  60:	ldr	x0, [x0, #32]
  64:	bl	0 <grub_free>
  68:	mov	x0, x19
  6c:	ldr	x19, [sp, #16]
  70:	ldp	x29, x30, [sp], #32
  74:	b	0 <grub_free>

0000000000000078 <grub_priority_queue_new>:
  78:	stp	x29, x30, [sp, #-48]!
  7c:	mov	x29, sp
  80:	stp	x19, x20, [sp, #16]
  84:	stp	x21, x22, [sp, #32]
  88:	mov	x21, x0
  8c:	mov	x22, x1
  90:	lsl	x0, x0, #3
  94:	bl	0 <grub_malloc>
  98:	cbz	x0, e0 <grub_priority_queue_new+0x68>
  9c:	mov	x20, x0
  a0:	mov	x0, #0x28                  	// #40
  a4:	bl	0 <grub_malloc>
  a8:	mov	x19, x0
  ac:	cbnz	x0, cc <grub_priority_queue_new+0x54>
  b0:	mov	x0, x20
  b4:	bl	0 <grub_free>
  b8:	mov	x0, x19
  bc:	ldp	x19, x20, [sp, #16]
  c0:	ldp	x21, x22, [sp, #32]
  c4:	ldp	x29, x30, [sp], #48
  c8:	ret
  cc:	mov	x0, #0x8                   	// #8
  d0:	stp	x21, x0, [x19]
  d4:	stp	xzr, x22, [x19, #16]
  d8:	str	x20, [x19, #32]
  dc:	b	b8 <grub_priority_queue_new+0x40>
  e0:	mov	x19, #0x0                   	// #0
  e4:	b	b8 <grub_priority_queue_new+0x40>

00000000000000e8 <grub_priority_queue_push>:
  e8:	stp	x29, x30, [sp, #-48]!
  ec:	mov	x29, sp
  f0:	stp	x19, x20, [sp, #16]
  f4:	mov	x19, x0
  f8:	mov	x20, x1
  fc:	ldp	x1, x0, [x0, #8]
 100:	str	x21, [sp, #32]
 104:	cmp	x0, x1
 108:	b.ne	150 <grub_priority_queue_push+0x68>  // b.any
 10c:	ldr	x1, [x19]
 110:	mul	x1, x0, x1
 114:	ldr	x0, [x19, #32]
 118:	lsl	x1, x1, #1
 11c:	bl	0 <grub_realloc>
 120:	cbnz	x0, 140 <grub_priority_queue_push+0x58>
 124:	adrp	x0, 0 <grub_priority_queue_top-0x38>
 128:	ldr	x0, [x0]
 12c:	ldr	w0, [x0]
 130:	ldp	x19, x20, [sp, #16]
 134:	ldr	x21, [sp, #32]
 138:	ldp	x29, x30, [sp], #48
 13c:	ret
 140:	ldr	x1, [x19, #8]
 144:	str	x0, [x19, #32]
 148:	lsl	x1, x1, #1
 14c:	str	x1, [x19, #8]
 150:	ldr	x2, [x19]
 154:	ldr	x0, [x19, #16]
 158:	ldr	x3, [x19, #32]
 15c:	add	x1, x0, #0x1
 160:	str	x1, [x19, #16]
 164:	mov	x1, x20
 168:	madd	x0, x0, x2, x3
 16c:	bl	0 <grub_memmove>
 170:	ldr	x20, [x19, #16]
 174:	sub	x20, x20, #0x1
 178:	cbz	x20, 1a0 <grub_priority_queue_push+0xb8>
 17c:	ldp	x3, x0, [x19, #24]
 180:	sub	x21, x20, #0x1
 184:	ldr	x2, [x19]
 188:	lsr	x21, x21, #1
 18c:	madd	x1, x21, x2, x0
 190:	madd	x0, x20, x2, x0
 194:	blr	x3
 198:	cmp	w0, #0x0
 19c:	b.gt	1a8 <grub_priority_queue_push+0xc0>
 1a0:	mov	w0, #0x0                   	// #0
 1a4:	b	130 <grub_priority_queue_push+0x48>
 1a8:	mov	x1, x20
 1ac:	mov	x2, x21
 1b0:	mov	x0, x19
 1b4:	mov	x20, x21
 1b8:	bl	0 <grub_priority_queue_top-0x38>
 1bc:	b	178 <grub_priority_queue_push+0x90>
	...

00000000000001c8 <grub_priority_queue_pop>:
 1c8:	stp	x29, x30, [sp, #-48]!
 1cc:	mov	x1, #0x0                   	// #0
 1d0:	mov	x29, sp
 1d4:	ldr	x2, [x0, #16]
 1d8:	stp	x19, x20, [sp, #16]
 1dc:	mov	x19, x0
 1e0:	sub	x2, x2, #0x1
 1e4:	stp	x21, x22, [sp, #32]
 1e8:	bl	0 <grub_priority_queue_top-0x38>
 1ec:	ldr	x0, [x19, #16]
 1f0:	mov	x22, #0x0                   	// #0
 1f4:	sub	x0, x0, #0x1
 1f8:	str	x0, [x19, #16]
 1fc:	ldr	x0, [x19, #16]
 200:	lsl	x20, x22, #1
 204:	add	x21, x20, #0x1
 208:	cmp	x0, x21
 20c:	b.ls	298 <grub_priority_queue_pop+0xd0>  // b.plast
 210:	ldp	x3, x0, [x19, #24]
 214:	add	x20, x20, #0x2
 218:	ldr	x2, [x19]
 21c:	madd	x1, x22, x2, x0
 220:	madd	x0, x2, x21, x0
 224:	blr	x3
 228:	cmp	w0, #0x0
 22c:	b.le	270 <grub_priority_queue_pop+0xa8>
 230:	ldr	x0, [x19, #16]
 234:	cmp	x0, x20
 238:	b.ls	258 <grub_priority_queue_pop+0x90>  // b.plast
 23c:	ldp	x3, x0, [x19, #24]
 240:	ldr	x2, [x19]
 244:	madd	x1, x2, x20, x0
 248:	madd	x0, x2, x21, x0
 24c:	blr	x3
 250:	cmp	w0, #0x0
 254:	csel	x21, x21, x20, gt
 258:	mov	x1, x22
 25c:	mov	x2, x21
 260:	mov	x0, x19
 264:	mov	x22, x21
 268:	bl	0 <grub_priority_queue_top-0x38>
 26c:	b	1fc <grub_priority_queue_pop+0x34>
 270:	ldr	x0, [x19, #16]
 274:	cmp	x0, x20
 278:	b.ls	298 <grub_priority_queue_pop+0xd0>  // b.plast
 27c:	ldp	x3, x0, [x19, #24]
 280:	ldr	x2, [x19]
 284:	madd	x1, x22, x2, x0
 288:	madd	x0, x2, x20, x0
 28c:	blr	x3
 290:	cmp	w0, #0x0
 294:	b.gt	230 <grub_priority_queue_pop+0x68>
 298:	ldp	x19, x20, [sp, #16]
 29c:	ldp	x21, x22, [sp, #32]
 2a0:	ldp	x29, x30, [sp], #48
 2a4:	ret
