
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//dircolors_clang_-O1:     file format elf64-littleaarch64


Disassembly of section .init:

00000000004014b0 <.init>:
  4014b0:	stp	x29, x30, [sp, #-16]!
  4014b4:	mov	x29, sp
  4014b8:	bl	401880 <setlocale@plt+0x60>
  4014bc:	ldp	x29, x30, [sp], #16
  4014c0:	ret

Disassembly of section .plt:

00000000004014d0 <mbrtowc@plt-0x20>:
  4014d0:	stp	x16, x30, [sp, #-16]!
  4014d4:	adrp	x16, 417000 <_obstack_memory_used@@Base+0x11e64>
  4014d8:	ldr	x17, [x16, #4088]
  4014dc:	add	x16, x16, #0xff8
  4014e0:	br	x17
  4014e4:	nop
  4014e8:	nop
  4014ec:	nop

00000000004014f0 <mbrtowc@plt>:
  4014f0:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  4014f4:	ldr	x17, [x16]
  4014f8:	add	x16, x16, #0x0
  4014fc:	br	x17

0000000000401500 <memcpy@plt>:
  401500:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401504:	ldr	x17, [x16, #8]
  401508:	add	x16, x16, #0x8
  40150c:	br	x17

0000000000401510 <_exit@plt>:
  401510:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401514:	ldr	x17, [x16, #16]
  401518:	add	x16, x16, #0x10
  40151c:	br	x17

0000000000401520 <fwrite_unlocked@plt>:
  401520:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401524:	ldr	x17, [x16, #24]
  401528:	add	x16, x16, #0x18
  40152c:	br	x17

0000000000401530 <strlen@plt>:
  401530:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401534:	ldr	x17, [x16, #32]
  401538:	add	x16, x16, #0x20
  40153c:	br	x17

0000000000401540 <exit@plt>:
  401540:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401544:	ldr	x17, [x16, #40]
  401548:	add	x16, x16, #0x28
  40154c:	br	x17

0000000000401550 <error@plt>:
  401550:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401554:	ldr	x17, [x16, #48]
  401558:	add	x16, x16, #0x30
  40155c:	br	x17

0000000000401560 <ferror_unlocked@plt>:
  401560:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401564:	ldr	x17, [x16, #56]
  401568:	add	x16, x16, #0x38
  40156c:	br	x17

0000000000401570 <__cxa_atexit@plt>:
  401570:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401574:	ldr	x17, [x16, #64]
  401578:	add	x16, x16, #0x40
  40157c:	br	x17

0000000000401580 <lseek@plt>:
  401580:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401584:	ldr	x17, [x16, #72]
  401588:	add	x16, x16, #0x48
  40158c:	br	x17

0000000000401590 <__fpending@plt>:
  401590:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401594:	ldr	x17, [x16, #80]
  401598:	add	x16, x16, #0x50
  40159c:	br	x17

00000000004015a0 <fileno@plt>:
  4015a0:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  4015a4:	ldr	x17, [x16, #88]
  4015a8:	add	x16, x16, #0x58
  4015ac:	br	x17

00000000004015b0 <fclose@plt>:
  4015b0:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  4015b4:	ldr	x17, [x16, #96]
  4015b8:	add	x16, x16, #0x60
  4015bc:	br	x17

00000000004015c0 <nl_langinfo@plt>:
  4015c0:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  4015c4:	ldr	x17, [x16, #104]
  4015c8:	add	x16, x16, #0x68
  4015cc:	br	x17

00000000004015d0 <malloc@plt>:
  4015d0:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  4015d4:	ldr	x17, [x16, #112]
  4015d8:	add	x16, x16, #0x70
  4015dc:	br	x17

00000000004015e0 <open@plt>:
  4015e0:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  4015e4:	ldr	x17, [x16, #120]
  4015e8:	add	x16, x16, #0x78
  4015ec:	br	x17

00000000004015f0 <strncmp@plt>:
  4015f0:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  4015f4:	ldr	x17, [x16, #128]
  4015f8:	add	x16, x16, #0x80
  4015fc:	br	x17

0000000000401600 <bindtextdomain@plt>:
  401600:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401604:	ldr	x17, [x16, #136]
  401608:	add	x16, x16, #0x88
  40160c:	br	x17

0000000000401610 <__libc_start_main@plt>:
  401610:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401614:	ldr	x17, [x16, #144]
  401618:	add	x16, x16, #0x90
  40161c:	br	x17

0000000000401620 <__printf_chk@plt>:
  401620:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401624:	ldr	x17, [x16, #152]
  401628:	add	x16, x16, #0x98
  40162c:	br	x17

0000000000401630 <memset@plt>:
  401630:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401634:	ldr	x17, [x16, #160]
  401638:	add	x16, x16, #0xa0
  40163c:	br	x17

0000000000401640 <calloc@plt>:
  401640:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401644:	ldr	x17, [x16, #168]
  401648:	add	x16, x16, #0xa8
  40164c:	br	x17

0000000000401650 <bcmp@plt>:
  401650:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401654:	ldr	x17, [x16, #176]
  401658:	add	x16, x16, #0xb0
  40165c:	br	x17

0000000000401660 <realloc@plt>:
  401660:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401664:	ldr	x17, [x16, #184]
  401668:	add	x16, x16, #0xb8
  40166c:	br	x17

0000000000401670 <close@plt>:
  401670:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401674:	ldr	x17, [x16, #192]
  401678:	add	x16, x16, #0xc0
  40167c:	br	x17

0000000000401680 <strrchr@plt>:
  401680:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401684:	ldr	x17, [x16, #200]
  401688:	add	x16, x16, #0xc8
  40168c:	br	x17

0000000000401690 <__gmon_start__@plt>:
  401690:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401694:	ldr	x17, [x16, #208]
  401698:	add	x16, x16, #0xd0
  40169c:	br	x17

00000000004016a0 <abort@plt>:
  4016a0:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  4016a4:	ldr	x17, [x16, #216]
  4016a8:	add	x16, x16, #0xd8
  4016ac:	br	x17

00000000004016b0 <mbsinit@plt>:
  4016b0:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  4016b4:	ldr	x17, [x16, #224]
  4016b8:	add	x16, x16, #0xe0
  4016bc:	br	x17

00000000004016c0 <puts@plt>:
  4016c0:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  4016c4:	ldr	x17, [x16, #232]
  4016c8:	add	x16, x16, #0xe8
  4016cc:	br	x17

00000000004016d0 <textdomain@plt>:
  4016d0:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  4016d4:	ldr	x17, [x16, #240]
  4016d8:	add	x16, x16, #0xf0
  4016dc:	br	x17

00000000004016e0 <getopt_long@plt>:
  4016e0:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  4016e4:	ldr	x17, [x16, #248]
  4016e8:	add	x16, x16, #0xf8
  4016ec:	br	x17

00000000004016f0 <__fprintf_chk@plt>:
  4016f0:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  4016f4:	ldr	x17, [x16, #256]
  4016f8:	add	x16, x16, #0x100
  4016fc:	br	x17

0000000000401700 <strcmp@plt>:
  401700:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401704:	ldr	x17, [x16, #264]
  401708:	add	x16, x16, #0x108
  40170c:	br	x17

0000000000401710 <__ctype_b_loc@plt>:
  401710:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401714:	ldr	x17, [x16, #272]
  401718:	add	x16, x16, #0x110
  40171c:	br	x17

0000000000401720 <fseeko@plt>:
  401720:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401724:	ldr	x17, [x16, #280]
  401728:	add	x16, x16, #0x118
  40172c:	br	x17

0000000000401730 <getline@plt>:
  401730:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401734:	ldr	x17, [x16, #288]
  401738:	add	x16, x16, #0x120
  40173c:	br	x17

0000000000401740 <free@plt>:
  401740:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401744:	ldr	x17, [x16, #296]
  401748:	add	x16, x16, #0x128
  40174c:	br	x17

0000000000401750 <__ctype_get_mb_cur_max@plt>:
  401750:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401754:	ldr	x17, [x16, #304]
  401758:	add	x16, x16, #0x130
  40175c:	br	x17

0000000000401760 <freopen@plt>:
  401760:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401764:	ldr	x17, [x16, #312]
  401768:	add	x16, x16, #0x138
  40176c:	br	x17

0000000000401770 <strndup@plt>:
  401770:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401774:	ldr	x17, [x16, #320]
  401778:	add	x16, x16, #0x140
  40177c:	br	x17

0000000000401780 <fwrite@plt>:
  401780:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401784:	ldr	x17, [x16, #328]
  401788:	add	x16, x16, #0x148
  40178c:	br	x17

0000000000401790 <fnmatch@plt>:
  401790:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401794:	ldr	x17, [x16, #336]
  401798:	add	x16, x16, #0x150
  40179c:	br	x17

00000000004017a0 <fflush@plt>:
  4017a0:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  4017a4:	ldr	x17, [x16, #344]
  4017a8:	add	x16, x16, #0x158
  4017ac:	br	x17

00000000004017b0 <dcgettext@plt>:
  4017b0:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  4017b4:	ldr	x17, [x16, #352]
  4017b8:	add	x16, x16, #0x160
  4017bc:	br	x17

00000000004017c0 <fputs_unlocked@plt>:
  4017c0:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  4017c4:	ldr	x17, [x16, #360]
  4017c8:	add	x16, x16, #0x168
  4017cc:	br	x17

00000000004017d0 <__freading@plt>:
  4017d0:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  4017d4:	ldr	x17, [x16, #368]
  4017d8:	add	x16, x16, #0x170
  4017dc:	br	x17

00000000004017e0 <dup2@plt>:
  4017e0:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  4017e4:	ldr	x17, [x16, #376]
  4017e8:	add	x16, x16, #0x178
  4017ec:	br	x17

00000000004017f0 <iswprint@plt>:
  4017f0:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  4017f4:	ldr	x17, [x16, #384]
  4017f8:	add	x16, x16, #0x180
  4017fc:	br	x17

0000000000401800 <__errno_location@plt>:
  401800:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401804:	ldr	x17, [x16, #392]
  401808:	add	x16, x16, #0x188
  40180c:	br	x17

0000000000401810 <getenv@plt>:
  401810:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401814:	ldr	x17, [x16, #400]
  401818:	add	x16, x16, #0x190
  40181c:	br	x17

0000000000401820 <setlocale@plt>:
  401820:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401824:	ldr	x17, [x16, #408]
  401828:	add	x16, x16, #0x198
  40182c:	br	x17

Disassembly of section .text:

0000000000401830 <_obstack_begin@@Base-0x364c>:
  401830:	mov	x29, #0x0                   	// #0
  401834:	mov	x30, #0x0                   	// #0
  401838:	mov	x5, x0
  40183c:	ldr	x1, [sp]
  401840:	add	x2, sp, #0x8
  401844:	mov	x6, sp
  401848:	movz	x0, #0x0, lsl #48
  40184c:	movk	x0, #0x0, lsl #32
  401850:	movk	x0, #0x40, lsl #16
  401854:	movk	x0, #0x1ba0
  401858:	movz	x3, #0x0, lsl #48
  40185c:	movk	x3, #0x0, lsl #32
  401860:	movk	x3, #0x40, lsl #16
  401864:	movk	x3, #0x54b8
  401868:	movz	x4, #0x0, lsl #48
  40186c:	movk	x4, #0x0, lsl #32
  401870:	movk	x4, #0x40, lsl #16
  401874:	movk	x4, #0x5538
  401878:	bl	401610 <__libc_start_main@plt>
  40187c:	bl	4016a0 <abort@plt>
  401880:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x11e64>
  401884:	ldr	x0, [x0, #4064]
  401888:	cbz	x0, 401890 <setlocale@plt+0x70>
  40188c:	b	401690 <__gmon_start__@plt>
  401890:	ret
  401894:	nop
  401898:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x12e64>
  40189c:	add	x0, x0, #0x220
  4018a0:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x12e64>
  4018a4:	add	x1, x1, #0x220
  4018a8:	cmp	x1, x0
  4018ac:	b.eq	4018c4 <setlocale@plt+0xa4>  // b.none
  4018b0:	adrp	x1, 405000 <_obstack_newchunk@@Base+0x9c>
  4018b4:	ldr	x1, [x1, #1384]
  4018b8:	cbz	x1, 4018c4 <setlocale@plt+0xa4>
  4018bc:	mov	x16, x1
  4018c0:	br	x16
  4018c4:	ret
  4018c8:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x12e64>
  4018cc:	add	x0, x0, #0x220
  4018d0:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x12e64>
  4018d4:	add	x1, x1, #0x220
  4018d8:	sub	x1, x1, x0
  4018dc:	lsr	x2, x1, #63
  4018e0:	add	x1, x2, x1, asr #3
  4018e4:	cmp	xzr, x1, asr #1
  4018e8:	asr	x1, x1, #1
  4018ec:	b.eq	401904 <setlocale@plt+0xe4>  // b.none
  4018f0:	adrp	x2, 405000 <_obstack_newchunk@@Base+0x9c>
  4018f4:	ldr	x2, [x2, #1392]
  4018f8:	cbz	x2, 401904 <setlocale@plt+0xe4>
  4018fc:	mov	x16, x2
  401900:	br	x16
  401904:	ret
  401908:	stp	x29, x30, [sp, #-32]!
  40190c:	mov	x29, sp
  401910:	str	x19, [sp, #16]
  401914:	adrp	x19, 418000 <_obstack_memory_used@@Base+0x12e64>
  401918:	ldrb	w0, [x19, #592]
  40191c:	cbnz	w0, 40192c <setlocale@plt+0x10c>
  401920:	bl	401898 <setlocale@plt+0x78>
  401924:	mov	w0, #0x1                   	// #1
  401928:	strb	w0, [x19, #592]
  40192c:	ldr	x19, [sp, #16]
  401930:	ldp	x29, x30, [sp], #32
  401934:	ret
  401938:	b	4018c8 <setlocale@plt+0xa8>
  40193c:	stp	x29, x30, [sp, #-32]!
  401940:	stp	x20, x19, [sp, #16]
  401944:	mov	w19, w0
  401948:	mov	x29, sp
  40194c:	cbnz	w0, 4019f8 <setlocale@plt+0x1d8>
  401950:	adrp	x1, 406000 <_obstack_memory_used@@Base+0xe64>
  401954:	add	x1, x1, #0xa5f
  401958:	mov	w2, #0x5                   	// #5
  40195c:	mov	x0, xzr
  401960:	bl	4017b0 <dcgettext@plt>
  401964:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x12e64>
  401968:	ldr	x2, [x8, #704]
  40196c:	mov	x1, x0
  401970:	mov	w0, #0x1                   	// #1
  401974:	bl	401620 <__printf_chk@plt>
  401978:	adrp	x1, 406000 <_obstack_memory_used@@Base+0xe64>
  40197c:	add	x1, x1, #0xa7d
  401980:	mov	w2, #0x5                   	// #5
  401984:	mov	x0, xzr
  401988:	bl	4017b0 <dcgettext@plt>
  40198c:	adrp	x20, 418000 <_obstack_memory_used@@Base+0x12e64>
  401990:	ldr	x1, [x20, #568]
  401994:	bl	4017c0 <fputs_unlocked@plt>
  401998:	adrp	x1, 406000 <_obstack_memory_used@@Base+0xe64>
  40199c:	add	x1, x1, #0xb8f
  4019a0:	mov	w2, #0x5                   	// #5
  4019a4:	mov	x0, xzr
  4019a8:	bl	4017b0 <dcgettext@plt>
  4019ac:	ldr	x1, [x20, #568]
  4019b0:	bl	4017c0 <fputs_unlocked@plt>
  4019b4:	adrp	x1, 406000 <_obstack_memory_used@@Base+0xe64>
  4019b8:	add	x1, x1, #0xbbc
  4019bc:	mov	w2, #0x5                   	// #5
  4019c0:	mov	x0, xzr
  4019c4:	bl	4017b0 <dcgettext@plt>
  4019c8:	ldr	x1, [x20, #568]
  4019cc:	bl	4017c0 <fputs_unlocked@plt>
  4019d0:	adrp	x1, 406000 <_obstack_memory_used@@Base+0xe64>
  4019d4:	add	x1, x1, #0xbf2
  4019d8:	mov	w2, #0x5                   	// #5
  4019dc:	mov	x0, xzr
  4019e0:	bl	4017b0 <dcgettext@plt>
  4019e4:	ldr	x1, [x20, #568]
  4019e8:	bl	4017c0 <fputs_unlocked@plt>
  4019ec:	bl	401a34 <setlocale@plt+0x214>
  4019f0:	mov	w0, w19
  4019f4:	bl	401540 <exit@plt>
  4019f8:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x12e64>
  4019fc:	ldr	x20, [x8, #552]
  401a00:	adrp	x1, 406000 <_obstack_memory_used@@Base+0xe64>
  401a04:	add	x1, x1, #0xa38
  401a08:	mov	w2, #0x5                   	// #5
  401a0c:	mov	x0, xzr
  401a10:	bl	4017b0 <dcgettext@plt>
  401a14:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x12e64>
  401a18:	ldr	x3, [x8, #704]
  401a1c:	mov	x2, x0
  401a20:	mov	w1, #0x1                   	// #1
  401a24:	mov	x0, x20
  401a28:	bl	4016f0 <__fprintf_chk@plt>
  401a2c:	mov	w0, w19
  401a30:	bl	401540 <exit@plt>
  401a34:	sub	sp, sp, #0xa0
  401a38:	adrp	x8, 406000 <_obstack_memory_used@@Base+0xe64>
  401a3c:	add	x8, x8, #0x768
  401a40:	ldp	q0, q4, [x8]
  401a44:	ldp	q1, q2, [x8, #48]
  401a48:	stp	x20, x19, [sp, #144]
  401a4c:	adrp	x19, 406000 <_obstack_memory_used@@Base+0xe64>
  401a50:	str	q0, [sp]
  401a54:	ldr	q0, [x8, #32]
  401a58:	str	q1, [sp, #48]
  401a5c:	ldp	q3, q1, [x8, #80]
  401a60:	ldr	x1, [sp]
  401a64:	str	x21, [sp, #128]
  401a68:	add	x19, x19, #0xcd0
  401a6c:	mov	x21, sp
  401a70:	stp	x29, x30, [sp, #112]
  401a74:	add	x29, sp, #0x70
  401a78:	stp	q2, q3, [sp, #64]
  401a7c:	str	q1, [sp, #96]
  401a80:	stp	q4, q0, [sp, #16]
  401a84:	cbz	x1, 401aa4 <setlocale@plt+0x284>
  401a88:	adrp	x20, 406000 <_obstack_memory_used@@Base+0xe64>
  401a8c:	add	x20, x20, #0xcd0
  401a90:	mov	x0, x20
  401a94:	bl	401700 <strcmp@plt>
  401a98:	cbz	w0, 401aa4 <setlocale@plt+0x284>
  401a9c:	ldr	x1, [x21, #16]!
  401aa0:	cbnz	x1, 401a90 <setlocale@plt+0x270>
  401aa4:	ldr	x8, [x21, #8]
  401aa8:	adrp	x1, 406000 <_obstack_memory_used@@Base+0xe64>
  401aac:	add	x1, x1, #0xe92
  401ab0:	mov	w2, #0x5                   	// #5
  401ab4:	cmp	x8, #0x0
  401ab8:	mov	x0, xzr
  401abc:	csel	x20, x19, x8, eq  // eq = none
  401ac0:	bl	4017b0 <dcgettext@plt>
  401ac4:	adrp	x2, 406000 <_obstack_memory_used@@Base+0xe64>
  401ac8:	adrp	x3, 406000 <_obstack_memory_used@@Base+0xe64>
  401acc:	mov	x1, x0
  401ad0:	add	x2, x2, #0xcf0
  401ad4:	add	x3, x3, #0xea9
  401ad8:	mov	w0, #0x1                   	// #1
  401adc:	bl	401620 <__printf_chk@plt>
  401ae0:	mov	w0, #0x5                   	// #5
  401ae4:	mov	x1, xzr
  401ae8:	bl	401820 <setlocale@plt>
  401aec:	cbz	x0, 401b24 <setlocale@plt+0x304>
  401af0:	adrp	x1, 406000 <_obstack_memory_used@@Base+0xe64>
  401af4:	add	x1, x1, #0xed1
  401af8:	mov	w2, #0x3                   	// #3
  401afc:	bl	4015f0 <strncmp@plt>
  401b00:	cbz	w0, 401b24 <setlocale@plt+0x304>
  401b04:	adrp	x1, 406000 <_obstack_memory_used@@Base+0xe64>
  401b08:	add	x1, x1, #0xed5
  401b0c:	mov	w2, #0x5                   	// #5
  401b10:	mov	x0, xzr
  401b14:	bl	4017b0 <dcgettext@plt>
  401b18:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x12e64>
  401b1c:	ldr	x1, [x8, #568]
  401b20:	bl	4017c0 <fputs_unlocked@plt>
  401b24:	adrp	x1, 406000 <_obstack_memory_used@@Base+0xe64>
  401b28:	add	x1, x1, #0xf1c
  401b2c:	mov	w2, #0x5                   	// #5
  401b30:	mov	x0, xzr
  401b34:	bl	4017b0 <dcgettext@plt>
  401b38:	adrp	x2, 406000 <_obstack_memory_used@@Base+0xe64>
  401b3c:	mov	x1, x0
  401b40:	add	x2, x2, #0xea9
  401b44:	mov	w0, #0x1                   	// #1
  401b48:	mov	x3, x19
  401b4c:	bl	401620 <__printf_chk@plt>
  401b50:	adrp	x1, 406000 <_obstack_memory_used@@Base+0xe64>
  401b54:	add	x1, x1, #0xf37
  401b58:	mov	w2, #0x5                   	// #5
  401b5c:	mov	x0, xzr
  401b60:	bl	4017b0 <dcgettext@plt>
  401b64:	adrp	x8, 407000 <_obstack_memory_used@@Base+0x1e64>
  401b68:	adrp	x9, 406000 <_obstack_memory_used@@Base+0xe64>
  401b6c:	add	x8, x8, #0x40d
  401b70:	add	x9, x9, #0xe4f
  401b74:	cmp	x20, x19
  401b78:	mov	x1, x0
  401b7c:	csel	x3, x9, x8, eq  // eq = none
  401b80:	mov	w0, #0x1                   	// #1
  401b84:	mov	x2, x20
  401b88:	bl	401620 <__printf_chk@plt>
  401b8c:	ldp	x20, x19, [sp, #144]
  401b90:	ldr	x21, [sp, #128]
  401b94:	ldp	x29, x30, [sp, #112]
  401b98:	add	sp, sp, #0xa0
  401b9c:	ret
  401ba0:	stp	x29, x30, [sp, #-64]!
  401ba4:	stp	x24, x23, [sp, #16]
  401ba8:	stp	x22, x21, [sp, #32]
  401bac:	stp	x20, x19, [sp, #48]
  401bb0:	ldr	x8, [x1]
  401bb4:	mov	w21, w0
  401bb8:	mov	x29, sp
  401bbc:	mov	x20, x1
  401bc0:	mov	x0, x8
  401bc4:	bl	402ad4 <setlocale@plt+0x12b4>
  401bc8:	adrp	x1, 407000 <_obstack_memory_used@@Base+0x1e64>
  401bcc:	add	x1, x1, #0x40d
  401bd0:	mov	w0, #0x6                   	// #6
  401bd4:	bl	401820 <setlocale@plt>
  401bd8:	adrp	x19, 406000 <_obstack_memory_used@@Base+0xe64>
  401bdc:	add	x19, x19, #0xcf4
  401be0:	adrp	x1, 406000 <_obstack_memory_used@@Base+0xe64>
  401be4:	add	x1, x1, #0xcda
  401be8:	mov	x0, x19
  401bec:	bl	401600 <bindtextdomain@plt>
  401bf0:	mov	x0, x19
  401bf4:	bl	4016d0 <textdomain@plt>
  401bf8:	adrp	x0, 402000 <setlocale@plt+0x7e0>
  401bfc:	add	x0, x0, #0x7c0
  401c00:	bl	405540 <_obstack_memory_used@@Base+0x3a4>
  401c04:	adrp	x22, 406000 <_obstack_memory_used@@Base+0xe64>
  401c08:	adrp	x23, 405000 <_obstack_newchunk@@Base+0x9c>
  401c0c:	mov	w24, wzr
  401c10:	mov	w19, #0x2                   	// #2
  401c14:	add	x22, x22, #0xcec
  401c18:	add	x23, x23, #0x5a0
  401c1c:	mov	w8, w19
  401c20:	mov	w0, w21
  401c24:	mov	x1, x20
  401c28:	mov	x2, x22
  401c2c:	mov	x3, x23
  401c30:	mov	x4, xzr
  401c34:	mov	w19, w8
  401c38:	bl	4016e0 <getopt_long@plt>
  401c3c:	cmp	w0, #0x61
  401c40:	b.le	401c70 <setlocale@plt+0x450>
  401c44:	cmp	w0, #0x62
  401c48:	mov	w8, wzr
  401c4c:	b.eq	401c20 <setlocale@plt+0x400>  // b.none
  401c50:	cmp	w0, #0x70
  401c54:	b.eq	401c68 <setlocale@plt+0x448>  // b.none
  401c58:	cmp	w0, #0x63
  401c5c:	b.ne	401f08 <setlocale@plt+0x6e8>  // b.any
  401c60:	mov	w8, #0x1                   	// #1
  401c64:	b	401c20 <setlocale@plt+0x400>
  401c68:	mov	w24, #0x1                   	// #1
  401c6c:	b	401c1c <setlocale@plt+0x3fc>
  401c70:	cmn	w0, #0x1
  401c74:	b.ne	401e18 <setlocale@plt+0x5f8>  // b.any
  401c78:	cmp	w19, #0x2
  401c7c:	cset	w8, eq  // eq = none
  401c80:	orn	w8, w8, w24
  401c84:	tbz	w8, #0, 401e68 <setlocale@plt+0x648>
  401c88:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x12e64>
  401c8c:	ldrsw	x8, [x8, #560]
  401c90:	eor	w22, w24, #0x1
  401c94:	and	w9, w22, #0x1
  401c98:	sub	w21, w21, w8
  401c9c:	cmp	w21, w9
  401ca0:	add	x20, x20, x8, lsl #3
  401ca4:	b.gt	401e94 <setlocale@plt+0x674>
  401ca8:	tbz	w24, #0, 401ce8 <setlocale@plt+0x4c8>
  401cac:	adrp	x20, 405000 <_obstack_newchunk@@Base+0x9c>
  401cb0:	add	x20, x20, #0x6a0
  401cb4:	mov	x19, x20
  401cb8:	mov	x0, x19
  401cbc:	bl	4016c0 <puts@plt>
  401cc0:	mov	x0, x19
  401cc4:	bl	401530 <strlen@plt>
  401cc8:	add	x8, x0, x19
  401ccc:	add	x19, x8, #0x1
  401cd0:	sub	x8, x19, x20
  401cd4:	lsr	x8, x8, #2
  401cd8:	cmp	x8, #0x431
  401cdc:	b.cc	401cb8 <setlocale@plt+0x498>  // b.lo, b.ul, b.last
  401ce0:	mov	w20, #0x1                   	// #1
  401ce4:	b	401dfc <setlocale@plt+0x5dc>
  401ce8:	cmp	w19, #0x2
  401cec:	b.ne	401d00 <setlocale@plt+0x4e0>  // b.any
  401cf0:	bl	401f34 <setlocale@plt+0x714>
  401cf4:	mov	w19, w0
  401cf8:	cmp	w0, #0x2
  401cfc:	b.eq	401f10 <setlocale@plt+0x6f0>  // b.none
  401d00:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x12e64>
  401d04:	adrp	x3, 401000 <mbrtowc@plt-0x4f0>
  401d08:	adrp	x4, 401000 <mbrtowc@plt-0x4f0>
  401d0c:	add	x0, x0, #0x258
  401d10:	add	x3, x3, #0x5d0
  401d14:	add	x4, x4, #0x740
  401d18:	mov	x1, xzr
  401d1c:	mov	x2, xzr
  401d20:	bl	404e7c <_obstack_begin@@Base>
  401d24:	cbz	w21, 401d3c <setlocale@plt+0x51c>
  401d28:	ldr	x0, [x20]
  401d2c:	bl	4023f8 <setlocale@plt+0xbd8>
  401d30:	mov	w20, w0
  401d34:	tbnz	w0, #0, 401d50 <setlocale@plt+0x530>
  401d38:	b	401dfc <setlocale@plt+0x5dc>
  401d3c:	mov	x0, xzr
  401d40:	mov	x1, xzr
  401d44:	bl	401fa4 <setlocale@plt+0x784>
  401d48:	mov	w20, w0
  401d4c:	tbz	w0, #0, 401dfc <setlocale@plt+0x5dc>
  401d50:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x12e64>
  401d54:	add	x8, x8, #0x268
  401d58:	ldp	x21, x9, [x8]
  401d5c:	subs	x22, x9, x21
  401d60:	b.ne	401d74 <setlocale@plt+0x554>  // b.any
  401d64:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x12e64>
  401d68:	ldrb	w9, [x8, #680]
  401d6c:	orr	w9, w9, #0x2
  401d70:	strb	w9, [x8, #680]
  401d74:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x12e64>
  401d78:	add	x8, x8, #0x260
  401d7c:	ldr	x9, [x8, #40]
  401d80:	ldp	x10, x12, [x8, #16]
  401d84:	ldr	x11, [x8]
  401d88:	adrp	x23, 418000 <_obstack_memory_used@@Base+0x12e64>
  401d8c:	ldr	x1, [x23, #568]
  401d90:	add	x10, x9, x10
  401d94:	bic	x9, x10, x9
  401d98:	sub	x10, x12, x11
  401d9c:	sub	x11, x9, x11
  401da0:	cmp	x11, x10
  401da4:	adrp	x10, 406000 <_obstack_memory_used@@Base+0xe64>
  401da8:	adrp	x11, 406000 <_obstack_memory_used@@Base+0xe64>
  401dac:	csel	x9, x12, x9, hi  // hi = pmore
  401db0:	add	x10, x10, #0xe20
  401db4:	add	x11, x11, #0xdff
  401db8:	adrp	x12, 406000 <_obstack_memory_used@@Base+0xe64>
  401dbc:	stp	x9, x9, [x8, #8]
  401dc0:	cmp	w19, #0x0
  401dc4:	adrp	x8, 406000 <_obstack_memory_used@@Base+0xe64>
  401dc8:	add	x12, x12, #0xf67
  401dcc:	add	x8, x8, #0xe0b
  401dd0:	csel	x0, x11, x10, eq  // eq = none
  401dd4:	csel	x19, x8, x12, eq  // eq = none
  401dd8:	bl	4017c0 <fputs_unlocked@plt>
  401ddc:	ldr	x3, [x23, #568]
  401de0:	mov	w1, #0x1                   	// #1
  401de4:	mov	x0, x21
  401de8:	mov	x2, x22
  401dec:	bl	401520 <fwrite_unlocked@plt>
  401df0:	ldr	x1, [x23, #568]
  401df4:	mov	x0, x19
  401df8:	bl	4017c0 <fputs_unlocked@plt>
  401dfc:	mvn	w8, w20
  401e00:	ldp	x20, x19, [sp, #48]
  401e04:	ldp	x22, x21, [sp, #32]
  401e08:	ldp	x24, x23, [sp, #16]
  401e0c:	and	w0, w8, #0x1
  401e10:	ldp	x29, x30, [sp], #64
  401e14:	ret
  401e18:	cmn	w0, #0x3
  401e1c:	b.ne	401e58 <setlocale@plt+0x638>  // b.any
  401e20:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x12e64>
  401e24:	adrp	x9, 418000 <_obstack_memory_used@@Base+0x12e64>
  401e28:	ldr	x0, [x8, #568]
  401e2c:	ldr	x3, [x9, #432]
  401e30:	adrp	x1, 406000 <_obstack_memory_used@@Base+0xe64>
  401e34:	adrp	x2, 406000 <_obstack_memory_used@@Base+0xe64>
  401e38:	adrp	x4, 406000 <_obstack_memory_used@@Base+0xe64>
  401e3c:	add	x1, x1, #0xcd0
  401e40:	add	x2, x2, #0xcf0
  401e44:	add	x4, x4, #0xcfe
  401e48:	mov	x5, xzr
  401e4c:	bl	4048b8 <setlocale@plt+0x3098>
  401e50:	mov	w0, wzr
  401e54:	bl	401540 <exit@plt>
  401e58:	cmn	w0, #0x2
  401e5c:	b.ne	401f08 <setlocale@plt+0x6e8>  // b.any
  401e60:	mov	w0, wzr
  401e64:	bl	40193c <setlocale@plt+0x11c>
  401e68:	adrp	x1, 406000 <_obstack_memory_used@@Base+0xe64>
  401e6c:	add	x1, x1, #0xd0d
  401e70:	mov	w2, #0x5                   	// #5
  401e74:	mov	x0, xzr
  401e78:	bl	4017b0 <dcgettext@plt>
  401e7c:	mov	x2, x0
  401e80:	mov	w0, wzr
  401e84:	mov	w1, wzr
  401e88:	bl	401550 <error@plt>
  401e8c:	mov	w0, #0x1                   	// #1
  401e90:	bl	40193c <setlocale@plt+0x11c>
  401e94:	adrp	x1, 406000 <_obstack_memory_used@@Base+0xe64>
  401e98:	add	x1, x1, #0xd74
  401e9c:	mov	w2, #0x5                   	// #5
  401ea0:	mov	x0, xzr
  401ea4:	bl	4017b0 <dcgettext@plt>
  401ea8:	and	x8, x22, #0x1
  401eac:	ldr	x8, [x20, x8, lsl #3]
  401eb0:	mov	x19, x0
  401eb4:	mov	x0, x8
  401eb8:	bl	40406c <setlocale@plt+0x284c>
  401ebc:	mov	x3, x0
  401ec0:	mov	w0, wzr
  401ec4:	mov	w1, wzr
  401ec8:	mov	x2, x19
  401ecc:	bl	401550 <error@plt>
  401ed0:	tbz	w24, #0, 401f08 <setlocale@plt+0x6e8>
  401ed4:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x12e64>
  401ed8:	ldr	x19, [x8, #552]
  401edc:	adrp	x1, 406000 <_obstack_memory_used@@Base+0xe64>
  401ee0:	add	x1, x1, #0xd85
  401ee4:	mov	w2, #0x5                   	// #5
  401ee8:	mov	x0, xzr
  401eec:	bl	4017b0 <dcgettext@plt>
  401ef0:	adrp	x2, 407000 <_obstack_memory_used@@Base+0x1e64>
  401ef4:	mov	x3, x0
  401ef8:	add	x2, x2, #0x333
  401efc:	mov	w1, #0x1                   	// #1
  401f00:	mov	x0, x19
  401f04:	bl	4016f0 <__fprintf_chk@plt>
  401f08:	mov	w0, #0x1                   	// #1
  401f0c:	bl	40193c <setlocale@plt+0x11c>
  401f10:	adrp	x1, 406000 <_obstack_memory_used@@Base+0xe64>
  401f14:	add	x1, x1, #0xdc1
  401f18:	mov	w2, #0x5                   	// #5
  401f1c:	mov	x0, xzr
  401f20:	bl	4017b0 <dcgettext@plt>
  401f24:	mov	x2, x0
  401f28:	mov	w0, #0x1                   	// #1
  401f2c:	mov	w1, wzr
  401f30:	bl	401550 <error@plt>
  401f34:	stp	x29, x30, [sp, #-32]!
  401f38:	adrp	x0, 406000 <_obstack_memory_used@@Base+0xe64>
  401f3c:	add	x0, x0, #0xf9b
  401f40:	str	x19, [sp, #16]
  401f44:	mov	x29, sp
  401f48:	bl	401810 <getenv@plt>
  401f4c:	cbz	x0, 401f8c <setlocale@plt+0x76c>
  401f50:	ldrb	w8, [x0]
  401f54:	cbz	w8, 401f8c <setlocale@plt+0x76c>
  401f58:	bl	402894 <setlocale@plt+0x1074>
  401f5c:	adrp	x1, 406000 <_obstack_memory_used@@Base+0xe64>
  401f60:	add	x1, x1, #0xfa2
  401f64:	mov	x19, x0
  401f68:	bl	401700 <strcmp@plt>
  401f6c:	cbz	w0, 401f94 <setlocale@plt+0x774>
  401f70:	adrp	x1, 406000 <_obstack_memory_used@@Base+0xe64>
  401f74:	add	x1, x1, #0xfa1
  401f78:	mov	x0, x19
  401f7c:	bl	401700 <strcmp@plt>
  401f80:	cmp	w0, #0x0
  401f84:	cset	w0, eq  // eq = none
  401f88:	b	401f98 <setlocale@plt+0x778>
  401f8c:	mov	w0, #0x2                   	// #2
  401f90:	b	401f98 <setlocale@plt+0x778>
  401f94:	mov	w0, #0x1                   	// #1
  401f98:	ldr	x19, [sp, #16]
  401f9c:	ldp	x29, x30, [sp], #32
  401fa0:	ret
  401fa4:	sub	sp, sp, #0x90
  401fa8:	stp	x20, x19, [sp, #128]
  401fac:	mov	x20, x0
  401fb0:	adrp	x0, 406000 <_obstack_memory_used@@Base+0xe64>
  401fb4:	stp	x29, x30, [sp, #48]
  401fb8:	add	x29, sp, #0x30
  401fbc:	add	x0, x0, #0xfa6
  401fc0:	stp	x28, x27, [sp, #64]
  401fc4:	stp	x26, x25, [sp, #80]
  401fc8:	stp	x24, x23, [sp, #96]
  401fcc:	stp	x22, x21, [sp, #112]
  401fd0:	mov	x19, x1
  401fd4:	stp	xzr, xzr, [x29, #-16]
  401fd8:	bl	401810 <getenv@plt>
  401fdc:	cbz	x0, 401fec <setlocale@plt+0x7cc>
  401fe0:	ldrb	w8, [x0]
  401fe4:	mov	x24, x0
  401fe8:	cbnz	w8, 401ff4 <setlocale@plt+0x7d4>
  401fec:	adrp	x24, 406000 <_obstack_memory_used@@Base+0xe64>
  401ff0:	add	x24, x24, #0xfab
  401ff4:	adrp	x23, 405000 <_obstack_newchunk@@Base+0x9c>
  401ff8:	adrp	x21, 418000 <_obstack_memory_used@@Base+0x12e64>
  401ffc:	mov	x22, xzr
  402000:	add	x23, x23, #0x6a0
  402004:	mov	w26, #0x1                   	// #1
  402008:	mov	w25, #0x3                   	// #3
  40200c:	add	x21, x21, #0x270
  402010:	b	402060 <setlocale@plt+0x840>
  402014:	adrp	x1, 407000 <_obstack_memory_used@@Base+0x1e64>
  402018:	mov	w2, #0x5                   	// #5
  40201c:	mov	x0, xzr
  402020:	add	x1, x1, #0x13
  402024:	bl	4017b0 <dcgettext@plt>
  402028:	mov	x3, x0
  40202c:	mov	w0, wzr
  402030:	mov	w1, wzr
  402034:	mov	x2, x26
  402038:	mov	x4, x22
  40203c:	mov	x5, x27
  402040:	bl	401550 <error@plt>
  402044:	mov	w26, wzr
  402048:	mov	x0, x27
  40204c:	bl	401740 <free@plt>
  402050:	mov	x0, x28
  402054:	bl	401740 <free@plt>
  402058:	mov	w8, wzr
  40205c:	cbnz	w8, 4023d4 <setlocale@plt+0xbb4>
  402060:	add	x22, x22, #0x1
  402064:	cbz	x20, 402094 <setlocale@plt+0x874>
  402068:	sub	x0, x29, #0x8
  40206c:	sub	x1, x29, #0x10
  402070:	mov	x2, x20
  402074:	bl	401730 <getline@plt>
  402078:	ldur	x8, [x29, #-8]
  40207c:	cmp	x0, #0x0
  402080:	b.gt	4020bc <setlocale@plt+0x89c>
  402084:	mov	x0, x8
  402088:	bl	401740 <free@plt>
  40208c:	mov	w8, #0x1                   	// #1
  402090:	b	40205c <setlocale@plt+0x83c>
  402094:	adrp	x8, 406000 <_obstack_memory_used@@Base+0xe64>
  402098:	add	x8, x8, #0x764
  40209c:	cmp	x23, x8
  4020a0:	b.eq	402214 <setlocale@plt+0x9f4>  // b.none
  4020a4:	mov	x0, x23
  4020a8:	bl	401530 <strlen@plt>
  4020ac:	add	x8, x0, x23
  4020b0:	add	x9, x8, #0x1
  4020b4:	mov	x8, x23
  4020b8:	mov	x23, x9
  4020bc:	add	x1, sp, #0x18
  4020c0:	add	x2, sp, #0x10
  4020c4:	mov	x0, x8
  4020c8:	bl	402498 <setlocale@plt+0xc78>
  4020cc:	ldr	x27, [sp, #24]
  4020d0:	cbz	x27, 402058 <setlocale@plt+0x838>
  4020d4:	ldr	x28, [sp, #16]
  4020d8:	cbz	x28, 4021c0 <setlocale@plt+0x9a0>
  4020dc:	adrp	x1, 406000 <_obstack_memory_used@@Base+0xe64>
  4020e0:	mov	x0, x27
  4020e4:	add	x1, x1, #0xfa6
  4020e8:	bl	402738 <setlocale@plt+0xf18>
  4020ec:	cbz	w0, 40221c <setlocale@plt+0x9fc>
  4020f0:	cmp	w25, #0x2
  4020f4:	csinc	w25, w25, wzr, ne  // ne = any
  4020f8:	cbz	w25, 402248 <setlocale@plt+0xa28>
  4020fc:	ldrb	w8, [x27]
  402100:	cmp	w8, #0x2a
  402104:	b.eq	402140 <setlocale@plt+0x920>  // b.none
  402108:	cmp	w8, #0x2e
  40210c:	b.ne	402260 <setlocale@plt+0xa40>  // b.any
  402110:	ldp	x9, x8, [x21]
  402114:	cmp	x8, x9
  402118:	b.ne	40212c <setlocale@plt+0x90c>  // b.any
  40211c:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x12e64>
  402120:	mov	w1, #0x1                   	// #1
  402124:	add	x0, x0, #0x258
  402128:	bl	404f64 <_obstack_newchunk@@Base>
  40212c:	ldr	x8, [x21]
  402130:	add	x9, x8, #0x1
  402134:	str	x9, [x21]
  402138:	mov	w9, #0x2a                  	// #42
  40213c:	strb	w9, [x8]
  402140:	mov	x0, x27
  402144:	bl	4025b8 <setlocale@plt+0xd98>
  402148:	ldp	x9, x8, [x21]
  40214c:	cmp	x8, x9
  402150:	b.ne	402164 <setlocale@plt+0x944>  // b.any
  402154:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x12e64>
  402158:	mov	w1, #0x1                   	// #1
  40215c:	add	x0, x0, #0x258
  402160:	bl	404f64 <_obstack_newchunk@@Base>
  402164:	ldr	x8, [x21]
  402168:	mov	x0, x28
  40216c:	add	x9, x8, #0x1
  402170:	str	x9, [x21]
  402174:	mov	w9, #0x3d                  	// #61
  402178:	strb	w9, [x8]
  40217c:	bl	4025b8 <setlocale@plt+0xd98>
  402180:	ldp	x9, x8, [x21]
  402184:	cmp	x8, x9
  402188:	b.ne	40219c <setlocale@plt+0x97c>  // b.any
  40218c:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x12e64>
  402190:	mov	w1, #0x1                   	// #1
  402194:	add	x0, x0, #0x258
  402198:	bl	404f64 <_obstack_newchunk@@Base>
  40219c:	adrp	x11, 418000 <_obstack_memory_used@@Base+0x12e64>
  4021a0:	ldr	x9, [x11, #624]
  4021a4:	mov	w8, wzr
  4021a8:	add	x10, x9, #0x1
  4021ac:	str	x10, [x11, #624]
  4021b0:	mov	w10, #0x3a                  	// #58
  4021b4:	strb	w10, [x9]
  4021b8:	cbnz	w8, 4022e0 <setlocale@plt+0xac0>
  4021bc:	b	402048 <setlocale@plt+0x828>
  4021c0:	adrp	x1, 406000 <_obstack_memory_used@@Base+0xe64>
  4021c4:	mov	w2, #0x5                   	// #5
  4021c8:	mov	x0, xzr
  4021cc:	add	x1, x1, #0xfb0
  4021d0:	bl	4017b0 <dcgettext@plt>
  4021d4:	mov	x26, x0
  4021d8:	mov	w1, #0x3                   	// #3
  4021dc:	mov	w0, wzr
  4021e0:	mov	x2, x19
  4021e4:	bl	403eec <setlocale@plt+0x26cc>
  4021e8:	mov	x3, x0
  4021ec:	mov	w0, wzr
  4021f0:	mov	w1, wzr
  4021f4:	mov	x2, x26
  4021f8:	mov	x4, x22
  4021fc:	bl	401550 <error@plt>
  402200:	mov	x0, x27
  402204:	bl	401740 <free@plt>
  402208:	mov	w8, wzr
  40220c:	mov	w26, wzr
  402210:	b	40205c <setlocale@plt+0x83c>
  402214:	mov	w8, #0x1                   	// #1
  402218:	b	40205c <setlocale@plt+0x83c>
  40221c:	mov	x0, x28
  402220:	mov	x1, x24
  402224:	mov	w2, wzr
  402228:	bl	401790 <fnmatch@plt>
  40222c:	mov	w8, wzr
  402230:	cbz	w0, 402254 <setlocale@plt+0xa34>
  402234:	cmp	w25, #0x2
  402238:	cset	w9, eq  // eq = none
  40223c:	lsl	w25, w9, #1
  402240:	cbnz	w8, 4022e0 <setlocale@plt+0xac0>
  402244:	b	402048 <setlocale@plt+0x828>
  402248:	mov	w8, #0x1                   	// #1
  40224c:	cbnz	w8, 4022e0 <setlocale@plt+0xac0>
  402250:	b	402048 <setlocale@plt+0x828>
  402254:	mov	w25, #0x2                   	// #2
  402258:	cbnz	w8, 4022e0 <setlocale@plt+0xac0>
  40225c:	b	402048 <setlocale@plt+0x828>
  402260:	adrp	x1, 406000 <_obstack_memory_used@@Base+0xe64>
  402264:	mov	x0, x27
  402268:	add	x1, x1, #0xfdc
  40226c:	bl	402738 <setlocale@plt+0xf18>
  402270:	cbz	w0, 4022d8 <setlocale@plt+0xab8>
  402274:	adrp	x1, 406000 <_obstack_memory_used@@Base+0xe64>
  402278:	mov	x0, x27
  40227c:	add	x1, x1, #0xfe4
  402280:	bl	402738 <setlocale@plt+0xf18>
  402284:	cbz	w0, 4022d8 <setlocale@plt+0xab8>
  402288:	adrp	x1, 406000 <_obstack_memory_used@@Base+0xe64>
  40228c:	mov	x0, x27
  402290:	add	x1, x1, #0xfea
  402294:	bl	402738 <setlocale@plt+0xf18>
  402298:	cbz	w0, 4022d8 <setlocale@plt+0xab8>
  40229c:	str	x24, [sp, #8]
  4022a0:	mov	x24, xzr
  4022a4:	adrp	x8, 406000 <_obstack_memory_used@@Base+0xe64>
  4022a8:	add	x8, x8, #0x7d8
  4022ac:	ldr	x1, [x8, x24]
  4022b0:	mov	x0, x27
  4022b4:	bl	402738 <setlocale@plt+0xf18>
  4022b8:	cbz	w0, 40231c <setlocale@plt+0xafc>
  4022bc:	add	x24, x24, #0x8
  4022c0:	cmp	x24, #0x128
  4022c4:	mov	w8, #0x1                   	// #1
  4022c8:	b.ne	4022a4 <setlocale@plt+0xa84>  // b.any
  4022cc:	ldr	x24, [sp, #8]
  4022d0:	cbnz	w8, 4022e0 <setlocale@plt+0xac0>
  4022d4:	b	402048 <setlocale@plt+0x828>
  4022d8:	mov	w8, wzr
  4022dc:	cbz	w8, 402048 <setlocale@plt+0x828>
  4022e0:	sub	w8, w25, #0x1
  4022e4:	cmp	w8, #0x1
  4022e8:	b.hi	402048 <setlocale@plt+0x828>  // b.pmore
  4022ec:	adrp	x1, 406000 <_obstack_memory_used@@Base+0xe64>
  4022f0:	mov	w2, #0x5                   	// #5
  4022f4:	mov	x0, xzr
  4022f8:	add	x1, x1, #0xff3
  4022fc:	bl	4017b0 <dcgettext@plt>
  402300:	mov	x26, x0
  402304:	cbz	x19, 402014 <setlocale@plt+0x7f4>
  402308:	mov	w1, #0x3                   	// #3
  40230c:	mov	w0, wzr
  402310:	mov	x2, x19
  402314:	bl	403eec <setlocale@plt+0x26cc>
  402318:	b	402028 <setlocale@plt+0x808>
  40231c:	ldp	x9, x8, [x21]
  402320:	cmp	x8, x9
  402324:	b.ne	402338 <setlocale@plt+0xb18>  // b.any
  402328:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x12e64>
  40232c:	mov	w1, #0x1                   	// #1
  402330:	add	x0, x0, #0x258
  402334:	bl	404f64 <_obstack_newchunk@@Base>
  402338:	adrp	x8, 406000 <_obstack_memory_used@@Base+0xe64>
  40233c:	add	x8, x8, #0x908
  402340:	ldr	x24, [x8, x24]
  402344:	ldr	x8, [x21]
  402348:	ldrb	w9, [x24]
  40234c:	add	x10, x8, #0x1
  402350:	str	x10, [x21]
  402354:	strb	w9, [x8]
  402358:	ldp	x9, x8, [x21]
  40235c:	cmp	x8, x9
  402360:	b.ne	402374 <setlocale@plt+0xb54>  // b.any
  402364:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x12e64>
  402368:	mov	w1, #0x1                   	// #1
  40236c:	add	x0, x0, #0x258
  402370:	bl	404f64 <_obstack_newchunk@@Base>
  402374:	ldr	x8, [x21]
  402378:	ldrb	w9, [x24, #1]
  40237c:	add	x10, x8, #0x1
  402380:	str	x10, [x21]
  402384:	strb	w9, [x8]
  402388:	ldp	x9, x8, [x21]
  40238c:	cmp	x8, x9
  402390:	b.ne	4023a4 <setlocale@plt+0xb84>  // b.any
  402394:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x12e64>
  402398:	mov	w1, #0x1                   	// #1
  40239c:	add	x0, x0, #0x258
  4023a0:	bl	404f64 <_obstack_newchunk@@Base>
  4023a4:	ldr	x8, [x21]
  4023a8:	mov	x0, x28
  4023ac:	add	x9, x8, #0x1
  4023b0:	str	x9, [x21]
  4023b4:	mov	w9, #0x3d                  	// #61
  4023b8:	strb	w9, [x8]
  4023bc:	bl	4025b8 <setlocale@plt+0xd98>
  4023c0:	ldp	x9, x8, [x21]
  4023c4:	ldr	x24, [sp, #8]
  4023c8:	cmp	x8, x9
  4023cc:	b.eq	40218c <setlocale@plt+0x96c>  // b.none
  4023d0:	b	40219c <setlocale@plt+0x97c>
  4023d4:	and	w0, w26, #0x1
  4023d8:	ldp	x20, x19, [sp, #128]
  4023dc:	ldp	x22, x21, [sp, #112]
  4023e0:	ldp	x24, x23, [sp, #96]
  4023e4:	ldp	x26, x25, [sp, #80]
  4023e8:	ldp	x28, x27, [sp, #64]
  4023ec:	ldp	x29, x30, [sp, #48]
  4023f0:	add	sp, sp, #0x90
  4023f4:	ret
  4023f8:	stp	x29, x30, [sp, #-32]!
  4023fc:	adrp	x1, 407000 <_obstack_memory_used@@Base+0x1e64>
  402400:	add	x1, x1, #0x1af
  402404:	stp	x20, x19, [sp, #16]
  402408:	mov	x29, sp
  40240c:	mov	x19, x0
  402410:	bl	401700 <strcmp@plt>
  402414:	adrp	x20, 418000 <_obstack_memory_used@@Base+0x12e64>
  402418:	cbz	w0, 402434 <setlocale@plt+0xc14>
  40241c:	ldr	x2, [x20, #576]
  402420:	adrp	x1, 407000 <_obstack_memory_used@@Base+0x1e64>
  402424:	add	x1, x1, #0x15a
  402428:	mov	x0, x19
  40242c:	bl	402924 <setlocale@plt+0x1104>
  402430:	cbz	x0, 402454 <setlocale@plt+0xc34>
  402434:	ldr	x0, [x20, #576]
  402438:	mov	x1, x19
  40243c:	bl	401fa4 <setlocale@plt+0x784>
  402440:	ldr	x8, [x20, #576]
  402444:	mov	w20, w0
  402448:	mov	x0, x8
  40244c:	bl	404c8c <setlocale@plt+0x346c>
  402450:	cbz	w0, 402488 <setlocale@plt+0xc68>
  402454:	bl	401800 <__errno_location@plt>
  402458:	ldr	w20, [x0]
  40245c:	mov	w1, #0x3                   	// #3
  402460:	mov	w0, wzr
  402464:	mov	x2, x19
  402468:	bl	403eec <setlocale@plt+0x26cc>
  40246c:	adrp	x2, 407000 <_obstack_memory_used@@Base+0x1e64>
  402470:	mov	x3, x0
  402474:	add	x2, x2, #0x160
  402478:	mov	w0, wzr
  40247c:	mov	w1, w20
  402480:	bl	401550 <error@plt>
  402484:	mov	w20, wzr
  402488:	and	w0, w20, #0x1
  40248c:	ldp	x20, x19, [sp, #16]
  402490:	ldp	x29, x30, [sp], #32
  402494:	ret
  402498:	stp	x29, x30, [sp, #-80]!
  40249c:	str	x25, [sp, #16]
  4024a0:	stp	x24, x23, [sp, #32]
  4024a4:	stp	x22, x21, [sp, #48]
  4024a8:	stp	x20, x19, [sp, #64]
  4024ac:	mov	x29, sp
  4024b0:	mov	x19, x2
  4024b4:	mov	x20, x1
  4024b8:	mov	x22, x0
  4024bc:	str	xzr, [x1]
  4024c0:	str	xzr, [x2]
  4024c4:	bl	401710 <__ctype_b_loc@plt>
  4024c8:	ldr	x25, [x0]
  4024cc:	mov	x21, x0
  4024d0:	sub	x22, x22, #0x1
  4024d4:	ldrb	w23, [x22, #1]!
  4024d8:	mov	w0, w23
  4024dc:	bl	402734 <setlocale@plt+0xf14>
  4024e0:	and	x8, x0, #0xff
  4024e4:	ldrh	w8, [x25, x8, lsl #1]
  4024e8:	tbnz	w8, #13, 4024d4 <setlocale@plt+0xcb4>
  4024ec:	cbz	w23, 4025a0 <setlocale@plt+0xd80>
  4024f0:	cmp	w23, #0x23
  4024f4:	b.eq	4025a0 <setlocale@plt+0xd80>  // b.none
  4024f8:	mov	x24, x22
  4024fc:	ldrb	w23, [x24], #1
  402500:	mov	w0, w23
  402504:	bl	402734 <setlocale@plt+0xf14>
  402508:	cbz	w23, 402518 <setlocale@plt+0xcf8>
  40250c:	and	x8, x0, #0xff
  402510:	ldrh	w8, [x25, x8, lsl #1]
  402514:	tbz	w8, #13, 4024fc <setlocale@plt+0xcdc>
  402518:	sub	x8, x24, #0x1
  40251c:	sub	x1, x8, x22
  402520:	mov	x0, x22
  402524:	bl	404c18 <setlocale@plt+0x33f8>
  402528:	str	x0, [x20]
  40252c:	ldurb	w8, [x24, #-1]
  402530:	cbz	w8, 4025a0 <setlocale@plt+0xd80>
  402534:	ldr	x21, [x21]
  402538:	ldrb	w20, [x24], #1
  40253c:	mov	w0, w20
  402540:	bl	402734 <setlocale@plt+0xf14>
  402544:	and	x8, x0, #0xff
  402548:	ldrh	w8, [x21, x8, lsl #1]
  40254c:	tbnz	w8, #13, 402538 <setlocale@plt+0xd18>
  402550:	cbz	w20, 4025a0 <setlocale@plt+0xd80>
  402554:	cmp	w20, #0x23
  402558:	b.eq	4025a0 <setlocale@plt+0xd80>  // b.none
  40255c:	sub	x20, x24, #0x1
  402560:	ldurb	w8, [x24, #-1]
  402564:	cmp	w8, #0x23
  402568:	ccmp	w8, #0x0, #0x4, ne  // ne = any
  40256c:	b.eq	402578 <setlocale@plt+0xd58>  // b.none
  402570:	add	x24, x24, #0x1
  402574:	b	402560 <setlocale@plt+0xd40>
  402578:	ldurb	w0, [x24, #-2]
  40257c:	bl	402734 <setlocale@plt+0xf14>
  402580:	and	x8, x0, #0xff
  402584:	ldrh	w8, [x21, x8, lsl #1]
  402588:	sub	x24, x24, #0x1
  40258c:	tbnz	w8, #13, 402578 <setlocale@plt+0xd58>
  402590:	sub	x1, x24, x20
  402594:	mov	x0, x20
  402598:	bl	404c18 <setlocale@plt+0x33f8>
  40259c:	str	x0, [x19]
  4025a0:	ldp	x20, x19, [sp, #64]
  4025a4:	ldp	x22, x21, [sp, #48]
  4025a8:	ldp	x24, x23, [sp, #32]
  4025ac:	ldr	x25, [sp, #16]
  4025b0:	ldp	x29, x30, [sp], #80
  4025b4:	ret
  4025b8:	stp	x29, x30, [sp, #-80]!
  4025bc:	stp	x26, x25, [sp, #16]
  4025c0:	stp	x22, x21, [sp, #48]
  4025c4:	stp	x20, x19, [sp, #64]
  4025c8:	adrp	x21, 418000 <_obstack_memory_used@@Base+0x12e64>
  4025cc:	adrp	x20, 418000 <_obstack_memory_used@@Base+0x12e64>
  4025d0:	adrp	x25, 405000 <_obstack_newchunk@@Base+0x9c>
  4025d4:	stp	x24, x23, [sp, #32]
  4025d8:	mov	x19, x0
  4025dc:	mov	w8, #0x1                   	// #1
  4025e0:	add	x21, x21, #0x270
  4025e4:	add	x20, x20, #0x258
  4025e8:	mov	w22, #0x27                  	// #39
  4025ec:	mov	w23, #0x5c                  	// #92
  4025f0:	adrp	x24, 418000 <_obstack_memory_used@@Base+0x12e64>
  4025f4:	add	x25, x25, #0x578
  4025f8:	mov	x29, sp
  4025fc:	b	402618 <setlocale@plt+0xdf8>
  402600:	ldrb	w8, [x19], #1
  402604:	ldr	x9, [x24, #624]
  402608:	add	x10, x9, #0x1
  40260c:	str	x10, [x24, #624]
  402610:	strb	w8, [x9]
  402614:	mov	w8, w26
  402618:	ldrb	w9, [x19]
  40261c:	mov	w26, #0x1                   	// #1
  402620:	sub	w10, w9, #0x3a
  402624:	cmp	w10, #0x24
  402628:	b.hi	402674 <setlocale@plt+0xe54>  // b.pmore
  40262c:	adr	x9, 40263c <setlocale@plt+0xe1c>
  402630:	ldrb	w11, [x25, x10]
  402634:	add	x9, x9, x11, lsl #2
  402638:	br	x9
  40263c:	tbz	w8, #0, 4026fc <setlocale@plt+0xedc>
  402640:	ldp	x9, x8, [x21]
  402644:	cmp	x8, x9
  402648:	b.ne	402658 <setlocale@plt+0xe38>  // b.any
  40264c:	mov	w1, #0x1                   	// #1
  402650:	mov	x0, x20
  402654:	bl	404f64 <_obstack_newchunk@@Base>
  402658:	ldr	x8, [x24, #624]
  40265c:	add	x9, x8, #0x1
  402660:	str	x9, [x24, #624]
  402664:	strb	w23, [x8]
  402668:	b	4026fc <setlocale@plt+0xedc>
  40266c:	eor	w26, w8, #0x1
  402670:	b	402700 <setlocale@plt+0xee0>
  402674:	cmp	w9, #0x27
  402678:	b.eq	402684 <setlocale@plt+0xe64>  // b.none
  40267c:	cbnz	w9, 402700 <setlocale@plt+0xee0>
  402680:	b	40271c <setlocale@plt+0xefc>
  402684:	ldp	x9, x8, [x21]
  402688:	cmp	x8, x9
  40268c:	b.ne	40269c <setlocale@plt+0xe7c>  // b.any
  402690:	mov	w1, #0x1                   	// #1
  402694:	mov	x0, x20
  402698:	bl	404f64 <_obstack_newchunk@@Base>
  40269c:	ldr	x8, [x21]
  4026a0:	add	x9, x8, #0x1
  4026a4:	str	x9, [x21]
  4026a8:	strb	w22, [x8]
  4026ac:	ldp	x9, x8, [x21]
  4026b0:	cmp	x8, x9
  4026b4:	b.ne	4026c4 <setlocale@plt+0xea4>  // b.any
  4026b8:	mov	w1, #0x1                   	// #1
  4026bc:	mov	x0, x20
  4026c0:	bl	404f64 <_obstack_newchunk@@Base>
  4026c4:	ldr	x8, [x21]
  4026c8:	add	x9, x8, #0x1
  4026cc:	str	x9, [x21]
  4026d0:	strb	w23, [x8]
  4026d4:	ldp	x9, x8, [x21]
  4026d8:	cmp	x8, x9
  4026dc:	b.ne	4026ec <setlocale@plt+0xecc>  // b.any
  4026e0:	mov	w1, #0x1                   	// #1
  4026e4:	mov	x0, x20
  4026e8:	bl	404f64 <_obstack_newchunk@@Base>
  4026ec:	ldr	x8, [x24, #624]
  4026f0:	add	x9, x8, #0x1
  4026f4:	str	x9, [x24, #624]
  4026f8:	strb	w22, [x8]
  4026fc:	mov	w26, #0x1                   	// #1
  402700:	ldp	x9, x8, [x21]
  402704:	cmp	x8, x9
  402708:	b.ne	402600 <setlocale@plt+0xde0>  // b.any
  40270c:	mov	w1, #0x1                   	// #1
  402710:	mov	x0, x20
  402714:	bl	404f64 <_obstack_newchunk@@Base>
  402718:	b	402600 <setlocale@plt+0xde0>
  40271c:	ldp	x20, x19, [sp, #64]
  402720:	ldp	x22, x21, [sp, #48]
  402724:	ldp	x24, x23, [sp, #32]
  402728:	ldp	x26, x25, [sp, #16]
  40272c:	ldp	x29, x30, [sp], #80
  402730:	ret
  402734:	ret
  402738:	stp	x29, x30, [sp, #-48]!
  40273c:	cmp	x0, x1
  402740:	str	x21, [sp, #16]
  402744:	stp	x20, x19, [sp, #32]
  402748:	mov	x29, sp
  40274c:	b.eq	402790 <setlocale@plt+0xf70>  // b.none
  402750:	mov	x19, x1
  402754:	mov	x20, x0
  402758:	ldrb	w0, [x20]
  40275c:	bl	40538c <_obstack_memory_used@@Base+0x1f0>
  402760:	ldrb	w8, [x19]
  402764:	mov	w21, w0
  402768:	mov	w0, w8
  40276c:	bl	40538c <_obstack_memory_used@@Base+0x1f0>
  402770:	ands	w8, w21, #0xff
  402774:	b.eq	402788 <setlocale@plt+0xf68>  // b.none
  402778:	add	x20, x20, #0x1
  40277c:	cmp	w8, w0, uxtb
  402780:	add	x19, x19, #0x1
  402784:	b.eq	402758 <setlocale@plt+0xf38>  // b.none
  402788:	sub	w0, w8, w0, uxtb
  40278c:	b	402794 <setlocale@plt+0xf74>
  402790:	mov	w0, wzr
  402794:	ldp	x20, x19, [sp, #32]
  402798:	ldr	x21, [sp, #16]
  40279c:	ldp	x29, x30, [sp], #48
  4027a0:	ret
  4027a4:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x12e64>
  4027a8:	str	x0, [x8, #688]
  4027ac:	ret
  4027b0:	and	w8, w0, #0x1
  4027b4:	adrp	x9, 418000 <_obstack_memory_used@@Base+0x12e64>
  4027b8:	strb	w8, [x9, #696]
  4027bc:	ret
  4027c0:	stp	x29, x30, [sp, #-48]!
  4027c4:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x12e64>
  4027c8:	ldr	x0, [x8, #568]
  4027cc:	str	x21, [sp, #16]
  4027d0:	stp	x20, x19, [sp, #32]
  4027d4:	mov	x29, sp
  4027d8:	bl	4053b4 <_obstack_memory_used@@Base+0x218>
  4027dc:	cbz	w0, 4027fc <setlocale@plt+0xfdc>
  4027e0:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x12e64>
  4027e4:	ldrb	w8, [x8, #696]
  4027e8:	cbz	w8, 40281c <setlocale@plt+0xffc>
  4027ec:	bl	401800 <__errno_location@plt>
  4027f0:	ldr	w8, [x0]
  4027f4:	cmp	w8, #0x20
  4027f8:	b.ne	40281c <setlocale@plt+0xffc>  // b.any
  4027fc:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x12e64>
  402800:	ldr	x0, [x8, #552]
  402804:	bl	4053b4 <_obstack_memory_used@@Base+0x218>
  402808:	cbnz	w0, 402888 <setlocale@plt+0x1068>
  40280c:	ldp	x20, x19, [sp, #32]
  402810:	ldr	x21, [sp, #16]
  402814:	ldp	x29, x30, [sp], #48
  402818:	ret
  40281c:	adrp	x1, 407000 <_obstack_memory_used@@Base+0x1e64>
  402820:	add	x1, x1, #0x150
  402824:	mov	w2, #0x5                   	// #5
  402828:	mov	x0, xzr
  40282c:	bl	4017b0 <dcgettext@plt>
  402830:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x12e64>
  402834:	ldr	x21, [x8, #688]
  402838:	mov	x19, x0
  40283c:	bl	401800 <__errno_location@plt>
  402840:	ldr	w20, [x0]
  402844:	cbnz	x21, 402864 <setlocale@plt+0x1044>
  402848:	adrp	x2, 407000 <_obstack_memory_used@@Base+0x1e64>
  40284c:	add	x2, x2, #0x160
  402850:	mov	w0, wzr
  402854:	mov	w1, w20
  402858:	mov	x3, x19
  40285c:	bl	401550 <error@plt>
  402860:	b	402888 <setlocale@plt+0x1068>
  402864:	mov	x0, x21
  402868:	bl	403ebc <setlocale@plt+0x269c>
  40286c:	adrp	x2, 407000 <_obstack_memory_used@@Base+0x1e64>
  402870:	mov	x3, x0
  402874:	add	x2, x2, #0x15c
  402878:	mov	w0, wzr
  40287c:	mov	w1, w20
  402880:	mov	x4, x19
  402884:	bl	401550 <error@plt>
  402888:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x12e64>
  40288c:	ldr	w0, [x8, #440]
  402890:	bl	401510 <_exit@plt>
  402894:	sub	x0, x0, #0x1
  402898:	ldrb	w8, [x0, #1]!
  40289c:	cmp	w8, #0x2f
  4028a0:	b.eq	402898 <setlocale@plt+0x1078>  // b.none
  4028a4:	mov	w8, wzr
  4028a8:	mov	x9, x0
  4028ac:	b	4028b8 <setlocale@plt+0x1098>
  4028b0:	mov	w8, #0x1                   	// #1
  4028b4:	add	x9, x9, #0x1
  4028b8:	ldrb	w10, [x9]
  4028bc:	cmp	w10, #0x2f
  4028c0:	b.eq	4028b0 <setlocale@plt+0x1090>  // b.none
  4028c4:	cbz	w10, 4028dc <setlocale@plt+0x10bc>
  4028c8:	tst	w8, #0x1
  4028cc:	mov	w8, wzr
  4028d0:	csel	x0, x9, x0, ne  // ne = any
  4028d4:	add	x9, x9, #0x1
  4028d8:	b	4028b8 <setlocale@plt+0x1098>
  4028dc:	ret
  4028e0:	stp	x29, x30, [sp, #-32]!
  4028e4:	str	x19, [sp, #16]
  4028e8:	mov	x29, sp
  4028ec:	mov	x19, x0
  4028f0:	bl	401530 <strlen@plt>
  4028f4:	mov	x8, x0
  4028f8:	sub	x9, x19, #0x1
  4028fc:	mov	x0, x8
  402900:	cmp	x8, #0x2
  402904:	b.cc	402918 <setlocale@plt+0x10f8>  // b.lo, b.ul, b.last
  402908:	ldrb	w8, [x9, x0]
  40290c:	cmp	w8, #0x2f
  402910:	sub	x8, x0, #0x1
  402914:	b.eq	4028fc <setlocale@plt+0x10dc>  // b.none
  402918:	ldr	x19, [sp, #16]
  40291c:	ldp	x29, x30, [sp], #32
  402920:	ret
  402924:	stp	x29, x30, [sp, #-64]!
  402928:	stp	x22, x21, [sp, #32]
  40292c:	mov	x21, x0
  402930:	mov	x0, x2
  402934:	stp	x24, x23, [sp, #16]
  402938:	stp	x20, x19, [sp, #48]
  40293c:	mov	x29, sp
  402940:	mov	x19, x2
  402944:	mov	x20, x1
  402948:	bl	4015a0 <fileno@plt>
  40294c:	mov	w22, wzr
  402950:	cbz	w0, 402994 <setlocale@plt+0x1174>
  402954:	cmp	w0, #0x1
  402958:	b.eq	4029a4 <setlocale@plt+0x1184>  // b.none
  40295c:	cmp	w0, #0x2
  402960:	b.eq	402978 <setlocale@plt+0x1158>  // b.none
  402964:	mov	w0, #0x2                   	// #2
  402968:	mov	w1, #0x2                   	// #2
  40296c:	bl	4017e0 <dup2@plt>
  402970:	cmp	w0, #0x2
  402974:	cset	w22, ne  // ne = any
  402978:	mov	w0, #0x1                   	// #1
  40297c:	mov	w1, #0x1                   	// #1
  402980:	mov	w24, w22
  402984:	bl	4017e0 <dup2@plt>
  402988:	cmp	w0, #0x1
  40298c:	cset	w22, ne  // ne = any
  402990:	b	4029a8 <setlocale@plt+0x1188>
  402994:	mov	w23, w22
  402998:	mov	w24, w22
  40299c:	cbnz	w22, 4029cc <setlocale@plt+0x11ac>
  4029a0:	b	4029d8 <setlocale@plt+0x11b8>
  4029a4:	mov	w24, w22
  4029a8:	mov	w0, wzr
  4029ac:	mov	w1, wzr
  4029b0:	mov	w23, w22
  4029b4:	bl	4017e0 <dup2@plt>
  4029b8:	cmp	w0, #0x0
  4029bc:	cset	w22, ne  // ne = any
  4029c0:	cmp	w24, #0x0
  4029c4:	cset	w24, ne  // ne = any
  4029c8:	cbz	w22, 4029d8 <setlocale@plt+0x11b8>
  4029cc:	mov	w0, wzr
  4029d0:	bl	402a74 <setlocale@plt+0x1254>
  4029d4:	tbz	w0, #0, 402a10 <setlocale@plt+0x11f0>
  4029d8:	cbz	w23, 4029e8 <setlocale@plt+0x11c8>
  4029dc:	mov	w0, #0x1                   	// #1
  4029e0:	bl	402a74 <setlocale@plt+0x1254>
  4029e4:	tbz	w0, #0, 402a10 <setlocale@plt+0x11f0>
  4029e8:	cbz	w24, 4029f8 <setlocale@plt+0x11d8>
  4029ec:	mov	w0, #0x2                   	// #2
  4029f0:	bl	402a74 <setlocale@plt+0x1254>
  4029f4:	tbz	w0, #0, 402a10 <setlocale@plt+0x11f0>
  4029f8:	mov	x0, x21
  4029fc:	mov	x1, x20
  402a00:	mov	x2, x19
  402a04:	bl	401760 <freopen@plt>
  402a08:	mov	x19, x0
  402a0c:	b	402a14 <setlocale@plt+0x11f4>
  402a10:	mov	x19, xzr
  402a14:	bl	401800 <__errno_location@plt>
  402a18:	ldr	w21, [x0]
  402a1c:	mov	x20, x0
  402a20:	cbz	w24, 402a48 <setlocale@plt+0x1228>
  402a24:	mov	w0, #0x2                   	// #2
  402a28:	bl	401670 <close@plt>
  402a2c:	cbnz	w23, 402a4c <setlocale@plt+0x122c>
  402a30:	cbz	w22, 402a58 <setlocale@plt+0x1238>
  402a34:	mov	w0, wzr
  402a38:	bl	401670 <close@plt>
  402a3c:	cbnz	x19, 402a5c <setlocale@plt+0x123c>
  402a40:	str	w21, [x20]
  402a44:	b	402a5c <setlocale@plt+0x123c>
  402a48:	cbz	w23, 402a30 <setlocale@plt+0x1210>
  402a4c:	mov	w0, #0x1                   	// #1
  402a50:	bl	401670 <close@plt>
  402a54:	cbnz	w22, 402a34 <setlocale@plt+0x1214>
  402a58:	cbz	x19, 402a40 <setlocale@plt+0x1220>
  402a5c:	mov	x0, x19
  402a60:	ldp	x20, x19, [sp, #48]
  402a64:	ldp	x22, x21, [sp, #32]
  402a68:	ldp	x24, x23, [sp, #16]
  402a6c:	ldp	x29, x30, [sp], #64
  402a70:	ret
  402a74:	stp	x29, x30, [sp, #-32]!
  402a78:	str	x19, [sp, #16]
  402a7c:	mov	w19, w0
  402a80:	adrp	x0, 407000 <_obstack_memory_used@@Base+0x1e64>
  402a84:	add	x0, x0, #0x163
  402a88:	mov	w1, wzr
  402a8c:	mov	x29, sp
  402a90:	bl	4015e0 <open@plt>
  402a94:	cmp	w0, w19
  402a98:	b.ne	402aa4 <setlocale@plt+0x1284>  // b.any
  402a9c:	mov	w0, #0x1                   	// #1
  402aa0:	b	402ac8 <setlocale@plt+0x12a8>
  402aa4:	tbnz	w0, #31, 402ac4 <setlocale@plt+0x12a4>
  402aa8:	bl	401670 <close@plt>
  402aac:	bl	401800 <__errno_location@plt>
  402ab0:	mov	x8, x0
  402ab4:	mov	w0, wzr
  402ab8:	mov	w9, #0x9                   	// #9
  402abc:	str	w9, [x8]
  402ac0:	b	402ac8 <setlocale@plt+0x12a8>
  402ac4:	mov	w0, wzr
  402ac8:	ldr	x19, [sp, #16]
  402acc:	ldp	x29, x30, [sp], #32
  402ad0:	ret
  402ad4:	stp	x29, x30, [sp, #-32]!
  402ad8:	stp	x20, x19, [sp, #16]
  402adc:	mov	x29, sp
  402ae0:	cbz	x0, 402b60 <setlocale@plt+0x1340>
  402ae4:	mov	w1, #0x2f                  	// #47
  402ae8:	mov	x19, x0
  402aec:	bl	401680 <strrchr@plt>
  402af0:	cmp	x0, #0x0
  402af4:	csinc	x20, x19, x0, eq  // eq = none
  402af8:	sub	x8, x20, x19
  402afc:	cmp	x8, #0x7
  402b00:	b.lt	402b44 <setlocale@plt+0x1324>  // b.tstop
  402b04:	adrp	x1, 407000 <_obstack_memory_used@@Base+0x1e64>
  402b08:	sub	x0, x20, #0x7
  402b0c:	add	x1, x1, #0x1a5
  402b10:	mov	w2, #0x7                   	// #7
  402b14:	bl	4015f0 <strncmp@plt>
  402b18:	cbnz	w0, 402b44 <setlocale@plt+0x1324>
  402b1c:	adrp	x1, 407000 <_obstack_memory_used@@Base+0x1e64>
  402b20:	add	x1, x1, #0x1ad
  402b24:	mov	w2, #0x3                   	// #3
  402b28:	mov	x0, x20
  402b2c:	bl	4015f0 <strncmp@plt>
  402b30:	mov	x19, x20
  402b34:	cbnz	w0, 402b44 <setlocale@plt+0x1324>
  402b38:	add	x19, x20, #0x3
  402b3c:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x12e64>
  402b40:	str	x19, [x8, #584]
  402b44:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x12e64>
  402b48:	adrp	x9, 418000 <_obstack_memory_used@@Base+0x12e64>
  402b4c:	str	x19, [x8, #704]
  402b50:	str	x19, [x9, #544]
  402b54:	ldp	x20, x19, [sp, #16]
  402b58:	ldp	x29, x30, [sp], #32
  402b5c:	ret
  402b60:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x12e64>
  402b64:	ldr	x3, [x8, #552]
  402b68:	adrp	x0, 407000 <_obstack_memory_used@@Base+0x1e64>
  402b6c:	add	x0, x0, #0x16d
  402b70:	mov	w1, #0x37                  	// #55
  402b74:	mov	w2, #0x1                   	// #1
  402b78:	bl	401780 <fwrite@plt>
  402b7c:	bl	4016a0 <abort@plt>
  402b80:	stp	x29, x30, [sp, #-48]!
  402b84:	str	x21, [sp, #16]
  402b88:	stp	x20, x19, [sp, #32]
  402b8c:	mov	x29, sp
  402b90:	mov	x19, x0
  402b94:	bl	401800 <__errno_location@plt>
  402b98:	ldr	w21, [x0]
  402b9c:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x12e64>
  402ba0:	add	x8, x8, #0x2c8
  402ba4:	cmp	x19, #0x0
  402ba8:	mov	x20, x0
  402bac:	csel	x0, x8, x19, eq  // eq = none
  402bb0:	mov	w1, #0x38                  	// #56
  402bb4:	bl	404b64 <setlocale@plt+0x3344>
  402bb8:	str	w21, [x20]
  402bbc:	ldp	x20, x19, [sp, #32]
  402bc0:	ldr	x21, [sp, #16]
  402bc4:	ldp	x29, x30, [sp], #48
  402bc8:	ret
  402bcc:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x12e64>
  402bd0:	add	x8, x8, #0x2c8
  402bd4:	cmp	x0, #0x0
  402bd8:	csel	x8, x8, x0, eq  // eq = none
  402bdc:	ldr	w0, [x8]
  402be0:	ret
  402be4:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x12e64>
  402be8:	add	x8, x8, #0x2c8
  402bec:	cmp	x0, #0x0
  402bf0:	csel	x8, x8, x0, eq  // eq = none
  402bf4:	str	w1, [x8]
  402bf8:	ret
  402bfc:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x12e64>
  402c00:	add	x8, x8, #0x2c8
  402c04:	cmp	x0, #0x0
  402c08:	ubfx	w9, w1, #5, #3
  402c0c:	csel	x8, x8, x0, eq  // eq = none
  402c10:	add	x8, x8, w9, uxtw #2
  402c14:	ldr	w9, [x8, #8]
  402c18:	lsr	w10, w9, w1
  402c1c:	and	w0, w10, #0x1
  402c20:	and	w10, w2, #0x1
  402c24:	eor	w10, w0, w10
  402c28:	lsl	w10, w10, w1
  402c2c:	eor	w9, w10, w9
  402c30:	str	w9, [x8, #8]
  402c34:	ret
  402c38:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x12e64>
  402c3c:	add	x8, x8, #0x2c8
  402c40:	cmp	x0, #0x0
  402c44:	csel	x8, x8, x0, eq  // eq = none
  402c48:	ldr	w0, [x8, #4]
  402c4c:	str	w1, [x8, #4]
  402c50:	ret
  402c54:	stp	x29, x30, [sp, #-16]!
  402c58:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x12e64>
  402c5c:	add	x8, x8, #0x2c8
  402c60:	cmp	x0, #0x0
  402c64:	csel	x8, x8, x0, eq  // eq = none
  402c68:	mov	w9, #0xa                   	// #10
  402c6c:	mov	x29, sp
  402c70:	str	w9, [x8]
  402c74:	cbz	x1, 402c88 <setlocale@plt+0x1468>
  402c78:	cbz	x2, 402c88 <setlocale@plt+0x1468>
  402c7c:	stp	x1, x2, [x8, #40]
  402c80:	ldp	x29, x30, [sp], #16
  402c84:	ret
  402c88:	bl	4016a0 <abort@plt>
  402c8c:	sub	sp, sp, #0x60
  402c90:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x12e64>
  402c94:	add	x8, x8, #0x2c8
  402c98:	cmp	x4, #0x0
  402c9c:	stp	x29, x30, [sp, #16]
  402ca0:	str	x25, [sp, #32]
  402ca4:	stp	x24, x23, [sp, #48]
  402ca8:	stp	x22, x21, [sp, #64]
  402cac:	stp	x20, x19, [sp, #80]
  402cb0:	add	x29, sp, #0x10
  402cb4:	mov	x19, x3
  402cb8:	mov	x20, x2
  402cbc:	mov	x21, x1
  402cc0:	mov	x22, x0
  402cc4:	csel	x24, x8, x4, eq  // eq = none
  402cc8:	bl	401800 <__errno_location@plt>
  402ccc:	ldp	w4, w5, [x24]
  402cd0:	ldp	x7, x8, [x24, #40]
  402cd4:	ldr	w25, [x0]
  402cd8:	mov	x23, x0
  402cdc:	add	x6, x24, #0x8
  402ce0:	mov	x0, x22
  402ce4:	mov	x1, x21
  402ce8:	mov	x2, x20
  402cec:	mov	x3, x19
  402cf0:	str	x8, [sp]
  402cf4:	bl	402d18 <setlocale@plt+0x14f8>
  402cf8:	str	w25, [x23]
  402cfc:	ldp	x20, x19, [sp, #80]
  402d00:	ldp	x22, x21, [sp, #64]
  402d04:	ldp	x24, x23, [sp, #48]
  402d08:	ldr	x25, [sp, #32]
  402d0c:	ldp	x29, x30, [sp, #16]
  402d10:	add	sp, sp, #0x60
  402d14:	ret
  402d18:	sub	sp, sp, #0x120
  402d1c:	stp	x29, x30, [sp, #192]
  402d20:	add	x29, sp, #0xc0
  402d24:	ldr	x8, [x29, #96]
  402d28:	stp	x28, x27, [sp, #208]
  402d2c:	stp	x26, x25, [sp, #224]
  402d30:	stp	x24, x23, [sp, #240]
  402d34:	stp	x22, x21, [sp, #256]
  402d38:	stp	x20, x19, [sp, #272]
  402d3c:	str	x7, [sp, #80]
  402d40:	stur	x6, [x29, #-48]
  402d44:	mov	w19, w5
  402d48:	mov	w20, w4
  402d4c:	mov	x23, x3
  402d50:	mov	x21, x2
  402d54:	mov	x27, x1
  402d58:	str	x8, [sp, #96]
  402d5c:	mov	x24, x0
  402d60:	bl	401750 <__ctype_get_mb_cur_max@plt>
  402d64:	mov	w1, w20
  402d68:	mov	x22, xzr
  402d6c:	mov	w8, wzr
  402d70:	mov	w28, wzr
  402d74:	str	w19, [sp, #64]
  402d78:	ubfx	w19, w19, #1, #1
  402d7c:	add	x9, x21, #0x1
  402d80:	mov	w15, #0x1                   	// #1
  402d84:	str	x0, [sp, #56]
  402d88:	stur	xzr, [x29, #-80]
  402d8c:	stur	xzr, [x29, #-56]
  402d90:	str	wzr, [sp, #88]
  402d94:	stur	x9, [x29, #-72]
  402d98:	cmp	w1, #0xa
  402d9c:	b.hi	403970 <setlocale@plt+0x2150>  // b.pmore
  402da0:	adrp	x12, 407000 <_obstack_memory_used@@Base+0x1e64>
  402da4:	mov	w9, w1
  402da8:	add	x12, x12, #0x1b8
  402dac:	adr	x10, 402dd0 <setlocale@plt+0x15b0>
  402db0:	ldrb	w11, [x12, x9]
  402db4:	add	x10, x10, x11, lsl #2
  402db8:	mov	x26, x27
  402dbc:	mov	x20, xzr
  402dc0:	mov	w16, wzr
  402dc4:	mov	w9, #0x1                   	// #1
  402dc8:	mov	w27, w28
  402dcc:	br	x10
  402dd0:	adrp	x0, 407000 <_obstack_memory_used@@Base+0x1e64>
  402dd4:	add	x0, x0, #0x310
  402dd8:	mov	w20, w1
  402ddc:	mov	w22, w15
  402de0:	bl	404088 <setlocale@plt+0x2868>
  402de4:	str	x0, [sp, #80]
  402de8:	adrp	x0, 406000 <_obstack_memory_used@@Base+0xe64>
  402dec:	add	x0, x0, #0xe31
  402df0:	mov	w1, w20
  402df4:	bl	404088 <setlocale@plt+0x2868>
  402df8:	mov	w15, w22
  402dfc:	mov	w1, w20
  402e00:	str	x0, [sp, #96]
  402e04:	stur	w1, [x29, #-28]
  402e08:	tbnz	w19, #0, 402e48 <setlocale@plt+0x1628>
  402e0c:	ldr	x8, [sp, #80]
  402e10:	ldrb	w9, [x8]
  402e14:	cbz	w9, 402e48 <setlocale@plt+0x1628>
  402e18:	mov	w27, w15
  402e1c:	mov	x10, xzr
  402e20:	add	x8, x8, #0x1
  402e24:	b	402e38 <setlocale@plt+0x1618>
  402e28:	ldrb	w9, [x8, x10]
  402e2c:	add	x20, x10, #0x1
  402e30:	mov	x10, x20
  402e34:	cbz	w9, 402e50 <setlocale@plt+0x1630>
  402e38:	cmp	x10, x26
  402e3c:	b.cs	402e28 <setlocale@plt+0x1608>  // b.hs, b.nlast
  402e40:	strb	w9, [x24, x10]
  402e44:	b	402e28 <setlocale@plt+0x1608>
  402e48:	mov	w27, w15
  402e4c:	mov	x20, xzr
  402e50:	ldr	x25, [sp, #96]
  402e54:	mov	x0, x25
  402e58:	bl	401530 <strlen@plt>
  402e5c:	ldur	w1, [x29, #-28]
  402e60:	mov	x22, x0
  402e64:	stur	x25, [x29, #-56]
  402e68:	mov	w9, #0x1                   	// #1
  402e6c:	mov	w16, w19
  402e70:	mov	w15, w27
  402e74:	mov	w27, w28
  402e78:	b	402f24 <setlocale@plt+0x1704>
  402e7c:	mov	w19, #0x1                   	// #1
  402e80:	mov	w1, #0x5                   	// #5
  402e84:	tbz	w19, #0, 402eb0 <setlocale@plt+0x1690>
  402e88:	adrp	x8, 407000 <_obstack_memory_used@@Base+0x1e64>
  402e8c:	mov	x20, xzr
  402e90:	mov	w22, #0x1                   	// #1
  402e94:	add	x8, x8, #0x30e
  402e98:	stur	x8, [x29, #-56]
  402e9c:	b	402ed0 <setlocale@plt+0x16b0>
  402ea0:	mov	x20, xzr
  402ea4:	mov	w16, wzr
  402ea8:	mov	w9, w8
  402eac:	b	402f24 <setlocale@plt+0x1704>
  402eb0:	cbz	x26, 402ebc <setlocale@plt+0x169c>
  402eb4:	mov	w8, #0x22                  	// #34
  402eb8:	strb	w8, [x24]
  402ebc:	adrp	x8, 407000 <_obstack_memory_used@@Base+0x1e64>
  402ec0:	add	x8, x8, #0x30e
  402ec4:	mov	w20, #0x1                   	// #1
  402ec8:	stur	x8, [x29, #-56]
  402ecc:	mov	w22, #0x1                   	// #1
  402ed0:	mov	w9, #0x1                   	// #1
  402ed4:	b	402f20 <setlocale@plt+0x1700>
  402ed8:	mov	w8, #0x1                   	// #1
  402edc:	mov	w19, #0x1                   	// #1
  402ee0:	eor	w9, w19, #0x1
  402ee4:	orr	w8, w8, w9
  402ee8:	tbz	w19, #0, 402ef8 <setlocale@plt+0x16d8>
  402eec:	mov	x20, xzr
  402ef0:	mov	w1, #0x2                   	// #2
  402ef4:	b	402f0c <setlocale@plt+0x16ec>
  402ef8:	cbz	x26, 402f04 <setlocale@plt+0x16e4>
  402efc:	mov	w9, #0x27                  	// #39
  402f00:	strb	w9, [x24]
  402f04:	mov	w1, #0x2                   	// #2
  402f08:	mov	w20, #0x1                   	// #1
  402f0c:	adrp	x9, 406000 <_obstack_memory_used@@Base+0xe64>
  402f10:	add	x9, x9, #0xe31
  402f14:	stur	x9, [x29, #-56]
  402f18:	mov	w22, #0x1                   	// #1
  402f1c:	mov	w9, w8
  402f20:	mov	w16, w19
  402f24:	ldur	x8, [x29, #-48]
  402f28:	mov	w14, w9
  402f2c:	eor	w17, w16, #0x1
  402f30:	stur	w17, [x29, #-60]
  402f34:	cmp	x8, #0x0
  402f38:	cset	w8, eq  // eq = none
  402f3c:	cmp	x22, #0x0
  402f40:	cset	w9, ne  // ne = any
  402f44:	cmp	w1, #0x2
  402f48:	cset	w10, ne  // ne = any
  402f4c:	and	w13, w10, w14
  402f50:	and	w11, w9, w16
  402f54:	orr	w10, w10, w17
  402f58:	and	w17, w9, w13
  402f5c:	orr	w9, w13, w16
  402f60:	eor	w9, w9, #0x1
  402f64:	cset	w12, eq  // eq = none
  402f68:	orr	w8, w8, w9
  402f6c:	mov	x25, xzr
  402f70:	and	w11, w14, w11
  402f74:	stur	w10, [x29, #-84]
  402f78:	and	w10, w12, w16
  402f7c:	stur	w8, [x29, #-24]
  402f80:	eor	w8, w14, #0x1
  402f84:	str	w11, [sp, #72]
  402f88:	str	w10, [sp, #92]
  402f8c:	stur	w14, [x29, #-64]
  402f90:	str	w8, [sp, #76]
  402f94:	stp	w16, w1, [x29, #-32]
  402f98:	stur	w17, [x29, #-36]
  402f9c:	b	402fa4 <setlocale@plt+0x1784>
  402fa0:	add	x25, x25, #0x1
  402fa4:	cmn	x23, #0x1
  402fa8:	b.eq	402fbc <setlocale@plt+0x179c>  // b.none
  402fac:	cmp	x25, x23
  402fb0:	cset	w8, eq  // eq = none
  402fb4:	tbz	w8, #0, 402fcc <setlocale@plt+0x17ac>
  402fb8:	b	403820 <setlocale@plt+0x2000>
  402fbc:	ldrb	w8, [x21, x25]
  402fc0:	cmp	w8, #0x0
  402fc4:	cset	w8, eq  // eq = none
  402fc8:	tbnz	w8, #0, 403820 <setlocale@plt+0x2000>
  402fcc:	cbz	w17, 403008 <setlocale@plt+0x17e8>
  402fd0:	cmp	x22, #0x2
  402fd4:	add	x19, x25, x22
  402fd8:	b.cc	403000 <setlocale@plt+0x17e0>  // b.lo, b.ul, b.last
  402fdc:	cmn	x23, #0x1
  402fe0:	b.ne	403000 <setlocale@plt+0x17e0>  // b.any
  402fe4:	mov	x0, x21
  402fe8:	mov	w23, w15
  402fec:	bl	401530 <strlen@plt>
  402ff0:	ldp	w17, w16, [x29, #-36]
  402ff4:	ldur	w1, [x29, #-28]
  402ff8:	mov	w15, w23
  402ffc:	mov	x23, x0
  403000:	cmp	x19, x23
  403004:	b.ls	403144 <setlocale@plt+0x1924>  // b.plast
  403008:	mov	w28, wzr
  40300c:	ldrb	w19, [x21, x25]
  403010:	cmp	w19, #0x7e
  403014:	b.hi	403278 <setlocale@plt+0x1a58>  // b.pmore
  403018:	adrp	x14, 407000 <_obstack_memory_used@@Base+0x1e64>
  40301c:	add	x14, x14, #0x1c3
  403020:	adr	x13, 403044 <setlocale@plt+0x1824>
  403024:	ldrb	w10, [x14, x19]
  403028:	add	x13, x13, x10, lsl #2
  40302c:	mov	w11, wzr
  403030:	mov	w9, wzr
  403034:	mov	w8, #0x1                   	// #1
  403038:	mov	w12, #0x6e                  	// #110
  40303c:	mov	w10, #0x61                  	// #97
  403040:	br	x13
  403044:	ldur	w10, [x29, #-24]
  403048:	tbnz	w10, #0, 403068 <setlocale@plt+0x1848>
  40304c:	ldur	x11, [x29, #-48]
  403050:	ubfx	w10, w19, #5, #3
  403054:	ldr	w10, [x11, w10, uxtw #2]
  403058:	lsr	w10, w10, w19
  40305c:	tbz	w10, #0, 403068 <setlocale@plt+0x1848>
  403060:	mov	w10, w19
  403064:	b	403070 <setlocale@plt+0x1850>
  403068:	mov	w10, w19
  40306c:	tbz	w28, #0, 4030e8 <setlocale@plt+0x18c8>
  403070:	tbz	w16, #0, 40307c <setlocale@plt+0x185c>
  403074:	mov	w10, #0x10                  	// #16
  403078:	b	403134 <setlocale@plt+0x1914>
  40307c:	cmp	w1, #0x2
  403080:	cset	w9, ne  // ne = any
  403084:	orr	w9, w9, w27
  403088:	tbnz	w9, #0, 4030cc <setlocale@plt+0x18ac>
  40308c:	cmp	x20, x26
  403090:	b.cs	40309c <setlocale@plt+0x187c>  // b.hs, b.nlast
  403094:	mov	w9, #0x27                  	// #39
  403098:	strb	w9, [x24, x20]
  40309c:	add	x9, x20, #0x1
  4030a0:	cmp	x9, x26
  4030a4:	b.cs	4030b0 <setlocale@plt+0x1890>  // b.hs, b.nlast
  4030a8:	mov	w11, #0x24                  	// #36
  4030ac:	strb	w11, [x24, x9]
  4030b0:	add	x9, x20, #0x2
  4030b4:	cmp	x9, x26
  4030b8:	b.cs	4030c4 <setlocale@plt+0x18a4>  // b.hs, b.nlast
  4030bc:	mov	w11, #0x27                  	// #39
  4030c0:	strb	w11, [x24, x9]
  4030c4:	add	x20, x20, #0x3
  4030c8:	mov	w27, #0x1                   	// #1
  4030cc:	cmp	x20, x26
  4030d0:	b.cs	4030dc <setlocale@plt+0x18bc>  // b.hs, b.nlast
  4030d4:	mov	w9, #0x5c                  	// #92
  4030d8:	strb	w9, [x24, x20]
  4030dc:	add	x20, x20, #0x1
  4030e0:	mov	w9, #0x1                   	// #1
  4030e4:	mov	w19, w10
  4030e8:	tbnz	w9, #0, 40311c <setlocale@plt+0x18fc>
  4030ec:	tbz	w27, #0, 40311c <setlocale@plt+0x18fc>
  4030f0:	cmp	x20, x26
  4030f4:	b.cs	403100 <setlocale@plt+0x18e0>  // b.hs, b.nlast
  4030f8:	mov	w9, #0x27                  	// #39
  4030fc:	strb	w9, [x24, x20]
  403100:	add	x9, x20, #0x1
  403104:	cmp	x9, x26
  403108:	b.cs	403114 <setlocale@plt+0x18f4>  // b.hs, b.nlast
  40310c:	mov	w10, #0x27                  	// #39
  403110:	strb	w10, [x24, x9]
  403114:	mov	w27, wzr
  403118:	add	x20, x20, #0x2
  40311c:	cmp	x20, x26
  403120:	b.cs	403128 <setlocale@plt+0x1908>  // b.hs, b.nlast
  403124:	strb	w19, [x24, x20]
  403128:	mov	w10, wzr
  40312c:	add	x20, x20, #0x1
  403130:	and	w15, w15, w8
  403134:	cbz	w10, 402fa0 <setlocale@plt+0x1780>
  403138:	cmp	w10, #0xf
  40313c:	b.eq	402fa0 <setlocale@plt+0x1780>  // b.none
  403140:	b	4038a4 <setlocale@plt+0x2084>
  403144:	ldur	x1, [x29, #-56]
  403148:	add	x0, x21, x25
  40314c:	mov	x2, x22
  403150:	mov	w19, w15
  403154:	bl	401650 <bcmp@plt>
  403158:	ldur	w9, [x29, #-60]
  40315c:	cmp	w0, #0x0
  403160:	cset	w8, ne  // ne = any
  403164:	cset	w28, eq  // eq = none
  403168:	orr	w8, w8, w9
  40316c:	tbz	w8, #0, 403180 <setlocale@plt+0x1960>
  403170:	ldp	w16, w1, [x29, #-32]
  403174:	ldur	w17, [x29, #-36]
  403178:	mov	w15, w19
  40317c:	b	40300c <setlocale@plt+0x17ec>
  403180:	ldp	w16, w1, [x29, #-32]
  403184:	ldur	w17, [x29, #-36]
  403188:	mov	w10, #0x10                  	// #16
  40318c:	mov	w15, w19
  403190:	b	403134 <setlocale@plt+0x1914>
  403194:	cmp	x23, #0x1
  403198:	b.eq	4031bc <setlocale@plt+0x199c>  // b.none
  40319c:	cmn	x23, #0x1
  4031a0:	b.ne	4031c0 <setlocale@plt+0x19a0>  // b.any
  4031a4:	ldrb	w8, [x21, #1]
  4031a8:	cbz	w8, 4031bc <setlocale@plt+0x199c>
  4031ac:	mov	w9, wzr
  4031b0:	mov	w8, wzr
  4031b4:	mov	x23, #0xffffffffffffffff    	// #-1
  4031b8:	b	403044 <setlocale@plt+0x1824>
  4031bc:	cbz	x25, 4031cc <setlocale@plt+0x19ac>
  4031c0:	mov	w9, wzr
  4031c4:	mov	w8, wzr
  4031c8:	b	403044 <setlocale@plt+0x1824>
  4031cc:	mov	w11, #0x1                   	// #1
  4031d0:	cmp	w1, #0x2
  4031d4:	b.ne	4031dc <setlocale@plt+0x19bc>  // b.any
  4031d8:	tbnz	w16, #0, 403074 <setlocale@plt+0x1854>
  4031dc:	mov	w9, wzr
  4031e0:	mov	w8, w11
  4031e4:	b	403044 <setlocale@plt+0x1824>
  4031e8:	cmp	w1, #0x2
  4031ec:	b.ne	4032a8 <setlocale@plt+0x1a88>  // b.any
  4031f0:	tbnz	w16, #0, 403074 <setlocale@plt+0x1854>
  4031f4:	b	4032b4 <setlocale@plt+0x1a94>
  4031f8:	mov	w10, #0x66                  	// #102
  4031fc:	b	4032cc <setlocale@plt+0x1aac>
  403200:	mov	w12, #0x74                  	// #116
  403204:	b	4032c0 <setlocale@plt+0x1aa0>
  403208:	mov	w10, #0x62                  	// #98
  40320c:	b	4032cc <setlocale@plt+0x1aac>
  403210:	mov	w12, #0x72                  	// #114
  403214:	b	4032c0 <setlocale@plt+0x1aa0>
  403218:	ldur	w8, [x29, #-64]
  40321c:	tbz	w8, #0, 4032e0 <setlocale@plt+0x1ac0>
  403220:	tbnz	w16, #0, 403074 <setlocale@plt+0x1854>
  403224:	cmp	w1, #0x2
  403228:	cset	w8, ne  // ne = any
  40322c:	orr	w8, w8, w27
  403230:	tbz	w8, #0, 403740 <setlocale@plt+0x1f20>
  403234:	mov	x9, x20
  403238:	b	403780 <setlocale@plt+0x1f60>
  40323c:	cmp	w1, #0x5
  403240:	b.eq	40345c <setlocale@plt+0x1c3c>  // b.none
  403244:	cmp	w1, #0x2
  403248:	b.ne	4031c0 <setlocale@plt+0x19a0>  // b.any
  40324c:	tbz	w16, #0, 4031c0 <setlocale@plt+0x19a0>
  403250:	b	403074 <setlocale@plt+0x1854>
  403254:	mov	w10, #0x76                  	// #118
  403258:	b	4032cc <setlocale@plt+0x1aac>
  40325c:	cmp	w1, #0x2
  403260:	b.ne	4032f0 <setlocale@plt+0x1ad0>  // b.any
  403264:	tbz	w16, #0, 403540 <setlocale@plt+0x1d20>
  403268:	mov	w8, #0x1                   	// #1
  40326c:	mov	w10, #0x10                  	// #16
  403270:	str	w8, [sp, #88]
  403274:	b	403134 <setlocale@plt+0x1914>
  403278:	ldr	x8, [sp, #56]
  40327c:	str	w15, [sp, #52]
  403280:	str	x24, [sp, #40]
  403284:	cmp	x8, #0x1
  403288:	b.ne	4032f8 <setlocale@plt+0x1ad8>  // b.any
  40328c:	bl	401710 <__ctype_b_loc@plt>
  403290:	ldr	x8, [x0]
  403294:	ldur	w1, [x29, #-28]
  403298:	mov	w24, #0x1                   	// #1
  40329c:	ldrh	w8, [x8, x19, lsl #1]
  4032a0:	ubfx	w10, w8, #14, #1
  4032a4:	b	4035c0 <setlocale@plt+0x1da0>
  4032a8:	ldr	w8, [sp, #72]
  4032ac:	mov	w12, w19
  4032b0:	tbz	w8, #0, 4032c0 <setlocale@plt+0x1aa0>
  4032b4:	mov	w9, wzr
  4032b8:	mov	w8, wzr
  4032bc:	b	4030e8 <setlocale@plt+0x18c8>
  4032c0:	ldur	w8, [x29, #-84]
  4032c4:	mov	w10, w12
  4032c8:	tbz	w8, #0, 403074 <setlocale@plt+0x1854>
  4032cc:	ldur	w11, [x29, #-64]
  4032d0:	mov	w9, wzr
  4032d4:	mov	w8, wzr
  4032d8:	tbz	w11, #0, 403044 <setlocale@plt+0x1824>
  4032dc:	b	403070 <setlocale@plt+0x1850>
  4032e0:	ldr	w8, [sp, #64]
  4032e4:	tbz	w8, #0, 4031c0 <setlocale@plt+0x19a0>
  4032e8:	mov	w10, #0xf                   	// #15
  4032ec:	b	403134 <setlocale@plt+0x1914>
  4032f0:	mov	w9, wzr
  4032f4:	b	4035ac <setlocale@plt+0x1d8c>
  4032f8:	cmn	x23, #0x1
  4032fc:	str	x22, [sp, #16]
  403300:	stur	xzr, [x29, #-16]
  403304:	b.ne	403314 <setlocale@plt+0x1af4>  // b.any
  403308:	mov	x0, x21
  40330c:	bl	401530 <strlen@plt>
  403310:	mov	x23, x0
  403314:	sub	x8, x23, x25
  403318:	str	x8, [sp, #8]
  40331c:	add	x8, x21, x25
  403320:	str	x8, [sp, #32]
  403324:	ldur	x8, [x29, #-72]
  403328:	mov	x24, xzr
  40332c:	add	x8, x8, x25
  403330:	str	x8, [sp, #24]
  403334:	mov	w8, #0x1                   	// #1
  403338:	str	w8, [sp, #68]
  40333c:	add	x8, x24, x25
  403340:	add	x1, x21, x8
  403344:	sub	x2, x23, x8
  403348:	sub	x0, x29, #0x14
  40334c:	sub	x3, x29, #0x10
  403350:	mov	w22, w27
  403354:	bl	404e0c <setlocale@plt+0x35ec>
  403358:	cbz	x0, 4033b0 <setlocale@plt+0x1b90>
  40335c:	mov	x27, x0
  403360:	cmn	x0, #0x1
  403364:	b.eq	4033ac <setlocale@plt+0x1b8c>  // b.none
  403368:	cmn	x27, #0x2
  40336c:	b.ne	4033b8 <setlocale@plt+0x1b98>  // b.any
  403370:	add	x8, x24, x25
  403374:	cmp	x8, x23
  403378:	mov	w27, w22
  40337c:	b.cs	4033a0 <setlocale@plt+0x1b80>  // b.hs, b.nlast
  403380:	ldr	x9, [sp, #32]
  403384:	ldrb	w8, [x9, x24]
  403388:	cbz	w8, 4033a0 <setlocale@plt+0x1b80>
  40338c:	add	x24, x24, #0x1
  403390:	add	x8, x25, x24
  403394:	cmp	x8, x23
  403398:	b.cc	403384 <setlocale@plt+0x1b64>  // b.lo, b.ul, b.last
  40339c:	ldr	x24, [sp, #8]
  4033a0:	str	wzr, [sp, #68]
  4033a4:	mov	w10, #0x34                  	// #52
  4033a8:	b	403448 <setlocale@plt+0x1c28>
  4033ac:	str	wzr, [sp, #68]
  4033b0:	mov	w10, #0x34                  	// #52
  4033b4:	b	403444 <setlocale@plt+0x1c24>
  4033b8:	ldr	w8, [sp, #92]
  4033bc:	cbz	w8, 403420 <setlocale@plt+0x1c00>
  4033c0:	cmp	x27, #0x2
  4033c4:	b.cc	403418 <setlocale@plt+0x1bf8>  // b.lo, b.ul, b.last
  4033c8:	ldr	x9, [sp, #24]
  4033cc:	sub	x8, x27, #0x1
  4033d0:	add	x9, x9, x24
  4033d4:	b	4033e4 <setlocale@plt+0x1bc4>
  4033d8:	subs	x8, x8, #0x1
  4033dc:	add	x9, x9, #0x1
  4033e0:	b.eq	403418 <setlocale@plt+0x1bf8>  // b.none
  4033e4:	ldrb	w10, [x9]
  4033e8:	sub	w10, w10, #0x5b
  4033ec:	cmp	w10, #0x21
  4033f0:	b.hi	4033d8 <setlocale@plt+0x1bb8>  // b.pmore
  4033f4:	mov	w11, #0x1                   	// #1
  4033f8:	lsl	x10, x11, x10
  4033fc:	mov	x11, #0x2b                  	// #43
  403400:	movk	x11, #0x2, lsl #32
  403404:	tst	x10, x11
  403408:	b.eq	4033d8 <setlocale@plt+0x1bb8>  // b.none
  40340c:	mov	w10, #0x10                  	// #16
  403410:	cbnz	w10, 403444 <setlocale@plt+0x1c24>
  403414:	b	403420 <setlocale@plt+0x1c00>
  403418:	mov	w10, wzr
  40341c:	cbnz	w10, 403444 <setlocale@plt+0x1c24>
  403420:	ldur	w0, [x29, #-20]
  403424:	bl	4017f0 <iswprint@plt>
  403428:	ldr	w9, [sp, #68]
  40342c:	cmp	w0, #0x0
  403430:	cset	w8, ne  // ne = any
  403434:	mov	w10, wzr
  403438:	and	w9, w9, w8
  40343c:	add	x24, x27, x24
  403440:	str	w9, [sp, #68]
  403444:	mov	w27, w22
  403448:	cbnz	w10, 403510 <setlocale@plt+0x1cf0>
  40344c:	sub	x0, x29, #0x10
  403450:	bl	4016b0 <mbsinit@plt>
  403454:	cbz	w0, 40333c <setlocale@plt+0x1b1c>
  403458:	b	403518 <setlocale@plt+0x1cf8>
  40345c:	ldr	w8, [sp, #64]
  403460:	tbz	w8, #2, 4031c0 <setlocale@plt+0x19a0>
  403464:	add	x10, x25, #0x2
  403468:	cmp	x10, x23
  40346c:	b.cs	4031c0 <setlocale@plt+0x19a0>  // b.hs, b.nlast
  403470:	add	x8, x25, x21
  403474:	ldrb	w8, [x8, #1]
  403478:	cmp	w8, #0x3f
  40347c:	b.ne	4031c0 <setlocale@plt+0x19a0>  // b.any
  403480:	ldrb	w11, [x21, x10]
  403484:	mov	w9, wzr
  403488:	cmp	w11, #0x3e
  40348c:	b.hi	403818 <setlocale@plt+0x1ff8>  // b.pmore
  403490:	mov	w8, #0x1                   	// #1
  403494:	mov	x12, #0xa38200000000        	// #179778741075968
  403498:	lsl	x8, x8, x11
  40349c:	movk	x12, #0x7000, lsl #48
  4034a0:	tst	x8, x12
  4034a4:	b.eq	403818 <setlocale@plt+0x1ff8>  // b.none
  4034a8:	tbnz	w16, #0, 403074 <setlocale@plt+0x1854>
  4034ac:	cmp	x20, x26
  4034b0:	b.cs	4034bc <setlocale@plt+0x1c9c>  // b.hs, b.nlast
  4034b4:	mov	w8, #0x3f                  	// #63
  4034b8:	strb	w8, [x24, x20]
  4034bc:	add	x8, x20, #0x1
  4034c0:	cmp	x8, x26
  4034c4:	b.cs	4034d0 <setlocale@plt+0x1cb0>  // b.hs, b.nlast
  4034c8:	mov	w9, #0x22                  	// #34
  4034cc:	strb	w9, [x24, x8]
  4034d0:	add	x8, x20, #0x2
  4034d4:	cmp	x8, x26
  4034d8:	b.cs	4034e4 <setlocale@plt+0x1cc4>  // b.hs, b.nlast
  4034dc:	mov	w9, #0x22                  	// #34
  4034e0:	strb	w9, [x24, x8]
  4034e4:	add	x8, x20, #0x3
  4034e8:	cmp	x8, x26
  4034ec:	b.cs	4034f8 <setlocale@plt+0x1cd8>  // b.hs, b.nlast
  4034f0:	mov	w9, #0x3f                  	// #63
  4034f4:	strb	w9, [x24, x8]
  4034f8:	mov	w9, wzr
  4034fc:	mov	w8, wzr
  403500:	add	x20, x20, #0x4
  403504:	mov	x25, x10
  403508:	mov	w19, w11
  40350c:	b	403044 <setlocale@plt+0x1824>
  403510:	cmp	w10, #0x34
  403514:	b.ne	40351c <setlocale@plt+0x1cfc>  // b.any
  403518:	mov	w10, wzr
  40351c:	ldp	w16, w1, [x29, #-32]
  403520:	ldr	w15, [sp, #52]
  403524:	ldr	x22, [sp, #16]
  403528:	ldur	w17, [x29, #-36]
  40352c:	cbz	w10, 4035bc <setlocale@plt+0x1d9c>
  403530:	ldr	x24, [sp, #40]
  403534:	mov	w11, wzr
  403538:	mov	w8, wzr
  40353c:	b	4037fc <setlocale@plt+0x1fdc>
  403540:	ldur	x10, [x29, #-80]
  403544:	cmp	x26, #0x0
  403548:	cset	w8, eq  // eq = none
  40354c:	cmp	x10, #0x0
  403550:	cset	w9, ne  // ne = any
  403554:	orr	w8, w9, w8
  403558:	cmp	w8, #0x0
  40355c:	csel	x10, x10, x26, ne  // ne = any
  403560:	csel	x26, x26, xzr, ne  // ne = any
  403564:	cmp	x20, x26
  403568:	stur	x10, [x29, #-80]
  40356c:	b.cs	403578 <setlocale@plt+0x1d58>  // b.hs, b.nlast
  403570:	mov	w8, #0x27                  	// #39
  403574:	strb	w8, [x24, x20]
  403578:	add	x8, x20, #0x1
  40357c:	cmp	x8, x26
  403580:	b.cs	40358c <setlocale@plt+0x1d6c>  // b.hs, b.nlast
  403584:	mov	w9, #0x5c                  	// #92
  403588:	strb	w9, [x24, x8]
  40358c:	add	x8, x20, #0x2
  403590:	cmp	x8, x26
  403594:	b.cs	4035a0 <setlocale@plt+0x1d80>  // b.hs, b.nlast
  403598:	mov	w9, #0x27                  	// #39
  40359c:	strb	w9, [x24, x8]
  4035a0:	mov	w27, wzr
  4035a4:	mov	w9, wzr
  4035a8:	add	x20, x20, #0x3
  4035ac:	mov	w8, #0x1                   	// #1
  4035b0:	str	w8, [sp, #88]
  4035b4:	mov	w8, #0x1                   	// #1
  4035b8:	b	403044 <setlocale@plt+0x1824>
  4035bc:	ldr	w10, [sp, #68]
  4035c0:	ldr	w9, [sp, #76]
  4035c4:	and	w8, w10, #0x1
  4035c8:	cmp	x24, #0x1
  4035cc:	orr	w9, w10, w9
  4035d0:	b.hi	4035f0 <setlocale@plt+0x1dd0>  // b.pmore
  4035d4:	tbz	w9, #0, 4035f0 <setlocale@plt+0x1dd0>
  4035d8:	ldr	x24, [sp, #40]
  4035dc:	ldr	w15, [sp, #52]
  4035e0:	ldp	w17, w16, [x29, #-36]
  4035e4:	mov	w11, wzr
  4035e8:	mov	w10, wzr
  4035ec:	b	4037fc <setlocale@plt+0x1fdc>
  4035f0:	add	x10, x24, x25
  4035f4:	ldr	x24, [sp, #40]
  4035f8:	ldr	w15, [sp, #52]
  4035fc:	ldp	w17, w16, [x29, #-36]
  403600:	mov	w11, wzr
  403604:	b	403618 <setlocale@plt+0x1df8>
  403608:	ldur	x13, [x29, #-72]
  40360c:	add	x20, x20, #0x1
  403610:	ldrb	w19, [x13, x25]
  403614:	mov	x25, x12
  403618:	tbz	w9, #0, 40363c <setlocale@plt+0x1e1c>
  40361c:	tbz	w28, #0, 4036e4 <setlocale@plt+0x1ec4>
  403620:	cmp	x20, x26
  403624:	b.cs	403630 <setlocale@plt+0x1e10>  // b.hs, b.nlast
  403628:	mov	w12, #0x5c                  	// #92
  40362c:	strb	w12, [x24, x20]
  403630:	mov	w28, wzr
  403634:	add	x20, x20, #0x1
  403638:	b	4036e4 <setlocale@plt+0x1ec4>
  40363c:	tbnz	w16, #0, 4037f8 <setlocale@plt+0x1fd8>
  403640:	cmp	w1, #0x2
  403644:	cset	w11, ne  // ne = any
  403648:	orr	w11, w11, w27
  40364c:	tbnz	w11, #0, 403690 <setlocale@plt+0x1e70>
  403650:	cmp	x20, x26
  403654:	b.cs	403660 <setlocale@plt+0x1e40>  // b.hs, b.nlast
  403658:	mov	w11, #0x27                  	// #39
  40365c:	strb	w11, [x24, x20]
  403660:	add	x11, x20, #0x1
  403664:	cmp	x11, x26
  403668:	b.cs	403674 <setlocale@plt+0x1e54>  // b.hs, b.nlast
  40366c:	mov	w12, #0x24                  	// #36
  403670:	strb	w12, [x24, x11]
  403674:	add	x11, x20, #0x2
  403678:	cmp	x11, x26
  40367c:	b.cs	403688 <setlocale@plt+0x1e68>  // b.hs, b.nlast
  403680:	mov	w12, #0x27                  	// #39
  403684:	strb	w12, [x24, x11]
  403688:	add	x20, x20, #0x3
  40368c:	mov	w27, #0x1                   	// #1
  403690:	cmp	x20, x26
  403694:	b.cs	4036a0 <setlocale@plt+0x1e80>  // b.hs, b.nlast
  403698:	mov	w11, #0x5c                  	// #92
  40369c:	strb	w11, [x24, x20]
  4036a0:	add	x11, x20, #0x1
  4036a4:	cmp	x11, x26
  4036a8:	b.cs	4036b8 <setlocale@plt+0x1e98>  // b.hs, b.nlast
  4036ac:	mov	w12, #0x30                  	// #48
  4036b0:	bfxil	w12, w19, #6, #2
  4036b4:	strb	w12, [x24, x11]
  4036b8:	add	x11, x20, #0x2
  4036bc:	cmp	x11, x26
  4036c0:	b.cs	4036d0 <setlocale@plt+0x1eb0>  // b.hs, b.nlast
  4036c4:	mov	w12, #0x30                  	// #48
  4036c8:	bfxil	w12, w19, #3, #3
  4036cc:	strb	w12, [x24, x11]
  4036d0:	mov	w12, #0x30                  	// #48
  4036d4:	bfxil	w12, w19, #0, #3
  4036d8:	add	x20, x20, #0x3
  4036dc:	mov	w11, #0x1                   	// #1
  4036e0:	mov	w19, w12
  4036e4:	add	x12, x25, #0x1
  4036e8:	cmp	x10, x12
  4036ec:	b.ls	403738 <setlocale@plt+0x1f18>  // b.plast
  4036f0:	and	w13, w11, #0x1
  4036f4:	orn	w13, w13, w27
  4036f8:	tbnz	w13, #0, 403728 <setlocale@plt+0x1f08>
  4036fc:	cmp	x20, x26
  403700:	b.cs	40370c <setlocale@plt+0x1eec>  // b.hs, b.nlast
  403704:	mov	w13, #0x27                  	// #39
  403708:	strb	w13, [x24, x20]
  40370c:	add	x13, x20, #0x1
  403710:	cmp	x13, x26
  403714:	b.cs	403720 <setlocale@plt+0x1f00>  // b.hs, b.nlast
  403718:	mov	w14, #0x27                  	// #39
  40371c:	strb	w14, [x24, x13]
  403720:	mov	w27, wzr
  403724:	add	x20, x20, #0x2
  403728:	cmp	x20, x26
  40372c:	b.cs	403608 <setlocale@plt+0x1de8>  // b.hs, b.nlast
  403730:	strb	w19, [x24, x20]
  403734:	b	403608 <setlocale@plt+0x1de8>
  403738:	mov	w10, #0x2c                  	// #44
  40373c:	b	4037fc <setlocale@plt+0x1fdc>
  403740:	cmp	x20, x26
  403744:	b.cs	403750 <setlocale@plt+0x1f30>  // b.hs, b.nlast
  403748:	mov	w8, #0x27                  	// #39
  40374c:	strb	w8, [x24, x20]
  403750:	add	x8, x20, #0x1
  403754:	cmp	x8, x26
  403758:	b.cs	403764 <setlocale@plt+0x1f44>  // b.hs, b.nlast
  40375c:	mov	w9, #0x24                  	// #36
  403760:	strb	w9, [x24, x8]
  403764:	add	x8, x20, #0x2
  403768:	cmp	x8, x26
  40376c:	b.cs	403778 <setlocale@plt+0x1f58>  // b.hs, b.nlast
  403770:	mov	w9, #0x27                  	// #39
  403774:	strb	w9, [x24, x8]
  403778:	add	x9, x20, #0x3
  40377c:	mov	w27, #0x1                   	// #1
  403780:	cmp	x9, x26
  403784:	b.cs	403790 <setlocale@plt+0x1f70>  // b.hs, b.nlast
  403788:	mov	w8, #0x5c                  	// #92
  40378c:	strb	w8, [x24, x9]
  403790:	cmp	w1, #0x2
  403794:	add	x20, x9, #0x1
  403798:	b.eq	4037e8 <setlocale@plt+0x1fc8>  // b.none
  40379c:	add	x8, x25, #0x1
  4037a0:	cmp	x8, x23
  4037a4:	b.cs	4037e8 <setlocale@plt+0x1fc8>  // b.hs, b.nlast
  4037a8:	ldrb	w8, [x21, x8]
  4037ac:	sub	w8, w8, #0x30
  4037b0:	cmp	w8, #0x9
  4037b4:	b.hi	4037e8 <setlocale@plt+0x1fc8>  // b.pmore
  4037b8:	cmp	x20, x26
  4037bc:	b.cs	4037c8 <setlocale@plt+0x1fa8>  // b.hs, b.nlast
  4037c0:	mov	w8, #0x30                  	// #48
  4037c4:	strb	w8, [x24, x20]
  4037c8:	add	x8, x9, #0x2
  4037cc:	cmp	x8, x26
  4037d0:	b.cs	4037dc <setlocale@plt+0x1fbc>  // b.hs, b.nlast
  4037d4:	mov	w10, #0x30                  	// #48
  4037d8:	strb	w10, [x24, x8]
  4037dc:	mov	w8, wzr
  4037e0:	add	x20, x9, #0x3
  4037e4:	b	4037ec <setlocale@plt+0x1fcc>
  4037e8:	mov	w8, wzr
  4037ec:	mov	w9, #0x1                   	// #1
  4037f0:	mov	w19, #0x30                  	// #48
  4037f4:	b	403044 <setlocale@plt+0x1824>
  4037f8:	mov	w10, #0x10                  	// #16
  4037fc:	cmp	w8, #0x0
  403800:	cset	w8, ne  // ne = any
  403804:	cmp	w10, #0x2c
  403808:	and	w9, w11, #0x1
  40380c:	b.eq	4030e8 <setlocale@plt+0x18c8>  // b.none
  403810:	cbz	w10, 403044 <setlocale@plt+0x1824>
  403814:	b	403134 <setlocale@plt+0x1914>
  403818:	mov	w8, w9
  40381c:	b	403044 <setlocale@plt+0x1824>
  403820:	cmp	x20, #0x0
  403824:	cset	w8, eq  // eq = none
  403828:	cmp	w1, #0x2
  40382c:	cset	w9, eq  // eq = none
  403830:	and	w8, w9, w8
  403834:	and	w8, w16, w8
  403838:	tbnz	w8, #0, 4038ac <setlocale@plt+0x208c>
  40383c:	ldur	w9, [x29, #-64]
  403840:	cmp	w1, #0x2
  403844:	cset	w8, ne  // ne = any
  403848:	orr	w8, w16, w8
  40384c:	tbnz	w8, #0, 403880 <setlocale@plt+0x2060>
  403850:	ldr	w8, [sp, #88]
  403854:	eor	w8, w8, #0x1
  403858:	tbnz	w8, #0, 403880 <setlocale@plt+0x2060>
  40385c:	tbnz	w15, #0, 40394c <setlocale@plt+0x212c>
  403860:	ldur	x8, [x29, #-80]
  403864:	cbz	x8, 403880 <setlocale@plt+0x2060>
  403868:	mov	w28, w27
  40386c:	ldur	x27, [x29, #-80]
  403870:	mov	w1, #0x2                   	// #2
  403874:	mov	w8, w9
  403878:	mov	w19, w16
  40387c:	cbz	x26, 402d98 <setlocale@plt+0x1578>
  403880:	ldur	x10, [x29, #-56]
  403884:	cmp	x10, #0x0
  403888:	cset	w8, eq  // eq = none
  40388c:	orr	w8, w8, w16
  403890:	tbnz	w8, #0, 40393c <setlocale@plt+0x211c>
  403894:	ldrb	w9, [x10]
  403898:	cbz	w9, 40393c <setlocale@plt+0x211c>
  40389c:	add	x8, x10, #0x1
  4038a0:	b	403908 <setlocale@plt+0x20e8>
  4038a4:	cmp	w10, #0x10
  4038a8:	b.ne	403918 <setlocale@plt+0x20f8>  // b.any
  4038ac:	ldur	w8, [x29, #-64]
  4038b0:	mov	w9, #0x4                   	// #4
  4038b4:	mov	x0, x24
  4038b8:	mov	x2, x21
  4038bc:	tst	w8, #0x1
  4038c0:	mov	w8, #0x2                   	// #2
  4038c4:	csel	w8, w9, w8, ne  // ne = any
  4038c8:	cmp	w1, #0x2
  4038cc:	csel	w4, w8, w1, eq  // eq = none
  4038d0:	ldr	w8, [sp, #64]
  4038d4:	mov	x1, x26
  4038d8:	mov	x3, x23
  4038dc:	mov	x6, xzr
  4038e0:	and	w5, w8, #0xfffffffd
  4038e4:	ldr	x8, [sp, #96]
  4038e8:	str	x8, [sp]
  4038ec:	ldr	x7, [sp, #80]
  4038f0:	bl	402d18 <setlocale@plt+0x14f8>
  4038f4:	mov	x20, x0
  4038f8:	b	403918 <setlocale@plt+0x20f8>
  4038fc:	ldrb	w9, [x8], #1
  403900:	add	x20, x20, #0x1
  403904:	cbz	w9, 40393c <setlocale@plt+0x211c>
  403908:	cmp	x20, x26
  40390c:	b.cs	4038fc <setlocale@plt+0x20dc>  // b.hs, b.nlast
  403910:	strb	w9, [x24, x20]
  403914:	b	4038fc <setlocale@plt+0x20dc>
  403918:	mov	x0, x20
  40391c:	ldp	x20, x19, [sp, #272]
  403920:	ldp	x22, x21, [sp, #256]
  403924:	ldp	x24, x23, [sp, #240]
  403928:	ldp	x26, x25, [sp, #224]
  40392c:	ldp	x28, x27, [sp, #208]
  403930:	ldp	x29, x30, [sp, #192]
  403934:	add	sp, sp, #0x120
  403938:	ret
  40393c:	cmp	x20, x26
  403940:	b.cs	403918 <setlocale@plt+0x20f8>  // b.hs, b.nlast
  403944:	strb	wzr, [x24, x20]
  403948:	b	403918 <setlocale@plt+0x20f8>
  40394c:	ldr	x8, [sp, #96]
  403950:	ldur	x1, [x29, #-80]
  403954:	ldr	w5, [sp, #64]
  403958:	ldur	x6, [x29, #-48]
  40395c:	mov	w4, #0x5                   	// #5
  403960:	mov	x0, x24
  403964:	mov	x2, x21
  403968:	mov	x3, x23
  40396c:	b	4038e8 <setlocale@plt+0x20c8>
  403970:	bl	4016a0 <abort@plt>
  403974:	stp	x29, x30, [sp, #-16]!
  403978:	mov	x3, x2
  40397c:	mov	x2, xzr
  403980:	mov	x29, sp
  403984:	bl	403990 <setlocale@plt+0x2170>
  403988:	ldp	x29, x30, [sp], #16
  40398c:	ret
  403990:	sub	sp, sp, #0x70
  403994:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x12e64>
  403998:	add	x8, x8, #0x2c8
  40399c:	cmp	x3, #0x0
  4039a0:	stp	x29, x30, [sp, #16]
  4039a4:	stp	x28, x27, [sp, #32]
  4039a8:	stp	x26, x25, [sp, #48]
  4039ac:	stp	x24, x23, [sp, #64]
  4039b0:	stp	x22, x21, [sp, #80]
  4039b4:	stp	x20, x19, [sp, #96]
  4039b8:	add	x29, sp, #0x10
  4039bc:	mov	x19, x2
  4039c0:	mov	x22, x1
  4039c4:	mov	x23, x0
  4039c8:	csel	x21, x8, x3, eq  // eq = none
  4039cc:	bl	401800 <__errno_location@plt>
  4039d0:	ldp	w4, w8, [x21]
  4039d4:	cmp	x19, #0x0
  4039d8:	ldp	x7, x9, [x21, #40]
  4039dc:	ldr	w28, [x0]
  4039e0:	cset	w10, eq  // eq = none
  4039e4:	orr	w25, w8, w10
  4039e8:	add	x26, x21, #0x8
  4039ec:	mov	x24, x0
  4039f0:	mov	x0, xzr
  4039f4:	mov	x1, xzr
  4039f8:	mov	x2, x23
  4039fc:	mov	x3, x22
  403a00:	mov	w5, w25
  403a04:	mov	x6, x26
  403a08:	str	x9, [sp]
  403a0c:	bl	402d18 <setlocale@plt+0x14f8>
  403a10:	add	x27, x0, #0x1
  403a14:	mov	x20, x0
  403a18:	mov	x0, x27
  403a1c:	bl	404ad8 <setlocale@plt+0x32b8>
  403a20:	ldr	w4, [x21]
  403a24:	ldp	x7, x8, [x21, #40]
  403a28:	mov	x1, x27
  403a2c:	mov	x2, x23
  403a30:	mov	x3, x22
  403a34:	mov	w5, w25
  403a38:	mov	x6, x26
  403a3c:	mov	x21, x0
  403a40:	str	x8, [sp]
  403a44:	bl	402d18 <setlocale@plt+0x14f8>
  403a48:	str	w28, [x24]
  403a4c:	cbz	x19, 403a54 <setlocale@plt+0x2234>
  403a50:	str	x20, [x19]
  403a54:	mov	x0, x21
  403a58:	ldp	x20, x19, [sp, #96]
  403a5c:	ldp	x22, x21, [sp, #80]
  403a60:	ldp	x24, x23, [sp, #64]
  403a64:	ldp	x26, x25, [sp, #48]
  403a68:	ldp	x28, x27, [sp, #32]
  403a6c:	ldp	x29, x30, [sp, #16]
  403a70:	add	sp, sp, #0x70
  403a74:	ret
  403a78:	stp	x29, x30, [sp, #-64]!
  403a7c:	stp	x20, x19, [sp, #48]
  403a80:	adrp	x20, 418000 <_obstack_memory_used@@Base+0x12e64>
  403a84:	stp	x22, x21, [sp, #32]
  403a88:	ldr	w8, [x20, #456]
  403a8c:	adrp	x21, 418000 <_obstack_memory_used@@Base+0x12e64>
  403a90:	ldr	x19, [x21, #448]
  403a94:	str	x23, [sp, #16]
  403a98:	cmp	w8, #0x2
  403a9c:	mov	x29, sp
  403aa0:	b.lt	403ac4 <setlocale@plt+0x22a4>  // b.tstop
  403aa4:	add	x22, x19, #0x18
  403aa8:	mov	w23, #0x1                   	// #1
  403aac:	ldr	x0, [x22], #16
  403ab0:	bl	401740 <free@plt>
  403ab4:	ldrsw	x8, [x20, #456]
  403ab8:	add	x23, x23, #0x1
  403abc:	cmp	x23, x8
  403ac0:	b.lt	403aac <setlocale@plt+0x228c>  // b.tstop
  403ac4:	ldr	x0, [x19, #8]
  403ac8:	adrp	x23, 418000 <_obstack_memory_used@@Base+0x12e64>
  403acc:	add	x23, x23, #0x300
  403ad0:	adrp	x22, 418000 <_obstack_memory_used@@Base+0x12e64>
  403ad4:	cmp	x0, x23
  403ad8:	add	x22, x22, #0x1d0
  403adc:	b.eq	403aec <setlocale@plt+0x22cc>  // b.none
  403ae0:	bl	401740 <free@plt>
  403ae4:	mov	w8, #0x100                 	// #256
  403ae8:	stp	x8, x23, [x22]
  403aec:	cmp	x19, x22
  403af0:	b.eq	403b00 <setlocale@plt+0x22e0>  // b.none
  403af4:	mov	x0, x19
  403af8:	bl	401740 <free@plt>
  403afc:	str	x22, [x21, #448]
  403b00:	mov	w8, #0x1                   	// #1
  403b04:	str	w8, [x20, #456]
  403b08:	ldp	x20, x19, [sp, #48]
  403b0c:	ldp	x22, x21, [sp, #32]
  403b10:	ldr	x23, [sp, #16]
  403b14:	ldp	x29, x30, [sp], #64
  403b18:	ret
  403b1c:	stp	x29, x30, [sp, #-16]!
  403b20:	adrp	x3, 418000 <_obstack_memory_used@@Base+0x12e64>
  403b24:	add	x3, x3, #0x2c8
  403b28:	mov	x2, #0xffffffffffffffff    	// #-1
  403b2c:	mov	x29, sp
  403b30:	bl	403b3c <setlocale@plt+0x231c>
  403b34:	ldp	x29, x30, [sp], #16
  403b38:	ret
  403b3c:	sub	sp, sp, #0x80
  403b40:	stp	x29, x30, [sp, #32]
  403b44:	add	x29, sp, #0x20
  403b48:	stp	x28, x27, [sp, #48]
  403b4c:	stp	x26, x25, [sp, #64]
  403b50:	stp	x24, x23, [sp, #80]
  403b54:	stp	x22, x21, [sp, #96]
  403b58:	stp	x20, x19, [sp, #112]
  403b5c:	mov	x22, x3
  403b60:	stur	x2, [x29, #-8]
  403b64:	mov	x21, x1
  403b68:	mov	w23, w0
  403b6c:	bl	401800 <__errno_location@plt>
  403b70:	tbnz	w23, #31, 403cc0 <setlocale@plt+0x24a0>
  403b74:	adrp	x25, 418000 <_obstack_memory_used@@Base+0x12e64>
  403b78:	ldr	w8, [x25, #456]
  403b7c:	adrp	x28, 418000 <_obstack_memory_used@@Base+0x12e64>
  403b80:	ldr	w20, [x0]
  403b84:	ldr	x27, [x28, #448]
  403b88:	mov	x19, x0
  403b8c:	cmp	w8, w23
  403b90:	b.gt	403bfc <setlocale@plt+0x23dc>
  403b94:	mov	w8, #0x7fffffff            	// #2147483647
  403b98:	cmp	w23, w8
  403b9c:	stur	w20, [x29, #-12]
  403ba0:	b.eq	403cc4 <setlocale@plt+0x24a4>  // b.none
  403ba4:	adrp	x20, 418000 <_obstack_memory_used@@Base+0x12e64>
  403ba8:	add	x20, x20, #0x1d0
  403bac:	add	w26, w23, #0x1
  403bb0:	cmp	x27, x20
  403bb4:	csel	x0, xzr, x27, eq  // eq = none
  403bb8:	sbfiz	x1, x26, #4, #32
  403bbc:	bl	404a28 <setlocale@plt+0x3208>
  403bc0:	mov	x24, x0
  403bc4:	cmp	x27, x20
  403bc8:	str	x0, [x28, #448]
  403bcc:	b.ne	403bd8 <setlocale@plt+0x23b8>  // b.any
  403bd0:	ldr	q0, [x20]
  403bd4:	str	q0, [x24]
  403bd8:	ldrsw	x8, [x25, #456]
  403bdc:	mov	w1, wzr
  403be0:	add	x0, x24, x8, lsl #4
  403be4:	sub	w8, w26, w8
  403be8:	sbfiz	x2, x8, #4, #32
  403bec:	bl	401630 <memset@plt>
  403bf0:	ldur	w20, [x29, #-12]
  403bf4:	mov	x27, x24
  403bf8:	str	w26, [x25, #456]
  403bfc:	add	x28, x27, w23, sxtw #4
  403c00:	mov	x27, x28
  403c04:	ldr	x26, [x28]
  403c08:	ldr	x23, [x27, #8]!
  403c0c:	ldp	w4, w8, [x22]
  403c10:	ldp	x7, x9, [x22, #40]
  403c14:	ldur	x3, [x29, #-8]
  403c18:	add	x24, x22, #0x8
  403c1c:	orr	w25, w8, #0x1
  403c20:	mov	x0, x23
  403c24:	mov	x1, x26
  403c28:	mov	x2, x21
  403c2c:	mov	w5, w25
  403c30:	mov	x6, x24
  403c34:	str	x9, [sp]
  403c38:	bl	402d18 <setlocale@plt+0x14f8>
  403c3c:	cmp	x26, x0
  403c40:	b.hi	403c98 <setlocale@plt+0x2478>  // b.pmore
  403c44:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x12e64>
  403c48:	add	x8, x8, #0x300
  403c4c:	add	x26, x0, #0x1
  403c50:	cmp	x23, x8
  403c54:	str	x26, [x28]
  403c58:	b.eq	403c64 <setlocale@plt+0x2444>  // b.none
  403c5c:	mov	x0, x23
  403c60:	bl	401740 <free@plt>
  403c64:	mov	x0, x26
  403c68:	bl	404ad8 <setlocale@plt+0x32b8>
  403c6c:	str	x0, [x27]
  403c70:	ldr	w4, [x22]
  403c74:	ldp	x7, x8, [x22, #40]
  403c78:	ldur	x3, [x29, #-8]
  403c7c:	mov	x1, x26
  403c80:	mov	x2, x21
  403c84:	mov	w5, w25
  403c88:	mov	x6, x24
  403c8c:	mov	x23, x0
  403c90:	str	x8, [sp]
  403c94:	bl	402d18 <setlocale@plt+0x14f8>
  403c98:	str	w20, [x19]
  403c9c:	mov	x0, x23
  403ca0:	ldp	x20, x19, [sp, #112]
  403ca4:	ldp	x22, x21, [sp, #96]
  403ca8:	ldp	x24, x23, [sp, #80]
  403cac:	ldp	x26, x25, [sp, #64]
  403cb0:	ldp	x28, x27, [sp, #48]
  403cb4:	ldp	x29, x30, [sp, #32]
  403cb8:	add	sp, sp, #0x80
  403cbc:	ret
  403cc0:	bl	4016a0 <abort@plt>
  403cc4:	bl	404bd4 <setlocale@plt+0x33b4>
  403cc8:	stp	x29, x30, [sp, #-16]!
  403ccc:	adrp	x3, 418000 <_obstack_memory_used@@Base+0x12e64>
  403cd0:	add	x3, x3, #0x2c8
  403cd4:	mov	x29, sp
  403cd8:	bl	403b3c <setlocale@plt+0x231c>
  403cdc:	ldp	x29, x30, [sp], #16
  403ce0:	ret
  403ce4:	stp	x29, x30, [sp, #-16]!
  403ce8:	mov	x1, x0
  403cec:	mov	w0, wzr
  403cf0:	mov	x29, sp
  403cf4:	bl	403b1c <setlocale@plt+0x22fc>
  403cf8:	ldp	x29, x30, [sp], #16
  403cfc:	ret
  403d00:	stp	x29, x30, [sp, #-16]!
  403d04:	mov	x2, x1
  403d08:	mov	x1, x0
  403d0c:	mov	w0, wzr
  403d10:	mov	x29, sp
  403d14:	bl	403cc8 <setlocale@plt+0x24a8>
  403d18:	ldp	x29, x30, [sp], #16
  403d1c:	ret
  403d20:	sub	sp, sp, #0x60
  403d24:	stp	x20, x19, [sp, #80]
  403d28:	mov	w20, w0
  403d2c:	add	x8, sp, #0x8
  403d30:	mov	w0, w1
  403d34:	stp	x29, x30, [sp, #64]
  403d38:	add	x29, sp, #0x40
  403d3c:	mov	x19, x2
  403d40:	bl	403d68 <setlocale@plt+0x2548>
  403d44:	add	x3, sp, #0x8
  403d48:	mov	x2, #0xffffffffffffffff    	// #-1
  403d4c:	mov	w0, w20
  403d50:	mov	x1, x19
  403d54:	bl	403b3c <setlocale@plt+0x231c>
  403d58:	ldp	x20, x19, [sp, #80]
  403d5c:	ldp	x29, x30, [sp, #64]
  403d60:	add	sp, sp, #0x60
  403d64:	ret
  403d68:	stp	x29, x30, [sp, #-16]!
  403d6c:	movi	v0.2d, #0x0
  403d70:	cmp	w0, #0xa
  403d74:	mov	x29, sp
  403d78:	str	xzr, [x8, #48]
  403d7c:	stp	q0, q0, [x8, #16]
  403d80:	str	q0, [x8]
  403d84:	b.eq	403d94 <setlocale@plt+0x2574>  // b.none
  403d88:	str	w0, [x8]
  403d8c:	ldp	x29, x30, [sp], #16
  403d90:	ret
  403d94:	bl	4016a0 <abort@plt>
  403d98:	sub	sp, sp, #0x70
  403d9c:	str	x21, [sp, #80]
  403da0:	mov	w21, w0
  403da4:	add	x8, sp, #0x8
  403da8:	mov	w0, w1
  403dac:	stp	x29, x30, [sp, #64]
  403db0:	stp	x20, x19, [sp, #96]
  403db4:	add	x29, sp, #0x40
  403db8:	mov	x19, x3
  403dbc:	mov	x20, x2
  403dc0:	bl	403d68 <setlocale@plt+0x2548>
  403dc4:	add	x3, sp, #0x8
  403dc8:	mov	w0, w21
  403dcc:	mov	x1, x20
  403dd0:	mov	x2, x19
  403dd4:	bl	403b3c <setlocale@plt+0x231c>
  403dd8:	ldp	x20, x19, [sp, #96]
  403ddc:	ldr	x21, [sp, #80]
  403de0:	ldp	x29, x30, [sp, #64]
  403de4:	add	sp, sp, #0x70
  403de8:	ret
  403dec:	stp	x29, x30, [sp, #-16]!
  403df0:	mov	x2, x1
  403df4:	mov	w1, w0
  403df8:	mov	w0, wzr
  403dfc:	mov	x29, sp
  403e00:	bl	403d20 <setlocale@plt+0x2500>
  403e04:	ldp	x29, x30, [sp], #16
  403e08:	ret
  403e0c:	stp	x29, x30, [sp, #-16]!
  403e10:	mov	x3, x2
  403e14:	mov	x2, x1
  403e18:	mov	w1, w0
  403e1c:	mov	w0, wzr
  403e20:	mov	x29, sp
  403e24:	bl	403d98 <setlocale@plt+0x2578>
  403e28:	ldp	x29, x30, [sp], #16
  403e2c:	ret
  403e30:	sub	sp, sp, #0x60
  403e34:	adrp	x9, 418000 <_obstack_memory_used@@Base+0x12e64>
  403e38:	add	x9, x9, #0x2c8
  403e3c:	ldp	q0, q1, [x9]
  403e40:	ldr	q2, [x9, #32]
  403e44:	ldr	x9, [x9, #48]
  403e48:	mov	w8, w2
  403e4c:	stp	x20, x19, [sp, #80]
  403e50:	mov	x19, x1
  403e54:	mov	x20, x0
  403e58:	mov	x0, sp
  403e5c:	mov	w2, #0x1                   	// #1
  403e60:	mov	w1, w8
  403e64:	stp	x29, x30, [sp, #64]
  403e68:	add	x29, sp, #0x40
  403e6c:	stp	q0, q1, [sp]
  403e70:	str	q2, [sp, #32]
  403e74:	str	x9, [sp, #48]
  403e78:	bl	402bfc <setlocale@plt+0x13dc>
  403e7c:	mov	x3, sp
  403e80:	mov	w0, wzr
  403e84:	mov	x1, x20
  403e88:	mov	x2, x19
  403e8c:	bl	403b3c <setlocale@plt+0x231c>
  403e90:	ldp	x20, x19, [sp, #80]
  403e94:	ldp	x29, x30, [sp, #64]
  403e98:	add	sp, sp, #0x60
  403e9c:	ret
  403ea0:	stp	x29, x30, [sp, #-16]!
  403ea4:	mov	w2, w1
  403ea8:	mov	x1, #0xffffffffffffffff    	// #-1
  403eac:	mov	x29, sp
  403eb0:	bl	403e30 <setlocale@plt+0x2610>
  403eb4:	ldp	x29, x30, [sp], #16
  403eb8:	ret
  403ebc:	stp	x29, x30, [sp, #-16]!
  403ec0:	mov	w1, #0x3a                  	// #58
  403ec4:	mov	x29, sp
  403ec8:	bl	403ea0 <setlocale@plt+0x2680>
  403ecc:	ldp	x29, x30, [sp], #16
  403ed0:	ret
  403ed4:	stp	x29, x30, [sp, #-16]!
  403ed8:	mov	w2, #0x3a                  	// #58
  403edc:	mov	x29, sp
  403ee0:	bl	403e30 <setlocale@plt+0x2610>
  403ee4:	ldp	x29, x30, [sp], #16
  403ee8:	ret
  403eec:	sub	sp, sp, #0x60
  403ef0:	stp	x20, x19, [sp, #80]
  403ef4:	mov	w20, w0
  403ef8:	add	x8, sp, #0x8
  403efc:	mov	w0, w1
  403f00:	stp	x29, x30, [sp, #64]
  403f04:	add	x29, sp, #0x40
  403f08:	mov	x19, x2
  403f0c:	bl	403d68 <setlocale@plt+0x2548>
  403f10:	add	x0, sp, #0x8
  403f14:	mov	w1, #0x3a                  	// #58
  403f18:	mov	w2, #0x1                   	// #1
  403f1c:	bl	402bfc <setlocale@plt+0x13dc>
  403f20:	add	x3, sp, #0x8
  403f24:	mov	x2, #0xffffffffffffffff    	// #-1
  403f28:	mov	w0, w20
  403f2c:	mov	x1, x19
  403f30:	bl	403b3c <setlocale@plt+0x231c>
  403f34:	ldp	x20, x19, [sp, #80]
  403f38:	ldp	x29, x30, [sp, #64]
  403f3c:	add	sp, sp, #0x60
  403f40:	ret
  403f44:	stp	x29, x30, [sp, #-16]!
  403f48:	mov	x4, #0xffffffffffffffff    	// #-1
  403f4c:	mov	x29, sp
  403f50:	bl	403f5c <setlocale@plt+0x273c>
  403f54:	ldp	x29, x30, [sp], #16
  403f58:	ret
  403f5c:	sub	sp, sp, #0x70
  403f60:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x12e64>
  403f64:	add	x8, x8, #0x2c8
  403f68:	ldp	q0, q1, [x8]
  403f6c:	ldr	q2, [x8, #32]
  403f70:	ldr	x8, [x8, #48]
  403f74:	str	x21, [sp, #80]
  403f78:	mov	w21, w0
  403f7c:	mov	x0, sp
  403f80:	stp	x29, x30, [sp, #64]
  403f84:	stp	x20, x19, [sp, #96]
  403f88:	add	x29, sp, #0x40
  403f8c:	mov	x19, x4
  403f90:	mov	x20, x3
  403f94:	stp	q0, q1, [sp]
  403f98:	str	q2, [sp, #32]
  403f9c:	str	x8, [sp, #48]
  403fa0:	bl	402c54 <setlocale@plt+0x1434>
  403fa4:	mov	x3, sp
  403fa8:	mov	w0, w21
  403fac:	mov	x1, x20
  403fb0:	mov	x2, x19
  403fb4:	bl	403b3c <setlocale@plt+0x231c>
  403fb8:	ldp	x20, x19, [sp, #96]
  403fbc:	ldr	x21, [sp, #80]
  403fc0:	ldp	x29, x30, [sp, #64]
  403fc4:	add	sp, sp, #0x70
  403fc8:	ret
  403fcc:	stp	x29, x30, [sp, #-16]!
  403fd0:	mov	x3, x2
  403fd4:	mov	x2, x1
  403fd8:	mov	x1, x0
  403fdc:	mov	w0, wzr
  403fe0:	mov	x29, sp
  403fe4:	bl	403f44 <setlocale@plt+0x2724>
  403fe8:	ldp	x29, x30, [sp], #16
  403fec:	ret
  403ff0:	stp	x29, x30, [sp, #-16]!
  403ff4:	mov	x4, x3
  403ff8:	mov	x3, x2
  403ffc:	mov	x2, x1
  404000:	mov	x1, x0
  404004:	mov	w0, wzr
  404008:	mov	x29, sp
  40400c:	bl	403f5c <setlocale@plt+0x273c>
  404010:	ldp	x29, x30, [sp], #16
  404014:	ret
  404018:	stp	x29, x30, [sp, #-16]!
  40401c:	adrp	x3, 418000 <_obstack_memory_used@@Base+0x12e64>
  404020:	add	x3, x3, #0x1e0
  404024:	mov	x29, sp
  404028:	bl	403b3c <setlocale@plt+0x231c>
  40402c:	ldp	x29, x30, [sp], #16
  404030:	ret
  404034:	stp	x29, x30, [sp, #-16]!
  404038:	mov	x2, x1
  40403c:	mov	x1, x0
  404040:	mov	w0, wzr
  404044:	mov	x29, sp
  404048:	bl	404018 <setlocale@plt+0x27f8>
  40404c:	ldp	x29, x30, [sp], #16
  404050:	ret
  404054:	stp	x29, x30, [sp, #-16]!
  404058:	mov	x2, #0xffffffffffffffff    	// #-1
  40405c:	mov	x29, sp
  404060:	bl	404018 <setlocale@plt+0x27f8>
  404064:	ldp	x29, x30, [sp], #16
  404068:	ret
  40406c:	stp	x29, x30, [sp, #-16]!
  404070:	mov	x1, x0
  404074:	mov	w0, wzr
  404078:	mov	x29, sp
  40407c:	bl	404054 <setlocale@plt+0x2834>
  404080:	ldp	x29, x30, [sp], #16
  404084:	ret
  404088:	stp	x29, x30, [sp, #-48]!
  40408c:	stp	x20, x19, [sp, #32]
  404090:	mov	x20, x0
  404094:	mov	w19, w1
  404098:	mov	w2, #0x5                   	// #5
  40409c:	mov	x0, xzr
  4040a0:	mov	x1, x20
  4040a4:	str	x21, [sp, #16]
  4040a8:	mov	x29, sp
  4040ac:	bl	4017b0 <dcgettext@plt>
  4040b0:	cmp	x0, x20
  4040b4:	b.ne	404140 <setlocale@plt+0x2920>  // b.any
  4040b8:	bl	40547c <_obstack_memory_used@@Base+0x2e0>
  4040bc:	mov	w1, #0x55                  	// #85
  4040c0:	mov	w2, #0x54                  	// #84
  4040c4:	mov	w3, #0x46                  	// #70
  4040c8:	mov	w4, #0x2d                  	// #45
  4040cc:	mov	w5, #0x38                  	// #56
  4040d0:	mov	w6, wzr
  4040d4:	mov	w7, wzr
  4040d8:	mov	x21, x0
  4040dc:	bl	40416c <setlocale@plt+0x294c>
  4040e0:	cbz	w0, 4040fc <setlocale@plt+0x28dc>
  4040e4:	ldrb	w8, [x20]
  4040e8:	adrp	x9, 407000 <_obstack_memory_used@@Base+0x1e64>
  4040ec:	adrp	x10, 407000 <_obstack_memory_used@@Base+0x1e64>
  4040f0:	add	x9, x9, #0x316
  4040f4:	add	x10, x10, #0x312
  4040f8:	b	404138 <setlocale@plt+0x2918>
  4040fc:	mov	w1, #0x47                  	// #71
  404100:	mov	w2, #0x42                  	// #66
  404104:	mov	w3, #0x31                  	// #49
  404108:	mov	w4, #0x38                  	// #56
  40410c:	mov	w5, #0x30                  	// #48
  404110:	mov	w6, #0x33                  	// #51
  404114:	mov	w7, #0x30                  	// #48
  404118:	mov	x0, x21
  40411c:	bl	40416c <setlocale@plt+0x294c>
  404120:	cbz	w0, 404150 <setlocale@plt+0x2930>
  404124:	ldrb	w8, [x20]
  404128:	adrp	x9, 407000 <_obstack_memory_used@@Base+0x1e64>
  40412c:	adrp	x10, 407000 <_obstack_memory_used@@Base+0x1e64>
  404130:	add	x9, x9, #0x31e
  404134:	add	x10, x10, #0x31a
  404138:	cmp	w8, #0x60
  40413c:	csel	x0, x10, x9, eq  // eq = none
  404140:	ldp	x20, x19, [sp, #32]
  404144:	ldr	x21, [sp, #16]
  404148:	ldp	x29, x30, [sp], #48
  40414c:	ret
  404150:	adrp	x8, 406000 <_obstack_memory_used@@Base+0xe64>
  404154:	adrp	x9, 407000 <_obstack_memory_used@@Base+0x1e64>
  404158:	add	x8, x8, #0xe31
  40415c:	add	x9, x9, #0x30e
  404160:	cmp	w19, #0x9
  404164:	csel	x0, x9, x8, eq  // eq = none
  404168:	b	404140 <setlocale@plt+0x2920>
  40416c:	stp	x29, x30, [sp, #-80]!
  404170:	stp	x26, x25, [sp, #16]
  404174:	mov	x25, x0
  404178:	and	w0, w1, #0xff
  40417c:	stp	x24, x23, [sp, #32]
  404180:	stp	x22, x21, [sp, #48]
  404184:	stp	x20, x19, [sp, #64]
  404188:	mov	x29, sp
  40418c:	mov	w19, w7
  404190:	mov	w20, w6
  404194:	mov	w21, w5
  404198:	mov	w22, w4
  40419c:	mov	w23, w3
  4041a0:	mov	w24, w2
  4041a4:	mov	w26, w1
  4041a8:	bl	405354 <_obstack_memory_used@@Base+0x1b8>
  4041ac:	ldrb	w8, [x25]
  4041b0:	tbz	w0, #0, 4041c8 <setlocale@plt+0x29a8>
  4041b4:	and	w8, w8, #0xffffffdf
  4041b8:	cmp	w8, w26, uxtb
  4041bc:	b.eq	4041d0 <setlocale@plt+0x29b0>  // b.none
  4041c0:	mov	w0, wzr
  4041c4:	b	404200 <setlocale@plt+0x29e0>
  4041c8:	cmp	w8, w26, uxtb
  4041cc:	b.ne	4041c0 <setlocale@plt+0x29a0>  // b.any
  4041d0:	tst	w26, #0xff
  4041d4:	b.eq	4041fc <setlocale@plt+0x29dc>  // b.none
  4041d8:	mov	x0, x25
  4041dc:	mov	w1, w24
  4041e0:	mov	w2, w23
  4041e4:	mov	w3, w22
  4041e8:	mov	w4, w21
  4041ec:	mov	w5, w20
  4041f0:	mov	w6, w19
  4041f4:	bl	404218 <setlocale@plt+0x29f8>
  4041f8:	b	404200 <setlocale@plt+0x29e0>
  4041fc:	mov	w0, #0x1                   	// #1
  404200:	ldp	x20, x19, [sp, #64]
  404204:	ldp	x22, x21, [sp, #48]
  404208:	ldp	x24, x23, [sp, #32]
  40420c:	ldp	x26, x25, [sp, #16]
  404210:	ldp	x29, x30, [sp], #80
  404214:	ret
  404218:	stp	x29, x30, [sp, #-80]!
  40421c:	stp	x24, x23, [sp, #32]
  404220:	mov	x24, x0
  404224:	and	w0, w1, #0xff
  404228:	str	x25, [sp, #16]
  40422c:	stp	x22, x21, [sp, #48]
  404230:	stp	x20, x19, [sp, #64]
  404234:	mov	x29, sp
  404238:	mov	w19, w6
  40423c:	mov	w20, w5
  404240:	mov	w21, w4
  404244:	mov	w22, w3
  404248:	mov	w23, w2
  40424c:	mov	w25, w1
  404250:	bl	405354 <_obstack_memory_used@@Base+0x1b8>
  404254:	ldrb	w8, [x24, #1]
  404258:	tbz	w0, #0, 404270 <setlocale@plt+0x2a50>
  40425c:	and	w8, w8, #0xffffffdf
  404260:	cmp	w8, w25, uxtb
  404264:	b.eq	404278 <setlocale@plt+0x2a58>  // b.none
  404268:	mov	w0, wzr
  40426c:	b	4042a4 <setlocale@plt+0x2a84>
  404270:	cmp	w8, w25, uxtb
  404274:	b.ne	404268 <setlocale@plt+0x2a48>  // b.any
  404278:	tst	w25, #0xff
  40427c:	b.eq	4042a0 <setlocale@plt+0x2a80>  // b.none
  404280:	mov	x0, x24
  404284:	mov	w1, w23
  404288:	mov	w2, w22
  40428c:	mov	w3, w21
  404290:	mov	w4, w20
  404294:	mov	w5, w19
  404298:	bl	4042bc <setlocale@plt+0x2a9c>
  40429c:	b	4042a4 <setlocale@plt+0x2a84>
  4042a0:	mov	w0, #0x1                   	// #1
  4042a4:	ldp	x20, x19, [sp, #64]
  4042a8:	ldp	x22, x21, [sp, #48]
  4042ac:	ldp	x24, x23, [sp, #32]
  4042b0:	ldr	x25, [sp, #16]
  4042b4:	ldp	x29, x30, [sp], #80
  4042b8:	ret
  4042bc:	stp	x29, x30, [sp, #-64]!
  4042c0:	stp	x24, x23, [sp, #16]
  4042c4:	mov	x23, x0
  4042c8:	and	w0, w1, #0xff
  4042cc:	stp	x22, x21, [sp, #32]
  4042d0:	stp	x20, x19, [sp, #48]
  4042d4:	mov	x29, sp
  4042d8:	mov	w19, w5
  4042dc:	mov	w20, w4
  4042e0:	mov	w21, w3
  4042e4:	mov	w22, w2
  4042e8:	mov	w24, w1
  4042ec:	bl	405354 <_obstack_memory_used@@Base+0x1b8>
  4042f0:	ldrb	w8, [x23, #2]
  4042f4:	tbz	w0, #0, 40430c <setlocale@plt+0x2aec>
  4042f8:	and	w8, w8, #0xffffffdf
  4042fc:	cmp	w8, w24, uxtb
  404300:	b.eq	404314 <setlocale@plt+0x2af4>  // b.none
  404304:	mov	w0, wzr
  404308:	b	40433c <setlocale@plt+0x2b1c>
  40430c:	cmp	w8, w24, uxtb
  404310:	b.ne	404304 <setlocale@plt+0x2ae4>  // b.any
  404314:	tst	w24, #0xff
  404318:	b.eq	404338 <setlocale@plt+0x2b18>  // b.none
  40431c:	mov	x0, x23
  404320:	mov	w1, w22
  404324:	mov	w2, w21
  404328:	mov	w3, w20
  40432c:	mov	w4, w19
  404330:	bl	404350 <setlocale@plt+0x2b30>
  404334:	b	40433c <setlocale@plt+0x2b1c>
  404338:	mov	w0, #0x1                   	// #1
  40433c:	ldp	x20, x19, [sp, #48]
  404340:	ldp	x22, x21, [sp, #32]
  404344:	ldp	x24, x23, [sp, #16]
  404348:	ldp	x29, x30, [sp], #64
  40434c:	ret
  404350:	stp	x29, x30, [sp, #-64]!
  404354:	stp	x22, x21, [sp, #32]
  404358:	mov	x22, x0
  40435c:	and	w0, w1, #0xff
  404360:	str	x23, [sp, #16]
  404364:	stp	x20, x19, [sp, #48]
  404368:	mov	x29, sp
  40436c:	mov	w19, w4
  404370:	mov	w20, w3
  404374:	mov	w21, w2
  404378:	mov	w23, w1
  40437c:	bl	405354 <_obstack_memory_used@@Base+0x1b8>
  404380:	ldrb	w8, [x22, #3]
  404384:	tbz	w0, #0, 40439c <setlocale@plt+0x2b7c>
  404388:	and	w8, w8, #0xffffffdf
  40438c:	cmp	w8, w23, uxtb
  404390:	b.eq	4043a4 <setlocale@plt+0x2b84>  // b.none
  404394:	mov	w0, wzr
  404398:	b	4043c8 <setlocale@plt+0x2ba8>
  40439c:	cmp	w8, w23, uxtb
  4043a0:	b.ne	404394 <setlocale@plt+0x2b74>  // b.any
  4043a4:	tst	w23, #0xff
  4043a8:	b.eq	4043c4 <setlocale@plt+0x2ba4>  // b.none
  4043ac:	mov	x0, x22
  4043b0:	mov	w1, w21
  4043b4:	mov	w2, w20
  4043b8:	mov	w3, w19
  4043bc:	bl	4043dc <setlocale@plt+0x2bbc>
  4043c0:	b	4043c8 <setlocale@plt+0x2ba8>
  4043c4:	mov	w0, #0x1                   	// #1
  4043c8:	ldp	x20, x19, [sp, #48]
  4043cc:	ldp	x22, x21, [sp, #32]
  4043d0:	ldr	x23, [sp, #16]
  4043d4:	ldp	x29, x30, [sp], #64
  4043d8:	ret
  4043dc:	stp	x29, x30, [sp, #-48]!
  4043e0:	stp	x22, x21, [sp, #16]
  4043e4:	mov	x21, x0
  4043e8:	and	w0, w1, #0xff
  4043ec:	stp	x20, x19, [sp, #32]
  4043f0:	mov	x29, sp
  4043f4:	mov	w19, w3
  4043f8:	mov	w20, w2
  4043fc:	mov	w22, w1
  404400:	bl	405354 <_obstack_memory_used@@Base+0x1b8>
  404404:	ldrb	w8, [x21, #4]
  404408:	tbz	w0, #0, 404420 <setlocale@plt+0x2c00>
  40440c:	and	w8, w8, #0xffffffdf
  404410:	cmp	w8, w22, uxtb
  404414:	b.eq	404428 <setlocale@plt+0x2c08>  // b.none
  404418:	mov	w0, wzr
  40441c:	b	404448 <setlocale@plt+0x2c28>
  404420:	cmp	w8, w22, uxtb
  404424:	b.ne	404418 <setlocale@plt+0x2bf8>  // b.any
  404428:	tst	w22, #0xff
  40442c:	b.eq	404444 <setlocale@plt+0x2c24>  // b.none
  404430:	mov	x0, x21
  404434:	mov	w1, w20
  404438:	mov	w2, w19
  40443c:	bl	404458 <setlocale@plt+0x2c38>
  404440:	b	404448 <setlocale@plt+0x2c28>
  404444:	mov	w0, #0x1                   	// #1
  404448:	ldp	x20, x19, [sp, #32]
  40444c:	ldp	x22, x21, [sp, #16]
  404450:	ldp	x29, x30, [sp], #48
  404454:	ret
  404458:	stp	x29, x30, [sp, #-48]!
  40445c:	stp	x20, x19, [sp, #32]
  404460:	mov	x20, x0
  404464:	and	w0, w1, #0xff
  404468:	str	x21, [sp, #16]
  40446c:	mov	x29, sp
  404470:	mov	w19, w2
  404474:	mov	w21, w1
  404478:	bl	405354 <_obstack_memory_used@@Base+0x1b8>
  40447c:	ldrb	w8, [x20, #5]
  404480:	tbz	w0, #0, 404498 <setlocale@plt+0x2c78>
  404484:	and	w8, w8, #0xffffffdf
  404488:	cmp	w8, w21, uxtb
  40448c:	b.eq	4044a0 <setlocale@plt+0x2c80>  // b.none
  404490:	mov	w0, wzr
  404494:	b	4044bc <setlocale@plt+0x2c9c>
  404498:	cmp	w8, w21, uxtb
  40449c:	b.ne	404490 <setlocale@plt+0x2c70>  // b.any
  4044a0:	tst	w21, #0xff
  4044a4:	b.eq	4044b8 <setlocale@plt+0x2c98>  // b.none
  4044a8:	mov	x0, x20
  4044ac:	mov	w1, w19
  4044b0:	bl	4044cc <setlocale@plt+0x2cac>
  4044b4:	b	4044bc <setlocale@plt+0x2c9c>
  4044b8:	mov	w0, #0x1                   	// #1
  4044bc:	ldp	x20, x19, [sp, #32]
  4044c0:	ldr	x21, [sp, #16]
  4044c4:	ldp	x29, x30, [sp], #48
  4044c8:	ret
  4044cc:	stp	x29, x30, [sp, #-32]!
  4044d0:	stp	x20, x19, [sp, #16]
  4044d4:	mov	x19, x0
  4044d8:	and	w0, w1, #0xff
  4044dc:	mov	x29, sp
  4044e0:	mov	w20, w1
  4044e4:	bl	405354 <_obstack_memory_used@@Base+0x1b8>
  4044e8:	ldrb	w8, [x19, #6]
  4044ec:	tbz	w0, #0, 404504 <setlocale@plt+0x2ce4>
  4044f0:	and	w8, w8, #0xffffffdf
  4044f4:	cmp	w8, w20, uxtb
  4044f8:	b.eq	40450c <setlocale@plt+0x2cec>  // b.none
  4044fc:	mov	w0, wzr
  404500:	b	404524 <setlocale@plt+0x2d04>
  404504:	cmp	w8, w20, uxtb
  404508:	b.ne	4044fc <setlocale@plt+0x2cdc>  // b.any
  40450c:	tst	w20, #0xff
  404510:	b.eq	404520 <setlocale@plt+0x2d00>  // b.none
  404514:	mov	x0, x19
  404518:	bl	404530 <setlocale@plt+0x2d10>
  40451c:	b	404524 <setlocale@plt+0x2d04>
  404520:	mov	w0, #0x1                   	// #1
  404524:	ldp	x20, x19, [sp, #16]
  404528:	ldp	x29, x30, [sp], #32
  40452c:	ret
  404530:	stp	x29, x30, [sp, #-32]!
  404534:	str	x19, [sp, #16]
  404538:	mov	x19, x0
  40453c:	mov	w0, wzr
  404540:	mov	x29, sp
  404544:	bl	405354 <_obstack_memory_used@@Base+0x1b8>
  404548:	ldrb	w8, [x19, #7]
  40454c:	tbz	w0, #0, 404560 <setlocale@plt+0x2d40>
  404550:	tst	w8, #0xffffffdf
  404554:	b.eq	404564 <setlocale@plt+0x2d44>  // b.none
  404558:	mov	w0, wzr
  40455c:	b	404568 <setlocale@plt+0x2d48>
  404560:	cbnz	w8, 404558 <setlocale@plt+0x2d38>
  404564:	mov	w0, #0x1                   	// #1
  404568:	ldr	x19, [sp, #16]
  40456c:	ldp	x29, x30, [sp], #32
  404570:	ret
  404574:	sub	sp, sp, #0x50
  404578:	str	x21, [sp, #48]
  40457c:	stp	x20, x19, [sp, #64]
  404580:	mov	x21, x5
  404584:	mov	x20, x4
  404588:	mov	x5, x3
  40458c:	mov	x4, x2
  404590:	mov	x19, x0
  404594:	stp	x29, x30, [sp, #32]
  404598:	add	x29, sp, #0x20
  40459c:	cbz	x1, 4045bc <setlocale@plt+0x2d9c>
  4045a0:	adrp	x2, 407000 <_obstack_memory_used@@Base+0x1e64>
  4045a4:	mov	x3, x1
  4045a8:	add	x2, x2, #0x32b
  4045ac:	mov	w1, #0x1                   	// #1
  4045b0:	mov	x0, x19
  4045b4:	bl	4016f0 <__fprintf_chk@plt>
  4045b8:	b	4045d8 <setlocale@plt+0x2db8>
  4045bc:	adrp	x2, 407000 <_obstack_memory_used@@Base+0x1e64>
  4045c0:	add	x2, x2, #0x337
  4045c4:	mov	w1, #0x1                   	// #1
  4045c8:	mov	x0, x19
  4045cc:	mov	x3, x4
  4045d0:	mov	x4, x5
  4045d4:	bl	4016f0 <__fprintf_chk@plt>
  4045d8:	adrp	x1, 407000 <_obstack_memory_used@@Base+0x1e64>
  4045dc:	add	x1, x1, #0x33e
  4045e0:	mov	w2, #0x5                   	// #5
  4045e4:	mov	x0, xzr
  4045e8:	bl	4017b0 <dcgettext@plt>
  4045ec:	adrp	x2, 407000 <_obstack_memory_used@@Base+0x1e64>
  4045f0:	mov	x3, x0
  4045f4:	add	x2, x2, #0x609
  4045f8:	mov	w1, #0x1                   	// #1
  4045fc:	mov	w4, #0x7e3                 	// #2019
  404600:	mov	x0, x19
  404604:	bl	4016f0 <__fprintf_chk@plt>
  404608:	adrp	x1, 407000 <_obstack_memory_used@@Base+0x1e64>
  40460c:	add	x1, x1, #0x342
  404610:	mov	w2, #0x5                   	// #5
  404614:	mov	x0, xzr
  404618:	bl	4017b0 <dcgettext@plt>
  40461c:	mov	x1, x19
  404620:	bl	4017c0 <fputs_unlocked@plt>
  404624:	cmp	x21, #0x9
  404628:	b.hi	404670 <setlocale@plt+0x2e50>  // b.pmore
  40462c:	adrp	x8, 407000 <_obstack_memory_used@@Base+0x1e64>
  404630:	add	x8, x8, #0x321
  404634:	adr	x9, 404644 <setlocale@plt+0x2e24>
  404638:	ldrb	w10, [x8, x21]
  40463c:	add	x9, x9, x10, lsl #2
  404640:	br	x9
  404644:	adrp	x1, 407000 <_obstack_memory_used@@Base+0x1e64>
  404648:	add	x1, x1, #0x40e
  40464c:	mov	w2, #0x5                   	// #5
  404650:	mov	x0, xzr
  404654:	bl	4017b0 <dcgettext@plt>
  404658:	ldr	x3, [x20]
  40465c:	mov	x2, x0
  404660:	mov	w1, #0x1                   	// #1
  404664:	mov	x0, x19
  404668:	bl	4016f0 <__fprintf_chk@plt>
  40466c:	b	404808 <setlocale@plt+0x2fe8>
  404670:	adrp	x1, 407000 <_obstack_memory_used@@Base+0x1e64>
  404674:	add	x1, x1, #0x54d
  404678:	b	40479c <setlocale@plt+0x2f7c>
  40467c:	adrp	x1, 407000 <_obstack_memory_used@@Base+0x1e64>
  404680:	add	x1, x1, #0x41e
  404684:	mov	w2, #0x5                   	// #5
  404688:	mov	x0, xzr
  40468c:	bl	4017b0 <dcgettext@plt>
  404690:	ldp	x3, x4, [x20]
  404694:	mov	x2, x0
  404698:	mov	w1, #0x1                   	// #1
  40469c:	mov	x0, x19
  4046a0:	bl	4016f0 <__fprintf_chk@plt>
  4046a4:	b	404808 <setlocale@plt+0x2fe8>
  4046a8:	adrp	x1, 407000 <_obstack_memory_used@@Base+0x1e64>
  4046ac:	add	x1, x1, #0x435
  4046b0:	mov	w2, #0x5                   	// #5
  4046b4:	mov	x0, xzr
  4046b8:	bl	4017b0 <dcgettext@plt>
  4046bc:	ldp	x3, x4, [x20]
  4046c0:	ldr	x5, [x20, #16]
  4046c4:	mov	x2, x0
  4046c8:	mov	w1, #0x1                   	// #1
  4046cc:	mov	x0, x19
  4046d0:	bl	4016f0 <__fprintf_chk@plt>
  4046d4:	b	404808 <setlocale@plt+0x2fe8>
  4046d8:	adrp	x1, 407000 <_obstack_memory_used@@Base+0x1e64>
  4046dc:	add	x1, x1, #0x451
  4046e0:	mov	w2, #0x5                   	// #5
  4046e4:	mov	x0, xzr
  4046e8:	bl	4017b0 <dcgettext@plt>
  4046ec:	ldp	x3, x4, [x20]
  4046f0:	ldp	x5, x6, [x20, #16]
  4046f4:	mov	x2, x0
  4046f8:	mov	w1, #0x1                   	// #1
  4046fc:	mov	x0, x19
  404700:	bl	4016f0 <__fprintf_chk@plt>
  404704:	b	404808 <setlocale@plt+0x2fe8>
  404708:	adrp	x1, 407000 <_obstack_memory_used@@Base+0x1e64>
  40470c:	add	x1, x1, #0x471
  404710:	mov	w2, #0x5                   	// #5
  404714:	mov	x0, xzr
  404718:	bl	4017b0 <dcgettext@plt>
  40471c:	ldp	x3, x4, [x20]
  404720:	ldp	x5, x6, [x20, #16]
  404724:	ldr	x7, [x20, #32]
  404728:	mov	x2, x0
  40472c:	mov	w1, #0x1                   	// #1
  404730:	b	404800 <setlocale@plt+0x2fe0>
  404734:	adrp	x1, 407000 <_obstack_memory_used@@Base+0x1e64>
  404738:	add	x1, x1, #0x495
  40473c:	mov	w2, #0x5                   	// #5
  404740:	mov	x0, xzr
  404744:	bl	4017b0 <dcgettext@plt>
  404748:	ldp	x3, x4, [x20]
  40474c:	ldp	x5, x6, [x20, #16]
  404750:	ldp	x7, x8, [x20, #32]
  404754:	mov	x2, x0
  404758:	b	404788 <setlocale@plt+0x2f68>
  40475c:	adrp	x1, 407000 <_obstack_memory_used@@Base+0x1e64>
  404760:	add	x1, x1, #0x4bd
  404764:	mov	w2, #0x5                   	// #5
  404768:	mov	x0, xzr
  40476c:	bl	4017b0 <dcgettext@plt>
  404770:	ldr	x9, [x20, #48]
  404774:	ldp	x3, x4, [x20]
  404778:	ldp	x5, x6, [x20, #16]
  40477c:	ldp	x7, x8, [x20, #32]
  404780:	mov	x2, x0
  404784:	str	x9, [sp, #8]
  404788:	mov	w1, #0x1                   	// #1
  40478c:	str	x8, [sp]
  404790:	b	404800 <setlocale@plt+0x2fe0>
  404794:	adrp	x1, 407000 <_obstack_memory_used@@Base+0x1e64>
  404798:	add	x1, x1, #0x519
  40479c:	mov	w2, #0x5                   	// #5
  4047a0:	mov	x0, xzr
  4047a4:	bl	4017b0 <dcgettext@plt>
  4047a8:	ldp	x3, x4, [x20]
  4047ac:	ldp	x5, x6, [x20, #16]
  4047b0:	ldr	x7, [x20, #32]
  4047b4:	ldur	q0, [x20, #40]
  4047b8:	ldp	x8, x9, [x20, #56]
  4047bc:	mov	x2, x0
  4047c0:	str	x9, [sp, #24]
  4047c4:	b	4047f4 <setlocale@plt+0x2fd4>
  4047c8:	adrp	x1, 407000 <_obstack_memory_used@@Base+0x1e64>
  4047cc:	add	x1, x1, #0x4e9
  4047d0:	mov	w2, #0x5                   	// #5
  4047d4:	mov	x0, xzr
  4047d8:	bl	4017b0 <dcgettext@plt>
  4047dc:	ldp	x3, x4, [x20]
  4047e0:	ldp	x5, x6, [x20, #16]
  4047e4:	ldr	x7, [x20, #32]
  4047e8:	ldur	q0, [x20, #40]
  4047ec:	ldr	x8, [x20, #56]
  4047f0:	mov	x2, x0
  4047f4:	mov	w1, #0x1                   	// #1
  4047f8:	str	x8, [sp, #16]
  4047fc:	str	q0, [sp]
  404800:	mov	x0, x19
  404804:	bl	4016f0 <__fprintf_chk@plt>
  404808:	ldp	x20, x19, [sp, #64]
  40480c:	ldr	x21, [sp, #48]
  404810:	ldp	x29, x30, [sp, #32]
  404814:	add	sp, sp, #0x50
  404818:	ret
  40481c:	stp	x29, x30, [sp, #-16]!
  404820:	mov	x8, xzr
  404824:	mov	x29, sp
  404828:	ldr	x9, [x4, x8, lsl #3]
  40482c:	add	x8, x8, #0x1
  404830:	cbnz	x9, 404828 <setlocale@plt+0x3008>
  404834:	sub	x5, x8, #0x1
  404838:	bl	404574 <setlocale@plt+0x2d54>
  40483c:	ldp	x29, x30, [sp], #16
  404840:	ret
  404844:	sub	sp, sp, #0x60
  404848:	mov	x5, xzr
  40484c:	mov	x8, sp
  404850:	stp	x29, x30, [sp, #80]
  404854:	add	x29, sp, #0x50
  404858:	ldrsw	x9, [x4, #24]
  40485c:	tbz	w9, #31, 404870 <setlocale@plt+0x3050>
  404860:	add	w10, w9, #0x8
  404864:	cmp	w10, #0x0
  404868:	str	w10, [x4, #24]
  40486c:	b.le	404898 <setlocale@plt+0x3078>
  404870:	ldr	x9, [x4]
  404874:	add	x10, x9, #0x8
  404878:	str	x10, [x4]
  40487c:	ldr	x9, [x9]
  404880:	str	x9, [x8, x5, lsl #3]
  404884:	cbz	x9, 4048a4 <setlocale@plt+0x3084>
  404888:	add	x5, x5, #0x1
  40488c:	cmp	x5, #0xa
  404890:	b.ne	404858 <setlocale@plt+0x3038>  // b.any
  404894:	b	4048a4 <setlocale@plt+0x3084>
  404898:	ldr	x10, [x4, #8]
  40489c:	add	x9, x10, x9
  4048a0:	b	40487c <setlocale@plt+0x305c>
  4048a4:	mov	x4, sp
  4048a8:	bl	404574 <setlocale@plt+0x2d54>
  4048ac:	ldp	x29, x30, [sp, #80]
  4048b0:	add	sp, sp, #0x60
  4048b4:	ret
  4048b8:	sub	sp, sp, #0xf0
  4048bc:	stp	x29, x30, [sp, #224]
  4048c0:	add	x29, sp, #0xe0
  4048c4:	mov	x8, #0xffffffffffffffe0    	// #-32
  4048c8:	mov	x9, sp
  4048cc:	sub	x10, x29, #0x60
  4048d0:	movk	x8, #0xff80, lsl #32
  4048d4:	add	x11, x29, #0x10
  4048d8:	add	x9, x9, #0x80
  4048dc:	add	x10, x10, #0x20
  4048e0:	stp	x9, x8, [x29, #-16]
  4048e4:	stp	x11, x10, [x29, #-32]
  4048e8:	stp	x4, x5, [x29, #-96]
  4048ec:	stp	x6, x7, [x29, #-80]
  4048f0:	stp	q0, q1, [sp]
  4048f4:	ldp	q0, q1, [x29, #-32]
  4048f8:	sub	x4, x29, #0x40
  4048fc:	stp	q2, q3, [sp, #32]
  404900:	stp	q4, q5, [sp, #64]
  404904:	stp	q6, q7, [sp, #96]
  404908:	stp	q0, q1, [x29, #-64]
  40490c:	bl	404844 <setlocale@plt+0x3024>
  404910:	ldp	x29, x30, [sp, #224]
  404914:	add	sp, sp, #0xf0
  404918:	ret
  40491c:	stp	x29, x30, [sp, #-16]!
  404920:	adrp	x1, 407000 <_obstack_memory_used@@Base+0x1e64>
  404924:	add	x1, x1, #0x589
  404928:	mov	w2, #0x5                   	// #5
  40492c:	mov	x0, xzr
  404930:	mov	x29, sp
  404934:	bl	4017b0 <dcgettext@plt>
  404938:	adrp	x2, 407000 <_obstack_memory_used@@Base+0x1e64>
  40493c:	mov	x1, x0
  404940:	add	x2, x2, #0x59e
  404944:	mov	w0, #0x1                   	// #1
  404948:	bl	401620 <__printf_chk@plt>
  40494c:	adrp	x1, 407000 <_obstack_memory_used@@Base+0x1e64>
  404950:	add	x1, x1, #0x5b4
  404954:	mov	w2, #0x5                   	// #5
  404958:	mov	x0, xzr
  40495c:	bl	4017b0 <dcgettext@plt>
  404960:	adrp	x2, 406000 <_obstack_memory_used@@Base+0xe64>
  404964:	adrp	x3, 406000 <_obstack_memory_used@@Base+0xe64>
  404968:	mov	x1, x0
  40496c:	add	x2, x2, #0xcf0
  404970:	add	x3, x3, #0xea9
  404974:	mov	w0, #0x1                   	// #1
  404978:	bl	401620 <__printf_chk@plt>
  40497c:	adrp	x1, 407000 <_obstack_memory_used@@Base+0x1e64>
  404980:	add	x1, x1, #0x5c8
  404984:	mov	w2, #0x5                   	// #5
  404988:	mov	x0, xzr
  40498c:	bl	4017b0 <dcgettext@plt>
  404990:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x12e64>
  404994:	ldr	x1, [x8, #568]
  404998:	bl	4017c0 <fputs_unlocked@plt>
  40499c:	ldp	x29, x30, [sp], #16
  4049a0:	ret
  4049a4:	stp	x29, x30, [sp, #-16]!
  4049a8:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
  4049ac:	udiv	x8, x8, x1
  4049b0:	cmp	x8, x0
  4049b4:	mov	x29, sp
  4049b8:	b.cc	4049cc <setlocale@plt+0x31ac>  // b.lo, b.ul, b.last
  4049bc:	mul	x0, x1, x0
  4049c0:	bl	4049d0 <setlocale@plt+0x31b0>
  4049c4:	ldp	x29, x30, [sp], #16
  4049c8:	ret
  4049cc:	bl	404bd4 <setlocale@plt+0x33b4>
  4049d0:	stp	x29, x30, [sp, #-32]!
  4049d4:	str	x19, [sp, #16]
  4049d8:	mov	x29, sp
  4049dc:	mov	x19, x0
  4049e0:	bl	4015d0 <malloc@plt>
  4049e4:	cbz	x19, 4049ec <setlocale@plt+0x31cc>
  4049e8:	cbz	x0, 4049f8 <setlocale@plt+0x31d8>
  4049ec:	ldr	x19, [sp, #16]
  4049f0:	ldp	x29, x30, [sp], #32
  4049f4:	ret
  4049f8:	bl	404bd4 <setlocale@plt+0x33b4>
  4049fc:	stp	x29, x30, [sp, #-16]!
  404a00:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
  404a04:	udiv	x8, x8, x2
  404a08:	cmp	x8, x1
  404a0c:	mov	x29, sp
  404a10:	b.cc	404a24 <setlocale@plt+0x3204>  // b.lo, b.ul, b.last
  404a14:	mul	x1, x2, x1
  404a18:	bl	404a28 <setlocale@plt+0x3208>
  404a1c:	ldp	x29, x30, [sp], #16
  404a20:	ret
  404a24:	bl	404bd4 <setlocale@plt+0x33b4>
  404a28:	stp	x29, x30, [sp, #-32]!
  404a2c:	str	x19, [sp, #16]
  404a30:	mov	x19, x1
  404a34:	mov	x29, sp
  404a38:	cbz	x0, 404a4c <setlocale@plt+0x322c>
  404a3c:	cbnz	x19, 404a4c <setlocale@plt+0x322c>
  404a40:	bl	401740 <free@plt>
  404a44:	mov	x0, xzr
  404a48:	b	404a5c <setlocale@plt+0x323c>
  404a4c:	mov	x1, x19
  404a50:	bl	401660 <realloc@plt>
  404a54:	cbz	x19, 404a5c <setlocale@plt+0x323c>
  404a58:	cbz	x0, 404a68 <setlocale@plt+0x3248>
  404a5c:	ldr	x19, [sp, #16]
  404a60:	ldp	x29, x30, [sp], #32
  404a64:	ret
  404a68:	bl	404bd4 <setlocale@plt+0x33b4>
  404a6c:	stp	x29, x30, [sp, #-16]!
  404a70:	ldr	x8, [x1]
  404a74:	mov	x29, sp
  404a78:	cbz	x0, 404a9c <setlocale@plt+0x327c>
  404a7c:	mov	x9, #0x5555555555555555    	// #6148914691236517205
  404a80:	movk	x9, #0x5554
  404a84:	udiv	x9, x9, x2
  404a88:	cmp	x9, x8
  404a8c:	b.ls	404ad4 <setlocale@plt+0x32b4>  // b.plast
  404a90:	add	x8, x8, x8, lsr #1
  404a94:	add	x8, x8, #0x1
  404a98:	b	404ac0 <setlocale@plt+0x32a0>
  404a9c:	cbnz	x8, 404ab0 <setlocale@plt+0x3290>
  404aa0:	mov	w8, #0x80                  	// #128
  404aa4:	udiv	x8, x8, x2
  404aa8:	cmp	x2, #0x80
  404aac:	cinc	x8, x8, hi  // hi = pmore
  404ab0:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
  404ab4:	udiv	x9, x9, x2
  404ab8:	cmp	x9, x8
  404abc:	b.cc	404ad4 <setlocale@plt+0x32b4>  // b.lo, b.ul, b.last
  404ac0:	str	x8, [x1]
  404ac4:	mul	x1, x8, x2
  404ac8:	bl	404a28 <setlocale@plt+0x3208>
  404acc:	ldp	x29, x30, [sp], #16
  404ad0:	ret
  404ad4:	bl	404bd4 <setlocale@plt+0x33b4>
  404ad8:	stp	x29, x30, [sp, #-16]!
  404adc:	mov	x29, sp
  404ae0:	bl	4049d0 <setlocale@plt+0x31b0>
  404ae4:	ldp	x29, x30, [sp], #16
  404ae8:	ret
  404aec:	stp	x29, x30, [sp, #-16]!
  404af0:	mov	w2, #0x1                   	// #1
  404af4:	mov	x29, sp
  404af8:	bl	404a6c <setlocale@plt+0x324c>
  404afc:	ldp	x29, x30, [sp], #16
  404b00:	ret
  404b04:	stp	x29, x30, [sp, #-32]!
  404b08:	stp	x20, x19, [sp, #16]
  404b0c:	mov	x29, sp
  404b10:	mov	x19, x0
  404b14:	bl	4049d0 <setlocale@plt+0x31b0>
  404b18:	mov	w1, wzr
  404b1c:	mov	x2, x19
  404b20:	mov	x20, x0
  404b24:	bl	401630 <memset@plt>
  404b28:	mov	x0, x20
  404b2c:	ldp	x20, x19, [sp, #16]
  404b30:	ldp	x29, x30, [sp], #32
  404b34:	ret
  404b38:	stp	x29, x30, [sp, #-16]!
  404b3c:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
  404b40:	udiv	x8, x8, x1
  404b44:	cmp	x8, x0
  404b48:	mov	x29, sp
  404b4c:	b.cc	404b60 <setlocale@plt+0x3340>  // b.lo, b.ul, b.last
  404b50:	bl	404c34 <setlocale@plt+0x3414>
  404b54:	cbz	x0, 404b60 <setlocale@plt+0x3340>
  404b58:	ldp	x29, x30, [sp], #16
  404b5c:	ret
  404b60:	bl	404bd4 <setlocale@plt+0x33b4>
  404b64:	stp	x29, x30, [sp, #-48]!
  404b68:	stp	x20, x19, [sp, #32]
  404b6c:	mov	x20, x0
  404b70:	mov	x0, x1
  404b74:	str	x21, [sp, #16]
  404b78:	mov	x29, sp
  404b7c:	mov	x19, x1
  404b80:	bl	4049d0 <setlocale@plt+0x31b0>
  404b84:	mov	x1, x20
  404b88:	mov	x2, x19
  404b8c:	mov	x21, x0
  404b90:	bl	401500 <memcpy@plt>
  404b94:	mov	x0, x21
  404b98:	ldp	x20, x19, [sp, #32]
  404b9c:	ldr	x21, [sp, #16]
  404ba0:	ldp	x29, x30, [sp], #48
  404ba4:	ret
  404ba8:	stp	x29, x30, [sp, #-32]!
  404bac:	str	x19, [sp, #16]
  404bb0:	mov	x29, sp
  404bb4:	mov	x19, x0
  404bb8:	bl	401530 <strlen@plt>
  404bbc:	add	x1, x0, #0x1
  404bc0:	mov	x0, x19
  404bc4:	bl	404b64 <setlocale@plt+0x3344>
  404bc8:	ldr	x19, [sp, #16]
  404bcc:	ldp	x29, x30, [sp], #32
  404bd0:	ret
  404bd4:	stp	x29, x30, [sp, #-32]!
  404bd8:	str	x19, [sp, #16]
  404bdc:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x12e64>
  404be0:	ldr	w19, [x8, #440]
  404be4:	adrp	x1, 407000 <_obstack_memory_used@@Base+0x1e64>
  404be8:	add	x1, x1, #0x638
  404bec:	mov	w2, #0x5                   	// #5
  404bf0:	mov	x0, xzr
  404bf4:	mov	x29, sp
  404bf8:	bl	4017b0 <dcgettext@plt>
  404bfc:	adrp	x2, 407000 <_obstack_memory_used@@Base+0x1e64>
  404c00:	mov	x3, x0
  404c04:	add	x2, x2, #0x160
  404c08:	mov	w0, w19
  404c0c:	mov	w1, wzr
  404c10:	bl	401550 <error@plt>
  404c14:	bl	4016a0 <abort@plt>
  404c18:	stp	x29, x30, [sp, #-16]!
  404c1c:	mov	x29, sp
  404c20:	bl	401770 <strndup@plt>
  404c24:	cbz	x0, 404c30 <setlocale@plt+0x3410>
  404c28:	ldp	x29, x30, [sp], #16
  404c2c:	ret
  404c30:	bl	404bd4 <setlocale@plt+0x33b4>
  404c34:	stp	x29, x30, [sp, #-16]!
  404c38:	mov	x8, x1
  404c3c:	mov	w1, #0x1                   	// #1
  404c40:	mov	w9, #0x1                   	// #1
  404c44:	mov	x29, sp
  404c48:	cbz	x0, 404c7c <setlocale@plt+0x345c>
  404c4c:	cbz	x8, 404c7c <setlocale@plt+0x345c>
  404c50:	umulh	x10, x8, x0
  404c54:	mov	x1, x8
  404c58:	mov	x9, x0
  404c5c:	cbz	x10, 404c7c <setlocale@plt+0x345c>
  404c60:	bl	401800 <__errno_location@plt>
  404c64:	mov	x8, x0
  404c68:	mov	w9, #0xc                   	// #12
  404c6c:	mov	x0, xzr
  404c70:	str	w9, [x8]
  404c74:	ldp	x29, x30, [sp], #16
  404c78:	ret
  404c7c:	mov	x0, x9
  404c80:	bl	401640 <calloc@plt>
  404c84:	ldp	x29, x30, [sp], #16
  404c88:	ret
  404c8c:	stp	x29, x30, [sp, #-32]!
  404c90:	stp	x20, x19, [sp, #16]
  404c94:	mov	x29, sp
  404c98:	mov	x19, x0
  404c9c:	bl	4015a0 <fileno@plt>
  404ca0:	tbnz	w0, #31, 404ce4 <setlocale@plt+0x34c4>
  404ca4:	mov	x0, x19
  404ca8:	bl	4017d0 <__freading@plt>
  404cac:	cbz	w0, 404ccc <setlocale@plt+0x34ac>
  404cb0:	mov	x0, x19
  404cb4:	bl	4015a0 <fileno@plt>
  404cb8:	mov	w2, #0x1                   	// #1
  404cbc:	mov	x1, xzr
  404cc0:	bl	401580 <lseek@plt>
  404cc4:	cmn	x0, #0x1
  404cc8:	b.eq	404cf0 <setlocale@plt+0x34d0>  // b.none
  404ccc:	mov	x0, x19
  404cd0:	bl	404d18 <setlocale@plt+0x34f8>
  404cd4:	cbz	w0, 404cf0 <setlocale@plt+0x34d0>
  404cd8:	bl	401800 <__errno_location@plt>
  404cdc:	ldr	w20, [x0]
  404ce0:	b	404cf4 <setlocale@plt+0x34d4>
  404ce4:	mov	x0, x19
  404ce8:	bl	4015b0 <fclose@plt>
  404cec:	b	404d0c <setlocale@plt+0x34ec>
  404cf0:	mov	w20, wzr
  404cf4:	mov	x0, x19
  404cf8:	bl	4015b0 <fclose@plt>
  404cfc:	cbz	w20, 404d0c <setlocale@plt+0x34ec>
  404d00:	bl	401800 <__errno_location@plt>
  404d04:	str	w20, [x0]
  404d08:	mov	w0, #0xffffffff            	// #-1
  404d0c:	ldp	x20, x19, [sp, #16]
  404d10:	ldp	x29, x30, [sp], #32
  404d14:	ret
  404d18:	stp	x29, x30, [sp, #-32]!
  404d1c:	str	x19, [sp, #16]
  404d20:	mov	x19, x0
  404d24:	mov	x29, sp
  404d28:	cbz	x0, 404d40 <setlocale@plt+0x3520>
  404d2c:	mov	x0, x19
  404d30:	bl	4017d0 <__freading@plt>
  404d34:	cbz	w0, 404d40 <setlocale@plt+0x3520>
  404d38:	mov	x0, x19
  404d3c:	bl	404d54 <setlocale@plt+0x3534>
  404d40:	mov	x0, x19
  404d44:	bl	4017a0 <fflush@plt>
  404d48:	ldr	x19, [sp, #16]
  404d4c:	ldp	x29, x30, [sp], #32
  404d50:	ret
  404d54:	stp	x29, x30, [sp, #-16]!
  404d58:	ldrb	w8, [x0, #1]
  404d5c:	mov	x29, sp
  404d60:	tbz	w8, #0, 404d70 <setlocale@plt+0x3550>
  404d64:	mov	w2, #0x1                   	// #1
  404d68:	mov	x1, xzr
  404d6c:	bl	404d78 <setlocale@plt+0x3558>
  404d70:	ldp	x29, x30, [sp], #16
  404d74:	ret
  404d78:	stp	x29, x30, [sp, #-48]!
  404d7c:	str	x21, [sp, #16]
  404d80:	stp	x20, x19, [sp, #32]
  404d84:	ldp	x9, x8, [x0, #8]
  404d88:	mov	w20, w2
  404d8c:	mov	x19, x0
  404d90:	mov	x21, x1
  404d94:	cmp	x8, x9
  404d98:	mov	x29, sp
  404d9c:	b.ne	404db4 <setlocale@plt+0x3594>  // b.any
  404da0:	ldp	x9, x8, [x19, #32]
  404da4:	cmp	x8, x9
  404da8:	b.ne	404db4 <setlocale@plt+0x3594>  // b.any
  404dac:	ldr	x8, [x19, #72]
  404db0:	cbz	x8, 404dd4 <setlocale@plt+0x35b4>
  404db4:	mov	x0, x19
  404db8:	mov	x1, x21
  404dbc:	mov	w2, w20
  404dc0:	bl	401720 <fseeko@plt>
  404dc4:	ldp	x20, x19, [sp, #32]
  404dc8:	ldr	x21, [sp, #16]
  404dcc:	ldp	x29, x30, [sp], #48
  404dd0:	ret
  404dd4:	mov	x0, x19
  404dd8:	bl	4015a0 <fileno@plt>
  404ddc:	mov	x1, x21
  404de0:	mov	w2, w20
  404de4:	bl	401580 <lseek@plt>
  404de8:	cmn	x0, #0x1
  404dec:	b.eq	404dc4 <setlocale@plt+0x35a4>  // b.none
  404df0:	ldr	w9, [x19]
  404df4:	mov	x8, x0
  404df8:	mov	w0, wzr
  404dfc:	str	x8, [x19, #144]
  404e00:	and	w9, w9, #0xffffffef
  404e04:	str	w9, [x19]
  404e08:	b	404dc4 <setlocale@plt+0x35a4>
  404e0c:	sub	sp, sp, #0x40
  404e10:	stp	x29, x30, [sp, #16]
  404e14:	add	x29, sp, #0x10
  404e18:	cmp	x0, #0x0
  404e1c:	sub	x8, x29, #0x4
  404e20:	stp	x20, x19, [sp, #48]
  404e24:	csel	x20, x8, x0, eq  // eq = none
  404e28:	mov	x0, x20
  404e2c:	stp	x22, x21, [sp, #32]
  404e30:	mov	x22, x2
  404e34:	mov	x19, x1
  404e38:	bl	4014f0 <mbrtowc@plt>
  404e3c:	mov	x21, x0
  404e40:	cbz	x22, 404e64 <setlocale@plt+0x3644>
  404e44:	cmn	x21, #0x2
  404e48:	b.cc	404e64 <setlocale@plt+0x3644>  // b.lo, b.ul, b.last
  404e4c:	mov	w0, wzr
  404e50:	bl	405424 <_obstack_memory_used@@Base+0x288>
  404e54:	tbnz	w0, #0, 404e64 <setlocale@plt+0x3644>
  404e58:	ldrb	w8, [x19]
  404e5c:	mov	w21, #0x1                   	// #1
  404e60:	str	w8, [x20]
  404e64:	mov	x0, x21
  404e68:	ldp	x20, x19, [sp, #48]
  404e6c:	ldp	x22, x21, [sp, #32]
  404e70:	ldp	x29, x30, [sp, #16]
  404e74:	add	sp, sp, #0x40
  404e78:	ret

0000000000404e7c <_obstack_begin@@Base>:
  404e7c:	stp	x29, x30, [sp, #-16]!
  404e80:	ldrb	w8, [x0, #80]
  404e84:	mov	x29, sp
  404e88:	stp	x3, x4, [x0, #56]
  404e8c:	and	w8, w8, #0xfe
  404e90:	strb	w8, [x0, #80]
  404e94:	bl	404ea4 <_obstack_begin@@Base+0x28>
  404e98:	mov	w0, #0x1                   	// #1
  404e9c:	ldp	x29, x30, [sp], #16
  404ea0:	ret
  404ea4:	stp	x29, x30, [sp, #-48]!
  404ea8:	cmp	x2, #0x0
  404eac:	mov	w8, #0x10                  	// #16
  404eb0:	stp	x20, x19, [sp, #32]
  404eb4:	mov	w9, #0xfe0                 	// #4064
  404eb8:	csel	x20, x8, x2, eq  // eq = none
  404ebc:	cmp	x1, #0x0
  404ec0:	str	x21, [sp, #16]
  404ec4:	csel	x1, x9, x1, eq  // eq = none
  404ec8:	sub	x21, x20, #0x1
  404ecc:	mov	x29, sp
  404ed0:	mov	x19, x0
  404ed4:	str	x1, [x0]
  404ed8:	str	x21, [x0, #48]
  404edc:	bl	405074 <_obstack_newchunk@@Base+0x110>
  404ee0:	str	x0, [x19, #8]
  404ee4:	cbz	x0, 404f2c <_obstack_begin@@Base+0xb0>
  404ee8:	ldr	x10, [x19]
  404eec:	add	x8, x0, x21
  404ef0:	neg	x9, x20
  404ef4:	add	x8, x8, #0x10
  404ef8:	and	x8, x8, x9
  404efc:	stp	x8, x8, [x19, #16]
  404f00:	add	x8, x0, x10
  404f04:	str	x8, [x0]
  404f08:	str	x8, [x19, #32]
  404f0c:	str	xzr, [x0, #8]
  404f10:	ldrb	w8, [x19, #80]
  404f14:	ldr	x21, [sp, #16]
  404f18:	and	w8, w8, #0xfffffff9
  404f1c:	strb	w8, [x19, #80]
  404f20:	ldp	x20, x19, [sp, #32]
  404f24:	ldp	x29, x30, [sp], #48
  404f28:	ret
  404f2c:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x12e64>
  404f30:	ldr	x8, [x8, #536]
  404f34:	blr	x8

0000000000404f38 <_obstack_begin_1@@Base>:
  404f38:	stp	x29, x30, [sp, #-16]!
  404f3c:	ldrb	w8, [x0, #80]
  404f40:	mov	x29, sp
  404f44:	stp	x3, x4, [x0, #56]
  404f48:	str	x5, [x0, #72]
  404f4c:	orr	w8, w8, #0x1
  404f50:	strb	w8, [x0, #80]
  404f54:	bl	404ea4 <_obstack_begin@@Base+0x28>
  404f58:	mov	w0, #0x1                   	// #1
  404f5c:	ldp	x29, x30, [sp], #16
  404f60:	ret

0000000000404f64 <_obstack_newchunk@@Base>:
  404f64:	stp	x29, x30, [sp, #-64]!
  404f68:	str	x23, [sp, #16]
  404f6c:	stp	x22, x21, [sp, #32]
  404f70:	stp	x20, x19, [sp, #48]
  404f74:	ldp	x9, x8, [x0, #16]
  404f78:	ldr	x10, [x0, #48]
  404f7c:	ldp	x11, x21, [x0]
  404f80:	mov	x19, x0
  404f84:	sub	x20, x8, x9
  404f88:	adds	x8, x20, x1
  404f8c:	lsr	x9, x20, #3
  404f90:	cset	w12, cs  // cs = hs, nlast
  404f94:	adds	x10, x8, x10
  404f98:	add	x9, x9, #0x64
  404f9c:	cset	w8, cs  // cs = hs, nlast
  404fa0:	adds	x9, x9, x10
  404fa4:	csel	x9, x10, x9, cs  // cs = hs, nlast
  404fa8:	cmp	x9, x11
  404fac:	mov	x22, xzr
  404fb0:	csel	x23, x11, x9, cc  // cc = lo, ul, last
  404fb4:	mov	x29, sp
  404fb8:	tbnz	w12, #0, 404fd0 <_obstack_newchunk@@Base+0x6c>
  404fbc:	tbnz	w8, #0, 404fd0 <_obstack_newchunk@@Base+0x6c>
  404fc0:	mov	x0, x19
  404fc4:	mov	x1, x23
  404fc8:	bl	405074 <_obstack_newchunk@@Base+0x110>
  404fcc:	mov	x22, x0
  404fd0:	cbz	x22, 405068 <_obstack_newchunk@@Base+0x104>
  404fd4:	add	x8, x22, x23
  404fd8:	str	x22, [x19, #8]
  404fdc:	str	x21, [x22, #8]
  404fe0:	str	x8, [x19, #32]
  404fe4:	str	x8, [x22]
  404fe8:	ldr	x8, [x19, #48]
  404fec:	ldr	x1, [x19, #16]
  404ff0:	mov	x2, x20
  404ff4:	add	x9, x22, x8
  404ff8:	add	x9, x9, #0x10
  404ffc:	bic	x23, x9, x8
  405000:	mov	x0, x23
  405004:	bl	401500 <memcpy@plt>
  405008:	ldrb	w8, [x19, #80]
  40500c:	tbnz	w8, #1, 405040 <_obstack_newchunk@@Base+0xdc>
  405010:	ldr	x8, [x19, #48]
  405014:	ldr	x9, [x19, #16]
  405018:	add	x10, x21, x8
  40501c:	add	x10, x10, #0x10
  405020:	bic	x8, x10, x8
  405024:	cmp	x9, x8
  405028:	b.ne	405040 <_obstack_newchunk@@Base+0xdc>  // b.any
  40502c:	ldr	x8, [x21, #8]
  405030:	mov	x0, x19
  405034:	mov	x1, x21
  405038:	str	x8, [x22, #8]
  40503c:	bl	4050ac <_obstack_newchunk@@Base+0x148>
  405040:	ldrb	w8, [x19, #80]
  405044:	add	x9, x23, x20
  405048:	stp	x23, x9, [x19, #16]
  40504c:	ldr	x23, [sp, #16]
  405050:	and	w8, w8, #0xfffffffd
  405054:	strb	w8, [x19, #80]
  405058:	ldp	x20, x19, [sp, #48]
  40505c:	ldp	x22, x21, [sp, #32]
  405060:	ldp	x29, x30, [sp], #64
  405064:	ret
  405068:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x12e64>
  40506c:	ldr	x8, [x8, #536]
  405070:	blr	x8
  405074:	stp	x29, x30, [sp, #-16]!
  405078:	ldrb	w8, [x0, #80]
  40507c:	mov	x29, sp
  405080:	tbnz	w8, #0, 405098 <_obstack_newchunk@@Base+0x134>
  405084:	ldr	x8, [x0, #56]
  405088:	mov	x0, x1
  40508c:	blr	x8
  405090:	ldp	x29, x30, [sp], #16
  405094:	ret
  405098:	ldr	x8, [x0, #56]
  40509c:	ldr	x0, [x0, #72]
  4050a0:	blr	x8
  4050a4:	ldp	x29, x30, [sp], #16
  4050a8:	ret
  4050ac:	stp	x29, x30, [sp, #-16]!
  4050b0:	ldrb	w8, [x0, #80]
  4050b4:	mov	x29, sp
  4050b8:	tbnz	w8, #0, 4050d0 <_obstack_newchunk@@Base+0x16c>
  4050bc:	ldr	x8, [x0, #64]
  4050c0:	mov	x0, x1
  4050c4:	blr	x8
  4050c8:	ldp	x29, x30, [sp], #16
  4050cc:	ret
  4050d0:	ldp	x8, x0, [x0, #64]
  4050d4:	blr	x8
  4050d8:	ldp	x29, x30, [sp], #16
  4050dc:	ret

00000000004050e0 <_obstack_allocated_p@@Base>:
  4050e0:	ldr	x8, [x0, #8]
  4050e4:	b	4050ec <_obstack_allocated_p@@Base+0xc>
  4050e8:	ldr	x8, [x8, #8]
  4050ec:	cmp	x8, #0x0
  4050f0:	cset	w9, ne  // ne = any
  4050f4:	cbz	x8, 40510c <_obstack_allocated_p@@Base+0x2c>
  4050f8:	cmp	x8, x1
  4050fc:	b.cs	4050e8 <_obstack_allocated_p@@Base+0x8>  // b.hs, b.nlast
  405100:	ldr	x10, [x8]
  405104:	cmp	x10, x1
  405108:	b.cc	4050e8 <_obstack_allocated_p@@Base+0x8>  // b.lo, b.ul, b.last
  40510c:	and	w0, w9, #0x1
  405110:	ret

0000000000405114 <_obstack_free@@Base>:
  405114:	stp	x29, x30, [sp, #-48]!
  405118:	stp	x20, x19, [sp, #32]
  40511c:	ldr	x8, [x0, #8]
  405120:	mov	x20, x1
  405124:	str	x21, [sp, #16]
  405128:	mov	x29, sp
  40512c:	cbz	x8, 405184 <_obstack_free@@Base+0x70>
  405130:	mov	x19, x0
  405134:	b	40515c <_obstack_free@@Base+0x48>
  405138:	ldr	x21, [x8, #8]
  40513c:	mov	x0, x19
  405140:	mov	x1, x8
  405144:	bl	4050ac <_obstack_newchunk@@Base+0x148>
  405148:	ldrb	w8, [x19, #80]
  40514c:	orr	w8, w8, #0x2
  405150:	strb	w8, [x19, #80]
  405154:	mov	x8, x21
  405158:	cbz	x21, 405184 <_obstack_free@@Base+0x70>
  40515c:	cmp	x8, x20
  405160:	b.cs	405138 <_obstack_free@@Base+0x24>  // b.hs, b.nlast
  405164:	ldr	x9, [x8]
  405168:	cmp	x9, x20
  40516c:	b.cc	405138 <_obstack_free@@Base+0x24>  // b.lo, b.ul, b.last
  405170:	stp	x20, x20, [x19, #16]
  405174:	ldr	x9, [x8]
  405178:	str	x8, [x19, #8]
  40517c:	str	x9, [x19, #32]
  405180:	b	405188 <_obstack_free@@Base+0x74>
  405184:	cbnz	x20, 405198 <_obstack_free@@Base+0x84>
  405188:	ldp	x20, x19, [sp, #32]
  40518c:	ldr	x21, [sp, #16]
  405190:	ldp	x29, x30, [sp], #48
  405194:	ret
  405198:	bl	4016a0 <abort@plt>

000000000040519c <_obstack_memory_used@@Base>:
  40519c:	ldr	x8, [x0, #8]
  4051a0:	cbz	x8, 4051bc <_obstack_memory_used@@Base+0x20>
  4051a4:	mov	x0, xzr
  4051a8:	sub	x10, x0, x8
  4051ac:	ldp	x9, x8, [x8]
  4051b0:	add	x0, x10, x9
  4051b4:	cbnz	x8, 4051a8 <_obstack_memory_used@@Base+0xc>
  4051b8:	ret
  4051bc:	mov	x0, xzr
  4051c0:	ret
  4051c4:	stp	x29, x30, [sp, #-32]!
  4051c8:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x12e64>
  4051cc:	str	x19, [sp, #16]
  4051d0:	ldr	x19, [x8, #552]
  4051d4:	adrp	x1, 407000 <_obstack_memory_used@@Base+0x1e64>
  4051d8:	add	x1, x1, #0x638
  4051dc:	mov	w2, #0x5                   	// #5
  4051e0:	mov	x0, xzr
  4051e4:	mov	x29, sp
  4051e8:	bl	4017b0 <dcgettext@plt>
  4051ec:	adrp	x2, 407000 <_obstack_memory_used@@Base+0x1e64>
  4051f0:	mov	x3, x0
  4051f4:	add	x2, x2, #0x333
  4051f8:	mov	w1, #0x1                   	// #1
  4051fc:	mov	x0, x19
  405200:	bl	4016f0 <__fprintf_chk@plt>
  405204:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x12e64>
  405208:	ldr	w0, [x8, #440]
  40520c:	bl	401540 <exit@plt>
  405210:	sub	w9, w0, #0x41
  405214:	mov	w8, w0
  405218:	cmp	w9, #0x39
  40521c:	mov	w0, #0x1                   	// #1
  405220:	b.hi	405238 <_obstack_memory_used@@Base+0x9c>  // b.pmore
  405224:	mov	w10, #0x1                   	// #1
  405228:	lsl	x9, x10, x9
  40522c:	tst	x9, #0x3ffffff03ffffff
  405230:	b.eq	405238 <_obstack_memory_used@@Base+0x9c>  // b.none
  405234:	ret
  405238:	sub	w8, w8, #0x30
  40523c:	cmp	w8, #0xa
  405240:	b.cc	405234 <_obstack_memory_used@@Base+0x98>  // b.lo, b.ul, b.last
  405244:	mov	w0, wzr
  405248:	ret
  40524c:	sub	w8, w0, #0x41
  405250:	cmp	w8, #0x39
  405254:	b.hi	405268 <_obstack_memory_used@@Base+0xcc>  // b.pmore
  405258:	mov	x9, #0x3ffffff03ffffff     	// #288230371923853311
  40525c:	lsr	x8, x9, x8
  405260:	and	w0, w8, #0x1
  405264:	ret
  405268:	mov	w0, wzr
  40526c:	ret
  405270:	cmp	w0, #0x80
  405274:	cset	w0, cc  // cc = lo, ul, last
  405278:	ret
  40527c:	cmp	w0, #0x20
  405280:	cset	w8, eq  // eq = none
  405284:	cmp	w0, #0x9
  405288:	cset	w9, eq  // eq = none
  40528c:	orr	w0, w8, w9
  405290:	ret
  405294:	mov	w8, w0
  405298:	cmp	w0, #0x20
  40529c:	mov	w0, #0x1                   	// #1
  4052a0:	b.cs	4052a8 <_obstack_memory_used@@Base+0x10c>  // b.hs, b.nlast
  4052a4:	ret
  4052a8:	cmp	w8, #0x7f
  4052ac:	b.eq	4052a4 <_obstack_memory_used@@Base+0x108>  // b.none
  4052b0:	mov	w0, wzr
  4052b4:	ret
  4052b8:	sub	w8, w0, #0x30
  4052bc:	cmp	w8, #0xa
  4052c0:	cset	w0, cc  // cc = lo, ul, last
  4052c4:	ret
  4052c8:	sub	w8, w0, #0x21
  4052cc:	cmp	w8, #0x5e
  4052d0:	cset	w0, cc  // cc = lo, ul, last
  4052d4:	ret
  4052d8:	sub	w8, w0, #0x61
  4052dc:	cmp	w8, #0x1a
  4052e0:	cset	w0, cc  // cc = lo, ul, last
  4052e4:	ret
  4052e8:	sub	w8, w0, #0x20
  4052ec:	cmp	w8, #0x5f
  4052f0:	cset	w0, cc  // cc = lo, ul, last
  4052f4:	ret
  4052f8:	sub	w8, w0, #0x21
  4052fc:	cmp	w8, #0x5d
  405300:	b.hi	405324 <_obstack_memory_used@@Base+0x188>  // b.pmore
  405304:	adrp	x9, 407000 <_obstack_memory_used@@Base+0x1e64>
  405308:	add	x9, x9, #0x649
  40530c:	adr	x10, 405320 <_obstack_memory_used@@Base+0x184>
  405310:	ldrb	w11, [x9, x8]
  405314:	add	x10, x10, x11, lsl #2
  405318:	mov	w0, #0x1                   	// #1
  40531c:	br	x10
  405320:	ret
  405324:	mov	w0, wzr
  405328:	ret
  40532c:	sub	w8, w0, #0x9
  405330:	cmp	w8, #0x17
  405334:	b.hi	40534c <_obstack_memory_used@@Base+0x1b0>  // b.pmore
  405338:	mov	w9, #0x1f                  	// #31
  40533c:	movk	w9, #0x80, lsl #16
  405340:	lsr	w8, w9, w8
  405344:	and	w0, w8, #0x1
  405348:	ret
  40534c:	mov	w0, wzr
  405350:	ret
  405354:	sub	w8, w0, #0x41
  405358:	cmp	w8, #0x1a
  40535c:	cset	w0, cc  // cc = lo, ul, last
  405360:	ret
  405364:	sub	w8, w0, #0x30
  405368:	cmp	w8, #0x36
  40536c:	b.hi	405384 <_obstack_memory_used@@Base+0x1e8>  // b.pmore
  405370:	mov	x9, #0x7e0000007e0000      	// #35465847073800192
  405374:	movk	x9, #0x3ff
  405378:	lsr	x8, x9, x8
  40537c:	and	w0, w8, #0x1
  405380:	ret
  405384:	mov	w0, wzr
  405388:	ret
  40538c:	sub	w8, w0, #0x41
  405390:	add	w9, w0, #0x20
  405394:	cmp	w8, #0x1a
  405398:	csel	w0, w9, w0, cc  // cc = lo, ul, last
  40539c:	ret
  4053a0:	sub	w8, w0, #0x61
  4053a4:	sub	w9, w0, #0x20
  4053a8:	cmp	w8, #0x1a
  4053ac:	csel	w0, w9, w0, cc  // cc = lo, ul, last
  4053b0:	ret
  4053b4:	stp	x29, x30, [sp, #-48]!
  4053b8:	str	x21, [sp, #16]
  4053bc:	stp	x20, x19, [sp, #32]
  4053c0:	mov	x29, sp
  4053c4:	mov	x20, x0
  4053c8:	bl	401590 <__fpending@plt>
  4053cc:	mov	x19, x0
  4053d0:	mov	x0, x20
  4053d4:	bl	401560 <ferror_unlocked@plt>
  4053d8:	mov	w21, w0
  4053dc:	mov	x0, x20
  4053e0:	bl	404c8c <setlocale@plt+0x346c>
  4053e4:	cbz	w21, 405408 <_obstack_memory_used@@Base+0x26c>
  4053e8:	cbnz	w0, 4053f4 <_obstack_memory_used@@Base+0x258>
  4053ec:	bl	401800 <__errno_location@plt>
  4053f0:	str	wzr, [x0]
  4053f4:	mov	w0, #0xffffffff            	// #-1
  4053f8:	ldp	x20, x19, [sp, #32]
  4053fc:	ldr	x21, [sp, #16]
  405400:	ldp	x29, x30, [sp], #48
  405404:	ret
  405408:	cbz	w0, 4053f8 <_obstack_memory_used@@Base+0x25c>
  40540c:	cbnz	x19, 4053e8 <_obstack_memory_used@@Base+0x24c>
  405410:	bl	401800 <__errno_location@plt>
  405414:	ldr	w8, [x0]
  405418:	cmp	w8, #0x9
  40541c:	csetm	w0, ne  // ne = any
  405420:	b	4053f8 <_obstack_memory_used@@Base+0x25c>
  405424:	stp	x29, x30, [sp, #-32]!
  405428:	mov	x1, xzr
  40542c:	str	x19, [sp, #16]
  405430:	mov	x29, sp
  405434:	bl	401820 <setlocale@plt>
  405438:	cbz	x0, 405464 <_obstack_memory_used@@Base+0x2c8>
  40543c:	adrp	x1, 407000 <_obstack_memory_used@@Base+0x1e64>
  405440:	add	x1, x1, #0x7e
  405444:	mov	x19, x0
  405448:	bl	401700 <strcmp@plt>
  40544c:	cbz	w0, 40546c <_obstack_memory_used@@Base+0x2d0>
  405450:	adrp	x1, 407000 <_obstack_memory_used@@Base+0x1e64>
  405454:	add	x1, x1, #0x6a7
  405458:	mov	x0, x19
  40545c:	bl	401700 <strcmp@plt>
  405460:	cbz	w0, 40546c <_obstack_memory_used@@Base+0x2d0>
  405464:	mov	w0, #0x1                   	// #1
  405468:	b	405470 <_obstack_memory_used@@Base+0x2d4>
  40546c:	mov	w0, wzr
  405470:	ldr	x19, [sp, #16]
  405474:	ldp	x29, x30, [sp], #32
  405478:	ret
  40547c:	stp	x29, x30, [sp, #-16]!
  405480:	mov	w0, #0xe                   	// #14
  405484:	mov	x29, sp
  405488:	bl	4015c0 <nl_langinfo@plt>
  40548c:	adrp	x8, 407000 <_obstack_memory_used@@Base+0x1e64>
  405490:	add	x8, x8, #0x40d
  405494:	cmp	x0, #0x0
  405498:	csel	x8, x8, x0, eq  // eq = none
  40549c:	ldrb	w9, [x8]
  4054a0:	adrp	x10, 407000 <_obstack_memory_used@@Base+0x1e64>
  4054a4:	add	x10, x10, #0x6ad
  4054a8:	cmp	w9, #0x0
  4054ac:	csel	x0, x10, x8, eq  // eq = none
  4054b0:	ldp	x29, x30, [sp], #16
  4054b4:	ret
  4054b8:	stp	x29, x30, [sp, #-64]!
  4054bc:	mov	x29, sp
  4054c0:	stp	x19, x20, [sp, #16]
  4054c4:	adrp	x20, 417000 <_obstack_memory_used@@Base+0x11e64>
  4054c8:	add	x20, x20, #0xdf0
  4054cc:	stp	x21, x22, [sp, #32]
  4054d0:	adrp	x21, 417000 <_obstack_memory_used@@Base+0x11e64>
  4054d4:	add	x21, x21, #0xde8
  4054d8:	sub	x20, x20, x21
  4054dc:	mov	w22, w0
  4054e0:	stp	x23, x24, [sp, #48]
  4054e4:	mov	x23, x1
  4054e8:	mov	x24, x2
  4054ec:	bl	4014b0 <mbrtowc@plt-0x40>
  4054f0:	cmp	xzr, x20, asr #3
  4054f4:	b.eq	405520 <_obstack_memory_used@@Base+0x384>  // b.none
  4054f8:	asr	x20, x20, #3
  4054fc:	mov	x19, #0x0                   	// #0
  405500:	ldr	x3, [x21, x19, lsl #3]
  405504:	mov	x2, x24
  405508:	add	x19, x19, #0x1
  40550c:	mov	x1, x23
  405510:	mov	w0, w22
  405514:	blr	x3
  405518:	cmp	x20, x19
  40551c:	b.ne	405500 <_obstack_memory_used@@Base+0x364>  // b.any
  405520:	ldp	x19, x20, [sp, #16]
  405524:	ldp	x21, x22, [sp, #32]
  405528:	ldp	x23, x24, [sp, #48]
  40552c:	ldp	x29, x30, [sp], #64
  405530:	ret
  405534:	nop
  405538:	ret
  40553c:	nop
  405540:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x12e64>
  405544:	mov	x1, #0x0                   	// #0
  405548:	ldr	x2, [x2, #424]
  40554c:	b	401570 <__cxa_atexit@plt>

Disassembly of section .fini:

0000000000405550 <.fini>:
  405550:	stp	x29, x30, [sp, #-16]!
  405554:	mov	x29, sp
  405558:	ldp	x29, x30, [sp], #16
  40555c:	ret
