
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//scsi.module_gcc_-O2:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_scsi_iterate>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	adrp	x3, 0 <grub_scsi_iterate>
   8:	mov	x29, sp
   c:	stp	x0, x1, [sp, #48]
  10:	ldr	x0, [x3]
  14:	stp	x19, x20, [sp, #16]
  18:	ldr	x19, [x0]
  1c:	cbz	x19, 58 <grub_scsi_iterate+0x58>
  20:	mov	w20, w2
  24:	str	x21, [sp, #32]
  28:	adrp	x21, 0 <grub_scsi_iterate>
  2c:	nop
  30:	ldr	x3, [x19]
  34:	mov	w2, w20
  38:	add	x1, sp, #0x30
  3c:	cbz	x3, 4c <grub_scsi_iterate+0x4c>
  40:	ldr	x0, [x21]
  44:	blr	x3
  48:	cbnz	w0, 68 <grub_scsi_iterate+0x68>
  4c:	ldr	x19, [x19, #40]
  50:	cbnz	x19, 30 <grub_scsi_iterate+0x30>
  54:	ldr	x21, [sp, #32]
  58:	mov	w0, #0x0                   	// #0
  5c:	ldp	x19, x20, [sp, #16]
  60:	ldp	x29, x30, [sp], #64
  64:	ret
  68:	mov	w0, #0x1                   	// #1
  6c:	ldp	x19, x20, [sp, #16]
  70:	ldr	x21, [sp, #32]
  74:	ldp	x29, x30, [sp], #64
  78:	ret
  7c:	nop
	...

0000000000000090 <grub_scsi_request_sense>:
  90:	stp	x29, x30, [sp, #-80]!
  94:	mov	w5, #0x3                   	// #3
  98:	mov	w4, #0x120000              	// #1179648
  9c:	mov	x29, sp
  a0:	str	x19, [sp, #16]
  a4:	mov	x19, x0
  a8:	mov	x2, #0x6                   	// #6
  ac:	add	x0, sp, #0x2e
  b0:	mov	w1, #0x0                   	// #0
  b4:	strb	w5, [sp, #40]
  b8:	ldr	w3, [x19, #20]
  bc:	stur	w4, [sp, #42]
  c0:	ubfiz	w3, w3, #5, #3
  c4:	strb	w3, [sp, #41]
  c8:	bl	0 <grub_memset>
  cc:	ldr	x5, [x19]
  d0:	add	x2, sp, #0x28
  d4:	add	x4, sp, #0x38
  d8:	mov	x0, x19
  dc:	mov	x3, #0x12                  	// #18
  e0:	mov	x1, #0xc                   	// #12
  e4:	ldr	x5, [x5, #24]
  e8:	blr	x5
  ec:	ldr	x19, [sp, #16]
  f0:	ldp	x29, x30, [sp], #80
  f4:	ret

00000000000000f8 <grub_scsi_close>:
  f8:	stp	x29, x30, [sp, #-32]!
  fc:	mov	x29, sp
 100:	str	x19, [sp, #16]
 104:	ldr	x19, [x0, #64]
 108:	ldr	x0, [x19]
 10c:	ldr	x1, [x0, #16]
 110:	cbz	x1, 11c <grub_scsi_close+0x24>
 114:	mov	x0, x19
 118:	blr	x1
 11c:	mov	x0, x19
 120:	ldr	x19, [sp, #16]
 124:	ldp	x29, x30, [sp], #32
 128:	b	0 <grub_free>
 12c:	nop

0000000000000130 <grub_scsi_open>:
 130:	stp	x29, x30, [sp, #-144]!
 134:	mov	x29, sp
 138:	stp	x19, x20, [sp, #16]
 13c:	mov	x20, x0
 140:	stp	x21, x22, [sp, #32]
 144:	mov	x22, x1
 148:	stp	x23, x24, [sp, #48]
 14c:	bl	0 <grub_strlen>
 150:	sub	x0, x0, #0x1
 154:	adds	x19, x20, x0
 158:	b.cc	248 <grub_scsi_open+0x118>  // b.lo, b.ul, b.last
 15c:	ldrb	w3, [x19, #1]
 160:	mov	w23, #0x0                   	// #0
 164:	sub	w3, w3, #0x30
 168:	and	w3, w3, #0xff
 16c:	cmp	w3, #0x9
 170:	b.hi	21c <grub_scsi_open+0xec>  // b.pmore
 174:	mov	w2, #0x0                   	// #0
 178:	mov	x1, #0x0                   	// #0
 17c:	add	x0, x19, #0x1
 180:	stp	x25, x26, [sp, #64]
 184:	bl	0 <grub_strtoul>
 188:	mov	x26, x0
 18c:	mov	x0, #0x38                  	// #56
 190:	bl	0 <grub_malloc>
 194:	mov	x21, x0
 198:	cbz	x0, 2b0 <grub_scsi_open+0x180>
 19c:	adrp	x0, 0 <grub_scsi_iterate>
 1a0:	sub	x19, x19, x20
 1a4:	mov	x2, x19
 1a8:	mov	x1, x20
 1ac:	ldr	x24, [x0]
 1b0:	mov	x0, x24
 1b4:	bl	0 <grub_strncmp>
 1b8:	cbz	w0, 2c4 <grub_scsi_open+0x194>
 1bc:	mov	x2, x19
 1c0:	mov	x1, x20
 1c4:	add	x0, x24, #0x5
 1c8:	bl	0 <grub_strncmp>
 1cc:	cbz	w0, 618 <grub_scsi_open+0x4e8>
 1d0:	mov	x2, x19
 1d4:	mov	x1, x20
 1d8:	add	x0, x24, #0xa
 1dc:	bl	0 <grub_strncmp>
 1e0:	cbz	w0, 620 <grub_scsi_open+0x4f0>
 1e4:	mov	x0, x21
 1e8:	bl	0 <grub_free>
 1ec:	adrp	x1, 0 <grub_scsi_iterate>
 1f0:	mov	w0, #0xc                   	// #12
 1f4:	ldr	x1, [x1]
 1f8:	bl	0 <grub_error>
 1fc:	mov	w19, w0
 200:	ldp	x25, x26, [sp, #64]
 204:	mov	w0, w19
 208:	ldp	x19, x20, [sp, #16]
 20c:	ldp	x21, x22, [sp, #32]
 210:	ldp	x23, x24, [sp, #48]
 214:	ldp	x29, x30, [sp], #144
 218:	ret
 21c:	adrp	x1, 0 <grub_scsi_iterate>
 220:	mov	w0, #0xc                   	// #12
 224:	ldr	x1, [x1]
 228:	bl	0 <grub_error>
 22c:	mov	w19, w0
 230:	mov	w0, w19
 234:	ldp	x19, x20, [sp, #16]
 238:	ldp	x21, x22, [sp, #32]
 23c:	ldp	x23, x24, [sp, #48]
 240:	ldp	x29, x30, [sp], #144
 244:	ret
 248:	ldrb	w3, [x20, x0]
 24c:	mov	w23, #0x0                   	// #0
 250:	sub	w0, w3, #0x61
 254:	and	w1, w0, #0xff
 258:	cmp	w1, #0x19
 25c:	b.hi	298 <grub_scsi_open+0x168>  // b.pmore
 260:	sub	x1, x19, #0x1
 264:	mov	w23, w0
 268:	cmp	x20, x1
 26c:	b.hi	21c <grub_scsi_open+0xec>  // b.pmore
 270:	ldurb	w3, [x19, #-1]
 274:	mov	x19, x1
 278:	sub	w3, w3, #0x30
 27c:	cmp	w3, #0x9
 280:	b.hi	2a4 <grub_scsi_open+0x174>  // b.pmore
 284:	nop
 288:	sub	x19, x19, #0x1
 28c:	cmp	x20, x19
 290:	b.hi	168 <grub_scsi_open+0x38>  // b.pmore
 294:	ldrb	w3, [x19]
 298:	sub	w3, w3, #0x30
 29c:	cmp	w3, #0x9
 2a0:	b.ls	288 <grub_scsi_open+0x158>  // b.plast
 2a4:	ldrb	w3, [x19, #1]
 2a8:	sub	w3, w3, #0x30
 2ac:	b	168 <grub_scsi_open+0x38>
 2b0:	adrp	x0, 0 <grub_scsi_iterate>
 2b4:	ldp	x25, x26, [sp, #64]
 2b8:	ldr	x0, [x0]
 2bc:	ldr	w19, [x0]
 2c0:	b	204 <grub_scsi_open+0xd4>
 2c4:	mov	w20, #0x0                   	// #0
 2c8:	adrp	x0, 0 <grub_scsi_iterate>
 2cc:	mov	w24, w26
 2d0:	adrp	x25, 0 <grub_scsi_iterate>
 2d4:	ldr	x0, [x0]
 2d8:	ldr	x19, [x0]
 2dc:	cbz	x19, 1e4 <grub_scsi_open+0xb4>
 2e0:	ldr	x3, [x19, #8]
 2e4:	mov	x2, x21
 2e8:	mov	w1, w24
 2ec:	mov	w0, w20
 2f0:	blr	x3
 2f4:	cbz	w0, 320 <grub_scsi_open+0x1f0>
 2f8:	ldr	x0, [x25]
 2fc:	ldr	x19, [x19, #40]
 300:	str	wzr, [x0]
 304:	cbz	x19, 1e4 <grub_scsi_open+0xb4>
 308:	ldr	x3, [x19, #8]
 30c:	mov	x2, x21
 310:	mov	w1, w24
 314:	mov	w0, w20
 318:	blr	x3
 31c:	cbnz	w0, 2f8 <grub_scsi_open+0x1c8>
 320:	adrp	x3, 0 <grub_scsi_iterate>
 324:	orr	w2, w23, w26, lsl #8
 328:	adrp	x1, 0 <grub_scsi_iterate>
 32c:	adrp	x0, 0 <grub_scsi_iterate>
 330:	ldr	x3, [x3]
 334:	orr	w20, w2, w20, lsl #24
 338:	ldr	x25, [x1]
 33c:	str	x20, [x22, #32]
 340:	ldr	x24, [x0]
 344:	str	x21, [x22, #64]
 348:	str	x19, [x21]
 34c:	mov	x2, x25
 350:	str	w26, [x21, #12]
 354:	mov	x0, x24
 358:	str	w23, [x21, #20]
 35c:	mov	w1, #0x21e                 	// #542
 360:	bl	0 <grub_real_dprintf>
 364:	mov	w0, #0x12                  	// #18
 368:	strb	w0, [sp, #88]
 36c:	mov	w4, #0x240000              	// #2359296
 370:	mov	x2, #0x6                   	// #6
 374:	ldr	w3, [x21, #20]
 378:	mov	w1, #0x0                   	// #0
 37c:	add	x0, sp, #0x5e
 380:	stur	w4, [sp, #90]
 384:	ubfiz	w3, w3, #5, #3
 388:	strb	w3, [sp, #89]
 38c:	bl	0 <grub_memset>
 390:	ldr	x5, [x21]
 394:	add	x2, sp, #0x58
 398:	add	x4, sp, #0x68
 39c:	mov	x3, #0x24                  	// #36
 3a0:	mov	x1, #0xc                   	// #12
 3a4:	mov	x0, x21
 3a8:	ldr	x5, [x5, #24]
 3ac:	blr	x5
 3b0:	mov	w19, w0
 3b4:	mov	x0, x21
 3b8:	bl	90 <grub_scsi_request_sense>
 3bc:	cbz	w0, 3cc <grub_scsi_open+0x29c>
 3c0:	adrp	x0, 0 <grub_scsi_iterate>
 3c4:	ldr	x0, [x0]
 3c8:	str	w19, [x0]
 3cc:	cbnz	w19, 4c8 <grub_scsi_open+0x398>
 3d0:	ldrb	w4, [sp, #104]
 3d4:	adrp	x0, 0 <grub_scsi_iterate>
 3d8:	mov	x2, x25
 3dc:	mov	w1, #0x228                 	// #552
 3e0:	and	w4, w4, #0x1f
 3e4:	strb	w4, [x21, #8]
 3e8:	ldr	x3, [x0]
 3ec:	mov	x0, x24
 3f0:	ldrb	w5, [sp, #105]
 3f4:	lsr	w5, w5, #7
 3f8:	str	w5, [x21, #24]
 3fc:	bl	0 <grub_real_dprintf>
 400:	ldrb	w0, [x21, #8]
 404:	cmp	w0, #0x0
 408:	ccmp	w0, #0x5, #0x4, ne  // ne = any
 40c:	b.ne	4f0 <grub_scsi_open+0x3c0>  // b.any
 410:	bl	0 <grub_get_time_ms>
 414:	add	x23, sp, #0x6e
 418:	mov	x1, #0x1388                	// #5000
 41c:	adrp	x26, 0 <grub_scsi_iterate>
 420:	add	x20, x0, x1
 424:	b	480 <grub_scsi_open+0x350>
 428:	strb	wzr, [sp, #104]
 42c:	ldr	w3, [x21, #20]
 430:	stur	wzr, [sp, #106]
 434:	ubfiz	w3, w3, #5, #3
 438:	strb	w3, [sp, #105]
 43c:	bl	0 <grub_memset>
 440:	ldr	x5, [x21]
 444:	add	x2, sp, #0x68
 448:	mov	x4, #0x0                   	// #0
 44c:	mov	x3, #0x0                   	// #0
 450:	mov	x1, #0xc                   	// #12
 454:	mov	x0, x21
 458:	ldr	x5, [x5, #24]
 45c:	blr	x5
 460:	mov	w19, w0
 464:	mov	x0, x21
 468:	bl	90 <grub_scsi_request_sense>
 46c:	cbz	w0, 478 <grub_scsi_open+0x348>
 470:	ldr	x0, [x26]
 474:	str	w19, [x0]
 478:	cmp	w19, #0xe
 47c:	b.ne	514 <grub_scsi_open+0x3e4>  // b.any
 480:	bl	0 <grub_get_time_ms>
 484:	mov	x3, x0
 488:	cmp	x3, x20
 48c:	mov	x0, x23
 490:	mov	x2, #0x6                   	// #6
 494:	mov	w1, #0x0                   	// #0
 498:	b.ls	428 <grub_scsi_open+0x2f8>  // b.plast
 49c:	mov	x0, x21
 4a0:	bl	0 <grub_free>
 4a4:	adrp	x3, 0 <grub_scsi_iterate>
 4a8:	mov	x2, x25
 4ac:	mov	x0, x24
 4b0:	mov	w1, #0x242                 	// #578
 4b4:	ldr	x3, [x3]
 4b8:	mov	w19, #0xe                   	// #14
 4bc:	bl	0 <grub_real_dprintf>
 4c0:	ldp	x25, x26, [sp, #64]
 4c4:	b	204 <grub_scsi_open+0xd4>
 4c8:	mov	x0, x21
 4cc:	bl	0 <grub_free>
 4d0:	adrp	x3, 0 <grub_scsi_iterate>
 4d4:	mov	x2, x25
 4d8:	mov	x0, x24
 4dc:	mov	w1, #0x224                 	// #548
 4e0:	ldr	x3, [x3]
 4e4:	bl	0 <grub_real_dprintf>
 4e8:	ldp	x25, x26, [sp, #64]
 4ec:	b	204 <grub_scsi_open+0xd4>
 4f0:	mov	x0, x21
 4f4:	bl	0 <grub_free>
 4f8:	adrp	x1, 0 <grub_scsi_iterate>
 4fc:	mov	w0, #0xc                   	// #12
 500:	ldr	x1, [x1]
 504:	bl	0 <grub_error>
 508:	mov	w19, w0
 50c:	ldp	x25, x26, [sp, #64]
 510:	b	204 <grub_scsi_open+0xd4>
 514:	mov	w0, #0x25                  	// #37
 518:	strb	w0, [sp, #104]
 51c:	adrp	x1, 0 <grub_scsi_iterate>
 520:	add	x4, sp, #0x58
 524:	ldr	w0, [x21, #20]
 528:	add	x2, sp, #0x68
 52c:	stur	xzr, [sp, #106]
 530:	mov	x3, #0x8                   	// #8
 534:	ldr	x20, [x1]
 538:	ubfiz	w0, w0, #5, #3
 53c:	strb	w0, [sp, #105]
 540:	mov	x1, #0xc                   	// #12
 544:	strh	wzr, [sp, #114]
 548:	mov	x0, x21
 54c:	ldr	x5, [x21]
 550:	str	wzr, [x20]
 554:	ldr	x5, [x5, #24]
 558:	blr	x5
 55c:	mov	w19, w0
 560:	mov	x0, x21
 564:	bl	90 <grub_scsi_request_sense>
 568:	cbz	w0, 570 <grub_scsi_open+0x440>
 56c:	str	w19, [x20]
 570:	cbnz	w19, 64c <grub_scsi_open+0x51c>
 574:	ldp	w0, w2, [sp, #88]
 578:	rev	w4, w0
 57c:	rev	w2, w2
 580:	str	x4, [x21, #32]
 584:	cmn	w0, #0x1
 588:	str	w2, [x21, #40]
 58c:	b.eq	674 <grub_scsi_open+0x544>  // b.none
 590:	sub	w1, w2, #0x1
 594:	add	x3, x4, #0x1
 598:	mov	w0, #0x1                   	// #1
 59c:	str	x3, [x22, #16]
 5a0:	str	w0, [x22, #28]
 5a4:	tst	w1, w2
 5a8:	ccmp	w2, #0x0, #0x4, eq  // eq = none
 5ac:	b.eq	628 <grub_scsi_open+0x4f8>  // b.none
 5b0:	str	wzr, [x22, #24]
 5b4:	cmp	w2, #0x1
 5b8:	b.eq	5d8 <grub_scsi_open+0x4a8>  // b.none
 5bc:	mov	w5, w0
 5c0:	lsl	w1, w5, w0
 5c4:	mov	w3, w0
 5c8:	cmp	w1, w2
 5cc:	add	w0, w0, #0x1
 5d0:	b.cc	5c0 <grub_scsi_open+0x490>  // b.lo, b.ul, b.last
 5d4:	str	w3, [x22, #24]
 5d8:	adrp	x0, 0 <grub_scsi_iterate>
 5dc:	mov	w5, w2
 5e0:	mov	w1, #0x273                 	// #627
 5e4:	mov	x2, x25
 5e8:	ldr	x3, [x0]
 5ec:	mov	x0, x24
 5f0:	bl	0 <grub_real_dprintf>
 5f4:	adrp	x0, 0 <grub_scsi_iterate>
 5f8:	mov	x2, x25
 5fc:	ldr	x4, [x22, #16]
 600:	mov	w1, #0x275                 	// #629
 604:	ldr	x3, [x0]
 608:	mov	x0, x24
 60c:	bl	0 <grub_real_dprintf>
 610:	ldp	x25, x26, [sp, #64]
 614:	b	204 <grub_scsi_open+0xd4>
 618:	mov	w20, #0x1                   	// #1
 61c:	b	2c8 <grub_scsi_open+0x198>
 620:	mov	w20, #0x2                   	// #2
 624:	b	2c8 <grub_scsi_open+0x198>
 628:	adrp	x1, 0 <grub_scsi_iterate>
 62c:	mov	w0, #0x1d                  	// #29
 630:	ldr	x1, [x1]
 634:	bl	0 <grub_error>
 638:	mov	x0, x21
 63c:	bl	0 <grub_free>
 640:	ldr	w19, [x20]
 644:	ldp	x25, x26, [sp, #64]
 648:	b	204 <grub_scsi_open+0xd4>
 64c:	mov	x0, x21
 650:	bl	0 <grub_free>
 654:	adrp	x3, 0 <grub_scsi_iterate>
 658:	mov	x2, x25
 65c:	mov	x0, x24
 660:	mov	w1, #0x251                 	// #593
 664:	ldr	x3, [x3]
 668:	bl	0 <grub_real_dprintf>
 66c:	ldp	x25, x26, [sp, #64]
 670:	b	204 <grub_scsi_open+0xd4>
 674:	mov	w0, #0xffffff9e            	// #-98
 678:	strb	w0, [sp, #88]
 67c:	mov	w5, #0x20000000            	// #536870912
 680:	add	x4, sp, #0x68
 684:	ldr	w0, [x21, #20]
 688:	add	x2, sp, #0x58
 68c:	strh	wzr, [sp, #102]
 690:	mov	x3, #0x20                  	// #32
 694:	stur	w5, [sp, #98]
 698:	mov	x1, #0x10                  	// #16
 69c:	lsl	w0, w0, #5
 6a0:	stur	xzr, [sp, #90]
 6a4:	orr	w0, w0, #0x10
 6a8:	strb	w0, [sp, #89]
 6ac:	mov	x0, x21
 6b0:	ldr	x5, [x21]
 6b4:	ldr	x5, [x5, #24]
 6b8:	blr	x5
 6bc:	mov	w23, w0
 6c0:	mov	x0, x21
 6c4:	bl	90 <grub_scsi_request_sense>
 6c8:	cbz	w0, 6d0 <grub_scsi_open+0x5a0>
 6cc:	str	w23, [x20]
 6d0:	cbnz	w23, 6f0 <grub_scsi_open+0x5c0>
 6d4:	ldr	x4, [sp, #104]
 6d8:	ldr	w2, [sp, #112]
 6dc:	rev	x4, x4
 6e0:	str	x4, [x21, #32]
 6e4:	rev	w2, w2
 6e8:	str	w2, [x21, #40]
 6ec:	b	590 <grub_scsi_open+0x460>
 6f0:	mov	x0, x21
 6f4:	bl	0 <grub_free>
 6f8:	adrp	x1, 0 <grub_scsi_iterate>
 6fc:	mov	x2, x25
 700:	mov	x0, x24
 704:	mov	w19, w23
 708:	ldr	x3, [x1]
 70c:	mov	w1, #0x25b                 	// #603
 710:	bl	0 <grub_real_dprintf>
 714:	ldp	x25, x26, [sp, #64]
 718:	b	204 <grub_scsi_open+0xd4>
 71c:	nop
	...

00000000000007a0 <grub_scsi_write>:
 7a0:	stp	x29, x30, [sp, #-48]!
 7a4:	mov	x29, sp
 7a8:	stp	x19, x20, [sp, #16]
 7ac:	ldr	x19, [x0, #64]
 7b0:	ldrb	w0, [x19, #8]
 7b4:	cmp	w0, #0x5
 7b8:	b.eq	884 <grub_scsi_write+0xe4>  // b.none
 7bc:	mov	w20, #0x0                   	// #0
 7c0:	cbnz	w0, 834 <grub_scsi_write+0x94>
 7c4:	mov	x4, x3
 7c8:	ldr	w3, [x19, #40]
 7cc:	ldr	x5, [x19]
 7d0:	cmp	xzr, x1, lsr #32
 7d4:	ldr	w0, [x19, #20]
 7d8:	mul	x3, x3, x2
 7dc:	ldr	x7, [x5, #32]
 7e0:	ubfiz	w0, w0, #5, #3
 7e4:	b.eq	844 <grub_scsi_write+0xa4>  // b.none
 7e8:	rev	x6, x1
 7ec:	rev	w5, w2
 7f0:	mov	w1, #0xffffff8a            	// #-118
 7f4:	add	x2, sp, #0x20
 7f8:	strb	w0, [sp, #33]
 7fc:	mov	x0, x19
 800:	strb	w1, [sp, #32]
 804:	mov	x1, #0x10                  	// #16
 808:	stur	x6, [sp, #34]
 80c:	stur	w5, [sp, #42]
 810:	strh	wzr, [sp, #46]
 814:	blr	x7
 818:	mov	w20, w0
 81c:	mov	x0, x19
 820:	bl	90 <grub_scsi_request_sense>
 824:	cbz	w0, 834 <grub_scsi_write+0x94>
 828:	adrp	x0, 0 <grub_scsi_iterate>
 82c:	ldr	x0, [x0]
 830:	str	w20, [x0]
 834:	mov	w0, w20
 838:	ldp	x19, x20, [sp, #16]
 83c:	ldp	x29, x30, [sp], #48
 840:	ret
 844:	ubfiz	w6, w2, #8, #16
 848:	rev	w5, w1
 84c:	ubfx	w2, w2, #8, #8
 850:	mov	w1, #0x2a                  	// #42
 854:	orr	w6, w6, w2
 858:	add	x2, sp, #0x20
 85c:	strb	w1, [sp, #32]
 860:	mov	x1, #0xc                   	// #12
 864:	strb	w0, [sp, #33]
 868:	mov	x0, x19
 86c:	stur	w5, [sp, #34]
 870:	strb	wzr, [sp, #38]
 874:	sturh	w6, [sp, #39]
 878:	strb	wzr, [sp, #41]
 87c:	strh	wzr, [sp, #42]
 880:	b	814 <grub_scsi_write+0x74>
 884:	adrp	x1, 0 <grub_scsi_iterate>
 888:	mov	w0, #0x1d                  	// #29
 88c:	ldr	x1, [x1]
 890:	bl	0 <grub_error>
 894:	mov	w20, w0
 898:	mov	w0, w20
 89c:	ldp	x19, x20, [sp, #16]
 8a0:	ldp	x29, x30, [sp], #48
 8a4:	ret
	...

00000000000008b8 <grub_scsi_read16.isra.0>:
 8b8:	stp	x29, x30, [sp, #-48]!
 8bc:	mov	x4, x3
 8c0:	mov	x5, x2
 8c4:	mov	x29, sp
 8c8:	ldr	w3, [x0, #40]
 8cc:	rev	x6, x1
 8d0:	ldr	x8, [x0]
 8d4:	rev	w7, w2
 8d8:	ldr	w1, [x0, #20]
 8dc:	mov	w9, #0xffffff88            	// #-120
 8e0:	mul	x3, x3, x5
 8e4:	add	x2, sp, #0x20
 8e8:	ldr	x5, [x8, #24]
 8ec:	ubfiz	w1, w1, #5, #3
 8f0:	stp	x19, x20, [sp, #16]
 8f4:	mov	x19, x0
 8f8:	strb	w9, [sp, #32]
 8fc:	strb	w1, [sp, #33]
 900:	mov	x1, #0x10                  	// #16
 904:	stur	x6, [sp, #34]
 908:	stur	w7, [sp, #42]
 90c:	strh	wzr, [sp, #46]
 910:	blr	x5
 914:	mov	w20, w0
 918:	mov	x0, x19
 91c:	bl	90 <grub_scsi_request_sense>
 920:	cbz	w0, 930 <grub_scsi_read16.isra.0+0x78>
 924:	adrp	x0, 0 <grub_scsi_iterate>
 928:	ldr	x0, [x0]
 92c:	str	w20, [x0]
 930:	mov	w0, w20
 934:	ldp	x19, x20, [sp, #16]
 938:	ldp	x29, x30, [sp], #48
 93c:	ret
	...

0000000000000948 <grub_scsi_read>:
 948:	stp	x29, x30, [sp, #-48]!
 94c:	mov	x6, x2
 950:	mov	x4, x3
 954:	mov	x29, sp
 958:	stp	x19, x20, [sp, #16]
 95c:	ldr	x19, [x0, #64]
 960:	ldrb	w0, [x19, #8]
 964:	cbz	w0, 998 <grub_scsi_read+0x50>
 968:	cmp	w0, #0x5
 96c:	mov	w20, #0x0                   	// #0
 970:	b.ne	988 <grub_scsi_read+0x40>  // b.any
 974:	cmp	xzr, x1, lsr #32
 978:	b.eq	a24 <grub_scsi_read+0xdc>  // b.none
 97c:	mov	x0, x19
 980:	bl	8b8 <grub_scsi_read16.isra.0>
 984:	mov	w20, w0
 988:	mov	w0, w20
 98c:	ldp	x19, x20, [sp, #16]
 990:	ldp	x29, x30, [sp], #48
 994:	ret
 998:	cmp	xzr, x1, lsr #32
 99c:	b.ne	97c <grub_scsi_read+0x34>  // b.any
 9a0:	mov	w0, #0x28                  	// #40
 9a4:	strb	w0, [sp, #32]
 9a8:	ubfx	w3, w2, #8, #8
 9ac:	ubfiz	w0, w2, #8, #16
 9b0:	ldr	w2, [x19, #20]
 9b4:	orr	w0, w0, w3
 9b8:	strb	wzr, [sp, #38]
 9bc:	rev	w1, w1
 9c0:	strb	wzr, [sp, #41]
 9c4:	ubfiz	w2, w2, #5, #3
 9c8:	strb	w2, [sp, #33]
 9cc:	add	x2, sp, #0x20
 9d0:	ldr	w3, [x19, #40]
 9d4:	ldr	x5, [x19]
 9d8:	sturh	w0, [sp, #39]
 9dc:	mov	x0, x19
 9e0:	stur	w1, [sp, #34]
 9e4:	mov	x1, #0xc                   	// #12
 9e8:	strh	wzr, [sp, #42]
 9ec:	mul	x3, x3, x6
 9f0:	ldr	x5, [x5, #24]
 9f4:	blr	x5
 9f8:	mov	w20, w0
 9fc:	mov	x0, x19
 a00:	bl	90 <grub_scsi_request_sense>
 a04:	cbz	w0, 988 <grub_scsi_read+0x40>
 a08:	adrp	x0, 0 <grub_scsi_iterate>
 a0c:	ldr	x0, [x0]
 a10:	str	w20, [x0]
 a14:	mov	w0, w20
 a18:	ldp	x19, x20, [sp, #16]
 a1c:	ldp	x29, x30, [sp], #48
 a20:	ret
 a24:	mov	w0, #0xffffffa8            	// #-88
 a28:	strb	w0, [sp, #32]
 a2c:	rev	w3, w2
 a30:	rev	w1, w1
 a34:	ldr	w0, [x19, #20]
 a38:	add	x2, sp, #0x20
 a3c:	strh	wzr, [sp, #42]
 a40:	ubfiz	w0, w0, #5, #3
 a44:	strb	w0, [sp, #33]
 a48:	mov	x0, x19
 a4c:	ldr	x5, [x19]
 a50:	stur	w1, [sp, #34]
 a54:	mov	x1, #0xc                   	// #12
 a58:	stur	w3, [sp, #38]
 a5c:	ldr	w3, [x19, #40]
 a60:	b	9ec <grub_scsi_read+0xa4>
 a64:	nop
	...

0000000000000a70 <scsi_iterate>:
 a70:	stp	x29, x30, [sp, #-80]!
 a74:	cmp	w2, #0x1
 a78:	mov	w4, w0
 a7c:	mov	x29, sp
 a80:	stp	x19, x20, [sp, #16]
 a84:	stp	x21, x22, [sp, #32]
 a88:	mov	x22, x3
 a8c:	stp	x23, x24, [sp, #48]
 a90:	mov	w24, w1
 a94:	b.eq	b4c <scsi_iterate+0xdc>  // b.none
 a98:	cmp	w2, #0x0
 a9c:	b.le	b30 <scsi_iterate+0xc0>
 aa0:	adrp	x3, 0 <grub_scsi_iterate>
 aa4:	stp	x25, x26, [sp, #64]
 aa8:	sbfiz	x1, x4, #2, #32
 aac:	ldr	x25, [x3]
 ab0:	adrp	x0, 0 <grub_scsi_iterate>
 ab4:	add	x4, x1, w4, sxtw
 ab8:	add	w23, w2, #0x61
 abc:	ldr	x26, [x0]
 ac0:	add	x25, x25, x4
 ac4:	mov	w20, #0x61                  	// #97
 ac8:	b	aec <scsi_iterate+0x7c>
 acc:	ldp	x2, x1, [x22]
 ad0:	blr	x2
 ad4:	mov	w21, w0
 ad8:	mov	x0, x19
 adc:	bl	0 <grub_free>
 ae0:	cbnz	w21, b0c <scsi_iterate+0x9c>
 ae4:	cmp	w20, w23
 ae8:	b.eq	b2c <scsi_iterate+0xbc>  // b.none
 aec:	mov	w3, w20
 af0:	mov	w2, w24
 af4:	mov	x1, x25
 af8:	mov	x0, x26
 afc:	add	w20, w20, #0x1
 b00:	bl	0 <grub_xasprintf>
 b04:	mov	x19, x0
 b08:	cbnz	x0, acc <scsi_iterate+0x5c>
 b0c:	ldp	x25, x26, [sp, #64]
 b10:	mov	w19, #0x1                   	// #1
 b14:	mov	w0, w19
 b18:	ldp	x19, x20, [sp, #16]
 b1c:	ldp	x21, x22, [sp, #32]
 b20:	ldp	x23, x24, [sp, #48]
 b24:	ldp	x29, x30, [sp], #80
 b28:	ret
 b2c:	ldp	x25, x26, [sp, #64]
 b30:	mov	w19, #0x0                   	// #0
 b34:	mov	w0, w19
 b38:	ldp	x19, x20, [sp, #16]
 b3c:	ldp	x21, x22, [sp, #32]
 b40:	ldp	x23, x24, [sp, #48]
 b44:	ldp	x29, x30, [sp], #80
 b48:	ret
 b4c:	adrp	x0, 0 <grub_scsi_iterate>
 b50:	adrp	x1, 0 <grub_scsi_iterate>
 b54:	sbfiz	x3, x4, #2, #32
 b58:	mov	w2, w24
 b5c:	ldr	x0, [x0]
 b60:	add	x4, x3, w4, sxtw
 b64:	ldr	x1, [x1]
 b68:	add	x1, x1, x4
 b6c:	bl	0 <grub_xasprintf>
 b70:	mov	x20, x0
 b74:	cbz	x0, b10 <scsi_iterate+0xa0>
 b78:	ldp	x2, x1, [x22]
 b7c:	blr	x2
 b80:	mov	w19, w0
 b84:	mov	x0, x20
 b88:	bl	0 <grub_free>
 b8c:	mov	w0, w19
 b90:	ldp	x19, x20, [sp, #16]
 b94:	ldp	x21, x22, [sp, #32]
 b98:	ldp	x23, x24, [sp, #48]
 b9c:	ldp	x29, x30, [sp], #80
 ba0:	ret
 ba4:	nop
	...

0000000000000bc0 <grub_scsi_dev_register>:
 bc0:	adrp	x1, 0 <grub_scsi_iterate>
 bc4:	ldr	x1, [x1]
 bc8:	ldr	x2, [x1]
 bcc:	str	x0, [x1]
 bd0:	str	x2, [x0, #40]
 bd4:	ret
	...

0000000000000be0 <grub_scsi_dev_unregister>:
 be0:	adrp	x1, 0 <grub_scsi_iterate>
 be4:	ldr	x2, [x1]
 be8:	ldr	x1, [x2]
 bec:	cbz	x1, c10 <grub_scsi_dev_unregister+0x30>
 bf0:	cmp	x1, x0
 bf4:	b.ne	c00 <grub_scsi_dev_unregister+0x20>  // b.any
 bf8:	b	c18 <grub_scsi_dev_unregister+0x38>
 bfc:	b.eq	c14 <grub_scsi_dev_unregister+0x34>  // b.none
 c00:	mov	x2, x1
 c04:	ldr	x1, [x1, #40]
 c08:	cmp	x0, x1
 c0c:	cbnz	x1, bfc <grub_scsi_dev_unregister+0x1c>
 c10:	ret
 c14:	add	x2, x2, #0x28
 c18:	ldr	x0, [x1, #40]
 c1c:	str	x0, [x2]
 c20:	ret
 c24:	nop
	...

0000000000000c30 <grub_mod_init>:
 c30:	adrp	x0, 0 <grub_scsi_iterate>
 c34:	ldr	x0, [x0]
 c38:	b	0 <grub_disk_dev_register>
 c3c:	nop
	...

0000000000000c48 <grub_mod_fini>:
 c48:	adrp	x0, 0 <grub_scsi_iterate>
 c4c:	ldr	x0, [x0]
 c50:	b	0 <grub_disk_dev_unregister>
 c54:	nop
	...
