
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//systemd-remount-fs_clang_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000401b08 <_init>:
  401b08:	stp	x29, x30, [sp, #-16]!
  401b0c:	mov	x29, sp
  401b10:	bl	402050 <call_weak_fn>
  401b14:	ldp	x29, x30, [sp], #16
  401b18:	ret

Disassembly of section .plt:

0000000000401b20 <__libc_start_main@plt-0x20>:
  401b20:	stp	x16, x30, [sp, #-16]!
  401b24:	adrp	x16, 41f000 <__FRAME_END__+0x195b0>
  401b28:	ldr	x17, [x16, #3480]
  401b2c:	add	x16, x16, #0xd98
  401b30:	br	x17
  401b34:	nop
  401b38:	nop
  401b3c:	nop

0000000000401b40 <__libc_start_main@plt>:
  401b40:	adrp	x16, 41f000 <__FRAME_END__+0x195b0>
  401b44:	ldr	x17, [x16, #3488]
  401b48:	add	x16, x16, #0xda0
  401b4c:	br	x17

0000000000401b50 <abort@plt>:
  401b50:	adrp	x16, 41f000 <__FRAME_END__+0x195b0>
  401b54:	ldr	x17, [x16, #3496]
  401b58:	add	x16, x16, #0xda8
  401b5c:	br	x17

0000000000401b60 <__gmon_start__@plt>:
  401b60:	adrp	x16, 41f000 <__FRAME_END__+0x195b0>
  401b64:	ldr	x17, [x16, #3504]
  401b68:	add	x16, x16, #0xdb0
  401b6c:	br	x17

0000000000401b70 <ask_password_agent_close@plt>:
  401b70:	adrp	x16, 41f000 <__FRAME_END__+0x195b0>
  401b74:	ldr	x17, [x16, #3512]
  401b78:	add	x16, x16, #0xdb8
  401b7c:	br	x17

0000000000401b80 <polkit_agent_close@plt>:
  401b80:	adrp	x16, 41f000 <__FRAME_END__+0x195b0>
  401b84:	ldr	x17, [x16, #3520]
  401b88:	add	x16, x16, #0xdc0
  401b8c:	br	x17

0000000000401b90 <pager_close@plt>:
  401b90:	adrp	x16, 41f000 <__FRAME_END__+0x195b0>
  401b94:	ldr	x17, [x16, #3528]
  401b98:	add	x16, x16, #0xdc8
  401b9c:	br	x17

0000000000401ba0 <mac_selinux_finish@plt>:
  401ba0:	adrp	x16, 41f000 <__FRAME_END__+0x195b0>
  401ba4:	ldr	x17, [x16, #3536]
  401ba8:	add	x16, x16, #0xdd0
  401bac:	br	x17

0000000000401bb0 <log_setup_service@plt>:
  401bb0:	adrp	x16, 41f000 <__FRAME_END__+0x195b0>
  401bb4:	ldr	x17, [x16, #3544]
  401bb8:	add	x16, x16, #0xdd8
  401bbc:	br	x17

0000000000401bc0 <log_get_max_level_realm@plt>:
  401bc0:	adrp	x16, 41f000 <__FRAME_END__+0x195b0>
  401bc4:	ldr	x17, [x16, #3552]
  401bc8:	add	x16, x16, #0xde0
  401bcc:	br	x17

0000000000401bd0 <log_internal_realm@plt>:
  401bd0:	adrp	x16, 41f000 <__FRAME_END__+0x195b0>
  401bd4:	ldr	x17, [x16, #3560]
  401bd8:	add	x16, x16, #0xde8
  401bdc:	br	x17

0000000000401be0 <abs@plt>:
  401be0:	adrp	x16, 41f000 <__FRAME_END__+0x195b0>
  401be4:	ldr	x17, [x16, #3568]
  401be8:	add	x16, x16, #0xdf0
  401bec:	br	x17

0000000000401bf0 <umask@plt>:
  401bf0:	adrp	x16, 41f000 <__FRAME_END__+0x195b0>
  401bf4:	ldr	x17, [x16, #3576]
  401bf8:	add	x16, x16, #0xdf8
  401bfc:	br	x17

0000000000401c00 <setmntent@plt>:
  401c00:	adrp	x16, 41f000 <__FRAME_END__+0x195b0>
  401c04:	ldr	x17, [x16, #3584]
  401c08:	add	x16, x16, #0xe00
  401c0c:	br	x17

0000000000401c10 <__errno_location@plt>:
  401c10:	adrp	x16, 41f000 <__FRAME_END__+0x195b0>
  401c14:	ldr	x17, [x16, #3592]
  401c18:	add	x16, x16, #0xe08
  401c1c:	br	x17

0000000000401c20 <getmntent@plt>:
  401c20:	adrp	x16, 41f000 <__FRAME_END__+0x195b0>
  401c24:	ldr	x17, [x16, #3600]
  401c28:	add	x16, x16, #0xe10
  401c2c:	br	x17

0000000000401c30 <path_equal@plt>:
  401c30:	adrp	x16, 41f000 <__FRAME_END__+0x195b0>
  401c34:	ldr	x17, [x16, #3608]
  401c38:	add	x16, x16, #0xe18
  401c3c:	br	x17

0000000000401c40 <getenv_bool@plt>:
  401c40:	adrp	x16, 41f000 <__FRAME_END__+0x195b0>
  401c44:	ldr	x17, [x16, #3616]
  401c48:	add	x16, x16, #0xe20
  401c4c:	br	x17

0000000000401c50 <memset@plt>:
  401c50:	adrp	x16, 41f000 <__FRAME_END__+0x195b0>
  401c54:	ldr	x17, [x16, #3624]
  401c58:	add	x16, x16, #0xe28
  401c5c:	br	x17

0000000000401c60 <waitid@plt>:
  401c60:	adrp	x16, 41f000 <__FRAME_END__+0x195b0>
  401c64:	ldr	x17, [x16, #3632]
  401c68:	add	x16, x16, #0xe30
  401c6c:	br	x17

0000000000401c70 <is_clean_exit@plt>:
  401c70:	adrp	x16, 41f000 <__FRAME_END__+0x195b0>
  401c74:	ldr	x17, [x16, #3640]
  401c78:	add	x16, x16, #0xe38
  401c7c:	br	x17

0000000000401c80 <signal_to_string@plt>:
  401c80:	adrp	x16, 41f000 <__FRAME_END__+0x195b0>
  401c84:	ldr	x17, [x16, #3648]
  401c88:	add	x16, x16, #0xe40
  401c8c:	br	x17

0000000000401c90 <endmntent@plt>:
  401c90:	adrp	x16, 41f000 <__FRAME_END__+0x195b0>
  401c94:	ldr	x17, [x16, #3656]
  401c98:	add	x16, x16, #0xe48
  401c9c:	br	x17

0000000000401ca0 <secure_getenv@plt>:
  401ca0:	adrp	x16, 41f000 <__FRAME_END__+0x195b0>
  401ca4:	ldr	x17, [x16, #3664]
  401ca8:	add	x16, x16, #0xe50
  401cac:	br	x17

0000000000401cb0 <execv@plt>:
  401cb0:	adrp	x16, 41f000 <__FRAME_END__+0x195b0>
  401cb4:	ldr	x17, [x16, #3672]
  401cb8:	add	x16, x16, #0xe58
  401cbc:	br	x17

0000000000401cc0 <_exit@plt>:
  401cc0:	adrp	x16, 41f000 <__FRAME_END__+0x195b0>
  401cc4:	ldr	x17, [x16, #3680]
  401cc8:	add	x16, x16, #0xe60
  401ccc:	br	x17

0000000000401cd0 <free@plt>:
  401cd0:	adrp	x16, 41f000 <__FRAME_END__+0x195b0>
  401cd4:	ldr	x17, [x16, #3688]
  401cd8:	add	x16, x16, #0xe68
  401cdc:	br	x17

0000000000401ce0 <internal_hashmap_remove@plt>:
  401ce0:	adrp	x16, 41f000 <__FRAME_END__+0x195b0>
  401ce4:	ldr	x17, [x16, #3696]
  401ce8:	add	x16, x16, #0xe70
  401cec:	br	x17

0000000000401cf0 <internal_hashmap_free@plt>:
  401cf0:	adrp	x16, 41f000 <__FRAME_END__+0x195b0>
  401cf4:	ldr	x17, [x16, #3704]
  401cf8:	add	x16, x16, #0xe78
  401cfc:	br	x17

0000000000401d00 <safe_fork_full@plt>:
  401d00:	adrp	x16, 41f000 <__FRAME_END__+0x195b0>
  401d04:	ldr	x17, [x16, #3712]
  401d08:	add	x16, x16, #0xe80
  401d0c:	br	x17

0000000000401d10 <log_assert_failed_realm@plt>:
  401d10:	adrp	x16, 41f000 <__FRAME_END__+0x195b0>
  401d14:	ldr	x17, [x16, #3720]
  401d18:	add	x16, x16, #0xe88
  401d1c:	br	x17

0000000000401d20 <internal_hashmap_ensure_allocated@plt>:
  401d20:	adrp	x16, 41f000 <__FRAME_END__+0x195b0>
  401d24:	ldr	x17, [x16, #3728]
  401d28:	add	x16, x16, #0xe90
  401d2c:	br	x17

0000000000401d30 <log_oom_internal@plt>:
  401d30:	adrp	x16, 41f000 <__FRAME_END__+0x195b0>
  401d34:	ldr	x17, [x16, #3736]
  401d38:	add	x16, x16, #0xe98
  401d3c:	br	x17

0000000000401d40 <strdup@plt>:
  401d40:	adrp	x16, 41f000 <__FRAME_END__+0x195b0>
  401d44:	ldr	x17, [x16, #3744]
  401d48:	add	x16, x16, #0xea0
  401d4c:	br	x17

0000000000401d50 <hashmap_put@plt>:
  401d50:	adrp	x16, 41f000 <__FRAME_END__+0x195b0>
  401d54:	ldr	x17, [x16, #3752]
  401d58:	add	x16, x16, #0xea8
  401d5c:	br	x17

0000000000401d60 <internal_hashmap_size@plt>:
  401d60:	adrp	x16, 41f000 <__FRAME_END__+0x195b0>
  401d64:	ldr	x17, [x16, #3760]
  401d68:	add	x16, x16, #0xeb0
  401d6c:	br	x17

0000000000401d70 <path_startswith@plt>:
  401d70:	adrp	x16, 41f000 <__FRAME_END__+0x195b0>
  401d74:	ldr	x17, [x16, #3768]
  401d78:	add	x16, x16, #0xeb8
  401d7c:	br	x17

0000000000401d80 <strchr@plt>:
  401d80:	adrp	x16, 41f000 <__FRAME_END__+0x195b0>
  401d84:	ldr	x17, [x16, #3776]
  401d88:	add	x16, x16, #0xec0
  401d8c:	br	x17

0000000000401d90 <cg_is_legacy_wanted@plt>:
  401d90:	adrp	x16, 41f000 <__FRAME_END__+0x195b0>
  401d94:	ldr	x17, [x16, #3784]
  401d98:	add	x16, x16, #0xec8
  401d9c:	br	x17

0000000000401da0 <cg_kernel_controllers@plt>:
  401da0:	adrp	x16, 41f000 <__FRAME_END__+0x195b0>
  401da4:	ldr	x17, [x16, #3792]
  401da8:	add	x16, x16, #0xed0
  401dac:	br	x17

0000000000401db0 <strcmp@plt>:
  401db0:	adrp	x16, 41f000 <__FRAME_END__+0x195b0>
  401db4:	ldr	x17, [x16, #3800]
  401db8:	add	x16, x16, #0xed8
  401dbc:	br	x17

0000000000401dc0 <strjoin_real@plt>:
  401dc0:	adrp	x16, 41f000 <__FRAME_END__+0x195b0>
  401dc4:	ldr	x17, [x16, #3808]
  401dc8:	add	x16, x16, #0xee0
  401dcc:	br	x17

0000000000401dd0 <path_join_internal@plt>:
  401dd0:	adrp	x16, 41f000 <__FRAME_END__+0x195b0>
  401dd4:	ldr	x17, [x16, #3816]
  401dd8:	add	x16, x16, #0xee8
  401ddc:	br	x17

0000000000401de0 <mount@plt>:
  401de0:	adrp	x16, 41f000 <__FRAME_END__+0x195b0>
  401de4:	ldr	x17, [x16, #3824]
  401de8:	add	x16, x16, #0xef0
  401dec:	br	x17

0000000000401df0 <internal_hashmap_first_key_and_value@plt>:
  401df0:	adrp	x16, 41f000 <__FRAME_END__+0x195b0>
  401df4:	ldr	x17, [x16, #3832]
  401df8:	add	x16, x16, #0xef8
  401dfc:	br	x17

0000000000401e00 <label_fix@plt>:
  401e00:	adrp	x16, 41f000 <__FRAME_END__+0x195b0>
  401e04:	ldr	x17, [x16, #3840]
  401e08:	add	x16, x16, #0xf00
  401e0c:	br	x17

0000000000401e10 <path_is_mount_point@plt>:
  401e10:	adrp	x16, 41f000 <__FRAME_END__+0x195b0>
  401e14:	ldr	x17, [x16, #3848]
  401e18:	add	x16, x16, #0xf08
  401e1c:	br	x17

0000000000401e20 <detect_container@plt>:
  401e20:	adrp	x16, 41f000 <__FRAME_END__+0x195b0>
  401e24:	ldr	x17, [x16, #3856]
  401e28:	add	x16, x16, #0xf10
  401e2c:	br	x17

0000000000401e30 <mkdir_p_label@plt>:
  401e30:	adrp	x16, 41f000 <__FRAME_END__+0x195b0>
  401e34:	ldr	x17, [x16, #3864]
  401e38:	add	x16, x16, #0xf18
  401e3c:	br	x17

0000000000401e40 <mkdir_p@plt>:
  401e40:	adrp	x16, 41f000 <__FRAME_END__+0x195b0>
  401e44:	ldr	x17, [x16, #3872]
  401e48:	add	x16, x16, #0xf20
  401e4c:	br	x17

0000000000401e50 <access@plt>:
  401e50:	adrp	x16, 41f000 <__FRAME_END__+0x195b0>
  401e54:	ldr	x17, [x16, #3880]
  401e58:	add	x16, x16, #0xf28
  401e5c:	br	x17

0000000000401e60 <umount@plt>:
  401e60:	adrp	x16, 41f000 <__FRAME_END__+0x195b0>
  401e64:	ldr	x17, [x16, #3888]
  401e68:	add	x16, x16, #0xf30
  401e6c:	br	x17

0000000000401e70 <rmdir@plt>:
  401e70:	adrp	x16, 41f000 <__FRAME_END__+0x195b0>
  401e74:	ldr	x17, [x16, #3896]
  401e78:	add	x16, x16, #0xf38
  401e7c:	br	x17

0000000000401e80 <strlen@plt>:
  401e80:	adrp	x16, 41f000 <__FRAME_END__+0x195b0>
  401e84:	ldr	x17, [x16, #3904]
  401e88:	add	x16, x16, #0xf40
  401e8c:	br	x17

0000000000401e90 <stpcpy@plt>:
  401e90:	adrp	x16, 41f000 <__FRAME_END__+0x195b0>
  401e94:	ldr	x17, [x16, #3912]
  401e98:	add	x16, x16, #0xf48
  401e9c:	br	x17

0000000000401ea0 <symlink_idempotent@plt>:
  401ea0:	adrp	x16, 41f000 <__FRAME_END__+0x195b0>
  401ea4:	ldr	x17, [x16, #3920]
  401ea8:	add	x16, x16, #0xf50
  401eac:	br	x17

0000000000401eb0 <now@plt>:
  401eb0:	adrp	x16, 41f000 <__FRAME_END__+0x195b0>
  401eb4:	ldr	x17, [x16, #3928]
  401eb8:	add	x16, x16, #0xf58
  401ebc:	br	x17

0000000000401ec0 <nftw64@plt>:
  401ec0:	adrp	x16, 41f000 <__FRAME_END__+0x195b0>
  401ec4:	ldr	x17, [x16, #3936]
  401ec8:	add	x16, x16, #0xf60
  401ecc:	br	x17

0000000000401ed0 <format_timespan@plt>:
  401ed0:	adrp	x16, 41f000 <__FRAME_END__+0x195b0>
  401ed4:	ldr	x17, [x16, #3944]
  401ed8:	add	x16, x16, #0xf68
  401edc:	br	x17

0000000000401ee0 <dev_setup@plt>:
  401ee0:	adrp	x16, 41f000 <__FRAME_END__+0x195b0>
  401ee4:	ldr	x17, [x16, #3952]
  401ee8:	add	x16, x16, #0xf70
  401eec:	br	x17

0000000000401ef0 <mkdir_label@plt>:
  401ef0:	adrp	x16, 41f000 <__FRAME_END__+0x195b0>
  401ef4:	ldr	x17, [x16, #3960]
  401ef8:	add	x16, x16, #0xf78
  401efc:	br	x17

0000000000401f00 <make_inaccessible_nodes@plt>:
  401f00:	adrp	x16, 41f000 <__FRAME_END__+0x195b0>
  401f04:	ldr	x17, [x16, #3968]
  401f08:	add	x16, x16, #0xf80
  401f0c:	br	x17

0000000000401f10 <cg_all_unified@plt>:
  401f10:	adrp	x16, 41f000 <__FRAME_END__+0x195b0>
  401f14:	ldr	x17, [x16, #3976]
  401f18:	add	x16, x16, #0xf88
  401f1c:	br	x17

0000000000401f20 <statfs64@plt>:
  401f20:	adrp	x16, 41f000 <__FRAME_END__+0x195b0>
  401f24:	ldr	x17, [x16, #3984]
  401f28:	add	x16, x16, #0xf90
  401f2c:	br	x17

0000000000401f30 <conf_files_list@plt>:
  401f30:	adrp	x16, 41f000 <__FRAME_END__+0x195b0>
  401f34:	ldr	x17, [x16, #3992]
  401f38:	add	x16, x16, #0xf98
  401f3c:	br	x17

0000000000401f40 <fopen64@plt>:
  401f40:	adrp	x16, 41f000 <__FRAME_END__+0x195b0>
  401f44:	ldr	x17, [x16, #4000]
  401f48:	add	x16, x16, #0xfa0
  401f4c:	br	x17

0000000000401f50 <path_simplify@plt>:
  401f50:	adrp	x16, 41f000 <__FRAME_END__+0x195b0>
  401f54:	ldr	x17, [x16, #4008]
  401f58:	add	x16, x16, #0xfa8
  401f5c:	br	x17

0000000000401f60 <path_is_normalized@plt>:
  401f60:	adrp	x16, 41f000 <__FRAME_END__+0x195b0>
  401f64:	ldr	x17, [x16, #4016]
  401f68:	add	x16, x16, #0xfb0
  401f6c:	br	x17

0000000000401f70 <path_is_absolute@plt>:
  401f70:	adrp	x16, 41f000 <__FRAME_END__+0x195b0>
  401f74:	ldr	x17, [x16, #4024]
  401f78:	add	x16, x16, #0xfb8
  401f7c:	br	x17

0000000000401f80 <unlink@plt>:
  401f80:	adrp	x16, 41f000 <__FRAME_END__+0x195b0>
  401f84:	ldr	x17, [x16, #4032]
  401f88:	add	x16, x16, #0xfc0
  401f8c:	br	x17

0000000000401f90 <strv_free@plt>:
  401f90:	adrp	x16, 41f000 <__FRAME_END__+0x195b0>
  401f94:	ldr	x17, [x16, #4040]
  401f98:	add	x16, x16, #0xfc8
  401f9c:	br	x17

0000000000401fa0 <safe_fclose@plt>:
  401fa0:	adrp	x16, 41f000 <__FRAME_END__+0x195b0>
  401fa4:	ldr	x17, [x16, #4048]
  401fa8:	add	x16, x16, #0xfd0
  401fac:	br	x17

0000000000401fb0 <read_line_full@plt>:
  401fb0:	adrp	x16, 41f000 <__FRAME_END__+0x195b0>
  401fb4:	ldr	x17, [x16, #4056]
  401fb8:	add	x16, x16, #0xfd8
  401fbc:	br	x17

0000000000401fc0 <mac_smack_use@plt>:
  401fc0:	adrp	x16, 41f000 <__FRAME_END__+0x195b0>
  401fc4:	ldr	x17, [x16, #4064]
  401fc8:	add	x16, x16, #0xfe0
  401fcc:	br	x17

0000000000401fd0 <cg_is_unified_wanted@plt>:
  401fd0:	adrp	x16, 41f000 <__FRAME_END__+0x195b0>
  401fd4:	ldr	x17, [x16, #4072]
  401fd8:	add	x16, x16, #0xfe8
  401fdc:	br	x17

0000000000401fe0 <cg_is_hybrid_wanted@plt>:
  401fe0:	adrp	x16, 41f000 <__FRAME_END__+0x195b0>
  401fe4:	ldr	x17, [x16, #4080]
  401fe8:	add	x16, x16, #0xff0
  401fec:	br	x17

0000000000401ff0 <is_efi_boot@plt>:
  401ff0:	adrp	x16, 41f000 <__FRAME_END__+0x195b0>
  401ff4:	ldr	x17, [x16, #4088]
  401ff8:	add	x16, x16, #0xff8
  401ffc:	br	x17

Disassembly of section .text:

0000000000402000 <_start>:
  402000:	mov	x29, #0x0                   	// #0
  402004:	mov	x30, #0x0                   	// #0
  402008:	mov	x5, x0
  40200c:	ldr	x1, [sp]
  402010:	add	x2, sp, #0x8
  402014:	mov	x6, sp
  402018:	movz	x0, #0x0, lsl #48
  40201c:	movk	x0, #0x0, lsl #32
  402020:	movk	x0, #0x40, lsl #16
  402024:	movk	x0, #0x21c8
  402028:	movz	x3, #0x0, lsl #48
  40202c:	movk	x3, #0x0, lsl #32
  402030:	movk	x3, #0x40, lsl #16
  402034:	movk	x3, #0x4f58
  402038:	movz	x4, #0x0, lsl #48
  40203c:	movk	x4, #0x0, lsl #32
  402040:	movk	x4, #0x40, lsl #16
  402044:	movk	x4, #0x4fd8
  402048:	bl	401b40 <__libc_start_main@plt>
  40204c:	bl	401b50 <abort@plt>

0000000000402050 <call_weak_fn>:
  402050:	adrp	x0, 41f000 <__FRAME_END__+0x195b0>
  402054:	ldr	x0, [x0, #3432]
  402058:	cbz	x0, 402060 <call_weak_fn+0x10>
  40205c:	b	401b60 <__gmon_start__@plt>
  402060:	ret

0000000000402064 <deregister_tm_clones>:
  402064:	stp	x29, x30, [sp, #-32]!
  402068:	mov	x29, sp
  40206c:	adrp	x0, 420000 <__TMC_END__>
  402070:	add	x0, x0, #0x0
  402074:	str	x0, [sp, #24]
  402078:	ldr	x0, [sp, #24]
  40207c:	str	x0, [sp, #24]
  402080:	ldr	x1, [sp, #24]
  402084:	adrp	x0, 420000 <__TMC_END__>
  402088:	add	x0, x0, #0x0
  40208c:	cmp	x1, x0
  402090:	b.eq	4020cc <deregister_tm_clones+0x68>  // b.none
  402094:	adrp	x0, 404000 <symlink_controller+0x23c>
  402098:	add	x0, x0, #0xff0
  40209c:	ldr	x0, [x0]
  4020a0:	str	x0, [sp, #16]
  4020a4:	ldr	x0, [sp, #16]
  4020a8:	str	x0, [sp, #16]
  4020ac:	ldr	x0, [sp, #16]
  4020b0:	cmp	x0, #0x0
  4020b4:	b.eq	4020d0 <deregister_tm_clones+0x6c>  // b.none
  4020b8:	ldr	x1, [sp, #16]
  4020bc:	adrp	x0, 420000 <__TMC_END__>
  4020c0:	add	x0, x0, #0x0
  4020c4:	blr	x1
  4020c8:	b	4020d0 <deregister_tm_clones+0x6c>
  4020cc:	nop
  4020d0:	ldp	x29, x30, [sp], #32
  4020d4:	ret

00000000004020d8 <register_tm_clones>:
  4020d8:	stp	x29, x30, [sp, #-48]!
  4020dc:	mov	x29, sp
  4020e0:	adrp	x0, 420000 <__TMC_END__>
  4020e4:	add	x0, x0, #0x0
  4020e8:	str	x0, [sp, #40]
  4020ec:	ldr	x0, [sp, #40]
  4020f0:	str	x0, [sp, #40]
  4020f4:	ldr	x1, [sp, #40]
  4020f8:	adrp	x0, 420000 <__TMC_END__>
  4020fc:	add	x0, x0, #0x0
  402100:	sub	x0, x1, x0
  402104:	asr	x0, x0, #3
  402108:	lsr	x1, x0, #63
  40210c:	add	x0, x1, x0
  402110:	asr	x0, x0, #1
  402114:	str	x0, [sp, #32]
  402118:	ldr	x0, [sp, #32]
  40211c:	cmp	x0, #0x0
  402120:	b.eq	402160 <register_tm_clones+0x88>  // b.none
  402124:	adrp	x0, 404000 <symlink_controller+0x23c>
  402128:	add	x0, x0, #0xff8
  40212c:	ldr	x0, [x0]
  402130:	str	x0, [sp, #24]
  402134:	ldr	x0, [sp, #24]
  402138:	str	x0, [sp, #24]
  40213c:	ldr	x0, [sp, #24]
  402140:	cmp	x0, #0x0
  402144:	b.eq	402164 <register_tm_clones+0x8c>  // b.none
  402148:	ldr	x2, [sp, #24]
  40214c:	ldr	x1, [sp, #32]
  402150:	adrp	x0, 420000 <__TMC_END__>
  402154:	add	x0, x0, #0x0
  402158:	blr	x2
  40215c:	b	402164 <register_tm_clones+0x8c>
  402160:	nop
  402164:	ldp	x29, x30, [sp], #48
  402168:	ret

000000000040216c <__do_global_dtors_aux>:
  40216c:	stp	x29, x30, [sp, #-16]!
  402170:	mov	x29, sp
  402174:	adrp	x0, 420000 <__TMC_END__>
  402178:	add	x0, x0, #0x18
  40217c:	ldrb	w0, [x0]
  402180:	and	x0, x0, #0xff
  402184:	cmp	x0, #0x0
  402188:	b.ne	4021a4 <__do_global_dtors_aux+0x38>  // b.any
  40218c:	bl	402064 <deregister_tm_clones>
  402190:	adrp	x0, 420000 <__TMC_END__>
  402194:	add	x0, x0, #0x18
  402198:	mov	w1, #0x1                   	// #1
  40219c:	strb	w1, [x0]
  4021a0:	b	4021a8 <__do_global_dtors_aux+0x3c>
  4021a4:	nop
  4021a8:	ldp	x29, x30, [sp], #16
  4021ac:	ret

00000000004021b0 <frame_dummy>:
  4021b0:	stp	x29, x30, [sp, #-16]!
  4021b4:	mov	x29, sp
  4021b8:	bl	4020d8 <register_tm_clones>
  4021bc:	nop
  4021c0:	ldp	x29, x30, [sp], #16
  4021c4:	ret

00000000004021c8 <main>:
  4021c8:	sub	sp, sp, #0x30
  4021cc:	stp	x29, x30, [sp, #32]
  4021d0:	add	x29, sp, #0x20
  4021d4:	mov	w8, wzr
  4021d8:	mov	w9, #0x1                   	// #1
  4021dc:	stur	wzr, [x29, #-4]
  4021e0:	stur	w0, [x29, #-8]
  4021e4:	str	x1, [sp, #16]
  4021e8:	ldur	w0, [x29, #-8]
  4021ec:	ldr	x1, [sp, #16]
  4021f0:	str	w8, [sp, #8]
  4021f4:	str	w9, [sp, #4]
  4021f8:	bl	402240 <save_argc_argv>
  4021fc:	ldur	w0, [x29, #-8]
  402200:	ldr	x1, [sp, #16]
  402204:	bl	402274 <run>
  402208:	str	w0, [sp, #12]
  40220c:	bl	401b70 <ask_password_agent_close@plt>
  402210:	bl	401b80 <polkit_agent_close@plt>
  402214:	bl	401b90 <pager_close@plt>
  402218:	bl	401ba0 <mac_selinux_finish@plt>
  40221c:	bl	402970 <static_destruct>
  402220:	ldr	w8, [sp, #12]
  402224:	cmp	w8, #0x0
  402228:	ldr	w8, [sp, #4]
  40222c:	ldr	w9, [sp, #8]
  402230:	csel	w0, w8, w9, lt  // lt = tstop
  402234:	ldp	x29, x30, [sp, #32]
  402238:	add	sp, sp, #0x30
  40223c:	ret

0000000000402240 <save_argc_argv>:
  402240:	sub	sp, sp, #0x10
  402244:	adrp	x8, 420000 <__TMC_END__>
  402248:	add	x8, x8, #0x20
  40224c:	adrp	x9, 420000 <__TMC_END__>
  402250:	add	x9, x9, #0x28
  402254:	str	w0, [sp, #12]
  402258:	str	x1, [sp]
  40225c:	ldr	w10, [sp, #12]
  402260:	str	w10, [x8]
  402264:	ldr	x8, [sp]
  402268:	str	x8, [x9]
  40226c:	add	sp, sp, #0x10
  402270:	ret

0000000000402274 <run>:
  402274:	sub	sp, sp, #0x1f0
  402278:	stp	x29, x30, [sp, #464]
  40227c:	str	x28, [sp, #480]
  402280:	add	x29, sp, #0x1d0
  402284:	mov	x8, xzr
  402288:	mov	w9, #0x0                   	// #0
  40228c:	adrp	x10, 405000 <_fini+0x24>
  402290:	add	x10, x10, #0x0
  402294:	add	x10, x10, #0x3
  402298:	adrp	x11, 405000 <_fini+0x24>
  40229c:	add	x11, x11, #0x1f
  4022a0:	stur	w0, [x29, #-8]
  4022a4:	stur	x1, [x29, #-16]
  4022a8:	stur	x8, [x29, #-24]
  4022ac:	stur	x8, [x29, #-32]
  4022b0:	sturb	w9, [x29, #-33]
  4022b4:	str	x10, [sp, #120]
  4022b8:	str	x11, [sp, #112]
  4022bc:	bl	401bb0 <log_setup_service@plt>
  4022c0:	ldur	w9, [x29, #-8]
  4022c4:	cmp	w9, #0x1
  4022c8:	b.le	40235c <run+0xe8>
  4022cc:	mov	w8, #0x3                   	// #3
  4022d0:	stur	w8, [x29, #-56]
  4022d4:	mov	w8, #0x16                  	// #22
  4022d8:	movk	w8, #0x4000, lsl #16
  4022dc:	stur	w8, [x29, #-60]
  4022e0:	stur	wzr, [x29, #-64]
  4022e4:	ldur	w0, [x29, #-64]
  4022e8:	bl	401bc0 <log_get_max_level_realm@plt>
  4022ec:	ldur	w8, [x29, #-56]
  4022f0:	and	w8, w8, #0x7
  4022f4:	cmp	w0, w8
  4022f8:	b.lt	40232c <run+0xb8>  // b.tstop
  4022fc:	ldur	w8, [x29, #-64]
  402300:	ldur	w9, [x29, #-56]
  402304:	orr	w0, w9, w8, lsl #10
  402308:	ldur	w1, [x29, #-60]
  40230c:	ldr	x2, [sp, #120]
  402310:	mov	w3, #0x56                  	// #86
  402314:	ldr	x4, [sp, #112]
  402318:	adrp	x5, 405000 <_fini+0x24>
  40231c:	add	x5, x5, #0x23
  402320:	bl	401bd0 <log_internal_realm@plt>
  402324:	str	w0, [sp, #108]
  402328:	b	402340 <run+0xcc>
  40232c:	ldur	w0, [x29, #-60]
  402330:	bl	401be0 <abs@plt>
  402334:	mov	w8, wzr
  402338:	subs	w8, w8, w0, uxtb
  40233c:	str	w8, [sp, #108]
  402340:	ldr	w8, [sp, #108]
  402344:	stur	w8, [x29, #-68]
  402348:	ldur	w8, [x29, #-68]
  40234c:	stur	w8, [x29, #-4]
  402350:	mov	w8, #0x1                   	// #1
  402354:	stur	w8, [x29, #-72]
  402358:	b	40294c <run+0x6d8>
  40235c:	mov	w0, #0x12                  	// #18
  402360:	bl	401bf0 <umask@plt>
  402364:	bl	402a58 <fstab_path>
  402368:	adrp	x1, 405000 <_fini+0x24>
  40236c:	add	x1, x1, #0x44
  402370:	bl	401c00 <setmntent@plt>
  402374:	stur	x0, [x29, #-32]
  402378:	ldur	x8, [x29, #-32]
  40237c:	cbnz	x8, 402444 <run+0x1d0>
  402380:	bl	401c10 <__errno_location@plt>
  402384:	ldr	w8, [x0]
  402388:	cmp	w8, #0x2
  40238c:	b.eq	402440 <run+0x1cc>  // b.none
  402390:	mov	w8, #0x3                   	// #3
  402394:	stur	w8, [x29, #-76]
  402398:	bl	401c10 <__errno_location@plt>
  40239c:	ldr	w8, [x0]
  4023a0:	stur	w8, [x29, #-80]
  4023a4:	stur	wzr, [x29, #-84]
  4023a8:	ldur	w0, [x29, #-84]
  4023ac:	bl	401bc0 <log_get_max_level_realm@plt>
  4023b0:	ldur	w8, [x29, #-76]
  4023b4:	and	w8, w8, #0x7
  4023b8:	cmp	w0, w8
  4023bc:	b.lt	402410 <run+0x19c>  // b.tstop
  4023c0:	ldur	w8, [x29, #-84]
  4023c4:	ldur	w9, [x29, #-76]
  4023c8:	orr	w0, w9, w8, lsl #10
  4023cc:	ldur	w1, [x29, #-80]
  4023d0:	str	w0, [sp, #104]
  4023d4:	str	w1, [sp, #100]
  4023d8:	bl	402a58 <fstab_path>
  4023dc:	ldr	w8, [sp, #104]
  4023e0:	str	x0, [sp, #88]
  4023e4:	mov	w0, w8
  4023e8:	ldr	w1, [sp, #100]
  4023ec:	ldr	x2, [sp, #120]
  4023f0:	mov	w3, #0x5d                  	// #93
  4023f4:	ldr	x4, [sp, #112]
  4023f8:	adrp	x5, 405000 <_fini+0x24>
  4023fc:	add	x5, x5, #0x47
  402400:	ldr	x6, [sp, #88]
  402404:	bl	401bd0 <log_internal_realm@plt>
  402408:	str	w0, [sp, #84]
  40240c:	b	402424 <run+0x1b0>
  402410:	ldur	w0, [x29, #-80]
  402414:	bl	401be0 <abs@plt>
  402418:	mov	w8, wzr
  40241c:	subs	w8, w8, w0, uxtb
  402420:	str	w8, [sp, #84]
  402424:	ldr	w8, [sp, #84]
  402428:	stur	w8, [x29, #-88]
  40242c:	ldur	w8, [x29, #-88]
  402430:	stur	w8, [x29, #-4]
  402434:	mov	w8, #0x1                   	// #1
  402438:	stur	w8, [x29, #-72]
  40243c:	b	40294c <run+0x6d8>
  402440:	b	402574 <run+0x300>
  402444:	ldur	x0, [x29, #-32]
  402448:	bl	401c20 <getmntent@plt>
  40244c:	stur	x0, [x29, #-48]
  402450:	cbz	x0, 402574 <run+0x300>
  402454:	ldur	x8, [x29, #-48]
  402458:	ldr	x0, [x8, #8]
  40245c:	bl	403088 <mount_point_is_api>
  402460:	tbnz	w0, #0, 40250c <run+0x298>
  402464:	mov	w8, #0x0                   	// #0
  402468:	sturb	w8, [x29, #-97]
  40246c:	adrp	x9, 420000 <__TMC_END__>
  402470:	add	x9, x9, #0x0
  402474:	ldr	q0, [x9]
  402478:	sub	x10, x29, #0x80
  40247c:	stur	q0, [x29, #-128]
  402480:	ldr	x9, [x9, #16]
  402484:	stur	x9, [x29, #-112]
  402488:	stur	x10, [x29, #-96]
  40248c:	ldur	x8, [x29, #-96]
  402490:	mov	w9, #0x0                   	// #0
  402494:	str	w9, [sp, #80]
  402498:	cbz	x8, 4024b0 <run+0x23c>
  40249c:	ldur	x8, [x29, #-96]
  4024a0:	ldr	x8, [x8]
  4024a4:	cmp	x8, #0x0
  4024a8:	cset	w9, ne  // ne = any
  4024ac:	str	w9, [sp, #80]
  4024b0:	ldr	w8, [sp, #80]
  4024b4:	tbnz	w8, #0, 4024bc <run+0x248>
  4024b8:	b	4024f4 <run+0x280>
  4024bc:	ldur	x8, [x29, #-48]
  4024c0:	ldr	x0, [x8, #8]
  4024c4:	ldur	x8, [x29, #-96]
  4024c8:	ldr	x1, [x8]
  4024cc:	bl	401c30 <path_equal@plt>
  4024d0:	tbnz	w0, #0, 4024d8 <run+0x264>
  4024d4:	b	4024e4 <run+0x270>
  4024d8:	mov	w8, #0x1                   	// #1
  4024dc:	sturb	w8, [x29, #-97]
  4024e0:	b	4024f4 <run+0x280>
  4024e4:	ldur	x8, [x29, #-96]
  4024e8:	add	x8, x8, #0x8
  4024ec:	stur	x8, [x29, #-96]
  4024f0:	b	40248c <run+0x218>
  4024f4:	ldurb	w8, [x29, #-97]
  4024f8:	and	w8, w8, #0x1
  4024fc:	sturb	w8, [x29, #-129]
  402500:	ldurb	w8, [x29, #-129]
  402504:	tbnz	w8, #0, 40250c <run+0x298>
  402508:	b	402444 <run+0x1d0>
  40250c:	ldur	x8, [x29, #-48]
  402510:	ldr	x0, [x8, #8]
  402514:	adrp	x1, 405000 <_fini+0x24>
  402518:	add	x1, x1, #0x5d
  40251c:	bl	401c30 <path_equal@plt>
  402520:	tbnz	w0, #0, 402528 <run+0x2b4>
  402524:	b	402530 <run+0x2bc>
  402528:	mov	w8, #0x1                   	// #1
  40252c:	sturb	w8, [x29, #-33]
  402530:	ldur	x8, [x29, #-48]
  402534:	ldr	x0, [x8, #8]
  402538:	mov	w9, wzr
  40253c:	and	w1, w9, #0x1
  402540:	sub	x2, x29, #0x18
  402544:	bl	402aa4 <do_remount>
  402548:	stur	w0, [x29, #-52]
  40254c:	ldur	w9, [x29, #-52]
  402550:	cmp	w9, #0x0
  402554:	cset	w9, ge  // ge = tcont
  402558:	tbnz	w9, #0, 402570 <run+0x2fc>
  40255c:	ldur	w8, [x29, #-52]
  402560:	stur	w8, [x29, #-4]
  402564:	mov	w8, #0x1                   	// #1
  402568:	stur	w8, [x29, #-72]
  40256c:	b	40294c <run+0x6d8>
  402570:	b	402444 <run+0x1d0>
  402574:	ldurb	w8, [x29, #-33]
  402578:	tbnz	w8, #0, 402674 <run+0x400>
  40257c:	adrp	x0, 405000 <_fini+0x24>
  402580:	add	x0, x0, #0x64
  402584:	bl	401c40 <getenv_bool@plt>
  402588:	stur	w0, [x29, #-52]
  40258c:	ldur	w8, [x29, #-52]
  402590:	cmp	w8, #0x0
  402594:	cset	w8, ge  // ge = tcont
  402598:	tbnz	w8, #0, 402624 <run+0x3b0>
  40259c:	ldur	w8, [x29, #-52]
  4025a0:	mov	w9, #0xfffffffa            	// #-6
  4025a4:	cmp	w8, w9
  4025a8:	b.eq	402624 <run+0x3b0>  // b.none
  4025ac:	mov	w8, #0x4                   	// #4
  4025b0:	stur	w8, [x29, #-136]
  4025b4:	ldur	w8, [x29, #-52]
  4025b8:	stur	w8, [x29, #-140]
  4025bc:	stur	wzr, [x29, #-144]
  4025c0:	ldur	w0, [x29, #-144]
  4025c4:	bl	401bc0 <log_get_max_level_realm@plt>
  4025c8:	ldur	w8, [x29, #-136]
  4025cc:	and	w8, w8, #0x7
  4025d0:	cmp	w0, w8
  4025d4:	b.lt	402608 <run+0x394>  // b.tstop
  4025d8:	ldur	w8, [x29, #-144]
  4025dc:	ldur	w9, [x29, #-136]
  4025e0:	orr	w0, w9, w8, lsl #10
  4025e4:	ldur	w1, [x29, #-140]
  4025e8:	ldr	x2, [sp, #120]
  4025ec:	mov	w3, #0x74                  	// #116
  4025f0:	ldr	x4, [sp, #112]
  4025f4:	adrp	x5, 405000 <_fini+0x24>
  4025f8:	add	x5, x5, #0x7c
  4025fc:	bl	401bd0 <log_internal_realm@plt>
  402600:	str	w0, [sp, #76]
  402604:	b	40261c <run+0x3a8>
  402608:	ldur	w0, [x29, #-140]
  40260c:	bl	401be0 <abs@plt>
  402610:	mov	w8, wzr
  402614:	subs	w8, w8, w0, uxtb
  402618:	str	w8, [sp, #76]
  40261c:	ldr	w8, [sp, #76]
  402620:	stur	w8, [x29, #-148]
  402624:	ldur	w8, [x29, #-52]
  402628:	cmp	w8, #0x0
  40262c:	cset	w8, le
  402630:	tbnz	w8, #0, 402674 <run+0x400>
  402634:	adrp	x0, 405000 <_fini+0x24>
  402638:	add	x0, x0, #0x5d
  40263c:	mov	w8, #0x1                   	// #1
  402640:	and	w1, w8, #0x1
  402644:	sub	x2, x29, #0x18
  402648:	bl	402aa4 <do_remount>
  40264c:	stur	w0, [x29, #-52]
  402650:	ldur	w8, [x29, #-52]
  402654:	cmp	w8, #0x0
  402658:	cset	w8, ge  // ge = tcont
  40265c:	tbnz	w8, #0, 402674 <run+0x400>
  402660:	ldur	w8, [x29, #-52]
  402664:	stur	w8, [x29, #-4]
  402668:	mov	w8, #0x1                   	// #1
  40266c:	stur	w8, [x29, #-72]
  402670:	b	40294c <run+0x6d8>
  402674:	stur	wzr, [x29, #-52]
  402678:	ldur	x0, [x29, #-24]
  40267c:	bl	402ca4 <hashmap_isempty>
  402680:	eor	w8, w0, #0x1
  402684:	tbnz	w8, #0, 40268c <run+0x418>
  402688:	b	40293c <run+0x6c8>
  40268c:	mov	x8, xzr
  402690:	stur	x8, [x29, #-160]
  402694:	add	x8, sp, #0xb0
  402698:	mov	x0, x8
  40269c:	mov	w9, wzr
  4026a0:	mov	w1, w9
  4026a4:	mov	x2, #0x80                  	// #128
  4026a8:	str	x8, [sp, #64]
  4026ac:	bl	401c50 <memset@plt>
  4026b0:	mov	w9, wzr
  4026b4:	mov	w0, w9
  4026b8:	mov	w1, w9
  4026bc:	ldr	x2, [sp, #64]
  4026c0:	mov	w3, #0x4                   	// #4
  4026c4:	bl	401c60 <waitid@plt>
  4026c8:	cmp	w0, #0x0
  4026cc:	cset	w9, ge  // ge = tcont
  4026d0:	tbnz	w9, #0, 402780 <run+0x50c>
  4026d4:	bl	401c10 <__errno_location@plt>
  4026d8:	ldr	w8, [x0]
  4026dc:	cmp	w8, #0x4
  4026e0:	b.ne	4026f0 <run+0x47c>  // b.any
  4026e4:	mov	w8, #0x7                   	// #7
  4026e8:	stur	w8, [x29, #-72]
  4026ec:	b	402910 <run+0x69c>
  4026f0:	mov	w8, #0x3                   	// #3
  4026f4:	str	w8, [sp, #172]
  4026f8:	bl	401c10 <__errno_location@plt>
  4026fc:	ldr	w8, [x0]
  402700:	str	w8, [sp, #168]
  402704:	str	wzr, [sp, #164]
  402708:	ldr	w0, [sp, #164]
  40270c:	bl	401bc0 <log_get_max_level_realm@plt>
  402710:	ldr	w8, [sp, #172]
  402714:	and	w8, w8, #0x7
  402718:	cmp	w0, w8
  40271c:	b.lt	402750 <run+0x4dc>  // b.tstop
  402720:	ldr	w8, [sp, #164]
  402724:	ldr	w9, [sp, #172]
  402728:	orr	w0, w9, w8, lsl #10
  40272c:	ldr	w1, [sp, #168]
  402730:	ldr	x2, [sp, #120]
  402734:	mov	w3, #0x86                  	// #134
  402738:	ldr	x4, [sp, #112]
  40273c:	adrp	x5, 405000 <_fini+0x24>
  402740:	add	x5, x5, #0xb3
  402744:	bl	401bd0 <log_internal_realm@plt>
  402748:	str	w0, [sp, #60]
  40274c:	b	402764 <run+0x4f0>
  402750:	ldr	w0, [sp, #168]
  402754:	bl	401be0 <abs@plt>
  402758:	mov	w8, wzr
  40275c:	subs	w8, w8, w0, uxtb
  402760:	str	w8, [sp, #60]
  402764:	ldr	w8, [sp, #60]
  402768:	str	w8, [sp, #160]
  40276c:	ldr	w8, [sp, #160]
  402770:	stur	w8, [x29, #-4]
  402774:	mov	w8, #0x1                   	// #1
  402778:	stur	w8, [x29, #-72]
  40277c:	b	402910 <run+0x69c>
  402780:	ldur	x0, [x29, #-24]
  402784:	ldr	w8, [sp, #192]
  402788:	str	x0, [sp, #48]
  40278c:	mov	w0, w8
  402790:	bl	402d28 <PID_TO_PTR>
  402794:	ldr	x9, [sp, #48]
  402798:	str	x0, [sp, #40]
  40279c:	mov	x0, x9
  4027a0:	ldr	x1, [sp, #40]
  4027a4:	bl	402cfc <hashmap_remove>
  4027a8:	stur	x0, [x29, #-160]
  4027ac:	ldur	x9, [x29, #-160]
  4027b0:	cbz	x9, 40290c <run+0x698>
  4027b4:	ldr	w0, [sp, #184]
  4027b8:	ldr	w1, [sp, #200]
  4027bc:	mov	w2, #0x1                   	// #1
  4027c0:	mov	x8, xzr
  4027c4:	mov	x3, x8
  4027c8:	bl	401c70 <is_clean_exit@plt>
  4027cc:	tbnz	w0, #0, 40290c <run+0x698>
  4027d0:	ldr	w8, [sp, #184]
  4027d4:	cmp	w8, #0x1
  4027d8:	b.ne	40285c <run+0x5e8>  // b.any
  4027dc:	mov	w8, #0x3                   	// #3
  4027e0:	str	w8, [sp, #156]
  4027e4:	str	wzr, [sp, #152]
  4027e8:	str	wzr, [sp, #148]
  4027ec:	ldr	w0, [sp, #148]
  4027f0:	bl	401bc0 <log_get_max_level_realm@plt>
  4027f4:	ldr	w8, [sp, #156]
  4027f8:	and	w8, w8, #0x7
  4027fc:	cmp	w0, w8
  402800:	b.lt	40283c <run+0x5c8>  // b.tstop
  402804:	ldr	w8, [sp, #148]
  402808:	ldr	w9, [sp, #156]
  40280c:	orr	w0, w9, w8, lsl #10
  402810:	ldr	w1, [sp, #152]
  402814:	ldur	x6, [x29, #-160]
  402818:	ldr	w7, [sp, #200]
  40281c:	ldr	x2, [sp, #120]
  402820:	mov	w3, #0x8d                  	// #141
  402824:	ldr	x4, [sp, #112]
  402828:	adrp	x5, 405000 <_fini+0x24>
  40282c:	add	x5, x5, #0xc7
  402830:	bl	401bd0 <log_internal_realm@plt>
  402834:	str	w0, [sp, #36]
  402838:	b	402850 <run+0x5dc>
  40283c:	ldr	w0, [sp, #152]
  402840:	bl	401be0 <abs@plt>
  402844:	mov	w8, wzr
  402848:	subs	w8, w8, w0, uxtb
  40284c:	str	w8, [sp, #36]
  402850:	ldr	w8, [sp, #36]
  402854:	str	w8, [sp, #144]
  402858:	b	402904 <run+0x690>
  40285c:	mov	w8, #0x3                   	// #3
  402860:	str	w8, [sp, #140]
  402864:	str	wzr, [sp, #136]
  402868:	str	wzr, [sp, #132]
  40286c:	ldr	w0, [sp, #132]
  402870:	bl	401bc0 <log_get_max_level_realm@plt>
  402874:	ldr	w8, [sp, #140]
  402878:	and	w8, w8, #0x7
  40287c:	cmp	w0, w8
  402880:	b.lt	4028e8 <run+0x674>  // b.tstop
  402884:	ldr	w8, [sp, #132]
  402888:	ldr	w9, [sp, #140]
  40288c:	orr	w0, w9, w8, lsl #10
  402890:	ldr	w1, [sp, #136]
  402894:	ldur	x6, [x29, #-160]
  402898:	ldr	w8, [sp, #200]
  40289c:	str	w0, [sp, #32]
  4028a0:	mov	w0, w8
  4028a4:	str	w1, [sp, #28]
  4028a8:	str	x6, [sp, #16]
  4028ac:	bl	401c80 <signal_to_string@plt>
  4028b0:	ldr	w8, [sp, #32]
  4028b4:	str	x0, [sp, #8]
  4028b8:	mov	w0, w8
  4028bc:	ldr	w1, [sp, #28]
  4028c0:	ldr	x2, [sp, #120]
  4028c4:	mov	w3, #0x8f                  	// #143
  4028c8:	ldr	x4, [sp, #112]
  4028cc:	adrp	x5, 405000 <_fini+0x24>
  4028d0:	add	x5, x5, #0xf5
  4028d4:	ldr	x6, [sp, #16]
  4028d8:	ldr	x7, [sp, #8]
  4028dc:	bl	401bd0 <log_internal_realm@plt>
  4028e0:	str	w0, [sp, #4]
  4028e4:	b	4028fc <run+0x688>
  4028e8:	ldr	w0, [sp, #136]
  4028ec:	bl	401be0 <abs@plt>
  4028f0:	mov	w8, wzr
  4028f4:	subs	w8, w8, w0, uxtb
  4028f8:	str	w8, [sp, #4]
  4028fc:	ldr	w8, [sp, #4]
  402900:	str	w8, [sp, #128]
  402904:	mov	w8, #0xfffffff8            	// #-8
  402908:	stur	w8, [x29, #-52]
  40290c:	stur	wzr, [x29, #-72]
  402910:	sub	x0, x29, #0xa0
  402914:	bl	402cd4 <freep>
  402918:	ldur	w8, [x29, #-72]
  40291c:	str	w8, [sp]
  402920:	cbz	w8, 402938 <run+0x6c4>
  402924:	b	402928 <run+0x6b4>
  402928:	ldr	w8, [sp]
  40292c:	cmp	w8, #0x7
  402930:	b.eq	402678 <run+0x404>  // b.none
  402934:	b	40294c <run+0x6d8>
  402938:	b	402678 <run+0x404>
  40293c:	ldur	w8, [x29, #-52]
  402940:	stur	w8, [x29, #-4]
  402944:	mov	w8, #0x1                   	// #1
  402948:	stur	w8, [x29, #-72]
  40294c:	sub	x0, x29, #0x20
  402950:	bl	402a24 <endmntentp>
  402954:	sub	x0, x29, #0x18
  402958:	bl	4029f0 <hashmap_free_freep>
  40295c:	ldur	w0, [x29, #-4]
  402960:	ldr	x28, [sp, #480]
  402964:	ldp	x29, x30, [sp, #464]
  402968:	add	sp, sp, #0x1f0
  40296c:	ret

0000000000402970 <static_destruct>:
  402970:	sub	sp, sp, #0x20
  402974:	stp	x29, x30, [sp, #16]
  402978:	add	x29, sp, #0x10
  40297c:	adrp	x8, 41f000 <__FRAME_END__+0x195b0>
  402980:	ldr	x8, [x8, #3440]
  402984:	str	x8, [sp]
  402988:	cbnz	x8, 402990 <static_destruct+0x20>
  40298c:	b	4029e4 <static_destruct+0x74>
  402990:	ldr	x0, [sp]
  402994:	mov	x1, #0x8                   	// #8
  402998:	bl	403058 <ALIGN_TO>
  40299c:	str	x0, [sp, #8]
  4029a0:	ldr	x8, [sp, #8]
  4029a4:	adrp	x9, 41f000 <__FRAME_END__+0x195b0>
  4029a8:	ldr	x9, [x9, #3448]
  4029ac:	cmp	x8, x9
  4029b0:	b.cs	4029e4 <static_destruct+0x74>  // b.hs, b.nlast
  4029b4:	ldr	x8, [sp, #8]
  4029b8:	ldr	x8, [x8, #8]
  4029bc:	ldr	x9, [sp, #8]
  4029c0:	ldr	x0, [x9]
  4029c4:	blr	x8
  4029c8:	ldr	x8, [sp, #8]
  4029cc:	add	x8, x8, #0x10
  4029d0:	mov	x0, x8
  4029d4:	mov	x1, #0x8                   	// #8
  4029d8:	bl	403058 <ALIGN_TO>
  4029dc:	str	x0, [sp, #8]
  4029e0:	b	4029a0 <static_destruct+0x30>
  4029e4:	ldp	x29, x30, [sp, #16]
  4029e8:	add	sp, sp, #0x20
  4029ec:	ret

00000000004029f0 <hashmap_free_freep>:
  4029f0:	sub	sp, sp, #0x20
  4029f4:	stp	x29, x30, [sp, #16]
  4029f8:	add	x29, sp, #0x10
  4029fc:	str	x0, [sp, #8]
  402a00:	ldr	x8, [sp, #8]
  402a04:	ldr	x8, [x8]
  402a08:	cbz	x8, 402a18 <hashmap_free_freep+0x28>
  402a0c:	ldr	x8, [sp, #8]
  402a10:	ldr	x0, [x8]
  402a14:	bl	402d40 <hashmap_free_free>
  402a18:	ldp	x29, x30, [sp, #16]
  402a1c:	add	sp, sp, #0x20
  402a20:	ret

0000000000402a24 <endmntentp>:
  402a24:	sub	sp, sp, #0x20
  402a28:	stp	x29, x30, [sp, #16]
  402a2c:	add	x29, sp, #0x10
  402a30:	str	x0, [sp, #8]
  402a34:	ldr	x8, [sp, #8]
  402a38:	ldr	x8, [x8]
  402a3c:	cbz	x8, 402a4c <endmntentp+0x28>
  402a40:	ldr	x8, [sp, #8]
  402a44:	ldr	x0, [x8]
  402a48:	bl	401c90 <endmntent@plt>
  402a4c:	ldp	x29, x30, [sp, #16]
  402a50:	add	sp, sp, #0x20
  402a54:	ret

0000000000402a58 <fstab_path>:
  402a58:	sub	sp, sp, #0x20
  402a5c:	stp	x29, x30, [sp, #16]
  402a60:	add	x29, sp, #0x10
  402a64:	adrp	x0, 405000 <_fini+0x24>
  402a68:	add	x0, x0, #0x120
  402a6c:	bl	401ca0 <secure_getenv@plt>
  402a70:	str	x0, [sp, #8]
  402a74:	cbz	x0, 402a84 <fstab_path+0x2c>
  402a78:	ldr	x8, [sp, #8]
  402a7c:	str	x8, [sp]
  402a80:	b	402a90 <fstab_path+0x38>
  402a84:	adrp	x8, 405000 <_fini+0x24>
  402a88:	add	x8, x8, #0x12e
  402a8c:	str	x8, [sp]
  402a90:	ldr	x8, [sp]
  402a94:	mov	x0, x8
  402a98:	ldp	x29, x30, [sp, #16]
  402a9c:	add	sp, sp, #0x20
  402aa0:	ret

0000000000402aa4 <do_remount>:
  402aa4:	sub	sp, sp, #0x90
  402aa8:	stp	x29, x30, [sp, #128]
  402aac:	add	x29, sp, #0x80
  402ab0:	mov	w8, #0x7                   	// #7
  402ab4:	adrp	x9, 405000 <_fini+0x24>
  402ab8:	add	x9, x9, #0x0
  402abc:	add	x9, x9, #0x3
  402ac0:	mov	w10, #0x1                   	// #1
  402ac4:	stur	x0, [x29, #-16]
  402ac8:	and	w10, w1, w10
  402acc:	sturb	w10, [x29, #-17]
  402ad0:	stur	x2, [x29, #-32]
  402ad4:	stur	w8, [x29, #-44]
  402ad8:	stur	wzr, [x29, #-48]
  402adc:	stur	wzr, [x29, #-52]
  402ae0:	ldur	w0, [x29, #-52]
  402ae4:	str	x9, [sp, #8]
  402ae8:	bl	401bc0 <log_get_max_level_realm@plt>
  402aec:	ldur	w8, [x29, #-44]
  402af0:	and	w8, w8, #0x7
  402af4:	cmp	w0, w8
  402af8:	b.lt	402b34 <do_remount+0x90>  // b.tstop
  402afc:	ldur	w8, [x29, #-52]
  402b00:	ldur	w9, [x29, #-44]
  402b04:	orr	w0, w9, w8, lsl #10
  402b08:	ldur	w1, [x29, #-48]
  402b0c:	ldur	x6, [x29, #-16]
  402b10:	ldr	x2, [sp, #8]
  402b14:	mov	w3, #0x36                  	// #54
  402b18:	adrp	x4, 405000 <_fini+0x24>
  402b1c:	add	x4, x4, #0x139
  402b20:	adrp	x5, 405000 <_fini+0x24>
  402b24:	add	x5, x5, #0x144
  402b28:	bl	401bd0 <log_internal_realm@plt>
  402b2c:	str	w0, [sp, #4]
  402b30:	b	402b48 <do_remount+0xa4>
  402b34:	ldur	w0, [x29, #-48]
  402b38:	bl	401be0 <abs@plt>
  402b3c:	mov	w8, wzr
  402b40:	subs	w8, w8, w0, uxtb
  402b44:	str	w8, [sp, #4]
  402b48:	ldr	w8, [sp, #4]
  402b4c:	stur	w8, [x29, #-56]
  402b50:	ldurb	w8, [x29, #-17]
  402b54:	adrp	x9, 405000 <_fini+0x24>
  402b58:	add	x9, x9, #0x162
  402b5c:	adrp	x10, 405000 <_fini+0x24>
  402b60:	add	x10, x10, #0x155
  402b64:	tst	w8, #0x1
  402b68:	csel	x0, x10, x9, ne  // ne = any
  402b6c:	mov	w1, #0x225                 	// #549
  402b70:	sub	x2, x29, #0x24
  402b74:	bl	402d74 <safe_fork>
  402b78:	stur	w0, [x29, #-40]
  402b7c:	ldur	w8, [x29, #-40]
  402b80:	cmp	w8, #0x0
  402b84:	cset	w8, ge  // ge = tcont
  402b88:	tbnz	w8, #0, 402b98 <do_remount+0xf4>
  402b8c:	ldur	w8, [x29, #-40]
  402b90:	stur	w8, [x29, #-4]
  402b94:	b	402c94 <do_remount+0x1f0>
  402b98:	ldur	w8, [x29, #-40]
  402b9c:	cbnz	w8, 402c80 <do_remount+0x1dc>
  402ba0:	add	x8, sp, #0x20
  402ba4:	adrp	x9, 405000 <_fini+0x24>
  402ba8:	add	x9, x9, #0x16c
  402bac:	str	x9, [sp, #32]
  402bb0:	ldur	x10, [x29, #-16]
  402bb4:	str	x10, [x8, #8]
  402bb8:	adrp	x10, 405000 <_fini+0x24>
  402bbc:	add	x10, x10, #0x177
  402bc0:	str	x10, [x8, #16]
  402bc4:	ldurb	w11, [x29, #-17]
  402bc8:	adrp	x10, 405000 <_fini+0x24>
  402bcc:	add	x10, x10, #0x185
  402bd0:	adrp	x12, 405000 <_fini+0x24>
  402bd4:	add	x12, x12, #0x17a
  402bd8:	tst	w11, #0x1
  402bdc:	csel	x10, x12, x10, ne  // ne = any
  402be0:	str	x10, [x8, #24]
  402be4:	mov	x10, xzr
  402be8:	str	x10, [x8, #32]
  402bec:	mov	x0, x9
  402bf0:	mov	x1, x8
  402bf4:	bl	401cb0 <execv@plt>
  402bf8:	mov	w11, #0x3                   	// #3
  402bfc:	str	w11, [sp, #28]
  402c00:	bl	401c10 <__errno_location@plt>
  402c04:	ldr	w11, [x0]
  402c08:	str	w11, [sp, #24]
  402c0c:	str	wzr, [sp, #20]
  402c10:	ldr	w0, [sp, #20]
  402c14:	bl	401bc0 <log_get_max_level_realm@plt>
  402c18:	ldr	w11, [sp, #28]
  402c1c:	and	w11, w11, #0x7
  402c20:	cmp	w0, w11
  402c24:	b.lt	402c5c <do_remount+0x1b8>  // b.tstop
  402c28:	ldr	w8, [sp, #20]
  402c2c:	ldr	w9, [sp, #28]
  402c30:	orr	w0, w9, w8, lsl #10
  402c34:	ldr	w1, [sp, #24]
  402c38:	ldr	x2, [sp, #8]
  402c3c:	mov	w3, #0x43                  	// #67
  402c40:	adrp	x4, 405000 <_fini+0x24>
  402c44:	add	x4, x4, #0x139
  402c48:	adrp	x5, 405000 <_fini+0x24>
  402c4c:	add	x5, x5, #0x18d
  402c50:	bl	401bd0 <log_internal_realm@plt>
  402c54:	str	w0, [sp]
  402c58:	b	402c70 <do_remount+0x1cc>
  402c5c:	ldr	w0, [sp, #24]
  402c60:	bl	401be0 <abs@plt>
  402c64:	mov	w8, wzr
  402c68:	subs	w8, w8, w0, uxtb
  402c6c:	str	w8, [sp]
  402c70:	ldr	w8, [sp]
  402c74:	str	w8, [sp, #16]
  402c78:	mov	w0, #0x1                   	// #1
  402c7c:	bl	401cc0 <_exit@plt>
  402c80:	ldur	x0, [x29, #-32]
  402c84:	ldur	x1, [x29, #-16]
  402c88:	ldur	w2, [x29, #-36]
  402c8c:	bl	402dbc <track_pid>
  402c90:	stur	w0, [x29, #-4]
  402c94:	ldur	w0, [x29, #-4]
  402c98:	ldp	x29, x30, [sp, #128]
  402c9c:	add	sp, sp, #0x90
  402ca0:	ret

0000000000402ca4 <hashmap_isempty>:
  402ca4:	sub	sp, sp, #0x20
  402ca8:	stp	x29, x30, [sp, #16]
  402cac:	add	x29, sp, #0x10
  402cb0:	str	x0, [sp, #8]
  402cb4:	ldr	x0, [sp, #8]
  402cb8:	bl	403034 <hashmap_size>
  402cbc:	cmp	w0, #0x0
  402cc0:	cset	w8, eq  // eq = none
  402cc4:	and	w0, w8, #0x1
  402cc8:	ldp	x29, x30, [sp, #16]
  402ccc:	add	sp, sp, #0x20
  402cd0:	ret

0000000000402cd4 <freep>:
  402cd4:	sub	sp, sp, #0x20
  402cd8:	stp	x29, x30, [sp, #16]
  402cdc:	add	x29, sp, #0x10
  402ce0:	str	x0, [sp, #8]
  402ce4:	ldr	x8, [sp, #8]
  402ce8:	ldr	x0, [x8]
  402cec:	bl	401cd0 <free@plt>
  402cf0:	ldp	x29, x30, [sp, #16]
  402cf4:	add	sp, sp, #0x20
  402cf8:	ret

0000000000402cfc <hashmap_remove>:
  402cfc:	sub	sp, sp, #0x20
  402d00:	stp	x29, x30, [sp, #16]
  402d04:	add	x29, sp, #0x10
  402d08:	str	x0, [sp, #8]
  402d0c:	str	x1, [sp]
  402d10:	ldr	x0, [sp, #8]
  402d14:	ldr	x1, [sp]
  402d18:	bl	401ce0 <internal_hashmap_remove@plt>
  402d1c:	ldp	x29, x30, [sp, #16]
  402d20:	add	sp, sp, #0x20
  402d24:	ret

0000000000402d28 <PID_TO_PTR>:
  402d28:	sub	sp, sp, #0x10
  402d2c:	str	w0, [sp, #12]
  402d30:	ldrsw	x8, [sp, #12]
  402d34:	mov	x0, x8
  402d38:	add	sp, sp, #0x10
  402d3c:	ret

0000000000402d40 <hashmap_free_free>:
  402d40:	sub	sp, sp, #0x20
  402d44:	stp	x29, x30, [sp, #16]
  402d48:	add	x29, sp, #0x10
  402d4c:	mov	x8, xzr
  402d50:	adrp	x2, 401000 <_init-0xb08>
  402d54:	add	x2, x2, #0xcd0
  402d58:	str	x0, [sp, #8]
  402d5c:	ldr	x0, [sp, #8]
  402d60:	mov	x1, x8
  402d64:	bl	401cf0 <internal_hashmap_free@plt>
  402d68:	ldp	x29, x30, [sp, #16]
  402d6c:	add	sp, sp, #0x20
  402d70:	ret

0000000000402d74 <safe_fork>:
  402d74:	sub	sp, sp, #0x30
  402d78:	stp	x29, x30, [sp, #32]
  402d7c:	add	x29, sp, #0x20
  402d80:	mov	x8, xzr
  402d84:	mov	x3, x8
  402d88:	stur	x0, [x29, #-8]
  402d8c:	stur	w1, [x29, #-12]
  402d90:	str	x2, [sp, #8]
  402d94:	ldur	x0, [x29, #-8]
  402d98:	ldur	w9, [x29, #-12]
  402d9c:	ldr	x4, [sp, #8]
  402da0:	mov	x1, x3
  402da4:	mov	x2, x8
  402da8:	mov	w3, w9
  402dac:	bl	401d00 <safe_fork_full@plt>
  402db0:	ldp	x29, x30, [sp, #32]
  402db4:	add	sp, sp, #0x30
  402db8:	ret

0000000000402dbc <track_pid>:
  402dbc:	sub	sp, sp, #0x80
  402dc0:	stp	x29, x30, [sp, #112]
  402dc4:	add	x29, sp, #0x70
  402dc8:	mov	x8, xzr
  402dcc:	adrp	x9, 405000 <_fini+0x24>
  402dd0:	add	x9, x9, #0x0
  402dd4:	add	x9, x9, #0x3
  402dd8:	adrp	x10, 405000 <_fini+0x24>
  402ddc:	add	x10, x10, #0x1f6
  402de0:	adrp	x11, 405000 <_fini+0x24>
  402de4:	add	x11, x11, #0x1b0
  402de8:	stur	x0, [x29, #-16]
  402dec:	stur	x1, [x29, #-24]
  402df0:	stur	w2, [x29, #-28]
  402df4:	stur	x8, [x29, #-40]
  402df8:	str	x9, [sp, #40]
  402dfc:	str	x10, [sp, #32]
  402e00:	str	x11, [sp, #24]
  402e04:	ldur	x8, [x29, #-16]
  402e08:	cmp	x8, #0x0
  402e0c:	cset	w9, ne  // ne = any
  402e10:	mov	w10, #0x1                   	// #1
  402e14:	eor	w9, w9, #0x1
  402e18:	eor	w9, w9, w10
  402e1c:	eor	w9, w9, w10
  402e20:	and	w9, w9, #0x1
  402e24:	mov	w0, w9
  402e28:	sxtw	x8, w0
  402e2c:	cbz	x8, 402e50 <track_pid+0x94>
  402e30:	mov	w8, wzr
  402e34:	mov	w0, w8
  402e38:	adrp	x1, 405000 <_fini+0x24>
  402e3c:	add	x1, x1, #0x1ae
  402e40:	ldr	x2, [sp, #40]
  402e44:	mov	w3, #0x1e                  	// #30
  402e48:	ldr	x4, [sp, #24]
  402e4c:	bl	401d10 <log_assert_failed_realm@plt>
  402e50:	ldur	x8, [x29, #-24]
  402e54:	cmp	x8, #0x0
  402e58:	cset	w9, ne  // ne = any
  402e5c:	mov	w10, #0x1                   	// #1
  402e60:	eor	w9, w9, #0x1
  402e64:	eor	w9, w9, w10
  402e68:	eor	w9, w9, w10
  402e6c:	and	w9, w9, #0x1
  402e70:	mov	w0, w9
  402e74:	sxtw	x8, w0
  402e78:	cbz	x8, 402e9c <track_pid+0xe0>
  402e7c:	mov	w8, wzr
  402e80:	mov	w0, w8
  402e84:	adrp	x1, 405000 <_fini+0x24>
  402e88:	add	x1, x1, #0x1df
  402e8c:	ldr	x2, [sp, #40]
  402e90:	mov	w3, #0x1f                  	// #31
  402e94:	ldr	x4, [sp, #24]
  402e98:	bl	401d10 <log_assert_failed_realm@plt>
  402e9c:	ldur	w0, [x29, #-28]
  402ea0:	bl	403014 <pid_is_valid>
  402ea4:	mov	w8, #0x1                   	// #1
  402ea8:	eor	w9, w0, #0x1
  402eac:	eor	w9, w9, w8
  402eb0:	eor	w8, w9, w8
  402eb4:	and	w8, w8, #0x1
  402eb8:	mov	w1, w8
  402ebc:	sxtw	x10, w1
  402ec0:	cbz	x10, 402ee4 <track_pid+0x128>
  402ec4:	mov	w8, wzr
  402ec8:	mov	w0, w8
  402ecc:	adrp	x1, 405000 <_fini+0x24>
  402ed0:	add	x1, x1, #0x1e4
  402ed4:	ldr	x2, [sp, #40]
  402ed8:	mov	w3, #0x20                  	// #32
  402edc:	ldr	x4, [sp, #24]
  402ee0:	bl	401d10 <log_assert_failed_realm@plt>
  402ee4:	ldur	x0, [x29, #-16]
  402ee8:	mov	x8, xzr
  402eec:	mov	x1, x8
  402ef0:	bl	401d20 <internal_hashmap_ensure_allocated@plt>
  402ef4:	stur	w0, [x29, #-44]
  402ef8:	ldur	w9, [x29, #-44]
  402efc:	cmp	w9, #0x0
  402f00:	cset	w9, ge  // ge = tcont
  402f04:	tbnz	w9, #0, 402f30 <track_pid+0x174>
  402f08:	mov	w8, wzr
  402f0c:	mov	w0, w8
  402f10:	ldr	x1, [sp, #40]
  402f14:	mov	w2, #0x24                  	// #36
  402f18:	ldr	x3, [sp, #32]
  402f1c:	bl	401d30 <log_oom_internal@plt>
  402f20:	stur	w0, [x29, #-4]
  402f24:	mov	w8, #0x1                   	// #1
  402f28:	stur	w8, [x29, #-48]
  402f2c:	b	402ffc <track_pid+0x240>
  402f30:	ldur	x0, [x29, #-24]
  402f34:	bl	401d40 <strdup@plt>
  402f38:	stur	x0, [x29, #-40]
  402f3c:	ldur	x8, [x29, #-40]
  402f40:	cbnz	x8, 402f6c <track_pid+0x1b0>
  402f44:	mov	w8, wzr
  402f48:	mov	w0, w8
  402f4c:	ldr	x1, [sp, #40]
  402f50:	mov	w2, #0x28                  	// #40
  402f54:	ldr	x3, [sp, #32]
  402f58:	bl	401d30 <log_oom_internal@plt>
  402f5c:	stur	w0, [x29, #-4]
  402f60:	mov	w8, #0x1                   	// #1
  402f64:	stur	w8, [x29, #-48]
  402f68:	b	402ffc <track_pid+0x240>
  402f6c:	ldur	x8, [x29, #-16]
  402f70:	ldr	x0, [x8]
  402f74:	ldur	w9, [x29, #-28]
  402f78:	str	x0, [sp, #16]
  402f7c:	mov	w0, w9
  402f80:	bl	402d28 <PID_TO_PTR>
  402f84:	ldur	x2, [x29, #-40]
  402f88:	ldr	x8, [sp, #16]
  402f8c:	str	x0, [sp, #8]
  402f90:	mov	x0, x8
  402f94:	ldr	x1, [sp, #8]
  402f98:	bl	401d50 <hashmap_put@plt>
  402f9c:	stur	w0, [x29, #-44]
  402fa0:	ldur	w9, [x29, #-44]
  402fa4:	cmp	w9, #0x0
  402fa8:	cset	w9, ge  // ge = tcont
  402fac:	tbnz	w9, #0, 402fd8 <track_pid+0x21c>
  402fb0:	mov	w8, wzr
  402fb4:	mov	w0, w8
  402fb8:	ldr	x1, [sp, #40]
  402fbc:	mov	w2, #0x2c                  	// #44
  402fc0:	ldr	x3, [sp, #32]
  402fc4:	bl	401d30 <log_oom_internal@plt>
  402fc8:	stur	w0, [x29, #-4]
  402fcc:	mov	w8, #0x1                   	// #1
  402fd0:	stur	w8, [x29, #-48]
  402fd4:	b	402ffc <track_pid+0x240>
  402fd8:	ldur	x8, [x29, #-40]
  402fdc:	str	x8, [sp, #56]
  402fe0:	mov	x8, xzr
  402fe4:	stur	x8, [x29, #-40]
  402fe8:	ldr	x8, [sp, #56]
  402fec:	str	x8, [sp, #48]
  402ff0:	stur	wzr, [x29, #-4]
  402ff4:	mov	w9, #0x1                   	// #1
  402ff8:	stur	w9, [x29, #-48]
  402ffc:	sub	x0, x29, #0x28
  403000:	bl	402cd4 <freep>
  403004:	ldur	w0, [x29, #-4]
  403008:	ldp	x29, x30, [sp, #112]
  40300c:	add	sp, sp, #0x80
  403010:	ret

0000000000403014 <pid_is_valid>:
  403014:	sub	sp, sp, #0x10
  403018:	str	w0, [sp, #12]
  40301c:	ldr	w8, [sp, #12]
  403020:	cmp	w8, #0x0
  403024:	cset	w8, gt
  403028:	and	w0, w8, #0x1
  40302c:	add	sp, sp, #0x10
  403030:	ret

0000000000403034 <hashmap_size>:
  403034:	sub	sp, sp, #0x20
  403038:	stp	x29, x30, [sp, #16]
  40303c:	add	x29, sp, #0x10
  403040:	str	x0, [sp, #8]
  403044:	ldr	x0, [sp, #8]
  403048:	bl	401d60 <internal_hashmap_size@plt>
  40304c:	ldp	x29, x30, [sp, #16]
  403050:	add	sp, sp, #0x20
  403054:	ret

0000000000403058 <ALIGN_TO>:
  403058:	sub	sp, sp, #0x10
  40305c:	str	x0, [sp, #8]
  403060:	str	x1, [sp]
  403064:	ldr	x8, [sp, #8]
  403068:	ldr	x9, [sp]
  40306c:	add	x8, x8, x9
  403070:	subs	x8, x8, #0x1
  403074:	ldr	x9, [sp]
  403078:	subs	x9, x9, #0x1
  40307c:	bic	x0, x8, x9
  403080:	add	sp, sp, #0x10
  403084:	ret

0000000000403088 <mount_point_is_api>:
  403088:	sub	sp, sp, #0x30
  40308c:	stp	x29, x30, [sp, #32]
  403090:	add	x29, sp, #0x20
  403094:	str	x0, [sp, #16]
  403098:	str	wzr, [sp, #12]
  40309c:	ldr	w8, [sp, #12]
  4030a0:	mov	w9, w8
  4030a4:	cmp	x9, #0x14
  4030a8:	b.cs	4030fc <mount_point_is_api+0x74>  // b.hs, b.nlast
  4030ac:	ldr	x0, [sp, #16]
  4030b0:	ldr	w8, [sp, #12]
  4030b4:	mov	w9, w8
  4030b8:	mov	x10, #0x38                  	// #56
  4030bc:	mul	x9, x10, x9
  4030c0:	adrp	x10, 41f000 <__FRAME_END__+0x195b0>
  4030c4:	add	x10, x10, #0x6b8
  4030c8:	add	x9, x10, x9
  4030cc:	ldr	x1, [x9, #8]
  4030d0:	bl	401c30 <path_equal@plt>
  4030d4:	tbnz	w0, #0, 4030dc <mount_point_is_api+0x54>
  4030d8:	b	4030ec <mount_point_is_api+0x64>
  4030dc:	mov	w8, #0x1                   	// #1
  4030e0:	and	w8, w8, #0x1
  4030e4:	sturb	w8, [x29, #-1]
  4030e8:	b	40311c <mount_point_is_api+0x94>
  4030ec:	ldr	w8, [sp, #12]
  4030f0:	add	w8, w8, #0x1
  4030f4:	str	w8, [sp, #12]
  4030f8:	b	40309c <mount_point_is_api+0x14>
  4030fc:	ldr	x0, [sp, #16]
  403100:	adrp	x1, 405000 <_fini+0x24>
  403104:	add	x1, x1, #0x200
  403108:	bl	401d70 <path_startswith@plt>
  40310c:	cmp	x0, #0x0
  403110:	cset	w8, ne  // ne = any
  403114:	and	w8, w8, #0x1
  403118:	sturb	w8, [x29, #-1]
  40311c:	ldurb	w8, [x29, #-1]
  403120:	and	w0, w8, #0x1
  403124:	ldp	x29, x30, [sp, #32]
  403128:	add	sp, sp, #0x30
  40312c:	ret

0000000000403130 <mount_point_ignore>:
  403130:	sub	sp, sp, #0x30
  403134:	stp	x29, x30, [sp, #32]
  403138:	add	x29, sp, #0x20
  40313c:	adrp	x8, 405000 <_fini+0x24>
  403140:	add	x8, x8, #0x927
  403144:	str	x0, [sp, #16]
  403148:	str	x8, [sp, #8]
  40314c:	ldr	x8, [sp, #8]
  403150:	mov	w9, #0x0                   	// #0
  403154:	str	w9, [sp, #4]
  403158:	cbz	x8, 403170 <mount_point_ignore+0x40>
  40315c:	ldr	x8, [sp, #8]
  403160:	ldrb	w9, [x8]
  403164:	cmp	w9, #0x0
  403168:	cset	w9, ne  // ne = any
  40316c:	str	w9, [sp, #4]
  403170:	ldr	w8, [sp, #4]
  403174:	tbnz	w8, #0, 40317c <mount_point_ignore+0x4c>
  403178:	b	4031bc <mount_point_ignore+0x8c>
  40317c:	ldr	x0, [sp, #16]
  403180:	ldr	x1, [sp, #8]
  403184:	bl	401c30 <path_equal@plt>
  403188:	tbnz	w0, #0, 403190 <mount_point_ignore+0x60>
  40318c:	b	4031a0 <mount_point_ignore+0x70>
  403190:	mov	w8, #0x1                   	// #1
  403194:	and	w8, w8, #0x1
  403198:	sturb	w8, [x29, #-1]
  40319c:	b	4031c8 <mount_point_ignore+0x98>
  4031a0:	ldr	x0, [sp, #8]
  4031a4:	mov	w8, wzr
  4031a8:	mov	w1, w8
  4031ac:	bl	401d80 <strchr@plt>
  4031b0:	add	x9, x0, #0x1
  4031b4:	str	x9, [sp, #8]
  4031b8:	b	40314c <mount_point_ignore+0x1c>
  4031bc:	mov	w8, wzr
  4031c0:	and	w8, w8, #0x1
  4031c4:	sturb	w8, [x29, #-1]
  4031c8:	ldurb	w8, [x29, #-1]
  4031cc:	and	w0, w8, #0x1
  4031d0:	ldp	x29, x30, [sp, #32]
  4031d4:	add	sp, sp, #0x30
  4031d8:	ret

00000000004031dc <mount_setup_early>:
  4031dc:	stp	x29, x30, [sp, #-16]!
  4031e0:	mov	x29, sp
  4031e4:	mov	w0, #0x5                   	// #5
  4031e8:	mov	w8, wzr
  4031ec:	and	w1, w8, #0x1
  4031f0:	bl	4031fc <mount_points_setup>
  4031f4:	ldp	x29, x30, [sp], #16
  4031f8:	ret

00000000004031fc <mount_points_setup>:
  4031fc:	sub	sp, sp, #0x30
  403200:	stp	x29, x30, [sp, #32]
  403204:	add	x29, sp, #0x20
  403208:	mov	w8, #0x1                   	// #1
  40320c:	stur	w0, [x29, #-4]
  403210:	and	w8, w1, w8
  403214:	sturb	w8, [x29, #-5]
  403218:	str	wzr, [sp, #16]
  40321c:	stur	wzr, [x29, #-12]
  403220:	ldur	w8, [x29, #-12]
  403224:	ldur	w9, [x29, #-4]
  403228:	cmp	w8, w9
  40322c:	b.cs	40328c <mount_points_setup+0x90>  // b.hs, b.nlast
  403230:	ldur	w8, [x29, #-12]
  403234:	mov	w9, w8
  403238:	mov	x10, #0x38                  	// #56
  40323c:	mul	x9, x10, x9
  403240:	adrp	x10, 41f000 <__FRAME_END__+0x195b0>
  403244:	add	x10, x10, #0x6b8
  403248:	add	x0, x10, x9
  40324c:	ldurb	w8, [x29, #-5]
  403250:	and	w1, w8, #0x1
  403254:	bl	40385c <mount_one>
  403258:	str	w0, [sp, #12]
  40325c:	ldr	w8, [sp, #12]
  403260:	cbz	w8, 40327c <mount_points_setup+0x80>
  403264:	ldr	w8, [sp, #16]
  403268:	cmp	w8, #0x0
  40326c:	cset	w8, lt  // lt = tstop
  403270:	tbnz	w8, #0, 40327c <mount_points_setup+0x80>
  403274:	ldr	w8, [sp, #12]
  403278:	str	w8, [sp, #16]
  40327c:	ldur	w8, [x29, #-12]
  403280:	add	w8, w8, #0x1
  403284:	stur	w8, [x29, #-12]
  403288:	b	403220 <mount_points_setup+0x24>
  40328c:	ldr	w0, [sp, #16]
  403290:	ldp	x29, x30, [sp, #32]
  403294:	add	sp, sp, #0x30
  403298:	ret

000000000040329c <mount_cgroup_controllers>:
  40329c:	sub	sp, sp, #0xd0
  4032a0:	stp	x29, x30, [sp, #192]
  4032a4:	add	x29, sp, #0xc0
  4032a8:	mov	x8, xzr
  4032ac:	adrp	x9, 405000 <_fini+0x24>
  4032b0:	add	x9, x9, #0x210
  4032b4:	add	x9, x9, #0x3
  4032b8:	adrp	x10, 405000 <_fini+0x24>
  4032bc:	add	x10, x10, #0x22a
  4032c0:	stur	x8, [x29, #-16]
  4032c4:	str	x9, [sp, #32]
  4032c8:	str	x10, [sp, #24]
  4032cc:	bl	401d90 <cg_is_legacy_wanted@plt>
  4032d0:	tbnz	w0, #0, 4032e4 <mount_cgroup_controllers+0x48>
  4032d4:	stur	wzr, [x29, #-4]
  4032d8:	mov	w8, #0x1                   	// #1
  4032dc:	stur	w8, [x29, #-24]
  4032e0:	b	403640 <mount_cgroup_controllers+0x3a4>
  4032e4:	sub	x0, x29, #0x10
  4032e8:	bl	401da0 <cg_kernel_controllers@plt>
  4032ec:	stur	w0, [x29, #-20]
  4032f0:	ldur	w8, [x29, #-20]
  4032f4:	cmp	w8, #0x0
  4032f8:	cset	w8, ge  // ge = tcont
  4032fc:	tbnz	w8, #0, 40338c <mount_cgroup_controllers+0xf0>
  403300:	mov	w8, #0x3                   	// #3
  403304:	stur	w8, [x29, #-28]
  403308:	ldur	w8, [x29, #-20]
  40330c:	stur	w8, [x29, #-32]
  403310:	stur	wzr, [x29, #-36]
  403314:	ldur	w0, [x29, #-36]
  403318:	bl	401bc0 <log_get_max_level_realm@plt>
  40331c:	ldur	w8, [x29, #-28]
  403320:	and	w8, w8, #0x7
  403324:	cmp	w0, w8
  403328:	b.lt	40335c <mount_cgroup_controllers+0xc0>  // b.tstop
  40332c:	ldur	w8, [x29, #-36]
  403330:	ldur	w9, [x29, #-28]
  403334:	orr	w0, w9, w8, lsl #10
  403338:	ldur	w1, [x29, #-32]
  40333c:	ldr	x2, [sp, #32]
  403340:	mov	w3, #0x129                 	// #297
  403344:	ldr	x4, [sp, #24]
  403348:	adrp	x5, 405000 <_fini+0x24>
  40334c:	add	x5, x5, #0x243
  403350:	bl	401bd0 <log_internal_realm@plt>
  403354:	str	w0, [sp, #20]
  403358:	b	403370 <mount_cgroup_controllers+0xd4>
  40335c:	ldur	w0, [x29, #-32]
  403360:	bl	401be0 <abs@plt>
  403364:	mov	w8, wzr
  403368:	subs	w8, w8, w0, uxtb
  40336c:	str	w8, [sp, #20]
  403370:	ldr	w8, [sp, #20]
  403374:	stur	w8, [x29, #-40]
  403378:	ldur	w8, [x29, #-40]
  40337c:	stur	w8, [x29, #-4]
  403380:	mov	w8, #0x1                   	// #1
  403384:	stur	w8, [x29, #-24]
  403388:	b	403640 <mount_cgroup_controllers+0x3a4>
  40338c:	mov	x8, xzr
  403390:	stur	x8, [x29, #-48]
  403394:	stur	x8, [x29, #-56]
  403398:	stur	x8, [x29, #-64]
  40339c:	add	x8, sp, #0x40
  4033a0:	mov	x0, x8
  4033a4:	mov	w9, wzr
  4033a8:	mov	w1, w9
  4033ac:	mov	x2, #0x38                  	// #56
  4033b0:	str	x8, [sp, #8]
  4033b4:	bl	401c50 <memset@plt>
  4033b8:	adrp	x8, 405000 <_fini+0x24>
  4033bc:	add	x8, x8, #0x26e
  4033c0:	str	x8, [sp, #64]
  4033c4:	ldr	x10, [sp, #8]
  4033c8:	str	x8, [x10, #16]
  4033cc:	mov	x8, #0xe                   	// #14
  4033d0:	str	x8, [sp, #96]
  4033d4:	mov	w9, #0x2                   	// #2
  4033d8:	str	w9, [sp, #112]
  4033dc:	ldur	x0, [x29, #-16]
  4033e0:	bl	4036b4 <set_steal_first>
  4033e4:	stur	x0, [x29, #-56]
  4033e8:	ldur	x8, [x29, #-56]
  4033ec:	cbnz	x8, 4033fc <mount_cgroup_controllers+0x160>
  4033f0:	mov	w8, #0x2                   	// #2
  4033f4:	stur	w8, [x29, #-24]
  4033f8:	b	4035cc <mount_cgroup_controllers+0x330>
  4033fc:	ldur	x0, [x29, #-56]
  403400:	bl	4036e8 <join_with>
  403404:	stur	x0, [x29, #-72]
  403408:	ldur	x8, [x29, #-72]
  40340c:	cbz	x8, 4034e0 <mount_cgroup_controllers+0x244>
  403410:	mov	x8, xzr
  403414:	str	x8, [sp, #56]
  403418:	ldur	x0, [x29, #-16]
  40341c:	ldur	x1, [x29, #-72]
  403420:	bl	403830 <set_remove>
  403424:	str	x0, [sp, #56]
  403428:	ldr	x8, [sp, #56]
  40342c:	cbz	x8, 4034bc <mount_cgroup_controllers+0x220>
  403430:	ldur	x0, [x29, #-56]
  403434:	ldur	x1, [x29, #-72]
  403438:	bl	401db0 <strcmp@plt>
  40343c:	cmp	w0, #0x0
  403440:	cset	w8, ge  // ge = tcont
  403444:	tbnz	w8, #0, 40346c <mount_cgroup_controllers+0x1d0>
  403448:	ldur	x0, [x29, #-56]
  40344c:	ldur	x2, [x29, #-72]
  403450:	adrp	x1, 405000 <_fini+0x24>
  403454:	add	x1, x1, #0x275
  403458:	mov	x8, xzr
  40345c:	mov	x3, x8
  403460:	bl	401dc0 <strjoin_real@plt>
  403464:	stur	x0, [x29, #-48]
  403468:	b	40348c <mount_cgroup_controllers+0x1f0>
  40346c:	ldur	x0, [x29, #-72]
  403470:	ldur	x2, [x29, #-56]
  403474:	adrp	x1, 405000 <_fini+0x24>
  403478:	add	x1, x1, #0x275
  40347c:	mov	x8, xzr
  403480:	mov	x3, x8
  403484:	bl	401dc0 <strjoin_real@plt>
  403488:	stur	x0, [x29, #-48]
  40348c:	ldur	x8, [x29, #-48]
  403490:	cbnz	x8, 4034bc <mount_cgroup_controllers+0x220>
  403494:	mov	w8, wzr
  403498:	mov	w0, w8
  40349c:	ldr	x1, [sp, #32]
  4034a0:	mov	w2, #0x148                 	// #328
  4034a4:	ldr	x3, [sp, #24]
  4034a8:	bl	401d30 <log_oom_internal@plt>
  4034ac:	stur	w0, [x29, #-4]
  4034b0:	mov	w8, #0x1                   	// #1
  4034b4:	stur	w8, [x29, #-24]
  4034b8:	b	4034c0 <mount_cgroup_controllers+0x224>
  4034bc:	stur	wzr, [x29, #-24]
  4034c0:	add	x0, sp, #0x38
  4034c4:	bl	40368c <freep>
  4034c8:	ldur	w8, [x29, #-24]
  4034cc:	cmp	w8, #0x0
  4034d0:	cset	w8, eq  // eq = none
  4034d4:	eor	w8, w8, #0x1
  4034d8:	tbnz	w8, #0, 4035cc <mount_cgroup_controllers+0x330>
  4034dc:	b	4034e0 <mount_cgroup_controllers+0x244>
  4034e0:	ldur	x8, [x29, #-48]
  4034e4:	cbnz	x8, 403508 <mount_cgroup_controllers+0x26c>
  4034e8:	ldur	x8, [x29, #-56]
  4034ec:	str	x8, [sp, #48]
  4034f0:	mov	x8, xzr
  4034f4:	stur	x8, [x29, #-56]
  4034f8:	ldr	x8, [sp, #48]
  4034fc:	str	x8, [sp, #40]
  403500:	ldr	x8, [sp, #40]
  403504:	stur	x8, [x29, #-48]
  403508:	ldur	x1, [x29, #-48]
  40350c:	adrp	x0, 405000 <_fini+0x24>
  403510:	add	x0, x0, #0x277
  403514:	mov	x8, #0xffffffffffffffff    	// #-1
  403518:	mov	x2, x8
  40351c:	bl	401dd0 <path_join_internal@plt>
  403520:	stur	x0, [x29, #-64]
  403524:	ldur	x8, [x29, #-64]
  403528:	cbnz	x8, 403554 <mount_cgroup_controllers+0x2b8>
  40352c:	mov	w8, wzr
  403530:	mov	w0, w8
  403534:	ldr	x1, [sp, #32]
  403538:	mov	w2, #0x152                 	// #338
  40353c:	ldr	x3, [sp, #24]
  403540:	bl	401d30 <log_oom_internal@plt>
  403544:	stur	w0, [x29, #-4]
  403548:	mov	w8, #0x1                   	// #1
  40354c:	stur	w8, [x29, #-24]
  403550:	b	4035cc <mount_cgroup_controllers+0x330>
  403554:	ldur	x8, [x29, #-64]
  403558:	add	x9, sp, #0x40
  40355c:	str	x8, [x9, #8]
  403560:	ldur	x8, [x29, #-48]
  403564:	str	x8, [x9, #24]
  403568:	mov	x0, x9
  40356c:	mov	w10, #0x1                   	// #1
  403570:	and	w1, w10, #0x1
  403574:	bl	40385c <mount_one>
  403578:	stur	w0, [x29, #-20]
  40357c:	ldur	w10, [x29, #-20]
  403580:	cmp	w10, #0x0
  403584:	cset	w10, ge  // ge = tcont
  403588:	tbnz	w10, #0, 4035a0 <mount_cgroup_controllers+0x304>
  40358c:	ldur	w8, [x29, #-20]
  403590:	stur	w8, [x29, #-4]
  403594:	mov	w8, #0x1                   	// #1
  403598:	stur	w8, [x29, #-24]
  40359c:	b	4035cc <mount_cgroup_controllers+0x330>
  4035a0:	ldur	x8, [x29, #-56]
  4035a4:	cbz	x8, 4035b4 <mount_cgroup_controllers+0x318>
  4035a8:	ldur	x0, [x29, #-48]
  4035ac:	ldur	x1, [x29, #-56]
  4035b0:	bl	403dc4 <symlink_controller>
  4035b4:	ldur	x8, [x29, #-72]
  4035b8:	cbz	x8, 4035c8 <mount_cgroup_controllers+0x32c>
  4035bc:	ldur	x0, [x29, #-48]
  4035c0:	ldur	x1, [x29, #-72]
  4035c4:	bl	403dc4 <symlink_controller>
  4035c8:	stur	wzr, [x29, #-24]
  4035cc:	sub	x0, x29, #0x40
  4035d0:	bl	40368c <freep>
  4035d4:	sub	x0, x29, #0x38
  4035d8:	bl	40368c <freep>
  4035dc:	sub	x0, x29, #0x30
  4035e0:	bl	40368c <freep>
  4035e4:	ldur	w8, [x29, #-24]
  4035e8:	str	w8, [sp, #4]
  4035ec:	cbz	w8, 403604 <mount_cgroup_controllers+0x368>
  4035f0:	b	4035f4 <mount_cgroup_controllers+0x358>
  4035f4:	ldr	w8, [sp, #4]
  4035f8:	cmp	w8, #0x2
  4035fc:	b.eq	403608 <mount_cgroup_controllers+0x36c>  // b.none
  403600:	b	403640 <mount_cgroup_controllers+0x3a4>
  403604:	b	40338c <mount_cgroup_controllers+0xf0>
  403608:	adrp	x8, 405000 <_fini+0x24>
  40360c:	add	x8, x8, #0x286
  403610:	mov	x0, x8
  403614:	adrp	x1, 405000 <_fini+0x24>
  403618:	add	x1, x1, #0x277
  40361c:	mov	x2, x8
  403620:	mov	x3, #0x2f                  	// #47
  403624:	movk	x3, #0x100, lsl #16
  403628:	adrp	x4, 405000 <_fini+0x24>
  40362c:	add	x4, x4, #0x28c
  403630:	bl	401de0 <mount@plt>
  403634:	stur	wzr, [x29, #-4]
  403638:	mov	w9, #0x1                   	// #1
  40363c:	stur	w9, [x29, #-24]
  403640:	sub	x0, x29, #0x10
  403644:	bl	403658 <set_free_freep>
  403648:	ldur	w0, [x29, #-4]
  40364c:	ldp	x29, x30, [sp, #192]
  403650:	add	sp, sp, #0xd0
  403654:	ret

0000000000403658 <set_free_freep>:
  403658:	sub	sp, sp, #0x20
  40365c:	stp	x29, x30, [sp, #16]
  403660:	add	x29, sp, #0x10
  403664:	str	x0, [sp, #8]
  403668:	ldr	x8, [sp, #8]
  40366c:	ldr	x8, [x8]
  403670:	cbz	x8, 403680 <set_free_freep+0x28>
  403674:	ldr	x8, [sp, #8]
  403678:	ldr	x0, [x8]
  40367c:	bl	404de4 <set_free_free>
  403680:	ldp	x29, x30, [sp, #16]
  403684:	add	sp, sp, #0x20
  403688:	ret

000000000040368c <freep>:
  40368c:	sub	sp, sp, #0x20
  403690:	stp	x29, x30, [sp, #16]
  403694:	add	x29, sp, #0x10
  403698:	str	x0, [sp, #8]
  40369c:	ldr	x8, [sp, #8]
  4036a0:	ldr	x0, [x8]
  4036a4:	bl	401cd0 <free@plt>
  4036a8:	ldp	x29, x30, [sp, #16]
  4036ac:	add	sp, sp, #0x20
  4036b0:	ret

00000000004036b4 <set_steal_first>:
  4036b4:	sub	sp, sp, #0x20
  4036b8:	stp	x29, x30, [sp, #16]
  4036bc:	add	x29, sp, #0x10
  4036c0:	mov	x8, xzr
  4036c4:	str	x0, [sp, #8]
  4036c8:	ldr	x0, [sp, #8]
  4036cc:	mov	w9, #0x1                   	// #1
  4036d0:	and	w1, w9, #0x1
  4036d4:	mov	x2, x8
  4036d8:	bl	401df0 <internal_hashmap_first_key_and_value@plt>
  4036dc:	ldp	x29, x30, [sp, #16]
  4036e0:	add	sp, sp, #0x20
  4036e4:	ret

00000000004036e8 <join_with>:
  4036e8:	sub	sp, sp, #0x40
  4036ec:	stp	x29, x30, [sp, #48]
  4036f0:	add	x29, sp, #0x30
  4036f4:	adrp	x8, 405000 <_fini+0x24>
  4036f8:	add	x8, x8, #0x210
  4036fc:	add	x2, x8, #0x3
  403700:	stur	x0, [x29, #-16]
  403704:	str	x2, [sp, #8]
  403708:	ldur	x8, [x29, #-16]
  40370c:	cmp	x8, #0x0
  403710:	cset	w9, ne  // ne = any
  403714:	mov	w10, #0x1                   	// #1
  403718:	eor	w9, w9, #0x1
  40371c:	eor	w9, w9, w10
  403720:	eor	w9, w9, w10
  403724:	and	w9, w9, #0x1
  403728:	mov	w0, w9
  40372c:	sxtw	x8, w0
  403730:	cbz	x8, 403758 <join_with+0x70>
  403734:	mov	w8, wzr
  403738:	mov	w0, w8
  40373c:	adrp	x1, 405000 <_fini+0x24>
  403740:	add	x1, x1, #0x4fd
  403744:	ldr	x2, [sp, #8]
  403748:	mov	w3, #0xf5                  	// #245
  40374c:	adrp	x4, 405000 <_fini+0x24>
  403750:	add	x4, x4, #0x508
  403754:	bl	401d10 <log_assert_failed_realm@plt>
  403758:	adrp	x8, 41f000 <__FRAME_END__+0x195b0>
  40375c:	add	x8, x8, #0xb18
  403760:	str	x8, [sp, #24]
  403764:	ldr	x8, [sp, #24]
  403768:	add	x8, x8, #0x8
  40376c:	str	x8, [sp, #16]
  403770:	ldr	x8, [sp, #24]
  403774:	mov	w9, #0x0                   	// #0
  403778:	str	w9, [sp, #4]
  40377c:	cbz	x8, 4037a8 <join_with+0xc0>
  403780:	ldr	x8, [sp, #24]
  403784:	ldr	x8, [x8]
  403788:	mov	w9, #0x0                   	// #0
  40378c:	str	w9, [sp, #4]
  403790:	cbz	x8, 4037a8 <join_with+0xc0>
  403794:	ldr	x8, [sp, #16]
  403798:	ldr	x8, [x8]
  40379c:	cmp	x8, #0x0
  4037a0:	cset	w9, ne  // ne = any
  4037a4:	str	w9, [sp, #4]
  4037a8:	ldr	w8, [sp, #4]
  4037ac:	tbnz	w8, #0, 4037b4 <join_with+0xcc>
  4037b0:	b	403818 <join_with+0x130>
  4037b4:	ldur	x0, [x29, #-16]
  4037b8:	ldr	x8, [sp, #24]
  4037bc:	ldr	x1, [x8]
  4037c0:	bl	401db0 <strcmp@plt>
  4037c4:	cbnz	w0, 4037d8 <join_with+0xf0>
  4037c8:	ldr	x8, [sp, #16]
  4037cc:	ldr	x8, [x8]
  4037d0:	stur	x8, [x29, #-8]
  4037d4:	b	403820 <join_with+0x138>
  4037d8:	ldur	x0, [x29, #-16]
  4037dc:	ldr	x8, [sp, #16]
  4037e0:	ldr	x1, [x8]
  4037e4:	bl	401db0 <strcmp@plt>
  4037e8:	cbnz	w0, 4037fc <join_with+0x114>
  4037ec:	ldr	x8, [sp, #24]
  4037f0:	ldr	x8, [x8]
  4037f4:	stur	x8, [x29, #-8]
  4037f8:	b	403820 <join_with+0x138>
  4037fc:	ldr	x8, [sp, #24]
  403800:	add	x8, x8, #0x10
  403804:	str	x8, [sp, #24]
  403808:	ldr	x8, [sp, #24]
  40380c:	add	x8, x8, #0x8
  403810:	str	x8, [sp, #16]
  403814:	b	403770 <join_with+0x88>
  403818:	mov	x8, xzr
  40381c:	stur	x8, [x29, #-8]
  403820:	ldur	x0, [x29, #-8]
  403824:	ldp	x29, x30, [sp, #48]
  403828:	add	sp, sp, #0x40
  40382c:	ret

0000000000403830 <set_remove>:
  403830:	sub	sp, sp, #0x20
  403834:	stp	x29, x30, [sp, #16]
  403838:	add	x29, sp, #0x10
  40383c:	str	x0, [sp, #8]
  403840:	str	x1, [sp]
  403844:	ldr	x0, [sp, #8]
  403848:	ldr	x1, [sp]
  40384c:	bl	401ce0 <internal_hashmap_remove@plt>
  403850:	ldp	x29, x30, [sp, #16]
  403854:	add	sp, sp, #0x20
  403858:	ret

000000000040385c <mount_one>:
  40385c:	sub	sp, sp, #0xe0
  403860:	stp	x29, x30, [sp, #208]
  403864:	add	x29, sp, #0xd0
  403868:	mov	w8, #0x1                   	// #1
  40386c:	adrp	x9, 405000 <_fini+0x24>
  403870:	add	x9, x9, #0x210
  403874:	add	x9, x9, #0x3
  403878:	adrp	x10, 405000 <_fini+0x24>
  40387c:	add	x10, x10, #0x557
  403880:	stur	x0, [x29, #-16]
  403884:	and	w8, w1, w8
  403888:	sturb	w8, [x29, #-17]
  40388c:	str	x9, [sp, #104]
  403890:	str	x10, [sp, #96]
  403894:	ldur	x8, [x29, #-16]
  403898:	cmp	x8, #0x0
  40389c:	cset	w9, ne  // ne = any
  4038a0:	mov	w10, #0x1                   	// #1
  4038a4:	eor	w9, w9, #0x1
  4038a8:	eor	w9, w9, w10
  4038ac:	eor	w9, w9, w10
  4038b0:	and	w9, w9, #0x1
  4038b4:	mov	w0, w9
  4038b8:	sxtw	x8, w0
  4038bc:	cbz	x8, 4038e4 <mount_one+0x88>
  4038c0:	mov	w8, wzr
  4038c4:	mov	w0, w8
  4038c8:	adrp	x1, 405000 <_fini+0x24>
  4038cc:	add	x1, x1, #0x52c
  4038d0:	ldr	x2, [sp, #104]
  4038d4:	mov	w3, #0x94                  	// #148
  4038d8:	adrp	x4, 405000 <_fini+0x24>
  4038dc:	add	x4, x4, #0x52e
  4038e0:	bl	401d10 <log_assert_failed_realm@plt>
  4038e4:	ldur	x8, [x29, #-16]
  4038e8:	ldr	w9, [x8, #48]
  4038ec:	mov	w10, #0x7                   	// #7
  4038f0:	mov	w11, #0x3                   	// #3
  4038f4:	tst	w9, #0x1
  4038f8:	csel	w9, w11, w10, ne  // ne = any
  4038fc:	stur	w9, [x29, #-28]
  403900:	ldur	x8, [x29, #-16]
  403904:	ldr	x8, [x8, #40]
  403908:	cbz	x8, 403924 <mount_one+0xc8>
  40390c:	ldur	x8, [x29, #-16]
  403910:	ldr	x8, [x8, #40]
  403914:	blr	x8
  403918:	tbnz	w0, #0, 403924 <mount_one+0xc8>
  40391c:	stur	wzr, [x29, #-4]
  403920:	b	403db4 <mount_one+0x558>
  403924:	ldurb	w8, [x29, #-17]
  403928:	tbnz	w8, #0, 403930 <mount_one+0xd4>
  40392c:	b	403940 <mount_one+0xe4>
  403930:	ldur	x8, [x29, #-16]
  403934:	ldr	x0, [x8, #8]
  403938:	mov	w1, #0x3                   	// #3
  40393c:	bl	401e00 <label_fix@plt>
  403940:	ldur	x8, [x29, #-16]
  403944:	ldr	x0, [x8, #8]
  403948:	mov	x8, xzr
  40394c:	mov	x1, x8
  403950:	mov	w2, #0x400                 	// #1024
  403954:	bl	401e10 <path_is_mount_point@plt>
  403958:	stur	w0, [x29, #-24]
  40395c:	ldur	w9, [x29, #-24]
  403960:	cmp	w9, #0x0
  403964:	cset	w9, ge  // ge = tcont
  403968:	tbnz	w9, #0, 403a2c <mount_one+0x1d0>
  40396c:	ldur	w8, [x29, #-24]
  403970:	mov	w9, #0xfffffffe            	// #-2
  403974:	cmp	w8, w9
  403978:	b.eq	403a2c <mount_one+0x1d0>  // b.none
  40397c:	ldur	w8, [x29, #-28]
  403980:	stur	w8, [x29, #-32]
  403984:	ldur	w8, [x29, #-24]
  403988:	stur	w8, [x29, #-36]
  40398c:	stur	wzr, [x29, #-40]
  403990:	ldur	w0, [x29, #-40]
  403994:	bl	401bc0 <log_get_max_level_realm@plt>
  403998:	ldur	w8, [x29, #-32]
  40399c:	and	w8, w8, #0x7
  4039a0:	cmp	w0, w8
  4039a4:	b.lt	4039e0 <mount_one+0x184>  // b.tstop
  4039a8:	ldur	w8, [x29, #-40]
  4039ac:	ldur	w9, [x29, #-32]
  4039b0:	orr	w0, w9, w8, lsl #10
  4039b4:	ldur	w1, [x29, #-36]
  4039b8:	ldur	x10, [x29, #-16]
  4039bc:	ldr	x6, [x10, #8]
  4039c0:	ldr	x2, [sp, #104]
  4039c4:	mov	w3, #0xa1                  	// #161
  4039c8:	ldr	x4, [sp, #96]
  4039cc:	adrp	x5, 405000 <_fini+0x24>
  4039d0:	add	x5, x5, #0x561
  4039d4:	bl	401bd0 <log_internal_realm@plt>
  4039d8:	str	w0, [sp, #92]
  4039dc:	b	4039f4 <mount_one+0x198>
  4039e0:	ldur	w0, [x29, #-36]
  4039e4:	bl	401be0 <abs@plt>
  4039e8:	mov	w8, wzr
  4039ec:	subs	w8, w8, w0, uxtb
  4039f0:	str	w8, [sp, #92]
  4039f4:	ldr	w8, [sp, #92]
  4039f8:	stur	w8, [x29, #-44]
  4039fc:	ldur	x9, [x29, #-16]
  403a00:	ldr	w8, [x9, #48]
  403a04:	and	w8, w8, #0x1
  403a08:	cbz	w8, 403a18 <mount_one+0x1bc>
  403a0c:	ldur	w8, [x29, #-24]
  403a10:	str	w8, [sp, #88]
  403a14:	b	403a20 <mount_one+0x1c4>
  403a18:	mov	w8, wzr
  403a1c:	str	w8, [sp, #88]
  403a20:	ldr	w8, [sp, #88]
  403a24:	stur	w8, [x29, #-4]
  403a28:	b	403db4 <mount_one+0x558>
  403a2c:	ldur	w8, [x29, #-24]
  403a30:	cmp	w8, #0x0
  403a34:	cset	w8, le
  403a38:	tbnz	w8, #0, 403a44 <mount_one+0x1e8>
  403a3c:	stur	wzr, [x29, #-4]
  403a40:	b	403db4 <mount_one+0x558>
  403a44:	ldur	x8, [x29, #-16]
  403a48:	ldr	w9, [x8, #48]
  403a4c:	and	w9, w9, #0x2
  403a50:	cbnz	w9, 403a6c <mount_one+0x210>
  403a54:	bl	401e20 <detect_container@plt>
  403a58:	cmp	w0, #0x0
  403a5c:	cset	w8, le
  403a60:	tbnz	w8, #0, 403a6c <mount_one+0x210>
  403a64:	stur	wzr, [x29, #-4]
  403a68:	b	403db4 <mount_one+0x558>
  403a6c:	ldurb	w8, [x29, #-17]
  403a70:	tbnz	w8, #0, 403a78 <mount_one+0x21c>
  403a74:	b	403a8c <mount_one+0x230>
  403a78:	ldur	x8, [x29, #-16]
  403a7c:	ldr	x0, [x8, #8]
  403a80:	mov	w1, #0x1ed                 	// #493
  403a84:	bl	401e30 <mkdir_p_label@plt>
  403a88:	b	403a9c <mount_one+0x240>
  403a8c:	ldur	x8, [x29, #-16]
  403a90:	ldr	x0, [x8, #8]
  403a94:	mov	w1, #0x1ed                 	// #493
  403a98:	bl	401e40 <mkdir_p@plt>
  403a9c:	mov	w8, #0x7                   	// #7
  403aa0:	stur	w8, [x29, #-48]
  403aa4:	stur	wzr, [x29, #-52]
  403aa8:	stur	wzr, [x29, #-56]
  403aac:	ldur	w0, [x29, #-56]
  403ab0:	bl	401bc0 <log_get_max_level_realm@plt>
  403ab4:	ldur	w8, [x29, #-48]
  403ab8:	and	w8, w8, #0x7
  403abc:	cmp	w0, w8
  403ac0:	b.lt	403b60 <mount_one+0x304>  // b.tstop
  403ac4:	ldur	w8, [x29, #-56]
  403ac8:	ldur	w9, [x29, #-48]
  403acc:	orr	w0, w9, w8, lsl #10
  403ad0:	ldur	w1, [x29, #-52]
  403ad4:	ldur	x10, [x29, #-16]
  403ad8:	ldr	x6, [x10]
  403adc:	ldur	x10, [x29, #-16]
  403ae0:	ldr	x7, [x10, #8]
  403ae4:	ldur	x10, [x29, #-16]
  403ae8:	ldr	x10, [x10, #16]
  403aec:	ldur	x11, [x29, #-16]
  403af0:	ldr	x11, [x11, #24]
  403af4:	str	w0, [sp, #84]
  403af8:	mov	x0, x11
  403afc:	str	w1, [sp, #80]
  403b00:	str	x6, [sp, #72]
  403b04:	str	x7, [sp, #64]
  403b08:	str	x10, [sp, #56]
  403b0c:	bl	404e18 <strna>
  403b10:	ldr	w8, [sp, #84]
  403b14:	str	x0, [sp, #48]
  403b18:	mov	w0, w8
  403b1c:	ldr	w1, [sp, #80]
  403b20:	ldr	x2, [sp, #104]
  403b24:	mov	w3, #0xb6                  	// #182
  403b28:	ldr	x4, [sp, #96]
  403b2c:	adrp	x5, 405000 <_fini+0x24>
  403b30:	add	x5, x5, #0x595
  403b34:	ldr	x6, [sp, #72]
  403b38:	ldr	x7, [sp, #64]
  403b3c:	mov	x10, sp
  403b40:	ldr	x11, [sp, #56]
  403b44:	str	x11, [x10]
  403b48:	mov	x10, sp
  403b4c:	ldr	x12, [sp, #48]
  403b50:	str	x12, [x10, #8]
  403b54:	bl	401bd0 <log_internal_realm@plt>
  403b58:	str	w0, [sp, #44]
  403b5c:	b	403b74 <mount_one+0x318>
  403b60:	ldur	w0, [x29, #-52]
  403b64:	bl	401be0 <abs@plt>
  403b68:	mov	w8, wzr
  403b6c:	subs	w8, w8, w0, uxtb
  403b70:	str	w8, [sp, #44]
  403b74:	ldr	w8, [sp, #44]
  403b78:	stur	w8, [x29, #-60]
  403b7c:	ldur	x9, [x29, #-16]
  403b80:	ldr	x0, [x9]
  403b84:	ldur	x9, [x29, #-16]
  403b88:	ldr	x1, [x9, #8]
  403b8c:	ldur	x9, [x29, #-16]
  403b90:	ldr	x2, [x9, #16]
  403b94:	ldur	x9, [x29, #-16]
  403b98:	ldr	x3, [x9, #32]
  403b9c:	ldur	x9, [x29, #-16]
  403ba0:	ldr	x4, [x9, #24]
  403ba4:	bl	401de0 <mount@plt>
  403ba8:	cmp	w0, #0x0
  403bac:	cset	w8, ge  // ge = tcont
  403bb0:	tbnz	w8, #0, 403c7c <mount_one+0x420>
  403bb4:	ldur	w8, [x29, #-28]
  403bb8:	stur	w8, [x29, #-64]
  403bbc:	bl	401c10 <__errno_location@plt>
  403bc0:	ldr	w8, [x0]
  403bc4:	stur	w8, [x29, #-68]
  403bc8:	stur	wzr, [x29, #-72]
  403bcc:	ldur	w0, [x29, #-72]
  403bd0:	bl	401bc0 <log_get_max_level_realm@plt>
  403bd4:	ldur	w8, [x29, #-64]
  403bd8:	and	w8, w8, #0x7
  403bdc:	cmp	w0, w8
  403be0:	b.lt	403c24 <mount_one+0x3c8>  // b.tstop
  403be4:	ldur	w8, [x29, #-72]
  403be8:	ldur	w9, [x29, #-64]
  403bec:	orr	w0, w9, w8, lsl #10
  403bf0:	ldur	w1, [x29, #-68]
  403bf4:	ldur	x10, [x29, #-16]
  403bf8:	ldr	x6, [x10, #16]
  403bfc:	ldur	x10, [x29, #-16]
  403c00:	ldr	x7, [x10, #8]
  403c04:	ldr	x2, [sp, #104]
  403c08:	mov	w3, #0xbd                  	// #189
  403c0c:	ldr	x4, [sp, #96]
  403c10:	adrp	x5, 405000 <_fini+0x24>
  403c14:	add	x5, x5, #0x5c3
  403c18:	bl	401bd0 <log_internal_realm@plt>
  403c1c:	str	w0, [sp, #40]
  403c20:	b	403c38 <mount_one+0x3dc>
  403c24:	ldur	w0, [x29, #-68]
  403c28:	bl	401be0 <abs@plt>
  403c2c:	mov	w8, wzr
  403c30:	subs	w8, w8, w0, uxtb
  403c34:	str	w8, [sp, #40]
  403c38:	ldr	w8, [sp, #40]
  403c3c:	stur	w8, [x29, #-76]
  403c40:	ldur	x9, [x29, #-16]
  403c44:	ldr	w8, [x9, #48]
  403c48:	and	w8, w8, #0x1
  403c4c:	cbz	w8, 403c68 <mount_one+0x40c>
  403c50:	bl	401c10 <__errno_location@plt>
  403c54:	ldr	w8, [x0]
  403c58:	mov	w9, wzr
  403c5c:	subs	w8, w9, w8
  403c60:	str	w8, [sp, #36]
  403c64:	b	403c70 <mount_one+0x414>
  403c68:	mov	w8, wzr
  403c6c:	str	w8, [sp, #36]
  403c70:	ldr	w8, [sp, #36]
  403c74:	stur	w8, [x29, #-4]
  403c78:	b	403db4 <mount_one+0x558>
  403c7c:	ldurb	w8, [x29, #-17]
  403c80:	tbnz	w8, #0, 403c88 <mount_one+0x42c>
  403c84:	b	403c9c <mount_one+0x440>
  403c88:	ldur	x8, [x29, #-16]
  403c8c:	ldr	x0, [x8, #8]
  403c90:	mov	w9, wzr
  403c94:	mov	w1, w9
  403c98:	bl	401e00 <label_fix@plt>
  403c9c:	ldur	x8, [x29, #-16]
  403ca0:	ldr	w9, [x8, #48]
  403ca4:	and	w9, w9, #0x4
  403ca8:	cbz	w9, 403dac <mount_one+0x550>
  403cac:	ldur	x8, [x29, #-16]
  403cb0:	ldr	x0, [x8, #8]
  403cb4:	mov	w1, #0x2                   	// #2
  403cb8:	bl	401e50 <access@plt>
  403cbc:	cmp	w0, #0x0
  403cc0:	cset	w9, ge  // ge = tcont
  403cc4:	tbnz	w9, #0, 403dac <mount_one+0x550>
  403cc8:	bl	401c10 <__errno_location@plt>
  403ccc:	ldr	w8, [x0]
  403cd0:	mov	w9, wzr
  403cd4:	subs	w8, w9, w8
  403cd8:	stur	w8, [x29, #-24]
  403cdc:	ldur	x10, [x29, #-16]
  403ce0:	ldr	x0, [x10, #8]
  403ce4:	bl	401e60 <umount@plt>
  403ce8:	ldur	x10, [x29, #-16]
  403cec:	ldr	x10, [x10, #8]
  403cf0:	mov	x0, x10
  403cf4:	bl	401e70 <rmdir@plt>
  403cf8:	ldur	w8, [x29, #-28]
  403cfc:	stur	w8, [x29, #-80]
  403d00:	ldur	w8, [x29, #-24]
  403d04:	stur	w8, [x29, #-84]
  403d08:	stur	wzr, [x29, #-88]
  403d0c:	ldur	w8, [x29, #-88]
  403d10:	mov	w0, w8
  403d14:	bl	401bc0 <log_get_max_level_realm@plt>
  403d18:	ldur	w8, [x29, #-80]
  403d1c:	and	w8, w8, #0x7
  403d20:	cmp	w0, w8
  403d24:	b.lt	403d60 <mount_one+0x504>  // b.tstop
  403d28:	ldur	w8, [x29, #-88]
  403d2c:	ldur	w9, [x29, #-80]
  403d30:	orr	w0, w9, w8, lsl #10
  403d34:	ldur	w1, [x29, #-84]
  403d38:	ldur	x10, [x29, #-16]
  403d3c:	ldr	x6, [x10, #8]
  403d40:	ldr	x2, [sp, #104]
  403d44:	mov	w3, #0xcc                  	// #204
  403d48:	ldr	x4, [sp, #96]
  403d4c:	adrp	x5, 405000 <_fini+0x24>
  403d50:	add	x5, x5, #0x5e0
  403d54:	bl	401bd0 <log_internal_realm@plt>
  403d58:	str	w0, [sp, #32]
  403d5c:	b	403d74 <mount_one+0x518>
  403d60:	ldur	w0, [x29, #-84]
  403d64:	bl	401be0 <abs@plt>
  403d68:	mov	w8, wzr
  403d6c:	subs	w8, w8, w0, uxtb
  403d70:	str	w8, [sp, #32]
  403d74:	ldr	w8, [sp, #32]
  403d78:	stur	w8, [x29, #-92]
  403d7c:	ldur	x9, [x29, #-16]
  403d80:	ldr	w8, [x9, #48]
  403d84:	and	w8, w8, #0x1
  403d88:	cbz	w8, 403d98 <mount_one+0x53c>
  403d8c:	ldur	w8, [x29, #-24]
  403d90:	str	w8, [sp, #28]
  403d94:	b	403da0 <mount_one+0x544>
  403d98:	mov	w8, wzr
  403d9c:	str	w8, [sp, #28]
  403da0:	ldr	w8, [sp, #28]
  403da4:	stur	w8, [x29, #-4]
  403da8:	b	403db4 <mount_one+0x558>
  403dac:	mov	w8, #0x1                   	// #1
  403db0:	stur	w8, [x29, #-4]
  403db4:	ldur	w0, [x29, #-4]
  403db8:	ldp	x29, x30, [sp, #208]
  403dbc:	add	sp, sp, #0xe0
  403dc0:	ret

0000000000403dc4 <symlink_controller>:
  403dc4:	stp	x29, x30, [sp, #-16]!
  403dc8:	mov	x29, sp
  403dcc:	sub	sp, sp, #0xa0
  403dd0:	adrp	x8, 405000 <_fini+0x24>
  403dd4:	add	x8, x8, #0x210
  403dd8:	add	x8, x8, #0x3
  403ddc:	adrp	x9, 405000 <_fini+0x24>
  403de0:	add	x9, x9, #0x61a
  403de4:	stur	x0, [x29, #-16]
  403de8:	stur	x1, [x29, #-24]
  403dec:	stur	x8, [x29, #-136]
  403df0:	stur	x9, [x29, #-144]
  403df4:	ldur	x8, [x29, #-16]
  403df8:	cmp	x8, #0x0
  403dfc:	cset	w9, ne  // ne = any
  403e00:	mov	w10, #0x1                   	// #1
  403e04:	eor	w9, w9, #0x1
  403e08:	eor	w9, w9, w10
  403e0c:	eor	w9, w9, w10
  403e10:	and	w9, w9, #0x1
  403e14:	mov	w0, w9
  403e18:	sxtw	x8, w0
  403e1c:	cbz	x8, 403e40 <symlink_controller+0x7c>
  403e20:	mov	w8, wzr
  403e24:	mov	w0, w8
  403e28:	adrp	x1, 405000 <_fini+0x24>
  403e2c:	add	x1, x1, #0x613
  403e30:	ldur	x2, [x29, #-136]
  403e34:	mov	w3, #0x109                 	// #265
  403e38:	ldur	x4, [x29, #-144]
  403e3c:	bl	401d10 <log_assert_failed_realm@plt>
  403e40:	ldur	x8, [x29, #-24]
  403e44:	cmp	x8, #0x0
  403e48:	cset	w9, ne  // ne = any
  403e4c:	mov	w10, #0x1                   	// #1
  403e50:	eor	w9, w9, #0x1
  403e54:	eor	w9, w9, w10
  403e58:	eor	w9, w9, w10
  403e5c:	and	w9, w9, #0x1
  403e60:	mov	w0, w9
  403e64:	sxtw	x8, w0
  403e68:	cbz	x8, 403e8c <symlink_controller+0xc8>
  403e6c:	mov	w8, wzr
  403e70:	mov	w0, w8
  403e74:	adrp	x1, 405000 <_fini+0x24>
  403e78:	add	x1, x1, #0x64d
  403e7c:	ldur	x2, [x29, #-136]
  403e80:	mov	w3, #0x10a                 	// #266
  403e84:	ldur	x4, [x29, #-144]
  403e88:	bl	401d10 <log_assert_failed_realm@plt>
  403e8c:	sub	x8, x29, #0x38
  403e90:	adrp	x9, 405000 <_fini+0x24>
  403e94:	add	x9, x9, #0x200
  403e98:	stur	x9, [x29, #-56]
  403e9c:	ldur	x9, [x29, #-24]
  403ea0:	str	x9, [x8, #8]
  403ea4:	stur	xzr, [x29, #-80]
  403ea8:	stur	xzr, [x29, #-88]
  403eac:	ldur	x8, [x29, #-88]
  403eb0:	mov	w9, #0x0                   	// #0
  403eb4:	cmp	x8, #0x2
  403eb8:	stur	w9, [x29, #-148]
  403ebc:	b.cs	403ee4 <symlink_controller+0x120>  // b.hs, b.nlast
  403ec0:	ldur	x8, [x29, #-88]
  403ec4:	mov	x9, #0x8                   	// #8
  403ec8:	mul	x8, x9, x8
  403ecc:	sub	x9, x29, #0x38
  403ed0:	add	x8, x9, x8
  403ed4:	ldr	x8, [x8]
  403ed8:	cmp	x8, #0x0
  403edc:	cset	w10, ne  // ne = any
  403ee0:	stur	w10, [x29, #-148]
  403ee4:	ldur	w8, [x29, #-148]
  403ee8:	tbnz	w8, #0, 403ef0 <symlink_controller+0x12c>
  403eec:	b	403f28 <symlink_controller+0x164>
  403ef0:	ldur	x8, [x29, #-88]
  403ef4:	mov	x9, #0x8                   	// #8
  403ef8:	mul	x8, x9, x8
  403efc:	sub	x9, x29, #0x38
  403f00:	add	x8, x9, x8
  403f04:	ldr	x0, [x8]
  403f08:	bl	401e80 <strlen@plt>
  403f0c:	ldur	x8, [x29, #-80]
  403f10:	add	x8, x8, x0
  403f14:	stur	x8, [x29, #-80]
  403f18:	ldur	x8, [x29, #-88]
  403f1c:	add	x8, x8, #0x1
  403f20:	stur	x8, [x29, #-88]
  403f24:	b	403eac <symlink_controller+0xe8>
  403f28:	ldur	x8, [x29, #-80]
  403f2c:	add	x8, x8, #0x1
  403f30:	stur	x8, [x29, #-96]
  403f34:	ldur	x1, [x29, #-96]
  403f38:	mov	x0, #0x1                   	// #1
  403f3c:	bl	404e54 <size_multiply_overflow>
  403f40:	mov	w8, #0x1                   	// #1
  403f44:	eor	w9, w0, #0x1
  403f48:	eor	w9, w9, w8
  403f4c:	eor	w9, w9, w8
  403f50:	eor	w8, w9, w8
  403f54:	and	w8, w8, #0x1
  403f58:	mov	w1, w8
  403f5c:	sxtw	x10, w1
  403f60:	cbz	x10, 403f84 <symlink_controller+0x1c0>
  403f64:	mov	w8, wzr
  403f68:	mov	w0, w8
  403f6c:	adrp	x1, 405000 <_fini+0x24>
  403f70:	add	x1, x1, #0x653
  403f74:	ldur	x2, [x29, #-136]
  403f78:	mov	w3, #0x10c                 	// #268
  403f7c:	ldur	x4, [x29, #-144]
  403f80:	bl	401d10 <log_assert_failed_realm@plt>
  403f84:	ldur	x8, [x29, #-96]
  403f88:	mov	x9, #0x1                   	// #1
  403f8c:	mul	x8, x9, x8
  403f90:	cmp	x8, #0x400, lsl #12
  403f94:	cset	w10, ls  // ls = plast
  403f98:	mov	w11, #0x1                   	// #1
  403f9c:	eor	w10, w10, #0x1
  403fa0:	eor	w10, w10, w11
  403fa4:	eor	w10, w10, w11
  403fa8:	and	w10, w10, #0x1
  403fac:	mov	w0, w10
  403fb0:	sxtw	x8, w0
  403fb4:	cbz	x8, 403fd8 <symlink_controller+0x214>
  403fb8:	mov	w8, wzr
  403fbc:	mov	w0, w8
  403fc0:	adrp	x1, 405000 <_fini+0x24>
  403fc4:	add	x1, x1, #0x67e
  403fc8:	ldur	x2, [x29, #-136]
  403fcc:	mov	w3, #0x10c                 	// #268
  403fd0:	ldur	x4, [x29, #-144]
  403fd4:	bl	401d10 <log_assert_failed_realm@plt>
  403fd8:	ldur	x8, [x29, #-96]
  403fdc:	mov	x9, #0x1                   	// #1
  403fe0:	mul	x8, x9, x8
  403fe4:	mul	x8, x8, x9
  403fe8:	add	x8, x8, #0xf
  403fec:	and	x8, x8, #0xfffffffffffffff0
  403ff0:	mov	x9, sp
  403ff4:	subs	x8, x9, x8
  403ff8:	mov	sp, x8
  403ffc:	stur	x8, [x29, #-104]
  404000:	ldur	x8, [x29, #-104]
  404004:	stur	x8, [x29, #-64]
  404008:	stur	x8, [x29, #-72]
  40400c:	stur	xzr, [x29, #-88]
  404010:	ldur	x8, [x29, #-88]
  404014:	mov	w9, #0x0                   	// #0
  404018:	cmp	x8, #0x2
  40401c:	stur	w9, [x29, #-152]
  404020:	b.cs	404048 <symlink_controller+0x284>  // b.hs, b.nlast
  404024:	ldur	x8, [x29, #-88]
  404028:	mov	x9, #0x8                   	// #8
  40402c:	mul	x8, x9, x8
  404030:	sub	x9, x29, #0x38
  404034:	add	x8, x9, x8
  404038:	ldr	x8, [x8]
  40403c:	cmp	x8, #0x0
  404040:	cset	w10, ne  // ne = any
  404044:	stur	w10, [x29, #-152]
  404048:	ldur	w8, [x29, #-152]
  40404c:	tbnz	w8, #0, 404054 <symlink_controller+0x290>
  404050:	b	404088 <symlink_controller+0x2c4>
  404054:	ldur	x0, [x29, #-72]
  404058:	ldur	x8, [x29, #-88]
  40405c:	mov	x9, #0x8                   	// #8
  404060:	mul	x8, x9, x8
  404064:	sub	x9, x29, #0x38
  404068:	add	x8, x9, x8
  40406c:	ldr	x1, [x8]
  404070:	bl	401e90 <stpcpy@plt>
  404074:	stur	x0, [x29, #-72]
  404078:	ldur	x8, [x29, #-88]
  40407c:	add	x8, x8, #0x1
  404080:	stur	x8, [x29, #-88]
  404084:	b	404010 <symlink_controller+0x24c>
  404088:	ldur	x8, [x29, #-72]
  40408c:	mov	w9, #0x0                   	// #0
  404090:	strb	w9, [x8]
  404094:	ldur	x8, [x29, #-64]
  404098:	stur	x8, [x29, #-112]
  40409c:	ldur	x8, [x29, #-112]
  4040a0:	stur	x8, [x29, #-32]
  4040a4:	ldur	x0, [x29, #-16]
  4040a8:	ldur	x1, [x29, #-32]
  4040ac:	mov	w9, wzr
  4040b0:	and	w2, w9, #0x1
  4040b4:	bl	401ea0 <symlink_idempotent@plt>
  4040b8:	stur	w0, [x29, #-36]
  4040bc:	ldur	w9, [x29, #-36]
  4040c0:	cmp	w9, #0x0
  4040c4:	cset	w9, ge  // ge = tcont
  4040c8:	tbnz	w9, #0, 404158 <symlink_controller+0x394>
  4040cc:	mov	w8, #0x3                   	// #3
  4040d0:	stur	w8, [x29, #-116]
  4040d4:	ldur	w8, [x29, #-36]
  4040d8:	stur	w8, [x29, #-120]
  4040dc:	stur	wzr, [x29, #-124]
  4040e0:	ldur	w0, [x29, #-124]
  4040e4:	bl	401bc0 <log_get_max_level_realm@plt>
  4040e8:	ldur	w8, [x29, #-116]
  4040ec:	and	w8, w8, #0x7
  4040f0:	cmp	w0, w8
  4040f4:	b.lt	404130 <symlink_controller+0x36c>  // b.tstop
  4040f8:	ldur	w8, [x29, #-124]
  4040fc:	ldur	w9, [x29, #-116]
  404100:	orr	w0, w9, w8, lsl #10
  404104:	ldur	w1, [x29, #-120]
  404108:	ldur	x6, [x29, #-32]
  40410c:	ldur	x2, [x29, #-136]
  404110:	mov	w3, #0x110                 	// #272
  404114:	adrp	x4, 405000 <_fini+0x24>
  404118:	add	x4, x4, #0x69d
  40411c:	adrp	x5, 405000 <_fini+0x24>
  404120:	add	x5, x5, #0x6b0
  404124:	bl	401bd0 <log_internal_realm@plt>
  404128:	stur	w0, [x29, #-156]
  40412c:	b	404144 <symlink_controller+0x380>
  404130:	ldur	w0, [x29, #-120]
  404134:	bl	401be0 <abs@plt>
  404138:	mov	w8, wzr
  40413c:	subs	w8, w8, w0, uxtb
  404140:	stur	w8, [x29, #-156]
  404144:	ldur	w8, [x29, #-156]
  404148:	stur	w8, [x29, #-128]
  40414c:	ldur	w8, [x29, #-128]
  404150:	stur	w8, [x29, #-4]
  404154:	b	40415c <symlink_controller+0x398>
  404158:	stur	wzr, [x29, #-4]
  40415c:	ldur	w0, [x29, #-4]
  404160:	mov	sp, x29
  404164:	ldp	x29, x30, [sp], #16
  404168:	ret

000000000040416c <mount_setup>:
  40416c:	sub	sp, sp, #0x100
  404170:	stp	x29, x30, [sp, #240]
  404174:	add	x29, sp, #0xf0
  404178:	mov	w8, #0x14                  	// #20
  40417c:	mov	w9, #0x1                   	// #1
  404180:	adrp	x10, 405000 <_fini+0x24>
  404184:	add	x10, x10, #0x210
  404188:	add	x10, x10, #0x3
  40418c:	and	w9, w0, w9
  404190:	sturb	w9, [x29, #-5]
  404194:	stur	wzr, [x29, #-12]
  404198:	ldurb	w9, [x29, #-5]
  40419c:	mov	w0, w8
  4041a0:	and	w1, w9, #0x1
  4041a4:	str	x10, [sp, #40]
  4041a8:	bl	4031fc <mount_points_setup>
  4041ac:	stur	w0, [x29, #-12]
  4041b0:	ldur	w8, [x29, #-12]
  4041b4:	cmp	w8, #0x0
  4041b8:	cset	w8, ge  // ge = tcont
  4041bc:	tbnz	w8, #0, 4041cc <mount_setup+0x60>
  4041c0:	ldur	w8, [x29, #-12]
  4041c4:	stur	w8, [x29, #-4]
  4041c8:	b	404474 <mount_setup+0x308>
  4041cc:	ldurb	w8, [x29, #-5]
  4041d0:	tbnz	w8, #0, 4041d8 <mount_setup+0x6c>
  4041d4:	b	404354 <mount_setup+0x1e8>
  4041d8:	mov	w0, #0x1                   	// #1
  4041dc:	bl	401eb0 <now@plt>
  4041e0:	stur	x0, [x29, #-24]
  4041e4:	adrp	x8, 405000 <_fini+0x24>
  4041e8:	add	x8, x8, #0x295
  4041ec:	stur	x8, [x29, #-104]
  4041f0:	str	x8, [sp, #80]
  4041f4:	ldr	x8, [sp, #80]
  4041f8:	add	x9, sp, #0x58
  4041fc:	str	x8, [sp, #88]
  404200:	adrp	x8, 405000 <_fini+0x24>
  404204:	add	x8, x8, #0x29a
  404208:	str	x8, [x9, #8]
  40420c:	adrp	x8, 405000 <_fini+0x24>
  404210:	add	x8, x8, #0x2a3
  404214:	str	x8, [x9, #16]
  404218:	mov	x8, xzr
  40421c:	str	x8, [x9, #24]
  404220:	str	x9, [sp, #120]
  404224:	ldur	x8, [x29, #-104]
  404228:	cbz	x8, 40425c <mount_setup+0xf0>
  40422c:	ldur	x0, [x29, #-104]
  404230:	adrp	x1, 404000 <symlink_controller+0x23c>
  404234:	add	x1, x1, #0x484
  404238:	mov	w2, #0x40                  	// #64
  40423c:	mov	w3, #0x13                  	// #19
  404240:	bl	401ec0 <nftw64@plt>
  404244:	ldr	x8, [sp, #120]
  404248:	add	x9, x8, #0x8
  40424c:	str	x9, [sp, #120]
  404250:	ldr	x8, [x8, #8]
  404254:	stur	x8, [x29, #-104]
  404258:	b	404224 <mount_setup+0xb8>
  40425c:	bl	40456c <relabel_cgroup_filesystems>
  404260:	bl	404774 <relabel_extra>
  404264:	stur	w0, [x29, #-108]
  404268:	mov	w0, #0x1                   	// #1
  40426c:	bl	401eb0 <now@plt>
  404270:	stur	x0, [x29, #-32]
  404274:	mov	w8, #0x6                   	// #6
  404278:	str	w8, [sp, #76]
  40427c:	str	wzr, [sp, #72]
  404280:	str	wzr, [sp, #68]
  404284:	ldr	w0, [sp, #68]
  404288:	bl	401bc0 <log_get_max_level_realm@plt>
  40428c:	ldr	w8, [sp, #76]
  404290:	and	w8, w8, #0x7
  404294:	cmp	w0, w8
  404298:	b.lt	404338 <mount_setup+0x1cc>  // b.tstop
  40429c:	ldr	w8, [sp, #68]
  4042a0:	ldr	w9, [sp, #76]
  4042a4:	orr	w0, w9, w8, lsl #10
  4042a8:	ldr	w1, [sp, #72]
  4042ac:	ldur	w8, [x29, #-108]
  4042b0:	adrp	x10, 405000 <_fini+0x24>
  4042b4:	add	x10, x10, #0x300
  4042b8:	adrp	x11, 405000 <_fini+0x24>
  4042bc:	add	x11, x11, #0x2ed
  4042c0:	cmp	w8, #0x0
  4042c4:	csel	x6, x11, x10, gt
  4042c8:	ldur	x10, [x29, #-32]
  4042cc:	ldur	x11, [x29, #-24]
  4042d0:	subs	x2, x10, x11
  4042d4:	sub	x10, x29, #0x60
  4042d8:	str	w0, [sp, #36]
  4042dc:	mov	x0, x10
  4042e0:	mov	x10, #0x40                  	// #64
  4042e4:	str	w1, [sp, #32]
  4042e8:	mov	x1, x10
  4042ec:	mov	x10, xzr
  4042f0:	mov	x3, x10
  4042f4:	str	x6, [sp, #24]
  4042f8:	bl	401ed0 <format_timespan@plt>
  4042fc:	ldr	w8, [sp, #36]
  404300:	str	x0, [sp, #16]
  404304:	mov	w0, w8
  404308:	ldr	w1, [sp, #32]
  40430c:	ldr	x2, [sp, #40]
  404310:	mov	w3, #0x200                 	// #512
  404314:	adrp	x4, 405000 <_fini+0x24>
  404318:	add	x4, x4, #0x2a8
  40431c:	adrp	x5, 405000 <_fini+0x24>
  404320:	add	x5, x5, #0x2b4
  404324:	ldr	x6, [sp, #24]
  404328:	ldr	x7, [sp, #16]
  40432c:	bl	401bd0 <log_internal_realm@plt>
  404330:	str	w0, [sp, #12]
  404334:	b	40434c <mount_setup+0x1e0>
  404338:	ldr	w0, [sp, #72]
  40433c:	bl	401be0 <abs@plt>
  404340:	mov	w8, wzr
  404344:	subs	w8, w8, w0, uxtb
  404348:	str	w8, [sp, #12]
  40434c:	ldr	w8, [sp, #12]
  404350:	str	w8, [sp, #64]
  404354:	mov	x8, xzr
  404358:	mov	x0, x8
  40435c:	mov	w9, #0xffffffff            	// #-1
  404360:	mov	w1, w9
  404364:	mov	w2, w9
  404368:	bl	401ee0 <dev_setup@plt>
  40436c:	bl	401e20 <detect_container@plt>
  404370:	cmp	w0, #0x0
  404374:	cset	w9, gt
  404378:	tbnz	w9, #0, 40442c <mount_setup+0x2c0>
  40437c:	mov	x8, xzr
  404380:	mov	x0, x8
  404384:	adrp	x1, 405000 <_fini+0x24>
  404388:	add	x1, x1, #0x5d
  40438c:	mov	x2, x8
  404390:	mov	x3, #0x4000                	// #16384
  404394:	movk	x3, #0x10, lsl #16
  404398:	mov	x4, x8
  40439c:	bl	401de0 <mount@plt>
  4043a0:	cmp	w0, #0x0
  4043a4:	cset	w9, ge  // ge = tcont
  4043a8:	tbnz	w9, #0, 40442c <mount_setup+0x2c0>
  4043ac:	mov	w8, #0x4                   	// #4
  4043b0:	str	w8, [sp, #60]
  4043b4:	bl	401c10 <__errno_location@plt>
  4043b8:	ldr	w8, [x0]
  4043bc:	str	w8, [sp, #56]
  4043c0:	str	wzr, [sp, #52]
  4043c4:	ldr	w0, [sp, #52]
  4043c8:	bl	401bc0 <log_get_max_level_realm@plt>
  4043cc:	ldr	w8, [sp, #60]
  4043d0:	and	w8, w8, #0x7
  4043d4:	cmp	w0, w8
  4043d8:	b.lt	404410 <mount_setup+0x2a4>  // b.tstop
  4043dc:	ldr	w8, [sp, #52]
  4043e0:	ldr	w9, [sp, #60]
  4043e4:	orr	w0, w9, w8, lsl #10
  4043e8:	ldr	w1, [sp, #56]
  4043ec:	ldr	x2, [sp, #40]
  4043f0:	mov	w3, #0x211                 	// #529
  4043f4:	adrp	x4, 405000 <_fini+0x24>
  4043f8:	add	x4, x4, #0x2a8
  4043fc:	adrp	x5, 405000 <_fini+0x24>
  404400:	add	x5, x5, #0x301
  404404:	bl	401bd0 <log_internal_realm@plt>
  404408:	str	w0, [sp, #8]
  40440c:	b	404424 <mount_setup+0x2b8>
  404410:	ldr	w0, [sp, #56]
  404414:	bl	401be0 <abs@plt>
  404418:	mov	w8, wzr
  40441c:	subs	w8, w8, w0, uxtb
  404420:	str	w8, [sp, #8]
  404424:	ldr	w8, [sp, #8]
  404428:	str	w8, [sp, #48]
  40442c:	adrp	x0, 405000 <_fini+0x24>
  404430:	add	x0, x0, #0x346
  404434:	mov	w8, #0x1ed                 	// #493
  404438:	mov	w1, w8
  40443c:	str	w8, [sp, #4]
  404440:	bl	401ef0 <mkdir_label@plt>
  404444:	adrp	x9, 405000 <_fini+0x24>
  404448:	add	x9, x9, #0x353
  40444c:	mov	x0, x9
  404450:	ldr	w1, [sp, #4]
  404454:	bl	401ef0 <mkdir_label@plt>
  404458:	mov	x9, xzr
  40445c:	mov	x0, x9
  404460:	mov	w8, #0xffffffff            	// #-1
  404464:	mov	w1, w8
  404468:	mov	w2, w8
  40446c:	bl	401f00 <make_inaccessible_nodes@plt>
  404470:	stur	wzr, [x29, #-4]
  404474:	ldur	w0, [x29, #-4]
  404478:	ldp	x29, x30, [sp, #240]
  40447c:	add	sp, sp, #0x100
  404480:	ret

0000000000404484 <nftw_cb>:
  404484:	sub	sp, sp, #0x40
  404488:	stp	x29, x30, [sp, #48]
  40448c:	add	x29, sp, #0x30
  404490:	mov	w8, #0x1                   	// #1
  404494:	stur	x0, [x29, #-16]
  404498:	str	x1, [sp, #24]
  40449c:	str	w2, [sp, #20]
  4044a0:	str	x3, [sp, #8]
  4044a4:	ldr	x9, [sp, #8]
  4044a8:	ldr	w10, [x9, #4]
  4044ac:	cmp	w10, #0x0
  4044b0:	cset	w10, eq  // eq = none
  4044b4:	eor	w10, w10, w8
  4044b8:	eor	w8, w10, w8
  4044bc:	and	w8, w8, #0x1
  4044c0:	mov	w0, w8
  4044c4:	sxtw	x9, w0
  4044c8:	cbz	x9, 4044d4 <nftw_cb+0x50>
  4044cc:	stur	wzr, [x29, #-4]
  4044d0:	b	40455c <nftw_cb+0xd8>
  4044d4:	ldur	x0, [x29, #-16]
  4044d8:	mov	w8, wzr
  4044dc:	mov	w1, w8
  4044e0:	bl	401e00 <label_fix@plt>
  4044e4:	ldr	x9, [sp, #8]
  4044e8:	ldr	w8, [x9, #4]
  4044ec:	mov	w10, #0x0                   	// #0
  4044f0:	cmp	w8, #0x1
  4044f4:	str	w10, [sp, #4]
  4044f8:	b.ne	40452c <nftw_cb+0xa8>  // b.any
  4044fc:	ldr	w8, [sp, #20]
  404500:	mov	w9, #0x0                   	// #0
  404504:	cmp	w8, #0x1
  404508:	str	w9, [sp, #4]
  40450c:	b.ne	40452c <nftw_cb+0xa8>  // b.any
  404510:	ldur	x0, [x29, #-16]
  404514:	adrp	x1, 405000 <_fini+0x24>
  404518:	add	x1, x1, #0x6d0
  40451c:	bl	401db0 <strcmp@plt>
  404520:	cmp	w0, #0x0
  404524:	cset	w8, eq  // eq = none
  404528:	str	w8, [sp, #4]
  40452c:	ldr	w8, [sp, #4]
  404530:	mov	w9, #0x1                   	// #1
  404534:	eor	w8, w8, #0x1
  404538:	eor	w8, w8, w9
  40453c:	and	w8, w8, #0x1
  404540:	mov	w0, w8
  404544:	sxtw	x10, w0
  404548:	cbz	x10, 404558 <nftw_cb+0xd4>
  40454c:	mov	w8, #0x2                   	// #2
  404550:	stur	w8, [x29, #-4]
  404554:	b	40455c <nftw_cb+0xd8>
  404558:	stur	wzr, [x29, #-4]
  40455c:	ldur	w0, [x29, #-4]
  404560:	ldp	x29, x30, [sp, #48]
  404564:	add	sp, sp, #0x40
  404568:	ret

000000000040456c <relabel_cgroup_filesystems>:
  40456c:	sub	sp, sp, #0xd0
  404570:	stp	x29, x30, [sp, #192]
  404574:	add	x29, sp, #0xc0
  404578:	adrp	x8, 405000 <_fini+0x24>
  40457c:	add	x8, x8, #0x210
  404580:	add	x8, x8, #0x3
  404584:	adrp	x9, 405000 <_fini+0x24>
  404588:	add	x9, x9, #0x277
  40458c:	str	x8, [sp, #24]
  404590:	str	x9, [sp, #16]
  404594:	bl	401f10 <cg_all_unified@plt>
  404598:	stur	w0, [x29, #-8]
  40459c:	ldur	w10, [x29, #-8]
  4045a0:	cbnz	w10, 4046c8 <relabel_cgroup_filesystems+0x15c>
  4045a4:	ldr	x0, [sp, #16]
  4045a8:	add	x1, sp, #0x40
  4045ac:	bl	401f20 <statfs64@plt>
  4045b0:	cmp	w0, #0x0
  4045b4:	cset	w8, ge  // ge = tcont
  4045b8:	tbnz	w8, #0, 404648 <relabel_cgroup_filesystems+0xdc>
  4045bc:	mov	w8, #0x3                   	// #3
  4045c0:	str	w8, [sp, #60]
  4045c4:	bl	401c10 <__errno_location@plt>
  4045c8:	ldr	w8, [x0]
  4045cc:	str	w8, [sp, #56]
  4045d0:	str	wzr, [sp, #52]
  4045d4:	ldr	w0, [sp, #52]
  4045d8:	bl	401bc0 <log_get_max_level_realm@plt>
  4045dc:	ldr	w8, [sp, #60]
  4045e0:	and	w8, w8, #0x7
  4045e4:	cmp	w0, w8
  4045e8:	b.lt	404620 <relabel_cgroup_filesystems+0xb4>  // b.tstop
  4045ec:	ldr	w8, [sp, #52]
  4045f0:	ldr	w9, [sp, #60]
  4045f4:	orr	w0, w9, w8, lsl #10
  4045f8:	ldr	w1, [sp, #56]
  4045fc:	ldr	x2, [sp, #24]
  404600:	mov	w3, #0x18a                 	// #394
  404604:	adrp	x4, 405000 <_fini+0x24>
  404608:	add	x4, x4, #0x6df
  40460c:	adrp	x5, 405000 <_fini+0x24>
  404610:	add	x5, x5, #0x6fa
  404614:	bl	401bd0 <log_internal_realm@plt>
  404618:	str	w0, [sp, #12]
  40461c:	b	404634 <relabel_cgroup_filesystems+0xc8>
  404620:	ldr	w0, [sp, #56]
  404624:	bl	401be0 <abs@plt>
  404628:	mov	w8, wzr
  40462c:	subs	w8, w8, w0, uxtb
  404630:	str	w8, [sp, #12]
  404634:	ldr	w8, [sp, #12]
  404638:	str	w8, [sp, #48]
  40463c:	ldr	w8, [sp, #48]
  404640:	stur	w8, [x29, #-4]
  404644:	b	404764 <relabel_cgroup_filesystems+0x1f8>
  404648:	ldr	x8, [sp, #144]
  40464c:	and	x8, x8, #0x1
  404650:	cbz	x8, 404670 <relabel_cgroup_filesystems+0x104>
  404654:	mov	x8, xzr
  404658:	mov	x0, x8
  40465c:	ldr	x1, [sp, #16]
  404660:	mov	x2, x8
  404664:	mov	x3, #0x20                  	// #32
  404668:	mov	x4, x8
  40466c:	bl	401de0 <mount@plt>
  404670:	ldr	x0, [sp, #16]
  404674:	mov	w8, wzr
  404678:	mov	w1, w8
  40467c:	bl	401e00 <label_fix@plt>
  404680:	ldr	x9, [sp, #16]
  404684:	mov	x0, x9
  404688:	adrp	x1, 404000 <symlink_controller+0x23c>
  40468c:	add	x1, x1, #0x484
  404690:	mov	w2, #0x40                  	// #64
  404694:	mov	w3, #0x13                  	// #19
  404698:	bl	401ec0 <nftw64@plt>
  40469c:	ldr	x9, [sp, #144]
  4046a0:	and	x9, x9, #0x1
  4046a4:	cbz	x9, 4046c4 <relabel_cgroup_filesystems+0x158>
  4046a8:	mov	x8, xzr
  4046ac:	mov	x0, x8
  4046b0:	ldr	x1, [sp, #16]
  4046b4:	mov	x2, x8
  4046b8:	mov	x3, #0x21                  	// #33
  4046bc:	mov	x4, x8
  4046c0:	bl	401de0 <mount@plt>
  4046c4:	b	404760 <relabel_cgroup_filesystems+0x1f4>
  4046c8:	ldur	w8, [x29, #-8]
  4046cc:	cmp	w8, #0x0
  4046d0:	cset	w8, ge  // ge = tcont
  4046d4:	tbnz	w8, #0, 404760 <relabel_cgroup_filesystems+0x1f4>
  4046d8:	mov	w8, #0x3                   	// #3
  4046dc:	str	w8, [sp, #44]
  4046e0:	ldur	w8, [x29, #-8]
  4046e4:	str	w8, [sp, #40]
  4046e8:	str	wzr, [sp, #36]
  4046ec:	ldr	w0, [sp, #36]
  4046f0:	bl	401bc0 <log_get_max_level_realm@plt>
  4046f4:	ldr	w8, [sp, #44]
  4046f8:	and	w8, w8, #0x7
  4046fc:	cmp	w0, w8
  404700:	b.lt	404738 <relabel_cgroup_filesystems+0x1cc>  // b.tstop
  404704:	ldr	w8, [sp, #36]
  404708:	ldr	w9, [sp, #44]
  40470c:	orr	w0, w9, w8, lsl #10
  404710:	ldr	w1, [sp, #40]
  404714:	ldr	x2, [sp, #24]
  404718:	mov	w3, #0x196                 	// #406
  40471c:	adrp	x4, 405000 <_fini+0x24>
  404720:	add	x4, x4, #0x6df
  404724:	adrp	x5, 405000 <_fini+0x24>
  404728:	add	x5, x5, #0x731
  40472c:	bl	401bd0 <log_internal_realm@plt>
  404730:	str	w0, [sp, #8]
  404734:	b	40474c <relabel_cgroup_filesystems+0x1e0>
  404738:	ldr	w0, [sp, #40]
  40473c:	bl	401be0 <abs@plt>
  404740:	mov	w8, wzr
  404744:	subs	w8, w8, w0, uxtb
  404748:	str	w8, [sp, #8]
  40474c:	ldr	w8, [sp, #8]
  404750:	str	w8, [sp, #32]
  404754:	ldr	w8, [sp, #32]
  404758:	stur	w8, [x29, #-4]
  40475c:	b	404764 <relabel_cgroup_filesystems+0x1f8>
  404760:	stur	wzr, [x29, #-4]
  404764:	ldur	w0, [x29, #-4]
  404768:	ldp	x29, x30, [sp, #192]
  40476c:	add	sp, sp, #0xd0
  404770:	ret

0000000000404774 <relabel_extra>:
  404774:	sub	sp, sp, #0x120
  404778:	stp	x29, x30, [sp, #256]
  40477c:	str	x28, [sp, #272]
  404780:	add	x29, sp, #0x100
  404784:	mov	x8, xzr
  404788:	adrp	x1, 405000 <_fini+0x24>
  40478c:	add	x1, x1, #0x76c
  404790:	mov	x0, x8
  404794:	mov	w3, #0x12                  	// #18
  404798:	adrp	x4, 405000 <_fini+0x24>
  40479c:	add	x4, x4, #0x775
  4047a0:	adrp	x9, 405000 <_fini+0x24>
  4047a4:	add	x9, x9, #0x210
  4047a8:	add	x9, x9, #0x3
  4047ac:	adrp	x10, 405000 <_fini+0x24>
  4047b0:	add	x10, x10, #0x793
  4047b4:	sub	x11, x29, #0x10
  4047b8:	stur	x8, [x29, #-16]
  4047bc:	stur	wzr, [x29, #-32]
  4047c0:	str	x0, [sp, #64]
  4047c4:	mov	x0, x11
  4047c8:	ldr	x2, [sp, #64]
  4047cc:	str	x9, [sp, #56]
  4047d0:	str	x10, [sp, #48]
  4047d4:	bl	401f30 <conf_files_list@plt>
  4047d8:	stur	w0, [x29, #-28]
  4047dc:	ldur	w12, [x29, #-28]
  4047e0:	cmp	w12, #0x0
  4047e4:	cset	w12, ge  // ge = tcont
  4047e8:	tbnz	w12, #0, 404878 <relabel_extra+0x104>
  4047ec:	mov	w8, #0x3                   	// #3
  4047f0:	stur	w8, [x29, #-36]
  4047f4:	ldur	w8, [x29, #-28]
  4047f8:	stur	w8, [x29, #-40]
  4047fc:	stur	wzr, [x29, #-44]
  404800:	ldur	w0, [x29, #-44]
  404804:	bl	401bc0 <log_get_max_level_realm@plt>
  404808:	ldur	w8, [x29, #-36]
  40480c:	and	w8, w8, #0x7
  404810:	cmp	w0, w8
  404814:	b.lt	404848 <relabel_extra+0xd4>  // b.tstop
  404818:	ldur	w8, [x29, #-44]
  40481c:	ldur	w9, [x29, #-36]
  404820:	orr	w0, w9, w8, lsl #10
  404824:	ldur	w1, [x29, #-40]
  404828:	ldr	x2, [sp, #56]
  40482c:	mov	w3, #0x1ac                 	// #428
  404830:	ldr	x4, [sp, #48]
  404834:	adrp	x5, 405000 <_fini+0x24>
  404838:	add	x5, x5, #0x7a1
  40483c:	bl	401bd0 <log_internal_realm@plt>
  404840:	str	w0, [sp, #44]
  404844:	b	40485c <relabel_extra+0xe8>
  404848:	ldur	w0, [x29, #-40]
  40484c:	bl	401be0 <abs@plt>
  404850:	mov	w8, wzr
  404854:	subs	w8, w8, w0, uxtb
  404858:	str	w8, [sp, #44]
  40485c:	ldr	w8, [sp, #44]
  404860:	stur	w8, [x29, #-48]
  404864:	ldur	w8, [x29, #-48]
  404868:	stur	w8, [x29, #-4]
  40486c:	mov	w8, #0x1                   	// #1
  404870:	stur	w8, [x29, #-52]
  404874:	b	404dc8 <relabel_extra+0x654>
  404878:	ldur	x8, [x29, #-16]
  40487c:	stur	x8, [x29, #-24]
  404880:	ldur	x8, [x29, #-24]
  404884:	mov	w9, #0x0                   	// #0
  404888:	str	w9, [sp, #40]
  40488c:	cbz	x8, 4048a4 <relabel_extra+0x130>
  404890:	ldur	x8, [x29, #-24]
  404894:	ldr	x8, [x8]
  404898:	cmp	x8, #0x0
  40489c:	cset	w9, ne  // ne = any
  4048a0:	str	w9, [sp, #40]
  4048a4:	ldr	w8, [sp, #40]
  4048a8:	tbnz	w8, #0, 4048b0 <relabel_extra+0x13c>
  4048ac:	b	404d14 <relabel_extra+0x5a0>
  4048b0:	mov	x8, xzr
  4048b4:	stur	x8, [x29, #-64]
  4048b8:	ldur	x8, [x29, #-24]
  4048bc:	ldr	x0, [x8]
  4048c0:	adrp	x1, 405000 <_fini+0x24>
  4048c4:	add	x1, x1, #0x44
  4048c8:	bl	401f40 <fopen64@plt>
  4048cc:	stur	x0, [x29, #-64]
  4048d0:	ldur	x8, [x29, #-64]
  4048d4:	cbnz	x8, 404968 <relabel_extra+0x1f4>
  4048d8:	mov	w8, #0x4                   	// #4
  4048dc:	stur	w8, [x29, #-68]
  4048e0:	bl	401c10 <__errno_location@plt>
  4048e4:	ldr	w8, [x0]
  4048e8:	stur	w8, [x29, #-72]
  4048ec:	stur	wzr, [x29, #-76]
  4048f0:	ldur	w0, [x29, #-76]
  4048f4:	bl	401bc0 <log_get_max_level_realm@plt>
  4048f8:	ldur	w8, [x29, #-68]
  4048fc:	and	w8, w8, #0x7
  404900:	cmp	w0, w8
  404904:	b.lt	404940 <relabel_extra+0x1cc>  // b.tstop
  404908:	ldur	w8, [x29, #-76]
  40490c:	ldur	w9, [x29, #-68]
  404910:	orr	w0, w9, w8, lsl #10
  404914:	ldur	w1, [x29, #-72]
  404918:	ldur	x10, [x29, #-24]
  40491c:	ldr	x6, [x10]
  404920:	ldr	x2, [sp, #56]
  404924:	mov	w3, #0x1b3                 	// #435
  404928:	ldr	x4, [sp, #48]
  40492c:	adrp	x5, 405000 <_fini+0x24>
  404930:	add	x5, x5, #0x7e1
  404934:	bl	401bd0 <log_internal_realm@plt>
  404938:	str	w0, [sp, #36]
  40493c:	b	404954 <relabel_extra+0x1e0>
  404940:	ldur	w0, [x29, #-72]
  404944:	bl	401be0 <abs@plt>
  404948:	mov	w8, wzr
  40494c:	subs	w8, w8, w0, uxtb
  404950:	str	w8, [sp, #36]
  404954:	ldr	w8, [sp, #36]
  404958:	stur	w8, [x29, #-80]
  40495c:	mov	w8, #0x4                   	// #4
  404960:	stur	w8, [x29, #-52]
  404964:	b	404cec <relabel_extra+0x578>
  404968:	sub	x2, x29, #0x58
  40496c:	mov	x8, xzr
  404970:	stur	x8, [x29, #-88]
  404974:	ldur	x0, [x29, #-64]
  404978:	mov	x1, #0x100000              	// #1048576
  40497c:	bl	404f18 <read_line>
  404980:	stur	w0, [x29, #-28]
  404984:	ldur	w9, [x29, #-28]
  404988:	cmp	w9, #0x0
  40498c:	cset	w9, ge  // ge = tcont
  404990:	tbnz	w9, #0, 404a20 <relabel_extra+0x2ac>
  404994:	mov	w8, #0x4                   	// #4
  404998:	stur	w8, [x29, #-92]
  40499c:	ldur	w8, [x29, #-28]
  4049a0:	stur	w8, [x29, #-96]
  4049a4:	stur	wzr, [x29, #-100]
  4049a8:	ldur	w0, [x29, #-100]
  4049ac:	bl	401bc0 <log_get_max_level_realm@plt>
  4049b0:	ldur	w8, [x29, #-92]
  4049b4:	and	w8, w8, #0x7
  4049b8:	cmp	w0, w8
  4049bc:	b.lt	4049f8 <relabel_extra+0x284>  // b.tstop
  4049c0:	ldur	w8, [x29, #-100]
  4049c4:	ldur	w9, [x29, #-92]
  4049c8:	orr	w0, w9, w8, lsl #10
  4049cc:	ldur	w1, [x29, #-96]
  4049d0:	ldur	x10, [x29, #-24]
  4049d4:	ldr	x6, [x10]
  4049d8:	ldr	x2, [sp, #56]
  4049dc:	mov	w3, #0x1bc                 	// #444
  4049e0:	ldr	x4, [sp, #48]
  4049e4:	adrp	x5, 405000 <_fini+0x24>
  4049e8:	add	x5, x5, #0x801
  4049ec:	bl	401bd0 <log_internal_realm@plt>
  4049f0:	str	w0, [sp, #32]
  4049f4:	b	404a0c <relabel_extra+0x298>
  4049f8:	ldur	w0, [x29, #-96]
  4049fc:	bl	401be0 <abs@plt>
  404a00:	mov	w8, wzr
  404a04:	subs	w8, w8, w0, uxtb
  404a08:	str	w8, [sp, #32]
  404a0c:	ldr	w8, [sp, #32]
  404a10:	stur	w8, [x29, #-104]
  404a14:	mov	w8, #0x5                   	// #5
  404a18:	stur	w8, [x29, #-52]
  404a1c:	b	404c1c <relabel_extra+0x4a8>
  404a20:	ldur	w8, [x29, #-28]
  404a24:	cbnz	w8, 404a34 <relabel_extra+0x2c0>
  404a28:	mov	w8, #0x5                   	// #5
  404a2c:	stur	w8, [x29, #-52]
  404a30:	b	404c1c <relabel_extra+0x4a8>
  404a34:	ldur	x0, [x29, #-88]
  404a38:	mov	w8, #0x1                   	// #1
  404a3c:	and	w1, w8, #0x1
  404a40:	bl	401f50 <path_simplify@plt>
  404a44:	ldur	x9, [x29, #-88]
  404a48:	mov	x0, x9
  404a4c:	bl	401f60 <path_is_normalized@plt>
  404a50:	tbnz	w0, #0, 404ad8 <relabel_extra+0x364>
  404a54:	mov	w8, #0x4                   	// #4
  404a58:	stur	w8, [x29, #-108]
  404a5c:	stur	wzr, [x29, #-112]
  404a60:	stur	wzr, [x29, #-116]
  404a64:	ldur	w0, [x29, #-116]
  404a68:	bl	401bc0 <log_get_max_level_realm@plt>
  404a6c:	ldur	w8, [x29, #-108]
  404a70:	and	w8, w8, #0x7
  404a74:	cmp	w0, w8
  404a78:	b.lt	404ab0 <relabel_extra+0x33c>  // b.tstop
  404a7c:	ldur	w8, [x29, #-116]
  404a80:	ldur	w9, [x29, #-108]
  404a84:	orr	w0, w9, w8, lsl #10
  404a88:	ldur	w1, [x29, #-112]
  404a8c:	ldur	x6, [x29, #-88]
  404a90:	ldr	x2, [sp, #56]
  404a94:	mov	w3, #0x1c5                 	// #453
  404a98:	ldr	x4, [sp, #48]
  404a9c:	adrp	x5, 405000 <_fini+0x24>
  404aa0:	add	x5, x5, #0x821
  404aa4:	bl	401bd0 <log_internal_realm@plt>
  404aa8:	str	w0, [sp, #28]
  404aac:	b	404ac4 <relabel_extra+0x350>
  404ab0:	ldur	w0, [x29, #-112]
  404ab4:	bl	401be0 <abs@plt>
  404ab8:	mov	w8, wzr
  404abc:	subs	w8, w8, w0, uxtb
  404ac0:	str	w8, [sp, #28]
  404ac4:	ldr	w8, [sp, #28]
  404ac8:	stur	w8, [x29, #-120]
  404acc:	mov	w8, #0x6                   	// #6
  404ad0:	stur	w8, [x29, #-52]
  404ad4:	b	404c1c <relabel_extra+0x4a8>
  404ad8:	ldur	x0, [x29, #-88]
  404adc:	bl	401f70 <path_is_absolute@plt>
  404ae0:	tbnz	w0, #0, 404b68 <relabel_extra+0x3f4>
  404ae4:	mov	w8, #0x4                   	// #4
  404ae8:	stur	w8, [x29, #-124]
  404aec:	str	wzr, [sp, #128]
  404af0:	str	wzr, [sp, #124]
  404af4:	ldr	w0, [sp, #124]
  404af8:	bl	401bc0 <log_get_max_level_realm@plt>
  404afc:	ldur	w8, [x29, #-124]
  404b00:	and	w8, w8, #0x7
  404b04:	cmp	w0, w8
  404b08:	b.lt	404b40 <relabel_extra+0x3cc>  // b.tstop
  404b0c:	ldr	w8, [sp, #124]
  404b10:	ldur	w9, [x29, #-124]
  404b14:	orr	w0, w9, w8, lsl #10
  404b18:	ldr	w1, [sp, #128]
  404b1c:	ldur	x6, [x29, #-88]
  404b20:	ldr	x2, [sp, #56]
  404b24:	mov	w3, #0x1ca                 	// #458
  404b28:	ldr	x4, [sp, #48]
  404b2c:	adrp	x5, 405000 <_fini+0x24>
  404b30:	add	x5, x5, #0x851
  404b34:	bl	401bd0 <log_internal_realm@plt>
  404b38:	str	w0, [sp, #24]
  404b3c:	b	404b54 <relabel_extra+0x3e0>
  404b40:	ldr	w0, [sp, #128]
  404b44:	bl	401be0 <abs@plt>
  404b48:	mov	w8, wzr
  404b4c:	subs	w8, w8, w0, uxtb
  404b50:	str	w8, [sp, #24]
  404b54:	ldr	w8, [sp, #24]
  404b58:	str	w8, [sp, #120]
  404b5c:	mov	w8, #0x6                   	// #6
  404b60:	stur	w8, [x29, #-52]
  404b64:	b	404c1c <relabel_extra+0x4a8>
  404b68:	mov	w8, #0x7                   	// #7
  404b6c:	str	w8, [sp, #116]
  404b70:	str	wzr, [sp, #112]
  404b74:	str	wzr, [sp, #108]
  404b78:	ldr	w0, [sp, #108]
  404b7c:	bl	401bc0 <log_get_max_level_realm@plt>
  404b80:	ldr	w8, [sp, #116]
  404b84:	and	w8, w8, #0x7
  404b88:	cmp	w0, w8
  404b8c:	b.lt	404bc4 <relabel_extra+0x450>  // b.tstop
  404b90:	ldr	w8, [sp, #108]
  404b94:	ldr	w9, [sp, #116]
  404b98:	orr	w0, w9, w8, lsl #10
  404b9c:	ldr	w1, [sp, #112]
  404ba0:	ldur	x6, [x29, #-88]
  404ba4:	ldr	x2, [sp, #56]
  404ba8:	mov	w3, #0x1ce                 	// #462
  404bac:	ldr	x4, [sp, #48]
  404bb0:	adrp	x5, 405000 <_fini+0x24>
  404bb4:	add	x5, x5, #0x87f
  404bb8:	bl	401bd0 <log_internal_realm@plt>
  404bbc:	str	w0, [sp, #20]
  404bc0:	b	404bd8 <relabel_extra+0x464>
  404bc4:	ldr	w0, [sp, #112]
  404bc8:	bl	401be0 <abs@plt>
  404bcc:	mov	w8, wzr
  404bd0:	subs	w8, w8, w0, uxtb
  404bd4:	str	w8, [sp, #20]
  404bd8:	ldr	w8, [sp, #20]
  404bdc:	str	w8, [sp, #104]
  404be0:	ldur	x0, [x29, #-88]
  404be4:	mov	w8, wzr
  404be8:	mov	w1, w8
  404bec:	bl	401e00 <label_fix@plt>
  404bf0:	ldur	x9, [x29, #-88]
  404bf4:	mov	x0, x9
  404bf8:	adrp	x1, 404000 <symlink_controller+0x23c>
  404bfc:	add	x1, x1, #0x484
  404c00:	mov	w2, #0x40                  	// #64
  404c04:	mov	w3, #0x13                  	// #19
  404c08:	bl	401ec0 <nftw64@plt>
  404c0c:	ldur	w8, [x29, #-32]
  404c10:	add	w8, w8, #0x1
  404c14:	stur	w8, [x29, #-32]
  404c18:	stur	wzr, [x29, #-52]
  404c1c:	sub	x0, x29, #0x58
  404c20:	bl	40368c <freep>
  404c24:	ldur	w8, [x29, #-52]
  404c28:	str	w8, [sp, #16]
  404c2c:	cbz	w8, 404c48 <relabel_extra+0x4d4>
  404c30:	b	404c34 <relabel_extra+0x4c0>
  404c34:	ldr	w8, [sp, #16]
  404c38:	cmp	w8, #0x5
  404c3c:	b.eq	404c4c <relabel_extra+0x4d8>  // b.none
  404c40:	b	404c44 <relabel_extra+0x4d0>
  404c44:	b	404968 <relabel_extra+0x1f4>
  404c48:	b	404968 <relabel_extra+0x1f4>
  404c4c:	ldur	x8, [x29, #-24]
  404c50:	ldr	x0, [x8]
  404c54:	bl	401f80 <unlink@plt>
  404c58:	cmp	w0, #0x0
  404c5c:	cset	w9, ge  // ge = tcont
  404c60:	tbnz	w9, #0, 404ce8 <relabel_extra+0x574>
  404c64:	mov	w8, #0x4                   	// #4
  404c68:	str	w8, [sp, #100]
  404c6c:	bl	401c10 <__errno_location@plt>
  404c70:	ldr	w8, [x0]
  404c74:	str	w8, [sp, #96]
  404c78:	str	wzr, [sp, #92]
  404c7c:	ldr	w0, [sp, #92]
  404c80:	bl	401bc0 <log_get_max_level_realm@plt>
  404c84:	ldr	w8, [sp, #100]
  404c88:	and	w8, w8, #0x7
  404c8c:	cmp	w0, w8
  404c90:	b.lt	404ccc <relabel_extra+0x558>  // b.tstop
  404c94:	ldr	w8, [sp, #92]
  404c98:	ldr	w9, [sp, #100]
  404c9c:	orr	w0, w9, w8, lsl #10
  404ca0:	ldr	w1, [sp, #96]
  404ca4:	ldur	x10, [x29, #-24]
  404ca8:	ldr	x6, [x10]
  404cac:	ldr	x2, [sp, #56]
  404cb0:	mov	w3, #0x1d5                 	// #469
  404cb4:	ldr	x4, [sp, #48]
  404cb8:	adrp	x5, 405000 <_fini+0x24>
  404cbc:	add	x5, x5, #0x8ab
  404cc0:	bl	401bd0 <log_internal_realm@plt>
  404cc4:	str	w0, [sp, #12]
  404cc8:	b	404ce0 <relabel_extra+0x56c>
  404ccc:	ldr	w0, [sp, #96]
  404cd0:	bl	401be0 <abs@plt>
  404cd4:	mov	w8, wzr
  404cd8:	subs	w8, w8, w0, uxtb
  404cdc:	str	w8, [sp, #12]
  404ce0:	ldr	w8, [sp, #12]
  404ce4:	str	w8, [sp, #88]
  404ce8:	stur	wzr, [x29, #-52]
  404cec:	sub	x0, x29, #0x40
  404cf0:	bl	404ef0 <fclosep>
  404cf4:	ldur	w8, [x29, #-52]
  404cf8:	cbz	w8, 404d04 <relabel_extra+0x590>
  404cfc:	b	404d00 <relabel_extra+0x58c>
  404d00:	b	404d04 <relabel_extra+0x590>
  404d04:	ldur	x8, [x29, #-24]
  404d08:	add	x8, x8, #0x8
  404d0c:	stur	x8, [x29, #-24]
  404d10:	b	404880 <relabel_extra+0x10c>
  404d14:	adrp	x0, 405000 <_fini+0x24>
  404d18:	add	x0, x0, #0x8cd
  404d1c:	bl	401e70 <rmdir@plt>
  404d20:	cmp	w0, #0x0
  404d24:	cset	w8, ge  // ge = tcont
  404d28:	tbnz	w8, #0, 404db8 <relabel_extra+0x644>
  404d2c:	bl	401c10 <__errno_location@plt>
  404d30:	ldr	w8, [x0]
  404d34:	cmp	w8, #0x2
  404d38:	b.eq	404db8 <relabel_extra+0x644>  // b.none
  404d3c:	mov	w8, #0x4                   	// #4
  404d40:	str	w8, [sp, #84]
  404d44:	bl	401c10 <__errno_location@plt>
  404d48:	ldr	w8, [x0]
  404d4c:	str	w8, [sp, #80]
  404d50:	str	wzr, [sp, #76]
  404d54:	ldr	w0, [sp, #76]
  404d58:	bl	401bc0 <log_get_max_level_realm@plt>
  404d5c:	ldr	w8, [sp, #84]
  404d60:	and	w8, w8, #0x7
  404d64:	cmp	w0, w8
  404d68:	b.lt	404d9c <relabel_extra+0x628>  // b.tstop
  404d6c:	ldr	w8, [sp, #76]
  404d70:	ldr	w9, [sp, #84]
  404d74:	orr	w0, w9, w8, lsl #10
  404d78:	ldr	w1, [sp, #80]
  404d7c:	ldr	x2, [sp, #56]
  404d80:	mov	w3, #0x1db                 	// #475
  404d84:	ldr	x4, [sp, #48]
  404d88:	adrp	x5, 405000 <_fini+0x24>
  404d8c:	add	x5, x5, #0x8ea
  404d90:	bl	401bd0 <log_internal_realm@plt>
  404d94:	str	w0, [sp, #8]
  404d98:	b	404db0 <relabel_extra+0x63c>
  404d9c:	ldr	w0, [sp, #80]
  404da0:	bl	401be0 <abs@plt>
  404da4:	mov	w8, wzr
  404da8:	subs	w8, w8, w0, uxtb
  404dac:	str	w8, [sp, #8]
  404db0:	ldr	w8, [sp, #8]
  404db4:	str	w8, [sp, #72]
  404db8:	ldur	w8, [x29, #-32]
  404dbc:	stur	w8, [x29, #-4]
  404dc0:	mov	w8, #0x1                   	// #1
  404dc4:	stur	w8, [x29, #-52]
  404dc8:	sub	x0, x29, #0x10
  404dcc:	bl	404ebc <strv_freep>
  404dd0:	ldur	w0, [x29, #-4]
  404dd4:	ldr	x28, [sp, #272]
  404dd8:	ldp	x29, x30, [sp, #256]
  404ddc:	add	sp, sp, #0x120
  404de0:	ret

0000000000404de4 <set_free_free>:
  404de4:	sub	sp, sp, #0x20
  404de8:	stp	x29, x30, [sp, #16]
  404dec:	add	x29, sp, #0x10
  404df0:	adrp	x1, 41f000 <__FRAME_END__+0x195b0>
  404df4:	ldr	x1, [x1, #3456]
  404df8:	mov	x8, xzr
  404dfc:	str	x0, [sp, #8]
  404e00:	ldr	x0, [sp, #8]
  404e04:	mov	x2, x8
  404e08:	bl	401cf0 <internal_hashmap_free@plt>
  404e0c:	ldp	x29, x30, [sp, #16]
  404e10:	add	sp, sp, #0x20
  404e14:	ret

0000000000404e18 <strna>:
  404e18:	sub	sp, sp, #0x20
  404e1c:	str	x0, [sp, #24]
  404e20:	ldr	x8, [sp, #24]
  404e24:	str	x8, [sp, #16]
  404e28:	cbz	x8, 404e38 <strna+0x20>
  404e2c:	ldr	x8, [sp, #16]
  404e30:	str	x8, [sp, #8]
  404e34:	b	404e44 <strna+0x2c>
  404e38:	adrp	x8, 405000 <_fini+0x24>
  404e3c:	add	x8, x8, #0x60f
  404e40:	str	x8, [sp, #8]
  404e44:	ldr	x8, [sp, #8]
  404e48:	mov	x0, x8
  404e4c:	add	sp, sp, #0x20
  404e50:	ret

0000000000404e54 <size_multiply_overflow>:
  404e54:	sub	sp, sp, #0x20
  404e58:	str	x0, [sp, #24]
  404e5c:	str	x1, [sp, #16]
  404e60:	ldr	x8, [sp, #16]
  404e64:	mov	w9, #0x0                   	// #0
  404e68:	str	w9, [sp, #12]
  404e6c:	cbz	x8, 404e8c <size_multiply_overflow+0x38>
  404e70:	ldr	x8, [sp, #24]
  404e74:	ldr	x9, [sp, #16]
  404e78:	mov	x10, #0xffffffffffffffff    	// #-1
  404e7c:	udiv	x9, x10, x9
  404e80:	cmp	x8, x9
  404e84:	cset	w11, hi  // hi = pmore
  404e88:	str	w11, [sp, #12]
  404e8c:	ldr	w8, [sp, #12]
  404e90:	mov	w9, #0x1                   	// #1
  404e94:	eor	w8, w8, #0x1
  404e98:	eor	w8, w8, w9
  404e9c:	and	w8, w8, #0x1
  404ea0:	mov	w0, w8
  404ea4:	sxtw	x10, w0
  404ea8:	cmp	x10, #0x0
  404eac:	cset	w8, ne  // ne = any
  404eb0:	and	w0, w8, #0x1
  404eb4:	add	sp, sp, #0x20
  404eb8:	ret

0000000000404ebc <strv_freep>:
  404ebc:	sub	sp, sp, #0x20
  404ec0:	stp	x29, x30, [sp, #16]
  404ec4:	add	x29, sp, #0x10
  404ec8:	str	x0, [sp, #8]
  404ecc:	ldr	x8, [sp, #8]
  404ed0:	ldr	x8, [x8]
  404ed4:	cbz	x8, 404ee4 <strv_freep+0x28>
  404ed8:	ldr	x8, [sp, #8]
  404edc:	ldr	x0, [x8]
  404ee0:	bl	401f90 <strv_free@plt>
  404ee4:	ldp	x29, x30, [sp, #16]
  404ee8:	add	sp, sp, #0x20
  404eec:	ret

0000000000404ef0 <fclosep>:
  404ef0:	sub	sp, sp, #0x20
  404ef4:	stp	x29, x30, [sp, #16]
  404ef8:	add	x29, sp, #0x10
  404efc:	str	x0, [sp, #8]
  404f00:	ldr	x8, [sp, #8]
  404f04:	ldr	x0, [x8]
  404f08:	bl	401fa0 <safe_fclose@plt>
  404f0c:	ldp	x29, x30, [sp, #16]
  404f10:	add	sp, sp, #0x20
  404f14:	ret

0000000000404f18 <read_line>:
  404f18:	sub	sp, sp, #0x30
  404f1c:	stp	x29, x30, [sp, #32]
  404f20:	add	x29, sp, #0x20
  404f24:	mov	w8, wzr
  404f28:	stur	x0, [x29, #-8]
  404f2c:	str	x1, [sp, #16]
  404f30:	str	x2, [sp, #8]
  404f34:	ldur	x0, [x29, #-8]
  404f38:	ldr	x1, [sp, #16]
  404f3c:	ldr	x3, [sp, #8]
  404f40:	mov	w2, w8
  404f44:	bl	401fb0 <read_line_full@plt>
  404f48:	ldp	x29, x30, [sp, #32]
  404f4c:	add	sp, sp, #0x30
  404f50:	ret
  404f54:	udf	#0

0000000000404f58 <__libc_csu_init>:
  404f58:	stp	x29, x30, [sp, #-64]!
  404f5c:	mov	x29, sp
  404f60:	stp	x19, x20, [sp, #16]
  404f64:	adrp	x20, 41f000 <__FRAME_END__+0x195b0>
  404f68:	add	x20, x20, #0x6b8
  404f6c:	stp	x21, x22, [sp, #32]
  404f70:	adrp	x21, 41f000 <__FRAME_END__+0x195b0>
  404f74:	add	x21, x21, #0x6b0
  404f78:	sub	x20, x20, x21
  404f7c:	mov	w22, w0
  404f80:	stp	x23, x24, [sp, #48]
  404f84:	mov	x23, x1
  404f88:	mov	x24, x2
  404f8c:	bl	401b08 <_init>
  404f90:	cmp	xzr, x20, asr #3
  404f94:	b.eq	404fc0 <__libc_csu_init+0x68>  // b.none
  404f98:	asr	x20, x20, #3
  404f9c:	mov	x19, #0x0                   	// #0
  404fa0:	ldr	x3, [x21, x19, lsl #3]
  404fa4:	mov	x2, x24
  404fa8:	add	x19, x19, #0x1
  404fac:	mov	x1, x23
  404fb0:	mov	w0, w22
  404fb4:	blr	x3
  404fb8:	cmp	x20, x19
  404fbc:	b.ne	404fa0 <__libc_csu_init+0x48>  // b.any
  404fc0:	ldp	x19, x20, [sp, #16]
  404fc4:	ldp	x21, x22, [sp, #32]
  404fc8:	ldp	x23, x24, [sp, #48]
  404fcc:	ldp	x29, x30, [sp], #64
  404fd0:	ret
  404fd4:	nop

0000000000404fd8 <__libc_csu_fini>:
  404fd8:	ret

Disassembly of section .fini:

0000000000404fdc <_fini>:
  404fdc:	stp	x29, x30, [sp, #-16]!
  404fe0:	mov	x29, sp
  404fe4:	ldp	x29, x30, [sp], #16
  404fe8:	ret
