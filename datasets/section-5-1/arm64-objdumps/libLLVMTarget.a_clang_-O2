In archive /home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libLLVMTarget.a_clang_-O2:

Target.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x19, x0
  10:	bl	0 <_ZN4llvm42initializeTargetLibraryInfoWrapperPassPassERNS_12PassRegistryE>
  14:	mov	x0, x19
  18:	ldr	x19, [sp, #16]
  1c:	ldp	x29, x30, [sp], #32
  20:	b	0 <_ZN4llvm44initializeTargetTransformInfoWrapperPassPassERNS_12PassRegistryE>

0000000000000024 <LLVMInitializeTarget>:
  24:	stp	x29, x30, [sp, #-32]!
  28:	str	x19, [sp, #16]
  2c:	mov	x29, sp
  30:	mov	x19, x0
  34:	bl	0 <_ZN4llvm42initializeTargetLibraryInfoWrapperPassPassERNS_12PassRegistryE>
  38:	mov	x0, x19
  3c:	ldr	x19, [sp, #16]
  40:	ldp	x29, x30, [sp], #32
  44:	b	0 <_ZN4llvm44initializeTargetTransformInfoWrapperPassPassERNS_12PassRegistryE>

0000000000000048 <LLVMGetModuleDataLayout>:
  48:	b	0 <_ZNK4llvm6Module13getDataLayoutEv>

000000000000004c <LLVMSetModuleDataLayout>:
  4c:	b	0 <_ZN4llvm6Module13setDataLayoutERKNS_10DataLayoutE>

0000000000000050 <LLVMCreateTargetData>:
  50:	stp	x29, x30, [sp, #-32]!
  54:	stp	x20, x19, [sp, #16]
  58:	mov	x29, sp
  5c:	mov	x19, x0
  60:	mov	w0, #0x1b0                 	// #432
  64:	bl	0 <_Znwm>
  68:	mov	x20, x0
  6c:	cbz	x19, 80 <LLVMCreateTargetData+0x30>
  70:	mov	x0, x19
  74:	bl	0 <strlen>
  78:	mov	x2, x0
  7c:	b	84 <LLVMCreateTargetData+0x34>
  80:	mov	x2, xzr
  84:	adrp	x9, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
  88:	ldr	d0, [x9]
  8c:	adrp	x9, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
  90:	ldr	d1, [x9]
  94:	add	x8, x20, #0x30
  98:	str	x8, [x20, #32]
  9c:	add	x8, x20, #0x48
  a0:	mov	x9, x20
  a4:	str	x8, [x20, #56]
  a8:	add	x8, x20, #0xf8
  ac:	strh	wzr, [x20, #8]
  b0:	strh	wzr, [x20, #16]
  b4:	str	d0, [x20, #40]
  b8:	str	d1, [x20, #64]
  bc:	strb	wzr, [x9, #216]!
  c0:	str	x8, [x20, #232]
  c4:	add	x8, x20, #0x190
  c8:	mov	x0, x20
  cc:	mov	x1, x19
  d0:	stp	xzr, x8, [x20, #376]
  d4:	str	d0, [x20, #240]
  d8:	stp	x9, xzr, [x20, #200]
  dc:	str	d0, [x20, #392]
  e0:	bl	0 <_ZN4llvm10DataLayout5resetENS_9StringRefE>
  e4:	mov	x0, x20
  e8:	ldp	x20, x19, [sp, #16]
  ec:	ldp	x29, x30, [sp], #32
  f0:	ret

00000000000000f4 <LLVMDisposeTargetData>:
  f4:	cbz	x0, 11c <LLVMDisposeTargetData+0x28>
  f8:	stp	x29, x30, [sp, #-32]!
  fc:	str	x19, [sp, #16]
 100:	mov	x29, sp
 104:	mov	x19, x0
 108:	bl	0 <_ZN4llvm10DataLayoutD1Ev>
 10c:	mov	x0, x19
 110:	ldr	x19, [sp, #16]
 114:	ldp	x29, x30, [sp], #32
 118:	b	0 <_ZdlPv>
 11c:	ret

0000000000000120 <LLVMAddTargetLibraryInfo>:
 120:	stp	x29, x30, [sp, #-48]!
 124:	str	x21, [sp, #16]
 128:	stp	x20, x19, [sp, #32]
 12c:	mov	x29, sp
 130:	mov	x20, x0
 134:	mov	w0, #0x118                 	// #280
 138:	mov	x19, x1
 13c:	bl	0 <_Znwm>
 140:	mov	x1, x20
 144:	mov	x21, x0
 148:	bl	0 <_ZN4llvm28TargetLibraryInfoWrapperPassC1ERKNS_21TargetLibraryInfoImplE>
 14c:	ldr	x8, [x19]
 150:	mov	x0, x19
 154:	mov	x1, x21
 158:	ldp	x20, x19, [sp, #32]
 15c:	ldr	x2, [x8, #16]
 160:	ldr	x21, [sp, #16]
 164:	ldp	x29, x30, [sp], #48
 168:	br	x2

000000000000016c <LLVMCopyStringRepOfTargetData>:
 16c:	sub	sp, sp, #0x50
 170:	stp	x29, x30, [sp, #32]
 174:	str	x21, [sp, #48]
 178:	stp	x20, x19, [sp, #64]
 17c:	add	x29, sp, #0x20
 180:	mov	x8, sp
 184:	add	x21, x8, #0x10
 188:	str	x21, [sp]
 18c:	ldp	x19, x20, [x0, #200]
 190:	cbnz	x19, 198 <LLVMCopyStringRepOfTargetData+0x2c>
 194:	cbnz	x20, 238 <LLVMCopyStringRepOfTargetData+0xcc>
 198:	cmp	x20, #0x10
 19c:	str	x20, [x29, #24]
 1a0:	b.cc	1c8 <LLVMCopyStringRepOfTargetData+0x5c>  // b.lo, b.ul, b.last
 1a4:	mov	x0, sp
 1a8:	add	x1, x29, #0x18
 1ac:	mov	x2, xzr
 1b0:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
 1b4:	ldr	x8, [x29, #24]
 1b8:	str	x0, [sp]
 1bc:	str	x8, [sp, #16]
 1c0:	cbnz	x20, 1d0 <LLVMCopyStringRepOfTargetData+0x64>
 1c4:	b	1f0 <LLVMCopyStringRepOfTargetData+0x84>
 1c8:	mov	x0, x21
 1cc:	cbz	x20, 1f0 <LLVMCopyStringRepOfTargetData+0x84>
 1d0:	cmp	x20, #0x1
 1d4:	b.ne	1e4 <LLVMCopyStringRepOfTargetData+0x78>  // b.any
 1d8:	ldrb	w8, [x19]
 1dc:	strb	w8, [x0]
 1e0:	b	1f0 <LLVMCopyStringRepOfTargetData+0x84>
 1e4:	mov	x1, x19
 1e8:	mov	x2, x20
 1ec:	bl	0 <memcpy>
 1f0:	ldr	x8, [x29, #24]
 1f4:	ldr	x9, [sp]
 1f8:	str	x8, [sp, #8]
 1fc:	strb	wzr, [x9, x8]
 200:	ldr	x0, [sp]
 204:	bl	0 <strdup>
 208:	ldr	x8, [sp]
 20c:	mov	x19, x0
 210:	cmp	x8, x21
 214:	b.eq	220 <LLVMCopyStringRepOfTargetData+0xb4>  // b.none
 218:	mov	x0, x8
 21c:	bl	0 <_ZdlPv>
 220:	mov	x0, x19
 224:	ldp	x20, x19, [sp, #64]
 228:	ldr	x21, [sp, #48]
 22c:	ldp	x29, x30, [sp, #32]
 230:	add	sp, sp, #0x50
 234:	ret
 238:	adrp	x0, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 23c:	add	x0, x0, #0x0
 240:	bl	0 <_ZSt19__throw_logic_errorPKc>

0000000000000244 <LLVMByteOrder>:
 244:	ldrb	w8, [x0]
 248:	eor	w0, w8, #0x1
 24c:	ret

0000000000000250 <LLVMPointerSize>:
 250:	mov	w1, wzr
 254:	b	0 <_ZNK4llvm10DataLayout14getPointerSizeEj>

0000000000000258 <LLVMPointerSizeForAS>:
 258:	b	0 <_ZNK4llvm10DataLayout14getPointerSizeEj>

000000000000025c <LLVMIntPtrType>:
 25c:	stp	x29, x30, [sp, #-32]!
 260:	str	x19, [sp, #16]
 264:	mov	x29, sp
 268:	mov	x19, x0
 26c:	bl	0 <LLVMGetGlobalContext>
 270:	mov	x1, x0
 274:	mov	x0, x19
 278:	ldr	x19, [sp, #16]
 27c:	mov	w2, wzr
 280:	ldp	x29, x30, [sp], #32
 284:	b	0 <_ZNK4llvm10DataLayout13getIntPtrTypeERNS_11LLVMContextEj>

0000000000000288 <LLVMIntPtrTypeForAS>:
 288:	stp	x29, x30, [sp, #-32]!
 28c:	stp	x20, x19, [sp, #16]
 290:	mov	x29, sp
 294:	mov	w19, w1
 298:	mov	x20, x0
 29c:	bl	0 <LLVMGetGlobalContext>
 2a0:	mov	x1, x0
 2a4:	mov	x0, x20
 2a8:	mov	w2, w19
 2ac:	ldp	x20, x19, [sp, #16]
 2b0:	ldp	x29, x30, [sp], #32
 2b4:	b	0 <_ZNK4llvm10DataLayout13getIntPtrTypeERNS_11LLVMContextEj>

00000000000002b8 <LLVMIntPtrTypeInContext>:
 2b8:	mov	x8, x0
 2bc:	mov	x0, x1
 2c0:	mov	x1, x8
 2c4:	mov	w2, wzr
 2c8:	b	0 <_ZNK4llvm10DataLayout13getIntPtrTypeERNS_11LLVMContextEj>

00000000000002cc <LLVMIntPtrTypeForASInContext>:
 2cc:	mov	x8, x0
 2d0:	mov	x0, x1
 2d4:	mov	x1, x8
 2d8:	b	0 <_ZNK4llvm10DataLayout13getIntPtrTypeERNS_11LLVMContextEj>

00000000000002dc <LLVMSizeOfTypeInBits>:
 2dc:	stp	x29, x30, [sp, #-16]!
 2e0:	mov	x29, sp
 2e4:	bl	0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 2e8:	tst	w1, #0xff
 2ec:	b.ne	2f8 <LLVMSizeOfTypeInBits+0x1c>  // b.any
 2f0:	ldp	x29, x30, [sp], #16
 2f4:	ret
 2f8:	adrp	x0, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 2fc:	adrp	x1, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 300:	adrp	x3, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 304:	add	x0, x0, #0x0
 308:	add	x1, x1, #0x0
 30c:	add	x3, x3, #0x0
 310:	mov	w2, #0x7d                  	// #125
 314:	bl	0 <__assert_fail>

0000000000000318 <LLVMStoreSizeOfType>:
 318:	stp	x29, x30, [sp, #-16]!
 31c:	mov	x29, sp
 320:	bl	0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 324:	tst	w1, #0xff
 328:	b.ne	33c <LLVMStoreSizeOfType+0x24>  // b.any
 32c:	add	x8, x0, #0x7
 330:	lsr	x0, x8, #3
 334:	ldp	x29, x30, [sp], #16
 338:	ret
 33c:	adrp	x0, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 340:	adrp	x1, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 344:	adrp	x3, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 348:	add	x0, x0, #0x0
 34c:	add	x1, x1, #0x0
 350:	add	x3, x3, #0x0
 354:	mov	w2, #0x7d                  	// #125
 358:	bl	0 <__assert_fail>

000000000000035c <LLVMABISizeOfType>:
 35c:	stp	x29, x30, [sp, #-48]!
 360:	stp	x22, x21, [sp, #16]
 364:	stp	x20, x19, [sp, #32]
 368:	mov	x29, sp
 36c:	mov	x21, x1
 370:	mov	x22, x0
 374:	bl	0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 378:	mov	x19, x0
 37c:	mov	x20, x1
 380:	mov	x0, x22
 384:	mov	x1, x21
 388:	bl	0 <_ZNK4llvm10DataLayout19getABITypeAlignmentEPNS_4TypeE>
 38c:	cbz	w0, 3c0 <LLVMABISizeOfType+0x64>
 390:	and	w8, w20, #0xff
 394:	cbnz	w8, 3e0 <LLVMABISizeOfType+0x84>
 398:	mov	w8, w0
 39c:	add	x9, x19, #0x7
 3a0:	add	x9, x8, x9, lsr #3
 3a4:	ldp	x20, x19, [sp, #32]
 3a8:	ldp	x22, x21, [sp, #16]
 3ac:	sub	x9, x9, #0x1
 3b0:	udiv	x9, x9, x8
 3b4:	mul	x0, x9, x8
 3b8:	ldp	x29, x30, [sp], #48
 3bc:	ret
 3c0:	adrp	x0, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 3c4:	adrp	x1, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 3c8:	adrp	x3, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 3cc:	add	x0, x0, #0x0
 3d0:	add	x1, x1, #0x0
 3d4:	add	x3, x3, #0x0
 3d8:	mov	w2, #0xc7                  	// #199
 3dc:	bl	0 <__assert_fail>
 3e0:	adrp	x0, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 3e4:	adrp	x1, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 3e8:	adrp	x3, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 3ec:	add	x0, x0, #0x0
 3f0:	add	x1, x1, #0x0
 3f4:	add	x3, x3, #0x0
 3f8:	mov	w2, #0x7d                  	// #125
 3fc:	bl	0 <__assert_fail>

0000000000000400 <LLVMABIAlignmentOfType>:
 400:	b	0 <_ZNK4llvm10DataLayout19getABITypeAlignmentEPNS_4TypeE>

0000000000000404 <LLVMCallFrameAlignmentOfType>:
 404:	b	0 <_ZNK4llvm10DataLayout19getABITypeAlignmentEPNS_4TypeE>

0000000000000408 <LLVMPreferredAlignmentOfType>:
 408:	b	0 <_ZNK4llvm10DataLayout20getPrefTypeAlignmentEPNS_4TypeE>

000000000000040c <LLVMPreferredAlignmentOfGlobal>:
 40c:	stp	x29, x30, [sp, #-16]!
 410:	mov	x29, sp
 414:	cbz	x1, 42c <LLVMPreferredAlignmentOfGlobal+0x20>
 418:	ldrb	w8, [x1, #16]
 41c:	cmp	w8, #0x3
 420:	b.ne	44c <LLVMPreferredAlignmentOfGlobal+0x40>  // b.any
 424:	ldp	x29, x30, [sp], #16
 428:	b	0 <_ZNK4llvm10DataLayout21getPreferredAlignmentEPKNS_14GlobalVariableE>
 42c:	adrp	x0, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 430:	adrp	x1, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 434:	adrp	x3, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 438:	add	x0, x0, #0x0
 43c:	add	x1, x1, #0x0
 440:	add	x3, x3, #0x0
 444:	mov	w2, #0x69                  	// #105
 448:	bl	0 <__assert_fail>
 44c:	adrp	x0, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 450:	adrp	x1, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 454:	adrp	x3, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 458:	add	x0, x0, #0x0
 45c:	add	x1, x1, #0x0
 460:	add	x3, x3, #0x0
 464:	mov	w2, #0x108                 	// #264
 468:	bl	0 <__assert_fail>

000000000000046c <LLVMElementAtOffset>:
 46c:	stp	x29, x30, [sp, #-32]!
 470:	str	x19, [sp, #16]
 474:	mov	x29, sp
 478:	cbz	x1, 4a0 <LLVMElementAtOffset+0x34>
 47c:	ldrb	w8, [x1, #8]
 480:	cmp	w8, #0xd
 484:	b.ne	4c0 <LLVMElementAtOffset+0x54>  // b.any
 488:	mov	x19, x2
 48c:	bl	0 <_ZNK4llvm10DataLayout15getStructLayoutEPNS_10StructTypeE>
 490:	mov	x1, x19
 494:	ldr	x19, [sp, #16]
 498:	ldp	x29, x30, [sp], #32
 49c:	b	0 <_ZNK4llvm12StructLayout26getElementContainingOffsetEm>
 4a0:	adrp	x0, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 4a4:	adrp	x1, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 4a8:	adrp	x3, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 4ac:	add	x0, x0, #0x0
 4b0:	add	x1, x1, #0x0
 4b4:	add	x3, x3, #0x0
 4b8:	mov	w2, #0x69                  	// #105
 4bc:	bl	0 <__assert_fail>
 4c0:	adrp	x0, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 4c4:	adrp	x1, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 4c8:	adrp	x3, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 4cc:	add	x0, x0, #0x0
 4d0:	add	x1, x1, #0x0
 4d4:	add	x3, x3, #0x0
 4d8:	mov	w2, #0x108                 	// #264
 4dc:	bl	0 <__assert_fail>

00000000000004e0 <LLVMOffsetOfElement>:
 4e0:	stp	x29, x30, [sp, #-32]!
 4e4:	str	x19, [sp, #16]
 4e8:	mov	x29, sp
 4ec:	cbz	x1, 528 <LLVMOffsetOfElement+0x48>
 4f0:	ldrb	w8, [x1, #8]
 4f4:	cmp	w8, #0xd
 4f8:	b.ne	548 <LLVMOffsetOfElement+0x68>  // b.any
 4fc:	mov	w19, w2
 500:	bl	0 <_ZNK4llvm10DataLayout15getStructLayoutEPNS_10StructTypeE>
 504:	ldr	w8, [x0, #12]
 508:	and	w8, w8, #0x7fffffff
 50c:	cmp	w8, w19
 510:	b.ls	568 <LLVMOffsetOfElement+0x88>  // b.plast
 514:	add	x8, x0, w19, uxtw #3
 518:	ldr	x0, [x8, #16]
 51c:	ldr	x19, [sp, #16]
 520:	ldp	x29, x30, [sp], #32
 524:	ret
 528:	adrp	x0, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 52c:	adrp	x1, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 530:	adrp	x3, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 534:	add	x0, x0, #0x0
 538:	add	x1, x1, #0x0
 53c:	add	x3, x3, #0x0
 540:	mov	w2, #0x69                  	// #105
 544:	bl	0 <__assert_fail>
 548:	adrp	x0, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 54c:	adrp	x1, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 550:	adrp	x3, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 554:	add	x0, x0, #0x0
 558:	add	x1, x1, #0x0
 55c:	add	x3, x3, #0x0
 560:	mov	w2, #0x108                 	// #264
 564:	bl	0 <__assert_fail>
 568:	adrp	x0, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 56c:	adrp	x1, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 570:	adrp	x3, 0 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
 574:	add	x0, x0, #0x0
 578:	add	x1, x1, #0x0
 57c:	add	x3, x3, #0x0
 580:	mov	w2, #0x260                 	// #608
 584:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE:

0000000000000000 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldr	w8, [x1, #8]
  14:	and	w9, w8, #0xff
  18:	cmp	w9, #0x10
  1c:	b.hi	18c <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x18c>  // b.pmore
  20:	mov	w10, #0x1                   	// #1
  24:	lsl	w9, w10, w9
  28:	mov	w10, #0x8a7e                	// #35454
  2c:	mov	x20, x1
  30:	mov	x19, x0
  34:	tst	w9, w10
  38:	b.ne	60 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x60>  // b.any
  3c:	mov	w8, #0x6000                	// #24576
  40:	movk	w8, #0x1, lsl #16
  44:	tst	w9, w8
  48:	b.eq	18c <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x18c>  // b.none
  4c:	mov	x0, x20
  50:	mov	x1, xzr
  54:	bl	0 <_ZNK4llvm4Type18isSizedDerivedTypeEPNS_15SmallPtrSetImplIPS0_EE>
  58:	tbz	w0, #0, 18c <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x18c>
  5c:	ldr	w8, [x20, #8]
  60:	and	w9, w8, #0xff
  64:	sub	w9, w9, #0x1
  68:	cmp	w9, #0xf
  6c:	b.hi	174 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x174>  // b.pmore
  70:	adrp	x10, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
  74:	add	x10, x10, #0x0
  78:	adr	x11, 90 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x90>
  7c:	ldrb	w12, [x10, x9]
  80:	add	x11, x11, x12, lsl #2
  84:	mov	x1, xzr
  88:	mov	w0, #0x10                  	// #16
  8c:	br	x11
  90:	mov	x1, xzr
  94:	mov	w0, #0x40                  	// #64
  98:	b	160 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x160>
  9c:	mov	x1, xzr
  a0:	mov	w0, #0x80                  	// #128
  a4:	b	160 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x160>
  a8:	and	w9, w8, #0xff
  ac:	cmp	w9, #0xf
  b0:	b.ne	1ac <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x1ac>  // b.any
  b4:	lsr	w1, w8, #8
  b8:	mov	x0, x19
  bc:	b	118 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x118>
  c0:	ldr	x21, [x20, #32]
  c4:	lsr	x8, x21, #32
  c8:	cbnz	x8, 1cc <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x1cc>
  cc:	ldr	x1, [x20, #24]
  d0:	ldrb	w22, [x20, #40]
  d4:	mov	x0, x19
  d8:	bl	0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
  dc:	tst	w1, #0xff
  e0:	b.ne	1ec <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x1ec>  // b.any
  e4:	and	x8, x21, #0x100000000
  e8:	orr	x8, x8, x22, lsl #32
  ec:	mul	x0, x0, x21
  f0:	lsr	x1, x8, #32
  f4:	b	160 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x160>
  f8:	mov	x0, x19
  fc:	mov	x1, x20
 100:	bl	0 <_ZNK4llvm10DataLayout15getStructLayoutEPNS_10StructTypeE>
 104:	ldr	x8, [x0]
 108:	mov	x1, xzr
 10c:	b	15c <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x15c>
 110:	mov	x0, x19
 114:	mov	w1, wzr
 118:	bl	0 <_ZNK4llvm10DataLayout14getPointerSizeEj>
 11c:	mov	x1, xzr
 120:	lsl	w0, w0, #3
 124:	b	160 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x160>
 128:	mov	x1, xzr
 12c:	mov	w0, #0x20                  	// #32
 130:	b	160 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x160>
 134:	mov	x1, xzr
 138:	mov	w0, #0x50                  	// #80
 13c:	b	160 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x160>
 140:	mov	x1, xzr
 144:	lsr	w0, w8, #8
 148:	b	160 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x160>
 14c:	ldp	x1, x21, [x20, #24]
 150:	mov	x0, x19
 154:	bl	0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 158:	mul	x8, x21, x0
 15c:	lsl	x0, x8, #3
 160:	ldp	x20, x19, [sp, #32]
 164:	ldp	x22, x21, [sp, #16]
 168:	and	x1, x1, #0xff
 16c:	ldp	x29, x30, [sp], #48
 170:	ret
 174:	adrp	x0, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 178:	adrp	x1, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 17c:	add	x0, x0, #0x0
 180:	add	x1, x1, #0x0
 184:	mov	w2, #0x298                 	// #664
 188:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
 18c:	adrp	x0, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 190:	adrp	x1, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 194:	adrp	x3, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 198:	add	x0, x0, #0x0
 19c:	add	x1, x1, #0x0
 1a0:	add	x3, x3, #0x0
 1a4:	mov	w2, #0x271                 	// #625
 1a8:	bl	0 <__assert_fail>
 1ac:	adrp	x0, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 1b0:	adrp	x1, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 1b4:	adrp	x3, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 1b8:	add	x0, x0, #0x0
 1bc:	add	x1, x1, #0x0
 1c0:	add	x3, x3, #0x0
 1c4:	mov	w2, #0x108                 	// #264
 1c8:	bl	0 <__assert_fail>
 1cc:	adrp	x0, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 1d0:	adrp	x1, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 1d4:	adrp	x3, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 1d8:	add	x0, x0, #0x0
 1dc:	add	x1, x1, #0x0
 1e0:	add	x3, x3, #0x0
 1e4:	mov	w2, #0x220                 	// #544
 1e8:	bl	0 <__assert_fail>
 1ec:	adrp	x0, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 1f0:	adrp	x1, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 1f4:	adrp	x3, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 1f8:	add	x0, x0, #0x0
 1fc:	add	x1, x1, #0x0
 200:	add	x3, x3, #0x0
 204:	mov	w2, #0x7d                  	// #125
 208:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm10DataLayout16getTypeAllocSizeEPNS_4TypeE:

0000000000000000 <_ZNK4llvm10DataLayout16getTypeAllocSizeEPNS_4TypeE>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x21, x1
  14:	mov	x22, x0
  18:	bl	0 <_ZNK4llvm10DataLayout16getTypeAllocSizeEPNS_4TypeE>
  1c:	mov	x20, x0
  20:	mov	x19, x1
  24:	mov	x0, x22
  28:	mov	x1, x21
  2c:	bl	0 <_ZNK4llvm10DataLayout19getABITypeAlignmentEPNS_4TypeE>
  30:	cbz	w0, 64 <_ZNK4llvm10DataLayout16getTypeAllocSizeEPNS_4TypeE+0x64>
  34:	mov	w8, w0
  38:	add	x9, x20, #0x7
  3c:	tst	w19, #0xff
  40:	add	x9, x8, x9, lsr #3
  44:	ldp	x20, x19, [sp, #32]
  48:	ldp	x22, x21, [sp, #16]
  4c:	sub	x9, x9, #0x1
  50:	udiv	x9, x9, x8
  54:	cset	w1, ne  // ne = any
  58:	mul	x0, x9, x8
  5c:	ldp	x29, x30, [sp], #48
  60:	ret
  64:	adrp	x0, 0 <_ZNK4llvm10DataLayout16getTypeAllocSizeEPNS_4TypeE>
  68:	adrp	x1, 0 <_ZNK4llvm10DataLayout16getTypeAllocSizeEPNS_4TypeE>
  6c:	adrp	x3, 0 <_ZNK4llvm10DataLayout16getTypeAllocSizeEPNS_4TypeE>
  70:	add	x0, x0, #0x0
  74:	add	x1, x1, #0x0
  78:	add	x3, x3, #0x0
  7c:	mov	w2, #0xc7                  	// #199
  80:	bl	0 <__assert_fail>

TargetIntrinsicInfo.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm19TargetIntrinsicInfoC2Ev>:
   0:	adrp	x8, 0 <_ZN4llvm19TargetIntrinsicInfoC2Ev>
   4:	ldr	x8, [x8]
   8:	add	x8, x8, #0x10
   c:	str	x8, [x0]
  10:	ret

0000000000000014 <_ZN4llvm19TargetIntrinsicInfoD1Ev>:
  14:	ret

0000000000000018 <_ZN4llvm19TargetIntrinsicInfoD0Ev>:
  18:	brk	#0x1

000000000000001c <_ZNK4llvm19TargetIntrinsicInfo14getIntrinsicIDEPKNS_8FunctionE>:
  1c:	stp	x29, x30, [sp, #-32]!
  20:	str	x19, [sp, #16]
  24:	mov	x29, sp
  28:	mov	x19, x0
  2c:	mov	x0, x1
  30:	bl	0 <_ZNK4llvm5Value12getValueNameEv>
  34:	cbz	x0, 58 <_ZNK4llvm19TargetIntrinsicInfo14getIntrinsicIDEPKNS_8FunctionE+0x3c>
  38:	mov	x1, x0
  3c:	ldr	w2, [x1], #16
  40:	ldr	x8, [x19]
  44:	mov	x0, x19
  48:	ldr	x19, [sp, #16]
  4c:	ldr	x3, [x8, #24]
  50:	ldp	x29, x30, [sp], #32
  54:	br	x3
  58:	ldr	x19, [sp, #16]
  5c:	ldp	x29, x30, [sp], #32
  60:	ret

TargetLoweringObjectFile.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	stp	x24, x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	ldr	x21, [x0, #808]
  18:	mov	x19, x2
  1c:	mov	x20, x0
  20:	add	x24, x0, #0x334
  24:	str	x1, [x0, #800]
  28:	cbz	x21, 3c <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE+0x3c>
  2c:	ldr	x0, [x21, #8]
  30:	bl	0 <_ZdlPv>
  34:	mov	x0, x21
  38:	bl	0 <_ZdlPv>
  3c:	mov	w0, #0x20                  	// #32
  40:	bl	0 <_Znwm>
  44:	movi	v0.2d, #0x0
  48:	stp	q0, q0, [x0]
  4c:	str	x0, [x20, #808]
  50:	mov	x0, x19
  54:	add	x21, x20, #0x8
  58:	add	x22, x19, #0x1c0
  5c:	bl	0 <_ZNK4llvm13TargetMachine21isPositionIndependentEv>
  60:	ldr	x20, [x20, #800]
  64:	mov	w23, w0
  68:	mov	x0, x19
  6c:	bl	0 <_ZNK4llvm13TargetMachine12getCodeModelEv>
  70:	cmp	w0, #0x4
  74:	cset	w4, eq  // eq = none
  78:	and	w2, w23, #0x1
  7c:	mov	x0, x21
  80:	mov	x1, x22
  84:	mov	x3, x20
  88:	bl	0 <_ZN4llvm16MCObjectFileInfo20InitMCObjectFileInfoERKNS_6TripleEbRNS_9MCContextEb>
  8c:	adrp	x8, 0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
  90:	ldr	d0, [x8]
  94:	str	xzr, [x24]
  98:	str	d0, [x24, #8]
  9c:	ldp	x20, x19, [sp, #48]
  a0:	ldp	x22, x21, [sp, #32]
  a4:	ldp	x24, x23, [sp, #16]
  a8:	ldp	x29, x30, [sp], #64
  ac:	ret

00000000000000b0 <_ZN4llvm24TargetLoweringObjectFileD1Ev>:
  b0:	stp	x29, x30, [sp, #-32]!
  b4:	stp	x20, x19, [sp, #16]
  b8:	mov	x29, sp
  bc:	adrp	x8, 0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
  c0:	ldr	x20, [x0, #808]
  c4:	ldr	x8, [x8]
  c8:	mov	x19, x0
  cc:	add	x8, x8, #0x10
  d0:	str	x8, [x0]
  d4:	cbz	x20, e8 <_ZN4llvm24TargetLoweringObjectFileD1Ev+0x38>
  d8:	ldr	x0, [x20, #8]
  dc:	bl	0 <_ZdlPv>
  e0:	mov	x0, x20
  e4:	bl	0 <_ZdlPv>
  e8:	ldr	x0, [x19, #728]
  ec:	add	x8, x19, #0x2e8
  f0:	add	x19, x19, #0x8
  f4:	cmp	x0, x8
  f8:	b.eq	100 <_ZN4llvm24TargetLoweringObjectFileD1Ev+0x50>  // b.none
  fc:	bl	0 <_ZdlPv>
 100:	ldr	x0, [x19, #456]
 104:	bl	0 <_ZdlPv>
 108:	ldr	x8, [x19, #448]
 10c:	add	x8, x8, #0x1
 110:	str	x8, [x19, #448]
 114:	ldp	x20, x19, [sp, #16]
 118:	ldp	x29, x30, [sp], #32
 11c:	ret

0000000000000120 <_ZN4llvm24TargetLoweringObjectFileD0Ev>:
 120:	brk	#0x1

0000000000000124 <_ZNK4llvm24TargetLoweringObjectFile28getSymbolWithGlobalValueBaseEPKNS_11GlobalValueENS_9StringRefERKNS_13TargetMachineE>:
 124:	sub	sp, sp, #0xc0
 128:	stp	x29, x30, [sp, #112]
 12c:	stp	x26, x25, [sp, #128]
 130:	stp	x24, x23, [sp, #144]
 134:	stp	x22, x21, [sp, #160]
 138:	stp	x20, x19, [sp, #176]
 13c:	add	x29, sp, #0x70
 140:	cbz	x3, 304 <_ZNK4llvm24TargetLoweringObjectFile28getSymbolWithGlobalValueBaseEPKNS_11GlobalValueENS_9StringRefERKNS_13TargetMachineE+0x1e0>
 144:	adrp	x8, 0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
 148:	ldr	d0, [x8]
 14c:	add	x8, sp, #0x20
 150:	add	x22, x8, #0x10
 154:	str	x22, [sp, #32]
 158:	str	d0, [sp, #40]
 15c:	mov	x19, x0
 160:	ldr	x0, [x1, #40]
 164:	mov	x23, x4
 168:	mov	x20, x3
 16c:	mov	x21, x2
 170:	mov	x24, x1
 174:	bl	0 <_ZNK4llvm6Module13getDataLayoutEv>
 178:	ldr	w8, [x0, #24]
 17c:	cmp	w8, #0x5
 180:	b.hi	324 <_ZNK4llvm24TargetLoweringObjectFile28getSymbolWithGlobalValueBaseEPKNS_11GlobalValueENS_9StringRefERKNS_13TargetMachineE+0x200>  // b.pmore
 184:	adrp	x9, 0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
 188:	add	x9, x9, #0x0
 18c:	adr	x10, 1a8 <_ZNK4llvm24TargetLoweringObjectFile28getSymbolWithGlobalValueBaseEPKNS_11GlobalValueENS_9StringRefERKNS_13TargetMachineE+0x84>
 190:	ldrb	w11, [x9, x8]
 194:	add	x10, x10, x11, lsl #2
 198:	adrp	x26, 0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
 19c:	mov	x25, xzr
 1a0:	add	x26, x26, #0x0
 1a4:	br	x10
 1a8:	adrp	x26, 0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
 1ac:	add	x26, x26, #0x0
 1b0:	mov	w25, #0x2                   	// #2
 1b4:	b	1d0 <_ZNK4llvm24TargetLoweringObjectFile28getSymbolWithGlobalValueBaseEPKNS_11GlobalValueENS_9StringRefERKNS_13TargetMachineE+0xac>
 1b8:	adrp	x26, 0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
 1bc:	add	x26, x26, #0x0
 1c0:	b	1cc <_ZNK4llvm24TargetLoweringObjectFile28getSymbolWithGlobalValueBaseEPKNS_11GlobalValueENS_9StringRefERKNS_13TargetMachineE+0xa8>
 1c4:	adrp	x26, 0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
 1c8:	add	x26, x26, #0x0
 1cc:	mov	w25, #0x1                   	// #1
 1d0:	ldp	w8, w9, [sp, #40]
 1d4:	sub	x9, x9, x8
 1d8:	cmp	x25, x9
 1dc:	b.ls	1f4 <_ZNK4llvm24TargetLoweringObjectFile28getSymbolWithGlobalValueBaseEPKNS_11GlobalValueENS_9StringRefERKNS_13TargetMachineE+0xd0>  // b.plast
 1e0:	add	x2, x25, x8
 1e4:	add	x0, sp, #0x20
 1e8:	mov	w3, #0x1                   	// #1
 1ec:	mov	x1, x22
 1f0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
 1f4:	cbz	x25, 210 <_ZNK4llvm24TargetLoweringObjectFile28getSymbolWithGlobalValueBaseEPKNS_11GlobalValueENS_9StringRefERKNS_13TargetMachineE+0xec>
 1f8:	ldr	x8, [sp, #32]
 1fc:	ldr	w9, [sp, #40]
 200:	mov	x1, x26
 204:	mov	x2, x25
 208:	add	x0, x8, x9
 20c:	bl	0 <memcpy>
 210:	ldp	w8, w9, [sp, #40]
 214:	add	x8, x25, x8
 218:	cmp	x8, x9
 21c:	b.hi	2e4 <_ZNK4llvm24TargetLoweringObjectFile28getSymbolWithGlobalValueBaseEPKNS_11GlobalValueENS_9StringRefERKNS_13TargetMachineE+0x1c0>  // b.pmore
 220:	str	w8, [sp, #40]
 224:	ldr	x3, [x19, #808]
 228:	add	x1, sp, #0x20
 22c:	mov	x0, x23
 230:	mov	x2, x24
 234:	mov	w4, wzr
 238:	bl	0 <_ZNK4llvm13TargetMachine17getNameWithPrefixERNS_15SmallVectorImplIcEEPKNS_11GlobalValueERNS_7ManglerEb>
 23c:	ldp	w8, w9, [sp, #40]
 240:	sub	x9, x9, x8
 244:	cmp	x20, x9
 248:	b.ls	264 <_ZNK4llvm24TargetLoweringObjectFile28getSymbolWithGlobalValueBaseEPKNS_11GlobalValueENS_9StringRefERKNS_13TargetMachineE+0x140>  // b.plast
 24c:	add	x2, x20, x8
 250:	add	x0, sp, #0x20
 254:	mov	w3, #0x1                   	// #1
 258:	mov	x1, x22
 25c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
 260:	ldr	w8, [sp, #40]
 264:	ldr	x9, [sp, #32]
 268:	mov	x1, x21
 26c:	mov	x2, x20
 270:	add	x0, x9, x8
 274:	bl	0 <memcpy>
 278:	ldp	w8, w9, [sp, #40]
 27c:	add	x8, x20, x8
 280:	cmp	x8, x9
 284:	b.hi	2e4 <_ZNK4llvm24TargetLoweringObjectFile28getSymbolWithGlobalValueBaseEPKNS_11GlobalValueENS_9StringRefERKNS_13TargetMachineE+0x1c0>  // b.pmore
 288:	str	w8, [sp, #40]
 28c:	ldr	x0, [x19, #800]
 290:	mov	w8, #0x106                 	// #262
 294:	add	x19, sp, #0x20
 298:	add	x1, sp, #0x8
 29c:	strh	w8, [sp, #24]
 2a0:	stp	x19, xzr, [sp, #8]
 2a4:	bl	0 <_ZN4llvm9MCContext17getOrCreateSymbolERKNS_5TwineE>
 2a8:	ldr	x8, [sp, #32]
 2ac:	add	x9, x19, #0x10
 2b0:	mov	x19, x0
 2b4:	cmp	x8, x9
 2b8:	b.eq	2c4 <_ZNK4llvm24TargetLoweringObjectFile28getSymbolWithGlobalValueBaseEPKNS_11GlobalValueENS_9StringRefERKNS_13TargetMachineE+0x1a0>  // b.none
 2bc:	mov	x0, x8
 2c0:	bl	0 <free>
 2c4:	mov	x0, x19
 2c8:	ldp	x20, x19, [sp, #176]
 2cc:	ldp	x22, x21, [sp, #160]
 2d0:	ldp	x24, x23, [sp, #144]
 2d4:	ldp	x26, x25, [sp, #128]
 2d8:	ldp	x29, x30, [sp, #112]
 2dc:	add	sp, sp, #0xc0
 2e0:	ret
 2e4:	adrp	x0, 0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
 2e8:	adrp	x1, 0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
 2ec:	adrp	x3, 0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
 2f0:	add	x0, x0, #0x0
 2f4:	add	x1, x1, #0x0
 2f8:	add	x3, x3, #0x0
 2fc:	mov	w2, #0x43                  	// #67
 300:	bl	0 <__assert_fail>
 304:	adrp	x0, 0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
 308:	adrp	x1, 0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
 30c:	adrp	x3, 0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
 310:	add	x0, x0, #0x0
 314:	add	x1, x1, #0x0
 318:	add	x3, x3, #0x0
 31c:	mov	w2, #0x76                  	// #118
 320:	bl	0 <__assert_fail>
 324:	adrp	x0, 0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
 328:	adrp	x1, 0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
 32c:	add	x0, x0, #0x0
 330:	add	x1, x1, #0x0
 334:	mov	w2, #0x14d                 	// #333
 338:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

000000000000033c <_ZNK4llvm24TargetLoweringObjectFile23getCFIPersonalitySymbolEPKNS_11GlobalValueERKNS_13TargetMachineEPNS_17MachineModuleInfoE>:
 33c:	mov	x0, x2
 340:	b	0 <_ZNK4llvm13TargetMachine9getSymbolEPKNS_11GlobalValueE>

0000000000000344 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>:
 344:	ret

0000000000000348 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE>:
 348:	stp	x29, x30, [sp, #-64]!
 34c:	str	x23, [sp, #16]
 350:	stp	x22, x21, [sp, #32]
 354:	stp	x20, x19, [sp, #48]
 358:	mov	x29, sp
 35c:	mov	x21, x1
 360:	mov	x19, x0
 364:	bl	0 <_ZNK4llvm11GlobalValue13isDeclarationEv>
 368:	tbnz	w0, #0, 628 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x2e0>
 36c:	ldr	w9, [x19, #32]
 370:	and	w8, w9, #0xf
 374:	cmp	w8, #0x1
 378:	b.eq	628 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x2e0>  // b.none
 37c:	ldrb	w10, [x19, #16]
 380:	cbz	w10, 3cc <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x84>
 384:	cmp	w10, #0x3
 388:	b.ne	648 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x300>  // b.any
 38c:	tst	w9, #0x1c00
 390:	b.eq	3dc <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x94>  // b.none
 394:	mov	x0, x19
 398:	bl	0 <_ZNK4llvm11GlobalValue13isDeclarationEv>
 39c:	tbnz	w0, #0, 668 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x320>
 3a0:	ldur	x0, [x19, #-24]
 3a4:	bl	aec <_ZL13isNullOrUndefPKN4llvm8ConstantE>
 3a8:	tbz	w0, #0, 3d4 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x8c>
 3ac:	ldrb	w8, [x19, #80]
 3b0:	tbnz	w8, #0, 3d4 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x8c>
 3b4:	ldrb	w8, [x19, #34]
 3b8:	tbnz	w8, #6, 3d4 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x8c>
 3bc:	ldrb	w8, [x21, #776]
 3c0:	tbnz	w8, #7, 3d4 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x8c>
 3c4:	mov	w0, #0xb                   	// #11
 3c8:	b	5b8 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x270>
 3cc:	mov	w0, #0x1                   	// #1
 3d0:	b	5b8 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x270>
 3d4:	mov	w0, #0xc                   	// #12
 3d8:	b	5b8 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x270>
 3dc:	cmp	w8, #0xa
 3e0:	b.ne	3ec <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0xa4>  // b.any
 3e4:	mov	w0, #0x10                  	// #16
 3e8:	b	5b8 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x270>
 3ec:	mov	x0, x19
 3f0:	bl	0 <_ZNK4llvm11GlobalValue13isDeclarationEv>
 3f4:	tbnz	w0, #0, 668 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x320>
 3f8:	ldur	x0, [x19, #-24]
 3fc:	bl	aec <_ZL13isNullOrUndefPKN4llvm8ConstantE>
 400:	ldrb	w8, [x19, #80]
 404:	tbz	w0, #0, 434 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0xec>
 408:	tbnz	w8, #0, 440 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0xf8>
 40c:	ldr	w8, [x19, #32]
 410:	tbnz	w8, #22, 438 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0xf0>
 414:	ldrb	w9, [x21, #776]
 418:	tbnz	w9, #7, 438 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0xf0>
 41c:	and	w8, w8, #0xf
 420:	sub	w9, w8, #0x7
 424:	cmp	w9, #0x2
 428:	b.cs	510 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x1c8>  // b.hs, b.nlast
 42c:	mov	w0, #0xe                   	// #14
 430:	b	5b8 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x270>
 434:	tbnz	w8, #0, 440 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0xf8>
 438:	mov	w0, #0x11                  	// #17
 43c:	b	5b8 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x270>
 440:	mov	x0, x19
 444:	bl	0 <_ZNK4llvm11GlobalValue13isDeclarationEv>
 448:	tbnz	w0, #0, 668 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x320>
 44c:	ldur	x20, [x19, #-24]
 450:	mov	x0, x20
 454:	bl	0 <_ZNK4llvm8Constant15needsRelocationEv>
 458:	tbz	w0, #0, 47c <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x134>
 45c:	mov	x0, x21
 460:	bl	0 <_ZNK4llvm13TargetMachine18getRelocationModelEv>
 464:	cmp	w0, #0x6
 468:	b.cs	508 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x1c0>  // b.hs, b.nlast
 46c:	adrp	x8, 0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
 470:	add	x8, x8, #0x0
 474:	ldr	x0, [x8, w0, sxtw #3]
 478:	b	5b8 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x270>
 47c:	ldr	w8, [x19, #32]
 480:	and	w8, w8, #0xc0
 484:	cmp	w8, #0x80
 488:	b.ne	5b4 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x26c>  // b.any
 48c:	ldr	x8, [x20]
 490:	cbz	x8, 688 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x340>
 494:	ldrb	w9, [x8, #8]
 498:	cmp	w9, #0xe
 49c:	b.ne	544 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x1fc>  // b.any
 4a0:	ldr	x23, [x8, #24]
 4a4:	cbz	x23, 6e8 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x3a0>
 4a8:	ldr	w9, [x23, #8]
 4ac:	and	w10, w9, #0xff
 4b0:	cmp	w10, #0xb
 4b4:	b.ne	544 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x1fc>  // b.any
 4b8:	lsr	w9, w9, #8
 4bc:	cmp	w9, #0x20
 4c0:	b.hi	544 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x1fc>  // b.pmore
 4c4:	mov	w10, #0x1                   	// #1
 4c8:	lsl	x9, x10, x9
 4cc:	mov	x10, #0x100                 	// #256
 4d0:	movk	x10, #0x1, lsl #16
 4d4:	movk	x10, #0x1, lsl #32
 4d8:	tst	x9, x10
 4dc:	b.eq	544 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x1fc>  // b.none
 4e0:	ldrb	w9, [x20, #16]
 4e4:	sub	w10, w9, #0xb
 4e8:	cmp	w10, #0x1
 4ec:	b.ls	524 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x1dc>  // b.plast
 4f0:	cmp	w9, #0xa
 4f4:	b.ne	544 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x1fc>  // b.any
 4f8:	ldr	x8, [x8, #32]
 4fc:	cmp	x8, #0x1
 500:	b.ne	544 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x1fc>  // b.any
 504:	b	5f0 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x2a8>
 508:	mov	w0, #0x12                  	// #18
 50c:	b	5b8 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x270>
 510:	cmp	w8, #0x0
 514:	mov	w8, #0xd                   	// #13
 518:	mov	w9, #0xf                   	// #15
 51c:	csel	x0, x9, x8, eq  // eq = none
 520:	b	5b8 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x270>
 524:	mov	x0, x20
 528:	bl	0 <_ZNK4llvm22ConstantDataSequential14getNumElementsEv>
 52c:	cbz	w0, 708 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x3c0>
 530:	sub	w21, w0, #0x1
 534:	mov	x0, x20
 538:	mov	w1, w21
 53c:	bl	0 <_ZNK4llvm22ConstantDataSequential19getElementAsIntegerEj>
 540:	cbz	x0, 5cc <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x284>
 544:	ldr	x0, [x19, #40]
 548:	bl	0 <_ZNK4llvm6Module13getDataLayoutEv>
 54c:	ldr	x21, [x20]
 550:	mov	x22, x0
 554:	mov	x1, x21
 558:	bl	0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
 55c:	mov	x19, x0
 560:	mov	x20, x1
 564:	mov	x0, x22
 568:	mov	x1, x21
 56c:	bl	0 <_ZNK4llvm10DataLayout19getABITypeAlignmentEPNS_4TypeE>
 570:	cbz	w0, 6a8 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x360>
 574:	and	w8, w20, #0xff
 578:	cbnz	w8, 6c8 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x380>
 57c:	mov	w8, w0
 580:	add	x9, x19, #0x7
 584:	add	x9, x8, x9, lsr #3
 588:	sub	x9, x9, #0x1
 58c:	udiv	x9, x9, x8
 590:	orr	x10, xzr, #0xfffffffffffffffc
 594:	madd	x8, x9, x8, x10
 598:	ror	x8, x8, #2
 59c:	cmp	x8, #0x8
 5a0:	b.cs	5b4 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x26c>  // b.hs, b.nlast
 5a4:	adrp	x9, 0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
 5a8:	add	x9, x9, #0x0
 5ac:	ldr	x0, [x9, x8, lsl #3]
 5b0:	b	5b8 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x270>
 5b4:	mov	w0, #0x3                   	// #3
 5b8:	ldp	x20, x19, [sp, #48]
 5bc:	ldp	x22, x21, [sp, #32]
 5c0:	ldr	x23, [sp, #16]
 5c4:	ldp	x29, x30, [sp], #64
 5c8:	ret
 5cc:	cbz	w21, 5f0 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x2a8>
 5d0:	mov	w22, wzr
 5d4:	mov	x0, x20
 5d8:	mov	w1, w22
 5dc:	bl	0 <_ZNK4llvm22ConstantDataSequential19getElementAsIntegerEj>
 5e0:	cbz	x0, 544 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x1fc>
 5e4:	add	w22, w22, #0x1
 5e8:	cmp	w21, w22
 5ec:	b.ne	5d4 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x28c>  // b.any
 5f0:	ldr	w8, [x23, #8]
 5f4:	lsr	w8, w8, #8
 5f8:	cmp	w8, #0x8
 5fc:	b.eq	620 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x2d8>  // b.none
 600:	cmp	w8, #0x10
 604:	b.eq	618 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x2d0>  // b.none
 608:	cmp	w8, #0x20
 60c:	b.ne	728 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x3e0>  // b.any
 610:	mov	w0, #0x6                   	// #6
 614:	b	5b8 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x270>
 618:	mov	w0, #0x5                   	// #5
 61c:	b	5b8 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x270>
 620:	mov	w0, #0x4                   	// #4
 624:	b	5b8 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x270>
 628:	adrp	x0, 0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
 62c:	adrp	x1, 0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
 630:	adrp	x3, 0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
 634:	add	x0, x0, #0x0
 638:	add	x1, x1, #0x0
 63c:	add	x3, x3, #0x0
 640:	mov	w2, #0x92                  	// #146
 644:	bl	0 <__assert_fail>
 648:	adrp	x0, 0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
 64c:	adrp	x1, 0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
 650:	adrp	x3, 0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
 654:	add	x0, x0, #0x0
 658:	add	x1, x1, #0x0
 65c:	add	x3, x3, #0x0
 660:	mov	w2, #0x108                 	// #264
 664:	bl	0 <__assert_fail>
 668:	adrp	x0, 0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
 66c:	adrp	x1, 0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
 670:	adrp	x3, 0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
 674:	add	x0, x0, #0x0
 678:	add	x1, x1, #0x0
 67c:	add	x3, x3, #0x0
 680:	mov	w2, #0x89                  	// #137
 684:	bl	0 <__assert_fail>
 688:	adrp	x0, 0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
 68c:	adrp	x1, 0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
 690:	adrp	x3, 0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
 694:	add	x0, x0, #0x0
 698:	add	x1, x1, #0x0
 69c:	add	x3, x3, #0x0
 6a0:	mov	w2, #0x69                  	// #105
 6a4:	bl	0 <__assert_fail>
 6a8:	adrp	x0, 0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
 6ac:	adrp	x1, 0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
 6b0:	adrp	x3, 0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
 6b4:	add	x0, x0, #0x0
 6b8:	add	x1, x1, #0x0
 6bc:	add	x3, x3, #0x0
 6c0:	mov	w2, #0xc7                  	// #199
 6c4:	bl	0 <__assert_fail>
 6c8:	adrp	x0, 0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
 6cc:	adrp	x1, 0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
 6d0:	adrp	x3, 0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
 6d4:	add	x0, x0, #0x0
 6d8:	add	x1, x1, #0x0
 6dc:	add	x3, x3, #0x0
 6e0:	mov	w2, #0x7d                  	// #125
 6e4:	bl	0 <__assert_fail>
 6e8:	adrp	x0, 0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
 6ec:	adrp	x1, 0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
 6f0:	adrp	x3, 0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
 6f4:	add	x0, x0, #0x0
 6f8:	add	x1, x1, #0x0
 6fc:	add	x3, x3, #0x0
 700:	mov	w2, #0x69                  	// #105
 704:	bl	0 <__assert_fail>
 708:	adrp	x0, 0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
 70c:	adrp	x1, 0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
 710:	adrp	x3, 0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
 714:	add	x0, x0, #0x0
 718:	add	x1, x1, #0x0
 71c:	add	x3, x3, #0x0
 720:	mov	w2, #0x61                  	// #97
 724:	bl	0 <__assert_fail>
 728:	adrp	x0, 0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
 72c:	adrp	x1, 0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
 730:	adrp	x3, 0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
 734:	add	x0, x0, #0x0
 738:	add	x1, x1, #0x0
 73c:	add	x3, x3, #0x0
 740:	mov	w2, #0xcb                  	// #203
 744:	bl	0 <__assert_fail>

0000000000000748 <_ZNK4llvm24TargetLoweringObjectFile16SectionForGlobalEPKNS_12GlobalObjectENS_11SectionKindERKNS_13TargetMachineE>:
 748:	stp	x29, x30, [sp, #-64]!
 74c:	str	x23, [sp, #16]
 750:	stp	x22, x21, [sp, #32]
 754:	stp	x20, x19, [sp, #48]
 758:	mov	x29, sp
 75c:	ldrb	w8, [x1, #34]
 760:	mov	x19, x3
 764:	mov	x22, x2
 768:	mov	x20, x1
 76c:	mov	x21, x0
 770:	tbnz	w8, #6, 848 <_ZNK4llvm24TargetLoweringObjectFile16SectionForGlobalEPKNS_12GlobalObjectENS_11SectionKindERKNS_13TargetMachineE+0x100>
 774:	ldrb	w8, [x20, #16]
 778:	cmp	w8, #0x3
 77c:	b.ne	820 <_ZNK4llvm24TargetLoweringObjectFile16SectionForGlobalEPKNS_12GlobalObjectENS_11SectionKindERKNS_13TargetMachineE+0xd8>  // b.any
 780:	ldr	x8, [x20, #72]
 784:	adrp	x1, 0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
 788:	add	x1, x1, #0x0
 78c:	add	x0, x29, #0x18
 790:	mov	w2, #0xb                   	// #11
 794:	str	x8, [x29, #24]
 798:	bl	0 <_ZNK4llvm12AttributeSet12hasAttributeENS_9StringRefE>
 79c:	sub	w8, w22, #0xd
 7a0:	and	w8, w8, #0xff
 7a4:	cmp	w8, #0x2
 7a8:	b.hi	7b0 <_ZNK4llvm24TargetLoweringObjectFile16SectionForGlobalEPKNS_12GlobalObjectENS_11SectionKindERKNS_13TargetMachineE+0x68>  // b.pmore
 7ac:	tbnz	w0, #0, 83c <_ZNK4llvm24TargetLoweringObjectFile16SectionForGlobalEPKNS_12GlobalObjectENS_11SectionKindERKNS_13TargetMachineE+0xf4>
 7b0:	adrp	x1, 0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
 7b4:	add	x1, x1, #0x0
 7b8:	add	x0, x29, #0x18
 7bc:	mov	w2, #0xc                   	// #12
 7c0:	bl	0 <_ZNK4llvm12AttributeSet12hasAttributeENS_9StringRefE>
 7c4:	and	w23, w22, #0xff
 7c8:	cmp	w23, #0x11
 7cc:	b.ne	7d4 <_ZNK4llvm24TargetLoweringObjectFile16SectionForGlobalEPKNS_12GlobalObjectENS_11SectionKindERKNS_13TargetMachineE+0x8c>  // b.any
 7d0:	tbnz	w0, #0, 83c <_ZNK4llvm24TargetLoweringObjectFile16SectionForGlobalEPKNS_12GlobalObjectENS_11SectionKindERKNS_13TargetMachineE+0xf4>
 7d4:	adrp	x1, 0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
 7d8:	add	x1, x1, #0x0
 7dc:	add	x0, x29, #0x18
 7e0:	mov	w2, #0xd                   	// #13
 7e4:	bl	0 <_ZNK4llvm12AttributeSet12hasAttributeENS_9StringRefE>
 7e8:	cmp	w23, #0x12
 7ec:	b.ne	7f4 <_ZNK4llvm24TargetLoweringObjectFile16SectionForGlobalEPKNS_12GlobalObjectENS_11SectionKindERKNS_13TargetMachineE+0xac>  // b.any
 7f0:	tbnz	w0, #0, 83c <_ZNK4llvm24TargetLoweringObjectFile16SectionForGlobalEPKNS_12GlobalObjectENS_11SectionKindERKNS_13TargetMachineE+0xf4>
 7f4:	adrp	x1, 0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
 7f8:	add	x1, x1, #0x0
 7fc:	add	x0, x29, #0x18
 800:	mov	w2, #0xe                   	// #14
 804:	bl	0 <_ZNK4llvm12AttributeSet12hasAttributeENS_9StringRefE>
 808:	sub	w8, w22, #0x3
 80c:	and	w8, w8, #0xff
 810:	cmp	w8, #0x7
 814:	b.hi	81c <_ZNK4llvm24TargetLoweringObjectFile16SectionForGlobalEPKNS_12GlobalObjectENS_11SectionKindERKNS_13TargetMachineE+0xd4>  // b.pmore
 818:	tbnz	w0, #0, 83c <_ZNK4llvm24TargetLoweringObjectFile16SectionForGlobalEPKNS_12GlobalObjectENS_11SectionKindERKNS_13TargetMachineE+0xf4>
 81c:	ldrb	w8, [x20, #16]
 820:	cbnz	w8, 874 <_ZNK4llvm24TargetLoweringObjectFile16SectionForGlobalEPKNS_12GlobalObjectENS_11SectionKindERKNS_13TargetMachineE+0x12c>
 824:	adrp	x1, 0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
 828:	add	x0, x20, #0x70
 82c:	add	x1, x1, #0x0
 830:	mov	w2, #0x15                  	// #21
 834:	bl	0 <_ZNK4llvm13AttributeList14hasFnAttributeENS_9StringRefE>
 838:	tbz	w0, #0, 874 <_ZNK4llvm24TargetLoweringObjectFile16SectionForGlobalEPKNS_12GlobalObjectENS_11SectionKindERKNS_13TargetMachineE+0x12c>
 83c:	ldr	x8, [x21]
 840:	ldr	x8, [x8, #80]
 844:	b	87c <_ZNK4llvm24TargetLoweringObjectFile16SectionForGlobalEPKNS_12GlobalObjectENS_11SectionKindERKNS_13TargetMachineE+0x134>
 848:	ldr	x8, [x21]
 84c:	and	x2, x22, #0xffffffff
 850:	mov	x0, x21
 854:	mov	x1, x20
 858:	ldr	x4, [x8, #80]
 85c:	mov	x3, x19
 860:	ldp	x20, x19, [sp, #48]
 864:	ldp	x22, x21, [sp, #32]
 868:	ldr	x23, [sp, #16]
 86c:	ldp	x29, x30, [sp], #64
 870:	br	x4
 874:	ldr	x8, [x21]
 878:	ldr	x8, [x8, #168]
 87c:	and	x2, x22, #0xffffffff
 880:	mov	x0, x21
 884:	mov	x1, x20
 888:	mov	x3, x19
 88c:	blr	x8
 890:	ldp	x20, x19, [sp, #48]
 894:	ldp	x22, x21, [sp, #32]
 898:	ldr	x23, [sp, #16]
 89c:	ldp	x29, x30, [sp], #64
 8a0:	ret

00000000000008a4 <_ZNK4llvm24TargetLoweringObjectFile22getSectionForJumpTableERKNS_8FunctionERKNS_13TargetMachineE>:
 8a4:	stp	x29, x30, [sp, #-32]!
 8a8:	str	x19, [sp, #16]
 8ac:	mov	x29, sp
 8b0:	str	wzr, [x29, #28]
 8b4:	ldr	x8, [x1, #40]
 8b8:	mov	x19, x0
 8bc:	mov	x0, x8
 8c0:	bl	0 <_ZNK4llvm6Module13getDataLayoutEv>
 8c4:	ldr	x8, [x19]
 8c8:	mov	x1, x0
 8cc:	add	x4, x29, #0x1c
 8d0:	mov	w2, #0x3                   	// #3
 8d4:	ldr	x8, [x8, #48]
 8d8:	mov	x0, x19
 8dc:	mov	x3, xzr
 8e0:	blr	x8
 8e4:	ldr	x19, [sp, #16]
 8e8:	ldp	x29, x30, [sp], #32
 8ec:	ret

00000000000008f0 <_ZNK4llvm24TargetLoweringObjectFile35shouldPutJumpTableInFunctionSectionEbRKNS_8FunctionE>:
 8f0:	tbz	w1, #0, 8fc <_ZNK4llvm24TargetLoweringObjectFile35shouldPutJumpTableInFunctionSectionEbRKNS_8FunctionE+0xc>
 8f4:	mov	w0, #0x1                   	// #1
 8f8:	ret
 8fc:	ldr	w8, [x2, #32]
 900:	and	w8, w8, #0xf
 904:	sub	w8, w8, #0x2
 908:	cmp	w8, #0x8
 90c:	b.hi	920 <_ZNK4llvm24TargetLoweringObjectFile35shouldPutJumpTableInFunctionSectionEbRKNS_8FunctionE+0x30>  // b.pmore
 910:	mov	w9, #0x18f                 	// #399
 914:	lsr	w8, w9, w8
 918:	and	w0, w8, #0x1
 91c:	ret
 920:	mov	w0, wzr
 924:	ret

0000000000000928 <_ZNK4llvm24TargetLoweringObjectFile21getSectionForConstantERKNS_10DataLayoutENS_11SectionKindEPKNS_8ConstantERj>:
 928:	sub	w8, w2, #0x3
 92c:	and	w8, w8, #0xff
 930:	cmp	w8, #0x7
 934:	mov	x8, x0
 938:	b.hi	948 <_ZNK4llvm24TargetLoweringObjectFile21getSectionForConstantERKNS_10DataLayoutENS_11SectionKindEPKNS_8ConstantERj+0x20>  // b.pmore
 93c:	ldr	x0, [x8, #48]
 940:	cbz	x0, 948 <_ZNK4llvm24TargetLoweringObjectFile21getSectionForConstantERKNS_10DataLayoutENS_11SectionKindEPKNS_8ConstantERj+0x20>
 944:	ret
 948:	ldr	x0, [x8, #32]
 94c:	ret

0000000000000950 <_ZNK4llvm24TargetLoweringObjectFile23getTTypeGlobalReferenceEPKNS_11GlobalValueEjRKNS_13TargetMachineEPNS_17MachineModuleInfoERNS_10MCStreamerE>:
 950:	stp	x29, x30, [sp, #-48]!
 954:	stp	x22, x21, [sp, #16]
 958:	stp	x20, x19, [sp, #32]
 95c:	mov	x29, sp
 960:	mov	x19, x0
 964:	mov	x0, x3
 968:	mov	x20, x5
 96c:	mov	w21, w2
 970:	bl	0 <_ZNK4llvm13TargetMachine9getSymbolEPKNS_11GlobalValueE>
 974:	ldr	x2, [x19, #800]
 978:	mov	w1, wzr
 97c:	mov	x3, xzr
 980:	bl	0 <_ZN4llvm15MCSymbolRefExpr6createEPKNS_8MCSymbolENS0_11VariantKindERNS_9MCContextENS_5SMLocE>
 984:	ands	w8, w21, #0x70
 988:	mov	x21, x0
 98c:	b.eq	9f8 <_ZNK4llvm24TargetLoweringObjectFile23getTTypeGlobalReferenceEPKNS_11GlobalValueEjRKNS_13TargetMachineEPNS_17MachineModuleInfoERNS_10MCStreamerE+0xa8>  // b.none
 990:	cmp	w8, #0x10
 994:	b.ne	a0c <_ZNK4llvm24TargetLoweringObjectFile23getTTypeGlobalReferenceEPKNS_11GlobalValueEjRKNS_13TargetMachineEPNS_17MachineModuleInfoERNS_10MCStreamerE+0xbc>  // b.any
 998:	ldr	x0, [x19, #800]
 99c:	mov	w1, #0x1                   	// #1
 9a0:	bl	0 <_ZN4llvm9MCContext16createTempSymbolEb>
 9a4:	ldr	x8, [x20]
 9a8:	mov	x22, x0
 9ac:	mov	x0, x20
 9b0:	mov	x1, x22
 9b4:	ldr	x8, [x8, #176]
 9b8:	mov	x2, xzr
 9bc:	blr	x8
 9c0:	ldr	x2, [x19, #800]
 9c4:	mov	x0, x22
 9c8:	mov	w1, wzr
 9cc:	mov	x3, xzr
 9d0:	bl	0 <_ZN4llvm15MCSymbolRefExpr6createEPKNS_8MCSymbolENS0_11VariantKindERNS_9MCContextENS_5SMLocE>
 9d4:	ldr	x3, [x19, #800]
 9d8:	mov	x1, x21
 9dc:	ldp	x20, x19, [sp, #32]
 9e0:	ldp	x22, x21, [sp, #16]
 9e4:	mov	x2, x0
 9e8:	mov	w0, #0x11                  	// #17
 9ec:	mov	x4, xzr
 9f0:	ldp	x29, x30, [sp], #48
 9f4:	b	0 <_ZN4llvm12MCBinaryExpr6createENS0_6OpcodeEPKNS_6MCExprES4_RNS_9MCContextENS_5SMLocE>
 9f8:	mov	x0, x21
 9fc:	ldp	x20, x19, [sp, #32]
 a00:	ldp	x22, x21, [sp, #16]
 a04:	ldp	x29, x30, [sp], #48
 a08:	ret
 a0c:	adrp	x0, 0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
 a10:	add	x0, x0, #0x0
 a14:	mov	w1, #0x1                   	// #1
 a18:	bl	0 <_ZN4llvm18report_fatal_errorEPKcb>

0000000000000a1c <_ZNK4llvm24TargetLoweringObjectFile17getTTypeReferenceEPKNS_15MCSymbolRefExprEjRNS_10MCStreamerE>:
 a1c:	stp	x29, x30, [sp, #-48]!
 a20:	stp	x22, x21, [sp, #16]
 a24:	stp	x20, x19, [sp, #32]
 a28:	mov	x29, sp
 a2c:	mov	x19, x1
 a30:	ands	w8, w2, #0x70
 a34:	b.eq	aa8 <_ZNK4llvm24TargetLoweringObjectFile17getTTypeReferenceEPKNS_15MCSymbolRefExprEjRNS_10MCStreamerE+0x8c>  // b.none
 a38:	cmp	w8, #0x10
 a3c:	b.ne	abc <_ZNK4llvm24TargetLoweringObjectFile17getTTypeReferenceEPKNS_15MCSymbolRefExprEjRNS_10MCStreamerE+0xa0>  // b.any
 a40:	mov	x20, x0
 a44:	ldr	x0, [x0, #800]
 a48:	mov	w1, #0x1                   	// #1
 a4c:	mov	x21, x3
 a50:	bl	0 <_ZN4llvm9MCContext16createTempSymbolEb>
 a54:	ldr	x8, [x21]
 a58:	mov	x22, x0
 a5c:	mov	x0, x21
 a60:	mov	x1, x22
 a64:	ldr	x8, [x8, #176]
 a68:	mov	x2, xzr
 a6c:	blr	x8
 a70:	ldr	x2, [x20, #800]
 a74:	mov	x0, x22
 a78:	mov	w1, wzr
 a7c:	mov	x3, xzr
 a80:	bl	0 <_ZN4llvm15MCSymbolRefExpr6createEPKNS_8MCSymbolENS0_11VariantKindERNS_9MCContextENS_5SMLocE>
 a84:	ldr	x3, [x20, #800]
 a88:	mov	x1, x19
 a8c:	ldp	x20, x19, [sp, #32]
 a90:	ldp	x22, x21, [sp, #16]
 a94:	mov	x2, x0
 a98:	mov	w0, #0x11                  	// #17
 a9c:	mov	x4, xzr
 aa0:	ldp	x29, x30, [sp], #48
 aa4:	b	0 <_ZN4llvm12MCBinaryExpr6createENS0_6OpcodeEPKNS_6MCExprES4_RNS_9MCContextENS_5SMLocE>
 aa8:	mov	x0, x19
 aac:	ldp	x20, x19, [sp, #32]
 ab0:	ldp	x22, x21, [sp, #16]
 ab4:	ldp	x29, x30, [sp], #48
 ab8:	ret
 abc:	adrp	x0, 0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
 ac0:	add	x0, x0, #0x0
 ac4:	mov	w1, #0x1                   	// #1
 ac8:	bl	0 <_ZN4llvm18report_fatal_errorEPKcb>

0000000000000acc <_ZNK4llvm24TargetLoweringObjectFile25getDebugThreadLocalSymbolEPKNS_8MCSymbolE>:
 acc:	ldr	x2, [x0, #800]
 ad0:	mov	x0, x1
 ad4:	mov	w1, wzr
 ad8:	mov	x3, xzr
 adc:	b	0 <_ZN4llvm15MCSymbolRefExpr6createEPKNS_8MCSymbolENS0_11VariantKindERNS_9MCContextENS_5SMLocE>

0000000000000ae0 <_ZNK4llvm24TargetLoweringObjectFile17getNameWithPrefixERNS_15SmallVectorImplIcEEPKNS_11GlobalValueERKNS_13TargetMachineE>:
 ae0:	ldr	x0, [x0, #808]
 ae4:	mov	w3, wzr
 ae8:	b	0 <_ZNK4llvm7Mangler17getNameWithPrefixERNS_15SmallVectorImplIcEEPKNS_11GlobalValueEb>

0000000000000aec <_ZL13isNullOrUndefPKN4llvm8ConstantE>:
 aec:	stp	x29, x30, [sp, #-32]!
 af0:	stp	x20, x19, [sp, #16]
 af4:	mov	x29, sp
 af8:	mov	x19, x0
 afc:	bl	0 <_ZNK4llvm8Constant11isNullValueEv>
 b00:	tbnz	w0, #0, b14 <_ZL13isNullOrUndefPKN4llvm8ConstantE+0x28>
 b04:	cbz	x19, bd8 <_ZL13isNullOrUndefPKN4llvm8ConstantE+0xec>
 b08:	ldrb	w8, [x19, #16]
 b0c:	cmp	w8, #0x9
 b10:	b.ne	b24 <_ZL13isNullOrUndefPKN4llvm8ConstantE+0x38>  // b.any
 b14:	mov	w0, #0x1                   	// #1
 b18:	ldp	x20, x19, [sp, #16]
 b1c:	ldp	x29, x30, [sp], #32
 b20:	ret
 b24:	sub	w8, w8, #0x6
 b28:	cmp	w8, #0x2
 b2c:	b.hi	b90 <_ZL13isNullOrUndefPKN4llvm8ConstantE+0xa4>  // b.pmore
 b30:	ldr	w8, [x19, #20]
 b34:	tbnz	w8, #30, b4c <_ZL13isNullOrUndefPKN4llvm8ConstantE+0x60>
 b38:	and	w8, w8, #0xfffffff
 b3c:	mov	w9, #0x18                  	// #24
 b40:	mneg	x9, x8, x9
 b44:	add	x19, x19, x9
 b48:	b	b54 <_ZL13isNullOrUndefPKN4llvm8ConstantE+0x68>
 b4c:	ldur	x19, [x19, #-8]
 b50:	and	x8, x8, #0xfffffff
 b54:	mov	w9, #0x18                  	// #24
 b58:	madd	x20, x8, x9, x19
 b5c:	cmp	x20, x19
 b60:	b.eq	b14 <_ZL13isNullOrUndefPKN4llvm8ConstantE+0x28>  // b.none
 b64:	ldr	x0, [x19]
 b68:	cbz	x0, b98 <_ZL13isNullOrUndefPKN4llvm8ConstantE+0xac>
 b6c:	ldrb	w8, [x0, #16]
 b70:	cmp	w8, #0x11
 b74:	b.cs	bb8 <_ZL13isNullOrUndefPKN4llvm8ConstantE+0xcc>  // b.hs, b.nlast
 b78:	bl	aec <_ZL13isNullOrUndefPKN4llvm8ConstantE>
 b7c:	tbz	w0, #0, b90 <_ZL13isNullOrUndefPKN4llvm8ConstantE+0xa4>
 b80:	add	x19, x19, #0x18
 b84:	cmp	x20, x19
 b88:	b.ne	b64 <_ZL13isNullOrUndefPKN4llvm8ConstantE+0x78>  // b.any
 b8c:	b	b14 <_ZL13isNullOrUndefPKN4llvm8ConstantE+0x28>
 b90:	mov	w0, wzr
 b94:	b	b18 <_ZL13isNullOrUndefPKN4llvm8ConstantE+0x2c>
 b98:	adrp	x0, 0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
 b9c:	adrp	x1, 0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
 ba0:	adrp	x3, 0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
 ba4:	add	x0, x0, #0x0
 ba8:	add	x1, x1, #0x0
 bac:	add	x3, x3, #0x0
 bb0:	mov	w2, #0x69                  	// #105
 bb4:	bl	0 <__assert_fail>
 bb8:	adrp	x0, 0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
 bbc:	adrp	x1, 0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
 bc0:	adrp	x3, 0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
 bc4:	add	x0, x0, #0x0
 bc8:	add	x1, x1, #0x0
 bcc:	add	x3, x3, #0x0
 bd0:	mov	w2, #0x108                 	// #264
 bd4:	bl	0 <__assert_fail>
 bd8:	adrp	x0, 0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
 bdc:	adrp	x1, 0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
 be0:	adrp	x3, 0 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>
 be4:	add	x0, x0, #0x0
 be8:	add	x1, x1, #0x0
 bec:	add	x3, x3, #0x0
 bf0:	mov	w2, #0x69                  	// #105
 bf4:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm10DataLayout16getTypeAllocSizeEPNS_4TypeE:

0000000000000000 <_ZNK4llvm10DataLayout16getTypeAllocSizeEPNS_4TypeE>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x21, x1
  14:	mov	x22, x0
  18:	bl	0 <_ZNK4llvm10DataLayout16getTypeAllocSizeEPNS_4TypeE>
  1c:	mov	x20, x0
  20:	mov	x19, x1
  24:	mov	x0, x22
  28:	mov	x1, x21
  2c:	bl	0 <_ZNK4llvm10DataLayout19getABITypeAlignmentEPNS_4TypeE>
  30:	cbz	w0, 64 <_ZNK4llvm10DataLayout16getTypeAllocSizeEPNS_4TypeE+0x64>
  34:	mov	w8, w0
  38:	add	x9, x20, #0x7
  3c:	tst	w19, #0xff
  40:	add	x9, x8, x9, lsr #3
  44:	ldp	x20, x19, [sp, #32]
  48:	ldp	x22, x21, [sp, #16]
  4c:	sub	x9, x9, #0x1
  50:	udiv	x9, x9, x8
  54:	cset	w1, ne  // ne = any
  58:	mul	x0, x9, x8
  5c:	ldp	x29, x30, [sp], #48
  60:	ret
  64:	adrp	x0, 0 <_ZNK4llvm10DataLayout16getTypeAllocSizeEPNS_4TypeE>
  68:	adrp	x1, 0 <_ZNK4llvm10DataLayout16getTypeAllocSizeEPNS_4TypeE>
  6c:	adrp	x3, 0 <_ZNK4llvm10DataLayout16getTypeAllocSizeEPNS_4TypeE>
  70:	add	x0, x0, #0x0
  74:	add	x1, x1, #0x0
  78:	add	x3, x3, #0x0
  7c:	mov	w2, #0xc7                  	// #199
  80:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm24TargetLoweringObjectFile18emitModuleMetadataERNS_10MCStreamerERNS_6ModuleE:

0000000000000000 <_ZNK4llvm24TargetLoweringObjectFile18emitModuleMetadataERNS_10MCStreamerERNS_6ModuleE>:
   0:	ret

Disassembly of section .text._ZN4llvm24TargetLoweringObjectFile17getModuleMetadataERNS_6ModuleE:

0000000000000000 <_ZN4llvm24TargetLoweringObjectFile17getModuleMetadataERNS_6ModuleE>:
   0:	ret

Disassembly of section .text._ZNK4llvm24TargetLoweringObjectFile20getStaticCtorSectionEjPKNS_8MCSymbolE:

0000000000000000 <_ZNK4llvm24TargetLoweringObjectFile20getStaticCtorSectionEjPKNS_8MCSymbolE>:
   0:	ldr	x0, [x0, #840]
   4:	ret

Disassembly of section .text._ZNK4llvm24TargetLoweringObjectFile20getStaticDtorSectionEjPKNS_8MCSymbolE:

0000000000000000 <_ZNK4llvm24TargetLoweringObjectFile20getStaticDtorSectionEjPKNS_8MCSymbolE>:
   0:	ldr	x0, [x0, #848]
   4:	ret

Disassembly of section .text._ZNK4llvm24TargetLoweringObjectFile22lowerRelativeReferenceEPKNS_11GlobalValueES3_RKNS_13TargetMachineE:

0000000000000000 <_ZNK4llvm24TargetLoweringObjectFile22lowerRelativeReferenceEPKNS_11GlobalValueES3_RKNS_13TargetMachineE>:
   0:	mov	x0, xzr
   4:	ret

Disassembly of section .text._ZNK4llvm24TargetLoweringObjectFile25getIndirectSymViaGOTPCRelEPKNS_11GlobalValueEPKNS_8MCSymbolERKNS_7MCValueElPNS_17MachineModuleInfoERNS_10MCStreamerE:

0000000000000000 <_ZNK4llvm24TargetLoweringObjectFile25getIndirectSymViaGOTPCRelEPKNS_11GlobalValueEPKNS_8MCSymbolERKNS_7MCValueElPNS_17MachineModuleInfoERNS_10MCStreamerE>:
   0:	mov	x0, xzr
   4:	ret

Disassembly of section .text._ZNK4llvm24TargetLoweringObjectFile24emitLinkerFlagsForGlobalERNS_11raw_ostreamEPKNS_11GlobalValueE:

0000000000000000 <_ZNK4llvm24TargetLoweringObjectFile24emitLinkerFlagsForGlobalERNS_11raw_ostreamEPKNS_11GlobalValueE>:
   0:	ret

Disassembly of section .text._ZNK4llvm24TargetLoweringObjectFile22emitLinkerFlagsForUsedERNS_11raw_ostreamEPKNS_11GlobalValueE:

0000000000000000 <_ZNK4llvm24TargetLoweringObjectFile22emitLinkerFlagsForUsedERNS_11raw_ostreamEPKNS_11GlobalValueE>:
   0:	ret

Disassembly of section .text._ZNK4llvm24TargetLoweringObjectFile25getSectionForCommandLinesEv:

0000000000000000 <_ZNK4llvm24TargetLoweringObjectFile25getSectionForCommandLinesEv>:
   0:	mov	x0, xzr
   4:	ret

Disassembly of section .text._ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE:

0000000000000000 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldr	w8, [x1, #8]
  14:	and	w9, w8, #0xff
  18:	cmp	w9, #0x10
  1c:	b.hi	18c <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x18c>  // b.pmore
  20:	mov	w10, #0x1                   	// #1
  24:	lsl	w9, w10, w9
  28:	mov	w10, #0x8a7e                	// #35454
  2c:	mov	x20, x1
  30:	mov	x19, x0
  34:	tst	w9, w10
  38:	b.ne	60 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x60>  // b.any
  3c:	mov	w8, #0x6000                	// #24576
  40:	movk	w8, #0x1, lsl #16
  44:	tst	w9, w8
  48:	b.eq	18c <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x18c>  // b.none
  4c:	mov	x0, x20
  50:	mov	x1, xzr
  54:	bl	0 <_ZNK4llvm4Type18isSizedDerivedTypeEPNS_15SmallPtrSetImplIPS0_EE>
  58:	tbz	w0, #0, 18c <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x18c>
  5c:	ldr	w8, [x20, #8]
  60:	and	w9, w8, #0xff
  64:	sub	w9, w9, #0x1
  68:	cmp	w9, #0xf
  6c:	b.hi	174 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x174>  // b.pmore
  70:	adrp	x10, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
  74:	add	x10, x10, #0x0
  78:	adr	x11, 90 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x90>
  7c:	ldrb	w12, [x10, x9]
  80:	add	x11, x11, x12, lsl #2
  84:	mov	x1, xzr
  88:	mov	w0, #0x10                  	// #16
  8c:	br	x11
  90:	mov	x1, xzr
  94:	mov	w0, #0x40                  	// #64
  98:	b	160 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x160>
  9c:	mov	x1, xzr
  a0:	mov	w0, #0x80                  	// #128
  a4:	b	160 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x160>
  a8:	and	w9, w8, #0xff
  ac:	cmp	w9, #0xf
  b0:	b.ne	1ac <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x1ac>  // b.any
  b4:	lsr	w1, w8, #8
  b8:	mov	x0, x19
  bc:	b	118 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x118>
  c0:	ldr	x21, [x20, #32]
  c4:	lsr	x8, x21, #32
  c8:	cbnz	x8, 1cc <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x1cc>
  cc:	ldr	x1, [x20, #24]
  d0:	ldrb	w22, [x20, #40]
  d4:	mov	x0, x19
  d8:	bl	0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
  dc:	tst	w1, #0xff
  e0:	b.ne	1ec <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x1ec>  // b.any
  e4:	and	x8, x21, #0x100000000
  e8:	orr	x8, x8, x22, lsl #32
  ec:	mul	x0, x0, x21
  f0:	lsr	x1, x8, #32
  f4:	b	160 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x160>
  f8:	mov	x0, x19
  fc:	mov	x1, x20
 100:	bl	0 <_ZNK4llvm10DataLayout15getStructLayoutEPNS_10StructTypeE>
 104:	ldr	x8, [x0]
 108:	mov	x1, xzr
 10c:	b	15c <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x15c>
 110:	mov	x0, x19
 114:	mov	w1, wzr
 118:	bl	0 <_ZNK4llvm10DataLayout14getPointerSizeEj>
 11c:	mov	x1, xzr
 120:	lsl	w0, w0, #3
 124:	b	160 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x160>
 128:	mov	x1, xzr
 12c:	mov	w0, #0x20                  	// #32
 130:	b	160 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x160>
 134:	mov	x1, xzr
 138:	mov	w0, #0x50                  	// #80
 13c:	b	160 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x160>
 140:	mov	x1, xzr
 144:	lsr	w0, w8, #8
 148:	b	160 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x160>
 14c:	ldp	x1, x21, [x20, #24]
 150:	mov	x0, x19
 154:	bl	0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 158:	mul	x8, x21, x0
 15c:	lsl	x0, x8, #3
 160:	ldp	x20, x19, [sp, #32]
 164:	ldp	x22, x21, [sp, #16]
 168:	and	x1, x1, #0xff
 16c:	ldp	x29, x30, [sp], #48
 170:	ret
 174:	adrp	x0, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 178:	adrp	x1, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 17c:	add	x0, x0, #0x0
 180:	add	x1, x1, #0x0
 184:	mov	w2, #0x298                 	// #664
 188:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
 18c:	adrp	x0, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 190:	adrp	x1, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 194:	adrp	x3, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 198:	add	x0, x0, #0x0
 19c:	add	x1, x1, #0x0
 1a0:	add	x3, x3, #0x0
 1a4:	mov	w2, #0x271                 	// #625
 1a8:	bl	0 <__assert_fail>
 1ac:	adrp	x0, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 1b0:	adrp	x1, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 1b4:	adrp	x3, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 1b8:	add	x0, x0, #0x0
 1bc:	add	x1, x1, #0x0
 1c0:	add	x3, x3, #0x0
 1c4:	mov	w2, #0x108                 	// #264
 1c8:	bl	0 <__assert_fail>
 1cc:	adrp	x0, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 1d0:	adrp	x1, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 1d4:	adrp	x3, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 1d8:	add	x0, x0, #0x0
 1dc:	add	x1, x1, #0x0
 1e0:	add	x3, x3, #0x0
 1e4:	mov	w2, #0x220                 	// #544
 1e8:	bl	0 <__assert_fail>
 1ec:	adrp	x0, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 1f0:	adrp	x1, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 1f4:	adrp	x3, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 1f8:	add	x0, x0, #0x0
 1fc:	add	x1, x1, #0x0
 200:	add	x3, x3, #0x0
 204:	mov	w2, #0x7d                  	// #125
 208:	bl	0 <__assert_fail>

TargetMachine.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	str	x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	adrp	x8, 0 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE>
  1c:	add	x9, x0, #0x40
  20:	ldr	x8, [x8]
  24:	str	x9, [x0, #48]
  28:	adrp	x9, 0 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE>
  2c:	ldr	d0, [x9]
  30:	add	x9, x0, #0x58
  34:	str	x9, [x0, #72]
  38:	adrp	x9, 0 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE>
  3c:	ldr	d1, [x9]
  40:	add	x8, x8, #0x10
  44:	mov	x9, x0
  48:	stp	x8, x1, [x0]
  4c:	add	x8, x0, #0x108
  50:	strh	wzr, [x0, #24]
  54:	strh	wzr, [x0, #32]
  58:	str	d0, [x0, #56]
  5c:	str	d1, [x0, #80]
  60:	strb	wzr, [x9, #232]!
  64:	str	x8, [x0, #248]
  68:	add	x8, x0, #0x1a0
  6c:	mov	x19, x0
  70:	stp	xzr, x8, [x0, #392]
  74:	add	x0, x0, #0x10
  78:	mov	x1, x2
  7c:	mov	x2, x3
  80:	mov	x20, x6
  84:	mov	x21, x5
  88:	mov	x23, x4
  8c:	str	d0, [x19, #256]
  90:	stp	x9, xzr, [x19, #216]
  94:	str	d0, [x19, #408]
  98:	bl	0 <_ZN4llvm10DataLayout5resetENS_9StringRefE>
  9c:	add	x0, x19, #0x1d0
  a0:	str	x0, [x19, #448]
  a4:	ldp	x24, x25, [x23]
  a8:	cbnz	x24, b0 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE+0xb0>
  ac:	cbnz	x25, 2a4 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE+0x2a4>
  b0:	cmp	x25, #0x10
  b4:	str	x25, [x29, #24]
  b8:	b.cc	d8 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE+0xd8>  // b.lo, b.ul, b.last
  bc:	add	x0, x19, #0x1c0
  c0:	add	x1, x29, #0x18
  c4:	mov	x2, xzr
  c8:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
  cc:	str	x0, [x19, #448]
  d0:	ldr	x8, [x29, #24]
  d4:	str	x8, [x19, #464]
  d8:	ldr	x22, [x29, #80]
  dc:	cbz	x25, 100 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE+0x100>
  e0:	cmp	x25, #0x1
  e4:	b.ne	f4 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE+0xf4>  // b.any
  e8:	ldrb	w8, [x24]
  ec:	strb	w8, [x0]
  f0:	b	100 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE+0x100>
  f4:	mov	x1, x24
  f8:	mov	x2, x25
  fc:	bl	0 <memcpy>
 100:	ldr	x8, [x29, #24]
 104:	ldr	x9, [x19, #448]
 108:	add	x0, x19, #0x208
 10c:	str	x8, [x19, #456]
 110:	strb	wzr, [x9, x8]
 114:	ldr	q0, [x23, #32]
 118:	ldr	x8, [x23, #48]
 11c:	ldr	x23, [x29, #96]
 120:	str	q0, [x19, #480]
 124:	stp	x8, x0, [x19, #496]
 128:	cbz	x21, 16c <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE+0x16c>
 12c:	cmp	x20, #0x10
 130:	str	x20, [x29, #24]
 134:	b.cc	154 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE+0x154>  // b.lo, b.ul, b.last
 138:	add	x0, x19, #0x1f8
 13c:	add	x1, x29, #0x18
 140:	mov	x2, xzr
 144:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
 148:	str	x0, [x19, #504]
 14c:	ldr	x8, [x29, #24]
 150:	str	x8, [x19, #520]
 154:	cbz	x20, 184 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE+0x184>
 158:	cmp	x20, #0x1
 15c:	b.ne	178 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE+0x178>  // b.any
 160:	ldrb	w8, [x21]
 164:	strb	w8, [x0]
 168:	b	184 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE+0x184>
 16c:	str	xzr, [x19, #512]
 170:	strb	wzr, [x19, #520]
 174:	b	194 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE+0x194>
 178:	mov	x1, x21
 17c:	mov	x2, x20
 180:	bl	0 <memcpy>
 184:	ldr	x8, [x29, #24]
 188:	ldr	x9, [x19, #504]
 18c:	str	x8, [x19, #512]
 190:	strb	wzr, [x9, x8]
 194:	add	x0, x19, #0x228
 198:	str	x0, [x19, #536]
 19c:	cbz	x22, 1e4 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE+0x1e4>
 1a0:	ldr	x20, [x29, #88]
 1a4:	cmp	x20, #0x10
 1a8:	str	x20, [x29, #24]
 1ac:	b.cc	1cc <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE+0x1cc>  // b.lo, b.ul, b.last
 1b0:	add	x0, x19, #0x218
 1b4:	add	x1, x29, #0x18
 1b8:	mov	x2, xzr
 1bc:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
 1c0:	str	x0, [x19, #536]
 1c4:	ldr	x8, [x29, #24]
 1c8:	str	x8, [x19, #552]
 1cc:	cbz	x20, 1fc <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE+0x1fc>
 1d0:	cmp	x20, #0x1
 1d4:	b.ne	1f0 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE+0x1f0>  // b.any
 1d8:	ldrb	w8, [x22]
 1dc:	strb	w8, [x0]
 1e0:	b	1fc <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE+0x1fc>
 1e4:	str	xzr, [x19, #544]
 1e8:	strb	wzr, [x19, #552]
 1ec:	b	20c <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE+0x20c>
 1f0:	mov	x1, x22
 1f4:	mov	x2, x20
 1f8:	bl	0 <memcpy>
 1fc:	ldr	x8, [x29, #24]
 200:	ldr	x9, [x19, #536]
 204:	str	x8, [x19, #544]
 208:	strb	wzr, [x9, x8]
 20c:	adrp	x8, 0 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE>
 210:	ldr	d0, [x8]
 214:	mov	w9, #0x2                   	// #2
 218:	add	x8, x19, #0x248
 21c:	movi	v1.2d, #0x0
 220:	str	w9, [x19, #576]
 224:	str	d0, [x19, #568]
 228:	stp	q1, q1, [x8]
 22c:	ldrb	w8, [x19, #616]
 230:	add	x9, x19, #0x270
 234:	add	x20, x23, #0x38
 238:	add	x0, x9, #0x38
 23c:	and	w8, w8, #0xfc
 240:	strb	w8, [x19, #616]
 244:	ldp	q2, q0, [x23, #16]
 248:	ldr	x8, [x23, #48]
 24c:	ldr	q1, [x23]
 250:	mov	x1, x20
 254:	stp	q2, q0, [x19, #640]
 258:	str	x8, [x19, #672]
 25c:	str	q1, [x19, #624]
 260:	bl	0 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE>
 264:	ldp	q2, q0, [x23, #16]
 268:	ldr	x8, [x23, #48]
 26c:	ldr	q1, [x23]
 270:	add	x9, x19, #0x308
 274:	add	x0, x19, #0x340
 278:	mov	x1, x20
 27c:	str	x8, [x9, #48]
 280:	stp	q2, q0, [x9, #16]
 284:	str	q1, [x9]
 288:	bl	0 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE>
 28c:	ldp	x20, x19, [sp, #64]
 290:	ldp	x22, x21, [sp, #48]
 294:	ldp	x24, x23, [sp, #32]
 298:	ldr	x25, [sp, #16]
 29c:	ldp	x29, x30, [sp], #80
 2a0:	ret
 2a4:	adrp	x0, 0 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE>
 2a8:	add	x0, x0, #0x0
 2ac:	bl	0 <_ZSt19__throw_logic_errorPKc>

00000000000002b0 <_ZN4llvm13TargetMachineD1Ev>:
 2b0:	stp	x29, x30, [sp, #-48]!
 2b4:	str	x21, [sp, #16]
 2b8:	stp	x20, x19, [sp, #32]
 2bc:	mov	x29, sp
 2c0:	adrp	x8, 0 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE>
 2c4:	ldr	x20, [x0, #904]
 2c8:	ldr	x21, [x0, #912]
 2cc:	ldr	x8, [x8]
 2d0:	mov	x19, x0
 2d4:	cmp	x20, x21
 2d8:	add	x8, x8, #0x10
 2dc:	str	x8, [x0]
 2e0:	b.ne	428 <_ZN4llvm13TargetMachineD1Ev+0x178>  // b.any
 2e4:	cbz	x20, 2f0 <_ZN4llvm13TargetMachineD1Ev+0x40>
 2e8:	mov	x0, x20
 2ec:	bl	0 <_ZdlPv>
 2f0:	ldr	x0, [x19, #872]
 2f4:	add	x8, x19, #0x378
 2f8:	cmp	x0, x8
 2fc:	b.eq	304 <_ZN4llvm13TargetMachineD1Ev+0x54>  // b.none
 300:	bl	0 <_ZdlPv>
 304:	ldr	x0, [x19, #840]
 308:	add	x8, x19, #0x358
 30c:	cmp	x0, x8
 310:	b.eq	318 <_ZN4llvm13TargetMachineD1Ev+0x68>  // b.none
 314:	bl	0 <_ZdlPv>
 318:	ldr	x20, [x19, #752]
 31c:	ldr	x21, [x19, #760]
 320:	cmp	x20, x21
 324:	b.ne	448 <_ZN4llvm13TargetMachineD1Ev+0x198>  // b.any
 328:	cbz	x20, 334 <_ZN4llvm13TargetMachineD1Ev+0x84>
 32c:	mov	x0, x20
 330:	bl	0 <_ZdlPv>
 334:	ldr	x0, [x19, #720]
 338:	add	x8, x19, #0x2e0
 33c:	cmp	x0, x8
 340:	b.eq	348 <_ZN4llvm13TargetMachineD1Ev+0x98>  // b.none
 344:	bl	0 <_ZdlPv>
 348:	ldr	x0, [x19, #688]
 34c:	add	x8, x19, #0x2c0
 350:	cmp	x0, x8
 354:	b.eq	35c <_ZN4llvm13TargetMachineD1Ev+0xac>  // b.none
 358:	bl	0 <_ZdlPv>
 35c:	ldr	x0, [x19, #608]
 360:	cbz	x0, 370 <_ZN4llvm13TargetMachineD1Ev+0xc0>
 364:	ldr	x8, [x0]
 368:	ldr	x8, [x8, #8]
 36c:	blr	x8
 370:	ldr	x0, [x19, #600]
 374:	str	xzr, [x19, #608]
 378:	cbz	x0, 380 <_ZN4llvm13TargetMachineD1Ev+0xd0>
 37c:	bl	0 <_ZdlPv>
 380:	ldr	x20, [x19, #592]
 384:	str	xzr, [x19, #600]
 388:	cbz	x20, 3b0 <_ZN4llvm13TargetMachineD1Ev+0x100>
 38c:	ldr	x0, [x20, #200]
 390:	bl	0 <_ZdlPv>
 394:	ldr	x8, [x20, #192]
 398:	ldr	x0, [x20, #168]
 39c:	add	x8, x8, #0x1
 3a0:	str	x8, [x20, #192]
 3a4:	bl	0 <_ZdlPv>
 3a8:	mov	x0, x20
 3ac:	bl	0 <_ZdlPv>
 3b0:	ldr	x0, [x19, #584]
 3b4:	str	xzr, [x19, #592]
 3b8:	cbz	x0, 3c8 <_ZN4llvm13TargetMachineD1Ev+0x118>
 3bc:	ldr	x8, [x0]
 3c0:	ldr	x8, [x8, #8]
 3c4:	blr	x8
 3c8:	ldr	x0, [x19, #536]
 3cc:	add	x8, x19, #0x228
 3d0:	str	xzr, [x19, #584]
 3d4:	cmp	x0, x8
 3d8:	b.eq	3e0 <_ZN4llvm13TargetMachineD1Ev+0x130>  // b.none
 3dc:	bl	0 <_ZdlPv>
 3e0:	ldr	x0, [x19, #504]
 3e4:	add	x8, x19, #0x208
 3e8:	cmp	x0, x8
 3ec:	b.eq	3f4 <_ZN4llvm13TargetMachineD1Ev+0x144>  // b.none
 3f0:	bl	0 <_ZdlPv>
 3f4:	ldr	x0, [x19, #448]
 3f8:	add	x8, x19, #0x1d0
 3fc:	cmp	x0, x8
 400:	b.eq	408 <_ZN4llvm13TargetMachineD1Ev+0x158>  // b.none
 404:	bl	0 <_ZdlPv>
 408:	add	x0, x19, #0x10
 40c:	ldp	x20, x19, [sp, #32]
 410:	ldr	x21, [sp, #16]
 414:	ldp	x29, x30, [sp], #48
 418:	b	0 <_ZN4llvm10DataLayoutD1Ev>
 41c:	add	x20, x20, #0x10
 420:	cmp	x20, x21
 424:	b.eq	45c <_ZN4llvm13TargetMachineD1Ev+0x1ac>  // b.none
 428:	ldr	x0, [x20], #16
 42c:	cmp	x0, x20
 430:	b.eq	41c <_ZN4llvm13TargetMachineD1Ev+0x16c>  // b.none
 434:	bl	0 <_ZdlPv>
 438:	b	41c <_ZN4llvm13TargetMachineD1Ev+0x16c>
 43c:	add	x20, x20, #0x10
 440:	cmp	x20, x21
 444:	b.eq	468 <_ZN4llvm13TargetMachineD1Ev+0x1b8>  // b.none
 448:	ldr	x0, [x20], #16
 44c:	cmp	x0, x20
 450:	b.eq	43c <_ZN4llvm13TargetMachineD1Ev+0x18c>  // b.none
 454:	bl	0 <_ZdlPv>
 458:	b	43c <_ZN4llvm13TargetMachineD1Ev+0x18c>
 45c:	ldr	x20, [x19, #904]
 460:	cbnz	x20, 2e8 <_ZN4llvm13TargetMachineD1Ev+0x38>
 464:	b	2f0 <_ZN4llvm13TargetMachineD1Ev+0x40>
 468:	ldr	x20, [x19, #752]
 46c:	cbnz	x20, 32c <_ZN4llvm13TargetMachineD1Ev+0x7c>
 470:	b	334 <_ZN4llvm13TargetMachineD1Ev+0x84>

0000000000000474 <_ZN4llvm13TargetMachineD0Ev>:
 474:	stp	x29, x30, [sp, #-32]!
 478:	str	x19, [sp, #16]
 47c:	mov	x29, sp
 480:	mov	x19, x0
 484:	bl	2b0 <_ZN4llvm13TargetMachineD1Ev>
 488:	mov	x0, x19
 48c:	ldr	x19, [sp, #16]
 490:	ldp	x29, x30, [sp], #32
 494:	b	0 <_ZdlPv>

0000000000000498 <_ZNK4llvm13TargetMachine21isPositionIndependentEv>:
 498:	ldr	w8, [x0, #568]
 49c:	cmp	w8, #0x1
 4a0:	cset	w0, eq  // eq = none
 4a4:	ret

00000000000004a8 <_ZNK4llvm13TargetMachine18getRelocationModelEv>:
 4a8:	ldr	w0, [x0, #568]
 4ac:	ret

00000000000004b0 <_ZNK4llvm13TargetMachine18resetTargetOptionsERKNS_8FunctionE>:
 4b0:	stp	x29, x30, [sp, #-48]!
 4b4:	str	x21, [sp, #16]
 4b8:	stp	x20, x19, [sp, #32]
 4bc:	mov	x29, sp
 4c0:	add	x20, x1, #0x70
 4c4:	adrp	x1, 0 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE>
 4c8:	mov	x19, x0
 4cc:	mov	w21, #0x7274                	// #29300
 4d0:	add	x1, x1, #0x0
 4d4:	mov	w2, #0xe                   	// #14
 4d8:	mov	x0, x20
 4dc:	movk	w21, #0x6575, lsl #16
 4e0:	bl	0 <_ZNK4llvm13AttributeList14hasFnAttributeENS_9StringRefE>
 4e4:	tbz	w0, #0, 528 <_ZNK4llvm13TargetMachine18resetTargetOptionsERKNS_8FunctionE+0x78>
 4e8:	adrp	x2, 0 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE>
 4ec:	add	x2, x2, #0x0
 4f0:	mov	w1, #0xffffffff            	// #-1
 4f4:	mov	w3, #0xe                   	// #14
 4f8:	mov	x0, x20
 4fc:	bl	0 <_ZNK4llvm13AttributeList12getAttributeEjNS_9StringRefE>
 500:	str	x0, [x29, #24]
 504:	add	x0, x29, #0x18
 508:	bl	0 <_ZNK4llvm9Attribute16getValueAsStringEv>
 50c:	cmp	x1, #0x4
 510:	b.ne	540 <_ZNK4llvm13TargetMachine18resetTargetOptionsERKNS_8FunctionE+0x90>  // b.any
 514:	ldr	w8, [x0]
 518:	cmp	w8, w21
 51c:	cset	w8, eq  // eq = none
 520:	lsl	w8, w8, #1
 524:	b	544 <_ZNK4llvm13TargetMachine18resetTargetOptionsERKNS_8FunctionE+0x94>
 528:	ldrh	w8, [x19, #624]
 52c:	ldrh	w9, [x19, #776]
 530:	and	w8, w8, #0x2
 534:	and	w9, w9, #0xfffffffd
 538:	orr	w8, w9, w8
 53c:	b	550 <_ZNK4llvm13TargetMachine18resetTargetOptionsERKNS_8FunctionE+0xa0>
 540:	mov	w8, wzr
 544:	ldrh	w9, [x19, #776]
 548:	and	w9, w9, #0xfffffffd
 54c:	orr	w8, w8, w9
 550:	adrp	x1, 0 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE>
 554:	add	x1, x1, #0x0
 558:	mov	w2, #0xf                   	// #15
 55c:	mov	x0, x20
 560:	strh	w8, [x19, #776]
 564:	bl	0 <_ZNK4llvm13AttributeList14hasFnAttributeENS_9StringRefE>
 568:	tbz	w0, #0, 5ac <_ZNK4llvm13TargetMachine18resetTargetOptionsERKNS_8FunctionE+0xfc>
 56c:	adrp	x2, 0 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE>
 570:	add	x2, x2, #0x0
 574:	mov	w1, #0xffffffff            	// #-1
 578:	mov	w3, #0xf                   	// #15
 57c:	mov	x0, x20
 580:	bl	0 <_ZNK4llvm13AttributeList12getAttributeEjNS_9StringRefE>
 584:	str	x0, [x29, #24]
 588:	add	x0, x29, #0x18
 58c:	bl	0 <_ZNK4llvm9Attribute16getValueAsStringEv>
 590:	cmp	x1, #0x4
 594:	b.ne	5c4 <_ZNK4llvm13TargetMachine18resetTargetOptionsERKNS_8FunctionE+0x114>  // b.any
 598:	ldr	w8, [x0]
 59c:	cmp	w8, w21
 5a0:	cset	w8, eq  // eq = none
 5a4:	lsl	w8, w8, #2
 5a8:	b	5c8 <_ZNK4llvm13TargetMachine18resetTargetOptionsERKNS_8FunctionE+0x118>
 5ac:	ldrh	w8, [x19, #624]
 5b0:	ldrh	w9, [x19, #776]
 5b4:	and	w8, w8, #0x4
 5b8:	and	w9, w9, #0xfffffffb
 5bc:	orr	w8, w9, w8
 5c0:	b	5d4 <_ZNK4llvm13TargetMachine18resetTargetOptionsERKNS_8FunctionE+0x124>
 5c4:	mov	w8, wzr
 5c8:	ldrh	w9, [x19, #776]
 5cc:	and	w9, w9, #0xfffffffb
 5d0:	orr	w8, w8, w9
 5d4:	adrp	x1, 0 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE>
 5d8:	add	x1, x1, #0x0
 5dc:	mov	w2, #0xf                   	// #15
 5e0:	mov	x0, x20
 5e4:	strh	w8, [x19, #776]
 5e8:	bl	0 <_ZNK4llvm13AttributeList14hasFnAttributeENS_9StringRefE>
 5ec:	tbz	w0, #0, 630 <_ZNK4llvm13TargetMachine18resetTargetOptionsERKNS_8FunctionE+0x180>
 5f0:	adrp	x2, 0 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE>
 5f4:	add	x2, x2, #0x0
 5f8:	mov	w1, #0xffffffff            	// #-1
 5fc:	mov	w3, #0xf                   	// #15
 600:	mov	x0, x20
 604:	bl	0 <_ZNK4llvm13AttributeList12getAttributeEjNS_9StringRefE>
 608:	str	x0, [x29, #24]
 60c:	add	x0, x29, #0x18
 610:	bl	0 <_ZNK4llvm9Attribute16getValueAsStringEv>
 614:	cmp	x1, #0x4
 618:	b.ne	648 <_ZNK4llvm13TargetMachine18resetTargetOptionsERKNS_8FunctionE+0x198>  // b.any
 61c:	ldr	w8, [x0]
 620:	cmp	w8, w21
 624:	cset	w8, eq  // eq = none
 628:	lsl	w8, w8, #3
 62c:	b	64c <_ZNK4llvm13TargetMachine18resetTargetOptionsERKNS_8FunctionE+0x19c>
 630:	ldrh	w8, [x19, #624]
 634:	ldrh	w9, [x19, #776]
 638:	and	w8, w8, #0x8
 63c:	and	w9, w9, #0xfffffff7
 640:	orr	w8, w9, w8
 644:	b	658 <_ZNK4llvm13TargetMachine18resetTargetOptionsERKNS_8FunctionE+0x1a8>
 648:	mov	w8, wzr
 64c:	ldrh	w9, [x19, #776]
 650:	and	w9, w9, #0xfffffff7
 654:	orr	w8, w8, w9
 658:	adrp	x1, 0 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE>
 65c:	add	x1, x1, #0x0
 660:	mov	w2, #0x17                  	// #23
 664:	mov	x0, x20
 668:	strh	w8, [x19, #776]
 66c:	bl	0 <_ZNK4llvm13AttributeList14hasFnAttributeENS_9StringRefE>
 670:	tbz	w0, #0, 6b4 <_ZNK4llvm13TargetMachine18resetTargetOptionsERKNS_8FunctionE+0x204>
 674:	adrp	x2, 0 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE>
 678:	add	x2, x2, #0x0
 67c:	mov	w1, #0xffffffff            	// #-1
 680:	mov	w3, #0x17                  	// #23
 684:	mov	x0, x20
 688:	bl	0 <_ZNK4llvm13AttributeList12getAttributeEjNS_9StringRefE>
 68c:	str	x0, [x29, #24]
 690:	add	x0, x29, #0x18
 694:	bl	0 <_ZNK4llvm9Attribute16getValueAsStringEv>
 698:	cmp	x1, #0x4
 69c:	b.ne	6cc <_ZNK4llvm13TargetMachine18resetTargetOptionsERKNS_8FunctionE+0x21c>  // b.any
 6a0:	ldr	w8, [x0]
 6a4:	cmp	w8, w21
 6a8:	cset	w8, eq  // eq = none
 6ac:	lsl	w8, w8, #5
 6b0:	b	6d0 <_ZNK4llvm13TargetMachine18resetTargetOptionsERKNS_8FunctionE+0x220>
 6b4:	ldrh	w8, [x19, #624]
 6b8:	ldrh	w9, [x19, #776]
 6bc:	and	w8, w8, #0x20
 6c0:	and	w9, w9, #0xffffffdf
 6c4:	orr	w8, w9, w8
 6c8:	b	6dc <_ZNK4llvm13TargetMachine18resetTargetOptionsERKNS_8FunctionE+0x22c>
 6cc:	mov	w8, wzr
 6d0:	ldrh	w9, [x19, #776]
 6d4:	and	w9, w9, #0xffffffdf
 6d8:	orr	w8, w8, w9
 6dc:	strh	w8, [x19, #776]
 6e0:	ldp	x20, x19, [sp, #32]
 6e4:	ldr	x21, [sp, #16]
 6e8:	ldp	x29, x30, [sp], #48
 6ec:	ret

00000000000006f0 <_ZNK4llvm13TargetMachine12getCodeModelEv>:
 6f0:	ldr	w0, [x0, #572]
 6f4:	ret

00000000000006f8 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE>:
 6f8:	stp	x29, x30, [sp, #-48]!
 6fc:	stp	x22, x21, [sp, #16]
 700:	stp	x20, x19, [sp, #32]
 704:	mov	x29, sp
 708:	mov	x19, x2
 70c:	mov	x21, x1
 710:	mov	x20, x0
 714:	cbz	x2, 720 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x28>
 718:	ldrb	w8, [x19, #33]
 71c:	tbnz	w8, #6, 7d8 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0xe0>
 720:	mov	x0, x21
 724:	bl	0 <_ZNK4llvm6Module14getRtLibUseGOTEv>
 728:	cbnz	x19, 730 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x38>
 72c:	tbnz	w0, #0, 748 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x50>
 730:	ldr	w22, [x20, #568]
 734:	cbz	x19, 750 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x58>
 738:	ldr	w8, [x19, #32]
 73c:	and	w8, w8, #0x300
 740:	cmp	w8, #0x100
 744:	b.ne	750 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x58>  // b.any
 748:	mov	w0, wzr
 74c:	b	7dc <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0xe4>
 750:	ldr	w8, [x20, #492]
 754:	cmp	w8, #0xf
 758:	b.ne	7a0 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0xa8>  // b.any
 75c:	ldr	w8, [x20, #496]
 760:	cmp	w8, #0x1
 764:	b.ne	7a0 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0xa8>  // b.any
 768:	cbz	x19, 7a0 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0xa8>
 76c:	ldr	w8, [x20, #500]
 770:	cmp	w8, #0x1
 774:	b.ne	7a0 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0xa8>  // b.any
 778:	ldr	w8, [x19, #32]
 77c:	and	w8, w8, #0xf
 780:	cmp	w8, #0x1
 784:	b.eq	794 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x9c>  // b.none
 788:	mov	x0, x19
 78c:	bl	0 <_ZNK4llvm11GlobalValue13isDeclarationEv>
 790:	tbz	w0, #0, 7a0 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0xa8>
 794:	ldrb	w8, [x19, #16]
 798:	cmp	w8, #0x3
 79c:	b.eq	748 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x50>  // b.none
 7a0:	ldr	w8, [x20, #500]
 7a4:	cbz	x19, 7c4 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0xcc>
 7a8:	cmp	w8, #0x1
 7ac:	b.ne	7c4 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0xcc>  // b.any
 7b0:	ldr	w8, [x19, #32]
 7b4:	and	w8, w8, #0xf
 7b8:	cmp	w8, #0x9
 7bc:	cset	w0, ne  // ne = any
 7c0:	b	7dc <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0xe4>
 7c4:	cmp	w8, #0x1
 7c8:	b.eq	7d8 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0xe0>  // b.none
 7cc:	ldr	w9, [x20, #492]
 7d0:	cmp	w9, #0xf
 7d4:	b.ne	7ec <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0xf4>  // b.any
 7d8:	mov	w0, #0x1                   	// #1
 7dc:	ldp	x20, x19, [sp, #32]
 7e0:	ldp	x22, x21, [sp, #16]
 7e4:	ldp	x29, x30, [sp], #48
 7e8:	ret
 7ec:	cbz	x19, 814 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x11c>
 7f0:	ldr	w10, [x20, #568]
 7f4:	ldr	w9, [x19, #32]
 7f8:	cmp	w10, #0x1
 7fc:	b.ne	80c <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x114>  // b.any
 800:	and	w10, w9, #0xf
 804:	cmp	w10, #0x9
 808:	b.eq	748 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x50>  // b.none
 80c:	tst	w9, #0x30
 810:	b.ne	7d8 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0xe0>  // b.any
 814:	sub	w8, w8, #0x2
 818:	cmp	w8, #0x3
 81c:	b.hi	90c <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x214>  // b.pmore
 820:	adrp	x9, 0 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE>
 824:	add	x9, x9, #0x0
 828:	adr	x10, 7dc <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0xe4>
 82c:	ldrb	w11, [x9, x8]
 830:	add	x10, x10, x11, lsl #2
 834:	mov	w0, wzr
 838:	br	x10
 83c:	cmp	w22, #0x2
 840:	b.eq	92c <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x234>  // b.none
 844:	cbz	w22, 854 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x15c>
 848:	mov	x0, x21
 84c:	bl	0 <_ZNK4llvm6Module11getPIELevelEv>
 850:	cbz	w0, 7dc <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0xe4>
 854:	cbz	x19, 88c <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x194>
 858:	ldr	w8, [x19, #32]
 85c:	and	w8, w8, #0xf
 860:	cmp	w8, #0x1
 864:	b.eq	874 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x17c>  // b.none
 868:	mov	x0, x19
 86c:	bl	0 <_ZNK4llvm11GlobalValue13isDeclarationEv>
 870:	tbz	w0, #0, 7d8 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0xe0>
 874:	ldrb	w8, [x19, #16]
 878:	cbnz	w8, 88c <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x194>
 87c:	add	x0, x19, #0x70
 880:	mov	w1, #0x22                  	// #34
 884:	bl	0 <_ZNK4llvm13AttributeList14hasFnAttributeENS_9Attribute8AttrKindE>
 888:	tbnz	w0, #0, 748 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x50>
 88c:	ldr	w8, [x20, #480]
 890:	sub	w8, w8, #0x10
 894:	cmp	w8, #0x3
 898:	b.cc	748 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x50>  // b.lo, b.ul, b.last
 89c:	cbz	x19, 904 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x20c>
 8a0:	ldr	w8, [x19, #32]
 8a4:	and	w8, w8, #0x1c00
 8a8:	orr	w8, w8, w22
 8ac:	cbnz	w8, 748 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x50>
 8b0:	b	7d8 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0xe0>
 8b4:	cmp	w22, #0x0
 8b8:	cset	w0, eq  // eq = none
 8bc:	cbz	x19, 7dc <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0xe4>
 8c0:	cbz	w22, 7dc <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0xe4>
 8c4:	ldr	w8, [x19, #32]
 8c8:	and	w8, w8, #0xf
 8cc:	cmp	w8, #0x1
 8d0:	b.eq	748 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x50>  // b.none
 8d4:	mov	x0, x19
 8d8:	bl	0 <_ZNK4llvm11GlobalValue13isDeclarationEv>
 8dc:	tbnz	w0, #0, 748 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x50>
 8e0:	ldr	w8, [x19, #32]
 8e4:	and	w8, w8, #0xf
 8e8:	sub	w8, w8, #0x2
 8ec:	cmp	w8, #0x9
 8f0:	b.cs	7d8 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0xe0>  // b.hs, b.nlast
 8f4:	mov	w9, #0x70                  	// #112
 8f8:	lsr	w8, w9, w8
 8fc:	and	w0, w8, #0x1
 900:	b	7dc <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0xe4>
 904:	cbnz	w22, 748 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x50>
 908:	b	7d8 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0xe0>
 90c:	adrp	x0, 0 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE>
 910:	adrp	x1, 0 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE>
 914:	adrp	x3, 0 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE>
 918:	add	x0, x0, #0x0
 91c:	add	x1, x1, #0x0
 920:	add	x3, x3, #0x0
 924:	mov	w2, #0xab                  	// #171
 928:	bl	0 <__assert_fail>
 92c:	adrp	x0, 0 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE>
 930:	adrp	x1, 0 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE>
 934:	adrp	x3, 0 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE>
 938:	add	x0, x0, #0x0
 93c:	add	x1, x1, #0x0
 940:	add	x3, x3, #0x0
 944:	mov	w2, #0xac                  	// #172
 948:	bl	0 <__assert_fail>

000000000000094c <_ZNK4llvm13TargetMachine14useEmulatedTLSEv>:
 94c:	ldr	w8, [x0, #800]
 950:	tbnz	w8, #15, 980 <_ZNK4llvm13TargetMachine14useEmulatedTLSEv+0x34>
 954:	ldr	w8, [x0, #496]
 958:	cmp	w8, #0xa
 95c:	b.eq	988 <_ZNK4llvm13TargetMachine14useEmulatedTLSEv+0x3c>  // b.none
 960:	ldr	w9, [x0, #492]
 964:	cmp	w9, #0xd
 968:	b.eq	988 <_ZNK4llvm13TargetMachine14useEmulatedTLSEv+0x3c>  // b.none
 96c:	cmp	w9, #0xf
 970:	b.ne	990 <_ZNK4llvm13TargetMachine14useEmulatedTLSEv+0x44>  // b.any
 974:	cmp	w8, #0x10
 978:	cset	w0, eq  // eq = none
 97c:	ret
 980:	ubfx	w0, w8, #14, #1
 984:	ret
 988:	mov	w0, #0x1                   	// #1
 98c:	ret
 990:	mov	w0, wzr
 994:	ret

0000000000000998 <_ZNK4llvm13TargetMachine11getTLSModelEPKNS_11GlobalValueE>:
 998:	stp	x29, x30, [sp, #-48]!
 99c:	stp	x22, x21, [sp, #16]
 9a0:	stp	x20, x19, [sp, #32]
 9a4:	mov	x29, sp
 9a8:	ldr	x8, [x1, #40]
 9ac:	mov	x20, x0
 9b0:	mov	x19, x1
 9b4:	mov	x0, x8
 9b8:	bl	0 <_ZNK4llvm6Module11getPIELevelEv>
 9bc:	ldr	x1, [x19, #40]
 9c0:	ldr	w22, [x20, #568]
 9c4:	mov	w21, w0
 9c8:	mov	x0, x20
 9cc:	mov	x2, x19
 9d0:	bl	6f8 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE>
 9d4:	ldr	w9, [x19, #32]
 9d8:	tst	w0, #0x1
 9dc:	mov	w8, #0x2                   	// #2
 9e0:	cinc	w8, w8, ne  // ne = any
 9e4:	cmp	w22, #0x1
 9e8:	ccmp	w21, #0x0, #0x0, eq  // eq = none
 9ec:	and	w10, w0, #0x1
 9f0:	ubfx	w9, w9, #10, #3
 9f4:	csel	w8, w10, w8, eq  // eq = none
 9f8:	cmp	w9, #0x4
 9fc:	b.hi	a48 <_ZNK4llvm13TargetMachine11getTLSModelEPKNS_11GlobalValueE+0xb0>  // b.pmore
 a00:	adrp	x10, 0 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE>
 a04:	add	x10, x10, #0x0
 a08:	adr	x11, a1c <_ZNK4llvm13TargetMachine11getTLSModelEPKNS_11GlobalValueE+0x84>
 a0c:	ldrb	w12, [x10, x9]
 a10:	add	x11, x11, x12, lsl #2
 a14:	mov	w9, wzr
 a18:	br	x11
 a1c:	mov	w9, #0x1                   	// #1
 a20:	b	a30 <_ZNK4llvm13TargetMachine11getTLSModelEPKNS_11GlobalValueE+0x98>
 a24:	mov	w9, #0x3                   	// #3
 a28:	b	a30 <_ZNK4llvm13TargetMachine11getTLSModelEPKNS_11GlobalValueE+0x98>
 a2c:	mov	w9, #0x2                   	// #2
 a30:	ldp	x20, x19, [sp, #32]
 a34:	ldp	x22, x21, [sp, #16]
 a38:	cmp	w9, w8
 a3c:	csel	w0, w9, w8, hi  // hi = pmore
 a40:	ldp	x29, x30, [sp], #48
 a44:	ret
 a48:	adrp	x0, 0 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE>
 a4c:	adrp	x1, 0 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE>
 a50:	add	x0, x0, #0x0
 a54:	add	x1, x1, #0x0
 a58:	mov	w2, #0x5b                  	// #91
 a5c:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
 a60:	adrp	x0, 0 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE>
 a64:	adrp	x1, 0 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE>
 a68:	add	x0, x0, #0x0
 a6c:	add	x1, x1, #0x0
 a70:	mov	w2, #0x50                  	// #80
 a74:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

0000000000000a78 <_ZNK4llvm13TargetMachine11getOptLevelEv>:
 a78:	ldr	w0, [x0, #576]
 a7c:	ret

0000000000000a80 <_ZN4llvm13TargetMachine11setOptLevelENS_10CodeGenOpt5LevelE>:
 a80:	str	w1, [x0, #576]
 a84:	ret

0000000000000a88 <_ZN4llvm13TargetMachine22getTargetTransformInfoERKNS_8FunctionE>:
 a88:	stp	x29, x30, [sp, #-32]!
 a8c:	str	x19, [sp, #16]
 a90:	mov	x29, sp
 a94:	ldr	x0, [x1, #40]
 a98:	mov	x19, x8
 a9c:	bl	0 <_ZNK4llvm6Module13getDataLayoutEv>
 aa0:	mov	x1, x0
 aa4:	mov	x0, x19
 aa8:	ldr	x19, [sp, #16]
 aac:	ldp	x29, x30, [sp], #32
 ab0:	b	0 <_ZN4llvm19TargetTransformInfoC1ERKNS_10DataLayoutE>

0000000000000ab4 <_ZNK4llvm13TargetMachine17getNameWithPrefixERNS_15SmallVectorImplIcEEPKNS_11GlobalValueERNS_7ManglerEb>:
 ab4:	stp	x29, x30, [sp, #-48]!
 ab8:	str	x21, [sp, #16]
 abc:	stp	x20, x19, [sp, #32]
 ac0:	mov	x29, sp
 ac4:	mov	x19, x2
 ac8:	mov	x20, x1
 acc:	tbnz	w4, #0, b14 <_ZNK4llvm13TargetMachine17getNameWithPrefixERNS_15SmallVectorImplIcEEPKNS_11GlobalValueERNS_7ManglerEb+0x60>
 ad0:	ldr	w8, [x19, #32]
 ad4:	and	w8, w8, #0xf
 ad8:	cmp	w8, #0x8
 adc:	b.ne	b14 <_ZNK4llvm13TargetMachine17getNameWithPrefixERNS_15SmallVectorImplIcEEPKNS_11GlobalValueERNS_7ManglerEb+0x60>  // b.any
 ae0:	ldr	x8, [x0]
 ae4:	mov	x21, x0
 ae8:	ldr	x8, [x8, #24]
 aec:	blr	x8
 af0:	ldr	x8, [x0]
 af4:	mov	x1, x20
 af8:	mov	x2, x19
 afc:	mov	x3, x21
 b00:	ldr	x4, [x8, #56]
 b04:	ldp	x20, x19, [sp, #32]
 b08:	ldr	x21, [sp, #16]
 b0c:	ldp	x29, x30, [sp], #48
 b10:	br	x4
 b14:	mov	x1, x20
 b18:	mov	x2, x19
 b1c:	ldp	x20, x19, [sp, #32]
 b20:	ldr	x21, [sp, #16]
 b24:	mov	x0, x3
 b28:	mov	w3, wzr
 b2c:	ldp	x29, x30, [sp], #48
 b30:	b	0 <_ZNK4llvm7Mangler17getNameWithPrefixERNS_15SmallVectorImplIcEEPKNS_11GlobalValueEb>

0000000000000b34 <_ZNK4llvm13TargetMachine9getSymbolEPKNS_11GlobalValueE>:
 b34:	sub	sp, sp, #0xe0
 b38:	stp	x29, x30, [sp, #176]
 b3c:	str	x21, [sp, #192]
 b40:	stp	x20, x19, [sp, #208]
 b44:	add	x29, sp, #0xb0
 b48:	ldr	x8, [x0]
 b4c:	mov	x20, x0
 b50:	mov	x19, x1
 b54:	ldr	x8, [x8, #24]
 b58:	blr	x8
 b5c:	adrp	x8, 0 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE>
 b60:	ldr	d0, [x8]
 b64:	add	x8, sp, #0x20
 b68:	add	x8, x8, #0x10
 b6c:	str	x8, [sp, #32]
 b70:	str	d0, [sp, #40]
 b74:	ldr	w8, [x19, #32]
 b78:	mov	x21, x0
 b7c:	and	w8, w8, #0xf
 b80:	cmp	w8, #0x8
 b84:	b.ne	bb4 <_ZNK4llvm13TargetMachine9getSymbolEPKNS_11GlobalValueE+0x80>  // b.any
 b88:	ldr	x8, [x20]
 b8c:	mov	x0, x20
 b90:	ldr	x8, [x8, #24]
 b94:	blr	x8
 b98:	ldr	x8, [x0]
 b9c:	add	x1, sp, #0x20
 ba0:	mov	x2, x19
 ba4:	mov	x3, x20
 ba8:	ldr	x8, [x8, #56]
 bac:	blr	x8
 bb0:	b	bc8 <_ZNK4llvm13TargetMachine9getSymbolEPKNS_11GlobalValueE+0x94>
 bb4:	ldr	x0, [x21, #808]
 bb8:	add	x1, sp, #0x20
 bbc:	mov	x2, x19
 bc0:	mov	w3, wzr
 bc4:	bl	0 <_ZNK4llvm7Mangler17getNameWithPrefixERNS_15SmallVectorImplIcEEPKNS_11GlobalValueEb>
 bc8:	ldr	x0, [x21, #800]
 bcc:	mov	w8, #0x106                 	// #262
 bd0:	add	x19, sp, #0x20
 bd4:	add	x1, sp, #0x8
 bd8:	strh	w8, [sp, #24]
 bdc:	stp	x19, xzr, [sp, #8]
 be0:	bl	0 <_ZN4llvm9MCContext17getOrCreateSymbolERKNS_5TwineE>
 be4:	ldr	x8, [sp, #32]
 be8:	add	x9, x19, #0x10
 bec:	mov	x19, x0
 bf0:	cmp	x8, x9
 bf4:	b.eq	c00 <_ZNK4llvm13TargetMachine9getSymbolEPKNS_11GlobalValueE+0xcc>  // b.none
 bf8:	mov	x0, x8
 bfc:	bl	0 <free>
 c00:	mov	x0, x19
 c04:	ldp	x20, x19, [sp, #208]
 c08:	ldr	x21, [sp, #192]
 c0c:	ldp	x29, x30, [sp, #176]
 c10:	add	sp, sp, #0xe0
 c14:	ret

0000000000000c18 <_ZN4llvm13TargetMachine19getTargetIRAnalysisEv>:
 c18:	sub	sp, sp, #0x30
 c1c:	stp	x29, x30, [sp, #32]
 c20:	add	x29, sp, #0x20
 c24:	adrp	x9, 0 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE>
 c28:	adrp	x10, 0 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE>
 c2c:	add	x9, x9, #0x0
 c30:	add	x10, x10, #0x0
 c34:	str	x0, [sp]
 c38:	mov	x1, sp
 c3c:	mov	x0, x8
 c40:	stp	x10, x9, [sp, #16]
 c44:	bl	0 <_ZN4llvm16TargetIRAnalysisC1ESt8functionIFNS_19TargetTransformInfoERKNS_8FunctionEEE>
 c48:	ldr	x8, [sp, #16]
 c4c:	cbz	x8, c60 <_ZN4llvm13TargetMachine19getTargetIRAnalysisEv+0x48>
 c50:	mov	x0, sp
 c54:	mov	x1, sp
 c58:	mov	w2, #0x3                   	// #3
 c5c:	blr	x8
 c60:	ldp	x29, x30, [sp, #32]
 c64:	add	sp, sp, #0x30
 c68:	ret

0000000000000c6c <_ZNSt17_Function_handlerIFN4llvm19TargetTransformInfoERKNS0_8FunctionEEZNS0_13TargetMachine19getTargetIRAnalysisEvE3$_0E9_M_invokeERKSt9_Any_dataS4_>:
 c6c:	ldr	x0, [x0]
 c70:	ldr	x9, [x0]
 c74:	ldr	x2, [x9, #64]
 c78:	br	x2

0000000000000c7c <_ZNSt14_Function_base13_Base_managerIZN4llvm13TargetMachine19getTargetIRAnalysisEvE3$_0E10_M_managerERSt9_Any_dataRKS5_St18_Manager_operation>:
 c7c:	cmp	w2, #0x2
 c80:	b.eq	c98 <_ZNSt14_Function_base13_Base_managerIZN4llvm13TargetMachine19getTargetIRAnalysisEvE3$_0E10_M_managerERSt9_Any_dataRKS5_St18_Manager_operation+0x1c>  // b.none
 c84:	cmp	w2, #0x1
 c88:	b.ne	ca0 <_ZNSt14_Function_base13_Base_managerIZN4llvm13TargetMachine19getTargetIRAnalysisEvE3$_0E10_M_managerERSt9_Any_dataRKS5_St18_Manager_operation+0x24>  // b.any
 c8c:	str	x1, [x0]
 c90:	mov	w0, wzr
 c94:	ret
 c98:	ldr	x8, [x1]
 c9c:	str	x8, [x0]
 ca0:	mov	w0, wzr
 ca4:	ret

Disassembly of section .text._ZNK4llvm13TargetMachine16getSubtargetImplERKNS_8FunctionE:

0000000000000000 <_ZNK4llvm13TargetMachine16getSubtargetImplERKNS_8FunctionE>:
   0:	mov	x0, xzr
   4:	ret

Disassembly of section .text._ZNK4llvm13TargetMachine18getObjFileLoweringEv:

0000000000000000 <_ZNK4llvm13TargetMachine18getObjFileLoweringEv>:
   0:	mov	x0, xzr
   4:	ret

Disassembly of section .text._ZNK4llvm13TargetMachine25createDefaultFuncInfoYAMLEv:

0000000000000000 <_ZNK4llvm13TargetMachine25createDefaultFuncInfoYAMLEv>:
   0:	mov	x0, xzr
   4:	ret

Disassembly of section .text._ZNK4llvm13TargetMachine21convertFuncInfoToYAMLERKNS_15MachineFunctionE:

0000000000000000 <_ZNK4llvm13TargetMachine21convertFuncInfoToYAMLERKNS_15MachineFunctionE>:
   0:	mov	x0, xzr
   4:	ret

Disassembly of section .text._ZNK4llvm13TargetMachine24parseMachineFunctionInfoERKNS_4yaml19MachineFunctionInfoERNS_25PerFunctionMIParsingStateERNS_12SMDiagnosticERNS_7SMRangeE:

0000000000000000 <_ZNK4llvm13TargetMachine24parseMachineFunctionInfoERKNS_4yaml19MachineFunctionInfoERNS_25PerFunctionMIParsingStateERNS_12SMDiagnosticERNS_7SMRangeE>:
   0:	mov	w0, wzr
   4:	ret

Disassembly of section .text._ZNK4llvm13TargetMachine16getIntrinsicInfoEv:

0000000000000000 <_ZNK4llvm13TargetMachine16getIntrinsicInfoEv>:
   0:	mov	x0, xzr
   4:	ret

Disassembly of section .text._ZN4llvm13TargetMachine17adjustPassManagerERNS_18PassManagerBuilderE:

0000000000000000 <_ZN4llvm13TargetMachine17adjustPassManagerERNS_18PassManagerBuilderE>:
   0:	ret

Disassembly of section .text._ZN4llvm13TargetMachine19addPassesToEmitFileERNS_6legacy15PassManagerBaseERNS_17raw_pwrite_streamEPS4_NS_15CodeGenFileTypeEbPNS_28MachineModuleInfoWrapperPassE:

0000000000000000 <_ZN4llvm13TargetMachine19addPassesToEmitFileERNS_6legacy15PassManagerBaseERNS_17raw_pwrite_streamEPS4_NS_15CodeGenFileTypeEbPNS_28MachineModuleInfoWrapperPassE>:
   0:	mov	w0, #0x1                   	// #1
   4:	ret

Disassembly of section .text._ZN4llvm13TargetMachine17addPassesToEmitMCERNS_6legacy15PassManagerBaseERPNS_9MCContextERNS_17raw_pwrite_streamEb:

0000000000000000 <_ZN4llvm13TargetMachine17addPassesToEmitMCERNS_6legacy15PassManagerBaseERPNS_9MCContextERNS_17raw_pwrite_streamEb>:
   0:	mov	w0, #0x1                   	// #1
   4:	ret

Disassembly of section .text._ZNK4llvm13TargetMachine31targetSchedulesPostRASchedulingEv:

0000000000000000 <_ZNK4llvm13TargetMachine31targetSchedulesPostRASchedulingEv>:
   0:	mov	w0, wzr
   4:	ret

Disassembly of section .text._ZN4llvm15MCTargetOptionsC2ERKS0_:

0000000000000000 <_ZN4llvm15MCTargetOptionsC2ERKS0_>:
   0:	sub	sp, sp, #0x40
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	add	x29, sp, #0x10
  14:	ldr	x8, [x1]
  18:	mov	x20, x0
  1c:	mov	x19, x1
  20:	str	x8, [x0], #24
  24:	mov	x8, x20
  28:	str	x0, [x8, #8]!
  2c:	ldp	x21, x22, [x1, #8]
  30:	cbnz	x21, 38 <_ZN4llvm15MCTargetOptionsC2ERKS0_+0x38>
  34:	cbnz	x22, 128 <_ZN4llvm15MCTargetOptionsC2ERKS0_+0x128>
  38:	cmp	x22, #0x10
  3c:	str	x22, [sp, #8]
  40:	b.cc	60 <_ZN4llvm15MCTargetOptionsC2ERKS0_+0x60>  // b.lo, b.ul, b.last
  44:	add	x1, sp, #0x8
  48:	mov	x0, x8
  4c:	mov	x2, xzr
  50:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
  54:	str	x0, [x20, #8]
  58:	ldr	x8, [sp, #8]
  5c:	str	x8, [x20, #24]
  60:	cbz	x22, 84 <_ZN4llvm15MCTargetOptionsC2ERKS0_+0x84>
  64:	cmp	x22, #0x1
  68:	b.ne	78 <_ZN4llvm15MCTargetOptionsC2ERKS0_+0x78>  // b.any
  6c:	ldrb	w8, [x21]
  70:	strb	w8, [x0]
  74:	b	84 <_ZN4llvm15MCTargetOptionsC2ERKS0_+0x84>
  78:	mov	x1, x21
  7c:	mov	x2, x22
  80:	bl	0 <memcpy>
  84:	ldr	x9, [sp, #8]
  88:	ldr	x10, [x20, #8]
  8c:	add	x0, x20, #0x38
  90:	mov	x8, x20
  94:	str	x9, [x20, #16]
  98:	strb	wzr, [x10, x9]
  9c:	str	x0, [x8, #40]!
  a0:	ldp	x21, x22, [x19, #40]
  a4:	cbnz	x21, ac <_ZN4llvm15MCTargetOptionsC2ERKS0_+0xac>
  a8:	cbnz	x22, 128 <_ZN4llvm15MCTargetOptionsC2ERKS0_+0x128>
  ac:	cmp	x22, #0x10
  b0:	str	x22, [sp, #8]
  b4:	b.cc	d4 <_ZN4llvm15MCTargetOptionsC2ERKS0_+0xd4>  // b.lo, b.ul, b.last
  b8:	add	x1, sp, #0x8
  bc:	mov	x0, x8
  c0:	mov	x2, xzr
  c4:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
  c8:	str	x0, [x20, #40]
  cc:	ldr	x8, [sp, #8]
  d0:	str	x8, [x20, #56]
  d4:	cbz	x22, f8 <_ZN4llvm15MCTargetOptionsC2ERKS0_+0xf8>
  d8:	cmp	x22, #0x1
  dc:	b.ne	ec <_ZN4llvm15MCTargetOptionsC2ERKS0_+0xec>  // b.any
  e0:	ldrb	w8, [x21]
  e4:	strb	w8, [x0]
  e8:	b	f8 <_ZN4llvm15MCTargetOptionsC2ERKS0_+0xf8>
  ec:	mov	x1, x21
  f0:	mov	x2, x22
  f4:	bl	0 <memcpy>
  f8:	ldr	x8, [sp, #8]
  fc:	ldr	x9, [x20, #40]
 100:	add	x0, x20, #0x48
 104:	add	x1, x19, #0x48
 108:	str	x8, [x20, #48]
 10c:	strb	wzr, [x9, x8]
 110:	bl	0 <_ZN4llvm15MCTargetOptionsC2ERKS0_>
 114:	ldp	x20, x19, [sp, #48]
 118:	ldp	x22, x21, [sp, #32]
 11c:	ldp	x29, x30, [sp, #16]
 120:	add	sp, sp, #0x40
 124:	ret
 128:	adrp	x0, 0 <_ZN4llvm15MCTargetOptionsC2ERKS0_>
 12c:	add	x0, x0, #0x0
 130:	bl	0 <_ZSt19__throw_logic_errorPKc>

Disassembly of section .text._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ERKS7_:

0000000000000000 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ERKS7_>:
   0:	sub	sp, sp, #0x50
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	add	x29, sp, #0x10
  18:	ldp	x9, x8, [x1]
  1c:	mov	x19, x0
  20:	stp	xzr, xzr, [x0]
  24:	mov	x21, x1
  28:	subs	x0, x8, x9
  2c:	asr	x22, x0, #5
  30:	str	xzr, [x19, #16]
  34:	b.eq	4c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ERKS7_+0x4c>  // b.none
  38:	lsr	x8, x22, #58
  3c:	cbnz	x8, 110 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ERKS7_+0x110>
  40:	bl	0 <_Znwm>
  44:	mov	x20, x0
  48:	b	50 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ERKS7_+0x50>
  4c:	mov	x20, xzr
  50:	add	x8, x20, x22, lsl #5
  54:	stp	x20, x20, [x19]
  58:	str	x8, [x19, #16]
  5c:	ldp	x23, x24, [x21]
  60:	cmp	x23, x24
  64:	b.ne	b0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ERKS7_+0xb0>  // b.any
  68:	str	x20, [x19, #8]
  6c:	ldp	x20, x19, [sp, #64]
  70:	ldp	x22, x21, [sp, #48]
  74:	ldp	x24, x23, [sp, #32]
  78:	ldp	x29, x30, [sp, #16]
  7c:	add	sp, sp, #0x50
  80:	ret
  84:	mov	x1, x21
  88:	mov	x2, x22
  8c:	bl	0 <memcpy>
  90:	ldr	x8, [sp, #8]
  94:	ldr	x9, [x20]
  98:	add	x23, x23, #0x20
  9c:	cmp	x23, x24
  a0:	str	x8, [x20, #8]
  a4:	add	x20, x20, #0x20
  a8:	strb	wzr, [x9, x8]
  ac:	b.eq	68 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ERKS7_+0x68>  // b.none
  b0:	add	x0, x20, #0x10
  b4:	str	x0, [x20]
  b8:	ldp	x21, x22, [x23]
  bc:	cbnz	x21, c4 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ERKS7_+0xc4>
  c0:	cbnz	x22, 104 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ERKS7_+0x104>
  c4:	cmp	x22, #0x10
  c8:	str	x22, [sp, #8]
  cc:	b.cc	ec <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ERKS7_+0xec>  // b.lo, b.ul, b.last
  d0:	add	x1, sp, #0x8
  d4:	mov	x0, x20
  d8:	mov	x2, xzr
  dc:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
  e0:	str	x0, [x20]
  e4:	ldr	x8, [sp, #8]
  e8:	str	x8, [x20, #16]
  ec:	cbz	x22, 90 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ERKS7_+0x90>
  f0:	cmp	x22, #0x1
  f4:	b.ne	84 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ERKS7_+0x84>  // b.any
  f8:	ldrb	w8, [x21]
  fc:	strb	w8, [x0]
 100:	b	90 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ERKS7_+0x90>
 104:	adrp	x0, 0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2ERKS7_>
 108:	add	x0, x0, #0x0
 10c:	bl	0 <_ZSt19__throw_logic_errorPKc>
 110:	bl	0 <_ZSt17__throw_bad_allocv>

TargetMachineC.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <LLVMGetFirstTarget>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	bl	0 <_ZN4llvm14TargetRegistry7targetsEv>
  10:	mov	x19, x0
  14:	bl	0 <_ZN4llvm14TargetRegistry7targetsEv>
  18:	cmp	x19, x1
  1c:	b.eq	48 <LLVMGetFirstTarget+0x48>  // b.none
  20:	bl	0 <_ZN4llvm14TargetRegistry7targetsEv>
  24:	cbnz	x0, 4c <LLVMGetFirstTarget+0x4c>
  28:	adrp	x0, 0 <LLVMGetFirstTarget>
  2c:	adrp	x1, 0 <LLVMGetFirstTarget>
  30:	adrp	x3, 0 <LLVMGetFirstTarget>
  34:	add	x0, x0, #0x0
  38:	add	x1, x1, #0x0
  3c:	add	x3, x3, #0x0
  40:	mov	w2, #0x277                 	// #631
  44:	bl	0 <__assert_fail>
  48:	mov	x0, xzr
  4c:	ldr	x19, [sp, #16]
  50:	ldp	x29, x30, [sp], #32
  54:	ret

0000000000000058 <LLVMGetNextTarget>:
  58:	ldr	x0, [x0]
  5c:	ret

0000000000000060 <LLVMGetTargetFromName>:
  60:	stp	x29, x30, [sp, #-64]!
  64:	str	x23, [sp, #16]
  68:	stp	x22, x21, [sp, #32]
  6c:	stp	x20, x19, [sp, #48]
  70:	mov	x29, sp
  74:	mov	x20, x0
  78:	cbz	x0, 8c <LLVMGetTargetFromName+0x2c>
  7c:	mov	x0, x20
  80:	bl	0 <strlen>
  84:	mov	x21, x0
  88:	b	90 <LLVMGetTargetFromName+0x30>
  8c:	mov	x21, xzr
  90:	bl	0 <_ZN4llvm14TargetRegistry7targetsEv>
  94:	mov	x19, x0
  98:	cmp	x1, x0
  9c:	b.eq	f8 <LLVMGetTargetFromName+0x98>  // b.none
  a0:	mov	x22, x1
  a4:	b	b4 <LLVMGetTargetFromName+0x54>
  a8:	ldr	x19, [x19]
  ac:	cmp	x22, x19
  b0:	b.eq	f8 <LLVMGetTargetFromName+0x98>  // b.none
  b4:	cbz	x19, 108 <LLVMGetTargetFromName+0xa8>
  b8:	ldr	x23, [x19, #16]
  bc:	cbz	x23, d4 <LLVMGetTargetFromName+0x74>
  c0:	mov	x0, x23
  c4:	bl	0 <strlen>
  c8:	cmp	x0, x21
  cc:	b.ne	a8 <LLVMGetTargetFromName+0x48>  // b.any
  d0:	b	e0 <LLVMGetTargetFromName+0x80>
  d4:	mov	x0, xzr
  d8:	cmp	x0, x21
  dc:	b.ne	a8 <LLVMGetTargetFromName+0x48>  // b.any
  e0:	cbz	x21, f8 <LLVMGetTargetFromName+0x98>
  e4:	mov	x0, x23
  e8:	mov	x1, x20
  ec:	mov	x2, x21
  f0:	bl	0 <bcmp>
  f4:	cbnz	w0, a8 <LLVMGetTargetFromName+0x48>
  f8:	bl	0 <_ZN4llvm14TargetRegistry7targetsEv>
  fc:	cmp	x19, x1
 100:	b.eq	128 <LLVMGetTargetFromName+0xc8>  // b.none
 104:	cbnz	x19, 12c <LLVMGetTargetFromName+0xcc>
 108:	adrp	x0, 0 <LLVMGetFirstTarget>
 10c:	adrp	x1, 0 <LLVMGetFirstTarget>
 110:	adrp	x3, 0 <LLVMGetFirstTarget>
 114:	add	x0, x0, #0x0
 118:	add	x1, x1, #0x0
 11c:	add	x3, x3, #0x0
 120:	mov	w2, #0x277                 	// #631
 124:	bl	0 <__assert_fail>
 128:	mov	x19, xzr
 12c:	mov	x0, x19
 130:	ldp	x20, x19, [sp, #48]
 134:	ldp	x22, x21, [sp, #32]
 138:	ldr	x23, [sp, #16]
 13c:	ldp	x29, x30, [sp], #64
 140:	ret

0000000000000144 <LLVMGetTargetFromTriple>:
 144:	sub	sp, sp, #0x90
 148:	stp	x29, x30, [sp, #80]
 14c:	stp	x24, x23, [sp, #96]
 150:	stp	x22, x21, [sp, #112]
 154:	stp	x20, x19, [sp, #128]
 158:	add	x29, sp, #0x50
 15c:	add	x8, sp, #0x28
 160:	add	x9, sp, #0x8
 164:	add	x23, x8, #0x10
 168:	add	x24, x9, #0x10
 16c:	strb	wzr, [sp, #56]
 170:	stp	x23, xzr, [sp, #40]
 174:	str	x24, [sp, #8]
 178:	cbz	x0, 26c <LLVMGetTargetFromTriple+0x128>
 17c:	mov	x19, x2
 180:	mov	x20, x1
 184:	mov	x21, x0
 188:	bl	0 <strlen>
 18c:	mov	x22, x0
 190:	cmp	x0, #0xf
 194:	stur	x0, [x29, #-8]
 198:	b.ls	1c0 <LLVMGetTargetFromTriple+0x7c>  // b.plast
 19c:	add	x0, sp, #0x8
 1a0:	sub	x1, x29, #0x8
 1a4:	mov	x2, xzr
 1a8:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
 1ac:	ldur	x8, [x29, #-8]
 1b0:	str	x0, [sp, #8]
 1b4:	str	x8, [sp, #24]
 1b8:	cbnz	x22, 1c8 <LLVMGetTargetFromTriple+0x84>
 1bc:	b	1e8 <LLVMGetTargetFromTriple+0xa4>
 1c0:	mov	x0, x24
 1c4:	cbz	x22, 1e8 <LLVMGetTargetFromTriple+0xa4>
 1c8:	cmp	x22, #0x1
 1cc:	b.ne	1dc <LLVMGetTargetFromTriple+0x98>  // b.any
 1d0:	ldrb	w8, [x21]
 1d4:	strb	w8, [x0]
 1d8:	b	1e8 <LLVMGetTargetFromTriple+0xa4>
 1dc:	mov	x1, x21
 1e0:	mov	x2, x22
 1e4:	bl	0 <memcpy>
 1e8:	ldur	x8, [x29, #-8]
 1ec:	ldr	x9, [sp, #8]
 1f0:	add	x0, sp, #0x8
 1f4:	add	x1, sp, #0x28
 1f8:	str	x8, [sp, #16]
 1fc:	strb	wzr, [x9, x8]
 200:	bl	0 <_ZN4llvm14TargetRegistry12lookupTargetERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERS6_>
 204:	str	x0, [x20]
 208:	ldr	x8, [sp, #8]
 20c:	cmp	x8, x24
 210:	b.eq	220 <LLVMGetTargetFromTriple+0xdc>  // b.none
 214:	mov	x0, x8
 218:	bl	0 <_ZdlPv>
 21c:	ldr	x0, [x20]
 220:	cbz	x0, 22c <LLVMGetTargetFromTriple+0xe8>
 224:	mov	w19, wzr
 228:	b	240 <LLVMGetTargetFromTriple+0xfc>
 22c:	cbz	x19, 23c <LLVMGetTargetFromTriple+0xf8>
 230:	ldr	x0, [sp, #40]
 234:	bl	0 <strdup>
 238:	str	x0, [x19]
 23c:	mov	w19, #0x1                   	// #1
 240:	ldr	x0, [sp, #40]
 244:	cmp	x0, x23
 248:	b.eq	250 <LLVMGetTargetFromTriple+0x10c>  // b.none
 24c:	bl	0 <_ZdlPv>
 250:	mov	w0, w19
 254:	ldp	x20, x19, [sp, #128]
 258:	ldp	x22, x21, [sp, #112]
 25c:	ldp	x24, x23, [sp, #96]
 260:	ldp	x29, x30, [sp, #80]
 264:	add	sp, sp, #0x90
 268:	ret
 26c:	adrp	x0, 0 <LLVMGetFirstTarget>
 270:	add	x0, x0, #0x0
 274:	bl	0 <_ZSt19__throw_logic_errorPKc>

0000000000000278 <LLVMGetTargetName>:
 278:	ldr	x0, [x0, #16]
 27c:	ret

0000000000000280 <LLVMGetTargetDescription>:
 280:	ldr	x0, [x0, #24]
 284:	ret

0000000000000288 <LLVMTargetHasJIT>:
 288:	ldrb	w0, [x0, #40]
 28c:	ret

0000000000000290 <LLVMTargetHasTargetMachine>:
 290:	ldr	x8, [x0, #88]
 294:	cmp	x8, #0x0
 298:	cset	w0, ne  // ne = any
 29c:	ret

00000000000002a0 <LLVMTargetHasAsmBackend>:
 2a0:	ldr	x8, [x0, #96]
 2a4:	cmp	x8, #0x0
 2a8:	cset	w0, ne  // ne = any
 2ac:	ret

00000000000002b0 <LLVMCreateTargetMachine>:
 2b0:	sub	sp, sp, #0x190
 2b4:	stp	x29, x30, [sp, #304]
 2b8:	stp	x28, x27, [sp, #320]
 2bc:	stp	x26, x25, [sp, #336]
 2c0:	stp	x24, x23, [sp, #352]
 2c4:	stp	x22, x21, [sp, #368]
 2c8:	stp	x20, x19, [sp, #384]
 2cc:	add	x29, sp, #0x130
 2d0:	sub	w8, w5, #0x1
 2d4:	cmp	w8, #0x6
 2d8:	mov	x19, x3
 2dc:	mov	x20, x2
 2e0:	mov	x22, x1
 2e4:	cset	w9, cc  // cc = lo, ul, last
 2e8:	csel	w8, w8, wzr, cc  // cc = lo, ul, last
 2ec:	cmp	w6, #0x6
 2f0:	mov	x26, x0
 2f4:	stp	x9, x8, [sp, #24]
 2f8:	b.hi	334 <LLVMCreateTargetMachine+0x84>  // b.pmore
 2fc:	adrp	x9, 0 <LLVMGetFirstTarget>
 300:	mov	w8, w6
 304:	add	x9, x9, #0x0
 308:	adr	x10, 324 <LLVMCreateTargetMachine+0x74>
 30c:	ldrb	w11, [x9, x8]
 310:	add	x10, x10, x11, lsl #2
 314:	mov	w12, wzr
 318:	mov	x27, xzr
 31c:	mov	x28, xzr
 320:	br	x10
 324:	mov	x27, xzr
 328:	mov	x28, xzr
 32c:	mov	w12, #0x1                   	// #1
 330:	b	380 <LLVMCreateTargetMachine+0xd0>
 334:	mov	w12, wzr
 338:	mov	x27, #0x100000000           	// #4294967296
 33c:	mov	w28, #0x1                   	// #1
 340:	b	380 <LLVMCreateTargetMachine+0xd0>
 344:	mov	w12, wzr
 348:	mov	x28, xzr
 34c:	mov	x27, #0x100000000           	// #4294967296
 350:	b	380 <LLVMCreateTargetMachine+0xd0>
 354:	mov	w12, wzr
 358:	mov	x27, #0x100000000           	// #4294967296
 35c:	mov	w28, #0x2                   	// #2
 360:	b	380 <LLVMCreateTargetMachine+0xd0>
 364:	mov	w12, wzr
 368:	mov	x27, #0x100000000           	// #4294967296
 36c:	mov	w28, #0x3                   	// #3
 370:	b	380 <LLVMCreateTargetMachine+0xd0>
 374:	mov	w12, wzr
 378:	mov	x27, #0x100000000           	// #4294967296
 37c:	mov	w28, #0x4                   	// #4
 380:	cmp	w4, #0x4
 384:	mov	w8, #0x2                   	// #2
 388:	csel	w21, w4, w8, cc  // cc = lo, ul, last
 38c:	adrp	x8, 0 <LLVMGetFirstTarget>
 390:	ldr	q0, [x8]
 394:	mov	w8, #0x10                  	// #16
 398:	strh	w8, [sp, #48]
 39c:	adrp	x8, 0 <LLVMGetFirstTarget>
 3a0:	stur	q0, [sp, #84]
 3a4:	ldr	q0, [x8]
 3a8:	mov	w8, #0x1                   	// #1
 3ac:	strb	w8, [sp, #56]
 3b0:	str	w8, [sp, #60]
 3b4:	add	x8, sp, #0x30
 3b8:	add	x0, x8, #0x38
 3bc:	str	w12, [sp, #44]
 3c0:	str	wzr, [sp, #52]
 3c4:	strb	wzr, [sp, #64]
 3c8:	str	wzr, [sp, #100]
 3cc:	stur	q0, [sp, #68]
 3d0:	bl	0 <_ZN4llvm15MCTargetOptionsC1Ev>
 3d4:	cbz	x22, 408 <LLVMCreateTargetMachine+0x158>
 3d8:	mov	x0, x22
 3dc:	bl	0 <strlen>
 3e0:	mov	x25, x0
 3e4:	cbz	x20, 410 <LLVMCreateTargetMachine+0x160>
 3e8:	mov	x0, x20
 3ec:	bl	0 <strlen>
 3f0:	mov	x23, x0
 3f4:	cbz	x19, 418 <LLVMCreateTargetMachine+0x168>
 3f8:	mov	x0, x19
 3fc:	bl	0 <strlen>
 400:	mov	x24, x0
 404:	b	41c <LLVMCreateTargetMachine+0x16c>
 408:	mov	x25, xzr
 40c:	cbnz	x20, 3e8 <LLVMCreateTargetMachine+0x138>
 410:	mov	x23, xzr
 414:	cbnz	x19, 3f8 <LLVMCreateTargetMachine+0x148>
 418:	mov	x24, xzr
 41c:	stp	x22, x25, [x29, #-24]
 420:	ldr	x25, [x26, #88]
 424:	cbz	x25, 4ac <LLVMCreateTargetMachine+0x1fc>
 428:	ldp	x8, x11, [sp, #24]
 42c:	mov	w9, #0x105                 	// #261
 430:	sub	x10, x29, #0x18
 434:	sub	x0, x29, #0x50
 438:	lsl	x8, x8, #32
 43c:	sub	x1, x29, #0x68
 440:	orr	x27, x28, x27
 444:	orr	x22, x8, x11
 448:	sturh	w9, [x29, #-88]
 44c:	stp	x10, xzr, [x29, #-104]
 450:	sub	x28, x29, #0x50
 454:	bl	0 <_ZN4llvm6TripleC1ERKNS_5TwineE>
 458:	ldr	w8, [sp, #44]
 45c:	sub	x1, x29, #0x50
 460:	add	x6, sp, #0x30
 464:	mov	x0, x26
 468:	mov	x2, x20
 46c:	mov	x3, x23
 470:	mov	x4, x19
 474:	mov	x5, x24
 478:	mov	x7, x22
 47c:	strb	w8, [sp, #16]
 480:	str	w21, [sp, #8]
 484:	str	x27, [sp]
 488:	blr	x25
 48c:	ldur	x8, [x29, #-80]
 490:	add	x9, x28, #0x10
 494:	mov	x19, x0
 498:	cmp	x8, x9
 49c:	b.eq	4b0 <LLVMCreateTargetMachine+0x200>  // b.none
 4a0:	mov	x0, x8
 4a4:	bl	0 <_ZdlPv>
 4a8:	b	4b0 <LLVMCreateTargetMachine+0x200>
 4ac:	mov	x19, xzr
 4b0:	ldp	x20, x21, [sp, #176]
 4b4:	cmp	x20, x21
 4b8:	b.ne	524 <LLVMCreateTargetMachine+0x274>  // b.any
 4bc:	cbz	x20, 4c8 <LLVMCreateTargetMachine+0x218>
 4c0:	mov	x0, x20
 4c4:	bl	0 <_ZdlPv>
 4c8:	ldr	x0, [sp, #144]
 4cc:	add	x20, sp, #0x30
 4d0:	add	x8, x20, #0x70
 4d4:	cmp	x0, x8
 4d8:	b.eq	4e0 <LLVMCreateTargetMachine+0x230>  // b.none
 4dc:	bl	0 <_ZdlPv>
 4e0:	ldr	x0, [sp, #112]
 4e4:	add	x8, x20, #0x50
 4e8:	cmp	x0, x8
 4ec:	b.eq	4f4 <LLVMCreateTargetMachine+0x244>  // b.none
 4f0:	bl	0 <_ZdlPv>
 4f4:	mov	x0, x19
 4f8:	ldp	x20, x19, [sp, #384]
 4fc:	ldp	x22, x21, [sp, #368]
 500:	ldp	x24, x23, [sp, #352]
 504:	ldp	x26, x25, [sp, #336]
 508:	ldp	x28, x27, [sp, #320]
 50c:	ldp	x29, x30, [sp, #304]
 510:	add	sp, sp, #0x190
 514:	ret
 518:	add	x20, x20, #0x10
 51c:	cmp	x20, x21
 520:	b.eq	538 <LLVMCreateTargetMachine+0x288>  // b.none
 524:	ldr	x0, [x20], #16
 528:	cmp	x0, x20
 52c:	b.eq	518 <LLVMCreateTargetMachine+0x268>  // b.none
 530:	bl	0 <_ZdlPv>
 534:	b	518 <LLVMCreateTargetMachine+0x268>
 538:	ldr	x20, [sp, #176]
 53c:	cbnz	x20, 4c0 <LLVMCreateTargetMachine+0x210>
 540:	b	4c8 <LLVMCreateTargetMachine+0x218>

0000000000000544 <LLVMDisposeTargetMachine>:
 544:	cbz	x0, 554 <LLVMDisposeTargetMachine+0x10>
 548:	ldr	x8, [x0]
 54c:	ldr	x1, [x8, #8]
 550:	br	x1
 554:	ret

0000000000000558 <LLVMGetTargetMachineTarget>:
 558:	ldr	x0, [x0, #8]
 55c:	ret

0000000000000560 <LLVMGetTargetMachineTriple>:
 560:	sub	sp, sp, #0x50
 564:	stp	x29, x30, [sp, #32]
 568:	str	x21, [sp, #48]
 56c:	stp	x20, x19, [sp, #64]
 570:	add	x29, sp, #0x20
 574:	mov	x8, sp
 578:	add	x21, x8, #0x10
 57c:	str	x21, [sp]
 580:	ldp	x19, x20, [x0, #448]
 584:	cbnz	x19, 58c <LLVMGetTargetMachineTriple+0x2c>
 588:	cbnz	x20, 62c <LLVMGetTargetMachineTriple+0xcc>
 58c:	cmp	x20, #0x10
 590:	str	x20, [x29, #24]
 594:	b.cc	5bc <LLVMGetTargetMachineTriple+0x5c>  // b.lo, b.ul, b.last
 598:	mov	x0, sp
 59c:	add	x1, x29, #0x18
 5a0:	mov	x2, xzr
 5a4:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
 5a8:	ldr	x8, [x29, #24]
 5ac:	str	x0, [sp]
 5b0:	str	x8, [sp, #16]
 5b4:	cbnz	x20, 5c4 <LLVMGetTargetMachineTriple+0x64>
 5b8:	b	5e4 <LLVMGetTargetMachineTriple+0x84>
 5bc:	mov	x0, x21
 5c0:	cbz	x20, 5e4 <LLVMGetTargetMachineTriple+0x84>
 5c4:	cmp	x20, #0x1
 5c8:	b.ne	5d8 <LLVMGetTargetMachineTriple+0x78>  // b.any
 5cc:	ldrb	w8, [x19]
 5d0:	strb	w8, [x0]
 5d4:	b	5e4 <LLVMGetTargetMachineTriple+0x84>
 5d8:	mov	x1, x19
 5dc:	mov	x2, x20
 5e0:	bl	0 <memcpy>
 5e4:	ldr	x8, [x29, #24]
 5e8:	ldr	x9, [sp]
 5ec:	str	x8, [sp, #8]
 5f0:	strb	wzr, [x9, x8]
 5f4:	ldr	x0, [sp]
 5f8:	bl	0 <strdup>
 5fc:	ldr	x8, [sp]
 600:	mov	x19, x0
 604:	cmp	x8, x21
 608:	b.eq	614 <LLVMGetTargetMachineTriple+0xb4>  // b.none
 60c:	mov	x0, x8
 610:	bl	0 <_ZdlPv>
 614:	mov	x0, x19
 618:	ldp	x20, x19, [sp, #64]
 61c:	ldr	x21, [sp, #48]
 620:	ldp	x29, x30, [sp, #32]
 624:	add	sp, sp, #0x50
 628:	ret
 62c:	adrp	x0, 0 <LLVMGetFirstTarget>
 630:	add	x0, x0, #0x0
 634:	bl	0 <_ZSt19__throw_logic_errorPKc>

0000000000000638 <LLVMGetTargetMachineCPU>:
 638:	sub	sp, sp, #0x50
 63c:	stp	x29, x30, [sp, #32]
 640:	str	x21, [sp, #48]
 644:	stp	x20, x19, [sp, #64]
 648:	add	x29, sp, #0x20
 64c:	ldp	x19, x20, [x0, #504]
 650:	mov	x8, sp
 654:	add	x21, x8, #0x10
 658:	str	x21, [sp]
 65c:	cbz	x19, 6a4 <LLVMGetTargetMachineCPU+0x6c>
 660:	cmp	x20, #0x10
 664:	mov	x0, x21
 668:	str	x20, [x29, #24]
 66c:	b.cc	68c <LLVMGetTargetMachineCPU+0x54>  // b.lo, b.ul, b.last
 670:	mov	x0, sp
 674:	add	x1, x29, #0x18
 678:	mov	x2, xzr
 67c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
 680:	ldr	x8, [x29, #24]
 684:	str	x0, [sp]
 688:	str	x8, [sp, #16]
 68c:	cbz	x20, 6c0 <LLVMGetTargetMachineCPU+0x88>
 690:	cmp	x20, #0x1
 694:	b.ne	6b4 <LLVMGetTargetMachineCPU+0x7c>  // b.any
 698:	ldrb	w8, [x19]
 69c:	strb	w8, [x0]
 6a0:	b	6c0 <LLVMGetTargetMachineCPU+0x88>
 6a4:	str	xzr, [sp, #8]
 6a8:	strb	wzr, [sp, #16]
 6ac:	mov	x0, x21
 6b0:	b	6d4 <LLVMGetTargetMachineCPU+0x9c>
 6b4:	mov	x1, x19
 6b8:	mov	x2, x20
 6bc:	bl	0 <memcpy>
 6c0:	ldr	x8, [x29, #24]
 6c4:	ldr	x9, [sp]
 6c8:	str	x8, [sp, #8]
 6cc:	strb	wzr, [x9, x8]
 6d0:	ldr	x0, [sp]
 6d4:	bl	0 <strdup>
 6d8:	ldr	x8, [sp]
 6dc:	mov	x19, x0
 6e0:	cmp	x8, x21
 6e4:	b.eq	6f0 <LLVMGetTargetMachineCPU+0xb8>  // b.none
 6e8:	mov	x0, x8
 6ec:	bl	0 <_ZdlPv>
 6f0:	mov	x0, x19
 6f4:	ldp	x20, x19, [sp, #64]
 6f8:	ldr	x21, [sp, #48]
 6fc:	ldp	x29, x30, [sp, #32]
 700:	add	sp, sp, #0x50
 704:	ret

0000000000000708 <LLVMGetTargetMachineFeatureString>:
 708:	sub	sp, sp, #0x50
 70c:	stp	x29, x30, [sp, #32]
 710:	str	x21, [sp, #48]
 714:	stp	x20, x19, [sp, #64]
 718:	add	x29, sp, #0x20
 71c:	ldr	x19, [x0, #536]
 720:	ldr	x20, [x0, #544]
 724:	mov	x8, sp
 728:	add	x21, x8, #0x10
 72c:	str	x21, [sp]
 730:	cbz	x19, 778 <LLVMGetTargetMachineFeatureString+0x70>
 734:	cmp	x20, #0x10
 738:	mov	x0, x21
 73c:	str	x20, [x29, #24]
 740:	b.cc	760 <LLVMGetTargetMachineFeatureString+0x58>  // b.lo, b.ul, b.last
 744:	mov	x0, sp
 748:	add	x1, x29, #0x18
 74c:	mov	x2, xzr
 750:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
 754:	ldr	x8, [x29, #24]
 758:	str	x0, [sp]
 75c:	str	x8, [sp, #16]
 760:	cbz	x20, 794 <LLVMGetTargetMachineFeatureString+0x8c>
 764:	cmp	x20, #0x1
 768:	b.ne	788 <LLVMGetTargetMachineFeatureString+0x80>  // b.any
 76c:	ldrb	w8, [x19]
 770:	strb	w8, [x0]
 774:	b	794 <LLVMGetTargetMachineFeatureString+0x8c>
 778:	str	xzr, [sp, #8]
 77c:	strb	wzr, [sp, #16]
 780:	mov	x0, x21
 784:	b	7a8 <LLVMGetTargetMachineFeatureString+0xa0>
 788:	mov	x1, x19
 78c:	mov	x2, x20
 790:	bl	0 <memcpy>
 794:	ldr	x8, [x29, #24]
 798:	ldr	x9, [sp]
 79c:	str	x8, [sp, #8]
 7a0:	strb	wzr, [x9, x8]
 7a4:	ldr	x0, [sp]
 7a8:	bl	0 <strdup>
 7ac:	ldr	x8, [sp]
 7b0:	mov	x19, x0
 7b4:	cmp	x8, x21
 7b8:	b.eq	7c4 <LLVMGetTargetMachineFeatureString+0xbc>  // b.none
 7bc:	mov	x0, x8
 7c0:	bl	0 <_ZdlPv>
 7c4:	mov	x0, x19
 7c8:	ldp	x20, x19, [sp, #64]
 7cc:	ldr	x21, [sp, #48]
 7d0:	ldp	x29, x30, [sp, #32]
 7d4:	add	sp, sp, #0x50
 7d8:	ret

00000000000007dc <LLVMSetTargetMachineAsmVerbosity>:
 7dc:	ldrh	w8, [x0, #832]
 7e0:	cmp	w1, #0x0
 7e4:	cset	w9, ne  // ne = any
 7e8:	and	w8, w8, #0xfffffbff
 7ec:	orr	w8, w8, w9, lsl #10
 7f0:	strh	w8, [x0, #832]
 7f4:	ret

00000000000007f8 <LLVMCreateTargetDataLayout>:
 7f8:	stp	x29, x30, [sp, #-80]!
 7fc:	str	x25, [sp, #16]
 800:	stp	x24, x23, [sp, #32]
 804:	stp	x22, x21, [sp, #48]
 808:	stp	x20, x19, [sp, #64]
 80c:	mov	x29, sp
 810:	mov	x19, x0
 814:	mov	w0, #0x1b0                 	// #432
 818:	bl	0 <_Znwm>
 81c:	adrp	x9, 0 <LLVMGetFirstTarget>
 820:	adrp	x11, 0 <LLVMGetFirstTarget>
 824:	ldr	d0, [x9]
 828:	ldr	d1, [x11]
 82c:	add	x8, x0, #0x30
 830:	mov	x21, x0
 834:	add	x10, x0, #0x48
 838:	mov	x22, x0
 83c:	mov	x9, x0
 840:	strh	wzr, [x0, #8]
 844:	strh	wzr, [x0, #16]
 848:	str	x8, [x21, #32]!
 84c:	mov	x23, x0
 850:	add	x8, x0, #0xf8
 854:	str	d0, [x0, #40]
 858:	str	x10, [x22, #56]!
 85c:	mov	x24, x0
 860:	str	d1, [x0, #64]
 864:	strb	wzr, [x9, #216]!
 868:	str	x9, [x23, #200]!
 86c:	str	xzr, [x0, #208]
 870:	str	x8, [x24, #232]!
 874:	add	x8, x0, #0x190
 878:	mov	x20, x0
 87c:	add	x25, x0, #0x180
 880:	str	d0, [x0, #240]
 884:	stp	xzr, x8, [x0, #376]
 888:	str	d0, [x0, #392]
 88c:	bl	0 <_ZN4llvm10DataLayout5clearEv>
 890:	add	x1, x19, #0xd8
 894:	mov	x0, x23
 898:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_>
 89c:	ldrb	w8, [x19, #16]
 8a0:	add	x1, x19, #0x30
 8a4:	mov	x0, x21
 8a8:	strb	w8, [x20]
 8ac:	ldr	w8, [x19, #20]
 8b0:	str	w8, [x20, #4]
 8b4:	ldrh	w8, [x19, #24]
 8b8:	strh	w8, [x20, #8]
 8bc:	ldrh	w8, [x19, #32]
 8c0:	strh	w8, [x20, #16]
 8c4:	ldr	w8, [x19, #28]
 8c8:	str	w8, [x20, #12]
 8cc:	ldur	x8, [x19, #36]
 8d0:	stur	x8, [x20, #20]
 8d4:	bl	0 <LLVMGetFirstTarget>
 8d8:	add	x1, x19, #0x48
 8dc:	mov	x0, x22
 8e0:	bl	0 <LLVMGetFirstTarget>
 8e4:	add	x1, x19, #0xf8
 8e8:	mov	x0, x24
 8ec:	bl	0 <LLVMGetFirstTarget>
 8f0:	add	x1, x19, #0x190
 8f4:	mov	x0, x25
 8f8:	bl	0 <LLVMGetFirstTarget>
 8fc:	mov	x0, x20
 900:	ldp	x20, x19, [sp, #64]
 904:	ldp	x22, x21, [sp, #48]
 908:	ldp	x24, x23, [sp, #32]
 90c:	ldr	x25, [sp, #16]
 910:	ldp	x29, x30, [sp], #80
 914:	ret

0000000000000918 <LLVMTargetMachineEmitToFile>:
 918:	sub	sp, sp, #0xc0
 91c:	stp	x29, x30, [sp, #128]
 920:	str	x23, [sp, #144]
 924:	stp	x22, x21, [sp, #160]
 928:	stp	x20, x19, [sp, #176]
 92c:	add	x29, sp, #0x80
 930:	mov	x19, x4
 934:	mov	w20, w3
 938:	mov	x23, x2
 93c:	mov	x21, x1
 940:	mov	x22, x0
 944:	stur	wzr, [x29, #-16]
 948:	bl	0 <_ZNSt3_V215system_categoryEv>
 94c:	stur	x0, [x29, #-8]
 950:	cbz	x23, 964 <LLVMTargetMachineEmitToFile+0x4c>
 954:	mov	x0, x23
 958:	bl	0 <strlen>
 95c:	mov	x2, x0
 960:	b	968 <LLVMTargetMachineEmitToFile+0x50>
 964:	mov	x2, xzr
 968:	add	x0, sp, #0x28
 96c:	sub	x3, x29, #0x10
 970:	mov	x1, x23
 974:	mov	w4, wzr
 978:	bl	0 <_ZN4llvm14raw_fd_ostreamC1ENS_9StringRefERSt10error_codeNS_3sys2fs9OpenFlagsE>
 97c:	ldur	w1, [x29, #-16]
 980:	cbz	w1, 9c4 <LLVMTargetMachineEmitToFile+0xac>
 984:	ldur	x0, [x29, #-8]
 988:	add	x20, sp, #0x8
 98c:	ldr	x8, [x0]
 990:	ldr	x9, [x8, #32]
 994:	add	x8, sp, #0x8
 998:	blr	x9
 99c:	ldr	x0, [sp, #8]
 9a0:	bl	0 <strdup>
 9a4:	str	x0, [x19]
 9a8:	ldr	x0, [sp, #8]
 9ac:	add	x8, x20, #0x10
 9b0:	cmp	x0, x8
 9b4:	b.eq	9bc <LLVMTargetMachineEmitToFile+0xa4>  // b.none
 9b8:	bl	0 <_ZdlPv>
 9bc:	mov	w19, #0x1                   	// #1
 9c0:	b	a00 <LLVMTargetMachineEmitToFile+0xe8>
 9c4:	add	x2, sp, #0x28
 9c8:	mov	x0, x22
 9cc:	mov	x1, x21
 9d0:	mov	w3, w20
 9d4:	mov	x4, x19
 9d8:	bl	a24 <_ZL21LLVMTargetMachineEmitP23LLVMOpaqueTargetMachineP16LLVMOpaqueModuleRN4llvm17raw_pwrite_streamE19LLVMCodeGenFileTypePPc>
 9dc:	ldr	x8, [sp, #64]
 9e0:	ldr	x9, [sp, #48]
 9e4:	mov	w19, w0
 9e8:	cmp	x8, x9
 9ec:	b.eq	9f8 <LLVMTargetMachineEmitToFile+0xe0>  // b.none
 9f0:	add	x0, sp, #0x28
 9f4:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
 9f8:	cmp	w19, #0x0
 9fc:	cset	w19, ne  // ne = any
 a00:	add	x0, sp, #0x28
 a04:	bl	0 <_ZN4llvm14raw_fd_ostreamD1Ev>
 a08:	mov	w0, w19
 a0c:	ldp	x20, x19, [sp, #176]
 a10:	ldp	x22, x21, [sp, #160]
 a14:	ldr	x23, [sp, #144]
 a18:	ldp	x29, x30, [sp, #128]
 a1c:	add	sp, sp, #0xc0
 a20:	ret

0000000000000a24 <_ZL21LLVMTargetMachineEmitP23LLVMOpaqueTargetMachineP16LLVMOpaqueModuleRN4llvm17raw_pwrite_streamE19LLVMCodeGenFileTypePPc>:
 a24:	stp	x29, x30, [sp, #-96]!
 a28:	stp	x28, x27, [sp, #16]
 a2c:	stp	x26, x25, [sp, #32]
 a30:	stp	x24, x23, [sp, #48]
 a34:	stp	x22, x21, [sp, #64]
 a38:	stp	x20, x19, [sp, #80]
 a3c:	mov	x29, sp
 a40:	sub	sp, sp, #0x1f0
 a44:	mov	x22, x0
 a48:	sub	x0, x29, #0x18
 a4c:	str	x4, [sp]
 a50:	mov	w19, w3
 a54:	mov	x20, x2
 a58:	mov	x21, x1
 a5c:	bl	0 <_ZN4llvm6legacy11PassManagerC1Ev>
 a60:	adrp	x10, 0 <LLVMGetFirstTarget>
 a64:	adrp	x11, 0 <LLVMGetFirstTarget>
 a68:	sub	x8, x29, #0x38
 a6c:	add	x9, sp, #0x8
 a70:	ldr	d0, [x10]
 a74:	ldr	d1, [x11]
 a78:	add	x23, x8, #0x10
 a7c:	add	x8, x9, #0x30
 a80:	str	x8, [sp, #40]
 a84:	add	x8, x9, #0xf8
 a88:	add	x10, x9, #0x48
 a8c:	add	x11, x9, #0xd8
 a90:	str	x8, [sp, #240]
 a94:	add	x8, x9, #0x190
 a98:	add	x0, sp, #0x8
 a9c:	sturb	wzr, [x29, #-40]
 aa0:	strh	wzr, [sp, #16]
 aa4:	strh	wzr, [sp, #24]
 aa8:	strb	wzr, [sp, #224]
 aac:	add	x24, x9, #0x20
 ab0:	add	x25, x9, #0x38
 ab4:	add	x26, x9, #0xc8
 ab8:	add	x27, x9, #0xe8
 abc:	str	x10, [sp, #64]
 ac0:	add	x28, x9, #0x180
 ac4:	stp	x23, xzr, [x29, #-56]
 ac8:	stp	x11, xzr, [sp, #208]
 acc:	stp	xzr, x8, [sp, #384]
 ad0:	str	d0, [sp, #48]
 ad4:	str	d1, [sp, #72]
 ad8:	str	d0, [sp, #248]
 adc:	str	d0, [sp, #400]
 ae0:	bl	0 <_ZN4llvm10DataLayout5clearEv>
 ae4:	add	x1, x22, #0xd8
 ae8:	mov	x0, x26
 aec:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_>
 af0:	ldrb	w8, [x22, #16]
 af4:	add	x1, x22, #0x30
 af8:	mov	x0, x24
 afc:	strb	w8, [sp, #8]
 b00:	ldr	w8, [x22, #20]
 b04:	str	w8, [sp, #12]
 b08:	ldrh	w8, [x22, #24]
 b0c:	strh	w8, [sp, #16]
 b10:	ldrh	w8, [x22, #32]
 b14:	strh	w8, [sp, #24]
 b18:	ldr	w8, [x22, #28]
 b1c:	str	w8, [sp, #20]
 b20:	ldur	x8, [x22, #36]
 b24:	stur	x8, [sp, #28]
 b28:	bl	0 <LLVMGetFirstTarget>
 b2c:	add	x1, x22, #0x48
 b30:	mov	x0, x25
 b34:	bl	0 <LLVMGetFirstTarget>
 b38:	add	x1, x22, #0xf8
 b3c:	mov	x0, x27
 b40:	bl	0 <LLVMGetFirstTarget>
 b44:	add	x1, x22, #0x190
 b48:	mov	x0, x28
 b4c:	bl	0 <LLVMGetFirstTarget>
 b50:	add	x1, sp, #0x8
 b54:	mov	x0, x21
 b58:	bl	0 <_ZN4llvm6Module13setDataLayoutERKNS_10DataLayoutE>
 b5c:	add	x0, sp, #0x8
 b60:	bl	0 <_ZN4llvm10DataLayoutD1Ev>
 b64:	ldr	x8, [x22]
 b68:	cmp	w19, #0x0
 b6c:	cset	w4, ne  // ne = any
 b70:	sub	x1, x29, #0x18
 b74:	ldr	x8, [x8, #80]
 b78:	mov	w5, #0x1                   	// #1
 b7c:	mov	x0, x22
 b80:	mov	x2, x20
 b84:	mov	x3, xzr
 b88:	mov	x6, xzr
 b8c:	blr	x8
 b90:	tbz	w0, #0, bc8 <_ZL21LLVMTargetMachineEmitP23LLVMOpaqueTargetMachineP16LLVMOpaqueModuleRN4llvm17raw_pwrite_streamE19LLVMCodeGenFileTypePPc+0x1a4>
 b94:	ldur	x2, [x29, #-48]
 b98:	adrp	x3, 0 <LLVMGetFirstTarget>
 b9c:	add	x3, x3, #0x0
 ba0:	sub	x0, x29, #0x38
 ba4:	mov	w4, #0x2c                  	// #44
 ba8:	mov	x1, xzr
 bac:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
 bb0:	ldur	x0, [x29, #-56]
 bb4:	bl	0 <strdup>
 bb8:	ldr	x8, [sp]
 bbc:	mov	w19, #0x1                   	// #1
 bc0:	str	x0, [x8]
 bc4:	b	bf0 <_ZL21LLVMTargetMachineEmitP23LLVMOpaqueTargetMachineP16LLVMOpaqueModuleRN4llvm17raw_pwrite_streamE19LLVMCodeGenFileTypePPc+0x1cc>
 bc8:	sub	x0, x29, #0x18
 bcc:	mov	x1, x21
 bd0:	bl	0 <_ZN4llvm6legacy11PassManager3runERNS_6ModuleE>
 bd4:	ldr	x8, [x20, #24]
 bd8:	ldr	x9, [x20, #8]
 bdc:	cmp	x8, x9
 be0:	b.eq	bec <_ZL21LLVMTargetMachineEmitP23LLVMOpaqueTargetMachineP16LLVMOpaqueModuleRN4llvm17raw_pwrite_streamE19LLVMCodeGenFileTypePPc+0x1c8>  // b.none
 be4:	mov	x0, x20
 be8:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
 bec:	mov	w19, wzr
 bf0:	ldur	x0, [x29, #-56]
 bf4:	cmp	x0, x23
 bf8:	b.eq	c00 <_ZL21LLVMTargetMachineEmitP23LLVMOpaqueTargetMachineP16LLVMOpaqueModuleRN4llvm17raw_pwrite_streamE19LLVMCodeGenFileTypePPc+0x1dc>  // b.none
 bfc:	bl	0 <_ZdlPv>
 c00:	sub	x0, x29, #0x18
 c04:	bl	0 <_ZN4llvm6legacy11PassManagerD1Ev>
 c08:	mov	w0, w19
 c0c:	add	sp, sp, #0x1f0
 c10:	ldp	x20, x19, [sp, #80]
 c14:	ldp	x22, x21, [sp, #64]
 c18:	ldp	x24, x23, [sp, #48]
 c1c:	ldp	x26, x25, [sp, #32]
 c20:	ldp	x28, x27, [sp, #16]
 c24:	ldp	x29, x30, [sp], #96
 c28:	ret

0000000000000c2c <LLVMTargetMachineEmitToMemoryBuffer>:
 c2c:	sub	sp, sp, #0x80
 c30:	stp	x29, x30, [sp, #64]
 c34:	stp	x24, x23, [sp, #80]
 c38:	stp	x22, x21, [sp, #96]
 c3c:	stp	x20, x19, [sp, #112]
 c40:	add	x29, sp, #0x40
 c44:	stur	xzr, [x29, #-8]
 c48:	stp	xzr, xzr, [sp, #16]
 c4c:	adrp	x10, 0 <_ZTVN4llvm19raw_svector_ostreamE>
 c50:	ldr	x10, [x10]
 c54:	sub	x8, x29, #0x10
 c58:	mov	w9, #0x1                   	// #1
 c5c:	mov	x19, x3
 c60:	mov	w21, w2
 c64:	mov	x22, x1
 c68:	mov	x23, x0
 c6c:	str	w9, [sp, #32]
 c70:	add	x24, x8, #0x10
 c74:	add	x9, x10, #0x10
 c78:	mov	x0, sp
 c7c:	mov	x1, xzr
 c80:	mov	x2, xzr
 c84:	mov	w3, wzr
 c88:	mov	x20, x4
 c8c:	stur	x24, [x29, #-16]
 c90:	stp	x9, xzr, [sp]
 c94:	str	x8, [sp, #40]
 c98:	bl	0 <_ZN4llvm11raw_ostream16SetBufferAndModeEPcmNS0_10BufferKindE>
 c9c:	mov	x2, sp
 ca0:	mov	x0, x23
 ca4:	mov	x1, x22
 ca8:	mov	w3, w21
 cac:	mov	x4, x19
 cb0:	bl	a24 <_ZL21LLVMTargetMachineEmitP23LLVMOpaqueTargetMachineP16LLVMOpaqueModuleRN4llvm17raw_pwrite_streamE19LLVMCodeGenFileTypePPc>
 cb4:	ldr	x9, [sp, #40]
 cb8:	adrp	x2, 0 <LLVMGetFirstTarget>
 cbc:	cmp	w0, #0x0
 cc0:	add	x2, x2, #0x0
 cc4:	ldr	x8, [x9]
 cc8:	ldr	w1, [x9, #8]
 ccc:	cset	w19, ne  // ne = any
 cd0:	mov	x0, x8
 cd4:	bl	0 <LLVMCreateMemoryBufferWithMemoryRangeCopy>
 cd8:	str	x0, [x20]
 cdc:	mov	x0, sp
 ce0:	bl	0 <_ZN4llvm11raw_ostreamD2Ev>
 ce4:	ldur	x0, [x29, #-16]
 ce8:	cmp	x0, x24
 cec:	b.eq	cf4 <LLVMTargetMachineEmitToMemoryBuffer+0xc8>  // b.none
 cf0:	bl	0 <free>
 cf4:	mov	w0, w19
 cf8:	ldp	x20, x19, [sp, #112]
 cfc:	ldp	x22, x21, [sp, #96]
 d00:	ldp	x24, x23, [sp, #80]
 d04:	ldp	x29, x30, [sp, #64]
 d08:	add	sp, sp, #0x80
 d0c:	ret

0000000000000d10 <LLVMGetDefaultTargetTriple>:
 d10:	sub	sp, sp, #0x40
 d14:	stp	x29, x30, [sp, #32]
 d18:	str	x19, [sp, #48]
 d1c:	add	x29, sp, #0x20
 d20:	mov	x8, sp
 d24:	mov	x19, sp
 d28:	bl	0 <_ZN4llvm3sys22getDefaultTargetTripleB5cxx11Ev>
 d2c:	ldr	x0, [sp]
 d30:	bl	0 <strdup>
 d34:	ldr	x8, [sp]
 d38:	add	x9, x19, #0x10
 d3c:	mov	x19, x0
 d40:	cmp	x8, x9
 d44:	b.eq	d50 <LLVMGetDefaultTargetTriple+0x40>  // b.none
 d48:	mov	x0, x8
 d4c:	bl	0 <_ZdlPv>
 d50:	mov	x0, x19
 d54:	ldr	x19, [sp, #48]
 d58:	ldp	x29, x30, [sp, #32]
 d5c:	add	sp, sp, #0x40
 d60:	ret

0000000000000d64 <LLVMNormalizeTargetTriple>:
 d64:	sub	sp, sp, #0x40
 d68:	stp	x29, x30, [sp, #32]
 d6c:	stp	x20, x19, [sp, #48]
 d70:	add	x29, sp, #0x20
 d74:	mov	x19, x0
 d78:	cbz	x0, d8c <LLVMNormalizeTargetTriple+0x28>
 d7c:	mov	x0, x19
 d80:	bl	0 <strlen>
 d84:	mov	x1, x0
 d88:	b	d90 <LLVMNormalizeTargetTriple+0x2c>
 d8c:	mov	x1, xzr
 d90:	mov	x8, sp
 d94:	mov	x0, x19
 d98:	mov	x20, sp
 d9c:	bl	0 <_ZN4llvm6Triple9normalizeB5cxx11ENS_9StringRefE>
 da0:	ldr	x0, [sp]
 da4:	bl	0 <strdup>
 da8:	ldr	x8, [sp]
 dac:	add	x9, x20, #0x10
 db0:	mov	x19, x0
 db4:	cmp	x8, x9
 db8:	b.eq	dc4 <LLVMNormalizeTargetTriple+0x60>  // b.none
 dbc:	mov	x0, x8
 dc0:	bl	0 <_ZdlPv>
 dc4:	mov	x0, x19
 dc8:	ldp	x20, x19, [sp, #48]
 dcc:	ldp	x29, x30, [sp, #32]
 dd0:	add	sp, sp, #0x40
 dd4:	ret

0000000000000dd8 <LLVMGetHostCPUName>:
 dd8:	stp	x29, x30, [sp, #-16]!
 ddc:	mov	x29, sp
 de0:	bl	0 <_ZN4llvm3sys14getHostCPUNameEv>
 de4:	ldp	x29, x30, [sp], #16
 de8:	b	0 <strdup>

0000000000000dec <LLVMGetHostCPUFeatures>:
 dec:	sub	sp, sp, #0x90
 df0:	stp	x29, x30, [sp, #96]
 df4:	str	x21, [sp, #112]
 df8:	stp	x20, x19, [sp, #128]
 dfc:	add	x29, sp, #0x60
 e00:	adrp	x1, 0 <LLVMGetFirstTarget>
 e04:	add	x1, x1, #0x0
 e08:	sub	x0, x29, #0x18
 e0c:	mov	x2, xzr
 e10:	bl	0 <_ZN4llvm17SubtargetFeaturesC1ENS_9StringRefE>
 e14:	mov	x8, #0x1000000000          	// #68719476736
 e18:	add	x0, sp, #0x28
 e1c:	stp	xzr, xzr, [sp, #40]
 e20:	str	x8, [sp, #56]
 e24:	bl	0 <_ZN4llvm3sys18getHostCPUFeaturesERNS_9StringMapIbNS_15MallocAllocatorEEE>
 e28:	tbz	w0, #0, ea4 <LLVMGetHostCPUFeatures+0xb8>
 e2c:	ldr	w8, [sp, #48]
 e30:	ldr	x9, [sp, #40]
 e34:	cbz	w8, e60 <LLVMGetHostCPUFeatures+0x74>
 e38:	add	x10, x9, #0x8
 e3c:	mov	x19, x9
 e40:	b	e4c <LLVMGetHostCPUFeatures+0x60>
 e44:	mov	x19, x10
 e48:	add	x10, x10, #0x8
 e4c:	ldur	x11, [x10, #-8]
 e50:	cbz	x11, e44 <LLVMGetHostCPUFeatures+0x58>
 e54:	cmn	x11, #0x8
 e58:	b.eq	e44 <LLVMGetHostCPUFeatures+0x58>  // b.none
 e5c:	b	e64 <LLVMGetHostCPUFeatures+0x78>
 e60:	mov	x19, x9
 e64:	add	x20, x9, x8, lsl #3
 e68:	cmp	x20, x19
 e6c:	b.eq	ea4 <LLVMGetHostCPUFeatures+0xb8>  // b.none
 e70:	ldr	x8, [x19], #8
 e74:	sub	x0, x29, #0x18
 e78:	ldr	x2, [x8]
 e7c:	ldrb	w3, [x8, #8]
 e80:	add	x1, x8, #0x10
 e84:	bl	0 <_ZN4llvm17SubtargetFeatures10AddFeatureENS_9StringRefEb>
 e88:	b	e90 <LLVMGetHostCPUFeatures+0xa4>
 e8c:	add	x19, x19, #0x8
 e90:	ldr	x8, [x19]
 e94:	cbz	x8, e8c <LLVMGetHostCPUFeatures+0xa0>
 e98:	cmn	x8, #0x8
 e9c:	b.eq	e8c <LLVMGetHostCPUFeatures+0xa0>  // b.none
 ea0:	b	e68 <LLVMGetHostCPUFeatures+0x7c>
 ea4:	add	x8, sp, #0x8
 ea8:	sub	x0, x29, #0x18
 eac:	add	x19, sp, #0x8
 eb0:	bl	0 <_ZNK4llvm17SubtargetFeatures9getStringB5cxx11Ev>
 eb4:	ldr	x0, [sp, #8]
 eb8:	bl	0 <strdup>
 ebc:	ldr	x8, [sp, #8]
 ec0:	add	x9, x19, #0x10
 ec4:	mov	x19, x0
 ec8:	cmp	x8, x9
 ecc:	b.eq	ed8 <LLVMGetHostCPUFeatures+0xec>  // b.none
 ed0:	mov	x0, x8
 ed4:	bl	0 <_ZdlPv>
 ed8:	ldr	w8, [sp, #52]
 edc:	cbz	w8, f1c <LLVMGetHostCPUFeatures+0x130>
 ee0:	ldr	w8, [sp, #48]
 ee4:	cbz	w8, f1c <LLVMGetHostCPUFeatures+0x130>
 ee8:	mov	x20, xzr
 eec:	lsl	x21, x8, #3
 ef0:	b	f00 <LLVMGetHostCPUFeatures+0x114>
 ef4:	add	x20, x20, #0x8
 ef8:	cmp	x21, x20
 efc:	b.eq	f1c <LLVMGetHostCPUFeatures+0x130>  // b.none
 f00:	ldr	x8, [sp, #40]
 f04:	ldr	x0, [x8, x20]
 f08:	cmn	x0, #0x8
 f0c:	ccmp	x0, #0x0, #0x4, ne  // ne = any
 f10:	b.eq	ef4 <LLVMGetHostCPUFeatures+0x108>  // b.none
 f14:	bl	0 <free>
 f18:	b	ef4 <LLVMGetHostCPUFeatures+0x108>
 f1c:	ldr	x0, [sp, #40]
 f20:	bl	0 <free>
 f24:	ldp	x20, x21, [x29, #-24]
 f28:	cmp	x20, x21
 f2c:	b.ne	f60 <LLVMGetHostCPUFeatures+0x174>  // b.any
 f30:	cbz	x20, f3c <LLVMGetHostCPUFeatures+0x150>
 f34:	mov	x0, x20
 f38:	bl	0 <_ZdlPv>
 f3c:	mov	x0, x19
 f40:	ldp	x20, x19, [sp, #128]
 f44:	ldr	x21, [sp, #112]
 f48:	ldp	x29, x30, [sp, #96]
 f4c:	add	sp, sp, #0x90
 f50:	ret
 f54:	add	x20, x20, #0x10
 f58:	cmp	x20, x21
 f5c:	b.eq	f74 <LLVMGetHostCPUFeatures+0x188>  // b.none
 f60:	ldr	x0, [x20], #16
 f64:	cmp	x0, x20
 f68:	b.eq	f54 <LLVMGetHostCPUFeatures+0x168>  // b.none
 f6c:	bl	0 <_ZdlPv>
 f70:	b	f54 <LLVMGetHostCPUFeatures+0x168>
 f74:	ldur	x20, [x29, #-24]
 f78:	cbnz	x20, f34 <LLVMGetHostCPUFeatures+0x148>
 f7c:	b	f3c <LLVMGetHostCPUFeatures+0x150>

0000000000000f80 <LLVMAddAnalysisPasses>:
 f80:	sub	sp, sp, #0x40
 f84:	stp	x29, x30, [sp, #32]
 f88:	str	x19, [sp, #48]
 f8c:	add	x29, sp, #0x20
 f90:	mov	x8, sp
 f94:	mov	x19, x1
 f98:	bl	0 <_ZN4llvm13TargetMachine19getTargetIRAnalysisEv>
 f9c:	mov	x0, sp
 fa0:	bl	0 <_ZN4llvm36createTargetTransformInfoWrapperPassENS_16TargetIRAnalysisE>
 fa4:	ldr	x8, [x19]
 fa8:	mov	x1, x0
 fac:	mov	x0, x19
 fb0:	ldr	x8, [x8, #16]
 fb4:	blr	x8
 fb8:	ldr	x8, [sp, #16]
 fbc:	cbz	x8, fd0 <LLVMAddAnalysisPasses+0x50>
 fc0:	mov	x0, sp
 fc4:	mov	x1, sp
 fc8:	mov	w2, #0x3                   	// #3
 fcc:	blr	x8
 fd0:	ldr	x19, [sp, #48]
 fd4:	ldp	x29, x30, [sp, #32]
 fd8:	add	sp, sp, #0x40
 fdc:	ret

Disassembly of section .text._ZN4llvm15SmallVectorImplIhEaSERKS1_:

0000000000000000 <_ZN4llvm15SmallVectorImplIhEaSERKS1_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x19, x0
  14:	cmp	x0, x1
  18:	b.eq	c4 <_ZN4llvm15SmallVectorImplIhEaSERKS1_+0xc4>  // b.none
  1c:	ldr	w20, [x1, #8]
  20:	ldr	w22, [x19, #8]
  24:	mov	x21, x1
  28:	cmp	w22, w20
  2c:	b.cs	58 <_ZN4llvm15SmallVectorImplIhEaSERKS1_+0x58>  // b.hs, b.nlast
  30:	ldr	w8, [x19, #12]
  34:	cmp	w8, w20
  38:	b.cs	70 <_ZN4llvm15SmallVectorImplIhEaSERKS1_+0x70>  // b.hs, b.nlast
  3c:	add	x1, x19, #0x10
  40:	mov	w3, #0x1                   	// #1
  44:	mov	x0, x19
  48:	mov	x2, x20
  4c:	str	wzr, [x19, #8]
  50:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  54:	b	88 <_ZN4llvm15SmallVectorImplIhEaSERKS1_+0x88>
  58:	cbz	w20, b4 <_ZN4llvm15SmallVectorImplIhEaSERKS1_+0xb4>
  5c:	ldr	x1, [x21]
  60:	ldr	x0, [x19]
  64:	mov	x2, x20
  68:	bl	0 <memmove>
  6c:	b	b4 <_ZN4llvm15SmallVectorImplIhEaSERKS1_+0xb4>
  70:	cbz	w22, 88 <_ZN4llvm15SmallVectorImplIhEaSERKS1_+0x88>
  74:	ldr	x1, [x21]
  78:	ldr	x0, [x19]
  7c:	mov	x2, x22
  80:	bl	0 <memmove>
  84:	b	8c <_ZN4llvm15SmallVectorImplIhEaSERKS1_+0x8c>
  88:	mov	x22, xzr
  8c:	ldr	w8, [x21, #8]
  90:	cmp	x22, x8
  94:	b.eq	b4 <_ZN4llvm15SmallVectorImplIhEaSERKS1_+0xb4>  // b.none
  98:	ldr	x9, [x21]
  9c:	ldr	x10, [x19]
  a0:	add	x1, x9, x22
  a4:	add	x8, x9, x8
  a8:	add	x0, x10, x22
  ac:	sub	x2, x8, x1
  b0:	bl	0 <memcpy>
  b4:	ldr	w8, [x19, #12]
  b8:	cmp	w8, w20
  bc:	b.cc	d8 <_ZN4llvm15SmallVectorImplIhEaSERKS1_+0xd8>  // b.lo, b.ul, b.last
  c0:	str	w20, [x19, #8]
  c4:	mov	x0, x19
  c8:	ldp	x20, x19, [sp, #32]
  cc:	ldp	x22, x21, [sp, #16]
  d0:	ldp	x29, x30, [sp], #48
  d4:	ret
  d8:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplIhEaSERKS1_>
  dc:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplIhEaSERKS1_>
  e0:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplIhEaSERKS1_>
  e4:	add	x0, x0, #0x0
  e8:	add	x1, x1, #0x0
  ec:	add	x3, x3, #0x0
  f0:	mov	w2, #0x43                  	// #67
  f4:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm15SmallVectorImplINS_15LayoutAlignElemEEaSERKS2_:

0000000000000000 <_ZN4llvm15SmallVectorImplINS_15LayoutAlignElemEEaSERKS2_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x19, x0
  14:	cmp	x0, x1
  18:	b.eq	c4 <_ZN4llvm15SmallVectorImplINS_15LayoutAlignElemEEaSERKS2_+0xc4>  // b.none
  1c:	ldr	w20, [x1, #8]
  20:	ldr	w22, [x19, #8]
  24:	mov	x21, x1
  28:	cmp	w22, w20
  2c:	b.cs	58 <_ZN4llvm15SmallVectorImplINS_15LayoutAlignElemEEaSERKS2_+0x58>  // b.hs, b.nlast
  30:	ldr	w8, [x19, #12]
  34:	cmp	w8, w20
  38:	b.cs	70 <_ZN4llvm15SmallVectorImplINS_15LayoutAlignElemEEaSERKS2_+0x70>  // b.hs, b.nlast
  3c:	add	x1, x19, #0x10
  40:	mov	w3, #0x8                   	// #8
  44:	mov	x0, x19
  48:	mov	x2, x20
  4c:	str	wzr, [x19, #8]
  50:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  54:	b	88 <_ZN4llvm15SmallVectorImplINS_15LayoutAlignElemEEaSERKS2_+0x88>
  58:	cbz	w20, b4 <_ZN4llvm15SmallVectorImplINS_15LayoutAlignElemEEaSERKS2_+0xb4>
  5c:	ldr	x1, [x21]
  60:	ldr	x0, [x19]
  64:	lsl	x2, x20, #3
  68:	bl	0 <memmove>
  6c:	b	b4 <_ZN4llvm15SmallVectorImplINS_15LayoutAlignElemEEaSERKS2_+0xb4>
  70:	cbz	w22, 88 <_ZN4llvm15SmallVectorImplINS_15LayoutAlignElemEEaSERKS2_+0x88>
  74:	ldr	x1, [x21]
  78:	ldr	x0, [x19]
  7c:	lsl	x2, x22, #3
  80:	bl	0 <memmove>
  84:	b	8c <_ZN4llvm15SmallVectorImplINS_15LayoutAlignElemEEaSERKS2_+0x8c>
  88:	mov	x22, xzr
  8c:	ldr	w8, [x21, #8]
  90:	cmp	x22, x8
  94:	b.eq	b4 <_ZN4llvm15SmallVectorImplINS_15LayoutAlignElemEEaSERKS2_+0xb4>  // b.none
  98:	ldr	x9, [x21]
  9c:	ldr	x10, [x19]
  a0:	add	x1, x9, x22, lsl #3
  a4:	add	x8, x9, x8, lsl #3
  a8:	add	x0, x10, x22, lsl #3
  ac:	sub	x2, x8, x1
  b0:	bl	0 <memcpy>
  b4:	ldr	w8, [x19, #12]
  b8:	cmp	w8, w20
  bc:	b.cc	d8 <_ZN4llvm15SmallVectorImplINS_15LayoutAlignElemEEaSERKS2_+0xd8>  // b.lo, b.ul, b.last
  c0:	str	w20, [x19, #8]
  c4:	mov	x0, x19
  c8:	ldp	x20, x19, [sp, #32]
  cc:	ldp	x22, x21, [sp, #16]
  d0:	ldp	x29, x30, [sp], #48
  d4:	ret
  d8:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplINS_15LayoutAlignElemEEaSERKS2_>
  dc:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplINS_15LayoutAlignElemEEaSERKS2_>
  e0:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplINS_15LayoutAlignElemEEaSERKS2_>
  e4:	add	x0, x0, #0x0
  e8:	add	x1, x1, #0x0
  ec:	add	x3, x3, #0x0
  f0:	mov	w2, #0x43                  	// #67
  f4:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm15SmallVectorImplINS_16PointerAlignElemEEaSERKS2_:

0000000000000000 <_ZN4llvm15SmallVectorImplINS_16PointerAlignElemEEaSERKS2_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x19, x0
  14:	cmp	x0, x1
  18:	b.eq	c4 <_ZN4llvm15SmallVectorImplINS_16PointerAlignElemEEaSERKS2_+0xc4>  // b.none
  1c:	ldr	w20, [x1, #8]
  20:	ldr	w22, [x19, #8]
  24:	mov	x21, x1
  28:	cmp	w22, w20
  2c:	b.cs	58 <_ZN4llvm15SmallVectorImplINS_16PointerAlignElemEEaSERKS2_+0x58>  // b.hs, b.nlast
  30:	ldr	w8, [x19, #12]
  34:	cmp	w8, w20
  38:	b.cs	70 <_ZN4llvm15SmallVectorImplINS_16PointerAlignElemEEaSERKS2_+0x70>  // b.hs, b.nlast
  3c:	add	x1, x19, #0x10
  40:	mov	w3, #0x10                  	// #16
  44:	mov	x0, x19
  48:	mov	x2, x20
  4c:	str	wzr, [x19, #8]
  50:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  54:	b	88 <_ZN4llvm15SmallVectorImplINS_16PointerAlignElemEEaSERKS2_+0x88>
  58:	cbz	w20, b4 <_ZN4llvm15SmallVectorImplINS_16PointerAlignElemEEaSERKS2_+0xb4>
  5c:	ldr	x1, [x21]
  60:	ldr	x0, [x19]
  64:	lsl	x2, x20, #4
  68:	bl	0 <memmove>
  6c:	b	b4 <_ZN4llvm15SmallVectorImplINS_16PointerAlignElemEEaSERKS2_+0xb4>
  70:	cbz	w22, 88 <_ZN4llvm15SmallVectorImplINS_16PointerAlignElemEEaSERKS2_+0x88>
  74:	ldr	x1, [x21]
  78:	ldr	x0, [x19]
  7c:	lsl	x2, x22, #4
  80:	bl	0 <memmove>
  84:	b	8c <_ZN4llvm15SmallVectorImplINS_16PointerAlignElemEEaSERKS2_+0x8c>
  88:	mov	x22, xzr
  8c:	ldr	w8, [x21, #8]
  90:	cmp	x22, x8
  94:	b.eq	b4 <_ZN4llvm15SmallVectorImplINS_16PointerAlignElemEEaSERKS2_+0xb4>  // b.none
  98:	ldr	x9, [x21]
  9c:	ldr	x10, [x19]
  a0:	add	x1, x9, x22, lsl #4
  a4:	add	x8, x9, x8, lsl #4
  a8:	add	x0, x10, x22, lsl #4
  ac:	sub	x2, x8, x1
  b0:	bl	0 <memcpy>
  b4:	ldr	w8, [x19, #12]
  b8:	cmp	w8, w20
  bc:	b.cc	d8 <_ZN4llvm15SmallVectorImplINS_16PointerAlignElemEEaSERKS2_+0xd8>  // b.lo, b.ul, b.last
  c0:	str	w20, [x19, #8]
  c4:	mov	x0, x19
  c8:	ldp	x20, x19, [sp, #32]
  cc:	ldp	x22, x21, [sp, #16]
  d0:	ldp	x29, x30, [sp], #48
  d4:	ret
  d8:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplINS_16PointerAlignElemEEaSERKS2_>
  dc:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplINS_16PointerAlignElemEEaSERKS2_>
  e0:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplINS_16PointerAlignElemEEaSERKS2_>
  e4:	add	x0, x0, #0x0
  e8:	add	x1, x1, #0x0
  ec:	add	x3, x3, #0x0
  f0:	mov	w2, #0x43                  	// #67
  f4:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm15SmallVectorImplIjEaSERKS1_:

0000000000000000 <_ZN4llvm15SmallVectorImplIjEaSERKS1_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x19, x0
  14:	cmp	x0, x1
  18:	b.eq	c4 <_ZN4llvm15SmallVectorImplIjEaSERKS1_+0xc4>  // b.none
  1c:	ldr	w20, [x1, #8]
  20:	ldr	w22, [x19, #8]
  24:	mov	x21, x1
  28:	cmp	w22, w20
  2c:	b.cs	58 <_ZN4llvm15SmallVectorImplIjEaSERKS1_+0x58>  // b.hs, b.nlast
  30:	ldr	w8, [x19, #12]
  34:	cmp	w8, w20
  38:	b.cs	70 <_ZN4llvm15SmallVectorImplIjEaSERKS1_+0x70>  // b.hs, b.nlast
  3c:	add	x1, x19, #0x10
  40:	mov	w3, #0x4                   	// #4
  44:	mov	x0, x19
  48:	mov	x2, x20
  4c:	str	wzr, [x19, #8]
  50:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  54:	b	88 <_ZN4llvm15SmallVectorImplIjEaSERKS1_+0x88>
  58:	cbz	w20, b4 <_ZN4llvm15SmallVectorImplIjEaSERKS1_+0xb4>
  5c:	ldr	x1, [x21]
  60:	ldr	x0, [x19]
  64:	lsl	x2, x20, #2
  68:	bl	0 <memmove>
  6c:	b	b4 <_ZN4llvm15SmallVectorImplIjEaSERKS1_+0xb4>
  70:	cbz	w22, 88 <_ZN4llvm15SmallVectorImplIjEaSERKS1_+0x88>
  74:	ldr	x1, [x21]
  78:	ldr	x0, [x19]
  7c:	lsl	x2, x22, #2
  80:	bl	0 <memmove>
  84:	b	8c <_ZN4llvm15SmallVectorImplIjEaSERKS1_+0x8c>
  88:	mov	x22, xzr
  8c:	ldr	w8, [x21, #8]
  90:	cmp	x22, x8
  94:	b.eq	b4 <_ZN4llvm15SmallVectorImplIjEaSERKS1_+0xb4>  // b.none
  98:	ldr	x9, [x21]
  9c:	ldr	x10, [x19]
  a0:	add	x1, x9, x22, lsl #2
  a4:	add	x8, x9, x8, lsl #2
  a8:	add	x0, x10, x22, lsl #2
  ac:	sub	x2, x8, x1
  b0:	bl	0 <memcpy>
  b4:	ldr	w8, [x19, #12]
  b8:	cmp	w8, w20
  bc:	b.cc	d8 <_ZN4llvm15SmallVectorImplIjEaSERKS1_+0xd8>  // b.lo, b.ul, b.last
  c0:	str	w20, [x19, #8]
  c4:	mov	x0, x19
  c8:	ldp	x20, x19, [sp, #32]
  cc:	ldp	x22, x21, [sp, #16]
  d0:	ldp	x29, x30, [sp], #48
  d4:	ret
  d8:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplIjEaSERKS1_>
  dc:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplIjEaSERKS1_>
  e0:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplIjEaSERKS1_>
  e4:	add	x0, x0, #0x0
  e8:	add	x1, x1, #0x0
  ec:	add	x3, x3, #0x0
  f0:	mov	w2, #0x43                  	// #67
  f4:	bl	0 <__assert_fail>
