
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//rwarray.so_clang_-Os:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000000800 <.init>:
 800:	stp	x29, x30, [sp, #-16]!
 804:	mov	x29, sp
 808:	bl	910 <fprintf@plt+0x10>
 80c:	ldp	x29, x30, [sp], #16
 810:	ret

Disassembly of section .plt:

0000000000000820 <memcpy@plt-0x20>:
 820:	stp	x16, x30, [sp, #-16]!
 824:	adrp	x16, 11000 <dl_load@@Base+0x1061c>
 828:	ldr	x17, [x16, #4088]
 82c:	add	x16, x16, #0xff8
 830:	br	x17
 834:	nop
 838:	nop
 83c:	nop

0000000000000840 <memcpy@plt>:
 840:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 844:	ldr	x17, [x16]
 848:	add	x16, x16, #0x0
 84c:	br	x17

0000000000000850 <fwrite_unlocked@plt>:
 850:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 854:	ldr	x17, [x16, #8]
 858:	add	x16, x16, #0x8
 85c:	br	x17

0000000000000860 <exit@plt>:
 860:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 864:	ldr	x17, [x16, #16]
 868:	add	x16, x16, #0x10
 86c:	br	x17

0000000000000870 <__cxa_finalize@plt>:
 870:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 874:	ldr	x17, [x16, #24]
 878:	add	x16, x16, #0x18
 87c:	br	x17

0000000000000880 <fclose@plt>:
 880:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 884:	ldr	x17, [x16, #32]
 888:	add	x16, x16, #0x20
 88c:	br	x17

0000000000000890 <fopen@plt>:
 890:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 894:	ldr	x17, [x16, #40]
 898:	add	x16, x16, #0x28
 89c:	br	x17

00000000000008a0 <__gmon_start__@plt>:
 8a0:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 8a4:	ldr	x17, [x16, #48]
 8a8:	add	x16, x16, #0x30
 8ac:	br	x17

00000000000008b0 <fread@plt>:
 8b0:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 8b4:	ldr	x17, [x16, #56]
 8b8:	add	x16, x16, #0x38
 8bc:	br	x17

00000000000008c0 <fwrite@plt>:
 8c0:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 8c4:	ldr	x17, [x16, #64]
 8c8:	add	x16, x16, #0x40
 8cc:	br	x17

00000000000008d0 <dcgettext@plt>:
 8d0:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 8d4:	ldr	x17, [x16, #72]
 8d8:	add	x16, x16, #0x48
 8dc:	br	x17

00000000000008e0 <__errno_location@plt>:
 8e0:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 8e4:	ldr	x17, [x16, #80]
 8e8:	add	x16, x16, #0x50
 8ec:	br	x17

00000000000008f0 <unlink@plt>:
 8f0:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 8f4:	ldr	x17, [x16, #88]
 8f8:	add	x16, x16, #0x58
 8fc:	br	x17

0000000000000900 <fprintf@plt>:
 900:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 904:	ldr	x17, [x16, #96]
 908:	add	x16, x16, #0x60
 90c:	br	x17

Disassembly of section .text:

0000000000000910 <dl_load@@Base-0xd4>:
     910:	adrp	x0, 11000 <dl_load@@Base+0x1061c>
     914:	ldr	x0, [x0, #4056]
     918:	cbz	x0, 920 <fprintf@plt+0x20>
     91c:	b	8a0 <__gmon_start__@plt>
     920:	ret
     924:	nop
     928:	adrp	x0, 12000 <dl_load@@Base+0x1161c>
     92c:	add	x0, x0, #0xd0
     930:	adrp	x1, 12000 <dl_load@@Base+0x1161c>
     934:	add	x1, x1, #0xd0
     938:	cmp	x1, x0
     93c:	b.eq	954 <fprintf@plt+0x54>  // b.none
     940:	adrp	x1, 11000 <dl_load@@Base+0x1061c>
     944:	ldr	x1, [x1, #4032]
     948:	cbz	x1, 954 <fprintf@plt+0x54>
     94c:	mov	x16, x1
     950:	br	x16
     954:	ret
     958:	adrp	x0, 12000 <dl_load@@Base+0x1161c>
     95c:	add	x0, x0, #0xd0
     960:	adrp	x1, 12000 <dl_load@@Base+0x1161c>
     964:	add	x1, x1, #0xd0
     968:	sub	x1, x1, x0
     96c:	lsr	x2, x1, #63
     970:	add	x1, x2, x1, asr #3
     974:	cmp	xzr, x1, asr #1
     978:	asr	x1, x1, #1
     97c:	b.eq	994 <fprintf@plt+0x94>  // b.none
     980:	adrp	x2, 11000 <dl_load@@Base+0x1061c>
     984:	ldr	x2, [x2, #4064]
     988:	cbz	x2, 994 <fprintf@plt+0x94>
     98c:	mov	x16, x2
     990:	br	x16
     994:	ret
     998:	stp	x29, x30, [sp, #-32]!
     99c:	mov	x29, sp
     9a0:	str	x19, [sp, #16]
     9a4:	adrp	x19, 12000 <dl_load@@Base+0x1161c>
     9a8:	ldrb	w0, [x19, #208]
     9ac:	cbnz	w0, 9d4 <fprintf@plt+0xd4>
     9b0:	adrp	x0, 11000 <dl_load@@Base+0x1061c>
     9b4:	ldr	x0, [x0, #4040]
     9b8:	cbz	x0, 9c8 <fprintf@plt+0xc8>
     9bc:	adrp	x0, 12000 <dl_load@@Base+0x1161c>
     9c0:	ldr	x0, [x0, #104]
     9c4:	bl	870 <__cxa_finalize@plt>
     9c8:	bl	928 <fprintf@plt+0x28>
     9cc:	mov	w0, #0x1                   	// #1
     9d0:	strb	w0, [x19, #208]
     9d4:	ldr	x19, [sp, #16]
     9d8:	ldp	x29, x30, [sp], #32
     9dc:	ret
     9e0:	b	958 <fprintf@plt+0x58>

00000000000009e4 <dl_load@@Base>:
     9e4:	stp	x29, x30, [sp, #-96]!
     9e8:	stp	x24, x23, [sp, #48]
     9ec:	stp	x22, x21, [sp, #64]
     9f0:	adrp	x22, 12000 <dl_load@@Base+0x1161c>
     9f4:	adrp	x23, 12000 <dl_load@@Base+0x1161c>
     9f8:	stp	x26, x25, [sp, #32]
     9fc:	stp	x20, x19, [sp, #80]
     a00:	str	x0, [x22, #216]
     a04:	str	x1, [x23, #224]
     a08:	ldr	w8, [x0]
     a0c:	str	x27, [sp, #16]
     a10:	mov	x29, sp
     a14:	cmp	w8, #0x2
     a18:	b.ne	ad4 <dl_load@@Base+0xf0>  // b.any
     a1c:	ldr	w8, [x0, #4]
     a20:	tbnz	w8, #31, ad4 <dl_load@@Base+0xf0>
     a24:	adrp	x26, 12000 <dl_load@@Base+0x1161c>
     a28:	adrp	x19, 1000 <dl_load@@Base+0x61c>
     a2c:	adrp	x20, 1000 <dl_load@@Base+0x61c>
     a30:	mov	w24, wzr
     a34:	mov	x8, xzr
     a38:	mov	w25, #0x30                  	// #48
     a3c:	add	x26, x26, #0x70
     a40:	add	x19, x19, #0x743
     a44:	add	x20, x20, #0x777
     a48:	madd	x21, x8, x25, x26
     a4c:	mov	x27, x8
     a50:	ldr	x8, [x21]
     a54:	cbz	x8, a98 <dl_load@@Base+0xb4>
     a58:	ldr	x8, [x22, #216]
     a5c:	ldr	x0, [x23, #224]
     a60:	mov	x1, x19
     a64:	mov	x2, x21
     a68:	ldr	x8, [x8, #48]
     a6c:	blr	x8
     a70:	cbnz	w0, a90 <dl_load@@Base+0xac>
     a74:	ldr	x8, [x22, #216]
     a78:	ldr	x0, [x23, #224]
     a7c:	ldr	x2, [x21]
     a80:	mov	x1, x20
     a84:	ldr	x8, [x8, #104]
     a88:	blr	x8
     a8c:	add	w24, w24, #0x1
     a90:	mov	w8, #0x1                   	// #1
     a94:	cbz	x27, a48 <dl_load@@Base+0x64>
     a98:	ldr	x8, [x22, #216]
     a9c:	ldr	x0, [x23, #224]
     aa0:	adrp	x1, 1000 <dl_load@@Base+0x61c>
     aa4:	add	x1, x1, #0x976
     aa8:	ldr	x8, [x8, #88]
     aac:	blr	x8
     ab0:	cmp	w24, #0x0
     ab4:	ldp	x20, x19, [sp, #80]
     ab8:	ldp	x22, x21, [sp, #64]
     abc:	ldp	x24, x23, [sp, #48]
     ac0:	ldp	x26, x25, [sp, #32]
     ac4:	ldr	x27, [sp, #16]
     ac8:	cset	w0, eq  // eq = none
     acc:	ldp	x29, x30, [sp], #96
     ad0:	ret
     ad4:	adrp	x19, 11000 <dl_load@@Base+0x1061c>
     ad8:	ldr	x19, [x19, #4048]
     adc:	adrp	x0, 1000 <dl_load@@Base+0x61c>
     ae0:	add	x0, x0, #0x71e
     ae4:	mov	w1, #0x25                  	// #37
     ae8:	ldr	x3, [x19]
     aec:	mov	w2, #0x1                   	// #1
     af0:	bl	8c0 <fwrite@plt>
     af4:	ldr	x8, [x22, #216]
     af8:	ldr	x0, [x19]
     afc:	adrp	x1, 1000 <dl_load@@Base+0x61c>
     b00:	add	x1, x1, #0x744
     b04:	ldp	w4, w5, [x8]
     b08:	mov	w2, #0x2                   	// #2
     b0c:	mov	w3, wzr
     b10:	bl	900 <fprintf@plt>
     b14:	mov	w0, #0x1                   	// #1
     b18:	bl	860 <exit@plt>
     b1c:	sub	sp, sp, #0x80
     b20:	stp	x29, x30, [sp, #64]
     b24:	stp	x20, x19, [sp, #112]
     b28:	add	x29, sp, #0x40
     b2c:	mov	x19, x1
     b30:	mov	w8, #0x3                   	// #3
     b34:	mov	w9, #0x1                   	// #1
     b38:	cmp	w0, #0x2
     b3c:	str	x23, [sp, #80]
     b40:	stp	x22, x21, [sp, #96]
     b44:	stp	w9, w8, [x29, #24]
     b48:	str	w9, [x1]
     b4c:	str	xzr, [x1, #8]
     b50:	str	wzr, [x1, #16]
     b54:	b.lt	cc4 <dl_load@@Base+0x2e0>  // b.tstop
     b58:	adrp	x21, 12000 <dl_load@@Base+0x1161c>
     b5c:	ldr	x8, [x21, #216]
     b60:	adrp	x22, 12000 <dl_load@@Base+0x1161c>
     b64:	ldr	x0, [x22, #224]
     b68:	add	x3, sp, #0x20
     b6c:	ldr	x8, [x8, #152]
     b70:	mov	w2, #0x2                   	// #2
     b74:	mov	x1, xzr
     b78:	blr	x8
     b7c:	cbz	w0, c48 <dl_load@@Base+0x264>
     b80:	ldr	x8, [x21, #216]
     b84:	ldr	x0, [x22, #224]
     b88:	mov	x3, sp
     b8c:	mov	w1, #0x1                   	// #1
     b90:	ldr	x8, [x8, #152]
     b94:	mov	w2, #0x5                   	// #5
     b98:	blr	x8
     b9c:	cbz	w0, c5c <dl_load@@Base+0x278>
     ba0:	ldr	x0, [sp, #40]
     ba4:	adrp	x1, 1000 <dl_load@@Base+0x61c>
     ba8:	add	x1, x1, #0x7ec
     bac:	bl	890 <fopen@plt>
     bb0:	mov	x20, x0
     bb4:	cbz	x0, c98 <dl_load@@Base+0x2b4>
     bb8:	adrp	x0, 1000 <dl_load@@Base+0x61c>
     bbc:	add	x0, x0, #0x7ef
     bc0:	mov	w1, #0x1                   	// #1
     bc4:	mov	w2, #0x8                   	// #8
     bc8:	mov	x3, x20
     bcc:	bl	850 <fwrite_unlocked@plt>
     bd0:	cmp	x0, #0x8
     bd4:	b.ne	c98 <dl_load@@Base+0x2b4>  // b.any
     bd8:	mov	w8, #0x3000000             	// #50331648
     bdc:	add	x0, x29, #0x1c
     be0:	mov	w1, #0x1                   	// #1
     be4:	mov	w2, #0x4                   	// #4
     be8:	mov	x3, x20
     bec:	str	w8, [x29, #28]
     bf0:	bl	850 <fwrite_unlocked@plt>
     bf4:	cmp	x0, #0x4
     bf8:	b.ne	c98 <dl_load@@Base+0x2b4>  // b.any
     bfc:	mov	w8, #0x1000000             	// #16777216
     c00:	add	x0, x29, #0x18
     c04:	mov	w1, #0x1                   	// #1
     c08:	mov	w2, #0x4                   	// #4
     c0c:	mov	x3, x20
     c10:	str	w8, [x29, #24]
     c14:	bl	850 <fwrite_unlocked@plt>
     c18:	cmp	x0, #0x4
     c1c:	b.ne	c98 <dl_load@@Base+0x2b4>  // b.any
     c20:	ldr	x1, [sp, #8]
     c24:	mov	x0, x20
     c28:	bl	f44 <dl_load@@Base+0x560>
     c2c:	cbz	w0, c98 <dl_load@@Base+0x2b4>
     c30:	mov	w8, #0x1                   	// #1
     c34:	mov	x9, #0x3ff0000000000000    	// #4607182418800017408
     c38:	str	w8, [x19]
     c3c:	str	x9, [x19, #8]
     c40:	str	wzr, [x19, #16]
     c44:	b	cbc <dl_load@@Base+0x2d8>
     c48:	adrp	x8, 11000 <dl_load@@Base+0x1061c>
     c4c:	ldr	x8, [x8, #4048]
     c50:	adrp	x1, 1000 <dl_load@@Base+0x61c>
     c54:	add	x1, x1, #0x79e
     c58:	b	c6c <dl_load@@Base+0x288>
     c5c:	adrp	x8, 11000 <dl_load@@Base+0x1061c>
     c60:	ldr	x8, [x8, #4048]
     c64:	adrp	x1, 1000 <dl_load@@Base+0x61c>
     c68:	add	x1, x1, #0x7c5
     c6c:	ldr	x20, [x8]
     c70:	mov	w2, #0x5                   	// #5
     c74:	mov	x0, xzr
     c78:	bl	8d0 <dcgettext@plt>
     c7c:	mov	x1, x0
     c80:	mov	x0, x20
     c84:	bl	900 <fprintf@plt>
     c88:	bl	8e0 <__errno_location@plt>
     c8c:	mov	x20, xzr
     c90:	mov	w8, #0x16                  	// #22
     c94:	str	w8, [x0]
     c98:	ldr	x8, [x21, #216]
     c9c:	ldr	x21, [x22, #224]
     ca0:	ldr	x23, [x8, #128]
     ca4:	bl	8e0 <__errno_location@plt>
     ca8:	ldr	w1, [x0]
     cac:	mov	x0, x21
     cb0:	blr	x23
     cb4:	ldr	x0, [sp, #40]
     cb8:	bl	8f0 <unlink@plt>
     cbc:	mov	x0, x20
     cc0:	bl	880 <fclose@plt>
     cc4:	mov	x0, x19
     cc8:	ldp	x20, x19, [sp, #112]
     ccc:	ldp	x22, x21, [sp, #96]
     cd0:	ldr	x23, [sp, #80]
     cd4:	ldp	x29, x30, [sp, #64]
     cd8:	add	sp, sp, #0x80
     cdc:	ret
     ce0:	sub	sp, sp, #0xa0
     ce4:	stp	x20, x19, [sp, #144]
     ce8:	mov	x19, x1
     cec:	mov	w8, #0x1                   	// #1
     cf0:	cmp	w0, #0x2
     cf4:	stp	x29, x30, [sp, #96]
     cf8:	str	x23, [sp, #112]
     cfc:	stp	x22, x21, [sp, #128]
     d00:	add	x29, sp, #0x60
     d04:	str	xzr, [x1, #8]
     d08:	str	w8, [x1]
     d0c:	str	wzr, [x1, #16]
     d10:	b.lt	e9c <dl_load@@Base+0x4b8>  // b.tstop
     d14:	adrp	x22, 12000 <dl_load@@Base+0x1161c>
     d18:	ldr	x8, [x22, #216]
     d1c:	adrp	x23, 12000 <dl_load@@Base+0x1161c>
     d20:	ldr	x0, [x23, #224]
     d24:	sub	x3, x29, #0x20
     d28:	ldr	x8, [x8, #152]
     d2c:	mov	w2, #0x2                   	// #2
     d30:	mov	x1, xzr
     d34:	blr	x8
     d38:	cbz	w0, eb8 <dl_load@@Base+0x4d4>
     d3c:	ldr	x8, [x22, #216]
     d40:	ldr	x0, [x23, #224]
     d44:	add	x3, sp, #0x20
     d48:	mov	w1, #0x1                   	// #1
     d4c:	ldr	x8, [x8, #152]
     d50:	mov	w2, #0x5                   	// #5
     d54:	blr	x8
     d58:	cbz	w0, ecc <dl_load@@Base+0x4e8>
     d5c:	ldur	x0, [x29, #-24]
     d60:	adrp	x1, 1000 <dl_load@@Base+0x61c>
     d64:	add	x1, x1, #0x8ba
     d68:	bl	890 <fopen@plt>
     d6c:	mov	x20, x0
     d70:	cbz	x0, e74 <dl_load@@Base+0x490>
     d74:	mov	x0, sp
     d78:	mov	w1, #0x1                   	// #1
     d7c:	mov	w2, #0x8                   	// #8
     d80:	mov	x3, x20
     d84:	stp	xzr, xzr, [sp]
     d88:	stur	xzr, [sp, #22]
     d8c:	str	xzr, [sp, #16]
     d90:	bl	8b0 <fread@plt>
     d94:	cmp	x0, #0x8
     d98:	b.ne	e68 <dl_load@@Base+0x484>  // b.any
     d9c:	ldr	x8, [sp]
     da0:	mov	x10, #0x7761                	// #30561
     da4:	ldrb	w9, [sp, #8]
     da8:	movk	x10, #0x726b, lsl #16
     dac:	movk	x10, #0x6c75, lsl #32
     db0:	movk	x10, #0xa7a, lsl #48
     db4:	eor	x8, x8, x10
     db8:	orr	x8, x8, x9
     dbc:	cbnz	x8, e68 <dl_load@@Base+0x484>
     dc0:	add	x0, x29, #0x1c
     dc4:	mov	w1, #0x1                   	// #1
     dc8:	mov	w2, #0x4                   	// #4
     dcc:	mov	x3, x20
     dd0:	bl	8b0 <fread@plt>
     dd4:	cmp	x0, #0x4
     dd8:	b.ne	e68 <dl_load@@Base+0x484>  // b.any
     ddc:	ldr	w8, [x29, #28]
     de0:	mov	w9, #0x3000000             	// #50331648
     de4:	rev	w10, w8
     de8:	cmp	w8, w9
     dec:	str	w10, [x29, #28]
     df0:	b.ne	e68 <dl_load@@Base+0x484>  // b.any
     df4:	add	x0, x29, #0x18
     df8:	mov	w1, #0x1                   	// #1
     dfc:	mov	w2, #0x4                   	// #4
     e00:	mov	x3, x20
     e04:	bl	8b0 <fread@plt>
     e08:	cmp	x0, #0x4
     e0c:	b.ne	e74 <dl_load@@Base+0x490>  // b.any
     e10:	ldr	w8, [x29, #24]
     e14:	mov	w9, #0x1000000             	// #16777216
     e18:	rev	w10, w8
     e1c:	cmp	w8, w9
     e20:	str	w10, [x29, #24]
     e24:	b.ne	e68 <dl_load@@Base+0x484>  // b.any
     e28:	ldr	x8, [x22, #216]
     e2c:	ldr	x0, [x23, #224]
     e30:	ldr	x1, [sp, #40]
     e34:	ldr	x8, [x8, #256]
     e38:	blr	x8
     e3c:	cbz	w0, f08 <dl_load@@Base+0x524>
     e40:	ldr	x1, [sp, #40]
     e44:	mov	x0, x20
     e48:	bl	129c <dl_load@@Base+0x8b8>
     e4c:	cbz	w0, e74 <dl_load@@Base+0x490>
     e50:	mov	w8, #0x1                   	// #1
     e54:	mov	x9, #0x3ff0000000000000    	// #4607182418800017408
     e58:	str	w8, [x19]
     e5c:	str	x9, [x19, #8]
     e60:	str	wzr, [x19, #16]
     e64:	b	e94 <dl_load@@Base+0x4b0>
     e68:	bl	8e0 <__errno_location@plt>
     e6c:	mov	w8, #0x9                   	// #9
     e70:	str	w8, [x0]
     e74:	ldr	x8, [x22, #216]
     e78:	ldr	x21, [x23, #224]
     e7c:	ldr	x22, [x8, #128]
     e80:	bl	8e0 <__errno_location@plt>
     e84:	ldr	w1, [x0]
     e88:	mov	x0, x21
     e8c:	blr	x22
     e90:	cbz	x20, e9c <dl_load@@Base+0x4b8>
     e94:	mov	x0, x20
     e98:	bl	880 <fclose@plt>
     e9c:	mov	x0, x19
     ea0:	ldp	x20, x19, [sp, #144]
     ea4:	ldp	x22, x21, [sp, #128]
     ea8:	ldr	x23, [sp, #112]
     eac:	ldp	x29, x30, [sp, #96]
     eb0:	add	sp, sp, #0xa0
     eb4:	ret
     eb8:	adrp	x8, 11000 <dl_load@@Base+0x1061c>
     ebc:	ldr	x8, [x8, #4048]
     ec0:	adrp	x1, 1000 <dl_load@@Base+0x61c>
     ec4:	add	x1, x1, #0x86e
     ec8:	b	edc <dl_load@@Base+0x4f8>
     ecc:	adrp	x8, 11000 <dl_load@@Base+0x1061c>
     ed0:	ldr	x8, [x8, #4048]
     ed4:	adrp	x1, 1000 <dl_load@@Base+0x61c>
     ed8:	add	x1, x1, #0x894
     edc:	ldr	x20, [x8]
     ee0:	mov	w2, #0x5                   	// #5
     ee4:	mov	x0, xzr
     ee8:	bl	8d0 <dcgettext@plt>
     eec:	mov	x1, x0
     ef0:	mov	x0, x20
     ef4:	bl	900 <fprintf@plt>
     ef8:	bl	8e0 <__errno_location@plt>
     efc:	mov	x20, xzr
     f00:	mov	w8, #0x16                  	// #22
     f04:	b	e70 <dl_load@@Base+0x48c>
     f08:	bl	8e0 <__errno_location@plt>
     f0c:	mov	w8, #0xc                   	// #12
     f10:	str	w8, [x0]
     f14:	adrp	x8, 11000 <dl_load@@Base+0x1061c>
     f18:	ldr	x8, [x8, #4048]
     f1c:	adrp	x1, 1000 <dl_load@@Base+0x61c>
     f20:	add	x1, x1, #0x8bd
     f24:	mov	w2, #0x5                   	// #5
     f28:	ldr	x21, [x8]
     f2c:	mov	x0, xzr
     f30:	bl	8d0 <dcgettext@plt>
     f34:	mov	x1, x0
     f38:	mov	x0, x21
     f3c:	bl	900 <fprintf@plt>
     f40:	b	e74 <dl_load@@Base+0x490>
     f44:	sub	sp, sp, #0x70
     f48:	stp	x24, x23, [sp, #64]
     f4c:	adrp	x23, 12000 <dl_load@@Base+0x1161c>
     f50:	ldr	x8, [x23, #216]
     f54:	stp	x29, x30, [sp, #16]
     f58:	stp	x26, x25, [sp, #48]
     f5c:	stp	x22, x21, [sp, #80]
     f60:	stp	x20, x19, [sp, #96]
     f64:	adrp	x22, 12000 <dl_load@@Base+0x1161c>
     f68:	ldr	x9, [x8, #264]
     f6c:	ldr	x8, [x22, #224]
     f70:	mov	x20, x0
     f74:	add	x2, sp, #0x8
     f78:	mov	w3, #0x2                   	// #2
     f7c:	mov	x0, x8
     f80:	mov	w4, wzr
     f84:	str	x27, [sp, #32]
     f88:	add	x29, sp, #0x10
     f8c:	mov	x19, x1
     f90:	blr	x9
     f94:	cbz	w0, 10a0 <dl_load@@Base+0x6bc>
     f98:	ldr	x8, [sp, #8]
     f9c:	add	x0, x29, #0x18
     fa0:	mov	w1, #0x1                   	// #1
     fa4:	mov	w2, #0x4                   	// #4
     fa8:	ldr	w8, [x8, #16]
     fac:	mov	x3, x20
     fb0:	rev	w8, w8
     fb4:	str	w8, [x29, #24]
     fb8:	bl	8c0 <fwrite@plt>
     fbc:	cmp	x0, #0x4
     fc0:	b.ne	10e0 <dl_load@@Base+0x6fc>  // b.any
     fc4:	ldr	x21, [sp, #8]
     fc8:	ldr	x8, [x21, #16]
     fcc:	cbz	x8, 1060 <dl_load@@Base+0x67c>
     fd0:	mov	x26, xzr
     fd4:	mov	w24, #0x1                   	// #1
     fd8:	mov	w25, #0x50                  	// #80
     fdc:	madd	x27, x26, x25, x21
     fe0:	ldr	w8, [x27, #56]!
     fe4:	add	x0, x29, #0x1c
     fe8:	mov	w1, #0x1                   	// #1
     fec:	mov	w2, #0x4                   	// #4
     ff0:	rev	w8, w8
     ff4:	mov	x3, x20
     ff8:	str	w8, [x29, #28]
     ffc:	bl	8c0 <fwrite@plt>
    1000:	cmp	x0, #0x4
    1004:	b.ne	1084 <dl_load@@Base+0x6a0>  // b.any
    1008:	ldr	x2, [x27]
    100c:	cbz	x2, 1030 <dl_load@@Base+0x64c>
    1010:	sub	x8, x27, #0x8
    1014:	ldr	x0, [x8]
    1018:	mov	w1, #0x1                   	// #1
    101c:	mov	x3, x20
    1020:	bl	8c0 <fwrite@plt>
    1024:	ldr	x8, [x27]
    1028:	cmp	x0, x8
    102c:	b.ne	1084 <dl_load@@Base+0x6a0>  // b.any
    1030:	madd	x8, x26, x25, x21
    1034:	add	x1, x8, #0x48
    1038:	mov	x0, x20
    103c:	bl	1104 <dl_load@@Base+0x720>
    1040:	cbz	w0, 1084 <dl_load@@Base+0x6a0>
    1044:	ldr	x21, [sp, #8]
    1048:	mov	w26, w24
    104c:	ldr	x8, [x21, #16]
    1050:	cmp	x8, w24, uxtw
    1054:	add	w8, w24, #0x1
    1058:	mov	w24, w8
    105c:	b.hi	fdc <dl_load@@Base+0x5f8>  // b.pmore
    1060:	ldr	x8, [x23, #216]
    1064:	ldr	x0, [x22, #224]
    1068:	mov	x1, x19
    106c:	mov	x2, x21
    1070:	ldr	x8, [x8, #272]
    1074:	blr	x8
    1078:	cbz	w0, 10b4 <dl_load@@Base+0x6d0>
    107c:	mov	w0, #0x1                   	// #1
    1080:	b	10e4 <dl_load@@Base+0x700>
    1084:	ldr	x8, [x23, #216]
    1088:	ldr	x0, [x22, #224]
    108c:	ldr	x2, [sp, #8]
    1090:	mov	x1, x19
    1094:	ldr	x8, [x8, #272]
    1098:	blr	x8
    109c:	b	10e0 <dl_load@@Base+0x6fc>
    10a0:	adrp	x8, 11000 <dl_load@@Base+0x1061c>
    10a4:	ldr	x8, [x8, #4048]
    10a8:	adrp	x1, 1000 <dl_load@@Base+0x61c>
    10ac:	add	x1, x1, #0x7f8
    10b0:	b	10c4 <dl_load@@Base+0x6e0>
    10b4:	adrp	x8, 11000 <dl_load@@Base+0x1061c>
    10b8:	ldr	x8, [x8, #4048]
    10bc:	adrp	x1, 1000 <dl_load@@Base+0x61c>
    10c0:	add	x1, x1, #0x81e
    10c4:	ldr	x19, [x8]
    10c8:	mov	w2, #0x5                   	// #5
    10cc:	mov	x0, xzr
    10d0:	bl	8d0 <dcgettext@plt>
    10d4:	mov	x1, x0
    10d8:	mov	x0, x19
    10dc:	bl	900 <fprintf@plt>
    10e0:	mov	w0, wzr
    10e4:	ldp	x20, x19, [sp, #96]
    10e8:	ldp	x22, x21, [sp, #80]
    10ec:	ldp	x24, x23, [sp, #64]
    10f0:	ldp	x26, x25, [sp, #48]
    10f4:	ldr	x27, [sp, #32]
    10f8:	ldp	x29, x30, [sp, #16]
    10fc:	add	sp, sp, #0x70
    1100:	ret
    1104:	sub	sp, sp, #0x40
    1108:	stp	x29, x30, [sp, #16]
    110c:	stp	x22, x21, [sp, #32]
    1110:	stp	x20, x19, [sp, #48]
    1114:	ldr	w8, [x1]
    1118:	mov	x20, x1
    111c:	mov	x19, x0
    1120:	add	x29, sp, #0x10
    1124:	cmp	w8, #0x5
    1128:	b.hi	11e0 <dl_load@@Base+0x7fc>  // b.pmore
    112c:	adrp	x9, 1000 <dl_load@@Base+0x61c>
    1130:	add	x9, x9, #0x718
    1134:	adr	x10, 1144 <dl_load@@Base+0x760>
    1138:	ldrb	w11, [x9, x8]
    113c:	add	x10, x10, x11, lsl #2
    1140:	br	x10
    1144:	mov	w8, #0x5000000             	// #83886080
    1148:	b	11a4 <dl_load@@Base+0x7c0>
    114c:	mov	w8, #0x1000000             	// #16777216
    1150:	sub	x0, x29, #0x4
    1154:	mov	w1, #0x1                   	// #1
    1158:	mov	w2, #0x4                   	// #4
    115c:	mov	x3, x19
    1160:	stur	w8, [x29, #-4]
    1164:	bl	8c0 <fwrite@plt>
    1168:	cmp	x0, #0x4
    116c:	b.ne	1284 <dl_load@@Base+0x8a0>  // b.any
    1170:	add	x0, x20, #0x8
    1174:	mov	w1, #0x1                   	// #1
    1178:	mov	w2, #0x8                   	// #8
    117c:	mov	x3, x19
    1180:	bl	8c0 <fwrite@plt>
    1184:	cmp	x0, #0x8
    1188:	b.eq	127c <dl_load@@Base+0x898>  // b.none
    118c:	b	1284 <dl_load@@Base+0x8a0>
    1190:	stur	wzr, [x29, #-4]
    1194:	b	121c <dl_load@@Base+0x838>
    1198:	mov	w8, #0x3000000             	// #50331648
    119c:	b	11a4 <dl_load@@Base+0x7c0>
    11a0:	mov	w8, #0x4000000             	// #67108864
    11a4:	stur	w8, [x29, #-4]
    11a8:	b	121c <dl_load@@Base+0x838>
    11ac:	mov	w8, #0x2000000             	// #33554432
    11b0:	sub	x0, x29, #0x4
    11b4:	mov	w1, #0x1                   	// #1
    11b8:	mov	w2, #0x4                   	// #4
    11bc:	mov	x3, x19
    11c0:	stur	w8, [x29, #-4]
    11c4:	bl	8c0 <fwrite@plt>
    11c8:	cmp	x0, #0x4
    11cc:	b.ne	1284 <dl_load@@Base+0x8a0>  // b.any
    11d0:	ldr	x1, [x20, #8]
    11d4:	mov	x0, x19
    11d8:	bl	f44 <dl_load@@Base+0x560>
    11dc:	b	1288 <dl_load@@Base+0x8a4>
    11e0:	adrp	x8, 12000 <dl_load@@Base+0x1161c>
    11e4:	ldr	x8, [x8, #216]
    11e8:	stur	wzr, [x29, #-4]
    11ec:	adrp	x9, 12000 <dl_load@@Base+0x1161c>
    11f0:	ldr	x21, [x9, #224]
    11f4:	ldr	x22, [x8, #104]
    11f8:	adrp	x1, 1000 <dl_load@@Base+0x61c>
    11fc:	add	x1, x1, #0x84e
    1200:	mov	w2, #0x5                   	// #5
    1204:	mov	x0, xzr
    1208:	bl	8d0 <dcgettext@plt>
    120c:	ldr	w2, [x20]
    1210:	mov	x1, x0
    1214:	mov	x0, x21
    1218:	blr	x22
    121c:	sub	x0, x29, #0x4
    1220:	mov	w1, #0x1                   	// #1
    1224:	mov	w2, #0x4                   	// #4
    1228:	mov	x3, x19
    122c:	bl	8c0 <fwrite@plt>
    1230:	cmp	x0, #0x4
    1234:	b.ne	1284 <dl_load@@Base+0x8a0>  // b.any
    1238:	ldr	w8, [x20, #16]
    123c:	add	x0, sp, #0x8
    1240:	mov	w1, #0x1                   	// #1
    1244:	mov	w2, #0x4                   	// #4
    1248:	rev	w8, w8
    124c:	mov	x3, x19
    1250:	str	w8, [sp, #8]
    1254:	bl	8c0 <fwrite@plt>
    1258:	cmp	x0, #0x4
    125c:	b.ne	1284 <dl_load@@Base+0x8a0>  // b.any
    1260:	ldp	x0, x2, [x20, #8]
    1264:	mov	w1, #0x1                   	// #1
    1268:	mov	x3, x19
    126c:	bl	8c0 <fwrite@plt>
    1270:	ldr	x8, [x20, #16]
    1274:	cmp	x0, x8
    1278:	b.ne	1284 <dl_load@@Base+0x8a0>  // b.any
    127c:	mov	w0, #0x1                   	// #1
    1280:	b	1288 <dl_load@@Base+0x8a4>
    1284:	mov	w0, wzr
    1288:	ldp	x20, x19, [sp, #48]
    128c:	ldp	x22, x21, [sp, #32]
    1290:	ldp	x29, x30, [sp, #16]
    1294:	add	sp, sp, #0x40
    1298:	ret
    129c:	sub	sp, sp, #0xe0
    12a0:	stp	x29, x30, [sp, #128]
    12a4:	stp	x20, x19, [sp, #208]
    12a8:	add	x29, sp, #0x80
    12ac:	mov	x20, x0
    12b0:	stp	x22, x21, [sp, #192]
    12b4:	mov	x22, x1
    12b8:	sub	x0, x29, #0x8
    12bc:	mov	w1, #0x1                   	// #1
    12c0:	mov	w2, #0x4                   	// #4
    12c4:	mov	x3, x20
    12c8:	stp	x28, x27, [sp, #144]
    12cc:	stp	x26, x25, [sp, #160]
    12d0:	stp	x24, x23, [sp, #176]
    12d4:	bl	8b0 <fread@plt>
    12d8:	cmp	x0, #0x4
    12dc:	b.ne	1518 <dl_load@@Base+0xb34>  // b.any
    12e0:	ldur	w8, [x29, #-8]
    12e4:	mov	w19, wzr
    12e8:	rev	w21, w8
    12ec:	stur	w21, [x29, #-8]
    12f0:	cbz	w8, 14e0 <dl_load@@Base+0xafc>
    12f4:	add	x8, sp, #0x20
    12f8:	adrp	x23, 12000 <dl_load@@Base+0x1161c>
    12fc:	adrp	x25, 12000 <dl_load@@Base+0x1161c>
    1300:	adrp	x28, 12000 <dl_load@@Base+0x1161c>
    1304:	add	x9, x8, #0x10
    1308:	add	x24, x8, #0x30
    130c:	stp	x20, x9, [sp, #16]
    1310:	str	w21, [sp, #12]
    1314:	str	x24, [sp]
    1318:	sub	x0, x29, #0x4
    131c:	mov	w1, #0x1                   	// #1
    1320:	mov	w2, #0x4                   	// #4
    1324:	mov	x3, x20
    1328:	bl	8b0 <fread@plt>
    132c:	cmp	x0, #0x4
    1330:	b.ne	14e0 <dl_load@@Base+0xafc>  // b.any
    1334:	ldur	w8, [x29, #-4]
    1338:	movi	v0.2d, #0x0
    133c:	stp	q0, q0, [sp, #32]
    1340:	stp	q0, q0, [sp, #64]
    1344:	rev	w27, w8
    1348:	stur	w27, [x29, #-4]
    134c:	str	q0, [sp, #96]
    1350:	cbz	w8, 138c <dl_load@@Base+0x9a8>
    1354:	ldr	x0, [x28, #232]
    1358:	cbz	x0, 1398 <dl_load@@Base+0x9b4>
    135c:	adrp	x8, 12000 <dl_load@@Base+0x1161c>
    1360:	ldr	w8, [x8, #240]
    1364:	cmp	w8, w27
    1368:	b.cs	13e8 <dl_load@@Base+0xa04>  // b.hs, b.nlast
    136c:	ldr	x8, [x23, #216]
    1370:	mov	w26, w27
    1374:	mov	x1, x26
    1378:	ldr	x8, [x8, #296]
    137c:	blr	x8
    1380:	cbz	x0, 14e0 <dl_load@@Base+0xafc>
    1384:	str	x0, [x28, #232]
    1388:	b	13dc <dl_load@@Base+0x9f8>
    138c:	ldr	x8, [sp, #24]
    1390:	stp	q0, q0, [x8]
    1394:	b	14a4 <dl_load@@Base+0xac0>
    1398:	ldr	x8, [x23, #216]
    139c:	mov	w26, w27
    13a0:	mov	x0, x26
    13a4:	ldr	x8, [x8, #280]
    13a8:	blr	x8
    13ac:	str	x0, [x28, #232]
    13b0:	cbnz	x0, 13dc <dl_load@@Base+0x9f8>
    13b4:	ldr	x8, [x23, #216]
    13b8:	ldr	x0, [x25, #224]
    13bc:	adrp	x1, 1000 <dl_load@@Base+0x61c>
    13c0:	adrp	x2, 1000 <dl_load@@Base+0x61c>
    13c4:	ldr	x8, [x8, #96]
    13c8:	add	x1, x1, #0x901
    13cc:	add	x2, x2, #0x91f
    13d0:	mov	w3, w27
    13d4:	blr	x8
    13d8:	ldr	x0, [x28, #232]
    13dc:	adrp	x8, 12000 <dl_load@@Base+0x1161c>
    13e0:	str	w27, [x8, #240]
    13e4:	b	13ec <dl_load@@Base+0xa08>
    13e8:	mov	w26, w27
    13ec:	mov	w1, #0x1                   	// #1
    13f0:	mov	x2, x26
    13f4:	mov	x3, x20
    13f8:	bl	8b0 <fread@plt>
    13fc:	cmp	x0, x26
    1400:	b.ne	14e0 <dl_load@@Base+0xafc>  // b.any
    1404:	ldr	x8, [sp, #24]
    1408:	ldr	x21, [x23, #216]
    140c:	movi	v0.2d, #0x0
    1410:	ldr	x23, [x25, #224]
    1414:	stp	q0, q0, [x8]
    1418:	mov	w8, #0x2                   	// #2
    141c:	str	w8, [sp, #48]
    1420:	str	x26, [sp, #64]
    1424:	ldr	x8, [x21, #280]
    1428:	ldr	x27, [x28, #232]
    142c:	mov	x20, x22
    1430:	mov	x22, x25
    1434:	add	x25, x26, #0x1
    1438:	mov	x0, x25
    143c:	mov	x24, x28
    1440:	blr	x8
    1444:	mov	x28, x0
    1448:	cbnz	x0, 146c <dl_load@@Base+0xa88>
    144c:	ldr	x8, [x21, #96]
    1450:	adrp	x1, 1000 <dl_load@@Base+0x61c>
    1454:	adrp	x2, 1000 <dl_load@@Base+0x61c>
    1458:	mov	x0, x23
    145c:	add	x1, x1, #0x901
    1460:	add	x2, x2, #0x929
    1464:	mov	x3, x25
    1468:	blr	x8
    146c:	mov	x0, x28
    1470:	mov	x1, x27
    1474:	mov	x2, x26
    1478:	bl	840 <memcpy@plt>
    147c:	strb	wzr, [x28, x26]
    1480:	str	x28, [sp, #56]
    1484:	mov	x8, x20
    1488:	ldr	w21, [sp, #12]
    148c:	ldr	x20, [sp, #16]
    1490:	mov	x28, x24
    1494:	ldr	x24, [sp]
    1498:	adrp	x23, 12000 <dl_load@@Base+0x1161c>
    149c:	mov	x25, x22
    14a0:	mov	x22, x8
    14a4:	mov	x0, x20
    14a8:	mov	x1, x24
    14ac:	bl	153c <dl_load@@Base+0xb58>
    14b0:	cbz	w0, 14e0 <dl_load@@Base+0xafc>
    14b4:	ldr	x8, [x23, #216]
    14b8:	ldr	x0, [x25, #224]
    14bc:	ldr	x2, [sp, #24]
    14c0:	mov	x1, x22
    14c4:	ldr	x8, [x8, #232]
    14c8:	mov	x3, x24
    14cc:	blr	x8
    14d0:	cbz	w0, 14ec <dl_load@@Base+0xb08>
    14d4:	add	w19, w19, #0x1
    14d8:	cmp	w19, w21
    14dc:	b.cc	1318 <dl_load@@Base+0x934>  // b.lo, b.ul, b.last
    14e0:	cmp	w19, w21
    14e4:	cset	w0, eq  // eq = none
    14e8:	b	151c <dl_load@@Base+0xb38>
    14ec:	adrp	x8, 11000 <dl_load@@Base+0x1061c>
    14f0:	ldr	x8, [x8, #4048]
    14f4:	adrp	x1, 1000 <dl_load@@Base+0x61c>
    14f8:	add	x1, x1, #0x8db
    14fc:	mov	w2, #0x5                   	// #5
    1500:	ldr	x19, [x8]
    1504:	mov	x0, xzr
    1508:	bl	8d0 <dcgettext@plt>
    150c:	mov	x1, x0
    1510:	mov	x0, x19
    1514:	bl	900 <fprintf@plt>
    1518:	mov	w0, wzr
    151c:	ldp	x20, x19, [sp, #208]
    1520:	ldp	x22, x21, [sp, #192]
    1524:	ldp	x24, x23, [sp, #176]
    1528:	ldp	x26, x25, [sp, #160]
    152c:	ldp	x28, x27, [sp, #144]
    1530:	ldp	x29, x30, [sp, #128]
    1534:	add	sp, sp, #0xe0
    1538:	ret
    153c:	sub	sp, sp, #0x60
    1540:	stp	x29, x30, [sp, #16]
    1544:	stp	x20, x19, [sp, #80]
    1548:	add	x29, sp, #0x10
    154c:	mov	x20, x0
    1550:	mov	x19, x1
    1554:	add	x0, x29, #0x1c
    1558:	mov	w1, #0x1                   	// #1
    155c:	mov	w2, #0x4                   	// #4
    1560:	mov	x3, x20
    1564:	str	x25, [sp, #32]
    1568:	stp	x24, x23, [sp, #48]
    156c:	stp	x22, x21, [sp, #64]
    1570:	bl	8b0 <fread@plt>
    1574:	cmp	x0, #0x4
    1578:	b.ne	16e4 <dl_load@@Base+0xd00>  // b.any
    157c:	ldr	w8, [x29, #28]
    1580:	rev	w21, w8
    1584:	cmp	w21, #0x1
    1588:	str	w21, [x29, #28]
    158c:	b.eq	15d4 <dl_load@@Base+0xbf0>  // b.none
    1590:	cmp	w21, #0x2
    1594:	b.ne	1604 <dl_load@@Base+0xc20>  // b.any
    1598:	adrp	x8, 12000 <dl_load@@Base+0x1161c>
    159c:	ldr	x8, [x8, #216]
    15a0:	adrp	x9, 12000 <dl_load@@Base+0x1161c>
    15a4:	ldr	x0, [x9, #224]
    15a8:	ldr	x8, [x8, #248]
    15ac:	blr	x8
    15b0:	mov	x21, x0
    15b4:	mov	x0, x20
    15b8:	mov	x1, x21
    15bc:	bl	129c <dl_load@@Base+0x8b8>
    15c0:	cbz	w0, 16e4 <dl_load@@Base+0xd00>
    15c4:	mov	w8, #0x5                   	// #5
    15c8:	str	x21, [x19, #8]
    15cc:	str	w8, [x19]
    15d0:	b	16cc <dl_load@@Base+0xce8>
    15d4:	add	x0, sp, #0x8
    15d8:	mov	w1, #0x1                   	// #1
    15dc:	mov	w2, #0x8                   	// #8
    15e0:	mov	x3, x20
    15e4:	mov	w21, #0x1                   	// #1
    15e8:	bl	8b0 <fread@plt>
    15ec:	cmp	x0, #0x8
    15f0:	b.ne	16e4 <dl_load@@Base+0xd00>  // b.any
    15f4:	str	w21, [x19]
    15f8:	ldr	x8, [sp, #8]
    15fc:	str	x8, [x19, #8]
    1600:	b	16e8 <dl_load@@Base+0xd04>
    1604:	add	x0, sp, #0x8
    1608:	mov	w1, #0x1                   	// #1
    160c:	mov	w2, #0x4                   	// #4
    1610:	mov	x3, x20
    1614:	bl	8b0 <fread@plt>
    1618:	cmp	x0, #0x4
    161c:	b.ne	16e4 <dl_load@@Base+0xd00>  // b.any
    1620:	ldr	w8, [sp, #8]
    1624:	cmp	w21, #0x6
    1628:	adrp	x23, 12000 <dl_load@@Base+0x1161c>
    162c:	rev	w24, w8
    1630:	str	w24, [sp, #8]
    1634:	b.cs	1644 <dl_load@@Base+0xc60>  // b.hs, b.nlast
    1638:	mov	w8, #0x39                  	// #57
    163c:	lsr	w8, w8, w21
    1640:	tbnz	w8, #0, 1680 <dl_load@@Base+0xc9c>
    1644:	ldr	x8, [x23, #216]
    1648:	adrp	x9, 12000 <dl_load@@Base+0x1161c>
    164c:	ldr	x22, [x9, #224]
    1650:	adrp	x1, 1000 <dl_load@@Base+0x61c>
    1654:	ldr	x25, [x8, #104]
    1658:	add	x1, x1, #0x937
    165c:	mov	w2, #0x5                   	// #5
    1660:	mov	x0, xzr
    1664:	bl	8d0 <dcgettext@plt>
    1668:	mov	x1, x0
    166c:	mov	x0, x22
    1670:	mov	w2, w21
    1674:	blr	x25
    1678:	mov	w8, #0x2                   	// #2
    167c:	b	168c <dl_load@@Base+0xca8>
    1680:	adrp	x8, 1000 <dl_load@@Base+0x61c>
    1684:	add	x8, x8, #0x998
    1688:	ldr	w8, [x8, w21, sxtw #2]
    168c:	mov	w21, w24
    1690:	str	w8, [x19]
    1694:	str	x21, [x19, #16]
    1698:	ldr	x8, [x23, #216]
    169c:	add	w0, w24, #0x1
    16a0:	ldr	x8, [x8, #280]
    16a4:	blr	x8
    16a8:	mov	w1, #0x1                   	// #1
    16ac:	mov	x2, x21
    16b0:	mov	x3, x20
    16b4:	str	x0, [x19, #8]
    16b8:	bl	8b0 <fread@plt>
    16bc:	cmp	x0, w24, uxtw
    16c0:	b.ne	16d4 <dl_load@@Base+0xcf0>  // b.any
    16c4:	ldr	x8, [x19, #8]
    16c8:	strb	wzr, [x8, x21]
    16cc:	mov	w21, #0x1                   	// #1
    16d0:	b	16e8 <dl_load@@Base+0xd04>
    16d4:	ldr	x8, [x23, #216]
    16d8:	ldr	x0, [x19, #8]
    16dc:	ldr	x8, [x8, #304]
    16e0:	blr	x8
    16e4:	mov	w21, wzr
    16e8:	mov	w0, w21
    16ec:	ldp	x20, x19, [sp, #80]
    16f0:	ldp	x22, x21, [sp, #64]
    16f4:	ldp	x24, x23, [sp, #48]
    16f8:	ldr	x25, [sp, #32]
    16fc:	ldp	x29, x30, [sp, #16]
    1700:	add	sp, sp, #0x60
    1704:	ret

Disassembly of section .fini:

0000000000001708 <.fini>:
    1708:	stp	x29, x30, [sp, #-16]!
    170c:	mov	x29, sp
    1710:	ldp	x29, x30, [sp], #16
    1714:	ret
