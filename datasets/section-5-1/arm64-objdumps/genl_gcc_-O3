
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//genl_gcc_-O3:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000404ca8 <.init>:
  404ca8:	stp	x29, x30, [sp, #-16]!
  404cac:	mov	x29, sp
  404cb0:	bl	405528 <_start@@Base+0x50>
  404cb4:	ldp	x29, x30, [sp], #16
  404cb8:	ret

Disassembly of section .plt:

0000000000404cc0 <memcpy@plt-0x20>:
  404cc0:	stp	x16, x30, [sp, #-16]!
  404cc4:	adrp	x16, 421000 <_IO_stdin_used@@Base+0x13490>
  404cc8:	ldr	x17, [x16, #4088]
  404ccc:	add	x16, x16, #0xff8
  404cd0:	br	x17
  404cd4:	nop
  404cd8:	nop
  404cdc:	nop

0000000000404ce0 <memcpy@plt>:
  404ce0:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  404ce4:	ldr	x17, [x16]
  404ce8:	add	x16, x16, #0x0
  404cec:	br	x17

0000000000404cf0 <recvmsg@plt>:
  404cf0:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  404cf4:	ldr	x17, [x16, #8]
  404cf8:	add	x16, x16, #0x8
  404cfc:	br	x17

0000000000404d00 <strtoul@plt>:
  404d00:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  404d04:	ldr	x17, [x16, #16]
  404d08:	add	x16, x16, #0x10
  404d0c:	br	x17

0000000000404d10 <strlen@plt>:
  404d10:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  404d14:	ldr	x17, [x16, #24]
  404d18:	add	x16, x16, #0x18
  404d1c:	br	x17

0000000000404d20 <exit@plt>:
  404d20:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  404d24:	ldr	x17, [x16, #32]
  404d28:	add	x16, x16, #0x20
  404d2c:	br	x17

0000000000404d30 <perror@plt>:
  404d30:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  404d34:	ldr	x17, [x16, #40]
  404d38:	add	x16, x16, #0x28
  404d3c:	br	x17

0000000000404d40 <strtoll@plt>:
  404d40:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  404d44:	ldr	x17, [x16, #48]
  404d48:	add	x16, x16, #0x30
  404d4c:	br	x17

0000000000404d50 <strtod@plt>:
  404d50:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  404d54:	ldr	x17, [x16, #56]
  404d58:	add	x16, x16, #0x38
  404d5c:	br	x17

0000000000404d60 <geteuid@plt>:
  404d60:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  404d64:	ldr	x17, [x16, #64]
  404d68:	add	x16, x16, #0x40
  404d6c:	br	x17

0000000000404d70 <sethostent@plt>:
  404d70:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  404d74:	ldr	x17, [x16, #72]
  404d78:	add	x16, x16, #0x48
  404d7c:	br	x17

0000000000404d80 <bind@plt>:
  404d80:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  404d84:	ldr	x17, [x16, #80]
  404d88:	add	x16, x16, #0x50
  404d8c:	br	x17

0000000000404d90 <ftell@plt>:
  404d90:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  404d94:	ldr	x17, [x16, #88]
  404d98:	add	x16, x16, #0x58
  404d9c:	br	x17

0000000000404da0 <sprintf@plt>:
  404da0:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  404da4:	ldr	x17, [x16, #96]
  404da8:	add	x16, x16, #0x60
  404dac:	br	x17

0000000000404db0 <getuid@plt>:
  404db0:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  404db4:	ldr	x17, [x16, #104]
  404db8:	add	x16, x16, #0x68
  404dbc:	br	x17

0000000000404dc0 <putc@plt>:
  404dc0:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  404dc4:	ldr	x17, [x16, #112]
  404dc8:	add	x16, x16, #0x70
  404dcc:	br	x17

0000000000404dd0 <strftime@plt>:
  404dd0:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  404dd4:	ldr	x17, [x16, #120]
  404dd8:	add	x16, x16, #0x78
  404ddc:	br	x17

0000000000404de0 <fputc@plt>:
  404de0:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  404de4:	ldr	x17, [x16, #128]
  404de8:	add	x16, x16, #0x80
  404dec:	br	x17

0000000000404df0 <dlopen@plt>:
  404df0:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  404df4:	ldr	x17, [x16, #136]
  404df8:	add	x16, x16, #0x88
  404dfc:	br	x17

0000000000404e00 <snprintf@plt>:
  404e00:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  404e04:	ldr	x17, [x16, #144]
  404e08:	add	x16, x16, #0x90
  404e0c:	br	x17

0000000000404e10 <fileno@plt>:
  404e10:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  404e14:	ldr	x17, [x16, #152]
  404e18:	add	x16, x16, #0x98
  404e1c:	br	x17

0000000000404e20 <localtime@plt>:
  404e20:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  404e24:	ldr	x17, [x16, #160]
  404e28:	add	x16, x16, #0xa0
  404e2c:	br	x17

0000000000404e30 <fclose@plt>:
  404e30:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  404e34:	ldr	x17, [x16, #168]
  404e38:	add	x16, x16, #0xa8
  404e3c:	br	x17

0000000000404e40 <time@plt>:
  404e40:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  404e44:	ldr	x17, [x16, #176]
  404e48:	add	x16, x16, #0xb0
  404e4c:	br	x17

0000000000404e50 <malloc@plt>:
  404e50:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  404e54:	ldr	x17, [x16, #184]
  404e58:	add	x16, x16, #0xb8
  404e5c:	br	x17

0000000000404e60 <setsockopt@plt>:
  404e60:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  404e64:	ldr	x17, [x16, #192]
  404e68:	add	x16, x16, #0xc0
  404e6c:	br	x17

0000000000404e70 <dlsym@plt>:
  404e70:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  404e74:	ldr	x17, [x16, #200]
  404e78:	add	x16, x16, #0xc8
  404e7c:	br	x17

0000000000404e80 <__isoc99_fscanf@plt>:
  404e80:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  404e84:	ldr	x17, [x16, #208]
  404e88:	add	x16, x16, #0xd0
  404e8c:	br	x17

0000000000404e90 <__libc_start_main@plt>:
  404e90:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  404e94:	ldr	x17, [x16, #216]
  404e98:	add	x16, x16, #0xd8
  404e9c:	br	x17

0000000000404ea0 <strcat@plt>:
  404ea0:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  404ea4:	ldr	x17, [x16, #224]
  404ea8:	add	x16, x16, #0xe0
  404eac:	br	x17

0000000000404eb0 <if_indextoname@plt>:
  404eb0:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  404eb4:	ldr	x17, [x16, #232]
  404eb8:	add	x16, x16, #0xe8
  404ebc:	br	x17

0000000000404ec0 <memset@plt>:
  404ec0:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  404ec4:	ldr	x17, [x16, #240]
  404ec8:	add	x16, x16, #0xf0
  404ecc:	br	x17

0000000000404ed0 <gettimeofday@plt>:
  404ed0:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  404ed4:	ldr	x17, [x16, #248]
  404ed8:	add	x16, x16, #0xf8
  404edc:	br	x17

0000000000404ee0 <sendmsg@plt>:
  404ee0:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  404ee4:	ldr	x17, [x16, #256]
  404ee8:	add	x16, x16, #0x100
  404eec:	br	x17

0000000000404ef0 <calloc@plt>:
  404ef0:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  404ef4:	ldr	x17, [x16, #264]
  404ef8:	add	x16, x16, #0x108
  404efc:	br	x17

0000000000404f00 <cap_get_flag@plt>:
  404f00:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  404f04:	ldr	x17, [x16, #272]
  404f08:	add	x16, x16, #0x110
  404f0c:	br	x17

0000000000404f10 <strcasecmp@plt>:
  404f10:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  404f14:	ldr	x17, [x16, #280]
  404f18:	add	x16, x16, #0x118
  404f1c:	br	x17

0000000000404f20 <realloc@plt>:
  404f20:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  404f24:	ldr	x17, [x16, #288]
  404f28:	add	x16, x16, #0x120
  404f2c:	br	x17

0000000000404f30 <cap_set_proc@plt>:
  404f30:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  404f34:	ldr	x17, [x16, #296]
  404f38:	add	x16, x16, #0x128
  404f3c:	br	x17

0000000000404f40 <strdup@plt>:
  404f40:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  404f44:	ldr	x17, [x16, #304]
  404f48:	add	x16, x16, #0x130
  404f4c:	br	x17

0000000000404f50 <strerror@plt>:
  404f50:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  404f54:	ldr	x17, [x16, #312]
  404f58:	add	x16, x16, #0x138
  404f5c:	br	x17

0000000000404f60 <close@plt>:
  404f60:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  404f64:	ldr	x17, [x16, #320]
  404f68:	add	x16, x16, #0x140
  404f6c:	br	x17

0000000000404f70 <strrchr@plt>:
  404f70:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  404f74:	ldr	x17, [x16, #328]
  404f78:	add	x16, x16, #0x148
  404f7c:	br	x17

0000000000404f80 <recv@plt>:
  404f80:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  404f84:	ldr	x17, [x16, #336]
  404f88:	add	x16, x16, #0x150
  404f8c:	br	x17

0000000000404f90 <__gmon_start__@plt>:
  404f90:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  404f94:	ldr	x17, [x16, #344]
  404f98:	add	x16, x16, #0x158
  404f9c:	br	x17

0000000000404fa0 <abort@plt>:
  404fa0:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  404fa4:	ldr	x17, [x16, #352]
  404fa8:	add	x16, x16, #0x160
  404fac:	br	x17

0000000000404fb0 <feof@plt>:
  404fb0:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  404fb4:	ldr	x17, [x16, #360]
  404fb8:	add	x16, x16, #0x168
  404fbc:	br	x17

0000000000404fc0 <memcmp@plt>:
  404fc0:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  404fc4:	ldr	x17, [x16, #368]
  404fc8:	add	x16, x16, #0x170
  404fcc:	br	x17

0000000000404fd0 <strcmp@plt>:
  404fd0:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  404fd4:	ldr	x17, [x16, #376]
  404fd8:	add	x16, x16, #0x178
  404fdc:	br	x17

0000000000404fe0 <__ctype_b_loc@plt>:
  404fe0:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  404fe4:	ldr	x17, [x16, #384]
  404fe8:	add	x16, x16, #0x180
  404fec:	br	x17

0000000000404ff0 <strtol@plt>:
  404ff0:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  404ff4:	ldr	x17, [x16, #392]
  404ff8:	add	x16, x16, #0x188
  404ffc:	br	x17

0000000000405000 <cap_get_proc@plt>:
  405000:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  405004:	ldr	x17, [x16, #400]
  405008:	add	x16, x16, #0x190
  40500c:	br	x17

0000000000405010 <fread@plt>:
  405010:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  405014:	ldr	x17, [x16, #408]
  405018:	add	x16, x16, #0x198
  40501c:	br	x17

0000000000405020 <gethostbyaddr@plt>:
  405020:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  405024:	ldr	x17, [x16, #416]
  405028:	add	x16, x16, #0x1a0
  40502c:	br	x17

0000000000405030 <free@plt>:
  405030:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  405034:	ldr	x17, [x16, #424]
  405038:	add	x16, x16, #0x1a8
  40503c:	br	x17

0000000000405040 <inet_pton@plt>:
  405040:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  405044:	ldr	x17, [x16, #432]
  405048:	add	x16, x16, #0x1b0
  40504c:	br	x17

0000000000405050 <send@plt>:
  405050:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  405054:	ldr	x17, [x16, #440]
  405058:	add	x16, x16, #0x1b8
  40505c:	br	x17

0000000000405060 <strspn@plt>:
  405060:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  405064:	ldr	x17, [x16, #448]
  405068:	add	x16, x16, #0x1c0
  40506c:	br	x17

0000000000405070 <strchr@plt>:
  405070:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  405074:	ldr	x17, [x16, #456]
  405078:	add	x16, x16, #0x1c8
  40507c:	br	x17

0000000000405080 <strtoull@plt>:
  405080:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  405084:	ldr	x17, [x16, #464]
  405088:	add	x16, x16, #0x1d0
  40508c:	br	x17

0000000000405090 <fwrite@plt>:
  405090:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  405094:	ldr	x17, [x16, #472]
  405098:	add	x16, x16, #0x1d8
  40509c:	br	x17

00000000004050a0 <socket@plt>:
  4050a0:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  4050a4:	ldr	x17, [x16, #480]
  4050a8:	add	x16, x16, #0x1e0
  4050ac:	br	x17

00000000004050b0 <fflush@plt>:
  4050b0:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  4050b4:	ldr	x17, [x16, #488]
  4050b8:	add	x16, x16, #0x1e8
  4050bc:	br	x17

00000000004050c0 <fopen64@plt>:
  4050c0:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  4050c4:	ldr	x17, [x16, #496]
  4050c8:	add	x16, x16, #0x1f0
  4050cc:	br	x17

00000000004050d0 <cap_clear@plt>:
  4050d0:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  4050d4:	ldr	x17, [x16, #504]
  4050d8:	add	x16, x16, #0x1f8
  4050dc:	br	x17

00000000004050e0 <isatty@plt>:
  4050e0:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  4050e4:	ldr	x17, [x16, #512]
  4050e8:	add	x16, x16, #0x200
  4050ec:	br	x17

00000000004050f0 <sysconf@plt>:
  4050f0:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  4050f4:	ldr	x17, [x16, #520]
  4050f8:	add	x16, x16, #0x208
  4050fc:	br	x17

0000000000405100 <asctime@plt>:
  405100:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  405104:	ldr	x17, [x16, #528]
  405108:	add	x16, x16, #0x210
  40510c:	br	x17

0000000000405110 <cap_free@plt>:
  405110:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  405114:	ldr	x17, [x16, #536]
  405118:	add	x16, x16, #0x218
  40511c:	br	x17

0000000000405120 <if_nametoindex@plt>:
  405120:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  405124:	ldr	x17, [x16, #544]
  405128:	add	x16, x16, #0x220
  40512c:	br	x17

0000000000405130 <strchrnul@plt>:
  405130:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  405134:	ldr	x17, [x16, #552]
  405138:	add	x16, x16, #0x228
  40513c:	br	x17

0000000000405140 <strstr@plt>:
  405140:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  405144:	ldr	x17, [x16, #560]
  405148:	add	x16, x16, #0x230
  40514c:	br	x17

0000000000405150 <__isoc99_sscanf@plt>:
  405150:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  405154:	ldr	x17, [x16, #568]
  405158:	add	x16, x16, #0x238
  40515c:	br	x17

0000000000405160 <strncpy@plt>:
  405160:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  405164:	ldr	x17, [x16, #576]
  405168:	add	x16, x16, #0x240
  40516c:	br	x17

0000000000405170 <strcspn@plt>:
  405170:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  405174:	ldr	x17, [x16, #584]
  405178:	add	x16, x16, #0x248
  40517c:	br	x17

0000000000405180 <vfprintf@plt>:
  405180:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  405184:	ldr	x17, [x16, #592]
  405188:	add	x16, x16, #0x250
  40518c:	br	x17

0000000000405190 <printf@plt>:
  405190:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  405194:	ldr	x17, [x16, #600]
  405198:	add	x16, x16, #0x258
  40519c:	br	x17

00000000004051a0 <__assert_fail@plt>:
  4051a0:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  4051a4:	ldr	x17, [x16, #608]
  4051a8:	add	x16, x16, #0x260
  4051ac:	br	x17

00000000004051b0 <__errno_location@plt>:
  4051b0:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  4051b4:	ldr	x17, [x16, #616]
  4051b8:	add	x16, x16, #0x268
  4051bc:	br	x17

00000000004051c0 <getenv@plt>:
  4051c0:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  4051c4:	ldr	x17, [x16, #624]
  4051c8:	add	x16, x16, #0x270
  4051cc:	br	x17

00000000004051d0 <putchar@plt>:
  4051d0:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  4051d4:	ldr	x17, [x16, #632]
  4051d8:	add	x16, x16, #0x278
  4051dc:	br	x17

00000000004051e0 <__getdelim@plt>:
  4051e0:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  4051e4:	ldr	x17, [x16, #640]
  4051e8:	add	x16, x16, #0x280
  4051ec:	br	x17

00000000004051f0 <getsockname@plt>:
  4051f0:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  4051f4:	ldr	x17, [x16, #648]
  4051f8:	add	x16, x16, #0x288
  4051fc:	br	x17

0000000000405200 <fprintf@plt>:
  405200:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  405204:	ldr	x17, [x16, #656]
  405208:	add	x16, x16, #0x290
  40520c:	br	x17

0000000000405210 <fgets@plt>:
  405210:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  405214:	ldr	x17, [x16, #664]
  405218:	add	x16, x16, #0x298
  40521c:	br	x17

0000000000405220 <inet_ntop@plt>:
  405220:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  405224:	ldr	x17, [x16, #672]
  405228:	add	x16, x16, #0x2a0
  40522c:	br	x17

0000000000405230 <ferror@plt>:
  405230:	adrp	x16, 422000 <memcpy@GLIBC_2.17>
  405234:	ldr	x17, [x16, #680]
  405238:	add	x16, x16, #0x2a8
  40523c:	br	x17

Disassembly of section .text:

0000000000405240 <main@@Base>:
  405240:	stp	x29, x30, [sp, #-320]!
  405244:	cmp	w0, #0x1
  405248:	mov	x29, sp
  40524c:	stp	x19, x20, [sp, #16]
  405250:	stp	x21, x22, [sp, #32]
  405254:	stp	x23, x24, [sp, #48]
  405258:	b.le	405308 <main@@Base+0xc8>
  40525c:	adrp	x22, 40d000 <rtnl_listen@@Base+0x100>
  405260:	adrp	x23, 40d000 <rtnl_listen@@Base+0x100>
  405264:	mov	w21, w0
  405268:	mov	x20, x1
  40526c:	add	x22, x22, #0xc70
  405270:	add	x23, x23, #0xc78
  405274:	adrp	x24, 40d000 <rtnl_listen@@Base+0x100>
  405278:	b	40529c <main@@Base+0x5c>
  40527c:	adrp	x0, 426000 <stdout@@GLIBC_2.17+0x3cf8>
  405280:	ldr	w1, [x0, #3460]
  405284:	add	w1, w1, #0x1
  405288:	str	w1, [x0, #3460]
  40528c:	sub	w21, w21, #0x1
  405290:	add	x20, x20, #0x8
  405294:	cmp	w21, #0x1
  405298:	b.eq	405308 <main@@Base+0xc8>  // b.none
  40529c:	ldr	x19, [x20, #8]
  4052a0:	ldrb	w0, [x19]
  4052a4:	cmp	w0, #0x2d
  4052a8:	b.ne	40530c <main@@Base+0xcc>  // b.any
  4052ac:	mov	x0, x19
  4052b0:	mov	x1, x22
  4052b4:	bl	4072f0 <matches@@Base>
  4052b8:	tst	w0, #0xff
  4052bc:	b.eq	40527c <main@@Base+0x3c>  // b.none
  4052c0:	ldr	x0, [x20, #8]
  4052c4:	mov	x1, x23
  4052c8:	bl	4072f0 <matches@@Base>
  4052cc:	tst	w0, #0xff
  4052d0:	b.eq	40527c <main@@Base+0x3c>  // b.none
  4052d4:	ldr	x0, [x20, #8]
  4052d8:	add	x1, x24, #0xc88
  4052dc:	bl	4072f0 <matches@@Base>
  4052e0:	tst	w0, #0xff
  4052e4:	b.ne	405420 <main@@Base+0x1e0>  // b.any
  4052e8:	adrp	x1, 426000 <stdout@@GLIBC_2.17+0x3cf8>
  4052ec:	sub	w21, w21, #0x1
  4052f0:	add	x20, x20, #0x8
  4052f4:	cmp	w21, #0x1
  4052f8:	ldr	w0, [x1, #3456]
  4052fc:	add	w0, w0, #0x1
  405300:	str	w0, [x1, #3456]
  405304:	b.ne	40529c <main@@Base+0x5c>  // b.any
  405308:	bl	405618 <_start@@Base+0x140>
  40530c:	adrp	x24, 422000 <memcpy@GLIBC_2.17>
  405310:	add	x23, x24, #0x318
  405314:	ldr	x22, [x23, #8]
  405318:	cbnz	x22, 405328 <main@@Base+0xe8>
  40531c:	b	405360 <main@@Base+0x120>
  405320:	ldr	x22, [x22]
  405324:	cbz	x22, 405360 <main@@Base+0x120>
  405328:	mov	x1, x19
  40532c:	add	x0, x22, #0x8
  405330:	bl	404fd0 <strcmp@plt>
  405334:	cbnz	w0, 405320 <main@@Base+0xe0>
  405338:	ldr	x3, [x22, #24]
  40533c:	add	x2, x20, #0x8
  405340:	sub	w1, w21, #0x1
  405344:	mov	x0, x22
  405348:	blr	x3
  40534c:	ldp	x19, x20, [sp, #16]
  405350:	ldp	x21, x22, [sp, #32]
  405354:	ldp	x23, x24, [sp, #48]
  405358:	ldp	x29, x30, [sp], #320
  40535c:	ret
  405360:	mov	x3, x19
  405364:	adrp	x2, 40d000 <rtnl_listen@@Base+0x100>
  405368:	add	x2, x2, #0xd08
  40536c:	mov	x1, #0x100                 	// #256
  405370:	add	x0, sp, #0x40
  405374:	bl	404e00 <snprintf@plt>
  405378:	add	x0, sp, #0x40
  40537c:	mov	w1, #0x1                   	// #1
  405380:	bl	404df0 <dlopen@plt>
  405384:	mov	x22, x0
  405388:	cbz	x0, 4053c8 <main@@Base+0x188>
  40538c:	mov	x3, x19
  405390:	adrp	x2, 40d000 <rtnl_listen@@Base+0x100>
  405394:	add	x2, x2, #0xd10
  405398:	mov	x1, #0x100                 	// #256
  40539c:	add	x0, sp, #0x40
  4053a0:	bl	404e00 <snprintf@plt>
  4053a4:	mov	x0, x22
  4053a8:	add	x1, sp, #0x40
  4053ac:	bl	404e70 <dlsym@plt>
  4053b0:	mov	x22, x0
  4053b4:	cbz	x0, 4053e4 <main@@Base+0x1a4>
  4053b8:	ldr	x0, [x23, #8]
  4053bc:	str	x0, [x22]
  4053c0:	str	x22, [x23, #8]
  4053c4:	b	405338 <main@@Base+0xf8>
  4053c8:	ldr	x22, [x24, #792]
  4053cc:	cbnz	x22, 40538c <main@@Base+0x14c>
  4053d0:	mov	w1, #0x1                   	// #1
  4053d4:	bl	404df0 <dlopen@plt>
  4053d8:	str	x0, [x24, #792]
  4053dc:	mov	x22, x0
  4053e0:	cbnz	x0, 40538c <main@@Base+0x14c>
  4053e4:	mov	x1, #0x28                  	// #40
  4053e8:	mov	x0, #0x1                   	// #1
  4053ec:	bl	404ef0 <calloc@plt>
  4053f0:	mov	x22, x0
  4053f4:	cbz	x0, 4054b8 <main@@Base+0x278>
  4053f8:	mov	x1, x19
  4053fc:	add	x0, x0, #0x8
  405400:	mov	x2, #0xf                   	// #15
  405404:	bl	405160 <strncpy@plt>
  405408:	adrp	x1, 405000 <cap_get_proc@plt>
  40540c:	adrp	x0, 405000 <cap_get_proc@plt>
  405410:	add	x1, x1, #0x648
  405414:	add	x0, x0, #0x5e8
  405418:	stp	x1, x0, [x22, #24]
  40541c:	b	4053b8 <main@@Base+0x178>
  405420:	ldr	x0, [x20, #8]
  405424:	adrp	x1, 40d000 <rtnl_listen@@Base+0x100>
  405428:	add	x1, x1, #0xc98
  40542c:	bl	4072f0 <matches@@Base>
  405430:	tst	w0, #0xff
  405434:	b.ne	40544c <main@@Base+0x20c>  // b.any
  405438:	adrp	x1, 426000 <stdout@@GLIBC_2.17+0x3cf8>
  40543c:	ldr	w0, [x1, #3464]
  405440:	add	w0, w0, #0x1
  405444:	str	w0, [x1, #3464]
  405448:	b	40528c <main@@Base+0x4c>
  40544c:	ldr	x0, [x20, #8]
  405450:	adrp	x1, 40d000 <rtnl_listen@@Base+0x100>
  405454:	add	x1, x1, #0xca0
  405458:	bl	4072f0 <matches@@Base>
  40545c:	tst	w0, #0xff
  405460:	b.ne	405480 <main@@Base+0x240>  // b.any
  405464:	adrp	x1, 40d000 <rtnl_listen@@Base+0x100>
  405468:	add	x1, x1, #0xd30
  40546c:	adrp	x0, 40d000 <rtnl_listen@@Base+0x100>
  405470:	add	x0, x0, #0xcb0
  405474:	bl	405190 <printf@plt>
  405478:	mov	w0, #0x0                   	// #0
  40547c:	bl	404d20 <exit@plt>
  405480:	ldr	x0, [x20, #8]
  405484:	adrp	x1, 40d000 <rtnl_listen@@Base+0x100>
  405488:	add	x1, x1, #0xcd0
  40548c:	bl	4072f0 <matches@@Base>
  405490:	tst	w0, #0xff
  405494:	b.eq	405308 <main@@Base+0xc8>  // b.none
  405498:	adrp	x0, 422000 <memcpy@GLIBC_2.17>
  40549c:	adrp	x1, 40d000 <rtnl_listen@@Base+0x100>
  4054a0:	ldr	x2, [x20, #8]
  4054a4:	add	x1, x1, #0xcd8
  4054a8:	ldr	x0, [x0, #768]
  4054ac:	bl	405200 <fprintf@plt>
  4054b0:	mov	w0, #0xffffffff            	// #-1
  4054b4:	bl	404d20 <exit@plt>
  4054b8:	adrp	x0, 422000 <memcpy@GLIBC_2.17>
  4054bc:	adrp	x1, 40d000 <rtnl_listen@@Base+0x100>
  4054c0:	ldr	x2, [x20, #8]
  4054c4:	add	x1, x1, #0xd20
  4054c8:	ldr	x0, [x0, #768]
  4054cc:	bl	405200 <fprintf@plt>
  4054d0:	mov	w0, #0xffffffff            	// #-1
  4054d4:	bl	404d20 <exit@plt>

00000000004054d8 <_start@@Base>:
  4054d8:	mov	x29, #0x0                   	// #0
  4054dc:	mov	x30, #0x0                   	// #0
  4054e0:	mov	x5, x0
  4054e4:	ldr	x1, [sp]
  4054e8:	add	x2, sp, #0x8
  4054ec:	mov	x6, sp
  4054f0:	movz	x0, #0x0, lsl #48
  4054f4:	movk	x0, #0x0, lsl #32
  4054f8:	movk	x0, #0x40, lsl #16
  4054fc:	movk	x0, #0x5240
  405500:	movz	x3, #0x0, lsl #48
  405504:	movk	x3, #0x0, lsl #32
  405508:	movk	x3, #0x40, lsl #16
  40550c:	movk	x3, #0xdad8
  405510:	movz	x4, #0x0, lsl #48
  405514:	movk	x4, #0x0, lsl #32
  405518:	movk	x4, #0x40, lsl #16
  40551c:	movk	x4, #0xdb58
  405520:	bl	404e90 <__libc_start_main@plt>
  405524:	bl	404fa0 <abort@plt>
  405528:	adrp	x0, 421000 <_IO_stdin_used@@Base+0x13490>
  40552c:	ldr	x0, [x0, #4040]
  405530:	cbz	x0, 405538 <_start@@Base+0x60>
  405534:	b	404f90 <__gmon_start__@plt>
  405538:	ret
  40553c:	nop
  405540:	adrp	x0, 422000 <memcpy@GLIBC_2.17>
  405544:	add	x0, x0, #0x2f8
  405548:	adrp	x1, 422000 <memcpy@GLIBC_2.17>
  40554c:	add	x1, x1, #0x2f8
  405550:	cmp	x1, x0
  405554:	b.eq	40556c <_start@@Base+0x94>  // b.none
  405558:	adrp	x1, 40d000 <rtnl_listen@@Base+0x100>
  40555c:	ldr	x1, [x1, #2936]
  405560:	cbz	x1, 40556c <_start@@Base+0x94>
  405564:	mov	x16, x1
  405568:	br	x16
  40556c:	ret
  405570:	adrp	x0, 422000 <memcpy@GLIBC_2.17>
  405574:	add	x0, x0, #0x2f8
  405578:	adrp	x1, 422000 <memcpy@GLIBC_2.17>
  40557c:	add	x1, x1, #0x2f8
  405580:	sub	x1, x1, x0
  405584:	lsr	x2, x1, #63
  405588:	add	x1, x2, x1, asr #3
  40558c:	cmp	xzr, x1, asr #1
  405590:	asr	x1, x1, #1
  405594:	b.eq	4055ac <_start@@Base+0xd4>  // b.none
  405598:	adrp	x2, 40d000 <rtnl_listen@@Base+0x100>
  40559c:	ldr	x2, [x2, #2944]
  4055a0:	cbz	x2, 4055ac <_start@@Base+0xd4>
  4055a4:	mov	x16, x2
  4055a8:	br	x16
  4055ac:	ret
  4055b0:	stp	x29, x30, [sp, #-32]!
  4055b4:	mov	x29, sp
  4055b8:	str	x19, [sp, #16]
  4055bc:	adrp	x19, 422000 <memcpy@GLIBC_2.17>
  4055c0:	ldrb	w0, [x19, #784]
  4055c4:	cbnz	w0, 4055d4 <_start@@Base+0xfc>
  4055c8:	bl	405540 <_start@@Base+0x68>
  4055cc:	mov	w0, #0x1                   	// #1
  4055d0:	strb	w0, [x19, #784]
  4055d4:	ldr	x19, [sp, #16]
  4055d8:	ldp	x29, x30, [sp], #32
  4055dc:	ret
  4055e0:	b	405570 <_start@@Base+0x98>
  4055e4:	nop
  4055e8:	stp	x29, x30, [sp, #-16]!
  4055ec:	mov	x3, x1
  4055f0:	mov	x2, #0x15                  	// #21
  4055f4:	mov	x29, sp
  4055f8:	mov	x1, #0x1                   	// #1
  4055fc:	adrp	x0, 40d000 <rtnl_listen@@Base+0x100>
  405600:	add	x0, x0, #0xb88
  405604:	bl	405090 <fwrite@plt>
  405608:	mov	w0, #0x0                   	// #0
  40560c:	ldp	x29, x30, [sp], #16
  405610:	ret
  405614:	nop
  405618:	stp	x29, x30, [sp, #-16]!
  40561c:	adrp	x3, 422000 <memcpy@GLIBC_2.17>
  405620:	mov	x2, #0x97                  	// #151
  405624:	mov	x29, sp
  405628:	ldr	x3, [x3, #768]
  40562c:	mov	x1, #0x1                   	// #1
  405630:	adrp	x0, 40d000 <rtnl_listen@@Base+0x100>
  405634:	add	x0, x0, #0xba0
  405638:	bl	405090 <fwrite@plt>
  40563c:	mov	w0, #0xffffffff            	// #-1
  405640:	bl	404d20 <exit@plt>
  405644:	nop
  405648:	mov	x3, x0
  40564c:	mov	w0, w1
  405650:	cbnz	w1, 405658 <_start@@Base+0x180>
  405654:	ret
  405658:	mov	x1, x2
  40565c:	stp	x29, x30, [sp, #-16]!
  405660:	adrp	x0, 422000 <memcpy@GLIBC_2.17>
  405664:	mov	x29, sp
  405668:	add	x2, x3, #0x8
  40566c:	ldr	x0, [x0, #768]
  405670:	ldr	x3, [x1]
  405674:	adrp	x1, 40d000 <rtnl_listen@@Base+0x100>
  405678:	add	x1, x1, #0xc38
  40567c:	bl	405200 <fprintf@plt>
  405680:	mov	w0, #0xffffffff            	// #-1
  405684:	ldp	x29, x30, [sp], #16
  405688:	ret
  40568c:	nop
  405690:	sub	sp, sp, #0x8b0
  405694:	stp	x29, x30, [sp]
  405698:	mov	x29, sp
  40569c:	stp	x19, x20, [sp, #16]
  4056a0:	mov	x19, x2
  4056a4:	ldrh	w3, [x1, #4]
  4056a8:	ldr	w2, [x1]
  4056ac:	cmp	w3, #0x10
  4056b0:	b.ne	405a78 <_start@@Base+0x5a0>  // b.any
  4056b4:	ldrb	w4, [x1, #16]
  4056b8:	sub	w3, w4, #0x1
  4056bc:	sub	w0, w4, #0x7
  4056c0:	and	w3, w3, #0xff
  4056c4:	and	w0, w0, #0xff
  4056c8:	cmp	w3, #0x2
  4056cc:	ccmp	w0, #0x1, #0x0, hi  // hi = pmore
  4056d0:	b.hi	405aa0 <_start@@Base+0x5c8>  // b.pmore
  4056d4:	subs	w3, w2, #0x14
  4056d8:	b.mi	405acc <_start@@Base+0x5f4>  // b.first
  4056dc:	add	x2, x1, #0x14
  4056e0:	add	x0, sp, #0x68
  4056e4:	mov	w1, #0x7                   	// #7
  4056e8:	stp	x21, x22, [sp, #32]
  4056ec:	stp	x23, x24, [sp, #48]
  4056f0:	bl	40d9e0 <parse_rtattr@@Base>
  4056f4:	ldr	x2, [sp, #120]
  4056f8:	cbz	x2, 405710 <_start@@Base+0x238>
  4056fc:	adrp	x1, 40d000 <rtnl_listen@@Base+0x100>
  405700:	add	x2, x2, #0x4
  405704:	mov	x0, x19
  405708:	add	x1, x1, #0xdb8
  40570c:	bl	405200 <fprintf@plt>
  405710:	ldr	x0, [sp, #112]
  405714:	cbz	x0, 40572c <_start@@Base+0x254>
  405718:	ldrh	w2, [x0, #4]
  40571c:	adrp	x1, 40d000 <rtnl_listen@@Base+0x100>
  405720:	mov	x0, x19
  405724:	add	x1, x1, #0xdc8
  405728:	bl	405200 <fprintf@plt>
  40572c:	ldr	x20, [sp, #128]
  405730:	mov	w23, #0x1                   	// #1
  405734:	cbz	x20, 405750 <_start@@Base+0x278>
  405738:	ldr	w2, [x20, #4]
  40573c:	mov	x0, x19
  405740:	adrp	x1, 40d000 <rtnl_listen@@Base+0x100>
  405744:	add	x1, x1, #0xdd8
  405748:	bl	405200 <fprintf@plt>
  40574c:	ldr	w23, [x20, #4]
  405750:	ldr	x0, [sp, #136]
  405754:	cbz	x0, 40576c <_start@@Base+0x294>
  405758:	ldr	w2, [x0, #4]
  40575c:	adrp	x1, 40d000 <rtnl_listen@@Base+0x100>
  405760:	mov	x0, x19
  405764:	add	x1, x1, #0xde8
  405768:	bl	405200 <fprintf@plt>
  40576c:	ldr	x0, [sp, #144]
  405770:	cbz	x0, 405788 <_start@@Base+0x2b0>
  405774:	ldr	w2, [x0, #4]
  405778:	adrp	x1, 40d000 <rtnl_listen@@Base+0x100>
  40577c:	mov	x0, x19
  405780:	add	x1, x1, #0xe00
  405784:	bl	405200 <fprintf@plt>
  405788:	mov	x1, x19
  40578c:	mov	w0, #0xa                   	// #10
  405790:	bl	404de0 <fputc@plt>
  405794:	ldr	x2, [sp, #152]
  405798:	cbz	x2, 4058c4 <_start@@Base+0x3ec>
  40579c:	str	x25, [sp, #64]
  4057a0:	add	x0, sp, #0xa8
  4057a4:	mov	x21, x0
  4057a8:	mov	w1, #0x100                 	// #256
  4057ac:	ldrh	w3, [x2], #4
  4057b0:	mov	w20, #0x0                   	// #0
  4057b4:	adrp	x22, 40d000 <rtnl_listen@@Base+0x100>
  4057b8:	adrp	x24, 40d000 <rtnl_listen@@Base+0x100>
  4057bc:	sub	w3, w3, #0x4
  4057c0:	add	x22, x22, #0xe30
  4057c4:	add	x24, x24, #0xe60
  4057c8:	bl	40d9e0 <parse_rtattr@@Base>
  4057cc:	mov	x3, x19
  4057d0:	adrp	x0, 40d000 <rtnl_listen@@Base+0x100>
  4057d4:	mov	x2, #0x16                  	// #22
  4057d8:	mov	x1, #0x1                   	// #1
  4057dc:	add	x0, x0, #0xe18
  4057e0:	bl	405090 <fwrite@plt>
  4057e4:	b	405804 <_start@@Base+0x32c>
  4057e8:	mov	x1, x19
  4057ec:	mov	w0, #0xa                   	// #10
  4057f0:	bl	404de0 <fputc@plt>
  4057f4:	add	w20, w20, #0x1
  4057f8:	add	x21, x21, #0x8
  4057fc:	cmp	w20, #0x100
  405800:	b.eq	4058b4 <_start@@Base+0x3dc>  // b.none
  405804:	ldr	x0, [x21]
  405808:	cbz	x0, 4057f4 <_start@@Base+0x31c>
  40580c:	mov	w2, w20
  405810:	mov	x1, x22
  405814:	mov	x0, x19
  405818:	bl	405200 <fprintf@plt>
  40581c:	ldr	x2, [x21]
  405820:	cbz	x2, 405a44 <_start@@Base+0x56c>
  405824:	ldrh	w3, [x2], #4
  405828:	add	x0, sp, #0x50
  40582c:	mov	w1, #0x2                   	// #2
  405830:	sub	w3, w3, #0x4
  405834:	bl	40d9e0 <parse_rtattr@@Base>
  405838:	ldr	x0, [sp, #88]
  40583c:	cbz	x0, 405854 <_start@@Base+0x37c>
  405840:	ldr	w2, [x0, #4]
  405844:	adrp	x1, 40d000 <rtnl_listen@@Base+0x100>
  405848:	mov	x0, x19
  40584c:	add	x1, x1, #0xe50
  405850:	bl	405200 <fprintf@plt>
  405854:	ldr	x0, [sp, #96]
  405858:	cbz	x0, 4057e8 <_start@@Base+0x310>
  40585c:	cmp	w23, #0x1
  405860:	b.ls	4057e8 <_start@@Base+0x310>  // b.plast
  405864:	ldr	w25, [x0, #4]
  405868:	mov	x1, x24
  40586c:	mov	x0, x19
  405870:	mov	w2, w25
  405874:	bl	405200 <fprintf@plt>
  405878:	cbz	w25, 4058a4 <_start@@Base+0x3cc>
  40587c:	adrp	x0, 40d000 <rtnl_listen@@Base+0x100>
  405880:	mov	x3, x19
  405884:	add	x0, x0, #0xe80
  405888:	mov	x2, #0x3                   	// #3
  40588c:	mov	x1, #0x1                   	// #1
  405890:	bl	405090 <fwrite@plt>
  405894:	tbnz	w25, #0, 405a24 <_start@@Base+0x54c>
  405898:	tbnz	w25, #1, 405a04 <_start@@Base+0x52c>
  40589c:	tbnz	w25, #2, 4059cc <_start@@Base+0x4f4>
  4058a0:	tbnz	w25, #3, 4059e8 <_start@@Base+0x510>
  4058a4:	mov	x1, x19
  4058a8:	mov	w0, #0xa                   	// #10
  4058ac:	bl	404de0 <fputc@plt>
  4058b0:	b	4057e8 <_start@@Base+0x310>
  4058b4:	mov	x1, x19
  4058b8:	mov	w0, #0xa                   	// #10
  4058bc:	bl	404de0 <fputc@plt>
  4058c0:	ldr	x25, [sp, #64]
  4058c4:	ldr	x2, [sp, #160]
  4058c8:	cbz	x2, 4059a8 <_start@@Base+0x4d0>
  4058cc:	ldrh	w3, [x2], #4
  4058d0:	adrp	x22, 40d000 <rtnl_listen@@Base+0x100>
  4058d4:	adrp	x23, 40d000 <rtnl_listen@@Base+0x100>
  4058d8:	add	x22, x22, #0xe30
  4058dc:	add	x23, x23, #0xf00
  4058e0:	add	x0, sp, #0xa8
  4058e4:	mov	w20, #0x0                   	// #0
  4058e8:	sub	w3, w3, #0x4
  4058ec:	mov	w1, #0x100                 	// #256
  4058f0:	mov	x21, x0
  4058f4:	bl	40d9e0 <parse_rtattr@@Base>
  4058f8:	mov	x3, x19
  4058fc:	adrp	x0, 40d000 <rtnl_listen@@Base+0x100>
  405900:	mov	x2, #0x13                  	// #19
  405904:	add	x0, x0, #0xed8
  405908:	mov	x1, #0x1                   	// #1
  40590c:	bl	405090 <fwrite@plt>
  405910:	ldr	x3, [x21]
  405914:	mov	w2, w20
  405918:	mov	x1, x22
  40591c:	mov	x0, x19
  405920:	cbz	x3, 40598c <_start@@Base+0x4b4>
  405924:	bl	405200 <fprintf@plt>
  405928:	ldr	x3, [x21]
  40592c:	add	x0, sp, #0x50
  405930:	mov	w1, #0x2                   	// #2
  405934:	mov	x2, x3
  405938:	cbz	x3, 405a60 <_start@@Base+0x588>
  40593c:	ldrh	w3, [x2], #4
  405940:	sub	w3, w3, #0x4
  405944:	bl	40d9e0 <parse_rtattr@@Base>
  405948:	ldr	x2, [sp, #96]
  40594c:	adrp	x1, 40d000 <rtnl_listen@@Base+0x100>
  405950:	mov	x0, x19
  405954:	add	x1, x1, #0xe50
  405958:	cbz	x2, 405964 <_start@@Base+0x48c>
  40595c:	ldr	w2, [x2, #4]
  405960:	bl	405200 <fprintf@plt>
  405964:	ldr	x3, [sp, #88]
  405968:	adrp	x1, 40d000 <rtnl_listen@@Base+0x100>
  40596c:	mov	x0, x19
  405970:	add	x1, x1, #0xef0
  405974:	add	x2, x3, #0x4
  405978:	cbz	x3, 405980 <_start@@Base+0x4a8>
  40597c:	bl	405200 <fprintf@plt>
  405980:	mov	x1, x19
  405984:	mov	w0, #0xa                   	// #10
  405988:	bl	404de0 <fputc@plt>
  40598c:	add	w20, w20, #0x1
  405990:	add	x21, x21, #0x8
  405994:	cmp	w20, #0x100
  405998:	b.ne	405910 <_start@@Base+0x438>  // b.any
  40599c:	mov	x1, x19
  4059a0:	mov	w0, #0xa                   	// #10
  4059a4:	bl	404de0 <fputc@plt>
  4059a8:	mov	x0, x19
  4059ac:	bl	4050b0 <fflush@plt>
  4059b0:	ldp	x21, x22, [sp, #32]
  4059b4:	mov	w0, #0x0                   	// #0
  4059b8:	ldp	x23, x24, [sp, #48]
  4059bc:	ldp	x29, x30, [sp]
  4059c0:	ldp	x19, x20, [sp, #16]
  4059c4:	add	sp, sp, #0x8b0
  4059c8:	ret
  4059cc:	adrp	x0, 40d000 <rtnl_listen@@Base+0x100>
  4059d0:	mov	x3, x19
  4059d4:	add	x0, x0, #0xeb8
  4059d8:	mov	x2, #0xc                   	// #12
  4059dc:	mov	x1, #0x1                   	// #1
  4059e0:	bl	405090 <fwrite@plt>
  4059e4:	tbz	w25, #3, 4058a4 <_start@@Base+0x3cc>
  4059e8:	mov	x3, x19
  4059ec:	adrp	x0, 40d000 <rtnl_listen@@Base+0x100>
  4059f0:	mov	x2, #0xb                   	// #11
  4059f4:	mov	x1, #0x1                   	// #1
  4059f8:	add	x0, x0, #0xec8
  4059fc:	bl	405090 <fwrite@plt>
  405a00:	b	4058a4 <_start@@Base+0x3cc>
  405a04:	adrp	x0, 40d000 <rtnl_listen@@Base+0x100>
  405a08:	mov	x3, x19
  405a0c:	add	x0, x0, #0xea8
  405a10:	mov	x2, #0xa                   	// #10
  405a14:	mov	x1, #0x1                   	// #1
  405a18:	bl	405090 <fwrite@plt>
  405a1c:	tbz	w25, #2, 4058a0 <_start@@Base+0x3c8>
  405a20:	b	4059cc <_start@@Base+0x4f4>
  405a24:	adrp	x0, 40d000 <rtnl_listen@@Base+0x100>
  405a28:	mov	x3, x19
  405a2c:	add	x0, x0, #0xe88
  405a30:	mov	x2, #0x1b                  	// #27
  405a34:	mov	x1, #0x1                   	// #1
  405a38:	bl	405090 <fwrite@plt>
  405a3c:	tbz	w25, #1, 40589c <_start@@Base+0x3c4>
  405a40:	b	405a04 <_start@@Base+0x52c>
  405a44:	mov	x3, x19
  405a48:	adrp	x0, 40d000 <rtnl_listen@@Base+0x100>
  405a4c:	mov	x2, #0x17                  	// #23
  405a50:	mov	x1, #0x1                   	// #1
  405a54:	add	x0, x0, #0xe38
  405a58:	bl	405090 <fwrite@plt>
  405a5c:	b	4057e8 <_start@@Base+0x310>
  405a60:	mov	x3, x19
  405a64:	mov	x0, x23
  405a68:	mov	x2, #0x15                  	// #21
  405a6c:	mov	x1, #0x1                   	// #1
  405a70:	bl	405090 <fwrite@plt>
  405a74:	b	405980 <_start@@Base+0x4a8>
  405a78:	adrp	x0, 422000 <memcpy@GLIBC_2.17>
  405a7c:	adrp	x1, 40d000 <rtnl_listen@@Base+0x100>
  405a80:	add	x1, x1, #0xd38
  405a84:	ldr	x0, [x0, #768]
  405a88:	bl	405200 <fprintf@plt>
  405a8c:	mov	w0, #0x0                   	// #0
  405a90:	ldp	x29, x30, [sp]
  405a94:	ldp	x19, x20, [sp, #16]
  405a98:	add	sp, sp, #0x8b0
  405a9c:	ret
  405aa0:	adrp	x0, 422000 <memcpy@GLIBC_2.17>
  405aa4:	mov	w2, w4
  405aa8:	adrp	x1, 40d000 <rtnl_listen@@Base+0x100>
  405aac:	add	x1, x1, #0xd70
  405ab0:	ldr	x0, [x0, #768]
  405ab4:	bl	405200 <fprintf@plt>
  405ab8:	mov	w0, #0x0                   	// #0
  405abc:	ldp	x29, x30, [sp]
  405ac0:	ldp	x19, x20, [sp, #16]
  405ac4:	add	sp, sp, #0x8b0
  405ac8:	ret
  405acc:	adrp	x0, 422000 <memcpy@GLIBC_2.17>
  405ad0:	mov	w2, w3
  405ad4:	adrp	x1, 40d000 <rtnl_listen@@Base+0x100>
  405ad8:	add	x1, x1, #0xd90
  405adc:	ldr	x0, [x0, #768]
  405ae0:	bl	405200 <fprintf@plt>
  405ae4:	mov	w0, #0xffffffff            	// #-1
  405ae8:	b	4059bc <_start@@Base+0x4e4>
  405aec:	nop
  405af0:	mov	x2, x1
  405af4:	mov	x1, x0
  405af8:	mov	x0, #0x0                   	// #0
  405afc:	b	405690 <_start@@Base+0x1b8>
  405b00:	mov	x12, #0x10a0                	// #4256
  405b04:	sub	sp, sp, x12
  405b08:	stp	x29, x30, [sp]
  405b0c:	mov	x29, sp
  405b10:	stp	x19, x20, [sp, #16]
  405b14:	mov	w19, w0
  405b18:	mov	x20, x2
  405b1c:	add	x0, sp, #0x88
  405b20:	mov	x2, #0x1014                	// #4116
  405b24:	str	x21, [sp, #32]
  405b28:	mov	w21, w1
  405b2c:	mov	w1, #0x0                   	// #0
  405b30:	bl	404ec0 <memset@plt>
  405b34:	mov	x4, #0x14                  	// #20
  405b38:	mov	w3, #0x3                   	// #3
  405b3c:	movk	x4, #0x10, lsl #32
  405b40:	add	x0, sp, #0x50
  405b44:	movk	x4, #0x5, lsl #48
  405b48:	mov	w2, #0x10                  	// #16
  405b4c:	mov	w1, #0x0                   	// #0
  405b50:	str	xzr, [sp, #56]
  405b54:	str	x4, [sp, #136]
  405b58:	strb	w3, [sp, #152]
  405b5c:	bl	40b980 <rtnl_open_byproto@@Base>
  405b60:	tbnz	w0, #31, 405d80 <_start@@Base+0x8a8>
  405b64:	cmp	w19, #0x3
  405b68:	b.eq	405bf4 <_start@@Base+0x71c>  // b.none
  405b6c:	cbz	w19, 405ba0 <_start@@Base+0x6c8>
  405b70:	mov	w19, #0x0                   	// #0
  405b74:	ldr	x0, [sp, #56]
  405b78:	bl	405030 <free@plt>
  405b7c:	add	x0, sp, #0x50
  405b80:	bl	40b950 <rtnl_close@@Base>
  405b84:	mov	w0, w19
  405b88:	mov	x12, #0x10a0                	// #4256
  405b8c:	ldp	x29, x30, [sp]
  405b90:	ldp	x19, x20, [sp, #16]
  405b94:	ldr	x21, [sp, #32]
  405b98:	add	sp, sp, x12
  405b9c:	ret
  405ba0:	ldr	w3, [sp, #108]
  405ba4:	mov	w4, #0x301                 	// #769
  405ba8:	ldr	w2, [sp, #136]
  405bac:	add	x1, sp, #0x88
  405bb0:	add	w3, w3, #0x1
  405bb4:	add	x0, sp, #0x50
  405bb8:	strh	w4, [sp, #142]
  405bbc:	dup	v0.2s, w3
  405bc0:	str	w3, [sp, #144]
  405bc4:	stur	d0, [sp, #108]
  405bc8:	bl	40c368 <rtnl_send@@Base>
  405bcc:	tbnz	w0, #31, 405cdc <_start@@Base+0x804>
  405bd0:	adrp	x0, 422000 <memcpy@GLIBC_2.17>
  405bd4:	mov	w19, #0x0                   	// #0
  405bd8:	adrp	x1, 405000 <cap_get_proc@plt>
  405bdc:	mov	w3, #0x0                   	// #0
  405be0:	ldr	x2, [x0, #776]
  405be4:	add	x1, x1, #0xaf0
  405be8:	add	x0, sp, #0x50
  405bec:	bl	40c5d0 <rtnl_dump_filter_nc@@Base>
  405bf0:	b	405b74 <_start@@Base+0x69c>
  405bf4:	cmp	w21, #0x2
  405bf8:	b.ne	405d5c <_start@@Base+0x884>  // b.any
  405bfc:	ldr	x0, [x20]
  405c00:	adrp	x1, 40d000 <rtnl_listen@@Base+0x100>
  405c04:	add	x1, x1, #0xf58
  405c08:	bl	4072f0 <matches@@Base>
  405c0c:	tst	w0, #0xff
  405c10:	b.eq	405ca8 <_start@@Base+0x7d0>  // b.none
  405c14:	ldr	x0, [x20]
  405c18:	adrp	x1, 40d000 <rtnl_listen@@Base+0x100>
  405c1c:	add	x1, x1, #0xf60
  405c20:	bl	4072f0 <matches@@Base>
  405c24:	tst	w0, #0xff
  405c28:	b.ne	405d14 <_start@@Base+0x83c>  // b.any
  405c2c:	ldr	x1, [x20, #8]
  405c30:	add	x0, sp, #0x40
  405c34:	mov	w2, #0x0                   	// #0
  405c38:	bl	4065d8 <get_u16@@Base>
  405c3c:	cbnz	w0, 405d38 <_start@@Base+0x860>
  405c40:	mov	w4, w21
  405c44:	add	x3, sp, #0x40
  405c48:	add	x0, sp, #0x88
  405c4c:	mov	w2, #0x1                   	// #1
  405c50:	mov	w1, #0x80                  	// #128
  405c54:	bl	40d3a8 <addattr_l@@Base>
  405c58:	add	x1, sp, #0x88
  405c5c:	add	x2, sp, #0x38
  405c60:	add	x0, sp, #0x50
  405c64:	bl	40c9b0 <rtnl_talk@@Base>
  405c68:	tbnz	w0, #31, 405cf0 <_start@@Base+0x818>
  405c6c:	adrp	x2, 422000 <memcpy@GLIBC_2.17>
  405c70:	mov	x0, #0x0                   	// #0
  405c74:	ldr	x1, [sp, #56]
  405c78:	ldr	x2, [x2, #776]
  405c7c:	bl	405690 <_start@@Base+0x1b8>
  405c80:	tbz	w0, #31, 405b70 <_start@@Base+0x698>
  405c84:	adrp	x1, 422000 <memcpy@GLIBC_2.17>
  405c88:	adrp	x0, 40d000 <rtnl_listen@@Base+0x100>
  405c8c:	mov	x2, #0x10                  	// #16
  405c90:	mov	w19, #0xffffffff            	// #-1
  405c94:	ldr	x3, [x1, #768]
  405c98:	add	x0, x0, #0xfa8
  405c9c:	mov	x1, #0x1                   	// #1
  405ca0:	bl	405090 <fwrite@plt>
  405ca4:	b	405b74 <_start@@Base+0x69c>
  405ca8:	ldr	x1, [x20, #8]
  405cac:	mov	x2, #0x10                  	// #16
  405cb0:	add	x0, sp, #0x40
  405cb4:	bl	408790 <strlcpy@@Base>
  405cb8:	add	x0, sp, #0x40
  405cbc:	bl	404d10 <strlen@plt>
  405cc0:	add	x3, sp, #0x40
  405cc4:	add	w4, w0, #0x1
  405cc8:	mov	w2, w21
  405ccc:	add	x0, sp, #0x88
  405cd0:	mov	w1, #0x80                  	// #128
  405cd4:	bl	40d3a8 <addattr_l@@Base>
  405cd8:	b	405c58 <_start@@Base+0x780>
  405cdc:	adrp	x0, 40d000 <rtnl_listen@@Base+0x100>
  405ce0:	mov	w19, #0xffffffff            	// #-1
  405ce4:	add	x0, x0, #0xfc0
  405ce8:	bl	404d30 <perror@plt>
  405cec:	b	405b74 <_start@@Base+0x69c>
  405cf0:	adrp	x1, 422000 <memcpy@GLIBC_2.17>
  405cf4:	adrp	x0, 40d000 <rtnl_listen@@Base+0x100>
  405cf8:	mov	x2, #0x1c                  	// #28
  405cfc:	mov	w19, #0xffffffff            	// #-1
  405d00:	ldr	x3, [x1, #768]
  405d04:	add	x0, x0, #0xf88
  405d08:	mov	x1, #0x1                   	// #1
  405d0c:	bl	405090 <fwrite@plt>
  405d10:	b	405b74 <_start@@Base+0x69c>
  405d14:	adrp	x1, 422000 <memcpy@GLIBC_2.17>
  405d18:	adrp	x0, 40d000 <rtnl_listen@@Base+0x100>
  405d1c:	mov	x2, #0xd                   	// #13
  405d20:	mov	w19, #0xffffffff            	// #-1
  405d24:	ldr	x3, [x1, #768]
  405d28:	add	x0, x0, #0xf78
  405d2c:	mov	x1, #0x1                   	// #1
  405d30:	bl	405090 <fwrite@plt>
  405d34:	b	405b74 <_start@@Base+0x69c>
  405d38:	adrp	x1, 422000 <memcpy@GLIBC_2.17>
  405d3c:	adrp	x0, 40d000 <rtnl_listen@@Base+0x100>
  405d40:	mov	x2, #0xd                   	// #13
  405d44:	mov	w19, #0xffffffff            	// #-1
  405d48:	ldr	x3, [x1, #768]
  405d4c:	add	x0, x0, #0xf68
  405d50:	mov	x1, #0x1                   	// #1
  405d54:	bl	405090 <fwrite@plt>
  405d58:	b	405b74 <_start@@Base+0x69c>
  405d5c:	adrp	x1, 422000 <memcpy@GLIBC_2.17>
  405d60:	adrp	x0, 40d000 <rtnl_listen@@Base+0x100>
  405d64:	mov	x2, #0x17                  	// #23
  405d68:	mov	w19, #0xffffffff            	// #-1
  405d6c:	ldr	x3, [x1, #768]
  405d70:	add	x0, x0, #0xf40
  405d74:	mov	x1, #0x1                   	// #1
  405d78:	bl	405090 <fwrite@plt>
  405d7c:	b	405b84 <_start@@Base+0x6ac>
  405d80:	adrp	x3, 422000 <memcpy@GLIBC_2.17>
  405d84:	mov	x2, #0x23                  	// #35
  405d88:	mov	x1, #0x1                   	// #1
  405d8c:	adrp	x0, 40d000 <rtnl_listen@@Base+0x100>
  405d90:	ldr	x3, [x3, #768]
  405d94:	add	x0, x0, #0xf18
  405d98:	bl	405090 <fwrite@plt>
  405d9c:	mov	w0, #0x1                   	// #1
  405da0:	bl	404d20 <exit@plt>
  405da4:	nop
  405da8:	stp	x29, x30, [sp, #-96]!
  405dac:	cmp	w1, #0x1
  405db0:	mov	x29, sp
  405db4:	b.le	405f14 <_start@@Base+0xa3c>
  405db8:	stp	x19, x20, [sp, #16]
  405dbc:	mov	w20, w1
  405dc0:	mov	x19, x2
  405dc4:	ldr	x0, [x2, #8]
  405dc8:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x490>
  405dcc:	add	x1, x1, #0x0
  405dd0:	bl	4072f0 <matches@@Base>
  405dd4:	tst	w0, #0xff
  405dd8:	b.eq	405e5c <_start@@Base+0x984>  // b.none
  405ddc:	ldr	x0, [x19, #8]
  405de0:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x490>
  405de4:	add	x1, x1, #0x30
  405de8:	bl	4072f0 <matches@@Base>
  405dec:	tst	w0, #0xff
  405df0:	b.eq	405e40 <_start@@Base+0x968>  // b.none
  405df4:	ldr	x0, [x19, #8]
  405df8:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x490>
  405dfc:	add	x1, x1, #0x38
  405e00:	bl	4072f0 <matches@@Base>
  405e04:	tst	w0, #0xff
  405e08:	b.eq	405e24 <_start@@Base+0x94c>  // b.none
  405e0c:	ldr	x0, [x19, #8]
  405e10:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x490>
  405e14:	add	x1, x1, #0x40
  405e18:	bl	4072f0 <matches@@Base>
  405e1c:	tst	w0, #0xff
  405e20:	b.ne	405e98 <_start@@Base+0x9c0>  // b.any
  405e24:	add	x2, x19, #0x10
  405e28:	sub	w1, w20, #0x2
  405e2c:	mov	w0, #0x0                   	// #0
  405e30:	bl	405b00 <_start@@Base+0x628>
  405e34:	ldp	x19, x20, [sp, #16]
  405e38:	ldp	x29, x30, [sp], #96
  405e3c:	ret
  405e40:	add	x2, x19, #0x10
  405e44:	sub	w1, w20, #0x2
  405e48:	mov	w0, #0x3                   	// #3
  405e4c:	bl	405b00 <_start@@Base+0x628>
  405e50:	ldp	x19, x20, [sp, #16]
  405e54:	ldp	x29, x30, [sp], #96
  405e58:	ret
  405e5c:	add	x0, sp, #0x28
  405e60:	mov	w2, #0x10                  	// #16
  405e64:	mov	w1, #0x8000                	// #32768
  405e68:	bl	40b980 <rtnl_open_byproto@@Base>
  405e6c:	tbnz	w0, #31, 405f38 <_start@@Base+0xa60>
  405e70:	adrp	x2, 422000 <memcpy@GLIBC_2.17>
  405e74:	add	x0, sp, #0x28
  405e78:	adrp	x1, 405000 <cap_get_proc@plt>
  405e7c:	add	x1, x1, #0x690
  405e80:	ldr	x2, [x2, #776]
  405e84:	bl	40cf00 <rtnl_listen@@Base>
  405e88:	asr	w0, w0, #31
  405e8c:	ldp	x19, x20, [sp, #16]
  405e90:	ldp	x29, x30, [sp], #96
  405e94:	ret
  405e98:	ldr	x0, [x19, #8]
  405e9c:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x490>
  405ea0:	add	x1, x1, #0x48
  405ea4:	bl	4072f0 <matches@@Base>
  405ea8:	tst	w0, #0xff
  405eac:	b.eq	405e24 <_start@@Base+0x94c>  // b.none
  405eb0:	ldr	x0, [x19, #8]
  405eb4:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x490>
  405eb8:	add	x1, x1, #0x50
  405ebc:	bl	4072f0 <matches@@Base>
  405ec0:	tst	w0, #0xff
  405ec4:	b.eq	405eec <_start@@Base+0xa14>  // b.none
  405ec8:	adrp	x0, 422000 <memcpy@GLIBC_2.17>
  405ecc:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x490>
  405ed0:	ldr	x2, [x19, #8]
  405ed4:	add	x1, x1, #0xf8
  405ed8:	ldr	x0, [x0, #768]
  405edc:	bl	405200 <fprintf@plt>
  405ee0:	mov	w0, #0xffffffff            	// #-1
  405ee4:	ldp	x19, x20, [sp, #16]
  405ee8:	b	405e54 <_start@@Base+0x97c>
  405eec:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x490>
  405ef0:	add	x0, x0, #0x58
  405ef4:	adrp	x1, 422000 <memcpy@GLIBC_2.17>
  405ef8:	mov	x2, #0x9f                  	// #159
  405efc:	ldr	x3, [x1, #768]
  405f00:	mov	x1, #0x1                   	// #1
  405f04:	bl	405090 <fwrite@plt>
  405f08:	mov	w0, #0xffffffff            	// #-1
  405f0c:	ldp	x19, x20, [sp, #16]
  405f10:	b	405e54 <_start@@Base+0x97c>
  405f14:	adrp	x1, 422000 <memcpy@GLIBC_2.17>
  405f18:	adrp	x0, 40d000 <rtnl_listen@@Base+0x100>
  405f1c:	mov	x2, #0x18                  	// #24
  405f20:	add	x0, x0, #0xfe0
  405f24:	ldr	x3, [x1, #768]
  405f28:	mov	x1, #0x1                   	// #1
  405f2c:	bl	405090 <fwrite@plt>
  405f30:	mov	w0, #0xffffffff            	// #-1
  405f34:	b	405e54 <_start@@Base+0x97c>
  405f38:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x490>
  405f3c:	adrp	x1, 422000 <memcpy@GLIBC_2.17>
  405f40:	add	x0, x0, #0x8
  405f44:	mov	x2, #0x22                  	// #34
  405f48:	b	405efc <_start@@Base+0xa24>
  405f4c:	nop

0000000000405f50 <read_prop@@Base>:
  405f50:	stp	x29, x30, [sp, #-288]!
  405f54:	mov	x3, x0
  405f58:	mov	x4, x1
  405f5c:	mov	x29, sp
  405f60:	str	x23, [sp, #48]
  405f64:	add	x23, sp, #0xa0
  405f68:	mov	x0, x23
  405f6c:	stp	x21, x22, [sp, #32]
  405f70:	mov	x21, x1
  405f74:	mov	x22, x2
  405f78:	mov	x1, #0x80                  	// #128
  405f7c:	adrp	x2, 40e000 <_IO_stdin_used@@Base+0x490>
  405f80:	add	x2, x2, #0x128
  405f84:	bl	404e00 <snprintf@plt>
  405f88:	sub	w0, w0, #0x1
  405f8c:	cmp	w0, #0x7e
  405f90:	b.hi	406094 <read_prop@@Base+0x144>  // b.pmore
  405f94:	mov	x0, x23
  405f98:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x490>
  405f9c:	add	x1, x1, #0x168
  405fa0:	stp	x19, x20, [sp, #16]
  405fa4:	bl	4050c0 <fopen64@plt>
  405fa8:	mov	x19, x0
  405fac:	cbz	x0, 4060e0 <read_prop@@Base+0x190>
  405fb0:	add	x20, sp, #0x50
  405fb4:	mov	x2, x0
  405fb8:	mov	w1, #0x50                  	// #80
  405fbc:	mov	x0, x20
  405fc0:	bl	405210 <fgets@plt>
  405fc4:	cbz	x0, 40611c <read_prop@@Base+0x1cc>
  405fc8:	mov	x0, x20
  405fcc:	mov	w1, #0xa                   	// #10
  405fd0:	bl	405070 <strchr@plt>
  405fd4:	cbz	x0, 405fdc <read_prop@@Base+0x8c>
  405fd8:	strb	wzr, [x0]
  405fdc:	mov	x0, x19
  405fe0:	bl	404e30 <fclose@plt>
  405fe4:	add	x1, sp, #0x48
  405fe8:	mov	x0, x20
  405fec:	mov	w2, #0x0                   	// #0
  405ff0:	bl	404ff0 <strtol@plt>
  405ff4:	ldr	x1, [sp, #72]
  405ff8:	mov	x19, x0
  405ffc:	ldrb	w0, [x1]
  406000:	cmp	w0, #0x0
  406004:	ccmp	x20, x1, #0x4, eq  // eq = none
  406008:	b.eq	4060bc <read_prop@@Base+0x16c>  // b.none
  40600c:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
  406010:	add	x0, x19, x0
  406014:	cmn	x0, #0x3
  406018:	b.hi	406038 <read_prop@@Base+0xe8>  // b.pmore
  40601c:	str	x19, [x22]
  406020:	mov	w0, #0x0                   	// #0
  406024:	ldp	x19, x20, [sp, #16]
  406028:	ldp	x21, x22, [sp, #32]
  40602c:	ldr	x23, [sp, #48]
  406030:	ldp	x29, x30, [sp], #288
  406034:	ret
  406038:	bl	4051b0 <__errno_location@plt>
  40603c:	ldr	w0, [x0]
  406040:	cmp	w0, #0x22
  406044:	b.ne	40601c <read_prop@@Base+0xcc>  // b.any
  406048:	adrp	x22, 421000 <_IO_stdin_used@@Base+0x13490>
  40604c:	ldr	x1, [x22, #3992]
  406050:	ldr	x19, [x1]
  406054:	bl	404f50 <strerror@plt>
  406058:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x490>
  40605c:	mov	x3, x0
  406060:	add	x1, x1, #0x1d8
  406064:	mov	x0, x19
  406068:	mov	x2, x23
  40606c:	bl	405200 <fprintf@plt>
  406070:	ldr	x22, [x22, #3992]
  406074:	mov	x2, x23
  406078:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x490>
  40607c:	add	x1, x1, #0x1e8
  406080:	ldr	x0, [x22]
  406084:	bl	405200 <fprintf@plt>
  406088:	mov	w0, #0xffffffff            	// #-1
  40608c:	ldp	x19, x20, [sp, #16]
  406090:	b	406028 <read_prop@@Base+0xd8>
  406094:	adrp	x3, 421000 <_IO_stdin_used@@Base+0x13490>
  406098:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x490>
  40609c:	mov	x2, #0x26                  	// #38
  4060a0:	add	x0, x0, #0x140
  4060a4:	ldr	x3, [x3, #3992]
  4060a8:	mov	x1, #0x1                   	// #1
  4060ac:	ldr	x3, [x3]
  4060b0:	bl	405090 <fwrite@plt>
  4060b4:	mov	w0, #0xffffffff            	// #-1
  4060b8:	b	406028 <read_prop@@Base+0xd8>
  4060bc:	adrp	x22, 421000 <_IO_stdin_used@@Base+0x13490>
  4060c0:	mov	x2, x20
  4060c4:	mov	x3, x23
  4060c8:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x490>
  4060cc:	ldr	x0, [x22, #3992]
  4060d0:	add	x1, x1, #0x1b0
  4060d4:	ldr	x0, [x0]
  4060d8:	bl	405200 <fprintf@plt>
  4060dc:	b	406070 <read_prop@@Base+0x120>
  4060e0:	adrp	x0, 421000 <_IO_stdin_used@@Base+0x13490>
  4060e4:	ldr	x0, [x0, #3992]
  4060e8:	ldr	x19, [x0]
  4060ec:	bl	4051b0 <__errno_location@plt>
  4060f0:	ldr	w0, [x0]
  4060f4:	bl	404f50 <strerror@plt>
  4060f8:	mov	x3, x0
  4060fc:	mov	x2, x23
  406100:	mov	x0, x19
  406104:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x490>
  406108:	add	x1, x1, #0x170
  40610c:	bl	405200 <fprintf@plt>
  406110:	mov	w0, #0xffffffff            	// #-1
  406114:	ldp	x19, x20, [sp, #16]
  406118:	b	406028 <read_prop@@Base+0xd8>
  40611c:	adrp	x22, 421000 <_IO_stdin_used@@Base+0x13490>
  406120:	mov	x2, x21
  406124:	mov	x3, x23
  406128:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x490>
  40612c:	ldr	x0, [x22, #3992]
  406130:	add	x1, x1, #0x180
  406134:	ldr	x0, [x0]
  406138:	bl	405200 <fprintf@plt>
  40613c:	mov	x0, x19
  406140:	bl	404e30 <fclose@plt>
  406144:	b	406070 <read_prop@@Base+0x120>

0000000000406148 <get_hex@@Base>:
  406148:	and	w0, w0, #0xff
  40614c:	sub	w1, w0, #0x41
  406150:	and	w1, w1, #0xff
  406154:	cmp	w1, #0x5
  406158:	b.ls	406188 <get_hex@@Base+0x40>  // b.plast
  40615c:	sub	w1, w0, #0x61
  406160:	and	w1, w1, #0xff
  406164:	cmp	w1, #0x5
  406168:	b.ls	406180 <get_hex@@Base+0x38>  // b.plast
  40616c:	sub	w0, w0, #0x30
  406170:	and	w1, w0, #0xff
  406174:	cmp	w1, #0x9
  406178:	csinv	w0, w0, wzr, ls  // ls = plast
  40617c:	ret
  406180:	sub	w0, w0, #0x57
  406184:	ret
  406188:	sub	w0, w0, #0x37
  40618c:	ret

0000000000406190 <get_integer@@Base>:
  406190:	cbz	x1, 40621c <get_integer@@Base+0x8c>
  406194:	stp	x29, x30, [sp, #-48]!
  406198:	mov	x29, sp
  40619c:	stp	x19, x20, [sp, #16]
  4061a0:	mov	x20, x0
  4061a4:	mov	x19, x1
  4061a8:	ldrb	w0, [x1]
  4061ac:	cbz	w0, 406214 <get_integer@@Base+0x84>
  4061b0:	add	x1, sp, #0x28
  4061b4:	mov	x0, x19
  4061b8:	bl	404ff0 <strtol@plt>
  4061bc:	mov	x1, x0
  4061c0:	ldr	x2, [sp, #40]
  4061c4:	cmp	x2, #0x0
  4061c8:	ccmp	x2, x19, #0x4, ne  // ne = any
  4061cc:	b.eq	406214 <get_integer@@Base+0x84>  // b.none
  4061d0:	ldrb	w0, [x2]
  4061d4:	cbnz	w0, 406214 <get_integer@@Base+0x84>
  4061d8:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
  4061dc:	add	x0, x1, x0
  4061e0:	cmn	x0, #0x3
  4061e4:	mov	w0, #0xffffffff            	// #-1
  4061e8:	b.hi	406208 <get_integer@@Base+0x78>  // b.pmore
  4061ec:	mov	x0, #0x80000000            	// #2147483648
  4061f0:	add	x0, x1, x0
  4061f4:	mov	x2, #0xffffffff            	// #4294967295
  4061f8:	cmp	x0, x2
  4061fc:	b.hi	406214 <get_integer@@Base+0x84>  // b.pmore
  406200:	mov	w0, #0x0                   	// #0
  406204:	str	w1, [x20]
  406208:	ldp	x19, x20, [sp, #16]
  40620c:	ldp	x29, x30, [sp], #48
  406210:	ret
  406214:	mov	w0, #0xffffffff            	// #-1
  406218:	b	406208 <get_integer@@Base+0x78>
  40621c:	mov	w0, #0xffffffff            	// #-1
  406220:	ret
  406224:	nop

0000000000406228 <mask2bits@@Base>:
  406228:	rev	w1, w0
  40622c:	neg	w0, w1
  406230:	bics	w0, w0, w1
  406234:	b.ne	406258 <mask2bits@@Base+0x30>  // b.any
  406238:	cbz	w1, 406250 <mask2bits@@Base+0x28>
  40623c:	nop
  406240:	add	w0, w0, #0x1
  406244:	lsl	w1, w1, #1
  406248:	cbnz	w1, 406240 <mask2bits@@Base+0x18>
  40624c:	ret
  406250:	mov	w0, #0x0                   	// #0
  406254:	ret
  406258:	mov	w0, #0xffffffff            	// #-1
  40625c:	ret

0000000000406260 <get_unsigned@@Base>:
  406260:	cbz	x1, 4062e0 <get_unsigned@@Base+0x80>
  406264:	stp	x29, x30, [sp, #-48]!
  406268:	mov	x29, sp
  40626c:	stp	x19, x20, [sp, #16]
  406270:	mov	x20, x0
  406274:	mov	x19, x1
  406278:	ldrb	w0, [x1]
  40627c:	cbz	w0, 4062d0 <get_unsigned@@Base+0x70>
  406280:	add	x1, sp, #0x28
  406284:	mov	x0, x19
  406288:	bl	404d00 <strtoul@plt>
  40628c:	mov	x1, x0
  406290:	ldr	x2, [sp, #40]
  406294:	mov	x0, #0xffffffff            	// #4294967295
  406298:	cmp	x1, x0
  40629c:	cset	w0, hi  // hi = pmore
  4062a0:	cmp	x2, #0x0
  4062a4:	ccmp	x2, x19, #0x4, ne  // ne = any
  4062a8:	b.eq	4062d0 <get_unsigned@@Base+0x70>  // b.none
  4062ac:	ldrb	w2, [x2]
  4062b0:	cmp	w2, #0x0
  4062b4:	ccmp	w0, #0x0, #0x0, eq  // eq = none
  4062b8:	b.ne	4062d0 <get_unsigned@@Base+0x70>  // b.any
  4062bc:	str	w1, [x20]
  4062c0:	mov	w0, #0x0                   	// #0
  4062c4:	ldp	x19, x20, [sp, #16]
  4062c8:	ldp	x29, x30, [sp], #48
  4062cc:	ret
  4062d0:	mov	w0, #0xffffffff            	// #-1
  4062d4:	ldp	x19, x20, [sp, #16]
  4062d8:	ldp	x29, x30, [sp], #48
  4062dc:	ret
  4062e0:	mov	w0, #0xffffffff            	// #-1
  4062e4:	ret

00000000004062e8 <get_time_rtt@@Base>:
  4062e8:	stp	x29, x30, [sp, #-80]!
  4062ec:	mov	x29, sp
  4062f0:	stp	x19, x20, [sp, #16]
  4062f4:	mov	x20, x1
  4062f8:	stp	x21, x22, [sp, #32]
  4062fc:	mov	x22, x2
  406300:	str	x23, [sp, #48]
  406304:	mov	x23, x0
  406308:	mov	x0, x1
  40630c:	mov	w1, #0x2e                  	// #46
  406310:	str	d8, [sp, #56]
  406314:	bl	405070 <strchr@plt>
  406318:	cbz	x0, 406428 <get_time_rtt@@Base+0x140>
  40631c:	add	x1, sp, #0x48
  406320:	mov	x0, x20
  406324:	bl	404d50 <strtod@plt>
  406328:	fcmpe	d0, #0.0
  40632c:	fmov	d8, d0
  406330:	b.mi	4064b8 <get_time_rtt@@Base+0x1d0>  // b.first
  406334:	ldr	x21, [sp, #72]
  406338:	cmp	x21, #0x0
  40633c:	ccmp	x21, x20, #0x4, ne  // ne = any
  406340:	b.eq	4064b8 <get_time_rtt@@Base+0x1d0>  // b.none
  406344:	mov	x0, #0x7ff0000000000000    	// #9218868437227405312
  406348:	fmov	d0, x0
  40634c:	fcmp	d8, d0
  406350:	b.ne	406468 <get_time_rtt@@Base+0x180>  // b.any
  406354:	bl	4051b0 <__errno_location@plt>
  406358:	ldr	w0, [x0]
  40635c:	cmp	w0, #0x22
  406360:	b.eq	4064b8 <get_time_rtt@@Base+0x1d0>  // b.none
  406364:	mov	w0, #0x1                   	// #1
  406368:	str	w0, [x22]
  40636c:	mov	w1, #0xffffffff            	// #-1
  406370:	ldrb	w0, [x21]
  406374:	cbz	w0, 4064b0 <get_time_rtt@@Base+0x1c8>
  406378:	str	wzr, [x22]
  40637c:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x490>
  406380:	mov	x0, x21
  406384:	add	x1, x1, #0xc00
  406388:	bl	404f10 <strcasecmp@plt>
  40638c:	cbz	w0, 406490 <get_time_rtt@@Base+0x1a8>
  406390:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x490>
  406394:	mov	x0, x21
  406398:	add	x1, x1, #0x200
  40639c:	bl	404f10 <strcasecmp@plt>
  4063a0:	cbz	w0, 406490 <get_time_rtt@@Base+0x1a8>
  4063a4:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x490>
  4063a8:	mov	x0, x21
  4063ac:	add	x1, x1, #0x208
  4063b0:	bl	404f10 <strcasecmp@plt>
  4063b4:	cbz	w0, 406490 <get_time_rtt@@Base+0x1a8>
  4063b8:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x490>
  4063bc:	mov	x0, x21
  4063c0:	add	x1, x1, #0x210
  4063c4:	bl	404f10 <strcasecmp@plt>
  4063c8:	cbz	w0, 4063f8 <get_time_rtt@@Base+0x110>
  4063cc:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x490>
  4063d0:	mov	x0, x21
  4063d4:	add	x1, x1, #0x218
  4063d8:	bl	404f10 <strcasecmp@plt>
  4063dc:	cbz	w0, 4063f8 <get_time_rtt@@Base+0x110>
  4063e0:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x490>
  4063e4:	mov	x0, x21
  4063e8:	add	x1, x1, #0x220
  4063ec:	bl	404f10 <strcasecmp@plt>
  4063f0:	cbnz	w0, 4064b8 <get_time_rtt@@Base+0x1d0>
  4063f4:	nop
  4063f8:	fcvtzu	w1, d8
  4063fc:	ucvtf	d0, w1
  406400:	fcmpe	d0, d8
  406404:	b.mi	4064b0 <get_time_rtt@@Base+0x1c8>  // b.first
  406408:	mov	w0, #0x0                   	// #0
  40640c:	str	w1, [x23]
  406410:	ldp	x19, x20, [sp, #16]
  406414:	ldp	x21, x22, [sp, #32]
  406418:	ldr	x23, [sp, #48]
  40641c:	ldr	d8, [sp, #56]
  406420:	ldp	x29, x30, [sp], #80
  406424:	ret
  406428:	add	x1, sp, #0x48
  40642c:	mov	x0, x20
  406430:	mov	w2, #0x0                   	// #0
  406434:	bl	404d00 <strtoul@plt>
  406438:	ldr	x21, [sp, #72]
  40643c:	mov	x19, x0
  406440:	cmp	x21, #0x0
  406444:	ccmp	x21, x20, #0x4, ne  // ne = any
  406448:	b.eq	4064b8 <get_time_rtt@@Base+0x1d0>  // b.none
  40644c:	cmn	x0, #0x1
  406450:	b.ne	406464 <get_time_rtt@@Base+0x17c>  // b.any
  406454:	bl	4051b0 <__errno_location@plt>
  406458:	ldr	w0, [x0]
  40645c:	cmp	w0, #0x22
  406460:	b.eq	4064b8 <get_time_rtt@@Base+0x1d0>  // b.none
  406464:	ucvtf	d8, x19
  406468:	mov	w0, #0x1                   	// #1
  40646c:	str	w0, [x22]
  406470:	ldrb	w0, [x21]
  406474:	cbz	w0, 4063f8 <get_time_rtt@@Base+0x110>
  406478:	str	wzr, [x22]
  40647c:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x490>
  406480:	mov	x0, x21
  406484:	add	x1, x1, #0xc00
  406488:	bl	404f10 <strcasecmp@plt>
  40648c:	cbnz	w0, 406390 <get_time_rtt@@Base+0xa8>
  406490:	mov	x0, #0x400000000000        	// #70368744177664
  406494:	movk	x0, #0x408f, lsl #48
  406498:	fmov	d0, x0
  40649c:	fmul	d8, d8, d0
  4064a0:	fcvtzu	w1, d8
  4064a4:	ucvtf	d0, w1
  4064a8:	fcmpe	d0, d8
  4064ac:	b.pl	406408 <get_time_rtt@@Base+0x120>  // b.nfrst
  4064b0:	add	w1, w1, #0x1
  4064b4:	b	406408 <get_time_rtt@@Base+0x120>
  4064b8:	mov	w0, #0xffffffff            	// #-1
  4064bc:	b	406410 <get_time_rtt@@Base+0x128>

00000000004064c0 <get_u64@@Base>:
  4064c0:	cbz	x1, 406548 <get_u64@@Base+0x88>
  4064c4:	stp	x29, x30, [sp, #-64]!
  4064c8:	mov	x29, sp
  4064cc:	stp	x19, x20, [sp, #16]
  4064d0:	mov	x19, x1
  4064d4:	str	x21, [sp, #32]
  4064d8:	mov	x21, x0
  4064dc:	ldrb	w0, [x1]
  4064e0:	cbz	w0, 406540 <get_u64@@Base+0x80>
  4064e4:	add	x1, sp, #0x38
  4064e8:	mov	x0, x19
  4064ec:	bl	405080 <strtoull@plt>
  4064f0:	mov	x20, x0
  4064f4:	ldr	x1, [sp, #56]
  4064f8:	cmp	x1, #0x0
  4064fc:	ccmp	x1, x19, #0x4, ne  // ne = any
  406500:	b.eq	406540 <get_u64@@Base+0x80>  // b.none
  406504:	ldrb	w0, [x1]
  406508:	cbnz	w0, 406540 <get_u64@@Base+0x80>
  40650c:	cmn	x20, #0x1
  406510:	b.eq	40652c <get_u64@@Base+0x6c>  // b.none
  406514:	mov	w0, #0x0                   	// #0
  406518:	str	x20, [x21]
  40651c:	ldp	x19, x20, [sp, #16]
  406520:	ldr	x21, [sp, #32]
  406524:	ldp	x29, x30, [sp], #64
  406528:	ret
  40652c:	bl	4051b0 <__errno_location@plt>
  406530:	ldr	w0, [x0]
  406534:	cmp	w0, #0x22
  406538:	b.ne	406514 <get_u64@@Base+0x54>  // b.any
  40653c:	nop
  406540:	mov	w0, #0xffffffff            	// #-1
  406544:	b	40651c <get_u64@@Base+0x5c>
  406548:	mov	w0, #0xffffffff            	// #-1
  40654c:	ret

0000000000406550 <get_u32@@Base>:
  406550:	cbz	x1, 4065d0 <get_u32@@Base+0x80>
  406554:	stp	x29, x30, [sp, #-48]!
  406558:	mov	x29, sp
  40655c:	stp	x19, x20, [sp, #16]
  406560:	mov	x20, x0
  406564:	mov	x19, x1
  406568:	ldrb	w0, [x1]
  40656c:	cbz	w0, 4065c0 <get_u32@@Base+0x70>
  406570:	add	x1, sp, #0x28
  406574:	mov	x0, x19
  406578:	bl	404d00 <strtoul@plt>
  40657c:	mov	x1, x0
  406580:	ldr	x2, [sp, #40]
  406584:	mov	x0, #0xffffffff            	// #4294967295
  406588:	cmp	x1, x0
  40658c:	cset	w0, hi  // hi = pmore
  406590:	cmp	x2, #0x0
  406594:	ccmp	x19, x2, #0x4, ne  // ne = any
  406598:	b.eq	4065c0 <get_u32@@Base+0x70>  // b.none
  40659c:	ldrb	w2, [x2]
  4065a0:	cmp	w2, #0x0
  4065a4:	ccmp	w0, #0x0, #0x0, eq  // eq = none
  4065a8:	b.ne	4065c0 <get_u32@@Base+0x70>  // b.any
  4065ac:	str	w1, [x20]
  4065b0:	mov	w0, #0x0                   	// #0
  4065b4:	ldp	x19, x20, [sp, #16]
  4065b8:	ldp	x29, x30, [sp], #48
  4065bc:	ret
  4065c0:	mov	w0, #0xffffffff            	// #-1
  4065c4:	ldp	x19, x20, [sp, #16]
  4065c8:	ldp	x29, x30, [sp], #48
  4065cc:	ret
  4065d0:	mov	w0, #0xffffffff            	// #-1
  4065d4:	ret

00000000004065d8 <get_u16@@Base>:
  4065d8:	cbz	x1, 406658 <get_u16@@Base+0x80>
  4065dc:	stp	x29, x30, [sp, #-48]!
  4065e0:	mov	x29, sp
  4065e4:	stp	x19, x20, [sp, #16]
  4065e8:	mov	x20, x0
  4065ec:	mov	x19, x1
  4065f0:	ldrb	w0, [x1]
  4065f4:	cbz	w0, 406648 <get_u16@@Base+0x70>
  4065f8:	add	x1, sp, #0x28
  4065fc:	mov	x0, x19
  406600:	bl	404d00 <strtoul@plt>
  406604:	mov	x1, x0
  406608:	ldr	x2, [sp, #40]
  40660c:	mov	x0, #0xffff                	// #65535
  406610:	cmp	x1, x0
  406614:	cset	w0, hi  // hi = pmore
  406618:	cmp	x2, #0x0
  40661c:	ccmp	x2, x19, #0x4, ne  // ne = any
  406620:	b.eq	406648 <get_u16@@Base+0x70>  // b.none
  406624:	ldrb	w2, [x2]
  406628:	cmp	w2, #0x0
  40662c:	ccmp	w0, #0x0, #0x0, eq  // eq = none
  406630:	b.ne	406648 <get_u16@@Base+0x70>  // b.any
  406634:	strh	w1, [x20]
  406638:	mov	w0, #0x0                   	// #0
  40663c:	ldp	x19, x20, [sp, #16]
  406640:	ldp	x29, x30, [sp], #48
  406644:	ret
  406648:	mov	w0, #0xffffffff            	// #-1
  40664c:	ldp	x19, x20, [sp, #16]
  406650:	ldp	x29, x30, [sp], #48
  406654:	ret
  406658:	mov	w0, #0xffffffff            	// #-1
  40665c:	ret

0000000000406660 <get_u8@@Base>:
  406660:	cbz	x1, 4066dc <get_u8@@Base+0x7c>
  406664:	stp	x29, x30, [sp, #-48]!
  406668:	mov	x29, sp
  40666c:	stp	x19, x20, [sp, #16]
  406670:	mov	x20, x0
  406674:	mov	x19, x1
  406678:	ldrb	w0, [x1]
  40667c:	cbz	w0, 4066cc <get_u8@@Base+0x6c>
  406680:	add	x1, sp, #0x28
  406684:	mov	x0, x19
  406688:	bl	404d00 <strtoul@plt>
  40668c:	cmp	x0, #0xff
  406690:	ldr	x2, [sp, #40]
  406694:	mov	x1, x0
  406698:	cset	w0, hi  // hi = pmore
  40669c:	cmp	x2, #0x0
  4066a0:	ccmp	x2, x19, #0x4, ne  // ne = any
  4066a4:	b.eq	4066cc <get_u8@@Base+0x6c>  // b.none
  4066a8:	ldrb	w2, [x2]
  4066ac:	cmp	w2, #0x0
  4066b0:	ccmp	w0, #0x0, #0x0, eq  // eq = none
  4066b4:	b.ne	4066cc <get_u8@@Base+0x6c>  // b.any
  4066b8:	strb	w1, [x20]
  4066bc:	mov	w0, #0x0                   	// #0
  4066c0:	ldp	x19, x20, [sp, #16]
  4066c4:	ldp	x29, x30, [sp], #48
  4066c8:	ret
  4066cc:	mov	w0, #0xffffffff            	// #-1
  4066d0:	ldp	x19, x20, [sp, #16]
  4066d4:	ldp	x29, x30, [sp], #48
  4066d8:	ret
  4066dc:	mov	w0, #0xffffffff            	// #-1
  4066e0:	ret
  4066e4:	nop

00000000004066e8 <get_s64@@Base>:
  4066e8:	stp	x29, x30, [sp, #-64]!
  4066ec:	mov	x29, sp
  4066f0:	stp	x19, x20, [sp, #16]
  4066f4:	mov	x19, x1
  4066f8:	stp	x21, x22, [sp, #32]
  4066fc:	mov	x22, x0
  406700:	mov	w21, w2
  406704:	bl	4051b0 <__errno_location@plt>
  406708:	str	wzr, [x0]
  40670c:	cbz	x19, 406780 <get_s64@@Base+0x98>
  406710:	mov	x20, x0
  406714:	ldrb	w0, [x19]
  406718:	cbz	w0, 406780 <get_s64@@Base+0x98>
  40671c:	mov	w2, w21
  406720:	add	x1, sp, #0x38
  406724:	mov	x0, x19
  406728:	bl	404d40 <strtoll@plt>
  40672c:	ldr	x2, [sp, #56]
  406730:	mov	x1, x0
  406734:	cmp	x2, #0x0
  406738:	ccmp	x2, x19, #0x4, ne  // ne = any
  40673c:	b.eq	406780 <get_s64@@Base+0x98>  // b.none
  406740:	ldrb	w0, [x2]
  406744:	cbnz	w0, 406780 <get_s64@@Base+0x98>
  406748:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
  40674c:	add	x0, x1, x0
  406750:	cmn	x0, #0x3
  406754:	b.hi	406770 <get_s64@@Base+0x88>  // b.pmore
  406758:	mov	w0, #0x0                   	// #0
  40675c:	str	x1, [x22]
  406760:	ldp	x19, x20, [sp, #16]
  406764:	ldp	x21, x22, [sp, #32]
  406768:	ldp	x29, x30, [sp], #64
  40676c:	ret
  406770:	ldr	w0, [x20]
  406774:	cmp	w0, #0x22
  406778:	b.ne	406758 <get_s64@@Base+0x70>  // b.any
  40677c:	nop
  406780:	mov	w0, #0xffffffff            	// #-1
  406784:	b	406760 <get_s64@@Base+0x78>

0000000000406788 <get_s32@@Base>:
  406788:	stp	x29, x30, [sp, #-64]!
  40678c:	mov	x29, sp
  406790:	stp	x19, x20, [sp, #16]
  406794:	mov	x19, x1
  406798:	mov	w20, w2
  40679c:	str	x21, [sp, #32]
  4067a0:	mov	x21, x0
  4067a4:	bl	4051b0 <__errno_location@plt>
  4067a8:	str	wzr, [x0]
  4067ac:	cbz	x19, 406824 <get_s32@@Base+0x9c>
  4067b0:	ldrb	w0, [x19]
  4067b4:	cbz	w0, 406824 <get_s32@@Base+0x9c>
  4067b8:	mov	w2, w20
  4067bc:	add	x1, sp, #0x38
  4067c0:	mov	x0, x19
  4067c4:	bl	404ff0 <strtol@plt>
  4067c8:	ldr	x2, [sp, #56]
  4067cc:	mov	x1, x0
  4067d0:	cmp	x2, #0x0
  4067d4:	ccmp	x2, x19, #0x4, ne  // ne = any
  4067d8:	b.eq	406824 <get_s32@@Base+0x9c>  // b.none
  4067dc:	ldrb	w0, [x2]
  4067e0:	cbnz	w0, 406824 <get_s32@@Base+0x9c>
  4067e4:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
  4067e8:	add	x0, x1, x0
  4067ec:	cmn	x0, #0x3
  4067f0:	mov	w0, #0xffffffff            	// #-1
  4067f4:	b.hi	406814 <get_s32@@Base+0x8c>  // b.pmore
  4067f8:	mov	x0, #0x80000000            	// #2147483648
  4067fc:	add	x0, x1, x0
  406800:	mov	x2, #0xffffffff            	// #4294967295
  406804:	cmp	x0, x2
  406808:	b.hi	406824 <get_s32@@Base+0x9c>  // b.pmore
  40680c:	mov	w0, #0x0                   	// #0
  406810:	str	w1, [x21]
  406814:	ldp	x19, x20, [sp, #16]
  406818:	ldr	x21, [sp, #32]
  40681c:	ldp	x29, x30, [sp], #64
  406820:	ret
  406824:	mov	w0, #0xffffffff            	// #-1
  406828:	b	406814 <get_s32@@Base+0x8c>
  40682c:	nop

0000000000406830 <get_be64@@Base>:
  406830:	stp	x29, x30, [sp, #-48]!
  406834:	mov	x29, sp
  406838:	str	x19, [sp, #16]
  40683c:	mov	x19, x0
  406840:	add	x0, sp, #0x28
  406844:	bl	4064c0 <get_u64@@Base>
  406848:	cbnz	w0, 406864 <get_be64@@Base+0x34>
  40684c:	ldr	x1, [sp, #40]
  406850:	rev	w2, w1
  406854:	lsr	x1, x1, #32
  406858:	rev	w1, w1
  40685c:	orr	x1, x1, x2, lsl #32
  406860:	str	x1, [x19]
  406864:	ldr	x19, [sp, #16]
  406868:	ldp	x29, x30, [sp], #48
  40686c:	ret

0000000000406870 <get_be32@@Base>:
  406870:	stp	x29, x30, [sp, #-48]!
  406874:	mov	x29, sp
  406878:	str	x19, [sp, #16]
  40687c:	mov	x19, x0
  406880:	add	x0, sp, #0x2c
  406884:	bl	406550 <get_u32@@Base>
  406888:	cbnz	w0, 406898 <get_be32@@Base+0x28>
  40688c:	ldr	w1, [sp, #44]
  406890:	rev	w1, w1
  406894:	str	w1, [x19]
  406898:	ldr	x19, [sp, #16]
  40689c:	ldp	x29, x30, [sp], #48
  4068a0:	ret
  4068a4:	nop

00000000004068a8 <get_be16@@Base>:
  4068a8:	stp	x29, x30, [sp, #-48]!
  4068ac:	mov	x29, sp
  4068b0:	str	x19, [sp, #16]
  4068b4:	mov	x19, x0
  4068b8:	add	x0, sp, #0x2e
  4068bc:	bl	4065d8 <get_u16@@Base>
  4068c0:	cbnz	w0, 4068d0 <get_be16@@Base+0x28>
  4068c4:	ldrh	w1, [sp, #46]
  4068c8:	rev16	w1, w1
  4068cc:	strh	w1, [x19]
  4068d0:	ldr	x19, [sp, #16]
  4068d4:	ldp	x29, x30, [sp], #48
  4068d8:	ret
  4068dc:	nop

00000000004068e0 <get_addr64@@Base>:
  4068e0:	stp	x29, x30, [sp, #-80]!
  4068e4:	mov	x29, sp
  4068e8:	stp	x19, x20, [sp, #16]
  4068ec:	mov	x19, x1
  4068f0:	mov	w20, #0x0                   	// #0
  4068f4:	stp	x21, x22, [sp, #32]
  4068f8:	mov	x22, x0
  4068fc:	add	x21, sp, #0x40
  406900:	stp	x23, x24, [sp, #48]
  406904:	add	x24, sp, #0x48
  406908:	mov	x23, #0xffff                	// #65535
  40690c:	mov	x1, x24
  406910:	mov	x0, x19
  406914:	mov	w2, #0x10                  	// #16
  406918:	bl	404d00 <strtoul@plt>
  40691c:	rev16	w4, w0
  406920:	cmp	x0, x23
  406924:	b.hi	406958 <get_addr64@@Base+0x78>  // b.pmore
  406928:	ldr	x2, [sp, #72]
  40692c:	cmp	x2, x19
  406930:	b.eq	406958 <get_addr64@@Base+0x78>  // b.none
  406934:	ldrb	w3, [x2]
  406938:	add	x19, x2, #0x1
  40693c:	strh	w4, [x21]
  406940:	add	x21, x21, #0x2
  406944:	cmp	w3, #0x3a
  406948:	ccmp	w20, #0x3, #0x4, eq  // eq = none
  40694c:	add	w20, w20, #0x1
  406950:	cbz	w3, 406970 <get_addr64@@Base+0x90>
  406954:	b.ne	40690c <get_addr64@@Base+0x2c>  // b.any
  406958:	mov	w0, #0xffffffff            	// #-1
  40695c:	ldp	x19, x20, [sp, #16]
  406960:	ldp	x21, x22, [sp, #32]
  406964:	ldp	x23, x24, [sp, #48]
  406968:	ldp	x29, x30, [sp], #80
  40696c:	ret
  406970:	ldr	x1, [sp, #64]
  406974:	mov	w0, #0x1                   	// #1
  406978:	str	x1, [x22]
  40697c:	b	40695c <get_addr64@@Base+0x7c>

0000000000406980 <af_bit_len@@Base>:
  406980:	sub	w0, w0, #0x2
  406984:	cmp	w0, #0x1a
  406988:	b.hi	40699c <af_bit_len@@Base+0x1c>  // b.pmore
  40698c:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x490>
  406990:	add	x1, x1, #0x6b0
  406994:	ldr	w0, [x1, w0, uxtw #2]
  406998:	ret
  40699c:	mov	w0, #0x0                   	// #0
  4069a0:	ret
  4069a4:	nop

00000000004069a8 <get_addr_1@@Base>:
  4069a8:	stp	x29, x30, [sp, #-80]!
  4069ac:	mov	x29, sp
  4069b0:	stp	x21, x22, [sp, #32]
  4069b4:	mov	w21, w2
  4069b8:	mov	x2, #0x108                 	// #264
  4069bc:	stp	x19, x20, [sp, #16]
  4069c0:	mov	x20, x1
  4069c4:	mov	x19, x0
  4069c8:	mov	w1, #0x0                   	// #0
  4069cc:	bl	404ec0 <memset@plt>
  4069d0:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x490>
  4069d4:	mov	x0, x20
  4069d8:	add	x1, x1, #0x228
  4069dc:	bl	404fd0 <strcmp@plt>
  4069e0:	cbnz	w0, 406a6c <get_addr_1@@Base+0xc4>
  4069e4:	and	w0, w21, #0xffffffef
  4069e8:	cmp	w0, #0xc
  4069ec:	b.eq	406b74 <get_addr_1@@Base+0x1cc>  // b.none
  4069f0:	strh	w21, [x19, #6]
  4069f4:	and	w0, w21, #0xffff
  4069f8:	bl	406980 <af_bit_len@@Base>
  4069fc:	cmp	w0, #0x0
  406a00:	add	w1, w0, #0x7
  406a04:	ldrh	w2, [x19]
  406a08:	csel	w1, w1, w0, lt  // lt = tstop
  406a0c:	ldrh	w0, [x19, #6]
  406a10:	orr	w2, w2, #0x1
  406a14:	mov	w3, #0xfffffffe            	// #-2
  406a18:	asr	w1, w1, #3
  406a1c:	strh	w2, [x19]
  406a20:	strh	w1, [x19, #2]
  406a24:	strh	w3, [x19, #4]
  406a28:	cmp	w0, #0x2
  406a2c:	b.eq	406aa4 <get_addr_1@@Base+0xfc>  // b.none
  406a30:	cmp	w0, #0xa
  406a34:	b.ne	406b38 <get_addr_1@@Base+0x190>  // b.any
  406a38:	ldr	w0, [x19, #8]
  406a3c:	ldrh	w1, [x19]
  406a40:	cbz	w0, 406b4c <get_addr_1@@Base+0x1a4>
  406a44:	ldrb	w0, [x19, #8]
  406a48:	cmp	w0, #0xff
  406a4c:	b.eq	406abc <get_addr_1@@Base+0x114>  // b.none
  406a50:	orr	w1, w1, #0x2
  406a54:	strh	w1, [x19]
  406a58:	mov	w0, #0x0                   	// #0
  406a5c:	ldp	x19, x20, [sp, #16]
  406a60:	ldp	x21, x22, [sp, #32]
  406a64:	ldp	x29, x30, [sp], #80
  406a68:	ret
  406a6c:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x490>
  406a70:	mov	x0, x20
  406a74:	add	x1, x1, #0x230
  406a78:	bl	404fd0 <strcmp@plt>
  406a7c:	cbnz	w0, 406ad0 <get_addr_1@@Base+0x128>
  406a80:	and	w0, w21, #0xffffffef
  406a84:	cmp	w0, #0xc
  406a88:	b.eq	406b74 <get_addr_1@@Base+0x1cc>  // b.none
  406a8c:	and	w0, w21, #0xffff
  406a90:	mov	w1, #0xfffffffe            	// #-2
  406a94:	strh	w1, [x19, #4]
  406a98:	cmp	w0, #0x2
  406a9c:	strh	w0, [x19, #6]
  406aa0:	b.ne	406a30 <get_addr_1@@Base+0x88>  // b.any
  406aa4:	ldr	w0, [x19, #8]
  406aa8:	ldrh	w1, [x19]
  406aac:	cbz	w0, 406b68 <get_addr_1@@Base+0x1c0>
  406ab0:	and	w0, w0, #0xf0
  406ab4:	cmp	w0, #0xe0
  406ab8:	b.ne	406a50 <get_addr_1@@Base+0xa8>  // b.any
  406abc:	mov	w2, #0xa                   	// #10
  406ac0:	mov	w0, #0x0                   	// #0
  406ac4:	orr	w1, w1, w2
  406ac8:	strh	w1, [x19]
  406acc:	b	406b3c <get_addr_1@@Base+0x194>
  406ad0:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x490>
  406ad4:	mov	x0, x20
  406ad8:	add	x1, x1, #0x238
  406adc:	bl	404fd0 <strcmp@plt>
  406ae0:	cbz	w0, 406a80 <get_addr_1@@Base+0xd8>
  406ae4:	cmp	w21, #0x11
  406ae8:	b.eq	406bfc <get_addr_1@@Base+0x254>  // b.none
  406aec:	mov	x0, x20
  406af0:	mov	w1, #0x3a                  	// #58
  406af4:	bl	405070 <strchr@plt>
  406af8:	cbz	x0, 406b7c <get_addr_1@@Base+0x1d4>
  406afc:	mov	w0, #0xa                   	// #10
  406b00:	strh	w0, [x19, #6]
  406b04:	cmp	w21, #0x0
  406b08:	ccmp	w21, #0xa, #0x4, ne  // ne = any
  406b0c:	b.ne	406b74 <get_addr_1@@Base+0x1cc>  // b.any
  406b10:	mov	x1, x20
  406b14:	add	x2, x19, #0x8
  406b18:	mov	w0, #0xa                   	// #10
  406b1c:	bl	405040 <inet_pton@plt>
  406b20:	cmp	w0, #0x0
  406b24:	b.le	406b74 <get_addr_1@@Base+0x1cc>
  406b28:	mov	w1, #0xffff0010            	// #-65520
  406b2c:	ldrh	w0, [x19, #6]
  406b30:	stur	w1, [x19, #2]
  406b34:	b	406a28 <get_addr_1@@Base+0x80>
  406b38:	mov	w0, #0x0                   	// #0
  406b3c:	ldp	x19, x20, [sp, #16]
  406b40:	ldp	x21, x22, [sp, #32]
  406b44:	ldp	x29, x30, [sp], #80
  406b48:	ret
  406b4c:	ldr	w0, [x19, #12]
  406b50:	cbnz	w0, 406a44 <get_addr_1@@Base+0x9c>
  406b54:	ldr	w0, [x19, #16]
  406b58:	cbnz	w0, 406a44 <get_addr_1@@Base+0x9c>
  406b5c:	ldr	w0, [x19, #20]
  406b60:	cbnz	w0, 406a44 <get_addr_1@@Base+0x9c>
  406b64:	nop
  406b68:	orr	w1, w1, #0x6
  406b6c:	strh	w1, [x19]
  406b70:	b	406b3c <get_addr_1@@Base+0x194>
  406b74:	mov	w0, #0xffffffff            	// #-1
  406b78:	b	406b3c <get_addr_1@@Base+0x194>
  406b7c:	cmp	w21, #0x1c
  406b80:	b.eq	406c40 <get_addr_1@@Base+0x298>  // b.none
  406b84:	mov	w0, #0x2                   	// #2
  406b88:	strh	w0, [x19, #6]
  406b8c:	tst	w21, #0xfffffffd
  406b90:	b.ne	406b74 <get_addr_1@@Base+0x1cc>  // b.any
  406b94:	add	x22, x19, #0x8
  406b98:	str	x23, [sp, #48]
  406b9c:	add	x23, sp, #0x48
  406ba0:	mov	x21, #0x0                   	// #0
  406ba4:	mov	x1, x23
  406ba8:	mov	x0, x20
  406bac:	mov	w2, #0x0                   	// #0
  406bb0:	bl	404d00 <strtoul@plt>
  406bb4:	cmp	x0, #0xff
  406bb8:	b.hi	406bf0 <get_addr_1@@Base+0x248>  // b.pmore
  406bbc:	ldr	x2, [sp, #72]
  406bc0:	cmp	x2, x20
  406bc4:	b.eq	406bf0 <get_addr_1@@Base+0x248>  // b.none
  406bc8:	strb	w0, [x22, x21]
  406bcc:	add	x20, x2, #0x1
  406bd0:	ldrb	w2, [x2]
  406bd4:	cmp	w2, #0x2e
  406bd8:	cset	w0, ne  // ne = any
  406bdc:	cmp	w21, #0x3
  406be0:	cbz	w2, 406c2c <get_addr_1@@Base+0x284>
  406be4:	csinc	w0, w0, wzr, ne  // ne = any
  406be8:	add	x21, x21, #0x1
  406bec:	cbz	w0, 406ba4 <get_addr_1@@Base+0x1fc>
  406bf0:	mov	w0, #0xffffffff            	// #-1
  406bf4:	ldr	x23, [sp, #48]
  406bf8:	b	406b3c <get_addr_1@@Base+0x194>
  406bfc:	mov	x2, x20
  406c00:	add	x0, x19, #0x8
  406c04:	mov	w1, #0x100                 	// #256
  406c08:	bl	409908 <ll_addr_a2n@@Base>
  406c0c:	tbnz	w0, #31, 406b74 <get_addr_1@@Base+0x1cc>
  406c10:	and	w1, w0, #0xffff
  406c14:	mov	w0, #0x0                   	// #0
  406c18:	strh	w1, [x19, #2]
  406c1c:	ubfiz	w1, w1, #3, #13
  406c20:	strh	w1, [x19, #4]
  406c24:	strh	w21, [x19, #6]
  406c28:	b	406b3c <get_addr_1@@Base+0x194>
  406c2c:	mov	w1, #0xffff0004            	// #-65532
  406c30:	stur	w1, [x19, #2]
  406c34:	ldrh	w0, [x19, #6]
  406c38:	ldr	x23, [sp, #48]
  406c3c:	b	406a28 <get_addr_1@@Base+0x80>
  406c40:	strh	w21, [x19, #6]
  406c44:	mov	x1, x20
  406c48:	mov	w0, w21
  406c4c:	add	x2, x19, #0x8
  406c50:	mov	x3, #0x100                 	// #256
  406c54:	bl	40a880 <mpls_pton@@Base>
  406c58:	cmp	w0, #0x0
  406c5c:	b.le	406b74 <get_addr_1@@Base+0x1cc>
  406c60:	mov	w1, #0x4                   	// #4
  406c64:	add	x2, x19, #0x4
  406c68:	movk	w1, #0x14, lsl #16
  406c6c:	mov	x0, #0x1                   	// #1
  406c70:	stur	w1, [x19, #2]
  406c74:	b	406c84 <get_addr_1@@Base+0x2dc>
  406c78:	add	x0, x0, #0x1
  406c7c:	cmp	x0, #0x41
  406c80:	b.eq	406ca0 <get_addr_1@@Base+0x2f8>  // b.none
  406c84:	ldr	w1, [x2, x0, lsl #2]
  406c88:	rev	w1, w1
  406c8c:	tbz	w1, #8, 406c78 <get_addr_1@@Base+0x2d0>
  406c90:	ubfiz	w1, w0, #2, #14
  406c94:	ldrh	w0, [x19, #6]
  406c98:	strh	w1, [x19, #2]
  406c9c:	b	406a28 <get_addr_1@@Base+0x80>
  406ca0:	ldrh	w0, [x19, #6]
  406ca4:	b	406a28 <get_addr_1@@Base+0x80>
  406ca8:	stp	x29, x30, [sp, #-320]!
  406cac:	mov	w2, #0x0                   	// #0
  406cb0:	mov	x29, sp
  406cb4:	stp	x19, x20, [sp, #16]
  406cb8:	mov	x20, x1
  406cbc:	str	x21, [sp, #32]
  406cc0:	mov	x21, x0
  406cc4:	bl	406260 <get_unsigned@@Base>
  406cc8:	mov	w19, w0
  406ccc:	cbnz	w0, 406ce4 <get_addr_1@@Base+0x33c>
  406cd0:	mov	w0, w19
  406cd4:	ldp	x19, x20, [sp, #16]
  406cd8:	ldr	x21, [sp, #32]
  406cdc:	ldp	x29, x30, [sp], #320
  406ce0:	ret
  406ce4:	mov	x1, x20
  406ce8:	add	x0, sp, #0x38
  406cec:	mov	w2, #0x2                   	// #2
  406cf0:	bl	4069a8 <get_addr_1@@Base>
  406cf4:	mov	w19, w0
  406cf8:	cbnz	w0, 406d2c <get_addr_1@@Base+0x384>
  406cfc:	ldrh	w0, [sp, #62]
  406d00:	cmp	w0, #0x2
  406d04:	b.ne	406d2c <get_addr_1@@Base+0x384>  // b.any
  406d08:	ldr	w0, [sp, #64]
  406d0c:	bl	406228 <mask2bits@@Base>
  406d10:	tbnz	w0, #31, 406d2c <get_addr_1@@Base+0x384>
  406d14:	str	w0, [x21]
  406d18:	mov	w0, w19
  406d1c:	ldp	x19, x20, [sp, #16]
  406d20:	ldr	x21, [sp, #32]
  406d24:	ldp	x29, x30, [sp], #320
  406d28:	ret
  406d2c:	mov	w19, #0xffffffff            	// #-1
  406d30:	b	406cd0 <get_addr_1@@Base+0x328>
  406d34:	nop

0000000000406d38 <get_prefix_1@@Base>:
  406d38:	stp	x29, x30, [sp, #-64]!
  406d3c:	mov	x29, sp
  406d40:	stp	x19, x20, [sp, #16]
  406d44:	mov	x19, x0
  406d48:	mov	x0, x1
  406d4c:	stp	x21, x22, [sp, #32]
  406d50:	mov	x21, x1
  406d54:	mov	w22, w2
  406d58:	mov	w1, #0x2f                  	// #47
  406d5c:	bl	405070 <strchr@plt>
  406d60:	cbz	x0, 406df8 <get_prefix_1@@Base+0xc0>
  406d64:	mov	x20, x0
  406d68:	strb	wzr, [x0]
  406d6c:	mov	x1, x21
  406d70:	mov	w2, w22
  406d74:	mov	x0, x19
  406d78:	bl	4069a8 <get_addr_1@@Base>
  406d7c:	mov	w1, #0x2f                  	// #47
  406d80:	strb	w1, [x20]
  406d84:	cbz	w0, 406d98 <get_prefix_1@@Base+0x60>
  406d88:	ldp	x19, x20, [sp, #16]
  406d8c:	ldp	x21, x22, [sp, #32]
  406d90:	ldp	x29, x30, [sp], #64
  406d94:	ret
  406d98:	ldrh	w0, [x19, #6]
  406d9c:	bl	406980 <af_bit_len@@Base>
  406da0:	mov	w21, w0
  406da4:	ldrsh	w1, [x19, #4]
  406da8:	cmn	w1, #0x2
  406dac:	b.eq	406e38 <get_prefix_1@@Base+0x100>  // b.none
  406db0:	add	x1, x20, #0x1
  406db4:	add	x0, sp, #0x3c
  406db8:	bl	406ca8 <get_addr_1@@Base+0x300>
  406dbc:	cbnz	w0, 406e38 <get_prefix_1@@Base+0x100>
  406dc0:	ldr	w1, [sp, #60]
  406dc4:	cmp	w1, w21
  406dc8:	b.hi	406e38 <get_prefix_1@@Base+0x100>  // b.pmore
  406dcc:	sxth	w1, w1
  406dd0:	mov	w2, #0x1                   	// #1
  406dd4:	ldrh	w3, [x19]
  406dd8:	mov	w0, #0x0                   	// #0
  406ddc:	strh	w1, [x19, #4]
  406de0:	orr	w1, w2, w3
  406de4:	strh	w1, [x19]
  406de8:	ldp	x19, x20, [sp, #16]
  406dec:	ldp	x21, x22, [sp, #32]
  406df0:	ldp	x29, x30, [sp], #64
  406df4:	ret
  406df8:	mov	w2, w22
  406dfc:	mov	x1, x21
  406e00:	mov	x0, x19
  406e04:	bl	4069a8 <get_addr_1@@Base>
  406e08:	cbnz	w0, 406d88 <get_prefix_1@@Base+0x50>
  406e0c:	ldrh	w0, [x19, #6]
  406e10:	bl	406980 <af_bit_len@@Base>
  406e14:	ldrsh	w1, [x19, #4]
  406e18:	cmn	w1, #0x2
  406e1c:	b.eq	406e2c <get_prefix_1@@Base+0xf4>  // b.none
  406e20:	sxth	w1, w0
  406e24:	mov	w2, #0x0                   	// #0
  406e28:	b	406dd4 <get_prefix_1@@Base+0x9c>
  406e2c:	mov	w1, #0x0                   	// #0
  406e30:	mov	w2, #0x0                   	// #0
  406e34:	b	406dd4 <get_prefix_1@@Base+0x9c>
  406e38:	mov	w0, #0xffffffff            	// #-1
  406e3c:	b	406d88 <get_prefix_1@@Base+0x50>

0000000000406e40 <get_addr_rta@@Base>:
  406e40:	mov	x3, x0
  406e44:	ldrh	w0, [x1]
  406e48:	sub	w0, w0, #0x4
  406e4c:	cmp	w0, #0xa
  406e50:	b.eq	406f28 <get_addr_rta@@Base+0xe8>  // b.none
  406e54:	b.hi	406eb8 <get_addr_rta@@Base+0x78>  // b.pmore
  406e58:	cmp	w0, #0x2
  406e5c:	b.eq	406f94 <get_addr_rta@@Base+0x154>  // b.none
  406e60:	cmp	w0, #0x4
  406e64:	b.ne	406f20 <get_addr_rta@@Base+0xe0>  // b.any
  406e68:	mov	w4, #0x2                   	// #2
  406e6c:	strh	w0, [x3, #2]
  406e70:	strh	w4, [x3, #6]
  406e74:	ldr	w0, [x1, #4]
  406e78:	str	w0, [x3, #8]
  406e7c:	cbz	w2, 406e88 <get_addr_rta@@Base+0x48>
  406e80:	cmp	w2, #0x2
  406e84:	b.ne	406fc8 <get_addr_rta@@Base+0x188>  // b.any
  406e88:	mov	w0, #0xffffffff            	// #-1
  406e8c:	strh	w0, [x3, #4]
  406e90:	ldr	w0, [x3, #8]
  406e94:	strh	wzr, [x3]
  406e98:	cbz	w0, 406f10 <get_addr_rta@@Base+0xd0>
  406e9c:	and	w0, w0, #0xf0
  406ea0:	cmp	w0, #0xe0
  406ea4:	b.eq	406f84 <get_addr_rta@@Base+0x144>  // b.none
  406ea8:	mov	w1, #0x2                   	// #2
  406eac:	mov	w0, #0x0                   	// #0
  406eb0:	strh	w1, [x3]
  406eb4:	ret
  406eb8:	cmp	w0, #0x10
  406ebc:	b.ne	406f20 <get_addr_rta@@Base+0xe0>  // b.any
  406ec0:	add	x1, x1, #0x4
  406ec4:	mov	w4, #0xa                   	// #10
  406ec8:	strh	w0, [x3, #2]
  406ecc:	strh	w4, [x3, #6]
  406ed0:	ldp	x0, x1, [x1]
  406ed4:	stp	x0, x1, [x3, #8]
  406ed8:	cbz	w2, 406ee4 <get_addr_rta@@Base+0xa4>
  406edc:	cmp	w2, #0xa
  406ee0:	b.ne	406fc8 <get_addr_rta@@Base+0x188>  // b.any
  406ee4:	mov	w0, #0xffffffff            	// #-1
  406ee8:	strh	w0, [x3, #4]
  406eec:	ldr	w0, [x3, #8]
  406ef0:	strh	wzr, [x3]
  406ef4:	cbnz	w0, 406f78 <get_addr_rta@@Base+0x138>
  406ef8:	ldr	w0, [x3, #12]
  406efc:	cbnz	w0, 406f78 <get_addr_rta@@Base+0x138>
  406f00:	ldr	w0, [x3, #16]
  406f04:	cbnz	w0, 406f78 <get_addr_rta@@Base+0x138>
  406f08:	ldr	w0, [x3, #20]
  406f0c:	cbnz	w0, 406f78 <get_addr_rta@@Base+0x138>
  406f10:	mov	w1, #0x6                   	// #6
  406f14:	mov	w0, #0x0                   	// #0
  406f18:	strh	w1, [x3]
  406f1c:	ret
  406f20:	mov	w0, #0xffffffff            	// #-1
  406f24:	ret
  406f28:	mov	w4, #0x4                   	// #4
  406f2c:	strh	w0, [x3, #2]
  406f30:	strh	w4, [x3, #6]
  406f34:	mov	w0, #0x4                   	// #4
  406f38:	mov	w4, w0
  406f3c:	ldur	x5, [x1, #4]
  406f40:	str	x5, [x3, #8]
  406f44:	ldrh	w1, [x1, #12]
  406f48:	strh	w1, [x3, #16]
  406f4c:	cbz	w2, 406fb4 <get_addr_rta@@Base+0x174>
  406f50:	cmp	w2, w0
  406f54:	b.ne	406fc8 <get_addr_rta@@Base+0x188>  // b.any
  406f58:	mov	w0, #0xffffffff            	// #-1
  406f5c:	strh	wzr, [x3]
  406f60:	strh	w0, [x3, #4]
  406f64:	cmp	w4, #0xa
  406f68:	mov	w0, #0x0                   	// #0
  406f6c:	b.ne	406eb4 <get_addr_rta@@Base+0x74>  // b.any
  406f70:	ldr	w0, [x3, #8]
  406f74:	cbz	w0, 406ef8 <get_addr_rta@@Base+0xb8>
  406f78:	ldrb	w0, [x3, #8]
  406f7c:	cmp	w0, #0xff
  406f80:	b.ne	406ea8 <get_addr_rta@@Base+0x68>  // b.any
  406f84:	mov	w1, #0xa                   	// #10
  406f88:	mov	w0, #0x0                   	// #0
  406f8c:	strh	w1, [x3]
  406f90:	ret
  406f94:	mov	w4, #0xc                   	// #12
  406f98:	strh	w0, [x3, #2]
  406f9c:	strh	w4, [x3, #6]
  406fa0:	mov	w0, #0xc                   	// #12
  406fa4:	mov	w4, w0
  406fa8:	ldrh	w1, [x1, #4]
  406fac:	strh	w1, [x3, #8]
  406fb0:	cbnz	w2, 406f50 <get_addr_rta@@Base+0x110>
  406fb4:	mov	w1, #0xffffffff            	// #-1
  406fb8:	mov	w0, #0x0                   	// #0
  406fbc:	strh	wzr, [x3]
  406fc0:	strh	w1, [x3, #4]
  406fc4:	ret
  406fc8:	mov	w0, #0xfffffffe            	// #-2
  406fcc:	ret

0000000000406fd0 <get_addr32@@Base>:
  406fd0:	stp	x29, x30, [sp, #-304]!
  406fd4:	mov	w2, #0x2                   	// #2
  406fd8:	mov	x29, sp
  406fdc:	str	x19, [sp, #16]
  406fe0:	mov	x19, x0
  406fe4:	mov	x1, x19
  406fe8:	add	x0, sp, #0x28
  406fec:	bl	4069a8 <get_addr_1@@Base>
  406ff0:	cbnz	w0, 407004 <get_addr32@@Base+0x34>
  406ff4:	ldr	w0, [sp, #48]
  406ff8:	ldr	x19, [sp, #16]
  406ffc:	ldp	x29, x30, [sp], #304
  407000:	ret
  407004:	adrp	x0, 421000 <_IO_stdin_used@@Base+0x13490>
  407008:	mov	x2, x19
  40700c:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x490>
  407010:	add	x1, x1, #0x240
  407014:	ldr	x0, [x0, #3992]
  407018:	ldr	x0, [x0]
  40701c:	bl	405200 <fprintf@plt>
  407020:	mov	w0, #0x1                   	// #1
  407024:	bl	404d20 <exit@plt>

0000000000407028 <incomplete_command@@Base>:
  407028:	stp	x29, x30, [sp, #-16]!
  40702c:	adrp	x3, 421000 <_IO_stdin_used@@Base+0x13490>
  407030:	mov	x2, #0x30                  	// #48
  407034:	mov	x29, sp
  407038:	ldr	x3, [x3, #3992]
  40703c:	mov	x1, #0x1                   	// #1
  407040:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x490>
  407044:	add	x0, x0, #0x278
  407048:	ldr	x3, [x3]
  40704c:	bl	405090 <fwrite@plt>
  407050:	mov	w0, #0xffffffff            	// #-1
  407054:	bl	404d20 <exit@plt>

0000000000407058 <missarg@@Base>:
  407058:	stp	x29, x30, [sp, #-16]!
  40705c:	adrp	x3, 421000 <_IO_stdin_used@@Base+0x13490>
  407060:	mov	x2, x0
  407064:	mov	x29, sp
  407068:	ldr	x3, [x3, #3992]
  40706c:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x490>
  407070:	add	x1, x1, #0x2b0
  407074:	ldr	x0, [x3]
  407078:	bl	405200 <fprintf@plt>
  40707c:	mov	w0, #0xffffffff            	// #-1
  407080:	bl	404d20 <exit@plt>
  407084:	nop

0000000000407088 <invarg@@Base>:
  407088:	stp	x29, x30, [sp, #-16]!
  40708c:	adrp	x4, 421000 <_IO_stdin_used@@Base+0x13490>
  407090:	mov	x3, x0
  407094:	mov	x29, sp
  407098:	ldr	x4, [x4, #3992]
  40709c:	mov	x2, x1
  4070a0:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x490>
  4070a4:	add	x1, x1, #0x2d8
  4070a8:	ldr	x0, [x4]
  4070ac:	bl	405200 <fprintf@plt>
  4070b0:	mov	w0, #0xffffffff            	// #-1
  4070b4:	bl	404d20 <exit@plt>

00000000004070b8 <duparg@@Base>:
  4070b8:	stp	x29, x30, [sp, #-16]!
  4070bc:	adrp	x4, 421000 <_IO_stdin_used@@Base+0x13490>
  4070c0:	mov	x2, x0
  4070c4:	mov	x29, sp
  4070c8:	ldr	x4, [x4, #3992]
  4070cc:	mov	x3, x1
  4070d0:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x490>
  4070d4:	add	x1, x1, #0x300
  4070d8:	ldr	x0, [x4]
  4070dc:	bl	405200 <fprintf@plt>
  4070e0:	mov	w0, #0xffffffff            	// #-1
  4070e4:	bl	404d20 <exit@plt>

00000000004070e8 <duparg2@@Base>:
  4070e8:	stp	x29, x30, [sp, #-16]!
  4070ec:	adrp	x4, 421000 <_IO_stdin_used@@Base+0x13490>
  4070f0:	mov	x2, x0
  4070f4:	mov	x29, sp
  4070f8:	ldr	x4, [x4, #3992]
  4070fc:	mov	x3, x1
  407100:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x490>
  407104:	add	x1, x1, #0x338
  407108:	ldr	x0, [x4]
  40710c:	bl	405200 <fprintf@plt>
  407110:	mov	w0, #0xffffffff            	// #-1
  407114:	bl	404d20 <exit@plt>

0000000000407118 <nodev@@Base>:
  407118:	stp	x29, x30, [sp, #-16]!
  40711c:	adrp	x3, 421000 <_IO_stdin_used@@Base+0x13490>
  407120:	mov	x2, x0
  407124:	mov	x29, sp
  407128:	ldr	x3, [x3, #3992]
  40712c:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x490>
  407130:	add	x1, x1, #0x370
  407134:	ldr	x0, [x3]
  407138:	bl	405200 <fprintf@plt>
  40713c:	mov	w0, #0xffffffff            	// #-1
  407140:	ldp	x29, x30, [sp], #16
  407144:	ret

0000000000407148 <check_ifname@@Base>:
  407148:	stp	x29, x30, [sp, #-32]!
  40714c:	mov	x29, sp
  407150:	stp	x19, x20, [sp, #16]
  407154:	mov	x20, x0
  407158:	bl	404d10 <strlen@plt>
  40715c:	cmp	x0, #0xf
  407160:	b.hi	407194 <check_ifname@@Base+0x4c>  // b.pmore
  407164:	ldrb	w19, [x20]
  407168:	cbnz	w19, 40718c <check_ifname@@Base+0x44>
  40716c:	b	407194 <check_ifname@@Base+0x4c>
  407170:	bl	404fe0 <__ctype_b_loc@plt>
  407174:	ubfiz	x19, x19, #1, #8
  407178:	ldr	x0, [x0]
  40717c:	ldrh	w0, [x0, x19]
  407180:	tbnz	w0, #13, 407194 <check_ifname@@Base+0x4c>
  407184:	ldrb	w19, [x20, #1]!
  407188:	cbz	w19, 4071a4 <check_ifname@@Base+0x5c>
  40718c:	cmp	w19, #0x2f
  407190:	b.ne	407170 <check_ifname@@Base+0x28>  // b.any
  407194:	mov	w0, #0xffffffff            	// #-1
  407198:	ldp	x19, x20, [sp, #16]
  40719c:	ldp	x29, x30, [sp], #32
  4071a0:	ret
  4071a4:	mov	w0, #0x0                   	// #0
  4071a8:	ldp	x19, x20, [sp, #16]
  4071ac:	ldp	x29, x30, [sp], #32
  4071b0:	ret
  4071b4:	nop

00000000004071b8 <check_altifname@@Base>:
  4071b8:	stp	x29, x30, [sp, #-32]!
  4071bc:	mov	x29, sp
  4071c0:	stp	x19, x20, [sp, #16]
  4071c4:	ldrb	w19, [x0]
  4071c8:	cbz	w19, 4071f8 <check_altifname@@Base+0x40>
  4071cc:	mov	x20, x0
  4071d0:	b	4071f0 <check_altifname@@Base+0x38>
  4071d4:	bl	404fe0 <__ctype_b_loc@plt>
  4071d8:	ubfiz	x19, x19, #1, #8
  4071dc:	ldr	x0, [x0]
  4071e0:	ldrh	w0, [x0, x19]
  4071e4:	tbnz	w0, #13, 4071f8 <check_altifname@@Base+0x40>
  4071e8:	ldrb	w19, [x20, #1]!
  4071ec:	cbz	w19, 407208 <check_altifname@@Base+0x50>
  4071f0:	cmp	w19, #0x2f
  4071f4:	b.ne	4071d4 <check_altifname@@Base+0x1c>  // b.any
  4071f8:	mov	w0, #0xffffffff            	// #-1
  4071fc:	ldp	x19, x20, [sp, #16]
  407200:	ldp	x29, x30, [sp], #32
  407204:	ret
  407208:	mov	w0, #0x0                   	// #0
  40720c:	ldp	x19, x20, [sp, #16]
  407210:	ldp	x29, x30, [sp], #32
  407214:	ret

0000000000407218 <get_ifname@@Base>:
  407218:	stp	x29, x30, [sp, #-48]!
  40721c:	mov	x29, sp
  407220:	stp	x19, x20, [sp, #16]
  407224:	mov	x20, x1
  407228:	str	x21, [sp, #32]
  40722c:	mov	x21, x0
  407230:	mov	x0, x1
  407234:	bl	407148 <check_ifname@@Base>
  407238:	mov	w19, w0
  40723c:	cbz	w0, 407254 <get_ifname@@Base+0x3c>
  407240:	mov	w0, w19
  407244:	ldp	x19, x20, [sp, #16]
  407248:	ldr	x21, [sp, #32]
  40724c:	ldp	x29, x30, [sp], #48
  407250:	ret
  407254:	mov	x1, x20
  407258:	mov	x0, x21
  40725c:	mov	x2, #0x10                  	// #16
  407260:	bl	405160 <strncpy@plt>
  407264:	mov	w0, w19
  407268:	ldp	x19, x20, [sp, #16]
  40726c:	ldr	x21, [sp, #32]
  407270:	ldp	x29, x30, [sp], #48
  407274:	ret

0000000000407278 <get_ifname_rta@@Base>:
  407278:	stp	x29, x30, [sp, #-32]!
  40727c:	mov	x29, sp
  407280:	str	x19, [sp, #16]
  407284:	cbz	x1, 4072a8 <get_ifname_rta@@Base+0x30>
  407288:	add	x19, x1, #0x4
  40728c:	mov	x0, x19
  407290:	bl	407148 <check_ifname@@Base>
  407294:	cmp	w0, #0x0
  407298:	csel	x0, x19, xzr, eq  // eq = none
  40729c:	ldr	x19, [sp, #16]
  4072a0:	ldp	x29, x30, [sp], #32
  4072a4:	ret
  4072a8:	mov	w19, w0
  4072ac:	adrp	x0, 421000 <_IO_stdin_used@@Base+0x13490>
  4072b0:	mov	w2, w19
  4072b4:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x490>
  4072b8:	ldr	x0, [x0, #3992]
  4072bc:	add	x1, x1, #0x390
  4072c0:	ldr	x0, [x0]
  4072c4:	bl	405200 <fprintf@plt>
  4072c8:	mov	w0, w19
  4072cc:	bl	409468 <ll_idx_n2a@@Base>
  4072d0:	mov	x19, x0
  4072d4:	mov	x0, x19
  4072d8:	bl	407148 <check_ifname@@Base>
  4072dc:	cmp	w0, #0x0
  4072e0:	csel	x0, x19, xzr, eq  // eq = none
  4072e4:	ldr	x19, [sp, #16]
  4072e8:	ldp	x29, x30, [sp], #32
  4072ec:	ret

00000000004072f0 <matches@@Base>:
  4072f0:	ldrb	w3, [x0]
  4072f4:	cbz	w3, 407330 <matches@@Base+0x40>
  4072f8:	ldrb	w2, [x1]
  4072fc:	sub	x4, x0, #0x1
  407300:	mov	x0, #0x1                   	// #1
  407304:	cbnz	w2, 40731c <matches@@Base+0x2c>
  407308:	b	407324 <matches@@Base+0x34>
  40730c:	ldrb	w2, [x1, x0]
  407310:	add	x0, x0, #0x1
  407314:	ldrb	w3, [x4, x0]
  407318:	cbz	w2, 407324 <matches@@Base+0x34>
  40731c:	cmp	w3, w2
  407320:	b.eq	40730c <matches@@Base+0x1c>  // b.none
  407324:	cmp	w3, #0x0
  407328:	cset	w0, ne  // ne = any
  40732c:	ret
  407330:	mov	w0, #0x1                   	// #1
  407334:	ret

0000000000407338 <inet_addr_match@@Base>:
  407338:	stp	x29, x30, [sp, #-48]!
  40733c:	cmp	wzr, w2, asr #5
  407340:	mov	x29, sp
  407344:	stp	x19, x20, [sp, #16]
  407348:	add	x20, x1, #0x8
  40734c:	and	w19, w2, #0x1f
  407350:	stp	x21, x22, [sp, #32]
  407354:	add	x21, x0, #0x8
  407358:	asr	w22, w2, #5
  40735c:	b.eq	407378 <inet_addr_match@@Base+0x40>  // b.none
  407360:	lsl	w2, w22, #2
  407364:	mov	x1, x20
  407368:	mov	x0, x21
  40736c:	sxtw	x2, w2
  407370:	bl	404fc0 <memcmp@plt>
  407374:	cbnz	w0, 4073b8 <inet_addr_match@@Base+0x80>
  407378:	cbz	w19, 4073a4 <inet_addr_match@@Base+0x6c>
  40737c:	sxtw	x22, w22
  407380:	neg	w2, w19
  407384:	mov	w19, #0xffffffff            	// #-1
  407388:	lsl	w2, w19, w2
  40738c:	rev	w2, w2
  407390:	ldr	w0, [x21, x22, lsl #2]
  407394:	ldr	w1, [x20, x22, lsl #2]
  407398:	eor	w0, w0, w1
  40739c:	tst	w0, w2
  4073a0:	cset	w19, ne  // ne = any
  4073a4:	mov	w0, w19
  4073a8:	ldp	x19, x20, [sp, #16]
  4073ac:	ldp	x21, x22, [sp, #32]
  4073b0:	ldp	x29, x30, [sp], #48
  4073b4:	ret
  4073b8:	mov	w19, #0xffffffff            	// #-1
  4073bc:	mov	w0, w19
  4073c0:	ldp	x19, x20, [sp, #16]
  4073c4:	ldp	x21, x22, [sp, #32]
  4073c8:	ldp	x29, x30, [sp], #48
  4073cc:	ret

00000000004073d0 <inet_addr_match_rta@@Base>:
  4073d0:	cbz	x1, 407428 <inet_addr_match_rta@@Base+0x58>
  4073d4:	stp	x29, x30, [sp, #-304]!
  4073d8:	mov	x29, sp
  4073dc:	ldrh	w2, [x0, #6]
  4073e0:	stp	x19, x20, [sp, #16]
  4073e4:	mov	x19, x0
  4073e8:	mov	w0, #0x0                   	// #0
  4073ec:	cbz	w2, 40741c <inet_addr_match_rta@@Base+0x4c>
  4073f0:	ldrsh	w3, [x19, #4]
  4073f4:	cmp	w3, #0x0
  4073f8:	b.le	40741c <inet_addr_match_rta@@Base+0x4c>
  4073fc:	add	x20, sp, #0x28
  407400:	mov	x0, x20
  407404:	bl	406e40 <get_addr_rta@@Base>
  407408:	cbnz	w0, 407430 <inet_addr_match_rta@@Base+0x60>
  40740c:	ldrsh	w2, [x19, #4]
  407410:	mov	x0, x20
  407414:	mov	x1, x19
  407418:	bl	407338 <inet_addr_match@@Base>
  40741c:	ldp	x19, x20, [sp, #16]
  407420:	ldp	x29, x30, [sp], #304
  407424:	ret
  407428:	mov	w0, #0x0                   	// #0
  40742c:	ret
  407430:	mov	w0, #0xffffffff            	// #-1
  407434:	b	40741c <inet_addr_match_rta@@Base+0x4c>

0000000000407438 <__get_hz@@Base>:
  407438:	sub	sp, sp, #0x430
  40743c:	stp	x29, x30, [sp]
  407440:	mov	x29, sp
  407444:	stp	x19, x20, [sp, #16]
  407448:	adrp	x19, 40e000 <_IO_stdin_used@@Base+0x490>
  40744c:	add	x19, x19, #0x3c0
  407450:	mov	x0, x19
  407454:	bl	4051c0 <getenv@plt>
  407458:	cbz	x0, 4074c8 <__get_hz@@Base+0x90>
  40745c:	mov	x0, x19
  407460:	bl	4051c0 <getenv@plt>
  407464:	mov	w2, #0xa                   	// #10
  407468:	mov	x1, #0x0                   	// #0
  40746c:	bl	404ff0 <strtol@plt>
  407470:	mov	w19, w0
  407474:	cbz	w0, 4074b0 <__get_hz@@Base+0x78>
  407478:	mov	w0, w19
  40747c:	ldp	x29, x30, [sp]
  407480:	ldp	x19, x20, [sp, #16]
  407484:	add	sp, sp, #0x430
  407488:	ret
  40748c:	ldr	w1, [sp, #40]
  407490:	mov	w0, #0x4240                	// #16960
  407494:	movk	w0, #0xf, lsl #16
  407498:	cmp	w1, w0
  40749c:	b.ne	407534 <__get_hz@@Base+0xfc>  // b.any
  4074a0:	ldr	w19, [sp, #44]
  4074a4:	mov	x0, x20
  4074a8:	bl	404e30 <fclose@plt>
  4074ac:	cbnz	w19, 407478 <__get_hz@@Base+0x40>
  4074b0:	mov	w19, #0x64                  	// #100
  4074b4:	mov	w0, w19
  4074b8:	ldp	x29, x30, [sp]
  4074bc:	ldp	x19, x20, [sp, #16]
  4074c0:	add	sp, sp, #0x430
  4074c4:	ret
  4074c8:	adrp	x19, 40e000 <_IO_stdin_used@@Base+0x490>
  4074cc:	add	x19, x19, #0x3c8
  4074d0:	mov	x0, x19
  4074d4:	bl	4051c0 <getenv@plt>
  4074d8:	cbz	x0, 407554 <__get_hz@@Base+0x11c>
  4074dc:	mov	x0, x19
  4074e0:	add	x19, sp, #0x30
  4074e4:	bl	4051c0 <getenv@plt>
  4074e8:	mov	x3, x0
  4074ec:	adrp	x2, 40e000 <_IO_stdin_used@@Base+0x490>
  4074f0:	mov	x0, x19
  4074f4:	add	x2, x2, #0x3d8
  4074f8:	mov	x1, #0x3ff                 	// #1023
  4074fc:	bl	404e00 <snprintf@plt>
  407500:	mov	x0, x19
  407504:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x490>
  407508:	add	x1, x1, #0x168
  40750c:	bl	4050c0 <fopen64@plt>
  407510:	mov	x20, x0
  407514:	cbz	x0, 4074b0 <__get_hz@@Base+0x78>
  407518:	add	x3, sp, #0x2c
  40751c:	add	x2, sp, #0x28
  407520:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x490>
  407524:	add	x1, x1, #0x418
  407528:	bl	404e80 <__isoc99_fscanf@plt>
  40752c:	cmp	w0, #0x2
  407530:	b.eq	40748c <__get_hz@@Base+0x54>  // b.none
  407534:	mov	x0, x20
  407538:	mov	w19, #0x64                  	// #100
  40753c:	bl	404e30 <fclose@plt>
  407540:	mov	w0, w19
  407544:	ldp	x29, x30, [sp]
  407548:	ldp	x19, x20, [sp, #16]
  40754c:	add	sp, sp, #0x430
  407550:	ret
  407554:	adrp	x19, 40e000 <_IO_stdin_used@@Base+0x490>
  407558:	add	x19, x19, #0x3e0
  40755c:	mov	x0, x19
  407560:	bl	4051c0 <getenv@plt>
  407564:	cbz	x0, 407590 <__get_hz@@Base+0x158>
  407568:	mov	x0, x19
  40756c:	add	x19, sp, #0x30
  407570:	bl	4051c0 <getenv@plt>
  407574:	mov	x3, x0
  407578:	adrp	x2, 40e000 <_IO_stdin_used@@Base+0x490>
  40757c:	mov	x0, x19
  407580:	add	x2, x2, #0x3f0
  407584:	mov	x1, #0x3ff                 	// #1023
  407588:	bl	404e00 <snprintf@plt>
  40758c:	b	407500 <__get_hz@@Base+0xc8>
  407590:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x490>
  407594:	add	x0, x0, #0x400
  407598:	add	x19, sp, #0x30
  40759c:	ldp	x2, x3, [x0]
  4075a0:	stp	x2, x3, [sp, #48]
  4075a4:	ldrb	w0, [x0, #16]
  4075a8:	strb	w0, [sp, #64]
  4075ac:	b	407500 <__get_hz@@Base+0xc8>

00000000004075b0 <__get_user_hz@@Base>:
  4075b0:	stp	x29, x30, [sp, #-16]!
  4075b4:	mov	w0, #0x2                   	// #2
  4075b8:	mov	x29, sp
  4075bc:	bl	4050f0 <sysconf@plt>
  4075c0:	ldp	x29, x30, [sp], #16
  4075c4:	ret

00000000004075c8 <rt_addr_n2a_r@@Base>:
  4075c8:	mov	x6, x2
  4075cc:	cmp	w0, #0x11
  4075d0:	mov	x2, x3
  4075d4:	b.eq	407630 <rt_addr_n2a_r@@Base+0x68>  // b.none
  4075d8:	b.gt	4075fc <rt_addr_n2a_r@@Base+0x34>
  4075dc:	cmp	w0, #0x7
  4075e0:	b.eq	407610 <rt_addr_n2a_r@@Base+0x48>  // b.none
  4075e4:	and	w5, w0, #0xfffffff7
  4075e8:	cmp	w5, #0x2
  4075ec:	b.ne	407624 <rt_addr_n2a_r@@Base+0x5c>  // b.any
  4075f0:	mov	w3, w4
  4075f4:	mov	x1, x6
  4075f8:	b	405220 <inet_ntop@plt>
  4075fc:	cmp	w0, #0x1c
  407600:	b.ne	407624 <rt_addr_n2a_r@@Base+0x5c>  // b.any
  407604:	sxtw	x3, w4
  407608:	mov	x1, x6
  40760c:	b	40a788 <mpls_ntop@@Base>
  407610:	ldrh	w0, [x6]
  407614:	cmp	w0, #0x2
  407618:	b.eq	407648 <rt_addr_n2a_r@@Base+0x80>  // b.none
  40761c:	cmp	w0, #0xa
  407620:	b.eq	40763c <rt_addr_n2a_r@@Base+0x74>  // b.none
  407624:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x490>
  407628:	add	x0, x0, #0x430
  40762c:	ret
  407630:	mov	x0, x6
  407634:	mov	w2, #0xffff                	// #65535
  407638:	b	4097d8 <ll_addr_n2a@@Base>
  40763c:	mov	w3, w4
  407640:	add	x1, x6, #0x8
  407644:	b	405220 <inet_ntop@plt>
  407648:	mov	w3, w4
  40764c:	add	x1, x6, #0x4
  407650:	b	405220 <inet_ntop@plt>
  407654:	nop

0000000000407658 <rt_addr_n2a@@Base>:
  407658:	adrp	x3, 422000 <memcpy@GLIBC_2.17>
  40765c:	mov	w4, #0x100                 	// #256
  407660:	add	x3, x3, #0x330
  407664:	b	4075c8 <rt_addr_n2a_r@@Base>

0000000000407668 <read_family@@Base>:
  407668:	stp	x29, x30, [sp, #-32]!
  40766c:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x490>
  407670:	add	x1, x1, #0x438
  407674:	mov	x29, sp
  407678:	str	x19, [sp, #16]
  40767c:	mov	x19, x0
  407680:	bl	404fd0 <strcmp@plt>
  407684:	mov	w1, #0x2                   	// #2
  407688:	cbz	w0, 407708 <read_family@@Base+0xa0>
  40768c:	mov	x0, x19
  407690:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x490>
  407694:	add	x1, x1, #0x440
  407698:	bl	404fd0 <strcmp@plt>
  40769c:	mov	w1, #0xa                   	// #10
  4076a0:	cbz	w0, 407708 <read_family@@Base+0xa0>
  4076a4:	mov	x0, x19
  4076a8:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x490>
  4076ac:	add	x1, x1, #0x448
  4076b0:	bl	404fd0 <strcmp@plt>
  4076b4:	mov	w1, #0x11                  	// #17
  4076b8:	cbz	w0, 407708 <read_family@@Base+0xa0>
  4076bc:	mov	x0, x19
  4076c0:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x490>
  4076c4:	add	x1, x1, #0x450
  4076c8:	bl	404fd0 <strcmp@plt>
  4076cc:	mov	w1, #0x4                   	// #4
  4076d0:	cbz	w0, 407708 <read_family@@Base+0xa0>
  4076d4:	mov	x0, x19
  4076d8:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x490>
  4076dc:	add	x1, x1, #0x458
  4076e0:	bl	404fd0 <strcmp@plt>
  4076e4:	mov	w1, #0x1c                  	// #28
  4076e8:	cbz	w0, 407708 <read_family@@Base+0xa0>
  4076ec:	mov	x0, x19
  4076f0:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x490>
  4076f4:	add	x1, x1, #0x460
  4076f8:	bl	404fd0 <strcmp@plt>
  4076fc:	cmp	w0, #0x0
  407700:	mov	w1, #0x7                   	// #7
  407704:	csel	w1, wzr, w1, ne  // ne = any
  407708:	mov	w0, w1
  40770c:	ldr	x19, [sp, #16]
  407710:	ldp	x29, x30, [sp], #32
  407714:	ret

0000000000407718 <family_name@@Base>:
  407718:	cmp	w0, #0x2
  40771c:	b.eq	40775c <family_name@@Base+0x44>  // b.none
  407720:	cmp	w0, #0xa
  407724:	b.eq	407774 <family_name@@Base+0x5c>  // b.none
  407728:	cmp	w0, #0x11
  40772c:	b.eq	407768 <family_name@@Base+0x50>  // b.none
  407730:	cmp	w0, #0x4
  407734:	b.eq	407780 <family_name@@Base+0x68>  // b.none
  407738:	cmp	w0, #0x1c
  40773c:	b.eq	40778c <family_name@@Base+0x74>  // b.none
  407740:	cmp	w0, #0x7
  407744:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x490>
  407748:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x490>
  40774c:	add	x1, x1, #0x460
  407750:	add	x0, x0, #0x430
  407754:	csel	x0, x0, x1, ne  // ne = any
  407758:	ret
  40775c:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x490>
  407760:	add	x0, x0, #0x438
  407764:	ret
  407768:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x490>
  40776c:	add	x0, x0, #0x448
  407770:	ret
  407774:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x490>
  407778:	add	x0, x0, #0x440
  40777c:	ret
  407780:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x490>
  407784:	add	x0, x0, #0x450
  407788:	ret
  40778c:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x490>
  407790:	add	x0, x0, #0x458
  407794:	ret

0000000000407798 <get_addr@@Base>:
  407798:	stp	x29, x30, [sp, #-48]!
  40779c:	mov	x29, sp
  4077a0:	stp	x19, x20, [sp, #16]
  4077a4:	mov	x20, x1
  4077a8:	mov	w19, w2
  4077ac:	bl	4069a8 <get_addr_1@@Base>
  4077b0:	cbnz	w0, 4077c0 <get_addr@@Base+0x28>
  4077b4:	ldp	x19, x20, [sp, #16]
  4077b8:	ldp	x29, x30, [sp], #48
  4077bc:	ret
  4077c0:	adrp	x0, 421000 <_IO_stdin_used@@Base+0x13490>
  4077c4:	str	x21, [sp, #32]
  4077c8:	ldr	x0, [x0, #3992]
  4077cc:	ldr	x21, [x0]
  4077d0:	cbz	w19, 4077fc <get_addr@@Base+0x64>
  4077d4:	mov	w0, w19
  4077d8:	bl	407718 <family_name@@Base>
  4077dc:	mov	x2, x0
  4077e0:	mov	x3, x20
  4077e4:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x490>
  4077e8:	add	x1, x1, #0x478
  4077ec:	mov	x0, x21
  4077f0:	bl	405200 <fprintf@plt>
  4077f4:	mov	w0, #0x1                   	// #1
  4077f8:	bl	404d20 <exit@plt>
  4077fc:	adrp	x2, 40e000 <_IO_stdin_used@@Base+0x490>
  407800:	add	x2, x2, #0x468
  407804:	b	4077e0 <get_addr@@Base+0x48>

0000000000407808 <get_prefix@@Base>:
  407808:	stp	x29, x30, [sp, #-48]!
  40780c:	cmp	w2, #0x11
  407810:	mov	x29, sp
  407814:	stp	x19, x20, [sp, #16]
  407818:	mov	x20, x1
  40781c:	b.eq	407838 <get_prefix@@Base+0x30>  // b.none
  407820:	mov	w19, w2
  407824:	bl	406d38 <get_prefix_1@@Base>
  407828:	cbnz	w0, 407860 <get_prefix@@Base+0x58>
  40782c:	ldp	x19, x20, [sp, #16]
  407830:	ldp	x29, x30, [sp], #48
  407834:	ret
  407838:	adrp	x0, 421000 <_IO_stdin_used@@Base+0x13490>
  40783c:	mov	x2, x1
  407840:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x490>
  407844:	add	x1, x1, #0x4b0
  407848:	ldr	x0, [x0, #3992]
  40784c:	ldr	x0, [x0]
  407850:	str	x21, [sp, #32]
  407854:	bl	405200 <fprintf@plt>
  407858:	mov	w0, #0x1                   	// #1
  40785c:	bl	404d20 <exit@plt>
  407860:	adrp	x0, 421000 <_IO_stdin_used@@Base+0x13490>
  407864:	str	x21, [sp, #32]
  407868:	ldr	x0, [x0, #3992]
  40786c:	ldr	x21, [x0]
  407870:	cbz	w19, 40789c <get_prefix@@Base+0x94>
  407874:	mov	w0, w19
  407878:	bl	407718 <family_name@@Base>
  40787c:	mov	x2, x0
  407880:	mov	x3, x20
  407884:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x490>
  407888:	add	x1, x1, #0x4f8
  40788c:	mov	x0, x21
  407890:	bl	405200 <fprintf@plt>
  407894:	mov	w0, #0x1                   	// #1
  407898:	bl	404d20 <exit@plt>
  40789c:	adrp	x2, 40e000 <_IO_stdin_used@@Base+0x490>
  4078a0:	add	x2, x2, #0x468
  4078a4:	b	407880 <get_prefix@@Base+0x78>

00000000004078a8 <format_host_r@@Base>:
  4078a8:	stp	x29, x30, [sp, #-112]!
  4078ac:	adrp	x6, 421000 <_IO_stdin_used@@Base+0x13490>
  4078b0:	mov	x29, sp
  4078b4:	ldr	x6, [x6, #4064]
  4078b8:	stp	x27, x28, [sp, #80]
  4078bc:	mov	w28, w1
  4078c0:	stp	x19, x20, [sp, #16]
  4078c4:	mov	x19, x2
  4078c8:	ldr	w1, [x6]
  4078cc:	stp	x21, x22, [sp, #32]
  4078d0:	mov	w20, w0
  4078d4:	mov	x21, x3
  4078d8:	mov	w22, w4
  4078dc:	cbz	w1, 4079b4 <format_host_r@@Base+0x10c>
  4078e0:	cmp	w28, #0x0
  4078e4:	b.le	4079dc <format_host_r@@Base+0x134>
  4078e8:	stp	x23, x24, [sp, #48]
  4078ec:	cmp	w20, #0xa
  4078f0:	stp	x25, x26, [sp, #64]
  4078f4:	b.eq	407a88 <format_host_r@@Base+0x1e0>  // b.none
  4078f8:	sxtw	x23, w28
  4078fc:	mov	w25, w20
  407900:	sub	x0, x23, #0x4
  407904:	mov	w24, w28
  407908:	add	x0, x19, x0
  40790c:	mov	x27, x19
  407910:	ldr	w26, [x0]
  407914:	mov	w0, #0xff01                	// #65281
  407918:	movk	w0, #0xff00, lsl #16
  40791c:	adrp	x1, 422000 <memcpy@GLIBC_2.17>
  407920:	add	x1, x1, #0x330
  407924:	add	x1, x1, #0x100
  407928:	umull	x0, w26, w0
  40792c:	lsr	x0, x0, #40
  407930:	add	w0, w0, w0, lsl #8
  407934:	sub	w0, w26, w0
  407938:	str	x0, [sp, #104]
  40793c:	ldr	x0, [x1, x0, lsl #3]
  407940:	str	x0, [sp, #96]
  407944:	cbz	x0, 4079fc <format_host_r@@Base+0x154>
  407948:	mov	x26, x0
  40794c:	b	407958 <format_host_r@@Base+0xb0>
  407950:	ldr	x26, [x26]
  407954:	cbz	x26, 4079fc <format_host_r@@Base+0x154>
  407958:	ldrh	w0, [x26, #22]
  40795c:	cmp	w0, w25
  407960:	b.ne	407950 <format_host_r@@Base+0xa8>  // b.any
  407964:	ldrh	w0, [x26, #18]
  407968:	cmp	w24, w0
  40796c:	b.ne	407950 <format_host_r@@Base+0xa8>  // b.any
  407970:	mov	x2, x23
  407974:	mov	x1, x27
  407978:	add	x0, x26, #0x18
  40797c:	bl	404fc0 <memcmp@plt>
  407980:	cbnz	w0, 407950 <format_host_r@@Base+0xa8>
  407984:	nop
  407988:	ldr	x0, [x26, #8]
  40798c:	cbz	x0, 4079ac <format_host_r@@Base+0x104>
  407990:	ldp	x19, x20, [sp, #16]
  407994:	ldp	x21, x22, [sp, #32]
  407998:	ldp	x23, x24, [sp, #48]
  40799c:	ldp	x25, x26, [sp, #64]
  4079a0:	ldp	x27, x28, [sp, #80]
  4079a4:	ldp	x29, x30, [sp], #112
  4079a8:	ret
  4079ac:	ldp	x23, x24, [sp, #48]
  4079b0:	ldp	x25, x26, [sp, #64]
  4079b4:	mov	w4, w22
  4079b8:	mov	x3, x21
  4079bc:	mov	x2, x19
  4079c0:	mov	w1, w28
  4079c4:	mov	w0, w20
  4079c8:	ldp	x19, x20, [sp, #16]
  4079cc:	ldp	x21, x22, [sp, #32]
  4079d0:	ldp	x27, x28, [sp, #80]
  4079d4:	ldp	x29, x30, [sp], #112
  4079d8:	b	4075c8 <rt_addr_n2a_r@@Base>
  4079dc:	bl	406980 <af_bit_len@@Base>
  4079e0:	cmp	w0, #0x0
  4079e4:	add	w5, w0, #0x7
  4079e8:	csel	w5, w5, w0, lt  // lt = tstop
  4079ec:	cmp	w0, #0x7
  4079f0:	asr	w28, w5, #3
  4079f4:	b.le	4079b4 <format_host_r@@Base+0x10c>
  4079f8:	b	4078e8 <format_host_r@@Base+0x40>
  4079fc:	mov	x0, #0x118                 	// #280
  407a00:	bl	404e50 <malloc@plt>
  407a04:	mov	x26, x0
  407a08:	cbz	x0, 4079ac <format_host_r@@Base+0x104>
  407a0c:	str	xzr, [x26, #8]
  407a10:	mov	x2, x23
  407a14:	strh	w24, [x26, #18]
  407a18:	mov	x1, x27
  407a1c:	strh	w25, [x26, #22]
  407a20:	add	x0, x0, #0x18
  407a24:	bl	404ce0 <memcpy@plt>
  407a28:	adrp	x0, 422000 <memcpy@GLIBC_2.17>
  407a2c:	add	x23, x0, #0x330
  407a30:	ldp	x0, x2, [sp, #96]
  407a34:	add	x1, x23, #0x100
  407a38:	str	x0, [x26]
  407a3c:	ldr	w0, [x23, #2312]
  407a40:	add	w0, w0, #0x1
  407a44:	str	w0, [x23, #2312]
  407a48:	str	x26, [x1, x2, lsl #3]
  407a4c:	cmp	w0, #0x1
  407a50:	b.eq	407abc <format_host_r@@Base+0x214>  // b.none
  407a54:	adrp	x0, 421000 <_IO_stdin_used@@Base+0x13490>
  407a58:	ldr	x0, [x0, #4016]
  407a5c:	ldr	x0, [x0]
  407a60:	bl	4050b0 <fflush@plt>
  407a64:	mov	w2, w25
  407a68:	mov	w1, w24
  407a6c:	mov	x0, x27
  407a70:	bl	405020 <gethostbyaddr@plt>
  407a74:	cbz	x0, 407988 <format_host_r@@Base+0xe0>
  407a78:	ldr	x0, [x0]
  407a7c:	bl	404f40 <strdup@plt>
  407a80:	str	x0, [x26, #8]
  407a84:	b	40798c <format_host_r@@Base+0xe4>
  407a88:	ldr	w0, [x19]
  407a8c:	cbnz	w0, 4078f8 <format_host_r@@Base+0x50>
  407a90:	ldr	w0, [x19, #4]
  407a94:	cbnz	w0, 4078f8 <format_host_r@@Base+0x50>
  407a98:	ldr	w0, [x19, #8]
  407a9c:	cmn	w0, #0x10, lsl #12
  407aa0:	b.ne	4078f8 <format_host_r@@Base+0x50>  // b.any
  407aa4:	add	x27, x19, #0xc
  407aa8:	mov	x23, #0x4                   	// #4
  407aac:	mov	x0, x27
  407ab0:	mov	w24, w23
  407ab4:	mov	w25, #0x2                   	// #2
  407ab8:	b	407910 <format_host_r@@Base+0x68>
  407abc:	bl	404d70 <sethostent@plt>
  407ac0:	b	407a54 <format_host_r@@Base+0x1ac>
  407ac4:	nop

0000000000407ac8 <format_host@@Base>:
  407ac8:	adrp	x3, 422000 <memcpy@GLIBC_2.17>
  407acc:	add	x3, x3, #0x330
  407ad0:	add	x3, x3, #0x910
  407ad4:	mov	w4, #0x100                 	// #256
  407ad8:	b	4078a8 <format_host_r@@Base>
  407adc:	nop

0000000000407ae0 <hexstring_n2a@@Base>:
  407ae0:	stp	x29, x30, [sp, #-80]!
  407ae4:	cmp	w1, #0x0
  407ae8:	ccmp	w3, #0x2, #0x4, gt
  407aec:	mov	x29, sp
  407af0:	stp	x23, x24, [sp, #48]
  407af4:	mov	x24, x2
  407af8:	b.le	407b68 <hexstring_n2a@@Base+0x88>
  407afc:	mov	w23, w1
  407b00:	stp	x19, x20, [sp, #16]
  407b04:	mov	x20, x2
  407b08:	stp	x21, x22, [sp, #32]
  407b0c:	sub	x22, x0, #0x1
  407b10:	add	w21, w3, w2
  407b14:	str	x25, [sp, #64]
  407b18:	adrp	x25, 40e000 <_IO_stdin_used@@Base+0x490>
  407b1c:	add	x25, x25, #0x528
  407b20:	mov	x19, #0x1                   	// #1
  407b24:	nop
  407b28:	ldrb	w2, [x22, x19]
  407b2c:	mov	x0, x20
  407b30:	mov	x1, x25
  407b34:	add	x20, x20, #0x2
  407b38:	bl	404da0 <sprintf@plt>
  407b3c:	cmp	w23, w19
  407b40:	sub	w3, w21, w20
  407b44:	cset	w0, le
  407b48:	cmp	w3, #0x2
  407b4c:	cset	w3, le
  407b50:	add	x19, x19, #0x1
  407b54:	orr	w0, w0, w3
  407b58:	cbz	w0, 407b28 <hexstring_n2a@@Base+0x48>
  407b5c:	ldp	x19, x20, [sp, #16]
  407b60:	ldp	x21, x22, [sp, #32]
  407b64:	ldr	x25, [sp, #64]
  407b68:	mov	x0, x24
  407b6c:	ldp	x23, x24, [sp, #48]
  407b70:	ldp	x29, x30, [sp], #80
  407b74:	ret

0000000000407b78 <hexstring_a2n@@Base>:
  407b78:	stp	x29, x30, [sp, #-112]!
  407b7c:	mov	x29, sp
  407b80:	stp	x21, x22, [sp, #32]
  407b84:	mov	x22, x1
  407b88:	stp	x23, x24, [sp, #48]
  407b8c:	mov	w23, w2
  407b90:	stp	x25, x26, [sp, #64]
  407b94:	mov	x25, x3
  407b98:	mov	x26, x0
  407b9c:	bl	404d10 <strlen@plt>
  407ba0:	tbnz	w0, #0, 407c8c <hexstring_a2n@@Base+0x114>
  407ba4:	str	x27, [sp, #80]
  407ba8:	cbz	w23, 407cbc <hexstring_a2n@@Base+0x144>
  407bac:	mov	x3, x0
  407bb0:	add	x21, sp, #0x60
  407bb4:	add	x24, sp, #0x68
  407bb8:	stp	x19, x20, [sp, #16]
  407bbc:	and	x20, x0, #0x1
  407bc0:	b	407be8 <hexstring_a2n@@Base+0x70>
  407bc4:	ldr	x1, [sp, #104]
  407bc8:	ldrb	w1, [x1]
  407bcc:	cbnz	w1, 407c44 <hexstring_a2n@@Base+0xcc>
  407bd0:	strb	w4, [x22, x20]
  407bd4:	add	x20, x20, #0x1
  407bd8:	cmp	w23, w20
  407bdc:	b.ls	407c64 <hexstring_a2n@@Base+0xec>  // b.plast
  407be0:	bl	404d10 <strlen@plt>
  407be4:	mov	x3, x0
  407be8:	mov	x1, x26
  407bec:	mov	x0, x21
  407bf0:	cmp	x3, #0x1
  407bf4:	mov	w27, w20
  407bf8:	mov	x2, #0x2                   	// #2
  407bfc:	b.ls	407c64 <hexstring_a2n@@Base+0xec>  // b.plast
  407c00:	bl	405160 <strncpy@plt>
  407c04:	strb	wzr, [sp, #98]
  407c08:	bl	4051b0 <__errno_location@plt>
  407c0c:	mov	x19, x0
  407c10:	mov	x1, x24
  407c14:	mov	x0, x21
  407c18:	mov	w2, #0x10                  	// #16
  407c1c:	add	x26, x26, #0x2
  407c20:	str	wzr, [x19]
  407c24:	add	w27, w27, #0x1
  407c28:	bl	404d00 <strtoul@plt>
  407c2c:	mov	x4, x0
  407c30:	ldr	w1, [x19]
  407c34:	cmp	w4, #0xff
  407c38:	mov	x0, x26
  407c3c:	ccmp	w1, #0x0, #0x0, ls  // ls = plast
  407c40:	b.eq	407bc4 <hexstring_a2n@@Base+0x4c>  // b.none
  407c44:	mov	x0, #0x0                   	// #0
  407c48:	ldp	x19, x20, [sp, #16]
  407c4c:	ldp	x21, x22, [sp, #32]
  407c50:	ldp	x23, x24, [sp, #48]
  407c54:	ldp	x25, x26, [sp, #64]
  407c58:	ldr	x27, [sp, #80]
  407c5c:	ldp	x29, x30, [sp], #112
  407c60:	ret
  407c64:	ldp	x19, x20, [sp, #16]
  407c68:	mov	x0, x22
  407c6c:	cbz	x25, 407ca4 <hexstring_a2n@@Base+0x12c>
  407c70:	str	w27, [x25]
  407c74:	ldp	x21, x22, [sp, #32]
  407c78:	ldp	x23, x24, [sp, #48]
  407c7c:	ldp	x25, x26, [sp, #64]
  407c80:	ldr	x27, [sp, #80]
  407c84:	ldp	x29, x30, [sp], #112
  407c88:	ret
  407c8c:	mov	x0, #0x0                   	// #0
  407c90:	ldp	x21, x22, [sp, #32]
  407c94:	ldp	x23, x24, [sp, #48]
  407c98:	ldp	x25, x26, [sp, #64]
  407c9c:	ldp	x29, x30, [sp], #112
  407ca0:	ret
  407ca4:	ldp	x21, x22, [sp, #32]
  407ca8:	ldp	x23, x24, [sp, #48]
  407cac:	ldp	x25, x26, [sp, #64]
  407cb0:	ldr	x27, [sp, #80]
  407cb4:	ldp	x29, x30, [sp], #112
  407cb8:	ret
  407cbc:	mov	w27, #0x0                   	// #0
  407cc0:	b	407c68 <hexstring_a2n@@Base+0xf0>
  407cc4:	nop

0000000000407cc8 <hex2mem@@Base>:
  407cc8:	cmp	w2, #0x0
  407ccc:	b.le	407d58 <hex2mem@@Base+0x90>
  407cd0:	stp	x29, x30, [sp, #-48]!
  407cd4:	sub	w2, w2, #0x1
  407cd8:	mov	x29, sp
  407cdc:	str	x21, [sp, #32]
  407ce0:	add	x21, x1, #0x1
  407ce4:	add	x21, x21, x2
  407ce8:	stp	x19, x20, [sp, #16]
  407cec:	mov	x19, x1
  407cf0:	add	x20, x0, #0x1
  407cf4:	b	407d24 <hex2mem@@Base+0x5c>
  407cf8:	ubfiz	w0, w0, #4, #4
  407cfc:	strb	w0, [x19]
  407d00:	add	x20, x20, #0x2
  407d04:	ldurb	w0, [x20, #-2]
  407d08:	bl	406148 <get_hex@@Base>
  407d0c:	tbnz	w0, #31, 407d30 <hex2mem@@Base+0x68>
  407d10:	ldrb	w1, [x19]
  407d14:	orr	w0, w0, w1
  407d18:	strb	w0, [x19], #1
  407d1c:	cmp	x19, x21
  407d20:	b.eq	407d44 <hex2mem@@Base+0x7c>  // b.none
  407d24:	ldurb	w0, [x20, #-1]
  407d28:	bl	406148 <get_hex@@Base>
  407d2c:	tbz	w0, #31, 407cf8 <hex2mem@@Base+0x30>
  407d30:	mov	w0, #0xffffffff            	// #-1
  407d34:	ldp	x19, x20, [sp, #16]
  407d38:	ldr	x21, [sp, #32]
  407d3c:	ldp	x29, x30, [sp], #48
  407d40:	ret
  407d44:	mov	w0, #0x0                   	// #0
  407d48:	ldp	x19, x20, [sp, #16]
  407d4c:	ldr	x21, [sp, #32]
  407d50:	ldp	x29, x30, [sp], #48
  407d54:	ret
  407d58:	mov	w0, #0x0                   	// #0
  407d5c:	ret

0000000000407d60 <addr64_n2a@@Base>:
  407d60:	stp	x29, x30, [sp, #-96]!
  407d64:	rev16	w3, w0
  407d68:	and	w3, w3, #0xffff
  407d6c:	mov	x29, sp
  407d70:	stp	x19, x20, [sp, #16]
  407d74:	add	x20, sp, #0x58
  407d78:	mov	x19, #0x0                   	// #0
  407d7c:	stp	x21, x22, [sp, #32]
  407d80:	mov	x21, x1
  407d84:	mov	x22, x2
  407d88:	stp	x23, x24, [sp, #48]
  407d8c:	adrp	x24, 40e000 <_IO_stdin_used@@Base+0x490>
  407d90:	add	x23, x20, #0x6
  407d94:	add	x24, x24, #0x538
  407d98:	str	x25, [sp, #64]
  407d9c:	adrp	x25, 40e000 <_IO_stdin_used@@Base+0x490>
  407da0:	add	x25, x25, #0x530
  407da4:	str	x0, [sp, #88]
  407da8:	mov	x4, x25
  407dac:	mov	x2, x24
  407db0:	sub	x1, x22, x19
  407db4:	add	x0, x21, x19
  407db8:	bl	404e00 <snprintf@plt>
  407dbc:	tbnz	w0, #31, 407dfc <addr64_n2a@@Base+0x9c>
  407dc0:	ldrh	w3, [x20, #2]!
  407dc4:	add	x19, x19, w0, sxtw
  407dc8:	rev16	w3, w3
  407dcc:	cmp	x23, x20
  407dd0:	and	w3, w3, #0xffff
  407dd4:	b.ne	407da8 <addr64_n2a@@Base+0x48>  // b.any
  407dd8:	sub	x1, x22, x19
  407ddc:	add	x0, x21, x19
  407de0:	mov	x2, x24
  407de4:	adrp	x4, 40e000 <_IO_stdin_used@@Base+0x490>
  407de8:	add	x4, x4, #0x2a8
  407dec:	bl	404e00 <snprintf@plt>
  407df0:	cmp	w0, #0x0
  407df4:	add	x19, x19, w0, sxtw
  407df8:	csel	w0, w0, w19, lt  // lt = tstop
  407dfc:	ldp	x19, x20, [sp, #16]
  407e00:	ldp	x21, x22, [sp, #32]
  407e04:	ldp	x23, x24, [sp, #48]
  407e08:	ldr	x25, [sp, #64]
  407e0c:	ldp	x29, x30, [sp], #96
  407e10:	ret
  407e14:	nop

0000000000407e18 <print_escape_buf@@Base>:
  407e18:	cbz	x1, 407ec4 <print_escape_buf@@Base+0xac>
  407e1c:	stp	x29, x30, [sp, #-64]!
  407e20:	mov	x29, sp
  407e24:	stp	x19, x20, [sp, #16]
  407e28:	mov	x20, x0
  407e2c:	stp	x21, x22, [sp, #32]
  407e30:	mov	x21, x1
  407e34:	mov	x22, x2
  407e38:	add	x21, x20, x21
  407e3c:	stp	x23, x24, [sp, #48]
  407e40:	adrp	x24, 40e000 <_IO_stdin_used@@Base+0x490>
  407e44:	bl	404fe0 <__ctype_b_loc@plt>
  407e48:	add	x24, x24, #0x540
  407e4c:	mov	x23, x0
  407e50:	b	407e6c <print_escape_buf@@Base+0x54>
  407e54:	mov	w1, w19
  407e58:	mov	x0, x24
  407e5c:	add	x20, x20, #0x1
  407e60:	bl	405190 <printf@plt>
  407e64:	cmp	x21, x20
  407e68:	b.eq	407eb0 <print_escape_buf@@Base+0x98>  // b.none
  407e6c:	ldrb	w19, [x20]
  407e70:	mov	x0, x22
  407e74:	ldr	x4, [x23]
  407e78:	cmp	w19, #0x5c
  407e7c:	ubfiz	x3, x19, #1, #8
  407e80:	mov	w1, w19
  407e84:	ldrh	w3, [x4, x3]
  407e88:	and	w3, w3, #0x4000
  407e8c:	ccmp	w3, #0x0, #0x4, ne  // ne = any
  407e90:	b.eq	407e54 <print_escape_buf@@Base+0x3c>  // b.none
  407e94:	bl	405070 <strchr@plt>
  407e98:	cbnz	x0, 407e54 <print_escape_buf@@Base+0x3c>
  407e9c:	mov	w0, w19
  407ea0:	add	x20, x20, #0x1
  407ea4:	bl	4051d0 <putchar@plt>
  407ea8:	cmp	x21, x20
  407eac:	b.ne	407e6c <print_escape_buf@@Base+0x54>  // b.any
  407eb0:	ldp	x19, x20, [sp, #16]
  407eb4:	ldp	x21, x22, [sp, #32]
  407eb8:	ldp	x23, x24, [sp, #48]
  407ebc:	ldp	x29, x30, [sp], #64
  407ec0:	ret
  407ec4:	ret

0000000000407ec8 <print_timestamp@@Base>:
  407ec8:	stp	x29, x30, [sp, #-96]!
  407ecc:	mov	x1, #0x0                   	// #0
  407ed0:	mov	x29, sp
  407ed4:	stp	x19, x20, [sp, #16]
  407ed8:	add	x19, sp, #0x28
  407edc:	mov	x20, x0
  407ee0:	mov	x0, x19
  407ee4:	bl	404ed0 <gettimeofday@plt>
  407ee8:	mov	x0, x19
  407eec:	bl	404e20 <localtime@plt>
  407ef0:	adrp	x1, 421000 <_IO_stdin_used@@Base+0x13490>
  407ef4:	ldr	x1, [x1, #4032]
  407ef8:	ldr	w1, [x1]
  407efc:	cbz	w1, 407f44 <print_timestamp@@Base+0x7c>
  407f00:	add	x19, sp, #0x38
  407f04:	mov	x3, x0
  407f08:	mov	x1, #0x28                  	// #40
  407f0c:	mov	x0, x19
  407f10:	adrp	x2, 40e000 <_IO_stdin_used@@Base+0x490>
  407f14:	add	x2, x2, #0x548
  407f18:	bl	404dd0 <strftime@plt>
  407f1c:	ldr	x3, [sp, #48]
  407f20:	mov	x2, x19
  407f24:	mov	x0, x20
  407f28:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x490>
  407f2c:	add	x1, x1, #0x560
  407f30:	bl	405200 <fprintf@plt>
  407f34:	mov	w0, #0x0                   	// #0
  407f38:	ldp	x19, x20, [sp, #16]
  407f3c:	ldp	x29, x30, [sp], #96
  407f40:	ret
  407f44:	bl	405100 <asctime@plt>
  407f48:	mov	x19, x0
  407f4c:	bl	404d10 <strlen@plt>
  407f50:	mov	x2, x19
  407f54:	add	x19, x19, x0
  407f58:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x490>
  407f5c:	mov	x0, x20
  407f60:	add	x1, x1, #0x570
  407f64:	sturb	wzr, [x19, #-1]
  407f68:	ldr	x3, [sp, #48]
  407f6c:	bl	405200 <fprintf@plt>
  407f70:	mov	w0, #0x0                   	// #0
  407f74:	ldp	x19, x20, [sp, #16]
  407f78:	ldp	x29, x30, [sp], #96
  407f7c:	ret

0000000000407f80 <print_name_and_link@@Base>:
  407f80:	stp	x29, x30, [sp, #-112]!
  407f84:	mov	x29, sp
  407f88:	stp	x19, x20, [sp, #16]
  407f8c:	mov	x20, x0
  407f90:	mov	x19, x1
  407f94:	ldr	x0, [x2, #40]
  407f98:	stp	x21, x22, [sp, #32]
  407f9c:	mov	w21, #0x0                   	// #0
  407fa0:	cbz	x0, 407fe0 <print_name_and_link@@Base+0x60>
  407fa4:	ldr	w21, [x0, #4]
  407fa8:	cbz	w21, 408010 <print_name_and_link@@Base+0x90>
  407fac:	ldr	x0, [x2, #296]
  407fb0:	cbz	x0, 408088 <print_name_and_link@@Base+0x108>
  407fb4:	bl	409be0 <is_json_context@@Base>
  407fb8:	tst	w0, #0xff
  407fbc:	b.eq	40802c <print_name_and_link@@Base+0xac>  // b.none
  407fc0:	mov	w4, w21
  407fc4:	adrp	x2, 40e000 <_IO_stdin_used@@Base+0x490>
  407fc8:	mov	x3, #0x0                   	// #0
  407fcc:	add	x2, x2, #0x590
  407fd0:	mov	w1, #0x6                   	// #6
  407fd4:	mov	w0, #0x2                   	// #2
  407fd8:	mov	w21, #0x0                   	// #0
  407fdc:	bl	409d18 <print_color_int@@Base>
  407fe0:	mov	x4, x19
  407fe4:	mov	x3, x20
  407fe8:	mov	w1, #0x0                   	// #0
  407fec:	mov	w0, #0x4                   	// #4
  407ff0:	adrp	x2, 40e000 <_IO_stdin_used@@Base+0x490>
  407ff4:	add	x2, x2, #0x5a8
  407ff8:	bl	40a0e0 <print_color_string@@Base>
  407ffc:	mov	w0, w21
  408000:	ldp	x19, x20, [sp, #16]
  408004:	ldp	x21, x22, [sp, #32]
  408008:	ldp	x29, x30, [sp], #112
  40800c:	ret
  408010:	bl	409be0 <is_json_context@@Base>
  408014:	tst	w0, #0xff
  408018:	b.ne	408064 <print_name_and_link@@Base+0xe4>  // b.any
  40801c:	adrp	x22, 40e000 <_IO_stdin_used@@Base+0x490>
  408020:	mov	w21, #0x0                   	// #0
  408024:	add	x22, x22, #0x588
  408028:	b	408040 <print_name_and_link@@Base+0xc0>
  40802c:	mov	w0, w21
  408030:	bl	409468 <ll_idx_n2a@@Base>
  408034:	mov	x22, x0
  408038:	mov	w21, #0x0                   	// #0
  40803c:	cbz	x22, 407fe0 <print_name_and_link@@Base+0x60>
  408040:	add	x0, sp, #0x30
  408044:	mov	x3, x19
  408048:	mov	x4, x22
  40804c:	mov	x19, x0
  408050:	adrp	x2, 40e000 <_IO_stdin_used@@Base+0x490>
  408054:	mov	x1, #0x40                  	// #64
  408058:	add	x2, x2, #0x5a0
  40805c:	bl	404e00 <snprintf@plt>
  408060:	b	407fe0 <print_name_and_link@@Base+0x60>
  408064:	adrp	x2, 40e000 <_IO_stdin_used@@Base+0x490>
  408068:	mov	x4, #0x0                   	// #0
  40806c:	add	x2, x2, #0x448
  408070:	mov	x3, #0x0                   	// #0
  408074:	mov	w1, #0x6                   	// #6
  408078:	mov	w0, #0x2                   	// #2
  40807c:	mov	w21, #0x0                   	// #0
  408080:	bl	40a3a0 <print_color_null@@Base>
  408084:	b	407fe0 <print_name_and_link@@Base+0x60>
  408088:	mov	w0, w21
  40808c:	bl	4094a8 <ll_index_to_name@@Base>
  408090:	mov	x22, x0
  408094:	bl	409be0 <is_json_context@@Base>
  408098:	tst	w0, #0xff
  40809c:	b.ne	4080b4 <print_name_and_link@@Base+0x134>  // b.any
  4080a0:	mov	w0, w21
  4080a4:	bl	4095e8 <ll_index_to_flags@@Base>
  4080a8:	mvn	w21, w0
  4080ac:	and	w21, w21, #0x1
  4080b0:	b	40803c <print_name_and_link@@Base+0xbc>
  4080b4:	mov	x4, x22
  4080b8:	adrp	x2, 40e000 <_IO_stdin_used@@Base+0x490>
  4080bc:	add	x2, x2, #0x448
  4080c0:	mov	x3, #0x0                   	// #0
  4080c4:	mov	w1, #0x6                   	// #6
  4080c8:	mov	w0, #0x2                   	// #2
  4080cc:	bl	40a0e0 <print_color_string@@Base>
  4080d0:	mov	w0, w21
  4080d4:	bl	4095e8 <ll_index_to_flags@@Base>
  4080d8:	mvn	w21, w0
  4080dc:	and	w21, w21, #0x1
  4080e0:	b	407fe0 <print_name_and_link@@Base+0x60>
  4080e4:	nop

00000000004080e8 <getcmdline@@Base>:
  4080e8:	stp	x29, x30, [sp, #-128]!
  4080ec:	mov	x3, x2
  4080f0:	mov	x29, sp
  4080f4:	stp	x19, x20, [sp, #16]
  4080f8:	mov	x20, x0
  4080fc:	stp	x21, x22, [sp, #32]
  408100:	stp	x23, x24, [sp, #48]
  408104:	mov	x23, x2
  408108:	mov	w2, #0xa                   	// #10
  40810c:	str	x1, [sp, #96]
  408110:	bl	4051e0 <__getdelim@plt>
  408114:	mov	x21, x0
  408118:	tbnz	x0, #63, 408254 <getcmdline@@Base+0x16c>
  40811c:	adrp	x22, 421000 <_IO_stdin_used@@Base+0x13490>
  408120:	stp	x25, x26, [sp, #64]
  408124:	mov	w1, #0x23                  	// #35
  408128:	ldr	x3, [x22, #4000]
  40812c:	stp	x27, x28, [sp, #80]
  408130:	ldr	x19, [x20]
  408134:	ldr	w2, [x3]
  408138:	mov	x0, x19
  40813c:	add	w2, w2, #0x1
  408140:	str	w2, [x3]
  408144:	bl	405070 <strchr@plt>
  408148:	cbz	x0, 408154 <getcmdline@@Base+0x6c>
  40814c:	strb	wzr, [x0]
  408150:	ldr	x19, [x20]
  408154:	adrp	x25, 40e000 <_IO_stdin_used@@Base+0x490>
  408158:	ldr	x22, [x22, #4000]
  40815c:	add	x25, x25, #0x5e0
  408160:	add	x27, sp, #0x78
  408164:	add	x26, sp, #0x70
  408168:	b	4081c4 <getcmdline@@Base+0xdc>
  40816c:	strb	wzr, [x0]
  408170:	ldr	x24, [x20]
  408174:	mov	x0, x24
  408178:	bl	404d10 <strlen@plt>
  40817c:	mov	x28, x0
  408180:	ldr	x0, [sp, #112]
  408184:	bl	404d10 <strlen@plt>
  408188:	add	x1, x0, x28
  40818c:	mov	x0, x24
  408190:	ldr	x2, [sp, #96]
  408194:	add	x1, x1, #0x1
  408198:	str	x1, [x2]
  40819c:	bl	404f20 <realloc@plt>
  4081a0:	str	x0, [x20]
  4081a4:	cbz	x0, 4082b0 <getcmdline@@Base+0x1c8>
  4081a8:	ldr	x1, [sp, #112]
  4081ac:	sub	x19, x19, #0x2
  4081b0:	add	x21, x21, x19
  4081b4:	bl	404ea0 <strcat@plt>
  4081b8:	ldr	x0, [sp, #112]
  4081bc:	bl	405030 <free@plt>
  4081c0:	ldr	x19, [x20]
  4081c4:	mov	x1, x25
  4081c8:	mov	x0, x19
  4081cc:	bl	405140 <strstr@plt>
  4081d0:	mov	x3, x23
  4081d4:	mov	x28, x0
  4081d8:	mov	x1, x27
  4081dc:	mov	x0, x26
  4081e0:	mov	w2, #0xa                   	// #10
  4081e4:	cbz	x28, 40824c <getcmdline@@Base+0x164>
  4081e8:	stp	xzr, xzr, [sp, #112]
  4081ec:	bl	4051e0 <__getdelim@plt>
  4081f0:	mov	w1, #0x23                  	// #35
  4081f4:	mov	x19, x0
  4081f8:	tbnz	x0, #63, 40826c <getcmdline@@Base+0x184>
  4081fc:	ldr	w0, [x22]
  408200:	add	w0, w0, #0x1
  408204:	str	w0, [x22]
  408208:	strb	wzr, [x28]
  40820c:	ldr	x28, [sp, #112]
  408210:	mov	x0, x28
  408214:	bl	405070 <strchr@plt>
  408218:	cbnz	x0, 40816c <getcmdline@@Base+0x84>
  40821c:	ldr	x3, [x20]
  408220:	str	x3, [sp, #104]
  408224:	mov	x0, x3
  408228:	bl	404d10 <strlen@plt>
  40822c:	mov	x1, x0
  408230:	mov	x0, x28
  408234:	mov	x28, x1
  408238:	bl	404d10 <strlen@plt>
  40823c:	add	x1, x28, x0
  408240:	ldr	x3, [sp, #104]
  408244:	mov	x0, x3
  408248:	b	408190 <getcmdline@@Base+0xa8>
  40824c:	ldp	x25, x26, [sp, #64]
  408250:	ldp	x27, x28, [sp, #80]
  408254:	mov	x0, x21
  408258:	ldp	x19, x20, [sp, #16]
  40825c:	ldp	x21, x22, [sp, #32]
  408260:	ldp	x23, x24, [sp, #48]
  408264:	ldp	x29, x30, [sp], #128
  408268:	ret
  40826c:	adrp	x3, 421000 <_IO_stdin_used@@Base+0x13490>
  408270:	mov	x21, x0
  408274:	mov	x2, #0x1a                  	// #26
  408278:	mov	x1, #0x1                   	// #1
  40827c:	ldr	x3, [x3, #3992]
  408280:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x490>
  408284:	add	x0, x0, #0x5b0
  408288:	ldr	x3, [x3]
  40828c:	bl	405090 <fwrite@plt>
  408290:	mov	x0, x21
  408294:	ldp	x19, x20, [sp, #16]
  408298:	ldp	x21, x22, [sp, #32]
  40829c:	ldp	x23, x24, [sp, #48]
  4082a0:	ldp	x25, x26, [sp, #64]
  4082a4:	ldp	x27, x28, [sp, #80]
  4082a8:	ldp	x29, x30, [sp], #128
  4082ac:	ret
  4082b0:	adrp	x3, 421000 <_IO_stdin_used@@Base+0x13490>
  4082b4:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x490>
  4082b8:	mov	x2, #0xe                   	// #14
  4082bc:	add	x0, x0, #0x5d0
  4082c0:	ldr	x3, [x3, #3992]
  4082c4:	mov	x1, #0x1                   	// #1
  4082c8:	mov	x21, #0xffffffffffffffff    	// #-1
  4082cc:	ldr	x3, [x3]
  4082d0:	bl	405090 <fwrite@plt>
  4082d4:	ldr	x0, [sp, #96]
  4082d8:	ldp	x25, x26, [sp, #64]
  4082dc:	ldp	x27, x28, [sp, #80]
  4082e0:	str	xzr, [x0]
  4082e4:	b	408254 <getcmdline@@Base+0x16c>

00000000004082e8 <makeargs@@Base>:
  4082e8:	stp	x29, x30, [sp, #-80]!
  4082ec:	mov	x29, sp
  4082f0:	stp	x19, x20, [sp, #16]
  4082f4:	mov	x19, x0
  4082f8:	stp	x23, x24, [sp, #48]
  4082fc:	mov	x23, x1
  408300:	stp	x25, x26, [sp, #64]
  408304:	ldrb	w0, [x0]
  408308:	cbz	w0, 4083cc <makeargs@@Base+0xe4>
  40830c:	stp	x21, x22, [sp, #32]
  408310:	adrp	x22, 40e000 <_IO_stdin_used@@Base+0x490>
  408314:	add	x22, x22, #0x6b0
  408318:	sub	w24, w2, #0x1
  40831c:	add	x22, x22, #0x70
  408320:	mov	x20, #0x0                   	// #0
  408324:	mov	w25, #0x22                  	// #34
  408328:	b	408350 <makeargs@@Base+0x68>
  40832c:	add	x0, x21, #0x1
  408330:	str	x0, [x23, x20, lsl #3]
  408334:	bl	405070 <strchr@plt>
  408338:	cbz	x0, 4083fc <makeargs@@Base+0x114>
  40833c:	mov	x19, x0
  408340:	add	x20, x20, #0x1
  408344:	strb	wzr, [x19], #1
  408348:	ldrb	w0, [x0, #1]
  40834c:	cbz	w0, 4083a8 <makeargs@@Base+0xc0>
  408350:	mov	x1, x22
  408354:	mov	x0, x19
  408358:	bl	405060 <strspn@plt>
  40835c:	ldrb	w1, [x19, x0]
  408360:	add	x21, x19, x0
  408364:	mov	w26, w20
  408368:	cbz	w1, 4083a8 <makeargs@@Base+0xc0>
  40836c:	cmp	w24, w20
  408370:	b.le	4083d4 <makeargs@@Base+0xec>
  408374:	cmp	w1, #0x27
  408378:	add	w26, w20, #0x1
  40837c:	ccmp	w1, w25, #0x4, ne  // ne = any
  408380:	b.eq	40832c <makeargs@@Base+0x44>  // b.none
  408384:	str	x21, [x23, x20, lsl #3]
  408388:	mov	x1, x22
  40838c:	mov	x0, x21
  408390:	bl	405170 <strcspn@plt>
  408394:	mov	x1, x0
  408398:	add	x0, x21, x0
  40839c:	ldrb	w1, [x21, x1]
  4083a0:	cbnz	w1, 40833c <makeargs@@Base+0x54>
  4083a4:	nop
  4083a8:	ldp	x21, x22, [sp, #32]
  4083ac:	add	x23, x23, w26, sxtw #3
  4083b0:	mov	w0, w26
  4083b4:	ldp	x19, x20, [sp, #16]
  4083b8:	ldp	x25, x26, [sp, #64]
  4083bc:	str	xzr, [x23]
  4083c0:	ldp	x23, x24, [sp, #48]
  4083c4:	ldp	x29, x30, [sp], #80
  4083c8:	ret
  4083cc:	mov	w26, #0x0                   	// #0
  4083d0:	b	4083b0 <makeargs@@Base+0xc8>
  4083d4:	adrp	x3, 421000 <_IO_stdin_used@@Base+0x13490>
  4083d8:	mov	x2, #0x1e                  	// #30
  4083dc:	mov	x1, #0x1                   	// #1
  4083e0:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x490>
  4083e4:	ldr	x3, [x3, #3992]
  4083e8:	add	x0, x0, #0x5e8
  4083ec:	ldr	x3, [x3]
  4083f0:	bl	405090 <fwrite@plt>
  4083f4:	mov	w0, #0x1                   	// #1
  4083f8:	bl	404d20 <exit@plt>
  4083fc:	adrp	x3, 421000 <_IO_stdin_used@@Base+0x13490>
  408400:	mov	x2, #0x1b                  	// #27
  408404:	mov	x1, #0x1                   	// #1
  408408:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x490>
  40840c:	ldr	x3, [x3, #3992]
  408410:	add	x0, x0, #0x608
  408414:	ldr	x3, [x3]
  408418:	bl	405090 <fwrite@plt>
  40841c:	mov	w0, #0x1                   	// #1
  408420:	bl	404d20 <exit@plt>
  408424:	nop

0000000000408428 <print_nlmsg_timestamp@@Base>:
  408428:	stp	x29, x30, [sp, #-64]!
  40842c:	mov	x29, sp
  408430:	ldr	w2, [x1, #16]
  408434:	stp	x19, x20, [sp, #16]
  408438:	mov	x20, x0
  40843c:	add	x0, sp, #0x38
  408440:	str	x21, [sp, #32]
  408444:	ldr	w21, [x1, #20]
  408448:	str	x2, [sp, #56]
  40844c:	bl	404e20 <localtime@plt>
  408450:	bl	405100 <asctime@plt>
  408454:	mov	x19, x0
  408458:	bl	404d10 <strlen@plt>
  40845c:	add	x4, x19, x0
  408460:	mov	x3, x21
  408464:	mov	x2, x19
  408468:	mov	x0, x20
  40846c:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x490>
  408470:	sturb	wzr, [x4, #-1]
  408474:	add	x1, x1, #0x628
  408478:	bl	405200 <fprintf@plt>
  40847c:	ldp	x19, x20, [sp, #16]
  408480:	ldr	x21, [sp, #32]
  408484:	ldp	x29, x30, [sp], #64
  408488:	ret
  40848c:	nop

0000000000408490 <int_to_str@@Base>:
  408490:	stp	x29, x30, [sp, #-32]!
  408494:	mov	w2, w0
  408498:	mov	x0, x1
  40849c:	mov	x29, sp
  4084a0:	str	x19, [sp, #16]
  4084a4:	mov	x19, x1
  4084a8:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x490>
  4084ac:	add	x1, x1, #0x640
  4084b0:	bl	404da0 <sprintf@plt>
  4084b4:	mov	x0, x19
  4084b8:	ldr	x19, [sp, #16]
  4084bc:	ldp	x29, x30, [sp], #32
  4084c0:	ret
  4084c4:	nop

00000000004084c8 <get_guid@@Base>:
  4084c8:	stp	x29, x30, [sp, #-64]!
  4084cc:	mov	x29, sp
  4084d0:	stp	x19, x20, [sp, #16]
  4084d4:	mov	x20, x1
  4084d8:	stp	x21, x22, [sp, #32]
  4084dc:	mov	x21, x0
  4084e0:	mov	x0, x1
  4084e4:	bl	404d10 <strlen@plt>
  4084e8:	cmp	x0, #0x17
  4084ec:	b.ne	4085ac <get_guid@@Base+0xe4>  // b.any
  4084f0:	ldrb	w0, [x20, #2]
  4084f4:	add	x19, x20, #0x2
  4084f8:	cmp	w0, #0x3a
  4084fc:	b.ne	4085ac <get_guid@@Base+0xe4>  // b.any
  408500:	ldrb	w0, [x20, #5]
  408504:	cmp	w0, #0x3a
  408508:	b.ne	4085ac <get_guid@@Base+0xe4>  // b.any
  40850c:	ldrb	w0, [x20, #8]
  408510:	cmp	w0, #0x3a
  408514:	b.ne	4085ac <get_guid@@Base+0xe4>  // b.any
  408518:	ldrb	w0, [x20, #11]
  40851c:	cmp	w0, #0x3a
  408520:	b.ne	4085ac <get_guid@@Base+0xe4>  // b.any
  408524:	ldrb	w0, [x20, #14]
  408528:	cmp	w0, #0x3a
  40852c:	b.ne	4085ac <get_guid@@Base+0xe4>  // b.any
  408530:	ldrb	w0, [x20, #17]
  408534:	cmp	w0, #0x3a
  408538:	b.ne	4085ac <get_guid@@Base+0xe4>  // b.any
  40853c:	ldrb	w0, [x20, #20]
  408540:	cmp	w0, #0x3a
  408544:	b.ne	4085ac <get_guid@@Base+0xe4>  // b.any
  408548:	add	x22, sp, #0x38
  40854c:	mov	w20, #0x38                  	// #56
  408550:	str	xzr, [x21]
  408554:	nop
  408558:	mov	w2, #0x10                  	// #16
  40855c:	mov	x1, x22
  408560:	sub	x0, x19, #0x2
  408564:	bl	404d00 <strtoul@plt>
  408568:	ldr	x2, [sp, #56]
  40856c:	cmp	x0, #0xff
  408570:	lsl	x0, x0, x20
  408574:	sub	w20, w20, #0x8
  408578:	ccmp	x2, x19, #0x0, ls  // ls = plast
  40857c:	b.ne	4085ac <get_guid@@Base+0xe4>  // b.any
  408580:	ldr	x2, [x21]
  408584:	add	x19, x19, #0x3
  408588:	cmn	w20, #0x8
  40858c:	orr	x0, x2, x0
  408590:	str	x0, [x21]
  408594:	b.ne	408558 <get_guid@@Base+0x90>  // b.any
  408598:	mov	w0, #0x0                   	// #0
  40859c:	ldp	x19, x20, [sp, #16]
  4085a0:	ldp	x21, x22, [sp, #32]
  4085a4:	ldp	x29, x30, [sp], #64
  4085a8:	ret
  4085ac:	mov	w0, #0xffffffff            	// #-1
  4085b0:	ldp	x19, x20, [sp, #16]
  4085b4:	ldp	x21, x22, [sp, #32]
  4085b8:	ldp	x29, x30, [sp], #64
  4085bc:	ret

00000000004085c0 <get_real_family@@Base>:
  4085c0:	cmp	w0, #0x5
  4085c4:	mov	w0, w1
  4085c8:	b.ne	4085e0 <get_real_family@@Base+0x20>  // b.any
  4085cc:	cmp	w1, #0x80
  4085d0:	b.eq	4085e4 <get_real_family@@Base+0x24>  // b.none
  4085d4:	cmp	w1, #0x81
  4085d8:	mov	w1, #0xa                   	// #10
  4085dc:	csel	w0, w0, w1, ne  // ne = any
  4085e0:	ret
  4085e4:	mov	w0, #0x2                   	// #2
  4085e8:	ret
  4085ec:	nop

00000000004085f0 <get_rtnl_link_stats_rta@@Base>:
  4085f0:	sub	sp, sp, #0x990
  4085f4:	stp	x29, x30, [sp]
  4085f8:	mov	x29, sp
  4085fc:	stp	x21, x22, [sp, #32]
  408600:	ldr	x21, [x1, #184]
  408604:	stp	x19, x20, [sp, #16]
  408608:	mov	x19, x0
  40860c:	str	x23, [sp, #48]
  408610:	cbz	x21, 4086d4 <get_rtnl_link_stats_rta@@Base+0xe4>
  408614:	mov	x22, #0xc0                  	// #192
  408618:	mov	x20, x0
  40861c:	mov	w23, w22
  408620:	ldrh	w0, [x21]
  408624:	sub	w0, w0, #0x4
  408628:	cmp	w23, w0
  40862c:	b.gt	4086b8 <get_rtnl_link_stats_rta@@Base+0xc8>
  408630:	mov	x2, x22
  408634:	add	x1, x21, #0x4
  408638:	mov	x0, x20
  40863c:	bl	404ce0 <memcpy@plt>
  408640:	cmp	x20, x19
  408644:	b.eq	40869c <get_rtnl_link_stats_rta@@Base+0xac>  // b.none
  408648:	ldp	q5, q4, [x20]
  40864c:	ldp	q3, q2, [x20, #32]
  408650:	uxtl	v16.2d, v5.2s
  408654:	uxtl	v7.2d, v4.2s
  408658:	uxtl2	v5.2d, v5.4s
  40865c:	uxtl2	v4.2d, v4.4s
  408660:	uxtl	v6.2d, v3.2s
  408664:	uxtl2	v3.2d, v3.4s
  408668:	ldp	q1, q0, [x20, #64]
  40866c:	stp	q16, q5, [x19]
  408670:	uxtl	v5.2d, v2.2s
  408674:	stp	q7, q4, [x19, #32]
  408678:	uxtl2	v2.2d, v2.4s
  40867c:	stp	q6, q3, [x19, #64]
  408680:	uxtl	v4.2d, v1.2s
  408684:	uxtl	v3.2d, v0.2s
  408688:	uxtl2	v1.2d, v1.4s
  40868c:	stp	q5, q2, [x19, #96]
  408690:	uxtl2	v0.2d, v0.4s
  408694:	stp	q4, q1, [x19, #128]
  408698:	stp	q3, q0, [x19, #160]
  40869c:	mov	w0, w23
  4086a0:	ldp	x29, x30, [sp]
  4086a4:	ldp	x19, x20, [sp, #16]
  4086a8:	ldp	x21, x22, [sp, #32]
  4086ac:	ldr	x23, [sp, #48]
  4086b0:	add	sp, sp, #0x990
  4086b4:	ret
  4086b8:	sub	w2, w23, w0
  4086bc:	sxtw	x22, w0
  4086c0:	add	x0, x20, x22
  4086c4:	mov	w1, #0x0                   	// #0
  4086c8:	sxtw	x2, w2
  4086cc:	bl	404ec0 <memset@plt>
  4086d0:	b	408630 <get_rtnl_link_stats_rta@@Base+0x40>
  4086d4:	ldr	x21, [x1, #56]
  4086d8:	cbz	x21, 4086ec <get_rtnl_link_stats_rta@@Base+0xfc>
  4086dc:	mov	x22, #0x60                  	// #96
  4086e0:	add	x20, sp, #0x48
  4086e4:	mov	w23, w22
  4086e8:	b	408620 <get_rtnl_link_stats_rta@@Base+0x30>
  4086ec:	ldr	x2, [x1, #96]
  4086f0:	cbz	x2, 408788 <get_rtnl_link_stats_rta@@Base+0x198>
  4086f4:	ldrh	w3, [x2], #4
  4086f8:	add	x0, sp, #0x48
  4086fc:	mov	w1, #0x128                 	// #296
  408700:	sub	w3, w3, #0x4
  408704:	bl	40d9e0 <parse_rtattr@@Base>
  408708:	ldr	x0, [sp, #96]
  40870c:	cbz	x0, 408780 <get_rtnl_link_stats_rta@@Base+0x190>
  408710:	stp	xzr, xzr, [x19]
  408714:	stp	xzr, xzr, [x19, #16]
  408718:	stp	xzr, xzr, [x19, #32]
  40871c:	stp	xzr, xzr, [x19, #48]
  408720:	stp	xzr, xzr, [x19, #64]
  408724:	stp	xzr, xzr, [x19, #80]
  408728:	stp	xzr, xzr, [x19, #96]
  40872c:	stp	xzr, xzr, [x19, #112]
  408730:	stp	xzr, xzr, [x19, #128]
  408734:	stp	xzr, xzr, [x19, #144]
  408738:	stp	xzr, xzr, [x19, #160]
  40873c:	stp	xzr, xzr, [x19, #176]
  408740:	ldur	x1, [x0, #12]
  408744:	str	x1, [x19]
  408748:	ldur	x1, [x0, #20]
  40874c:	str	x1, [x19, #16]
  408750:	ldur	x1, [x0, #44]
  408754:	str	x1, [x19, #8]
  408758:	ldur	x1, [x0, #52]
  40875c:	str	x1, [x19, #24]
  408760:	ldur	x1, [x0, #108]
  408764:	str	x1, [x19, #32]
  408768:	ldur	x1, [x0, #116]
  40876c:	str	x1, [x19, #40]
  408770:	ldur	x1, [x0, #188]
  408774:	str	x1, [x19, #64]
  408778:	ldur	x0, [x0, #252]
  40877c:	str	x0, [x19, #104]
  408780:	mov	w23, #0xc0                  	// #192
  408784:	b	40869c <get_rtnl_link_stats_rta@@Base+0xac>
  408788:	mov	w23, #0xffffffff            	// #-1
  40878c:	b	40869c <get_rtnl_link_stats_rta@@Base+0xac>

0000000000408790 <strlcpy@@Base>:
  408790:	stp	x29, x30, [sp, #-48]!
  408794:	mov	x29, sp
  408798:	stp	x19, x20, [sp, #16]
  40879c:	mov	x19, x2
  4087a0:	stp	x21, x22, [sp, #32]
  4087a4:	mov	x21, x1
  4087a8:	mov	x22, x0
  4087ac:	mov	x0, x1
  4087b0:	bl	404d10 <strlen@plt>
  4087b4:	mov	x20, x0
  4087b8:	cbnz	x19, 4087d0 <strlcpy@@Base+0x40>
  4087bc:	mov	x0, x20
  4087c0:	ldp	x19, x20, [sp, #16]
  4087c4:	ldp	x21, x22, [sp, #32]
  4087c8:	ldp	x29, x30, [sp], #48
  4087cc:	ret
  4087d0:	sub	x19, x19, #0x1
  4087d4:	mov	x1, x21
  4087d8:	cmp	x19, x0
  4087dc:	mov	x0, x22
  4087e0:	csel	x19, x19, x20, ls  // ls = plast
  4087e4:	mov	x2, x19
  4087e8:	bl	404ce0 <memcpy@plt>
  4087ec:	strb	wzr, [x22, x19]
  4087f0:	mov	x0, x20
  4087f4:	ldp	x19, x20, [sp, #16]
  4087f8:	ldp	x21, x22, [sp, #32]
  4087fc:	ldp	x29, x30, [sp], #48
  408800:	ret
  408804:	nop

0000000000408808 <strlcat@@Base>:
  408808:	stp	x29, x30, [sp, #-48]!
  40880c:	mov	x29, sp
  408810:	stp	x19, x20, [sp, #16]
  408814:	mov	x20, x2
  408818:	stp	x21, x22, [sp, #32]
  40881c:	mov	x21, x1
  408820:	mov	x22, x0
  408824:	bl	404d10 <strlen@plt>
  408828:	mov	x19, x0
  40882c:	cmp	x0, x20
  408830:	b.cc	408850 <strlcat@@Base+0x48>  // b.lo, b.ul, b.last
  408834:	mov	x0, x21
  408838:	bl	404d10 <strlen@plt>
  40883c:	add	x0, x0, x19
  408840:	ldp	x19, x20, [sp, #16]
  408844:	ldp	x21, x22, [sp, #32]
  408848:	ldp	x29, x30, [sp], #48
  40884c:	ret
  408850:	sub	x2, x20, x0
  408854:	mov	x1, x21
  408858:	add	x0, x22, x0
  40885c:	bl	408790 <strlcpy@@Base>
  408860:	add	x0, x0, x19
  408864:	ldp	x19, x20, [sp, #16]
  408868:	ldp	x21, x22, [sp, #32]
  40886c:	ldp	x29, x30, [sp], #48
  408870:	ret
  408874:	nop

0000000000408878 <drop_cap@@Base>:
  408878:	stp	x29, x30, [sp, #-48]!
  40887c:	mov	x29, sp
  408880:	bl	404db0 <getuid@plt>
  408884:	cbnz	w0, 408890 <drop_cap@@Base+0x18>
  408888:	ldp	x29, x30, [sp], #48
  40888c:	ret
  408890:	bl	404d60 <geteuid@plt>
  408894:	cbz	w0, 408888 <drop_cap@@Base+0x10>
  408898:	str	x19, [sp, #16]
  40889c:	bl	405000 <cap_get_proc@plt>
  4088a0:	mov	x19, x0
  4088a4:	cbz	x0, 4088f0 <drop_cap@@Base+0x78>
  4088a8:	add	x3, sp, #0x2c
  4088ac:	mov	w2, #0x2                   	// #2
  4088b0:	mov	w1, #0xc                   	// #12
  4088b4:	bl	404f00 <cap_get_flag@plt>
  4088b8:	cbnz	w0, 4088f0 <drop_cap@@Base+0x78>
  4088bc:	ldr	w0, [sp, #44]
  4088c0:	cbnz	w0, 4088dc <drop_cap@@Base+0x64>
  4088c4:	mov	x0, x19
  4088c8:	bl	4050d0 <cap_clear@plt>
  4088cc:	cbnz	w0, 4088f0 <drop_cap@@Base+0x78>
  4088d0:	mov	x0, x19
  4088d4:	bl	404f30 <cap_set_proc@plt>
  4088d8:	cbnz	w0, 4088f0 <drop_cap@@Base+0x78>
  4088dc:	mov	x0, x19
  4088e0:	bl	405110 <cap_free@plt>
  4088e4:	ldr	x19, [sp, #16]
  4088e8:	ldp	x29, x30, [sp], #48
  4088ec:	ret
  4088f0:	mov	w0, #0x1                   	// #1
  4088f4:	bl	404d20 <exit@plt>

00000000004088f8 <get_time@@Base>:
  4088f8:	stp	x29, x30, [sp, #-64]!
  4088fc:	mov	x29, sp
  408900:	stp	x19, x20, [sp, #16]
  408904:	mov	x19, x1
  408908:	str	x21, [sp, #32]
  40890c:	mov	x21, x0
  408910:	mov	x0, x1
  408914:	add	x1, sp, #0x38
  408918:	bl	404d50 <strtod@plt>
  40891c:	ldr	x20, [sp, #56]
  408920:	cmp	x20, x19
  408924:	b.eq	408a3c <get_time@@Base+0x144>  // b.none
  408928:	str	d8, [sp, #40]
  40892c:	fmov	d8, d0
  408930:	ldrb	w0, [x20]
  408934:	cbz	w0, 408a08 <get_time@@Base+0x110>
  408938:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x490>
  40893c:	mov	x0, x20
  408940:	add	x1, x1, #0xc00
  408944:	bl	404f10 <strcasecmp@plt>
  408948:	cbz	w0, 4089f8 <get_time@@Base+0x100>
  40894c:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x490>
  408950:	mov	x0, x20
  408954:	add	x1, x1, #0x200
  408958:	bl	404f10 <strcasecmp@plt>
  40895c:	cbz	w0, 4089f8 <get_time@@Base+0x100>
  408960:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x490>
  408964:	mov	x0, x20
  408968:	add	x1, x1, #0x208
  40896c:	bl	404f10 <strcasecmp@plt>
  408970:	cbz	w0, 4089f8 <get_time@@Base+0x100>
  408974:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x490>
  408978:	mov	x0, x20
  40897c:	add	x1, x1, #0x210
  408980:	bl	404f10 <strcasecmp@plt>
  408984:	cbz	w0, 408a28 <get_time@@Base+0x130>
  408988:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x490>
  40898c:	mov	x0, x20
  408990:	add	x1, x1, #0x218
  408994:	bl	404f10 <strcasecmp@plt>
  408998:	cbz	w0, 408a28 <get_time@@Base+0x130>
  40899c:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x490>
  4089a0:	mov	x0, x20
  4089a4:	add	x1, x1, #0x220
  4089a8:	bl	404f10 <strcasecmp@plt>
  4089ac:	cbz	w0, 408a28 <get_time@@Base+0x130>
  4089b0:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x490>
  4089b4:	mov	x0, x20
  4089b8:	add	x1, x1, #0x648
  4089bc:	bl	404f10 <strcasecmp@plt>
  4089c0:	cbz	w0, 408a08 <get_time@@Base+0x110>
  4089c4:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x490>
  4089c8:	mov	x0, x20
  4089cc:	add	x1, x1, #0x650
  4089d0:	bl	404f10 <strcasecmp@plt>
  4089d4:	cbz	w0, 408a08 <get_time@@Base+0x110>
  4089d8:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x490>
  4089dc:	mov	x0, x20
  4089e0:	add	x1, x1, #0x658
  4089e4:	bl	404f10 <strcasecmp@plt>
  4089e8:	cbz	w0, 408a08 <get_time@@Base+0x110>
  4089ec:	mov	w0, #0xffffffff            	// #-1
  4089f0:	ldr	d8, [sp, #40]
  4089f4:	b	408a18 <get_time@@Base+0x120>
  4089f8:	mov	x0, #0x848000000000        	// #145685290680320
  4089fc:	movk	x0, #0x412e, lsl #48
  408a00:	fmov	d0, x0
  408a04:	fmul	d8, d8, d0
  408a08:	fcvtzu	w1, d8
  408a0c:	mov	w0, #0x0                   	// #0
  408a10:	ldr	d8, [sp, #40]
  408a14:	str	w1, [x21]
  408a18:	ldp	x19, x20, [sp, #16]
  408a1c:	ldr	x21, [sp, #32]
  408a20:	ldp	x29, x30, [sp], #64
  408a24:	ret
  408a28:	mov	x0, #0x400000000000        	// #70368744177664
  408a2c:	movk	x0, #0x408f, lsl #48
  408a30:	fmov	d0, x0
  408a34:	fmul	d8, d8, d0
  408a38:	b	408a08 <get_time@@Base+0x110>
  408a3c:	mov	w0, #0xffffffff            	// #-1
  408a40:	b	408a18 <get_time@@Base+0x120>
  408a44:	nop

0000000000408a48 <sprint_time@@Base>:
  408a48:	stp	x29, x30, [sp, #-32]!
  408a4c:	mov	w3, w0
  408a50:	mov	w0, #0x423f                	// #16959
  408a54:	mov	x29, sp
  408a58:	str	x19, [sp, #16]
  408a5c:	movk	w0, #0xf, lsl #16
  408a60:	ucvtf	d0, w3
  408a64:	cmp	w3, w0
  408a68:	mov	x19, x1
  408a6c:	b.hi	408ad0 <sprint_time@@Base+0x88>  // b.pmore
  408a70:	cmp	w3, #0x3e7
  408a74:	b.hi	408a9c <sprint_time@@Base+0x54>  // b.pmore
  408a78:	mov	x0, x19
  408a7c:	mov	x1, #0x3f                  	// #63
  408a80:	adrp	x2, 40e000 <_IO_stdin_used@@Base+0x490>
  408a84:	add	x2, x2, #0x670
  408a88:	bl	404e00 <snprintf@plt>
  408a8c:	mov	x0, x19
  408a90:	ldr	x19, [sp, #16]
  408a94:	ldp	x29, x30, [sp], #32
  408a98:	ret
  408a9c:	mov	x0, #0x400000000000        	// #70368744177664
  408aa0:	mov	x1, #0x3f                  	// #63
  408aa4:	movk	x0, #0x408f, lsl #48
  408aa8:	fmov	d1, x0
  408aac:	adrp	x2, 40e000 <_IO_stdin_used@@Base+0x490>
  408ab0:	mov	x0, x19
  408ab4:	fdiv	d0, d0, d1
  408ab8:	add	x2, x2, #0x668
  408abc:	bl	404e00 <snprintf@plt>
  408ac0:	mov	x0, x19
  408ac4:	ldr	x19, [sp, #16]
  408ac8:	ldp	x29, x30, [sp], #32
  408acc:	ret
  408ad0:	mov	x0, #0x848000000000        	// #145685290680320
  408ad4:	mov	x1, #0x3f                  	// #63
  408ad8:	movk	x0, #0x412e, lsl #48
  408adc:	fmov	d1, x0
  408ae0:	adrp	x2, 40e000 <_IO_stdin_used@@Base+0x490>
  408ae4:	mov	x0, x19
  408ae8:	fdiv	d0, d0, d1
  408aec:	add	x2, x2, #0x660
  408af0:	bl	404e00 <snprintf@plt>
  408af4:	mov	x0, x19
  408af8:	ldr	x19, [sp, #16]
  408afc:	ldp	x29, x30, [sp], #32
  408b00:	ret
  408b04:	nop

0000000000408b08 <get_time64@@Base>:
  408b08:	stp	x29, x30, [sp, #-64]!
  408b0c:	mov	x29, sp
  408b10:	stp	x19, x20, [sp, #16]
  408b14:	mov	x19, x1
  408b18:	str	x21, [sp, #32]
  408b1c:	mov	x21, x0
  408b20:	mov	x0, x1
  408b24:	add	x1, sp, #0x38
  408b28:	bl	404d50 <strtod@plt>
  408b2c:	ldr	x20, [sp, #56]
  408b30:	cmp	x20, x19
  408b34:	b.eq	408c9c <get_time64@@Base+0x194>  // b.none
  408b38:	str	d8, [sp, #40]
  408b3c:	fmov	d8, d0
  408b40:	ldrb	w0, [x20]
  408b44:	cbz	w0, 408c54 <get_time64@@Base+0x14c>
  408b48:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x490>
  408b4c:	mov	x0, x20
  408b50:	add	x1, x1, #0xc00
  408b54:	bl	404f10 <strcasecmp@plt>
  408b58:	cbz	w0, 408c44 <get_time64@@Base+0x13c>
  408b5c:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x490>
  408b60:	mov	x0, x20
  408b64:	add	x1, x1, #0x200
  408b68:	bl	404f10 <strcasecmp@plt>
  408b6c:	cbz	w0, 408c44 <get_time64@@Base+0x13c>
  408b70:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x490>
  408b74:	mov	x0, x20
  408b78:	add	x1, x1, #0x208
  408b7c:	bl	404f10 <strcasecmp@plt>
  408b80:	cbz	w0, 408c44 <get_time64@@Base+0x13c>
  408b84:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x490>
  408b88:	mov	x0, x20
  408b8c:	add	x1, x1, #0x210
  408b90:	bl	404f10 <strcasecmp@plt>
  408b94:	cbz	w0, 408c74 <get_time64@@Base+0x16c>
  408b98:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x490>
  408b9c:	mov	x0, x20
  408ba0:	add	x1, x1, #0x218
  408ba4:	bl	404f10 <strcasecmp@plt>
  408ba8:	cbz	w0, 408c74 <get_time64@@Base+0x16c>
  408bac:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x490>
  408bb0:	mov	x0, x20
  408bb4:	add	x1, x1, #0x220
  408bb8:	bl	404f10 <strcasecmp@plt>
  408bbc:	cbz	w0, 408c74 <get_time64@@Base+0x16c>
  408bc0:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x490>
  408bc4:	mov	x0, x20
  408bc8:	add	x1, x1, #0x648
  408bcc:	bl	404f10 <strcasecmp@plt>
  408bd0:	cbz	w0, 408c88 <get_time64@@Base+0x180>
  408bd4:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x490>
  408bd8:	mov	x0, x20
  408bdc:	add	x1, x1, #0x650
  408be0:	bl	404f10 <strcasecmp@plt>
  408be4:	cbz	w0, 408c88 <get_time64@@Base+0x180>
  408be8:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x490>
  408bec:	mov	x0, x20
  408bf0:	add	x1, x1, #0x658
  408bf4:	bl	404f10 <strcasecmp@plt>
  408bf8:	cbz	w0, 408c88 <get_time64@@Base+0x180>
  408bfc:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x490>
  408c00:	mov	x0, x20
  408c04:	add	x1, x1, #0x678
  408c08:	bl	404f10 <strcasecmp@plt>
  408c0c:	cbz	w0, 408c54 <get_time64@@Base+0x14c>
  408c10:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x490>
  408c14:	mov	x0, x20
  408c18:	add	x1, x1, #0x680
  408c1c:	bl	404f10 <strcasecmp@plt>
  408c20:	cbz	w0, 408c54 <get_time64@@Base+0x14c>
  408c24:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x490>
  408c28:	mov	x0, x20
  408c2c:	add	x1, x1, #0x688
  408c30:	bl	404f10 <strcasecmp@plt>
  408c34:	cbz	w0, 408c54 <get_time64@@Base+0x14c>
  408c38:	mov	w0, #0xffffffff            	// #-1
  408c3c:	ldr	d8, [sp, #40]
  408c40:	b	408c64 <get_time64@@Base+0x15c>
  408c44:	mov	x0, #0xcd6500000000        	// #225833675390976
  408c48:	movk	x0, #0x41cd, lsl #48
  408c4c:	fmov	d0, x0
  408c50:	fmul	d8, d8, d0
  408c54:	fcvtzs	d8, d8
  408c58:	mov	w0, #0x0                   	// #0
  408c5c:	str	d8, [x21]
  408c60:	ldr	d8, [sp, #40]
  408c64:	ldp	x19, x20, [sp, #16]
  408c68:	ldr	x21, [sp, #32]
  408c6c:	ldp	x29, x30, [sp], #64
  408c70:	ret
  408c74:	mov	x0, #0x848000000000        	// #145685290680320
  408c78:	movk	x0, #0x412e, lsl #48
  408c7c:	fmov	d0, x0
  408c80:	fmul	d8, d8, d0
  408c84:	b	408c54 <get_time64@@Base+0x14c>
  408c88:	mov	x0, #0x400000000000        	// #70368744177664
  408c8c:	movk	x0, #0x408f, lsl #48
  408c90:	fmov	d0, x0
  408c94:	fmul	d8, d8, d0
  408c98:	b	408c54 <get_time64@@Base+0x14c>
  408c9c:	mov	w0, #0xffffffff            	// #-1
  408ca0:	b	408c64 <get_time64@@Base+0x15c>
  408ca4:	nop

0000000000408ca8 <sprint_time64@@Base>:
  408ca8:	stp	x29, x30, [sp, #-32]!
  408cac:	mov	x3, x0
  408cb0:	mov	x0, #0xc9ff                	// #51711
  408cb4:	mov	x29, sp
  408cb8:	str	x19, [sp, #16]
  408cbc:	movk	x0, #0x3b9a, lsl #16
  408cc0:	scvtf	d0, x3
  408cc4:	cmp	x3, x0
  408cc8:	mov	x19, x1
  408ccc:	b.gt	408d50 <sprint_time64@@Base+0xa8>
  408cd0:	mov	x0, #0x423f                	// #16959
  408cd4:	movk	x0, #0xf, lsl #16
  408cd8:	cmp	x3, x0
  408cdc:	b.gt	408d1c <sprint_time64@@Base+0x74>
  408ce0:	cmp	x3, #0x3e7
  408ce4:	b.le	408d84 <sprint_time64@@Base+0xdc>
  408ce8:	mov	x0, #0x400000000000        	// #70368744177664
  408cec:	mov	x1, #0x3f                  	// #63
  408cf0:	movk	x0, #0x408f, lsl #48
  408cf4:	fmov	d1, x0
  408cf8:	adrp	x2, 40e000 <_IO_stdin_used@@Base+0x490>
  408cfc:	mov	x0, x19
  408d00:	fdiv	d0, d0, d1
  408d04:	add	x2, x2, #0x6a0
  408d08:	bl	404e00 <snprintf@plt>
  408d0c:	mov	x0, x19
  408d10:	ldr	x19, [sp, #16]
  408d14:	ldp	x29, x30, [sp], #32
  408d18:	ret
  408d1c:	mov	x0, #0x848000000000        	// #145685290680320
  408d20:	mov	x1, #0x3f                  	// #63
  408d24:	movk	x0, #0x412e, lsl #48
  408d28:	fmov	d1, x0
  408d2c:	adrp	x2, 40e000 <_IO_stdin_used@@Base+0x490>
  408d30:	mov	x0, x19
  408d34:	fdiv	d0, d0, d1
  408d38:	add	x2, x2, #0x698
  408d3c:	bl	404e00 <snprintf@plt>
  408d40:	mov	x0, x19
  408d44:	ldr	x19, [sp, #16]
  408d48:	ldp	x29, x30, [sp], #32
  408d4c:	ret
  408d50:	mov	x0, #0xcd6500000000        	// #225833675390976
  408d54:	mov	x1, #0x3f                  	// #63
  408d58:	movk	x0, #0x41cd, lsl #48
  408d5c:	fmov	d1, x0
  408d60:	adrp	x2, 40e000 <_IO_stdin_used@@Base+0x490>
  408d64:	mov	x0, x19
  408d68:	fdiv	d0, d0, d1
  408d6c:	add	x2, x2, #0x690
  408d70:	bl	404e00 <snprintf@plt>
  408d74:	mov	x0, x19
  408d78:	ldr	x19, [sp, #16]
  408d7c:	ldp	x29, x30, [sp], #32
  408d80:	ret
  408d84:	mov	x0, x19
  408d88:	mov	x1, #0x3f                  	// #63
  408d8c:	adrp	x2, 40e000 <_IO_stdin_used@@Base+0x490>
  408d90:	add	x2, x2, #0x6a8
  408d94:	bl	404e00 <snprintf@plt>
  408d98:	mov	x0, x19
  408d9c:	ldr	x19, [sp, #16]
  408da0:	ldp	x29, x30, [sp], #32
  408da4:	ret

0000000000408da8 <namehash@@Base>:
  408da8:	ldrb	w1, [x0]
  408dac:	mov	x2, x0
  408db0:	mov	w0, #0x1505                	// #5381
  408db4:	cbz	w1, 408dc8 <namehash@@Base+0x20>
  408db8:	add	w3, w1, w0, lsl #5
  408dbc:	ldrb	w1, [x2, #1]!
  408dc0:	add	w0, w0, w3
  408dc4:	cbnz	w1, 408db8 <namehash@@Base+0x10>
  408dc8:	ret
  408dcc:	nop
  408dd0:	stp	x29, x30, [sp, #-64]!
  408dd4:	mov	x29, sp
  408dd8:	stp	x19, x20, [sp, #16]
  408ddc:	mov	x20, x2
  408de0:	stp	x21, x22, [sp, #32]
  408de4:	mov	x21, x1
  408de8:	mov	x22, x0
  408dec:	mov	x0, x1
  408df0:	stp	x23, x24, [sp, #48]
  408df4:	bl	404d10 <strlen@plt>
  408df8:	mov	x23, x0
  408dfc:	add	x0, x0, #0x41
  408e00:	bl	404e50 <malloc@plt>
  408e04:	mov	x19, x0
  408e08:	cbz	x0, 408e88 <namehash@@Base+0xe0>
  408e0c:	ldr	w24, [x22, #4]
  408e10:	add	x2, x23, #0x1
  408e14:	mov	x1, x21
  408e18:	add	x0, x0, #0x40
  408e1c:	str	w24, [x19, #36]
  408e20:	bl	404ce0 <memcpy@plt>
  408e24:	ldrh	w1, [x22, #2]
  408e28:	add	x0, x19, #0x30
  408e2c:	ldr	w2, [x22, #8]
  408e30:	str	w2, [x19, #32]
  408e34:	strh	w1, [x19, #40]
  408e38:	cbz	x20, 408ea0 <namehash@@Base+0xf8>
  408e3c:	ldr	x1, [x20, #56]
  408e40:	add	x2, x20, #0x30
  408e44:	stp	x2, x1, [x19, #48]
  408e48:	str	x0, [x20, #56]
  408e4c:	str	x0, [x1]
  408e50:	mov	x0, x21
  408e54:	bl	408da8 <namehash@@Base>
  408e58:	adrp	x1, 422000 <memcpy@GLIBC_2.17>
  408e5c:	and	x0, x0, #0x3ff
  408e60:	add	x2, x1, #0xd70
  408e64:	add	x3, x19, #0x10
  408e68:	ldr	x2, [x2, x0, lsl #3]
  408e6c:	str	x2, [x19, #16]
  408e70:	cbz	x2, 408e78 <namehash@@Base+0xd0>
  408e74:	str	x3, [x2, #8]
  408e78:	add	x1, x1, #0xd70
  408e7c:	add	x2, x1, x0, lsl #3
  408e80:	str	x2, [x19, #24]
  408e84:	str	x3, [x1, x0, lsl #3]
  408e88:	mov	x0, x19
  408e8c:	ldp	x19, x20, [sp, #16]
  408e90:	ldp	x21, x22, [sp, #32]
  408e94:	ldp	x23, x24, [sp, #48]
  408e98:	ldp	x29, x30, [sp], #64
  408e9c:	ret
  408ea0:	and	x24, x24, #0x3ff
  408ea4:	adrp	x1, 424000 <stdout@@GLIBC_2.17+0x1cf8>
  408ea8:	add	x2, x1, #0xd70
  408eac:	ldr	x2, [x2, x24, lsl #3]
  408eb0:	str	x2, [x19]
  408eb4:	cbz	x2, 408ebc <namehash@@Base+0x114>
  408eb8:	str	x19, [x2, #8]
  408ebc:	dup	v0.2d, x0
  408ec0:	add	x1, x1, #0xd70
  408ec4:	add	x0, x1, x24, lsl #3
  408ec8:	str	x0, [x19, #8]
  408ecc:	str	x19, [x1, x24, lsl #3]
  408ed0:	str	q0, [x19, #48]
  408ed4:	b	408e50 <namehash@@Base+0xa8>

0000000000408ed8 <ll_remember_index@@Base>:
  408ed8:	sub	sp, sp, #0x220
  408edc:	stp	x29, x30, [sp]
  408ee0:	mov	x29, sp
  408ee4:	ldrh	w2, [x0, #4]
  408ee8:	stp	x19, x20, [sp, #16]
  408eec:	mov	x20, x0
  408ef0:	sub	w0, w2, #0x10
  408ef4:	and	w0, w0, #0xffff
  408ef8:	cmp	w0, #0x1
  408efc:	b.hi	409130 <ll_remember_index@@Base+0x258>  // b.pmore
  408f00:	ldr	w3, [x20]
  408f04:	cmp	w3, #0x1f
  408f08:	b.ls	40932c <ll_remember_index@@Base+0x454>  // b.plast
  408f0c:	ldr	w0, [x20, #20]
  408f10:	add	x4, x20, #0x10
  408f14:	adrp	x1, 424000 <stdout@@GLIBC_2.17+0x1cf8>
  408f18:	add	x1, x1, #0xd70
  408f1c:	str	x4, [sp, #104]
  408f20:	and	x4, x0, #0x3ff
  408f24:	ldr	x19, [x1, x4, lsl #3]
  408f28:	cbnz	x19, 408f38 <ll_remember_index@@Base+0x60>
  408f2c:	b	409144 <ll_remember_index@@Base+0x26c>
  408f30:	ldr	x19, [x19]
  408f34:	cbz	x19, 409144 <ll_remember_index@@Base+0x26c>
  408f38:	ldr	w1, [x19, #36]
  408f3c:	cmp	w0, w1
  408f40:	b.ne	408f30 <ll_remember_index@@Base+0x58>  // b.any
  408f44:	cmp	w2, #0x11
  408f48:	b.eq	4091e0 <ll_remember_index@@Base+0x308>  // b.none
  408f4c:	sub	w3, w3, #0x20
  408f50:	add	x2, x20, #0x20
  408f54:	add	x0, sp, #0x70
  408f58:	mov	w4, #0xffff8000            	// #-32768
  408f5c:	mov	w1, #0x35                  	// #53
  408f60:	stp	x21, x22, [sp, #32]
  408f64:	stp	x23, x24, [sp, #48]
  408f68:	stp	x25, x26, [sp, #64]
  408f6c:	stp	x27, x28, [sp, #80]
  408f70:	bl	40d8e0 <parse_rtattr_flags@@Base>
  408f74:	ldr	x0, [sp, #136]
  408f78:	cbz	x0, 408fe0 <ll_remember_index@@Base+0x108>
  408f7c:	ldr	w1, [x20, #24]
  408f80:	add	x20, x0, #0x4
  408f84:	str	w1, [x19, #32]
  408f88:	add	x0, x19, #0x40
  408f8c:	mov	x1, x20
  408f90:	bl	404fd0 <strcmp@plt>
  408f94:	cbz	w0, 408fe0 <ll_remember_index@@Base+0x108>
  408f98:	ldp	x0, x1, [x19, #16]
  408f9c:	str	x0, [x1]
  408fa0:	cbz	x0, 408fa8 <ll_remember_index@@Base+0xd0>
  408fa4:	str	x1, [x0, #8]
  408fa8:	mov	x0, x20
  408fac:	bl	408da8 <namehash@@Base>
  408fb0:	adrp	x1, 422000 <memcpy@GLIBC_2.17>
  408fb4:	and	x0, x0, #0x3ff
  408fb8:	add	x2, x1, #0xd70
  408fbc:	add	x3, x19, #0x10
  408fc0:	ldr	x2, [x2, x0, lsl #3]
  408fc4:	str	x2, [x19, #16]
  408fc8:	cbz	x2, 408fd0 <ll_remember_index@@Base+0xf8>
  408fcc:	str	x3, [x2, #8]
  408fd0:	add	x1, x1, #0xd70
  408fd4:	add	x2, x1, x0, lsl #3
  408fd8:	str	x3, [x1, x0, lsl #3]
  408fdc:	str	x2, [x19, #24]
  408fe0:	ldr	x22, [x19, #48]
  408fe4:	ldr	x23, [sp, #528]
  408fe8:	ldr	x26, [x22], #-48
  408fec:	sub	x28, x26, #0x30
  408ff0:	cbz	x23, 4092d4 <ll_remember_index@@Base+0x3fc>
  408ff4:	ldrh	w27, [x23], #4
  408ff8:	mov	x25, x22
  408ffc:	sub	w27, w27, #0x4
  409000:	mov	x21, x23
  409004:	cmp	w27, #0x3
  409008:	mov	w24, w27
  40900c:	b.gt	409050 <ll_remember_index@@Base+0x178>
  409010:	b	409334 <ll_remember_index@@Base+0x45c>
  409014:	cmp	w20, w24
  409018:	b.gt	409064 <ll_remember_index@@Base+0x18c>
  40901c:	ldrh	w3, [x21, #2]
  409020:	cmp	w3, #0x35
  409024:	b.ne	409038 <ll_remember_index@@Base+0x160>  // b.any
  409028:	bl	404fd0 <strcmp@plt>
  40902c:	cbnz	w0, 409064 <ll_remember_index@@Base+0x18c>
  409030:	ldr	x2, [x25, #48]
  409034:	sub	x25, x2, #0x30
  409038:	add	w20, w20, #0x3
  40903c:	and	w20, w20, #0xfffffffc
  409040:	sub	w24, w24, w20
  409044:	cmp	w24, #0x3
  409048:	add	x21, x21, w20, uxtw
  40904c:	b.le	409064 <ll_remember_index@@Base+0x18c>
  409050:	ldrh	w20, [x21]
  409054:	add	x1, x25, #0x40
  409058:	add	x0, x21, #0x4
  40905c:	cmp	w20, #0x3
  409060:	b.hi	409014 <ll_remember_index@@Base+0x13c>  // b.pmore
  409064:	cmp	x22, x19
  409068:	b.ne	40909c <ll_remember_index@@Base+0x1c4>  // b.any
  40906c:	b	4090e8 <ll_remember_index@@Base+0x210>
  409070:	ldr	x3, [x22, #56]
  409074:	str	x2, [x1, #8]
  409078:	str	x3, [x26, #8]
  40907c:	str	x26, [x3]
  409080:	bl	405030 <free@plt>
  409084:	ldr	x26, [x28, #48]
  409088:	cmp	x28, x19
  40908c:	sub	x0, x26, #0x30
  409090:	b.eq	4090cc <ll_remember_index@@Base+0x1f4>  // b.none
  409094:	mov	x22, x28
  409098:	mov	x28, x0
  40909c:	ldp	x1, x2, [x22, #16]
  4090a0:	mov	x0, x22
  4090a4:	str	x1, [x2]
  4090a8:	cbnz	x1, 409070 <ll_remember_index@@Base+0x198>
  4090ac:	ldr	x1, [x22, #56]
  4090b0:	str	x1, [x26, #8]
  4090b4:	str	x26, [x1]
  4090b8:	bl	405030 <free@plt>
  4090bc:	ldr	x26, [x28, #48]
  4090c0:	cmp	x28, x19
  4090c4:	sub	x0, x26, #0x30
  4090c8:	b.ne	409094 <ll_remember_index@@Base+0x1bc>  // b.any
  4090cc:	ldr	x23, [sp, #528]
  4090d0:	cbz	x23, 409120 <ll_remember_index@@Base+0x248>
  4090d4:	ldrh	w27, [x23], #4
  4090d8:	sub	w27, w27, #0x4
  4090dc:	cmp	w27, #0x3
  4090e0:	b.le	409120 <ll_remember_index@@Base+0x248>
  4090e4:	nop
  4090e8:	ldrh	w1, [x23]
  4090ec:	add	w0, w1, #0x3
  4090f0:	cmp	w1, #0x3
  4090f4:	and	w0, w0, #0xfffffffc
  4090f8:	b.ls	409120 <ll_remember_index@@Base+0x248>  // b.plast
  4090fc:	cmp	w1, w27
  409100:	b.gt	409120 <ll_remember_index@@Base+0x248>
  409104:	ldrh	w1, [x23, #2]
  409108:	cmp	w1, #0x35
  40910c:	b.eq	409244 <ll_remember_index@@Base+0x36c>  // b.none
  409110:	sub	w27, w27, w0
  409114:	add	x23, x23, w0, uxtw
  409118:	cmp	w27, #0x3
  40911c:	b.gt	4090e8 <ll_remember_index@@Base+0x210>
  409120:	ldp	x21, x22, [sp, #32]
  409124:	ldp	x23, x24, [sp, #48]
  409128:	ldp	x25, x26, [sp, #64]
  40912c:	ldp	x27, x28, [sp, #80]
  409130:	mov	w0, #0x0                   	// #0
  409134:	ldp	x29, x30, [sp]
  409138:	ldp	x19, x20, [sp, #16]
  40913c:	add	sp, sp, #0x220
  409140:	ret
  409144:	cmp	w2, #0x11
  409148:	b.eq	409130 <ll_remember_index@@Base+0x258>  // b.none
  40914c:	mov	w1, #0x35                  	// #53
  409150:	sub	w3, w3, #0x20
  409154:	add	x2, x20, #0x20
  409158:	add	x0, sp, #0x70
  40915c:	mov	w4, #0xffff8000            	// #-32768
  409160:	bl	40d8e0 <parse_rtattr_flags@@Base>
  409164:	ldr	x1, [sp, #136]
  409168:	cbz	x1, 409130 <ll_remember_index@@Base+0x258>
  40916c:	ldr	x0, [sp, #104]
  409170:	add	x1, x1, #0x4
  409174:	mov	x2, #0x0                   	// #0
  409178:	stp	x21, x22, [sp, #32]
  40917c:	bl	408dd0 <namehash@@Base+0x28>
  409180:	mov	x21, x0
  409184:	cbz	x0, 4091d8 <ll_remember_index@@Base+0x300>
  409188:	ldr	x19, [sp, #528]
  40918c:	cbz	x19, 4091d8 <ll_remember_index@@Base+0x300>
  409190:	ldrh	w20, [x19], #4
  409194:	sub	w20, w20, #0x4
  409198:	cmp	w20, #0x3
  40919c:	b.le	4091d8 <ll_remember_index@@Base+0x300>
  4091a0:	ldrh	w3, [x19]
  4091a4:	add	w1, w3, #0x3
  4091a8:	cmp	w3, #0x3
  4091ac:	and	w1, w1, #0xfffffffc
  4091b0:	b.ls	4091d8 <ll_remember_index@@Base+0x300>  // b.plast
  4091b4:	cmp	w3, w20
  4091b8:	b.gt	4091d8 <ll_remember_index@@Base+0x300>
  4091bc:	ldrh	w3, [x19, #2]
  4091c0:	cmp	w3, #0x35
  4091c4:	b.eq	4092a0 <ll_remember_index@@Base+0x3c8>  // b.none
  4091c8:	sub	w20, w20, w1
  4091cc:	add	x19, x19, w1, uxtw
  4091d0:	cmp	w20, #0x3
  4091d4:	b.gt	4091a0 <ll_remember_index@@Base+0x2c8>
  4091d8:	ldp	x21, x22, [sp, #32]
  4091dc:	b	409130 <ll_remember_index@@Base+0x258>
  4091e0:	ldr	x1, [x19, #48]
  4091e4:	ldr	x2, [x1], #-48
  4091e8:	cmp	x1, x19
  4091ec:	sub	x20, x2, #0x30
  4091f0:	b.ne	409224 <ll_remember_index@@Base+0x34c>  // b.any
  4091f4:	b	409274 <ll_remember_index@@Base+0x39c>
  4091f8:	ldr	x1, [x1, #56]
  4091fc:	str	x4, [x3, #8]
  409200:	str	x1, [x2, #8]
  409204:	str	x2, [x1]
  409208:	bl	405030 <free@plt>
  40920c:	ldr	x2, [x20, #48]
  409210:	cmp	x20, x19
  409214:	sub	x0, x2, #0x30
  409218:	b.eq	409274 <ll_remember_index@@Base+0x39c>  // b.none
  40921c:	mov	x1, x20
  409220:	mov	x20, x0
  409224:	ldp	x3, x4, [x1, #16]
  409228:	mov	x0, x1
  40922c:	str	x3, [x4]
  409230:	cbnz	x3, 4091f8 <ll_remember_index@@Base+0x320>
  409234:	ldr	x3, [x1, #56]
  409238:	str	x3, [x2, #8]
  40923c:	str	x2, [x3]
  409240:	b	409208 <ll_remember_index@@Base+0x330>
  409244:	ldr	x0, [sp, #104]
  409248:	add	x1, x23, #0x4
  40924c:	mov	x2, x19
  409250:	bl	408dd0 <namehash@@Base+0x28>
  409254:	ldrh	w0, [x23]
  409258:	add	w0, w0, #0x3
  40925c:	and	w0, w0, #0xfffffffc
  409260:	sub	w27, w27, w0
  409264:	cmp	w27, #0x3
  409268:	add	x23, x23, w0, uxtw
  40926c:	b.gt	4090e8 <ll_remember_index@@Base+0x210>
  409270:	b	409120 <ll_remember_index@@Base+0x248>
  409274:	ldp	x0, x1, [x19, #16]
  409278:	str	x0, [x1]
  40927c:	cbz	x0, 409284 <ll_remember_index@@Base+0x3ac>
  409280:	str	x1, [x0, #8]
  409284:	ldp	x0, x1, [x19]
  409288:	str	x0, [x1]
  40928c:	cbz	x0, 409294 <ll_remember_index@@Base+0x3bc>
  409290:	str	x1, [x0, #8]
  409294:	mov	x0, x19
  409298:	bl	405030 <free@plt>
  40929c:	b	409130 <ll_remember_index@@Base+0x258>
  4092a0:	ldr	x0, [sp, #104]
  4092a4:	add	x1, x19, #0x4
  4092a8:	mov	x2, x21
  4092ac:	bl	408dd0 <namehash@@Base+0x28>
  4092b0:	ldrh	w1, [x19]
  4092b4:	add	w1, w1, #0x3
  4092b8:	and	w1, w1, #0xfffffffc
  4092bc:	sub	w20, w20, w1
  4092c0:	cmp	w20, #0x3
  4092c4:	add	x19, x19, w1, uxtw
  4092c8:	b.gt	4091a0 <ll_remember_index@@Base+0x2c8>
  4092cc:	ldp	x21, x22, [sp, #32]
  4092d0:	b	409130 <ll_remember_index@@Base+0x258>
  4092d4:	cmp	x22, x19
  4092d8:	b.ne	40930c <ll_remember_index@@Base+0x434>  // b.any
  4092dc:	b	409120 <ll_remember_index@@Base+0x248>
  4092e0:	ldr	x3, [x22, #56]
  4092e4:	str	x2, [x1, #8]
  4092e8:	str	x3, [x26, #8]
  4092ec:	str	x26, [x3]
  4092f0:	bl	405030 <free@plt>
  4092f4:	ldr	x26, [x28, #48]
  4092f8:	cmp	x28, x19
  4092fc:	sub	x0, x26, #0x30
  409300:	b.eq	409120 <ll_remember_index@@Base+0x248>  // b.none
  409304:	mov	x22, x28
  409308:	mov	x28, x0
  40930c:	ldp	x1, x2, [x22, #16]
  409310:	mov	x0, x22
  409314:	str	x1, [x2]
  409318:	cbnz	x1, 4092e0 <ll_remember_index@@Base+0x408>
  40931c:	ldr	x1, [x22, #56]
  409320:	str	x1, [x26, #8]
  409324:	str	x26, [x1]
  409328:	b	4092f0 <ll_remember_index@@Base+0x418>
  40932c:	mov	w0, #0xffffffff            	// #-1
  409330:	b	409134 <ll_remember_index@@Base+0x25c>
  409334:	cmp	x22, x19
  409338:	b.ne	40909c <ll_remember_index@@Base+0x1c4>  // b.any
  40933c:	b	409120 <ll_remember_index@@Base+0x248>
  409340:	sub	sp, sp, #0x490
  409344:	mov	x2, #0x420                 	// #1056
  409348:	stp	x29, x30, [sp]
  40934c:	mov	x29, sp
  409350:	stp	x21, x22, [sp, #32]
  409354:	add	x21, sp, #0x70
  409358:	add	x22, sp, #0x38
  40935c:	stp	x19, x20, [sp, #16]
  409360:	mov	w20, w1
  409364:	mov	x19, x0
  409368:	mov	w1, #0x0                   	// #0
  40936c:	mov	x0, x21
  409370:	bl	404ec0 <memset@plt>
  409374:	stp	xzr, xzr, [sp, #56]
  409378:	mov	x2, #0x20                  	// #32
  40937c:	movk	x2, #0x12, lsl #32
  409380:	mov	x0, x22
  409384:	movk	x2, #0x1, lsl #48
  409388:	mov	w1, #0x0                   	// #0
  40938c:	stp	xzr, xzr, [sp, #72]
  409390:	stp	xzr, xzr, [sp, #88]
  409394:	stp	xzr, x2, [sp, #104]
  409398:	str	w20, [sp, #132]
  40939c:	bl	40bb48 <rtnl_open@@Base>
  4093a0:	tbnz	w0, #31, 40944c <ll_remember_index@@Base+0x574>
  4093a4:	mov	x0, x21
  4093a8:	mov	w3, #0x9                   	// #9
  4093ac:	mov	w2, #0x1d                  	// #29
  4093b0:	mov	w1, #0x420                 	// #1056
  4093b4:	bl	40d498 <addattr32@@Base>
  4093b8:	cbz	x19, 4093f4 <ll_remember_index@@Base+0x51c>
  4093bc:	mov	x0, x19
  4093c0:	bl	407148 <check_ifname@@Base>
  4093c4:	cmp	w0, #0x0
  4093c8:	mov	w2, #0x35                  	// #53
  4093cc:	mov	x0, x19
  4093d0:	mov	w20, #0x3                   	// #3
  4093d4:	csel	w20, w20, w2, eq  // eq = none
  4093d8:	bl	404d10 <strlen@plt>
  4093dc:	add	w4, w0, #0x1
  4093e0:	mov	w2, w20
  4093e4:	mov	x3, x19
  4093e8:	mov	x0, x21
  4093ec:	mov	w1, #0x420                 	// #1056
  4093f0:	bl	40d3a8 <addattr_l@@Base>
  4093f4:	mov	x1, x21
  4093f8:	add	x2, sp, #0x30
  4093fc:	mov	x0, x22
  409400:	mov	w19, #0x0                   	// #0
  409404:	bl	40ce68 <rtnl_talk_suppress_rtnl_errmsg@@Base>
  409408:	tbnz	w0, #31, 40942c <ll_remember_index@@Base+0x554>
  40940c:	ldr	x0, [sp, #48]
  409410:	mov	x1, #0x0                   	// #0
  409414:	bl	408ed8 <ll_remember_index@@Base>
  409418:	mov	w19, w0
  40941c:	ldr	x0, [sp, #48]
  409420:	cbnz	w19, 409428 <ll_remember_index@@Base+0x550>
  409424:	ldr	w19, [x0, #20]
  409428:	bl	405030 <free@plt>
  40942c:	mov	x0, x22
  409430:	bl	40b950 <rtnl_close@@Base>
  409434:	mov	w0, w19
  409438:	ldp	x29, x30, [sp]
  40943c:	ldp	x19, x20, [sp, #16]
  409440:	ldp	x21, x22, [sp, #32]
  409444:	add	sp, sp, #0x490
  409448:	ret
  40944c:	mov	w19, #0x0                   	// #0
  409450:	mov	w0, w19
  409454:	ldp	x29, x30, [sp]
  409458:	ldp	x19, x20, [sp, #16]
  40945c:	ldp	x21, x22, [sp, #32]
  409460:	add	sp, sp, #0x490
  409464:	ret

0000000000409468 <ll_idx_n2a@@Base>:
  409468:	stp	x29, x30, [sp, #-32]!
  40946c:	mov	w3, w0
  409470:	mov	x1, #0x10                  	// #16
  409474:	mov	x29, sp
  409478:	str	x19, [sp, #16]
  40947c:	adrp	x19, 422000 <memcpy@GLIBC_2.17>
  409480:	add	x19, x19, #0xd40
  409484:	adrp	x2, 40e000 <_IO_stdin_used@@Base+0x490>
  409488:	mov	x0, x19
  40948c:	add	x2, x2, #0x728
  409490:	bl	404e00 <snprintf@plt>
  409494:	mov	x0, x19
  409498:	ldr	x19, [sp, #16]
  40949c:	ldp	x29, x30, [sp], #32
  4094a0:	ret
  4094a4:	nop

00000000004094a8 <ll_index_to_name@@Base>:
  4094a8:	stp	x29, x30, [sp, #-48]!
  4094ac:	mov	x29, sp
  4094b0:	stp	x19, x20, [sp, #16]
  4094b4:	cbz	w0, 409504 <ll_index_to_name@@Base+0x5c>
  4094b8:	mov	w20, w0
  4094bc:	adrp	x19, 424000 <stdout@@GLIBC_2.17+0x1cf8>
  4094c0:	add	x0, x19, #0xd70
  4094c4:	str	x21, [sp, #32]
  4094c8:	and	x21, x20, #0x3ff
  4094cc:	ldr	x1, [x0, x21, lsl #3]
  4094d0:	cbnz	x1, 4094e0 <ll_index_to_name@@Base+0x38>
  4094d4:	b	40951c <ll_index_to_name@@Base+0x74>
  4094d8:	ldr	x1, [x1]
  4094dc:	cbz	x1, 40951c <ll_index_to_name@@Base+0x74>
  4094e0:	ldr	w0, [x1, #36]
  4094e4:	cmp	w20, w0
  4094e8:	b.ne	4094d8 <ll_index_to_name@@Base+0x30>  // b.any
  4094ec:	ldr	x21, [sp, #32]
  4094f0:	add	x19, x1, #0x40
  4094f4:	mov	x0, x19
  4094f8:	ldp	x19, x20, [sp, #16]
  4094fc:	ldp	x29, x30, [sp], #48
  409500:	ret
  409504:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x490>
  409508:	add	x19, x1, #0x730
  40950c:	mov	x0, x19
  409510:	ldp	x19, x20, [sp, #16]
  409514:	ldp	x29, x30, [sp], #48
  409518:	ret
  40951c:	mov	w1, w20
  409520:	mov	x0, #0x0                   	// #0
  409524:	bl	409340 <ll_remember_index@@Base+0x468>
  409528:	cmp	w0, w20
  40952c:	b.ne	409558 <ll_index_to_name@@Base+0xb0>  // b.any
  409530:	add	x19, x19, #0xd70
  409534:	ldr	x1, [x19, x21, lsl #3]
  409538:	cbnz	x1, 409548 <ll_index_to_name@@Base+0xa0>
  40953c:	b	409558 <ll_index_to_name@@Base+0xb0>
  409540:	ldr	x1, [x1]
  409544:	cbz	x1, 409558 <ll_index_to_name@@Base+0xb0>
  409548:	ldr	w0, [x1, #36]
  40954c:	cmp	w20, w0
  409550:	b.ne	409540 <ll_index_to_name@@Base+0x98>  // b.any
  409554:	b	4094ec <ll_index_to_name@@Base+0x44>
  409558:	adrp	x1, 422000 <memcpy@GLIBC_2.17>
  40955c:	add	x1, x1, #0xd40
  409560:	add	x1, x1, #0x10
  409564:	mov	w0, w20
  409568:	mov	x19, x1
  40956c:	bl	404eb0 <if_indextoname@plt>
  409570:	cbz	x0, 409588 <ll_index_to_name@@Base+0xe0>
  409574:	mov	x0, x19
  409578:	ldp	x19, x20, [sp, #16]
  40957c:	ldr	x21, [sp, #32]
  409580:	ldp	x29, x30, [sp], #48
  409584:	ret
  409588:	mov	w3, w20
  40958c:	mov	x0, x19
  409590:	adrp	x2, 40e000 <_IO_stdin_used@@Base+0x490>
  409594:	mov	x1, #0x10                  	// #16
  409598:	add	x2, x2, #0x728
  40959c:	bl	404e00 <snprintf@plt>
  4095a0:	ldr	x21, [sp, #32]
  4095a4:	b	4094f4 <ll_index_to_name@@Base+0x4c>

00000000004095a8 <ll_index_to_type@@Base>:
  4095a8:	cbz	w0, 4095e0 <ll_index_to_type@@Base+0x38>
  4095ac:	and	x2, x0, #0x3ff
  4095b0:	adrp	x1, 424000 <stdout@@GLIBC_2.17+0x1cf8>
  4095b4:	add	x1, x1, #0xd70
  4095b8:	ldr	x1, [x1, x2, lsl #3]
  4095bc:	cbnz	x1, 4095cc <ll_index_to_type@@Base+0x24>
  4095c0:	b	4095e0 <ll_index_to_type@@Base+0x38>
  4095c4:	ldr	x1, [x1]
  4095c8:	cbz	x1, 4095e0 <ll_index_to_type@@Base+0x38>
  4095cc:	ldr	w2, [x1, #36]
  4095d0:	cmp	w0, w2
  4095d4:	b.ne	4095c4 <ll_index_to_type@@Base+0x1c>  // b.any
  4095d8:	ldrh	w0, [x1, #40]
  4095dc:	ret
  4095e0:	mov	w0, #0xffffffff            	// #-1
  4095e4:	ret

00000000004095e8 <ll_index_to_flags@@Base>:
  4095e8:	cbz	w0, 409620 <ll_index_to_flags@@Base+0x38>
  4095ec:	and	x2, x0, #0x3ff
  4095f0:	adrp	x1, 424000 <stdout@@GLIBC_2.17+0x1cf8>
  4095f4:	add	x1, x1, #0xd70
  4095f8:	ldr	x1, [x1, x2, lsl #3]
  4095fc:	cbnz	x1, 40960c <ll_index_to_flags@@Base+0x24>
  409600:	b	409628 <ll_index_to_flags@@Base+0x40>
  409604:	ldr	x1, [x1]
  409608:	cbz	x1, 409628 <ll_index_to_flags@@Base+0x40>
  40960c:	ldr	w2, [x1, #36]
  409610:	cmp	w0, w2
  409614:	b.ne	409604 <ll_index_to_flags@@Base+0x1c>  // b.any
  409618:	ldr	w0, [x1, #32]
  40961c:	ret
  409620:	mov	w0, #0x0                   	// #0
  409624:	ret
  409628:	mov	w0, #0xffffffff            	// #-1
  40962c:	ret

0000000000409630 <ll_name_to_index@@Base>:
  409630:	cbz	x0, 4096d8 <ll_name_to_index@@Base+0xa8>
  409634:	stp	x29, x30, [sp, #-64]!
  409638:	mov	x29, sp
  40963c:	stp	x19, x20, [sp, #16]
  409640:	mov	x20, x0
  409644:	bl	408da8 <namehash@@Base>
  409648:	adrp	x1, 422000 <memcpy@GLIBC_2.17>
  40964c:	and	x0, x0, #0x3ff
  409650:	add	x1, x1, #0xd70
  409654:	ldr	x19, [x1, x0, lsl #3]
  409658:	cbz	x19, 409698 <ll_name_to_index@@Base+0x68>
  40965c:	str	x21, [sp, #32]
  409660:	b	40966c <ll_name_to_index@@Base+0x3c>
  409664:	ldr	x19, [x19]
  409668:	cbz	x19, 409694 <ll_name_to_index@@Base+0x64>
  40966c:	mov	x1, x20
  409670:	add	x0, x19, #0x30
  409674:	sub	x21, x19, #0x10
  409678:	bl	404fd0 <strcmp@plt>
  40967c:	cbnz	w0, 409664 <ll_name_to_index@@Base+0x34>
  409680:	ldr	w0, [x21, #36]
  409684:	ldr	x21, [sp, #32]
  409688:	ldp	x19, x20, [sp, #16]
  40968c:	ldp	x29, x30, [sp], #64
  409690:	ret
  409694:	ldr	x21, [sp, #32]
  409698:	mov	x0, x20
  40969c:	mov	w1, #0x0                   	// #0
  4096a0:	bl	409340 <ll_remember_index@@Base+0x468>
  4096a4:	cbnz	w0, 409688 <ll_name_to_index@@Base+0x58>
  4096a8:	mov	x0, x20
  4096ac:	bl	405120 <if_nametoindex@plt>
  4096b0:	cbnz	w0, 409688 <ll_name_to_index@@Base+0x58>
  4096b4:	mov	x0, x20
  4096b8:	add	x2, sp, #0x3c
  4096bc:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x490>
  4096c0:	add	x1, x1, #0x728
  4096c4:	bl	405150 <__isoc99_sscanf@plt>
  4096c8:	cmp	w0, #0x1
  4096cc:	ldr	w1, [sp, #60]
  4096d0:	csel	w0, w1, wzr, eq  // eq = none
  4096d4:	b	409688 <ll_name_to_index@@Base+0x58>
  4096d8:	mov	w0, #0x0                   	// #0
  4096dc:	ret

00000000004096e0 <ll_drop_by_index@@Base>:
  4096e0:	mov	w3, w0
  4096e4:	adrp	x1, 424000 <stdout@@GLIBC_2.17+0x1cf8>
  4096e8:	and	x0, x3, #0x3ff
  4096ec:	add	x1, x1, #0xd70
  4096f0:	ldr	x1, [x1, x0, lsl #3]
  4096f4:	nop
  4096f8:	cbz	x1, 409734 <ll_drop_by_index@@Base+0x54>
  4096fc:	ldr	w2, [x1, #36]
  409700:	mov	x0, x1
  409704:	ldr	x1, [x1]
  409708:	cmp	w3, w2
  40970c:	b.ne	4096f8 <ll_drop_by_index@@Base+0x18>  // b.any
  409710:	ldr	x2, [x0, #8]
  409714:	str	x1, [x2]
  409718:	cbz	x1, 409720 <ll_drop_by_index@@Base+0x40>
  40971c:	str	x2, [x1, #8]
  409720:	ldp	x1, x2, [x0, #16]
  409724:	str	x1, [x2]
  409728:	cbz	x1, 409730 <ll_drop_by_index@@Base+0x50>
  40972c:	str	x2, [x1, #8]
  409730:	b	405030 <free@plt>
  409734:	ret

0000000000409738 <ll_init_map@@Base>:
  409738:	stp	x29, x30, [sp, #-32]!
  40973c:	mov	x29, sp
  409740:	stp	x19, x20, [sp, #16]
  409744:	adrp	x19, 422000 <memcpy@GLIBC_2.17>
  409748:	add	x19, x19, #0xd40
  40974c:	ldr	w1, [x19, #32]
  409750:	cbz	w1, 409760 <ll_init_map@@Base+0x28>
  409754:	ldp	x19, x20, [sp, #16]
  409758:	ldp	x29, x30, [sp], #32
  40975c:	ret
  409760:	mov	x20, x0
  409764:	bl	40c0c8 <rtnl_linkdump_req@@Base>
  409768:	tbnz	w0, #31, 40979c <ll_init_map@@Base+0x64>
  40976c:	adrp	x1, 421000 <_IO_stdin_used@@Base+0x13490>
  409770:	mov	x0, x20
  409774:	mov	w3, #0x0                   	// #0
  409778:	mov	x2, #0x0                   	// #0
  40977c:	ldr	x1, [x1, #4008]
  409780:	bl	40c5d0 <rtnl_dump_filter_nc@@Base>
  409784:	tbnz	w0, #31, 4097b0 <ll_init_map@@Base+0x78>
  409788:	mov	w0, #0x1                   	// #1
  40978c:	str	w0, [x19, #32]
  409790:	ldp	x19, x20, [sp, #16]
  409794:	ldp	x29, x30, [sp], #32
  409798:	ret
  40979c:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x490>
  4097a0:	add	x0, x0, #0x738
  4097a4:	bl	404d30 <perror@plt>
  4097a8:	mov	w0, #0x1                   	// #1
  4097ac:	bl	404d20 <exit@plt>
  4097b0:	adrp	x3, 421000 <_IO_stdin_used@@Base+0x13490>
  4097b4:	mov	x2, #0x10                  	// #16
  4097b8:	mov	x1, #0x1                   	// #1
  4097bc:	adrp	x0, 40d000 <rtnl_listen@@Base+0x100>
  4097c0:	ldr	x3, [x3, #3992]
  4097c4:	add	x0, x0, #0xfa8
  4097c8:	ldr	x3, [x3]
  4097cc:	bl	405090 <fwrite@plt>
  4097d0:	mov	w0, #0x1                   	// #1
  4097d4:	bl	404d20 <exit@plt>

00000000004097d8 <ll_addr_n2a@@Base>:
  4097d8:	stp	x29, x30, [sp, #-80]!
  4097dc:	cmp	w1, #0x4
  4097e0:	mov	x29, sp
  4097e4:	stp	x21, x22, [sp, #32]
  4097e8:	mov	w21, w1
  4097ec:	mov	x22, x0
  4097f0:	stp	x23, x24, [sp, #48]
  4097f4:	mov	w23, w4
  4097f8:	stp	x25, x26, [sp, #64]
  4097fc:	mov	x25, x3
  409800:	b.eq	4098b8 <ll_addr_n2a@@Base+0xe0>  // b.none
  409804:	cmp	w1, #0x10
  409808:	b.ne	40981c <ll_addr_n2a@@Base+0x44>  // b.any
  40980c:	cmp	w2, #0x301
  409810:	mov	w0, #0x337                 	// #823
  409814:	ccmp	w2, w0, #0x4, ne  // ne = any
  409818:	b.eq	4098f0 <ll_addr_n2a@@Base+0x118>  // b.none
  40981c:	ldrb	w3, [x22]
  409820:	sxtw	x24, w23
  409824:	mov	x1, x24
  409828:	mov	x0, x25
  40982c:	adrp	x2, 40e000 <_IO_stdin_used@@Base+0x490>
  409830:	add	x2, x2, #0x528
  409834:	bl	404e00 <snprintf@plt>
  409838:	cmp	w23, #0x2
  40983c:	ccmp	w21, #0x1, #0x4, gt
  409840:	b.le	4098a0 <ll_addr_n2a@@Base+0xc8>
  409844:	adrp	x26, 40e000 <_IO_stdin_used@@Base+0x490>
  409848:	sub	x22, x22, #0x1
  40984c:	add	x24, x25, x24
  409850:	add	x26, x26, #0x758
  409854:	stp	x19, x20, [sp, #16]
  409858:	add	x20, x25, #0x2
  40985c:	mov	x19, #0x2                   	// #2
  409860:	ldrb	w3, [x22, x19]
  409864:	sub	x1, x24, x20
  409868:	mov	x0, x20
  40986c:	mov	x2, x26
  409870:	add	x20, x20, #0x3
  409874:	bl	404e00 <snprintf@plt>
  409878:	add	w0, w19, w19, lsl #1
  40987c:	sub	w0, w0, #0x1
  409880:	cmp	w0, w23
  409884:	cset	w1, lt  // lt = tstop
  409888:	cmp	w21, w19
  40988c:	cset	w0, gt
  409890:	add	x19, x19, #0x1
  409894:	tst	w1, w0
  409898:	b.ne	409860 <ll_addr_n2a@@Base+0x88>  // b.any
  40989c:	ldp	x19, x20, [sp, #16]
  4098a0:	mov	x0, x25
  4098a4:	ldp	x21, x22, [sp, #32]
  4098a8:	ldp	x23, x24, [sp, #48]
  4098ac:	ldp	x25, x26, [sp, #64]
  4098b0:	ldp	x29, x30, [sp], #80
  4098b4:	ret
  4098b8:	and	w1, w2, #0xfffffff7
  4098bc:	mov	w0, #0x30a                 	// #778
  4098c0:	cmp	w1, #0x300
  4098c4:	ccmp	w2, w0, #0x4, ne  // ne = any
  4098c8:	b.ne	40981c <ll_addr_n2a@@Base+0x44>  // b.any
  4098cc:	mov	w3, w4
  4098d0:	mov	x2, x25
  4098d4:	mov	x1, x22
  4098d8:	mov	w0, #0x2                   	// #2
  4098dc:	ldp	x21, x22, [sp, #32]
  4098e0:	ldp	x23, x24, [sp, #48]
  4098e4:	ldp	x25, x26, [sp, #64]
  4098e8:	ldp	x29, x30, [sp], #80
  4098ec:	b	405220 <inet_ntop@plt>
  4098f0:	mov	w3, w4
  4098f4:	mov	x2, x25
  4098f8:	mov	x1, x22
  4098fc:	mov	w0, #0xa                   	// #10
  409900:	b	4098dc <ll_addr_n2a@@Base+0x104>
  409904:	nop

0000000000409908 <ll_addr_a2n@@Base>:
  409908:	stp	x29, x30, [sp, #-352]!
  40990c:	mov	x29, sp
  409910:	stp	x21, x22, [sp, #32]
  409914:	mov	w22, w1
  409918:	mov	x21, x2
  40991c:	mov	w1, #0x2e                  	// #46
  409920:	stp	x23, x24, [sp, #48]
  409924:	mov	x23, x0
  409928:	mov	x0, x2
  40992c:	bl	405070 <strchr@plt>
  409930:	cbz	x0, 409970 <ll_addr_a2n@@Base+0x68>
  409934:	mov	x1, x21
  409938:	add	x0, sp, #0x58
  40993c:	mov	w2, #0x2                   	// #2
  409940:	bl	4069a8 <get_addr_1@@Base>
  409944:	cbnz	w0, 409a34 <ll_addr_a2n@@Base+0x12c>
  409948:	cmp	w22, #0x3
  40994c:	mov	w0, #0xffffffff            	// #-1
  409950:	b.le	409960 <ll_addr_a2n@@Base+0x58>
  409954:	ldr	w1, [sp, #96]
  409958:	mov	w0, #0x4                   	// #4
  40995c:	str	w1, [x23]
  409960:	ldp	x21, x22, [sp, #32]
  409964:	ldp	x23, x24, [sp, #48]
  409968:	ldp	x29, x30, [sp], #352
  40996c:	ret
  409970:	cmp	w22, #0x0
  409974:	mov	w0, #0x1                   	// #1
  409978:	b.le	409960 <ll_addr_a2n@@Base+0x58>
  40997c:	sub	w22, w22, #0x1
  409980:	adrp	x24, 40e000 <_IO_stdin_used@@Base+0x490>
  409984:	sub	x23, x23, #0x1
  409988:	add	x22, x22, #0x2
  40998c:	add	x24, x24, #0x780
  409990:	stp	x19, x20, [sp, #16]
  409994:	mov	x20, #0x1                   	// #1
  409998:	str	x25, [sp, #64]
  40999c:	add	x25, sp, #0x58
  4099a0:	b	4099cc <ll_addr_a2n@@Base+0xc4>
  4099a4:	ldr	w1, [sp, #88]
  4099a8:	mov	w0, w20
  4099ac:	cmp	w1, #0xff
  4099b0:	b.hi	4099fc <ll_addr_a2n@@Base+0xf4>  // b.pmore
  4099b4:	strb	w1, [x23, x20]
  4099b8:	add	x20, x20, #0x1
  4099bc:	mov	x21, x19
  4099c0:	cmp	x20, x22
  4099c4:	cbz	x19, 409a64 <ll_addr_a2n@@Base+0x15c>
  4099c8:	b.eq	409a7c <ll_addr_a2n@@Base+0x174>  // b.none
  4099cc:	mov	w1, #0x3a                  	// #58
  4099d0:	mov	x0, x21
  4099d4:	bl	405070 <strchr@plt>
  4099d8:	mov	x19, x0
  4099dc:	mov	x2, x25
  4099e0:	mov	x0, x21
  4099e4:	mov	x1, x24
  4099e8:	cbz	x19, 4099f0 <ll_addr_a2n@@Base+0xe8>
  4099ec:	strb	wzr, [x19], #1
  4099f0:	bl	405150 <__isoc99_sscanf@plt>
  4099f4:	cmp	w0, #0x1
  4099f8:	b.eq	4099a4 <ll_addr_a2n@@Base+0x9c>  // b.none
  4099fc:	adrp	x0, 421000 <_IO_stdin_used@@Base+0x13490>
  409a00:	mov	x2, x21
  409a04:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x490>
  409a08:	add	x1, x1, #0x760
  409a0c:	ldr	x0, [x0, #3992]
  409a10:	ldr	x0, [x0]
  409a14:	bl	405200 <fprintf@plt>
  409a18:	mov	w0, #0xffffffff            	// #-1
  409a1c:	ldp	x19, x20, [sp, #16]
  409a20:	ldp	x21, x22, [sp, #32]
  409a24:	ldp	x23, x24, [sp, #48]
  409a28:	ldr	x25, [sp, #64]
  409a2c:	ldp	x29, x30, [sp], #352
  409a30:	ret
  409a34:	adrp	x0, 421000 <_IO_stdin_used@@Base+0x13490>
  409a38:	mov	x2, x21
  409a3c:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x490>
  409a40:	add	x1, x1, #0x760
  409a44:	ldr	x0, [x0, #3992]
  409a48:	ldr	x0, [x0]
  409a4c:	bl	405200 <fprintf@plt>
  409a50:	mov	w0, #0xffffffff            	// #-1
  409a54:	ldp	x21, x22, [sp, #32]
  409a58:	ldp	x23, x24, [sp, #48]
  409a5c:	ldp	x29, x30, [sp], #352
  409a60:	ret
  409a64:	ldp	x19, x20, [sp, #16]
  409a68:	ldp	x21, x22, [sp, #32]
  409a6c:	ldp	x23, x24, [sp, #48]
  409a70:	ldr	x25, [sp, #64]
  409a74:	ldp	x29, x30, [sp], #352
  409a78:	ret
  409a7c:	add	w0, w0, #0x1
  409a80:	ldp	x19, x20, [sp, #16]
  409a84:	ldp	x21, x22, [sp, #32]
  409a88:	ldp	x23, x24, [sp, #48]
  409a8c:	ldr	x25, [sp, #64]
  409a90:	ldp	x29, x30, [sp], #352
  409a94:	ret

0000000000409a98 <new_json_obj@@Base>:
  409a98:	cbnz	w0, 409aa0 <new_json_obj@@Base+0x8>
  409a9c:	ret
  409aa0:	stp	x29, x30, [sp, #-32]!
  409aa4:	adrp	x0, 421000 <_IO_stdin_used@@Base+0x13490>
  409aa8:	mov	x29, sp
  409aac:	ldr	x0, [x0, #4016]
  409ab0:	ldr	x0, [x0]
  409ab4:	str	x19, [sp, #16]
  409ab8:	adrp	x19, 426000 <stdout@@GLIBC_2.17+0x3cf8>
  409abc:	bl	40ab48 <jsonw_new@@Base>
  409ac0:	str	x0, [x19, #3440]
  409ac4:	mov	x1, x0
  409ac8:	cbz	x0, 409b08 <new_json_obj@@Base+0x70>
  409acc:	adrp	x2, 421000 <_IO_stdin_used@@Base+0x13490>
  409ad0:	ldr	x2, [x2, #4056]
  409ad4:	ldr	w2, [x2]
  409ad8:	cbnz	w2, 409aec <new_json_obj@@Base+0x54>
  409adc:	ldr	x19, [sp, #16]
  409ae0:	mov	x0, x1
  409ae4:	ldp	x29, x30, [sp], #32
  409ae8:	b	40ae78 <jsonw_start_array@@Base>
  409aec:	mov	w1, #0x1                   	// #1
  409af0:	bl	40abf0 <jsonw_pretty@@Base>
  409af4:	ldr	x1, [x19, #3440]
  409af8:	ldr	x19, [sp, #16]
  409afc:	mov	x0, x1
  409b00:	ldp	x29, x30, [sp], #32
  409b04:	b	40ae78 <jsonw_start_array@@Base>
  409b08:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x490>
  409b0c:	add	x0, x0, #0x788
  409b10:	bl	404d30 <perror@plt>
  409b14:	mov	w0, #0x1                   	// #1
  409b18:	bl	404d20 <exit@plt>
  409b1c:	nop

0000000000409b20 <delete_json_obj@@Base>:
  409b20:	stp	x29, x30, [sp, #-32]!
  409b24:	adrp	x0, 426000 <stdout@@GLIBC_2.17+0x3cf8>
  409b28:	mov	x29, sp
  409b2c:	str	x19, [sp, #16]
  409b30:	add	x19, x0, #0xd70
  409b34:	ldr	x0, [x0, #3440]
  409b38:	cbz	x0, 409b50 <delete_json_obj@@Base+0x30>
  409b3c:	bl	40aee8 <jsonw_end_array@@Base>
  409b40:	mov	x0, x19
  409b44:	ldr	x19, [sp, #16]
  409b48:	ldp	x29, x30, [sp], #32
  409b4c:	b	40ab80 <jsonw_destroy@@Base>
  409b50:	ldr	x19, [sp, #16]
  409b54:	ldp	x29, x30, [sp], #32
  409b58:	ret
  409b5c:	nop

0000000000409b60 <new_json_obj_plain@@Base>:
  409b60:	cbnz	w0, 409b68 <new_json_obj_plain@@Base+0x8>
  409b64:	ret
  409b68:	stp	x29, x30, [sp, #-16]!
  409b6c:	adrp	x0, 421000 <_IO_stdin_used@@Base+0x13490>
  409b70:	mov	x29, sp
  409b74:	ldr	x0, [x0, #4016]
  409b78:	ldr	x0, [x0]
  409b7c:	bl	40ab48 <jsonw_new@@Base>
  409b80:	adrp	x2, 426000 <stdout@@GLIBC_2.17+0x3cf8>
  409b84:	str	x0, [x2, #3440]
  409b88:	cbz	x0, 409bb0 <new_json_obj_plain@@Base+0x50>
  409b8c:	adrp	x1, 421000 <_IO_stdin_used@@Base+0x13490>
  409b90:	ldr	x1, [x1, #4056]
  409b94:	ldr	w1, [x1]
  409b98:	cbnz	w1, 409ba4 <new_json_obj_plain@@Base+0x44>
  409b9c:	ldp	x29, x30, [sp], #16
  409ba0:	ret
  409ba4:	ldp	x29, x30, [sp], #16
  409ba8:	mov	w1, #0x1                   	// #1
  409bac:	b	40abf0 <jsonw_pretty@@Base>
  409bb0:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x490>
  409bb4:	add	x0, x0, #0x788
  409bb8:	bl	404d30 <perror@plt>
  409bbc:	mov	w0, #0x1                   	// #1
  409bc0:	bl	404d20 <exit@plt>
  409bc4:	nop

0000000000409bc8 <delete_json_obj_plain@@Base>:
  409bc8:	adrp	x1, 426000 <stdout@@GLIBC_2.17+0x3cf8>
  409bcc:	add	x0, x1, #0xd70
  409bd0:	ldr	x1, [x1, #3440]
  409bd4:	cbz	x1, 409bdc <delete_json_obj_plain@@Base+0x14>
  409bd8:	b	40ab80 <jsonw_destroy@@Base>
  409bdc:	ret

0000000000409be0 <is_json_context@@Base>:
  409be0:	adrp	x0, 426000 <stdout@@GLIBC_2.17+0x3cf8>
  409be4:	ldr	x0, [x0, #3440]
  409be8:	cmp	x0, #0x0
  409bec:	cset	w0, ne  // ne = any
  409bf0:	ret
  409bf4:	nop

0000000000409bf8 <get_json_writer@@Base>:
  409bf8:	adrp	x0, 426000 <stdout@@GLIBC_2.17+0x3cf8>
  409bfc:	ldr	x0, [x0, #3440]
  409c00:	ret
  409c04:	nop

0000000000409c08 <open_json_object@@Base>:
  409c08:	stp	x29, x30, [sp, #-32]!
  409c0c:	mov	x1, x0
  409c10:	mov	x29, sp
  409c14:	str	x19, [sp, #16]
  409c18:	adrp	x19, 426000 <stdout@@GLIBC_2.17+0x3cf8>
  409c1c:	ldr	x0, [x19, #3440]
  409c20:	cbz	x0, 409c3c <open_json_object@@Base+0x34>
  409c24:	cbz	x1, 409c30 <open_json_object@@Base+0x28>
  409c28:	bl	40abf8 <jsonw_name@@Base>
  409c2c:	ldr	x0, [x19, #3440]
  409c30:	ldr	x19, [sp, #16]
  409c34:	ldp	x29, x30, [sp], #32
  409c38:	b	40ad78 <jsonw_start_object@@Base>
  409c3c:	ldr	x19, [sp, #16]
  409c40:	ldp	x29, x30, [sp], #32
  409c44:	ret

0000000000409c48 <close_json_object@@Base>:
  409c48:	adrp	x0, 426000 <stdout@@GLIBC_2.17+0x3cf8>
  409c4c:	ldr	x0, [x0, #3440]
  409c50:	cbz	x0, 409c58 <close_json_object@@Base+0x10>
  409c54:	b	40add0 <jsonw_end_object@@Base>
  409c58:	ret
  409c5c:	nop

0000000000409c60 <open_json_array@@Base>:
  409c60:	stp	x29, x30, [sp, #-32]!
  409c64:	mov	w2, w0
  409c68:	tst	w0, #0x6
  409c6c:	mov	x29, sp
  409c70:	str	x19, [sp, #16]
  409c74:	adrp	x19, 426000 <stdout@@GLIBC_2.17+0x3cf8>
  409c78:	mov	x3, x1
  409c7c:	ldr	x0, [x19, #3440]
  409c80:	b.eq	409ca0 <open_json_array@@Base+0x40>  // b.none
  409c84:	cbz	x0, 409cb0 <open_json_array@@Base+0x50>
  409c88:	cbz	x1, 409c94 <open_json_array@@Base+0x34>
  409c8c:	bl	40abf8 <jsonw_name@@Base>
  409c90:	ldr	x0, [x19, #3440]
  409c94:	ldr	x19, [sp, #16]
  409c98:	ldp	x29, x30, [sp], #32
  409c9c:	b	40ae78 <jsonw_start_array@@Base>
  409ca0:	cbz	x0, 409cb0 <open_json_array@@Base+0x50>
  409ca4:	ldr	x19, [sp, #16]
  409ca8:	ldp	x29, x30, [sp], #32
  409cac:	ret
  409cb0:	mov	w0, #0x5                   	// #5
  409cb4:	tst	w2, w0
  409cb8:	b.eq	409ca4 <open_json_array@@Base+0x44>  // b.none
  409cbc:	ldr	x19, [sp, #16]
  409cc0:	mov	x1, x3
  409cc4:	ldp	x29, x30, [sp], #32
  409cc8:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x490>
  409ccc:	add	x0, x0, #0x3d8
  409cd0:	b	405190 <printf@plt>
  409cd4:	nop

0000000000409cd8 <close_json_array@@Base>:
  409cd8:	adrp	x3, 426000 <stdout@@GLIBC_2.17+0x3cf8>
  409cdc:	mov	w2, w0
  409ce0:	tst	w0, #0x6
  409ce4:	ldr	x0, [x3, #3440]
  409ce8:	b.eq	409cf4 <close_json_array@@Base+0x1c>  // b.none
  409cec:	cbz	x0, 409cfc <close_json_array@@Base+0x24>
  409cf0:	b	40aee8 <jsonw_end_array@@Base>
  409cf4:	cbz	x0, 409cfc <close_json_array@@Base+0x24>
  409cf8:	ret
  409cfc:	mov	w0, #0x5                   	// #5
  409d00:	tst	w2, w0
  409d04:	b.eq	409cf8 <close_json_array@@Base+0x20>  // b.none
  409d08:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x490>
  409d0c:	add	x0, x0, #0x3d8
  409d10:	b	405190 <printf@plt>
  409d14:	nop

0000000000409d18 <print_color_int@@Base>:
  409d18:	adrp	x7, 426000 <stdout@@GLIBC_2.17+0x3cf8>
  409d1c:	mov	w5, w0
  409d20:	tst	w0, #0x6
  409d24:	mov	x6, x2
  409d28:	ldr	x0, [x7, #3440]
  409d2c:	mov	x2, x3
  409d30:	b.eq	409d48 <print_color_int@@Base+0x30>  // b.none
  409d34:	cbz	x0, 409d50 <print_color_int@@Base+0x38>
  409d38:	cbz	x6, 409d70 <print_color_int@@Base+0x58>
  409d3c:	mov	w2, w4
  409d40:	mov	x1, x6
  409d44:	b	40b270 <jsonw_int_field@@Base>
  409d48:	cbz	x0, 409d50 <print_color_int@@Base+0x38>
  409d4c:	ret
  409d50:	mov	w0, #0x5                   	// #5
  409d54:	tst	w5, w0
  409d58:	b.eq	409d4c <print_color_int@@Base+0x34>  // b.none
  409d5c:	adrp	x0, 421000 <_IO_stdin_used@@Base+0x13490>
  409d60:	mov	w3, w4
  409d64:	ldr	x0, [x0, #4016]
  409d68:	ldr	x0, [x0]
  409d6c:	b	40a608 <color_fprintf@@Base>
  409d70:	mov	w1, w4
  409d74:	b	40b068 <jsonw_int@@Base>

0000000000409d78 <print_color_s64@@Base>:
  409d78:	adrp	x7, 426000 <stdout@@GLIBC_2.17+0x3cf8>
  409d7c:	mov	w5, w0
  409d80:	tst	w0, #0x6
  409d84:	mov	x6, x2
  409d88:	ldr	x0, [x7, #3440]
  409d8c:	mov	x2, x3
  409d90:	b.eq	409da8 <print_color_s64@@Base+0x30>  // b.none
  409d94:	cbz	x0, 409db0 <print_color_s64@@Base+0x38>
  409d98:	cbz	x6, 409dd0 <print_color_s64@@Base+0x58>
  409d9c:	mov	x2, x4
  409da0:	mov	x1, x6
  409da4:	b	40b2a0 <jsonw_s64_field@@Base>
  409da8:	cbz	x0, 409db0 <print_color_s64@@Base+0x38>
  409dac:	ret
  409db0:	mov	w0, #0x5                   	// #5
  409db4:	tst	w5, w0
  409db8:	b.eq	409dac <print_color_s64@@Base+0x34>  // b.none
  409dbc:	adrp	x0, 421000 <_IO_stdin_used@@Base+0x13490>
  409dc0:	mov	x3, x4
  409dc4:	ldr	x0, [x0, #4016]
  409dc8:	ldr	x0, [x0]
  409dcc:	b	40a608 <color_fprintf@@Base>
  409dd0:	mov	x1, x4
  409dd4:	b	40b078 <jsonw_s64@@Base>

0000000000409dd8 <print_color_hhu@@Base>:
  409dd8:	adrp	x7, 426000 <stdout@@GLIBC_2.17+0x3cf8>
  409ddc:	mov	w5, w0
  409de0:	tst	w0, #0x6
  409de4:	mov	w6, w1
  409de8:	ldr	x0, [x7, #3440]
  409dec:	mov	x1, x2
  409df0:	mov	x2, x3
  409df4:	and	w3, w4, #0xff
  409df8:	b.eq	409e0c <print_color_hhu@@Base+0x34>  // b.none
  409dfc:	cbz	x0, 409e14 <print_color_hhu@@Base+0x3c>
  409e00:	cbz	x1, 409e34 <print_color_hhu@@Base+0x5c>
  409e04:	mov	w2, w3
  409e08:	b	40b1b0 <jsonw_hhu_field@@Base>
  409e0c:	cbz	x0, 409e14 <print_color_hhu@@Base+0x3c>
  409e10:	ret
  409e14:	mov	w0, #0x5                   	// #5
  409e18:	tst	w5, w0
  409e1c:	b.eq	409e10 <print_color_hhu@@Base+0x38>  // b.none
  409e20:	adrp	x0, 421000 <_IO_stdin_used@@Base+0x13490>
  409e24:	mov	w1, w6
  409e28:	ldr	x0, [x0, #4016]
  409e2c:	ldr	x0, [x0]
  409e30:	b	40a608 <color_fprintf@@Base>
  409e34:	mov	w1, w3
  409e38:	b	40aff8 <jsonw_hhu@@Base>
  409e3c:	nop

0000000000409e40 <print_color_hu@@Base>:
  409e40:	adrp	x7, 426000 <stdout@@GLIBC_2.17+0x3cf8>
  409e44:	mov	w5, w0
  409e48:	tst	w0, #0x6
  409e4c:	mov	w6, w1
  409e50:	ldr	x0, [x7, #3440]
  409e54:	mov	x1, x2
  409e58:	mov	x2, x3
  409e5c:	and	w3, w4, #0xffff
  409e60:	b.eq	409e74 <print_color_hu@@Base+0x34>  // b.none
  409e64:	cbz	x0, 409e7c <print_color_hu@@Base+0x3c>
  409e68:	cbz	x1, 409e9c <print_color_hu@@Base+0x5c>
  409e6c:	mov	w2, w3
  409e70:	b	40b1e0 <jsonw_hu_field@@Base>
  409e74:	cbz	x0, 409e7c <print_color_hu@@Base+0x3c>
  409e78:	ret
  409e7c:	mov	w0, #0x5                   	// #5
  409e80:	tst	w5, w0
  409e84:	b.eq	409e78 <print_color_hu@@Base+0x38>  // b.none
  409e88:	adrp	x0, 421000 <_IO_stdin_used@@Base+0x13490>
  409e8c:	mov	w1, w6
  409e90:	ldr	x0, [x0, #4016]
  409e94:	ldr	x0, [x0]
  409e98:	b	40a608 <color_fprintf@@Base>
  409e9c:	mov	w1, w3
  409ea0:	b	40b008 <jsonw_hu@@Base>
  409ea4:	nop

0000000000409ea8 <print_color_uint@@Base>:
  409ea8:	adrp	x7, 426000 <stdout@@GLIBC_2.17+0x3cf8>
  409eac:	mov	w5, w0
  409eb0:	tst	w0, #0x6
  409eb4:	mov	x6, x2
  409eb8:	ldr	x0, [x7, #3440]
  409ebc:	mov	x2, x3
  409ec0:	b.eq	409ed8 <print_color_uint@@Base+0x30>  // b.none
  409ec4:	cbz	x0, 409ee0 <print_color_uint@@Base+0x38>
  409ec8:	cbz	x6, 409f00 <print_color_uint@@Base+0x58>
  409ecc:	mov	w2, w4
  409ed0:	mov	x1, x6
  409ed4:	b	40b120 <jsonw_uint_field@@Base>
  409ed8:	cbz	x0, 409ee0 <print_color_uint@@Base+0x38>
  409edc:	ret
  409ee0:	mov	w0, #0x5                   	// #5
  409ee4:	tst	w5, w0
  409ee8:	b.eq	409edc <print_color_uint@@Base+0x34>  // b.none
  409eec:	adrp	x0, 421000 <_IO_stdin_used@@Base+0x13490>
  409ef0:	mov	w3, w4
  409ef4:	ldr	x0, [x0, #4016]
  409ef8:	ldr	x0, [x0]
  409efc:	b	40a608 <color_fprintf@@Base>
  409f00:	mov	w1, w4
  409f04:	b	40b018 <jsonw_uint@@Base>

0000000000409f08 <print_color_u64@@Base>:
  409f08:	adrp	x7, 426000 <stdout@@GLIBC_2.17+0x3cf8>
  409f0c:	mov	w5, w0
  409f10:	tst	w0, #0x6
  409f14:	mov	x6, x2
  409f18:	ldr	x0, [x7, #3440]
  409f1c:	mov	x2, x3
  409f20:	b.eq	409f38 <print_color_u64@@Base+0x30>  // b.none
  409f24:	cbz	x0, 409f40 <print_color_u64@@Base+0x38>
  409f28:	cbz	x6, 409f60 <print_color_u64@@Base+0x58>
  409f2c:	mov	x2, x4
  409f30:	mov	x1, x6
  409f34:	b	40b150 <jsonw_u64_field@@Base>
  409f38:	cbz	x0, 409f40 <print_color_u64@@Base+0x38>
  409f3c:	ret
  409f40:	mov	w0, #0x5                   	// #5
  409f44:	tst	w5, w0
  409f48:	b.eq	409f3c <print_color_u64@@Base+0x34>  // b.none
  409f4c:	adrp	x0, 421000 <_IO_stdin_used@@Base+0x13490>
  409f50:	mov	x3, x4
  409f54:	ldr	x0, [x0, #4016]
  409f58:	ldr	x0, [x0]
  409f5c:	b	40a608 <color_fprintf@@Base>
  409f60:	mov	x1, x4
  409f64:	b	40b028 <jsonw_u64@@Base>

0000000000409f68 <print_color_luint@@Base>:
  409f68:	adrp	x7, 426000 <stdout@@GLIBC_2.17+0x3cf8>
  409f6c:	mov	w5, w0
  409f70:	tst	w0, #0x6
  409f74:	mov	x6, x2
  409f78:	ldr	x0, [x7, #3440]
  409f7c:	mov	x2, x3
  409f80:	b.eq	409f98 <print_color_luint@@Base+0x30>  // b.none
  409f84:	cbz	x0, 409fa0 <print_color_luint@@Base+0x38>
  409f88:	cbz	x6, 409fc0 <print_color_luint@@Base+0x58>
  409f8c:	mov	x2, x4
  409f90:	mov	x1, x6
  409f94:	b	40b210 <jsonw_luint_field@@Base>
  409f98:	cbz	x0, 409fa0 <print_color_luint@@Base+0x38>
  409f9c:	ret
  409fa0:	mov	w0, #0x5                   	// #5
  409fa4:	tst	w5, w0
  409fa8:	b.eq	409f9c <print_color_luint@@Base+0x34>  // b.none
  409fac:	adrp	x0, 421000 <_IO_stdin_used@@Base+0x13490>
  409fb0:	mov	x3, x4
  409fb4:	ldr	x0, [x0, #4016]
  409fb8:	ldr	x0, [x0]
  409fbc:	b	40a608 <color_fprintf@@Base>
  409fc0:	mov	x1, x4
  409fc4:	b	40b048 <jsonw_luint@@Base>

0000000000409fc8 <print_color_lluint@@Base>:
  409fc8:	adrp	x7, 426000 <stdout@@GLIBC_2.17+0x3cf8>
  409fcc:	mov	w5, w0
  409fd0:	tst	w0, #0x6
  409fd4:	mov	x6, x2
  409fd8:	ldr	x0, [x7, #3440]
  409fdc:	mov	x2, x3
  409fe0:	b.eq	409ff8 <print_color_lluint@@Base+0x30>  // b.none
  409fe4:	cbz	x0, 40a000 <print_color_lluint@@Base+0x38>
  409fe8:	cbz	x6, 40a020 <print_color_lluint@@Base+0x58>
  409fec:	mov	x2, x4
  409ff0:	mov	x1, x6
  409ff4:	b	40b240 <jsonw_lluint_field@@Base>
  409ff8:	cbz	x0, 40a000 <print_color_lluint@@Base+0x38>
  409ffc:	ret
  40a000:	mov	w0, #0x5                   	// #5
  40a004:	tst	w5, w0
  40a008:	b.eq	409ffc <print_color_lluint@@Base+0x34>  // b.none
  40a00c:	adrp	x0, 421000 <_IO_stdin_used@@Base+0x13490>
  40a010:	mov	x3, x4
  40a014:	ldr	x0, [x0, #4016]
  40a018:	ldr	x0, [x0]
  40a01c:	b	40a608 <color_fprintf@@Base>
  40a020:	mov	x1, x4
  40a024:	b	40b058 <jsonw_lluint@@Base>

000000000040a028 <print_color_float@@Base>:
  40a028:	adrp	x5, 426000 <stdout@@GLIBC_2.17+0x3cf8>
  40a02c:	mov	w4, w0
  40a030:	tst	w0, #0x6
  40a034:	fmov	d1, d0
  40a038:	ldr	x0, [x5, #3440]
  40a03c:	b.eq	40a050 <print_color_float@@Base+0x28>  // b.none
  40a040:	cbz	x0, 40a058 <print_color_float@@Base+0x30>
  40a044:	cbz	x2, 40a07c <print_color_float@@Base+0x54>
  40a048:	mov	x1, x2
  40a04c:	b	40b0e8 <jsonw_float_field@@Base>
  40a050:	cbz	x0, 40a058 <print_color_float@@Base+0x30>
  40a054:	ret
  40a058:	mov	w0, #0x5                   	// #5
  40a05c:	tst	w4, w0
  40a060:	b.eq	40a054 <print_color_float@@Base+0x2c>  // b.none
  40a064:	adrp	x0, 421000 <_IO_stdin_used@@Base+0x13490>
  40a068:	fmov	d0, d1
  40a06c:	mov	x2, x3
  40a070:	ldr	x0, [x0, #4016]
  40a074:	ldr	x0, [x0]
  40a078:	b	40a608 <color_fprintf@@Base>
  40a07c:	b	40afe8 <jsonw_float@@Base>

000000000040a080 <print_uint_name_value@@Base>:
  40a080:	stp	x29, x30, [sp, #-112]!
  40a084:	mov	x3, x0
  40a088:	adrp	x2, 40e000 <_IO_stdin_used@@Base+0x490>
  40a08c:	mov	x29, sp
  40a090:	stp	x19, x20, [sp, #16]
  40a094:	add	x20, sp, #0x30
  40a098:	mov	x19, x0
  40a09c:	add	x2, x2, #0x798
  40a0a0:	mov	x0, x20
  40a0a4:	str	x21, [sp, #32]
  40a0a8:	mov	w21, w1
  40a0ac:	mov	x1, #0x40                  	// #64
  40a0b0:	bl	404e00 <snprintf@plt>
  40a0b4:	mov	w4, w21
  40a0b8:	mov	x3, x20
  40a0bc:	mov	x2, x19
  40a0c0:	mov	w1, #0x6                   	// #6
  40a0c4:	mov	w0, #0x4                   	// #4
  40a0c8:	bl	409ea8 <print_color_uint@@Base>
  40a0cc:	ldp	x19, x20, [sp, #16]
  40a0d0:	ldr	x21, [sp, #32]
  40a0d4:	ldp	x29, x30, [sp], #112
  40a0d8:	ret
  40a0dc:	nop

000000000040a0e0 <print_color_string@@Base>:
  40a0e0:	adrp	x7, 426000 <stdout@@GLIBC_2.17+0x3cf8>
  40a0e4:	mov	w5, w0
  40a0e8:	tst	w0, #0x6
  40a0ec:	mov	w6, w1
  40a0f0:	ldr	x0, [x7, #3440]
  40a0f4:	mov	x1, x2
  40a0f8:	mov	x2, x3
  40a0fc:	b.eq	40a124 <print_color_string@@Base+0x44>  // b.none
  40a100:	cbz	x0, 40a12c <print_color_string@@Base+0x4c>
  40a104:	cmp	x1, #0x0
  40a108:	ccmp	x4, #0x0, #0x0, ne  // ne = any
  40a10c:	b.eq	40a158 <print_color_string@@Base+0x78>  // b.none
  40a110:	cmp	x1, #0x0
  40a114:	ccmp	x4, #0x0, #0x4, eq  // eq = none
  40a118:	b.eq	40a150 <print_color_string@@Base+0x70>  // b.none
  40a11c:	mov	x1, x4
  40a120:	b	40af50 <jsonw_string@@Base>
  40a124:	cbz	x0, 40a12c <print_color_string@@Base+0x4c>
  40a128:	ret
  40a12c:	mov	w0, #0x5                   	// #5
  40a130:	tst	w5, w0
  40a134:	b.eq	40a128 <print_color_string@@Base+0x48>  // b.none
  40a138:	adrp	x0, 421000 <_IO_stdin_used@@Base+0x13490>
  40a13c:	mov	x3, x4
  40a140:	mov	w1, w6
  40a144:	ldr	x0, [x0, #4016]
  40a148:	ldr	x0, [x0]
  40a14c:	b	40a608 <color_fprintf@@Base>
  40a150:	mov	x2, x4
  40a154:	b	40b088 <jsonw_string_field@@Base>
  40a158:	b	40abf8 <jsonw_name@@Base>
  40a15c:	nop

000000000040a160 <print_string_name_value@@Base>:
  40a160:	stp	x29, x30, [sp, #-112]!
  40a164:	mov	x3, x0
  40a168:	adrp	x2, 40e000 <_IO_stdin_used@@Base+0x490>
  40a16c:	mov	x29, sp
  40a170:	stp	x19, x20, [sp, #16]
  40a174:	add	x20, sp, #0x30
  40a178:	mov	x19, x0
  40a17c:	add	x2, x2, #0x7a0
  40a180:	mov	x0, x20
  40a184:	str	x21, [sp, #32]
  40a188:	mov	x21, x1
  40a18c:	mov	x1, #0x40                  	// #64
  40a190:	bl	404e00 <snprintf@plt>
  40a194:	mov	x4, x21
  40a198:	mov	x3, x20
  40a19c:	mov	x2, x19
  40a1a0:	mov	w1, #0x6                   	// #6
  40a1a4:	mov	w0, #0x4                   	// #4
  40a1a8:	bl	40a0e0 <print_color_string@@Base>
  40a1ac:	ldp	x19, x20, [sp, #16]
  40a1b0:	ldr	x21, [sp, #32]
  40a1b4:	ldp	x29, x30, [sp], #112
  40a1b8:	ret
  40a1bc:	nop

000000000040a1c0 <print_color_bool@@Base>:
  40a1c0:	sub	sp, sp, #0x10
  40a1c4:	adrp	x7, 426000 <stdout@@GLIBC_2.17+0x3cf8>
  40a1c8:	mov	w5, w0
  40a1cc:	tst	w0, #0x6
  40a1d0:	mov	w6, w1
  40a1d4:	mov	x1, x2
  40a1d8:	str	x3, [sp, #8]
  40a1dc:	and	w2, w4, #0xff
  40a1e0:	ldr	x0, [x7, #3440]
  40a1e4:	b.eq	40a1f8 <print_color_bool@@Base+0x38>  // b.none
  40a1e8:	cbz	x0, 40a204 <print_color_bool@@Base+0x44>
  40a1ec:	cbz	x1, 40a244 <print_color_bool@@Base+0x84>
  40a1f0:	add	sp, sp, #0x10
  40a1f4:	b	40b0b8 <jsonw_bool_field@@Base>
  40a1f8:	cbz	x0, 40a204 <print_color_bool@@Base+0x44>
  40a1fc:	add	sp, sp, #0x10
  40a200:	ret
  40a204:	mov	w0, #0x5                   	// #5
  40a208:	tst	w5, w0
  40a20c:	b.eq	40a1fc <print_color_bool@@Base+0x3c>  // b.none
  40a210:	adrp	x0, 421000 <_IO_stdin_used@@Base+0x13490>
  40a214:	cmp	w2, #0x0
  40a218:	adrp	x3, 40e000 <_IO_stdin_used@@Base+0x490>
  40a21c:	adrp	x2, 40e000 <_IO_stdin_used@@Base+0x490>
  40a220:	ldr	x0, [x0, #4016]
  40a224:	add	x2, x2, #0x7b0
  40a228:	add	x3, x3, #0x7a8
  40a22c:	mov	w1, w6
  40a230:	csel	x3, x3, x2, ne  // ne = any
  40a234:	ldr	x0, [x0]
  40a238:	ldr	x2, [sp, #8]
  40a23c:	add	sp, sp, #0x10
  40a240:	b	40a608 <color_fprintf@@Base>
  40a244:	mov	w1, w2
  40a248:	add	sp, sp, #0x10
  40a24c:	b	40afb0 <jsonw_bool@@Base>

000000000040a250 <print_color_0xhex@@Base>:
  40a250:	stp	x29, x30, [sp, #-96]!
  40a254:	adrp	x5, 426000 <stdout@@GLIBC_2.17+0x3cf8>
  40a258:	tst	w0, #0x6
  40a25c:	mov	x29, sp
  40a260:	stp	x19, x20, [sp, #16]
  40a264:	mov	x19, x2
  40a268:	mov	x2, x3
  40a26c:	ldr	x3, [x5, #3440]
  40a270:	b.eq	40a2b8 <print_color_0xhex@@Base+0x68>  // b.none
  40a274:	cbz	x3, 40a2c8 <print_color_0xhex@@Base+0x78>
  40a278:	add	x20, sp, #0x20
  40a27c:	mov	x3, x4
  40a280:	mov	x0, x20
  40a284:	mov	x1, #0x40                  	// #64
  40a288:	adrp	x2, 40e000 <_IO_stdin_used@@Base+0x490>
  40a28c:	add	x2, x2, #0x7b8
  40a290:	bl	404e00 <snprintf@plt>
  40a294:	mov	x4, x20
  40a298:	mov	x2, x19
  40a29c:	mov	x3, #0x0                   	// #0
  40a2a0:	mov	w1, #0x6                   	// #6
  40a2a4:	mov	w0, #0x2                   	// #2
  40a2a8:	bl	40a0e0 <print_color_string@@Base>
  40a2ac:	ldp	x19, x20, [sp, #16]
  40a2b0:	ldp	x29, x30, [sp], #96
  40a2b4:	ret
  40a2b8:	cbz	x3, 40a2c8 <print_color_0xhex@@Base+0x78>
  40a2bc:	ldp	x19, x20, [sp, #16]
  40a2c0:	ldp	x29, x30, [sp], #96
  40a2c4:	ret
  40a2c8:	mov	w3, #0x5                   	// #5
  40a2cc:	tst	w0, w3
  40a2d0:	b.eq	40a2bc <print_color_0xhex@@Base+0x6c>  // b.none
  40a2d4:	adrp	x0, 421000 <_IO_stdin_used@@Base+0x13490>
  40a2d8:	mov	x3, x4
  40a2dc:	ldr	x0, [x0, #4016]
  40a2e0:	ldr	x0, [x0]
  40a2e4:	bl	40a608 <color_fprintf@@Base>
  40a2e8:	b	40a2bc <print_color_0xhex@@Base+0x6c>
  40a2ec:	nop

000000000040a2f0 <print_color_hex@@Base>:
  40a2f0:	stp	x29, x30, [sp, #-112]!
  40a2f4:	tst	w0, #0x6
  40a2f8:	mov	x29, sp
  40a2fc:	stp	x19, x20, [sp, #16]
  40a300:	adrp	x20, 426000 <stdout@@GLIBC_2.17+0x3cf8>
  40a304:	mov	x19, x2
  40a308:	mov	x2, x3
  40a30c:	ldr	x3, [x20, #3440]
  40a310:	b.eq	40a35c <print_color_hex@@Base+0x6c>  // b.none
  40a314:	cbz	x3, 40a36c <print_color_hex@@Base+0x7c>
  40a318:	str	x21, [sp, #32]
  40a31c:	add	x21, sp, #0x30
  40a320:	mov	w3, w4
  40a324:	mov	x0, x21
  40a328:	adrp	x2, 40e000 <_IO_stdin_used@@Base+0x490>
  40a32c:	mov	x1, #0x40                  	// #64
  40a330:	add	x2, x2, #0x780
  40a334:	bl	404e00 <snprintf@plt>
  40a338:	ldr	x0, [x20, #3440]
  40a33c:	cbz	x19, 40a390 <print_color_hex@@Base+0xa0>
  40a340:	mov	x2, x21
  40a344:	mov	x1, x19
  40a348:	bl	40b088 <jsonw_string_field@@Base>
  40a34c:	ldp	x19, x20, [sp, #16]
  40a350:	ldr	x21, [sp, #32]
  40a354:	ldp	x29, x30, [sp], #112
  40a358:	ret
  40a35c:	cbz	x3, 40a36c <print_color_hex@@Base+0x7c>
  40a360:	ldp	x19, x20, [sp, #16]
  40a364:	ldp	x29, x30, [sp], #112
  40a368:	ret
  40a36c:	mov	w3, #0x5                   	// #5
  40a370:	tst	w0, w3
  40a374:	b.eq	40a360 <print_color_hex@@Base+0x70>  // b.none
  40a378:	adrp	x0, 421000 <_IO_stdin_used@@Base+0x13490>
  40a37c:	mov	w3, w4
  40a380:	ldr	x0, [x0, #4016]
  40a384:	ldr	x0, [x0]
  40a388:	bl	40a608 <color_fprintf@@Base>
  40a38c:	b	40a360 <print_color_hex@@Base+0x70>
  40a390:	mov	x1, x21
  40a394:	bl	40af50 <jsonw_string@@Base>
  40a398:	ldr	x21, [sp, #32]
  40a39c:	b	40a360 <print_color_hex@@Base+0x70>

000000000040a3a0 <print_color_null@@Base>:
  40a3a0:	adrp	x7, 426000 <stdout@@GLIBC_2.17+0x3cf8>
  40a3a4:	mov	w5, w0
  40a3a8:	tst	w0, #0x6
  40a3ac:	mov	x6, x3
  40a3b0:	ldr	x0, [x7, #3440]
  40a3b4:	b.eq	40a3c8 <print_color_null@@Base+0x28>  // b.none
  40a3b8:	cbz	x0, 40a3d0 <print_color_null@@Base+0x30>
  40a3bc:	cbz	x2, 40a3f4 <print_color_null@@Base+0x54>
  40a3c0:	mov	x1, x2
  40a3c4:	b	40b2d0 <jsonw_null_field@@Base>
  40a3c8:	cbz	x0, 40a3d0 <print_color_null@@Base+0x30>
  40a3cc:	ret
  40a3d0:	mov	w0, #0x5                   	// #5
  40a3d4:	tst	w5, w0
  40a3d8:	b.eq	40a3cc <print_color_null@@Base+0x2c>  // b.none
  40a3dc:	adrp	x0, 421000 <_IO_stdin_used@@Base+0x13490>
  40a3e0:	mov	x3, x4
  40a3e4:	mov	x2, x6
  40a3e8:	ldr	x0, [x0, #4016]
  40a3ec:	ldr	x0, [x0]
  40a3f0:	b	40a608 <color_fprintf@@Base>
  40a3f4:	b	40afd8 <jsonw_null@@Base>

000000000040a3f8 <print_nl@@Base>:
  40a3f8:	adrp	x0, 426000 <stdout@@GLIBC_2.17+0x3cf8>
  40a3fc:	ldr	x0, [x0, #3440]
  40a400:	cbz	x0, 40a408 <print_nl@@Base+0x10>
  40a404:	ret
  40a408:	adrp	x1, 421000 <_IO_stdin_used@@Base+0x13490>
  40a40c:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x490>
  40a410:	add	x0, x0, #0x3d8
  40a414:	ldr	x1, [x1, #4048]
  40a418:	ldr	x1, [x1]
  40a41c:	b	405190 <printf@plt>

000000000040a420 <check_enable_color@@Base>:
  40a420:	cmp	w1, #0x0
  40a424:	ccmp	w0, #0x0, #0x4, eq  // eq = none
  40a428:	b.eq	40a4cc <check_enable_color@@Base+0xac>  // b.none
  40a42c:	stp	x29, x30, [sp, #-32]!
  40a430:	cmp	w0, #0x2
  40a434:	mov	x29, sp
  40a438:	b.eq	40a460 <check_enable_color@@Base+0x40>  // b.none
  40a43c:	adrp	x0, 421000 <_IO_stdin_used@@Base+0x13490>
  40a440:	ldr	x0, [x0, #4016]
  40a444:	ldr	x0, [x0]
  40a448:	bl	404e10 <fileno@plt>
  40a44c:	bl	4050e0 <isatty@plt>
  40a450:	cbnz	w0, 40a460 <check_enable_color@@Base+0x40>
  40a454:	mov	w0, #0x0                   	// #0
  40a458:	ldp	x29, x30, [sp], #32
  40a45c:	ret
  40a460:	adrp	x1, 426000 <stdout@@GLIBC_2.17+0x3cf8>
  40a464:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x490>
  40a468:	add	x0, x0, #0x7c0
  40a46c:	stp	x19, x20, [sp, #16]
  40a470:	mov	w19, #0x1                   	// #1
  40a474:	add	x20, x1, #0xd78
  40a478:	str	w19, [x1, #3448]
  40a47c:	bl	4051c0 <getenv@plt>
  40a480:	cbz	x0, 40a4e0 <check_enable_color@@Base+0xc0>
  40a484:	mov	w1, #0x3b                  	// #59
  40a488:	bl	404f70 <strrchr@plt>
  40a48c:	mov	x2, x0
  40a490:	mov	w0, w19
  40a494:	cbz	x2, 40a4d4 <check_enable_color@@Base+0xb4>
  40a498:	ldrb	w3, [x2, #1]
  40a49c:	sub	w0, w3, #0x30
  40a4a0:	and	w0, w0, #0xff
  40a4a4:	cmp	w0, #0x6
  40a4a8:	cset	w1, ls  // ls = plast
  40a4ac:	cmp	w3, #0x38
  40a4b0:	csinc	w0, w1, wzr, ne  // ne = any
  40a4b4:	cbz	w0, 40a4e0 <check_enable_color@@Base+0xc0>
  40a4b8:	ldrb	w1, [x2, #2]
  40a4bc:	cbnz	w1, 40a4d4 <check_enable_color@@Base+0xb4>
  40a4c0:	str	w19, [x20, #4]
  40a4c4:	ldp	x19, x20, [sp, #16]
  40a4c8:	b	40a458 <check_enable_color@@Base+0x38>
  40a4cc:	mov	w0, #0x0                   	// #0
  40a4d0:	ret
  40a4d4:	ldp	x19, x20, [sp, #16]
  40a4d8:	ldp	x29, x30, [sp], #32
  40a4dc:	ret
  40a4e0:	mov	w0, w19
  40a4e4:	ldp	x19, x20, [sp, #16]
  40a4e8:	ldp	x29, x30, [sp], #32
  40a4ec:	ret

000000000040a4f0 <matches_color@@Base>:
  40a4f0:	cbz	x1, 40a5f0 <matches_color@@Base+0x100>
  40a4f4:	stp	x29, x30, [sp, #-48]!
  40a4f8:	mov	x29, sp
  40a4fc:	stp	x19, x20, [sp, #16]
  40a500:	mov	x19, x0
  40a504:	mov	x20, x1
  40a508:	str	x21, [sp, #32]
  40a50c:	bl	404d10 <strlen@plt>
  40a510:	add	x3, x0, #0x10
  40a514:	add	x2, x0, #0x1
  40a518:	and	x3, x3, #0xfffffffffffffff0
  40a51c:	mov	x1, x19
  40a520:	sub	sp, sp, x3
  40a524:	mov	x0, sp
  40a528:	bl	404ce0 <memcpy@plt>
  40a52c:	mov	x21, x0
  40a530:	mov	w1, #0x3d                  	// #61
  40a534:	bl	405130 <strchrnul@plt>
  40a538:	mov	x19, x0
  40a53c:	ldrb	w0, [x0]
  40a540:	cbz	w0, 40a548 <matches_color@@Base+0x58>
  40a544:	strb	wzr, [x19], #1
  40a548:	mov	x0, x21
  40a54c:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x490>
  40a550:	add	x1, x1, #0x7d0
  40a554:	bl	4072f0 <matches@@Base>
  40a558:	tst	w0, #0xff
  40a55c:	b.ne	40a5b8 <matches_color@@Base+0xc8>  // b.any
  40a560:	ldrb	w0, [x19]
  40a564:	cbz	w0, 40a5d0 <matches_color@@Base+0xe0>
  40a568:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x490>
  40a56c:	mov	x0, x19
  40a570:	add	x1, x1, #0x7d8
  40a574:	bl	404fd0 <strcmp@plt>
  40a578:	cbz	w0, 40a5d0 <matches_color@@Base+0xe0>
  40a57c:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x490>
  40a580:	mov	x0, x19
  40a584:	add	x1, x1, #0x7e0
  40a588:	bl	404fd0 <strcmp@plt>
  40a58c:	cbnz	w0, 40a5a0 <matches_color@@Base+0xb0>
  40a590:	mov	w1, #0x1                   	// #1
  40a594:	mov	w0, w1
  40a598:	str	w1, [x20]
  40a59c:	b	40a5bc <matches_color@@Base+0xcc>
  40a5a0:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x490>
  40a5a4:	mov	x0, x19
  40a5a8:	add	x1, x1, #0x7e8
  40a5ac:	bl	404fd0 <strcmp@plt>
  40a5b0:	cbz	w0, 40a5f8 <matches_color@@Base+0x108>
  40a5b4:	nop
  40a5b8:	mov	w0, #0x0                   	// #0
  40a5bc:	mov	sp, x29
  40a5c0:	ldp	x19, x20, [sp, #16]
  40a5c4:	ldr	x21, [sp, #32]
  40a5c8:	ldp	x29, x30, [sp], #48
  40a5cc:	ret
  40a5d0:	mov	w1, #0x2                   	// #2
  40a5d4:	str	w1, [x20]
  40a5d8:	mov	w0, #0x1                   	// #1
  40a5dc:	mov	sp, x29
  40a5e0:	ldp	x19, x20, [sp, #16]
  40a5e4:	ldr	x21, [sp, #32]
  40a5e8:	ldp	x29, x30, [sp], #48
  40a5ec:	ret
  40a5f0:	mov	w0, #0x0                   	// #0
  40a5f4:	ret
  40a5f8:	mov	w0, #0x1                   	// #1
  40a5fc:	str	wzr, [x20]
  40a600:	b	40a5bc <matches_color@@Base+0xcc>
  40a604:	nop

000000000040a608 <color_fprintf@@Base>:
  40a608:	stp	x29, x30, [sp, #-288]!
  40a60c:	adrp	x8, 426000 <stdout@@GLIBC_2.17+0x3cf8>
  40a610:	mov	w10, #0xffffffd8            	// #-40
  40a614:	mov	x29, sp
  40a618:	ldr	w12, [x8, #3448]
  40a61c:	add	x11, sp, #0xf0
  40a620:	mov	w9, #0xffffff80            	// #-128
  40a624:	stp	x21, x22, [sp, #32]
  40a628:	mov	x22, x2
  40a62c:	add	x2, sp, #0x120
  40a630:	stp	x2, x2, [sp, #80]
  40a634:	cmp	w12, #0x0
  40a638:	str	x11, [sp, #96]
  40a63c:	ccmp	w1, #0x6, #0x4, ne  // ne = any
  40a640:	stp	w10, w9, [sp, #104]
  40a644:	str	q0, [sp, #112]
  40a648:	str	q1, [sp, #128]
  40a64c:	str	q2, [sp, #144]
  40a650:	str	q3, [sp, #160]
  40a654:	str	q4, [sp, #176]
  40a658:	str	q5, [sp, #192]
  40a65c:	str	q6, [sp, #208]
  40a660:	str	q7, [sp, #224]
  40a664:	stp	x3, x4, [sp, #248]
  40a668:	stp	x5, x6, [sp, #264]
  40a66c:	str	x7, [sp, #280]
  40a670:	b.eq	40a718 <color_fprintf@@Base+0x110>  // b.none
  40a674:	add	x8, x8, #0xd78
  40a678:	stp	x19, x20, [sp, #16]
  40a67c:	mov	x20, x0
  40a680:	ldr	w0, [x8, #4]
  40a684:	cbnz	w0, 40a708 <color_fprintf@@Base+0x100>
  40a688:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x490>
  40a68c:	add	x0, x0, #0x870
  40a690:	add	x0, x0, #0x20
  40a694:	ldr	w2, [x0, w1, uxtw #2]
  40a698:	adrp	x3, 421000 <_IO_stdin_used@@Base+0x13490>
  40a69c:	add	x3, x3, #0xcf0
  40a6a0:	adrp	x21, 40e000 <_IO_stdin_used@@Base+0x490>
  40a6a4:	add	x21, x21, #0x3d8
  40a6a8:	mov	x1, x21
  40a6ac:	mov	x0, x20
  40a6b0:	ldr	x2, [x3, w2, uxtw #3]
  40a6b4:	bl	405200 <fprintf@plt>
  40a6b8:	mov	w19, w0
  40a6bc:	ldp	x4, x5, [sp, #80]
  40a6c0:	mov	x1, x22
  40a6c4:	ldp	x6, x7, [sp, #96]
  40a6c8:	add	x2, sp, #0x30
  40a6cc:	mov	x0, x20
  40a6d0:	stp	x4, x5, [sp, #48]
  40a6d4:	stp	x6, x7, [sp, #64]
  40a6d8:	bl	405180 <vfprintf@plt>
  40a6dc:	add	w19, w19, w0
  40a6e0:	mov	x1, x21
  40a6e4:	mov	x0, x20
  40a6e8:	adrp	x2, 40e000 <_IO_stdin_used@@Base+0x490>
  40a6ec:	add	x2, x2, #0x7f0
  40a6f0:	bl	405200 <fprintf@plt>
  40a6f4:	add	w0, w19, w0
  40a6f8:	ldp	x19, x20, [sp, #16]
  40a6fc:	ldp	x21, x22, [sp, #32]
  40a700:	ldp	x29, x30, [sp], #288
  40a704:	ret
  40a708:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x490>
  40a70c:	add	x0, x0, #0x870
  40a710:	ldr	w2, [x0, w1, uxtw #2]
  40a714:	b	40a698 <color_fprintf@@Base+0x90>
  40a718:	ldp	x6, x7, [sp, #80]
  40a71c:	mov	x1, x22
  40a720:	ldp	x4, x5, [sp, #96]
  40a724:	add	x2, sp, #0x30
  40a728:	stp	x6, x7, [sp, #48]
  40a72c:	stp	x4, x5, [sp, #64]
  40a730:	bl	405180 <vfprintf@plt>
  40a734:	ldp	x21, x22, [sp, #32]
  40a738:	ldp	x29, x30, [sp], #288
  40a73c:	ret

000000000040a740 <ifa_family_color@@Base>:
  40a740:	and	w0, w0, #0xff
  40a744:	cmp	w0, #0x2
  40a748:	b.eq	40a75c <ifa_family_color@@Base+0x1c>  // b.none
  40a74c:	cmp	w0, #0xa
  40a750:	mov	w1, #0x3                   	// #3
  40a754:	mov	w0, #0x6                   	// #6
  40a758:	csel	w0, w0, w1, ne  // ne = any
  40a75c:	ret

000000000040a760 <oper_state_color@@Base>:
  40a760:	and	w0, w0, #0xff
  40a764:	cmp	w0, #0x2
  40a768:	b.eq	40a780 <oper_state_color@@Base+0x20>  // b.none
  40a76c:	cmp	w0, #0x6
  40a770:	mov	w1, #0x4                   	// #4
  40a774:	mov	w0, #0x6                   	// #6
  40a778:	csel	w0, w0, w1, ne  // ne = any
  40a77c:	ret
  40a780:	mov	w0, #0x5                   	// #5
  40a784:	ret

000000000040a788 <mpls_ntop@@Base>:
  40a788:	stp	x29, x30, [sp, #-80]!
  40a78c:	mov	x29, sp
  40a790:	stp	x19, x20, [sp, #16]
  40a794:	mov	x20, x1
  40a798:	mov	x19, x3
  40a79c:	stp	x21, x22, [sp, #32]
  40a7a0:	mov	w22, w0
  40a7a4:	mov	x21, x2
  40a7a8:	stp	x25, x26, [sp, #64]
  40a7ac:	bl	4051b0 <__errno_location@plt>
  40a7b0:	cmp	w22, #0x1c
  40a7b4:	mov	x25, x0
  40a7b8:	b.eq	40a7dc <mpls_ntop@@Base+0x54>  // b.none
  40a7bc:	mov	w1, #0x61                  	// #97
  40a7c0:	str	w1, [x25]
  40a7c4:	mov	x0, #0x0                   	// #0
  40a7c8:	ldp	x19, x20, [sp, #16]
  40a7cc:	ldp	x21, x22, [sp, #32]
  40a7d0:	ldp	x25, x26, [sp, #64]
  40a7d4:	ldp	x29, x30, [sp], #80
  40a7d8:	ret
  40a7dc:	stp	x23, x24, [sp, #48]
  40a7e0:	adrp	x26, 40e000 <_IO_stdin_used@@Base+0x490>
  40a7e4:	mov	x24, x21
  40a7e8:	add	x26, x26, #0x8b0
  40a7ec:	mov	w23, #0x2f                  	// #47
  40a7f0:	str	wzr, [x0]
  40a7f4:	b	40a808 <mpls_ntop@@Base+0x80>
  40a7f8:	tbnz	w22, #8, 40a860 <mpls_ntop@@Base+0xd8>
  40a7fc:	add	x19, x19, x1
  40a800:	strb	w23, [x24, w0, sxtw]
  40a804:	add	x24, x2, #0x1
  40a808:	ldr	w22, [x20]
  40a80c:	mov	x1, x19
  40a810:	mov	x2, x26
  40a814:	mov	x0, x24
  40a818:	rev	w22, w22
  40a81c:	add	x20, x20, #0x4
  40a820:	lsr	w3, w22, #12
  40a824:	bl	404e00 <snprintf@plt>
  40a828:	sxtw	x1, w0
  40a82c:	cmp	x19, w0, sxtw
  40a830:	add	x2, x24, x1
  40a834:	mvn	x1, x1
  40a838:	b.hi	40a7f8 <mpls_ntop@@Base+0x70>  // b.pmore
  40a83c:	mov	w1, #0xfffffff9            	// #-7
  40a840:	mov	x0, #0x0                   	// #0
  40a844:	ldp	x23, x24, [sp, #48]
  40a848:	str	w1, [x25]
  40a84c:	ldp	x19, x20, [sp, #16]
  40a850:	ldp	x21, x22, [sp, #32]
  40a854:	ldp	x25, x26, [sp, #64]
  40a858:	ldp	x29, x30, [sp], #80
  40a85c:	ret
  40a860:	mov	x0, x21
  40a864:	ldp	x19, x20, [sp, #16]
  40a868:	ldp	x21, x22, [sp, #32]
  40a86c:	ldp	x23, x24, [sp, #48]
  40a870:	ldp	x25, x26, [sp, #64]
  40a874:	ldp	x29, x30, [sp], #80
  40a878:	ret
  40a87c:	nop

000000000040a880 <mpls_pton@@Base>:
  40a880:	stp	x29, x30, [sp, #-80]!
  40a884:	mov	x29, sp
  40a888:	stp	x19, x20, [sp, #16]
  40a88c:	lsr	x19, x3, #2
  40a890:	mov	x20, x2
  40a894:	stp	x21, x22, [sp, #32]
  40a898:	mov	w22, w0
  40a89c:	mov	x21, x1
  40a8a0:	bl	4051b0 <__errno_location@plt>
  40a8a4:	mov	x1, x0
  40a8a8:	cmp	w22, #0x1c
  40a8ac:	b.ne	40a994 <mpls_pton@@Base+0x114>  // b.any
  40a8b0:	str	wzr, [x0]
  40a8b4:	cbz	w19, 40a940 <mpls_pton@@Base+0xc0>
  40a8b8:	sub	w19, w19, #0x1
  40a8bc:	mov	x22, #0xfffff               	// #1048575
  40a8c0:	add	x19, x19, #0x1
  40a8c4:	str	x23, [sp, #48]
  40a8c8:	add	x23, sp, #0x48
  40a8cc:	add	x19, x20, x19, lsl #2
  40a8d0:	b	40a90c <mpls_pton@@Base+0x8c>
  40a8d4:	ldr	x2, [sp, #72]
  40a8d8:	lsl	w0, w0, #12
  40a8dc:	rev	w0, w0
  40a8e0:	cmp	x2, x21
  40a8e4:	b.eq	40a924 <mpls_pton@@Base+0xa4>  // b.none
  40a8e8:	str	w0, [x20]
  40a8ec:	add	x21, x2, #0x1
  40a8f0:	ldrb	w2, [x2]
  40a8f4:	cmp	w2, #0x2f
  40a8f8:	cbz	w2, 40a974 <mpls_pton@@Base+0xf4>
  40a8fc:	add	x20, x20, #0x4
  40a900:	b.ne	40a924 <mpls_pton@@Base+0xa4>  // b.any
  40a904:	cmp	x20, x19
  40a908:	b.eq	40a93c <mpls_pton@@Base+0xbc>  // b.none
  40a90c:	mov	x1, x23
  40a910:	mov	x0, x21
  40a914:	mov	w2, #0x0                   	// #0
  40a918:	bl	404d00 <strtoul@plt>
  40a91c:	cmp	x0, x22
  40a920:	b.ls	40a8d4 <mpls_pton@@Base+0x54>  // b.plast
  40a924:	ldr	x23, [sp, #48]
  40a928:	mov	w0, #0x0                   	// #0
  40a92c:	ldp	x19, x20, [sp, #16]
  40a930:	ldp	x21, x22, [sp, #32]
  40a934:	ldp	x29, x30, [sp], #80
  40a938:	ret
  40a93c:	ldr	x23, [sp, #48]
  40a940:	adrp	x3, 421000 <_IO_stdin_used@@Base+0x13490>
  40a944:	mov	x2, #0x18                  	// #24
  40a948:	mov	x1, #0x1                   	// #1
  40a94c:	ldr	x3, [x3, #3992]
  40a950:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x490>
  40a954:	add	x0, x0, #0x8b8
  40a958:	ldr	x3, [x3]
  40a95c:	bl	405090 <fwrite@plt>
  40a960:	mov	w0, #0x0                   	// #0
  40a964:	ldp	x19, x20, [sp, #16]
  40a968:	ldp	x21, x22, [sp, #32]
  40a96c:	ldp	x29, x30, [sp], #80
  40a970:	ret
  40a974:	orr	w1, w0, #0x10000
  40a978:	mov	w0, #0x1                   	// #1
  40a97c:	ldr	x23, [sp, #48]
  40a980:	str	w1, [x20]
  40a984:	ldp	x19, x20, [sp, #16]
  40a988:	ldp	x21, x22, [sp, #32]
  40a98c:	ldp	x29, x30, [sp], #80
  40a990:	ret
  40a994:	mov	w2, #0x61                  	// #97
  40a998:	mov	w0, #0xffffffff            	// #-1
  40a99c:	str	w2, [x1]
  40a9a0:	b	40a92c <mpls_pton@@Base+0xac>
  40a9a4:	nop
  40a9a8:	stp	x29, x30, [sp, #-16]!
  40a9ac:	adrp	x3, 40e000 <_IO_stdin_used@@Base+0x490>
  40a9b0:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x490>
  40a9b4:	mov	x29, sp
  40a9b8:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x490>
  40a9bc:	add	x3, x3, #0x998
  40a9c0:	add	x1, x1, #0x8d8
  40a9c4:	add	x0, x0, #0x8e8
  40a9c8:	mov	w2, #0x85                  	// #133
  40a9cc:	bl	4051a0 <__assert_fail@plt>
  40a9d0:	stp	x29, x30, [sp, #-48]!
  40a9d4:	mov	x29, sp
  40a9d8:	stp	x19, x20, [sp, #16]
  40a9dc:	mov	x20, x0
  40a9e0:	mov	x19, x1
  40a9e4:	mov	w0, #0x22                  	// #34
  40a9e8:	ldr	x1, [x20]
  40a9ec:	bl	404dc0 <putc@plt>
  40a9f0:	ldrb	w0, [x19]
  40a9f4:	cbz	w0, 40aa84 <mpls_pton@@Base+0x204>
  40a9f8:	stp	x21, x22, [sp, #32]
  40a9fc:	adrp	x22, 40e000 <_IO_stdin_used@@Base+0x490>
  40aa00:	adrp	x21, 40e000 <_IO_stdin_used@@Base+0x490>
  40aa04:	add	x22, x22, #0x908
  40aa08:	add	x21, x21, #0x930
  40aa0c:	b	40aa40 <mpls_pton@@Base+0x1c0>
  40aa10:	cmp	w0, #0x8
  40aa14:	b.eq	40ab2c <mpls_pton@@Base+0x2ac>  // b.none
  40aa18:	cmp	w0, #0x9
  40aa1c:	b.ne	40ab20 <mpls_pton@@Base+0x2a0>  // b.any
  40aa20:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x490>
  40aa24:	mov	x2, #0x2                   	// #2
  40aa28:	add	x0, x0, #0x8f8
  40aa2c:	mov	x1, #0x1                   	// #1
  40aa30:	bl	405090 <fwrite@plt>
  40aa34:	nop
  40aa38:	ldrb	w0, [x19, #1]!
  40aa3c:	cbz	w0, 40aa80 <mpls_pton@@Base+0x200>
  40aa40:	cmp	w0, #0xd
  40aa44:	ldr	x3, [x20]
  40aa48:	b.eq	40aaf8 <mpls_pton@@Base+0x278>  // b.none
  40aa4c:	b.hi	40aa98 <mpls_pton@@Base+0x218>  // b.pmore
  40aa50:	cmp	w0, #0xa
  40aa54:	b.eq	40aae0 <mpls_pton@@Base+0x260>  // b.none
  40aa58:	b.ls	40aa10 <mpls_pton@@Base+0x190>  // b.plast
  40aa5c:	cmp	w0, #0xc
  40aa60:	b.ne	40ab20 <mpls_pton@@Base+0x2a0>  // b.any
  40aa64:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x490>
  40aa68:	mov	x2, #0x2                   	// #2
  40aa6c:	add	x0, x0, #0x910
  40aa70:	mov	x1, #0x1                   	// #1
  40aa74:	bl	405090 <fwrite@plt>
  40aa78:	ldrb	w0, [x19, #1]!
  40aa7c:	cbnz	w0, 40aa40 <mpls_pton@@Base+0x1c0>
  40aa80:	ldp	x21, x22, [sp, #32]
  40aa84:	mov	w0, #0x22                  	// #34
  40aa88:	ldr	x1, [x20]
  40aa8c:	ldp	x19, x20, [sp, #16]
  40aa90:	ldp	x29, x30, [sp], #48
  40aa94:	b	404dc0 <putc@plt>
  40aa98:	cmp	w0, #0x27
  40aa9c:	b.eq	40ab0c <mpls_pton@@Base+0x28c>  // b.none
  40aaa0:	cmp	w0, #0x5c
  40aaa4:	b.ne	40aac0 <mpls_pton@@Base+0x240>  // b.any
  40aaa8:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x490>
  40aaac:	mov	x2, #0x2                   	// #2
  40aab0:	mov	x1, #0x1                   	// #1
  40aab4:	add	x0, x0, #0x920
  40aab8:	bl	405090 <fwrite@plt>
  40aabc:	b	40aa38 <mpls_pton@@Base+0x1b8>
  40aac0:	cmp	w0, #0x22
  40aac4:	b.ne	40ab20 <mpls_pton@@Base+0x2a0>  // b.any
  40aac8:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x490>
  40aacc:	mov	x2, #0x2                   	// #2
  40aad0:	mov	x1, #0x1                   	// #1
  40aad4:	add	x0, x0, #0x928
  40aad8:	bl	405090 <fwrite@plt>
  40aadc:	b	40aa38 <mpls_pton@@Base+0x1b8>
  40aae0:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x490>
  40aae4:	mov	x2, #0x2                   	// #2
  40aae8:	mov	x1, #0x1                   	// #1
  40aaec:	add	x0, x0, #0x900
  40aaf0:	bl	405090 <fwrite@plt>
  40aaf4:	b	40aa38 <mpls_pton@@Base+0x1b8>
  40aaf8:	mov	x0, x22
  40aafc:	mov	x2, #0x2                   	// #2
  40ab00:	mov	x1, #0x1                   	// #1
  40ab04:	bl	405090 <fwrite@plt>
  40ab08:	b	40aa38 <mpls_pton@@Base+0x1b8>
  40ab0c:	mov	x0, x21
  40ab10:	mov	x2, #0x2                   	// #2
  40ab14:	mov	x1, #0x1                   	// #1
  40ab18:	bl	405090 <fwrite@plt>
  40ab1c:	b	40aa38 <mpls_pton@@Base+0x1b8>
  40ab20:	mov	x1, x3
  40ab24:	bl	404dc0 <putc@plt>
  40ab28:	b	40aa38 <mpls_pton@@Base+0x1b8>
  40ab2c:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x490>
  40ab30:	mov	x2, #0x2                   	// #2
  40ab34:	mov	x1, #0x1                   	// #1
  40ab38:	add	x0, x0, #0x918
  40ab3c:	bl	405090 <fwrite@plt>
  40ab40:	b	40aa38 <mpls_pton@@Base+0x1b8>
  40ab44:	nop

000000000040ab48 <jsonw_new@@Base>:
  40ab48:	stp	x29, x30, [sp, #-32]!
  40ab4c:	mov	x29, sp
  40ab50:	str	x19, [sp, #16]
  40ab54:	mov	x19, x0
  40ab58:	mov	x0, #0x10                  	// #16
  40ab5c:	bl	404e50 <malloc@plt>
  40ab60:	cbz	x0, 40ab70 <jsonw_new@@Base+0x28>
  40ab64:	str	x19, [x0]
  40ab68:	str	wzr, [x0, #8]
  40ab6c:	strh	wzr, [x0, #12]
  40ab70:	ldr	x19, [sp, #16]
  40ab74:	ldp	x29, x30, [sp], #32
  40ab78:	ret
  40ab7c:	nop

000000000040ab80 <jsonw_destroy@@Base>:
  40ab80:	stp	x29, x30, [sp, #-32]!
  40ab84:	mov	x29, sp
  40ab88:	stp	x19, x20, [sp, #16]
  40ab8c:	mov	x19, x0
  40ab90:	ldr	x20, [x0]
  40ab94:	ldr	w0, [x20, #8]
  40ab98:	cbnz	w0, 40abc8 <jsonw_destroy@@Base+0x48>
  40ab9c:	ldr	x1, [x20]
  40aba0:	mov	w0, #0xa                   	// #10
  40aba4:	bl	404de0 <fputc@plt>
  40aba8:	ldr	x0, [x20]
  40abac:	bl	4050b0 <fflush@plt>
  40abb0:	mov	x0, x20
  40abb4:	bl	405030 <free@plt>
  40abb8:	str	xzr, [x19]
  40abbc:	ldp	x19, x20, [sp, #16]
  40abc0:	ldp	x29, x30, [sp], #32
  40abc4:	ret
  40abc8:	adrp	x3, 40e000 <_IO_stdin_used@@Base+0x490>
  40abcc:	add	x3, x3, #0x998
  40abd0:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x490>
  40abd4:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x490>
  40abd8:	add	x3, x3, #0x10
  40abdc:	add	x1, x1, #0x8d8
  40abe0:	add	x0, x0, #0x938
  40abe4:	mov	w2, #0x6e                  	// #110
  40abe8:	bl	4051a0 <__assert_fail@plt>
  40abec:	nop

000000000040abf0 <jsonw_pretty@@Base>:
  40abf0:	strb	w1, [x0, #12]
  40abf4:	ret

000000000040abf8 <jsonw_name@@Base>:
  40abf8:	stp	x29, x30, [sp, #-48]!
  40abfc:	mov	x29, sp
  40ac00:	stp	x19, x20, [sp, #16]
  40ac04:	mov	x19, x0
  40ac08:	mov	x20, x1
  40ac0c:	ldrb	w0, [x0, #13]
  40ac10:	cbnz	w0, 40aca4 <jsonw_name@@Base+0xac>
  40ac14:	ldrb	w0, [x19, #12]
  40ac18:	mov	w1, #0x2c                  	// #44
  40ac1c:	strb	w1, [x19, #13]
  40ac20:	cbnz	w0, 40ac54 <jsonw_name@@Base+0x5c>
  40ac24:	strb	wzr, [x19, #13]
  40ac28:	mov	x1, x20
  40ac2c:	mov	x0, x19
  40ac30:	bl	40a9d0 <mpls_pton@@Base+0x150>
  40ac34:	ldr	x1, [x19]
  40ac38:	mov	w0, #0x3a                  	// #58
  40ac3c:	bl	404dc0 <putc@plt>
  40ac40:	ldrb	w0, [x19, #12]
  40ac44:	cbnz	w0, 40acb0 <jsonw_name@@Base+0xb8>
  40ac48:	ldp	x19, x20, [sp, #16]
  40ac4c:	ldp	x29, x30, [sp], #48
  40ac50:	ret
  40ac54:	ldr	x1, [x19]
  40ac58:	mov	w0, #0xa                   	// #10
  40ac5c:	bl	404dc0 <putc@plt>
  40ac60:	ldr	w0, [x19, #8]
  40ac64:	cbz	w0, 40ac24 <jsonw_name@@Base+0x2c>
  40ac68:	stp	x21, x22, [sp, #32]
  40ac6c:	adrp	x22, 40e000 <_IO_stdin_used@@Base+0x490>
  40ac70:	add	x22, x22, #0x950
  40ac74:	mov	w21, #0x0                   	// #0
  40ac78:	ldr	x3, [x19]
  40ac7c:	mov	x0, x22
  40ac80:	mov	x2, #0x4                   	// #4
  40ac84:	mov	x1, #0x1                   	// #1
  40ac88:	add	w21, w21, #0x1
  40ac8c:	bl	405090 <fwrite@plt>
  40ac90:	ldr	w0, [x19, #8]
  40ac94:	cmp	w21, w0
  40ac98:	b.cc	40ac78 <jsonw_name@@Base+0x80>  // b.lo, b.ul, b.last
  40ac9c:	ldp	x21, x22, [sp, #32]
  40aca0:	b	40ac24 <jsonw_name@@Base+0x2c>
  40aca4:	ldr	x1, [x19]
  40aca8:	bl	404dc0 <putc@plt>
  40acac:	b	40ac14 <jsonw_name@@Base+0x1c>
  40acb0:	ldr	x1, [x19]
  40acb4:	mov	w0, #0x20                  	// #32
  40acb8:	ldp	x19, x20, [sp, #16]
  40acbc:	ldp	x29, x30, [sp], #48
  40acc0:	b	404dc0 <putc@plt>
  40acc4:	nop

000000000040acc8 <jsonw_printf@@Base>:
  40acc8:	stp	x29, x30, [sp, #-272]!
  40accc:	mov	w9, #0xffffffd0            	// #-48
  40acd0:	mov	x29, sp
  40acd4:	stp	x19, x20, [sp, #16]
  40acd8:	mov	x19, x0
  40acdc:	add	x10, sp, #0xe0
  40ace0:	str	q0, [sp, #96]
  40ace4:	mov	w0, #0xffffff80            	// #-128
  40ace8:	mov	x20, x1
  40acec:	ldrb	w8, [x19, #13]
  40acf0:	add	x1, sp, #0x110
  40acf4:	stp	x1, x1, [sp, #64]
  40acf8:	str	x10, [sp, #80]
  40acfc:	stp	w9, w0, [sp, #88]
  40ad00:	str	q1, [sp, #112]
  40ad04:	str	q2, [sp, #128]
  40ad08:	str	q3, [sp, #144]
  40ad0c:	str	q4, [sp, #160]
  40ad10:	str	q5, [sp, #176]
  40ad14:	str	q6, [sp, #192]
  40ad18:	str	q7, [sp, #208]
  40ad1c:	stp	x2, x3, [sp, #224]
  40ad20:	stp	x4, x5, [sp, #240]
  40ad24:	stp	x6, x7, [sp, #256]
  40ad28:	ldr	x0, [x19]
  40ad2c:	cbnz	w8, 40ad60 <jsonw_printf@@Base+0x98>
  40ad30:	ldp	x6, x7, [sp, #64]
  40ad34:	mov	w1, #0x2c                  	// #44
  40ad38:	ldp	x4, x5, [sp, #80]
  40ad3c:	strb	w1, [x19, #13]
  40ad40:	add	x2, sp, #0x20
  40ad44:	mov	x1, x20
  40ad48:	stp	x6, x7, [sp, #32]
  40ad4c:	stp	x4, x5, [sp, #48]
  40ad50:	bl	405180 <vfprintf@plt>
  40ad54:	ldp	x19, x20, [sp, #16]
  40ad58:	ldp	x29, x30, [sp], #272
  40ad5c:	ret
  40ad60:	mov	x1, x0
  40ad64:	mov	w0, w8
  40ad68:	bl	404dc0 <putc@plt>
  40ad6c:	ldr	x0, [x19]
  40ad70:	b	40ad30 <jsonw_printf@@Base+0x68>
  40ad74:	nop

000000000040ad78 <jsonw_start_object@@Base>:
  40ad78:	stp	x29, x30, [sp, #-32]!
  40ad7c:	mov	x29, sp
  40ad80:	str	x19, [sp, #16]
  40ad84:	mov	x19, x0
  40ad88:	ldrb	w0, [x0, #13]
  40ad8c:	ldr	x1, [x19]
  40ad90:	cbnz	w0, 40adc0 <jsonw_start_object@@Base+0x48>
  40ad94:	mov	w0, #0x2c                  	// #44
  40ad98:	strb	w0, [x19, #13]
  40ad9c:	mov	w0, #0x7b                  	// #123
  40ada0:	bl	404dc0 <putc@plt>
  40ada4:	strb	wzr, [x19, #13]
  40ada8:	ldr	w0, [x19, #8]
  40adac:	add	w0, w0, #0x1
  40adb0:	str	w0, [x19, #8]
  40adb4:	ldr	x19, [sp, #16]
  40adb8:	ldp	x29, x30, [sp], #32
  40adbc:	ret
  40adc0:	bl	404dc0 <putc@plt>
  40adc4:	ldr	x1, [x19]
  40adc8:	b	40ad94 <jsonw_start_object@@Base+0x1c>
  40adcc:	nop

000000000040add0 <jsonw_end_object@@Base>:
  40add0:	stp	x29, x30, [sp, #-48]!
  40add4:	mov	x29, sp
  40add8:	stp	x19, x20, [sp, #16]
  40addc:	mov	x19, x0
  40ade0:	ldr	w0, [x0, #8]
  40ade4:	cbz	w0, 40ae70 <jsonw_end_object@@Base+0xa0>
  40ade8:	ldrb	w2, [x19, #13]
  40adec:	sub	w0, w0, #0x1
  40adf0:	str	w0, [x19, #8]
  40adf4:	ldr	x1, [x19]
  40adf8:	cbz	w2, 40ae54 <jsonw_end_object@@Base+0x84>
  40adfc:	ldrb	w0, [x19, #12]
  40ae00:	cbz	w0, 40ae54 <jsonw_end_object@@Base+0x84>
  40ae04:	mov	w0, #0xa                   	// #10
  40ae08:	str	x21, [sp, #32]
  40ae0c:	bl	404dc0 <putc@plt>
  40ae10:	adrp	x21, 40e000 <_IO_stdin_used@@Base+0x490>
  40ae14:	ldr	w0, [x19, #8]
  40ae18:	add	x21, x21, #0x950
  40ae1c:	mov	w20, #0x0                   	// #0
  40ae20:	cbz	w0, 40ae4c <jsonw_end_object@@Base+0x7c>
  40ae24:	nop
  40ae28:	ldr	x3, [x19]
  40ae2c:	mov	x0, x21
  40ae30:	mov	x2, #0x4                   	// #4
  40ae34:	mov	x1, #0x1                   	// #1
  40ae38:	add	w20, w20, #0x1
  40ae3c:	bl	405090 <fwrite@plt>
  40ae40:	ldr	w0, [x19, #8]
  40ae44:	cmp	w20, w0
  40ae48:	b.cc	40ae28 <jsonw_end_object@@Base+0x58>  // b.lo, b.ul, b.last
  40ae4c:	ldr	x1, [x19]
  40ae50:	ldr	x21, [sp, #32]
  40ae54:	mov	w0, #0x7d                  	// #125
  40ae58:	bl	404dc0 <putc@plt>
  40ae5c:	mov	w0, #0x2c                  	// #44
  40ae60:	strb	w0, [x19, #13]
  40ae64:	ldp	x19, x20, [sp, #16]
  40ae68:	ldp	x29, x30, [sp], #48
  40ae6c:	ret
  40ae70:	str	x21, [sp, #32]
  40ae74:	bl	40a9a8 <mpls_pton@@Base+0x128>

000000000040ae78 <jsonw_start_array@@Base>:
  40ae78:	stp	x29, x30, [sp, #-32]!
  40ae7c:	mov	x29, sp
  40ae80:	str	x19, [sp, #16]
  40ae84:	mov	x19, x0
  40ae88:	ldrb	w0, [x0, #13]
  40ae8c:	ldr	x1, [x19]
  40ae90:	cbnz	w0, 40aec8 <jsonw_start_array@@Base+0x50>
  40ae94:	mov	w0, #0x2c                  	// #44
  40ae98:	strb	w0, [x19, #13]
  40ae9c:	mov	w0, #0x5b                  	// #91
  40aea0:	bl	404dc0 <putc@plt>
  40aea4:	strb	wzr, [x19, #13]
  40aea8:	ldr	w0, [x19, #8]
  40aeac:	ldrb	w1, [x19, #12]
  40aeb0:	add	w0, w0, #0x1
  40aeb4:	str	w0, [x19, #8]
  40aeb8:	cbnz	w1, 40aed4 <jsonw_start_array@@Base+0x5c>
  40aebc:	ldr	x19, [sp, #16]
  40aec0:	ldp	x29, x30, [sp], #32
  40aec4:	ret
  40aec8:	bl	404dc0 <putc@plt>
  40aecc:	ldr	x1, [x19]
  40aed0:	b	40ae94 <jsonw_start_array@@Base+0x1c>
  40aed4:	ldr	x1, [x19]
  40aed8:	mov	w0, #0x20                  	// #32
  40aedc:	ldr	x19, [sp, #16]
  40aee0:	ldp	x29, x30, [sp], #32
  40aee4:	b	404dc0 <putc@plt>

000000000040aee8 <jsonw_end_array@@Base>:
  40aee8:	stp	x29, x30, [sp, #-32]!
  40aeec:	mov	x29, sp
  40aef0:	str	x19, [sp, #16]
  40aef4:	mov	x19, x0
  40aef8:	ldrb	w0, [x0, #12]
  40aefc:	cbz	w0, 40af08 <jsonw_end_array@@Base+0x20>
  40af00:	ldrb	w0, [x19, #13]
  40af04:	cbnz	w0, 40af3c <jsonw_end_array@@Base+0x54>
  40af08:	ldr	w0, [x19, #8]
  40af0c:	strb	wzr, [x19, #13]
  40af10:	cbz	w0, 40af4c <jsonw_end_array@@Base+0x64>
  40af14:	ldr	x1, [x19]
  40af18:	sub	w0, w0, #0x1
  40af1c:	str	w0, [x19, #8]
  40af20:	mov	w0, #0x5d                  	// #93
  40af24:	bl	404dc0 <putc@plt>
  40af28:	mov	w0, #0x2c                  	// #44
  40af2c:	strb	w0, [x19, #13]
  40af30:	ldr	x19, [sp, #16]
  40af34:	ldp	x29, x30, [sp], #32
  40af38:	ret
  40af3c:	ldr	x1, [x19]
  40af40:	mov	w0, #0x20                  	// #32
  40af44:	bl	404dc0 <putc@plt>
  40af48:	b	40af08 <jsonw_end_array@@Base+0x20>
  40af4c:	bl	40a9a8 <mpls_pton@@Base+0x128>

000000000040af50 <jsonw_string@@Base>:
  40af50:	stp	x29, x30, [sp, #-32]!
  40af54:	mov	x29, sp
  40af58:	stp	x19, x20, [sp, #16]
  40af5c:	mov	x19, x0
  40af60:	mov	x20, x1
  40af64:	ldrb	w0, [x0, #13]
  40af68:	cbnz	w0, 40af88 <jsonw_string@@Base+0x38>
  40af6c:	mov	w0, #0x2c                  	// #44
  40af70:	strb	w0, [x19, #13]
  40af74:	mov	x1, x20
  40af78:	mov	x0, x19
  40af7c:	ldp	x19, x20, [sp, #16]
  40af80:	ldp	x29, x30, [sp], #32
  40af84:	b	40a9d0 <mpls_pton@@Base+0x150>
  40af88:	ldr	x1, [x19]
  40af8c:	bl	404dc0 <putc@plt>
  40af90:	mov	w0, #0x2c                  	// #44
  40af94:	strb	w0, [x19, #13]
  40af98:	mov	x1, x20
  40af9c:	mov	x0, x19
  40afa0:	ldp	x19, x20, [sp, #16]
  40afa4:	ldp	x29, x30, [sp], #32
  40afa8:	b	40a9d0 <mpls_pton@@Base+0x150>
  40afac:	nop

000000000040afb0 <jsonw_bool@@Base>:
  40afb0:	tst	w1, #0xff
  40afb4:	adrp	x3, 40e000 <_IO_stdin_used@@Base+0x490>
  40afb8:	adrp	x2, 40e000 <_IO_stdin_used@@Base+0x490>
  40afbc:	add	x3, x3, #0x7b0
  40afc0:	add	x2, x2, #0x7a8
  40afc4:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x490>
  40afc8:	csel	x2, x2, x3, ne  // ne = any
  40afcc:	add	x1, x1, #0x3d8
  40afd0:	b	40acc8 <jsonw_printf@@Base>
  40afd4:	nop

000000000040afd8 <jsonw_null@@Base>:
  40afd8:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x490>
  40afdc:	add	x1, x1, #0x958
  40afe0:	b	40acc8 <jsonw_printf@@Base>
  40afe4:	nop

000000000040afe8 <jsonw_float@@Base>:
  40afe8:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x490>
  40afec:	add	x1, x1, #0x960
  40aff0:	b	40acc8 <jsonw_printf@@Base>
  40aff4:	nop

000000000040aff8 <jsonw_hhu@@Base>:
  40aff8:	and	w2, w1, #0xff
  40affc:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x490>
  40b000:	add	x1, x1, #0x968
  40b004:	b	40acc8 <jsonw_printf@@Base>

000000000040b008 <jsonw_hu@@Base>:
  40b008:	and	w2, w1, #0xffff
  40b00c:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x490>
  40b010:	add	x1, x1, #0x970
  40b014:	b	40acc8 <jsonw_printf@@Base>

000000000040b018 <jsonw_uint@@Base>:
  40b018:	mov	w2, w1
  40b01c:	adrp	x3, 40e000 <_IO_stdin_used@@Base+0x490>
  40b020:	add	x1, x3, #0x8b0
  40b024:	b	40acc8 <jsonw_printf@@Base>

000000000040b028 <jsonw_u64@@Base>:
  40b028:	mov	x2, x1
  40b02c:	adrp	x3, 40e000 <_IO_stdin_used@@Base+0x490>
  40b030:	add	x1, x3, #0x978
  40b034:	b	40acc8 <jsonw_printf@@Base>

000000000040b038 <jsonw_xint@@Base>:
  40b038:	mov	x2, x1
  40b03c:	adrp	x3, 40e000 <_IO_stdin_used@@Base+0x490>
  40b040:	add	x1, x3, #0x980
  40b044:	b	40acc8 <jsonw_printf@@Base>

000000000040b048 <jsonw_luint@@Base>:
  40b048:	mov	x2, x1
  40b04c:	adrp	x3, 40e000 <_IO_stdin_used@@Base+0x490>
  40b050:	add	x1, x3, #0x978
  40b054:	b	40acc8 <jsonw_printf@@Base>

000000000040b058 <jsonw_lluint@@Base>:
  40b058:	mov	x2, x1
  40b05c:	adrp	x3, 40e000 <_IO_stdin_used@@Base+0x490>
  40b060:	add	x1, x3, #0x988
  40b064:	b	40acc8 <jsonw_printf@@Base>

000000000040b068 <jsonw_int@@Base>:
  40b068:	mov	w2, w1
  40b06c:	adrp	x3, 40e000 <_IO_stdin_used@@Base+0x490>
  40b070:	add	x1, x3, #0x640
  40b074:	b	40acc8 <jsonw_printf@@Base>

000000000040b078 <jsonw_s64@@Base>:
  40b078:	mov	x2, x1
  40b07c:	adrp	x3, 40e000 <_IO_stdin_used@@Base+0x490>
  40b080:	add	x1, x3, #0x990
  40b084:	b	40acc8 <jsonw_printf@@Base>

000000000040b088 <jsonw_string_field@@Base>:
  40b088:	stp	x29, x30, [sp, #-32]!
  40b08c:	mov	x29, sp
  40b090:	stp	x19, x20, [sp, #16]
  40b094:	mov	x20, x2
  40b098:	mov	x19, x0
  40b09c:	bl	40abf8 <jsonw_name@@Base>
  40b0a0:	mov	x1, x20
  40b0a4:	mov	x0, x19
  40b0a8:	ldp	x19, x20, [sp, #16]
  40b0ac:	ldp	x29, x30, [sp], #32
  40b0b0:	b	40af50 <jsonw_string@@Base>
  40b0b4:	nop

000000000040b0b8 <jsonw_bool_field@@Base>:
  40b0b8:	stp	x29, x30, [sp, #-32]!
  40b0bc:	mov	x29, sp
  40b0c0:	stp	x19, x20, [sp, #16]
  40b0c4:	and	w20, w2, #0xff
  40b0c8:	mov	x19, x0
  40b0cc:	bl	40abf8 <jsonw_name@@Base>
  40b0d0:	mov	w1, w20
  40b0d4:	mov	x0, x19
  40b0d8:	ldp	x19, x20, [sp, #16]
  40b0dc:	ldp	x29, x30, [sp], #32
  40b0e0:	b	40afb0 <jsonw_bool@@Base>
  40b0e4:	nop

000000000040b0e8 <jsonw_float_field@@Base>:
  40b0e8:	stp	x29, x30, [sp, #-32]!
  40b0ec:	mov	x29, sp
  40b0f0:	str	d8, [sp, #24]
  40b0f4:	fmov	d8, d0
  40b0f8:	str	x19, [sp, #16]
  40b0fc:	mov	x19, x0
  40b100:	bl	40abf8 <jsonw_name@@Base>
  40b104:	fmov	d0, d8
  40b108:	mov	x0, x19
  40b10c:	ldr	d8, [sp, #24]
  40b110:	ldr	x19, [sp, #16]
  40b114:	ldp	x29, x30, [sp], #32
  40b118:	b	40afe8 <jsonw_float@@Base>
  40b11c:	nop

000000000040b120 <jsonw_uint_field@@Base>:
  40b120:	stp	x29, x30, [sp, #-32]!
  40b124:	mov	x29, sp
  40b128:	stp	x19, x20, [sp, #16]
  40b12c:	mov	w20, w2
  40b130:	mov	x19, x0
  40b134:	bl	40abf8 <jsonw_name@@Base>
  40b138:	mov	w1, w20
  40b13c:	mov	x0, x19
  40b140:	ldp	x19, x20, [sp, #16]
  40b144:	ldp	x29, x30, [sp], #32
  40b148:	b	40b018 <jsonw_uint@@Base>
  40b14c:	nop

000000000040b150 <jsonw_u64_field@@Base>:
  40b150:	stp	x29, x30, [sp, #-32]!
  40b154:	mov	x29, sp
  40b158:	stp	x19, x20, [sp, #16]
  40b15c:	mov	x20, x2
  40b160:	mov	x19, x0
  40b164:	bl	40abf8 <jsonw_name@@Base>
  40b168:	mov	x1, x20
  40b16c:	mov	x0, x19
  40b170:	ldp	x19, x20, [sp, #16]
  40b174:	ldp	x29, x30, [sp], #32
  40b178:	b	40b028 <jsonw_u64@@Base>
  40b17c:	nop

000000000040b180 <jsonw_xint_field@@Base>:
  40b180:	stp	x29, x30, [sp, #-32]!
  40b184:	mov	x29, sp
  40b188:	stp	x19, x20, [sp, #16]
  40b18c:	mov	x20, x2
  40b190:	mov	x19, x0
  40b194:	bl	40abf8 <jsonw_name@@Base>
  40b198:	mov	x1, x20
  40b19c:	mov	x0, x19
  40b1a0:	ldp	x19, x20, [sp, #16]
  40b1a4:	ldp	x29, x30, [sp], #32
  40b1a8:	b	40b038 <jsonw_xint@@Base>
  40b1ac:	nop

000000000040b1b0 <jsonw_hhu_field@@Base>:
  40b1b0:	stp	x29, x30, [sp, #-32]!
  40b1b4:	mov	x29, sp
  40b1b8:	stp	x19, x20, [sp, #16]
  40b1bc:	and	w20, w2, #0xff
  40b1c0:	mov	x19, x0
  40b1c4:	bl	40abf8 <jsonw_name@@Base>
  40b1c8:	mov	w1, w20
  40b1cc:	mov	x0, x19
  40b1d0:	ldp	x19, x20, [sp, #16]
  40b1d4:	ldp	x29, x30, [sp], #32
  40b1d8:	b	40aff8 <jsonw_hhu@@Base>
  40b1dc:	nop

000000000040b1e0 <jsonw_hu_field@@Base>:
  40b1e0:	stp	x29, x30, [sp, #-32]!
  40b1e4:	mov	x29, sp
  40b1e8:	stp	x19, x20, [sp, #16]
  40b1ec:	and	w20, w2, #0xffff
  40b1f0:	mov	x19, x0
  40b1f4:	bl	40abf8 <jsonw_name@@Base>
  40b1f8:	mov	w1, w20
  40b1fc:	mov	x0, x19
  40b200:	ldp	x19, x20, [sp, #16]
  40b204:	ldp	x29, x30, [sp], #32
  40b208:	b	40b008 <jsonw_hu@@Base>
  40b20c:	nop

000000000040b210 <jsonw_luint_field@@Base>:
  40b210:	stp	x29, x30, [sp, #-32]!
  40b214:	mov	x29, sp
  40b218:	stp	x19, x20, [sp, #16]
  40b21c:	mov	x20, x2
  40b220:	mov	x19, x0
  40b224:	bl	40abf8 <jsonw_name@@Base>
  40b228:	mov	x1, x20
  40b22c:	mov	x0, x19
  40b230:	ldp	x19, x20, [sp, #16]
  40b234:	ldp	x29, x30, [sp], #32
  40b238:	b	40b048 <jsonw_luint@@Base>
  40b23c:	nop

000000000040b240 <jsonw_lluint_field@@Base>:
  40b240:	stp	x29, x30, [sp, #-32]!
  40b244:	mov	x29, sp
  40b248:	stp	x19, x20, [sp, #16]
  40b24c:	mov	x20, x2
  40b250:	mov	x19, x0
  40b254:	bl	40abf8 <jsonw_name@@Base>
  40b258:	mov	x1, x20
  40b25c:	mov	x0, x19
  40b260:	ldp	x19, x20, [sp, #16]
  40b264:	ldp	x29, x30, [sp], #32
  40b268:	b	40b058 <jsonw_lluint@@Base>
  40b26c:	nop

000000000040b270 <jsonw_int_field@@Base>:
  40b270:	stp	x29, x30, [sp, #-32]!
  40b274:	mov	x29, sp
  40b278:	stp	x19, x20, [sp, #16]
  40b27c:	mov	w20, w2
  40b280:	mov	x19, x0
  40b284:	bl	40abf8 <jsonw_name@@Base>
  40b288:	mov	w1, w20
  40b28c:	mov	x0, x19
  40b290:	ldp	x19, x20, [sp, #16]
  40b294:	ldp	x29, x30, [sp], #32
  40b298:	b	40b068 <jsonw_int@@Base>
  40b29c:	nop

000000000040b2a0 <jsonw_s64_field@@Base>:
  40b2a0:	stp	x29, x30, [sp, #-32]!
  40b2a4:	mov	x29, sp
  40b2a8:	stp	x19, x20, [sp, #16]
  40b2ac:	mov	x20, x2
  40b2b0:	mov	x19, x0
  40b2b4:	bl	40abf8 <jsonw_name@@Base>
  40b2b8:	mov	x1, x20
  40b2bc:	mov	x0, x19
  40b2c0:	ldp	x19, x20, [sp, #16]
  40b2c4:	ldp	x29, x30, [sp], #32
  40b2c8:	b	40b078 <jsonw_s64@@Base>
  40b2cc:	nop

000000000040b2d0 <jsonw_null_field@@Base>:
  40b2d0:	stp	x29, x30, [sp, #-32]!
  40b2d4:	mov	x29, sp
  40b2d8:	str	x19, [sp, #16]
  40b2dc:	mov	x19, x0
  40b2e0:	bl	40abf8 <jsonw_name@@Base>
  40b2e4:	mov	x0, x19
  40b2e8:	ldr	x19, [sp, #16]
  40b2ec:	ldp	x29, x30, [sp], #32
  40b2f0:	b	40afd8 <jsonw_null@@Base>
  40b2f4:	nop
  40b2f8:	stp	x29, x30, [sp, #-48]!
  40b2fc:	mov	x29, sp
  40b300:	stp	x19, x20, [sp, #16]
  40b304:	mov	w20, w2
  40b308:	stp	x21, x22, [sp, #32]
  40b30c:	mov	w22, w0
  40b310:	mov	x21, x1
  40b314:	b	40b330 <jsonw_null_field@@Base+0x60>
  40b318:	bl	4051b0 <__errno_location@plt>
  40b31c:	mov	x19, x0
  40b320:	ldr	w0, [x0]
  40b324:	cmp	w0, #0x4
  40b328:	ccmp	w0, #0xb, #0x4, ne  // ne = any
  40b32c:	b.ne	40b360 <jsonw_null_field@@Base+0x90>  // b.any
  40b330:	mov	x1, x21
  40b334:	mov	w2, w20
  40b338:	mov	w0, w22
  40b33c:	bl	404cf0 <recvmsg@plt>
  40b340:	mov	w1, w0
  40b344:	tbnz	w0, #31, 40b318 <jsonw_null_field@@Base+0x48>
  40b348:	cbz	w0, 40b3a4 <jsonw_null_field@@Base+0xd4>
  40b34c:	mov	w0, w1
  40b350:	ldp	x19, x20, [sp, #16]
  40b354:	ldp	x21, x22, [sp, #32]
  40b358:	ldp	x29, x30, [sp], #48
  40b35c:	ret
  40b360:	adrp	x1, 421000 <_IO_stdin_used@@Base+0x13490>
  40b364:	ldr	x1, [x1, #3992]
  40b368:	ldr	x20, [x1]
  40b36c:	bl	404f50 <strerror@plt>
  40b370:	ldr	w3, [x19]
  40b374:	mov	x2, x0
  40b378:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x490>
  40b37c:	mov	x0, x20
  40b380:	add	x1, x1, #0x9c8
  40b384:	bl	405200 <fprintf@plt>
  40b388:	ldr	w1, [x19]
  40b38c:	ldp	x19, x20, [sp, #16]
  40b390:	neg	w1, w1
  40b394:	mov	w0, w1
  40b398:	ldp	x21, x22, [sp, #32]
  40b39c:	ldp	x29, x30, [sp], #48
  40b3a0:	ret
  40b3a4:	adrp	x3, 421000 <_IO_stdin_used@@Base+0x13490>
  40b3a8:	mov	x1, #0x1                   	// #1
  40b3ac:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x490>
  40b3b0:	mov	x2, #0xf                   	// #15
  40b3b4:	ldr	x3, [x3, #3992]
  40b3b8:	add	x0, x0, #0x9b8
  40b3bc:	ldr	x3, [x3]
  40b3c0:	bl	405090 <fwrite@plt>
  40b3c4:	mov	w1, #0xffffffc3            	// #-61
  40b3c8:	b	40b34c <jsonw_null_field@@Base+0x7c>
  40b3cc:	nop
  40b3d0:	stp	x29, x30, [sp, #-64]!
  40b3d4:	mov	x29, sp
  40b3d8:	stp	x21, x22, [sp, #32]
  40b3dc:	mov	x22, x2
  40b3e0:	mov	w2, #0x22                  	// #34
  40b3e4:	ldr	x21, [x1, #16]
  40b3e8:	stp	x19, x20, [sp, #16]
  40b3ec:	mov	x20, x1
  40b3f0:	stp	x23, x24, [sp, #48]
  40b3f4:	mov	w24, w0
  40b3f8:	stp	xzr, xzr, [x21]
  40b3fc:	bl	40b2f8 <jsonw_null_field@@Base+0x28>
  40b400:	sxtw	x19, w0
  40b404:	tbnz	w19, #31, 40b444 <jsonw_null_field@@Base+0x174>
  40b408:	cmp	w19, #0x8, lsl #12
  40b40c:	mov	x0, #0x8000                	// #32768
  40b410:	csel	x19, x19, x0, ge  // ge = tcont
  40b414:	mov	x0, x19
  40b418:	bl	404e50 <malloc@plt>
  40b41c:	mov	x23, x0
  40b420:	cbz	x0, 40b468 <jsonw_null_field@@Base+0x198>
  40b424:	stp	x23, x19, [x21]
  40b428:	mov	x1, x20
  40b42c:	mov	w0, w24
  40b430:	mov	w2, #0x0                   	// #0
  40b434:	bl	40b2f8 <jsonw_null_field@@Base+0x28>
  40b438:	mov	w19, w0
  40b43c:	tbnz	w0, #31, 40b45c <jsonw_null_field@@Base+0x18c>
  40b440:	str	x23, [x22]
  40b444:	mov	w0, w19
  40b448:	ldp	x19, x20, [sp, #16]
  40b44c:	ldp	x21, x22, [sp, #32]
  40b450:	ldp	x23, x24, [sp, #48]
  40b454:	ldp	x29, x30, [sp], #64
  40b458:	ret
  40b45c:	mov	x0, x23
  40b460:	bl	405030 <free@plt>
  40b464:	b	40b444 <jsonw_null_field@@Base+0x174>
  40b468:	adrp	x3, 421000 <_IO_stdin_used@@Base+0x13490>
  40b46c:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x490>
  40b470:	mov	x2, #0x20                  	// #32
  40b474:	mov	x1, #0x1                   	// #1
  40b478:	ldr	x3, [x3, #3992]
  40b47c:	mov	w19, #0xfffffff4            	// #-12
  40b480:	add	x0, x0, #0x9e8
  40b484:	ldr	x3, [x3]
  40b488:	bl	405090 <fwrite@plt>
  40b48c:	b	40b444 <jsonw_null_field@@Base+0x174>

000000000040b490 <nl_dump_ext_ack@@Base>:
  40b490:	mov	w0, #0x0                   	// #0
  40b494:	ret
  40b498:	stp	x29, x30, [sp, #-208]!
  40b49c:	mov	x6, #0x1                   	// #1
  40b4a0:	mov	w5, #0x10                  	// #16
  40b4a4:	mov	x29, sp
  40b4a8:	stp	x25, x26, [sp, #64]
  40b4ac:	mov	x26, x0
  40b4b0:	mov	w0, #0xc                   	// #12
  40b4b4:	ldr	x4, [x1]
  40b4b8:	stp	x19, x20, [sp, #16]
  40b4bc:	ldr	w19, [x26, #28]
  40b4c0:	stp	x23, x24, [sp, #48]
  40b4c4:	add	w19, w19, #0x1
  40b4c8:	stp	x27, x28, [sp, #80]
  40b4cc:	stp	xzr, xzr, [sp, #160]
  40b4d0:	stp	xzr, xzr, [sp, #176]
  40b4d4:	str	w19, [x26, #28]
  40b4d8:	str	xzr, [sp, #120]
  40b4dc:	str	wzr, [sp, #128]
  40b4e0:	str	w0, [sp, #160]
  40b4e4:	add	x0, sp, #0x78
  40b4e8:	stp	x1, x6, [sp, #168]
  40b4ec:	and	w1, w3, #0xff
  40b4f0:	stp	xzr, xzr, [sp, #192]
  40b4f4:	str	w19, [x4, #8]
  40b4f8:	str	x2, [sp, #96]
  40b4fc:	str	w1, [sp, #108]
  40b500:	strh	w5, [sp, #120]
  40b504:	str	x0, [sp, #152]
  40b508:	cbnz	x2, 40b518 <nl_dump_ext_ack@@Base+0x88>
  40b50c:	ldrh	w0, [x4, #6]
  40b510:	orr	w0, w0, #0x4
  40b514:	strh	w0, [x4, #6]
  40b518:	ldr	w0, [x26]
  40b51c:	add	x24, sp, #0x98
  40b520:	mov	x1, x24
  40b524:	mov	w2, #0x0                   	// #0
  40b528:	bl	404ee0 <sendmsg@plt>
  40b52c:	tbnz	w0, #31, 40b864 <nl_dump_ext_ack@@Base+0x3d4>
  40b530:	adrp	x1, 421000 <_IO_stdin_used@@Base+0x13490>
  40b534:	mov	w20, w19
  40b538:	sub	x20, x20, #0x1
  40b53c:	add	x25, sp, #0x70
  40b540:	ldr	x23, [x1, #3992]
  40b544:	add	x0, sp, #0x88
  40b548:	mov	x1, #0x1                   	// #1
  40b54c:	stp	x21, x22, [sp, #32]
  40b550:	str	wzr, [sp, #104]
  40b554:	stp	x0, x1, [sp, #168]
  40b558:	ldr	w0, [x26]
  40b55c:	mov	x2, x25
  40b560:	mov	x1, x24
  40b564:	bl	40b3d0 <jsonw_null_field@@Base+0x100>
  40b568:	mov	w28, w0
  40b56c:	tbnz	w0, #31, 40b7e0 <nl_dump_ext_ack@@Base+0x350>
  40b570:	ldr	w2, [sp, #160]
  40b574:	cmp	w2, #0xc
  40b578:	b.ne	40b89c <nl_dump_ext_ack@@Base+0x40c>  // b.any
  40b57c:	ldr	x27, [sp, #112]
  40b580:	mov	w21, w0
  40b584:	cmp	w0, #0xf
  40b588:	mov	x0, x27
  40b58c:	b.le	40b630 <nl_dump_ext_ack@@Base+0x1a0>
  40b590:	ldr	w28, [x27]
  40b594:	subs	w3, w28, #0x10
  40b598:	ccmp	w28, w21, #0x0, pl  // pl = nfrst
  40b59c:	b.gt	40b680 <nl_dump_ext_ack@@Base+0x1f0>
  40b5a0:	ldr	x1, [sp, #96]
  40b5a4:	cbnz	x1, 40b768 <nl_dump_ext_ack@@Base+0x2d8>
  40b5a8:	adrp	x22, 40e000 <_IO_stdin_used@@Base+0x490>
  40b5ac:	b	40b5c0 <nl_dump_ext_ack@@Base+0x130>
  40b5b0:	ldr	w28, [x27]
  40b5b4:	subs	w3, w28, #0x10
  40b5b8:	ccmp	w21, w28, #0x1, pl  // pl = nfrst
  40b5bc:	b.lt	40b680 <nl_dump_ext_ack@@Base+0x1f0>  // b.tstop
  40b5c0:	ldr	w1, [sp, #124]
  40b5c4:	cbnz	w1, 40b610 <nl_dump_ext_ack@@Base+0x180>
  40b5c8:	ldr	w2, [x26, #8]
  40b5cc:	ldr	w1, [x27, #12]
  40b5d0:	cmp	w2, w1
  40b5d4:	b.ne	40b610 <nl_dump_ext_ack@@Base+0x180>  // b.any
  40b5d8:	ldr	w1, [x27, #8]
  40b5dc:	cmp	w1, w19
  40b5e0:	b.hi	40b610 <nl_dump_ext_ack@@Base+0x180>  // b.pmore
  40b5e4:	cmp	x20, w1, uxtw
  40b5e8:	b.hi	40b610 <nl_dump_ext_ack@@Base+0x180>  // b.pmore
  40b5ec:	ldrh	w0, [x27, #4]
  40b5f0:	cmp	w0, #0x2
  40b5f4:	b.eq	40b6fc <nl_dump_ext_ack@@Base+0x26c>  // b.none
  40b5f8:	ldr	x3, [x23]
  40b5fc:	add	x0, x22, #0xa88
  40b600:	mov	x2, #0x14                  	// #20
  40b604:	mov	x1, #0x1                   	// #1
  40b608:	bl	405090 <fwrite@plt>
  40b60c:	nop
  40b610:	add	w4, w28, #0x3
  40b614:	and	w4, w4, #0xfffffffc
  40b618:	sub	w21, w21, w4
  40b61c:	add	x27, x27, w4, uxtw
  40b620:	mov	w28, w21
  40b624:	cmp	w21, #0xf
  40b628:	b.hi	40b5b0 <nl_dump_ext_ack@@Base+0x120>  // b.pmore
  40b62c:	ldr	x0, [sp, #112]
  40b630:	bl	405030 <free@plt>
  40b634:	ldr	w0, [sp, #200]
  40b638:	tbnz	w0, #5, 40b6d4 <nl_dump_ext_ack@@Base+0x244>
  40b63c:	cbnz	w28, 40b878 <nl_dump_ext_ack@@Base+0x3e8>
  40b640:	ldr	w0, [sp, #104]
  40b644:	add	w0, w0, #0x1
  40b648:	str	w0, [sp, #104]
  40b64c:	b	40b558 <nl_dump_ext_ack@@Base+0xc8>
  40b650:	add	w1, w28, #0x3
  40b654:	and	w1, w1, #0xfffffffc
  40b658:	sub	w21, w21, w1
  40b65c:	cmp	w21, #0xf
  40b660:	add	x6, x6, w1, uxtw
  40b664:	mov	w28, w21
  40b668:	b.ls	40b630 <nl_dump_ext_ack@@Base+0x1a0>  // b.plast
  40b66c:	ldr	w28, [x6]
  40b670:	subs	w3, w28, #0x10
  40b674:	ccmp	w28, w21, #0x0, pl  // pl = nfrst
  40b678:	b.le	40b770 <nl_dump_ext_ack@@Base+0x2e0>
  40b67c:	nop
  40b680:	adrp	x0, 421000 <_IO_stdin_used@@Base+0x13490>
  40b684:	ldr	w1, [sp, #200]
  40b688:	ldr	x0, [x0, #3992]
  40b68c:	ldr	x3, [x0]
  40b690:	tbz	w1, #5, 40b8ac <nl_dump_ext_ack@@Base+0x41c>
  40b694:	mov	x2, #0x12                  	// #18
  40b698:	mov	x1, #0x1                   	// #1
  40b69c:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x490>
  40b6a0:	add	x0, x0, #0xa50
  40b6a4:	bl	405090 <fwrite@plt>
  40b6a8:	mov	w28, #0xffffffff            	// #-1
  40b6ac:	ldr	x0, [sp, #112]
  40b6b0:	bl	405030 <free@plt>
  40b6b4:	ldp	x21, x22, [sp, #32]
  40b6b8:	mov	w0, w28
  40b6bc:	ldp	x19, x20, [sp, #16]
  40b6c0:	ldp	x23, x24, [sp, #48]
  40b6c4:	ldp	x25, x26, [sp, #64]
  40b6c8:	ldp	x27, x28, [sp, #80]
  40b6cc:	ldp	x29, x30, [sp], #208
  40b6d0:	ret
  40b6d4:	adrp	x0, 421000 <_IO_stdin_used@@Base+0x13490>
  40b6d8:	mov	x2, #0x12                  	// #18
  40b6dc:	mov	x1, #0x1                   	// #1
  40b6e0:	ldr	x3, [x0, #3992]
  40b6e4:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x490>
  40b6e8:	add	x0, x0, #0xad0
  40b6ec:	ldr	x3, [x3]
  40b6f0:	bl	405090 <fwrite@plt>
  40b6f4:	b	40b640 <nl_dump_ext_ack@@Base+0x1b0>
  40b6f8:	mov	x27, x6
  40b6fc:	ldr	w28, [x27, #16]
  40b700:	cmp	w3, #0x13
  40b704:	b.ls	40b830 <nl_dump_ext_ack@@Base+0x3a0>  // b.plast
  40b708:	cbz	w28, 40b7d0 <nl_dump_ext_ack@@Base+0x340>
  40b70c:	bl	4051b0 <__errno_location@plt>
  40b710:	neg	w1, w28
  40b714:	str	w1, [x0]
  40b718:	ldr	w2, [sp, #108]
  40b71c:	ldr	w0, [x26, #36]
  40b720:	cmp	w2, #0x0
  40b724:	ccmp	w0, #0x4, #0x4, ne  // ne = any
  40b728:	b.ne	40b7f0 <nl_dump_ext_ack@@Base+0x360>  // b.any
  40b72c:	ldr	x1, [sp, #96]
  40b730:	ldr	x0, [sp, #112]
  40b734:	cbz	x1, 40b7e8 <nl_dump_ext_ack@@Base+0x358>
  40b738:	str	x0, [x1]
  40b73c:	ldr	w0, [sp, #104]
  40b740:	cmp	w28, #0x0
  40b744:	ldp	x19, x20, [sp, #16]
  40b748:	csinv	w28, w28, w0, eq  // eq = none
  40b74c:	mov	w0, w28
  40b750:	ldp	x21, x22, [sp, #32]
  40b754:	ldp	x23, x24, [sp, #48]
  40b758:	ldp	x25, x26, [sp, #64]
  40b75c:	ldp	x27, x28, [sp, #80]
  40b760:	ldp	x29, x30, [sp], #208
  40b764:	ret
  40b768:	ldr	w8, [sp, #124]
  40b76c:	mov	x6, x27
  40b770:	cbnz	w8, 40b650 <nl_dump_ext_ack@@Base+0x1c0>
  40b774:	ldr	w2, [x6, #12]
  40b778:	ldr	w1, [x26, #8]
  40b77c:	cmp	w2, w1
  40b780:	b.ne	40b650 <nl_dump_ext_ack@@Base+0x1c0>  // b.any
  40b784:	ldr	w1, [x6, #8]
  40b788:	cmp	w19, w1
  40b78c:	b.cc	40b650 <nl_dump_ext_ack@@Base+0x1c0>  // b.lo, b.ul, b.last
  40b790:	cmp	x20, w1, uxtw
  40b794:	b.hi	40b650 <nl_dump_ext_ack@@Base+0x1c0>  // b.pmore
  40b798:	ldrh	w1, [x6, #4]
  40b79c:	cmp	w1, #0x2
  40b7a0:	b.eq	40b6f8 <nl_dump_ext_ack@@Base+0x268>  // b.none
  40b7a4:	ldr	x1, [sp, #96]
  40b7a8:	mov	w28, #0x0                   	// #0
  40b7ac:	ldp	x21, x22, [sp, #32]
  40b7b0:	str	x0, [x1]
  40b7b4:	mov	w0, w28
  40b7b8:	ldp	x19, x20, [sp, #16]
  40b7bc:	ldp	x23, x24, [sp, #48]
  40b7c0:	ldp	x25, x26, [sp, #64]
  40b7c4:	ldp	x27, x28, [sp, #80]
  40b7c8:	ldp	x29, x30, [sp], #208
  40b7cc:	ret
  40b7d0:	mov	x0, x27
  40b7d4:	mov	x1, #0x0                   	// #0
  40b7d8:	bl	40b490 <nl_dump_ext_ack@@Base>
  40b7dc:	b	40b72c <nl_dump_ext_ack@@Base+0x29c>
  40b7e0:	ldp	x21, x22, [sp, #32]
  40b7e4:	b	40b6b8 <nl_dump_ext_ack@@Base+0x228>
  40b7e8:	bl	405030 <free@plt>
  40b7ec:	b	40b73c <nl_dump_ext_ack@@Base+0x2ac>
  40b7f0:	mov	x0, x27
  40b7f4:	mov	x1, #0x0                   	// #0
  40b7f8:	bl	40b490 <nl_dump_ext_ack@@Base>
  40b7fc:	cbnz	w0, 40b72c <nl_dump_ext_ack@@Base+0x29c>
  40b800:	adrp	x1, 421000 <_IO_stdin_used@@Base+0x13490>
  40b804:	ldr	w0, [x27, #16]
  40b808:	ldr	x1, [x1, #3992]
  40b80c:	neg	w0, w0
  40b810:	ldr	x19, [x1]
  40b814:	bl	404f50 <strerror@plt>
  40b818:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x490>
  40b81c:	mov	x2, x0
  40b820:	add	x1, x1, #0xab8
  40b824:	mov	x0, x19
  40b828:	bl	405200 <fprintf@plt>
  40b82c:	b	40b72c <nl_dump_ext_ack@@Base+0x29c>
  40b830:	adrp	x3, 421000 <_IO_stdin_used@@Base+0x13490>
  40b834:	mov	x2, #0x10                  	// #16
  40b838:	mov	x1, #0x1                   	// #1
  40b83c:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x490>
  40b840:	ldr	x3, [x3, #3992]
  40b844:	add	x0, x0, #0xaa0
  40b848:	mov	w28, #0xffffffff            	// #-1
  40b84c:	ldr	x3, [x3]
  40b850:	bl	405090 <fwrite@plt>
  40b854:	ldr	x0, [sp, #112]
  40b858:	bl	405030 <free@plt>
  40b85c:	ldp	x21, x22, [sp, #32]
  40b860:	b	40b6b8 <nl_dump_ext_ack@@Base+0x228>
  40b864:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x490>
  40b868:	mov	w28, #0xffffffff            	// #-1
  40b86c:	add	x0, x0, #0xa10
  40b870:	bl	404d30 <perror@plt>
  40b874:	b	40b6b8 <nl_dump_ext_ack@@Base+0x228>
  40b878:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x490>
  40b87c:	mov	w2, w28
  40b880:	add	x1, x1, #0xae8
  40b884:	adrp	x0, 421000 <_IO_stdin_used@@Base+0x13490>
  40b888:	ldr	x0, [x0, #3992]
  40b88c:	ldr	x0, [x0]
  40b890:	bl	405200 <fprintf@plt>
  40b894:	mov	w0, #0x1                   	// #1
  40b898:	bl	404d20 <exit@plt>
  40b89c:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x490>
  40b8a0:	adrp	x0, 421000 <_IO_stdin_used@@Base+0x13490>
  40b8a4:	add	x1, x1, #0xa30
  40b8a8:	b	40b888 <nl_dump_ext_ack@@Base+0x3f8>
  40b8ac:	mov	w2, w28
  40b8b0:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x490>
  40b8b4:	add	x1, x1, #0xa68
  40b8b8:	mov	x0, x3
  40b8bc:	bl	405200 <fprintf@plt>
  40b8c0:	mov	w0, #0x1                   	// #1
  40b8c4:	bl	404d20 <exit@plt>

000000000040b8c8 <nl_dump_ext_ack_done@@Base>:
  40b8c8:	mov	w0, #0x0                   	// #0
  40b8cc:	ret

000000000040b8d0 <rtnl_set_strict_dump@@Base>:
  40b8d0:	stp	x29, x30, [sp, #-48]!
  40b8d4:	mov	w5, #0x1                   	// #1
  40b8d8:	mov	w4, #0x4                   	// #4
  40b8dc:	mov	x29, sp
  40b8e0:	str	x19, [sp, #16]
  40b8e4:	mov	x19, x0
  40b8e8:	ldr	w0, [x0]
  40b8ec:	add	x3, sp, #0x2c
  40b8f0:	mov	w2, #0xc                   	// #12
  40b8f4:	mov	w1, #0x10e                 	// #270
  40b8f8:	str	w5, [sp, #44]
  40b8fc:	bl	404e60 <setsockopt@plt>
  40b900:	tbnz	w0, #31, 40b910 <rtnl_set_strict_dump@@Base+0x40>
  40b904:	ldr	w0, [x19, #48]
  40b908:	orr	w0, w0, #0x4
  40b90c:	str	w0, [x19, #48]
  40b910:	ldr	x19, [sp, #16]
  40b914:	ldp	x29, x30, [sp], #48
  40b918:	ret
  40b91c:	nop

000000000040b920 <rtnl_add_nl_group@@Base>:
  40b920:	stp	x29, x30, [sp, #-32]!
  40b924:	mov	w4, #0x4                   	// #4
  40b928:	mov	w2, #0x1                   	// #1
  40b92c:	mov	x29, sp
  40b930:	ldr	w0, [x0]
  40b934:	add	x3, sp, #0x1c
  40b938:	str	w1, [sp, #28]
  40b93c:	mov	w1, #0x10e                 	// #270
  40b940:	bl	404e60 <setsockopt@plt>
  40b944:	ldp	x29, x30, [sp], #32
  40b948:	ret
  40b94c:	nop

000000000040b950 <rtnl_close@@Base>:
  40b950:	stp	x29, x30, [sp, #-32]!
  40b954:	mov	x29, sp
  40b958:	str	x19, [sp, #16]
  40b95c:	mov	x19, x0
  40b960:	ldr	w0, [x0]
  40b964:	tbnz	w0, #31, 40b974 <rtnl_close@@Base+0x24>
  40b968:	bl	404f60 <close@plt>
  40b96c:	mov	w0, #0xffffffff            	// #-1
  40b970:	str	w0, [x19]
  40b974:	ldr	x19, [sp, #16]
  40b978:	ldp	x29, x30, [sp], #32
  40b97c:	ret

000000000040b980 <rtnl_open_byproto@@Base>:
  40b980:	stp	x29, x30, [sp, #-64]!
  40b984:	mov	w3, #0x8000                	// #32768
  40b988:	mov	x29, sp
  40b98c:	stp	x19, x20, [sp, #16]
  40b990:	mov	x19, x0
  40b994:	mov	w20, #0x1                   	// #1
  40b998:	str	x21, [sp, #32]
  40b99c:	mov	w21, w1
  40b9a0:	stp	xzr, xzr, [x0, #32]
  40b9a4:	mov	w1, #0x3                   	// #3
  40b9a8:	movk	w1, #0x8, lsl #16
  40b9ac:	stp	xzr, xzr, [x19]
  40b9b0:	mov	w0, #0x10                  	// #16
  40b9b4:	stp	xzr, xzr, [x19, #16]
  40b9b8:	str	w2, [x19, #36]
  40b9bc:	str	xzr, [x19, #48]
  40b9c0:	stp	w3, w20, [sp, #56]
  40b9c4:	bl	4050a0 <socket@plt>
  40b9c8:	str	w0, [x19]
  40b9cc:	tbnz	w0, #31, 40bae4 <rtnl_open_byproto@@Base+0x164>
  40b9d0:	add	x3, sp, #0x38
  40b9d4:	mov	w1, w20
  40b9d8:	mov	w4, #0x4                   	// #4
  40b9dc:	mov	w2, #0x7                   	// #7
  40b9e0:	bl	404e60 <setsockopt@plt>
  40b9e4:	tbnz	w0, #31, 40baf8 <rtnl_open_byproto@@Base+0x178>
  40b9e8:	adrp	x3, 421000 <_IO_stdin_used@@Base+0x13490>
  40b9ec:	ldr	w0, [x19]
  40b9f0:	mov	w1, w20
  40b9f4:	mov	w4, #0x4                   	// #4
  40b9f8:	ldr	x3, [x3, #4024]
  40b9fc:	mov	w2, #0x8                   	// #8
  40ba00:	bl	404e60 <setsockopt@plt>
  40ba04:	tbnz	w0, #31, 40bb0c <rtnl_open_byproto@@Base+0x18c>
  40ba08:	mov	x20, x19
  40ba0c:	mov	w2, #0xb                   	// #11
  40ba10:	mov	w1, #0x10e                 	// #270
  40ba14:	add	x3, sp, #0x3c
  40ba18:	mov	w4, #0x4                   	// #4
  40ba1c:	ldr	w0, [x20], #4
  40ba20:	bl	404e60 <setsockopt@plt>
  40ba24:	stur	wzr, [x19, #6]
  40ba28:	ldr	w0, [x19]
  40ba2c:	mov	w2, #0x10                  	// #16
  40ba30:	strh	w2, [x19, #4]
  40ba34:	mov	x1, x20
  40ba38:	strh	wzr, [x19, #10]
  40ba3c:	mov	w2, #0xc                   	// #12
  40ba40:	str	w21, [x19, #12]
  40ba44:	bl	404d80 <bind@plt>
  40ba48:	tbnz	w0, #31, 40bb20 <rtnl_open_byproto@@Base+0x1a0>
  40ba4c:	ldr	w0, [x19]
  40ba50:	mov	w3, #0xc                   	// #12
  40ba54:	mov	x1, x20
  40ba58:	add	x2, sp, #0x34
  40ba5c:	str	w3, [sp, #52]
  40ba60:	bl	4051f0 <getsockname@plt>
  40ba64:	tbnz	w0, #31, 40bb34 <rtnl_open_byproto@@Base+0x1b4>
  40ba68:	ldr	w2, [sp, #52]
  40ba6c:	cmp	w2, #0xc
  40ba70:	b.ne	40bac4 <rtnl_open_byproto@@Base+0x144>  // b.any
  40ba74:	ldrh	w2, [x19, #4]
  40ba78:	cmp	w2, #0x10
  40ba7c:	b.ne	40baa4 <rtnl_open_byproto@@Base+0x124>  // b.any
  40ba80:	mov	x0, #0x0                   	// #0
  40ba84:	bl	404e40 <time@plt>
  40ba88:	mov	x1, x0
  40ba8c:	mov	w0, #0x0                   	// #0
  40ba90:	str	w1, [x19, #28]
  40ba94:	ldp	x19, x20, [sp, #16]
  40ba98:	ldr	x21, [sp, #32]
  40ba9c:	ldp	x29, x30, [sp], #64
  40baa0:	ret
  40baa4:	adrp	x0, 421000 <_IO_stdin_used@@Base+0x13490>
  40baa8:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x490>
  40baac:	add	x1, x1, #0xb98
  40bab0:	ldr	x0, [x0, #3992]
  40bab4:	ldr	x0, [x0]
  40bab8:	bl	405200 <fprintf@plt>
  40babc:	mov	w0, #0xffffffff            	// #-1
  40bac0:	b	40ba94 <rtnl_open_byproto@@Base+0x114>
  40bac4:	adrp	x0, 421000 <_IO_stdin_used@@Base+0x13490>
  40bac8:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x490>
  40bacc:	add	x1, x1, #0xb78
  40bad0:	ldr	x0, [x0, #3992]
  40bad4:	ldr	x0, [x0]
  40bad8:	bl	405200 <fprintf@plt>
  40badc:	mov	w0, #0xffffffff            	// #-1
  40bae0:	b	40ba94 <rtnl_open_byproto@@Base+0x114>
  40bae4:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x490>
  40bae8:	add	x0, x0, #0xb00
  40baec:	bl	404d30 <perror@plt>
  40baf0:	mov	w0, #0xffffffff            	// #-1
  40baf4:	b	40ba94 <rtnl_open_byproto@@Base+0x114>
  40baf8:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x490>
  40bafc:	add	x0, x0, #0xb20
  40bb00:	bl	404d30 <perror@plt>
  40bb04:	mov	w0, #0xffffffff            	// #-1
  40bb08:	b	40ba94 <rtnl_open_byproto@@Base+0x114>
  40bb0c:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x490>
  40bb10:	add	x0, x0, #0xb30
  40bb14:	bl	404d30 <perror@plt>
  40bb18:	mov	w0, #0xffffffff            	// #-1
  40bb1c:	b	40ba94 <rtnl_open_byproto@@Base+0x114>
  40bb20:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x490>
  40bb24:	add	x0, x0, #0xb40
  40bb28:	bl	404d30 <perror@plt>
  40bb2c:	mov	w0, #0xffffffff            	// #-1
  40bb30:	b	40ba94 <rtnl_open_byproto@@Base+0x114>
  40bb34:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x490>
  40bb38:	add	x0, x0, #0xb60
  40bb3c:	bl	404d30 <perror@plt>
  40bb40:	mov	w0, #0xffffffff            	// #-1
  40bb44:	b	40ba94 <rtnl_open_byproto@@Base+0x114>

000000000040bb48 <rtnl_open@@Base>:
  40bb48:	mov	w2, #0x0                   	// #0
  40bb4c:	b	40b980 <rtnl_open_byproto@@Base>

000000000040bb50 <rtnl_nexthopdump_req@@Base>:
  40bb50:	stp	x29, x30, [sp, #-192]!
  40bb54:	mov	x29, sp
  40bb58:	stp	x19, x20, [sp, #16]
  40bb5c:	mov	x19, x0
  40bb60:	mov	x0, #0x18                  	// #24
  40bb64:	stp	xzr, xzr, [sp, #48]
  40bb68:	movk	x0, #0x6a, lsl #32
  40bb6c:	ldr	w3, [x19, #28]
  40bb70:	strb	w1, [sp, #56]
  40bb74:	movk	x0, #0x301, lsl #48
  40bb78:	add	w1, w3, #0x1
  40bb7c:	str	x0, [sp, #40]
  40bb80:	str	w1, [sp, #48]
  40bb84:	add	x20, sp, #0x28
  40bb88:	dup	v0.2s, w1
  40bb8c:	stp	xzr, xzr, [sp, #64]
  40bb90:	stp	xzr, xzr, [sp, #80]
  40bb94:	stp	xzr, xzr, [sp, #96]
  40bb98:	stp	xzr, xzr, [sp, #112]
  40bb9c:	stp	xzr, xzr, [sp, #128]
  40bba0:	stp	xzr, xzr, [sp, #144]
  40bba4:	stp	xzr, xzr, [sp, #160]
  40bba8:	stp	xzr, xzr, [sp, #176]
  40bbac:	stur	d0, [x19, #28]
  40bbb0:	cbz	x2, 40bbc4 <rtnl_nexthopdump_req@@Base+0x74>
  40bbb4:	mov	x0, x20
  40bbb8:	mov	w1, #0x98                  	// #152
  40bbbc:	blr	x2
  40bbc0:	cbnz	w0, 40bbd8 <rtnl_nexthopdump_req@@Base+0x88>
  40bbc4:	ldr	w0, [x19]
  40bbc8:	mov	x1, x20
  40bbcc:	mov	w3, #0x0                   	// #0
  40bbd0:	mov	x2, #0x98                  	// #152
  40bbd4:	bl	405050 <send@plt>
  40bbd8:	ldp	x19, x20, [sp, #16]
  40bbdc:	ldp	x29, x30, [sp], #192
  40bbe0:	ret
  40bbe4:	nop

000000000040bbe8 <rtnl_addrdump_req@@Base>:
  40bbe8:	stp	x29, x30, [sp, #-192]!
  40bbec:	mov	x29, sp
  40bbf0:	stp	x19, x20, [sp, #16]
  40bbf4:	mov	x19, x0
  40bbf8:	mov	x0, #0x18                  	// #24
  40bbfc:	stp	xzr, xzr, [sp, #48]
  40bc00:	movk	x0, #0x16, lsl #32
  40bc04:	ldr	w3, [x19, #28]
  40bc08:	strb	w1, [sp, #56]
  40bc0c:	movk	x0, #0x301, lsl #48
  40bc10:	add	w1, w3, #0x1
  40bc14:	str	x0, [sp, #40]
  40bc18:	str	w1, [sp, #48]
  40bc1c:	add	x20, sp, #0x28
  40bc20:	dup	v0.2s, w1
  40bc24:	stp	xzr, xzr, [sp, #64]
  40bc28:	stp	xzr, xzr, [sp, #80]
  40bc2c:	stp	xzr, xzr, [sp, #96]
  40bc30:	stp	xzr, xzr, [sp, #112]
  40bc34:	stp	xzr, xzr, [sp, #128]
  40bc38:	stp	xzr, xzr, [sp, #144]
  40bc3c:	stp	xzr, xzr, [sp, #160]
  40bc40:	stp	xzr, xzr, [sp, #176]
  40bc44:	stur	d0, [x19, #28]
  40bc48:	cbz	x2, 40bc5c <rtnl_addrdump_req@@Base+0x74>
  40bc4c:	mov	x0, x20
  40bc50:	mov	w1, #0x98                  	// #152
  40bc54:	blr	x2
  40bc58:	cbnz	w0, 40bc70 <rtnl_addrdump_req@@Base+0x88>
  40bc5c:	ldr	w0, [x19]
  40bc60:	mov	x1, x20
  40bc64:	mov	w3, #0x0                   	// #0
  40bc68:	mov	x2, #0x98                  	// #152
  40bc6c:	bl	405050 <send@plt>
  40bc70:	ldp	x19, x20, [sp, #16]
  40bc74:	ldp	x29, x30, [sp], #192
  40bc78:	ret
  40bc7c:	nop

000000000040bc80 <rtnl_addrlbldump_req@@Base>:
  40bc80:	mov	x5, x0
  40bc84:	stp	x29, x30, [sp, #-48]!
  40bc88:	mov	x7, #0x1c                  	// #28
  40bc8c:	mov	x29, sp
  40bc90:	ldr	w4, [x5, #28]
  40bc94:	mov	w6, w1
  40bc98:	ldr	w0, [x0]
  40bc9c:	movk	x7, #0x4a, lsl #32
  40bca0:	add	w4, w4, #0x1
  40bca4:	movk	x7, #0x301, lsl #48
  40bca8:	stp	xzr, xzr, [sp, #24]
  40bcac:	add	x1, sp, #0x10
  40bcb0:	dup	v0.2s, w4
  40bcb4:	mov	w3, #0x0                   	// #0
  40bcb8:	mov	x2, #0x1c                  	// #28
  40bcbc:	str	x7, [sp, #16]
  40bcc0:	str	w4, [sp, #24]
  40bcc4:	stur	d0, [x5, #28]
  40bcc8:	strb	w6, [sp, #32]
  40bccc:	str	wzr, [sp, #40]
  40bcd0:	bl	405050 <send@plt>
  40bcd4:	ldp	x29, x30, [sp], #48
  40bcd8:	ret
  40bcdc:	nop

000000000040bce0 <rtnl_routedump_req@@Base>:
  40bce0:	stp	x29, x30, [sp, #-192]!
  40bce4:	mov	x29, sp
  40bce8:	stp	x19, x20, [sp, #16]
  40bcec:	mov	x19, x0
  40bcf0:	mov	x0, #0x1c                  	// #28
  40bcf4:	stp	xzr, xzr, [sp, #40]
  40bcf8:	movk	x0, #0x1a, lsl #32
  40bcfc:	ldr	w3, [x19, #28]
  40bd00:	strb	w1, [sp, #48]
  40bd04:	movk	x0, #0x301, lsl #48
  40bd08:	add	w1, w3, #0x1
  40bd0c:	str	x0, [sp, #32]
  40bd10:	str	w1, [sp, #40]
  40bd14:	add	x20, sp, #0x20
  40bd18:	dup	v0.2s, w1
  40bd1c:	stp	xzr, xzr, [sp, #56]
  40bd20:	stp	xzr, xzr, [sp, #72]
  40bd24:	stp	xzr, xzr, [sp, #88]
  40bd28:	stp	xzr, xzr, [sp, #104]
  40bd2c:	stp	xzr, xzr, [sp, #120]
  40bd30:	stp	xzr, xzr, [sp, #136]
  40bd34:	stp	xzr, xzr, [sp, #152]
  40bd38:	stp	xzr, xzr, [sp, #168]
  40bd3c:	str	wzr, [sp, #184]
  40bd40:	stur	d0, [x19, #28]
  40bd44:	cbz	x2, 40bd58 <rtnl_routedump_req@@Base+0x78>
  40bd48:	mov	x0, x20
  40bd4c:	mov	w1, #0x9c                  	// #156
  40bd50:	blr	x2
  40bd54:	cbnz	w0, 40bd6c <rtnl_routedump_req@@Base+0x8c>
  40bd58:	ldr	w0, [x19]
  40bd5c:	mov	x1, x20
  40bd60:	mov	w3, #0x0                   	// #0
  40bd64:	mov	x2, #0x9c                  	// #156
  40bd68:	bl	405050 <send@plt>
  40bd6c:	ldp	x19, x20, [sp, #16]
  40bd70:	ldp	x29, x30, [sp], #192
  40bd74:	ret

000000000040bd78 <rtnl_ruledump_req@@Base>:
  40bd78:	mov	x5, x0
  40bd7c:	stp	x29, x30, [sp, #-48]!
  40bd80:	mov	x7, #0x1c                  	// #28
  40bd84:	mov	x29, sp
  40bd88:	ldr	w4, [x5, #28]
  40bd8c:	mov	w6, w1
  40bd90:	ldr	w0, [x0]
  40bd94:	movk	x7, #0x22, lsl #32
  40bd98:	add	w4, w4, #0x1
  40bd9c:	movk	x7, #0x301, lsl #48
  40bda0:	stp	xzr, xzr, [sp, #24]
  40bda4:	add	x1, sp, #0x10
  40bda8:	dup	v0.2s, w4
  40bdac:	mov	w3, #0x0                   	// #0
  40bdb0:	mov	x2, #0x1c                  	// #28
  40bdb4:	str	x7, [sp, #16]
  40bdb8:	str	w4, [sp, #24]
  40bdbc:	stur	d0, [x5, #28]
  40bdc0:	strb	w6, [sp, #32]
  40bdc4:	str	wzr, [sp, #40]
  40bdc8:	bl	405050 <send@plt>
  40bdcc:	ldp	x29, x30, [sp], #48
  40bdd0:	ret
  40bdd4:	nop

000000000040bdd8 <rtnl_neighdump_req@@Base>:
  40bdd8:	stp	x29, x30, [sp, #-336]!
  40bddc:	mov	x29, sp
  40bde0:	stp	x19, x20, [sp, #16]
  40bde4:	mov	x19, x0
  40bde8:	mov	x20, x2
  40bdec:	stp	x21, x22, [sp, #32]
  40bdf0:	add	x22, sp, #0x30
  40bdf4:	mov	w21, w1
  40bdf8:	mov	x0, x22
  40bdfc:	mov	x2, #0x11c                 	// #284
  40be00:	mov	w1, #0x0                   	// #0
  40be04:	bl	404ec0 <memset@plt>
  40be08:	ldr	w3, [x19, #28]
  40be0c:	mov	x0, #0x1c                  	// #28
  40be10:	movk	x0, #0x1e, lsl #32
  40be14:	strb	w21, [sp, #64]
  40be18:	add	w3, w3, #0x1
  40be1c:	movk	x0, #0x301, lsl #48
  40be20:	str	x0, [sp, #48]
  40be24:	dup	v0.2s, w3
  40be28:	str	w3, [sp, #56]
  40be2c:	stur	d0, [x19, #28]
  40be30:	cbz	x20, 40be44 <rtnl_neighdump_req@@Base+0x6c>
  40be34:	mov	x0, x22
  40be38:	mov	w1, #0x11c                 	// #284
  40be3c:	blr	x20
  40be40:	cbnz	w0, 40be58 <rtnl_neighdump_req@@Base+0x80>
  40be44:	ldr	w0, [x19]
  40be48:	mov	x1, x22
  40be4c:	mov	w3, #0x0                   	// #0
  40be50:	mov	x2, #0x11c                 	// #284
  40be54:	bl	405050 <send@plt>
  40be58:	ldp	x19, x20, [sp, #16]
  40be5c:	ldp	x21, x22, [sp, #32]
  40be60:	ldp	x29, x30, [sp], #336
  40be64:	ret

000000000040be68 <rtnl_neightbldump_req@@Base>:
  40be68:	mov	x5, x0
  40be6c:	stp	x29, x30, [sp, #-48]!
  40be70:	mov	x7, #0x14                  	// #20
  40be74:	mov	x29, sp
  40be78:	ldr	w4, [x5, #28]
  40be7c:	mov	w6, w1
  40be80:	ldr	w0, [x0]
  40be84:	movk	x7, #0x42, lsl #32
  40be88:	add	w4, w4, #0x1
  40be8c:	movk	x7, #0x301, lsl #48
  40be90:	stur	xzr, [sp, #36]
  40be94:	add	x1, sp, #0x18
  40be98:	dup	v0.2s, w4
  40be9c:	mov	w3, #0x0                   	// #0
  40bea0:	mov	x2, #0x14                  	// #20
  40bea4:	str	x7, [sp, #24]
  40bea8:	str	w4, [sp, #32]
  40beac:	strb	w6, [sp, #40]
  40beb0:	stur	d0, [x5, #28]
  40beb4:	bl	405050 <send@plt>
  40beb8:	ldp	x29, x30, [sp], #48
  40bebc:	ret

000000000040bec0 <rtnl_mdbdump_req@@Base>:
  40bec0:	mov	x5, x0
  40bec4:	stp	x29, x30, [sp, #-48]!
  40bec8:	mov	x7, #0x18                  	// #24
  40becc:	mov	x29, sp
  40bed0:	ldr	w4, [x5, #28]
  40bed4:	mov	w6, w1
  40bed8:	ldr	w0, [x0]
  40bedc:	movk	x7, #0x56, lsl #32
  40bee0:	add	w4, w4, #0x1
  40bee4:	movk	x7, #0x301, lsl #48
  40bee8:	stp	xzr, xzr, [sp, #32]
  40beec:	mov	x2, #0x18                  	// #24
  40bef0:	dup	v0.2s, w4
  40bef4:	add	x1, sp, x2
  40bef8:	mov	w3, #0x0                   	// #0
  40befc:	str	x7, [sp, #24]
  40bf00:	str	w4, [sp, #32]
  40bf04:	stur	d0, [x5, #28]
  40bf08:	strb	w6, [sp, #40]
  40bf0c:	bl	405050 <send@plt>
  40bf10:	ldp	x29, x30, [sp], #48
  40bf14:	ret

000000000040bf18 <rtnl_netconfdump_req@@Base>:
  40bf18:	mov	x5, x0
  40bf1c:	stp	x29, x30, [sp, #-48]!
  40bf20:	mov	x7, #0x14                  	// #20
  40bf24:	mov	x29, sp
  40bf28:	ldr	w4, [x5, #28]
  40bf2c:	mov	w6, w1
  40bf30:	ldr	w0, [x0]
  40bf34:	movk	x7, #0x52, lsl #32
  40bf38:	add	w4, w4, #0x1
  40bf3c:	movk	x7, #0x301, lsl #48
  40bf40:	stur	xzr, [sp, #36]
  40bf44:	add	x1, sp, #0x18
  40bf48:	dup	v0.2s, w4
  40bf4c:	mov	w3, #0x0                   	// #0
  40bf50:	mov	x2, #0x14                  	// #20
  40bf54:	str	x7, [sp, #24]
  40bf58:	str	w4, [sp, #32]
  40bf5c:	strb	w6, [sp, #40]
  40bf60:	stur	d0, [x5, #28]
  40bf64:	bl	405050 <send@plt>
  40bf68:	ldp	x29, x30, [sp], #48
  40bf6c:	ret

000000000040bf70 <rtnl_nsiddump_req_filter_fn@@Base>:
  40bf70:	sub	sp, sp, #0x450
  40bf74:	stp	x29, x30, [sp]
  40bf78:	mov	x29, sp
  40bf7c:	stp	x19, x20, [sp, #16]
  40bf80:	mov	x19, x0
  40bf84:	mov	x20, x2
  40bf88:	stp	x21, x22, [sp, #32]
  40bf8c:	add	x22, sp, #0x38
  40bf90:	mov	w21, w1
  40bf94:	mov	x0, x22
  40bf98:	mov	x2, #0x414                 	// #1044
  40bf9c:	mov	w1, #0x0                   	// #0
  40bfa0:	bl	404ec0 <memset@plt>
  40bfa4:	ldr	w3, [x19, #28]
  40bfa8:	mov	x0, #0x14                  	// #20
  40bfac:	movk	x0, #0x5a, lsl #32
  40bfb0:	strb	w21, [sp, #72]
  40bfb4:	add	w3, w3, #0x1
  40bfb8:	movk	x0, #0x301, lsl #48
  40bfbc:	str	x0, [sp, #56]
  40bfc0:	dup	v0.2s, w3
  40bfc4:	str	w3, [sp, #64]
  40bfc8:	stur	d0, [x19, #28]
  40bfcc:	cbz	x20, 40c008 <rtnl_nsiddump_req_filter_fn@@Base+0x98>
  40bfd0:	mov	x0, x22
  40bfd4:	mov	w1, #0x414                 	// #1044
  40bfd8:	blr	x20
  40bfdc:	cbnz	w0, 40bff4 <rtnl_nsiddump_req_filter_fn@@Base+0x84>
  40bfe0:	ldr	w0, [x19]
  40bfe4:	mov	x1, x22
  40bfe8:	ldr	w2, [sp, #56]
  40bfec:	mov	w3, #0x0                   	// #0
  40bff0:	bl	405050 <send@plt>
  40bff4:	ldp	x29, x30, [sp]
  40bff8:	ldp	x19, x20, [sp, #16]
  40bffc:	ldp	x21, x22, [sp, #32]
  40c000:	add	sp, sp, #0x450
  40c004:	ret
  40c008:	mov	w0, #0xffffffea            	// #-22
  40c00c:	b	40bff4 <rtnl_nsiddump_req_filter_fn@@Base+0x84>

000000000040c010 <rtnl_linkdump_req_filter@@Base>:
  40c010:	stp	x29, x30, [sp, #-64]!
  40c014:	cmp	w1, #0x0
  40c018:	mov	x5, x0
  40c01c:	mov	x29, sp
  40c020:	ldr	w6, [x0, #28]
  40c024:	ccmp	w1, #0x7, #0x4, ne  // ne = any
  40c028:	ldr	w0, [x0]
  40c02c:	and	w4, w1, #0xff
  40c030:	add	w6, w6, #0x1
  40c034:	b.eq	40c078 <rtnl_linkdump_req_filter@@Base+0x68>  // b.none
  40c038:	dup	v0.2s, w6
  40c03c:	mov	x7, #0x20                  	// #32
  40c040:	movk	x7, #0x12, lsl #32
  40c044:	stp	xzr, xzr, [sp, #32]
  40c048:	movk	x7, #0x301, lsl #48
  40c04c:	add	x1, sp, #0x18
  40c050:	mov	w3, #0x0                   	// #0
  40c054:	mov	x2, #0x20                  	// #32
  40c058:	str	x7, [sp, #24]
  40c05c:	stur	d0, [x5, #28]
  40c060:	str	w6, [sp, #32]
  40c064:	strb	w4, [sp, #40]
  40c068:	str	xzr, [sp, #48]
  40c06c:	bl	405050 <send@plt>
  40c070:	ldp	x29, x30, [sp], #64
  40c074:	ret
  40c078:	dup	v0.2s, w6
  40c07c:	mov	x9, #0x28                  	// #40
  40c080:	mov	w7, w2
  40c084:	movk	x9, #0x12, lsl #32
  40c088:	mov	w8, #0x8                   	// #8
  40c08c:	movk	x9, #0x301, lsl #48
  40c090:	movk	w8, #0x1d, lsl #16
  40c094:	stp	xzr, xzr, [sp, #32]
  40c098:	add	x1, sp, #0x18
  40c09c:	mov	w3, #0x0                   	// #0
  40c0a0:	mov	x2, #0x28                  	// #40
  40c0a4:	str	x9, [sp, #24]
  40c0a8:	stur	d0, [x5, #28]
  40c0ac:	str	w6, [sp, #32]
  40c0b0:	strb	w4, [sp, #40]
  40c0b4:	str	xzr, [sp, #48]
  40c0b8:	stp	w8, w7, [sp, #56]
  40c0bc:	bl	405050 <send@plt>
  40c0c0:	ldp	x29, x30, [sp], #64
  40c0c4:	ret

000000000040c0c8 <rtnl_linkdump_req@@Base>:
  40c0c8:	stp	x29, x30, [sp, #-48]!
  40c0cc:	mov	x29, sp
  40c0d0:	cbz	w1, 40c128 <rtnl_linkdump_req@@Base+0x60>
  40c0d4:	mov	x4, x0
  40c0d8:	mov	x7, #0x20                  	// #32
  40c0dc:	ldr	w0, [x0]
  40c0e0:	mov	w5, w1
  40c0e4:	movk	x7, #0x12, lsl #32
  40c0e8:	stp	xzr, xzr, [sp, #24]
  40c0ec:	ldr	w6, [x4, #28]
  40c0f0:	movk	x7, #0x301, lsl #48
  40c0f4:	add	x1, sp, #0x10
  40c0f8:	add	w6, w6, #0x1
  40c0fc:	mov	w3, #0x0                   	// #0
  40c100:	mov	x2, #0x20                  	// #32
  40c104:	str	x7, [sp, #16]
  40c108:	dup	v0.2s, w6
  40c10c:	str	w6, [sp, #24]
  40c110:	strb	w5, [sp, #32]
  40c114:	str	xzr, [sp, #40]
  40c118:	stur	d0, [x4, #28]
  40c11c:	bl	405050 <send@plt>
  40c120:	ldp	x29, x30, [sp], #48
  40c124:	ret
  40c128:	mov	w2, #0x1                   	// #1
  40c12c:	bl	40c010 <rtnl_linkdump_req_filter@@Base>
  40c130:	ldp	x29, x30, [sp], #48
  40c134:	ret

000000000040c138 <rtnl_linkdump_req_filter_fn@@Base>:
  40c138:	sub	sp, sp, #0x460
  40c13c:	cmp	w1, #0x0
  40c140:	ccmp	w1, #0x11, #0x4, ne  // ne = any
  40c144:	stp	x29, x30, [sp]
  40c148:	mov	x29, sp
  40c14c:	stp	x19, x20, [sp, #16]
  40c150:	mov	x20, x0
  40c154:	and	w19, w1, #0xff
  40c158:	stp	x21, x22, [sp, #32]
  40c15c:	ldr	w21, [x0, #28]
  40c160:	add	w21, w21, #0x1
  40c164:	b.ne	40c1d0 <rtnl_linkdump_req_filter_fn@@Base+0x98>  // b.any
  40c168:	str	x23, [sp, #48]
  40c16c:	add	x23, sp, #0x40
  40c170:	mov	x22, x2
  40c174:	mov	x0, x23
  40c178:	mov	x2, #0x420                 	// #1056
  40c17c:	mov	w1, #0x0                   	// #0
  40c180:	bl	404ec0 <memset@plt>
  40c184:	str	w21, [sp, #72]
  40c188:	dup	v0.2s, w21
  40c18c:	mov	x0, #0x20                  	// #32
  40c190:	movk	x0, #0x12, lsl #32
  40c194:	strb	w19, [sp, #80]
  40c198:	movk	x0, #0x301, lsl #48
  40c19c:	str	x0, [sp, #64]
  40c1a0:	stur	d0, [x20, #28]
  40c1a4:	cbz	x22, 40c24c <rtnl_linkdump_req_filter_fn@@Base+0x114>
  40c1a8:	mov	x0, x23
  40c1ac:	mov	w1, #0x420                 	// #1056
  40c1b0:	blr	x22
  40c1b4:	cbz	w0, 40c220 <rtnl_linkdump_req_filter_fn@@Base+0xe8>
  40c1b8:	ldp	x29, x30, [sp]
  40c1bc:	ldp	x19, x20, [sp, #16]
  40c1c0:	ldp	x21, x22, [sp, #32]
  40c1c4:	ldr	x23, [sp, #48]
  40c1c8:	add	sp, sp, #0x460
  40c1cc:	ret
  40c1d0:	dup	v0.2s, w21
  40c1d4:	ldr	w0, [x0]
  40c1d8:	mov	x4, #0x20                  	// #32
  40c1dc:	stp	xzr, xzr, [sp, #72]
  40c1e0:	movk	x4, #0x12, lsl #32
  40c1e4:	movk	x4, #0x301, lsl #48
  40c1e8:	add	x1, sp, #0x40
  40c1ec:	mov	w3, #0x0                   	// #0
  40c1f0:	mov	x2, #0x20                  	// #32
  40c1f4:	stur	d0, [x20, #28]
  40c1f8:	str	x4, [sp, #64]
  40c1fc:	str	w21, [sp, #72]
  40c200:	strb	w19, [sp, #80]
  40c204:	str	xzr, [sp, #88]
  40c208:	bl	405050 <send@plt>
  40c20c:	ldp	x29, x30, [sp]
  40c210:	ldp	x19, x20, [sp, #16]
  40c214:	ldp	x21, x22, [sp, #32]
  40c218:	add	sp, sp, #0x460
  40c21c:	ret
  40c220:	ldr	w2, [sp, #64]
  40c224:	mov	x1, x23
  40c228:	ldr	w0, [x20]
  40c22c:	mov	w3, #0x0                   	// #0
  40c230:	bl	405050 <send@plt>
  40c234:	ldp	x29, x30, [sp]
  40c238:	ldp	x19, x20, [sp, #16]
  40c23c:	ldp	x21, x22, [sp, #32]
  40c240:	ldr	x23, [sp, #48]
  40c244:	add	sp, sp, #0x460
  40c248:	ret
  40c24c:	mov	w0, #0xffffffea            	// #-22
  40c250:	ldp	x29, x30, [sp]
  40c254:	ldp	x19, x20, [sp, #16]
  40c258:	ldp	x21, x22, [sp, #32]
  40c25c:	ldr	x23, [sp, #48]
  40c260:	add	sp, sp, #0x460
  40c264:	ret

000000000040c268 <rtnl_fdb_linkdump_req_filter_fn@@Base>:
  40c268:	stp	x29, x30, [sp, #-192]!
  40c26c:	mov	x5, #0x20                  	// #32
  40c270:	movk	x5, #0x1e, lsl #32
  40c274:	mov	x29, sp
  40c278:	stp	x19, x20, [sp, #16]
  40c27c:	mov	x19, x0
  40c280:	movk	x5, #0x301, lsl #48
  40c284:	stp	xzr, xzr, [sp, #40]
  40c288:	mov	w4, #0x7                   	// #7
  40c28c:	ldr	w2, [x19, #28]
  40c290:	str	x5, [sp, #32]
  40c294:	add	x20, sp, #0x20
  40c298:	add	w2, w2, #0x1
  40c29c:	str	w2, [sp, #40]
  40c2a0:	strb	w4, [sp, #48]
  40c2a4:	mov	x3, x1
  40c2a8:	dup	v0.2s, w2
  40c2ac:	stp	xzr, xzr, [sp, #56]
  40c2b0:	mov	x0, x20
  40c2b4:	stp	xzr, xzr, [sp, #72]
  40c2b8:	mov	w1, #0xa0                  	// #160
  40c2bc:	stp	xzr, xzr, [sp, #88]
  40c2c0:	stp	xzr, xzr, [sp, #104]
  40c2c4:	stp	xzr, xzr, [sp, #120]
  40c2c8:	stp	xzr, xzr, [sp, #136]
  40c2cc:	stp	xzr, xzr, [sp, #152]
  40c2d0:	stp	xzr, xzr, [sp, #168]
  40c2d4:	str	xzr, [sp, #184]
  40c2d8:	stur	d0, [x19, #28]
  40c2dc:	blr	x3
  40c2e0:	cbnz	w0, 40c2f8 <rtnl_fdb_linkdump_req_filter_fn@@Base+0x90>
  40c2e4:	ldr	w0, [x19]
  40c2e8:	mov	x1, x20
  40c2ec:	mov	w3, #0x0                   	// #0
  40c2f0:	mov	x2, #0xa0                  	// #160
  40c2f4:	bl	405050 <send@plt>
  40c2f8:	ldp	x19, x20, [sp, #16]
  40c2fc:	ldp	x29, x30, [sp], #192
  40c300:	ret
  40c304:	nop

000000000040c308 <rtnl_statsdump_req_filter@@Base>:
  40c308:	mov	x5, x0
  40c30c:	stp	x29, x30, [sp, #-48]!
  40c310:	mov	x8, #0x1c                  	// #28
  40c314:	mov	x29, sp
  40c318:	ldr	w4, [x5, #28]
  40c31c:	mov	w7, w1
  40c320:	ldr	w0, [x0]
  40c324:	mov	w6, w2
  40c328:	add	w4, w4, #0x1
  40c32c:	movk	x8, #0x5e, lsl #32
  40c330:	movk	x8, #0x301, lsl #48
  40c334:	stp	xzr, xzr, [sp, #24]
  40c338:	dup	v0.2s, w4
  40c33c:	add	x1, sp, #0x10
  40c340:	mov	w3, #0x0                   	// #0
  40c344:	mov	x2, #0x1c                  	// #28
  40c348:	str	x8, [sp, #16]
  40c34c:	str	w4, [sp, #24]
  40c350:	stur	d0, [x5, #28]
  40c354:	strb	w7, [sp, #32]
  40c358:	str	w6, [sp, #40]
  40c35c:	bl	405050 <send@plt>
  40c360:	ldp	x29, x30, [sp], #48
  40c364:	ret

000000000040c368 <rtnl_send@@Base>:
  40c368:	stp	x29, x30, [sp, #-16]!
  40c36c:	sxtw	x2, w2
  40c370:	mov	w3, #0x0                   	// #0
  40c374:	mov	x29, sp
  40c378:	ldr	w0, [x0]
  40c37c:	bl	405050 <send@plt>
  40c380:	ldp	x29, x30, [sp], #16
  40c384:	ret

000000000040c388 <rtnl_send_check@@Base>:
  40c388:	sub	sp, sp, #0x420
  40c38c:	sxtw	x2, w2
  40c390:	mov	w3, #0x0                   	// #0
  40c394:	stp	x29, x30, [sp]
  40c398:	mov	x29, sp
  40c39c:	str	x19, [sp, #16]
  40c3a0:	mov	x19, x0
  40c3a4:	ldr	w0, [x0]
  40c3a8:	bl	405050 <send@plt>
  40c3ac:	tbnz	w0, #31, 40c418 <rtnl_send_check@@Base+0x90>
  40c3b0:	ldr	w0, [x19]
  40c3b4:	add	x19, sp, #0x20
  40c3b8:	mov	x1, x19
  40c3bc:	mov	w3, #0x42                  	// #66
  40c3c0:	mov	x2, #0x400                 	// #1024
  40c3c4:	bl	404f80 <recv@plt>
  40c3c8:	mov	w1, w0
  40c3cc:	tbnz	w0, #31, 40c428 <rtnl_send_check@@Base+0xa0>
  40c3d0:	cmp	w0, #0xf
  40c3d4:	b.gt	40c400 <rtnl_send_check@@Base+0x78>
  40c3d8:	b	40c414 <rtnl_send_check@@Base+0x8c>
  40c3dc:	cmp	w2, w1
  40c3e0:	sub	w1, w1, w0
  40c3e4:	b.hi	40c414 <rtnl_send_check@@Base+0x8c>  // b.pmore
  40c3e8:	ldrh	w3, [x19, #4]
  40c3ec:	cmp	w3, #0x2
  40c3f0:	b.eq	40c448 <rtnl_send_check@@Base+0xc0>  // b.none
  40c3f4:	cmp	w1, #0xf
  40c3f8:	add	x19, x19, w0, uxtw
  40c3fc:	b.le	40c414 <rtnl_send_check@@Base+0x8c>
  40c400:	ldr	w2, [x19]
  40c404:	add	w0, w2, #0x3
  40c408:	cmp	w2, #0xf
  40c40c:	and	w0, w0, #0xfffffffc
  40c410:	b.hi	40c3dc <rtnl_send_check@@Base+0x54>  // b.pmore
  40c414:	mov	w0, #0x0                   	// #0
  40c418:	ldp	x29, x30, [sp]
  40c41c:	ldr	x19, [sp, #16]
  40c420:	add	sp, sp, #0x420
  40c424:	ret
  40c428:	bl	4051b0 <__errno_location@plt>
  40c42c:	ldr	w0, [x0]
  40c430:	ldp	x29, x30, [sp]
  40c434:	cmp	w0, #0xb
  40c438:	csetm	w0, ne  // ne = any
  40c43c:	ldr	x19, [sp, #16]
  40c440:	add	sp, sp, #0x420
  40c444:	ret
  40c448:	cmp	w2, #0x23
  40c44c:	b.ls	40c46c <rtnl_send_check@@Base+0xe4>  // b.plast
  40c450:	bl	4051b0 <__errno_location@plt>
  40c454:	mov	x2, x0
  40c458:	ldr	w1, [x19, #16]
  40c45c:	mov	w0, #0xffffffff            	// #-1
  40c460:	neg	w1, w1
  40c464:	str	w1, [x2]
  40c468:	b	40c418 <rtnl_send_check@@Base+0x90>
  40c46c:	adrp	x3, 421000 <_IO_stdin_used@@Base+0x13490>
  40c470:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x490>
  40c474:	mov	x2, #0x10                  	// #16
  40c478:	add	x0, x0, #0xaa0
  40c47c:	ldr	x3, [x3, #3992]
  40c480:	mov	x1, #0x1                   	// #1
  40c484:	ldr	x3, [x3]
  40c488:	bl	405090 <fwrite@plt>
  40c48c:	mov	w0, #0xffffffff            	// #-1
  40c490:	b	40c418 <rtnl_send_check@@Base+0x90>
  40c494:	nop

000000000040c498 <rtnl_dump_request@@Base>:
  40c498:	mov	x4, x0
  40c49c:	stp	x29, x30, [sp, #-144]!
  40c4a0:	mov	w14, w1
  40c4a4:	mov	x29, sp
  40c4a8:	ldr	w5, [x4, #28]
  40c4ac:	mov	x11, x2
  40c4b0:	ldr	w0, [x0]
  40c4b4:	add	w15, w3, #0x10
  40c4b8:	add	w5, w5, #0x1
  40c4bc:	add	x8, sp, #0x28
  40c4c0:	add	x7, sp, #0x18
  40c4c4:	add	x6, sp, #0x38
  40c4c8:	dup	v0.2s, w5
  40c4cc:	sxtw	x3, w3
  40c4d0:	mov	w13, #0x301                 	// #769
  40c4d4:	mov	w16, #0x10                  	// #16
  40c4d8:	mov	x12, #0x10                  	// #16
  40c4dc:	mov	w10, #0xc                   	// #12
  40c4e0:	mov	x9, #0x2                   	// #2
  40c4e4:	str	xzr, [sp, #24]
  40c4e8:	stp	xzr, xzr, [sp, #96]
  40c4ec:	add	x1, sp, #0x58
  40c4f0:	mov	w2, #0x0                   	// #0
  40c4f4:	stp	xzr, xzr, [sp, #112]
  40c4f8:	strh	w16, [sp, #24]
  40c4fc:	stur	d0, [x4, #28]
  40c500:	str	wzr, [sp, #32]
  40c504:	str	w15, [sp, #40]
  40c508:	strh	w14, [sp, #44]
  40c50c:	strh	w13, [sp, #46]
  40c510:	stp	w5, wzr, [sp, #48]
  40c514:	str	x8, [sp, #56]
  40c518:	stp	x12, x11, [sp, #64]
  40c51c:	str	x3, [sp, #80]
  40c520:	str	x7, [sp, #88]
  40c524:	str	w10, [sp, #96]
  40c528:	str	x6, [sp, #104]
  40c52c:	str	x9, [sp, #112]
  40c530:	stp	xzr, xzr, [sp, #128]
  40c534:	bl	404ee0 <sendmsg@plt>
  40c538:	ldp	x29, x30, [sp], #144
  40c53c:	ret

000000000040c540 <rtnl_dump_request_n@@Base>:
  40c540:	mov	x4, x0
  40c544:	stp	x29, x30, [sp, #-112]!
  40c548:	mov	x3, x1
  40c54c:	mov	x29, sp
  40c550:	ldr	w5, [x4, #28]
  40c554:	mov	w0, #0x301                 	// #769
  40c558:	strh	w0, [x3, #6]
  40c55c:	add	x7, sp, #0x18
  40c560:	add	w5, w5, #0x1
  40c564:	ldr	w0, [x4]
  40c568:	str	wzr, [x3, #12]
  40c56c:	add	x6, sp, #0x28
  40c570:	dup	v0.2s, w5
  40c574:	ldr	w10, [x3]
  40c578:	mov	w11, #0x10                  	// #16
  40c57c:	mov	w9, #0xc                   	// #12
  40c580:	mov	x8, #0x1                   	// #1
  40c584:	str	xzr, [sp, #24]
  40c588:	stp	xzr, xzr, [sp, #64]
  40c58c:	add	x1, sp, #0x38
  40c590:	mov	w2, #0x0                   	// #0
  40c594:	stur	d0, [x4, #28]
  40c598:	str	w5, [x3, #8]
  40c59c:	stp	xzr, xzr, [sp, #80]
  40c5a0:	strh	w11, [sp, #24]
  40c5a4:	str	wzr, [sp, #32]
  40c5a8:	stp	x3, x10, [sp, #40]
  40c5ac:	str	x7, [sp, #56]
  40c5b0:	str	w9, [sp, #64]
  40c5b4:	str	x6, [sp, #72]
  40c5b8:	str	x8, [sp, #80]
  40c5bc:	stp	xzr, xzr, [sp, #96]
  40c5c0:	bl	404ee0 <sendmsg@plt>
  40c5c4:	ldp	x29, x30, [sp], #112
  40c5c8:	ret
  40c5cc:	nop

000000000040c5d0 <rtnl_dump_filter_nc@@Base>:
  40c5d0:	stp	x29, x30, [sp, #-272]!
  40c5d4:	mov	x4, #0x1                   	// #1
  40c5d8:	mov	w5, #0xc                   	// #12
  40c5dc:	mov	x29, sp
  40c5e0:	stp	x21, x22, [sp, #32]
  40c5e4:	adrp	x21, 421000 <_IO_stdin_used@@Base+0x13490>
  40c5e8:	mov	w22, #0x0                   	// #0
  40c5ec:	stp	x23, x24, [sp, #48]
  40c5f0:	add	x23, sp, #0xd8
  40c5f4:	stp	x25, x26, [sp, #64]
  40c5f8:	add	x25, sp, #0x80
  40c5fc:	stp	x27, x28, [sp, #80]
  40c600:	mov	x27, x0
  40c604:	ldr	x0, [x21, #3992]
  40c608:	stp	xzr, xzr, [sp, #224]
  40c60c:	stp	xzr, xzr, [sp, #240]
  40c610:	stp	x19, x20, [sp, #16]
  40c614:	mov	x20, x1
  40c618:	add	x1, sp, #0x88
  40c61c:	str	x0, [sp, #120]
  40c620:	add	x0, sp, #0x98
  40c624:	stp	x20, x2, [sp, #168]
  40c628:	strh	w3, [sp, #184]
  40c62c:	stp	xzr, xzr, [sp, #192]
  40c630:	strh	wzr, [sp, #208]
  40c634:	str	x1, [sp, #216]
  40c638:	str	w5, [sp, #224]
  40c63c:	str	x0, [sp, #232]
  40c640:	str	x4, [sp, #240]
  40c644:	stp	xzr, xzr, [sp, #256]
  40c648:	ldr	w0, [x27]
  40c64c:	mov	x2, x25
  40c650:	mov	x1, x23
  40c654:	bl	40b3d0 <jsonw_null_field@@Base+0x100>
  40c658:	mov	w28, w0
  40c65c:	tbnz	w0, #31, 40c944 <rtnl_dump_filter_nc@@Base+0x374>
  40c660:	ldr	x3, [x27, #40]
  40c664:	ldr	x19, [sp, #128]
  40c668:	cbz	x3, 40c684 <rtnl_dump_filter_nc@@Base+0xb4>
  40c66c:	add	w2, w0, #0x3
  40c670:	mov	x1, #0x1                   	// #1
  40c674:	mov	x0, x19
  40c678:	and	x2, x2, #0xfffffffc
  40c67c:	bl	405090 <fwrite@plt>
  40c680:	ldr	x19, [sp, #128]
  40c684:	cbz	x20, 40c8f0 <rtnl_dump_filter_nc@@Base+0x320>
  40c688:	add	x24, sp, #0xc0
  40c68c:	mov	x6, x20
  40c690:	str	wzr, [sp, #116]
  40c694:	nop
  40c698:	cmp	w28, #0xf
  40c69c:	mov	w26, w28
  40c6a0:	b.gt	40c6c0 <rtnl_dump_filter_nc@@Base+0xf0>
  40c6a4:	b	40c774 <rtnl_dump_filter_nc@@Base+0x1a4>
  40c6a8:	add	w3, w3, #0x3
  40c6ac:	and	w3, w3, #0xfffffffc
  40c6b0:	sub	w26, w26, w3
  40c6b4:	cmp	w26, #0xf
  40c6b8:	add	x19, x19, w3, uxtw
  40c6bc:	b.le	40c770 <rtnl_dump_filter_nc@@Base+0x1a0>
  40c6c0:	ldr	w3, [x19]
  40c6c4:	cmp	w3, #0xf
  40c6c8:	b.ls	40c770 <rtnl_dump_filter_nc@@Base+0x1a0>  // b.plast
  40c6cc:	cmp	w26, w3
  40c6d0:	b.cc	40c770 <rtnl_dump_filter_nc@@Base+0x1a0>  // b.lo, b.ul, b.last
  40c6d4:	ldrh	w5, [x19, #6]
  40c6d8:	ldurh	w0, [x24, #-8]
  40c6dc:	ldr	w1, [sp, #140]
  40c6e0:	bic	w0, w5, w0
  40c6e4:	and	w0, w0, #0xffff
  40c6e8:	strh	w0, [x19, #6]
  40c6ec:	cbnz	w1, 40c6a8 <rtnl_dump_filter_nc@@Base+0xd8>
  40c6f0:	ldr	w5, [x19, #12]
  40c6f4:	ldr	w1, [x27, #8]
  40c6f8:	cmp	w5, w1
  40c6fc:	b.ne	40c6a8 <rtnl_dump_filter_nc@@Base+0xd8>  // b.any
  40c700:	ldr	w5, [x19, #8]
  40c704:	ldr	w1, [x27, #32]
  40c708:	cmp	w5, w1
  40c70c:	b.ne	40c6a8 <rtnl_dump_filter_nc@@Base+0xd8>  // b.any
  40c710:	ldrh	w1, [x19, #4]
  40c714:	tst	x0, #0x10
  40c718:	csinc	w22, w22, wzr, eq  // eq = none
  40c71c:	cmp	w1, #0x3
  40c720:	b.eq	40c784 <rtnl_dump_filter_nc@@Base+0x1b4>  // b.none
  40c724:	cmp	w1, #0x2
  40c728:	b.eq	40c7bc <rtnl_dump_filter_nc@@Base+0x1ec>  // b.none
  40c72c:	ldr	x0, [x27, #40]
  40c730:	cbnz	x0, 40c6a8 <rtnl_dump_filter_nc@@Base+0xd8>
  40c734:	ldur	x1, [x24, #-16]
  40c738:	mov	x0, x19
  40c73c:	str	x6, [sp, #104]
  40c740:	blr	x6
  40c744:	mov	w21, w0
  40c748:	tbnz	w0, #31, 40c8b8 <rtnl_dump_filter_nc@@Base+0x2e8>
  40c74c:	ldr	w3, [x19]
  40c750:	ldr	x6, [sp, #104]
  40c754:	add	w3, w3, #0x3
  40c758:	and	w3, w3, #0xfffffffc
  40c75c:	sub	w26, w26, w3
  40c760:	cmp	w26, #0xf
  40c764:	add	x19, x19, w3, uxtw
  40c768:	b.gt	40c6c0 <rtnl_dump_filter_nc@@Base+0xf0>
  40c76c:	nop
  40c770:	ldr	x19, [sp, #128]
  40c774:	ldr	x6, [x24]
  40c778:	cbz	x6, 40c814 <rtnl_dump_filter_nc@@Base+0x244>
  40c77c:	add	x24, x24, #0x18
  40c780:	b	40c698 <rtnl_dump_filter_nc@@Base+0xc8>
  40c784:	ldr	w26, [x19, #16]
  40c788:	cmp	w3, #0x13
  40c78c:	b.ls	40c984 <rtnl_dump_filter_nc@@Base+0x3b4>  // b.plast
  40c790:	mov	x0, x19
  40c794:	tbnz	w26, #31, 40c854 <rtnl_dump_filter_nc@@Base+0x284>
  40c798:	mov	x1, #0x0                   	// #0
  40c79c:	bl	40b490 <nl_dump_ext_ack@@Base>
  40c7a0:	ldr	x6, [x24]
  40c7a4:	cbz	x6, 40c94c <rtnl_dump_filter_nc@@Base+0x37c>
  40c7a8:	mov	w0, #0x1                   	// #1
  40c7ac:	add	x24, x24, #0x18
  40c7b0:	str	w0, [sp, #116]
  40c7b4:	ldr	x19, [sp, #128]
  40c7b8:	b	40c698 <rtnl_dump_filter_nc@@Base+0xc8>
  40c7bc:	cmp	w3, #0x23
  40c7c0:	b.ls	40c894 <rtnl_dump_filter_nc@@Base+0x2c4>  // b.plast
  40c7c4:	bl	4051b0 <__errno_location@plt>
  40c7c8:	ldr	w1, [x19, #16]
  40c7cc:	neg	w2, w1
  40c7d0:	str	w2, [x0]
  40c7d4:	ldr	w0, [x27, #36]
  40c7d8:	cmp	w0, #0x4
  40c7dc:	b.eq	40c8e0 <rtnl_dump_filter_nc@@Base+0x310>  // b.none
  40c7e0:	ldr	w0, [x27, #48]
  40c7e4:	tbz	w0, #1, 40c884 <rtnl_dump_filter_nc@@Base+0x2b4>
  40c7e8:	ldr	x0, [sp, #128]
  40c7ec:	mov	w21, #0xffffffff            	// #-1
  40c7f0:	bl	405030 <free@plt>
  40c7f4:	mov	w0, w21
  40c7f8:	ldp	x19, x20, [sp, #16]
  40c7fc:	ldp	x21, x22, [sp, #32]
  40c800:	ldp	x23, x24, [sp, #48]
  40c804:	ldp	x25, x26, [sp, #64]
  40c808:	ldp	x27, x28, [sp, #80]
  40c80c:	ldp	x29, x30, [sp], #272
  40c810:	ret
  40c814:	mov	x0, x19
  40c818:	bl	405030 <free@plt>
  40c81c:	ldr	w0, [sp, #116]
  40c820:	cbnz	w0, 40c9a8 <rtnl_dump_filter_nc@@Base+0x3d8>
  40c824:	ldr	w0, [sp, #264]
  40c828:	tbnz	w0, #5, 40c900 <rtnl_dump_filter_nc@@Base+0x330>
  40c82c:	cbz	w26, 40c648 <rtnl_dump_filter_nc@@Base+0x78>
  40c830:	adrp	x0, 421000 <_IO_stdin_used@@Base+0x13490>
  40c834:	mov	w2, w26
  40c838:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x490>
  40c83c:	add	x1, x1, #0xae8
  40c840:	ldr	x0, [x0, #3992]
  40c844:	ldr	x0, [x0]
  40c848:	bl	405200 <fprintf@plt>
  40c84c:	mov	w0, #0x1                   	// #1
  40c850:	bl	404d20 <exit@plt>
  40c854:	mov	w1, w26
  40c858:	bl	40b8c8 <nl_dump_ext_ack_done@@Base>
  40c85c:	cbnz	w0, 40c7e8 <rtnl_dump_filter_nc@@Base+0x218>
  40c860:	bl	4051b0 <__errno_location@plt>
  40c864:	neg	w1, w26
  40c868:	str	w1, [x0]
  40c86c:	cmn	w26, #0x5a
  40c870:	b.eq	40c920 <rtnl_dump_filter_nc@@Base+0x350>  // b.none
  40c874:	cmn	w26, #0x5f
  40c878:	b.eq	40c7e8 <rtnl_dump_filter_nc@@Base+0x218>  // b.none
  40c87c:	cmn	w26, #0x2
  40c880:	b.eq	40c7e8 <rtnl_dump_filter_nc@@Base+0x218>  // b.none
  40c884:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x490>
  40c888:	add	x0, x0, #0xbf0
  40c88c:	bl	404d30 <perror@plt>
  40c890:	b	40c7e8 <rtnl_dump_filter_nc@@Base+0x218>
  40c894:	adrp	x3, 421000 <_IO_stdin_used@@Base+0x13490>
  40c898:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x490>
  40c89c:	mov	x2, #0x10                  	// #16
  40c8a0:	mov	x1, #0x1                   	// #1
  40c8a4:	ldr	x3, [x3, #3992]
  40c8a8:	add	x0, x0, #0xaa0
  40c8ac:	ldr	x3, [x3]
  40c8b0:	bl	405090 <fwrite@plt>
  40c8b4:	b	40c7e8 <rtnl_dump_filter_nc@@Base+0x218>
  40c8b8:	ldr	x0, [sp, #128]
  40c8bc:	bl	405030 <free@plt>
  40c8c0:	mov	w0, w21
  40c8c4:	ldp	x19, x20, [sp, #16]
  40c8c8:	ldp	x21, x22, [sp, #32]
  40c8cc:	ldp	x23, x24, [sp, #48]
  40c8d0:	ldp	x25, x26, [sp, #64]
  40c8d4:	ldp	x27, x28, [sp, #80]
  40c8d8:	ldp	x29, x30, [sp], #272
  40c8dc:	ret
  40c8e0:	cmn	w1, #0x5f
  40c8e4:	ccmn	w1, #0x2, #0x4, ne  // ne = any
  40c8e8:	b.ne	40c7e0 <rtnl_dump_filter_nc@@Base+0x210>  // b.any
  40c8ec:	b	40c7e8 <rtnl_dump_filter_nc@@Base+0x218>
  40c8f0:	mov	x0, x19
  40c8f4:	bl	405030 <free@plt>
  40c8f8:	ldr	w0, [sp, #264]
  40c8fc:	tbz	w0, #5, 40c648 <rtnl_dump_filter_nc@@Base+0x78>
  40c900:	ldr	x0, [sp, #120]
  40c904:	mov	x2, #0x12                  	// #18
  40c908:	mov	x1, #0x1                   	// #1
  40c90c:	ldr	x3, [x0]
  40c910:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x490>
  40c914:	add	x0, x0, #0xad0
  40c918:	bl	405090 <fwrite@plt>
  40c91c:	b	40c648 <rtnl_dump_filter_nc@@Base+0x78>
  40c920:	adrp	x3, 421000 <_IO_stdin_used@@Base+0x13490>
  40c924:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x490>
  40c928:	mov	x2, #0x24                  	// #36
  40c92c:	mov	x1, #0x1                   	// #1
  40c930:	ldr	x3, [x3, #3992]
  40c934:	add	x0, x0, #0xbc8
  40c938:	ldr	x3, [x3]
  40c93c:	bl	405090 <fwrite@plt>
  40c940:	b	40c7e8 <rtnl_dump_filter_nc@@Base+0x218>
  40c944:	mov	w21, w0
  40c948:	b	40c7f4 <rtnl_dump_filter_nc@@Base+0x224>
  40c94c:	ldr	x0, [sp, #128]
  40c950:	mov	w21, w22
  40c954:	bl	405030 <free@plt>
  40c958:	cbz	w22, 40c7f4 <rtnl_dump_filter_nc@@Base+0x224>
  40c95c:	adrp	x3, 421000 <_IO_stdin_used@@Base+0x13490>
  40c960:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x490>
  40c964:	mov	x2, #0x2e                  	// #46
  40c968:	mov	x1, #0x1                   	// #1
  40c96c:	ldr	x3, [x3, #3992]
  40c970:	mov	w21, #0x0                   	// #0
  40c974:	add	x0, x0, #0xc08
  40c978:	ldr	x3, [x3]
  40c97c:	bl	405090 <fwrite@plt>
  40c980:	b	40c7f4 <rtnl_dump_filter_nc@@Base+0x224>
  40c984:	adrp	x3, 421000 <_IO_stdin_used@@Base+0x13490>
  40c988:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x490>
  40c98c:	mov	x2, #0xf                   	// #15
  40c990:	mov	x1, #0x1                   	// #1
  40c994:	ldr	x3, [x3, #3992]
  40c998:	add	x0, x0, #0xbb8
  40c99c:	ldr	x3, [x3]
  40c9a0:	bl	405090 <fwrite@plt>
  40c9a4:	b	40c7e8 <rtnl_dump_filter_nc@@Base+0x218>
  40c9a8:	mov	w21, w22
  40c9ac:	b	40c958 <rtnl_dump_filter_nc@@Base+0x388>

000000000040c9b0 <rtnl_talk@@Base>:
  40c9b0:	stp	x29, x30, [sp, #-32]!
  40c9b4:	mov	x4, x1
  40c9b8:	mov	w3, #0x1                   	// #1
  40c9bc:	mov	x29, sp
  40c9c0:	str	x4, [sp, #16]
  40c9c4:	add	x1, sp, #0x10
  40c9c8:	ldr	w4, [x4]
  40c9cc:	str	x4, [sp, #24]
  40c9d0:	bl	40b498 <nl_dump_ext_ack@@Base+0x8>
  40c9d4:	ldp	x29, x30, [sp], #32
  40c9d8:	ret
  40c9dc:	nop

000000000040c9e0 <rtnl_talk_iov@@Base>:
  40c9e0:	stp	x29, x30, [sp, #-224]!
  40c9e4:	mov	w5, #0x10                  	// #16
  40c9e8:	mov	w4, #0xc                   	// #12
  40c9ec:	mov	x29, sp
  40c9f0:	str	xzr, [sp, #136]
  40c9f4:	stp	xzr, xzr, [sp, #176]
  40c9f8:	stp	xzr, xzr, [sp, #192]
  40c9fc:	stp	x19, x20, [sp, #16]
  40ca00:	mov	x20, x2
  40ca04:	add	x2, sp, #0x88
  40ca08:	stp	x21, x22, [sp, #32]
  40ca0c:	mov	x19, x0
  40ca10:	stp	x23, x24, [sp, #48]
  40ca14:	mov	x23, x3
  40ca18:	stp	x25, x26, [sp, #64]
  40ca1c:	stp	x27, x28, [sp, #80]
  40ca20:	strh	w5, [sp, #136]
  40ca24:	str	wzr, [sp, #144]
  40ca28:	str	x2, [sp, #168]
  40ca2c:	str	w4, [sp, #176]
  40ca30:	stp	x1, x20, [sp, #184]
  40ca34:	stp	xzr, xzr, [sp, #208]
  40ca38:	cbz	x20, 40cd80 <rtnl_talk_iov@@Base+0x3a0>
  40ca3c:	ldr	w21, [x0, #28]
  40ca40:	cbz	x3, 40ccc4 <rtnl_talk_iov@@Base+0x2e4>
  40ca44:	add	w3, w21, w20
  40ca48:	mov	w0, w21
  40ca4c:	nop
  40ca50:	ldr	x2, [x1], #16
  40ca54:	add	w0, w0, #0x1
  40ca58:	cmp	w3, w0
  40ca5c:	str	w0, [x2, #8]
  40ca60:	b.ne	40ca50 <rtnl_talk_iov@@Base+0x70>  // b.any
  40ca64:	add	w21, w21, w20
  40ca68:	str	w21, [x19, #28]
  40ca6c:	ldr	w0, [x19]
  40ca70:	add	x26, sp, #0xa8
  40ca74:	mov	x1, x26
  40ca78:	mov	w2, #0x0                   	// #0
  40ca7c:	bl	404ee0 <sendmsg@plt>
  40ca80:	tbnz	w0, #31, 40cdd4 <rtnl_talk_iov@@Base+0x3f4>
  40ca84:	adrp	x25, 421000 <_IO_stdin_used@@Base+0x13490>
  40ca88:	mov	w24, w21
  40ca8c:	sub	x0, x24, x20
  40ca90:	add	x27, sp, #0x80
  40ca94:	ldr	x1, [x25, #3992]
  40ca98:	mov	x22, #0x0                   	// #0
  40ca9c:	str	x0, [sp, #96]
  40caa0:	add	x0, sp, #0x98
  40caa4:	str	x1, [sp, #112]
  40caa8:	mov	x1, #0x1                   	// #1
  40caac:	stp	x0, x1, [sp, #184]
  40cab0:	ldr	w0, [x19]
  40cab4:	mov	x2, x27
  40cab8:	mov	x1, x26
  40cabc:	str	w22, [sp, #124]
  40cac0:	bl	40b3d0 <jsonw_null_field@@Base+0x100>
  40cac4:	mov	w28, w0
  40cac8:	tbnz	w0, #31, 40cc20 <rtnl_talk_iov@@Base+0x240>
  40cacc:	ldr	w2, [sp, #176]
  40cad0:	cmp	w2, #0xc
  40cad4:	b.ne	40ce18 <rtnl_talk_iov@@Base+0x438>  // b.any
  40cad8:	ldr	x24, [sp, #128]
  40cadc:	mov	w5, w0
  40cae0:	cmp	w0, #0xf
  40cae4:	mov	x0, x24
  40cae8:	b.le	40cbc0 <rtnl_talk_iov@@Base+0x1e0>
  40caec:	ldr	w28, [x24]
  40caf0:	subs	w1, w28, #0x10
  40caf4:	ccmp	w5, w28, #0x1, pl  // pl = nfrst
  40caf8:	b.lt	40cc70 <rtnl_talk_iov@@Base+0x290>  // b.tstop
  40cafc:	cbnz	x23, 40cbd8 <rtnl_talk_iov@@Base+0x1f8>
  40cb00:	ldr	x8, [x25, #3992]
  40cb04:	adrp	x7, 40e000 <_IO_stdin_used@@Base+0x490>
  40cb08:	b	40cb98 <rtnl_talk_iov@@Base+0x1b8>
  40cb0c:	ldr	w2, [x19, #8]
  40cb10:	ldr	w0, [x24, #12]
  40cb14:	cmp	w2, w0
  40cb18:	b.ne	40cba0 <rtnl_talk_iov@@Base+0x1c0>  // b.any
  40cb1c:	ldr	w0, [x24, #8]
  40cb20:	cmp	w0, w21
  40cb24:	b.hi	40cba0 <rtnl_talk_iov@@Base+0x1c0>  // b.pmore
  40cb28:	ldr	x2, [sp, #96]
  40cb2c:	cmp	x2, w0, uxtw
  40cb30:	b.hi	40cba0 <rtnl_talk_iov@@Base+0x1c0>  // b.pmore
  40cb34:	ldrh	w0, [x24, #4]
  40cb38:	str	w5, [sp, #120]
  40cb3c:	cmp	w0, #0x2
  40cb40:	b.eq	40cd20 <rtnl_talk_iov@@Base+0x340>  // b.none
  40cb44:	ldr	x3, [x8]
  40cb48:	add	x0, x7, #0xa88
  40cb4c:	mov	x2, #0x14                  	// #20
  40cb50:	mov	x1, #0x1                   	// #1
  40cb54:	str	x8, [sp, #104]
  40cb58:	bl	405090 <fwrite@plt>
  40cb5c:	add	w4, w28, #0x3
  40cb60:	ldr	w5, [sp, #120]
  40cb64:	and	w4, w4, #0xfffffffc
  40cb68:	adrp	x7, 40e000 <_IO_stdin_used@@Base+0x490>
  40cb6c:	sub	w5, w5, w4
  40cb70:	add	x24, x24, w4, uxtw
  40cb74:	mov	w28, w5
  40cb78:	cmp	w5, #0xf
  40cb7c:	ldr	x8, [sp, #104]
  40cb80:	b.ls	40cbbc <rtnl_talk_iov@@Base+0x1dc>  // b.plast
  40cb84:	nop
  40cb88:	ldr	w28, [x24]
  40cb8c:	subs	w1, w28, #0x10
  40cb90:	ccmp	w28, w5, #0x0, pl  // pl = nfrst
  40cb94:	b.gt	40cc70 <rtnl_talk_iov@@Base+0x290>
  40cb98:	ldr	w0, [sp, #140]
  40cb9c:	cbz	w0, 40cb0c <rtnl_talk_iov@@Base+0x12c>
  40cba0:	add	w4, w28, #0x3
  40cba4:	and	w4, w4, #0xfffffffc
  40cba8:	sub	w5, w5, w4
  40cbac:	add	x24, x24, w4, uxtw
  40cbb0:	mov	w28, w5
  40cbb4:	cmp	w5, #0xf
  40cbb8:	b.hi	40cb88 <rtnl_talk_iov@@Base+0x1a8>  // b.pmore
  40cbbc:	ldr	x0, [sp, #128]
  40cbc0:	bl	405030 <free@plt>
  40cbc4:	ldr	w0, [sp, #216]
  40cbc8:	tbnz	w0, #5, 40ccf4 <rtnl_talk_iov@@Base+0x314>
  40cbcc:	cbnz	w28, 40ce54 <rtnl_talk_iov@@Base+0x474>
  40cbd0:	add	x22, x22, #0x1
  40cbd4:	b	40cab0 <rtnl_talk_iov@@Base+0xd0>
  40cbd8:	ldr	w7, [sp, #140]
  40cbdc:	mov	x6, x24
  40cbe0:	cbnz	w7, 40cc40 <rtnl_talk_iov@@Base+0x260>
  40cbe4:	ldr	w3, [x6, #12]
  40cbe8:	ldr	w2, [x19, #8]
  40cbec:	cmp	w3, w2
  40cbf0:	b.ne	40cc40 <rtnl_talk_iov@@Base+0x260>  // b.any
  40cbf4:	ldr	w2, [x6, #8]
  40cbf8:	cmp	w2, w21
  40cbfc:	b.hi	40cc40 <rtnl_talk_iov@@Base+0x260>  // b.pmore
  40cc00:	ldr	x3, [sp, #96]
  40cc04:	cmp	x3, w2, uxtw
  40cc08:	b.hi	40cc40 <rtnl_talk_iov@@Base+0x260>  // b.pmore
  40cc0c:	ldrh	w2, [x6, #4]
  40cc10:	cmp	w2, #0x2
  40cc14:	b.eq	40cd18 <rtnl_talk_iov@@Base+0x338>  // b.none
  40cc18:	mov	w28, #0x0                   	// #0
  40cc1c:	str	x0, [x23]
  40cc20:	mov	w0, w28
  40cc24:	ldp	x19, x20, [sp, #16]
  40cc28:	ldp	x21, x22, [sp, #32]
  40cc2c:	ldp	x23, x24, [sp, #48]
  40cc30:	ldp	x25, x26, [sp, #64]
  40cc34:	ldp	x27, x28, [sp, #80]
  40cc38:	ldp	x29, x30, [sp], #224
  40cc3c:	ret
  40cc40:	add	w4, w28, #0x3
  40cc44:	and	w4, w4, #0xfffffffc
  40cc48:	sub	w5, w5, w4
  40cc4c:	cmp	w5, #0xf
  40cc50:	add	x6, x6, w4, uxtw
  40cc54:	mov	w28, w5
  40cc58:	b.ls	40cbc0 <rtnl_talk_iov@@Base+0x1e0>  // b.plast
  40cc5c:	ldr	w28, [x6]
  40cc60:	subs	w1, w28, #0x10
  40cc64:	ccmp	w28, w5, #0x0, pl  // pl = nfrst
  40cc68:	b.le	40cbe0 <rtnl_talk_iov@@Base+0x200>
  40cc6c:	nop
  40cc70:	adrp	x0, 421000 <_IO_stdin_used@@Base+0x13490>
  40cc74:	ldr	w1, [sp, #216]
  40cc78:	ldr	x0, [x0, #3992]
  40cc7c:	ldr	x3, [x0]
  40cc80:	tbz	w1, #5, 40ce38 <rtnl_talk_iov@@Base+0x458>
  40cc84:	mov	x2, #0x12                  	// #18
  40cc88:	mov	x1, #0x1                   	// #1
  40cc8c:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x490>
  40cc90:	add	x0, x0, #0xa50
  40cc94:	bl	405090 <fwrite@plt>
  40cc98:	mov	w28, #0xffffffff            	// #-1
  40cc9c:	ldr	x0, [sp, #128]
  40cca0:	bl	405030 <free@plt>
  40cca4:	mov	w0, w28
  40cca8:	ldp	x19, x20, [sp, #16]
  40ccac:	ldp	x21, x22, [sp, #32]
  40ccb0:	ldp	x23, x24, [sp, #48]
  40ccb4:	ldp	x25, x26, [sp, #64]
  40ccb8:	ldp	x27, x28, [sp, #80]
  40ccbc:	ldp	x29, x30, [sp], #224
  40ccc0:	ret
  40ccc4:	add	w4, w20, #0x1
  40ccc8:	add	w0, w21, #0x1
  40cccc:	add	w4, w4, w21
  40ccd0:	ldr	x2, [x1], #16
  40ccd4:	ldrh	w3, [x2, #6]
  40ccd8:	str	w0, [x2, #8]
  40ccdc:	add	w0, w0, #0x1
  40cce0:	orr	w3, w3, #0x4
  40cce4:	strh	w3, [x2, #6]
  40cce8:	cmp	w0, w4
  40ccec:	b.ne	40ccd0 <rtnl_talk_iov@@Base+0x2f0>  // b.any
  40ccf0:	b	40ca64 <rtnl_talk_iov@@Base+0x84>
  40ccf4:	ldr	x0, [sp, #112]
  40ccf8:	add	x22, x22, #0x1
  40ccfc:	mov	x2, #0x12                  	// #18
  40cd00:	mov	x1, #0x1                   	// #1
  40cd04:	ldr	x3, [x0]
  40cd08:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x490>
  40cd0c:	add	x0, x0, #0xad0
  40cd10:	bl	405090 <fwrite@plt>
  40cd14:	b	40cab0 <rtnl_talk_iov@@Base+0xd0>
  40cd18:	mov	x24, x6
  40cd1c:	nop
  40cd20:	ldr	w28, [x24, #16]
  40cd24:	cmp	w1, #0x13
  40cd28:	b.ls	40cde8 <rtnl_talk_iov@@Base+0x408>  // b.plast
  40cd2c:	cbz	w28, 40cdbc <rtnl_talk_iov@@Base+0x3dc>
  40cd30:	bl	4051b0 <__errno_location@plt>
  40cd34:	neg	w1, w28
  40cd38:	str	w1, [x0]
  40cd3c:	ldr	w0, [x19, #36]
  40cd40:	cmp	w0, #0x4
  40cd44:	b.eq	40cd58 <rtnl_talk_iov@@Base+0x378>  // b.none
  40cd48:	mov	x0, x24
  40cd4c:	mov	x1, #0x0                   	// #0
  40cd50:	bl	40b490 <nl_dump_ext_ack@@Base>
  40cd54:	cbz	w0, 40cd88 <rtnl_talk_iov@@Base+0x3a8>
  40cd58:	ldr	x0, [sp, #128]
  40cd5c:	cbz	x23, 40cdcc <rtnl_talk_iov@@Base+0x3ec>
  40cd60:	str	x0, [x23]
  40cd64:	add	x22, x22, #0x1
  40cd68:	cmp	x20, x22
  40cd6c:	b.hi	40cab0 <rtnl_talk_iov@@Base+0xd0>  // b.pmore
  40cd70:	ldr	w0, [sp, #124]
  40cd74:	cmp	w28, #0x0
  40cd78:	csinv	w28, w28, w0, eq  // eq = none
  40cd7c:	b	40cc20 <rtnl_talk_iov@@Base+0x240>
  40cd80:	mov	w21, #0x0                   	// #0
  40cd84:	b	40ca6c <rtnl_talk_iov@@Base+0x8c>
  40cd88:	ldr	x1, [x25, #3992]
  40cd8c:	ldr	w0, [x24, #16]
  40cd90:	ldr	x1, [x1]
  40cd94:	neg	w0, w0
  40cd98:	str	x1, [sp, #104]
  40cd9c:	bl	404f50 <strerror@plt>
  40cda0:	mov	x2, x0
  40cda4:	ldr	x1, [sp, #104]
  40cda8:	mov	x0, x1
  40cdac:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x490>
  40cdb0:	add	x1, x1, #0xab8
  40cdb4:	bl	405200 <fprintf@plt>
  40cdb8:	b	40cd58 <rtnl_talk_iov@@Base+0x378>
  40cdbc:	mov	x0, x24
  40cdc0:	mov	x1, #0x0                   	// #0
  40cdc4:	bl	40b490 <nl_dump_ext_ack@@Base>
  40cdc8:	b	40cd58 <rtnl_talk_iov@@Base+0x378>
  40cdcc:	bl	405030 <free@plt>
  40cdd0:	b	40cd64 <rtnl_talk_iov@@Base+0x384>
  40cdd4:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x490>
  40cdd8:	mov	w28, #0xffffffff            	// #-1
  40cddc:	add	x0, x0, #0xa10
  40cde0:	bl	404d30 <perror@plt>
  40cde4:	b	40cc20 <rtnl_talk_iov@@Base+0x240>
  40cde8:	adrp	x3, 421000 <_IO_stdin_used@@Base+0x13490>
  40cdec:	mov	x2, #0x10                  	// #16
  40cdf0:	mov	x1, #0x1                   	// #1
  40cdf4:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x490>
  40cdf8:	ldr	x3, [x3, #3992]
  40cdfc:	add	x0, x0, #0xaa0
  40ce00:	mov	w28, #0xffffffff            	// #-1
  40ce04:	ldr	x3, [x3]
  40ce08:	bl	405090 <fwrite@plt>
  40ce0c:	ldr	x0, [sp, #128]
  40ce10:	bl	405030 <free@plt>
  40ce14:	b	40cc20 <rtnl_talk_iov@@Base+0x240>
  40ce18:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x490>
  40ce1c:	add	x1, x1, #0xa30
  40ce20:	adrp	x0, 421000 <_IO_stdin_used@@Base+0x13490>
  40ce24:	ldr	x0, [x0, #3992]
  40ce28:	ldr	x0, [x0]
  40ce2c:	bl	405200 <fprintf@plt>
  40ce30:	mov	w0, #0x1                   	// #1
  40ce34:	bl	404d20 <exit@plt>
  40ce38:	mov	w2, w28
  40ce3c:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x490>
  40ce40:	add	x1, x1, #0xa68
  40ce44:	mov	x0, x3
  40ce48:	bl	405200 <fprintf@plt>
  40ce4c:	mov	w0, #0x1                   	// #1
  40ce50:	bl	404d20 <exit@plt>
  40ce54:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x490>
  40ce58:	mov	w2, w28
  40ce5c:	add	x1, x1, #0xae8
  40ce60:	adrp	x0, 421000 <_IO_stdin_used@@Base+0x13490>
  40ce64:	b	40ce24 <rtnl_talk_iov@@Base+0x444>

000000000040ce68 <rtnl_talk_suppress_rtnl_errmsg@@Base>:
  40ce68:	stp	x29, x30, [sp, #-32]!
  40ce6c:	mov	x4, x1
  40ce70:	mov	w3, #0x0                   	// #0
  40ce74:	mov	x29, sp
  40ce78:	str	x4, [sp, #16]
  40ce7c:	add	x1, sp, #0x10
  40ce80:	ldr	w4, [x4]
  40ce84:	str	x4, [sp, #24]
  40ce88:	bl	40b498 <nl_dump_ext_ack@@Base+0x8>
  40ce8c:	ldp	x29, x30, [sp], #32
  40ce90:	ret
  40ce94:	nop

000000000040ce98 <rtnl_listen_all_nsid@@Base>:
  40ce98:	stp	x29, x30, [sp, #-48]!
  40ce9c:	mov	w5, #0x1                   	// #1
  40cea0:	mov	w4, #0x4                   	// #4
  40cea4:	mov	x29, sp
  40cea8:	str	x19, [sp, #16]
  40ceac:	mov	x19, x0
  40ceb0:	ldr	w0, [x0]
  40ceb4:	add	x3, sp, #0x2c
  40ceb8:	mov	w2, #0x8                   	// #8
  40cebc:	mov	w1, #0x10e                 	// #270
  40cec0:	str	w5, [sp, #44]
  40cec4:	bl	404e60 <setsockopt@plt>
  40cec8:	tbnz	w0, #31, 40cee8 <rtnl_listen_all_nsid@@Base+0x50>
  40cecc:	ldr	w1, [x19, #48]
  40ced0:	mov	w0, #0x0                   	// #0
  40ced4:	orr	w1, w1, #0x1
  40ced8:	str	w1, [x19, #48]
  40cedc:	ldr	x19, [sp, #16]
  40cee0:	ldp	x29, x30, [sp], #48
  40cee4:	ret
  40cee8:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x490>
  40ceec:	add	x0, x0, #0xc38
  40cef0:	bl	404d30 <perror@plt>
  40cef4:	mov	w0, #0xffffffff            	// #-1
  40cef8:	b	40cedc <rtnl_listen_all_nsid@@Base+0x44>
  40cefc:	nop

000000000040cf00 <rtnl_listen@@Base>:
  40cf00:	mov	x12, #0x60c0                	// #24768
  40cf04:	sub	sp, sp, x12
  40cf08:	add	x3, sp, #0x68
  40cf0c:	mov	w7, #0x10                  	// #16
  40cf10:	mov	w6, #0xc                   	// #12
  40cf14:	mov	x5, #0x1                   	// #1
  40cf18:	stp	x29, x30, [sp]
  40cf1c:	mov	x29, sp
  40cf20:	ldr	w4, [x0, #48]
  40cf24:	str	xzr, [sp, #104]
  40cf28:	stp	xzr, xzr, [sp, #144]
  40cf2c:	stp	xzr, xzr, [sp, #160]
  40cf30:	stp	x19, x20, [sp, #16]
  40cf34:	mov	x20, x1
  40cf38:	stp	x21, x22, [sp, #32]
  40cf3c:	mov	x21, x2
  40cf40:	stp	x23, x24, [sp, #48]
  40cf44:	mov	x23, x0
  40cf48:	add	x0, sp, #0x78
  40cf4c:	stp	x25, x26, [sp, #64]
  40cf50:	stp	x27, x28, [sp, #80]
  40cf54:	strh	w7, [sp, #104]
  40cf58:	str	wzr, [sp, #112]
  40cf5c:	str	x3, [sp, #136]
  40cf60:	str	w6, [sp, #144]
  40cf64:	stp	x0, x5, [sp, #152]
  40cf68:	stp	xzr, xzr, [sp, #176]
  40cf6c:	tbz	w4, #0, 40cf7c <rtnl_listen@@Base+0x7c>
  40cf70:	add	x0, sp, #0xc0
  40cf74:	mov	x1, #0x2000                	// #8192
  40cf78:	stp	x0, x1, [sp, #168]
  40cf7c:	mov	x26, #0x10e                 	// #270
  40cf80:	add	x24, sp, #0x88
  40cf84:	add	x22, sp, #0x60
  40cf88:	mov	x0, #0x20c0                	// #8384
  40cf8c:	movk	x26, #0x8, lsl #32
  40cf90:	add	x25, sp, x0
  40cf94:	str	x25, [sp, #120]
  40cf98:	ldr	w0, [x23]
  40cf9c:	mov	x3, #0x4000                	// #16384
  40cfa0:	mov	x1, x24
  40cfa4:	mov	w2, #0x0                   	// #0
  40cfa8:	str	x3, [sp, #128]
  40cfac:	bl	404cf0 <recvmsg@plt>
  40cfb0:	cmp	w0, #0x0
  40cfb4:	mov	w1, w0
  40cfb8:	b.ge	40d030 <rtnl_listen@@Base+0x130>  // b.tcont
  40cfbc:	bl	4051b0 <__errno_location@plt>
  40cfc0:	mov	x19, x0
  40cfc4:	ldr	w0, [x0]
  40cfc8:	cmp	w0, #0x4
  40cfcc:	ccmp	w0, #0xb, #0x4, ne  // ne = any
  40cfd0:	b.eq	40cf98 <rtnl_listen@@Base+0x98>  // b.none
  40cfd4:	adrp	x1, 421000 <_IO_stdin_used@@Base+0x13490>
  40cfd8:	ldr	x1, [x1, #3992]
  40cfdc:	ldr	x27, [x1]
  40cfe0:	bl	404f50 <strerror@plt>
  40cfe4:	ldr	w3, [x19]
  40cfe8:	mov	x2, x0
  40cfec:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x490>
  40cff0:	mov	x0, x27
  40cff4:	add	x1, x1, #0x9c8
  40cff8:	bl	405200 <fprintf@plt>
  40cffc:	ldr	w0, [x19]
  40d000:	cmp	w0, #0x69
  40d004:	b.eq	40cf98 <rtnl_listen@@Base+0x98>  // b.none
  40d008:	mov	w0, #0xffffffff            	// #-1
  40d00c:	mov	x12, #0x60c0                	// #24768
  40d010:	ldp	x29, x30, [sp]
  40d014:	ldp	x19, x20, [sp, #16]
  40d018:	ldp	x21, x22, [sp, #32]
  40d01c:	ldp	x23, x24, [sp, #48]
  40d020:	ldp	x25, x26, [sp, #64]
  40d024:	ldp	x27, x28, [sp, #80]
  40d028:	add	sp, sp, x12
  40d02c:	ret
  40d030:	b.eq	40d1c8 <rtnl_listen@@Base+0x2c8>  // b.none
  40d034:	ldr	w2, [sp, #144]
  40d038:	cmp	w2, #0xc
  40d03c:	b.ne	40d1f0 <rtnl_listen@@Base+0x2f0>  // b.any
  40d040:	ldr	w2, [x23, #48]
  40d044:	tbnz	w2, #0, 40d110 <rtnl_listen@@Base+0x210>
  40d048:	cmp	w0, #0xf
  40d04c:	mov	w28, w0
  40d050:	b.ls	40d19c <rtnl_listen@@Base+0x29c>  // b.plast
  40d054:	ldr	w19, [sp, #8384]
  40d058:	cmp	w19, #0x10
  40d05c:	ccmp	w0, w19, #0x1, pl  // pl = nfrst
  40d060:	b.lt	40d0b0 <rtnl_listen@@Base+0x1b0>  // b.tstop
  40d064:	mov	x27, x25
  40d068:	b	40d098 <rtnl_listen@@Base+0x198>
  40d06c:	add	w19, w19, #0x3
  40d070:	and	w19, w19, #0xfffffffc
  40d074:	sub	w1, w28, w19
  40d078:	cmp	w1, #0xf
  40d07c:	add	x27, x27, w19, uxtw
  40d080:	mov	w28, w1
  40d084:	b.ls	40d0e0 <rtnl_listen@@Base+0x1e0>  // b.plast
  40d088:	ldr	w19, [x27]
  40d08c:	cmp	w19, #0x10
  40d090:	ccmp	w19, w28, #0x0, pl  // pl = nfrst
  40d094:	b.gt	40d0b0 <rtnl_listen@@Base+0x1b0>
  40d098:	mov	x2, x21
  40d09c:	mov	x1, x27
  40d0a0:	mov	x0, x22
  40d0a4:	blr	x20
  40d0a8:	tbz	w0, #31, 40d06c <rtnl_listen@@Base+0x16c>
  40d0ac:	b	40d00c <rtnl_listen@@Base+0x10c>
  40d0b0:	adrp	x0, 421000 <_IO_stdin_used@@Base+0x13490>
  40d0b4:	ldr	w1, [sp, #184]
  40d0b8:	ldr	x0, [x0, #3992]
  40d0bc:	ldr	x3, [x0]
  40d0c0:	tbz	w1, #5, 40d200 <rtnl_listen@@Base+0x300>
  40d0c4:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x490>
  40d0c8:	mov	x2, #0x12                  	// #18
  40d0cc:	add	x0, x0, #0xa50
  40d0d0:	mov	x1, #0x1                   	// #1
  40d0d4:	bl	405090 <fwrite@plt>
  40d0d8:	mov	w0, #0xffffffff            	// #-1
  40d0dc:	b	40d00c <rtnl_listen@@Base+0x10c>
  40d0e0:	ldr	w0, [sp, #184]
  40d0e4:	tbnz	w0, #5, 40d1a4 <rtnl_listen@@Base+0x2a4>
  40d0e8:	cbz	w1, 40cf98 <rtnl_listen@@Base+0x98>
  40d0ec:	mov	w2, w1
  40d0f0:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x490>
  40d0f4:	add	x1, x1, #0xae8
  40d0f8:	adrp	x0, 421000 <_IO_stdin_used@@Base+0x13490>
  40d0fc:	ldr	x0, [x0, #3992]
  40d100:	ldr	x0, [x0]
  40d104:	bl	405200 <fprintf@plt>
  40d108:	mov	w0, #0x1                   	// #1
  40d10c:	bl	404d20 <exit@plt>
  40d110:	ldr	x4, [sp, #176]
  40d114:	mov	w3, #0xffffffff            	// #-1
  40d118:	str	w3, [sp, #96]
  40d11c:	cmp	x4, #0xf
  40d120:	b.ls	40d048 <rtnl_listen@@Base+0x148>  // b.plast
  40d124:	ldr	x2, [sp, #168]
  40d128:	mov	w6, w3
  40d12c:	mov	w7, #0x0                   	// #0
  40d130:	add	x4, x2, x4
  40d134:	cbz	x2, 40d17c <rtnl_listen@@Base+0x27c>
  40d138:	ldp	x3, x5, [x2]
  40d13c:	cmp	x5, x26
  40d140:	b.eq	40d188 <rtnl_listen@@Base+0x288>  // b.none
  40d144:	cmp	x3, #0xf
  40d148:	b.ls	40d17c <rtnl_listen@@Base+0x27c>  // b.plast
  40d14c:	add	x3, x3, #0x7
  40d150:	and	x3, x3, #0xfffffffffffffff8
  40d154:	add	x2, x2, x3
  40d158:	add	x3, x2, #0x10
  40d15c:	cmp	x4, x3
  40d160:	b.cc	40d17c <rtnl_listen@@Base+0x27c>  // b.lo, b.ul, b.last
  40d164:	ldr	x3, [x2]
  40d168:	add	x3, x3, #0x7
  40d16c:	and	x3, x3, #0xfffffffffffffff8
  40d170:	add	x3, x2, x3
  40d174:	cmp	x4, x3
  40d178:	b.cs	40d134 <rtnl_listen@@Base+0x234>  // b.hs, b.nlast
  40d17c:	cbz	w7, 40d048 <rtnl_listen@@Base+0x148>
  40d180:	str	w6, [sp, #96]
  40d184:	b	40d048 <rtnl_listen@@Base+0x148>
  40d188:	cmp	x3, #0x14
  40d18c:	b.ne	40d144 <rtnl_listen@@Base+0x244>  // b.any
  40d190:	ldr	w6, [x2, #16]
  40d194:	mov	w7, #0x1                   	// #1
  40d198:	b	40d14c <rtnl_listen@@Base+0x24c>
  40d19c:	ldr	w0, [sp, #184]
  40d1a0:	tbz	w0, #5, 40d0ec <rtnl_listen@@Base+0x1ec>
  40d1a4:	adrp	x3, 421000 <_IO_stdin_used@@Base+0x13490>
  40d1a8:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x490>
  40d1ac:	mov	x2, #0x12                  	// #18
  40d1b0:	mov	x1, #0x1                   	// #1
  40d1b4:	ldr	x3, [x3, #3992]
  40d1b8:	add	x0, x0, #0xad0
  40d1bc:	ldr	x3, [x3]
  40d1c0:	bl	405090 <fwrite@plt>
  40d1c4:	b	40cf98 <rtnl_listen@@Base+0x98>
  40d1c8:	adrp	x3, 421000 <_IO_stdin_used@@Base+0x13490>
  40d1cc:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x490>
  40d1d0:	mov	x2, #0xf                   	// #15
  40d1d4:	add	x0, x0, #0x9b8
  40d1d8:	ldr	x3, [x3, #3992]
  40d1dc:	mov	x1, #0x1                   	// #1
  40d1e0:	ldr	x3, [x3]
  40d1e4:	bl	405090 <fwrite@plt>
  40d1e8:	mov	w0, #0xffffffff            	// #-1
  40d1ec:	b	40d00c <rtnl_listen@@Base+0x10c>
  40d1f0:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x490>
  40d1f4:	adrp	x0, 421000 <_IO_stdin_used@@Base+0x13490>
  40d1f8:	add	x1, x1, #0xc50
  40d1fc:	b	40d0fc <rtnl_listen@@Base+0x1fc>
  40d200:	mov	w2, w19
  40d204:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x490>
  40d208:	add	x1, x1, #0xa68
  40d20c:	mov	x0, x3
  40d210:	bl	405200 <fprintf@plt>
  40d214:	mov	w0, #0x1                   	// #1
  40d218:	bl	404d20 <exit@plt>
  40d21c:	nop

000000000040d220 <rtnl_from_file@@Base>:
  40d220:	mov	x12, #0x4050                	// #16464
  40d224:	sub	sp, sp, x12
  40d228:	stp	x29, x30, [sp]
  40d22c:	mov	x29, sp
  40d230:	stp	x21, x22, [sp, #32]
  40d234:	add	x21, sp, #0x50
  40d238:	mov	x22, x2
  40d23c:	stp	x19, x20, [sp, #16]
  40d240:	mov	x20, x0
  40d244:	stp	x23, x24, [sp, #48]
  40d248:	mov	x23, x1
  40d24c:	add	x24, x21, #0x10
  40d250:	stp	x25, x26, [sp, #64]
  40d254:	mov	w25, #0x3ff0                	// #16368
  40d258:	b	40d2a4 <rtnl_from_file@@Base+0x84>
  40d25c:	cmp	x4, #0x10
  40d260:	b.ne	40d2d8 <rtnl_from_file@@Base+0xb8>  // b.any
  40d264:	ldr	w26, [sp, #80]
  40d268:	sub	w19, w26, #0xd
  40d26c:	sub	w2, w26, #0x10
  40d270:	and	x19, x19, #0xfffffffc
  40d274:	cmp	w2, w25
  40d278:	mov	x2, x19
  40d27c:	b.hi	40d314 <rtnl_from_file@@Base+0xf4>  // b.pmore
  40d280:	bl	405010 <fread@plt>
  40d284:	mov	x3, x0
  40d288:	mov	x2, x22
  40d28c:	mov	x1, x21
  40d290:	cmp	x19, x3
  40d294:	mov	x0, #0x0                   	// #0
  40d298:	b.ne	40d2d8 <rtnl_from_file@@Base+0xb8>  // b.any
  40d29c:	blr	x23
  40d2a0:	tbnz	w0, #31, 40d2f4 <rtnl_from_file@@Base+0xd4>
  40d2a4:	mov	x3, x20
  40d2a8:	mov	x1, #0x1                   	// #1
  40d2ac:	mov	x0, x21
  40d2b0:	mov	x2, #0x10                  	// #16
  40d2b4:	bl	405010 <fread@plt>
  40d2b8:	mov	x4, x0
  40d2bc:	mov	x3, x20
  40d2c0:	mov	x0, x24
  40d2c4:	mov	x1, #0x1                   	// #1
  40d2c8:	cbnz	x4, 40d25c <rtnl_from_file@@Base+0x3c>
  40d2cc:	mov	x0, x20
  40d2d0:	bl	404fb0 <feof@plt>
  40d2d4:	cbnz	w0, 40d39c <rtnl_from_file@@Base+0x17c>
  40d2d8:	mov	x0, x20
  40d2dc:	bl	405230 <ferror@plt>
  40d2e0:	cbnz	w0, 40d38c <rtnl_from_file@@Base+0x16c>
  40d2e4:	mov	x0, x20
  40d2e8:	bl	404fb0 <feof@plt>
  40d2ec:	cbnz	w0, 40d364 <rtnl_from_file@@Base+0x144>
  40d2f0:	mov	w0, #0xffffffff            	// #-1
  40d2f4:	mov	x12, #0x4050                	// #16464
  40d2f8:	ldp	x29, x30, [sp]
  40d2fc:	ldp	x19, x20, [sp, #16]
  40d300:	ldp	x21, x22, [sp, #32]
  40d304:	ldp	x23, x24, [sp, #48]
  40d308:	ldp	x25, x26, [sp, #64]
  40d30c:	add	sp, sp, x12
  40d310:	ret
  40d314:	adrp	x1, 421000 <_IO_stdin_used@@Base+0x13490>
  40d318:	mov	x0, x20
  40d31c:	ldr	x1, [x1, #3992]
  40d320:	ldr	x19, [x1]
  40d324:	bl	404d90 <ftell@plt>
  40d328:	mov	w2, w26
  40d32c:	mov	x3, x0
  40d330:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x490>
  40d334:	mov	x0, x19
  40d338:	add	x1, x1, #0xcb0
  40d33c:	bl	405200 <fprintf@plt>
  40d340:	mov	w0, #0xffffffff            	// #-1
  40d344:	mov	x12, #0x4050                	// #16464
  40d348:	ldp	x29, x30, [sp]
  40d34c:	ldp	x19, x20, [sp, #16]
  40d350:	ldp	x21, x22, [sp, #32]
  40d354:	ldp	x23, x24, [sp, #48]
  40d358:	ldp	x25, x26, [sp, #64]
  40d35c:	add	sp, sp, x12
  40d360:	ret
  40d364:	adrp	x3, 421000 <_IO_stdin_used@@Base+0x13490>
  40d368:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x490>
  40d36c:	mov	x2, #0x22                  	// #34
  40d370:	add	x0, x0, #0xc88
  40d374:	ldr	x3, [x3, #3992]
  40d378:	mov	x1, #0x1                   	// #1
  40d37c:	ldr	x3, [x3]
  40d380:	bl	405090 <fwrite@plt>
  40d384:	mov	w0, #0xffffffff            	// #-1
  40d388:	b	40d2f4 <rtnl_from_file@@Base+0xd4>
  40d38c:	adrp	x0, 40e000 <_IO_stdin_used@@Base+0x490>
  40d390:	add	x0, x0, #0xc70
  40d394:	bl	404d30 <perror@plt>
  40d398:	b	40d2e4 <rtnl_from_file@@Base+0xc4>
  40d39c:	mov	w0, #0x0                   	// #0
  40d3a0:	b	40d2f4 <rtnl_from_file@@Base+0xd4>
  40d3a4:	nop

000000000040d3a8 <addattr_l@@Base>:
  40d3a8:	stp	x29, x30, [sp, #-32]!
  40d3ac:	mov	x29, sp
  40d3b0:	ldr	w5, [x0]
  40d3b4:	stp	x19, x20, [sp, #16]
  40d3b8:	add	w20, w4, #0x7
  40d3bc:	add	w5, w5, #0x3
  40d3c0:	and	w20, w20, #0xfffffffc
  40d3c4:	and	w5, w5, #0xfffffffc
  40d3c8:	add	w6, w5, w20
  40d3cc:	mov	x19, x0
  40d3d0:	cmp	w6, w1
  40d3d4:	b.hi	40d424 <addattr_l@@Base+0x7c>  // b.pmore
  40d3d8:	add	x0, x19, w5, uxtw
  40d3dc:	add	w1, w4, #0x4
  40d3e0:	strh	w2, [x0, #2]
  40d3e4:	strh	w1, [x19, w5, uxtw]
  40d3e8:	cbnz	w4, 40d400 <addattr_l@@Base+0x58>
  40d3ec:	mov	w0, #0x0                   	// #0
  40d3f0:	str	w6, [x19]
  40d3f4:	ldp	x19, x20, [sp, #16]
  40d3f8:	ldp	x29, x30, [sp], #32
  40d3fc:	ret
  40d400:	sxtw	x2, w4
  40d404:	mov	x1, x3
  40d408:	add	x0, x0, #0x4
  40d40c:	bl	404ce0 <memcpy@plt>
  40d410:	ldr	w6, [x19]
  40d414:	add	w6, w6, #0x3
  40d418:	and	w6, w6, #0xfffffffc
  40d41c:	add	w6, w6, w20
  40d420:	b	40d3ec <addattr_l@@Base+0x44>
  40d424:	adrp	x3, 421000 <_IO_stdin_used@@Base+0x13490>
  40d428:	mov	w2, w1
  40d42c:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x490>
  40d430:	add	x1, x1, #0xcd8
  40d434:	ldr	x3, [x3, #3992]
  40d438:	ldr	x0, [x3]
  40d43c:	bl	405200 <fprintf@plt>
  40d440:	mov	w0, #0xffffffff            	// #-1
  40d444:	b	40d3f4 <addattr_l@@Base+0x4c>

000000000040d448 <addattr@@Base>:
  40d448:	mov	w4, #0x0                   	// #0
  40d44c:	mov	x3, #0x0                   	// #0
  40d450:	b	40d3a8 <addattr_l@@Base>
  40d454:	nop

000000000040d458 <addattr8@@Base>:
  40d458:	stp	x29, x30, [sp, #-32]!
  40d45c:	mov	w4, #0x1                   	// #1
  40d460:	mov	x29, sp
  40d464:	strb	w3, [sp, #31]
  40d468:	add	x3, sp, #0x1f
  40d46c:	bl	40d3a8 <addattr_l@@Base>
  40d470:	ldp	x29, x30, [sp], #32
  40d474:	ret

000000000040d478 <addattr16@@Base>:
  40d478:	stp	x29, x30, [sp, #-32]!
  40d47c:	mov	w4, #0x2                   	// #2
  40d480:	mov	x29, sp
  40d484:	strh	w3, [sp, #30]
  40d488:	add	x3, sp, #0x1e
  40d48c:	bl	40d3a8 <addattr_l@@Base>
  40d490:	ldp	x29, x30, [sp], #32
  40d494:	ret

000000000040d498 <addattr32@@Base>:
  40d498:	stp	x29, x30, [sp, #-32]!
  40d49c:	mov	w4, #0x4                   	// #4
  40d4a0:	mov	x29, sp
  40d4a4:	str	w3, [sp, #28]
  40d4a8:	add	x3, sp, #0x1c
  40d4ac:	bl	40d3a8 <addattr_l@@Base>
  40d4b0:	ldp	x29, x30, [sp], #32
  40d4b4:	ret

000000000040d4b8 <addattr64@@Base>:
  40d4b8:	stp	x29, x30, [sp, #-32]!
  40d4bc:	mov	w4, #0x8                   	// #8
  40d4c0:	mov	x29, sp
  40d4c4:	str	x3, [sp, #24]
  40d4c8:	add	x3, sp, #0x18
  40d4cc:	bl	40d3a8 <addattr_l@@Base>
  40d4d0:	ldp	x29, x30, [sp], #32
  40d4d4:	ret

000000000040d4d8 <addattrstrz@@Base>:
  40d4d8:	stp	x29, x30, [sp, #-48]!
  40d4dc:	mov	x29, sp
  40d4e0:	stp	x19, x20, [sp, #16]
  40d4e4:	mov	x19, x3
  40d4e8:	mov	x20, x0
  40d4ec:	mov	x0, x3
  40d4f0:	stp	x21, x22, [sp, #32]
  40d4f4:	mov	w21, w1
  40d4f8:	mov	w22, w2
  40d4fc:	bl	404d10 <strlen@plt>
  40d500:	mov	x3, x19
  40d504:	mov	x4, x0
  40d508:	mov	w2, w22
  40d50c:	mov	w1, w21
  40d510:	mov	x0, x20
  40d514:	add	w4, w4, #0x1
  40d518:	ldp	x19, x20, [sp, #16]
  40d51c:	ldp	x21, x22, [sp, #32]
  40d520:	ldp	x29, x30, [sp], #48
  40d524:	b	40d3a8 <addattr_l@@Base>

000000000040d528 <addraw_l@@Base>:
  40d528:	stp	x29, x30, [sp, #-48]!
  40d52c:	mov	x29, sp
  40d530:	stp	x19, x20, [sp, #16]
  40d534:	mov	x19, x0
  40d538:	ldr	w0, [x0]
  40d53c:	add	w20, w3, #0x3
  40d540:	stp	x21, x22, [sp, #32]
  40d544:	add	w0, w0, #0x3
  40d548:	and	w20, w20, #0xfffffffc
  40d54c:	and	w0, w0, #0xfffffffc
  40d550:	mov	w21, w3
  40d554:	mov	w3, w1
  40d558:	mov	x1, x2
  40d55c:	add	w2, w0, w20
  40d560:	cmp	w2, w3
  40d564:	b.hi	40d5c0 <addraw_l@@Base+0x98>  // b.pmore
  40d568:	sxtw	x22, w21
  40d56c:	add	x0, x19, w0, uxtw
  40d570:	mov	x2, x22
  40d574:	bl	404ce0 <memcpy@plt>
  40d578:	ldr	w0, [x19]
  40d57c:	mov	w1, #0x0                   	// #0
  40d580:	sub	w2, w20, w21
  40d584:	add	w0, w0, #0x3
  40d588:	and	x0, x0, #0xfffffffc
  40d58c:	add	x0, x0, x22
  40d590:	add	x0, x19, x0
  40d594:	bl	404ec0 <memset@plt>
  40d598:	ldr	w1, [x19]
  40d59c:	mov	w0, #0x0                   	// #0
  40d5a0:	add	w1, w1, #0x3
  40d5a4:	and	w1, w1, #0xfffffffc
  40d5a8:	add	w1, w1, w20
  40d5ac:	str	w1, [x19]
  40d5b0:	ldp	x19, x20, [sp, #16]
  40d5b4:	ldp	x21, x22, [sp, #32]
  40d5b8:	ldp	x29, x30, [sp], #48
  40d5bc:	ret
  40d5c0:	adrp	x0, 421000 <_IO_stdin_used@@Base+0x13490>
  40d5c4:	mov	w2, w3
  40d5c8:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x490>
  40d5cc:	add	x1, x1, #0xd08
  40d5d0:	ldr	x0, [x0, #3992]
  40d5d4:	ldr	x0, [x0]
  40d5d8:	bl	405200 <fprintf@plt>
  40d5dc:	mov	w0, #0xffffffff            	// #-1
  40d5e0:	b	40d5b0 <addraw_l@@Base+0x88>
  40d5e4:	nop

000000000040d5e8 <addattr_nest@@Base>:
  40d5e8:	stp	x29, x30, [sp, #-32]!
  40d5ec:	mov	w4, #0x0                   	// #0
  40d5f0:	mov	x3, #0x0                   	// #0
  40d5f4:	mov	x29, sp
  40d5f8:	str	x19, [sp, #16]
  40d5fc:	ldr	w19, [x0]
  40d600:	add	w19, w19, #0x3
  40d604:	and	x19, x19, #0xfffffffc
  40d608:	add	x19, x0, x19
  40d60c:	bl	40d3a8 <addattr_l@@Base>
  40d610:	mov	x0, x19
  40d614:	ldr	x19, [sp, #16]
  40d618:	ldp	x29, x30, [sp], #32
  40d61c:	ret

000000000040d620 <addattr_nest_end@@Base>:
  40d620:	mov	x2, x0
  40d624:	ldr	w0, [x0]
  40d628:	add	w3, w0, #0x3
  40d62c:	and	x3, x3, #0xfffffffc
  40d630:	add	x2, x2, x3
  40d634:	sub	x2, x2, x1
  40d638:	strh	w2, [x1]
  40d63c:	ret

000000000040d640 <addattr_nest_compat@@Base>:
  40d640:	stp	x29, x30, [sp, #-48]!
  40d644:	mov	x29, sp
  40d648:	stp	x19, x20, [sp, #16]
  40d64c:	mov	x20, x0
  40d650:	ldr	w19, [x0]
  40d654:	stp	x21, x22, [sp, #32]
  40d658:	mov	w21, w1
  40d65c:	add	w19, w19, #0x3
  40d660:	and	x19, x19, #0xfffffffc
  40d664:	mov	w22, w2
  40d668:	add	x19, x0, x19
  40d66c:	bl	40d3a8 <addattr_l@@Base>
  40d670:	mov	w2, w22
  40d674:	mov	w1, w21
  40d678:	mov	x0, x20
  40d67c:	bl	40d5e8 <addattr_nest@@Base>
  40d680:	mov	x0, x19
  40d684:	ldp	x19, x20, [sp, #16]
  40d688:	ldp	x21, x22, [sp, #32]
  40d68c:	ldp	x29, x30, [sp], #48
  40d690:	ret
  40d694:	nop

000000000040d698 <addattr_nest_compat_end@@Base>:
  40d698:	stp	x29, x30, [sp, #-32]!
  40d69c:	mov	x29, sp
  40d6a0:	ldr	w2, [x0]
  40d6a4:	ldrh	w3, [x1]
  40d6a8:	add	w2, w2, #0x3
  40d6ac:	str	x19, [sp, #16]
  40d6b0:	and	x2, x2, #0xfffffffc
  40d6b4:	add	w3, w3, #0x3
  40d6b8:	add	x2, x0, x2
  40d6bc:	and	x3, x3, #0x1fffc
  40d6c0:	sub	x2, x2, x1
  40d6c4:	mov	x19, x0
  40d6c8:	strh	w2, [x1]
  40d6cc:	add	x1, x1, x3
  40d6d0:	bl	40d620 <addattr_nest_end@@Base>
  40d6d4:	ldr	w0, [x19]
  40d6d8:	ldr	x19, [sp, #16]
  40d6dc:	ldp	x29, x30, [sp], #32
  40d6e0:	ret
  40d6e4:	nop

000000000040d6e8 <rta_addattr32@@Base>:
  40d6e8:	ldrh	w4, [x0]
  40d6ec:	mov	x5, x0
  40d6f0:	add	w4, w4, #0x3
  40d6f4:	and	w4, w4, #0xfffffffc
  40d6f8:	add	w0, w4, #0x8
  40d6fc:	cmp	w0, w1
  40d700:	b.hi	40d734 <rta_addattr32@@Base+0x4c>  // b.pmore
  40d704:	add	x1, x5, w4, uxtw
  40d708:	mov	w6, #0x8                   	// #8
  40d70c:	mov	w0, #0x0                   	// #0
  40d710:	strh	w2, [x1, #2]
  40d714:	strh	w6, [x5, w4, uxtw]
  40d718:	str	w3, [x1, #4]
  40d71c:	ldrh	w1, [x5]
  40d720:	add	w1, w1, #0x3
  40d724:	and	w1, w1, #0xfffffffc
  40d728:	add	w1, w1, #0x8
  40d72c:	strh	w1, [x5]
  40d730:	ret
  40d734:	stp	x29, x30, [sp, #-16]!
  40d738:	adrp	x0, 421000 <_IO_stdin_used@@Base+0x13490>
  40d73c:	mov	w2, w1
  40d740:	mov	x29, sp
  40d744:	ldr	x0, [x0, #3992]
  40d748:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x490>
  40d74c:	add	x1, x1, #0xd38
  40d750:	ldr	x0, [x0]
  40d754:	bl	405200 <fprintf@plt>
  40d758:	mov	w0, #0xffffffff            	// #-1
  40d75c:	ldp	x29, x30, [sp], #16
  40d760:	ret
  40d764:	nop

000000000040d768 <rta_addattr_l@@Base>:
  40d768:	stp	x29, x30, [sp, #-32]!
  40d76c:	mov	x29, sp
  40d770:	stp	x19, x20, [sp, #16]
  40d774:	mov	x20, x0
  40d778:	add	w0, w4, #0x7
  40d77c:	and	w0, w0, #0xfffffffc
  40d780:	ldrh	w5, [x20]
  40d784:	add	w5, w5, #0x3
  40d788:	and	w5, w5, #0xfffffffc
  40d78c:	add	w0, w0, w5
  40d790:	cmp	w0, w1
  40d794:	b.hi	40d7f0 <rta_addattr_l@@Base+0x88>  // b.pmore
  40d798:	add	x0, x20, w5, uxtw
  40d79c:	add	w19, w4, #0x4
  40d7a0:	and	w19, w19, #0xffff
  40d7a4:	strh	w2, [x0, #2]
  40d7a8:	strh	w19, [x20, w5, uxtw]
  40d7ac:	cbnz	w4, 40d7dc <rta_addattr_l@@Base+0x74>
  40d7b0:	ldrh	w1, [x20]
  40d7b4:	add	w19, w19, #0x3
  40d7b8:	and	w19, w19, #0xfffffffc
  40d7bc:	mov	w0, #0x0                   	// #0
  40d7c0:	add	w1, w1, #0x3
  40d7c4:	and	w1, w1, #0xfffffffc
  40d7c8:	add	w19, w1, w19
  40d7cc:	strh	w19, [x20]
  40d7d0:	ldp	x19, x20, [sp, #16]
  40d7d4:	ldp	x29, x30, [sp], #32
  40d7d8:	ret
  40d7dc:	sxtw	x2, w4
  40d7e0:	mov	x1, x3
  40d7e4:	add	x0, x0, #0x4
  40d7e8:	bl	404ce0 <memcpy@plt>
  40d7ec:	b	40d7b0 <rta_addattr_l@@Base+0x48>
  40d7f0:	adrp	x0, 421000 <_IO_stdin_used@@Base+0x13490>
  40d7f4:	mov	w2, w1
  40d7f8:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x490>
  40d7fc:	add	x1, x1, #0xd70
  40d800:	ldr	x0, [x0, #3992]
  40d804:	ldr	x0, [x0]
  40d808:	bl	405200 <fprintf@plt>
  40d80c:	mov	w0, #0xffffffff            	// #-1
  40d810:	b	40d7d0 <rta_addattr_l@@Base+0x68>
  40d814:	nop

000000000040d818 <rta_addattr8@@Base>:
  40d818:	stp	x29, x30, [sp, #-32]!
  40d81c:	mov	w4, #0x1                   	// #1
  40d820:	mov	x29, sp
  40d824:	strb	w3, [sp, #31]
  40d828:	add	x3, sp, #0x1f
  40d82c:	bl	40d768 <rta_addattr_l@@Base>
  40d830:	ldp	x29, x30, [sp], #32
  40d834:	ret

000000000040d838 <rta_addattr16@@Base>:
  40d838:	stp	x29, x30, [sp, #-32]!
  40d83c:	mov	w4, #0x2                   	// #2
  40d840:	mov	x29, sp
  40d844:	strh	w3, [sp, #30]
  40d848:	add	x3, sp, #0x1e
  40d84c:	bl	40d768 <rta_addattr_l@@Base>
  40d850:	ldp	x29, x30, [sp], #32
  40d854:	ret

000000000040d858 <rta_addattr64@@Base>:
  40d858:	stp	x29, x30, [sp, #-32]!
  40d85c:	mov	w4, #0x8                   	// #8
  40d860:	mov	x29, sp
  40d864:	str	x3, [sp, #24]
  40d868:	add	x3, sp, #0x18
  40d86c:	bl	40d768 <rta_addattr_l@@Base>
  40d870:	ldp	x29, x30, [sp], #32
  40d874:	ret

000000000040d878 <rta_nest@@Base>:
  40d878:	stp	x29, x30, [sp, #-32]!
  40d87c:	mov	w4, #0x0                   	// #0
  40d880:	mov	x3, #0x0                   	// #0
  40d884:	mov	x29, sp
  40d888:	ldrh	w5, [x0]
  40d88c:	str	x19, [sp, #16]
  40d890:	add	w5, w5, #0x3
  40d894:	and	x5, x5, #0x1fffc
  40d898:	add	x19, x0, x5
  40d89c:	bl	40d768 <rta_addattr_l@@Base>
  40d8a0:	ldrh	w1, [x19, #2]
  40d8a4:	mov	x0, x19
  40d8a8:	orr	w1, w1, #0xffff8000
  40d8ac:	strh	w1, [x19, #2]
  40d8b0:	ldr	x19, [sp, #16]
  40d8b4:	ldp	x29, x30, [sp], #32
  40d8b8:	ret
  40d8bc:	nop

000000000040d8c0 <rta_nest_end@@Base>:
  40d8c0:	ldrh	w2, [x0]
  40d8c4:	add	w2, w2, #0x3
  40d8c8:	and	x2, x2, #0x1fffc
  40d8cc:	add	x2, x0, x2
  40d8d0:	sub	x2, x2, x1
  40d8d4:	strh	w2, [x1]
  40d8d8:	ldrh	w0, [x0]
  40d8dc:	ret

000000000040d8e0 <parse_rtattr_flags@@Base>:
  40d8e0:	stp	x29, x30, [sp, #-64]!
  40d8e4:	mov	x29, sp
  40d8e8:	stp	x21, x22, [sp, #32]
  40d8ec:	mov	w21, w1
  40d8f0:	add	w1, w1, #0x1
  40d8f4:	and	w22, w4, #0xffff
  40d8f8:	stp	x19, x20, [sp, #16]
  40d8fc:	mov	w19, w3
  40d900:	mov	x20, x2
  40d904:	sbfiz	x2, x1, #3, #32
  40d908:	mov	w1, #0x0                   	// #0
  40d90c:	str	x23, [sp, #48]
  40d910:	mov	x23, x0
  40d914:	bl	404ec0 <memset@plt>
  40d918:	mvn	w1, w22
  40d91c:	cmp	w19, #0x3
  40d920:	b.gt	40d934 <parse_rtattr_flags@@Base+0x54>
  40d924:	b	40d988 <parse_rtattr_flags@@Base+0xa8>
  40d928:	add	x20, x20, w5, uxtw
  40d92c:	cmp	w19, #0x3
  40d930:	b.le	40d988 <parse_rtattr_flags@@Base+0xa8>
  40d934:	ldrh	w4, [x20]
  40d938:	add	w5, w4, #0x3
  40d93c:	cmp	w4, #0x3
  40d940:	and	w5, w5, #0xfffffffc
  40d944:	mov	w3, w4
  40d948:	b.ls	40d9a8 <parse_rtattr_flags@@Base+0xc8>  // b.plast
  40d94c:	cmp	w19, w4
  40d950:	b.lt	40d9a8 <parse_rtattr_flags@@Base+0xc8>  // b.tstop
  40d954:	ldrh	w4, [x20, #2]
  40d958:	sub	w19, w19, w5
  40d95c:	and	w4, w1, w4
  40d960:	and	x2, x4, #0xffff
  40d964:	cmp	w21, w4, uxth
  40d968:	b.lt	40d928 <parse_rtattr_flags@@Base+0x48>  // b.tstop
  40d96c:	ldr	x0, [x23, x2, lsl #3]
  40d970:	cbnz	x0, 40d928 <parse_rtattr_flags@@Base+0x48>
  40d974:	str	x20, [x23, x2, lsl #3]
  40d978:	cmp	w19, #0x3
  40d97c:	add	x20, x20, w5, uxtw
  40d980:	b.gt	40d934 <parse_rtattr_flags@@Base+0x54>
  40d984:	nop
  40d988:	cbnz	w19, 40d9a4 <parse_rtattr_flags@@Base+0xc4>
  40d98c:	mov	w0, #0x0                   	// #0
  40d990:	ldp	x19, x20, [sp, #16]
  40d994:	ldp	x21, x22, [sp, #32]
  40d998:	ldr	x23, [sp, #48]
  40d99c:	ldp	x29, x30, [sp], #64
  40d9a0:	ret
  40d9a4:	ldrh	w3, [x20]
  40d9a8:	adrp	x0, 421000 <_IO_stdin_used@@Base+0x13490>
  40d9ac:	mov	w2, w19
  40d9b0:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x490>
  40d9b4:	add	x1, x1, #0xda8
  40d9b8:	ldr	x0, [x0, #3992]
  40d9bc:	ldr	x0, [x0]
  40d9c0:	bl	405200 <fprintf@plt>
  40d9c4:	mov	w0, #0x0                   	// #0
  40d9c8:	ldp	x19, x20, [sp, #16]
  40d9cc:	ldp	x21, x22, [sp, #32]
  40d9d0:	ldr	x23, [sp, #48]
  40d9d4:	ldp	x29, x30, [sp], #64
  40d9d8:	ret
  40d9dc:	nop

000000000040d9e0 <parse_rtattr@@Base>:
  40d9e0:	mov	w4, #0x0                   	// #0
  40d9e4:	b	40d8e0 <parse_rtattr_flags@@Base>

000000000040d9e8 <parse_rtattr_one@@Base>:
  40d9e8:	b	40da20 <parse_rtattr_one@@Base+0x38>
  40d9ec:	ldrh	w4, [x1]
  40d9f0:	add	w5, w4, #0x3
  40d9f4:	cmp	w4, #0x3
  40d9f8:	and	w5, w5, #0xfffffffc
  40d9fc:	mov	w3, w4
  40da00:	b.ls	40da38 <parse_rtattr_one@@Base+0x50>  // b.plast
  40da04:	cmp	w2, w4
  40da08:	b.lt	40da38 <parse_rtattr_one@@Base+0x50>  // b.tstop
  40da0c:	ldrh	w3, [x1, #2]
  40da10:	sub	w2, w2, w5
  40da14:	cmp	w3, w0
  40da18:	b.eq	40da64 <parse_rtattr_one@@Base+0x7c>  // b.none
  40da1c:	add	x1, x1, w5, uxtw
  40da20:	cmp	w2, #0x3
  40da24:	b.gt	40d9ec <parse_rtattr_one@@Base+0x4>
  40da28:	mov	x0, #0x0                   	// #0
  40da2c:	cbnz	w2, 40da34 <parse_rtattr_one@@Base+0x4c>
  40da30:	ret
  40da34:	ldrh	w3, [x1]
  40da38:	stp	x29, x30, [sp, #-16]!
  40da3c:	adrp	x0, 421000 <_IO_stdin_used@@Base+0x13490>
  40da40:	adrp	x1, 40e000 <_IO_stdin_used@@Base+0x490>
  40da44:	mov	x29, sp
  40da48:	ldr	x0, [x0, #3992]
  40da4c:	add	x1, x1, #0xda8
  40da50:	ldr	x0, [x0]
  40da54:	bl	405200 <fprintf@plt>
  40da58:	mov	x0, #0x0                   	// #0
  40da5c:	ldp	x29, x30, [sp], #16
  40da60:	ret
  40da64:	mov	x0, x1
  40da68:	ret
  40da6c:	nop

000000000040da70 <__parse_rtattr_nested_compat@@Base>:
  40da70:	ldrh	w5, [x2]
  40da74:	sub	x5, x5, #0x4
  40da78:	cmp	x5, w3, sxtw
  40da7c:	b.cc	40dacc <__parse_rtattr_nested_compat@@Base+0x5c>  // b.lo, b.ul, b.last
  40da80:	add	w4, w3, #0x3
  40da84:	and	x4, x4, #0xfffffffc
  40da88:	add	x4, x4, #0x4
  40da8c:	cmp	x5, x4
  40da90:	b.cs	40dab8 <__parse_rtattr_nested_compat@@Base+0x48>  // b.hs, b.nlast
  40da94:	stp	x29, x30, [sp, #-16]!
  40da98:	add	w2, w1, #0x1
  40da9c:	mov	w1, #0x0                   	// #0
  40daa0:	mov	x29, sp
  40daa4:	sbfiz	x2, x2, #3, #32
  40daa8:	bl	404ec0 <memset@plt>
  40daac:	mov	w0, #0x0                   	// #0
  40dab0:	ldp	x29, x30, [sp], #16
  40dab4:	ret
  40dab8:	ldrh	w3, [x2, x4]
  40dabc:	add	x2, x2, x4
  40dac0:	add	x2, x2, #0x4
  40dac4:	sub	w3, w3, #0x4
  40dac8:	b	40d9e0 <parse_rtattr@@Base>
  40dacc:	mov	w0, #0xffffffff            	// #-1
  40dad0:	ret
  40dad4:	nop

000000000040dad8 <__libc_csu_init@@Base>:
  40dad8:	stp	x29, x30, [sp, #-64]!
  40dadc:	mov	x29, sp
  40dae0:	stp	x19, x20, [sp, #16]
  40dae4:	adrp	x20, 421000 <_IO_stdin_used@@Base+0x13490>
  40dae8:	add	x20, x20, #0xce8
  40daec:	stp	x21, x22, [sp, #32]
  40daf0:	adrp	x21, 421000 <_IO_stdin_used@@Base+0x13490>
  40daf4:	add	x21, x21, #0xce0
  40daf8:	sub	x20, x20, x21
  40dafc:	mov	w22, w0
  40db00:	stp	x23, x24, [sp, #48]
  40db04:	mov	x23, x1
  40db08:	mov	x24, x2
  40db0c:	bl	404ca8 <memcpy@plt-0x38>
  40db10:	cmp	xzr, x20, asr #3
  40db14:	b.eq	40db40 <__libc_csu_init@@Base+0x68>  // b.none
  40db18:	asr	x20, x20, #3
  40db1c:	mov	x19, #0x0                   	// #0
  40db20:	ldr	x3, [x21, x19, lsl #3]
  40db24:	mov	x2, x24
  40db28:	add	x19, x19, #0x1
  40db2c:	mov	x1, x23
  40db30:	mov	w0, w22
  40db34:	blr	x3
  40db38:	cmp	x20, x19
  40db3c:	b.ne	40db20 <__libc_csu_init@@Base+0x48>  // b.any
  40db40:	ldp	x19, x20, [sp, #16]
  40db44:	ldp	x21, x22, [sp, #32]
  40db48:	ldp	x23, x24, [sp, #48]
  40db4c:	ldp	x29, x30, [sp], #64
  40db50:	ret
  40db54:	nop

000000000040db58 <__libc_csu_fini@@Base>:
  40db58:	ret

Disassembly of section .fini:

000000000040db5c <.fini>:
  40db5c:	stp	x29, x30, [sp, #-16]!
  40db60:	mov	x29, sp
  40db64:	ldp	x29, x30, [sp], #16
  40db68:	ret
