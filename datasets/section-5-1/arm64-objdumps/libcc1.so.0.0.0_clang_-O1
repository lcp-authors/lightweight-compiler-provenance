
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libcc1.so.0.0.0_clang_-O1:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000008f50 <.init>:
    8f50:	stp	x29, x30, [sp, #-16]!
    8f54:	mov	x29, sp
    8f58:	bl	9b30 <_ZNSt15basic_streambufIcSt11char_traitsIcEED2Ev@plt+0x10>
    8f5c:	ldp	x29, x30, [sp], #16
    8f60:	ret

Disassembly of section .plt:

0000000000008f70 <_Znam@plt-0x20>:
    8f70:	stp	x16, x30, [sp, #-16]!
    8f74:	adrp	x16, 2e000 <xexit@@Base+0x14c60>
    8f78:	ldr	x17, [x16, #4088]
    8f7c:	add	x16, x16, #0xff8
    8f80:	br	x17
    8f84:	nop
    8f88:	nop
    8f8c:	nop

0000000000008f90 <_Znam@plt>:
    8f90:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    8f94:	ldr	x17, [x16]
    8f98:	add	x16, x16, #0x0
    8f9c:	br	x17

0000000000008fa0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSERKS4_@plt>:
    8fa0:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    8fa4:	ldr	x17, [x16, #8]
    8fa8:	add	x16, x16, #0x8
    8fac:	br	x17

0000000000008fb0 <memcpy@plt>:
    8fb0:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    8fb4:	ldr	x17, [x16, #16]
    8fb8:	add	x16, x16, #0x10
    8fbc:	br	x17

0000000000008fc0 <_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE10deallocateERS6_PS5_m@plt>:
    8fc0:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    8fc4:	ldr	x17, [x16, #24]
    8fc8:	add	x16, x16, #0x18
    8fcc:	br	x17

0000000000008fd0 <_ZSt19__iterator_categoryIPcENSt15iterator_traitsIT_E17iterator_categoryERKS2_@plt>:
    8fd0:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    8fd4:	ldr	x17, [x16, #32]
    8fd8:	add	x16, x16, #0x20
    8fdc:	br	x17

0000000000008fe0 <_ZSt12__relocate_aIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_SaIS5_EET0_T_S9_S8_RT1_@plt>:
    8fe0:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    8fe4:	ldr	x17, [x16, #40]
    8fe8:	add	x16, x16, #0x28
    8fec:	br	x17

0000000000008ff0 <select@plt>:
    8ff0:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    8ff4:	ldr	x17, [x16, #48]
    8ff8:	add	x16, x16, #0x30
    8ffc:	br	x17

0000000000009000 <_ZSt11__addressofIcEPT_RS0_@plt>:
    9000:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    9004:	ldr	x17, [x16, #56]
    9008:	add	x16, x16, #0x38
    900c:	br	x17

0000000000009010 <_ZNSaIcED2Ev@plt>:
    9010:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    9014:	ldr	x17, [x16, #64]
    9018:	add	x16, x16, #0x40
    901c:	br	x17

0000000000009020 <_ZNSt12_Destroy_auxILb0EE9__destroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvT_S9_@plt>:
    9020:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    9024:	ldr	x17, [x16, #72]
    9028:	add	x16, x16, #0x48
    902c:	br	x17

0000000000009030 <xregcomp@plt>:
    9030:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    9034:	ldr	x17, [x16, #80]
    9038:	add	x16, x16, #0x50
    903c:	br	x17

0000000000009040 <_ZSt10__distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_iterator_tag@plt>:
    9040:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    9044:	ldr	x17, [x16, #88]
    9048:	add	x16, x16, #0x58
    904c:	br	x17

0000000000009050 <execvp@plt>:
    9050:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    9054:	ldr	x17, [x16, #96]
    9058:	add	x16, x16, #0x60
    905c:	br	x17

0000000000009060 <socketpair@plt>:
    9060:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    9064:	ldr	x17, [x16, #104]
    9068:	add	x16, x16, #0x68
    906c:	br	x17

0000000000009070 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_@plt>:
    9070:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    9074:	ldr	x17, [x16, #112]
    9078:	add	x16, x16, #0x70
    907c:	br	x17

0000000000009080 <calloc@plt>:
    9080:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    9084:	ldr	x17, [x16, #120]
    9088:	add	x16, x16, #0x78
    908c:	br	x17

0000000000009090 <_ZNSaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC2Ev@plt>:
    9090:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    9094:	ldr	x17, [x16, #128]
    9098:	add	x16, x16, #0x80
    909c:	br	x17

00000000000090a0 <_ZN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC2IPcEERKNS0_IT_NS_11__enable_ifIXsr3std10__are_sameISC_SB_EE7__valueES8_E6__typeEEE@plt>:
    90a0:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    90a4:	ldr	x17, [x16, #136]
    90a8:	add	x16, x16, #0x88
    90ac:	br	x17

00000000000090b0 <pipe@plt>:
    90b0:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    90b4:	ldr	x17, [x16, #144]
    90b8:	add	x16, x16, #0x90
    90bc:	br	x17

00000000000090c0 <dup2@plt>:
    90c0:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    90c4:	ldr	x17, [x16, #152]
    90c8:	add	x16, x16, #0x98
    90cc:	br	x17

00000000000090d0 <_ZSt9terminatev@plt>:
    90d0:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    90d4:	ldr	x17, [x16, #160]
    90d8:	add	x16, x16, #0xa0
    90dc:	br	x17

00000000000090e0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc@plt>:
    90e0:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    90e4:	ldr	x17, [x16, #168]
    90e8:	add	x16, x16, #0xa8
    90ec:	br	x17

00000000000090f0 <xre_compile_fastmap@plt>:
    90f0:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    90f4:	ldr	x17, [x16, #176]
    90f8:	add	x16, x16, #0xb0
    90fc:	br	x17

0000000000009100 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcS5_S5_@plt>:
    9100:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    9104:	ldr	x17, [x16, #184]
    9108:	add	x16, x16, #0xb8
    910c:	br	x17

0000000000009110 <strlen@plt>:
    9110:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    9114:	ldr	x17, [x16, #192]
    9118:	add	x16, x16, #0xc0
    911c:	br	x17

0000000000009120 <fprintf@plt>:
    9120:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    9124:	ldr	x17, [x16, #200]
    9128:	add	x16, x16, #0xc8
    912c:	br	x17

0000000000009130 <xregfree@plt>:
    9130:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    9134:	ldr	x17, [x16, #208]
    9138:	add	x16, x16, #0xd0
    913c:	br	x17

0000000000009140 <_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE8allocateEmPKv@plt>:
    9140:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    9144:	ldr	x17, [x16, #216]
    9148:	add	x16, x16, #0xd8
    914c:	br	x17

0000000000009150 <waitpid@plt>:
    9150:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    9154:	ldr	x17, [x16, #224]
    9158:	add	x16, x16, #0xe0
    915c:	br	x17

0000000000009160 <_ZSt17__throw_bad_allocv@plt>:
    9160:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    9164:	ldr	x17, [x16, #232]
    9168:	add	x16, x16, #0xe8
    916c:	br	x17

0000000000009170 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag@plt>:
    9170:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    9174:	ldr	x17, [x16, #240]
    9178:	add	x16, x16, #0xf0
    917c:	br	x17

0000000000009180 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_@plt>:
    9180:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    9184:	ldr	x17, [x16, #248]
    9188:	add	x16, x16, #0xf8
    918c:	br	x17

0000000000009190 <htab_create_alloc@plt>:
    9190:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    9194:	ldr	x17, [x16, #256]
    9198:	add	x16, x16, #0x100
    919c:	br	x17

00000000000091a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag@plt>:
    91a0:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    91a4:	ldr	x17, [x16, #264]
    91a8:	add	x16, x16, #0x108
    91ac:	br	x17

00000000000091b0 <_ZNK9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEE4baseEv@plt>:
    91b0:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    91b4:	ldr	x17, [x16, #272]
    91b8:	add	x16, x16, #0x110
    91bc:	br	x17

00000000000091c0 <__cxa_begin_catch@plt>:
    91c0:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    91c4:	ldr	x17, [x16, #280]
    91c8:	add	x16, x16, #0x118
    91cc:	br	x17

00000000000091d0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv@plt>:
    91d0:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    91d4:	ldr	x17, [x16, #288]
    91d8:	add	x16, x16, #0x120
    91dc:	br	x17

00000000000091e0 <_ZN9__gnu_cxx17__is_null_pointerIcEEbPT_@plt>:
    91e0:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    91e4:	ldr	x17, [x16, #296]
    91e8:	add	x16, x16, #0x128
    91ec:	br	x17

00000000000091f0 <xstrdup@plt>:
    91f0:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    91f4:	ldr	x17, [x16, #304]
    91f8:	add	x16, x16, #0x130
    91fc:	br	x17

0000000000009200 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev@plt>:
    9200:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    9204:	ldr	x17, [x16, #312]
    9208:	add	x16, x16, #0x138
    920c:	br	x17

0000000000009210 <_ZSt9addressofIcEPT_RS0_@plt>:
    9210:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    9214:	ldr	x17, [x16, #320]
    9218:	add	x16, x16, #0x140
    921c:	br	x17

0000000000009220 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_@plt>:
    9220:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    9224:	ldr	x17, [x16, #328]
    9228:	add	x16, x16, #0x148
    922c:	br	x17

0000000000009230 <_ZSt20__throw_length_errorPKc@plt>:
    9230:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    9234:	ldr	x17, [x16, #336]
    9238:	add	x16, x16, #0x150
    923c:	br	x17

0000000000009240 <free@plt>:
    9240:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    9244:	ldr	x17, [x16, #344]
    9248:	add	x16, x16, #0x158
    924c:	br	x17

0000000000009250 <memset@plt>:
    9250:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    9254:	ldr	x17, [x16, #352]
    9258:	add	x16, x16, #0x160
    925c:	br	x17

0000000000009260 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@plt>:
    9260:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    9264:	ldr	x17, [x16, #360]
    9268:	add	x16, x16, #0x168
    926c:	br	x17

0000000000009270 <_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE10deallocateEPS6_m@plt>:
    9270:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    9274:	ldr	x17, [x16, #368]
    9278:	add	x16, x16, #0x170
    927c:	br	x17

0000000000009280 <_ZN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEEC2ERKS7_@plt>:
    9280:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    9284:	ldr	x17, [x16, #376]
    9288:	add	x16, x16, #0x178
    928c:	br	x17

0000000000009290 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE3endEv@plt>:
    9290:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    9294:	ldr	x17, [x16, #384]
    9298:	add	x16, x16, #0x180
    929c:	br	x17

00000000000092a0 <__cxa_finalize@plt>:
    92a0:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    92a4:	ldr	x17, [x16, #392]
    92a8:	add	x16, x16, #0x188
    92ac:	br	x17

00000000000092b0 <realloc@plt>:
    92b0:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    92b4:	ldr	x17, [x16, #400]
    92b8:	add	x16, x16, #0x190
    92bc:	br	x17

00000000000092c0 <xregexec@plt>:
    92c0:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    92c4:	ldr	x17, [x16, #408]
    92c8:	add	x16, x16, #0x198
    92cc:	br	x17

00000000000092d0 <_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE9constructIS6_JS6_EEEvPT_DpOT0_@plt>:
    92d0:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    92d4:	ldr	x17, [x16, #416]
    92d8:	add	x16, x16, #0x1a0
    92dc:	br	x17

00000000000092e0 <_exit@plt>:
    92e0:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    92e4:	ldr	x17, [x16, #424]
    92e8:	add	x16, x16, #0x1a8
    92ec:	br	x17

00000000000092f0 <htab_find_slot_with_hash@plt>:
    92f0:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    92f4:	ldr	x17, [x16, #432]
    92f8:	add	x16, x16, #0x1b0
    92fc:	br	x17

0000000000009300 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_S5_@plt>:
    9300:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    9304:	ldr	x17, [x16, #440]
    9308:	add	x16, x16, #0x1b8
    930c:	br	x17

0000000000009310 <htab_create_typed_alloc@plt>:
    9310:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    9314:	ldr	x17, [x16, #448]
    9318:	add	x16, x16, #0x1c0
    931c:	br	x17

0000000000009320 <read@plt>:
    9320:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    9324:	ldr	x17, [x16, #456]
    9328:	add	x16, x16, #0x1c8
    932c:	br	x17

0000000000009330 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm@plt>:
    9330:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    9334:	ldr	x17, [x16, #464]
    9338:	add	x16, x16, #0x1d0
    933c:	br	x17

0000000000009340 <_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEC1Ev@plt>:
    9340:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    9344:	ldr	x17, [x16, #472]
    9348:	add	x16, x16, #0x1d8
    934c:	br	x17

0000000000009350 <_ZSt19__throw_logic_errorPKc@plt>:
    9350:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    9354:	ldr	x17, [x16, #480]
    9358:	add	x16, x16, #0x1e0
    935c:	br	x17

0000000000009360 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev@plt>:
    9360:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    9364:	ldr	x17, [x16, #488]
    9368:	add	x16, x16, #0x1e8
    936c:	br	x17

0000000000009370 <_ZN9__gnu_cxx17__is_null_pointerIKcEEbPT_@plt>:
    9370:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    9374:	ldr	x17, [x16, #496]
    9378:	add	x16, x16, #0x1f0
    937c:	br	x17

0000000000009380 <htab_find@plt>:
    9380:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    9384:	ldr	x17, [x16, #504]
    9388:	add	x16, x16, #0x1f8
    938c:	br	x17

0000000000009390 <_ZSt3minImERKT_S2_S2_@plt>:
    9390:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    9394:	ldr	x17, [x16, #512]
    9398:	add	x16, x16, #0x200
    939c:	br	x17

00000000000093a0 <_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev@plt>:
    93a0:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    93a4:	ldr	x17, [x16, #520]
    93a8:	add	x16, x16, #0x208
    93ac:	br	x17

00000000000093b0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backEOS5_@plt>:
    93b0:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    93b4:	ldr	x17, [x16, #528]
    93b8:	add	x16, x16, #0x210
    93bc:	br	x17

00000000000093c0 <closedir@plt>:
    93c0:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    93c4:	ldr	x17, [x16, #536]
    93c8:	add	x16, x16, #0x218
    93cc:	br	x17

00000000000093d0 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_M_check_lenEmPKc@plt>:
    93d0:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    93d4:	ldr	x17, [x16, #544]
    93d8:	add	x16, x16, #0x220
    93dc:	br	x17

00000000000093e0 <_ZSt10__distanceIPcENSt15iterator_traitsIT_E15difference_typeES2_S2_St26random_access_iterator_tag@plt>:
    93e0:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    93e4:	ldr	x17, [x16, #552]
    93e8:	add	x16, x16, #0x228
    93ec:	br	x17

00000000000093f0 <_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE9constructIS6_JRKS6_EEEvPT_DpOT0_@plt>:
    93f0:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    93f4:	ldr	x17, [x16, #560]
    93f8:	add	x16, x16, #0x230
    93fc:	br	x17

0000000000009400 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE8max_sizeEv@plt>:
    9400:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    9404:	ldr	x17, [x16, #568]
    9408:	add	x16, x16, #0x238
    940c:	br	x17

0000000000009410 <_ZSt11__addressofINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEPT_RS6_@plt>:
    9410:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    9414:	ldr	x17, [x16, #576]
    9418:	add	x16, x16, #0x240
    941c:	br	x17

0000000000009420 <concat@plt>:
    9420:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    9424:	ldr	x17, [x16, #584]
    9428:	add	x16, x16, #0x248
    942c:	br	x17

0000000000009430 <xmalloc_failed@plt>:
    9430:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    9434:	ldr	x17, [x16, #592]
    9438:	add	x16, x16, #0x250
    943c:	br	x17

0000000000009440 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc@plt>:
    9440:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    9444:	ldr	x17, [x16, #600]
    9448:	add	x16, x16, #0x258
    944c:	br	x17

0000000000009450 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2Ev@plt>:
    9450:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    9454:	ldr	x17, [x16, #608]
    9458:	add	x16, x16, #0x260
    945c:	br	x17

0000000000009460 <_ZNK9__gnu_cxx13new_allocatorIcE8max_sizeEv@plt>:
    9460:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    9464:	ldr	x17, [x16, #616]
    9468:	add	x16, x16, #0x268
    946c:	br	x17

0000000000009470 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5beginEv@plt>:
    9470:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    9474:	ldr	x17, [x16, #624]
    9478:	add	x16, x16, #0x270
    947c:	br	x17

0000000000009480 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2Ev@plt>:
    9480:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    9484:	ldr	x17, [x16, #632]
    9488:	add	x16, x16, #0x278
    948c:	br	x17

0000000000009490 <_ZSt8distanceIPcENSt15iterator_traitsIT_E15difference_typeES2_S2_@plt>:
    9490:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    9494:	ldr	x17, [x16, #640]
    9498:	add	x16, x16, #0x280
    949c:	br	x17

00000000000094a0 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_Vector_impl_dataC2Ev@plt>:
    94a0:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    94a4:	ldr	x17, [x16, #648]
    94a8:	add	x16, x16, #0x288
    94ac:	br	x17

00000000000094b0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_S_relocateEPS5_S8_S8_RS6_@plt>:
    94b0:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    94b4:	ldr	x17, [x16, #656]
    94b8:	add	x16, x16, #0x290
    94bc:	br	x17

00000000000094c0 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev@plt>:
    94c0:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    94c4:	ldr	x17, [x16, #664]
    94c8:	add	x16, x16, #0x298
    94cc:	br	x17

00000000000094d0 <_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE9constructIS5_JRKS5_EEEvRS6_PT_DpOT0_@plt>:
    94d0:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    94d4:	ldr	x17, [x16, #672]
    94d8:	add	x16, x16, #0x2a0
    94dc:	br	x17

00000000000094e0 <htab_hash_string@plt>:
    94e0:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    94e4:	ldr	x17, [x16, #680]
    94e8:	add	x16, x16, #0x2a8
    94ec:	br	x17

00000000000094f0 <_ZdlPv@plt>:
    94f0:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    94f4:	ldr	x17, [x16, #688]
    94f8:	add	x16, x16, #0x2b0
    94fc:	br	x17

0000000000009500 <_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_@plt>:
    9500:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    9504:	ldr	x17, [x16, #696]
    9508:	add	x16, x16, #0x2b8
    950c:	br	x17

0000000000009510 <_ZNKSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEE3strEv@plt>:
    9510:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    9514:	ldr	x17, [x16, #704]
    9518:	add	x16, x16, #0x2c0
    951c:	br	x17

0000000000009520 <_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE9constructIS5_JS5_EEEvRS6_PT_DpOT0_@plt>:
    9520:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    9524:	ldr	x17, [x16, #712]
    9528:	add	x16, x16, #0x2c8
    952c:	br	x17

0000000000009530 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>:
    9530:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    9534:	ldr	x17, [x16, #720]
    9538:	add	x16, x16, #0x2d0
    953c:	br	x17

0000000000009540 <_Znwm@plt>:
    9540:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    9544:	ldr	x17, [x16, #728]
    9548:	add	x16, x16, #0x2d8
    954c:	br	x17

0000000000009550 <readdir@plt>:
    9550:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    9554:	ldr	x17, [x16, #736]
    9558:	add	x16, x16, #0x2e0
    955c:	br	x17

0000000000009560 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6substrEmm@plt>:
    9560:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    9564:	ldr	x17, [x16, #744]
    9568:	add	x16, x16, #0x2e8
    956c:	br	x17

0000000000009570 <_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE8allocateERS6_m@plt>:
    9570:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    9574:	ldr	x17, [x16, #752]
    9578:	add	x16, x16, #0x2f0
    957c:	br	x17

0000000000009580 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEmc@plt>:
    9580:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    9584:	ldr	x17, [x16, #760]
    9588:	add	x16, x16, #0x2f8
    958c:	br	x17

0000000000009590 <_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC2Ev@plt>:
    9590:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    9594:	ldr	x17, [x16, #768]
    9598:	add	x16, x16, #0x300
    959c:	br	x17

00000000000095a0 <opendir@plt>:
    95a0:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    95a4:	ldr	x17, [x16, #776]
    95a8:	add	x16, x16, #0x308
    95ac:	br	x17

00000000000095b0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv@plt>:
    95b0:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    95b4:	ldr	x17, [x16, #784]
    95b8:	add	x16, x16, #0x310
    95bc:	br	x17

00000000000095c0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcPKcS7_@plt>:
    95c0:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    95c4:	ldr	x17, [x16, #792]
    95c8:	add	x16, x16, #0x318
    95cc:	br	x17

00000000000095d0 <__ctype_b_loc@plt>:
    95d0:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    95d4:	ldr	x17, [x16, #800]
    95d8:	add	x16, x16, #0x320
    95dc:	br	x17

00000000000095e0 <_ZSt18__do_alloc_on_moveISaIcEEvRT_S2_St17integral_constantIbLb1EE@plt>:
    95e0:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    95e4:	ldr	x17, [x16, #808]
    95e8:	add	x16, x16, #0x328
    95ec:	br	x17

00000000000095f0 <snprintf@plt>:
    95f0:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    95f4:	ldr	x17, [x16, #816]
    95f8:	add	x16, x16, #0x330
    95fc:	br	x17

0000000000009600 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>:
    9600:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    9604:	ldr	x17, [x16, #824]
    9608:	add	x16, x16, #0x338
    960c:	br	x17

0000000000009610 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_M_allocateEm@plt>:
    9610:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    9614:	ldr	x17, [x16, #832]
    9618:	add	x16, x16, #0x340
    961c:	br	x17

0000000000009620 <xre_search@plt>:
    9620:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    9624:	ldr	x17, [x16, #840]
    9628:	add	x16, x16, #0x348
    962c:	br	x17

0000000000009630 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@plt>:
    9630:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    9634:	ldr	x17, [x16, #848]
    9638:	add	x16, x16, #0x350
    963c:	br	x17

0000000000009640 <sbrk@plt>:
    9640:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    9644:	ldr	x17, [x16, #856]
    9648:	add	x16, x16, #0x358
    964c:	br	x17

0000000000009650 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_@plt>:
    9650:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    9654:	ldr	x17, [x16, #864]
    9658:	add	x16, x16, #0x360
    965c:	br	x17

0000000000009660 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_Vector_implC2Ev@plt>:
    9660:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    9664:	ldr	x17, [x16, #872]
    9668:	add	x16, x16, #0x368
    966c:	br	x17

0000000000009670 <htab_remove_elt_with_hash@plt>:
    9670:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    9674:	ldr	x17, [x16, #880]
    9678:	add	x16, x16, #0x370
    967c:	br	x17

0000000000009680 <htab_find_slot@plt>:
    9680:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    9684:	ldr	x17, [x16, #888]
    9688:	add	x16, x16, #0x378
    968c:	br	x17

0000000000009690 <_ZSt7forwardIRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS8_E4typeE@plt>:
    9690:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    9694:	ldr	x17, [x16, #896]
    9698:	add	x16, x16, #0x380
    969c:	br	x17

00000000000096a0 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE13_M_deallocateEPS5_m@plt>:
    96a0:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    96a4:	ldr	x17, [x16, #904]
    96a8:	add	x16, x16, #0x388
    96ac:	br	x17

00000000000096b0 <_ZdaPv@plt>:
    96b0:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    96b4:	ldr	x17, [x16, #912]
    96b8:	add	x16, x16, #0x390
    96bc:	br	x17

00000000000096c0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_@plt>:
    96c0:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    96c4:	ldr	x17, [x16, #920]
    96c8:	add	x16, x16, #0x398
    96cc:	br	x17

00000000000096d0 <__errno_location@plt>:
    96d0:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    96d4:	ldr	x17, [x16, #928]
    96d8:	add	x16, x16, #0x3a0
    96dc:	br	x17

00000000000096e0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEcm@plt>:
    96e0:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    96e4:	ldr	x17, [x16, #936]
    96e8:	add	x16, x16, #0x3a8
    96ec:	br	x17

00000000000096f0 <_ZNK9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE4baseEv@plt>:
    96f0:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    96f4:	ldr	x17, [x16, #944]
    96f8:	add	x16, x16, #0x3b0
    96fc:	br	x17

0000000000009700 <_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E@plt>:
    9700:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    9704:	ldr	x17, [x16, #952]
    9708:	add	x16, x16, #0x3b8
    970c:	br	x17

0000000000009710 <_ZNK9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE4baseEv@plt>:
    9710:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    9714:	ldr	x17, [x16, #960]
    9718:	add	x16, x16, #0x3c0
    971c:	br	x17

0000000000009720 <_ZSt3maxImERKT_S2_S2_@plt>:
    9720:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    9724:	ldr	x17, [x16, #968]
    9728:	add	x16, x16, #0x3c8
    972c:	br	x17

0000000000009730 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc@plt>:
    9730:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    9734:	ldr	x17, [x16, #976]
    9738:	add	x16, x16, #0x3d0
    973c:	br	x17

0000000000009740 <__ctype_tolower_loc@plt>:
    9740:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    9744:	ldr	x17, [x16, #984]
    9748:	add	x16, x16, #0x3d8
    974c:	br	x17

0000000000009750 <_ZSt9addressofIKcEPT_RS1_@plt>:
    9750:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    9754:	ldr	x17, [x16, #992]
    9758:	add	x16, x16, #0x3e0
    975c:	br	x17

0000000000009760 <htab_traverse_noresize@plt>:
    9760:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    9764:	ldr	x17, [x16, #1000]
    9768:	add	x16, x16, #0x3e8
    976c:	br	x17

0000000000009770 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEN9__gnu_cxx17__normal_iteratorIPKcS4_EES9_PcSA_@plt>:
    9770:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    9774:	ldr	x17, [x16, #1008]
    9778:	add	x16, x16, #0x3f0
    977c:	br	x17

0000000000009780 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_@plt>:
    9780:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    9784:	ldr	x17, [x16, #1016]
    9788:	add	x16, x16, #0x3f8
    978c:	br	x17

0000000000009790 <xmalloc@plt>:
    9790:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    9794:	ldr	x17, [x16, #1024]
    9798:	add	x16, x16, #0x400
    979c:	br	x17

00000000000097a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_construct_auxIPcEEvT_S7_St12__false_type@plt>:
    97a0:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    97a4:	ldr	x17, [x16, #1032]
    97a8:	add	x16, x16, #0x408
    97ac:	br	x17

00000000000097b0 <fork@plt>:
    97b0:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    97b4:	ldr	x17, [x16, #1040]
    97b8:	add	x16, x16, #0x410
    97bc:	br	x17

00000000000097c0 <_ZSt4moveIRSaIcEEONSt16remove_referenceIT_E4typeEOS3_@plt>:
    97c0:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    97c4:	ldr	x17, [x16, #1048]
    97c8:	add	x16, x16, #0x418
    97cc:	br	x17

00000000000097d0 <_ZSt19__iterator_categoryIPKcENSt15iterator_traitsIT_E17iterator_categoryERKS3_@plt>:
    97d0:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    97d4:	ldr	x17, [x16, #1056]
    97d8:	add	x16, x16, #0x420
    97dc:	br	x17

00000000000097e0 <_ZNSaIcEC2ERKS_@plt>:
    97e0:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    97e4:	ldr	x17, [x16, #1064]
    97e8:	add	x16, x16, #0x428
    97ec:	br	x17

00000000000097f0 <close@plt>:
    97f0:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    97f4:	ldr	x17, [x16, #1072]
    97f8:	add	x16, x16, #0x430
    97fc:	br	x17

0000000000009800 <strcmp@plt>:
    9800:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    9804:	ldr	x17, [x16, #1080]
    9808:	add	x16, x16, #0x438
    980c:	br	x17

0000000000009810 <__cxa_rethrow@plt>:
    9810:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    9814:	ldr	x17, [x16, #1088]
    9818:	add	x16, x16, #0x440
    981c:	br	x17

0000000000009820 <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE@plt>:
    9820:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    9824:	ldr	x17, [x16, #1096]
    9828:	add	x16, x16, #0x448
    982c:	br	x17

0000000000009830 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE14_S_do_relocateEPS5_S8_S8_RS6_St17integral_constantIbLb1EE@plt>:
    9830:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    9834:	ldr	x17, [x16, #1104]
    9838:	add	x16, x16, #0x450
    983c:	br	x17

0000000000009840 <write@plt>:
    9840:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    9844:	ldr	x17, [x16, #1112]
    9848:	add	x16, x16, #0x458
    984c:	br	x17

0000000000009850 <_ZN9__gnu_cxx13new_allocatorIcE10deallocateEPcm@plt>:
    9850:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    9854:	ldr	x17, [x16, #1120]
    9858:	add	x16, x16, #0x460
    985c:	br	x17

0000000000009860 <malloc@plt>:
    9860:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    9864:	ldr	x17, [x16, #1128]
    9868:	add	x16, x16, #0x468
    986c:	br	x17

0000000000009870 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@plt>:
    9870:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    9874:	ldr	x17, [x16, #1136]
    9878:	add	x16, x16, #0x470
    987c:	br	x17

0000000000009880 <_ZSt8distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_@plt>:
    9880:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    9884:	ldr	x17, [x16, #1144]
    9888:	add	x16, x16, #0x478
    988c:	br	x17

0000000000009890 <xexit@plt>:
    9890:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    9894:	ldr	x17, [x16, #1152]
    9898:	add	x16, x16, #0x480
    989c:	br	x17

00000000000098a0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_S_max_sizeERKS6_@plt>:
    98a0:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    98a4:	ldr	x17, [x16, #1160]
    98a8:	add	x16, x16, #0x488
    98ac:	br	x17

00000000000098b0 <abort@plt>:
    98b0:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    98b4:	ldr	x17, [x16, #1168]
    98b8:	add	x16, x16, #0x490
    98bc:	br	x17

00000000000098c0 <_ZSt12__niter_baseIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEET_S7_@plt>:
    98c0:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    98c4:	ldr	x17, [x16, #1176]
    98c8:	add	x16, x16, #0x498
    98cc:	br	x17

00000000000098d0 <getenv@plt>:
    98d0:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    98d4:	ldr	x17, [x16, #1184]
    98d8:	add	x16, x16, #0x4a0
    98dc:	br	x17

00000000000098e0 <_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvT_S7_@plt>:
    98e0:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    98e4:	ldr	x17, [x16, #1192]
    98e8:	add	x16, x16, #0x4a8
    98ec:	br	x17

00000000000098f0 <__cxa_end_catch@plt>:
    98f0:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    98f4:	ldr	x17, [x16, #1200]
    98f8:	add	x16, x16, #0x4b0
    98fc:	br	x17

0000000000009900 <_ZSt11__addressofIKcEPT_RS1_@plt>:
    9900:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    9904:	ldr	x17, [x16, #1208]
    9908:	add	x16, x16, #0x4b8
    990c:	br	x17

0000000000009910 <_ZnamRKSt9nothrow_t@plt>:
    9910:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    9914:	ldr	x17, [x16, #1216]
    9918:	add	x16, x16, #0x4c0
    991c:	br	x17

0000000000009920 <_ZNSaIcEC2Ev@plt>:
    9920:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    9924:	ldr	x17, [x16, #1224]
    9928:	add	x16, x16, #0x4c8
    992c:	br	x17

0000000000009930 <__gxx_personality_v0@plt>:
    9930:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    9934:	ldr	x17, [x16, #1232]
    9938:	add	x16, x16, #0x4d0
    993c:	br	x17

0000000000009940 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE5beginEv@plt>:
    9940:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    9944:	ldr	x17, [x16, #1240]
    9948:	add	x16, x16, #0x4d8
    994c:	br	x17

0000000000009950 <_ZNKSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_get_Tp_allocatorEv@plt>:
    9950:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    9954:	ldr	x17, [x16, #1248]
    9958:	add	x16, x16, #0x4e0
    995c:	br	x17

0000000000009960 <htab_find_with_hash@plt>:
    9960:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    9964:	ldr	x17, [x16, #1256]
    9968:	add	x16, x16, #0x4e8
    996c:	br	x17

0000000000009970 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE3endEv@plt>:
    9970:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    9974:	ldr	x17, [x16, #1264]
    9978:	add	x16, x16, #0x4f0
    997c:	br	x17

0000000000009980 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_construct_auxIPKcEEvT_S8_St12__false_type@plt>:
    9980:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    9984:	ldr	x17, [x16, #1272]
    9988:	add	x16, x16, #0x4f8
    998c:	br	x17

0000000000009990 <_ZSt14__relocate_a_1IPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_SaIS5_EET0_T_S9_S8_RT1_@plt>:
    9990:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    9994:	ldr	x17, [x16, #1280]
    9998:	add	x16, x16, #0x500
    999c:	br	x17

00000000000099a0 <xregerror@plt>:
    99a0:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    99a4:	ldr	x17, [x16, #1288]
    99a8:	add	x16, x16, #0x508
    99ac:	br	x17

00000000000099b0 <exit@plt>:
    99b0:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    99b4:	ldr	x17, [x16, #1296]
    99b8:	add	x16, x16, #0x510
    99bc:	br	x17

00000000000099c0 <_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE8max_sizeERKS6_@plt>:
    99c0:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    99c4:	ldr	x17, [x16, #1304]
    99c8:	add	x16, x16, #0x518
    99cc:	br	x17

00000000000099d0 <_ZN9__gnu_cxxmiIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSE_SH_@plt>:
    99d0:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    99d4:	ldr	x17, [x16, #1312]
    99d8:	add	x16, x16, #0x520
    99dc:	br	x17

00000000000099e0 <htab_delete@plt>:
    99e0:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    99e4:	ldr	x17, [x16, #1320]
    99e8:	add	x16, x16, #0x528
    99ec:	br	x17

00000000000099f0 <_ZNK9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE8max_sizeEv@plt>:
    99f0:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    99f4:	ldr	x17, [x16, #1328]
    99f8:	add	x16, x16, #0x530
    99fc:	br	x17

0000000000009a00 <_Unwind_Resume@plt>:
    9a00:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    9a04:	ldr	x17, [x16, #1336]
    9a08:	add	x16, x16, #0x538
    9a0c:	br	x17

0000000000009a10 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2Ev@plt>:
    9a10:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    9a14:	ldr	x17, [x16, #1344]
    9a18:	add	x16, x16, #0x540
    9a1c:	br	x17

0000000000009a20 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>:
    9a20:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    9a24:	ldr	x17, [x16, #1352]
    9a28:	add	x16, x16, #0x548
    9a2c:	br	x17

0000000000009a30 <_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE7destroyIS6_EEvPT_@plt>:
    9a30:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    9a34:	ldr	x17, [x16, #1360]
    9a38:	add	x16, x16, #0x550
    9a3c:	br	x17

0000000000009a40 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv@plt>:
    9a40:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    9a44:	ldr	x17, [x16, #1368]
    9a48:	add	x16, x16, #0x558
    9a4c:	br	x17

0000000000009a50 <_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE7destroyIS5_EEvRS6_PT_@plt>:
    9a50:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    9a54:	ldr	x17, [x16, #1376]
    9a58:	add	x16, x16, #0x560
    9a5c:	br	x17

0000000000009a60 <xre_search_2@plt>:
    9a60:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    9a64:	ldr	x17, [x16, #1384]
    9a68:	add	x16, x16, #0x568
    9a6c:	br	x17

0000000000009a70 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEixEm@plt>:
    9a70:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    9a74:	ldr	x17, [x16, #1392]
    9a78:	add	x16, x16, #0x570
    9a7c:	br	x17

0000000000009a80 <_ZSt19__relocate_object_aINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_SaIS5_EEvPT_PT0_RT1_@plt>:
    9a80:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    9a84:	ldr	x17, [x16, #1400]
    9a88:	add	x16, x16, #0x578
    9a8c:	br	x17

0000000000009a90 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12emplace_backIJS5_EEEvDpOT_@plt>:
    9a90:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    9a94:	ldr	x17, [x16, #1408]
    9a98:	add	x16, x16, #0x580
    9a9c:	br	x17

0000000000009aa0 <__gmon_start__@plt>:
    9aa0:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    9aa4:	ldr	x17, [x16, #1416]
    9aa8:	add	x16, x16, #0x588
    9aac:	br	x17

0000000000009ab0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKc@plt>:
    9ab0:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    9ab4:	ldr	x17, [x16, #1424]
    9ab8:	add	x16, x16, #0x590
    9abc:	br	x17

0000000000009ac0 <bcmp@plt>:
    9ac0:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    9ac4:	ldr	x17, [x16, #1432]
    9ac8:	add	x16, x16, #0x598
    9acc:	br	x17

0000000000009ad0 <_ZNSt16allocator_traitsISaIcEE37select_on_container_copy_constructionERKS0_@plt>:
    9ad0:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    9ad4:	ldr	x17, [x16, #1440]
    9ad8:	add	x16, x16, #0x5a0
    9adc:	br	x17

0000000000009ae0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEm@plt>:
    9ae0:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    9ae4:	ldr	x17, [x16, #1448]
    9ae8:	add	x16, x16, #0x5a8
    9aec:	br	x17

0000000000009af0 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_get_Tp_allocatorEv@plt>:
    9af0:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    9af4:	ldr	x17, [x16, #1456]
    9af8:	add	x16, x16, #0x5b0
    9afc:	br	x17

0000000000009b00 <_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev@plt>:
    9b00:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    9b04:	ldr	x17, [x16, #1464]
    9b08:	add	x16, x16, #0x5b8
    9b0c:	br	x17

0000000000009b10 <_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_@plt>:
    9b10:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    9b14:	ldr	x17, [x16, #1472]
    9b18:	add	x16, x16, #0x5c0
    9b1c:	br	x17

0000000000009b20 <_ZNSt15basic_streambufIcSt11char_traitsIcEED2Ev@plt>:
    9b20:	adrp	x16, 2f000 <_Znam@GLIBCXX_3.4>
    9b24:	ldr	x17, [x16, #1480]
    9b28:	add	x16, x16, #0x5c8
    9b2c:	br	x17

Disassembly of section .text:

0000000000009b30 <_ZN9__gnu_cxx13new_allocatorIcEC2Ev@@Base-0x3e8>:
    9b30:	adrp	x0, 2e000 <xexit@@Base+0x14c60>
    9b34:	ldr	x0, [x0, #3960]
    9b38:	cbz	x0, 9b40 <_ZNSt15basic_streambufIcSt11char_traitsIcEED2Ev@plt+0x20>
    9b3c:	b	9aa0 <__gmon_start__@plt>
    9b40:	ret
    9b44:	nop
    9b48:	adrp	x0, 2f000 <xexit@@Base+0x15c60>
    9b4c:	add	x0, x0, #0x8e8
    9b50:	adrp	x1, 2f000 <xexit@@Base+0x15c60>
    9b54:	add	x1, x1, #0x8e8
    9b58:	cmp	x1, x0
    9b5c:	b.eq	9b74 <_ZNSt15basic_streambufIcSt11char_traitsIcEED2Ev@plt+0x54>  // b.none
    9b60:	adrp	x1, 2e000 <xexit@@Base+0x14c60>
    9b64:	ldr	x1, [x1, #3904]
    9b68:	cbz	x1, 9b74 <_ZNSt15basic_streambufIcSt11char_traitsIcEED2Ev@plt+0x54>
    9b6c:	mov	x16, x1
    9b70:	br	x16
    9b74:	ret
    9b78:	adrp	x0, 2f000 <xexit@@Base+0x15c60>
    9b7c:	add	x0, x0, #0x8e8
    9b80:	adrp	x1, 2f000 <xexit@@Base+0x15c60>
    9b84:	add	x1, x1, #0x8e8
    9b88:	sub	x1, x1, x0
    9b8c:	lsr	x2, x1, #63
    9b90:	add	x1, x2, x1, asr #3
    9b94:	cmp	xzr, x1, asr #1
    9b98:	asr	x1, x1, #1
    9b9c:	b.eq	9bb4 <_ZNSt15basic_streambufIcSt11char_traitsIcEED2Ev@plt+0x94>  // b.none
    9ba0:	adrp	x2, 2e000 <xexit@@Base+0x14c60>
    9ba4:	ldr	x2, [x2, #3992]
    9ba8:	cbz	x2, 9bb4 <_ZNSt15basic_streambufIcSt11char_traitsIcEED2Ev@plt+0x94>
    9bac:	mov	x16, x2
    9bb0:	br	x16
    9bb4:	ret
    9bb8:	stp	x29, x30, [sp, #-32]!
    9bbc:	mov	x29, sp
    9bc0:	str	x19, [sp, #16]
    9bc4:	adrp	x19, 2f000 <xexit@@Base+0x15c60>
    9bc8:	ldrb	w0, [x19, #2280]
    9bcc:	cbnz	w0, 9bf4 <_ZNSt15basic_streambufIcSt11char_traitsIcEED2Ev@plt+0xd4>
    9bd0:	adrp	x0, 2e000 <xexit@@Base+0x14c60>
    9bd4:	ldr	x0, [x0, #3424]
    9bd8:	cbz	x0, 9be8 <_ZNSt15basic_streambufIcSt11char_traitsIcEED2Ev@plt+0xc8>
    9bdc:	adrp	x0, 2f000 <xexit@@Base+0x15c60>
    9be0:	ldr	x0, [x0, #1488]
    9be4:	bl	92a0 <__cxa_finalize@plt>
    9be8:	bl	9b48 <_ZNSt15basic_streambufIcSt11char_traitsIcEED2Ev@plt+0x28>
    9bec:	mov	w0, #0x1                   	// #1
    9bf0:	strb	w0, [x19, #2280]
    9bf4:	ldr	x19, [sp, #16]
    9bf8:	ldp	x29, x30, [sp], #32
    9bfc:	ret
    9c00:	b	9b78 <_ZNSt15basic_streambufIcSt11char_traitsIcEED2Ev@plt+0x58>
    9c04:	sub	sp, sp, #0x80
    9c08:	stp	x29, x30, [sp, #80]
    9c0c:	str	x21, [sp, #96]
    9c10:	stp	x20, x19, [sp, #112]
    9c14:	add	x29, sp, #0x50
    9c18:	mov	x20, x0
    9c1c:	adrp	x0, 19000 <iterative_hash@@Base+0x140>
    9c20:	add	x0, x0, #0x3dc
    9c24:	mov	x19, x1
    9c28:	bl	98d0 <getenv@plt>
    9c2c:	cbz	x0, 9c7c <_ZNSt15basic_streambufIcSt11char_traitsIcEED2Ev@plt+0x15c>
    9c30:	mov	x1, x0
    9c34:	add	x0, sp, #0x28
    9c38:	bl	9db0 <_ZNSt15basic_streambufIcSt11char_traitsIcEED2Ev@plt+0x290>
    9c3c:	add	x0, sp, #0x28
    9c40:	bl	9e10 <_ZNSt15basic_streambufIcSt11char_traitsIcEED2Ev@plt+0x2f0>
    9c44:	tbnz	w0, #0, 9c84 <_ZNSt15basic_streambufIcSt11char_traitsIcEED2Ev@plt+0x164>
    9c48:	add	x8, sp, #0x8
    9c4c:	add	x0, sp, #0x28
    9c50:	bl	9e20 <_ZNSt15basic_streambufIcSt11char_traitsIcEED2Ev@plt+0x300>
    9c54:	add	x1, sp, #0x8
    9c58:	mov	x0, x20
    9c5c:	mov	x2, x19
    9c60:	bl	9ccc <_ZNSt15basic_streambufIcSt11char_traitsIcEED2Ev@plt+0x1ac>
    9c64:	mov	w21, w0
    9c68:	add	x0, sp, #0x8
    9c6c:	bl	9200 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev@plt>
    9c70:	tbz	w21, #0, 9c3c <_ZNSt15basic_streambufIcSt11char_traitsIcEED2Ev@plt+0x11c>
    9c74:	mov	w19, #0x1                   	// #1
    9c78:	b	9c88 <_ZNSt15basic_streambufIcSt11char_traitsIcEED2Ev@plt+0x168>
    9c7c:	mov	w19, wzr
    9c80:	b	9c90 <_ZNSt15basic_streambufIcSt11char_traitsIcEED2Ev@plt+0x170>
    9c84:	mov	w19, wzr
    9c88:	add	x0, sp, #0x28
    9c8c:	bl	9f04 <_ZNSt15basic_streambufIcSt11char_traitsIcEED2Ev@plt+0x3e4>
    9c90:	mov	w0, w19
    9c94:	ldp	x20, x19, [sp, #112]
    9c98:	ldr	x21, [sp, #96]
    9c9c:	ldp	x29, x30, [sp, #80]
    9ca0:	add	sp, sp, #0x80
    9ca4:	ret
    9ca8:	mov	x19, x0
    9cac:	add	x0, sp, #0x8
    9cb0:	bl	9200 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev@plt>
    9cb4:	b	9cbc <_ZNSt15basic_streambufIcSt11char_traitsIcEED2Ev@plt+0x19c>
    9cb8:	mov	x19, x0
    9cbc:	add	x0, sp, #0x28
    9cc0:	bl	9f04 <_ZNSt15basic_streambufIcSt11char_traitsIcEED2Ev@plt+0x3e4>
    9cc4:	mov	x0, x19
    9cc8:	bl	9a00 <_Unwind_Resume@plt>
    9ccc:	sub	sp, sp, #0x80
    9cd0:	stp	x29, x30, [sp, #80]
    9cd4:	stp	x22, x21, [sp, #96]
    9cd8:	stp	x20, x19, [sp, #112]
    9cdc:	add	x29, sp, #0x50
    9ce0:	mov	x22, x0
    9ce4:	sub	x0, x29, #0x8
    9ce8:	mov	x19, x2
    9cec:	mov	x20, x1
    9cf0:	bl	a188 <_ZSt18__do_alloc_on_moveISaIcEEvRT_S2_St17integral_constantIbLb1EE@@Base+0x18>
    9cf4:	sub	x0, x29, #0x8
    9cf8:	bl	a1b4 <_ZSt18__do_alloc_on_moveISaIcEEvRT_S2_St17integral_constantIbLb1EE@@Base+0x44>
    9cfc:	mov	x21, x0
    9d00:	cbz	x0, 9d64 <_ZNSt15basic_streambufIcSt11char_traitsIcEED2Ev@plt+0x244>
    9d04:	mov	x0, x22
    9d08:	mov	x1, x21
    9d0c:	mov	x2, xzr
    9d10:	mov	x3, xzr
    9d14:	mov	w4, wzr
    9d18:	bl	92c0 <xregexec@plt>
    9d1c:	cbnz	w0, 9cf4 <_ZNSt15basic_streambufIcSt11char_traitsIcEED2Ev@plt+0x1d4>
    9d20:	add	x8, sp, #0x8
    9d24:	mov	w1, #0x2f                  	// #47
    9d28:	mov	x0, x20
    9d2c:	bl	9300 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_S5_@plt>
    9d30:	add	x8, sp, #0x28
    9d34:	add	x0, sp, #0x8
    9d38:	mov	x1, x21
    9d3c:	bl	9070 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_@plt>
    9d40:	add	x1, sp, #0x28
    9d44:	mov	x0, x19
    9d48:	bl	9650 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_@plt>
    9d4c:	add	x0, sp, #0x28
    9d50:	bl	9200 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev@plt>
    9d54:	add	x0, sp, #0x8
    9d58:	bl	9200 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev@plt>
    9d5c:	mov	w19, #0x1                   	// #1
    9d60:	b	9d68 <_ZNSt15basic_streambufIcSt11char_traitsIcEED2Ev@plt+0x248>
    9d64:	mov	w19, wzr
    9d68:	sub	x0, x29, #0x8
    9d6c:	bl	a25c <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_S5_@@Base+0x50>
    9d70:	mov	w0, w19
    9d74:	ldp	x20, x19, [sp, #112]
    9d78:	ldp	x22, x21, [sp, #96]
    9d7c:	ldp	x29, x30, [sp, #80]
    9d80:	add	sp, sp, #0x80
    9d84:	ret
    9d88:	mov	x19, x0
    9d8c:	add	x0, sp, #0x8
    9d90:	bl	9200 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev@plt>
    9d94:	b	9da0 <_ZNSt15basic_streambufIcSt11char_traitsIcEED2Ev@plt+0x280>
    9d98:	b	9d9c <_ZNSt15basic_streambufIcSt11char_traitsIcEED2Ev@plt+0x27c>
    9d9c:	mov	x19, x0
    9da0:	sub	x0, x29, #0x8
    9da4:	bl	a25c <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_S5_@@Base+0x50>
    9da8:	mov	x0, x19
    9dac:	bl	9a00 <_Unwind_Resume@plt>
    9db0:	sub	sp, sp, #0x30
    9db4:	stp	x29, x30, [sp, #16]
    9db8:	stp	x20, x19, [sp, #32]
    9dbc:	add	x29, sp, #0x10
    9dc0:	mov	x19, x0
    9dc4:	add	x0, sp, #0x8
    9dc8:	mov	x20, x1
    9dcc:	bl	9920 <_ZNSaIcEC2Ev@plt>
    9dd0:	add	x2, sp, #0x8
    9dd4:	mov	x0, x19
    9dd8:	mov	x1, x20
    9ddc:	bl	9180 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_@plt>
    9de0:	add	x0, sp, #0x8
    9de4:	bl	9010 <_ZNSaIcED2Ev@plt>
    9de8:	str	xzr, [x19, #32]
    9dec:	ldp	x20, x19, [sp, #32]
    9df0:	ldp	x29, x30, [sp, #16]
    9df4:	add	sp, sp, #0x30
    9df8:	ret
    9dfc:	mov	x19, x0
    9e00:	add	x0, sp, #0x8
    9e04:	bl	9010 <_ZNSaIcED2Ev@plt>
    9e08:	mov	x0, x19
    9e0c:	bl	9a00 <_Unwind_Resume@plt>
    9e10:	ldr	x8, [x0, #32]
    9e14:	cmn	x8, #0x1
    9e18:	cset	w0, eq  // eq = none
    9e1c:	ret
    9e20:	sub	sp, sp, #0x50
    9e24:	stp	x29, x30, [sp, #32]
    9e28:	stp	x22, x21, [sp, #48]
    9e2c:	stp	x20, x19, [sp, #64]
    9e30:	add	x29, sp, #0x20
    9e34:	ldr	x21, [x0, #32]
    9e38:	mov	w1, #0x3a                  	// #58
    9e3c:	mov	x20, x0
    9e40:	mov	x19, x8
    9e44:	mov	x2, x21
    9e48:	bl	96e0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEcm@plt>
    9e4c:	mov	x22, x0
    9e50:	mov	x0, x19
    9e54:	bl	9480 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2Ev@plt>
    9e58:	cmn	x22, #0x1
    9e5c:	b.eq	9e80 <_ZNSt15basic_streambufIcSt11char_traitsIcEED2Ev@plt+0x360>  // b.none
    9e60:	add	x8, x22, #0x1
    9e64:	str	x8, [x20, #32]
    9e68:	sub	x2, x22, x21
    9e6c:	mov	x8, sp
    9e70:	mov	x0, x20
    9e74:	mov	x1, x21
    9e78:	bl	9560 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6substrEmm@plt>
    9e7c:	b	9e9c <_ZNSt15basic_streambufIcSt11char_traitsIcEED2Ev@plt+0x37c>
    9e80:	mov	x8, #0xffffffffffffffff    	// #-1
    9e84:	str	x8, [x20, #32]
    9e88:	mov	x8, sp
    9e8c:	mov	x2, #0xffffffffffffffff    	// #-1
    9e90:	mov	x0, x20
    9e94:	mov	x1, x21
    9e98:	bl	9560 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6substrEmm@plt>
    9e9c:	mov	x1, sp
    9ea0:	mov	x0, x19
    9ea4:	bl	9650 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_@plt>
    9ea8:	mov	x0, sp
    9eac:	bl	9200 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev@plt>
    9eb0:	adrp	x1, 19000 <iterative_hash@@Base+0x140>
    9eb4:	add	x1, x1, #0x677
    9eb8:	mov	x0, x19
    9ebc:	bl	9b10 <_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_@plt>
    9ec0:	tbz	w0, #0, 9ed4 <_ZNSt15basic_streambufIcSt11char_traitsIcEED2Ev@plt+0x3b4>
    9ec4:	adrp	x1, 19000 <iterative_hash@@Base+0x140>
    9ec8:	add	x1, x1, #0x40b
    9ecc:	mov	x0, x19
    9ed0:	bl	9730 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc@plt>
    9ed4:	ldp	x20, x19, [sp, #64]
    9ed8:	ldp	x22, x21, [sp, #48]
    9edc:	ldp	x29, x30, [sp, #32]
    9ee0:	add	sp, sp, #0x50
    9ee4:	ret
    9ee8:	b	9ef0 <_ZNSt15basic_streambufIcSt11char_traitsIcEED2Ev@plt+0x3d0>
    9eec:	b	9ef0 <_ZNSt15basic_streambufIcSt11char_traitsIcEED2Ev@plt+0x3d0>
    9ef0:	mov	x20, x0
    9ef4:	mov	x0, x19
    9ef8:	bl	9200 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev@plt>
    9efc:	mov	x0, x20
    9f00:	bl	9a00 <_Unwind_Resume@plt>
    9f04:	stp	x29, x30, [sp, #-16]!
    9f08:	mov	x29, sp
    9f0c:	bl	9200 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev@plt>
    9f10:	ldp	x29, x30, [sp], #16
    9f14:	ret

0000000000009f18 <_ZN9__gnu_cxx13new_allocatorIcEC2Ev@@Base>:
    9f18:	ret

0000000000009f1c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_@@Base>:
    9f1c:	stp	x29, x30, [sp, #-16]!
    9f20:	mov	x29, sp
    9f24:	bl	9980 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_construct_auxIPKcEEvT_S8_St12__false_type@plt>
    9f28:	ldp	x29, x30, [sp], #16
    9f2c:	ret

0000000000009f30 <_ZNSt11char_traitsIcE6lengthEPKc@@Base>:
    9f30:	stp	x29, x30, [sp, #-16]!
    9f34:	mov	x29, sp
    9f38:	bl	9110 <strlen@plt>
    9f3c:	ldp	x29, x30, [sp], #16
    9f40:	ret

0000000000009f44 <_ZNSt14pointer_traitsIPcE10pointer_toERc@@Base>:
    9f44:	stp	x29, x30, [sp, #-16]!
    9f48:	mov	x29, sp
    9f4c:	bl	9210 <_ZSt9addressofIcEPT_RS0_@plt>
    9f50:	ldp	x29, x30, [sp], #16
    9f54:	ret

0000000000009f58 <_ZSt9addressofIcEPT_RS0_@@Base>:
    9f58:	stp	x29, x30, [sp, #-16]!
    9f5c:	mov	x29, sp
    9f60:	bl	9000 <_ZSt11__addressofIcEPT_RS0_@plt>
    9f64:	ldp	x29, x30, [sp], #16
    9f68:	ret

0000000000009f6c <_ZSt11__addressofIcEPT_RS0_@@Base>:
    9f6c:	ret

0000000000009f70 <_ZN9__gnu_cxx13new_allocatorIcEC2ERKS1_@@Base>:
    9f70:	ret

0000000000009f74 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_construct_auxIPKcEEvT_S8_St12__false_type@@Base>:
    9f74:	stp	x29, x30, [sp, #-16]!
    9f78:	mov	x29, sp
    9f7c:	bl	9170 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag@plt>
    9f80:	ldp	x29, x30, [sp], #16
    9f84:	ret

0000000000009f88 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag@@Base>:
    9f88:	stp	x29, x30, [sp, #-48]!
    9f8c:	str	x21, [sp, #16]
    9f90:	stp	x20, x19, [sp, #32]
    9f94:	mov	x29, sp
    9f98:	mov	x19, x0
    9f9c:	mov	x0, x1
    9fa0:	mov	x20, x2
    9fa4:	mov	x21, x1
    9fa8:	bl	9370 <_ZN9__gnu_cxx17__is_null_pointerIKcEEbPT_@plt>
    9fac:	cmp	x21, x20
    9fb0:	b.eq	9fb8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag@@Base+0x30>  // b.none
    9fb4:	tbnz	w0, #0, a028 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag@@Base+0xa0>
    9fb8:	mov	x0, x21
    9fbc:	mov	x1, x20
    9fc0:	bl	9880 <_ZSt8distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_@plt>
    9fc4:	cmp	x0, #0x10
    9fc8:	str	x0, [x29, #24]
    9fcc:	b.cc	9ff8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag@@Base+0x70>  // b.lo, b.ul, b.last
    9fd0:	add	x1, x29, #0x18
    9fd4:	mov	x0, x19
    9fd8:	mov	x2, xzr
    9fdc:	bl	9a20 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>
    9fe0:	mov	x1, x0
    9fe4:	mov	x0, x19
    9fe8:	bl	9440 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc@plt>
    9fec:	ldr	x1, [x29, #24]
    9ff0:	mov	x0, x19
    9ff4:	bl	9ae0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEm@plt>
    9ff8:	mov	x0, x19
    9ffc:	bl	95b0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv@plt>
    a000:	mov	x1, x21
    a004:	mov	x2, x20
    a008:	bl	95c0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcPKcS7_@plt>
    a00c:	ldr	x1, [x29, #24]
    a010:	mov	x0, x19
    a014:	bl	9330 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm@plt>
    a018:	ldp	x20, x19, [sp, #32]
    a01c:	ldr	x21, [sp, #16]
    a020:	ldp	x29, x30, [sp], #48
    a024:	ret
    a028:	adrp	x0, 19000 <iterative_hash@@Base+0x140>
    a02c:	add	x0, x0, #0x3e1
    a030:	bl	9350 <_ZSt19__throw_logic_errorPKc@plt>

000000000000a034 <_ZN9__gnu_cxx17__is_null_pointerIKcEEbPT_@@Base>:
    a034:	cmp	x0, #0x0
    a038:	cset	w0, eq  // eq = none
    a03c:	ret

000000000000a040 <_ZSt8distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_@@Base>:
    a040:	sub	sp, sp, #0x30
    a044:	stp	x29, x30, [sp, #16]
    a048:	stp	x20, x19, [sp, #32]
    a04c:	add	x29, sp, #0x10
    a050:	mov	x20, x0
    a054:	str	x0, [sp, #8]
    a058:	add	x0, sp, #0x8
    a05c:	mov	x19, x1
    a060:	bl	97d0 <_ZSt19__iterator_categoryIPKcENSt15iterator_traitsIT_E17iterator_categoryERKS3_@plt>
    a064:	mov	x0, x20
    a068:	mov	x1, x19
    a06c:	bl	9040 <_ZSt10__distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_iterator_tag@plt>
    a070:	ldp	x20, x19, [sp, #32]
    a074:	ldp	x29, x30, [sp, #16]
    a078:	add	sp, sp, #0x30
    a07c:	ret
    a080:	str	x30, [sp, #-16]!
    a084:	bl	91c0 <__cxa_begin_catch@plt>
    a088:	bl	90d0 <_ZSt9terminatev@plt>

000000000000a08c <_ZSt10__distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_iterator_tag@@Base>:
    a08c:	sub	x0, x1, x0
    a090:	ret

000000000000a094 <_ZSt19__iterator_categoryIPKcENSt15iterator_traitsIT_E17iterator_categoryERKS3_@@Base>:
    a094:	ret

000000000000a098 <_ZNSt11char_traitsIcE6assignERcRKc@@Base>:
    a098:	ldrb	w8, [x1]
    a09c:	strb	w8, [x0]
    a0a0:	ret

000000000000a0a4 <_ZNSt11char_traitsIcE4copyEPcPKcm@@Base>:
    a0a4:	stp	x29, x30, [sp, #-32]!
    a0a8:	str	x19, [sp, #16]
    a0ac:	mov	x19, x0
    a0b0:	mov	x29, sp
    a0b4:	cbz	x2, a0c0 <_ZNSt11char_traitsIcE4copyEPcPKcm@@Base+0x1c>
    a0b8:	mov	x0, x19
    a0bc:	bl	8fb0 <memcpy@plt>
    a0c0:	mov	x0, x19
    a0c4:	ldr	x19, [sp, #16]
    a0c8:	ldp	x29, x30, [sp], #32
    a0cc:	ret

000000000000a0d0 <_ZNSt14pointer_traitsIPKcE10pointer_toERS0_@@Base>:
    a0d0:	stp	x29, x30, [sp, #-16]!
    a0d4:	mov	x29, sp
    a0d8:	bl	9750 <_ZSt9addressofIKcEPT_RS1_@plt>
    a0dc:	ldp	x29, x30, [sp], #16
    a0e0:	ret

000000000000a0e4 <_ZSt9addressofIKcEPT_RS1_@@Base>:
    a0e4:	stp	x29, x30, [sp, #-16]!
    a0e8:	mov	x29, sp
    a0ec:	bl	9900 <_ZSt11__addressofIKcEPT_RS1_@plt>
    a0f0:	ldp	x29, x30, [sp], #16
    a0f4:	ret

000000000000a0f8 <_ZSt11__addressofIKcEPT_RS1_@@Base>:
    a0f8:	ret

000000000000a0fc <_ZNSt16allocator_traitsISaIcEE10deallocateERS0_Pcm@@Base>:
    a0fc:	stp	x29, x30, [sp, #-16]!
    a100:	mov	x29, sp
    a104:	bl	9850 <_ZN9__gnu_cxx13new_allocatorIcE10deallocateEPcm@plt>
    a108:	ldp	x29, x30, [sp], #16
    a10c:	ret

000000000000a110 <_ZN9__gnu_cxx13new_allocatorIcE10deallocateEPcm@@Base>:
    a110:	stp	x29, x30, [sp, #-16]!
    a114:	mov	x0, x1
    a118:	mov	x29, sp
    a11c:	bl	94f0 <_ZdlPv@plt>
    a120:	ldp	x29, x30, [sp], #16
    a124:	ret

000000000000a128 <_ZN9__gnu_cxx13new_allocatorIcED2Ev@@Base>:
    a128:	ret

000000000000a12c <_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_@@Base>:
    a12c:	stp	x29, x30, [sp, #-16]!
    a130:	mov	x29, sp
    a134:	bl	90e0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc@plt>
    a138:	cmp	w0, #0x0
    a13c:	cset	w0, eq  // eq = none
    a140:	ldp	x29, x30, [sp], #16
    a144:	ret

000000000000a148 <_ZSt4moveIRSaIcEEONSt16remove_referenceIT_E4typeEOS3_@@Base>:
    a148:	ret

000000000000a14c <_ZN9__gnu_cxx14__alloc_traitsISaIcEcE15_S_always_equalEv@@Base>:
    a14c:	mov	w0, #0x1                   	// #1
    a150:	ret

000000000000a154 <_ZStneRKSaIcES1_@@Base>:
    a154:	mov	w0, wzr
    a158:	ret

000000000000a15c <_ZSt15__alloc_on_moveISaIcEEvRT_S2_@@Base>:
    a15c:	stp	x29, x30, [sp, #-16]!
    a160:	mov	x29, sp
    a164:	bl	95e0 <_ZSt18__do_alloc_on_moveISaIcEEvRT_S2_St17integral_constantIbLb1EE@plt>
    a168:	ldp	x29, x30, [sp], #16
    a16c:	ret

000000000000a170 <_ZSt18__do_alloc_on_moveISaIcEEvRT_S2_St17integral_constantIbLb1EE@@Base>:
    a170:	stp	x29, x30, [sp, #-16]!
    a174:	mov	x0, x1
    a178:	mov	x29, sp
    a17c:	bl	97c0 <_ZSt4moveIRSaIcEEONSt16remove_referenceIT_E4typeEOS3_@plt>
    a180:	ldp	x29, x30, [sp], #16
    a184:	ret
    a188:	stp	x29, x30, [sp, #-32]!
    a18c:	str	x19, [sp, #16]
    a190:	mov	x29, sp
    a194:	mov	x19, x0
    a198:	mov	x0, x1
    a19c:	bl	91d0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv@plt>
    a1a0:	bl	95a0 <opendir@plt>
    a1a4:	str	x0, [x19]
    a1a8:	ldr	x19, [sp, #16]
    a1ac:	ldp	x29, x30, [sp], #32
    a1b0:	ret
    a1b4:	stp	x29, x30, [sp, #-16]!
    a1b8:	mov	x29, sp
    a1bc:	ldr	x0, [x0]
    a1c0:	cbz	x0, a1d4 <_ZSt18__do_alloc_on_moveISaIcEEvRT_S2_St17integral_constantIbLb1EE@@Base+0x64>
    a1c4:	bl	9550 <readdir@plt>
    a1c8:	add	x8, x0, #0x13
    a1cc:	cmp	x0, #0x0
    a1d0:	csel	x0, xzr, x8, eq  // eq = none
    a1d4:	ldp	x29, x30, [sp], #16
    a1d8:	ret

000000000000a1dc <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_@@Base>:
    a1dc:	stp	x29, x30, [sp, #-32]!
    a1e0:	str	x19, [sp, #16]
    a1e4:	mov	x29, sp
    a1e8:	mov	x19, x8
    a1ec:	bl	9ab0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKc@plt>
    a1f0:	bl	9500 <_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_@plt>
    a1f4:	mov	x1, x0
    a1f8:	mov	x0, x19
    a1fc:	bl	96c0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_@plt>
    a200:	ldr	x19, [sp, #16]
    a204:	ldp	x29, x30, [sp], #32
    a208:	ret

000000000000a20c <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_S5_@@Base>:
    a20c:	stp	x29, x30, [sp, #-32]!
    a210:	stp	x20, x19, [sp, #16]
    a214:	mov	x29, sp
    a218:	mov	w20, w1
    a21c:	mov	x1, x0
    a220:	mov	x0, x8
    a224:	mov	x19, x8
    a228:	bl	9780 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_@plt>
    a22c:	mov	w1, #0x1                   	// #1
    a230:	mov	x0, x19
    a234:	mov	w2, w20
    a238:	bl	9580 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEmc@plt>
    a23c:	ldp	x20, x19, [sp, #16]
    a240:	ldp	x29, x30, [sp], #32
    a244:	ret
    a248:	mov	x20, x0
    a24c:	mov	x0, x19
    a250:	bl	9200 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev@plt>
    a254:	mov	x0, x20
    a258:	bl	9a00 <_Unwind_Resume@plt>
    a25c:	stp	x29, x30, [sp, #-16]!
    a260:	mov	x29, sp
    a264:	ldr	x0, [x0]
    a268:	cbz	x0, a270 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_S5_@@Base+0x64>
    a26c:	bl	93c0 <closedir@plt>
    a270:	ldp	x29, x30, [sp], #16
    a274:	ret

000000000000a278 <_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_@@Base>:
    a278:	ret

000000000000a27c <_ZNSt16allocator_traitsISaIcEE8max_sizeERKS0_@@Base>:
    a27c:	stp	x29, x30, [sp, #-16]!
    a280:	mov	x29, sp
    a284:	bl	9460 <_ZNK9__gnu_cxx13new_allocatorIcE8max_sizeEv@plt>
    a288:	ldp	x29, x30, [sp], #16
    a28c:	ret

000000000000a290 <_ZNK9__gnu_cxx13new_allocatorIcE8max_sizeEv@@Base>:
    a290:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
    a294:	ret

000000000000a298 <_ZN9__gnu_cxx14__alloc_traitsISaIcEcE17_S_select_on_copyERKS1_@@Base>:
    a298:	stp	x29, x30, [sp, #-16]!
    a29c:	mov	x29, sp
    a2a0:	bl	9ad0 <_ZNSt16allocator_traitsISaIcEE37select_on_container_copy_constructionERKS0_@plt>
    a2a4:	ldp	x29, x30, [sp], #16
    a2a8:	ret

000000000000a2ac <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_@@Base>:
    a2ac:	stp	x29, x30, [sp, #-16]!
    a2b0:	mov	x29, sp
    a2b4:	bl	97a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_construct_auxIPcEEvT_S7_St12__false_type@plt>
    a2b8:	ldp	x29, x30, [sp], #16
    a2bc:	ret

000000000000a2c0 <_ZNSt16allocator_traitsISaIcEE37select_on_container_copy_constructionERKS0_@@Base>:
    a2c0:	stp	x29, x30, [sp, #-16]!
    a2c4:	mov	x1, x0
    a2c8:	mov	x0, x8
    a2cc:	mov	x29, sp
    a2d0:	bl	97e0 <_ZNSaIcEC2ERKS_@plt>
    a2d4:	ldp	x29, x30, [sp], #16
    a2d8:	ret

000000000000a2dc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_construct_auxIPcEEvT_S7_St12__false_type@@Base>:
    a2dc:	stp	x29, x30, [sp, #-16]!
    a2e0:	mov	x29, sp
    a2e4:	bl	91a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag@plt>
    a2e8:	ldp	x29, x30, [sp], #16
    a2ec:	ret

000000000000a2f0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag@@Base>:
    a2f0:	stp	x29, x30, [sp, #-48]!
    a2f4:	str	x21, [sp, #16]
    a2f8:	stp	x20, x19, [sp, #32]
    a2fc:	mov	x29, sp
    a300:	mov	x19, x0
    a304:	mov	x0, x1
    a308:	mov	x20, x2
    a30c:	mov	x21, x1
    a310:	bl	91e0 <_ZN9__gnu_cxx17__is_null_pointerIcEEbPT_@plt>
    a314:	cmp	x21, x20
    a318:	b.eq	a320 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag@@Base+0x30>  // b.none
    a31c:	tbnz	w0, #0, a390 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag@@Base+0xa0>
    a320:	mov	x0, x21
    a324:	mov	x1, x20
    a328:	bl	9490 <_ZSt8distanceIPcENSt15iterator_traitsIT_E15difference_typeES2_S2_@plt>
    a32c:	cmp	x0, #0x10
    a330:	str	x0, [x29, #24]
    a334:	b.cc	a360 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag@@Base+0x70>  // b.lo, b.ul, b.last
    a338:	add	x1, x29, #0x18
    a33c:	mov	x0, x19
    a340:	mov	x2, xzr
    a344:	bl	9a20 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>
    a348:	mov	x1, x0
    a34c:	mov	x0, x19
    a350:	bl	9440 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc@plt>
    a354:	ldr	x1, [x29, #24]
    a358:	mov	x0, x19
    a35c:	bl	9ae0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEm@plt>
    a360:	mov	x0, x19
    a364:	bl	95b0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv@plt>
    a368:	mov	x1, x21
    a36c:	mov	x2, x20
    a370:	bl	9100 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcS5_S5_@plt>
    a374:	ldr	x1, [x29, #24]
    a378:	mov	x0, x19
    a37c:	bl	9330 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm@plt>
    a380:	ldp	x20, x19, [sp, #32]
    a384:	ldr	x21, [sp, #16]
    a388:	ldp	x29, x30, [sp], #48
    a38c:	ret
    a390:	adrp	x0, 19000 <iterative_hash@@Base+0x140>
    a394:	add	x0, x0, #0x3e1
    a398:	bl	9350 <_ZSt19__throw_logic_errorPKc@plt>

000000000000a39c <_ZN9__gnu_cxx17__is_null_pointerIcEEbPT_@@Base>:
    a39c:	cmp	x0, #0x0
    a3a0:	cset	w0, eq  // eq = none
    a3a4:	ret

000000000000a3a8 <_ZSt8distanceIPcENSt15iterator_traitsIT_E15difference_typeES2_S2_@@Base>:
    a3a8:	sub	sp, sp, #0x30
    a3ac:	stp	x29, x30, [sp, #16]
    a3b0:	stp	x20, x19, [sp, #32]
    a3b4:	add	x29, sp, #0x10
    a3b8:	mov	x20, x0
    a3bc:	str	x0, [sp, #8]
    a3c0:	add	x0, sp, #0x8
    a3c4:	mov	x19, x1
    a3c8:	bl	8fd0 <_ZSt19__iterator_categoryIPcENSt15iterator_traitsIT_E17iterator_categoryERKS2_@plt>
    a3cc:	mov	x0, x20
    a3d0:	mov	x1, x19
    a3d4:	bl	93e0 <_ZSt10__distanceIPcENSt15iterator_traitsIT_E15difference_typeES2_S2_St26random_access_iterator_tag@plt>
    a3d8:	ldp	x20, x19, [sp, #32]
    a3dc:	ldp	x29, x30, [sp, #16]
    a3e0:	add	sp, sp, #0x30
    a3e4:	ret

000000000000a3e8 <_ZSt10__distanceIPcENSt15iterator_traitsIT_E15difference_typeES2_S2_St26random_access_iterator_tag@@Base>:
    a3e8:	sub	x0, x1, x0
    a3ec:	ret

000000000000a3f0 <_ZSt19__iterator_categoryIPcENSt15iterator_traitsIT_E17iterator_categoryERKS2_@@Base>:
    a3f0:	ret
    a3f4:	stp	x29, x30, [sp, #-32]!
    a3f8:	str	x19, [sp, #16]
    a3fc:	mov	x29, sp
    a400:	mov	x19, x1
    a404:	add	x1, x29, #0x18
    a408:	bl	11f4c <gcc_cp_fe_context@@Base+0x3f18>
    a40c:	cbz	w0, a41c <_ZSt19__iterator_categoryIPcENSt15iterator_traitsIT_E17iterator_categoryERKS2_@@Base+0x2c>
    a410:	ldr	x8, [x29, #24]
    a414:	mov	w0, #0x1                   	// #1
    a418:	str	w8, [x19]
    a41c:	ldr	x19, [sp, #16]
    a420:	ldp	x29, x30, [sp], #32
    a424:	ret
    a428:	stp	x29, x30, [sp, #-32]!
    a42c:	str	x19, [sp, #16]
    a430:	mov	x29, sp
    a434:	mov	x19, x1
    a438:	add	x1, x29, #0x18
    a43c:	bl	11f4c <gcc_cp_fe_context@@Base+0x3f18>
    a440:	cbz	w0, a450 <_ZSt19__iterator_categoryIPcENSt15iterator_traitsIT_E17iterator_categoryERKS2_@@Base+0x60>
    a444:	ldr	x8, [x29, #24]
    a448:	mov	w0, #0x1                   	// #1
    a44c:	str	w8, [x19]
    a450:	ldr	x19, [sp, #16]
    a454:	ldp	x29, x30, [sp], #32
    a458:	ret
    a45c:	stp	x29, x30, [sp, #-32]!
    a460:	str	x19, [sp, #16]
    a464:	mov	x29, sp
    a468:	mov	x19, x1
    a46c:	add	x1, x29, #0x18
    a470:	bl	11f4c <gcc_cp_fe_context@@Base+0x3f18>
    a474:	cbz	w0, a484 <_ZSt19__iterator_categoryIPcENSt15iterator_traitsIT_E17iterator_categoryERKS2_@@Base+0x94>
    a478:	ldr	x8, [x29, #24]
    a47c:	mov	w0, #0x1                   	// #1
    a480:	str	w8, [x19]
    a484:	ldr	x19, [sp, #16]
    a488:	ldp	x29, x30, [sp], #32
    a48c:	ret
    a490:	stp	x29, x30, [sp, #-64]!
    a494:	stp	x24, x23, [sp, #16]
    a498:	stp	x22, x21, [sp, #32]
    a49c:	stp	x20, x19, [sp, #48]
    a4a0:	mov	x29, sp
    a4a4:	movi	v0.2d, #0x0
    a4a8:	mov	x22, x0
    a4ac:	str	q0, [x22, #64]!
    a4b0:	mov	x20, x0
    a4b4:	mov	x0, x22
    a4b8:	mov	x19, x2
    a4bc:	mov	x21, x1
    a4c0:	str	xzr, [x22, #16]
    a4c4:	stp	q0, q0, [x22, #-32]
    a4c8:	stur	q0, [x22, #-48]
    a4cc:	bl	9a10 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2Ev@plt>
    a4d0:	add	x23, x22, #0x18
    a4d4:	mov	x0, x23
    a4d8:	bl	9480 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2Ev@plt>
    a4dc:	strb	wzr, [x22, #56]
    a4e0:	mov	w0, #0x10                  	// #16
    a4e4:	bl	9540 <_Znwm@plt>
    a4e8:	mov	x1, x20
    a4ec:	mov	x24, x0
    a4f0:	bl	b328 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2Ev@@Base+0x14>
    a4f4:	str	x24, [x20, #128]
    a4f8:	stp	x21, x19, [x20]
    a4fc:	ldp	x20, x19, [sp, #48]
    a500:	ldp	x22, x21, [sp, #32]
    a504:	ldp	x24, x23, [sp, #16]
    a508:	ldp	x29, x30, [sp], #64
    a50c:	ret
    a510:	mov	x19, x0
    a514:	mov	x0, x23
    a518:	bl	9200 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev@plt>
    a51c:	mov	x0, x22
    a520:	bl	9360 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev@plt>
    a524:	mov	x0, x19
    a528:	bl	9a00 <_Unwind_Resume@plt>
    a52c:	stp	x29, x30, [sp, #-32]!
    a530:	str	x19, [sp, #16]
    a534:	mov	x19, x0
    a538:	ldr	x0, [x0, #16]
    a53c:	mov	x29, sp
    a540:	cbz	x0, a550 <_ZSt19__iterator_categoryIPcENSt15iterator_traitsIT_E17iterator_categoryERKS2_@@Base+0x160>
    a544:	ldr	x8, [x0]
    a548:	ldr	x8, [x8, #8]
    a54c:	blr	x8
    a550:	ldr	x0, [x19, #128]
    a554:	cbz	x0, a564 <_ZSt19__iterator_categoryIPcENSt15iterator_traitsIT_E17iterator_categoryERKS2_@@Base+0x174>
    a558:	ldr	x8, [x0]
    a55c:	ldr	x8, [x8, #16]
    a560:	blr	x8
    a564:	add	x0, x19, #0x58
    a568:	bl	9200 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev@plt>
    a56c:	add	x0, x19, #0x40
    a570:	bl	9360 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev@plt>
    a574:	ldr	x19, [sp, #16]
    a578:	ldp	x29, x30, [sp], #32
    a57c:	ret
    a580:	stp	x29, x30, [sp, #-16]!
    a584:	mov	x29, sp
    a588:	adrp	x0, 19000 <iterative_hash@@Base+0x140>
    a58c:	add	x0, x0, #0x560
    a590:	bl	91f0 <xstrdup@plt>
    a594:	ldp	x29, x30, [sp], #16
    a598:	ret
    a59c:	stp	x29, x30, [sp, #-48]!
    a5a0:	str	x21, [sp, #16]
    a5a4:	stp	x20, x19, [sp, #32]
    a5a8:	mov	x29, sp
    a5ac:	sub	sp, sp, #0x60
    a5b0:	mov	x20, x0
    a5b4:	add	x0, x0, #0x10
    a5b8:	mov	x19, x1
    a5bc:	bl	91d0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv@plt>
    a5c0:	sub	x8, x29, #0x20
    a5c4:	bl	a754 <_ZSt19__iterator_categoryIPcENSt15iterator_traitsIT_E17iterator_categoryERKS2_@@Base+0x364>
    a5c8:	ldr	x8, [x20, #8]
    a5cc:	ldrb	w8, [x8, #120]
    a5d0:	cbnz	w8, a6e4 <_ZSt19__iterator_categoryIPcENSt15iterator_traitsIT_E17iterator_categoryERKS2_@@Base+0x2f4>
    a5d4:	sub	x0, x29, #0x20
    a5d8:	bl	91d0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv@plt>
    a5dc:	mov	x1, x0
    a5e0:	sub	x0, x29, #0x60
    a5e4:	mov	w2, #0x9                   	// #9
    a5e8:	bl	9030 <xregcomp@plt>
    a5ec:	mov	w21, w0
    a5f0:	cbz	w0, a668 <_ZSt19__iterator_categoryIPcENSt15iterator_traitsIT_E17iterator_categoryERKS2_@@Base+0x278>
    a5f4:	sub	x1, x29, #0x60
    a5f8:	mov	w0, w21
    a5fc:	mov	x2, xzr
    a600:	mov	x3, xzr
    a604:	bl	99a0 <xregerror@plt>
    a608:	add	x9, x0, #0xf
    a60c:	mov	x8, sp
    a610:	and	x9, x9, #0xfffffffffffffff0
    a614:	mov	x20, sp
    a618:	sub	x19, x8, x9
    a61c:	mov	x3, x0
    a620:	mov	sp, x19
    a624:	sub	x1, x29, #0x60
    a628:	mov	w0, w21
    a62c:	mov	x2, x19
    a630:	bl	99a0 <xregerror@plt>
    a634:	sub	x0, x29, #0x20
    a638:	bl	91d0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv@plt>
    a63c:	mov	x1, x0
    a640:	adrp	x0, 19000 <iterative_hash@@Base+0x140>
    a644:	adrp	x2, 19000 <iterative_hash@@Base+0x140>
    a648:	add	x0, x0, #0x5ae
    a64c:	add	x2, x2, #0x5c9
    a650:	mov	x3, x19
    a654:	mov	x4, xzr
    a658:	bl	9420 <concat@plt>
    a65c:	mov	x19, x0
    a660:	mov	sp, x20
    a664:	b	a6c4 <_ZSt19__iterator_categoryIPcENSt15iterator_traitsIT_E17iterator_categoryERKS2_@@Base+0x2d4>
    a668:	sub	x0, x29, #0x60
    a66c:	mov	x1, x19
    a670:	bl	9c04 <_ZNSt15basic_streambufIcSt11char_traitsIcEED2Ev@plt+0xe4>
    a674:	tbz	w0, #0, a694 <_ZSt19__iterator_categoryIPcENSt15iterator_traitsIT_E17iterator_categoryERKS2_@@Base+0x2a4>
    a678:	sub	x0, x29, #0x60
    a67c:	bl	9130 <xregfree@plt>
    a680:	ldr	x8, [x20, #8]
    a684:	ldrb	w8, [x8, #120]
    a688:	cbnz	w8, a710 <_ZSt19__iterator_categoryIPcENSt15iterator_traitsIT_E17iterator_categoryERKS2_@@Base+0x320>
    a68c:	mov	x19, xzr
    a690:	b	a6c4 <_ZSt19__iterator_categoryIPcENSt15iterator_traitsIT_E17iterator_categoryERKS2_@@Base+0x2d4>
    a694:	sub	x0, x29, #0x60
    a698:	bl	9130 <xregfree@plt>
    a69c:	sub	x0, x29, #0x20
    a6a0:	bl	91d0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv@plt>
    a6a4:	mov	x1, x0
    a6a8:	adrp	x0, 19000 <iterative_hash@@Base+0x140>
    a6ac:	adrp	x2, 19000 <iterative_hash@@Base+0x140>
    a6b0:	add	x0, x0, #0x5cd
    a6b4:	add	x2, x2, #0x5f0
    a6b8:	mov	x3, xzr
    a6bc:	bl	9420 <concat@plt>
    a6c0:	mov	x19, x0
    a6c4:	sub	x0, x29, #0x20
    a6c8:	bl	9200 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev@plt>
    a6cc:	mov	x0, x19
    a6d0:	mov	sp, x29
    a6d4:	ldp	x20, x19, [sp, #32]
    a6d8:	ldr	x21, [sp, #16]
    a6dc:	ldp	x29, x30, [sp], #48
    a6e0:	ret
    a6e4:	adrp	x8, 2e000 <xexit@@Base+0x14c60>
    a6e8:	ldr	x8, [x8, #3968]
    a6ec:	sub	x0, x29, #0x20
    a6f0:	ldr	x21, [x8]
    a6f4:	bl	91d0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv@plt>
    a6f8:	adrp	x1, 19000 <iterative_hash@@Base+0x140>
    a6fc:	mov	x2, x0
    a700:	add	x1, x1, #0x584
    a704:	mov	x0, x21
    a708:	bl	9120 <fprintf@plt>
    a70c:	b	a5d4 <_ZSt19__iterator_categoryIPcENSt15iterator_traitsIT_E17iterator_categoryERKS2_@@Base+0x1e4>
    a710:	adrp	x8, 2e000 <xexit@@Base+0x14c60>
    a714:	ldr	x8, [x8, #3968]
    a718:	mov	x0, x19
    a71c:	ldr	x20, [x8]
    a720:	bl	91d0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv@plt>
    a724:	adrp	x1, 19000 <iterative_hash@@Base+0x140>
    a728:	mov	x2, x0
    a72c:	add	x1, x1, #0x5f2
    a730:	mov	x0, x20
    a734:	bl	9120 <fprintf@plt>
    a738:	b	a68c <_ZSt19__iterator_categoryIPcENSt15iterator_traitsIT_E17iterator_categoryERKS2_@@Base+0x29c>
    a73c:	b	a740 <_ZSt19__iterator_categoryIPcENSt15iterator_traitsIT_E17iterator_categoryERKS2_@@Base+0x350>
    a740:	mov	x19, x0
    a744:	sub	x0, x29, #0x20
    a748:	bl	9200 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev@plt>
    a74c:	mov	x0, x19
    a750:	bl	9a00 <_Unwind_Resume@plt>
    a754:	sub	sp, sp, #0x1d0
    a758:	stp	x29, x30, [sp, #400]
    a75c:	str	x28, [sp, #416]
    a760:	stp	x22, x21, [sp, #432]
    a764:	stp	x20, x19, [sp, #448]
    a768:	add	x29, sp, #0x190
    a76c:	mov	x21, x0
    a770:	add	x0, sp, #0x8
    a774:	mov	x19, x8
    a778:	add	x20, sp, #0x8
    a77c:	bl	9340 <_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEC1Ev@plt>
    a780:	add	x20, x20, #0x10
    a784:	adrp	x1, 1a000 <xexit@@Base+0xc60>
    a788:	add	x1, x1, #0x123
    a78c:	mov	x0, x20
    a790:	bl	9530 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    a794:	mov	x1, x21
    a798:	bl	9530 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    a79c:	adrp	x1, 19000 <iterative_hash@@Base+0x140>
    a7a0:	add	x1, x1, #0x62a
    a7a4:	bl	9530 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    a7a8:	adrp	x21, 19000 <iterative_hash@@Base+0x140>
    a7ac:	adrp	x22, 19000 <iterative_hash@@Base+0x140>
    a7b0:	add	x21, x21, #0x580
    a7b4:	add	x22, x22, #0x489
    a7b8:	ldrb	w8, [x21]
    a7bc:	cmp	w8, #0x7c
    a7c0:	b.hi	a7e0 <_ZSt19__iterator_categoryIPcENSt15iterator_traitsIT_E17iterator_categoryERKS2_@@Base+0x3f0>  // b.pmore
    a7c4:	adr	x9, a7d4 <_ZSt19__iterator_categoryIPcENSt15iterator_traitsIT_E17iterator_categoryERKS2_@@Base+0x3e4>
    a7c8:	ldrb	w10, [x22, x8]
    a7cc:	add	x9, x9, x10, lsl #2
    a7d0:	br	x9
    a7d4:	mov	w1, #0x5c                  	// #92
    a7d8:	mov	x0, x20
    a7dc:	bl	9600 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    a7e0:	ldrb	w1, [x21]
    a7e4:	mov	x0, x20
    a7e8:	bl	9600 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    a7ec:	add	x21, x21, #0x1
    a7f0:	b	a7b8 <_ZSt19__iterator_categoryIPcENSt15iterator_traitsIT_E17iterator_categoryERKS2_@@Base+0x3c8>
    a7f4:	adrp	x1, 19000 <iterative_hash@@Base+0x140>
    a7f8:	add	x1, x1, #0x62c
    a7fc:	mov	x0, x20
    a800:	bl	9530 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    a804:	add	x0, sp, #0x8
    a808:	mov	x8, x19
    a80c:	bl	9510 <_ZNKSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEE3strEv@plt>
    a810:	add	x0, sp, #0x8
    a814:	bl	93a0 <_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev@plt>
    a818:	ldp	x20, x19, [sp, #448]
    a81c:	ldp	x22, x21, [sp, #432]
    a820:	ldr	x28, [sp, #416]
    a824:	ldp	x29, x30, [sp, #400]
    a828:	add	sp, sp, #0x1d0
    a82c:	ret
    a830:	b	a834 <_ZSt19__iterator_categoryIPcENSt15iterator_traitsIT_E17iterator_categoryERKS2_@@Base+0x444>
    a834:	mov	x19, x0
    a838:	add	x0, sp, #0x8
    a83c:	bl	93a0 <_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev@plt>
    a840:	mov	x0, x19
    a844:	bl	9a00 <_Unwind_Resume@plt>
    a848:	stp	x29, x30, [sp, #-48]!
    a84c:	str	x21, [sp, #16]
    a850:	stp	x20, x19, [sp, #32]
    a854:	mov	x29, sp
    a858:	ldr	x8, [x0, #8]
    a85c:	mov	x19, x0
    a860:	mov	x20, x1
    a864:	ldrb	w8, [x8, #120]
    a868:	cbnz	w8, a88c <_ZSt19__iterator_categoryIPcENSt15iterator_traitsIT_E17iterator_categoryERKS2_@@Base+0x49c>
    a86c:	add	x1, x19, #0x10
    a870:	mov	x0, x20
    a874:	bl	8fa0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSERKS4_@plt>
    a878:	ldp	x20, x19, [sp, #32]
    a87c:	ldr	x21, [sp, #16]
    a880:	mov	x0, xzr
    a884:	ldp	x29, x30, [sp], #48
    a888:	ret
    a88c:	adrp	x8, 2e000 <xexit@@Base+0x14c60>
    a890:	ldr	x8, [x8, #3968]
    a894:	add	x0, x19, #0x10
    a898:	ldr	x21, [x8]
    a89c:	bl	91d0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv@plt>
    a8a0:	adrp	x1, 19000 <iterative_hash@@Base+0x140>
    a8a4:	mov	x2, x0
    a8a8:	add	x1, x1, #0x605
    a8ac:	mov	x0, x21
    a8b0:	bl	9120 <fprintf@plt>
    a8b4:	b	a86c <_ZSt19__iterator_categoryIPcENSt15iterator_traitsIT_E17iterator_categoryERKS2_@@Base+0x47c>

000000000000a8b8 <gcc_c_fe_context@@Base>:
    a8b8:	stp	x29, x30, [sp, #-32]!
    a8bc:	stp	x20, x19, [sp, #16]
    a8c0:	mov	x29, sp
    a8c4:	orr	w8, w1, w0
    a8c8:	cmp	w8, #0x1
    a8cc:	b.ls	a8d8 <gcc_c_fe_context@@Base+0x20>  // b.plast
    a8d0:	mov	x19, xzr
    a8d4:	b	a8f8 <gcc_c_fe_context@@Base+0x40>
    a8d8:	mov	w0, #0x88                  	// #136
    a8dc:	bl	9540 <_Znwm@plt>
    a8e0:	mov	x19, x0
    a8e4:	adrp	x1, 2e000 <xexit@@Base+0x14c60>
    a8e8:	adrp	x2, 2e000 <xexit@@Base+0x14c60>
    a8ec:	add	x1, x1, #0x400
    a8f0:	add	x2, x2, #0x458
    a8f4:	bl	a490 <_ZSt19__iterator_categoryIPcENSt15iterator_traitsIT_E17iterator_categoryERKS2_@@Base+0xa0>
    a8f8:	mov	x0, x19
    a8fc:	ldp	x20, x19, [sp, #16]
    a900:	ldp	x29, x30, [sp], #32
    a904:	ret
    a908:	mov	x20, x0
    a90c:	mov	x0, x19
    a910:	bl	94f0 <_ZdlPv@plt>
    a914:	mov	x0, x20
    a918:	bl	9a00 <_Unwind_Resume@plt>
    a91c:	stp	x29, x30, [sp, #-48]!
    a920:	str	x21, [sp, #16]
    a924:	stp	x20, x19, [sp, #32]
    a928:	mov	x29, sp
    a92c:	mov	x19, x3
    a930:	mov	w20, w2
    a934:	mov	x21, x0
    a938:	bl	ae68 <gcc_c_fe_context@@Base+0x5b0>
    a93c:	mov	x0, x21
    a940:	mov	w1, w20
    a944:	mov	x2, x19
    a948:	bl	ad68 <gcc_c_fe_context@@Base+0x4b0>
    a94c:	ldp	x20, x19, [sp, #32]
    a950:	ldr	x21, [sp, #16]
    a954:	ldp	x29, x30, [sp], #48
    a958:	ret
    a95c:	stp	x29, x30, [sp, #-16]!
    a960:	mov	x29, sp
    a964:	add	x0, x0, #0x58
    a968:	bl	9730 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc@plt>
    a96c:	ldp	x29, x30, [sp], #16
    a970:	ret
    a974:	stp	x1, x2, [x0, #48]
    a978:	ret
    a97c:	stp	x29, x30, [sp, #-32]!
    a980:	stp	x20, x19, [sp, #16]
    a984:	mov	x29, sp
    a988:	mov	x19, x1
    a98c:	mov	w1, w2
    a990:	mov	x20, x0
    a994:	bl	a9dc <gcc_c_fe_context@@Base+0x124>
    a998:	mov	x0, x20
    a99c:	mov	x1, x19
    a9a0:	bl	a9ec <gcc_c_fe_context@@Base+0x134>
    a9a4:	ldp	x20, x19, [sp, #16]
    a9a8:	ldp	x29, x30, [sp], #32
    a9ac:	ret
    a9b0:	cbz	x0, a9d8 <gcc_c_fe_context@@Base+0x120>
    a9b4:	stp	x29, x30, [sp, #-32]!
    a9b8:	str	x19, [sp, #16]
    a9bc:	mov	x29, sp
    a9c0:	mov	x19, x0
    a9c4:	bl	a52c <_ZSt19__iterator_categoryIPcENSt15iterator_traitsIT_E17iterator_categoryERKS2_@@Base+0x13c>
    a9c8:	mov	x0, x19
    a9cc:	bl	94f0 <_ZdlPv@plt>
    a9d0:	ldr	x19, [sp, #16]
    a9d4:	ldp	x29, x30, [sp], #32
    a9d8:	ret
    a9dc:	cmp	w1, #0x0
    a9e0:	cset	w8, ne  // ne = any
    a9e4:	strb	w8, [x0, #120]
    a9e8:	ret
    a9ec:	sub	sp, sp, #0xe0
    a9f0:	stp	x29, x30, [sp, #160]
    a9f4:	str	x23, [sp, #176]
    a9f8:	stp	x22, x21, [sp, #192]
    a9fc:	stp	x20, x19, [sp, #208]
    aa00:	add	x29, sp, #0xa0
    aa04:	mov	x21, x1
    aa08:	mov	x19, x0
    aa0c:	add	x3, x29, #0x18
    aa10:	mov	w0, #0x1                   	// #1
    aa14:	mov	w1, #0x1                   	// #1
    aa18:	mov	w2, wzr
    aa1c:	bl	9060 <socketpair@plt>
    aa20:	cbz	w0, aa38 <gcc_c_fe_context@@Base+0x180>
    aa24:	adrp	x1, 19000 <iterative_hash@@Base+0x140>
    aa28:	add	x1, x1, #0x644
    aa2c:	mov	x0, x19
    aa30:	bl	b63c <_ZN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC2ERKS1_@@Base+0xc>
    aa34:	b	aa64 <gcc_c_fe_context@@Base+0x1ac>
    aa38:	sub	x0, x29, #0x8
    aa3c:	bl	90b0 <pipe@plt>
    aa40:	cbz	w0, aa80 <gcc_c_fe_context@@Base+0x1c8>
    aa44:	adrp	x1, 19000 <iterative_hash@@Base+0x140>
    aa48:	add	x1, x1, #0x661
    aa4c:	mov	x0, x19
    aa50:	bl	b63c <_ZN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC2ERKS1_@@Base+0xc>
    aa54:	ldr	w0, [x29, #24]
    aa58:	bl	97f0 <close@plt>
    aa5c:	ldr	w0, [x29, #28]
    aa60:	bl	97f0 <close@plt>
    aa64:	mov	w0, wzr
    aa68:	ldp	x20, x19, [sp, #208]
    aa6c:	ldp	x22, x21, [sp, #192]
    aa70:	ldr	x23, [sp, #176]
    aa74:	ldp	x29, x30, [sp, #160]
    aa78:	add	sp, sp, #0xe0
    aa7c:	ret
    aa80:	add	x0, sp, #0x10
    aa84:	bl	9920 <_ZNSaIcEC2Ev@plt>
    aa88:	adrp	x1, 19000 <iterative_hash@@Base+0x140>
    aa8c:	add	x1, x1, #0x678
    aa90:	add	x0, sp, #0x30
    aa94:	add	x2, sp, #0x10
    aa98:	bl	9180 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_@plt>
    aa9c:	add	x20, x19, #0x40
    aaa0:	add	x1, sp, #0x30
    aaa4:	mov	x0, x20
    aaa8:	bl	93b0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backEOS5_@plt>
    aaac:	add	x0, sp, #0x30
    aab0:	bl	9200 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev@plt>
    aab4:	add	x0, sp, #0x10
    aab8:	bl	9010 <_ZNSaIcED2Ev@plt>
    aabc:	ldr	w3, [x29, #28]
    aac0:	adrp	x2, 19000 <iterative_hash@@Base+0x140>
    aac4:	add	x2, x2, #0x68e
    aac8:	add	x0, sp, #0x30
    aacc:	mov	w1, #0x64                  	// #100
    aad0:	bl	95f0 <snprintf@plt>
    aad4:	cmp	w0, #0x64
    aad8:	b.ge	ace0 <gcc_c_fe_context@@Base+0x428>  // b.tcont
    aadc:	add	x0, sp, #0x8
    aae0:	bl	9920 <_ZNSaIcEC2Ev@plt>
    aae4:	add	x0, sp, #0x10
    aae8:	add	x1, sp, #0x30
    aaec:	add	x2, sp, #0x8
    aaf0:	bl	9180 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_@plt>
    aaf4:	add	x1, sp, #0x10
    aaf8:	mov	x0, x20
    aafc:	bl	93b0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backEOS5_@plt>
    ab00:	add	x0, sp, #0x10
    ab04:	bl	9200 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev@plt>
    ab08:	add	x0, sp, #0x8
    ab0c:	bl	9010 <_ZNSaIcED2Ev@plt>
    ab10:	add	x1, x19, #0x58
    ab14:	mov	x0, x20
    ab18:	bl	9220 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_@plt>
    ab1c:	add	x0, sp, #0x8
    ab20:	bl	9920 <_ZNSaIcEC2Ev@plt>
    ab24:	adrp	x1, 19000 <iterative_hash@@Base+0x140>
    ab28:	add	x1, x1, #0x6ae
    ab2c:	add	x0, sp, #0x10
    ab30:	add	x2, sp, #0x8
    ab34:	bl	9180 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_@plt>
    ab38:	add	x1, sp, #0x10
    ab3c:	mov	x0, x20
    ab40:	bl	93b0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backEOS5_@plt>
    ab44:	add	x0, sp, #0x10
    ab48:	bl	9200 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev@plt>
    ab4c:	add	x0, sp, #0x8
    ab50:	bl	9010 <_ZNSaIcED2Ev@plt>
    ab54:	add	x0, sp, #0x8
    ab58:	bl	9920 <_ZNSaIcEC2Ev@plt>
    ab5c:	adrp	x1, 19000 <iterative_hash@@Base+0x140>
    ab60:	add	x1, x1, #0x6b1
    ab64:	add	x0, sp, #0x10
    ab68:	add	x2, sp, #0x8
    ab6c:	bl	9180 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_@plt>
    ab70:	add	x1, sp, #0x10
    ab74:	mov	x0, x20
    ab78:	bl	93b0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backEOS5_@plt>
    ab7c:	add	x0, sp, #0x10
    ab80:	bl	9200 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev@plt>
    ab84:	add	x0, sp, #0x8
    ab88:	bl	9010 <_ZNSaIcED2Ev@plt>
    ab8c:	add	x0, sp, #0x8
    ab90:	bl	9920 <_ZNSaIcEC2Ev@plt>
    ab94:	add	x0, sp, #0x10
    ab98:	add	x2, sp, #0x8
    ab9c:	mov	x1, x21
    aba0:	bl	9180 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_@plt>
    aba4:	add	x1, sp, #0x10
    aba8:	mov	x0, x20
    abac:	bl	93b0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backEOS5_@plt>
    abb0:	add	x0, sp, #0x10
    abb4:	bl	9200 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev@plt>
    abb8:	add	x0, sp, #0x8
    abbc:	bl	9010 <_ZNSaIcED2Ev@plt>
    abc0:	ldrb	w8, [x19, #120]
    abc4:	cbz	w8, ac00 <gcc_c_fe_context@@Base+0x348>
    abc8:	add	x0, sp, #0x8
    abcc:	bl	9920 <_ZNSaIcEC2Ev@plt>
    abd0:	adrp	x1, 19000 <iterative_hash@@Base+0x140>
    abd4:	add	x1, x1, #0x6b4
    abd8:	add	x0, sp, #0x10
    abdc:	add	x2, sp, #0x8
    abe0:	bl	9180 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_@plt>
    abe4:	add	x1, sp, #0x10
    abe8:	mov	x0, x20
    abec:	bl	93b0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backEOS5_@plt>
    abf0:	add	x0, sp, #0x10
    abf4:	bl	9200 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev@plt>
    abf8:	add	x0, sp, #0x8
    abfc:	bl	9010 <_ZNSaIcED2Ev@plt>
    ac00:	mov	w0, #0x20                  	// #32
    ac04:	bl	9540 <_Znwm@plt>
    ac08:	ldr	w1, [x29, #24]
    ac0c:	ldur	w2, [x29, #-8]
    ac10:	mov	x21, x0
    ac14:	mov	x3, x19
    ac18:	bl	b6e0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_@@Base+0x5c>
    ac1c:	adrp	x1, 19000 <iterative_hash@@Base+0x140>
    ac20:	adrp	x2, a000 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag@@Base+0x78>
    ac24:	add	x1, x1, #0x6b7
    ac28:	add	x2, x2, #0xfe0
    ac2c:	mov	x0, x21
    ac30:	str	x21, [x19, #16]
    ac34:	bl	b714 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_@@Base+0x90>
    ac38:	ldr	x0, [x19, #16]
    ac3c:	adrp	x1, 19000 <iterative_hash@@Base+0x140>
    ac40:	adrp	x2, b000 <gcc_c_fe_context@@Base+0x748>
    ac44:	add	x1, x1, #0x6c6
    ac48:	add	x2, x2, #0xc0
    ac4c:	bl	b714 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_@@Base+0x90>
    ac50:	mov	x0, x20
    ac54:	bl	9a40 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv@plt>
    ac58:	adrp	x1, 2e000 <xexit@@Base+0x14c60>
    ac5c:	ldr	x1, [x1, #3280]
    ac60:	add	x8, x0, #0x1
    ac64:	lsl	x9, x8, #3
    ac68:	cmp	xzr, x8, lsr #61
    ac6c:	csinv	x0, x9, xzr, eq  // eq = none
    ac70:	bl	9910 <_ZnamRKSt9nothrow_t@plt>
    ac74:	cbz	x0, aa68 <gcc_c_fe_context@@Base+0x1b0>
    ac78:	mov	x21, x0
    ac7c:	mov	x0, x20
    ac80:	bl	9a40 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv@plt>
    ac84:	cbz	x0, acbc <gcc_c_fe_context@@Base+0x404>
    ac88:	mov	x22, xzr
    ac8c:	mov	w23, #0x1                   	// #1
    ac90:	mov	x0, x20
    ac94:	mov	x1, x22
    ac98:	bl	9a70 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEixEm@plt>
    ac9c:	bl	91d0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv@plt>
    aca0:	str	x0, [x21, x22, lsl #3]
    aca4:	mov	x0, x20
    aca8:	mov	w22, w23
    acac:	bl	9a40 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv@plt>
    acb0:	cmp	x0, x22
    acb4:	add	w23, w23, #0x1
    acb8:	b.hi	ac90 <gcc_c_fe_context@@Base+0x3d8>  // b.pmore
    acbc:	mov	x0, x20
    acc0:	bl	9a40 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv@plt>
    acc4:	str	xzr, [x21, x0, lsl #3]
    acc8:	add	x2, x29, #0x18
    accc:	sub	x3, x29, #0x8
    acd0:	mov	x0, x19
    acd4:	mov	x1, x21
    acd8:	bl	b16c <gcc_c_fe_context@@Base+0x8b4>
    acdc:	b	aa68 <gcc_c_fe_context@@Base+0x1b0>
    ace0:	bl	98b0 <abort@plt>
    ace4:	b	ad28 <gcc_c_fe_context@@Base+0x470>
    ace8:	mov	x19, x0
    acec:	b	ad34 <gcc_c_fe_context@@Base+0x47c>
    acf0:	mov	x19, x0
    acf4:	mov	x0, x21
    acf8:	bl	94f0 <_ZdlPv@plt>
    acfc:	mov	x0, x19
    ad00:	bl	9a00 <_Unwind_Resume@plt>
    ad04:	b	ad28 <gcc_c_fe_context@@Base+0x470>
    ad08:	mov	x19, x0
    ad0c:	b	ad34 <gcc_c_fe_context@@Base+0x47c>
    ad10:	b	ad28 <gcc_c_fe_context@@Base+0x470>
    ad14:	mov	x19, x0
    ad18:	b	ad34 <gcc_c_fe_context@@Base+0x47c>
    ad1c:	b	ad28 <gcc_c_fe_context@@Base+0x470>
    ad20:	mov	x19, x0
    ad24:	b	ad34 <gcc_c_fe_context@@Base+0x47c>
    ad28:	mov	x19, x0
    ad2c:	add	x0, sp, #0x10
    ad30:	bl	9200 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev@plt>
    ad34:	add	x0, sp, #0x8
    ad38:	bl	9010 <_ZNSaIcED2Ev@plt>
    ad3c:	mov	x0, x19
    ad40:	bl	9a00 <_Unwind_Resume@plt>
    ad44:	mov	x19, x0
    ad48:	b	ad34 <gcc_c_fe_context@@Base+0x47c>
    ad4c:	mov	x19, x0
    ad50:	add	x0, sp, #0x30
    ad54:	bl	9200 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev@plt>
    ad58:	b	ad60 <gcc_c_fe_context@@Base+0x4a8>
    ad5c:	mov	x19, x0
    ad60:	add	x0, sp, #0x10
    ad64:	b	ad38 <gcc_c_fe_context@@Base+0x480>
    ad68:	sub	sp, sp, #0x80
    ad6c:	stp	x29, x30, [sp, #80]
    ad70:	stp	x22, x21, [sp, #96]
    ad74:	stp	x20, x19, [sp, #112]
    ad78:	add	x29, sp, #0x50
    ad7c:	mov	x20, x0
    ad80:	sub	x0, x29, #0x20
    ad84:	mov	x19, x2
    ad88:	mov	w21, w1
    ad8c:	bl	9480 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2Ev@plt>
    ad90:	ldr	x0, [x20, #128]
    ad94:	ldr	x8, [x0]
    ad98:	ldr	x8, [x8]
    ad9c:	sub	x1, x29, #0x20
    ada0:	blr	x8
    ada4:	mov	x22, x0
    ada8:	cbnz	x0, ae14 <gcc_c_fe_context@@Base+0x55c>
    adac:	add	x20, x20, #0x40
    adb0:	sub	x1, x29, #0x20
    adb4:	mov	x0, x20
    adb8:	bl	9220 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_@plt>
    adbc:	cmp	w21, #0x1
    adc0:	b.lt	ae10 <gcc_c_fe_context@@Base+0x558>  // b.tstop
    adc4:	mov	w22, w21
    adc8:	ldr	x21, [x19]
    adcc:	add	x0, sp, #0x8
    add0:	bl	9920 <_ZNSaIcEC2Ev@plt>
    add4:	add	x0, sp, #0x10
    add8:	add	x2, sp, #0x8
    addc:	mov	x1, x21
    ade0:	bl	9180 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_@plt>
    ade4:	add	x1, sp, #0x10
    ade8:	mov	x0, x20
    adec:	bl	93b0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backEOS5_@plt>
    adf0:	add	x0, sp, #0x10
    adf4:	bl	9200 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev@plt>
    adf8:	add	x0, sp, #0x8
    adfc:	bl	9010 <_ZNSaIcED2Ev@plt>
    ae00:	subs	x22, x22, #0x1
    ae04:	add	x19, x19, #0x8
    ae08:	b.ne	adc8 <gcc_c_fe_context@@Base+0x510>  // b.any
    ae0c:	b	ae14 <gcc_c_fe_context@@Base+0x55c>
    ae10:	mov	x22, xzr
    ae14:	sub	x0, x29, #0x20
    ae18:	bl	9200 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev@plt>
    ae1c:	mov	x0, x22
    ae20:	ldp	x20, x19, [sp, #112]
    ae24:	ldp	x22, x21, [sp, #96]
    ae28:	ldp	x29, x30, [sp, #80]
    ae2c:	add	sp, sp, #0x80
    ae30:	ret
    ae34:	mov	x19, x0
    ae38:	b	ae58 <gcc_c_fe_context@@Base+0x5a0>
    ae3c:	mov	x19, x0
    ae40:	add	x0, sp, #0x10
    ae44:	bl	9200 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev@plt>
    ae48:	b	ae50 <gcc_c_fe_context@@Base+0x598>
    ae4c:	mov	x19, x0
    ae50:	add	x0, sp, #0x8
    ae54:	bl	9010 <_ZNSaIcED2Ev@plt>
    ae58:	sub	x0, x29, #0x20
    ae5c:	bl	9200 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev@plt>
    ae60:	mov	x0, x19
    ae64:	bl	9a00 <_Unwind_Resume@plt>
    ae68:	sub	sp, sp, #0x50
    ae6c:	stp	x29, x30, [sp, #32]
    ae70:	str	x21, [sp, #48]
    ae74:	stp	x20, x19, [sp, #64]
    ae78:	add	x29, sp, #0x20
    ae7c:	mov	x20, x0
    ae80:	ldr	x0, [x0, #128]
    ae84:	mov	x21, x1
    ae88:	cbz	x0, ae98 <gcc_c_fe_context@@Base+0x5e0>
    ae8c:	ldr	x8, [x0]
    ae90:	ldr	x8, [x8, #16]
    ae94:	blr	x8
    ae98:	mov	w0, #0x30                  	// #48
    ae9c:	bl	9540 <_Znwm@plt>
    aea0:	mov	x19, x0
    aea4:	add	x0, x29, #0x18
    aea8:	bl	9920 <_ZNSaIcEC2Ev@plt>
    aeac:	mov	x0, sp
    aeb0:	add	x2, x29, #0x18
    aeb4:	mov	x1, x21
    aeb8:	bl	9180 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_@plt>
    aebc:	mov	x2, sp
    aec0:	mov	x0, x19
    aec4:	mov	x1, x20
    aec8:	bl	c114 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0x154>
    aecc:	mov	x0, sp
    aed0:	str	x19, [x20, #128]
    aed4:	bl	9200 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev@plt>
    aed8:	add	x0, x29, #0x18
    aedc:	bl	9010 <_ZNSaIcED2Ev@plt>
    aee0:	ldp	x20, x19, [sp, #64]
    aee4:	ldr	x21, [sp, #48]
    aee8:	ldp	x29, x30, [sp, #32]
    aeec:	mov	x0, xzr
    aef0:	add	sp, sp, #0x50
    aef4:	ret
    aef8:	mov	x20, x0
    aefc:	mov	x0, sp
    af00:	bl	9200 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev@plt>
    af04:	b	af0c <gcc_c_fe_context@@Base+0x654>
    af08:	mov	x20, x0
    af0c:	add	x0, x29, #0x18
    af10:	bl	9010 <_ZNSaIcED2Ev@plt>
    af14:	mov	x0, x19
    af18:	bl	94f0 <_ZdlPv@plt>
    af1c:	mov	x0, x20
    af20:	bl	9a00 <_Unwind_Resume@plt>
    af24:	sub	sp, sp, #0x50
    af28:	stp	x29, x30, [sp, #32]
    af2c:	str	x21, [sp, #48]
    af30:	stp	x20, x19, [sp, #64]
    af34:	add	x29, sp, #0x20
    af38:	mov	x20, x0
    af3c:	ldr	x0, [x0, #128]
    af40:	mov	x21, x1
    af44:	cbz	x0, af54 <gcc_c_fe_context@@Base+0x69c>
    af48:	ldr	x8, [x0]
    af4c:	ldr	x8, [x8, #16]
    af50:	blr	x8
    af54:	mov	w0, #0x30                  	// #48
    af58:	bl	9540 <_Znwm@plt>
    af5c:	mov	x19, x0
    af60:	add	x0, x29, #0x18
    af64:	bl	9920 <_ZNSaIcEC2Ev@plt>
    af68:	mov	x0, sp
    af6c:	add	x2, x29, #0x18
    af70:	mov	x1, x21
    af74:	bl	9180 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_@plt>
    af78:	mov	x2, sp
    af7c:	mov	x0, x19
    af80:	mov	x1, x20
    af84:	bl	c164 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0x1a4>
    af88:	mov	x0, sp
    af8c:	str	x19, [x20, #128]
    af90:	bl	9200 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev@plt>
    af94:	add	x0, x29, #0x18
    af98:	bl	9010 <_ZNSaIcED2Ev@plt>
    af9c:	ldp	x20, x19, [sp, #64]
    afa0:	ldr	x21, [sp, #48]
    afa4:	ldp	x29, x30, [sp, #32]
    afa8:	mov	x0, xzr
    afac:	add	sp, sp, #0x50
    afb0:	ret
    afb4:	mov	x20, x0
    afb8:	mov	x0, sp
    afbc:	bl	9200 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev@plt>
    afc0:	b	afc8 <gcc_c_fe_context@@Base+0x710>
    afc4:	mov	x20, x0
    afc8:	add	x0, x29, #0x18
    afcc:	bl	9010 <_ZNSaIcED2Ev@plt>
    afd0:	mov	x0, x19
    afd4:	bl	94f0 <_ZdlPv@plt>
    afd8:	mov	x0, x20
    afdc:	bl	9a00 <_Unwind_Resume@plt>
    afe0:	sub	sp, sp, #0x30
    afe4:	stp	x29, x30, [sp, #16]
    afe8:	stp	x20, x19, [sp, #32]
    afec:	add	x29, sp, #0x10
    aff0:	mov	x19, x0
    aff4:	add	x0, sp, #0x8
    aff8:	bl	c03c <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0x7c>
    affc:	mov	x0, sp
    b000:	bl	c040 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0x80>
    b004:	mov	w1, #0x2                   	// #2
    b008:	mov	x0, x19
    b00c:	bl	11ed4 <gcc_cp_fe_context@@Base+0x3ea0>
    b010:	cbz	w0, b07c <gcc_c_fe_context@@Base+0x7c4>
    b014:	add	x0, sp, #0x8
    b018:	mov	x1, x19
    b01c:	bl	c048 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0x88>
    b020:	cbz	w0, b07c <gcc_c_fe_context@@Base+0x7c4>
    b024:	mov	x0, sp
    b028:	mov	x1, x19
    b02c:	bl	c068 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xa8>
    b030:	cbz	w0, b07c <gcc_c_fe_context@@Base+0x7c4>
    b034:	add	x0, sp, #0x8
    b038:	bl	c088 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xc8>
    b03c:	mov	w20, w0
    b040:	mov	x0, sp
    b044:	bl	c090 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xd0>
    b048:	mov	x2, x0
    b04c:	mov	x0, x19
    b050:	mov	w1, w20
    b054:	bl	b2b8 <gcc_c_fe_context@@Base+0xa00>
    b058:	mov	w1, #0x52                  	// #82
    b05c:	mov	x0, x19
    b060:	bl	11b24 <gcc_cp_fe_context@@Base+0x3af0>
    b064:	cbz	w0, b07c <gcc_c_fe_context@@Base+0x7c4>
    b068:	mov	w1, #0x1                   	// #1
    b06c:	mov	x0, x19
    b070:	bl	c098 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xd8>
    b074:	mov	w19, w0
    b078:	b	b080 <gcc_c_fe_context@@Base+0x7c8>
    b07c:	mov	w19, wzr
    b080:	mov	x0, sp
    b084:	bl	c0b0 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xf0>
    b088:	add	x0, sp, #0x8
    b08c:	bl	c0cc <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0x10c>
    b090:	mov	w0, w19
    b094:	ldp	x20, x19, [sp, #32]
    b098:	ldp	x29, x30, [sp, #16]
    b09c:	add	sp, sp, #0x30
    b0a0:	ret
    b0a4:	mov	x19, x0
    b0a8:	mov	x0, sp
    b0ac:	bl	c0b0 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xf0>
    b0b0:	add	x0, sp, #0x8
    b0b4:	bl	c0cc <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0x10c>
    b0b8:	mov	x0, x19
    b0bc:	bl	9a00 <_Unwind_Resume@plt>
    b0c0:	sub	sp, sp, #0x30
    b0c4:	stp	x29, x30, [sp, #16]
    b0c8:	stp	x20, x19, [sp, #32]
    b0cc:	add	x29, sp, #0x10
    b0d0:	mov	x19, x0
    b0d4:	add	x0, sp, #0x8
    b0d8:	bl	c040 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0x80>
    b0dc:	mov	w1, #0x1                   	// #1
    b0e0:	mov	x0, x19
    b0e4:	bl	11ed4 <gcc_cp_fe_context@@Base+0x3ea0>
    b0e8:	cbz	w0, b138 <gcc_c_fe_context@@Base+0x880>
    b0ec:	add	x0, sp, #0x8
    b0f0:	mov	x1, x19
    b0f4:	bl	c068 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xa8>
    b0f8:	cbz	w0, b138 <gcc_c_fe_context@@Base+0x880>
    b0fc:	add	x0, sp, #0x8
    b100:	bl	c090 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xd0>
    b104:	mov	x1, x0
    b108:	mov	x0, x19
    b10c:	bl	b2e4 <gcc_c_fe_context@@Base+0xa2c>
    b110:	mov	x20, x0
    b114:	mov	w1, #0x52                  	// #82
    b118:	mov	x0, x19
    b11c:	bl	11b24 <gcc_cp_fe_context@@Base+0x3af0>
    b120:	cbz	w0, b138 <gcc_c_fe_context@@Base+0x880>
    b124:	mov	x0, x19
    b128:	mov	x1, x20
    b12c:	bl	c0d0 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0x110>
    b130:	mov	w19, w0
    b134:	b	b13c <gcc_c_fe_context@@Base+0x884>
    b138:	mov	w19, wzr
    b13c:	add	x0, sp, #0x8
    b140:	bl	c0b0 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xf0>
    b144:	mov	w0, w19
    b148:	ldp	x20, x19, [sp, #32]
    b14c:	ldp	x29, x30, [sp, #16]
    b150:	add	sp, sp, #0x30
    b154:	ret
    b158:	mov	x19, x0
    b15c:	add	x0, sp, #0x8
    b160:	bl	c0b0 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xf0>
    b164:	mov	x0, x19
    b168:	bl	9a00 <_Unwind_Resume@plt>
    b16c:	stp	x29, x30, [sp, #-64]!
    b170:	str	x23, [sp, #16]
    b174:	stp	x22, x21, [sp, #32]
    b178:	stp	x20, x19, [sp, #48]
    b17c:	mov	x29, sp
    b180:	mov	x19, x3
    b184:	mov	x20, x2
    b188:	mov	x22, x1
    b18c:	mov	x23, x0
    b190:	bl	97b0 <fork@plt>
    b194:	cmn	w0, #0x1
    b198:	b.eq	b1e4 <gcc_c_fe_context@@Base+0x92c>  // b.none
    b19c:	mov	w21, w0
    b1a0:	cbz	w0, b274 <gcc_c_fe_context@@Base+0x9bc>
    b1a4:	ldr	w0, [x20, #4]
    b1a8:	bl	97f0 <close@plt>
    b1ac:	ldr	w0, [x19, #4]
    b1b0:	bl	97f0 <close@plt>
    b1b4:	ldr	x0, [x23, #16]
    b1b8:	mov	w1, #0x48                  	// #72
    b1bc:	bl	11b24 <gcc_cp_fe_context@@Base+0x3af0>
    b1c0:	cbz	w0, b208 <gcc_c_fe_context@@Base+0x950>
    b1c4:	ldr	x0, [x23, #16]
    b1c8:	mov	w1, #0x1                   	// #1
    b1cc:	bl	c0e4 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0x124>
    b1d0:	cbz	w0, b208 <gcc_c_fe_context@@Base+0x950>
    b1d4:	ldr	x0, [x23, #16]
    b1d8:	bl	c0fc <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0x13c>
    b1dc:	mov	w22, w0
    b1e0:	b	b20c <gcc_c_fe_context@@Base+0x954>
    b1e4:	ldr	w0, [x20]
    b1e8:	bl	97f0 <close@plt>
    b1ec:	ldr	w0, [x20, #4]
    b1f0:	bl	97f0 <close@plt>
    b1f4:	ldr	w0, [x19]
    b1f8:	bl	97f0 <close@plt>
    b1fc:	ldr	w0, [x19, #4]
    b200:	bl	97f0 <close@plt>
    b204:	b	b250 <gcc_c_fe_context@@Base+0x998>
    b208:	mov	w22, wzr
    b20c:	ldr	w0, [x20]
    b210:	bl	97f0 <close@plt>
    b214:	ldr	w0, [x19]
    b218:	bl	97f0 <close@plt>
    b21c:	add	x1, x29, #0x1c
    b220:	mov	w0, w21
    b224:	mov	w2, wzr
    b228:	bl	9150 <waitpid@plt>
    b22c:	cmn	w0, #0x1
    b230:	b.ne	b244 <gcc_c_fe_context@@Base+0x98c>  // b.any
    b234:	bl	96d0 <__errno_location@plt>
    b238:	ldr	w8, [x0]
    b23c:	cmp	w8, #0x4
    b240:	b.ne	b250 <gcc_c_fe_context@@Base+0x998>  // b.any
    b244:	ldrh	w8, [x29, #28]
    b248:	tst	w8, #0xffffff7f
    b24c:	b.eq	b268 <gcc_c_fe_context@@Base+0x9b0>  // b.none
    b250:	mov	w0, wzr
    b254:	ldp	x20, x19, [sp, #48]
    b258:	ldp	x22, x21, [sp, #32]
    b25c:	ldr	x23, [sp, #16]
    b260:	ldp	x29, x30, [sp], #64
    b264:	ret
    b268:	cmp	w22, #0x0
    b26c:	cset	w0, ne  // ne = any
    b270:	b	b254 <gcc_c_fe_context@@Base+0x99c>
    b274:	ldr	w0, [x19, #4]
    b278:	mov	w1, #0x1                   	// #1
    b27c:	bl	90c0 <dup2@plt>
    b280:	ldr	w0, [x19, #4]
    b284:	mov	w1, #0x2                   	// #2
    b288:	bl	90c0 <dup2@plt>
    b28c:	ldr	w0, [x19]
    b290:	bl	97f0 <close@plt>
    b294:	ldr	w0, [x19, #4]
    b298:	bl	97f0 <close@plt>
    b29c:	ldr	w0, [x20]
    b2a0:	bl	97f0 <close@plt>
    b2a4:	ldr	x0, [x22]
    b2a8:	mov	x1, x22
    b2ac:	bl	9050 <execvp@plt>
    b2b0:	mov	w0, #0x7f                  	// #127
    b2b4:	bl	92e0 <_exit@plt>
    b2b8:	stp	x29, x30, [sp, #-16]!
    b2bc:	mov	x29, sp
    b2c0:	ldr	x8, [x0, #24]
    b2c4:	mov	x3, x2
    b2c8:	mov	w2, w1
    b2cc:	ldr	x9, [x8, #24]
    b2d0:	ldr	x0, [x8, #40]
    b2d4:	mov	x1, x8
    b2d8:	blr	x9
    b2dc:	ldp	x29, x30, [sp], #16
    b2e0:	ret
    b2e4:	stp	x29, x30, [sp, #-16]!
    b2e8:	mov	x29, sp
    b2ec:	ldr	x8, [x0, #24]
    b2f0:	mov	x2, x1
    b2f4:	ldp	x9, x0, [x8, #32]
    b2f8:	mov	x1, x8
    b2fc:	blr	x9
    b300:	ldp	x29, x30, [sp], #16
    b304:	ret
    b308:	stp	x1, x2, [x0, #24]
    b30c:	str	x3, [x0, #40]
    b310:	ret

000000000000b314 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2Ev@@Base>:
    b314:	stp	x29, x30, [sp, #-16]!
    b318:	mov	x29, sp
    b31c:	bl	9450 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2Ev@plt>
    b320:	ldp	x29, x30, [sp], #16
    b324:	ret
    b328:	adrp	x8, 2e000 <xexit@@Base+0x14c60>
    b32c:	add	x8, x8, #0x548
    b330:	stp	x8, x1, [x0]
    b334:	ret

000000000000b338 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev@@Base>:
    b338:	stp	x29, x30, [sp, #-48]!
    b33c:	str	x21, [sp, #16]
    b340:	stp	x20, x19, [sp, #32]
    b344:	mov	x29, sp
    b348:	ldp	x20, x21, [x0]
    b34c:	mov	x19, x0
    b350:	bl	9af0 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_get_Tp_allocatorEv@plt>
    b354:	mov	x2, x0
    b358:	mov	x0, x20
    b35c:	mov	x1, x21
    b360:	bl	9700 <_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E@plt>
    b364:	mov	x0, x19
    b368:	bl	94c0 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev@plt>
    b36c:	ldp	x20, x19, [sp, #32]
    b370:	ldr	x21, [sp, #16]
    b374:	ldp	x29, x30, [sp], #48
    b378:	ret
    b37c:	mov	x20, x0
    b380:	mov	x0, x19
    b384:	bl	94c0 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev@plt>
    b388:	mov	x0, x20
    b38c:	bl	a080 <_ZSt8distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_@@Base+0x40>
    b390:	ret
    b394:	stp	x29, x30, [sp, #-32]!
    b398:	str	x19, [sp, #16]
    b39c:	mov	x29, sp
    b3a0:	mov	x19, x0
    b3a4:	bl	b390 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev@@Base+0x58>
    b3a8:	mov	x0, x19
    b3ac:	bl	94f0 <_ZdlPv@plt>
    b3b0:	ldr	x19, [sp, #16]
    b3b4:	ldp	x29, x30, [sp], #32
    b3b8:	ret
    b3bc:	stp	x29, x30, [sp, #-32]!
    b3c0:	adrp	x8, 2e000 <xexit@@Base+0x14c60>
    b3c4:	add	x8, x8, #0x580
    b3c8:	str	x19, [sp, #16]
    b3cc:	mov	x19, x0
    b3d0:	str	x8, [x0], #16
    b3d4:	mov	x29, sp
    b3d8:	bl	9200 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev@plt>
    b3dc:	mov	x0, x19
    b3e0:	bl	b390 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev@@Base+0x58>
    b3e4:	ldr	x19, [sp, #16]
    b3e8:	ldp	x29, x30, [sp], #32
    b3ec:	ret
    b3f0:	stp	x29, x30, [sp, #-32]!
    b3f4:	str	x19, [sp, #16]
    b3f8:	mov	x29, sp
    b3fc:	mov	x19, x0
    b400:	bl	b3bc <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev@@Base+0x84>
    b404:	mov	x0, x19
    b408:	bl	94f0 <_ZdlPv@plt>
    b40c:	ldr	x19, [sp, #16]
    b410:	ldp	x29, x30, [sp], #32
    b414:	ret
    b418:	stp	x29, x30, [sp, #-32]!
    b41c:	adrp	x8, 2e000 <xexit@@Base+0x14c60>
    b420:	add	x8, x8, #0x5c0
    b424:	str	x19, [sp, #16]
    b428:	mov	x19, x0
    b42c:	str	x8, [x0], #16
    b430:	mov	x29, sp
    b434:	bl	9200 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev@plt>
    b438:	mov	x0, x19
    b43c:	bl	b390 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev@@Base+0x58>
    b440:	ldr	x19, [sp, #16]
    b444:	ldp	x29, x30, [sp], #32
    b448:	ret
    b44c:	stp	x29, x30, [sp, #-32]!
    b450:	str	x19, [sp, #16]
    b454:	mov	x29, sp
    b458:	mov	x19, x0
    b45c:	bl	b418 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev@@Base+0xe0>
    b460:	mov	x0, x19
    b464:	bl	94f0 <_ZdlPv@plt>
    b468:	ldr	x19, [sp, #16]
    b46c:	ldp	x29, x30, [sp], #32
    b470:	ret

000000000000b474 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2Ev@@Base>:
    b474:	stp	x29, x30, [sp, #-16]!
    b478:	mov	x29, sp
    b47c:	bl	9660 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_Vector_implC2Ev@plt>
    b480:	ldp	x29, x30, [sp], #16
    b484:	ret

000000000000b488 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_Vector_implC2Ev@@Base>:
    b488:	stp	x29, x30, [sp, #-32]!
    b48c:	str	x19, [sp, #16]
    b490:	mov	x29, sp
    b494:	mov	x19, x0
    b498:	bl	9090 <_ZNSaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC2Ev@plt>
    b49c:	mov	x0, x19
    b4a0:	bl	94a0 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_Vector_impl_dataC2Ev@plt>
    b4a4:	ldr	x19, [sp, #16]
    b4a8:	ldp	x29, x30, [sp], #32
    b4ac:	ret

000000000000b4b0 <_ZNSaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC2Ev@@Base>:
    b4b0:	stp	x29, x30, [sp, #-16]!
    b4b4:	mov	x29, sp
    b4b8:	bl	9590 <_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC2Ev@plt>
    b4bc:	ldp	x29, x30, [sp], #16
    b4c0:	ret

000000000000b4c4 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_Vector_impl_dataC2Ev@@Base>:
    b4c4:	stp	xzr, xzr, [x0]
    b4c8:	str	xzr, [x0, #16]
    b4cc:	ret

000000000000b4d0 <_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC2Ev@@Base>:
    b4d0:	ret

000000000000b4d4 <_ZStorSt13_Ios_OpenmodeS_@@Base>:
    b4d4:	orr	w0, w1, w0
    b4d8:	ret

000000000000b4dc <_ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEED2Ev@@Base>:
    b4dc:	stp	x29, x30, [sp, #-32]!
    b4e0:	str	x19, [sp, #16]
    b4e4:	adrp	x8, 2e000 <xexit@@Base+0x14c60>
    b4e8:	ldr	x8, [x8, #4048]
    b4ec:	mov	x19, x0
    b4f0:	mov	x29, sp
    b4f4:	add	x8, x8, #0x10
    b4f8:	str	x8, [x0], #72
    b4fc:	bl	9200 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev@plt>
    b500:	mov	x0, x19
    b504:	bl	9b20 <_ZNSt15basic_streambufIcSt11char_traitsIcEED2Ev@plt>
    b508:	ldr	x19, [sp, #16]
    b50c:	ldp	x29, x30, [sp], #32
    b510:	ret

000000000000b514 <_ZStorSt12_Ios_IostateS_@@Base>:
    b514:	orr	w0, w1, w0
    b518:	ret

000000000000b51c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6assignIPcvEERS4_T_S8_@@Base>:
    b51c:	sub	sp, sp, #0x50
    b520:	stp	x29, x30, [sp, #32]
    b524:	str	x21, [sp, #48]
    b528:	stp	x20, x19, [sp, #64]
    b52c:	add	x29, sp, #0x20
    b530:	mov	x19, x2
    b534:	mov	x20, x1
    b538:	mov	x21, x0
    b53c:	bl	9470 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5beginEv@plt>
    b540:	stur	x0, [x29, #-8]
    b544:	add	x0, x29, #0x18
    b548:	sub	x1, x29, #0x8
    b54c:	bl	90a0 <_ZN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC2IPcEERKNS0_IT_NS_11__enable_ifIXsr3std10__are_sameISC_SB_EE7__valueES8_E6__typeEEE@plt>
    b550:	mov	x0, x21
    b554:	bl	9290 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE3endEv@plt>
    b558:	str	x0, [sp, #8]
    b55c:	add	x0, sp, #0x10
    b560:	add	x1, sp, #0x8
    b564:	bl	90a0 <_ZN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC2IPcEERKNS0_IT_NS_11__enable_ifIXsr3std10__are_sameISC_SB_EE7__valueES8_E6__typeEEE@plt>
    b568:	ldr	x1, [x29, #24]
    b56c:	ldr	x2, [sp, #16]
    b570:	mov	x0, x21
    b574:	mov	x3, x20
    b578:	mov	x4, x19
    b57c:	bl	9770 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEN9__gnu_cxx17__normal_iteratorIPKcS4_EES9_PcSA_@plt>
    b580:	ldp	x20, x19, [sp, #64]
    b584:	ldr	x21, [sp, #48]
    b588:	ldp	x29, x30, [sp, #32]
    b58c:	add	sp, sp, #0x50
    b590:	ret

000000000000b594 <_ZN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC2IPcEERKNS0_IT_NS_11__enable_ifIXsr3std10__are_sameISC_SB_EE7__valueES8_E6__typeEEE@@Base>:
    b594:	stp	x29, x30, [sp, #-32]!
    b598:	str	x19, [sp, #16]
    b59c:	mov	x19, x0
    b5a0:	mov	x0, x1
    b5a4:	mov	x29, sp
    b5a8:	bl	9710 <_ZNK9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE4baseEv@plt>
    b5ac:	ldr	x8, [x0]
    b5b0:	str	x8, [x19]
    b5b4:	ldr	x19, [sp, #16]
    b5b8:	ldp	x29, x30, [sp], #32
    b5bc:	ret

000000000000b5c0 <_ZN9__gnu_cxxmiIPKcPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEDTmicldtfp_4baseEcldtfp0_4baseEERKNS_17__normal_iteratorIT_T1_EERKNSB_IT0_SD_EE@@Base>:
    b5c0:	stp	x29, x30, [sp, #-32]!
    b5c4:	stp	x20, x19, [sp, #16]
    b5c8:	mov	x29, sp
    b5cc:	mov	x19, x1
    b5d0:	bl	96f0 <_ZNK9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE4baseEv@plt>
    b5d4:	ldr	x20, [x0]
    b5d8:	mov	x0, x19
    b5dc:	bl	9710 <_ZNK9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE4baseEv@plt>
    b5e0:	ldr	x8, [x0]
    b5e4:	sub	x0, x20, x8
    b5e8:	ldp	x20, x19, [sp, #16]
    b5ec:	ldp	x29, x30, [sp], #32
    b5f0:	ret

000000000000b5f4 <_ZN9__gnu_cxxmiIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSC_SF_@@Base>:
    b5f4:	stp	x29, x30, [sp, #-32]!
    b5f8:	stp	x20, x19, [sp, #16]
    b5fc:	mov	x29, sp
    b600:	mov	x19, x1
    b604:	bl	96f0 <_ZNK9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE4baseEv@plt>
    b608:	ldr	x20, [x0]
    b60c:	mov	x0, x19
    b610:	bl	96f0 <_ZNK9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE4baseEv@plt>
    b614:	ldr	x8, [x0]
    b618:	sub	x0, x20, x8
    b61c:	ldp	x20, x19, [sp, #16]
    b620:	ldp	x29, x30, [sp], #32
    b624:	ret

000000000000b628 <_ZNK9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE4baseEv@@Base>:
    b628:	ret

000000000000b62c <_ZNK9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE4baseEv@@Base>:
    b62c:	ret

000000000000b630 <_ZN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC2ERKS1_@@Base>:
    b630:	ldr	x8, [x1]
    b634:	str	x8, [x0]
    b638:	ret
    b63c:	stp	x29, x30, [sp, #-16]!
    b640:	mov	x29, sp
    b644:	ldp	x8, x0, [x0, #48]
    b648:	blr	x8
    b64c:	ldp	x29, x30, [sp], #16
    b650:	ret

000000000000b654 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backEOS5_@@Base>:
    b654:	stp	x29, x30, [sp, #-32]!
    b658:	str	x19, [sp, #16]
    b65c:	mov	x29, sp
    b660:	mov	x19, x0
    b664:	mov	x0, x1
    b668:	bl	9500 <_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_@plt>
    b66c:	mov	x1, x0
    b670:	mov	x0, x19
    b674:	bl	9a90 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12emplace_backIJS5_EEEvDpOT_@plt>
    b678:	ldr	x19, [sp, #16]
    b67c:	ldp	x29, x30, [sp], #32
    b680:	ret

000000000000b684 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_@@Base>:
    b684:	stp	x29, x30, [sp, #-32]!
    b688:	stp	x20, x19, [sp, #16]
    b68c:	mov	x29, sp
    b690:	ldp	x8, x9, [x0, #8]
    b694:	mov	x19, x0
    b698:	mov	x20, x1
    b69c:	cmp	x8, x9
    b6a0:	b.eq	b6c0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_@@Base+0x3c>  // b.none
    b6a4:	mov	x1, x8
    b6a8:	mov	x2, x20
    b6ac:	bl	94d0 <_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE9constructIS5_JRKS5_EEEvRS6_PT_DpOT0_@plt>
    b6b0:	ldr	x8, [x19, #8]
    b6b4:	add	x8, x8, #0x20
    b6b8:	str	x8, [x19, #8]
    b6bc:	b	b6d4 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_@@Base+0x50>
    b6c0:	bl	9970 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE3endEv@plt>
    b6c4:	mov	x1, x0
    b6c8:	mov	x0, x19
    b6cc:	mov	x2, x20
    b6d0:	bl	9630 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@plt>
    b6d4:	ldp	x20, x19, [sp, #16]
    b6d8:	ldp	x29, x30, [sp], #32
    b6dc:	ret
    b6e0:	stp	x29, x30, [sp, #-32]!
    b6e4:	stp	x20, x19, [sp, #16]
    b6e8:	mov	x29, sp
    b6ec:	mov	x19, x3
    b6f0:	mov	x20, x0
    b6f4:	bl	bfd4 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0x14>
    b6f8:	adrp	x8, 2e000 <xexit@@Base+0x14c60>
    b6fc:	add	x8, x8, #0x600
    b700:	str	x8, [x20]
    b704:	str	x19, [x20, #24]
    b708:	ldp	x20, x19, [sp, #16]
    b70c:	ldp	x29, x30, [sp], #32
    b710:	ret
    b714:	stp	x29, x30, [sp, #-16]!
    b718:	mov	x29, sp
    b71c:	add	x0, x0, #0x10
    b720:	bl	11a5c <gcc_cp_fe_context@@Base+0x3a28>
    b724:	ldp	x29, x30, [sp], #16
    b728:	ret

000000000000b72c <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv@@Base>:
    b72c:	ldp	x9, x8, [x0]
    b730:	sub	x8, x8, x9
    b734:	asr	x0, x8, #5
    b738:	ret

000000000000b73c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEixEm@@Base>:
    b73c:	ldr	x8, [x0]
    b740:	add	x0, x8, x1, lsl #5
    b744:	ret

000000000000b748 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12emplace_backIJS5_EEEvDpOT_@@Base>:
    b748:	stp	x29, x30, [sp, #-48]!
    b74c:	str	x21, [sp, #16]
    b750:	stp	x20, x19, [sp, #32]
    b754:	mov	x29, sp
    b758:	ldp	x20, x8, [x0, #8]
    b75c:	mov	x19, x0
    b760:	mov	x21, x1
    b764:	cmp	x20, x8
    b768:	b.eq	b794 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12emplace_backIJS5_EEEvDpOT_@@Base+0x4c>  // b.none
    b76c:	mov	x0, x21
    b770:	bl	9820 <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE@plt>
    b774:	mov	x2, x0
    b778:	mov	x0, x19
    b77c:	mov	x1, x20
    b780:	bl	9520 <_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE9constructIS5_JS5_EEEvRS6_PT_DpOT0_@plt>
    b784:	ldr	x8, [x19, #8]
    b788:	add	x8, x8, #0x20
    b78c:	str	x8, [x19, #8]
    b790:	b	b7b8 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12emplace_backIJS5_EEEvDpOT_@@Base+0x70>
    b794:	mov	x0, x19
    b798:	bl	9970 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE3endEv@plt>
    b79c:	mov	x20, x0
    b7a0:	mov	x0, x21
    b7a4:	bl	9820 <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE@plt>
    b7a8:	mov	x2, x0
    b7ac:	mov	x0, x19
    b7b0:	mov	x1, x20
    b7b4:	bl	9870 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@plt>
    b7b8:	ldp	x20, x19, [sp, #32]
    b7bc:	ldr	x21, [sp, #16]
    b7c0:	ldp	x29, x30, [sp], #48
    b7c4:	ret

000000000000b7c8 <_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE9constructIS5_JS5_EEEvRS6_PT_DpOT0_@@Base>:
    b7c8:	stp	x29, x30, [sp, #-32]!
    b7cc:	stp	x20, x19, [sp, #16]
    b7d0:	mov	x20, x0
    b7d4:	mov	x0, x2
    b7d8:	mov	x29, sp
    b7dc:	mov	x19, x1
    b7e0:	bl	9820 <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE@plt>
    b7e4:	mov	x2, x0
    b7e8:	mov	x0, x20
    b7ec:	mov	x1, x19
    b7f0:	bl	92d0 <_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE9constructIS6_JS6_EEEvPT_DpOT0_@plt>
    b7f4:	ldp	x20, x19, [sp, #16]
    b7f8:	ldp	x29, x30, [sp], #32
    b7fc:	ret

000000000000b800 <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE@@Base>:
    b800:	ret

000000000000b804 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base>:
    b804:	sub	sp, sp, #0x60
    b808:	stp	x29, x30, [sp, #16]
    b80c:	str	x25, [sp, #32]
    b810:	stp	x24, x23, [sp, #48]
    b814:	stp	x22, x21, [sp, #64]
    b818:	stp	x20, x19, [sp, #80]
    b81c:	add	x29, sp, #0x10
    b820:	mov	x23, x2
    b824:	adrp	x2, 19000 <iterative_hash@@Base+0x140>
    b828:	str	x1, [x29, #24]
    b82c:	add	x2, x2, #0x6d5
    b830:	mov	w1, #0x1                   	// #1
    b834:	mov	x19, x0
    b838:	bl	93d0 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_M_check_lenEmPKc@plt>
    b83c:	ldp	x21, x22, [x19]
    b840:	mov	x20, x0
    b844:	mov	x0, x19
    b848:	bl	9940 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE5beginEv@plt>
    b84c:	str	x0, [sp, #8]
    b850:	add	x0, x29, #0x18
    b854:	add	x1, sp, #0x8
    b858:	bl	99d0 <_ZN9__gnu_cxxmiIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSE_SH_@plt>
    b85c:	mov	x24, x0
    b860:	mov	x0, x19
    b864:	mov	x1, x20
    b868:	bl	9610 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_M_allocateEm@plt>
    b86c:	mov	x25, x0
    b870:	add	x24, x0, x24, lsl #5
    b874:	mov	x0, x23
    b878:	bl	9820 <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE@plt>
    b87c:	mov	x2, x0
    b880:	mov	x0, x19
    b884:	mov	x1, x24
    b888:	bl	9520 <_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE9constructIS5_JS5_EEEvRS6_PT_DpOT0_@plt>
    b88c:	add	x0, x29, #0x18
    b890:	bl	91b0 <_ZNK9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEE4baseEv@plt>
    b894:	ldr	x23, [x0]
    b898:	mov	x0, x19
    b89c:	bl	9af0 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_get_Tp_allocatorEv@plt>
    b8a0:	mov	x3, x0
    b8a4:	mov	x0, x21
    b8a8:	mov	x1, x23
    b8ac:	mov	x2, x25
    b8b0:	bl	94b0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_S_relocateEPS5_S8_S8_RS6_@plt>
    b8b4:	add	x23, x0, #0x20
    b8b8:	add	x0, x29, #0x18
    b8bc:	bl	91b0 <_ZNK9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEE4baseEv@plt>
    b8c0:	ldr	x24, [x0]
    b8c4:	mov	x0, x19
    b8c8:	bl	9af0 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_get_Tp_allocatorEv@plt>
    b8cc:	mov	x3, x0
    b8d0:	mov	x0, x24
    b8d4:	mov	x1, x22
    b8d8:	mov	x2, x23
    b8dc:	bl	94b0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_S_relocateEPS5_S8_S8_RS6_@plt>
    b8e0:	ldr	x8, [x19, #16]
    b8e4:	mov	x22, x0
    b8e8:	mov	x0, x19
    b8ec:	mov	x1, x21
    b8f0:	sub	x8, x8, x21
    b8f4:	asr	x2, x8, #5
    b8f8:	bl	96a0 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE13_M_deallocateEPS5_m@plt>
    b8fc:	add	x8, x25, x20, lsl #5
    b900:	stp	x25, x22, [x19]
    b904:	str	x8, [x19, #16]
    b908:	ldp	x20, x19, [sp, #80]
    b90c:	ldp	x22, x21, [sp, #64]
    b910:	ldp	x24, x23, [sp, #48]
    b914:	ldr	x25, [sp, #32]
    b918:	ldp	x29, x30, [sp, #16]
    b91c:	add	sp, sp, #0x60
    b920:	ret

000000000000b924 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE3endEv@@Base>:
    b924:	sub	sp, sp, #0x20
    b928:	add	x1, x0, #0x8
    b92c:	add	x0, sp, #0x8
    b930:	stp	x29, x30, [sp, #16]
    b934:	add	x29, sp, #0x10
    b938:	bl	9280 <_ZN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEEC2ERKS7_@plt>
    b93c:	ldr	x0, [sp, #8]
    b940:	ldp	x29, x30, [sp, #16]
    b944:	add	sp, sp, #0x20
    b948:	ret

000000000000b94c <_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE9constructIS6_JS6_EEEvPT_DpOT0_@@Base>:
    b94c:	stp	x29, x30, [sp, #-32]!
    b950:	mov	x0, x2
    b954:	str	x19, [sp, #16]
    b958:	mov	x29, sp
    b95c:	mov	x19, x1
    b960:	bl	9820 <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE@plt>
    b964:	mov	x1, x0
    b968:	mov	x0, x19
    b96c:	bl	96c0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_@plt>
    b970:	ldr	x19, [sp, #16]
    b974:	ldp	x29, x30, [sp], #32
    b978:	ret

000000000000b97c <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_M_check_lenEmPKc@@Base>:
    b97c:	sub	sp, sp, #0x40
    b980:	stp	x29, x30, [sp, #16]
    b984:	str	x21, [sp, #32]
    b988:	stp	x20, x19, [sp, #48]
    b98c:	add	x29, sp, #0x10
    b990:	mov	x20, x2
    b994:	mov	x19, x0
    b998:	str	x1, [x29, #24]
    b99c:	bl	9400 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE8max_sizeEv@plt>
    b9a0:	mov	x21, x0
    b9a4:	mov	x0, x19
    b9a8:	bl	9a40 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv@plt>
    b9ac:	ldr	x8, [x29, #24]
    b9b0:	sub	x9, x21, x0
    b9b4:	cmp	x9, x8
    b9b8:	b.cc	ba2c <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_M_check_lenEmPKc@@Base+0xb0>  // b.lo, b.ul, b.last
    b9bc:	mov	x0, x19
    b9c0:	bl	9a40 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv@plt>
    b9c4:	mov	x20, x0
    b9c8:	mov	x0, x19
    b9cc:	bl	9a40 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv@plt>
    b9d0:	str	x0, [sp, #8]
    b9d4:	add	x0, sp, #0x8
    b9d8:	add	x1, x29, #0x18
    b9dc:	bl	9720 <_ZSt3maxImERKT_S2_S2_@plt>
    b9e0:	ldr	x8, [x0]
    b9e4:	mov	x0, x19
    b9e8:	add	x20, x8, x20
    b9ec:	bl	9a40 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv@plt>
    b9f0:	cmp	x20, x0
    b9f4:	b.cc	ba08 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_M_check_lenEmPKc@@Base+0x8c>  // b.lo, b.ul, b.last
    b9f8:	mov	x0, x19
    b9fc:	bl	9400 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE8max_sizeEv@plt>
    ba00:	cmp	x20, x0
    ba04:	b.ls	ba14 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_M_check_lenEmPKc@@Base+0x98>  // b.plast
    ba08:	mov	x0, x19
    ba0c:	bl	9400 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE8max_sizeEv@plt>
    ba10:	mov	x20, x0
    ba14:	mov	x0, x20
    ba18:	ldp	x20, x19, [sp, #48]
    ba1c:	ldr	x21, [sp, #32]
    ba20:	ldp	x29, x30, [sp, #16]
    ba24:	add	sp, sp, #0x40
    ba28:	ret
    ba2c:	mov	x0, x20
    ba30:	bl	9230 <_ZSt20__throw_length_errorPKc@plt>

000000000000ba34 <_ZN9__gnu_cxxmiIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSE_SH_@@Base>:
    ba34:	stp	x29, x30, [sp, #-32]!
    ba38:	stp	x20, x19, [sp, #16]
    ba3c:	mov	x29, sp
    ba40:	mov	x19, x1
    ba44:	bl	91b0 <_ZNK9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEE4baseEv@plt>
    ba48:	ldr	x20, [x0]
    ba4c:	mov	x0, x19
    ba50:	bl	91b0 <_ZNK9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEE4baseEv@plt>
    ba54:	ldr	x8, [x0]
    ba58:	sub	x8, x20, x8
    ba5c:	ldp	x20, x19, [sp, #16]
    ba60:	asr	x0, x8, #5
    ba64:	ldp	x29, x30, [sp], #32
    ba68:	ret

000000000000ba6c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE5beginEv@@Base>:
    ba6c:	sub	sp, sp, #0x20
    ba70:	mov	x1, x0
    ba74:	add	x0, sp, #0x8
    ba78:	stp	x29, x30, [sp, #16]
    ba7c:	add	x29, sp, #0x10
    ba80:	bl	9280 <_ZN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEEC2ERKS7_@plt>
    ba84:	ldr	x0, [sp, #8]
    ba88:	ldp	x29, x30, [sp, #16]
    ba8c:	add	sp, sp, #0x20
    ba90:	ret

000000000000ba94 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_M_allocateEm@@Base>:
    ba94:	cbz	x1, baac <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_M_allocateEm@@Base+0x18>
    ba98:	stp	x29, x30, [sp, #-16]!
    ba9c:	mov	x29, sp
    baa0:	bl	9570 <_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE8allocateERS6_m@plt>
    baa4:	ldp	x29, x30, [sp], #16
    baa8:	ret
    baac:	mov	x0, xzr
    bab0:	ret

000000000000bab4 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_S_relocateEPS5_S8_S8_RS6_@@Base>:
    bab4:	stp	x29, x30, [sp, #-16]!
    bab8:	mov	x29, sp
    babc:	bl	9830 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE14_S_do_relocateEPS5_S8_S8_RS6_St17integral_constantIbLb1EE@plt>
    bac0:	ldp	x29, x30, [sp], #16
    bac4:	ret

000000000000bac8 <_ZNK9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEE4baseEv@@Base>:
    bac8:	ret

000000000000bacc <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_get_Tp_allocatorEv@@Base>:
    bacc:	ret

000000000000bad0 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE13_M_deallocateEPS5_m@@Base>:
    bad0:	cbz	x1, bae4 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE13_M_deallocateEPS5_m@@Base+0x14>
    bad4:	stp	x29, x30, [sp, #-16]!
    bad8:	mov	x29, sp
    badc:	bl	8fc0 <_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE10deallocateERS6_PS5_m@plt>
    bae0:	ldp	x29, x30, [sp], #16
    bae4:	ret

000000000000bae8 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE8max_sizeEv@@Base>:
    bae8:	stp	x29, x30, [sp, #-16]!
    baec:	mov	x29, sp
    baf0:	bl	9950 <_ZNKSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_get_Tp_allocatorEv@plt>
    baf4:	bl	98a0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_S_max_sizeERKS6_@plt>
    baf8:	ldp	x29, x30, [sp], #16
    bafc:	ret

000000000000bb00 <_ZSt3maxImERKT_S2_S2_@@Base>:
    bb00:	ldr	x8, [x0]
    bb04:	ldr	x9, [x1]
    bb08:	cmp	x8, x9
    bb0c:	csel	x0, x1, x0, cc  // cc = lo, ul, last
    bb10:	ret

000000000000bb14 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_S_max_sizeERKS6_@@Base>:
    bb14:	sub	sp, sp, #0x20
    bb18:	stp	x29, x30, [sp, #16]
    bb1c:	add	x29, sp, #0x10
    bb20:	mov	x8, #0x3ffffffffffffff     	// #288230376151711743
    bb24:	str	x8, [sp, #8]
    bb28:	bl	99c0 <_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE8max_sizeERKS6_@plt>
    bb2c:	str	x0, [sp]
    bb30:	add	x0, sp, #0x8
    bb34:	mov	x1, sp
    bb38:	bl	9390 <_ZSt3minImERKT_S2_S2_@plt>
    bb3c:	ldr	x0, [x0]
    bb40:	ldp	x29, x30, [sp, #16]
    bb44:	add	sp, sp, #0x20
    bb48:	ret

000000000000bb4c <_ZNKSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_get_Tp_allocatorEv@@Base>:
    bb4c:	ret

000000000000bb50 <_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE8max_sizeERKS6_@@Base>:
    bb50:	stp	x29, x30, [sp, #-16]!
    bb54:	mov	x29, sp
    bb58:	bl	99f0 <_ZNK9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE8max_sizeEv@plt>
    bb5c:	ldp	x29, x30, [sp], #16
    bb60:	ret

000000000000bb64 <_ZSt3minImERKT_S2_S2_@@Base>:
    bb64:	ldr	x8, [x1]
    bb68:	ldr	x9, [x0]
    bb6c:	cmp	x8, x9
    bb70:	csel	x0, x1, x0, cc  // cc = lo, ul, last
    bb74:	ret

000000000000bb78 <_ZNK9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE8max_sizeEv@@Base>:
    bb78:	mov	x0, #0x3ffffffffffffff     	// #288230376151711743
    bb7c:	ret

000000000000bb80 <_ZN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEEC2ERKS7_@@Base>:
    bb80:	ldr	x8, [x1]
    bb84:	str	x8, [x0]
    bb88:	ret

000000000000bb8c <_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE8allocateERS6_m@@Base>:
    bb8c:	stp	x29, x30, [sp, #-16]!
    bb90:	mov	x29, sp
    bb94:	mov	x2, xzr
    bb98:	bl	9140 <_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE8allocateEmPKv@plt>
    bb9c:	ldp	x29, x30, [sp], #16
    bba0:	ret

000000000000bba4 <_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE8allocateEmPKv@@Base>:
    bba4:	stp	x29, x30, [sp, #-32]!
    bba8:	str	x19, [sp, #16]
    bbac:	mov	x29, sp
    bbb0:	mov	x19, x1
    bbb4:	bl	99f0 <_ZNK9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE8max_sizeEv@plt>
    bbb8:	cmp	x0, x19
    bbbc:	b.cc	bbd4 <_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE8allocateEmPKv@@Base+0x30>  // b.lo, b.ul, b.last
    bbc0:	lsl	x0, x19, #5
    bbc4:	bl	9540 <_Znwm@plt>
    bbc8:	ldr	x19, [sp, #16]
    bbcc:	ldp	x29, x30, [sp], #32
    bbd0:	ret
    bbd4:	bl	9160 <_ZSt17__throw_bad_allocv@plt>

000000000000bbd8 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE14_S_do_relocateEPS5_S8_S8_RS6_St17integral_constantIbLb1EE@@Base>:
    bbd8:	stp	x29, x30, [sp, #-16]!
    bbdc:	mov	x29, sp
    bbe0:	bl	8fe0 <_ZSt12__relocate_aIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_SaIS5_EET0_T_S9_S8_RT1_@plt>
    bbe4:	ldp	x29, x30, [sp], #16
    bbe8:	ret

000000000000bbec <_ZSt12__relocate_aIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_SaIS5_EET0_T_S9_S8_RT1_@@Base>:
    bbec:	stp	x29, x30, [sp, #-48]!
    bbf0:	stp	x22, x21, [sp, #16]
    bbf4:	stp	x20, x19, [sp, #32]
    bbf8:	mov	x29, sp
    bbfc:	mov	x19, x3
    bc00:	mov	x20, x2
    bc04:	mov	x21, x1
    bc08:	bl	98c0 <_ZSt12__niter_baseIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEET_S7_@plt>
    bc0c:	mov	x22, x0
    bc10:	mov	x0, x21
    bc14:	bl	98c0 <_ZSt12__niter_baseIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEET_S7_@plt>
    bc18:	mov	x21, x0
    bc1c:	mov	x0, x20
    bc20:	bl	98c0 <_ZSt12__niter_baseIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEET_S7_@plt>
    bc24:	mov	x2, x0
    bc28:	mov	x0, x22
    bc2c:	mov	x1, x21
    bc30:	mov	x3, x19
    bc34:	bl	9990 <_ZSt14__relocate_a_1IPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_SaIS5_EET0_T_S9_S8_RT1_@plt>
    bc38:	ldp	x20, x19, [sp, #32]
    bc3c:	ldp	x22, x21, [sp, #16]
    bc40:	ldp	x29, x30, [sp], #48
    bc44:	ret

000000000000bc48 <_ZSt14__relocate_a_1IPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_SaIS5_EET0_T_S9_S8_RT1_@@Base>:
    bc48:	stp	x29, x30, [sp, #-64]!
    bc4c:	stp	x20, x19, [sp, #48]
    bc50:	cmp	x0, x1
    bc54:	mov	x19, x2
    bc58:	str	x23, [sp, #16]
    bc5c:	stp	x22, x21, [sp, #32]
    bc60:	mov	x29, sp
    bc64:	b.eq	bca8 <_ZSt14__relocate_a_1IPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_SaIS5_EET0_T_S9_S8_RT1_@@Base+0x60>  // b.none
    bc68:	mov	x20, x3
    bc6c:	mov	x21, x1
    bc70:	mov	x22, x0
    bc74:	mov	x0, x19
    bc78:	bl	9410 <_ZSt11__addressofINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEPT_RS6_@plt>
    bc7c:	mov	x23, x0
    bc80:	mov	x0, x22
    bc84:	bl	9410 <_ZSt11__addressofINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEPT_RS6_@plt>
    bc88:	mov	x1, x0
    bc8c:	mov	x0, x23
    bc90:	mov	x2, x20
    bc94:	bl	9a80 <_ZSt19__relocate_object_aINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_SaIS5_EEvPT_PT0_RT1_@plt>
    bc98:	add	x22, x22, #0x20
    bc9c:	cmp	x21, x22
    bca0:	add	x19, x19, #0x20
    bca4:	b.ne	bc74 <_ZSt14__relocate_a_1IPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_SaIS5_EET0_T_S9_S8_RT1_@@Base+0x2c>  // b.any
    bca8:	mov	x0, x19
    bcac:	ldp	x20, x19, [sp, #48]
    bcb0:	ldp	x22, x21, [sp, #32]
    bcb4:	ldr	x23, [sp, #16]
    bcb8:	ldp	x29, x30, [sp], #64
    bcbc:	ret

000000000000bcc0 <_ZSt12__niter_baseIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEET_S7_@@Base>:
    bcc0:	ret

000000000000bcc4 <_ZSt19__relocate_object_aINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_SaIS5_EEvPT_PT0_RT1_@@Base>:
    bcc4:	stp	x29, x30, [sp, #-48]!
    bcc8:	str	x21, [sp, #16]
    bccc:	mov	x21, x0
    bcd0:	mov	x0, x1
    bcd4:	stp	x20, x19, [sp, #32]
    bcd8:	mov	x29, sp
    bcdc:	mov	x19, x2
    bce0:	mov	x20, x1
    bce4:	bl	9500 <_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_@plt>
    bce8:	mov	x2, x0
    bcec:	mov	x0, x19
    bcf0:	mov	x1, x21
    bcf4:	bl	9520 <_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE9constructIS5_JS5_EEEvRS6_PT_DpOT0_@plt>
    bcf8:	mov	x0, x20
    bcfc:	bl	9410 <_ZSt11__addressofINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEPT_RS6_@plt>
    bd00:	mov	x1, x0
    bd04:	mov	x0, x19
    bd08:	bl	9a50 <_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE7destroyIS5_EEvRS6_PT_@plt>
    bd0c:	ldp	x20, x19, [sp, #32]
    bd10:	ldr	x21, [sp, #16]
    bd14:	ldp	x29, x30, [sp], #48
    bd18:	ret

000000000000bd1c <_ZSt11__addressofINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEPT_RS6_@@Base>:
    bd1c:	ret

000000000000bd20 <_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE7destroyIS5_EEvRS6_PT_@@Base>:
    bd20:	stp	x29, x30, [sp, #-16]!
    bd24:	mov	x29, sp
    bd28:	bl	9a30 <_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE7destroyIS6_EEvPT_@plt>
    bd2c:	ldp	x29, x30, [sp], #16
    bd30:	ret

000000000000bd34 <_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE7destroyIS6_EEvPT_@@Base>:
    bd34:	stp	x29, x30, [sp, #-16]!
    bd38:	mov	x0, x1
    bd3c:	mov	x29, sp
    bd40:	bl	9200 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev@plt>
    bd44:	ldp	x29, x30, [sp], #16
    bd48:	ret

000000000000bd4c <_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE10deallocateERS6_PS5_m@@Base>:
    bd4c:	stp	x29, x30, [sp, #-16]!
    bd50:	mov	x29, sp
    bd54:	bl	9270 <_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE10deallocateEPS6_m@plt>
    bd58:	ldp	x29, x30, [sp], #16
    bd5c:	ret

000000000000bd60 <_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE10deallocateEPS6_m@@Base>:
    bd60:	stp	x29, x30, [sp, #-16]!
    bd64:	mov	x0, x1
    bd68:	mov	x29, sp
    bd6c:	bl	94f0 <_ZdlPv@plt>
    bd70:	ldp	x29, x30, [sp], #16
    bd74:	ret

000000000000bd78 <_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE9constructIS5_JRKS5_EEEvRS6_PT_DpOT0_@@Base>:
    bd78:	stp	x29, x30, [sp, #-32]!
    bd7c:	stp	x20, x19, [sp, #16]
    bd80:	mov	x29, sp
    bd84:	mov	x20, x0
    bd88:	mov	x0, x2
    bd8c:	mov	x19, x1
    bd90:	bl	9690 <_ZSt7forwardIRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS8_E4typeE@plt>
    bd94:	mov	x2, x0
    bd98:	mov	x0, x20
    bd9c:	mov	x1, x19
    bda0:	bl	93f0 <_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE9constructIS6_JRKS6_EEEvPT_DpOT0_@plt>
    bda4:	ldp	x20, x19, [sp, #16]
    bda8:	ldp	x29, x30, [sp], #32
    bdac:	ret

000000000000bdb0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base>:
    bdb0:	sub	sp, sp, #0x60
    bdb4:	stp	x29, x30, [sp, #16]
    bdb8:	str	x25, [sp, #32]
    bdbc:	stp	x24, x23, [sp, #48]
    bdc0:	stp	x22, x21, [sp, #64]
    bdc4:	stp	x20, x19, [sp, #80]
    bdc8:	add	x29, sp, #0x10
    bdcc:	mov	x25, x2
    bdd0:	adrp	x2, 19000 <iterative_hash@@Base+0x140>
    bdd4:	str	x1, [x29, #24]
    bdd8:	add	x2, x2, #0x6d5
    bddc:	mov	w1, #0x1                   	// #1
    bde0:	mov	x19, x0
    bde4:	bl	93d0 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_M_check_lenEmPKc@plt>
    bde8:	ldp	x22, x23, [x19]
    bdec:	mov	x20, x0
    bdf0:	mov	x0, x19
    bdf4:	bl	9940 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE5beginEv@plt>
    bdf8:	str	x0, [sp, #8]
    bdfc:	add	x0, x29, #0x18
    be00:	add	x1, sp, #0x8
    be04:	bl	99d0 <_ZN9__gnu_cxxmiIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSE_SH_@plt>
    be08:	mov	x24, x0
    be0c:	mov	x0, x19
    be10:	mov	x1, x20
    be14:	bl	9610 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_M_allocateEm@plt>
    be18:	mov	x21, x0
    be1c:	add	x24, x0, x24, lsl #5
    be20:	mov	x0, x25
    be24:	bl	9690 <_ZSt7forwardIRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS8_E4typeE@plt>
    be28:	mov	x2, x0
    be2c:	mov	x0, x19
    be30:	mov	x1, x24
    be34:	bl	94d0 <_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE9constructIS5_JRKS5_EEEvRS6_PT_DpOT0_@plt>
    be38:	add	x0, x29, #0x18
    be3c:	bl	91b0 <_ZNK9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEE4baseEv@plt>
    be40:	ldr	x24, [x0]
    be44:	mov	x0, x19
    be48:	bl	9af0 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_get_Tp_allocatorEv@plt>
    be4c:	mov	x3, x0
    be50:	mov	x0, x22
    be54:	mov	x1, x24
    be58:	mov	x2, x21
    be5c:	bl	94b0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_S_relocateEPS5_S8_S8_RS6_@plt>
    be60:	add	x24, x0, #0x20
    be64:	add	x0, x29, #0x18
    be68:	bl	91b0 <_ZNK9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEE4baseEv@plt>
    be6c:	ldr	x25, [x0]
    be70:	mov	x0, x19
    be74:	bl	9af0 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_get_Tp_allocatorEv@plt>
    be78:	mov	x3, x0
    be7c:	mov	x0, x25
    be80:	mov	x1, x23
    be84:	mov	x2, x24
    be88:	bl	94b0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_S_relocateEPS5_S8_S8_RS6_@plt>
    be8c:	ldr	x8, [x19, #16]
    be90:	mov	x23, x0
    be94:	mov	x0, x19
    be98:	mov	x1, x22
    be9c:	sub	x8, x8, x22
    bea0:	asr	x2, x8, #5
    bea4:	bl	96a0 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE13_M_deallocateEPS5_m@plt>
    bea8:	add	x8, x21, x20, lsl #5
    beac:	stp	x21, x23, [x19]
    beb0:	str	x8, [x19, #16]
    beb4:	ldp	x20, x19, [sp, #80]
    beb8:	ldp	x22, x21, [sp, #64]
    bebc:	ldp	x24, x23, [sp, #48]
    bec0:	ldr	x25, [sp, #32]
    bec4:	ldp	x29, x30, [sp, #16]
    bec8:	add	sp, sp, #0x60
    becc:	ret
    bed0:	bl	91c0 <__cxa_begin_catch@plt>
    bed4:	mov	x0, x19
    bed8:	cbnz	x21, bee8 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x138>
    bedc:	mov	x1, x24
    bee0:	bl	9a50 <_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE7destroyIS5_EEvRS6_PT_@plt>
    bee4:	b	befc <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_@@Base+0x14c>
    bee8:	bl	9af0 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_get_Tp_allocatorEv@plt>
    beec:	mov	x2, x0
    bef0:	mov	x0, x21
    bef4:	mov	x1, x21
    bef8:	bl	9700 <_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E@plt>
    befc:	mov	x0, x19
    bf00:	mov	x1, x21
    bf04:	mov	x2, x20
    bf08:	bl	96a0 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE13_M_deallocateEPS5_m@plt>
    bf0c:	bl	9810 <__cxa_rethrow@plt>
    bf10:	mov	x19, x0
    bf14:	bl	98f0 <__cxa_end_catch@plt>
    bf18:	mov	x0, x19
    bf1c:	bl	9a00 <_Unwind_Resume@plt>
    bf20:	bl	a080 <_ZSt8distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_@@Base+0x40>

000000000000bf24 <_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE9constructIS6_JRKS6_EEEvPT_DpOT0_@@Base>:
    bf24:	stp	x29, x30, [sp, #-32]!
    bf28:	str	x19, [sp, #16]
    bf2c:	mov	x29, sp
    bf30:	mov	x0, x2
    bf34:	mov	x19, x1
    bf38:	bl	9690 <_ZSt7forwardIRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS8_E4typeE@plt>
    bf3c:	mov	x1, x0
    bf40:	mov	x0, x19
    bf44:	bl	9780 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_@plt>
    bf48:	ldr	x19, [sp, #16]
    bf4c:	ldp	x29, x30, [sp], #32
    bf50:	ret

000000000000bf54 <_ZSt7forwardIRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS8_E4typeE@@Base>:
    bf54:	ret

000000000000bf58 <_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E@@Base>:
    bf58:	stp	x29, x30, [sp, #-16]!
    bf5c:	mov	x29, sp
    bf60:	bl	98e0 <_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvT_S7_@plt>
    bf64:	ldp	x29, x30, [sp], #16
    bf68:	ret

000000000000bf6c <_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvT_S7_@@Base>:
    bf6c:	stp	x29, x30, [sp, #-16]!
    bf70:	mov	x29, sp
    bf74:	bl	9020 <_ZNSt12_Destroy_auxILb0EE9__destroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvT_S9_@plt>
    bf78:	ldp	x29, x30, [sp], #16
    bf7c:	ret

000000000000bf80 <_ZNSt12_Destroy_auxILb0EE9__destroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvT_S9_@@Base>:
    bf80:	stp	x29, x30, [sp, #-32]!
    bf84:	stp	x20, x19, [sp, #16]
    bf88:	mov	x29, sp
    bf8c:	cmp	x0, x1
    bf90:	b.eq	bfb4 <_ZNSt12_Destroy_auxILb0EE9__destroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvT_S9_@@Base+0x34>  // b.none
    bf94:	mov	x19, x1
    bf98:	mov	x20, x0
    bf9c:	mov	x0, x20
    bfa0:	bl	9410 <_ZSt11__addressofINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEPT_RS6_@plt>
    bfa4:	bl	9260 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@plt>
    bfa8:	add	x20, x20, #0x20
    bfac:	cmp	x19, x20
    bfb0:	b.ne	bf9c <_ZNSt12_Destroy_auxILb0EE9__destroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvT_S9_@@Base+0x1c>  // b.any
    bfb4:	ldp	x20, x19, [sp, #16]
    bfb8:	ldp	x29, x30, [sp], #32
    bfbc:	ret

000000000000bfc0 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base>:
    bfc0:	stp	x29, x30, [sp, #-16]!
    bfc4:	mov	x29, sp
    bfc8:	bl	9200 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev@plt>
    bfcc:	ldp	x29, x30, [sp], #16
    bfd0:	ret
    bfd4:	stp	x29, x30, [sp, #-16]!
    bfd8:	mov	x29, sp
    bfdc:	adrp	x8, 2e000 <xexit@@Base+0x14c60>
    bfe0:	ldr	x8, [x8, #3360]
    bfe4:	stp	w1, w2, [x0, #8]
    bfe8:	add	x8, x8, #0x10
    bfec:	str	x8, [x0], #16
    bff0:	bl	119b8 <gcc_cp_fe_context@@Base+0x3984>
    bff4:	ldp	x29, x30, [sp], #16
    bff8:	ret
    bffc:	stp	x29, x30, [sp, #-32]!
    c000:	str	x19, [sp, #16]
    c004:	mov	x29, sp
    c008:	mov	x19, x0
    c00c:	bl	11ad8 <gcc_cp_fe_context@@Base+0x3aa4>
    c010:	mov	x0, x19
    c014:	bl	94f0 <_ZdlPv@plt>
    c018:	ldr	x19, [sp, #16]
    c01c:	ldp	x29, x30, [sp], #32
    c020:	ret
    c024:	stp	x29, x30, [sp, #-16]!
    c028:	mov	x29, sp
    c02c:	ldr	x0, [x0, #24]
    c030:	bl	b63c <_ZN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC2ERKS1_@@Base+0xc>
    c034:	ldp	x29, x30, [sp], #16
    c038:	ret
    c03c:	ret
    c040:	str	xzr, [x0]
    c044:	ret
    c048:	stp	x29, x30, [sp, #-16]!
    c04c:	mov	x29, sp
    c050:	mov	x8, x0
    c054:	mov	x0, x1
    c058:	mov	x1, x8
    c05c:	bl	a428 <_ZSt19__iterator_categoryIPcENSt15iterator_traitsIT_E17iterator_categoryERKS2_@@Base+0x38>
    c060:	ldp	x29, x30, [sp], #16
    c064:	ret
    c068:	stp	x29, x30, [sp, #-16]!
    c06c:	mov	x29, sp
    c070:	mov	x8, x0
    c074:	mov	x0, x1
    c078:	mov	x1, x8
    c07c:	bl	12008 <gcc_cp_fe_context@@Base+0x3fd4>
    c080:	ldp	x29, x30, [sp], #16
    c084:	ret
    c088:	ldr	w0, [x0]
    c08c:	ret
    c090:	ldr	x0, [x0]
    c094:	ret
    c098:	stp	x29, x30, [sp, #-16]!
    c09c:	mov	x29, sp
    c0a0:	sxtw	x1, w1
    c0a4:	bl	11f10 <gcc_cp_fe_context@@Base+0x3edc>
    c0a8:	ldp	x29, x30, [sp], #16
    c0ac:	ret
    c0b0:	stp	x29, x30, [sp, #-16]!
    c0b4:	ldr	x0, [x0]
    c0b8:	mov	x29, sp
    c0bc:	cbz	x0, c0c4 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0x104>
    c0c0:	bl	96b0 <_ZdaPv@plt>
    c0c4:	ldp	x29, x30, [sp], #16
    c0c8:	ret
    c0cc:	ret
    c0d0:	stp	x29, x30, [sp, #-16]!
    c0d4:	mov	x29, sp
    c0d8:	bl	11f10 <gcc_cp_fe_context@@Base+0x3edc>
    c0dc:	ldp	x29, x30, [sp], #16
    c0e0:	ret
    c0e4:	stp	x29, x30, [sp, #-16]!
    c0e8:	mov	x29, sp
    c0ec:	mov	w1, w1
    c0f0:	bl	11f10 <gcc_cp_fe_context@@Base+0x3edc>
    c0f4:	ldp	x29, x30, [sp], #16
    c0f8:	ret
    c0fc:	stp	x29, x30, [sp, #-16]!
    c100:	mov	x29, sp
    c104:	mov	w1, wzr
    c108:	bl	11bfc <gcc_cp_fe_context@@Base+0x3bc8>
    c10c:	ldp	x29, x30, [sp], #16
    c110:	ret
    c114:	stp	x29, x30, [sp, #-32]!
    c118:	stp	x20, x19, [sp, #16]
    c11c:	mov	x29, sp
    c120:	mov	x20, x2
    c124:	mov	x19, x0
    c128:	bl	b328 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2Ev@@Base+0x14>
    c12c:	adrp	x8, 2e000 <xexit@@Base+0x14c60>
    c130:	add	x8, x8, #0x580
    c134:	mov	x0, x19
    c138:	str	x8, [x0], #16
    c13c:	mov	x1, x20
    c140:	bl	9780 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_@plt>
    c144:	ldp	x20, x19, [sp, #16]
    c148:	ldp	x29, x30, [sp], #32
    c14c:	ret
    c150:	mov	x20, x0
    c154:	mov	x0, x19
    c158:	bl	b390 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev@@Base+0x58>
    c15c:	mov	x0, x20
    c160:	bl	9a00 <_Unwind_Resume@plt>
    c164:	stp	x29, x30, [sp, #-32]!
    c168:	stp	x20, x19, [sp, #16]
    c16c:	mov	x29, sp
    c170:	mov	x20, x2
    c174:	mov	x19, x0
    c178:	bl	b328 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2Ev@@Base+0x14>
    c17c:	adrp	x8, 2e000 <xexit@@Base+0x14c60>
    c180:	add	x8, x8, #0x5c0
    c184:	mov	x0, x19
    c188:	str	x8, [x0], #16
    c18c:	mov	x1, x20
    c190:	bl	9780 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_@plt>
    c194:	ldp	x20, x19, [sp, #16]
    c198:	ldp	x29, x30, [sp], #32
    c19c:	ret
    c1a0:	mov	x20, x0
    c1a4:	mov	x0, x19
    c1a8:	bl	b390 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev@@Base+0x58>
    c1ac:	mov	x0, x20
    c1b0:	bl	9a00 <_Unwind_Resume@plt>
    c1b4:	sub	sp, sp, #0x30
    c1b8:	stp	x29, x30, [sp, #32]
    c1bc:	add	x29, sp, #0x20
    c1c0:	adrp	x10, 2e000 <xexit@@Base+0x14c60>
    c1c4:	ldr	x0, [x0, #16]
    c1c8:	ldr	x10, [x10, #3312]
    c1cc:	mov	x8, x5
    c1d0:	mov	x9, x4
    c1d4:	mov	x5, x3
    c1d8:	ldr	x10, [x10]
    c1dc:	mov	w4, w2
    c1e0:	mov	x3, x1
    c1e4:	str	w7, [sp, #8]
    c1e8:	sub	x2, x29, #0x8
    c1ec:	str	x6, [sp]
    c1f0:	mov	x1, x10
    c1f4:	mov	x6, x9
    c1f8:	mov	x7, x8
    c1fc:	bl	c8f8 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0x938>
    c200:	ldur	x8, [x29, #-8]
    c204:	ldp	x29, x30, [sp, #32]
    c208:	cmp	w0, #0x0
    c20c:	csel	x0, xzr, x8, eq  // eq = none
    c210:	add	sp, sp, #0x30
    c214:	ret
    c218:	sub	sp, sp, #0x20
    c21c:	stp	x29, x30, [sp, #16]
    c220:	add	x29, sp, #0x10
    c224:	adrp	x8, 2e000 <xexit@@Base+0x14c60>
    c228:	ldr	x0, [x0, #16]
    c22c:	ldr	x8, [x8, #4040]
    c230:	mov	w4, w2
    c234:	mov	x3, x1
    c238:	sub	x2, x29, #0x4
    c23c:	ldr	x8, [x8]
    c240:	mov	x1, x8
    c244:	bl	ca80 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xac0>
    c248:	ldur	w8, [x29, #-4]
    c24c:	ldp	x29, x30, [sp, #16]
    c250:	cmp	w0, #0x0
    c254:	csel	w0, wzr, w8, eq  // eq = none
    c258:	add	sp, sp, #0x20
    c25c:	ret
    c260:	sub	sp, sp, #0x20
    c264:	stp	x29, x30, [sp, #16]
    c268:	add	x29, sp, #0x10
    c26c:	adrp	x8, 2e000 <xexit@@Base+0x14c60>
    c270:	ldr	x0, [x0, #16]
    c274:	ldr	x8, [x8, #3624]
    c278:	mov	w6, w4
    c27c:	mov	x5, x3
    c280:	mov	x4, x2
    c284:	ldr	x8, [x8]
    c288:	mov	x3, x1
    c28c:	sub	x2, x29, #0x4
    c290:	mov	x1, x8
    c294:	bl	cb5c <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xb9c>
    c298:	ldur	w8, [x29, #-4]
    c29c:	ldp	x29, x30, [sp, #16]
    c2a0:	cmp	w0, #0x0
    c2a4:	csel	w0, wzr, w8, eq  // eq = none
    c2a8:	add	sp, sp, #0x20
    c2ac:	ret
    c2b0:	sub	sp, sp, #0x20
    c2b4:	stp	x29, x30, [sp, #16]
    c2b8:	add	x29, sp, #0x10
    c2bc:	adrp	x8, 2e000 <xexit@@Base+0x14c60>
    c2c0:	ldr	x0, [x0, #16]
    c2c4:	ldr	x8, [x8, #3528]
    c2c8:	mov	x3, x1
    c2cc:	add	x2, sp, #0x8
    c2d0:	ldr	x8, [x8]
    c2d4:	mov	x1, x8
    c2d8:	bl	cc34 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xc74>
    c2dc:	ldr	x8, [sp, #8]
    c2e0:	ldp	x29, x30, [sp, #16]
    c2e4:	cmp	w0, #0x0
    c2e8:	csel	x0, xzr, x8, eq  // eq = none
    c2ec:	add	sp, sp, #0x20
    c2f0:	ret
    c2f4:	sub	sp, sp, #0x20
    c2f8:	stp	x29, x30, [sp, #16]
    c2fc:	add	x29, sp, #0x10
    c300:	adrp	x8, 2e000 <xexit@@Base+0x14c60>
    c304:	ldr	x0, [x0, #16]
    c308:	ldr	x8, [x8, #3920]
    c30c:	add	x2, sp, #0x8
    c310:	ldr	x1, [x8]
    c314:	bl	ccc0 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xd00>
    c318:	ldr	x8, [sp, #8]
    c31c:	ldp	x29, x30, [sp, #16]
    c320:	cmp	w0, #0x0
    c324:	csel	x0, xzr, x8, eq  // eq = none
    c328:	add	sp, sp, #0x20
    c32c:	ret
    c330:	sub	sp, sp, #0x20
    c334:	stp	x29, x30, [sp, #16]
    c338:	add	x29, sp, #0x10
    c33c:	adrp	x8, 2e000 <xexit@@Base+0x14c60>
    c340:	ldr	x0, [x0, #16]
    c344:	ldr	x8, [x8, #3232]
    c348:	add	x2, sp, #0x8
    c34c:	ldr	x1, [x8]
    c350:	bl	ccc0 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xd00>
    c354:	ldr	x8, [sp, #8]
    c358:	ldp	x29, x30, [sp, #16]
    c35c:	cmp	w0, #0x0
    c360:	csel	x0, xzr, x8, eq  // eq = none
    c364:	add	sp, sp, #0x20
    c368:	ret
    c36c:	sub	sp, sp, #0x20
    c370:	stp	x29, x30, [sp, #16]
    c374:	add	x29, sp, #0x10
    c378:	adrp	x8, 2e000 <xexit@@Base+0x14c60>
    c37c:	ldr	x0, [x0, #16]
    c380:	ldr	x8, [x8, #3384]
    c384:	mov	x7, x5
    c388:	mov	x6, x4
    c38c:	mov	x5, x3
    c390:	ldr	x8, [x8]
    c394:	mov	x4, x2
    c398:	mov	x3, x1
    c39c:	sub	x2, x29, #0x4
    c3a0:	mov	x1, x8
    c3a4:	bl	cd38 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xd78>
    c3a8:	ldur	w8, [x29, #-4]
    c3ac:	ldp	x29, x30, [sp, #16]
    c3b0:	cmp	w0, #0x0
    c3b4:	csel	w0, wzr, w8, eq  // eq = none
    c3b8:	add	sp, sp, #0x20
    c3bc:	ret
    c3c0:	sub	sp, sp, #0x20
    c3c4:	stp	x29, x30, [sp, #16]
    c3c8:	add	x29, sp, #0x10
    c3cc:	adrp	x8, 2e000 <xexit@@Base+0x14c60>
    c3d0:	ldr	x0, [x0, #16]
    c3d4:	ldr	x8, [x8, #4056]
    c3d8:	mov	x4, x2
    c3dc:	mov	x3, x1
    c3e0:	sub	x2, x29, #0x4
    c3e4:	ldr	x8, [x8]
    c3e8:	mov	x1, x8
    c3ec:	bl	ce38 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xe78>
    c3f0:	ldur	w8, [x29, #-4]
    c3f4:	ldp	x29, x30, [sp, #16]
    c3f8:	cmp	w0, #0x0
    c3fc:	csel	w0, wzr, w8, eq  // eq = none
    c400:	add	sp, sp, #0x20
    c404:	ret
    c408:	sub	sp, sp, #0x20
    c40c:	stp	x29, x30, [sp, #16]
    c410:	add	x29, sp, #0x10
    c414:	adrp	x8, 2e000 <xexit@@Base+0x14c60>
    c418:	ldr	x0, [x0, #16]
    c41c:	ldr	x8, [x8, #3936]
    c420:	mov	x3, x1
    c424:	add	x2, sp, #0x8
    c428:	ldr	x8, [x8]
    c42c:	mov	x1, x8
    c430:	bl	cc34 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xc74>
    c434:	ldr	x8, [sp, #8]
    c438:	ldp	x29, x30, [sp, #16]
    c43c:	cmp	w0, #0x0
    c440:	csel	x0, xzr, x8, eq  // eq = none
    c444:	add	sp, sp, #0x20
    c448:	ret
    c44c:	sub	sp, sp, #0x20
    c450:	stp	x29, x30, [sp, #16]
    c454:	add	x29, sp, #0x10
    c458:	adrp	x8, 2e000 <xexit@@Base+0x14c60>
    c45c:	ldr	x0, [x0, #16]
    c460:	ldr	x8, [x8, #3440]
    c464:	mov	x5, x3
    c468:	mov	x4, x2
    c46c:	mov	x3, x1
    c470:	ldr	x8, [x8]
    c474:	sub	x2, x29, #0x4
    c478:	mov	x1, x8
    c47c:	bl	cee0 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xf20>
    c480:	ldur	w8, [x29, #-4]
    c484:	ldp	x29, x30, [sp, #16]
    c488:	cmp	w0, #0x0
    c48c:	csel	w0, wzr, w8, eq  // eq = none
    c490:	add	sp, sp, #0x20
    c494:	ret
    c498:	sub	sp, sp, #0x20
    c49c:	stp	x29, x30, [sp, #16]
    c4a0:	add	x29, sp, #0x10
    c4a4:	adrp	x8, 2e000 <xexit@@Base+0x14c60>
    c4a8:	ldr	x0, [x0, #16]
    c4ac:	ldr	x8, [x8, #3648]
    c4b0:	mov	x3, x1
    c4b4:	sub	x2, x29, #0x4
    c4b8:	ldr	x8, [x8]
    c4bc:	mov	x1, x8
    c4c0:	bl	cf9c <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xfdc>
    c4c4:	ldur	w8, [x29, #-4]
    c4c8:	ldp	x29, x30, [sp, #16]
    c4cc:	cmp	w0, #0x0
    c4d0:	csel	w0, wzr, w8, eq  // eq = none
    c4d4:	add	sp, sp, #0x20
    c4d8:	ret
    c4dc:	sub	sp, sp, #0x20
    c4e0:	stp	x29, x30, [sp, #16]
    c4e4:	add	x29, sp, #0x10
    c4e8:	adrp	x8, 2e000 <xexit@@Base+0x14c60>
    c4ec:	ldr	x0, [x0, #16]
    c4f0:	ldr	x8, [x8, #3944]
    c4f4:	mov	w5, w3
    c4f8:	mov	x4, x2
    c4fc:	mov	x3, x1
    c500:	ldr	x8, [x8]
    c504:	add	x2, sp, #0x8
    c508:	mov	x1, x8
    c50c:	bl	d028 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0x1068>
    c510:	ldr	x8, [sp, #8]
    c514:	ldp	x29, x30, [sp, #16]
    c518:	cmp	w0, #0x0
    c51c:	csel	x0, xzr, x8, eq  // eq = none
    c520:	add	sp, sp, #0x20
    c524:	ret
    c528:	sub	sp, sp, #0x20
    c52c:	stp	x29, x30, [sp, #16]
    c530:	add	x29, sp, #0x10
    c534:	adrp	x8, 2e000 <xexit@@Base+0x14c60>
    c538:	ldr	x0, [x0, #16]
    c53c:	ldr	x8, [x8, #3464]
    c540:	mov	x4, x2
    c544:	mov	w3, w1
    c548:	add	x2, sp, #0x8
    c54c:	ldr	x8, [x8]
    c550:	mov	x1, x8
    c554:	bl	d0e4 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0x1124>
    c558:	ldr	x8, [sp, #8]
    c55c:	ldp	x29, x30, [sp, #16]
    c560:	cmp	w0, #0x0
    c564:	csel	x0, xzr, x8, eq  // eq = none
    c568:	add	sp, sp, #0x20
    c56c:	ret
    c570:	sub	sp, sp, #0x20
    c574:	stp	x29, x30, [sp, #16]
    c578:	add	x29, sp, #0x10
    c57c:	adrp	x8, 2e000 <xexit@@Base+0x14c60>
    c580:	ldr	x0, [x0, #16]
    c584:	ldr	x8, [x8, #3520]
    c588:	mov	x3, x1
    c58c:	add	x2, sp, #0x8
    c590:	ldr	x8, [x8]
    c594:	mov	x1, x8
    c598:	bl	d18c <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0x11cc>
    c59c:	ldr	x8, [sp, #8]
    c5a0:	ldp	x29, x30, [sp, #16]
    c5a4:	cmp	w0, #0x0
    c5a8:	csel	x0, xzr, x8, eq  // eq = none
    c5ac:	add	sp, sp, #0x20
    c5b0:	ret
    c5b4:	sub	sp, sp, #0x20
    c5b8:	stp	x29, x30, [sp, #16]
    c5bc:	add	x29, sp, #0x10
    c5c0:	adrp	x8, 2e000 <xexit@@Base+0x14c60>
    c5c4:	ldr	x0, [x0, #16]
    c5c8:	ldr	x8, [x8, #3320]
    c5cc:	add	x2, sp, #0x8
    c5d0:	ldr	x1, [x8]
    c5d4:	bl	ccc0 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xd00>
    c5d8:	ldr	x8, [sp, #8]
    c5dc:	ldp	x29, x30, [sp, #16]
    c5e0:	cmp	w0, #0x0
    c5e4:	csel	x0, xzr, x8, eq  // eq = none
    c5e8:	add	sp, sp, #0x20
    c5ec:	ret
    c5f0:	sub	sp, sp, #0x20
    c5f4:	stp	x29, x30, [sp, #16]
    c5f8:	add	x29, sp, #0x10
    c5fc:	adrp	x8, 2e000 <xexit@@Base+0x14c60>
    c600:	ldr	x0, [x0, #16]
    c604:	ldr	x8, [x8, #3856]
    c608:	add	x2, sp, #0x8
    c60c:	ldr	x1, [x8]
    c610:	bl	ccc0 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xd00>
    c614:	ldr	x8, [sp, #8]
    c618:	ldp	x29, x30, [sp, #16]
    c61c:	cmp	w0, #0x0
    c620:	csel	x0, xzr, x8, eq  // eq = none
    c624:	add	sp, sp, #0x20
    c628:	ret
    c62c:	sub	sp, sp, #0x20
    c630:	stp	x29, x30, [sp, #16]
    c634:	add	x29, sp, #0x10
    c638:	adrp	x8, 2e000 <xexit@@Base+0x14c60>
    c63c:	ldr	x0, [x0, #16]
    c640:	ldr	x8, [x8, #3600]
    c644:	mov	w4, w2
    c648:	mov	x3, x1
    c64c:	add	x2, sp, #0x8
    c650:	ldr	x8, [x8]
    c654:	mov	x1, x8
    c658:	bl	d218 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0x1258>
    c65c:	ldr	x8, [sp, #8]
    c660:	ldp	x29, x30, [sp, #16]
    c664:	cmp	w0, #0x0
    c668:	csel	x0, xzr, x8, eq  // eq = none
    c66c:	add	sp, sp, #0x20
    c670:	ret
    c674:	sub	sp, sp, #0x20
    c678:	stp	x29, x30, [sp, #16]
    c67c:	add	x29, sp, #0x10
    c680:	adrp	x8, 2e000 <xexit@@Base+0x14c60>
    c684:	ldr	x0, [x0, #16]
    c688:	ldr	x8, [x8, #3216]
    c68c:	mov	x4, x2
    c690:	mov	x3, x1
    c694:	add	x2, sp, #0x8
    c698:	ldr	x8, [x8]
    c69c:	mov	x1, x8
    c6a0:	bl	d2c0 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0x1300>
    c6a4:	ldr	x8, [sp, #8]
    c6a8:	ldp	x29, x30, [sp, #16]
    c6ac:	cmp	w0, #0x0
    c6b0:	csel	x0, xzr, x8, eq  // eq = none
    c6b4:	add	sp, sp, #0x20
    c6b8:	ret
    c6bc:	sub	sp, sp, #0x20
    c6c0:	stp	x29, x30, [sp, #16]
    c6c4:	add	x29, sp, #0x10
    c6c8:	adrp	x8, 2e000 <xexit@@Base+0x14c60>
    c6cc:	ldr	x0, [x0, #16]
    c6d0:	ldr	x8, [x8, #3672]
    c6d4:	mov	w4, w2
    c6d8:	mov	x3, x1
    c6dc:	add	x2, sp, #0x8
    c6e0:	ldr	x8, [x8]
    c6e4:	mov	x1, x8
    c6e8:	bl	d368 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0x13a8>
    c6ec:	ldr	x8, [sp, #8]
    c6f0:	ldp	x29, x30, [sp, #16]
    c6f4:	cmp	w0, #0x0
    c6f8:	csel	x0, xzr, x8, eq  // eq = none
    c6fc:	add	sp, sp, #0x20
    c700:	ret
    c704:	sub	sp, sp, #0x20
    c708:	stp	x29, x30, [sp, #16]
    c70c:	add	x29, sp, #0x10
    c710:	adrp	x8, 2e000 <xexit@@Base+0x14c60>
    c714:	ldr	x0, [x0, #16]
    c718:	ldr	x8, [x8, #3752]
    c71c:	mov	x3, x1
    c720:	add	x2, sp, #0x8
    c724:	ldr	x8, [x8]
    c728:	mov	x1, x8
    c72c:	bl	cc34 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xc74>
    c730:	ldr	x8, [sp, #8]
    c734:	ldp	x29, x30, [sp, #16]
    c738:	cmp	w0, #0x0
    c73c:	csel	x0, xzr, x8, eq  // eq = none
    c740:	add	sp, sp, #0x20
    c744:	ret
    c748:	sub	sp, sp, #0x20
    c74c:	stp	x29, x30, [sp, #16]
    c750:	add	x29, sp, #0x10
    c754:	adrp	x8, 2e000 <xexit@@Base+0x14c60>
    c758:	ldr	x0, [x0, #16]
    c75c:	ldr	x8, [x8, #3816]
    c760:	mov	w4, w2
    c764:	mov	x3, x1
    c768:	add	x2, sp, #0x8
    c76c:	ldr	x8, [x8]
    c770:	mov	x1, x8
    c774:	bl	d218 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0x1258>
    c778:	ldr	x8, [sp, #8]
    c77c:	ldp	x29, x30, [sp, #16]
    c780:	cmp	w0, #0x0
    c784:	csel	x0, xzr, x8, eq  // eq = none
    c788:	add	sp, sp, #0x20
    c78c:	ret
    c790:	sub	sp, sp, #0x20
    c794:	stp	x29, x30, [sp, #16]
    c798:	add	x29, sp, #0x10
    c79c:	adrp	x8, 2e000 <xexit@@Base+0x14c60>
    c7a0:	ldr	x0, [x0, #16]
    c7a4:	ldr	x8, [x8, #3400]
    c7a8:	mov	w7, w5
    c7ac:	mov	x6, x4
    c7b0:	mov	x5, x3
    c7b4:	ldr	x8, [x8]
    c7b8:	mov	x4, x2
    c7bc:	mov	x3, x1
    c7c0:	sub	x2, x29, #0x4
    c7c4:	mov	x1, x8
    c7c8:	bl	d428 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0x1468>
    c7cc:	ldur	w8, [x29, #-4]
    c7d0:	ldp	x29, x30, [sp, #16]
    c7d4:	cmp	w0, #0x0
    c7d8:	csel	w0, wzr, w8, eq  // eq = none
    c7dc:	add	sp, sp, #0x20
    c7e0:	ret
    c7e4:	sub	sp, sp, #0x20
    c7e8:	stp	x29, x30, [sp, #16]
    c7ec:	add	x29, sp, #0x10
    c7f0:	adrp	x8, 2e000 <xexit@@Base+0x14c60>
    c7f4:	ldr	x0, [x0, #16]
    c7f8:	ldr	x8, [x8, #3224]
    c7fc:	mov	x3, x1
    c800:	add	x2, sp, #0x8
    c804:	ldr	x8, [x8]
    c808:	mov	x1, x8
    c80c:	bl	d514 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0x1554>
    c810:	ldr	x8, [sp, #8]
    c814:	ldp	x29, x30, [sp, #16]
    c818:	cmp	w0, #0x0
    c81c:	csel	x0, xzr, x8, eq  // eq = none
    c820:	add	sp, sp, #0x20
    c824:	ret
    c828:	sub	sp, sp, #0x20
    c82c:	stp	x29, x30, [sp, #16]
    c830:	add	x29, sp, #0x10
    c834:	adrp	x8, 2e000 <xexit@@Base+0x14c60>
    c838:	ldr	x0, [x0, #16]
    c83c:	ldr	x8, [x8, #3832]
    c840:	mov	x5, x3
    c844:	mov	x4, x2
    c848:	mov	w3, w1
    c84c:	ldr	x8, [x8]
    c850:	add	x2, sp, #0x8
    c854:	mov	x1, x8
    c858:	bl	d5a0 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0x15e0>
    c85c:	ldr	x8, [sp, #8]
    c860:	ldp	x29, x30, [sp, #16]
    c864:	cmp	w0, #0x0
    c868:	csel	x0, xzr, x8, eq  // eq = none
    c86c:	add	sp, sp, #0x20
    c870:	ret
    c874:	sub	sp, sp, #0x20
    c878:	stp	x29, x30, [sp, #16]
    c87c:	add	x29, sp, #0x10
    c880:	adrp	x8, 2e000 <xexit@@Base+0x14c60>
    c884:	ldr	x0, [x0, #16]
    c888:	ldr	x8, [x8, #3576]
    c88c:	add	x2, sp, #0x8
    c890:	ldr	x1, [x8]
    c894:	bl	ccc0 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xd00>
    c898:	ldr	x8, [sp, #8]
    c89c:	ldp	x29, x30, [sp, #16]
    c8a0:	cmp	w0, #0x0
    c8a4:	csel	x0, xzr, x8, eq  // eq = none
    c8a8:	add	sp, sp, #0x20
    c8ac:	ret
    c8b0:	sub	sp, sp, #0x20
    c8b4:	stp	x29, x30, [sp, #16]
    c8b8:	add	x29, sp, #0x10
    c8bc:	adrp	x8, 2e000 <xexit@@Base+0x14c60>
    c8c0:	ldr	x0, [x0, #16]
    c8c4:	ldr	x8, [x8, #3248]
    c8c8:	mov	x4, x2
    c8cc:	mov	x3, x1
    c8d0:	add	x2, sp, #0x8
    c8d4:	ldr	x8, [x8]
    c8d8:	mov	x1, x8
    c8dc:	bl	d65c <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0x169c>
    c8e0:	ldr	x8, [sp, #8]
    c8e4:	ldp	x29, x30, [sp, #16]
    c8e8:	cmp	w0, #0x0
    c8ec:	csel	x0, xzr, x8, eq  // eq = none
    c8f0:	add	sp, sp, #0x20
    c8f4:	ret
    c8f8:	stp	x29, x30, [sp, #-80]!
    c8fc:	stp	x26, x25, [sp, #16]
    c900:	stp	x24, x23, [sp, #32]
    c904:	stp	x22, x21, [sp, #48]
    c908:	stp	x20, x19, [sp, #64]
    c90c:	mov	x29, sp
    c910:	mov	x26, x1
    c914:	mov	w1, #0x51                  	// #81
    c918:	mov	x21, x7
    c91c:	mov	x22, x6
    c920:	mov	x23, x5
    c924:	mov	w24, w4
    c928:	mov	x25, x3
    c92c:	mov	x19, x2
    c930:	mov	x20, x0
    c934:	bl	11b24 <gcc_cp_fe_context@@Base+0x3af0>
    c938:	cbz	w0, c9ec <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xa2c>
    c93c:	mov	x0, x20
    c940:	mov	x1, x26
    c944:	bl	11f88 <gcc_cp_fe_context@@Base+0x3f54>
    c948:	cbz	w0, c9ec <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xa2c>
    c94c:	mov	w1, #0x7                   	// #7
    c950:	mov	x0, x20
    c954:	bl	c098 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xd8>
    c958:	cbz	w0, c9ec <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xa2c>
    c95c:	mov	x0, x20
    c960:	mov	x1, x25
    c964:	bl	11f88 <gcc_cp_fe_context@@Base+0x3f54>
    c968:	cbz	w0, c9ec <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xa2c>
    c96c:	mov	x0, x20
    c970:	mov	w1, w24
    c974:	bl	ca04 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xa44>
    c978:	cbz	w0, c9ec <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xa2c>
    c97c:	mov	x0, x20
    c980:	mov	x1, x23
    c984:	bl	c0d0 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0x110>
    c988:	cbz	w0, c9ec <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xa2c>
    c98c:	mov	x0, x20
    c990:	mov	x1, x22
    c994:	bl	11f88 <gcc_cp_fe_context@@Base+0x3f54>
    c998:	cbz	w0, c9ec <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xa2c>
    c99c:	mov	x0, x20
    c9a0:	mov	x1, x21
    c9a4:	bl	c0d0 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0x110>
    c9a8:	cbz	w0, c9ec <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xa2c>
    c9ac:	ldr	x1, [x29, #80]
    c9b0:	mov	x0, x20
    c9b4:	bl	11f88 <gcc_cp_fe_context@@Base+0x3f54>
    c9b8:	cbz	w0, c9ec <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xa2c>
    c9bc:	ldr	w1, [x29, #88]
    c9c0:	mov	x0, x20
    c9c4:	bl	ca1c <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xa5c>
    c9c8:	cbz	w0, c9ec <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xa2c>
    c9cc:	mov	x0, x20
    c9d0:	bl	ca34 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xa74>
    c9d4:	cbz	w0, c9ec <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xa2c>
    c9d8:	mov	x0, x20
    c9dc:	mov	x1, x19
    c9e0:	bl	ca4c <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xa8c>
    c9e4:	cmp	w0, #0x0
    c9e8:	cset	w0, ne  // ne = any
    c9ec:	ldp	x20, x19, [sp, #64]
    c9f0:	ldp	x22, x21, [sp, #48]
    c9f4:	ldp	x24, x23, [sp, #32]
    c9f8:	ldp	x26, x25, [sp, #16]
    c9fc:	ldp	x29, x30, [sp], #80
    ca00:	ret
    ca04:	stp	x29, x30, [sp, #-16]!
    ca08:	mov	x29, sp
    ca0c:	mov	w1, w1
    ca10:	bl	11f10 <gcc_cp_fe_context@@Base+0x3edc>
    ca14:	ldp	x29, x30, [sp], #16
    ca18:	ret
    ca1c:	stp	x29, x30, [sp, #-16]!
    ca20:	mov	x29, sp
    ca24:	mov	w1, w1
    ca28:	bl	11f10 <gcc_cp_fe_context@@Base+0x3edc>
    ca2c:	ldp	x29, x30, [sp], #16
    ca30:	ret
    ca34:	stp	x29, x30, [sp, #-16]!
    ca38:	mov	x29, sp
    ca3c:	mov	w1, #0x1                   	// #1
    ca40:	bl	11bfc <gcc_cp_fe_context@@Base+0x3bc8>
    ca44:	ldp	x29, x30, [sp], #16
    ca48:	ret
    ca4c:	stp	x29, x30, [sp, #-32]!
    ca50:	str	x19, [sp, #16]
    ca54:	mov	x29, sp
    ca58:	mov	x19, x1
    ca5c:	add	x1, x29, #0x18
    ca60:	bl	11f4c <gcc_cp_fe_context@@Base+0x3f18>
    ca64:	cbz	w0, ca74 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xab4>
    ca68:	ldr	x8, [x29, #24]
    ca6c:	mov	w0, #0x1                   	// #1
    ca70:	str	x8, [x19]
    ca74:	ldr	x19, [sp, #16]
    ca78:	ldp	x29, x30, [sp], #32
    ca7c:	ret
    ca80:	stp	x29, x30, [sp, #-64]!
    ca84:	str	x23, [sp, #16]
    ca88:	stp	x22, x21, [sp, #32]
    ca8c:	stp	x20, x19, [sp, #48]
    ca90:	mov	x29, sp
    ca94:	mov	x23, x1
    ca98:	mov	w1, #0x51                  	// #81
    ca9c:	mov	w21, w4
    caa0:	mov	x22, x3
    caa4:	mov	x19, x2
    caa8:	mov	x20, x0
    caac:	bl	11b24 <gcc_cp_fe_context@@Base+0x3af0>
    cab0:	cbz	w0, cb14 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xb54>
    cab4:	mov	x0, x20
    cab8:	mov	x1, x23
    cabc:	bl	11f88 <gcc_cp_fe_context@@Base+0x3f54>
    cac0:	cbz	w0, cb14 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xb54>
    cac4:	mov	w1, #0x2                   	// #2
    cac8:	mov	x0, x20
    cacc:	bl	c098 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xd8>
    cad0:	cbz	w0, cb14 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xb54>
    cad4:	mov	x0, x20
    cad8:	mov	x1, x22
    cadc:	bl	c0d0 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0x110>
    cae0:	cbz	w0, cb14 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xb54>
    cae4:	mov	x0, x20
    cae8:	mov	w1, w21
    caec:	bl	c098 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xd8>
    caf0:	cbz	w0, cb14 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xb54>
    caf4:	mov	x0, x20
    caf8:	bl	ca34 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xa74>
    cafc:	cbz	w0, cb14 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xb54>
    cb00:	mov	x0, x20
    cb04:	mov	x1, x19
    cb08:	bl	cb28 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xb68>
    cb0c:	cmp	w0, #0x0
    cb10:	cset	w0, ne  // ne = any
    cb14:	ldp	x20, x19, [sp, #48]
    cb18:	ldp	x22, x21, [sp, #32]
    cb1c:	ldr	x23, [sp, #16]
    cb20:	ldp	x29, x30, [sp], #64
    cb24:	ret
    cb28:	stp	x29, x30, [sp, #-32]!
    cb2c:	str	x19, [sp, #16]
    cb30:	mov	x29, sp
    cb34:	mov	x19, x1
    cb38:	add	x1, x29, #0x18
    cb3c:	bl	11f4c <gcc_cp_fe_context@@Base+0x3f18>
    cb40:	cbz	w0, cb50 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xb90>
    cb44:	ldr	x8, [x29, #24]
    cb48:	mov	w0, #0x1                   	// #1
    cb4c:	str	w8, [x19]
    cb50:	ldr	x19, [sp, #16]
    cb54:	ldp	x29, x30, [sp], #32
    cb58:	ret
    cb5c:	stp	x29, x30, [sp, #-80]!
    cb60:	str	x25, [sp, #16]
    cb64:	stp	x24, x23, [sp, #32]
    cb68:	stp	x22, x21, [sp, #48]
    cb6c:	stp	x20, x19, [sp, #64]
    cb70:	mov	x29, sp
    cb74:	mov	x25, x1
    cb78:	mov	w1, #0x51                  	// #81
    cb7c:	mov	w21, w6
    cb80:	mov	x22, x5
    cb84:	mov	x23, x4
    cb88:	mov	x24, x3
    cb8c:	mov	x19, x2
    cb90:	mov	x20, x0
    cb94:	bl	11b24 <gcc_cp_fe_context@@Base+0x3af0>
    cb98:	cbz	w0, cc1c <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xc5c>
    cb9c:	mov	x0, x20
    cba0:	mov	x1, x25
    cba4:	bl	11f88 <gcc_cp_fe_context@@Base+0x3f54>
    cba8:	cbz	w0, cc1c <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xc5c>
    cbac:	mov	w1, #0x4                   	// #4
    cbb0:	mov	x0, x20
    cbb4:	bl	c098 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xd8>
    cbb8:	cbz	w0, cc1c <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xc5c>
    cbbc:	mov	x0, x20
    cbc0:	mov	x1, x24
    cbc4:	bl	11f88 <gcc_cp_fe_context@@Base+0x3f54>
    cbc8:	cbz	w0, cc1c <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xc5c>
    cbcc:	mov	x0, x20
    cbd0:	mov	x1, x23
    cbd4:	bl	c0d0 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0x110>
    cbd8:	cbz	w0, cc1c <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xc5c>
    cbdc:	mov	x0, x20
    cbe0:	mov	x1, x22
    cbe4:	bl	11f88 <gcc_cp_fe_context@@Base+0x3f54>
    cbe8:	cbz	w0, cc1c <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xc5c>
    cbec:	mov	x0, x20
    cbf0:	mov	w1, w21
    cbf4:	bl	ca1c <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xa5c>
    cbf8:	cbz	w0, cc1c <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xc5c>
    cbfc:	mov	x0, x20
    cc00:	bl	ca34 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xa74>
    cc04:	cbz	w0, cc1c <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xc5c>
    cc08:	mov	x0, x20
    cc0c:	mov	x1, x19
    cc10:	bl	cb28 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xb68>
    cc14:	cmp	w0, #0x0
    cc18:	cset	w0, ne  // ne = any
    cc1c:	ldp	x20, x19, [sp, #64]
    cc20:	ldp	x22, x21, [sp, #48]
    cc24:	ldp	x24, x23, [sp, #32]
    cc28:	ldr	x25, [sp, #16]
    cc2c:	ldp	x29, x30, [sp], #80
    cc30:	ret
    cc34:	stp	x29, x30, [sp, #-48]!
    cc38:	stp	x22, x21, [sp, #16]
    cc3c:	stp	x20, x19, [sp, #32]
    cc40:	mov	x29, sp
    cc44:	mov	x22, x1
    cc48:	mov	w1, #0x51                  	// #81
    cc4c:	mov	x21, x3
    cc50:	mov	x19, x2
    cc54:	mov	x20, x0
    cc58:	bl	11b24 <gcc_cp_fe_context@@Base+0x3af0>
    cc5c:	cbz	w0, ccb0 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xcf0>
    cc60:	mov	x0, x20
    cc64:	mov	x1, x22
    cc68:	bl	11f88 <gcc_cp_fe_context@@Base+0x3f54>
    cc6c:	cbz	w0, ccb0 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xcf0>
    cc70:	mov	w1, #0x1                   	// #1
    cc74:	mov	x0, x20
    cc78:	bl	c098 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xd8>
    cc7c:	cbz	w0, ccb0 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xcf0>
    cc80:	mov	x0, x20
    cc84:	mov	x1, x21
    cc88:	bl	c0d0 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0x110>
    cc8c:	cbz	w0, ccb0 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xcf0>
    cc90:	mov	x0, x20
    cc94:	bl	ca34 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xa74>
    cc98:	cbz	w0, ccb0 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xcf0>
    cc9c:	mov	x0, x20
    cca0:	mov	x1, x19
    cca4:	bl	ca4c <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xa8c>
    cca8:	cmp	w0, #0x0
    ccac:	cset	w0, ne  // ne = any
    ccb0:	ldp	x20, x19, [sp, #32]
    ccb4:	ldp	x22, x21, [sp, #16]
    ccb8:	ldp	x29, x30, [sp], #48
    ccbc:	ret
    ccc0:	stp	x29, x30, [sp, #-48]!
    ccc4:	str	x21, [sp, #16]
    ccc8:	stp	x20, x19, [sp, #32]
    cccc:	mov	x29, sp
    ccd0:	mov	x21, x1
    ccd4:	mov	w1, #0x51                  	// #81
    ccd8:	mov	x19, x2
    ccdc:	mov	x20, x0
    cce0:	bl	11b24 <gcc_cp_fe_context@@Base+0x3af0>
    cce4:	cbz	w0, cd28 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xd68>
    cce8:	mov	x0, x20
    ccec:	mov	x1, x21
    ccf0:	bl	11f88 <gcc_cp_fe_context@@Base+0x3f54>
    ccf4:	cbz	w0, cd28 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xd68>
    ccf8:	mov	x0, x20
    ccfc:	mov	w1, wzr
    cd00:	bl	c098 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xd8>
    cd04:	cbz	w0, cd28 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xd68>
    cd08:	mov	x0, x20
    cd0c:	bl	ca34 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xa74>
    cd10:	cbz	w0, cd28 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xd68>
    cd14:	mov	x0, x20
    cd18:	mov	x1, x19
    cd1c:	bl	ca4c <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xa8c>
    cd20:	cmp	w0, #0x0
    cd24:	cset	w0, ne  // ne = any
    cd28:	ldp	x20, x19, [sp, #32]
    cd2c:	ldr	x21, [sp, #16]
    cd30:	ldp	x29, x30, [sp], #48
    cd34:	ret
    cd38:	stp	x29, x30, [sp, #-80]!
    cd3c:	stp	x26, x25, [sp, #16]
    cd40:	stp	x24, x23, [sp, #32]
    cd44:	stp	x22, x21, [sp, #48]
    cd48:	stp	x20, x19, [sp, #64]
    cd4c:	mov	x29, sp
    cd50:	mov	x26, x1
    cd54:	mov	w1, #0x51                  	// #81
    cd58:	mov	x21, x7
    cd5c:	mov	x22, x6
    cd60:	mov	x23, x5
    cd64:	mov	x24, x4
    cd68:	mov	x25, x3
    cd6c:	mov	x19, x2
    cd70:	mov	x20, x0
    cd74:	bl	11b24 <gcc_cp_fe_context@@Base+0x3af0>
    cd78:	cbz	w0, ce0c <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xe4c>
    cd7c:	mov	x0, x20
    cd80:	mov	x1, x26
    cd84:	bl	11f88 <gcc_cp_fe_context@@Base+0x3f54>
    cd88:	cbz	w0, ce0c <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xe4c>
    cd8c:	mov	w1, #0x5                   	// #5
    cd90:	mov	x0, x20
    cd94:	bl	c098 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xd8>
    cd98:	cbz	w0, ce0c <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xe4c>
    cd9c:	mov	x0, x20
    cda0:	mov	x1, x25
    cda4:	bl	c0d0 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0x110>
    cda8:	cbz	w0, ce0c <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xe4c>
    cdac:	mov	x0, x20
    cdb0:	mov	x1, x24
    cdb4:	bl	11f88 <gcc_cp_fe_context@@Base+0x3f54>
    cdb8:	cbz	w0, ce0c <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xe4c>
    cdbc:	mov	x0, x20
    cdc0:	mov	x1, x23
    cdc4:	bl	c0d0 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0x110>
    cdc8:	cbz	w0, ce0c <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xe4c>
    cdcc:	mov	x0, x20
    cdd0:	mov	x1, x22
    cdd4:	bl	ce24 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xe64>
    cdd8:	cbz	w0, ce0c <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xe4c>
    cddc:	mov	x0, x20
    cde0:	mov	x1, x21
    cde4:	bl	ce24 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xe64>
    cde8:	cbz	w0, ce0c <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xe4c>
    cdec:	mov	x0, x20
    cdf0:	bl	ca34 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xa74>
    cdf4:	cbz	w0, ce0c <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xe4c>
    cdf8:	mov	x0, x20
    cdfc:	mov	x1, x19
    ce00:	bl	cb28 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xb68>
    ce04:	cmp	w0, #0x0
    ce08:	cset	w0, ne  // ne = any
    ce0c:	ldp	x20, x19, [sp, #64]
    ce10:	ldp	x22, x21, [sp, #48]
    ce14:	ldp	x24, x23, [sp, #32]
    ce18:	ldp	x26, x25, [sp, #16]
    ce1c:	ldp	x29, x30, [sp], #80
    ce20:	ret
    ce24:	stp	x29, x30, [sp, #-16]!
    ce28:	mov	x29, sp
    ce2c:	bl	11f10 <gcc_cp_fe_context@@Base+0x3edc>
    ce30:	ldp	x29, x30, [sp], #16
    ce34:	ret
    ce38:	stp	x29, x30, [sp, #-64]!
    ce3c:	str	x23, [sp, #16]
    ce40:	stp	x22, x21, [sp, #32]
    ce44:	stp	x20, x19, [sp, #48]
    ce48:	mov	x29, sp
    ce4c:	mov	x23, x1
    ce50:	mov	w1, #0x51                  	// #81
    ce54:	mov	x21, x4
    ce58:	mov	x22, x3
    ce5c:	mov	x19, x2
    ce60:	mov	x20, x0
    ce64:	bl	11b24 <gcc_cp_fe_context@@Base+0x3af0>
    ce68:	cbz	w0, cecc <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xf0c>
    ce6c:	mov	x0, x20
    ce70:	mov	x1, x23
    ce74:	bl	11f88 <gcc_cp_fe_context@@Base+0x3f54>
    ce78:	cbz	w0, cecc <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xf0c>
    ce7c:	mov	w1, #0x2                   	// #2
    ce80:	mov	x0, x20
    ce84:	bl	c098 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xd8>
    ce88:	cbz	w0, cecc <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xf0c>
    ce8c:	mov	x0, x20
    ce90:	mov	x1, x22
    ce94:	bl	c0d0 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0x110>
    ce98:	cbz	w0, cecc <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xf0c>
    ce9c:	mov	x0, x20
    cea0:	mov	x1, x21
    cea4:	bl	ce24 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xe64>
    cea8:	cbz	w0, cecc <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xf0c>
    ceac:	mov	x0, x20
    ceb0:	bl	ca34 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xa74>
    ceb4:	cbz	w0, cecc <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xf0c>
    ceb8:	mov	x0, x20
    cebc:	mov	x1, x19
    cec0:	bl	cb28 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xb68>
    cec4:	cmp	w0, #0x0
    cec8:	cset	w0, ne  // ne = any
    cecc:	ldp	x20, x19, [sp, #48]
    ced0:	ldp	x22, x21, [sp, #32]
    ced4:	ldr	x23, [sp, #16]
    ced8:	ldp	x29, x30, [sp], #64
    cedc:	ret
    cee0:	stp	x29, x30, [sp, #-64]!
    cee4:	stp	x24, x23, [sp, #16]
    cee8:	stp	x22, x21, [sp, #32]
    ceec:	stp	x20, x19, [sp, #48]
    cef0:	mov	x29, sp
    cef4:	mov	x24, x1
    cef8:	mov	w1, #0x51                  	// #81
    cefc:	mov	x21, x5
    cf00:	mov	x22, x4
    cf04:	mov	x23, x3
    cf08:	mov	x19, x2
    cf0c:	mov	x20, x0
    cf10:	bl	11b24 <gcc_cp_fe_context@@Base+0x3af0>
    cf14:	cbz	w0, cf88 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xfc8>
    cf18:	mov	x0, x20
    cf1c:	mov	x1, x24
    cf20:	bl	11f88 <gcc_cp_fe_context@@Base+0x3f54>
    cf24:	cbz	w0, cf88 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xfc8>
    cf28:	mov	w1, #0x3                   	// #3
    cf2c:	mov	x0, x20
    cf30:	bl	c098 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xd8>
    cf34:	cbz	w0, cf88 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xfc8>
    cf38:	mov	x0, x20
    cf3c:	mov	x1, x23
    cf40:	bl	c0d0 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0x110>
    cf44:	cbz	w0, cf88 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xfc8>
    cf48:	mov	x0, x20
    cf4c:	mov	x1, x22
    cf50:	bl	11f88 <gcc_cp_fe_context@@Base+0x3f54>
    cf54:	cbz	w0, cf88 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xfc8>
    cf58:	mov	x0, x20
    cf5c:	mov	x1, x21
    cf60:	bl	ce24 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xe64>
    cf64:	cbz	w0, cf88 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xfc8>
    cf68:	mov	x0, x20
    cf6c:	bl	ca34 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xa74>
    cf70:	cbz	w0, cf88 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xfc8>
    cf74:	mov	x0, x20
    cf78:	mov	x1, x19
    cf7c:	bl	cb28 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xb68>
    cf80:	cmp	w0, #0x0
    cf84:	cset	w0, ne  // ne = any
    cf88:	ldp	x20, x19, [sp, #48]
    cf8c:	ldp	x22, x21, [sp, #32]
    cf90:	ldp	x24, x23, [sp, #16]
    cf94:	ldp	x29, x30, [sp], #64
    cf98:	ret
    cf9c:	stp	x29, x30, [sp, #-48]!
    cfa0:	stp	x22, x21, [sp, #16]
    cfa4:	stp	x20, x19, [sp, #32]
    cfa8:	mov	x29, sp
    cfac:	mov	x22, x1
    cfb0:	mov	w1, #0x51                  	// #81
    cfb4:	mov	x21, x3
    cfb8:	mov	x19, x2
    cfbc:	mov	x20, x0
    cfc0:	bl	11b24 <gcc_cp_fe_context@@Base+0x3af0>
    cfc4:	cbz	w0, d018 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0x1058>
    cfc8:	mov	x0, x20
    cfcc:	mov	x1, x22
    cfd0:	bl	11f88 <gcc_cp_fe_context@@Base+0x3f54>
    cfd4:	cbz	w0, d018 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0x1058>
    cfd8:	mov	w1, #0x1                   	// #1
    cfdc:	mov	x0, x20
    cfe0:	bl	c098 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xd8>
    cfe4:	cbz	w0, d018 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0x1058>
    cfe8:	mov	x0, x20
    cfec:	mov	x1, x21
    cff0:	bl	c0d0 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0x110>
    cff4:	cbz	w0, d018 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0x1058>
    cff8:	mov	x0, x20
    cffc:	bl	ca34 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xa74>
    d000:	cbz	w0, d018 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0x1058>
    d004:	mov	x0, x20
    d008:	mov	x1, x19
    d00c:	bl	cb28 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xb68>
    d010:	cmp	w0, #0x0
    d014:	cset	w0, ne  // ne = any
    d018:	ldp	x20, x19, [sp, #32]
    d01c:	ldp	x22, x21, [sp, #16]
    d020:	ldp	x29, x30, [sp], #48
    d024:	ret
    d028:	stp	x29, x30, [sp, #-64]!
    d02c:	stp	x24, x23, [sp, #16]
    d030:	stp	x22, x21, [sp, #32]
    d034:	stp	x20, x19, [sp, #48]
    d038:	mov	x29, sp
    d03c:	mov	x24, x1
    d040:	mov	w1, #0x51                  	// #81
    d044:	mov	w21, w5
    d048:	mov	x22, x4
    d04c:	mov	x23, x3
    d050:	mov	x19, x2
    d054:	mov	x20, x0
    d058:	bl	11b24 <gcc_cp_fe_context@@Base+0x3af0>
    d05c:	cbz	w0, d0d0 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0x1110>
    d060:	mov	x0, x20
    d064:	mov	x1, x24
    d068:	bl	11f88 <gcc_cp_fe_context@@Base+0x3f54>
    d06c:	cbz	w0, d0d0 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0x1110>
    d070:	mov	w1, #0x3                   	// #3
    d074:	mov	x0, x20
    d078:	bl	c098 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xd8>
    d07c:	cbz	w0, d0d0 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0x1110>
    d080:	mov	x0, x20
    d084:	mov	x1, x23
    d088:	bl	c0d0 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0x110>
    d08c:	cbz	w0, d0d0 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0x1110>
    d090:	mov	x0, x20
    d094:	mov	x1, x22
    d098:	bl	12194 <gcc_cp_fe_context@@Base+0x4160>
    d09c:	cbz	w0, d0d0 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0x1110>
    d0a0:	mov	x0, x20
    d0a4:	mov	w1, w21
    d0a8:	bl	c098 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xd8>
    d0ac:	cbz	w0, d0d0 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0x1110>
    d0b0:	mov	x0, x20
    d0b4:	bl	ca34 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xa74>
    d0b8:	cbz	w0, d0d0 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0x1110>
    d0bc:	mov	x0, x20
    d0c0:	mov	x1, x19
    d0c4:	bl	ca4c <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xa8c>
    d0c8:	cmp	w0, #0x0
    d0cc:	cset	w0, ne  // ne = any
    d0d0:	ldp	x20, x19, [sp, #48]
    d0d4:	ldp	x22, x21, [sp, #32]
    d0d8:	ldp	x24, x23, [sp, #16]
    d0dc:	ldp	x29, x30, [sp], #64
    d0e0:	ret
    d0e4:	stp	x29, x30, [sp, #-64]!
    d0e8:	str	x23, [sp, #16]
    d0ec:	stp	x22, x21, [sp, #32]
    d0f0:	stp	x20, x19, [sp, #48]
    d0f4:	mov	x29, sp
    d0f8:	mov	x23, x1
    d0fc:	mov	w1, #0x51                  	// #81
    d100:	mov	x21, x4
    d104:	mov	w22, w3
    d108:	mov	x19, x2
    d10c:	mov	x20, x0
    d110:	bl	11b24 <gcc_cp_fe_context@@Base+0x3af0>
    d114:	cbz	w0, d178 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0x11b8>
    d118:	mov	x0, x20
    d11c:	mov	x1, x23
    d120:	bl	11f88 <gcc_cp_fe_context@@Base+0x3f54>
    d124:	cbz	w0, d178 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0x11b8>
    d128:	mov	w1, #0x2                   	// #2
    d12c:	mov	x0, x20
    d130:	bl	c098 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xd8>
    d134:	cbz	w0, d178 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0x11b8>
    d138:	mov	x0, x20
    d13c:	mov	w1, w22
    d140:	bl	c098 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xd8>
    d144:	cbz	w0, d178 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0x11b8>
    d148:	mov	x0, x20
    d14c:	mov	x1, x21
    d150:	bl	ce24 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xe64>
    d154:	cbz	w0, d178 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0x11b8>
    d158:	mov	x0, x20
    d15c:	bl	ca34 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xa74>
    d160:	cbz	w0, d178 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0x11b8>
    d164:	mov	x0, x20
    d168:	mov	x1, x19
    d16c:	bl	ca4c <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xa8c>
    d170:	cmp	w0, #0x0
    d174:	cset	w0, ne  // ne = any
    d178:	ldp	x20, x19, [sp, #48]
    d17c:	ldp	x22, x21, [sp, #32]
    d180:	ldr	x23, [sp, #16]
    d184:	ldp	x29, x30, [sp], #64
    d188:	ret
    d18c:	stp	x29, x30, [sp, #-48]!
    d190:	stp	x22, x21, [sp, #16]
    d194:	stp	x20, x19, [sp, #32]
    d198:	mov	x29, sp
    d19c:	mov	x22, x1
    d1a0:	mov	w1, #0x51                  	// #81
    d1a4:	mov	x21, x3
    d1a8:	mov	x19, x2
    d1ac:	mov	x20, x0
    d1b0:	bl	11b24 <gcc_cp_fe_context@@Base+0x3af0>
    d1b4:	cbz	w0, d208 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0x1248>
    d1b8:	mov	x0, x20
    d1bc:	mov	x1, x22
    d1c0:	bl	11f88 <gcc_cp_fe_context@@Base+0x3f54>
    d1c4:	cbz	w0, d208 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0x1248>
    d1c8:	mov	w1, #0x1                   	// #1
    d1cc:	mov	x0, x20
    d1d0:	bl	c098 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xd8>
    d1d4:	cbz	w0, d208 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0x1248>
    d1d8:	mov	x0, x20
    d1dc:	mov	x1, x21
    d1e0:	bl	ce24 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xe64>
    d1e4:	cbz	w0, d208 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0x1248>
    d1e8:	mov	x0, x20
    d1ec:	bl	ca34 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xa74>
    d1f0:	cbz	w0, d208 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0x1248>
    d1f4:	mov	x0, x20
    d1f8:	mov	x1, x19
    d1fc:	bl	ca4c <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xa8c>
    d200:	cmp	w0, #0x0
    d204:	cset	w0, ne  // ne = any
    d208:	ldp	x20, x19, [sp, #32]
    d20c:	ldp	x22, x21, [sp, #16]
    d210:	ldp	x29, x30, [sp], #48
    d214:	ret
    d218:	stp	x29, x30, [sp, #-64]!
    d21c:	str	x23, [sp, #16]
    d220:	stp	x22, x21, [sp, #32]
    d224:	stp	x20, x19, [sp, #48]
    d228:	mov	x29, sp
    d22c:	mov	x23, x1
    d230:	mov	w1, #0x51                  	// #81
    d234:	mov	w21, w4
    d238:	mov	x22, x3
    d23c:	mov	x19, x2
    d240:	mov	x20, x0
    d244:	bl	11b24 <gcc_cp_fe_context@@Base+0x3af0>
    d248:	cbz	w0, d2ac <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0x12ec>
    d24c:	mov	x0, x20
    d250:	mov	x1, x23
    d254:	bl	11f88 <gcc_cp_fe_context@@Base+0x3f54>
    d258:	cbz	w0, d2ac <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0x12ec>
    d25c:	mov	w1, #0x2                   	// #2
    d260:	mov	x0, x20
    d264:	bl	c098 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xd8>
    d268:	cbz	w0, d2ac <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0x12ec>
    d26c:	mov	x0, x20
    d270:	mov	x1, x22
    d274:	bl	c0d0 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0x110>
    d278:	cbz	w0, d2ac <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0x12ec>
    d27c:	mov	x0, x20
    d280:	mov	w1, w21
    d284:	bl	c098 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xd8>
    d288:	cbz	w0, d2ac <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0x12ec>
    d28c:	mov	x0, x20
    d290:	bl	ca34 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xa74>
    d294:	cbz	w0, d2ac <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0x12ec>
    d298:	mov	x0, x20
    d29c:	mov	x1, x19
    d2a0:	bl	ca4c <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xa8c>
    d2a4:	cmp	w0, #0x0
    d2a8:	cset	w0, ne  // ne = any
    d2ac:	ldp	x20, x19, [sp, #48]
    d2b0:	ldp	x22, x21, [sp, #32]
    d2b4:	ldr	x23, [sp, #16]
    d2b8:	ldp	x29, x30, [sp], #64
    d2bc:	ret
    d2c0:	stp	x29, x30, [sp, #-64]!
    d2c4:	str	x23, [sp, #16]
    d2c8:	stp	x22, x21, [sp, #32]
    d2cc:	stp	x20, x19, [sp, #48]
    d2d0:	mov	x29, sp
    d2d4:	mov	x23, x1
    d2d8:	mov	w1, #0x51                  	// #81
    d2dc:	mov	x21, x4
    d2e0:	mov	x22, x3
    d2e4:	mov	x19, x2
    d2e8:	mov	x20, x0
    d2ec:	bl	11b24 <gcc_cp_fe_context@@Base+0x3af0>
    d2f0:	cbz	w0, d354 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0x1394>
    d2f4:	mov	x0, x20
    d2f8:	mov	x1, x23
    d2fc:	bl	11f88 <gcc_cp_fe_context@@Base+0x3f54>
    d300:	cbz	w0, d354 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0x1394>
    d304:	mov	w1, #0x2                   	// #2
    d308:	mov	x0, x20
    d30c:	bl	c098 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xd8>
    d310:	cbz	w0, d354 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0x1394>
    d314:	mov	x0, x20
    d318:	mov	x1, x22
    d31c:	bl	c0d0 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0x110>
    d320:	cbz	w0, d354 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0x1394>
    d324:	mov	x0, x20
    d328:	mov	x1, x21
    d32c:	bl	11f88 <gcc_cp_fe_context@@Base+0x3f54>
    d330:	cbz	w0, d354 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0x1394>
    d334:	mov	x0, x20
    d338:	bl	ca34 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xa74>
    d33c:	cbz	w0, d354 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0x1394>
    d340:	mov	x0, x20
    d344:	mov	x1, x19
    d348:	bl	ca4c <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xa8c>
    d34c:	cmp	w0, #0x0
    d350:	cset	w0, ne  // ne = any
    d354:	ldp	x20, x19, [sp, #48]
    d358:	ldp	x22, x21, [sp, #32]
    d35c:	ldr	x23, [sp, #16]
    d360:	ldp	x29, x30, [sp], #64
    d364:	ret
    d368:	stp	x29, x30, [sp, #-64]!
    d36c:	str	x23, [sp, #16]
    d370:	stp	x22, x21, [sp, #32]
    d374:	stp	x20, x19, [sp, #48]
    d378:	mov	x29, sp
    d37c:	mov	x23, x1
    d380:	mov	w1, #0x51                  	// #81
    d384:	mov	w21, w4
    d388:	mov	x22, x3
    d38c:	mov	x19, x2
    d390:	mov	x20, x0
    d394:	bl	11b24 <gcc_cp_fe_context@@Base+0x3af0>
    d398:	cbz	w0, d3fc <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0x143c>
    d39c:	mov	x0, x20
    d3a0:	mov	x1, x23
    d3a4:	bl	11f88 <gcc_cp_fe_context@@Base+0x3f54>
    d3a8:	cbz	w0, d3fc <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0x143c>
    d3ac:	mov	w1, #0x2                   	// #2
    d3b0:	mov	x0, x20
    d3b4:	bl	c098 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xd8>
    d3b8:	cbz	w0, d3fc <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0x143c>
    d3bc:	mov	x0, x20
    d3c0:	mov	x1, x22
    d3c4:	bl	c0d0 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0x110>
    d3c8:	cbz	w0, d3fc <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0x143c>
    d3cc:	mov	x0, x20
    d3d0:	mov	w1, w21
    d3d4:	bl	d410 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0x1450>
    d3d8:	cbz	w0, d3fc <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0x143c>
    d3dc:	mov	x0, x20
    d3e0:	bl	ca34 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xa74>
    d3e4:	cbz	w0, d3fc <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0x143c>
    d3e8:	mov	x0, x20
    d3ec:	mov	x1, x19
    d3f0:	bl	ca4c <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xa8c>
    d3f4:	cmp	w0, #0x0
    d3f8:	cset	w0, ne  // ne = any
    d3fc:	ldp	x20, x19, [sp, #48]
    d400:	ldp	x22, x21, [sp, #32]
    d404:	ldr	x23, [sp, #16]
    d408:	ldp	x29, x30, [sp], #64
    d40c:	ret
    d410:	stp	x29, x30, [sp, #-16]!
    d414:	mov	x29, sp
    d418:	mov	w1, w1
    d41c:	bl	11f10 <gcc_cp_fe_context@@Base+0x3edc>
    d420:	ldp	x29, x30, [sp], #16
    d424:	ret
    d428:	stp	x29, x30, [sp, #-80]!
    d42c:	stp	x26, x25, [sp, #16]
    d430:	stp	x24, x23, [sp, #32]
    d434:	stp	x22, x21, [sp, #48]
    d438:	stp	x20, x19, [sp, #64]
    d43c:	mov	x29, sp
    d440:	mov	x26, x1
    d444:	mov	w1, #0x51                  	// #81
    d448:	mov	w21, w7
    d44c:	mov	x22, x6
    d450:	mov	x23, x5
    d454:	mov	x24, x4
    d458:	mov	x25, x3
    d45c:	mov	x19, x2
    d460:	mov	x20, x0
    d464:	bl	11b24 <gcc_cp_fe_context@@Base+0x3af0>
    d468:	cbz	w0, d4fc <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0x153c>
    d46c:	mov	x0, x20
    d470:	mov	x1, x26
    d474:	bl	11f88 <gcc_cp_fe_context@@Base+0x3f54>
    d478:	cbz	w0, d4fc <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0x153c>
    d47c:	mov	w1, #0x5                   	// #5
    d480:	mov	x0, x20
    d484:	bl	c098 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xd8>
    d488:	cbz	w0, d4fc <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0x153c>
    d48c:	mov	x0, x20
    d490:	mov	x1, x25
    d494:	bl	c0d0 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0x110>
    d498:	cbz	w0, d4fc <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0x153c>
    d49c:	mov	x0, x20
    d4a0:	mov	x1, x24
    d4a4:	bl	11f88 <gcc_cp_fe_context@@Base+0x3f54>
    d4a8:	cbz	w0, d4fc <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0x153c>
    d4ac:	mov	x0, x20
    d4b0:	mov	x1, x23
    d4b4:	bl	ce24 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xe64>
    d4b8:	cbz	w0, d4fc <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0x153c>
    d4bc:	mov	x0, x20
    d4c0:	mov	x1, x22
    d4c4:	bl	11f88 <gcc_cp_fe_context@@Base+0x3f54>
    d4c8:	cbz	w0, d4fc <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0x153c>
    d4cc:	mov	x0, x20
    d4d0:	mov	w1, w21
    d4d4:	bl	ca1c <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xa5c>
    d4d8:	cbz	w0, d4fc <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0x153c>
    d4dc:	mov	x0, x20
    d4e0:	bl	ca34 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xa74>
    d4e4:	cbz	w0, d4fc <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0x153c>
    d4e8:	mov	x0, x20
    d4ec:	mov	x1, x19
    d4f0:	bl	cb28 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xb68>
    d4f4:	cmp	w0, #0x0
    d4f8:	cset	w0, ne  // ne = any
    d4fc:	ldp	x20, x19, [sp, #64]
    d500:	ldp	x22, x21, [sp, #48]
    d504:	ldp	x24, x23, [sp, #32]
    d508:	ldp	x26, x25, [sp, #16]
    d50c:	ldp	x29, x30, [sp], #80
    d510:	ret
    d514:	stp	x29, x30, [sp, #-48]!
    d518:	stp	x22, x21, [sp, #16]
    d51c:	stp	x20, x19, [sp, #32]
    d520:	mov	x29, sp
    d524:	mov	x22, x1
    d528:	mov	w1, #0x51                  	// #81
    d52c:	mov	x21, x3
    d530:	mov	x19, x2
    d534:	mov	x20, x0
    d538:	bl	11b24 <gcc_cp_fe_context@@Base+0x3af0>
    d53c:	cbz	w0, d590 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0x15d0>
    d540:	mov	x0, x20
    d544:	mov	x1, x22
    d548:	bl	11f88 <gcc_cp_fe_context@@Base+0x3f54>
    d54c:	cbz	w0, d590 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0x15d0>
    d550:	mov	w1, #0x1                   	// #1
    d554:	mov	x0, x20
    d558:	bl	c098 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xd8>
    d55c:	cbz	w0, d590 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0x15d0>
    d560:	mov	x0, x20
    d564:	mov	x1, x21
    d568:	bl	11f88 <gcc_cp_fe_context@@Base+0x3f54>
    d56c:	cbz	w0, d590 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0x15d0>
    d570:	mov	x0, x20
    d574:	bl	ca34 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xa74>
    d578:	cbz	w0, d590 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0x15d0>
    d57c:	mov	x0, x20
    d580:	mov	x1, x19
    d584:	bl	ca4c <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xa8c>
    d588:	cmp	w0, #0x0
    d58c:	cset	w0, ne  // ne = any
    d590:	ldp	x20, x19, [sp, #32]
    d594:	ldp	x22, x21, [sp, #16]
    d598:	ldp	x29, x30, [sp], #48
    d59c:	ret
    d5a0:	stp	x29, x30, [sp, #-64]!
    d5a4:	stp	x24, x23, [sp, #16]
    d5a8:	stp	x22, x21, [sp, #32]
    d5ac:	stp	x20, x19, [sp, #48]
    d5b0:	mov	x29, sp
    d5b4:	mov	x24, x1
    d5b8:	mov	w1, #0x51                  	// #81
    d5bc:	mov	x21, x5
    d5c0:	mov	x22, x4
    d5c4:	mov	w23, w3
    d5c8:	mov	x19, x2
    d5cc:	mov	x20, x0
    d5d0:	bl	11b24 <gcc_cp_fe_context@@Base+0x3af0>
    d5d4:	cbz	w0, d648 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0x1688>
    d5d8:	mov	x0, x20
    d5dc:	mov	x1, x24
    d5e0:	bl	11f88 <gcc_cp_fe_context@@Base+0x3f54>
    d5e4:	cbz	w0, d648 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0x1688>
    d5e8:	mov	w1, #0x3                   	// #3
    d5ec:	mov	x0, x20
    d5f0:	bl	c098 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xd8>
    d5f4:	cbz	w0, d648 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0x1688>
    d5f8:	mov	x0, x20
    d5fc:	mov	w1, w23
    d600:	bl	c098 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xd8>
    d604:	cbz	w0, d648 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0x1688>
    d608:	mov	x0, x20
    d60c:	mov	x1, x22
    d610:	bl	ce24 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xe64>
    d614:	cbz	w0, d648 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0x1688>
    d618:	mov	x0, x20
    d61c:	mov	x1, x21
    d620:	bl	11f88 <gcc_cp_fe_context@@Base+0x3f54>
    d624:	cbz	w0, d648 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0x1688>
    d628:	mov	x0, x20
    d62c:	bl	ca34 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xa74>
    d630:	cbz	w0, d648 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0x1688>
    d634:	mov	x0, x20
    d638:	mov	x1, x19
    d63c:	bl	ca4c <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xa8c>
    d640:	cmp	w0, #0x0
    d644:	cset	w0, ne  // ne = any
    d648:	ldp	x20, x19, [sp, #48]
    d64c:	ldp	x22, x21, [sp, #32]
    d650:	ldp	x24, x23, [sp, #16]
    d654:	ldp	x29, x30, [sp], #64
    d658:	ret
    d65c:	stp	x29, x30, [sp, #-64]!
    d660:	str	x23, [sp, #16]
    d664:	stp	x22, x21, [sp, #32]
    d668:	stp	x20, x19, [sp, #48]
    d66c:	mov	x29, sp
    d670:	mov	x23, x1
    d674:	mov	w1, #0x51                  	// #81
    d678:	mov	x21, x4
    d67c:	mov	x22, x3
    d680:	mov	x19, x2
    d684:	mov	x20, x0
    d688:	bl	11b24 <gcc_cp_fe_context@@Base+0x3af0>
    d68c:	cbz	w0, d6f0 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0x1730>
    d690:	mov	x0, x20
    d694:	mov	x1, x23
    d698:	bl	11f88 <gcc_cp_fe_context@@Base+0x3f54>
    d69c:	cbz	w0, d6f0 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0x1730>
    d6a0:	mov	w1, #0x2                   	// #2
    d6a4:	mov	x0, x20
    d6a8:	bl	c098 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xd8>
    d6ac:	cbz	w0, d6f0 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0x1730>
    d6b0:	mov	x0, x20
    d6b4:	mov	x1, x22
    d6b8:	bl	ce24 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xe64>
    d6bc:	cbz	w0, d6f0 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0x1730>
    d6c0:	mov	x0, x20
    d6c4:	mov	x1, x21
    d6c8:	bl	11f88 <gcc_cp_fe_context@@Base+0x3f54>
    d6cc:	cbz	w0, d6f0 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0x1730>
    d6d0:	mov	x0, x20
    d6d4:	bl	ca34 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xa74>
    d6d8:	cbz	w0, d6f0 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0x1730>
    d6dc:	mov	x0, x20
    d6e0:	mov	x1, x19
    d6e4:	bl	ca4c <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xa8c>
    d6e8:	cmp	w0, #0x0
    d6ec:	cset	w0, ne  // ne = any
    d6f0:	ldp	x20, x19, [sp, #48]
    d6f4:	ldp	x22, x21, [sp, #32]
    d6f8:	ldr	x23, [sp, #16]
    d6fc:	ldp	x29, x30, [sp], #64
    d700:	ret

000000000000d704 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev@@Base>:
    d704:	stp	x29, x30, [sp, #-32]!
    d708:	stp	x20, x19, [sp, #16]
    d70c:	mov	x29, sp
    d710:	ldr	x1, [x0]
    d714:	ldr	x8, [x0, #16]
    d718:	mov	x19, x0
    d71c:	sub	x8, x8, x1
    d720:	asr	x2, x8, #5
    d724:	bl	96a0 <_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE13_M_deallocateEPS5_m@plt>
    d728:	mov	x0, x19
    d72c:	bl	9b00 <_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev@plt>
    d730:	ldp	x20, x19, [sp, #16]
    d734:	ldp	x29, x30, [sp], #32
    d738:	ret
    d73c:	mov	x20, x0
    d740:	mov	x0, x19
    d744:	bl	9b00 <_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev@plt>
    d748:	mov	x0, x20
    d74c:	bl	a080 <_ZSt8distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_@@Base+0x40>

000000000000d750 <_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev@@Base>:
    d750:	ret
    d754:	stp	x29, x30, [sp, #-32]!
    d758:	str	x19, [sp, #16]
    d75c:	mov	x29, sp
    d760:	mov	x19, x1
    d764:	add	x1, x29, #0x18
    d768:	bl	11f4c <gcc_cp_fe_context@@Base+0x3f18>
    d76c:	cbz	w0, d77c <_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev@@Base+0x2c>
    d770:	ldr	x8, [x29, #24]
    d774:	mov	w0, #0x1                   	// #1
    d778:	str	w8, [x19]
    d77c:	ldr	x19, [sp, #16]
    d780:	ldp	x29, x30, [sp], #32
    d784:	ret
    d788:	stp	x29, x30, [sp, #-32]!
    d78c:	str	x19, [sp, #16]
    d790:	mov	x29, sp
    d794:	mov	x19, x1
    d798:	add	x1, x29, #0x18
    d79c:	bl	11f4c <gcc_cp_fe_context@@Base+0x3f18>
    d7a0:	cbz	w0, d7b0 <_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev@@Base+0x60>
    d7a4:	ldr	x8, [x29, #24]
    d7a8:	mov	w0, #0x1                   	// #1
    d7ac:	str	w8, [x19]
    d7b0:	ldr	x19, [sp, #16]
    d7b4:	ldp	x29, x30, [sp], #32
    d7b8:	ret
    d7bc:	stp	x29, x30, [sp, #-32]!
    d7c0:	str	x19, [sp, #16]
    d7c4:	mov	x29, sp
    d7c8:	mov	x19, x1
    d7cc:	add	x1, x29, #0x18
    d7d0:	bl	11f4c <gcc_cp_fe_context@@Base+0x3f18>
    d7d4:	cbz	w0, d7e4 <_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev@@Base+0x94>
    d7d8:	ldr	x8, [x29, #24]
    d7dc:	mov	w0, #0x1                   	// #1
    d7e0:	str	w8, [x19]
    d7e4:	ldr	x19, [sp, #16]
    d7e8:	ldp	x29, x30, [sp], #32
    d7ec:	ret
    d7f0:	stp	x29, x30, [sp, #-32]!
    d7f4:	str	x19, [sp, #16]
    d7f8:	mov	x29, sp
    d7fc:	mov	x19, x1
    d800:	add	x1, x29, #0x18
    d804:	bl	11f4c <gcc_cp_fe_context@@Base+0x3f18>
    d808:	cbz	w0, d818 <_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev@@Base+0xc8>
    d80c:	ldr	x8, [x29, #24]
    d810:	mov	w0, #0x1                   	// #1
    d814:	str	w8, [x19]
    d818:	ldr	x19, [sp, #16]
    d81c:	ldp	x29, x30, [sp], #32
    d820:	ret
    d824:	stp	x29, x30, [sp, #-48]!
    d828:	str	x21, [sp, #16]
    d82c:	stp	x20, x19, [sp, #32]
    d830:	mov	x29, sp
    d834:	mov	x20, x1
    d838:	mov	x19, x0
    d83c:	cbz	x1, d848 <_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev@@Base+0xf8>
    d840:	ldrsw	x21, [x20]
    d844:	b	d84c <_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev@@Base+0xfc>
    d848:	mov	x21, #0xffffffffffffffff    	// #-1
    d84c:	mov	w1, #0x76                  	// #118
    d850:	mov	x0, x19
    d854:	mov	x2, x21
    d858:	bl	120b8 <gcc_cp_fe_context@@Base+0x4084>
    d85c:	cmp	w0, #0x0
    d860:	mov	w8, w0
    d864:	cset	w0, ne  // ne = any
    d868:	cbz	w8, d894 <_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev@@Base+0x144>
    d86c:	cbz	x20, d894 <_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev@@Base+0x144>
    d870:	ldr	x2, [x20, #8]
    d874:	lsl	x1, x21, #3
    d878:	mov	x0, x19
    d87c:	bl	12104 <gcc_cp_fe_context@@Base+0x40d0>
    d880:	cbz	w0, d894 <_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev@@Base+0x144>
    d884:	ldr	x2, [x20, #16]
    d888:	lsl	x1, x21, #2
    d88c:	mov	x0, x19
    d890:	bl	12104 <gcc_cp_fe_context@@Base+0x40d0>
    d894:	ldp	x20, x19, [sp, #32]
    d898:	ldr	x21, [sp, #16]
    d89c:	ldp	x29, x30, [sp], #48
    d8a0:	ret
    d8a4:	sub	sp, sp, #0x40
    d8a8:	stp	x29, x30, [sp, #16]
    d8ac:	stp	x22, x21, [sp, #32]
    d8b0:	stp	x20, x19, [sp, #48]
    d8b4:	add	x29, sp, #0x10
    d8b8:	mov	x20, x1
    d8bc:	add	x2, sp, #0x8
    d8c0:	mov	w1, #0x76                  	// #118
    d8c4:	mov	x21, x0
    d8c8:	bl	12124 <gcc_cp_fe_context@@Base+0x40f0>
    d8cc:	cbz	w0, d978 <_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev@@Base+0x228>
    d8d0:	ldr	x22, [sp, #8]
    d8d4:	cmn	x22, #0x1
    d8d8:	b.eq	d948 <_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev@@Base+0x1f8>  // b.none
    d8dc:	mov	w0, #0x18                  	// #24
    d8e0:	bl	9540 <_Znwm@plt>
    d8e4:	str	w22, [x0]
    d8e8:	cmp	xzr, x22, lsr #61
    d8ec:	lsl	x22, x22, #3
    d8f0:	mov	x19, x0
    d8f4:	csinv	x0, x22, xzr, eq  // eq = none
    d8f8:	bl	8f90 <_Znam@plt>
    d8fc:	mov	x2, x0
    d900:	str	x0, [x19, #8]
    d904:	mov	x0, x21
    d908:	mov	x1, x22
    d90c:	bl	12174 <gcc_cp_fe_context@@Base+0x4140>
    d910:	cbz	w0, d960 <_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev@@Base+0x210>
    d914:	ldr	x8, [sp, #8]
    d918:	cmp	xzr, x8, lsr #62
    d91c:	lsl	x22, x8, #2
    d920:	csinv	x0, x22, xzr, eq  // eq = none
    d924:	bl	8f90 <_Znam@plt>
    d928:	mov	x2, x0
    d92c:	str	x0, [x19, #16]
    d930:	mov	x0, x21
    d934:	mov	x1, x22
    d938:	bl	12174 <gcc_cp_fe_context@@Base+0x4140>
    d93c:	cbz	w0, d954 <_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev@@Base+0x204>
    d940:	str	x19, [x20]
    d944:	b	d94c <_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev@@Base+0x1fc>
    d948:	str	xzr, [x20]
    d94c:	mov	w0, #0x1                   	// #1
    d950:	b	d978 <_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev@@Base+0x228>
    d954:	ldr	x0, [x19, #16]
    d958:	cbz	x0, d960 <_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev@@Base+0x210>
    d95c:	bl	96b0 <_ZdaPv@plt>
    d960:	ldr	x0, [x19, #8]
    d964:	cbz	x0, d96c <_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev@@Base+0x21c>
    d968:	bl	96b0 <_ZdaPv@plt>
    d96c:	mov	x0, x19
    d970:	bl	94f0 <_ZdlPv@plt>
    d974:	mov	w0, wzr
    d978:	ldp	x20, x19, [sp, #48]
    d97c:	ldp	x22, x21, [sp, #32]
    d980:	ldp	x29, x30, [sp, #16]
    d984:	add	sp, sp, #0x40
    d988:	ret
    d98c:	stp	x29, x30, [sp, #-48]!
    d990:	str	x21, [sp, #16]
    d994:	stp	x20, x19, [sp, #32]
    d998:	mov	x29, sp
    d99c:	mov	x20, x1
    d9a0:	mov	x19, x0
    d9a4:	cbz	x1, d9b0 <_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev@@Base+0x260>
    d9a8:	ldrsw	x21, [x20]
    d9ac:	b	d9b4 <_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev@@Base+0x264>
    d9b0:	mov	x21, #0xffffffffffffffff    	// #-1
    d9b4:	mov	w1, #0x74                  	// #116
    d9b8:	mov	x0, x19
    d9bc:	mov	x2, x21
    d9c0:	bl	120b8 <gcc_cp_fe_context@@Base+0x4084>
    d9c4:	cmp	w0, #0x0
    d9c8:	mov	w8, w0
    d9cc:	cset	w0, ne  // ne = any
    d9d0:	cbz	w8, d9fc <_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev@@Base+0x2ac>
    d9d4:	cbz	x20, d9fc <_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev@@Base+0x2ac>
    d9d8:	ldr	x2, [x20, #8]
    d9dc:	mov	x0, x19
    d9e0:	mov	x1, x21
    d9e4:	bl	12104 <gcc_cp_fe_context@@Base+0x40d0>
    d9e8:	cbz	w0, d9fc <_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev@@Base+0x2ac>
    d9ec:	ldr	x2, [x20, #16]
    d9f0:	lsl	x1, x21, #3
    d9f4:	mov	x0, x19
    d9f8:	bl	12104 <gcc_cp_fe_context@@Base+0x40d0>
    d9fc:	ldp	x20, x19, [sp, #32]
    da00:	ldr	x21, [sp, #16]
    da04:	ldp	x29, x30, [sp], #48
    da08:	ret
    da0c:	sub	sp, sp, #0x40
    da10:	stp	x29, x30, [sp, #16]
    da14:	stp	x22, x21, [sp, #32]
    da18:	stp	x20, x19, [sp, #48]
    da1c:	add	x29, sp, #0x10
    da20:	mov	x20, x1
    da24:	add	x2, sp, #0x8
    da28:	mov	w1, #0x74                  	// #116
    da2c:	mov	x21, x0
    da30:	bl	12124 <gcc_cp_fe_context@@Base+0x40f0>
    da34:	cbz	w0, dad8 <_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev@@Base+0x388>
    da38:	ldr	x22, [sp, #8]
    da3c:	cmn	x22, #0x1
    da40:	b.eq	daa8 <_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev@@Base+0x358>  // b.none
    da44:	mov	w0, #0x18                  	// #24
    da48:	bl	9540 <_Znwm@plt>
    da4c:	mov	x19, x0
    da50:	str	w22, [x0]
    da54:	mov	x0, x22
    da58:	bl	8f90 <_Znam@plt>
    da5c:	mov	x2, x0
    da60:	str	x0, [x19, #8]
    da64:	mov	x0, x21
    da68:	mov	x1, x22
    da6c:	bl	12174 <gcc_cp_fe_context@@Base+0x4140>
    da70:	cbz	w0, dac0 <_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev@@Base+0x370>
    da74:	ldr	x8, [sp, #8]
    da78:	cmp	xzr, x8, lsr #61
    da7c:	lsl	x22, x8, #3
    da80:	csinv	x0, x22, xzr, eq  // eq = none
    da84:	bl	8f90 <_Znam@plt>
    da88:	mov	x2, x0
    da8c:	str	x0, [x19, #16]
    da90:	mov	x0, x21
    da94:	mov	x1, x22
    da98:	bl	12174 <gcc_cp_fe_context@@Base+0x4140>
    da9c:	cbz	w0, dab4 <_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev@@Base+0x364>
    daa0:	str	x19, [x20]
    daa4:	b	daac <_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev@@Base+0x35c>
    daa8:	str	xzr, [x20]
    daac:	mov	w0, #0x1                   	// #1
    dab0:	b	dad8 <_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev@@Base+0x388>
    dab4:	ldr	x0, [x19, #16]
    dab8:	cbz	x0, dac0 <_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev@@Base+0x370>
    dabc:	bl	96b0 <_ZdaPv@plt>
    dac0:	ldr	x0, [x19, #8]
    dac4:	cbz	x0, dacc <_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev@@Base+0x37c>
    dac8:	bl	96b0 <_ZdaPv@plt>
    dacc:	mov	x0, x19
    dad0:	bl	94f0 <_ZdlPv@plt>
    dad4:	mov	w0, wzr
    dad8:	ldp	x20, x19, [sp, #48]
    dadc:	ldp	x22, x21, [sp, #32]
    dae0:	ldp	x29, x30, [sp, #16]
    dae4:	add	sp, sp, #0x40
    dae8:	ret
    daec:	stp	x29, x30, [sp, #-48]!
    daf0:	str	x21, [sp, #16]
    daf4:	stp	x20, x19, [sp, #32]
    daf8:	mov	x29, sp
    dafc:	mov	x20, x1
    db00:	mov	x19, x0
    db04:	cbz	x1, db10 <_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev@@Base+0x3c0>
    db08:	ldrsw	x21, [x20]
    db0c:	b	db14 <_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev@@Base+0x3c4>
    db10:	mov	x21, #0xffffffffffffffff    	// #-1
    db14:	mov	w1, #0x64                  	// #100
    db18:	mov	x0, x19
    db1c:	mov	x2, x21
    db20:	bl	120b8 <gcc_cp_fe_context@@Base+0x4084>
    db24:	cmp	w0, #0x0
    db28:	mov	w8, w0
    db2c:	cset	w0, ne  // ne = any
    db30:	cbz	w8, db48 <_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev@@Base+0x3f8>
    db34:	cbz	x20, db48 <_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev@@Base+0x3f8>
    db38:	ldr	x2, [x20, #8]
    db3c:	lsl	x1, x21, #3
    db40:	mov	x0, x19
    db44:	bl	12104 <gcc_cp_fe_context@@Base+0x40d0>
    db48:	ldp	x20, x19, [sp, #32]
    db4c:	ldr	x21, [sp, #16]
    db50:	ldp	x29, x30, [sp], #48
    db54:	ret
    db58:	sub	sp, sp, #0x40
    db5c:	stp	x29, x30, [sp, #16]
    db60:	stp	x22, x21, [sp, #32]
    db64:	stp	x20, x19, [sp, #48]
    db68:	add	x29, sp, #0x10
    db6c:	mov	x19, x1
    db70:	add	x2, sp, #0x8
    db74:	mov	w1, #0x64                  	// #100
    db78:	mov	x20, x0
    db7c:	bl	12124 <gcc_cp_fe_context@@Base+0x40f0>
    db80:	cbz	w0, dbf4 <_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev@@Base+0x4a4>
    db84:	ldr	x22, [sp, #8]
    db88:	cmn	x22, #0x1
    db8c:	b.eq	dbd0 <_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev@@Base+0x480>  // b.none
    db90:	mov	w0, #0x10                  	// #16
    db94:	bl	9540 <_Znwm@plt>
    db98:	str	w22, [x0]
    db9c:	cmp	xzr, x22, lsr #61
    dba0:	lsl	x22, x22, #3
    dba4:	mov	x21, x0
    dba8:	csinv	x0, x22, xzr, eq  // eq = none
    dbac:	bl	8f90 <_Znam@plt>
    dbb0:	mov	x2, x0
    dbb4:	str	x0, [x21, #8]
    dbb8:	mov	x0, x20
    dbbc:	mov	x1, x22
    dbc0:	bl	12174 <gcc_cp_fe_context@@Base+0x4140>
    dbc4:	cbz	w0, dbdc <_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev@@Base+0x48c>
    dbc8:	str	x21, [x19]
    dbcc:	b	dbd4 <_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev@@Base+0x484>
    dbd0:	str	xzr, [x19]
    dbd4:	mov	w0, #0x1                   	// #1
    dbd8:	b	dbf4 <_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev@@Base+0x4a4>
    dbdc:	ldr	x0, [x21, #8]
    dbe0:	cbz	x0, dbe8 <_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev@@Base+0x498>
    dbe4:	bl	96b0 <_ZdaPv@plt>
    dbe8:	mov	x0, x21
    dbec:	bl	94f0 <_ZdlPv@plt>
    dbf0:	mov	w0, wzr
    dbf4:	ldp	x20, x19, [sp, #48]
    dbf8:	ldp	x22, x21, [sp, #32]
    dbfc:	ldp	x29, x30, [sp, #16]
    dc00:	add	sp, sp, #0x40
    dc04:	ret
    dc08:	stp	x29, x30, [sp, #-64]!
    dc0c:	stp	x24, x23, [sp, #16]
    dc10:	stp	x22, x21, [sp, #32]
    dc14:	stp	x20, x19, [sp, #48]
    dc18:	mov	x29, sp
    dc1c:	add	x22, x0, #0x50
    dc20:	movi	v0.2d, #0x0
    dc24:	mov	x20, x0
    dc28:	stp	xzr, xzr, [x0, #16]
    dc2c:	str	xzr, [x0, #32]
    dc30:	stur	q0, [x0, #56]
    dc34:	stur	q0, [x0, #72]
    dc38:	stur	q0, [x0, #88]
    dc3c:	mov	x0, x22
    dc40:	mov	x19, x2
    dc44:	mov	x21, x1
    dc48:	bl	9a10 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2Ev@plt>
    dc4c:	add	x23, x20, #0x68
    dc50:	mov	x0, x23
    dc54:	bl	9480 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2Ev@plt>
    dc58:	strb	wzr, [x20, #136]
    dc5c:	mov	w0, #0x10                  	// #16
    dc60:	bl	9540 <_Znwm@plt>
    dc64:	mov	x1, x20
    dc68:	mov	x24, x0
    dc6c:	bl	eb98 <gcc_cp_fe_context@@Base+0xb64>
    dc70:	str	x24, [x20, #144]
    dc74:	stp	x21, x19, [x20]
    dc78:	ldp	x20, x19, [sp, #48]
    dc7c:	ldp	x22, x21, [sp, #32]
    dc80:	ldp	x24, x23, [sp, #16]
    dc84:	ldp	x29, x30, [sp], #64
    dc88:	ret
    dc8c:	mov	x19, x0
    dc90:	mov	x0, x23
    dc94:	bl	9200 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev@plt>
    dc98:	mov	x0, x22
    dc9c:	bl	9360 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev@plt>
    dca0:	mov	x0, x19
    dca4:	bl	9a00 <_Unwind_Resume@plt>
    dca8:	stp	x29, x30, [sp, #-32]!
    dcac:	str	x19, [sp, #16]
    dcb0:	mov	x19, x0
    dcb4:	ldr	x0, [x0, #16]
    dcb8:	mov	x29, sp
    dcbc:	cbz	x0, dccc <_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev@@Base+0x57c>
    dcc0:	ldr	x8, [x0]
    dcc4:	ldr	x8, [x8, #8]
    dcc8:	blr	x8
    dccc:	ldr	x0, [x19, #144]
    dcd0:	cbz	x0, dce0 <_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev@@Base+0x590>
    dcd4:	ldr	x8, [x0]
    dcd8:	ldr	x8, [x8, #16]
    dcdc:	blr	x8
    dce0:	add	x0, x19, #0x68
    dce4:	bl	9200 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev@plt>
    dce8:	add	x0, x19, #0x50
    dcec:	bl	9360 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev@plt>
    dcf0:	ldr	x19, [sp, #16]
    dcf4:	ldp	x29, x30, [sp], #32
    dcf8:	ret
    dcfc:	stp	x29, x30, [sp, #-16]!
    dd00:	mov	x29, sp
    dd04:	adrp	x0, 19000 <iterative_hash@@Base+0x140>
    dd08:	add	x0, x0, #0x560
    dd0c:	bl	91f0 <xstrdup@plt>
    dd10:	ldp	x29, x30, [sp], #16
    dd14:	ret
    dd18:	stp	x29, x30, [sp, #-48]!
    dd1c:	str	x21, [sp, #16]
    dd20:	stp	x20, x19, [sp, #32]
    dd24:	mov	x29, sp
    dd28:	sub	sp, sp, #0x60
    dd2c:	mov	x20, x0
    dd30:	add	x0, x0, #0x10
    dd34:	mov	x19, x1
    dd38:	bl	91d0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv@plt>
    dd3c:	sub	x8, x29, #0x20
    dd40:	bl	ded0 <_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev@@Base+0x780>
    dd44:	ldr	x8, [x20, #8]
    dd48:	ldrb	w8, [x8, #136]
    dd4c:	cbnz	w8, de60 <_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev@@Base+0x710>
    dd50:	sub	x0, x29, #0x20
    dd54:	bl	91d0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv@plt>
    dd58:	mov	x1, x0
    dd5c:	sub	x0, x29, #0x60
    dd60:	mov	w2, #0x9                   	// #9
    dd64:	bl	9030 <xregcomp@plt>
    dd68:	mov	w21, w0
    dd6c:	cbz	w0, dde4 <_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev@@Base+0x694>
    dd70:	sub	x1, x29, #0x60
    dd74:	mov	w0, w21
    dd78:	mov	x2, xzr
    dd7c:	mov	x3, xzr
    dd80:	bl	99a0 <xregerror@plt>
    dd84:	add	x9, x0, #0xf
    dd88:	mov	x8, sp
    dd8c:	and	x9, x9, #0xfffffffffffffff0
    dd90:	mov	x20, sp
    dd94:	sub	x19, x8, x9
    dd98:	mov	x3, x0
    dd9c:	mov	sp, x19
    dda0:	sub	x1, x29, #0x60
    dda4:	mov	w0, w21
    dda8:	mov	x2, x19
    ddac:	bl	99a0 <xregerror@plt>
    ddb0:	sub	x0, x29, #0x20
    ddb4:	bl	91d0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv@plt>
    ddb8:	mov	x1, x0
    ddbc:	adrp	x0, 19000 <iterative_hash@@Base+0x140>
    ddc0:	adrp	x2, 19000 <iterative_hash@@Base+0x140>
    ddc4:	add	x0, x0, #0x5ae
    ddc8:	add	x2, x2, #0x5c9
    ddcc:	mov	x3, x19
    ddd0:	mov	x4, xzr
    ddd4:	bl	9420 <concat@plt>
    ddd8:	mov	x19, x0
    dddc:	mov	sp, x20
    dde0:	b	de40 <_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev@@Base+0x6f0>
    dde4:	sub	x0, x29, #0x60
    dde8:	mov	x1, x19
    ddec:	bl	9c04 <_ZNSt15basic_streambufIcSt11char_traitsIcEED2Ev@plt+0xe4>
    ddf0:	tbz	w0, #0, de10 <_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev@@Base+0x6c0>
    ddf4:	sub	x0, x29, #0x60
    ddf8:	bl	9130 <xregfree@plt>
    ddfc:	ldr	x8, [x20, #8]
    de00:	ldrb	w8, [x8, #136]
    de04:	cbnz	w8, de8c <_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev@@Base+0x73c>
    de08:	mov	x19, xzr
    de0c:	b	de40 <_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev@@Base+0x6f0>
    de10:	sub	x0, x29, #0x60
    de14:	bl	9130 <xregfree@plt>
    de18:	sub	x0, x29, #0x20
    de1c:	bl	91d0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv@plt>
    de20:	mov	x1, x0
    de24:	adrp	x0, 19000 <iterative_hash@@Base+0x140>
    de28:	adrp	x2, 19000 <iterative_hash@@Base+0x140>
    de2c:	add	x0, x0, #0x5cd
    de30:	add	x2, x2, #0x5f0
    de34:	mov	x3, xzr
    de38:	bl	9420 <concat@plt>
    de3c:	mov	x19, x0
    de40:	sub	x0, x29, #0x20
    de44:	bl	9200 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev@plt>
    de48:	mov	x0, x19
    de4c:	mov	sp, x29
    de50:	ldp	x20, x19, [sp, #32]
    de54:	ldr	x21, [sp, #16]
    de58:	ldp	x29, x30, [sp], #48
    de5c:	ret
    de60:	adrp	x8, 2e000 <xexit@@Base+0x14c60>
    de64:	ldr	x8, [x8, #3968]
    de68:	sub	x0, x29, #0x20
    de6c:	ldr	x21, [x8]
    de70:	bl	91d0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv@plt>
    de74:	adrp	x1, 19000 <iterative_hash@@Base+0x140>
    de78:	mov	x2, x0
    de7c:	add	x1, x1, #0x584
    de80:	mov	x0, x21
    de84:	bl	9120 <fprintf@plt>
    de88:	b	dd50 <_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev@@Base+0x600>
    de8c:	adrp	x8, 2e000 <xexit@@Base+0x14c60>
    de90:	ldr	x8, [x8, #3968]
    de94:	mov	x0, x19
    de98:	ldr	x20, [x8]
    de9c:	bl	91d0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv@plt>
    dea0:	adrp	x1, 19000 <iterative_hash@@Base+0x140>
    dea4:	mov	x2, x0
    dea8:	add	x1, x1, #0x5f2
    deac:	mov	x0, x20
    deb0:	bl	9120 <fprintf@plt>
    deb4:	b	de08 <_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev@@Base+0x6b8>
    deb8:	b	debc <_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev@@Base+0x76c>
    debc:	mov	x19, x0
    dec0:	sub	x0, x29, #0x20
    dec4:	bl	9200 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev@plt>
    dec8:	mov	x0, x19
    decc:	bl	9a00 <_Unwind_Resume@plt>
    ded0:	sub	sp, sp, #0x1d0
    ded4:	stp	x29, x30, [sp, #400]
    ded8:	str	x28, [sp, #416]
    dedc:	stp	x22, x21, [sp, #432]
    dee0:	stp	x20, x19, [sp, #448]
    dee4:	add	x29, sp, #0x190
    dee8:	mov	x21, x0
    deec:	add	x0, sp, #0x8
    def0:	mov	x19, x8
    def4:	add	x20, sp, #0x8
    def8:	bl	9340 <_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEC1Ev@plt>
    defc:	add	x20, x20, #0x10
    df00:	adrp	x1, 1a000 <xexit@@Base+0xc60>
    df04:	add	x1, x1, #0x123
    df08:	mov	x0, x20
    df0c:	bl	9530 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    df10:	mov	x1, x21
    df14:	bl	9530 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    df18:	adrp	x1, 19000 <iterative_hash@@Base+0x140>
    df1c:	add	x1, x1, #0x62a
    df20:	bl	9530 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    df24:	adrp	x21, 19000 <iterative_hash@@Base+0x140>
    df28:	adrp	x22, 19000 <iterative_hash@@Base+0x140>
    df2c:	add	x21, x21, #0x7da
    df30:	add	x22, x22, #0x703
    df34:	ldrb	w8, [x21]
    df38:	cmp	w8, #0x7c
    df3c:	b.hi	df5c <_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev@@Base+0x80c>  // b.pmore
    df40:	adr	x9, df50 <_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev@@Base+0x800>
    df44:	ldrb	w10, [x22, x8]
    df48:	add	x9, x9, x10, lsl #2
    df4c:	br	x9
    df50:	mov	w1, #0x5c                  	// #92
    df54:	mov	x0, x20
    df58:	bl	9600 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    df5c:	ldrb	w1, [x21]
    df60:	mov	x0, x20
    df64:	bl	9600 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    df68:	add	x21, x21, #0x1
    df6c:	b	df34 <_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev@@Base+0x7e4>
    df70:	adrp	x1, 19000 <iterative_hash@@Base+0x140>
    df74:	add	x1, x1, #0x62c
    df78:	mov	x0, x20
    df7c:	bl	9530 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    df80:	add	x0, sp, #0x8
    df84:	mov	x8, x19
    df88:	bl	9510 <_ZNKSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEE3strEv@plt>
    df8c:	add	x0, sp, #0x8
    df90:	bl	93a0 <_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev@plt>
    df94:	ldp	x20, x19, [sp, #448]
    df98:	ldp	x22, x21, [sp, #432]
    df9c:	ldr	x28, [sp, #416]
    dfa0:	ldp	x29, x30, [sp, #400]
    dfa4:	add	sp, sp, #0x1d0
    dfa8:	ret
    dfac:	b	dfb0 <_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev@@Base+0x860>
    dfb0:	mov	x19, x0
    dfb4:	add	x0, sp, #0x8
    dfb8:	bl	93a0 <_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev@plt>
    dfbc:	mov	x0, x19
    dfc0:	bl	9a00 <_Unwind_Resume@plt>
    dfc4:	stp	x29, x30, [sp, #-48]!
    dfc8:	str	x21, [sp, #16]
    dfcc:	stp	x20, x19, [sp, #32]
    dfd0:	mov	x29, sp
    dfd4:	ldr	x8, [x0, #8]
    dfd8:	mov	x19, x0
    dfdc:	mov	x20, x1
    dfe0:	ldrb	w8, [x8, #136]
    dfe4:	cbnz	w8, e008 <_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev@@Base+0x8b8>
    dfe8:	add	x1, x19, #0x10
    dfec:	mov	x0, x20
    dff0:	bl	8fa0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSERKS4_@plt>
    dff4:	ldp	x20, x19, [sp, #32]
    dff8:	ldr	x21, [sp, #16]
    dffc:	mov	x0, xzr
    e000:	ldp	x29, x30, [sp], #48
    e004:	ret
    e008:	adrp	x8, 2e000 <xexit@@Base+0x14c60>
    e00c:	ldr	x8, [x8, #3968]
    e010:	add	x0, x19, #0x10
    e014:	ldr	x21, [x8]
    e018:	bl	91d0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv@plt>
    e01c:	adrp	x1, 19000 <iterative_hash@@Base+0x140>
    e020:	mov	x2, x0
    e024:	add	x1, x1, #0x605
    e028:	mov	x0, x21
    e02c:	bl	9120 <fprintf@plt>
    e030:	b	dfe8 <_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev@@Base+0x898>

000000000000e034 <gcc_cp_fe_context@@Base>:
    e034:	stp	x29, x30, [sp, #-32]!
    e038:	stp	x20, x19, [sp, #16]
    e03c:	mov	x29, sp
    e040:	cmp	w0, #0x1
    e044:	mov	x19, xzr
    e048:	b.hi	e070 <gcc_cp_fe_context@@Base+0x3c>  // b.pmore
    e04c:	cbnz	w1, e070 <gcc_cp_fe_context@@Base+0x3c>
    e050:	mov	w0, #0x98                  	// #152
    e054:	bl	9540 <_Znwm@plt>
    e058:	mov	x19, x0
    e05c:	adrp	x1, 2e000 <xexit@@Base+0x14c60>
    e060:	adrp	x2, 2e000 <xexit@@Base+0x14c60>
    e064:	add	x1, x1, #0x630
    e068:	add	x2, x2, #0x688
    e06c:	bl	dc08 <_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev@@Base+0x4b8>
    e070:	mov	x0, x19
    e074:	ldp	x20, x19, [sp, #16]
    e078:	ldp	x29, x30, [sp], #32
    e07c:	ret
    e080:	mov	x20, x0
    e084:	mov	x0, x19
    e088:	bl	94f0 <_ZdlPv@plt>
    e08c:	mov	x0, x20
    e090:	bl	9a00 <_Unwind_Resume@plt>
    e094:	stp	x29, x30, [sp, #-48]!
    e098:	str	x21, [sp, #16]
    e09c:	stp	x20, x19, [sp, #32]
    e0a0:	mov	x29, sp
    e0a4:	mov	x19, x3
    e0a8:	mov	w20, w2
    e0ac:	mov	x21, x0
    e0b0:	bl	e610 <gcc_cp_fe_context@@Base+0x5dc>
    e0b4:	mov	x0, x21
    e0b8:	mov	w1, w20
    e0bc:	mov	x2, x19
    e0c0:	bl	e510 <gcc_cp_fe_context@@Base+0x4dc>
    e0c4:	ldp	x20, x19, [sp, #32]
    e0c8:	ldr	x21, [sp, #16]
    e0cc:	ldp	x29, x30, [sp], #48
    e0d0:	ret
    e0d4:	stp	x29, x30, [sp, #-16]!
    e0d8:	mov	x29, sp
    e0dc:	add	x0, x0, #0x68
    e0e0:	bl	9730 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc@plt>
    e0e4:	ldp	x29, x30, [sp], #16
    e0e8:	ret
    e0ec:	stp	x1, x2, [x0, #64]
    e0f0:	ret
    e0f4:	stp	x29, x30, [sp, #-32]!
    e0f8:	stp	x20, x19, [sp, #16]
    e0fc:	mov	x29, sp
    e100:	mov	x19, x1
    e104:	mov	w1, w2
    e108:	mov	x20, x0
    e10c:	bl	e154 <gcc_cp_fe_context@@Base+0x120>
    e110:	mov	x0, x20
    e114:	mov	x1, x19
    e118:	bl	e164 <gcc_cp_fe_context@@Base+0x130>
    e11c:	ldp	x20, x19, [sp, #16]
    e120:	ldp	x29, x30, [sp], #32
    e124:	ret
    e128:	cbz	x0, e150 <gcc_cp_fe_context@@Base+0x11c>
    e12c:	stp	x29, x30, [sp, #-32]!
    e130:	str	x19, [sp, #16]
    e134:	mov	x29, sp
    e138:	mov	x19, x0
    e13c:	bl	dca8 <_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev@@Base+0x558>
    e140:	mov	x0, x19
    e144:	bl	94f0 <_ZdlPv@plt>
    e148:	ldr	x19, [sp, #16]
    e14c:	ldp	x29, x30, [sp], #32
    e150:	ret
    e154:	cmp	w1, #0x0
    e158:	cset	w8, ne  // ne = any
    e15c:	strb	w8, [x0, #136]
    e160:	ret
    e164:	sub	sp, sp, #0xe0
    e168:	stp	x29, x30, [sp, #160]
    e16c:	str	x23, [sp, #176]
    e170:	stp	x22, x21, [sp, #192]
    e174:	stp	x20, x19, [sp, #208]
    e178:	add	x29, sp, #0xa0
    e17c:	mov	x21, x1
    e180:	mov	x19, x0
    e184:	add	x3, x29, #0x18
    e188:	mov	w0, #0x1                   	// #1
    e18c:	mov	w1, #0x1                   	// #1
    e190:	mov	w2, wzr
    e194:	bl	9060 <socketpair@plt>
    e198:	cbz	w0, e1b0 <gcc_cp_fe_context@@Base+0x17c>
    e19c:	adrp	x1, 19000 <iterative_hash@@Base+0x140>
    e1a0:	add	x1, x1, #0x644
    e1a4:	mov	x0, x19
    e1a8:	bl	ec8c <gcc_cp_fe_context@@Base+0xc58>
    e1ac:	b	e1dc <gcc_cp_fe_context@@Base+0x1a8>
    e1b0:	sub	x0, x29, #0x8
    e1b4:	bl	90b0 <pipe@plt>
    e1b8:	cbz	w0, e1f8 <gcc_cp_fe_context@@Base+0x1c4>
    e1bc:	adrp	x1, 19000 <iterative_hash@@Base+0x140>
    e1c0:	add	x1, x1, #0x661
    e1c4:	mov	x0, x19
    e1c8:	bl	ec8c <gcc_cp_fe_context@@Base+0xc58>
    e1cc:	ldr	w0, [x29, #24]
    e1d0:	bl	97f0 <close@plt>
    e1d4:	ldr	w0, [x29, #28]
    e1d8:	bl	97f0 <close@plt>
    e1dc:	mov	w0, wzr
    e1e0:	ldp	x20, x19, [sp, #208]
    e1e4:	ldp	x22, x21, [sp, #192]
    e1e8:	ldr	x23, [sp, #176]
    e1ec:	ldp	x29, x30, [sp, #160]
    e1f0:	add	sp, sp, #0xe0
    e1f4:	ret
    e1f8:	add	x0, sp, #0x10
    e1fc:	bl	9920 <_ZNSaIcEC2Ev@plt>
    e200:	adrp	x1, 19000 <iterative_hash@@Base+0x140>
    e204:	add	x1, x1, #0x7de
    e208:	add	x0, sp, #0x30
    e20c:	add	x2, sp, #0x10
    e210:	bl	9180 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_@plt>
    e214:	add	x20, x19, #0x50
    e218:	add	x1, sp, #0x30
    e21c:	mov	x0, x20
    e220:	bl	93b0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backEOS5_@plt>
    e224:	add	x0, sp, #0x30
    e228:	bl	9200 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev@plt>
    e22c:	add	x0, sp, #0x10
    e230:	bl	9010 <_ZNSaIcED2Ev@plt>
    e234:	ldr	w3, [x29, #28]
    e238:	adrp	x2, 19000 <iterative_hash@@Base+0x140>
    e23c:	add	x2, x2, #0x7f4
    e240:	add	x0, sp, #0x30
    e244:	mov	w1, #0x64                  	// #100
    e248:	bl	95f0 <snprintf@plt>
    e24c:	cmp	w0, #0x64
    e250:	b.ge	e488 <gcc_cp_fe_context@@Base+0x454>  // b.tcont
    e254:	add	x0, sp, #0x8
    e258:	bl	9920 <_ZNSaIcEC2Ev@plt>
    e25c:	add	x0, sp, #0x10
    e260:	add	x1, sp, #0x30
    e264:	add	x2, sp, #0x8
    e268:	bl	9180 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_@plt>
    e26c:	add	x1, sp, #0x10
    e270:	mov	x0, x20
    e274:	bl	93b0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backEOS5_@plt>
    e278:	add	x0, sp, #0x10
    e27c:	bl	9200 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev@plt>
    e280:	add	x0, sp, #0x8
    e284:	bl	9010 <_ZNSaIcED2Ev@plt>
    e288:	add	x1, x19, #0x68
    e28c:	mov	x0, x20
    e290:	bl	9220 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_@plt>
    e294:	add	x0, sp, #0x8
    e298:	bl	9920 <_ZNSaIcEC2Ev@plt>
    e29c:	adrp	x1, 19000 <iterative_hash@@Base+0x140>
    e2a0:	add	x1, x1, #0x6ae
    e2a4:	add	x0, sp, #0x10
    e2a8:	add	x2, sp, #0x8
    e2ac:	bl	9180 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_@plt>
    e2b0:	add	x1, sp, #0x10
    e2b4:	mov	x0, x20
    e2b8:	bl	93b0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backEOS5_@plt>
    e2bc:	add	x0, sp, #0x10
    e2c0:	bl	9200 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev@plt>
    e2c4:	add	x0, sp, #0x8
    e2c8:	bl	9010 <_ZNSaIcED2Ev@plt>
    e2cc:	add	x0, sp, #0x8
    e2d0:	bl	9920 <_ZNSaIcEC2Ev@plt>
    e2d4:	adrp	x1, 19000 <iterative_hash@@Base+0x140>
    e2d8:	add	x1, x1, #0x6b1
    e2dc:	add	x0, sp, #0x10
    e2e0:	add	x2, sp, #0x8
    e2e4:	bl	9180 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_@plt>
    e2e8:	add	x1, sp, #0x10
    e2ec:	mov	x0, x20
    e2f0:	bl	93b0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backEOS5_@plt>
    e2f4:	add	x0, sp, #0x10
    e2f8:	bl	9200 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev@plt>
    e2fc:	add	x0, sp, #0x8
    e300:	bl	9010 <_ZNSaIcED2Ev@plt>
    e304:	add	x0, sp, #0x8
    e308:	bl	9920 <_ZNSaIcEC2Ev@plt>
    e30c:	add	x0, sp, #0x10
    e310:	add	x2, sp, #0x8
    e314:	mov	x1, x21
    e318:	bl	9180 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_@plt>
    e31c:	add	x1, sp, #0x10
    e320:	mov	x0, x20
    e324:	bl	93b0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backEOS5_@plt>
    e328:	add	x0, sp, #0x10
    e32c:	bl	9200 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev@plt>
    e330:	add	x0, sp, #0x8
    e334:	bl	9010 <_ZNSaIcED2Ev@plt>
    e338:	ldrb	w8, [x19, #136]
    e33c:	cbz	w8, e378 <gcc_cp_fe_context@@Base+0x344>
    e340:	add	x0, sp, #0x8
    e344:	bl	9920 <_ZNSaIcEC2Ev@plt>
    e348:	adrp	x1, 19000 <iterative_hash@@Base+0x140>
    e34c:	add	x1, x1, #0x6b4
    e350:	add	x0, sp, #0x10
    e354:	add	x2, sp, #0x8
    e358:	bl	9180 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_@plt>
    e35c:	add	x1, sp, #0x10
    e360:	mov	x0, x20
    e364:	bl	93b0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backEOS5_@plt>
    e368:	add	x0, sp, #0x10
    e36c:	bl	9200 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev@plt>
    e370:	add	x0, sp, #0x8
    e374:	bl	9010 <_ZNSaIcED2Ev@plt>
    e378:	mov	w0, #0x20                  	// #32
    e37c:	bl	9540 <_Znwm@plt>
    e380:	ldr	w1, [x29, #24]
    e384:	ldur	w2, [x29, #-8]
    e388:	mov	x21, x0
    e38c:	mov	x3, x19
    e390:	bl	eca4 <gcc_cp_fe_context@@Base+0xc70>
    e394:	adrp	x1, 19000 <iterative_hash@@Base+0x140>
    e398:	adrp	x2, e000 <_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev@@Base+0x8b0>
    e39c:	add	x1, x1, #0x6b7
    e3a0:	add	x2, x2, #0x788
    e3a4:	mov	x0, x21
    e3a8:	str	x21, [x19, #16]
    e3ac:	bl	b714 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_@@Base+0x90>
    e3b0:	ldr	x0, [x19, #16]
    e3b4:	adrp	x1, 19000 <iterative_hash@@Base+0x140>
    e3b8:	adrp	x2, e000 <_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev@@Base+0x8b0>
    e3bc:	add	x1, x1, #0x6c6
    e3c0:	add	x2, x2, #0x868
    e3c4:	bl	b714 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_@@Base+0x90>
    e3c8:	ldr	x0, [x19, #16]
    e3cc:	adrp	x1, 19000 <iterative_hash@@Base+0x140>
    e3d0:	adrp	x2, e000 <_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev@@Base+0x8b0>
    e3d4:	add	x1, x1, #0x814
    e3d8:	add	x2, x2, #0x914
    e3dc:	bl	b714 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_@@Base+0x90>
    e3e0:	ldr	x0, [x19, #16]
    e3e4:	adrp	x1, 19000 <iterative_hash@@Base+0x140>
    e3e8:	adrp	x2, e000 <_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev@@Base+0x8b0>
    e3ec:	add	x1, x1, #0x820
    e3f0:	add	x2, x2, #0x960
    e3f4:	bl	b714 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_@@Base+0x90>
    e3f8:	mov	x0, x20
    e3fc:	bl	9a40 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv@plt>
    e400:	adrp	x1, 2e000 <xexit@@Base+0x14c60>
    e404:	ldr	x1, [x1, #3280]
    e408:	add	x8, x0, #0x1
    e40c:	lsl	x9, x8, #3
    e410:	cmp	xzr, x8, lsr #61
    e414:	csinv	x0, x9, xzr, eq  // eq = none
    e418:	bl	9910 <_ZnamRKSt9nothrow_t@plt>
    e41c:	cbz	x0, e1e0 <gcc_cp_fe_context@@Base+0x1ac>
    e420:	mov	x21, x0
    e424:	mov	x0, x20
    e428:	bl	9a40 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv@plt>
    e42c:	cbz	x0, e464 <gcc_cp_fe_context@@Base+0x430>
    e430:	mov	x22, xzr
    e434:	mov	w23, #0x1                   	// #1
    e438:	mov	x0, x20
    e43c:	mov	x1, x22
    e440:	bl	9a70 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEixEm@plt>
    e444:	bl	91d0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv@plt>
    e448:	str	x0, [x21, x22, lsl #3]
    e44c:	mov	x0, x20
    e450:	mov	w22, w23
    e454:	bl	9a40 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv@plt>
    e458:	cmp	x0, x22
    e45c:	add	w23, w23, #0x1
    e460:	b.hi	e438 <gcc_cp_fe_context@@Base+0x404>  // b.pmore
    e464:	mov	x0, x20
    e468:	bl	9a40 <_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv@plt>
    e46c:	str	xzr, [x21, x0, lsl #3]
    e470:	add	x2, x29, #0x18
    e474:	sub	x3, x29, #0x8
    e478:	mov	x0, x19
    e47c:	mov	x1, x21
    e480:	bl	e9ac <gcc_cp_fe_context@@Base+0x978>
    e484:	b	e1e0 <gcc_cp_fe_context@@Base+0x1ac>
    e488:	bl	98b0 <abort@plt>
    e48c:	b	e4d0 <gcc_cp_fe_context@@Base+0x49c>
    e490:	mov	x19, x0
    e494:	b	e4dc <gcc_cp_fe_context@@Base+0x4a8>
    e498:	mov	x19, x0
    e49c:	mov	x0, x21
    e4a0:	bl	94f0 <_ZdlPv@plt>
    e4a4:	mov	x0, x19
    e4a8:	bl	9a00 <_Unwind_Resume@plt>
    e4ac:	b	e4d0 <gcc_cp_fe_context@@Base+0x49c>
    e4b0:	mov	x19, x0
    e4b4:	b	e4dc <gcc_cp_fe_context@@Base+0x4a8>
    e4b8:	b	e4d0 <gcc_cp_fe_context@@Base+0x49c>
    e4bc:	mov	x19, x0
    e4c0:	b	e4dc <gcc_cp_fe_context@@Base+0x4a8>
    e4c4:	b	e4d0 <gcc_cp_fe_context@@Base+0x49c>
    e4c8:	mov	x19, x0
    e4cc:	b	e4dc <gcc_cp_fe_context@@Base+0x4a8>
    e4d0:	mov	x19, x0
    e4d4:	add	x0, sp, #0x10
    e4d8:	bl	9200 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev@plt>
    e4dc:	add	x0, sp, #0x8
    e4e0:	bl	9010 <_ZNSaIcED2Ev@plt>
    e4e4:	mov	x0, x19
    e4e8:	bl	9a00 <_Unwind_Resume@plt>
    e4ec:	mov	x19, x0
    e4f0:	b	e4dc <gcc_cp_fe_context@@Base+0x4a8>
    e4f4:	mov	x19, x0
    e4f8:	add	x0, sp, #0x30
    e4fc:	bl	9200 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev@plt>
    e500:	b	e508 <gcc_cp_fe_context@@Base+0x4d4>
    e504:	mov	x19, x0
    e508:	add	x0, sp, #0x10
    e50c:	b	e4e0 <gcc_cp_fe_context@@Base+0x4ac>
    e510:	sub	sp, sp, #0x80
    e514:	stp	x29, x30, [sp, #80]
    e518:	stp	x22, x21, [sp, #96]
    e51c:	stp	x20, x19, [sp, #112]
    e520:	add	x29, sp, #0x50
    e524:	mov	x20, x0
    e528:	sub	x0, x29, #0x20
    e52c:	mov	x19, x2
    e530:	mov	w21, w1
    e534:	bl	9480 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2Ev@plt>
    e538:	ldr	x0, [x20, #144]
    e53c:	ldr	x8, [x0]
    e540:	ldr	x8, [x8]
    e544:	sub	x1, x29, #0x20
    e548:	blr	x8
    e54c:	mov	x22, x0
    e550:	cbnz	x0, e5bc <gcc_cp_fe_context@@Base+0x588>
    e554:	add	x20, x20, #0x50
    e558:	sub	x1, x29, #0x20
    e55c:	mov	x0, x20
    e560:	bl	9220 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_@plt>
    e564:	cmp	w21, #0x1
    e568:	b.lt	e5b8 <gcc_cp_fe_context@@Base+0x584>  // b.tstop
    e56c:	mov	w22, w21
    e570:	ldr	x21, [x19]
    e574:	add	x0, sp, #0x8
    e578:	bl	9920 <_ZNSaIcEC2Ev@plt>
    e57c:	add	x0, sp, #0x10
    e580:	add	x2, sp, #0x8
    e584:	mov	x1, x21
    e588:	bl	9180 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_@plt>
    e58c:	add	x1, sp, #0x10
    e590:	mov	x0, x20
    e594:	bl	93b0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backEOS5_@plt>
    e598:	add	x0, sp, #0x10
    e59c:	bl	9200 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev@plt>
    e5a0:	add	x0, sp, #0x8
    e5a4:	bl	9010 <_ZNSaIcED2Ev@plt>
    e5a8:	subs	x22, x22, #0x1
    e5ac:	add	x19, x19, #0x8
    e5b0:	b.ne	e570 <gcc_cp_fe_context@@Base+0x53c>  // b.any
    e5b4:	b	e5bc <gcc_cp_fe_context@@Base+0x588>
    e5b8:	mov	x22, xzr
    e5bc:	sub	x0, x29, #0x20
    e5c0:	bl	9200 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev@plt>
    e5c4:	mov	x0, x22
    e5c8:	ldp	x20, x19, [sp, #112]
    e5cc:	ldp	x22, x21, [sp, #96]
    e5d0:	ldp	x29, x30, [sp, #80]
    e5d4:	add	sp, sp, #0x80
    e5d8:	ret
    e5dc:	mov	x19, x0
    e5e0:	b	e600 <gcc_cp_fe_context@@Base+0x5cc>
    e5e4:	mov	x19, x0
    e5e8:	add	x0, sp, #0x10
    e5ec:	bl	9200 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev@plt>
    e5f0:	b	e5f8 <gcc_cp_fe_context@@Base+0x5c4>
    e5f4:	mov	x19, x0
    e5f8:	add	x0, sp, #0x8
    e5fc:	bl	9010 <_ZNSaIcED2Ev@plt>
    e600:	sub	x0, x29, #0x20
    e604:	bl	9200 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev@plt>
    e608:	mov	x0, x19
    e60c:	bl	9a00 <_Unwind_Resume@plt>
    e610:	sub	sp, sp, #0x50
    e614:	stp	x29, x30, [sp, #32]
    e618:	str	x21, [sp, #48]
    e61c:	stp	x20, x19, [sp, #64]
    e620:	add	x29, sp, #0x20
    e624:	mov	x20, x0
    e628:	ldr	x0, [x0, #144]
    e62c:	mov	x21, x1
    e630:	cbz	x0, e640 <gcc_cp_fe_context@@Base+0x60c>
    e634:	ldr	x8, [x0]
    e638:	ldr	x8, [x8, #16]
    e63c:	blr	x8
    e640:	mov	w0, #0x30                  	// #48
    e644:	bl	9540 <_Znwm@plt>
    e648:	mov	x19, x0
    e64c:	add	x0, x29, #0x18
    e650:	bl	9920 <_ZNSaIcEC2Ev@plt>
    e654:	mov	x0, sp
    e658:	add	x2, x29, #0x18
    e65c:	mov	x1, x21
    e660:	bl	9180 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_@plt>
    e664:	mov	x2, sp
    e668:	mov	x0, x19
    e66c:	mov	x1, x20
    e670:	bl	ed60 <gcc_cp_fe_context@@Base+0xd2c>
    e674:	mov	x0, sp
    e678:	str	x19, [x20, #144]
    e67c:	bl	9200 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev@plt>
    e680:	add	x0, x29, #0x18
    e684:	bl	9010 <_ZNSaIcED2Ev@plt>
    e688:	ldp	x20, x19, [sp, #64]
    e68c:	ldr	x21, [sp, #48]
    e690:	ldp	x29, x30, [sp, #32]
    e694:	mov	x0, xzr
    e698:	add	sp, sp, #0x50
    e69c:	ret
    e6a0:	mov	x20, x0
    e6a4:	mov	x0, sp
    e6a8:	bl	9200 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev@plt>
    e6ac:	b	e6b4 <gcc_cp_fe_context@@Base+0x680>
    e6b0:	mov	x20, x0
    e6b4:	add	x0, x29, #0x18
    e6b8:	bl	9010 <_ZNSaIcED2Ev@plt>
    e6bc:	mov	x0, x19
    e6c0:	bl	94f0 <_ZdlPv@plt>
    e6c4:	mov	x0, x20
    e6c8:	bl	9a00 <_Unwind_Resume@plt>
    e6cc:	sub	sp, sp, #0x50
    e6d0:	stp	x29, x30, [sp, #32]
    e6d4:	str	x21, [sp, #48]
    e6d8:	stp	x20, x19, [sp, #64]
    e6dc:	add	x29, sp, #0x20
    e6e0:	mov	x20, x0
    e6e4:	ldr	x0, [x0, #144]
    e6e8:	mov	x21, x1
    e6ec:	cbz	x0, e6fc <gcc_cp_fe_context@@Base+0x6c8>
    e6f0:	ldr	x8, [x0]
    e6f4:	ldr	x8, [x8, #16]
    e6f8:	blr	x8
    e6fc:	mov	w0, #0x30                  	// #48
    e700:	bl	9540 <_Znwm@plt>
    e704:	mov	x19, x0
    e708:	add	x0, x29, #0x18
    e70c:	bl	9920 <_ZNSaIcEC2Ev@plt>
    e710:	mov	x0, sp
    e714:	add	x2, x29, #0x18
    e718:	mov	x1, x21
    e71c:	bl	9180 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_@plt>
    e720:	mov	x2, sp
    e724:	mov	x0, x19
    e728:	mov	x1, x20
    e72c:	bl	edb0 <gcc_cp_fe_context@@Base+0xd7c>
    e730:	mov	x0, sp
    e734:	str	x19, [x20, #144]
    e738:	bl	9200 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev@plt>
    e73c:	add	x0, x29, #0x18
    e740:	bl	9010 <_ZNSaIcED2Ev@plt>
    e744:	ldp	x20, x19, [sp, #64]
    e748:	ldr	x21, [sp, #48]
    e74c:	ldp	x29, x30, [sp, #32]
    e750:	mov	x0, xzr
    e754:	add	sp, sp, #0x50
    e758:	ret
    e75c:	mov	x20, x0
    e760:	mov	x0, sp
    e764:	bl	9200 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev@plt>
    e768:	b	e770 <gcc_cp_fe_context@@Base+0x73c>
    e76c:	mov	x20, x0
    e770:	add	x0, x29, #0x18
    e774:	bl	9010 <_ZNSaIcED2Ev@plt>
    e778:	mov	x0, x19
    e77c:	bl	94f0 <_ZdlPv@plt>
    e780:	mov	x0, x20
    e784:	bl	9a00 <_Unwind_Resume@plt>
    e788:	sub	sp, sp, #0x30
    e78c:	stp	x29, x30, [sp, #16]
    e790:	stp	x20, x19, [sp, #32]
    e794:	add	x29, sp, #0x10
    e798:	mov	x19, x0
    e79c:	add	x0, sp, #0x8
    e7a0:	bl	ed18 <gcc_cp_fe_context@@Base+0xce4>
    e7a4:	mov	x0, sp
    e7a8:	bl	c040 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0x80>
    e7ac:	mov	w1, #0x2                   	// #2
    e7b0:	mov	x0, x19
    e7b4:	bl	11ed4 <gcc_cp_fe_context@@Base+0x3ea0>
    e7b8:	cbz	w0, e824 <gcc_cp_fe_context@@Base+0x7f0>
    e7bc:	add	x0, sp, #0x8
    e7c0:	mov	x1, x19
    e7c4:	bl	ed1c <gcc_cp_fe_context@@Base+0xce8>
    e7c8:	cbz	w0, e824 <gcc_cp_fe_context@@Base+0x7f0>
    e7cc:	mov	x0, sp
    e7d0:	mov	x1, x19
    e7d4:	bl	c068 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xa8>
    e7d8:	cbz	w0, e824 <gcc_cp_fe_context@@Base+0x7f0>
    e7dc:	add	x0, sp, #0x8
    e7e0:	bl	ed3c <gcc_cp_fe_context@@Base+0xd08>
    e7e4:	mov	w20, w0
    e7e8:	mov	x0, sp
    e7ec:	bl	c090 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xd0>
    e7f0:	mov	x2, x0
    e7f4:	mov	x0, x19
    e7f8:	mov	w1, w20
    e7fc:	bl	eaf8 <gcc_cp_fe_context@@Base+0xac4>
    e800:	mov	w1, #0x52                  	// #82
    e804:	mov	x0, x19
    e808:	bl	11b24 <gcc_cp_fe_context@@Base+0x3af0>
    e80c:	cbz	w0, e824 <gcc_cp_fe_context@@Base+0x7f0>
    e810:	mov	w1, #0x1                   	// #1
    e814:	mov	x0, x19
    e818:	bl	c098 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xd8>
    e81c:	mov	w19, w0
    e820:	b	e828 <gcc_cp_fe_context@@Base+0x7f4>
    e824:	mov	w19, wzr
    e828:	mov	x0, sp
    e82c:	bl	c0b0 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xf0>
    e830:	add	x0, sp, #0x8
    e834:	bl	ed44 <gcc_cp_fe_context@@Base+0xd10>
    e838:	mov	w0, w19
    e83c:	ldp	x20, x19, [sp, #32]
    e840:	ldp	x29, x30, [sp, #16]
    e844:	add	sp, sp, #0x30
    e848:	ret
    e84c:	mov	x19, x0
    e850:	mov	x0, sp
    e854:	bl	c0b0 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xf0>
    e858:	add	x0, sp, #0x8
    e85c:	bl	ed44 <gcc_cp_fe_context@@Base+0xd10>
    e860:	mov	x0, x19
    e864:	bl	9a00 <_Unwind_Resume@plt>
    e868:	sub	sp, sp, #0x30
    e86c:	stp	x29, x30, [sp, #16]
    e870:	stp	x20, x19, [sp, #32]
    e874:	add	x29, sp, #0x10
    e878:	mov	x19, x0
    e87c:	add	x0, sp, #0x8
    e880:	bl	c040 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0x80>
    e884:	mov	w1, #0x1                   	// #1
    e888:	mov	x0, x19
    e88c:	bl	11ed4 <gcc_cp_fe_context@@Base+0x3ea0>
    e890:	cbz	w0, e8e0 <gcc_cp_fe_context@@Base+0x8ac>
    e894:	add	x0, sp, #0x8
    e898:	mov	x1, x19
    e89c:	bl	c068 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xa8>
    e8a0:	cbz	w0, e8e0 <gcc_cp_fe_context@@Base+0x8ac>
    e8a4:	add	x0, sp, #0x8
    e8a8:	bl	c090 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xd0>
    e8ac:	mov	x1, x0
    e8b0:	mov	x0, x19
    e8b4:	bl	eb24 <gcc_cp_fe_context@@Base+0xaf0>
    e8b8:	mov	x20, x0
    e8bc:	mov	w1, #0x52                  	// #82
    e8c0:	mov	x0, x19
    e8c4:	bl	11b24 <gcc_cp_fe_context@@Base+0x3af0>
    e8c8:	cbz	w0, e8e0 <gcc_cp_fe_context@@Base+0x8ac>
    e8cc:	mov	x0, x19
    e8d0:	mov	x1, x20
    e8d4:	bl	c0d0 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0x110>
    e8d8:	mov	w19, w0
    e8dc:	b	e8e4 <gcc_cp_fe_context@@Base+0x8b0>
    e8e0:	mov	w19, wzr
    e8e4:	add	x0, sp, #0x8
    e8e8:	bl	c0b0 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xf0>
    e8ec:	mov	w0, w19
    e8f0:	ldp	x20, x19, [sp, #32]
    e8f4:	ldp	x29, x30, [sp, #16]
    e8f8:	add	sp, sp, #0x30
    e8fc:	ret
    e900:	mov	x19, x0
    e904:	add	x0, sp, #0x8
    e908:	bl	c0b0 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xf0>
    e90c:	mov	x0, x19
    e910:	bl	9a00 <_Unwind_Resume@plt>
    e914:	stp	x29, x30, [sp, #-32]!
    e918:	str	x19, [sp, #16]
    e91c:	mov	x29, sp
    e920:	mov	x1, xzr
    e924:	mov	x19, x0
    e928:	bl	11ed4 <gcc_cp_fe_context@@Base+0x3ea0>
    e92c:	cbz	w0, e954 <gcc_cp_fe_context@@Base+0x920>
    e930:	mov	x0, x19
    e934:	bl	eb4c <gcc_cp_fe_context@@Base+0xb18>
    e938:	mov	w1, #0x52                  	// #82
    e93c:	mov	x0, x19
    e940:	bl	11b24 <gcc_cp_fe_context@@Base+0x3af0>
    e944:	cbz	w0, e954 <gcc_cp_fe_context@@Base+0x920>
    e948:	mov	w1, #0x1                   	// #1
    e94c:	mov	x0, x19
    e950:	bl	c098 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xd8>
    e954:	ldr	x19, [sp, #16]
    e958:	ldp	x29, x30, [sp], #32
    e95c:	ret
    e960:	stp	x29, x30, [sp, #-32]!
    e964:	str	x19, [sp, #16]
    e968:	mov	x29, sp
    e96c:	mov	x1, xzr
    e970:	mov	x19, x0
    e974:	bl	11ed4 <gcc_cp_fe_context@@Base+0x3ea0>
    e978:	cbz	w0, e9a0 <gcc_cp_fe_context@@Base+0x96c>
    e97c:	mov	x0, x19
    e980:	bl	eb6c <gcc_cp_fe_context@@Base+0xb38>
    e984:	mov	w1, #0x52                  	// #82
    e988:	mov	x0, x19
    e98c:	bl	11b24 <gcc_cp_fe_context@@Base+0x3af0>
    e990:	cbz	w0, e9a0 <gcc_cp_fe_context@@Base+0x96c>
    e994:	mov	w1, #0x1                   	// #1
    e998:	mov	x0, x19
    e99c:	bl	c098 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xd8>
    e9a0:	ldr	x19, [sp, #16]
    e9a4:	ldp	x29, x30, [sp], #32
    e9a8:	ret
    e9ac:	stp	x29, x30, [sp, #-64]!
    e9b0:	str	x23, [sp, #16]
    e9b4:	stp	x22, x21, [sp, #32]
    e9b8:	stp	x20, x19, [sp, #48]
    e9bc:	mov	x29, sp
    e9c0:	mov	x19, x3
    e9c4:	mov	x20, x2
    e9c8:	mov	x22, x1
    e9cc:	mov	x23, x0
    e9d0:	bl	97b0 <fork@plt>
    e9d4:	cmn	w0, #0x1
    e9d8:	b.eq	ea24 <gcc_cp_fe_context@@Base+0x9f0>  // b.none
    e9dc:	mov	w21, w0
    e9e0:	cbz	w0, eab4 <gcc_cp_fe_context@@Base+0xa80>
    e9e4:	ldr	w0, [x20, #4]
    e9e8:	bl	97f0 <close@plt>
    e9ec:	ldr	w0, [x19, #4]
    e9f0:	bl	97f0 <close@plt>
    e9f4:	ldr	x0, [x23, #16]
    e9f8:	mov	w1, #0x48                  	// #72
    e9fc:	bl	11b24 <gcc_cp_fe_context@@Base+0x3af0>
    ea00:	cbz	w0, ea48 <gcc_cp_fe_context@@Base+0xa14>
    ea04:	ldr	x0, [x23, #16]
    ea08:	mov	w1, wzr
    ea0c:	bl	ed48 <gcc_cp_fe_context@@Base+0xd14>
    ea10:	cbz	w0, ea48 <gcc_cp_fe_context@@Base+0xa14>
    ea14:	ldr	x0, [x23, #16]
    ea18:	bl	c0fc <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0x13c>
    ea1c:	mov	w22, w0
    ea20:	b	ea4c <gcc_cp_fe_context@@Base+0xa18>
    ea24:	ldr	w0, [x20]
    ea28:	bl	97f0 <close@plt>
    ea2c:	ldr	w0, [x20, #4]
    ea30:	bl	97f0 <close@plt>
    ea34:	ldr	w0, [x19]
    ea38:	bl	97f0 <close@plt>
    ea3c:	ldr	w0, [x19, #4]
    ea40:	bl	97f0 <close@plt>
    ea44:	b	ea90 <gcc_cp_fe_context@@Base+0xa5c>
    ea48:	mov	w22, wzr
    ea4c:	ldr	w0, [x20]
    ea50:	bl	97f0 <close@plt>
    ea54:	ldr	w0, [x19]
    ea58:	bl	97f0 <close@plt>
    ea5c:	add	x1, x29, #0x1c
    ea60:	mov	w0, w21
    ea64:	mov	w2, wzr
    ea68:	bl	9150 <waitpid@plt>
    ea6c:	cmn	w0, #0x1
    ea70:	b.ne	ea84 <gcc_cp_fe_context@@Base+0xa50>  // b.any
    ea74:	bl	96d0 <__errno_location@plt>
    ea78:	ldr	w8, [x0]
    ea7c:	cmp	w8, #0x4
    ea80:	b.ne	ea90 <gcc_cp_fe_context@@Base+0xa5c>  // b.any
    ea84:	ldrh	w8, [x29, #28]
    ea88:	tst	w8, #0xffffff7f
    ea8c:	b.eq	eaa8 <gcc_cp_fe_context@@Base+0xa74>  // b.none
    ea90:	mov	w0, wzr
    ea94:	ldp	x20, x19, [sp, #48]
    ea98:	ldp	x22, x21, [sp, #32]
    ea9c:	ldr	x23, [sp, #16]
    eaa0:	ldp	x29, x30, [sp], #64
    eaa4:	ret
    eaa8:	cmp	w22, #0x0
    eaac:	cset	w0, ne  // ne = any
    eab0:	b	ea94 <gcc_cp_fe_context@@Base+0xa60>
    eab4:	ldr	w0, [x19, #4]
    eab8:	mov	w1, #0x1                   	// #1
    eabc:	bl	90c0 <dup2@plt>
    eac0:	ldr	w0, [x19, #4]
    eac4:	mov	w1, #0x2                   	// #2
    eac8:	bl	90c0 <dup2@plt>
    eacc:	ldr	w0, [x19]
    ead0:	bl	97f0 <close@plt>
    ead4:	ldr	w0, [x19, #4]
    ead8:	bl	97f0 <close@plt>
    eadc:	ldr	w0, [x20]
    eae0:	bl	97f0 <close@plt>
    eae4:	ldr	x0, [x22]
    eae8:	mov	x1, x22
    eaec:	bl	9050 <execvp@plt>
    eaf0:	mov	w0, #0x7f                  	// #127
    eaf4:	bl	92e0 <_exit@plt>
    eaf8:	stp	x29, x30, [sp, #-16]!
    eafc:	mov	x29, sp
    eb00:	ldr	x8, [x0, #24]
    eb04:	mov	x3, x2
    eb08:	mov	w2, w1
    eb0c:	ldr	x9, [x8, #24]
    eb10:	ldr	x0, [x8, #56]
    eb14:	mov	x1, x8
    eb18:	blr	x9
    eb1c:	ldp	x29, x30, [sp], #16
    eb20:	ret
    eb24:	stp	x29, x30, [sp, #-16]!
    eb28:	mov	x29, sp
    eb2c:	ldr	x8, [x0, #24]
    eb30:	mov	x2, x1
    eb34:	ldr	x9, [x8, #32]
    eb38:	ldr	x0, [x8, #56]
    eb3c:	mov	x1, x8
    eb40:	blr	x9
    eb44:	ldp	x29, x30, [sp], #16
    eb48:	ret
    eb4c:	stp	x29, x30, [sp, #-16]!
    eb50:	mov	x29, sp
    eb54:	ldr	x1, [x0, #24]
    eb58:	ldr	x8, [x1, #40]
    eb5c:	ldr	x0, [x1, #56]
    eb60:	blr	x8
    eb64:	ldp	x29, x30, [sp], #16
    eb68:	ret
    eb6c:	stp	x29, x30, [sp, #-16]!
    eb70:	mov	x29, sp
    eb74:	ldr	x1, [x0, #24]
    eb78:	ldp	x8, x0, [x1, #48]
    eb7c:	blr	x8
    eb80:	ldp	x29, x30, [sp], #16
    eb84:	ret
    eb88:	stp	x1, x2, [x0, #24]
    eb8c:	stp	x3, x4, [x0, #40]
    eb90:	str	x5, [x0, #56]
    eb94:	ret
    eb98:	adrp	x8, 2e000 <xexit@@Base+0x14c60>
    eb9c:	add	x8, x8, #0x8c0
    eba0:	stp	x8, x1, [x0]
    eba4:	ret
    eba8:	ret
    ebac:	stp	x29, x30, [sp, #-32]!
    ebb0:	str	x19, [sp, #16]
    ebb4:	mov	x29, sp
    ebb8:	mov	x19, x0
    ebbc:	bl	eba8 <gcc_cp_fe_context@@Base+0xb74>
    ebc0:	mov	x0, x19
    ebc4:	bl	94f0 <_ZdlPv@plt>
    ebc8:	ldr	x19, [sp, #16]
    ebcc:	ldp	x29, x30, [sp], #32
    ebd0:	ret
    ebd4:	stp	x29, x30, [sp, #-32]!
    ebd8:	adrp	x8, 2e000 <xexit@@Base+0x14c60>
    ebdc:	add	x8, x8, #0x8f8
    ebe0:	str	x19, [sp, #16]
    ebe4:	mov	x19, x0
    ebe8:	str	x8, [x0], #16
    ebec:	mov	x29, sp
    ebf0:	bl	9200 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev@plt>
    ebf4:	mov	x0, x19
    ebf8:	bl	eba8 <gcc_cp_fe_context@@Base+0xb74>
    ebfc:	ldr	x19, [sp, #16]
    ec00:	ldp	x29, x30, [sp], #32
    ec04:	ret
    ec08:	stp	x29, x30, [sp, #-32]!
    ec0c:	str	x19, [sp, #16]
    ec10:	mov	x29, sp
    ec14:	mov	x19, x0
    ec18:	bl	ebd4 <gcc_cp_fe_context@@Base+0xba0>
    ec1c:	mov	x0, x19
    ec20:	bl	94f0 <_ZdlPv@plt>
    ec24:	ldr	x19, [sp, #16]
    ec28:	ldp	x29, x30, [sp], #32
    ec2c:	ret
    ec30:	stp	x29, x30, [sp, #-32]!
    ec34:	adrp	x8, 2e000 <xexit@@Base+0x14c60>
    ec38:	add	x8, x8, #0x938
    ec3c:	str	x19, [sp, #16]
    ec40:	mov	x19, x0
    ec44:	str	x8, [x0], #16
    ec48:	mov	x29, sp
    ec4c:	bl	9200 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev@plt>
    ec50:	mov	x0, x19
    ec54:	bl	eba8 <gcc_cp_fe_context@@Base+0xb74>
    ec58:	ldr	x19, [sp, #16]
    ec5c:	ldp	x29, x30, [sp], #32
    ec60:	ret
    ec64:	stp	x29, x30, [sp, #-32]!
    ec68:	str	x19, [sp, #16]
    ec6c:	mov	x29, sp
    ec70:	mov	x19, x0
    ec74:	bl	ec30 <gcc_cp_fe_context@@Base+0xbfc>
    ec78:	mov	x0, x19
    ec7c:	bl	94f0 <_ZdlPv@plt>
    ec80:	ldr	x19, [sp, #16]
    ec84:	ldp	x29, x30, [sp], #32
    ec88:	ret
    ec8c:	stp	x29, x30, [sp, #-16]!
    ec90:	mov	x29, sp
    ec94:	ldp	x8, x0, [x0, #64]
    ec98:	blr	x8
    ec9c:	ldp	x29, x30, [sp], #16
    eca0:	ret
    eca4:	stp	x29, x30, [sp, #-32]!
    eca8:	stp	x20, x19, [sp, #16]
    ecac:	mov	x29, sp
    ecb0:	mov	x19, x3
    ecb4:	mov	x20, x0
    ecb8:	bl	bfd4 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0x14>
    ecbc:	adrp	x8, 2e000 <xexit@@Base+0x14c60>
    ecc0:	add	x8, x8, #0x978
    ecc4:	str	x8, [x20]
    ecc8:	str	x19, [x20, #24]
    eccc:	ldp	x20, x19, [sp, #16]
    ecd0:	ldp	x29, x30, [sp], #32
    ecd4:	ret
    ecd8:	stp	x29, x30, [sp, #-32]!
    ecdc:	str	x19, [sp, #16]
    ece0:	mov	x29, sp
    ece4:	mov	x19, x0
    ece8:	bl	11ad8 <gcc_cp_fe_context@@Base+0x3aa4>
    ecec:	mov	x0, x19
    ecf0:	bl	94f0 <_ZdlPv@plt>
    ecf4:	ldr	x19, [sp, #16]
    ecf8:	ldp	x29, x30, [sp], #32
    ecfc:	ret
    ed00:	stp	x29, x30, [sp, #-16]!
    ed04:	mov	x29, sp
    ed08:	ldr	x0, [x0, #24]
    ed0c:	bl	ec8c <gcc_cp_fe_context@@Base+0xc58>
    ed10:	ldp	x29, x30, [sp], #16
    ed14:	ret
    ed18:	ret
    ed1c:	stp	x29, x30, [sp, #-16]!
    ed20:	mov	x29, sp
    ed24:	mov	x8, x0
    ed28:	mov	x0, x1
    ed2c:	mov	x1, x8
    ed30:	bl	d788 <_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev@@Base+0x38>
    ed34:	ldp	x29, x30, [sp], #16
    ed38:	ret
    ed3c:	ldr	w0, [x0]
    ed40:	ret
    ed44:	ret
    ed48:	stp	x29, x30, [sp, #-16]!
    ed4c:	mov	x29, sp
    ed50:	mov	w1, w1
    ed54:	bl	11f10 <gcc_cp_fe_context@@Base+0x3edc>
    ed58:	ldp	x29, x30, [sp], #16
    ed5c:	ret
    ed60:	stp	x29, x30, [sp, #-32]!
    ed64:	stp	x20, x19, [sp, #16]
    ed68:	mov	x29, sp
    ed6c:	mov	x20, x2
    ed70:	mov	x19, x0
    ed74:	bl	eb98 <gcc_cp_fe_context@@Base+0xb64>
    ed78:	adrp	x8, 2e000 <xexit@@Base+0x14c60>
    ed7c:	add	x8, x8, #0x8f8
    ed80:	mov	x0, x19
    ed84:	str	x8, [x0], #16
    ed88:	mov	x1, x20
    ed8c:	bl	9780 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_@plt>
    ed90:	ldp	x20, x19, [sp, #16]
    ed94:	ldp	x29, x30, [sp], #32
    ed98:	ret
    ed9c:	mov	x20, x0
    eda0:	mov	x0, x19
    eda4:	bl	eba8 <gcc_cp_fe_context@@Base+0xb74>
    eda8:	mov	x0, x20
    edac:	bl	9a00 <_Unwind_Resume@plt>
    edb0:	stp	x29, x30, [sp, #-32]!
    edb4:	stp	x20, x19, [sp, #16]
    edb8:	mov	x29, sp
    edbc:	mov	x20, x2
    edc0:	mov	x19, x0
    edc4:	bl	eb98 <gcc_cp_fe_context@@Base+0xb64>
    edc8:	adrp	x8, 2e000 <xexit@@Base+0x14c60>
    edcc:	add	x8, x8, #0x938
    edd0:	mov	x0, x19
    edd4:	str	x8, [x0], #16
    edd8:	mov	x1, x20
    eddc:	bl	9780 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_@plt>
    ede0:	ldp	x20, x19, [sp, #16]
    ede4:	ldp	x29, x30, [sp], #32
    ede8:	ret
    edec:	mov	x20, x0
    edf0:	mov	x0, x19
    edf4:	bl	eba8 <gcc_cp_fe_context@@Base+0xb74>
    edf8:	mov	x0, x20
    edfc:	bl	9a00 <_Unwind_Resume@plt>
    ee00:	sub	sp, sp, #0x20
    ee04:	stp	x29, x30, [sp, #16]
    ee08:	add	x29, sp, #0x10
    ee0c:	adrp	x8, 2e000 <xexit@@Base+0x14c60>
    ee10:	ldr	x0, [x0, #16]
    ee14:	ldr	x8, [x8, #3456]
    ee18:	mov	x3, x1
    ee1c:	sub	x2, x29, #0x4
    ee20:	ldr	x8, [x8]
    ee24:	mov	x1, x8
    ee28:	bl	10114 <gcc_cp_fe_context@@Base+0x20e0>
    ee2c:	ldur	w8, [x29, #-4]
    ee30:	ldp	x29, x30, [sp, #16]
    ee34:	cmp	w0, #0x0
    ee38:	csel	w0, wzr, w8, eq  // eq = none
    ee3c:	add	sp, sp, #0x20
    ee40:	ret
    ee44:	sub	sp, sp, #0x20
    ee48:	stp	x29, x30, [sp, #16]
    ee4c:	add	x29, sp, #0x10
    ee50:	adrp	x8, 2e000 <xexit@@Base+0x14c60>
    ee54:	ldr	x0, [x0, #16]
    ee58:	ldr	x8, [x8, #3584]
    ee5c:	mov	x3, x1
    ee60:	sub	x2, x29, #0x4
    ee64:	ldr	x8, [x8]
    ee68:	mov	x1, x8
    ee6c:	bl	cf9c <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xfdc>
    ee70:	ldur	w8, [x29, #-4]
    ee74:	ldp	x29, x30, [sp, #16]
    ee78:	cmp	w0, #0x0
    ee7c:	csel	w0, wzr, w8, eq  // eq = none
    ee80:	add	sp, sp, #0x20
    ee84:	ret
    ee88:	sub	sp, sp, #0x20
    ee8c:	stp	x29, x30, [sp, #16]
    ee90:	add	x29, sp, #0x10
    ee94:	adrp	x8, 2e000 <xexit@@Base+0x14c60>
    ee98:	ldr	x0, [x0, #16]
    ee9c:	ldr	x8, [x8, #3496]
    eea0:	mov	x3, x1
    eea4:	sub	x2, x29, #0x4
    eea8:	ldr	x8, [x8]
    eeac:	mov	x1, x8
    eeb0:	bl	cf9c <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xfdc>
    eeb4:	ldur	w8, [x29, #-4]
    eeb8:	ldp	x29, x30, [sp, #16]
    eebc:	cmp	w0, #0x0
    eec0:	csel	w0, wzr, w8, eq  // eq = none
    eec4:	add	sp, sp, #0x20
    eec8:	ret
    eecc:	sub	sp, sp, #0x20
    eed0:	stp	x29, x30, [sp, #16]
    eed4:	add	x29, sp, #0x10
    eed8:	adrp	x8, 2e000 <xexit@@Base+0x14c60>
    eedc:	ldr	x0, [x0, #16]
    eee0:	ldr	x8, [x8, #3488]
    eee4:	mov	x4, x2
    eee8:	mov	x3, x1
    eeec:	sub	x2, x29, #0x4
    eef0:	ldr	x8, [x8]
    eef4:	mov	x1, x8
    eef8:	bl	101a0 <gcc_cp_fe_context@@Base+0x216c>
    eefc:	ldur	w8, [x29, #-4]
    ef00:	ldp	x29, x30, [sp, #16]
    ef04:	cmp	w0, #0x0
    ef08:	csel	w0, wzr, w8, eq  // eq = none
    ef0c:	add	sp, sp, #0x20
    ef10:	ret
    ef14:	sub	sp, sp, #0x20
    ef18:	stp	x29, x30, [sp, #16]
    ef1c:	add	x29, sp, #0x10
    ef20:	adrp	x8, 2e000 <xexit@@Base+0x14c60>
    ef24:	ldr	x0, [x0, #16]
    ef28:	ldr	x8, [x8, #3608]
    ef2c:	sub	x2, x29, #0x4
    ef30:	ldr	x1, [x8]
    ef34:	bl	10248 <gcc_cp_fe_context@@Base+0x2214>
    ef38:	ldur	w8, [x29, #-4]
    ef3c:	ldp	x29, x30, [sp, #16]
    ef40:	cmp	w0, #0x0
    ef44:	csel	w0, wzr, w8, eq  // eq = none
    ef48:	add	sp, sp, #0x20
    ef4c:	ret
    ef50:	sub	sp, sp, #0x20
    ef54:	stp	x29, x30, [sp, #16]
    ef58:	add	x29, sp, #0x10
    ef5c:	adrp	x8, 2e000 <xexit@@Base+0x14c60>
    ef60:	ldr	x0, [x0, #16]
    ef64:	ldr	x8, [x8, #4024]
    ef68:	add	x2, sp, #0x8
    ef6c:	ldr	x1, [x8]
    ef70:	bl	ccc0 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xd00>
    ef74:	ldr	x8, [sp, #8]
    ef78:	ldp	x29, x30, [sp, #16]
    ef7c:	cmp	w0, #0x0
    ef80:	csel	x0, xzr, x8, eq  // eq = none
    ef84:	add	sp, sp, #0x20
    ef88:	ret
    ef8c:	sub	sp, sp, #0x20
    ef90:	stp	x29, x30, [sp, #16]
    ef94:	add	x29, sp, #0x10
    ef98:	adrp	x8, 2e000 <xexit@@Base+0x14c60>
    ef9c:	ldr	x0, [x0, #16]
    efa0:	ldr	x8, [x8, #3808]
    efa4:	sub	x2, x29, #0x4
    efa8:	ldr	x1, [x8]
    efac:	bl	10248 <gcc_cp_fe_context@@Base+0x2214>
    efb0:	ldur	w8, [x29, #-4]
    efb4:	ldp	x29, x30, [sp, #16]
    efb8:	cmp	w0, #0x0
    efbc:	csel	w0, wzr, w8, eq  // eq = none
    efc0:	add	sp, sp, #0x20
    efc4:	ret
    efc8:	sub	sp, sp, #0x20
    efcc:	stp	x29, x30, [sp, #16]
    efd0:	add	x29, sp, #0x10
    efd4:	adrp	x8, 2e000 <xexit@@Base+0x14c60>
    efd8:	ldr	x0, [x0, #16]
    efdc:	ldr	x8, [x8, #3880]
    efe0:	mov	x3, x1
    efe4:	sub	x2, x29, #0x4
    efe8:	ldr	x8, [x8]
    efec:	mov	x1, x8
    eff0:	bl	cf9c <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xfdc>
    eff4:	ldur	w8, [x29, #-4]
    eff8:	ldp	x29, x30, [sp, #16]
    effc:	cmp	w0, #0x0
    f000:	csel	w0, wzr, w8, eq  // eq = none
    f004:	add	sp, sp, #0x20
    f008:	ret
    f00c:	sub	sp, sp, #0x20
    f010:	stp	x29, x30, [sp, #16]
    f014:	add	x29, sp, #0x10
    f018:	adrp	x8, 2e000 <xexit@@Base+0x14c60>
    f01c:	ldr	x0, [x0, #16]
    f020:	ldr	x8, [x8, #3728]
    f024:	mov	x4, x2
    f028:	mov	x3, x1
    f02c:	sub	x2, x29, #0x4
    f030:	ldr	x8, [x8]
    f034:	mov	x1, x8
    f038:	bl	102c0 <gcc_cp_fe_context@@Base+0x228c>
    f03c:	ldur	w8, [x29, #-4]
    f040:	ldp	x29, x30, [sp, #16]
    f044:	cmp	w0, #0x0
    f048:	csel	w0, wzr, w8, eq  // eq = none
    f04c:	add	sp, sp, #0x20
    f050:	ret
    f054:	sub	sp, sp, #0x20
    f058:	stp	x29, x30, [sp, #16]
    f05c:	add	x29, sp, #0x10
    f060:	adrp	x8, 2e000 <xexit@@Base+0x14c60>
    f064:	ldr	x0, [x0, #16]
    f068:	ldr	x8, [x8, #3352]
    f06c:	mov	x4, x2
    f070:	mov	w3, w1
    f074:	sub	x2, x29, #0x4
    f078:	ldr	x8, [x8]
    f07c:	mov	x1, x8
    f080:	bl	10368 <gcc_cp_fe_context@@Base+0x2334>
    f084:	ldur	w8, [x29, #-4]
    f088:	ldp	x29, x30, [sp, #16]
    f08c:	cmp	w0, #0x0
    f090:	csel	w0, wzr, w8, eq  // eq = none
    f094:	add	sp, sp, #0x20
    f098:	ret
    f09c:	sub	sp, sp, #0x30
    f0a0:	stp	x29, x30, [sp, #32]
    f0a4:	add	x29, sp, #0x20
    f0a8:	adrp	x10, 2e000 <xexit@@Base+0x14c60>
    f0ac:	ldr	x0, [x0, #16]
    f0b0:	ldr	x10, [x10, #3448]
    f0b4:	mov	x8, x5
    f0b8:	mov	x9, x4
    f0bc:	mov	x5, x3
    f0c0:	ldr	x10, [x10]
    f0c4:	mov	w4, w2
    f0c8:	mov	x3, x1
    f0cc:	str	w7, [sp, #8]
    f0d0:	sub	x2, x29, #0x8
    f0d4:	str	x6, [sp]
    f0d8:	mov	x1, x10
    f0dc:	mov	x6, x9
    f0e0:	mov	x7, x8
    f0e4:	bl	10428 <gcc_cp_fe_context@@Base+0x23f4>
    f0e8:	ldur	x8, [x29, #-8]
    f0ec:	ldp	x29, x30, [sp, #32]
    f0f0:	cmp	w0, #0x0
    f0f4:	csel	x0, xzr, x8, eq  // eq = none
    f0f8:	add	sp, sp, #0x30
    f0fc:	ret
    f100:	sub	sp, sp, #0x20
    f104:	stp	x29, x30, [sp, #16]
    f108:	add	x29, sp, #0x10
    f10c:	adrp	x8, 2e000 <xexit@@Base+0x14c60>
    f110:	ldr	x0, [x0, #16]
    f114:	ldr	x8, [x8, #3736]
    f118:	mov	x5, x3
    f11c:	mov	x4, x2
    f120:	mov	x3, x1
    f124:	ldr	x8, [x8]
    f128:	add	x2, sp, #0x8
    f12c:	mov	x1, x8
    f130:	bl	10534 <gcc_cp_fe_context@@Base+0x2500>
    f134:	ldr	x8, [sp, #8]
    f138:	ldp	x29, x30, [sp, #16]
    f13c:	cmp	w0, #0x0
    f140:	csel	x0, xzr, x8, eq  // eq = none
    f144:	add	sp, sp, #0x20
    f148:	ret
    f14c:	sub	sp, sp, #0x20
    f150:	stp	x29, x30, [sp, #16]
    f154:	add	x29, sp, #0x10
    f158:	adrp	x8, 2e000 <xexit@@Base+0x14c60>
    f15c:	ldr	x0, [x0, #16]
    f160:	ldr	x8, [x8, #3208]
    f164:	mov	x3, x1
    f168:	add	x2, sp, #0x8
    f16c:	ldr	x8, [x8]
    f170:	mov	x1, x8
    f174:	bl	cc34 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xc74>
    f178:	ldr	x8, [sp, #8]
    f17c:	ldp	x29, x30, [sp, #16]
    f180:	cmp	w0, #0x0
    f184:	csel	x0, xzr, x8, eq  // eq = none
    f188:	add	sp, sp, #0x20
    f18c:	ret
    f190:	sub	sp, sp, #0x20
    f194:	stp	x29, x30, [sp, #16]
    f198:	add	x29, sp, #0x10
    f19c:	adrp	x8, 2e000 <xexit@@Base+0x14c60>
    f1a0:	ldr	x0, [x0, #16]
    f1a4:	ldr	x8, [x8, #3688]
    f1a8:	mov	x3, x1
    f1ac:	add	x2, sp, #0x8
    f1b0:	ldr	x8, [x8]
    f1b4:	mov	x1, x8
    f1b8:	bl	cc34 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xc74>
    f1bc:	ldr	x8, [sp, #8]
    f1c0:	ldp	x29, x30, [sp, #16]
    f1c4:	cmp	w0, #0x0
    f1c8:	csel	x0, xzr, x8, eq  // eq = none
    f1cc:	add	sp, sp, #0x20
    f1d0:	ret
    f1d4:	sub	sp, sp, #0x20
    f1d8:	stp	x29, x30, [sp, #16]
    f1dc:	add	x29, sp, #0x10
    f1e0:	adrp	x8, 2e000 <xexit@@Base+0x14c60>
    f1e4:	ldr	x0, [x0, #16]
    f1e8:	ldr	x8, [x8, #3864]
    f1ec:	mov	x4, x2
    f1f0:	mov	x3, x1
    f1f4:	sub	x2, x29, #0x4
    f1f8:	ldr	x8, [x8]
    f1fc:	mov	x1, x8
    f200:	bl	101a0 <gcc_cp_fe_context@@Base+0x216c>
    f204:	ldur	w8, [x29, #-4]
    f208:	ldp	x29, x30, [sp, #16]
    f20c:	cmp	w0, #0x0
    f210:	csel	w0, wzr, w8, eq  // eq = none
    f214:	add	sp, sp, #0x20
    f218:	ret
    f21c:	sub	sp, sp, #0x20
    f220:	stp	x29, x30, [sp, #16]
    f224:	add	x29, sp, #0x10
    f228:	adrp	x8, 2e000 <xexit@@Base+0x14c60>
    f22c:	ldr	x0, [x0, #16]
    f230:	ldr	x8, [x8, #3912]
    f234:	mov	x3, x1
    f238:	add	x2, sp, #0x8
    f23c:	ldr	x8, [x8]
    f240:	mov	x1, x8
    f244:	bl	cc34 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xc74>
    f248:	ldr	x8, [sp, #8]
    f24c:	ldp	x29, x30, [sp, #16]
    f250:	cmp	w0, #0x0
    f254:	csel	x0, xzr, x8, eq  // eq = none
    f258:	add	sp, sp, #0x20
    f25c:	ret
    f260:	sub	sp, sp, #0x20
    f264:	stp	x29, x30, [sp, #16]
    f268:	add	x29, sp, #0x10
    f26c:	adrp	x8, 2e000 <xexit@@Base+0x14c60>
    f270:	ldr	x0, [x0, #16]
    f274:	ldr	x8, [x8, #3328]
    f278:	mov	w4, w2
    f27c:	mov	x3, x1
    f280:	add	x2, sp, #0x8
    f284:	ldr	x8, [x8]
    f288:	mov	x1, x8
    f28c:	bl	105f0 <gcc_cp_fe_context@@Base+0x25bc>
    f290:	ldr	x8, [sp, #8]
    f294:	ldp	x29, x30, [sp, #16]
    f298:	cmp	w0, #0x0
    f29c:	csel	x0, xzr, x8, eq  // eq = none
    f2a0:	add	sp, sp, #0x20
    f2a4:	ret
    f2a8:	sub	sp, sp, #0x20
    f2ac:	stp	x29, x30, [sp, #16]
    f2b0:	add	x29, sp, #0x10
    f2b4:	adrp	x8, 2e000 <xexit@@Base+0x14c60>
    f2b8:	ldr	x0, [x0, #16]
    f2bc:	ldr	x8, [x8, #4016]
    f2c0:	mov	x4, x2
    f2c4:	mov	x3, x1
    f2c8:	add	x2, sp, #0x8
    f2cc:	ldr	x8, [x8]
    f2d0:	mov	x1, x8
    f2d4:	bl	106b0 <gcc_cp_fe_context@@Base+0x267c>
    f2d8:	ldr	x8, [sp, #8]
    f2dc:	ldp	x29, x30, [sp, #16]
    f2e0:	cmp	w0, #0x0
    f2e4:	csel	x0, xzr, x8, eq  // eq = none
    f2e8:	add	sp, sp, #0x20
    f2ec:	ret
    f2f0:	sub	sp, sp, #0x20
    f2f4:	stp	x29, x30, [sp, #16]
    f2f8:	add	x29, sp, #0x10
    f2fc:	adrp	x8, 2e000 <xexit@@Base+0x14c60>
    f300:	ldr	x0, [x0, #16]
    f304:	ldr	x8, [x8, #3848]
    f308:	sub	x2, x29, #0x4
    f30c:	ldr	x1, [x8]
    f310:	bl	10248 <gcc_cp_fe_context@@Base+0x2214>
    f314:	ldur	w8, [x29, #-4]
    f318:	ldp	x29, x30, [sp, #16]
    f31c:	cmp	w0, #0x0
    f320:	csel	w0, wzr, w8, eq  // eq = none
    f324:	add	sp, sp, #0x20
    f328:	ret
    f32c:	sub	sp, sp, #0x20
    f330:	stp	x29, x30, [sp, #16]
    f334:	add	x29, sp, #0x10
    f338:	adrp	x8, 2e000 <xexit@@Base+0x14c60>
    f33c:	ldr	x0, [x0, #16]
    f340:	ldr	x8, [x8, #3616]
    f344:	mov	w7, w5
    f348:	mov	x6, x4
    f34c:	mov	x5, x3
    f350:	ldr	x8, [x8]
    f354:	mov	w4, w2
    f358:	mov	x3, x1
    f35c:	add	x2, sp, #0x8
    f360:	mov	x1, x8
    f364:	bl	10758 <gcc_cp_fe_context@@Base+0x2724>
    f368:	ldr	x8, [sp, #8]
    f36c:	ldp	x29, x30, [sp, #16]
    f370:	cmp	w0, #0x0
    f374:	csel	x0, xzr, x8, eq  // eq = none
    f378:	add	sp, sp, #0x20
    f37c:	ret
    f380:	sub	sp, sp, #0x20
    f384:	stp	x29, x30, [sp, #16]
    f388:	add	x29, sp, #0x10
    f38c:	adrp	x8, 2e000 <xexit@@Base+0x14c60>
    f390:	ldr	x0, [x0, #16]
    f394:	ldr	x8, [x8, #3472]
    f398:	mov	w7, w5
    f39c:	mov	x6, x4
    f3a0:	mov	x5, x3
    f3a4:	ldr	x8, [x8]
    f3a8:	mov	w4, w2
    f3ac:	mov	x3, x1
    f3b0:	add	x2, sp, #0x8
    f3b4:	mov	x1, x8
    f3b8:	bl	10758 <gcc_cp_fe_context@@Base+0x2724>
    f3bc:	ldr	x8, [sp, #8]
    f3c0:	ldp	x29, x30, [sp, #16]
    f3c4:	cmp	w0, #0x0
    f3c8:	csel	x0, xzr, x8, eq  // eq = none
    f3cc:	add	sp, sp, #0x20
    f3d0:	ret
    f3d4:	sub	sp, sp, #0x20
    f3d8:	stp	x29, x30, [sp, #16]
    f3dc:	add	x29, sp, #0x10
    f3e0:	adrp	x8, 2e000 <xexit@@Base+0x14c60>
    f3e4:	ldr	x0, [x0, #16]
    f3e8:	ldr	x8, [x8, #3256]
    f3ec:	mov	w7, w5
    f3f0:	mov	x6, x4
    f3f4:	mov	x5, x3
    f3f8:	ldr	x8, [x8]
    f3fc:	mov	x4, x2
    f400:	mov	x3, x1
    f404:	add	x2, sp, #0x8
    f408:	mov	x1, x8
    f40c:	bl	10844 <gcc_cp_fe_context@@Base+0x2810>
    f410:	ldr	x8, [sp, #8]
    f414:	ldp	x29, x30, [sp, #16]
    f418:	cmp	w0, #0x0
    f41c:	csel	x0, xzr, x8, eq  // eq = none
    f420:	add	sp, sp, #0x20
    f424:	ret
    f428:	sub	sp, sp, #0x20
    f42c:	stp	x29, x30, [sp, #16]
    f430:	add	x29, sp, #0x10
    f434:	adrp	x8, 2e000 <xexit@@Base+0x14c60>
    f438:	ldr	x0, [x0, #16]
    f43c:	ldr	x8, [x8, #3376]
    f440:	mov	x5, x3
    f444:	mov	x4, x2
    f448:	mov	x3, x1
    f44c:	ldr	x8, [x8]
    f450:	add	x2, sp, #0x8
    f454:	mov	x1, x8
    f458:	bl	10930 <gcc_cp_fe_context@@Base+0x28fc>
    f45c:	ldr	x8, [sp, #8]
    f460:	ldp	x29, x30, [sp, #16]
    f464:	cmp	w0, #0x0
    f468:	csel	x0, xzr, x8, eq  // eq = none
    f46c:	add	sp, sp, #0x20
    f470:	ret
    f474:	sub	sp, sp, #0x20
    f478:	stp	x29, x30, [sp, #16]
    f47c:	add	x29, sp, #0x10
    f480:	adrp	x8, 2e000 <xexit@@Base+0x14c60>
    f484:	ldr	x0, [x0, #16]
    f488:	ldr	x8, [x8, #3656]
    f48c:	mov	x4, x2
    f490:	mov	x3, x1
    f494:	add	x2, sp, #0x8
    f498:	ldr	x8, [x8]
    f49c:	mov	x1, x8
    f4a0:	bl	d2c0 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0x1300>
    f4a4:	ldr	x8, [sp, #8]
    f4a8:	ldp	x29, x30, [sp, #16]
    f4ac:	cmp	w0, #0x0
    f4b0:	csel	x0, xzr, x8, eq  // eq = none
    f4b4:	add	sp, sp, #0x20
    f4b8:	ret
    f4bc:	sub	sp, sp, #0x20
    f4c0:	stp	x29, x30, [sp, #16]
    f4c4:	add	x29, sp, #0x10
    f4c8:	adrp	x8, 2e000 <xexit@@Base+0x14c60>
    f4cc:	ldr	x0, [x0, #16]
    f4d0:	ldr	x8, [x8, #3504]
    f4d4:	mov	x4, x2
    f4d8:	mov	x3, x1
    f4dc:	add	x2, sp, #0x8
    f4e0:	ldr	x8, [x8]
    f4e4:	mov	x1, x8
    f4e8:	bl	109ec <gcc_cp_fe_context@@Base+0x29b8>
    f4ec:	ldr	x8, [sp, #8]
    f4f0:	ldp	x29, x30, [sp, #16]
    f4f4:	cmp	w0, #0x0
    f4f8:	csel	x0, xzr, x8, eq  // eq = none
    f4fc:	add	sp, sp, #0x20
    f500:	ret
    f504:	sub	sp, sp, #0x20
    f508:	stp	x29, x30, [sp, #16]
    f50c:	add	x29, sp, #0x10
    f510:	adrp	x8, 2e000 <xexit@@Base+0x14c60>
    f514:	ldr	x0, [x0, #16]
    f518:	ldr	x8, [x8, #3784]
    f51c:	mov	x7, x5
    f520:	mov	x6, x4
    f524:	mov	x5, x3
    f528:	ldr	x8, [x8]
    f52c:	mov	w4, w2
    f530:	mov	x3, x1
    f534:	add	x2, sp, #0x8
    f538:	mov	x1, x8
    f53c:	bl	10a94 <gcc_cp_fe_context@@Base+0x2a60>
    f540:	ldr	x8, [sp, #8]
    f544:	ldp	x29, x30, [sp, #16]
    f548:	cmp	w0, #0x0
    f54c:	csel	x0, xzr, x8, eq  // eq = none
    f550:	add	sp, sp, #0x20
    f554:	ret
    f558:	sub	sp, sp, #0x20
    f55c:	stp	x29, x30, [sp, #16]
    f560:	add	x29, sp, #0x10
    f564:	adrp	x8, 2e000 <xexit@@Base+0x14c60>
    f568:	ldr	x0, [x0, #16]
    f56c:	ldr	x8, [x8, #3824]
    f570:	mov	x4, x2
    f574:	mov	x3, x1
    f578:	add	x2, sp, #0x8
    f57c:	ldr	x8, [x8]
    f580:	mov	x1, x8
    f584:	bl	10b80 <gcc_cp_fe_context@@Base+0x2b4c>
    f588:	ldr	x8, [sp, #8]
    f58c:	ldp	x29, x30, [sp, #16]
    f590:	cmp	w0, #0x0
    f594:	csel	x0, xzr, x8, eq  // eq = none
    f598:	add	sp, sp, #0x20
    f59c:	ret
    f5a0:	sub	sp, sp, #0x20
    f5a4:	stp	x29, x30, [sp, #16]
    f5a8:	add	x29, sp, #0x10
    f5ac:	adrp	x8, 2e000 <xexit@@Base+0x14c60>
    f5b0:	ldr	x0, [x0, #16]
    f5b4:	ldr	x8, [x8, #3432]
    f5b8:	mov	w4, w2
    f5bc:	mov	x3, x1
    f5c0:	add	x2, sp, #0x8
    f5c4:	ldr	x8, [x8]
    f5c8:	mov	x1, x8
    f5cc:	bl	d218 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0x1258>
    f5d0:	ldr	x8, [sp, #8]
    f5d4:	ldp	x29, x30, [sp, #16]
    f5d8:	cmp	w0, #0x0
    f5dc:	csel	x0, xzr, x8, eq  // eq = none
    f5e0:	add	sp, sp, #0x20
    f5e4:	ret
    f5e8:	sub	sp, sp, #0x20
    f5ec:	stp	x29, x30, [sp, #16]
    f5f0:	add	x29, sp, #0x10
    f5f4:	adrp	x8, 2e000 <xexit@@Base+0x14c60>
    f5f8:	ldr	x0, [x0, #16]
    f5fc:	ldr	x8, [x8, #3776]
    f600:	mov	x4, x2
    f604:	mov	x3, x1
    f608:	add	x2, sp, #0x8
    f60c:	ldr	x8, [x8]
    f610:	mov	x1, x8
    f614:	bl	10c28 <gcc_cp_fe_context@@Base+0x2bf4>
    f618:	ldr	x8, [sp, #8]
    f61c:	ldp	x29, x30, [sp, #16]
    f620:	cmp	w0, #0x0
    f624:	csel	x0, xzr, x8, eq  // eq = none
    f628:	add	sp, sp, #0x20
    f62c:	ret
    f630:	sub	sp, sp, #0x20
    f634:	stp	x29, x30, [sp, #16]
    f638:	add	x29, sp, #0x10
    f63c:	adrp	x8, 2e000 <xexit@@Base+0x14c60>
    f640:	ldr	x0, [x0, #16]
    f644:	ldr	x8, [x8, #3416]
    f648:	mov	x5, x3
    f64c:	mov	x4, x2
    f650:	mov	x3, x1
    f654:	ldr	x8, [x8]
    f658:	add	x2, sp, #0x8
    f65c:	mov	x1, x8
    f660:	bl	10534 <gcc_cp_fe_context@@Base+0x2500>
    f664:	ldr	x8, [sp, #8]
    f668:	ldp	x29, x30, [sp, #16]
    f66c:	cmp	w0, #0x0
    f670:	csel	x0, xzr, x8, eq  // eq = none
    f674:	add	sp, sp, #0x20
    f678:	ret
    f67c:	sub	sp, sp, #0x20
    f680:	stp	x29, x30, [sp, #16]
    f684:	add	x29, sp, #0x10
    f688:	adrp	x8, 2e000 <xexit@@Base+0x14c60>
    f68c:	ldr	x0, [x0, #16]
    f690:	ldr	x8, [x8, #3768]
    f694:	mov	x6, x4
    f698:	mov	x5, x3
    f69c:	mov	x4, x2
    f6a0:	ldr	x8, [x8]
    f6a4:	mov	x3, x1
    f6a8:	add	x2, sp, #0x8
    f6ac:	mov	x1, x8
    f6b0:	bl	10cd0 <gcc_cp_fe_context@@Base+0x2c9c>
    f6b4:	ldr	x8, [sp, #8]
    f6b8:	ldp	x29, x30, [sp, #16]
    f6bc:	cmp	w0, #0x0
    f6c0:	csel	x0, xzr, x8, eq  // eq = none
    f6c4:	add	sp, sp, #0x20
    f6c8:	ret
    f6cc:	sub	sp, sp, #0x20
    f6d0:	stp	x29, x30, [sp, #16]
    f6d4:	add	x29, sp, #0x10
    f6d8:	adrp	x8, 2e000 <xexit@@Base+0x14c60>
    f6dc:	ldr	x0, [x0, #16]
    f6e0:	ldr	x8, [x8, #3480]
    f6e4:	mov	x4, x2
    f6e8:	mov	x3, x1
    f6ec:	add	x2, sp, #0x8
    f6f0:	ldr	x8, [x8]
    f6f4:	mov	x1, x8
    f6f8:	bl	10c28 <gcc_cp_fe_context@@Base+0x2bf4>
    f6fc:	ldr	x8, [sp, #8]
    f700:	ldp	x29, x30, [sp, #16]
    f704:	cmp	w0, #0x0
    f708:	csel	x0, xzr, x8, eq  // eq = none
    f70c:	add	sp, sp, #0x20
    f710:	ret
    f714:	sub	sp, sp, #0x20
    f718:	stp	x29, x30, [sp, #16]
    f71c:	add	x29, sp, #0x10
    f720:	adrp	x8, 2e000 <xexit@@Base+0x14c60>
    f724:	ldr	x0, [x0, #16]
    f728:	ldr	x8, [x8, #3336]
    f72c:	mov	x5, x3
    f730:	mov	x4, x2
    f734:	mov	x3, x1
    f738:	ldr	x8, [x8]
    f73c:	add	x2, sp, #0x8
    f740:	mov	x1, x8
    f744:	bl	10534 <gcc_cp_fe_context@@Base+0x2500>
    f748:	ldr	x8, [sp, #8]
    f74c:	ldp	x29, x30, [sp, #16]
    f750:	cmp	w0, #0x0
    f754:	csel	x0, xzr, x8, eq  // eq = none
    f758:	add	sp, sp, #0x20
    f75c:	ret
    f760:	sub	sp, sp, #0x20
    f764:	stp	x29, x30, [sp, #16]
    f768:	add	x29, sp, #0x10
    f76c:	adrp	x8, 2e000 <xexit@@Base+0x14c60>
    f770:	ldr	x0, [x0, #16]
    f774:	ldr	x8, [x8, #3744]
    f778:	mov	x5, x3
    f77c:	mov	x4, x2
    f780:	mov	x3, x1
    f784:	ldr	x8, [x8]
    f788:	add	x2, sp, #0x8
    f78c:	mov	x1, x8
    f790:	bl	10da8 <gcc_cp_fe_context@@Base+0x2d74>
    f794:	ldr	x8, [sp, #8]
    f798:	ldp	x29, x30, [sp, #16]
    f79c:	cmp	w0, #0x0
    f7a0:	csel	x0, xzr, x8, eq  // eq = none
    f7a4:	add	sp, sp, #0x20
    f7a8:	ret
    f7ac:	sub	sp, sp, #0x20
    f7b0:	stp	x29, x30, [sp, #16]
    f7b4:	add	x29, sp, #0x10
    f7b8:	adrp	x8, 2e000 <xexit@@Base+0x14c60>
    f7bc:	ldr	x0, [x0, #16]
    f7c0:	ldr	x8, [x8, #3680]
    f7c4:	mov	x6, x4
    f7c8:	mov	x5, x3
    f7cc:	mov	x4, x2
    f7d0:	ldr	x8, [x8]
    f7d4:	mov	x3, x1
    f7d8:	add	x2, sp, #0x8
    f7dc:	mov	x1, x8
    f7e0:	bl	10e64 <gcc_cp_fe_context@@Base+0x2e30>
    f7e4:	ldr	x8, [sp, #8]
    f7e8:	ldp	x29, x30, [sp, #16]
    f7ec:	cmp	w0, #0x0
    f7f0:	csel	x0, xzr, x8, eq  // eq = none
    f7f4:	add	sp, sp, #0x20
    f7f8:	ret
    f7fc:	sub	sp, sp, #0x20
    f800:	stp	x29, x30, [sp, #16]
    f804:	add	x29, sp, #0x10
    f808:	adrp	x8, 2e000 <xexit@@Base+0x14c60>
    f80c:	ldr	x0, [x0, #16]
    f810:	ldr	x8, [x8, #3552]
    f814:	mov	x5, x3
    f818:	mov	w4, w2
    f81c:	mov	x3, x1
    f820:	ldr	x8, [x8]
    f824:	add	x2, sp, #0x8
    f828:	mov	x1, x8
    f82c:	bl	10f3c <gcc_cp_fe_context@@Base+0x2f08>
    f830:	ldr	x8, [sp, #8]
    f834:	ldp	x29, x30, [sp, #16]
    f838:	cmp	w0, #0x0
    f83c:	csel	x0, xzr, x8, eq  // eq = none
    f840:	add	sp, sp, #0x20
    f844:	ret
    f848:	sub	sp, sp, #0x20
    f84c:	stp	x29, x30, [sp, #16]
    f850:	add	x29, sp, #0x10
    f854:	adrp	x8, 2e000 <xexit@@Base+0x14c60>
    f858:	ldr	x0, [x0, #16]
    f85c:	ldr	x8, [x8, #3704]
    f860:	mov	x3, x1
    f864:	add	x2, sp, #0x8
    f868:	ldr	x8, [x8]
    f86c:	mov	x1, x8
    f870:	bl	cc34 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xc74>
    f874:	ldr	x8, [sp, #8]
    f878:	ldp	x29, x30, [sp, #16]
    f87c:	cmp	w0, #0x0
    f880:	csel	x0, xzr, x8, eq  // eq = none
    f884:	add	sp, sp, #0x20
    f888:	ret
    f88c:	sub	sp, sp, #0x20
    f890:	stp	x29, x30, [sp, #16]
    f894:	add	x29, sp, #0x10
    f898:	adrp	x8, 2e000 <xexit@@Base+0x14c60>
    f89c:	ldr	x0, [x0, #16]
    f8a0:	ldr	x8, [x8, #3592]
    f8a4:	mov	w7, w5
    f8a8:	mov	x6, x4
    f8ac:	mov	x5, x3
    f8b0:	ldr	x8, [x8]
    f8b4:	mov	x4, x2
    f8b8:	mov	x3, x1
    f8bc:	add	x2, sp, #0x8
    f8c0:	mov	x1, x8
    f8c4:	bl	10ff8 <gcc_cp_fe_context@@Base+0x2fc4>
    f8c8:	ldr	x8, [sp, #8]
    f8cc:	ldp	x29, x30, [sp, #16]
    f8d0:	cmp	w0, #0x0
    f8d4:	csel	x0, xzr, x8, eq  // eq = none
    f8d8:	add	sp, sp, #0x20
    f8dc:	ret
    f8e0:	sub	sp, sp, #0x20
    f8e4:	stp	x29, x30, [sp, #16]
    f8e8:	add	x29, sp, #0x10
    f8ec:	adrp	x8, 2e000 <xexit@@Base+0x14c60>
    f8f0:	ldr	x0, [x0, #16]
    f8f4:	ldr	x8, [x8, #3720]
    f8f8:	mov	w6, w4
    f8fc:	mov	x5, x3
    f900:	mov	x4, x2
    f904:	ldr	x8, [x8]
    f908:	mov	x3, x1
    f90c:	add	x2, sp, #0x8
    f910:	mov	x1, x8
    f914:	bl	110e4 <gcc_cp_fe_context@@Base+0x30b0>
    f918:	ldr	x8, [sp, #8]
    f91c:	ldp	x29, x30, [sp, #16]
    f920:	cmp	w0, #0x0
    f924:	csel	x0, xzr, x8, eq  // eq = none
    f928:	add	sp, sp, #0x20
    f92c:	ret
    f930:	sub	sp, sp, #0x20
    f934:	stp	x29, x30, [sp, #16]
    f938:	add	x29, sp, #0x10
    f93c:	adrp	x8, 2e000 <xexit@@Base+0x14c60>
    f940:	ldr	x0, [x0, #16]
    f944:	ldr	x8, [x8, #3760]
    f948:	mov	w6, w4
    f94c:	mov	x5, x3
    f950:	mov	x4, x2
    f954:	ldr	x8, [x8]
    f958:	mov	x3, x1
    f95c:	add	x2, sp, #0x8
    f960:	mov	x1, x8
    f964:	bl	111bc <gcc_cp_fe_context@@Base+0x3188>
    f968:	ldr	x8, [sp, #8]
    f96c:	ldp	x29, x30, [sp, #16]
    f970:	cmp	w0, #0x0
    f974:	csel	x0, xzr, x8, eq  // eq = none
    f978:	add	sp, sp, #0x20
    f97c:	ret
    f980:	sub	sp, sp, #0x20
    f984:	stp	x29, x30, [sp, #16]
    f988:	add	x29, sp, #0x10
    f98c:	adrp	x8, 2e000 <xexit@@Base+0x14c60>
    f990:	ldr	x0, [x0, #16]
    f994:	ldr	x8, [x8, #3368]
    f998:	mov	w7, w5
    f99c:	mov	x6, x4
    f9a0:	mov	w5, w3
    f9a4:	ldr	x8, [x8]
    f9a8:	mov	x4, x2
    f9ac:	mov	w3, w1
    f9b0:	add	x2, sp, #0x8
    f9b4:	mov	x1, x8
    f9b8:	bl	11294 <gcc_cp_fe_context@@Base+0x3260>
    f9bc:	ldr	x8, [sp, #8]
    f9c0:	ldp	x29, x30, [sp, #16]
    f9c4:	cmp	w0, #0x0
    f9c8:	csel	x0, xzr, x8, eq  // eq = none
    f9cc:	add	sp, sp, #0x20
    f9d0:	ret
    f9d4:	sub	sp, sp, #0x20
    f9d8:	stp	x29, x30, [sp, #16]
    f9dc:	add	x29, sp, #0x10
    f9e0:	adrp	x8, 2e000 <xexit@@Base+0x14c60>
    f9e4:	ldr	x0, [x0, #16]
    f9e8:	ldr	x8, [x8, #3536]
    f9ec:	mov	x7, x5
    f9f0:	mov	x6, x4
    f9f4:	mov	w5, w3
    f9f8:	ldr	x8, [x8]
    f9fc:	mov	x4, x2
    fa00:	mov	x3, x1
    fa04:	add	x2, sp, #0x8
    fa08:	mov	x1, x8
    fa0c:	bl	11380 <gcc_cp_fe_context@@Base+0x334c>
    fa10:	ldr	x8, [sp, #8]
    fa14:	ldp	x29, x30, [sp, #16]
    fa18:	cmp	w0, #0x0
    fa1c:	csel	x0, xzr, x8, eq  // eq = none
    fa20:	add	sp, sp, #0x20
    fa24:	ret
    fa28:	sub	sp, sp, #0x20
    fa2c:	stp	x29, x30, [sp, #16]
    fa30:	add	x29, sp, #0x10
    fa34:	adrp	x8, 2e000 <xexit@@Base+0x14c60>
    fa38:	ldr	x0, [x0, #16]
    fa3c:	ldr	x8, [x8, #3888]
    fa40:	mov	x3, x1
    fa44:	sub	x2, x29, #0x4
    fa48:	ldr	x8, [x8]
    fa4c:	mov	x1, x8
    fa50:	bl	1146c <gcc_cp_fe_context@@Base+0x3438>
    fa54:	ldur	w8, [x29, #-4]
    fa58:	ldp	x29, x30, [sp, #16]
    fa5c:	cmp	w0, #0x0
    fa60:	csel	w0, wzr, w8, eq  // eq = none
    fa64:	add	sp, sp, #0x20
    fa68:	ret
    fa6c:	sub	sp, sp, #0x20
    fa70:	stp	x29, x30, [sp, #16]
    fa74:	add	x29, sp, #0x10
    fa78:	adrp	x8, 2e000 <xexit@@Base+0x14c60>
    fa7c:	ldr	x0, [x0, #16]
    fa80:	ldr	x8, [x8, #3240]
    fa84:	mov	w7, w5
    fa88:	mov	x6, x4
    fa8c:	mov	w5, w3
    fa90:	ldr	x8, [x8]
    fa94:	mov	x4, x2
    fa98:	mov	x3, x1
    fa9c:	add	x2, sp, #0x8
    faa0:	mov	x1, x8
    faa4:	bl	114f8 <gcc_cp_fe_context@@Base+0x34c4>
    faa8:	ldr	x8, [sp, #8]
    faac:	ldp	x29, x30, [sp, #16]
    fab0:	cmp	w0, #0x0
    fab4:	csel	x0, xzr, x8, eq  // eq = none
    fab8:	add	sp, sp, #0x20
    fabc:	ret
    fac0:	sub	sp, sp, #0x20
    fac4:	stp	x29, x30, [sp, #16]
    fac8:	add	x29, sp, #0x10
    facc:	adrp	x8, 2e000 <xexit@@Base+0x14c60>
    fad0:	ldr	x0, [x0, #16]
    fad4:	ldr	x8, [x8, #3408]
    fad8:	mov	x5, x3
    fadc:	mov	x4, x2
    fae0:	mov	x3, x1
    fae4:	ldr	x8, [x8]
    fae8:	add	x2, sp, #0x8
    faec:	mov	x1, x8
    faf0:	bl	115e4 <gcc_cp_fe_context@@Base+0x35b0>
    faf4:	ldr	x8, [sp, #8]
    faf8:	ldp	x29, x30, [sp, #16]
    fafc:	cmp	w0, #0x0
    fb00:	csel	x0, xzr, x8, eq  // eq = none
    fb04:	add	sp, sp, #0x20
    fb08:	ret
    fb0c:	sub	sp, sp, #0x20
    fb10:	stp	x29, x30, [sp, #16]
    fb14:	add	x29, sp, #0x10
    fb18:	adrp	x8, 2e000 <xexit@@Base+0x14c60>
    fb1c:	ldr	x0, [x0, #16]
    fb20:	ldr	x8, [x8, #3696]
    fb24:	mov	x3, x1
    fb28:	sub	x2, x29, #0x4
    fb2c:	ldr	x8, [x8]
    fb30:	mov	x1, x8
    fb34:	bl	cf9c <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xfdc>
    fb38:	ldur	w8, [x29, #-4]
    fb3c:	ldp	x29, x30, [sp, #16]
    fb40:	cmp	w0, #0x0
    fb44:	csel	w0, wzr, w8, eq  // eq = none
    fb48:	add	sp, sp, #0x20
    fb4c:	ret
    fb50:	sub	sp, sp, #0x20
    fb54:	stp	x29, x30, [sp, #16]
    fb58:	add	x29, sp, #0x10
    fb5c:	adrp	x8, 2e000 <xexit@@Base+0x14c60>
    fb60:	ldr	x0, [x0, #16]
    fb64:	ldr	x8, [x8, #3928]
    fb68:	mov	w5, w3
    fb6c:	mov	x4, x2
    fb70:	mov	x3, x1
    fb74:	ldr	x8, [x8]
    fb78:	add	x2, sp, #0x8
    fb7c:	mov	x1, x8
    fb80:	bl	d028 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0x1068>
    fb84:	ldr	x8, [sp, #8]
    fb88:	ldp	x29, x30, [sp, #16]
    fb8c:	cmp	w0, #0x0
    fb90:	csel	x0, xzr, x8, eq  // eq = none
    fb94:	add	sp, sp, #0x20
    fb98:	ret
    fb9c:	sub	sp, sp, #0x20
    fba0:	stp	x29, x30, [sp, #16]
    fba4:	add	x29, sp, #0x10
    fba8:	adrp	x8, 2e000 <xexit@@Base+0x14c60>
    fbac:	ldr	x0, [x0, #16]
    fbb0:	ldr	x8, [x8, #3296]
    fbb4:	mov	x4, x2
    fbb8:	mov	x3, x1
    fbbc:	add	x2, sp, #0x8
    fbc0:	ldr	x8, [x8]
    fbc4:	mov	x1, x8
    fbc8:	bl	116a0 <gcc_cp_fe_context@@Base+0x366c>
    fbcc:	ldr	x8, [sp, #8]
    fbd0:	ldp	x29, x30, [sp, #16]
    fbd4:	cmp	w0, #0x0
    fbd8:	csel	x0, xzr, x8, eq  // eq = none
    fbdc:	add	sp, sp, #0x20
    fbe0:	ret
    fbe4:	sub	sp, sp, #0x20
    fbe8:	stp	x29, x30, [sp, #16]
    fbec:	add	x29, sp, #0x10
    fbf0:	adrp	x8, 2e000 <xexit@@Base+0x14c60>
    fbf4:	ldr	x0, [x0, #16]
    fbf8:	ldr	x8, [x8, #3632]
    fbfc:	mov	w6, w4
    fc00:	mov	w5, w3
    fc04:	mov	x4, x2
    fc08:	ldr	x8, [x8]
    fc0c:	mov	x3, x1
    fc10:	add	x2, sp, #0x8
    fc14:	mov	x1, x8
    fc18:	bl	11748 <gcc_cp_fe_context@@Base+0x3714>
    fc1c:	ldr	x8, [sp, #8]
    fc20:	ldp	x29, x30, [sp, #16]
    fc24:	cmp	w0, #0x0
    fc28:	csel	x0, xzr, x8, eq  // eq = none
    fc2c:	add	sp, sp, #0x20
    fc30:	ret
    fc34:	sub	sp, sp, #0x20
    fc38:	stp	x29, x30, [sp, #16]
    fc3c:	add	x29, sp, #0x10
    fc40:	adrp	x8, 2e000 <xexit@@Base+0x14c60>
    fc44:	ldr	x0, [x0, #16]
    fc48:	ldr	x8, [x8, #3792]
    fc4c:	mov	w4, w2
    fc50:	mov	x3, x1
    fc54:	add	x2, sp, #0x8
    fc58:	ldr	x8, [x8]
    fc5c:	mov	x1, x8
    fc60:	bl	d218 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0x1258>
    fc64:	ldr	x8, [sp, #8]
    fc68:	ldp	x29, x30, [sp, #16]
    fc6c:	cmp	w0, #0x0
    fc70:	csel	x0, xzr, x8, eq  // eq = none
    fc74:	add	sp, sp, #0x20
    fc78:	ret
    fc7c:	sub	sp, sp, #0x20
    fc80:	stp	x29, x30, [sp, #16]
    fc84:	add	x29, sp, #0x10
    fc88:	adrp	x8, 2e000 <xexit@@Base+0x14c60>
    fc8c:	ldr	x0, [x0, #16]
    fc90:	ldr	x8, [x8, #3560]
    fc94:	mov	x3, x1
    fc98:	add	x2, sp, #0x8
    fc9c:	ldr	x8, [x8]
    fca0:	mov	x1, x8
    fca4:	bl	cc34 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xc74>
    fca8:	ldr	x8, [sp, #8]
    fcac:	ldp	x29, x30, [sp, #16]
    fcb0:	cmp	w0, #0x0
    fcb4:	csel	x0, xzr, x8, eq  // eq = none
    fcb8:	add	sp, sp, #0x20
    fcbc:	ret
    fcc0:	sub	sp, sp, #0x20
    fcc4:	stp	x29, x30, [sp, #16]
    fcc8:	add	x29, sp, #0x10
    fccc:	adrp	x8, 2e000 <xexit@@Base+0x14c60>
    fcd0:	ldr	x0, [x0, #16]
    fcd4:	ldr	x8, [x8, #3288]
    fcd8:	mov	x5, x3
    fcdc:	mov	x4, x2
    fce0:	mov	w3, w1
    fce4:	ldr	x8, [x8]
    fce8:	add	x2, sp, #0x8
    fcec:	mov	x1, x8
    fcf0:	bl	d5a0 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0x15e0>
    fcf4:	ldr	x8, [sp, #8]
    fcf8:	ldp	x29, x30, [sp, #16]
    fcfc:	cmp	w0, #0x0
    fd00:	csel	x0, xzr, x8, eq  // eq = none
    fd04:	add	sp, sp, #0x20
    fd08:	ret
    fd0c:	sub	sp, sp, #0x20
    fd10:	stp	x29, x30, [sp, #16]
    fd14:	add	x29, sp, #0x10
    fd18:	adrp	x8, 2e000 <xexit@@Base+0x14c60>
    fd1c:	ldr	x0, [x0, #16]
    fd20:	ldr	x8, [x8, #4064]
    fd24:	add	x2, sp, #0x8
    fd28:	ldr	x1, [x8]
    fd2c:	bl	ccc0 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xd00>
    fd30:	ldr	x8, [sp, #8]
    fd34:	ldp	x29, x30, [sp, #16]
    fd38:	cmp	w0, #0x0
    fd3c:	csel	x0, xzr, x8, eq  // eq = none
    fd40:	add	sp, sp, #0x20
    fd44:	ret
    fd48:	sub	sp, sp, #0x20
    fd4c:	stp	x29, x30, [sp, #16]
    fd50:	add	x29, sp, #0x10
    fd54:	adrp	x8, 2e000 <xexit@@Base+0x14c60>
    fd58:	ldr	x0, [x0, #16]
    fd5c:	ldr	x8, [x8, #3304]
    fd60:	mov	x4, x2
    fd64:	mov	x3, x1
    fd68:	add	x2, sp, #0x8
    fd6c:	ldr	x8, [x8]
    fd70:	mov	x1, x8
    fd74:	bl	d65c <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0x169c>
    fd78:	ldr	x8, [sp, #8]
    fd7c:	ldp	x29, x30, [sp, #16]
    fd80:	cmp	w0, #0x0
    fd84:	csel	x0, xzr, x8, eq  // eq = none
    fd88:	add	sp, sp, #0x20
    fd8c:	ret
    fd90:	sub	sp, sp, #0x20
    fd94:	stp	x29, x30, [sp, #16]
    fd98:	add	x29, sp, #0x10
    fd9c:	adrp	x8, 2e000 <xexit@@Base+0x14c60>
    fda0:	ldr	x0, [x0, #16]
    fda4:	ldr	x8, [x8, #3272]
    fda8:	add	x2, sp, #0x8
    fdac:	ldr	x1, [x8]
    fdb0:	bl	ccc0 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xd00>
    fdb4:	ldr	x8, [sp, #8]
    fdb8:	ldp	x29, x30, [sp, #16]
    fdbc:	cmp	w0, #0x0
    fdc0:	csel	x0, xzr, x8, eq  // eq = none
    fdc4:	add	sp, sp, #0x20
    fdc8:	ret
    fdcc:	sub	sp, sp, #0x20
    fdd0:	stp	x29, x30, [sp, #16]
    fdd4:	add	x29, sp, #0x10
    fdd8:	adrp	x8, 2e000 <xexit@@Base+0x14c60>
    fddc:	ldr	x0, [x0, #16]
    fde0:	ldr	x8, [x8, #3976]
    fde4:	add	x2, sp, #0x8
    fde8:	ldr	x1, [x8]
    fdec:	bl	ccc0 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xd00>
    fdf0:	ldr	x8, [sp, #8]
    fdf4:	ldp	x29, x30, [sp, #16]
    fdf8:	cmp	w0, #0x0
    fdfc:	csel	x0, xzr, x8, eq  // eq = none
    fe00:	add	sp, sp, #0x20
    fe04:	ret
    fe08:	sub	sp, sp, #0x20
    fe0c:	stp	x29, x30, [sp, #16]
    fe10:	add	x29, sp, #0x10
    fe14:	adrp	x8, 2e000 <xexit@@Base+0x14c60>
    fe18:	ldr	x0, [x0, #16]
    fe1c:	ldr	x8, [x8, #3344]
    fe20:	add	x2, sp, #0x8
    fe24:	ldr	x1, [x8]
    fe28:	bl	ccc0 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xd00>
    fe2c:	ldr	x8, [sp, #8]
    fe30:	ldp	x29, x30, [sp, #16]
    fe34:	cmp	w0, #0x0
    fe38:	csel	x0, xzr, x8, eq  // eq = none
    fe3c:	add	sp, sp, #0x20
    fe40:	ret
    fe44:	sub	sp, sp, #0x20
    fe48:	stp	x29, x30, [sp, #16]
    fe4c:	add	x29, sp, #0x10
    fe50:	adrp	x8, 2e000 <xexit@@Base+0x14c60>
    fe54:	ldr	x0, [x0, #16]
    fe58:	ldr	x8, [x8, #3544]
    fe5c:	add	x2, sp, #0x8
    fe60:	ldr	x1, [x8]
    fe64:	bl	ccc0 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xd00>
    fe68:	ldr	x8, [sp, #8]
    fe6c:	ldp	x29, x30, [sp, #16]
    fe70:	cmp	w0, #0x0
    fe74:	csel	x0, xzr, x8, eq  // eq = none
    fe78:	add	sp, sp, #0x20
    fe7c:	ret
    fe80:	sub	sp, sp, #0x20
    fe84:	stp	x29, x30, [sp, #16]
    fe88:	add	x29, sp, #0x10
    fe8c:	adrp	x8, 2e000 <xexit@@Base+0x14c60>
    fe90:	ldr	x0, [x0, #16]
    fe94:	ldr	x8, [x8, #3512]
    fe98:	mov	w4, w2
    fe9c:	mov	x3, x1
    fea0:	add	x2, sp, #0x8
    fea4:	ldr	x8, [x8]
    fea8:	mov	x1, x8
    feac:	bl	d218 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0x1258>
    feb0:	ldr	x8, [sp, #8]
    feb4:	ldp	x29, x30, [sp, #16]
    feb8:	cmp	w0, #0x0
    febc:	csel	x0, xzr, x8, eq  // eq = none
    fec0:	add	sp, sp, #0x20
    fec4:	ret
    fec8:	sub	sp, sp, #0x20
    fecc:	stp	x29, x30, [sp, #16]
    fed0:	add	x29, sp, #0x10
    fed4:	adrp	x8, 2e000 <xexit@@Base+0x14c60>
    fed8:	ldr	x0, [x0, #16]
    fedc:	ldr	x8, [x8, #3568]
    fee0:	mov	x4, x2
    fee4:	mov	x3, x1
    fee8:	add	x2, sp, #0x8
    feec:	ldr	x8, [x8]
    fef0:	mov	x1, x8
    fef4:	bl	106b0 <gcc_cp_fe_context@@Base+0x267c>
    fef8:	ldr	x8, [sp, #8]
    fefc:	ldp	x29, x30, [sp, #16]
    ff00:	cmp	w0, #0x0
    ff04:	csel	x0, xzr, x8, eq  // eq = none
    ff08:	add	sp, sp, #0x20
    ff0c:	ret
    ff10:	sub	sp, sp, #0x20
    ff14:	stp	x29, x30, [sp, #16]
    ff18:	add	x29, sp, #0x10
    ff1c:	adrp	x8, 2e000 <xexit@@Base+0x14c60>
    ff20:	ldr	x0, [x0, #16]
    ff24:	ldr	x8, [x8, #3896]
    ff28:	mov	x4, x2
    ff2c:	mov	x3, x1
    ff30:	add	x2, sp, #0x8
    ff34:	ldr	x8, [x8]
    ff38:	mov	x1, x8
    ff3c:	bl	d2c0 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0x1300>
    ff40:	ldr	x8, [sp, #8]
    ff44:	ldp	x29, x30, [sp, #16]
    ff48:	cmp	w0, #0x0
    ff4c:	csel	x0, xzr, x8, eq  // eq = none
    ff50:	add	sp, sp, #0x20
    ff54:	ret
    ff58:	sub	sp, sp, #0x20
    ff5c:	stp	x29, x30, [sp, #16]
    ff60:	add	x29, sp, #0x10
    ff64:	adrp	x8, 2e000 <xexit@@Base+0x14c60>
    ff68:	ldr	x0, [x0, #16]
    ff6c:	ldr	x8, [x8, #4008]
    ff70:	mov	w4, w2
    ff74:	mov	x3, x1
    ff78:	add	x2, sp, #0x8
    ff7c:	ldr	x8, [x8]
    ff80:	mov	x1, x8
    ff84:	bl	11838 <gcc_cp_fe_context@@Base+0x3804>
    ff88:	ldr	x8, [sp, #8]
    ff8c:	ldp	x29, x30, [sp, #16]
    ff90:	cmp	w0, #0x0
    ff94:	csel	x0, xzr, x8, eq  // eq = none
    ff98:	add	sp, sp, #0x20
    ff9c:	ret
    ffa0:	sub	sp, sp, #0x20
    ffa4:	stp	x29, x30, [sp, #16]
    ffa8:	add	x29, sp, #0x10
    ffac:	adrp	x8, 2e000 <xexit@@Base+0x14c60>
    ffb0:	ldr	x0, [x0, #16]
    ffb4:	ldr	x8, [x8, #3984]
    ffb8:	mov	x3, x1
    ffbc:	add	x2, sp, #0x8
    ffc0:	ldr	x8, [x8]
    ffc4:	mov	x1, x8
    ffc8:	bl	cc34 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xc74>
    ffcc:	ldr	x8, [sp, #8]
    ffd0:	ldp	x29, x30, [sp, #16]
    ffd4:	cmp	w0, #0x0
    ffd8:	csel	x0, xzr, x8, eq  // eq = none
    ffdc:	add	sp, sp, #0x20
    ffe0:	ret
    ffe4:	sub	sp, sp, #0x20
    ffe8:	stp	x29, x30, [sp, #16]
    ffec:	add	x29, sp, #0x10
    fff0:	adrp	x8, 2e000 <xexit@@Base+0x14c60>
    fff4:	ldr	x0, [x0, #16]
    fff8:	ldr	x8, [x8, #3712]
    fffc:	mov	w4, w2
   10000:	mov	x3, x1
   10004:	add	x2, sp, #0x8
   10008:	ldr	x8, [x8]
   1000c:	mov	x1, x8
   10010:	bl	d218 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0x1258>
   10014:	ldr	x8, [sp, #8]
   10018:	ldp	x29, x30, [sp, #16]
   1001c:	cmp	w0, #0x0
   10020:	csel	x0, xzr, x8, eq  // eq = none
   10024:	add	sp, sp, #0x20
   10028:	ret
   1002c:	sub	sp, sp, #0x20
   10030:	stp	x29, x30, [sp, #16]
   10034:	add	x29, sp, #0x10
   10038:	adrp	x8, 2e000 <xexit@@Base+0x14c60>
   1003c:	ldr	x0, [x0, #16]
   10040:	ldr	x8, [x8, #4032]
   10044:	mov	w7, w5
   10048:	mov	x6, x4
   1004c:	mov	x5, x3
   10050:	ldr	x8, [x8]
   10054:	mov	x4, x2
   10058:	mov	x3, x1
   1005c:	sub	x2, x29, #0x4
   10060:	mov	x1, x8
   10064:	bl	d428 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0x1468>
   10068:	ldur	w8, [x29, #-4]
   1006c:	ldp	x29, x30, [sp, #16]
   10070:	cmp	w0, #0x0
   10074:	csel	w0, wzr, w8, eq  // eq = none
   10078:	add	sp, sp, #0x20
   1007c:	ret
   10080:	sub	sp, sp, #0x20
   10084:	stp	x29, x30, [sp, #16]
   10088:	add	x29, sp, #0x10
   1008c:	adrp	x8, 2e000 <xexit@@Base+0x14c60>
   10090:	ldr	x0, [x0, #16]
   10094:	ldr	x8, [x8, #3640]
   10098:	mov	x3, x1
   1009c:	add	x2, sp, #0x8
   100a0:	ldr	x8, [x8]
   100a4:	mov	x1, x8
   100a8:	bl	d514 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0x1554>
   100ac:	ldr	x8, [sp, #8]
   100b0:	ldp	x29, x30, [sp, #16]
   100b4:	cmp	w0, #0x0
   100b8:	csel	x0, xzr, x8, eq  // eq = none
   100bc:	add	sp, sp, #0x20
   100c0:	ret
   100c4:	sub	sp, sp, #0x20
   100c8:	stp	x29, x30, [sp, #16]
   100cc:	add	x29, sp, #0x10
   100d0:	adrp	x8, 2e000 <xexit@@Base+0x14c60>
   100d4:	ldr	x0, [x0, #16]
   100d8:	ldr	x8, [x8, #3664]
   100dc:	mov	w6, w4
   100e0:	mov	x5, x3
   100e4:	mov	x4, x2
   100e8:	ldr	x8, [x8]
   100ec:	mov	x3, x1
   100f0:	sub	x2, x29, #0x4
   100f4:	mov	x1, x8
   100f8:	bl	118e0 <gcc_cp_fe_context@@Base+0x38ac>
   100fc:	ldur	w8, [x29, #-4]
   10100:	ldp	x29, x30, [sp, #16]
   10104:	cmp	w0, #0x0
   10108:	csel	w0, wzr, w8, eq  // eq = none
   1010c:	add	sp, sp, #0x20
   10110:	ret
   10114:	stp	x29, x30, [sp, #-48]!
   10118:	stp	x22, x21, [sp, #16]
   1011c:	stp	x20, x19, [sp, #32]
   10120:	mov	x29, sp
   10124:	mov	x22, x1
   10128:	mov	w1, #0x51                  	// #81
   1012c:	mov	x21, x3
   10130:	mov	x19, x2
   10134:	mov	x20, x0
   10138:	bl	11b24 <gcc_cp_fe_context@@Base+0x3af0>
   1013c:	cbz	w0, 10190 <gcc_cp_fe_context@@Base+0x215c>
   10140:	mov	x0, x20
   10144:	mov	x1, x22
   10148:	bl	11f88 <gcc_cp_fe_context@@Base+0x3f54>
   1014c:	cbz	w0, 10190 <gcc_cp_fe_context@@Base+0x215c>
   10150:	mov	w1, #0x1                   	// #1
   10154:	mov	x0, x20
   10158:	bl	c098 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xd8>
   1015c:	cbz	w0, 10190 <gcc_cp_fe_context@@Base+0x215c>
   10160:	mov	x0, x20
   10164:	mov	x1, x21
   10168:	bl	11f88 <gcc_cp_fe_context@@Base+0x3f54>
   1016c:	cbz	w0, 10190 <gcc_cp_fe_context@@Base+0x215c>
   10170:	mov	x0, x20
   10174:	bl	ca34 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xa74>
   10178:	cbz	w0, 10190 <gcc_cp_fe_context@@Base+0x215c>
   1017c:	mov	x0, x20
   10180:	mov	x1, x19
   10184:	bl	cb28 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xb68>
   10188:	cmp	w0, #0x0
   1018c:	cset	w0, ne  // ne = any
   10190:	ldp	x20, x19, [sp, #32]
   10194:	ldp	x22, x21, [sp, #16]
   10198:	ldp	x29, x30, [sp], #48
   1019c:	ret
   101a0:	stp	x29, x30, [sp, #-64]!
   101a4:	str	x23, [sp, #16]
   101a8:	stp	x22, x21, [sp, #32]
   101ac:	stp	x20, x19, [sp, #48]
   101b0:	mov	x29, sp
   101b4:	mov	x23, x1
   101b8:	mov	w1, #0x51                  	// #81
   101bc:	mov	x21, x4
   101c0:	mov	x22, x3
   101c4:	mov	x19, x2
   101c8:	mov	x20, x0
   101cc:	bl	11b24 <gcc_cp_fe_context@@Base+0x3af0>
   101d0:	cbz	w0, 10234 <gcc_cp_fe_context@@Base+0x2200>
   101d4:	mov	x0, x20
   101d8:	mov	x1, x23
   101dc:	bl	11f88 <gcc_cp_fe_context@@Base+0x3f54>
   101e0:	cbz	w0, 10234 <gcc_cp_fe_context@@Base+0x2200>
   101e4:	mov	w1, #0x2                   	// #2
   101e8:	mov	x0, x20
   101ec:	bl	c098 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xd8>
   101f0:	cbz	w0, 10234 <gcc_cp_fe_context@@Base+0x2200>
   101f4:	mov	x0, x20
   101f8:	mov	x1, x22
   101fc:	bl	c0d0 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0x110>
   10200:	cbz	w0, 10234 <gcc_cp_fe_context@@Base+0x2200>
   10204:	mov	x0, x20
   10208:	mov	x1, x21
   1020c:	bl	c0d0 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0x110>
   10210:	cbz	w0, 10234 <gcc_cp_fe_context@@Base+0x2200>
   10214:	mov	x0, x20
   10218:	bl	ca34 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xa74>
   1021c:	cbz	w0, 10234 <gcc_cp_fe_context@@Base+0x2200>
   10220:	mov	x0, x20
   10224:	mov	x1, x19
   10228:	bl	cb28 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xb68>
   1022c:	cmp	w0, #0x0
   10230:	cset	w0, ne  // ne = any
   10234:	ldp	x20, x19, [sp, #48]
   10238:	ldp	x22, x21, [sp, #32]
   1023c:	ldr	x23, [sp, #16]
   10240:	ldp	x29, x30, [sp], #64
   10244:	ret
   10248:	stp	x29, x30, [sp, #-48]!
   1024c:	str	x21, [sp, #16]
   10250:	stp	x20, x19, [sp, #32]
   10254:	mov	x29, sp
   10258:	mov	x21, x1
   1025c:	mov	w1, #0x51                  	// #81
   10260:	mov	x19, x2
   10264:	mov	x20, x0
   10268:	bl	11b24 <gcc_cp_fe_context@@Base+0x3af0>
   1026c:	cbz	w0, 102b0 <gcc_cp_fe_context@@Base+0x227c>
   10270:	mov	x0, x20
   10274:	mov	x1, x21
   10278:	bl	11f88 <gcc_cp_fe_context@@Base+0x3f54>
   1027c:	cbz	w0, 102b0 <gcc_cp_fe_context@@Base+0x227c>
   10280:	mov	x0, x20
   10284:	mov	w1, wzr
   10288:	bl	c098 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xd8>
   1028c:	cbz	w0, 102b0 <gcc_cp_fe_context@@Base+0x227c>
   10290:	mov	x0, x20
   10294:	bl	ca34 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xa74>
   10298:	cbz	w0, 102b0 <gcc_cp_fe_context@@Base+0x227c>
   1029c:	mov	x0, x20
   102a0:	mov	x1, x19
   102a4:	bl	cb28 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xb68>
   102a8:	cmp	w0, #0x0
   102ac:	cset	w0, ne  // ne = any
   102b0:	ldp	x20, x19, [sp, #32]
   102b4:	ldr	x21, [sp, #16]
   102b8:	ldp	x29, x30, [sp], #48
   102bc:	ret
   102c0:	stp	x29, x30, [sp, #-64]!
   102c4:	str	x23, [sp, #16]
   102c8:	stp	x22, x21, [sp, #32]
   102cc:	stp	x20, x19, [sp, #48]
   102d0:	mov	x29, sp
   102d4:	mov	x23, x1
   102d8:	mov	w1, #0x51                  	// #81
   102dc:	mov	x21, x4
   102e0:	mov	x22, x3
   102e4:	mov	x19, x2
   102e8:	mov	x20, x0
   102ec:	bl	11b24 <gcc_cp_fe_context@@Base+0x3af0>
   102f0:	cbz	w0, 10354 <gcc_cp_fe_context@@Base+0x2320>
   102f4:	mov	x0, x20
   102f8:	mov	x1, x23
   102fc:	bl	11f88 <gcc_cp_fe_context@@Base+0x3f54>
   10300:	cbz	w0, 10354 <gcc_cp_fe_context@@Base+0x2320>
   10304:	mov	w1, #0x2                   	// #2
   10308:	mov	x0, x20
   1030c:	bl	c098 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xd8>
   10310:	cbz	w0, 10354 <gcc_cp_fe_context@@Base+0x2320>
   10314:	mov	x0, x20
   10318:	mov	x1, x22
   1031c:	bl	11f88 <gcc_cp_fe_context@@Base+0x3f54>
   10320:	cbz	w0, 10354 <gcc_cp_fe_context@@Base+0x2320>
   10324:	mov	x0, x20
   10328:	mov	x1, x21
   1032c:	bl	c0d0 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0x110>
   10330:	cbz	w0, 10354 <gcc_cp_fe_context@@Base+0x2320>
   10334:	mov	x0, x20
   10338:	bl	ca34 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xa74>
   1033c:	cbz	w0, 10354 <gcc_cp_fe_context@@Base+0x2320>
   10340:	mov	x0, x20
   10344:	mov	x1, x19
   10348:	bl	cb28 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xb68>
   1034c:	cmp	w0, #0x0
   10350:	cset	w0, ne  // ne = any
   10354:	ldp	x20, x19, [sp, #48]
   10358:	ldp	x22, x21, [sp, #32]
   1035c:	ldr	x23, [sp, #16]
   10360:	ldp	x29, x30, [sp], #64
   10364:	ret
   10368:	stp	x29, x30, [sp, #-64]!
   1036c:	str	x23, [sp, #16]
   10370:	stp	x22, x21, [sp, #32]
   10374:	stp	x20, x19, [sp, #48]
   10378:	mov	x29, sp
   1037c:	mov	x23, x1
   10380:	mov	w1, #0x51                  	// #81
   10384:	mov	x21, x4
   10388:	mov	w22, w3
   1038c:	mov	x19, x2
   10390:	mov	x20, x0
   10394:	bl	11b24 <gcc_cp_fe_context@@Base+0x3af0>
   10398:	cbz	w0, 103fc <gcc_cp_fe_context@@Base+0x23c8>
   1039c:	mov	x0, x20
   103a0:	mov	x1, x23
   103a4:	bl	11f88 <gcc_cp_fe_context@@Base+0x3f54>
   103a8:	cbz	w0, 103fc <gcc_cp_fe_context@@Base+0x23c8>
   103ac:	mov	w1, #0x2                   	// #2
   103b0:	mov	x0, x20
   103b4:	bl	c098 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xd8>
   103b8:	cbz	w0, 103fc <gcc_cp_fe_context@@Base+0x23c8>
   103bc:	mov	x0, x20
   103c0:	mov	w1, w22
   103c4:	bl	10410 <gcc_cp_fe_context@@Base+0x23dc>
   103c8:	cbz	w0, 103fc <gcc_cp_fe_context@@Base+0x23c8>
   103cc:	mov	x0, x20
   103d0:	mov	x1, x21
   103d4:	bl	c0d0 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0x110>
   103d8:	cbz	w0, 103fc <gcc_cp_fe_context@@Base+0x23c8>
   103dc:	mov	x0, x20
   103e0:	bl	ca34 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xa74>
   103e4:	cbz	w0, 103fc <gcc_cp_fe_context@@Base+0x23c8>
   103e8:	mov	x0, x20
   103ec:	mov	x1, x19
   103f0:	bl	cb28 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xb68>
   103f4:	cmp	w0, #0x0
   103f8:	cset	w0, ne  // ne = any
   103fc:	ldp	x20, x19, [sp, #48]
   10400:	ldp	x22, x21, [sp, #32]
   10404:	ldr	x23, [sp, #16]
   10408:	ldp	x29, x30, [sp], #64
   1040c:	ret
   10410:	stp	x29, x30, [sp, #-16]!
   10414:	mov	x29, sp
   10418:	mov	w1, w1
   1041c:	bl	11f10 <gcc_cp_fe_context@@Base+0x3edc>
   10420:	ldp	x29, x30, [sp], #16
   10424:	ret
   10428:	stp	x29, x30, [sp, #-80]!
   1042c:	stp	x26, x25, [sp, #16]
   10430:	stp	x24, x23, [sp, #32]
   10434:	stp	x22, x21, [sp, #48]
   10438:	stp	x20, x19, [sp, #64]
   1043c:	mov	x29, sp
   10440:	mov	x26, x1
   10444:	mov	w1, #0x51                  	// #81
   10448:	mov	x21, x7
   1044c:	mov	x22, x6
   10450:	mov	x23, x5
   10454:	mov	w24, w4
   10458:	mov	x25, x3
   1045c:	mov	x19, x2
   10460:	mov	x20, x0
   10464:	bl	11b24 <gcc_cp_fe_context@@Base+0x3af0>
   10468:	cbz	w0, 1051c <gcc_cp_fe_context@@Base+0x24e8>
   1046c:	mov	x0, x20
   10470:	mov	x1, x26
   10474:	bl	11f88 <gcc_cp_fe_context@@Base+0x3f54>
   10478:	cbz	w0, 1051c <gcc_cp_fe_context@@Base+0x24e8>
   1047c:	mov	w1, #0x7                   	// #7
   10480:	mov	x0, x20
   10484:	bl	c098 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xd8>
   10488:	cbz	w0, 1051c <gcc_cp_fe_context@@Base+0x24e8>
   1048c:	mov	x0, x20
   10490:	mov	x1, x25
   10494:	bl	11f88 <gcc_cp_fe_context@@Base+0x3f54>
   10498:	cbz	w0, 1051c <gcc_cp_fe_context@@Base+0x24e8>
   1049c:	mov	x0, x20
   104a0:	mov	w1, w24
   104a4:	bl	10410 <gcc_cp_fe_context@@Base+0x23dc>
   104a8:	cbz	w0, 1051c <gcc_cp_fe_context@@Base+0x24e8>
   104ac:	mov	x0, x20
   104b0:	mov	x1, x23
   104b4:	bl	c0d0 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0x110>
   104b8:	cbz	w0, 1051c <gcc_cp_fe_context@@Base+0x24e8>
   104bc:	mov	x0, x20
   104c0:	mov	x1, x22
   104c4:	bl	11f88 <gcc_cp_fe_context@@Base+0x3f54>
   104c8:	cbz	w0, 1051c <gcc_cp_fe_context@@Base+0x24e8>
   104cc:	mov	x0, x20
   104d0:	mov	x1, x21
   104d4:	bl	c0d0 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0x110>
   104d8:	cbz	w0, 1051c <gcc_cp_fe_context@@Base+0x24e8>
   104dc:	ldr	x1, [x29, #80]
   104e0:	mov	x0, x20
   104e4:	bl	11f88 <gcc_cp_fe_context@@Base+0x3f54>
   104e8:	cbz	w0, 1051c <gcc_cp_fe_context@@Base+0x24e8>
   104ec:	ldr	w1, [x29, #88]
   104f0:	mov	x0, x20
   104f4:	bl	ca1c <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xa5c>
   104f8:	cbz	w0, 1051c <gcc_cp_fe_context@@Base+0x24e8>
   104fc:	mov	x0, x20
   10500:	bl	ca34 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xa74>
   10504:	cbz	w0, 1051c <gcc_cp_fe_context@@Base+0x24e8>
   10508:	mov	x0, x20
   1050c:	mov	x1, x19
   10510:	bl	ca4c <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xa8c>
   10514:	cmp	w0, #0x0
   10518:	cset	w0, ne  // ne = any
   1051c:	ldp	x20, x19, [sp, #64]
   10520:	ldp	x22, x21, [sp, #48]
   10524:	ldp	x24, x23, [sp, #32]
   10528:	ldp	x26, x25, [sp, #16]
   1052c:	ldp	x29, x30, [sp], #80
   10530:	ret
   10534:	stp	x29, x30, [sp, #-64]!
   10538:	stp	x24, x23, [sp, #16]
   1053c:	stp	x22, x21, [sp, #32]
   10540:	stp	x20, x19, [sp, #48]
   10544:	mov	x29, sp
   10548:	mov	x24, x1
   1054c:	mov	w1, #0x51                  	// #81
   10550:	mov	x21, x5
   10554:	mov	x22, x4
   10558:	mov	x23, x3
   1055c:	mov	x19, x2
   10560:	mov	x20, x0
   10564:	bl	11b24 <gcc_cp_fe_context@@Base+0x3af0>
   10568:	cbz	w0, 105dc <gcc_cp_fe_context@@Base+0x25a8>
   1056c:	mov	x0, x20
   10570:	mov	x1, x24
   10574:	bl	11f88 <gcc_cp_fe_context@@Base+0x3f54>
   10578:	cbz	w0, 105dc <gcc_cp_fe_context@@Base+0x25a8>
   1057c:	mov	w1, #0x3                   	// #3
   10580:	mov	x0, x20
   10584:	bl	c098 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xd8>
   10588:	cbz	w0, 105dc <gcc_cp_fe_context@@Base+0x25a8>
   1058c:	mov	x0, x20
   10590:	mov	x1, x23
   10594:	bl	11f88 <gcc_cp_fe_context@@Base+0x3f54>
   10598:	cbz	w0, 105dc <gcc_cp_fe_context@@Base+0x25a8>
   1059c:	mov	x0, x20
   105a0:	mov	x1, x22
   105a4:	bl	c0d0 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0x110>
   105a8:	cbz	w0, 105dc <gcc_cp_fe_context@@Base+0x25a8>
   105ac:	mov	x0, x20
   105b0:	mov	x1, x21
   105b4:	bl	c0d0 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0x110>
   105b8:	cbz	w0, 105dc <gcc_cp_fe_context@@Base+0x25a8>
   105bc:	mov	x0, x20
   105c0:	bl	ca34 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xa74>
   105c4:	cbz	w0, 105dc <gcc_cp_fe_context@@Base+0x25a8>
   105c8:	mov	x0, x20
   105cc:	mov	x1, x19
   105d0:	bl	ca4c <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xa8c>
   105d4:	cmp	w0, #0x0
   105d8:	cset	w0, ne  // ne = any
   105dc:	ldp	x20, x19, [sp, #48]
   105e0:	ldp	x22, x21, [sp, #32]
   105e4:	ldp	x24, x23, [sp, #16]
   105e8:	ldp	x29, x30, [sp], #64
   105ec:	ret
   105f0:	stp	x29, x30, [sp, #-64]!
   105f4:	str	x23, [sp, #16]
   105f8:	stp	x22, x21, [sp, #32]
   105fc:	stp	x20, x19, [sp, #48]
   10600:	mov	x29, sp
   10604:	mov	x23, x1
   10608:	mov	w1, #0x51                  	// #81
   1060c:	mov	w21, w4
   10610:	mov	x22, x3
   10614:	mov	x19, x2
   10618:	mov	x20, x0
   1061c:	bl	11b24 <gcc_cp_fe_context@@Base+0x3af0>
   10620:	cbz	w0, 10684 <gcc_cp_fe_context@@Base+0x2650>
   10624:	mov	x0, x20
   10628:	mov	x1, x23
   1062c:	bl	11f88 <gcc_cp_fe_context@@Base+0x3f54>
   10630:	cbz	w0, 10684 <gcc_cp_fe_context@@Base+0x2650>
   10634:	mov	w1, #0x2                   	// #2
   10638:	mov	x0, x20
   1063c:	bl	c098 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xd8>
   10640:	cbz	w0, 10684 <gcc_cp_fe_context@@Base+0x2650>
   10644:	mov	x0, x20
   10648:	mov	x1, x22
   1064c:	bl	c0d0 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0x110>
   10650:	cbz	w0, 10684 <gcc_cp_fe_context@@Base+0x2650>
   10654:	mov	x0, x20
   10658:	mov	w1, w21
   1065c:	bl	10698 <gcc_cp_fe_context@@Base+0x2664>
   10660:	cbz	w0, 10684 <gcc_cp_fe_context@@Base+0x2650>
   10664:	mov	x0, x20
   10668:	bl	ca34 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xa74>
   1066c:	cbz	w0, 10684 <gcc_cp_fe_context@@Base+0x2650>
   10670:	mov	x0, x20
   10674:	mov	x1, x19
   10678:	bl	ca4c <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xa8c>
   1067c:	cmp	w0, #0x0
   10680:	cset	w0, ne  // ne = any
   10684:	ldp	x20, x19, [sp, #48]
   10688:	ldp	x22, x21, [sp, #32]
   1068c:	ldr	x23, [sp, #16]
   10690:	ldp	x29, x30, [sp], #64
   10694:	ret
   10698:	stp	x29, x30, [sp, #-16]!
   1069c:	mov	x29, sp
   106a0:	mov	w1, w1
   106a4:	bl	11f10 <gcc_cp_fe_context@@Base+0x3edc>
   106a8:	ldp	x29, x30, [sp], #16
   106ac:	ret
   106b0:	stp	x29, x30, [sp, #-64]!
   106b4:	str	x23, [sp, #16]
   106b8:	stp	x22, x21, [sp, #32]
   106bc:	stp	x20, x19, [sp, #48]
   106c0:	mov	x29, sp
   106c4:	mov	x23, x1
   106c8:	mov	w1, #0x51                  	// #81
   106cc:	mov	x21, x4
   106d0:	mov	x22, x3
   106d4:	mov	x19, x2
   106d8:	mov	x20, x0
   106dc:	bl	11b24 <gcc_cp_fe_context@@Base+0x3af0>
   106e0:	cbz	w0, 10744 <gcc_cp_fe_context@@Base+0x2710>
   106e4:	mov	x0, x20
   106e8:	mov	x1, x23
   106ec:	bl	11f88 <gcc_cp_fe_context@@Base+0x3f54>
   106f0:	cbz	w0, 10744 <gcc_cp_fe_context@@Base+0x2710>
   106f4:	mov	w1, #0x2                   	// #2
   106f8:	mov	x0, x20
   106fc:	bl	c098 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xd8>
   10700:	cbz	w0, 10744 <gcc_cp_fe_context@@Base+0x2710>
   10704:	mov	x0, x20
   10708:	mov	x1, x22
   1070c:	bl	c0d0 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0x110>
   10710:	cbz	w0, 10744 <gcc_cp_fe_context@@Base+0x2710>
   10714:	mov	x0, x20
   10718:	mov	x1, x21
   1071c:	bl	c0d0 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0x110>
   10720:	cbz	w0, 10744 <gcc_cp_fe_context@@Base+0x2710>
   10724:	mov	x0, x20
   10728:	bl	ca34 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xa74>
   1072c:	cbz	w0, 10744 <gcc_cp_fe_context@@Base+0x2710>
   10730:	mov	x0, x20
   10734:	mov	x1, x19
   10738:	bl	ca4c <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xa8c>
   1073c:	cmp	w0, #0x0
   10740:	cset	w0, ne  // ne = any
   10744:	ldp	x20, x19, [sp, #48]
   10748:	ldp	x22, x21, [sp, #32]
   1074c:	ldr	x23, [sp, #16]
   10750:	ldp	x29, x30, [sp], #64
   10754:	ret
   10758:	stp	x29, x30, [sp, #-80]!
   1075c:	stp	x26, x25, [sp, #16]
   10760:	stp	x24, x23, [sp, #32]
   10764:	stp	x22, x21, [sp, #48]
   10768:	stp	x20, x19, [sp, #64]
   1076c:	mov	x29, sp
   10770:	mov	x26, x1
   10774:	mov	w1, #0x51                  	// #81
   10778:	mov	w21, w7
   1077c:	mov	x22, x6
   10780:	mov	x23, x5
   10784:	mov	w24, w4
   10788:	mov	x25, x3
   1078c:	mov	x19, x2
   10790:	mov	x20, x0
   10794:	bl	11b24 <gcc_cp_fe_context@@Base+0x3af0>
   10798:	cbz	w0, 1082c <gcc_cp_fe_context@@Base+0x27f8>
   1079c:	mov	x0, x20
   107a0:	mov	x1, x26
   107a4:	bl	11f88 <gcc_cp_fe_context@@Base+0x3f54>
   107a8:	cbz	w0, 1082c <gcc_cp_fe_context@@Base+0x27f8>
   107ac:	mov	w1, #0x5                   	// #5
   107b0:	mov	x0, x20
   107b4:	bl	c098 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xd8>
   107b8:	cbz	w0, 1082c <gcc_cp_fe_context@@Base+0x27f8>
   107bc:	mov	x0, x20
   107c0:	mov	x1, x25
   107c4:	bl	11f88 <gcc_cp_fe_context@@Base+0x3f54>
   107c8:	cbz	w0, 1082c <gcc_cp_fe_context@@Base+0x27f8>
   107cc:	mov	x0, x20
   107d0:	mov	w1, w24
   107d4:	bl	c098 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xd8>
   107d8:	cbz	w0, 1082c <gcc_cp_fe_context@@Base+0x27f8>
   107dc:	mov	x0, x20
   107e0:	mov	x1, x23
   107e4:	bl	c0d0 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0x110>
   107e8:	cbz	w0, 1082c <gcc_cp_fe_context@@Base+0x27f8>
   107ec:	mov	x0, x20
   107f0:	mov	x1, x22
   107f4:	bl	11f88 <gcc_cp_fe_context@@Base+0x3f54>
   107f8:	cbz	w0, 1082c <gcc_cp_fe_context@@Base+0x27f8>
   107fc:	mov	x0, x20
   10800:	mov	w1, w21
   10804:	bl	ca1c <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xa5c>
   10808:	cbz	w0, 1082c <gcc_cp_fe_context@@Base+0x27f8>
   1080c:	mov	x0, x20
   10810:	bl	ca34 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xa74>
   10814:	cbz	w0, 1082c <gcc_cp_fe_context@@Base+0x27f8>
   10818:	mov	x0, x20
   1081c:	mov	x1, x19
   10820:	bl	ca4c <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xa8c>
   10824:	cmp	w0, #0x0
   10828:	cset	w0, ne  // ne = any
   1082c:	ldp	x20, x19, [sp, #64]
   10830:	ldp	x22, x21, [sp, #48]
   10834:	ldp	x24, x23, [sp, #32]
   10838:	ldp	x26, x25, [sp, #16]
   1083c:	ldp	x29, x30, [sp], #80
   10840:	ret
   10844:	stp	x29, x30, [sp, #-80]!
   10848:	stp	x26, x25, [sp, #16]
   1084c:	stp	x24, x23, [sp, #32]
   10850:	stp	x22, x21, [sp, #48]
   10854:	stp	x20, x19, [sp, #64]
   10858:	mov	x29, sp
   1085c:	mov	x26, x1
   10860:	mov	w1, #0x51                  	// #81
   10864:	mov	w21, w7
   10868:	mov	x22, x6
   1086c:	mov	x23, x5
   10870:	mov	x24, x4
   10874:	mov	x25, x3
   10878:	mov	x19, x2
   1087c:	mov	x20, x0
   10880:	bl	11b24 <gcc_cp_fe_context@@Base+0x3af0>
   10884:	cbz	w0, 10918 <gcc_cp_fe_context@@Base+0x28e4>
   10888:	mov	x0, x20
   1088c:	mov	x1, x26
   10890:	bl	11f88 <gcc_cp_fe_context@@Base+0x3f54>
   10894:	cbz	w0, 10918 <gcc_cp_fe_context@@Base+0x28e4>
   10898:	mov	w1, #0x5                   	// #5
   1089c:	mov	x0, x20
   108a0:	bl	c098 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xd8>
   108a4:	cbz	w0, 10918 <gcc_cp_fe_context@@Base+0x28e4>
   108a8:	mov	x0, x20
   108ac:	mov	x1, x25
   108b0:	bl	c0d0 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0x110>
   108b4:	cbz	w0, 10918 <gcc_cp_fe_context@@Base+0x28e4>
   108b8:	mov	x0, x20
   108bc:	mov	x1, x24
   108c0:	bl	11f88 <gcc_cp_fe_context@@Base+0x3f54>
   108c4:	cbz	w0, 10918 <gcc_cp_fe_context@@Base+0x28e4>
   108c8:	mov	x0, x20
   108cc:	mov	x1, x23
   108d0:	bl	c0d0 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0x110>
   108d4:	cbz	w0, 10918 <gcc_cp_fe_context@@Base+0x28e4>
   108d8:	mov	x0, x20
   108dc:	mov	x1, x22
   108e0:	bl	11f88 <gcc_cp_fe_context@@Base+0x3f54>
   108e4:	cbz	w0, 10918 <gcc_cp_fe_context@@Base+0x28e4>
   108e8:	mov	x0, x20
   108ec:	mov	w1, w21
   108f0:	bl	ca1c <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xa5c>
   108f4:	cbz	w0, 10918 <gcc_cp_fe_context@@Base+0x28e4>
   108f8:	mov	x0, x20
   108fc:	bl	ca34 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xa74>
   10900:	cbz	w0, 10918 <gcc_cp_fe_context@@Base+0x28e4>
   10904:	mov	x0, x20
   10908:	mov	x1, x19
   1090c:	bl	ca4c <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xa8c>
   10910:	cmp	w0, #0x0
   10914:	cset	w0, ne  // ne = any
   10918:	ldp	x20, x19, [sp, #64]
   1091c:	ldp	x22, x21, [sp, #48]
   10920:	ldp	x24, x23, [sp, #32]
   10924:	ldp	x26, x25, [sp, #16]
   10928:	ldp	x29, x30, [sp], #80
   1092c:	ret
   10930:	stp	x29, x30, [sp, #-64]!
   10934:	stp	x24, x23, [sp, #16]
   10938:	stp	x22, x21, [sp, #32]
   1093c:	stp	x20, x19, [sp, #48]
   10940:	mov	x29, sp
   10944:	mov	x24, x1
   10948:	mov	w1, #0x51                  	// #81
   1094c:	mov	x21, x5
   10950:	mov	x22, x4
   10954:	mov	x23, x3
   10958:	mov	x19, x2
   1095c:	mov	x20, x0
   10960:	bl	11b24 <gcc_cp_fe_context@@Base+0x3af0>
   10964:	cbz	w0, 109d8 <gcc_cp_fe_context@@Base+0x29a4>
   10968:	mov	x0, x20
   1096c:	mov	x1, x24
   10970:	bl	11f88 <gcc_cp_fe_context@@Base+0x3f54>
   10974:	cbz	w0, 109d8 <gcc_cp_fe_context@@Base+0x29a4>
   10978:	mov	w1, #0x3                   	// #3
   1097c:	mov	x0, x20
   10980:	bl	c098 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xd8>
   10984:	cbz	w0, 109d8 <gcc_cp_fe_context@@Base+0x29a4>
   10988:	mov	x0, x20
   1098c:	mov	x1, x23
   10990:	bl	c0d0 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0x110>
   10994:	cbz	w0, 109d8 <gcc_cp_fe_context@@Base+0x29a4>
   10998:	mov	x0, x20
   1099c:	mov	x1, x22
   109a0:	bl	11f88 <gcc_cp_fe_context@@Base+0x3f54>
   109a4:	cbz	w0, 109d8 <gcc_cp_fe_context@@Base+0x29a4>
   109a8:	mov	x0, x20
   109ac:	mov	x1, x21
   109b0:	bl	d98c <_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev@@Base+0x23c>
   109b4:	cbz	w0, 109d8 <gcc_cp_fe_context@@Base+0x29a4>
   109b8:	mov	x0, x20
   109bc:	bl	ca34 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xa74>
   109c0:	cbz	w0, 109d8 <gcc_cp_fe_context@@Base+0x29a4>
   109c4:	mov	x0, x20
   109c8:	mov	x1, x19
   109cc:	bl	ca4c <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xa8c>
   109d0:	cmp	w0, #0x0
   109d4:	cset	w0, ne  // ne = any
   109d8:	ldp	x20, x19, [sp, #48]
   109dc:	ldp	x22, x21, [sp, #32]
   109e0:	ldp	x24, x23, [sp, #16]
   109e4:	ldp	x29, x30, [sp], #64
   109e8:	ret
   109ec:	stp	x29, x30, [sp, #-64]!
   109f0:	str	x23, [sp, #16]
   109f4:	stp	x22, x21, [sp, #32]
   109f8:	stp	x20, x19, [sp, #48]
   109fc:	mov	x29, sp
   10a00:	mov	x23, x1
   10a04:	mov	w1, #0x51                  	// #81
   10a08:	mov	x21, x4
   10a0c:	mov	x22, x3
   10a10:	mov	x19, x2
   10a14:	mov	x20, x0
   10a18:	bl	11b24 <gcc_cp_fe_context@@Base+0x3af0>
   10a1c:	cbz	w0, 10a80 <gcc_cp_fe_context@@Base+0x2a4c>
   10a20:	mov	x0, x20
   10a24:	mov	x1, x23
   10a28:	bl	11f88 <gcc_cp_fe_context@@Base+0x3f54>
   10a2c:	cbz	w0, 10a80 <gcc_cp_fe_context@@Base+0x2a4c>
   10a30:	mov	w1, #0x2                   	// #2
   10a34:	mov	x0, x20
   10a38:	bl	c098 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xd8>
   10a3c:	cbz	w0, 10a80 <gcc_cp_fe_context@@Base+0x2a4c>
   10a40:	mov	x0, x20
   10a44:	mov	x1, x22
   10a48:	bl	c0d0 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0x110>
   10a4c:	cbz	w0, 10a80 <gcc_cp_fe_context@@Base+0x2a4c>
   10a50:	mov	x0, x20
   10a54:	mov	x1, x21
   10a58:	bl	d98c <_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev@@Base+0x23c>
   10a5c:	cbz	w0, 10a80 <gcc_cp_fe_context@@Base+0x2a4c>
   10a60:	mov	x0, x20
   10a64:	bl	ca34 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xa74>
   10a68:	cbz	w0, 10a80 <gcc_cp_fe_context@@Base+0x2a4c>
   10a6c:	mov	x0, x20
   10a70:	mov	x1, x19
   10a74:	bl	ca4c <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xa8c>
   10a78:	cmp	w0, #0x0
   10a7c:	cset	w0, ne  // ne = any
   10a80:	ldp	x20, x19, [sp, #48]
   10a84:	ldp	x22, x21, [sp, #32]
   10a88:	ldr	x23, [sp, #16]
   10a8c:	ldp	x29, x30, [sp], #64
   10a90:	ret
   10a94:	stp	x29, x30, [sp, #-80]!
   10a98:	stp	x26, x25, [sp, #16]
   10a9c:	stp	x24, x23, [sp, #32]
   10aa0:	stp	x22, x21, [sp, #48]
   10aa4:	stp	x20, x19, [sp, #64]
   10aa8:	mov	x29, sp
   10aac:	mov	x26, x1
   10ab0:	mov	w1, #0x51                  	// #81
   10ab4:	mov	x21, x7
   10ab8:	mov	x22, x6
   10abc:	mov	x23, x5
   10ac0:	mov	w24, w4
   10ac4:	mov	x25, x3
   10ac8:	mov	x19, x2
   10acc:	mov	x20, x0
   10ad0:	bl	11b24 <gcc_cp_fe_context@@Base+0x3af0>
   10ad4:	cbz	w0, 10b68 <gcc_cp_fe_context@@Base+0x2b34>
   10ad8:	mov	x0, x20
   10adc:	mov	x1, x26
   10ae0:	bl	11f88 <gcc_cp_fe_context@@Base+0x3f54>
   10ae4:	cbz	w0, 10b68 <gcc_cp_fe_context@@Base+0x2b34>
   10ae8:	mov	w1, #0x5                   	// #5
   10aec:	mov	x0, x20
   10af0:	bl	c098 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xd8>
   10af4:	cbz	w0, 10b68 <gcc_cp_fe_context@@Base+0x2b34>
   10af8:	mov	x0, x20
   10afc:	mov	x1, x25
   10b00:	bl	c0d0 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0x110>
   10b04:	cbz	w0, 10b68 <gcc_cp_fe_context@@Base+0x2b34>
   10b08:	mov	x0, x20
   10b0c:	mov	w1, w24
   10b10:	bl	10410 <gcc_cp_fe_context@@Base+0x23dc>
   10b14:	cbz	w0, 10b68 <gcc_cp_fe_context@@Base+0x2b34>
   10b18:	mov	x0, x20
   10b1c:	mov	x1, x23
   10b20:	bl	11f88 <gcc_cp_fe_context@@Base+0x3f54>
   10b24:	cbz	w0, 10b68 <gcc_cp_fe_context@@Base+0x2b34>
   10b28:	mov	x0, x20
   10b2c:	mov	x1, x22
   10b30:	bl	c0d0 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0x110>
   10b34:	cbz	w0, 10b68 <gcc_cp_fe_context@@Base+0x2b34>
   10b38:	mov	x0, x20
   10b3c:	mov	x1, x21
   10b40:	bl	d98c <_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev@@Base+0x23c>
   10b44:	cbz	w0, 10b68 <gcc_cp_fe_context@@Base+0x2b34>
   10b48:	mov	x0, x20
   10b4c:	bl	ca34 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xa74>
   10b50:	cbz	w0, 10b68 <gcc_cp_fe_context@@Base+0x2b34>
   10b54:	mov	x0, x20
   10b58:	mov	x1, x19
   10b5c:	bl	ca4c <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xa8c>
   10b60:	cmp	w0, #0x0
   10b64:	cset	w0, ne  // ne = any
   10b68:	ldp	x20, x19, [sp, #64]
   10b6c:	ldp	x22, x21, [sp, #48]
   10b70:	ldp	x24, x23, [sp, #32]
   10b74:	ldp	x26, x25, [sp, #16]
   10b78:	ldp	x29, x30, [sp], #80
   10b7c:	ret
   10b80:	stp	x29, x30, [sp, #-64]!
   10b84:	str	x23, [sp, #16]
   10b88:	stp	x22, x21, [sp, #32]
   10b8c:	stp	x20, x19, [sp, #48]
   10b90:	mov	x29, sp
   10b94:	mov	x23, x1
   10b98:	mov	w1, #0x51                  	// #81
   10b9c:	mov	x21, x4
   10ba0:	mov	x22, x3
   10ba4:	mov	x19, x2
   10ba8:	mov	x20, x0
   10bac:	bl	11b24 <gcc_cp_fe_context@@Base+0x3af0>
   10bb0:	cbz	w0, 10c14 <gcc_cp_fe_context@@Base+0x2be0>
   10bb4:	mov	x0, x20
   10bb8:	mov	x1, x23
   10bbc:	bl	11f88 <gcc_cp_fe_context@@Base+0x3f54>
   10bc0:	cbz	w0, 10c14 <gcc_cp_fe_context@@Base+0x2be0>
   10bc4:	mov	w1, #0x2                   	// #2
   10bc8:	mov	x0, x20
   10bcc:	bl	c098 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xd8>
   10bd0:	cbz	w0, 10c14 <gcc_cp_fe_context@@Base+0x2be0>
   10bd4:	mov	x0, x20
   10bd8:	mov	x1, x22
   10bdc:	bl	c0d0 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0x110>
   10be0:	cbz	w0, 10c14 <gcc_cp_fe_context@@Base+0x2be0>
   10be4:	mov	x0, x20
   10be8:	mov	x1, x21
   10bec:	bl	ce24 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xe64>
   10bf0:	cbz	w0, 10c14 <gcc_cp_fe_context@@Base+0x2be0>
   10bf4:	mov	x0, x20
   10bf8:	bl	ca34 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xa74>
   10bfc:	cbz	w0, 10c14 <gcc_cp_fe_context@@Base+0x2be0>
   10c00:	mov	x0, x20
   10c04:	mov	x1, x19
   10c08:	bl	ca4c <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xa8c>
   10c0c:	cmp	w0, #0x0
   10c10:	cset	w0, ne  // ne = any
   10c14:	ldp	x20, x19, [sp, #48]
   10c18:	ldp	x22, x21, [sp, #32]
   10c1c:	ldr	x23, [sp, #16]
   10c20:	ldp	x29, x30, [sp], #64
   10c24:	ret
   10c28:	stp	x29, x30, [sp, #-64]!
   10c2c:	str	x23, [sp, #16]
   10c30:	stp	x22, x21, [sp, #32]
   10c34:	stp	x20, x19, [sp, #48]
   10c38:	mov	x29, sp
   10c3c:	mov	x23, x1
   10c40:	mov	w1, #0x51                  	// #81
   10c44:	mov	x21, x4
   10c48:	mov	x22, x3
   10c4c:	mov	x19, x2
   10c50:	mov	x20, x0
   10c54:	bl	11b24 <gcc_cp_fe_context@@Base+0x3af0>
   10c58:	cbz	w0, 10cbc <gcc_cp_fe_context@@Base+0x2c88>
   10c5c:	mov	x0, x20
   10c60:	mov	x1, x23
   10c64:	bl	11f88 <gcc_cp_fe_context@@Base+0x3f54>
   10c68:	cbz	w0, 10cbc <gcc_cp_fe_context@@Base+0x2c88>
   10c6c:	mov	w1, #0x2                   	// #2
   10c70:	mov	x0, x20
   10c74:	bl	c098 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xd8>
   10c78:	cbz	w0, 10cbc <gcc_cp_fe_context@@Base+0x2c88>
   10c7c:	mov	x0, x20
   10c80:	mov	x1, x22
   10c84:	bl	11f88 <gcc_cp_fe_context@@Base+0x3f54>
   10c88:	cbz	w0, 10cbc <gcc_cp_fe_context@@Base+0x2c88>
   10c8c:	mov	x0, x20
   10c90:	mov	x1, x21
   10c94:	bl	c0d0 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0x110>
   10c98:	cbz	w0, 10cbc <gcc_cp_fe_context@@Base+0x2c88>
   10c9c:	mov	x0, x20
   10ca0:	bl	ca34 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xa74>
   10ca4:	cbz	w0, 10cbc <gcc_cp_fe_context@@Base+0x2c88>
   10ca8:	mov	x0, x20
   10cac:	mov	x1, x19
   10cb0:	bl	ca4c <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xa8c>
   10cb4:	cmp	w0, #0x0
   10cb8:	cset	w0, ne  // ne = any
   10cbc:	ldp	x20, x19, [sp, #48]
   10cc0:	ldp	x22, x21, [sp, #32]
   10cc4:	ldr	x23, [sp, #16]
   10cc8:	ldp	x29, x30, [sp], #64
   10ccc:	ret
   10cd0:	stp	x29, x30, [sp, #-80]!
   10cd4:	str	x25, [sp, #16]
   10cd8:	stp	x24, x23, [sp, #32]
   10cdc:	stp	x22, x21, [sp, #48]
   10ce0:	stp	x20, x19, [sp, #64]
   10ce4:	mov	x29, sp
   10ce8:	mov	x25, x1
   10cec:	mov	w1, #0x51                  	// #81
   10cf0:	mov	x21, x6
   10cf4:	mov	x22, x5
   10cf8:	mov	x23, x4
   10cfc:	mov	x24, x3
   10d00:	mov	x19, x2
   10d04:	mov	x20, x0
   10d08:	bl	11b24 <gcc_cp_fe_context@@Base+0x3af0>
   10d0c:	cbz	w0, 10d90 <gcc_cp_fe_context@@Base+0x2d5c>
   10d10:	mov	x0, x20
   10d14:	mov	x1, x25
   10d18:	bl	11f88 <gcc_cp_fe_context@@Base+0x3f54>
   10d1c:	cbz	w0, 10d90 <gcc_cp_fe_context@@Base+0x2d5c>
   10d20:	mov	w1, #0x4                   	// #4
   10d24:	mov	x0, x20
   10d28:	bl	c098 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xd8>
   10d2c:	cbz	w0, 10d90 <gcc_cp_fe_context@@Base+0x2d5c>
   10d30:	mov	x0, x20
   10d34:	mov	x1, x24
   10d38:	bl	11f88 <gcc_cp_fe_context@@Base+0x3f54>
   10d3c:	cbz	w0, 10d90 <gcc_cp_fe_context@@Base+0x2d5c>
   10d40:	mov	x0, x20
   10d44:	mov	x1, x23
   10d48:	bl	c0d0 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0x110>
   10d4c:	cbz	w0, 10d90 <gcc_cp_fe_context@@Base+0x2d5c>
   10d50:	mov	x0, x20
   10d54:	mov	x1, x22
   10d58:	bl	c0d0 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0x110>
   10d5c:	cbz	w0, 10d90 <gcc_cp_fe_context@@Base+0x2d5c>
   10d60:	mov	x0, x20
   10d64:	mov	x1, x21
   10d68:	bl	c0d0 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0x110>
   10d6c:	cbz	w0, 10d90 <gcc_cp_fe_context@@Base+0x2d5c>
   10d70:	mov	x0, x20
   10d74:	bl	ca34 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xa74>
   10d78:	cbz	w0, 10d90 <gcc_cp_fe_context@@Base+0x2d5c>
   10d7c:	mov	x0, x20
   10d80:	mov	x1, x19
   10d84:	bl	ca4c <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xa8c>
   10d88:	cmp	w0, #0x0
   10d8c:	cset	w0, ne  // ne = any
   10d90:	ldp	x20, x19, [sp, #64]
   10d94:	ldp	x22, x21, [sp, #48]
   10d98:	ldp	x24, x23, [sp, #32]
   10d9c:	ldr	x25, [sp, #16]
   10da0:	ldp	x29, x30, [sp], #80
   10da4:	ret
   10da8:	stp	x29, x30, [sp, #-64]!
   10dac:	stp	x24, x23, [sp, #16]
   10db0:	stp	x22, x21, [sp, #32]
   10db4:	stp	x20, x19, [sp, #48]
   10db8:	mov	x29, sp
   10dbc:	mov	x24, x1
   10dc0:	mov	w1, #0x51                  	// #81
   10dc4:	mov	x21, x5
   10dc8:	mov	x22, x4
   10dcc:	mov	x23, x3
   10dd0:	mov	x19, x2
   10dd4:	mov	x20, x0
   10dd8:	bl	11b24 <gcc_cp_fe_context@@Base+0x3af0>
   10ddc:	cbz	w0, 10e50 <gcc_cp_fe_context@@Base+0x2e1c>
   10de0:	mov	x0, x20
   10de4:	mov	x1, x24
   10de8:	bl	11f88 <gcc_cp_fe_context@@Base+0x3f54>
   10dec:	cbz	w0, 10e50 <gcc_cp_fe_context@@Base+0x2e1c>
   10df0:	mov	w1, #0x3                   	// #3
   10df4:	mov	x0, x20
   10df8:	bl	c098 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xd8>
   10dfc:	cbz	w0, 10e50 <gcc_cp_fe_context@@Base+0x2e1c>
   10e00:	mov	x0, x20
   10e04:	mov	x1, x23
   10e08:	bl	11f88 <gcc_cp_fe_context@@Base+0x3f54>
   10e0c:	cbz	w0, 10e50 <gcc_cp_fe_context@@Base+0x2e1c>
   10e10:	mov	x0, x20
   10e14:	mov	x1, x22
   10e18:	bl	c0d0 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0x110>
   10e1c:	cbz	w0, 10e50 <gcc_cp_fe_context@@Base+0x2e1c>
   10e20:	mov	x0, x20
   10e24:	mov	x1, x21
   10e28:	bl	daec <_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev@@Base+0x39c>
   10e2c:	cbz	w0, 10e50 <gcc_cp_fe_context@@Base+0x2e1c>
   10e30:	mov	x0, x20
   10e34:	bl	ca34 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xa74>
   10e38:	cbz	w0, 10e50 <gcc_cp_fe_context@@Base+0x2e1c>
   10e3c:	mov	x0, x20
   10e40:	mov	x1, x19
   10e44:	bl	ca4c <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xa8c>
   10e48:	cmp	w0, #0x0
   10e4c:	cset	w0, ne  // ne = any
   10e50:	ldp	x20, x19, [sp, #48]
   10e54:	ldp	x22, x21, [sp, #32]
   10e58:	ldp	x24, x23, [sp, #16]
   10e5c:	ldp	x29, x30, [sp], #64
   10e60:	ret
   10e64:	stp	x29, x30, [sp, #-80]!
   10e68:	str	x25, [sp, #16]
   10e6c:	stp	x24, x23, [sp, #32]
   10e70:	stp	x22, x21, [sp, #48]
   10e74:	stp	x20, x19, [sp, #64]
   10e78:	mov	x29, sp
   10e7c:	mov	x25, x1
   10e80:	mov	w1, #0x51                  	// #81
   10e84:	mov	x21, x6
   10e88:	mov	x22, x5
   10e8c:	mov	x23, x4
   10e90:	mov	x24, x3
   10e94:	mov	x19, x2
   10e98:	mov	x20, x0
   10e9c:	bl	11b24 <gcc_cp_fe_context@@Base+0x3af0>
   10ea0:	cbz	w0, 10f24 <gcc_cp_fe_context@@Base+0x2ef0>
   10ea4:	mov	x0, x20
   10ea8:	mov	x1, x25
   10eac:	bl	11f88 <gcc_cp_fe_context@@Base+0x3f54>
   10eb0:	cbz	w0, 10f24 <gcc_cp_fe_context@@Base+0x2ef0>
   10eb4:	mov	w1, #0x4                   	// #4
   10eb8:	mov	x0, x20
   10ebc:	bl	c098 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xd8>
   10ec0:	cbz	w0, 10f24 <gcc_cp_fe_context@@Base+0x2ef0>
   10ec4:	mov	x0, x20
   10ec8:	mov	x1, x24
   10ecc:	bl	11f88 <gcc_cp_fe_context@@Base+0x3f54>
   10ed0:	cbz	w0, 10f24 <gcc_cp_fe_context@@Base+0x2ef0>
   10ed4:	mov	x0, x20
   10ed8:	mov	x1, x23
   10edc:	bl	daec <_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev@@Base+0x39c>
   10ee0:	cbz	w0, 10f24 <gcc_cp_fe_context@@Base+0x2ef0>
   10ee4:	mov	x0, x20
   10ee8:	mov	x1, x22
   10eec:	bl	c0d0 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0x110>
   10ef0:	cbz	w0, 10f24 <gcc_cp_fe_context@@Base+0x2ef0>
   10ef4:	mov	x0, x20
   10ef8:	mov	x1, x21
   10efc:	bl	daec <_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev@@Base+0x39c>
   10f00:	cbz	w0, 10f24 <gcc_cp_fe_context@@Base+0x2ef0>
   10f04:	mov	x0, x20
   10f08:	bl	ca34 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xa74>
   10f0c:	cbz	w0, 10f24 <gcc_cp_fe_context@@Base+0x2ef0>
   10f10:	mov	x0, x20
   10f14:	mov	x1, x19
   10f18:	bl	ca4c <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xa8c>
   10f1c:	cmp	w0, #0x0
   10f20:	cset	w0, ne  // ne = any
   10f24:	ldp	x20, x19, [sp, #64]
   10f28:	ldp	x22, x21, [sp, #48]
   10f2c:	ldp	x24, x23, [sp, #32]
   10f30:	ldr	x25, [sp, #16]
   10f34:	ldp	x29, x30, [sp], #80
   10f38:	ret
   10f3c:	stp	x29, x30, [sp, #-64]!
   10f40:	stp	x24, x23, [sp, #16]
   10f44:	stp	x22, x21, [sp, #32]
   10f48:	stp	x20, x19, [sp, #48]
   10f4c:	mov	x29, sp
   10f50:	mov	x24, x1
   10f54:	mov	w1, #0x51                  	// #81
   10f58:	mov	x21, x5
   10f5c:	mov	w22, w4
   10f60:	mov	x23, x3
   10f64:	mov	x19, x2
   10f68:	mov	x20, x0
   10f6c:	bl	11b24 <gcc_cp_fe_context@@Base+0x3af0>
   10f70:	cbz	w0, 10fe4 <gcc_cp_fe_context@@Base+0x2fb0>
   10f74:	mov	x0, x20
   10f78:	mov	x1, x24
   10f7c:	bl	11f88 <gcc_cp_fe_context@@Base+0x3f54>
   10f80:	cbz	w0, 10fe4 <gcc_cp_fe_context@@Base+0x2fb0>
   10f84:	mov	w1, #0x3                   	// #3
   10f88:	mov	x0, x20
   10f8c:	bl	c098 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xd8>
   10f90:	cbz	w0, 10fe4 <gcc_cp_fe_context@@Base+0x2fb0>
   10f94:	mov	x0, x20
   10f98:	mov	x1, x23
   10f9c:	bl	c0d0 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0x110>
   10fa0:	cbz	w0, 10fe4 <gcc_cp_fe_context@@Base+0x2fb0>
   10fa4:	mov	x0, x20
   10fa8:	mov	w1, w22
   10fac:	bl	c098 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xd8>
   10fb0:	cbz	w0, 10fe4 <gcc_cp_fe_context@@Base+0x2fb0>
   10fb4:	mov	x0, x20
   10fb8:	mov	x1, x21
   10fbc:	bl	daec <_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev@@Base+0x39c>
   10fc0:	cbz	w0, 10fe4 <gcc_cp_fe_context@@Base+0x2fb0>
   10fc4:	mov	x0, x20
   10fc8:	bl	ca34 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xa74>
   10fcc:	cbz	w0, 10fe4 <gcc_cp_fe_context@@Base+0x2fb0>
   10fd0:	mov	x0, x20
   10fd4:	mov	x1, x19
   10fd8:	bl	ca4c <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xa8c>
   10fdc:	cmp	w0, #0x0
   10fe0:	cset	w0, ne  // ne = any
   10fe4:	ldp	x20, x19, [sp, #48]
   10fe8:	ldp	x22, x21, [sp, #32]
   10fec:	ldp	x24, x23, [sp, #16]
   10ff0:	ldp	x29, x30, [sp], #64
   10ff4:	ret
   10ff8:	stp	x29, x30, [sp, #-80]!
   10ffc:	stp	x26, x25, [sp, #16]
   11000:	stp	x24, x23, [sp, #32]
   11004:	stp	x22, x21, [sp, #48]
   11008:	stp	x20, x19, [sp, #64]
   1100c:	mov	x29, sp
   11010:	mov	x26, x1
   11014:	mov	w1, #0x51                  	// #81
   11018:	mov	w21, w7
   1101c:	mov	x22, x6
   11020:	mov	x23, x5
   11024:	mov	x24, x4
   11028:	mov	x25, x3
   1102c:	mov	x19, x2
   11030:	mov	x20, x0
   11034:	bl	11b24 <gcc_cp_fe_context@@Base+0x3af0>
   11038:	cbz	w0, 110cc <gcc_cp_fe_context@@Base+0x3098>
   1103c:	mov	x0, x20
   11040:	mov	x1, x26
   11044:	bl	11f88 <gcc_cp_fe_context@@Base+0x3f54>
   11048:	cbz	w0, 110cc <gcc_cp_fe_context@@Base+0x3098>
   1104c:	mov	w1, #0x5                   	// #5
   11050:	mov	x0, x20
   11054:	bl	c098 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xd8>
   11058:	cbz	w0, 110cc <gcc_cp_fe_context@@Base+0x3098>
   1105c:	mov	x0, x20
   11060:	mov	x1, x25
   11064:	bl	c0d0 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0x110>
   11068:	cbz	w0, 110cc <gcc_cp_fe_context@@Base+0x3098>
   1106c:	mov	x0, x20
   11070:	mov	x1, x24
   11074:	bl	d98c <_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev@@Base+0x23c>
   11078:	cbz	w0, 110cc <gcc_cp_fe_context@@Base+0x3098>
   1107c:	mov	x0, x20
   11080:	mov	x1, x23
   11084:	bl	c0d0 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0x110>
   11088:	cbz	w0, 110cc <gcc_cp_fe_context@@Base+0x3098>
   1108c:	mov	x0, x20
   11090:	mov	x1, x22
   11094:	bl	11f88 <gcc_cp_fe_context@@Base+0x3f54>
   11098:	cbz	w0, 110cc <gcc_cp_fe_context@@Base+0x3098>
   1109c:	mov	x0, x20
   110a0:	mov	w1, w21
   110a4:	bl	ca1c <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xa5c>
   110a8:	cbz	w0, 110cc <gcc_cp_fe_context@@Base+0x3098>
   110ac:	mov	x0, x20
   110b0:	bl	ca34 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xa74>
   110b4:	cbz	w0, 110cc <gcc_cp_fe_context@@Base+0x3098>
   110b8:	mov	x0, x20
   110bc:	mov	x1, x19
   110c0:	bl	ca4c <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xa8c>
   110c4:	cmp	w0, #0x0
   110c8:	cset	w0, ne  // ne = any
   110cc:	ldp	x20, x19, [sp, #64]
   110d0:	ldp	x22, x21, [sp, #48]
   110d4:	ldp	x24, x23, [sp, #32]
   110d8:	ldp	x26, x25, [sp, #16]
   110dc:	ldp	x29, x30, [sp], #80
   110e0:	ret
   110e4:	stp	x29, x30, [sp, #-80]!
   110e8:	str	x25, [sp, #16]
   110ec:	stp	x24, x23, [sp, #32]
   110f0:	stp	x22, x21, [sp, #48]
   110f4:	stp	x20, x19, [sp, #64]
   110f8:	mov	x29, sp
   110fc:	mov	x25, x1
   11100:	mov	w1, #0x51                  	// #81
   11104:	mov	w21, w6
   11108:	mov	x22, x5
   1110c:	mov	x23, x4
   11110:	mov	x24, x3
   11114:	mov	x19, x2
   11118:	mov	x20, x0
   1111c:	bl	11b24 <gcc_cp_fe_context@@Base+0x3af0>
   11120:	cbz	w0, 111a4 <gcc_cp_fe_context@@Base+0x3170>
   11124:	mov	x0, x20
   11128:	mov	x1, x25
   1112c:	bl	11f88 <gcc_cp_fe_context@@Base+0x3f54>
   11130:	cbz	w0, 111a4 <gcc_cp_fe_context@@Base+0x3170>
   11134:	mov	w1, #0x4                   	// #4
   11138:	mov	x0, x20
   1113c:	bl	c098 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xd8>
   11140:	cbz	w0, 111a4 <gcc_cp_fe_context@@Base+0x3170>
   11144:	mov	x0, x20
   11148:	mov	x1, x24
   1114c:	bl	c0d0 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0x110>
   11150:	cbz	w0, 111a4 <gcc_cp_fe_context@@Base+0x3170>
   11154:	mov	x0, x20
   11158:	mov	x1, x23
   1115c:	bl	d98c <_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev@@Base+0x23c>
   11160:	cbz	w0, 111a4 <gcc_cp_fe_context@@Base+0x3170>
   11164:	mov	x0, x20
   11168:	mov	x1, x22
   1116c:	bl	11f88 <gcc_cp_fe_context@@Base+0x3f54>
   11170:	cbz	w0, 111a4 <gcc_cp_fe_context@@Base+0x3170>
   11174:	mov	x0, x20
   11178:	mov	w1, w21
   1117c:	bl	ca1c <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xa5c>
   11180:	cbz	w0, 111a4 <gcc_cp_fe_context@@Base+0x3170>
   11184:	mov	x0, x20
   11188:	bl	ca34 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xa74>
   1118c:	cbz	w0, 111a4 <gcc_cp_fe_context@@Base+0x3170>
   11190:	mov	x0, x20
   11194:	mov	x1, x19
   11198:	bl	ca4c <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xa8c>
   1119c:	cmp	w0, #0x0
   111a0:	cset	w0, ne  // ne = any
   111a4:	ldp	x20, x19, [sp, #64]
   111a8:	ldp	x22, x21, [sp, #48]
   111ac:	ldp	x24, x23, [sp, #32]
   111b0:	ldr	x25, [sp, #16]
   111b4:	ldp	x29, x30, [sp], #80
   111b8:	ret
   111bc:	stp	x29, x30, [sp, #-80]!
   111c0:	str	x25, [sp, #16]
   111c4:	stp	x24, x23, [sp, #32]
   111c8:	stp	x22, x21, [sp, #48]
   111cc:	stp	x20, x19, [sp, #64]
   111d0:	mov	x29, sp
   111d4:	mov	x25, x1
   111d8:	mov	w1, #0x51                  	// #81
   111dc:	mov	w21, w6
   111e0:	mov	x22, x5
   111e4:	mov	x23, x4
   111e8:	mov	x24, x3
   111ec:	mov	x19, x2
   111f0:	mov	x20, x0
   111f4:	bl	11b24 <gcc_cp_fe_context@@Base+0x3af0>
   111f8:	cbz	w0, 1127c <gcc_cp_fe_context@@Base+0x3248>
   111fc:	mov	x0, x20
   11200:	mov	x1, x25
   11204:	bl	11f88 <gcc_cp_fe_context@@Base+0x3f54>
   11208:	cbz	w0, 1127c <gcc_cp_fe_context@@Base+0x3248>
   1120c:	mov	w1, #0x4                   	// #4
   11210:	mov	x0, x20
   11214:	bl	c098 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xd8>
   11218:	cbz	w0, 1127c <gcc_cp_fe_context@@Base+0x3248>
   1121c:	mov	x0, x20
   11220:	mov	x1, x24
   11224:	bl	c0d0 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0x110>
   11228:	cbz	w0, 1127c <gcc_cp_fe_context@@Base+0x3248>
   1122c:	mov	x0, x20
   11230:	mov	x1, x23
   11234:	bl	d824 <_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev@@Base+0xd4>
   11238:	cbz	w0, 1127c <gcc_cp_fe_context@@Base+0x3248>
   1123c:	mov	x0, x20
   11240:	mov	x1, x22
   11244:	bl	11f88 <gcc_cp_fe_context@@Base+0x3f54>
   11248:	cbz	w0, 1127c <gcc_cp_fe_context@@Base+0x3248>
   1124c:	mov	x0, x20
   11250:	mov	w1, w21
   11254:	bl	ca1c <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xa5c>
   11258:	cbz	w0, 1127c <gcc_cp_fe_context@@Base+0x3248>
   1125c:	mov	x0, x20
   11260:	bl	ca34 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xa74>
   11264:	cbz	w0, 1127c <gcc_cp_fe_context@@Base+0x3248>
   11268:	mov	x0, x20
   1126c:	mov	x1, x19
   11270:	bl	ca4c <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xa8c>
   11274:	cmp	w0, #0x0
   11278:	cset	w0, ne  // ne = any
   1127c:	ldp	x20, x19, [sp, #64]
   11280:	ldp	x22, x21, [sp, #48]
   11284:	ldp	x24, x23, [sp, #32]
   11288:	ldr	x25, [sp, #16]
   1128c:	ldp	x29, x30, [sp], #80
   11290:	ret
   11294:	stp	x29, x30, [sp, #-80]!
   11298:	stp	x26, x25, [sp, #16]
   1129c:	stp	x24, x23, [sp, #32]
   112a0:	stp	x22, x21, [sp, #48]
   112a4:	stp	x20, x19, [sp, #64]
   112a8:	mov	x29, sp
   112ac:	mov	x26, x1
   112b0:	mov	w1, #0x51                  	// #81
   112b4:	mov	w21, w7
   112b8:	mov	x22, x6
   112bc:	mov	w23, w5
   112c0:	mov	x24, x4
   112c4:	mov	w25, w3
   112c8:	mov	x19, x2
   112cc:	mov	x20, x0
   112d0:	bl	11b24 <gcc_cp_fe_context@@Base+0x3af0>
   112d4:	cbz	w0, 11368 <gcc_cp_fe_context@@Base+0x3334>
   112d8:	mov	x0, x20
   112dc:	mov	x1, x26
   112e0:	bl	11f88 <gcc_cp_fe_context@@Base+0x3f54>
   112e4:	cbz	w0, 11368 <gcc_cp_fe_context@@Base+0x3334>
   112e8:	mov	w1, #0x5                   	// #5
   112ec:	mov	x0, x20
   112f0:	bl	c098 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xd8>
   112f4:	cbz	w0, 11368 <gcc_cp_fe_context@@Base+0x3334>
   112f8:	mov	x0, x20
   112fc:	mov	w1, w25
   11300:	bl	c098 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xd8>
   11304:	cbz	w0, 11368 <gcc_cp_fe_context@@Base+0x3334>
   11308:	mov	x0, x20
   1130c:	mov	x1, x24
   11310:	bl	c0d0 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0x110>
   11314:	cbz	w0, 11368 <gcc_cp_fe_context@@Base+0x3334>
   11318:	mov	x0, x20
   1131c:	mov	w1, w23
   11320:	bl	10410 <gcc_cp_fe_context@@Base+0x23dc>
   11324:	cbz	w0, 11368 <gcc_cp_fe_context@@Base+0x3334>
   11328:	mov	x0, x20
   1132c:	mov	x1, x22
   11330:	bl	11f88 <gcc_cp_fe_context@@Base+0x3f54>
   11334:	cbz	w0, 11368 <gcc_cp_fe_context@@Base+0x3334>
   11338:	mov	x0, x20
   1133c:	mov	w1, w21
   11340:	bl	ca1c <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xa5c>
   11344:	cbz	w0, 11368 <gcc_cp_fe_context@@Base+0x3334>
   11348:	mov	x0, x20
   1134c:	bl	ca34 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xa74>
   11350:	cbz	w0, 11368 <gcc_cp_fe_context@@Base+0x3334>
   11354:	mov	x0, x20
   11358:	mov	x1, x19
   1135c:	bl	ca4c <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xa8c>
   11360:	cmp	w0, #0x0
   11364:	cset	w0, ne  // ne = any
   11368:	ldp	x20, x19, [sp, #64]
   1136c:	ldp	x22, x21, [sp, #48]
   11370:	ldp	x24, x23, [sp, #32]
   11374:	ldp	x26, x25, [sp, #16]
   11378:	ldp	x29, x30, [sp], #80
   1137c:	ret
   11380:	stp	x29, x30, [sp, #-80]!
   11384:	stp	x26, x25, [sp, #16]
   11388:	stp	x24, x23, [sp, #32]
   1138c:	stp	x22, x21, [sp, #48]
   11390:	stp	x20, x19, [sp, #64]
   11394:	mov	x29, sp
   11398:	mov	x26, x1
   1139c:	mov	w1, #0x51                  	// #81
   113a0:	mov	x21, x7
   113a4:	mov	x22, x6
   113a8:	mov	w23, w5
   113ac:	mov	x24, x4
   113b0:	mov	x25, x3
   113b4:	mov	x19, x2
   113b8:	mov	x20, x0
   113bc:	bl	11b24 <gcc_cp_fe_context@@Base+0x3af0>
   113c0:	cbz	w0, 11454 <gcc_cp_fe_context@@Base+0x3420>
   113c4:	mov	x0, x20
   113c8:	mov	x1, x26
   113cc:	bl	11f88 <gcc_cp_fe_context@@Base+0x3f54>
   113d0:	cbz	w0, 11454 <gcc_cp_fe_context@@Base+0x3420>
   113d4:	mov	w1, #0x5                   	// #5
   113d8:	mov	x0, x20
   113dc:	bl	c098 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xd8>
   113e0:	cbz	w0, 11454 <gcc_cp_fe_context@@Base+0x3420>
   113e4:	mov	x0, x20
   113e8:	mov	x1, x25
   113ec:	bl	11f88 <gcc_cp_fe_context@@Base+0x3f54>
   113f0:	cbz	w0, 11454 <gcc_cp_fe_context@@Base+0x3420>
   113f4:	mov	x0, x20
   113f8:	mov	x1, x24
   113fc:	bl	c0d0 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0x110>
   11400:	cbz	w0, 11454 <gcc_cp_fe_context@@Base+0x3420>
   11404:	mov	x0, x20
   11408:	mov	w1, w23
   1140c:	bl	10410 <gcc_cp_fe_context@@Base+0x23dc>
   11410:	cbz	w0, 11454 <gcc_cp_fe_context@@Base+0x3420>
   11414:	mov	x0, x20
   11418:	mov	x1, x22
   1141c:	bl	ce24 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xe64>
   11420:	cbz	w0, 11454 <gcc_cp_fe_context@@Base+0x3420>
   11424:	mov	x0, x20
   11428:	mov	x1, x21
   1142c:	bl	ce24 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xe64>
   11430:	cbz	w0, 11454 <gcc_cp_fe_context@@Base+0x3420>
   11434:	mov	x0, x20
   11438:	bl	ca34 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xa74>
   1143c:	cbz	w0, 11454 <gcc_cp_fe_context@@Base+0x3420>
   11440:	mov	x0, x20
   11444:	mov	x1, x19
   11448:	bl	ca4c <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xa8c>
   1144c:	cmp	w0, #0x0
   11450:	cset	w0, ne  // ne = any
   11454:	ldp	x20, x19, [sp, #64]
   11458:	ldp	x22, x21, [sp, #48]
   1145c:	ldp	x24, x23, [sp, #32]
   11460:	ldp	x26, x25, [sp, #16]
   11464:	ldp	x29, x30, [sp], #80
   11468:	ret
   1146c:	stp	x29, x30, [sp, #-48]!
   11470:	stp	x22, x21, [sp, #16]
   11474:	stp	x20, x19, [sp, #32]
   11478:	mov	x29, sp
   1147c:	mov	x22, x1
   11480:	mov	w1, #0x51                  	// #81
   11484:	mov	x21, x3
   11488:	mov	x19, x2
   1148c:	mov	x20, x0
   11490:	bl	11b24 <gcc_cp_fe_context@@Base+0x3af0>
   11494:	cbz	w0, 114e8 <gcc_cp_fe_context@@Base+0x34b4>
   11498:	mov	x0, x20
   1149c:	mov	x1, x22
   114a0:	bl	11f88 <gcc_cp_fe_context@@Base+0x3f54>
   114a4:	cbz	w0, 114e8 <gcc_cp_fe_context@@Base+0x34b4>
   114a8:	mov	w1, #0x1                   	// #1
   114ac:	mov	x0, x20
   114b0:	bl	c098 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xd8>
   114b4:	cbz	w0, 114e8 <gcc_cp_fe_context@@Base+0x34b4>
   114b8:	mov	x0, x20
   114bc:	mov	x1, x21
   114c0:	bl	ce24 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xe64>
   114c4:	cbz	w0, 114e8 <gcc_cp_fe_context@@Base+0x34b4>
   114c8:	mov	x0, x20
   114cc:	bl	ca34 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xa74>
   114d0:	cbz	w0, 114e8 <gcc_cp_fe_context@@Base+0x34b4>
   114d4:	mov	x0, x20
   114d8:	mov	x1, x19
   114dc:	bl	cb28 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xb68>
   114e0:	cmp	w0, #0x0
   114e4:	cset	w0, ne  // ne = any
   114e8:	ldp	x20, x19, [sp, #32]
   114ec:	ldp	x22, x21, [sp, #16]
   114f0:	ldp	x29, x30, [sp], #48
   114f4:	ret
   114f8:	stp	x29, x30, [sp, #-80]!
   114fc:	stp	x26, x25, [sp, #16]
   11500:	stp	x24, x23, [sp, #32]
   11504:	stp	x22, x21, [sp, #48]
   11508:	stp	x20, x19, [sp, #64]
   1150c:	mov	x29, sp
   11510:	mov	x26, x1
   11514:	mov	w1, #0x51                  	// #81
   11518:	mov	w21, w7
   1151c:	mov	x22, x6
   11520:	mov	w23, w5
   11524:	mov	x24, x4
   11528:	mov	x25, x3
   1152c:	mov	x19, x2
   11530:	mov	x20, x0
   11534:	bl	11b24 <gcc_cp_fe_context@@Base+0x3af0>
   11538:	cbz	w0, 115cc <gcc_cp_fe_context@@Base+0x3598>
   1153c:	mov	x0, x20
   11540:	mov	x1, x26
   11544:	bl	11f88 <gcc_cp_fe_context@@Base+0x3f54>
   11548:	cbz	w0, 115cc <gcc_cp_fe_context@@Base+0x3598>
   1154c:	mov	w1, #0x5                   	// #5
   11550:	mov	x0, x20
   11554:	bl	c098 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xd8>
   11558:	cbz	w0, 115cc <gcc_cp_fe_context@@Base+0x3598>
   1155c:	mov	x0, x20
   11560:	mov	x1, x25
   11564:	bl	11f88 <gcc_cp_fe_context@@Base+0x3f54>
   11568:	cbz	w0, 115cc <gcc_cp_fe_context@@Base+0x3598>
   1156c:	mov	x0, x20
   11570:	mov	x1, x24
   11574:	bl	c0d0 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0x110>
   11578:	cbz	w0, 115cc <gcc_cp_fe_context@@Base+0x3598>
   1157c:	mov	x0, x20
   11580:	mov	w1, w23
   11584:	bl	10410 <gcc_cp_fe_context@@Base+0x23dc>
   11588:	cbz	w0, 115cc <gcc_cp_fe_context@@Base+0x3598>
   1158c:	mov	x0, x20
   11590:	mov	x1, x22
   11594:	bl	11f88 <gcc_cp_fe_context@@Base+0x3f54>
   11598:	cbz	w0, 115cc <gcc_cp_fe_context@@Base+0x3598>
   1159c:	mov	x0, x20
   115a0:	mov	w1, w21
   115a4:	bl	ca1c <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xa5c>
   115a8:	cbz	w0, 115cc <gcc_cp_fe_context@@Base+0x3598>
   115ac:	mov	x0, x20
   115b0:	bl	ca34 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xa74>
   115b4:	cbz	w0, 115cc <gcc_cp_fe_context@@Base+0x3598>
   115b8:	mov	x0, x20
   115bc:	mov	x1, x19
   115c0:	bl	ca4c <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xa8c>
   115c4:	cmp	w0, #0x0
   115c8:	cset	w0, ne  // ne = any
   115cc:	ldp	x20, x19, [sp, #64]
   115d0:	ldp	x22, x21, [sp, #48]
   115d4:	ldp	x24, x23, [sp, #32]
   115d8:	ldp	x26, x25, [sp, #16]
   115dc:	ldp	x29, x30, [sp], #80
   115e0:	ret
   115e4:	stp	x29, x30, [sp, #-64]!
   115e8:	stp	x24, x23, [sp, #16]
   115ec:	stp	x22, x21, [sp, #32]
   115f0:	stp	x20, x19, [sp, #48]
   115f4:	mov	x29, sp
   115f8:	mov	x24, x1
   115fc:	mov	w1, #0x51                  	// #81
   11600:	mov	x21, x5
   11604:	mov	x22, x4
   11608:	mov	x23, x3
   1160c:	mov	x19, x2
   11610:	mov	x20, x0
   11614:	bl	11b24 <gcc_cp_fe_context@@Base+0x3af0>
   11618:	cbz	w0, 1168c <gcc_cp_fe_context@@Base+0x3658>
   1161c:	mov	x0, x20
   11620:	mov	x1, x24
   11624:	bl	11f88 <gcc_cp_fe_context@@Base+0x3f54>
   11628:	cbz	w0, 1168c <gcc_cp_fe_context@@Base+0x3658>
   1162c:	mov	w1, #0x3                   	// #3
   11630:	mov	x0, x20
   11634:	bl	c098 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xd8>
   11638:	cbz	w0, 1168c <gcc_cp_fe_context@@Base+0x3658>
   1163c:	mov	x0, x20
   11640:	mov	x1, x23
   11644:	bl	c0d0 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0x110>
   11648:	cbz	w0, 1168c <gcc_cp_fe_context@@Base+0x3658>
   1164c:	mov	x0, x20
   11650:	mov	x1, x22
   11654:	bl	11f88 <gcc_cp_fe_context@@Base+0x3f54>
   11658:	cbz	w0, 1168c <gcc_cp_fe_context@@Base+0x3658>
   1165c:	mov	x0, x20
   11660:	mov	x1, x21
   11664:	bl	ce24 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xe64>
   11668:	cbz	w0, 1168c <gcc_cp_fe_context@@Base+0x3658>
   1166c:	mov	x0, x20
   11670:	bl	ca34 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xa74>
   11674:	cbz	w0, 1168c <gcc_cp_fe_context@@Base+0x3658>
   11678:	mov	x0, x20
   1167c:	mov	x1, x19
   11680:	bl	ca4c <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xa8c>
   11684:	cmp	w0, #0x0
   11688:	cset	w0, ne  // ne = any
   1168c:	ldp	x20, x19, [sp, #48]
   11690:	ldp	x22, x21, [sp, #32]
   11694:	ldp	x24, x23, [sp, #16]
   11698:	ldp	x29, x30, [sp], #64
   1169c:	ret
   116a0:	stp	x29, x30, [sp, #-64]!
   116a4:	str	x23, [sp, #16]
   116a8:	stp	x22, x21, [sp, #32]
   116ac:	stp	x20, x19, [sp, #48]
   116b0:	mov	x29, sp
   116b4:	mov	x23, x1
   116b8:	mov	w1, #0x51                  	// #81
   116bc:	mov	x21, x4
   116c0:	mov	x22, x3
   116c4:	mov	x19, x2
   116c8:	mov	x20, x0
   116cc:	bl	11b24 <gcc_cp_fe_context@@Base+0x3af0>
   116d0:	cbz	w0, 11734 <gcc_cp_fe_context@@Base+0x3700>
   116d4:	mov	x0, x20
   116d8:	mov	x1, x23
   116dc:	bl	11f88 <gcc_cp_fe_context@@Base+0x3f54>
   116e0:	cbz	w0, 11734 <gcc_cp_fe_context@@Base+0x3700>
   116e4:	mov	w1, #0x2                   	// #2
   116e8:	mov	x0, x20
   116ec:	bl	c098 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xd8>
   116f0:	cbz	w0, 11734 <gcc_cp_fe_context@@Base+0x3700>
   116f4:	mov	x0, x20
   116f8:	mov	x1, x22
   116fc:	bl	c0d0 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0x110>
   11700:	cbz	w0, 11734 <gcc_cp_fe_context@@Base+0x3700>
   11704:	mov	x0, x20
   11708:	mov	x1, x21
   1170c:	bl	12194 <gcc_cp_fe_context@@Base+0x4160>
   11710:	cbz	w0, 11734 <gcc_cp_fe_context@@Base+0x3700>
   11714:	mov	x0, x20
   11718:	bl	ca34 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xa74>
   1171c:	cbz	w0, 11734 <gcc_cp_fe_context@@Base+0x3700>
   11720:	mov	x0, x20
   11724:	mov	x1, x19
   11728:	bl	ca4c <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xa8c>
   1172c:	cmp	w0, #0x0
   11730:	cset	w0, ne  // ne = any
   11734:	ldp	x20, x19, [sp, #48]
   11738:	ldp	x22, x21, [sp, #32]
   1173c:	ldr	x23, [sp, #16]
   11740:	ldp	x29, x30, [sp], #64
   11744:	ret
   11748:	stp	x29, x30, [sp, #-80]!
   1174c:	str	x25, [sp, #16]
   11750:	stp	x24, x23, [sp, #32]
   11754:	stp	x22, x21, [sp, #48]
   11758:	stp	x20, x19, [sp, #64]
   1175c:	mov	x29, sp
   11760:	mov	x25, x1
   11764:	mov	w1, #0x51                  	// #81
   11768:	mov	w21, w6
   1176c:	mov	w22, w5
   11770:	mov	x23, x4
   11774:	mov	x24, x3
   11778:	mov	x19, x2
   1177c:	mov	x20, x0
   11780:	bl	11b24 <gcc_cp_fe_context@@Base+0x3af0>
   11784:	cbz	w0, 11808 <gcc_cp_fe_context@@Base+0x37d4>
   11788:	mov	x0, x20
   1178c:	mov	x1, x25
   11790:	bl	11f88 <gcc_cp_fe_context@@Base+0x3f54>
   11794:	cbz	w0, 11808 <gcc_cp_fe_context@@Base+0x37d4>
   11798:	mov	w1, #0x4                   	// #4
   1179c:	mov	x0, x20
   117a0:	bl	c098 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xd8>
   117a4:	cbz	w0, 11808 <gcc_cp_fe_context@@Base+0x37d4>
   117a8:	mov	x0, x20
   117ac:	mov	x1, x24
   117b0:	bl	c0d0 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0x110>
   117b4:	cbz	w0, 11808 <gcc_cp_fe_context@@Base+0x37d4>
   117b8:	mov	x0, x20
   117bc:	mov	x1, x23
   117c0:	bl	c0d0 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0x110>
   117c4:	cbz	w0, 11808 <gcc_cp_fe_context@@Base+0x37d4>
   117c8:	mov	x0, x20
   117cc:	mov	w1, w22
   117d0:	bl	11820 <gcc_cp_fe_context@@Base+0x37ec>
   117d4:	cbz	w0, 11808 <gcc_cp_fe_context@@Base+0x37d4>
   117d8:	mov	x0, x20
   117dc:	mov	w1, w21
   117e0:	bl	10698 <gcc_cp_fe_context@@Base+0x2664>
   117e4:	cbz	w0, 11808 <gcc_cp_fe_context@@Base+0x37d4>
   117e8:	mov	x0, x20
   117ec:	bl	ca34 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xa74>
   117f0:	cbz	w0, 11808 <gcc_cp_fe_context@@Base+0x37d4>
   117f4:	mov	x0, x20
   117f8:	mov	x1, x19
   117fc:	bl	ca4c <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xa8c>
   11800:	cmp	w0, #0x0
   11804:	cset	w0, ne  // ne = any
   11808:	ldp	x20, x19, [sp, #64]
   1180c:	ldp	x22, x21, [sp, #48]
   11810:	ldp	x24, x23, [sp, #32]
   11814:	ldr	x25, [sp, #16]
   11818:	ldp	x29, x30, [sp], #80
   1181c:	ret
   11820:	stp	x29, x30, [sp, #-16]!
   11824:	mov	x29, sp
   11828:	mov	w1, w1
   1182c:	bl	11f10 <gcc_cp_fe_context@@Base+0x3edc>
   11830:	ldp	x29, x30, [sp], #16
   11834:	ret
   11838:	stp	x29, x30, [sp, #-64]!
   1183c:	str	x23, [sp, #16]
   11840:	stp	x22, x21, [sp, #32]
   11844:	stp	x20, x19, [sp, #48]
   11848:	mov	x29, sp
   1184c:	mov	x23, x1
   11850:	mov	w1, #0x51                  	// #81
   11854:	mov	w21, w4
   11858:	mov	x22, x3
   1185c:	mov	x19, x2
   11860:	mov	x20, x0
   11864:	bl	11b24 <gcc_cp_fe_context@@Base+0x3af0>
   11868:	cbz	w0, 118cc <gcc_cp_fe_context@@Base+0x3898>
   1186c:	mov	x0, x20
   11870:	mov	x1, x23
   11874:	bl	11f88 <gcc_cp_fe_context@@Base+0x3f54>
   11878:	cbz	w0, 118cc <gcc_cp_fe_context@@Base+0x3898>
   1187c:	mov	w1, #0x2                   	// #2
   11880:	mov	x0, x20
   11884:	bl	c098 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xd8>
   11888:	cbz	w0, 118cc <gcc_cp_fe_context@@Base+0x3898>
   1188c:	mov	x0, x20
   11890:	mov	x1, x22
   11894:	bl	c0d0 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0x110>
   11898:	cbz	w0, 118cc <gcc_cp_fe_context@@Base+0x3898>
   1189c:	mov	x0, x20
   118a0:	mov	w1, w21
   118a4:	bl	11820 <gcc_cp_fe_context@@Base+0x37ec>
   118a8:	cbz	w0, 118cc <gcc_cp_fe_context@@Base+0x3898>
   118ac:	mov	x0, x20
   118b0:	bl	ca34 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xa74>
   118b4:	cbz	w0, 118cc <gcc_cp_fe_context@@Base+0x3898>
   118b8:	mov	x0, x20
   118bc:	mov	x1, x19
   118c0:	bl	ca4c <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xa8c>
   118c4:	cmp	w0, #0x0
   118c8:	cset	w0, ne  // ne = any
   118cc:	ldp	x20, x19, [sp, #48]
   118d0:	ldp	x22, x21, [sp, #32]
   118d4:	ldr	x23, [sp, #16]
   118d8:	ldp	x29, x30, [sp], #64
   118dc:	ret
   118e0:	stp	x29, x30, [sp, #-80]!
   118e4:	str	x25, [sp, #16]
   118e8:	stp	x24, x23, [sp, #32]
   118ec:	stp	x22, x21, [sp, #48]
   118f0:	stp	x20, x19, [sp, #64]
   118f4:	mov	x29, sp
   118f8:	mov	x25, x1
   118fc:	mov	w1, #0x51                  	// #81
   11900:	mov	w21, w6
   11904:	mov	x22, x5
   11908:	mov	x23, x4
   1190c:	mov	x24, x3
   11910:	mov	x19, x2
   11914:	mov	x20, x0
   11918:	bl	11b24 <gcc_cp_fe_context@@Base+0x3af0>
   1191c:	cbz	w0, 119a0 <gcc_cp_fe_context@@Base+0x396c>
   11920:	mov	x0, x20
   11924:	mov	x1, x25
   11928:	bl	11f88 <gcc_cp_fe_context@@Base+0x3f54>
   1192c:	cbz	w0, 119a0 <gcc_cp_fe_context@@Base+0x396c>
   11930:	mov	w1, #0x4                   	// #4
   11934:	mov	x0, x20
   11938:	bl	c098 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xd8>
   1193c:	cbz	w0, 119a0 <gcc_cp_fe_context@@Base+0x396c>
   11940:	mov	x0, x20
   11944:	mov	x1, x24
   11948:	bl	c0d0 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0x110>
   1194c:	cbz	w0, 119a0 <gcc_cp_fe_context@@Base+0x396c>
   11950:	mov	x0, x20
   11954:	mov	x1, x23
   11958:	bl	11f88 <gcc_cp_fe_context@@Base+0x3f54>
   1195c:	cbz	w0, 119a0 <gcc_cp_fe_context@@Base+0x396c>
   11960:	mov	x0, x20
   11964:	mov	x1, x22
   11968:	bl	11f88 <gcc_cp_fe_context@@Base+0x3f54>
   1196c:	cbz	w0, 119a0 <gcc_cp_fe_context@@Base+0x396c>
   11970:	mov	x0, x20
   11974:	mov	w1, w21
   11978:	bl	ca1c <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xa5c>
   1197c:	cbz	w0, 119a0 <gcc_cp_fe_context@@Base+0x396c>
   11980:	mov	x0, x20
   11984:	bl	ca34 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xa74>
   11988:	cbz	w0, 119a0 <gcc_cp_fe_context@@Base+0x396c>
   1198c:	mov	x0, x20
   11990:	mov	x1, x19
   11994:	bl	cb28 <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xb68>
   11998:	cmp	w0, #0x0
   1199c:	cset	w0, ne  // ne = any
   119a0:	ldp	x20, x19, [sp, #64]
   119a4:	ldp	x22, x21, [sp, #48]
   119a8:	ldp	x24, x23, [sp, #32]
   119ac:	ldr	x25, [sp, #16]
   119b0:	ldp	x29, x30, [sp], #80
   119b4:	ret
   119b8:	stp	x29, x30, [sp, #-32]!
   119bc:	str	x19, [sp, #16]
   119c0:	mov	x29, sp
   119c4:	adrp	x4, 2e000 <xexit@@Base+0x14c60>
   119c8:	adrp	x3, 2e000 <xexit@@Base+0x14c60>
   119cc:	ldr	x4, [x4, #3872]
   119d0:	ldr	x3, [x3, #3392]
   119d4:	adrp	x1, 11000 <gcc_cp_fe_context@@Base+0x2fcc>
   119d8:	adrp	x2, 11000 <gcc_cp_fe_context@@Base+0x2fcc>
   119dc:	mov	x19, x0
   119e0:	add	x1, x1, #0xa04
   119e4:	add	x2, x2, #0xa1c
   119e8:	mov	w0, #0xa                   	// #10
   119ec:	mov	x5, x3
   119f0:	bl	9190 <htab_create_alloc@plt>
   119f4:	str	x0, [x19]
   119f8:	ldr	x19, [sp, #16]
   119fc:	ldp	x29, x30, [sp], #32
   11a00:	ret
   11a04:	stp	x29, x30, [sp, #-16]!
   11a08:	mov	x29, sp
   11a0c:	ldr	x0, [x0]
   11a10:	bl	94e0 <htab_hash_string@plt>
   11a14:	ldp	x29, x30, [sp], #16
   11a18:	ret
   11a1c:	stp	x29, x30, [sp, #-16]!
   11a20:	ldr	x0, [x0]
   11a24:	ldr	x1, [x1]
   11a28:	mov	x29, sp
   11a2c:	bl	9800 <strcmp@plt>
   11a30:	cmp	w0, #0x0
   11a34:	cset	w0, eq  // eq = none
   11a38:	ldp	x29, x30, [sp], #16
   11a3c:	ret
   11a40:	stp	x29, x30, [sp, #-16]!
   11a44:	mov	x29, sp
   11a48:	ldr	x0, [x0]
   11a4c:	bl	99e0 <htab_delete@plt>
   11a50:	ldp	x29, x30, [sp], #16
   11a54:	ret
   11a58:	bl	a080 <_ZSt8distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_@@Base+0x40>
   11a5c:	sub	sp, sp, #0x30
   11a60:	stp	x29, x30, [sp, #16]
   11a64:	str	x19, [sp, #32]
   11a68:	add	x29, sp, #0x10
   11a6c:	stp	x1, x2, [sp]
   11a70:	ldr	x0, [x0]
   11a74:	mov	x1, sp
   11a78:	mov	w2, #0x1                   	// #1
   11a7c:	bl	9680 <htab_find_slot@plt>
   11a80:	mov	x19, x0
   11a84:	mov	w0, #0x10                  	// #16
   11a88:	bl	9790 <xmalloc@plt>
   11a8c:	str	x0, [x19]
   11a90:	ldr	q0, [sp]
   11a94:	ldr	x19, [sp, #32]
   11a98:	ldp	x29, x30, [sp, #16]
   11a9c:	str	q0, [x0]
   11aa0:	add	sp, sp, #0x30
   11aa4:	ret
   11aa8:	sub	sp, sp, #0x20
   11aac:	stp	x29, x30, [sp, #16]
   11ab0:	add	x29, sp, #0x10
   11ab4:	str	x1, [sp]
   11ab8:	ldr	x0, [x0]
   11abc:	mov	x1, sp
   11ac0:	bl	9380 <htab_find@plt>
   11ac4:	cbz	x0, 11acc <gcc_cp_fe_context@@Base+0x3a98>
   11ac8:	ldr	x0, [x0, #8]
   11acc:	ldp	x29, x30, [sp, #16]
   11ad0:	add	sp, sp, #0x20
   11ad4:	ret
   11ad8:	stp	x29, x30, [sp, #-16]!
   11adc:	adrp	x8, 2e000 <xexit@@Base+0x14c60>
   11ae0:	add	x8, x8, #0x9b8
   11ae4:	str	x8, [x0], #16
   11ae8:	mov	x29, sp
   11aec:	bl	11a40 <gcc_cp_fe_context@@Base+0x3a0c>
   11af0:	ldp	x29, x30, [sp], #16
   11af4:	ret
   11af8:	stp	x29, x30, [sp, #-32]!
   11afc:	str	x19, [sp, #16]
   11b00:	mov	x29, sp
   11b04:	mov	x19, x0
   11b08:	bl	11ad8 <gcc_cp_fe_context@@Base+0x3aa4>
   11b0c:	mov	x0, x19
   11b10:	bl	94f0 <_ZdlPv@plt>
   11b14:	ldr	x19, [sp, #16]
   11b18:	ldp	x29, x30, [sp], #32
   11b1c:	ret
   11b20:	ret
   11b24:	sub	sp, sp, #0x20
   11b28:	stp	x29, x30, [sp, #16]
   11b2c:	add	x29, sp, #0x10
   11b30:	sturb	w1, [x29, #-4]
   11b34:	ldr	w0, [x0, #8]
   11b38:	sub	x1, x29, #0x4
   11b3c:	mov	w2, #0x1                   	// #1
   11b40:	bl	9840 <write@plt>
   11b44:	ldp	x29, x30, [sp, #16]
   11b48:	cmp	x0, #0x1
   11b4c:	cset	w0, eq  // eq = none
   11b50:	add	sp, sp, #0x20
   11b54:	ret
   11b58:	stp	x29, x30, [sp, #-32]!
   11b5c:	str	x19, [sp, #16]
   11b60:	mov	x29, sp
   11b64:	ldr	w0, [x0, #8]
   11b68:	sxtw	x19, w2
   11b6c:	mov	x2, x19
   11b70:	bl	9840 <write@plt>
   11b74:	cmp	x0, x19
   11b78:	ldr	x19, [sp, #16]
   11b7c:	cset	w0, eq  // eq = none
   11b80:	ldp	x29, x30, [sp], #32
   11b84:	ret
   11b88:	stp	x29, x30, [sp, #-32]!
   11b8c:	str	x19, [sp, #16]
   11b90:	mov	x29, sp
   11b94:	ldr	w0, [x0, #8]
   11b98:	mov	w19, w1
   11b9c:	add	x1, x29, #0x1c
   11ba0:	mov	w2, #0x1                   	// #1
   11ba4:	bl	9320 <read@plt>
   11ba8:	ldrb	w8, [x29, #28]
   11bac:	cmp	x0, #0x1
   11bb0:	cset	w9, eq  // eq = none
   11bb4:	cmp	w8, w19, uxtb
   11bb8:	ldr	x19, [sp, #16]
   11bbc:	cset	w8, eq  // eq = none
   11bc0:	and	w0, w9, w8
   11bc4:	ldp	x29, x30, [sp], #32
   11bc8:	ret
   11bcc:	stp	x29, x30, [sp, #-32]!
   11bd0:	str	x19, [sp, #16]
   11bd4:	mov	x29, sp
   11bd8:	ldr	w0, [x0, #8]
   11bdc:	sxtw	x19, w2
   11be0:	mov	x2, x19
   11be4:	bl	9320 <read@plt>
   11be8:	cmp	x0, x19
   11bec:	ldr	x19, [sp, #16]
   11bf0:	cset	w0, eq  // eq = none
   11bf4:	ldp	x29, x30, [sp], #32
   11bf8:	ret
   11bfc:	stp	x29, x30, [sp, #-96]!
   11c00:	stp	x28, x27, [sp, #16]
   11c04:	stp	x26, x25, [sp, #32]
   11c08:	stp	x24, x23, [sp, #48]
   11c0c:	stp	x22, x21, [sp, #64]
   11c10:	stp	x20, x19, [sp, #80]
   11c14:	mov	x29, sp
   11c18:	sub	sp, sp, #0x490
   11c1c:	mvn	w8, w1
   11c20:	mov	x19, x0
   11c24:	add	x20, x0, #0x10
   11c28:	and	w22, w1, #0x1
   11c2c:	mov	w23, #0x1                   	// #1
   11c30:	sub	x24, x29, #0x90
   11c34:	and	w25, w8, #0x1
   11c38:	mov	x26, sp
   11c3c:	b	11c5c <gcc_cp_fe_context@@Base+0x3c28>
   11c40:	bl	96d0 <__errno_location@plt>
   11c44:	ldr	w8, [x0]
   11c48:	cmp	w8, #0x4
   11c4c:	cinc	w27, w23, eq  // eq = none
   11c50:	csel	w21, w21, wzr, eq  // eq = none
   11c54:	cmp	w27, #0x1
   11c58:	b.eq	11e68 <gcc_cp_fe_context@@Base+0x3e34>  // b.none
   11c5c:	movi	v0.2d, #0x0
   11c60:	stp	q0, q0, [x29, #-48]
   11c64:	stp	q0, q0, [x29, #-80]
   11c68:	stp	q0, q0, [x29, #-112]
   11c6c:	stp	q0, q0, [x29, #-144]
   11c70:	ldr	w8, [x19, #8]
   11c74:	add	w9, w8, #0x3f
   11c78:	cmp	w8, #0x0
   11c7c:	csel	w9, w9, w8, lt  // lt = tstop
   11c80:	asr	w10, w9, #6
   11c84:	sbfiz	x10, x10, #3, #32
   11c88:	ldr	x11, [x24, x10]
   11c8c:	and	w9, w9, #0xffffffc0
   11c90:	sub	w8, w8, w9
   11c94:	lsl	x8, x23, x8
   11c98:	orr	x8, x8, x11
   11c9c:	str	x8, [x24, x10]
   11ca0:	ldr	w8, [x19, #12]
   11ca4:	cmn	w8, #0x1
   11ca8:	b.eq	11cd8 <gcc_cp_fe_context@@Base+0x3ca4>  // b.none
   11cac:	add	w9, w8, #0x3f
   11cb0:	cmp	w8, #0x0
   11cb4:	csel	w9, w9, w8, lt  // lt = tstop
   11cb8:	asr	w10, w9, #6
   11cbc:	sbfiz	x10, x10, #3, #32
   11cc0:	ldr	x11, [x24, x10]
   11cc4:	and	w9, w9, #0xffffffc0
   11cc8:	sub	w8, w8, w9
   11ccc:	lsl	x8, x23, x8
   11cd0:	orr	x8, x11, x8
   11cd4:	str	x8, [x24, x10]
   11cd8:	sub	x1, x29, #0x90
   11cdc:	mov	w0, #0x400                 	// #1024
   11ce0:	mov	x2, xzr
   11ce4:	mov	x3, xzr
   11ce8:	mov	x4, xzr
   11cec:	bl	8ff0 <select@plt>
   11cf0:	cmn	w0, #0x1
   11cf4:	b.eq	11c40 <gcc_cp_fe_context@@Base+0x3c0c>  // b.none
   11cf8:	ldr	w0, [x19, #12]
   11cfc:	cmn	w0, #0x1
   11d00:	b.eq	11d6c <gcc_cp_fe_context@@Base+0x3d38>  // b.none
   11d04:	add	w8, w0, #0x3f
   11d08:	cmp	w0, #0x0
   11d0c:	csel	w8, w8, w0, lt  // lt = tstop
   11d10:	asr	w9, w8, #6
   11d14:	ldr	x9, [x24, w9, sxtw #3]
   11d18:	and	w8, w8, #0xffffffc0
   11d1c:	sub	w8, w0, w8
   11d20:	lsr	x8, x9, x8
   11d24:	tbz	w8, #0, 11d6c <gcc_cp_fe_context@@Base+0x3d38>
   11d28:	mov	x1, sp
   11d2c:	mov	w2, #0x3ff                 	// #1023
   11d30:	bl	9320 <read@plt>
   11d34:	tbnz	w0, #31, 11d60 <gcc_cp_fe_context@@Base+0x3d2c>
   11d38:	cbz	w0, 11d54 <gcc_cp_fe_context@@Base+0x3d20>
   11d3c:	strb	wzr, [x26, w0, sxtw]
   11d40:	ldr	x8, [x19]
   11d44:	mov	x1, sp
   11d48:	mov	x0, x19
   11d4c:	ldr	x8, [x8, #16]
   11d50:	blr	x8
   11d54:	mov	w27, wzr
   11d58:	cbnz	w27, 11c54 <gcc_cp_fe_context@@Base+0x3c20>
   11d5c:	b	11d6c <gcc_cp_fe_context@@Base+0x3d38>
   11d60:	mov	w21, wzr
   11d64:	mov	w27, #0x1                   	// #1
   11d68:	cbnz	w27, 11c54 <gcc_cp_fe_context@@Base+0x3c20>
   11d6c:	ldr	w0, [x19, #8]
   11d70:	add	w8, w0, #0x3f
   11d74:	cmp	w0, #0x0
   11d78:	csel	w8, w8, w0, lt  // lt = tstop
   11d7c:	asr	w9, w8, #6
   11d80:	ldr	x9, [x24, w9, sxtw #3]
   11d84:	and	w8, w8, #0xffffffc0
   11d88:	sub	w8, w0, w8
   11d8c:	lsr	x8, x9, x8
   11d90:	tbz	w8, #0, 11e60 <gcc_cp_fe_context@@Base+0x3e2c>
   11d94:	sub	x1, x29, #0x4
   11d98:	mov	w2, #0x1                   	// #1
   11d9c:	mov	w27, #0x1                   	// #1
   11da0:	bl	9320 <read@plt>
   11da4:	cmp	w0, #0x1
   11da8:	b.eq	11dc0 <gcc_cp_fe_context@@Base+0x3d8c>  // b.none
   11dac:	cbnz	w0, 11de4 <gcc_cp_fe_context@@Base+0x3db0>
   11db0:	mov	w27, #0x1                   	// #1
   11db4:	mov	w21, w25
   11db8:	cbnz	w27, 11c54 <gcc_cp_fe_context@@Base+0x3c20>
   11dbc:	b	11e60 <gcc_cp_fe_context@@Base+0x3e2c>
   11dc0:	ldurb	w8, [x29, #-4]
   11dc4:	cmp	w8, #0x51
   11dc8:	b.eq	11df0 <gcc_cp_fe_context@@Base+0x3dbc>  // b.none
   11dcc:	cmp	w8, #0x52
   11dd0:	b.ne	11e3c <gcc_cp_fe_context@@Base+0x3e08>  // b.any
   11dd4:	mov	w27, #0x1                   	// #1
   11dd8:	mov	w21, w22
   11ddc:	cbnz	w27, 11c54 <gcc_cp_fe_context@@Base+0x3c20>
   11de0:	b	11e60 <gcc_cp_fe_context@@Base+0x3e2c>
   11de4:	mov	w21, wzr
   11de8:	cbnz	w27, 11c54 <gcc_cp_fe_context@@Base+0x3c20>
   11dec:	b	11e60 <gcc_cp_fe_context@@Base+0x3e2c>
   11df0:	mov	x0, sp
   11df4:	bl	11ea4 <gcc_cp_fe_context@@Base+0x3e70>
   11df8:	mov	x0, sp
   11dfc:	mov	x1, x19
   11e00:	bl	11ea8 <gcc_cp_fe_context@@Base+0x3e74>
   11e04:	cbz	w0, 11e4c <gcc_cp_fe_context@@Base+0x3e18>
   11e08:	mov	x0, sp
   11e0c:	bl	11ec8 <gcc_cp_fe_context@@Base+0x3e94>
   11e10:	mov	x1, x0
   11e14:	mov	x0, x20
   11e18:	bl	11aa8 <gcc_cp_fe_context@@Base+0x3a74>
   11e1c:	mov	x8, x0
   11e20:	cbz	x0, 11e4c <gcc_cp_fe_context@@Base+0x3e18>
   11e24:	mov	x0, x19
   11e28:	blr	x8
   11e2c:	cmp	w0, #0x0
   11e30:	cset	w27, eq  // eq = none
   11e34:	csel	w21, wzr, w21, eq  // eq = none
   11e38:	b	11e54 <gcc_cp_fe_context@@Base+0x3e20>
   11e3c:	mov	w21, wzr
   11e40:	mov	w27, #0x1                   	// #1
   11e44:	cbnz	w27, 11c54 <gcc_cp_fe_context@@Base+0x3c20>
   11e48:	b	11e60 <gcc_cp_fe_context@@Base+0x3e2c>
   11e4c:	mov	w21, wzr
   11e50:	mov	w27, #0x1                   	// #1
   11e54:	mov	x0, sp
   11e58:	bl	11ed0 <gcc_cp_fe_context@@Base+0x3e9c>
   11e5c:	cbnz	w27, 11c54 <gcc_cp_fe_context@@Base+0x3c20>
   11e60:	mov	w27, wzr
   11e64:	b	11c54 <gcc_cp_fe_context@@Base+0x3c20>
   11e68:	mov	w0, w21
   11e6c:	add	sp, sp, #0x490
   11e70:	ldp	x20, x19, [sp, #80]
   11e74:	ldp	x22, x21, [sp, #64]
   11e78:	ldp	x24, x23, [sp, #48]
   11e7c:	ldp	x26, x25, [sp, #32]
   11e80:	ldp	x28, x27, [sp, #16]
   11e84:	ldp	x29, x30, [sp], #96
   11e88:	ret
   11e8c:	b	11e90 <gcc_cp_fe_context@@Base+0x3e5c>
   11e90:	mov	x19, x0
   11e94:	mov	x0, sp
   11e98:	bl	11ed0 <gcc_cp_fe_context@@Base+0x3e9c>
   11e9c:	mov	x0, x19
   11ea0:	bl	9a00 <_Unwind_Resume@plt>
   11ea4:	ret
   11ea8:	stp	x29, x30, [sp, #-16]!
   11eac:	mov	x29, sp
   11eb0:	mov	x8, x0
   11eb4:	mov	x0, x1
   11eb8:	mov	x1, x8
   11ebc:	bl	12008 <gcc_cp_fe_context@@Base+0x3fd4>
   11ec0:	ldp	x29, x30, [sp], #16
   11ec4:	ret
   11ec8:	ldr	x0, [x0]
   11ecc:	ret
   11ed0:	ret
   11ed4:	stp	x29, x30, [sp, #-32]!
   11ed8:	str	x19, [sp, #16]
   11edc:	mov	x29, sp
   11ee0:	mov	x19, x1
   11ee4:	add	x1, x29, #0x18
   11ee8:	bl	ca4c <_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_@@Base+0xa8c>
   11eec:	ldr	x8, [x29, #24]
   11ef0:	cmp	w0, #0x0
   11ef4:	cset	w9, ne  // ne = any
   11ef8:	cmp	x8, x19
   11efc:	ldr	x19, [sp, #16]
   11f00:	cset	w8, eq  // eq = none
   11f04:	and	w0, w9, w8
   11f08:	ldp	x29, x30, [sp], #32
   11f0c:	ret
   11f10:	stp	x29, x30, [sp, #-32]!
   11f14:	str	x19, [sp, #16]
   11f18:	mov	x29, sp
   11f1c:	str	x1, [x29, #24]
   11f20:	mov	w1, #0x69                  	// #105
   11f24:	mov	x19, x0
   11f28:	bl	11b24 <gcc_cp_fe_context@@Base+0x3af0>
   11f2c:	cbz	w0, 11f40 <gcc_cp_fe_context@@Base+0x3f0c>
   11f30:	add	x1, x29, #0x18
   11f34:	mov	w2, #0x8                   	// #8
   11f38:	mov	x0, x19
   11f3c:	bl	11b58 <gcc_cp_fe_context@@Base+0x3b24>
   11f40:	ldr	x19, [sp, #16]
   11f44:	ldp	x29, x30, [sp], #32
   11f48:	ret
   11f4c:	stp	x29, x30, [sp, #-32]!
   11f50:	stp	x20, x19, [sp, #16]
   11f54:	mov	x29, sp
   11f58:	mov	x19, x1
   11f5c:	mov	w1, #0x69                  	// #105
   11f60:	mov	x20, x0
   11f64:	bl	11b88 <gcc_cp_fe_context@@Base+0x3b54>
   11f68:	cbz	w0, 11f7c <gcc_cp_fe_context@@Base+0x3f48>
   11f6c:	mov	w2, #0x8                   	// #8
   11f70:	mov	x0, x20
   11f74:	mov	x1, x19
   11f78:	bl	11bcc <gcc_cp_fe_context@@Base+0x3b98>
   11f7c:	ldp	x20, x19, [sp, #16]
   11f80:	ldp	x29, x30, [sp], #32
   11f84:	ret
   11f88:	sub	sp, sp, #0x30
   11f8c:	stp	x29, x30, [sp, #16]
   11f90:	stp	x20, x19, [sp, #32]
   11f94:	add	x29, sp, #0x10
   11f98:	mov	x19, x1
   11f9c:	mov	w1, #0x73                  	// #115
   11fa0:	mov	x20, x0
   11fa4:	bl	11b24 <gcc_cp_fe_context@@Base+0x3af0>
   11fa8:	cbz	w0, 11ff8 <gcc_cp_fe_context@@Base+0x3fc4>
   11fac:	cbz	x19, 11fbc <gcc_cp_fe_context@@Base+0x3f88>
   11fb0:	mov	x0, x19
   11fb4:	bl	9110 <strlen@plt>
   11fb8:	b	11fc0 <gcc_cp_fe_context@@Base+0x3f8c>
   11fbc:	mov	x0, #0xffffffffffffffff    	// #-1
   11fc0:	str	x0, [sp, #8]
   11fc4:	add	x1, sp, #0x8
   11fc8:	mov	w2, #0x8                   	// #8
   11fcc:	mov	x0, x20
   11fd0:	bl	11b58 <gcc_cp_fe_context@@Base+0x3b24>
   11fd4:	cmp	w0, #0x0
   11fd8:	mov	w8, w0
   11fdc:	cset	w0, ne  // ne = any
   11fe0:	cbz	x19, 11ff8 <gcc_cp_fe_context@@Base+0x3fc4>
   11fe4:	cbz	w8, 11ff8 <gcc_cp_fe_context@@Base+0x3fc4>
   11fe8:	ldr	w2, [sp, #8]
   11fec:	mov	x0, x20
   11ff0:	mov	x1, x19
   11ff4:	bl	11b58 <gcc_cp_fe_context@@Base+0x3b24>
   11ff8:	ldp	x20, x19, [sp, #32]
   11ffc:	ldp	x29, x30, [sp, #16]
   12000:	add	sp, sp, #0x30
   12004:	ret
   12008:	sub	sp, sp, #0x40
   1200c:	stp	x29, x30, [sp, #16]
   12010:	stp	x22, x21, [sp, #32]
   12014:	stp	x20, x19, [sp, #48]
   12018:	add	x29, sp, #0x10
   1201c:	mov	x19, x1
   12020:	mov	w1, #0x73                  	// #115
   12024:	mov	x20, x0
   12028:	bl	11b88 <gcc_cp_fe_context@@Base+0x3b54>
   1202c:	cbz	w0, 120a4 <gcc_cp_fe_context@@Base+0x4070>
   12030:	add	x1, sp, #0x8
   12034:	mov	w2, #0x8                   	// #8
   12038:	mov	x0, x20
   1203c:	bl	11bcc <gcc_cp_fe_context@@Base+0x3b98>
   12040:	cbz	w0, 120a4 <gcc_cp_fe_context@@Base+0x4070>
   12044:	ldr	x22, [sp, #8]
   12048:	cmn	x22, #0x1
   1204c:	b.eq	1208c <gcc_cp_fe_context@@Base+0x4058>  // b.none
   12050:	adrp	x1, 2e000 <xexit@@Base+0x14c60>
   12054:	ldr	x1, [x1, #3280]
   12058:	add	x0, x22, #0x1
   1205c:	bl	9910 <_ZnamRKSt9nothrow_t@plt>
   12060:	cbz	x0, 120a4 <gcc_cp_fe_context@@Base+0x4070>
   12064:	mov	x21, x0
   12068:	mov	x0, x20
   1206c:	mov	x1, x21
   12070:	mov	w2, w22
   12074:	bl	11bcc <gcc_cp_fe_context@@Base+0x3b98>
   12078:	cbz	w0, 12098 <gcc_cp_fe_context@@Base+0x4064>
   1207c:	ldr	x8, [sp, #8]
   12080:	strb	wzr, [x21, x8]
   12084:	str	x21, [x19]
   12088:	b	12090 <gcc_cp_fe_context@@Base+0x405c>
   1208c:	str	xzr, [x19]
   12090:	mov	w0, #0x1                   	// #1
   12094:	b	120a4 <gcc_cp_fe_context@@Base+0x4070>
   12098:	mov	x0, x21
   1209c:	bl	96b0 <_ZdaPv@plt>
   120a0:	mov	w0, wzr
   120a4:	ldp	x20, x19, [sp, #48]
   120a8:	ldp	x22, x21, [sp, #32]
   120ac:	ldp	x29, x30, [sp, #16]
   120b0:	add	sp, sp, #0x40
   120b4:	ret
   120b8:	sub	sp, sp, #0x30
   120bc:	stp	x29, x30, [sp, #16]
   120c0:	stp	x20, x19, [sp, #32]
   120c4:	add	x29, sp, #0x10
   120c8:	mov	x20, x2
   120cc:	mov	x19, x0
   120d0:	bl	11b24 <gcc_cp_fe_context@@Base+0x3af0>
   120d4:	cbz	w0, 120f4 <gcc_cp_fe_context@@Base+0x40c0>
   120d8:	add	x1, sp, #0x8
   120dc:	mov	w2, #0x8                   	// #8
   120e0:	mov	x0, x19
   120e4:	str	x20, [sp, #8]
   120e8:	bl	11b58 <gcc_cp_fe_context@@Base+0x3b24>
   120ec:	cmp	w0, #0x0
   120f0:	cset	w0, ne  // ne = any
   120f4:	ldp	x20, x19, [sp, #32]
   120f8:	ldp	x29, x30, [sp, #16]
   120fc:	add	sp, sp, #0x30
   12100:	ret
   12104:	stp	x29, x30, [sp, #-16]!
   12108:	mov	x29, sp
   1210c:	mov	x8, x1
   12110:	mov	x1, x2
   12114:	mov	w2, w8
   12118:	bl	11b58 <gcc_cp_fe_context@@Base+0x3b24>
   1211c:	ldp	x29, x30, [sp], #16
   12120:	ret
   12124:	sub	sp, sp, #0x30
   12128:	stp	x29, x30, [sp, #16]
   1212c:	stp	x20, x19, [sp, #32]
   12130:	add	x29, sp, #0x10
   12134:	mov	x19, x2
   12138:	mov	x20, x0
   1213c:	bl	11b88 <gcc_cp_fe_context@@Base+0x3b54>
   12140:	cbz	w0, 12164 <gcc_cp_fe_context@@Base+0x4130>
   12144:	add	x1, sp, #0x8
   12148:	mov	w2, #0x8                   	// #8
   1214c:	mov	x0, x20
   12150:	bl	11bcc <gcc_cp_fe_context@@Base+0x3b98>
   12154:	cbz	w0, 12164 <gcc_cp_fe_context@@Base+0x4130>
   12158:	ldr	x8, [sp, #8]
   1215c:	mov	w0, #0x1                   	// #1
   12160:	str	x8, [x19]
   12164:	ldp	x20, x19, [sp, #32]
   12168:	ldp	x29, x30, [sp, #16]
   1216c:	add	sp, sp, #0x30
   12170:	ret
   12174:	stp	x29, x30, [sp, #-16]!
   12178:	mov	x29, sp
   1217c:	mov	x8, x1
   12180:	mov	x1, x2
   12184:	mov	w2, w8
   12188:	bl	11bcc <gcc_cp_fe_context@@Base+0x3b98>
   1218c:	ldp	x29, x30, [sp], #16
   12190:	ret
   12194:	stp	x29, x30, [sp, #-48]!
   12198:	str	x21, [sp, #16]
   1219c:	stp	x20, x19, [sp, #32]
   121a0:	mov	x29, sp
   121a4:	mov	x20, x1
   121a8:	mov	x19, x0
   121ac:	cbz	x1, 121b8 <gcc_cp_fe_context@@Base+0x4184>
   121b0:	ldrsw	x21, [x20]
   121b4:	b	121bc <gcc_cp_fe_context@@Base+0x4188>
   121b8:	mov	x21, #0xffffffffffffffff    	// #-1
   121bc:	mov	w1, #0x61                  	// #97
   121c0:	mov	x0, x19
   121c4:	mov	x2, x21
   121c8:	bl	120b8 <gcc_cp_fe_context@@Base+0x4084>
   121cc:	cmp	w0, #0x0
   121d0:	mov	w8, w0
   121d4:	cset	w0, ne  // ne = any
   121d8:	cbz	w8, 121f0 <gcc_cp_fe_context@@Base+0x41bc>
   121dc:	cbz	x20, 121f0 <gcc_cp_fe_context@@Base+0x41bc>
   121e0:	ldr	x2, [x20, #8]
   121e4:	lsl	x1, x21, #3
   121e8:	mov	x0, x19
   121ec:	bl	12104 <gcc_cp_fe_context@@Base+0x40d0>
   121f0:	ldp	x20, x19, [sp, #32]
   121f4:	ldr	x21, [sp, #16]
   121f8:	ldp	x29, x30, [sp], #48
   121fc:	ret
   12200:	sub	sp, sp, #0x40
   12204:	stp	x29, x30, [sp, #16]
   12208:	stp	x22, x21, [sp, #32]
   1220c:	stp	x20, x19, [sp, #48]
   12210:	add	x29, sp, #0x10
   12214:	mov	x19, x1
   12218:	add	x2, sp, #0x8
   1221c:	mov	w1, #0x61                  	// #97
   12220:	mov	x20, x0
   12224:	bl	12124 <gcc_cp_fe_context@@Base+0x40f0>
   12228:	cbz	w0, 12280 <gcc_cp_fe_context@@Base+0x424c>
   1222c:	ldr	x22, [sp, #8]
   12230:	cmn	x22, #0x1
   12234:	b.eq	12278 <gcc_cp_fe_context@@Base+0x4244>  // b.none
   12238:	mov	w0, #0x10                  	// #16
   1223c:	bl	9540 <_Znwm@plt>
   12240:	str	w22, [x0]
   12244:	cmp	xzr, x22, lsr #61
   12248:	lsl	x22, x22, #3
   1224c:	mov	x21, x0
   12250:	csinv	x0, x22, xzr, eq  // eq = none
   12254:	bl	8f90 <_Znam@plt>
   12258:	mov	x2, x0
   1225c:	str	x0, [x21, #8]
   12260:	mov	x0, x20
   12264:	mov	x1, x22
   12268:	bl	12174 <gcc_cp_fe_context@@Base+0x4140>
   1226c:	cbz	w0, 12294 <gcc_cp_fe_context@@Base+0x4260>
   12270:	str	x21, [x19]
   12274:	b	1227c <gcc_cp_fe_context@@Base+0x4248>
   12278:	str	xzr, [x19]
   1227c:	mov	w0, #0x1                   	// #1
   12280:	ldp	x20, x19, [sp, #48]
   12284:	ldp	x22, x21, [sp, #32]
   12288:	ldp	x29, x30, [sp, #16]
   1228c:	add	sp, sp, #0x40
   12290:	ret
   12294:	ldr	x0, [x21, #8]
   12298:	cbz	x0, 122a0 <gcc_cp_fe_context@@Base+0x426c>
   1229c:	bl	96b0 <_ZdaPv@plt>
   122a0:	ldr	x0, [x19]
   122a4:	cbz	x0, 12280 <gcc_cp_fe_context@@Base+0x424c>
   122a8:	bl	94f0 <_ZdlPv@plt>
   122ac:	mov	w0, wzr
   122b0:	b	12280 <gcc_cp_fe_context@@Base+0x424c>

00000000000122b4 <xre_set_syntax@@Base>:
   122b4:	adrp	x9, 2e000 <xexit@@Base+0x14c60>
   122b8:	ldr	x9, [x9, #3800]
   122bc:	ldr	x8, [x9]
   122c0:	str	x0, [x9]
   122c4:	mov	x0, x8
   122c8:	ret

00000000000122cc <xre_compile_fastmap@@Base>:
   122cc:	stp	x29, x30, [sp, #-16]!
   122d0:	mov	x29, sp
   122d4:	bl	122e0 <xre_compile_fastmap@@Base+0x14>
   122d8:	ldp	x29, x30, [sp], #16
   122dc:	ret
   122e0:	stp	x29, x30, [sp, #-96]!
   122e4:	stp	x28, x27, [sp, #16]
   122e8:	stp	x26, x25, [sp, #32]
   122ec:	stp	x24, x23, [sp, #48]
   122f0:	stp	x22, x21, [sp, #64]
   122f4:	stp	x20, x19, [sp, #80]
   122f8:	mov	x29, sp
   122fc:	sub	sp, sp, #0x50
   12300:	ldr	x22, [x0, #32]
   12304:	movi	v0.2d, #0x0
   12308:	ldr	x8, [x0]
   1230c:	ldr	x10, [x0, #16]
   12310:	stp	q0, q0, [x22, #224]
   12314:	stp	q0, q0, [x22, #192]
   12318:	stp	q0, q0, [x22, #160]
   1231c:	stp	q0, q0, [x22, #128]
   12320:	stp	q0, q0, [x22, #96]
   12324:	stp	q0, q0, [x22, #64]
   12328:	stp	q0, q0, [x22, #32]
   1232c:	stp	q0, q0, [x22]
   12330:	adrp	x17, 2e000 <xexit@@Base+0x14c60>
   12334:	ldr	x17, [x17, #3952]
   12338:	ldrb	w11, [x0, #56]
   1233c:	mov	x19, x0
   12340:	adrp	x14, 19000 <iterative_hash@@Base+0x140>
   12344:	adrp	x0, 2f000 <xexit@@Base+0x15c60>
   12348:	add	x27, x8, x10
   1234c:	and	w10, w11, #0xfffffffe
   12350:	mov	w9, wzr
   12354:	sub	x20, x29, #0x30
   12358:	mov	w13, #0x1                   	// #1
   1235c:	mov	w15, #0x5                   	// #5
   12360:	add	x14, x14, #0xe1e
   12364:	movi	v0.16b, #0x1
   12368:	mov	w16, #0xff                  	// #255
   1236c:	mov	w18, #0x13                  	// #19
   12370:	add	x0, x0, #0x930
   12374:	sub	x1, x22, #0x1
   12378:	orr	w10, w10, #0x8
   1237c:	strb	w10, [x19, #56]
   12380:	mov	w24, #0x1                   	// #1
   12384:	cmp	x8, x27
   12388:	mov	w25, w9
   1238c:	b.eq	126f4 <xre_compile_fastmap@@Base+0x428>  // b.none
   12390:	mov	x28, x8
   12394:	ldrb	w8, [x8]
   12398:	cmp	w8, #0x1
   1239c:	b.eq	126f4 <xre_compile_fastmap@@Base+0x428>  // b.none
   123a0:	cmp	w8, #0x1d
   123a4:	b.hi	1275c <xre_compile_fastmap@@Base+0x490>  // b.pmore
   123a8:	adr	x10, 12384 <xre_compile_fastmap@@Base+0xb8>
   123ac:	ldrb	w9, [x14, x8]
   123b0:	add	x10, x10, x9, lsl #2
   123b4:	mov	w23, wzr
   123b8:	add	x8, x28, #0x1
   123bc:	mov	w9, w25
   123c0:	br	x10
   123c4:	ldrb	w8, [x28, #1]
   123c8:	ldrsb	x9, [x28, #2]
   123cc:	bfi	x8, x9, #8, #56
   123d0:	add	x9, x28, x8
   123d4:	cmp	w8, #0x0
   123d8:	add	x8, x9, #0x3
   123dc:	mov	w9, w25
   123e0:	b.gt	12384 <xre_compile_fastmap@@Base+0xb8>
   123e4:	ldrb	w9, [x8]
   123e8:	cmp	w9, #0x15
   123ec:	b.eq	123fc <xre_compile_fastmap@@Base+0x130>  // b.none
   123f0:	cmp	w9, #0xf
   123f4:	mov	w9, w25
   123f8:	b.ne	12384 <xre_compile_fastmap@@Base+0xb8>  // b.any
   123fc:	ldrb	w10, [x8, #1]!
   12400:	mov	w9, wzr
   12404:	ldrsb	x11, [x8, #1]
   12408:	bfi	x10, x11, #8, #56
   1240c:	add	x8, x8, x10
   12410:	add	x8, x8, #0x2
   12414:	cbz	w25, 12384 <xre_compile_fastmap@@Base+0xb8>
   12418:	sub	w9, w25, #0x1
   1241c:	ldr	x10, [x20, w9, uxtw #3]
   12420:	cmp	x10, x8
   12424:	csel	w9, w9, w25, eq  // eq = none
   12428:	b	12384 <xre_compile_fastmap@@Base+0xb8>
   1242c:	add	x8, x28, #0x3
   12430:	mov	w9, w25
   12434:	b	12384 <xre_compile_fastmap@@Base+0xb8>
   12438:	ldrb	w8, [x28, #2]
   1243c:	mov	w24, wzr
   12440:	strb	w13, [x22, x8]
   12444:	b	126c4 <xre_compile_fastmap@@Base+0x3f8>
   12448:	ldrb	w8, [x22, #10]
   1244c:	stp	q0, q0, [x22, #16]
   12450:	stp	q0, q0, [x22, #48]
   12454:	stp	q0, q0, [x22, #80]
   12458:	stp	q0, q0, [x22, #112]
   1245c:	stp	q0, q0, [x22, #144]
   12460:	stp	q0, q0, [x22, #176]
   12464:	stp	q0, q0, [x22, #208]
   12468:	str	q0, [x22, #240]
   1246c:	str	q0, [x22]
   12470:	ldrb	w9, [x19, #24]
   12474:	tbnz	w9, #6, 126dc <xre_compile_fastmap@@Base+0x410>
   12478:	mov	w24, wzr
   1247c:	strb	w8, [x22, #10]
   12480:	b	126c4 <xre_compile_fastmap@@Base+0x3f8>
   12484:	ldrb	w10, [x28, #1]
   12488:	mov	w24, wzr
   1248c:	mov	w9, w25
   12490:	mov	x8, x27
   12494:	cbz	x10, 12384 <xre_compile_fastmap@@Base+0xb8>
   12498:	add	x8, x28, #0x2
   1249c:	lsl	x10, x10, #3
   124a0:	b	124b4 <xre_compile_fastmap@@Base+0x1e8>
   124a4:	add	x10, x9, #0x1
   124a8:	cmp	x10, #0x1
   124ac:	mov	x10, x9
   124b0:	b.le	126c0 <xre_compile_fastmap@@Base+0x3f4>
   124b4:	sub	x9, x10, #0x1
   124b8:	add	w11, w9, #0x7
   124bc:	cmp	w9, #0x0
   124c0:	csel	w11, w11, w9, lt  // lt = tstop
   124c4:	asr	w11, w11, #3
   124c8:	ldrb	w11, [x8, w11, sxtw]
   124cc:	and	w12, w9, #0x7
   124d0:	lsr	w11, w11, w12
   124d4:	tbz	w11, #0, 124a4 <xre_compile_fastmap@@Base+0x1d8>
   124d8:	strb	w13, [x1, x10]
   124dc:	b	124a4 <xre_compile_fastmap@@Base+0x1d8>
   124e0:	ldrb	w8, [x8]
   124e4:	cmp	x8, #0x1f
   124e8:	b.hi	12538 <xre_compile_fastmap@@Base+0x26c>  // b.pmore
   124ec:	add	x0, x22, x8, lsl #3
   124f0:	sub	w8, w16, w8, lsl #3
   124f4:	add	x2, x8, #0x1
   124f8:	mov	x26, x1
   124fc:	mov	w1, #0x1                   	// #1
   12500:	mov	x21, x14
   12504:	mov	w23, w15
   12508:	mov	x24, x17
   1250c:	bl	9250 <memset@plt>
   12510:	adrp	x0, 2f000 <xexit@@Base+0x15c60>
   12514:	mov	x1, x26
   12518:	add	x0, x0, #0x930
   1251c:	mov	w18, #0x13                  	// #19
   12520:	mov	x17, x24
   12524:	mov	w16, #0xff                  	// #255
   12528:	mov	w15, w23
   1252c:	movi	v0.16b, #0x1
   12530:	mov	x14, x21
   12534:	mov	w13, #0x1                   	// #1
   12538:	ldrb	w10, [x28, #1]
   1253c:	mov	w24, wzr
   12540:	mov	w9, w25
   12544:	mov	x8, x27
   12548:	cbz	x10, 12384 <xre_compile_fastmap@@Base+0xb8>
   1254c:	add	x8, x28, #0x2
   12550:	lsl	x10, x10, #3
   12554:	b	12568 <xre_compile_fastmap@@Base+0x29c>
   12558:	add	x10, x9, #0x1
   1255c:	cmp	x10, #0x1
   12560:	mov	x10, x9
   12564:	b.le	126c0 <xre_compile_fastmap@@Base+0x3f4>
   12568:	sub	x9, x10, #0x1
   1256c:	add	w11, w9, #0x7
   12570:	cmp	w9, #0x0
   12574:	csel	w11, w11, w9, lt  // lt = tstop
   12578:	asr	w11, w11, #3
   1257c:	ldrb	w11, [x8, w11, sxtw]
   12580:	and	w12, w9, #0x7
   12584:	lsr	w11, w11, w12
   12588:	tbnz	w11, #0, 12558 <xre_compile_fastmap@@Base+0x28c>
   1258c:	strb	w13, [x1, x10]
   12590:	b	12558 <xre_compile_fastmap@@Base+0x28c>
   12594:	ldrb	w10, [x28, #3]
   12598:	ldrsb	w8, [x28, #4]
   1259c:	mov	w9, w25
   125a0:	bfi	w10, w8, #8, #24
   125a4:	add	x8, x28, #0x5
   125a8:	cbnz	w10, 12384 <xre_compile_fastmap@@Base+0xb8>
   125ac:	mov	w23, #0x1                   	// #1
   125b0:	ldrb	w8, [x28, #1]
   125b4:	ldrsb	x9, [x28, #2]
   125b8:	add	x21, x28, #0x3
   125bc:	bfi	x8, x9, #8, #56
   125c0:	add	x26, x21, x8
   125c4:	cmp	x26, x27
   125c8:	b.cs	12650 <xre_compile_fastmap@@Base+0x384>  // b.hs, b.nlast
   125cc:	cmp	w25, w15
   125d0:	b.ne	12640 <xre_compile_fastmap@@Base+0x374>  // b.any
   125d4:	ldr	w8, [x17]
   125d8:	mul	w8, w8, w18
   125dc:	cmp	w15, w8
   125e0:	b.hi	12754 <xre_compile_fastmap@@Base+0x488>  // b.pmore
   125e4:	lsl	w8, w15, #1
   125e8:	sub	x0, sp, w8, uxtw #3
   125ec:	stur	w8, [x29, #-60]
   125f0:	stur	x0, [x29, #-72]
   125f4:	mov	sp, x0
   125f8:	mov	w8, w15
   125fc:	lsl	x2, x8, #3
   12600:	stur	x1, [x29, #-56]
   12604:	mov	x1, x20
   12608:	mov	x20, x14
   1260c:	bl	8fb0 <memcpy@plt>
   12610:	adrp	x17, 2e000 <xexit@@Base+0x14c60>
   12614:	ldur	x1, [x29, #-56]
   12618:	ldr	x17, [x17, #3952]
   1261c:	mov	x14, x20
   12620:	ldur	x20, [x29, #-72]
   12624:	ldur	w15, [x29, #-60]
   12628:	adrp	x0, 2f000 <xexit@@Base+0x15c60>
   1262c:	add	x0, x0, #0x930
   12630:	mov	w18, #0x13                  	// #19
   12634:	mov	w16, #0xff                  	// #255
   12638:	movi	v0.16b, #0x1
   1263c:	mov	w13, #0x1                   	// #1
   12640:	add	w8, w25, #0x1
   12644:	str	x26, [x20, w25, uxtw #3]
   12648:	mov	w25, w8
   1264c:	b	1265c <xre_compile_fastmap@@Base+0x390>
   12650:	ldrb	w8, [x19, #56]
   12654:	orr	w8, w8, #0x1
   12658:	strb	w8, [x19, #56]
   1265c:	add	x8, x28, #0x5
   12660:	cmp	w23, #0x0
   12664:	csel	x8, x21, x8, eq  // eq = none
   12668:	mov	w9, w25
   1266c:	b	12384 <xre_compile_fastmap@@Base+0xb8>
   12670:	mov	x8, xzr
   12674:	b	12684 <xre_compile_fastmap@@Base+0x3b8>
   12678:	add	x8, x8, #0x1
   1267c:	cmp	x8, #0x100
   12680:	b.eq	126c0 <xre_compile_fastmap@@Base+0x3f4>  // b.none
   12684:	ldrb	w9, [x0, x8]
   12688:	cmp	w9, #0x1
   1268c:	b.ne	12678 <xre_compile_fastmap@@Base+0x3ac>  // b.any
   12690:	strb	w13, [x22, x8]
   12694:	b	12678 <xre_compile_fastmap@@Base+0x3ac>
   12698:	mov	x8, xzr
   1269c:	b	126ac <xre_compile_fastmap@@Base+0x3e0>
   126a0:	add	x8, x8, #0x1
   126a4:	cmp	x8, #0x100
   126a8:	b.eq	126c0 <xre_compile_fastmap@@Base+0x3f4>  // b.none
   126ac:	ldrb	w9, [x0, x8]
   126b0:	cmp	w9, #0x1
   126b4:	b.eq	126a0 <xre_compile_fastmap@@Base+0x3d4>  // b.none
   126b8:	strb	w13, [x22, x8]
   126bc:	b	126a0 <xre_compile_fastmap@@Base+0x3d4>
   126c0:	mov	w24, wzr
   126c4:	mov	w9, w25
   126c8:	mov	x8, x27
   126cc:	b	12384 <xre_compile_fastmap@@Base+0xb8>
   126d0:	add	x8, x28, #0x5
   126d4:	mov	w9, w25
   126d8:	b	12384 <xre_compile_fastmap@@Base+0xb8>
   126dc:	ldrb	w10, [x19, #56]
   126e0:	mov	w24, wzr
   126e4:	mov	w9, w25
   126e8:	mov	x8, x27
   126ec:	tbz	w10, #0, 12384 <xre_compile_fastmap@@Base+0xb8>
   126f0:	b	1271c <xre_compile_fastmap@@Base+0x450>
   126f4:	ldrb	w8, [x19, #56]
   126f8:	and	w9, w8, #0x1
   126fc:	orr	w9, w9, w24
   12700:	and	w8, w8, #0xfe
   12704:	orr	w8, w9, w8
   12708:	strb	w8, [x19, #56]
   1270c:	cbz	w25, 1271c <xre_compile_fastmap@@Base+0x450>
   12710:	sub	w9, w25, #0x1
   12714:	ldr	x8, [x20, w9, uxtw #3]
   12718:	b	12380 <xre_compile_fastmap@@Base+0xb4>
   1271c:	mov	w0, wzr
   12720:	b	12734 <xre_compile_fastmap@@Base+0x468>
   12724:	ldrb	w8, [x19, #56]
   12728:	mov	w0, wzr
   1272c:	orr	w8, w8, #0x1
   12730:	strb	w8, [x19, #56]
   12734:	mov	sp, x29
   12738:	ldp	x20, x19, [sp, #80]
   1273c:	ldp	x22, x21, [sp, #64]
   12740:	ldp	x24, x23, [sp, #48]
   12744:	ldp	x26, x25, [sp, #32]
   12748:	ldp	x28, x27, [sp, #16]
   1274c:	ldp	x29, x30, [sp], #96
   12750:	ret
   12754:	mov	w0, #0xfffffffe            	// #-2
   12758:	b	12734 <xre_compile_fastmap@@Base+0x468>
   1275c:	bl	98b0 <abort@plt>

0000000000012760 <xre_set_registers@@Base>:
   12760:	ldrb	w8, [x0, #56]
   12764:	and	w8, w8, #0xfffffff9
   12768:	cbz	w2, 12780 <xre_set_registers@@Base+0x20>
   1276c:	orr	w8, w8, #0x2
   12770:	strb	w8, [x0, #56]
   12774:	str	w2, [x1]
   12778:	stp	x3, x4, [x1, #8]
   1277c:	ret
   12780:	strb	w8, [x0, #56]
   12784:	str	wzr, [x1]
   12788:	stp	xzr, xzr, [x1, #8]
   1278c:	ret

0000000000012790 <xre_search@@Base>:
   12790:	sub	sp, sp, #0x20
   12794:	mov	x7, x5
   12798:	mov	w6, w4
   1279c:	mov	w5, w3
   127a0:	mov	w4, w2
   127a4:	mov	x3, x1
   127a8:	str	w2, [sp]
   127ac:	mov	x1, xzr
   127b0:	mov	w2, wzr
   127b4:	stp	x29, x30, [sp, #16]
   127b8:	add	x29, sp, #0x10
   127bc:	bl	9a60 <xre_search_2@plt>
   127c0:	ldp	x29, x30, [sp, #16]
   127c4:	add	sp, sp, #0x20
   127c8:	ret

00000000000127cc <xre_search_2@@Base>:
   127cc:	sub	sp, sp, #0x20
   127d0:	stp	x29, x30, [sp, #16]
   127d4:	add	x29, sp, #0x10
   127d8:	ldr	w8, [x29, #16]
   127dc:	str	w8, [sp]
   127e0:	bl	127f0 <xre_search_2@@Base+0x24>
   127e4:	ldp	x29, x30, [sp, #16]
   127e8:	add	sp, sp, #0x20
   127ec:	ret
   127f0:	sub	sp, sp, #0x80
   127f4:	stp	x29, x30, [sp, #32]
   127f8:	stp	x26, x25, [sp, #64]
   127fc:	add	x29, sp, #0x20
   12800:	mov	x25, x0
   12804:	mov	w0, #0xffffffff            	// #-1
   12808:	stp	x28, x27, [sp, #48]
   1280c:	stp	x24, x23, [sp, #80]
   12810:	stp	x22, x21, [sp, #96]
   12814:	stp	x20, x19, [sp, #112]
   12818:	stur	x7, [x29, #-8]
   1281c:	tbnz	w5, #31, 12a20 <xre_search_2@@Base+0x254>
   12820:	add	w27, w4, w2
   12824:	mov	w20, w5
   12828:	mov	w21, w4
   1282c:	mov	w23, w2
   12830:	subs	w8, w27, w5
   12834:	b.lt	12a20 <xre_search_2@@Base+0x254>  // b.tstop
   12838:	add	w9, w6, w20
   1283c:	ldp	x28, x12, [x25, #32]
   12840:	cmp	w9, w27
   12844:	csel	w8, w8, w6, gt
   12848:	cmp	w9, #0x0
   1284c:	csneg	w19, w8, w20, ge  // ge = tcont
   12850:	mov	x22, x3
   12854:	mov	x24, x1
   12858:	cmp	w19, #0x1
   1285c:	b.lt	1289c <xre_search_2@@Base+0xd0>  // b.tstop
   12860:	ldr	x8, [x25, #16]
   12864:	cbz	x8, 1289c <xre_search_2@@Base+0xd0>
   12868:	ldr	x8, [x25]
   1286c:	ldrb	w8, [x8]
   12870:	cmp	w8, #0xb
   12874:	b.eq	12888 <xre_search_2@@Base+0xbc>  // b.none
   12878:	cmp	w8, #0x9
   1287c:	b.ne	1289c <xre_search_2@@Base+0xd0>  // b.any
   12880:	ldrsb	w8, [x25, #56]
   12884:	tbnz	w8, #31, 1289c <xre_search_2@@Base+0xd0>
   12888:	cmp	w20, #0x0
   1288c:	b.le	12898 <xre_search_2@@Base+0xcc>
   12890:	mov	w0, #0xffffffff            	// #-1
   12894:	b	12a20 <xre_search_2@@Base+0x254>
   12898:	mov	w19, #0x1                   	// #1
   1289c:	str	x12, [sp, #16]
   128a0:	cbz	x28, 128c0 <xre_search_2@@Base+0xf4>
   128a4:	ldrb	w8, [x25, #56]
   128a8:	tbnz	w8, #3, 128c0 <xre_search_2@@Base+0xf4>
   128ac:	mov	x0, x25
   128b0:	bl	90f0 <xre_compile_fastmap@plt>
   128b4:	ldr	x12, [sp, #16]
   128b8:	cmn	w0, #0x2
   128bc:	b.eq	12a20 <xre_search_2@@Base+0x254>  // b.none
   128c0:	ldr	w26, [x29, #96]
   128c4:	sub	x8, x22, w23, sxtw
   128c8:	str	x8, [sp, #8]
   128cc:	cbz	x28, 129a8 <xre_search_2@@Base+0x1dc>
   128d0:	cmp	w20, w27
   128d4:	b.ge	129a8 <xre_search_2@@Base+0x1dc>  // b.tcont
   128d8:	ldrb	w8, [x25, #56]
   128dc:	tbnz	w8, #0, 129a8 <xre_search_2@@Base+0x1dc>
   128e0:	cmp	w19, #0x1
   128e4:	b.lt	12944 <xre_search_2@@Base+0x178>  // b.tstop
   128e8:	add	w8, w20, w19
   128ec:	sub	w9, w19, w23
   128f0:	cmp	w8, w23
   128f4:	add	w8, w9, w20
   128f8:	ldr	x9, [sp, #8]
   128fc:	ccmp	w20, w23, #0x0, ge  // ge = tcont
   12900:	csel	w8, wzr, w8, ge  // ge = tcont
   12904:	cmp	w20, w23
   12908:	csel	x9, x24, x9, lt  // lt = tstop
   1290c:	add	x10, x9, w20, sxtw
   12910:	cmp	w19, w8
   12914:	mov	w9, w19
   12918:	cbz	x12, 12978 <xre_search_2@@Base+0x1ac>
   1291c:	b.le	1299c <xre_search_2@@Base+0x1d0>
   12920:	ldrb	w11, [x10]
   12924:	ldrb	w11, [x12, x11]
   12928:	ldrb	w11, [x28, x11]
   1292c:	cbnz	w11, 1299c <xre_search_2@@Base+0x1d0>
   12930:	sub	w9, w9, #0x1
   12934:	cmp	w9, w8
   12938:	add	x10, x10, #0x1
   1293c:	b.gt	12920 <xre_search_2@@Base+0x154>
   12940:	b	12998 <xre_search_2@@Base+0x1cc>
   12944:	sxtw	x8, w20
   12948:	cmp	w20, w23
   1294c:	sub	x9, x8, w23, sxtw
   12950:	ccmp	w23, #0x0, #0x4, lt  // lt = tstop
   12954:	add	x9, x22, x9
   12958:	add	x8, x24, x8
   1295c:	csel	x8, x8, x9, ne  // ne = any
   12960:	ldrb	w8, [x8]
   12964:	cbz	x12, 1296c <xre_search_2@@Base+0x1a0>
   12968:	ldrb	w8, [x12, x8]
   1296c:	ldrb	w8, [x28, w8, uxtw]
   12970:	cbnz	w8, 129a8 <xre_search_2@@Base+0x1dc>
   12974:	b	129f4 <xre_search_2@@Base+0x228>
   12978:	b.le	1299c <xre_search_2@@Base+0x1d0>
   1297c:	ldrb	w11, [x10]
   12980:	ldrb	w11, [x28, x11]
   12984:	cbnz	w11, 1299c <xre_search_2@@Base+0x1d0>
   12988:	sub	w9, w9, #0x1
   1298c:	cmp	w9, w8
   12990:	add	x10, x10, #0x1
   12994:	b.gt	1297c <xre_search_2@@Base+0x1b0>
   12998:	mov	w9, w8
   1299c:	add	w8, w20, w19
   129a0:	sub	w20, w8, w9
   129a4:	mov	w19, w9
   129a8:	tbnz	w19, #31, 129c0 <xre_search_2@@Base+0x1f4>
   129ac:	cbz	x28, 129c0 <xre_search_2@@Base+0x1f4>
   129b0:	cmp	w20, w27
   129b4:	b.ne	129c0 <xre_search_2@@Base+0x1f4>  // b.any
   129b8:	ldrb	w8, [x25, #56]
   129bc:	tbz	w8, #0, 12890 <xre_search_2@@Base+0xc4>
   129c0:	ldur	x6, [x29, #-8]
   129c4:	mov	x0, x25
   129c8:	mov	x1, x24
   129cc:	mov	w2, w23
   129d0:	mov	x3, x22
   129d4:	mov	w4, w21
   129d8:	mov	w5, w20
   129dc:	mov	w7, w26
   129e0:	bl	12a70 <xre_match@@Base+0x30>
   129e4:	tbz	w0, #31, 12a1c <xre_search_2@@Base+0x250>
   129e8:	ldr	x12, [sp, #16]
   129ec:	cmn	w0, #0x2
   129f0:	b.eq	12a20 <xre_search_2@@Base+0x254>  // b.none
   129f4:	cbz	w19, 12890 <xre_search_2@@Base+0xc4>
   129f8:	cmp	w19, #0x0
   129fc:	mov	w8, #0xffffffff            	// #-1
   12a00:	mov	w9, #0x1                   	// #1
   12a04:	cneg	w8, w8, le
   12a08:	cneg	w9, w9, le
   12a0c:	add	w19, w8, w19
   12a10:	add	w20, w9, w20
   12a14:	cbnz	x28, 128d0 <xre_search_2@@Base+0x104>
   12a18:	b	129a8 <xre_search_2@@Base+0x1dc>
   12a1c:	mov	w0, w20
   12a20:	ldp	x20, x19, [sp, #112]
   12a24:	ldp	x22, x21, [sp, #96]
   12a28:	ldp	x24, x23, [sp, #80]
   12a2c:	ldp	x26, x25, [sp, #64]
   12a30:	ldp	x28, x27, [sp, #48]
   12a34:	ldp	x29, x30, [sp, #32]
   12a38:	add	sp, sp, #0x80
   12a3c:	ret

0000000000012a40 <xre_match@@Base>:
   12a40:	stp	x29, x30, [sp, #-16]!
   12a44:	mov	x6, x4
   12a48:	mov	w4, w2
   12a4c:	mov	w5, w3
   12a50:	mov	x3, x1
   12a54:	mov	x1, xzr
   12a58:	mov	w2, wzr
   12a5c:	mov	w7, w4
   12a60:	mov	x29, sp
   12a64:	bl	12a70 <xre_match@@Base+0x30>
   12a68:	ldp	x29, x30, [sp], #16
   12a6c:	ret
   12a70:	stp	x29, x30, [sp, #-96]!
   12a74:	stp	x28, x27, [sp, #16]
   12a78:	stp	x26, x25, [sp, #32]
   12a7c:	stp	x24, x23, [sp, #48]
   12a80:	stp	x22, x21, [sp, #64]
   12a84:	stp	x20, x19, [sp, #80]
   12a88:	mov	x29, sp
   12a8c:	sub	sp, sp, #0x190
   12a90:	ldp	x26, x16, [x0, #40]
   12a94:	ldr	x27, [x0]
   12a98:	ldr	x8, [x0, #16]
   12a9c:	stur	x0, [x29, #-136]
   12aa0:	add	x9, x16, #0x1
   12aa4:	stur	x9, [x29, #-88]
   12aa8:	cbz	x16, 12b3c <xre_match@@Base+0xfc>
   12aac:	ldur	x9, [x29, #-88]
   12ab0:	mov	x10, sp
   12ab4:	lsl	x9, x9, #3
   12ab8:	add	x9, x9, #0xf
   12abc:	and	x9, x9, #0xfffffffffffffff0
   12ac0:	sub	x20, x10, x9
   12ac4:	mov	sp, x20
   12ac8:	mov	x10, sp
   12acc:	sub	x21, x10, x9
   12ad0:	mov	sp, x21
   12ad4:	mov	x10, sp
   12ad8:	sub	x18, x10, x9
   12adc:	mov	sp, x18
   12ae0:	mov	x10, sp
   12ae4:	sub	x22, x10, x9
   12ae8:	mov	sp, x22
   12aec:	mov	x10, sp
   12af0:	sub	x17, x10, x9
   12af4:	mov	sp, x17
   12af8:	mov	x10, sp
   12afc:	sub	x19, x10, x9
   12b00:	mov	sp, x19
   12b04:	mov	x10, sp
   12b08:	sub	x23, x10, x9
   12b0c:	mov	sp, x23
   12b10:	mov	x10, sp
   12b14:	sub	x10, x10, x9
   12b18:	stur	x10, [x29, #-248]
   12b1c:	mov	sp, x10
   12b20:	mov	x10, sp
   12b24:	sub	x9, x10, x9
   12b28:	stur	x9, [x29, #-256]
   12b2c:	mov	sp, x9
   12b30:	mov	w0, #0xffffffff            	// #-1
   12b34:	tbz	w5, #31, 12b64 <xre_match@@Base+0x124>
   12b38:	b	149f8 <xre_match@@Base+0x1fb8>
   12b3c:	mov	x20, xzr
   12b40:	mov	x21, xzr
   12b44:	mov	x18, xzr
   12b48:	mov	x22, xzr
   12b4c:	mov	x23, xzr
   12b50:	mov	x17, xzr
   12b54:	mov	x19, xzr
   12b58:	stp	xzr, xzr, [x29, #-256]
   12b5c:	mov	w0, #0xffffffff            	// #-1
   12b60:	tbnz	w5, #31, 149f8 <xre_match@@Base+0x1fb8>
   12b64:	add	w9, w4, w2
   12b68:	cmp	w9, w5
   12b6c:	b.lt	149f8 <xre_match@@Base+0x1fb8>  // b.tstop
   12b70:	sub	x9, x29, #0x18
   12b74:	stur	x6, [x9, #-256]
   12b78:	ldur	x9, [x29, #-88]
   12b7c:	add	x6, x27, x8
   12b80:	cmp	x9, #0x2
   12b84:	b.cc	12bd0 <xre_match@@Base+0x190>  // b.lo, b.ul, b.last
   12b88:	adrp	x13, 2f000 <xexit@@Base+0x15c60>
   12b8c:	add	x8, x23, #0x8
   12b90:	add	x9, x20, #0x8
   12b94:	add	x10, x21, #0x8
   12b98:	add	x11, x18, #0x8
   12b9c:	add	x12, x22, #0x8
   12ba0:	add	x13, x13, #0xa30
   12ba4:	mov	x14, x16
   12ba8:	str	x13, [x12], #8
   12bac:	str	x13, [x11], #8
   12bb0:	str	x13, [x10], #8
   12bb4:	str	x13, [x9], #8
   12bb8:	ldrb	w15, [x8]
   12bbc:	subs	x14, x14, #0x1
   12bc0:	and	w15, w15, #0xe0
   12bc4:	orr	w15, w15, #0x3
   12bc8:	strb	w15, [x8], #8
   12bcc:	b.ne	12ba8 <xre_match@@Base+0x168>  // b.any
   12bd0:	sub	x9, x29, #0x70
   12bd4:	stur	x19, [x9, #-256]
   12bd8:	add	x9, x19, #0x8
   12bdc:	sub	x10, x29, #0x48
   12be0:	stur	x9, [x10, #-256]
   12be4:	add	x9, x21, #0x8
   12be8:	sub	x10, x29, #0x50
   12bec:	stur	x9, [x10, #-256]
   12bf0:	sub	x9, x29, #0x68
   12bf4:	stur	x17, [x9, #-256]
   12bf8:	add	x9, x17, #0x8
   12bfc:	sub	x10, x29, #0x58
   12c00:	cmp	w4, #0x0
   12c04:	stur	x9, [x10, #-256]
   12c08:	add	x9, x20, #0x8
   12c0c:	sub	x10, x29, #0x60
   12c10:	sub	x8, x29, #0x40
   12c14:	stur	x9, [x10, #-256]
   12c18:	cset	w9, eq  // eq = none
   12c1c:	cmp	x1, #0x0
   12c20:	stur	x22, [x8, #-256]
   12c24:	sub	x8, x29, #0x38
   12c28:	cset	w10, ne  // ne = any
   12c2c:	stur	x18, [x8, #-256]
   12c30:	sub	x8, x29, #0x8
   12c34:	tst	w10, w9
   12c38:	stur	x16, [x8, #-256]
   12c3c:	sub	x8, x29, #0x30
   12c40:	csel	w10, w2, w4, ne  // ne = any
   12c44:	csel	x18, x1, x3, ne  // ne = any
   12c48:	stur	xzr, [x8, #-256]
   12c4c:	sxtw	x8, w7
   12c50:	sxtw	x12, w5
   12c54:	csel	w15, wzr, w2, ne  // ne = any
   12c58:	csel	x13, xzr, x1, ne  // ne = any
   12c5c:	stur	w10, [x29, #-172]
   12c60:	add	x10, x18, w10, sxtw
   12c64:	sub	x14, x29, #0x20
   12c68:	sxtw	x9, w15
   12c6c:	stur	x10, [x29, #-160]
   12c70:	add	x10, x13, x8
   12c74:	add	x8, x18, x8
   12c78:	stur	x12, [x14, #-256]
   12c7c:	sub	x14, x18, #0x1
   12c80:	sub	x16, x29, #0x10
   12c84:	cmp	w15, w7
   12c88:	add	x11, x13, x12
   12c8c:	add	x12, x18, x12
   12c90:	stur	x14, [x16, #-256]
   12c94:	add	x16, x13, x9
   12c98:	neg	x14, x9
   12c9c:	sub	x17, x29, #0x28
   12ca0:	sub	x8, x8, x9
   12ca4:	stur	x14, [x17, #-256]
   12ca8:	sub	x9, x12, x9
   12cac:	csel	x17, x8, x18, lt  // lt = tstop
   12cb0:	csel	x12, x16, x10, lt  // lt = tstop
   12cb4:	cmp	w15, #0x1
   12cb8:	sub	x8, x16, #0x1
   12cbc:	stp	x15, x8, [x29, #-208]
   12cc0:	cset	w8, lt  // lt = tstop
   12cc4:	cmp	w15, w5
   12cc8:	cset	w10, lt  // lt = tstop
   12ccc:	orr	w8, w8, w10
   12cd0:	cmp	w8, #0x0
   12cd4:	csel	x2, x17, x12, ne  // ne = any
   12cd8:	csel	x3, x9, x11, ne  // ne = any
   12cdc:	cmp	w15, #0x0
   12ce0:	adrp	x1, 19000 <iterative_hash@@Base+0x140>
   12ce4:	mov	w22, wzr
   12ce8:	sub	x25, x29, #0x40
   12cec:	mov	w24, #0x101                 	// #257
   12cf0:	mov	w28, #0x100                 	// #256
   12cf4:	mov	w0, #0x231                 	// #561
   12cf8:	mov	w30, #0x3ce                 	// #974
   12cfc:	mov	w4, #0x5                   	// #5
   12d00:	csel	x8, x18, x13, eq  // eq = none
   12d04:	add	x1, x1, #0xe3c
   12d08:	mov	x15, x26
   12d0c:	stur	wzr, [x29, #-140]
   12d10:	stur	xzr, [x29, #-152]
   12d14:	stp	x12, x16, [x29, #-112]
   12d18:	stp	x13, x18, [x29, #-128]
   12d1c:	stp	x8, x5, [x29, #-240]
   12d20:	stur	x26, [x29, #-184]
   12d24:	stp	x17, x6, [x29, #-80]
   12d28:	stur	x20, [x29, #-96]
   12d2c:	b	12d48 <xre_match@@Base+0x308>
   12d30:	ldur	x8, [x29, #-104]
   12d34:	cmp	x3, x8
   12d38:	ldur	x8, [x29, #-128]
   12d3c:	ccmp	x3, x8, #0x0, ls  // ls = plast
   12d40:	ldur	x8, [x29, #-112]
   12d44:	csel	x2, x9, x8, cc  // cc = lo, ul, last
   12d48:	cmp	x27, x6
   12d4c:	b.eq	144c4 <xre_match@@Base+0x1a84>  // b.none
   12d50:	mov	w26, wzr
   12d54:	mov	x16, x27
   12d58:	b	12d84 <xre_match@@Base+0x344>
   12d5c:	mov	w26, wzr
   12d60:	mov	w22, w10
   12d64:	ldrb	w8, [x27, #1]
   12d68:	ldrsb	x9, [x27, #2]
   12d6c:	bfi	x8, x9, #8, #56
   12d70:	add	x8, x27, x8
   12d74:	add	x16, x8, #0x3
   12d78:	cmp	x16, x6
   12d7c:	mov	x27, x16
   12d80:	b.eq	144c4 <xre_match@@Base+0x1a84>  // b.none
   12d84:	ldrb	w10, [x16], #1
   12d88:	cmp	w10, #0x1d
   12d8c:	b.hi	14a34 <xre_match@@Base+0x1ff4>  // b.pmore
   12d90:	adr	x8, 12d64 <xre_match@@Base+0x324>
   12d94:	ldrh	w9, [x1, x10, lsl #1]
   12d98:	add	x8, x8, x9, lsl #2
   12d9c:	br	x8
   12da0:	cmp	w10, #0x5
   12da4:	cset	w11, eq  // eq = none
   12da8:	mov	x8, x3
   12dac:	mov	x9, x2
   12db0:	cmp	x3, x2
   12db4:	b.ne	12dcc <xre_match@@Base+0x38c>  // b.any
   12db8:	cmp	x9, x17
   12dbc:	mov	x2, x17
   12dc0:	mov	x3, x18
   12dc4:	b.ne	12da8 <xre_match@@Base+0x368>  // b.any
   12dc8:	b	12e58 <xre_match@@Base+0x418>
   12dcc:	mov	x12, x8
   12dd0:	cbz	x15, 12ddc <xre_match@@Base+0x39c>
   12dd4:	ldrb	w12, [x8]
   12dd8:	add	x12, x15, x12
   12ddc:	ldrb	w13, [x12]
   12de0:	ldrb	w12, [x16]
   12de4:	cmp	w13, w12, lsl #3
   12de8:	b.cs	12e08 <xre_match@@Base+0x3c8>  // b.hs, b.nlast
   12dec:	add	x14, x16, x13, lsr #3
   12df0:	ldrb	w14, [x14, #1]
   12df4:	and	w13, w13, #0x7
   12df8:	lsr	w13, w14, w13
   12dfc:	tbz	w13, #0, 12e08 <xre_match@@Base+0x3c8>
   12e00:	cmp	w10, #0x5
   12e04:	cset	w11, ne  // ne = any
   12e08:	add	x10, x12, x16
   12e0c:	add	x16, x10, #0x1
   12e10:	cbz	w11, 12e58 <xre_match@@Base+0x418>
   12e14:	cbnz	w26, 12e44 <xre_match@@Base+0x404>
   12e18:	cmp	x28, x24
   12e1c:	b.cc	12e40 <xre_match@@Base+0x400>  // b.lo, b.ul, b.last
   12e20:	add	x10, x23, x24, lsl #3
   12e24:	mov	x11, x24
   12e28:	ldrb	w12, [x10]
   12e2c:	add	x11, x11, #0x1
   12e30:	cmp	x11, x28
   12e34:	orr	w12, w12, #0x18
   12e38:	strb	w12, [x10], #8
   12e3c:	b.ls	12e28 <xre_match@@Base+0x3e8>  // b.plast
   12e40:	mov	w26, #0x1                   	// #1
   12e44:	add	x8, x8, #0x1
   12e48:	mov	w10, #0x22                  	// #34
   12e4c:	cmp	w10, #0x22
   12e50:	b.eq	12e64 <xre_match@@Base+0x424>  // b.none
   12e54:	b	146ac <xre_match@@Base+0x1c6c>
   12e58:	mov	w10, #0x10                  	// #16
   12e5c:	cmp	w10, #0x22
   12e60:	b.ne	146ac <xre_match@@Base+0x1c6c>  // b.any
   12e64:	mov	x2, x9
   12e68:	mov	x3, x8
   12e6c:	b	12d78 <xre_match@@Base+0x338>
   12e70:	stur	x16, [x29, #-16]
   12e74:	ldrb	w8, [x16]
   12e78:	lsl	x8, x8, #3
   12e7c:	ldrb	w8, [x23, x8]
   12e80:	mvn	w8, w8
   12e84:	tst	w8, #0x3
   12e88:	b.ne	12f04 <xre_match@@Base+0x4c4>  // b.any
   12e8c:	sub	x0, x29, #0x10
   12e90:	mov	x1, x6
   12e94:	sub	x8, x29, #0x78
   12e98:	mov	x19, x2
   12e9c:	mov	x2, x23
   12ea0:	stur	x3, [x29, #-224]
   12ea4:	stur	x21, [x8, #-256]
   12ea8:	mov	x21, x16
   12eac:	mov	x26, x5
   12eb0:	mov	w28, w4
   12eb4:	bl	1793c <xregfree@@Base+0x50>
   12eb8:	ldrb	w8, [x21]
   12ebc:	sub	x9, x29, #0x78
   12ec0:	ldur	x21, [x9, #-256]
   12ec4:	ldur	x15, [x29, #-184]
   12ec8:	lsl	x8, x8, #3
   12ecc:	ldrb	w9, [x23, x8]
   12ed0:	ldur	x3, [x29, #-224]
   12ed4:	ldp	x17, x6, [x29, #-80]
   12ed8:	ldur	x18, [x29, #-120]
   12edc:	adrp	x1, 19000 <iterative_hash@@Base+0x140>
   12ee0:	and	w9, w9, #0xfc
   12ee4:	mov	w4, w28
   12ee8:	mov	x5, x26
   12eec:	mov	x2, x19
   12ef0:	add	x1, x1, #0xe3c
   12ef4:	mov	w30, #0x3ce                 	// #974
   12ef8:	bfxil	w9, w0, #0, #2
   12efc:	mov	w0, #0x231                 	// #561
   12f00:	strb	w9, [x23, x8]
   12f04:	ldrb	w8, [x27, #1]
   12f08:	adrp	x11, 2f000 <xexit@@Base+0x15c60>
   12f0c:	add	x11, x11, #0xa30
   12f10:	mov	w26, wzr
   12f14:	lsl	x8, x8, #3
   12f18:	ldr	x9, [x20, x8]
   12f1c:	ldrb	w10, [x23, x8]
   12f20:	cmp	x9, x11
   12f24:	csel	x11, x3, x9, eq  // eq = none
   12f28:	tst	w10, #0x3
   12f2c:	sub	x10, x29, #0x38
   12f30:	ldur	x10, [x10, #-256]
   12f34:	csel	x9, x9, x11, eq  // eq = none
   12f38:	cmp	x24, #0x101
   12f3c:	str	x9, [x10, x8]
   12f40:	ldrb	w8, [x27, #1]
   12f44:	str	x3, [x20, x8, lsl #3]
   12f48:	ldrb	w8, [x27, #1]
   12f4c:	lsl	x8, x8, #3
   12f50:	ldrb	w9, [x23, x8]
   12f54:	orr	w9, w9, #0x4
   12f58:	strb	w9, [x23, x8]
   12f5c:	ldrb	w8, [x27, #1]
   12f60:	lsl	x8, x8, #3
   12f64:	ldrb	w9, [x23, x8]
   12f68:	and	w9, w9, #0xfffffff7
   12f6c:	strb	w9, [x23, x8]
   12f70:	ldrb	w28, [x27, #1]
   12f74:	add	x8, x27, #0x3
   12f78:	sub	x9, x29, #0x30
   12f7c:	stur	x8, [x9, #-256]
   12f80:	csel	x24, x28, x24, eq  // eq = none
   12f84:	mov	x16, x8
   12f88:	b	12d78 <xre_match@@Base+0x338>
   12f8c:	ldrb	w8, [x16]
   12f90:	adrp	x11, 2f000 <xexit@@Base+0x15c60>
   12f94:	add	x11, x11, #0xa30
   12f98:	lsl	x8, x8, #3
   12f9c:	ldr	x9, [x21, x8]
   12fa0:	ldrb	w10, [x23, x8]
   12fa4:	cmp	x9, x11
   12fa8:	csel	x11, x3, x9, eq  // eq = none
   12fac:	tst	w10, #0x3
   12fb0:	sub	x10, x29, #0x40
   12fb4:	ldur	x10, [x10, #-256]
   12fb8:	csel	x9, x9, x11, eq  // eq = none
   12fbc:	cmp	x28, x24
   12fc0:	str	x9, [x10, x8]
   12fc4:	ldrb	w8, [x16]
   12fc8:	str	x3, [x21, x8, lsl #3]
   12fcc:	ldrb	w8, [x16]
   12fd0:	lsl	x8, x8, #3
   12fd4:	ldrb	w9, [x23, x8]
   12fd8:	and	w9, w9, #0xfffffffb
   12fdc:	strb	w9, [x23, x8]
   12fe0:	b.ne	13a04 <xre_match@@Base+0xfc4>  // b.any
   12fe4:	mov	w24, #0x101                 	// #257
   12fe8:	mov	w28, #0x100                 	// #256
   12fec:	b	13a24 <xre_match@@Base+0xfe4>
   12ff0:	ldrb	w9, [x27, #1]
   12ff4:	adrp	x10, 2f000 <xexit@@Base+0x15c60>
   12ff8:	add	x10, x10, #0xa30
   12ffc:	add	x16, x27, #0x2
   13000:	ldr	x8, [x20, x9, lsl #3]
   13004:	cmp	x8, x10
   13008:	b.eq	13d7c <xre_match@@Base+0x133c>  // b.none
   1300c:	stur	x28, [x29, #-168]
   13010:	ldr	x28, [x21, x9, lsl #3]
   13014:	cmp	x28, x10
   13018:	b.eq	14174 <xre_match@@Base+0x1734>  // b.none
   1301c:	ldur	x9, [x29, #-208]
   13020:	ldur	x12, [x29, #-128]
   13024:	ldur	x13, [x29, #-104]
   13028:	stur	x16, [x29, #-192]
   1302c:	cmp	w9, #0x0
   13030:	cset	w9, ne  // ne = any
   13034:	cmp	x12, x8
   13038:	cset	w10, ls  // ls = plast
   1303c:	cmp	x8, x13
   13040:	cset	w11, ls  // ls = plast
   13044:	and	w10, w9, w10
   13048:	cmp	x12, x28
   1304c:	and	w10, w11, w10
   13050:	cset	w11, ls  // ls = plast
   13054:	cmp	x28, x13
   13058:	cset	w12, ls  // ls = plast
   1305c:	and	w11, w12, w11
   13060:	and	w9, w9, w11
   13064:	eor	w9, w10, w9
   13068:	cmp	w9, #0x0
   1306c:	ldur	x9, [x29, #-112]
   13070:	sub	x10, x29, #0x88
   13074:	csel	x19, x9, x28, ne  // ne = any
   13078:	add	x9, x23, x24, lsl #3
   1307c:	stur	x9, [x10, #-256]
   13080:	mov	w10, w26
   13084:	mov	x9, x19
   13088:	mov	x19, x9
   1308c:	cmp	x9, x28
   13090:	mov	x26, x8
   13094:	b.eq	130b0 <xre_match@@Base+0x670>  // b.none
   13098:	cmp	x19, x17
   1309c:	b.eq	130b0 <xre_match@@Base+0x670>  // b.none
   130a0:	cmp	x26, x19
   130a4:	mov	x8, x18
   130a8:	mov	x9, x28
   130ac:	b.eq	13088 <xre_match@@Base+0x648>  // b.none
   130b0:	cmp	x26, x19
   130b4:	b.eq	14274 <xre_match@@Base+0x1834>  // b.none
   130b8:	mov	x8, x2
   130bc:	mov	x9, x3
   130c0:	mov	x27, x9
   130c4:	mov	x2, x8
   130c8:	cmp	x9, x8
   130cc:	b.ne	130e4 <xre_match@@Base+0x6a4>  // b.any
   130d0:	cmp	x2, x17
   130d4:	mov	x8, x17
   130d8:	mov	x9, x18
   130dc:	b.ne	130c0 <xre_match@@Base+0x680>  // b.any
   130e0:	b	13f78 <xre_match@@Base+0x1538>
   130e4:	sub	x8, x29, #0x78
   130e8:	stur	x2, [x8, #-256]
   130ec:	sub	x8, x2, x27
   130f0:	sub	x9, x19, x26
   130f4:	ldur	x3, [x29, #-184]
   130f8:	cmp	x9, w8, sxtw
   130fc:	csel	x2, x9, x8, lt  // lt = tstop
   13100:	sxtw	x8, w2
   13104:	sub	x9, x29, #0x80
   13108:	mov	x0, x27
   1310c:	mov	x1, x26
   13110:	stur	w10, [x29, #-224]
   13114:	stur	w4, [x29, #-216]
   13118:	stur	x8, [x9, #-256]
   1311c:	cbz	x3, 1312c <xre_match@@Base+0x6ec>
   13120:	bl	17aa8 <xregfree@@Base+0x1bc>
   13124:	cbz	w0, 13138 <xre_match@@Base+0x6f8>
   13128:	b	14310 <xre_match@@Base+0x18d0>
   1312c:	mov	x2, x8
   13130:	bl	9ac0 <bcmp@plt>
   13134:	cbnz	w0, 14310 <xre_match@@Base+0x18d0>
   13138:	sub	x8, x29, #0x80
   1313c:	ldur	w9, [x29, #-224]
   13140:	ldur	x8, [x8, #-256]
   13144:	sub	x10, x29, #0x78
   13148:	ldur	x18, [x29, #-120]
   1314c:	ldp	x17, x6, [x29, #-80]
   13150:	ldur	x2, [x10, #-256]
   13154:	ldur	w4, [x29, #-216]
   13158:	cmp	w9, #0x0
   1315c:	adrp	x1, 19000 <iterative_hash@@Base+0x140>
   13160:	add	x3, x27, x8
   13164:	add	x8, x26, x8
   13168:	csinc	w26, w9, wzr, ne  // ne = any
   1316c:	mov	w0, #0x231                 	// #561
   13170:	mov	w30, #0x3ce                 	// #974
   13174:	add	x1, x1, #0xe3c
   13178:	cbnz	w9, 13080 <xre_match@@Base+0x640>
   1317c:	ldur	x9, [x29, #-168]
   13180:	cmp	x9, x24
   13184:	b.cc	13080 <xre_match@@Base+0x640>  // b.lo, b.ul, b.last
   13188:	sub	x9, x29, #0x88
   1318c:	ldur	x9, [x9, #-256]
   13190:	ldur	x12, [x29, #-168]
   13194:	mov	x10, x24
   13198:	ldrb	w11, [x9]
   1319c:	add	x10, x10, #0x1
   131a0:	cmp	x10, x12
   131a4:	orr	w11, w11, #0x18
   131a8:	strb	w11, [x9], #8
   131ac:	b.ls	13198 <xre_match@@Base+0x758>  // b.plast
   131b0:	mov	w26, #0x1                   	// #1
   131b4:	b	13080 <xre_match@@Base+0x640>
   131b8:	ldur	x8, [x29, #-160]
   131bc:	b	13438 <xre_match@@Base+0x9f8>
   131c0:	mov	x9, x2
   131c4:	mov	x8, x3
   131c8:	mov	x2, x9
   131cc:	cmp	x3, x9
   131d0:	b.ne	138b8 <xre_match@@Base+0xe78>  // b.any
   131d4:	cmp	x2, x17
   131d8:	mov	x9, x17
   131dc:	mov	x3, x18
   131e0:	b.ne	131c4 <xre_match@@Base+0x784>  // b.any
   131e4:	b	14518 <xre_match@@Base+0x1ad8>
   131e8:	mov	x9, x2
   131ec:	mov	x8, x3
   131f0:	mov	x2, x9
   131f4:	cmp	x3, x9
   131f8:	b.ne	13920 <xre_match@@Base+0xee0>  // b.any
   131fc:	cmp	x2, x17
   13200:	mov	x9, x17
   13204:	mov	x3, x18
   13208:	b.ne	131ec <xre_match@@Base+0x7ac>  // b.any
   1320c:	b	14518 <xre_match@@Base+0x1ad8>
   13210:	ldrb	w9, [x27, #1]
   13214:	add	x10, x27, #0x2
   13218:	mov	w11, w9
   1321c:	mov	w12, w9
   13220:	cbz	x15, 13850 <xre_match@@Base+0xe10>
   13224:	mov	x12, x2
   13228:	mov	x8, x3
   1322c:	mov	x2, x12
   13230:	cmp	x3, x12
   13234:	b.ne	1324c <xre_match@@Base+0x80c>  // b.any
   13238:	cmp	x2, x17
   1323c:	mov	x12, x17
   13240:	mov	x3, x18
   13244:	b.ne	13228 <xre_match@@Base+0x7e8>  // b.any
   13248:	b	14518 <xre_match@@Base+0x1ad8>
   1324c:	ldrb	w12, [x8], #1
   13250:	ldrb	w13, [x10]
   13254:	ldrb	w12, [x15, x12]
   13258:	mov	x3, x8
   1325c:	cmp	w12, w13
   13260:	b.ne	14598 <xre_match@@Base+0x1b58>  // b.any
   13264:	subs	w11, w11, #0x1
   13268:	add	x10, x10, #0x1
   1326c:	b.ne	13224 <xre_match@@Base+0x7e4>  // b.any
   13270:	b	13898 <xre_match@@Base+0xe58>
   13274:	mov	x9, x2
   13278:	mov	x8, x3
   1327c:	mov	x2, x9
   13280:	cmp	x3, x9
   13284:	b.ne	13988 <xre_match@@Base+0xf48>  // b.any
   13288:	cmp	x2, x17
   1328c:	mov	x9, x17
   13290:	mov	x3, x18
   13294:	b.ne	13278 <xre_match@@Base+0x838>  // b.any
   13298:	b	14518 <xre_match@@Base+0x1ad8>
   1329c:	ldur	x8, [x29, #-160]
   132a0:	cmp	x3, x8
   132a4:	b.eq	13d88 <xre_match@@Base+0x1348>  // b.none
   132a8:	ldur	x8, [x29, #-104]
   132ac:	cmp	x3, x8
   132b0:	csel	x8, x18, x3, eq  // eq = none
   132b4:	ldrb	w8, [x8]
   132b8:	cmp	w8, #0xa
   132bc:	b.eq	1341c <xre_match@@Base+0x9dc>  // b.none
   132c0:	b	14598 <xre_match@@Base+0x1b58>
   132c4:	ldrb	w10, [x27, #1]
   132c8:	ldrsb	x9, [x27, #2]
   132cc:	add	x8, x27, #0x3
   132d0:	mov	x12, x8
   132d4:	bfi	x10, x9, #8, #56
   132d8:	b	132e0 <xre_match@@Base+0x8a0>
   132dc:	add	x12, x9, #0x3
   132e0:	add	x11, x12, #0x2
   132e4:	mov	x9, x12
   132e8:	cmp	x11, x6
   132ec:	b.cs	13300 <xre_match@@Base+0x8c0>  // b.hs, b.nlast
   132f0:	ldrb	w12, [x9]
   132f4:	and	w12, w12, #0xfe
   132f8:	cmp	w12, #0x6
   132fc:	b.eq	132dc <xre_match@@Base+0x89c>  // b.none
   13300:	add	x12, x9, #0x6
   13304:	cmp	x12, x6
   13308:	b.cs	13318 <xre_match@@Base+0x8d8>  // b.hs, b.nlast
   1330c:	ldrb	w13, [x9]
   13310:	cmp	w13, #0x13
   13314:	b.eq	132e0 <xre_match@@Base+0x8a0>  // b.none
   13318:	add	x8, x8, x10
   1331c:	cmp	x9, x6
   13320:	stur	x8, [x29, #-16]
   13324:	b.eq	14010 <xre_match@@Base+0x15d0>  // b.none
   13328:	ldrb	w12, [x9]
   1332c:	cmp	w12, #0x2
   13330:	b.ne	13f9c <xre_match@@Base+0x155c>  // b.any
   13334:	ldrb	w9, [x11]
   13338:	b	13fb4 <xre_match@@Base+0x1574>
   1333c:	sub	x9, x28, x24
   13340:	add	x9, x9, x9, lsl #1
   13344:	sub	w8, w4, w22
   13348:	add	x27, x9, #0x7
   1334c:	cmp	x27, x8
   13350:	stur	x16, [x29, #-192]
   13354:	stur	w26, [x29, #-216]
   13358:	stur	x3, [x29, #-224]
   1335c:	b.ls	13b90 <xre_match@@Base+0x1150>  // b.plast
   13360:	adrp	x8, 2e000 <xexit@@Base+0x14c60>
   13364:	ldr	x8, [x8, #3952]
   13368:	mov	w9, #0x13                  	// #19
   1336c:	ldr	w8, [x8]
   13370:	mul	w8, w8, w9
   13374:	stur	w8, [x29, #-168]
   13378:	ldur	w8, [x29, #-168]
   1337c:	cmp	w4, w8
   13380:	b.hi	140e0 <xre_match@@Base+0x16a0>  // b.pmore
   13384:	lsl	w19, w4, #1
   13388:	sub	x26, sp, w19, uxtw #3
   1338c:	mov	sp, x26
   13390:	mov	w8, w4
   13394:	mov	w20, w22
   13398:	mov	x22, x28
   1339c:	mov	x28, x2
   133a0:	lsl	x2, x8, #3
   133a4:	mov	x0, x26
   133a8:	mov	x1, x25
   133ac:	bl	8fb0 <memcpy@plt>
   133b0:	mov	x2, x28
   133b4:	mov	x28, x22
   133b8:	mov	w22, w20
   133bc:	ldur	x20, [x29, #-96]
   133c0:	ldp	x17, x6, [x29, #-80]
   133c4:	sub	w8, w19, w22
   133c8:	cmp	x27, x8
   133cc:	mov	w4, w19
   133d0:	mov	x25, x26
   133d4:	b.hi	13378 <xre_match@@Base+0x938>  // b.pmore
   133d8:	b	13b98 <xre_match@@Base+0x1158>
   133dc:	ldrb	w8, [x27, #3]
   133e0:	ldrsb	w9, [x27, #4]
   133e4:	bfi	w8, w9, #8, #24
   133e8:	subs	w9, w8, #0x1
   133ec:	b.lt	13d98 <xre_match@@Base+0x1358>  // b.tstop
   133f0:	sturh	w9, [x27, #3]
   133f4:	add	x16, x27, #0x5
   133f8:	b	12d78 <xre_match@@Base+0x338>
   133fc:	ldur	w8, [x29, #-172]
   13400:	cbz	w8, 13c24 <xre_match@@Base+0x11e4>
   13404:	ldur	x8, [x29, #-240]
   13408:	cmp	x3, x8
   1340c:	b.eq	13c24 <xre_match@@Base+0x11e4>  // b.none
   13410:	ldurb	w8, [x3, #-1]
   13414:	cmp	w8, #0xa
   13418:	b.ne	14598 <xre_match@@Base+0x1b58>  // b.any
   1341c:	ldur	x8, [x29, #-136]
   13420:	ldrsb	w8, [x8, #56]
   13424:	tbnz	w8, #31, 12d78 <xre_match@@Base+0x338>
   13428:	b	14598 <xre_match@@Base+0x1b58>
   1342c:	ldur	w8, [x29, #-172]
   13430:	cbz	w8, 12d78 <xre_match@@Base+0x338>
   13434:	ldur	x8, [x29, #-240]
   13438:	cmp	x3, x8
   1343c:	b.eq	12d78 <xre_match@@Base+0x338>  // b.none
   13440:	b	14598 <xre_match@@Base+0x1b58>
   13444:	sub	x8, x29, #0x78
   13448:	stur	x21, [x8, #-256]
   1344c:	ldrb	w8, [x27, #1]
   13450:	sub	x9, x29, #0x80
   13454:	add	x16, x27, #0x3
   13458:	stur	w26, [x29, #-216]
   1345c:	stur	x8, [x29, #-224]
   13460:	ldrsb	x8, [x27, #2]
   13464:	stur	x8, [x9, #-256]
   13468:	sub	x9, x28, x24
   1346c:	add	x9, x9, x9, lsl #1
   13470:	sub	w8, w4, w22
   13474:	add	x9, x9, #0x7
   13478:	cmp	x9, x8
   1347c:	stur	x9, [x29, #-168]
   13480:	b.ls	13c34 <xre_match@@Base+0x11f4>  // b.plast
   13484:	adrp	x8, 2e000 <xexit@@Base+0x14c60>
   13488:	ldr	x8, [x8, #3952]
   1348c:	mov	w9, #0x13                  	// #19
   13490:	ldr	w8, [x8]
   13494:	mul	w8, w8, w9
   13498:	stur	w8, [x29, #-192]
   1349c:	ldur	w8, [x29, #-192]
   134a0:	cmp	w4, w8
   134a4:	b.hi	14110 <xre_match@@Base+0x16d0>  // b.pmore
   134a8:	lsl	w27, w4, #1
   134ac:	sub	x26, sp, w27, uxtw #3
   134b0:	mov	sp, x26
   134b4:	mov	w8, w4
   134b8:	mov	x19, x2
   134bc:	lsl	x2, x8, #3
   134c0:	mov	x0, x26
   134c4:	mov	x1, x25
   134c8:	mov	w20, w22
   134cc:	mov	x22, x28
   134d0:	mov	x28, x3
   134d4:	mov	x21, x16
   134d8:	bl	8fb0 <memcpy@plt>
   134dc:	ldur	x9, [x29, #-168]
   134e0:	mov	x3, x28
   134e4:	mov	x28, x22
   134e8:	mov	w22, w20
   134ec:	ldur	x20, [x29, #-96]
   134f0:	ldp	x17, x6, [x29, #-80]
   134f4:	sub	w8, w27, w22
   134f8:	mov	x2, x19
   134fc:	mov	x16, x21
   13500:	cmp	x9, x8
   13504:	mov	w4, w27
   13508:	mov	x25, x26
   1350c:	b.hi	1349c <xre_match@@Base+0xa5c>  // b.pmore
   13510:	b	13c3c <xre_match@@Base+0x11fc>
   13514:	sub	x9, x28, x24
   13518:	add	x9, x9, x9, lsl #1
   1351c:	sub	w8, w4, w22
   13520:	add	x9, x9, #0x7
   13524:	cmp	x9, x8
   13528:	stur	w26, [x29, #-216]
   1352c:	stur	x3, [x29, #-224]
   13530:	stur	x9, [x29, #-168]
   13534:	b.ls	13cf4 <xre_match@@Base+0x12b4>  // b.plast
   13538:	adrp	x8, 2e000 <xexit@@Base+0x14c60>
   1353c:	ldr	x8, [x8, #3952]
   13540:	mov	w9, #0x13                  	// #19
   13544:	ldr	w8, [x8]
   13548:	mul	w8, w8, w9
   1354c:	stur	w8, [x29, #-192]
   13550:	ldur	w8, [x29, #-192]
   13554:	cmp	w4, w8
   13558:	b.hi	14144 <xre_match@@Base+0x1704>  // b.pmore
   1355c:	lsl	w19, w4, #1
   13560:	sub	x26, sp, w19, uxtw #3
   13564:	mov	sp, x26
   13568:	mov	w8, w4
   1356c:	mov	w20, w22
   13570:	mov	x22, x28
   13574:	mov	x28, x2
   13578:	lsl	x2, x8, #3
   1357c:	mov	x0, x26
   13580:	mov	x1, x25
   13584:	bl	8fb0 <memcpy@plt>
   13588:	ldur	x9, [x29, #-168]
   1358c:	mov	x2, x28
   13590:	mov	x28, x22
   13594:	mov	w22, w20
   13598:	ldur	x20, [x29, #-96]
   1359c:	ldp	x17, x6, [x29, #-80]
   135a0:	ldur	x18, [x29, #-120]
   135a4:	adrp	x1, 19000 <iterative_hash@@Base+0x140>
   135a8:	sub	w8, w19, w22
   135ac:	add	x1, x1, #0xe3c
   135b0:	mov	w30, #0x3ce                 	// #974
   135b4:	mov	w0, #0x231                 	// #561
   135b8:	cmp	x9, x8
   135bc:	mov	w4, w19
   135c0:	mov	x25, x26
   135c4:	b.hi	13550 <xre_match@@Base+0xb10>  // b.pmore
   135c8:	b	13cfc <xre_match@@Base+0x12bc>
   135cc:	ldrb	w8, [x27, #3]
   135d0:	ldrsb	w9, [x27, #4]
   135d4:	bfi	w8, w9, #8, #24
   135d8:	cbz	w8, 13f70 <xre_match@@Base+0x1530>
   135dc:	sub	w8, w8, #0x1
   135e0:	sturh	w8, [x27, #3]
   135e4:	b	12d64 <xre_match@@Base+0x324>
   135e8:	ldrb	w8, [x27, #1]
   135ec:	ldrsb	x9, [x27, #2]
   135f0:	add	x16, x27, #0x5
   135f4:	bfi	x8, x9, #8, #56
   135f8:	add	x9, x27, #0x3
   135fc:	add	x10, x9, x8
   13600:	stur	x10, [x29, #-16]
   13604:	ldrb	w10, [x27, #3]
   13608:	ldrb	w11, [x27, #4]
   1360c:	strb	w10, [x9, x8]
   13610:	ldur	x8, [x29, #-16]
   13614:	strb	w11, [x8, #1]
   13618:	b	12d78 <xre_match@@Base+0x338>
   1361c:	ldur	x8, [x29, #-160]
   13620:	cmp	x3, x8
   13624:	b.eq	14598 <xre_match@@Base+0x1b58>  // b.none
   13628:	sub	x8, x29, #0x10
   1362c:	ldur	x8, [x8, #-256]
   13630:	ldur	x9, [x29, #-104]
   13634:	cmp	x3, x8
   13638:	ldur	x8, [x29, #-200]
   1363c:	csel	x8, x8, x3, eq  // eq = none
   13640:	cmp	x3, x9
   13644:	csel	x8, x18, x8, eq  // eq = none
   13648:	ldrb	w9, [x8]
   1364c:	adrp	x8, 2f000 <xexit@@Base+0x15c60>
   13650:	add	x8, x8, #0x930
   13654:	ldrb	w9, [x8, x9]
   13658:	cmp	w9, #0x1
   1365c:	b.ne	14598 <xre_match@@Base+0x1b58>  // b.any
   13660:	ldur	w9, [x29, #-172]
   13664:	cbz	w9, 12d78 <xre_match@@Base+0x338>
   13668:	ldur	x9, [x29, #-240]
   1366c:	cmp	x3, x9
   13670:	b.eq	12d78 <xre_match@@Base+0x338>  // b.none
   13674:	ldur	x10, [x29, #-200]
   13678:	ldur	x11, [x29, #-104]
   1367c:	sub	x9, x3, #0x1
   13680:	cmp	x3, x18
   13684:	csel	x10, x10, x9, eq  // eq = none
   13688:	cmp	x9, x11
   1368c:	csel	x9, x18, x10, eq  // eq = none
   13690:	b	1383c <xre_match@@Base+0xdfc>
   13694:	ldur	x8, [x29, #-160]
   13698:	cmp	x3, x8
   1369c:	mov	w8, #0x22                  	// #34
   136a0:	b.eq	137bc <xre_match@@Base+0xd7c>  // b.none
   136a4:	ldur	w9, [x29, #-172]
   136a8:	cbz	w9, 137bc <xre_match@@Base+0xd7c>
   136ac:	ldur	x9, [x29, #-240]
   136b0:	cmp	x3, x9
   136b4:	b.eq	137bc <xre_match@@Base+0xd7c>  // b.none
   136b8:	ldur	x12, [x29, #-200]
   136bc:	ldur	x11, [x29, #-104]
   136c0:	sub	x8, x3, #0x1
   136c4:	cmp	x3, x18
   136c8:	csel	x9, x12, x8, eq  // eq = none
   136cc:	cmp	x8, x11
   136d0:	csel	x8, x18, x9, eq  // eq = none
   136d4:	ldrb	w8, [x8]
   136d8:	adrp	x9, 2f000 <xexit@@Base+0x15c60>
   136dc:	add	x9, x9, #0x930
   136e0:	sub	x10, x29, #0x10
   136e4:	ldrb	w8, [x9, x8]
   136e8:	ldur	x10, [x10, #-256]
   136ec:	cmp	w8, #0x1
   136f0:	cset	w8, eq  // eq = none
   136f4:	cmp	x3, x10
   136f8:	csel	x10, x12, x3, eq  // eq = none
   136fc:	cmp	x3, x11
   13700:	csel	x10, x18, x10, eq  // eq = none
   13704:	ldrb	w10, [x10]
   13708:	ldrb	w9, [x9, x10]
   1370c:	mov	w10, #0x10                  	// #16
   13710:	cmp	w9, #0x1
   13714:	cset	w9, eq  // eq = none
   13718:	eor	w8, w8, w9
   1371c:	cmp	w8, #0x0
   13720:	mov	w8, #0x22                  	// #34
   13724:	b	137b8 <xre_match@@Base+0xd78>
   13728:	ldur	x8, [x29, #-160]
   1372c:	cmp	x3, x8
   13730:	mov	w8, #0x10                  	// #16
   13734:	b.eq	137bc <xre_match@@Base+0xd7c>  // b.none
   13738:	ldur	w9, [x29, #-172]
   1373c:	cbz	w9, 137bc <xre_match@@Base+0xd7c>
   13740:	ldur	x9, [x29, #-240]
   13744:	cmp	x3, x9
   13748:	b.eq	137bc <xre_match@@Base+0xd7c>  // b.none
   1374c:	ldur	x12, [x29, #-200]
   13750:	ldur	x11, [x29, #-104]
   13754:	sub	x8, x3, #0x1
   13758:	cmp	x3, x18
   1375c:	csel	x9, x12, x8, eq  // eq = none
   13760:	cmp	x8, x11
   13764:	csel	x8, x18, x9, eq  // eq = none
   13768:	ldrb	w8, [x8]
   1376c:	adrp	x9, 2f000 <xexit@@Base+0x15c60>
   13770:	add	x9, x9, #0x930
   13774:	sub	x10, x29, #0x10
   13778:	ldrb	w8, [x9, x8]
   1377c:	ldur	x10, [x10, #-256]
   13780:	cmp	w8, #0x1
   13784:	cset	w8, eq  // eq = none
   13788:	cmp	x3, x10
   1378c:	csel	x10, x12, x3, eq  // eq = none
   13790:	cmp	x3, x11
   13794:	csel	x10, x18, x10, eq  // eq = none
   13798:	ldrb	w10, [x10]
   1379c:	ldrb	w9, [x9, x10]
   137a0:	mov	w10, #0x22                  	// #34
   137a4:	cmp	w9, #0x1
   137a8:	cset	w9, eq  // eq = none
   137ac:	eor	w8, w8, w9
   137b0:	cmp	w8, #0x0
   137b4:	mov	w8, #0x10                  	// #16
   137b8:	csel	w8, w8, w10, ne  // ne = any
   137bc:	cmp	w8, #0x22
   137c0:	b.eq	12d78 <xre_match@@Base+0x338>  // b.none
   137c4:	b	14698 <xre_match@@Base+0x1c58>
   137c8:	ldur	w8, [x29, #-172]
   137cc:	cbz	w8, 14598 <xre_match@@Base+0x1b58>
   137d0:	ldur	x8, [x29, #-240]
   137d4:	cmp	x3, x8
   137d8:	b.eq	14598 <xre_match@@Base+0x1b58>  // b.none
   137dc:	ldur	x9, [x29, #-200]
   137e0:	ldur	x10, [x29, #-104]
   137e4:	sub	x8, x3, #0x1
   137e8:	cmp	x3, x18
   137ec:	csel	x9, x9, x8, eq  // eq = none
   137f0:	cmp	x8, x10
   137f4:	csel	x8, x18, x9, eq  // eq = none
   137f8:	ldrb	w9, [x8]
   137fc:	adrp	x8, 2f000 <xexit@@Base+0x15c60>
   13800:	add	x8, x8, #0x930
   13804:	ldrb	w9, [x8, x9]
   13808:	cmp	w9, #0x1
   1380c:	b.ne	14598 <xre_match@@Base+0x1b58>  // b.any
   13810:	ldur	x9, [x29, #-160]
   13814:	cmp	x3, x9
   13818:	b.eq	12d78 <xre_match@@Base+0x338>  // b.none
   1381c:	sub	x9, x29, #0x10
   13820:	ldur	x9, [x9, #-256]
   13824:	ldur	x10, [x29, #-104]
   13828:	cmp	x3, x9
   1382c:	ldur	x9, [x29, #-200]
   13830:	csel	x9, x9, x3, eq  // eq = none
   13834:	cmp	x3, x10
   13838:	csel	x9, x18, x9, eq  // eq = none
   1383c:	ldrb	w9, [x9]
   13840:	ldrb	w8, [x8, x9]
   13844:	cmp	w8, #0x1
   13848:	b.ne	12d78 <xre_match@@Base+0x338>  // b.any
   1384c:	b	14598 <xre_match@@Base+0x1b58>
   13850:	mov	x11, x2
   13854:	mov	x8, x3
   13858:	mov	x2, x11
   1385c:	cmp	x3, x11
   13860:	b.ne	13878 <xre_match@@Base+0xe38>  // b.any
   13864:	cmp	x2, x17
   13868:	mov	x11, x17
   1386c:	mov	x3, x18
   13870:	b.ne	13854 <xre_match@@Base+0xe14>  // b.any
   13874:	b	14518 <xre_match@@Base+0x1ad8>
   13878:	ldrb	w11, [x8], #1
   1387c:	ldrb	w13, [x10]
   13880:	mov	x3, x8
   13884:	cmp	w11, w13
   13888:	b.ne	14598 <xre_match@@Base+0x1b58>  // b.any
   1388c:	subs	w12, w12, #0x1
   13890:	add	x10, x10, #0x1
   13894:	b.ne	13850 <xre_match@@Base+0xe10>  // b.any
   13898:	sub	w8, w9, #0x1
   1389c:	add	x8, x27, x8
   138a0:	add	x16, x8, #0x3
   138a4:	cbnz	w26, 12d78 <xre_match@@Base+0x338>
   138a8:	cmp	x28, x24
   138ac:	b.cs	143a0 <xre_match@@Base+0x1960>  // b.hs, b.nlast
   138b0:	mov	w26, #0x1                   	// #1
   138b4:	b	12d78 <xre_match@@Base+0x338>
   138b8:	sub	x9, x29, #0x10
   138bc:	ldur	x9, [x9, #-256]
   138c0:	ldur	x10, [x29, #-104]
   138c4:	cmp	x8, x9
   138c8:	ldur	x9, [x29, #-200]
   138cc:	csel	x9, x9, x8, eq  // eq = none
   138d0:	cmp	x8, x10
   138d4:	csel	x9, x18, x9, eq  // eq = none
   138d8:	ldrb	w9, [x9]
   138dc:	adrp	x10, 2f000 <xexit@@Base+0x15c60>
   138e0:	add	x10, x10, #0x930
   138e4:	ldrb	w9, [x10, x9]
   138e8:	cmp	w9, #0x1
   138ec:	b.ne	14518 <xre_match@@Base+0x1ad8>  // b.any
   138f0:	cbnz	w26, 139fc <xre_match@@Base+0xfbc>
   138f4:	cmp	x28, x24
   138f8:	b.cc	139f8 <xre_match@@Base+0xfb8>  // b.lo, b.ul, b.last
   138fc:	add	x9, x23, x24, lsl #3
   13900:	mov	x10, x24
   13904:	ldrb	w11, [x9]
   13908:	add	x10, x10, #0x1
   1390c:	cmp	x10, x28
   13910:	orr	w11, w11, #0x18
   13914:	strb	w11, [x9], #8
   13918:	b.ls	13904 <xre_match@@Base+0xec4>  // b.plast
   1391c:	b	139f8 <xre_match@@Base+0xfb8>
   13920:	sub	x9, x29, #0x10
   13924:	ldur	x9, [x9, #-256]
   13928:	ldur	x10, [x29, #-104]
   1392c:	cmp	x8, x9
   13930:	ldur	x9, [x29, #-200]
   13934:	csel	x9, x9, x8, eq  // eq = none
   13938:	cmp	x8, x10
   1393c:	csel	x9, x18, x9, eq  // eq = none
   13940:	ldrb	w9, [x9]
   13944:	adrp	x10, 2f000 <xexit@@Base+0x15c60>
   13948:	add	x10, x10, #0x930
   1394c:	ldrb	w9, [x10, x9]
   13950:	cmp	w9, #0x1
   13954:	b.eq	14518 <xre_match@@Base+0x1ad8>  // b.none
   13958:	cbnz	w26, 139fc <xre_match@@Base+0xfbc>
   1395c:	cmp	x28, x24
   13960:	b.cc	139f8 <xre_match@@Base+0xfb8>  // b.lo, b.ul, b.last
   13964:	add	x9, x23, x24, lsl #3
   13968:	mov	x10, x24
   1396c:	ldrb	w11, [x9]
   13970:	add	x10, x10, #0x1
   13974:	cmp	x10, x28
   13978:	orr	w11, w11, #0x18
   1397c:	strb	w11, [x9], #8
   13980:	b.ls	1396c <xre_match@@Base+0xf2c>  // b.plast
   13984:	b	139f8 <xre_match@@Base+0xfb8>
   13988:	ldur	x9, [x29, #-136]
   1398c:	ldr	x9, [x9, #24]
   13990:	tbnz	w9, #6, 139b0 <xre_match@@Base+0xf70>
   13994:	mov	x10, x8
   13998:	cbz	x15, 139a4 <xre_match@@Base+0xf64>
   1399c:	ldrb	w10, [x8]
   139a0:	add	x10, x15, x10
   139a4:	ldrb	w10, [x10]
   139a8:	cmp	w10, #0xa
   139ac:	b.eq	14518 <xre_match@@Base+0x1ad8>  // b.none
   139b0:	tbz	w9, #7, 139cc <xre_match@@Base+0xf8c>
   139b4:	mov	x9, x8
   139b8:	cbz	x15, 139c4 <xre_match@@Base+0xf84>
   139bc:	ldrb	w9, [x8]
   139c0:	add	x9, x15, x9
   139c4:	ldrb	w9, [x9]
   139c8:	cbz	w9, 14518 <xre_match@@Base+0x1ad8>
   139cc:	cbnz	w26, 139fc <xre_match@@Base+0xfbc>
   139d0:	cmp	x28, x24
   139d4:	b.cc	139f8 <xre_match@@Base+0xfb8>  // b.lo, b.ul, b.last
   139d8:	add	x9, x23, x24, lsl #3
   139dc:	mov	x10, x24
   139e0:	ldrb	w11, [x9]
   139e4:	add	x10, x10, #0x1
   139e8:	cmp	x10, x28
   139ec:	orr	w11, w11, #0x18
   139f0:	strb	w11, [x9], #8
   139f4:	b.ls	139e0 <xre_match@@Base+0xfa0>  // b.plast
   139f8:	mov	w26, #0x1                   	// #1
   139fc:	add	x3, x8, #0x1
   13a00:	b	12d78 <xre_match@@Base+0x338>
   13a04:	ldrb	w8, [x16]
   13a08:	sub	w8, w8, #0x1
   13a0c:	tst	w8, #0xff
   13a10:	b.eq	12fe4 <xre_match@@Base+0x5a4>  // b.none
   13a14:	and	x28, x8, #0xff
   13a18:	lsl	x9, x28, #3
   13a1c:	ldrb	w9, [x23, x9]
   13a20:	tbz	w9, #2, 13a08 <xre_match@@Base+0xfc8>
   13a24:	sub	x8, x29, #0x30
   13a28:	ldur	x8, [x8, #-256]
   13a2c:	cmp	x8, x27
   13a30:	b.eq	13a44 <xre_match@@Base+0x1004>  // b.none
   13a34:	ldrb	w8, [x27, #1]
   13a38:	lsl	x8, x8, #3
   13a3c:	ldrb	w8, [x23, x8]
   13a40:	tbnz	w8, #3, 14168 <xre_match@@Base+0x1728>
   13a44:	add	x8, x27, #0x3
   13a48:	cmp	x8, x6
   13a4c:	b.cs	14168 <xre_match@@Base+0x1728>  // b.hs, b.nlast
   13a50:	add	x8, x27, #0x4
   13a54:	stur	x8, [x29, #-16]
   13a58:	ldrb	w8, [x27, #3]
   13a5c:	sub	w8, w8, #0xd
   13a60:	cmp	w8, #0x9
   13a64:	b.hi	13a74 <xre_match@@Base+0x1034>  // b.pmore
   13a68:	mov	w9, #0x271                 	// #625
   13a6c:	lsr	w9, w9, w8
   13a70:	tbnz	w9, #0, 14248 <xre_match@@Base+0x1808>
   13a74:	mov	w9, wzr
   13a78:	ldur	x8, [x29, #-16]
   13a7c:	add	x8, x8, w9, sxtw
   13a80:	stur	x8, [x29, #-16]
   13a84:	tbz	w9, #31, 14160 <xre_match@@Base+0x1720>
   13a88:	ldrb	w9, [x8]
   13a8c:	cmp	w9, #0xf
   13a90:	b.ne	14160 <xre_match@@Base+0x1720>  // b.any
   13a94:	mov	x9, x8
   13a98:	ldrb	w10, [x9, #3]!
   13a9c:	cmp	w10, #0x6
   13aa0:	b.ne	14160 <xre_match@@Base+0x1720>  // b.any
   13aa4:	ldrb	w11, [x8, #4]
   13aa8:	ldrb	w10, [x16]
   13aac:	cmp	w11, w10
   13ab0:	b.ne	14160 <xre_match@@Base+0x1720>  // b.any
   13ab4:	add	x10, x23, x10, lsl #3
   13ab8:	ldrb	w11, [x10]
   13abc:	tbz	w11, #4, 13adc <xre_match@@Base+0x109c>
   13ac0:	and	w11, w11, #0xffffffef
   13ac4:	strb	w11, [x10]
   13ac8:	ldrb	w10, [x27, #1]
   13acc:	ldrb	w11, [x27, #2]
   13ad0:	add	w11, w11, w10
   13ad4:	cmp	w11, w10
   13ad8:	b.hi	14218 <xre_match@@Base+0x17d8>  // b.pmore
   13adc:	sub	x10, x29, #0x78
   13ae0:	stur	x2, [x10, #-256]
   13ae4:	add	x10, x8, #0x1
   13ae8:	stur	x10, [x29, #-16]
   13aec:	ldrb	w10, [x8, #1]
   13af0:	ldrsb	x8, [x8, #2]
   13af4:	sub	x12, x28, x24
   13af8:	sub	w11, w4, w22
   13afc:	stur	x10, [x29, #-216]
   13b00:	sub	x10, x29, #0x80
   13b04:	stur	x8, [x10, #-256]
   13b08:	add	x8, x12, x12, lsl #1
   13b0c:	add	x19, x8, #0x7
   13b10:	cmp	x19, x11
   13b14:	stur	x3, [x29, #-224]
   13b18:	stur	x28, [x29, #-168]
   13b1c:	stur	x9, [x29, #-16]
   13b20:	b.ls	14364 <xre_match@@Base+0x1924>  // b.plast
   13b24:	adrp	x8, 2e000 <xexit@@Base+0x14c60>
   13b28:	ldr	x8, [x8, #3952]
   13b2c:	mov	w9, #0x13                  	// #19
   13b30:	ldr	w8, [x8]
   13b34:	mul	w8, w8, w9
   13b38:	stur	w8, [x29, #-192]
   13b3c:	ldur	w8, [x29, #-192]
   13b40:	cmp	w4, w8
   13b44:	b.hi	14464 <xre_match@@Base+0x1a24>  // b.pmore
   13b48:	lsl	w28, w4, #1
   13b4c:	sub	x26, sp, w28, uxtw #3
   13b50:	mov	sp, x26
   13b54:	mov	w8, w4
   13b58:	lsl	x2, x8, #3
   13b5c:	mov	x0, x26
   13b60:	mov	x1, x25
   13b64:	bl	8fb0 <memcpy@plt>
   13b68:	ldp	x17, x6, [x29, #-80]
   13b6c:	ldur	x18, [x29, #-120]
   13b70:	adrp	x1, 19000 <iterative_hash@@Base+0x140>
   13b74:	sub	w8, w28, w22
   13b78:	add	x1, x1, #0xe3c
   13b7c:	cmp	x19, x8
   13b80:	mov	w4, w28
   13b84:	mov	x25, x26
   13b88:	b.hi	13b3c <xre_match@@Base+0x10fc>  // b.pmore
   13b8c:	b	1436c <xre_match@@Base+0x192c>
   13b90:	mov	x26, x25
   13b94:	mov	w19, w4
   13b98:	ldur	x5, [x29, #-232]
   13b9c:	ldur	x18, [x29, #-120]
   13ba0:	cmp	x28, x24
   13ba4:	mov	x8, x24
   13ba8:	mov	w0, #0x231                 	// #561
   13bac:	mov	w30, #0x3ce                 	// #974
   13bb0:	b.cc	13be8 <xre_match@@Base+0x11a8>  // b.lo, b.ul, b.last
   13bb4:	lsl	x9, x8, #3
   13bb8:	ldr	x10, [x20, x9]
   13bbc:	add	w11, w22, #0x1
   13bc0:	add	x8, x8, #0x1
   13bc4:	add	w12, w22, #0x2
   13bc8:	str	x10, [x26, w22, uxtw #3]
   13bcc:	ldr	x10, [x21, x9]
   13bd0:	add	w22, w22, #0x3
   13bd4:	cmp	x8, x28
   13bd8:	str	x10, [x26, w11, uxtw #3]
   13bdc:	ldr	x9, [x23, x9]
   13be0:	str	x9, [x26, w12, uxtw #3]
   13be4:	b.ls	13bb4 <xre_match@@Base+0x1174>  // b.plast
   13be8:	add	w8, w22, #0x1
   13bec:	mov	w9, w22
   13bf0:	lsl	x9, x9, #3
   13bf4:	lsl	x8, x8, #3
   13bf8:	add	w10, w22, #0x2
   13bfc:	add	w11, w22, #0x3
   13c00:	add	w22, w22, #0x4
   13c04:	str	w24, [x26, x9]
   13c08:	str	w28, [x26, x8]
   13c0c:	mov	w8, #0x1                   	// #1
   13c10:	mov	x25, x26
   13c14:	mov	w4, w19
   13c18:	str	xzr, [x26, w10, uxtw #3]
   13c1c:	str	xzr, [x26, w11, uxtw #3]
   13c20:	b	140f4 <xre_match@@Base+0x16b4>
   13c24:	ldur	x8, [x29, #-136]
   13c28:	ldrb	w8, [x8, #56]
   13c2c:	tbz	w8, #5, 12d78 <xre_match@@Base+0x338>
   13c30:	b	14598 <xre_match@@Base+0x1b58>
   13c34:	mov	x26, x25
   13c38:	mov	w27, w4
   13c3c:	sub	x8, x29, #0x80
   13c40:	ldp	x5, x13, [x29, #-232]
   13c44:	ldur	x8, [x8, #-256]
   13c48:	sub	x9, x29, #0x78
   13c4c:	ldur	x18, [x29, #-120]
   13c50:	ldur	x21, [x9, #-256]
   13c54:	cmp	x28, x24
   13c58:	bfi	x13, x8, #8, #56
   13c5c:	mov	x8, x24
   13c60:	mov	w0, #0x231                 	// #561
   13c64:	mov	w30, #0x3ce                 	// #974
   13c68:	b.cc	13ca0 <xre_match@@Base+0x1260>  // b.lo, b.ul, b.last
   13c6c:	lsl	x9, x8, #3
   13c70:	ldr	x10, [x20, x9]
   13c74:	add	w11, w22, #0x1
   13c78:	add	x8, x8, #0x1
   13c7c:	add	w12, w22, #0x2
   13c80:	str	x10, [x26, w22, uxtw #3]
   13c84:	ldr	x10, [x21, x9]
   13c88:	add	w22, w22, #0x3
   13c8c:	cmp	x8, x28
   13c90:	str	x10, [x26, w11, uxtw #3]
   13c94:	ldr	x9, [x23, x9]
   13c98:	str	x9, [x26, w12, uxtw #3]
   13c9c:	b.ls	13c6c <xre_match@@Base+0x122c>  // b.plast
   13ca0:	ldur	x15, [x29, #-184]
   13ca4:	add	w8, w22, #0x1
   13ca8:	mov	w9, w22
   13cac:	lsl	x9, x9, #3
   13cb0:	lsl	x8, x8, #3
   13cb4:	adrp	x1, 19000 <iterative_hash@@Base+0x140>
   13cb8:	add	w10, w22, #0x2
   13cbc:	add	x11, x16, x13
   13cc0:	add	w12, w22, #0x3
   13cc4:	add	w22, w22, #0x4
   13cc8:	str	w24, [x26, x9]
   13ccc:	str	w28, [x26, x8]
   13cd0:	mov	w8, #0x1                   	// #1
   13cd4:	mov	x25, x26
   13cd8:	mov	w4, w27
   13cdc:	add	x1, x1, #0xe3c
   13ce0:	str	x11, [x26, w10, uxtw #3]
   13ce4:	str	xzr, [x26, w12, uxtw #3]
   13ce8:	ldur	w26, [x29, #-216]
   13cec:	tbnz	w8, #0, 12d78 <xre_match@@Base+0x338>
   13cf0:	b	146b4 <xre_match@@Base+0x1c74>
   13cf4:	mov	x26, x25
   13cf8:	mov	w19, w4
   13cfc:	ldur	x5, [x29, #-232]
   13d00:	cmp	x28, x24
   13d04:	mov	x8, x24
   13d08:	b.cc	13d40 <xre_match@@Base+0x1300>  // b.lo, b.ul, b.last
   13d0c:	lsl	x9, x8, #3
   13d10:	ldr	x10, [x20, x9]
   13d14:	add	w11, w22, #0x1
   13d18:	add	x8, x8, #0x1
   13d1c:	add	w12, w22, #0x2
   13d20:	str	x10, [x26, w22, uxtw #3]
   13d24:	ldr	x10, [x21, x9]
   13d28:	add	w22, w22, #0x3
   13d2c:	cmp	x8, x28
   13d30:	str	x10, [x26, w11, uxtw #3]
   13d34:	ldr	x9, [x23, x9]
   13d38:	str	x9, [x26, w12, uxtw #3]
   13d3c:	b.ls	13d0c <xre_match@@Base+0x12cc>  // b.plast
   13d40:	add	w8, w22, #0x1
   13d44:	mov	w9, w22
   13d48:	lsl	x9, x9, #3
   13d4c:	lsl	x8, x8, #3
   13d50:	add	w10, w22, #0x2
   13d54:	add	w11, w22, #0x3
   13d58:	add	w22, w22, #0x4
   13d5c:	str	w24, [x26, x9]
   13d60:	str	w28, [x26, x8]
   13d64:	mov	w8, #0x1                   	// #1
   13d68:	mov	x25, x26
   13d6c:	mov	w4, w19
   13d70:	str	xzr, [x26, w10, uxtw #3]
   13d74:	str	xzr, [x26, w11, uxtw #3]
   13d78:	b	1414c <xre_match@@Base+0x170c>
   13d7c:	mov	w8, wzr
   13d80:	tbnz	wzr, #0, 12d78 <xre_match@@Base+0x338>
   13d84:	b	14598 <xre_match@@Base+0x1b58>
   13d88:	ldur	x8, [x29, #-136]
   13d8c:	ldrb	w8, [x8, #56]
   13d90:	tbz	w8, #6, 12d78 <xre_match@@Base+0x338>
   13d94:	b	14598 <xre_match@@Base+0x1b58>
   13d98:	cbnz	w8, 12d78 <xre_match@@Base+0x338>
   13d9c:	sturh	wzr, [x27, #3]
   13da0:	ldrb	w8, [x27, #1]
   13da4:	sub	x9, x29, #0x80
   13da8:	add	x11, x27, #0x3
   13dac:	cmp	x11, x6
   13db0:	stur	x8, [x9, #-256]
   13db4:	ldrsb	x8, [x27, #2]
   13db8:	sub	x9, x29, #0x88
   13dbc:	stur	x11, [x29, #-16]
   13dc0:	stur	x8, [x9, #-256]
   13dc4:	cset	w9, cc  // cc = lo, ul, last
   13dc8:	b.cs	13e20 <xre_match@@Base+0x13e0>  // b.hs, b.nlast
   13dcc:	ldrb	w10, [x11]
   13dd0:	mov	x8, x11
   13dd4:	cbnz	w10, 13dfc <xre_match@@Base+0x13bc>
   13dd8:	add	x8, x27, #0x4
   13ddc:	cmp	x6, x8
   13de0:	stur	x8, [x29, #-16]
   13de4:	b.eq	13e20 <xre_match@@Base+0x13e0>  // b.none
   13de8:	ldrb	w9, [x8], #1
   13dec:	cbz	w9, 13ddc <xre_match@@Base+0x139c>
   13df0:	sub	x8, x8, #0x1
   13df4:	cmp	x8, x6
   13df8:	cset	w9, cc  // cc = lo, ul, last
   13dfc:	cbz	w9, 13e20 <xre_match@@Base+0x13e0>
   13e00:	ldrb	w9, [x8]
   13e04:	cmp	w9, #0x6
   13e08:	b.ne	13e20 <xre_match@@Base+0x13e0>  // b.any
   13e0c:	ldrb	w9, [x8, #1]
   13e10:	ldrb	w8, [x8, #2]
   13e14:	cmp	x24, #0x101
   13e18:	csel	x24, x9, x24, eq  // eq = none
   13e1c:	add	x28, x8, x9
   13e20:	sub	x9, x28, x24
   13e24:	sub	x8, x29, #0x78
   13e28:	add	x9, x9, x9, lsl #1
   13e2c:	stur	x2, [x8, #-256]
   13e30:	sub	w8, w4, w22
   13e34:	add	x27, x9, #0x7
   13e38:	cmp	x27, x8
   13e3c:	stur	w26, [x29, #-216]
   13e40:	stur	x3, [x29, #-224]
   13e44:	stur	x28, [x29, #-168]
   13e48:	stur	x11, [x29, #-192]
   13e4c:	b.ls	13ea4 <xre_match@@Base+0x1464>  // b.plast
   13e50:	adrp	x8, 2e000 <xexit@@Base+0x14c60>
   13e54:	ldr	x8, [x8, #3952]
   13e58:	mov	w9, #0x13                  	// #19
   13e5c:	ldr	w8, [x8]
   13e60:	mul	w28, w8, w9
   13e64:	cmp	w4, w28
   13e68:	b.hi	140a0 <xre_match@@Base+0x1660>  // b.pmore
   13e6c:	lsl	w19, w4, #1
   13e70:	sub	x26, sp, w19, uxtw #3
   13e74:	mov	sp, x26
   13e78:	mov	w8, w4
   13e7c:	lsl	x2, x8, #3
   13e80:	mov	x0, x26
   13e84:	mov	x1, x25
   13e88:	bl	8fb0 <memcpy@plt>
   13e8c:	sub	w8, w19, w22
   13e90:	cmp	x27, x8
   13e94:	mov	w4, w19
   13e98:	mov	x25, x26
   13e9c:	b.hi	13e64 <xre_match@@Base+0x1424>  // b.pmore
   13ea0:	b	13eac <xre_match@@Base+0x146c>
   13ea4:	mov	x26, x25
   13ea8:	mov	w19, w4
   13eac:	sub	x8, x29, #0x80
   13eb0:	ldur	x13, [x8, #-256]
   13eb4:	sub	x8, x29, #0x88
   13eb8:	ldur	x28, [x29, #-168]
   13ebc:	ldur	x8, [x8, #-256]
   13ec0:	sub	x9, x29, #0x78
   13ec4:	ldur	x5, [x29, #-232]
   13ec8:	ldur	x18, [x29, #-120]
   13ecc:	ldp	x17, x6, [x29, #-80]
   13ed0:	ldur	x2, [x9, #-256]
   13ed4:	adrp	x1, 19000 <iterative_hash@@Base+0x140>
   13ed8:	cmp	x28, x24
   13edc:	bfi	x13, x8, #8, #56
   13ee0:	mov	x8, x24
   13ee4:	mov	w0, #0x231                 	// #561
   13ee8:	mov	w30, #0x3ce                 	// #974
   13eec:	add	x1, x1, #0xe3c
   13ef0:	b.cc	13f28 <xre_match@@Base+0x14e8>  // b.lo, b.ul, b.last
   13ef4:	lsl	x9, x8, #3
   13ef8:	ldr	x10, [x20, x9]
   13efc:	add	w11, w22, #0x1
   13f00:	add	x8, x8, #0x1
   13f04:	add	w12, w22, #0x2
   13f08:	str	x10, [x26, w22, uxtw #3]
   13f0c:	ldr	x10, [x21, x9]
   13f10:	add	w22, w22, #0x3
   13f14:	cmp	x8, x28
   13f18:	str	x10, [x26, w11, uxtw #3]
   13f1c:	ldr	x9, [x23, x9]
   13f20:	str	x9, [x26, w12, uxtw #3]
   13f24:	b.ls	13ef4 <xre_match@@Base+0x14b4>  // b.plast
   13f28:	add	w8, w22, #0x1
   13f2c:	mov	w9, w22
   13f30:	ldur	x11, [x29, #-192]
   13f34:	lsl	x9, x9, #3
   13f38:	lsl	x8, x8, #3
   13f3c:	str	w24, [x26, x9]
   13f40:	str	w28, [x26, x8]
   13f44:	ldur	x8, [x29, #-224]
   13f48:	add	w10, w22, #0x2
   13f4c:	add	x11, x11, x13
   13f50:	add	w12, w22, #0x3
   13f54:	add	w22, w22, #0x4
   13f58:	str	x11, [x26, w10, uxtw #3]
   13f5c:	str	x8, [x26, w12, uxtw #3]
   13f60:	mov	w8, #0x1                   	// #1
   13f64:	mov	x25, x26
   13f68:	mov	w4, w19
   13f6c:	b	140cc <xre_match@@Base+0x168c>
   13f70:	add	x16, x27, #0x5
   13f74:	b	12d78 <xre_match@@Base+0x338>
   13f78:	mov	w8, wzr
   13f7c:	mov	w26, w10
   13f80:	mov	x3, x27
   13f84:	ldur	x5, [x29, #-232]
   13f88:	ldur	x15, [x29, #-184]
   13f8c:	ldur	x28, [x29, #-168]
   13f90:	ldur	x16, [x29, #-192]
   13f94:	tbnz	w8, #0, 12d78 <xre_match@@Base+0x338>
   13f98:	b	14598 <xre_match@@Base+0x1b58>
   13f9c:	cmp	w12, #0xa
   13fa0:	b.ne	14188 <xre_match@@Base+0x1748>  // b.any
   13fa4:	ldur	x11, [x29, #-136]
   13fa8:	ldrsb	w11, [x11, #56]
   13fac:	tbz	w11, #31, 14188 <xre_match@@Base+0x1748>
   13fb0:	mov	w9, #0xa                   	// #10
   13fb4:	ldrb	w10, [x8, #3]
   13fb8:	cmp	w10, #0x2
   13fbc:	b.ne	13fcc <xre_match@@Base+0x158c>  // b.any
   13fc0:	ldrb	w11, [x8, #5]
   13fc4:	cmp	w11, w9
   13fc8:	b.ne	14010 <xre_match@@Base+0x15d0>  // b.any
   13fcc:	and	w11, w10, #0xfe
   13fd0:	cmp	w11, #0x4
   13fd4:	b.ne	14018 <xre_match@@Base+0x15d8>  // b.any
   13fd8:	ldrb	w12, [x8, #4]
   13fdc:	cmp	w10, #0x5
   13fe0:	cset	w11, eq  // eq = none
   13fe4:	cmp	w9, w12, lsl #3
   13fe8:	b.cs	1400c <xre_match@@Base+0x15cc>  // b.hs, b.nlast
   13fec:	lsr	w12, w9, #3
   13ff0:	add	x8, x12, x8
   13ff4:	ldrb	w8, [x8, #5]
   13ff8:	and	w9, w9, #0x7
   13ffc:	lsr	w8, w8, w9
   14000:	tbz	w8, #0, 1400c <xre_match@@Base+0x15cc>
   14004:	cmp	w10, #0x5
   14008:	cset	w11, ne  // ne = any
   1400c:	cbnz	w11, 14018 <xre_match@@Base+0x15d8>
   14010:	mov	w8, #0x11                  	// #17
   14014:	strb	w8, [x27]
   14018:	ldrb	w8, [x27]
   1401c:	cmp	w8, #0x11
   14020:	b.ne	14094 <xre_match@@Base+0x1654>  // b.any
   14024:	sub	w8, w22, #0x3
   14028:	sub	w10, w22, #0x4
   1402c:	lsl	x8, x8, #3
   14030:	lsl	x9, x10, #3
   14034:	ldrsw	x8, [x25, x8]
   14038:	ldrsw	x9, [x25, x9]
   1403c:	cmp	w8, w9
   14040:	b.cc	12d5c <xre_match@@Base+0x31c>  // b.lo, b.ul, b.last
   14044:	mov	x16, x15
   14048:	ldp	x15, x14, [x29, #-256]
   1404c:	sub	w10, w22, #0x7
   14050:	add	w11, w10, #0x2
   14054:	ldr	x11, [x25, w11, uxtw #3]
   14058:	lsl	x12, x8, #3
   1405c:	add	w13, w10, #0x1
   14060:	sub	x8, x8, #0x1
   14064:	str	x11, [x15, x12]
   14068:	ldr	x11, [x25, w13, uxtw #3]
   1406c:	cmp	x8, x9
   14070:	str	x11, [x14, x12]
   14074:	ldr	x11, [x25, w10, uxtw #3]
   14078:	sub	w10, w10, #0x3
   1407c:	str	x11, [x14, x12]
   14080:	b.cs	14050 <xre_match@@Base+0x1610>  // b.hs, b.nlast
   14084:	mov	w26, wzr
   14088:	add	w22, w10, #0x3
   1408c:	mov	x15, x16
   14090:	b	12d64 <xre_match@@Base+0x324>
   14094:	mov	w8, #0xd                   	// #13
   14098:	strb	w8, [x27]
   1409c:	b	12d64 <xre_match@@Base+0x324>
   140a0:	sub	x9, x29, #0x78
   140a4:	ldur	x5, [x29, #-232]
   140a8:	ldur	x18, [x29, #-120]
   140ac:	ldp	x17, x6, [x29, #-80]
   140b0:	ldur	x2, [x9, #-256]
   140b4:	ldur	x28, [x29, #-168]
   140b8:	adrp	x1, 19000 <iterative_hash@@Base+0x140>
   140bc:	mov	w8, wzr
   140c0:	mov	w0, #0x231                 	// #561
   140c4:	mov	w30, #0x3ce                 	// #974
   140c8:	add	x1, x1, #0xe3c
   140cc:	ldp	x16, x15, [x29, #-192]
   140d0:	ldur	x3, [x29, #-224]
   140d4:	ldur	w26, [x29, #-216]
   140d8:	tbnz	w8, #0, 12d78 <xre_match@@Base+0x338>
   140dc:	b	146b4 <xre_match@@Base+0x1c74>
   140e0:	ldur	x5, [x29, #-232]
   140e4:	ldur	x18, [x29, #-120]
   140e8:	mov	w8, wzr
   140ec:	mov	w0, #0x231                 	// #561
   140f0:	mov	w30, #0x3ce                 	// #974
   140f4:	ldp	x16, x15, [x29, #-192]
   140f8:	ldur	x3, [x29, #-224]
   140fc:	ldur	w26, [x29, #-216]
   14100:	adrp	x1, 19000 <iterative_hash@@Base+0x140>
   14104:	add	x1, x1, #0xe3c
   14108:	tbnz	w8, #0, 12d78 <xre_match@@Base+0x338>
   1410c:	b	146b4 <xre_match@@Base+0x1c74>
   14110:	sub	x9, x29, #0x78
   14114:	ldur	x5, [x29, #-232]
   14118:	ldur	x18, [x29, #-120]
   1411c:	ldur	x15, [x29, #-184]
   14120:	ldur	x21, [x9, #-256]
   14124:	adrp	x1, 19000 <iterative_hash@@Base+0x140>
   14128:	mov	w8, wzr
   1412c:	mov	w0, #0x231                 	// #561
   14130:	mov	w30, #0x3ce                 	// #974
   14134:	add	x1, x1, #0xe3c
   14138:	ldur	w26, [x29, #-216]
   1413c:	tbnz	w8, #0, 12d78 <xre_match@@Base+0x338>
   14140:	b	146b4 <xre_match@@Base+0x1c74>
   14144:	ldur	x5, [x29, #-232]
   14148:	mov	w8, wzr
   1414c:	ldur	x15, [x29, #-184]
   14150:	ldur	x3, [x29, #-224]
   14154:	ldur	w26, [x29, #-216]
   14158:	tbnz	w8, #0, 12d64 <xre_match@@Base+0x324>
   1415c:	b	146b4 <xre_match@@Base+0x1c74>
   14160:	mov	w8, wzr
   14164:	cbnz	w8, 14698 <xre_match@@Base+0x1c58>
   14168:	mov	w26, wzr
   1416c:	add	x16, x27, #0x3
   14170:	b	12d78 <xre_match@@Base+0x338>
   14174:	ldur	x5, [x29, #-232]
   14178:	ldur	x28, [x29, #-168]
   1417c:	mov	w8, wzr
   14180:	tbnz	wzr, #0, 12d78 <xre_match@@Base+0x338>
   14184:	b	14598 <xre_match@@Base+0x1b58>
   14188:	cmp	w12, #0x4
   1418c:	b.ne	14018 <xre_match@@Base+0x15d8>  // b.any
   14190:	ldrb	w11, [x8, #3]
   14194:	cmp	w11, #0x2
   14198:	b.eq	14280 <xre_match@@Base+0x1840>  // b.none
   1419c:	cmp	w11, #0x5
   141a0:	b.eq	142b4 <xre_match@@Base+0x1874>  // b.none
   141a4:	cmp	w11, #0x4
   141a8:	b.ne	14018 <xre_match@@Base+0x15d8>  // b.any
   141ac:	ldrb	w11, [x9, #1]
   141b0:	cbz	w11, 1434c <xre_match@@Base+0x190c>
   141b4:	ldrb	w12, [x8, #4]
   141b8:	cbz	x12, 144ac <xre_match@@Base+0x1a6c>
   141bc:	add	x10, x27, x10
   141c0:	mov	x7, x15
   141c4:	mov	x13, xzr
   141c8:	add	x10, x10, #0x8
   141cc:	add	x14, x9, #0x2
   141d0:	ldrb	w15, [x14, x13]
   141d4:	ldrb	w16, [x10, x13]
   141d8:	tst	w16, w15
   141dc:	b.ne	1449c <xre_match@@Base+0x1a5c>  // b.any
   141e0:	ldrb	w11, [x9, #1]
   141e4:	add	x15, x13, #0x1
   141e8:	cmp	x15, x11
   141ec:	b.cs	144a4 <xre_match@@Base+0x1a64>  // b.hs, b.nlast
   141f0:	cmp	x12, x15
   141f4:	mov	x13, x15
   141f8:	b.ne	141d0 <xre_match@@Base+0x1790>  // b.any
   141fc:	b	144a8 <xre_match@@Base+0x1a68>
   14200:	ldrb	w11, [x27, #1]
   14204:	ldrb	w12, [x27, #2]
   14208:	add	x10, x10, #0x1
   1420c:	add	x11, x12, x11
   14210:	cmp	x10, x11
   14214:	b.cs	13adc <xre_match@@Base+0x109c>  // b.hs, b.nlast
   14218:	sub	x12, x29, #0x38
   1421c:	ldur	x12, [x12, #-256]
   14220:	lsl	x11, x10, #3
   14224:	sub	x13, x29, #0x40
   14228:	ldur	x13, [x13, #-256]
   1422c:	ldr	x12, [x12, x11]
   14230:	str	x12, [x20, x11]
   14234:	ldr	x11, [x13, x11]
   14238:	cmp	x11, x12
   1423c:	b.cc	14200 <xre_match@@Base+0x17c0>  // b.lo, b.ul, b.last
   14240:	str	x11, [x21, x10, lsl #3]
   14244:	b	14200 <xre_match@@Base+0x17c0>
   14248:	ldrb	w9, [x27, #4]
   1424c:	ldrsb	w10, [x27, #5]
   14250:	mov	w11, #0x38e                 	// #910
   14254:	add	x12, x27, #0x6
   14258:	lsr	w8, w11, w8
   1425c:	bfi	w9, w10, #8, #24
   14260:	stur	x12, [x29, #-16]
   14264:	tbz	w8, #0, 13a78 <xre_match@@Base+0x1038>
   14268:	add	x8, x27, #0x8
   1426c:	stur	x8, [x29, #-16]
   14270:	b	13a78 <xre_match@@Base+0x1038>
   14274:	mov	w8, #0x1                   	// #1
   14278:	mov	w26, w10
   1427c:	b	13f84 <xre_match@@Base+0x1544>
   14280:	ldrb	w13, [x9, #1]
   14284:	ldrb	w12, [x8, #5]
   14288:	cmp	w12, w13, lsl #3
   1428c:	b.cs	14010 <xre_match@@Base+0x15d0>  // b.hs, b.nlast
   14290:	add	x13, x9, x12, lsr #3
   14294:	ldrb	w13, [x13, #2]
   14298:	and	w12, w12, #0x7
   1429c:	lsr	w12, w13, w12
   142a0:	tbz	w12, #0, 14010 <xre_match@@Base+0x15d0>
   142a4:	cmp	w11, #0x4
   142a8:	b.eq	141ac <xre_match@@Base+0x176c>  // b.none
   142ac:	cmp	w11, #0x5
   142b0:	b.ne	14018 <xre_match@@Base+0x15d8>  // b.any
   142b4:	ldrb	w11, [x9, #1]
   142b8:	cbz	w11, 14354 <xre_match@@Base+0x1914>
   142bc:	add	x10, x27, x10
   142c0:	mov	x16, x15
   142c4:	mov	x12, xzr
   142c8:	add	x13, x9, #0x2
   142cc:	add	x10, x10, #0x8
   142d0:	b	142e4 <xre_match@@Base+0x18a4>
   142d4:	ldrb	w11, [x9, #1]
   142d8:	add	x12, x12, #0x1
   142dc:	cmp	x12, x11
   142e0:	b.cs	14308 <xre_match@@Base+0x18c8>  // b.hs, b.nlast
   142e4:	ldrb	w14, [x13, x12]
   142e8:	cbz	w14, 142d4 <xre_match@@Base+0x1894>
   142ec:	ldrb	w15, [x8, #4]
   142f0:	cmp	x12, x15
   142f4:	b.cs	14308 <xre_match@@Base+0x18c8>  // b.hs, b.nlast
   142f8:	ldrb	w15, [x10, x12]
   142fc:	eor	w15, w15, #0xff
   14300:	tst	w14, w15
   14304:	b.eq	142d4 <xre_match@@Base+0x1894>  // b.none
   14308:	mov	x15, x16
   1430c:	b	14358 <xre_match@@Base+0x1918>
   14310:	sub	x9, x29, #0x78
   14314:	ldur	w26, [x29, #-224]
   14318:	ldur	x5, [x29, #-232]
   1431c:	ldur	x18, [x29, #-120]
   14320:	ldur	x15, [x29, #-184]
   14324:	ldp	x17, x6, [x29, #-80]
   14328:	ldur	x2, [x9, #-256]
   1432c:	ldur	w4, [x29, #-216]
   14330:	adrp	x1, 19000 <iterative_hash@@Base+0x140>
   14334:	mov	w8, wzr
   14338:	mov	x3, x27
   1433c:	mov	w0, #0x231                 	// #561
   14340:	mov	w30, #0x3ce                 	// #974
   14344:	add	x1, x1, #0xe3c
   14348:	b	13f8c <xre_match@@Base+0x154c>
   1434c:	mov	w12, wzr
   14350:	b	144ac <xre_match@@Base+0x1a6c>
   14354:	mov	w12, wzr
   14358:	cmp	w12, w11
   1435c:	b.eq	14010 <xre_match@@Base+0x15d0>  // b.none
   14360:	b	14018 <xre_match@@Base+0x15d8>
   14364:	mov	x26, x25
   14368:	mov	w28, w4
   1436c:	sub	x9, x29, #0x80
   14370:	ldur	x8, [x29, #-168]
   14374:	ldp	x3, x14, [x29, #-224]
   14378:	ldur	x9, [x9, #-256]
   1437c:	subs	x8, x8, x24
   14380:	bfi	x14, x9, #8, #56
   14384:	b.cs	143c8 <xre_match@@Base+0x1988>  // b.hs, b.nlast
   14388:	sub	x8, x29, #0x78
   1438c:	ldur	x15, [x29, #-184]
   14390:	ldur	x2, [x8, #-256]
   14394:	mov	w0, #0x231                 	// #561
   14398:	mov	w30, #0x3ce                 	// #974
   1439c:	b	1441c <xre_match@@Base+0x19dc>
   143a0:	add	x8, x23, x24, lsl #3
   143a4:	mov	x9, x24
   143a8:	ldrb	w10, [x8]
   143ac:	add	x9, x9, #0x1
   143b0:	cmp	x9, x28
   143b4:	mov	w26, #0x1                   	// #1
   143b8:	orr	w10, w10, #0x18
   143bc:	strb	w10, [x8], #8
   143c0:	b.ls	143a8 <xre_match@@Base+0x1968>  // b.plast
   143c4:	b	12d78 <xre_match@@Base+0x338>
   143c8:	sub	x12, x29, #0x78
   143cc:	ldur	x15, [x29, #-184]
   143d0:	ldur	x2, [x12, #-256]
   143d4:	lsl	x11, x24, #3
   143d8:	add	x8, x8, #0x1
   143dc:	add	x9, x21, x11
   143e0:	add	x10, x20, x11
   143e4:	add	x11, x23, x11
   143e8:	mov	w0, #0x231                 	// #561
   143ec:	mov	w30, #0x3ce                 	// #974
   143f0:	ldr	x12, [x10], #8
   143f4:	add	w13, w22, #0x1
   143f8:	subs	x8, x8, #0x1
   143fc:	str	x12, [x26, w22, uxtw #3]
   14400:	ldr	x12, [x9], #8
   14404:	str	x12, [x26, w13, uxtw #3]
   14408:	ldr	x12, [x11], #8
   1440c:	add	w13, w22, #0x2
   14410:	add	w22, w22, #0x3
   14414:	str	x12, [x26, w13, uxtw #3]
   14418:	b.ne	143f0 <xre_match@@Base+0x19b0>  // b.any
   1441c:	mov	w9, w22
   14420:	ldur	x10, [x29, #-16]
   14424:	ldur	x11, [x29, #-168]
   14428:	lsl	x9, x9, #3
   1442c:	str	w24, [x26, x9]
   14430:	add	w9, w22, #0x1
   14434:	lsl	x9, x9, #3
   14438:	str	w11, [x26, x9]
   1443c:	add	x9, x10, x14
   14440:	add	w10, w22, #0x2
   14444:	mov	w8, wzr
   14448:	str	x9, [x26, w10, uxtw #3]
   1444c:	add	w9, w22, #0x3
   14450:	add	w22, w22, #0x4
   14454:	mov	x25, x26
   14458:	mov	w4, w28
   1445c:	str	x3, [x26, w9, uxtw #3]
   14460:	b	14480 <xre_match@@Base+0x1a40>
   14464:	sub	x9, x29, #0x78
   14468:	ldur	x15, [x29, #-184]
   1446c:	ldur	x2, [x9, #-256]
   14470:	ldur	x3, [x29, #-224]
   14474:	mov	w8, #0x1                   	// #1
   14478:	mov	w0, #0x231                 	// #561
   1447c:	mov	w30, #0x3ce                 	// #974
   14480:	ldur	x5, [x29, #-232]
   14484:	ldur	x28, [x29, #-168]
   14488:	cmp	w8, #0x0
   1448c:	mov	w9, #0x10                  	// #16
   14490:	csel	w8, w9, w8, eq  // eq = none
   14494:	cbz	w8, 14168 <xre_match@@Base+0x1728>
   14498:	b	14698 <xre_match@@Base+0x1c58>
   1449c:	mov	w12, w13
   144a0:	b	144a8 <xre_match@@Base+0x1a68>
   144a4:	add	w12, w13, #0x1
   144a8:	mov	x15, x7
   144ac:	cmp	w12, w11
   144b0:	b.eq	14010 <xre_match@@Base+0x15d0>  // b.none
   144b4:	ldrb	w8, [x8, #4]
   144b8:	cmp	w12, w8
   144bc:	b.eq	14010 <xre_match@@Base+0x15d0>  // b.none
   144c0:	b	14018 <xre_match@@Base+0x15d8>
   144c4:	cmp	x3, x17
   144c8:	b.eq	14740 <xre_match@@Base+0x1d00>  // b.none
   144cc:	ldur	x8, [x29, #-208]
   144d0:	ldur	x24, [x29, #-128]
   144d4:	ldur	x11, [x29, #-152]
   144d8:	ldur	x10, [x29, #-104]
   144dc:	cmp	w8, #0x0
   144e0:	cset	w8, ne  // ne = any
   144e4:	cmp	x24, x11
   144e8:	cset	w9, ls  // ls = plast
   144ec:	and	w8, w8, w9
   144f0:	ldur	x9, [x29, #-112]
   144f4:	cmp	x11, x10
   144f8:	cset	w10, ls  // ls = plast
   144fc:	and	w8, w10, w8
   14500:	cmp	x2, x9
   14504:	cset	w9, eq  // eq = none
   14508:	eor	w8, w8, w9
   1450c:	tbz	w8, #0, 14520 <xre_match@@Base+0x1ae0>
   14510:	cset	w8, ne  // ne = any
   14514:	b	14528 <xre_match@@Base+0x1ae8>
   14518:	mov	x9, x2
   1451c:	b	145a0 <xre_match@@Base+0x1b60>
   14520:	cmp	x3, x11
   14524:	cset	w8, hi  // hi = pmore
   14528:	ldur	w9, [x29, #-140]
   1452c:	cmp	w9, #0x0
   14530:	cset	w9, eq  // eq = none
   14534:	orr	w8, w9, w8
   14538:	cbz	w22, 14a18 <xre_match@@Base+0x1fd8>
   1453c:	cbz	w8, 14598 <xre_match@@Base+0x1b58>
   14540:	ldur	x8, [x29, #-88]
   14544:	cmp	x8, #0x2
   14548:	b.cc	1458c <xre_match@@Base+0x1b4c>  // b.lo, b.ul, b.last
   1454c:	sub	x8, x29, #0x60
   14550:	sub	x9, x29, #0x58
   14554:	sub	x10, x29, #0x50
   14558:	sub	x11, x29, #0x48
   1455c:	sub	x12, x29, #0x8
   14560:	ldur	x8, [x8, #-256]
   14564:	ldur	x9, [x9, #-256]
   14568:	ldur	x10, [x10, #-256]
   1456c:	ldur	x11, [x11, #-256]
   14570:	ldur	x12, [x12, #-256]
   14574:	ldr	x13, [x8], #8
   14578:	subs	x12, x12, #0x1
   1457c:	str	x13, [x9], #8
   14580:	ldr	x13, [x10], #8
   14584:	str	x13, [x11], #8
   14588:	b.ne	14574 <xre_match@@Base+0x1b34>  // b.any
   1458c:	mov	w8, #0x1                   	// #1
   14590:	stur	w8, [x29, #-140]
   14594:	stur	x3, [x29, #-152]
   14598:	mov	x9, x2
   1459c:	mov	x8, x3
   145a0:	cbz	w22, 146bc <xre_match@@Base+0x1c7c>
   145a4:	mov	x3, x8
   145a8:	b	145bc <xre_match@@Base+0x1b7c>
   145ac:	ldrb	w8, [x10]
   145b0:	cmp	w8, #0xf
   145b4:	b.ne	12d30 <xre_match@@Base+0x2f0>  // b.any
   145b8:	cbz	w22, 146bc <xre_match@@Base+0x1c7c>
   145bc:	sub	w10, w22, #0x1
   145c0:	sub	w12, w22, #0x3
   145c4:	sub	w8, w22, #0x4
   145c8:	ldr	x10, [x25, w10, uxtw #3]
   145cc:	lsl	x12, x12, #3
   145d0:	lsl	x13, x8, #3
   145d4:	sub	w11, w22, #0x2
   145d8:	ldrsw	x28, [x25, x12]
   145dc:	ldrsw	x24, [x25, x13]
   145e0:	ldr	x27, [x25, w11, uxtw #3]
   145e4:	cmp	x10, #0x0
   145e8:	csel	x3, x3, x10, eq  // eq = none
   145ec:	cmp	w28, w24
   145f0:	b.cc	14634 <xre_match@@Base+0x1bf4>  // b.lo, b.ul, b.last
   145f4:	sub	w8, w22, #0x7
   145f8:	mov	x10, x28
   145fc:	add	w11, w8, #0x2
   14600:	ldr	x11, [x25, w11, uxtw #3]
   14604:	lsl	x12, x10, #3
   14608:	add	w13, w8, #0x1
   1460c:	sub	x10, x10, #0x1
   14610:	str	x11, [x23, x12]
   14614:	ldr	x11, [x25, w13, uxtw #3]
   14618:	cmp	x10, x24
   1461c:	str	x11, [x21, x12]
   14620:	ldr	x11, [x25, w8, uxtw #3]
   14624:	sub	w8, w8, #0x3
   14628:	str	x11, [x20, x12]
   1462c:	b.cs	145fc <xre_match@@Base+0x1bbc>  // b.hs, b.nlast
   14630:	add	w8, w8, #0x3
   14634:	mov	w22, w8
   14638:	cbz	x27, 145b8 <xre_match@@Base+0x1b78>
   1463c:	cmp	x27, x6
   14640:	b.cs	12d30 <xre_match@@Base+0x2f0>  // b.hs, b.nlast
   14644:	ldrb	w8, [x27]
   14648:	sub	w8, w8, #0xd
   1464c:	cmp	w8, #0x9
   14650:	b.hi	12d30 <xre_match@@Base+0x2f0>  // b.pmore
   14654:	lsr	w10, w0, w8
   14658:	tbz	w10, #0, 12d30 <xre_match@@Base+0x2f0>
   1465c:	add	x10, x27, #0x1
   14660:	stur	x10, [x29, #-16]
   14664:	ldrb	w10, [x27, #1]
   14668:	ldrsb	x11, [x27, #2]
   1466c:	lsr	w8, w30, w8
   14670:	bfi	x10, x11, #8, #56
   14674:	add	x10, x27, x10
   14678:	add	x10, x10, #0x3
   1467c:	stur	x10, [x29, #-16]
   14680:	tbz	w8, #0, 145ac <xre_match@@Base+0x1b6c>
   14684:	ldrb	w11, [x10]
   14688:	cmp	w11, #0x15
   1468c:	b.eq	145b8 <xre_match@@Base+0x1b78>  // b.none
   14690:	tbz	w8, #0, 145ac <xre_match@@Base+0x1b6c>
   14694:	b	12d30 <xre_match@@Base+0x2f0>
   14698:	cmp	w8, #0x10
   1469c:	mov	x9, x2
   146a0:	mov	x8, x3
   146a4:	b.ne	146b4 <xre_match@@Base+0x1c74>  // b.any
   146a8:	b	145a0 <xre_match@@Base+0x1b60>
   146ac:	cmp	w10, #0x10
   146b0:	b.eq	145a0 <xre_match@@Base+0x1b60>  // b.none
   146b4:	mov	w0, #0xfffffffe            	// #-2
   146b8:	b	149f8 <xre_match@@Base+0x1fb8>
   146bc:	sub	x8, x29, #0x18
   146c0:	ldur	x19, [x8, #-256]
   146c4:	sub	x8, x29, #0x8
   146c8:	ldur	x23, [x8, #-256]
   146cc:	ldur	x24, [x29, #-128]
   146d0:	ldur	w8, [x29, #-140]
   146d4:	cbz	w8, 147e8 <xre_match@@Base+0x1da8>
   146d8:	ldur	x8, [x29, #-104]
   146dc:	ldur	x14, [x29, #-152]
   146e0:	cmp	x14, x8
   146e4:	ldur	x8, [x29, #-112]
   146e8:	ccmp	x14, x24, #0x0, ls  // ls = plast
   146ec:	csel	x2, x17, x8, cc  // cc = lo, ul, last
   146f0:	ldur	x8, [x29, #-88]
   146f4:	cmp	x8, #0x2
   146f8:	b.cc	14738 <xre_match@@Base+0x1cf8>  // b.lo, b.ul, b.last
   146fc:	sub	x9, x29, #0x70
   14700:	sub	x11, x29, #0x68
   14704:	ldur	x9, [x9, #-256]
   14708:	ldur	x11, [x11, #-256]
   1470c:	add	x8, x21, #0x8
   14710:	add	x10, x20, #0x8
   14714:	add	x9, x9, #0x8
   14718:	add	x11, x11, #0x8
   1471c:	mov	x12, x23
   14720:	ldr	x13, [x11], #8
   14724:	subs	x12, x12, #0x1
   14728:	str	x13, [x10], #8
   1472c:	ldr	x13, [x9], #8
   14730:	str	x13, [x8], #8
   14734:	b.ne	14720 <xre_match@@Base+0x1ce0>  // b.any
   14738:	mov	x27, x14
   1473c:	b	14758 <xre_match@@Base+0x1d18>
   14740:	sub	x8, x29, #0x18
   14744:	ldur	x19, [x8, #-256]
   14748:	sub	x8, x29, #0x8
   1474c:	ldur	x23, [x8, #-256]
   14750:	ldur	x24, [x29, #-128]
   14754:	mov	x27, x3
   14758:	cbz	x19, 149d0 <xre_match@@Base+0x1f90>
   1475c:	ldur	x8, [x29, #-136]
   14760:	ldrb	w8, [x8, #56]
   14764:	tbnz	w8, #4, 149d0 <xre_match@@Base+0x1f90>
   14768:	ubfx	w8, w8, #1, #2
   1476c:	cmp	w8, #0x1
   14770:	b.eq	147f0 <xre_match@@Base+0x1db0>  // b.none
   14774:	cbnz	w8, 14854 <xre_match@@Base+0x1e14>
   14778:	add	x8, x23, #0x2
   1477c:	mov	w9, #0x1e                  	// #30
   14780:	cmp	x8, #0x1e
   14784:	csel	x8, x8, x9, hi  // hi = pmore
   14788:	ubfiz	x22, x8, #2, #32
   1478c:	mov	x0, x22
   14790:	mov	x28, x5
   14794:	mov	x25, x2
   14798:	str	w8, [x19]
   1479c:	bl	9860 <malloc@plt>
   147a0:	str	x0, [x19, #8]
   147a4:	mov	x0, x22
   147a8:	bl	9860 <malloc@plt>
   147ac:	mov	x8, x0
   147b0:	str	x0, [x19, #16]
   147b4:	mov	w0, #0xfffffffe            	// #-2
   147b8:	cbz	x8, 149f8 <xre_match@@Base+0x1fb8>
   147bc:	ldr	x8, [x19, #8]
   147c0:	ldur	x18, [x29, #-120]
   147c4:	cbz	x8, 149f8 <xre_match@@Base+0x1fb8>
   147c8:	ldur	x9, [x29, #-136]
   147cc:	mov	x2, x25
   147d0:	mov	x5, x28
   147d4:	ldrb	w8, [x9, #56]
   147d8:	and	w8, w8, #0xfffffffb
   147dc:	orr	w8, w8, #0x2
   147e0:	strb	w8, [x9, #56]
   147e4:	b	14854 <xre_match@@Base+0x1e14>
   147e8:	mov	w0, #0xffffffff            	// #-1
   147ec:	b	149f8 <xre_match@@Base+0x1fb8>
   147f0:	ldr	w9, [x19]
   147f4:	add	x8, x23, #0x2
   147f8:	cmp	x8, x9
   147fc:	b.ls	14854 <xre_match@@Base+0x1e14>  // b.plast
   14800:	ldr	x0, [x19, #8]
   14804:	ubfiz	x1, x8, #2, #32
   14808:	mov	x25, x5
   1480c:	mov	x22, x2
   14810:	str	w8, [x19]
   14814:	bl	92b0 <realloc@plt>
   14818:	ldr	w9, [x19]
   1481c:	ldr	x8, [x19, #16]
   14820:	str	x0, [x19, #8]
   14824:	lsl	x1, x9, #2
   14828:	mov	x0, x8
   1482c:	bl	92b0 <realloc@plt>
   14830:	mov	x8, x0
   14834:	str	x0, [x19, #16]
   14838:	mov	w0, #0xfffffffe            	// #-2
   1483c:	cbz	x8, 149f8 <xre_match@@Base+0x1fb8>
   14840:	ldr	x8, [x19, #8]
   14844:	ldur	x18, [x29, #-120]
   14848:	mov	x2, x22
   1484c:	mov	x5, x25
   14850:	cbz	x8, 149f8 <xre_match@@Base+0x1fb8>
   14854:	ldr	w8, [x19]
   14858:	cbz	w8, 1488c <xre_match@@Base+0x1e4c>
   1485c:	ldr	x8, [x19, #8]
   14860:	ldur	x11, [x29, #-208]
   14864:	mov	x10, x27
   14868:	sub	w9, w10, w24
   1486c:	str	w5, [x8]
   14870:	sub	w8, w10, w18
   14874:	add	w8, w11, w8
   14878:	ldur	x11, [x29, #-112]
   1487c:	ldr	x10, [x19, #16]
   14880:	cmp	x2, x11
   14884:	csel	w8, w9, w8, eq  // eq = none
   14888:	str	w8, [x10]
   1488c:	ldr	w8, [x19]
   14890:	ldur	x9, [x29, #-88]
   14894:	ldur	x0, [x29, #-208]
   14898:	cmp	x9, x8
   1489c:	csel	x8, x9, x8, cc  // cc = lo, ul, last
   148a0:	cmp	x8, #0x2
   148a4:	b.cc	14990 <xre_match@@Base+0x1f50>  // b.lo, b.ul, b.last
   148a8:	ldur	x1, [x29, #-104]
   148ac:	cmp	w0, #0x0
   148b0:	adrp	x14, 2f000 <xexit@@Base+0x15c60>
   148b4:	add	x8, x19, #0x10
   148b8:	add	x9, x19, #0x8
   148bc:	add	x10, x21, #0x8
   148c0:	add	x11, x20, #0x8
   148c4:	mov	w12, #0x1                   	// #1
   148c8:	cset	w13, eq  // eq = none
   148cc:	add	x14, x14, #0xa30
   148d0:	b	14910 <xre_match@@Base+0x1ed0>
   148d4:	ldr	x16, [x19, #16]
   148d8:	mov	w15, #0xffffffff            	// #-1
   148dc:	str	w15, [x16, x12, lsl #2]
   148e0:	mov	x16, x9
   148e4:	ldr	x16, [x16]
   148e8:	add	x10, x10, #0x8
   148ec:	add	x11, x11, #0x8
   148f0:	str	w15, [x16, x12, lsl #2]
   148f4:	ldr	w15, [x19]
   148f8:	ldur	x16, [x29, #-88]
   148fc:	add	x12, x12, #0x1
   14900:	cmp	x16, x15
   14904:	csel	x15, x16, x15, cc  // cc = lo, ul, last
   14908:	cmp	x15, x12
   1490c:	b.ls	14990 <xre_match@@Base+0x1f50>  // b.plast
   14910:	ldr	x16, [x11]
   14914:	cmp	x16, x14
   14918:	b.eq	148d4 <xre_match@@Base+0x1e94>  // b.none
   1491c:	ldr	x15, [x10]
   14920:	cmp	x15, x14
   14924:	b.eq	148d4 <xre_match@@Base+0x1e94>  // b.none
   14928:	cmp	x24, x16
   1492c:	cset	w17, hi  // hi = pmore
   14930:	cmp	x16, x1
   14934:	b.hi	14948 <xre_match@@Base+0x1f08>  // b.pmore
   14938:	orr	w17, w17, w13
   1493c:	tbnz	w17, #0, 14948 <xre_match@@Base+0x1f08>
   14940:	sub	w16, w16, w24
   14944:	b	14954 <xre_match@@Base+0x1f14>
   14948:	ldr	w16, [x11]
   1494c:	sub	w16, w16, w18
   14950:	add	w16, w0, w16
   14954:	ldr	x17, [x19, #8]
   14958:	str	w16, [x17, x12, lsl #2]
   1495c:	cbz	w0, 1497c <xre_match@@Base+0x1f3c>
   14960:	cmp	x24, x15
   14964:	b.hi	1497c <xre_match@@Base+0x1f3c>  // b.pmore
   14968:	ldur	x16, [x29, #-104]
   1496c:	cmp	x15, x16
   14970:	b.hi	1497c <xre_match@@Base+0x1f3c>  // b.pmore
   14974:	sub	w15, w15, w24
   14978:	b	14988 <xre_match@@Base+0x1f48>
   1497c:	ldr	w15, [x10]
   14980:	sub	w15, w15, w18
   14984:	add	w15, w0, w15
   14988:	mov	x16, x8
   1498c:	b	148e4 <xre_match@@Base+0x1ea4>
   14990:	ldr	w8, [x19]
   14994:	ldur	x9, [x29, #-88]
   14998:	cmp	w8, w9
   1499c:	b.ls	149d0 <xre_match@@Base+0x1f90>  // b.plast
   149a0:	ldp	x10, x9, [x19, #8]
   149a4:	add	w8, w23, #0x1
   149a8:	sbfiz	x11, x8, #2, #32
   149ac:	add	x9, x9, x11
   149b0:	add	x10, x10, x11
   149b4:	mov	w11, #0xffffffff            	// #-1
   149b8:	str	w11, [x9], #4
   149bc:	str	w11, [x10], #4
   149c0:	ldr	w12, [x19]
   149c4:	add	w8, w8, #0x1
   149c8:	cmp	w12, w8
   149cc:	b.hi	149b8 <xre_match@@Base+0x1f78>  // b.pmore
   149d0:	sub	x9, x29, #0x28
   149d4:	sub	x8, x29, #0x20
   149d8:	ldur	x9, [x9, #-256]
   149dc:	ldur	x10, [x29, #-112]
   149e0:	ldur	x8, [x8, #-256]
   149e4:	add	w9, w18, w9
   149e8:	cmp	x2, x10
   149ec:	sub	w8, w27, w8
   149f0:	csel	w9, w24, w9, eq  // eq = none
   149f4:	sub	w0, w8, w9
   149f8:	mov	sp, x29
   149fc:	ldp	x20, x19, [sp, #80]
   14a00:	ldp	x22, x21, [sp, #64]
   14a04:	ldp	x24, x23, [sp, #48]
   14a08:	ldp	x26, x25, [sp, #32]
   14a0c:	ldp	x28, x27, [sp, #16]
   14a10:	ldp	x29, x30, [sp], #96
   14a14:	ret
   14a18:	sub	x9, x29, #0x18
   14a1c:	ldur	x19, [x9, #-256]
   14a20:	sub	x9, x29, #0x8
   14a24:	ldur	x23, [x9, #-256]
   14a28:	mov	x27, x3
   14a2c:	tbz	w8, #0, 146d8 <xre_match@@Base+0x1c98>
   14a30:	b	14758 <xre_match@@Base+0x1d18>
   14a34:	bl	98b0 <abort@plt>

0000000000014a38 <xre_match_2@@Base>:
   14a38:	stp	x29, x30, [sp, #-16]!
   14a3c:	mov	x29, sp
   14a40:	bl	12a70 <xre_match@@Base+0x30>
   14a44:	ldp	x29, x30, [sp], #16
   14a48:	ret

0000000000014a4c <xre_compile_pattern@@Base>:
   14a4c:	stp	x29, x30, [sp, #-16]!
   14a50:	ldrb	w8, [x2, #56]
   14a54:	mov	w9, #0x69                  	// #105
   14a58:	mov	x3, x2
   14a5c:	mov	x29, sp
   14a60:	and	w8, w8, w9
   14a64:	orr	w8, w8, #0x80
   14a68:	strb	w8, [x2, #56]
   14a6c:	adrp	x8, 2e000 <xexit@@Base+0x14c60>
   14a70:	ldr	x8, [x8, #3800]
   14a74:	ldr	x2, [x8]
   14a78:	bl	14aa0 <xre_compile_pattern@@Base+0x54>
   14a7c:	cbz	w0, 14a94 <xre_compile_pattern@@Base+0x48>
   14a80:	adrp	x8, 2e000 <xexit@@Base+0x14c60>
   14a84:	add	x8, x8, #0x9e0
   14a88:	ldr	x0, [x8, w0, sxtw #3]
   14a8c:	ldp	x29, x30, [sp], #16
   14a90:	ret
   14a94:	mov	x0, xzr
   14a98:	ldp	x29, x30, [sp], #16
   14a9c:	ret
   14aa0:	sub	sp, sp, #0x1a0
   14aa4:	stp	x29, x30, [sp, #320]
   14aa8:	add	x29, sp, #0x140
   14aac:	stp	x28, x27, [sp, #336]
   14ab0:	stp	x26, x25, [sp, #352]
   14ab4:	stp	x24, x23, [sp, #368]
   14ab8:	stp	x22, x21, [sp, #384]
   14abc:	stp	x20, x19, [sp, #400]
   14ac0:	stur	x0, [x29, #-16]
   14ac4:	ldr	x8, [x3, #40]
   14ac8:	mov	x23, x0
   14acc:	mov	w0, #0x500                 	// #1280
   14ad0:	mov	x19, x3
   14ad4:	mov	x22, x2
   14ad8:	stur	x8, [x29, #-152]
   14adc:	mov	x20, x1
   14ae0:	bl	9860 <malloc@plt>
   14ae4:	cbz	x0, 17358 <xre_compile_pattern@@Base+0x290c>
   14ae8:	ldrb	w8, [x19, #56]
   14aec:	mov	w9, #0x97                  	// #151
   14af0:	mov	x21, x0
   14af4:	stp	xzr, x22, [x19, #16]
   14af8:	and	w8, w8, w9
   14afc:	strb	w8, [x19, #56]
   14b00:	str	xzr, [x19, #48]
   14b04:	bl	17ca4 <xregfree@@Base+0x3b8>
   14b08:	ldr	x8, [x19, #8]
   14b0c:	cbnz	x8, 14b30 <xre_compile_pattern@@Base+0xe4>
   14b10:	ldr	x0, [x19]
   14b14:	cbz	x0, 17420 <xre_compile_pattern@@Base+0x29d4>
   14b18:	mov	w1, #0x20                  	// #32
   14b1c:	bl	92b0 <realloc@plt>
   14b20:	str	x0, [x19]
   14b24:	cbz	x0, 17430 <xre_compile_pattern@@Base+0x29e4>
   14b28:	mov	w8, #0x20                  	// #32
   14b2c:	str	x8, [x19, #8]
   14b30:	ldur	x8, [x29, #-16]
   14b34:	ldr	x27, [x19]
   14b38:	add	x9, x23, x20
   14b3c:	str	x21, [sp, #144]
   14b40:	cmp	x8, x9
   14b44:	str	x9, [sp, #160]
   14b48:	b.eq	17360 <xre_compile_pattern@@Base+0x2914>  // b.none
   14b4c:	mov	w9, #0x8400                	// #33792
   14b50:	mov	w10, #0x200020              	// #2097184
   14b54:	and	x9, x22, x9
   14b58:	mov	w13, #0x402                 	// #1026
   14b5c:	str	x9, [sp, #88]
   14b60:	and	x9, x22, x10
   14b64:	mov	w14, #0x1200                	// #4608
   14b68:	str	x9, [sp, #80]
   14b6c:	and	x9, x22, x13
   14b70:	tst	x22, #0x1000
   14b74:	mov	w11, #0xd                   	// #13
   14b78:	mov	w12, #0x6f                  	// #111
   14b7c:	stp	x9, x22, [sp, #128]
   14b80:	and	x9, x22, x14
   14b84:	mov	x24, xzr
   14b88:	mov	x20, xzr
   14b8c:	mov	x25, xzr
   14b90:	csel	w11, w12, w11, eq  // eq = none
   14b94:	str	x9, [sp, #104]
   14b98:	mov	w9, #0x20                  	// #32
   14b9c:	mov	x28, x27
   14ba0:	str	x23, [sp, #112]
   14ba4:	str	wzr, [sp, #124]
   14ba8:	str	w11, [sp, #100]
   14bac:	str	x9, [sp, #152]
   14bb0:	add	x1, x8, #0x1
   14bb4:	stur	x1, [x29, #-16]
   14bb8:	ldrb	w23, [x8]
   14bbc:	ldur	x9, [x29, #-152]
   14bc0:	cbz	x9, 14bc8 <xre_compile_pattern@@Base+0x17c>
   14bc4:	ldrb	w23, [x9, x23]
   14bc8:	sub	w9, w23, #0xa
   14bcc:	cmp	w9, #0x72
   14bd0:	b.hi	16f60 <xre_compile_pattern@@Base+0x2514>  // b.pmore
   14bd4:	adrp	x12, 19000 <iterative_hash@@Base+0x140>
   14bd8:	add	x12, x12, #0xe78
   14bdc:	adr	x10, 14bec <xre_compile_pattern@@Base+0x1a0>
   14be0:	ldrh	w11, [x12, x9, lsl #1]
   14be4:	add	x10, x10, x11, lsl #2
   14be8:	br	x10
   14bec:	ldr	x8, [sp, #128]
   14bf0:	cbnz	x8, 16f60 <xre_compile_pattern@@Base+0x2514>
   14bf4:	cbnz	x20, 14c08 <xre_compile_pattern@@Base+0x1bc>
   14bf8:	tbnz	w22, #5, 17494 <xre_compile_pattern@@Base+0x2a48>
   14bfc:	tbnz	w22, #4, 14c08 <xre_compile_pattern@@Base+0x1bc>
   14c00:	mov	x20, xzr
   14c04:	b	16f60 <xre_compile_pattern@@Base+0x2514>
   14c08:	ldur	x9, [x29, #-16]
   14c0c:	ldr	x13, [sp, #160]
   14c10:	cmp	w23, #0x2b
   14c14:	cset	w21, ne  // ne = any
   14c18:	cmp	w23, #0x3f
   14c1c:	cset	w8, ne  // ne = any
   14c20:	cmp	x9, x13
   14c24:	b.eq	14cac <xre_compile_pattern@@Base+0x260>  // b.none
   14c28:	ldur	x12, [x29, #-152]
   14c2c:	b	14c54 <xre_compile_pattern@@Base+0x208>
   14c30:	ldur	x9, [x29, #-16]
   14c34:	cmp	w10, #0x2b
   14c38:	cset	w11, ne  // ne = any
   14c3c:	cmp	w10, #0x3f
   14c40:	cset	w10, ne  // ne = any
   14c44:	orr	w21, w21, w11
   14c48:	cmp	x9, x13
   14c4c:	orr	w8, w8, w10
   14c50:	b.eq	14cac <xre_compile_pattern@@Base+0x260>  // b.none
   14c54:	add	x11, x9, #0x1
   14c58:	stur	x11, [x29, #-16]
   14c5c:	ldrb	w10, [x9]
   14c60:	cbz	x12, 14c68 <xre_compile_pattern@@Base+0x21c>
   14c64:	ldrb	w10, [x12, x10]
   14c68:	cmp	w10, #0x2a
   14c6c:	b.eq	14c30 <xre_compile_pattern@@Base+0x1e4>  // b.none
   14c70:	tbz	w22, #1, 14c98 <xre_compile_pattern@@Base+0x24c>
   14c74:	cmp	w10, #0x5c
   14c78:	b.ne	14ca8 <xre_compile_pattern@@Base+0x25c>  // b.any
   14c7c:	cmp	x11, x13
   14c80:	b.eq	158f8 <xre_compile_pattern@@Base+0xeac>  // b.none
   14c84:	add	x10, x9, #0x2
   14c88:	stur	x10, [x29, #-16]
   14c8c:	ldrb	w10, [x9, #1]
   14c90:	cbz	x12, 14c98 <xre_compile_pattern@@Base+0x24c>
   14c94:	ldrb	w10, [x12, x10]
   14c98:	cmp	w10, #0x2b
   14c9c:	b.eq	14c30 <xre_compile_pattern@@Base+0x1e4>  // b.none
   14ca0:	cmp	w10, #0x3f
   14ca4:	b.eq	14c30 <xre_compile_pattern@@Base+0x1e4>  // b.none
   14ca8:	stur	x9, [x29, #-16]
   14cac:	cbz	x20, 1545c <xre_compile_pattern@@Base+0xa10>
   14cb0:	cbnz	w8, 14cc8 <xre_compile_pattern@@Base+0x27c>
   14cb4:	mov	w23, wzr
   14cb8:	b	16658 <xre_compile_pattern@@Base+0x1c0c>
   14cbc:	mov	w26, #0xf                   	// #15
   14cc0:	mov	w8, #0x1                   	// #1
   14cc4:	cbnz	w8, 1672c <xre_compile_pattern@@Base+0x1ce0>
   14cc8:	ldp	x22, x8, [x19]
   14ccc:	sub	x9, x27, x22
   14cd0:	add	x9, x9, #0x3
   14cd4:	cmp	x9, x8
   14cd8:	b.ls	1559c <xre_compile_pattern@@Base+0xb50>  // b.plast
   14cdc:	cmp	x8, #0x10, lsl #12
   14ce0:	b.eq	14cbc <xre_compile_pattern@@Base+0x270>  // b.none
   14ce4:	lsl	x8, x8, #1
   14ce8:	cmp	x8, #0x10, lsl #12
   14cec:	mov	w9, #0x10000               	// #65536
   14cf0:	csel	x1, x8, x9, cc  // cc = lo, ul, last
   14cf4:	mov	x0, x22
   14cf8:	str	x1, [x19, #8]
   14cfc:	bl	92b0 <realloc@plt>
   14d00:	str	x0, [x19]
   14d04:	cbz	x0, 14d4c <xre_compile_pattern@@Base+0x300>
   14d08:	cmp	x22, x0
   14d0c:	b.eq	14d5c <xre_compile_pattern@@Base+0x310>  // b.none
   14d10:	sub	x9, x0, x22
   14d14:	cmp	x25, #0x0
   14d18:	add	x10, x25, x9
   14d1c:	add	x11, x20, x9
   14d20:	csel	x25, xzr, x10, eq  // eq = none
   14d24:	cmp	x20, #0x0
   14d28:	add	x27, x27, x9
   14d2c:	add	x28, x28, x9
   14d30:	add	x9, x24, x9
   14d34:	csel	x20, xzr, x11, eq  // eq = none
   14d38:	cmp	x24, #0x0
   14d3c:	mov	w8, wzr
   14d40:	csel	x24, xzr, x9, eq  // eq = none
   14d44:	cbz	w8, 14cc8 <xre_compile_pattern@@Base+0x27c>
   14d48:	b	1672c <xre_compile_pattern@@Base+0x1ce0>
   14d4c:	mov	w26, #0xc                   	// #12
   14d50:	mov	w8, #0x1                   	// #1
   14d54:	cbz	w8, 14cc8 <xre_compile_pattern@@Base+0x27c>
   14d58:	b	1672c <xre_compile_pattern@@Base+0x1ce0>
   14d5c:	mov	w8, wzr
   14d60:	cbz	wzr, 14cc8 <xre_compile_pattern@@Base+0x27c>
   14d64:	b	1672c <xre_compile_pattern@@Base+0x1ce0>
   14d68:	tbnz	w22, #11, 15318 <xre_compile_pattern@@Base+0x8cc>
   14d6c:	b	16f60 <xre_compile_pattern@@Base+0x2514>
   14d70:	tbnz	w22, #3, 14da8 <xre_compile_pattern@@Base+0x35c>
   14d74:	ldr	x8, [sp, #160]
   14d78:	cmp	x1, x8
   14d7c:	b.eq	14da8 <xre_compile_pattern@@Base+0x35c>  // b.none
   14d80:	mov	x0, x1
   14d84:	ldr	x1, [sp, #160]
   14d88:	mov	x2, x22
   14d8c:	bl	17d90 <xregfree@@Base+0x4a4>
   14d90:	tst	w0, #0xff
   14d94:	b.ne	14da8 <xre_compile_pattern@@Base+0x35c>  // b.any
   14d98:	b	16f60 <xre_compile_pattern@@Base+0x2514>
   14d9c:	mov	w26, #0xf                   	// #15
   14da0:	mov	w8, wzr
   14da4:	tbz	wzr, #0, 17460 <xre_compile_pattern@@Base+0x2a14>
   14da8:	ldp	x22, x8, [x19]
   14dac:	sub	x9, x27, x22
   14db0:	add	x9, x9, #0x1
   14db4:	cmp	x9, x8
   14db8:	b.ls	15468 <xre_compile_pattern@@Base+0xa1c>  // b.plast
   14dbc:	cmp	x8, #0x10, lsl #12
   14dc0:	b.eq	14d9c <xre_compile_pattern@@Base+0x350>  // b.none
   14dc4:	lsl	x8, x8, #1
   14dc8:	cmp	x8, #0x10, lsl #12
   14dcc:	mov	w9, #0x10000               	// #65536
   14dd0:	csel	x1, x8, x9, cc  // cc = lo, ul, last
   14dd4:	mov	x0, x22
   14dd8:	str	x1, [x19, #8]
   14ddc:	bl	92b0 <realloc@plt>
   14de0:	str	x0, [x19]
   14de4:	cbz	x0, 14e2c <xre_compile_pattern@@Base+0x3e0>
   14de8:	cmp	x22, x0
   14dec:	b.eq	14e20 <xre_compile_pattern@@Base+0x3d4>  // b.none
   14df0:	sub	x8, x0, x22
   14df4:	cmp	x25, #0x0
   14df8:	add	x9, x25, x8
   14dfc:	add	x10, x20, x8
   14e00:	csel	x25, xzr, x9, eq  // eq = none
   14e04:	cmp	x20, #0x0
   14e08:	add	x27, x27, x8
   14e0c:	add	x28, x28, x8
   14e10:	add	x8, x24, x8
   14e14:	csel	x20, xzr, x10, eq  // eq = none
   14e18:	cmp	x24, #0x0
   14e1c:	csel	x24, xzr, x8, eq  // eq = none
   14e20:	mov	w8, #0x1                   	// #1
   14e24:	tbnz	w8, #0, 14da8 <xre_compile_pattern@@Base+0x35c>
   14e28:	b	17460 <xre_compile_pattern@@Base+0x2a14>
   14e2c:	mov	w26, #0xc                   	// #12
   14e30:	mov	w8, wzr
   14e34:	tbnz	wzr, #0, 14da8 <xre_compile_pattern@@Base+0x35c>
   14e38:	b	17460 <xre_compile_pattern@@Base+0x2a14>
   14e3c:	tbz	w22, #13, 16f60 <xre_compile_pattern@@Base+0x2514>
   14e40:	ldr	x21, [sp, #152]
   14e44:	ldr	x8, [x19, #48]
   14e48:	lsr	x9, x21, #32
   14e4c:	add	x8, x8, #0x1
   14e50:	cmp	w9, w21
   14e54:	str	x8, [x19, #48]
   14e58:	b.ne	14e80 <xre_compile_pattern@@Base+0x434>  // b.any
   14e5c:	ldr	x0, [sp, #144]
   14e60:	lsl	w20, w21, #1
   14e64:	add	x8, x20, w20, uxtw #2
   14e68:	lsl	x1, x8, #3
   14e6c:	bl	92b0 <realloc@plt>
   14e70:	str	x0, [sp, #144]
   14e74:	cbz	x0, 17358 <xre_compile_pattern@@Base+0x290c>
   14e78:	and	x8, x21, #0xffffffff00000000
   14e7c:	orr	x21, x20, x8
   14e80:	ldr	w14, [sp, #124]
   14e84:	ldr	x9, [x19]
   14e88:	ldr	x13, [sp, #144]
   14e8c:	lsr	x8, x21, #32
   14e90:	add	w14, w14, #0x1
   14e94:	cmp	x25, #0x0
   14e98:	mov	w15, #0x28                  	// #40
   14e9c:	sub	x12, x25, x9
   14ea0:	madd	x10, x8, x15, x13
   14ea4:	sub	x11, x28, x9
   14ea8:	sub	x9, x27, x9
   14eac:	csinc	x12, xzr, x12, eq  // eq = none
   14eb0:	cmp	w14, #0xff
   14eb4:	str	x9, [x10, #24]
   14eb8:	stp	x11, x12, [x10]
   14ebc:	str	w14, [sp, #124]
   14ec0:	str	w14, [x10, #32]
   14ec4:	b.hi	158d8 <xre_compile_pattern@@Base+0xe8c>  // b.pmore
   14ec8:	add	x9, x9, #0x2
   14ecc:	madd	x8, x8, x15, x13
   14ed0:	str	x9, [x8, #16]
   14ed4:	b	14ee4 <xre_compile_pattern@@Base+0x498>
   14ed8:	mov	w26, #0xf                   	// #15
   14edc:	mov	w8, wzr
   14ee0:	tbz	wzr, #0, 17460 <xre_compile_pattern@@Base+0x2a14>
   14ee4:	ldp	x20, x8, [x19]
   14ee8:	sub	x9, x27, x20
   14eec:	add	x9, x9, #0x3
   14ef0:	cmp	x9, x8
   14ef4:	b.ls	158bc <xre_compile_pattern@@Base+0xe70>  // b.plast
   14ef8:	cmp	x8, #0x10, lsl #12
   14efc:	b.eq	14ed8 <xre_compile_pattern@@Base+0x48c>  // b.none
   14f00:	lsl	x8, x8, #1
   14f04:	cmp	x8, #0x10, lsl #12
   14f08:	mov	w9, #0x10000               	// #65536
   14f0c:	csel	x1, x8, x9, cc  // cc = lo, ul, last
   14f10:	mov	x0, x20
   14f14:	str	x1, [x19, #8]
   14f18:	bl	92b0 <realloc@plt>
   14f1c:	str	x0, [x19]
   14f20:	cbz	x0, 14f40 <xre_compile_pattern@@Base+0x4f4>
   14f24:	cmp	x20, x0
   14f28:	b.eq	14f34 <xre_compile_pattern@@Base+0x4e8>  // b.none
   14f2c:	sub	x8, x0, x20
   14f30:	add	x27, x27, x8
   14f34:	mov	w8, #0x1                   	// #1
   14f38:	tbnz	w8, #0, 14ee4 <xre_compile_pattern@@Base+0x498>
   14f3c:	b	17460 <xre_compile_pattern@@Base+0x2a14>
   14f40:	mov	w26, #0xc                   	// #12
   14f44:	mov	w8, wzr
   14f48:	tbnz	wzr, #0, 14ee4 <xre_compile_pattern@@Base+0x498>
   14f4c:	b	17460 <xre_compile_pattern@@Base+0x2a14>
   14f50:	tbz	w22, #13, 16f60 <xre_compile_pattern@@Base+0x2514>
   14f54:	cbnz	x25, 14f68 <xre_compile_pattern@@Base+0x51c>
   14f58:	b	156bc <xre_compile_pattern@@Base+0xc70>
   14f5c:	mov	w26, #0xf                   	// #15
   14f60:	mov	w8, wzr
   14f64:	tbz	wzr, #0, 17460 <xre_compile_pattern@@Base+0x2a14>
   14f68:	ldp	x22, x8, [x19]
   14f6c:	sub	x9, x27, x22
   14f70:	add	x9, x9, #0x1
   14f74:	cmp	x9, x8
   14f78:	b.ls	15694 <xre_compile_pattern@@Base+0xc48>  // b.plast
   14f7c:	cmp	x8, #0x10, lsl #12
   14f80:	b.eq	14f5c <xre_compile_pattern@@Base+0x510>  // b.none
   14f84:	lsl	x8, x8, #1
   14f88:	cmp	x8, #0x10, lsl #12
   14f8c:	mov	w9, #0x10000               	// #65536
   14f90:	csel	x1, x8, x9, cc  // cc = lo, ul, last
   14f94:	mov	x0, x22
   14f98:	str	x1, [x19, #8]
   14f9c:	bl	92b0 <realloc@plt>
   14fa0:	str	x0, [x19]
   14fa4:	cbz	x0, 14fec <xre_compile_pattern@@Base+0x5a0>
   14fa8:	cmp	x22, x0
   14fac:	b.eq	14fe0 <xre_compile_pattern@@Base+0x594>  // b.none
   14fb0:	sub	x8, x0, x22
   14fb4:	cmp	x25, #0x0
   14fb8:	add	x9, x25, x8
   14fbc:	add	x10, x20, x8
   14fc0:	csel	x25, xzr, x9, eq  // eq = none
   14fc4:	cmp	x20, #0x0
   14fc8:	add	x27, x27, x8
   14fcc:	add	x28, x28, x8
   14fd0:	add	x8, x24, x8
   14fd4:	csel	x20, xzr, x10, eq  // eq = none
   14fd8:	cmp	x24, #0x0
   14fdc:	csel	x24, xzr, x8, eq  // eq = none
   14fe0:	mov	w8, #0x1                   	// #1
   14fe4:	tbnz	w8, #0, 14f68 <xre_compile_pattern@@Base+0x51c>
   14fe8:	b	17460 <xre_compile_pattern@@Base+0x2a14>
   14fec:	mov	w26, #0xc                   	// #12
   14ff0:	mov	w8, wzr
   14ff4:	tbnz	wzr, #0, 14f68 <xre_compile_pattern@@Base+0x51c>
   14ff8:	b	17460 <xre_compile_pattern@@Base+0x2a14>
   14ffc:	mov	x21, x27
   15000:	b	15010 <xre_compile_pattern@@Base+0x5c4>
   15004:	mov	w26, #0xf                   	// #15
   15008:	mov	w8, wzr
   1500c:	tbz	wzr, #0, 17460 <xre_compile_pattern@@Base+0x2a14>
   15010:	ldp	x20, x8, [x19]
   15014:	sub	x9, x21, x20
   15018:	add	x9, x9, #0x1
   1501c:	cmp	x9, x8
   15020:	b.ls	15448 <xre_compile_pattern@@Base+0x9fc>  // b.plast
   15024:	cmp	x8, #0x10, lsl #12
   15028:	b.eq	15004 <xre_compile_pattern@@Base+0x5b8>  // b.none
   1502c:	lsl	x8, x8, #1
   15030:	cmp	x8, #0x10, lsl #12
   15034:	mov	w9, #0x10000               	// #65536
   15038:	csel	x1, x8, x9, cc  // cc = lo, ul, last
   1503c:	mov	x0, x20
   15040:	str	x1, [x19, #8]
   15044:	bl	92b0 <realloc@plt>
   15048:	str	x0, [x19]
   1504c:	cbz	x0, 15094 <xre_compile_pattern@@Base+0x648>
   15050:	cmp	x20, x0
   15054:	b.eq	15088 <xre_compile_pattern@@Base+0x63c>  // b.none
   15058:	sub	x8, x0, x20
   1505c:	cmp	x25, #0x0
   15060:	add	x9, x25, x8
   15064:	add	x10, x27, x8
   15068:	csel	x25, xzr, x9, eq  // eq = none
   1506c:	cmp	x27, #0x0
   15070:	add	x21, x21, x8
   15074:	add	x28, x28, x8
   15078:	add	x8, x24, x8
   1507c:	csel	x27, xzr, x10, eq  // eq = none
   15080:	cmp	x24, #0x0
   15084:	csel	x24, xzr, x8, eq  // eq = none
   15088:	mov	w8, #0x1                   	// #1
   1508c:	tbnz	w8, #0, 15010 <xre_compile_pattern@@Base+0x5c4>
   15090:	b	17460 <xre_compile_pattern@@Base+0x2a14>
   15094:	mov	w26, #0xc                   	// #12
   15098:	mov	w8, wzr
   1509c:	tbnz	wzr, #0, 15010 <xre_compile_pattern@@Base+0x5c4>
   150a0:	b	17460 <xre_compile_pattern@@Base+0x2a14>
   150a4:	ldr	x8, [sp, #160]
   150a8:	cmp	x1, x8
   150ac:	b.ne	150d4 <xre_compile_pattern@@Base+0x688>  // b.any
   150b0:	ldr	x0, [sp, #144]
   150b4:	bl	9240 <free@plt>
   150b8:	mov	w26, #0x7                   	// #7
   150bc:	mov	w8, #0x1                   	// #1
   150c0:	cbz	w8, 1715c <xre_compile_pattern@@Base+0x2710>
   150c4:	b	17460 <xre_compile_pattern@@Base+0x2a14>
   150c8:	mov	w8, wzr
   150cc:	mov	w26, #0xf                   	// #15
   150d0:	tbz	w8, #0, 15590 <xre_compile_pattern@@Base+0xb44>
   150d4:	ldp	x22, x8, [x19]
   150d8:	sub	x9, x27, x22
   150dc:	add	x9, x9, #0x22
   150e0:	cmp	x9, x8
   150e4:	b.ls	154f0 <xre_compile_pattern@@Base+0xaa4>  // b.plast
   150e8:	cmp	x8, #0x10, lsl #12
   150ec:	b.eq	150c8 <xre_compile_pattern@@Base+0x67c>  // b.none
   150f0:	lsl	x8, x8, #1
   150f4:	cmp	x8, #0x10, lsl #12
   150f8:	mov	w9, #0x10000               	// #65536
   150fc:	csel	x1, x8, x9, cc  // cc = lo, ul, last
   15100:	mov	x0, x22
   15104:	str	x1, [x19, #8]
   15108:	bl	92b0 <realloc@plt>
   1510c:	str	x0, [x19]
   15110:	cbz	x0, 15154 <xre_compile_pattern@@Base+0x708>
   15114:	cmp	x22, x0
   15118:	b.eq	1514c <xre_compile_pattern@@Base+0x700>  // b.none
   1511c:	sub	x8, x0, x22
   15120:	cmp	x25, #0x0
   15124:	add	x9, x25, x8
   15128:	add	x10, x20, x8
   1512c:	csel	x25, xzr, x9, eq  // eq = none
   15130:	cmp	x20, #0x0
   15134:	add	x27, x27, x8
   15138:	add	x28, x28, x8
   1513c:	add	x8, x24, x8
   15140:	csel	x20, xzr, x10, eq  // eq = none
   15144:	cmp	x24, #0x0
   15148:	csel	x24, xzr, x8, eq  // eq = none
   1514c:	mov	w8, #0x1                   	// #1
   15150:	b	150d0 <xre_compile_pattern@@Base+0x684>
   15154:	mov	w8, wzr
   15158:	mov	w26, #0xc                   	// #12
   1515c:	b	150d0 <xre_compile_pattern@@Base+0x684>
   15160:	ldr	x9, [sp, #160]
   15164:	cmp	x1, x9
   15168:	b.eq	17484 <xre_compile_pattern@@Base+0x2a38>  // b.none
   1516c:	add	x9, x8, #0x2
   15170:	stur	x9, [x29, #-16]
   15174:	ldrb	w23, [x8, #1]
   15178:	sub	w8, w23, #0x27
   1517c:	cmp	w8, #0x55
   15180:	b.hi	16f50 <xre_compile_pattern@@Base+0x2504>  // b.pmore
   15184:	adrp	x11, 19000 <iterative_hash@@Base+0x140>
   15188:	add	x11, x11, #0xf5e
   1518c:	adr	x9, 1519c <xre_compile_pattern@@Base+0x750>
   15190:	ldrh	w10, [x11, x8, lsl #1]
   15194:	add	x9, x9, x10, lsl #2
   15198:	br	x9
   1519c:	ldr	x22, [sp, #136]
   151a0:	tbnz	w22, #14, 16f60 <xre_compile_pattern@@Base+0x2514>
   151a4:	ldr	w8, [sp, #124]
   151a8:	sub	w21, w23, #0x30
   151ac:	and	w2, w21, #0xff
   151b0:	cmp	w8, w2
   151b4:	b.cc	174a4 <xre_compile_pattern@@Base+0x2a58>  // b.lo, b.ul, b.last
   151b8:	ldp	x0, x1, [sp, #144]
   151bc:	bl	17f2c <xregfree@@Base+0x640>
   151c0:	tst	w0, #0xff
   151c4:	b.ne	16f60 <xre_compile_pattern@@Base+0x2514>  // b.any
   151c8:	mov	x22, x27
   151cc:	b	153b4 <xre_compile_pattern@@Base+0x968>
   151d0:	tbnz	w22, #3, 15204 <xre_compile_pattern@@Base+0x7b8>
   151d4:	ldr	x9, [sp, #112]
   151d8:	cmp	x8, x9
   151dc:	b.eq	15204 <xre_compile_pattern@@Base+0x7b8>  // b.none
   151e0:	ldr	x0, [sp, #112]
   151e4:	mov	x2, x22
   151e8:	bl	17d34 <xregfree@@Base+0x448>
   151ec:	tst	w0, #0xff
   151f0:	b.ne	15204 <xre_compile_pattern@@Base+0x7b8>  // b.any
   151f4:	b	16f60 <xre_compile_pattern@@Base+0x2514>
   151f8:	mov	w26, #0xf                   	// #15
   151fc:	mov	w8, wzr
   15200:	tbz	wzr, #0, 17460 <xre_compile_pattern@@Base+0x2a14>
   15204:	ldp	x22, x8, [x19]
   15208:	sub	x9, x27, x22
   1520c:	add	x9, x9, #0x1
   15210:	cmp	x9, x8
   15214:	b.ls	15474 <xre_compile_pattern@@Base+0xa28>  // b.plast
   15218:	cmp	x8, #0x10, lsl #12
   1521c:	b.eq	151f8 <xre_compile_pattern@@Base+0x7ac>  // b.none
   15220:	lsl	x8, x8, #1
   15224:	cmp	x8, #0x10, lsl #12
   15228:	mov	w9, #0x10000               	// #65536
   1522c:	csel	x1, x8, x9, cc  // cc = lo, ul, last
   15230:	mov	x0, x22
   15234:	str	x1, [x19, #8]
   15238:	bl	92b0 <realloc@plt>
   1523c:	str	x0, [x19]
   15240:	cbz	x0, 15288 <xre_compile_pattern@@Base+0x83c>
   15244:	cmp	x22, x0
   15248:	b.eq	1527c <xre_compile_pattern@@Base+0x830>  // b.none
   1524c:	sub	x8, x0, x22
   15250:	cmp	x25, #0x0
   15254:	add	x9, x25, x8
   15258:	add	x10, x20, x8
   1525c:	csel	x25, xzr, x9, eq  // eq = none
   15260:	cmp	x20, #0x0
   15264:	add	x27, x27, x8
   15268:	add	x28, x28, x8
   1526c:	add	x8, x24, x8
   15270:	csel	x20, xzr, x10, eq  // eq = none
   15274:	cmp	x24, #0x0
   15278:	csel	x24, xzr, x8, eq  // eq = none
   1527c:	mov	w8, #0x1                   	// #1
   15280:	tbnz	w8, #0, 15204 <xre_compile_pattern@@Base+0x7b8>
   15284:	b	17460 <xre_compile_pattern@@Base+0x2a14>
   15288:	mov	w26, #0xc                   	// #12
   1528c:	mov	w8, wzr
   15290:	tbnz	wzr, #0, 15204 <xre_compile_pattern@@Base+0x7b8>
   15294:	b	17460 <xre_compile_pattern@@Base+0x2a14>
   15298:	ldr	x9, [sp, #104]
   1529c:	mov	w8, #0x1200                	// #4608
   152a0:	cmp	x9, x8
   152a4:	b.ne	16f60 <xre_compile_pattern@@Base+0x2514>  // b.any
   152a8:	ldur	x8, [x29, #-16]
   152ac:	ldr	x10, [sp, #160]
   152b0:	cmp	x8, x10
   152b4:	b.eq	165a0 <xre_compile_pattern@@Base+0x1b54>  // b.none
   152b8:	ldur	x9, [x29, #-16]
   152bc:	mov	w22, #0xffffffff            	// #-1
   152c0:	b	152cc <xre_compile_pattern@@Base+0x880>
   152c4:	ldur	x9, [x29, #-16]
   152c8:	ldr	x10, [sp, #160]
   152cc:	cmp	x9, x10
   152d0:	b.eq	15480 <xre_compile_pattern@@Base+0xa34>  // b.none
   152d4:	add	x10, x9, #0x1
   152d8:	stur	x10, [x29, #-16]
   152dc:	ldrb	w23, [x9]
   152e0:	ldur	x9, [x29, #-152]
   152e4:	cbz	x9, 152ec <xre_compile_pattern@@Base+0x8a0>
   152e8:	ldrb	w23, [x9, x23]
   152ec:	sub	w9, w23, #0x30
   152f0:	cmp	w9, #0x9
   152f4:	b.hi	15480 <xre_compile_pattern@@Base+0xa34>  // b.pmore
   152f8:	cmp	w22, #0x8, lsl #12
   152fc:	b.ge	152c4 <xre_compile_pattern@@Base+0x878>  // b.tcont
   15300:	bic	w9, w22, w22, asr #31
   15304:	mov	w10, #0xa                   	// #10
   15308:	madd	w9, w9, w10, w23
   1530c:	sub	w22, w9, #0x30
   15310:	b	152c4 <xre_compile_pattern@@Base+0x878>
   15314:	tbz	w22, #15, 16f60 <xre_compile_pattern@@Base+0x2514>
   15318:	tbz	w22, #10, 1532c <xre_compile_pattern@@Base+0x8e0>
   1531c:	b	16f60 <xre_compile_pattern@@Base+0x2514>
   15320:	mov	w26, #0xf                   	// #15
   15324:	mov	w8, wzr
   15328:	tbz	wzr, #0, 17460 <xre_compile_pattern@@Base+0x2a14>
   1532c:	ldp	x20, x8, [x19]
   15330:	sub	x9, x27, x20
   15334:	add	x9, x9, #0x3
   15338:	cmp	x9, x8
   1533c:	b.ls	155cc <xre_compile_pattern@@Base+0xb80>  // b.plast
   15340:	cmp	x8, #0x10, lsl #12
   15344:	b.eq	15320 <xre_compile_pattern@@Base+0x8d4>  // b.none
   15348:	lsl	x8, x8, #1
   1534c:	cmp	x8, #0x10, lsl #12
   15350:	mov	w9, #0x10000               	// #65536
   15354:	csel	x1, x8, x9, cc  // cc = lo, ul, last
   15358:	mov	x0, x20
   1535c:	str	x1, [x19, #8]
   15360:	bl	92b0 <realloc@plt>
   15364:	str	x0, [x19]
   15368:	cbz	x0, 15398 <xre_compile_pattern@@Base+0x94c>
   1536c:	cmp	x20, x0
   15370:	b.eq	1538c <xre_compile_pattern@@Base+0x940>  // b.none
   15374:	sub	x8, x0, x20
   15378:	cmp	x25, #0x0
   1537c:	add	x27, x27, x8
   15380:	add	x28, x28, x8
   15384:	add	x8, x25, x8
   15388:	csel	x25, xzr, x8, eq  // eq = none
   1538c:	mov	w8, #0x1                   	// #1
   15390:	tbnz	w8, #0, 1532c <xre_compile_pattern@@Base+0x8e0>
   15394:	b	17460 <xre_compile_pattern@@Base+0x2a14>
   15398:	mov	w26, #0xc                   	// #12
   1539c:	mov	w8, wzr
   153a0:	tbnz	wzr, #0, 1532c <xre_compile_pattern@@Base+0x8e0>
   153a4:	b	17460 <xre_compile_pattern@@Base+0x2a14>
   153a8:	mov	w26, #0xf                   	// #15
   153ac:	mov	w8, wzr
   153b0:	tbz	wzr, #0, 17460 <xre_compile_pattern@@Base+0x2a14>
   153b4:	ldp	x20, x8, [x19]
   153b8:	sub	x9, x22, x20
   153bc:	add	x9, x9, #0x2
   153c0:	cmp	x9, x8
   153c4:	b.ls	16da4 <xre_compile_pattern@@Base+0x2358>  // b.plast
   153c8:	cmp	x8, #0x10, lsl #12
   153cc:	b.eq	153a8 <xre_compile_pattern@@Base+0x95c>  // b.none
   153d0:	lsl	x8, x8, #1
   153d4:	cmp	x8, #0x10, lsl #12
   153d8:	mov	w9, #0x10000               	// #65536
   153dc:	csel	x1, x8, x9, cc  // cc = lo, ul, last
   153e0:	mov	x0, x20
   153e4:	str	x1, [x19, #8]
   153e8:	bl	92b0 <realloc@plt>
   153ec:	str	x0, [x19]
   153f0:	cbz	x0, 15438 <xre_compile_pattern@@Base+0x9ec>
   153f4:	cmp	x20, x0
   153f8:	b.eq	1542c <xre_compile_pattern@@Base+0x9e0>  // b.none
   153fc:	sub	x8, x0, x20
   15400:	cmp	x25, #0x0
   15404:	add	x9, x25, x8
   15408:	add	x10, x27, x8
   1540c:	csel	x25, xzr, x9, eq  // eq = none
   15410:	cmp	x27, #0x0
   15414:	add	x22, x22, x8
   15418:	add	x28, x28, x8
   1541c:	add	x8, x24, x8
   15420:	csel	x27, xzr, x10, eq  // eq = none
   15424:	cmp	x24, #0x0
   15428:	csel	x24, xzr, x8, eq  // eq = none
   1542c:	mov	w8, #0x1                   	// #1
   15430:	tbnz	w8, #0, 153b4 <xre_compile_pattern@@Base+0x968>
   15434:	b	17460 <xre_compile_pattern@@Base+0x2a14>
   15438:	mov	w26, #0xc                   	// #12
   1543c:	mov	w8, wzr
   15440:	tbnz	wzr, #0, 153b4 <xre_compile_pattern@@Base+0x968>
   15444:	b	17460 <xre_compile_pattern@@Base+0x2a14>
   15448:	mov	w8, #0x3                   	// #3
   1544c:	strb	w8, [x21], #1
   15450:	mov	x20, x27
   15454:	mov	x27, x21
   15458:	b	1715c <xre_compile_pattern@@Base+0x2710>
   1545c:	mov	w8, #0x6                   	// #6
   15460:	cbnz	w8, 16730 <xre_compile_pattern@@Base+0x1ce4>
   15464:	b	1715c <xre_compile_pattern@@Base+0x2710>
   15468:	mov	w8, #0xa                   	// #10
   1546c:	strb	w8, [x27], #1
   15470:	b	1715c <xre_compile_pattern@@Base+0x2710>
   15474:	mov	w8, #0x9                   	// #9
   15478:	strb	w8, [x27], #1
   1547c:	b	1715c <xre_compile_pattern@@Base+0x2710>
   15480:	cmp	w23, #0x2c
   15484:	b.ne	1568c <xre_compile_pattern@@Base+0xc40>  // b.any
   15488:	ldur	x10, [x29, #-16]
   1548c:	ldr	x9, [sp, #160]
   15490:	cmp	x10, x9
   15494:	b.eq	1651c <xre_compile_pattern@@Base+0x1ad0>  // b.none
   15498:	mov	w9, #0xffffffff            	// #-1
   1549c:	b	154b0 <xre_compile_pattern@@Base+0xa64>
   154a0:	ldur	x10, [x29, #-16]
   154a4:	ldr	x11, [sp, #160]
   154a8:	cmp	x10, x11
   154ac:	b.eq	16520 <xre_compile_pattern@@Base+0x1ad4>  // b.none
   154b0:	add	x11, x10, #0x1
   154b4:	stur	x11, [x29, #-16]
   154b8:	ldrb	w23, [x10]
   154bc:	ldur	x10, [x29, #-152]
   154c0:	cbz	x10, 154c8 <xre_compile_pattern@@Base+0xa7c>
   154c4:	ldrb	w23, [x10, x23]
   154c8:	sub	w10, w23, #0x30
   154cc:	cmp	w10, #0x9
   154d0:	b.hi	16520 <xre_compile_pattern@@Base+0x1ad4>  // b.pmore
   154d4:	cmp	w9, #0x8, lsl #12
   154d8:	b.ge	154a0 <xre_compile_pattern@@Base+0xa54>  // b.tcont
   154dc:	bic	w9, w9, w9, asr #31
   154e0:	mov	w10, #0xa                   	// #10
   154e4:	madd	w9, w9, w10, w23
   154e8:	sub	w9, w9, #0x30
   154ec:	b	154a0 <xre_compile_pattern@@Base+0xa54>
   154f0:	mov	x20, x27
   154f4:	b	15504 <xre_compile_pattern@@Base+0xab8>
   154f8:	mov	w8, wzr
   154fc:	mov	w26, #0xf                   	// #15
   15500:	tbz	w8, #0, 15590 <xre_compile_pattern@@Base+0xb44>
   15504:	ldp	x22, x8, [x19]
   15508:	sub	x9, x27, x22
   1550c:	add	x9, x9, #0x1
   15510:	cmp	x9, x8
   15514:	b.ls	157c8 <xre_compile_pattern@@Base+0xd7c>  // b.plast
   15518:	cmp	x8, #0x10, lsl #12
   1551c:	b.eq	154f8 <xre_compile_pattern@@Base+0xaac>  // b.none
   15520:	lsl	x8, x8, #1
   15524:	cmp	x8, #0x10, lsl #12
   15528:	mov	w9, #0x10000               	// #65536
   1552c:	csel	x1, x8, x9, cc  // cc = lo, ul, last
   15530:	mov	x0, x22
   15534:	str	x1, [x19, #8]
   15538:	bl	92b0 <realloc@plt>
   1553c:	str	x0, [x19]
   15540:	cbz	x0, 15584 <xre_compile_pattern@@Base+0xb38>
   15544:	cmp	x22, x0
   15548:	b.eq	1557c <xre_compile_pattern@@Base+0xb30>  // b.none
   1554c:	sub	x8, x0, x22
   15550:	cmp	x25, #0x0
   15554:	add	x9, x25, x8
   15558:	add	x10, x20, x8
   1555c:	csel	x25, xzr, x9, eq  // eq = none
   15560:	cmp	x20, #0x0
   15564:	add	x27, x27, x8
   15568:	add	x28, x28, x8
   1556c:	add	x8, x24, x8
   15570:	csel	x20, xzr, x10, eq  // eq = none
   15574:	cmp	x24, #0x0
   15578:	csel	x24, xzr, x8, eq  // eq = none
   1557c:	mov	w8, #0x1                   	// #1
   15580:	b	15500 <xre_compile_pattern@@Base+0xab4>
   15584:	mov	w8, wzr
   15588:	mov	w26, #0xc                   	// #12
   1558c:	b	15500 <xre_compile_pattern@@Base+0xab4>
   15590:	mov	w8, #0x1                   	// #1
   15594:	cbz	w8, 1715c <xre_compile_pattern@@Base+0x2710>
   15598:	b	17460 <xre_compile_pattern@@Base+0x2a14>
   1559c:	ldur	x8, [x29, #-16]
   155a0:	ldr	x11, [sp, #136]
   155a4:	ldur	x12, [x29, #-152]
   155a8:	sub	x9, x8, #0x2
   155ac:	cbz	x12, 155b8 <xre_compile_pattern@@Base+0xb6c>
   155b0:	ldrb	w9, [x9]
   155b4:	add	x9, x12, x9
   155b8:	ldr	x13, [sp, #160]
   155bc:	ldrb	w9, [x9]
   155c0:	cbz	x12, 15918 <xre_compile_pattern@@Base+0xecc>
   155c4:	ldrb	w10, [x12, #46]
   155c8:	b	1591c <xre_compile_pattern@@Base+0xed0>
   155cc:	sub	w8, w27, w28
   155d0:	add	w2, w8, #0x3
   155d4:	mov	w0, #0xf                   	// #15
   155d8:	mov	x1, x28
   155dc:	mov	x3, x27
   155e0:	bl	17e18 <xregfree@@Base+0x52c>
   155e4:	add	x21, x27, #0x3
   155e8:	cbz	x25, 15600 <xre_compile_pattern@@Base+0xbb4>
   155ec:	sub	w8, w21, w25
   155f0:	sub	w2, w8, #0x3
   155f4:	mov	w0, #0xe                   	// #14
   155f8:	mov	x1, x25
   155fc:	bl	17e04 <xregfree@@Base+0x518>
   15600:	mov	x22, x21
   15604:	b	15614 <xre_compile_pattern@@Base+0xbc8>
   15608:	mov	w26, #0xf                   	// #15
   1560c:	mov	w8, wzr
   15610:	tbz	wzr, #0, 17460 <xre_compile_pattern@@Base+0x2a14>
   15614:	ldp	x20, x8, [x19]
   15618:	sub	x9, x22, x20
   1561c:	add	x9, x9, #0x3
   15620:	cmp	x9, x8
   15624:	b.ls	158a4 <xre_compile_pattern@@Base+0xe58>  // b.plast
   15628:	cmp	x8, #0x10, lsl #12
   1562c:	b.eq	15608 <xre_compile_pattern@@Base+0xbbc>  // b.none
   15630:	lsl	x8, x8, #1
   15634:	cmp	x8, #0x10, lsl #12
   15638:	mov	w9, #0x10000               	// #65536
   1563c:	csel	x1, x8, x9, cc  // cc = lo, ul, last
   15640:	mov	x0, x20
   15644:	str	x1, [x19, #8]
   15648:	bl	92b0 <realloc@plt>
   1564c:	str	x0, [x19]
   15650:	cbz	x0, 1567c <xre_compile_pattern@@Base+0xc30>
   15654:	cmp	x20, x0
   15658:	b.eq	15670 <xre_compile_pattern@@Base+0xc24>  // b.none
   1565c:	sub	x8, x0, x20
   15660:	cmp	x21, #0x0
   15664:	add	x22, x22, x8
   15668:	add	x8, x21, x8
   1566c:	csel	x21, xzr, x8, eq  // eq = none
   15670:	mov	w8, #0x1                   	// #1
   15674:	tbnz	w8, #0, 15614 <xre_compile_pattern@@Base+0xbc8>
   15678:	b	17460 <xre_compile_pattern@@Base+0x2a14>
   1567c:	mov	w26, #0xc                   	// #12
   15680:	mov	w8, wzr
   15684:	tbnz	wzr, #0, 15614 <xre_compile_pattern@@Base+0xbc8>
   15688:	b	17460 <xre_compile_pattern@@Base+0x2a14>
   1568c:	mov	w21, w22
   15690:	b	1652c <xre_compile_pattern@@Base+0x1ae0>
   15694:	sub	w8, w27, w25
   15698:	mov	x21, x27
   1569c:	mov	w9, #0x14                  	// #20
   156a0:	sub	w2, w8, #0x3
   156a4:	mov	w0, #0xe                   	// #14
   156a8:	mov	x1, x25
   156ac:	strb	w9, [x21], #1
   156b0:	bl	17e04 <xregfree@@Base+0x518>
   156b4:	ldr	x22, [sp, #136]
   156b8:	mov	x27, x21
   156bc:	ldr	x8, [sp, #152]
   156c0:	lsr	x8, x8, #32
   156c4:	cbz	x8, 1589c <xre_compile_pattern@@Base+0xe50>
   156c8:	ldr	x14, [sp, #144]
   156cc:	mov	w9, #0xffffffff            	// #-1
   156d0:	add	x21, x8, x9
   156d4:	and	x9, x21, #0xffffffff
   156d8:	mov	w15, #0x28                  	// #40
   156dc:	madd	x10, x9, x15, x14
   156e0:	ldr	x8, [x19]
   156e4:	ldp	x11, x12, [x10]
   156e8:	ldr	x13, [x10, #24]
   156ec:	ldr	w23, [x10, #32]
   156f0:	add	x10, x8, x12
   156f4:	cmp	x12, #0x0
   156f8:	sub	x10, x10, #0x1
   156fc:	add	x28, x8, x11
   15700:	csel	x25, xzr, x10, eq  // eq = none
   15704:	cmp	w23, #0xff
   15708:	add	x20, x8, x13
   1570c:	b.hi	15910 <xre_compile_pattern@@Base+0xec4>  // b.pmore
   15710:	madd	x9, x9, x15, x14
   15714:	ldr	w10, [sp, #124]
   15718:	ldr	x9, [x9, #16]
   1571c:	sub	w24, w10, w23
   15720:	strb	w24, [x8, x9]
   15724:	b	15734 <xre_compile_pattern@@Base+0xce8>
   15728:	mov	w26, #0xf                   	// #15
   1572c:	mov	w8, #0x1                   	// #1
   15730:	cbnz	w8, 165e8 <xre_compile_pattern@@Base+0x1b9c>
   15734:	ldp	x22, x8, [x19]
   15738:	sub	x9, x27, x22
   1573c:	add	x9, x9, #0x3
   15740:	cmp	x9, x8
   15744:	b.ls	165cc <xre_compile_pattern@@Base+0x1b80>  // b.plast
   15748:	cmp	x8, #0x10, lsl #12
   1574c:	b.eq	15728 <xre_compile_pattern@@Base+0xcdc>  // b.none
   15750:	lsl	x8, x8, #1
   15754:	cmp	x8, #0x10, lsl #12
   15758:	mov	w9, #0x10000               	// #65536
   1575c:	csel	x1, x8, x9, cc  // cc = lo, ul, last
   15760:	mov	x0, x22
   15764:	str	x1, [x19, #8]
   15768:	bl	92b0 <realloc@plt>
   1576c:	str	x0, [x19]
   15770:	cbz	x0, 157ac <xre_compile_pattern@@Base+0xd60>
   15774:	cmp	x22, x0
   15778:	b.eq	157bc <xre_compile_pattern@@Base+0xd70>  // b.none
   1577c:	sub	x9, x0, x22
   15780:	cmp	x25, #0x0
   15784:	add	x10, x25, x9
   15788:	add	x27, x27, x9
   1578c:	add	x28, x28, x9
   15790:	add	x9, x20, x9
   15794:	csel	x25, xzr, x10, eq  // eq = none
   15798:	cmp	x20, #0x0
   1579c:	mov	w8, wzr
   157a0:	csel	x20, xzr, x9, eq  // eq = none
   157a4:	cbz	w8, 15734 <xre_compile_pattern@@Base+0xce8>
   157a8:	b	165e8 <xre_compile_pattern@@Base+0x1b9c>
   157ac:	mov	w26, #0xc                   	// #12
   157b0:	mov	w8, #0x1                   	// #1
   157b4:	cbz	w8, 15734 <xre_compile_pattern@@Base+0xce8>
   157b8:	b	165e8 <xre_compile_pattern@@Base+0x1b9c>
   157bc:	mov	w8, wzr
   157c0:	cbz	wzr, 15734 <xre_compile_pattern@@Base+0xce8>
   157c4:	b	165e8 <xre_compile_pattern@@Base+0x1b9c>
   157c8:	ldur	x8, [x29, #-16]
   157cc:	ldrb	w8, [x8]
   157d0:	cmp	w8, #0x5e
   157d4:	mov	w8, #0x4                   	// #4
   157d8:	cinc	w8, w8, eq  // eq = none
   157dc:	strb	w8, [x27], #1
   157e0:	ldur	x8, [x29, #-16]
   157e4:	ldrb	w9, [x8]
   157e8:	cmp	w9, #0x5e
   157ec:	b.ne	157f8 <xre_compile_pattern@@Base+0xdac>  // b.any
   157f0:	add	x8, x8, #0x1
   157f4:	stur	x8, [x29, #-16]
   157f8:	ldur	x21, [x29, #-16]
   157fc:	mov	x23, x27
   15800:	b	15810 <xre_compile_pattern@@Base+0xdc4>
   15804:	mov	w8, wzr
   15808:	mov	w26, #0xf                   	// #15
   1580c:	tbz	w8, #0, 1650c <xre_compile_pattern@@Base+0x1ac0>
   15810:	ldp	x22, x8, [x19]
   15814:	sub	x9, x23, x22
   15818:	add	x9, x9, #0x1
   1581c:	cmp	x9, x8
   15820:	b.ls	1594c <xre_compile_pattern@@Base+0xf00>  // b.plast
   15824:	cmp	x8, #0x10, lsl #12
   15828:	b.eq	15804 <xre_compile_pattern@@Base+0xdb8>  // b.none
   1582c:	lsl	x8, x8, #1
   15830:	cmp	x8, #0x10, lsl #12
   15834:	mov	w9, #0x10000               	// #65536
   15838:	csel	x1, x8, x9, cc  // cc = lo, ul, last
   1583c:	mov	x0, x22
   15840:	str	x1, [x19, #8]
   15844:	bl	92b0 <realloc@plt>
   15848:	str	x0, [x19]
   1584c:	cbz	x0, 15890 <xre_compile_pattern@@Base+0xe44>
   15850:	cmp	x22, x0
   15854:	b.eq	15888 <xre_compile_pattern@@Base+0xe3c>  // b.none
   15858:	sub	x8, x0, x22
   1585c:	cmp	x25, #0x0
   15860:	add	x9, x25, x8
   15864:	add	x10, x20, x8
   15868:	csel	x25, xzr, x9, eq  // eq = none
   1586c:	cmp	x20, #0x0
   15870:	add	x23, x23, x8
   15874:	add	x28, x28, x8
   15878:	add	x8, x24, x8
   1587c:	csel	x20, xzr, x10, eq  // eq = none
   15880:	cmp	x24, #0x0
   15884:	csel	x24, xzr, x8, eq  // eq = none
   15888:	mov	w8, #0x1                   	// #1
   1588c:	b	1580c <xre_compile_pattern@@Base+0xdc0>
   15890:	mov	w8, wzr
   15894:	mov	w26, #0xc                   	// #12
   15898:	b	1580c <xre_compile_pattern@@Base+0xdc0>
   1589c:	tbnz	w22, #17, 16f60 <xre_compile_pattern@@Base+0x2514>
   158a0:	b	174b4 <xre_compile_pattern@@Base+0x2a68>
   158a4:	add	x28, x22, #0x3
   158a8:	mov	x20, xzr
   158ac:	mov	x24, xzr
   158b0:	mov	x25, x21
   158b4:	mov	x27, x28
   158b8:	b	1715c <xre_compile_pattern@@Base+0x2710>
   158bc:	mov	w8, #0x6                   	// #6
   158c0:	strb	w8, [x27]
   158c4:	ldr	w8, [sp, #124]
   158c8:	strb	wzr, [x27, #2]
   158cc:	strb	w8, [x27, #1]
   158d0:	add	x8, x27, #0x3
   158d4:	mov	x27, x8
   158d8:	mov	x8, #0x100000000           	// #4294967296
   158dc:	add	x21, x21, x8
   158e0:	mov	x25, xzr
   158e4:	mov	x20, xzr
   158e8:	mov	x24, xzr
   158ec:	str	x21, [sp, #152]
   158f0:	mov	x28, x27
   158f4:	b	1715c <xre_compile_pattern@@Base+0x2710>
   158f8:	ldr	x0, [sp, #144]
   158fc:	bl	9240 <free@plt>
   15900:	mov	w26, #0x5                   	// #5
   15904:	mov	w8, #0x1                   	// #1
   15908:	cbnz	w8, 16730 <xre_compile_pattern@@Base+0x1ce4>
   1590c:	b	1715c <xre_compile_pattern@@Base+0x2710>
   15910:	ldr	x9, [sp, #152]
   15914:	b	165f0 <xre_compile_pattern@@Base+0x1ba4>
   15918:	mov	w10, #0x2e                  	// #46
   1591c:	cmp	x8, x13
   15920:	b.cs	16628 <xre_compile_pattern@@Base+0x1bdc>  // b.hs, b.nlast
   15924:	cbz	w21, 16628 <xre_compile_pattern@@Base+0x1bdc>
   15928:	cmp	w10, w9
   1592c:	b.ne	16628 <xre_compile_pattern@@Base+0x1bdc>  // b.any
   15930:	cbz	x12, 1593c <xre_compile_pattern@@Base+0xef0>
   15934:	ldrb	w8, [x8]
   15938:	add	x8, x12, x8
   1593c:	ldrb	w8, [x8]
   15940:	cbz	x12, 16608 <xre_compile_pattern@@Base+0x1bbc>
   15944:	ldrb	w9, [x12, #10]
   15948:	b	1660c <xre_compile_pattern@@Base+0x1bc0>
   1594c:	str	x21, [sp, #72]
   15950:	ldr	x21, [sp, #136]
   15954:	mov	x27, x23
   15958:	movi	v0.2d, #0x0
   1595c:	str	q0, [x27, #1]!
   15960:	mov	w8, #0x20                  	// #32
   15964:	strb	w8, [x23]
   15968:	stur	q0, [x23, #17]
   1596c:	tbz	w21, #8, 15988 <xre_compile_pattern@@Base+0xf3c>
   15970:	ldurb	w8, [x23, #-1]
   15974:	cmp	w8, #0x5
   15978:	b.ne	15988 <xre_compile_pattern@@Base+0xf3c>  // b.any
   1597c:	ldrb	w8, [x23, #2]
   15980:	orr	w8, w8, #0x4
   15984:	strb	w8, [x23, #2]
   15988:	ldur	x8, [x29, #-16]
   1598c:	ldr	x9, [sp, #160]
   15990:	mov	w22, #0x1                   	// #1
   15994:	cmp	x8, x9
   15998:	b.eq	150b0 <xre_compile_pattern@@Base+0x664>  // b.none
   1599c:	mov	w15, wzr
   159a0:	mov	w0, #0xffffffff            	// #-1
   159a4:	mov	w14, w0
   159a8:	b	159d4 <xre_compile_pattern@@Base+0xf88>
   159ac:	lsr	x8, x14, #3
   159b0:	ldrb	w9, [x27, x8]
   159b4:	and	w10, w14, #0x7
   159b8:	lsl	w10, w22, w10
   159bc:	orr	w9, w9, w10
   159c0:	strb	w9, [x27, x8]
   159c4:	ldur	x8, [x29, #-16]
   159c8:	ldr	x9, [sp, #160]
   159cc:	cmp	x8, x9
   159d0:	b.eq	150b0 <xre_compile_pattern@@Base+0x664>  // b.none
   159d4:	add	x9, x8, #0x1
   159d8:	stur	x9, [x29, #-16]
   159dc:	ldrb	w0, [x8]
   159e0:	ldur	x10, [x29, #-152]
   159e4:	cbz	x10, 159ec <xre_compile_pattern@@Base+0xfa0>
   159e8:	ldrb	w0, [x10, x0]
   159ec:	tbz	w21, #0, 15a20 <xre_compile_pattern@@Base+0xfd4>
   159f0:	cmp	w0, #0x5c
   159f4:	b.ne	15a20 <xre_compile_pattern@@Base+0xfd4>  // b.any
   159f8:	ldr	x10, [sp, #160]
   159fc:	cmp	x9, x10
   15a00:	b.eq	16dbc <xre_compile_pattern@@Base+0x2370>  // b.none
   15a04:	add	x9, x8, #0x2
   15a08:	stur	x9, [x29, #-16]
   15a0c:	ldrb	w14, [x8, #1]
   15a10:	ldur	x8, [x29, #-152]
   15a14:	cbz	x8, 159ac <xre_compile_pattern@@Base+0xf60>
   15a18:	ldrb	w14, [x8, x14]
   15a1c:	b	159ac <xre_compile_pattern@@Base+0xf60>
   15a20:	ldr	x10, [sp, #72]
   15a24:	cmp	x8, x10
   15a28:	b.eq	15a34 <xre_compile_pattern@@Base+0xfe8>  // b.none
   15a2c:	cmp	w0, #0x5d
   15a30:	b.eq	17308 <xre_compile_pattern@@Base+0x28bc>  // b.none
   15a34:	tst	w15, #0xff
   15a38:	b.eq	15a50 <xre_compile_pattern@@Base+0x1004>  // b.none
   15a3c:	cmp	w0, #0x2d
   15a40:	b.ne	15a50 <xre_compile_pattern@@Base+0x1004>  // b.any
   15a44:	ldrb	w10, [x9]
   15a48:	cmp	w10, #0x5d
   15a4c:	b.ne	17340 <xre_compile_pattern@@Base+0x28f4>  // b.any
   15a50:	cmp	w0, #0x2d
   15a54:	b.ne	15aa8 <xre_compile_pattern@@Base+0x105c>  // b.any
   15a58:	ldr	x11, [sp, #112]
   15a5c:	sub	x10, x8, #0x1
   15a60:	cmp	x10, x11
   15a64:	b.cc	15a74 <xre_compile_pattern@@Base+0x1028>  // b.lo, b.ul, b.last
   15a68:	ldrb	w11, [x10]
   15a6c:	cmp	w11, #0x5b
   15a70:	b.eq	15aa8 <xre_compile_pattern@@Base+0x105c>  // b.none
   15a74:	ldr	x12, [sp, #112]
   15a78:	sub	x11, x8, #0x2
   15a7c:	cmp	x11, x12
   15a80:	b.cc	15a9c <xre_compile_pattern@@Base+0x1050>  // b.lo, b.ul, b.last
   15a84:	ldrb	w11, [x11]
   15a88:	cmp	w11, #0x5b
   15a8c:	b.ne	15a9c <xre_compile_pattern@@Base+0x1050>  // b.any
   15a90:	ldrb	w10, [x10]
   15a94:	cmp	w10, #0x5e
   15a98:	b.eq	15aa8 <xre_compile_pattern@@Base+0x105c>  // b.none
   15a9c:	ldrb	w10, [x9]
   15aa0:	cmp	w10, #0x5d
   15aa4:	b.ne	15cb0 <xre_compile_pattern@@Base+0x1264>  // b.any
   15aa8:	ldrb	w10, [x9]
   15aac:	cmp	w10, #0x2d
   15ab0:	b.ne	15ac4 <xre_compile_pattern@@Base+0x1078>  // b.any
   15ab4:	mov	x11, x8
   15ab8:	ldrb	w12, [x11, #2]!
   15abc:	cmp	w12, #0x5d
   15ac0:	b.ne	15c5c <xre_compile_pattern@@Base+0x1210>  // b.any
   15ac4:	cmp	w0, #0x5b
   15ac8:	cset	w11, eq  // eq = none
   15acc:	and	w11, w11, w21, lsr #2
   15ad0:	cmp	w11, #0x1
   15ad4:	b.ne	15b90 <xre_compile_pattern@@Base+0x1144>  // b.any
   15ad8:	cmp	w10, #0x3a
   15adc:	b.ne	15b90 <xre_compile_pattern@@Base+0x1144>  // b.any
   15ae0:	ldr	x10, [sp, #160]
   15ae4:	cmp	x9, x10
   15ae8:	b.eq	15ca4 <xre_compile_pattern@@Base+0x1258>  // b.none
   15aec:	add	x8, x8, #0x2
   15af0:	cmp	x8, x10
   15af4:	stur	x8, [x29, #-16]
   15af8:	b.eq	15de0 <xre_compile_pattern@@Base+0x1394>  // b.none
   15afc:	ldur	x8, [x29, #-16]
   15b00:	cmp	x8, x10
   15b04:	b.eq	15ca4 <xre_compile_pattern@@Base+0x1258>  // b.none
   15b08:	mov	w10, wzr
   15b0c:	sub	x13, x29, #0x90
   15b10:	b	15b28 <xre_compile_pattern@@Base+0x10dc>
   15b14:	sturb	wzr, [x29, #-144]
   15b18:	ldur	x8, [x29, #-16]
   15b1c:	ldr	x9, [sp, #160]
   15b20:	cmp	x8, x9
   15b24:	b.eq	15ca4 <xre_compile_pattern@@Base+0x1258>  // b.none
   15b28:	add	x9, x8, #0x1
   15b2c:	stur	x9, [x29, #-16]
   15b30:	ldrb	w11, [x8]
   15b34:	ldur	x12, [x29, #-152]
   15b38:	cbz	x12, 15b40 <xre_compile_pattern@@Base+0x10f4>
   15b3c:	ldrb	w11, [x12, x11]
   15b40:	cmp	w11, #0x3a
   15b44:	b.ne	15b64 <xre_compile_pattern@@Base+0x1118>  // b.any
   15b48:	ldr	x12, [sp, #160]
   15b4c:	cmp	x9, x12
   15b50:	b.eq	15e38 <xre_compile_pattern@@Base+0x13ec>  // b.none
   15b54:	ldrb	w12, [x9]
   15b58:	cmp	w12, #0x5d
   15b5c:	b.ne	15b70 <xre_compile_pattern@@Base+0x1124>  // b.any
   15b60:	b	15e38 <xre_compile_pattern@@Base+0x13ec>
   15b64:	ldr	x12, [sp, #160]
   15b68:	cmp	x9, x12
   15b6c:	b.eq	15e38 <xre_compile_pattern@@Base+0x13ec>  // b.none
   15b70:	and	w8, w10, #0xff
   15b74:	cmp	w8, #0x5
   15b78:	b.hi	15b14 <xre_compile_pattern@@Base+0x10c8>  // b.pmore
   15b7c:	and	x8, x10, #0xff
   15b80:	add	w9, w10, #0x1
   15b84:	strb	w11, [x13, x8]
   15b88:	mov	w10, w9
   15b8c:	b	15b18 <xre_compile_pattern@@Base+0x10cc>
   15b90:	cmp	w10, #0x3d
   15b94:	cset	w12, ne  // ne = any
   15b98:	eor	w11, w11, #0x1
   15b9c:	orr	w12, w11, w12
   15ba0:	tbnz	w12, #0, 15cf4 <xre_compile_pattern@@Base+0x12a8>
   15ba4:	ldr	x10, [sp, #160]
   15ba8:	cmp	x9, x10
   15bac:	b.eq	15ca4 <xre_compile_pattern@@Base+0x1258>  // b.none
   15bb0:	add	x8, x8, #0x2
   15bb4:	cmp	x8, x10
   15bb8:	str	w15, [sp, #64]
   15bbc:	str	x14, [sp, #56]
   15bc0:	stur	x8, [x29, #-16]
   15bc4:	b.eq	16070 <xre_compile_pattern@@Base+0x1624>  // b.none
   15bc8:	ldur	x9, [x29, #-16]
   15bcc:	ldr	x8, [sp, #160]
   15bd0:	cmp	x9, x8
   15bd4:	b.eq	15e24 <xre_compile_pattern@@Base+0x13d8>  // b.none
   15bd8:	mov	w8, wzr
   15bdc:	sub	x13, x29, #0x90
   15be0:	b	15bf8 <xre_compile_pattern@@Base+0x11ac>
   15be4:	sturb	wzr, [x29, #-144]
   15be8:	ldur	x9, [x29, #-16]
   15bec:	ldr	x10, [sp, #160]
   15bf0:	cmp	x9, x10
   15bf4:	b.eq	15e24 <xre_compile_pattern@@Base+0x13d8>  // b.none
   15bf8:	add	x10, x9, #0x1
   15bfc:	stur	x10, [x29, #-16]
   15c00:	ldrb	w11, [x9]
   15c04:	ldur	x12, [x29, #-152]
   15c08:	cbz	x12, 15c10 <xre_compile_pattern@@Base+0x11c4>
   15c0c:	ldrb	w11, [x12, x11]
   15c10:	cmp	w11, #0x3d
   15c14:	b.ne	15c34 <xre_compile_pattern@@Base+0x11e8>  // b.any
   15c18:	ldr	x12, [sp, #160]
   15c1c:	cmp	x10, x12
   15c20:	b.eq	160e0 <xre_compile_pattern@@Base+0x1694>  // b.none
   15c24:	ldrb	w12, [x10]
   15c28:	cmp	w12, #0x5d
   15c2c:	b.ne	15c40 <xre_compile_pattern@@Base+0x11f4>  // b.any
   15c30:	b	160e0 <xre_compile_pattern@@Base+0x1694>
   15c34:	ldr	x12, [sp, #160]
   15c38:	cmp	x10, x12
   15c3c:	b.eq	160e0 <xre_compile_pattern@@Base+0x1694>  // b.none
   15c40:	and	w9, w8, #0xff
   15c44:	cmp	w9, #0xf
   15c48:	b.hi	15be4 <xre_compile_pattern@@Base+0x1198>  // b.pmore
   15c4c:	and	x9, x8, #0xff
   15c50:	add	w8, w8, #0x1
   15c54:	strb	w11, [x13, x9]
   15c58:	b	15be8 <xre_compile_pattern@@Base+0x119c>
   15c5c:	ldr	x2, [sp, #160]
   15c60:	cmp	x9, x2
   15c64:	b.eq	15ca4 <xre_compile_pattern@@Base+0x1258>  // b.none
   15c68:	ldur	x3, [x29, #-152]
   15c6c:	sub	x1, x29, #0x10
   15c70:	mov	x4, x21
   15c74:	mov	x5, x27
   15c78:	str	w15, [sp, #64]
   15c7c:	str	x14, [sp, #56]
   15c80:	stur	x11, [x29, #-16]
   15c84:	bl	17e44 <xregfree@@Base+0x558>
   15c88:	cbz	w0, 15e10 <xre_compile_pattern@@Base+0x13c4>
   15c8c:	mov	w22, w0
   15c90:	ldr	x0, [sp, #144]
   15c94:	bl	9240 <free@plt>
   15c98:	mov	w8, #0x1                   	// #1
   15c9c:	mov	w26, w22
   15ca0:	b	15e2c <xre_compile_pattern@@Base+0x13e0>
   15ca4:	mov	w26, #0xe                   	// #14
   15ca8:	mov	w8, #0x1                   	// #1
   15cac:	b	16088 <xre_compile_pattern@@Base+0x163c>
   15cb0:	ldr	x2, [sp, #160]
   15cb4:	ldur	x3, [x29, #-152]
   15cb8:	sub	x1, x29, #0x10
   15cbc:	mov	w0, w14
   15cc0:	mov	x4, x21
   15cc4:	mov	x5, x27
   15cc8:	str	w15, [sp, #64]
   15ccc:	str	x14, [sp, #56]
   15cd0:	bl	17e44 <xregfree@@Base+0x558>
   15cd4:	cbz	w0, 15e04 <xre_compile_pattern@@Base+0x13b8>
   15cd8:	mov	w22, w0
   15cdc:	ldr	x0, [sp, #144]
   15ce0:	bl	9240 <free@plt>
   15ce4:	ldr	x0, [sp, #56]
   15ce8:	mov	w8, #0x1                   	// #1
   15cec:	mov	w26, w22
   15cf0:	b	15e0c <xre_compile_pattern@@Base+0x13c0>
   15cf4:	cmp	w10, #0x2e
   15cf8:	cset	w10, ne  // ne = any
   15cfc:	orr	w10, w11, w10
   15d00:	tbnz	w10, #0, 15dc0 <xre_compile_pattern@@Base+0x1374>
   15d04:	ldr	x10, [sp, #160]
   15d08:	mov	x21, x14
   15d0c:	mov	w13, #0x1                   	// #1
   15d10:	str	w15, [sp, #64]
   15d14:	cmp	x9, x10
   15d18:	b.eq	16220 <xre_compile_pattern@@Base+0x17d4>  // b.none
   15d1c:	ldr	x9, [sp, #160]
   15d20:	add	x8, x8, #0x2
   15d24:	stur	x8, [x29, #-16]
   15d28:	cmp	x8, x9
   15d2c:	b.eq	16158 <xre_compile_pattern@@Base+0x170c>  // b.none
   15d30:	ldur	x9, [x29, #-16]
   15d34:	ldr	x8, [sp, #160]
   15d38:	cmp	x9, x8
   15d3c:	b.eq	16220 <xre_compile_pattern@@Base+0x17d4>  // b.none
   15d40:	mov	w8, wzr
   15d44:	sub	x14, x29, #0x90
   15d48:	b	15d60 <xre_compile_pattern@@Base+0x1314>
   15d4c:	sturb	wzr, [x29, #-144]
   15d50:	ldur	x9, [x29, #-16]
   15d54:	ldr	x10, [sp, #160]
   15d58:	cmp	x9, x10
   15d5c:	b.eq	16220 <xre_compile_pattern@@Base+0x17d4>  // b.none
   15d60:	add	x10, x9, #0x1
   15d64:	stur	x10, [x29, #-16]
   15d68:	ldrb	w11, [x9]
   15d6c:	ldur	x12, [x29, #-152]
   15d70:	cbz	x12, 15d78 <xre_compile_pattern@@Base+0x132c>
   15d74:	ldrb	w11, [x12, x11]
   15d78:	cmp	w11, #0x2e
   15d7c:	b.ne	15d9c <xre_compile_pattern@@Base+0x1350>  // b.any
   15d80:	ldr	x12, [sp, #160]
   15d84:	cmp	x10, x12
   15d88:	b.eq	161b4 <xre_compile_pattern@@Base+0x1768>  // b.none
   15d8c:	ldrb	w12, [x10]
   15d90:	cmp	w12, #0x5d
   15d94:	b.ne	15da8 <xre_compile_pattern@@Base+0x135c>  // b.any
   15d98:	b	161b4 <xre_compile_pattern@@Base+0x1768>
   15d9c:	ldr	x12, [sp, #160]
   15da0:	cmp	x10, x12
   15da4:	b.eq	161b4 <xre_compile_pattern@@Base+0x1768>  // b.none
   15da8:	sxtb	w9, w8
   15dac:	tbnz	w9, #31, 15d4c <xre_compile_pattern@@Base+0x1300>
   15db0:	and	x9, x8, #0xff
   15db4:	add	w8, w8, #0x1
   15db8:	strb	w11, [x14, x9]
   15dbc:	b	15d50 <xre_compile_pattern@@Base+0x1304>
   15dc0:	lsr	x8, x0, #3
   15dc4:	ldrb	w9, [x27, x8]
   15dc8:	and	w10, w0, #0x7
   15dcc:	lsl	w10, w22, w10
   15dd0:	mov	w15, wzr
   15dd4:	orr	w9, w9, w10
   15dd8:	strb	w9, [x27, x8]
   15ddc:	b	1623c <xre_compile_pattern@@Base+0x17f0>
   15de0:	ldr	x0, [sp, #144]
   15de4:	str	x14, [sp, #56]
   15de8:	mov	w26, w15
   15dec:	bl	9240 <free@plt>
   15df0:	ldr	x14, [sp, #56]
   15df4:	mov	w15, w26
   15df8:	mov	w26, #0x7                   	// #7
   15dfc:	mov	w8, #0x1                   	// #1
   15e00:	b	16088 <xre_compile_pattern@@Base+0x163c>
   15e04:	mov	w8, wzr
   15e08:	mov	w0, #0xffffffff            	// #-1
   15e0c:	b	1622c <xre_compile_pattern@@Base+0x17e0>
   15e10:	ldr	x21, [sp, #136]
   15e14:	mov	w8, wzr
   15e18:	mov	w14, #0xffffffff            	// #-1
   15e1c:	mov	w22, #0x1                   	// #1
   15e20:	b	16084 <xre_compile_pattern@@Base+0x1638>
   15e24:	mov	w26, #0xe                   	// #14
   15e28:	mov	w8, #0x1                   	// #1
   15e2c:	ldr	x21, [sp, #136]
   15e30:	mov	w22, #0x1                   	// #1
   15e34:	b	16080 <xre_compile_pattern@@Base+0x1634>
   15e38:	and	x12, x10, #0xff
   15e3c:	cmp	w11, #0x3a
   15e40:	str	w15, [sp, #64]
   15e44:	str	x14, [sp, #56]
   15e48:	strb	wzr, [x13, x12]
   15e4c:	b.ne	16094 <xre_compile_pattern@@Base+0x1648>  // b.any
   15e50:	ldrb	w11, [x9]
   15e54:	cmp	w11, #0x5d
   15e58:	b.ne	16094 <xre_compile_pattern@@Base+0x1648>  // b.any
   15e5c:	ldur	w10, [x29, #-144]
   15e60:	ldurh	w11, [x29, #-140]
   15e64:	mov	w13, #0x6c61                	// #27745
   15e68:	movk	w13, #0x756e, lsl #16
   15e6c:	mov	w14, #0x6d                  	// #109
   15e70:	eor	w13, w10, w13
   15e74:	eor	w14, w11, w14
   15e78:	mov	w0, #0x6e63                	// #28259
   15e7c:	mov	w4, #0x7267                	// #29287
   15e80:	movk	w0, #0x7274, lsl #16
   15e84:	mov	w1, #0x6c                  	// #108
   15e88:	movk	w4, #0x7061, lsl #16
   15e8c:	orr	w13, w13, w14
   15e90:	mov	w14, #0x68                  	// #104
   15e94:	eor	w0, w10, w0
   15e98:	eor	w1, w11, w1
   15e9c:	eor	w4, w10, w4
   15ea0:	eor	w14, w11, w14
   15ea4:	mov	w2, #0x6964                	// #26980
   15ea8:	orr	w0, w0, w1
   15eac:	mov	w1, #0x7270                	// #29296
   15eb0:	orr	w14, w4, w14
   15eb4:	mov	w4, #0x7570                	// #30064
   15eb8:	mov	w17, #0x6c62                	// #27746
   15ebc:	movk	w2, #0x6967, lsl #16
   15ec0:	mov	w3, #0x74                  	// #116
   15ec4:	movk	w1, #0x6e69, lsl #16
   15ec8:	movk	w4, #0x636e, lsl #16
   15ecc:	movk	w17, #0x6e61, lsl #16
   15ed0:	mov	w18, #0x6b                  	// #107
   15ed4:	eor	w2, w10, w2
   15ed8:	eor	w3, w11, w3
   15edc:	eor	w1, w10, w1
   15ee0:	eor	w4, w10, w4
   15ee4:	mov	w15, #0x6c61                	// #27745
   15ee8:	eor	w17, w10, w17
   15eec:	eor	w18, w11, w18
   15ef0:	orr	w2, w2, w3
   15ef4:	orr	w1, w1, w3
   15ef8:	orr	w3, w4, w3
   15efc:	mov	w4, #0x7073                	// #28787
   15f00:	movk	w15, #0x6870, lsl #16
   15f04:	mov	w16, #0x61                  	// #97
   15f08:	orr	w17, w17, w18
   15f0c:	mov	w18, #0x72                  	// #114
   15f10:	movk	w4, #0x6361, lsl #16
   15f14:	mov	w5, #0x65                  	// #101
   15f18:	eor	w15, w10, w15
   15f1c:	eor	w16, w11, w16
   15f20:	eor	w18, w11, w18
   15f24:	eor	w4, w10, w4
   15f28:	eor	w11, w11, w5
   15f2c:	orr	w15, w15, w16
   15f30:	mov	w16, #0x6f6c                	// #28524
   15f34:	orr	w11, w4, w11
   15f38:	mov	w4, #0x7075                	// #28789
   15f3c:	movk	w16, #0x6577, lsl #16
   15f40:	movk	w4, #0x6570, lsl #16
   15f44:	eor	w16, w10, w16
   15f48:	eor	w4, w10, w4
   15f4c:	ldur	w12, [x29, #-141]
   15f50:	orr	w16, w16, w18
   15f54:	orr	w18, w4, w18
   15f58:	mov	w4, #0x6478                	// #25720
   15f5c:	movk	w4, #0x6769, lsl #16
   15f60:	eor	w10, w10, w4
   15f64:	mov	w4, #0x6967                	// #26983
   15f68:	movk	w4, #0x74, lsl #16
   15f6c:	eor	w12, w12, w4
   15f70:	cmp	w13, #0x0
   15f74:	orr	w10, w10, w12
   15f78:	cset	w12, ne  // ne = any
   15f7c:	cmp	w15, #0x0
   15f80:	str	w12, [sp, #48]
   15f84:	cset	w12, ne  // ne = any
   15f88:	cmp	w17, #0x0
   15f8c:	str	w12, [sp, #32]
   15f90:	cset	w12, ne  // ne = any
   15f94:	cmp	w0, #0x0
   15f98:	str	w12, [sp, #20]
   15f9c:	cset	w12, ne  // ne = any
   15fa0:	cmp	w2, #0x0
   15fa4:	str	w12, [sp, #16]
   15fa8:	cset	w12, ne  // ne = any
   15fac:	cmp	w14, #0x0
   15fb0:	str	w12, [sp, #44]
   15fb4:	cset	w12, ne  // ne = any
   15fb8:	cmp	w16, #0x0
   15fbc:	str	w12, [sp, #40]
   15fc0:	cset	w12, ne  // ne = any
   15fc4:	cmp	w1, #0x0
   15fc8:	str	w12, [sp, #28]
   15fcc:	cset	w12, ne  // ne = any
   15fd0:	cmp	w3, #0x0
   15fd4:	str	w12, [sp, #12]
   15fd8:	cset	w12, ne  // ne = any
   15fdc:	cmp	w11, #0x0
   15fe0:	cset	w11, ne  // ne = any
   15fe4:	cmp	w18, #0x0
   15fe8:	str	w11, [sp, #36]
   15fec:	cset	w11, ne  // ne = any
   15ff0:	cmp	w10, #0x0
   15ff4:	cset	w10, ne  // ne = any
   15ff8:	str	w12, [sp, #52]
   15ffc:	str	w11, [sp, #24]
   16000:	str	w10, [sp, #8]
   16004:	cbz	w17, 16294 <xre_compile_pattern@@Base+0x1848>
   16008:	ldr	w10, [sp, #16]
   1600c:	cbz	w10, 16294 <xre_compile_pattern@@Base+0x1848>
   16010:	ldr	w10, [sp, #40]
   16014:	cbz	w10, 16294 <xre_compile_pattern@@Base+0x1848>
   16018:	ldr	w10, [sp, #52]
   1601c:	cbz	w10, 16294 <xre_compile_pattern@@Base+0x1848>
   16020:	ldr	w10, [sp, #12]
   16024:	cbz	w10, 16294 <xre_compile_pattern@@Base+0x1848>
   16028:	ldr	w10, [sp, #36]
   1602c:	cbz	w10, 16294 <xre_compile_pattern@@Base+0x1848>
   16030:	ldr	w10, [sp, #8]
   16034:	cbz	w10, 16294 <xre_compile_pattern@@Base+0x1848>
   16038:	ldr	w10, [sp, #48]
   1603c:	cbz	w10, 16294 <xre_compile_pattern@@Base+0x1848>
   16040:	ldr	w10, [sp, #44]
   16044:	cbz	w10, 16294 <xre_compile_pattern@@Base+0x1848>
   16048:	ldr	w10, [sp, #28]
   1604c:	cbz	w10, 16294 <xre_compile_pattern@@Base+0x1848>
   16050:	ldr	w10, [sp, #32]
   16054:	cbz	w10, 16294 <xre_compile_pattern@@Base+0x1848>
   16058:	ldr	w10, [sp, #24]
   1605c:	cbz	w10, 16294 <xre_compile_pattern@@Base+0x1848>
   16060:	ldr	x0, [sp, #144]
   16064:	bl	9240 <free@plt>
   16068:	mov	w26, #0x4                   	// #4
   1606c:	b	164cc <xre_compile_pattern@@Base+0x1a80>
   16070:	ldr	x0, [sp, #144]
   16074:	bl	9240 <free@plt>
   16078:	mov	w26, #0x7                   	// #7
   1607c:	mov	w8, #0x1                   	// #1
   16080:	ldr	x14, [sp, #56]
   16084:	ldr	w15, [sp, #64]
   16088:	mov	w0, w14
   1608c:	cbz	w8, 1623c <xre_compile_pattern@@Base+0x17f0>
   16090:	b	17338 <xre_compile_pattern@@Base+0x28ec>
   16094:	mvn	w8, w10
   16098:	tst	w8, #0xff
   1609c:	b.eq	160b0 <xre_compile_pattern@@Base+0x1664>  // b.none
   160a0:	ldur	x9, [x29, #-16]
   160a4:	orr	x8, x8, #0xffffffffffffff00
   160a8:	add	x8, x8, x9
   160ac:	stur	x8, [x29, #-16]
   160b0:	ldrb	w8, [x23, #12]
   160b4:	ldrb	w9, [x23, #8]
   160b8:	ldr	x21, [sp, #136]
   160bc:	mov	w15, wzr
   160c0:	orr	w8, w8, #0x8
   160c4:	orr	w9, w9, #0x4
   160c8:	mov	w14, #0x3a                  	// #58
   160cc:	mov	w22, #0x1                   	// #1
   160d0:	strb	w8, [x23, #12]
   160d4:	strb	w9, [x23, #8]
   160d8:	mov	w8, wzr
   160dc:	b	16088 <xre_compile_pattern@@Base+0x163c>
   160e0:	and	x12, x8, #0xff
   160e4:	cmp	w11, #0x3d
   160e8:	strb	wzr, [x13, x12]
   160ec:	b.ne	16168 <xre_compile_pattern@@Base+0x171c>  // b.any
   160f0:	ldrb	w11, [x10]
   160f4:	cmp	w11, #0x5d
   160f8:	b.ne	16168 <xre_compile_pattern@@Base+0x171c>  // b.any
   160fc:	ldurb	w11, [x29, #-144]
   16100:	cbz	w11, 16168 <xre_compile_pattern@@Base+0x171c>
   16104:	and	w8, w8, #0xff
   16108:	cmp	w8, #0x1
   1610c:	b.ne	164b0 <xre_compile_pattern@@Base+0x1a64>  // b.any
   16110:	ldr	x8, [sp, #160]
   16114:	cmp	x10, x8
   16118:	mov	w8, #0x1                   	// #1
   1611c:	b.eq	164f8 <xre_compile_pattern@@Base+0x1aac>  // b.none
   16120:	add	x9, x9, #0x2
   16124:	lsr	x10, x11, #3
   16128:	stur	x9, [x29, #-16]
   1612c:	ldrb	w9, [x27, x10]
   16130:	and	w11, w11, #0x7
   16134:	ldr	x21, [sp, #136]
   16138:	ldr	x14, [sp, #56]
   1613c:	lsl	w8, w8, w11
   16140:	orr	w8, w9, w8
   16144:	strb	w8, [x27, x10]
   16148:	mov	w15, #0x1                   	// #1
   1614c:	mov	w8, wzr
   16150:	mov	w22, #0x1                   	// #1
   16154:	b	16088 <xre_compile_pattern@@Base+0x163c>
   16158:	ldr	x0, [sp, #144]
   1615c:	bl	9240 <free@plt>
   16160:	mov	w26, #0x7                   	// #7
   16164:	b	16224 <xre_compile_pattern@@Base+0x17d8>
   16168:	mvn	w8, w8
   1616c:	tst	w8, #0xff
   16170:	b.eq	16184 <xre_compile_pattern@@Base+0x1738>  // b.none
   16174:	ldur	x9, [x29, #-16]
   16178:	orr	x8, x8, #0xffffffffffffff00
   1617c:	add	x8, x8, x9
   16180:	stur	x8, [x29, #-16]
   16184:	ldrb	w9, [x23, #12]
   16188:	ldrb	w10, [x23, #8]
   1618c:	ldr	x21, [sp, #136]
   16190:	mov	w15, wzr
   16194:	orr	w9, w9, #0x8
   16198:	orr	w10, w10, #0x20
   1619c:	mov	w8, wzr
   161a0:	strb	w9, [x23, #12]
   161a4:	strb	w10, [x23, #8]
   161a8:	mov	w14, #0x3d                  	// #61
   161ac:	mov	w22, #0x1                   	// #1
   161b0:	b	16088 <xre_compile_pattern@@Base+0x163c>
   161b4:	and	x12, x8, #0xff
   161b8:	cmp	w11, #0x2e
   161bc:	strb	wzr, [x14, x12]
   161c0:	b.ne	16250 <xre_compile_pattern@@Base+0x1804>  // b.any
   161c4:	ldrb	w11, [x10]
   161c8:	cmp	w11, #0x5d
   161cc:	b.ne	16250 <xre_compile_pattern@@Base+0x1804>  // b.any
   161d0:	ldurb	w11, [x29, #-144]
   161d4:	cbz	w11, 16250 <xre_compile_pattern@@Base+0x1804>
   161d8:	and	w8, w8, #0xff
   161dc:	cmp	w8, #0x1
   161e0:	b.ne	164e8 <xre_compile_pattern@@Base+0x1a9c>  // b.any
   161e4:	ldr	x8, [sp, #160]
   161e8:	cmp	x10, x8
   161ec:	b.eq	16220 <xre_compile_pattern@@Base+0x17d4>  // b.none
   161f0:	add	x8, x9, #0x2
   161f4:	stur	x8, [x29, #-16]
   161f8:	lsr	x8, x11, #3
   161fc:	ldrb	w9, [x27, x8]
   16200:	and	w10, w11, #0x7
   16204:	lsl	w10, w13, w10
   16208:	str	wzr, [sp, #64]
   1620c:	orr	w9, w9, w10
   16210:	strb	w9, [x27, x8]
   16214:	ldurb	w21, [x29, #-144]
   16218:	mov	w8, wzr
   1621c:	b	16228 <xre_compile_pattern@@Base+0x17dc>
   16220:	mov	w26, #0xe                   	// #14
   16224:	mov	w8, #0x1                   	// #1
   16228:	mov	w0, w21
   1622c:	ldr	x21, [sp, #136]
   16230:	ldr	w15, [sp, #64]
   16234:	mov	w22, #0x1                   	// #1
   16238:	cbnz	w8, 17338 <xre_compile_pattern@@Base+0x28ec>
   1623c:	ldur	x8, [x29, #-16]
   16240:	ldr	x9, [sp, #160]
   16244:	cmp	x8, x9
   16248:	b.ne	159a4 <xre_compile_pattern@@Base+0xf58>  // b.any
   1624c:	b	150b0 <xre_compile_pattern@@Base+0x664>
   16250:	mvn	w8, w8
   16254:	tst	w8, #0xff
   16258:	b.eq	1626c <xre_compile_pattern@@Base+0x1820>  // b.none
   1625c:	ldur	x9, [x29, #-16]
   16260:	orr	x8, x8, #0xffffffffffffff00
   16264:	add	x8, x8, x9
   16268:	stur	x8, [x29, #-16]
   1626c:	ldrb	w9, [x23, #12]
   16270:	ldrb	w10, [x23, #6]
   16274:	mov	w21, #0x2e                  	// #46
   16278:	str	wzr, [sp, #64]
   1627c:	orr	w9, w9, #0x8
   16280:	orr	w10, w10, #0x40
   16284:	mov	w8, wzr
   16288:	strb	w9, [x23, #12]
   1628c:	strb	w10, [x23, #6]
   16290:	b	16228 <xre_compile_pattern@@Base+0x17dc>
   16294:	ldr	x10, [sp, #160]
   16298:	cmp	x9, x10
   1629c:	b.eq	164a8 <xre_compile_pattern@@Base+0x1a5c>  // b.none
   162a0:	ldr	x9, [sp, #160]
   162a4:	add	x8, x8, #0x2
   162a8:	stur	x8, [x29, #-16]
   162ac:	cmp	x8, x9
   162b0:	b.eq	164c0 <xre_compile_pattern@@Base+0x1a74>  // b.none
   162b4:	ldp	w8, w9, [sp, #24]
   162b8:	ldur	x10, [x29, #-152]
   162bc:	mov	x22, xzr
   162c0:	cmp	w8, #0x0
   162c4:	cset	w8, eq  // eq = none
   162c8:	cmp	w9, #0x0
   162cc:	cset	w9, eq  // eq = none
   162d0:	cmp	x10, #0x0
   162d4:	cset	w10, ne  // ne = any
   162d8:	orr	w8, w9, w8
   162dc:	and	w8, w10, w8
   162e0:	str	w8, [sp, #64]
   162e4:	b	162f4 <xre_compile_pattern@@Base+0x18a8>
   162e8:	add	x22, x22, #0x1
   162ec:	cmp	x22, #0x100
   162f0:	b.eq	16498 <xre_compile_pattern@@Base+0x1a4c>  // b.none
   162f4:	ldr	w8, [sp, #48]
   162f8:	ubfx	x21, x22, #3, #5
   162fc:	cbnz	w8, 16310 <xre_compile_pattern@@Base+0x18c4>
   16300:	bl	95d0 <__ctype_b_loc@plt>
   16304:	ldr	x8, [x0]
   16308:	ldrh	w8, [x8, x22, lsl #1]
   1630c:	tbnz	w8, #3, 16358 <xre_compile_pattern@@Base+0x190c>
   16310:	ldr	w8, [sp, #32]
   16314:	cbnz	w8, 16328 <xre_compile_pattern@@Base+0x18dc>
   16318:	bl	95d0 <__ctype_b_loc@plt>
   1631c:	ldr	x8, [x0]
   16320:	ldrh	w8, [x8, x22, lsl #1]
   16324:	tbnz	w8, #10, 16358 <xre_compile_pattern@@Base+0x190c>
   16328:	ldr	w8, [sp, #20]
   1632c:	cbnz	w8, 16340 <xre_compile_pattern@@Base+0x18f4>
   16330:	bl	95d0 <__ctype_b_loc@plt>
   16334:	ldr	x8, [x0]
   16338:	ldrh	w8, [x8, x22, lsl #1]
   1633c:	tbnz	w8, #0, 16358 <xre_compile_pattern@@Base+0x190c>
   16340:	ldr	w8, [sp, #16]
   16344:	cbnz	w8, 16370 <xre_compile_pattern@@Base+0x1924>
   16348:	bl	95d0 <__ctype_b_loc@plt>
   1634c:	ldr	x8, [x0]
   16350:	ldrh	w8, [x8, x22, lsl #1]
   16354:	tbz	w8, #1, 16370 <xre_compile_pattern@@Base+0x1924>
   16358:	ldrb	w8, [x27, x21]
   1635c:	and	w9, w22, #0x7
   16360:	mov	w10, #0x1                   	// #1
   16364:	lsl	w9, w10, w9
   16368:	orr	w8, w8, w9
   1636c:	strb	w8, [x27, x21]
   16370:	ldr	w8, [sp, #44]
   16374:	cbnz	w8, 16388 <xre_compile_pattern@@Base+0x193c>
   16378:	bl	95d0 <__ctype_b_loc@plt>
   1637c:	ldr	x8, [x0]
   16380:	ldrh	w8, [x8, x22, lsl #1]
   16384:	tbnz	w8, #11, 163d0 <xre_compile_pattern@@Base+0x1984>
   16388:	ldr	w8, [sp, #40]
   1638c:	cbnz	w8, 163a0 <xre_compile_pattern@@Base+0x1954>
   16390:	bl	95d0 <__ctype_b_loc@plt>
   16394:	ldr	x8, [x0]
   16398:	ldrsh	w8, [x8, x22, lsl #1]
   1639c:	tbnz	w8, #31, 163d0 <xre_compile_pattern@@Base+0x1984>
   163a0:	ldr	w8, [sp, #28]
   163a4:	cbnz	w8, 163b8 <xre_compile_pattern@@Base+0x196c>
   163a8:	bl	95d0 <__ctype_b_loc@plt>
   163ac:	ldr	x8, [x0]
   163b0:	ldrh	w8, [x8, x22, lsl #1]
   163b4:	tbnz	w8, #9, 163d0 <xre_compile_pattern@@Base+0x1984>
   163b8:	ldr	w8, [sp, #12]
   163bc:	cbnz	w8, 163e8 <xre_compile_pattern@@Base+0x199c>
   163c0:	bl	95d0 <__ctype_b_loc@plt>
   163c4:	ldr	x8, [x0]
   163c8:	ldrh	w8, [x8, x22, lsl #1]
   163cc:	tbz	w8, #14, 163e8 <xre_compile_pattern@@Base+0x199c>
   163d0:	ldrb	w8, [x27, x21]
   163d4:	and	w9, w22, #0x7
   163d8:	mov	w10, #0x1                   	// #1
   163dc:	lsl	w9, w10, w9
   163e0:	orr	w8, w8, w9
   163e4:	strb	w8, [x27, x21]
   163e8:	ldr	w8, [sp, #52]
   163ec:	cbnz	w8, 16400 <xre_compile_pattern@@Base+0x19b4>
   163f0:	bl	95d0 <__ctype_b_loc@plt>
   163f4:	ldr	x8, [x0]
   163f8:	ldrh	w8, [x8, x22, lsl #1]
   163fc:	tbnz	w8, #2, 16448 <xre_compile_pattern@@Base+0x19fc>
   16400:	ldr	w8, [sp, #36]
   16404:	cbnz	w8, 16418 <xre_compile_pattern@@Base+0x19cc>
   16408:	bl	95d0 <__ctype_b_loc@plt>
   1640c:	ldr	x8, [x0]
   16410:	ldrh	w8, [x8, x22, lsl #1]
   16414:	tbnz	w8, #13, 16448 <xre_compile_pattern@@Base+0x19fc>
   16418:	ldr	w8, [sp, #24]
   1641c:	cbnz	w8, 16430 <xre_compile_pattern@@Base+0x19e4>
   16420:	bl	95d0 <__ctype_b_loc@plt>
   16424:	ldr	x8, [x0]
   16428:	ldrh	w8, [x8, x22, lsl #1]
   1642c:	tbnz	w8, #8, 16448 <xre_compile_pattern@@Base+0x19fc>
   16430:	ldr	w8, [sp, #8]
   16434:	cbnz	w8, 16460 <xre_compile_pattern@@Base+0x1a14>
   16438:	bl	95d0 <__ctype_b_loc@plt>
   1643c:	ldr	x8, [x0]
   16440:	ldrh	w8, [x8, x22, lsl #1]
   16444:	tbz	w8, #12, 16460 <xre_compile_pattern@@Base+0x1a14>
   16448:	ldrb	w8, [x27, x21]
   1644c:	and	w9, w22, #0x7
   16450:	mov	w10, #0x1                   	// #1
   16454:	lsl	w9, w10, w9
   16458:	orr	w8, w8, w9
   1645c:	strb	w8, [x27, x21]
   16460:	ldr	w8, [sp, #64]
   16464:	cbz	w8, 162e8 <xre_compile_pattern@@Base+0x189c>
   16468:	bl	95d0 <__ctype_b_loc@plt>
   1646c:	ldr	x8, [x0]
   16470:	ldrh	w8, [x8, x22, lsl #1]
   16474:	tst	w8, #0x300
   16478:	b.eq	162e8 <xre_compile_pattern@@Base+0x189c>  // b.none
   1647c:	ldrb	w8, [x27, x21]
   16480:	and	w9, w22, #0x7
   16484:	mov	w10, #0x1                   	// #1
   16488:	lsl	w9, w10, w9
   1648c:	orr	w8, w8, w9
   16490:	strb	w8, [x27, x21]
   16494:	b	162e8 <xre_compile_pattern@@Base+0x189c>
   16498:	mov	w8, wzr
   1649c:	mov	w9, #0x1                   	// #1
   164a0:	str	w9, [sp, #64]
   164a4:	b	164d0 <xre_compile_pattern@@Base+0x1a84>
   164a8:	mov	w26, #0xe                   	// #14
   164ac:	b	164cc <xre_compile_pattern@@Base+0x1a80>
   164b0:	ldr	x0, [sp, #144]
   164b4:	bl	9240 <free@plt>
   164b8:	mov	w26, #0x3                   	// #3
   164bc:	b	15e28 <xre_compile_pattern@@Base+0x13dc>
   164c0:	ldr	x0, [sp, #144]
   164c4:	bl	9240 <free@plt>
   164c8:	mov	w26, #0x7                   	// #7
   164cc:	mov	w8, #0x1                   	// #1
   164d0:	ldr	x21, [sp, #136]
   164d4:	ldr	x14, [sp, #56]
   164d8:	ldr	w15, [sp, #64]
   164dc:	mov	w22, #0x1                   	// #1
   164e0:	cbnz	w8, 16088 <xre_compile_pattern@@Base+0x163c>
   164e4:	b	160d8 <xre_compile_pattern@@Base+0x168c>
   164e8:	ldr	x0, [sp, #144]
   164ec:	bl	9240 <free@plt>
   164f0:	mov	w26, #0x3                   	// #3
   164f4:	b	16224 <xre_compile_pattern@@Base+0x17d8>
   164f8:	mov	w26, #0xe                   	// #14
   164fc:	b	15e2c <xre_compile_pattern@@Base+0x13e0>
   16500:	ldr	x22, [sp, #136]
   16504:	tbnz	w22, #1, 14bf4 <xre_compile_pattern@@Base+0x1a8>
   16508:	b	16f50 <xre_compile_pattern@@Base+0x2504>
   1650c:	mov	w8, #0x1                   	// #1
   16510:	mov	x27, x23
   16514:	cbz	w8, 1715c <xre_compile_pattern@@Base+0x2710>
   16518:	b	17460 <xre_compile_pattern@@Base+0x2a14>
   1651c:	mov	w9, #0xffffffff            	// #-1
   16520:	cmp	w9, #0x0
   16524:	mov	w10, #0x7fff                	// #32767
   16528:	csel	w21, w10, w9, lt  // lt = tstop
   1652c:	tbnz	w22, #31, 165a0 <xre_compile_pattern@@Base+0x1b54>
   16530:	cmp	w22, w21
   16534:	b.gt	165a0 <xre_compile_pattern@@Base+0x1b54>
   16538:	ldr	x9, [sp, #136]
   1653c:	tbnz	w9, #12, 16570 <xre_compile_pattern@@Base+0x1b24>
   16540:	cmp	w23, #0x5c
   16544:	b.ne	165a0 <xre_compile_pattern@@Base+0x1b54>  // b.any
   16548:	ldur	x9, [x29, #-16]
   1654c:	ldr	x10, [sp, #160]
   16550:	cmp	x9, x10
   16554:	b.eq	165a0 <xre_compile_pattern@@Base+0x1b54>  // b.none
   16558:	add	x10, x9, #0x1
   1655c:	stur	x10, [x29, #-16]
   16560:	ldrb	w23, [x9]
   16564:	ldur	x9, [x29, #-152]
   16568:	cbz	x9, 16570 <xre_compile_pattern@@Base+0x1b24>
   1656c:	ldrb	w23, [x9, x23]
   16570:	cmp	w23, #0x7d
   16574:	b.ne	165a0 <xre_compile_pattern@@Base+0x1b54>  // b.any
   16578:	cbz	x20, 16dd4 <xre_compile_pattern@@Base+0x2388>
   1657c:	str	x20, [sp, #72]
   16580:	cmp	w21, #0x8, lsl #12
   16584:	b.lt	16df8 <xre_compile_pattern@@Base+0x23ac>  // b.tstop
   16588:	ldr	x0, [sp, #144]
   1658c:	bl	9240 <free@plt>
   16590:	ldr	x20, [sp, #72]
   16594:	mov	w26, #0xa                   	// #10
   16598:	mov	w8, #0x1                   	// #1
   1659c:	b	16f34 <xre_compile_pattern@@Base+0x24e8>
   165a0:	ldr	x9, [sp, #136]
   165a4:	tbnz	w9, #21, 16f28 <xre_compile_pattern@@Base+0x24dc>
   165a8:	ldr	x0, [sp, #144]
   165ac:	bl	9240 <free@plt>
   165b0:	ldur	x8, [x29, #-16]
   165b4:	ldr	x9, [sp, #160]
   165b8:	cmp	x8, x9
   165bc:	mov	w8, #0x9                   	// #9
   165c0:	cinc	w26, w8, ne  // ne = any
   165c4:	mov	w8, #0x1                   	// #1
   165c8:	b	16f34 <xre_compile_pattern@@Base+0x24e8>
   165cc:	mov	w9, #0x7                   	// #7
   165d0:	strb	w9, [x27]
   165d4:	add	x9, x27, #0x3
   165d8:	mov	w8, wzr
   165dc:	strb	w23, [x27, #1]
   165e0:	strb	w24, [x27, #2]
   165e4:	mov	x27, x9
   165e8:	ldr	x9, [sp, #152]
   165ec:	cbnz	w8, 165f4 <xre_compile_pattern@@Base+0x1ba8>
   165f0:	mov	w8, wzr
   165f4:	cbnz	w8, 17460 <xre_compile_pattern@@Base+0x2a14>
   165f8:	bfi	x9, x21, #32, #32
   165fc:	mov	x24, xzr
   16600:	str	x9, [sp, #152]
   16604:	b	1715c <xre_compile_pattern@@Base+0x2710>
   16608:	mov	w9, #0xa                   	// #10
   1660c:	tbnz	w11, #6, 16628 <xre_compile_pattern@@Base+0x1bdc>
   16610:	cmp	w9, w8
   16614:	b.ne	16628 <xre_compile_pattern@@Base+0x1bdc>  // b.any
   16618:	mov	w23, #0x1                   	// #1
   1661c:	mov	w0, #0xd                   	// #13
   16620:	mov	x8, x20
   16624:	b	16634 <xre_compile_pattern@@Base+0x1be8>
   16628:	mov	w23, wzr
   1662c:	sub	x8, x20, #0x3
   16630:	mov	w0, #0x12                  	// #18
   16634:	sub	w8, w8, w27
   16638:	sub	w2, w8, #0x3
   1663c:	mov	x1, x27
   16640:	bl	17e04 <xregfree@@Base+0x518>
   16644:	add	x27, x27, #0x3
   16648:	b	16658 <xre_compile_pattern@@Base+0x1c0c>
   1664c:	mov	w26, #0xf                   	// #15
   16650:	mov	w8, #0x1                   	// #1
   16654:	cbnz	w8, 1672c <xre_compile_pattern@@Base+0x1ce0>
   16658:	ldp	x22, x8, [x19]
   1665c:	sub	x9, x27, x22
   16660:	add	x9, x9, #0x3
   16664:	cmp	x9, x8
   16668:	b.ls	166f8 <xre_compile_pattern@@Base+0x1cac>  // b.plast
   1666c:	cmp	x8, #0x10, lsl #12
   16670:	b.eq	1664c <xre_compile_pattern@@Base+0x1c00>  // b.none
   16674:	lsl	x8, x8, #1
   16678:	cmp	x8, #0x10, lsl #12
   1667c:	mov	w9, #0x10000               	// #65536
   16680:	csel	x1, x8, x9, cc  // cc = lo, ul, last
   16684:	mov	x0, x22
   16688:	str	x1, [x19, #8]
   1668c:	bl	92b0 <realloc@plt>
   16690:	str	x0, [x19]
   16694:	cbz	x0, 166dc <xre_compile_pattern@@Base+0x1c90>
   16698:	cmp	x22, x0
   1669c:	b.eq	166ec <xre_compile_pattern@@Base+0x1ca0>  // b.none
   166a0:	sub	x9, x0, x22
   166a4:	cmp	x25, #0x0
   166a8:	add	x10, x25, x9
   166ac:	add	x11, x20, x9
   166b0:	csel	x25, xzr, x10, eq  // eq = none
   166b4:	cmp	x20, #0x0
   166b8:	add	x27, x27, x9
   166bc:	add	x28, x28, x9
   166c0:	add	x9, x24, x9
   166c4:	csel	x20, xzr, x11, eq  // eq = none
   166c8:	cmp	x24, #0x0
   166cc:	mov	w8, wzr
   166d0:	csel	x24, xzr, x9, eq  // eq = none
   166d4:	cbz	w8, 16658 <xre_compile_pattern@@Base+0x1c0c>
   166d8:	b	1672c <xre_compile_pattern@@Base+0x1ce0>
   166dc:	mov	w26, #0xc                   	// #12
   166e0:	mov	w8, #0x1                   	// #1
   166e4:	cbz	w8, 16658 <xre_compile_pattern@@Base+0x1c0c>
   166e8:	b	1672c <xre_compile_pattern@@Base+0x1ce0>
   166ec:	mov	w8, wzr
   166f0:	cbz	wzr, 16658 <xre_compile_pattern@@Base+0x1c0c>
   166f4:	b	1672c <xre_compile_pattern@@Base+0x1ce0>
   166f8:	cmp	w23, #0x0
   166fc:	add	x22, x27, #0x3
   16700:	mov	w8, #0xf                   	// #15
   16704:	cinc	w0, w8, ne  // ne = any
   16708:	sub	w8, w22, w20
   1670c:	sub	w2, w8, #0x3
   16710:	mov	x1, x20
   16714:	mov	x3, x27
   16718:	bl	17e18 <xregfree@@Base+0x52c>
   1671c:	cbz	w21, 16748 <xre_compile_pattern@@Base+0x1cfc>
   16720:	mov	w8, wzr
   16724:	mov	x24, xzr
   16728:	mov	x27, x22
   1672c:	cbz	w8, 1715c <xre_compile_pattern@@Base+0x2710>
   16730:	cmp	w8, #0x6
   16734:	b.eq	1715c <xre_compile_pattern@@Base+0x2710>  // b.none
   16738:	b	17460 <xre_compile_pattern@@Base+0x2a14>
   1673c:	mov	w26, #0xf                   	// #15
   16740:	mov	w8, #0x1                   	// #1
   16744:	cbnz	w8, 16724 <xre_compile_pattern@@Base+0x1cd8>
   16748:	ldp	x27, x8, [x19]
   1674c:	sub	x9, x22, x27
   16750:	add	x9, x9, #0x3
   16754:	cmp	x9, x8
   16758:	b.ls	167cc <xre_compile_pattern@@Base+0x1d80>  // b.plast
   1675c:	cmp	x8, #0x10, lsl #12
   16760:	b.eq	1673c <xre_compile_pattern@@Base+0x1cf0>  // b.none
   16764:	lsl	x8, x8, #1
   16768:	cmp	x8, #0x10, lsl #12
   1676c:	mov	w9, #0x10000               	// #65536
   16770:	csel	x1, x8, x9, cc  // cc = lo, ul, last
   16774:	mov	x0, x27
   16778:	str	x1, [x19, #8]
   1677c:	bl	92b0 <realloc@plt>
   16780:	str	x0, [x19]
   16784:	cbz	x0, 167bc <xre_compile_pattern@@Base+0x1d70>
   16788:	cmp	x27, x0
   1678c:	b.eq	167c4 <xre_compile_pattern@@Base+0x1d78>  // b.none
   16790:	sub	x9, x0, x27
   16794:	cmp	x25, #0x0
   16798:	add	x10, x25, x9
   1679c:	add	x22, x22, x9
   167a0:	add	x28, x28, x9
   167a4:	add	x9, x20, x9
   167a8:	csel	x25, xzr, x10, eq  // eq = none
   167ac:	cmp	x20, #0x0
   167b0:	mov	w8, wzr
   167b4:	csel	x20, xzr, x9, eq  // eq = none
   167b8:	b	16744 <xre_compile_pattern@@Base+0x1cf8>
   167bc:	mov	w26, #0xc                   	// #12
   167c0:	b	16740 <xre_compile_pattern@@Base+0x1cf4>
   167c4:	mov	w8, wzr
   167c8:	b	16744 <xre_compile_pattern@@Base+0x1cf8>
   167cc:	mov	w0, #0x13                  	// #19
   167d0:	mov	w2, #0x3                   	// #3
   167d4:	mov	x1, x20
   167d8:	mov	x3, x22
   167dc:	bl	17e18 <xregfree@@Base+0x52c>
   167e0:	mov	w8, wzr
   167e4:	mov	x24, xzr
   167e8:	add	x27, x22, #0x3
   167ec:	cbnz	w8, 16730 <xre_compile_pattern@@Base+0x1ce4>
   167f0:	b	1715c <xre_compile_pattern@@Base+0x2710>
   167f4:	ldr	x22, [sp, #136]
   167f8:	tbz	w22, #19, 1680c <xre_compile_pattern@@Base+0x1dc0>
   167fc:	b	16f60 <xre_compile_pattern@@Base+0x2514>
   16800:	mov	w26, #0xf                   	// #15
   16804:	mov	w8, wzr
   16808:	tbz	wzr, #0, 17460 <xre_compile_pattern@@Base+0x2a14>
   1680c:	ldp	x22, x8, [x19]
   16810:	sub	x9, x27, x22
   16814:	add	x9, x9, #0x1
   16818:	cmp	x9, x8
   1681c:	b.ls	16ec4 <xre_compile_pattern@@Base+0x2478>  // b.plast
   16820:	cmp	x8, #0x10, lsl #12
   16824:	b.eq	16800 <xre_compile_pattern@@Base+0x1db4>  // b.none
   16828:	lsl	x8, x8, #1
   1682c:	cmp	x8, #0x10, lsl #12
   16830:	mov	w9, #0x10000               	// #65536
   16834:	csel	x1, x8, x9, cc  // cc = lo, ul, last
   16838:	mov	x0, x22
   1683c:	str	x1, [x19, #8]
   16840:	bl	92b0 <realloc@plt>
   16844:	str	x0, [x19]
   16848:	cbz	x0, 16890 <xre_compile_pattern@@Base+0x1e44>
   1684c:	cmp	x22, x0
   16850:	b.eq	16884 <xre_compile_pattern@@Base+0x1e38>  // b.none
   16854:	sub	x8, x0, x22
   16858:	cmp	x25, #0x0
   1685c:	add	x9, x25, x8
   16860:	add	x10, x20, x8
   16864:	csel	x25, xzr, x9, eq  // eq = none
   16868:	cmp	x20, #0x0
   1686c:	add	x27, x27, x8
   16870:	add	x28, x28, x8
   16874:	add	x8, x24, x8
   16878:	csel	x20, xzr, x10, eq  // eq = none
   1687c:	cmp	x24, #0x0
   16880:	csel	x24, xzr, x8, eq  // eq = none
   16884:	mov	w8, #0x1                   	// #1
   16888:	tbnz	w8, #0, 1680c <xre_compile_pattern@@Base+0x1dc0>
   1688c:	b	17460 <xre_compile_pattern@@Base+0x2a14>
   16890:	mov	w26, #0xc                   	// #12
   16894:	mov	w8, wzr
   16898:	tbnz	wzr, #0, 1680c <xre_compile_pattern@@Base+0x1dc0>
   1689c:	b	17460 <xre_compile_pattern@@Base+0x2a14>
   168a0:	ldr	x8, [sp, #136]
   168a4:	tbz	w8, #13, 14e40 <xre_compile_pattern@@Base+0x3f4>
   168a8:	b	16f50 <xre_compile_pattern@@Base+0x2504>
   168ac:	ldr	x22, [sp, #136]
   168b0:	tbnz	w22, #13, 16f50 <xre_compile_pattern@@Base+0x2504>
   168b4:	ldr	x8, [sp, #152]
   168b8:	lsr	x8, x8, #32
   168bc:	cbnz	x8, 14f54 <xre_compile_pattern@@Base+0x508>
   168c0:	tbnz	w22, #17, 16f50 <xre_compile_pattern@@Base+0x2504>
   168c4:	b	174b4 <xre_compile_pattern@@Base+0x2a68>
   168c8:	ldr	x22, [sp, #136]
   168cc:	tbz	w22, #19, 168e0 <xre_compile_pattern@@Base+0x1e94>
   168d0:	b	16f60 <xre_compile_pattern@@Base+0x2514>
   168d4:	mov	w26, #0xf                   	// #15
   168d8:	mov	w8, wzr
   168dc:	tbz	wzr, #0, 17460 <xre_compile_pattern@@Base+0x2a14>
   168e0:	ldp	x22, x8, [x19]
   168e4:	sub	x9, x27, x22
   168e8:	add	x9, x9, #0x1
   168ec:	cmp	x9, x8
   168f0:	b.ls	16ed0 <xre_compile_pattern@@Base+0x2484>  // b.plast
   168f4:	cmp	x8, #0x10, lsl #12
   168f8:	b.eq	168d4 <xre_compile_pattern@@Base+0x1e88>  // b.none
   168fc:	lsl	x8, x8, #1
   16900:	cmp	x8, #0x10, lsl #12
   16904:	mov	w9, #0x10000               	// #65536
   16908:	csel	x1, x8, x9, cc  // cc = lo, ul, last
   1690c:	mov	x0, x22
   16910:	str	x1, [x19, #8]
   16914:	bl	92b0 <realloc@plt>
   16918:	str	x0, [x19]
   1691c:	cbz	x0, 16964 <xre_compile_pattern@@Base+0x1f18>
   16920:	cmp	x22, x0
   16924:	b.eq	16958 <xre_compile_pattern@@Base+0x1f0c>  // b.none
   16928:	sub	x8, x0, x22
   1692c:	cmp	x25, #0x0
   16930:	add	x9, x25, x8
   16934:	add	x10, x20, x8
   16938:	csel	x25, xzr, x9, eq  // eq = none
   1693c:	cmp	x20, #0x0
   16940:	add	x27, x27, x8
   16944:	add	x28, x28, x8
   16948:	add	x8, x24, x8
   1694c:	csel	x20, xzr, x10, eq  // eq = none
   16950:	cmp	x24, #0x0
   16954:	csel	x24, xzr, x8, eq  // eq = none
   16958:	mov	w8, #0x1                   	// #1
   1695c:	tbnz	w8, #0, 168e0 <xre_compile_pattern@@Base+0x1e94>
   16960:	b	17460 <xre_compile_pattern@@Base+0x2a14>
   16964:	mov	w26, #0xc                   	// #12
   16968:	mov	w8, wzr
   1696c:	tbnz	wzr, #0, 168e0 <xre_compile_pattern@@Base+0x1e94>
   16970:	b	17460 <xre_compile_pattern@@Base+0x2a14>
   16974:	ldr	x22, [sp, #136]
   16978:	tbz	w22, #19, 1698c <xre_compile_pattern@@Base+0x1f40>
   1697c:	b	16f60 <xre_compile_pattern@@Base+0x2514>
   16980:	mov	w26, #0xf                   	// #15
   16984:	mov	w8, wzr
   16988:	tbz	wzr, #0, 17460 <xre_compile_pattern@@Base+0x2a14>
   1698c:	ldp	x22, x8, [x19]
   16990:	sub	x9, x27, x22
   16994:	add	x9, x9, #0x1
   16998:	cmp	x9, x8
   1699c:	b.ls	16edc <xre_compile_pattern@@Base+0x2490>  // b.plast
   169a0:	cmp	x8, #0x10, lsl #12
   169a4:	b.eq	16980 <xre_compile_pattern@@Base+0x1f34>  // b.none
   169a8:	lsl	x8, x8, #1
   169ac:	cmp	x8, #0x10, lsl #12
   169b0:	mov	w9, #0x10000               	// #65536
   169b4:	csel	x1, x8, x9, cc  // cc = lo, ul, last
   169b8:	mov	x0, x22
   169bc:	str	x1, [x19, #8]
   169c0:	bl	92b0 <realloc@plt>
   169c4:	str	x0, [x19]
   169c8:	cbz	x0, 16a10 <xre_compile_pattern@@Base+0x1fc4>
   169cc:	cmp	x22, x0
   169d0:	b.eq	16a04 <xre_compile_pattern@@Base+0x1fb8>  // b.none
   169d4:	sub	x8, x0, x22
   169d8:	cmp	x25, #0x0
   169dc:	add	x9, x25, x8
   169e0:	add	x10, x20, x8
   169e4:	csel	x25, xzr, x9, eq  // eq = none
   169e8:	cmp	x20, #0x0
   169ec:	add	x27, x27, x8
   169f0:	add	x28, x28, x8
   169f4:	add	x8, x24, x8
   169f8:	csel	x20, xzr, x10, eq  // eq = none
   169fc:	cmp	x24, #0x0
   16a00:	csel	x24, xzr, x8, eq  // eq = none
   16a04:	mov	w8, #0x1                   	// #1
   16a08:	tbnz	w8, #0, 1698c <xre_compile_pattern@@Base+0x1f40>
   16a0c:	b	17460 <xre_compile_pattern@@Base+0x2a14>
   16a10:	mov	w26, #0xc                   	// #12
   16a14:	mov	w8, wzr
   16a18:	tbnz	wzr, #0, 1698c <xre_compile_pattern@@Base+0x1f40>
   16a1c:	b	17460 <xre_compile_pattern@@Base+0x2a14>
   16a20:	ldr	x22, [sp, #136]
   16a24:	tbz	w22, #19, 16a38 <xre_compile_pattern@@Base+0x1fec>
   16a28:	b	16f60 <xre_compile_pattern@@Base+0x2514>
   16a2c:	mov	w26, #0xf                   	// #15
   16a30:	mov	w8, wzr
   16a34:	tbz	wzr, #0, 17460 <xre_compile_pattern@@Base+0x2a14>
   16a38:	ldp	x22, x8, [x19]
   16a3c:	sub	x9, x27, x22
   16a40:	add	x9, x9, #0x1
   16a44:	cmp	x9, x8
   16a48:	b.ls	16ee8 <xre_compile_pattern@@Base+0x249c>  // b.plast
   16a4c:	cmp	x8, #0x10, lsl #12
   16a50:	b.eq	16a2c <xre_compile_pattern@@Base+0x1fe0>  // b.none
   16a54:	lsl	x8, x8, #1
   16a58:	cmp	x8, #0x10, lsl #12
   16a5c:	mov	w9, #0x10000               	// #65536
   16a60:	csel	x1, x8, x9, cc  // cc = lo, ul, last
   16a64:	mov	x0, x22
   16a68:	str	x1, [x19, #8]
   16a6c:	bl	92b0 <realloc@plt>
   16a70:	str	x0, [x19]
   16a74:	cbz	x0, 16abc <xre_compile_pattern@@Base+0x2070>
   16a78:	cmp	x22, x0
   16a7c:	b.eq	16ab0 <xre_compile_pattern@@Base+0x2064>  // b.none
   16a80:	sub	x8, x0, x22
   16a84:	cmp	x25, #0x0
   16a88:	add	x9, x25, x8
   16a8c:	add	x10, x20, x8
   16a90:	csel	x25, xzr, x9, eq  // eq = none
   16a94:	cmp	x20, #0x0
   16a98:	add	x27, x27, x8
   16a9c:	add	x28, x28, x8
   16aa0:	add	x8, x24, x8
   16aa4:	csel	x20, xzr, x10, eq  // eq = none
   16aa8:	cmp	x24, #0x0
   16aac:	csel	x24, xzr, x8, eq  // eq = none
   16ab0:	mov	w8, #0x1                   	// #1
   16ab4:	tbnz	w8, #0, 16a38 <xre_compile_pattern@@Base+0x1fec>
   16ab8:	b	17460 <xre_compile_pattern@@Base+0x2a14>
   16abc:	mov	w26, #0xc                   	// #12
   16ac0:	mov	w8, wzr
   16ac4:	tbnz	wzr, #0, 16a38 <xre_compile_pattern@@Base+0x1fec>
   16ac8:	b	17460 <xre_compile_pattern@@Base+0x2a14>
   16acc:	ldr	x22, [sp, #136]
   16ad0:	tbnz	w22, #19, 16f60 <xre_compile_pattern@@Base+0x2514>
   16ad4:	mov	x21, x27
   16ad8:	b	16ae8 <xre_compile_pattern@@Base+0x209c>
   16adc:	mov	w26, #0xf                   	// #15
   16ae0:	mov	w8, wzr
   16ae4:	tbz	wzr, #0, 17460 <xre_compile_pattern@@Base+0x2a14>
   16ae8:	ldp	x20, x8, [x19]
   16aec:	sub	x9, x21, x20
   16af0:	add	x9, x9, #0x1
   16af4:	cmp	x9, x8
   16af8:	b.ls	16ef4 <xre_compile_pattern@@Base+0x24a8>  // b.plast
   16afc:	cmp	x8, #0x10, lsl #12
   16b00:	b.eq	16adc <xre_compile_pattern@@Base+0x2090>  // b.none
   16b04:	lsl	x8, x8, #1
   16b08:	cmp	x8, #0x10, lsl #12
   16b0c:	mov	w9, #0x10000               	// #65536
   16b10:	csel	x1, x8, x9, cc  // cc = lo, ul, last
   16b14:	mov	x0, x20
   16b18:	str	x1, [x19, #8]
   16b1c:	bl	92b0 <realloc@plt>
   16b20:	str	x0, [x19]
   16b24:	cbz	x0, 16b6c <xre_compile_pattern@@Base+0x2120>
   16b28:	cmp	x20, x0
   16b2c:	b.eq	16b60 <xre_compile_pattern@@Base+0x2114>  // b.none
   16b30:	sub	x8, x0, x20
   16b34:	cmp	x25, #0x0
   16b38:	add	x9, x25, x8
   16b3c:	add	x10, x27, x8
   16b40:	csel	x25, xzr, x9, eq  // eq = none
   16b44:	cmp	x27, #0x0
   16b48:	add	x21, x21, x8
   16b4c:	add	x28, x28, x8
   16b50:	add	x8, x24, x8
   16b54:	csel	x27, xzr, x10, eq  // eq = none
   16b58:	cmp	x24, #0x0
   16b5c:	csel	x24, xzr, x8, eq  // eq = none
   16b60:	mov	w8, #0x1                   	// #1
   16b64:	tbnz	w8, #0, 16ae8 <xre_compile_pattern@@Base+0x209c>
   16b68:	b	17460 <xre_compile_pattern@@Base+0x2a14>
   16b6c:	mov	w26, #0xc                   	// #12
   16b70:	mov	w8, wzr
   16b74:	tbnz	wzr, #0, 16ae8 <xre_compile_pattern@@Base+0x209c>
   16b78:	b	17460 <xre_compile_pattern@@Base+0x2a14>
   16b7c:	ldr	x22, [sp, #136]
   16b80:	tbz	w22, #19, 16b94 <xre_compile_pattern@@Base+0x2148>
   16b84:	b	16f60 <xre_compile_pattern@@Base+0x2514>
   16b88:	mov	w26, #0xf                   	// #15
   16b8c:	mov	w8, wzr
   16b90:	tbz	wzr, #0, 17460 <xre_compile_pattern@@Base+0x2a14>
   16b94:	ldp	x22, x8, [x19]
   16b98:	sub	x9, x27, x22
   16b9c:	add	x9, x9, #0x1
   16ba0:	cmp	x9, x8
   16ba4:	b.ls	16efc <xre_compile_pattern@@Base+0x24b0>  // b.plast
   16ba8:	cmp	x8, #0x10, lsl #12
   16bac:	b.eq	16b88 <xre_compile_pattern@@Base+0x213c>  // b.none
   16bb0:	lsl	x8, x8, #1
   16bb4:	cmp	x8, #0x10, lsl #12
   16bb8:	mov	w9, #0x10000               	// #65536
   16bbc:	csel	x1, x8, x9, cc  // cc = lo, ul, last
   16bc0:	mov	x0, x22
   16bc4:	str	x1, [x19, #8]
   16bc8:	bl	92b0 <realloc@plt>
   16bcc:	str	x0, [x19]
   16bd0:	cbz	x0, 16c18 <xre_compile_pattern@@Base+0x21cc>
   16bd4:	cmp	x22, x0
   16bd8:	b.eq	16c0c <xre_compile_pattern@@Base+0x21c0>  // b.none
   16bdc:	sub	x8, x0, x22
   16be0:	cmp	x25, #0x0
   16be4:	add	x9, x25, x8
   16be8:	add	x10, x20, x8
   16bec:	csel	x25, xzr, x9, eq  // eq = none
   16bf0:	cmp	x20, #0x0
   16bf4:	add	x27, x27, x8
   16bf8:	add	x28, x28, x8
   16bfc:	add	x8, x24, x8
   16c00:	csel	x20, xzr, x10, eq  // eq = none
   16c04:	cmp	x24, #0x0
   16c08:	csel	x24, xzr, x8, eq  // eq = none
   16c0c:	mov	w8, #0x1                   	// #1
   16c10:	tbnz	w8, #0, 16b94 <xre_compile_pattern@@Base+0x2148>
   16c14:	b	17460 <xre_compile_pattern@@Base+0x2a14>
   16c18:	mov	w26, #0xc                   	// #12
   16c1c:	mov	w8, wzr
   16c20:	tbnz	wzr, #0, 16b94 <xre_compile_pattern@@Base+0x2148>
   16c24:	b	17460 <xre_compile_pattern@@Base+0x2a14>
   16c28:	ldr	x22, [sp, #136]
   16c2c:	tbz	w22, #19, 16c40 <xre_compile_pattern@@Base+0x21f4>
   16c30:	b	16f60 <xre_compile_pattern@@Base+0x2514>
   16c34:	mov	w26, #0xf                   	// #15
   16c38:	mov	w8, wzr
   16c3c:	tbz	wzr, #0, 17460 <xre_compile_pattern@@Base+0x2a14>
   16c40:	ldp	x22, x8, [x19]
   16c44:	sub	x9, x27, x22
   16c48:	add	x9, x9, #0x1
   16c4c:	cmp	x9, x8
   16c50:	b.ls	16f08 <xre_compile_pattern@@Base+0x24bc>  // b.plast
   16c54:	cmp	x8, #0x10, lsl #12
   16c58:	b.eq	16c34 <xre_compile_pattern@@Base+0x21e8>  // b.none
   16c5c:	lsl	x8, x8, #1
   16c60:	cmp	x8, #0x10, lsl #12
   16c64:	mov	w9, #0x10000               	// #65536
   16c68:	csel	x1, x8, x9, cc  // cc = lo, ul, last
   16c6c:	mov	x0, x22
   16c70:	str	x1, [x19, #8]
   16c74:	bl	92b0 <realloc@plt>
   16c78:	str	x0, [x19]
   16c7c:	cbz	x0, 16cc4 <xre_compile_pattern@@Base+0x2278>
   16c80:	cmp	x22, x0
   16c84:	b.eq	16cb8 <xre_compile_pattern@@Base+0x226c>  // b.none
   16c88:	sub	x8, x0, x22
   16c8c:	cmp	x25, #0x0
   16c90:	add	x9, x25, x8
   16c94:	add	x10, x20, x8
   16c98:	csel	x25, xzr, x9, eq  // eq = none
   16c9c:	cmp	x20, #0x0
   16ca0:	add	x27, x27, x8
   16ca4:	add	x28, x28, x8
   16ca8:	add	x8, x24, x8
   16cac:	csel	x20, xzr, x10, eq  // eq = none
   16cb0:	cmp	x24, #0x0
   16cb4:	csel	x24, xzr, x8, eq  // eq = none
   16cb8:	mov	w8, #0x1                   	// #1
   16cbc:	tbnz	w8, #0, 16c40 <xre_compile_pattern@@Base+0x21f4>
   16cc0:	b	17460 <xre_compile_pattern@@Base+0x2a14>
   16cc4:	mov	w26, #0xc                   	// #12
   16cc8:	mov	w8, wzr
   16ccc:	tbnz	wzr, #0, 16c40 <xre_compile_pattern@@Base+0x21f4>
   16cd0:	b	17460 <xre_compile_pattern@@Base+0x2a14>
   16cd4:	ldr	x22, [sp, #136]
   16cd8:	tbnz	w22, #19, 16f60 <xre_compile_pattern@@Base+0x2514>
   16cdc:	mov	x21, x27
   16ce0:	b	16cf0 <xre_compile_pattern@@Base+0x22a4>
   16ce4:	mov	w26, #0xf                   	// #15
   16ce8:	mov	w8, wzr
   16cec:	tbz	wzr, #0, 17460 <xre_compile_pattern@@Base+0x2a14>
   16cf0:	ldp	x20, x8, [x19]
   16cf4:	sub	x9, x21, x20
   16cf8:	add	x9, x9, #0x1
   16cfc:	cmp	x9, x8
   16d00:	b.ls	16f14 <xre_compile_pattern@@Base+0x24c8>  // b.plast
   16d04:	cmp	x8, #0x10, lsl #12
   16d08:	b.eq	16ce4 <xre_compile_pattern@@Base+0x2298>  // b.none
   16d0c:	lsl	x8, x8, #1
   16d10:	cmp	x8, #0x10, lsl #12
   16d14:	mov	w9, #0x10000               	// #65536
   16d18:	csel	x1, x8, x9, cc  // cc = lo, ul, last
   16d1c:	mov	x0, x20
   16d20:	str	x1, [x19, #8]
   16d24:	bl	92b0 <realloc@plt>
   16d28:	str	x0, [x19]
   16d2c:	cbz	x0, 16d74 <xre_compile_pattern@@Base+0x2328>
   16d30:	cmp	x20, x0
   16d34:	b.eq	16d68 <xre_compile_pattern@@Base+0x231c>  // b.none
   16d38:	sub	x8, x0, x20
   16d3c:	cmp	x25, #0x0
   16d40:	add	x9, x25, x8
   16d44:	add	x10, x27, x8
   16d48:	csel	x25, xzr, x9, eq  // eq = none
   16d4c:	cmp	x27, #0x0
   16d50:	add	x21, x21, x8
   16d54:	add	x28, x28, x8
   16d58:	add	x8, x24, x8
   16d5c:	csel	x27, xzr, x10, eq  // eq = none
   16d60:	cmp	x24, #0x0
   16d64:	csel	x24, xzr, x8, eq  // eq = none
   16d68:	mov	w8, #0x1                   	// #1
   16d6c:	tbnz	w8, #0, 16cf0 <xre_compile_pattern@@Base+0x22a4>
   16d70:	b	17460 <xre_compile_pattern@@Base+0x2a14>
   16d74:	mov	w26, #0xc                   	// #12
   16d78:	mov	w8, wzr
   16d7c:	tbnz	wzr, #0, 16cf0 <xre_compile_pattern@@Base+0x22a4>
   16d80:	b	17460 <xre_compile_pattern@@Base+0x2a14>
   16d84:	ldr	x8, [sp, #104]
   16d88:	cmp	x8, #0x200
   16d8c:	b.eq	152a8 <xre_compile_pattern@@Base+0x85c>  // b.none
   16d90:	b	16f50 <xre_compile_pattern@@Base+0x2504>
   16d94:	ldr	x22, [sp, #136]
   16d98:	ldr	x8, [sp, #88]
   16d9c:	cbnz	x8, 16f50 <xre_compile_pattern@@Base+0x2504>
   16da0:	b	15318 <xre_compile_pattern@@Base+0x8cc>
   16da4:	mov	w8, #0x8                   	// #8
   16da8:	strb	w8, [x22]
   16dac:	mov	x20, x27
   16db0:	add	x27, x22, #0x2
   16db4:	strb	w21, [x22, #1]
   16db8:	b	1715c <xre_compile_pattern@@Base+0x2710>
   16dbc:	ldr	x0, [sp, #144]
   16dc0:	bl	9240 <free@plt>
   16dc4:	mov	w26, #0x5                   	// #5
   16dc8:	mov	w8, #0x1                   	// #1
   16dcc:	cbz	w8, 1715c <xre_compile_pattern@@Base+0x2710>
   16dd0:	b	17460 <xre_compile_pattern@@Base+0x2a14>
   16dd4:	ldr	x9, [sp, #80]
   16dd8:	cmp	x9, #0x20
   16ddc:	b.ne	16f1c <xre_compile_pattern@@Base+0x24d0>  // b.any
   16de0:	ldr	x0, [sp, #144]
   16de4:	bl	9240 <free@plt>
   16de8:	mov	x20, xzr
   16dec:	mov	w26, #0xd                   	// #13
   16df0:	mov	w8, #0x1                   	// #1
   16df4:	b	16f34 <xre_compile_pattern@@Base+0x24e8>
   16df8:	cbz	w21, 17174 <xre_compile_pattern@@Base+0x2728>
   16dfc:	cmp	w21, #0x1
   16e00:	mov	w8, #0xa                   	// #10
   16e04:	mov	w9, #0x14                  	// #20
   16e08:	csel	x10, x9, x8, gt
   16e0c:	str	x10, [sp, #64]
   16e10:	b	16e20 <xre_compile_pattern@@Base+0x23d4>
   16e14:	mov	w26, #0xf                   	// #15
   16e18:	mov	w8, #0x1                   	// #1
   16e1c:	cbnz	w8, 172e4 <xre_compile_pattern@@Base+0x2898>
   16e20:	ldp	x20, x8, [x19]
   16e24:	add	x9, x10, x27
   16e28:	sub	x9, x9, x20
   16e2c:	cmp	x9, x8
   16e30:	b.ls	1721c <xre_compile_pattern@@Base+0x27d0>  // b.plast
   16e34:	cmp	x8, #0x10, lsl #12
   16e38:	b.eq	16e14 <xre_compile_pattern@@Base+0x23c8>  // b.none
   16e3c:	lsl	x8, x8, #1
   16e40:	cmp	x8, #0x10, lsl #12
   16e44:	mov	w9, #0x10000               	// #65536
   16e48:	csel	x1, x8, x9, cc  // cc = lo, ul, last
   16e4c:	mov	x0, x20
   16e50:	str	x1, [x19, #8]
   16e54:	bl	92b0 <realloc@plt>
   16e58:	str	x0, [x19]
   16e5c:	cbz	x0, 16ea8 <xre_compile_pattern@@Base+0x245c>
   16e60:	cmp	x20, x0
   16e64:	b.eq	16eb4 <xre_compile_pattern@@Base+0x2468>  // b.none
   16e68:	ldr	x12, [sp, #72]
   16e6c:	sub	x9, x0, x20
   16e70:	cmp	x25, #0x0
   16e74:	add	x10, x25, x9
   16e78:	add	x11, x12, x9
   16e7c:	csel	x25, xzr, x10, eq  // eq = none
   16e80:	cmp	x12, #0x0
   16e84:	add	x27, x27, x9
   16e88:	add	x28, x28, x9
   16e8c:	add	x9, x24, x9
   16e90:	csel	x10, xzr, x11, eq  // eq = none
   16e94:	cmp	x24, #0x0
   16e98:	mov	w8, wzr
   16e9c:	csel	x24, xzr, x9, eq  // eq = none
   16ea0:	str	x10, [sp, #72]
   16ea4:	b	16eb8 <xre_compile_pattern@@Base+0x246c>
   16ea8:	mov	w26, #0xc                   	// #12
   16eac:	mov	w8, #0x1                   	// #1
   16eb0:	b	16eb8 <xre_compile_pattern@@Base+0x246c>
   16eb4:	mov	w8, wzr
   16eb8:	ldr	x10, [sp, #64]
   16ebc:	cbz	w8, 16e20 <xre_compile_pattern@@Base+0x23d4>
   16ec0:	b	172e4 <xre_compile_pattern@@Base+0x2898>
   16ec4:	mov	w8, #0xc                   	// #12
   16ec8:	strb	w8, [x27], #1
   16ecc:	b	1715c <xre_compile_pattern@@Base+0x2710>
   16ed0:	mov	w8, #0x1a                  	// #26
   16ed4:	strb	w8, [x27], #1
   16ed8:	b	1715c <xre_compile_pattern@@Base+0x2710>
   16edc:	mov	w8, #0x1b                  	// #27
   16ee0:	strb	w8, [x27], #1
   16ee4:	b	1715c <xre_compile_pattern@@Base+0x2710>
   16ee8:	mov	w8, #0x1d                  	// #29
   16eec:	strb	w8, [x27], #1
   16ef0:	b	1715c <xre_compile_pattern@@Base+0x2710>
   16ef4:	mov	w8, #0x19                  	// #25
   16ef8:	b	1544c <xre_compile_pattern@@Base+0xa00>
   16efc:	mov	w8, #0xb                   	// #11
   16f00:	strb	w8, [x27], #1
   16f04:	b	1715c <xre_compile_pattern@@Base+0x2710>
   16f08:	mov	w8, #0x1c                  	// #28
   16f0c:	strb	w8, [x27], #1
   16f10:	b	1715c <xre_compile_pattern@@Base+0x2710>
   16f14:	mov	w8, #0x18                  	// #24
   16f18:	b	1544c <xre_compile_pattern@@Base+0xa00>
   16f1c:	ldr	x9, [sp, #136]
   16f20:	str	x27, [sp, #72]
   16f24:	tbnz	w9, #4, 16580 <xre_compile_pattern@@Base+0x1b34>
   16f28:	stur	x8, [x29, #-16]
   16f2c:	ldr	w8, [sp, #100]
   16f30:	mov	w23, #0x7b                  	// #123
   16f34:	ldr	x22, [sp, #136]
   16f38:	cmp	w8, #0xd
   16f3c:	b.eq	16f60 <xre_compile_pattern@@Base+0x2514>  // b.none
   16f40:	cmp	w8, #0x6e
   16f44:	b.eq	1715c <xre_compile_pattern@@Base+0x2710>  // b.none
   16f48:	cmp	w8, #0x6f
   16f4c:	b.ne	17460 <xre_compile_pattern@@Base+0x2a14>  // b.any
   16f50:	ldur	x8, [x29, #-152]
   16f54:	cbz	x8, 16f5c <xre_compile_pattern@@Base+0x2510>
   16f58:	ldrb	w23, [x8, w23, uxtw]
   16f5c:	ldr	x22, [sp, #136]
   16f60:	cbz	x24, 16f98 <xre_compile_pattern@@Base+0x254c>
   16f64:	ldrb	w8, [x24]
   16f68:	cmp	x8, #0xff
   16f6c:	b.eq	16f98 <xre_compile_pattern@@Base+0x254c>  // b.none
   16f70:	add	x8, x24, x8
   16f74:	add	x8, x8, #0x1
   16f78:	cmp	x8, x27
   16f7c:	b.ne	16f98 <xre_compile_pattern@@Base+0x254c>  // b.any
   16f80:	ldur	x8, [x29, #-16]
   16f84:	ldrb	w9, [x8]
   16f88:	cmp	w9, #0x2a
   16f8c:	b.eq	16f98 <xre_compile_pattern@@Base+0x254c>  // b.none
   16f90:	cmp	w9, #0x5e
   16f94:	b.ne	1704c <xre_compile_pattern@@Base+0x2600>  // b.any
   16f98:	mov	x21, x27
   16f9c:	b	16fac <xre_compile_pattern@@Base+0x2560>
   16fa0:	mov	w26, #0xf                   	// #15
   16fa4:	mov	w8, wzr
   16fa8:	tbz	wzr, #0, 17460 <xre_compile_pattern@@Base+0x2a14>
   16fac:	ldp	x20, x8, [x19]
   16fb0:	sub	x9, x21, x20
   16fb4:	add	x9, x9, #0x2
   16fb8:	cmp	x9, x8
   16fbc:	b.ls	17034 <xre_compile_pattern@@Base+0x25e8>  // b.plast
   16fc0:	cmp	x8, #0x10, lsl #12
   16fc4:	b.eq	16fa0 <xre_compile_pattern@@Base+0x2554>  // b.none
   16fc8:	lsl	x8, x8, #1
   16fcc:	cmp	x8, #0x10, lsl #12
   16fd0:	mov	w9, #0x10000               	// #65536
   16fd4:	csel	x1, x8, x9, cc  // cc = lo, ul, last
   16fd8:	mov	x0, x20
   16fdc:	str	x1, [x19, #8]
   16fe0:	bl	92b0 <realloc@plt>
   16fe4:	str	x0, [x19]
   16fe8:	cbz	x0, 17024 <xre_compile_pattern@@Base+0x25d8>
   16fec:	cmp	x20, x0
   16ff0:	b.eq	17018 <xre_compile_pattern@@Base+0x25cc>  // b.none
   16ff4:	sub	x8, x0, x20
   16ff8:	cmp	x25, #0x0
   16ffc:	add	x9, x25, x8
   17000:	add	x21, x21, x8
   17004:	add	x28, x28, x8
   17008:	add	x8, x27, x8
   1700c:	csel	x25, xzr, x9, eq  // eq = none
   17010:	cmp	x27, #0x0
   17014:	csel	x27, xzr, x8, eq  // eq = none
   17018:	mov	w8, #0x1                   	// #1
   1701c:	tbnz	w8, #0, 16fac <xre_compile_pattern@@Base+0x2560>
   17020:	b	17460 <xre_compile_pattern@@Base+0x2a14>
   17024:	mov	w26, #0xc                   	// #12
   17028:	mov	w8, wzr
   1702c:	tbnz	wzr, #0, 16fac <xre_compile_pattern@@Base+0x2560>
   17030:	b	17460 <xre_compile_pattern@@Base+0x2a14>
   17034:	mov	w8, #0x2                   	// #2
   17038:	add	x24, x21, #0x1
   1703c:	strh	w8, [x21], #2
   17040:	mov	x20, x27
   17044:	mov	x27, x21
   17048:	b	170b8 <xre_compile_pattern@@Base+0x266c>
   1704c:	tbnz	w22, #1, 17064 <xre_compile_pattern@@Base+0x2618>
   17050:	cmp	w9, #0x2b
   17054:	b.eq	16f98 <xre_compile_pattern@@Base+0x254c>  // b.none
   17058:	cmp	w9, #0x3f
   1705c:	b.eq	16f98 <xre_compile_pattern@@Base+0x254c>  // b.none
   17060:	b	17080 <xre_compile_pattern@@Base+0x2634>
   17064:	cmp	w9, #0x5c
   17068:	b.ne	17080 <xre_compile_pattern@@Base+0x2634>  // b.any
   1706c:	ldrb	w10, [x8, #1]
   17070:	cmp	w10, #0x2b
   17074:	b.eq	16f98 <xre_compile_pattern@@Base+0x254c>  // b.none
   17078:	cmp	w10, #0x3f
   1707c:	b.eq	16f98 <xre_compile_pattern@@Base+0x254c>  // b.none
   17080:	tbz	w22, #9, 170b8 <xre_compile_pattern@@Base+0x266c>
   17084:	tbnz	w22, #12, 170a0 <xre_compile_pattern@@Base+0x2654>
   17088:	cmp	w9, #0x5c
   1708c:	b.ne	170b8 <xre_compile_pattern@@Base+0x266c>  // b.any
   17090:	ldrb	w8, [x8, #1]
   17094:	cmp	w8, #0x7b
   17098:	b.ne	170b8 <xre_compile_pattern@@Base+0x266c>  // b.any
   1709c:	b	16f98 <xre_compile_pattern@@Base+0x254c>
   170a0:	cmp	w9, #0x7b
   170a4:	b.ne	170b8 <xre_compile_pattern@@Base+0x266c>  // b.any
   170a8:	b	16f98 <xre_compile_pattern@@Base+0x254c>
   170ac:	mov	w26, #0xf                   	// #15
   170b0:	mov	w8, wzr
   170b4:	tbz	wzr, #0, 17460 <xre_compile_pattern@@Base+0x2a14>
   170b8:	ldp	x22, x8, [x19]
   170bc:	sub	x9, x27, x22
   170c0:	add	x9, x9, #0x1
   170c4:	cmp	x9, x8
   170c8:	b.ls	1714c <xre_compile_pattern@@Base+0x2700>  // b.plast
   170cc:	cmp	x8, #0x10, lsl #12
   170d0:	b.eq	170ac <xre_compile_pattern@@Base+0x2660>  // b.none
   170d4:	lsl	x8, x8, #1
   170d8:	cmp	x8, #0x10, lsl #12
   170dc:	mov	w9, #0x10000               	// #65536
   170e0:	csel	x1, x8, x9, cc  // cc = lo, ul, last
   170e4:	mov	x0, x22
   170e8:	str	x1, [x19, #8]
   170ec:	bl	92b0 <realloc@plt>
   170f0:	str	x0, [x19]
   170f4:	cbz	x0, 1713c <xre_compile_pattern@@Base+0x26f0>
   170f8:	cmp	x22, x0
   170fc:	b.eq	17130 <xre_compile_pattern@@Base+0x26e4>  // b.none
   17100:	sub	x8, x0, x22
   17104:	cmp	x25, #0x0
   17108:	add	x9, x25, x8
   1710c:	add	x10, x20, x8
   17110:	csel	x25, xzr, x9, eq  // eq = none
   17114:	cmp	x20, #0x0
   17118:	add	x27, x27, x8
   1711c:	add	x28, x28, x8
   17120:	add	x8, x24, x8
   17124:	csel	x20, xzr, x10, eq  // eq = none
   17128:	cmp	x24, #0x0
   1712c:	csel	x24, xzr, x8, eq  // eq = none
   17130:	mov	w8, #0x1                   	// #1
   17134:	tbnz	w8, #0, 170b8 <xre_compile_pattern@@Base+0x266c>
   17138:	b	17460 <xre_compile_pattern@@Base+0x2a14>
   1713c:	mov	w26, #0xc                   	// #12
   17140:	mov	w8, wzr
   17144:	tbnz	wzr, #0, 170b8 <xre_compile_pattern@@Base+0x266c>
   17148:	b	17460 <xre_compile_pattern@@Base+0x2a14>
   1714c:	strb	w23, [x27], #1
   17150:	ldrb	w8, [x24]
   17154:	add	w8, w8, #0x1
   17158:	strb	w8, [x24]
   1715c:	ldur	x8, [x29, #-16]
   17160:	ldr	x9, [sp, #160]
   17164:	ldr	x22, [sp, #136]
   17168:	cmp	x8, x9
   1716c:	b.ne	14bb0 <xre_compile_pattern@@Base+0x164>  // b.any
   17170:	b	1736c <xre_compile_pattern@@Base+0x2920>
   17174:	ldr	x22, [sp, #136]
   17178:	ldr	x21, [sp, #72]
   1717c:	b	1718c <xre_compile_pattern@@Base+0x2740>
   17180:	mov	w26, #0xf                   	// #15
   17184:	mov	w8, #0x1                   	// #1
   17188:	cbnz	w8, 172f0 <xre_compile_pattern@@Base+0x28a4>
   1718c:	ldp	x20, x8, [x19]
   17190:	sub	x9, x27, x20
   17194:	add	x9, x9, #0x3
   17198:	cmp	x9, x8
   1719c:	b.ls	172b8 <xre_compile_pattern@@Base+0x286c>  // b.plast
   171a0:	cmp	x8, #0x10, lsl #12
   171a4:	b.eq	17180 <xre_compile_pattern@@Base+0x2734>  // b.none
   171a8:	lsl	x8, x8, #1
   171ac:	cmp	x8, #0x10, lsl #12
   171b0:	mov	w9, #0x10000               	// #65536
   171b4:	csel	x1, x8, x9, cc  // cc = lo, ul, last
   171b8:	mov	x0, x20
   171bc:	str	x1, [x19, #8]
   171c0:	bl	92b0 <realloc@plt>
   171c4:	str	x0, [x19]
   171c8:	cbz	x0, 1720c <xre_compile_pattern@@Base+0x27c0>
   171cc:	cmp	x20, x0
   171d0:	b.eq	17214 <xre_compile_pattern@@Base+0x27c8>  // b.none
   171d4:	sub	x9, x0, x20
   171d8:	cmp	x25, #0x0
   171dc:	add	x10, x25, x9
   171e0:	add	x11, x21, x9
   171e4:	csel	x25, xzr, x10, eq  // eq = none
   171e8:	cmp	x21, #0x0
   171ec:	add	x27, x27, x9
   171f0:	add	x28, x28, x9
   171f4:	add	x9, x24, x9
   171f8:	csel	x21, xzr, x11, eq  // eq = none
   171fc:	cmp	x24, #0x0
   17200:	mov	w8, wzr
   17204:	csel	x24, xzr, x9, eq  // eq = none
   17208:	b	17188 <xre_compile_pattern@@Base+0x273c>
   1720c:	mov	w26, #0xc                   	// #12
   17210:	b	17184 <xre_compile_pattern@@Base+0x2738>
   17214:	mov	w8, wzr
   17218:	b	17188 <xre_compile_pattern@@Base+0x273c>
   1721c:	subs	w8, w21, #0x1
   17220:	ldr	x20, [sp, #72]
   17224:	str	w8, [sp, #56]
   17228:	mov	w8, #0x5                   	// #5
   1722c:	add	x9, x27, #0x5
   17230:	csel	w8, w8, wzr, gt
   17234:	add	w8, w9, w8
   17238:	sub	w8, w8, w20
   1723c:	sub	w2, w8, #0x3
   17240:	mov	w0, #0x15                  	// #21
   17244:	mov	x1, x20
   17248:	mov	w3, w22
   1724c:	mov	x4, x27
   17250:	str	x9, [sp, #64]
   17254:	bl	17ee0 <xregfree@@Base+0x5f4>
   17258:	ldr	x4, [sp, #64]
   1725c:	mov	w0, #0x17                  	// #23
   17260:	mov	w2, #0x5                   	// #5
   17264:	mov	x1, x20
   17268:	mov	w3, w22
   1726c:	bl	17ee0 <xregfree@@Base+0x5f4>
   17270:	cmp	w21, #0x2
   17274:	add	x1, x27, #0xa
   17278:	b.lt	172dc <xre_compile_pattern@@Base+0x2890>  // b.tstop
   1727c:	ldr	w21, [sp, #56]
   17280:	sub	w8, w20, w1
   17284:	add	w2, w8, #0x2
   17288:	mov	w0, #0x16                  	// #22
   1728c:	mov	w3, w21
   17290:	bl	17f0c <xregfree@@Base+0x620>
   17294:	add	x4, x27, #0xf
   17298:	sub	w2, w4, w20
   1729c:	mov	w0, #0x17                  	// #23
   172a0:	mov	x1, x20
   172a4:	mov	w3, w21
   172a8:	bl	17ee0 <xregfree@@Base+0x5f4>
   172ac:	mov	w8, wzr
   172b0:	add	x27, x27, #0x14
   172b4:	b	172e4 <xre_compile_pattern@@Base+0x2898>
   172b8:	add	x20, x27, #0x3
   172bc:	sub	w8, w20, w21
   172c0:	sub	w2, w8, #0x3
   172c4:	mov	w0, #0xd                   	// #13
   172c8:	mov	x1, x21
   172cc:	mov	x3, x27
   172d0:	bl	17e18 <xregfree@@Base+0x52c>
   172d4:	mov	x27, x20
   172d8:	b	172f8 <xre_compile_pattern@@Base+0x28ac>
   172dc:	mov	w8, wzr
   172e0:	mov	x27, x1
   172e4:	ldr	x22, [sp, #136]
   172e8:	ldr	x21, [sp, #72]
   172ec:	cbz	w8, 172f8 <xre_compile_pattern@@Base+0x28ac>
   172f0:	mov	x20, x21
   172f4:	b	16f38 <xre_compile_pattern@@Base+0x24ec>
   172f8:	mov	x24, xzr
   172fc:	mov	w8, #0x6e                  	// #110
   17300:	mov	x20, x21
   17304:	b	16f38 <xre_compile_pattern@@Base+0x24ec>
   17308:	ldrb	w9, [x23]
   1730c:	cbz	w9, 17330 <xre_compile_pattern@@Base+0x28e4>
   17310:	and	x8, x9, #0xff
   17314:	ldrb	w8, [x23, x8]
   17318:	cbnz	w8, 17330 <xre_compile_pattern@@Base+0x28e4>
   1731c:	sub	w9, w9, #0x1
   17320:	tst	w9, #0xff
   17324:	strb	w9, [x23]
   17328:	b.ne	17310 <xre_compile_pattern@@Base+0x28c4>  // b.any
   1732c:	mov	w9, wzr
   17330:	mov	w8, wzr
   17334:	add	x27, x27, w9, uxtb
   17338:	cbz	w8, 1715c <xre_compile_pattern@@Base+0x2710>
   1733c:	b	17460 <xre_compile_pattern@@Base+0x2a14>
   17340:	ldr	x0, [sp, #144]
   17344:	bl	9240 <free@plt>
   17348:	mov	w26, #0xb                   	// #11
   1734c:	mov	w8, #0x1                   	// #1
   17350:	cbz	w8, 1715c <xre_compile_pattern@@Base+0x2710>
   17354:	b	17460 <xre_compile_pattern@@Base+0x2a14>
   17358:	mov	w26, #0xc                   	// #12
   1735c:	b	17460 <xre_compile_pattern@@Base+0x2a14>
   17360:	mov	w8, #0x20                  	// #32
   17364:	mov	x25, xzr
   17368:	str	x8, [sp, #152]
   1736c:	cbz	x25, 17384 <xre_compile_pattern@@Base+0x2938>
   17370:	sub	w8, w27, w25
   17374:	sub	w2, w8, #0x3
   17378:	mov	w0, #0xe                   	// #14
   1737c:	mov	x1, x25
   17380:	bl	17e04 <xregfree@@Base+0x518>
   17384:	ldr	x8, [sp, #152]
   17388:	lsr	x8, x8, #32
   1738c:	cbnz	x8, 17410 <xre_compile_pattern@@Base+0x29c4>
   17390:	tbz	w22, #18, 17448 <xre_compile_pattern@@Base+0x29fc>
   17394:	mov	w21, #0x10000               	// #65536
   17398:	b	173a8 <xre_compile_pattern@@Base+0x295c>
   1739c:	mov	w26, #0xf                   	// #15
   173a0:	mov	w8, wzr
   173a4:	tbz	wzr, #0, 17460 <xre_compile_pattern@@Base+0x2a14>
   173a8:	ldp	x20, x8, [x19]
   173ac:	sub	x9, x27, x20
   173b0:	add	x9, x9, #0x1
   173b4:	cmp	x9, x8
   173b8:	b.ls	17440 <xre_compile_pattern@@Base+0x29f4>  // b.plast
   173bc:	cmp	x8, #0x10, lsl #12
   173c0:	b.eq	1739c <xre_compile_pattern@@Base+0x2950>  // b.none
   173c4:	lsl	x8, x8, #1
   173c8:	cmp	x8, #0x10, lsl #12
   173cc:	csel	x1, x8, x21, cc  // cc = lo, ul, last
   173d0:	mov	x0, x20
   173d4:	str	x1, [x19, #8]
   173d8:	bl	92b0 <realloc@plt>
   173dc:	str	x0, [x19]
   173e0:	cbz	x0, 17400 <xre_compile_pattern@@Base+0x29b4>
   173e4:	cmp	x20, x0
   173e8:	b.eq	173f4 <xre_compile_pattern@@Base+0x29a8>  // b.none
   173ec:	sub	x8, x0, x20
   173f0:	add	x27, x27, x8
   173f4:	mov	w8, #0x1                   	// #1
   173f8:	tbnz	w8, #0, 173a8 <xre_compile_pattern@@Base+0x295c>
   173fc:	b	17460 <xre_compile_pattern@@Base+0x2a14>
   17400:	mov	w26, #0xc                   	// #12
   17404:	mov	w8, wzr
   17408:	tbnz	wzr, #0, 173a8 <xre_compile_pattern@@Base+0x295c>
   1740c:	b	17460 <xre_compile_pattern@@Base+0x2a14>
   17410:	ldr	x0, [sp, #144]
   17414:	bl	9240 <free@plt>
   17418:	mov	w26, #0x8                   	// #8
   1741c:	b	17460 <xre_compile_pattern@@Base+0x2a14>
   17420:	mov	w0, #0x20                  	// #32
   17424:	bl	9860 <malloc@plt>
   17428:	str	x0, [x19]
   1742c:	cbnz	x0, 14b28 <xre_compile_pattern@@Base+0xdc>
   17430:	mov	x0, x21
   17434:	bl	9240 <free@plt>
   17438:	mov	w26, #0xc                   	// #12
   1743c:	b	17460 <xre_compile_pattern@@Base+0x2a14>
   17440:	mov	w8, #0x1                   	// #1
   17444:	strb	w8, [x27], #1
   17448:	ldr	x0, [sp, #144]
   1744c:	bl	9240 <free@plt>
   17450:	ldr	x8, [x19]
   17454:	mov	w26, wzr
   17458:	sub	x8, x27, x8
   1745c:	str	x8, [x19, #16]
   17460:	mov	w0, w26
   17464:	ldp	x20, x19, [sp, #400]
   17468:	ldp	x22, x21, [sp, #384]
   1746c:	ldp	x24, x23, [sp, #368]
   17470:	ldp	x26, x25, [sp, #352]
   17474:	ldp	x28, x27, [sp, #336]
   17478:	ldp	x29, x30, [sp, #320]
   1747c:	add	sp, sp, #0x1a0
   17480:	ret
   17484:	ldr	x0, [sp, #144]
   17488:	bl	9240 <free@plt>
   1748c:	mov	w26, #0x5                   	// #5
   17490:	b	17460 <xre_compile_pattern@@Base+0x2a14>
   17494:	ldr	x0, [sp, #144]
   17498:	bl	9240 <free@plt>
   1749c:	mov	w26, #0xd                   	// #13
   174a0:	b	17460 <xre_compile_pattern@@Base+0x2a14>
   174a4:	ldr	x0, [sp, #144]
   174a8:	bl	9240 <free@plt>
   174ac:	mov	w26, #0x6                   	// #6
   174b0:	b	17460 <xre_compile_pattern@@Base+0x2a14>
   174b4:	ldr	x0, [sp, #144]
   174b8:	bl	9240 <free@plt>
   174bc:	mov	w26, #0x10                  	// #16
   174c0:	b	17460 <xre_compile_pattern@@Base+0x2a14>

00000000000174c4 <xre_comp@@Base>:
   174c4:	stp	x29, x30, [sp, #-32]!
   174c8:	stp	x20, x19, [sp, #16]
   174cc:	adrp	x20, 2f000 <xexit@@Base+0x15c60>
   174d0:	ldr	x8, [x20, #2288]
   174d4:	mov	x29, sp
   174d8:	cbz	x0, 17530 <xre_comp@@Base+0x6c>
   174dc:	mov	x19, x0
   174e0:	cbz	x8, 17544 <xre_comp@@Base+0x80>
   174e4:	adrp	x20, 2f000 <xexit@@Base+0x15c60>
   174e8:	add	x20, x20, #0x8f0
   174ec:	ldrb	w8, [x20, #56]
   174f0:	mov	x0, x19
   174f4:	orr	w8, w8, #0x80
   174f8:	strb	w8, [x20, #56]
   174fc:	bl	9110 <strlen@plt>
   17500:	adrp	x8, 2e000 <xexit@@Base+0x14c60>
   17504:	ldr	x8, [x8, #3800]
   17508:	mov	x1, x0
   1750c:	mov	x0, x19
   17510:	mov	x3, x20
   17514:	ldr	x2, [x8]
   17518:	bl	14aa0 <xre_compile_pattern@@Base+0x54>
   1751c:	cbz	w0, 17580 <xre_comp@@Base+0xbc>
   17520:	adrp	x8, 2e000 <xexit@@Base+0x14c60>
   17524:	add	x8, x8, #0x9e0
   17528:	ldr	x0, [x8, w0, sxtw #3]
   1752c:	b	17584 <xre_comp@@Base+0xc0>
   17530:	adrp	x9, 1a000 <xexit@@Base+0xc60>
   17534:	add	x9, x9, #0x28
   17538:	cmp	x8, #0x0
   1753c:	csel	x0, xzr, x9, ne  // ne = any
   17540:	b	17584 <xre_comp@@Base+0xc0>
   17544:	mov	w0, #0xc8                  	// #200
   17548:	bl	9860 <malloc@plt>
   1754c:	str	x0, [x20, #2288]
   17550:	cbz	x0, 17574 <xre_comp@@Base+0xb0>
   17554:	adrp	x20, 2f000 <xexit@@Base+0x15c60>
   17558:	add	x20, x20, #0x8f8
   1755c:	mov	w8, #0xc8                  	// #200
   17560:	mov	w0, #0x100                 	// #256
   17564:	str	x8, [x20]
   17568:	bl	9860 <malloc@plt>
   1756c:	str	x0, [x20, #24]
   17570:	cbnz	x0, 174e4 <xre_comp@@Base+0x20>
   17574:	adrp	x0, 1a000 <xexit@@Base+0xc60>
   17578:	add	x0, x0, #0x16e
   1757c:	b	17584 <xre_comp@@Base+0xc0>
   17580:	mov	x0, xzr
   17584:	ldp	x20, x19, [sp, #16]
   17588:	ldp	x29, x30, [sp], #32
   1758c:	ret

0000000000017590 <xre_exec@@Base>:
   17590:	stp	x29, x30, [sp, #-32]!
   17594:	str	x19, [sp, #16]
   17598:	mov	x29, sp
   1759c:	mov	x19, x0
   175a0:	bl	9110 <strlen@plt>
   175a4:	mov	x2, x0
   175a8:	adrp	x0, 2f000 <xexit@@Base+0x15c60>
   175ac:	add	x0, x0, #0x8f0
   175b0:	mov	x1, x19
   175b4:	mov	w3, wzr
   175b8:	mov	w4, w2
   175bc:	mov	x5, xzr
   175c0:	bl	9620 <xre_search@plt>
   175c4:	ldr	x19, [sp, #16]
   175c8:	mvn	w8, w0
   175cc:	lsr	w0, w8, #31
   175d0:	ldp	x29, x30, [sp], #32
   175d4:	ret

00000000000175d8 <xregcomp@@Base>:
   175d8:	stp	x29, x30, [sp, #-80]!
   175dc:	stp	x24, x23, [sp, #32]
   175e0:	mov	w24, #0xb2be                	// #45758
   175e4:	movk	w24, #0x3, lsl #16
   175e8:	mov	w8, #0x2c6                 	// #710
   175ec:	str	x25, [sp, #16]
   175f0:	stp	x22, x21, [sp, #48]
   175f4:	stp	x20, x19, [sp, #64]
   175f8:	mov	x19, x0
   175fc:	tst	w2, #0x1
   17600:	movk	w8, #0x1, lsl #16
   17604:	stp	xzr, xzr, [x0]
   17608:	add	x9, x24, #0x3e
   1760c:	str	xzr, [x0, #16]
   17610:	mov	w0, #0x100                 	// #256
   17614:	mov	x29, sp
   17618:	mov	w22, w2
   1761c:	mov	x20, x1
   17620:	csel	x21, x8, x9, eq  // eq = none
   17624:	bl	9860 <malloc@plt>
   17628:	str	x0, [x19, #32]
   1762c:	tbnz	w22, #1, 17644 <xregcomp@@Base+0x6c>
   17630:	str	xzr, [x19, #40]
   17634:	tbnz	w22, #2, 17698 <xregcomp@@Base+0xc0>
   17638:	ldrb	w8, [x19, #56]
   1763c:	and	w8, w8, #0x7f
   17640:	b	176a8 <xregcomp@@Base+0xd0>
   17644:	mov	w0, #0x100                 	// #256
   17648:	bl	9860 <malloc@plt>
   1764c:	str	x0, [x19, #40]
   17650:	cbz	x0, 17718 <xregcomp@@Base+0x140>
   17654:	bl	95d0 <__ctype_b_loc@plt>
   17658:	mov	x23, x0
   1765c:	mov	x25, xzr
   17660:	b	17684 <xregcomp@@Base+0xac>
   17664:	bl	9740 <__ctype_tolower_loc@plt>
   17668:	ldr	x8, [x0]
   1766c:	ldr	w8, [x8, x25, lsl #2]
   17670:	ldr	x9, [x19, #40]
   17674:	strb	w8, [x9, x25]
   17678:	add	x25, x25, #0x1
   1767c:	cmp	x25, #0x100
   17680:	b.eq	17634 <xregcomp@@Base+0x5c>  // b.none
   17684:	ldr	x8, [x23]
   17688:	ldrh	w8, [x8, x25, lsl #1]
   1768c:	tbnz	w8, #8, 17664 <xregcomp@@Base+0x8c>
   17690:	mov	w8, w25
   17694:	b	17670 <xregcomp@@Base+0x98>
   17698:	ldrb	w8, [x19, #56]
   1769c:	and	x9, x21, x24
   176a0:	orr	x21, x9, #0x100
   176a4:	orr	w8, w8, #0x80
   176a8:	strb	w8, [x19, #56]
   176ac:	and	w8, w8, #0xff
   176b0:	lsl	w9, w22, #1
   176b4:	and	w9, w9, #0x10
   176b8:	and	w8, w8, #0xffffffef
   176bc:	orr	w8, w8, w9
   176c0:	mov	x0, x20
   176c4:	strb	w8, [x19, #56]
   176c8:	bl	9110 <strlen@plt>
   176cc:	mov	x1, x0
   176d0:	mov	x0, x20
   176d4:	mov	x2, x21
   176d8:	mov	x3, x19
   176dc:	bl	14aa0 <xre_compile_pattern@@Base+0x54>
   176e0:	cmp	w0, #0x10
   176e4:	mov	w8, #0x8                   	// #8
   176e8:	csel	w20, w8, w0, eq  // eq = none
   176ec:	cbnz	w20, 1771c <xregcomp@@Base+0x144>
   176f0:	ldr	x8, [x19, #32]
   176f4:	cbz	x8, 1771c <xregcomp@@Base+0x144>
   176f8:	mov	x0, x19
   176fc:	bl	90f0 <xre_compile_fastmap@plt>
   17700:	cmn	w0, #0x2
   17704:	b.ne	1771c <xregcomp@@Base+0x144>  // b.any
   17708:	ldr	x0, [x19, #32]
   1770c:	bl	9240 <free@plt>
   17710:	str	xzr, [x19, #32]
   17714:	b	1771c <xregcomp@@Base+0x144>
   17718:	mov	w20, #0xc                   	// #12
   1771c:	mov	w0, w20
   17720:	ldp	x20, x19, [sp, #64]
   17724:	ldp	x22, x21, [sp, #48]
   17728:	ldp	x24, x23, [sp, #32]
   1772c:	ldr	x25, [sp, #16]
   17730:	ldp	x29, x30, [sp], #80
   17734:	ret

0000000000017738 <xregexec@@Base>:
   17738:	sub	sp, sp, #0xa0
   1773c:	stp	x24, x23, [sp, #112]
   17740:	mov	x24, x0
   17744:	mov	x0, x1
   17748:	stp	x29, x30, [sp, #96]
   1774c:	stp	x22, x21, [sp, #128]
   17750:	stp	x20, x19, [sp, #144]
   17754:	add	x29, sp, #0x60
   17758:	mov	w23, w4
   1775c:	mov	x19, x3
   17760:	mov	x20, x2
   17764:	mov	x21, x1
   17768:	bl	9110 <strlen@plt>
   1776c:	ldp	q2, q3, [x24, #32]
   17770:	ldrb	w8, [x24, #56]
   17774:	ldp	q1, q0, [x24]
   17778:	ubfiz	w9, w23, #5, #2
   1777c:	stp	q2, q3, [sp, #32]
   17780:	ldrb	w10, [sp, #56]
   17784:	tst	w8, #0x10
   17788:	cset	w8, eq  // eq = none
   1778c:	cmp	x20, #0x0
   17790:	cset	w11, ne  // ne = any
   17794:	and	w23, w11, w8
   17798:	and	w8, w10, #0x99999999
   1779c:	orr	w8, w9, w8
   177a0:	mov	x22, x0
   177a4:	orr	w8, w8, #0x4
   177a8:	cmp	w23, #0x1
   177ac:	stp	q1, q0, [sp]
   177b0:	strb	w8, [sp, #56]
   177b4:	b.ne	177d4 <xregexec@@Base+0x9c>  // b.any
   177b8:	lsl	x0, x20, #3
   177bc:	stur	w20, [x29, #-24]
   177c0:	bl	9860 <malloc@plt>
   177c4:	stur	x0, [x29, #-16]
   177c8:	cbz	x0, 17848 <xregexec@@Base+0x110>
   177cc:	add	x8, x0, x20, lsl #2
   177d0:	stur	x8, [x29, #-8]
   177d4:	cmp	w23, #0x0
   177d8:	sub	x8, x29, #0x18
   177dc:	csel	x5, x8, xzr, ne  // ne = any
   177e0:	mov	x0, sp
   177e4:	mov	x1, x21
   177e8:	mov	w2, w22
   177ec:	mov	w3, wzr
   177f0:	mov	w4, w22
   177f4:	bl	9620 <xre_search@plt>
   177f8:	mov	w21, w0
   177fc:	cbz	w23, 17840 <xregexec@@Base+0x108>
   17800:	tbnz	w21, #31, 17838 <xregexec@@Base+0x100>
   17804:	ldp	x8, x10, [x29, #-16]
   17808:	mov	x9, xzr
   1780c:	mov	w11, #0x1                   	// #1
   17810:	lsl	x12, x9, #2
   17814:	ldr	w13, [x8, x12]
   17818:	add	x14, x19, x9, lsl #3
   1781c:	mov	w9, w11
   17820:	cmp	x9, x20
   17824:	str	w13, [x14]
   17828:	ldr	w12, [x10, x12]
   1782c:	add	w11, w11, #0x1
   17830:	str	w12, [x14, #4]
   17834:	b.cc	17810 <xregexec@@Base+0xd8>  // b.lo, b.ul, b.last
   17838:	ldur	x0, [x29, #-16]
   1783c:	bl	9240 <free@plt>
   17840:	lsr	w0, w21, #31
   17844:	b	1784c <xregexec@@Base+0x114>
   17848:	mov	w0, #0x1                   	// #1
   1784c:	ldp	x20, x19, [sp, #144]
   17850:	ldp	x22, x21, [sp, #128]
   17854:	ldp	x24, x23, [sp, #112]
   17858:	ldp	x29, x30, [sp, #96]
   1785c:	add	sp, sp, #0xa0
   17860:	ret

0000000000017864 <xregerror@@Base>:
   17864:	stp	x29, x30, [sp, #-48]!
   17868:	cmp	w0, #0x11
   1786c:	stp	x22, x21, [sp, #16]
   17870:	stp	x20, x19, [sp, #32]
   17874:	mov	x29, sp
   17878:	b.cs	178e8 <xregerror@@Base+0x84>  // b.hs, b.nlast
   1787c:	adrp	x8, 2e000 <xexit@@Base+0x14c60>
   17880:	add	x8, x8, #0x9e0
   17884:	ldr	x22, [x8, w0, sxtw #3]
   17888:	mov	x21, x3
   1788c:	mov	x19, x2
   17890:	mov	x0, x22
   17894:	bl	9110 <strlen@plt>
   17898:	add	x20, x0, #0x1
   1789c:	cbz	x21, 178d4 <xregerror@@Base+0x70>
   178a0:	cmp	x20, x21
   178a4:	b.ls	178c4 <xregerror@@Base+0x60>  // b.plast
   178a8:	sub	x21, x21, #0x1
   178ac:	mov	x0, x19
   178b0:	mov	x1, x22
   178b4:	mov	x2, x21
   178b8:	bl	8fb0 <memcpy@plt>
   178bc:	strb	wzr, [x19, x21]
   178c0:	b	178d4 <xregerror@@Base+0x70>
   178c4:	mov	x0, x19
   178c8:	mov	x1, x22
   178cc:	mov	x2, x20
   178d0:	bl	8fb0 <memcpy@plt>
   178d4:	mov	x0, x20
   178d8:	ldp	x20, x19, [sp, #32]
   178dc:	ldp	x22, x21, [sp, #16]
   178e0:	ldp	x29, x30, [sp], #48
   178e4:	ret
   178e8:	bl	98b0 <abort@plt>

00000000000178ec <xregfree@@Base>:
   178ec:	stp	x29, x30, [sp, #-32]!
   178f0:	str	x19, [sp, #16]
   178f4:	mov	x19, x0
   178f8:	ldr	x0, [x0]
   178fc:	mov	x29, sp
   17900:	bl	9240 <free@plt>
   17904:	ldr	x0, [x19, #32]
   17908:	stp	xzr, xzr, [x19]
   1790c:	str	xzr, [x19, #16]
   17910:	bl	9240 <free@plt>
   17914:	ldrb	w8, [x19, #56]
   17918:	ldr	x0, [x19, #40]
   1791c:	str	xzr, [x19, #32]
   17920:	and	w8, w8, #0xfffffff7
   17924:	strb	w8, [x19, #56]
   17928:	bl	9240 <free@plt>
   1792c:	str	xzr, [x19, #40]
   17930:	ldr	x19, [sp, #16]
   17934:	ldp	x29, x30, [sp], #32
   17938:	ret
   1793c:	stp	x29, x30, [sp, #-64]!
   17940:	stp	x22, x21, [sp, #32]
   17944:	stp	x20, x19, [sp, #48]
   17948:	ldr	x8, [x0]
   1794c:	mov	x29, sp
   17950:	str	x23, [sp, #16]
   17954:	add	x9, x8, #0x2
   17958:	cmp	x9, x1
   1795c:	str	x9, [x29, #24]
   17960:	b.cs	17a74 <xregfree@@Base+0x188>  // b.hs, b.nlast
   17964:	mov	x20, x2
   17968:	mov	x21, x1
   1796c:	mov	x19, x0
   17970:	b	17980 <xregfree@@Base+0x94>
   17974:	ldr	x9, [x29, #24]
   17978:	cmp	x9, x21
   1797c:	b.cs	17a74 <xregfree@@Base+0x188>  // b.hs, b.nlast
   17980:	ldrb	w8, [x9]
   17984:	cmp	w8, #0xf
   17988:	b.eq	179b0 <xregfree@@Base+0xc4>  // b.none
   1798c:	cmp	w8, #0x7
   17990:	b.eq	17a88 <xregfree@@Base+0x19c>  // b.none
   17994:	add	x0, x29, #0x18
   17998:	mov	x1, x21
   1799c:	mov	x2, x20
   179a0:	bl	17b78 <xregfree@@Base+0x28c>
   179a4:	tst	w0, #0xff
   179a8:	b.ne	17974 <xregfree@@Base+0x88>  // b.any
   179ac:	b	17a74 <xregfree@@Base+0x188>
   179b0:	add	x8, x9, #0x1
   179b4:	str	x8, [x29, #24]
   179b8:	ldrb	w8, [x9, #1]
   179bc:	ldrsb	w10, [x9, #2]
   179c0:	add	x9, x9, #0x3
   179c4:	str	x9, [x29, #24]
   179c8:	bfi	w8, w10, #8, #24
   179cc:	tbnz	w8, #31, 17974 <xregfree@@Base+0x88>
   179d0:	ldr	x22, [x29, #24]
   179d4:	sxtw	x8, w8
   179d8:	add	x9, x8, x22
   179dc:	ldurb	w9, [x9, #-3]
   179e0:	cmp	w9, #0xe
   179e4:	b.ne	17a40 <xregfree@@Base+0x154>  // b.any
   179e8:	add	x23, x22, x8
   179ec:	sub	x1, x23, #0x3
   179f0:	mov	x0, x22
   179f4:	mov	x2, x20
   179f8:	bl	17ae4 <xregfree@@Base+0x1f8>
   179fc:	tst	w0, #0xff
   17a00:	b.eq	17a7c <xregfree@@Base+0x190>  // b.none
   17a04:	ldrb	w8, [x23]
   17a08:	cmp	w8, #0xf
   17a0c:	b.ne	17a3c <xregfree@@Base+0x150>  // b.any
   17a10:	ldrb	w8, [x23, #1]
   17a14:	ldrsb	x9, [x23, #2]
   17a18:	add	x22, x23, #0x3
   17a1c:	bfi	x8, x9, #8, #56
   17a20:	add	x9, x8, x22
   17a24:	ldurb	w9, [x9, #-3]
   17a28:	cmp	w9, #0xe
   17a2c:	b.eq	179d4 <xregfree@@Base+0xe8>  // b.none
   17a30:	str	x22, [x29, #24]
   17a34:	sub	x22, x22, #0x3
   17a38:	b	17a40 <xregfree@@Base+0x154>
   17a3c:	mov	x22, x23
   17a40:	str	x22, [x29, #24]
   17a44:	ldurb	w8, [x22, #-2]
   17a48:	ldursb	x9, [x22, #-1]
   17a4c:	mov	x0, x22
   17a50:	mov	x2, x20
   17a54:	bfi	x8, x9, #8, #56
   17a58:	add	x23, x22, x8
   17a5c:	mov	x1, x23
   17a60:	bl	17ae4 <xregfree@@Base+0x1f8>
   17a64:	tst	w0, #0xff
   17a68:	b.eq	17a74 <xregfree@@Base+0x188>  // b.none
   17a6c:	str	x23, [x29, #24]
   17a70:	b	17974 <xregfree@@Base+0x88>
   17a74:	mov	w0, wzr
   17a78:	b	17a94 <xregfree@@Base+0x1a8>
   17a7c:	mov	w0, wzr
   17a80:	str	x22, [x29, #24]
   17a84:	b	17a94 <xregfree@@Base+0x1a8>
   17a88:	add	x8, x9, #0x2
   17a8c:	str	x8, [x19]
   17a90:	mov	w0, #0x1                   	// #1
   17a94:	ldp	x20, x19, [sp, #48]
   17a98:	ldp	x22, x21, [sp, #32]
   17a9c:	ldr	x23, [sp, #16]
   17aa0:	ldp	x29, x30, [sp], #64
   17aa4:	ret
   17aa8:	cbz	w2, 17ad4 <xregfree@@Base+0x1e8>
   17aac:	ldrb	w8, [x0]
   17ab0:	ldrb	w9, [x1]
   17ab4:	ldrb	w8, [x3, x8]
   17ab8:	ldrb	w9, [x3, x9]
   17abc:	cmp	w8, w9
   17ac0:	b.ne	17adc <xregfree@@Base+0x1f0>  // b.any
   17ac4:	add	x1, x1, #0x1
   17ac8:	subs	w2, w2, #0x1
   17acc:	add	x0, x0, #0x1
   17ad0:	b.ne	17aac <xregfree@@Base+0x1c0>  // b.any
   17ad4:	mov	w0, wzr
   17ad8:	ret
   17adc:	mov	w0, #0x1                   	// #1
   17ae0:	ret
   17ae4:	sub	sp, sp, #0x30
   17ae8:	cmp	x0, x1
   17aec:	stp	x29, x30, [sp, #16]
   17af0:	stp	x20, x19, [sp, #32]
   17af4:	add	x29, sp, #0x10
   17af8:	str	x0, [sp, #8]
   17afc:	b.cs	17b64 <xregfree@@Base+0x278>  // b.hs, b.nlast
   17b00:	mov	x19, x2
   17b04:	mov	x20, x1
   17b08:	b	17b38 <xregfree@@Base+0x24c>
   17b0c:	add	x8, x0, #0x1
   17b10:	str	x8, [sp, #8]
   17b14:	ldrb	w8, [x0, #1]
   17b18:	ldrsb	x9, [x0, #2]
   17b1c:	bfi	x8, x9, #8, #56
   17b20:	add	x8, x0, x8
   17b24:	add	x8, x8, #0x3
   17b28:	str	x8, [sp, #8]
   17b2c:	ldr	x0, [sp, #8]
   17b30:	cmp	x0, x20
   17b34:	b.cs	17b64 <xregfree@@Base+0x278>  // b.hs, b.nlast
   17b38:	ldrb	w8, [x0]
   17b3c:	cmp	w8, #0xf
   17b40:	b.eq	17b0c <xregfree@@Base+0x220>  // b.none
   17b44:	add	x0, sp, #0x8
   17b48:	mov	x1, x20
   17b4c:	mov	x2, x19
   17b50:	bl	17b78 <xregfree@@Base+0x28c>
   17b54:	tst	w0, #0xff
   17b58:	b.ne	17b2c <xregfree@@Base+0x240>  // b.any
   17b5c:	mov	w0, wzr
   17b60:	b	17b68 <xregfree@@Base+0x27c>
   17b64:	mov	w0, #0x1                   	// #1
   17b68:	ldp	x20, x19, [sp, #32]
   17b6c:	ldp	x29, x30, [sp, #16]
   17b70:	add	sp, sp, #0x30
   17b74:	ret
   17b78:	stp	x29, x30, [sp, #-48]!
   17b7c:	stp	x20, x19, [sp, #32]
   17b80:	ldr	x8, [x0]
   17b84:	mov	x29, sp
   17b88:	mov	x19, x0
   17b8c:	mov	w0, wzr
   17b90:	add	x9, x8, #0x1
   17b94:	str	x9, [x29, #24]
   17b98:	ldrb	w10, [x8]
   17b9c:	str	x21, [sp, #16]
   17ba0:	cmp	w10, #0x1d
   17ba4:	b.hi	17bd0 <xregfree@@Base+0x2e4>  // b.pmore
   17ba8:	adrp	x11, 1a000 <xexit@@Base+0xc60>
   17bac:	add	x11, x11, #0xa
   17bb0:	adr	x12, 17bc4 <xregfree@@Base+0x2d8>
   17bb4:	ldrb	w13, [x11, x10]
   17bb8:	add	x12, x12, x13, lsl #2
   17bbc:	mov	x20, x2
   17bc0:	br	x12
   17bc4:	ldr	x8, [x29, #24]
   17bc8:	mov	w0, #0x1                   	// #1
   17bcc:	str	x8, [x19]
   17bd0:	ldp	x20, x19, [sp, #32]
   17bd4:	ldr	x21, [sp, #16]
   17bd8:	ldp	x29, x30, [sp], #48
   17bdc:	ret
   17be0:	ldrb	w21, [x9]
   17be4:	add	x0, x29, #0x18
   17be8:	mov	x2, x20
   17bec:	bl	1793c <xregfree@@Base+0x50>
   17bf0:	add	x8, x20, x21, lsl #3
   17bf4:	ldrb	w9, [x8]
   17bf8:	mvn	w10, w9
   17bfc:	tst	w10, #0x3
   17c00:	b.ne	17c0c <xregfree@@Base+0x320>  // b.any
   17c04:	bfxil	w9, w0, #0, #2
   17c08:	strb	w9, [x8]
   17c0c:	tst	w0, #0xff
   17c10:	b.ne	17bc4 <xregfree@@Base+0x2d8>  // b.any
   17c14:	b	17c70 <xregfree@@Base+0x384>
   17c18:	ldrb	w8, [x9]
   17c1c:	lsl	x8, x8, #3
   17c20:	ldrb	w8, [x20, x8]
   17c24:	tst	w8, #0x3
   17c28:	b.ne	17bc4 <xregfree@@Base+0x2d8>  // b.any
   17c2c:	b	17c70 <xregfree@@Base+0x384>
   17c30:	ldrb	w9, [x8, #1]
   17c34:	ldrsb	x10, [x8, #2]
   17c38:	add	x8, x8, #0x3
   17c3c:	str	x8, [x29, #24]
   17c40:	bfi	x9, x10, #8, #56
   17c44:	tbnz	w9, #31, 17c70 <xregfree@@Base+0x384>
   17c48:	add	x8, x8, x9
   17c4c:	b	17c9c <xregfree@@Base+0x3b0>
   17c50:	add	x10, x8, #0x3
   17c54:	str	x10, [x29, #24]
   17c58:	ldrb	w11, [x8, #3]
   17c5c:	ldrsb	w12, [x8, #4]
   17c60:	bfi	w11, w12, #8, #24
   17c64:	add	x12, x8, #0x5
   17c68:	str	x12, [x29, #24]
   17c6c:	cbz	w11, 17c88 <xregfree@@Base+0x39c>
   17c70:	mov	w0, wzr
   17c74:	b	17bd0 <xregfree@@Base+0x2e4>
   17c78:	add	x8, x8, #0x5
   17c7c:	mov	w0, wzr
   17c80:	str	x8, [x29, #24]
   17c84:	b	17bd0 <xregfree@@Base+0x2e4>
   17c88:	str	x9, [x29, #24]
   17c8c:	ldrb	w9, [x8, #1]
   17c90:	ldrsb	x8, [x8, #2]
   17c94:	bfi	x9, x8, #8, #56
   17c98:	add	x8, x10, x9
   17c9c:	str	x8, [x29, #24]
   17ca0:	b	17bc4 <xregfree@@Base+0x2d8>
   17ca4:	stp	x29, x30, [sp, #-32]!
   17ca8:	stp	x20, x19, [sp, #16]
   17cac:	adrp	x19, 2f000 <xexit@@Base+0x15c60>
   17cb0:	ldrb	w8, [x19, #2612]
   17cb4:	mov	x29, sp
   17cb8:	tbnz	w8, #0, 17d28 <xregfree@@Base+0x43c>
   17cbc:	adrp	x20, 2f000 <xexit@@Base+0x15c60>
   17cc0:	add	x20, x20, #0x930
   17cc4:	movi	v0.2d, #0x0
   17cc8:	stp	q0, q0, [x20, #224]
   17ccc:	stp	q0, q0, [x20, #192]
   17cd0:	stp	q0, q0, [x20, #160]
   17cd4:	stp	q0, q0, [x20, #128]
   17cd8:	stp	q0, q0, [x20, #96]
   17cdc:	stp	q0, q0, [x20, #64]
   17ce0:	stp	q0, q0, [x20, #32]
   17ce4:	stp	q0, q0, [x20]
   17ce8:	bl	95d0 <__ctype_b_loc@plt>
   17cec:	mov	x8, xzr
   17cf0:	mov	w9, #0x1                   	// #1
   17cf4:	b	17d04 <xregfree@@Base+0x418>
   17cf8:	add	x8, x8, #0x1
   17cfc:	cmp	x8, #0x100
   17d00:	b.eq	17d18 <xregfree@@Base+0x42c>  // b.none
   17d04:	ldr	x10, [x0]
   17d08:	ldrh	w10, [x10, x8, lsl #1]
   17d0c:	tbz	w10, #3, 17cf8 <xregfree@@Base+0x40c>
   17d10:	strb	w9, [x20, x8]
   17d14:	b	17cf8 <xregfree@@Base+0x40c>
   17d18:	adrp	x8, 2f000 <xexit@@Base+0x15c60>
   17d1c:	mov	w9, #0x1                   	// #1
   17d20:	strb	w9, [x8, #2447]
   17d24:	strb	w9, [x19, #2612]
   17d28:	ldp	x20, x19, [sp, #16]
   17d2c:	ldp	x29, x30, [sp], #32
   17d30:	ret
   17d34:	sub	x9, x1, #0x2
   17d38:	cmp	x9, x0
   17d3c:	b.ls	17d50 <xregfree@@Base+0x464>  // b.plast
   17d40:	ldurb	w8, [x1, #-3]
   17d44:	cmp	w8, #0x5c
   17d48:	cset	w8, eq  // eq = none
   17d4c:	b	17d54 <xregfree@@Base+0x468>
   17d50:	mov	w8, wzr
   17d54:	ldrb	w9, [x9]
   17d58:	cmp	w9, #0x7c
   17d5c:	b.eq	17d7c <xregfree@@Base+0x490>  // b.none
   17d60:	cmp	w9, #0x28
   17d64:	b.ne	17d88 <xregfree@@Base+0x49c>  // b.any
   17d68:	mov	w0, #0x1                   	// #1
   17d6c:	tbnz	w2, #13, 17d84 <xregfree@@Base+0x498>
   17d70:	cbnz	w8, 17d84 <xregfree@@Base+0x498>
   17d74:	cmp	w9, #0x7c
   17d78:	b.ne	17d88 <xregfree@@Base+0x49c>  // b.any
   17d7c:	ubfx	w9, w2, #15, #1
   17d80:	orr	w0, w9, w8
   17d84:	ret
   17d88:	mov	w0, wzr
   17d8c:	ret
   17d90:	ldrb	w9, [x0], #1
   17d94:	cmp	x0, x1
   17d98:	csel	x8, x0, xzr, cc  // cc = lo, ul, last
   17d9c:	tbnz	w2, #13, 17dc4 <xregfree@@Base+0x4d8>
   17da0:	cmp	x0, x1
   17da4:	b.cs	17dd4 <xregfree@@Base+0x4e8>  // b.hs, b.nlast
   17da8:	cmp	w9, #0x5c
   17dac:	b.ne	17dd4 <xregfree@@Base+0x4e8>  // b.any
   17db0:	ldrb	w10, [x8]
   17db4:	cmp	w10, #0x29
   17db8:	b.ne	17dd4 <xregfree@@Base+0x4e8>  // b.any
   17dbc:	mov	w0, #0x1                   	// #1
   17dc0:	ret
   17dc4:	cmp	w9, #0x29
   17dc8:	b.ne	17dd4 <xregfree@@Base+0x4e8>  // b.any
   17dcc:	mov	w0, #0x1                   	// #1
   17dd0:	ret
   17dd4:	tbnz	w2, #15, 17df8 <xregfree@@Base+0x50c>
   17dd8:	cmp	x0, x1
   17ddc:	mov	w0, wzr
   17de0:	b.cs	17e00 <xregfree@@Base+0x514>  // b.hs, b.nlast
   17de4:	cmp	w9, #0x5c
   17de8:	b.ne	17e00 <xregfree@@Base+0x514>  // b.any
   17dec:	ldrb	w8, [x8]
   17df0:	cmp	w8, #0x7c
   17df4:	b	17dfc <xregfree@@Base+0x510>
   17df8:	cmp	w9, #0x7c
   17dfc:	cset	w0, eq  // eq = none
   17e00:	ret
   17e04:	lsr	w8, w2, #8
   17e08:	strb	w0, [x1]
   17e0c:	strb	w2, [x1, #1]
   17e10:	strb	w8, [x1, #2]
   17e14:	ret
   17e18:	stp	x29, x30, [sp, #-16]!
   17e1c:	cmp	x3, x1
   17e20:	mov	x29, sp
   17e24:	b.eq	17e38 <xregfree@@Base+0x54c>  // b.none
   17e28:	ldrb	w8, [x3, #-1]!
   17e2c:	cmp	x1, x3
   17e30:	strb	w8, [x3, #3]
   17e34:	b.ne	17e28 <xregfree@@Base+0x53c>  // b.any
   17e38:	bl	17e04 <xregfree@@Base+0x518>
   17e3c:	ldp	x29, x30, [sp], #16
   17e40:	ret
   17e44:	ldr	x9, [x1]
   17e48:	mov	w8, w0
   17e4c:	mov	w0, #0xb                   	// #11
   17e50:	cmp	x9, x2
   17e54:	b.eq	17edc <xregfree@@Base+0x5f0>  // b.none
   17e58:	tst	x4, #0x10000
   17e5c:	add	x10, x9, #0x1
   17e60:	csel	w0, wzr, w0, eq  // eq = none
   17e64:	and	x8, x8, #0xff
   17e68:	str	x10, [x1]
   17e6c:	cbz	x3, 17e74 <xregfree@@Base+0x588>
   17e70:	ldrb	w8, [x3, x8]
   17e74:	cbz	x3, 17e80 <xregfree@@Base+0x594>
   17e78:	ldrb	w9, [x9]
   17e7c:	add	x9, x3, x9
   17e80:	ldrb	w9, [x9]
   17e84:	cmp	w8, w9
   17e88:	b.hi	17edc <xregfree@@Base+0x5f0>  // b.pmore
   17e8c:	add	w9, w9, #0x1
   17e90:	mov	w10, #0x1                   	// #1
   17e94:	b	17eb4 <xregfree@@Base+0x5c8>
   17e98:	lsr	x11, x11, #3
   17e9c:	ldrb	w13, [x5, x11]
   17ea0:	add	w8, w8, #0x1
   17ea4:	cmp	w9, w8
   17ea8:	orr	w12, w13, w12
   17eac:	strb	w12, [x5, x11]
   17eb0:	b.eq	17ed8 <xregfree@@Base+0x5ec>  // b.none
   17eb4:	and	x11, x8, #0xff
   17eb8:	mov	w12, w11
   17ebc:	cbz	x3, 17ec4 <xregfree@@Base+0x5d8>
   17ec0:	ldrb	w12, [x3, x11]
   17ec4:	and	w12, w12, #0x7
   17ec8:	lsl	w12, w10, w12
   17ecc:	cbz	x3, 17e98 <xregfree@@Base+0x5ac>
   17ed0:	ldrb	w11, [x3, x11]
   17ed4:	b	17e98 <xregfree@@Base+0x5ac>
   17ed8:	mov	w0, wzr
   17edc:	ret
   17ee0:	stp	x29, x30, [sp, #-16]!
   17ee4:	cmp	x4, x1
   17ee8:	mov	x29, sp
   17eec:	b.eq	17f00 <xregfree@@Base+0x614>  // b.none
   17ef0:	ldrb	w8, [x4, #-1]!
   17ef4:	cmp	x1, x4
   17ef8:	strb	w8, [x4, #5]
   17efc:	b.ne	17ef0 <xregfree@@Base+0x604>  // b.any
   17f00:	bl	17f0c <xregfree@@Base+0x620>
   17f04:	ldp	x29, x30, [sp], #16
   17f08:	ret
   17f0c:	lsr	w8, w2, #8
   17f10:	lsr	w9, w3, #8
   17f14:	strb	w0, [x1]
   17f18:	strb	w2, [x1, #1]
   17f1c:	strb	w3, [x1, #3]
   17f20:	strb	w8, [x1, #2]
   17f24:	strb	w9, [x1, #4]
   17f28:	ret
   17f2c:	lsr	x8, x1, #32
   17f30:	sub	w8, w8, #0x1
   17f34:	mov	w9, #0x28                  	// #40
   17f38:	tbnz	w8, #31, 17f58 <xregfree@@Base+0x66c>
   17f3c:	smaddl	x10, w8, w9, x0
   17f40:	ldr	w10, [x10, #32]
   17f44:	sub	w8, w8, #0x1
   17f48:	cmp	w10, w2
   17f4c:	b.ne	17f38 <xregfree@@Base+0x64c>  // b.any
   17f50:	mov	w0, #0x1                   	// #1
   17f54:	ret
   17f58:	mov	w0, wzr
   17f5c:	ret

0000000000017f60 <concat_length@@Base>:
   17f60:	sub	sp, sp, #0x120
   17f64:	stp	x29, x30, [sp, #256]
   17f68:	add	x29, sp, #0x100
   17f6c:	mov	x8, #0xffffffffffffffc8    	// #-56
   17f70:	mov	x9, sp
   17f74:	sub	x10, x29, #0x78
   17f78:	movk	x8, #0xff80, lsl #32
   17f7c:	add	x11, x29, #0x20
   17f80:	add	x9, x9, #0x80
   17f84:	add	x10, x10, #0x38
   17f88:	stp	x9, x8, [x29, #-16]
   17f8c:	stp	x11, x10, [x29, #-32]
   17f90:	stp	x1, x2, [x29, #-120]
   17f94:	stp	x3, x4, [x29, #-104]
   17f98:	stp	x5, x6, [x29, #-88]
   17f9c:	stur	x7, [x29, #-72]
   17fa0:	stp	q0, q1, [sp]
   17fa4:	ldp	q0, q1, [x29, #-32]
   17fa8:	sub	x1, x29, #0x40
   17fac:	str	x28, [sp, #272]
   17fb0:	stp	q2, q3, [sp, #32]
   17fb4:	stp	q4, q5, [sp, #64]
   17fb8:	stp	q6, q7, [sp, #96]
   17fbc:	stp	q0, q1, [x29, #-64]
   17fc0:	bl	17fd4 <concat_length@@Base+0x74>
   17fc4:	ldr	x28, [sp, #272]
   17fc8:	ldp	x29, x30, [sp, #256]
   17fcc:	add	sp, sp, #0x120
   17fd0:	ret
   17fd4:	stp	x29, x30, [sp, #-32]!
   17fd8:	stp	x20, x19, [sp, #16]
   17fdc:	mov	x29, sp
   17fe0:	cbz	x0, 18038 <concat_length@@Base+0xd8>
   17fe4:	mov	x19, x1
   17fe8:	mov	x20, xzr
   17fec:	b	18004 <concat_length@@Base+0xa4>
   17ff0:	ldr	x8, [x19]
   17ff4:	add	x9, x8, #0x8
   17ff8:	str	x9, [x19]
   17ffc:	ldr	x0, [x8]
   18000:	cbz	x0, 1803c <concat_length@@Base+0xdc>
   18004:	bl	9110 <strlen@plt>
   18008:	ldrsw	x8, [x19, #24]
   1800c:	add	x20, x0, x20
   18010:	tbz	w8, #31, 17ff0 <concat_length@@Base+0x90>
   18014:	add	w9, w8, #0x8
   18018:	cmp	w9, #0x0
   1801c:	str	w9, [x19, #24]
   18020:	b.gt	17ff0 <concat_length@@Base+0x90>
   18024:	ldr	x9, [x19, #8]
   18028:	add	x8, x9, x8
   1802c:	ldr	x0, [x8]
   18030:	cbnz	x0, 18004 <concat_length@@Base+0xa4>
   18034:	b	1803c <concat_length@@Base+0xdc>
   18038:	mov	x20, xzr
   1803c:	mov	x0, x20
   18040:	ldp	x20, x19, [sp, #16]
   18044:	ldp	x29, x30, [sp], #32
   18048:	ret

000000000001804c <concat_copy@@Base>:
   1804c:	sub	sp, sp, #0x110
   18050:	stp	x29, x30, [sp, #240]
   18054:	add	x29, sp, #0xf0
   18058:	mov	x8, #0xffffffffffffffd0    	// #-48
   1805c:	mov	x9, sp
   18060:	sub	x10, x29, #0x70
   18064:	movk	x8, #0xff80, lsl #32
   18068:	add	x11, x29, #0x20
   1806c:	add	x9, x9, #0x80
   18070:	add	x10, x10, #0x30
   18074:	stp	x9, x8, [x29, #-16]
   18078:	stp	x11, x10, [x29, #-32]
   1807c:	stp	x2, x3, [x29, #-112]
   18080:	stp	x4, x5, [x29, #-96]
   18084:	stp	x6, x7, [x29, #-80]
   18088:	stp	q1, q2, [sp, #16]
   1808c:	str	q0, [sp]
   18090:	ldp	q0, q1, [x29, #-32]
   18094:	sub	x2, x29, #0x40
   18098:	stp	x28, x19, [sp, #256]
   1809c:	mov	x19, x0
   180a0:	stp	q3, q4, [sp, #48]
   180a4:	stp	q5, q6, [sp, #80]
   180a8:	str	q7, [sp, #112]
   180ac:	stp	q0, q1, [x29, #-64]
   180b0:	bl	180c8 <concat_copy@@Base+0x7c>
   180b4:	mov	x0, x19
   180b8:	ldp	x28, x19, [sp, #256]
   180bc:	ldp	x29, x30, [sp, #240]
   180c0:	add	sp, sp, #0x110
   180c4:	ret
   180c8:	stp	x29, x30, [sp, #-48]!
   180cc:	stp	x20, x19, [sp, #32]
   180d0:	mov	x19, x0
   180d4:	stp	x22, x21, [sp, #16]
   180d8:	mov	x29, sp
   180dc:	cbz	x1, 18148 <concat_copy@@Base+0xfc>
   180e0:	mov	x20, x2
   180e4:	mov	x21, x1
   180e8:	b	18100 <concat_copy@@Base+0xb4>
   180ec:	ldr	x8, [x20]
   180f0:	add	x9, x8, #0x8
   180f4:	str	x9, [x20]
   180f8:	ldr	x21, [x8]
   180fc:	cbz	x21, 18148 <concat_copy@@Base+0xfc>
   18100:	mov	x0, x21
   18104:	bl	9110 <strlen@plt>
   18108:	mov	x22, x0
   1810c:	mov	x0, x19
   18110:	mov	x1, x21
   18114:	mov	x2, x22
   18118:	bl	8fb0 <memcpy@plt>
   1811c:	ldrsw	x8, [x20, #24]
   18120:	add	x19, x19, x22
   18124:	tbz	w8, #31, 180ec <concat_copy@@Base+0xa0>
   18128:	add	w9, w8, #0x8
   1812c:	cmp	w9, #0x0
   18130:	str	w9, [x20, #24]
   18134:	b.gt	180ec <concat_copy@@Base+0xa0>
   18138:	ldr	x9, [x20, #8]
   1813c:	add	x8, x9, x8
   18140:	ldr	x21, [x8]
   18144:	cbnz	x21, 18100 <concat_copy@@Base+0xb4>
   18148:	strb	wzr, [x19]
   1814c:	ldp	x20, x19, [sp, #32]
   18150:	ldp	x22, x21, [sp, #16]
   18154:	ldp	x29, x30, [sp], #48
   18158:	ret

000000000001815c <concat_copy2@@Base>:
   1815c:	sub	sp, sp, #0x120
   18160:	stp	x29, x30, [sp, #256]
   18164:	add	x29, sp, #0x100
   18168:	stp	x28, x19, [sp, #272]
   1816c:	stp	x1, x2, [x29, #-120]
   18170:	stp	x3, x4, [x29, #-104]
   18174:	stp	x5, x6, [x29, #-88]
   18178:	stur	x7, [x29, #-72]
   1817c:	stp	q0, q1, [sp]
   18180:	stp	q2, q3, [sp, #32]
   18184:	stp	q4, q5, [sp, #64]
   18188:	adrp	x19, 2e000 <xexit@@Base+0x14c60>
   1818c:	ldr	x19, [x19, #3840]
   18190:	mov	x9, #0xffffffffffffffc8    	// #-56
   18194:	mov	x10, sp
   18198:	sub	x11, x29, #0x78
   1819c:	movk	x9, #0xff80, lsl #32
   181a0:	add	x12, x29, #0x20
   181a4:	add	x10, x10, #0x80
   181a8:	add	x11, x11, #0x38
   181ac:	stp	x10, x9, [x29, #-16]
   181b0:	stp	x12, x11, [x29, #-32]
   181b4:	mov	x8, x0
   181b8:	ldr	x0, [x19]
   181bc:	ldp	q0, q1, [x29, #-32]
   181c0:	sub	x2, x29, #0x40
   181c4:	mov	x1, x8
   181c8:	stp	q6, q7, [sp, #96]
   181cc:	stp	q0, q1, [x29, #-64]
   181d0:	bl	180c8 <concat_copy@@Base+0x7c>
   181d4:	ldr	x0, [x19]
   181d8:	ldp	x28, x19, [sp, #272]
   181dc:	ldp	x29, x30, [sp, #256]
   181e0:	add	sp, sp, #0x120
   181e4:	ret

00000000000181e8 <concat@@Base>:
   181e8:	sub	sp, sp, #0x150
   181ec:	stp	x29, x30, [sp, #256]
   181f0:	add	x29, sp, #0x100
   181f4:	stp	x22, x21, [sp, #304]
   181f8:	mov	x21, #0xffffffffffffffc8    	// #-56
   181fc:	mov	x8, sp
   18200:	sub	x9, x29, #0x78
   18204:	stp	x24, x23, [sp, #288]
   18208:	movk	x21, #0xff80, lsl #32
   1820c:	add	x22, x29, #0x50
   18210:	add	x23, x8, #0x80
   18214:	add	x24, x9, #0x38
   18218:	stp	x23, x21, [x29, #-16]
   1821c:	stp	x22, x24, [x29, #-32]
   18220:	stp	x1, x2, [x29, #-120]
   18224:	stp	x3, x4, [x29, #-104]
   18228:	stp	x5, x6, [x29, #-88]
   1822c:	stur	x7, [x29, #-72]
   18230:	stp	q0, q1, [sp]
   18234:	ldp	q0, q1, [x29, #-32]
   18238:	sub	x1, x29, #0x40
   1823c:	str	x28, [sp, #272]
   18240:	stp	x20, x19, [sp, #320]
   18244:	mov	x19, x0
   18248:	stp	q2, q3, [sp, #32]
   1824c:	stp	q4, q5, [sp, #64]
   18250:	stp	q6, q7, [sp, #96]
   18254:	stp	q0, q1, [x29, #-64]
   18258:	bl	17fd4 <concat_length@@Base+0x74>
   1825c:	add	x0, x0, #0x1
   18260:	bl	9790 <xmalloc@plt>
   18264:	stp	x22, x24, [x29, #-32]
   18268:	stp	x23, x21, [x29, #-16]
   1826c:	ldp	q0, q1, [x29, #-32]
   18270:	sub	x2, x29, #0x40
   18274:	mov	x1, x19
   18278:	mov	x20, x0
   1827c:	stp	q0, q1, [x29, #-64]
   18280:	bl	180c8 <concat_copy@@Base+0x7c>
   18284:	mov	x0, x20
   18288:	ldp	x20, x19, [sp, #320]
   1828c:	ldp	x22, x21, [sp, #304]
   18290:	ldp	x24, x23, [sp, #288]
   18294:	ldr	x28, [sp, #272]
   18298:	ldp	x29, x30, [sp, #256]
   1829c:	add	sp, sp, #0x150
   182a0:	ret

00000000000182a4 <reconcat@@Base>:
   182a4:	sub	sp, sp, #0x140
   182a8:	stp	x29, x30, [sp, #240]
   182ac:	add	x29, sp, #0xf0
   182b0:	stp	x22, x21, [sp, #288]
   182b4:	mov	x22, #0xffffffffffffffd0    	// #-48
   182b8:	mov	x8, sp
   182bc:	sub	x9, x29, #0x70
   182c0:	stp	x28, x25, [sp, #256]
   182c4:	stp	x24, x23, [sp, #272]
   182c8:	movk	x22, #0xff80, lsl #32
   182cc:	add	x23, x29, #0x50
   182d0:	add	x24, x8, #0x80
   182d4:	add	x25, x9, #0x30
   182d8:	stp	x24, x22, [x29, #-16]
   182dc:	stp	x23, x25, [x29, #-32]
   182e0:	stp	x2, x3, [x29, #-112]
   182e4:	stp	x4, x5, [x29, #-96]
   182e8:	stp	x6, x7, [x29, #-80]
   182ec:	stp	q1, q2, [sp, #16]
   182f0:	str	q0, [sp]
   182f4:	ldp	q0, q1, [x29, #-32]
   182f8:	mov	x21, x1
   182fc:	stp	x20, x19, [sp, #304]
   18300:	mov	x19, x0
   18304:	sub	x1, x29, #0x40
   18308:	mov	x0, x21
   1830c:	stp	q3, q4, [sp, #48]
   18310:	stp	q5, q6, [sp, #80]
   18314:	str	q7, [sp, #112]
   18318:	stp	q0, q1, [x29, #-64]
   1831c:	bl	17fd4 <concat_length@@Base+0x74>
   18320:	add	x0, x0, #0x1
   18324:	bl	9790 <xmalloc@plt>
   18328:	stp	x23, x25, [x29, #-32]
   1832c:	stp	x24, x22, [x29, #-16]
   18330:	ldp	q0, q1, [x29, #-32]
   18334:	sub	x2, x29, #0x40
   18338:	mov	x1, x21
   1833c:	mov	x20, x0
   18340:	stp	q0, q1, [x29, #-64]
   18344:	bl	180c8 <concat_copy@@Base+0x7c>
   18348:	cbz	x19, 18354 <reconcat@@Base+0xb0>
   1834c:	mov	x0, x19
   18350:	bl	9240 <free@plt>
   18354:	mov	x0, x20
   18358:	ldp	x20, x19, [sp, #304]
   1835c:	ldp	x22, x21, [sp, #288]
   18360:	ldp	x24, x23, [sp, #272]
   18364:	ldp	x28, x25, [sp, #256]
   18368:	ldp	x29, x30, [sp, #240]
   1836c:	add	sp, sp, #0x140
   18370:	ret
   18374:	lsr	x8, x0, #32
   18378:	mov	w9, #0xadcc                	// #44492
   1837c:	movk	w9, #0xbdec, lsl #16
   18380:	mov	w10, #0x109a                	// #4250
   18384:	sub	w8, w8, w0
   18388:	movk	w10, #0x2, lsl #16
   1838c:	add	w8, w8, w9
   18390:	mov	w9, #0x2785                	// #10117
   18394:	eor	w8, w8, w10
   18398:	movk	w9, #0x5c24, lsl #16
   1839c:	sub	w11, w0, w8
   183a0:	add	w9, w11, w9
   183a4:	mov	w10, #0x5234                	// #21044
   183a8:	eor	w9, w9, w8, lsl #8
   183ac:	movk	w10, #0x4213, lsl #16
   183b0:	add	w11, w8, w9
   183b4:	sub	w10, w10, w11
   183b8:	sub	w8, w8, w9
   183bc:	eor	w10, w10, w9, lsr #13
   183c0:	sub	w8, w8, w10
   183c4:	sub	w9, w9, w10
   183c8:	eor	w8, w8, w10, lsr #12
   183cc:	sub	w9, w9, w8
   183d0:	sub	w10, w10, w8
   183d4:	eor	w9, w9, w8, lsl #16
   183d8:	sub	w10, w10, w9
   183dc:	sub	w8, w8, w9
   183e0:	eor	w10, w10, w9, lsr #5
   183e4:	sub	w8, w8, w10
   183e8:	sub	w9, w9, w10
   183ec:	eor	w8, w8, w10, lsr #3
   183f0:	sub	w9, w9, w8
   183f4:	eor	w9, w9, w8, lsl #10
   183f8:	sub	w8, w10, w8
   183fc:	sub	w8, w8, w9
   18400:	eor	w0, w8, w9, lsr #15
   18404:	ret
   18408:	cmp	x0, x1
   1840c:	cset	w0, eq  // eq = none
   18410:	ret

0000000000018414 <htab_size@@Base>:
   18414:	ldr	x0, [x0, #32]
   18418:	ret

000000000001841c <htab_elements@@Base>:
   1841c:	ldp	x8, x9, [x0, #40]
   18420:	sub	x0, x8, x9
   18424:	ret

0000000000018428 <htab_create_alloc@@Base>:
   18428:	stp	x29, x30, [sp, #-16]!
   1842c:	mov	x6, x5
   18430:	mov	x5, x4
   18434:	mov	x29, sp
   18438:	bl	9310 <htab_create_typed_alloc@plt>
   1843c:	ldp	x29, x30, [sp], #16
   18440:	ret

0000000000018444 <htab_create_typed_alloc@@Base>:
   18444:	stp	x29, x30, [sp, #-80]!
   18448:	stp	x26, x25, [sp, #16]
   1844c:	stp	x24, x23, [sp, #32]
   18450:	stp	x22, x21, [sp, #48]
   18454:	stp	x20, x19, [sp, #64]
   18458:	mov	x29, sp
   1845c:	mov	x19, x6
   18460:	mov	x20, x5
   18464:	mov	x23, x4
   18468:	mov	x21, x3
   1846c:	mov	x22, x2
   18470:	mov	x24, x1
   18474:	bl	185cc <htab_create_alloc_ex@@Base+0xd0>
   18478:	mov	w25, w0
   1847c:	mov	w0, #0x1                   	// #1
   18480:	mov	w1, #0x70                  	// #112
   18484:	blr	x23
   18488:	mov	x23, x0
   1848c:	cbz	x0, 184e0 <htab_create_typed_alloc@@Base+0x9c>
   18490:	mov	w8, w25
   18494:	adrp	x9, 1a000 <xexit@@Base+0xc60>
   18498:	lsl	x8, x8, #4
   1849c:	add	x9, x9, #0x204
   184a0:	ldr	w26, [x9, x8]
   184a4:	mov	w1, #0x8                   	// #8
   184a8:	mov	x0, x26
   184ac:	blr	x20
   184b0:	str	x0, [x23, #24]
   184b4:	cbz	x0, 184d0 <htab_create_typed_alloc@@Base+0x8c>
   184b8:	str	x26, [x23, #32]
   184bc:	str	w25, [x23, #104]
   184c0:	stp	x24, x22, [x23]
   184c4:	str	x21, [x23, #16]
   184c8:	stp	x20, x19, [x23, #64]
   184cc:	b	184e0 <htab_create_typed_alloc@@Base+0x9c>
   184d0:	cbz	x19, 184dc <htab_create_typed_alloc@@Base+0x98>
   184d4:	mov	x0, x23
   184d8:	blr	x19
   184dc:	mov	x23, xzr
   184e0:	mov	x0, x23
   184e4:	ldp	x20, x19, [sp, #64]
   184e8:	ldp	x22, x21, [sp, #48]
   184ec:	ldp	x24, x23, [sp, #32]
   184f0:	ldp	x26, x25, [sp, #16]
   184f4:	ldp	x29, x30, [sp], #80
   184f8:	ret

00000000000184fc <htab_create_alloc_ex@@Base>:
   184fc:	stp	x29, x30, [sp, #-96]!
   18500:	str	x27, [sp, #16]
   18504:	stp	x26, x25, [sp, #32]
   18508:	stp	x24, x23, [sp, #48]
   1850c:	stp	x22, x21, [sp, #64]
   18510:	stp	x20, x19, [sp, #80]
   18514:	mov	x29, sp
   18518:	mov	x19, x6
   1851c:	mov	x21, x5
   18520:	mov	x20, x4
   18524:	mov	x22, x3
   18528:	mov	x24, x2
   1852c:	mov	x25, x1
   18530:	bl	185cc <htab_create_alloc_ex@@Base+0xd0>
   18534:	mov	w26, w0
   18538:	mov	w1, #0x1                   	// #1
   1853c:	mov	w2, #0x70                  	// #112
   18540:	mov	x0, x20
   18544:	blr	x21
   18548:	mov	x23, x0
   1854c:	cbz	x0, 185ac <htab_create_alloc_ex@@Base+0xb0>
   18550:	mov	w8, w26
   18554:	adrp	x9, 1a000 <xexit@@Base+0xc60>
   18558:	lsl	x8, x8, #4
   1855c:	add	x9, x9, #0x204
   18560:	ldr	w27, [x9, x8]
   18564:	mov	w2, #0x8                   	// #8
   18568:	mov	x0, x20
   1856c:	mov	x1, x27
   18570:	blr	x21
   18574:	str	x0, [x23, #24]
   18578:	cbz	x0, 18598 <htab_create_alloc_ex@@Base+0x9c>
   1857c:	str	x27, [x23, #32]
   18580:	str	w26, [x23, #104]
   18584:	stp	x25, x24, [x23]
   18588:	str	x22, [x23, #16]
   1858c:	stp	x20, x21, [x23, #80]
   18590:	str	x19, [x23, #96]
   18594:	b	185ac <htab_create_alloc_ex@@Base+0xb0>
   18598:	cbz	x19, 185a8 <htab_create_alloc_ex@@Base+0xac>
   1859c:	mov	x0, x20
   185a0:	mov	x1, x23
   185a4:	blr	x19
   185a8:	mov	x23, xzr
   185ac:	mov	x0, x23
   185b0:	ldp	x20, x19, [sp, #80]
   185b4:	ldp	x22, x21, [sp, #64]
   185b8:	ldp	x24, x23, [sp, #48]
   185bc:	ldp	x26, x25, [sp, #32]
   185c0:	ldr	x27, [sp, #16]
   185c4:	ldp	x29, x30, [sp], #96
   185c8:	ret
   185cc:	stp	x29, x30, [sp, #-16]!
   185d0:	adrp	x8, 1a000 <xexit@@Base+0xc60>
   185d4:	mov	x2, x0
   185d8:	mov	w0, wzr
   185dc:	mov	w9, #0x1e                  	// #30
   185e0:	add	x8, x8, #0x204
   185e4:	mov	x29, sp
   185e8:	sub	w10, w9, w0
   185ec:	add	w10, w0, w10, lsr #1
   185f0:	lsl	x11, x10, #4
   185f4:	ldr	w11, [x8, x11]
   185f8:	cmp	x11, x2
   185fc:	csel	w9, w9, w10, cc  // cc = lo, ul, last
   18600:	csinc	w0, w0, w10, cs  // cs = hs, nlast
   18604:	cmp	w9, w0
   18608:	b.ne	185e8 <htab_create_alloc_ex@@Base+0xec>  // b.any
   1860c:	mov	w9, w0
   18610:	lsl	x9, x9, #4
   18614:	ldr	w8, [x8, x9]
   18618:	cmp	x8, x2
   1861c:	b.cc	18628 <htab_create_alloc_ex@@Base+0x12c>  // b.lo, b.ul, b.last
   18620:	ldp	x29, x30, [sp], #16
   18624:	ret
   18628:	adrp	x8, 2e000 <xexit@@Base+0x14c60>
   1862c:	ldr	x8, [x8, #3968]
   18630:	adrp	x1, 1a000 <xexit@@Base+0xc60>
   18634:	add	x1, x1, #0x3e4
   18638:	ldr	x0, [x8]
   1863c:	bl	9120 <fprintf@plt>
   18640:	bl	98b0 <abort@plt>

0000000000018644 <htab_set_functions_ex@@Base>:
   18644:	stp	x1, x2, [x0]
   18648:	str	x3, [x0, #16]
   1864c:	stp	x4, x5, [x0, #80]
   18650:	str	x6, [x0, #96]
   18654:	ret

0000000000018658 <htab_create@@Base>:
   18658:	stp	x29, x30, [sp, #-16]!
   1865c:	adrp	x4, 2e000 <xexit@@Base+0x14c60>
   18660:	adrp	x5, 2e000 <xexit@@Base+0x14c60>
   18664:	ldr	x4, [x4, #3872]
   18668:	ldr	x5, [x5, #3392]
   1866c:	mov	x29, sp
   18670:	bl	9190 <htab_create_alloc@plt>
   18674:	ldp	x29, x30, [sp], #16
   18678:	ret

000000000001867c <htab_try_create@@Base>:
   1867c:	stp	x29, x30, [sp, #-16]!
   18680:	adrp	x4, 2e000 <xexit@@Base+0x14c60>
   18684:	adrp	x5, 2e000 <xexit@@Base+0x14c60>
   18688:	ldr	x4, [x4, #3264]
   1868c:	ldr	x5, [x5, #3392]
   18690:	mov	x29, sp
   18694:	bl	9190 <htab_create_alloc@plt>
   18698:	ldp	x29, x30, [sp], #16
   1869c:	ret

00000000000186a0 <htab_delete@@Base>:
   186a0:	stp	x29, x30, [sp, #-48]!
   186a4:	str	x21, [sp, #16]
   186a8:	stp	x20, x19, [sp, #32]
   186ac:	ldp	x8, x20, [x0, #16]
   186b0:	mov	x19, x0
   186b4:	mov	x29, sp
   186b8:	cbz	x8, 186f0 <htab_delete@@Base+0x50>
   186bc:	ldr	w8, [x19, #32]
   186c0:	subs	w8, w8, #0x1
   186c4:	b.mi	186f0 <htab_delete@@Base+0x50>  // b.first
   186c8:	sxtw	x21, w8
   186cc:	b	186d8 <htab_delete@@Base+0x38>
   186d0:	sub	x21, x21, #0x1
   186d4:	tbnz	w21, #31, 186f0 <htab_delete@@Base+0x50>
   186d8:	ldr	x0, [x20, x21, lsl #3]
   186dc:	cmp	x0, #0x2
   186e0:	b.cc	186d0 <htab_delete@@Base+0x30>  // b.lo, b.ul, b.last
   186e4:	ldr	x8, [x19, #16]
   186e8:	blr	x8
   186ec:	b	186d0 <htab_delete@@Base+0x30>
   186f0:	ldr	x8, [x19, #72]
   186f4:	cbz	x8, 18710 <htab_delete@@Base+0x70>
   186f8:	mov	x0, x20
   186fc:	blr	x8
   18700:	ldr	x8, [x19, #72]
   18704:	mov	x0, x19
   18708:	blr	x8
   1870c:	b	18734 <htab_delete@@Base+0x94>
   18710:	ldr	x8, [x19, #96]
   18714:	cbz	x8, 18734 <htab_delete@@Base+0x94>
   18718:	ldr	x0, [x19, #80]
   1871c:	mov	x1, x20
   18720:	blr	x8
   18724:	ldr	x8, [x19, #96]
   18728:	ldr	x0, [x19, #80]
   1872c:	mov	x1, x19
   18730:	blr	x8
   18734:	ldp	x20, x19, [sp, #32]
   18738:	ldr	x21, [sp, #16]
   1873c:	ldp	x29, x30, [sp], #48
   18740:	ret

0000000000018744 <htab_empty@@Base>:
   18744:	stp	x29, x30, [sp, #-48]!
   18748:	stp	x22, x21, [sp, #16]
   1874c:	stp	x20, x19, [sp, #32]
   18750:	ldp	x8, x20, [x0, #16]
   18754:	ldr	x21, [x0, #32]
   18758:	mov	x19, x0
   1875c:	mov	x29, sp
   18760:	cbz	x8, 18794 <htab_empty@@Base+0x50>
   18764:	subs	w8, w21, #0x1
   18768:	b.mi	18794 <htab_empty@@Base+0x50>  // b.first
   1876c:	sxtw	x22, w8
   18770:	b	1877c <htab_empty@@Base+0x38>
   18774:	sub	x22, x22, #0x1
   18778:	tbnz	w22, #31, 18794 <htab_empty@@Base+0x50>
   1877c:	ldr	x0, [x20, x22, lsl #3]
   18780:	cmp	x0, #0x2
   18784:	b.cc	18774 <htab_empty@@Base+0x30>  // b.lo, b.ul, b.last
   18788:	ldr	x8, [x19, #16]
   1878c:	blr	x8
   18790:	b	18774 <htab_empty@@Base+0x30>
   18794:	cmp	x21, #0x20, lsl #12
   18798:	b.ls	187cc <htab_empty@@Base+0x88>  // b.plast
   1879c:	mov	w0, #0x80                  	// #128
   187a0:	bl	185cc <htab_create_alloc_ex@@Base+0xd0>
   187a4:	mov	w20, w0
   187a8:	adrp	x10, 1a000 <xexit@@Base+0xc60>
   187ac:	sbfiz	x9, x20, #4, #32
   187b0:	add	x10, x10, #0x204
   187b4:	ldr	x8, [x19, #72]
   187b8:	ldrsw	x21, [x10, x9]
   187bc:	cbz	x8, 187e0 <htab_empty@@Base+0x9c>
   187c0:	ldr	x0, [x19, #24]
   187c4:	blr	x8
   187c8:	b	187f4 <htab_empty@@Base+0xb0>
   187cc:	lsl	x2, x21, #3
   187d0:	mov	x0, x20
   187d4:	mov	w1, wzr
   187d8:	bl	9250 <memset@plt>
   187dc:	b	18828 <htab_empty@@Base+0xe4>
   187e0:	ldr	x8, [x19, #96]
   187e4:	cbz	x8, 187f4 <htab_empty@@Base+0xb0>
   187e8:	ldr	x0, [x19, #80]
   187ec:	ldr	x1, [x19, #24]
   187f0:	blr	x8
   187f4:	ldr	x8, [x19, #88]
   187f8:	cbz	x8, 18810 <htab_empty@@Base+0xcc>
   187fc:	ldr	x0, [x19, #80]
   18800:	mov	w2, #0x8                   	// #8
   18804:	mov	x1, x21
   18808:	blr	x8
   1880c:	b	18820 <htab_empty@@Base+0xdc>
   18810:	ldr	x8, [x19, #64]
   18814:	mov	w1, #0x8                   	// #8
   18818:	mov	x0, x21
   1881c:	blr	x8
   18820:	stp	x0, x21, [x19, #24]
   18824:	str	w20, [x19, #104]
   18828:	stp	xzr, xzr, [x19, #40]
   1882c:	ldp	x20, x19, [sp, #32]
   18830:	ldp	x22, x21, [sp, #16]
   18834:	ldp	x29, x30, [sp], #48
   18838:	ret

000000000001883c <htab_find_with_hash@@Base>:
   1883c:	stp	x29, x30, [sp, #-64]!
   18840:	stp	x24, x23, [sp, #16]
   18844:	stp	x22, x21, [sp, #32]
   18848:	stp	x20, x19, [sp, #48]
   1884c:	ldr	w8, [x0, #56]
   18850:	ldr	x24, [x0, #32]
   18854:	mov	x20, x0
   18858:	mov	x19, x1
   1885c:	add	w8, w8, #0x1
   18860:	str	w8, [x0, #56]
   18864:	mov	w0, w2
   18868:	mov	x1, x20
   1886c:	mov	x29, sp
   18870:	mov	w23, w2
   18874:	bl	18910 <htab_find_with_hash@@Base+0xd4>
   18878:	ldr	x8, [x20, #24]
   1887c:	ldr	x22, [x8, w0, uxtw #3]
   18880:	cbz	x22, 188f8 <htab_find_with_hash@@Base+0xbc>
   18884:	mov	w21, w0
   18888:	cmp	x22, #0x1
   1888c:	b.eq	188a4 <htab_find_with_hash@@Base+0x68>  // b.none
   18890:	ldr	x8, [x20, #8]
   18894:	mov	x0, x22
   18898:	mov	x1, x19
   1889c:	blr	x8
   188a0:	cbnz	w0, 188f8 <htab_find_with_hash@@Base+0xbc>
   188a4:	mov	w0, w23
   188a8:	mov	x1, x20
   188ac:	bl	1893c <htab_find_with_hash@@Base+0x100>
   188b0:	mov	w23, w0
   188b4:	ldr	w8, [x20, #60]
   188b8:	add	w9, w21, w23
   188bc:	ldr	x10, [x20, #24]
   188c0:	cmp	x24, x9
   188c4:	csel	w11, wzr, w24, hi  // hi = pmore
   188c8:	add	w8, w8, #0x1
   188cc:	str	w8, [x20, #60]
   188d0:	sub	w21, w9, w11
   188d4:	ldr	x22, [x10, w21, uxtw #3]
   188d8:	cmp	x22, #0x1
   188dc:	b.eq	188b4 <htab_find_with_hash@@Base+0x78>  // b.none
   188e0:	cbz	x22, 188f8 <htab_find_with_hash@@Base+0xbc>
   188e4:	ldr	x8, [x20, #8]
   188e8:	mov	x0, x22
   188ec:	mov	x1, x19
   188f0:	blr	x8
   188f4:	cbz	w0, 188b4 <htab_find_with_hash@@Base+0x78>
   188f8:	mov	x0, x22
   188fc:	ldp	x20, x19, [sp, #48]
   18900:	ldp	x22, x21, [sp, #32]
   18904:	ldp	x24, x23, [sp, #16]
   18908:	ldp	x29, x30, [sp], #64
   1890c:	ret
   18910:	stp	x29, x30, [sp, #-16]!
   18914:	ldr	w8, [x1, #104]
   18918:	adrp	x9, 1a000 <xexit@@Base+0xc60>
   1891c:	add	x9, x9, #0x204
   18920:	mov	x29, sp
   18924:	add	x8, x9, x8, lsl #4
   18928:	ldp	w1, w2, [x8]
   1892c:	ldr	w3, [x8, #12]
   18930:	bl	19124 <iterative_hash@@Base+0x264>
   18934:	ldp	x29, x30, [sp], #16
   18938:	ret
   1893c:	stp	x29, x30, [sp, #-16]!
   18940:	ldr	w8, [x1, #104]
   18944:	adrp	x9, 1a000 <xexit@@Base+0xc60>
   18948:	add	x9, x9, #0x204
   1894c:	mov	x29, sp
   18950:	add	x8, x9, x8, lsl #4
   18954:	ldr	w9, [x8]
   18958:	ldp	w2, w3, [x8, #8]
   1895c:	sub	w1, w9, #0x2
   18960:	bl	19124 <iterative_hash@@Base+0x264>
   18964:	add	w0, w0, #0x1
   18968:	ldp	x29, x30, [sp], #16
   1896c:	ret

0000000000018970 <htab_find@@Base>:
   18970:	stp	x29, x30, [sp, #-32]!
   18974:	stp	x20, x19, [sp, #16]
   18978:	ldr	x8, [x0]
   1897c:	mov	x19, x0
   18980:	mov	x0, x1
   18984:	mov	x29, sp
   18988:	mov	x20, x1
   1898c:	blr	x8
   18990:	mov	w2, w0
   18994:	mov	x0, x19
   18998:	mov	x1, x20
   1899c:	bl	9960 <htab_find_with_hash@plt>
   189a0:	ldp	x20, x19, [sp, #16]
   189a4:	ldp	x29, x30, [sp], #32
   189a8:	ret

00000000000189ac <htab_find_slot_with_hash@@Base>:
   189ac:	stp	x29, x30, [sp, #-80]!
   189b0:	stp	x24, x23, [sp, #32]
   189b4:	stp	x22, x21, [sp, #48]
   189b8:	stp	x20, x19, [sp, #64]
   189bc:	str	x25, [sp, #16]
   189c0:	ldr	x25, [x0, #32]
   189c4:	mov	w20, w3
   189c8:	mov	w24, w2
   189cc:	mov	x19, x0
   189d0:	cmp	w3, #0x1
   189d4:	mov	x21, x1
   189d8:	mov	x29, sp
   189dc:	b.ne	18a00 <htab_find_slot_with_hash@@Base+0x54>  // b.any
   189e0:	ldr	x8, [x19, #40]
   189e4:	add	x9, x25, x25, lsl #1
   189e8:	cmp	x9, x8, lsl #2
   189ec:	b.hi	18a00 <htab_find_slot_with_hash@@Base+0x54>  // b.pmore
   189f0:	mov	x0, x19
   189f4:	bl	18b20 <htab_find_slot_with_hash@@Base+0x174>
   189f8:	cbz	w0, 18a74 <htab_find_slot_with_hash@@Base+0xc8>
   189fc:	ldr	x25, [x19, #32]
   18a00:	mov	w0, w24
   18a04:	mov	x1, x19
   18a08:	bl	18910 <htab_find_with_hash@@Base+0xd4>
   18a0c:	ldr	w8, [x19, #56]
   18a10:	ldr	x9, [x19, #24]
   18a14:	mov	w22, w0
   18a18:	add	w8, w8, #0x1
   18a1c:	str	w8, [x19, #56]
   18a20:	add	x23, x9, w0, uxtw #3
   18a24:	ldr	x0, [x23]
   18a28:	cbz	x0, 18a54 <htab_find_slot_with_hash@@Base+0xa8>
   18a2c:	cmp	x0, #0x1
   18a30:	b.eq	18a80 <htab_find_slot_with_hash@@Base+0xd4>  // b.none
   18a34:	ldr	x8, [x19, #8]
   18a38:	mov	x1, x21
   18a3c:	blr	x8
   18a40:	cbz	w0, 18a7c <htab_find_slot_with_hash@@Base+0xd0>
   18a44:	ldr	x8, [x19, #24]
   18a48:	mov	w9, w22
   18a4c:	add	x23, x8, x9, lsl #3
   18a50:	b	18b04 <htab_find_slot_with_hash@@Base+0x158>
   18a54:	mov	x23, xzr
   18a58:	cbz	w20, 18a74 <htab_find_slot_with_hash@@Base+0xc8>
   18a5c:	cbz	x23, 18af0 <htab_find_slot_with_hash@@Base+0x144>
   18a60:	ldr	x8, [x19, #48]
   18a64:	sub	x8, x8, #0x1
   18a68:	str	x8, [x19, #48]
   18a6c:	str	xzr, [x23]
   18a70:	b	18b04 <htab_find_slot_with_hash@@Base+0x158>
   18a74:	mov	x23, xzr
   18a78:	b	18b04 <htab_find_slot_with_hash@@Base+0x158>
   18a7c:	mov	x23, xzr
   18a80:	mov	w0, w24
   18a84:	mov	x1, x19
   18a88:	bl	1893c <htab_find_with_hash@@Base+0x100>
   18a8c:	mov	w24, w0
   18a90:	ldr	w8, [x19, #60]
   18a94:	add	w9, w22, w24
   18a98:	ldr	x10, [x19, #24]
   18a9c:	cmp	x25, x9
   18aa0:	csel	w11, wzr, w25, hi  // hi = pmore
   18aa4:	sub	w22, w9, w11
   18aa8:	add	w8, w8, #0x1
   18aac:	str	w8, [x19, #60]
   18ab0:	add	x8, x10, w22, uxtw #3
   18ab4:	ldr	x0, [x8]
   18ab8:	cbz	x0, 18a58 <htab_find_slot_with_hash@@Base+0xac>
   18abc:	cmp	x0, #0x1
   18ac0:	b.eq	18ad8 <htab_find_slot_with_hash@@Base+0x12c>  // b.none
   18ac4:	ldr	x8, [x19, #8]
   18ac8:	mov	x1, x21
   18acc:	blr	x8
   18ad0:	cbz	w0, 18a90 <htab_find_slot_with_hash@@Base+0xe4>
   18ad4:	b	18ae4 <htab_find_slot_with_hash@@Base+0x138>
   18ad8:	cmp	x23, #0x0
   18adc:	csel	x23, x8, x23, eq  // eq = none
   18ae0:	b	18a90 <htab_find_slot_with_hash@@Base+0xe4>
   18ae4:	ldr	x8, [x19, #24]
   18ae8:	add	x23, x8, w22, uxtw #3
   18aec:	b	18b04 <htab_find_slot_with_hash@@Base+0x158>
   18af0:	ldr	x8, [x19, #40]
   18af4:	ldr	x9, [x19, #24]
   18af8:	add	x8, x8, #0x1
   18afc:	add	x23, x9, w22, uxtw #3
   18b00:	str	x8, [x19, #40]
   18b04:	mov	x0, x23
   18b08:	ldp	x20, x19, [sp, #64]
   18b0c:	ldp	x22, x21, [sp, #48]
   18b10:	ldp	x24, x23, [sp, #32]
   18b14:	ldr	x25, [sp, #16]
   18b18:	ldp	x29, x30, [sp], #80
   18b1c:	ret
   18b20:	stp	x29, x30, [sp, #-64]!
   18b24:	str	x23, [sp, #16]
   18b28:	stp	x22, x21, [sp, #32]
   18b2c:	stp	x20, x19, [sp, #48]
   18b30:	ldp	x8, x9, [x0, #40]
   18b34:	ldp	x19, x23, [x0, #24]
   18b38:	mov	x20, x0
   18b3c:	mov	x29, sp
   18b40:	sub	x8, x8, x9
   18b44:	lsl	x0, x8, #1
   18b48:	cmp	x0, x23
   18b4c:	b.hi	18b6c <htab_find_slot_with_hash@@Base+0x1c0>  // b.pmore
   18b50:	ldr	w21, [x20, #104]
   18b54:	cmp	x23, #0x21
   18b58:	b.cc	18ba8 <htab_find_slot_with_hash@@Base+0x1fc>  // b.lo, b.ul, b.last
   18b5c:	lsl	x8, x8, #3
   18b60:	cmp	x8, x23
   18b64:	mov	x22, x23
   18b68:	b.cs	18b88 <htab_find_slot_with_hash@@Base+0x1dc>  // b.hs, b.nlast
   18b6c:	bl	185cc <htab_create_alloc_ex@@Base+0xd0>
   18b70:	mov	w8, w0
   18b74:	adrp	x9, 1a000 <xexit@@Base+0xc60>
   18b78:	lsl	x8, x8, #4
   18b7c:	add	x9, x9, #0x204
   18b80:	ldr	w22, [x9, x8]
   18b84:	mov	w21, w0
   18b88:	ldr	x8, [x20, #88]
   18b8c:	cbz	x8, 18bb4 <htab_find_slot_with_hash@@Base+0x208>
   18b90:	ldr	x0, [x20, #80]
   18b94:	mov	w2, #0x8                   	// #8
   18b98:	mov	x1, x22
   18b9c:	blr	x8
   18ba0:	cbnz	x0, 18bc8 <htab_find_slot_with_hash@@Base+0x21c>
   18ba4:	b	18c4c <htab_find_slot_with_hash@@Base+0x2a0>
   18ba8:	mov	x22, x23
   18bac:	ldr	x8, [x20, #88]
   18bb0:	cbnz	x8, 18b90 <htab_find_slot_with_hash@@Base+0x1e4>
   18bb4:	ldr	x8, [x20, #64]
   18bb8:	mov	w1, #0x8                   	// #8
   18bbc:	mov	x0, x22
   18bc0:	blr	x8
   18bc4:	cbz	x0, 18c4c <htab_find_slot_with_hash@@Base+0x2a0>
   18bc8:	ldp	x9, x8, [x20, #40]
   18bcc:	add	x23, x19, x23, lsl #3
   18bd0:	stp	x0, x22, [x20, #24]
   18bd4:	mov	x22, x19
   18bd8:	sub	x8, x9, x8
   18bdc:	str	w21, [x20, #104]
   18be0:	stp	x8, xzr, [x20, #40]
   18be4:	b	18bf4 <htab_find_slot_with_hash@@Base+0x248>
   18be8:	add	x22, x22, #0x8
   18bec:	cmp	x22, x23
   18bf0:	b.cs	18c20 <htab_find_slot_with_hash@@Base+0x274>  // b.hs, b.nlast
   18bf4:	ldr	x21, [x22]
   18bf8:	cmp	x21, #0x2
   18bfc:	b.cc	18be8 <htab_find_slot_with_hash@@Base+0x23c>  // b.lo, b.ul, b.last
   18c00:	ldr	x8, [x20]
   18c04:	mov	x0, x21
   18c08:	blr	x8
   18c0c:	mov	w1, w0
   18c10:	mov	x0, x20
   18c14:	bl	19140 <iterative_hash@@Base+0x280>
   18c18:	str	x21, [x0]
   18c1c:	b	18be8 <htab_find_slot_with_hash@@Base+0x23c>
   18c20:	ldr	x8, [x20, #72]
   18c24:	cbz	x8, 18c34 <htab_find_slot_with_hash@@Base+0x288>
   18c28:	mov	x0, x19
   18c2c:	blr	x8
   18c30:	b	18c48 <htab_find_slot_with_hash@@Base+0x29c>
   18c34:	ldr	x8, [x20, #96]
   18c38:	cbz	x8, 18c48 <htab_find_slot_with_hash@@Base+0x29c>
   18c3c:	ldr	x0, [x20, #80]
   18c40:	mov	x1, x19
   18c44:	blr	x8
   18c48:	mov	w0, #0x1                   	// #1
   18c4c:	ldp	x20, x19, [sp, #48]
   18c50:	ldp	x22, x21, [sp, #32]
   18c54:	ldr	x23, [sp, #16]
   18c58:	ldp	x29, x30, [sp], #64
   18c5c:	ret

0000000000018c60 <htab_find_slot@@Base>:
   18c60:	stp	x29, x30, [sp, #-48]!
   18c64:	stp	x20, x19, [sp, #32]
   18c68:	ldr	x8, [x0]
   18c6c:	mov	x20, x0
   18c70:	mov	x0, x1
   18c74:	str	x21, [sp, #16]
   18c78:	mov	x29, sp
   18c7c:	mov	w19, w2
   18c80:	mov	x21, x1
   18c84:	blr	x8
   18c88:	mov	w2, w0
   18c8c:	mov	x0, x20
   18c90:	mov	x1, x21
   18c94:	mov	w3, w19
   18c98:	bl	92f0 <htab_find_slot_with_hash@plt>
   18c9c:	ldp	x20, x19, [sp, #32]
   18ca0:	ldr	x21, [sp, #16]
   18ca4:	ldp	x29, x30, [sp], #48
   18ca8:	ret

0000000000018cac <htab_remove_elt@@Base>:
   18cac:	stp	x29, x30, [sp, #-32]!
   18cb0:	stp	x20, x19, [sp, #16]
   18cb4:	ldr	x8, [x0]
   18cb8:	mov	x19, x0
   18cbc:	mov	x0, x1
   18cc0:	mov	x29, sp
   18cc4:	mov	x20, x1
   18cc8:	blr	x8
   18ccc:	mov	w2, w0
   18cd0:	mov	x0, x19
   18cd4:	mov	x1, x20
   18cd8:	bl	9670 <htab_remove_elt_with_hash@plt>
   18cdc:	ldp	x20, x19, [sp, #16]
   18ce0:	ldp	x29, x30, [sp], #32
   18ce4:	ret

0000000000018ce8 <htab_remove_elt_with_hash@@Base>:
   18ce8:	stp	x29, x30, [sp, #-32]!
   18cec:	mov	w3, wzr
   18cf0:	stp	x20, x19, [sp, #16]
   18cf4:	mov	x29, sp
   18cf8:	mov	x19, x0
   18cfc:	bl	92f0 <htab_find_slot_with_hash@plt>
   18d00:	cbz	x0, 18d2c <htab_remove_elt_with_hash@@Base+0x44>
   18d04:	ldr	x8, [x19, #16]
   18d08:	mov	x20, x0
   18d0c:	cbz	x8, 18d18 <htab_remove_elt_with_hash@@Base+0x30>
   18d10:	ldr	x0, [x20]
   18d14:	blr	x8
   18d18:	mov	w8, #0x1                   	// #1
   18d1c:	str	x8, [x20]
   18d20:	ldr	x8, [x19, #48]
   18d24:	add	x8, x8, #0x1
   18d28:	str	x8, [x19, #48]
   18d2c:	ldp	x20, x19, [sp, #16]
   18d30:	ldp	x29, x30, [sp], #32
   18d34:	ret

0000000000018d38 <htab_clear_slot@@Base>:
   18d38:	stp	x29, x30, [sp, #-32]!
   18d3c:	stp	x20, x19, [sp, #16]
   18d40:	ldr	x8, [x0, #24]
   18d44:	mov	x29, sp
   18d48:	cmp	x8, x1
   18d4c:	b.hi	18da0 <htab_clear_slot@@Base+0x68>  // b.pmore
   18d50:	ldr	x9, [x0, #32]
   18d54:	mov	x19, x0
   18d58:	mov	x20, x1
   18d5c:	add	x8, x8, x9, lsl #3
   18d60:	cmp	x8, x1
   18d64:	b.ls	18da0 <htab_clear_slot@@Base+0x68>  // b.plast
   18d68:	ldr	x0, [x20]
   18d6c:	cmp	x0, #0x1
   18d70:	b.ls	18da0 <htab_clear_slot@@Base+0x68>  // b.plast
   18d74:	ldr	x8, [x19, #16]
   18d78:	cbz	x8, 18d80 <htab_clear_slot@@Base+0x48>
   18d7c:	blr	x8
   18d80:	mov	w8, #0x1                   	// #1
   18d84:	str	x8, [x20]
   18d88:	ldr	x8, [x19, #48]
   18d8c:	add	x8, x8, #0x1
   18d90:	str	x8, [x19, #48]
   18d94:	ldp	x20, x19, [sp, #16]
   18d98:	ldp	x29, x30, [sp], #32
   18d9c:	ret
   18da0:	bl	98b0 <abort@plt>

0000000000018da4 <htab_traverse_noresize@@Base>:
   18da4:	stp	x29, x30, [sp, #-48]!
   18da8:	stp	x22, x21, [sp, #16]
   18dac:	stp	x20, x19, [sp, #32]
   18db0:	ldp	x21, x8, [x0, #24]
   18db4:	mov	x19, x2
   18db8:	mov	x20, x1
   18dbc:	mov	x29, sp
   18dc0:	add	x22, x21, x8, lsl #3
   18dc4:	b	18dd4 <htab_traverse_noresize@@Base+0x30>
   18dc8:	add	x21, x21, #0x8
   18dcc:	cmp	x21, x22
   18dd0:	b.cs	18df0 <htab_traverse_noresize@@Base+0x4c>  // b.hs, b.nlast
   18dd4:	ldr	x8, [x21]
   18dd8:	cmp	x8, #0x2
   18ddc:	b.cc	18dc8 <htab_traverse_noresize@@Base+0x24>  // b.lo, b.ul, b.last
   18de0:	mov	x0, x21
   18de4:	mov	x1, x19
   18de8:	blr	x20
   18dec:	cbnz	w0, 18dc8 <htab_traverse_noresize@@Base+0x24>
   18df0:	ldp	x20, x19, [sp, #32]
   18df4:	ldp	x22, x21, [sp, #16]
   18df8:	ldp	x29, x30, [sp], #48
   18dfc:	ret

0000000000018e00 <htab_traverse@@Base>:
   18e00:	stp	x29, x30, [sp, #-48]!
   18e04:	stp	x20, x19, [sp, #32]
   18e08:	ldr	x8, [x0, #32]
   18e0c:	str	x21, [sp, #16]
   18e10:	mov	x19, x2
   18e14:	mov	x20, x0
   18e18:	cmp	x8, #0x21
   18e1c:	mov	x21, x1
   18e20:	mov	x29, sp
   18e24:	b.cc	18e44 <htab_traverse@@Base+0x44>  // b.lo, b.ul, b.last
   18e28:	ldp	x9, x10, [x20, #40]
   18e2c:	sub	x9, x9, x10
   18e30:	lsl	x9, x9, #3
   18e34:	cmp	x9, x8
   18e38:	b.cs	18e44 <htab_traverse@@Base+0x44>  // b.hs, b.nlast
   18e3c:	mov	x0, x20
   18e40:	bl	18b20 <htab_find_slot_with_hash@@Base+0x174>
   18e44:	mov	x0, x20
   18e48:	mov	x1, x21
   18e4c:	mov	x2, x19
   18e50:	bl	9760 <htab_traverse_noresize@plt>
   18e54:	ldp	x20, x19, [sp, #32]
   18e58:	ldr	x21, [sp, #16]
   18e5c:	ldp	x29, x30, [sp], #48
   18e60:	ret

0000000000018e64 <htab_collisions@@Base>:
   18e64:	ldr	w8, [x0, #56]
   18e68:	cbz	w8, 18e80 <htab_collisions@@Base+0x1c>
   18e6c:	ldr	s0, [x0, #60]
   18e70:	ucvtf	d1, w8
   18e74:	ucvtf	d0, d0
   18e78:	fdiv	d0, d0, d1
   18e7c:	ret
   18e80:	fmov	d0, xzr
   18e84:	ret

0000000000018e88 <htab_hash_string@@Base>:
   18e88:	ldrb	w9, [x0]
   18e8c:	cbz	w9, 18eb8 <htab_hash_string@@Base+0x30>
   18e90:	mov	x8, x0
   18e94:	mov	w0, wzr
   18e98:	add	x8, x8, #0x1
   18e9c:	mov	w10, #0x43                  	// #67
   18ea0:	mul	w11, w0, w10
   18ea4:	add	w11, w11, w9, uxtb
   18ea8:	ldrb	w9, [x8], #1
   18eac:	sub	w0, w11, #0x71
   18eb0:	cbnz	w9, 18ea0 <htab_hash_string@@Base+0x18>
   18eb4:	ret
   18eb8:	mov	w0, wzr
   18ebc:	ret

0000000000018ec0 <iterative_hash@@Base>:
   18ec0:	tst	x0, #0x3
   18ec4:	b.eq	18f78 <iterative_hash@@Base+0xb8>  // b.none
   18ec8:	mov	w8, #0x79b9                	// #31161
   18ecc:	cmp	w1, #0xc
   18ed0:	movk	w8, #0x9e37, lsl #16
   18ed4:	b.cc	19028 <iterative_hash@@Base+0x168>  // b.lo, b.ul, b.last
   18ed8:	mov	w9, #0x79b9                	// #31161
   18edc:	mov	w10, w1
   18ee0:	movk	w9, #0x9e37, lsl #16
   18ee4:	ldp	w11, w12, [x0]
   18ee8:	sub	w10, w10, #0xc
   18eec:	cmp	w10, #0xb
   18ef0:	add	w9, w11, w9
   18ef4:	ldr	w11, [x0, #8]
   18ef8:	add	w8, w12, w8
   18efc:	sub	w9, w9, w8
   18f00:	add	x0, x0, #0xc
   18f04:	add	w11, w11, w2
   18f08:	sub	w9, w9, w11
   18f0c:	sub	w8, w8, w11
   18f10:	eor	w9, w9, w11, lsr #13
   18f14:	sub	w8, w8, w9
   18f18:	sub	w11, w11, w9
   18f1c:	eor	w8, w8, w9, lsl #8
   18f20:	sub	w11, w11, w8
   18f24:	sub	w9, w9, w8
   18f28:	eor	w11, w11, w8, lsr #13
   18f2c:	sub	w9, w9, w11
   18f30:	sub	w8, w8, w11
   18f34:	eor	w9, w9, w11, lsr #12
   18f38:	sub	w8, w8, w9
   18f3c:	sub	w11, w11, w9
   18f40:	eor	w8, w8, w9, lsl #16
   18f44:	sub	w11, w11, w8
   18f48:	sub	w9, w9, w8
   18f4c:	eor	w11, w11, w8, lsr #5
   18f50:	sub	w9, w9, w11
   18f54:	sub	w8, w8, w11
   18f58:	eor	w9, w9, w11, lsr #3
   18f5c:	sub	w8, w8, w9
   18f60:	sub	w11, w11, w9
   18f64:	eor	w8, w8, w9, lsl #10
   18f68:	sub	w11, w11, w8
   18f6c:	eor	w2, w11, w8, lsr #15
   18f70:	b.hi	18ee4 <iterative_hash@@Base+0x24>  // b.pmore
   18f74:	b	19034 <iterative_hash@@Base+0x174>
   18f78:	mov	w8, #0x79b9                	// #31161
   18f7c:	cmp	w1, #0xc
   18f80:	movk	w8, #0x9e37, lsl #16
   18f84:	b.cc	19028 <iterative_hash@@Base+0x168>  // b.lo, b.ul, b.last
   18f88:	mov	w9, #0x79b9                	// #31161
   18f8c:	mov	w10, w1
   18f90:	movk	w9, #0x9e37, lsl #16
   18f94:	ldp	w11, w12, [x0]
   18f98:	sub	w10, w10, #0xc
   18f9c:	cmp	w10, #0xb
   18fa0:	add	w9, w11, w9
   18fa4:	ldr	w11, [x0, #8]
   18fa8:	add	w8, w12, w8
   18fac:	sub	w9, w9, w8
   18fb0:	add	x0, x0, #0xc
   18fb4:	add	w11, w11, w2
   18fb8:	sub	w9, w9, w11
   18fbc:	sub	w8, w8, w11
   18fc0:	eor	w9, w9, w11, lsr #13
   18fc4:	sub	w8, w8, w9
   18fc8:	sub	w11, w11, w9
   18fcc:	eor	w8, w8, w9, lsl #8
   18fd0:	sub	w11, w11, w8
   18fd4:	sub	w9, w9, w8
   18fd8:	eor	w11, w11, w8, lsr #13
   18fdc:	sub	w9, w9, w11
   18fe0:	sub	w8, w8, w11
   18fe4:	eor	w9, w9, w11, lsr #12
   18fe8:	sub	w8, w8, w9
   18fec:	sub	w11, w11, w9
   18ff0:	eor	w8, w8, w9, lsl #16
   18ff4:	sub	w11, w11, w8
   18ff8:	sub	w9, w9, w8
   18ffc:	eor	w11, w11, w8, lsr #5
   19000:	sub	w9, w9, w11
   19004:	sub	w8, w8, w11
   19008:	eor	w9, w9, w11, lsr #3
   1900c:	sub	w8, w8, w9
   19010:	sub	w11, w11, w9
   19014:	eor	w8, w8, w9, lsl #10
   19018:	sub	w11, w11, w8
   1901c:	eor	w2, w11, w8, lsr #15
   19020:	b.hi	18f94 <iterative_hash@@Base+0xd4>  // b.pmore
   19024:	b	19034 <iterative_hash@@Base+0x174>
   19028:	mov	w9, #0x79b9                	// #31161
   1902c:	movk	w9, #0x9e37, lsl #16
   19030:	mov	w10, w1
   19034:	sub	w11, w10, #0x1
   19038:	cmp	w11, #0xa
   1903c:	add	w10, w2, w1
   19040:	b.hi	190b4 <iterative_hash@@Base+0x1f4>  // b.pmore
   19044:	adrp	x12, 1a000 <xexit@@Base+0xc60>
   19048:	add	x12, x12, #0x1f8
   1904c:	adr	x13, 1905c <iterative_hash@@Base+0x19c>
   19050:	ldrb	w14, [x12, x11]
   19054:	add	x13, x13, x14, lsl #2
   19058:	br	x13
   1905c:	ldrb	w11, [x0, #10]
   19060:	add	w10, w10, w11, lsl #24
   19064:	ldrb	w11, [x0, #9]
   19068:	add	w10, w10, w11, lsl #16
   1906c:	ldrb	w11, [x0, #8]
   19070:	add	w10, w10, w11, lsl #8
   19074:	ldrb	w11, [x0, #7]
   19078:	add	w8, w8, w11, lsl #24
   1907c:	ldrb	w11, [x0, #6]
   19080:	add	w8, w8, w11, lsl #16
   19084:	ldrb	w11, [x0, #5]
   19088:	add	w8, w8, w11, lsl #8
   1908c:	ldrb	w11, [x0, #4]
   19090:	add	w8, w8, w11
   19094:	ldrb	w11, [x0, #3]
   19098:	add	w9, w9, w11, lsl #24
   1909c:	ldrb	w11, [x0, #2]
   190a0:	add	w9, w9, w11, lsl #16
   190a4:	ldrb	w11, [x0, #1]
   190a8:	add	w9, w9, w11, lsl #8
   190ac:	ldrb	w11, [x0]
   190b0:	add	w9, w9, w11
   190b4:	sub	w9, w9, w8
   190b8:	sub	w9, w9, w10
   190bc:	sub	w8, w8, w10
   190c0:	eor	w9, w9, w10, lsr #13
   190c4:	sub	w8, w8, w9
   190c8:	sub	w10, w10, w9
   190cc:	eor	w8, w8, w9, lsl #8
   190d0:	sub	w10, w10, w8
   190d4:	sub	w9, w9, w8
   190d8:	eor	w10, w10, w8, lsr #13
   190dc:	sub	w9, w9, w10
   190e0:	sub	w8, w8, w10
   190e4:	eor	w9, w9, w10, lsr #12
   190e8:	sub	w8, w8, w9
   190ec:	sub	w10, w10, w9
   190f0:	eor	w8, w8, w9, lsl #16
   190f4:	sub	w10, w10, w8
   190f8:	sub	w9, w9, w8
   190fc:	eor	w10, w10, w8, lsr #5
   19100:	sub	w9, w9, w10
   19104:	sub	w8, w8, w10
   19108:	eor	w9, w9, w10, lsr #3
   1910c:	sub	w8, w8, w9
   19110:	eor	w8, w8, w9, lsl #10
   19114:	sub	w9, w10, w9
   19118:	sub	w9, w9, w8
   1911c:	eor	w0, w9, w8, lsr #15
   19120:	ret
   19124:	umull	x8, w2, w0
   19128:	lsr	x8, x8, #32
   1912c:	sub	w9, w0, w8
   19130:	add	w8, w8, w9, lsr #1
   19134:	lsr	w8, w8, w3
   19138:	msub	w0, w8, w1, w0
   1913c:	ret
   19140:	stp	x29, x30, [sp, #-64]!
   19144:	stp	x20, x19, [sp, #48]
   19148:	mov	x20, x0
   1914c:	stp	x22, x21, [sp, #32]
   19150:	mov	w21, w1
   19154:	mov	w0, w1
   19158:	mov	x1, x20
   1915c:	str	x23, [sp, #16]
   19160:	mov	x29, sp
   19164:	bl	18910 <htab_find_with_hash@@Base+0xd4>
   19168:	ldr	x22, [x20, #24]
   1916c:	add	x8, x22, w0, uxtw #3
   19170:	ldr	x9, [x8]
   19174:	cbz	x9, 191bc <iterative_hash@@Base+0x2fc>
   19178:	cmp	x9, #0x1
   1917c:	b.eq	191b8 <iterative_hash@@Base+0x2f8>  // b.none
   19180:	ldr	x23, [x20, #32]
   19184:	mov	w19, w0
   19188:	mov	w0, w21
   1918c:	mov	x1, x20
   19190:	bl	1893c <htab_find_with_hash@@Base+0x100>
   19194:	add	w8, w19, w0
   19198:	cmp	x23, x8
   1919c:	csel	w9, wzr, w23, hi  // hi = pmore
   191a0:	sub	w19, w8, w9
   191a4:	add	x8, x22, w19, uxtw #3
   191a8:	ldr	x9, [x8]
   191ac:	cbz	x9, 191bc <iterative_hash@@Base+0x2fc>
   191b0:	cmp	x9, #0x1
   191b4:	b.ne	19194 <iterative_hash@@Base+0x2d4>  // b.any
   191b8:	bl	98b0 <abort@plt>
   191bc:	ldp	x20, x19, [sp, #48]
   191c0:	ldp	x22, x21, [sp, #32]
   191c4:	ldr	x23, [sp, #16]
   191c8:	mov	x0, x8
   191cc:	ldp	x29, x30, [sp], #64
   191d0:	ret

00000000000191d4 <xmalloc_set_program_name@@Base>:
   191d4:	stp	x29, x30, [sp, #-32]!
   191d8:	str	x19, [sp, #16]
   191dc:	adrp	x19, 2f000 <xexit@@Base+0x15c60>
   191e0:	ldr	x8, [x19, #2616]
   191e4:	adrp	x9, 2f000 <xexit@@Base+0x15c60>
   191e8:	mov	x29, sp
   191ec:	str	x0, [x9, #2272]
   191f0:	cbnz	x8, 19200 <xmalloc_set_program_name@@Base+0x2c>
   191f4:	mov	x0, xzr
   191f8:	bl	9640 <sbrk@plt>
   191fc:	str	x0, [x19, #2616]
   19200:	ldr	x19, [sp, #16]
   19204:	ldp	x29, x30, [sp], #32
   19208:	ret

000000000001920c <xmalloc_failed@@Base>:
   1920c:	stp	x29, x30, [sp, #-48]!
   19210:	stp	x20, x19, [sp, #32]
   19214:	adrp	x20, 2f000 <xexit@@Base+0x15c60>
   19218:	str	x21, [sp, #16]
   1921c:	ldr	x21, [x20, #2616]
   19220:	mov	x19, x0
   19224:	mov	x0, xzr
   19228:	mov	x29, sp
   1922c:	bl	9640 <sbrk@plt>
   19230:	adrp	x9, 2e000 <xexit@@Base+0x14c60>
   19234:	ldr	x8, [x20, #2616]
   19238:	ldr	x9, [x9, #4000]
   1923c:	adrp	x10, 2f000 <xexit@@Base+0x15c60>
   19240:	ldr	x2, [x10, #2272]
   19244:	adrp	x10, 2e000 <xexit@@Base+0x14c60>
   19248:	cmp	x21, #0x0
   1924c:	ldr	x10, [x10, #3968]
   19250:	csel	x8, x9, x8, eq  // eq = none
   19254:	sub	x5, x0, x8
   19258:	ldrb	w8, [x2]
   1925c:	ldr	x0, [x10]
   19260:	adrp	x9, 19000 <iterative_hash@@Base+0x140>
   19264:	adrp	x10, 19000 <iterative_hash@@Base+0x140>
   19268:	add	x9, x9, #0x5ca
   1926c:	add	x10, x10, #0x677
   19270:	cmp	w8, #0x0
   19274:	adrp	x1, 1a000 <xexit@@Base+0xc60>
   19278:	csel	x3, x10, x9, eq  // eq = none
   1927c:	add	x1, x1, #0x407
   19280:	mov	x4, x19
   19284:	bl	9120 <fprintf@plt>
   19288:	mov	w0, #0x1                   	// #1
   1928c:	bl	9890 <xexit@plt>

0000000000019290 <xmalloc@@Base>:
   19290:	stp	x29, x30, [sp, #-32]!
   19294:	cmp	x0, #0x0
   19298:	str	x19, [sp, #16]
   1929c:	csinc	x19, x0, xzr, ne  // ne = any
   192a0:	mov	x0, x19
   192a4:	mov	x29, sp
   192a8:	bl	9860 <malloc@plt>
   192ac:	cbz	x0, 192bc <xmalloc@@Base+0x2c>
   192b0:	ldr	x19, [sp, #16]
   192b4:	ldp	x29, x30, [sp], #32
   192b8:	ret
   192bc:	mov	x0, x19
   192c0:	bl	9430 <xmalloc_failed@plt>

00000000000192c4 <xcalloc@@Base>:
   192c4:	stp	x29, x30, [sp, #-32]!
   192c8:	cmp	x0, #0x0
   192cc:	cset	w8, eq  // eq = none
   192d0:	cmp	x1, #0x0
   192d4:	cset	w9, eq  // eq = none
   192d8:	orr	w8, w8, w9
   192dc:	cmp	w8, #0x0
   192e0:	stp	x20, x19, [sp, #16]
   192e4:	csinc	x19, x1, xzr, eq  // eq = none
   192e8:	csinc	x20, x0, xzr, eq  // eq = none
   192ec:	mov	x0, x20
   192f0:	mov	x1, x19
   192f4:	mov	x29, sp
   192f8:	bl	9080 <calloc@plt>
   192fc:	cbz	x0, 1930c <xcalloc@@Base+0x48>
   19300:	ldp	x20, x19, [sp, #16]
   19304:	ldp	x29, x30, [sp], #32
   19308:	ret
   1930c:	mul	x0, x20, x19
   19310:	bl	9430 <xmalloc_failed@plt>

0000000000019314 <xrealloc@@Base>:
   19314:	stp	x29, x30, [sp, #-32]!
   19318:	cmp	x1, #0x0
   1931c:	str	x19, [sp, #16]
   19320:	csinc	x19, x1, xzr, ne  // ne = any
   19324:	mov	x29, sp
   19328:	cbz	x0, 19344 <xrealloc@@Base+0x30>
   1932c:	mov	x1, x19
   19330:	bl	92b0 <realloc@plt>
   19334:	cbz	x0, 19350 <xrealloc@@Base+0x3c>
   19338:	ldr	x19, [sp, #16]
   1933c:	ldp	x29, x30, [sp], #32
   19340:	ret
   19344:	mov	x0, x19
   19348:	bl	9860 <malloc@plt>
   1934c:	cbnz	x0, 19338 <xrealloc@@Base+0x24>
   19350:	mov	x0, x19
   19354:	bl	9430 <xmalloc_failed@plt>

0000000000019358 <xstrdup@@Base>:
   19358:	stp	x29, x30, [sp, #-48]!
   1935c:	str	x21, [sp, #16]
   19360:	stp	x20, x19, [sp, #32]
   19364:	mov	x29, sp
   19368:	mov	x19, x0
   1936c:	bl	9110 <strlen@plt>
   19370:	add	x20, x0, #0x1
   19374:	mov	x0, x20
   19378:	bl	9790 <xmalloc@plt>
   1937c:	mov	x1, x19
   19380:	mov	x2, x20
   19384:	mov	x21, x0
   19388:	bl	8fb0 <memcpy@plt>
   1938c:	mov	x0, x21
   19390:	ldp	x20, x19, [sp, #32]
   19394:	ldr	x21, [sp, #16]
   19398:	ldp	x29, x30, [sp], #48
   1939c:	ret

00000000000193a0 <xexit@@Base>:
   193a0:	stp	x29, x30, [sp, #-32]!
   193a4:	str	x19, [sp, #16]
   193a8:	adrp	x8, 2e000 <xexit@@Base+0x14c60>
   193ac:	ldr	x8, [x8, #3200]
   193b0:	mov	w19, w0
   193b4:	mov	x29, sp
   193b8:	ldr	x8, [x8]
   193bc:	cbz	x8, 193c4 <xexit@@Base+0x24>
   193c0:	blr	x8
   193c4:	mov	w0, w19
   193c8:	bl	99b0 <exit@plt>

Disassembly of section .fini:

00000000000193cc <.fini>:
   193cc:	stp	x29, x30, [sp, #-16]!
   193d0:	mov	x29, sp
   193d4:	ldp	x29, x30, [sp], #16
   193d8:	ret
